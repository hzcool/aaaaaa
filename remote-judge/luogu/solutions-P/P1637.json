[
    {
        "content": "## \u8fd9\u9053\u9898\u53ef\u4ee5\u62d3\u5c55\u5230M\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n## \u505a\u6cd5: DP + \u6811\u72b6\u6570\u7ec4\u4f18\u5316\n\n\u4eff\u7167$LIS$\u7684\u505a\u6cd5\uff0c\u8bbe$f[i][j]$\u4e3a\u4ee5$a[j]$\u4e3a\u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3a$i$\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u3002\n\n\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$f[i][j] = {\\sum_{k<j,a[k]<a[j]}}f[i-1][k]$\n\n\u8f6c\u79fb\u65f6\u66b4\u529b\u679a\u4e3e\uff0c\u663e\u7136\u590d\u6742\u5ea6\u4e3a$O(N^{2}M)$\n\n\u8003\u8651\u5230k\u6709\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\uff0c$k<j$\u548c$a[k]<a[j]$\uff0c\u53ef\u4ee5\u5148\u5c06$a[]$\u79bb\u6563\u5316\uff0c\u518d\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u5916\u5c42\u5faa\u73af$i$\uff0c\u5efa\u7acb\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4ee5$a[k]$\u4e3a\u4e0b\u6807\u5b58\u50a8$f[i-1][k]$\u7684\u503c\u3002\u5f53\u5185\u5c42\u5faa\u73af\u5230$j$\u65f6\uff0c$f[i][j]+=ask(a[j]-1)$\uff0c\u7136\u540e\u5728\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a$j$\u4e4b\u524d$add(a[j],f[i-1][j])$\u3002\n$j$\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u4fdd\u8bc1\u4e86$k<j$\uff0c\u67e5\u8be2$f[i-1][j-1]$\u7684\u524d\u7f00\u548c\u4fdd\u8bc1\u4e86$a[k]<a[j]$\u3002\n\n\u590d\u6742\u5ea6$O(NMlogN)$\u3002\n\n\n\n~~\u53cc\u500d\u7ecf\u9a8c\uff1aUVA12983~~\n\n$CODE:$\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nll n, a[30010], s[30010], m, f[4][30010], c[60010], ans;\nll val(int x) { return lower_bound(s+1, s+m+1, x) - s; }\nll ask(int x, ll sum = 0) {\n\tfor(; x; x -= (x & (-x))) sum += c[x];\n\treturn sum;\n}\nvoid add(int x, ll v) { for(; x <= m; x += (x & (-x))) c[x] += v; }\nint main() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) cin >> a[i],  s[i] = a[i];\n\tsort(s+1, s+n+1);\n\tm = unique(s+1, s+n+1) - s - 1;\n\tfor(int i = 1; i <= n; i++) f[1][i] = 1, a[i] = val(a[i]);\n\tfor(int i = 2; i <= 3; i++) {\n\t\tmemset(c, 0, sizeof(c));\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tf[i][j] = ask(a[j]-1);\n\t\t\tadd(a[j], f[i-1][j]);\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++) ans += f[3][i];\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1553346189,
        "uid": 64261,
        "name": "\u7d2b\u9898",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a**\u4e09\u5143**\u7684\u4e0a\u5347\u5e8f\u5217\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u5b50\u5e8f\u5217**\u679a\u4e3e\u4e2d\u95f4\u7684\u5143\u7d20**\u3002\n\n------------\n\n### \u6211\u4eec\u8bb0\n- Lef[i]\u4e3a A[i]\u5de6\u8fb9**\u5c0f\u4e8e**A[i]\u7684\u5143\u7d20**\u4e2a\u6570**\n- Rit[i]\u4e3a A[i]\u53f3\u8fb9**\u5927\u4e8e**A[i]\u7684\u5143\u7d20**\u4e2a\u6570**\n\n------------\n\n### \u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6709\uff1a\n- **\u4ee5A[i]\u4e3a\u4e2d\u95f4\u5143\u7d20**\u7684\u5408\u6cd5\u5e8f\u5217\u4e2a\u6570\u4e3a**Lef[i]*Rit[i]**\n\n------------\n### \u5982\u4f55\u5f97\u5230Lef[] \u548cRit[] \u6570\u7ec4\u5462\uff1f\uff08\u4ee5Lef\u4e3a\u4f8b\uff09\n\n\u5982\u679c\u6211\u4eec\u5728\u679a\u4e3e\u4e2d\u95f4\u5143\u7d20A[i]\u7684\u8fc7\u7a0b\u4e2d\u518d\u6b21\u904d\u5386A[0],A[1]...A[i-1]\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u8fbe\u5230O(n^2)\uff0c\u663e\u7136\u8d85\u65f6\u3002\n\n\u6362\u4e00\u79cd\u601d\u8def\uff1a\n\u201c\u5728i\u524d\uff08\u4e0d\u542b\uff09**\u5c0f\u4e8e**A[i]\u7684\u5143\u7d20\u6570\u91cf\u548c\u201d **\u7b49\u4ef7\u4e8e**\n\u201c\u5728i\u524d\uff08\u4e0d\u542b\uff09**\u5c0f\u4e8e\u7b49\u4e8e**A[i]\u7684\u5143\u7d20\u6570\u91cf\u548c\u51cf\u53bbA[i]\uff08\u8fd9\u4e2a\u6570\u503c\uff09\u51fa\u73b0\u7684\u6b21\u6570\u201d\u3002\n\n\u867d\u7136\u8fd9\u79cd\u8bf4\u6cd5\u4ee4\u4eba\u611f\u5230\u83ab\u540d\u5176\u5999\uff0c\u4f46\u5b83\u6216\u8bb8\u53ef\u4ee5\u542f\u793a\u6211\u4eec\u7684\u540c\u5b66\u8054\u60f3\u5230\u201c\u524d\u7f00\u548c\u201d\u3002\n\u524d\u7f00\u548c\u7684\u601d\u8def\u3001\u201c\u9006\u5e8f\u5bf9\u201d\u7684\u76ee\u6807\u8fdb\u4e00\u6b65\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u3002\u6309\u5218\u6c5d\u4f73\u5927\u795e\u7684\u8bf4\u6cd5\uff0c\u201c\u52a8\u6001\u66f4\u65b0\u5e76\u6c42\u89e3\u524d\u7f00\u548c\uff0c\u6b63\u662f\u6811\u72b6\u6570\u7ec4\u7684\u6807\u51c6\u7528\u6cd5\u201d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4c[val]\u8bb0\u5f55**\u5df2\u7ecf\u88ab\u8003\u8651**\u7684\u6570\u4e2d\u5c0f\u4e8e\u7b49\u4e8eval\u7684\u4e2a\u6570\uff0c\u521d\u59cb\u5316\u4e3a0\uff0c\u6bcf\u6b21\u66f4\u65b0\u65f6\uff0c\u8c03\u7528add(A[i],1)\u3002\n\n------------\n\n\u5728\u672c\u9898\u4e2d\uff0cA[i]<=INT_MAX\uff0c\u76f4\u63a5\u5b9a\u4e49\u6811\u72b6\u6570\u7ec4c[INT_MAX]\u663e\u7136\u5931\u667a\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8**\u79bb\u6563\u5316**\u5904\u7406\u3002\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u79bb\u6563\u5316\u7edd\u5bf9\u6bd4\u5176\u4ed6\u201c\u4e0d\u7528\u79bb\u6563\u201d\u7684\u65b9\u6cd5\u5bb9\u6613\u60f3\u5230\uff0c\u5982\u679c\u662f\u5728\u8003\u573a\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u8f7b\u8f66\u719f\u8def\u5730\u7528\u79bb\u6563\u6765\u5904\u7406\u8fd9\u9053\u9898\u76ee\u3002\n\n------------\n\nPOJ3928\u548c\u672c\u9898\u662f\u7c7b\u4f3c\u7684\uff0c\u4e0d\u8fc7\u90a3\u4e00\u9898\u66f4\u52a0\u53cb\u5584\u2014\u2014\u4fdd\u8bc1\u4efb\u610fA[i]\u4e0d\u540c\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e0d\u5fc5\u79bb\u6563\u5904\u7406\u7684A[i]\u8303\u56f4\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5728\u90a3\u4e00\u9898\u4e0a\u52a0\u5f3a\u7ec3\u4e60\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=3e4+10;\nint n,m;\nint c1[maxn],c2[maxn];//double_tree_arr\nint A[maxn],_A[maxn];//discrete_arr\nint Lef[maxn],Rit[maxn];//Counter\n\ninline int _Q(int val){//\u67e5\u8be2A[i]\u5bf9\u5e94\u7684\u6620\u5c04\u503c \n\treturn lower_bound(_A+1,_A+m+1,val)-_A;\n}\n\ninline int lowbit(int i){\n\treturn i&(-i);\n}\n\nvoid add(int *C,int pos,int val){\n\twhile(pos<=maxn){\n\t\tC[pos]+=val;\n\t\tpos+=lowbit(pos);\n\t}\n}\n\nint sum(int *C,int pos){\n\tint res=0;\n\twhile(pos>0){\n\t\tres+=C[pos];\n\t\tpos-=lowbit(pos);\n\t}\n\treturn res;\n}\n//\u4ee5\u4e0a\u662f\u6811\u72b6\u6570\u7ec4\u6a21\u677f\uff0c\u5728\u51fd\u6570\u91cc\u4ee5\u6570\u7ec4\u6307\u9488\u4f5c\u53c2\u6570 \nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&A[i]);\n\t\t_A[i]=A[i];\n\t}\n\tsort(_A+1,_A+n+1);\n\tm=unique(_A+1,_A+n+1)-(_A+1);\n\t//\u5c0f\u7ec6\u8282\uff0c\u6211\u4eec\u5e0c\u671b\u6620\u5c04\u503c\u5728i...3e4\u4e4b\u95f4\uff0c\u6240\u4ee5\u9700\u8981\u51cf\u53bb_A+1 \n\t//discrete\n\tfor(int i=1;i<=n;++i){\n\t\tadd(c1,_Q(A[i]),1);\n\t\tLef[i]=sum(c1,_Q(A[i])-1);\n        //\u201c\u51cf\u53bbA[i]\u51fa\u73b0\u4e2a\u6570\u201d\u7684\u9690\u5f0f\u4f53\u73b0\uff0c\u5c31\u662f\u6211\u4eec\u53ea\u8ba1\u7b97\u201cA[i]-1\uff08\u6620\u5c04\u610f\u4e49\u4e0a\uff09\u201d\u7684\u51fa\u73b0\u4e2a\u6570\n\t}\n\tfor(int i=n;i>=1;--i){\n\t\tadd(c2,_Q(A[i]),1);\n\t\tRit[i]=n-i-(sum(c2,_Q(A[i]))-1);\n\t\t//\u5c0f\u7ec6\u8282\uff0c\u8ba1\u7b97Rit\u65f6\u9700\u8981\u6ce8\u610f\u8868\u8fbe\u5f0f\u4e0eLef\u4e0d\u540c \n\t}\n\tlong long ans=0;\n\tfor(int i=2;i<n;++i) ans+=Lef[i]*Rit[i];\n\t//\u201c\u4e58\u6cd5\u539f\u7406\u201d\u7684\u663e\u5f0f\u4f53\u73b0 \n\tcout<<ans;\n\treturn 0;\n}\n\n```\n### \u6700\u540e\u603b\u7ed3\u4e00\u4e0b\u7a0b\u5e8f\u5b9e\u73b0\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u7ec6\u8282\n- A[i]\u6700\u6709\u591amaxn=3e4\u4e2a\u4e0d\u540c\u7684\u6570\u503c\uff0c\u79bb\u6563\u540e\u6700\u5927\u7684\u6620\u5c04\u503c\u4e5f\u4e0d\u8d85\u8fc73e4\uff1b\u6211\u4eec\u7684\u6811\u72b6\u6570\u7ec4\u5e94\u4ee5max{A[i]}\u4f5c\u4e3a\u4e0b\u6807\u4e0a\u754c\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4f7f\u7528maxn\u4f5c\u4e3a\u4e0b\u6807\u4e0a\u754c\u3002\n\n- \u672c\u4eba\u5728\u7a0b\u5e8f\u91cc\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4c1\uff0cc2\uff0c\u5e76\u5728\u6811\u72b6\u6570\u7ec4\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u7528\u53c2\u6570\u5c06\u5b83\u4eec\u533a\u5206\u5f00\u6765\uff0c\u5982\u679c\u53ea\u60f3\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u8bdd\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5728\u987a\u3001\u9006\u4e24\u6b21\u904d\u5386\u4e4b\u95f4\u6e05\u7a7a\u6570\u7ec4\u3002\n\n- \u56e0\u4e3a\u6211\u4eec\u7684\u6811\u72b6\u6570\u7ec4\u53ea\u80fd\u6c42\u89e3\u201c\u5c0f\u4e8e\uff08\u7b49\u4e8e\uff09\u201d\u7684\u6570\u91cf\uff0c\u6240\u4ee5Lef\u548cRit\u7684\u8ba1\u7b97\u5fc5\u987b\u5206\u5f00\u3002\n\n- \u540c\u6837\u662f\u7531\u4e8e\u4e0a\u4e00\u6761\u539f\u56e0\uff0c\u51fd\u6570sum\u5728\u9006\u5e8f\u65f6\u8ba1\u7b97\u51fa\u6765\u7684\u5176\u5b9e\u662f\u201ci+1...n\u4e2d\u5c0f\u4e8e\u7b49\u4e8eA[i]\u7684\u5143\u7d20\u4e2a\u6570\u201d\uff0c\u6211\u4eec\u628a\u5b83\u8bb0\u4e3aK\u3002\u90a3\u4e48\u5728i+1...n\u8fd9n-i\u4e2a\u6570\u5b57\u4e2d\uff0c\u201c\u5c0f\u4e8e\u7b49\u4e8eA[i]\u201d\u7684\u6570\u5b57\u51fa\u73b0\u7684\u4e2a\u6570\u5176\u5b9e\u662fK-1\u4e2a\uff08\u56e0\u4e3a\u5728\u4f4d\u7f6ei\u7684A[i]\u4e0d\u5e94\u88ab\u7b97\u8fdb\u53bb\uff09\uff0c\u800c\u8fd9\u4e9b\u6570\u5e76\u4e0d\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c\u4e8e\u662f\uff0c(n-i)-(K-1)\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684Rit[i]\u7684\u503c\u4e86\u3002\n",
        "postTime": 1521967505,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "##\u770b\u5230\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u7684\u89e3\u6cd5,\u8fd9\u91cc\u53d1\u7bc7\u7ebf\u6bb5\u6811\u7684\u9898\u89e3,\u5e0c\u671b\u5bf9\u50cf\u6211\u4e00\u6837\u521d\u5b66\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u6709\u5e2e\u52a9.\n\n\u5f88\u5bb9\u6613\u60f3\u5230 **\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570=\u6bcf\u4e2a\u6570\u524d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\\*\u6bcf\u4e2a\u6570\u540e\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570 \u4e4b\u548c**\n\n\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 \u6bcf\u4e2a\u6570\u524d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570 \u548c \u6bcf\u4e2a\u6570\u540e\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570 \u5e76\u8bb0\u5f55\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e86,\n\n\u90a3\u4e48\u600e\u6837\u7528\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\u5462\uff1f\u4ee5\u4e00\u7ec4\u6570\u636e An={ 1,4,5,3 } \u4e3a\u4f8b:\n\n- \u9996\u5148\u6211\u4eec\u5f00\u4e2a\u6876sum[n]\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570,\u90a3\u4e48\u4e00\u5f00\u59cb\u8fd9\u4e2a\u6876\u5c31\u662f 0 0 0 0 0\n\n- \u63d2\u5165A1=1\uff0c\u6b64\u65f6\u7684\u6876\u4e3a 1 0 0 0 0 ,\u67e5\u8be2A1\u524d\u6709\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\uff1a 1 0 0 0 0,\u597d\u5427\u4e00\u4e2a\u90fd\u6ca1\u6709,\u8bb0smaller[1]=0;\n\n- \u63d2\u5165A2=4\uff0c\u6b64\u65f6\u7684\u6876\u4e3a 1 0 0 1 0 ,\u67e5\u8be2A2\u524d\u6709\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\uff1a(1 0 0)1 0,\u53d1\u73b0\u6b64\u65f61\u6bd44\u5c0f,smaller[2]=1;\n\n- \u63d2\u5165A3=5\uff0c\u6b64\u65f6\u7684\u6876\u4e3a 1 0 0 1 1 ,\u67e5\u8be2A3\u524d\u6709\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\uff1a(1 0 0 1)1,\u53d1\u73b0\u6b64\u65f61,4\u6bd45\u5c0f,smaller[3]=2;\n\n- \u63d2\u5165A4=3\uff0c\u6b64\u65f6\u7684\u6876\u4e3a 1 0 1 1 1 ,\u67e5\u8be2A4\u524d\u6709\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\uff1a(1 0)1 1 1,\u53d1\u73b0\u6b64\u65f61\u6bd43\u5c0f,smaller[4]=1;\n\n\u6309\u4e0a\u9762\u7684\u64cd\u4f5c\u6b65\u9aa4,\u5373\u6bcf\u6b21\u66f4\u65b0,\u5c06sum[A[n]]+1,\u7136\u540esum[1]~sum[A[n]-1]\u7684\u548c\u5373\u662fsmall[n]\u7684\u503c,\u8fd9\u4e5f\u662f**\u7528\u7ebf\u6bb5\u6811\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5**\n\n\u90a3\u4e48\u7528\u540c\u6837\u7684\u65b9\u6cd5\u6c42\u51fa\u6240\u6709\u6570\u540e\u6bd4\u5b83\u5927\u7684\u6570,\u5f97\u5230bigger[1~4],\u6700\u540e**ans=ans+smaller[i]\\*bigger[i],1<=i<=4**\n\n\u5f53\u7136\u5982\u679c\u6570\u636e\u7684\u95f4\u9694\u5f88\u5927,\u6bd4\u5982 99 1 9999 999999 99999999999 \u6211\u4eec\u5f53\u7136\u6ca1\u5fc5\u8981\u5f00\u90a3\u4e48\u5927\u7684\u6876,\u8bb0\u4f4f\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u5373\u53ef:2 1 3 4 5\n\n\u8fd9\u79cd\u64cd\u4f5c\u5c31\u662f**\u79bb\u6563\u5316**\u5566\u3002\n\n**\u8be6\u7ec6\u89c1\u4ee3\u7801:**\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 30001\n#define ls root<<1,l,mid\n#define rs root<<1|1,mid+1,r\n#define in(x) x=read()\n\nusing namespace std;\n\ninline int read()\n{\n    int X=0,w=1;char ch=getchar();\n    while(ch>'9' || ch<'0'){if(ch=='-') w=-1;ch=getchar();}\n    while(ch<='9' && ch>='0') X=(X<<3)+(X<<1)+ch-'0',ch=getchar();\n    return X*w;\n}\n\nstruct data\n{\n    int num,pos;\n}st[MAXN];\nint n,cnt;\nint sum[MAXN<<2],num[MAXN],bigger[MAXN],smaller[MAXN];\nlong long ans;\n\ninline void push_up(int root)\n{\n    sum[root]=sum[root<<1]+sum[root<<1|1];\n}\n\ninline void update(int root,int l,int r,int pos)\n{\n    if(l==r && l==pos){sum[root]++;return;}\n    int mid=(l+r)>>1;\n    if(mid>=pos) update(ls,pos);\n    if(mid<pos) update(rs,pos);\n    push_up(root);\n}\n\ninline int query(int root,int l,int r,int L,int R)\n{\n    if(L<=l && r<=R) return sum[root];\n    int mid=(l+r)>>1,total=0;\n    if(mid>=L) total+=query(ls,L,R);\n    if(mid<R) total+=query(rs,L,R);\n    return total; \n}\n\ninline bool mcomp(const data &a,const data &b)\n{\n    return a.num<b.num;\n}\n\nint main()\n{\n    in(n);\n    for(int i=1;i<=n;i++) in(st[i].num),st[i].pos=i;\n    sort(st+1,st+n+1,mcomp);\n    for(int i=1;i<=n;i++) \n    {\n        if(st[i].num>st[i-1].num) cnt++;\n        num[st[i].pos]=cnt; \n    }\n    //\u79bb\u6563\u5316,\u6ce8\u610f\u4e24\u4e2a\u6570\u76f8\u540c\u7684\u60c5\u51b5 \n    for(int i=1;i<=n;i++)\n    {\n        if(num[i]>1) smaller[i]=query(1,1,n,1,num[i]-1);\n        update(1,1,n,num[i]);\n    }\n    //\u67e5\u8be2\u4e00\u4e2a\u6570\u524d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n    memset(sum,0,sizeof(sum));\n    //\u6ce8\u610f\u6e05\u7a7asum\u6570\u7ec4 \n    for(int i=n;i>=1;i--)\n    {\n        if(num[i]<n) bigger[i]=query(1,1,n,num[i]+1,n);\n        update(1,1,n,num[i]);\n    }\n    //\u67e5\u8be2\u4e00\u4e2a\u6570\u540e\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570 \n    for(int i=1;i<=n;i++) ans+=(bigger[i]*smaller[i]);\n    //\u4e58\u6cd5\u539f\u7406 & \u52a0\u6cd5\u539f\u7406 \n    printf(\"%lld\",ans);\n    return 0;\n}\n//By windows250\n```",
        "postTime": 1508893480,
        "uid": 35065,
        "name": "windows250",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1637)\n------------\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\u9996\u5148\u5e94\u679a\u4e3e\u4e2d\u95f4\u7684\u6570j\uff0c\u5982\u679c\u77e5\u9053\u4e86\u4e2d\u95f4\u6570j\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570(i\u7684\u4e2a\u6570)\uff0c\u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570(k\u7684\u4e2a\u6570)\uff0c\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u4e58\u5373\u4e3a\u4e2d\u95f4\u6570j\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u679a\u4e3e\u590d\u6742\u5ea6\u4e3aO(n)\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u6570\u7ec4l[i],r[i],\u5206\u522b\u8868\u793a\u5bf9\u4e8e\u4e2d\u95f4\u6570i,\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u548c\u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\n\n\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u6765\u505a\n\n\u9996\u5148\u6765\u770b\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\n\n\u6811\u72b6\u6570\u7ec4\u7684\u529f\u80fd\u4e3a\u7528O(logn)\u7684\u590d\u6742\u5ea6\u6c42\n\n1.\u5bf9\u4e8ea\u6570\u7ec4\uff0c\u67e5\u8be2a[1]+a[2]+\u2026\u2026\u2026\u2026+a[i],\u4e5f\u5c31\u662f\u6c421~i\u7684\u524d\u7f00\u548c\n\n2.\u5c06\u7b2ci\u4e2a\u6570\u52a0\u4e0ax,\u4e5f\u5c31\u662fa[i]+=x\n\n\u5982\u56fe\n![](https://cdn.luogu.com.cn/upload/pic/54623.png)\n\nc\u6570\u7ec4\u4e3a\u6811\u72b6\u6570\u7ec4\uff0c\u73b0\u5728\u5148\u627e\u5230\u6c42c[i]\u7684\u65b9\u6cd5\n\n\u9996\u5148c[i]=a\u6570\u7ec4\u4ece\u67d0\u4e00\u4e2a\u8d77\u70b9\u4e00\u76f4\u52a0\u5230\u7ec8\u70b9\n\n\u89c2\u5bdf\u56fe\u7247\uff0c\u7ec8\u70b9\u4e3aa[i],\u53ea\u8981\u77e5\u9053\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5c31\u53ef\u77e5\u9053\u8d77\u70b9\n\n\u89c2\u5bdf\u5de6\u9762i\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u53d1\u73b0\u5e8f\u5217\u957f\u5ea6\u4e3a2^\uff08i\u4e8c\u8fdb\u5236\u672b\u5c3e\u8fde\u7eed0\u7684\u4e2a\u6570\uff09\n\n\u5982\u4f55\u6c422^\uff08i\u4e8c\u8fdb\u5236\u672b\u5c3e\u8fde\u7eed0\u7684\u4e2a\u6570\uff09\n\n\u4e0b\u9762\u5f15\u5165lowbit()\n![](https://cdn.luogu.com.cn/upload/pic/54624.png)\n\nlowbit(i)=i&(-i)=2^\uff08i\u4e8c\u8fdb\u5236\u672b\u5c3e\u8fde\u7eed0\u7684\u4e2a\u6570\uff09\n\n\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a\n\ni\u7684\u4e8c\u8fdb\u5236\u53ef\u8868\u793a\u4e3a011010...(\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f)|1(\u4ece\u53f3\u6570\u7b2c\u4e00\u4e2a1)|0000...(n\u4e2a0)\n\n\u8fd9\u662fi\u7684\u539f\u7801,i\u7684\u53cd\u7801\u4e3a~i:\n\n100101...(\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u53cd\u8fc7\u6765)|0(\u4ece\u53f3\u6570\u7b2c\u4e00\u4e2a0)|1111...(n\u4e2a1)\n\ni\u7684\u8865\u7801\u4e3a-i,\u7b49\u4e0e\u53cd\u7801+1\uff1a\n\n100101...(\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u53cd\u8fc7\u6765)|1(\u4ece\u53f3\u6570\u7b2c\u4e00\u4e2a1)|0...(n\u4e2a0)\n\n+1\u4f7f\u5f97\u540e\u9762\u8fde\u7eed\u76841\u8fdb\u4f4d\uff0c\u628a\u4ece\u53f3\u6570\u7b2c\u4e00\u4e2a0\u53d8\u6210\u4e861\n\n\u6240\u4ee5i&(-i)=\n\n000...(\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f&\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u53cd\u8fc7\u6765=0)|1(\u4ece\u53f3\u6570\u7b2c\u4e00\u4e2a1)|0...(n\u4e2a0)\n\n=1|0...(n\u4e2a0)=2^\uff08i\u4e8c\u8fdb\u5236\u672b\u5c3e\u8fde\u7eed0\u7684\u4e2a\u6570\uff09\n\n\u8fd9\u6837c[i]=a[i-lowbit(i)+1]+a[i-lowbit(i)+2]+\u2026\u2026\u2026\u2026+a[i]\n\n\u63a5\u7740\u770b\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u67e5\u8be2\u64cd\u4f5c\n\n```cpp\nll query(ll x)\n{\n    ll ans;\n    ans=0;\n    while(x>0)\n    {\n        ans+=sqt[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\n```\n\u5176\u4e2d #define ll long long\n\nsqt\u4e3a\u6811\u72b6\u6570\u7ec4,\u67e5\u8be21~x\u7684\u524d\u7f00\u548c\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53x=6\u65f6\uff0c1~6\u7684\u524d\u7f00\u548c=1~4+5~6=sqt[4]+sqt[6]\n\n4\u6b63\u597d\u4e3a6-lowbit(6)=110-10=100\n\n\u6240\u4ee5\u67e5\u8be2\u524d\u7f00\u548c\u7684\u5b9e\u73b0\u5c31\u662f\u4e0d\u65ad\u7684\u5c06x-=lowbit(x),\u5e76\u5c06sqt[x]\u52a0\u5165\u7b54\u6848\u8d21\u732e\n\n\u4fee\u6539\u5373\u4e3a\u67e5\u8be2\u9006\u64cd\u4f5c\n\n```cpp\nvoid add(ll x,ll val)\n{\n    while(x<=cmax)\n    {\n        sqt[x]+=val;\n        x+=lowbit(x);\n    }\n}\n```\n\u4e0d\u65ad\u5c06x+=lowbit(x),\u5e76\u4fee\u6539sqt[x]\u7684\u503c\n\n\u545c\u547c\uff0c\u7ec8\u4e8e\u628a\u6811\u72b6\u6570\u7ec4\u8bf4\u5b8c\u4e86\uff0c\u73b0\u5728\u8bf4\u4e00\u4e0b\u79bb\u6563\u5316\n\n```cpp\n    read(n);\n    for(i=1;i<=n;i++)\n    {\n        read(a[i]);\n        a1[i]=a[i];\n    }\n    sort(a1+1,a1+1+n);\n    m=unique(a1+1,a1+1+n)-(a1+1);\n```\na1\u6570\u7ec4\u4e3a\u79bb\u6563\u5316\u6570\u7ec4\uff0ca\u4e3a\u9898\u4e2d\u6570\u7ec4\n\nsort\u4e3a\u6392\u5e8f\u51fd\u6570\uff0cunique\u4e3a\u53bb\u91cd\u51fd\u6570\uff0c\u4ec5\u9650\u5728\u6709\u5e8f\u7684\u6570\u7ec4\u4e2d\u4f7f\u7528\n\nunique\u8fd4\u56de\u53bb\u91cd\u540e\u6570\u7ec4\u672b\u5c3e\u5730\u5740\u7684\u4e0b\u4e00\u4f4d\uff0c\u6240\u4ee5\u8981\u51cf(a1+1)\uff0cm\u4e3a\u53bb\u91cd\u540e\u6570\u7ec4\u957f\u5ea6\n\n```cpp\ninline ll Q(ll val)\n{\n    return lower_bound(a1+1,a1+1+m,val)-a1;\n}\n```\nQ\u7684\u4f5c\u7528\u662f\u5bf9\u4e8eval,\u8fd4\u56de\u5b83\u7684\u79bb\u6563\u5316\u503c\uff0c\u5373\u4e3aval\u5728\u79bb\u6563\u5316\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\n\nlower_bound\u4e3a\u4e8c\u5206\u67e5\u627eval,\u8fd4\u56de\u5176\u5730\u5740\n\n\u79bb\u6563\u5316\u548c\u6811\u72b6\u6570\u7ec4\u90fd\u8bb2\u5b8c\u4e86\uff0c\u73b0\u5728\u628a\u4e8c\u8005\u5408\u4e8c\u4e3a\u4e00\uff0c\u6743\u503c\u6811\u72b6\u6570\u7ec4\u8bde\u751f\u4e86\n\n\u5bf9\u4e8e\u5e8f\u52171 2 2 3 5\n\n\u79bb\u6563\u5316\u540e1->1 2->2 3->3 5->4\uff0c\u8fd9\u662f\u5b83\u4eec\u7684\u79bb\u6563\u5316\u503c\n\n\u73b0\u5728\u521b\u5efa\u4e00\u4e2a\u5e8f\u5217\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\n\n\u503c\uff1a1 1 1 2\n\n\u4e0b\u6807\uff1a1 2 3 4(\u4e0b\u6807\u4e3a\u5bf9\u5e94\u7684\u79bb\u6563\u5316\u503c)\n\n\u73b0\u5728\u7ec8\u4e8e\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u79bb\u6563\u5316\u4e86\u5427\uff0c\u79bb\u6563\u5316\u503c\u6700\u5927\u4e3an\uff0c\u6570\u7ec4\u4e0b\u6807\u6700\u5927\u4e5f\u4e3an\n\n\u4e0d\u79bb\u6563\u5316\u6570\u5b57\u5f88\u5927\uff0c\u76f4\u63a5\u4f5c\u4e3a\u4e0b\u6807\u70b8\u7a7a\u95f4\n\n\u518d\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u7684\u524d\u7f00\u548c\uff0c\u8fd9\u5c31\u662f\u6743\u503c\u6811\u72b6\u6570\u7ec4\n\n\u6743\u503c\u6811\u72b6\u6570\u7ec4\u662f\u7528\u6765\u7ef4\u62a4a\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u7684\u524d\u7f00\u548c\n\n\u7ec8\u4e8e\u53ef\u4ee5\u7528O(nlogn)\u7684\u590d\u6742\u5ea6\u6c42l[i]\u548cr[i]\u4e86\n\n```cpp\n    for(i=1;i<=n;i++)\n    {\n        add(Q(a[i]),1);\n        l[i]=query(Q(a[i])-1);\n    }\n    memset(sqt,0,sizeof(sqt));\n    for(i=n;i>=1;i--)\n    {\n        add(Q(a[i]),1);\n        r[i]=n-i-(query(Q(a[i]))-1);\n    }\n```\n\u5148\u770bl\u6570\u7ec4\uff0ci\u4ece1\u5230n\u679a\u4e3e\uff0c\u4fdd\u8bc1\u4e86\u5de6\u9762\u7684\u4e0b\u6807\u6bd4\u4e2d\u95f4\u6570\u5c0f\n\n\u628aa[i]\u7684\u79bb\u6563\u5316\u503c\u52a0\u5165\u6743\u503c\u6811\u72b6\u6570\u7ec4\n\n\u67e5\u8be21~a[i-1]\u4e2d\u503c\u6bd4a[i]\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1aa\u6570\u7ec4 6 2 2 1 5\n\n\u4ee55\u4e3a\u4e2d\u95f4\u6570\uff0c\u52196,2,2,1,5\u5747\u52a0\u5165\u6743\u503c\u6811\u72b6\u6570\u7ec4\n\n\u6b64\u65f6\u51fa\u73b0\u6b21\u6570\u7684\u6570\u7ec4\u4e3a 1(1) 2(2) 1(5) 1(6)\n\n\u6c421~2\u7684\u524d\u7f00\u548c\u4e3a3\uff0c\u4ee55\u4e3a\u4e2d\u95f4\u6570\uff0c\u5de6\u8fb9\u6709\u4e09\u4e2a\u6570\u6bd4\u5b83\u5c0f\n\nr\u6570\u7ec4\u540c\u7406\uff0ci\u4ecen\u52301\u679a\u4e3e\uff0c\u4fdd\u8bc1\u4e86\u53f3\u9762\u7684\u4e0b\u6807\u6bd4\u4e2d\u95f4\u6570\u5927\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1aa\u6570\u7ec4 6 2 2 1 5\n\n\u4ee5\u5de6\u9762\u76842\u4e3a\u4e2d\u95f4\u6570\uff0c\u52195,1,2,2\u5747\u52a0\u5165\u6743\u503c\u6811\u72b6\u6570\u7ec4\n\n\u6b64\u65f6\u51fa\u73b0\u6b21\u6570\u7684\u6570\u7ec4\u4e3a 1(1) 2(2) 1(5) 0(6)\n\n\u6c421~2\u7684\u524d\u7f00\u548c\u4e3a3\uff0c\u4e5f\u5c31\u662f\u53f3\u9762(\u56e0\u4e3ai\u4ecen\u52301\u679a\u4e3e)\u5c0f\u4e8e\u7b49\u4e8e2\u7684\u6570\u7684\u6b21\u6570\u4e3a3\n\n\u6240\u4ee5\u75282\u53f3\u9762\u5e8f\u5217\u957f\u5ea6-\u53f3\u9762\u5c0f\u4e8e\u7b49\u4e8e2\u7684\u6570\u7684\u6b21\u6570=\u53f3\u9762\u5927\u4e8e2\u7684\u6570\u7684\u6b21\u6570\n\n\u6240\u4ee5 r[i]=n-i-(query(Q(a[i]))-1)=n-i+1-query(Q(a[i])\n\n\u5176\u4e2dn-i+1\u4e3ai\u53f3\u9762\u5e8f\u5217\u957f\u5ea6,query(Q(a[i])\u4e3a\u53f3\u9762\u5c0f\u4e8e\u7b49\u4e8ei\u7684\u6570\u7684\u6b21\u6570\n\n\u5904\u7406\u597d\u4e86l\u548cr\u6570\u7ec4\uff0c\u6700\u540ei\u4ece2~n-1\u679a\u4e3e\uff0cans+=l[i]*r[i]\u5373\u53ef\n\n\u52a0\u8bfb\u5165\u4f18\u5316\u66f4\u5feb\u54e6\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst ll cmax=310000;\nll sqt[cmax];\nll a[cmax],a1[cmax];\nll m;\nll l[cmax],r[cmax];\nvoid read(ll &x)\n{\n    x=0;\n    ll f;\n    f=1;\n    char c;\n    c=getchar();\n    while((c<'0'||c>'9')&&(c!='-'))\n    {\n        c=getchar();\n    }\n    if(c=='-')\n    {\n        f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<3)+(x<<1)+(c^48);\n        c=getchar();\n    }\n    x=x*f;\n}\ninline ll lowbit(ll x)\n{\n    return x&(-x);\n}\nvoid add(ll x,ll val)\n{\n    while(x<=cmax)\n    {\n        sqt[x]+=val;\n        x+=lowbit(x);\n    }\n}\nll query(ll x)\n{\n    ll ans;\n    ans=0;\n    while(x>0)\n    {\n        ans+=sqt[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\ninline ll Q(ll val)\n{\n    return lower_bound(a1+1,a1+1+m,val)-a1;\n}\nint main()\n{\n    ll n,i;\n    read(n);\n    for(i=1;i<=n;i++)\n    {\n        read(a[i]);\n        a1[i]=a[i];\n    }\n    sort(a1+1,a1+1+n);\n    m=unique(a1+1,a1+1+n)-(a1+1);\n    for(i=1;i<=n;i++)\n    {\n        add(Q(a[i]),1);\n        l[i]=query(Q(a[i])-1);\n    }\n    memset(sqt,0,sizeof(sqt));\n    for(i=n;i>=1;i--)\n    {\n        add(Q(a[i]),1);\n        r[i]=n-i-(query(Q(a[i]))-1);\n    }\n    ll ans;\n    ans=0;\n    for(i=2;i<n;i++)\n    {\n        ans+=l[i]*r[i];\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1553163743,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u63d0\u9ad8+\u7701\u9009-\u4e13\u9898[\u6811\u72b6\u6570\u7ec4][\u79bb\u6563\u5316]\uff1aP1637 \u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217"
    },
    {
        "content": "# \u975e\u79bb\u6563\u5316\u6811\u72b6\u6570\u7ec4\u5199\u6cd5\n\n\u4e58\u6cd5\u539f\u7406\u5927\u5bb6\u90fd\u61c2,\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u5927\u5bb6\u4e5f\u90fd\u77e5\u9053.\u4f46\u662f\u8fd9\u4e2a\u9898\n\n## \u4e3a\u4ec0\u4e48\u975e\u8981\u79bb\u6563\u5316?\n\n\u5f53\u65f6\u6211\u4eec\u5b58\u7684\u662f\u6570\u5b57\u7684\u5927\u5c0f,\u73b0\u5728\u6211\u4eec\u5b58**\u4f4d\u7f6e**\u4e0d\u884c\u5417?\n\n### \u8be6\u7ec6\u5206\u6790\n\n\u6211\u4eec\u5148\u7ed9\u5b83\u6309\u6570\u5b57\u5927\u5c0f\u6392\u4e2a\u5e8f.\n\n\u7b2c\u4e00\u904d:\u627e\u6570\u5b57\u6bd4\u4ed6\u5c0f\u800c\u4e14\u7f16\u53f7\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570.\n\n\u7b2c\u4e8c\u904d:\u627e\u6570\u5b57\u6bd4\u4ed6\u5927\u800c\u4e14\u7f16\u53f7\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570.\n\n\u4e8e\u662f\u9884\u5904\u7406\u4e3a\u2193\n\n```cpp\nstruct Node{int num,pos;}sf[30010];\nbool comp(Node u,Node v){return u.num<v.num;}\nfor(int i=1;i<=n;++i){\n\tscanf(\"%d\",&sf[i].num);\n\tsf[i].pos=i;\n}\nsort(sf+1,sf+n+1,comp);\n```\n\u7136\u540e\u7b2c\u4e00\u904d\n```cpp\nfor(int vc=1,i=1;i<=n;++i){\n\tif(sf[i].num!=sf[i-1].num)\n\twhile(vc<i)add1(sf[vc++].pos);\n\tcnts[i]=qy1(sf[i].pos-1);\n}\n```\n\u6838\u5fc3\u5728$vc$\u4e0a,\u56e0\u4e3a\u76f8\u7b49\u7684\u6570\u662f\u4e0d\u4f1a\u7b97\u5230\u91cc\u9762\u7684,\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e00\u4e2a$vc$\u8bb0\u5f55\u7684\u662f**\u4e0a\u4e00\u4e2a**\u76f8\u7b49\u7684\u6570\u7684\u4f4d\u7f6e.\n\n\u56e0\u4e3a\u8fd9\u4e00\u904d\u6211\u4eec\u9700\u8981\u4ece\u5c0f\u5f80\u5927\u627e,\u6240\u4ee5$vc=1$.\n\n\u6ce8:\n\n_add1\u4e3a\u5728\u7b2c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u5728\u67d0\u4e2a\u4f4d\u7f6e+1._\n\n_qy1\u4e3a\u5728\u7b2c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u67e5\u8be2\u67d0\u4e2a\u4f4d\u7f6e\u53ca\u4e4b\u524d\u7684\u6570\u7684\u4e2a\u6570._\n\n_\u4e0b\u6587add2\u548cqy2\u540c\u7406_\n\n\n\u7b2c\u4e8c\u904d:\n\n```cpp\nfor(int vc=n,i=n;i;--i){\n\tif(sf[i].num!=sf[i+1].num)\n\twhile(vc>i)add2(sf[vc--].pos);\n\tens+=cnts[i]*(qy2(n)-qy2(sf[i].pos));\n}\n```\n\u56e0\u4e3a\u6392\u5e8f\u662f\u4ece\u5927\u5230\u5c0f,\u8fd9\u4e00\u904d\u5c31\u5f97\u4ece\u540e\u5f80\u524d.\n\n### Code\n```cpp\n#include<bits/stdc++.h>\n#define l(p)\t(p&(-p))\nusing namespace std;\nint BIT1[30010],BIT2[30010],n,ans;\nlong long cnts[30010],ens;\nstruct Node{int num,pos;}sf[30010];\nbool comp1(Node u,Node v){\n\treturn u.num<v.num;\n}\nvoid add1(int p){\n\tfor(;p<=n;p+=l(p))\n    \t++BIT1[p];\n}\nvoid add2(int p){\n\tfor(;p<=n;p+=l(p))\n    \t++BIT2[p];\n}\nint qy1(int p){\n\tans=0;\n    for(;p;p-=l(p))\n    \tans+=BIT1[p];\n\treturn ans;\n}\nint qy2(int p){\n\tans=0;\n    for(;p;p-=l(p))\n    \tans+=BIT2[p];\n\treturn ans;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&sf[i].num);\n\t\tsf[i].pos=i;\n\t}\n\tsort(sf+1,sf+n+1,comp1);\n\tfor(int vc=1,i=1;i<=n;++i){\n\t\tif(sf[i].num!=sf[i-1].num)\n\t\t\twhile(vc<i)\n        \t\tadd1(sf[vc++].pos);\n\t\tcnts[i]=qy1(sf[i].pos-1);\n\t}\n\tfor(int vc=n,i=n;i;--i){\n\t\tif(sf[i].num!=sf[i+1].num)\n\t\t\twhile(vc>i)\n        \t\tadd2(sf[vc--].pos);\n\t\tens+=cnts[i]*(qy2(n)-qy2(sf[i].pos));\n\t}\n\tprintf(\"%lld\",ens);\n\treturn 0;\n}\n\n```",
        "postTime": 1521846405,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u9898\u89e3\u8fd9\u4e48\u5c11\uff0c\u5fcd\u4e0d\u4f4f\u7684\u5199\u4e00\u7bc7\n\n~~\u539f\u6765\u505a\u8fc7\u4e00\u9053\u6781\u5176\u7c7b\u4f3c\u7684\u9898\u76ee~~\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u9009\u5b9a\u7684\u6570aj\u800c\u8a00\n\n\u8981\u6c42\u7684\u662f1~j-1\u4e2d\u6bd4aj\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\n\u4e58\u4ee5j+1~n\u4e2d\u6bd4aj\u5927\u7684\u6570\u7684\u4e2a\u6570\n\n\u6c42\u51fa\u6570\u7684\u4e2a\u6570\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\n\n\u6700\u540e\u76f4\u63a5\u7edf\u8ba1\u7ed3\u679c\u5c31\u884c\u4e86\n\n\u4f46\u662f\uff0c\u8003\u8651\u5230N\u7684\u8303\u56f4\u5f88\u5c0f\n\n\u4f46\u662fai<maxlongint\n\n\u56e0\u6b64\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u79bb\u6563\u5316\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u70b8\u7a7a\u95f4\n\n\u597d\u4e86\u3002\u8bf4\u4e86\u8fd9\u91cc\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\uff1a\n\n\n```cpp\n//ai\u5728maxlongint\u5185\uff0c\u4e0d\u79bb\u6563\u5316\u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\u3002\u3002 \n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<algorithm>\nusing namespace std;\n#define MAX 40000\n#define INF 30000\nint n;\ninline int read()\n{\n    register int x=0,t=1;\n    register char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-'){t=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n    return x*t;\n}\nstruct Node\n{\n       int a;//\u6570\u503c \n       int i;//\u4f4d\u7f6e \n}Q[MAX];\nbool operator <(Node a,Node b)\n{\n       return a.a<b.a;\n}\nint c[MAX*4];\nint a[MAX],t1[MAX],t2[MAX];\ninline int lowbit(int x)\n{\n       return x&(-x);\n}\ninline void update(int x)\n{\n       while(x<=n)\n       {\n                c[x]+=1;\n                x+=lowbit(x);\n       }\n}\ninline int get(int x)\n{\n       int sum=0;\n       while(x>0)\n       {\n                sum+=c[x];\n                x-=lowbit(x);\n       }\n       return sum;\n}\nint main()\n{\n       n=read();\n       for(int i=1;i<=n;++i)\n          Q[i]=(Node){read(),i};\n       //\u79bb\u6563\u5316\n       sort(&Q[1],&Q[n+1]);\n       for(int i=1;i<=n;++i) \n       {\n               if(Q[i].a!=Q[i-1].a||i==1)\n                a[Q[i].i]=i;\n            else\n                a[Q[i].i]=a[Q[i-1].i];\n       }\n       //\u6811\u72b6\u6570\u7ec4\n       //\u7b2c\u4e00\u904d\uff0c\u6c42\u51fa\u524d\u9762\u6240\u6709\u6570\u4e2d\uff0c\u6bd4\u5b83\u5c0f\u7684\u4e2a\u6570\n       for(int i=1;i<=n;++i)\n       {\n                 t1[i]=get(a[i]-1);\n                 update(a[i]);\n       }\n       \n       memset(c,0,sizeof(c));\n       \n       //\u7b2c\u4e8c\u904d\uff0c\u6c42\u51fa\u540e\u9762\u6240\u6709\u6570\u4e2d\uff0c\u6bd4\u5b83\u5927\u7684\u4e2a\u6570\n       for(int i=n;i>=1;--i)\n       {\n                 t2[i]=get(n-a[i]);\n                 update(n-a[i]+1);\n       }\n       \n       //\u6700\u540e\u6c42\u548c\n       long long ans=0;\n       for(int i=1;i<=n;++i)\n          ans+=t1[i]*t2[i];\n       cout<<ans<<endl;\n       return 0; \n}\n\n```",
        "postTime": 1500214748,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u6a21\u62df\n\n\n\u7b2c\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u8868\u793a\u679a\u4e3e\u5230\u7b2c i \u4e2a\u4f4d\u7f6e\u6709\u591a\u5c11\u4e2a\u5c0f\u4e8e x\n\n\n\u7b2c\u4e8c\u4e2a\u6811\u72b6\u6570\u7ec4\u8868\u793a\u679a\u4e3e\u5230\u7b2c i \u4e2a\u4f4d\u7f6e\u6709\u591a\u5c11\u4e2a**\u4e8c\u5143\u4e0a\u5347\u5e8f\u5217**\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5c0f\u4e8ex\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\n\n\n\n\n\n\n\n\n    \n\n    \n    \n\n\n\n    \n    \n\n    \n    \n    \n    \n    \n        \n    \n        \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define lowbit(x) ((x) & (-(x)))\nusing namespace std;\nint n;\nint datas[30005], _sort[30005];\nint tree[30005], _tree[30005];\nvoid update(int * tree, int x, int num) { // \u5c06 tree \u5bf9\u5e94\u7684\u6811\u72b6\u6570\u7ec4\u7684x\u4f4d\u7f6e\u4ee5\u540e\u7684\u6570\u52a0\u4e0anum\n    if (num == 0)\n        return;\n    while (x <= n) {\n        tree[x] += num;\n        x += lowbit(x);\n    }\n}\nint query(int * tree, int x) {// \u67e5\u8be2tree\u5bf9\u5e94\u6811\u72b6\u6570\u7ec4\u524dx\u4e2a\u5143\u7d20\u7684\u548c\n    int ret = 0;\n    while (x) {\n        ret += tree[x];\n        x -= lowbit(x);\n    }\n    return ret;\n}\nbool cmp(int a, int b) {\n    return datas[a] < datas[b];\n}\nvoid init() {//\u79bb\u6563\u5316\n    int data[30005];\n    sort(_sort + 1, _sort + 1 + n, cmp);\n    int i = 0;\n    for (int j = 1; j <= n; j++)     {\n        if (j == 1 || datas[_sort[j]] != datas[_sort[j - 1]])\n            i++;\n        data[_sort[j]] = i;\n    }\n    memcpy(datas, data, sizeof(data));\n}\nint main() {\n    freopen(\"in.txt\", \"r\", stdin);\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &datas[i]);\n        _sort[i] = i;\n    }\n    init();\n    long long ans = 0;\n//_tree\u5bf9\u5e94\u4e8c\u5143\u7ec4\u7684\u6811\u72b6\u6570\u7ec4\n//tree\u5bf9\u5e94\u5355\u4e2a\u5143\u7d20\u7684\u6811\u72b6\u6570\u7ec4\n    for (int i = 1; i <= n; i++) {\n        ans += query(_tree, datas[i] - 1);//\u5c06\u4e8c\u5143\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5c0f\u4e8e\u5f53\u524d\u5143\u7d20\u7684\u4e2a\u6570\u7d2f\u52a0\u8fdb\u7ed3\u679c\n        update(_tree, datas[i], query(tree, datas[i] - 1));//\u4f7f\u7528\u5f53\u524d\u5143\u7d20\u66f4\u65b0\u4e8c\u5143\u7ec4\u6811\u72b6\u6570\u7ec4\n        update(tree, datas[i], 1);//\u4f7f\u7528\u5f53\u524d\u5143\u7d20\u66f4\u65b0\u5355\u4e2a\u5143\u7d20\u7684\u6811\u72b6\u6570\u7ec4\n    }\n    printf(\"%lld\", ans);\n    return 0;\n}\n```",
        "postTime": 1508324371,
        "uid": 25845,
        "name": "Snitro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u65e2\u7136\u662f\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u4e5f\u5c31\u662f\u6c42\u6ee1\u8db3 $a_i<a_j<a_k(1\\leq i < j < k \\leq n)$ \u7684\u4e09\u5143\u7ec4 $(i,j,k)$ \u6570\u91cf\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u679a\u4e3e\u6bcf\u4e00\u4e2a $a_j$ \uff0c\u627e\u51fa $[1,j-1]$ \u4e2d\u6240\u6709\u5c0f\u4e8e $a_j$ \u7684\u6570\u7684\u6570\u91cf\uff0c\u627e\u51fa $[j+1,n]$ \u4e2d\u6240\u6709\u5927\u4e8e $a_j$ \u7684\u6570\u7684\u6570\u91cf\uff0c\u518d\u7528\u4e58\u6cd5\u539f\u7406\u6c42\u89e3\u3002\n\n\u554a\u90a3\u4e0d\u5c31\u662f\u4e3b\u5e2d\u6811\u88f8\u9898\u561b...\n\n\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5efa\u7acb\u4e3b\u5e2d\u6811 \u2014\u2014 $n+1$ \u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7b2c $0$ \u68f5\u662f\u7a7a\u6811\uff0c\u7b2c $i(1\\leq i \\leq n)$ \u68f5\u5bf9\u5e94 $[1,i]$\u3002\u7136\u540e\u7528\u7c7b\u4f3c\u4e0e\u524d\u7f00\u548c\u7684\u601d\u60f3\u6c42\u89e3\uff0c\u67e5\u8be2 $[l,r]$ \u65f6\u628a\u7b2c $i-1$ \u68f5\u548c\u7b2c $r$ \u68f5\u62ce\u51fa\u6765\u6c42\u89e3\u3002\n\n```cpp\n# include <bits/stdc++.h>\n# define int long long//\u4fdd\u9669\u8d77\u89c1\u6211\u4f7f\u7528\u4e86 64 \u4f4d\u6574\u6570\n# define rr register\nconst int N=30010;\nstruct Node{\n\tint lc,rc,sum;\n}tree[N<<6];//\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\nint a[N],b[N];\nint root[N];\nint n,m;\nint ans;\nint id;\ninline int read(void){//\u5feb\u8bfb\n\tint res,f=1;\n\tchar c;\n\twhile((c=getchar())<'0'||c>'9')\n\t\tif(c=='-')f=-1;\n\tres=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\t\tres=res*10+c-48;\n\treturn res*f;\t\t\n}\nvoid build(int &x,int l,int r){//\u5efa\u7acb\u7b2c\u4e00\u68f5\u6811\uff08\u7a7a\u6811\uff09\n\tx=++id;\n\tif(l==r)\n\t\treturn;\n\tint mid=(l+r)>>1;\n\tbuild(tree[x].lc,l,mid);\n\tbuild(tree[x].rc,mid+1,r);\n\treturn;\n}\nvoid change(int &x,int y,int l,int r,int val){//x\u7ed3\u70b9\u662f\u5efa\u7acb\u5728 y \u7ed3\u70b9\u7684\u57fa\u7840\u4e4b\u4e0a\u8fdb\u884c\u4fee\u6539\u7684\n\tx=++id;\n\ttree[x].lc=tree[y].lc;\n\ttree[x].rc=tree[y].rc;\n\ttree[x].sum=tree[y].sum+1;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(val<=mid)\n\t\tchange(tree[x].lc,tree[y].lc,l,mid,val);\n\telse\n\t\tchange(tree[x].rc,tree[y].rc,mid+1,r,val);\n\treturn;\t\t\n}\nint ask(int Lt,int Rt,int l,int r,int L,int R){//\u67e5\u8be2\n\tif(L>R){//\u5728\u67e5\u8be2\u7684\u65f6\u5019\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0 L>R \u7684\u60c5\u51b5\u7684\uff0c\u6ce8\u610f\u7279\u5224\n\t\treturn 0;\t\t\n\t}\n\tif(L<=l&&r<=R){\n\t\treturn tree[Rt].sum-tree[Lt].sum;//\u6839\u636e\u4e3b\u5e2d\u6811\u7684\u6027\u8d28\uff0c[l,r] \u4e2d\u6570\u503c [L,R] \u7684\u6570\u91cf = [1,r] \u4e2d\u6570\u503c [L,R] \u7684\u6570\u91cf - [1,l-1] \u4e2d\u6570\u503c [L,R] \u7684\u6570\u91cf\n\t}\n\tint mid=(l+r)>>1,res=0;\n\tif(L<=mid)\n\t\tres+=ask(tree[Lt].lc,tree[Rt].lc,l,mid,L,R);\n\tif(mid<R)\n\t\tres+=ask(tree[Lt].rc,tree[Rt].rc,mid+1,r,L,R);\n\treturn res;\t\t\n}\nsigned main(void){\n\tn=read();\n\tfor(rr int i=1;i<=n;++i){\n\t\ta[i]=b[i]=read();\n\t}\n\tstd::sort(b+1,b+1+n);\n\tm=std::unique(b+1,b+1+n)-(b+1);//\u79bb\u6563\u5316\n\tbuild(root[0],1,m);\n\tfor(rr int i=1;i<=n;++i){\n\t\tchange(root[i],root[i-1],1,m,std::lower_bound(b+1,b+1+m,a[i])-b);//\u63d2\u5165\uff08\u5efa\u7acb\u6743\u503c\u7ebf\u6bb5\u6811\uff09\n\t}\n\tfor(rr int i=2;i<=n-1;++i){\n\t\tint val=std::lower_bound(b+1,b+1+m,a[i])-b;\n\t\tans+=ask(root[0],root[i-1],1,m,1,val-1)*ask(root[i],root[n],1,m,val+1,m);//\u5229\u7528\u4e58\u6cd5\u539f\u7406  \uff08\u5728\u4ed6\u5de6\u8fb9\u6bd4\u4ed6\u5c0f\u7684*\u5728\u4ed6\u53f3\u8fb9\u6bd4\u4ed6\u5927\u7684\uff09\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1568554171,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u6811\u72b6\u6570\u7ec4\u597d\u9898\n\n\u8fd9\u9053\u9898\u539f\u7406\uff1a\u4e58\u6cd5\u539f\u7406+\u6811\u72b6\u6570\u7ec4\n\n## \u89e3\u9898\u601d\u8def\uff1a\n1.\u9996\u5148\uff0c\u79bb\u6563\u5316\u3002\u5426\u5219\u6570\u636e\u592a\u5927\uff0c\u6811\u72b6\u6570\u7ec4\u4f1a\u6302\uff0c\u6211\u8fd9\u79cd\u79bb\u6563\u5316\u65b9\u6cd5\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u76f4\u63a5sort\uff0c\u7ed3\u6784\u4f53\u5f00\u8d77\u6765\u3002\n\n2.\u7136\u540e\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f53\u524d\u5143\u7d20\u7684\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\uff0c\u6211\u7528t1\u8bb0\u5f55\u3002\n\n3.\u7136\u540e\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f53\u524d\u5143\u7d20\u540e\u9762\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u6bd4\u5f53\u524d\u5143\u7d20\u5927\uff0c\u7528t2\u8bb0\u5f55\u3002\n\n4.\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0cres+=t1[i]*t2[i]\n\n5.\u5f97\u51fa\u7b54\u6848\u3002\n\n## \u7279\u522b\u7684\u5730\u65b9\uff1a\n\u8fd9\u4e2a\u9898\u76ee\u6211\u4e00\u5f00\u59cb\u4e0d\u4f1a\u600e\u4e48\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bd4\u5f53\u524d\u5143\u7d20\u5927\u7684\u5143\u7d20\uff0c\u5c31\u60f3\u5230\u4e86\u6c42\u5728\u5f53\u524d\u5143\u7d20\u540e\u9762\u7684\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\u7684\u5143\u7d20\uff0c\u7136\u540e\u76f4\u63a5n-i-\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\u7684\u5143\u7d20\u4e2a\u6570\uff08\u9006\u5e8f\u5bf9\uff09\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\u7684\u5143\u7d20,~~\u6211\u662f\u4e00\u904d\u8fc7\u8fd9\u9053\u9898\u7684\uff0c\u591a\u8c22\u6837\u4f8b\u826f\u5fc3~~\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u884c\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u6211\u8111\u6d1e\u6e05\u5947\u7684\u5c06\u6807\u51c6\u7684\u6811\u72b6\u6570\u7ec4\u53cd\u8fc7\u6765\u7528\uff1a\n\n\u89c1\u4ee3\u7801\uff1a\n```cpp\nint add(long long *c,long long x){while(x <= n)c[x]++,x+=lowbit(x);return c[x];}\n```\n\u8fd9\u662f\u6b63\u5e38\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u800c\u6211\u7684\uff1a\n```cpp\nint add1(long long *c,long long x){while(x > 0)c[x]++,x-=lowbit(x);return c[x];}\n```\n\u662f\u4e0d\u662f\u5012\u8fc7\u6765\u4e86\u554a\u3002\u7136\u540e\u6211\u628aget\u4e5f\u6539\u4e86\u3002\n\n```cpp\nint get1(long long *c,long long x){long long ans=0;while( x <= n)ans+=c[x],x+=lowbit(x);return ans;}\n```\n\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u6bd4\u5f53\u524d\u5143\u7d20\u5927\u7684\u5143\u7d20\u7684\u4e2a\u6570\u4e86\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u9519\u4e86\uff0c\u53ef\u4ee5\u5e0c\u671b\u5927\u5bb6\u597d\u597d\u770b\u770b\uff0c\u5b66\u5b66\u3002\n\n\u4e0d\u8fc7\u4ee3\u7801\u4e0d\u5e0c\u671b\u5927\u5bb6\u8fd9\u4e48\u5199\uff0c\u6211\u8fd9\u6837\u5199\u662f\u4e3a\u4e86\u8282\u7701\u7bc7\u5e45\u3002\n\n## CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n,res=0;\nstruct node{long long data,num,now;}a[30000+5];\nlong long c1[50000+5],c2[50000+5];\nlong long t1[50000+5],t2[50000+5];\nint cmp(node a , node b ){return a.data<b.data;}\nint lowbit(long long x){return x&-x;};\nint add(long long *c,long long x){while(x <= n)c[x]++,x+=lowbit(x);return c[x];}\nint add1(long long *c,long long x){while(x > 0)c[x]++,x-=lowbit(x);return c[x];}\nint get(long long *c,long long x){long long ans=0;while( x )ans+=c[x],x-=lowbit(x);return ans;}\nint get1(long long *c,long long x){long long ans=0;while( x <= n)ans+=c[x],x+=lowbit(x);return ans;}\nint main(){\n\tlong long i,j,k,m;\n\tcin>>n;\n\tfor ( i = 1 ; i <= n ; i ++)cin>>a[i].data,a[i].num=i;\n\tsort(a+1,a+1+n,cmp);\n\tfor ( i = 1 ; i <= n; i ++ ){\n\t\tif(a[i].data == a[i-1].data)a[i].now=a[i-1].now;\n\t\telse a[i].now=i;\n\t}\n\tfor ( i = 1 ; i <= n; i++)a[a[i].num].data=a[i].now;\n\tfor ( i = 1 ; i <= n; i ++){\n\t\tadd(c1,a[i].data);\n\t\tt1[i]=get(c1,a[i].data-1);\n\t}\n\tfor (  i = n ; i >= 1 ; i --){\n\t\tadd1(c2,a[i].data);\n\t\tt2[i]=get1(c2,a[i].data+1);\n\t}\n\tfor ( i = 1 ; i <= n; i ++)res+=t1[i]*t2[i];\n\tcout<<res;\n\treturn 0;\n}\n```\n",
        "postTime": 1565100366,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\n------------\n\n\u8bf6,\u9898\u89e3\u91cc\u7684\u5927\u4f6c\u90fd\u662f\u7528\u4e58\u6cd5\u539f\u7406\u5417?\n\n\u90a3\u6211\u600e\u4e48\u6ca1\u60f3\u5230\u5462? ~~\u592a\u83dc\u4e86\u60f3\u4e0d\u5230~~\n\n------------\n\n\n## \u601d\u8def\n\n\u770b\u5230\u8fd9\u9898\u4e0e\u9006\u5e8f\u5bf9\u6709\u5173,\u6211\u5c31\u5148\u8bbe\u6570\u7ec4aa[i]\u8868\u793a\u8fd9\u4e00\u4e2a\u6570\u5b57\u524d\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570(\u4ee5\u8fd9\u4e2a\u6570\u5b57\u4e3a\u7ed3\u5c3e\u7684 \u9006\u5e8f\u5bf9/\u4e8c\u5143\u4e0a\u5347\u5b50\u5e8f\u5217 \u4e2a\u6570)\n\n\u5f52\u5e76\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u51faaa\u7684\u503c\n\n\u4f46\u8fd9\u9053\u9898\u8981\u6c42\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217,,,\u6211\u5c31\u60f3\u5230\u5bf9\u539f\u6570\u7ec4\u518d\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\n\n\u8ddf\u6c42\u9006\u5e8f\u5bf9\u7c7b\u4f3c,\u53ea\u4e0d\u8fc7\u5408\u5e76\u524d\u8981\u7edf\u8ba1\u5de6\u534a\u90e8\u5206**\u5bf9\u5e94\u7684**aa\u7684\u548c.\u5408\u5e76\u65f6\u5982\u679c\u53f3\u534a\u90e8\u5206\u7684\u8981\u5408\u5e76\u7684\u90a3\u4e2a\u6570\u5b57\u6bd4\u5de6\u534a\u90e8\u5206\u7684\u5bf9\u5e94\u6570\u5b57\u8981*\u5927*,\u5c31\u628a\u7b54\u6848\u52a0\u4e0a\u5de6\u534a\u90e8\u5206\u5269\u4f59\u6570\u5b57*\u5bf9\u5e94\u7684*aa\u4e4b\u548c(\u5c31\u76f8\u5f53\u4e8e\u6c42\u4ee5\u8fd9\u4e2a\u6570\u5b57\u4e3a\u7ed3\u5c3e\u7684\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570);\u5426\u5219\u628aaa\u7684\u548c\u51cf\u53bb\u5de6\u534a\u90e8\u5206\u5e76\u8fc7\u6765\u7684\u6570*\u5bf9\u5e94\u7684*aa\u503c.\n\n\u62ff\u7740\u6837\u4f8b*\u624b\u73a9*\u51e0\u4e0b,\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\n\n------------\n\n\n#### code\n\n```cpp\n//\u6ce8:\u6b64\u4ee3\u7801\u5728linux\u4e0b\u7684emacs\u5199\u6210,\u683c\u5f0f\u4e11\u8f7b\u55b7\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<queue>\n#include<cmath>\n#define il inline\nusing namespace std;\nstruct nn\n{\n  int x,n;\n}a[30010],b[30010],c[30010];\t//x\u4e3a\u6570\u5b57\u503c n\u4e3a\u6570\u5b57\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\nint n;\nlong long aa[30010],ans;\nil void s1(int l,int r)\t//\u7b2c\u4e00\u6b21\u5f52\u5e76\u7b97\u51faaa\n{\n  if(l==r) return;\n  int mid=(l+r)>>1;\n  s1(l,mid);s1(mid+1,r);\n  int i1=l,i2=mid+1,ii=l;\n  while(i1<=mid&&i2<=r)\n    {\n      if(a[i1].x>=a[i2].x)\n    \t{\n      \tc[ii++]=a[i1++];\n    \t}\n      else\n    \t{\n     \t aa[a[i2].n]+=mid-i1+1;\n    \t  c[ii++]=a[i2++];\n   \t }\n    }\n  while(i1<=mid) c[ii++]=a[i1++];\n  while(i2<=r) c[ii++]=a[i2++];\n  for(register int i=l;i<=r;i++) a[i]=c[i];\n}\nil int s2(int l,int r)\n{\n  if(l==r) return aa[b[l].n];\n  int mid=(l+r)>>1;\n  long long s=0,ss=0;\t//s\u4e3a\u8fd9\u6bb5\u533a\u95f4\u5de6\u534a\u90e8\u5206\u7684aa\u548c,ss\u4e3a\u8fd9\u6bb5\u533a\u95f4\u7684aa\u548c\n  s=ss=s2(l,mid); ss+=s2(mid+1,r);\n  int i1=l,i2=mid+1,ii=l;\n  while(i1<=mid&&i2<=r)\n    {\n      if(b[i1].x>=b[i2].x)\n    \t{\n     \t s-=aa[b[i1].n];\n    \t  c[ii++]=b[i1++];\n   \t }\n      else\n  \t  {\n  \t    ans+=s;\n   \t   c[ii++]=b[i2++];\n   \t }\n    }\n  while(i1<=mid) c[ii++]=b[i1++];\n  while(i2<=r) c[ii++]=b[i2++];\n  for(register int i=l;i<=r;i++) b[i]=c[i];\n  return ss;\t//\u8fd4\u56de\u533a\u95f4\u7684aa\u548c\n}\nint main()\n{\n  scanf(\"%d\\n\",&n);\n  for(register int i=1;i<=n;i++)\n    {\n      scanf(\"%d\",&a[i].x);\n      a[i].n=i;\n      b[i]=a[i];\n    }\n  s1(1,n);\n  s2(1,n);\n  printf(\"%lld\\n\",ans);\n  return 0;\n}\n\n\n\n```\n\n------------\n\n",
        "postTime": 1517622740,
        "uid": 38372,
        "name": "star_magic_young",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u4e0e\u90a3\u9898\u697c\u5170\u56fe\u817e\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002\n\n\u672c\u9898\u8303\u56f4\u8f83\u5927\uff0c\u6240\u4ee5\u8981\u5148\u79bb\u6563\u5316\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5229\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u51fa\u7b2c$i$\u4e2a\u6570\u5de6\u8fb9\u6bd4\u5176\u5c0f\u7684\u6570\u7684\u4e2a\u6570$xi[i]$\uff0c\u7b2c$i$\u4e2a\u6570\u53f3\u9762\u6bd4\u5176\u5927\u7684\u6570\u7684\u4e2a\u6570$d[i]$\uff0c\u5177\u4f53\u5b9e\u73b0\u5373\u4e3a\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u6570\u503c\u524d\u7f00\uff08\u540e\u7f00\uff09\u548c\u3002\u7531\u4e8e\u540e\u7f00\u548c\u67e5\u8be2\u8981\u51cf$1$\uff0c\u6240\u4ee5\u79bb\u6563\u53ef\u4ee5\u4ece$2$\u5f00\u59cb\uff0c\u9632\u6b62$0\\&-0=0$\u800c\u9677\u5165\u6b7b\u5faa\u73af\u3002\n\n\u6700\u540e\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u76f4\u63a5\u628a\u6bcf\u7ec4$xi[i]\u00d7d[i]$\u7684\u79ef\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\n\nint n,t[30010];\nstruct node{\n\tll t;\n\tint id;\n}a[30010];\nll d[30010],xi[30010],sum[30010],ans=0;\n\nbool cmp(node x,node y) {\n\treturn x.t<y.t;\n}\n\nint lowbit(int x) {\n\treturn x&(-x);\n}\n\nvoid update(int x,int y) {\n\tfor(;x<=n+1;x+=lowbit(x)) sum[x]+=y;\n}\n\nll ask(int x) {\n\tll ans=0;\n\tfor(;x;x-=lowbit(x)) ans+=sum[x];\n\treturn ans;\n}\n\nvoid updateh(int x,int y) {\n\tfor(;x;x-=lowbit(x)) sum[x]+=y;\n}\n\nll askh(int x) {\n\tll ans=0;\n\tfor(;x<=n+1;x+=lowbit(x)) ans+=sum[x];\n\treturn ans;\n}\n\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i].t,a[i].id=i; \n\tsort(a+1,a+n+1,cmp);\n\t\n\tint s=a[1].t,js=2;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(s==a[i].t) t[a[i].id]=js;\n\t\telse t[a[i].id]=++js,s=a[i].t;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tupdate(t[i],1);\n\t\txi[i]=ask(t[i]-1);\n\t}\n\tmemset(sum,0,sizeof(sum));\n\tfor(int i=n;i>=1;i--) {\n\t\tupdateh(t[i],1);\n\t\td[i]=askh(t[i]+1);\n\t}\n\t\n\tfor(int i=1;i<=n;i++) ans+=d[i]*xi[i];\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n------------\n\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u5f88\u7e41\u7410\u7684\u3002\u5176\u5b9e\u4e0d\u9700\u8981\u4ec0\u4e48\u540e\u7f00\u548c\u64cd\u4f5c\uff0c\u4ecd\u7136\u7528\u524d\u7f00\u548c\u5c31\u884c\uff0c\u5229\u7528\u5bb9\u65a5\u7684\u601d\u60f3\uff0c$d[i]=ask(n)-ask(t[i])$\uff0c\u8fd9\u6837\u5c31\u80fd\u7edf\u8ba1\u51fa$t[i]$\u4e4b\u540e\u7684\u4ee5\u653e\u5165\u6811\u72b6\u6570\u7ec4\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u5728\u5176\u4e4b\u540e\u53c8\u6bd4\u5176\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\n\nint n,t[30010];\nstruct node{\n\tll t;\n\tint id;\n}a[30010];\nll d[30010],xi[30010],sum[30010],ans=0;\n\nbool cmp(node x,node y) {\n\treturn x.t<y.t;\n}\n\nint lowbit(int x) {\n\treturn x&(-x);\n}\n\nvoid update(int x,int y) {\n\tfor(;x<=n+1;x+=lowbit(x)) sum[x]+=y;\n}\n\nll ask(int x) {\n\tll ans=0;\n\tfor(;x;x-=lowbit(x)) ans+=sum[x];\n\treturn ans;\n}\n\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i].t,a[i].id=i; \n\tsort(a+1,a+n+1,cmp);\n\t\n\tint s=a[1].t,js=1;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(s==a[i].t) t[a[i].id]=js;\n\t\telse t[a[i].id]=++js,s=a[i].t;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tupdate(t[i],1);\n\t\txi[i]=ask(t[i]-1);\n\t}\n\tmemset(sum,0,sizeof(sum));\n\tfor(int i=n;i>=1;i--) {\n\t\tupdate(t[i],1);\n\t\td[i]=ask(js)-ask(t[i]);\n\t}\n\t\n\tfor(int i=1;i<=n;i++) ans+=d[i]*xi[i];\n\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1575128545,
        "uid": 71936,
        "name": "HoshiuZ",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "# \u6811\u72b6\u6570\u7ec4\n\n\u5f31\u5316\u7248\u697c\u5170\u56fe\u817e\n\n\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4left right\u5206\u522b\u8bb0\u5f55\u5728a[i]\u4e4b\u524d\u6bd4a[i]\u5c0f\u7684\u6570\u548c\u5728a[i]\u4e4b\u540e\u6bd4a[i]\u5927\u7684\u6570\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\n\u5728\u503c\u57df\u4e0a\u5f00\u6811\u72b6\u6570\u7ec4\uff08\u8bfb\u5165\u65f6\u8bb0\u5f55\u4e0d\u540c\u7684\u503c\uff09\n\n\u987a\u5e8f\u548c\u5012\u5e8f\u626b\u63cf\u5404\u4e00\u904d\n\n\u7136\u540e\u6839\u636e\u4e58\u6cd5\u539f\u7406\n\nsigma\uff081~n\uff09 left[i] * right[i]\n\n\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u70b9\u6709\u4ee5\u4e0b\u51e0\u4e2a\n\n1.\u867d\u7136\u9898\u76ee\u91cc\u5199\u7684\u662fa[i]>=0 \u4f46\u662f\u4f9d\u7136\u6709\u8d1f\u6570\u6570\u636e\u51fa\u73b0  \u4e3a\u4e86\u907f\u514d\u6570\u7ec4\u8d1f\u4e0b\u6807\u5bfc\u81f4RE \u53ef\u4ee5\u5728\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u65f6\u7ed9\u6bcf\u4e2a\u6570+10000 \n\n2.\u9488\u5bf9\u95ee\u98981 \u5982\u679c\u8d1f\u6570\u6570\u636e\u8fc7\u5927 \u6216\u503c\u57df\u8fc7\u5927 \u8003\u8651\u79bb\u6563\u5316\n\n\u79bb\u6563\u5316\uff1a\u9488\u5bf9\u503c\u57df\u5927\uff0c\u6570\u503c\u5c0f\uff0c\u6bcf\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u53ea\u8003\u8651\u6570\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\u65f6 \u53ef\u4ee5\u5c06\u503c\u57df\u91cc\u7684\u6bcf\u4e2a\u6570\u6620\u5c04\u5230\u6570\u636e\u4e2a\u6570\u8303\u56f4\u5185\u7684\u8f83\u5c11\u4e2a\u6570\u5185\n\u65b9\u6cd5\u662f\u5148\u6392\u5e8f \u518d\u75281~n\u91cc\u7684\u6570\u5206\u522b\u4ee3\u8868\u539f\u6765\u7684\u6bcf\u4e00\u4e2a\u6570\n\n\u8fd9\u6837\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u503c\u57df\u8fc7\u5927\u5e26\u6765\u7684\u4e0d\u4fbf\n\n3.\u6811\u72b6\u6570\u7ec4\u65e0\u6cd5\u76f4\u63a5\u67e5\u8be2\u6bd4\u5b83\u5927\u7684\u6570\n\n\u6240\u4ee5\u5728\u7b2c\u4e8c\u4e2a\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u65f6\uff0c\u9700\u8981\u7528\u5df2\u7ecf\u52a0\u5165\u7684\u6570-\u6bd4\u5b83\u5c0f\u7684\u6570\n\n\u5373right[i]=n-i-a[i]\u540e\u6bd4\u5b83\u5927\u7684\u6570 \u8be6\u89c1\u4ee3\u7801\n\n\u6700\u540e\u662fAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long \nll int n,maxx;\nll int a[500500];\nlong long ans;\nll int left1[500500],right1[500500];\nll int lowbit(int x){\n\treturn x&-x;\n}\nvoid add_left(int a){\n\tfor(int i=a;i<=maxx;i+=lowbit(i))\n\t   left1[i+10000]+=1;\n}\nll int query_left(int r){\n\tint sum=0;\n\tfor(;r>=1;r-=lowbit(r))\n\tsum+=left1[r+10000];\n\treturn sum;\n}\nvoid add_right(int a){\n\tfor(int i=a;i<=maxx;i+=lowbit(i))\n\tright1[i+10000]+=1;\n}\nll int query_right(int l){\n\tint sum=0;\n\tfor(;l>=1;l-=lowbit(l)){\n\t//printf(\"%d\\n\",l);\n\tsum+=right1[l+10000];}\n\treturn n-sum;\n}\nll int lef[500050],rig[500050];\n//long long ans;\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\tscanf(\"%d\",&a[i]);\n\tif(a[i]>maxx)\n\tmaxx=a[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tlef[i]=query_left(a[i]-1);\n\t\tadd_left(a[i]); \n\t}\n\tfor(int i=n;i>=1;i--){\n\t\trig[i]=query_right(a[i])-i;\n\t\tadd_right(a[i]); \n\t}\n\tfor(int i=2;i<=n-1;i++)\n\t ans+=(long long)lef[i]*rig[i];\n\t printf(\"%lld\",ans);\n\t //puts(\" \");\n\t //for(int i=1;i<=n;i++)\n\t //cout<<lef[i]<<\"  \"<<rig[i]<<endl;\n\t //puts(\" \");\n\t//cout<<rig[2];\n}\n```\n",
        "postTime": 1570378523,
        "uid": 174793,
        "name": "huangwux",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u663e\u800c\u6613\u89c1\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u524d\u9762\u6bd4\u5b83\u5c0f\u7684\u4e2a\u6570\u548c\u540e\u9762\u6bd4\u5b83\u5927\u7684\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u4e58\u6cd5\u539f\u7406\u6c42\u51fa  \n\u8003\u8651\u79bb\u6563\u540e\u4f7f\u7528\u6876\uff0c\u53ef\u4ee5logn\u6c42\u51fa1\u5230i-1\u6bd4i\u5c0f\u7684\u4e2a\u6570  \n\u56e0\u6b64\u6211\u4eec\u4fbf\u5f97\u51fa\u4e86\u4ee5\u4e0b\u4ee3\u7801  \n\u6ce8\u610fsmaller\u548cbigger\u9700\u8981\u5206\u6210\u4e24\u904d\u52a0\u5165\uff0c\u5426\u5219\u4f1a\u51fa\u95ee\u9898\n```cpp\n#include<bits/stdc++.h>\n#define lc (p<<1)\n#define rc (p<<1|1)\nusing namespace std;\nstruct Point{\n\tint level,sum,place;\n}a[30010];\nbool cmp1(const Point &x,const Point &y){\n\treturn x.sum<y.sum;\n}\nbool cmp2(const Point &x,const Point &y){\n\treturn x.place<y.place;\n}\nint vis[30010];\nstruct Node{\n\tint l,r,sum;\n}T[400010];\ninline void pushup(int p){\n\tT[p].sum=T[lc].sum+T[rc].sum;\n}\nvoid build(int p,int l,int r){\n\tT[p].l=l,T[p].r=r;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tpushup(p);\n}\nvoid update(int p,int q){\n\tif(T[p].l==T[p].r){\n\t\tT[p].sum++;return;\n\t}\n\tint mid=(T[p].l+T[p].r)>>1;\n\tif(q<=mid)update(lc,q);\n\tif(q>mid)update(rc,q);\n\tpushup(p);\n}\nint query(int p,int ql,int qr){\n\tif(ql>qr)return 0;\n\tif(ql<=T[p].l&&T[p].r<=qr)\n\t\treturn T[p].sum;\n\tint mid=(T[p].l+T[p].r)>>1;\n\tint ans=0;\n\tif(ql<=mid)ans+=query(lc,ql,qr);\n\tif(qr>mid)ans+=query(rc,ql,qr);\n\treturn ans;\n}\nint smaller[100010],bigger[100010];\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i].sum),a[i].place=i;\n\tsort(a+1,a+n+1,cmp1);\n\tint cnt=0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(a[i-1].sum<a[i].sum)++cnt;\n\t\ta[i].level=cnt;\n\t}\n\tsort(a+1,a+n+1,cmp2);\n\tbuild(1,1,n);\n\tlong long ans=0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(a[i].level>1)smaller[i]=query(1,1,a[i].level-1);//\u5904\u7406\u51fa\u524d\u9762\u6bd4\u5b83\u5c0f\u7684\u6570 \n\t\tupdate(1,a[i].level);\n\t}\n\tmemset(T,0,sizeof(T));\n\tbuild(1,1,n);\n\tfor(int i=n;i>=1;--i){\n\t\tif(a[i].level<n)bigger[i]=query(1,a[i].level+1,cnt);//\u5904\u7406\u51fa\u540e\u9762\u6bd4\u5b83\u5927\u7684\u6570 \n\t\tupdate(1,a[i].level);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tans+=smaller[i]*bigger[i];\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566808339,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "P1637 \u7ebf\u6bb5\u6811-5"
    },
    {
        "content": "\u66b4\u529b\u662f\u4e09\u91cd\u5faa\u73af,\u679a\u4e3e\u4e09\u4e2a\u6570\u5224\u65ad\u662f\u5426\u7ec4\u6210\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217,\u4f46\u662fN\u670930000,O(N^3)\u76f4\u63a5\u679a\u4e3e\u80af\u5b9a\u662f\u4f1aT\u7684,\u4e0d\u96be\u53d1\u73b0\u5f53\u4e2d\u95f4\u7684\u6570\u4e3aa[i]\u65f6\u5b83\u6240\u8d21\u732e\u51fa\u7684\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\n\u7684\u4e2a\u6570\u4e3a1~i-1\u4e2d\u6bd4a[i]\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u4e58i+1~N\u4e2d\u6bd4a[i]\u5927\u7684\u6570\u7684\u4e2a\u6570.\u8fd9\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u9006\u5e8f\u5bf9(~~\u867d\u7136\u8fd8\u662f\u6709\u70b9\u4e0d\u540c~~),\u9006\u5e8f\u5bf9\u7684\u5e38\u7528\u65b9\u6cd5\u5f52\u5e76\u6ca1\u6cd5\u6c42\u51fa\u6bcf\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570(~~\u53ef\u80fd\u53ef\u4ee5\u53ea\u4e0d\u8fc7\u6211\u4e0d\u4f1a~~),\u6240\u4ee5\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811.\n\u505a\u6cd5\u548c\u6743\u503c\u7ebf\u6bb5\u6811\u7c7b\u4f3c\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4ubHVvZ3UuY29tLmNuL3VwbG9hZC9pbWFnZV9ob3N0aW5nL3J5dnh1MG85LnBuZw?x-oss-process=image/format,png)\n\u5982\u56fe1\u6240\u793a,\u6bcf\u4e2a\u53f6\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u6570,\u6240\u4ee5\u5c31\u53ef\u4ee5\u5728logN\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u7b97\u51fa\u5728\u6574\u9897\u7ebf\u6bb5\u6811\u4e2d\u6bd4\u67d0\u4e2a\u6570\u5927\u6216\u5c0f\u7684\u6570\u7684\u4e2a\u6570.\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u67e5\u8be2\u51fa\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570(small[i])\u5e76\u8bb0\u5f55\u4e0b\u6765\u518d\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u8fd9\u9897\u7ebf\u6bb5\u6811.\u540c\u7406,\u5c06\u6240\u6709\u7684\u6570\u5012\u7740\u653e\u5165,\u67e5\u8be2\u51fa\u5728\u5f53\u524d\u7ebf\u6bb5\u6811\u4e2d\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u7684\u4e2a\u6570\u90a3\u4e48\u8fd9\u4e2a\u6570(big)\u7684\u8d21\u732e\u5c31\u662f(small[i]*big).\n\u6570\u7684\u4e2a\u6570\u6bd4\u8f83\u5927,\u6ca1\u6cd5\u76f4\u63a5\u52a0\u5165\u7ebf\u6bb5\u6811,\u6240\u4ee5\u9700\u8981\u5148\u79bb\u6563\u5316.\n```cpp\n#include<bits/stdc++.h>\n#define rap(i,first,last) for(int i=first;i<=last;++i)\n#define sing(i,first,last) for(int i=first;i>=last;--i)\n#define Lson now*2\n#define Rson now*2+1\n#define Middle (left+right)/2\n#define Left Lson,left,Middle\n#define Right Rson,Middle+1,right\nusing namespace std;\nconst int maxN=1e5+7;\nint N,M;\nint tree[maxN*4];\nvoid PushUp(int now)\n{\n\ttree[now]=tree[Lson]+tree[Rson];\n}\nvoid Build(int now=1,int left=1,int right=N)//\u5efa\u6811,\u867d\u7136\u6ca1\u4ec0\u4e48\u7528\n{\n\tif(left==right)\n\t{\n\t\ttree[now]=0;\n\t\treturn;\n\t}\n\tBuild(Left);\n\tBuild(Right);\n\tPushUp(now);\n}\nvoid UpData(int num,int now=1,int left=1,int right=N)//\u4fee\u6539\n{\n\tif(num<left||right<num)return;\n\tif(left==right)//\u5f53\u662f\u53f6\u8282\u70b9\u65f6\u76f4\u63a5\u4fee\u6539\n\t{\n\t\ttree[now]++;\n\t\treturn;\n\t}\n\tUpData(num,Left);\n\tUpData(num,Right);\n\tPushUp(now);//\u4e0d\u662f\u53f6\u8282\u70b9\u65f6\u9700\u8981\u5728\u5b50\u6811\u4fee\u6539\u540e\u4fee\u6539,\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981,\u53cd\u6b63\u90fd\u662f+1\n}\nint Query_small(int num,int now=1,int left=1,int right=N)//\u67e5\u8be2\u5f53\u524d\u6570\u4e2d\u6bd4num\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n{\n\tif(left>=num)return 0;//\u5f53\u5f53\u524d\u7684\u6570\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4e5f\u6bd4num\u5927\u65f6\u81ea\u7136\u6574\u4e2a\u533a\u95f4\u90fd\u4e0d\u4f1a\u6709\u6bd4num\u5c0f\u7684\u6570\u4e86\n\tif(right<num)//\u5f53\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\u4e5f\u6bd4num\u5c0f\u65f6\u6574\u4e2a\u533a\u95f4\u91cc\u7684\u6570\u4e5f\u5c31\u6bd4num\u5c0f\u4e86\n\t{\n\t\treturn tree[now];\n\t}\n\tint result=0;//\u8fd4\u56de\u7684\u503c\u4e3a\u5de6\u5b50\u6811\u4e2d\u6bd4num\u5c0f\u7684\u6570\u7684\u4e2a\u6570+\u53f3\u5b50\u6811\u4e2d\u6bd4num\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\tresult+=Query_small(num,Left);\n\tresult+=Query_small(num,Right);\n\treturn result;\n}\nint Query_big(int num,int now=1,int left=1,int right=N)//\u4e0e\u4e0a\u540c\u7406\n{\n\tif(right<=num)return 0;\n\tif(left>num)\n\treturn tree[now];\n\tint result=0;\n\tresult+=Query_big(num,Left);\n\tresult+=Query_big(num,Right);\n\treturn result;\n}\nmap<int,int>Hash;//\u56e0\u4e3a\u61d2\u6240\u4ee5\u76f4\u63a5map\u79bb\u6563\u5316\nint arr[maxN];\nint sor[maxN];\nint small[maxN];\nint main()\n{\n\tscanf(\"%d\",&M);\n\trap(i,1,M)\n\t{\n\t\tscanf(\"%d\",&arr[i]);\n\t\tsor[i]=arr[i];\n\t}\n\t//\u79bb\u6563\u5316\n\tsort(sor+1,sor+1+M);\n\tint now=1;\n\tHash[sor[1]]=1;\n\trap(i,2,M)\n\t{\n\t\tif(sor[i]!=sor[i-1])\n\t\t{\n\t\t\tHash[sor[i]]=++now;\n\t\t}\n\t}\n\tN=now;//\u6570\u7684\u5927\u5c0f\u4e3a\u4e0d\u540c\u7684\u6570\u7684\u4e2a\u6570\n\tlong long answer=0;\n\tBuild();\n\trap(i,1,M)\n\t{\n\t\tsmall[i]=Query_small(Hash[arr[i]]);//\u67e5\u8be2\u51fa\u5f53\u524d\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\t\tUpData(Hash[arr[i]]);//\u63d2\u5165\u8fd9\u4e2a\u6570\n\t}\n\tBuild();\n\tsing(i,M,1)\n\t{\n\t\tanswer+=small[i]*Query_big(Hash[arr[i]]);//\u8ba1\u7b97\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\n\t\tUpData(Hash[arr[i]]);\n\t}\n\tprintf(\"%lld\",answer);//\u8f93\u51faanswer,\u6ce8\u610flong long\n\treturn ~0;\n}\n\n```\n",
        "postTime": 1577845490,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u7b2c\u4e00\u6b21\u5199\u79bb\u6563\u5316\u7684\u9898\u76ee\uff0c\u6253\u5361\u8bb0\u5f55\u4e00\u4e0b\u5f25\u8db3\u73cd\u8d35\u7684\u8bb0\u5fc6\u3002\u6838\u5fc3\u5728\u4e8e\u79bb\u6563\u5316\u53ef\u4ee5\u6d88\u5931\u5f53\u524d\u5143\u7d20\u662f\u7b2c\u51e0\u5c0f\uff08\u5927\uff09\u5143\u7d20\uff0c\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u5c0f\u4e8e\u7b49\u4e8e\uff08\u7b2c\u51e0\u5c0f\uff09\u5143\u7d20\u7684\u4e2a\u6570\u3002\u8fd9\u6837\uff0c\u5927\u4e8e\u67d0\u4e2a\u5143\u7d20\u4e2a\u6570\u8f6c\u5316\u4e3a\uff1a\u5728i\u4e2a\u5143\u7d20\u91cc\u51cf\u53bb\uff08\u5c0f\u4e8e\u7b49\u4e8e\u4ed6\uff09\u6216\u8005\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u5143\u7d20\u6392\u540d\uff08\u7b2c\u51e0\u5c0f\uff09\u7684\u4e2a\u6570\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n```c\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<stack>\n#include<string>\n#include<iostream>\n#include<vector>\n#include<ctype.h>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<stdlib.h>\n#include<queue>\n#include<sstream>\n#include<complex>\n#define MAXN  30005\n#define eps 0.00001\n#define INF 0x3f3f3f3f\n#define mod 19260817\n#define MIN (-0x7fffffffffffffff)\ntypedef  long long  LL;\nusing namespace std;\n\nint n,m;\nLL P[MAXN],Q[MAXN];\nLL C_1[MAXN],C_2[MAXN];\nLL Left[MAXN],Right[MAXN];\n\nint lowbit(int x)\n{\n    return (x&((-1)*x));\n}\n\nLL sum(LL *c,int x)\n{\n    LL ans=0;\n    while(x>0)\n    {\n        ans+=c[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\n\nvoid add(LL  *c,int x,int d)\n{\n    while(x<=n)\n    {\n        c[x]+=d;\n        x+=lowbit(x);\n    }\n}\n\nint query(int x)\n{\n    return lower_bound(Q+1,Q+1+m,x)-Q;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&P[i]);\n        Q[i]=P[i];\n    }\n    sort(Q+1,Q+1+n);\n    m=unique(Q+1,Q+1+n)-(Q+1);      //unqiue\u51fd\u6570\u8fd4\u56de\u53bb\u91cd\u4ee5\u540e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n                                                                         //\u73b0\u5728\u8fd4\u56de\u7684\u5176\u5b9e\u662f\u53bb\u91cd\u540e\u91cc\u9762\u7684\u5143\u7d20\u4e2a\u6570\n    for(int i=1;i<=n;i++)\n    {\n        add(C_1,query(P[i]),1);\n        Left[i]=sum(C_1,query(P[i])-1);         //query\uff08P[i])\u8868\u793aP[i]\u662f\u7b2c\u51e0\u5c0f\uff0c\u56e0\u4e3a\u8981\u6bd4P[i]\u5c0f\uff0c\u6240\u4ee5\u5c31\u662f\u53bb\u4ed6\u524d\u9762\u6709\u51e0\u4e2a\uff0c\u6240\u4ee5\u51cf\u4e00\n    }\n    for(int i=n;i>=1;i--)\n    {\n        add(C_2,query(P[i]),1);\n        Right[i]=n-i-(sum(C_2,query(P[i]))-1);   //\u603b\u7684\u6570\u91cc\u51cf\u53bb\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c31\u662f\u5927\u4e8e\u3002\u7136\u540e\u5904\u7406\u4e00\u4e0b\u7ec6\u8282\n    }\n\n    LL cnt=0;\n    for(int i=2;i<n;i++)\n    {\n        cnt+=Left[i]*Right[i];\n    }\n    printf(\"%lld\\n\",cnt);\n    return 0;\n}\n\n```\n",
        "postTime": 1568686465,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "$Update:$ \u4fee\u6539\u90e8\u5206\u6392\u7248\u3002\n\n## $Description$\n\n\u672c\u9898\u66b4\u529b\u5341\u5206\u597d\u6253\uff0c\u53ea\u9700$O(n^2)$ \u66b4\u529b\u626b\u4e24\u904d\uff0c\u627e\u51fa\u7b2c$i$\u4e2a\u6570\u5728$i$\u524d\u9762\u5e76\u4e14\u6bd4$a[i]$\u5c0f\u7684\u6570\u6709$sum[i]$\u4e2a\uff0c\u5728$i$\u540e\u9762\u5e76\u4e14\u6bd4$a[i]$\u5927\u7684\u6570\u6709$sum2[i]$\u4e2a\u3002\n\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c$ans=sum[i]*sum2[i]$\u3002\n\n\u4f46\u663e\u7136\uff0c\u5bf9\u4e8e$30000$ \u7684\u6570\u636e\uff0c$n^2$\u7684\u590d\u6742\u5ea6\u663e\u7136\u4f1a$T$\u3002\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u52a8\u7528\u4e00\u4e9b~~\u5947\u6280\u6deb\u5de7~~\u4f18\u5316\uff0c\n      \u8fd9\u4e2a\u73a9\u610f\u53ef\u4ee5\u523a\u6fc0cpu\u5e76\u53d1\uff0c\n     ~~\u6bd4\u66b4\u529b\u4e0d\u77e5\u9053\u5feb\u5230\u54ea\u91cc\u53bb\u4e86~~\n\n## $Code: $\n\n```cpp\n// luogu-judger-enable-o2\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#include<bits/stdc++.h>\n#define R register\nusing namespace std;\ntypedef long long ll;\ninline char gc() {\n    static char buf[100000], *p1 = buf, *p2 = buf;\n    return (p1 == p2) && (p2 = (p1 = buf) + \n        fread (buf, 1, 100000, stdin), p1 == p2)? EOF: *p1++;\n}\n#define int ll\ninline ll read(){\n    ll res=0,f=1;\n    char ch=gc();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=gc();}\n    while(ch>='0'&&ch<='9'){res=(res<<3)+(res<<1)+ch-'0';ch=gc();}\n    return res*f;\n}\nvoid write(ll x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10|'0');\n}\nconst int N=30005;\nll ans,n,sum[N],sum2[N],a[N];\n#define debug(x) (cout << \"#x = \" << (x) << endl)\nsigned main(){\n    n=read();\n    for(R int i=1;i<=n;i++) a[i]=read();\n    for(R int i=1;i<=n;i++){\n        R int j = 1;\n        R int a1 = 0, a2 = 0;\n        R int a3 = 0, a4 = 0;\n        R int a5 = 0, a6 = 0;\n        R int a7 = 0, a8 = 0;\n        for (; j + 8 <= i; j += 8) {\n            if (a[j] < a[i]) ++a1;\n            if (a[j + 1] < a[i]) ++a2;\n            if (a[j + 2] < a[i]) ++a3;\n            if (a[j + 3] < a[i]) ++a4;\n            if (a[j + 4] < a[i]) ++a5;\n            if (a[j + 5] < a[i]) ++a6;\n            if (a[j + 6] < a[i]) ++a7;\n            if (a[j + 7] < a[i]) ++a8;\n        }\n        ll k = i - j;\n//\t\tcout << \"!\" << j << \" \" << k << endl;\n        switch (k) {\n            case 0: break;\n            case 1: \n                if (a[j] < a[i]) ++a1;\n                break;\n            case 2: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a2;\n                break;\n            case 3: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a2;\n                if (a[j + 2] < a[i]) ++a3;\n                break;\n            case 4: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a1;\n                if (a[j + 2] < a[i]) ++a2;\n                if (a[j + 3] < a[i]) ++a3;\n                break;\n            case 5: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a1;\n                if (a[j + 2] < a[i]) ++a2;\n                if (a[j + 3] < a[i]) ++a3;\n                if (a[j + 4] < a[i]) ++a4;\n                break;\n            case 6: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a2;\n                if (a[j + 2] < a[i]) ++a3;\n                if (a[j + 3] < a[i]) ++a4;\n                if (a[j + 4] < a[i]) ++a5;\n                if (a[j + 5] < a[i]) ++a6;\n                break;\n            case 7: \n                if (a[j] < a[i]) ++a1;\n                if (a[j + 1] < a[i]) ++a1;\n                if (a[j + 2] < a[i]) ++a2;\n                if (a[j + 3] < a[i]) ++a3;\n                if (a[j + 4] < a[i]) ++a4;\n                if (a[j + 5] < a[i]) ++a5;\n                if (a[j + 6] < a[i]) ++a6;\n                break;\n        }\n        sum[i] += a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8;\n//\t\tfor(R int j=1;j<i;j++)\n//\t\t\tif(a[j]<a[i]) sum[i]++;\n    }\n    for(R int i=1;i<=n;i++){\n        R int j = i + 1;\n        R int a1 = 0, a2 = 0;\n        R int a3 = 0, a4 = 0;\n        R int a5 = 0, a6 = 0;\n        R int a7 = 0, a8 = 0;\n        for (; j + 7 <= n; j += 8) {\n            if (a[j] > a[i]) ++a1;\n            if (a[j + 1] > a[i]) ++a2;\n            if (a[j + 2] > a[i]) ++a3;\n            if (a[j + 3] > a[i]) ++a4;\n            if (a[j + 4] > a[i]) ++a5;\n            if (a[j + 5] > a[i]) ++a6;\n            if (a[j + 6] > a[i]) ++a7;\n            if (a[j + 7] > a[i]) ++a8;\n        }\n        ll k = n - j + 1;\n//\t\tcout << \"!\" << j << \" \" << k << endl;\n        switch (k) {\n            case 0: break;\n            case 1: \n                if (a[j] > a[i]) ++a1;\n                break;\n            case 2: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a2;\n                break;\n            case 3: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a2;\n                if (a[j + 2] > a[i]) ++a3;\n                break;\n            case 4: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a1;\n                if (a[j + 2] > a[i]) ++a2;\n                if (a[j + 3] > a[i]) ++a3;\n                break;\n            case 5: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a1;\n                if (a[j + 2] > a[i]) ++a2;\n                if (a[j + 3] > a[i]) ++a3;\n                if (a[j + 4] > a[i]) ++a4;\n                break;\n            case 6: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a2;\n                if (a[j + 2] > a[i]) ++a3;\n                if (a[j + 3] > a[i]) ++a4;\n                if (a[j + 4] > a[i]) ++a5;\n                if (a[j + 5] > a[i]) ++a6;\n                break;\n            case 7: \n                if (a[j] > a[i]) ++a1;\n                if (a[j + 1] > a[i]) ++a1;\n                if (a[j + 2] > a[i]) ++a2;\n                if (a[j + 3] > a[i]) ++a3;\n                if (a[j + 4] > a[i]) ++a4;\n                if (a[j + 5] > a[i]) ++a5;\n                if (a[j + 6] > a[i]) ++a6;\n                break;\n        }\n        sum2[i] += a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8;\n//\t\tfor(R int j=i+1;j<=n;j++)\n//\t\t\tif(a[j]>a[i]) sum2[i]++;\n    }\n    for(R int i=1;i<=n;i++)\n        ans+=sum[i]*sum2[i];\n    return write (ans), 0;\n}\n\n/*\n11\n1 2 3 4 5 6 7 8 9 10 11\n*/\n",
        "postTime": 1562853125,
        "uid": 177308,
        "name": "profund",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u4f60\u53ef\u4ee5\u524d\u5f80\u6211\u7684\u535a\u5ba2\u67e5\u770b\uff1a[https://www.cnblogs.com/zhylj/p/9492781.html](https://www.cnblogs.com/zhylj/p/9492781.html)\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570$a_i$\uff0c\u6613\u5f97\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a \u5b83\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570$\\times$\u5b83\u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u53ef\u4ee5\u79bb\u6563\u5316\u540e\u518d\u5904\u7406\u4e5f\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4f7f\u7528\u4e86\u52a8\u6001\u5f00\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u53ea\u6709\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u624d\u65b0\u5efa\u8fd9\u4e2a\u8282\u70b9\uff0c\u8fd9\u91cc\u6211\u662f\u5728\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\u65b0\u5efa\u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log (\\max \\rm MAX\\_INT))$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\log (\\max \\rm MAX\\_INT))$\uff08\u5e38\u6570\u771f\u7684\u5f88\u5927\uff09\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u5df2\u6807\u51fa\u3002\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll MAXN = 3e4 + 5, inf = 0x7fffffffLL + 5LL;\n\nll ans = 0, kans[MAXN], a[MAXN], n;\n\nstruct node{\n\n    ll data;\n    node *lc, *rc;\n\n    void pushup() {\n        data = 0;\n        if(lc) data += lc->data;\n        if(rc) data += rc->data;\n    }\n\n    node() {\n        data = 0;\n        lc = rc = NULL;\n    }\n\n} *st1 = new node, *st2 = new node;  //\u5efa\u7acb\u4e24\u68f5\u7ebf\u6bb5\u6811\n\nll query(node *&cur, ll l, ll r, ll ql, ll qr) {\n    if(!cur) return 0;  //\u9632\u6b62\u8bbf\u95ee\u65e0\u6548\u5185\u5b58\n    if(ql <= l && r <= qr) {\n        return cur->data;\n    }\n    ll mid = (l + r) >> 1, ans = 0;\n    if(ql <= mid) ans += query(cur->lc, l, mid, ql, qr);\n    if(qr > mid) ans += query(cur->rc, mid + 1, r, ql, qr);\n    return ans;\n}\n\nvoid modify(node *&cur, ll l, ll r, ll q, ll k) {\n    if(!cur) cur = new node;  //\u65b0\u5efa\u8282\u70b9\n    if(l == r) cur->data += k;\n    else {\n        ll mid = (l + r) >> 1;\n        if(q <= mid) modify(cur->lc, l, mid, q, k);\n        else modify(cur->rc, mid + 1, r, q, k);\n        cur->pushup();\n    }\n}\n\nvoid solve() {\n    for(ll i = 0; i < n; i++) {\n        kans[i] = query(st1, 1, inf, 1, a[i] - 1);  //\u5f97\u5230\u5b83\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n        modify(st1, 1, inf, a[i], 1);\n    }\n    for(ll i = n - 1; i >= 0; i--) {\n        kans[i] *= query(st2, 1, inf, a[i] + 1, inf);  //\u5f97\u5230\u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\n        modify(st2, 1, inf, a[i], 1);\n    }\n}\n\nint main () {\n    cin >> n;\n    for(ll i = 0; i < n; i++) cin >> a[i], a[i]+=2;  //\u4e3a\u4e86\u9632\u6b62\u8bbf\u95ee\u52300\uff0c\u8fd9\u91cc\u76f4\u63a5\u52a0\u4e0a2\uff0c\u662f\u4e0d\u6539\u53d8\u7ed3\u679c\u7684\n    solve();\n    for(ll i = 0; i < n; i++) ans += kans[i];\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1534482313,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u7528\u5206\u5757\u554a\n\n\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u9053\u9898\u66b4\u529b\u662fn^2\u7684\uff0c\u7edf\u8ba1\u4e00\u4e0b\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u81ea\u5df1\u5c0f\u7684\uff0c\u540e\u9762\u6709\u591a\u5c11\u6bd4\u81ea\u5df1\u5927\u7684\uff0c\u76f8\u4e58\u5c31\u662f\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u4e00\u5171n\u4e2a\u6570\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u5757\uff0c\u5c06\u5b83\u5212\u5206\u4e3asqrt(n)\u4e2a\u5757\uff0c\u7edf\u8ba1\u65f6\u53ea\u679a\u4e3e\u8fd9\u4e2a\u6570\u6240\u5728\u7684\u5757\uff0c\u4e0d\u8d85\u8fc7sqrt(n)\uff0c\u518d\u679a\u4e3e\u5b83\u524d\u9762\u6216\u540e\u9762\u7684\u6574\u5757sqrt(n)\uff0c\u8fd9\u9898\u5c31\u53ef\u4ee5n*sqrt(n)\u7684\u89e3\u51b3\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 50100;\nconst int INF = 0x3f3f3f3f;\n\ntypedef pair<int, int> pii;\n#define X first\n#define Y second\n\ntemplate <typename T> inline void read(T &x) {\n    int c = getchar();\n    bool fg = false;\n    for (x = 0; !isdigit(c); c = getchar()) {\n        if (c == '-') {\n            fg = true;\n        }\n    }\n    for (; isdigit(c); c = getchar()) {\n        x = x * 10 + c - '0';\n    }\n    if (fg) {\n        x = -x;\n    }\n}\n\nint n, a[MAXN], L[MAXN], R[MAXN];\nlong long ans;\nint b[MAXN], belong[MAXN], cnt[MAXN / 10], len, tot;\npii ref[MAXN];\n\nint calc_small(int pos) {\n\tint x = pos / len + 1;\n\tint sml = 0, lim = (x - 1) * len;\n\tfor(int i = 1; i < x; i++) sml += cnt[i];\n\tfor(int i = lim; i < pos; i++) sml += b[i];\n\treturn sml;\n}\n\nint calc_Big(int pos) {\n\tint x = pos / len + 1;\n\tint Big = 0, lim = min(x * len - 1, n);\n\tfor(int i = 1 + x; i <= tot; i++) Big += cnt[i];\n\tfor(int i = pos + 1; i <= lim; i++) Big += b[i];\n\treturn Big;\n}\n\nsigned main() {\n\tread(n);\n\tfor(int i = 1; i <= n; i++) read(a[i]), ref[i].X = a[i], ref[i].Y = i;\n\tsort(ref + 1, ref + n + 1);\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(ref[i].X != ref[i - 1].X || i == 1) a[ref[i].Y] = i;\n\t\telse a[ref[i].Y] = a[ref[i - 1].Y];\n\t}\n\tlen = (int) ceil(sqrt(n));\n\ttot = n / len + 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tbelong[i] = a[i] / len + 1;\n\t\tcnt[belong[i]] ++;\n\t\tL[i] = calc_small(a[i]);\n\t\tb[a[i]] ++;\n\t}\n\tmemset(b, 0, sizeof(b)), memset(cnt, 0, sizeof(cnt));\n\tfor(int i = n; i; i--) {\n\t\tcnt[belong[i]] ++;\n\t\tR[i] = calc_Big(a[i]);\n\t\tb[a[i]] ++;\n\t}\n\tfor(int i = 2; i < n; i++) ans += (long long) L[i] * R[i];\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1532234806,
        "uid": 34332,
        "name": "KKarshilov",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u4ee5\u4e00\u4e2a\u6570\u4e3a\u4e2d\u5fc3\u7684thair\u7684\u4e2a\u6570\u5c31\u662f\u5de6\u4fa7\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u6570\u91cf\u4e58\u4ee5\u53f3\u4fa7\u5927\u4e8e\u5b83\u7684\u6570\u7684\u6570\u91cf\u3002\u6700\u540e\u5bf9\u8fd9\u4e9b\u4e58\u79ef\u6c42\u548c\u5c31\u662f\u7b54\u6848\u3002\n\n\u5982\u4f55\u5728\u77ed\u65f6\u95f4\u5185\u6c42\u51fa\u5de6\u4fa7\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u6570\u91cf\u5462\uff1f\u53c2\u8003P1908\u00b7\u9006\u5e8f\u5bf9@\u571f\u95f4\u57cb \u7684\u9898\u89e3\uff0c\u53ef\u4ee5\u6a21\u4eff\u8fd9\u4e2a\u64cd\u4f5c\u65b9\u6cd5\uff0c\u53ea\u9700\u8981\u5c06\u5176\u4e2d\u7684cmp\u51fd\u6570\u6539\u4e3a<\u53f7\uff08\u56e0\u4e3a>\u53f7\u7528\u4e8e\u6c42\u9006\u5e8f\u5bf9\uff0c\u8fd9\u91cc\u662f\u6c42\u201c\u987a\u5e8f\u5bf9\u201d\uff09\u5373\u53ef\u3002\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u76f8\u4fe1\u4f1a\u7406\u89e3\u66f4\u6df1\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u79bb\u6563\u5316\u5404\u7bc7\u9898\u89e3\u90fd\u5df2\u7ecf\u8bb2\u4e86\uff0c\u8fd9\u91cc\u8981\u8bf4\u7684\u662f\u600e\u4e48\u79bb\u6563\u5316\u3002\u4e0d\u59a8\u8bbeh[i]\u8868\u793a\u6570\u7ec4a\u4e2d\u7b2ci\u5c0f\u7684\u6570\u7684\u4e0b\u6807\uff0c\u90a3\u4e48h[i]\u663e\u7136\u6ee1\u8db3a[h[i]] < a[h[i - 1]]\uff1b\u56e0\u6b64\uff0c\u4e00\u4e2asort\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\nk\u6570\u7ec4\u5c31\u662f\u4e3a\u4e86\u6d88\u9664\u91cd\u590d\u6570\u5b57\u8fd9\u4e2a\u95ee\u9898\u800c\u51fa\u73b0\u7684\u3002unique\u51fd\u6570\u5c06\u91cd\u590d\u7684\u6570\u5b57\u8d4b\u4e88\u4e86\u540c\u4e00\u4e2a\u7f16\u53f7\uff0c\u5982\u679c\u65e0\u6cd5\u7406\u89e3\u4ee3\u7801\u53ef\u4ee5\u624b\u7b97\u4e00\u4e0b\u3002\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<numeric>\nusing namespace std;\n\n//l[i]\u662f\u5de6\u4fa7\u5c0f\u4e8ea[i]\u7684\u6570\u7684\u4e2a\u6570\uff1br[i]\u662f\u53f3\u4fa7\u5927\u4e8ea[i]\u7684\u6570\u7684\u4e2a\u6570\n//c\u662fl\u7684\u6811\u72b6\u6570\u7ec4\uff0cC\u662fr\u7684\u6811\u72b6\u6570\u7ec4\uff0cn\u662f\u6570\u5217\u957f\u5ea6\uff0c\u5176\u4f59\u5b57\u6bcd\u5982\u4e0a\u9762\u5206\u6790\u6240\u793a\nint c[30010], C[30010], a[30010], h[30010], n, l[30010], r[30010], k[30010];\nstruct cmp { bool operator()(int x, int y) {return a[x] < a[y];}};\n\nvoid p(int* w, int x) {do ++w[x]; while ((x += (x & (-x))) <= n);}\nint q(int* w, int x) { int s = 0; do s += w[x]; while (x -= (x & (-x))); return s; } //\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c\uff1bp:\u5355\u70b9\u4fee\u6539 q:\u533a\u95f4\u67e5\u8be2\n\nvoid unique() { //\u7ed9\u91cd\u590d\u6570\u5b57\u540c\u4e00\u7f16\u53f7\n\tint d = k[h[1]] = 1;\n\tfor (int i = 2; i <= n; ++i) {\n\t\tif (a[h[i]] != a[h[i - 1]]) ++d;\n        //\u5982\u679c\u4e0d\u540c\uff0c\u7f16\u53f7\u81ea\u589e\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u76f8\u540c\u5c31\u4f1a\u6709\u540c\u4e00\u7f16\u53f7\n\t\tk[h[i]] = d;\n\t}\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) cin >> a[i], h[i] = i;\n\tsort(h + 1, h + n + 1, cmp()); unique() //\u79bb\u6563\u5316\n\tfor (int i = 1; i <= n; ++i)\n\t\tp(c, k[i]), l[i] = q(c, k[i] - 1); //\u4eff\u7167P1908\u7684\u64cd\u4f5c\u8fdb\u884c\uff1b\u6ce8\u610f\u67e5\u8be2\u5de6\u8fb9\u533a\u95f4\u548c\u7684\u65f6\u5019\u5e76\u4e0d\u5305\u62ec\u81ea\u5df1\uff0c\u56e0\u6b64\u8981\u7528k[i] - 1\n\tfor (int i = n; i >= 1; --i)\n\t\tp(C, k[i]), r[i] = n - i - q(C, k[i]) + 1; //\u8fd9\u91cc\u8981\u67e5\u8be2\u7684\u662f\u53f3\u8fb9\u7684\u533a\u95f4\u548c\uff0c\u53ef\u4ee5\u7528\u603b\u548c(\u4e5f\u5c31\u662fn-i+1)\u51cf\u53bb\u5de6\u8fb9\u7684\u533a\u95f4\u548cq(C, k[i])\n\tcout << inner_product(l + 2, l + n, r + 2, 0) << endl; //\u5185\u79ef\uff0c\u4e5f\u5c31\u662fl[2]*r[2]+l[3]*r[3]+...+l[n-1]*r[n-1]\uff1b\u4e0d\u5e261\u548cn\u662f\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5de6\u8fb9\uff08\u6216\u53f3\u8fb9\uff09\u6ca1\u6709\u6570\uff0c\u56e0\u6b64\u4e00\u5b9a\u662f0\uff0c\u5e26\u4e0a\u4e5f\u6ca1\u4ec0\u4e48\u7528\n\treturn 0;\n}\n```",
        "postTime": 1524578875,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u4f5c\u4e3azkw\u7ebf\u6bb5\u6811\u7684\u7ec3\u4e60\u9898\n\n\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf\u4e0e\u63a8\u7406\u53d1\u73b0\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f5c\u4e3a\u4e2d\u4f4d\u6570\u7684\u6570\u6765\u8bf4\uff0c\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570=\u4e4b\u524d\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570\u00d7\u4e4b\u540e\u5927\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u626b\u63cf\u7ebf\u7684\u601d\u60f3\uff0c\u79bb\u6563\u5316\u540e\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u7528zkw\u7ebf\u6bb5\u6811\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u4e4b\u524d\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff1b\u6e05\u7a7a\u7ebf\u6bb5\u6811\uff0c\u4ece\u53f3\u5f80\u5de6\u626b\u4e00\u904d\uff0c\u7528zkw\u7ebf\u6bb5\u6811\u7edf\u8ba1\u6bcf\u4e2a\u6570\u4e4b\u540e\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u6700\u540e\u7d2f\u52a0\u5373\u53ef\n\n\u4e0a\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=(1<<15)-1;\n\nint n;\nint num[1<<16],larger[1<<15],smaller[1<<15];\nlong long ans;\n\nstruct rpg{\n\tint num,renum,id;\n}a[30005];\n\nbool cmp1(rpg a,rpg b){\n\treturn a.num<b.num;\n}bool cmp2(rpg a,rpg b){\n\treturn a.id<b.id;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i].num);\n\t\ta[i].id=i;\n\t}\n\t\n\tsort(a+1,a+n+1,cmp1);\n\ta[1].renum=1;\n\t\n\tfor(int i=2;i<=n;++i){\n\t\tif(a[i].num==a[i-1].num) a[i].renum=a[i-1].renum;\n\t\telse a[i].renum=a[i-1].renum+1;\n\t}\n\t\n\tint cnt=a[n].renum+1;\n\t\n\tsort(a+1,a+n+1,cmp2);\n\t\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=MAXN+a[i].renum;j;j>>=1)\n\t\t\t++num[j];\n\t\tint l=MAXN,r=MAXN+a[i].renum;\n\t\twhile(l^r^1){\n\t\t\tif(~l&1) smaller[i]+=num[l^1];\n\t\t\tif(r&1) smaller[i]+=num[r^1];\n\t\t\tl>>=1;\n\t\t\tr>>=1;\n\t\t}\n\t}\n\t\n\tmemset(num,0,sizeof(num));\n\t\n\tfor(int i=n;i;--i){\n\t\tfor(int j=MAXN+a[i].renum;j;j>>=1)\n\t\t\t++num[j];\n\t\tint l=MAXN+a[i].renum,r=MAXN+cnt;\n\t\twhile(l^r^1){\n\t\t\tif(~l&1) larger[i]+=num[l^1];\n\t\t\tif(r&1) larger[i]+=num[r^1];\n\t\t\tl>>=1;\n\t\t\tr>>=1;\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<=n;++i)\n\t\tans+=smaller[i]*larger[i];\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1520908138,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6765\u7bc7pascal\u7684\n\n\n\u601d\u8def\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u4e58\u6cd5\u539f\u7406\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\uff0c\u5728\u4ed6\u524d\u9762\u5e76\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\\*\u5728\u4ed6\u540e\u9762\u5e76\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u7d2f\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\n\n\n\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\n\n\n\u4e00\u4e2a\u7528\u6765\u6c42\u5728\u4ed6\u524d\u9762\u5e76\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\n\n\u4e00\u4e2a\u7528\u6765\u6c42\u5728\u4ed6\u540e\u9762\u5e76\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\n\n\n\u7c7b\u4f3c\u7684\u7b97\u6cd5\uff1f\u5c31\u662f\u9006\u5e8f\u5bf9\n\n\n\u4e0d\u8fc7\u9700\u8981\u5f04\u70b9\u624b\u6bb5\uff1a\n\n\n\u6c42\u5728\u4ed6\u524d\u9762\u5e76\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u65f6\uff0c\u6765\u4e2a\u5feb\u6392\uff0c\u4ece\u5c0f\u5230\u5927\uff0c\u5e76\u4e14\u76f8\u7b49\u7684\u521d\u59cb\u4f4d\u7f6e\u540e\u7684\u6392\u5728\u524d\n\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\n\u82e5\u6709\u76f8\u7b49\u7684\uff0ci<j,ai=aj\uff0c\u6392\u597d\u5e8f\u540ei\u5728\u524d\n\n\n\u90a3\u4e48\u7b97i\u65f6\u6ca1\u5f71\u54cd\uff0c\u4f46\u7b97j\u65f6\u4f1a\u628ai\u7684\u90a3\u4efd\u4e5f\u52a0\u8fdb\u53bb\uff0c\u5c31wa\u4e86\n\n\n\u6c42\u5728\u4ed6\u540e\u9762\u5e76\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5feb\u6392\uff0c\u4ece\u5927\u5230\u5c0f\uff0c\u5e76\u4e14\u76f8\u7b49\u7684\u521d\u59cb\u4f4d\u7f6e\u524d\u7684\u6392\u5728\u524d\n\n\n\u8bf6\uff0c\u4e0d\u4e00\u6837\u4e86\uff01\n\n\n\u5bf9\uff0c\u662f\u4e0d\u4e00\u6837\n\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u8bb0\u5f55\u4f4d\u7f6e\u540e\u9762\uff0c\u6570\u503c\u5927\u4e8e\u81ea\u5df1\uff0c\u4e0e\u521a\u624d\u5b8c\u5168\u53cd\u4e86\u4e00\u4e0b\n\n\n\u800c\u4e14\u6811\u72b6\u6570\u7ec4\u4fee\u6539\u662f\u5f80\u524d\u52a0\u4e86\uff0c\u6c42\u548c\u662f\u5f80\u540e\u52a0\u4e86\uff0c\u4e5f\u4e0d\u4e00\u6837\n\n\n```cpp\nvar\n    a,b,c,d,tree,minsum,maxsum:array[0..100000] of int64;\n    n,i:longint;\n    ans:int64;\nfunction lowbit(x:int64):int64;\nbegin\n    exit(x and -x);\nend;\nprocedure change(x:int64);\nbegin\n    while x<=n do\n        begin\n            inc(tree[x]);\n            inc(x,lowbit(x));\n        end;\nend;\nfunction getsum(x:int64):int64;\nbegin\n    getsum:=0;\n    while x>0 do\n        begin\n            inc(getsum,tree[x]);\n            dec(x,lowbit(x));\n        end;\nend;\nprocedure change1(x:int64);\nbegin\n    while x>0 do\n        begin\n            inc(tree[x]);\n            dec(x,lowbit(x));\n        end;\nend;\nfunction getsum1(x:int64):int64;\nbegin\n    getsum1:=0;\n    while x<=n do\n        begin\n            inc(getsum1,tree[x]);\n            inc(x,lowbit(x));\n        end;\nend;\nprocedure sort(l,r: longint);\n      var\n         i,j,x,y,m: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2];\n         m:=b[(l+r) div 2];\n         repeat\n           while (a[i]<x) or (a[i]=x) and (b[i]>m) do\n            inc(i);\n           while (x<a[j]) or (x=a[j]) and (m>b[j]) do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                y:=b[i];\n                b[i]:=b[j];\n                b[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nprocedure qsort(l,r: longint);\n      var\n         i,j,x,y,m: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=c[(l+r) div 2];\n         m:=d[(l+r) div 2];\n         repeat\n           while (c[i]>x) or (c[i]=x) and (d[i]<m) do\n            inc(i);\n           while (x>c[j]) or (x=c[j]) and (m<d[j]) do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=c[i];\n                c[i]:=c[j];\n                c[j]:=y;\n                y:=d[i];\n                d[i]:=d[j];\n                d[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           qsort(l,j);\n         if i<r then\n           qsort(i,r);\n      end;\nbegin\n    readln(n);\n    for i:=1 to n do\n        begin\n            read(a[i]);\n            c[i]:=a[i];\n            b[i]:=i;\n            d[i]:=i;\n        end;\n    sort(1,n);\n    qsort(1,n);\n    for i:=1 to n do\n        begin\n            minsum[b[i]]:=getsum(b[i]);\n            change(b[i]);\n        end;\n    fillchar(tree,sizeof(tree),0); //\u7b2c\u4e8c\u4e2a\u6811\u72b6\u6570\u7ec4\n    for i:=1 to n do\n        begin\n            maxsum[d[i]]:=getsum1(d[i]);\n            change1(d[i]);\n        end;\n    for i:=1 to n do\n        inc(ans,minsum[i]*maxsum[i]);  //\u4e58\u6cd5\u539f\u7406\n    writeln(ans);\nend.\n\u6ce8\u610f\uff1a\u5f00int64\uff0c\u4e0d\u7136\u4f1awa\n```",
        "postTime": 1507200005,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u4e86\uff0c\u6539\u7740\u6539\u7740\u5c31AC\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\uff08\u7136\u800c\u81ea\u5df1\u770b\u4e0d\u61c2\u81ea\u5df1\u7684\u4ee3\u7801\uff09\n\n\u4f46\u5728\u6211\u4ed4\u7ec6\u601d\u8003\u540e\u5c31\u60f3\u901a\u4e86^\\_^233\u3002\n\n\u4e0d\u662f\u6709\u4e09\u4e2a\u6570\u5417,\u90a3\u5c31\u5427\u5f53\u524d\u679a\u4e3e\u7684\u6570\u5f53\u505a\u4e09\u4e2a\u6570\u4e2d\u7684\u7b2c\u4e8c\u4e2a\uff0c\u5148\u627e\u6bd4\u5b83\u5c0f\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u518d\u627e\u6bd4\u5b83\u5927\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u5206\u522b\u7528mi[ ]\u548cma [ ]\u8bb0\u5f55\u4e0b\u6765\uff0c\n\n\u6700\u7ec8\u7b54\u6848\u5c31\u662fans+=mi[i]\\*ma[i]\uff1b\n\n##\u7531\u6b64\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u6bd4\u5b83\u5927\u548c\u6bd4\u5b83\u5c0f\u7684\u6570\u6709\u591a\u5c11\u4e2a\u2014\u2014\u5373\u9006\u5e8f\u961f\u3002\n\n##\u5148\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6c42\u6bd4\u5b83\u5c0f\u7684\u6570\u4e2a\u6570\uff0c\u518d\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6c42\u6bd4\u5b83\u5927\u7684\u6570\u4e2a\u6570\u3002\n\n#Code\uff08\u8be6\u89c1\u4ee3\u7801\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=30005;\nlong long map[N],f[N],n,mi[N],ma[N],ans=0;\nstruct node\n{\n    int pos,val;\n}a[N];\nbool cmp(node x,node b)\n{\n    return x.val<b.val;\n}\nbool cmp2(node x,node b)\n{\n    return x.val>b.val;\n}\nvoid add(long long k,int w)\n{\n    while(k<=n)\n    {\n        f[k]+=w;\n        k+=k&-k;\n    }\n}\nlong long query(long long k)\n{\n    long long sum=0;\n    while(k>=1)\n    {\n        sum+=f[k];\n        k-=k&-k;\n    }\n    return sum;\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i].val);a[i].pos=i;\n    }\n    sort(a+1,a+1+n,cmp);//\u4ece\u5c0f\u5230\u5927\u724c \n    for(int i=1;i<=n;i++)//\u79bb\u6563\u5316 \u52a0 \u53bb\u91cd \n    {\n        if(a[i].val==a[i-1].val) map[a[i].pos]=map[a[i-1].pos];\n        else map[a[i].pos]=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        mi[i]=query(map[i]-1);\n        add(map[i],1);\n    }\n    sort(a+1,a+1+n,cmp2);//\u4ece\u5927\u5230\u5c0f\u6392 \n    memset(f,0,sizeof(f));//\u521d\u59cb\u5316f\u6570\u7ec4 \n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].val==a[i-1].val)map[a[i].pos]=map[a[i-1].pos];\n        else map[a[i].pos]=i;\n    }\n    for(int i=n;i>=1;i--)\n    {\n        ma[i]=query(map[i]-1);//\u8981\u53bb\u6389\u672c\u8eab\uff0cso -1 \uff0c\u8fd8\u6709\u8bf7\u6ce8\u610f\u6211\u548c\u697c\u4e0b\u5199\u7684\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4e0d\u662fn-map[i] \n        add(map[i],1);\n    }\n    for(int i=1;i<=n;i++)ans+=mi[i]*ma[i];\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1505792884,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "##\u79bb\u6563\u5316 + \u6811\u72b6\u6570\u7ec4\n\n1.\u663e\u7136\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u5bdf\u4e2d\u95f4\u7684\u5143\u7d20\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u5176\u5de6\u8fb9\u4e25\u683c\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570d\u548c\u53f3\u8fb9\u4e25\u683c\u5927\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570u\uff0c\u7136\u540e\u5c06u\\*d\u7edf\u8ba1\u8fdb\u7b54\u6848\u5373\u53ef\n\n2.\u8003\u8651\u5982\u4f55\u6c42u\u548cd\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u501f\u52a9\u4e00\u9897\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\u8fd9\u91cc\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e24\u9897\u6811\u72b6\u6570\u7ec4\uff0c\u4e00\u4e2a\u6b63\u5411\u6dfb\u52a0\u6570\u5b57\uff0c\u4e00\u4e2a\u53cd\u5411\u6dfb\u52a0\u6570\u5b57\uff0c\u7136\u540e\u8fb9\u6dfb\u52a0\u8fb9\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u4e25\u683c\u5927\u4e8e/\u5c0f\u4e8e\u5b83\u7684\u6570\u5b57\u5373\u53ef\uff08\u5f53\u7136\u9700\u8981\u79bb\u6563\u5316\uff09\n\n\u4e0d\u61c2\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u81ea\u884c\u767e\u5ea6QAQ\n\n\u5e26\u6ce8\u91ca\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#define LL long long\n#define lowbit(x) ((x)&-(x))\n#define MAXN 30005\nnamespace IO\n{\n    inline int getint()\n    {\n        int x = 0, f = 1;\n        char c = getchar();\n        while(c < '0' || c > '9')\n        {\n            if(c == '-') f = 0;\n            c = getchar();\n        }\n        while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n        return f ? x : -x;\n    }\n};\nusing namespace std;\nusing namespace IO;\nint n, m;\nLL ans;\nint a[MAXN], h[MAXN];//\u539f\u503c / \u65b0\u503c\nint u[MAXN], d[MAXN];//\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u4e2a\u6570 / \u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u4e2a\u6570\nstruct BinaryIndexedTree\n{\n    int C[MAXN];\n    void add(int x, int v)\n    {\n        for(; x <= n && x > 0; x += lowbit(x)) C[x] += v;\n    }\n    int getsum(int x)\n    {\n        int sum = 0;\n        for(; x > 0; x -= lowbit(x)) sum += C[x];\n        return sum;\n    }\n} T[2];\nint main()\n{\n    n = getint();\n    for(int i = 1; i <= n; ++i) a[i] = h[i] = getint();\n    sort(a + 1, a + n + 1);//\u79bb\u6563\u5316\u4f7f\u8303\u56f4\u53d8\u4e3a[1,n]\n    m = unique(a + 1, a + n + 1) - a - 1;\n    for(int i = 1; i <= n; ++i) h[i] = lower_bound(a + 1, a + m + 1, h[i]) - a;\n    for(int i = 1; i <= n; ++i)//\u4ece\u5de6\u5f80\u53f3\u6dfb\u52a0\u6570\u5b57\u5e76\u6c42\u51fa\u5de6\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u4e2a\u6570\n    {\n        d[i] = T[0].getsum(h[i] - 1);//\u6c42\u51fa\u6bd4\u5b83\u5c0f\u7684\u6570\u5b57\u4e2a\u6570\n        T[0].add(h[i], 1);//\u7136\u540e\u518d\u52a0\u5165\u8fd9\u4e2a\u6570\u5b57\n    }\n    for(int i = n; i >= 1; --i)//\u4ece\u53f3\u5f80\u5de6\u6dfb\u52a0\u6570\u5b57\u5e76\u6c42\u51fa\u53f3\u8fb9\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u4e2a\u6570\n    {\n        u[i] = n - i - T[1].getsum(h[i]);//\u6c42\u51fa\u6bd4\u5b83\u5927\u7684\u6570\u5b57\u7684\u4e2a\u6570\n        T[1].add(h[i], 1);//\u7136\u540e\u518d\u52a0\u5165\u8fd9\u4e2a\u6570\u5b57\n    }\n    for(int i = 1; i <= n; ++i) ans += u[i] * d[i];//\u7edf\u8ba1\u7b54\u6848\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1491102514,
        "uid": 19370,
        "name": "ShaunWang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "# P1637\n\n\u8fd9\u662f\u4e00\u7bc7\u7528\u4e86 c++11 \u7279\u6027\u548c\u6a21\u677f\u7c7b\u7684\u9898\u89e3\u3002\n\n\u5176\u5b9e\u6811\u72b6\u6570\u7ec4\u6c42\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u5c31\u662f\u4e00\u4e2a\u6c42\u987a\u5e8f\u5bf9\u7684 combo \u3002\u5728\u505a\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u601d\u8003\u5982\u679c\u6240\u7ed9\u7684\u5e8f\u5217\u91cc\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u65f6\u5019\u8be5\u600e\u4e48\u505a\uff0c\u518d\u8003\u8651\u5982\u679c\u6709\u91cd\u590d\u5143\u7d20\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u663e\u7136\u7684\u662f\uff0c\u8fd9\u9053\u9898\u8981\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u663e\u7136\u624b\u6572 update1\uff0c update2 \u4e0d\u662f\u4e00\u4e2a\u4f18\u96c5\u7684\u5199\u6cd5\uff08\u9003\u3002\u8fd9\u91cc\u7b80\u5355\u6559\u5927\u5bb6\u5199\u4e00\u4e0b\u6a21\u677f\u7c7b\u3002\n\n```cpp\n\ntemplate<typename T>\nclass {\npublic:\n  // define something...\n  // do something...\n}\n```\n\ntemplate \u662f\u6a21\u677f\u7684\u610f\u601d\uff0c typename \u662f c++ \u91cc\u9762\u7684\u7c7b\u540d\u79f0\uff0c\u53ef\u4ee5\u662f int \uff0c long long \uff0c double \uff0c\u975e\u5e38\u65b9\u4fbf\uff0c \u518d c++ stl \u91cc\u9762\u5e7f\u6cdb\u4f7f\u7528\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u8fd9\u91cc\u5c01\u88c5\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6a21\u677f\u7c7b\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5 BIT<int> tree \u6765\u521b\u5efa\u4e00\u9897\u6811\u72b6\u6570\u7ec4\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff0c\u5077\u61d2\u7528\u4e86 lambda \u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u6548\u679c\u7b49\u4ef7\u4e8e cmp \u51fd\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst int maxn = 1e5 + 5;\n\nint n, m, k;\n\nstruct Node {\n  int pos, key;\n  Node(int pos = 0, int key = 0):\n      pos(pos), key(key) {};\n};\n\nNode pool[maxn];\n\ntemplate <typename T>\nclass BIT {\npublic:\n  T c[maxn];\n  inline int lowbit(int x) { return x & (-x); }\n  void update(int x, int dv) {\n    for (int i = x; i <= n; i += lowbit(i)) {\n      c[i] += dv;\n    }\n  }\n  T getSum(int x) {\n    T ret = 0;\n    for (int i = x; i; i -= lowbit(i)) {\n      ret += c[i];\n    }\n    return ret;\n  }\n};\n\nBIT<int> t1, t2; // t1 ---- \n\nint prv[maxn];\n\nint main() {\n  scanf(\"%d\", &n);\n  int x;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &x);\n    pool[i] = Node(i, x);\n  }\n  sort(pool + 1, pool + n + 1, [](Node a, Node b) { return a.key < b.key; });\n  for (int i = 1, j = 1; i <= n; i++) {\n    if (pool[i].key != pool[i - 1].key) {\n      while (j < i) {\n        t1.update(pool[j++].pos, 1);\n      }\n    }\n    prv[i] = t1.getSum(pool[i].pos - 1);\n  }\n  ll ans = 0;\n  for (int i = n, j = n; i; i--) {\n    if (pool[i].key != pool[i + 1].key) {\n      while (j > i) {\n        t2.update(pool[j--].pos, 1);\n      }\n    }\n    ans += prv[i] * (t2.getSum(n) - t2.getSum(pool[i].pos));\n  }\n  printf(\"%lld\", ans);\n  return 0;\n}\n\n```",
        "postTime": 1534237802,
        "uid": 53067,
        "name": "YuntianZhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u62ff\u5230\u9898\u76ee\u4e4b\u540e\u7b80\u5355\u5730\u5206\u6790\u4e86\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e2d\u95f4\u5143\u7d20\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u5de6\u8fb9\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u5b83\\*\u53f3\u8fb9\u6709\u591a\u5c11\u4e2a\u6570\u5927\u4e8e\u5b83\u3002\n\n\u4e8e\u662f\u6211\u82b1\u4e86\u4e0d\u523010\u5206\u949f\u968f\u624b\u6572\u4e86\u4e2a\u6811\u72b6\u6570\u7ec4\u5957splay\u3002\n\n\u4f17\u6240\u5468\u77e5splay\u4e0a\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e/\u5927\u4e8e\u7ed9\u5b9a\u503c\u90fd\u662f\u5f88\u7b80\u5355\u7684\u3002\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u53d8\u6210 \u7ed9\u5b9a\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e/\u5927\u4e8e\u7ed9\u5b9a\u503c\uff0c\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u5206\u89e3\u4e3a\u6811\u72b6\u6570\u7ec4\u4e0a\u7684\u82e5\u5e72\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u5c31\u53ea\u8981\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684splay\u8fdb\u884c\u67e5\u8be2\u6700\u540e\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u53e6\u5916\uff0c\u7b54\u6848\u8981\u5f00long long! \u4e00\u5f00\u59cb\u6ca1\u7528long longWA\u523063\u5206\n\n```cpp\n// C++11\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...);\n}\n\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n\nconst int maxn = 3e5 + 100;\nconst int maxsize = maxn * 30;\nint root[maxn];\nint a[maxn];\nint fa[maxsize], ch[maxsize][2], size[maxsize], freq[maxsize], value[maxsize];\nint n, tot;\n\ninline int newNode(int v = 0) {\n    value[++tot] = v;\n    size[tot] = 1;\n    freq[tot] = 1;\n    return tot;\n}\ninline void update(int x) {\n    size[x] = freq[x];\n    if (ch[x][0])\n        size[x] += size[ch[x][0]];\n    if (ch[x][1])\n        size[x] += size[ch[x][1]];\n}\ninline int iden(int x) {\n    if (ch[fa[x]][0] == x) return 0;\n    if (ch[fa[x]][1] == x) return 1;\n    return -1;\n}\ninline void rotate(int x) {\n    if (!x) return;\n    int d = iden(x);\n    int y = fa[x];\n    if (~iden(y))\n        ch[fa[y]][iden(y)] = x;\n    fa[x] = fa[y];\n    ch[y][d] = ch[x][d ^ 1];\n    if (ch[x][d ^ 1])\n        fa[ch[x][d ^ 1]] = y;\n    ch[x][d ^ 1] = y;\n    fa[y] = x;\n    update(y);\n    update(x);\n}\ninline void splay(int x, int &k) {\n    int p = fa[k];\n    while (fa[x] != p) {\n        int y = fa[x];\n        if (fa[y] != p) {\n            if (iden(y) ^ iden(x))\n                rotate(x);\n            else\n                rotate(y);\n        }\n        rotate(x);\n    }\n    k = x;\n}\ninline int insert(int &k, int val) {\n    if (!k) {\n        k = newNode(val);\n        return k;\n    }\n    int x = k;\n    while (0207) {\n        ++size[x];\n        if (val == value[x]) {\n            ++freq[x];\n            splay(x, k);\n            return x;\n        }\n        int d = val > value[x];\n        if (ch[x][d]) x = ch[x][d];\n        else {\n            ch[x][d] = newNode(val);\n            fa[ch[x][d]] = x;\n            x = ch[x][d];\n            splay(x, k);\n            return x;\n        }\n    }\n}\nint lessThan(int x, int val) {\n    if (!x) return 0;\n    if (val <= value[x])\n        return lessThan(ch[x][0], val);\n    else if (ch[x][0])\n        return size[ch[x][0]] + freq[x] + lessThan(ch[x][1], val);\n    else\n        return freq[x] + lessThan(ch[x][1], val);\n}\nint greaterThan(int x, int val) {\n    if (!x) return 0;\n    if (val >= value[x])\n        return greaterThan(ch[x][1], val);\n    else if (ch[x][1])\n        return size[ch[x][1]] + freq[x] + greaterThan(ch[x][0], val);\n    else\n        return freq[x] + greaterThan(ch[x][0], val);\n}\n\ninline long long queryLess(int p, int x) {\n    long long ret = 0;\n    for (; p; p -= p & -p)\n        ret += lessThan(root[p], x);\n    return ret;\n}\ninline long long queryGreater(int p, int x) {\n    long long ret = 0;\n    for (; p; p -= p & -p)\n        ret += greaterThan(root[p], x);\n    return ret;\n}\ninline void insertBit(int p, int x) {\n    for (; p <= n; p += p & -p)\n        insert(root[p], x);\n}\n\nint main() {\n    read(n);\n    rep(i, 1, n) read(a[i]);\n    rep(i, 1, n) insertBit(i, a[i]);\n    if (n <= 2) {\n        puts(\"0\");\n        return 0;\n    }\n    long long ans = 0;\n    rep(i, 2, n - 1)\n        ans += queryLess(i - 1, a[i]) * (queryGreater(n, a[i]) - queryGreater(i - 1, a[i]));\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1532662264,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1637 \u3010\u4e09\u5143\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    }
]