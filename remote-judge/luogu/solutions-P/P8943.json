[
    {
        "content": "### \u9898\u610f\uff1a\r\n\u9996\u5148\uff0c$n$ \u4e2a\u7ed3\u70b9\u3001$n$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\u3002\r\n\r\n\u6211\u4eec\u5145\u5206\u53d1\u6325\u4eba\u7c7b\u667a\u6167\uff0c\u60f3\u5230\uff0c\u6811\u6709 $n-1$ \u6761\u8fb9\u5440\uff01\u6240\u4ee5\u8fd9\u4e2a\u56fe\u5c31\u662f\u4e00\u68f5\u6811\u52a0\u4e86\u4e00\u6761\u8fb9\uff0c\u7ec4\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u53c8\u79f0\u57fa\u73af\u6811\u3002\r\n\r\n### \u601d\u8def\uff1a\r\n\r\n\u6211\u4eec\u77e5\u9053\u56fe\u91cc\u5fc5\u7136\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u73af\uff0c\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u8fd8\u5927\u4e8e $4$\u3002\u6240\u4ee5\u5982\u679c\u9003\u79bb\u8005 $A$ \u5728\u76d1\u5b88\u8005 $B$ \u5835\u4f4f\u8def\u4e4b\u524d\u5230\u8fbe\u73af\u4e0a\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u5c31\u4e00\u5b9a\u80fd\u628a\u76d1\u5b88\u8005\u7ed5\u6b7b\u3002\r\n\r\n\u6211\u4eec\u77e5\u9053\u56fe\u91cc\u53ea\u6709\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u9664\u4e86\u73af\u4e0a\u4ee5\u5916\u7684\u70b9\u90fd\u53ea\u80fd\u901a\u5411\u73af\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u79f0 $A$ \u7b2c\u4e00\u6b21\u8e0f\u4e0a\u73af\u7684\u5730\u70b9\u4e3a $fa_A$\u3002\u82e5 $B$ \u80fd\u591f\u62a2\u5148\uff0c\u6216\u8005\u4e0e $A$ \u540c\u65f6\u5230\u8fbe $fa_A$\uff0c\u90a3\u4e48 $A$ \u5fc5\u8f93\u3002\u5426\u5219\uff0c$A$ \u5fc5\u80dc\u3002\r\n\r\n\u90a3\u4e48\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\uff0c\u5c31\u662f $A$ \u4e0e\u73af\u7684\u8ddd\u79bb $dep_A$\u3001$A$ \u8e0f\u4e0a\u73af\u7684\u4f4d\u7f6e $fa_A$\u3001$B$ \u4e0e\u73af\u7684\u8ddd\u79bb $dep_B$\u3001$B$ \u8e0f\u4e0a\u73af\u7684\u4f4d\u7f6e $fa_B$\u3001$A$ \u8e0f\u4e0a\u4f4d\u7f6e\u4e0e $B$ \u8e0f\u4e0a\u4f4d\u7f6e\u7684\u8ddd\u79bb $dist(fa_A,fa_B)$\u3002\u5982\u679c\u8be5\u70b9\u5728\u73af\u4e0a\uff0c\u5219 $dep$ \u503c\u4e3a $0$\u3002\r\n\r\n\u5f53 $dep_A \\le dist(fa_A,fa_B)+dep_B$\uff0c\u76d1\u5b88\u8005\u5c31\u4f1a\u5835\u4f4f\u95e8\u5403\u6389 $A$\u3002\u53cd\u4e4b $A$ \u53ef\u4ee5\u9003\u5165\u73af\u4e2d\u7ed5\u6740\u76d1\u5b88\u8005\u3002\r\n\r\n\u4e8e\u662f\uff0c\u9884\u5904\u7406\u8fd9\u4e00\u5806\u5c31\u884c\u5566\uff01\r\n\r\n\u5206\u89e3\u6b65\u9aa4\uff1a\r\n\r\n1. \u5206\u79bb\u51fa\u56fe\u4e2d\u7684\u73af\u3002\r\n2. \u5bf9\u4e8e\u6bcf\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u904d\u5386\u5176\u5b50\u5b59\uff0c\u9884\u5904\u7406\u8ddd\u79bb\u3002\r\n3. \u9884\u5904\u7406\u73af\u4e0a\u70b9\u4e92\u76f8\u7684\u8ddd\u79bb\u3002\r\n\r\n\u5f53\u7136\uff0c\u5982\u679c $A$ \u5df2\u7ecf\u5728\u73af\u4e0a\uff0c\u80af\u5b9a\u6709\u6551\uff0c\u53ef\u4ee5\u5148\u7279\u5224\u4f46\u6ca1\u5fc5\u8981\u3002\r\n\r\n\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u5197\u6742\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u4ee3\u7801\u663e\u5f97\u957f\u3002\u5177\u4f53\u53ef\u53c2\u89c1\u6ce8\u91ca\u3002\r\n### \u7a0b\u5e8f\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<vector>\r\n#include<cmath>\r\nconst int N=2e5+1;\r\nusing namespace std;\r\nint n,q,fd,f[N],dep[N],cnt,sw[N];\r\nbool vis[N],cir[N];\r\nvector<int>g[N];\r\nvoid dfs1(int x,int fa){//\u7b2c\u4e00\u4e2a dfs\uff0c\u627e\u5230\u6240\u6709\u73af\u4e0a\u7684\u70b9\u5e76\u6807\u8bb0\r\n\tif(vis[x]==true){//\u5982\u679c\u56de\u5230\u8001\u5730\u65b9\uff0c\u8bf4\u660e\u6709\u73af\u4e86\r\n\t\tfd=x;\r\n\t\tcir[x]=true;\r\n\t\tsw[x]=++cnt;//\u7ed9\u73af\u4e0a\u7684\u70b9\u4f9d\u6b21\u6253\u4e0a\u6807\u8bb0\uff0c\u65b9\u4fbf\u540e\u9762\u67e5\u8be2\u73af\u4e0a\u4e24\u70b9\u7684\u8ddd\u79bb\r\n\t\treturn;\r\n\t}\r\n\tvis[x]=true;\r\n\tint u=g[x].size();\r\n\tfor(int i=0;i<u;i++){\r\n\t\tint v=g[x][i];\r\n\t\tif(v!=fa)dfs1(v,x);\r\n\t\tif(fd!=0){\r\n\t\t\tif(fd==x)fd=0;\r\n\t\t\tif(!cir[x]){\r\n\t\t\t\tcir[x]=true;//\u56de\u6eaf\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6253\u6807\u8bb0\r\n\t\t\t\tsw[x]=++cnt;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}\r\nvoid dfs2(int old,int x,int fa){//\u5904\u7406\u6240\u6709\u975e\u73af\u4e0a\u70b9\u4e0e\u73af\u7684\u8ddd\u79bb\uff08\u6df1\u5ea6\uff09\r\n\tf[x]=old;//\u5b58\u8e0f\u4e0a\u73af\u7684\u5730\u70b9\r\n\tdep[x]=dep[fa]+1;\r\n\tint u=g[x].size();\r\n\tfor(int i=0;i<u;i++){\r\n\t\tint v=g[x][i];\r\n\t\tif(!cir[v]&&g[x][i]!=fa)dfs2(old,v,x);\r\n\t}\r\n}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&q);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\tg[u].push_back(v);\r\n\t\tg[v].push_back(u);//vector \u8fde\u8fb9\r\n\t}\r\n\tdfs1(1,0);\r\n\tdep[0]=-1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif(cir[i])//\u5bf9\u4e8e\u6240\u6709\u73af\u4e0a\u7684\u70b9\uff0c\u8fdb\u884c\u7b2c\u4e8c\u4e2a dfs\r\n\t\t\tdfs2(i,i,0);\r\n\twhile(q--){\r\n\t\tint x,y;\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\tint st=f[x],ed=f[y];//\u8e0f\u4e0a\u73af\u7684\u4e24\u5730\r\n\t\tint len=abs(sw[st]-sw[ed]);//\u73af\u4e0a\u4e24\u5730\u4e4b\u95f4\u7684\u8ddd\u79bb\r\n\t\tif(len>cnt/2)len=cnt-len;\r\n\t\tif(cir[x]||dep[x]<dep[y]+len)printf(\"Survive\\n\");\r\n\t\telse printf(\"Deception\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n### THE END",
        "postTime": 1673794575,
        "uid": 299883,
        "name": "HYdroKomide",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P8943"
    },
    {
        "content": "## Description\r\n\u9898\u76ee\u7ed9\u7684\u5f88\u8be6\u7ec6\u4e86\u3002\r\n## Solution\r\n\u9996\u5148 $n$ \u4e2a\u70b9 $n$ \u6761\u8fb9\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u57fa\u73af\u6811(\u6bd4\u6b63\u5e38\u7684\u6811\u591a\u4e86\u4e00\u6761\u8fb9\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u73af)\uff0c\u4e0d\u4f1a\u4e5f\u6ca1\u5173\u7cfb\uff0c\u8fd9\u9898\u8ddf\u57fa\u73af\u6811\u5176\u5b9e\u5173\u7cfb\u4e0d\u5927\u3002\r\n\r\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u4e2d\u8bf4\u660e\u4e86\u8fd9\u4e2a\u73af\u4e0d\u662f\u4e00\u4e2a\u56db\u5143\u53ca\u4ee5\u4e0b\u7684\u73af\uff0c\u8fd9\u4ee3\u8868\u7740\u5982\u679c $A$ \u63d0\u524d\u8fdb\u5165\u4e86\u8fd9\u4e2a\u73af\uff0c\u90a3\u4e48\u4ed6\u5c31\u53ef\u4ee5\u548c $B$ \u5468\u65cb\uff0c\u8fd9\u6837 $B$ \u5c31\u6c38\u8fdc\u90fd\u6293\u4e0d\u5230 $A$ \uff1b\u76f8\u53cd\u7684\uff0c\u5982\u679c $B$ \u8d76\u5728 $A$ \u4e4b\u524d\u5c31\u628a $A$ \u901a\u5f80\u73af\u5185\u7684\u90a3\u4e2a\u70b9\u5c31\u5c01\u6b7b\u4e86\uff0c\u90a3\u4e48 $A$ \u5c31\u53ea\u80fd\u9759\u5f85\u88ab\u6293\u4e86\u3002\r\n\r\n\u60f3\u5230\u8fd9\u91cc\u5176\u5b9e\u601d\u8def\u5c31\u5f88\u660e\u4e86\u4e86\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u51fa\u8fd9\u4e9b\u4e1c\u897f\uff1a\r\n\r\n- \u6c42\u51fa\u8fd9\u4e2a\u73af\uff1b\r\n\r\n- \u6c42\u51fa\u6bcf\u4e2a\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u4ee5\u53ca\u6700\u521d\u5230\u73af\u4e0a\u7684\u54ea\u4e2a\u70b9\uff1b\r\n\r\n- \u6c42\u51fa\u73af\u5185\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\r\n\r\n\u7531\u4e8e\u8d5b\u524d\u51e0\u5929\u4e00\u76f4\u5728\u5b66\u4e60\u8fb9\u53cc\uff0c\u964d\u667a\u4e86\uff0c\u6240\u4ee5\u627e\u73af\u6211\u7528\u7684\u8fb9\u53cc\u505a\u7684(\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u62d3\u6251\u7b49\u65b9\u6cd5\u6765\u89e3\u51b3\uff1b\r\n\r\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec $O(n)$ \u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u70b9 $x$ \u5728\u73af\u5185\u70b9 $y$ \u4e0d\u5728\u73af\u5185\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u4ece $y$ \u5f00\u59cb\u8fdb\u884c\u5e7f\u641c\u7ed9 $y$ \u5ef6\u4f38\u51fa\u6765\u7684\u5b50\u6811\u6253\u4e0a\u6807\u8bb0\u3002\r\n\r\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u968f\u4fbf\u65ad\u6389\u73af\u4e0a\u7684\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5f62\u6210\u7684\u5c31\u662f\u4e00\u6761\u94fe\uff0c\u6211\u4eec\u5728\u94fe\u4e0a\u4ee5\u65ad\u7684\u90a3\u6761\u8fb9\u7684\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u4e3a\u8d77\u70b9\u518d\u8fdb\u884c\u4e00\u6b21\u5e7f\u641c\uff0c\u5904\u7406\u51fa\u73af\u4e0a\u6bcf\u4e2a\u70b9\u5230\u8fd9\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6700\u540e\u73af\u4e0a\u4e24\u4e2a\u70b9 $x,y$ \u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u662f $\\min(\\lvert len_x-len_y \\rvert,size- \\lvert len_x-len_y \\rvert)$\uff0c\u5176\u4e2d $size$ \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u3002\r\n\r\n\u7531\u6b64\u53ef\u77e5\uff0c\u603b\u590d\u6742\u5ea6\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\r\n\r\n## Code\r\n```cpp\r\n#include<bits/stdc++.h>\r\n//define int long long\r\n#define ll long long\r\n#define next nxt\r\n#define re register\r\n#define il inline\r\nconst int N = 4e5 + 5;\r\nusing namespace std;\r\nint max(int x,int y){return x > y ? x : y;}\r\nint min(int x,int y){return x < y ? x : y;}\r\n\r\nint n,q,u,v,cnt,tot,idx,ans,k,cutx,cuty;\r\nint low[N],dfn[N],stk[N],belong[N],len[N];\r\nstruct Node{\r\n\tint tp,dep;//tp\u8868\u793a\u8fd9\u4e2a\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u901a\u8fc7\u54ea\u4e2a\u70b9\u8fdb\u5165\u73af\uff0c\u4ee5\u53ca\u5230\u73af\u7684\u8ddd\u79bb\r\n}f[N];\r\nvector <int> vec[N];\r\nstruct node{\r\n\tint u,v,next;\r\n}edge[N<<1]; int head[N],num_edge;\r\n\r\nil int read()\r\n{\r\n\tint f=0,s=0;\r\n\tchar ch=getchar();\r\n\tfor(;!isdigit(ch);ch=getchar()) f |= (ch=='-');\r\n\tfor(; isdigit(ch);ch=getchar()) s = (s<<1) + (s<<3) + (ch^48);\r\n\treturn f ? -s : s;\r\n}\r\n\r\nil void add(int from,int to)\r\n{\r\n\tedge[++num_edge] = (node){from,to,head[from]};\r\n\thead[from] = num_edge;\r\n}\r\n\r\nil void tarjan(int x,int in_edge)//\u8fb9\u53cc\u7f29\u70b9\r\n{\r\n\tdfn[x] = low[x] = ++tot;\r\n\tstk[++idx] = x;\r\n\tfor(re int i=head[x];i;i=edge[i].next)\r\n\t{\r\n\t\tint y = edge[i].v;\r\n\t\tif(!dfn[y])\r\n\t\t{\r\n\t\t\ttarjan(y,i);\r\n\t\t\tlow[x] = min(low[x],low[y]);\r\n\t\t}\r\n\t\telse if(i != (in_edge^1)) low[x] = min(low[x],dfn[y]);\r\n\t}\r\n\tif(dfn[x] == low[x])\r\n\t{\r\n\t\t++cnt;\r\n\t\twhile(x != stk[idx+1])\r\n\t\t{\r\n\t\t\tvec[cnt].push_back(stk[idx]);\r\n\t\t\tbelong[stk[idx]] = cnt;\r\n\t\t\tidx--;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nil void bfs(int tp,int x,int dep)//\u6c42\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u4ece\u54ea\u4e2a\u70b9\u5165\u73af\uff0c\u8def\u5f84\u957f\u5ea6\u662f\u591a\u5c11\r\n{\r\n\tf[x] = (Node){tp,dep};\r\n\tqueue <int> q;\r\n\tq.push(x);\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tu = q.front(); q.pop();\r\n\t\tfor(re int i=head[u];i;i=edge[i].next)\r\n\t\t{\r\n\t\t\tv = edge[i].v;\r\n\t\t\tif(v == tp) continue;\r\n\t\t\tif(!f[v].dep)\r\n\t\t\t{\r\n\t\t\t\tf[v].dep = f[u].dep + 1 , f[v].tp = tp;\r\n\t\t\t\tq.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nil void circle()//\u6c42\u65ad\u8fb9\u540e\u94fe\u4e0a\u8def\u5f84\u957f\r\n{\r\n\tmemset(len , -1 , sizeof len);\r\n\tlen[cutx] = 0;\r\n\tqueue <int> q;\r\n\tq.push(cutx);\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tu = q.front(); q.pop();\r\n\t\tfor(re int i=head[u];i;i=edge[i].next)\r\n\t\t{\r\n\t\t\tv = edge[i].v;\r\n\t\t\tif((u == cutx && v == cuty) || (v == cutx && u == cuty)) continue;\r\n\t\t\tif(belong[v] != k) continue;\r\n\t\t\tif(len[v] == -1)\r\n\t\t\t{\r\n\t\t\t\tlen[v] = len[u] + 1;\r\n\t\t\t\tq.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nsigned main()\r\n{\r\n\tn = read() , q = read();\r\n\tnum_edge = 1;\r\n\tfor(re int i=1;i<=n;i++)\r\n\t{\r\n\t\tu = read() , v = read();\r\n\t\tadd(u,v) , add(v,u);\r\n\t}\r\n\ttarjan(1,1);//\u8fb9\u53cc\u7f29\u70b9\u627e\u73af\r\n\tfor(re int i=1;i<=cnt;i++) if(vec[i].size() > 1) { k = i; break; }//\u627e\u54ea\u4e2a\u662f\u73af,\u6b65\u9aa4\u4e00\r\n\tfor(re int i=2;i<=num_edge;i++)\r\n\t{\r\n\t\tu = edge[i].u , v = edge[i].v;\r\n\t\tif(belong[u] == belong[v]) { cutx = u , cuty = v ; continue; }//\u968f\u4fbf\u627e\u4e00\u6761\u5728\u73af\u4e0a\u7684\u8fb9\r\n\t\tif(belong[u] == k && belong[v] != k) bfs(u,v,1);//\u4e00\u4e2a\u5728\u73af\u4e0a\u4e00\u4e2a\u4e0d\u5728\u73af\u4e0a,\u8fdb\u884c\u6b65\u9aa4\u4e8c\r\n\t}\r\n\tcircle();//\u6b65\u9aa4\u4e09\r\n\tint siz = vec[k].size() , disu , disv;\r\n\twhile(q--)\r\n\t{\r\n\t\tu = read() , v = read();\r\n\t\tif(belong[u] == k) { cout << \"Survive\" << \"\\n\"; continue; }//\u539f\u672c\u5c31\u5728\u73af\u91cc\u90a3\u76f4\u63a5\u8dd1\u4e86\r\n\t\tdisu = f[u].dep;//\u8ba1\u7b97\u8def\u5f84\u957f\u5ea6\r\n\t\tif(belong[v] == k) disv = min(abs(len[f[u].tp]-len[v]),siz-abs(len[f[u].tp]-len[v]));//B\u8981\u62e6\u622a\u7684\u8ddd\u79bb\u5c31\u662fB\u5230\u73af\u7684\u8ddd\u79bbB\u7684tp\u548cA\u7684tp\u4e4b\u95f4\u7684\u8ddd\u79bb\r\n\t\telse disv = f[v].dep + min(abs(len[f[u].tp]-len[f[v].tp]),siz-abs(len[f[u].tp]-len[f[v].tp]));\r\n\t\tif(disu < disv) cout << \"Survive\" << \"\\n\";\r\n\t\telse cout << \"Deception\" << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1673829974,
        "uid": 231543,
        "name": "bloodstalk",
        "ccfLevel": 4,
        "title": "P8943 Deception Point \u9898\u89e3"
    },
    {
        "content": "![](https://cdn.luogu.com.cn/upload/image_hosting/zxc9uiax.png)\uff08x\n\n***\n\n\u51fa\u9898\u4eba\u9898\u89e3\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u8003\u8651\uff0c$n$ \u4e2a\u70b9 $n$ \u6761\u8fb9\u7684\u8fde\u901a\u56fe\u957f\u5565\u6837\u3002\u6211\u4eec\u77e5\u9053\uff0c$n$ \u4e2a\u70b9 $n-1$ \u6761\u8fb9\u7684\u8fde\u901a\u56fe\u662f\u4e00\u68f5\u6811\u3002\u90a3\u4e48\u52a0\u4e0a\u4e00\u6761\u8fb9\u4ee5\u540e\u4ecd\u7136\u8fde\u901a\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u53eb\u505a\u201c\u57fa\u73af\u6811\u201d\u7684\u4e1c\u897f\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u7b80\u5355\u73af\u7684\u56fe\uff0c~~\u6f02\u4eae\u6ef4\u5f88\u5450~~\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5904\u7406\u57fa\u73af\u6811\u4e0a\u7684\u4fe1\u606f\u5462\uff1f\u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u7684\u601d\u8def\uff1a\u628a\u6bcf\u6761\u73af\u8fb9\u65ad\u6389\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\u4f60\u4f1a\u53d1\u73b0\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u6839\u90fd\u662f\u73af\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u662f\u4e00\u68f5\u6811\u7684\u6839\u3002\u4e8e\u662f\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u57fa\u73af\u6811\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u6709\u552f\u4e00\u7684\u4e00\u6761\u901a\u5411\u73af\u7684\u8def\u5f84\u3002\u8bb0 $\\text{rng}_i$ \u4e3a\u70b9 $i$ \u8fdb\u5165\u73af\u7684\u90a3\u4e00\u70b9\uff0c\u4e5f\u5c31\u662f\u68ee\u6797\u4e2d\u8fd9\u4e2a\u70b9\u6240\u5728\u6811\u7684\u6811\u6839\uff1b\u8bb0 $\\text{dep}_i$ \u4e3a\u70b9 $i$ \u5230\u73af\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u5176\u6240\u5728\u6811\u7684\u6df1\u5ea6\u3002\n\n\u5982\u4f55\u627e\u73af\u5462\uff1f\u8f83\u7b80\u5355\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u3002\u6bcf\u6b21\u627e\u5ea6\u6570\u4e3a $1$ \u7684\u7ed3\u70b9\u5220\u6389\uff0c\u6700\u540e\u5269\u4e0b\u7684\u5c31\u662f\u73af\u3002\u4f8b\u9898\uff1a[P8655](https://www.luogu.com.cn/problem/P8655)\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u8003\u8651\u4e24\u4eba\u7684\u51b3\u7b56\u95ee\u9898\u3002\u5047\u8bbe $\\rm B$ \u5728 $\\rm A$ \u8fdb\u5165\u73af\u4e4b\u524d\u5c31\u5230\u8fbe\u4e86 $\\text{rng}_\\textrm{A}$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019 $\\rm A$ \u51fa\u9003\u7684\u8def\u5f84\u5c31\u88ab\u5835\u6b7b\u4e86\u3002\u53cd\u4e4b\uff0c\u82e5 $\\rm A$ \u5728 $\\rm B$ \u628a\u6211\u4eec\u5835\u6b7b\u4e4b\u524d\u5c31\u8dd1\u5230\u4e86 $\\rm rng_A$\uff0c\u6211\u4eec\u60f3\u60f3\u79e6\u59cb\u7687\u600e\u4e48\u6b7b\u7684\uff1f\u56e0\u4e3a\u73af\u5927\u5c0f $>4$\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u201c\u79e6\u738b\u7ed5\u67f1\u201d\u7684\u7b56\u7565\uff0c\u4f18\u5148\u8d70\u79bb $\\rm B$ \u8ddd\u79bb\u66f4\u8fdc\u7684\u4e00\u8fb9\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u6293\u5230\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u7b97 $\\text {rng}_i$ \u4e4b\u95f4\u7684\u8ddd\u79bb\u5462\uff1f\u666e\u901a\u7684 bfs \u6700\u77ed\u8def\u65b9\u6cd5\u662f $\\Theta(n^2)$ \u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u3002\u8003\u8651\u5230\u8fd9\u662f\u4e00\u4e2a\u73af\uff0c\u73af\u5185\u4e24\u70b9\u53ea\u6709\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u4e24\u6761\u8def\u5f84\u3002\u4e8e\u662f\u968f\u4fbf\u9009\u62e9\u4e00\u6761\u8def\u5f84 dfs \u7136\u540e\u6807\u53f7\uff0c\u7136\u540e\u4e24\u6761\u8def\u5f84\u7684\u957f\u5ea6\u90fd\u53ef\u4ee5\u7528\u6807\u53f7\u8868\u793a\uff0c\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u9884\u5904\u7406\u662f $\\Theta(n)$ \u7684\uff0c\u6bcf\u6b21\u8be2\u95ee $\\Theta(1)$\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+q)$\u3002",
        "postTime": 1674290499,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "P8943 Deception Point"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u57fa\u73af\u6811\uff0cA\uff0cB \u4e24\u4eba\u90fd\u5728\u8282\u70b9\u4e0a\uff0c\u4e92\u76f8\u80fd\u77e5\u9053\u5bf9\u65b9\u7684\u4f4d\u7f6e\u4e14\u901f\u5ea6\u76f8\u540c\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e24\u4eba\u4f4d\u7f6e\uff0c\u95ee B \u80fd\u5426\u6293\u5230 A\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u8003\u8651\u5982\u679c\u9898\u76ee\u7ed9\u7684\u662f\u4e00\u68f5\u6811\uff0c\u53ef\u4ee5\u53d1\u73b0 A \u80af\u5b9a\u9003\u4e0d\u6389\uff0cB \u53ea\u8981\u8d70\u5230\u6839\u8282\u70b9\u4e4b\u540e\u5f80 A \u7684\u5b50\u6811\u8d70\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u57fa\u73af\u6811\uff0c\u53ef\u4ee5\u5148\u628a\u6574\u4e2a\u73af\u4f5c\u4e3a\u6839\u8282\u70b9\u6765\u601d\u8003\uff0c\u7531\u4e8e\u73af\u53ea\u6709\u53ef\u80fd\u662f\u4e94\u5143\u73af\u6216\u8282\u70b9\u66f4\u591a\uff0c\u90a3\u4e48\u53ea\u8981 A \u8d70\u5230\u73af\u4e0a\uff0c\u4e00\u76f4\u4e0e B \u7ed5\u5708\u5c31\u8d62\u4e86\uff08\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u6709\u4e24\u4e2a\u4eba\u5728\u7ed5\u7740\u4e00\u4e2a\u7269\u4f53\u6293\u4eba\uff0c\u53ea\u8981\u7269\u4f53\u8db3\u591f\u5927\uff0cA \u5c31\u53ef\u4ee5\u7275\u5236\u4f4f B\uff09\u3002\n\n\u4e8e\u662f B \u7684\u83b7\u80dc\u7b56\u7565\u5373\u4e3a\u5728 A \u8d70\u5230\u73af\u4e0a\u4e4b\u524d\u6293\u4f4f\u4ed6\uff0c\u56e0\u6b64\u53ea\u8981\u5c06\u5b83\u5230 A \u5165\u73af\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4e0e A \u5230\u5165\u73af\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\uff0c\u82e5 A \u80fd\u66f4\u5feb\u5230\u8fbe\u5219 A \u8d62\uff0c\u5426\u5219 B \u8d62\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+q)$\u3002\n\n## \u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector> \n#define ll long long\nusing namespace std;\nvector<int> l[1000001];\nint f[1000001],vis[1000001];\nint g[1000001],dep[1000001];\nint a[1000001];\nint tot,all;\nvoid dfs(int x,int fa){\n\tf[x]=fa;\n\tvis[x]=++tot;\n\tfor(int i=0;i<l[x].size();i++){\n\t\tint v=l[x][i];\n\t\tif(v==fa) continue;\n\t\tif(!vis[v])dfs(v,x);\n\t\telse if(vis[v]>=vis[x]){\n\t\t\twhile(v!=x){\n\t\t\t\tg[++all]=v;\n\t\t\t\tv=f[v];\n\t\t\t}\n\t\t\tg[++all]=x;\n\t\t}\n\t}\n}\nvoid dfs2(int x,int fa,int anc){\n\tdep[x]=dep[fa]+1;\n\ta[x]=anc;\n\tfor(int i=0;i<l[x].size();i++){\n\t\tint v=l[x][i];\n\t\tif(v==fa || vis[v]) continue;\n\t\tdfs2(v,x,anc);\n\t}\n}\nint main(){\n\tint n,q;\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tl[u].push_back(v);\n\t\tl[v].push_back(u);\n\t}\n\tdfs(1,0);\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=all;i++) vis[g[i]]=1;\n\tfor(int i=1;i<=all;i++){\n\t\tdfs2(g[i],0,g[i]);\n\t\tdep[g[i]]=i;\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif(all==0) cout<<\"Deception\"<<endl;\n\t\telse if(vis[x]) cout<<\"Survive\"<<endl;\n\t\telse{\n\t\t\tint dis=dep[x]-1,dis2=min(abs(dep[a[y]]-dep[a[x]]),all-abs(dep[a[y]]-dep[a[x]]));\n\t\t\tif(!vis[y]) dis2+=dep[y]-1;\n\t\t\tif(dis2<=dis) cout<<\"Deception\"<<endl;\n\t\t\telse cout<<\"Survive\"<<endl;\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1673879661,
        "uid": 421265,
        "name": "eastcloud",
        "ccfLevel": 4,
        "title": "P8943 Deception Point \u9898\u89e3"
    },
    {
        "content": "\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\n\n\u9996\u5148\u56fe\u662f\u4e2a\u57fa\u73af\u6811\u3002\u5bf9\u4e8e\u96f7\u5207\u5c14\uff0c\u80fd\u5b58\u6d3b\u7684\u6761\u4ef6\u5c31\u662f\u8981\u8dd1\u5230\u73af\u4e0a\uff0c\u800c\u4e09\u89d2\u6d32\u5219\u9700\u8981\u56f4\u5835\u96f7\u5207\u5c14\u6240\u5728\u201c\u5b50\u6811\u201d\u7684\u5165\u73af\u70b9\u3002\n\n\u5c06\u73af\u4e0a\u7684\u70b9\u627e\u51fa\uff0c\u5c06\u73af\u8fb9\u5220\u9664\u5206\u4e3a\u591a\u4e2a\u6811\uff0c\u8bbe\u70b9 $x$ \u6240\u5728\u7684\u6811\u6839\u4e3a $rt_x$\uff0c\u5219 $u$ \u5230 $v$ \u7684\u6700\u77ed\u8ddd\u79bb\u4e3a $dep_u+dis(rt_u,rt_v)+dep_v$\u3002\u73af\u4e0a\u7684\u8ddd\u79bb\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u5224\u65ad\u6b63\u5411\u548c\u53cd\u5411\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u5c31\u80fd $O(1)$ \u67e5\u8be2\u4e86\u3002\n\n\u6700\u540e\u5224\u65ad\u4e24\u8005\u5230\u96f7\u5207\u5c14\u5165\u73af\u70b9\u7684\u8ddd\u79bb\uff0c\u6bd4\u8f83\u5927\u5c0f\u8f93\u51fa\u5373\u53ef\u3002\n\n# AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 2e5 + 10;\n\nstruct edge {\n\tint v, nxt;\n} e[MAXN];\n\nint head[MAXN], tot;\n\ninline \nvoid add(int u, int v) {\n\te[++tot] = { v, head[u] }, head[u] = tot;\n}\n\nint a[MAXN], pos[MAXN], fa[MAXN], cnt;\n\nbool vis[MAXN], col[MAXN];\n\nvoid dfs(int u, int f) {\n\tif (col[u]) {\n\t\tif (cnt) return ;\n\t\tfor (int p = f; p != u; p = fa[p]) a[pos[p] = ++cnt] = p;\n\t\treturn a[pos[u] = ++cnt] = u, void();\n\t}\n\tfa[u] = f, col[u] = vis[u] = 1;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tif (e[i].v != f) dfs(e[i].v, u);\n\t}\n\tcol[u] = 0;\n}\n\nint dep[MAXN], rt[MAXN];\n\nvoid init(int u, int f, int p) {\n\tdep[u] = dep[f] + 1, rt[u] = p;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tif (!col[e[i].v] && e[i].v != f) init(e[i].v, u, p);\n\t}\n}\n\nint n, q;\n\nint main() {\n\tscanf(\"%d%d\", &n, &q);\n\tfor (int i = 1, u, v; i <= n; i++) scanf(\"%d%d\", &u, &v), add(u, v), add(v, u);\n\tdfs(1, 0);\n\tfor (int i = 1; i <= cnt; i++) col[a[i]] = 1;\n\tfor (int i = 1; i <= cnt; i++) init(a[i], 0, a[i]);\n\tfor (int x, y, d; q--;) {\n\t\tscanf(\"%d%d\", &x, &y), d = (pos[rt[x]] - pos[rt[y]] + cnt) % cnt, d = min(d, cnt - d);\n\t\tputs(dep[x] >= dep[y] + d ? \"Deception\" : \"Survive\");\n\t}\n}\n```",
        "postTime": 1672238446,
        "uid": 406941,
        "name": "Register_int",
        "ccfLevel": 6,
        "title": "RiOI R1 2B \u9898\u89e3"
    },
    {
        "content": "#### \u601d\u8def\u5206\u6790\n\n$n$ \u4e2a\u70b9 $n$ \u6761\u8fb9\u7684\u8fde\u901a\u56fe\u53eb\u505a\u57fa\u73af\u6811\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5176\u662f\u5728\u666e\u901a\u7684\u6811\u4e0a\u52a0\u4e86\u4e00\u6761\u8fb9\uff0c\u5f62\u6210\u4e86\u82e5\u5e72\u68f5\u6811\uff0c\u5f7c\u6b64\u7684\u6839\u53c8\u88ab\u8054\u901a\u4e3a\u4e00\u4e2a\u73af\u3002\n\n\u5982\u679c\u4e24\u4e2a\u4eba\u90fd\u8d70\u5230\u73af\u4e0a\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u4e00\u76f4\u5728\u73af\u4e0a\u7ed5\u5708\uff0c\u5373 $\\rm A$ \u80dc\u5229\u3002\u53ef\u4ee5\u63a8\u51fa\uff0c\u82e5 $\\rm A$ \u5728\u8d70\u5230\u73af\u4e4b\u524d\u5c31\u88ab $\\rm B$ \u5835\u4f4f\uff0c\u90a3\u4e48 $\\rm B$ \u83b7\u80dc\u3002\n\n\u9664\u4e86\u73af\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u8d70\u5230\u73af\u4e0a\u7684\u8def\u5f84\u90fd\u662f\u552f\u4e00\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u62d3\u6251\u6392\u5e8f\u627e\u51fa\u73af\u4e0a\u6240\u6709\u7ed3\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u73af\u4e0a\u4e24\u4e24\u7ed3\u70b9\u7684\u8ddd\u79bb\uff0c\u6700\u540e\u7b97\u51fa\u6bcf\u4e2a\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u3002\n\n\u5982\u679c $\\rm A$ \u548c $\\rm B$ \u90fd\u4e0d\u5728\u73af\u4e0a\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- $\\rm A$ \u4e0e $\\rm B$ \u8fdb\u5165\u73af\u7684\u8def\u5f84\u91cd\u5408\u3002\u5373\uff0c\u82e5\u65ad\u5f00\u6240\u6709\u73af\u8fb9\uff0c\u4e24\u8005\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e0a\u3002\n\n  \u8fd9\u79cd\u60c5\u51b5\u5f88\u597d\u5224\u65ad\uff1a\u5373\u8ddd\u79bb\u73af\u8f83\u8fd1\u8005\u83b7\u80dc\u3002\n  \n- $\\rm A$ \u4e0e $\\rm B$ \u8fdb\u5165\u73af\u7684\u8def\u5f84\u4e0d\u91cd\u5408\u3002\u5373\uff0c\u82e5\u65ad\u5f00\u6240\u6709\u73af\u8fb9\uff0c\u4e24\u8005\u4e0d\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e0a\u3002\n\n  \u82e5 $\\rm B$ \u8981\u6210\u529f\u5835\u4f4f $\\rm A$\uff0c\u5219\u4e00\u5b9a\u8981\u8d70\u5230 $\\rm A$ \u8fdb\u5165\u73af\u7684\u90a3\u4e00\u70b9\u3002\u8ddd\u79bb\u5373\u4e3a\u4e24\u8005\u8fdb\u5165\u73af\u7684\u70b9\u7684\u8ddd\u79bb\u52a0\u4e0a $\\rm B$ \u5230\u73af\u4e0a\u7684\u8ddd\u79bb\u3002\n  \n  \u7136\u540e\u4e0e $\\rm A$ \u8d70\u5230\u73af\u4e0a\u7684\u8ddd\u79bb\u6bd4\u8f83\u5373\u53ef\u3002\n  \n\u5982\u4f55\u7ebf\u6027\u6c42\u73af\u4e0a\u70b9\u8ddd\u5462\uff1f\u5bf9\u4e8e\u4efb\u610f\u4e24\u70b9\uff0c\u4ec5\u5b58\u5728\u4e24\u79cd\u8def\u7ebf\u53ef\u4ee5\u5230\u8fbe\u3002\u56e0\u6b64\u6211\u4eec\u5bf9\u73af\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u6253\u4e0a\u65f6\u95f4\u6233\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $\\Theta(n+q)$ \u6c42\u73af\u4e0a\u4e24\u70b9\u8ddd\u79bb\u4e86\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\Theta(n+q)$\u3002\n\n#### \u9898\u89e3\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define maxn 1000010\n\nusing namespace std;\n\nstruct ed\n{\n    int v, nxt;\n};\n\nint n, q, head[maxn];\ned e[maxn << 1];\nint cnt, deg[maxn], bk[maxn], seq[maxn], idx;\nqueue<int> que;\nint branch[maxn], dep[maxn], dis[maxn];\n\nvoid add_edge(int u, int v)\n{\n    e[++cnt].v = v, e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\nvoid get_ring()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        if (deg[i] == 1)\n        {\n            que.push(i);\n            deg[i]--;\n        }\n    }\n    while (!que.empty())\n    {\n        int u = que.front();\n        que.pop();\n        for (int i = head[u]; i; i = e[i].nxt)\n        {\n            int v = e[i].v;\n            if (deg[v] >= 1)\n                deg[v]--;\n            if (deg[v] == 1)\n                que.push(v);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        if (deg[i] >= 2)\n            bk[i] = true, seq[++idx] = i;\n    }\n}\n\nvoid dfs1(int u, int fa, int s, int d)\n{\n    branch[u] = s;\n    dep[u] = d;\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].v;\n        if (v == fa || bk[v])\n            continue;\n        dfs1(v, u, s, d + 1);\n    }\n}\n\nvoid dfs2(int u, int fa, int d)\n{\n    dis[u] = d;\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].v;\n        if (v == fa || dis[v] || !bk[v])\n            continue;\n        dfs2(v, u, d + 1);\n    }\n}\n\nint dist(int u, int v)\n{\n    if (dis[u] - dis[v] >= 0)\n        swap(u, v);\n    return min(abs(dis[u] - dis[v] + idx), abs(dis[u] - dis[v]));\n}\n\nsigned main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n    cin >> n >> q;\n    for (int i = 1, u, v; i <= n; i++)\n    {\n        cin >> u >> v;\n        add_edge(u, v), add_edge(v, u);\n        deg[u]++, deg[v]++;\n    }\n    get_ring();\n    for (int i = 1; i <= idx; i++)\n        dfs1(seq[i], 0, i, 0);\n    dfs2(seq[1], 0, 1);\n    while (q--)\n    {\n        int v, u;\n        cin >> u >> v;\n        puts(dep[v] + dist(seq[branch[v]], seq[branch[u]]) <= dep[u] ? \"Deception\" : \"Survive\");\n    }\n    return 0;\n}\n```",
        "postTime": 1682686585,
        "uid": 167507,
        "name": "LHQing",
        "ccfLevel": 9,
        "title": "P8943 Deception Point \u9898\u89e3"
    },
    {
        "content": "### \u56fe\u8bba\u9898\u4e00\u4e2a\u3002\n\n\u770b\u9898\u76ee\u6570\u636e\uff0c\u6709 $n$ \u4e2a\u70b9 $n$ \u6761\u8fb9\uff0c\u5f88\u660e\u663e\u5c31\u662f\u6811\u52a0\u4e00\u4e2a\u8fb9\u3002\u6240\u4ee5\u53ea\u4f1a\u6709\u4e00\u4e2a\u73af\u3002\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $A$ \u662f\u5426\u80fd\u5728 $B$ \n\u4e4b\u524d\u5230\u8fbe\u73af\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3b\u8981\u5206\u4e3a\u4e09\u6b65\uff1a\n\n1. \u627e\u51fa\u56fe\u4e2d\u7684\u73af\u4e0a\u7684\u70b9\u3002\n2. \u627e\u51fa\u6bcf\u4e2a\u70b9\u79bb\u7684\u6700\u8fd1\u7684\u5728\u73af\u4e0a\u7684\u70b9\uff0c\u4ee5\u53ca\u5230\u73af\u4e0a\u7684\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n3. \u5224\u65ad $A$ \u548c $B$ \u8c01\u8d62\u3002\n\n\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5217\u8868\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u5230\u8fc7\u3002\u7136\u540e\u8fd4\u56de\uff0c\u627e\u5230\u8fd9\u4e2a\u70b9\uff0c\u628a\u9014\u4e2d\u7684\u70b9\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u628a\u5728\u73af\u4e0a\u7684\u70b9 dfs \u4e00\u904d\u3002\u5982\u679c\u6bd4\u5176\u4ed6\u73af\u4e0a\u7684\u70b9\u66f4\u65e9\u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u628a\u5b83\u8bb0\u5f55\u4e0a\u53bb\u3002\n\n\u7b2c\u4e09\u6b65\uff0c\u6211\u4eec\u7b97\u662f\u5426 $A$ \u5230\u73af\u4e0a\u7684\u901f\u5ea6\u662f\u5426\u5c0f\u4e8e $B$ \u5230  $A$ \u5230\u73af\u4e0a\u7684\u4f4d\u7f6e\u5c31\u884c\u4e86\u3002\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool vis[200005],huan[200005];\nint n,q,a,b,l,huanx[200005],f,chuan[200005],huanf[200005],c1,c2,len;\nvector<int>vi[200005];\nvoid dfs1(int x,int fat){\n\tif(vis[x]){\n\t\tf=x;\n\t\thuan[x]=true;\n\t\thuanx[x]=++l;\n\t\treturn;\n\t}\n\tvis[x]=true;\n\tfor(int i=0;i<vi[x].size();i++){\n\t\tint y=vi[x][i];\n\t\tif(y!=fat){\n\t\t\tdfs1(y,x);\n\t\t}\n\t\tif(f){\n\t\t\tif(f==x){\n\t\t\t\tf=0;\n\t\t\t}\n\t\t\tif(!huan[x]){\n\t\t\t\thuan[x]=true;\n\t\t\t\thuanx[x]=++l;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\nvoid dfs2(int x,int fat,int k){\n\tchuan[x]=k;\n\thuanf[x]=huanf[fat]+1;\n\tfor(int i=0;i<vi[x].size();i++){\n\t\tint v=vi[x][i];\n\t\tif(!huan[v]&&vi[x][i]!=fat){\n\t\t\tdfs2(v,x,k);\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a>>b;\n\t\tvi[a].push_back(b);\n\t\tvi[b].push_back(a);\n\t}\n\tdfs1(1,-1);\n\tmemset(huanf,127,sizeof(huanf));\n\tfor(int i=1;i<=n;i++){\n\t\tif(huan[i]){\n\t\t\tdfs2(i,0,i);\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tcin>>a>>b;\n\t\tc1=chuan[a];\n\t\tc2=chuan[b];\n\t\tlen=abs(huanx[c1]-huanx[c2]);\n\t\tif(len>l/2){\n\t\t\tlen=l-len;\n\t\t}\n\t\tif(huanf[a]<huanf[b]+len){\n\t\t\tcout<<\"Survive\"<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<\"Deception\"<<endl;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1678868260,
        "uid": 380406,
        "name": "shenx989",
        "ccfLevel": 0,
        "title": "P8943\u9898\u89e3"
    },
    {
        "content": "## [P8943 Deception Point](https://www.luogu.com.cn/problem/P8943)\n### \u601d\u8def $1$ $\\mathcal O(n\\log n)$ \u8d5b\u65f6\u601d\u8def\n1. \u8003\u8651\u8fd9\u4e2a\u56fe\u7684\u6784\u9020\uff0c\u53d1\u73b0\u53ef\u4ee5\u770b\u4f5c\u662f**\u4e00\u4e2a\u73af\u4e0e\u5176\u7684\u591a\u9897\u5b50\u6811**\u3002\u6613\u5f97\uff0c\u82e5 A \u548c B \u540c\u65f6\u5728\u73af\u4e0a\u7684\u4e0d\u540c\u70b9\uff0c\u5219\u7b54\u6848\u4fbf\u662f \"Survive\"\u3002\u4e8e\u662f\uff0c\u95ee\u9898\u5373\u6c42\u5728 A \u4e0a\u73af\u524d\u6216\u6070\u6070\u4e0a\u73af\u65f6\uff0cB \u80fd\u5426\u8d76\u5230 A \u7684\u4e0a\u73af\u70b9\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7edf\u8ba1**\u73af\u4e0a\u5404\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4ee5\u53ca\u5b50\u6811\u4e0a\u7684\u70b9\u5230\u5176\u4e0a\u73af\u70b9\u7684\u8ddd\u79bb**\u3002\n2. \u8003\u8651\u5982\u4f55\u627e\u5230\u73af\u3002\u53d1\u73b0\u8fd9\u4e2a\u56fe\u7684\u6784\u9020\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f**\u4e00\u68f5\u6811\u4e0a\u7684\u975e\u7236\u5b50\u5173\u7cfb\u7684\u4e24\u70b9\u4e4b\u95f4\u591a\u8fde\u4e86\u4e00\u6761\u8fb9**\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u7528**\u5e76\u67e5\u96c6**\u5148\u6c42\u51fa\u5176\u751f\u6210\u6811\u4ee5\u627e\u5230\u8fd9\u6761\u591a\u7684\u8fb9\u3002\u7136\u540e\uff0c\u5bf9\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u627e\u5176\u5728\u751f\u6210\u6811\u4e0a\u7684**\u6700\u8fd1\u516c\u5171\u6700\u5148**\uff0c\u4f46**\u4e0d\u500d\u589e**\uff0c\u5c31\u627e\u51fa\u6765\u4e86\u73af\u3002\n3. \u8003\u8651\u5982\u4f55\u5bfb\u627e\u5e76\u8bb0\u5f55\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u53d1\u73b0 $n \\le 2\\times10^5$\uff0c\u6545\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u53ef\u4ee5\u7528 map \u5b58\u3002\u5bf9\u4e8e\u5b50\u6811\u4e0a\u7684\u70b9\u5230\u5176\u4e0a\u73af\u70b9\u7684\u8ddd\u79bb\uff0c\u66b4\u529b\u641c\u7d22\u5373\u53ef\u3002\u5bf9\u4e8e\u73af\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u7528**\u76f8\u5bf9**\u7684\u601d\u60f3\uff0c\u5373\u7528 $dis_u$ \u8868\u793a\u73af\u4e0a\u4e00\u70b9 $u$  \u5230\u73af\u4e0a\u53e6\u4e00\u56fa\u5b9a\u70b9 startpoint \u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u73af\u4e0a\u4e24\u70b9 $u$\u3001$v$ \u95f4\u7684\u8ddd\u79bb\u4fbf\u662f $\\min (|dis_u-dis_v|,tot-|dis_u-dis_v|)$\uff0c$tot$ \u4e3a\u73af\u4e0a\u7684\u70b9\u7684\u603b\u4e2a\u6570\u3002\n4. \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O((n+q)\\log n)$\u3002\n\n### \u4ee3\u7801 $1$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 100;\nint n, q;\nint head[maxn], cnt, cnti, cntii, headii[maxn];\nstruct edgei \n{\n\tint u, v;\n} ei[maxn << 1];\nstruct edge \n{\n\tint v, next;\n} e[maxn << 1], eii[maxn << 1];\nvoid add (int tp, int u, int v) \n{\n\tif (tp == 1) \n\t\tei[++ cnti] = (edgei) {u, v};\n\telse if (tp == 0)\n\t\te[++ cnt] = (edge) {v, head[u]},\n\t\thead[u] = cnt;\n\telse \n\t{\n\t\teii[++ cntii] = (edge) {v, headii[u]},\n\t\theadii[u] = cntii;\n\t}\n}\nmap <pair <int, int>, int> dis;\nvoid addi (int x, int y, int w) \n{\n\tdis.insert (make_pair (make_pair (x, y), w));\n}\nint fquery (int x, int y) \n{\n\treturn (dis.find (make_pair (x, y)) -> second);\n}\nint f[maxn], vis[maxn], depth[maxn], fi[maxn];\nint find (int x) \n{\n\twhile (x != f[x]) x = f[x] = f[f[x]];\n\treturn x;\n}\nvoid dfs (int u, int fa, int d) \n{\n\tdepth[u] = d, fi[u] = fa;\n\tfor (int i = head[u]; i; i = e[i].next) \n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa) continue;\n\t\tdfs (v, u, d + 1);\n\t}\n}\nint zl[maxn], zp, rl[maxn], rp;\nvoid find_circle (int x, int y) \n{\n\tif (depth[x] < depth[y]) swap (x, y);\n\twhile (depth[x] > depth[y]) \n\t{\n\t\tzl[++ zp] = x;\n\t\tx = fi[x];\n\t}\n\tif (x == y) \n\t{\n\t\tzl[++ zp] = x;\n\t\treturn;\n\t}\n\twhile (fi[x] != fi[y]) \n\t{\n\t\tzl[++ zp] = x, rl[++ rp] = y;\n\t\tx = fi[x], y = fi[y];\n\t} \n\tzl[++ zp] = x, rl[++ rp] = y;\n\tzl[++ zp] = fi[x];\n\treturn;\n}\nint wl[maxn], visi[maxn], p;\nvoid Kruskal () \n{\n\tfor (int i = 1; i <= n; i++)\n\t\tf[i] = i;\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tint fx = find (ei[i].u), \n\t\t\tfy = find (ei[i].v);\n\t\tif (fx == fy) continue;\n\t\tf[fy] = fx, vis[i] = 1;\n\t\tadd (0, ei[i].u, ei[i].v);\n\t\tadd (0, ei[i].v, ei[i].u);\n\t}\n\tdfs (1, 0, 1);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (!vis[i]) \n\t\t{\n\t\t\tfind_circle (ei[i].u, ei[i].v);\n\t\t\tfor (int j = 1; j <= zp; j++) \n\t\t\t{\n\t\t\t\twl[++ p] = zl[j];\n\t\t\t\tvisi[zl[j]] = 1;\n\t\t\t\taddi (wl[p], wl[1], p - 1);\n\t\t\t}\n\t\t\tfor (int j = rp; j >= 1; j--) \n\t\t\t{\n\t\t\t\twl[++ p] = rl[j];\n\t\t\t\tvisi[rl[j]] = 1;\n\t\t\t\taddi (wl[p], wl[1], p - 1);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\nint fii[maxn];\nvoid dfsi (int u, int fa, int fai, int d)\n{\n\tfii[u] = fai;\n\taddi (u, fai, d);\n\tfor (int i = headii[u]; i; i = eii[i].next) \n\t{\n\t\tint v = eii[i].v;\n\t\tif (v == fa || visi[v]) continue;\n\t\tdfsi (v, u, fai, d + 1);\n\t}\n}\nint main ()\n{\n\tscanf (\"%d %d\", &n, &q);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint u, v;\n\t\tscanf (\"%d %d\", &u, &v);\n\t\tadd (1, u, v);\n\t\tadd (2, u, v), add (2, v, u);\n\t}\n\tKruskal ();\n\tfor (int i = 1; i <= n; i++) \n\t\tif (visi[i]) dfsi (i, i, i, 0);\n\twhile (q --) \n\t{\n\t\tint a, b;\n\t\tscanf (\"%d %d\", &a, &b);\n\t\tint di = fquery (b, fii[b]),\n\t\t\tdii = fquery (a, fii[a]),\n\t\t\tdiii = fquery (fii[a], wl[1]),\n\t\t\tdiv = fquery (fii[b], wl[1]);\n\t\tint dv = min (abs (diii - div), p - abs (diii - div));\n\t\tif (di + dv > dii) printf (\"Survive\\n\");\n\t\telse printf (\"Deception\\n\"); \n\t}\n\treturn 0;\n}\n```\n### \u601d\u8def $2$ $\\mathcal O(n)$ \u6b63\u89e3\n1. \u8d5b\u540e\u77e5\u9053\u4e86\u8fd9\u79cd\u56fe\u53eb\u505a**\u57fa\u73af\u6811\uff08$n$ \u4e2a\u70b9\uff0c$n$ \u6761\u8fb9\u7684\u8054\u901a\u56fe\uff09**\uff0c\u53ef\u4ee5\u5b9e\u73b0 $\\mathcal O(n)$ \u627e\u73af\u3002\n2. \u53d1\u73b0\u4e0d\u7528 map \u4fbf\u53ef\u4ee5\u5b58\u50a8\u8ddd\u79bb\u3002\u6211\u4eec\u53ef\u4ee5\u7528 $dis_i$ \u8868\u793a\u67d0\u4e00\u5b50\u6811\u4e0a\u7684 $i$ \u5230\u5176\u4e0a\u73af\u70b9\u7684\u8ddd\u79bb\uff0c\u7528 $fi_i$ \u8868\u793a $i$ \u7684\u4e0a\u73af\u70b9\uff0c\u7528 $disi_i$ \u8868\u793a\u73af\u4e0a\u7684\u4e00\u70b9 $i$ \u5230\u73af\u4e0a\u53e6\u4e00\u56fa\u5b9a\u70b9 startpoint \u7684\u8ddd\u79bb\uff0c\u4fbf\u5b9e\u73b0\u4e86 $\\mathcal O(1)$ \u67e5\u8be2\u3002\n3. \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n+q)$\u3002\n\n### \u4ee3\u7801 $2$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 100;\nint head[maxn], cnt;\nstruct edge \n{\n\tint v, next;\n} e[maxn << 1];\nvoid add (int u, int v) \n{\n\te[++ cnt] = (edge) {v, head[u]};\n\thead[u] = cnt;\n} \nint n, q;\nint dfn[maxn], vis[maxn], p, f[maxn], tot;\n// \u627e\u73af\u3002\nvoid getloop (int u, int fa) \n{\n\tdfn[u] = ++ p;\n\tfor (int i = head[u]; i; i = e[i].next) \n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa) continue;\n\t\tif (dfn[v]) \n\t\t{\n\t\t\tif (dfn[v] < dfn[u]) continue;\n\t\t\tfor (int x = v; x != f[u]; x = f[x])\n\t\t\t\tvis[x] = 1, tot ++;\n\t\t}\n\t\telse f[v] = u, getloop (v, u);\n\t}\n}\n// \u5f97\u73af\u4e0a\u4e00\u70b9\u5230\u56fa\u5b9a\u70b9\u7684\u8ddd\u79bb\u3002\nint dis[maxn], start_point, disi[maxn];\nvoid dfs (int u, int fa, int d) \n{\n\tdisi[u] = d;\n\tfor (int i = head[u]; i; i = e[i].next) \n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa || !vis[v] || v == start_point) continue;\n\t\tdfs (v, u, d + 1);\n\t\tif (u == start_point) return; // \u907f\u514d\u5728\u628a\u73af\u5012\u7740\u641c\u4e00\u904d\u3002\n\t}\n}\n// \u627e\u5b50\u6811\u4e0a\u7684\u70b9\u7684\u4e0a\u73af\u70b9\u548c\u5230\u4e0a\u6362\u70b9\u7684\u8ddd\u79bb\u3002\nint fi[maxn]; \nvoid dfsi (int u, int fa, int fai, int d) \n{\n\tfi[u] = fai, dis[u] = d;\n\tfor (int i = head[u]; i; i = e[i].next) \n\t{\n\t\tint v = e[i].v;\n\t\tif (v == fa || vis[v]) continue;\n\t\tdfsi (v, u, fai, d + 1); \n\t}\n}\nint main ()\n{\n\tscanf (\"%d %d\", &n, &q);\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tint u, v;\n\t\tscanf (\"%d %d\", &u, &v);\n\t\tadd (u, v), add (v, u); \n\t}\n\tgetloop (1, 0);\n\tfor (int i = 1; i <= n; i++) \n\t{ \n\t\tif (!vis[i]) continue;\n\t\tif (!start_point)start_point = i, dfs (i, f[i], 0);\t\n\t\tdfsi (i, i, i, 0); \n\t}\n\twhile (q --) \n\t{\n\t\tint a, b;\n\t\tscanf (\"%d %d\", &a, &b);\n\t\tint di, dii, diii;\n\t\tdi = dis[b], dii = dis[a];\n\t\t// \u76f8\u5bf9\u5f97\u73af\u4e0a\u4e24\u70b9\u4e4b\u95f4\u5f97\u8ddd\u79bb\u3002\n\t\tdiii = abs (disi[fi[a]] - disi[fi[b]]);\n\t\tdiii = min (diii, tot - diii);\n\t\t// \u8d76\u4e0d\u5230\u5219\u662f A \u80dc\u5229\u3002\n\t\tif (di + diii > dii) printf (\"Survive\\n\");\n\t\telse printf (\"Deception\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1673885813,
        "uid": 183881,
        "name": "_shy",
        "ccfLevel": 3,
        "title": "\u3010\u9898\u89e3\u3011 P8943 Deception Point"
    },
    {
        "content": "\u7ebf\u6027\u590d\u6742\u5ea6\u3002\n\n\u9996\u5148\uff0c$n$ \u4e2a\u70b9 $n$ \u6761\u8fb9\uff0c\u8fde\u901a\u56fe\uff0c\u597d\uff01\u57fa\u73af\u6811\uff01\n\n\u7136\u540e\u4f60\u53d1\u73b0\u53ea\u8981 $A$ \u8dd1\u8fdb\u4e86\u73af\u91cc\uff0c$B$ \u5c31\u8ffd\u4e0d\u4e0a\u5b83\u4e86\uff0c\u56e0\u4e3a\u4e92\u76f8\u77e5\u9053\u4f4d\u7f6e\u53ef\u4ee5\u8f6c\u5708\u5708\u3002\n\n\u90a3\u5982\u679c\u6211\u662f $B$\uff0c\u6211\u4e00\u5b9a\u4f1a\u53d6\u628a $A$ \u5835\u5728\u5b83\u6240\u5728\u7684\u4ee5\u73af\u4e2d\u79bb $A$ \u6700\u8fd1\u7684\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u91cc\u3002\n\n\u90a3\u4e48\uff0c\u8bbe\u8fd9\u4e2a\u70b9\u4e3a $X$\uff0c\u5982\u679c $dis(A,X)<dis(B,X)$\uff0c$A$ \u5c31\u8d62\u4e86\u3002\n\n\u7528\u5272\u8fb9\u627e\u5230\u8fd9\u4e2a\u73af\uff0c\u5bf9\u4e8e\u73af\u4e0a\u6bcf\u4e2a\u70b9\u5411\u4e0b\u641c\u5c31\u53ef\u4ee5\u627e\u5230\u6bcf\u4e2a\u70b9\u7684\u5165\u73af\u70b9\u4ee5\u53ca\u548c\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\uff01\u7136\u540e\u6211\u5b8c\u5168\u53ef\u4ee5\u6c42\u51fa\u73af\u4e2d\u4efb\u610f\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u6807\u4e2a\u53f7\u5c31\u884c\u4e86\uff01\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,u[200005],v[200005];\nvector<pair<int,int> >nbr[200005];\nint dfn[200005],low[200005],cnt,root;\nbool cut[200005];\nvoid tarjan(int cur,int edge){\n\tlow[cur]=dfn[cur]=++cnt;\n\tint num=0;\n\tfor(auto j:nbr[cur]){\n\t\tint to=j.first;\n\t\tif(j.second==edge)continue;\n\t\tif(!dfn[to]){\n\t\t\ttarjan(to,j.second);\n\t\t\tlow[cur]=min(low[cur],low[to]);\t\n\t\t\tif(low[to]>dfn[cur])cut[j.second]=1;\n\t\t}\n\t\telse low[cur]=min(low[cur],dfn[to]);\n\t}\n}//tarjan\u7b97\u6cd5\u6c42\u5272\u8fb9\nbool vis[200005];\nint dis[200005],t[200005];\nvoid dfs(int cur,int fa,int from){//\u627e\u5165\u73af\u70b9\n\tt[cur]=from;\n\tfor(auto j:nbr[cur]){\n\t\tint to=j.first;\n\t\tif(to==fa||vis[to])continue;\n\t\tdis[to]=dis[cur]+1;\n\t\tdfs(to,cur,from);\n\t}\n\treturn;\n}\nint id[200005],tott,siz;\nbool _[200005];\nvoid dfs2(int cur,int fa,int faa){//\u73af\u5185\u70b9\u6253\u6807\u53f7\uff0c\u7b97\u8ddd\u79bb\u3002\n\tid[cur]=++tott;\n\t_[cur]=1;\n\tfor(auto j:nbr[cur]){\n\t\tint to=j.first;\n\t\tif(!vis[to]||to==faa||_[to])continue;\n\t\tif(to==fa)return;\n\t\tdfs2(to,fa,cur);\n\t}\n\treturn;\n}\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>u[i]>>v[i];\n\t\tnbr[u[i]].push_back(make_pair(v[i],i));\n\t\tnbr[v[i]].push_back(make_pair(u[i],i));\n\t}\n\tfor(int i=1;i<=n;++i)if(!dfn[i])tarjan(i,0);\n\tqueue<int>q;\n\tfor(int i=1;i<=n;++i){\n\t\tif(cut[i])continue;\n\t\tif(!vis[u[i]])q.push(u[i]),vis[u[i]]=1;\n\t\tif(!vis[v[i]])q.push(v[i]),vis[v[i]]=1;\n\t}\n\tdfs2(q.front(),q.front(),0);\n\tsiz=q.size();\n\twhile(!q.empty()){\n\t\tint cur=q.front();\n\t\tdfs(cur,0,cur);\n\t\tq.pop();\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif(dis[x]<dis[y]+min((id[t[x]]-id[t[y]]+siz)%siz,(id[t[y]]-id[t[x]]+siz)%siz)){\n\t\t\tcout<<\"Survive\\n\";\n\t\t}\n\t\telse cout<<\"Deception\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1673832745,
        "uid": 359614,
        "name": "Forever1507",
        "ccfLevel": 6,
        "title": "P8943 Deception Point"
    },
    {
        "content": "\u53ef\u4ee5\u505a\u5230\u590d\u6742\u5ea6 $O(n+q).$\n* \u9996\u5148\u8f6c\u5316\u9898\u610f\uff0c\u7531\u4e8e\u8fb9\u6570 $=$ \u70b9\u6570\uff0c\u56e0\u6b64\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a**\u57fa\u73af\u6811**\u3002\n* \u6211\u4eec\u53ef\u4ee5\u62ff\u6837\u4f8b\u5206\u6790\u4e00\u4e0b\u3002(\u8fd9\u91cc\u5df2\u7ecf\u8f6c\u5316\u4e3a\u4e00\u4e2a\u73af\u548c\u82e5\u5e72\u4e2a\u5206\u652f\u6811\u7684\u7ed3\u6784\uff09\n![](https://cdn.luogu.com.cn/upload/image_hosting/miivjj4t.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n* \u5f00\u59cb\u65f6\u96f7\u5207\u5c14\u5728 $8,$ \u4e09\u89d2\u6d32\u5728 $6.$\n* \u6211\u4eec\u53d1\u73b0\uff0c\u4e09\u89d2\u6d32\u7b2c\u4e00\u6b65\u5230\u8fbe\u4e86 $2,$ \u4e5f\u5c31\u662f\u96f7\u5207\u5c14\u7684\u6839\u8282\u70b9\u3002\u800c\u96f7\u5207\u5c14\u8fd8\u6ca1\u6709\u5230\u8fbe\u73af\uff0c\u56e0\u6b64\u5c31\u5931\u8d25\u4e86\u3002\n* \u4ece\u6a21\u62df\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u521d\u6b65\u786e\u5b9a\u4e24\u4e2a\u4eba\u4f1a\u91c7\u53d6\u7684\u7b56\u7565\uff0c\u4e5f\u5c31\u662f: **\u96f7\u5207\u5c14\u5c3d\u91cf\u5f80\u73af\u8d70\uff0c\u4e09\u89d2\u6d32\u5c3d\u91cf\u5f80\u96f7\u5207\u5c14\u7684\u6839\u7ed3\u70b9\u8d70\u3002**\n* \u53ef\u4ee5\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\u3002\u5982\u679c\u96f7\u5207\u5c14\u521a\u5f00\u59cb\u5728\u73af\u4e0a\uff0c\u90a3\u5b83\u80af\u5b9a\u80dc\u5229\u4e86\uff0c\u4e0d\u53ef\u80fd\u88ab\u6293\u5230\u3002\u5426\u5219\uff0c\u5982\u679c\u5728\u4e09\u89d2\u6d32\u5230\u8fbe\u5b83\u7684\u6839\u8282\u70b9\u65f6\u5b83\u8fd8\u6ca1\u6709\u5230\u8fbe\u73af\uff0c\u90a3\u5b83\u5c31\u5931\u8d25\u4e86\uff0c\u4e00\u5b9a\u4f1a\u88ab\u4e00\u6b65\u6b65\u903c\u5230\u4e00\u4e2a\u70b9\u3002\u5bf9\u4e8e\u4e09\u89d2\u6d32\u7684\u7b56\u7565\u540c\u7406\u3002\n* \u6211\u4eec\u8bbe $dis(x,y)$ \u8868\u793a $x$ \u548c $y$ \u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u8bbe\u96f7\u5207\u5c14\u5728 $a_1,$ \u6839\u8282\u70b9\u4e3a $b_1,$ \u4e09\u89d2\u6d32\u5728 $a_2,$ \u6839\u8282\u70b9\u4e3a $b_2.$ \u663e\u7136\uff0c\u96f7\u5207\u5c14\u5230\u73af\u7684\u8ddd\u79bb\u5e94\u5f53\u5c0f\u4e8e\u96f7\u5207\u5c14\u5230\u5b83\u7684\u6839\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\n\n$dis(a_1,b_1)\\leq dis(a_2,b_2)+dis(b_2,b_1).$\n\n* \u5176\u4e2d\uff0c$a_1$ \u5230 $b_1,$ $a_2$ \u5230 $b_2$ \u7684\u8def\u5f84\u90fd\u662f\u552f\u4e00\u7684\u3002\u800c $dis(b_1,b_2)$ \u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u73af\u957f\u548c\u8fd9\u4e24\u4e2a\u70b9\u5728\u73af\u4e2d\u987a\u65f6\u9488\u7684\u5e8f\u53f7\u5f97\u77e5\u3002\n* \u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u83b7\u5f97\u7684\u3002\u6211\u7684\u4ee3\u7801\u53ef\u80fd\u6bd4\u8f83\u5197\u957f\uff0c\u56e0\u4e3a\u6211\u662f\u5206\u5f00\u5904\u7406\u7684\u3002\n* \u5177\u4f53\u7684\uff0c\u7b2c\u4e00\u904d\u6df1\u641c\u4ece\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u5f00\u6808\u8bb0\u5f55 $dfs$ \u5e8f\uff0c\u5b9e\u73b0\u627e\u73af\u3002\u7b2c\u4e8c\u904d\u4ece\u73af\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\uff0c\u5411\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u6811\u6df1\u641c\uff0c\u83b7\u53d6\u6bcf\u4e2a\u70b9\u5230\u5b83\u7684\u6839\u7684\u8ddd\u79bb $dis$ \u548c\u5b83\u5bf9\u5e94\u7684\u6839\u8282\u70b9 $from$\u3002\u7b2c\u4e09\u904d\u4ece\u73af\u4e2d\u4e00\u4e2a\u70b9\u5f00\u59cb\u987a\u65f6\u9488\u904d\u5386\u73af\uff0c\u8bb0\u5f55\u73af\u957f\u548c\u6bcf\u4e2a\u70b9\u7684\u987a\u65f6\u9488\u7f16\u53f7\u3002\u4e4b\u540e\u6bcf\u6b21\u8be2\u95ee $O(1)$ \u67e5\u8be2\u5373\u53ef\u3002\n* \u65f6\u95f4\u590d\u6742\u5ea6\u786e\u5b9e\u662f\u7ebf\u6027\u7684\u3002\n* \u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,q;\nconst int maxn=4e5+10;\nint head[maxn],nxt[maxn],to[maxn],ring[maxn],deg[maxn],tot;\ninline void add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n\tdeg[x]++;deg[y]++;\n}\nstack<int> s;\nint vis[maxn],stk[maxn];//\u5230\u73af\u7684\u8ddd\u79bb \nint dis[maxn],from[maxn],idx[maxn],now,sum;//from:\u53bb\u5411\u7684\u73af\u4e0a\u7684\u70b9\ninline void dfs2(int x,int fr)\n{\n\tfrom[x]=fr;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(ring[y] || vis[y])continue;\n\t\tvis[y]=1;\n\t\tdis[y]=dis[x]+1;\n\t\tdfs2(y,fr);\n\t}\n}\ninline void dfs3(int x)\n{\n\t++sum;\n\tidx[x]=++now;\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(vis[y] || !ring[y])continue;\n\t\tdfs3(y);\n\t}\n}\ninline bool dfs(int x,int fa)\n{\n\tif(stk[x])\n\t{\n\t\tring[x]=1;\n\t\twhile(s.top()!=x)\n\t\t{\n\t\t\tring[s.top()]=1;\n\t\t\ts.pop();\n\t\t}\n\t\ts.pop();\n\t\treturn 1;\n\t}\n\tif(vis[x])return 0;\n\tvis[x]=1;\n\ts.push(x);\n\tstk[x]=1;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==fa)continue;\n\t\tif(dfs(y,x))return 1;\n\t}\n\ts.pop();\n\tstk[x]=0;\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++)if(ring[i])dfs2(i,i);\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ring[i])\n\t\t{\n\t\t\tdfs3(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\twhile(q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);//x\u8eb2\uff0cy\u6293\n\t\tif(ring[x])printf(\"Survive\\n\");\n\t\telse\n\t\t{\n\t\t\tint xneed=dis[x];\n\t\t\tint yneed=dis[y];\n\t\t\tint toring=abs(idx[from[x]]-idx[from[y]]);\n\t\t\tyneed+=min(toring,sum-toring);\n\t\t\tif(xneed<yneed)printf(\"Survive\\n\");\n\t\t\telse printf(\"Deception\\n\");\n\t\t} \n\t}\n\treturn 0;\n}\n```\n* \u6ce8\u610f\uff1a\u6211\u7684\u4ee3\u7801\u91cc\u9762\u4e09\u4e2a\u641c\u7d22\u7531\u4e8e\u7801\u98ce\u539f\u56e0\u4e0d\u662f\u987a\u7740\u6392\u5e03\u7684\u3002\u4f46\u641c\u7d22\u987a\u5e8f\u548c\u641c\u7d22\u51fd\u6570\u540d\u4e00\u81f4\u3002",
        "postTime": 1673829115,
        "uid": 614725,
        "name": "masonpop",
        "ccfLevel": 0,
        "title": "P8943 \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\n\n\u7b80\u5355\u56fe\u8bba\u3002\n\n# \u6b63\u6587\n\n\u53d1\u73b0\u9898\u76ee\u91cc\u7684\u56fe\u7ed9\u7684\u662f\u57fa\u73af\u6811\uff0c\u90a3\u5c31\u662f\u4e00\u773c\u9898\u4e86\u3002\n\n\u56de\u60f3\u4e00\u4e0b IOI 2008 Island, \u8fd9\u9053\u9898\u6c42\u7684\u662f\u5dee\u4e0d\u591a\u7684\u4e1c\u897f\u3002\n\n\u9996\u5148\u8fd9\u9898\u8be2\u95ee\u6570\u6bd4\u8f83\u591a\uff0c\u8003\u8651\u9884\u5904\u7406\u3002\u90a3\u4e48\u5f88\u663e\u7136\u5904\u7406\u4e24\u8005\u5230\u73af\u4e0a\u7684\u8ddd\u79bb\u548c\u73af\u4e0a\u5404\u4e2a\u70b9\u4e4b\u95f4\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\u53ea\u8981\u5224\u65ad\u4e09\u89d2\u6d32\u4e00\u53f7\u662f\u5426\u6709\u8db3\u591f\u65f6\u95f4\u5230\u96f7\u5207\u5c14\u53bb\u5f80\u73af\u7684\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u524d\u9762\u7b49\u7740\u5c31\u884c\u3002\n\n\u7531\u4e8e\u4e0d\u5b58\u5728\u56db\u5143\u53ca\u4ee5\u4e0b\u7684\u73af\uff0c\u6240\u4ee5\u53ea\u8981\u96f7\u5207\u5c14\u8dd1\u5230\u73af\u4e0a\u5979\u5c31\u80fd\u6d3b\u4e0b\u6765\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O}(N + Q)$\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u3002\n\n# \u4ee3\u7801\n\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint N, Q;\n\nint head[200005], cnt;\nstruct Edge {\n    int to, nxt;\n} edge[400005];\n\nvoid add(int u, int v)\n{\n    ++ cnt;\n    edge[cnt].to = v;\n    edge[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\nvector<int> circle;\nint idx, circnt, dfn[200005], pre[200005], cnum[200005];\n\nvoid dfs(int u)\n{\n    dfn[u] = ++ idx;\n    for(int i = head[u]; i; i = edge[i].nxt)\n    {\n        int v = edge[i].to;\n        if(v != pre[u])\n        {\n            if(dfn[v])\n            {\n                if(dfn[u] > dfn[v])\n                    continue;\n                \n                circle.push_back(v);\n                for(; v != u; v = pre[v]) circle.push_back(pre[v]);\n            }\n            else\n                pre[v] = u, dfs(v);\n        }\n    }\n}\n\nint color[200005], mindis[200005];\nbool doc[200005];\n\nvoid paint(int u, int fa, int clr)\n{\n    color[u] = clr;\n    for(int i = head[u]; i; i = edge[i].nxt)\n    {\n        int v = edge[i].to;\n        if(v != fa && !doc[v])\n        {\n            mindis[v] = mindis[u] + 1;\n            paint(v, u, clr);\n        }\n    }\n}\n\nint getdis(int x, int y)\n{\n    return min(abs(cnum[x] - cnum[y]), circnt - abs(cnum[x] - cnum[y]));\n}\n\nint main()\n{\n    cin >> N >> Q;\n    for(int i = 1; i <= N; ++ i)\n    {\n        int u, v;\n        cin >> u >> v;\n        add(u, v);\n        add(v, u);\n        pre[i] = i;\n    }\n\n    \n    dfs(1);\n    for(auto i : circle) // Cut the circle\n        doc[i] = true;\n\n    for(auto i : circle) // Paint the circle-based tree\n        paint(i, 0, i);\n\n    for(auto i : circle)\n        cnum[i] = ++ circnt;\n\n    for(int i = 1; i <= Q; ++ i)\n    {\n        int x, y;\n        cin >> x >> y;\n        if(mindis[x] < mindis[y] + getdis(color[x], color[y]) || doc[x])\n            puts(\"Survive\");\n        else \n            puts(\"Deception\");\n    }\n    \n    return 0;\n}\n```\n\n# \u540e\u8a00\n\n\u8fd9\u9898\u5e76\u4e0d\u96be\uff0c\u4f46\u662f\u6211\u7adf\u7136\u5199\u6302\u4e86\u3002",
        "postTime": 1673780296,
        "uid": 224558,
        "name": "JackMerryYoung",
        "ccfLevel": 5,
        "title": "P8943 Deception Point \u9898\u89e3"
    }
]