[
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u65e0\u5411\u7b80\u5355\u56fe\uff0c\u4f60\u9700\u8981\u6784\u9020\u5982\u4e0b\u4e24\u4e2a\u70b9\u96c6\uff1a\n\n1\u3001\u4f7f\u5f97\u5176\u70b9\u5bfc\u51fa\u5b50\u56fe\u4e2d\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\u5c3d\u91cf\u5927\u3002\u8bbe\u8fd9\u4e2a\u5ea6\u6570\u4e3ap\u3002\n\n2\u3001\u6c42\u4e00\u4e2a\u5c3d\u53ef\u80fd\u5927\u7684\u7684\u72ec\u7acb\u96c6\u3002\u8bbe\u72ec\u7acb\u96c6\u5927\u5c0f\u4e3aq\u3002\n\n\u5219\u9700\u8981\u6ee1\u8db3\uff1an/(p+1)<=q\uff0cn/(q+1)<=p\u3002\u8fd9\u91cc\u7684\u9664\u6cd5\u662f\u4e0b\u53d6\u6574\u3002\n\n~~\u54c8\uff1f\u6700\u5927\u72ec\u7acb\u96c6\uff1f\uff01\u795e\u4ed9sdoi\u5c45\u7136\u51fanpc\u95ee\u9898\u3002~~\n\n\u770b\u8d77\u6765\u662f\u4e00\u9053\u4e8c\u5408\u4e00\uff0c\u800c\u4e14\u4e00\u65f6\u534a\u4f1a\u60f3\u4e0d\u51fa\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5408\u5bf9\u5427\u3002\n\n\u90a3\u6211\u4eec\u5f00\u59cb\u51b7\u9759\u5206\u6790\u4e00\u6ce2\u3002\n\n\u9996\u5148\u4f60\u4f1a\u53d1\u73b0\uff0c\u7b2c\u4e00\u95ee\u6c42\u51fa\u4e00\u4e2a\u6700\u5927\u7684p\u662f\u5f88\u7b80\u5355\u7684\uff1a\u53ea\u9700\u8981\u4ece\u5168\u96c6\u51fa\u53d1\uff0c\u6bcf\u6b21\u5220\u6389\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u66f4\u65b0\u5176\u4f59\u70b9\u7684\u5ea6\u6570\u5373\u53ef\u3002\u6211\u4eec\u80fd\u5f88\u5bb9\u6613\u5730\u7528\u5806\u7ef4\u62a4\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff1a\u4f60\u5bf9\u5f53\u524d\u70b9\u96c6\u6c42\u4e86\u4e2a\u7b54\u6848\uff0c\u4f46\u662f\u4f60\u6709\u68a6\u60f3\u89c9\u5f97\u8bf4\u4e0d\u5b9a\u8fd8\u80fd\u66f4\u5927\u4e9b\uff0c\u90a3\u600e\u4e48\u529e\uff1f\u5f53\u7136\u662f\u5148\u65e0\u8111\u628a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\u5220\u6389\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u80fd\u901a\u8fc7\u5220\u70b9\u4f7f\u5f97\u7b54\u6848\u53d8\u5927\uff0c\u8fd9\u4e2a\u70b9\u663e\u7136\u4e00\u5b9a\u4e0d\u4f1a\u5728\u70b9\u96c6\u4e2d\u3002\n\n\u800c\u7b2c\u4e8c\u95ee\u5462\uff1f\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u662f\u4e0d\u53ef\u80fd\u6c42\u7684\uff0c\u8fd9\u8f88\u5b50\u4e0d\u53ef\u80fd\u6c42\u7684\u3002\u6211\u4eec\u53ea\u80fd\u60f3\u529e\u6cd5\u53bb\u6c42\u4e00\u4e9b\u8fd1\u4f3c\u89e3\u3002\n\n\u6700\u5927\u72ec\u7acb\u96c6\u5176\u5b9e\u6709\u591a\u79cd\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u6bd4\u5982\uff1a\n\n1\u3001\u968f\u673a\u4e00\u4e2a\u6392\u5217\uff0c\u6309\u7167\u6392\u5217\u7684\u987a\u5e8f\u5f80\u96c6\u5408\u91cc\u52a0\u70b9\uff0c\u80fd\u52a0\u5c31\u52a0\u3002\n\n2\u3001\u5bf91\u7b97\u6cd5\u8fdb\u884c\u722c\u5c71/\u9000\u706b\u3002\n\n3\u3001\u6bcf\u6b21\u9009\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\u6254\u8fdb\u72ec\u7acb\u96c6\u4e2d\uff0c\u628a\u5b83\u76f8\u8fde\u7684\u70b9\u5168\u5220\u6389\u3002\n\n\u4f60\u968f\u4fbf\u5199\u4e86\u4e00\u4e2a\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u672c\u4e0d\u62b1\u6709\u5e0c\u671b\u80fda~~\u751a\u81f3\u50cf\u6211\u4e00\u6837\u505a\u597d\u4e86a\u4e0d\u6389\u5c31\u9000\u5f79\u7684\u6253\u7b97~~\uff0c\u7136\u540e\u4f60\u60ca\u5947\u5730\u53d1\u73b0\u4f60a\u4e86\u3002\n\n\u8fd9\u4e00\u662f\u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u754c\u5176\u5b9e\u5f88\u677e\uff0c\u4e8c\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8fd1\u4f3c\u7b97\u6cd5\u5176\u5b9e\u90fd\u80fd\u5f97\u51fa\u86ee\u4e0d\u9519\u7684\u89e3\uff0c~~\u4e09\u662f\u56e0\u4e3a\u6570\u636e\u662f\u968f\u7684~~\u3002\n\n\u7b97\u6cd51\u548c2\u662f\u968f\u673a\u7b97\u6cd5\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u8fd9\u91cc\u4e3b\u8981\u8bf4\u660e\u4e00\u4e0b\uff1a\u7b97\u6cd53\u662f100%\u4fdd\u8bc1\u6b63\u786e\u6027\u7684\uff01\n\n\u539f\u56e0\u5982\u4e0b\uff1a\n\n\u4f60\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\u65f6\uff0c\u5b83\u7684\u5ea6\u6570\u4e00\u5b9a\u4e0d\u8d85\u8fc7p\uff0c\u5426\u5219\u5f53\u524d\u5269\u4f59\u7684\u70b9\u5c31\u662f\u7b2c1\u95ee\u7684\u4e00\u4e2a\u66f4\u4f18\u7684\u89e3\uff0c\u8bf4\u660e\u4f60\u7b2c\u4e00\u95ee\u6c42\u9519\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u6700\u591a\u5220\u6389p\u4e2a\u70b9\u3002\n\n\u8fd9\u6837\u6784\u9020\u51fa\u6765\u7684q>=n/(p+1)\uff0c\u6070\u597d\u662f\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u5f0f\u5b50\uff0c\u800c\u4e14\u6ce8\u610f\u8fd9\u91cc\u662f\u4e0a\u53d6\u6574\u56e0\u6b64\u4e0d\u5b58\u5728\u5dee1\u4e4b\u7c7b\u7684\u7ec6\u8282\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u5806\u7ef4\u62a4\u3002\n\n\uff08\u5176\u5b9e\u636e\u8bf4\u4e0d\u9700\u8981\u5806\uff0c\u5b9e\u73b0\u5f97\u597d\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\uff09\n\n\u54e6\u5bf9\u4e86\uff0c**\u522b\u5fd8\u4e86io\u4f18\u5316**\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar buf[100000],*buff = buf + 100000;\n#define gc (buff == buf + 100000 ? (fread(buf,1,100000,stdin),buff = buf) : 0,*buff++)\nchar bb[10000010],*bbb = bb;\n#define pc(x) (*(bbb++) = (x))\ninline int read(){\n\tint x = 0,c = gc;\n\twhile(!isdigit(c)) c = gc;\n\twhile(isdigit(c)) x = (x << 1) + (x << 3) + (c ^ '0'),c = gc;\n\treturn x;\n}\ninline void print(int q){\n\tif(q >= 10) print(q / 10);\n\tpc(q % 10 + '0');\n}\nint t,n,m;\nstruct edge{\n\tint to,nxt;\n}e[200010];\nint cnt,fir[10010],ds[10010],nwd[10010];\ninline void ins(int u,int v){\n\te[++cnt].to = v;e[cnt].nxt = fir[u];fir[u] = cnt;\n\te[++cnt].to = u;e[cnt].nxt = fir[v];fir[v] = cnt;\n\t++ds[u];++ds[v];\n}\nint p1,p2,dlj[10010],shan[10010],wz,ft;\nbool d1[10010],d2[10010];\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\npriority_queue<pii > q;\nint main(){\n\tint i,j;\n\tt = read();\n\twhile(t--){\n\t\tmemset(fir,0,sizeof(fir));memset(dlj,0,sizeof(dlj));memset(d1,0,sizeof(d1));memset(d2,0,sizeof(d2));memset(ds,0,sizeof(ds));memset(nwd,0,sizeof(nwd));memset(shan,0,sizeof(shan));cnt = p1 = p2 = wz = ft = 0;\n\t\tn = read();m = read();\n\t\tfor(i = 1;i <= m;++i) ins(read(),read());\n\t\twhile(!q.empty()) q.pop();\n\t\tfor(i = 1;i <= n;++i) nwd[i] = ds[i],q.push(mp(-nwd[i],i));\n\t\twhile(!q.empty()){\n\t\t\tpii p = q.top();q.pop();\n\t\t\tif(-p.fi != nwd[p.se]) continue;\n\t\t\tif(-p.fi >= p1){\n\t\t\t\tp1 = -p.fi;\n\t\t\t\twz = ft;\n\t\t\t}\n\t\t\tshan[++ft] = p.se;d1[p.se] = 1;\n\t\t\tfor(i = fir[p.se];i;i = e[i].nxt) if(!d1[e[i].to]){\n\t\t\t\t--nwd[e[i].to];\n\t\t\t\tq.push(mp(-nwd[e[i].to],e[i].to));\n\t\t\t}\n\t\t}\n\t\twhile(!q.empty()) q.pop();\n\t\tfor(i = 1;i <= n;++i) nwd[i] = ds[i],q.push(mp(-nwd[i],i));\n\t\twhile(!q.empty()){\n\t\t\tpii p = q.top();q.pop();\n\t\t\tif(-p.fi != nwd[p.se]) continue;\n\t\t\tif(d2[p.se]) continue;\n\t\t\tdlj[++p2] = p.se;d2[p.se] = 1;\n\t\t\tfor(i = fir[p.se];i;i = e[i].nxt) if(!d2[e[i].to]){\n\t\t\t\td2[e[i].to] = 1;\n\t\t\t\tfor(j = fir[e[i].to];j;j = e[j].nxt) if(!d2[e[j].to]){\n\t\t\t\t\t--nwd[e[j].to];\n\t\t\t\t\tq.push(mp(-nwd[e[j].to],e[j].to));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(d1,0,sizeof(d1));\n\t\tfor(i = 1;i <= wz;++i) d1[shan[i]] = 1;\n\t\tprint(n - wz);pc(' ');for(i = 1;i <= n;++i) if(!d1[i]) print(i),pc(' ');pc('\\n');\n\t\tprint(p2);pc(' ');for(i = 1;i <= p2;++i) print(dlj[i]),pc(' ');pc('\\n');\n\t}\n\tfwrite(bb,1,bbb - bb,stdout);\n\treturn 0;\n}\n```",
        "postTime": 1557308369,
        "uid": 45775,
        "name": "liuzhangfeiabc",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u54c7\u585e\uff0c\u667a\u5546\u4e0d\u591f\u4e86\u4e0d\u591f\u4e86\u3002\n\n\u9996\u5148\u539f\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a$(p+1)(q+1)\\ge n+1$\n\n\u6784\u9020\u65b9\u6cd5\uff1a\n\n\u72ec\u7acb\u96c6\uff1a\n\n\u6bcf\u6b21\u627e\u51fa\u5f53\u524d\u56feG\u4e2d\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u5728q\u4e2d\u52a0\u5165\u5b83\uff0c\u7136\u540e\u5220\u6389\u5b83\u548c\u5b83\u76f8\u90bb\u7684\u6240\u6709\u70b9\u5f97\u5230\u65b0\u56feG'\n\n\u5ea6\u6570\u9650\u5236\u56fe\uff1a\n\n\u7ef4\u62a4\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\u6700\u5927\u7684\u65f6\u5019\uff0c\u5c06\u6b64\u65f6G\u4e2d\u6240\u6709\u70b9\u52a0\u5165\u96c6\u5408\u4e2d\n\n\u8bc1\u660e\uff1a\n\n\u5982\u679c\u72ec\u7acb\u96c6\u7684\u7b97\u6cd5\u8fd0\u884c\u4e86q\u6b21\uff0c\u7b2ci\u6b21\u5220\u6389\u7684\u70b9\u7684\u5ea6\u6570\u4e3a$d_i$\uff0c\u4e8e\u662f\u6709$\\sum_{i=1}^q d_i+1=n$\n\n\u8981\u6c42\u7684\u662f$(\\max(d_i)+1)(q+1)$\uff0c\u663e\u7136$\\ge n$\n\n```cpp\nvoid solve()\n{\n\tint mn=n,cntq=0,mxp=0,mxpk=0;\n\tfor(ri i=1; i<=n; ++i) q[du[i]=Size(E[i])].push(i),ckmin(mn,du[i]);\n\twhile(mn<n)\n\t{\n\t\twhile(!q[mn].empty()&&del[q[mn].front()]) q[mn].pop();\n\t\tif(q[mn].empty()) {++mn; continue;}\n\t\tif(ckmax(mxp,mn)) mxpk=cntq;\n\t\tint x=q[mn].front(); q[mn].pop();\n\t\tdel[x]=++cntq;\n\t\tB.pb(x);\n\t\tfor(solid v:E[x])\n\t\t{\n\t\t\tif(del[v]) continue;\n\t\t\tdel[v]=cntq;\n\t\t\tfor(solid w:E[v])\n\t\t\t\tq[--du[w]].push(w),ckmin(mn,du[w]);\n\t\t}\n\t}\n\tfor(ri i=1; i<=n; ++i) if(del[i]>=mxpk) A.pb(i);\n\tout(Size(A),' ');\n\tprt(&A[0],Size(A));\n\tout(Size(B),' ');\n\tprt(&B[0],Size(B));\n}\n```\n",
        "postTime": 1557322253,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u70ed\u95f9\u7684\u805a\u4f1a\u4e0e\u5c34\u5c2c\u7684\u805a\u4f1a-SDOI2019R2D2T1-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u4e24\u4e2a\u95ee\u9898\u80fd\u653e\u5728\u4e00\u9053\u9898\u91cc\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u95ee\u9898\u95f4\u5e94\u8be5\u5b58\u5728\u70b9\u5185\u5728\u8054\u7cfb\u3002\n\n\u6211\u4eec\u5148\u770b\u7b2c\u4e00\u95ee\u3002\n\n\u7b2c\u4e00\u95ee\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u6bcf\u6b21\u4ece\u56fe\u4e0a\u5220\u9664\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\uff0c\u5373\u53ef\u786e\u4fdd $p$ \u5c3d\u53ef\u80fd\u5927\u3002\n\n\u800c\u5bf9\u4e8e\u6c42\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u6709\u8bf8\u5982\u6a21\u62df\u9000\u706b\u7b49\u8fd1\u4f3c\u7b97\u6cd5\u3002\u5982\u679c\u6709\u5145\u88d5\u7684\u65f6\u95f4\u8c03\u53c2\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u5f97\u5230\u4e0d\u9519\u7684\u89e3\u3002\u5f53\u7136\u8fd9\u6837\u7684\u505a\u6cd5\u5c31\u548c\u7b2c\u4e00\u95ee\u65e0\u5173\u4e86\u3002\n\n\u9488\u5bf9\u672c\u9898\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u548c\u89e3\u7b2c\u4e00\u95ee\u5dee\u4e0d\u591a\u7684\u65b9\u6cd5\uff1a\u6211\u4eec\u4ecd\u7136\u6bcf\u6b21\u6311\u51fa\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u628a\u8fd9\u4e2a\u70b9\u52a0\u5165\u72ec\u7acb\u96c6\uff0c\u5e76\u5c06\u4e0e\u8fd9\u4e2a\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u4ece\u56fe\u4e2d\u5220\u6389\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u6309\u7167\u8fd9\u4e2a\u65b9\u6cd5\u6784\u9020\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u6240\u8ff0\u9650\u5236\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u6211\u4eec\u6bcf\u5c06\u4e00\u4e2a\u70b9\u52a0\u5165\u72ec\u7acb\u96c6\uff0c\u9664\u53bb\u8fd9\u4e2a\u70b9\u672c\u8eab\u5916\uff0c\u6700\u591a\u4f1a\u4ece\u56fe\u4e2d\u5220\u6389 $p$ \u4e2a\u70b9\uff08\u7b2c\u4e00\u95ee\u7684\u7ed3\u8bba\uff09\u3002\n\n\u4e8e\u662f\u6709 $q \\geq \\left \\lceil \\dfrac{n}{p+1} \\right \\rceil$\u3002\n\n```cpp\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\nstruct node\n{\n int x,y;\n bool operator<(const node&a)const\n {\n  return y>a.y;\n }\n};\nvector<int> e[10005];\nint t[10005],t1[10005],t2[10005],vis[10005];\nint ord[10005],res[10005],cnt;\npriority_queue<node> q;\nint main()\n{\n ios::sync_with_stdio(false);\n int T;\n cin>>T;\n while(T--)\n {\n  int n,m;\n  int ansp=0,ansq=0,pos=0;\n  cnt=0;\n  cin>>n>>m;\n  memset(t,0,sizeof(t));\n  for(int i=1;i<=n;i++)\n   vector<int>().swap(e[i]);\n  for(int i=1;i<=m;i++)\n  {\n   int u,v;\n   cin>>u>>v;\n   e[u].push_back(v);\n   e[v].push_back(u);\n   t[u]++,t[v]++;\n  }\n  memcpy(t1,t,sizeof(t));\n  memcpy(t2,t,sizeof(t));\n  memset(vis,0,sizeof(vis));\n  for(int i=1;i<=n;i++)\n   q.push({i,t[i]});\n  ansp=q.top().y;\n  while(!q.empty())\n  {\n   int u=q.top().x;\n   q.pop();\n   if(vis[u])continue;\n   ord[++cnt]=u,vis[u]=1;\n   int rp=q.top().y;\n   if(rp>ansp)\n    ansp=rp,pos=cnt;\n   for(auto v:e[u])\n   {\n    t1[v]--;\n    q.push({v,t1[v]});\n   }\n  }\n  memset(vis,0,sizeof(vis));\n  for(int i=1;i<=n;i++)\n   q.push({i,t[i]});\n  while(!q.empty())\n  {\n   int u=q.top().x;\n   q.pop();\n   if(vis[u])continue;\n   res[++ansq]=u,vis[u]=1;\n   for(auto v:e[u])\n    vis[v]=1;\n  }\n  memset(vis,0,sizeof(vis));\n  for(int i=1;i<=pos;i++)\n   vis[ord[i]]=1;\n  cout<<n-pos<<' ';\n  for(int i=1;i<=n;i++)\n   if(!vis[i])cout<<i<<' ';\n  cout<<endl;\n  cout<<ansq<<' ';\n  for(int i=1;i<=ansq;i++)\n   cout<<res[i]<<' ';\n  cout<<endl;\n }\n return 0;\n}\n```",
        "postTime": 1606569729,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u7684\u805a\u4f1a\u4e0e\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u592a\u795e\u4ed9\u4e86\u3002\u3002\u3002\n\n\u8fd9\u4e2a\u9898$T = 32$,\u4e00\u770b\u51fa\u9898\u4eba\u5c31\u77e5\u9053\u591a\u6d4b\u9632\u4e71\u641e~~\u4e8e\u662f\u6211\u5c31\u5199\u4e86\u968f\u673a\u5316~~\n\n## \u7b2c\u4e00\u95ee\uff1a\u6c42\u89e3\u6700\u5927\u7684p\u548c\u65b9\u6848\n\n\u7b2c\u4e00\u95ee\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5f53\u6211\u4eec\u4e8c\u5206$mid$\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u76f4\u628a$deg[x] < mid$\u7684\u70b9\u76f4\u63a5\u5220\u9664\uff0c\u7136\u540e\u66f4\u65b0\u548c$x$\u6709\u8fde\u8fb9\u7684\u70b9$y$\u7684$deg[y](deg[y]--)$,\u7c7b\u4f3c$bfs$\u7684\u5f62\u5f0f\u628a\u6240\u6709$deg < mid$\u7684\u70b9\u90fd\u5220\u6389\u3002\n\n\u4e8c\u5206$check$\u7684\u590d\u6742\u5ea6\u662f$O(n+m)$\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u95ee\u6c42\u5f97\u6700\u4f18\u89e3\u7684\u590d\u6742\u5ea6\u662f\n$O(Tmlogn)$\n\n## \u7b2c\u4e8c\u95ee\uff1a\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u53ef\u884c\u7684q\u7684\u65b9\u6848\n\n\u7b2c\u4e8c\u95ee\uff0c~~\u597d\u50cf\u6ca1\u6709\u591a\u9879\u5f0f\u505a\u6cd5\u554a\uff01~~\n\n\u6211\u4eec\u77e5\u9053\u5982\u679c\u6c42\u6700\u4f18\u89e3\uff0c\u90a3\u5c31\u662f**\u4e00\u822c\u56fe\u6700\u5927\u72ec\u7acb\u96c6**,\u662f$NP$\u5b8c\u5168\u95ee\u9898\u3002\n\n\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\u7b2c\u4e00\u95ee\u7684$ans = p$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5~~\u66b4\u529b\u679a\u4e3e~~$q$\u7684\u53d6\u503c\uff0c\u627e\u5230\u6700\u5c0f\u7684\u53ef\u884c\u7684$q$.\n\n\u7136\u540e\uff0c\u5c31\u662f\n\n### \u4e71\u641e\u65f6\u95f4\uff01\n\n\u8003\u8651\u4e00\u4e2a\u5f88\u8822\u7684\u8d2a\u5fc3\uff1a\n\n\u6211\u4eec\u628a\u70b9$1$\u653e\u8fdb\u7b54\u6848\u96c6\u5408,\u7136\u540e\u679a\u4e3e$1$\u7684\u76f8\u90bb\u70b9\uff0c\u628a\u5b83\u4eec\u6253\u4e0a$tag$\uff0c\u5373\u8fd9\u4e9b\u70b9\u4e0d\u80fd\u9009\u3002\n\n\u7136\u540e\u770b\u70b9$2$\u6709\u6ca1\u6709\u88ab\u6253\u6807\u8bb0\uff0c\u5982\u679c\u6709\uff0c\u5c31\u4e0d\u7ba1\u5b83\uff0c\u5426\u5219\u5c31\u628a$2$\u653e\u8fdb\u7b54\u6848\u96c6\u5408\uff0c\u628a$2$\u7684\u76f8\u90bb\u70b9\u6253\u4e0a$tag$.\n\n\u7136\u540e\u679a\u4e3e$3,4,5,6,...,n$,\u5982\u679c\u67d0\u4e2a\u65f6\u523b\u7b54\u6848\u96c6\u5408\u4e2d\u6709$>=q$\u4e2a\u6570\uff0c\u5c31\u627e\u5230\u4e86\u65b9\u6848\u3002\n\n~~\u5982\u679c\u627e\u4e0d\u5230\u5c31~~ $WA$ ~~\u4e86~~\uff0c\u6240\u4ee5\u8fd9\u6837\u53ea\u505a\u4e00\u904d\u662f\u4e0d\u884c\u7684\u3002\n\n\u8003\u8651\u628a\u70b9\u968f\u673a\u6253\u4e71\uff0c\u5982\u679c\u7b2c\u4e00\u904d\u4e0d\u884c\uff0c\u5c31\u6253\u4e71\u4e4b\u540e\u518d\u6765\u4e00\u904d\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\n\n\u7136\u540e\uff0c\u52a0\u51e0\u4e2a\u5c0f\u7279\u5224\uff0c\u5361\u5361\u5e38\uff0c\u4f60\u5c31\u53ef\u4ee5\u8fc7\u6389\u4e86\u3002\n\n\u6211\u7684\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    static int x; static char c;\n    x = 0,c = getchar();\n    while (!isdigit(c)) c = getchar();\n    while (isdigit(c)) x = x * 10 + c - '0',c = getchar();\n    return x;\n}\ninline void write(int x){\n    if (x < 0) putchar('-'),x = -x;\n    if (x > 9) write(x/10); putchar(x%10+'0');\n}\ninline void writeln(int x){ write(x),putchar('\\n'); }\nvoid File(){\n    freopen(\"party.in\",\"r\",stdin);\n    freopen(\"party.out\",\"w\",stdout);\n}\nconst int N = 10050,M = 100050;\nint To[M<<1],Ne[M<<1],He[N],k = 0;\nint T,n,m,deg[N],cnt[N],ansp,ansq;\nbool ans1[N],ans2[N],ans3[N];\ninline void add(int x,int y){\n    ++deg[x],++deg[y];\n    ++k; To[k] = y,Ne[k] = He[x],He[x] = k;\n    ++k; To[k] = x,Ne[k] = He[y],He[y] = k;\n}\nint Q[N],ql,qr;\ninline bool check(int v){\n    int size = n,i,x,y,p;\n    ql = 1,qr = 0;\n    for (i = 1; i <= n; ++i)\n        if (deg[i] < v) ans3[i] = 0,Q[++qr] = i,--size; else ans3[i] = 1;\n    while (ql <= qr && size > v){\n        x = Q[ql],++ql;\n        for (p = He[x]; p; p = Ne[p]) if (ans3[y=To[p]]){\n            --deg[y];\n            if (deg[y] < v) ans3[y] = 0,Q[++qr] = y,--size;\n        }\n    }\n    memcpy(deg,cnt,(n+2)<<2);\n    if (size > v) {memcpy(ans1,ans3,n+2); return 1;}\n    return 0;\n}\nint id[N]; bool vis[N];\nint main(){\n    srand(time(NULL));\n    int i,j,x,y,tot,p;\n    T = read();\n    while (T--){\n        n = read(),m = read();\n        k = 0,memset(He,0,(n+2)<<2),memset(deg,0,(n+2)<<2);\n        while (m--) x = read(),y = read(),add(x,y);\n        memcpy(cnt,deg,(n+2)<<2);\n        int l = 1,r = n-1,mid;\n        ansp = 0;\n        while (l <= r){\n            mid = l + r >> 1;\n            if (check(mid)) ansp = mid,l = mid + 1; else r = mid - 1;\n        }\n        tot = 0;\n        for (i = 1; i <= n; ++i) if (ans1[i]) ++tot;\n        write(tot),putchar(' ');\n        for (i = 1; i <= n; ++i) if (ans1[i]) write(i),putchar(' ');\n        putchar('\\n');\n        for (i = 1; i <= n; ++i)\n            if (n/(ansp+1) <= i && n/(i+1) <= ansp) {ansq = i; break;}\n        if (ansq == 1){ printf(\"1 1\\n\"); continue; }\n        if (ansq == n){ write(n),putchar(' '); for (i = 1; i < n; ++i) write(i),putchar(' '); writeln(n); }\n        else{\n            for (i = 1; i <= n; ++i) id[i] = i;\n            while (1){\n                tot = 0;\n                random_shuffle(id+1,id+n+1);\n                memset(vis,0,n+2);\n                memset(ans2,0,n+2);\n                for (i = 1; i <= n && tot < ansq; ++i)\n                    if (!vis[x = id[i]]){\n                        ans2[x] = 1,++tot;\n                        for (p = He[x]; p; p = Ne[p]) vis[To[p]] = 1;\n                    }\n                if (tot == ansq){\n                    write(tot),putchar(' ');\n                    for (i = 1; i <= n; ++i) if (ans2[i]) write(i),putchar(' ');\n                    putchar('\\n');\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1557372054,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u5927\u4f6c\u4eec\u7684\u601d\u8def\u90fd\u90a3\u4e48\u795e\u5947\u4e14\u590d\u6742\u2026\u2026\u4e0b\u9762\u662f\u6211\u7684\u4e71\u641e\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8981\u6c42\u5c31\u662f\u8981\u8ba9\u4e24\u95ee\u7b54\u6848\u90fd\u5c3d\u91cf\u5927\uff0c\u6240\u4ee5\u8fd9\u662f\u4e2a\u4e8c\u5408\u4e00\u9898\u3002\n\n\u7b2c\u4e00\u95ee\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\uff0c\u6309\u5ea6\u6570 dfs \u5220\u70b9\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u95ee\u662f\u4e2a\u6700\u5927\u72ec\u7acb\u96c6\u2026\u2026npc \u554a\u3002\u5f53\u7136\u5982\u679c\u4f60\u5bf9\u4f60\u7684\u526a\u679d\u6280\u5de7\u6709\u4fe1\u5fc3\u8ba4\u4e3a\u4f60\u53ef\u4ee5 $2^n$ \u8fc7 $10^4$ \u4f60\u53ef\u4ee5\u53bb\u5199\u72b6\u538b\u6216\u8005\u4f60\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u73b0\u573a\u62ff\u5230\u56fe\u7075\u5956\u4f60\u5c31\u53bb\u60f3\u591a\u9879\u5f0f\u89e3\u6cd5\u3002\u6211\u53cd\u6b63\u51b3\u5b9a\u968f\u673a\u5316\u4e71\u641e\u3002\n\n\u6700\u5927\u72ec\u7acb\u96c6\u7684\u968f\u673a\u5316\u505a\u6cd5\u8fd8\u662f\u5f88\u7ecf\u5178\u7684\u3002\u6211\u4eec\u968f\u673a\u4e00\u4e2a\u6392\u5217\uff0c\u4ece\u524d\u5f80\u540e\u8d2a\u5fc3\u9009\u70b9\u5373\u53ef\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5e8f\u5217\u8fdb\u884c\u9000\u706b\uff0c\u8fd9\u9898\u6ca1\u5fc5\u8981\u3002\n\n\u7136\u540e\u7531\u4e8e\u8fd9\u9898\u7684\u754c\u662f\u5f88\u677e\u7684\uff0c\u6240\u4ee5\u7a33\u8fc7\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u7531\u4e8e\u642c\u9898\u4eba@\u2014\u6276\u82cf\u2014 \u7684\u9505\u6709\u65f6\u4f1a\u83ab\u540d UKE\u3002\n```cpp\n#include<algorithm>\n#include<vector>\n#include<ctime>\n#include<cstring>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n    int x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=1e4+5;\nint n,m;\nvector<int> g[maxn];\nint deg[maxn];\nbool vis[maxn];\nvoid dfs(int u,int p){\n\tvis[u]=1;\n\tfor(int i=0;i<g[u].size();i++){\n\t\tint v=g[u][i];\n\t\tif(vis[v]) continue;\n\t\tdeg[v]--;\n\t\tif(deg[v]<p) dfs(v,p);\n\t}\n}\nvoid check(int p){\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=n;i++) deg[i]=g[i].size();\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i]&&deg[i]<p) dfs(i,p);\n}\nint ord[maxn];\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    srand(time(0)*20060122);\n    int t=readint();\n    while(t--){\n    \tn=readint();\n    \tm=readint();\n    \tfor(int i=1;i<=n;i++) g[i].clear();\n    \tfor(int i=0;i<m;i++){\n    \t\tint u,v;\n    \t\tu=readint();\n    \t\tv=readint();\n    \t\tg[u].push_back(v);\n    \t\tg[v].push_back(u);\n\t\t}\n\t\tint l=0,r=n-1;\n\t\twhile(l<r){\n\t\t\tint mid=l+(r-l+1)/2;\n\t\t\tcheck(mid);\n\t\t\tbool ok=0;\n\t\t\tfor(int i=1;i<=n;i++) if(!vis[i]){\n\t\t\t\tok=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(ok) l=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tcheck(r);\n\t\tint cnt=0;\n\t\tfor(int i=1;i<=n;i++) if(!vis[i]) cnt++;\n\t\tprintf(\"%d \",cnt);\n\t\tfor(int i=1;i<=n;i++) if(!vis[i]) printf(\"%d \",i);\n\t\tprintf(\"\\n\");\n\t\tfor(int i=1;i<=n;i++) ord[i]=i;\n\t\trandom_shuffle(ord+1,ord+n+1);\n\t\tmemset(vis,0,sizeof(vis));\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint ok=1;\n\t\t\tfor(int j=0;j<g[ord[i]].size();j++)\n\t\t\t\tif(vis[g[ord[i]][j]]){\n\t\t\t\t\tok=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(ok) vis[ord[i]]=1;\n\t\t}\n\t\tcnt=0;\n\t\tfor(int i=1;i<=n;i++) if(vis[i]) cnt++;\n\t\tprintf(\"%d \",cnt);\n\t\tfor(int i=1;i<=n;i++) if(vis[i]) printf(\"%d \",i);\n\t\tprintf(\"\\n\");\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1582951060,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u8003\u8bd5\u65f6\u5199\u4e86\u4e00\u4e2a\u4e71\u641e\u505a\u6cd5\uff0c\u7136\u540e\u53e6\u5916\u4e24\u9053\u9898\u4e00\u70b9\u601d\u8def\u90fd\u6ca1\u6709\n\n\u672c\u6765\u5df2\u7ecf\u4f5c\u597dDay2\u7206\u96f6\u7684\u5fc3\u7406\u51c6\u5907\u4e86\n\n\u7ed3\u679c\uff1a100+0+0\n\n~~\u7136\u540e\u5b8c\u7f8e\u9000\u5f79~~\n\n\u9996\u5148\uff0c\u628a\u4e24\u4e2a\u9650\u5236\u5206\u522b\u641e\u4e00\u4e0b\uff1a\n\n$\\lfloor \\frac{n}{p+1} \\rfloor\\le q$\n\n\u5de6\u8fb9\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u4e0d\u592a\u597d\u653e\u7f29\uff0c\u6539\u6210\u5411\u4e0a\u53d6\u6574\n\n$\\lceil \\frac{n-p}{p+1} \\rceil\\le q$\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u88ab\u53d6\u6574\u7684\u6570\u51cf1\uff0c\u7136\u540e\u5206\u5b50\u52a01\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6570\u4e0a\u53d6\u6574\u548c\u539f\u6570\u76f8\u540c\n\n\u7136\u540e\u53ef\u4ee5\u628a\u53d6\u6574\u7b26\u53f7\u53bb\u6389\n\n$\\frac{n-p}{p+1}\\le q$\n\n\u4e58\u8fc7\u53bb\n\n$n-p \\le q(p+1)$\n\n$n-p \\le pq+q$\n\n$n \\le pq+p+q$\n\n\u5229\u7528\u6574\u6570\u7684\u79bb\u6563\u6027\uff0c\u5728\u53f3\u8fb9\u52a01\uff0c\u7b26\u53f7\u53d8\u4e3a\u5c0f\u4e8e\n\n$n < pq+p+q+1=(p+1)(q+1)$\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u6761\u4ef6\u53ea\u662f\u8981\u6c42\u6210\u7acb\u7684\u5fc5\u8981\u6761\u4ef6\n\n\u7136\u540e\u8bc1\u660e\u5145\u5206\u6027\uff1a\n\n$n < (p+1)(q+1)$\n\n$\\frac{n}{p+1} < q+1$\n\n$\\lfloor \\frac{n}{p+1} \\rfloor < q+1$\n\n\u8fd8\u662f\u5229\u7528\u6574\u6570\u7684\u79bb\u6563\u6027\uff1a\n\n$\\lfloor \\frac{n}{p+1} \\rfloor \\le q$\n\n\u6240\u4ee5\u8fd9\u4e2a\u6761\u4ef6\u662f\u6ee1\u8db3\u8981\u6c42\u7684\u5145\u8981\u6761\u4ef6\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4e71\u641e\u65f6\u95f4\u4e86\n\n\u8fd8\u662f\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u4e71\u641e\u505a\u6cd5\u5427\n\n\u5bf9\u4e8e$p$\uff1a\n\n\u4ece\u521d\u59cb\u56fe\u5f00\u59cb\uff0c\u6bcf\u4e00\u6b65\u5220\u9664\u4e00\u4e2a\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u8bb0\u5f55\u4e2d\u95f4\u51fa\u73b0\u7684\u6700\u5927\u503c\n\n\u8fd9\u6837\u4f3c\u4e4e\u53ef\u4ee5\u611f\u6027\u8bc1\u660e\u662f\u5bf9\u7684\uff0c\u5927\u6982\u5c31\u662f\u56e0\u4e3a\u4fdd\u7559\u8fd9\u4e2a\u70b9\u4e0d\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\n\n\u6211\u7ef4\u62a4\u7684\u65f6\u5019\u7528\u7684\u7ebf\u6bb5\u6811\n\n\u5bf9\u4e8e$q$\uff1a\n\n\u5b8c\u5168\u6ca1\u6709\u601d\u8def\n\n\u7136\u540e\u5c31\u8003\u8651\u4e71\u641e\u4e86\n\n\u4ece\u6bcf\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u5c1d\u8bd5\u5bf9\u56fe\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\uff0c\u5982\u9047\u51b2\u7a81\uff0c\u5219\u628a\u8fd9\u4e2a\u70b9\u5220\u6389\uff0c\u4e0d\u518d\u6269\u5c55\u8303\u56f4\n\n\u6bcf\u6b21\u67d3\u4e00\u4e9b\u70b9\uff0c\u5c31\u53d6\u8fd9\u90e8\u5206\u70b9\u4e2d\u6240\u6709\u9ed1\u8272\u70b9\u6216\u6240\u6709\u767d\u8272\u70b9\n\n\u8fd9\u6837\u505a\u6b63\u786e\u6027\u662f\u6709\u4fdd\u8bc1\u7684\uff0c\u4f46\u5f88\u5bb9\u6613\u4e3e\u51fa\u53cd\u4f8b\u8bc1\u660e\u4e0d\u662f\u6700\u4f18\u7b56\u7565\n\n\u7136\u800c\uff0c\u6570\u636e\u4f3c\u4e4e\u662f\u968f\u673a\u7684\uff0c\u800c\u4e14\u53d1\u73b0\u7ed9\u51fa\u7684\u6761\u4ef6\u5f88\u5bbd\u677e\n\n\u4e8e\u662f\uff0c\u5c31\u8fd9\u6837\u8fc7\u4e86\n\n\u6700\u540e\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nlong long read(){\n\tlong long n=0;bool f=0;char c=getchar();\n\twhile(c!='-'&&(c<'0'||c>'9'))c=getchar();\n\tif(c=='-'){f=1;c=getchar();}\n\twhile(c>='0'&&c<='9'){n=n*10+c-'0';c=getchar();}\n\tif(f)return -n;\n\telse return n;\n}\nchar res[25];\nvoid write(long long n){\n\tif(n==0){putchar('0');return;}\n\tif(n<0){putchar('-');n=-n;}\n\tint t=0;\n\twhile(n){\n\t\tres[t++]=n%10+'0';\n\t\tn/=10;\n\t}\n\twhile(t--)putchar(res[t]);\n}\nconst int N=10086,M=100007;\n\nint t,n,m;\nnamespace p1{\n\tint head[N],next[M*2],ver[M*2],tot;\n\tint deg[N];\n\tint delt[N];\n\tint minn[N*4];\n\tint col[N];\n\tint cur;\n\tint he,ta,que[N];\n\tbool sel[N];\n\tint pa[N];\n\tvoid reset(){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\thead[i]=0;\n\t\t\tdeg[i]=0;\n\t\t\tdelt[i]=0;\n\t\t\tcol[i]=0;\n\t\t\tsel[i]=0;\n\t\t\tpa[i]=0;\n\t\t}\n\t\ttot=0;\n\t\the=ta=0;\n\t}\n\tvoid add(int a,int b){\n\t\tdeg[a]++;deg[b]++;\n\t\ttot++;\n\t\tver[tot]=b;\n\t\tnext[tot]=head[a];\n\t\thead[a]=tot;\n\t\ttot++;\n\t\tver[tot]=a;\n\t\tnext[tot]=head[b];\n\t\thead[b]=tot;\n\t}\n\tinline int min(int a,int b){\n\t\tif(a>b)return b;\n\t\telse return a;\n\t}\n\tvoid upd(int p,int n,int ll,int rr,int id){\n\t\tif(ll==rr){\n\t\t\tminn[id]=n;\n\t\t\treturn;\n\t\t}\n\t\tint mid=((ll+rr)>>1);\n\t\tif(p<=mid)upd(p,n,ll,mid,id<<1);\n\t\telse upd(p,n,mid+1,rr,(id<<1)|1);\n\t\tminn[id]=min(minn[id<<1],minn[(id<<1)|1]);\n\t}\n\tint gid(int ll,int rr,int id){\n\t\tif(ll==rr){\n\t\t\tminn[id]=0x7fffffff;\n\t\t\treturn ll;\n\t\t}\n\t\tint mid=((ll+rr)>>1);\n\t\tint ans;\n\t\tif(minn[id<<1]>minn[(id<<1)|1]){\n\t\t\tans=gid(mid+1,rr,(id<<1)|1);\n\t\t}else{\n\t\t\tans=gid(ll,mid,(id<<1));\n\t\t}\n\t\tminn[id]=min(minn[id<<1],minn[(id<<1)|1]);\n\t\treturn ans;\n\t}\n\tint maxn,maxt;\n\tvoid build(int ll,int rr,int id){\n\t\tif(ll==rr){\n\t\t\tminn[id]=deg[ll];\n\t\t\treturn;\n\t\t}\n\t\tint mid=((ll+rr)>>1);\n\t\tbuild(ll,mid,id<<1);\n\t\tbuild(mid+1,rr,(id<<1)|1);\n\t\tminn[id]=min(minn[id<<1],minn[(id<<1)|1]);\n\t}\n\tint solve(){\n\t\tbuild(1,n,1);\n\t\tmaxn=0;\n\t\tfor(int t=1;t<=n;t++){\n\t\t\tif(minn[1]>maxn){\n\t\t\t\tmaxn=minn[1];\n\t\t\t\tmaxt=t;\n\t\t\t}\n\t\t\tint cur=gid(1,n,1);\n\t\t\tdelt[cur]=t;\n\t\t\tfor(int i=head[cur];i;i=next[i]){\n\t\t\t\tif(delt[ver[i]])continue;\n\t\t\t\tdeg[ver[i]]--;\n\t\t\t\tupd(ver[i],deg[ver[i]],1,n,1);\n\t\t\t}\n\t\t}\n\t\twrite(n-maxt+1);putchar(' ');\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(delt[i]>=maxt){write(i);putchar(' ');}\n\t\t}\n\t\tputchar('\\n');\n\t\treturn maxn;\n\t}\n\t\n\tint solve2(){\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!col[i]){\n\t\t\t\the=ta=0;\n\t\t\t\tque[he++]=i;\n\t\t\t\tcol[i]=1;\n\t\t\t\tint bcnt=0,wcnt=0;\n\t\t\t\twhile(he!=ta){\n\t\t\t\t\tint cur=que[ta++];\n\t\t\t\t\t\n\t\t\t\t\tif(col[cur]==3)continue;\n\t\t\t\t\tif(col[cur]==1)bcnt++;\n\t\t\t\t\telse wcnt++;\n\t\t\t\t\tfor(int k=head[cur];k;k=next[k]){\n\t\t\t\t\t\tif(pa[ver[i]]!=0&&pa[ver[i]]!=i)continue;\n\t\t\t\t\t\tpa[ver[i]]=i;\n\t\t\t\t\t\tif(!col[ver[k]]){\n\t\t\t\t\t\t\tcol[ver[k]]=3-col[cur];\n\t\t\t\t\t\t\tque[he++]=ver[k];\n\t\t\t\t\t\t}else if(col[cur]==col[ver[k]]){\n\t\t\t\t\t\t\tcol[ver[k]]=3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(bcnt>wcnt){\n\t\t\t\t\tsum+=bcnt;\n\t\t\t\t\tfor(int k=0;k<he;k++){\n\t\t\t\t\t\tif(col[que[k]]==1)sel[que[k]]=1;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsum+=wcnt;\n\t\t\t\t\tfor(int k=0;k<he;k++){\n\t\t\t\t\t\tif(col[que[k]]==2)sel[que[k]]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twrite(sum);putchar(' ');\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(sel[i]){\n\t\t\t\twrite(i);putchar(' ');\n\t\t\t}\n\t\t}\n\t\tputchar('\\n');\n\t\treturn sum;\n\t}\n}\nint a,b;\nbool f;\nint main(){\n\tfreopen(\"party.in\",\"r\",stdin);\n\tfreopen(\"party.out\",\"w\",stdout);\n\tt=read();\n\twhile(t--){\n\t\tn=read();\n\t\tm=read();\n\t\tp1::reset();\n\t\twhile(m--){\n\t\t\ta=read();\n\t\t\tb=read();\n\t\t\tp1::add(a,b);\n\t\t}\n\t\ta=p1::solve()+1;\n\t\tb=p1::solve2()+1;\n\t}\n}\n```\n",
        "postTime": 1557323241,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u6784\u9020\u9898\n\n\u9996\u5148\u5bf9\u4e8e\u6761\u4ef6\u8fdb\u884c\u8f6c\u5316-->$(p+1)(q+1)>n$\n\n\u7136\u540e\u5c31\u662f\u6784\u9020\u4e00\u4e2a$p,q$\u51fa\u6765\n\n\u8003\u8651\u4e00\u79cd\u505a\u6cd5\uff1a\n\n - \u5728\u56fe\u4e2d\u9009\u51fa\u5ea6\u6570\u6700\u5c0f\u7684\u70b9\uff0c\u8fd9\u4e2a\u5ea6\u6570\u8bb0\u4e3a$d_i$\n - \u5c06\u8be5\u70b9\u4ee5\u53ca\u4e0e\u8be5\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u5220\u53bb\n - \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\u76f4\u5230\u65e0\u70b9\u4e3a\u6b62\n - \u53d6\u51fa$d_i$\u6700\u5927\u7684\u65f6\u523b\u7684\u56fe\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u70b9\u96c6\uff0c\u6b64\u65f6\u70ed\u95f9\u5ea6$p=d_i$\uff0c\u53d6\u6240\u6709\u64cd\u4f5c1\u9009\u62e9\u7684\u70b9\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u70b9\u96c6\u5c31\u884c\u4e86\n\n\u8003\u8651\u8bc1\u660e\u6b63\u786e\u6027\uff1a\n\n\u8bbe\u64cd\u4f5c1\u5171\u8fdb\u884c\u4e86$q$\u6b21\uff0c$dmax=max(d_i)$\n\n\u5f97\u5230$\\sum_{i=1}^{q}(d_i+1)=n$,$p=dmax$\n\n\u90a3\u4e48$(p+1)q>=\\sum_{i=1}^{q}(d_i+1)=n$\n\n\u5373$(p+1)(q+1)>n$\n\n\u5f97\u8bc1\n\n\u81f3\u4e8e\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u5220\u70b9\u5e76\u4e14\u4fee\u6539\u70b9\u96c6\u4e2d\u5ea6\u6570\uff0c\u6bcf\u6b21\u8fd8\u8981\u627e\u6700\u5c0f\uff0c\u7528$std::set$\n\n\u7136\u540e\u6211\u8fd9\u4e2a$set$\u662f\u65b0\u5b66\u7684\uff0c\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48$operator$\u5199\u7ed3\u6784\u4f53\u91cc\u8981\u628a\u5927\u5c0f\u5173\u7cfb\u53cd\u4e00\u4e0b\uff1f\u96be\u9053\u662f$set$\u7684\u7279\u70b9\uff1f\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 100010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 1];\nint num, head[maxn], n, m, cnt, len, q[maxn], print[maxn], d[maxn];\nstruct node{\n\tint u, d;\n}a[maxn];\nbool operator < (node a, node b){ return a.d == b.d ? a.u < b.u : a.d < b.d; }\ntypedef set<node> :: iterator iter;\nset<node> S;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\n\nint main(){\n\tint Q = read();\n\twhile (Q--){\n\t\tn = read(), m = read(), cnt = len = num = 0;\n\t\tmemset(head, 0, sizeof(head));\n\t\tfor (int i = 1; i <= n; ++i) d[i] = 0, a[i] = (node){i, 0};\n\t\tfor (int i = 1; i <= m; ++i){\n\t\t\tint x = read(), y = read();\n\t\t\taddedge(x, y), addedge(y, x);\n\t\t\t++a[x].d, ++a[y].d, ++d[x], ++d[y];\n\t\t}\n\t\tfor (int i = 1; i <= n; ++i) S.insert(a[i]);\n\t\tint maxd = -1, pos = 0;\n\t\twhile (!S.empty()){\n\t\t\tint u = (*S.begin()).u; \n\t\t\tif (d[u] > maxd) maxd = d[u], pos = len;\n\t\t\tS.erase(S.begin());\n\t\t\tq[++len] = u, print[++cnt] = u;\n\t\t\tfor (int i = head[u]; i; i = edge[i].next){\n\t\t\t\tint v = edge[i].to;\n\t\t\t\titer it = S.find((node){v, d[v]});\n\t\t\t\tif (it == S.end()) continue;\n\t\t\t\tS.erase(it), q[++len] = v;\n\t\t\t\tfor (int j = head[v]; j; j = edge[j].next){\n\t\t\t\t\tint k = edge[j].to;\n\t\t\t\t\tit = S.find((node){k, d[k]});\n\t\t\t\t\tif (it == S.end()) continue;\n\t\t\t\t\tS.erase(it), S.insert((node){k, --d[k]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d \", len - pos);\n\t\tfor (int i = pos + 1; i <= len; ++i) printf(\"%d \", q[i]);\n\t\tputs(\"\");\n\t\tprintf(\"%d \", cnt);\n\t\tfor (int i = 1; i <= cnt; ++i) printf(\"%d \", print[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569127696,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "# [SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u8fd9\u4e2a\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u5176\u6700\u5c0f\u5ea6\u6570\u4e3a $p$\uff0c\u518d\u6c42\u8fd9\u4e2a\u56fe\u7684\u4e00\u4e2a\u70b9\u72ec\u7acb\u96c6\uff0c\u5176\u5927\u5c0f\u4e3a $q$\uff0c\u4f7f\u5f97 $\\lfloor \\frac{n}{q+1} \\rfloor\\le p$ \u4e14 $\\lfloor \\frac{n}{p+1} \\rfloor\\le q$\u3002\n\n## \u89e3\u9898\u62a5\u544a\n\n\u770b\u8fd9\u9898\u7684\u7b2c\u4e00\u773c\uff0c\u5c31\u611f\u89c9\u8981\u8003\u8651 $p$ \u548c $q$ \u7684\u5173\u7cfb\uff0c\u4e8e\u662f\u6253\u4e86\u4e00\u4e2a\u8868\uff0c\u53d1\u73b0\u5f53 $n = 100$ \u7684\u65f6\u5019\uff0c$p, q$ \u4e2d\u4efb\u610f\u4e00\u4e2a\u8fbe\u5230 $10$ \u5de6\u53f3\u7684\u65f6\u5019\uff0c\u53e6\u4e00\u4e2a\u5c31\u53ef\u4ee5\u53d6\u4efb\u610f\u503c\u4e86\uff0c\u6240\u4ee5\u8fd9\u9898\u4f3c\u4e4e\u53ea\u9700\u8981\u6c42\u4e00\u4e2a\u8f83\u4f18\u89e3\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5728\u6253\u540c\u6b65\u8d5b\u7684\u65f6\u5019\uff0c\u611f\u89c9 $q$ \u7684\u6700\u5927\u503c\u4f3c\u66fe\u76f8\u8bc6\uff0c\u4e8e\u662f\u8003\u8651\u5148\u6c42\u51fa $q$ \u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u627e\u51fa\u76f8\u5e94\u7684\u6700\u5c0f\u7684 $q$\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u6c42\u4e00\u822c\u56fe\u7684\u70b9\u7684\u6700\u5927\u72ec\u7acb\u96c6\u53ca\u5176\u96be\u5199\uff0c\u800c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5e76\u4e0d\u5bf9\u52b2\u3002\u6240\u4ee5\u5728\u8003\u573a\u4e0a\u6211\u60f3\u4e86\u4e00\u4e2a\u6bd4\u8f83 naive \u7684\u8d2a\u5fc3\u6c42\u6cd5\uff0c\u5c31\u662f\u628a\u70b9\u6309\u5ea6\u6570\u6392\u5e8f\uff0c\u4e4b\u540e\u80fd\u9009\u5219\u9009\u3002\n\n\u867d\u7136\u8fd9\u4e48\u6c42\u72ec\u7acb\u96c6\u5e76\u4e0d\u6e05\u771f\uff0c\u4f46\u4f3c\u4e4e\u6548\u7387\u8fd8\u5e76\u4e0d\u5dee\uff0c\u4e8e\u662f\u5c31\u8fd9\u4e48\u6c42\u51fa\u4e86 $q$\u3002\n\n\u7136\u540e\uff0c\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u6839\u636e $q$ \u6c42\u51fa\u6700\u5c0f\u7684 $p$\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e2a\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u4e1c\u897f\uff0c\u5927\u4f53\u5c31\u662f\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u5c0f\u4e8e $p$\uff0c\u5c31\u628a\u8fd9\u4e2a\u70b9\u5220\u53bb\uff0c\u5e76\u8ba1\u7b97\u4e00\u4e0b\u5f71\u54cd\u3002\n\n\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(T(n\\log{n} + m))$ \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5c31\u662f\u8fb9\u6570\u548c sort\uff0c\u5b8c\u5168\u53ef\u8fc7\u3002\n\n\u672c\u6765\u4ee5\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u80fd\u9a97 $50$ ~ $60$ \u5206\u7684\uff0c\u7ed3\u679c\u4ea4\u4e0a\u53bb\uff0c\u4e00\u904d $AC$ \uff1f\uff01\uff01\uff01\n\n\u6700\u540e\uff0c\u9644\u4e0a\u60f3\u8981\u9a97\u5206\u5374\u76f4\u63a5 AC \u7684 Code :\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n\nstd::vector<int> e[10007];\n\nclass Solution{\nprivate :\n    static const int maxn = 1e4 + 7;\n    \n    int t, n, m, id[maxn], res[maxn], cnt, need, degree[maxn];\n    int tot, ans[maxn];\n    bool vis[maxn], out[maxn];\n    std::queue<int> q;\n\n    void clear() {\n        for (register int i = 1; i <= n; i++) {\n            std::vector<int>().swap(e[i]);\n        }\n    }\n\n    static bool cmp(int x, int y) {\n        return e[x].size() < e[y].size();\n    }\n\n    void topoSort() {\n        for (register int i = 1; i <= n; i++) {\n            if (degree[i] < need) {\n                q.push(i);\n            }\n        }\n        while (!q.empty()) {\n            int now = q.front();\n            q.pop();\n            out[now] = 1;\n            for (auto v : e[now]) {\n                if (degree[v] == need) {\n                    q.push(v);\n                    continue;\n                }\n                degree[v]--;\n            }\n        }\n    }\n    \npublic :\n    Solution() {\n        scanf(\"%d\", &t);\n        while (t--) {\n            get();\n            solve();\n            clear();\n        }\n    }\n\n    void get() {\n        scanf(\"%d %d\", &n, &m);\n        for (register int i = 1, u, v; i <= m; i++) {\n            scanf(\"%d %d\", &u, &v);\n            e[u].push_back(v);\n            e[v].push_back(u);\n        }\n    }\n\n    void solve() {\n        for (register int i = 1; i <= n; i++) {\n            id[i] = i;\n            degree[i] = e[i].size();\n        }\n        memset(vis, 0, sizeof(vis));\n        std::sort(id + 1, id + 1 + n, cmp);\n        cnt = tot = 0;\n        for (register int i = 1; i <= n; i++) {\n            int now = id[i];\n            if (!vis[now]) {\n                vis[now] = 1;\n                res[++cnt] = now;\n                for (auto v : e[now]) {\n                    vis[v] = 1;\n                }\n            }\n        }\n        need = n;\n        for (register int i = 1; i <= n; i++) {\n            if (n / (i + 1) <= cnt && n / (cnt + 1) <= i) {\n                need = i;\n                break;\n            }\n        }\n        topoSort();\n        for (register int i = 1; i <= n; i++) {\n            if (!out[i]) {\n                ans[++tot] = i;\n            }\n        }\n        printf(\"%d\", tot);\n        for (register int i = 1; i <= tot; i++) {\n            printf(\" %d\", ans[i]);\n        }\n        putchar('\\n');\n        //printf(\"%d\\n\", need);\n        printf(\"%d\", cnt);\n        for (register int i = 1; i <= cnt; i++) {\n            printf(\" %d\", res[i]);\n        }\n        putchar('\\n');\n    }\n};\nSolution sol;\n\nint main() {}\n\n```",
        "postTime": 1557301449,
        "uid": 49866,
        "name": "\u9f99\u4e4b\u543b\u2014\u6c34\u8d27",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u53c8\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    },
    {
        "content": "\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u7b2c\u4e8c\u95ee\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f$(p+1)(q+1) > n$\uff0c\u6240\u4ee5\u6700\u5927\u5316$q$\u4e00\u5b9a\u6ca1\u6709\u95ee\u9898\u3002\n\n\u7136\u540e\u73b0\u5728\u8981\u6c42\u8fd9\u4e2a$p$\uff0c\u53ef\u4ee5\u4e8c\u5206\u7136\u540e\u7c7b\u4f3c$bfs$\u4e00\u6837\u5224\u65ad\u3002\n\n\u6700\u5927\u72ec\u7acb\u96c6\u76f4\u63a5$random\\_shuffle$\u5373\u53ef\u3002\n\n```cpp\n/*====================\nauthor: fexuile\nmail: fexuile@qq.com\nQQ: 2165008534\n====================*/\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#include<set>\n#include<map>\nusing namespace std;\n#define mp make_pair\n#define ll long long\n#define re register\ntypedef pair<int,int> pii;\n#define file(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\ninline int gi(){\n\tint f=1,sum=0;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn f*sum;\n}\nconst int N=200010;\nint front[N],cnt,a[N],tot1,n,m,vis[N],p[N],b[N],tot2,d[N],D[N],B[N],TOT;\nstruct node{int to,nxt;}e[400010];\nvoid Add(int u,int v){e[++cnt]=(node){v,front[u]};front[u]=cnt;D[u]++;}\nqueue<int>Q;\nbool check(int mid){\n\tfor(int i=1;i<=n;i++){\n\t\td[i]=D[i];\n\t\tif(d[i]<mid)Q.push(i),vis[i]=1;\n\t\telse vis[i]=0;\n\t}\n\twhile(!Q.empty()){\n\t\tint u=Q.front();Q.pop();\n\t\tfor(int i=front[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(!vis[v]){\n\t\t\t\td[v]--;\n\t\t\t\tif(d[v]<mid)Q.push(v),vis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\ttot1=0;\n\tfor(int i=1;i<=n;i++)if(!vis[i])a[++tot1]=i;\n\treturn tot1;\n}\nbool cmp(int a,int b){return D[a]>D[b];}\nvoid solve(){\n\tn=gi();m=gi();\n\tfor(int i=1;i<=n;i++)vis[i]=D[i]=front[i]=0;cnt=tot1=tot2=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=gi(),v=gi();\n\t\tAdd(u,v);Add(v,u);\n\t}\n\tint l=0,r=n-1,ret=0;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)){ret=mid;l=mid+1;}\n\t\telse r=mid-1;\n\t}\n\tcheck(ret);\n\tprintf(\"%d \",tot1);for(int i=1;i<=tot1;i++)printf(\"%d%c\",a[i],\" \\n\"[i==tot1]);\n\tfor(int i=1;i<=n;i++)p[i]=i,vis[i]=1;\n\trandom_shuffle(p+1,p+n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tint u=p[i];\n\t\t\n\t\tif(vis[u])for(int j=front[u];j;j=e[j].nxt)vis[e[j].to]=0;\n\t}\n\ttot2=0;\n\tfor(int i=1;i<=n;i++)if(vis[i])b[++tot2]=i;\n\tprintf(\"%d \",tot2);\n\tfor(int i=1;i<=tot2;i++)printf(\"%d%c\",b[i],\" \\n\"[i==tot2]);\n}\nint main(){\n\tsrand(time(NULL));\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n#endif\n\tint T=gi();while(T--)solve();\n\treturn 0;\n}\n```",
        "postTime": 1593247442,
        "uid": 51343,
        "name": "MLEAutoMaton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5361 \u3010[SDOI2019]\u70ed\u95f9\u7684\u805a\u4f1a\u4e0e\u5c34\u5c2c\u7684\u805a\u4f1a\u3011"
    }
]