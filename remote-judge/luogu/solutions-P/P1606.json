[
    {
        "content": "#### ~~\u5173\u4e8espfa\uff0c\u5b83\u8fd8\u6ca1\u6709\u51c9\u900f~~\n\n\u62ff\u9053\u9898\uff0c\u7b2c\u4e00\u773c\u4f60\u4f1a\u89c9\u5f97\u8dd1bfs\uff0c\u4f46\u5f88\u5feb\u4f60\u53d1\u73b0\u539f\u6709\u7684\u8377\u82b1\u4f1a\u8ba9\u4f60\u770b\u8d77\u6765\u5f88\u70e6\uff0c\u5c24\u5176\u7b2c\u4e8c\u95ee\u7684\u65b9\u6848\u6570\u7edf\u8ba1\u9700\u8981\u4e24\u904dbfs\n\n\u7136\u540e\u4f60\u5c31\u5f00\u59cb\u8003\u8651\u8054\u901a\u5757\uff0c\u80fd\u4e0d\u5ae9\u628a\u8377\u82b1\u7f29\u6210\u8054\u901a\u5757\u3002\u4f46\u5f88\u5feb\u4f60\u53d1\u73b0\u95ee\u9898\u6709\u51fa\u5728\u7b2c\u4e8c\u95ee\u4e0a\u3002\u4f8b\u5982\uff1a\n\n0 0 x 0 0\n\n1 0 0 0 1\n\n0 0 y 0 0\n\n\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5047\u5982\u4ecex\u5230y\uff0c\u53ef\u4ee5\u770b\u51fa\u5728\u5de6\u8fb9\u548c\u53f3\u8fb9\u76841\u662f\u4e24\u4e2a\u8054\u901a\u5757\uff0c\u4f46\u65b9\u6848\u6570\u53ea\u6709\u5728x\u548cy\u52a0\u8377\u82b1\u4e00\u79cd\u3002\n\n\u7136\u540e~~\u4e0d\u5c0f\u5fc3~~\u770b\u4e00\u4e0b\u6807\u7b7e\uff0c\u53d1\u73b0\u662fspfa\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u53bb\u907f\u514d\u9047\u5230\u90a3\u4e9b\u539f\u672c\u5b58\u5728\u7684\u8377\u82b1\uff0c\u6211\u4eec\u5c31\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8d77\u70b9\u4ee5\u53ca\u6c34\u4f4d\u7f6e\u7684\u82b1\u8d391\u4e2a\u8377\u53f6\u80fd\u5230\u7684\u5730\u65b9\uff0c\u7136\u540e\u5efa\u8fb9\u8dd1spfa\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u907f\u514d\u6709\u73af\u7684\u60c5\u51b5\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u76f4\u63a5\u4ecex\u5230y\uff0c\u4e0d\u4f1a\u91cd\u590d\u7b97\u60c5\u51b5\u4e86\n\n# code\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define re register\n#define IN inline\nusing namespace std;\nconst int maxn=50;\nconst int inf=0x7f7f7f;\nint dx[8]={2,2,-2,-2,1,-1,1,-1},dy[8]={-1,1,-1,1,2,2,-2,-2};\nstruct node{\n\tint to,next;\n}a[100010];\nint len,head[maxn*maxn],x,y,st,ed;\nvoid adde(int x,int y){a[++len].to=y;a[len].next=head[x];head[x]=len;}\nint n,m,mp[maxn][maxn],d[maxn*maxn],p[maxn][maxn];\nlong long f[maxn*maxn];\nbool b[maxn][maxn],vis[maxn*maxn];\nIN void dfs(int o,int x,int y){\n\tb[x][y]=1;\n\tfor(re int k=0;k<8;k++){\n\t\tint xx=x+dx[k],yy=y+dy[k];\n\t\tif(xx<1 || yy<1 || xx>n || yy>m || b[xx][yy])continue;\n\t\tif(mp[xx][yy]==1) dfs(o,xx,yy);\n\t\telse b[xx][yy]=1,adde(o,p[xx][yy]);\n\t}\n}\nIN void init(){\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=m;j++)\n\t\t\tp[i][j]=(i-1)*m+j;\n\tfor(re int i=1;i<=n;i++){ \n\t\tfor(re int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&mp[i][j]);\n\t\t\tif(mp[i][j]==3) st=p[i][j];\n\t\t\tif(mp[i][j]==4) ed=p[i][j];\n\t\t}\n\t}\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=m;j++){\n\t\tif(mp[i][j]==0||mp[i][j]==3){\n\t\t\tmemset(b,0,sizeof(b));\n\t\t\tdfs(p[i][j],i,j);\n\t\t}\n\t}\n}\nqueue<int> q;\nIN void spfa(){\n\tmemset(d,63,sizeof(d));\n\td[st]=0,vis[st]=f[st]=1;\n\tq.push(st);\n\twhile(!q.empty()){\n\t\tx=q.front(); q.pop(); vis[x]=0;\n\t\tfor(re int k=head[x];k;k=a[k].next){\n\t\t\tint v=a[k].to;\n\t\t\tif(d[v]>d[x]+1){\n\t\t\t\td[v]=d[x]+1;f[v]=f[x];\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(d[v]==d[x]+1) f[v]+=f[x];\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tinit();spfa();\n\tif(d[ed]<inf)printf(\"%d\\n%lld\\n\",d[ed]-1,f[ed]);\n\telse printf(\"-1\\n\");\n\treturn 0;\n}\n\n```",
        "postTime": 1541728747,
        "uid": 111961,
        "name": "D_14134",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60Lilypad Pond\u3011"
    },
    {
        "content": "\u542c\u8bf4\u8fd9\u9898\u7528bfs\u76f4\u63a5\u8dd1\u4e24\u904d\u66f4\u5feb\uff1f\uff1f\uff1f\n\n\u4e0d\uff01\u867d\u7136\u66f4\u5feb\u6211\u627f\u8ba4\uff0c\u4f46\u662f\u6211\u53ea\u60f3\u8bc1\u660e\u7ed9\u5927\u5bb6\n\n# \u5173\u4e8espfa\uff0c\u4ed6\u6ca1\u6709\u6b7b\n\n\u54b3\u54b3\uff0c\u8fdb\u5165\u6b63\u9898\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u5f88\u96be\u7684\uff0c\u9996\u5148\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u505a\u8fc7\u7c7b\u4f3c\u6700\u77ed\u8def\u7684\u9898\u6216\u8005\u662f\u6700\u77ed\u8def\u8ba1\u6570\u7684\u9898\u5427\uff1f\u5982\u679c\u6ca1\u6709\u505a\u8fc7\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u53bb[p1144](https://www.luogu.org/problemnew/show/P1144)\u8fd8\u6709[p4779](https://www.luogu.org/problemnew/show/P4779)\u53bb\u505a\u4e00\u4e0b\u518d\u6765\u54e6\uff01\uff08~~\u6216\u8005\u76f4\u63a5\u590d\u5236\u6211\u7684\u9898\u89e3\u4e5f\u597d\uff01\uff09~~\n\n\u597d\u4e86\uff0c\u5f00\u59cb\u8fd9\u4e00\u9053\u9898\uff0c\u601d\u8def\u6765\u81ea\u6211\u7684\u540c\u673a\u623f\u5927\u4f6c\uff08\u5df2\u7ecf\u9000\u5f79\u7684\n\n\u60f3\u8981\u8dd1spfa\u6216\u8005\u6700\u77ed\u8def\u8ba1\u6570\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u56fe\u4e0a\uff0c\u6211\u4eec\u6ca1\u6cd5\u76f4\u63a5\u8dd1\uff08\u6240\u4ee5\u6211\u60f3\u5230\u7684\u662fbfs\u53ef\u4ee5\u4e00\u76f4wa\u56db\u4e2a\u70b9\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u8981\u5bf9\u62bd\u8c61\u7684\u4e8c\u7ef4\u6570\u7ec4\u8fdb\u884c\u5efa\u56fe\uff0c\u5efa\u6210\u6709\u5411\u56fe\uff0c\u7136\u540e\u76f4\u63a5\u8dd1spfa\u548c\u6700\u77ed\u8def\u8ba1\u6570\u5c31\u597d\u4e86\u3002\n\n------------\n\n\n\u597d\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u6709\u601d\u8def\u4e86\n\n## \u8f93\u5165 -> \u5efa\u56fe -> spfa + \u6700\u77ed\u8def\u8ba1\u6570 -> \u8f93\u51fa\u7b54\u6848\n\n------------\n\n\n**\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u5efa\u56fe\u5462\uff0c\u60f3\u8981\u5efa\u56fe\u5c31\u8981\u6709\u70b9\u7684\u7f16\u53f7\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u8981\u5bf9\u70b9\u4eec\u8fdb\u884c\u7f16\u53f7\uff0c\u7f16\u53f7\u65b9\u6cd5\u5c31\u662f\u4e00\u822c\u65b9\u6cd5\uff0c\u5f88\u591a\u9898\u91cc\u9762\u90fd\u6709der!**\n\n```cpp\nfor (int i = 1; i <= n; i ++)\n\t for (int j = 1; j <= m; j ++)\n\t {\n\t \tif (map[i][j] == 0 || map[i][j] == 3) \n\t \t{\n\t \t\tmemset (used, 0, sizeof (used));\n\t \t\tThis_is_for_you(bianhao[i][j], i, j);\n\t\t}\n\t }\n```\n\n**\u7528\u9012\u5f52dfs\u6765\u5b9e\u73b0\u5efa\u56fe**\n\n```cpp\nvoid This_is_for_you (int num, int x, int y)\n{\n\tif (used[x][y]) return ;\n\tused[x][y] = true;\n\tfor (int i = 0; i < 8; i ++)\n\t{\n\t\tint nowx = x + fx[i]; int nowy = y + fy[i];\n\t\tif (nowx >= 1 && nowx <= n && nowy >= 1 && nowy <= m && !used[nowx][nowy])\n\t\t{\n\t\t\tif (map[nowx][nowy] == 1) This_is_for_you (num, nowx, nowy);\n\t\t\telse\n\t\t\tif (map[nowx][nowy] != 2)\n\t\t\t{\n\t\t\t\tused[nowx][nowy] = true;\n\t\t\t\tint zd = bianhao[nowx][nowy];\n\t\t\t\tadd (num, zd);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n**\u7136\u540e\u76f4\u63a5\u8dd1spfa\u548c\u6700\u77ed\u8def\u8ba1\u6570\u5c31\u597d\u4e86**\n\uff08~~\u5efa\u8bae\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u5728p1144\u91cc\u7684\u63d0\u4ea4\uff09~~\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n\n#define man 35\n#define maxn 1233333\n\nusing namespace std;\n\ninline int read ()\n{\n    int f = 1, x = 0;\n\tchar ch;\n    do {ch = getchar (); if (ch== '-') f = -1;} while (ch < '0' || ch > '9');\n    do {x = x * 10 + ch - '0'; ch = getchar ();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nstruct node\n{\n\tint q, z, next;\n} edge[maxn * 5];\n\nint n, m;\nint map[man][man];\nint bianhao[man][man];\nint qx, qy, zx, zy;\nbool used[man][man];\nint head[maxn];\nint fx[] = {2, -2, 2, -2, -1, 1, -1, 1};\nint fy[] = {1, 1, -1, -1, 2, 2, -2, -2};\nint cnt;\n\nint d[maxn];\nlong long tot[maxn];\nbool in_que[maxn];\n\nqueue < int > q;\n\nvoid add (int q, int z)\n{\n\tedge[++ cnt].q = q;\n\tedge[cnt].z = z;\n\tedge[cnt].next = head[q];\n\thead[q] = cnt;\n}\n\nvoid This_is_for_you (int num, int x, int y)\n{\n\tif (used[x][y]) return ;\n\tused[x][y] = true;\n\tfor (int i = 0; i < 8; i ++)\n\t{\n\t\tint nowx = x + fx[i]; int nowy = y + fy[i];\n\t\tif (nowx >= 1 && nowx <= n && nowy >= 1 && nowy <= m && !used[nowx][nowy])\n\t\t{\n\t\t\tif (map[nowx][nowy] == 1) This_is_for_you (num, nowx, nowy);\n\t\t\telse\n\t\t\tif (map[nowx][nowy] != 2)\n\t\t\t{\n\t\t\t\tused[nowx][nowy] = true;\n\t\t\t\tint zd = bianhao[nowx][nowy];\n\t\t\t\tadd (num, zd);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid so_go_and_do_it ()\n{\n\tint sta = bianhao[qx][qy]; int en = bianhao[zx][zy];\n\tmemset (d, 0x3f, sizeof (d));\n\td[sta] = 0;\n\tin_que[sta] = true;\n\ttot[sta] = 1;\n\tq.push (sta);\n\twhile (!q.empty ())\n\t{\n\t\tint now = q.front (); q.pop (); in_que[now] = false;\n\t\tfor (int i = head[now]; i; i = edge[i].next)\n\t\t{\n\t\t\tint end = edge[i].z;\n\t\t\tint newd = d[now] + 1;\n\t\t\tif (d[end] > newd)\n\t\t\t{\n\t\t\t\td[end] = newd;\n\t\t\t\ttot[end] = tot[now];\n\t\t\t\tif (in_que[end] == false)\n\t\t\t\t{\n\t\t\t\t\tq.push (end);\n\t\t\t\t\tin_que[end] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (d[end] == newd) tot[end] += tot[now];\n\t\t}\n\t}\n}\n\nint main ()\n{\n\tn = read (); m = read ();\n\t\n\tfor (int i = 1; i <= n; i ++)\n\t for (int j = 1; j <= m; j ++)\n\t {\n\t \tmap[i][j] = read ();\n\t \tbianhao[i][j] = (i - 1) * m + j;\n\t \tif (map[i][j] == 3) qx = i, qy = j;\n\t \tif (map[i][j] == 4) zx = i, zy = j;\n\t }\n\t\n\tfor (int i = 1; i <= n; i ++)\n\t for (int j = 1; j <= m; j ++)\n\t {\n\t \tif (map[i][j] == 0 || map[i][j] == 3) \n\t \t{\n\t \t\tmemset (used, 0, sizeof (used));\n\t \t\tThis_is_for_you(bianhao[i][j], i, j);\n\t\t}\n\t }\n\tso_go_and_do_it ();\n\tif (d[bianhao[zx][zy]] == 1061109567) puts(\"-1\");\n\telse printf (\"%d\\n%lld\", d[bianhao[zx][zy]] - 1, tot[bianhao[zx][zy]]);\n\treturn 0;\n}\n```\n\n## \u4e00\u5b9a\u8981\u5f00long long\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u6700\u540e\u6302\u4e00\u4e0b\u53d8\u91cf\u8bf4\u660e\uff0c\u66f4\u597d\u7406\u89e3\uff0c\u4e0d\u592a\u61c2\u7684\u540c\u5b66\u770b\u770b\u8fd9\u4e2a\uff01\n\n```cpp\nint n, m; // \u8fd9\u4e2a\u4e0d\u7528\u89e3\u91ca \nint map[man][man]; // \u8f93\u5165\u7684\u5730\u56fe1,2,3,4 \nint bianhao[man][man]; // \u6bcf\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7 \nint qx, qy, zx, zy; // \u8d77\u70b9\u5750\u6807\u548c\u7ec8\u70b9\u5750\u6807 \nbool used[man][man]; // \u6709\u6ca1\u6709\u4f7f\u7528\u8fc7 \nint head[maxn]; // \u90bb\u63a5\u8868\u9700\u8981\u7684 \nint fx[] = {2, -2, 2, -2, -1, 1, -1, 1}; // 8\u65b9\u5411 \nint fy[] = {1, 1, -1, -1, 2, 2, -2, -2}; // 8\u65b9\u5411 \nint cnt; // \u8fb9\u7684\u603b\u6570 \n\nint d[maxn]; // \u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb \nlong long tot[maxn]; // \u6700\u77ed\u8def\u7684\u6570\u76ee\uff01\u4f1a\u7206int\uff0c\u4e00\u5b9a\u8981\u5f00long long  \nbool in_que[maxn]; // \u5728\u4e0d\u5728\u961f\u5217\u91cc\u9762 \n```\n",
        "postTime": 1551714138,
        "uid": 136006,
        "name": "s_Shot\u10e6Maki",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60Lilypad Pond\u3011"
    },
    {
        "content": "# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u8fd9\u9053\u9898\u4e0d\u9519\u554a,\u8868\u793a\u5f88\u8003\u601d\u7ef4.\n\n\u9996\u5148,\u6211\u4eec\u9700\u8981\u77e5\u9053\u653e\u591a\u5c11\u83b2\u82b1,\u5982\u4f55\u653e.\n\n\u56e0\u6b64\u8003\u8651\u6700\u77ed\u8def,\u65b9\u6848\u6570,\u6211\u4eec\u5c31\u8003\u8651\u6700\u77ed\u8def\u8ba1\u6570.(\u60f3\u4fe1\u5927\u5bb6\u90fd\u4f1a\u7684)\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e**\u5982\u4f55\u5efa\u8fb9**.\n\n> \u56e0\u4e3a\u8d1d\u897f\u53ef\u4ee5\u8df3\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e,(\u4efb\u4f55\u4e00\u4e2a\u6709\u6c34\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u653e\u83b2\u82b1)\n>\n> \u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5355\u7eaf\u5730\u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u5176\u4ed6\u70b9\u8fde\u8fb9,\u6240\u4ee5\u6211\u4eec\u8981\u4ece\u6bcf\u4e00\u4e2a\u6709\u6c34\u7684\u5730\u65b9\u5f00\u59cb.\n>\n> \u7531\u4e8e\u5ca9\u77f3\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e,\u6240\u4ee5\u4e0d\u8003\u8651\u8fde\u8fb9.\n\n\u591a\u6b21$dfs$\u5bf9\u6574\u4e2a\u56fe\u8fde\u8fb9.\n\n\u65e2\u7136\u60f3\u5230\u8fd9\u4e86,\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0,\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u6700\u77ed\u8def,\u8bb0\u5f55\u72b6\u6001\u4e0d\u592a\u597d\u8bb0\u5f55.\n\n\u56e0\u6b64\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u683c\u5b50\u7f16\u53f7,\u50cf\u8fd9\u6837.\n\n![](https://i.loli.net/2018/10/14/5bc32e5e3ec76.png)\n\n\u5f53\u7136,\u8fd8\u6709\u5176\u4ed6\u7f16\u53f7\u65b9\u6cd5,\u8fd9\u6837\u6bd4\u8f83\u7b80\u5355\u7f62\u4e86.\n\n\u7b97\u67d0\u4e00\u4f4d\u7f6e$(x,y)$\u7684\u7f16\u53f7\u7684\u8bdd,\u5f0f\u5b50\u4e3a$idx[x][y]=(x-1)\\times m+y$\n\n\u8fd9\u6837\u5efa\u8fb9\u64cd\u4f5c\u5c31\u7b80\u5355\u591a\u4e86.\n\n\u7136\u540e\u540e\u9762\u53ea\u9700\u8981\u6572\u4e00\u4e2a\u88f8\u7684\u6700\u77ed\u8def\u548c\u6700\u77ed\u8def\u8ba1\u6570\u95ee\u9898\u5c31\u597d\u4e86.\n\n**\u8f93\u51fa\u6dfb\u52a0\u7684\u8377\u82b1\u7684\u6700\u5c0f\u7684\u6570\u91cf\u7684\u65f6\u5019\u8981$-1$**\n\n\u8fd9\u662f\u56e0\u4e3a,\u8fd9\u4e2a\u6570\u91cf\u5b9e\u9645\u4e0a\u662f\u70b9\u6743,\u800c\u6211\u4eec\u8dd1\u6700\u77ed\u8def\u7528\u7684\u662f\u8fb9\u6743.\n\n\u4e00\u4e2a\u70b9\u4e0e\u4e24\u6761\u8fb9\u76f8\u8fde,\u6240\u4ee5\u8981$-1$\u3002\n\n``\u4ee3\u7801``\n\n```c++\n#include<cstdio>\n#include<cctype>\n#include<queue>\n#include<cstring>\n#define int long long\n#define clear(a,b) memset(a,b,sizeof a)\n#define R register\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,m,res[35][35],tot,idx[35][35],dis[1008611];\nint sx,sy,fx,fy,s,t,head[1008611],to[1008611];\nconst int ax[]={2,1,-1,-2,2,1,-1,-2};\nconst int ay[]={1,2,2,1,-1,-2,-2,-1};\nbool vis[35][35],inq[1008611];\nstruct coc{int u,v;}edge[1008611];\ninline void add(int x,int y)\n{\n\tedge[++tot].u=head[x];\n\tedge[tot].v=y;\n\thead[x]=tot;\n}\nvoid dfs(int id,int x,int y)\n{\n\tif(vis[x][y])return;\n\tvis[x][y]=true;\n\tfor(R int i=0;i<8;i++)\n\t{\n\t\tR int nx=x+ax[i],ny=y+ay[i];\n\t\tif(nx<1 || nx>n || ny>m || ny<1 || vis[nx][ny])continue;\n        //\u521a\u5f00\u59cb\u5199\u6210return,\u5c34\u5c2c\u6b7b\u4e86 emm\n\t\tif(res[nx][ny]==1)dfs(id,nx,ny);\n\t\telse if(res[nx][ny]!=2)\n\t\t{\n\t\t\tvis[nx][ny]=true;\n\t\t\tadd(id,idx[nx][ny]);\n\t\t}\n\t}\n}\ninline void spfa()\n{\n\tqueue<int>q;\n\tfor(R int i=1;i<=n*m;i++)dis[i]=2147483647;dis[s]=0;\n\tinq[s]=true;q.push(s);to[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();inq[u]=false;\n\t\tfor(R int i=head[u];i;i=edge[i].u)\n\t\t{\n\t\t\tif(dis[edge[i].v]>dis[u]+1)\n\t\t\t{\n\t\t\t\tdis[edge[i].v]=dis[u]+1;\n\t\t\t\tto[edge[i].v]=to[u];\n\t\t\t\tif(!inq[edge[i].v])\n\t\t\t\t{\n\t\t\t\t\tq.push(edge[i].v);\n\t\t\t\t\tinq[edge[i].v]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dis[edge[i].v]==dis[u]+1)\n\t\t\t\tto[edge[i].v]+=to[u];\n\t\t}\n\t}\n\tif(dis[t]<2147483647)printf(\"%lld\\n%lld\",dis[t]-1,to[t]);\n\telse printf(\"-1\");\n}\nsigned main()\n{\n\tin(n),in(m);\n\tfor(R int i=1;i<=n;i++)\n\t\tfor(R int j=1;j<=m;j++)\n\t\t{\n\t\t\tin(res[i][j]);\n\t\t\tidx[i][j]=(i-1)*m+j;\n\t\t\tif(res[i][j]==3)sx=i,sy=j;\n\t\t\tif(res[i][j]==4)fx=i,fy=j;\n\t\t}\n\tfor(R int i=1;i<=n;i++)\n\t\tfor(R int j=1;j<=m;j++)\n\t\t\tif(!res[i][j] or res[i][j]==3)\n\t\t\t\tclear(vis,0),dfs(idx[i][j],i,j);\n\ts=idx[sx][sy];t=idx[fx][fy];\n\tspfa();\n}\n```",
        "postTime": 1539518122,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u8377\u53f6\u5858Lilypad Pond\u3011"
    },
    {
        "content": "\u8be1\u5f02\u7684\u5efa\u8fb9\u65b9\u6cd5\u5927\u4f6c\u4eec\u90fd\u8bb2\u8fc7\u4e86\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2adijkstra\u7684\u6700\u77ed\u8def\u8ba1\u6570\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#define N 51\n#define inf 1926081764\n#define point(x,y) (x-1)*m+y\nusing namespace std;\nint n,m,map[N][N],beg,end,fx[9]={0,1,2,2,1,-1,-2,-2,-1},fy[9]={0,2,1,-1,-2,-2,-1,1,2},\n\th[N*N],cnt, dis[N*N],vis[N*N];\nlong long counts[N*N];\nstruct edge{\n\tint next,to,val;\n}e[N*N<<5];\ninline void adde(int u,int v,int w)\n{\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprintf(\"(%d,%d)->(%d,%d)\\n\",u/m+1,(u-1)%m+1,v/m+1,(v-1)%m+1);\n\tif(v==beg||v==end)w=0;\n\te[++cnt].next=h[u];\n\th[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].val=w;\n\treturn;\n}\ninline void dfs(int x,int y,int now)\n{\n\tvis[point(x,y)]=now;\n\tfor(int k=1,xx,yy;k<=8;k++)\n\t{\n\t\txx=x+fx[k],yy=y+fy[k];\n\t\tif(xx<=0||xx>n||yy<=0||yy>m||map[xx][yy]==2)continue;\n\t\tif(vis[point(xx,yy)]==now)continue;\n\t\tif(map[xx][yy]==0||map[xx][yy]==3||map[xx][yy]==4)adde(now,point(xx,yy),1),vis[point(xx,yy)]=now;\n\t\tif(map[xx][yy]==1)dfs(xx,yy,now);\n\t}\n}\npriority_queue<pair<int,int> >q;\ninline void dijkstra()\n{\n\tfor(int i=1;i<=n*m;i++)dis[i]=inf,vis[i]=counts[i]=0;\n\tdis[beg]=0,counts[beg]=1;\n\tq.push(make_pair(0,beg));\n\twhile(q.size())\n\t{\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(int i=h[x],v;i;i=e[i].next)\n\t\t{\n\t\t\tv=e[i].to;\n\t\t\tif(dis[x]+e[i].val<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[x]+e[i].val;\n\t\t\t\tcounts[v]=counts[x];\n\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t\telse if(dis[x]+e[i].val==dis[v])\n\t\t\t{\n\t\t\t\tcounts[v]+=counts[x];\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&map[i][j]);\n\t\t\tif(map[i][j]==3)beg=point(i,j);\n\t\t\tif(map[i][j]==4)end=point(i,j);\n\t\t}\n\t}\n\tfor(int i=1,xx,yy;i<=n;i++)for(int j=1;j<=m;j++)\n\t{\n\t\tif(map[i][j]==0||map[i][j]==3||map[i][j]==4)dfs(i,j,point(i,j));\n\t}\n\tdijkstra();\n\tif(counts[end]==0)printf(\"-1\\n\");\n\telse printf(\"%d\\n%lld\\n\",dis[end],counts[end]);\n\treturn 0;\n}\n```",
        "postTime": 1569575150,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60Lilypad Pond\u3011"
    },
    {
        "content": "### \u5176\u5b9e\u7b2c\u4e00\u773c\u770b\u5230\u5c31\u53ef\u4ee5\u60f3\u5230\u6700\u77ed\u8def\u5f84\u8ba1\u6570\u95ee\u9898\u3002\u6ca1\u6709\u542c\u8fc7\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b[p1608 \u8def\u5f84\u7edf\u8ba1](https://www.luogu.org/problemnew/show/P1608)\u3002\n### \u7136\u800c\u8fd9\u9053\u9898\u4e2d\u5b58\u5728\u65e0\u54110\u8fb9(\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6709\u5411\u56fe\u4e2d\u76840\u6743\u56de\u8def\u6216\u80050\u6743\u73af)\u3002\u5728spfa\u4e2d\uff0c\u56e0\u4e3a\u66f4\u65b0\u91c7\u7528\u7684\u662fd[ver[i]] > d[cur] + wei[i]\uff0c\u6240\u4ee5\u4e0d\u7528\u5fcc\u60ee\u53cc\u5411\u76840\u8fb9(\u6216\u8005\u79f0\u4e3a0\u6743\u73af)\u3002\u800c\u5982\u679c\u8dd1\u6700\u77ed\u8def\u5f84\u8ba1\u6570\uff0c\u5219\u9700\u8981\u987e\u53cad[ver[i]] == d[cur] + wei[i], \u800c\u4e14\u9700\u8981\u5165\u961f\uff0c\u6240\u4ee5\u53cc\u54110\u8fb9(\u53730\u6743\u73af)\u7684\u5b58\u5728\u4f1a\u4f7fspfa\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u6b63\u5982spfa\u65e0\u6cd5\u89e3\u51b3\u8d1f\u6743\u73af\u90a3\u6837\u3002spfa\u7684\u8fd0\u884c\u610f\u4e49\u4e5f\u662f\u4e0d\u540c\u7684\u6709\u610f\u4e49\u7684\u8def\u5f84\uff0c\u56e0\u6b64\u5f53\u8dd1\u6700\u77ed\u8def\u5f84\u8ba1\u6570\u65f6\u4f1a\u904d\u53ca\u6240\u6709\u7684\u6700\u77ed\u8def\u5f84\u3002\u800c\u5728\u6ca1\u6709\u7279\u6b8a\u5b9a\u4e49\u7684\u60c5\u51b5\u4e0b\uff0c0\u6743\u73af\u65e0\u8bba\u8dd1\u591a\u5c11\u4e2a\u5468\u671f\u90fd\u53ef\u4ee5\u79f0\u4e3a\u4e00\u6761\u5168\u65b0\u7684\u56de\u8def\uff0c\u6240\u4ee5spfa\u4f1a\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\uff0c\u9677\u5165\u6b7b\u5faa\u73af\u3002\n### \u800c\u5728\u672c\u9898\uff0c\u7531\u4e8e\u6211\u4eec\u5173\u5fc3\u7684\u662f\u83b2\u82b1\u7684\u653e\u7f6e\u65b9\u6cd5\uff0c\u6240\u4ee50\u73af\u8dd1\u591a\u5c11\u6b21\u90fd\u53ea\u80fd\u770b\u4f5c\u4e00\u6b21(\u539f\u6709\u7684\u83b2\u82b1\u5f53\u7136\u4e0d\u6784\u6210\u5f71\u54cd),\u56e0\u800c\u53ef\u4ee5\u8df3\u8fc7\u8377\u53f6\u5efa\u8fb9\uff0c\u7528dfs\u89e3\u51b3\u5b83\u3002\u5173\u4e8edfs\uff0c\u5176\u5b9e\u5c31\u662f\u5bfb\u627e\u5bf9\u4e8e\u67d0\u4e2a\u70b9\uff0c\u653e\u7f6e1\u4e2a\u8377\u53f6\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u3002\n### \u8981\u6ce8\u610f\u7ed3\u675f\u70b9(4)\u662f\u4e0d\u7528\u653e\u7f6e\u8377\u53f6\u7684\u3002\n### \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0cspfa\u4e4b\u4e8e\u5e26\u6743\u56fe\u7684\u610f\u4e49\u6b63\u5982dfs/bfs\u4e4b\u4e8e\u65e0\u6743\u56fe\u7684\u610f\u4e49\u4e00\u6837\uff0c\u56e0\u6b64\u5728spfa\u4e2d\u589e\u51cf\u4e00\u4e9b\u4e1c\u897f\uff0c\u53ef\u4ee5\u53d8\u51fa\u5f88\u591a\u6709\u610f\u601d\u7684\u4e1c\u897f\u3002\n### \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8ehead,d\u8fd9\u79cd\u5e73\u65f6\u5199\u6210\u4e00\u7ef4\u7684\u6570\u7ec4\uff0c\u5728\u7528\u70b9\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u65f6\u5019\u5199\u6210\u4e8c\u7ef4\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u8fd9\u4e00\u70b9\u5f88\u5999\u3002\n### \u8bf4\u5b9e\u8bdd\u8fd9\u662f\u672c\u849f\u84bb\u9760\u81ea\u5df1AC\u7684\u7b2c\u4e00\u9053\u7d2b\u9898QaQ\u3002\n### \u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define pii pair<int, int>\n\nusing namespace std;\n\nconst int mov[8][2] = {{1, -2}, {2, -1}, {2, 1}, {1, 2}, {-1, 2}, {-2, 1}, {-2, -1}, {-1, -2}};\nlong long d[40][40], ud[40][40], cnt[40][40];\nint g[40][40], head[40][40], vx[810000], vy[810000], nex[810000], tot, n, m, sx, sy, ex, ey;\nbool inq[40][40], vis[40][40];\n\ninline void add(int x, int y, int tx, int ty) {\n\tvx[tot] = tx; vy[tot] = ty; nex[tot] = head[x][y]; head[x][y] = tot++;\n}\n\nvoid dfs(int nx, int ny, int tx, int ty) {\n\tif(g[tx][ty] == 2 || g[tx][ty] == 3) return;\n\tif(g[tx][ty] == 0 || g[tx][ty] == 4) {\n\t\tadd(nx, ny, tx, ty); return;\n\t}\n\n\tfor(int i = 0; i < 8; i++) {\n\t\tint dx = mov[i][0], dy = mov[i][1];\n\t\tif(tx + dx < 0 || tx + dx >= n || ty + dy < 0 || ty + dy >= m) continue;\n\t\tif(!vis[tx+dx][ty+dy]) {\n\t\t\tvis[tx+dx][ty+dy] = true;\n\t\t\tdfs(nx, ny, tx+dx, ty+dy);\n\t\t}\n\t}\n}\n\nvoid spfa() {\n\tqueue<pii> q;\n\tud[sx][sy] = 1; d[sx][sy] = 0; inq[sx][sy] = true; cnt[sx][sy] = (long long)1;\n\tq.push(make_pair(sx, sy));\n\twhile(!q.empty()) {\n\t\tint nx = q.front().first, ny = q.front().second; q.pop(); inq[nx][ny] = false;\n\t\tif(nx == ex && ny == ey) continue;\n\t\tfor(int i = head[nx][ny]; i != -1; i = nex[i]) {\n\t\t\tint tx = vx[i], ty = vy[i], w = 1;\n\t\t\tif(!ud[tx][ty] || d[tx][ty] > d[nx][ny] + w) {\n\t\t\t\tud[tx][ty] = 1; d[tx][ty] = d[nx][ny] + w; cnt[tx][ty] = cnt[nx][ny];\n\t\t\t\tif(!inq[tx][ty]) inq[tx][ty] = true, q.push(make_pair(tx, ty));\n\t\t\t} else if(ud[tx][ty] && d[tx][ty] == d[nx][ny] + w) {\n\t\t\t\tcnt[tx][ty] = cnt[tx][ty] + cnt[nx][ny];\n\t\t\t\tif(!inq[tx][ty]) inq[tx][ty] = true, q.push(make_pair(tx, ty));\n\t\t\t}\n\t\t}\n\t\tcnt[nx][ny] = (long long)0;\n\t}\n}\n\nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 0; i < n; i++)\n\t\tfor(int j = 0; j < m; j++) {\n\t\t\tscanf(\"%d\", &g[i][j]);\n\t\t\tif(g[i][j] == 3) sx = i, sy = j;\n\t\t\telse if(g[i][j] == 4) ex = i, ey = j;\n\t\t}\n\tmemset(ud, 0, sizeof(ud)); memset(inq, 0, sizeof(inq));\n\tmemset(head, -1, sizeof(head));\n\tfor(int i = 0; i < n; i++)\n\t\tfor(int j = 0; j < m; j++)\n\t\t\tif(g[i][j] == 0 || g[i][j] == 3) {\n\t\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\t\tvis[i][j] = true;\n\t\t\t\tfor(int k = 0; k < 8; k++) {\n\t\t\t\t\tint dx = mov[k][0], dy = mov[k][1];\n\t\t\t\t\tif(i + dx < 0 || i + dx >= n || j + dy < 0 || j + dy >= m) continue;\n\t\t\t\t\tif(!vis[i+dx][j+dy]) {\n\t\t\t\t\t\tvis[i+dx][j+dy] = true;\n\t\t\t\t\t\tdfs(i, j, i+dx, j+dy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\tmemset(cnt, 0, sizeof(cnt));\n\tspfa();\n\tif(!ud[ex][ey]) printf(\"-1\\n\");\n\telse printf(\"%lld\\n%lld\\n\", d[ex][ey]-1, cnt[ex][ey]);\n\treturn 0;\n}\n```\n### \u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002\n### \u6700\u540e\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)",
        "postTime": 1550229600,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60Lilypad Pond\u3011"
    },
    {
        "content": "/\\*\n\u7528spfa\u7b97\u8def\u5f84\uff0c\u5728\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u6700\u77ed\u8def\u5f84\u6570\uff0c\u4f46\u662f\u5982\u679c\u4ece\u4e00\u4e2a\u70b9\u5411\u5468\u56f4\u7684\u8377\u53f6\u5efa\u8fb9\u5c31\u4f1a\u51fa\u73b00\u8fb9\uff0c\u76f4\u63a5\u7edf\u8ba1\u8def\u5f84\u6570\u4f1a\u51fa\u9519\uff0c\u6700\u91cd\u8981\u7684\u662f\u95ee\u7684\u662f\u8377\u53f6\u62dc\u653e\u7684\u65b9\u6848\u6570\uff0c\n\n\uff08\u5e76\u4e0d\u662f\u8def\u5f84\u6570!!!!!\uff09\u6240\u4ee5\u5ffd\u7565\u4e0e\u8377\u53f6\u5efa\u7684\u8fb9\uff0c\u628a\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u8377\u53f6\u5468\u56f4\u7684\u6c34\u4e0e\u8be5\u70b9\u5efa\u8fb9\uff0c\u518d\u8dd1spfa\n\n\\*/\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint map[40][40];\nint dx[9]={-1,-2,-2,-1,1,2,2,1};\nint dy[9]={-2,-1,1,2,2,1,-1,-2};\nint link[40][40][40][40];\nlong long plan[40][40];\nbool visit1[40][40];\nint quex[100000],quey[100000];\nbool visit[40][40];\nint dist[40][40];\nint qt=0,qh=0,sx,sy,tx,ty;\nvoid fill(int x,int y)\n{\n    memset(visit1,0,sizeof(visit1));\n    qt=qh=0;\n    quex[++qt]=x,quey[qt]=y;\n    while(qh<qt)\n    {\n        int px=quex[++qh],py=quey[qh];\n        for(int i=0;i<=7;i++)\n        {\n            int ddx=px+dx[i],ddy=py+dy[i];\n            if(ddx>n||ddy<1||ddy>m||ddx<1||visit1[ddx][ddy]) continue;\n            if(map[ddx][ddy]==0||(ddx==tx&&ddy==ty))\n            link[x][y][ddx][ddy]=1;\n            else if(map[ddx][ddy]==1)\n            quex[++qt]=ddx,quey[qt]=ddy,visit1[ddx][ddy]=true;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        scanf(\"%d\",&map[i][j]);\n        if(map[i][j]==3) sx=i,sy=j;\n        if(map[i][j]==4) tx=i,ty=j;\n    }\n    fill(sx,sy);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    if(!map[i][j])\n    fill(i,j);\n    memset(dist,0x7f7f7f,sizeof(dist));\n    dist[sx][sy]=qh=qt=0;\n    quex[++qt]=sx;\n    quey[qt]=sy;\n    plan[sx][sy]=1;\n    while(qh<qt)\n    {\n        int px=quex[++qh],py=quey[qh];\n        visit[px][py]=false;\n        for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            if(!link[px][py][i][j]) continue;\n            if(dist[i][j]>dist[px][py]+1)\n            {\n                plan[i][j]=plan[px][py];\n                dist[i][j]=dist[px][py]+1;\n                if(!visit[i][j]&&(i!=tx||j!=ty))\n                {\n                    visit[i][j]=true;\n                    quex[++qt]=i,quey[qt]=j;\n                }\n            }\n            else if(dist[i][j]==dist[px][py]+1)\n            plan[i][j]+=plan[px][py];\n        }    \n    }\n    if(dist[tx][ty]>100000000)\n    printf(\"-1\");\n    else\n    printf(\"%d\\n%lld\",dist[tx][ty]-1,plan[tx][ty]);\n}\n```",
        "postTime": 1477492643,
        "uid": 25692,
        "name": "\u8d75\u6668\u6d0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u8377\u53f6\u5858Lilypad Pond\u3011"
    },
    {
        "content": "md\u8fd9\u9898\u6253\u5f97\u6211\u624b\u90fd\u6d41\u6c57\u4e86\n\n\u53d1\u73b0\u8fd9\u9898\u53ef\u4ee5\u8fd9\u6837\u5efa\u56fe\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(u,v)$ \uff0c\u5982\u679c $v$ \u662f\u6c34\u90a3\u4e48\u5c31\u8d4b\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u4e3a $1$\uff0c\u5982\u679c\u4e0d\u662f\u90a3\u4e48\u5c31\u8d4b $0$\uff0c\u5e76\u4e14 $u$\uff0c$v$ \u90fd\u4e0d\u80fd\u662f\u5ca9\u77f3\u3002\n\n\u9898\u610f\u8f6c\u4e3a\u6700\u77ed\u8def\u4e0e\u6700\u77ed\u8def\u8ba1\u6570\n\n\u53d1\u73b0\u6709 $0$ \u8fb9\u5c31\u5f88\u4e0d\u597d\u641e\uff0c\u90a3\u4e48\u5c31\u628a\u6709 $0$ \u8fb9\u7684\u4e00\u4e9b\u8282\u70b9\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u76f4\u63a5 `dfs` \u5373\u53ef\n\n\u975e\u5e38\u5947\u602a\u7684\u662f\u6211\u5199\u4e86\u4e2a\u5e76\u67e5\u96c6\u505a\u6cd5\uff0c\u6302\u4e86\uff0c\u5199\u4e86 `dfs` \u505a\u6cd5\uff0c\u53c8\u6302\u4e86\uff0c\u6700\u540e\u5199\u4e86\u5927\u6982\u4e00\u4e24\u4e2a\u5c0f\u65f6\u624d\u6253\u51fa\u6765\uff0c\u5199\u4e00\u6b21\u6302\u4e00\u6b21\uff0c\u5199\u5230\u7b2c\u5341\u6b21\u5de6\u53f3\u7684\u65f6\u5019\u624d\u8fc7\u4e86\u6837\u4f8b\uff0c\u5fc3\u6001\u7206\u70b8\u4e86\n\n\n\u8fd8\u6709\u8fd9\u9898\u6837\u4f8b\u5b9e\u5728\u662f\u592a...\u4eba\u8089\u6a21\u62df\u7684\u65f6\u5019\u7ed9\u6574\u5410\u4e86\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[35][35],dfn[35][35],tot,simati[3535];\nint di[8]={-2,-2,-1,-1,1,1,2,2};\nint dj[8]={-1,1,-2,2,-2,2,-1,1};\nqueue<int> q;\nint dis[30005],vis[30005];\nlong long cnt[30005];\nvector<int> e[30005];\nvoid spfa(int st){\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(st);dis[st]=0;cnt[st]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=0;i<e[u].size();++i){\n\t\t\tint v=e[u][i];\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;cnt[v]=cnt[u];\n\t\t\t\tif(!vis[v]) q.push(v),vis[v]=1;\n\t\t\t}\n\t\t\telse if(dis[v]==dis[u]+1) cnt[v]+=cnt[u];\n\t\t}\n\t}\n}\nint n,m;\nint num(int i,int j){\n\treturn (i-1)*m+j;\n}\nbool check(int i,int j){\n\treturn 1<=i&&i<=n&&1<=j&&j<=m;\n}\nvoid dfs(int id,int i,int j){\n\tif(dfn[i][j]) return;\n\tdfn[i][j]=1;\n\tfor(int k=0;k<8;++k){\n\t\tint ti=i+di[k],tj=j+dj[k];\n\t\tif(!check(ti,tj)) continue;\n\t\tif(dfn[ti][tj]) continue;\n\t\t//cout<<i<<\" \"<<j<<\" \"<<ti<<\" \"<<tj<<endl;\n\t\tif(a[ti][tj]==1) dfs(id,ti,tj);\n\t\telse if(a[ti][tj]!=2) dfn[ti][tj]=1,e[id].push_back(num(ti,tj));\n\t}\n}\nint main(){\n\tint st,ed;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tcin>>a[i][j];\n\t\t\tif(a[i][j]==3) st=num(i,j);\n\t\t\tif(a[i][j]==4) ed=num(i,j);\n\t\t}\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(a[i][j]==3||a[i][j]==0)\n\t\t\t\tmemset(dfn,0,sizeof(dfn)),\n\t\t\t\tdfs(num(i,j),i,j);\n\tspfa(st);\n\tif(dis[ed]!=0x3f3f3f3f) cout<<dis[ed]-1<<endl<<cnt[ed];\n\telse cout<<-1;\n\treturn 0;\n}\n```\n",
        "postTime": 1594714366,
        "uid": 344016,
        "name": "wurzang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]Lilypad Pond G\u3011"
    },
    {
        "content": "\u8fd9\u51e0\u5929\u5199\u9898\u662f\u771f\u7684\u81ea\u95ed\uff0c\u8fde\u56fe\u90fd\u4e0d\u4f1a\u5efa\u4e86\n\n[P1606 [USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60](https://www.luogu.org/problem/P1606)\n\n\n\n\n## \u89e3\u9898\u601d\u8def\n\n  \n  \n$bfs$\u9884\u5904\u7406+\u72b6\u6001\u8fde\u8fb9\u5efa\u56fe+\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u89e3\n\n\u8fd9\u662f\u8fd9\u7c7b\u9898\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u601d\u60f3.\n\n\u901a\u8fc7$bfs$\u5efa\u56fe\u5c06\u5404\u4e2a\u72b6\u6001\u8fde\u63a5\uff0c\u7136\u540e\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u51fa\u6700\u4f18\u7684\u72b6\u6001.\n\n### $bfs$\u9884\u5904\u7406+\u72b6\u6001\u8fde\u8fb9\u5efa\u56fe\u90e8\u5206\uff1a\n\n\u4e00\u5f00\u59cb\u6211\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6bcf\u4e2a\u70b9\u90fd\u8fdb\u884c$bfs$\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9.\n\n```cpp\n\t\t\tif(j-2>=1&&i-1>=1){\n\t\t\t\tif(mp[i-1][j-2]!=2&&!check[num[i][j]][num[i-1][j-2]]){\n\t\t\t\t\tcheck[num[i][j]][num[i-1][j-2]]=true;\n\t\t\t\t\tcheck[num[i-1][j-2]][num[i][j]]=true;\n\t\t\t\t\tif(mp[i-1][j-2]==0||mp[i][j]==0)add(num[i][j],num[i-1][j-2],1);\n\t\t\t\t\telse add(num[i][j],num[i-1][j-2],0);\n\t\t\t\t}\n\t\t\t}//\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u4ee3\u7801\n```\n\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ef\u884c. \u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u8fd9\u6837\u4f1a\u67090\u8fb9\u6743\u8fb9\u7684\u51fa\u73b0. \u8fd9\u5bf9\u4e8e\u6211\u4eec\u7edf\u8ba1\u6700\u77ed\u8def\u6570\u662f\u975e\u5e38\u4e0d\u5229\u7684.\n\n\u800c\u4e14\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7684\u8fb9\u5e94\u8be5\u8d4b\u503c\u4e3a1\uff0c\u4ec0\u4e48\u60c5\u51b5\u5e94\u8be5\u8d4b\u503c\u4e3a0\u5462\uff1f\u8fd9\u4e5f\u662f\u4e0d\u6e05\u695a\u7684. \n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/2019090309415189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzY1NzEx,size_16,color_FFFFFF,t_70#pic_center)\n\n>\u5982\u56fe\u6240\u793a\uff0c\u5982\u679c\u6309\u7167\u5982\u4e0a\u4ee3\u7801\u7684\u5199\u6cd5\uff0c\u4f1a\u51fa\u73b0\u660e\u660e\u53ea\u9700\u89812\u7684\u503c\u4f46\u5374\u7b97\u51fa\u67653\u7684\u60c5\u51b5\uff0c\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u4ece\u540c\u4e00\u4e2a\u65b9\u5411\uff08\u8fd9\u6837\u624d\u80fd\u771f\u6b63\u53cd\u6620\u9700\u8981\u586b\u4e0a\u8377\u53f6\u7684\u6c34\u7684\u6570\u91cf\uff09\u7edf\u8ba1.\u6bd4\u5982\u8bf4\u6211\u4eec\u5982\u679c\u53ea\u5728\u6307\u5411\u70b9\u4e3a0\u7684\u65f6\u5019\u603b\u8fb9\u6743+1\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u6ca1\u6709\u9519\n\n\u6211\u4eec\u8003\u8651\u4e0a\u9762\u90a3\u5f20\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e2a0\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u9884\u5904\u7406\u51fa\u82b1\u8d391\u4e2a\u8377\u53f6\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u8fb9\u6743\u5168\u90fd\u4e3a1.\n\n\u540c\u6837\u5730\uff0c\u7531\u4e8e\u6bcf\u6b21\u6211\u4eec\u90fd\u53ea\u662f\u4ece\u5f53\u524d\u70b9\u5f80\u524d\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u4e0a\u8ff0\u201c\u540c\u4e00\u4e2a\u65b9\u5411\u7edf\u8ba1\u201d\u7684\u8981\u6c42\u4e5f\u6ee1\u8db3. \u53ea\u4e0d\u8fc7\u73b0\u5728\u56e0\u4e3a\u4ee5\u6bcf\u4e2a0\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u201c\u82b1\u8d39\u4e00\u4e2a\u8377\u53f6\u201d\u6307\u7684\u5c31\u662f\u7528\u4e00\u4e2a\u8377\u53f6\u628a\u6211\u4eec0\u811a\u4e0b\u7684\u6c34\u586b\u4e86.\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u6b64\u4e00\u6765\u6211\u4eec\u5c31\u8981\u7528$bfs$\u627e\u5230\u516b\u4e2a\u65b9\u5411\u6bcf\u4e2a\u65b9\u5411\u7b2c\u4e00\u4e2a\u4e0d\u80fd\u4e0d\u52a0\u8377\u53f6\u8df3\u8fc7\u53bb\u7684\u70b9\uff08\u4e5f\u5c31\u662f0\u70b9\uff09\u4e86.\n\n```cpp\nbool tocheck(int x,int y){\n\tif(x<1||y<1||x>n||y>m||mp[x][y]==2||vis[x][y])return false;//\u6ce8\u610f\u5982\u679c\u662fmp=2\u5373\u4e00\u5757\u77f3\u5934\uff0c\u8df3\u8fc7\u53bb\u662f\u6ca1\u6709\u610f\u4e49\u7684\n\treturn true;\n}\nvoid build_map(int x,int y,int u){\n\tfor(int i=0;i<8;i++){\n\t\tint a=x+drc[i][0],b=y+drc[i][1];\n\t\tif(tocheck(a,b)){\n\t\t\tvis[a][b]=true;//\u9632\u6b62\u91cd\u590d\u8d70\n\t\t\tif(mp[a][b]==1)build_map(a,b,u);//\u5982\u679c\u5f53\u524d\u8fd8\u80fd\u4e0d\u52a0\u8377\u53f6\u7ee7\u7eed\u8d70\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u5f80\u524d\u8d70\n\t\t\telse add(u,num[a][b]);//\u5982\u679c\u662f\u7ec8\u70b9mp=4\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u8fde\u4e00\u6761\u8fb9\u8fc7\u53bb\u597d\u4e86\uff1b\u5426\u5219\u8bf4\u660e\u53ea\u52a0\u4e00\u4e2a\u8377\u53f6\u6700\u591a\u5c31\u53ea\u80fd\u8d70\u5230mp=0\u7684\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8981\u7ee7\u7eed\u5f80\u524d\u8d70\uff0c\u5c31\u8981\u52a0\u8377\u53f6\u4e86\n\t\t}\n\t}\n\treturn ;\n}\n```\n                          \n                          \n>\u76f8\u5f53\u4e8e\u6211\u4eec\u53ea\u8ba1\u8d77\u70b9\u76840\u53d8\u62101\uff0c\u6240\u4ee5\u5c31\u4fdd\u8bc1\u4e86\u8981\u586b\u8377\u53f6\u7684\u6c34\u548c\u6bcf\u70b9\u95f4\u7684\u8fb9\u6743\u7b49\n\n\n\n\n### \u6700\u77ed\u8def\u7b97\u6cd5\uff1aP1606 [USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60\n\n\u7531\u4e8e\u6211\u4eec\u9700\u8981\u5728\u6c42\u6700\u77ed\u8def\u7684\u540c\u65f6\u6c42\u6700\u77ed\u8def\u7684\u6570\u76ee\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u8ba1\u6570\u95ee\u9898\u4e86.\n\n\u89e3\u9898\u5173\u952e\u662f\uff0c\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6570\u662f\u7531\u8fde\u63a5\u5b83\u7684\u524d\u4e00\u4e2a\u70b9\u51b3\u5b9a\u7684.\n\n>\u5728\u8fb9\u6743\u4e3a1\u7684\u60c5\u51b5\u4e0b$spfa$\u624d\u6210\u7acb\uff0c\u5426\u5219\u8001\u8001\u5b9e\u5b9e\u7528$dp$\u5427\n\n\u82e5\u8fd8\u6ca1\u5b66\u8fc7\u6700\u77ed\u8def\u8ba1\u6570\uff1a[P1144 \u6700\u77ed\u8def\u8ba1\u6570](https://www.luogu.org/problemnew/show/P1144)\n\n```cpp\nbool check[1010];\nint dis[1010];\nll sum[1010];\nvoid spfa(int st){\n\tmemset(dis,inf,sizeof dis);\n\tmemset(check,false ,sizeof check);\n\tqueue<int >q;\n\tq.push(st);\n\tcheck[st]=true;\n\tdis[st]=0;\n\tsum[st]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tfor(int i=head[u];i;i=e[i].next ){\n\t\t\tint v=e[i].v ;\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tsum[v]=sum[u];//\u4fee\u6539\u5f53\u524d\u6700\u77ed\u8def\u6570\u91cf\uff0c\u6b64\u65f6\u524d\u9762\u7684\u8bb0\u5f55\u90fd\u5f97\u63a8\u7ffb\u91cd\u505a\n\t\t\t\tif(!check[v]){\n\t\t\t\t\tcheck[v]=true;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dis[v]==dis[u]+1)sum[v]+=sum[u];//\u6839\u636e\u52a0\u6cd5\u539f\u7406\uff0c\u6700\u77ed\u8def\u6570\u91cf\u589e\u52a0\n\t\t}\n\t\tcheck[u]=false;\n\t\tq.pop();\n\t}\n}\n```\n\n\n### \u5176\u4ed6\n\u7f16\u53f7\u65b9\u6cd5\uff1a\u5982\u8868\u683c\n\n|1|2 |3|\n|--|--|--|\n|  4|5  |6|\n|7|8|9|\n|10|11|12|\n\n```cpp\nnum[i][j]=(i-1)*m+j;\n```\n\n## \u7a0b\u5e8f\u5b9e\u73b0\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 0x3f3f3f3f\nusing namespace std;\nstruct edge{\n\tint v,next;\n}e[100010];//\u8003\u865130*30*k\uff0ck\u4e3a\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u7684\u70b9\uff0c\u53ef\u80fd\u4e0d\u6b628\u4e2a\uff08\u4e00\u4e2a\u53ef\u4ee5\u5916\u62d3\u7684\u5b50\u8282\u70b9\u53c8\u53ef\u4ee5\u67098\u4e2a\uff09\uff0c\u6240\u4ee5\u6570\u7ec4\u5c3d\u91cf\u5f00\u5927\nint drc[8][2]={{-2,1},{2,-1},{-1,2},{1,-2},{-2,-1},{-1,-2},{2,1},{1,2}};//\u9884\u8bbe\u516b\u4e2a\u65b9\u5411\nint head[1010],tot;\nint tx,ty,sx,sy;\nint n,m,ans1;\nll ans2;\nvoid add(int u,int v){\n\te[++tot].v =v;\n\te[tot].next =head[u];\n\thead[u]=tot;\n}\nint mp[51][51],num[51][51];\nbool vis[51][51];\nbool tocheck(int x,int y){\n\tif(x<1||y<1||x>n||y>m||mp[x][y]==2||vis[x][y])return false;\n\treturn true;\n}\nvoid build_map(int x,int y,int u){\n\tfor(int i=0;i<8;i++){\n\t\tint a=x+drc[i][0],b=y+drc[i][1];\n\t\tif(tocheck(a,b)){\n\t\t\tvis[a][b]=true;\n\t\t\tif(mp[a][b]==1)build_map(a,b,u);\n\t\t\telse add(u,num[a][b]);\n\t\t}\n\t}\n\treturn ;\n}//bfs+\u8fde\u8fb9\u64cd\u4f5c\nvoid prepare(){\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(!mp[i][j]||mp[i][j]==3){//\u627e\u7a7a\u8282\u70b9\u6216\u8d77\u70b9\uff0c\u8d77\u70b9\u591a\u7b97\u76841\u5728spfa\u540e\u51cf\u56de\u6765\u5c31\u884c\u4e86\n\t\t\t\tmemset(vis,false ,sizeof vis);\n\t\t\t\tvis[i][j]=true;\n\t\t\t\tbuild_map(i,j,num[i][j]);\n\t\t\t}\n\t\t}\n\t}\n}\nbool check[1010];\nint dis[1010];\nll sum[1010];//\u4e0d\u5f00long long\u89c1\u7956\u5148\nvoid spfa(int st){\n\tmemset(dis,inf,sizeof dis);\n\tmemset(check,false ,sizeof check);\n\tqueue<int >q;\n\tq.push(st);\n\tcheck[st]=true;\n\tdis[st]=0;\n\tsum[st]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tfor(int i=head[u];i;i=e[i].next ){\n\t\t\tint v=e[i].v ;\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tsum[v]=sum[u];\n\t\t\t\tif(!check[v]){\n\t\t\t\t\tcheck[v]=true;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dis[v]==dis[u]+1)sum[v]+=sum[u];\n\t\t}\n\t\tcheck[u]=false;\n\t\tq.pop();\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&mp[i][j]);\n\t\t\tnum[i][j]=(i-1)*m+j;\n\t\t\tif(mp[i][j]==3)sx=i,sy=j;\n\t\t\tif(mp[i][j]==4)tx=i,ty=j;\n\t\t}\n\t}\n\tprepare();\n\tspfa(num[sx][sy]);\n\tans1=dis[num[tx][ty]];\n\tans2=sum[num[tx][ty]];\n\tif(ans1==inf)printf(\"-1\\n\");\n\telse printf(\"%d\\n%lld\\n\",ans1-1,ans2);//\u8bb0\u5f97\u628a\u8d77\u70b9\u7684\u8fb9\u591a\u7b97\u76841\u51cf\u56de\u6765\n\treturn 0;\n}\n```\n\n## \u9898\u540e\u603b\u7ed3\n\n\u5efa\u56fe\u771f\u7684\u5f88\u91cd\u8981\uff01\u4ee5\u540e\u770b\u5230\u8fd9\u4e00\u7c7b\u578b\u7684\u9898\uff0c\u5c31\u60f3\u4e00\u4e0b\u53ef\u4e0d\u53ef\u4ee5\u5efa\u56fe\u62bd\u8c61\u5316\u5730\u8868\u793a\u72b6\u6001\uff0c\u7136\u540e\u901a\u8fc7\u6700\u77ed\u8def\u7b97\u6cd5\u8868\u793a\u72b6\u6001\u7684\u6539\u53d8\uff0c\u4ece\u800c\u6c42\u89e3.\n\n\u53ef\u4ee5\u901a\u8fc7\u6761\u4ef6\u63a8\u77e5\u8981\u5efa\u4ec0\u4e48\u6837\u7684\u56fe\uff0c\u5efa\u7684\u56fe\u6ca1\u6709\u4e00\u5b9a\u7684\u8981\u6c42\uff0c\u4e0d\u8981\u4ea7\u751f\u5b9a\u52bf\u601d\u7ef4. \u6bd4\u5982\u8bf4\u53cc\u5411\u56fe\u554a\uff0c\u5355\u5411\u56fe\u554a\uff0c\u90fd\u662f\u4e0d\u4e00\u5b9a\u7684.\n\n\u53e6\u5916\uff0c\u9001\u4e00\u9053\u540c\u4e3a\u5de7\u5999\u5efa\u56fe\uff0c\u7136\u540e\u4f7f\u7528\u6700\u77ed\u8def\u6c42\u89e3\u7684\u9898\u76ee\uff1a[P1979 \u534e\u5bb9\u9053](https://www.luogu.org/problem/P1979)\n\n~~\u53cc\u500d\u7ecf\u9a8c\u4ec0\u4e48\u7684\u662f\u4e0d\u53ef\u80fd\u7684~~\n",
        "postTime": 1567481937,
        "uid": 126621,
        "name": "HRLYB",
        "ccfLevel": 6,
        "title": "P1606 [USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60\uff08bfs\u9884\u5904\u7406+\u72b6\u6001\u8fde\u8fb9\u5efa\u56fe+\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u89e3\uff0c\u6700\u77ed\u8def\u8ba1\u6570\uff09"
    },
    {
        "content": "\u6570\u636e\u8fc7\u6c34\uff0c\u5efa\u8bae\u589e\u5f3a\u6570\u636e\u3002\n90%\u4ee5\u4e0aAC\u4ee3\u7801\u90fd\u80fd\u88ab\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\u5361\u6389\n```\n10 10\n2 2 0 2 1 2 1 2 1 1 \n0 0 0 0 2 2 0 2 2 2 \n1 3 1 1 0 1 1 0 1 0 \n1 1 0 4 0 2 1 2 1 1 \n1 2 2 1 2 1 1 0 2 2 \n2 0 1 1 0 2 2 2 0 1 \n0 2 2 0 1 0 0 1 0 1 \n2 1 1 2 0 1 2 2 1 1 \n1 1 2 0 2 0 2 0 0 0\n1 0 0 1 1 2 1 1 0 1\n```\n\u524d\u4e24\u4efd\u9898\u89e3\u66f4\u662f\u88ab\u6211\u6821OJ\u6781\u7aef\u6570\u636e\u5361\u523058\u5206\u3002\n\n\u4e0b\u9762\u8d34\u4e00\u4efd\u6b63\u786e\u7684\u4ee3\u7801\uff1a\n```\n\n\n#include<bits/stdc++.h>\nusing namespace std;\nstruct rec\n{\n\tlong long nxt;\n\tlong long to;\n\tlong long w;\n}e[100000],ee[100000];\nlong long head[5000],cnt,headw[5000],cntw;\nlong long n,m;\nlong long st,ed;\nlong long Map[100][100],wzc[100][100];\nlong long dis[5000];\nbool vis1[5000],vis2[5000],spfa[5000],con[5000][5000];\nlong long que[5000],h[5000][5000];\nbool qj[5000][5000];\nlong long ans[5000];\nvoid add(long long x,long long y,long long w)\n{\n\te[++cnt].nxt=head[x];\n\te[cnt].to=y;\n\te[cnt].w=w;\n\thead[x]=cnt;\n}\nvoid add_w(long long x,long long y)\n{\n\tee[++cntw].nxt=headw[x];\n\tee[cntw].to=y;\n\theadw[x]=cntw;\n}\nvoid SPFA()\n{\n\tqueue<long long>q;\n\tq.push(st);\n\tspfa[st]=1;\n\tdis[st]=0;\n\tans[st]=1;\n\twhile(!q.empty())\n\t{\n\t\tlong long flag=q.front();\n\t\tq.pop();\n\t\tspfa[flag]=0;\n\t\tfor(long long i=headw[flag];i;i=ee[i].nxt)\n\t\t\tif(dis[ee[i].to]>dis[flag]+1)\n\t\t\t{\n\t\t\t\tdis[ee[i].to]=dis[flag]+1;\n\t\t\t\tans[ee[i].to]=ans[flag];\n\t\t\t\tif(!spfa[ee[i].to])\n\t\t\t\t{\n\t\t\t\t\tq.push(ee[i].to);\n\t\t\t\t\tspfa[ee[i].to]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dis[ee[i].to]==dis[flag]+1)ans[ee[i].to]+=ans[flag];\n\t}\n}\nvoid dfs1(long long x)\n{\n\tvis1[x]=1;\n\tfor(long long i=head[x];i;i=e[i].nxt)\n\t{\n\t\tif(!vis1[e[i].to])\n\t\t{\n\t\t\tif(e[i].w)que[++que[0]]=e[i].to;\n\t\t\telse dfs1(e[i].to);\n\t\t}\n\t}\n}\nvoid dfs2(long long x)\n{\n\tvis2[x]=1;\n\tfor(long long i=1;i<=que[0];i++)\n\t\tif(!con[x][que[i]])\n\t\t{\n\t\t\th[x][++h[x][0]]=que[i];\n\t\t\tcon[x][que[i]]=1;\n\t\t}\n\tfor(long long i=head[x];i;i=e[i].nxt)\n\t\tif(!e[i].w&&!vis2[e[i].to])\n\t\t\tdfs2(e[i].to);\n}\nint main()\n{\n\tfor(long long i=1;i<=3000;i++)dis[i]=20020923002002092300;\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(long long i=1;i<=n;i++)\n\t\tfor(long long j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&Map[i][j]);\n\t\t\twzc[i][j]=++wzc[0][0];\n\t\t\tif(Map[i][j]==3)\n\t\t\t{\n\t\t\t\tst=wzc[i][j];\n\t\t\t\tMap[i][j]=0;\n\t\t\t}\n\t\t\tif(Map[i][j]==4)\n\t\t\t{\n\t\t\t\ted=wzc[i][j];\n\t\t\t\tMap[i][j]=0;\n\t\t\t}\n\t\t}\n\tfor(long long i=1;i<=n;i++)\n\t\tfor(long long j=1;j<=m;j++)\n\t\t{\n\t\t\tif(Map[i][j]==2)continue;\n\t\t\tif(i-1>0&&j-2>0&&Map[i-1][j-2]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i-1][j-2])add(wzc[i][j],wzc[i-1][j-2],0);\n\t\t\t\telse add(wzc[i][j],wzc[i-1][j-2],1);\n\t\t\t}\n\t\t\tif(i-2>0&&j-1>0&&Map[i-2][j-1]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i-2][j-1])add(wzc[i][j],wzc[i-2][j-1],0);\n\t\t\t\telse add(wzc[i][j],wzc[i-2][j-1],1);\n\t\t\t}\n\t\t\tif(i-1>0&&j+2<=m&&Map[i-1][j+2]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i-1][j+2])add(wzc[i][j],wzc[i-1][j+2],0);\n\t\t\t\telse add(wzc[i][j],wzc[i-1][j+2],1);\n\t\t\t}\n\t\t\tif(i-2>0&&j+1<=m&&Map[i-2][j+1]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i-2][j+1])add(wzc[i][j],wzc[i-2][j+1],0);\n\t\t\t\telse add(wzc[i][j],wzc[i-2][j+1],1);\n\t\t\t}\n\t\t\tif(i+1<=n&&j-2>0&&Map[i+1][j-2]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i+1][j-2])add(wzc[i][j],wzc[i+1][j-2],0);\n\t\t\t\telse add(wzc[i][j],wzc[i+1][j-2],1);\n\t\t\t}\n\t\t\tif(i+2<=n&&j-1>0&&Map[i+2][j-1]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i+2][j-1])add(wzc[i][j],wzc[i+2][j-1],0);\n\t\t\t\telse add(wzc[i][j],wzc[i+2][j-1],1);\n\t\t\t}\n\t\t\tif(i+1<=n&&j+2<=m&&Map[i+1][j+2]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i+1][j+2])add(wzc[i][j],wzc[i+1][j+2],0);\n\t\t\t\telse add(wzc[i][j],wzc[i+1][j+2],1);\n\t\t\t}\n\t\t\tif(i+2<=n&&j+1<=m&&Map[i+2][j+1]!=2)\n\t\t\t{\n\t\t\t\tif(Map[i+2][j+1])add(wzc[i][j],wzc[i+2][j+1],0);\n\t\t\t\telse add(wzc[i][j],wzc[i+2][j+1],1);\n\t\t\t}\n\t\t}\n\tfor(long long i=1;i<=n;i++)\n\t\tfor(long long j=1;j<=m;j++)\n\t\t\tif(Map[i][j]==1&&!vis1[wzc[i][j]])\n\t\t\t{\n\t\t\t\tque[0]=0;\n\t\t\t\tdfs1(wzc[i][j]);\n\t\t\t\tmemset(vis2,0,sizeof(vis2));\n\t\t\t\tdfs2(wzc[i][j]);\n\t\t\t}\n\tfor(long long i=1;i<=n;i++)\n\t\tfor(long long j=1;j<=m;j++)\n\t\t{\n\t\t\tif(Map[i][j]==2||Map[i][j]==1)continue;\n\t\t\tfor(long long k=head[wzc[i][j]];k;k=e[k].nxt)\n\t\t\t\tif(e[k].w)\n\t\t\t\t{\n\t\t\t\t\tif(!qj[wzc[i][j]][e[k].to])\n\t\t\t\t\t{\n\t\t\t\t\t\tqj[wzc[i][j]][e[k].to]=1;\n\t\t\t\t\t\tadd_w(wzc[i][j],e[k].to);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(long long l=1;l<=h[e[k].to][0];l++)\n\t\t\t\t\t\tif(!con[wzc[i][j]][h[e[k].to][l]]&&!qj[wzc[i][j]][h[e[k].to][l]])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tqj[wzc[i][j]][h[e[k].to][l]]=1;\n\t\t\t\t\t\t\tadd_w(wzc[i][j],h[e[k].to][l]);\n\t\t\t\t\t\t\tcon[wzc[i][j]][h[e[k].to][l]]=1;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\tSPFA();\n\tif(dis[ed]==20020923002002092300)puts(\"-1\");\n\telse cout<<dis[ed]-1<<endl<<ans[ed]<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1565687150,
        "uid": 93488,
        "name": "Porsche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u767d\u94f6\u83b2\u82b1\u6c60Lilypad Pond\u3011"
    },
    {
        "content": "**\u6700\u77ed\u8def\u8ba1\u6570**\u7684\u53d8\u5f62\u9898\n\n\u7b2c\u4e00\u95ee\u5f88\u5bb9\u6613\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5411\u5404\u4e2a\u65b9\u5411\u5efa\u8fb9\uff0c\u5982\u679c\u76ee\u6807\u70b9\u662f\u77f3\u5934\u6216\u7ec8\u70b9\u5c31\u5efa$0$\u8fb9\uff0c\u5982\u679c\u662f\u6742\u8349\u5c31\u5efa$1$\u8fb9\uff0c\u82b1\u5219\u8df3\u8fc7\u3002\u5efa\u597d\u56fe\u540e\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31$OK$\u4e86\uff0c$n,m\\leq 30$\uff0c\u60f3\u600e\u4e48\u5237\u5c31\u600e\u4e48\u5237\n\n\u6240\u4ee5\u7b2c\u4e8c\u95ee\u4e5f\u662f\u8fd9\u6837\u5efa\u56fe\u7136\u540e\u8dd1\u6700\u77ed\u8def\u8ba1\u6570\uff1f\n\n\u7136\u540e\u5c31\u6109\u5feb\u7684$WA$\u4e86\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u6837\u5efa\u56fe\u90fd\u662f\u53cc\u5411\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u51fa\u73b0$0$\u73af\n\n\u770b\u5f0f\u5b50\uff1a\n\n$if\\;dis_v=dis_u+w_i\\;:\\;cnt_v+=cnt_u$\n\n$if\\;dis_v>dis_u+w_i\\;:\\;dis_v=dis_u+w_i,cnt_v=cnt_u$\n\n\u56e0\u4e3a\u66f4\u65b0\u6700\u77ed\u8def\u662f\u5c0f\u4e8e\u53f7\uff0c$0$\u73af\u662f\u4e0d\u4f1a\u5f71\u54cd\u6700\u77ed\u8def\u7684\uff0c\u4f46\u66f4\u65b0\u6700\u77ed\u8def\u6570\u91cf\u662f\u7b49\u4e8e\u53f7\uff0c\u6240\u4ee5$0$\u73af\u4f1a\u5f71\u54cd\u6700\u77ed\u8def\u8ba1\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u8ba9\u56fe\u4e2d\u51fa\u73b0$0$\u8fb9\uff0c \u8ba9\u6bcf\u6761\u8fb9\u90fd\u5f3a\u5236\u4e3a$1$\n\n\u5373\u5bf9\u6bcf\u4e2a\u70b9\u7528$dfs$\u641c\u7d22\u4e00\u904d\uff0c\u6709\u54ea\u4e9b\u70b9\u662f\u653e\u4e00\u5757\u77f3\u5934\u80fd\u5230\u7684\uff0c\u7136\u540e\u8fde$1$\u7684\u8fb9\uff0c\u8fd9\u6837\u5237\u6700\u77ed\u8def\u8ba1\u6570\u5c31\u4e0d\u4f1a\u51fa\u95ee\u9898\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 1005\n#define maxe 1000005\n#define ll long long\nusing namespace std;\nconst int flg[8][2]={{1,2},{-1,2},{1,-2},{-1,-2},{2,1},{-2,1},{2,-1},{-2,-1}};\nint n,m,X,Y,Xx,Yy,Ans,x,Q[maxe],y,lnk[maxn],w[maxe],nxt[maxe],son[maxe],tot,a[maxn][maxn];\nbool vis[maxn],v[35][35];\nll G[maxn],dis[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline int Get(int x,int y){return (x-1)*m+y;}\ninline void add(int x,int y){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;}\ninline void Spfa(int S,int T){\n\tfor (int i=1;i<=n*m;i++) dis[i]=1e16;\n\tdis[S]=0,G[S]=1;int hed=0,til=1;ll INF=1e16;Q[1]=S;\n\twhile (hed<til){\n\t\thed=(hed+1)%maxe;vis[Q[hed]]=0;\n\t\tfor (int i=lnk[Q[hed]];i;i=nxt[i])\n\t\t  if (dis[son[i]]==dis[Q[hed]]+1) G[son[i]]+=G[Q[hed]];\n\t      else if (dis[son[i]]>dis[Q[hed]]+1){\n\t      \tdis[son[i]]=dis[Q[hed]]+1;\n\t      \tG[son[i]]=G[Q[hed]];\n\t      \tif (!vis[son[i]]) Q[til=(til+1)%maxe]=son[i],vis[son[i]]=1;\n\t\t  }\n\t}\n\tif (dis[T]==INF){printf(\"-1\");exit(0);}\n\treturn;\n}\ninline bool check(int x,int y){return x<1||x>n||y<1||y>m||a[x][y]==2||a[x][y]==3;}\ninline void Dfs(int S,int x,int y){\n    v[x][y]=1;\n    for (int i=0;i<8;i++){\n    \tint X=x+flg[i][0],Y=y+flg[i][1];\n    \tif (check(X,Y)||v[X][Y]) continue;\n    \tif (a[X][Y]==1) Dfs(S,X,Y);\n    \telse v[X][Y]=1,add(S,Get(X,Y));\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=1;j<=m;j++) a[i][j]=read();\n    for (int i=1;i<=n;i++)\n    for (int j=1;j<=m;j++){\n    \tif (a[i][j]&&a[i][j]<=2) continue;\n    \tif (a[i][j]==4){Xx=i,Yy=j;continue;}\n    \tif (a[i][j]==3) X=i,Y=j;\n    \tmemset(v,0,sizeof v);Dfs(Get(i,j),i,j);\n\t}\n\tSpfa(Get(X,Y),Get(Xx,Yy));\n    printf(\"%lld\\n%lld\",dis[Get(Xx,Yy)]-1,G[Get(Xx,Yy)]);\n    return 0;\n}\n```\n",
        "postTime": 1594707514,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]Lilypad Pond G\u3011"
    },
    {
        "content": "[Link](https://www.luogu.org/problemnew/solution/P1606?page=2)\n\n--------------\n\n~~\u8003\u573a\u4e0a\u628a\u6211\u9001\u8d70\u7684\u4e00\u9053\u9898~~\n\n\u8003\u8bd5\u65f6\uff0c\u6643\u773c\u4e00\u770b\uff0c\u8fd9\u4e0d\u662f\u88f8\u7684\u6700\u77ed\u8def\u8ba1\u6570\u5417\uff1f\uff01\u8d76\u5fd9\u5199\u597d\u4e86\u4ee3\u7801\uff0c\u81ea\u4fe1\u5730\u5173\u95ed\u4e86\u6587\u4ef6\u3002\u7136\u540e\uff0c0\u5206\u2026\u2026\n\n\u90a3\u4e48\u56de\u8fc7\u5934\u6765\uff0c\u5230\u5e95\u9519\u5728\u54ea\u91cc\uff1f\u53ea\u6709\u65b0\u52a0\u7684\u8377\u53f6\u624d\u4f1a\u88ab\u7edf\u8ba1\uff0c\u800c\u539f\u6765\u5c31\u6709\u7684\u8377\u53f6\u4e0d\u7b97\u5728\u65b9\u6848\u6570\u91cc\uff08\u5b66\u957f\u628a\u9898\u76ee\u9b54\u6539\u4e86\uff0c\u5e76\u4e14\u8bf4\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u4e00\u76f4\u6ca1\u641e\u61c2\u6837\u4f8b\uff0c\u7136\u540e\u6211\u5c31\u6302\u4e86\uff09\n\n\u90a3\u600e\u4e48\u6837\u624d\u80fd\u4f7f\u5f97\u4e0d\u628a\u539f\u6765\u5c31\u6709\u7684\u8377\u53f6\u4f5c\u4e3a\u72b6\u6001\u7b97\u5728\u65b9\u6848\u6570\u91cc\uff1f\u56e0\u4e3a\u539f\u6765\u6709\u7684\u8377\u53f6\u76f4\u63a5\u53ef\u4ee5\u8df3\uff0c\u4e0d\u9700\u8981\u82b1\u8d39\uff0c\u6240\u4ee5\u4e0d\u628a\u5b83\u4e0e\u5b83\u53ef\u4ee5\u8df3\u5230\u7684\u70b9\u8fde\u8fb9\uff0c\u800c\u662f\u628a\u5b83\u4f5c\u4e3a\u4e2d\u8f6c\u8282\u70b9\uff0c\u628a\u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u6240\u6709\u70b9\u4e92\u76f8\u8fde\u8fb9\uff0c\u6700\u540e\u8f6c\u5316\u4e3a\u6700\u77ed\u8def\u8ba1\u6570\u3002\n\n\u53ef\u662f\u5c31\u8fd9\u6837\u8fc7\u4e86\u5417\uff1f\u5e76\u6ca1\u6709\uff0c\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u3002\u5c31\u662f\u4e24\u4e2a\u539f\u672c\u5c31\u6709\u7684\u8377\u53f6\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u5c31\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2a\u4e2d\u8f6c\u8282\u70b9\uff0c\u9700\u8981\u628a\u5b83\u4eec\u53ef\u4ee5\u5230\u8fbe\u7684\u81f3\u591a16\u4e2a\u70b9\u4e92\u76f8\u8fde\u8fb9\uff08\u6b64\u8fc7\u7a0b\u53ef\u4ee5\u7528bfs\u89e3\u51b3\uff09\u3002\u5982\u679c\u662f\u4e09\u4e2a\u53ca\u4e09\u4e2a\u4ee5\u4e0a\u5462\uff1f\u4ee5\u6b64\u7c7b\u63a8\u7f62\u4e86\u3002\n\n--------------\n\nCode:\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<queue>\nusing namespace std;\n#define ll long long\n#define INF 0x3f3f3f3f\n#define N 100\n\ntemplate<class T>\ninline void read(T &x){\n\tx=0;char c=getchar();T flag=1;\n\twhile(c<'0'||c>'9'){if(c=='-')flag=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n\tx*=flag;\n}\n\nstruct E{\n\tint next,to;\n\tll dis;\n}e[(N*N)<<4];\n\nint dx[10]={-2,-2,-1,-1,1,1,2,2},\n\tdy[10]={-1,1,-2,2,-2,2,-1,1};\nint n,m,a[N][N],s,t,top,sta[N*N],head[N*N],cnt;\nbool in[N*N],vis[N*N],mark[N*N][N*N];\nll dis[N*N],ans[N*N];\nqueue<int> Q;\n\ninline bool check(int x,int y){\n\tif(x<1||x>n||y<1||y>m) return 0;\n\tif(a[x][y]==2) return 0;\n\treturn 1;\n}\ninline void add(int id,int to,int dis){\n\te[++cnt]=(E){head[id],to,dis};\n\thead[id]=cnt;\n} \nvoid dfs(int x,int y){\n\tfor(int op=0;op<8;op++){\n\t\tint xx=x+dx[op],yy=y+dy[op];\n\t\tif(!check(xx,yy)) continue;\n\t\tif(!a[xx][yy]&&!in[(xx-1)*m+yy]){\n\t\t\tin[(xx-1)*m+yy]=1;\n\t\t\tsta[++top]=(xx-1)*m+yy;\n\t\t}\n\t\tif(a[xx][yy]==1&&!vis[(xx-1)*m+yy]){\n\t\t\tvis[(xx-1)*m+yy]=1;\n\t\t\tdfs(xx,yy);\n\t\t}\n\t}\n}\nvoid bfs(){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tQ.push(s);\n\tans[s]=1,dis[s]=0,vis[s]=1;\n\twhile(!Q.empty()){\n\t\tint u=Q.front();Q.pop();\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]==dis[u]+e[i].dis){\n\t\t\t\tans[v]+=ans[u];\n\t\t\t\tif(!vis[v]&&v!=t){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tQ.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dis[v]>dis[u]+e[i].dis){\n\t\t\t\tdis[v]=dis[u]+e[i].dis;\n\t\t\t\tans[v]=ans[u];\n\t\t\t\tif(!vis[v]&&v!=t){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tQ.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n//\tfreopen(\"chess.in\",\"r\",stdin);\n//\tfreopen(\"chess.out\",\"w\",stdout);\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tread(a[i][j]);\n\t\t\tif(a[i][j]==3){\n\t\t\t\ts=(i-1)*m+j;\n\t\t\t\ta[i][j]=0;\n\t\t\t}\n\t\t\tif(a[i][j]==4){\n\t\t\t\tt=(i-1)*m+j;\n\t\t\t\ta[i][j]=0;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(a[i][j]) continue;\n\t\t\tfor(int op=0;op<8;op++){\n\t\t\t\tint x=i+dx[op],y=j+dy[op];\n\t\t\t\tif(check(x,y)&&(!a[x][y]))\n\t\t\t\t\tadd((i-1)*m+j,(x-1)*m+y,1);\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i][j]==1&&(!vis[(i-1)*m+j])){\n\t\t\t\ttop=0;\n\t\t\t\tmemset(in,0,sizeof(in));\n\t\t\t\tvis[(i-1)*m+j]=1;\n\t\t\t\tdfs(i,j);\n\t\t\t\tfor(int k=1;k<=top;k++)\n\t\t\t\t\tfor(int p=k+1;p<=top;p++)\n\t\t\t\t\t\tif(!mark[sta[k]][sta[p]]){\n\t\t\t\t\t\t\tmark[sta[k]][sta[p]]=mark[sta[p]][sta[k]]=1;\n\t\t\t\t\t\t\tadd(sta[k],sta[p],1),add(sta[p],sta[k],1);\n\t\t\t\t\t\t}\n\t\t\t}\n\tbfs();\n\tif(!ans[t]) printf(\"-1\");\n\telse printf(\"%lld\\n%lld\",dis[t]-1,ans[t]);\n}\n/*\n3 4\n3 0 0 0\n0 0 1 4\n2 2 2 0\n*/\n```",
        "postTime": 1566735055,
        "uid": 83337,
        "name": "wwlw",
        "ccfLevel": 7,
        "title": "[USACO07FEB]Lilypad Pond"
    },
    {
        "content": "\u8fd9\u9053\u9898\u633a\u597d\u73a9\u7684 \u5199\u4e2a\u9898\u89e3\u5427\n\n\u4e00\u5f00\u59cb \u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u76f4\u63a5bfs \u4f46\u662f \u56e0\u4e3a\u539f\u672c\u8377\u53f6\u7684\u5b58\u5728 \u4f60\u4f1a\u5f88\u70e6\n\n\u7b2c\u4e00\u95ee\u8fd8\u597d\u8bf4 \u7edf\u8ba1\u65b9\u6848\u6570\u5c31GG\n\n\u7136\u540e \u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u628a\u8fd9\u4e9b\u8377\u53f6\u7f29\u6210\u8fde\u901a\u5757\u3002\u3002\u3002\n\n\u53ef\u662f\uff01\uff01\uff01\uff01 \u4f60\u53c8\u4f1a\u53d1\u73b0\u6709\u95ee\u9898\u5927\u54ed\n\n\u6bd4\u5982\u8fd9\u79cd\n\n0 0 y 0 0\n\n\n1 0 0 0 1\n\n\n0 0 x 0 0\n\n\nx\u548cy\u90fd\u662f\u6e05\u6c34 \u4ecex\u53bb\u5230y \u53ef\u4ee5\u7ecf\u8fc7\u5de6\u8fb9\u7684\u8054\u901a\u5757\u53bb \u53ef\u4ee5\u7ecf\u8fc7\u53f3\u8fb9\u7684\u8054\u901a\u5757\u53bb \u7b54\u6848\u6709\u4e24\u79cd\u4f46\u5176\u5b9e\u5c31\u53ea\u6709x\uff0cy\u653e\u8377\u53f6\u4e00\u79cd\n\n\n\u662f\u4e0d\u662f\u5f88TM\u723d\uff01\n\n\n\u6700\u540e \u6211\u6765\u544a\u8bc9\u4f60\u8fd9\u4e2a\u4e16\u754c\u7684\u771f\u76f8\u5fae\u7b11\n\n\n\u56e0\u4e3a\u5b83\u662f\u7edf\u8ba1\u653e\u8377\u53f6\u7684\u65b9\u6848\u6570\u554a\n\n\n\u6211\u4eec\u53ef\u4ee5\u53bb\u907f\u514d\u9047\u5230\u90a3\u4e9b\u539f\u672c\u5b58\u5728\u7684\u561b  \u6211\u4eec\u5c31\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8d77\u70b9\u4ee5\u53ca\u6c34\u4f4d\u7f6e\u7684\u82b1\u8d391\u4e2a\u8377\u53f6\u80fd\u5230\u7684\u5730\u65b9 \u7136\u540e\u5efa\u8fb9 \u8dd1spfa\u5c31\u53ef\u4ee5\u4e86~\n\n\n\u4e3a\u4ec0\u4e48\u5462...\u56e0\u4e3a\u8fd9\u6837\u5c31\u80af\u5b9a\u6ca1\u6709\u73af\u4e86 \u800c\u4e14\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\u5176\u5b9e\u5c31\u662f\u4ecex\u76f4\u63a5\u5230y \u5c31\u4e0d\u6015\u7b97\u591a\u60c5\u51b5\u4e86\n\n\n\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u8fd8\u662f\u633a\u597d\u770b\u7684\uff08\u6bd5\u7adf\u633a\u5feb\u7684\uff09\n\n\n~~\u4f60\u770b\u6211\u5199\u7684\u90a3\u4e48\u8f9b\u82e6 \u662f\u4e0d\u662f\u8981\u5e2e\u6211\u6c34\u4e00\u6ce2\u8bbf\u95ee\u91cf~~ http://blog.csdn.net/cgh\\_andy/article/details/52957019\n",
        "postTime": 1479176950,
        "uid": 2637,
        "name": "cghAndy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1606 \u3010[USACO07FEB]\u8377\u53f6\u5858Lilypad Pond\u3011"
    }
]