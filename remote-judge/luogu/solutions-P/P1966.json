[
    {
        "content": "# P1966 \u706b\u67f4\u6392\u961f \u9898\u89e3\n## \u8fd9\u6bd5\u7adf\u662f\u4e2a\u84dd\u9898 \u4e8e\u662f\u65f6\u95f4\u8fc7\u53bb\u4e86\u5f88\u4e45\u2026\u2026\n### \u7ec8\u4e8e\u60f3\u51fa\u6765\u4e86 \u672c\u4eba\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4 \u4e8e\u662f\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u5f52\u5e76\n#### \u4e0d\u4f1a\u7684\u5148\u770b\u770b\u601d\u8def\uff0c\u522b\u6025\u7740\u770b\u4ee3\u7801\n\u5176\u5b9e\u8fd9\u9898\u672c\u8eab\u5e76\u4e0d\u96be\uff0c\u8003\u7684\u77e5\u8bc6\u70b9\u5c31\u662f**\u5f52\u5e76\u6392\u5e8f**\u548c**\u9006\u5e8f\u5bf9**\uff1b\n\uff08\u9644[P1908 \u9006\u5e8f\u5bf9](https://www.luogu.org/problemnew/show/P1908)\uff09\n\n\u90a3\u4e48\u96be\u70b9\u5728\u54ea\u5462\uff1f\u5c31\u5728\u5982\u4f55**\u53d1\u73b0**\u8fd9\u9898\u662f\u4e2a\u9006\u5e8f\u5bf9\uff1a\n\n\uff08\u9644\u9001\u9898\u76ee\u94fe\u63a5\uff1a[P1966 \u706b\u67f4\u6392\u961f](https://www.luogu.org/problemnew/show/P1966)\uff09\n\n\u4e8e\u662f\u6211\u4eec\u5148\u89e3\u8bfb\u9898\u76ee\uff08\u4ee5\u4e0b\u662f\u7b80\u5316\u7248\uff09\uff1a\n\n- \u73b0\u6709\u4e24\u5217\u6bcf\u5217\u4e2a\u6570\u4e3an\u7684\u706b\u67f4\uff0c\u4e14\u6bcf\u5217\u4e2d\u706b\u67f4\u68d2\u7684\u9ad8\u5ea6\u5747\u4e0d\u76f8\u540c\uff0c\u6c42\u5f97\u5230\u03a3[(ai-bi)^2]\u7684\u6700\u5c0f\u503c\u7684\u65f6\u5019\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u706b\u67f4\u7684\u6b21\u6570\uff0c\u5176\u4e2di\u8868\u793aa\u3001b\u4e24\u5217\u706b\u67f4\u68d2\u4e2d\u7b2ci\u6839\u706b\u67f4\uff1b\n- \u6570\u636e\u8f93\u5165\uff1a\n\n1. \u5171\u4e09\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\uff0c\u8868\u793a\u6bcf\u76d2\u4e2d\u706b\u67f4\u7684\u6570\u76ee\u3002\n1. \u7b2c\u4e8c\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n1. \u7b2c\u4e09\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n- \u6570\u636e\u8f93\u51fa\uff1a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,997 \u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n1. \u5bf9\u4e8e 10%\u7684\u6570\u636e\uff0c 1 \u2264 n \u2264 10\uff1b\n\n1. \u5bf9\u4e8e 30%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 100\uff1b\n\n1. \u5bf9\u4e8e 60%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 1,000\uff1b\n\n1. \u5bf9\u4e8e 100%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 100,000,0 \u2264\u706b\u67f4\u9ad8\u5ea6\u2264 maxlongint\uff1b\n\n\u81f3\u5c11\u8bfb\u5230\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u867d\u7136\u706b\u67f4\u9ad8\u5ea6\u662f\u552f\u4e00\u7684\uff0c\u4f46\u6211\u4eec\u4e0d\u53ef\u80fd\u76f4\u63a5\u5f00\u4e00\u4e2a max long int \u5927\u5c0f\u7684\u6570\u7ec4\uff01\u5f88\u660e\u663e\uff0c\u6709\u4e00\u4e2a\u8003\u70b9\uff1a**\u79bb\u6563\u5316**\uff01\n\n\u597d\u4e86\u56de\u5f52\u9898\u76ee\uff0c\u65e2\u7136\u8981\u6c42\u627e\u5230 min(\u03a3[(ai-bi)^2])\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u53d8\u5f62\u4e00\u4e0b\uff1a\n\n\t\t\u03a3[(ai-bi)^2]=\u03a3(ai^2-2*ai*bi+bi^2)\n        \n\u7531\u6b64\u53ef\u89c1\uff0c\u82e5\u60f3\u4f7fmin(\u03a3[(ai-bi)^2])\u6700\u5c0f\uff0c\u800c\u548c\u5f0f\u4e2dai^2+bi^2\u662f\u4e2a\u5b9a\u503c\uff0c\u90a3\u4e48\uff0c\u5c31\u53ea\u80fd\u5728 2*aibi \u8fd9\u4e00\u9879\u4e0a\u4e0b\u6587\u7ae0\uff1b\n \n \t\t\u03a3(ai^2-2*ai*bi+bi^2)=\u03a3(ai^2+bi^2)-\u03a3(2*ai*bi)\n            \u03a3(2*ai*bi)=2*\u03a3(ai*bi)\n            \n\u90a3\u4e48\uff0c\u6211\u4eec\u8981\u53d6 \u03a3(ai*bi)\u7684**\u6700\u5927\u503c**\uff01\u8fd9\u6837\uff0c\u4e0a\u8ff0\u548c\u5f0f\u7684\u503c\u6700\u5c0f\uff1b\n\n\u5982\u4f55\u53d6\u5230\u6700\u5927\u503c\uff1f\u5176\u5b9e\u770b\u8fc7\u522b\u4eba\u9898\u89e3\u7684\u4e5f\u90fd\u6e05\u695a\uff1a\n\n\u5bf9\u4e8e\u6570\u5217k1~kn,p1~pn\uff0c\u03a3(ki*pi)\u7684\u6700\u5c0f\u503c\u8981\u6c42\u4e24\u4e2a\u6570\u5217\u6709\u5e8f\u7684\u5206\u522b\u4ece\u5c0f\u5230\u5927\uff08\u6216\u4ece\u5927\u5230\u5c0f\uff09\u6392\u5217\n\n\u5373\u63d0\u51fa\u201c\u5047\u8bf4\u201d\uff1a\u5bf9\u4e8e\u6709\u5e8f\u6570\u5217k(1)~k(n),p(1)~p(n)\uff0ck(1)p(1)+k(2)p(2)+\u2026\u2026+k(n)p(n)>=k(i)p(t)+k(u)p(y)+\u2026\u2026+k(r)p(g)\uff0c\u610f\u601d\u5c31\u662f\u8bf4\uff1a\u987a\u5e8fx\u987a\u5e8f>=\u4e71\u5e8fx\u4e71\u5e8f\uff1b\n\n\u5982\u4f55\u8bc1\u660e\uff1f\n\n\u770b\u4e86Dalao\u4eec\u5199\u7684\u5f88\u591a\uff0c\u6211\u8fd8\u662f\u7528\u6570\u5b66\u77e5\u8bc6\u8bc1\u660e\u4e00\u4e0b\u597d\u4e86\uff1a\n\n\n\u516c\u5f0f\u8bc1\u660e\uff1a \u987a\u5e8f\u4e4b\u4e58>=\u4e71\u5e8f\u4e4b\u4e58\n------------\n1. \u8bbe\u6709\u5e8f\u6570\u5217k1~kn,p1~pn\uff0c\u53d6k1<k2\u3001p1<p2\n1. \u56e0\u6b64\u5bb9\u6613\u5f97\u5230\uff1ak1p1+k2p2>k1p2+k2p1;\n  \n\t\u5c06\u4e0a\u8ff0\u4e0d\u7b49\u5f0f\u53d8\u5f62\u4e00\u4e0b\uff1a\n  \n\t\t k2p2-k2p1>k1p2-k1p1 \u5373k2(p2-p1)>k1(p2-p1)\n  \t\t\u2235k2>k1,p2>p1 \u2234k2(p2-p1)>k1(p2-p1)\n  \t\t\u8bc1\u6bd5\uff1b\n  \n3. \u63a8\u5e7f2\u4e2d\u7684\u7ed3\u8bba\u52301\u4e2d\uff0c**\u4e71\u5e8f\u5c31\u662f\u4e0d\u65ad\u5c06\u987a\u5e8f\u4ea4\u6362\u6253\u4e71\u7684\u8fc7\u7a0b**\uff0c\u6700\u7ec8\u7ed3\u679c\u7b26\u54082\u7684\u7ed3\u8bba\uff0c\u56e0\u6b64 **\u987a\u5e8f\u4e4b\u4e58>=\u4e71\u5e8f\u4e4b\u4e58**\uff0c\u8bc1\u6bd5\u3002\n\n  \u6211\u60f3\u6211\u7684\u8bc1\u660e\u8fd8\u662f\u6bd4\u8f83\u6613\u61c2\u7684\u5427QAQ\n  \n\u5230\u6b64\uff0c\u9898\u76ee\u89e3\u8bfb\u5b8c\u6bd5\uff0c\u8bc1\u660e\u5b8c\u6bd5\uff1b\n  \n\u4ee5\u4e0b\u8c08\u8c08\u601d\u8def\n------------\n1. \u79bb\u6563\u5316\u6570\u636e\u3002\u65e2\u7136\u6570\u7ec4\u6ca1\u6cd5\u5f00\u90a3\u4e48\u5927\uff0c\u90a3\u4e48\u5c31\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u4e00\u4e0b\u79bb\u6563\u5316\u3002\n  \n\u5b9e\u73b0\u5982\u4e0b\uff1a \n```cpp\n  \tstruct fire{\n  \t    int hi,bh;\n  \t}l1[1000005],l2[1000005]\uff1b\n\t\t//\u2026\u2026\u6b64\u5904\u7701\u7565\u4e00\u5927\u5806\u2026\u2026\n\t  \tfor(int i=1;i<=n;i++)\n        \t\tscanf(\"%d\",&l1[i].hi),l1[i].bh=i;\n    \tfor(int i=1;i<=n;i++)\n        \t\tscanf(\"%d\",&l2[i].hi),l2[i].bh=i;\n\n```\n\n  \n2. \u6392\u5217\u6570\u3002\u8bc1\u660e\u5b8c\u6210\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u627e\u7684\u5c31\u662f\u4e24\u4e2a\u6570\u5217 l1, l2 \u4e2d\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u6309\u6211\u4eec\u6240\u8bf4\u7684\u539f\u5219\u4e00\u4e00\u5bf9\u5e94\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u6570\u5217\u7b2c1\u5927\u7684\u6570\u5bf9\u5e94\u53e6\u4e00\u4e2a\u6570\u5217\u7b2c1\u5927\u7684\u6570\uff0c\u7b2c2\u5927\u7684\u6570\u5bf9\u5e94\u53e6\u4e00\u4e2a\u7b2c2\u5927\u7684\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\n\n\u90a3\u4e48\uff0c\u4e0d\u7ba1\u4e09\u4e03\u4e8c\u5341\u4e00\uff0c\u5148\u5feb\u6392\u8ba9\u4e24\u4e2a\u5e8f\u5217\u6709\u5e8f\u4e00\u4e0b\u5427\uff08\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u706b\u67f4\u68d2\u9ad8\u5ea6\u4e0d\u540c\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7f16\u53f7\u6df7\u4e71\uff09\uff0c\u53cd\u6b63\u6709\u7f16\u53f7\u5728\u90a3\uff1b\u7136\u540e\u6211\u4eec\u6765\u770b\u4e00\u7ec4\u6570\u636e\uff08\u6837\u4f8b1\uff09\n  \n  \t\t\n\t\tA\uff1a2 3 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 1 2 4\n\t\tB\uff1a3 2 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 2 1 4\n\n \u90a3\u4e48\uff0cA\u5e8f\u5217\u4e2d\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u7b2c3\u5c0f\u7684\uff0c\u7c7b\u63a8\uff1b\n  \n  B\u5e8f\u5217\u4e2d\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u7b2c3\u5c0f\u7684\uff0c\u7b26\u5408\uff0c\u7c7b\u63a8\uff1b\n  \n  \u7136\u6211\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\uff0cA\u4e2d\u7b2c\u4e8c\u4e2a\u6570\u4e0eB\u4e2d\u7b2c\u4e8c\u4e2a\u6570\u4e0d\u4e00\u6837\uff08\u987a\u5e8f\u4e0d\u540c\uff09\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u8fd9\u4e2a\u6570**\u4e0d\u7b26\u5408\u539f\u5219**\uff1b\u4e0d\u61c2\u7ee7\u7eed\u770b\u770b\uff0c\u7b49\u4f1a\u5c31\u61c2\u4e86\uff1b\n  \n3. \u627e\u5230\u4e0d\u7b26\u5408\u539f\u5219\u7684\u6570\u3002\n\t\t\n  \t\t\u6211\u4eec\u5b58\u4e00\u4e2a\u6570\u7ec4c[i];\n \t\tc[B[i]\u7f16\u53f7]=A[i]\u7f16\u53f7\uff1b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\n  \t\t\u6570\u636e\u8bf4\u8bdd\uff1a\n  \t\tA\uff1a2 3 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 1 2 4\n\t\tB\uff1a3 2 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 2 1 4\n  \t\tc[B[1]\u7f16\u53f7]=c[3]=a[1]\u7f16\u53f7=3\n  \t\tc[B[2]\u7f16\u53f7]=c[2]=a[2]\u7f16\u53f7=1\n  \t\tc[B[3]\u7f16\u53f7]=c[1]=a[3]\u7f16\u53f7=2\n  \t\tc[B[4]\u7f16\u53f7]=c[4]=a[4]\u7f16\u53f7=4\n  \t\t\u4e8e\u662fc[1]=2 c[2]=1 c[3]=3 c[4]=4\n  \t\t\u9006\u5e8f\u5bf9\u6570=1\uff0c\u4ea4\u6362\u4e00\u6b21\uff0c\u7ed3\u675f\uff1b\n  \n  \u795e\u5947\u5417\uff1f\u4e0d\u795e\u5947\uff0c\u8fd9\u5c31\u662f\u6392\u5e8f\uff1b\u8bfb\u5230\u8fd9\u91cc\uff0c\u8bfb\u8005\u5e94\u8be5\u5bf9\u6392\u5e8f\u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3\uff1b\n  \n  **\u4e3a\u4ec0\u4e48\u4e0a\u8ff0\u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0**\uff1f\u56e0\u4e3a**\u4ea7\u751f\u4e86\u9006\u5e8f**\uff1b\u53ea\u8981\u5e8f\u5217\u539f\u6765\u5bf9\u5e94\u7684\u6570\u662f\u7b26\u5408\u8981\u6c42\u7684\uff0c\u4ed6\u4eec\u7f16\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u6392\u5b8c\u5e8f\u4e24\u6570\u7684**\u76f8\u5bf9\u4f4d\u7f6e**\u4e0d\u53d1\u751f\u6539\u53d8\uff0c\u56e0\u6b64**\u4e0d\u4f1a\u4ea7\u751f\u9006\u5e8f**\uff1b\u4e00\u65e6**A\u4e2d\u7f16\u53f7\u4e0eB\u4e2d\u7684\u4e0d\u540c**\uff0c\u5373\u5927\u5c0f\u987a\u5e8f\u4e0d\u540c(**\u987a\u5e8f\u7684\u6574\u7406\u5feb\u6392\u90fd\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86**)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u662f**\u4e0d\u7b26\u5408\u8981\u6c42**\u7684\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u4e0b\uff0c\u5269\u4e0b\u7684\u5728c\u6570\u7ec4\u4e2d\u7684\u6570\u90fd\u662f\u7b26\u5408\u8981\u6c42\u7684(\u4e5f\u5c31\u5c31\u662f**\u8ba1\u5165\u9006\u5e8f\u5bf9**)\u3002\u60f3\u5230\u8fd9\u91cc\uff0c\u7a0b\u5e8f\u5c31over\u4e86\uff1b\u4e0d\u4fe1\u7684\u8bfb\u8005\u53ef\u4ee5\u628a\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u6309\u6211\u4e0a\u9762\u7684\u5206\u6790\u5199\u51fa\u6765\uff0c\u81ea\u5df1\u4e5f\u53ef\u4ee5\u518d\u5199\u51e0\u7ec4\u7b80\u5355\u7684\u6837\u4f8b\uff0c**\u591a\u8fc7\u51e0\u904d\u6d41\u7a0b**\uff1b\n\n  \u4e0a\u8ff0\u64cd\u4f5c\u5b9e\u73b0\u5982\u4e0b(\u5f52\u5e76\u90e8\u5206\u7b49\u4f1a\u7ed9)\uff1a\n```cpp\n      long long n,x[10000005],p[1000005],ans=0;\n      bool cmp1(fire a,fire b)\n      {\n          return a.hi<b.hi;\n      }\n      //\u7ed3\u6784\u4f53\u5728\u4e0a\u9762\u79bb\u6563\u7684\u65f6\u5019\u5c31\u5b9a\u4e49\u4e86\uff0c\u8fd9\u91cc\u4e0d\u5199\u4e86\uff1b\n      //\u2026\u2026\u518d\u7701\u7565\u2026\u2026\n      \tsort(l1+1,l1+n+1,cmp1);\n      \tsort(l2+1,l2+n+1,cmp1);\n      \t//\u6392\u5e8f\n      \tfor(int i=1;i<=n;i++)\n           x[l2[i].bh]=l1[i].bh;\n      //\u6574\u7406\u6392\u5e8f\u7ed3\u679c\uff0c\u6211\u8bb2\u7684\u7528\u7684c\u6570\u7ec4\uff0c\u6211\u5199\u7684\u65f6\u5019\u5199\u7684\u662fx\uff0c\u6ca1\u5dee\uff1b\n```\n                         \n3. \u5f52\u5e76\u3002\u8fd9\u4e2a\u6211\u8c8c\u4f3c\u4e0d\u7528\u8bf4\u4e86\uff0c\u6bd5\u7adf\u90fd\u505a\u5230\u84dd\u9898\u4e86\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff1b\u4f46\u5728\u5f52\u5e76\u4e2d\u8981\u6c42\u9006\u5e8f\u5bf9(\u5176\u5b9e\u5192\u6ce1\u4e5f\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u592a\u6162\uff0c\u4f1a\u8d85\u65f6)\uff0c\u4e0d\u61c2\u8bf7\u89c1[P1908 \u9006\u5e8f\u5bf9](https://www.luogu.org/problemnew/show/P1908)\n  \u8fd9\u4e2a\u633a\u6709\u7528\u7684\u3002\n  \n\n\u81f3\u6b64\uff0c\u6240\u6709\u7684\u5206\u6790\u4e0e\u89e3\u5c31over\u4e86\uff0c\u4e0e\u7a0b\u5e8f\u8bf4\u518d\u89c1\n------------\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```cpp\n//\u8ba4\u771f\u770b\uff0c\u675c\u7edd\u6284\u88ad \n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int mod=99999997;\nlong long n,x[10000005],p[1000005],ans=0;\nstruct fire{\n    int hi,bh;\n}l1[1000005],l2[1000005];\nbool cmp1(fire a,fire b)\n{\n    return a.hi<b.hi;\n}\nvoid msort(int s,int t)//\u5f52\u5e76\u6392\u5e8f; \n{\n    if(s==t)return ;\n    int mid=(s+t)/2;\n    msort(s,mid);msort(mid+1,t);\n    int i=s,k=s,j=mid+1;\n    while(i<=mid && j<=t)\n    {\n        if(x[i]<=x[j])\n        {\n            p[k]=x[i];\n            ++k;++i;\n            \n        }\n        else\n        {\n            p[k]=x[j];\n            ++k;++j;\n            ans=(ans+mid-i+1)%mod;\n\t\t\t//\u6b64\u5904\u627e\u5230\u9006\u5e8f\u5bf9\uff0cmid-i~mid\u4e2d\u6570\u5168\u90fd\u4e0ej\u6784\u6210\u9006\u5e8f\uff0c\u8fd8\u4f1a\u5c11\u7b97\u4e00\u4e2a\uff0c+1;\n        }\n    }\n    while(i<=mid)\n    {\n        p[k]=x[i];\n        ++k;++i;\n    }\n    while(j<=t)\n    {\n        p[k]=x[j];\n        ++k;++j;\n    }\n    for(int i=s;i<=t;i++)\n    {\n        x[i]=p[i];\n    }\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&l1[i].hi),l1[i].bh=i;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&l2[i].hi),l2[i].bh=i;\n    sort(l1+1,l1+n+1,cmp1);\n    sort(l2+1,l2+n+1,cmp1);\n    //\u6392\u5e8f; \n    for(int i=1;i<=n;i++)\n        x[l2[i].bh]=l1[i].bh; \n    msort(1,n);\n    //\u8c03\u7528\u5f52\u5e76; \n    printf(\"%lld\",ans);\n    return 0;//\u8fd9\u4e2a\u4e0d\u4f1a\u6709\u4eba\u5fd8\u7684\u5427\uff1f \n}\n```\n\n\n------------\n\n\u8fd9\u9898\u8fd8\u662f\u57fa\u7840\u5427\uff0c\u5c31\u662f\u6bd4\u8f83\u7075\u6d3b\n------------\n  \n\n\u7136\u540e\uff0cDalao\u770b\u5b8c~~\u70b9\u4e2a\u8d5e~~\u597d\u4e0d\u597d\n------------\n\n  \n",
        "postTime": 1555606410,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "### \u63cf\u8ff0\n\n\u6709\u4e24\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a, b$\uff0c\u5b9a\u4e49\u4e24\u4e2a\u5e8f\u5217\u7684\u8ddd\u79bb\u4e3a $$\\sum_{i = 1}^{n} \\left ( a_{i} - b_{i}\\right )^{2}$$\n\n\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u7684\u6570\u53ef\u4ee5\u4ea4\u6362\uff0c\u95ee\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff0c\u53ef\u4ee5\u6700\u5c0f\u5316\u8fd9\u4e2a\u5f0f\u5b50\uff1f\n\n\u7b54\u6848\u5bf9 $99999997$ \u53d6\u6a21\u3002\n\n$1 \\leq n \\leq 10^{5}, 0 \\leq $ \u706b\u67f4\u9ad8\u5ea6 $\\leq 2^{31} - 1$\n\n\n### \u5206\u6790\n\n\u601d\u60f3\u8fd8\u662f\u6bd4\u8f83\u5999\u7684qwq\n\n\n\u6211\u4eec\u9700\u8981\u6700\u5c0f\u5316 $\\sum_{i = 1}^{n}(a_{i} - b_{i})^{2}$\uff0c\u76f8\u5f53\u4e8e\u8981\u6700\u5c0f\u5316 $(a_{i} - b_{i})$\uff0c\u4e5f\u5c31\u662f\u8bf4 $a$ \u5e8f\u5217\u7b2c $k$ \u5927\u7684\u5143\u7d20\u5fc5\u987b\u548c\u5e8f\u5217 $b$ \u4e2d\u7b2c $k$ \u5927\u7684\u5143\u7d20\uff08$k \\in [1, n]$\uff09\u7684\u4f4d\u7f6e\u5fc5\u987b\u4e00\u6837\u3002\n\n\n\u53ef\u4ee5\u8fd9\u6837\u6765\u7406\u89e3\uff1a\n\n$A$ : $1$ $998$ $2$ $87$ $3$ $3$\n\n$B$ : $1$  $6$  $2$ $5$  $3$ $4$\n\n\n\u90a3\u4e48\u6211\u4eec\u6211\u4eec\u53ef\u4ee5\u628a $a, b$ \u5148\u79bb\u6563\u5316\uff0c\u90a3\u4e48\u95ee\u9898\u5c06\u8f6c\u5316\u4e3a $b$ \u5e8f\u5217\u8981\u4ea4\u6362\u51e0\u6b21\u53ef\u4ee5\u4ee4\u5176\u7b49\u4e8e $a$\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u6ca1\u6709\u4e00\u4e2a\u5177\u4f53\u6210\u5f62\u7684\u7b97\u6cd5\u3002\n\n\n\u597d\u4e86\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u7cbe\u534e\u5728\u4e8e\u5bf9\u4e8e\u65b0\u5efa\u5e8f\u5217\uff01\n\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6709\u79bb\u6563\u5316\u540e\u7684\u5e8f\u5217 $a = \\{4, 3, 1, 2\\}$\uff0c$b = \\{1, 3, 2, 4\\}$\u3002\n\n\n\u6211\u4eec\u4ee4 $q[a[i]] = b[i]$\uff0c\u76f8\u5f53\u4e8e\u4ee5 $a[i]$ \u4e3a\u5173\u952e\u5b57\u5bf9\u5e8f\u5217 $b[i]$ \u6392\u5e8f\u3002\n\n\u82e5\u5e8f\u5217 $a$ \u4e0e\u5e8f\u5217 $b$ \u76f8\u7b49\uff0c\u90a3\u4e48\u6b64\u65f6 $q[a[i]]$ \u5e94\u8be5\u7b49\u4e8e $a[i]$ \u7684\uff0c\u4e5f\u5c31\u662f $q[i] = i$\u3002\n\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u5e8f\u5217 $a$ \u4e0e\u5e8f\u5217 $b$ \u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9 $q$ \u5347\u5e8f\u6392\u5217\u3002\n\n\n\u95ee\u9898\u5c31\u53d8\u4e3a\uff0c\u5c06\u539f\u672c\u4e71\u7684 $q$ \u5e8f\u5217\u5347\u5e8f\u6392\u5217\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002\n\n\n\u8bf6\uff0c\u8fd9\u4e0d\u5c31\u662f\u9006\u5e8f\u5bf9\u5417\uff1f\n\n\n\u4e8e\u662f\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u4e4b\u5373\u53ef\u3002\n\n\n### \u4ee3\u7801\n\n\n```cpp\n//  Created by ZJYelizaveta on Tuesday, October 17, 2017 AM09:22:55 CST\n//  Copyright (c) 2017\u5e74 ZJYelizaveta. All rights reserved.\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> T readIn() {\n    T x(0), f(1);\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    return x * f;\n}\nconst int MAX_N = 100000 + 3;\nconst int MOD = 99999997;\nconst int INF = 0x3f3f3f3f;\nint n;\nint a[MAX_N], b[MAX_N];\nint c[MAX_N], d[MAX_N];\nint q[MAX_N];\nint ans;\n\nnamespace fenwickTree {\n    int vec[MAX_N];\n\n    inline int lowbit(int x) {\n        return x & (-x);\n    }\n\n    inline void modify(int id, int x) {\n        while (id <= n) {\n            vec[id] += x;\n            id += lowbit(id);\n        }\n    }\n\n    inline int query(int id) {\n        int res = 0;\n        while (id >= 1) {\n            res += vec[id];\n            id -= lowbit(id);\n        }\n        return res;\n    }\n}\nusing namespace fenwickTree;\n\n// 60%\n/*\ninline void solve() {\n    ans = 0;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = i + 1; j <= n; ++j) if (i < j && q[i] > q[j]) {\n            swap(q[i], q[j]);\n            ++ans;\n        }\n    }\n    printf(\"%d\\n\", (ans % MOD + MOD) % MOD);\n}\n*/\n\n\n// 100%\ninline void solve() {\n    ans = 0;\n    for (int i = n; i >= 1; --i) {\n//        printf(\"%d %d\\n\", q[i], query(q[i] - 1));\n        ans += query(q[i] - 1);\n        modify(q[i], 1);\n        if (ans >= MOD) ans -= MOD;\n    }\n\n    printf(\"%d\\n\", (ans % MOD + MOD) % MOD);\n}\n\n\ninline bool cmp1(int i, int j) {\n    return a[i] < a[j];\n}\n\ninline bool cmp2(int i, int j) {\n    return b[i] < b[j];\n}\n\nint main()\n{\n    n = readIn<int>();\n    for (int i = 1; i <= n; ++i) a[i] = readIn<int>(), c[i] = i;\n    for (int i = 1; i <= n; ++i) b[i] = readIn<int>(), d[i] = i;\n\n    sort(c + 1, c + n + 1, cmp1); sort(d + 1, d + n + 1, cmp2);\n\n//    for (int i = 1; i <= n; ++i) printf(\"%d \", c[i]); printf(\"\\n\");\n//    for (int i = 1; i <= n; ++i) printf(\"%d \", d[i]); printf(\"\\n\");\n    \n    memset(q, 0, sizeof q);\n    for (int i = 1; i <= n; ++i) q[c[i]] = d[i];\n//    for (int i = 1; i <= n; ++i) printf(\"%d \", q[i]); printf(\"\\n\");\n\n    solve();\n    return 0;\n}\n```",
        "postTime": 1508298992,
        "uid": 47577,
        "name": "ZJYelizaveta",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u9898\u76ee\u7684\u610f\u601d\uff1amin{\u2211\uff08ai-bi\uff09^2 (1<=i<=n)}\n\n\u5c55\u5f00\uff1amin{\u2211\uff08ai^2+bi^2-2\\*ai\\*bi\uff09}=min{\u2211ai^2+\u2211bi^2-\u22112\\*ai\\*bi}\n\n\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u2211ai^2\u548c\u2211bi^2\u7684\u503c\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u5728\u22112\\*ai\\*bi\u4e0a\u505a\u6587\u7ae0\u3002\n\n\u4e3a\u4f7f\u5f97\u548c\u6700\u5c0f\uff0c\u90a3\u4e48\u22112\\*ai\\*bi\u8981\u6700\u5927\uff0c\u672c\u9898\u7684\u6a21\u578b\u5c31\u8f6c\u53d8\u4e3amax{\u2211ai\\*bi}\u3002(2\u4e3a\u5e38\u6570\uff0c\u53ef\u7701\u7565)\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n\\_\u6570\u5b66\u5206\u6790\u6682\u65f6\u544a\u4e00\u6bb5\u843d\uff0c\u4e0b\u9762\u8bb2\u4e00\u8bb2\u6211\u5bf9\u672c\u9898\u7684\u4e00\u53e5\u8bdd\u7684\u7279\u6b8a\u770b\u6cd5\\_\n\n#c[b[i].loc]=a[i].loc\n\n\u8fd9\u53e5\u8bdd\u5f88\u91cd\u8981\uff0c\u4f46\u662f\u697c\u4e0b\u8bf4\u7684\u90fd\u4e0d\u592a\u51c6\u786e\u3002\n\n\u8fd9\u5e76\u4e0d\u662f\u6620\u5c04\uff0c\u5176\u5b9e\u8fd9\u91cc\u5229\u7528\u4e86\u4e0b\u6807\u7684\u5355\u8c03\u5347\u5e8f\u3002\n\n\u53ef\u4ee5\u53d1\u73b0c\u6570\u7ec4\u4e0b\u6807\u90fd\u662f1~n\uff0cb\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u7684\u987a\u5e8f\u4e5f\u90fd\u662f1~n\u7684\u6b63\u6574\u6570\uff0ca\u6570\u7ec4\u540c\u6837\u5982\u6b64\u3002\n\n\u90a3\u4e48\u5bf9c\u6570\u7ec4\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0c\u6570\u7ec4\u4e2d\u7684\u503c\u5c31\u662f\uff1ac[1]=1,c[2]=2......c[n]=n\u5bf9\u5427\uff1f\n\n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9c\u6570\u7ec4\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u5c31\u662f\u4e3a\u4e86\u8ba9**c[i]=i**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ba9b\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u548ca\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u8bc1\u660e\u4e3a\u4ec0\u4e48**\u8ba9b\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u548ca\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e**\u5c31\u4e00\u5b9a\u6700\u4f18?\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n\\_\u63a5\u7740\u4e0a\u9762\u7684\u6570\u5b66\u8bc1\u660e\\_\n\na<b c<d\n\n\u6839\u636e\u4ee5\u4e0a\u731c\u6d4b\uff0c\u5219ac+bd\u4e00\u5b9a\u662f\u6700\u5927\u7684\u3002\u5229\u7528\u53cd\u8bc1\u6cd5\u3002\n\n\u82e5ac+bd\u4e0d\u662f\u6700\u5927\u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u6bd4\u5b83\u66f4\u5927\u7684\uff0c\u53ea\u6709ad+bc\n\nac+bd<ad+bc\n\nac-ad<bc-bd\n\na\\*(c-d)<b\\*(c-d)//c-d<0\n\n**a>b**\uff08\uff1f\uff1f\uff1f\uff09\n\n\u5f97\u51fa\u77db\u76fe\u3002\u6240\u4ee5\u4ece\u6700\u7b80\u5355\u7684\u60c5\u51b5\u63a8\u51fa\\_b\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u548ca\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\\_\u5c31\u662f\u6700\u4f18\u7684\u3002\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\nconst int mod=99999997;\nint n,c[N],d[N],ans;\nstruct node\n{\n    int x,loc;\n}a[N],b[N];\nbool cmp(node p,node q)\n{\n    return p.x<q.x;\n}\nvoid ALICE(int l,int r)\n{\n    if(l>=r)\n        return ;\n    int m=(l+r)>>1;\n    ALICE(l,m);ALICE(m+1,r);\n    int i,j,k;\n    for(i=l,j=m+1,k=l;i<=m&&j<=r;)\n        if(c[i]>c[j])//\u8fd9\u91cc\u6211\u5176\u5b9e\u662f\u964d\u5e8f\u6392\u7684\uff0c\u4e3a\u4ec0\u4e48\u5347\u5e8f\u6392\u7684\u4e0d\u5bf9\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\u3002\u53cd\u6b63\u6211\u5347\u5e8f\u6392\u7684\u65f6\u5019\u6837\u4f8b\u90fd\u6ca1\u8fc7\uff0c\u5475\u5475\u3002\u5982\u679c\u54ea\u4f4d\u5927\u795e\u7528\u5347\u5e8f\u6392\u7684\u8fc7\u4e86\uff0c\u9ebb\u70e6\u79c1\u4fe1\u6211\uff0c\u5e76\u544a\u8bc9\u6211\u662f\u600e\u4e48\u505a\u7684\uff0c\u5b66\u5b66\uff01\uff01\uff01\n            ans=(ans+r-j+1)%mod,d[k]=c[i],i++,k++;\n        else\n            d[k]=c[j],k++,j++;\n    for(;i<=m;i++,k++)\n        d[k]=c[i];\n    for(;j<=r;j++,k++)\n        d[k]=c[j];\n    for(i=l;i<=r;i++)\n        c[i]=d[i];\n}\nint main()\n{\n    int i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&a[i].x),a[i].loc=i;//\u8bb0\u5f55\u539f\u59cb\u4f4d\u7f6e\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&b[i].x),b[i].loc=i;//\u540c\u4e0a\n    sort(a+1,a+1+n,cmp);//\u6309\u9ad8\u5ea6\u8fdb\u884c\u6392\u5e8f\n    sort(b+1,b+1+n,cmp);//\u540c\u4e0a\n    for(i=1;i<=n;i++)\n        c[b[i].loc]=a[i].loc;\n    ALICE(1,n);//\u4ece1\u5230n\u7684\u5f52\u5e76\u6392\u5e8f\uff0c\u5f52\u5e76\u6392\u5e8f\u6211\u5c31\u4e0d\u5570\u55e6\u4e86\uff0c\u697c\u4e0b\u8bb2\u5f97\u592a\u591a\u4e86\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1505045812,
        "uid": 18993,
        "name": "\u4ee5\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u849f\u84bb\u89c2\u6469\u4e86\u4e00\u4e0b\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u5927\u4f6c\uff0c\u4e8e\u662f\u51b3\u5b9a\u5199\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u9898\u89e3\u3002\n\n\n\u9996\u5148\uff0c\u9898\u76ee\u610f\u601d\u5176\u5b9e\u5f88\u5bb9\u6613\u5206\u6790\uff0c\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u6570\u76ee\uff0c\u56e0\u4e3a\u4e00\u5b9a\u662f\u6700\u5927\u5bf9\u6700\u5927\u5dee\u503c\u624d\u4f1a\u6700\u5c0f\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u7b2c\u4e00\u6392\u7684\u6700\u5c0f\u5bf9\u5e94\u7b2c\u4e8c\u6392\u7684\u6700\u5c0f\uff0c\u7b2c\u4e00\u6392\u7684\u6b21\u5c0f\u5bf9\u7b2c\u4e8c\u6392\u7684\u6b21\u5c0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u6c42\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\n\n\n\u6c42\u9006\u5e8f\u5bf9\u6709\u591a\u79cd\u65b9\u6cd5\uff1a\n\n\n\n\n\n1.**\u66b4\u529b\u679a\u4e3e**\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2)\n\n2.**\u5f52\u5e76\u6392\u5e8f**\uff0c\u5f52\u5e76\u6392\u5e8f\u91c7\u7528\u7684\u662f\u4e8c\u5206\u7684\u5199\u6cd5\uff0c\u5e76\u4e14\u5f53\u627e\u5230\u5728\u5c0f\u7684\u6570\u5c31\u628a\u5b83\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u91cc\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u8fc7\u4ea4\u6362\u9006\u5e8f\u6570\u5bf9\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u6837\u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nlogn)\n\n3.**\u6811\u72b6\u6570\u7ec4**\uff0c\u6811\u72b6\u6570\u7ec4\u662f\u7528\u6765\u6c42\u548c\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u8fd9\u4e2a\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u5230**\u8fd9\u4e2a\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u524d\u9762\u6bd4\u5b83\u6253\u7684\u6570\u7684\u4e2a\u6570**\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u90e8\u5206\u9006\u5e8f\u5bf9\u6570\u76ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662fO(nlogn)\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff1a\n\n**\u5f52\u5e76\u6392\u5e8f**\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef struct n{\n    int num,ord;\n}node;\nnode first_team[100010],second_team[100010];\nint a[100010],b[100010],ans;\nint compare(node x,node y)\n{\n    return x.num<y.num;\n}\nvoid Merge(int l,int r)\n{\n    if(l>=r) return ;\n    int mid=(l+r)/2;\n    Merge(l,mid);\n    Merge(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while(i<=mid&&j<=r)\n    {\n        if(a[i]>a[j])\n        {\n            b[k++]=a[j++];\n            ans+=mid-i+1;\n            ans%=99999997;\n        }\n        else b[k++]=a[i++];\n    }\n    while(i<=mid) b[k++]=a[i++];\n    while(j<=r) b[k++]=a[j++];\n    for(int i=l;i<=r;i++)\n        a[i]=b[i];\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&first_team[i].num);\n        first_team[i].ord=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&second_team[i].num);\n        second_team[i].ord=i;\n    }\n    sort(first_team+1,first_team+n+1,compare);\n    sort(second_team+1,second_team+n+1,compare);\n    for(int i=1;i<=n;i++)\n        a[first_team[i].ord]=second_team[i].ord;\n    Merge(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u6811\u72b6\u6570\u7ec4\u7248\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn = 100010;\nconst int maxm = 99999997;\nstruct MyStruct\n{\n    int data;\n    int loc;\n}a[maxn],b[maxn];\nint e[maxn], n, c[maxn];\nint inline readint()\n{\n    int x = 0;\n    char c = getchar();\n    while (c<'0' || c>'9') c = getchar();\n    while (c >= '0'&&c <= '9')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x;\n}\nint lowbit(int x)\n{\n    return x&-x;//\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0 \n}\nvoid add(int x,int t)\n{\n    while (x <= n)\n    {\n        e[x] += t;\n        e[x] %= maxm;\n        x += lowbit(x);//\u6bcf\u6b21\u5f80\u540e\u52a0\uff0c\u53ef\u4ee5\u6539\u53d8\u540e\u9762\u5bf9\u5e94\u7684\u548c \n    }\n}\nint sum(int x)\n{\n    int s = 0;\n    while(x)\n    {\n        s += e[x];\n        s %= maxm;\n        x -= lowbit(x);//\u5f97\u5230\u6240\u6c42\u7684\u548c \n    }\n    return s;\n}\nbool cmp(MyStruct x, MyStruct y)\n{\n    return x.data < y.data;\n}\nint main()\n{\n    n = readint();\n    for (int i = 1; i <= n; i++)\n    {\n        a[i].data = readint();\n        a[i].loc = i;//\u8bb0\u5f55\u4f4d\u7f6e \n    }\n    for (int i = 1; i <= n; i++)\n    {\n        b[i].data = readint();\n        b[i].loc = i;\n    }\n    sort(a + 1, a + n + 1, cmp);\n    sort(b + 1, b + n + 1, cmp);\n    for (int i = 1; i <= n; i++)\n    {\n        c[a[i].loc] = b[i].loc;//\u79bb\u6563\u4f18\u5316 \n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        add(c[i], 1);//\u79bb\u6563\u4f18\u5316\u540e\u5927\u5c0f\u5c31\u662f\u6b63\u786e\u987a\u5e8f\u7684\u4f4d\u7f6e \n        ans += i - sum(c[i]);//\u5f53\u524d\u4f4d\u7f6e\uff0c\u51cf\u53bb\u4e4b\u524d\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570  \n        ans %= maxm;\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1503821419,
        "uid": 29004,
        "name": "funny",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u524d\u8a00\uff1a\n- \u5927\u90e8\u5206\u9898\u89e3\u6ca1\u6709\u63d0\u53ca\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u8bc1\u660e\uff0c\u5728\u8fd9\u7bc7\u9898\u89e3\u91cc\uff0c\u54b8\u9c7c$Derrick787$\u5c31\u6765\u8865\u5145\u4e00\u4e0b\u8fd9\u4e00\u70b9\u3002\n- \u6709\u4e00\u4e9b\u5185\u5bb9\u4f5c\u8005~~\u56e0\u4e3a\u592a\u83dc\u61d2\u5f97\u5199\u4e86~~\uff0c\u90e8\u5206\u501f\u9274~~\u642c\u8fd0~~\u4e86[\u8fd9\u4f4d\u5927\u4f6c](https://www.luogu.org/space/show?uid=47577)\u7684[\u9898\u89e3](https://www.luogu.org/blog/user47577/solution-p1966)\uff0c\u5728\u8fd9\u91cc\u5148\u81f4\u4ee5~~\u70ed\u60c5\u7684\u95ee\u5019\u548c\u8bda\u631a\u7684\u611f\u8c22~~\u3002\n- \u8fd9\u9898\u89e3\u91cc\u7684$LateX$\u6253\u5f97\u53ef\u771f\u7d2f\u554a\u3002\u3002\u3002~~\u6c42\u901a\u8fc7\u6c42\u597d\u8bc4\uff0c\u624b\u52a8\u72d7\u5934~~\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u6392\u5e8f\u4e0d\u7b49\u5f0f\n\n\u5bf9\u4e8e\u5b9e\u6570$a_1,a_2,...,a_{n-1},a_n$\u548c$b_1,b_2,...,b_{n-1},b_n$\uff0c\u6ee1\u8db3$a_1\\leq a_2\\leq ...\\leq a_{n-1}\\leq a_n$\u4e14$b_1\\leq b_2\\leq ...\\leq b_{n-1}\\leq b_n$.    \n\u5e76\u4e14\u6709\u5982\u4e0b\u4e09\u4e2a\u5f0f\u5b50\uff1a   \n$A=a_1b_1+a_2b_2+...+a_nb_n$    \n$B=a_1b_{i1}+a_2b_{i2}+...+a_nb_{in}$   \n$C=a_1b_n+a_2b_{n-1}+...+a_nb_1$     \n\u5176\u4e2d$(i_1,i_2,...,i_{n-1},i_n)=(1,2,...,n-1,n)$\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a$A\\geq B\\geq C.$\n\n$\\because a_1\\leq a_2\\leq ...\\leq a_{n-1}\\leq a_n$\u4e14$b_1\\leq b_2\\leq ...\\leq b_{n-1}\\leq b_n$   \n$\\therefore$\u6211\u4eec\u6709\u4ee5\u4e0b\u7684\u5b9a\u4e49\uff1a   \n$A=a_1b_1+a_2b_2+...+a_nb_n$    \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u540c\u5e8f\u548c\uff1b \n$B=a_1b_{i1}+a_2b_{i2}+...+a_nb_{in}$   \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4e71\u5e8f\u548c\uff1b   \n$C=a_1b_n+a_2b_{n-1}+...+a_nb_1$     \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9006\u5e8f\u548c .    \n\u8fd9\u4e9b\u5b9a\u4e49\u4e0e\u5b83\u4eec\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u6392\u5e8f\u987a\u5e8f\u6709\u5173\u3002  \n\n\u5f15\u5165\u4e86\u8fd9\u4e9b\u5b9a\u4e49\u4e4b\u540e\uff0c\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u7ed3\u8bba\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a   \n**\u540c\u5e8f\u548c$\\geq$\u4e71\u5e8f\u548c$\\geq$\u9006\u5e8f\u548c**\n\n\u90a3\u4e48\u8fd9\u4e2a\u7ed3\u8bba\u7684\u4f5c\u7528\u548c\u91cd\u8981\u6027\u663e\u7136\u662f\u4e0d\u8a00\u800c\u55bb\u7684\uff0c\u4f46\u662f\u5b83\u600e\u4e48\u8bc1\u660e\u5462\uff1f\u5c3d\u7ba1\u5728$OI$\u4e2d\uff0c\u50cf\u8fd9\u6837\u7684\u6570\u5b66\u7ed3\u8bba\u53ef\u4ee5\u4e0d\u7528\u77e5\u9053\u8bc1\u660e\u7684\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981\u77e5\u9053\u7ed3\u8bba\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u505a\u9898\u3002\u4f46\u662f\u8fd9\u91cc\uff0c\u6211\u4eec\u8fd8\u662f\u7a0d\u5fae\u4e86\u89e3\u4e00\u4e0b\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u8bc1\u660e\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u5c1d\u8bd5\u7528\u8c03\u6574\u6cd5\u6765\u8bc1\u660e\u6392\u5e8f\u4e0d\u7b49\u5f0f\u3002\n\n- \u6211\u4eec\u8003\u5bdf\u4e00\u4e2a\u4ee3\u6570\u5f0f\uff1a$a_1b_{i1}+a_2b_{i2}+...+a_nb_{in}$\uff0c\u6211\u4eec\u89c2\u5bdf\u8fd9\u4e2a\u5f0f\u5b50\u4f55\u65f6\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\u3002   \n- \u4e0d\u59a8\u8bbe$i_n\\ne n$,(\u82e5$i_n=n$,\u5c31\u8003\u8651$i_{n-1}$)\u7b2c$m$\u9879$a_mb_{im}$\u6ee1\u8db3$i_m=n$.   \n- \u90a3\u4e48\u5728\u4e71\u5e8f\u548c$B$\u4e2d\uff0c\u8c03\u6574\u7b2c$n$\u9879\u548c\u7b2c$m$\u9879\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5f97\u5230$a_nb_n+a_mb_{in}\\geq a_nb_{in}+a_mb_{im}$,\u6545\u65b0\u7684\u8fd9\u4e2a\u548c\u5f0f$S_1\\geq S$.   \n- \u540c\u7406\uff0c\u8c03\u6574\u7b2c$n-1$\u9879\uff0c\u5f97\u5230\u65b0\u7684\u548c\u5f0f$S_2\\geq S_1 \\geq S$,\u6700\u591a\u7ecf\u8fc7$n-1$\u6b21\u8c03\u6574\u53ef\u5f97\uff1a    \n- $a_1b_1+a_2b_2+...+a_nb_n\\geq a_1b_{i1}+a_2b_{i2}+...+a_nb_{in}$      \n- \u5f53\u4e14\u4ec5\u5f53$a_1=a_2=...=a_n,b_1=b_2=...=b_n$\u65f6\u53d6\u7b49\u3002\n- \u90a3\u4e48\u6211\u4eec\u6210\u529f\u8bc1\u660e\u4e86$A\\geq B$,$B\\geq C$\u663e\u7136\u4e5f\u540c\u7406\u53ef\u8bc1\u3002\n\n\u56e0\u6b64\uff0c\u6392\u5e8f\u4e0d\u7b49\u5f0f\u5f97\u8bc1\u3002\n\n\u5173\u4e8e\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u66f4\u591a\u8bc1\u660e\u65b9\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u67e5\u9605[\u8fd9\u7bc7\u535a\u5ba2](https://blog.csdn.net/Balbooa/article/details/79474829)\u3002\u53ef\u80fd\u4f1a\u5bf9\u60a8\u6709\u6240\u5e2e\u52a9\u3002\n\n-------\n\n\u4e86\u89e3\u5b8c\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u7ee7\u7eed\u6765\u770b\u8fd9\u9053\u9898\u3002\n\n\u9898\u610f\uff1a\u6709\u4e24\u4e2a\u957f\u4e3a$n$\u7684\u5e8f\u5217$a,b$\uff0c\u5b9a\u4e49\u4e24\u4e2a\u5e8f\u5217\u7684\u8ddd\u79bb\u4e3a$\\sum_{i=1}^{n} (a_i-b_i)^2$\uff0c\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4f4d\u7f6e\u7684\u6570\u53ef\u4ee5\u4ea4\u6362\uff0c\u95ee\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff0c\u53ef\u4ee5\u6700\u5c0f\u5316\u8fd9\u4e2a\u5f0f\u5b50\u3002\n\n\u6211\u4eec\u4ece\u8fd9\u4e2a\u8868\u793a\u4e24\u4e2a\u5e8f\u5217\u4e4b\u95f4\u8ddd\u79bb\u7684\u5f0f\u5b50\u5165\u624b\uff1a   \n$$\\sum_{i=1}^{n} (a_i-b_i)^2$$   \n$$=\\sum_{i=1}^{n} (a_i^2-2a_ib_i+b_i^2)$$     \n$$=\\sum_{i=1}^{n} (a_i^2+b_i^2)-\\sum_{i=1}^{n} (2a_ib_i)$$ \n\u7531\u4e8e\u65e0\u8bba\u5982\u4f55\u8c03\u6574\u987a\u5e8f\uff0c$\\sum_{i=1}^{n} (a_i^2+b_i^2)$\u7684\u503c\u90fd\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u8fd9\u9898\u7684\u5173\u952e\u70b9\u5c31\u5728$\\sum_{i=1}^{n} (2a_ib_i)$\u4e0a\u3002\n\u4e3a\u4e86\u6700\u5c0f\u5316$\\sum_{i=1}^{n} (a_i-b_i)^2$\uff0c\u5c31\u5fc5\u987b\u6700\u5927\u5316$\\sum_{i=1}^{n} (2a_ib_i)$\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u5316$\\sum_{i=1}^{n} (a_ib_i)$\u7684\u503c\u3002\n\n\u5982\u4f55\u6700\u5927\u5316$\\sum_{i=1}^{n} (a_ib_i)$\u7684\u503c\uff1f\u8054\u60f3\u5230\u6211\u4eec\u521a\u521a\u8bc1\u660e\u7684\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u540c\u5e8f\u548c$\\geq $\u4e71\u5e8f\u548c$\\geq $\u9006\u5e8f\u548c\uff0c\u540c\u5e8f\u548c\u662f\u6700\u5927\u7684\u3002\u6211\u4eec\u5c31\u8981\u60f3\u529e\u6cd5\u8ba9$\\sum_{i=1}^{n} (a_ib_i)$\u6210\u4e3a\u4e00\u4e2a\u201c\u540c\u5e8f\u548c\u201d\u3002\n\n\u90a3\u4e48\u5982\u4f55\u505a\u5230\u540c\u5e8f\u5462\uff1f\u663e\u7136\u5c31\u662f\u8981\u8ba9$a$\u5e8f\u5217\u7b2c$k$\u5927\u7684\u5143\u7d20\u5fc5\u987b\u548c\u5e8f\u5217$b$\u4e2d\u7b2c$k$\u5927\u7684\u5143\u7d20($k\\in [1, n]$)\u7684\u4f4d\u7f6e\u5fc5\u987b\u4e00\u6837\uff0c\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u76ee\u7684\u706b\u67f4\u9ad8\u5ea6 $\\leq 2^{31}-1$ \uff0c\u5982\u679c\u76f4\u63a5\u5904\u7406\u6392\u5e8f\uff0c\u4f1a\u9020\u6210$long long$\u6ea2\u51fa\uff0c\u600e\u4e48\u529e\uff1f\u8003\u8651\u5230$n\\leq 10^5$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u706b\u67f4\u9ad8\u5ea6\u79bb\u6563\u5316\uff01\n\n\u6bd4\u5982\u8fd9\u7ec4\u6570\u636e\uff1a   \nA: 1 3 4 2  \nB: 111 999 333 555   \n\u7ecf\u8fc7\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u8fd9\u7ec4\u6570\u5c31\u53d8\u6210\u4e86\uff1a   \nA: 1 3 4 2    \nB: 1 4 2 3\n\n\u90a3\u4e48\u95ee\u9898\u5c06\u8f6c\u5316\u4e3a$b$\u5e8f\u5217\u8981\u4ea4\u6362\u51e0\u6b21\u53ef\u4ee5\u4ee4\u5176\u7b49\u4e8e$a$\u5e8f\u5217\u3002\n\n\u5047\u8bbe\u6211\u4eec\u79bb\u6563\u5316\u4e4b\u540e\u5f97\u5230\u4e86\u8fd9\u6837\u4e24\u4e2a\u5e8f\u5217\uff1a    \n$A:(1,3,4,2)$\u548c$B:(1,4,2,3)$\u3002   \n\u6211\u4eec\u4ee5$a[i]$\u4e3a\u5173\u952e\u5b57\u5bf9$b[i]$\u6392\u5e8f\uff0c\u4ee4$x[a[i]]=b[i]$\uff0c\u5728$a$\u548c$b$\u4e2d\u6784\u9020\u4e00\u79cd\u6620\u5c04\u5173\u7cfb\u3002   \n\u82e5\u5e8f\u5217$a$\u4e0e\u5e8f\u5217$b$\u76f8\u7b49\uff0c\u90a3\u4e48\u6b64\u65f6$x[a[i]]$\u5e94\u8be5\u7b49\u4e8e$a[i]$\u7684\uff0c\u4e5f\u5c31\u662f$x[i]=i$\u3002   \n\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u5e8f\u5217$a$\u4e0e\u5e8f\u5217$b$\u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8ba9 $x$\u5347\u5e8f\u6392\u5217\u3002    \n\u95ee\u9898\u5c31\u53d8\u4e3a\uff0c\u5c06\u539f\u672c\u4e71\u7684$X$\u5e8f\u5217\u5347\u5e8f\u6392\u5217\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002    \n\n\u5c06\u4e00\u4e2a\u4e71\u5e8f\u5e8f\u5217\u5347\u5e8f\u6392\u5217\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u600e\u4e48\u6c42\u5462\uff1f\u6211\u4eec\u7ee7\u7eed\u521a\u624d\u7684\u4f8b\u5b50\u3002\n\n\u6211\u4eec\u4f1a\u5f97\u5230\uff1a$x[1]=1,x[3]=4,x[4]=2,x[2]=3$\uff0c$x$\u5e8f\u5217\u5c31\u662f\u8fd9\u6837\u7684\uff1a$(1,4,2,3)$\u3002\u90a3\u4e48\u5c06\u5b83\u5347\u5e8f\u6392\u5217\u8981\u600e\u4e48\u529e\u529e\u5462\uff1f\u6211\u4eec\u770b\u770b\u54ea\u91cc\u662f\u201c\u4e71\u201d\u7684\uff0c\u6211\u4eec\u5c31\u8c03\u6574\u54ea\u91cc\u3002\u663e\u7136\uff0c$(4,2)$\u548c$(4,3)$\u662f\u201c\u4e71\u201d\u7684\uff0c\u6211\u4eec\u8c03\u6574\u8fd9\u4e24\u5904\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u7ef4\u62a4\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u201c\u8ddd\u79bb\u201d\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u6700\u5c11\u53ea\u9700\u8981\u8c03\u6574$2$\u6b21\u5373\u53ef\u3002\n\n\u90a3\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u8c03\u6574\u7684\u8fd9\u4e24\u5904\u7b26\u5408\u4ec0\u4e48\u6761\u4ef6\uff1f\u8bf6\uff0c\u6240\u8c13\u201c\u4e71\u201d\uff0c\u5728\u8fd9\u91cc\u5c31\u662f\u4e00\u7ec4\u9006\u5e8f\u5bf9\u3002\u6709\u51e0\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6211\u4eec\u5c31\u8981\u8c03\u6574\u51e0\u6b21\u3002\n\n\u90a3\u4e48\u8fd9\u9898\u53ef\u4ee5\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u5728$X$\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5c31\u662f\u672c\u9898\u7684\u7b54\u6848**\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u7684\u4ee3\u7801\u5c31\u4e0d\u96be\u5199\u51fa\u4e86\u3002\n\n---\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>//P1966 \u706b\u67f4\u6392\u961f\nusing namespace std;\n#define re register\n#define ll long long\n#define il inline\n#define dou double\n#define un unsigned\nil ll read()\n{\n\tchar c=getchar();int x=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\n#define N 100000+10\n#define M 99999997\nint n,ans;\nstruct number\n{\n\tll val,num;\n};\nnumber a[N],b[N];\nll bit[N],x[N];\nil bool cmp(number x,number y)\n{\n\tif(x.val==y.val)\n\t\treturn x.num<y.num;\n\treturn x.val<y.val;\n}\nil ll lowbit(int x)\n{\n\treturn x&(-x);\n}\nil void change(int x,int d)\n{\n\tfor(re int i=x;i<=n;i+=lowbit(i))\n\t{\n\t\tbit[i]+=d;\n\t\tbit[i]%=M;\n\t}\t\n}\nil ll query(int x)\n{\n\tif(x==0)\n\t\treturn 0;\n\tll ret=0;\n\tfor(re int i=x;i>=1;i-=lowbit(i))\n\t{\n\t\tret+=bit[i];\n\t\tret%=M;\n\t}\t\n\treturn ret;\n}\nint main()\n{\n\tn=read();\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\ta[i].val=read();\n\t\ta[i].num=i;\n\t}\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tb[i].val=read();\n\t\tb[i].num=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp);\n\tfor(re int i=1;i<=n;i++)\n\t\tx[a[i].num]=b[i].num;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tchange(x[i],1);\n\t\tans+=i-query(x[i]);\n\t\tans%=M;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1562683154,
        "uid": 107355,
        "name": "deleted",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1966)\n\n\u753b\u4e00\u753b\u56fe\u5c31\u77e5\u9053\uff0c\u5fc5\u987b\u8ba9\u7b2c\u4e00\u5217\u4e2d\u7b2c$i$\u9ad8\u7684\u706b\u67f4\u4e0e\u7b2c\u4e8c\u5217\u4e2d\u7b2c$i$\u9ad8\u7684\u706b\u67f4\u603c\u9f50\u3002\uff08\u6211\u559c\u6b22\u628a\u7b2c$i$\u9ad8\u53eb\u505a\u7b49\u7ea7\u4e3a$i$\u4e86qwq\uff09\n\n\uff08\u672c\u6765\u8fd8\u60f3\u8fc7\u5148\u8ba9\u9ad8\u5ea6\u76f8\u540c\u7684\u603c\u5230\u4e00\u8d77\uff0c\u4f46\u662f\u8fd9\u662f\u4e0d\u4f18\u7684\u3002\n\n$e.g.$\u7b2c\u4e00\u5217\u4e3a$1$ , $7$ , $9$,\u7b2c\u4e8c\u5217\u4e3a$4$ , $2$ , $7$\u3002\n\n\u4f18\u5148\u8ba9\u9ad8\u5ea6\u76f8\u540c\u5728\u4e00\u8d77\u65f6\u914d\u5bf9\u662f$1$\u2014$2$\uff0c$7$\u2014$7$\uff0c$9$\u2014$4$\uff0c\u8ddd\u79bb\u4e3a$26$\uff0c\u5148\u8ba9\u7b49\u7ea7\u4e00\u6837\u7684\u603c\u9f50\u65f6\u914d\u5bf9\u4e3a$1$\u2014$2$\uff0c$7$\u2014$4$\uff0c$9$\u2014$7$\uff0c\u8ddd\u79bb\u4e3a$14$\u3002\u663e\u7136\u7b2c\u4e8c\u79cd\u7b54\u6848\u66f4\u597d\uff09\n\n\u6240\u4ee5\uff0c\u6211\u5c31\u60f3\u79bb\u6563\u5316\u51fa\u5404\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u7684\u9ad8\u5ea6\u7b49\u7ea7\uff0c\u653e\u5728$idx[i]$\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$idx[i]$\u5b58\u50a8\u7684\u662f\u7b2c$i$\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u662f\u7b2c\u51e0\u5927\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/61005.png)\n\n\u7136\u540e\uff0c\u6211\u5c31\u83ab\u5f97\u529e\u6cd5\u4e86\u3002\u5982\u679c\u662f\u628a\u4e00\u4e2a\u6570\u5217\u6392\u597d\u5e8f\uff0c\u6211\u662f\u77e5\u9053\u7684\u2014\u2014\u53ea\u8981\u7b97\u9006\u5e8f\u5bf9\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\u867d\u7136\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u6211\u4e0d\u4f1a\uff0c\u6211\u8fd8\u662f\u4f1a\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u95ee\u7684\u662f\uff0c\u7528\u591a\u5c11\u6b21\u76f8\u90bb\u4ea4\u6362\u80fd\u628a\u4e00\u4e2a\u4e71\u5e8f\u6570\u5217\u53d8\u6210\u53e6\u4e00\u4e2a\u4e71\u5e8f\u6570\u5217\uff0c\u8fd9\u600e\u4e48\u529e\u554a\uff1f\uff1f\uff1f~~wsl~~\n\n\u6240\u4ee5\uff0c\u82b1\u4e86\u6574\u6574\u4e00\u4e0b\u5348\u6765\u60f3(\u6211\u771f\u7684\u5f88\u83dc)......~~\u770b\u4e86\u597d\u591a\u9898\u89e3\u597d\u591a\u535a\u5ba2qwq\uff0c\u5b66\u4e86\u8fd9\u4e48\u4e45\uff0c\u6211\u8fd8\u662f\u8ba4\u4e3a\u79bb\u6563\u5316\u662f\u6700\u96be\u7406\u89e3\u7684\u4e1c\u897f~~\n\n\u5728\u6700\u6b63\u5e38\u7684\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u4e2d\uff0c\u5047\u8bbe\u6709\u6570\u5217$A$\uff0c$A[i]$\u6700\u521d\u8bfb\u5165\u7684\u6570\u5b57\u662f$num[i]$\u3002\u6c42\u9006\u5e8f\u5bf9\u5c31\u662f\u628a$A[i]$\u4e0e\u6807\u51c6\u6570\u5217$q[i]$\uff08\u6392\u5e8f\u540e\u7684\u6570\u5217\uff09\u6bd4\u5bf9\uff0c\u76ee\u6807\u5c31\u662f\u8ba9$A[i]$\u91cc\u7684\u6570\u5b57\u548c\u4e0b\u6807\uff08\u76ee\u6807\u4f4d\u7f6e\uff09\u5bf9\u5e94\u8d77\u6765\uff0c\u5373\u8ba9$A[i]$\u91cc\u50a8\u5b58\u7684\u662f\u7b2c$i$\u5c0f\u7684\u6570\u5b57\u3002\uff08\u6211\u8bf4\u7684\u597d\u98a0\u4e09\u5012\u56db\u6ca1\u6709\u903b\u8f91\u554aqwq\uff09\n\n\u611f\u6027\u63a8\u5e7f\u4e00\u4e0b\u3002\u5728\u672c\u9898\u4e2d\uff0c\u628a\u7b2c\u4e00\u5217\u7684\u9ad8\u5ea6\u7b49\u7ea7$idx[i]$\u770b\u505a\u6807\u51c6\u6570\u5217\uff0c\u6b63\u5e38\u9006\u5e8f\u5bf9\u4e2d\u7684$q[i]$\u5bf9\u5e94$q[idx[i]]$\uff0c\u6b63\u5e38\u9006\u5e8f\u5bf9\u4e2d\u7684$num[i]$\u5bf9\u5e94$idx2[i]$\uff0c\n\u8fd9\u5c31\u628a\u7b2c\u4e00\u5217\u7684\u9ad8\u5ea6\u7b49\u7ea7\u53d8\u6210\u4e86\u4e0b\u6807\uff08\u76ee\u6807\u4f4d\u7f6e\uff09\uff0c\u7b2c\u4e8c\u5217\u7684\u9ad8\u5ea6\u7b49\u7ea7\u53d8\u6210\u4e86\u6570\u5b57\u3002\u628a$q[idx[i]]$\u6309$idx[i]$\u4ece$1$\u2014$n$\u6392\u5e8f\u597d\uff0c\u4e0d\u5c31\u5b8c\u5168\u53d8\u6210\u4e86\u6b63\u5e38\u7684\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u4e86\u561b\uff01\n\n\u56de\u5934\u8bf4\u4e00\u4e0b\u79bb\u6563\u5316\uff08\u8fd9\u91cc\u6211\u9519\u4e86\u597d\u4e45\u90fd\u6ca1\u53d1\u73b0qwq\uff09\u3002\u6211\u539f\u672c\u8ba9$idx[i]$\u5b58\u50a8\u7684\u7b2c$i$\u4e2a\u6570\u5b57\u662f\u7b2c\u51e0\u5c0f\uff0c\u800c\u663e\u7136\u6700\u5f00\u59cb\u8bfb\u5165\u7684\u706b\u67f4\u9ad8\u5ea6\u5728\u540e\u9762\u5b8c\u5168\u6ca1\u7528\u4e86\uff0c\u8fd9\u4e48\u79bb\u6563\u5316\u5c31\u5f88\u8be1\u5f02\u3002\u6240\u4ee5\uff0c\u8ba9$idx[i]$\u5b58\u50a8\u7b2c$i$\u5c0f\u7684\u6570\u5b57\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c$idx[i]$\u6570\u7ec4\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/61006.png)\n\n\u521d\u59cb\u5316$q[idx[i]]$=$idx2[i]$\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/61010.png)\n\n\u6309\u7167\u5e8f\u53f7\u6392\u5217\u597d~~\n\n![](https://cdn.luogu.com.cn/upload/pic/61011.png)\n\n~~\u518d\u80cc\u4e0a\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u677f\u5b50~~\n\n\n\n\u597d\u8fa3\uff0c\u4e00\u770b\u5c31\u975e\u5e38\u7b80\u5355\u8fa3\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u4ee3\u7801$\u2193\u2193$\n```cpp\n#include<bits/stdc++.h> \n#define lowbit(x) x&(-x) \n#define ll long long \n#define mod 99999997 \n#define itn int \nusing namespace std; \nitn n,tree[200005],q[100005];\nint num[100005],idx[100005],num2[100005],idx2[100005]; \nll ans; \nvoid add(int x) \n{ \n\twhile(x<=n) \n\t{ \n\t\ttree[x]++; tree[x]%=mod; \n\t\tx+=lowbit(x); \n\t} \n} \nint sum(int x) \n{ \n\tint ret=0; \n\twhile(x>0) \n\t{ \n\t\tret+=tree[x]; \n\t\tif(ret>mod) ret-=mod; \n\t\tx-=lowbit(x); \n\t} \n\treturn ret%mod; \n} \nbool cmp(int x,int y) \n{ \n\treturn num[x]<num[y]; \n} \nbool cmp2(int x,int y) \n{ \n\treturn num2[x]<num2[y]; \n} \nint main() \n{ \n\tcin>>n; \n\t/*for(int i=1;i<=n;i++) scanf(\"%d\",&num[i]),idx[i]=num[i];\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&num2[i]),idx2[i]=num2[i];\n\tsort(num+1,num+1+n); sort(num2+1,num2+1+n);\n\tfor(int i=1;i<=n;i++) idx[i]=lower_bound(num+1,num+1+n,idx[i])-num;\n\tfor(int i=1;i<=n;i++) idx2[i]=lower_bound(num2+1,num2+1+n,idx2[i])-num2;\n\tfor(int i=1;i<=n;i++) cout<<idx[i]<<\" \"<<idx2[i]<<endl;\n\t\u8bef\u533a\uff1a\u8ba9idx[i]\u5b58\u50a8\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u6570\u5b57\u662f\u7b2c\u51e0\u5c0f*/ \n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&num[i]),idx[i]=i; \n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&num2[i]),idx2[i]=i; \n\tsort(idx+1,idx+1+n,cmp); sort(idx2+1,idx2+1+n,cmp2); \n\tfor(int i=1;i<=n;i++) cout<<idx[i]<<\" \"<<idx2[i]<<endl;\n\t//idx[i]:\u7b2ci\u5927\u7684\u6570\u5b57\u5728\u7b2c\u51e0\u4e2a\u4f4d\u7f6e \n\tfor(int i=1;i<=n;i++) q[idx[i]]=idx2[i]; \n\tfor(int i=n;i>=1;i--) //\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n\t{ \n\t\tadd(q[i]); \n\t\tans=(ans+sum(q[i]-1))%mod; \n\t} \n\tcout<<ans%mod<<endl; \n\treturn 0; \n} \n```\n\n\u603b\u7b97\u5199\u5b8c\u4e86\uff0c\u597d\u591a\u5e9f\u8bdd......\u4e0d\u8fc7\u65e2\u7136\u662f\u7ed9\u81ea\u5df1\u5199\u7684\u5c31\u6ca1\u5173\u7cfb\u4e86\u5427......",
        "postTime": 1560772710,
        "uid": 107620,
        "name": "\u6211\u592a\u5f3a\u4e86",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "= =0.59k\u7684\u4ee3\u7801\u8fd8\u80fd\u77ed\u5417\n\n\u9996\u5148\u4e0d\u662f\u5f88\u61c2\u5f52\u5e76\u7684\uff0c\u6811\u72b6\u6570\u7ec4\u51e0\u884c\u5c31\u80fd\u89e3\u51b3\u4e86\n\n\u5176\u6b21\u8fd9\u9053\u9898\u597d\u60f3\u53c8\u597d\u5199\uff0c\u4e00\u904dA\u4e86\n\n\u8003\u573a\u505a\u7684\u8bdd\u4f30\u8ba1\u4f1a\u81ea\u5df1\u63a8\u51e0\u7ec4\u6570\u636e\uff0c\u4e0d\u7136\u6709\u70b9\u865a\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u7684\u6570\u636e\u80af\u5b9a\u662f\u81ea\u52a8\u79bb\u6563\u597d\u7684\uff08\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u6392\u5b8c\u5e8f\u7684\u7f16\u53f7\u505a\uff0c\u672c\u6765\u5dee\u70b9\u6253\u4e2a\u79bb\u6563\u5316\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,ans,c[1000001],t[1000001];\npair<int,int> a[1000001],b[1000001];\nint que(int k)\n{    int ans=0;while(k>0)    ans+=t[k],k-=k&-k;return ans;}\nvoid add(int k)\n{    while(k<=n)    ++t[k],k+=k&-k;}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i].first),a[i].second=i;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&b[i].first),b[i].second=i;\n    sort(a+1,a+n+1);sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++)\n        c[a[i].second]=b[i].second;\n    for(int i=1;i<=n;i++)\n        ans+=que(n-c[i]),add(n-c[i]+1),ans%=99999997;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1478178556,
        "uid": 885,
        "name": "wanglichao1121",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u91cc\u4e0d\u662f\u4ec0\u4e48\u89e3\u9898\u7684\u8be6\u7ec6\u9898\u89e3\uff0c\u53ea\u662f\u6211\u89c9\u5f97\u6709\u4e00\u4e2a\u5730\u65b9\u8fd8\u53ef\u4ee5\u518d\u8be6\u7ec6\u4e9b\u3002\n\n\u697c\u4e0a\u8bf4\u8fc7\u53ea\u80fd\u5728\u22112*ai*bi\u4e0a\u505a\u6587\u7ae0\n\n\u6ca1\u9519\uff0c\u4f46\u662f\u5bf9\u4e8en\u9879\u800c\u8a00\uff0c\u5374\u6ca1\u6709\u5f88\u597d\u7684\u8bc1\u660e\u3002\u5176\u5b9e\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u7528 \u6392\u5e8f\u4e0d\u7b49\u5f0f \u6765\u8bf4\u660e\n\n\u6211\u4eec\u8fd9\u91cc\u6709a1>a2>...>an,b1>b2>...>bn\n\n\u90a3\u4e48\u6392\u5e8f\u4e0d\u7b49\u5f0f\u7684\u5b9a\u4e49\u5c31\u662f\u5bf9\u4e8e\u8fd9\u6837\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\uff0c\u5b83\u4eec\u7684 \u9006\u5e8f\u4e58\u79ef\u548c<=\u4e71\u5e8f\u4e58\u79ef\u548c<=\u987a\u5e8f\u4e58\u79ef\u548c\uff08\u9006\u5e8f\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u5927\u5bf9\u5c0f\uff0c\u987a\u5e8f\u53ef\u4ee5\u770b\u6210\u5927\u5bf9\u5927\uff09\n\n\u4e5f\u5c31\u662f\u8bf4a1b1+a2b2+...+anbn>=a1bi+...anbk>=a1bn+a2bn-1+...+anb1\n\n\u8fd9\u91cc\u6211\u4eec\u5c31\u5f97\u8bc1\u4e86\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define mod 99999997\nusing namespace std;\nint n,c[100005],d[100005],ans;\nstruct node\n{\n\tint n,id;\n}a[100005],b[100005];\nvoid msort(int l,int r)\n{\n\tif(l>=r)\n\t\treturn;\n\tint m=(l+r)/2;\n\tmsort(l,m);\n\tmsort(m+1,r);\n\tint i=l,j=m+1,k=l;\n\twhile(i<=m && j<=r)\n\t{\n\t\tif(c[i]>c[j])\n\t\t{\n\t\t\td[k++]=c[j++];\n\t\t\tans+=m-i+1;\n\t\t\tans%=mod;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td[k++]=c[i++];\n\t\t}\n\t}\n\twhile(i<=m) d[k++]=c[i++];\n\twhile(j<=r) d[k++]=c[j++];\n\tfor(i=l;i<=r;i++)\n\t\tc[i]=d[i];\n}\nbool mcmp(node x,node y)\n{\n\treturn x.n<y.n;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint i;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i].n);\n\t\ta[i].id=i;\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i].n);\n\t\tb[i].id=i;\n\t}\n\tsort(a+1,a+n+1,mcmp);\n\tsort(b+1,b+n+1,mcmp);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tc[a[i].id]=b[i].id;\n\t}\n\tmsort(1,n);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n\u8fd9\u91cc\u987a\u4fbf\u9644\u4e0a\u4ee3\u78012333333 \u7b97\u6cd5\u5927\u540c\u5c0f\u5f02\n",
        "postTime": 1519226269,
        "uid": 32249,
        "name": "wrehtg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8be5\u9898\u9898\u89e3\u6bd4\u8f83\u591a\u4e86\uff0c\u4ed4\u7ec6\u5199\u7684\u5927\u4f6c\u4e5f\u4e0d\u5728\u5c11\u6570\uff0c\u4f46\u5f88\u5c11\u6709\u628a\u4e0b\u9762\u8fd9\u53e5\u8bdd\u8bb2\u900f\u5f7b\u7684\uff08\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8bb2\u8fd9\u4e2a\uff09\uff1a\n\n## c[b[i].x]=a[i].x;(\u7136\u540e\u505ac\u6570\u7ec4\u4e2d\u9006\u5e8f\u5bf9)(x\u4e3a\u539f\u5148\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4f4d\u7f6e)\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n//a\u6570\u7ec4\u91cc\u7b2ck\u5927\u5fc5\u987b\u5bf9\u5e94b\u6570\u7ec4\u91cc\u7b2ck\u5927\u5c31\u4e0d\u8bc1\u660e\u4e86\n\n\u9996\u5148\uff0c\u6392\u5e8f\uff08\u79bb\u6563\u5316\uff09\u540e\u5f97\u5230a\u6570\u7ec4\u548cb\u6570\u7ec4\u6392\u540d\u540e\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\n\n\u5148\u6765\u770b c[b[i].x]=b[i].x\u7684\uff1a\n\n> 1 2 3 ... n\n\n**c[b[i].x]=a[i].x\u7684\u76ee\u6807\u72b6\u6001\u5373\u662f\u6b64**\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u4e3ac\u6570\u7ec4\u8981\u505a\u591a\u5c11\u6b21\u76f8\u90bb\u5143\u7d20\u4ea4\u6362\u6210\u4e3a\uff1a\n>1 2 3 ... n\uff08\u65e0\u9006\u5e8f\u5bf9\uff09\n\n\u800c\u6bcf\u6b21\u4ea4\u6362\u4f1a\u51cf\u5c11\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u5373\u53ef\u3002\n\n~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problem/P4378)~~\n\nCODE\uff08\u6811\u72b6\u6570\u7ec4\uff08nlogn\uff09\uff09:\n```cpp\n#include<cstdio>\n#include<algorithm>\ntypedef long long ll;\nconst ll M=99999997;\nint n,c[100005],w[100005];//w\u4e3a\u6811\u72b6\u6570\u7ec4\nll ans;\nstruct cz{\n\tint s,x;//s\u4e3a\u5143\u7d20\u7684\u503c\uff0cx\u4e0a\u9762\u8bb2\u4e86\n}a[100005],b[100005];\nint read(){\n\tint x=0,flag=1;char c=getchar();\n\twhile(c<'0'||c>'9'){flag*=(c=='-'?-1:1);c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n\treturn flag*x;\n}\nbool cmp(cz c,cz d){//\u6309\u5143\u7d20\u5927\u5c0f\u5347\u5e8f\u6392\u5e8f\n\tif(c.s==d.s)return c.x<d.x;\n\telse return c.s<d.s;\n}\nvoid add(int x){while(x<=n)++w[x],x+=x&-x;}\nll q(int x){ll s=0;while(x>0)s+=w[x],x-=x&-x;return s;}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\ta[i].s=read(),a[i].x=i;\n\tfor(int i=1;i<=n;++i)\n\t\tb[i].s=read(),b[i].x=i;\n\tstd::sort(a+1,a+n+1,cmp);\n\tstd::sort(b+1,b+n+1,cmp);\n\tfor(int i=1;i<=n;++i)\n\t\tc[a[i].x]=b[i].x;\n\tfor(int i=1;i<=n;++i){//\u6a21\u677f\uff0c\u8be6\u89c1P1908\n\t\tadd(c[i]);\n\t\tans=(ans+(i-q(c[i])))%M;//q(x)\u8868\u793a\u5f53\u524d\u2264x\u7684\u6570\u7684\u4e2a\u6570,\u90a3\u4e48(i-q(x))\u8868\u793a\u5f53\u524d>x\u7684\u6570\u7684\u4e2a\u6570\n\t}//\u987a\u5e8f\u4e0d\u80fd\u9519\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```\n-\u5b8c-",
        "postTime": 1569507131,
        "uid": 114830,
        "name": "Kostlin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "# \u5f52\u5e76\u6392\u5e8f \n\n\u5f88\u7384\u5b66\u7684\u4e00\u9053\u9898\u76ee\uff0c\u7528\u53e6\u7c7b\u7684\u65b9\u6cd5\u6c42\u51fa\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u5c31\u53ef\u4ee5AC\n\n\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a  \n\n\u6309\u7167\u9898\u76ee\uff0c\u8f93\u5165\u6570\u636e\u7528\u4e24\u4e2a\u6570\u7ec4a,b\u50a8\u5b58\uff0c\n\n\u540c\u65f6\uff0c\u7528\u53e6\u5916\u4e24\u4e2a\u6570\u7ec4c,d\u5206\u522b\u5bf9\u5e94\u524d\u9762\u4e24\u4e2aa,b\u50a8\u5b58\uff0c\n\n\u5c31\u662f\u524d\u9762\u4e24\u4e2a\u7684\u590d\u5236  \n\n\u7136\u540e\u5728\u5c06\u590d\u5236\u51fa\u6765\u7684\u62cd\u4e00\u4e0b\u5e8f\uff0c\n\n\u7528\u53e6\u4e00\u4e2a\u7c7b\u4f3c\u6876\u7684\u5206\u522b\u8bb0\u5f55\u5728a,b\u4e24\u4e2a\u6570\u7ec4\u7684\u6570\u5b57\u91cc\u9762\uff0c\n\n\u67d0\u4e00\u4e2a\u6570\u662f\u91cc\u9762\u7b2c\u51e0\u5927\u7684\u6570  \n\n\u7136\u540e\u6309\u7167b\u91cc\u9762\u7684\u987a\u5e8f\uff0c\u4e5f\u5c31\u662f\u91cc\u9762\u7684\u4ece\u7b2c\u4e00\u4e2a\u5230\u6700\u540e\u4e00\u4e2a\u7684\u6570\u5728\u6876\u91cc\u9762\u5bf9\u5e94\u7684\n\u662f\u7b2c\u51e0\u4e2a  \n\n\u7ed9a\u6807\u4e00\u4e0b\u7b2c\u4e00\u7b2c\u4e8c   \n\n\u6bd4\u5982b\u4e2d\u7684\u987a\u5e8f\u662f \uff1a1 \uff0c 3 \uff0c 2 \uff0c 4  \n\n\u5728a\u4e2d\u7684\u987a\u5e8f\u662f \uff1a1 \uff0c 4 \uff0c 2 \uff0c 3  \n\n\u90a3\u4e48\u6839\u636eb\u7684\u6765\u770b\uff0c1\u5728b\u4e2d\u662f\u7b2c\u4e00\u4e2a\u6240\u4ee5a\u4e2d\u76841\u5bf9\u5e94\u7684\u8fd8\u662f1  \n\n3\u5728b\u4e2d\u662f\u7b2c\u4e8c\u4e2a\uff0c\u6240\u4ee5a\u4e2d3\u5bf9\u5e94\u7684\u662f2  \n\n.....  \n\n\u8fd9\u6837\u5f04\u5b8c\u4e4b\u540e  \n\na\u6210\u4e861 , 4 , 3 , 2  \n\n\u7136\u540e\u5f52\u5e76\u6392\u5e8f  \n\n\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f\u5462\uff1f  \n\n\u5f52\u5e76\u6392\u5e8f\u677f\u5b50\u662f\u6309\u7167\u5927\u5c0f\u6765\u6392\u5e8f\u7684\uff0c\u8fd9\u91cc\u5374\u662f\u5c06a\u6309\u7167b\u6765\u6392\u5e8f\u7684  \n\n\u6240\u4ee5b\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u5927\u5c0f\uff0c\u662f\u5c06a\u5728b\u4e2d\u7684\u4f4d\u7f6e\u770b\u505a\u662f\u5927\u5c0f\uff0c\u8fd9\u6837\u5f52\u5e76\u6392\u5e8f\u6309\u7167\u6539\n\u5b8c\u540e\u7684\u5927\u5c0f\u6392\u4e00\u4e0b    \n\n\u540c\u65f6\u8bb0\u5f55\u9006\u5e8f\u5bf9\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u4e2a\u9700\u8981\u632a\u52a8\u7684\u6b21\u6570  \n\n\u8bb0\u5f55\u548c\uff0c\u8fd9\u4e2a\u548c\u5c31\u662f\u9700\u8981\u632a\u52a8\u7684\u6b21\u6570\u7684\u603b\u548c   \n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nconst int Max = 100005;\nconst int mo = 99999997;//\u6ce8\u610f\u5fc5\u987b\u8981mo\u4e00\u65e6\u5ffd\u89c6\u5c31\u4f1a\u9519\u6389\u4e24\u4e2a\u70b9\nint a[Max],b[Max];\nint c[Max],d[Max];\nint num1[Max],num2[Max];\nint js[Max];\nlong long ans = 0;\n\nint aa[Max];\nvoid gui(int x,int y)//\u5f52\u5e76\u6392\u5e8f\u677f\u5b50\n{\n\tif(x == y)return;\n\tint mid = (x + y) >> 1;\n\tgui(x,mid);gui(mid + 1,y);\n\tint i = x,j = mid + 1;\n\tint k = x;\n\twhile(i <= mid && j <= y)\n\t{\n\t\tif(a[i] <= a[j])aa[k ++] = a[i ++];\n\t\telse\taa[k ++] = a[j ++],ans += mid - i + 1,ans %= mo;;\n\t}\n\twhile(i <= mid)\n\t\taa[k ++] = a[i ++];\n\twhile(j <= y)\n\t\taa[k ++] = a[j ++];\n\tfor(int i = x;i <= y;++ i)\n\t\ta[i] = aa[i];\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;++ i)scanf(\"%d\",&a[i]),c[i] = a[i];\n\tfor(int i = 1;i <= n;++ i)scanf(\"%d\",&b[i]),d[i] = b[i];//\u8f93\u5165\u6570\u636e\n\tsort(d + 1,d + 1 + n);\n\tfor(int i = 1;i <= n;++ i)\n\t\tnum1[d[i]] = i;\n\tsort(c + 1,c + 1 + n);\n\tfor(int i = 1;i <= n;++ i)\n\t\tnum2[c[i]] = i;\n\tfor(int i = 1;i <= n;++ i)\n\t\tjs[num1[b[i]]] = i;\n\tfor(int i = 1;i <= n;++ i)\n\t\ta[i] = js[num2[a[i]]];//\u524d\u9762\u8fd9\u4e00\u5927\u5768\u90fd\u662f\u9884\u5904\u7406\u4e0b\u6807\n\tgui(1,n);\n\tcout << ans % mo <<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1567863150,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "## **\u5f15\u5bfc**\uff1a\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u6211\u4eec\uff0c\u6211\u4eec\u5148\u597d\u597d\u52a8\u4e0b\u8111\u7ecf\u60f3\uff1a\u5982\u4f55\u6392\u5e8f\u706b\u67f4\u624d\u80fd\u5c06**\u2211**(a \ni\n\u200b\t \u2212b \ni\n\u200b\t ) \n2\n\u6700\u5927\u503c\u6c42\u51fa\u6765\u3002\n\n\n\n------------\n##  **\u601d\u8def**  \uff1a\n\n\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5bb9\u6613\u60f3\u5230\u5c06\u4e24\u4e2a\u961f\u5217\u5148\u8fdb\u884c\u6392\u5e8f\uff0c\u6bd4\u5982\u8bf4\u5c06\u4e24\u4e2a\u961f\u5217\u7684**\u6700\u5927\u7684\u5143\u7d20**\u5bf9\u9f50\uff0c**\u6b21\u5927\u7684\u5143\u7d20**\u5bf9\u9f50\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0 | a - b | \u7684\u503c\u5c31\u4f1a\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u8fd9\u6837\n    **\u2211**(a \ni\n\u200b\t \u2212b \ni\n\u200b\t ) \n2\u7684\u503c\u662f**\u6700\u5c0f**\u7684\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u4ee3\u7801\uff1a\u7ebf\u6bb5\u6811 \u548c \u6811\u72b6\u6570\u7ec4\n\uff08~~\u5176\u5b9e\u662f\u540c\u4e00\u79cd\u601d\u60f3~~\uff09\n\n------------\n\n## **\u5982\u4f55\u5b9e\u73b0\u4ee3\u7801**\uff1a\n1. \u4f7f\u7528\u662f\u6811\u72b6\u6570\u7ec4\u65f6\u524d\u9762\u7684\u6a21\u677f\u662f\u901a\u7528\u7684\uff0c\u7136\u540e\u4e3b\u51fd\u6570\u7406\u53ea\u9700\u8981\u5c06\u4e24\u4e2a\u6570\u7ec4\u6392\u5e8f\uff0c\u518d\u8fdb\u884c\u524d\u9762\u8bf4\u5230\u7684\u5339\u914d\uff0c\u5c31\u597d\u4e86\u3002\n\n1. \u4f7f\u7528\u7ebf\u6bb5\u6811\u65f6\uff0c\u4e5f\u662f\u4e00\u6837\u5148\u6a21\u677f\u6572\u597d\uff0c\u63a5\u4e0b\u6765\u6700\u6700\u5173\u952e\u7684\u5c31\u662f**\u79bb\u6563\u5316**\uff0c \u89c2\u5bdf\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u8c13\u7684\u6c42\u6700\u5c11\u6b21\u6570\u4ea4\u6362\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u79bb\u6563\u5316\u597d\u540e\uff0c\u4e0d\u5c31\u662f\u6c42\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9\uff1f\u4e8e\u662f\uff0c\u4ee3\u7801\u5c31\u660e\u786e\u4e86\uff01\n\n------------\n\n\n\u4f55\u8c13\u79bb\u6563\u5316\uff1f\u79bb\u6563\u5316\u5c31\u662f\u4e0d\u5728\u4e4e\u8fd9\u4e2a\u6570\u7ec4\u5185\u5177\u4f53\u67d0\u4e00\u4e2a\u503c\u7684\u5927\u5c0f\uff08\u5728\u8fd9\u91cc\u6211\u4eec\u79f0\u4e4b\u4e3a\u7edd\u5bf9\u6570\u503c\uff09\uff0c\u800c\u662f\u5728\u4e4e\u8fd9\u4e2a\u6570\u7ec4\u5185\u7684\u76f8\u5bf9\u5927\u5c0f\uff08\u76f8\u5bf9\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6392\u5e8f\u540e\u7684\u6392\u540d\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u6709\u4e24\u4e2a\u6570\u7ec4\n\nA \uff1a100 200 399 488\n\nB \uff1a938 132 144 77\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230A\u30101\u3011 = 488\uff0cA\u30102\u3011 = 399\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8bf4\u660eA\u6570\u7ec4\u7684\u79bb\u6563\u5316\u540e **488**** \u6240\u5bf9\u5e94\u7684\u503c\u5c31\u662f **1**\u3002 B \u6570\u7ec4\u540c\u7406\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u6572\u51fa\u4ee3\u7801\u5373\u53ef\u3002\n\n\u82e5\u8fd8\u662f\u6709\u4e0d\u61c2\u79bb\u6563\u5316\u7684\uff0c\u4e0b\u9762\u4ee3\u7801\u91cc\u6709\u8be6\u89e3\u3002\n\n\uff08\u4e2a\u4eba\u610f\u89c1\uff1a\u8ddf\u7740\u4ee3\u7801\u8d70\u66f4\u597d\u7406\u89e3\u3002\uff09\n\n## \u534e\u4e3d\u4e3d\u7684\u5206\u5272\u7ebf\n\n------------\n\n**\u6811\u72b6\u6570\u7ec4**\uff1a\n\n```c\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define mod 99999997\nusing namespace std;\ntypedef long long LL;\nint n, ans;\nint c[1000009], d[1000009];\nint a[1000009], b[1000009];\nint q[1000009];\nbool cmp1(int i, int j) {return a[i] < a[j];}\nbool cmp2(int i, int j) {return b[i] < b[j];}\n\nnamespace Tree{\n    int low[1000009];\n    \n    LL lowbit(LL x) {return -x&x;}\n\n    LL sum(LL x){\n        LL ret = 0;\n        while (x > 0){\n            ret += low[x];\n            x -= lowbit(x);\n        }\n        return ret;\n    }\n    \n    void add(LL x, LL d){\n        while (x <= n){\n            low[x] += d;\n            x += lowbit(x);\n        }\t\n    }\n}\nusing namespace Tree;\n\nvoid solve()\n{\n    ans = 0;\n    for (int i = n; i >= 1; i--){\n        ans += sum(q[i] - 1);\n        add(q[i], 1);\n        if (ans >= mod) ans -= mod;\n    }\n    printf(\"%d\", (ans % mod + mod) % mod);\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\tscanf(\"%d\", &a[i]), c[i] = i;\n    for (int i = 1; i <= n; i++)\tscanf(\"%d\", &b[i]), d[i] = i;\n    sort(c + 1, c + n + 1, cmp1);\n    sort(d + 1, d + n + 1, cmp2);\n    memset(q, 0, sizeof(q));\n    for (int i = 1; i <= n; i++){\n        q[c[i]] = d[i];\n    }\n    solve();\n    return 0;\n } \n```\n\n**\u7ebf\u6bb5\u6811**\uff1a\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n#include<set>\n#include<cstring>\nusing namespace std;\n//head\n//\u65f6\u95f4\u590d\u6742\u5ea6: O(nlogn)\n//\u8fd9\u4e2a\u9898\u76ee\u53c8\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u3002\u3002\u3002\n#define lsn l,mid,rt<<1\n#define rsn mid+1,r,rt<<1|1\nconst int N = 1000005;\nconst int mod = 99999997;\nint n;\nint v[N], a[N], b[N], c[N], pos[N], tree[N<<2];\nvoid add(int l, int r, int rt, int p, int v){\n    if(l == r){\n        tree[rt] += v;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if(p <= mid) add(lsn, p, v);\n    else add(rsn, p, v);\n    tree[rt] = tree[rt<<1|1] + tree[rt<<1];\n}\nint query(int l, int r, int rt, int p){\n    if(r <= p) return tree[rt];\n    if(l > p) return 0;\n    int ans = 0;\n    int mid = (l + r) >> 1;\n    ans += query(lsn, p);\n    ans += query(rsn, p);\n    return ans;\n}\nint main(){\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%d\", a+i);\n        v[i] = a[i];\n    }\n    sort(v+1, v+n+1);\n    for(int i = 1; i <= n; ++i){\n         a[i] = lower_bound(v+1, v+n+1, a[i]) - v;  //\u79bb\u6563\u5316\uff0c\u5c31\u662f\u6211\u4eec\u53ea\u9700\u8981a[i]\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u76f8\u5bf9\u6392\u540d\uff0c\u5e76\u4e0d\u5173\u5fc3\u5b83\u4eec\u7684\u5177\u4f53\u7684\u6570\u503c\u5927\u5c0f\n         pos[a[i]] = i;                         //\u8bb0\u5f55\u6392\u540d\u7b2ca[i]\u7684\u4f4d\u7f6e\n    }\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%d\", b+i);\n        v[i] = b[i];\n    }\n    sort(v+1, v+n+1);\n    for(int i = 1; i <= n; ++i) b[i] = lower_bound(v+1, v+n+1, b[i]) - v;   //\u540c\u6837\u5bf9b\u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\n    for(int i = 1; i <= n; ++i){\n        c[i] = pos[b[i]];               //\u7528c\u6570\u7ec4\u6765\u8868\u793ab\u6570\u7ec4\u4e2d\u7684\u7b2ci\u4e2a\u5143\u7d20 \u5e94\u8be5\u653e\u7f6e\u7684\u4f4d\u7f6e\n    }\n    //\u6c42\u9006\u5e8f\u5bf9\n    long long ans = 0;\n    for(int i = 1; i <= n; ++i){\n        int num = query(1, n, 1, c[i]);\n        ans = (ans + i - 1 - num) % mod;\n        add(1, n, 1, c[i], 1);\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1541244041,
        "uid": 114633,
        "name": "\u8d1e\u767d\u5468\u9038\u6c11",
        "ccfLevel": 0,
        "title": "P1966 \u706b\u67f4\u6392\u961f"
    },
    {
        "content": "\u706b\u67f4\u9ad8\u5ea6\u5f88\u5927\uff0c\u5148\u79bb\u6563\u5316\u4e00\u4e0b\uff08~~\u79bb\u6563\u5927\u5bb6\u90fd\u77e5\u9053\u5427~~\uff09\n\n\u8981\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u8ddd\u79bb\u6700\u5c0f\uff0c\u663e\u7136\u8981\u4e24\u5217\u706b\u67f4\u7684\u7b2ck(1<=k<=n)\u9ad8\u7684\u706b\u67f4\u4e00\u4e00\u5bf9\u5e94\u3002\n\n\u5982\u4f55\u8bc1\u660e\uff1f\n\n\u53cd\u8bc1\u6cd5\uff1a\u5df2\u77e5\u4e24\u76d2\u5df2\u6ee1\u8db3\u5bf9\u5e94\u5173\u7cfb\uff0c\u5047\u8bbe\u5b58\u5728\u4e0d\u540c\u7684\u6392\u5217\u987a\u5e8f\u4f7f\u5f97\u8ddd\u79bb\u66f4\u5c0f\u3002\n\n\u8bbe\u7b2c\u4e00\u76d2\u706b\u67f4\u9ad8\u4e3ax1,x2\u7684\u706b\u67f4\u4e0e\u7b2c\u4e8c\u76d2\u706b\u67f4\u9ad8\u4e3ay1,y2\u7684\u706b\u67f4\u5bf9\u5e94(\u4e0d\u59a8\u8bbex1<x2\uff0cy1<y2)\uff0c\n\n\u5219\u6709  (x1-y1)^2+(x2-y2)^2 > (x1-y2)^2+(x2-y1)^2\n\n\u5c55\u5f00\u540e\u53d1\u73b0\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe\uff0c\u6240\u4ee5\u4e24\u5217\u706b\u67f4\u7684\u7b2ck(1<=k<=n)\u9ad8\u7684\u706b\u67f4\u4e00\u4e00\u5bf9\u5e94\u65f6\uff0c\u4e24\u5217\u706b\u67f4\u8ddd\u79bb\u6700\u5c0f\u3002\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ea\u9700\u8981\u79fb\u52a8\u4e00\u76d2\u706b\u67f4\u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u56fa\u5b9a\u4f4f\u53e6\u4e00\u76d2\u706b\u67f4\uff0c\u8fd9\u5bf9\u7b54\u6848\u662f\u6ca1\u5f71\u54cd\u7684\u3002\n\n\u6211\u56fa\u5b9a\u7684\u7b2c\u4e8c\u76d2\u706b\u67f4\uff0c\u7b97\u51fa\u7b2c\u4e00\u76d2\u706b\u67f4\u7684\u76ee\u6807\u4f4d\u7f6e\uff0c\u7136\u540e\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n    int num,pos;\n}c[1000000],d[1000000];\nint a[1000000],b[1000000],n,i,ans;\nint zn(int l,int r)\n{\n\tint mid,m,s;\n\tmid=(l+r)/2;\n\tif(l==r) return 0;\n\tzn(l,mid);zn(mid+1,r);\n\tm=mid+1;\n\tint l1=l;\n\ts=l;\n\twhile(l1<=mid&&m<=r)\n\t{\n\t\t\n\t\tif(a[l1]<=a[m])\n\t\t{\n\t\t\tb[s]=a[l1];l1++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=mid-l1+1;\n\t\t\tans%=99999997;\n\t\t\tb[s]=a[m];\n\t\t\tm++;\n\t\t}\n\t\ts++;\n\t}\n\twhile(l1<=mid)\n\t{b[s]=a[l1];s++;l1++;}\n\twhile(m<=r)\n\t{b[s]=a[m];s++;m++;}\n\tfor(int i=l;i<=r;i++)\n\ta[i]=b[i];\n}\nbool cmp(node a1,node a2)\n{\n    return a1.num<a2.num;\n}\nint main()\n{\n\tcin>>n;\n\tfor(i=1;i<=n;i++) \n\t{\n\t    scanf(\"%d\",&c[i].num);\n\t    c[i].pos=i; //\u79bb\u6563\u5316\n\t}\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&d[i]);\n        d[i].pos=i;\n    }\n    sort(c+1,c+n+1,cmp);  //\u79bb\u6563\u5316\n    sort(d+1,d+n+1,cmp);\n    for(i=1;i<=n;i++)\n        a[c[i].pos]=d[i].pos; //\u7b2c\u4e00\u76d2\u706b\u67f4\u7684\u76ee\u6807\u4f4d\u7f6e\n\tzn(1,n); //\u5f52\u5e76\u6392\u5e8f (zn\u662f\u4e00\u4f4d\u5927\u4f6c\u7684\u540d\u5b57)\n\tcout<<ans<<endl;\n \treturn 0;\n}\n\n```",
        "postTime": 1531232283,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u706b\u67f4\u6392\u961f"
    },
    {
        "content": "\u6ca1\u4eba\u8bc1\u660e\u8fd9\u4e2a\u8d2a\u5fc3...\u90a3\u849f\u84bb\u8bd5\u7740\u8bc1\u4e00\u4e0b\n\n\u8fd9\u9898\u7684\u8d2a\u5fc3\u8bc1\u660e\u4e0e\u56fd\u738b\u6e38\u620f\u7684\u5957\u8def\u5176\u5b9e\u5dee\u4e0d\u591a\n\n\u5047\u8bbe\u7b2c\u4e00\u5217\u6709\u4e24\u4e2a\u6570 a,b(a < b) \u7b2c\u4e8c\u5217\u6709\u4e24\u4e2a\u6570 x,y(x < y)\n\n\u90a3\u4e48\u770b(a-x)^2+(b-y)^2\u4e0e(a-y)^2+(b-x)^2\u54ea\u4e2a\u66f4\u5c0f\uff0c\u54ea\u4e2a\u5c31\u66f4\u4f18\n\n\u53ef\u4ee5\u5047\u8bbe\u5de6\u8fb9<\u53f3\u8fb9\uff0c\u7136\u540e\u5316\u7b80\uff0c\u5c06\u4e24\u8fb9\u7684\u4e8c\u6b21\u65b9\u90fd\u53bb\u6389\n\n\u5316\u7b80\u540e\u5f97 -ax-by < -ay-bx\n\n\u518d\u6b21\u79fb\u9879\u5f97\u5230 a(x-y)>b(x-y) \u7531\u4e8ex-y\u662f\u8d1f\u6570\uff0c\u5316\u7b80\u540e\u5f97 a < b,\u5f0f\u5b50\u6210\u7acb\uff08\u610f\u601d\u5c31\u662f\u5982\u679c\u5de6\u8fb9>\u53f3\u8fb9\u7684\u8bdd\u5c31\u4e0e\u6761\u4ef6\u77db\u76fe\u4e86\uff09\n\n\u90a3\u4e48\u663e\u7136\u5c0f\u7684\u914d\u5c0f\u7684\uff0c\u5927\u7684\u914d\u5927\u7684\u6700\u4f18\n\n\u5173\u4e8e\u90a3\u4e2a t[a[i].id]=b[i].id \u7684\u914d\u5bf9\u6211\u8fd8\u662f\u4e0d\u662f\u5f88\u61c2...\u5e0c\u671b\u61c2\u7684dalao\u79c1\u4fe1\u6211\u4e00\u6ce2...\u87f9\u87f9\n",
        "postTime": 1479047103,
        "uid": 19075,
        "name": "panda_eater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u76ee\u5728\u5904\u7406\u5e8f\u5217\u4e0a\u8fd8\u662f\u5f88\u6709\u4ef7\u503c\u7684\u3002\n\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6700\u5c0f\u5316$\\sum(a_{i}-b_{i})^2$\uff0c\u9996\u5148\u7b2c\u4e00\u4e2a\u7ed9\u6211\u4eec\u7684\u542f\u793a\u662f\uff1a\u9047\u5230\u8fd9\u79cd\u76f8\u4e92\u7ea6\u675f\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5176\u62c6\u5f00\uff0c\u53d8\u6210\u5bb9\u6613\u7ef4\u62a4\u7684\u5f0f\u5b50\u3002\n\n\u56e0\u4e3a$\\sum(a_i-b_i)^2=\\sum (a_i^2+b_i^2)-2\\times\\sum a_i\\times b_i$\u3002\u524d\u8005\u663e\u7136\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f$\\sum a_i\\times b_i$\u7684\u6700\u5927\u503c\u3002\u9ad8\u4e2d\u6570\u5b66\u9009\u4fee$4-5$\u91cc\u9762\u6709\u4e00\u4e2a\u4e0d\u7b49\u5f0f\u53eb\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff08\u6240\u4ee5\u6570\u5b66\u662f\u5f88\u91cd\u8981\u7684\uff01\uff09\uff1a\n\u82e5$a_1\\leq a_2\\leq a_3\\leq \\cdots\\leq a_n$\u4e0e$b_1\\leq b_2\\leq b_3\\leq \\cdots\\leq b_n$\u90a3\u4e48\u6709$a_1b_n+a_2b_{n-1}+\\cdots +a_nb_1\\leq a_{i1}b_{j1}+a_{i2}b_{j2}+\\cdots +a_{in}b_{jn}\\leq a_1b_1+a_2b_2+\\cdots +a_nb_n$\u5373\u53cd\u5e8f\u548c$\\leq$\u4e71\u5e8f\u548c$\\leq$\u540c\u5e8f\u548c\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u4f7f\u4e24\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e00\u4e00\u5bf9\u5e94\u5c31\u597d\u4e86\uff08\u5c31\u662f\u4f7f\u6700\u5927\u4e0e\u6700\u5927\u6392\u5728\u4e00\u8d77\uff0c\u4ee5\u6b64\u5217\u63a8\uff09\u3002\n\n\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u601d\u8003\u6765\u4e86\uff1a\u5728\u53ea\u6d89\u53ca\u5927\u5c0f\u5173\u7cfb\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u636e\u79bb\u6563\u5316\u3002\u4ee5\u4e0b\u7ed9\u51fa\u4e00\u4e2a\u79bb\u6563\u5316\u7684\u4ee3\u7801\uff1a\n\n```cpp\nbool cmp(int i,int j){return A[i]<A[j];}\nfor(int i=1;i<=n;++i) scanf(\"%d\",&A[i]),a[i]=i;\nsort(a+1,a+1+n,cmp);\n```\n\u5176\u4e2d$A$\u6570\u7ec4\u662f\u8bfb\u5165\u7684\u706b\u67f4\u9ad8\u5ea6\u3002\u6211\u4eec\u53d1\u73b0\u7ecf\u8fc7\u8fd9\u6837\u79bb\u6563\u5316\u540e\uff0c$a[i]$\u8868\u793a\u7684\u662f$i$\u8fd9\u4e2a\u6570\u5b57\u5728$A$\u4e2d\u7684\u4f4d\u7f6e\uff08$A$\u6570\u7ec4\u4e2d\u6392\u540d\u4e3a$i$\u7684\u6570\uff09(\u53ef\u4ee5\u624b\u73a9\u4e00\u4e0b)\u3002\n\n\u6211\u4eec\u5bf9$A,B$\u6570\u7ec4\u90fd\u7ecf\u8fc7\u8fd9\u6837\u79bb\u6563\u5316\u540e\uff0c\u8bbe\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u4e3a$a,b$\uff0c\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4$l$\u5e76\u4ee4$l[a[i]]=b[i]$\u8fd9\u6837\u64cd\u4f5c\u540e\u6211\u4eec\u4f1a\u53d1\u73b0$l[i]$\u8868\u793a\u7684\u662f$A$\u4e2d$i$\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u5728$B$\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c\u82e5\u521d\u59cb\u7684\u706b\u67f4\u9ad8\u5ea6\u662f:\n\n$A=${$1,3,4,2$}\n\n$B=${$1,7,2,4$}\n\n\u6211\u4eec\u5148\u5c06\u5176\u79bb\u6563\u5316\u4e00\u4e0b\u4fbf\u4e8e\u7406\u89e3\uff0c\u5b9e\u9645\u64cd\u4f5c\u4e2d\u5e76\u6ca1\u6709\u8fd9\u4e00\u6b65,\u5f97\u5230$A=${$1,3,4,2$},$B=${$1,4,2,3$}\uff0c\u90a3\u4e48\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4$a=${$1,4,2,3$}\u4e0e$b=${$1,3,4,2$}\u90a3\u4e48\u5f97\u5230\u7684$l=${$1,4,2,3$}\u8fd9\u6b63\u597d\u5bf9\u5e94\u4e86\u5c06$B$\u4e2d$1$\u4f5c\u4e3a$1$\uff0c$4$\u4f5c\u4e3a$2$\uff0c$2$\u4f5c\u4e3a$3$\uff0c$3$\u4f5c\u4e3a$4$(\u6309$1,2,3,4$\u5347\u5e8f)\u5c06$A$\u66ff\u6362\u540e\u7684\u7ed3\u679c\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u5c06$l$\u4ea4\u6362\u5230$1,2,3,4$\u7684\u72b6\u6001\u5c31\u6ee1\u8db3\u4e86\u3002\u56e0\u4e3a\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u6bcf\u5217\u706b\u67f4\u9ad8\u5ea6\u4e0d\u91cd\u590d\u5e76\u4e14\u6bcf\u6b21\u4ea4\u6362\u53ea\u4ea4\u6362\u76f8\u90bb\u4e24\u6839\u706b\u67f4\uff0c\u8fd9\u65f6\u5019\u5c31\u662f\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97$l$\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=100005,mod=99999997;\n\nint A[N],B[N],a[N],b[N],l[N],c[5*N];\nll ans;\nint n;\n\nvoid add(int x,int y){\n\tfor(;x<=n;x+=x&-x) c[x]+=y;\n}\n\nint ask(int x){\n\tll ans=0;\n\tfor(;x;x-=x&-x) ans+=c[x];\n\treturn ans;\n}\n\nbool cmp1(int i,int j){\n\treturn A[i]<A[j];\n}\n\nbool cmp2(int i,int j){\n\treturn B[i]<B[j];\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&A[i]),a[i]=i;\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&B[i]),b[i]=i;\n\tsort(a+1,a+1+n),sort(b+1,b+1+n);//\u79bb\u6563\u5316\n\tsort(a+1,a+1+n,cmp1),sort(b+1,b+1+n,cmp2);\n\tfor(int i=1;i<=n;++i) l[a[i]]=b[i];\n\tfor(int i=n;i;i--){//\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n\t\tans=(ans+ask(l[i]-1))%mod;\n\t\tadd(l[i],1);\t\n\t}\n\tprintf(\"%lld\",ans%mod);\n\treturn 0;\n}\n```",
        "postTime": 1573723330,
        "uid": 202048,
        "name": "Asika391",
        "ccfLevel": 0,
        "title": "[NOIP2013] \u706b\u67f4\u6392\u961f \u9898\u89e3"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u6c42\u9006\u5e8f\u5bf9\u7684\u9898\u76ee\uff1b\n\n\u6c42\u9006\u5e8f\u5bf9\u7684\u624b\u6bb5\u6709\u7684\u65f6\u5019\u662f\u6b21\u8981\u7684\uff0c\u6211\u4eec\u9996\u5148\u8981\u5f04\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u9898\u3002\n\n\u90a3\u4e48\u8ba9\u6211\u6765\u6982\u62ec\u4e00\u4e0b\u9898\u76ee\u5927\u610f\uff1a\n\n\u8ba9\u4f60\u628a\u4e24\u5217\u706b\u67f4\u6392\u4e00\u4e0b\u961f\uff0c\u4f7f\u5f97\u4fe9\u961f\u5217\u4e2d\u5e8f\u53f7\u76f8\u540c\u7684\u4e24\u6839\u706b\u67f4\u7684\u9ad8\u5ea6\u5dee\u503c\u6700\u5c0f\u3002\n\n\u7136\u9e45\uff0c\u6700\u7ec8\u8981\u6c42\u7684\u7adf\u7136\u4e0d\u662f\u6700\u5c0f\u5dee\u503c\uff0c\u800c\u662f\u5dee\u503c\u6700\u7ec8\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21//%%%\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u51fa\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u8fd9\u4e24\u5217\u706b\u67f4\u5fc5\u987b\u662f\u6700\u5927\u5339\u914d\u6700\u5927\uff0c\u6b21\u5927\u5339\u914d\u6b21\u5927\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u624d\u80fd\u5f97\u51fa\u6700\u5c0f\u5dee\u503c\u3002\n\n\u518d\u770b\u770b\u9898\u76ee\u4e2d\u8981\u6c42\u53ea\u80fd\u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u4e2a\u706b\u67f4\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f00\u59cb\u56de\u5934\u770b\u9006\u5e8f\u5bf9\u548b\u6c42\u3002\n\n#### 1\u3001\u5f52\u5e76\u6392\u5e8f\n\n#### 2\u3001\u6811\u72b6\u6570\u7ec4\n\n#### 3\u3001\u66b4\u529b\uff08\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f53\u573a\u6253\u6b7b\uff09\n\n\u90fd\u633a\u7b80\u5355\u7684\uff0c\u56e0\u4e3a\u6211\u662f\u5728\u6811\u72b6\u6570\u7ec4\u677f\u5757\u4e2d\u5b66\u7684\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u3002\n\n\u5982\u679c\u901a\u8fc7\u9006\u5e8f\u5bf9\u672c\u8eab\u7684\u5b9a\u4e49\u6765\u7406\u89e3\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u4e0d\u5e94\u8be5\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u554a\uff1f\u4f46\u662f\u4eba\u7c7b\u7684\u667a\u529b\u662f\u65e0\u6781\u9650\u7684\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684\u7528\u9014\uff0c\u53d1\u73b0\u8fd9\u4e2a\u73a9\u610f\u662f\u7528\u6765\u533a\u95f4\u6c42\u548c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ea\u80fd\u88f8\u7684\u6c42\u548c\uff1f\n\n\u90a3\u672a\u514d\u592a\u8fb1\u6ca1\u5b83\u7684\u540d\u5934\u4e86\u3002\n\n\u6211\u4eec\u8fd9\u6837\u60f3\uff0c\u6811\u72b6\u6570\u7ec4\u5728\u6c42\u9006\u5e8f\u5bf9\u7684\u65f6\u5019\u53ea\u662f\u4e00\u4e2a\u6c42\u548c\u7684\u5de5\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u6765\u6c42\u5f53\u524d\u8fd9\u4e2a\u6570\u6240\u5728\u4f4d\u7f6e\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u7edf\u8ba1\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e2a\u706b\u67f4\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e00\u4e2a\u5b58\u7f16\u53f7\uff0c\u4e5f\u5c31\u662f\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u5b58\u957f\u5ea6\u3002\u6700\u540e\u6211\u4eec\u6309\u7167\u957f\u5ea6\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u5f53\u7136\u7531\u5927\u5230\u5c0f\u4e5f\u53ef\u4ee5\uff09\uff0c\u6700\u540e\u6211\u4eec\u8fdb\u884c\u6574\u4e2a\u7a0b\u5e8f\u4e5f\u662f\u601d\u8def\u4e2d\u6700\u91cd\u8981\u7684\u70b9\uff1a**\u79bb\u6563\u5316**\u3002\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u79bb\u6563\u5316\u3002\u8fd9\u7b97\u662f\u4e00\u79cd\u5e38\u7528\u7684\u5c0f\u6280\u5de7\uff0c\u9002\u7528\u4e8e\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u5c31\u662f\u6211\u4eec\u5728\u89e3\u9898\u8fc7\u7a0b\u4e2d\u53ea\u5728\u610f\u8fd9\u4e2a\u6570\u7684\u5927\u5c0f**\u5173\u7cfb**\uff0c\u800c\u4e0d\u5728\u610f\u8fd9\u4e2a\u6570\u5230\u5e95\u662f\u591a\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u5f62\u8c61\u5730\u7406\u89e3\u4e00\u4e0b\uff0c\u73b0\u5728\u67095\u4e2a\u6570\u5206\u5e03\u57281-10000000\u7684\u533a\u95f4\u5185\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u5230\u5e95\u591a\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u4e00\u4e2a\u79bb\u6563\u5316\u6570\u7ec4D[]\uff0c\u5176\u4e2dD[i]\u8868\u793a\u7b2ci\u4e2a\u5143\u7d20\u5728\u5176\u4e2d\u6392\u7b2cj\u4f4d\uff0c\u8fd9\u4e2aj\u6700\u5927\u4e5f\u53ea\u662f5.\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a\u79bb\u6563\u5316\u3002\n\n\u663e\u7136\u8fd9\u9053\u9898\u9002\u7528\u79bb\u6563\u5316\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6570\u636e\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6811\u72b6\u6570\u7ec4\u7684\u5904\u7406\uff0c\u5176\u4e2d\u6811\u72b6\u6570\u7ec4\u51fd\u6570getsum(sum[i])\u5c31\u8868\u793a\u6bd4\u9ad8\u5ea6\u4e3ai\u7684\u5143\u7d20\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u7edf\u8ba1ans\u7684\u65f6\u5019\u8981\u8bb0\u5f97ans+=i-getsum(sum[i]);\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u51cf\u53bb\u6bd4\u5f53\u524d\u4f4d\u7f6e\u5927\u7684\u6240\u6709\u5143\u7d20\u7684\u4e2a\u6570\u3002\n\n\u6ce8\u610f\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u90fd\u53d6\u6a21\u3002\n\n\n\nAC code:\n\n```c++\n#include<cstdio>\n#include<algorithm>\n#define mod 99999997\nusing namespace std;\nstruct node\n{\n    int h,order;\n}a[100010],b[100010];\nint c[100010],sum[100010],n,ans;\nbool cmp(node a,node b)\n{\n    return a.h<b.h;\n}\nvoid fix(int x)\n{\n    for(int i=x;i<=n;i+=i&-i)\n        c[i]++,c[i]%=mod;\n}\nint getsum(int x)\n{\n    int ret=0;\n    for(int i=x;i;i-=i&-i)\n        ret+=c[i],ret%=mod;\n    return ret;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].h);\n        a[i].order=i;\n    }\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&b[i].h);\n        b[i].order=i;\n    }\n    sort(b+1,b+n+1,cmp);\n    for(int i=1;i<=n;i++)\n        sum[a[i].order]=b[i].order;\n    for(int i=1;i<=n;i++)\n    {\n        fix(sum[i]);\n        ans+=i-getsum(sum[i]);\n        ans%=mod;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1564638314,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u6392\u5e8f\u6392\u7684\u662f\u6570\u636e\uff1f\u9519\u4e86\u3002\u6392\u5e8f\u6392\u7684\u662f\u5143\u7d20\u3002\u8fd9\u4e9b\u5143\u7d20\u6709**\u4e24\u4e2a\u5c5e\u6027\uff1a\u6570\u636e\u548c\u4e0b\u6807**\u3002\n\n\u62c6\u5f00\u5b8c\u5168\u5e73\u65b9\u3001 $\\sum$ \u548c\u6c42 $max\\{a_ib_i\\}$ \u7684\u6b63\u786e\u6027\u4e0d\u518d\u8bba\u8ff0\uff0c\u8fd9\u91cc\u8c28\u5728 **\u4ee5\u58a8** \u5927\u5927\u7684\u9898\u89e3\u57fa\u7840\u4e0a\uff0c\u63d0\u4f9b\u4e00\u79cd\u5bf9\u5f52\u5e76\u6392\u5e8f\u89e3\u6cd5\u7684\u4e00\u79cd\u601d\u8003\u3002\n\n1. \u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u89e3\u51fa\u53ea\u5141\u8bb8\u76f8\u90bb\u5143\u7d20\u4ea4\u6362\u65f6\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\uff08\u9006\u5e8f\u5bf9\uff09\u3002\n\n2. \u5f52\u5e76\u6392\u5e8f\u6839\u636e\u6570\u636e\u7684**\u81ea\u7136\u6570\u5927\u5c0f\u987a\u5e8f**\u4f5c\u4e3a\u6392\u5e8f\u7684**\u4f9d\u636e**\uff0c\u800c\u6539\u53d8\u6392\u5e8f\u7684\u4f9d\u636e\uff08\u6bd4\u5982\u91cd\u65b0\u5b9a\u4e49\u6570\u636e\u7684\u5927\u5c0f\u987a\u5e8f\uff09\u5e76\u6ca1\u6709\u52a8\u6447\u5f52\u5e76\u6392\u5e8f\u7684**\u57fa\u7840**\uff0c\u5b9a\u4e49\u6539\u53d8\u540e\u5f52\u5e76\u6392\u5e8f\u4ecd\u7136\u6210\u7acb\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u663e\uff08\u5909\uff09\u7136\uff08\u614b\uff09\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u5927\u5c0f\u7684\u51fd\u6570\uff0c\u4ee3\u66ff\u539f\u5148\u7684\u5927\u4e8e\u5c0f\u4e8e\u53f7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5341\u5206\u9ebb\u70e6\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n3. \u5bf9\u6240\u8c13\u7684\u6620\u5c04\u7684\u7406\u89e3\uff08\u6392\u5e8f\u540e\u7684 ```c[b[i].loc] = a[i].loc``` \uff09\uff1a\n\u5728 2 \u4e2d\u8ba8\u8bba\u7684\u89e3\u6cd5\uff0c\u662f~~\u4e0d\u8d1f\u8d23\u4efb\u7684\u778e\u641e~~\u8003\u8651\u6539\u53d8**\u5b9a\u4e49**\uff0c\u8ba9**\u6570\u636e**\u5728\u65b0\u7684**\u5b9a\u4e49**\u4e0b\u7528\u539f\u6709\u7684**\u65b9\u6cd5**\u89e3\u51b3\u95ee\u9898\u3002\u7136\u800c\uff0c\u5927\u4f6c\u4eec\u65e9\u5c31\u60f3\u51fa\u4e86\u66f4\u8d1f\u8d23\u4efb\u7684\u65b9\u6cd5\uff1a\u6539\u53d8**\u6570\u636e**\uff0c\u8ba9\u5b83\u7b26\u5408\u539f\u6709\u7684**\u65b9\u6cd5**\u548c**\u5b9a\u4e49**\u3002\u5177\u4f53\u5730\u8bf4\uff0c**\u4e0b\u6807**\u4e0d\u518d\u4ec5\u4ec5\u4f5c\u4e3a**\u7d22\u5f15**\uff0c\u6211\u4eec\u4ee5 $a_i$ **\u7684\u539f\u4f4d\u7f6e**\uff08\u4e0b\u6807\uff09\u4f5c\u4e3a**\u6570\u636e**\uff0c\u4ee5 $a_i$ **\u5728** $b$ **\u4e2d\u7684\u5bf9\u5e94\u4e0b\u6807**\u4f5c\u4e3a\u5143\u7d20\u7684**\u7d22\u5f15**\u3002\u8003\u8651\u5230 **\u4ee5\u58a8** \u5927\u5927\u63d0\u5230\u7684\uff0c**\u4e0b\u6807\u5728\u59cb\u6001\u5176\u5b9e\u4fdd\u6301\u5347\u5e8f**\uff0c\u65b0\u6570\u7ec4\u5b9e\u9645\u610f\u5473\u7740**\u6253\u4e71\u4e86\u4e0b\u6807**\u7684 $a$ \u6570\u7ec4\u3002\u6211\u4eec\u5c06\u65b0\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5373\u7b49\u540c**\u6062\u590d\u4e0b\u6807\u7684\u6709\u5e8f\u6027**\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u662f\u5728\u4ece $a$ \u6570\u7ec4\u7684\u7ec8\u6001\u8f6c\u6362\u5230 $a$ \u6570\u7ec4\u7684\u59cb\u6001\uff0c\u800c\u7b54\u6848\u663e\u7136\u4e00\u81f4\u3002```\u5f53\u7136\uff0c\u8981\u76f4\u63a5\u7406\u89e3\u4e3a b_i \u5143\u7d20\u7684\u6392\u5e8f\u66f4\u76f4\u63a5\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u4e0d\u592a\u597d\u8bc1\u660e qaq```\n\n```cpp\n// P1966 AC 100\n// \u5f52\u5e76\u6392\u5e8f\u4e00\u5f00\u59cb\u6253\u9519\u4e86 qaq\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nstruct S{\n\tint id, num;\n\tbool operator < (const S &b) const{\n\t\treturn num < b.num;\n\t}\n};\n\nS a[1000000], b[1000000];\nint c[1000000];\nint c_[1000000];\n\nlong long sum = 0;\n\nvoid ms(int a[], int l, int r){\n\tif(l == r)\n\t\treturn;\n\t\n\tint mid = (l+r) >> 1;\n\tms(a, l, mid);\n\tms(a, mid+1, r);\n\t\n\tint j = mid+1, c_n = 0;\n\tfor(int i=l; i<=mid; i++){\n\t\twhile(j<=r && a[i] > a[j]){\n\t\t\tc_[c_n++] = a[j];\n\t\t\tj++;\n\t\t}\n\t\tc_[c_n++] = a[i];\n\t\tsum += j-mid-1;\n\t\tsum %= 99999997;\n\t}\n\tfor(int i=l; i<l+c_n; i++){\n\t\ta[i] = c_[i-l];\n\t}\n\t\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &a[i].num);\n\t\ta[i].id = i;\n\t}\n\tfor(int i=0; i<n; i++){\n\t\tscanf(\"%d\", &b[i].num);\n\t\tb[i].id = i;\n\t}\n\t\n\tsort(a, a+n);\n\tsort(b, b+n);\n\tfor(int i=0; i<n; i++){\n\t\tc[b[i].id] = a[i].id;\n\t}\n\t\n\tms(c, 0, n-1);\n\t\n\tprintf(\"%d\\n\", sum);\n\t\n\treturn 0;\n}\n``",
        "postTime": 1573380513,
        "uid": 26923,
        "name": "\u51cb\u96f6\u50b2\u98ce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011- \u6392\u5e8f\u65b0\u601d\u8003"
    },
    {
        "content": "\u9898\u89e3\uff1a\u672c\u9898\u4e3b\u8981\u8003\u67e5\u9006\u5e8f\u5bf9\uff0c\u6811\u72b6\u6570\u7ec4\u3002\n- \u7b80\u8981\u9898\u610f\uff1a\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\uff1a$\\sum(a_i-b_i)^2$\uff0c\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u901a\u8fc7\u4ea4\u6362\u4f7f\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\uff0c\u6c42\u6700\u5c11\u4ea4\u6362\u6b21\u6811\u6570\u3002\n- 1.\u8d2a\u5fc3\uff1a\u6211\u4eec\u8981$\\sum(fir_i-sec_i)^2$\u6700\u5c0f\uff0c\u76f8\u5f53\u4e8e\u8981\u6700\u5c0f\u5316 $(fir_i\u2212sec_i)$\uff0c\u4e5f\u5c31\u662ffir\u5217\u7b2ck\u5927\u7684\u5143\u7d20\u5fc5\u987b\u548csec\u5217\u4e2d\u7b2ck\u5927\u7684\u5143\u7d20\u4f4d\u7f6e\u4e00\u6837\u3002\n- 2.\u9006\u5e8f\u5bf9+\u5f52\u5e76\u6392\u5e8f\uff1a\u8fd9\u9053\u9898\u76ee\u7684\u6700\u96be\u70b9\u5728\u4e8e\u65b0\u5efa\u5e8f\u5217\uff01\u6309\u9ad8\u5ea6\u6392\u5217\uff0c\u5f97\u51fa\u4ed6\u4eec\u7684\u5e8f\u53f7\u5e8f\u5217a,b\u3002\u5982\u6837\u4f8b2\uff1a \n- Fir\uff1a1 3 4 2->1 2 3 4 A:\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a1 4 2 3 \n- Sec\uff1a1 7 2 4->1 2 4 7 B:\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a1 3 4 2\n- \u65b0\u7684\u5e8f\u5217\u8868\u793a(Fir\u4e3a\u4f8b)\uff1a\u7b2c\u4e00\u5c0f\u7684\u6570\u5728\u539f\u5e8f\u5217\u7b2c\u4e00\u4f4d\uff0c\u7b2c\u4e8c\u5c0f\u7684\u6570\u5728\u539f\u5e8f\u5217\u7b2c\u56db\u4f4d(\u7b2c$k$\u5927\u7684\u5728\u539f\u5e8f\u5217\u7684\u4f4d\u7f6e)\n- \u6240\u4ee5\u8981\u628a\u5143\u7d20\u6309\u7b2ck\u5927\u7684\u5143\u7d20\u4f4d\u7f6e\u5bf9\u5e94\uff0c\u5c31\u53ea\u7528\u5c06\u5e8f\u5217A,B\u4ea4\u6362\u76f8\u7b49\u5373\u53ef\uff0c\u95ee\u9898\u5c31\u4fbf\u4e3a\u6c42\u9006\u5e8f\u5bf9\u6570\u4e86\u3002\n- \u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct N\n{\n\tlong long ans,num;\n}fir[222222],sec[222222];\nlong long n,ans;\nlong long a[222222],b[222222];\nbool cmp(N x,N y)\n{\n\treturn x.ans<y.ans;\n} \nvoid Bgui(int l,int r)\n{\n\tif(l>=r)return ;\n\tint mid=l+r>>1;\n\tint i=l;int j=mid+1;int k=l;\n\tBgui(l,mid);\n\tBgui(mid+1,r);\n\twhile(i<=mid&&j<=r)\n    {\n        if(a[i]>a[j])\n        {\n            b[k++]=a[j++];\n            ans+=mid-i+1;\n            ans%=99999997;\n        }\n        else b[k++]=a[i++];\n    }\n    while(i<=mid) b[k++]=a[i++];\n    while(j<=r) b[k++]=a[j++];\n    for(int i=l;i<=r;i++)a[i]=b[i];\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>fir[i].ans;\n\t\tfir[i].num=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>sec[i].ans;\n\t\tsec[i].num=i;\n\t}\n\tsort(fir+1,fir+1+n,cmp);\n\tsort(sec+1,sec+1+n,cmp);\n\tfor(int i=1;i<=n;i++)\n\ta[fir[i].num]=sec[i].num;\n\tBgui(1,n);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1573182257,
        "uid": 120734,
        "name": "wshl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u6781\u5176\u9b3c\u755c\u7684\u9006\u5e8f\u5bf9\u95ee\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u53d1\u52a8\u4f60\u7684\u4eba\u7c7b\u667a\u6167\uff0c\u4f60\u7684\u6f5c\u610f\u8bc6\u544a\u8bc9\u4f60\u4e24\u5217\u706b\u67f4\u6392\u540d\u76f8\u540c\u7684\u706b\u67f4\u6392\u5728\u540c\u4e00\u884c\u65f6\uff08\u5c31\u662f\u7b2c\u4e00\u5217\u7b2c\u4e00\u957f\u7684\u548c\u7b2c\u4e8c\u5217\u7b2c\u4e00\u957f\u7684\u5728\u540c\u4e00\u884c\uff0c\u7b2c\u4e00\u5217\u7b2c\u4e8c\u957f\u7684\u548c\u7b2c\u4e8c\u5217\u7b2c\u4e8c\u957f\u7684\u5728\u540c\u4e00\u884c\uff0c\u7b2c\u4e00\u5217\u7b2c\u4e09\u957f\u7684\u548c\u7b2c\u4e8c\u5217\u7b2c\u4e09\u957f\u7684\u5728\u540c\u4e00\u884c\uff0c\uff09\uff0c\u2211(ai\u2212bi)$^{2}$\u6700\u5c0f\n\n\u5f00\u59cb\u5197\u957f\u7684\u8bc1\u660e\uff1a\n\n\u4efb\u53d6ai\uff0caj\uff0c\u4f7f\u5f97ai\u662f\u7b2c\u4e00\u5217\u4e2d\u7b2ci\u957f\u7684\uff0caj\u662f\u7b2c\u4e00\u5217\u4e2d\u7b2cj\u957f\u7684\uff0c\u800c\u4e14ai<aj;\n\n\u4efb\u53d6bi\uff0cbj\uff0c\u4f7f\u5f97bi\u662f\u7b2c\u4e8c\u5217\u4e2d\u7b2ci\u957f\u7684\uff0cbj\u662f\u7b2c\u4e8c\u5217\u4e2d\u7b2cj\u957f\u7684\uff0c\u800c\u4e14bi<bj;\n\n\u82e5\u4fdd\u8bc1\u7b2ci\u957f\u548c\u7b2ci\u957f\u5728\u4e00\u8d77,\u90a3\u4e48\u8fd9\u4e24\u5bf9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\uff1aans1=(ai\u2212bi)$^{2}$+(aj\u2212bj)$^{2}$\n\n\u82e5\u4e0d\u6309\u4e0a\u8ff0\u89c4\u5219\uff0c\u90a3\u4e48\u8fd9\u4e24\u5bf9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\uff1aans2=(ai\u2212bj)$^{2}$+(aj\u2212bi)$^{2}$\n\n\u4f5c\u5dee\uff1a\n\nans1-ans2\n\n=(ai\u2212bi)$^{2}$+(aj\u2212bj)$^{2}$-(aj\u2212bi)$^{2}$-(ai\u2212bj)$^{2}$\n\n=-2aibi-2ajbj+2ajbi+2aibj\n\n=-2ai(bi-bj)-2aj(bj-bi)\n\n=-2(ai-aj)(bi-bj)<0\n\n\u6240\u4ee5\u6309\u4e0a\u8ff0\u89c4\u5219\u6392\u5217\uff0c\u2211(ai\u2212bi)$^{2}$\u6700\u5c0f\n\n\u663e\u7136\uff0c\u53ea\u4ea4\u6362\u67d0\u4e00\u5217\uff0c\u4f7f\u5f97\u4e24\u5217\u5143\u7d20\u4e00\u4e00\u5bf9\u5e94\u6bd4\u8f83\u597d\u64cd\u4f5c\uff0c\n\n\u5982\u679c\u7b2c\u4e00\u5217\u662f\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u663e\u7136\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5c31\u662f\u9006\u5e8f\u5bf9\u6570\uff0c\u4f60\u6bcf\u6b21\u628a\u4e00\u4e2a\u5143\u7d20\u5411\u76ee\u6807\u4f4d\u7f6e\u79fb\u52a8\u4e00\u6b65\uff0c\u4e0e\u5b83\u6709\u5173\u7684\u9006\u5e8f\u5bf9\u6570\u5c31\u5c111\uff1b\n\n\u4e0d\u8fc7\u7b2c\u4e00\u5217\u5982\u679c\u662f\u4e71\u5e8f\uff0c\u90a3\u5c31\u6bd4\u8f83\u7ed5\u4e86\uff0c\u4ee5\u6837\u4f8b\u4e8c\u4e3a\u4f8b\uff1a\n```cpp\n4\n1 3 4 2\n1 7 2 4\n```\n\n\u6392\u540d\u4e3a1\u7684\u6570\u57281\u53f7\u4f4d\uff0c\u6392\u540d\u4e3a3\u7684\u6570\u57282\u53f7\u4f4d\uff0c\u6392\u540d\u4e3a4\u7684\u6570\u57283\u53f7\u4f4d\uff0c\u6392\u540d\u4e3a2\u7684\u6570\u57284\u53f7\u4f4d\uff1b\n\n\u4e8e\u662f\uff0c\u672c\u6765\u6b63\u513f\u516b\u7ecf\u7684\u6c42\u9006\u5e8f\u5bf9\u7684\u6811\u72b6\u6570\u7ec4\u662f\u8fd9\u6837\u7684\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/hc0hlaf0.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u73b0\u5728\uff0c\u5b83\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dl23neq7.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5f00\u59cb\u63d2\u5165\u7b2c\u4e8c\u5217\uff1a\n\n1\u7684\u6392\u540d\u662f1\uff0c\u63d2\u57281\u53f7\u4f4d\uff0c\u65e0\u9006\u5e8f\u5bf9\uff1b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vxi46xhf.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n7\u7684\u6392\u540d\u662f4\uff0c\u63d2\u57283\u53f7\u4f4d\uff0c\u65e0\u9006\u5e8f\u5bf9\uff1b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/npskztyk.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n2\u7684\u6392\u540d\u662f2\uff0c\u63d2\u57284\u53f7\u4f4d\uff0c\u65e0\u9006\u5e8f\u5bf9\uff1b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j3tbl0cv.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n4\u7684\u6392\u540d\u662f\u662f3\uff0c\u63d2\u57282\u53f7\u4f4d\uff0c\u51fa\u73b0\u4e24\u4e2a\u9006\u5e8f\u5bf9\uff1b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mrxife8b.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u81f3\u6b64\uff0c\u627e\u51fa\u6240\u6709\u9006\u5e8f\u5bf9\uff1b\n\n\u6240\u4ee5\uff0c\u5728\u5f00\u542f\u6811\u72b6\u6570\u7ec4\u627e\u9006\u5e8f\u5bf9\u4e4b\u524d\uff0c\u9884\u5904\u7406\u597d\u6bcf\u4e2a\u6392\u540d\u5728\u6811\u72b6\u6570\u7ec4\u7684\u4f4d\u7f6e\uff0c\u5373\u53ef\uff1b\n\nAC\u4ee3\u780110.30\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint read()\n{\n\tint xx=0,fh=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0')\n\t{\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\txx=xx*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn fh==-1?-xx:xx;\n}\nconst long long mod=99999997;\nstruct node{\n\tint ys;\n\tint pm;\n\tint bh;\n}a1[100010],a2[100010];\nbool cmp1(node x,node y)\n{\n\treturn x.ys<y.ys;\n}\nbool cmp2(node x,node y)\n{\n\treturn x.bh<y.bh;\n}\nint yxj[100010],n;\nlong long tr[100010],ans;\nlong long qm(long long x)\n{\n\twhile(x>=mod) x-=mod;\n\twhile(x<0) x+=mod;\n\treturn x;\n}\nint lbt(int x)\n{\n\treturn x&-x;\n}\nvoid xg(int i,long long x)\n{\n\tfor(;i<=n;i+=lbt(i))\n\ttr[i]=qm(tr[i]+x);\n}\nlong long xw(int i)\n{\n\tlong long sum=0;\n\tfor(;i>0;i-=lbt(i))\n\tsum=qm(sum+tr[i]);\n\treturn sum;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) a1[i].ys=read(),a1[i].bh=i;\n\tfor(int i=1;i<=n;++i) a2[i].ys=read(),a2[i].bh=i;\n\tsort(a1+1,a1+1+n,cmp1);\n\tsort(a2+1,a2+1+n,cmp1);\n\tfor(int i=1;i<=n;++i) \n\tyxj[i]=a1[i].bh;\n\tfor(int i=1;i<=n;++i) a2[i].pm=i;\n\tsort(a2+1,a2+1+n,cmp2);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\txg(yxj[a2[i].pm],1);\n\t\tans=qm(ans+xw(n)-xw(yxj[a2[i].pm]));\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1572442091,
        "uid": 120594,
        "name": "\u9f99\u00b7\u6d77\u6d41",
        "ccfLevel": 7,
        "title": "P1966 \u706b\u67f4\u6392\u961f"
    },
    {
        "content": "\u4eca\u5929\u505a\u8fd9\u4e2a\u9898\u76ee\u609f\u5230\u7684\u3002\n\n\u8fd9\u4e2a\u9898\u76ee\uff0c\u662f\u4e00\u79cd\u76ee\u6807\u6392\u5e8f\uff0c\u6240\u8c13\u76ee\u6807\u6392\u5e8f\uff08\u6211\u81ea\u5df1\u60f3\u5230\u7684\u4e00\u4e2a\u540d\u8bcd\uff09\uff0c\u5c31\u662f\u8981\u628a\u4ed6\u6392\u5230\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e0a\u3002\n\n\u5982\u679c\u6211\u4eec\u6709N\u4e2a\u5143\u7d20 \uff0c\u5176\u4e2d\u7b2ci\u4e2a\u7684\u76ee\u6807\u8981\u6392\u5230\u7b2ck\u4e2a\u4f4d\u7f6e\u4e0a\uff08k<=i)\uff0c\u5982\u679c\u662f\u5347\u5e8f\u6392\u5217\uff0c\u5b83\u7684\u4ef7\u503c\u53ef\u4ee5\u770b\u4f5ci\uff0c\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u706b\u67f4\u8981\u4ea4\u6362\u5230\u5927\u5bf9\u5927\uff0c\u5c0f\u5bf9\u5c0f\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u201c\u76ee\u6807\u6392\u5e8f\u201d\u3002\u867d\u7136\u9ad8\u5ea6\u662f100\uff0c\u5728\u8fd9\u4e2a\u961f\u5217\u6392\u7b2c\u4e94\u5927\uff0c\u4f46\u662f\u5fc5\u987b\u6392\u5230\u53e6\u4e00\u4e2a\u6570\u5217\u7684\u7b2c\u4e94\u53bb\uff0c\u5b83\u7684\u4ef7\u503c\u4ec5\u4ec5\u662f\u4e94\u800c\u5df2\u3002\n\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u5bf9c[\u7b2c\u4e00\u4e2a\u6570\u7ec4\u7b2ci\u4e2a\u6570\u6392\u5e8f\u524d\u7684\u4f4d\u7f6e]=\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7b2ci\u4e2a\u6570\u6392\u5e8f\u524d\u7684\u4f4d\u7f6e\uff0c\u5f52\u5e76\u6c42\u9006\u5e8f\u7684\u7406\u7531\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u5927\u5bf9\u5927\uff0c\u5c0f\u5bf9\u5c0f\uff0c\u524d\u8f88\u4eec\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u5f52\u5e76\u5927\u53d1\u597d\u3002\n\n\u9644\u4e0aAC\u4ee3\u7801\n\n\n\n\n\n\n\n```cpp\n#include<stdio.h>\nint total=0;\nint a[100010];\nint b[100010];\nint pa[100010];//\u7b2c\u4e00\u5217\u4f4d\u7f6e\nint pb[100010];//\u7b2c\u4e8c\u5217\u4f4d\u7f6e\nint c[100010]; \nvoid combine(int k[],int left,int right);\nvoid divid(int k[],int left,int right);\nvoid dividdown(int k[],int left,int right,int p[]);\nvoid combinedown(int k[],int left,int right,int p[]);\nint main()\n{\n    int n;\n    int i;\n    scanf(\"%d\",&n);\n    for(i=1; i<=n; i++)\n        scanf(\"%d\",&a[i]),pa[i]=i; \n        for(i=1; i<=n; i++)\n    scanf(\"%d\",&b[i]),pb[i]=i;          \n    dividdown(a,1,n,pa);//\u7528\u5f52\u5e76\u6392 \u5feb\u4e00\u4e9b\n    dividdown(b,1,n,pb); \n    for(i=1;i<=n;i++)\n    c[pa[i]]=pb[i];\n    divid(c,1,n);\n//    for(i=1;i<=n;i++)printf(\"%d \",c[i]);\n    //for(i=1; i<=n; i++)\n        //printf(\"%d \",a[i]);\n    //divid(1,n);\n        printf(\"%d\",total%99999997);\n}\nvoid divid(int k[],int left,int right)\n{\n    int mid;\n    mid=(left+right)/2;\n    if(left<right)\n    {\n        divid(k,left,mid);\n        divid(k,mid+1,right);\n        combine(k,left,right);\n    }\n}\nvoid combine(int k[],int left,int right)//\u6c42\u9006\u5e8f\u5bf9\n{\n    int temp[100010];\n    int front1,front2;\n    int i;\n    front1=left;\n    front2=(left+right)/2+1;\n    int close=1;\n    int mid=(left+right)/2;\n    while(front1<=mid&&front2<=right)\n    {\n        if(k[front1]<k[front2]) temp[close++]=k[front1++];\n        else \n        {\n        temp[close++]=k[front2++];\n    total+=(mid-front1+1)%99999997;\n    total=total%99999997;//\u522b\u5fd8\u4e86mo\n}\n    }\n    while(front1<=mid) temp[close++]=k[front1++];\n    while(front2<=right) temp[close++]=k[front2++];\n    for(i=1; i<close; i++)\n        k[i+left-1]=temp[i];\n}\nvoid dividdown(int k[],int left,int right,int p[])//\u540e\u9762\u662f\u5bf9\u521d\u59cb\u7684\u6392\u5e8f\uff0c\u52ff\u5fd8\u4ea4\u6362\u4f4d\u7f6e\n{{\n    int mid;\n    mid=(left+right)/2;\n    if(left<right)\n    {\n        dividdown(k,left,mid,p);\n        dividdown(k,mid+1,right,p);\n        combinedown(k,left,right,p);\n    }\n}\n}\nvoid combinedown(int k[],int left,int right,int p[])//\u5176\u5b9e\u597d\u50cf\u5347\u964d\u5e8f\u65e0\u6240\u8c13 \n{   \n    int temp[100010];\n    int tempp[100010];\n    int front1,front2;\n    int i;\n    front1=left;\n    front2=(left+right)/2+1;\n    int close=1;\n    int mid=(left+right)/2;\n    while(front1<=mid&&front2<=right)\n    {\n        if(k[front1]>k[front2]) temp[close++]=k[front1++],tempp[close-1]=p[front1-1];\n        else \n        {\n        temp[close++]=k[front2++],tempp[close-1]=p[front2-1];\n}\n    }\n    while(front1<=mid) temp[close++]=k[front1++],tempp[close-1]=p[front1-1];\n    while(front2<=right) temp[close++]=k[front2++],tempp[close-1]=p[front2-1];\n    for(i=1; i<close; i++)\n        k[i+left-1]=temp[i],p[i+left-1]=tempp[i];\n}\n```",
        "postTime": 1479560485,
        "uid": 21010,
        "name": "\u90aa\u738b\u771f\u773cRikka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "1.\u7531\u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c\n\n\u5c06\u6bcf\u4e00\u5217\u7684\u706b\u67f4\u5347\u5e8f\u6392\uff0c\u53d1\u73b0\u65b9\u5dee\u6700\u5c0f\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e00\u5217\u4e2d\u5e8f\u6570\u76f8\u540c\u7684\u5339\u914d\u3002\n\n\u56e0\u6b64\u60f3\u5230\u5c06\u706b\u67f4\u9ad8\u5ea6\u79bb\u6563\uff0c\u5f97\u5230\u4e24\u4e2a1..n\u7ec4\u6210\u7684\u5e8f\u5217\u3002\n\n2.\u53ef\u5c06\u7b2c\u4e00\u4e2a\u5e8f\u5217\u6bcf\u4e2a\u4f4d\u7f6ea[i]\u5206\u522b\u5bf9\u5e94i,\u4e8e\u662fb[i]\u4e5f\u53ef\u4ee5\u6620\u5c04\u5230\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u53ea\u9700\u5c061..n\u7684\u4e00\u4e2a\u5e8f\u5217\u53d8\u6362\u62101,2,3..n.\n\n3.\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u5373\u4e3a\u7b54\u6848\u3002\u6ce8\u610f\u53d6\u6a21\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define MO 99999997\nusing namespace std;\nint i,j,n;\nlong long ans=0;\nstruct ele\n{\n    int v, p;\n} a[100001],b[100001];\nint x[100001],y[100001],s[100001];\nint comp(ele a, ele b)\n{\n    return a.v<b.v;\n}\nvoid merge(int a, int b, int c)\n{\n    int t[100001];\n    int t1=a, t2=b+1, t3=a;\n    while (t3<=c) {\n        if (t1>b)\n            for (i=t2; i<=c; i++)\n                t[t3++]=x[i];\n        else if (t2>c)\n            for (i=t1; i<=b; i++)\n                t[t3++]=x[i];\n        else {\n            if (x[t1]>x[t2]) {\n                ans=(ans+c-t2+1)%MO;\n                t[t3++]=x[t1++];\n            }\n            else t[t3++]=x[t2++];\n        }\n    }\n    for (i=a; i<=c; i++)\n        x[i]=t[i];\n}\nvoid mergesort(int a, int b)\n{\n    if (a==b) return;\n    int mid=(a+b)>>1;\n    mergesort(a,mid);\n    mergesort(mid+1,b);\n    merge(a,mid,b);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++) {    \n        a[i].p=i;\n        scanf(\"%d\",&a[i].v);\n    }\n    for (i=1; i<=n; i++) {    \n        b[i].p=i;\n        scanf(\"%d\",&b[i].v);\n    }\n    sort(a+1,a+n+1,comp);\n    sort(b+1,b+n+1,comp);\n    for (i=1; i<=n; i++)\n        x[a[i].p]=i; //x[i]=j\u8868\u793a\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u6570\u662f\u7b2cj\u5c0f\u7684 \n    for (i=1; i<=n; i++)\n        y[b[i].p]=i;\n    for (i=1; i<=n; i++)\n        s[x[i]]=i; //x[i]\u6620\u5c04\u81f3i\u7684\u4f4d\u7f6e\n    for (i=1; i<=n; i++)\n        x[i]=s[y[i]];\n    //for (i=1; i<=n; i++) printf(\"%d \",x[i]);\n    mergesort(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1479387285,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\n~~\u5176\u5b9e\u4ee5\u524d\u5c31\u8fc7\u4e86\u5566\u4f46\u662f\u611f\u89c9\u65b0\u5b66\u7684\u6811\u72b6\u6570\u7ec4\u597d\uff08\u6211\uff09\u795e\uff08\u4e0d\uff09\u5947\uff08\u4f1a\uff09\u6240\u4ee5\u6211\u53c8\u56de\u6765\u5566~~\n\n\n------------\n\n### \t\u9996\u5148\uff0c\u548c\u5f52\u5e76\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\uff08\u72b9\u5fc6\u5f53\u5e74[\u9006\u5e8f\u5bf9](https://www.luogu.org/problem/P1908)\u7684\u521d\u5b66\u79bb\u6563\u5316\uff09\uff0c\n   - \u8fd9\u91cc\u5c31\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u79bb\u6563\u5316\uff1a\n   \uff08\u6bd4\u8f83\u4e0a\u4e00\u6b21\u849f\u84bb\u672c\u4eba\u7684\u5f52\u5e76\u6392\u5e8f\u79bb\u6563\u5316\uff0c\n \u8fd9\u6b21\u6bd4\u8f83\u4fdd\u9669\u7684\u9009\u62e9\u4e86\u65b0\u5f00\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u79bb\u6563\u5316\uff09\n   \n```cpp\n   \tsort(a + 1, a + 1 + n, cmp1);\n   \tsort(b + 1, b + 1 + n, cmp1);\n\n  \tfor (int i = 1; i <= n; i++) \n        \tc[a[i].ord].num = b[i].ord;\n\n\tfor (int i = 1; i <= n; i++) \n        \tc[i].ord = i;\n```\n    \n------------\n###     \u7136\u540e\uff0c\u5c31\u5230\u4e86\u7f8e\u5999\u7684\u6811\u72b6\u6570\u7ec4\u7684\u65f6\u5019\u4e86\uff0c\n- \u5148\u5efa\u4e00\u68f5\u5f88\u5927\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u7528\u6743\u503c\u4e3a\u4e0b\u6807\u5efa\u6811\uff0c\u6bcf\u4e00\u6b21\u8bfb\u5230\u4e00\u4e2a\u6570\uff0c\u5c31\u627e\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u4e2a\u6570\uff0c\u627e\u5230\u4e86\u4e4b\u540e\u52a0\u5230ans\u91cc\uff0c\u63a5\u7740\u66f4\u65b0\u7ebf\u6bb5\u6811\uff08\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570+1\uff09)\n\n~~\u867d\u7136\u6211\u5b66\u7684\u4e0d\u751a\u6e05\u6670\uff0c\u4f46\u662f\u6211\u4f1a\u80cc\u677f\u5b50\u554a~~\n\n- \u8fd9\u4e2a\u5c31\u662f\u80cc\u7684\u677f\u5b50\u4e86\uff08\u5176\u5b9e\u662f\u521d\u7ea7\u533a\u95f4\u95ee\u9898\u677f\u5b50\uff09\n```cpp\nint lowbit(int x) { return x & -x; }\nvoid modify(lld *t, int i, lld x) {\n   \t while (i <= n) {\n        t[i] += x;\n        i += lowbit(i);\n    }\n}\nlld query(lld *t, int i) {\n    lld sum = 0;\n    while (i) {\n        sum += t[i];\n        i -= lowbit(i);\n    }\n    return sum;\n}\nlld q(int r) { return (lld)query(d, r) * (r + 1) - query(id, r); }\nint main() {\n    scanf(\"%d%d\", &n, &m);\n\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%lld\", &a[i]);\n        modify(d, i, a[i] - a[i - 1]);\n        modify(id, i, i * (a[i] - a[i - 1]));\n    }\n    while (m--) {\n        lld opt, x, y, z;\n        scanf(\"%lld %lld %lld\", &opt, &x, &y);\n        if (opt == 0) {\n            scanf(\"%lld\", &z);\n            modify(d, x, z);\n            modify(id, x, x * z);\n            modify(d, y + 1, -z);\n            modify(id, y + 1, (y + 1) * (-z));\n        } else\n            printf(\"%lld\\n\", (lld)(q(y) - q(x - 1)));\n    }\n    return 0;\n}\n```\n\n\n- \u7136\u540e\u6bd4\u8f83\u91cd\u8981\uff08~~\u53ef\u4ee5\u76f4\u63a5\u6539~~\uff09\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u91cc\u5566\n\n\n```cpp\nvoid add(int i, int t) \n{\n    while (i <= n) \n    {\n        d[i] += t;\n        i += lowbit(i);\n    }\n}\nlong long query(long long x) \n{\n    long long cnt = 0;\n    while (x > 0) \n    {\n        cnt += d[x];\n        x -= lowbit(x);\n    }\n    return cnt;\n}\n```\n\n------------\n\n\u7136\u540e\uff0c\u6709\u4f4d\u5927\u4f6c\u51b7\u6f20\u63d0\u95ee\u849f\u84bb\uff1a\n### \u4f60\u4f1a\u8bc1\u660e\u5b83\u7684\u6b63\u786e\u6027\u5417\uff1f\n\n\u849f\u84bb\u4e00\u8138\u61f5\u903c\uff0c\uff0c\uff0c\u6211\u4e0d\u4f1a\u554a\uff0c\uff0c\uff0c\uff0c\u5624\u5624\u5624\u6211\u597d\u83dc\u554a\uff0c\uff0c\uff0c\u4e8e\u662f\u53bb\u627e\u9898\u89e3\uff1a\n \n\t\u8003\u8651\u6839\u636e\u503c\u6765\u5efa\u6811\u72b6\u6570\u7ec4 , \u521d\u59cb\u6811\u72b6\u6570\u7ec4\u4e3a\u5168 0\u3002\u73b0\u5728\u6309\u7167\u5e8f\u5217\u4ece\u5de6\u5230\u53f3\u5c06\u6570\u636e\u7684\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7684\u6570\u52a0\u4e00\uff0c\u4ee3\u8868\u53c8\u6709\u4e00\u4e2a\u6570\u51fa\u73b0\u3002\u56e0\u6b64\uff0c\u5728\u5faa\u73af\u5230\u7b2c i \u9879\u65f6\uff0c\u524d i - 1 \u9879\u5df2\u7ecf\u52a0\u5165\u5230\u6811\u72b6\u6570\u7ec4\u5185\u4e86 , \u6811\u72b6\u6570\u7ec4\u5185\u6bd4 a[i] \u5927\u7684\u90fd\u4f1a\u4e0e a[i] \u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e00\u5b9a\u51fa\u73b0\u7684\u66f4\u65e9\uff0c\u6240\u4ee5\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a **i - query(a[i])**\n\n**\u6ce8:query(a[i]):**\n\n    query(a[i]): \n\t  \u4ee3\u8868\u5728\u6811\u72b6\u6570\u7ec4\u5185\u8be2\u95ee 1 ~ a[i] \u9879\u7684\u524d\u7f00\u548c\n\n\n    \n###     \uff01\uff01\uff01\u6700\u540e\uff01\uff01\uff01\u4e00\u5b9a\u8981\u8bb0\u4f4f\uff01\uff01\u6811\u72b6\u6570\u7ec4\u7684\u7a7a\u95f4\u4e0d\u7528\u56db\u500d\uff08\u7ebf\u6bb5\u6811\u624d\u7528\uff09\u548cscanf\u8f93\u5165\u5f00long long\uff01\uff01\uff01\u6211\u592a\u83dc\u4e86\u545c\u545c\u545c ###\n\n~~\u987a\u4fbf\u7c98\u4e00\u4e0b\u5168\u4ee3\u7801(~~\u6539\u683c\u5f0f\u597d\u9ebb\u70e6\u554a~~)~~\uff08\u5c31\u53bb\u8bb0\u5f55\u91cc\u7ffb\u5c31\u597d\u4e86\u5440\uff0c\u6211\u53ef\u771f\u662f\u4e2a\u5c0f\u673a\u7075\u9b3c\uff09\n",
        "postTime": 1570283716,
        "uid": 183743,
        "name": "CuO\u540c\u5b66",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u66f4\u4f73qwq](https://blog.csdn.net/Flag_z/article/details/96027636)\n\n### \u5206\u6790\n\u5bf9\u4e24\u4e2a\u706b\u67f4\u76d2\u7684\u706b\u67f4\u9ad8\u5ea6**\u5206\u522b\u6392\u5e8f**\uff0c\u5f53\u4e24\u706b\u67f4\u76d2\u4e2d**\u6392\u5e8f\u5e8f\u5217\u53f7\u76f8\u7b49**\u7684\u706b\u67f4**\u4e00\u4e00\u5bf9\u5e94**\u65f6\u8ddd\u79bb\u6700\u5c0f\n \n### \u8bc1\u660e\uff1a\n\n\u4ee4a[1]<a[2] b[1]<b[2]\n\n(a[1]-b[1])* (a[1]-b[1])+(a[2]-b[2])* (a[2]-b[2])-(a[1]-b[2])*(a[1]-b[2])-(a[2]-b[1])*(a[2]-b[1])\n\n=-2a[1]*b[1]-2a[2]*b[2]+2a[1]*b[2]+2a[2]*b[1]\n\n=2(a[1]-a[2])(b[2]-b[1])<0  \n\u5f97\u8bc1\u3002\n\n\u627e\u5230\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u4e0e\u7b2c\u4e00\u5217\u706b\u67f4\u554aa[i]\u7684**\u5e8f\u5217\u53f7\u76f8\u7b49**\u7684\u706b\u67f4b[j]\u7684\u4f4d\u7f6ef[i]\uff0c\u67e5\u627ef[i]\u7684**\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570**\u5373\u4e3a\u6700\u540e\u7b54\u6848\u3002\n\n\u53ef\u7528**\u5f52\u5e76\u6392\u5e8f**\u6216\u8005**\u6811\u72b6\u6570\u7ec4**\u6c42\u9006\u5e8f\u5bf9\n\n\u5b8c\u7ed3\u6492\u82b1\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f\n### \u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=100005,mod=99999997;\nint n;\nstruct node{\n ll x;\n int id;\n}a[N],b[N];\nint c[N],d[N],f[N],f1[N];\nll ans=0;\nll read(){\n\tll sum=0,f=1;\n    char ch=getchar();\n    while(ch>'9'||ch<'0'){\n    \tif(ch=='-')f=-1;\n    \tch=getchar();\n\t}\n\t while(ch>='0'&&ch<='9'){\n    \tsum=(sum<<3)+(sum<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn sum*f;\n}\nint comp(node a,node b)\n{\n\treturn a.x<b.x;\n}\nvoid merge(int l,int r)\n{\n\tif(l>=r) return;\n\tint mid=(l+r)/2;\n\tmerge(l,mid);\n\tmerge(mid+1,r);\n\tint i=l,j=mid+1,k=l-1;\n    while(i<=mid&&j<=r)\n    { \n       k++;\n    \tif(f[i]>f[j])\n    \t{ \n    \t\tf1[k]=f[j];\n    \t\tans+=mid-i+1;\n    \t\tans%=mod;\n    \t\tj++;\n\t\t}\n\t\telse {\n\t\t\tf1[k]=f[i];\n\t\t\ti++;\n\t\t}\n\t}\n    while(i<=mid){k++;f1[k]=f[i];i++;}\n    while(j<=r){k++;f1[k]=f[j];j++;}\n\tfor(int i=l;i<=r;i++)\n\t{\n\t   f[i]=f1[i];\n    }\n}\nint main(){\n//\tfreopen(\"match.in\",\"r\",stdin);\n//\tfreopen(\"match.out\",\"w\",stdout);\n    n=read();\n    for(int i=1;i<=n;i++)\n    { a[i].x=read();\n\t  a[i].id=i;}\n\tfor(int i=1;i<=n;i++)\n    { b[i].x=read();\n\t  b[i].id=i;}\n\tsort(a+1,a+n+1,comp);\n\tsort(b+1,b+n+1,comp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tc[a[i].id]=i;\n\t    d[i]=b[i].id;\n\t}\t\n\tfor(int i=1;i<=n;i++){\n    f[i]=d[c[i]];\n\t}\n    merge(1,n);\n    cout<<ans;\n\treturn 0;\n} \n```\n",
        "postTime": 1564661465,
        "uid": 100708,
        "name": "Trilarflagz",
        "ccfLevel": 0,
        "title": "\u3010NOIP2013\u63d0\u9ad8\u7ec4 day1\u3011\u706b\u67f4\u6392\u961f"
    },
    {
        "content": "\u770b\u4e86\u770b\u524d\u9762\u7684\u9898\u89e3\uff0c\u849f\u84bb\u90fd\u4e0d\u4f1a\uff0c\u53ea\u4f1a\u66b4\u529b\u554a\u3002\n\n\u4e0d\u8fc7\u7206\u641c\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u8ba4\u771f\u5ba1\u9898\u3002\u9898\u76ee\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\u4e00\u662f\u4f7f\u2211(ai\u2212bi)^2\u6700\u5c0f\uff0c\u4e8c\u662f\u540c\u65f6\u4f7f\u4ea4\u6362\u6b21\u6570\u6700\u5c11\u3002\u6211\u4eec\u5148\u770b\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\u8bbe\u7b2c\u4e00\u5217\u6709\u4e24\u4f4d\u6570\u4e3aa,b\uff08a<b\uff09,\u7b2c\u4e8c\u5217\u6709\u4e24\u4f4d\u6570c,d(c<d)\u3002\u8fd9\u65f6\u6709\u4e24\u79cd\u5339\u914d\u60c5\u51b5a->c,b->d\u6216a->d,b->c\u3002\u8ba9\u4e24\u5f0f\u5b50\u76f8\u51cf\u3002\n\n(a-c)^2+(b-d)^2 - (a-d)^2+(b-c)^2\n\na^2+c^2-2ac+b^2+d^2-2bd - (a^2+d^2-2ad+b^2+c^2-2bc)\n\n2ad-2ac+2bc-2bd\n\n2a(d-c)+2b(c-d)\n\n(2a-2b)(d-c)<0 (a<b,c<d)\n\n\u663e\u7136\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e5f\u5c31\u662f\u5c0f\u7684\u914d\u5c0f\u7684\uff0c\u5927\u7684\u914d\u5927\u7684\u4f7f\u2211(ai\u2212bi)^2\u6700\u5c0f\uff0c\u6709\u591a\u4e2a\u5143\u7d20\u4e5f\u6210\u7acb\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u6211\u4eec\u77e5\u9053\u4e86\u8981\u5c0f\u7684\u914d\u5c0f\u7684\uff0c\u5927\u7684\u914d\u5927\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u7528sort\u89e3\u51b3\n```\nsort(a+1,a+n+1)\nsort(b+1,b+n+1)\n```\n\u5b8c\u7f8e\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff01\uff01\n\n\u8bc1\u660e\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4f7f\u4ea4\u6362\u6b21\u6570\u6700\u5c11\u7684\u529e\u6cd5\u5c31\u8981\u7528**\u8d2a\u5fc3**\u7684\u601d\u60f3\u4e86\n\n\u7531\u4e8e\u53ea\u80fd\u4ea4\u6362\u76f8\u90bb\u7684\u4e24\u6839\u706b\u67f4\uff0c\u6240\u4ee5\u8981\u4ea4\u6362\u7684\u706b\u67f4\u4e0e\u76ee\u6807\u5730\u70b9\u8d8a\u8fd1\u8d8a\u597d\uff0c\u770b\u4f8b\u5b50\uff1a\n\n```\na:1 2 3\nb:2 3 1\n```\n\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u51fa\u53d1\uff0ca\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u5176\u914d\u5bf9\u7684b\u4e2d\u5143\u7d20\uff081\uff09\u8ddd\u79bb\u4e3a2\uff0cb\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0e\u5176\u914d\u5bf9\u7684a\u4e2d\u5143\u7d20\uff082\uff09\u8ddd\u79bb\u4e3a1\u3002\u90a3\u4e48\uff0c\u663e\u7136\u662f\u4ea4\u6362a\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u4e0d\u4ec5\u4f7f\u7b2c\u4e00\u4e2a\u5143\u7d20\u6210\u529f\u914d\u5bf9\uff0c\u8fd8\u5c3d\u53ef\u80fd\u7684\u4f7f\u4ea4\u6362\u6b21\u6570\u6700\u5c11\u3002\u4e5f\u4e0d\u7528\u62c5\u5fc3\u8d2a\u5fc3\u9519\u8bef\uff0c\u56e0\u4e3a\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u5339\u914d\u4e0d\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u5143\u7d20\u7684\u5339\u914d\u60c5\u51b5\u3002\u8d2a\u5fc3**\u221a**\n\n\u7efc\u4e0a\uff0c\u66b4\u529b\u5c31\u53ef\u4ee5\u6253\u51fa\u6765\u4e86...\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nlong long mapp[100001];\nlong long mappp[100001];\nlong long mo=99999997;\nlong long a[100001],b[100001],c[100001],d[100001],e[100001],f[100001],n,ans;\nint read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*f;\n}\nvoid print(long long x) {\n\tif(x<0) {\n\t\tputchar('-');\n\t\tprint(-x);\n\t}\n\tif(x<=9)putchar(x+'0');\n\telse {\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nint main(){\n\t//freopen(\"match.in\",\"r\",stdin);\n//freopen(\"match.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tc[i]=a[i];\n\t\te[a[i]]=i;\t\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tb[i]=read();\n\t\td[i]=b[i];\n\t\tf[b[i]]=i;\n\t}\t\n\t//e\u8bb0\u5f55a\u4f4d\u7f6e\n\t//f\u8bb0\u5f55b\u4f4d\u7f6e\n\t//c->d\n\t//d->c\n\tsort(c+1,c+n+1);\n\tsort(d+1,d+n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tmapp[c[i]]=d[i];\n\t\tmappp[d[i]]=c[i];//\u53ef\u4ee5\u7406\u89e3\u4e3a\u6620\u5c04\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[mapp[a[i]]]==e[mappp[b[i]]]){\n\t\t\tif(mapp[a[i]]==b[i]){\n\t\t\t\tcontinue;\t\n\t\t\t}\n\t\t\telse{\n\t\t\tans+=(f[mapp[a[i]]]-i)%mo;\n\t\t\tfor(int j=f[mapp[a[i]]];j>i;j--){\n\t\t\t\tb[j]=b[j-1];\n\t\t\t\tf[b[j]]++;//\u8ddd\u79bb\u8981++\n\t\t\t}\n\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif(f[mapp[a[i]]]<e[mappp[b[i]]]){\n\t\t\tans+=(f[mapp[a[i]]]-i)%mo;\n\t\t\tfor(int j=f[mapp[a[i]]];j>i;j--){\n\t\t\t\tb[j]=b[j-1];\n\t\t\t\tf[b[j]]++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\tans+=(e[mappp[b[i]]]-i)%mo;\n\t\t\tfor(int j=e[mappp[b[i]]];j>i;j--){\n\t\t\t\ta[j]=a[j-1];\n\t\t\t\te[a[j]]++;\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t}\n\tans=ans%mo;\n\tprint(ans);\n}\n```\n\u5f88\u9057\u61be\uff0c\u8fd9\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u6211\u52a0\u4e86\u70b9\u201c\u6599\u201d\uff0c\u5438\u6c27\u6c14\u53ea\u80fd\u5f9790\u5206\u3002\u8fd9\u91cc\uff0c\u6211\u60f3\u8ba9~~\u95f2\u5f97\u65e0\u804a\u7684~~\u5404\u4f4d\u81ea\u5df1\u4f18\u5316\u3002\uff08~~\u624d\u4e0d\u662f\u6211\u61d2\u5f97\u518d\u4f18\u5316\u4e86~~\uff09\uff1a\uff09\n\n\u5982\u679c\u6539\u6210\u529f\u4e86\uff0c\u8bf7\u6536\u6211\u4e00\u53e5\uff1aOrz!!!",
        "postTime": 1563164256,
        "uid": 187772,
        "name": "\u8d85\u7ea7\u5c0f\u5468",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "    \u6211\u7684\u7b2c\u56db\u7bc7\u9898\u89e3\u3002\uff08\u8bf7\u5927\u4f6c\u4eec\u591a\u6307\u6559\u3002\u5f53\u7136\uff0c\u5982\u679c\u6709\u770b\u4e0d\u61c2\u7684\u5730\u65b9\u6b22\u8fce\u548c\u6211\u79c1\u4fe1\u4ea4\u6d41\u3002\uff09\n    \u672c\u9898\u6bd4\u8f83\u5de7\u5999\u3002\u5176\u4e00\uff0c\u5728\u4e8e\u4e00\u4e2a\u6570\u5b66\u8bc1\u660e\uff1a\u8ba9b\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u548ca\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5373\u53ef\u6c42\u51fa\u6700\u4f18\u89e3\u3002\u8bc1\u660e\u5982\u4e0b\uff1a\u8bbe\u56db\u4e2a\u6570a1<a2 b1<b2. \u82e5a1b1+a2b2\u4e0d\u662f\u6700\u5927\u7684\uff0c\u5219a1b2+a2b1\u4e00\u5b9a\u6bd4\u5b83\u5927\u3002\u5373a1b1+a2b2<a1b2+a2b1. \u79fb\u9879\u5316\u7b80\uff0c\u5f97a1*(b2-b1)>a2*(b2-b1). \u7531\u4e8eb1<b2,\u5219a1>a2,\u4e0e\u9898\u8bbe\u4e0d\u7b26\uff0c\u6240\u4ee5a1b1+a2b2\u4e00\u5b9a\u662f\u6700\u5927\u7684\u3002\n    \u5176\u4e8c\uff0c\u672c\u9898\u53ef\u4ee5\u5229\u7528\u6811\u72b6\u6570\u7ec4\u3002\u4ea4\u6362\u6b21\u6570\uff0c\u5b9e\u5219\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u53ea\u6709\u9006\u5e8f\u5bf9\u624d\u9700\u8981\u4ea4\u6362\uff0c\u800c\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u5341\u5206\u65b9\u4fbf\uff0c\u53ea\u9700\u5229\u7528\u524d\u7f00\u548c\u601d\u60f3\u3002\u6240\u4ee5\u5c31\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801\u3002\n    \uff08\u4ee3\u7801\u4e2d\u5feb\u8bfb\u90e8\u5206\u5df2\u5220\u53bb\uff0c\u590d\u5236\u7c98\u8d34\u8bf7\u614e\u91cd\uff09\n    #include<cstdio>\n    #include<algorithm>\n    using namespace std;\n    const int N=200005;\n    const int mod=99999997;\n    int t[N],n,a[N],b[N],c[N],ad[N],bd[N],ans;\n    int lt(int k){\n\t    return k&-k;\n    }\n    void add(int k,int num){//\u6dfb\u52a0\n\t    while(k<=n) t[k]+=num,t[k]%=mod,k+=lt(k);\n    }\n    int calc(int k){//\u7edf\u8ba1\n\t\tint s=0;\n\t\twhile(k) s+=t[k],s%=mod,k-=lt(k);\n\t\treturn s%mod;\n\t}\n\tbool cmpa(int p,int q){\n\t\treturn a[p]<a[q];\n\t}\n\tbool cmpb(int p,int q){\n\t\treturn b[p]<b[q];\n\t}\n\tint main(){\n\t\tfast_read(n);\n\t\tint i;\n\t\tfor(i=1;i<=n;i++) fast_read(a[i]),ad[i]=i;\n\t\tfor(i=1;i<=n;i++) fast_read(b[i]),bd[i]=i;\n\t\tsort(ad+1,ad+1+n,cmpa);\n\t\tsort(bd+1,bd+1+n,cmpb);\n\t\tfor(i=1;i<=n;i++) c[bd[i]]=ad[i];\n\t\tfor(i=n;i>=1;i--) add(c[i],1),ans+=calc(c[i]-1),ans%=mod;//\u6c42\u9006\u5e8f\u5bf9\u7684\u6807\u51c6\u5199\u6cd5\u54e6\n\t\tprintf(\"%d\",ans%mod);//\u4e0d\u8981\u5fd8\u8bb0\u53d6\u6a21\n\t\treturn 0;\n\t}\n",
        "postTime": 1528866466,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u9006\u5e8f\u5bf9\u7684\u6982\u5ff5\u6211\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5173\u4e8e\u8fd9\u4e2a\u6c42\u9006\u5e8f\u5bf9\u7684\u95ee\u9898\uff0c\u901a\u4fd7\u7684\u65b9\u6cd5\u81ea\u7136\u662f\u8981\u4e48\u904d\u5386O\uff08n^2),\u8981\u4e48\u5f52\u5e76\u6392\u5e8f\uff08nlog n ),\u90a3\u4e48\u5982\u4f55\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\u5462\uff1f\n\n\u4e0b\u9762\u770b\u4e00\u9053\u9898\u76ee\n\n\u6db5\u6db5\u6709\u4e24\u76d2\u706b\u67f4\uff0c\u6bcf\u76d2\u88c5\u6709 n \u6839\u706b\u67f4\uff0c\u6bcf\u6839\u706b\u67f4\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u73b0\u5728\u5c06\u6bcf\u76d2\u4e2d\u7684\u706b\u67f4\u5404\u81ea\u6392\u6210\u4e00\u5217\uff0c \u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c \u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a \u2211(ai-bi)^2\n\n\u5176\u4e2d ai \u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u4e2d\u7b2c i \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\uff0cbi \u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u7b2c i \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u4f60\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\u8bf7\u95ee\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff1f\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,997 \u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n\u6211\u5c06\u57fa\u4e8e\u8fd9\u9898\u8bb2\u4e0b\u53bb\n\n\u9996\u5148\u901a\u8fc7\u6570\u5b66\u8bc1\u660e\u52a0\u4e0a\u79bb\u6563\u5316\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6570\u7ec4c[i],\u542b\u4e49\u5c31\u662f\u5bf9\u4e8ea\u706b\u67f4\u76d2\u4e2d\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6ei\uff0c\u5728b\u4e2d\u672c\u8be5\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff08\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\uff09\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u5728c[i]\u6570\u7ec4\u4e2d\u6c42\u9006\u5e8f\u5bf9\u7684\u95ee\u9898\n\n\u4e0b\u9762\u6211\u63d0\u4f9b\u5173\u952e\u4ee3\u7801\n\nvoid add(int x,int y){//\u6dfb\u52a0 \n\n\tfor(;x<=n;x+=x&-x)\n    \n\t\td[x]+=y;\n        \n}\n\n\nint ask(int x){//\u8be2\u95ee\u524d\u7f00\u548c \n\t\n    int y=0;\n    \n\tfor(;x;x-=x&-x)\n    \n\t\ty+=d[x];\n        \n\treturn y;\n    \n}\n\nfor(int i=n;i>=1;i--){\n\n\tadd(c[i],1);\n    \n\tans+=ask(c[i]-1);\n}\n\n\u6700\u540e\u8f93\u51faans\u5c31\u597d\u4e86\n\n\u95ee\u4ec0\u4e48\u5462\uff1f\uff1f\uff1f\n\n\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\n\n\u5047\u8bbe\u5728ans+=ask(c[i]-1)\u4e4b\u4e2d,\u73b0\u5728i=i0\uff0c\u6709\u524d\u7f00\u53ef\u4ee5\u7ed9\u4f60\u52a0,\u90a3\u4e48\u8fd9\u4e2a\u524d\u7f00\u662f\u600e\u4e48\u6765\u7684\u5462?\n\n\u5f88\u663e\u7136,\u662f\u901a\u8fc7\u7b2c\u4e00\u6b65\u4e2d\u6765\u7684.\u90a3\u4e48\u6211\u4eec\u53d1\u73b0,\u7531\u4e8ei\u662f\u4ecen\u9012\u51cf,\u5728c[i]\u4e2d\uff0c\u4e00\u5b9a\u6709\u4e4b\u524d\u524d\u7f00\u548c\u503c\u4e2a\u6570\u4f4d\u4e8e\u73b0\u5728\u7684\u4f4d\u7f6e\u4e4b\u524d\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u987a\u5e8f\u7684\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u8fd8\u8981\u5728c[i0]\u4e4b\u524d\uff0c\u4e5f\u5c31\u662f\u5c0f\u4e8ei0\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u6c42\u524d\u7f00\u548c\u5c31\u80fd\u77e5\u9053\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u7531\u6b64\u539f\u7406\u8ba1\u7b97\u9006\u5e8f\u5bf9\n\n\n",
        "postTime": 1518090326,
        "uid": 63019,
        "name": "\u661f\u661f\u4e4b\u706b",
        "ccfLevel": 0,
        "title": "\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9"
    },
    {
        "content": "## \u77e5\u8bc6\n\n- \u9006\u5e8f\u5bf9\n\n## \u601d\u8def\n\n\u53e3\u80e1\u8bc1\u660e:\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u53ea\u5bf9\u5176\u4e2d\u4e00\u884c\u505a\u4ea4\u6362\u3002\n\n\u8bbe\u5e8f\u5217\u4e2d\u4efb\u610f\u4e24\u4f4d\u7f6e $i, j$ \u90fd\u6ee1\u8db3 $a_i < a_j$\n\n\u90a3\u4e48\u6709\u4e24\u79cd\u51b3\u7b56: \n\n$d_1 = (a_i - b_i) ^ 2 + (a_j - b_j) ^ 2$\n\u6216\u8005\n$d_2 = (a_i - b_j) ^ 2 + (a_j - b_i) ^ 2$\n\n\u89e3\u4e0d\u7b49\u5f0f $d1 > d2$, \u6709 $b_i * (a_j - a_i) > b_j * (a_j - a_i)$\n\n\u53c8\u56e0\u4e3a $a_i < a_j$, \u5219 $d1 > d2$ \u65f6\u5fc5\u6709 $b_i > b_j$\n\n\u540c\u7406\u53ef\u8bc1 $d1 < d2$ \u65f6 $b_i < b_j$ \n\n\u7efc\u4e0a\u6211\u4eec\u5f97\u5230\u7ed3\u8bba\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u5728 $a, b$ \u4e2d\u6392\u540d $r1, r2$ \u6ee1\u8db3 $r1 = r2$ \u65f6\u6709\u6700\u4f18\u65b9\u6848\u3002\n\n\u4e00\u4e2a\u7ed3\u8bba\uff1a\u628a\u4e00\u4e2a $1...n$ \u7684\u6392\u5217 $p$ \u90bb\u9879\u4ea4\u6362\uff0c\u5f97\u5230 $p_i = i$ \u7684\u6392\u5217\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\uff0c\u7b49\u4e8e $p$ \u4e2d\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u6211\u4eec\u628a $a, b$ \u4e0d\u53bb\u91cd\u5730\u79bb\u6563\u5316\uff0c\u518d\u628a\u5176\u4e2d\u4e00\u4e2a\u770b\u6210 $1...n$ \u7684\u6392\u5217\uff0c\u6620\u5c04\u6c42\u51fa\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u5e8f\u5217\uff08\u82e5 $a_i = b_j$\uff0c \u5219 $b'_j = i$\uff09\uff0c\u518d\u6c42\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\n\n\n## Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace input {\n\tbool Sign;\n\ttemplate <typename T>\n\t\n\tinline void read(T &a) {\n\t\tregister char ch = getchar();\n\t\twhile(!isdigit(ch) && ch != '-') ch = getchar();\n\t\ta = (Sign = (ch == '-')) ? 0 : ch - 48;\n\t\twhile(isdigit(ch = getchar())) a = a * 10 + ch - 48;\n\t\ta = Sign ? -a : a;\n\t}\n}\nusing input::read;\n\nconst int N = 1e5 + 5;\nconst int MOD = 99999997;\nint n, a[N], b[N], rk[N], pos[N];\nset<int, int> st;\n\nnamespace TreeArr {\n\t#define lowbit(x) (x & -x)\n\t\n\tint Sum[N];\n\t\n\tinline void modify(int pos, int val) {\n\t\twhile(pos <= n) Sum[pos] += val, pos += lowbit(pos);\n\t}\n\t\n\tinline int query(int pos) {\n\t\tint res = 0;\n\t\twhile(pos) res += Sum[pos], pos -= lowbit(pos);\n\t\treturn res;\n\t}\n}\nusing namespace TreeArr;\n\ninline bool cmp1(int A, int B) {\n\treturn a[A] > a[B];\n}\n\ninline bool cmp2(int A, int B) {\n\treturn b[A] > b[B];\n}\n\nint main() {\n\t//freopen(\"data.in\", \"r\", stdin);\n\t\n\tread(n);\n\tfor(int i = 1; i <= n; ++i) read(a[i]), rk[i] = i;\n\tsort(rk + 1, rk + n + 1, cmp1);\n\tfor(int i = 1; i <= n; ++i) a[rk[i]] = i;\n\tfor(int i = 1; i <= n; ++i) read(b[i]), rk[i] = i;\n\tsort(rk + 1, rk + n + 1, cmp2);\n\tfor(int i = 1; i <= n; ++i) b[rk[i]] = i;\n\t\n\tfor(int i = 1; i <= n; ++i) pos[a[i]] = i;\n\tfor(int i = 1; i <= n; ++i) b[i] = pos[b[i]];\n\t\n\tint ans = 0;\n\tmodify(b[n], 1);\n\tfor(int i = n - 1; i >= 1; --i) {\n\t\tans = (ans + query(b[i])) % MOD;\n\t\tmodify(b[i], 1);\n\t}\n\t\n\tprintf(\"%d\\n\", ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1572955467,
        "uid": 75520,
        "name": "Merc03",
        "ccfLevel": 7,
        "title": "[P1966] \u706b\u67f4\u6392\u961f"
    },
    {
        "content": "\n\u03c3(ai \u2212 bi)^2 = \u03c3(ai^2 + bi^2 \u2212 2aibi)\n\n\u8003\u8651\u03c3(ai2 + bi2)\uff0c\u6700\u5927\u5316\u03c3 2aibi\u5373\u53ef\n\n## tips\uff1a\n\n\u2022 ma[],mb[]\u5b58\u7684\u4e0d\u662f\u8fd9\u4e00\u4f4d\u5bf9\u5e94\u6570\u5728\u8fd9\u4e9b\u6570\u4e2d\u7684\u6392\u540d\uff0c\u800c\u662f\u6392\u540d\u4e3ai\u7684\u6570\u5bf9\u5e94\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807(or\u7f16\u53f7\uff1f)\n\n\u2022 \u5229\u7528\u4e0b\u6807\u7684\u9012\u589e\u6027\uff0c\u76f8\u5f53\u4e8e\u56fa\u5b9a\u4e00\u6392\uff0c\u53e6\u4e00\u6392\u4e0d\u65ad\u4ea4\u6362\u5e8f\u5217\u76f8\u90bb\u4e24\u4e2a\u6570\n\n\u2022 c[]\u4e0b\u6807\u5373a[]\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7(\u5f53\u5982\u4e5f\u662f\u4e0b\u6807hhh)\uff0c\u503c\u662f\u5bf9\u5e94b\u7684\u7b2ck\u5c0f\u7684\u6570\n\u7684\u7f16\u53f7\n\nexample: \n\n      a[]={2,3,1,4};\n      b[]={3,2,1,4};\n      c[]={2,1,3,4};\n\n\u2022\u6240\u4ee5\uff0cc[]\u5176\u5b9e\u662f\u76ee\u6807\u72b6\u6001\uff0c\u4e0d\u8fc7\u7531\u4e8e\u4ece\u5f53\u524d\u72b6\u6001\u5230\u76ee\u6807\u72b6\u6001\u548c\u4ece\u76ee\u6807\u72b6\u6001\u5230\u5f53\u524d\u72b6\u6001\u662f\u53ef\u9006\u7684\uff0c\u4ee5\u6700\u5c11\u6b21\u6570\u4ece\u5f53\u524d\u72b6\u6001\u5230\u76ee\u6807\u72b6\u6001\u548c\u4ee5\u6700\u5c11\u6b21\u6570\u4ece\u76ee\u6807\u72b6\u6001\u5230\u5f53\u524d\u72b6\u6001\u662f\u662f\u7b49\u6548\u7684\uff0c\u76f4\u63a5\u9006\u5e8f\u5bf9\u8ba1\u6570\u5373\u53ef\n\nexample: \n\n      a[]={1,2,3,4,5};\n      b[]={1,2,3,4,5};\n      c[]={1,2,3,4,5};\n         \n\n\u2022\u521d\u59cb\u65f6\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a0\uff0c\u6240\u4ee5\u201c\u663e\u7136\u662f\u51cf\u5c11\u4f18\uff0c\u800c\u4e14\u6bcf\u6b21\u4e00\u5b9a\u80fd\u627e\u5230\u9006\u5e8f\u5bf9\u51cf\u5c11\u7684\u4ea4\u6362\u4f4d\u7f6e\u201d\n\n##\u9006\u5e8f\u5bf9\n\n\u8fd9\u91cc\u7528\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\n\u7b80\u5355\u8bf4\u4e0b(~~\u4e0d\u662f\u4e3a\u4e86\u6c34\u5b57\u6570~~)\n\n        for(int i=n;i>=1;i--){\n        add(c[i]);\n        ans=(ans+query(c[i]-1))%MOD;\n    }\n\n\u5012\u5e8f\u63d2\u5165\uff0c\u67e5\u8be2<=\u8fd9\u4e2a\u6570-1\u7684\u6570\u7684\u4e2a\u6570\n\u5012\u5e8f\u4fdd\u8bc1\u4e86\u67e5\u8be2\u5230\u7684\u6570\u4e0b\u6807\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u4e0b\u6807\n\u67e5\u8be2<=\u8fd9\u4e2a\u6570-1\u7684\u6570\u7684\u4e2a\u6570\u4fdd\u8bc1\u4e86\u67e5\u8be2\u5230\u7684\u6570\u5c0f\u4e8e\u8fd9\u4e2a\u6570\n\n~~\u4e0d\u77e5\u9053\u7406\u89e3\u7684\u5bf9\u4e0d\u5bf9~~\n\n## code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100050,MOD=99999997;\nint n,ans;\nint a[N],b[N];\nint ma[N],mb[N];\nint c[N];\nint tree[N];\nbool cmp1(int x,int y){\n\treturn a[x]<a[y];\n}\nbool cmp2(int x,int y){\n\treturn b[x]<b[y];\n}\nint lowbit(int x){\n\treturn x&-x;\n}\nvoid add(int x){\n\twhile(x<=n){\n\t\ttree[x]+=1;x+=lowbit(x);\n\t}\n}\nint query(int x){\n\tint sum=0;\n\twhile(x>=1){\n\t\tsum+=tree[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn sum;\n}\n//\u6811\u72b6\u6570\u7ec4\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){cin>>a[i];ma[i]=i;//\u6807\u53f7\uff0c\u4e0b\u540c}\n\tfor(int i=1;i<=n;i++){cin>>b[i];mb[i]=i;}\n\tsort(ma+1,ma+1+n,cmp1);sort(mb+1,mb+1+n,cmp2);//\u6392\u5e8f\u4f7fma[i]\u4e0emb[i]\u5bf9\u5e94\n\tfor(int i=1;i<=n;i++)c[ma[i]]=mb[i];//\u76ee\u6807\u72b6\u6001\n\tfor(int i=n;i>=1;i--){\n\t\tadd(c[i]);\n\t\tans=(ans+query(c[i]-1))%MOD;\n\t}//\u9006\u5e8f\u5bf9\u8ba1\u6570\n\tcout<<ans%MOD<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1571843974,
        "uid": 149142,
        "name": "\u5feb\u4e50\u4e00\u79cd\u9ebb\u75f9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P1966\u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "> [P1966](https://www.luogu.org/problem/P1966).\n\n---\n\nChangelog\uff1a\u7b80\u5316\u9898\u89e3\uff0c\u4fee\u590d\u4e86 $\\LaTeX$\uff0c\u66f4\u65b0\u4ee3\u7801\u3002\n\n---\n\n\u7ed9\u5b9a\u4e24\u4e2a\u5e8f\u5217 $a_{1 \\cdots n}, b_{1 \\cdots n}$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u5c06\u4efb\u610f\u5e8f\u5217\u4e2d\u76f8\u90bb\u4e24\u4f4d\u7f6e\u4ea4\u6362\u3002\n\n\u6c42\uff1a\u8981\u4f7f $\\sum (a_i - b_i)^2$ \u53d6\u6700\u5c0f\u503c\uff0c\u6240\u9700\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n$1 \\leqslant n \\leqslant 10^5$\uff0c$0 \\leqslant a_i, b_i < 2^{31}$\uff0c$\\forall\\ 1 \\leqslant i < j \\leqslant n,\\,a_i \\ne a_j \\land b_i \\ne b_j$\u3002\n\n---\n\n$$\\sum(a_i - b_i)^2 = \\sum(a_i^2 + b_i^2 - 2 a_i b_i),$$\n\n\u4e0a\u5f0f\u53d6\u6700\u5c0f\u503c\u7b49\u4ef7\u4e8e $\\sum a_i b_i$ \u53d6\u6700\u5927\u503c\u3002\n\n---\n\n\u82e5 $a_i \\leqslant a_j$\uff0c$b_p \\leqslant b_q$\uff0c\n\n\u5219\n\n$$(a_i b_p + a_j b_q) - (a_i b_q + a_j b_p) = (a_i - a_j) (b_p - b_q) \\geqslant 0,$$\n\n\u6545 $a_i b_p + a_j b_q \\geqslant a_i b_q + a_j b_p.$\n\n\u7efc\u4e0a\uff0c\u5e94\u4f7f $a, b$ \u5185\u90e8\u76f8\u5bf9\u987a\u5e8f\u4e00\u81f4\u3002\n\n---\n\n\u6bd4\u8f83\u76f4\u89c2\u5730\uff0c\u8981\u4f7f\u64cd\u4f5c\u6b21\u6570\u6700\u5c0f\uff0c\u6709\u4e00\u79cd\u53ef\u884c\u65b9\u6848\u662f\uff1a\u53ea\u5bf9 $b$ \u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u4e4b\u5185\u90e8\u76f8\u5bf9\u987a\u5e8f\u4e0e $a$ \u4e00\u81f4\u3002\n\n\u56e0\u4e3a\u662f\u76f8\u5bf9\u987a\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u95ee\u9898\u53d8\u4e3a\u4f7f $a, b$ \u5b8c\u5168\u4e00\u81f4\u3002\n\n\u8bbe $c_{a_i} = i$\uff0c\u5219 $b_i$ \u5e94\u8be5\u6700\u7ec8\u79fb\u5230 $b$ \u4e2d\u4f4d\u7f6e $c_{b_i}$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u518d\u8fdb\u884c\u4e00\u6ce2\u5904\u7406\uff1a$b_i \\leftarrow c_{b_i}$\u3002\n\n\u5904\u7406\u540e\uff0c\u95ee\u9898\u53d8\u4e3a\u4f7f $b_i$ \u5347\u5e8f\u3002\n\n\u6b64\u65f6\u7684\u64cd\u4f5c\u6b21\u6570\u5373\u4e3a $b$ \u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u53ef\u7528\u5f52\u5e76\u6216\u6811\u72b6\u6570\u7ec4\u6c42\u51fa\u3002\n\n---\n\n\u4ee3\u7801\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u3002\n\n```cpp\n# include <cstdio>\n# include <cstring>\n# include <algorithm>\n\nnamespace Main {\n    namespace Source {\n        typedef unsigned int uint;\n        template <const uint N>\n        class Fenwick_tree {\n            uint tree[N + 1];\n            static inline const uint lowbit(const uint x) { return x bitand ~x + 1; }\n        public:\n            Fenwick_tree() { memset(tree, 0, sizeof tree); }\n            inline const void modify(uint x) { while (x and x <= N) ++tree[x], x += lowbit(x); }\n            inline const uint query(uint x)\n            { uint r(0); while (x and x <= N) r += tree[x], x ^= lowbit(x); return r;}\n        };\n    }\n    using namespace Source;\n    enum { N = (const uint)1e5 };\n    static const uint Mod(1e8 - 3);\n    static uint n;\n    static uint a[N], b[N], c[N];\n    static Fenwick_tree<N> u;\n    static uint ans;\n    static inline const void discrete(uint a[N]) {\n        static uint t[N];\n        for (register uint i(0); i < n; ++i) t[i] = a[i];\n        std::sort(&t[0], &t[n]);\n        for (register uint i(0); i < n; ++i) a[i] = std::lower_bound(&t[0], &t[n], a[i]) - t;\n    }\n    static inline const void main() {\n        scanf(\"%u\", &n);\n        for (register uint i(0); i < n; ++i) scanf(\"%u\", &a[i]);\n        for (register uint i(0); i < n; ++i) scanf(\"%u\", &b[i]);\n        discrete(a), discrete(b);\n        for (register uint i(0); i < n; ++i) c[a[i]] = i;\n        for (register uint i(0); i < n; ++i) b[i] = c[b[i]];\n        for (register uint i(n - 1); i < n; --i)\n            ans = (ans + u.query(b[i]+ 1)) % Mod,\n            u.modify(b[i] + 1);\n            // +1 because u[1, n] not u[0, n)\n        printf(\"%u\\n\", ans);\n    }\n}\n\nsigned int main() { Main::main(); return 0; }\n```",
        "postTime": 1570279900,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "[Solution] P1966 #NOIP2013 TG"
    },
    {
        "content": "p1966   \uff08\u5f52\u5e76\u6cd5\u8be6\u89e3\uff09         \n##### \u9898\u9762\uff1a\n\u6bcf\u76d2\u88c5\u6709 n \u6839\u706b\u67f4\uff0c\u6bcf\u6839\u706b\u67f4\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u73b0\u5728\u5c06\u6bcf\u76d2\u4e2d\u7684\u706b\u67f4\u5404\u81ea\u6392\u6210\u4e00\u5217\uff0c \u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c \u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a$\\sum (a_i-b_i)^2$\n \n\u5176\u4e2d $a_i$\n\u200b\t  \u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u4e2d\u7b2c  i\u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\uff0c$b_i$ \n\u200b\t \u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u7b2c i \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u4f60\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\u8bf7\u95ee\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff1f\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,997\u53d6\u6a21\u7684\u7ed3\u679c\u3002        \n\n## 1.\u5f52\u5e76\u6392\u5e8f\n\u5f52\u5e76\u6392\u5e8f\u662f\u901a\u8fc7\u5206\u6cbb\u7b56\u7565\u5b9e\u73b0\u5f52\u5e76\u601d\u60f3\u800c\u8fdb\u884c\u7684\u6392\u5e8f\u3002        \n#### \uff081\uff09\u5206\u6cbb\u6cd5\uff1a\u201c\u5206\u201d\u5c06\u95ee\u9898\u5206\u6210\u5c0f\u95ee\u9898\uff0c\u518d\u201c\u6cbb\u201d\u5c06\u5206\u9636\u6bb5\u5f97\u5230\u7684\u5404\u7b54\u6848\u201c\u4fee\u8865\u201d\u5728\u4e00\u8d77\u3002\n\u601d\u60f3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u51e0\u4e2a\u89c4\u6a21\u8f83\u5c0f\u4f46\u7c7b\u4f3c\u4e8e\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u7684\u6c42\u89e3\u8fd9\u4e9b\u5b50\u95ee\u9898\uff0c\u518d\u5408\u5e76\u8fd9\u4e9b\u5b50\u95ee\u9898\u7684\u89e3\u6765\u5efa\u7acb\u539f\u95ee\u9898\u7684\u89e3\u3002\n\n\u5178\u578b\u7b97\u6cd5\u7ed3\u6784\uff1a\u7b97\u6cd5\u4e00\u6b21\u6216\u591a\u6b21\u9012\u5f52\u5730\u8c03\u7528\u5176\u81ea\u8eab\u4ee5\u89e3\u51b3\u7d27\u5bc6\u76f8\u5173\u7684\u82e5\u5e72\u5b50\u95ee\u9898\u3002\n\n\u6b65\u9aa4\uff1a    \na.**\u5206\u89e3**\u539f\u95ee\u9898\u4e3a\u82e5\u5e72\u5b50\u95ee\u9898\uff0c\u8fd9\u4e9b\u5b50\u95ee\u9898\u662f\u539f\u95ee\u9898\u89c4\u6a21\u8f83\u5c0f\u7684\u5b9e\u4f8b     \nb.**\u89e3\u51b3**\u8fd9\u4e9b\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u6c42\u89e3\u5404\u5b50\u95ee\u9898\u3002\u7136\u800c\u82e5\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u8db3\u591f\u5c0f\uff0c\u5219\u76f4\u63a5\u6c42\u89e3\u3002      \nc.**\u5408\u5e76**\u8fd9\u4e9b\u5b50\u95ee\u9898\u7684\u6210\u539f\u95ee\u9898\u7684\u89e3   \n\n#### \uff082\uff09\u5f52\u5e76\u6392\u5e8f\n\u6b65\u9aa4\uff1a    \n**\u5206\u89e3**\uff1a\u5206\u89e3\u5f85\u6392\u5e8f\u7684n\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u6210\u5404\u5177n/2\u4e2a\u5143\u7d20\u7684\u4e24\u4e2a\u5b50\u5e8f\u5217    \n**\u89e3\u51b3**\uff1a \u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u9012\u5f52\u7684\u6392\u5e8f\u4e24\u4e2a\u5b50\u5e8f\u5217\uff08\u5f53\u5f85\u6392\u5e8f\u7684\u5e8f\u5217\u957f\u5ea6\u90fd\u4e3a1\u65f6\u9012\u5f52\u56de\u5347\uff09        \n**\u5408\u5e76**\uff1a\u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u5b50\u5e8f\u5217\u4ee5\u4ea7\u751f\u5df2\u6392\u5e8f\u7684\u7b54\u6848\uff1a   \n\u7279\u522b\u9488\u5bf9\u4e8e\u5408\u5e76\uff1a     \n\u8c03\u7528\u4e00\u4e2a\u8f85\u52a9\u8fc7\u7a0bmerge\uff08A,p,q,r\uff09,A\u8868\u793a\u4e00\u4e2a\u6570\u7ec4\uff0cp,q\u548cr\u662f\u6570\u7ec4\u4e0b\u6807\u6ee1\u8db3p<=q<r     \n\u8be5\u8fc7\u7a0b\u5047\u8bbe\u5b50\u6570\u7ec4A[p\u2026\u2026q]\u548cA[q+1\u2026\u2026r]\u90fd\u5df2\u6392\u597d\u5e8f\uff0c\u5b83\u5408\u5e76\u8fd9\u4e24\u4e2a\u5b50\u6570\u7ec4\u5f62\u6210\u5355\u4e00\u7684\u5df2\u6392\u597d\u7684\u5b50\u6570\u7ec4\u5e76\u4ee3\u66ff\u5f53\u524d\u7684\u5b50\u6570\u7ec4A[p\u2026\u2026r]       \n\u65f6\u95f4O(n),n=r-p+1\u8868\u793a\u5f85\u5408\u5e76\u5143\u7d20\u603b\u6570   \n\n\u5373\u6cbb\u9636\u6bb5\u5c06\u6392\u597d\u5e8f\u7684\u5b50\u5e8f\u5217\u4e00\u4e2a\u4e2a\u653e\u5165\u4e00\u4e2a\u5927\u5e8f\u5217\uff0c\u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\u6700\u503c\u4e0d\u65ad\u6bd4\u8f83\u7684\u8fc7\u7a0b\uff1b\n\u4ee5\u4e0b\u662f\u9ed1\u4e66~~\u5f62\u8c61\u751f\u52a8\u7684\u63cf\u8ff0~~\uff1a    \n _ \u5047\u8bbe\u684c\u4e0a\u6709\u4e24\u5806\u724c\u9762\u671d\u4e0a\u7684\u724c\uff0c\u6bcf\u5806\u90fd\u5df2\u6392\u5e8f\uff0c\u6700\u5c0f\u7684\u724c\u5728\u9876\u4e0a\u3002\u6211\u4eec\u5e0c\u671b\u628a\u8fd9\u4e24\u5806\u724c\u5408\u5e76\u6210\u5355\u4e00\u7684\u6392\u597d\u5e8f\u7684\u8f93\u51fa\u5806\uff0c\u724c\u9762\u671d\u4e0b\u7684\u653e\u5728\u684c\u4e0a\u3002\u6211\u4eec\u7684\u57fa\u672c\u6b65\u9aa4\u5305\u62ec\u5728\u724c\u9762\u671d\u4e0a\u7684\u4e24\u5806\u724c\u7684\u9876\u4e0a\u7684\u4e24\u5f20\u724c\u4e2d\u9009\u62e9\u8f83\u5c0f\u7684\u4e00\u5f20\uff0c\u5c06\u8be5\u724c\u4ece\u5176\u5806\u4e2d\u79fb\u5f00\uff08\u8be5\u5806\u7684\u9876\u4e0a\u5c06\u663e\u9732\u4e00\u5f20\u65b0\u724c\uff09\u5e76\u724c\u9762\u671d\u4e0b\u7684\u5c06\u8be5\u724c\u653e\u7f6e\u5230\u8f93\u51fa\u5806\u3002\u91cd\u590d\u8fd9\u4e2a\u6b65\u9aa4\u76f4\u5230\u8f93\u5165\u961f\u4e3a\u7a7a _\n \n \u53e6\u5916\uff0c\u4e3a\u907f\u514d\u5728\u6bcf\u4e2a\u57fa\u672c\u6b65\u9aa4\u5fc5\u987b\u68c0\u67e5\u662f\u5426\u6709\u5806\u4e3a\u7a7a\uff0c\u5728\u6bcf\u4e2a\u5806\u7684\u5e95\u90e8\u653e\u7f6e\u4e00\u5f20**\u54e8\u5175\u724c**\u5305\u542b\u4e00\u4e2a\u7279\u6b8a\u7684\u503c\uff08\u6bd4\u5982inf\uff0c\u7ed3\u679c\u5f53\u5176\u663e\u9732\u5176\u4e0d\u53ef\u80fd\u662f\u8f83\u5c0f\u724c\uff0c\u5c31\u53ef\u4ee5\u53ea\u6bd4\u8f83\u4e86\uff09\u3002   \n\uff08\u540e\u671f\u5728\u535a\u5ba2\u8865\u5145\u590d\u6742\u5185\u5bb9\uff09\n## 2.\u9898\u89e3\n\uff081\uff09\u5316\u7b80\u516c\u5f0f\uff1a  \n\u6839\u636e\u5b8c\u5168\u5e73\u65b9\u5dee\u516c\u5f0f\uff1a  \n$\u03a3(ai+bi)^2=\u03a3(ai^2+bi^2-2*ai*bi)$             \n\u4e8e\u662f\u7531\u03a3\u53ef\u62c6\uff1a     \n\u539f\u5f0f=$\u03a3ai^2+\u03a3bi^2-2*\u03a3ai*bi$   \n\u53c8\u56e0\u4e3a$\u03a3ai^2+\u03a3bi^2$\u662f\u4e2a\u5b9a\u503c\uff0c\u56e0\u4e3a\u4f60\u6709\u4ec0\u4e48\u6837\u6570\u91cf\u7684ai\uff0cbi\u5c31\u8981\u90fd\u7b97\u4e0a   \n\u6240\u4ee5\u539f\u5f0f\u7b54\u6848\u6700\u5c0f\u53ea\u9700\u8981$\u03a3ai*bi$\u6700\u5927                \n\u5982\u4f55\u5c06\u5b83\u6700\u5927\u5316\uff1f\n\na.\uff08\u8d2a\u5fc3\uff09\u611f\u6027\u7406\u89e3\uff1a\u5927\u6570\u4e58\u5927\u6570\u7684\u8d21\u732e\u66f4\u5927\uff0c\u6240\u4ee5\u5c06a\u3001b\u6570\u7ec4\u6392\u5e8f\uff0c\u5f97\u5230\u5f53 a1<a2<\u2026<an \uff0cb1<b2<\u2026<bn\u65f6\uff0c\u2211aibi\u6700\u5927\u3002                           \n\nb.\u627e\u89c4\u5f8b\u53cd\u8bc1\u6cd5\uff1a    \n\u8bbea>b,c>d,\u4e14ac+bd<ad+bc,\u5219a(c-d)<b(c-d),\u5219a<b,\u4e0ea>b\u77db\u76fe\uff0c\u6240\u4ee5a>b\uff0cc>d\uff0c\u5219ac+bd>ad+bc\uff0c\u63a8\u5e7f\u540e\u5f97\u5230a\u7684\u7ed3\u8bba\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u4e24\u5806\u706b\u67f4\u5206\u522b\u6392\u5e8f\uff0c\u786e\u5b9a\u6bcf\u4e2a\u6570\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4e24\u6392\u706b\u67f4\u90fd\u79fb\u53ef\u4ee5\u770b\u505a\u53ea\u79fb\u4e00\u6392\u706b\u67f4         \n\u6784\u9020\u4e2d\u95f4\u6570\u7ec4ci\u8868\u793a\u7b2ci\u4e2a\u6570\u5e94\u8be5\u79fb\u52a8\u5230ci\u4f4d\u7f6e\uff0c\u4e8e\u662f\u5bf9\u6c42ci\u6570\u7ec4\u6392\u5e8f\uff0c\u6bcf\u6b21\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u6700\u5c11\u6b21\u6570\uff0c\u5373\u9006\u5e8f\u5bf9\u6570\u91cf\u5373\u53ef\u3002         \n\u5728\u8fd9\u91cc\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u5b9e\u73b0\u3002\n## code\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define fu(i,q,w) for(register int i=q;i<=w;i++)\n#define fd(i,q,w) for(register int i=q;i>=w;i--)\nusing namespace std;\ntypedef int  ll;\ninline ll read(){\n\tll ret=0,f=1;char c;\n\twhile((c=getchar())<'0'||c>'9')if(c=='-')f=-1;\n\twhile(c>='0'&&c<='9')ret=ret*10+(c-'0'),c=getchar();\n\treturn ret*f;\n} \nconst int maxn=111111;\nconst int mod=99999997;\nint n;\nstruct match{\n\tint w,id;\n}a[maxn],b[maxn];//a,b\u4e24\u5806\u706b\u67f4\uff0c\u8bb0\u5f55\u5176\u4f4d\u7f6eid\u548c\u9ad8\u5ea6w\nlong long ans=0; //\u4ea4\u6362\u6b21\u6570\u3001\u9006\u5e8f\u5bf9\u6570 \nint c[maxn];//\u5408\u5e76\u6570\u7ec4 \nint d[maxn];//\u4e34\u65f6\u6570\u7ec4 \nbool cmp(match x,match y){return x.w<y.w;}//sort\u4f9d\u636e \ninline void in(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].w=read();\n\t\ta[i].id=i;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tb[i].w=read();\n\t\tb[i].id=i;\n\t}\n}\ninline void merge(int p,int q,int r){//\u5f52\u5e76\n//\u5b50\u6570\u7ec4A[p\u2026\u2026q],A[q+1\u2026\u2026r] \n\tint i=p,j=q+1,cot=p;//\u8bbe\u7f6e\u79fb\u52a8\u8fb9\u754c\uff0c\u8ba1\u6570\u5668(\u6307\u9488\uff09\uff1b \n\twhile(i<=q&&j<=r){//\u4e24\u4e2a\u6570\u7ec4\u7684\u53f3\u7aef\u4f5c\u4e3a\u8fb9\u754c \n\t\tif(c[i]<=c[j])//\u6bd4\u8f83\u5927\u5c0f \n\t\td[cot++]=c[i++];//\u53d1\u73b0\u5408\u9002\u4e0d\u7528\u4ea4\u6362\u76f4\u63a5\u653e\u5165\u4e34\u65f6\u6570\u7ec4d \n\t\telse {\n\t\t\tans=(ans+q-i+1)%mod;//\u4e0d\u7136\u53d1\u73b0\u4e24\u6570\u662f\u9006\u5e8f\u5bf9\uff0c\u8981\u6362 \n\t\td[cot++]=c[j++];//\u6362\u5b8c\u628a\u5c0f\u7684\u653e\u5165\u4e34\u65f6\u6570\u7ec4 \n\t\t}\n\t}\n\t//\u5982\u679c\u6709\u4e00\u5806\u6ca1\u6709\u4e86\uff0c\u76f4\u63a5\u628a\u53e6\u4e00\u5806\u5f80\u4e34\u65f6d\u91cc\u653e\u5c31\u884c \n\twhile(i<=q)d[cot++]=c[i++];\n\twhile(j<=r)d[cot++]=c[j++];\n\tfor(i=p;i<=r;i++)c[i]=d[i];//\u518d\u628ad\u91cc\u7684\u66f4\u65b0\u56dec \n}\nvoid mergesort(int l,int r){\n\tif(l==r)return ;//\u628a\u5927\u95ee\u9898\u4e0d\u65ad\u62c6\u6210\u5b50\u95ee\u9898\uff0c\u8dd1\u5f52\u5e76\u6392\u5e8f \n\tint mid=(l+r)/2;\n\tmergesort(l,mid);\n\tmergesort(mid+1,r);\n\tmerge(l,mid,r);\n}\nint main(){\n\tin();\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp);//\u5148\u6392\u5e8f\u5bf9\u5e94\u4f4d\u7f6e \n\tfor(int i=1;i<=n;i++)\n\tc[b[i].id]=a[i].id;//\u5728c\u4e2d\u8bb0\u4e0b\u5bf9\u5e94\u4f4d\u7f6e \n\tmergesort(1,n);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541078541,
        "uid": 55873,
        "name": "GrayCatH",
        "ccfLevel": 0,
        "title": "noip\u63d0\u9ad82013d1t2 \u706b\u67f4\u6392\u961f\uff1a\u5f52\u5e76\u6392\u5e8f\uff0c\u8d2a\u5fc3\u9006\u5e8f\u5bf9"
    },
    {
        "content": "\u5927\u6982\u601d\u8def\u662f\u7531\u5e42\u51fd\u6570\u7684\u6027\u8d28\u5f97\u6392\u5e8f\uff0c\u4e4b\u540e\u6c42\u9006\u5e8f\u5bf9\u3002\n\n\u4f46\u662f\u4e0d\u4f1a\u5199\u5f52\u5e76\u6392\u5e8f\uff0c\u6240\u4ee5\u5199\u4e00\u53d1\u7ebf\u6bb5\u6811\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\nconst int maxn = 100010, modd = 99999997 ;\nvoid Read ( int &x, char c = getchar(), bool f = 0 ) {\n    for ( ; !isdigit(c) ; c = getchar() ) if ( c == '-' ) f = 1 ;\n    for ( x = 0 ; isdigit(c) ; c = getchar() ) x = 10*x + c - '0' ;\n    if (f) x = -x ;\n}\n\nstruct node {\n    int id, v ;\n    friend bool operator < ( node a, node b ) {\n        return a.v < b.v ;\n    }\n} a[maxn], b[maxn] ;\nint s[maxn], n, m ;\nint tree[maxn<<2] ;\nvoid push_up ( int h ) { tree[h] = ( tree[h<<1] + tree[h<<1|1] )%modd ; }\nvoid update ( int h, int l, int r, int x ) {\n    if ( l == r ) {\n        tree[h] ++ ;\n        tree[h] %= modd ;\n        return ;\n    }\n    int mid = l+r >> 1 ;\n    if ( x <= mid ) update ( h<<1, l, mid, x ) ;\n    else update ( h<<1|1, mid+1, r, x ) ;\n    push_up(h) ;\n}\nint query ( int h, int l, int r, int x, int y ) {\n    if ( x <= l && r <= y ) return tree[h] ;\n    int mid = l+r >> 1 ;\n    if ( y <= mid ) return query ( h<<1, l, mid, x, y ) ;\n    else if ( x > mid ) return query ( h<<1|1, mid+1, r, x, y ) ;\n    return ( query ( h<<1, l, mid, x, mid ) + query ( h<<1|1, mid+1, r, mid+1, y ) ) %modd ;\n}\nint main() {\n    int i, j, k ;\n    Read(n) ;\n    for ( i = 1 ; i <= n ; i ++ )\n        Read(a[i].v), a[i].id = i ;\n    for ( i = 1 ; i <= n ; i ++ )\n        Read(b[i].v), b[i].id = i ;\n    \n    sort(a+1,a+n+1) ;\n    sort(b+1,b+n+1) ;\n    \n    for ( i = 1 ; i <= n ; i ++ )\n        s[ a[i].id ] = b[i].id ;\n    int ans = 0 ;\n    for ( i = 1 ; i <= n ; i ++ ) {\n        if ( s[i] != n ) ans += query ( 1, 1, n, s[i]+1, n ) ;\n        update ( 1, 1, n, s[i] ) ;\n        ans %= modd ;\n    }\n    printf ( \"%d\\n\", ans ) ;\n    return 0 ;\n}\n```",
        "postTime": 1496978343,
        "uid": 17941,
        "name": "Vasily",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "/\\*\n\u4e0d\u59a8\u628a\u4e0a\u4e0b\u4e24\u4e2a\u5e8f\u5217\u5206\u522b\u53eb\u505aa\u5e8f\u5217\u548cb\u5e8f\u5217\n\n\u6bcf\u4e2a\u5143\u7d20\u5206\u522b\u53eb\u505aa[i],b[i]......\n\n\u62ff\u6837\u4f8b\u8ddd\u79bb\n\n          a = 1 3 4 2\n\n          b = 1 7 2 4\n\n\u9996\u5148\u5bf9a\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0cb\u5e8f\u5217\u76f8\u5e94\u7684\u5143\u7d20\u4e5f\u8981\u4ea4\u6362\u4f4d\u7f6e\n\n\u4e8e\u662f\uff0c\u539f\u5e8f\u5217\u53d8\u6210\u4e86\n\n          a = 1 2 3 4\n\n          b = 1 4 7 2\n\n\u5982\u679c\u8981\u6700\u5c0f\uff0c\u5219\u662fSum(a[i]-b[i])^2\u6700\u5c0f\n\n\u6839\u636e\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u77e5\u9053\n\n\u5f53\u62cd\u597d\u5e8f\u540e\u7684a\u5e8f\u5217\u5347\u5e8f\u653e\u7f6e\n\n\u5f53b\u5e8f\u5217\u4e5f\u662f\u5347\u5e8f\u65f6Sum\u6700\u5c0f\n\n\u6240\u4ee5\uff0c\u4e5f\u5c31\u662f\u4ea4\u6362\u82e5\u5e72\u6b21\uff0c\u4f7f\u5f97b\u5e8f\u5217\u4e5f\u53d8\u6210\u5347\u5e8f\n\n\u56e0\u6b64\uff0c\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u51fa\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5373\u662f\u7b54\u6848\n\n       \n\u6392\u5e8f\u4e0d\u7b49\u5f0f\u81ea\u5df1\u53bb\u641c\u7d22\u5427\uff0c\u4e0d\u89e3\u91ca\u4e86\n\n       \n\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u56e0\u4e3a\u6bd4\u8f83\u957f\uff0c\u5c31\u5199\u5728\u7a0b\u5e8f\u7684\u6700\u540e\u4e86\n\n\u6ca1\u770b\u61c2\u5c31\u770b\u770b\u4ee3\u7801\n\n\\*/\n\n\n\n\n\n\n          \n       \n       \n          \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX 100010\n#define INF 2147483647\nint arr[MAX];\nlong long n,j,c,s,sum=0;\nint L[MAX/2];//\u5408\u5e76\u65f6\u5b58\u653e\u5de6\u533a\u95f4\nint R[MAX/2];//\u5408\u5e76\u65f6\u5b58\u653e\u53f3\u533a\u95f4 \nstruct Node\n{\n      int s,w;\n}a[MAX],b[MAX];\nbool cmp1(Node x,Node y)\n{\n       return x.s<y.s;\n}\nvoid mergesort(int l,int r)//\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9 \n{\n       if(l==r)      //\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u663e\u7136\u6709\u5e8f \n          return;\n       int mid=(l+r)/2;\n       mergesort(l,mid);\n       mergesort(mid+1,r);\n       int ln=mid-l+1;//\u5de6\u533a\u95f4\u6570\u5b57\u4e2a\u6570\n       int hl=1,rl=1;//\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\u7684\u5934\u6807\u8bb0\n       memcpy(L+1,arr+l,(mid-l+1)*4);\n       memcpy(R+1,arr+mid+1,(r-mid)*4);\n           //\u4e0a\u9762\u8fd9\u4e24\u53e5\u53ef\u4ee5\u7b49\u6548\u66ff\u6362\u6210\u4e0b\u9762\u7684\u8bed\u53e5\uff0c\u65f6\u95f4\u4e0a\u51e0\u4e4e\u6ca1\u6709\u533a\u522b \n```\n/\\*\n```cpp\n       for(int i=l;i<=mid;++i)\n          L[i-l+1]=arr[i];\n       for(int j=mid+1;j<=r;++j)\n          R[j-mid]=arr[j];\n```\n\\*/\n       \nL[mid+2-l]=R[r+1-mid]=INF; //\u6700\u540e\u7f6e\u4e3a\u6781\u5927\u503c\uff0c\u9632\u6b62\u4e0b\u65b9\u5408\u5e76\u65f6\u51fa\u73b0\u9519\u8bef\n\n           \nfor(int i=l;i<=r;++i) //\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u5df2\u7ecf\u6709\u5e8f\u7684\u5e8f\u5217\n\n\n      \n      \n      \n      \n          \n      \n      \n\n```cpp\n       {\n                 if(L[hl]<R[rl])//\u5982\u679c\u5de6\u533a\u95f4\u7684\u5934\u6bd4\u53f3\u533a\u95f4\u7684\u5934\u66f4\u5c0f \n                 {\n                         arr[i]=L[hl++];\n                         ln--;\n                 }\n                 else           //\u53cd\u4e4b\uff0c\u5219\u5b58\u5728\u9006\u5e8f\u5bf9 \n                 {\n                         arr[i]=R[rl++];\n                         sum+=ln;\n                         sum%=99999997;\n                 }\n       }\n}\nint main()\n{\n      cin>>n;\n      for(int i=1;i<=n;++i)\n      {\n         cin>>a[i].s;\n         a[i].w=i;\n      }\n      for(int i=1;i<=n;++i)\n      {\n         cin>>b[i].s;\n         b[i].w=i;\n      }\n      sort(&a[1],&a[n+1],cmp1);//\u5bf9a\u8fdb\u884c\u6392\u5e8f\uff0c\u65b9\u4fbf\u7b97b\u7684\u4f4d\u7f6e \n      sort(&b[1],&b[n+1],cmp1);//\u5bf9b\u8fdb\u884c\u6392\u5e8f\uff0c\u65b9\u4fbf\u6c42\u9006\u5e8f\u5bf9 \n      for(int i=1;i<=n;++i)//\u628a\u6570\u5b57\u653e\u597d\uff0c\u51c6\u5907\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570 \n      {\n               arr[a[i].w]=b[i].w;  //\u8fd9\u6b65\u81ea\u5df1\u62ff\u7b14\u5199\u4e00\u5199\u66f4\u597d\u7406\u89e3 \n      }\n      mergesort(1,n);//\u5f52\u5e76\u6392\u5e8f \n      cout<<sum<<endl;//\u8f93\u51fa\u7ed3\u679c \n      return 0;\n}\n```\n/\\*\n\u5f52\u5e76\u6392\u5e8f\uff1a\n\n\u6bcf\u6b21\u628a\u5f53\u524d\u5e8f\u5217\u5206\u4e3a\u5de6\u53f3\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u5c06\u5176\u9010\u6b65\u5408\u5e76\n\n\u5f97\u5230\u7ed3\u679c\u3002\n\n\u8fd8\u662f\u4e3e\u6837\u4f8b\n\n1 4 7 2\n\n1.\u5bf9\u4e8e(1 4 7 2)\n\n\u5de6\u533a\u95f4(1 4) \u53f3\u533a\u95f4(7,2)\n\n2.\u5bf9\u4e8e(1 4)\n\n\u5de6\u533a\u95f4(1) \u53f3\u533a\u95f4(4)\n\n\u5de6\u53f3\u533a\u95f4\u5df2\u7ecf\u6709\u5e8f\n\n\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c(1,4)\n\n3.\u5bf9\u4e8e(7 2)\n\n\u5de6\u533a\u95f4(7) \u53f3\u533a\u95f4(2)\n\n\u5de6\u53f3\u533a\u95f4\u5df2\u7ecf\u6709\u5e8f\n\n\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c(2,7)\n\n\u4ea7\u751f\u4e86\u9006\u5e8f\u5bf91\u5bf9\n\n\u5de6\u53f3\u533a\u95f4\u5df2\u7ecf\u6709\u5e8f\n\n\u5408\u5e76\u7ed3\u679c\u4e3a(1 2 4 7)\n\n\u4ea7\u751f\u4e86\u9006\u5e8f\u5bf91\u5bf9\n\n\u56e0\u6b64\uff0c\u5728\u8be5\u8fc7\u7a0b\u4e2d\uff0c\u603b\u5171\u4ea7\u751f\u4e86\u4e24\u5bf9\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a2\n\n\u81f3\u4e8e\u5982\u4f55\u7edf\u8ba1\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u5c31\u62ff\u6837\u4f8b\u7684\u6700\u540e\u4e00\u6b65\u5408\u5e76\n\n\u5de6\u533a\u95f4(1 4)\n\n\u53f3\u533a\u95f4(2 7)\n\n\u56e0\u4e3a\u5de6\u53f3\u533a\u95f4\u90fd\u662f\u6709\u5e8f\uff0c\u56e0\u6b64\u6bcf\u6b21\u6bd4\u8f83\u4e24\u4e2a\u533a\u95f4\u7684\u5934\u5143\u7d20\n\n1.\u5de6\u8fb9\u5934\u5143\u7d20(1)\u5c0f\u4e8e\u53f3\u8fb9\u5934\u5143\u7d20(2)\uff0c\n\n\u56e0\u4e3a\u662f\u5347\u5e8f\u6392\u5217\uff0c\u663e\u7136\u662f\u6b63\u5e38\u7684\uff0c\u4e0d\u8ba1\u7b97\u9006\u5e8f\u5bf9\u4e2a\u6570\n\n\u540c\u65f6\u5de6\u8fb9\u5143\u7d20\u4e2a\u6570-1\uff0c\u6392\u5e8f\u7ed3\u679c\u53d8\u4e3a(1)\n\n2.\u5de6\u8fb9\u5934\u5143\u7d20(4)\u5927\u4e8e\u53f3\u8fb9\u5934\u5143\u7d20(2)\uff0c\n\n\u6b64\u65f6\u8981\u5c06\u539f\u4f4d\u7f6e\u9760\u540e\u7684\u53f3\u533a\u95f4\u7684\u5143\u7d20\u653e\u5230\u524d\u9762\uff0c\n\n\u6bcf\u4e00\u6b21\u653e\u7f6e\u4f1a\u548c\u5de6\u533a\u95f4\u4e2d\u8fd8\u6ca1\u6709\u653e\u7f6e\u7684\u5143\u7d20\u4ea7\u751f\n\n\u4e00\u6b21\u4ea4\u6362\uff0c\u56e0\u6b64\uff0c\u4ea7\u751f\u4e86\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5c31\u662f\u5f53\u524d\n\n\u5de6\u533a\u95f4\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5bf9\u4e8e\u8fd9\u91cc\u4e5f\u5c31\u662f1\u5bf9\n\n\u540c\u65f6\u53f3\u8fb9\u5143\u7d20\u4e2a\u6570-1\uff0c\u6392\u5e8f\u7ed3\u679c\u53d8\u4e3a(1 2)\n\n3.\u5de6\u8fb9\u5934\u5143\u7d20(4)\u5c0f\u4e8e\u53f3\u8fb9\u5934\u5143\u7d20(7)\uff0c\n\n\u540c1\u7684\u64cd\u4f5c\uff0c\u6392\u5e8f\u7ed3\u679c\u53d8\u4e3a(1 2 4)\n\n4.\u5de6\u8fb9\u65e0\u5143\u7d20\u4e86(\u88ab\u7f6e\u4e3aINF)\uff0cINF\u5927\u4e8e\u53f3\u8fb9\u5934\u5143\u7d20(7)\n\n\u540c2\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u6b64\u65f6\u5de6\u8fb9\u5143\u7d20\u4e2a\u6570\u4e3a0\n\n\u6392\u5e8f\u7684\u7ed3\u679c\u5c31\u53d8\u4e3a\u4e86(1 2 4 7)\n\n5.\u6392\u5e8f\u7ed3\u675f\n\n\u4ece\u8fd9\u4e2a\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u5f88\u5bb9\u6613\u770b\u51fa\u5982\u4f55\u6c42\u51fa\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\n\n\u6211\u4eec\u53ea\u9700\u8981\u5728\u4efb\u610f\u4e00\u6b65\u7684\u5408\u5e76\u4e4b\u4e2d\u90fd\u6267\u884c\u4e00\u8fb9\u8fd9\u6837\u7684\n\n\u64cd\u4f5c\uff0c\u5e76\u4e14\u5c06\u7ed3\u679c\u7d2f\u52a0\uff0c\u5c31\u662f\u6700\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\\*/",
        "postTime": 1495726971,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u611f\u89c9\u4e0a\u6392\u5e8f\u540e\u7684\u4e24\u5e8f\u5217sum\u80fd\u6700\u5c0f\u3002\u4e8e\u662f\u8bc1\u660e\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u80fd\u8bc1\u660e\u4e24\u4e2a\u5e8f\u5217\u90fd\u662f\u987a\u5e8f\u6392\u5217\u7684\uff0csum\u4e00\u5b9a\u6700\u5c0f\u3002\n\n\u90a3\u4e48\uff0c\u53ea\u8981\u6700\u540e\u4ea4\u6362\u5b8c\u7684\u4e24\u4e2a\u5e8f\u5217a\uff0cb\u7684\u5bf9\u5e94\u60c5\u51b5\u4e0e\u987a\u5e8f\u6392\u5217\u7684\u5bf9\u5e94\u60c5\u51b5\u4e00\u6837\uff0c\u90a3\u4e48sum\u4e00\u6837\u4e5f\u662f\u6700\u5c0f\u3002\n\n\u4e0d\u59a8\u8bbea[i],a[i+1],b[i],b[i+1]\u4e2d\uff0cb[i]=a[i]+d\uff0cb[i+1]=b[i]+e\uff0ca[i+1]=a[i]+f\uff1b\uff08d\uff0ce\uff0cf>0\uff09\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u8fd9\u4e24\u7ec4\u503c\u7684sum\u4e3a\uff1a2\\*d^2+e^2+f^2+2\\*\uff08de-ef-df\uff09\uff1b\n\n\u4ea4\u6362a[i],a[i+1]\uff08\u6216\u8005b[i],b[i+1]\uff09\u540e\uff0c\u65b0\u7684sum\u2018\u4e3a\uff1a2\\*d^2+e^2+f^2+2\\*\uff08de-df\uff09\uff1b\n\n\u660e\u663esum'>sum\u3002\n\n\u6240\u4ee5\u4e24\u5e8f\u5217\u5404\u4f4d\u7f6e\u4e0a\u7684\u503c\u5728\u8be5\u5e8f\u5217\u4e2d\u7684\u6392\u540d\u76f8\u540c\u65f6\uff0csum\u8fbe\u5230\u6700\u5c0f\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528a\u4e0eb\u7684\u6620\u5c04\u5173\u7cfb\u6765\u5efa\u7acb\u7b2c\u4e09\u4e2a\u6570\u7ec4sorty\uff1asorty[i]\u4ee3\u8868a[i]\u5728a\u4e2d\u7684\u6392\u540d\u4e0eb[sorty[i]]\u5728b\u4e2d\u7684\u6392\u540d\u4e00\u6837\u3002\n\n\u8fd8\u5269\u4e0b\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u6ca1\u6709\u53ef\u80fda\u4e0eb\u90fd\u8f6c\u5316\u5230\u67d0\u4e2a\u76f8\u540c\u7684k\u4f1a\u6bd4a\u76f4\u63a5\u5411b\u8f6c\u5316\u6b65\u6570\u66f4\u5c11\uff1f\n\n\u4e0d\u4f1a\uff0c\u56e0\u4e3a\u64cd\u4f5c\u662f\u5bf9\u79f0\u7684\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u5982\u4f55\u7528\u6700\u5c11\u7684\u76f8\u90bb\u4ea4\u6362\u6b21\u6570\uff0c\u4f7f\u5e8f\u5217\u6709\u5e8f\u3002\n\n\u8fd9\u5c31\u662f\u9006\u5e8f\u5bf9\u3002\uff08\u6700\u63a5\u8fd1\u795e\u7684\u4eba\u2014\u2014\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\uff09\n\n\u6811\u72b6\u6570\u7ec4\u6216\u5f52\u5e76\u6392\u5e8f\u3002\u6211\u7528\u7684\u662f\u540e\u8005\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100001;\nstruct lisan{\n    int val,wei;\n};\nlisan a[maxn],b[maxn];\nint n,i,sorty[maxn],ans,spare[maxn];\nbool cmp(lisan a,lisan b){\n    return a.val<b.val;\n}\nvoid merge(int l,int p,int r){\n    int i=l,j=p,k;\n    for (k=l;k<=r;k++){\n        if (j>r||i<p&&sorty[i]<sorty[j]){\n            spare[k]=sorty[i];\n            i++;\n        }\n        else{\n            spare[k]=sorty[j];\n            ans=(ans+p-i)%99999997;\n            j++;\n        }\n    }\n    for (k=l;k<=r;k++) sorty[k]=spare[k];\n}\nvoid merge_sort(int l,int r){\n    if (l==r) return;\n    int m=(l+r)/2;\n    merge_sort(l,m);\n    merge_sort(m+1,r);\n    merge(l,m+1,r);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++){\n        scanf(\"%d\",&a[i].val);\n        a[i].wei=i;\n    }\n    for (i=1;i<=n;i++){\n        scanf(\"%d\",&b[i].val);\n        b[i].wei=i;\n    }\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+n+1,cmp);\n    for (i=1;i<=n;i++) sorty[a[i].wei]=b[i].wei;\n    merge_sort(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1495546563,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint aa[100010],T[100010],ans=0;\n//\u8fd9\u4e2a\u95ee\u9898\u9996\u5148\u9700\u8981\u6392\u5e8f\u4e24\u4e2a\u961f\u5217\u4e4b\u524d\u5c06\u961f\u5217\u7684\u5143\u7d20\u5728\u539f\u6392\u5217\u4e2d\u7684\u4f4d\u7f6e\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u5047\u8bbe\u7b2c\u4e00\u4e2a\u961f\u5217\u7684\u5143\u7d20\u4e0d\u52a8\uff0c\u7b2c\u4e8c\u4e2a\u961f\u5217\u4ea4\u6362\u5143\u7d20\u7684\u4f4d\u7f6e\u76f4\u81f3\u8fbe\u5230\u6b63\u89e3\uff0c\u672c\u8d28\u5c31\u662f\u5bfb\u627e\u9006\u5e8f\u5bf9\uff08\u5143\u7d20\u7684\u539f\u6392\u5217\uff09\nstruct st{\n    int x,cnt;\n}a[100010],b[100010];\nint cmp(st a1,st a2){\n    return a1.x<a2.x;\n}\nvoid fenzhi(int l,int r){//\u5bfb\u627e\u4ea4\u6362\u7684\u6700\u5c0f\u6b21\u6570\u5c31\u662f\u627e\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\n    if(l+1<r){\n        int mid=l+(r-l)/2;\n        int p=l,q=mid,i=l;\n        fenzhi(l,mid);\n        fenzhi(mid,r);\n        while(p<mid||q<r){\n            if(q>=r||(p<mid&&aa[p]<=aa[q]))T[i++]=aa[p++];\n            else T[i++]=aa[q++],ans+=mid-p,ans%=99999997;\n        }\n        for(i=l;i<r;i++)aa[i]=T[i];\n    }\n}\nint main(){\n    //freopen(\"match.in\",\"r\",stdin);\n    //freopen(\"match.out\",\"w\",stdout);\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++){scanf(\"%d\",&a[i].x);a[i].cnt=i;}\n    for(int i=0;i<n;i++){scanf(\"%d\",&b[i].x);b[i].cnt=i;}\n    sort(a,a+n,cmp);\n    sort(b,b+n,cmp);\n    for(int i=0;i<n;i++)\n        aa[a[i].cnt]=b[i].cnt;\n    fenzhi(0,n);\n    printf(\"%d\",ans%99999997);\n    return 0;\n}\n```",
        "postTime": 1478336188,
        "uid": 11019,
        "name": "\u53f6\u9759\u6ce2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "  \n  \n```cpp\nconst\n  inf=99999997;\nvar\n  i,n:longint;\n  ans:int64;\n  r:array[1..100010] of longint;\n  rank:array[1..100000] of longint;\n  a,b:array[1..100000,1..2] of longint;      //a,b\u5206\u522b\u5b58\u6570\u5217\u4e0e\u4e0b\u6807\nprocedure qsort(l,r,o:longint);              //o\u4e3a\u4e0b\u6807\uff0c\u628a\u4e24\u4efd\u5feb\u6392\u538b\u7f29\u4e86\n  var \n    i,j,mid,p,q:longint;\n  begin\n    i:=l;\n    j:=r;\n    mid:=a[(l+r) div 2,o];\n    repeat\n      while a[i,o]<mid do inc(i);\n      while a[j,o]>mid do dec(j);\n      if i<=j then \n        begin\n          p:=a[i,o]; a[i,o]:=a[j,o]; a[j,o]:=p;       //\u8fde\u9501\u5904\u7406\n          q:=b[i,o]; b[i,o]:=b[j,o]; b[j,o]:=q;\n          inc(i); dec(j);\n        end;\n    until i>j;\n    if l<j then qsort(l,j,o);\n    if i<r then qsort(i,r,o);\n  end;\nprocedure mergesort(s,t:longint);      //\u5f52\u5e76\u6392\u5e8f\u7528\u6765\u627e\u9006\u5e8f\u5bf9\n  var\n    m,i,j,k:longint;\n  begin\n    if s=t then exit;\n    m:=(s+t) div 2;\n    mergesort(s,m);\n    mergesort(m+1,t);\n    i:=s;\n    j:=m+1;\n    k:=s;\n    while (i<=m) and (j<=t) do\n      begin\n        if rank[i]<=rank[j] then\n          begin r[k]:=rank[i]; inc(i); inc(k); end\n        else                                      //\u5728\u6b64\u52a0\u4e0aans\u8ba1\u6570\u5668\n          begin r[k]:=rank[j]; inc(j); inc(k); ans := (ans+(m mod inf)-(i mod inf)+1) mod inf; end;\n      end;\n    while i<=m do\n      begin r[k]:=rank[i]; inc(i); inc(k); end;\n    while j<=t do\n      begin r[k]:=rank[j]; inc(j); inc(k); end;\n    for i:=s to t do rank[i]:=r[i];\n  end;\nbegin\n  readln(n);\n  for i:=1 to n do begin\n    read(a[i,1]); b[i,1]:=i; end;  //\u5206\u522b\u521d\u59cb\u5316b[i,1]\u4e0eb[i,2]\n  for i:=1 to n do begin\n    read(a[i,2]); b[i,2]:=i; end;\n  qsort(1,n,1);\n  qsort(1,n,2);\n  for i:=1 to n do\n    rank[b[i,1]]:=b[i,2];\n  ans:=0;\n  mergesort(1,n);\n  write(ans);\nend.\n```",
        "postTime": 1478094372,
        "uid": 26560,
        "name": "Diddish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u4e0d\u8981\u60f3\u592a\u591a\uff0c\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u3002\n\n```cpp\n#include<iostream>    \n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct ss\n{\n    int x,y;\n}a[100001],b[100001];//x\u7528\u6765\u4fdd\u5b58\u9ad8\u5ea6\uff0cy\u7528\u6765\u4fdd\u5b58\u539f\u6765\u7684\u5e8f\u53f7\u3002//\nbool cmp(ss a,ss b)\n{\n    return a.x<b.x;\n}//sort\u6392\u5e8f//\nint s[100001],t[100001],n,ans;\nvoid mergesort(int head,int tail)\n{\n    int i=head,j=(head+tail)/2+1,k=head,mid;\n    if(head==tail)\n    return;\n    mid=(head+tail)/2;\n    mergesort(head,mid);\n    mergesort(mid+1,tail);\n    while(i<=mid&&j<=tail)\n    {\n        if(s[i]>s[j])\n        {\n            ans=(ans+mid-i+1)%99999997;\n            t[k]=s[j];\n            k++;\n            j++;\n        }\n        else\n        {\n            t[k]=s[i];\n            k++;\n            i++;\n        }\n    }\n    while(i<=mid)\n    {\n        t[k]=s[i];\n        k++;\n        i++;\n    }\n    while(j<=tail)\n    {\n        t[k]=s[j];\n        k++;\n        j++;\n    }\n    for(i=head;i<=tail;i++)\n    s[i]=t[i];\n}\nint main()\n{\n    int i,j,k;\n    cin>>n;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&j);\n        a[i].x=j;\n        a[i].y=i;\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&j);\n        b[i].x=j;\n        b[i].y=i;\n    }\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+n+1,cmp);\n    for(i=1;i<=n;i++)\n    s[a[i].y]=b[i].y;\n    mergesort(1,n);\n    cout<<ans%99999997;\n    return 0;\n}\n```",
        "postTime": 1475583564,
        "uid": 24805,
        "name": "luaddict",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u4e0d\u96be\n\nsigma[(a\\_i-b\\_i)^2]=sigma(a\\_i^2+b\\_i^2)-sigma(2a\\_ib\\_i)\n\n\u53d1\u73b0\u8981\u4f7fsigma(2a\\_ib\\_i)\u6700\u5c0f\n\n\u7531\u6392\u5e8f\u4e0d\u7b49\u5f0f\u53ef\u5f97\u5fc5\u987b\u4ece\u5c0f\u5230\u5927\u4e00\u4e00\u5bf9\u5e94\n\n\u53ef\u4ee5\u53ea\u79fb\u7b2c\u4e00\u5217\u706b\u67f4\n\n\u6c42c\\_i\u8868\u793aa\\_i\u9700\u8981\u79fb\u5230\u7684\u4f4d\u7f6e\n\n\u6bcf\u6b21\u4ea4\u6362\u76f8\u90bb\u706b\u67f4\u76f8\u5f53\u4e8e\u53bb\u6389\u4e00\u4e2ac\u6570\u5217\u4e2d\u7684\u9006\u5e8f\u5bf9\n\n\u6811\u72b6\u6570\u7ec4\u6216\u5f52\u5e76\u6392\u5e8fnlogn\u5bf9c\u6570\u5217\u6c42\u9006\u5e8f\u5bf9\u5bf9\u6570\u5373\u662f\u7b54\u6848\uff08\u4e0b\u9762\u7528\u7684\u662f\u5f52\u5e76\u6392\u5e8f\uff09\n\n```delphi\nconst Ln=100000+20;\n      ndsl=99999997;\nvar l,r:array[0..Ln]of longint;\n    p,a,b:array[0..Ln]of longint;\n    d:array[0..1,0..Ln]of longint;\n    n,m:longint;\n//\nProcedure qsort(l,r:longint);\n  var i,j,m,t:longint;\n  begin\n    i:=l;j:=r;m:=a[(i+j)div 2];\n    while i<=j do\n    begin\n      while a[i]<m do inc(i);\n      while a[j]>m do dec(j);\n      if i<=j then\n      begin\n        t:=a[i];a[i]:=a[j];a[j]:=t;\n        t:=b[i];b[i]:=b[j];b[j]:=t;\n        inc(i);dec(j);\n      end;\n    end;\n    if l<j then qsort(l,j);\n    if i<r then qsort(i,r);\n  end;\n//\nFunction calc(l,r,x:longint):int64;\n  var mid,u,v,t:longint;\n  begin\n    if l=r then begin d[x][l]:=a[l]; exit(0); end;\n    mid:=(l+r)div 2;\n    calc:=(calc(l,mid,1-x)+calc(mid+1,r,1-x))mod ndsl;\n    u:=l;v:=mid+1;t:=l-1;\n    while (u<=mid)and(v<=r) do\n      if d[1-x][u]>d[1-x][v] then\n      begin calc:=calc+mid-u+1;\n            inc(t);\n            d[x][t]:=d[1-x][v];\n            inc(v);\n      end\n      else begin\n            inc(t);\n            d[x][t]:=d[1-x][u];\n            inc(u);\n      end;\n    while u<=mid do begin inc(t);d[x][t]:=d[1-x][u];inc(u);end;\n    while v<=r   do begin inc(t);d[x][t]:=d[1-x][v];inc(v);end;\n    calc:=calc mod ndsl;\n  end;\n//\nProcedure Init;\n  var i:longint;\n  begin\n    readln(n);\n    for i:=1 to n do read(l[i]);\n    for i:=1 to n do read(r[i]);\n  end;\n//\nProcedure sort;\n  var i:longint;\n  begin\n    for i:=1 to n do b[i]:=i;\n    qsort(1,n);\n  end;\n//\nProcedure Prepare;\n  var i:longint;\n  begin\n    for i:=1 to n do a[i]:=l[i]; sort;\n    for i:=1 to n do p[i]:=b[i];\n    for i:=1 to n do a[i]:=r[i]; sort;\n    for i:=1 to n do a[p[i]]:=b[i];\n  end;\n//\nbegin\n  //assign(input,'match.in');reset(input);\n  //assign(output,'match.out');rewrite(output);\n  //\n  Init;\n  Prepare;\n  writeln(calc(1,n,0));\n  //\n  //close(input);close(output);\nend.\n```",
        "postTime": 1384318419,
        "uid": 936,
        "name": "Leoraccder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "### \u5206\u6790\n\u5982\u679c\u95ee\u6211\u9700\u8981\u591a\u5c11\u6b21\u4ea4\u6362\u80fd\u628a\u4e00\u4e2a\u5e8f\u5217\u6392\u597d\u5e8f,\u6211\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9.\u4f46\u662f\u672c\u9898\u4e0d\u8d70\u5bfb\u5e38\u8def.\u6211\u4eec\u5148\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee.\n\n\u9898\u76ee\u8981\u6c42$\\sum_{i=1}^{n}(a_i-b_i)^2$\u6700\u5c0f.\u6211\u4eec\u5e94\u8be5\u628a\u4ec0\u4e48\u6837\u7684\u5c40\u9762\u4f5c\u4e3a\u76ee\u6807\u5462?\u7c7b\u4f3c\u4e8e\u90bb\u9879\u4ea4\u6362\u7c7b\u7684\u8d2a\u5fc3\u95ee\u9898,\u5047\u8bbe\u6211\u4eec\u6709$a_1,a_2,b_1,b_2$\u8fd9\u4e24\u4e2a\u6570\u7ec4.\u5176\u4e2d$a_1< a_2,b_1< b_2$.\u73b0\u5728\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9:\n1. \u628a$a_1$\u548c$b_1$\u914d\u5bf9,\u90a3\u4e48\u4e24\u5217\u706b\u67f4\u7684\u8ddd\u79bb\u5c31\u662f$(a_1^2+b_1^2+a_2^2+b_2^2)-2(a_1b_1+a_2b_2)$\n2. \u628a$a_1$\u548c$b_2$\u914d\u5bf9,\u90a3\u4e48\u4e24\u5217\u706b\u67f4\u7684\u8ddd\u79bb\u5c31\u662f$(a_1^2+b_1^2+a_2^2+b_2^2)-2(a_1b_2+a_2b_1)$\n\n\u4e24\u5f0f\u76f8\u51cf,\u4e0d\u8003\u8651\u5e38\u6570,\u6211\u4eec\u5f97\u5230$-(a_1b_1+a_2b_2)+(a_1b_2+a_2b_1)$\u5982\u679c\u7b2c\u4e8c\u79cd\u9009\u62e9\u6bd4\u7b2c\u4e00\u79cd\u9009\u62e9\u5f97\u5230\u7684\u8ddd\u79bb\u8981\u66f4\u5c0f,\u5c31\u610f\u5473\u7740\n\n$a_1b_2+a_2b_1>a_1b_1+a_2b_2$\n\n$\\Rightarrow a_1(b_2-b_1)>a_2(b_2-b_1)$\n\n$\\Rightarrow a_1> a_2$\n\n\u8fd9\u4e0d\u5c31\u77db\u76fe\u4e86\u5417?\u6240\u4ee5\u5047\u8bbe\u4e0d\u6210\u7acb.\u90a3\u4e48\u53ea\u6709\u628a$a$\u79cd\u7b2c$i$\u5c0f\u7684\u548c$b$\u4e2d\u7b2c$i$\u5c0f\u7684\u6392\u5728\u76f8\u540c\u7684\u4f4d\u7f6e\u624d\u884c.\u6362\u53e5\u8bdd\u8bf4,\u6211\u4eec\u5c31\u8981\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97**\u79bb\u6563\u5316\u540e**\u7684$a_i=b_i$.\u5f53\u7136\u4e86,\u79bb\u6563\u5316\u53ea\u662f\u4e3a\u4e86\u4f53\u73b0\u51fa\u6392\u540d,\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u7684\u64cd\u4f5c\u6765\u8fbe\u5230\u76f8\u540c\u7684\u76ee\u7684.\n\n\u6bd4\u5982,\u6211\u4eec\u8bbe\u6709\u4e00\u4e2a\u51fd\u6570$q()$,\u8fd9\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u662f\u8fd9\u6837\u7684:\u5982\u679c\u8f93\u5165\u539f$a$\u6570\u5217\u4e2d\u7b2c$i$\u5c0f\u7684\u6570\u7684\u4f4d\u7f6e,\u5b83\u5c31\u4f1a\u8fd4\u56de\u539f$b$\u6570\u5217\u4e2d\u7b2c$i$\u5c0f\u7684\u6570\u7684\u4f4d\u7f6e.\u8fd9\u6837\u5c31\u628a\u4e24\u4e2a\u5e94\u8be5\u76f8\u7b49\u5316\u7684\u503c\u8054\u7cfb\u8d77\u6765\u4e86.\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7531\u4e8e\u539f\u5e8f\u5217\u5df2\u7ecf\u7ed9\u5b9a,\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa$q()$\u51fd\u6570\u7684\u53ef\u80fd\u7684\u503c,\u4f7f\u5f97\u5b83\u53d8\u6210$q[]$\u6570\u7ec4.\u5177\u4f53\u600e\u4e48\u505a\u5462?\n\n\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u7684\u5f62\u5f0f\u6765\u50a8\u5b58\u4e24\u5217\u706b\u67f4,\u7ed3\u6784\u4f53\u4fdd\u5b58\u6bcf\u6839\u706b\u67f4\u7684\u9ad8\u5ea6\u548c\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u4e0b\u6807.\u7136\u540e\u6309\u7167\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f.\u8fd9\u6837\u5f97\u5230\u7684\u4e0b\u6807\u5e8f\u5217$a[i].ind$\u7684\u610f\u4e49\u5c31\u662f\u539f\u5e8f\u5217\u4e2d\u7b2c$i$\u5c0f\u7684\u6570\u6240\u5728\u7684\u4f4d\u7f6e.\u5bf9b\u505a\u540c\u6837\u7684\u5904\u7406\u540e,\u6211\u4eec\u7684$q$\u6570\u7ec4\u8be5\u600e\u4e48\u5904\u7406\u5c31\u663e\u800c\u6613\u89c1\u4e86.\u8f93\u5165$a[i].ind$\u8fd4\u56de$b[i].ind$,\u4e5f\u5c31\u662f$q[a[i].ind]=b[i].ind$.\n\n\u5982\u679c\u6211\u4eec\u901a\u8fc7\u4ea4\u6362\u6765\u4fee\u6539\u539f\u5e8f\u5217,\u90a3\u4e48$a[i].ind$\u7684\u503c\u5c31\u4f1a\u53d1\u751f\u53d8\u5316,$q$\u7684\u503c\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316.\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\u662f$a[i].ind=b[i].ind$,\u90a3\u4e48\u5c31\u6709$q[a[i].ind]=a[i].ind$\u5373$q[k]=k(k=a[i].ind)$.\u8fd9\u6837\u4e00\u770b,\u4e0d\u5c31\u662f\u8ba9$q[1]=1,q[2]=2...$,\u628a$q$\u6392\u597d\u5e8f\u5417?\u800c\u6211\u4eec\u53ea\u80fd\u4ea4\u6362\u76f8\u90bb\u9879,\u6240\u4ee5\u6c42\u51fa$q$\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f\u7b54\u6848\u4e86.\n\n### \u4ee3\u7801:\n``` cpp\n#include <cmath>\n#include <queue>\n#include <deque>\n#include <cctype>\n#include <string>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define mod 9999997\n#define int long long\nusing namespace std;\n\ntemplate<class T> inline void read(T &x) {\n    x = 0;\n    char ch = getchar(), w = 0;\n    while (!isdigit(ch)) w = (ch == '+'), ch = getchar();\n    while (isdigit(ch)) x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    x = w ? x : x;\n    return;\n}\n\nint n, q[100000], temp[100000], cnt;\n\nstruct node {\n    int val, ind;\n}a[100000], b[100000];\n\ninline bool cmp1(node x, node y) {\n    return x.val < y.val;\n}\n\ninline bool cmp2(node x, node y) {\n    return x.val < y.val;\n}\n\nvoid merge_sort(int l, int r) {\n    if (l == r) return;\n    int mid = l + r >> 1;\n    merge_sort(l, mid);\n    merge_sort(mid + 1, r);\n    int i = l, j = mid + 1, t = l;\n    while (i <= mid && j <= r) {\n        if (q[i] <= q[j])\n            temp[t] = q[i], i++;\n        else {\n            temp[t] = q[j], j++;\n            cnt += (mid - i + 1);\n            cnt %= mod;\n        }\n        t++;\n    }\n    while (i <= mid)\n        temp[t] = q[i], t++, i++;\n    while (j <= r)\n        temp[t] = q[j], t++, j++;\n    for (int k = l; k <= r; ++k)\n        q[k] = temp[k];\n    return;\n}\n\nsigned main() {\n    read(n);\n    for (int i = 1; i <= n; ++i)\n        read(a[i].val), a[i].ind = i;\n    for (int i = 1; i <= n; ++i)\n        read(b[i].val), b[i].ind = i;\n    sort(a + 1, a + 1 + n, cmp1);\n    sort(b + 1, b + 1 + n, cmp2);\n    for (int i = 1; i <= n; ++i)\n        q[a[i].ind] = b[i].ind;\n    merge_sort(1, n);\n    cout << cnt << endl;\n    return;\n}\n// \u62d2\u7edd\u6284\u88ad,\u4ece\u6211\u505a\u8d77\n```\n\n\u672c\u9898\u601d\u8def\u771f\u662f\u975e\u5e38\u5de7\u5999,\u5c24\u5176\u662f$q$\u6570\u7ec4\u7684\u8bbe\u60f3,\u849f\u84bb\u7684\u6211\u4e5f\u662f\u53c2\u8003\u4e86\u597d\u591a\u9898\u89e3\u548c\u601d\u8def\u624d\u5f97\u5230\u4e86\u8fd9\u79cd\u7406\u89e3.\u601d\u7ef4\u7684\u7075\u6d3b\u6027\u662f\u771f\u7684\u91cd\u8981\u554a.",
        "postTime": 1570857103,
        "uid": 115005,
        "name": "i_cookie",
        "ccfLevel": 0,
        "title": "luogu P1966 \u706b\u67f4\u6392\u961f"
    },
    {
        "content": "## oooooo\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3oooooo\n------------\n\u53ef\u80fd\u5927\u5bb6\u90fd\u5df2\u7ecf\u6709\u81ea\u5df1\u7684 ~~\u65b9\u6cd5~~ ~~\u5965\u5999~~  \u60f3\u6cd5\u4e86\u5427\n\u672c\u849f\u84bb\u5c31\u7b80\u5355\u63d0\u4e00\u4e0b\u81ea\u5df1\u7684\u62d9\u89c1\uff08\u6811\u72b6\u6570\u7ec4\uff09\u3002-\n\n------------\n\u9996\u5148\u5148\u89e3\u51b3\u65b9\u6cd5\u7684\u95ee\u9898\uff1a\u9119\u4eba\u7684\u65b9\u6cd5\u5c31\u662f\u5927\u7684\u8ddf\u5927\u7684\uff0c\u5c0f\u7684\u8ddf\u5c0f\u7684\uff0c\u6700\u5927\u7684\u5c31\u8ddf\u7740\u6700\u5927\u7684\uff0c\u6700\u5c0f\u7684\u5c31\u8ddf\u7740\u6700\u5c0f\u7684\u3002\n\n------------\n#### \u4e3e\u4e2a\u4f8b\u5b50\uff1a\n| 2 |3  |1  | 4 |\n| :----------: | :----------: | :----------: | :----------: |\n|  3| 2 | 1 | 4 |\n\u53ef\u4ee5\u4ece\u4e0a\u4e0b\u4e24\u884c\u7684\u6570\u636e\u6765\u770b\u3002\u56e0\u4e3a\u7b2c\u4e00\u884c\u76842 3 \u5206\u522b\u662f\u7b2c2\u4e2a\u548c\u7b2c\u4e09\u4e2a\u3002\u6240\u4ee5\u7b2c\u4e8c\u884c\u76842\u548c3\u56e0\u8be5\u4e92\u6362\u4f4d\u7f6e\uff0c\u53ea\u4ea4\u63621\u4e86\u3002\u6545\u6837\u4f8b1\u7684\u7b54\u6848\u662f1\u3002\n\n------------\n#### \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n|1 |3 |4  |2  |\n| :----------: | :----------: | :----------: | :----------: |\n| 1 |7  |2 |4 |\n\u56e0\u4e3a\u7b2c\u4e00\u884c\u7684\u987a\u5e8f\u662f 1 3 4 2\uff08\u5927\u5c0f\u6392\u5e8f\uff09\u4e14\u7b2c\u4e8c\u884c\u7684\u987a\u5e8f\u662f1 4 2 3\uff08\u5927\u5c0f\u987a\u5e8f\uff09\uff0c\u7531\u7b2c\u4e00\u5bf9\u7b2c\u4e00\uff0c\u7b2c\u4e8c\u5bf9\u7b2c\u4e8c\u7684\u539f\u7406\uff0c\u5c31\u53ef\u4ee5\u5c067\u548c2\u6362 \u518d\u548c4\u6362\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4ea4\u6362\u6b21\u6570\u4e3a2\u3002\u6545\u6837\u4f8b2\u7684\u7b54\u6848\u662f2\u3002\n\n------------\n\u90fd\u542c\u61c2\u4e86\u5427\uff01\uff01\uff01\uff01\uff01\n\u4e0b\u9762\u5c31\u4e0a\u4ee3\u7801\u5427\uff01\uff01\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int mx=1e6+1;\nstruct p{\n\tint v,l;\n}a[mx],b[mx];\nint n,ans;\nint q[mx],tree[mx];\nbool cmp(p x,p y){\n\treturn x.v<y.v;\n}\nint lowbit(int i){ \n\treturn i&(-i);\n}\nvoid update(int x,int y){\n\twhile(x<=n){\n\t\ttree[x]+=y;\n\t\tx+=lowbit(x);\n\t}\n}\nint query(int x){\n\tint res=0;\n\twhile(x>0){\n\t\tres+=tree[x];\n\t\tx-=lowbit(x); \n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i].v);\n\t\ta[i].l=i;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&b[i].v);\n\t\tb[i].l=i;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tq[a[i].l]=b[i].l;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tupdate(q[i],1);\n\t\tans+=i-query(q[i]);\n\t\tans%=99999997;\n\t} \n\tcout<<ans<<endl;\n\treturn 0;\n} \n```\n\u603b\u7b97\u5199\u5b8c\u4e86~\\(\u2267\u25bd\u2266)/~\u5566\u5566\u5566\n",
        "postTime": 1568178605,
        "uid": 128625,
        "name": "god8888",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u4eca\u65e5\u5237\u5230\u597d\u9898p1966\u5b9e\u5728\u662f\u597d\u9898\n\n\u5148\u770b\u9898\u76ee\n\n\u6db5\u6db5\u6709\u4e24\u76d2\u706b\u67f4\uff0c\u6bcf\u76d2\u88c5\u6709 nn \u6839\u706b\u67f4\uff0c\u6bcf\u6839\u706b\u67f4\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u73b0\u5728\u5c06\u6bcf\u76d2\u4e2d\u7684\u706b\u67f4\u5404\u81ea\u6392\u6210\u4e00\u5217\uff0c \u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c \u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a \\sum (a_i-b_i)^2\u2211(a \ni\n\u200b\t \u2212b \ni\n\u200b\t ) \n2\n \n\u5176\u4e2d a_ia \ni\n\u200b\t  \u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u4e2d\u7b2c i i\u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\uff0cb_ib \ni\n\u200b\t \u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u7b2c ii \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u4f60\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\u8bf7\u95ee\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff1f\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,997 99,999,997\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u5171\u4e09\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 nn\uff0c\u8868\u793a\u6bcf\u76d2\u4e2d\u706b\u67f4\u7684\u6570\u76ee\u3002\n\n\u7b2c\u4e8c\u884c\u6709 n n\u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u7b2c\u4e09\u884c\u6709 nn \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,99799,999,997 \u53d6\u6a21\u7684\u7ed3\u679c\n\n\n# **\u9996\u5148\u662f\u6ca1\u6709\u601d\u8def\u7684**\n~~\u7136\u540e\u6211\u4eec\u5077\u770b\u4e86\u4e00\u4e0b\u7b97\u6cd5\u6807\u7b7e~~\n# \u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\u6392\u5e8f\n\n\u6811\u72b6\u6570\u7ec4\u5927\u6cd5\u597d\uff01\uff01\uff01\uff01\uff01\uff01\n\n\n\u2211(ai\u200b\u2212bi\u200b)^2\u8003\u8651\u5c06\u8fd9\u4e2a\u5c55\u5f00\n\u5f97\u5230\u7684\u662fai^2+bi^2-2ai*bi\n\n\u7136\u540eai^2+bi^2\u662f\u5b9a\u503c\n\u53ef\u4ee5\u4ece2ai*bi\u4e0a\u8d70\u4e86\n\n\u76f4\u63a5\u5c31\u53ef\u4ee5\u5f80max\u4e0a\u8fb9\u60f3\n\n\u8bdd\u8bf4\u8fd9\u4e2a\u7684\u6700\u5927\u503c\u8be5\u600e\u4e48\u6c42\u5462\uff1f\uff1f\uff1f\uff1f\n\n## \u63a5\u4e0b\u6765\u601d\u8def\u8bde\u751f \u76f4\u63a5\u5c31\u662f\u5904\u7406max\n\n## \u7136\u540e\u53c8\u8d70\u8fdb\u4e86\u6b7b\u5faa\u73af\n\n~~\u5077\u7784\u4e00\u4e0b\u5927\u4f6c\u7684\u9898\u89e3~~\n\n# \u5077\u6765\u7684~~\u8bc1\u660e~~\n\n\u5982\u679ca<b c<d\n\u5219\u731c\u6d4bac+bd\u4e3a\u6700\u5927\u7684\n\u5982\u679cac+bd\u4e0d\u662f\u6700\u5927\u7684\n\u90a3\u4e48\u4e00\u5b9a\u6709\u6bd4\u4ed6\u5927\u7684\n\u53ea\u6709ad+bc\nac+bd<ad+bc\n\nac-ad<bc-bd\n            \na*(c-d)<b*(c-d)//c-d<0\n\na>b\u4e0d\u6210\u7acb\n# \u6392\u5e8f\u601d\u8def\u968f\u5373\u800c\u51fa\n\n\u540c\u65f6\u9898\u76ee\u8981\u6c42\u7684\u662f\u6c42\u4ea4\u6362\u6b21\u6570\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u660e\u660e\u767d\u767d\u7684\u5199\u9006\u5e8f\u5bf9\u95ee\u9898\u4e86\n\n\n## \u601d\u8def\u800c\u51fa\n\n\u6570\u7ec4\u5f00\u4e0d\u51fa\u6765\n\u79bb\u6563\u5316\u51fa\u6765\u5e2e\u5fd9\n\n\u8f6c\u5934\u8d70\u5411\u6837\u4f8b\n\nA\uff1a2 3 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 1 2 4\nB\uff1a3 2 1 4->1 2 3 4\u5bf9\u5e94\u539f\u7f16\u53f7\u4e3a\uff1a3 2 1 4\n\u4e8e\u662f\u53d1\u73b0\u4e8c\u4e2a\u987a\u5e8f\u5dee\u4e00\u4e2a\n\u5c31\u662f\u9006\u5e8f\u5bf9\n\n\u4e8e\u662f\u7528\u4e00\u4e2a\u6570\u7ec4map\u6620\u5c04\u7684\u5c0f\u4e1c\u897f\n\u6b64map\u975e\u5f7cmap\n\n\u5373\u4e3a\nmap[B[i]\u7f16\u53f7]=A[i]\u7f16\u53f7\n\u82e5\u9898\u76ee\u4e3a\u4f8b\n\u5219map[1]=2,map[2]=1,map[3]=3,map[4]=4;\n\u5171\u6709\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u4ea4\u6362\u6b21\u6570++\n\n\n# \u8fd9\u6837\u9898\u76ee\u5c31\u8f6c\u5316\u6210\u4e86\u9006\u5e8f\u5bf9\u7684\u8ba1\u7b97\n\n## \u6709\u4e24\u79cd\u89e3\u6cd5\n### \u4e00\u4e2a\u662f\u6811\u72b6\u6570\u7ec4\n### \u4e00\u4e2a\u662f\u5f52\u5e76\u6392\u5e8f\n~~\u53cd\u6b63\u6211\u90fd\u4e0d\u4f1a~~\n\n\u6559\u5b66\u81ea\u884c\nhttps://www.cnblogs.com/chengxiao/p/6194356.html\n\n\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\nhttps://blog.csdn.net/m0_38033475/article/details/80330157\n\n\u4ee3\u7801\u5c31\u7b97\u4e86\nemmmmmm\n\u6e9c\u4e86\u6e9c\u4e86\n\n\n\n\n\n",
        "postTime": 1559388996,
        "uid": 122602,
        "name": "\u5b59\u5b50\u9686",
        "ccfLevel": 0,
        "title": "6.1\u6b22\u4e50\u513f\u7ae5\u8282\u5237\u9898"
    },
    {
        "content": "#### \u9898\u76ee\u63cf\u8ff0\n\n\u6db5\u6db5\u6709\u4e24\u76d2\u706b\u67f4\uff0c\u6bcf\u76d2\u88c5\u6709 nn \u6839\u706b\u67f4\uff0c\u6bcf\u6839\u706b\u67f4\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u73b0\u5728\u5c06\u6bcf\u76d2\u4e2d\u7684\u706b\u67f4\u5404\u81ea\u6392\u6210\u4e00\u5217\uff0c \u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c \u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a:$\\sum (a_i-b_i)^2$\u5176\u4e2d $a_i$\u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u4e2d\u7b2c $i$\u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\uff0c$b_i$\u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u7b2c $i$\u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u4f60\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\u8bf7\u95ee\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff1f\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u5bf9$ 99,999,997 $\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\u79bb\u6563\u5316+\u6c42\u9006\u5e8f\u6570\u7684\u597d\u9898\u3002\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5c06`a[],b[]`\u79bb\u6563\u5316\u4e3a$1\\sim n$\uff0c\u7136\u540e\u518d\u6309\u7167`a[]`\u7684\u4f4d\u7f6e\u5c06$1\\sim n$\u79bb\u6563\u5316\u4e3a$1\\sim n$\uff0c\u4f7f\u5f97`a[]`\u53d8\u4e3a\u4e00\u4e2a\u6807\u51c6\u6392\u5217\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u79bb\u6563\u5316\u4e24\u6b21\u540e\u7684`b[]`\u7684\u9006\u5e8f\u5bf9\u6570\u6765\u5f97\u5230\u7b54\u6848\u3002\uff08\u4f17\u6240\u5468\u77e5\uff0c\u5c06\u4e00\u4e2a\u6392\u5217\u53d8\u4e3a\u6807\u51c6\u6392\u5217\u9700\u8981\u9006\u5e8f\u5bf9\u6570\u6b21\u76f8\u90bb\u5bf9\u6362\uff09\u3002\n\n#### AC\u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#include <map>\n\n#define int long long\n#define lb(x) (x & (-x))\n\nusing namespace std;\n\nconst int N = 3e6 + 9;\nconst int M = 99999997;\n\nint a[N], b[N], c[N], d[N], t[N], n, ans;\nmap<int, int> ma, mb, mf;\n\nstruct Node\n{\n\tint p, w;\n\tbool operator < (const Node &b) const { return w > b.w; }\n}k[N];\n\ninline void Add(int pos, int a) { for (int i = pos; i <= n; i += lb(i)) t[i] += a; }\ninline void Query(int pos) { for (int i = pos; i; i -= lb(i)) ans = (ans + t[i]) % M; }\n\nsigned main()\n{\n\tscanf(\"%lld\", &n);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%lld\", &a[i]), c[i] = a[i];\n\tfor (int i = 1; i <= n; ++i) scanf(\"%lld\", &b[i]), d[i] = b[i];\n\tsort(c + 1, c + n + 1), sort(d + 1, d + n + 1);\n\tfor (int i = 1; i <= n; ++i) ma[c[i]] = i, mb[d[i]] = i;\n\tfor (int i = 1; i <= n; ++i) mf[ma[a[i]]] = i;\n\tfor (int i = 1; i <= n; ++i) k[i].w = mf[mb[b[i]]], k[i].p = i;\n\tsort(k + 1, k + n + 1);\n\tfor (int i = 1; i <= n; ++i) Query(k[i].p), Add(k[i].p, 1);\n\treturn printf(\"%lld\\n\", ans), 0;\n}\n```",
        "postTime": 1553765600,
        "uid": 26512,
        "name": "Christopher_Yan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u6db5\u6db5\u6709\u4e24\u76d2\u706b\u67f4\uff0c\u6bcf\u76d2\u88c5\u6709 nn \u6839\u706b\u67f4\uff0c\u6bcf\u6839\u706b\u67f4\u90fd\u6709\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u73b0\u5728\u5c06\u6bcf\u76d2\u4e2d\u7684\u706b\u67f4\u5404\u81ea\u6392\u6210\u4e00\u5217\uff0c \u540c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c \u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\uff1a\n\u03a3($a_i$ - $b_i$)\u00b2\n\n\u5176\u4e2da_i\u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u4e2d\u7b2c i \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\uff0cb_i\u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u4e2d\u7b2c i \u4e2a\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u6bcf\u5217\u706b\u67f4\u4e2d\u76f8\u90bb\u4e24\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u8bf7\u4f60\u901a\u8fc7\u4ea4\u6362\u4f7f\u5f97\u4e24\u5217\u706b\u67f4\u4e4b\u95f4\u7684\u8ddd\u79bb\u6700\u5c0f\u3002\u8bf7\u95ee\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u7684\u8ddd\u79bb\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362\u591a\u5c11\u6b21\uff1f\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u592a\u5927\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u5bf9 99,999,997 99,999,997\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n#### \u8f93\u5165\u683c\u5f0f\uff1a\n\u5171\u4e09\u884c\uff0c\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 n\uff0c\u8868\u793a\u6bcf\u76d2\u4e2d\u706b\u67f4\u7684\u6570\u76ee\u3002\n\n\u7b2c\u4e8c\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n\u7b2c\u4e09\u884c\u6709 n \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u8868\u793a\u7b2c\u4e8c\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u5bf999,999,997\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n#### \u8f93\u5165\u6837\u4f8b#1\uff1a \u590d\u5236\n\t4\n\t2 3 1 4\n\t3 2 1 4\n#### \u8f93\u51fa\u6837\u4f8b#1\uff1a \u590d\u5236\n\t1\n#### \u8f93\u5165\u6837\u4f8b#2\uff1a \u590d\u5236\n\t4\n\t1 3 4 2\n\t1 7 2 4\n#### \u8f93\u51fa\u6837\u4f8b#2\uff1a \u590d\u5236\n\t2\n### \u8bf4\u660e\n\n#### \u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u8bf4\u660e1\u3011\n\n\u6700\u5c0f\u8ddd\u79bb\u662f 0\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362 1 \u6b21\uff0c\u6bd4\u5982\uff1a\u4ea4\u6362\u7b2c 1 \u5217\u7684\u524d 2 \u6839\u706b\u67f4\u6216\u8005\u4ea4\u6362\u7b2c 2 \u5217\u7684\u524d 2\u6839\u706b\u67f4\u3002\n\n#### \u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u8bf4\u660e2\u3011\n\n\u6700\u5c0f\u8ddd\u79bb\u662f 10\uff0c\u6700\u5c11\u9700\u8981\u4ea4\u6362 2\u6b21\uff0c\u6bd4\u5982\uff1a\u4ea4\u6362\u7b2c 1 \u5217\u7684\u4e2d\u95f4 2\u6839\u706b\u67f4\u7684\u4f4d\u7f6e\uff0c\u518d\u4ea4\u6362\u7b2c 2 \u5217\u4e2d\u540e 2 \u6839\u706b\u67f4\u7684\u4f4d\u7f6e\u3002\n\n#### \u3010\u6570\u636e\u8303\u56f4\u3011\n\n\u5bf9\u4e8e 10%\u7684\u6570\u636e\uff0c 1 \u2264 n \u2264 10\uff1b\n\n\u5bf9\u4e8e 30%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 100\uff1b\n\n\u5bf9\u4e8e 60%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 1,000\uff1b\n\n\u5bf9\u4e8e 100%\u7684\u6570\u636e\uff0c1 \u2264 n \u2264 100,000, 0\u2264\u706b\u67f4\u9ad8\u5ea6\u2264 maxlongint\n\n\n### \u4e3b\u8981\u601d\u8def \uff1a\u6743\u503c\u7ebf\u6bb5\u6811\u6c42\u9006\u5e8f\u5bf9\n\n\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u4e24\u4e2a\u6570\u7ec4\u63d0\u524d\u6807\u4e0a\u5e8f\u53f7\u7136\u540e\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\n\n\u8bc1\u660e\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5f88\u591a\u5927\u4f6c\u7684\u8bc1\u660e\u6bd4\u6211\u7684\u8bc1\u660e\u4e25\u5bc6\u5f88\u591a\n\n\u8fd9\u91cc\u4e3b\u8981\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\n\n\u6211\u7528\u7684\u662f\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u6c42\u9006\u5e8f\u5bf9\n\n\u6211\u4eec\u628a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u533a\u95f4\u4e0a\u7684\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u6743\u503c\uff0c\u7ef4\u62a4\u7684\u503c\u4e5f\u5c31\u662f\u8fd9\u4e9b\u6570\u636e\u4e2d\u5728\u67d0\u4e2a\u8303\u56f4\u5185\u7684\u6570\u7684\u4e2a\u6570\n\n\u548c\u6811\u72b6\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u70b9\u7c7b\u4f3c\uff0c\uff08\u6211\u504f\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\u6392\u5e8f~~\u56e0\u4e3a\u90fd\u4e0d\u4f1a~~\n\n\u8fd9\u6837\u5b9e\u9645\u4e0a\u662f\u8981\u628a\u8fd9\u4e2a\u6570\u7ec4\u79bb\u6563\u5316\u624d\u80fd\u538b\u5230\u7ebf\u6bb5\u6811\u91cc\u7684\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u7ef4\u62a4\u7684\u6570\u7ec4\u7684\u503c\u5c31\u662f1 ~ n\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u79bb\u6563\u5316\n\n### code \uff1a \n\n##### #1 \uff1a\u666e\u901a\u7ebf\u6bb5\u6811 \uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <stack>\n#include <map>\nusing namespace std;\n#define go(i, j, n, k) for(int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for(int i = j; i >= n; i -= k)\n#define rep(i, x) for(int i = h[x]; i; i = e[i].nxt)\n#define mn 100010\n#define inf 1 << 30\n#define ll long long \n#define mod 99999997\n#define root 0, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\ninline int read() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x * f;\n}\ninline void fre() {\n\tfreopen(\".in\", \"r\", stdin);\n\tfreopen(\".out\", \"w\", stdout);\n}\n\nstruct node{\n\tint x, pos;\n\tnode(int _x = 0, int _pos = 0) : x(_x), pos(_pos) {}\n}a[mn], b[mn];\nint z[mn << 2], c[mn], n; \nll ans = 0;\ninline void update(int rt) {\n\tz[rt] = z[rt << 1] + z[rt << 1 | 1];\n}\ninline void build(int l, int r, int rt) {\n\tif(l == r) { z[rt] = 0; return; }\n\tint m = (l + r) >> 1;\n\tbuild(lson), build(rson), update(rt);\n}\ninline void modify(int l, int r, int rt, int now) {\n\tif(l == r) { z[rt]++; return; }\n\tint m = (l + r) >> 1;\n\tif(now <= m) modify(lson, now); \n\telse modify(rson, now);\n\tupdate(rt);\n}\ninline int query(int l, int r, int rt, int nowl, int nowr) {\n\tif(nowl <= l && r <= nowr) { return z[rt]; } \n\tint m = (l + r) >> 1;\n\tif(nowl <= m) {\n\t\tif(m < nowr) return query(lson, nowl, nowr) + query(rson, nowl, nowr);\n\t\telse return query(lson, nowl, nowr);\n\t} else return query(rson, nowl, nowr);\n}\ninline bool cmp (node a, node b) { return a.x < b.x; }\ninline void debug() {\n\tgo(i, 1, n, 1) printf(\"%d%c\", c[i], (i != n) ? ' ' : '\\n');\n}\nint main() {\n\t//fre();\n\tn = read();\n\tgo(i, 1, n, 1) a[i].x = read(), a[i].pos = i;\n\tgo(i, 1, n, 1) b[i].x = read(), b[i].pos = i;\n\tsort(a + 1, a + n + 1, cmp);\n\tsort(b + 1, b + n + 1, cmp);\n\tgo(i, 1, n, 1) c[a[i].pos] = b[i].pos;\n\tbuild(root);\n\tfo(i, n, 1, 1) {\n\t\tans = (ans + query(root, 0, c[i] - 1)) % mod;\n\t\tmodify(root, c[i]);\n\t}\n\tcout << ans << \"\\n\";\n\treturn 0;\n}\n```\n\n##### #2 : zkw\u7ebf\u6bb5\u6811\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <stack>\n#include <map>\nusing namespace std;\n#define go(i, j, n, k) for(int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for(int i = j; i >= n; i -= k)\n#define rep(i, x) for(int i = h[x]; i; i = e[i].nxt)\n#define mn 100010\n#define inf 1 << 30\n#define ll long long \n#define mod 99999997\n#define root 0, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\ninline int read() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x * f;\n}\ninline void fre() {\n\tfreopen(\".in\", \"r\", stdin);\n\tfreopen(\".out\", \"w\", stdout);\n}\n\nstruct node{\n\tint x, pos;\n\tnode(int _x = 0, int _pos = 0) : x(_x), pos(_pos) {}\n}a[mn], b[mn];\nint z[mn << 2], c[mn], n, M;\nll ans = 0;\ninline void update(int rt) {\n\tz[rt] = z[rt << 1] + z[rt << 1 | 1];\n}\ninline void build() {\n\tfor(M = 1; M < n + 2; M <<= 1);\n\tgo(i, M, M + n + 2, 1) z[i] = 0;\n\tfo(i, M, 1, 1) update(i);\n}\ninline void modify(int now) {\n\tfor(z[now += M]++, now >>= 1; now; now >>= 1) update(now);\n}\ninline int query(int l, int r) {\n\tint ans = 0;\n\tfor(--l += M, ++r += M; l ^ r ^ 1; l >>= 1, r >>= 1) {\n\t\tif(~l & 1) ans += z[l ^ 1];\n\t\tif(r & 1)  ans += z[r ^ 1];\n\t}\n\treturn ans;\n}\ninline bool cmp (node a, node b) { return a.x < b.x; }\ninline void debug() {\n\tgo(i, 1, n, 1) printf(\"%d%c\", c[i], (i != n) ? ' ' : '\\n');\n}\nint main() {\n\t//fre();\n\tn = read();\n\tgo(i, 1, n, 1) a[i].x = read(), a[i].pos = i;\n\tgo(i, 1, n, 1) b[i].x = read(), b[i].pos = i;\n\tsort(a + 1, a + n + 1, cmp);\n\tsort(b + 1, b + n + 1, cmp);\n\tgo(i, 1, n, 1) c[a[i].pos] = b[i].pos;\n\tbuild();\n\t// debug();\n\tfo(i, n, 1, 1) {\n\t\tans = (ans + query(1, c[i] - 1)) % mod;\n\t\tmodify(c[i]);\n\t}\n\tcout << ans << \"\\n\";\n\treturn 0;\n}\n```\n\n##### #3 : \uff08\u63a5\u5730\u6c14\u7684\uff09\u6811\u72b6\u6570\u7ec4\uff08\u6211\u8fd8\u662f\u5199\u4e86\uff09\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <stack>\n#include <map>\nusing namespace std;\n#define go(i, j, n, k) for(int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for(int i = j; i >= n; i -= k)\n#define rep(i, x) for(int i = h[x]; i; i = e[i].nxt)\n#define mn 100010\n#define inf 1 << 30\n#define ll long long \n#define mod 99999997\n#define root 0, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\ninline int read() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x * f;\n}\ninline void fre() {\n\tfreopen(\".in\", \"r\", stdin);\n\tfreopen(\".out\", \"w\", stdout);\n}\n\nstruct node{\n\tint x, pos;\n\tnode(int _x = 0, int _pos = 0) : x(_x), pos(_pos) {}\n}a[mn], b[mn];\nint z[mn], c[mn], n, M;\ninline int lb(int x) { return x & -x; }\ninline void modify(int now, int v) { for(int i = now; i <= n; i += lb(i)) z[i] += v; }\ninline int query(int x) { int ans = 0; for(int i = x; i; i -= lb(i)) ans += z[i]; return ans; }\nll ans = 0;\ninline bool cmp (node a, node b) { return a.x < b.x; }\ninline void debug() {\n\tgo(i, 1, n, 1) printf(\"%d%c\", c[i], (i != n) ? ' ' : '\\n');\n}\nint main() {\n\t//fre();\n\tn = read();\n\tgo(i, 1, n, 1) a[i].x = read(), a[i].pos = i;\n\tgo(i, 1, n, 1) b[i].x = read(), b[i].pos = i;\n\tsort(a + 1, a + n + 1, cmp);\n\tsort(b + 1, b + n + 1, cmp);\n\tgo(i, 1, n, 1) c[a[i].pos] = b[i].pos;\n\t// debug();\n\tfo(i, n, 1, 1) {\n\t\tans = (ans + query(c[i] - 1)) % mod;\n\t\tmodify(c[i], 1);\n\t}\n\tcout << ans << \"\\n\";\n\treturn 0;\n}\n```",
        "postTime": 1540971371,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5176\u5b9e\u611f\u89c9\u601d\u7ef4\u96be\u5ea6\u5f88\u7b80\u5355\uff0c\u5927\u773c\u775b\u4e00\u770b\uff0c\u5c31\u731c\u5230\u4e86\u5982\u679c\u8981\u8ddd\u79bb\u6700\u5c0f\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u8ba9$a$\u6570\u5217\u548c$b$\u6570\u5217\u8fbe\u6210\u4e00\u4e2a\u201c\u76f8\u4e92\u6b63\u5e8f\u201d\uff0c\u5728$a[i]$\u82e5\u662f\u7b2c$k$\u5c0f\u7684\u6570\uff0c\u90a3\u4e48$b[i]$\u4e5f\u5e94\u8be5\u662f\u7b2c$k$\u5c0f\u7684\u6570\u3002\u8fd9\u4e2a\u611f\u89c9\u4e00\u770b\u5c31\u662f\u5bf9\u7684\u4e86\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6570\u5b66\u8bc1\u660e\u4ec0\u4e48\u7684\uff0c\u4f60\u786e\u5b9a\u4f60\u662f\u4fe1\u606f\u5b66\u7ade\u8d5b\u800c\u4e0d\u662f\u6570\u7ade\uff1f\n\n\u7136\u540e\u5c31\u76f4\u63a5\u8003\u8651\u600e\u4e48\u6c42\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u6700\u5c0f\u4ea4\u6362\u4e86\uff0c\u4e00\u63d0\u5230\u4ea4\u6362\u8fbe\u6210\u6392\u5e8f\u6c42\u6700\u5c0f\u4ea4\u6362\uff0c\u8111\u6d77\u91cc\u987f\u65f6\u8e66\u51fa\u6765\u4e24\u4e2a\u5355\u8bcd\u201c\u9006\u5e8f\u5bf9\u201d(P1774)\u548c\u201c\u5faa\u73af\u8282\u201d(P1667)\uff0c\u4ed4\u7ec6\u4e00\u770b\uff0c\u9898\u76ee\u91cc\u7684\u4ea4\u6362\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u4e86\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u6c42\u5565\u9006\u5e8f\u5bf9\u554a\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u611f\u89c9\u5230\u5e94\u8be5\u662f\u4ee5\u4e00\u4e2a\u6570\u5217\u4e3a\u6807\u51c6\uff0c\u6c42\u53e6\u4e00\u4e2a\u5728\u8fd9\u4e2a\u6570\u5217\u7684\u6392\u5217\u4e0a\u7684\u9006\u5e8f\u5bf9\u3002\u4f46\u662f\u600e\u4e48\u6c42\u5462\uff1f\n\n\u9996\u5148\u4e0d\u662f\u6c42\u5176\u4e2d\u4e00\u4e2a\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u3002~~\u6240\u4ee5\u6211\u4eec\u731c\u4e00\u731c\u5427~~\uff0c\u662f\u4e0d\u662f\u628a\u4e24\u4e2a\u6570\u5217\u7684\u9006\u5e8f\u5bf9\u90fd\u6c42\u51fa\u6765\uff0c\u7136\u540e\u5957\u4e2a$abs$\u76f8\u51cf\u4e00\u4e0b\uff1f\u7136\u540e\u6211\u5c31\u53bb\u8bd5\u4e86\u8bd5\uff0c\u53cd\u6b63\u60f3\u4e0d\u51fa\u6765\u7684\u65f6\u5019\u8bd5\u8bd5\u4e0d\u5403\u4e8f\u561b\uff01\u7ed3\u679c\u6211\u8fd8\u8fc7\u4e86\u7b2c\u4e00\u4e2a\u6837\u4f8b\uff0c\u7b2c\u4e8c\u4e2a\u7684\u7b54\u6848\u9519\u4e86~~\uff08\u4e07\u5e78\uff09~~\n\n\u5176\u5b9e\u5462\u6b63\u89e3\u5f88\u7b80\u5355\uff0c\u770b\u4e0b\u9762\u7684\u64cd\u4f5c\uff1a\n```\ninline bool cmp(int x,int y){\n\treturn a[x]<a[y];//(b[x]<b{y]\n}\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),p1[i]=i;\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),p2[i]=i;\n\tstable_sort(p1+1,p1+1+n,cmp1),stable_sort(p2+1,p2+1+n,cmp2);\n\tfor(int i=1;i<=n;i++) q[p1[i]]=p2[i];//p[i]\u8868\u793a\u5e94\u8be5\u5728i\u7684\u6570\u73b0\u5728\u7684\u4f4d\u7f6e,\u628aq[\u8fd9\u4e2a\u4f4d\u7f6e]\u653e\u6210b\u4e2d\u5e94\u8be5\u5728i\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\n\t//b\u5e94\u8be5\u5728i\u7684\u6570\u7684\u4f4d\u7f6e\u5047\u5982==i\uff0c\u6ca1\u7528\uff0c\u4f1a\u88ab\u6253\u4e71\uff1bb\u4e2d\u5e94\u8be5\u5728i\u7684\u6570\u7684\u4f4d\u7f6e\u5047\u5982==p1[i]\u5373a\u4e2d\u5e94\u8be5\u5728i\u7684\u6570\u7684\u4f4d\u7f6e\u548cb\u5e94\u8be5\u5728i\u7684\u6570\u7684\u4f4d\u7f6e\u76f8\u540c\u3002\n\t//\u90a3\u4e48\u6b64\u65f6\uff0ca,b\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u987a\u5e8f\u662f\u6b63\u786e\u7684\u3002\u6b64\u65f6q[x]=x(x==p1[i]==p2[i]),\u5219\u8bf4\u660eq\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u6b63\u786e\u7684; \u5047\u5982p2[i]!=p1[i],\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\n\t//q\u4e2d\u51fa\u73b0\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5373\u5230\u65f6\u5019\u9700\u8981\u7edf\u8ba1\u5230\u9006\u5e8f\u5bf9\u91cc\u3002  \n```\n**$stable$_$sort$\u662f\u8ba9$sort$\u53d8\u6210\u7a33\u5b9a\u6392\u5e8f\uff0c\u662f\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u65f6\u79bb\u6563\u5316\u9700\u8981\u7684\uff0c\u8fd9\u4e2a\u9898\u91cc\u5176\u5b9e\u4e0d\u7528\uff0c\u56e0\u4e3a\u53ea\u7528\u5230\u4e86\u4f4d\u7f6e\u6570\u7ec4\u3002\u53ef\u4ee5\u76f4\u63a5\u7528$sort$\u3002**\n\n~~\u597d\u795e\u5947\u554a\uff01~~\n\n\u6ce8\u610f\u9700\u8981\u7528\u7684\u6570\u7ec4\u662f$p[i]$\u7684\u4fdd\u5b58\u4f4d\u7f6e\u7684\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4e0a\u539f\u6570\u7ec4\uff08\u5373\u4f7f\u79bb\u6563\u5316\u4e86\u4e5f\u4e0d\u884c\uff09\u3002\u901a\u8fc7\u4e0a\u9762\u6ce8\u91ca\u91cc\u7684\u63a8\u8bba\u5e94\u8be5\u662f\u53ef\u4ee5\u60f3\u660e\u767d\u8fd9\u4e2a\u9053\u7406\u7684\uff0c\u4f4d\u7f6e\u662f\u5173\u952e\u3002\n\n### $Code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000010;\nconst int mod=99999997;\nint a[maxn],b[maxn],p1[maxn],p2[maxn];\nint c[maxn],n;\nint q[maxn];\ninline int lowbit(int x){\n    return x&(-x);\n}\nvoid add(int k,int x){\n    for(int i=k;i<=n;i+=lowbit(i)) c[i]+=x;\n}\nint ask(int k){\n    long long ret=0;\n    for(int i=k;i>0;i-=lowbit(i)) ret+=c[i];\n    return ret;\n}\ninline bool cmp1(int x,int y){\n    return a[x]<a[y];\n}\ninline bool cmp2(int x,int y){\n    return b[x]<b[y];\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),p1[i]=i;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&b[i]),p2[i]=i;\n    stable_sort(p1+1,p1+1+n,cmp1),stable_sort(p2+1,p2+1+n,cmp2);\n    for(int i=1;i<=n;i++) q[p1[i]]=p2[i];\n    int ans=0;\n    for(int i=n;i>=1;i--){\n        ans=(ans+ask(q[i]-1))%mod;\n        add(q[i],1);\n    }\n    cout<<ans;\n    return 0;\n} \n```",
        "postTime": 1539248188,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\uff08~~\u6211\u4e00\u76f4\u4ee5\u4e3a\u8fd9\u9898\u662fDP\uff0c\u6ca1\u60f3\u5230\u7adf\u7136\u662f\u6c42\u9006\u5e8f\u5bf9QAQ~~\uff09\n\n## \u601d\u8def\n\n\u7ecf\u8fc7\u6f2b\u957f\u7684\u601d\u8003\uff08~~\u770b\u9898\u89e3~~\uff09\u540e\uff0c\u53d1\u73b0\u8fd9\u9053\u9898\u7adf\u7136\u662f\u6c42**\u9006\u5e8f\u5bf9\uff01\uff01\uff01**\n\n\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u8bc1\u660e\uff1a\n\n\u9898\u76ee\u6c42\u7684\u662f$\\min(\\sum(a_i-b_i)^2)$\n\n$\\min(\\sum = \\min{\\sum(a_i^2+b_i^2) - \\sum2*ai*bi)$\n\n\u5c55\u5f00\u540e\u53d8\u6210\u4e86$\\min((\\sum(a_i^{2} + b_i^2) - \\sum2*a_i*b_i)$\uff1b\n\n\u4ed4\u7ec6\u5206\u6790\uff0c\u53d1\u73b0 $\\sum(a_i^{2} + b_i^2)$ \u7684\u503c\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u90a3\u4e48\u53ea\u6709\u4f7f\u5f97$\\sum2*a_i*b_i$\u6700\u5927\uff0c\u624d\u80fd\u4f7f\u5f97\u9898\u76ee\u6240\u6c42\u7684\u7b54\u6848\u6700\u5c0f\uff1b\n\n\u6240\u4ee5\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u6c42b\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u548ca\u6570\u7ec4\u4e2d\u7b2ci\u5c0f\u7684\u6570\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u5f97\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u7ed9\u51fa\u4e00\u6ce2\u7528**\u7ebf\u6bb5\u6811**\u6c42\u9006\u5e8f\u5bf9\u7684\u505a\u6cd5~\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define MAXN 2147483647\n\nusing namespace std;\nconst int mod=99999997;\nstruct edge\n{\n\tint val;\n\tint id;\n}a[100010],b[100010];\nstruct node\n{\n\tint l;\n\tint r;\n\tint val;\n}t[500010];\nint n,ans;\nint c[100010],f[100010];\nint cmp(edge a,edge b)\n{\n\treturn a.val<b.val;\n}\nvoid build(int x,int y,int z)\n{\n\tt[x].l=y;\n\tt[x].r=z;\n\tif(y==z) return;\n\tint mid=(y+z)/2;\n\tbuild(x*2,y,mid);\n\tbuild(x*2+1,mid+1,z);\n}\nvoid change(int p,int x,int k)\n{\n\tif(x==t[p].l&&x==t[p].r){\n\t\tt[p].val+=k;\n\t\treturn;\n\t}\n\tint mid=(t[p].l+t[p].r)/2;\n\tif(x<=mid) change(p*2,x,k);\n\telse change(p*2+1,x,k);\n\tt[p].val=t[p*2].val+t[p*2+1].val;\n}\nint ask(int p,int x,int y)\n{\n\tif(x<=t[p].l&&y>=t[p].r) return t[p].val;\n\tint sum=0;\n\tint mid=(t[p].l+t[p].r)/2;\n\tif(x<=mid) sum+=ask(p*2,x,y);\n\tif(y>mid) sum+=ask(p*2+1,x,y);\n\treturn sum;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i].val),a[i].id=i;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&b[i].val),b[i].id=i;\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tc[b[i].id]=a[i].id;\n    //\u4ee5\u4e0a\u548c\u5176\u4ed6dalao\u4e00\u6837\n    //\u4e00\u4e0b\u4e3a\u7ebf\u6bb5\u6811\u6c42\u9006\u5e8f\u5bf9\u7684\u505a\u6cd5\n    memcpy(f,c,sizeof c);\n    sort(f+1,f+n+1);\n\tbuild(1,1,n);\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tchange(1,c[i],1);\n\t\tif(c[i]==1) continue;\n\t\t(ans+=ask(1,1,c[i]-1))%=mod;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1537005479,
        "uid": 75010,
        "name": "lwz2002",
        "ccfLevel": 0,
        "title": "\u706b\u67f4\u6392\u961f"
    },
    {
        "content": "[\u9898\u89e3\u5728\u535a\u5ba2\u91cc\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.org/blog/LovToLZX/)\n\n\u672c\u9898\u5927\u81f4\u601d\u60f3\uff1a\u8d2a\u5fc3 + \u79bb\u6563\u5316 + \u9006\u5e8f\u5bf9\u7b97\u6cd5\n\n1.\u9996\u5148\u8981\u6c42\u706b\u67f4\u4e4b\u95f4\u5dee\u503c\u6700\u5c0f\n\n\u6839\u636e\u4e2d\u5b66\u65b9\u5dee\u601d\u60f3 \u53ef\u4e00\u4e2a\u5230\u8fd9\u6837\u4e00\u6761\u5b9a\u7406:\n\n# \u6211\u4eec\u8ba9\u706b\u67f4\u961f\u5217\u7532\u4e0e\u961f\u5217\u4e59 \u4e00\u4e00\u5bf9\u5e94\n\n# \u4e5f\u5c31\u662f \u7532\u7684\u7b2c\u4e00\u540d \u5bf9\u5e94\u4e59\u7684\u7b2c\u4e00\u540d\n\n# \u7532\u7684\u7b2c\u4e8c\u540d\u5bf9\u5e94\u4e59\u7684\u7b2c\u4e8c\u540d\n\n# ......\n\n2.\u6709\u4e86\u7b2c\u4e00\u6761  \u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u79bb\u6563\u5316\n\n3.\u79bb\u6563\u5316\u4e4b\u540e \u6211\u4eec\u5219\u9700\u8981\u8c03\u6362\u706b\u67f4\u961f\u5217\u4e59 \n\n\u4f7f\u5176\u4e0e\u706b\u67f4\u961f\u5217\u7532\u4e00\u81f4\n\n\u80bf\u4e48\u6c42\u6700\u5c11\u8c03\u6362\u6b21\u6570\u662f\u672c\u9898\u6838\u5fc3\n\n\u8fd9\u91cc\u9001\u5404\u4f4d\u4e00\u9053\u9898\n\n[\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217](https://www.luogu.org/problemnew/show/P1439)\n\n\u505a\u5b8c\u8fd9\u9053\u9898\u7684\u5404\u4f4d \u4f1a\u53d1\u73b0\n\n\u6211\u4eec\u5982\u679c\u4f7f\u7528\u6620\u5c04\u7684\u6982\u5ff5\n\n\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u6b64\u9898\n\n\u6837\u4f8b \uff1a\n\n\u7532 1 3 4 2\n\n\u4e59 1 7 2 4\n\n\u79bb\u6563\u5316\u4e4b\u540e\n\n\u7532 1 3 4 2\n\n\u4e59 1 4 2 3\n\n\u6620\u5c04\u4e4b\u540e\n\n\u7532 1 2 3 4\n\n\u4e59 1 3 4 2\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5341\u5206\u6e05\u723d\u7684\u53d1\u73b0\n\n# \u6620\u5c04\u5b8c\u4e4b\u540e\n\n# \u6700\u7ec8answer=\u961f\u5217\u4e59\u7684\u9006\u5e8f\u5bf9\u6570\n\n\u9006\u5e8f\u5bf9\u7b97\u6cd5\uff08\u672c\u849f\u84bb\u76ee\u524d\u5df2\u77e5\uff09\uff1a\n# \u2460 \u6811\u72b6\u6570\u7ec4 \u2461\u5f52\u5e76\u6392\u5e8f\n\n\u8fd9\u91cc\u5f31\u5f31\u7684\u732e\u4e0a\u5f52\u5e76\u6392\u5e8f\n\n# CODE\uff1a\n```cpp\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<stack>\n#include<list>\n#include<set>\n#include<deque>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define inf 0x7fffffff\n#define N 500008\n#define IL inline\n#define M 1008611\n#define D double\n#define ull unsigned long long\n#define R register\n#define mod 99999997\nusing namespace std;\ntemplate<typename T>void read(T &a)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    a=f?x:-x;\n}\n/*-------------OI\u4f7f\u6211\u5feb\u4e50-------------*/\nll n,ans;\nstruct node1{\n\tll data,id,rank;\n}e1[N];\nstruct node2{\n\tll data,id,rank;\n}e2[N];\nll num1[N],num2[N],key[N],res[N];\nIL bool cmp1(node1 a,node1 b){\n\treturn a.data==b.data ? a.id<b.id : a.data<b.data;\n}\nIL bool cmp2(node2 a,node2 b){\n\treturn a.data==b.data ? a.id<b.id : a.data<b.data;\n}\nIL bool cmp3(node1 a,node1 b){\n\treturn a.id<b.id;\n}\nIL bool cmp4(node2 a,node2 b){\n\treturn a.id<b.id;\n}\nIL void mesort(ll le,ll ri){\n\tif(le==ri) return;\n\tll mid=(le+ri)>>1;\n\tmesort(le,mid);mesort(mid+1,ri);\n\t\n\tll i=le,j=mid+1,k=le;\n\twhile(i<=mid&&j<=ri){\n\t\tif(num2[i]<=num2[j]) {res[k]=num2[i];++i;++k;}\n\t\telse {ans=(ans+mid-i+1)%mod;res[k]=num2[j];++j;++k;}\n\t}\n\twhile(i<=mid) {res[k]=num2[i];++i;++k;}\n\twhile(j<=ri) {res[k]=num2[j];++j;++k;}\n\tfor(R ll x=le;x<=ri;++x) num2[x]=res[x];\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n    read(n);\n    for(R ll i=1;i<=n;++i) read(e1[i].data),e1[i].id=i;\n    for(R ll i=1;i<=n;++i) read(e2[i].data),e2[i].id=i;\n    sort(e1+1,e1+n+1,cmp1);sort(e2+1,e2+n+1,cmp2);\n    for(R ll i=1;i<=n;++i) e1[i].rank=i,e2[i].rank=i;\n    sort(e1+1,e1+n+1,cmp3);sort(e2+1,e2+n+1,cmp4);\n//    for(R ll i=1;i<=n;++i) printf(\"%lld%c\",e1[i].rank,(i==n ? '\\n':' '));\n//    for(R ll i=1;i<=n;++i) printf(\"%lld%c\",e2[i].rank,(i==n ? '\\n':' '));\n    for(R ll i=1;i<=n;++i) num1[i]=e1[i].rank;\n    for(R ll i=1;i<=n;++i) num2[i]=e2[i].rank;\n    for(R ll i=1;i<=n;++i) key[num1[i]]=i,num1[i]=i;\n    for(R ll i=1;i<=n;++i) num2[i]=key[num2[i]]; \n    mesort(1,n);\n    cout<<ans<<endl;\n//    for(R ll i=1;i<=n;++i) printf(\"%lld%c\",num1[i],(i==n ? '\\n':' '));\n//    for(R ll i=1;i<=n;++i) printf(\"%lld%c\",num2[i],(i==n ? '\\n':' '));\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n\n```\n\nNOIP2018\u5373\u5c06\u5230\u6765\n\n\u795d\u5404\u4f4ddalao RP++  \u5168\u573aAK\n\n\u8c22\u8c22",
        "postTime": 1535437408,
        "uid": 87931,
        "name": "tcswuzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "#### \u770b\u4e86\u56fd\u738b\u6e38\u620f\u90a3\u9898dalao\u4eec\u7684\u9898\u89e3\u540e\uff0c\u6709\u4e00\u4e2a\u60f3\u6cd5\n\n------------\n\u9996\u5148\uff0c\u6211\u4eec\u5047\u8bben=2\uff0c\u5219\u6709\uff1a\n- \u7b2c\u4e00\u5217\uff1aa1\uff0ca2\n- \u7b2c\u4e8c\u5217\uff1ab1\uff0cb2\n------------\n\u800c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5176\u66ff\u6362\u4e3a\uff1a\n- \u7b2c\u4e00\u5217\uff1aa1\uff0ca2\n- \u7b2c\u4e8c\u5217\uff1ab2\uff0cb1\n------------\n\u5219\u5f97\u5230\u4e24\u4e2a\u5f0f\u5b50\uff1a\n- ( a1-b1 )^2 + ( a2-b2 )^2 \u2460\n- ( a1-b2 )^2 + ( a2-b1 )^2 \u2461\n------------\n\u6211\u4eec\u5047\u8bbe\u539f\u6765\u7684\u65b9\u6848\u4f18\u4e8e\u66ff\u6362\u540e\u7684\u65b9\u6848\uff0c\u5219\u6709\uff1a\n- \u2460<\u2461\n- \u5373( a1-b1 )^2 + ( a2-b2 )^2 < ( a1-b2 )^2 + ( a2-b1 )^2\n- \u5316\u7b80\u5f97 a1 \u00b7 b1 + a2 \u00b7 b2 < a1 \u00b7 b2 + a2 \u00b7 b1\n- \u79fb\u9879\u5f97 \u2460 a1 ( b1-b2 ) < a2 ( b1-b2 ) \u5373 a1 < a2\n- \u6216\u8005\u5f97 \u2461 b1 ( a1-a2 ) < b2 ( a1-a2 ) \u5373 b1 < b2\n------------\n\u7531\u6b64\u63a8\u5bfc\u51fa\u7ed3\u8bba\uff1a\n- \u5f53\u4e24\u5217\u706b\u67f4\u4e2d\u9ad8\u5ea6\u987a\u5e8f\u76f8\u540c\u7684\u4e24\u6839\u706b\u67f4\u5904\u4e8e\u540c\u4e00\u4f4d\u7f6e\u65f6\uff0c\u6709\u6700\u5c0f\u8ddd\u79bb\u3002\n\n------------\n\u6240\u4ee5\u8981\u7528\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u3002\u4f46\u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u8bf4\u7684\u9ad8\u5ea6\u987a\u5e8f\u76f8\u540c\u5728\u540c\u4e00\u4f4d\u7f6e\uff0c\u5e76\u4e0d\u662f\u6307\u628a\u4e24\u5217\u706b\u67f4\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\uff0c\u800c\u662f\u5c06\u4e24\u5217\u706b\u67f4\u6309\u9ad8\u5ea6\u6392\u5e8f\u540e\uff0c\u4ee5\u5176\u4e2d\u4e00\u5217\u706b\u67f4\u7684\u9ad8\u5ea6\u987a\u5e8f\u6765\u5f52\u5e76\u6392\u5e8f\u53e6\u4e00\u5217\u706b\u67f4\u3002\n\n------------\n\u697c\u4e0bdalao\u4eec\u7684code\u6e05\u6670\u660e\u4e86\uff0c\u5efa\u8bae\u53c2\u8003\u3002\u5176\u5b9ecode\u90fd\u5dee\u4e0d\u591a\u7684\uff0c\u4e3b\u8981\u662f\u7406\u89e3\uff0c\u7406\u89e3\u5c31\u597d\u2026\u2026\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nstruct match{\n  long h,p;\n}a1[100001],a2[100001];\n\nlong n,b[100001]={0},c[100001]={0};\nlong long ans=0;\n\nbool com(match x,match y)\n{\n  return x.h<y.h;\n}\n\nvoid msb(int l,int r)\n{\n  if(l==r) return;\n  int m=(l+r)/2;\n  msb(l,m);\n  msb(m+1,r);\n  int i=l,j=m+1,t=1;\n  while(i<=m || j<=r)\n  {\n    if((b[i]<=b[j] || j>r) && i<=m)\n\t{\n\t  c[t]=b[i];\n\t  t++;\n\t  i++;\n\t  continue;\n\t}\n\tif((b[i]>b[j] || i>m) && j<=r)\n\t{\n\t  c[t]=b[j];\n\t  t++;\n\t  j++;\n\t  if(i<=m)\n\t    ans=(ans+m-i+1)%99999997;\n\t  continue;\n\t}\n  }\n  for(i=l;i<=r;i++)\n    b[i]=c[i-l+1];\n  return;\n}\n\nint main()\n{\n  int i;\n  cin>>n;\n  for(i=1;i<=n;i++)\n  {\n    scanf(\"%ld\",&a1[i].h);\n\ta1[i].p=i;\n  }\n  for(i=1;i<=n;i++)\n  {\n    scanf(\"%ld\",&a2[i].h);\n\ta2[i].p=i;\n  }\n  sort(a1+1,a1+n+1,com);\n  sort(a2+1,a2+n+1,com);\n  for(i=1;i<=n;i++)\n    b[a1[i].p]=a2[i].p;\n  msb(1,n);\n  cout<<ans;\n  return 0;\n}\n\n```",
        "postTime": 1531710408,
        "uid": 53126,
        "name": "Anahao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u8981\u627e\u51fa\u600e\u6837\u79fb\u52a8\u624d\u80fd\u4f7f\u5f97\u8ddd\u79bb\u6700\u5c0f\u3002\n\n\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\u4e0b\u9762\u4e24\u4e2a\u6570\u5217\n\n\ta1,a2,a3,......,an-1,an;\n    b1,b2,b3,......,bn-1,bn;\n\n\u6211\u4eec\u5f88\u663e\u7136\u9700\u8981\u8fdb\u884c\u9002\u5f53\u7684\u4ea4\u6362\u4f7f\u5f97\u5176\u4e24\u6570\u5217\u76f8\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u4e4b\u5dee\u7684\u5e73\u65b9\u7684\u548c\u6700\u5c0f\u3002\u8003\u8651\u4ea4\u6362ai\u4e0eaj\u4e4b\u524d\u4e0e\u4e4b\u540e\u7684\u60c5\u51b5\n\n\t\u4ea4\u6362\u524d\uff1asum=(ai-bi)^2+(aj-bj)^2=ai^2+bi^2+aj^2+bj^-2*ai*bi-2*aj*bj ------------------ 1\u5f0f\n    \u4ea4\u6362\u540e\uff1asum'=(ai-bj)^2+(aj-bi)^2=ai^2+bi^2+aj^2+bj^2-2*ai*bj-2*aj*bi ------------------ 2\u5f0f\n    sum'-sum=2*ai*bi+2*aj*bj-2*ai*bj-2*aj*bi\n            =2*(ai-aj)*(bi-bj)\n    \u663e\u7136\uff0csum'-sum<0\u65f6\uff0c\u4ea4\u6362\u66f4\u4f18\uff0c\u8fd9\u9700\u8981\u6ee1\u8db3(ai-aj)*(bi-bj)<0\n    \n    \u5373\uff0c\u5f53ai-aj\u4e0ebi-bj\u540c\u53f7\u65f6\u6700\u4f18\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u5bf9i\uff0cj\u8fdb\u884c\u8fd9\u6837\u7684\u5904\u7406\u540e\uff0c\u4f1a\u53d1\u73b0\uff0c\u5f53\u5728a\u4e2d\uff0c\u6bd4ai\u5927\u7684\u6570\u7684\u4e2a\u6570\u4e0e\u5728b\u4e2d\u6bd4bi\u5927\u7684\u6570\u7684\u4e2a\u6570\u76f8\u540c\u65f6\u662f\u6700\u4f18\u89e3\uff0c\u603b\u8ddd\u79bb\u6700\u77ed\n    \n    \u6240\u4ee5\u6211\u4eec\u8981\u4f7fa\u4e2d\u7684\u6700\u5927\u4e0eb\u4e2d\u7684\u6700\u5927\u5bf9\u5e94\uff0c\u4f9d\u6b21\u5bf9\u5e94\u3002\n\n\u8fd9\u65f6\u7528tar\u6570\u7ec4\u8bb0\u5f55\u76ee\u6807\u4f4d\u7f6e\uff0c\u7136\u540e\u7528\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\u6765\u6c42\u89e3\u3002\n\n```\nstruct node{\n\tlong long val;\n\tint num;\n\tbool operator < (const node x) const{\n\t\treturn val<x.val;\n\t}\n};\n\nfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&a[i].val);\n\ta[i].num=i;\n}\nfor(int i=1;i<=n;i++){\n\tscanf(\"%d\",&b[i].val);\n\tb[i].num=i;\n}\nsort(a+1,a+n+1);\nsort(b+1,b+n+1);\nfor(int i=1;i<=n;i++){\n\ttar[a[i].num]=b[i].num;\n}\n```\n\u6c42tar\n\u7528\u5f52\u5e76\u6392\u5e8f\u6765\u6c42\u9006\u5e8f\u5bf9\n\n```\nvoid divide(int l,int r){\n    if(l>=r) return;\n    int mid=(l+r)>>1;\n    divide(l,mid);\n    divide(mid+1,r);\n    int i=l,j=mid+1;\n    int k=l;\n    while(i<=mid&&j<=r){\n        if(tar[i]>tar[j]){\n            newt[k++]=tar[j++];\n            sum=sum+mid-i+1;\n        }\n        else{\n            newt[k++]=tar[i++];\n        }\n    }\n    while(i<=mid) newt[k++]=tar[i++];\n    while(j<=r) newt[k++]=tar[j++];\n    for(int t=l;t<=r;t++){\n        tar[t]=newt[t];\n    }\n}\n```\n\u603b\u7a0b\u5e8f\u5982\u4e0b\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int mod=99999997;\nint n;\nlong long sum;\nstruct node{\n    long long val;\n    int num;\n    bool operator < (const node x) const{\n        return val<x.val;\n    }\n};\nnode a[100010];\nnode b[100010];\nint tar[100010];\nint newt[100010];\n\nvoid divide(int l,int r){\n    if(l>=r) return;\n    int mid=(l+r)>>1;\n    divide(l,mid);\n    divide(mid+1,r);\n    int i=l,j=mid+1;\n    int k=l;\n    while(i<=mid&&j<=r){\n        if(tar[i]>tar[j]){\n            newt[k++]=tar[j++];\n            sum=sum+mid-i+1;\n        }\n        else{\n            newt[k++]=tar[i++];\n        }\n    }\n    while(i<=mid) newt[k++]=tar[i++];\n    while(j<=r) newt[k++]=tar[j++];\n    for(int t=l;t<=r;t++){\n        tar[t]=newt[t];\n    }\n}\n\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i].val);\n        a[i].num=i;\n    }\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&b[i].val);\n        b[i].num=i;\n    }\n    sort(a+1,a+n+1);\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++){\n        tar[a[i].num]=b[i].num;\n    }\n    divide(1,n);\n    sum%=mod;\n    cout<<sum<<endl;\n}\n```",
        "postTime": 1531120114,
        "uid": 71080,
        "name": "\u8363\u4e00\u9e23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "### **\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3**\n\u56e0\u4e3a\u6bce\u4ea4\u6362\u4e00\u6b21\uff0c\u5c31\u4f1a\u51cf\u5c11\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u672c\u9898\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\u53ef\u7528\u6811\u72b6\u6570\u7ec4\u6216\u5f52\u5e76\u6392\u5e8f\uff0c\u53d1\u73b0\u9898\u89e3\u533a\u6811\u72b6\u6570\u7ec4\u7248\u660e\u663e\u504f\u5c11\uff0c\u672c\u849f\u84bb\u6765\u53d1\u4e00\u6ce2\u3002\uff08\u6811\u72b6\u6570\u7ec4\u5927\u6cd5\u597d\uff0c~~\u5f52\u5e76\u6392\u5e8f\u7e41\u7410~~\uff09\n\n~~\u81ea\u4ee5\u4e3a\u7801\u98ce\u6e05\u79c0~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=1000010;\n\nstruct NODE{\n    int val, num;\n}a[MAXN], b[MAXN];\nint c[MAXN], d[MAXN], ans, n;\n\n//\u5feb\u8bfb \nint read(){\n    int x=0,f=1; \n    char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') f=-f;   \n        ch=getchar();\n    }\n    while(ch<='9'&&ch>='0'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint cmp(NODE x, NODE y){\n    return x.val<y.val;\n}\n\nint lowbit(int x){\n    return x&(-x);\n}\n\n//\u67e5\u8be2\u524d\u7f00\u548c \nint ask(int x){\n    int s=0;\n    while (x>0){\n        s+=c[x];\n        x-=lowbit(x);\n    }\n    return s;\n}\n\n//\u5355\u70b9\u52a0\u503c \nvoid add(int x){\n    while (x<=n){\n        c[x]++;\n        x+=lowbit(x);\n    }\n}\n\nint main(){\n    cin>>n;\n    for (int i=1; i<=n; i++){\n        a[i].val=read();\n        a[i].num=i;\n    }\n    for (int i=1; i<=n; i++){\n        b[i].val=read();\n        b[i].num=i;\n    }\n    \n    //\u6392\u5e8f\uff0c\u79bb\u6563\u5316\n    sort(a+1, a+n+1, cmp);\n    sort(b+1, b+n+1, cmp);\n    for (int i=1; i<=n; i++)\n    \td[a[i].num]=b[i].num;\n\n    //\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n    for (int i=n; i>=1; i--){\n    \tadd(d[i]);\n    \tans+=ask(d[i]-1);\n\t\tans%=99999997;//\u6ce8\u610f\u53d6\u6a21\u548c\u52a0\u503c\u4e00\u5b9a\u8981\u5206\u5f00\u5199\uff0c\u4e0d\u713680\u5206\uff0c\u54ea\u4f4ddalao\u77e5\u9053\u4e3a\u4ec0\u4e48\uff1f \n    }\n    cout<<ans<<endl;\n    return 0;\n} \n```",
        "postTime": 1531106442,
        "uid": 54501,
        "name": "Kamilavalieva26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8bf4\u660e\uff1a\n\n\u5728\u6570\u5b66\u4e2d\u6709\u4e2a\u516c\u5f0f\uff1a\n\n(a1-b1)^2+(a2-b2)^2<(a2-b1)^2+(a1-b2)^2\n\n\uff08\u4f60\u53ef\u4ee5\u81ea\u5df1\u8bd5\u7740\u8bc1\u4e00\u4e0b\uff09\n\n\u4e24\u5217\u706b\u67f4\u5bf9\u5e94\u7684\u4e24\u6839\u706b\u67f4\u5728\u5404\u5217\u4e2d\u9ad8\u5ea6\u7684\u6392\u5e8f\u5e94\u8be5\u76f8\u540c\n\n\u518d\u7533\u8bf7\u4e00\u4e2ar\u6570\u7ec4\uff0c\u4f7f\u5f97r[a[i].num]=b[i].num\n\n\u7136\u540e\uff0c\u663e\u800c\u6613\u89c1\uff0c\u672c\u9898\u5f97\u89e3\u3002\n\n#\u6e29\u99a8\u63d0\u793a\uff1a\u4ee3\u7801\u6709\u9632\u6284\u88ad\u7cfb\u7edf\uff0c\u5c0f\u5fc3\u6284\u88ad\u6389\u5751\u91cc\u3002\n\n\n\n```cpp\n    #include <cstdio>\n    #include <algorithm>\u53cd\u6284\u88ad\u7cfb\u7edf\n    using namespace std;\n    struct huochai\n    {\n        int h;\n        int num;\n    }a[100001],b[100001];\n    int n;\n    int read()\n    {\n        char ch=getchar();\n        while(ch<'0' || ch>'9')\n        {\n            ch=getchar();\n        }\n        int h=0;\n        while(ch<='9' && ch>='0') \n        {\n            h=h*10+ch-48;\n            ch=getchar();\n        }\n        return h;\n    }\n    int my(const huochai&a,const huochai&b)\n    {\n        if(a.h<b.h)\n        {\n            return 1;\n        }\n        else\n        {\n            return 0;\n        }\n    } \n    int c[100001],r[100001],tot=0;\n    void merge_sort(int left,int right)\n    {\n        if(left==right)\u53cd\u6284\u88ad\u7cfb\u7edf\n        {\n            return;\n        }\n        int mid=(right+left)/2,x=left,y=mid+1,t=left;\n        merge_sort(left,mid);\n        merge_sort(mid+1,right);\n        while(x<=mid&&y<=right)\n        {\n            if(r[x]>r[y])\n            {\n                tot=tot+mid-x+1;\n                tot=tot%99999997; \n                c[t++]=r[y++];\n            }\n            else\n                c[t++]=r[x++];\n        }\n        while(x<=mid)\n        {\n            c[t++]=r[x++];\n        }\n        while(y<=right)\n        {\n            c[t++]=r[y++];\n        }\n        for(int w=left;w<=right;w++)\n        {\n            r[w]=c[w];\n        }\n    }\n    int main()\n    {\n        n=read();\u53cd\u6284\u88ad\u7cfb\u7edf\n        for(int i=1;i<=n;i++)\n        {\n            a[i].h=read();\n        }\n        for(int i=1;i<=n;i++)\n        {\n            a[i].num=i;\n        }\n        for(int i=1;i<=n;i++)\n        {\n            b[i].h=read();\n        }\n        for(int i=1;i<=n;i++)\n        {\n            b[i].num=i;\n        }\n        sort(a+1,a+n+1,my);\n        sort(b+1,b+n+1,my);\n        for(int i=1;i<=n;i++)\n        {\n            r[a[i].num]=b[i].num;\n        }\n        merge_sort(1,n); \u53cd\u6284\u88ad\u7cfb\u7edf\n        printf(\"%d\",tot);\n        return 0;\n    }\n#\u518d\u6b21\u6e29\u99a8\u63d0\u793a\uff1a\u4ee3\u7801\u6709\u9632\u6284\u88ad\u7cfb\u7edf\uff0c\u5c0f\u5fc3\u6284\u88ad\u6389\u5751\u91cc\u3002\n```",
        "postTime": 1513393756,
        "uid": 61096,
        "name": "\u6838\u5f39\u5934AC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u7531\u2211(ai-bi)^2\u53ef\u4ee5\u5f97\u5230\u5f53\u6bcf\u4e2a(ai-bi)^2\u6700\u5c0f\uff0c\u2211(ai-bi)^2\n\n\u5f53(ai-bi)^2\u6700\u5c0f\uff0cabs(ai-bi)\u9700\u8981\u6700\u5c0f\uff0c\u5176\u5b9e\u662f\u8d2a\u5fc3\u7684\u601d\u8def\uff08\u7b80\u5355\u8bc1\u660e\uff09\n\n\u5bf9\u4e8e\u4e24\u4e2a\u5e8f\u5217a\uff0cb\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5e8f\u5217\u7b2ci\u5c0f\u503c\u5bf9\u5e94\u7b2ci\u5c0f\u503c\u65f6abs(ai-bi)\u6700\u5c0f\n\n\u800c\u9898\u76ee\u4e0d\u8981\u6c42\u5173\u4e8ea\uff0cb\u5e8f\u5217\u4e2d\u503c\u7684\u82e5\u5e72\u95ee\u9898\uff0c\u7531\u6b64\u60f3\u5230\u5bf9a,b\u79bb\u6563\u5904\u7406\uff1a\n\n\u4e3e\u4f8b\u6765\u770b\uff1a\u5bf9\u4e8ea[]=1 123 7 966 1208;b[]=21 34 36 25 111\n\n\u79bb\u6563\u540e a[]=1 3 2 4 5; b[]=1 3 4 2 5\n\n\u63a5\u4e0b\u6765b\u600e\u4e48\u5728\u6700\u77ed\u7684\u6b65\u6570\u5230a\uff1f\n\n\u6620\u5c04\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2aa[i]\u7684\u503c\u5bf9\u5e94\u4e00\u4e2ai\uff0cb[i]\u6620\u5c04\u5230\u65b0\u5e8f\u5217\u7684d[i]\u4e2d\n\nfor i:=1 to n do d[a[i].id]:=b[i].id;\n\n\u7b54\u6848\u5c31\u662fd\u7684\u9006\u5e8f\u5bf9\n\n\u8fd9\u91cc\u7531\u4e8e\u4e0d\u4f1a\u6253\u7ebf\u6bb5\u6811\u548c\u5f52\u5e76\u6240\u4ee5\u6253\u4e2a\u6811\u72b6\u6570\u7ec4\n\n```cpp\nconst maxn=100000;\ntype rec=record\n     id,x:longint;\nend;\narr=array[1..maxn]of rec;\nvar a,b:arr;\n    c,d:array[1..maxn]of longint;\n    n,ans,i:longint;\nprocedure qsort(l,r:longint; var a:arr);\nvar i,j,mid:longint; t:rec;\nbegin\ni:=l; j:=r;\nmid:=a[(l+r)div 2].x;\nwhile i<j do\nbegin\n while a[i].x<mid do inc(i);\n while a[j].x>mid do dec(j);\n if i<=j then begin\n   t:=a[i]; a[i]:=a[j]; a[j]:=t;\n   inc(i);dec(j);\n end;\nend;\nif l<j then qsort(l,j,a);\nif r>i then qsort(i,r,a);\nend;\nprocedure update(x,y:longint);\nbegin\n while x<=n do begin\n  c[x]:=c[x]+y;\n  x:=x+x and (-x);\n end;\nend;\nfunction query(x:longint):longint;\nvar  cnt:longint;\nbegin\n cnt:=0;\n while x>0 do begin\n  cnt:=cnt+c[x];\n  x:=x-x and (-x);\n end;\n exit(cnt);\nend;\nbegin\n readln(n);\n for i:=1 to n do begin read(a[i].x); a[i].id:=i; end;readln;\n for i:=1 to n do begin read(b[i].x); b[i].id:=i; end;readln;\n qsort(1,n,a);\n qsort(1,n,b);\n for i:=1 to n do d[a[i].id]:=b[i].id;\n for i:=1 to n do begin\n  update(d[i],1);\n  ans:=(ans+i-query(d[i]))mod 99999997;\n end;\n writeln(ans mod 99999997);\nend.\n\n```",
        "postTime": 1500254996,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6298\u817e\u4e86\u4e00\u4e2a\u665a\u4e0a\uff0c\u6700\u540e\u7ec8\u4e8e\u5f04\u51fa\u6765\u4e86\n\n\u601d\u8def\u89c1\u4ee3\u7801\u6700\u540e\u7684\u6ce8\u91ca\u6bb5\n\n\u7136\u540e\u81f3\u4e8e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u600e\u4e48\u6c42\uff0c\u6a21\u62df\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u4ee3\u7801\u8fd8\u662f\u5f88\u53cb\u597d\u7684\n\n\u6ce8\u610f\u4e00\u4e2a\u70b9\uff0c\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u5019\u7edf\u8ba1\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e0d\u662f++\uff0c\u800c\u662f+=mid-\u5de6\u6307\u9488+1\uff08\u67e5\u4e86\u6211\u534a\u4e2a\u591a\u5c0f\u65f6\uff0c\u6539\u4e86\u5c31\u5bf9\u4e86\uff09\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm> \n#include<cstdlib>\nusing namespace std;\nstruct huochai{\n    int h;//\u9ad8\u5ea6 \n    int num;//\u5e8f\u53f7 \n}a[100001],b[100001];\nint n;\nint read()\n{\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    int h=0;\n    while(ch<='9'&&ch>='0') \n    {\n        h=h*10+ch-48;\n        ch=getchar();\n    }\n    return h;\n}\nint my(const huochai&a,const huochai&b)\n{\n    if(a.h<b.h) return 1;\n    else return 0;\n} \nint c[100001],r[100001],tot=0; \nvoid merge_sort(int left,int right)\n{\n    if(left==right) return;\n    int mid=(right+left)/2,x=left,y=mid+1,t=left;\n    merge_sort(left,mid);\n    merge_sort(mid+1,right);\n    while(x<=mid&&y<=right)\n    {\n        if(r[x]>r[y])\n        {\n            tot+=mid-x+1;//\u91cd\u70b9\uff01\uff01\uff01\n            tot%=99999997; \n            c[t++]=r[y++];\n        }\n        else\n            c[t++]=r[x++];\n    }\n    while(x<=mid) c[t++]=r[x++];\n    while(y<=right) c[t++]=r[y++];\n    for(int w=left;w<=right;w++) r[w]=c[w];\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++) a[i].h=read();\n    for(int i=1;i<=n;i++) a[i].num=i;\n    for(int i=1;i<=n;i++) b[i].h=read();\n    for(int i=1;i<=n;i++) b[i].num=i;\n    sort(a+1,a+n+1,my);\n    sort(b+1,b+n+1,my);\n    for(int i=1;i<=n;i++) r[a[i].num]=b[i].num;\n    //\u5f52\u5e76\u6c42\u9006\u5e8f\u5bf9\n    merge_sort(1,n); \n    cout<<tot;\n    return 0;\n}\n//\u672c\u9898\u601d\u8def\uff1a\n//\u5148\u6765\u8bc1\u660e\u4e00\u4e2a\u516c\u5f0f\uff1a\u82e5a1>a2\u4e14b1>b2\uff0c\u5219\u6709(a1-b1)^2+(a2-b2)^2<(a2-b1)^2+(a1-b2)^2\n//     \u5f53\u7136\u8fd9\u4e2a\u516c\u5f0f\u5f88\u5bb9\u6613\u8bc1\uff0c\u62c6\u5f00\u5c31\u597d\u4e86\n//     \u7136\u540e\u8fd0\u7528\u8fd9\u4e2a\u516c\u5f0f\uff0c\u53d1\u73b0\u4e3a\u4fdd\u8bc1\u706b\u67f4\u8ddd\u79bb\u6700\u5c0f\uff0c\u4e24\u5217\u706b\u67f4\u5bf9\u5e94\u7684\u4e24\u6839\u706b\u67f4\u5728\u5404\u5217\u4e2d\u9ad8\u5ea6\u7684\u6392\u540d\u5e94\u8be5\u76f8\u540c\n//\u518d\u6765\u5b9a\u4e49\u4e00\u4e2ar\u6570\u7ec4\uff0c\u4f7f\u5f97r[a[i].num]=b[i].num,\u5219\u53ef\u4ee5\u5f88\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u4ea4\u6362\u6b21\u6570\u5373\u4e3ar\u6570\u7ec4\u4e2d\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u6b64\u9898\u5f97\u89e3\n```",
        "postTime": 1499050527,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u5148\u5c06\u4e24\u4e2a\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u4ed6\u4eec\u7684\u7f16\u53f7\u4ee5\u4e00\u4e00\u5bf9\u5e94\uff0cmax\u5bf9max\uff0cmin\u5bf9min\uff0c\n\n\u518d\u5f52\u5e76\u6392\u5e8f\u5bfb\u627e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\n\n   \n  \n  \n  \n \n\n \n \n \n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct asd{\n  int x;\n  int s;\n}a[100002],b[100002];\nint n,f[100002],ans,p[100002],k;\nint comp(asd a,asd b)\n{\n  return a.s<b.s;\n}\nvoid fg(int h,int t)\n{\n  int m,i,j;\n  if(h==t) return;\n  m=(h+t)/2;\n  fg(h,m);\n  fg(m+1,t);\n  i=h; j=m+1; k=h;\n  while(i<=m&&j<=t)\n {\n   if(f[j]<f[i]) ans=(ans+m-i+1)%99999997;\n   if(f[i]<f[j]) { p[k]=f[i]; k++; i++; }\n   else { p[k]=f[j]; k++; j++; } \n }\n while(i<=m) { p[k]=f[i]; k++; i++; }\n while(j<=t) { p[k]=f[j]; k++; j++; }\n for(i=h;i<=t;i++) f[i]=p[i];\n}\nint main()\n{\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n  int i,j;\n  scanf(\"%d\",&n);\n  for(i=1;i<=n;i++) { scanf(\"%d\",&a[i].s); a[i].x=i; }\n  for(i=1;i<=n;i++) { scanf(\"%d\",&b[i].s); b[i].x=i; }\n  sort(a+1,a+n+1,comp);\n  sort(b+1,b+n+1,comp);\n for(i=1;i<=n;i++) f[a[i].x]=b[i].x;\n fg(1,n);\n cout<<ans%99999997;\n fclose(stdin);\n fclose(stdout);\n return 0;\n} \n\n```",
        "postTime": 1446098251,
        "uid": 7427,
        "name": "\u5979\u8bf4123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1966 \u3010\u706b\u67f4\u6392\u961f\u3011"
    },
    {
        "content": "\u672c\u9898\u5373\u6c42$min\\sum_{i=1}^{n}{(a_i-b_i)^2}$\n\n\u5373$max\\sum_{i=1}^{n}{a_i*b_i}$\n\n\u7531\u6392\u5e8f\u4e0d\u7b49\u5f0f\u77e5\u6b63\u5e8f\u548c\u6700\u5927\uff0c\u6545\u53ea\u9700\u6c42\u5c06a,b\u5e8f\u5217\u53d8\u6210\u6b63\u5e8f\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u9996\u5148\u5bf9a\u64cd\u4f5c\u6216\u5bf9b\u64cd\u4f5c\u662f\u6ca1\u6709\u533a\u522b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u7cfba,b\u4e2d\u5143\u7d20\n\n\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u53ea\u5bf9b\u64cd\u4f5c\u3002\n\n\u56e0\u53ea\u5173\u5fc3\u5927\u5c0f\uff0c\u4e0d\u59a8\u5c06a,b\u5206\u522b\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u5c06a\u4e00\u4e00\u6620\u5c04\u62101-n\uff0c\u53ea\u9700\u6c42\u5c06b\u5e8f\u5217\u53d8\u62101,2,3...n\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u9996\u5148\u4efb\u610f\u4e00\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06b\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570-1\uff0c\u6216\u8005+1\u3002\n\n\u8bbeb\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u5bf9\u6570\u4e3as\uff0c\u5219\u5c06b\u5e8f\u5217\u53d8\u6210a\u5e8f\u5217\u81f3\u5c11\u9700\u8981s\u6b65\u3002\n\n\u53c8\u56e0\u6bcf\u6b21\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06b\u5e8f\u5217\u9006\u5e8f\u5bf9\u6570\u91cf--(\u5426\u5219b\u5e8f\u5217\u5df2\u7ecf\u53d8\u6210a\u5e8f\u5217)\u3002\n\n\u6545\u53ef\u4ee5\u7528s\u6b65\u5c06b\u5e8f\u5217\u53d8\u4e3aa\u5e8f\u5217\u3002\n\n\u7efc\u4e0a\u5c06b\u5e8f\u5217\u53d8\u4e3aa\u5e8f\u5217\u7684\u6700\u5c0f\u6b65\u6570\u5373\u4e3ab\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u5bf9\u6570\u3002",
        "postTime": 1520403100,
        "uid": 59098,
        "name": "Mizuhara",
        "ccfLevel": 0,
        "title": "P1966 \u706b\u67f4\u6392\u961f"
    }
]