[
    {
        "content": "## \u7ebf\u6bb5\u6811\n\n\u8fd9\u9898\u6807\u7b7e\u9519\u4e86\u5427\u3002\u660e\u660e\u662f\u7ebf\u6bb5\u6811\u88f8\u9898\u554a\n\n\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u52a0\u4fee\u6539\uff0c\u57fa\u672c\u64cd\u4f5c\u561b\uff0c\u6ce8\u610f\u5f00longlong\n\n\u4e00\u904d\u8fc7\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define lson k<<1,l,mid\n#define rson k<<1|1,mid+1,r\n#define ls k<<1\n#define rs k<<1|1\n#define mid ((l+r)>>1)\n#define LL long long\nusing namespace std;\nconst int N=200005;\nint n,q;\nLL tr[N<<2],laz[N<<2],mi[N<<2];\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn w*s;\n}\ninline void update(int k){\n\ttr[k]=tr[ls]+tr[rs];\n\tmi[k]=min(mi[ls],mi[rs]);\n}\ninline void down(int k,int l,int r){\n\tlaz[ls]+=laz[k];laz[rs]+=laz[k];\n\ttr[ls]+=laz[k]*(mid-l+1);mi[ls]+=laz[k];\n\ttr[rs]+=laz[k]*(r-mid);mi[rs]+=laz[k];\n\tlaz[k]=0;\n}\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\ttr[k]=mi[k]=read();\n\t\treturn ;\n\t}\n\tbuild(lson);build(rson);\n\tupdate(k);\n}\nvoid change(int k,int l,int r,int x,int y,int z){\n\tif(l==x&&y==r){\n\t\ttr[k]+=(LL)z*(r-l+1);\n\t\tmi[k]+=z;\n\t\tlaz[k]+=z;\n\t\treturn ;\n\t}\n\tif(laz[k])down(k,l,r);\n\tif(y<=mid)change(lson,x,y,z);\n\telse if(x>mid)change(rson,x,y,z);\n\telse change(lson,x,mid,z),change(rson,mid+1,y,z);\n\tupdate(k);\n}\nLL ask(int k,int l,int r,int x,int y){\n\tif(l==x&&y==r){\n\t\treturn tr[k];\n\t}\n\tif(laz[k])down(k,l,r);\n\tif(y<=mid)return ask(lson,x,y);\n\telse if(x>mid)return ask(rson,x,y);\n\telse return ask(lson,x,mid)+ask(rson,mid+1,y);\n}\nLL query(int k,int l,int r,int x,int y){\n\tif(l==x&&y==r){\n\t\treturn mi[k];\n\t}\n\tif(laz[k])down(k,l,r);\n\tif(y<=mid)return query(lson,x,y);\n\telse if(x>mid)return query(rson,x,y);\n\telse return min(query(lson,x,mid),query(rson,mid+1,y));\n}\nint main(){\n\tn=read();q=read();\n\tbuild(1,1,n);\n\tchar ch[5];\n\tint x,y,z;\n\twhile(q--){\n\t\tscanf(\"%s\",ch+1);\n\t\tx=read();y=read();\n\t\tif(ch[1]=='P'){z=read();change(1,1,n,x,y,z);}\n\t\telse if(ch[1]=='M'){printf(\"%lld\\n\",query(1,1,n,x,y));}\n\t\telse if(ch[1]=='S'){printf(\"%lld\\n\",ask(1,1,n,x,y));}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1573478349,
        "uid": 151768,
        "name": "\u6d41\u901d\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3130 \u3010[USACO15DEC]\u8ba1\u6570haybalesCounting Haybales\u3011"
    },
    {
        "content": "##\n\u7ebf\u6bb5\u6811(\uff77\uff40\uff9f\u0414\uff9f\u00b4)!!\n\n\u7ef4\u62a4\u4e24\u4e2a\u503c,sum,min;\n\u7136\u540e\u8fd8\u6709\u61d2\u6807\u8bb0\uff1b\n\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1b\n\n\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\u53ef\u4ee5\u53bb\u505a\u6a21\u677f\u9898\uff0c\u867d\u7136\u6211\u89c9\u5f97\u8fd9\u4e2a\u4e5f\u662f\u4e2a\u6a21\u677fQwQ;\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int N=400000;\nint n,m,a[N];\nchar c;\nstruct tree\n{\n    int l;\n    int r;\n    int min;\n    int sum;\n    int add;\n}t[N<<2];//\u56db\u500d\uff01\uff01\uff01\nvoid pushup(int p)\n{\n    t[p].sum=t[p<<1].sum+t[p<<1|1].sum;\n    t[p].min=min(t[p<<1].min,t[p<<1|1].min);\n}//\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u5199\u51fd\u6570\uff0c\u65b9\u4fbf\u597d\u8c03\u8bd5\uff1b\uff08\u5411\u4e0a\u4f20\uff09\nvoid pushdown(int p)\n{\n\tif(!t[p].add)return;\n    t[p<<1|1].add+=t[p].add; \n\tt[p<<1].add+=t[p].add;\t\n\tt[p<<1].min+=t[p].add;\n\tt[p<<1|1].min+=t[p].add;\n\tt[p<<1|1].sum+=(t[p<<1|1].r-t[p<<1|1].l+1)*t[p].add;\n\tt[p<<1].sum+=(t[p<<1].r-t[p<<1].l+1)*t[p].add;\n\tt[p].add=0;//\u4e0d\u8981\u5fd8\u4e86\u6e05\u96f6QwQ\n}//\u5bf9\u4e8e\u61d2\u6807\u8bb0\u7684\u5904\u7406\uff08\u5411\u4e0b\u4f20\uff09\nvoid build(int p,int l,int r)\n{\n    t[p].l=l,t[p].r=r;\n    if(l==r){t[p].min=t[p].sum=a[l];return;}\n    int mid=l+r>>1;\n    build(p<<1,l,mid);build(p<<1|1,mid+1,r);\n    pushup(p);//\u522b\u5fd8\u4e86\u4f20\u9012\uff0c\u8fd9\u91cc\u7528\u624b\u5199\u51fd\u6570\u7684\u8bdd\u662f\u4e0d\u662f\u5f88\u597d\u770b\uff0c\u7ebf\u6bb5\u6811\u591a\u53ef\u7231\u5440\uff01\n}//\u5efa\u6811\u6ca1\u4ec0\u4e48\u8bf4\u7684\u5427QwQ\nvoid change(int p,int l,int r,int z)\n{\n    if(l<=t[p].l&&r>=t[p].r){t[p].add+=z,t[p].min+=z,t[p].sum+=(t[p].r-t[p].l+1)*z;return;}\n    pushdown(p);\n    int mid=t[p].l+t[p].r>>1;\n    if(l<=mid)change(p<<1,l,r,z);\n    if(r>mid)change(p<<1|1,l,r,z);\n    pushup(p);//\u4f20\u9012\n}\nint querysum(int p,int l,int r)\n{\n    if(l<=t[p].l&&r>=t[p].r)return t[p].sum;\n    pushdown(p);//\u61d2\u6807\u8bb0\u8981\u5411\u4e0b\u4f20\u9012\u4fe1\u606f\uff1b\n    int mid=t[p].l+t[p].r>>1;\n    int ans=0;\n    if(l<=mid)ans+=querysum(p<<1,l,r);\n    if(r>mid)ans+=querysum(p<<1|1,l,r);\n    return ans;\n}\nint querymin(int p,int l,int r)\n{\n    if(l<=t[p].l&&r>=t[p].r)return t[p].min;\n    pushdown(p);\n    int mid=t[p].l+t[p].r>>1;\n    int ans=0x7f7f7f7f;\n    if(l<=mid)ans=querymin(p<<1,l,r);\n    if(r>mid)ans=min(ans,querymin(p<<1|1,l,r));\n    return ans;\n}//\u8fd9\u4e2a\u548csum\u6ca1\u4ec0\u4e48\u533a\u522b\u5427\uff0c\u563b\u563b\nsigned main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        cin>>c;\n        if(c=='P')\n        {\n            int l,r,z;\n            scanf(\"%lld%lld%lld\",&l,&r,&z);\n            change(1,l,r,z);\n        }\n        if(c=='M')\n        {\n            int l,r;\n            scanf(\"%lld%lld\",&l,&r);\n            printf(\"%lld\\n\",querymin(1,l,r));\n        }\n        if(c=='S')\n        {\n            int l,r;\n            scanf(\"%lld%lld\",&l,&r);\n            printf(\"%lld\\n\",querysum(1,l,r));\n        }\n    }\n    return 0;\n}\n```\n\u603b\u7ed3\uff1a\u7ebf\u6bb5\u6811\u662f\u4e2a\u59b9\u5b50\uff0c\u5979\u5f88\u53ef\u7231",
        "postTime": 1554281191,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3130 \u3010[USACO15DEC]\u8ba1\u6570haybalesCounting Haybales\u3011"
    },
    {
        "content": "## P3130\n### \u601d\u8def\n\u7ebf\u6bb5\u6811\u7206\u6539\uff0c\u771f\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u6807\u7b7e\u91cc\u6709\u5e76\u67e5\u96c6\u548c\u79bb\u6563\u5316\n\n\u6ce8\u610f\u522b\u5fd8\u8bb0\u5f00long long\n#### \u4fee\u6539\n\u4fee\u6539\u533a\u95f4\u548c\u7684\u65f6\u5019\uff0c\u522b\u5fd8\u4e86\u8981\u628a\u6700\u5c0f\u503c\u4e5f\u8981\u52a0\u4e0a\u3002\n```cpp\nvoid update(int rt, int c, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) {\n\t\ttree[rt].sum += tree[rt].len * c;\n\t\ttree[rt].min += c;\n\t\ttree[rt].lazy += c;\n\t\treturn;\n\t}\n\tpush_down(rt);\n\tint mid = (l + r) >> 1;\n\tif (L <= mid) update(lson, c, l, mid, L, R);\n\tif (R > mid) update(rson, c, mid + 1, r, L, R);\n\tpush_up(rt);\n}\n```\n\u7136\u540e\u5c31\u662f\u5e38\u89c4\u7684\u533a\u95f4\u548c\u548c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u522b\u5fd8\u4e86\u53d6\u4e2a\u6781\u5927\u503c\n#### \u6c42\u533a\u95f4\u548c\n```cpp\nint query_sum(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].sum;\n\tpush_down(rt);\n\tint mid = (l + r) >> 1, ans = 0;\n\tif (L <= mid) ans += query_sum(lson, l, mid, L, R);\n\tif (R > mid) ans += query_sum(rson, mid + 1, r, L, R);\n\treturn ans;\n}\n```\n\n#### \u6c42\u533a\u95f4\u6700\u5c0f\u503c\n```cpp\nint query_min(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].min;\n\tpush_down(rt);\n\tint mid = (l + r) >> 1, ans = 2147483647;\n\tif (L <= mid) ans = min(ans, query_min(lson, l, mid, L, R));\n\tif (R > mid) ans = min(ans, query_min(rson, mid + 1, r, L, R));\n\treturn ans;\n}\n\n```\n\n### code\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define N 200010\n#define M 1010\n#define lson rt << 1\n#define rson rt << 1 | 1\n\nusing namespace std;\nstruct node {\n\tint min, sum, lazy, len;\n}tree[N << 2];\nint n, m;\n\nint read() {\n\tint s = 0, f = 0; char ch = getchar();\n\twhile (!isdigit(ch)) f |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid push_up(int rt) {\n\ttree[rt].sum = tree[lson].sum + tree[rson].sum;\n\ttree[rt].min = min(tree[lson].min, tree[rson].min);\n}\n\nvoid build(int rt, int l, int r) {\n\ttree[rt].len = r - l + 1;\n\tif (l == r) {\n\t\ttree[rt].sum = tree[rt].min = read();\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(lson, l, mid);\n\tbuild(rson, mid + 1, r);\n\tpush_up(rt);\n}\n\nvoid push_down(int rt) {\n\tif (!tree[rt].lazy) return;\n\ttree[lson].sum += tree[lson].len * tree[rt].lazy;\n\ttree[rson].sum += tree[rson].len * tree[rt].lazy;\n\ttree[lson].min += tree[rt].lazy;\n\ttree[rson].min += tree[rt].lazy;\n\ttree[lson].lazy += tree[rt].lazy;\n\ttree[rson].lazy += tree[rt].lazy;\n\ttree[rt].lazy = 0;\n}\n\nvoid update(int rt, int c, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) {\n\t\ttree[rt].sum += tree[rt].len * c;\n\t\ttree[rt].min += c;\n\t\ttree[rt].lazy += c;\n\t\treturn;\n\t}\n\tpush_down(rt);\n\tint mid = (l + r) >> 1;\n\tif (L <= mid) update(lson, c, l, mid, L, R);\n\tif (R > mid) update(rson, c, mid + 1, r, L, R);\n\tpush_up(rt);\n}\n\nint query_sum(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].sum;\n\tpush_down(rt);\n\tint mid = (l + r) >> 1, ans = 0;\n\tif (L <= mid) ans += query_sum(lson, l, mid, L, R);\n\tif (R > mid) ans += query_sum(rson, mid + 1, r, L, R);\n\treturn ans;\n}\n\nint query_min(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].min;\n\tpush_down(rt);\n\tint mid = (l + r) >> 1, ans = 2147483647;\n\tif (L <= mid) ans = min(ans, query_min(lson, l, mid, L, R));\n\tif (R > mid) ans = min(ans, query_min(rson, mid + 1, r, L, R));\n\treturn ans;\n}\n\nsigned main() {\n\tn = read(), m = read();\n\tchar sy;\n\tbuild(1, 1, n);\n\tfor (int i = 1, x, y, d; i <= m; i++) {\n\t\tcin >> sy;\n\t\tif (sy == 'P') {\n\t\t\tx = read(), y = read(), d = read();\n\t\t\tupdate(1, d, 1, n, x, y);\n\t\t}\n\t\tif (sy == 'M') {\n\t\t\tx = read(), y = read();\n\t\t\tprintf(\"%lld\\n\", query_min(1, 1, n, x, y));\n\t\t}\n\t\tif (sy == 'S') {\n\t\t\tx = read(), y = read();\n\t\t\tprintf(\"%lld\\n\", query_sum(1, 1, n, x, y));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1596031127,
        "uid": 188155,
        "name": "K2sen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3130 \u3010[USACO15DEC]haybalesCounting Haybale P\u3011"
    },
    {
        "content": "\u672c\u6765\u662f\u60f3\u627e\u5e76\u67e5\u96c6\u7684\uff0c\u53d1\u73b0\u4e86\u8fd9\u9053\u7ebf\u6bb5\u6811\uff0c\u5c31\u76f4\u63a5\u6c34\u8fc7\u53bb\u3002\n\n\n\u4e3b\u8981\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u6a21\u677f\uff1a\u533a\u95f4\u6c42\u548c+\u533a\u95f4\u6700\u5c0f\u503c+Lazy\u6807\u8bb0\uff08\u4e0d\u77e5\u9053\u4e0d\u52a0\u80fd\u4e0d\u80fd\u8fc7\uff09\u3002\n\n\n\u7ebf\u6bb5\u6811\u4e0d\u591a\u8bb2\uff0c\u201c\u7ebf\u6bb5\u6811\u6a21\u677f\u201d\u8fd9\u9053\u9898\u6709\u5f88\u591a\u4eba\u8bb2\u5f97\u5f88\u597d\u3002\u6ce8\u610f\u5c31\u662f\u8981\u5f00long long\u3002\n\n\n\n\n\n\n\n\n\n\n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<set>\n#include<bitset>\n#include<sstream>\n#include<cstdlib>\n#define QAQ int\n#define TAT long long\n#define ORZ double\n#define OwO bool\n#define SHO short\n#define F(i,j,n) for(QAQ i=j;i<=n;++i)\n#define E(i,j,n) for(QAQ i=j;i>=n;--i)\n#define MES(i,j) memset(i,j,sizeof(i))\n#define MEC(i,j) memcpy(i,j,sizeof(j))\n#define mid (l+r>>1)\n#define LS l,mid,o<<1\n#define RS mid+1,r,o<<1|1\nusing namespace std;\nconst QAQ N=200000;\nQAQ n,m;\nstruct data{\n    TAT sum,Min,lazy;\n}tree[N<<2];\nvoid push_up(QAQ o){\n    tree[o].sum=tree[o<<1].sum+tree[o<<1|1].sum;\n    tree[o].Min=min(tree[o<<1].Min,tree[o<<1|1].Min);\n}\nvoid push_down(QAQ o,TAT l){\n    if(tree[o].lazy!=0){\n        tree[o<<1].lazy+=tree[o].lazy;\n        tree[o<<1].Min+=tree[o].lazy;\n        tree[o<<1].sum+=tree[o].lazy*(l-(l>>1));\n        tree[o<<1|1].lazy+=tree[o].lazy;\n        tree[o<<1|1].Min+=tree[o].lazy;\n        tree[o<<1|1].sum+=tree[o].lazy*(l>>1);\n        tree[o].lazy=0;\n    }\n}\nvoid build(QAQ l,QAQ r,QAQ o){\n    if(l==r){\n        scanf(\"%lld\",&tree[o].sum);\n        tree[o].Min=tree[o].sum;\n        return ;\n    }\n    build(LS);build(RS);\n    push_up(o);\n}\nvoid add(QAQ l,QAQ r,QAQ o,QAQ a,QAQ b,TAT c){\n    if(l>=a&&r<=b){\n        tree[o].sum+=c*(r-l+1);\n        tree[o].Min+=c;\n        tree[o].lazy+=c;\n        return ;\n    }\n    push_down(o,(TAT)r-l+1);\n    if(a<=mid) add(LS,a,b,c);\n    if(b>mid) add(RS,a,b,c);\n    push_up(o);\n}\nTAT Qmin(QAQ l,QAQ r,QAQ o,QAQ a,QAQ b){\n    if(l>=a&&r<=b) return tree[o].Min;\n    push_down(o,(TAT)r-l+1);\n    TAT Min=1e18;\n    if(a<=mid) Min=min(Min,Qmin(LS,a,b));\n    if(b>mid) Min=min(Min,Qmin(RS,a,b));\n    return Min;\n}\nTAT Qsum(QAQ l,QAQ r,QAQ o,QAQ a,QAQ b){\n    if(l>=a&&r<=b) {\n        return tree[o].sum;\n    }\n    push_down(o,(TAT)r-l+1);\n    TAT ans=0;\n    if(a<=mid) ans+=Qsum(LS,a,b);\n    if(b>mid) ans+=Qsum(RS,a,b);\n    return ans;\n}\nQAQ main(){\n    scanf(\"%d%d\",&n,&m);\n    build(1,n,1);\n    while(m--){\n        char c;\n        cin>>c;\n        if(c=='P'){\n            QAQ l,r;\n            TAT x;\n            scanf(\"%d%d%lld\",&l,&r,&x);\n            add(1,n,1,l,r,x);\n        }\n        if(c=='M'){\n            QAQ l,r;\n            scanf(\"%d%d\",&l,&r);\n            printf(\"%lld\\n\",Qmin(1,n,1,l,r));\n        }\n        if(c=='S'){\n            QAQ l,r;\n            scanf(\"%d%d\",&l,&r);\n            printf(\"%lld\\n\",Qsum(1,n,1,l,r));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1507986421,
        "uid": 36170,
        "name": "Fheiwn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3130 \u3010[USACO15DEC]\u8ba1\u6570haybalesCounting Haybales\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u6307\u9488Splay\n\n\u88f8\u7684\u7ebf\u6bb5\u6811\u9898\uff0c~~\u4f46\u6211\u504f\u8981\u7528Splay\u505a~~\n\nSplay\u7ef4\u62a4\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u52a0\u3001\u533a\u95f4\u6700\u5c0f\u503c\u3001\u533a\u95f4\u548c\n\n\u50cf\u7ebf\u6bb5\u6811\u90a3\u6837\u6253\u4e2a\u61d2\u6807\u8bb0\u50cf\u7ebf\u6bb5\u6811\u90a3\u6837\u505a\u5c31\u53ef\u4ee5\u4e86\n\n\u6bcf\u4e2a\u6570\u521d\u59cb\u6700\u592710^5\uff0c\u6bcf\u6b21\u52a0\u6700\u592710^5\uff0c\u6700\u591a\u670910^5\u6b21\u64cd\u4f5c\uff0c\u4f1a\u7206int\uff0c\u8bb0\u5f97\u5f00long long\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::min;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();short fh=1;\n\twhile (ch<48||ch>57)fh=ch=='-'?-1:fh,ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+ch-48,ch=getchar();\n\tin*=fh;\n}\ntypedef long long ll;\nconst int N=2e5+10;\nconst ll INF=1e11;\nint n,m;\nll a[N];\nclass Splay\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint size;\n\t\t\tll tag,sum,value,mn;\n\t\t\ttree *fa,*son[2];\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tsize=son[0]->size+1+son[1]->size;\n\t\t\t\tsum=son[0]->sum+value+son[1]->sum;\n\t\t\t\tmn=min(min(son[0]->mn,son[1]->mn),value);\n\t\t\t}\n\t\t\tinline const void pushdown()\n\t\t\t{\n\t\t\t\tif (!tag)return;\n\t\t\t\tson[0]->add(tag);\n\t\t\t\tson[1]->add(tag);\n\t\t\t\ttag=0;\n\t\t\t}\n\t\t\tinline void add(ll w)\n\t\t\t{\n\t\t\t\ttag+=w;mn+=w;value+=w;sum+=size*w;\n\t\t\t}\n\t\t\tinline const bool identity()\n\t\t\t{\n\t\t\t\treturn fa->son[1]==this;\n\t\t\t}\n\t\t}memory_pool[N],*tail;\n\tpublic:\n\t\ttree *root,*null;\n\tprotected:\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->mn=INF;\n\t\t\tnull->fa=null->son[0]=null->son[1]=null;\n\t\t\tnull->tag=null->value=null->sum=null->size=0;\n\t\t\troot=null;\n\t\t}\n\t\tinline tree *newtree(ll key)\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->size=1;p->tag=0;\n\t\t\tp->mn=p->value=p->sum=key;\n\t\t\tp->fa=p->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void connect(tree *p,tree *fa,bool which)\n\t\t{\n\t\t\tif (p!=null)p->fa=fa;\n\t\t\tif (fa!=null)fa->son[which]=p,fa->pushup();\n\t\t}\n\t\tinline const void rotate(tree *p)\n\t\t{\n\t\t\ttree *fa=p->fa;\n\t\t\tbool id=p->identity();\n\t\t\tfa->pushdown();p->pushdown();\n\t\t\tconnect(p,fa->fa,fa->identity());\n\t\t\tconnect(p->son[id^1],fa,id);\n\t\t\tconnect(fa,p,id^1);\n\t\t\tfa->pushup();p->pushup();\n\t\t}\n\t\tinline const void splay(tree *p,tree *goal)\n\t\t{\n\t\t\tfor (tree *fa;(fa=p->fa)!=goal;rotate(p))\n\t\t\t\tif (fa->fa!=goal)\n\t\t\t\t\trotate(p->identity()^fa->identity()?p:fa);\n\t\t\tif (goal==null)root=p;\n\t\t}\n\t\tinline tree *findrank(int ranking)\n\t\t{\n\t\t\tranking++;tree *now=root; //\u56e0\u4e3a\u52a0\u5165\u4e86\u54e8\u5175\u8282\u70b9\u6240\u4ee5\u5b9e\u9645\u4e0a\u67e5\u7b2ck\u4e2a\u70b9\u5c31\u662f\u7b2ck+1\u4e2a\n\t\t\twhile (now->pushdown(),1)\n\t\t\t\tif (ranking<=now->son[0]->size)now=now->son[0];\n\t\t\t\telse if (!(ranking-=(now->son[0]->size+1)))return now;\n\t\t\t\t\telse now=now->son[1];\n\t\t}\n\t\tinline tree *split(int l,int r)  //\u628a\u533a\u95f4[l,r]\u63d0\u53d6\u51fa\u6765\n\t\t{\n\t\t\ttree *pre=findrank(l-1),*nxt=findrank(r+1);\n\t\t\tsplay(pre,null);splay(nxt,pre);\n\t\t\treturn nxt->son[0];\n\t\t}\n\tpublic:\n\t\tinline Splay(){init();}\n\t\tinline tree *build(int l,int r,tree *fa) //\u5efa\u6811\n\t\t{\n\t\t\tif (l>r)return null;\n\t\t\tint mid=l+r>>1;\n\t\t\ttree *p=newtree(a[mid]);p->fa=fa;\n\t\t\tif (l==r)return p;\n\t\t\tp->son[0]=build(l,mid-1,p);\n\t\t\tp->son[1]=build(mid+1,r,p);\n\t\t\treturn p->pushup(),p;\n\t\t}\n\t\tinline const void add(int l,int r,int w)\n\t\t{\n\t\t\tsplit(l,r)->add(w);\n\t\t}\n\t\tinline const ll querymin(int l,int r)\n\t\t{\n\t\t\treturn split(l,r)->mn;\n\t\t}\n\t\tinline const ll querysum(int l,int r)\n\t\t{\n\t\t\treturn split(l,r)->sum;\n\t\t}\n}S;\nint main()\n{\n\tread(n);read(m);\n\tfor (int i=1;i<=n;i++)read(a[i]);\n\ta[0]=a[n+1]=INF;S.root=S.build(0,n+1,S.null); //\u6dfb\u52a0\u54e8\u5175\u8282\u70b90\u548cn+1\u9632\u6b62\u5904\u7406\u533a\u95f4[1,x]/[x,n]\u65f6\u627e\u4e0d\u5230\u524d\u9a71/\u540e\u7ee7\n\twhile (m--)\n\t{\n\t\tchar opt;int l,r,x;\n\t\tscanf(\" %c\",&opt);read(l);read(r);\n\t\tswitch (opt)\n\t\t{\n\t\t\tcase 'M':printf(\"%lld\\n\",S.querymin(l,r));break;\n\t\t\tcase 'P':read(x);S.add(l,r,x);break;\n\t\t\tcase 'S':printf(\"%lld\\n\",S.querysum(l,r));break;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544016213,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3130 \u3010[USACO15DEC]\u8ba1\u6570haybalesCounting Haybales\u3011"
    }
]