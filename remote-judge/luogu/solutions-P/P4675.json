[
    {
        "content": "\u505a\u9898\u76ee\u65f6\u56e0\u4e3a\u6ca1\u6709\u9898\u89e3\uff0c\u81ea\u5df1\u8c03\u8bd5\u4e86\u534a\u5929\uff0c\u4e8e\u662f\u60f3\u628a\u81ea\u5df1\u7684\u7a0b\u5e8f\u5206\u4eab\u4e00\u4e0b\uff0c\u7ed9\u540e\u6765\u8005\u53c2\u8003\u53c2\u8003\u3002\n\n# \u8fdb\u5165\u6b63\u9898\n\u8fd9\u9053\u9898\u76ee\u8fd0\u7528\u5230\u4e86[$\\color{#ff0481}\\boxed{\\small\\texttt{\u5e76\u67e5\u96c6}}$](https://www.luogu.org/problemnew/lists?name=&orderitem=pid&tag=47&content=0&type=)\u3001$\\color{#ff0481}\\boxed{\\small\\texttt{\u79bb\u7ebf}}$\u3002  \n\u4e0a\u8ff0\u7b97\u6cd5\u4e0d\u6e05\u695a\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u6162\u6162\u6765\u3002\n\n## \u5e76\u67e5\u96c6\n\u5e76\u67e5\u96c6\u4ece\u5b57\u9762\u610f\u601d\u4e0a\u6765\u7406\u89e3\uff0c\u662f\u4e00\u79cd\u652f\u6301**\u5408\u5e76**\u4e0e**\u67e5\u8be2**\u7684\u6570\u636e\u7ed3\u6784\u3002\u5e76\u67e5\u96c6\u7684\u5408\u5e76\u6307\u7684\u662f\u5c06\u4e24\u9897\u6709\u6839\u6811\u5408\u5e76\uff0c\u67e5\u8be2\u6307\u7684\u662f\u67e5\u8be2\u8282\u70b9\u7684\u6839\u3002\n\n\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u601d\u8def\u662f**\u8def\u5f84\u538b\u7f29**\uff0c\u5bf9\u4e8e\u4efb\u610f\u8282\u70b9$x$\uff0c\u6211\u4eec\u8ba9\u8282\u70b9$x$\u7684\u7236\u6307\u9488\u6307\u5411\u6839\uff0c\u6839\u7684\u7236\u6307\u9488\u6307\u5411\u81ea\u5df1\uff0c\u8fd9\u6837\u67e5\u8be2\u65f6\u4fbf\u53ef\u4ee5\u4e00\u6b65\u5230\u4f4d\u3002\u5bf9\u4e8e\u5408\u5e76\uff0c\u5c31\u53ea\u9700\u67e5\u627e\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u7684\u7236\u6307\u9488\u6307\u5411\u53e6\u4e00\u4e2a\u6839\u5c31\u884c\u4e86\u3002\u4f46\u662f\uff0c\u4f60\u53ef\u80fd\u6709\u7591\u60d1\uff0c\u8fd9\u6837\u5e76\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u5440\u3002\u5176\u5b9e\uff0c\u8def\u5f84\u538b\u7f29\u662f\u5728\u67e5\u8be2\u65f6\u8fdb\u884c\u7684\u3002\u6211\u4eec\u4e00\u8fb9\u67e5\u8be2\u4e00\u8fb9\u7528\u8fd4\u56de\u503c\u66f4\u65b0\u7236\u6307\u9488\uff0c\u5982\u4ee3\u7801\uff1a\n```cpp\ninline int find(int x)                    //\u67e5\u8be2\u6839\u8282\u70b9\n{\n    if (f[x]==x) return x;                //\u5982\u679c\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u8fd4\u56de\u672c\u8eab\u3002\n    f[x]=find(f[x]);                      //\u5426\u5219\uff0c\u67e5\u8be2\u7236\u8282\u70b9\uff0c\u5e76\u5c06\u7236\u6307\u9488\u6307\u5411\u6839\u8282\u70b9\u3002\n    return f[x];                          //\u8fd4\u56de\u6839\u8282\u70b9\n}\n```\n\u5408\u5e76\u7684\u4ee3\u7801\u5c31\u66f4\u52a0\u7b80\u5355\u4e86\uff1a\n```cpp\ninline void together(int x,int y)\n{\n\tint r1,r2;\n    r1=find(x);r2=find(y);       //\u67e5\u8be2x\u3001y\u7684\u6839\n    if (r1==r2) return ;         //\u82e5x\u3001y\u4ee5\u5728\u540c\u4e00\u68f5\u6811\u4e2d\uff0c\u4e0d\u5408\u5e76\n    f[r1]=r2;                    //\u5c06r1\u7684\u6839\u7f6e\u4e3ar2\n}\n```\n\u8fd9\u4e00\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad**\u8fde\u901a\u60c5\u51b5**\uff0c\u5982\u679c\u6811\u4e0e\u8fb9\u754c\u76f8\u4ea4\u6216\u6811\u4e0e\u6811\u76f8\u4ea4(\u76f8\u5207\u4e5f\u7b97)\uff0c\u5408\u5e76\u3002\u6700\u540e\uff0c\u5224\u65ad\u4e24\u8fb9\u754c\u662f\u5426\u5904\u4e8e\u540c\u4e00\u96c6\u5408\u4e2d\uff0c\u82e5\u662f\uff0c\u5219\u4e0d\u80fd\u901a\u884c\uff0c\u5426\u5219\uff0c\u80fd\u8fc7\u3002\u4f46\u8fd9\u4e5f\u4ec5\u4ec5\u53ea\u662f\u5224\u65ad\u4e86\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u662f\u4e24\u6811\u4e0d\u76f8\u4ea4\uff0c\u5b83\u4eec\u7684\u8ddd\u79bb\u8fc7\u5c0f\uff0c~~\u957f\u5f97\u80d6\u7684~~\u4eba\u4e5f\u8fc7\u4e0d\u53bb\u3002\n\n\u5bf9\u4e0e\u8fd9\u4e2a\u60c5\u51b5\uff0c\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u5efa\u7acb$m$\u4e2a\u5e76\u67e5\u96c6\uff0c\u679a\u4e3e\u8ddd\u79bb\uff0c\u5c0f\u4e8e\u4eba\u7684\u76f4\u5f84\u65f6\uff0c\u5c31\u5408\u5e76\u3002\u5f53\u8fd9\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u3002\u4e8e\u662f\uff0c\u6211\u4fbf\u60f3\u5230\u4e86\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u79bb\u7ebf\u5904\u7406\uff0c\u5c06\u4eba\u6309\u76f4\u5f84(\u8f93\u5165\u662f\u534a\u5f84)\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8ddd\u79bb\u4e5f\u6309\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u539f\u5148\u65e0\u6cd5\u901a\u8fc7\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u4efb\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\u5c31\u4e0d\u9700\u8981\u91cd\u590d\u5904\u7406\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e00\u4e2a$last$\u53d8\u91cf\u8bb0\u5f55\u4e0a\u6b21\u5224\u65ad\u5230\u7684\u8ddd\u79bb\u3002\n\n## $code:$\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=2015;\nconst int MAXM=100015;\nconst double eps=1e-4;\nint n,m,id,last,k;\nlong long l,r;\n\nstruct tree\n{\n    long long x,y,d;\n    \n    inline double operator - (struct tree tmp) \n    {\n        return sqrt((x-tmp.x)*(x-tmp.x)+(y-tmp.y)*(y-tmp.y))-d-tmp.d;\n    }\n}t[MAXN];\n\nstruct man\n{\n    long long from,id,d;\n    \n    inline bool operator < (const man &tmp) const\n    {\n        return d<tmp.d;\n    }\n}w[MAXM];\n\nstruct cost\n{\n    long long a,b;double dis;\n    \n    inline bool operator < (const cost &tmp) const\n    {\n        return dis<tmp.dis;\n    }\n}h[MAXN*MAXN];\nint f[MAXM];\nbool ans[MAXM][5],map[5][5];\n\ninline int find(int x)\n{\n    return f[x]==x?x:f[x]=find(f[x]);\n}\n\ninline void together(int x,int y)\n{\n    int r1,r2;\n    r1=find(x);r2=find(y);\n    if (r1==r2) return ;\n    f[r1]=r2;\n}\n\ninline void turn_off(int x,int y)\n{\n    map[x][y]=map[y][x]=false;\n}\n\nint main()\n{\n    cin>>n>>m>>l>>r;\n    for (int i=1;i<=n;i++) cin>>t[i].x>>t[i].y>>t[i].d;\n    for (int i=1;i<=m;i++) {cin>>w[i].d>>w[i].from;w[i].d*=2;w[i].id=i;}\n    for (int i=1;i<=n;i++)\n    {\n        h[++id]=(cost){i,n+1,(double)t[i].x-t[i].d};\n        h[++id]=(cost){i,n+2,(double)t[i].y-t[i].d};\n        h[++id]=(cost){i,n+3,(double)l-t[i].x-t[i].d};\n        h[++id]=(cost){i,n+4,(double)r-t[i].y-t[i].d};\n        for (int j=i+1;j<=n;j++) h[++id]={i,j,fabs(t[i]-t[j])};\n    }\n    last=1;\n    sort(h+1,h+id+1); sort(w+1,w+m+1);\n    for (int i=1;i<=4;i++)\n        for (int j=1;j<=4;j++) map[i][j]=true;\n    for (int i=1;i<=n+10;i++) f[i]=i;\n    for (int i=1;i<=m;i++)\n    {\n        while (last<=id&&h[last].dis+eps<=w[i].d) {together(h[last].a,h[last].b);last++;}\n        if (find(n+1)==find(n+3)) turn_off(1,3),turn_off(1,4),turn_off(2,3),turn_off(2,4);\n        if (find(n+2)==find(n+4)) turn_off(1,2),turn_off(1,3),turn_off(2,4),turn_off(3,4);\n        if (find(n+1)==find(n+2)) turn_off(1,2),turn_off(1,3),turn_off(1,4);\n        if (find(n+2)==find(n+3)) turn_off(1,2),turn_off(2,4),turn_off(2,3);\n        if (find(n+3)==find(n+4)) turn_off(3,1),turn_off(3,2),turn_off(3,4);\n        if (find(n+4)==find(n+1)) turn_off(4,1),turn_off(4,2),turn_off(4,3);\n        for (int j=1;j<=4;j++) ans[w[i].id][j]=map[w[i].from][j];\n    }\n    for (int i=1;i<=m;i++)\n    {\n        for (int j=1;j<=4;j++)\n            if (ans[i][j]) putchar(j+'0');\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n$Please~give~a~like.~~Thanks~for~reading~my~passage.$",
        "postTime": 1561553496,
        "uid": 141348,
        "name": "\u26a1LZSY01_XZY\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4675 \u3010[BalticOI 2016 day1]Park\u3011"
    },
    {
        "content": "~~\u597d\u50cf\u6b64\u9898\u6211\u80fd\u67e5\u770b\u7684 AC \u8bb0\u5f55\u90fd\u662f\u5199\u7684\u79bb\u7ebf\u7684\uff1f\uff1f\uff1f~~\n___\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u4e0d\u80fd\u4ece $A$ \u8d70\u5230 $B$\uff0c\u90a3\u4e48\u6bd4\u4ed6\u534a\u5f84\u5927\u7684\u4eba\u4e00\u5b9a\u4e0d\u80fd\u4ece $A$ \u8d70\u5230 $B$\uff0c\u6240\u4ee5\u8003\u8651\u9884\u5904\u7406\u8fd9\u4e9b\u5165\u53e3\u4e24\u4e24\u95f4\u6240\u80fd\u901a\u8fc7\u7684\u4eba\u7684\u6700\u5927\u534a\u5f84\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lxwpl544.png)\n\n\u5bf9\u6bcf\u68f5\u6811\u548c\u8fb9\u754c\u5efa\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u68f5\u6811\u6c42\u51fa\u5176\u5230\u5176\u4ed6\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4f5c\u4e3a\u8fb9\u6743\u5efa\u8fb9\u3002\n\n\u4e0a\u56fe\u5efa\u5b8c\u8fb9\u5927\u6982\u957f\u8fd9\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/a1v59sfb.png)\n\n\u6211\u4eec\u6309\u7167\u8fb9\u7684\u957f\u5ea6\u7531\u77ed\u5230\u957f\u52a0\u5165\u8fd9\u4e9b\u8fb9\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u4f1a\u5c06\u77e9\u5f62\u7684\u8fb9\u754c\u5206\u4e3a\u4e24\u6bb5\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e0d\u80fd\u901a\u8fc7\u5df2\u6709\u8fb9\u4ece\u5c06\u8fd9\u4e24\u6bb5\u8fde\u901a\u65f6\u53ef\u4ee5\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\uff08\u5bf9\u5e94\u4e0a\u56fe\u5c31\u662f $l_1$ \u4e0e $l_2,l_3,l_4$ \u5747\u4e0d\u8fde\u901a\u65f6\u53ef\u4ee5\u4ece $1$ \u8d70\u5230 $4$\uff0c\u5176\u4ed6\u60c5\u51b5\u540c\u7406\uff09\u5f53\u52a0\u5165\u4e00\u6761\u8fb9\u4f7f\u5176\u8fde\u901a\u6027\u6539\u53d8\u65f6\u66f4\u65b0\u7b54\u6848\uff0c\u8be2\u95ee\u65f6\u76f4\u63a5\u4e0e\u6570\u7ec4\u5185\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u4ee3\u7801\uff08\u56e0\u4e3a\u8be2\u95ee\u90fd\u662f\u6574\u6570\u6240\u4ee5\u5c06\u8ddd\u79bb\u4e0b\u53d6\u6574\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\uff0c$O(n^2\\log(n^2)+m)$\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct node{int x,y,r;}a[2001];\nstruct e{int u,v,d;}b[5000001];\nbool cmp(e i,e j){return i.d<j.d;}\nint n,m,cnt,fa[5000001];\nint dis(node i,node j){return sqrt((i.x-j.x)*(i.x-j.x)+(i.y-j.y)*(i.y-j.y));}\nint ans[5][5],w,h;\nint find(int i){return fa[i]==i?i:fa[i]=find(fa[i]);}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tscanf(\"%lld%lld\",&w,&h);\n\tfor(int i=1;i<=5000000;i++)fa[i]=i;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld%lld%lld\",&a[i].x,&a[i].y,&a[i].r);\n\tfor(int i=1;i<=4;i++)for(int j=1;j<i;j++)ans[i][j]=ans[j][i]=1e18;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<i;j++)b[++cnt]={i,j,dis(a[i],a[j])-a[i].r-a[j].r};\n\tfor(int i=1;i<=n;i++)\n\tb[++cnt]={i,n+1,a[i].x-a[i].r},b[++cnt]={i,n+2,a[i].y-a[i].r},\n\tb[++cnt]={i,n+3,w-a[i].x-a[i].r},b[++cnt]={i,n+4,h-a[i].y-a[i].r};\n\tsort(b+1,b+cnt+1,cmp);\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tfa[find(b[i].u)]=fa[find(b[i].v)],find(n+1),find(n+2),find(n+3),find(n+4);\n\t\tif(fa[n+2]==fa[n+1]||fa[n+2]==fa[n+3]||fa[n+2]==fa[n+4])ans[1][2]=min(ans[1][2],b[i].d);\n\t\tif(fa[n+1]==fa[n+2]||fa[n+1]==fa[n+3]||fa[n+1]==fa[n+4])ans[1][4]=min(ans[1][4],b[i].d);\n\t\tif(fa[n+3]==fa[n+1]||fa[n+3]==fa[n+2]||fa[n+3]==fa[n+4])ans[2][3]=min(ans[2][3],b[i].d);\n\t\tif(fa[n+4]==fa[n+1]||fa[n+4]==fa[n+2]||fa[n+4]==fa[n+3])ans[3][4]=min(ans[3][4],b[i].d);\n\t\tif(fa[n+1]==fa[n+3]||fa[n+1]==fa[n+4]||fa[n+2]==fa[n+3]||fa[n+2]==fa[n+4])ans[2][4]=min(ans[2][4],b[i].d);\n\t\tif(fa[n+1]==fa[n+2]||fa[n+1]==fa[n+3]||fa[n+4]==fa[n+2]||fa[n+4]==fa[n+3])ans[1][3]=min(ans[1][3],b[i].d);\n\t}\n\twhile(m--)\n\t{\n\t\tint r,e;\n\t\tscanf(\"%lld%lld\",&r,&e);\n\t\tfor(int i=1;i<e;i++)if(ans[i][e]>=r*2)putchar(i+48);//\u6ce8\u610f\u8f93\u5165\u7684\u662f\u534a\u5f84\u9700\u8981\u4e582\n\t\tputchar(e+48);\n\t\tfor(int i=e+1;i<=4;i++)if(ans[e][i]>=r*2)putchar(i+48);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1611287282,
        "uid": 44840,
        "name": "123456zmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4675 \u3010[BalticOI 2016 day1]Park\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u79cd**\u5728\u7ebf**\u7684\uff0c\u590d\u6742\u5ea6 $O(n^2\\log n+m)$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u6e38\u5ba2\u4e0d\u80fd\u4ece\u4e00\u4e2a\u51fa\u53e3\u5230\u8fbe\u53e6\u4e00\u4e2a\u51fa\u53e3\u3002\n\n\u8bbe $dis(i,j)$ \u8868\u793a\u7b2c $i$ \u68f5\u6811\u548c\u7b2c $j$ \u68f5\u6811\u4e4b\u95f4\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002\n\n\u5148\u5efa\u56fe\u3002\u5bf9\u4e8e\u4e24\u68f5\u6811 $i$ \u548c $j (i<j)$\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $dis(i,j)-r[i]-r[j]$ \u7684\u8fb9\uff0c\u8868\u793a**\u76f4\u5f84**\u4e0d\u5927\u4e8e\u6b64\u8fb9\u6743\u7684\u6e38\u5ba2**\u6709\u53ef\u80fd**\u901a\u8fc7\u8fd9\u4e24\u68f5\u6811\u4e4b\u95f4\u7684\u7f1d\u9699\u3002\u518d\u65b0\u5efa $4$ \u4e2a\u70b9\u8868\u793a\u5730\u56fe\u7684 $4$ \u6761\u8fb9\u754c\uff0c\u7f16\u53f7 $n+1$ \u81f3 $n+4$\u3002\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u5728\u5b83\u548c\u6bcf\u4e2a\u8fb9\u754c\u4e4b\u95f4\u5206\u522b\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u6811\u7684\u8fb9\u754c\u5230\u516c\u56ed\u7684\u8fb9\u754c\u7684\u8ddd\u79bb\u7684\u8fb9\uff0c\u8868\u793a\u76f4\u5f84\u4e0d\u5927\u4e8e\u6b64\u8fb9\u6743\u7684\u6e38\u5ba2\u6709\u53ef\u80fd\u4ece\u8fd9\u68f5\u6811\u548c\u5bf9\u5e94\u8fb9\u754c\u4e4b\u95f4\u8fc7\u53bb\u3002\n\n\u8fd9\u6837\uff0c\u4e0d\u96be\u53d1\u73b0\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n\u5bf9\u4e8e\u67d0\u4e2a\u6e38\u5ba2\uff0c\u5982\u679c $i$ \u548c $j(n+1\\le i<j\\le n+4)$ \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8def\u5f84\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6700\u5927\u8fb9\u6743**\u5c0f\u4e8e**\u5f53\u524d\u6e38\u5ba2\u7684\u76f4\u5f84\uff0c\u90a3\u4e48\u53ef\u4ee5\u89c6\u4f5c\u8fd9\u4e24\u6761\u8fb9\u754c\u4e4b\u95f4\u6709\u4e00\u5835\u5899\u963b\u6321\u8fd9\u4e2a\u6e38\u5ba2\u901a\u8fc7\uff0c\u4f7f\u5f97\u8fd9\u4e24\u6761\u8fb9\u754c\u7684\u201c\u4e00\u4fa7\u201d\u548c\u201c\u53e6\u4e00\u4fa7\u201d\u4e0d\u8fde\u901a\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5bf9\u4e8e\u5f53\u524d\u6e38\u5ba2\uff0c\u5047\u5982\u4e0a\u4e0b\u8fb9\u754c\u4e4b\u95f4\u5b58\u5728\u8fd9\u6837\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u4ece\u5de6\u8fb9\u7684\u5165\u53e3\uff08\u2460\u548c\u2463\uff09\u65e0\u6cd5\u5230\u8fbe\u53f3\u8fb9\u7684\u51fa\u53e3\uff08\u2461\u548c\u2462\uff09\u3002\n\n\u611f\u6027\u7684\u8bc1\u660e\uff1a\u5982\u679c\u8fd9\u6837\u7684\u8def\u5f84\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6e38\u5ba2\u4e0d\u53ef\u80fd\u4ece\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8fde\u7eed\u4e24\u4e2a\u70b9\u901a\u8fc7\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8fd9\u4e2a\u6e38\u5ba2\u6765\u8bf4\u8fd9\u6761\u8def\u5f84\u5c06\u516c\u56ed\u5206\u6210\u4e24\u90e8\u5206\u3002\n\n\u5728\u5904\u7406\u51fa\u4efb\u4e24\u4e2a\u8fb9\u754c\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u6700\u5927\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u540e\u5927\u529b\u5206\u8ba8\u5373\u53ef\u89e3\u51b3\u6b64\u95ee\u9898\u3002\u8fd9\u4e00\u6bb5\u7528\u8bed\u8a00\u8868\u8ff0\u53ef\u80fd\u6bd4\u8f83\u6df7\u4e71\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u66b4\u529b\u5efa\u51fa\u6240\u6709\u8fb9\u5e76\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u56db\u4e2a\u8fb9\u754c\u6240\u5bf9\u5e94\u7684\u70b9\u7684\u8054\u901a\u60c5\u51b5\uff08\u601d\u60f3\u7c7b\u4f3ckruskal\uff09\u3002\n\n\u56de\u7b54\u8be2\u95ee\u65f6\u8003\u8651\u5f53\u524d\u6e38\u5ba2\u53d7\u5230\u7684\u9650\u5236\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define double long double\nusing namespace std;\ntypedef long long ll;\nint n,m,w,h,x[2005],y[2005],r[2005],cnt,f[3005];\nll dis[5][5];//\u8fb9\u754c\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u8fb9\u6743\u6700\u5927\u7684\u8fb9\u7684\u6700\u5c0f\u503c\nconst double eps=1e-9;\nstruct edge\n{\n\tint a,b;\n\tdouble c;//\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u7528long long\uff0c\u56e0\u4e3a\u8be2\u95ee\u7684\u534a\u5f84\u90fd\u662f\u6574\u6570\n}e[5000005];\nbool operator<(const edge&a,const edge&b)\n{\n\treturn a.c<b.c;\n}\nint fd(int x)\n{\n\treturn f[x]==x?x:f[x]=fd(f[x]);\n}\nvoid mer(int x,int y)\n{\n\tx=fd(x),y=fd(y);\n\tif(x!=y)\n\t\tf[y]=x;\n}\nvoid solve(int r,int e)\n{\n\tr*=2;//\u534a\u5f84->\u76f4\u5f84\n\tfor(int i=1;i<=4;++i)//\u8fd9\u91cc\u7528\u4e86\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u8fb9\u754c\u7684\u56db\u4e2a\u70b9\u7684\u8fde\u901a\u60c5\u51b5\n\t\tf[i]=i;       //\u4e24\u4e2a\u8fb9\u754c\u8fde\u901a\u5219\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u7ebf\u963b\u6321\u6e38\u5ba2\n\tfor(int i=1;i<=4;++i)\n\t\tfor(int j=i+1;j<=4;++j)\n\t\t\tif(dis[i][j]<r)\n\t\t\t\tmer(i,j);\n\tbool ok[5]={0,1,1,1,1};\n\tfor(int i=1;i<=4;++i)\n\t\tif(fd(i)==fd(i%4+1))\n\t\t\tif(i!=e)\n\t\t\t\tok[i]=0;\n\t\t\telse\n\t\t\t\tmemset(ok,0,sizeof(ok));\n\tswitch(e)//\u5206\u7c7b\u8ba8\u8bba\u90e8\u5206\uff0c\u867d\u7136\u957f\u4f46\u662f\u4e0d\u96be\u5199\n\t{\n\t\tcase 1:\n\t\t\tif(fd(2)==fd(4))\n\t\t\t\tok[2]=ok[3]=0;\n\t\t\tif(fd(1)==fd(3))\n\t\t\t\tok[3]=ok[4]=0;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif(fd(1)==fd(3))\n\t\t\t\tok[3]=ok[4]=0;\n\t\t\tif(fd(2)==fd(4))\n\t\t\t\tok[1]=ok[4]=0;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif(fd(2)==fd(4))\n\t\t\t\tok[1]=ok[4]=0;\n\t\t\tif(fd(1)==fd(3))\n\t\t\t\tok[1]=ok[2]=0;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tif(fd(1)==fd(3))\n\t\t\t\tok[1]=ok[2]=0;\n\t\t\tif(fd(2)==fd(4))\n\t\t\t\tok[2]=ok[3]=0;\n\t\t\tbreak;\n\t}\n\tok[e]=1;\n\tfor(int i=1;i<=4;++i)\n\t\tif(ok[i])\n\t\t\tputchar(i+'0');\n\tputs(\"\");\n}\nll di(int i,int j)\n{\n\tll a=1ll*(x[i]-x[j])*(x[i]-x[j])+1ll*(y[i]-y[j])*(y[i]-y[j]);\n\treturn (ll)sqrt(a);\n}\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&w,&h);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&r[i]);\n\t\te[++cnt]={i,n+1,(double)max(0,x[i]-r[i])+eps};\n        //\u5efa\u6811\u548c\u8fb9\u754c\u4e4b\u95f4\u7684\u8fb9\n\t\te[++cnt]={i,n+2,(double)max(0,y[i]-r[i])+eps};\n\t\te[++cnt]={i,n+3,(double)max(0,w-x[i]-r[i])+eps};\n\t\te[++cnt]={i,n+4,(double)max(0,h-y[i]-r[i])+eps};\n\t}\n\tfor(int i=1;i<=4;++i)\n\t\tfor(int j=i+1;j<=4;++j)\n\t\t\tdis[i][j]=-1;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=i+1;j<=n;++j)//\u5efa\u6811\u548c\u6811\u4e4b\u95f4\u7684\u8fb9\n\t\t\te[++cnt]={i,j,di(i,j)-r[i]-r[j]};\n\tfor(int i=1;i<=n+4;++i)\n\t\tf[i]=i;\n\tsort(e+1,e+cnt+1);\n\tfor(int i=1;i<=cnt;++i)//\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u8fb9\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u60c5\u51b5\n\t{\n\t\tint x=fd(e[i].a),y=fd(e[i].b);\n\t\tdouble z=e[i].c;\n\t\tif(x!=y)\n\t\t{\n\t\t\tf[y]=x;\n\t\t\tfor(int j=1;j<=4;++j)\n\t\t\t\tfor(int k=j+1;k<=4;++k)\n\t\t\t\t\tif(dis[j][k]<0&&fd(n+j)==fd(n+k))\n\t\t\t\t\t\tdis[j][k]=z;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint r,e;\n\t\tscanf(\"%d%d\",&r,&e);\n\t\tsolve(r,e);\n\t}\n\treturn 0;\n}\n```\n\n\u590d\u6742\u5ea6\u74f6\u9888\u5728\u5bf9\u8fb9\u7684\u6392\u5e8f\u3002",
        "postTime": 1652851152,
        "uid": 300025,
        "name": "qiliangzhe",
        "ccfLevel": 8,
        "title": "P4675 [BalticOI 2016 day1]Park \u9898\u89e3"
    },
    {
        "content": "## Solution\n\n\u7ecf\u5178 Trick :\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u540c\u7684\u6e38\u5ba2\u7684\u5927\u5c0f\u4e0d\u4e00\u6837 , \u8fd9\u5f88\u9ebb\u70e6 .\n\n\u90a3\u4e48\u60f3\u529e\u6cd5 , \u628a\u6e38\u5ba2\u7684\u5927\u5c0f\u8f6c\u5316\u6210\u6811\u7684\u5927\u5c0f . \n\n**\u6700\u663e\u7136\u7684\u65b9\u6cd5 , \u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u534a\u5f84\u4e3a $r$ \u7684\u6e38\u5ba2 , \u8ba9\u6240\u6709\u7684\u6811\u7684\u534a\u5f84\u52a0\u4e0a $r$  .** \u5982\u56fe .\n\n![Hv7bkQ.png](https://s4.ax1x.com/2022/02/21/Hv7bkQ.png)\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6e38\u5ba2\u770b\u505a\u70b9\u4e86 . \u8fd9\u662f\u540e\u53ef\u4ee5\u5224\u6bb5\u56db\u4e2a\u89d2\u4e4b\u95f4\u662f\u5426\u8054\u901a . \u65b9\u6cd5\u53c2\u8003\u666e\u53ca\u7ec4\u96be\u5ea6\u9898\u76ee\u300a\u5976\u916a\u300b , \u628a\u56db\u6761\u8fb9\u4e5f\u90fd\u5f53\u4f5c\u4e00\u4e2a\u70b9 .\n\n\u5f53 A \u4e0e B \u4e0d\u80fd\u8054\u901a\u6709\u5982\u4e0b 3 \u79cd\u60c5\u51b5 :\n\n![Hv7qYj.png](https://s4.ax1x.com/2022/02/21/Hv7qYj.png)\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898 , \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u79bb\u7ebf . \u9884\u5904\u7406\u51fa\u4efb\u610f\u4e24\u68f5\u6811 ( \u5305\u62ec\u8fb9\u754c ) \u4e2d\u95f4\u7684\u8def\u5835\u4e0a\u6240\u9700\u7684\u6e38\u5ba2\u76f4\u5f84 . \u62ff\u4e00\u4e2a\u6307\u9488\u626b\u63cf , \u7136\u540e\u5224\u6bb5\u8fde\u901a\u6027\u5373\u53ef . \u6ce8\u610f\u6839\u636e\u9898\u76ee , \u4e00\u4e2a\u70b9\u603b\u662f\u53ef\u4ee5\u5230\u8fbe\u5176\u8d77\u70b9\u7684 .\n\n\u5173\u4e8e\u8fb9\u754c\u7684\u7f16\u53f7 , \u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u5de6\u5f00\u59cb\u9006\u65f6\u9488\u7f16\u4e3a $n+1 \\sim n+4$ , \u8fd9\u6837\u66f4\u65b9\u4fbf\u5b9e\u73b0 .\n\ncode :\n\n```cpp\nconst int MAXN=2000+10,MAXM=1e5+10;\nstruct Query {\n\tint idx,st,r;\t\n}qr[MAXM];\nstruct Union {\n\tint x,y;\n\tdouble r;\t\n}un[MAXN*MAXN];\ninline bool cmp(const Query A,const Query B) {\n\treturn A.r<B.r;\t\n}\ninline bool Cmp(const Union A,const Union B) {\n\treturn A.r<B.r;\t\n}\nint n,m,w,h,ans[MAXM][5],fa[MAXN];\nint cnt,x[MAXN],y[MAXN],r[MAXN];\ninline int find(const int k) {\n\tif(fa[k]==k) return k;\n\treturn fa[k]=find(fa[k]);\t\n}\ninline double distance(const double x,const double y,const double X,const double Y) {\n\treturn sqrt((x-X)*(x-X)+(y-Y)*(y-Y));\t\n}\ninline void init(void) {\n\tfor(int i=1;i<=n+4;i++) fa[i]=i;\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<i;j++) un[++cnt]=Union{i,j,distance(x[i],y[i],x[j],y[j])-r[i]-r[j]};\n\t\tun[++cnt]=Union{i,n+1,x[i]-r[i]};\n\t\tun[++cnt]=Union{i,n+2,y[i]-r[i]};\n\t\tun[++cnt]=Union{i,n+3,w-x[i]-r[i]};\n\t\tun[++cnt]=Union{i,n+4,h-y[i]-r[i]};\n\t}\n\tsort(un+1,un+cnt+1,Cmp);\n\treturn ;\t\n}\ninline void Merge(int x,int y) {\n    x=find(x),y=find(y),fa[x]=y;\n    return ;\n}\ninline int trapped(const int idx) { //\u56f0\u5728\u62d0\u89d2\u51fa\u4e0d\u53bb\n    return find(n+idx)==find(n+idx%4+1);\n}\ninline int cross_row(void) { //\u6a2a\u5411\n    return find(n+1)==find(n+3);\n}\ninline int cross_line(void) { //\u7eb5\u5411\n    return find(n+2)==find(n+4);\n}\ninline int able_to_reach(const int idx1,const int idx2) {\n    if(idx1==idx2) return 1;\n\tif(trapped(idx1)||trapped(idx2)) return 0;\n    if(abs(idx1-idx2)==2) {\n        if(cross_line()||cross_row()) return 0;\n        return 1;\n    }\n    if(idx1+idx2==3||idx1+idx2==7) {\n        if(cross_line()) return 0;\n        return 1;\n    }\n    if(cross_row()) return 0;\n    return 1;\n}\nsigned main() {\n\tn=read(),m=read(),w=read(),h=read();\n\tfor(int i=1;i<=n;i++) x[i]=read(),y[i]=read(),r[i]=read();\n\tinit();\n\tfor(int i=1,st,r;i<=m;i++) r=read(),st=read(),qr[i]=Query{i,st,r};\n    sort(qr+1,qr+m+1,cmp);\n    int pos=0;\n    for(int i=1;i<=m;i++) {\n        while(pos<cnt&&un[pos+1].r-2*qr[i].r<=-1e-7) pos++,Merge(un[pos].x,un[pos].y);\n        for(int j=1;j<=4;j++) if(able_to_reach(qr[i].st,j)) ans[qr[i].idx][j]=1;\n    }\n    for(int i=1;i<=m;i++) {\n        for(int j=1;j<=4;j++) if(ans[i][j]) printf(\"%d\",j);\n        printf(\"\\n\");\n    }\n\treturn 0;\n}\n```\n\nPS :\n\n1. \u6ce8\u610f\u6570\u7ec4\u5927\u5c0f .\n\n2. \u8fd9\u79cd\u6211\u4e00\u773c\u7206\u5207\u7684\u9898\u76ee\u4e0d\u5927\u53ef\u80fd\u662f\u9ed1\u9898\u5427 ......",
        "postTime": 1645449286,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "P4675 \u9898\u89e3"
    },
    {
        "content": "[P4675 [BalticOI 2016 day1]Park](https://www.luogu.com.cn/problem/P4675)\n\n## \u3010\u9898\u610f\u3011\n\n\u6709\u82e5\u5e72\u5750\u6807\u4e3a $(x,y)$\u3001\u534a\u5f84\u4e3a $r$ \u969c\u788d\uff0c\u548c\u82e5\u5e72\u534a\u5f84\u4e3a $k$ \u7684\u6e38\u5ba2\u3002\n\n\u6bcf\u4e2a\u6e38\u5ba2\u4ece\u5730\u56fe\u7684\u67d0\u4e2a\u89d2\u843d\u51fa\u53d1\uff0c\u8be2\u95ee\u4ed6\u4eec\u80fd\u5230\u8fbe\u54ea\u4e9b\u89d2\u843d\u3002\n\n## \u3010\u5206\u6790\u3011\n\n### \u4ec0\u4e48\u60c5\u51b5\u4e0b\u534a\u5f84\u4e3a $k$ \u7684\u6e38\u5ba2\u4e0d\u80fd\u5230\u8fbe\u53e6\u4e00\u4e2a\u89d2\u843d\uff1f\n\n\u5fc5\u7136\u662f\u67d0\u51e0\u4e2a\u969c\u788d\u7269\u7ec4\u6210\u4e86\u4e00\u9053\u201c\u5c4f\u969c\u201d\uff0c\u963b\u6b62\u8be5\u6e38\u5ba2\u7ecf\u8fc7\u3002\n\n\u5c4f\u969c\u4e2d\u7684\u76f8\u90bb\u4e24\u4e2a\u969c\u788d\u4e4b\u95f4\u7684\u95f4\u9699\u90fd\u5c0f\u4e8e $2k$\uff0c\u5934\u5c3e\u969c\u788d\u7269\u4e0e\u8fb9\u754c\u7684\u95f4\u9699\u4e5f\u5c0f\u4e8e $2k$\u3002\n\n### \u600e\u4e48\u5224\u65ad\u662f\u5426\u5b58\u5728\u8fd9\u6837\u4e00\u4e2a\u201c\u5c4f\u969c\u201d\uff1f\n\n\u82e5\u5c06\u4e24\u4e2a\u969c\u788d\uff08\u6216\u969c\u788d\u4e0e\u8fb9\u754c\uff09\u8054\u901a\u5b9a\u4e49\u4e3a\u4e8c\u8005\u95f4\u9699\u5c0f\u4e8e $2k$\u3002\n\n\u5219\u5b58\u5728\u5c4f\u969c\u5c31\u7b49\u4ef7\u4e8e\u67d0\u4e24\u4e2a\u8fb9\u754c\u8054\u901a~~\u94f6\u6cb3\u5c06\u725b\u90ce\u548c\u7ec7\u5973\u5206\u9694~~\u3002\n\n\u8fde\u901a\u6027\u53ef\u4ee5\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\u3002\n\n### \u600e\u4e48\u5904\u7406\u591a\u7ec4\u8be2\u95ee\uff1f\n\n\u82e5\u6e38\u5ba2\u534a\u5f84\u9012\u589e\uff0c\u5219\u9700\u8981\u5728\u5408\u5e76\u4e00\u4e9b\u8054\u901a\u5feb\u3002\n\n\u5148\u6c42\u51fa\u6240\u6709\u969c\u788d\u5bf9\u7684\u8ddd\u79bb\uff0c\u6392\u5e8f\u3002\n\n\u628a\u8be2\u95ee**\u79bb\u7ebf**\u4e0b\u6765\uff0c\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5408\u5e76\u6240\u6709\u8ddd\u79bb\u5c0f\u4e8e\u5f53\u524d\u6e38\u5ba2\u76f4\u5f84\u7684\u969c\u788d\u5bf9\u6240\u5728\u7684\u8054\u901a\u5757\uff0c\u5224\u65ad\u8fb9\u754c\u8054\u901a\u6027\u5373\u53ef\u3002\n\n### \u4e00\u4e2a\u5c0f\u7ec6\u8282\n\n\u6b64\u9898eps\u592a\u5c0f\u4f1a\u70b8\u7cbe\u5ea6\uff0c\u8c03\u5230 $1e-4$ \u80fd\u8fc7\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\n\u79bb\u7ebf+\u5e76\u67e5\u96c6\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long \n#define DB double\nconst int maxn=2005,maxm=1e5+5,maxe=2e6+5;\nint n,m,w,h;\nstruct obj{\n\tint x,y,r,id;\n}a[maxn],a0[maxn],a1[maxn];\nbool cmp0(obj i,obj j){\n\treturn i.x<j.x;\n}\nbool cmp1(obj i,obj j){\n\treturn i.y<j.y;\n}\nstruct data{\n\tint x,y;\n\tDB r;\n\tbool operator <(data b)const{return r<b.r;}\n}e[maxe+maxn*4];\nstruct hum{\n\tint id,E,r;\n\tbool operator <(hum b)const{return r<b.r;} \n}b[maxm];\nint tot;\nint cnt;\nDB sqr(int x){\n\treturn (DB)x*x;\n}\nDB dis(int i,int j){\n\treturn sqrt(sqr(a[i].x-a[j].x)+sqr(a[i].y-a[j].y))-a[i].r-a[j].r;\n}\nint fa[maxn+5];\nint getfa(int x){\n\treturn fa[x]==x?x:fa[x]=getfa(fa[x]);\n}\nvoid merge(int x,int y){\n\tint fx=getfa(x),fy=getfa(y);\n\tif(fx!=fy) fa[fx]=fy;\n}\nbool G(int x,int y){\n\tint fx=getfa(x),fy=getfa(y);\n\treturn fx==fy;\n}\nint U,D,L,R;\nbool ans[maxm][5];\nvoid check(int i){\n\t#define ID b[i].id\n\tif(b[i].E==1){\n\t\tif(G(L,D)) ans[ID][2]=ans[ID][3]=ans[ID][4]=1;else\n\t\tif(G(U,D)) ans[ID][2]=ans[ID][3]=1;else\n\t\tif(G(L,R)) ans[ID][3]=ans[ID][4]=1;\n\t\telse{\n\t\t\tif(G(L,U)) ans[ID][4]=1;\n\t\t\tif(G(U,R)) ans[ID][3]=1;\n\t\t\tif(G(R,D)) ans[ID][2]=1;\n\t\t}\n\t}else\n\tif(b[i].E==2){\n\t\tif(G(R,D)) ans[ID][1]=ans[ID][3]=ans[ID][4]=1;else\n\t\tif(G(U,D)) ans[ID][1]=ans[ID][4]=1;else\n\t\tif(G(L,R)) ans[ID][3]=ans[ID][4]=1;\n\t\telse{\n\t\t\tif(G(L,U)) ans[ID][4]=1;\n\t\t\tif(G(U,R)) ans[ID][3]=1;\n\t\t\tif(G(L,D)) ans[ID][1]=1;\n\t\t}\n\t}else\n\tif(b[i].E==3){\n\t\tif(G(U,R)) ans[ID][1]=ans[ID][2]=ans[ID][4]=1;else\n\t\tif(G(U,D)) ans[ID][1]=ans[ID][4]=1;else\n\t\tif(G(L,R)) ans[ID][1]=ans[ID][2]=1;\n\t\telse{\n\t\t\tif(G(L,U)) ans[ID][4]=1;\n\t\t\tif(G(D,R)) ans[ID][2]=1;\n\t\t\tif(G(L,D)) ans[ID][1]=1;\n\t\t}\n\t}else\n\tif(b[i].E==4){\n\t\tif(G(L,U)) ans[ID][1]=ans[ID][2]=ans[ID][3]=1;else\n\t\tif(G(U,D)) ans[ID][2]=ans[ID][3]=1;else\n\t\tif(G(L,R)) ans[ID][1]=ans[ID][2]=1;\n\t\telse{\n\t\t\tif(G(R,U)) ans[ID][3]=1;\n\t\t\tif(G(D,R)) ans[ID][2]=1;\n\t\t\tif(G(L,D)) ans[ID][1]=1;\n\t\t}\n\t}\n}\nconst DB eps=1e-4;\nvoid work(){\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfa[U]=U,fa[D]=D,fa[L]=L,fa[R]=R;\n\tfor(int i=1,j=1;i<=m;i++){\n\t\twhile(j<=cnt&&e[j].r-b[i].r*2<=-eps) merge(e[j].x,e[j].y),j++;\n\t\tcheck(i);\n\t}\n}\nvoid init(){\n\tscanf(\"%d%d%d%d\",&n,&m,&w,&h);\n\tfor(int i=1,x,y,r;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&r);\n\t\ta[i]=a0[i]=a1[i]=(obj){x,y,r,i};\n\t}\n\tstd::sort(a0+1,a0+1+n,cmp0);\n\tstd::sort(a1+1,a1+1+n,cmp1);\n\tfor(int i=1;i<n;i++)\n\tfor(int j=i+1;j<=n;j++) e[++cnt]=(data){i,j,dis(i,j)};\n\tL=n+1,D=n+2,R=n+3,U=n+4;\n\tfor(int i=1;i<=n;i++){\n\t\te[++cnt]=(data){i,L,(DB)a[i].x-a[i].r};\n\t\te[++cnt]=(data){i,D,(DB)a[i].y-a[i].r};\n\t\te[++cnt]=(data){i,R,(DB)w-a[i].x-a[i].r};\n\t\te[++cnt]=(data){i,U,(DB)h-a[i].y-a[i].r};\n\t}\n\tstd::sort(e+1,e+1+cnt);\n\tfor(int i=1,r,E;i<=m;i++){\n\t\tscanf(\"%d%d\",&r,&E);\n\t\tb[i]=(hum){i,E,r};\n\t}\n\tstd::sort(b+1,b+1+m);\n}\nvoid print(){\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=4;j++) if(!ans[i][j]) printf(\"%d\",j);\n\t\tputchar(10);\n\t} \n}\nint main(){\n    #ifndef ONLINE_JUDGE\n\tfreopen(\"P4675.in\",\"r\",stdin);\n\tfreopen(\"P4675.out\",\"w\",stdout);\n\t#endif\n\tinit();\n\twork();\n\tprint();\n\treturn 0;\n}\n```\n",
        "postTime": 1636283432,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4675 \u3010[BalticOI 2016 day1]Park\u3011"
    }
]