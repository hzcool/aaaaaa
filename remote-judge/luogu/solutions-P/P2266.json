[
    {
        "content": "\u672c\u9898\u8981\u6c42\u6c42\u51fa\u548c\u67d0\u4e2a\u683c\u5b50\u76f8\u8fde\u7684\u6700\u5c0f\u8fb9\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c(\u53d8\u5f97\u6743\u503c\u53ef\u4ee5\u770b\u4f5c\u4e3a\u683c\u5b50\u4e0e\u683c\u5b50\u4e4b\u95f4\u9ad8\u5ea6\u7684\u7edd\u5bf9\u503c\u4e4b\u5dee)\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7528\u6700\u5c0f\u751f\u6210\u6811\u6765\u89e3\u51b3\uff0c\u7531\u4e8e\u8be2\u95ee\u53ef\u80fd\u5f88\u591a\u6211\u4eec\u9700\u8981\u5bf9\u7b54\u6848\u8fdb\u884c\u9884\u5904\u7406\u3002\n\n\u5efa\u56fe\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u683c\u5b50\u548c\u5b83\u5468\u56f4\u7684\u683c\u5b50\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u683c\u5b50\u9ad8\u5ea6\u7edd\u5bf9\u503c\u4e4b\u5dee\uff0c\u4e4b\u540e\u6211\u4eec\u5bf9\u6574\u4e2a\u56fe\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u81f3\u5c11\u8d70\u8fc7T\u4e2a\u683c\u5b50\uff0c\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8054\u901a\u6027\uff0c\u8fd8\u8981\u7ef4\u62a4\u6bcf\u4e2a\u96c6\u5408\u91cc\u9762\u7684\u9876\u70b9\u6570\u4ee5\u53ca\u6bcf\u4e2a\u96c6\u5408\u5b83\u6240\u8be2\u95ee\u7684\u70b9\u6570\uff0c\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u540e\u5b83\u4eec\u7684\u70b9\u6570\u4e4b\u548c>= T\uff0c\u90a3\u4e48\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u8be2\u95ee\u7684\u70b9\u6570\u5c31\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u5373ans+=ask[i]\uff0cask[i]\u8868\u793ai\u96c6\u5408\u6709\u591a\u5c11\u4e2a\u8be2\u95ee\u7684\u70b9(\u5373\u91cc\u9762\u5305\u542b\u591a\u5c11\u4e2a\u94a5\u5319)\uff0c\u4e4b\u540e\u5c06\u4e24\u4e2a\u96c6\u5408\u5408\u5e76\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n#define LL long long \n#define Maxn 400005\n#define Maxm 1600005\n\nstruct node {\n    LL u,v,w;\n}e[2*Maxm];\n\nLL n,m,T,cnt,N,tot,M,ans=0;\nLL fa[Maxn],dot[Maxn],ask[Maxn],rank[Maxn];\nLL a[605][605],b[605][605],dx[4]={0,0,1,-1},dy[4]={1,-1,0,0};\n\nbool comp(const node &k1,const node &k2) {return k1.w<k2.w;}\nLL find(LL x) {\n    if(fa[x]==x) return x;\n    else return fa[x]=find(fa[x]);\n}\n\n//ask[i]\u8868\u793ai\u96c6\u5408\u8be2\u95ee\u7684\u70b9\u6570,dot[i]\u8868\u793ai\u96c6\u5408\u91cc\u9762\u7684\u70b9\u6570 \nint main() {\n    scanf(\"%lld%lld%lld\",&n,&m,&T);N=n*m;\n    for(int i=1;i<=n*m;i++) fa[i]=i,dot[i]=1;\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) scanf(\"%lld\",&a[i][j]);\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) {\n        scanf(\"%lld\",&b[i][j]);\n        ask[(i-1)*m+j]=b[i][j];\n    }\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) {\n        for(int k=0;k<4;k++) {\n            int x=i+dx[k],y=j+dy[k];\n            if(x>n||x<1||y<1||y>m) continue ;\n            e[++M].u=(i-1)*m+j;e[M].v=(x-1)*m+y;\n            e[M].w=abs(a[i][j]-a[x][y]);\n        } \n    }\n    sort(e+1,e+M+1,comp);LL r1,r2;\n    for(int i=1;i<=M;i++) {\n        r1=find(e[i].u);r2=find(e[i].v);\n        if(r1!=r2) {\n            if(dot[r1]+dot[r2]>=T) {\n                if(dot[r1]<T) ans+=e[i].w*ask[r1]; \n                if(dot[r2]<T) ans+=e[i].w*ask[r2];//\u8fd9\u4e24\u53e5\u8bdd\u7edf\u8ba1\u5bf9\u7b54\u6848\u7684\u8d21\u732e    \n            }    \n            if(rank[r1]<rank[r2]) fa[r1]=r2,dot[r2]+=dot[r1],ask[r2]+=ask[r1];\n            else {\n                fa[r2]=r1,dot[r1]+=dot[r2],ask[r1]+=ask[r2];\n                if(rank[r1]==rank[r2]) rank[r1]++;\n            }\n            tot++;\n            if(tot==N-1) break;\n        }\n    } \n    printf(\"%lld\\n\",ans);\n    return 0;\n} \n```",
        "postTime": 1508322360,
        "uid": 19122,
        "name": "shanjianyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2266 \u3010\u7231\u7684\u4f9b\u517b\u3011"
    }
]