[
    {
        "content": "**\u61d2\u5f97\u63a8\u8d2a\u5fc3\u548b\u505a\u554a\uff1f**\n\n\u6211\u4eec\u8003\u8651\u5c06\u95ee\u9898\u63cf\u8ff0\u4e3a**\u7ebf\u6027\u89c4\u5212**\uff0c\u8bbe\u96c6\u65cf $\\mathcal I$ \u5305\u542b\u4e86\u6240\u6709\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u6211\u4eec\u65e0\u975e\u8981\u7ed9\u6bcf\u6761\u8def\u5f84 $S$ \u8d4b\u4e88\u4e00\u4e2a\u6743\u503c $x_S$ \u8868\u793a\u8fd9\u6761\u8def\u5f84\u8d70\u4e86\u591a\u5c11\u6b21\uff0c\u5bb9\u6613\u5199\u51fa\u7ea6\u675f\uff1a\n\n$$\n\\forall u, \\sum_{S\\ni u} x_S=a_u\n$$\n\n\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u6700\u5c0f\u5316\n\n$$\n\\sum_{S\\in \\mathcal I} x_S\n$$\n\n\u7ebf\u6027\u89c4\u5212\u4e00\u822c\u662f\u7528\u4e0d\u7b49\u5f0f\u8868\u8ff0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u524d\u9762\u7684\u7b49\u5f0f\u62c6\u6210\u4e24\u7ec4\u4e0d\u7b49\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5199\u6210\u6807\u51c6\u7684\u5f62\u5f0f\uff1a\n\n$$\n\\begin{matrix}\n& x_S \\ge 0,\\\\\n\\mathrm{minimize} & \\sum_{S\\in \\mathcal I} x_S, \\\\\n\\mathrm{s.t.} & \\sum_{S\\ni u} x_S  &\\ge & a_u & (s_u)\\\\\n              & \\sum_{S\\ni u} -x_S &\\ge& -a_u & (t_u)\\\\\n\\end{matrix}\n$$\n\n\u6211\u4eec\u6539\u5199\u4e3a\u5176**\u5bf9\u5076\u7ebf\u6027\u89c4\u5212**\uff0c\u5373\u53d8\u6210\n\n$$\n\\begin{matrix}\n& s_u,t_u \\ge 0,\\\\\n\\mathrm{maximize} & \\sum_u a_u(s_u-t_u), \\\\\n\\mathrm{s.t.} & \\sum_{u\\in S} (s_u-t_u)  &\\le & 1 & (x_S)\\\\\n\\end{matrix}\n$$\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee4 $b_u=s_u-t_u$\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e $b_u$ \u53ef\u4efb\u53d6\uff0c\u7136\u540e\u76ee\u6807\u662f\u6700\u5927\u5316 $\\sum a_ub_u$\uff0c\u6ee1\u8db3\u7ea6\u675f\n\n$$\n\\forall S\\in \\mathcal I,\\sum_{u\\in S} b_u \\le 1\n$$\n\n\u6839\u636e\u7ebf\u6027\u89c4\u5212\u7684\u5bf9\u5076\u5b9a\u7406\uff0c\u8fd9\u4e24\u4e2a\u95ee\u9898\u7684\u89e3\u662f\u76f8\u7b49\u7684\uff0c\u6211\u4eec\u53ea\u9700\u6c42\u89e3\u540e\u8005\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u7136\u5730\u8bbe\u8ba1\u4e00\u4e2a DP\uff1a$f_{u,d}$ \u8868\u793a $u$ \u8fd9\u9897\u5b50\u6811\u91cc\u4ece $u$ \u51fa\u53d1\uff0c$b$ \u503c\u4e4b\u548c\u6700\u5927\u7684\u8def\u5f84\u4e3a $d$ \u65f6\u6700\u5927\u7684 $\\sum a_ub_u$\u3002\u663e\u7136 $d \\in \\{0,1\\}$\u3002\u800c $b_u$ \u53ea\u6709\u4e09\u79cd\u5fc5\u8981\u7684\u53d6\u503c\uff1a$\\{-1,0,1\\}$\u3002\u6211\u4eec\u679a\u4e3e\u5404\u60c5\u51b5\u8fdb\u884c\u8f6c\u79fb\uff0c\u5373\u662f\u4e00\u4e2a $\\Theta(n)$ DP\u3002\n\n\uff08\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u7591\u70b9\uff0c\u5c31\u662f\u4e3a\u4ec0\u4e48\u6700\u4f18\u89e3\u4e00\u5b9a\u662f\u6574\u6570\u3002\u5bb9\u6613\u53d1\u73b0\u672c\u9898\u7684\u7ea6\u675f\u77e9\u9635**\u5e76\u4e0d\u662f**\u5168\u5e7a\u6a21\u7684\uff0c\u56e0\u6b64\u4e0d\u80fd\u5957\u7528\u8be5\u5145\u5206\u6761\u4ef6\u6765\u8bf4\u660e\u3002\uff09",
        "postTime": 1609601345,
        "uid": 21423,
        "name": "Elegia",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7246 \u3010\u624b\u52bf\u5bc6\u7801\u3011"
    },
    {
        "content": "\u5f88\u5de7\u5999\u7684\u4e00\u9053\u8d2a\u5fc3\u9898\u3002\n\n\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\uff0c\u6211\u5f53\u524d\u6240\u9009\u62e9\u7684\u94fe\u5f00\u59cb\u62d0\u5f2f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u904d\u5386\u6574\u68f5\u6811\uff0c\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u5904\u7406\u90a3\u4e9b\u94fe\u662f\u5c31\u5730\u62d0\u5f2f\uff0c\u54ea\u4e9b\u94fe\u662f\u7ee7\u7eed\u5f80\u4e0a\u4f20\uff0c\u5728\u51b3\u5b9a\u4e00\u6761\u94fe\u7684\u5f00\u59cb\u65f6\u8ba1\u7b97\u8d21\u732e\u51b3\u5b9a\u62d0\u5f2f\u65f6\u51cf\u53bb\u591a\u7b97\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u7684\u74f6\u9888\u5728\u4e8e\u5982\u4f55\u51b3\u5b9a\u62d0\u70b9\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u671f\u671b\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\uff0c\u540c\u65f6\u95ee\u9898\u60c5\u51b5\u4e5f\u975e\u5e38\u590d\u6742\uff0c\u6211\u4eec\u5c1d\u8bd5\u7740\u5206\u7c7b\u8ba8\u8bba\u8d2a\u5fc3\u53bb\u89e3\u51b3\u5b83\u3002\n\n\u9996\u5148\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u5bf9\u4e8e\u5f53\u524d\u70b9 $x$ \uff0c\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u5bf9\u4e8e\u5b83\u7684\u6bcf\u4e2a\u513f\u5b50\u5f80\u4e0a\u4f20\u4e86\u591a\u5c11\u6761\u94fe\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6700\u591a\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u94fe\u53ef\u4ee5\u5339\u914d\u51fa\u591a\u5c11\u4e2a\u62d0\u5f2f\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u8003\u8651\u6bcf\u6b21\u5c06\u4f20\u9012\u7684\u94fe\u6700\u591a\u7684\u513f\u5b50\u5f80\u5176\u4ed6\u4efb\u610f\u4e00\u4e2a\u513f\u5b50\u4f20\u9012\u4e00\u4e2a\u62d0\u5f2f\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002\u90a3\u4e48\u6700\u540e\u80fd\u591f\u5339\u914d\u51fa\u7684\u62d0\u70b9\u663e\u7136\u5c31\u662f $c = \\min\\left(sum-maxn , \\left\\lfloor \\dfrac{sum}{2} \\right\\rfloor \\right)$ \u6761\uff0c\u5176\u4e2d $sum$ \u662f\u513f\u5b50\u7684\u603b\u4e0a\u4f20\u94fe\u6570\uff0c$maxn$ \u662f\u513f\u5b50\u4e0a\u4f20\u7684\u6700\u5927\u7684\u94fe\u6570\u3002\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u80fd\u62d0\u5f2f\u5c31\u76f4\u63a5\u62d0\u5f2f\u3002\u4e0d\u59a8\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n1\u3001\u5f53 $sum \\le a_x$ \u65f6\uff1a\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5b8c\u5168\u4e0d\u62d0\u5f2f\u4e00\u5b9a\u5c5e\u4e8e\u6700\u4f18\u7b56\u7565\u3002\u56e0\u4e3a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65e0\u8bba\u5982\u4f55\uff0c$a_x$ \u7684\u503c\u90fd\u6700\u591a\u4f1a\u521a\u597d\u88ab\u513f\u5b50\u4e0a\u4f20\u7684\u94fe\u5b8c\u5168\u6d88\u8017\u3002\u5047\u8bbe\u6211\u4eec\u5c11\u53d6\u4e00\u4e2a\u62d0\u70b9\uff0c\u90a3\u4e48 $a_x$ \u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5b8c\u5168\u6d88\u8017\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u4ece $x$ \u4e0a\u4f20\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u8d21\u732e\u4e0d\u53d8\uff0c\u4e0a\u4f20\u7684\u94fe\u589e\u52a0 \u3002\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5e0c\u671b\u4e0a\u4f20\u7684\u94fe\u8d8a\u591a\u8d8a\u597d\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7956\u5148\u8282\u70b9\u5e2e\u52a9\u66f4\u591a\u7684\u70b9\u5b8c\u6210\u62d0\u5f2f\u3002\n\n2\u3001\u5f53 $a_x \\le c$ \u65f6\uff1a\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5c3d\u53ef\u80fd\u591a\u5730\u9009\u62e9\u62d0\u70b9\u3002\u56e0\u4e3a\u6b64\u65f6\u53d6\u5230\u6700\u540e $a_x$ \u81ea\u8eab\u4e00\u5b9a\u4e0d\u4f1a\u6709\u5269\u4f59\uff0c\u90a3\u4e48\u53d6\u62d0\u70b9\u7684\u591a\u5c11\u5bf9\u5f53\u524d\u8d21\u732e\u4e00\u5b9a\u4f1a\u6709\u5f71\u54cd\u3002\u5047\u8bbe\u6211\u4eec\u5c11\u53d6\u4e00\u4e2a\u62d0\u70b9\uff0c\u6211\u4eec\u4f1a\u591a\u4e00\u4e2a\u4e0a\u4f20\u94fe\uff0c\u5f53\u524d\u8d21\u732e\u52a0 $1$\uff0c\u4e0e\u5176\u5e0c\u671b\u8fd9\u4e2a\u4e0a\u4f20\u94fe\u5728\u4ee5\u540e\u5e2e\u52a9\u7956\u5148\u5c06\u8d21\u732e\u51cf\u5c11 $1$ \u4e0d\u5982\u73b0\u5728\u5c31\u4e0d\u589e\u52a0\u8d21\u732e\u3002\n\n3\u3001\u5bf9\u4e8e\u5269\u4f59\u7684\u60c5\u51b5\uff1a\n\n\u7531\u4e8e\u968f\u7740\u6211\u4eec\u5bf9\u4e8e\u62d0\u70b9\u7684\u9009\u53d6\uff0c $sum$ \u51cf\u5c11\u5f97\u6bd4 $a_x$ \u5feb\uff0c\u6700\u7ec8\u6709\u53ef\u80fd\u53d8\u6210\u60c5\u51b5 1 \uff0c\u56e0\u6b64\u6211\u4eec\u5148\u8003\u8651\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u7b2c\u4e00\u4e2a\u62d0\u70b9\u662f\u5426\u9009\u62e9\u3002\u5047\u8bbe\u6211\u4eec\u53d6\u8fd9\u4e2a\u62d0\u70b9\uff0c\u5bfc\u81f4\u7684\u7ed3\u679c\u5c31\u662f\u8d21\u732e\u4e00\u5b9a\u51cf\u5c11 $1$\uff08\u56e0\u4e3a\u52a0\u4e0a\u8fd9\u4e2a\u62d0\u70b9\u540e\uff0c$a_x \\le sum$\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u4ea7\u751f\u4ece $x$ \u5f00\u59cb\u7684\u94fe\uff09 \uff0c\u540c\u65f6\u4e0a\u4f20\u94fe\u4e00\u5b9a\u51cf\u5c11 $1$ \uff0c\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u4e0a\u4f20\u94fe\u5728\u7956\u5148\u53ef\u80fd\u4f1a\u4ea7\u751f\u7684\u8d21\u732e\u5728\u6b64\u65f6\u786e\u5b9a\uff0c\u4e00\u5b9a\u80fd\u8ba9\u7b54\u6848\u4e0d\u52a3\u3002\u6700\u540e\u7531\u4e8e $sum$ \u51cf\u901f\u4f1a\u6bd4 $a_x$ \u5feb\uff0c\u56e0\u6b64\u5f53\u5f53\u524d\u60c5\u51b5\u53d8\u4e3a\u60c5\u51b5 1 \u65f6\u5219\u6309\u7167\u60c5\u51b5 1 \u8ba1\u7b97\u3002\n\n\u6574\u7406\u53ef\u5f97\u4e00\u4e0b\u7b80\u5355\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\n\nnamespace IO{\n\tconst int sz=1<<22;\n\tchar a[sz+5],b[sz+5],*p1=a,*p2=a,*t=b,p[105];\n\tinline char gc(){\n\t\treturn p1==p2?(p2=(p1=a)+fread(a,1,sz,stdin),p1==p2?EOF:*p1++):*p1++;\n\t}\n\ttemplate<class T> void gi(T& x){\n\t\tx=0; char c=gc();\n\t\tfor(;c<'0'||c>'9';c=gc());\n\t\tfor(;c>='0'&&c<='9';c=gc())\n\t\t\tx=(x<<3)+(x<<1)+(c-'0');\n\t}\n\tinline void flush(){fwrite(b,1,t-b,stdout),t=b; }\n\tinline void pc(char x){*t++=x; if(t-b==sz) flush(); }\n\ttemplate<class T> void pi(T x,char c='\\n'){\n\t\tif(x<0) x=-x;\n\t\tif(x==0) pc('0'); int t=0;\n\t\tfor(;x;x/=10) p[++t]=x%10+'0';\n\t\tfor(;t;--t) pc(p[t]); pc(c);\n\t}\n\tstruct F{~F(){flush();}}f; \n}\nusing IO::gi;\nusing IO::pi;\n\n\n\nconst int MAXN = 3e6 + 5;\nLL ans , a[MAXN];\nint n , head[MAXN] , to[MAXN << 1] , nxt[MAXN << 1] , cnt;\nvoid add(int u , int v) {nxt[++cnt] = head[u];head[u] = cnt;to[cnt] = v;}\n\nLL dfs(LL x , LL fa) {\n\tLL _sum = 0 , maxn = 0;\n\tfor (int i = head[x]; i; i = nxt[i]) {\n\t\tif(to[i] == fa) continue;\n\t\tLL num = dfs(to[i] , x);\n\t\t_sum += num , maxn = max(maxn , num);\n\t}\n\tLL c = min(_sum - maxn , _sum / 2);\n\tif(a[x] <= c) {\n\t\tans -= a[x];\n\t\treturn 0;\n\t}\n\telse if(a[x] < _sum) {\n\t\tLL tmp = min(_sum - a[x] , c);\n\t\tans -= tmp;\n\t\treturn a[x] - tmp;\n\t}\n\telse {\n\t\tans += a[x] - _sum;\n\t\treturn a[x];\n\t}\n}\n\nnamespace Generate{\n\tint n,seed;\n\tstatic const int mod=1e9;\n\tint Rand(int x){\n\t\tseed=(1ll*seed*0x66CCF+19260817ll)%x+1;\n\t\tseed=(1ll*seed*0x77CCF+20060428ll)%x+1;\n\t\tseed=(1ll*seed*0x88CCF+12345678ll)%x+1;\n\t\tseed=(1ll*seed*0x33CCCCFF+10086001ll)%x+1;\n\t\treturn seed;\n\t}\n\tvoid RS(LL* a){ \n\t\tfor(int i = 1; i <= n; i++) a[i] = Rand(mod); \n\t\tfor(int i = 2; i <= n; i++){\n\t\t\tint fa = Rand(i - 1);\n\t\t\tadd(fa , i);\n\t\t\tadd(i , fa);\n\t\t}\n\t}\n};\n\nint main() {\n\tint ty;\n\tgi(ty);\n\tif(ty == 1) {\n\t\tgi(n);\n\t\tfor (int i = 1; i <= n; ++i) gi(a[i]);\n\t\tfor (int i = 1; i < n; ++i) {\n\t\t\tint u , v;\n\t\t\tgi(u),gi(v);\n\t\t\tadd(u , v),add(v , u);\n\t\t}\n\t}\n\telse {\n\t\tgi(Generate::seed);\n\t\tgi(n);\n\t\tGenerate::n=n;\n\t\tGenerate::RS(a);\n\t}\n\tdfs(1 , 0);\n\tpi(ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1608296354,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "\u624b\u52bf\u5bc6\u7801"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u70b9\u5e26\u6743\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u6811\u4e0a\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u70b9\u6743\u51cf\u53bb $1$\uff0c\u6c42\u4f7f\u6240\u6709\u7684\u70b9\u7684\u70b9\u6743\u53d8\u4e3a $0$ \u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n## \u9898\u89e3\n\n\u5bf9\u4e8e subtask 1~2 \u76f4\u63a5\u624b\u73a9\u5c31\u597d\u4e86\uff0csubtask 3 \u7206\u641c\uff0csubtask 4 \u662f\u9001\u7ed9\u4f60\u4eec\u4e71\u641e\u7684\uff0csubtask 5 \u5c31\u662f\u79ef\u6728\u5927\u8d5b\u76f4\u63a5\u9012\u63a8\u5c31\u597d\u4e86\u3002\n\n\u73b0\u5728\u6765\u8bb2\u6b63\u89e3\u3002\n\n\u5148\u89c4\u5b9a\u4e00\u4e0b\uff0c$(u,v)$ \u8868\u793a\u5bf9 $u$ \u5230 $v$ \u8fd9\u6761\u7b80\u5355\u8def\u5f84\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u4ecd\u7136\u5e94\u7528\u79ef\u6728\u5927\u8d5b\u8fd9\u9898\u7684\u2018\u5e2e\u5fd9\u2019\u601d\u60f3\u8fdb\u884c\u6811\u4e0a\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u5728 dfs \u65f6\u9650\u4fdd\u8bc1\u5b50\u6811\u5904\u7406\u5b8c\u6210\uff0c\u518d\u5728\u56de\u6eaf\u65f6\u51cf\u53bb\u4e0d\u5fc5\u8981\u7684\u6d6a\u8d39\u3002\n\n\u5047\u8bbe\u5f53\u524d\u7ed3\u70b9\u4e3a $u$\uff0c\u8003\u5b83\u7684\u5b69\u5b50\u80fd\u5206\u522b\u63d0\u4f9b $v_1,v_2,...,v_k$ \u7684\u2018\u5e2e\u52a9\u2019\uff08\u5373\u5bf9\u4e8e\u5b69\u5b50 $i$\uff0c\u5b83\u6709 $v_i$ \u6761\u8def\u5f84\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0a\u8fde\uff09\u3002\n\n\u5f00\u59cb\u63a8\u7ed3\u8bba\u3002\n\n### \u7ed3\u8bba1\n\n\u5728 $u$ \u53ca\u5176\u5b50\u6811\u7684\u64cd\u4f5c\u6b21\u6570\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c$u$ \u5411\u4e0a\u63d0\u4f9b\u7684\u2018\u5e2e\u52a9\u2019\u8d8a\u591a\u8d8a\u597d\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xa6vpepb.png)\n\n\u5176\u4e2d $a_2=2,a_3=a_4=1$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c$(3,2)+(4,2)$ \u5176\u5b9e\u662f\u4f18\u4e8e $(3,4)+(2,2)$ \u7684\uff0c\u56e0\u4e3a\u524d\u8005\u7684\u4e24\u6761\u8def\u5f84\u90fd\u80fd\u7ee7\u7eed\u5411\u4e0a\u5e2e\u52a9\u7ed3\u70b9 $1$\uff0c\u4f46\u662f\u540e\u8005\u4ec5\u6709\u4e00\u6761\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u6bd4\u8f83\u7b80\u5355\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u770b\u7684\u61c2\u3002\n\n### \u7ed3\u8bba2\n\n\u5728\u4fdd\u8bc1\u7ed3\u8bba\u4e00\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u91cf\u8ba9\u8def\u5f84\u8de8\u5b50\u6811\u7684\u5339\u914d\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xwxq3j3i.png)\n\n\u5176\u4e2d $a_2=a_4=2,a_1=a_3=4$\u3002\n\n\u867d\u7136\u5728 dfs \u65f6\uff0c\u7ed3\u70b9 $2,3,4$ \u603b\u5171\u9700\u8981 $8$ \u6b21\u64cd\u4f5c\uff0c\u4f46\u662f\u56de\u6eaf\u5230\u6839\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5339\u914d $2\\times ((2,2)+(1,1)+(3,3))=2\\times (2,3),2\\times ((4,4)+(1,1)+(3,3))=2\\times (4,3)$\uff0c\u8fd9\u6837\u5b50\u53cd\u800c\u8ba9\u7b54\u6848\u51cf\u5c11\u4e86 $4$\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u8981\u4fdd\u8bc1\u7ed3\u8bba\u4e00\u5462\uff1f\n\n\u82e5\u539f\u6765 $\\sum v_i\\ge a_u$\uff0c\u5047\u8bbe\u6240\u6709\u7684 $v_i$ \u90fd\u4e0d\u5339\u914d\uff0c\u800c\u5411\u4e0a\u5e2e\u52a9 $u$\uff0c$u$ \u662f\u4e00\u5b9a\u4e0d\u4f1a\u989d\u5916\u52a0\u7b54\u6848\u7684\uff0c\u4f46\u662f\u6bcf\u6b21\u5339\u914d\u4f1a\u4f7f $\\sum v_i$ \u51cf\u5c11 $2$\uff0c$a_u$ \u51cf\u5c11 $1$\u3002\u4f46\u662f\u5339\u914d\u6b21\u6570\u8fc7\u591a\uff0c\u5728\u5b50\u6811\u5185\u662f\u5bf9\u7b54\u6848\u6ca1\u6709\u5e2e\u52a9\u7684\uff0c\u4f46\u662f\u5374\u4f1a\u662f\u6839\u5411\u4e0a\u5e2e\u52a9\u7684\u8def\u5f84\u51cf\u5c11\u3002\u8fd9\u5c31\u8fdd\u80cc\u7ed3\u8bba\u4e00\u3002\n\n\u6700\u540e\uff0c\u8003\u8651\u600e\u4e48\u5b9e\u73b0\uff0c~~\u6bd5\u7adf\u5b9e\u73b0\u624d\u662f\u6700\u96be\u7684~~\u3002\n\n- \u6700\u591a\u5339\u914d\u6b21\u6570 $c=\\min\\{\\lfloor\\frac{\\sum v_i}{2}\\rfloor,\\sum v_i-\\max\\{v_i\\}\\}$\n\n- \u4fdd\u8bc1\u8d2a\u5fc3\u7ed3\u8bba\u7684\u6700\u591a\u5339\u914d\u6b21\u6570 $c^{'}=\\max\\{0,\\min\\{c,a_u,\\sum v_i - a_u\\}\\}$\n\n- \u7ed3\u70b9 $u$ \u80fd\u5411\u4e0a\u5e2e\u52a9\u7684\u6b21\u6570 $help=a_u-c^{'}$\n\n- \u5bf9\u7b54\u6848\u7684\u8d21\u732e $\\Delta ans=\\max\\{a_u-\\sum v_i+c^{'},0\\}-c^{'}$\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O(n)}$\u3002\n\n\u4ee3\u7801\n```cpp\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <list>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntemplate <typename T>\ninline void read(T& t) {\n    t = 0;\n    char c = getchar();\n    int f = 1;\n    while (c < '0' || c > '9') {\n        if (c == '-')\n            f = -f;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9') {\n        t = (t << 3) + (t << 1) + c - '0';\n        c = getchar();\n    }\n    t *= f;\n}\n\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t);\n    read(args...);\n}\n\ntemplate <typename T>\ninline void write(T x) {\n    if (x < 0) {\n        x = -x;\n        putchar('-');\n    }\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\n#define LL long long\n\nLL Min(LL a, LL b) {\n    if (a > b)\n        return b;\n    else\n        return a;\n}\n\nLL Max(LL a, LL b) {\n    if (a < b)\n        return b;\n    else\n        return a;\n}\n\nnamespace Generate {\n\tint n, seed;\n\tstatic const int mod = 1e9;\n\tint Rand(int x) {\n    \tseed = (1ll * seed * 0x66CCF + 19260817ll) % x + 1;\n    \tseed = (1ll * seed * 0x77CCF + 20060428ll) % x + 1;\n    \tseed = (1ll * seed * 0x88CCF + 12345678ll) % x + 1;\n    \tseed = (1ll * seed * 0x33CCCCFF + 10086001ll) % x + 1;\n   \t \treturn seed;\n\t}\n\tvoid RS(LL* a, int* u, int* v) {  //\u4f60\u9700\u8981\u4f20\u5165\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u8868\u793a\u70b9\u6743\uff0c\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\n    \tint cnt = 0;\n    \tfor (int i = 1; i <= n; i++) a[i] = Rand(mod);\n    \tfor (int i = 2; i <= n; i++) {\n       \t \tint fa = Rand(i - 1);\n        \tcnt++;\n        \tu[cnt] = fa, v[cnt] = i;\n    \t}\n\t}\n};  // namespace Generate\n\nLL ans;\nint opt, n;\nLL a[3000005];\nint U[3000005], V[3000005];\nvector<int> G[3000005];\n\nLL dfs(int u, int fa) {\n    LL sum = 0, maxn = 0;\n    for (int i = 0; i < G[u].size(); i++) {\n        int v = G[u][i];\n        if (v == fa)\n            continue;\n        LL num = dfs(v, u);\n        sum += num, maxn = Max(maxn, num);\n    }\n    LL c = min(sum / 2, sum - maxn);\n    LL newc = max(0ll, min(c, min(a[u], sum - a[u])));\n    ans += max(0ll, a[u] - sum + newc) - newc;\n    return a[u] - newc;\n}\n\nsigned main() {\n    read(opt);\n    if (opt == 1) {\n        read(n);\n        for (int i = 1; i <= n; i++) read(a[i]);\n        for (int i = 1; i < n; i++) {\n            int u, v;\n            read(u, v);\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n    } else {\n        read(Generate::seed), read(n);\n        Generate::n = n;\n        Generate::RS(a, U, V);\n        for (int i = 1; i < n; i++) {\n            G[U[i]].push_back(V[i]);\n            G[V[i]].push_back(U[i]);\n        }\n    }\n    dfs(1, 0);\n    write(ans);\n    return 0;\n}\n```\n",
        "postTime": 1601214689,
        "uid": 154560,
        "name": "Silver187",
        "ccfLevel": 7,
        "title": "\u300cGLR Round 2\u300d\u6d1b\u6c34\u4e4b\u7075 Round 2 \u624b\u52bf\u5bc6\u7801 \u9898\u89e3"
    },
    {
        "content": "[P7246 \u624b\u52bf\u5bc6\u7801](https://www.luogu.com.cn/problem/P7246)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1769634)\n\n## \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u9897$n$\u4e2a\u70b9\u5e26\u70b9\u6743\u7684\u6811\uff0c\u53ef\u4ee5\u7528\u82e5\u5e72\u6761\u7b80\u5355\u8def\u5f84\u8986\u76d6\u6811\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\u4e3a\u5b83\u7684\u70b9\u6743\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n\\leqslant 3\\times 10^6$\u3002\n\n## \u5206\u6790\n\n\u975e\u5e38\u795e\u4ed9\u7684\u8d2a\u5fc3\u9898\u3002\n\n\u8003\u8651\u4f7f\u7528\u4e00\u79cd\u201c\u5e2e\u5fd9\u201d\u601d\u60f3\uff1a\u5bf9\u4e8e\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u6211\u4eec**\u5c06\u5185\u90e8\u7684\u70b9\u5168\u90e8\u6309\u8981\u6c42\u8986\u76d6**\uff0c\u5e76\u4ece$x$\u5ef6\u4f38\u51fa$v_x$\u6761\u8def\u5f84\u6765\u5e2e\u5fd9\u8986\u76d6\u7956\u5b97\u7ed3\u70b9\uff08\u67d0\u4e9b\u8def\u5f84\u4e5f\u53ef\u4ee5\u5728$x$\u7ed3\u70b9\u6b62\u6b65\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u505a\u4e00\u904d\u6811\u5f62dp\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9$x$\uff0c\u6211\u4eec\u8ba1\u7b97**\u4ec5**\u5f53\u524d\u4f4d\u7f6e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u8fd9\u91cc\u5411\u4e0a\u5ef6\u4f38\u51fa$1$\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u8d21\u732e\u5c31\u52a0$1$\uff1b\u5982\u679c\u6709\u4e24\u6761\u8def\u5f84\u5728\u8fd9\u91cc\u4ea4\u6c47\u6216\u8005\u4e00\u6761\u8def\u5f84\u5728\u8fd9\u91cc\u7ed3\u675f\uff0c\u90a3\u4e48\u8d21\u732e\u5c31\u51cf$1$\uff08\u672c\u6765\u8981\u4e24\u6761\u8def\u5f84\uff0c\u73b0\u5728\u7528\u4e00\u6761\u8def\u5f84\u5c31\u53ef\u4ee5\u8986\u76d6\u4e86\uff09\u3002\n\n\u8bbe$x$\u6240\u6709\u513f\u5b50\u7ec4\u6210\u4e86$son(x)$\u96c6\u5408\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u53d1\u73b0\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u4e2a$y,z\\in son(x)$\uff0c$y$\u7684\u8def\u5f84\u53ef\u4ee5\u548c$z$\u7684\u8def\u5f84\u5728$x$\u4e0a\u8fde\u63a5\u8d77\u6765\uff08\u4e0b\u6587\u79f0\u4e4b\u4e3a\u5339\u914d\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9$y$\u548c$z$\u7684\u4e24\u4e2a\u64cd\u4f5c\u53d8\u6210\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5e76\u53ef\u4ee5\u8ba9$x$\u591a\u4e00\u6b21\u8986\u76d6\u3002\n- \u5bf9\u4e8e\u6240\u6709\u7684\u513f\u5b50\uff0c\u4e24\u4e24\u4e4b\u95f4\u5339\u914d\u6700\u591a\u5339\u914d$\\lfloor\\frac{sum}{2}\\rfloor$\u6b21\u3002\n- \u5bf9\u4e8e\u67d0\u4e2a\u513f\u5b50$y$\uff0c\u6ee1\u8db3$v_y=maxx$\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u5982\u679c\u5176\u4ed6\u7684\u513f\u5b50\u90fd\u4e0e$y$\u5339\u914d\uff08\u4e0d\u8003\u8651$y$\u4e0d\u591f\u7684\u60c5\u51b5\uff09\uff0c\u90a3\u4e48\u6700\u5c11\u4e5f\u9700\u8981$sum-maxx$\u6b21\u5339\u914d\u3002\n\n\u56e0\u6b64\uff0c\u5728$x$\u7ed3\u70b9\u4e0a**\u7406\u8bba\u4e0a**\u53ef\u4ee5\u8fdb\u884c$l=\\min\\{\\lfloor\\frac{sum}{2}\\rfloor,sum-maxx\\}$\u6b21\u5339\u914d\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c**\u5728\u4e0d\u589e\u52a0$x$\u5b50\u6811\u5185\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u7684\u60c5\u51b5\u4e0b\u4e14\u4e0d\u8ba9$x$\u7684\u8986\u76d6\u6b21\u6570\u8d85\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8981\u51cf\u5c0f\u5339\u914d\u6b21\u6570\u3002**\u56e0\u4e3a\u6211\u4eec\u51cf\u5c0f\u5339\u914d\u6b21\u6570\u5c31\u53ef\u4ee5\u8ba9\u53ef\u4ee5\u5ef6\u4f38\u51fa\u53bb\u7684\u8def\u5f84\u6570\u66f4\u591a\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\u8fd9\u6837\u4e00\u5b9a\u662f\u66f4\u4f18\u7684\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u8981\u4fdd\u8bc1\u4e0d\u589e\u52a0$x$\u5b50\u6811\u5185\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5462\uff1f\u5ef6\u4f38\u51fa\u53bb\u4e0d\u662f\u53ef\u4ee5\u51cf\u5c0f\u7956\u5148\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5417\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u67d0\u4e00\u6761\u8def\u5f84\uff0c\u4e14\u5f53\u524d\u5b50\u6811\u7684\u6839\u7684\u8986\u76d6\u6b21\u6570\u8fd8\u6ca1\u6709\u6ee1\uff0c\u90a3\u4e48\u5982\u679c\u5b83\u5728\u8fd9\u91cc\u5339\u914d\uff0c\u90a3\u4e48\u4f1a\u51cf\u5c0f$1$\u7684\u8d21\u732e\uff1b\u800c\u5982\u679c\u5ef6\u4f38\u51fa\u53bb\uff0c\u53ea\u662f\u6709\u53ef\u80fd\u51cf\u5c0f$1$\u7684\u8d21\u732e\uff08\u6709\u53ef\u80fd\u5339\u914d\u4e0d\u5230\u8def\u5f84\uff09\u3002\u56e0\u6b64\u6211\u4eec\u53d1\u73b0\u5728\u5f53\u524d\u5b50\u6811\u80fd\u51cf\u5c0f\u8d21\u732e\u6211\u4eec\u76f4\u63a5\u5339\u914d\u4e00\u5b9a\u662f\u4e0d\u52a3\u7684\u3002\n\n\u6211\u4eec\u8bbe\u5f53\u524d\u6839\u7ed3\u70b9\u4e3a$x$\uff0c\u5728$x$\u5904\u7684\u5339\u914d\u6b21\u6570\u4e3a$y$\uff0c\u90a3\u4e48\u6709$y+(sum-2y)=a_x$\uff08$y$\u6761\u5728$x$\u5904\u5339\u914d\u7684\u8def\u5f84\uff0c\u5176\u4f59\u7684\u8def\u5f84\u90fd\u5411\u4e0a\u5ef6\u4f38\uff0c\u5171$sum-2y$\u6761\uff09\uff0c\u4e5f\u5c31\u662f$y=sum-a_x$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5f53\u524d\u5b50\u6811\u6700\u4f18\u5339\u914d\u6b21\u6570\u4e3a$match=\\min\\{l,a_x,sum-a_x\\}$\u3002\n\n\u77e5\u9053\u4e86\u5b50\u6811\u6700\u4f18\u5339\u914d\u6b21\u6570\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u90fd\u597d\u7b97\u4e86\u3002\n\n$v_x=a_x-match$\uff08\u663e\u7136\u9664\u53bb\u5339\u914d\u7684\u8def\u5f84\u6570\u5bf9$x$\u7684\u8986\u76d6\u6570\u91cf\uff0c\u5176\u4f59$a_x$\u7684\u6bcf\u6b21\u8986\u76d6\u90fd\u53ef\u4ee5\u5e2e\u7956\u5b97\u7684\u5fd9\uff09\n\n\u800c$x$\u7ed3\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$\\max\\{a_x-(sum-match),0\\}-match$\uff08\u6240\u6709\u8def\u5f84\u80fd\u8986\u76d6\u7684\u6b21\u6570\u4e3a$(sum-2match)+match=sum-match$\uff0c\u56e0\u6b64$x$\u7ed3\u70b9\u8fd8\u9700\u8981$a_x-(sum-match)$\u6b21\u8986\u76d6\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#define int long long\nconst int mod=1000000000,maxn=3000005,maxm=maxn<<1;\nint op,n,seed,e,ans;\nint a[maxn],start[maxn],to[maxm],then[maxm],v[maxn];\ninline int getseed(int x){\n\tseed=(1ll*seed*0x66CCF+19260817ll)%x+1;\n\tseed=(1ll*seed*0x77CCF+20060428ll)%x+1;\n\tseed=(1ll*seed*0x88CCF+12345678ll)%x+1;\n\tseed=(1ll*seed*0x33CCCCFF+10086001ll)%x+1;\n\treturn seed;\n}\ninline int max(int a,int b){\n\treturn a>b? a:b;\n}\ninline int min(int a,int b){\n\treturn a<b? a:b;\n}\ninline void add(int x,int y){\n\tthen[++e]=start[x],start[x]=e,to[e]=y;\n}\nvoid dfs(int x,int last){\n\tint sum=0,maxx=0,match;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tdfs(y,x),sum+=v[y],maxx=max(maxx,v[y]);\n\t}\n\tmatch=max(0,min(min(sum/2,sum-maxx),min(a[x],sum-a[x])));\n\tv[x]=a[x]-match;\n\tans+=max(a[x]-(sum-match),0)-match;\n}\nsigned main(){\n\tscanf(\"%lld\",&op);\n\tif(op==1){\n\t\tscanf(\"%lld\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%lld\",&a[i]);\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint x,y;\n\t\t\tscanf(\"%lld%lld\",&x,&y);\n\t\t\tadd(x,y),add(y,x);\n\t\t}\n\t}\n\tif(op==2){\n\t\tscanf(\"%lld%lld\",&seed,&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\ta[i]=getseed(mod);\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tint x=getseed(i-1);\n\t\t\tadd(x,i),add(i,x);\n\t\t}\n\t}\n\tdfs(1,0);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1610289756,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7246 \u3010\u624b\u52bf\u5bc6\u7801\u3011"
    },
    {
        "content": "> [P7246 \u624b\u52bf\u5bc6\u7801](https://www.luogu.com.cn/problem/P7246)\n\n\u9664 EI \u5916\u7684\u5176\u5b83\u6240\u6709\u9898\u89e3\u5e76\u6ca1\u6709\u4e25\u8c28\u5730\u8bc1\u660e\u8d2a\u5fc3\u7ed3\u8bba\uff0c\u672c\u9898\u89e3\u4f5c\u4e3a\u8865\u5145\u3002\n\n\u4e00\u9053 DP \u4e0e\u8d2a\u5fc3\u76f8\u7ed3\u5408\u7684\u597d\u9898\u3002\n\n\u8003\u8651\u6811\u5f62 DP\uff0c\u8bbe $b_i$ \u8868\u793a\u5c06 $i$ \u5b50\u6811\u6240\u6709\u8282\u70b9\u6743\u503c\u6e05\u96f6\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u6839\u636e\u8d2a\u5fc3\u601d\u60f3\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9\u5c3d\u91cf\u591a\u7684\u8def\u5f84\u4ee5 $i$ \u4e3a\u4e00\u7aef\uff0c\u8fd9\u6837\u5b83\u4eec\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u5411\u4e0a\u5ef6\u4f38\uff0c\u6216\u8005\u5c01\u95ed\u5728\u5b50\u6811\u5185\u3002\u6839\u636e\u51b3\u7b56\u5305\u5bb9\u6027\u53ef\u8bc1\u3002\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5e73\u8861\u6700\u5c0f\u4ee3\u4ef7 $b_i$ \u548c\u4ee5 $i$ \u4e3a\u4e00\u7aef\u7684\u8def\u5f84\u6761\u6570 $f_i$\u3002\n\n\u53ef\u4ee5\u731c\u5230\u8fd9\u6837\u4e00\u6761\u7ed3\u8bba\uff1a\u5728 $b_i$ \u6700\u5c0f\u7684\u524d\u63d0\u4e0b\u4f7f\u5f97 $f_i$ \u6700\u5927\uff0c\u63a5\u4e0b\u6765 $f_i$ \u6bcf\u589e\u5927 $1$\uff0c$b_i$ \u81f3\u5c11\u589e\u52a0 $1$\uff0c\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u662f\u4e0d\u4f18\u7684\u3002\u5176\u8bc1\u660e\u5728\u6700\u540e\u7ed9\u51fa\u3002\n\n\u8003\u8651 $u$ \u53ca\u5176\u6240\u6709\u5b50\u8282\u70b9 $v$\uff0c\u5982\u679c\u5b83\u4eec\u5206\u522b\u72ec\u7acb\uff0c\u5219\u603b\u4ee3\u4ef7\u5c06\u4e3a $b_u = a_u + \\sum b_v$\uff0c\u800c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\u51cf\u5c0f $b_u$\uff1a\n\n- \u9009\u62e9 $v_1\\neq v_2$\uff0c\u5c06 $a_u, f_{v_1}, f_{v_2}$ \u540c\u65f6\u51cf\u53bb $1$\uff0c\u5e76\u5c06\u603b\u4ee3\u4ef7 $b_u$ \u51cf\u5c11 $2$\uff0c\u8868\u793a\u901a\u8fc7 $u$ \u5c06\u4e24\u6761\u5206\u522b\u4ee5 $v_1$ \u548c $v_2$ \u4e3a\u7aef\u70b9\u7684\u94fe\u76f8\u8fde\u3002\n- \u9009\u62e9 $v$\uff0c\u5c06 $a_u, f_v$ \u540c\u65f6\u51cf\u53bb $1$\uff0c\u5e76\u5c06\u603b\u4ee3\u4ef7 $b_u$ \u51cf\u5c11 $1$\uff0c\u8868\u793a\u5c06 $u$ \u548c\u4e00\u6761\u4ee5 $v$ \u4e3a\u7aef\u70b9\u7684\u94fe\u76f8\u8fde\u3002\n\n\u4e0d\u59a8\u5148\u6267\u884c\u6240\u6709\u64cd\u4f5c 1\uff0c\u518d\u6267\u884c\u6240\u6709\u64cd\u4f5c 2\u3002\u8bbe $S$ \u4e3a\u5f53\u524d $\\sum f_v$\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5bb9\u6613\u8bc1\u660e\u7684\u89c2\u5bdf\uff1a\n\n- $f_u$ \u7b49\u4e8e $a_u$ \u51cf\u53bb\u64cd\u4f5c 1 \u6267\u884c\u6b21\u6570\u3002\n- \u64cd\u4f5c 1 \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u64cd\u4f5c 2 \u6267\u884c\u7684\u6700\u5927\u6b21\u6570\u4e3a $\\min(a_u, S)$\u3002\n- \u6839\u636e\u6469\u5c14\u6295\u7968\u6cd5\u548c\u7ecf\u5178\u7ed3\u8bba\uff0c\u64cd\u4f5c 1 \u6267\u884c\u7684\u6700\u5927\u6b21\u6570\u4e3a $Q = \\min(a_u, \\lfloor \\frac S 2 \\rfloor, S - \\max f_v)$\u3002\n\n\u7ed3\u5408\u89c2\u5bdf 1 \u4e0e\u89c2\u5bdf 2\uff0c\u56e0\u4e3a\u64cd\u4f5c 1 \u4f7f\u5f97 $a_u$ \u51cf\u5c11 $1$\uff0c$S$ \u51cf\u5c11 $2$\uff0c\u56e0\u6b64\u5f53 $S \\leq a_u$ \u65f6\uff0c\u4e00\u6b21\u64cd\u4f5c 1 \u5c06\u51cf\u5c11\u4e24\u6b21\u64cd\u4f5c 2\uff0c\u5c3d\u7ba1\u603b\u4ee3\u4ef7\u51cf\u5c0f\u7684\u503c\u76f8\u540c\uff0c\u4f46\u64cd\u4f5c 1 \u6267\u884c\u6b21\u6570\u589e\u52a0\uff0c\u8fdd\u80cc\u4e86\u6700\u5927\u5316 $f_u$ \u7684\u76ee\u6807\u3002\u5426\u5219 $S > a_u$\uff0c\u4e00\u6b21\u64cd\u4f5c 1 \u4ec5\u51cf\u5c11\u4e00\u6b21\u64cd\u4f5c 2\uff0c\u603b\u4ee3\u4ef7\u51cf\u5c0f\u7684\u503c\u589e\u52a0\u4e86\uff0c\u66f4\u4f18\u3002\n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5f97\u51fa\u64cd\u4f5c 1 \u6267\u884c\u6b21\u6570 $P = \\min(Q, \\max(0, S - a_u))$\uff0c\u7ee7\u800c\u5f97\u5230 $f_u = a_u - P$\uff0c$b_u = a_u + \\sum b_v - 2P - \\min(f_u, S - 2P)$\uff0c\u6ce8\u610f\u8fd9\u91cc $S$ \u4e3a\u521d\u59cb $\\sum f_v$\u3002\n\n\u5bf9\u4e0a\u8ff0\u8fc7\u7a0b\u5e94\u7528\u4e4b\u524d\u7684\u7ed3\u8bba\uff0c\u56e0\u4e3a $f_v$ \u6bcf\u589e\u52a0 $1$\uff0c$b_v$ \u90fd\u81f3\u5c11\u589e\u52a0 $1$\uff0c\u4f46\u89c2\u5bdf $P$ \u7684\u8ba1\u7b97\u5f0f\uff0c\u5176\u663e\u7136\u6700\u591a\u53ea\u80fd\u8ba9 $P$ \u589e\u52a0 $1$\uff0c\u56e0\u6b64 $b_u$ \u4e0d\u4f1a\u53d8\u5c0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u589e\u52a0\u4ee3\u4ef7\u4ee5\u589e\u52a0\u4ee5 $i$ \u4e3a\u4e00\u7aef\u7684\u5411\u4e0a\u4f20\u9012\u7684\u94fe\u6570\u4e0d\u4f7f\u5f97\u7b54\u6848\u53d8\u4f18\u3002\n\n\u90a3\u4e48\u5982\u4f55\u8bc1\u660e\u8fd9\u4e00\u7ed3\u8bba\u5462\uff1f\u4e5f\u5f88\u5bb9\u6613\uff1a$f_u$ \u52a0 1 \u8bf4\u660e\u64cd\u4f5c 1 \u6267\u884c\u6b21\u6570\u51cf\u5c11 1\uff0c\u53ea\u9700\u5bf9 **\u6c42\u89e3 $f_u$ \u65f6** \u64cd\u4f5c 1 \u6267\u884c\u7684\u6700\u7ec8\u6001\u8bf4\u660e\u6bcf\u64a4\u9500\u4e00\u6b21\u64cd\u4f5c 1 \u5747\u4f7f\u5f97 $b_u$ \u589e\u5927\u5373\u53ef\uff1a\n\n- \u82e5 $a_u\\leq S$\uff0c\u6bcf\u64a4\u9500\u4e00\u6b21\u64cd\u4f5c 1 \u4f7f\u5f97 $\\min(a_u, S)$ \u5373\u64cd\u4f5c 2 \u6b21\u6570\u589e\u52a0 $1$\uff0c\u4f46 $b_u$ \u589e\u52a0 $2$\uff0c\u4e0d\u4f18\u3002\n- \u82e5 $a_u > S$\uff0c\u5fc5\u7136\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u4e00\u6b21\u64cd\u4f5c 1\uff0c\u5426\u5219\u64a4\u9500\u4e00\u6b21\u64cd\u4f5c 1 \u4f7f\u5f97 $b_u$ \u4e0d\u53d8\uff0c$f_u$ \u589e\u52a0 1\uff0c\u4e0e $f_u$ \u7684\u6700\u5927\u6027\u77db\u76fe\u3002\u56e0\u6b64 $f_u$ \u5df2\u7ecf\u53d6\u5230\u6700\u5927\u503c $a_u$\uff0c\u65e0\u6cd5\u589e\u5927\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nbool Mbe;\nconstexpr int mod = 1e9;\nconstexpr int N = 3e6 + 5;\nint seed;\nint Rand(int x) {\n  seed = (1ll * seed * 0x66CCF + 19260817) % x + 1;\n  seed = (1ll * seed * 0x77CCF + 20060428) % x + 1;\n  seed = (1ll * seed * 0x88CCF + 12345678) % x + 1;\n  seed = (1ll * seed * 0x33CCCCFF + 10086001) % x + 1;\n  return seed;\n}\nint cnt, hd[N], nxt[N], to[N];\nvoid add(int u, int v) {nxt[++cnt] = hd[u], hd[u] = cnt, to[cnt] = v;}\nint op, n, dn, a[N], id[N], fa[N];\nll f[N];\nvoid dfs(int x, int ff) {\n  fa[x] = ff, id[++dn] = x;\n  for(int i = hd[x]; i; i = nxt[i]) if(to[i] != ff) dfs(to[i], x);\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    freopen(\"1.in\", \"r\", stdin);\n    freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> op;\n  if(op == 1) {\n    cin >> n;\n    for(int i = 1; i <= n; i++) cin >> a[i];\n    for(int i = 1; i < n; i++) {\n      int u, v;\n      cin >> u >> v;\n      add(u, v), add(v, u);\n    }\n    dfs(1, 0);\n  }\n  else {\n    cin >> seed >> n;\n    for(int i = 1; i <= n; i++) a[i] = Rand(mod), id[i] = i;\n    for(int i = 2; i <= n; i++) add(fa[i] = Rand(i - 1), i);\n  }\n  ll ans = 0;\n  for(int _ = n; _; _--) {\n    int x = id[_];\n    ll sumf = 0, mxf = 0;\n    for(int i = hd[x]; i; i = nxt[i]) {\n      int y = to[i];\n      if(fa[x] == y) continue;\n      sumf += f[y], mxf = max(mxf, f[y]);\n    }\n    ans += a[x];\n    ll P = min((ll) a[x], min(sumf / 2, sumf - mxf));\n    P = min(P, max(0ll, sumf - a[x]));\n    f[x] = a[x] - P, ans -= 2 * P + min(f[x], sumf - 2 * P);\n  }\n  cout << ans << \"\\n\";\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/8/9\nAuthor: Alex_Wei\nstart coding at 10:45\nfinish debugging at 19:39\n*/\n```",
        "postTime": 1660116687,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P7246 \u624b\u52bf\u5bc6\u7801"
    }
]