[
    {
        "content": "\u6bd2\u6bd2\u9898\uff0c\u5bf9\u7740[\u5624\u6587\u9898\u89e3](http://usaco.org/current/data/sol_tracking2_platinum_jan19.html)\u770b\u4e86\u8d3c\u4e45\n\n\u9996\u5148\u8003\u8651\u6b64\u9898\u7684\u4e00\u4e2a\u5f31\u5316\u7248\u672c\uff1a\u5982\u679c\u8f93\u5165\u7684\u6240\u6709$c_i$\u76f8\u7b49\u600e\u4e48\u505a\n\n\u73b0\u5728\u5047\u8bbe\u6709$len$\u4e2a\u6570\uff0c\u53d6\u503c\u4ece$v$\u5230$10^9$\uff0c\u800c\u4e14\u6bcf\u8fde\u7eed$k$\u4e2a\u6570\u81f3\u5c11\u6709\u4e00\u4e2a\u662f$v$\n\n\u90a3\u4e48\u53d6\u503c\u5c31\u53ea\u6709$v$\u548c$>v$\u4e24\u79cd\u53d6\u503c\u4e86\uff0c$>v$\u7684\u53d6\u503c\u6709$10^9-v$\u79cd\uff0c\u8bbe\u4e3a$x$\n\n\u90a3\u4e48\u6709\u4e00\u4e2a\u663e\u7136\u7684dp\uff0c$f_i$\u8868\u793a\u8fd9\u4e2a\u95ee\u9898i\u4e2a\u6570\u7684\u7b54\u6848\n\n\u679a\u4e3e\u8fd9\u4e2a\u6570\u5217\u7684\u6700\u540e\u4e00\u4e2a\u53d6\u503c\u4e3a$v$\u7684\u6570\uff0c\u5047\u8bbe\u662f\u7b2c$j$\u4e2a\uff0c\u90a3\u4e48\u540e\u9762\u7684$i-j$\u4e2a\u6570\u6709$x$\u79cd\u9009\u6cd5\n\n$f_i=\\sum_{j=i-k+1}^{i}x^{i-j}f_{j-1}$\n\n\u8fd9\u4e2adp\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u8fd8\u6709\u4e00\u4e2adp\uff0c\u4e5f\u662f\u8bbe$f_i$\u8868\u793a\u8fd9\u4e2a\u95ee\u9898i\u4e2a\u6570\u7684\u7b54\u6848\n\n$f_i=(x+1)f_{i-1}-x^kf_{i-k-1}$\n\n\u7b2c$i$\u4e2a\u6570\u968f\u4fbf\u9009\uff0c\u4e58$i-1$\u4e2a\u6570\u7684\u7b54\u6848\uff0c\u8fd9\u65f6\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff0c\u5c31\u662f\u7b2c$i-k+1$\u4e2a\u6570\u5230\u7b2c$i$\u4e2a\u6570\u90fd$>v$\u5bfc\u81f4\u4e86\u4e0d\u5408\u6cd5\uff0c\u6240\u4ee5\u8981\u51cf\u6389\u8fd9\u4e9b\u60c5\u51b5\n\n\u4e3a\u4ec0\u4e48\u51cf\u6389\u7684\u662f$x^kf_{i-k-1}$\u5462\uff0c\u663e\u7136\u8fd9$k$\u4e2a\u6570\u7684\u653e\u6cd5\u5171$x^k$\u79cd\u6ca1\u6709\u95ee\u9898\uff0c\u8981\u6ce8\u610f\u4e00\u4e0b\u4ece\u7b2c$i-k+1$\u4e2a\u6570\u5230\u7b2c$i-1$\u4e2a\u6570\u90fd$>v$\uff0c\u90a3\u4e48\u53ea\u6709\u7b2c$i-k$\u4e2a\u6570\u53d6\u503c\u662f$v$\u624d\u80fd\u591f\u6ee1\u8db3\u6700\u5c0f\u503c\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u524d\u9762\u7684\u53d6\u503c\u65b9\u6848\u6570\u662f$f_{i-k-1}$\n\n```cpp\nil int solve(int v,int len){\n\tint x=1000000000-v,xk=pow(x,k);\n\tf[0]=f[1]=1;\n\tfor(int i=2;i<=len+1;++i){\n\t\tf[i]=1ll*(x+1)*f[i-1]%mod;\n\t\tif(i-k-1>=0)f[i]=(f[i]-1ll*xk*f[i-k-1]%mod+mod)%mod;\n\t}\n\treturn f[len+1];\n}\n```\n\n\u90a3\u4e48\u89e3\u51b3\u4e86\u524d\u9762\u7684\u95ee\u9898\uff0c\u540e\u9762\u7684\u4e5f\u5f88\u597d\u529e\n\n\u8bbe$s(v,len)$\u8868\u793a\u73b0\u5728\u5047\u8bbe\u6709$len$\u4e2a\u6570\uff0c\u53d6\u503c\u4ece$v$\u5230$10^9$\uff0c\u800c\u4e14\u6bcf\u8fde\u7eed$k$\u4e2a\u6570\u81f3\u5c11\u6709\u4e00\u4e2a\u662f$v$\u95ee\u9898\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u5728$O(len)$\u65f6\u95f4\u5185\u7403\u89e3\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u5c06\u4e00\u6bb5\u76f8\u7b49\u7684$c$\u5408\u5e76\u8d77\u6765\n\n\u7136\u540e\uff08\u5f00\u59cb\u53e3\u80e1\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6bb5$c_i=\\cdots=c_j$\uff0c\u5982\u679c\u53ea\u6709\u8fd9\u4e00\u6bb5\uff0c\u65b9\u6848\u6570\u4e3a$s(c_i,j-i+k)$\n\n\u5982\u679c\u6709\u4e00\u4e2a$c_{i-1}>c_i$\n\n\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\u7684\u662f\n\n$\\min\\{a_{i-1},\\cdots,a_{i+k-2}\\}=c_{i-1}$\n\n\u8fd9\u91cc\u53ef\u4ee5\u63a8\u51fa$a_{i-1},\\cdots,a_{i+k-2}\\geq c_{i-1}$\n\n$\\min\\{a_{i},\\cdots,a_{i+k-1}\\}=c_{i}$\n\n\u524d\u9762\u5df2\u7ecf\u63a8\u51fa$a_{i},\\cdots,a_{i+k-2}\\geq c_{i-1}>c_{i}$\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e9b\u90fd\u4e0d\u53ef\u80fd\u662f\u6700\u5c0f\u503c\n\n\u8fd9\u4e00\u6bb5\u7684\u6700\u5c0f\u503c\u53ea\u80fd\u6709\u4e00\u4e2a\u5c31\u662f$a_{i+k-1}=c_{i}$\n\n\u524d\u9762\u7684\u6570\u4e5f\u90fd\u5728\u524d\u4e00\u6bb5\u7684\u8303\u56f4\u5185\n\n\u6240\u4ee5\u8fd9\u4e00\u6bb5\u6700\u524d\u9762$k$\u4e2a\u6570\u5c31\u6ca1\u4e86\uff0c\u5176\u4e2d\u524d$k-1$\u4e2a\u6570\u4f1a\u5728\u524d\u9762\u6bb5\u8ba1\u7b97\u7b54\u6848\uff0c\u7b2c$k$\u4e2a\u6570\u53ea\u6709\u4e00\u4e2a\u53d6\u503c$c_i$\n\n\u5bf9\u4e8e\u540e\u9762\u4e5f\u540c\u7406\uff0c\u5982\u679c$c_{j+1}>c_j$\u5219\u540e\u9762$k$\u4e2a\u6570\u6ca1\u4e86\n\n\u6240\u4ee5\u4e00\u6bb5\u7684len\u5b9e\u9645\u4e0a\u662f$j-i+k$\u51cf\u53bb0\u52302\u4e2a$k$\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u6bb5\u4f9d\u6b21\u7403\u89e3\u6700\u540e\u65b9\u6848\u6570\u4e58\u8d77\u6765\u5373\u53ef\n\n\u4ee3\u7801\u6781\u4e3a\u7b80\u5355\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define vd void\n#define mod 1000000007\ntypedef long long ll;\nil ll gi(){\n\tll x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint n,k;\nint a[100010];\nint f[100010];\nil int pow(int x,int y){\n\tint ret=1;\n\twhile(y){\n\t\tif(y&1)ret=1ll*ret*x%mod;\n\t\tx=1ll*x*x%mod;y>>=1;\n\t}\n\treturn ret;\n}\nil int solve(int v,int len){\n\tint x=1000000000-v,xk=pow(x,k);\n\tf[0]=f[1]=1;\n\tfor(int i=2;i<=len+1;++i){\n\t\tf[i]=1ll*(x+1)*f[i-1]%mod;\n\t\tif(i-k-1>=0)f[i]=(f[i]-1ll*xk*f[i-k-1]%mod+mod)%mod;\n\t}\n\treturn f[len+1];\n}\nint main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n#endif\n\tn=gi(),k=gi();\n\tfor(int i=1;i<=n-k+1;++i)a[i]=gi();\n\tint ans=1,len;\n\tfor(int i=1,j;i<=n-k+1;i=j+1){\n\t\tj=i;\n\t\twhile(a[j+1]==a[i])++j;\n\t\tlen=j-i+k;\n\t\tif(i!=1&&a[i-1]>a[i])len-=k;\n\t\tif(j!=n-k+1&&a[j+1]>a[i])len-=k;\n\t\tif(len>0)ans=1ll*ans*solve(a[i],len)%mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1551256705,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5204 \u3010[USACO19JAN]Train Tracking 2\u3011"
    },
    {
        "content": "\u8fdc\u7a0borz ywy\u8d85\u5f3a\u7684\u770b\u4e0d\u61c2\u7684\u505a\u6cd5\u3002\n\n\u5514\uff0c\u770b\u4e86\u9898\u89e3\u4e4b\u540e\u611f\u89c9\u505a\u6cd5\u975e\u5e38\u5de7\u5999\uff0c\u76f4\u89c2\uff0c\u8ba8\u8bba\u7684\u60c5\u51b5\u975e\u5e38\u5c11\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u8981\u628a\u76f8\u540c\u7684\u4e00\u6bb5\u4e00\u8d77\u8003\u8651\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u4e00\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u503c\u3002\n\n\u6211\u4eec\u627e\u5230\u6781\u957f\u7684\uff0c$c[i]=c[j]$\u7684\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u521d\u59cb\u957f\u5ea6\u662f$j+k-i$\u3002\u7136\u540e\u8003\u8651\u5de6\u53f3\u76f8\u90bb\u7684\u533a\u95f4\uff0c\u4ee5i-1\u4e3a\u4f8b\uff0c\u82e5$c[i-1]>c[i]$\uff0c\u90a3\u4e48\u53ef\u77e5$a[i+k-1]=c[i]$\uff0c\u540c\u65f6$c[i...i+k-1]$\u7684\u8981\u6c42\u90fd\u6ee1\u8db3\u4e86\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u8003\u8651\u7684\u5b9e\u9645\u533a\u95f4\u7684\u957f\u5ea6\u7f29\u77ed\u4e86k\uff1b\u53f3\u8fb9\u540c\u7406\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u90e8\u5206\u7684\u65b9\u6848\u6570\u4f1a\u5728$c[i-1]$\u90a3\u4e00\u6bb5\u88ab\u8003\u8651\u5230\u3002\n\n\u63a5\u4e0b\u6765\u662f\u5982\u4f55\u8ba1\u7b97$s(len,v)$\u8868\u793a\u957f\u5ea6\u4e3alen\u7684\u533a\u95f4\uff0c\u6bcfK\u4e2a\u7684\u6700\u5c0f\u503c\u90fd=v\u7684\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u8bbe$f[i]$\u8868\u793a\u4e4b\u524d\u90fd\u6ee1\u8db3\u6761\u4ef6\uff0c\u4e14$a[i]=v$\u7684\u65b9\u6848\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u524d\u4e00\u4e2a=v\u7684\u4f4d\u7f6e\u6765\u8ba1\u7b97\u7b54\u6848\u3002\u6709\u4e24\u79cd\u5217\u9012\u63a8\u5f0f\u7684\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u66b4\u529b\u9519\u4f4d\u76f8\u51cf\uff1b\u4e00\u79cd\u662f\uff1a\n\n$f[i]=(p+1)f[i-1]-p^kf[i-k-1],p=10^9-x$\n\n\u524d\u8fb9\u662fi-1\u968f\u4fbf\u9009\u7684\u65b9\u6848\u3002\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u4e00\u5b9a\u662f$[i-k,i-1]$\u586b\u7684\u90fd$>v$\uff0c\u51cf\u53bb\u5373\u53ef\u3002\n\n\u6700\u540e\u7684\u65b9\u6848\u6570\u4e3a$f[len+1]$\uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u5f3a\u5236\u6700\u540e\u591a\u51fa\u6765\u7684\u4f4d\u7f6e\u586bv\u3002\n\n```cpp\n#define N 100005\nint n,K;\nint f[N];\nint calc(int len,int v)\n{\n\tint x=1000000000-v,xk=qpow(x,K);\n\tf[0]=f[1]=1;\n\tfor(ri i=2; i<=len+1; ++i)\n\t{\n\t\tf[i]=mul(f[i-1],x+1);\n\t\tif(i-K-1>=0) dec(f[i],mul(f[i-K-1],xk));\n\t}\n\treturn f[len+1];\n}\nint c[N];\nsigned main()\n{\n#ifdef M207\n\tfreopen(\"in.in\",\"r\",stdin);\n\t// freopen(\"ot.out\",\"w\",stdout);\n#endif\n\tin(n,K);\n\tfor(ri i=1; i<=n-K+1; ++i) in(c[i]);\n\tLL ans=1;\n\tfor(ri i=1,j; i<=n-K+1; i=j+1)\n\t{\n\t\tj=i;\n\t\twhile(c[j+1]==c[i]) ++j;\n\t\tint len=j+K-i;\n\t\tif(i>1&&c[i-1]>c[i]) len-=K;\n\t\tif(j<n-K+1&&c[j+1]>c[j]) len-=K;\n\t\tif(len>0) ans=mul(ans,calc(len,c[i]));\n\t}\n\tout(ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1555673762,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u8ba1\u6570DP-P5204 [USACO19JAN]Train Tracking 2-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u8fd9\u9053\u9898\u597d\u795e\u4ed9\u554a...\n\u7b80\u8981\u9898\u610f:\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6570\u5217 $a$ \u7684 $n-k+1$ \u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u533a\u95f4\u7684\u6700\u5c0f\u503c $c_i$, \u5373 $c_x=\\min_{i=x}^{i\\leq x+k-1}\na_i$, \u6c42\u6709\u51e0\u79cd\u6ee1\u8db3\u7ed9\u51fa $c$ \u5e8f\u5217\u7684 $a$ \u5e8f\u5217.\n\n\u62ff\u5230\u8fd9\u9053\u9898\u4e0d\u4f1a\u505a,\u548b\u529e? \u5148\u4ece\u7b80\u5355\u7684\u60c5\u51b5\u6765\u8003\u8651. \n\u52a0\u5165\u7ed9\u51fa\u7684 $c$ \u5e8f\u5217\u4e2d\u6bcf\u4e2a $c$ \u90fd\u76f8\u7b49,\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u7528\u4e00\u4e2adp\u53bb\u505a.\n\n\u65e2\u7136\u6bcf\u4e2a\u6570\u90fd\u4e3a $c$ , \u90a3\u4e48 $a$ \u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u503c\u80af\u5b9a\u4e5f\u90fd\u662f $\\geq c$ \u7684.\n\n\u8bbe $>c$ \u7684\u6570\u7684\u4e2a\u6570\u4e3a $x$, \u90a3\u4e48\u6709 $x=10^9-c$.\n\n\u539f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5728\u6570\u5217\u4e0a\u586b\u6570,\u6bcf\u8fde\u7eed\u7684 $k$ \u683c\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u662f $c$ \u7684\u65b9\u6848\u6570.\n\n\u5b9a\u4e49\u72b6\u6001 $f_i$ \u4e3a\u5e8f\u5217\u957f\u5ea6\u4e3a $i$ ,\u7b2c $i$ \u4e2a\u6570\u5fc5\u987b\u521a\u597d\u7b49\u4e8e $c$ \u7684\u5408\u6cd5\u65b9\u6848\u6570,\u90a3\u4e48\u6211\u4eec\u6709:\n$$f_i=\\sum_{j=1}^{j\\leq k}x^{j-1}*f_{i-j}$$\n$j$ \u5373\u4e3a\u679a\u4e3e\u5f53\u524d\u7684 $c$ \u4e0e\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684 $c$ \u7684\u8ddd\u79bb.$j\\leq k$ \u662f\u56e0\u4e3a\u5982\u679c\u8ddd\u79bb\u8d85\u8fc7 $k$ \u683c,\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u6bb5\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u4e0d\u7b49\u4e8e $c$ .\n\n$x^{j-1}$ \u5373\u4e2d\u95f4\u7a7a\u51fa\u6765\u7684 $j$ \u4e2a\u683c\u5b50\u4e0d\u80fd\u521a\u597d\u586b $c$ \u7684\u603b\u586b\u6cd5\u6570.\n\n\u8fd9\u6837\u662f $O(nk)$, \u7ecf\u8fc7\u89c2\u5bdf,\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u8ba1\u7b97\u5f0f\u5b50\u957f\u5f97\u5f88\u50cf\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217. \u90a3\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e9b\u9a9a\u64cd\u4f5c:\n$$x*f_i=\\sum_{j=1}^{j\\leq k}x^j*f_{i-j}$$\n$$f_{i+1}=\\sum_{j=1}^{j\\leq k}x^j*f_{i-j+1}$$\n\u5bb9\u6613\u53d1\u73b0,\u8fd9\u4e24\u4e2a\u548c\u5f0f\u4e2d\u6709\u5f88\u591a\u91cd\u590d\u7684\u4e1c\u897f,\u628a\u4ed6\u4eec\u76f8\u51cf\u62b5\u6d88\u6389,\u5c31\u53ef\u4ee5\u5f97\u5230:\n$$f_{i+1}-x*f_i=f_i-x^k*f_{i-k}$$\n$$f_{i+1}=(x+1)*f_i-x^k*f_{i-k}$$\n\u597d\u7684,\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2a $O(n)$ \u7684\u8ba1\u7b97\u65b9\u6cd5\u4e86.\u8003\u8651\u5982\u4f55\u63a8\u5e7f\u5230\u539f\u95ee\u9898.\n\n\u5bf9\u4e8e $c$ \u5e8f\u5217\u4e2d\u4e00\u6bb5\u8fde\u7eed\u4e00\u6837\u7684\u6570\u5b57,\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u4eec\u5408\u5e76\u5728\u4e00\u8d77.\n\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u8fde\u7eed\u6bb5 $c_i=c_i+1=\\dots=c_{len}$, \u5047\u8bbe $c_{i-1}>c_i$, \u90a3\u4e48\u5c31\u53ef\u4ee5\u6709:\n$$\\min(a_{i-1},a_i,a_{i+1},\\dots,a_{i+k-2})=c_{i-1}$$\n$$\\min(a_i,a_{i+1},a_{i+2},\\dots,a_{i+k-1})=c_i$$\n\u53ef\u4ee5\u53d1\u73b0,\u5728\u591a\u4e86 $a_{i+k-1}$ \u8fd9\u4e2a\u6570\u4e4b\u540e,\u6700\u5c0f\u503c\u4ece $c_{i-1}$ \u53d8\u4e3a\u4e86 $c_i$, \u800c $c_{i-1}>c_i$, \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230 $a_{i+k-1}=c$. \u800c $[i,i+k-2]$ \u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6570\u56e0\u4e3a\u6709\u4e86 $a_{i+k-1}=c$, \u6240\u4ee5\u5e76\u4e0d\u7528\u53bb\u8003\u8651 $c_i$ \u8fd9\u4e2a\u9650\u5236,\u53ea\u9700\u8981\u8003\u8651\u4e4b\u524d\u7684 $c_{i-1}$ \u7684\u9650\u5236\u5c31\u597d\u4e86.\n\n\u8fd9\u6837,\u6211\u4eec\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u957f\u5ea6\u4e3a $len$.  \u7684\u5e8f\u5217\u7684\u524d $k$ \u4e2a\u6570\u7ed9\u6316\u6389\u4e86.(\u524d $k-1$ \u4e2a\u4f1a\u5728\u4e4b\u524d\u8003\u8651, \u7b2c $k$ \u4e2a\u5df2\u7ecf\u786e\u5b9a)\n\n\u90a3\u4e48\u5bf9\u4e8e $c_{len}<c_{len+1}$ \u7684\u60c5\u51b5\u4e5f\u662f\u8fd9\u6837\u7684,\u76f8\u5f53\u4e8e\u4ece\u672b\u5c3e\u6316\u6389 $k$ \u4e2a\u6570\u5b57. \n\n\u6316\u6389\u8fd9\u4e9b\u6570\u5b57\u4e4b\u540e,\u6bcf\u4e00\u6bb5\u76f8\u5bf9\u5c31\u662f\u72ec\u7acb\u7684\u4e86. \u90a3\u4e48\u7528\u4e0a\u9762\u7684dp\u7b97\u51fa\u7b54\u6848,\u7b80\u5355\u76f8\u4e58\u5373\u53ef.\n\n----------\n\u8d34\u4e0a\u4ee3\u7801(\u53c2\u8003\u4e86xzz\u5927\u4f6c\u7684\u5199\u6cd5)\n```\n#include<cstdio>\n#include<cstdlib>\n#define mod 1000000007\n#define maxn 200005\n#define LIM 1000000000\nusing namespace std;\nint add(int x,int y){x+=y;return x>=mod?x-mod:x;}\nint sub(int x,int y){x-=y;return x<0?x+mod:x;} \nint mul(int x,int y){return 1ll*x*y%mod;}\nint ksm(int a,int b)\n{\n\tint s=1;\n\tfor(;b;a=mul(a,a),b>>=1)\n\t\tif(b&1) s=mul(s,a);\n\treturn s;\n}\nint f[maxn],a[maxn],n,k;\nint Solve(int len,int v)\n{\n\tf[0]=1,f[1]=1; int pw=ksm(LIM-v,k);\n\tfor(int i=2;i<=len+1;i++)\n\t{\n\t\tf[i]=mul(LIM-v+1,f[i-1]);\n\t\tif(i-k-1>=0) f[i]=sub(f[i],mul(pw,f[i-k-1]));\n\t}\n\treturn f[len+1];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n-k+1;i++) scanf(\"%d\",&a[i]);\n\tint ans=1;\n\tfor(int i=1,j=1;i<=n-k+1;i=j+1)\n\t{\n\t\tfor(j=i;a[i]==a[j]&&j<=n-k+1;j++);\n\t\tj--; int len=j-i+k;\n\t\tif(i>1&&a[i-1]>a[i]) len-=k;\n\t\tif(j<n-k+1&&a[j+1]>a[j]) len-=k;\n\t\tif(len>0) ans=mul(ans,Solve(len,a[i])); \n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1551604597,
        "uid": 20815,
        "name": "PhantasmDragon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5204 \u3010[USACO19JAN]Train Tracking 2\u3011"
    },
    {
        "content": "### \u8f6c\u8f7d\u81eaUSACO\u5b98\u65b9\u9898\u89e3\n\n~~\u53ef\u4ee5\u5f53\u6210\u9605\u8bfb\u7406\u89e3\u505aQwQ~~\n\n(Analysis by Franklyn Wang)\nFirst, a bit of notation. Given a sequence $a_1, a_2, \\ldots a_n$ (little $n$, not the whole sequence $N$), call the sliding window minimums the sequence of length $\\max(0, n - K + 1)$ given by\n\n$$ \\{\\min(a_1, a_2, \\ldots , a_K), \\min(a_2, a_3, \\ldots , a_{K+1}), \\ldots \\min(a_{n - K + 1}, a_{n - K + 2}, \\ldots , a_n) \\} $$\nWhen approaching a question like this, it is often helpful to consider simpler cases. We now consider the following problem: how many ways are there to obtain sliding window minimums of\n\n$$\\underbrace{v, v, \\ldots, v}_{N - K + 1 \\text{ times }}?$$\nLet $MX = 10^9$, and let $x = MX - v$. Let $DP[u]$ be the number of length $u$ sequences with sliding window minimums equal to $v$ that end with $v$. Then by casework on the rightmost element equal to $v$, we get\n\n$$DP[v] = DP[v-1] + xDP[v-2] + \\ldots + x^{K - 1}DP[v - K].$$\nNote here that $x$ represents the number of values that are strictly larger than $v$. While this yields a direct $O(NK)$ solution, we can do better: observe that\n$$DP[v+1] = DP[v] + x(DP[v] - x^{K - 1}DP[v - K]).$$\nThis recurrence yields an $O(N)$ solution. Let $c(mn, v)$ be the number of sequences of length $v$ with sliding window minima all equal to $v$.\n\nNow that we've done the simple case, let's consider the problem in general. Assume that two adjacent values of the sliding window minimums are different, and that without loss of generality the left one is larger than the right one, that is,\n\n$$a = \\min(a_i, a_{i + 1}, \\ldots , a_{i + K - 1}) > \\min(a_{i+1}, a_{i+2}, \\ldots , a_{i + K}) = b$$\nSince $a = \\min(a_i, a_{i + 1}, \\ldots , a_{i + K - 1}) \\le \\min(a_{i + 1}, a_{i + 2}, \\ldots , a_{i + K - 1})$, this means that $a_{i + K} = b$.\nThis indicates that when we have two adjacent sliding window minima that are different, we can immediately conclude the value of some element. This observation leads to the idea of representing the sliding window minima as a sequence $(\\text{value}, \\text{count})$ pairs. For example, $(5, 3, 3, 3, 3, 2) \\mapsto ((5, 1), (3, 4), (2, 1))$.\n\nThe next step is perhaps best explained with an example. Take $K = 2$, and assume that the sliding window minima are $(2, 2, 2, 3, 3, 3, 1, 1)$. Then, by the above observation the sequence must be of the form $(a, b, 2, c, d, e, f, 1, g)$. Now, the sequence $c, d, e, f$ must have sliding window minima all threes, the sequence $a, b$ must have sliding window minima all twos, and the sequence $g$ must have sliding window minima all $1$s. Therefore, to count the number of possible sequences, it suffices to find $c(3, 4) \\times c(2, 2) \\times c(1, 1)$.\n\nIf we change the sequence, things are slightly different, but we can find formulas corresponding to the len's which are written below. Two points are tricky. One is the ends, and the other is that ranges which are surrounded by two larger ranges are a bit subtle.\n\nMy solution is below:\n```cpp\n#include <bits/stdc++.h>\n \nusing namespace std;\n \ntypedef pair<int, int> pi;\ntypedef long long ll;\ntypedef vector<int> vi;\n#define mp make_pair\n#define sz(x) (int)x.size()\n#define pb push_back\n#define f first\n#define s second\n \nconst int MOD = 1000000007;\nconst int MX = 1000000000;\n \nint ad(int a, int b, int mod = MOD) { return (a+b)%mod; }\nint sub(int a, int b, int mod = MOD) { return (a-b+mod)%mod; }\nint mul(int a, int b, int mod = MOD) { return ((ll)a*b)%mod; }\nint AD(int& a, int b, int mod = MOD) { return a = ad(a,b,mod); }\nint SUB(int& a, int b, int mod = MOD) { return a = sub(a,b,mod); }\nint MUL(int& a, int b, int mod = MOD) { return a = mul(a,b,mod); }\n \n \nint countseq(int mnval, int K, int len){\n  //count the number of sequences of length len such that every group of K has minimum mnval.\n  int succ = MX - mnval;\n  int DP[len + 2];\n  int pows[K + 1];\n  int powslow[K + 1];\n  pows[0] = 1;\n  powslow[0] = 1;\n  for (int i = 1; i <= K; i++){\n    pows[i] = mul(pows[i - 1], succ + 1);\n    powslow[i] = mul(powslow[i - 1], succ);\n  }\n  DP[0] = 1;\n  DP[1] = 1;\n  for (int i = 2; i <= min(K, len); i++){\n    //values for DP[i]. \n    DP[i] = pows[i - 1];\n  }\n  if (len < K){\n    return pows[len];\n  }\n  for (int i = K; i <= len; i++){\n      DP[i + 1] = DP[i];\n      SUB(DP[i + 1], mul(DP[i - K], powslow[K - 1]));\n      MUL(DP[i + 1], succ);\n      AD(DP[i + 1], DP[i]);\n  }\n  return DP[len + 1];\n}\n \nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    int N, K; cin >> N >> K;\n    vi in(N - K + 1);\n    for (int i = 0; i < N - K + 1; i++){\n      cin >> in[i];\n    }\n    //create (value, cnt) pairs. \n    vector<pi> comp;\n    int cur = -1;\n    int cnt = 0;\n    for (int i = 0; i < N - K + 1; i++){\n      if (cur == in[i]){\n        ++cnt;\n      }\n      else{\n        if (cnt) comp.pb(mp(cur, cnt));\n        cur = in[i];\n        cnt = 1;\n      }\n    }\n    comp.pb(mp(cur, cnt));\n    if (comp.size() == 1){\n      //this case is special, so let's lay it rest right here. \n      cout << countseq(comp[0].f, K, N) << endl;\n    }\n    else{\n        int res = 1;\n        for (int i = 0; i < sz(comp); i++){\n          int a = comp[i].f;\n          int len;\n          if (i == 0){\n            if (comp[1].f > comp[0].f){\n              len = comp[0].s - 1;\n            }\n            else{\n              len = comp[0].s + K - 1;\n            }\n          }\n          else if (i == sz(comp) - 1){\n            if (comp[i - 1].f > comp[i].f){\n              len = comp[i].s - 1;\n            }\n            else{\n              len = comp[i].s + K - 1;\n            }\n          }\n          else{\n            if (comp[i - 1].f > comp[i].f){\n              if (comp[i + 1].f > comp[i].f){\n                //tricky! \n                len = max(0, comp[i].s - K - 1);\n              }\n              else{\n                len = comp[i].s - 1;\n              }\n            }\n            else{\n              if (comp[i + 1].f > comp[i].f){\n                len = comp[i].s - 1;\n              }\n              else{\n                len = comp[i].s + K - 1;\n              }\n            }\n          }\n          MUL(res, countseq(a, K, len));\n        }\n        cout << res << endl;\n    }\n}\n```\n",
        "postTime": 1569035373,
        "uid": 48993,
        "name": "liuyifan",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P5204"
    },
    {
        "content": "\u600e\u4e48\u6ca1\u6709\u4eba\u7528\u6211\u8fd9\u4e2a\u795e\u79d8\u505a\u6cd5\u554a.jpg\n\n\u6700\u5c0f\u503c\u770b\u7740\u6709\u70b9\u602a\uff0c\u5148\u8f6c\u5316\u6210\u6700\u5927\u503c\u5427\u3002\u3002\u3002\u53cd\u6b63\u6ca1\u5565\u533a\u522b\u3002\u3002\u3002\n\n\u8003\u8651\u628a\u6700\u5927\u503c\u76f8\u540c\u7684\u533a\u95f4\u548c\u9650\u5236\u4e3a\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u533a\u95f4\u90fd\u62ff\u51fa\u6765\u3002\u7136\u540e\u79bb\u6563\u5316\u3002\u95ee\u9898\u53d8\u4e3a\u8ba9\u6240\u6709\u533a\u95f4\u90fd\u6ee1\u8db3\u6700\u503c\u4e3a $c$\u3002\n\n\u8003\u8651 DP\u3002\u8bbe $dp[n][k]$ \u8868\u793a\u5230\u5e8f\u5217\u4e0a\u7684\u7b2c $n$ \u4e2a\u4f4d\u7f6e\u540e\uff0c\u4e0a\u4e00\u4e2a $c$ \u5728\u7b2c $k$ \u4e2a\u4f4d\u7f6e\u3002\n\n\u8bbe $L[n]$ \u8868\u793a\u53f3\u7aef\u70b9\u4e3a $n$ \u7684\u533a\u95f4\u4e2d\uff0c\u5de6\u7aef\u70b9\u6700\u9760\u53f3\u7684\u90a3\u4e2a\u7684\u5de6\u7aef\u70b9\u3002\u5982\u679c\u6ca1\u6709\u5c31\u4e3a $0$\u3002\n\n\u8f6c\u79fb\uff1a\n$$dp[n][k]=[L[n]\\leq k]dp[n-1][k]\\times(c-1)$$\n$$dp[n][n]=\\sum_{i=1}^{n-1}dp[n-1][k]$$\n\u53ef\u4ee5\u76f4\u63a5\u4ee4 $dp[n]$ \u7ee7\u627f $dp[n-1]$\uff0c\u7136\u540e\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a\u6709\u503c\u7684\u533a\u95f4\u3002\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u53ea\u9700\u8981\u652f\u6301\u5168\u5c40\u4e58\u548c\u5355\u70b9\u52a0\u5c31\u884c\u4e86\u3002\n\n\u53ef\u4ee5\u901a\u8fc7\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u5c06\u590d\u6742\u5ea6\u964d\u4f4e\u81f3\u671f\u671b $O(n)$\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n```cpp\n#include<cstdlib>\n#include<cstdio>\n#include<vector>\n#include<ctime>\ntypedef unsigned ui;\ntypedef __uint128_t LL;\ntypedef unsigned long long ull;\nconst ui M=1e5+5,mod=1e9+7;\nui n,k,c[M],V[M],iV[M],cl[M];std::vector<ui>t[M],Q[M];\nstruct Hash_Table{\n\tconst ui P[20]={\n\t\t110881,581551,319477,140869,307759,536729,791159,503851,614693,375127,\n\t\t450299,263429,300761,796303,397373,732731,847009,913687,435401,665201\n\t};\n\tui mod;ull B;\n\tui cnt,h[1000000];\n\tstruct Node{\n\t\tui V,nx;\n\t}t[M];\n\tinline void init(){\n\t\tui id=rand()%20;\n\t\tmod=P[id];B=((LL(1)<<64)+mod-1)/mod;\n\t}\n\tinline ui Find(const ui&x){\n\t\tfor(ui E=h[x-mod*ui(LL(B)*x>>64)];E;E=t[E].nx)if(t[E].V==x)return E;return-1;\n\t}\n\tinline void Insert(const ui&x){\n\t\tui&head=h[x-mod*ui(LL(B)*x>>64)];t[++cnt]=(Node){x,head};head=cnt;\n\t}\n}Hash;\nui L(1),R(0),q[M];\ninline ui max(const ui&a,const ui&b){\n\treturn a>b?a:b;\n}\ninline ui Solve(const ui&x){\n\tstatic ui L[M],q[M],p[M],dp[M],pre1[M],pre2[M];\n\tconst ui&v=V[x]-1,&iv=iV[x],&len=t[x].size();\n\tfor(ui id(1),i=0;i<Q[x].size();++i){\n\t\twhile(id<len&&t[x][id]<Q[x][i])++id;pre1[i]=id;\n\t}\n\tfor(ui id(1),i=0;i<Q[x].size();++i){\n\t\twhile(id<len&&t[x][id]<=Q[x][i]+k-1)++id;pre2[i]=id-1;\n\t}\n\tfor(ui i=0;i<len;++i)L[i]=q[i]=p[i]=0;\n\tfor(ui i=0;i<Q[x].size();++i)L[pre2[i]]=max(L[pre2[i]],pre1[i]);\n\tui l(0),sum(1),mul(1);dp[0]=1;\n\tfor(ui i=1;i<len;++i){\n\t\twhile(l<L[i-1]){\n\t\t\twhile(q[l]--)mul=1ull*mul*v%mod;while(p[l]--)mul=1ull*mul*iv%mod;\n\t\t\tsum=(sum+1ull*(mod-mul)*dp[l++])%mod;\n\t\t}\n\t\tdp[i]=sum;sum=(1ull*sum*v+dp[i])%mod;++q[L[i-1]];++p[i];\n\t}\n\twhile(l<L[len-1]){\n\t\twhile(q[l]--)mul=1ull*mul*v%mod;while(p[l]--)mul=1ull*mul*iv%mod;\n\t\tsum=(sum+1ull*(mod-mul)*dp[l++])%mod;\n\t}\n\treturn sum;\n}\ninline ui pow(ui a,ui b){\n\tui ans(1);for(;b;b>>=1,a=1ull*a*a%mod)if(b&1)ans=1ull*ans*a%mod;return ans;\n}\ninline void swap(ui&a,ui&b){\n\tui c=a;a=b;b=c;\n}\ninline void getinv(){\n\tstatic ui s[M],t[M];const ui&n=Hash.cnt;s[0]=1;\n\tfor(ui i=1;i<=n;++i)t[i]=V[i]-1,s[i]=1ull*s[i-1]*t[i]%mod;s[n]=pow(s[n],mod-2);\n\tfor(ui i=n;i>=1;--i)swap(s[i],s[i-1]),s[i]=1ull*s[i]*s[i-1]%mod,s[i-1]=1ull*s[i-1]*t[i]%mod;\n\tfor(ui i=1;i<=n;++i)iV[i]=s[i];\n}\nsigned main(){\n\tsrand(time(NULL));srand(rand()*rand());\n\tui ans(1);\n\tscanf(\"%u%u\",&n,&k);Hash.init();\n\tfor(ui i=1;i<=n-k+1;++i){\n\t\tscanf(\"%u\",c+i);c[i]=1000000000-c[i]+1;\n\t\tcl[i]=Hash.Find(c[i]);\n\t\tif(!~cl[i])Hash.Insert(c[i]),V[Hash.cnt]=c[i],t[Hash.cnt].push_back(0),cl[i]=Hash.cnt;\n\t\tQ[cl[i]].push_back(i);\n\t}\n\tfor(ui i=1;i<=n;++i){\n\t\tif(L<=R&&q[L]+k<=i)++L;\n\t\tif(i+k-1<=n){\n\t\t\twhile(L<=R&&c[q[R]]>=c[i])--R;q[++R]=i;\n\t\t}\n\t\tt[cl[q[L]]].push_back(i);\n\t}\n\tgetinv();\n\tfor(ui i=1;i<=Hash.cnt;++i)ans=1ull*ans*Solve(i)%mod;printf(\"%u\",ans);\n}\n```",
        "postTime": 1646832139,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u6570+DP P5204\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u6709\u610f\u601d\u7684\u9898\u3002\n\n\u5982\u679c\u6240\u6709 $c_i$ \u90fd\u76f8\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528 dp \u7b80\u5355\u6c42\u89e3\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u628a\u8fde\u7eed\u7684\u76f8\u540c $c_i$ \u6240\u4ee3\u8868\u7684\u533a\u95f4\u770b\u4f5c\u4e00\u6574\u6bb5\u5904\u7406\u3002\u8bbe\u7b2c $i$ \u6bb5\u7684 $c$ \u503c\u4e3a $b_i$\uff0c\u7b2c $i$ \u6bb5\u5728 $c$ \u6570\u7ec4\u4e2d\u4ee3\u8868\u7684\u533a\u95f4\u4e3a\u4e3a $[L_i,R_i]$\u3002\u90a3\u4e48\u7b2c $i$ \u6bb5\u6240\u63a7\u5236\u7684 $a$ \u6570\u7ec4\u4e2d\u7684\u533a\u95f4\u4e3a $[L_i,R_i+k)$\u3002\u6b64\u65f6\u4e24\u6bb5\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u516c\u5171\u90e8\u5206\uff0c\u76f4\u63a5\u505a\u80af\u5b9a\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u663e\u7136\u5982\u679c $c_i<c_{i+1}$ \u90a3\u4e48 $a_i=c_i$\uff0c\u540c\u7406\u5982\u679c $c_i>c_{i+1}$ \u90a3\u4e48 $a_{i+k}=c_i$\u3002\n\n\u8003\u8651\u76f8\u90bb\u7684\u4e24\u6bb5\uff0c\u4e0d\u59a8\u8bbe $b_i<b_{i+1}$\u3002\u663e\u7136\u8fd9\u4e24\u6bb5\u7684\u516c\u5171\u90e8\u5206\u4e3a $[R_i+1,R_i+k)$\uff0c\u5e76\u4e14 $a_{R_i}=b_i$\u3002\n\n$b_i$ \u7684\u9650\u5236\u6761\u4ef6\uff1a\n\n- $\\forall i\\in[R_i+1,R_i+k),a_i\\ge b_i$\u3002\n\n$b_{i+1}$ \u7684\u9650\u5236\u6761\u4ef6\uff1a\n\n- $\\forall i\\in[R_i+1,R_i+k],a_i\\ge b_{i+1}$\u3002\n\n- $\\exists i\\in[R_i+1,R_i+k],a_i=b_{i+1}$\n\n\u7531\u4e8e $b_i<b_{i+1}$\uff0c\u5bf9\u4e8e $[R_i+1,R_i+k)$ \u8fd9\u6bb5\u533a\u95f4\u6765\u8bf4\uff0c**$b_{i+1}$ \u6240\u8d4b\u4e88\u7684\u9650\u5236\u6761\u4ef6\u4e25\u683c\u5f3a\u4e8e $b_i$ \u6240\u8d4b\u4e88\u7684\u9650\u5236\u6761\u4ef6**\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53ea\u5728\u7b2c $i+1$ \u6bb5\u4fdd\u7559 $[R_i+1,R_i+k)$\uff01\n\n\u5bf9\u4e8e $b_i>b_{i+1}$ \u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u7684\u64cd\u4f5c\u4e4b\u540e $[1,n]$ \u4e2d\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4f1a\u88ab\u552f\u4e00\u4e00\u4e2a\u6bb5\u8986\u76d6\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u8fdb\u884c dp\uff0c\u5e76\u628a\u7b54\u6848\u4e58\u8d77\u6765\u5373\u53ef\u3002\n\n\u6ce8\u610f\u56e0\u4e3a\u6b64\u65f6\u6709\u4e00\u4e9b\u4f4d\u7f6e\u88ab\u56fa\u5b9a\u4e86\uff0c\u6240\u4ee5\u67d0\u4e9b\u6bb5\u7684\u957f\u5ea6\u53ef\u80fd\u4f1a\u51cf\u5c11 $1$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100005\n#define MOD 1000000007\nconst int lim=1e9;\nint n,m,ans=1,a[N],b[N],cnt[N],pw[N],dp[N];\nint slv(int n,int w)\n{\n\tpw[0]=dp[0]=1;\n\tfor(int i=1;i<=n;++i) pw[i]=1ll*pw[i-1]*w%MOD;\n\tfor(int i=1,t=1;i<=n+1;++i)\n\t{\n\t\tif(i>m) t=(t-1ll*dp[i-m-1]*pw[m])%MOD;\n\t\tdp[i]=t;t=(1ll*t*w+dp[i])%MOD;\n\t}return dp[n+1];\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1,x;i<=n-m+1;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i]!=a[i-1]) b[++b[0]]=a[i],cnt[b[0]]=0;\n\t\t++cnt[b[0]];\n\t}cnt[b[0]]+=m-1;\n\tfor(int i=1;i<b[0];++i) if(b[i]<b[i+1]) --cnt[i];\n\t\telse cnt[i]+=m-1,cnt[i+1]-=m;\n\tfor(int i=1;i<=b[0];++i) if(cnt[i]>0)\n\t\tans=1ll*ans*slv(cnt[i],lim-b[i])%MOD;\n\tprintf(\"%d\\n\",(ans+MOD)%MOD);return 0;\n}\n```",
        "postTime": 1628680023,
        "uid": 119621,
        "name": "Kubic",
        "ccfLevel": 10,
        "title": "P5204 [USACO19JAN] Train Tracking 2 P"
    },
    {
        "content": "## Solution\n\n### \u5207\u5165\n\n\u5148\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff0c\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u4f7f\u5f97\u5176\u4e2d\u957f\u5ea6\u4e3aK\u7684\u6ed1\u7a97\u5185\u4efb\u610f\u4e00\u6bb5\u4e2d\u7684\u6700\u5c0f\u503c\u90fd\u5c0f\u4e0ev\u3002\u628a\u8fd9\u6837\u7684\u5e8f\u5217\u6210\u4e3a\u4ee5v\u7ed3\u5c3e\uff0c\u957f\u5ea6\u4e3ai\u7684\u6ed1\u7a97\u5e8f\u5217\u3002\n\n\u5148\u8bbeDP[i]\u4e3a\u4ee5v\u7ed3\u5c3e\uff0c\u957f\u5ea6\u4e3ai\u7684\u6ed1\u7a97\u5e8f\u5217\u7684\u65b9\u6848\u6570\u3002\n$$\nx=MaxNum-v\n$$\n\u6211\u4eec\u73b0\u5728\u679a\u4e3e\u5728\u8fd9\u6b21v\u51fa\u73b0\u4e4b\u524d\u3002\u4e0a\u4e00\u6b21v\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u6b21\u4f4d\u7f6e\u4e2d\u95f4\u7684\u90e8\u5206\u53ef\u4ee5\u662f\u5927\u4e8ev\u7684\u4efb\u610f\u6574\u6570\u3002\u4e0a\u4e00\u6b21\u51fa\u73b0\u6700\u65e9\u53ea\u80fd\u662fi-k\u5426\u5219\u6700\u5c0f\u503c\u5c31\u4e0d\u662fv\u4e86\u3002\n$$\nDP[i]=DP[i-1]+DP[i-2]\\times x+DP[i-3]\\times x^2+...DP[i-k]\\times x^{k-1}\n$$\n\u4f46\u8fd9\u4e2a\u7b97\u6cd5\u6bcf\u4e00\u6b21\u66f4\u65b0\u90fd\u662f$O(i)$,\u6c42\u51fa\u4e00\u4e2aDP[n],\u9700\u6709$O(n^2)$\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u4e0d\u592a\u53ef\u884c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5f0f\u5b50\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u53d8\u5f62\uff0c\u5c31\u53ef\u4ee5\u7b80\u5316\u4e3a\u4e0b\u9762\u7684\u5f0f\u5b50\uff0c\u8fd9\u6837\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u53d8\u4e3a\u5e38\u6570\u3002\u6c42\u89e3\u53d8\u4e3a\u7ebf\u6027\u3002\n$$\nDP[i]=DP[i-1]+x(DP[i-1]-DP[i-k-1]\\times x^{k-1})\n$$\n\n### \u6df1\u5316\n\n\u6211\u4eec\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u7a81\u7834\u53e3\u3002\u5f53\u6211\u4eec\u53d1\u73b0\u5f53\u6ed1\u7a97\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u5355\u4f4d\u540e\uff0c\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u65f6\u6211\u4eec\u4fbf\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u503c\u4e86\u3002\n\n\u8fd9\u4e2a\u9053\u7406\u4e0d\u96be\u7406\u89e3\uff0c\u4e0b\u9762\u7528\u6570\u5b66\u8bf4\u660e\u4e00\u4e0b\u3002\n$$\na=min(x_{1},x_{2}...x_{k})\n$$\n\n$$\nb=min(x_{2},x_{3},...x_{k+1})\n$$\n\n\u5047\u8bbea>b\n$$\nmin(x_{2},x_{3}...x_{k})>=a\n$$\n\n$$\nmin(x_{2},x_{3},...x_{k+1})=b<a<=min(x_{2},x_{3}...x_{k})\n$$\n\n$$\nx_{k+1}=b\n$$\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6ed1\u7a97\u503c\u7684\u53d8\u5316\uff0c\u6765\u786e\u5b9a\u4e00\u4e9b\u503c\u7684\u53d8\u5316\u3002\n\n### \u5927\u6210\n\n\u90a3\u4e48\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u786e\u5b9a\u7684\u503c\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u5176\u5b9e\u5c31\u7528\u5230\u6211\u4eec\u4e4b\u524d\u5728\u7b2c\u4e00\u90e8\u5206\u6240\u9700\u8981\u7684\u5185\u5bb9\u4e86\u3002\n$$\n\\{a,..........,b\\}\n$$\n\u5bf9\u4e8e\u786e\u5b9a\u7684a,b,\u4e2d\u95f4\u6253\u70b9\u90e8\u5206\u4e0d\u5b9a\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u4f7f\u4ed6\u4eec\u6ee1\u8db3\u5bf9\u5e94\u7684\u6ed1\u7a97\u5373\u53ef\uff0c\u800c\u4e14\u7531\u4e8e\u4ed6\u4eec\u6ed1\u7a97\u7684\u503c\u76f8\u540c\uff0c\u5426\u5219\u5c31\u4f1a\u6709\u786e\u5b9a\u503c\u7684\u5b58\u5728\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u53ea\u9700\u8981\u8ba1\u7b97\u957f\u5ea6\u4e3al\uff0c\u6ed1\u7a97\u503c\u4e3av\u7684\u6ed1\u7a97\u5e8f\u5217\u7684\u65b9\u6848\u6570\u3002\u6700\u540e\u901a\u8fc7\u4e58\u6cd5\u539f\u7406\u5c06\u6bcf\u4e00\u90e8\u5206\u4e58\u8d77\u6765\uff0c\u4fbf\u5f97\u5230\u7b54\u6848\u3002\n\n### \u590d\u6742\u5ea6O(n)\n\n\u5bf9\u4e8e\u786e\u5b9a\u4f4d\u7f6e\uff0cO(n)\u626b\u4e00\u904d\u4fbf\u53ef\u6c42\u89e3\u3002\n\n\u800c\u5bf9\u4e8e\u4e2d\u95f4\u4e0d\u786e\u5b9a\u4f4d\u7f6e\uff0c\u957f\u5ea6\u4e3al\u7684\u60c5\u51b5\uff0cO(l)\u53ef\u4ee5\u6c42\u89e3\u3002\u53c8\u56e0\u4e3al\u7684\u548c\u5c0f\u4e8e\u7b49\u4e8en\uff0c\u6240\u4ee5O(n)\n\nO(n)+O(n)=O(n)\n\n## Code\n\n```c++\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <iostream>\n#define MAXN 100005\n#define int long long\nusing namespace std;\n\nconst int MX=1e9;\nconst int mod=1e9+7;\nint add(int a,int b)\n{\n    return (a+b)%mod;\n}\nint sub(int a,int b)\n{\n    return (a-b+mod)%mod;\n}\nint mul(int a,int b)\n{\n    return (a*b)%mod;\n}\n\nint calc(int val,int K,int len)\n{\n    int x=MX-val;\n    int pow[MAXN],spow[MAXN],dp[MAXN];\n    pow[0]=spow[0]=1;\n    for(int i=1;i<=K;i++)\n    {\n        pow[i]=mul(pow[i-1],(x+1));\n        spow[i]=mul(spow[i-1],x);\n    }\n    dp[0]=dp[1]=1;\n    for(int i=2;i<=min(K,len);i++)\n    {\n        dp[i]=pow[i-1];\n    }\n    if(len<K)\n        return pow[len];\n    for(int i=K;i<=len;i++)\n    {\n        dp[i+1]=dp[i];\n        dp[i+1]=sub(dp[i+1],mul(dp[i-K],spow[K-1]));\n        dp[i+1]=mul(dp[i+1],x);\n        dp[i+1]=add(dp[i+1],dp[i]);\n    }\n    return dp[len+1];\n}\n\n\n\npair<int,int>b[MAXN];\nint cnt=0,tot=0;\nint n,k;\nint a[MAXN];\n\nsigned main()\n{\n    scanf(\"%lld%lld\",&n,&k);\n    for(int i=1;i<=n-k+1;i++)\n        scanf(\"%lld\",&a[i]);\n    int cur=-1;\n    for(int i=1;i<=n-k+1;i++)\n    {\n        if(a[i]==cur)\n        {\n            cnt++;\n        }\n        else\n        {\n            if(cnt)b[++tot]=make_pair(cur,cnt);\n            cur=a[i];\n            cnt=1;\n        }\n        \n    }\n    b[++tot]=make_pair(a[n-k+1],cnt);\n    // for(int i=1;i<=tot;i++)\n    // {\n    //    cout<<b[i].first<<\" \" <<b[i].second<<endl;\n    // }\n    int ans=1;\n    if(tot==1)\n    {\n        printf(\"%lld\",calc(b[1].first,k,n));\n    }\n    else\n    {\n        for(int i=1;i<=tot;i++)\n        {\n            int len;\n            if(i==1)\n            {\n                if(b[i].first<b[i+1].first)\n                {\n                    len=b[i].second-1;\n                }\n                else\n                {\n                    len=b[i].second+k-1;\n                }\n            }\n            else if(i==tot)\n            {\n                if(b[i].first<b[i-1].first)\n                {\n                    len=b[i].second-1;\n                }\n                else\n                {\n                    len=b[i].second+k-1;\n                }\n            }\n            else\n            {\n                if(b[i].first<b[i+1].first)\n                {\n                    if(b[i].first<b[i-1].first)\n                    {\n                        len=max(0ll,b[i].second-k-1);\n                    }\n                    else\n                    {\n                        len=b[i].second-1;\n                    }\n                }\n                else\n                {\n                    if(b[i].first<b[i-1].first)\n                    {\n                        len=b[i].second-1;\n                    }\n                    else\n                    {\n                        len=b[i].second+k-1;\n                    }\n                }\n            }\n            //printf(\"%d\\n\",len);\n            ans=mul(ans,calc(b[i].first,k,len));    \n        }\n        printf(\"%lld\",ans);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1551429940,
        "uid": 63925,
        "name": "joe19025",
        "ccfLevel": 0,
        "title": "\u7ed3\u8bba+DP\u2014\u2014P5204 [USACO19JAN]Train Tracking 2"
    }
]