[
    {
        "content": "\u5957\u8def\u9898\uff0c\u5206\u5c42\u56fe\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff08\u4f7f\u7528 @EternalAlexander \u8fd9\u4f4ddalao\u7684OI Painter\u7ed8\u5236\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/19106.png)\n\n\u5404\u5c42\u5185\u90e8\u6b63\u5e38\u8fde\u8fb9\uff0c\u5404\u5c42\u4e4b\u95f4\u4ece\u4e0a\u5230\u4e0b\u8fde\u6743\u503c\u4e3a0\u7684\u8fb9\u3002\u6bcf\u5411\u4e0b\u8dd1\u4e00\u5c42\uff0c\u5c31\u76f8\u5f53\u4e8e\u514d\u8d39\u642d\u4e00\u6b21\u98de\u673a\u3002\u8dd1\u4e00\u904d\u4ece$s$\u5230$t+n*k$\u7684\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n```\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<vector>\n#include<utility> \n#include<functional>\n\nint Read()\n{\n    int x=0;char c=getchar();\n    while(!isdigit(c))\n    {\n        c=getchar();\n    }\n    while(isdigit(c))\n    {\n        x=x*10+(c^48);\n        c=getchar();\n    }\n    return x;\n}\n\nusing std::priority_queue;\nusing std::pair;\nusing std::vector;\nusing std::make_pair;\nusing std::greater;\n\nstruct Edge\n{\n    int to,next,cost;\n}edge[2500001];\nint cnt,head[110005];\n\nvoid add_edge(int u,int v,int c=0)\n{\n    edge[++cnt]=(Edge){v,head[u],c};\n    head[u]=cnt;\n}\n\nint dis[110005];\nbool vis[110005];\nvoid Dijkstra(int s)\n{\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > points;\n    points.push(make_pair(0,s));\n    while(!points.empty())\n    {\n        int u=points.top().second;\n        points.pop();\n        if(!vis[u])\n        {\n            vis[u]=1;\n            for(int i=head[u];i;i=edge[i].next)\n            {\n                int to=edge[i].to;\n                if(dis[to]>dis[u]+edge[i].cost) \n                {\n                    dis[to]=dis[u]+edge[i].cost;\n                    points.push(make_pair(dis[to],to));\n                }\n            }\n        }\n    }\n}\n\nint main()\n{\n    int n=Read(),m=Read(),k=Read(),s=Read(),t=Read();\n    int u,v,c;\n    for(int i=0;i<m;++i)\n    {\n        u=Read(),v=Read(),c=Read();\n        add_edge(u,v,c);\n        add_edge(v,u,c);\n        for(int j=1;j<=k;++j)\n        {\n            add_edge(u+(j-1)*n,v+j*n);\n            add_edge(v+(j-1)*n,u+j*n);\n            add_edge(u+j*n,v+j*n,c);\n            add_edge(v+j*n,u+j*n,c);\n        }\n    }\n    for(int i=1;i<=k;++i)\n\t{\n\t\tadd_edge(t+(i-1)*n,t+i*n);\n\t}//\u9884\u9632\u5947\u8469\u6570\u636e\n    Dijkstra(s);\n    printf(\"%d\",dis[t+k*n]);\n    return 0;\n}\n```",
        "postTime": 1526116197,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "**\u5206\u5c42\u56fe\u6700\u77ed\u8def**\u677f\u5b50\u9898\u3002\n\n\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9 $u$\uff0c\u53ef\u4ee5\u628a\u5b83\u62c6\u6210 $k + 1$ \u4e2a\u8282\u70b9 $u_j, j \\in [0, k]$\uff0c\u5206\u522b\u8868\u793a\u5f53\u4f7f\u7528 $j$ \u6b21\u514d\u8d39\u901a\u884c\u6743\u9650\u540e\u5230\u8fbe $u$ \u53f7\u8282\u70b9\u7684\u72b6\u6001\u3002\u5bf9\u4e8e\u6837\u4f8b\uff0c\u5219\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff08\u56fe\u753b\u5f97\u4e0d\u662f\u5f88\u597d\uff0c\u89c1\u8c05\uff09\uff1a\n\n![pic](https://s1.ax1x.com/2018/10/30/i2gtIJ.png)\n\n\u56fe\u4e2d\u52a0\u7c97\u7ed3\u70b9\u8868\u793a\u6837\u4f8b\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u867d\u7136\u6837\u4f8b\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u753b\u56fe\u8868\u793a\uff0c\u4f46\u6211\u4eec\u5199\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u4e00\u5b9a\u8981\u5efa\u8fd9\u4e48\u591a\u7ed3\u70b9\u3002\u53ea\u9700\u8981\u6309\u7167\u539f\u59cb\u7684\u8f93\u5165\u5efa\u666e\u901a\u7684\u56fe\u3002\u8003\u8651 dp\u3002\u8bbe $\\text{dis}_{i, j}$ \u8868\u793a\u5f53\u524d\u4ece\u8d77\u70b9 $i$ \u53f7\u7ed3\u70b9\uff0c\u4f7f\u7528\u4e86 $j$ \u6b21\u514d\u8d39\u901a\u884c\u6743\u9650\u540e\u7684\u6700\u77ed\u8def\u5f84\u3002\u663e\u7136\uff0c$\\text{dis}$ \u6570\u7ec4\u53ef\u4ee5\u8fd9\u4e48\u8f6c\u79fb\uff1a\n\n$$ \\text{dis}_{i, j} = \\min\\{\\min\\{\\text{dis}_{from, j - 1}\\}, \\min\\{\\text{dis}_{from,j} + w\\}\\} $$\n\n\u5176\u4e2d\uff0c$from$ \u8868\u793a $i$ \u7684\u7236\u4eb2\u8282\u70b9\uff0c$w$ \u8868\u793a\u5f53\u524d\u6240\u8d70\u7684\u8fb9\u7684\u8fb9\u6743\u3002\u5f53 $j - 1 \\geq k$ \u65f6\uff0c$\\text{dis}_{from, j}$ = $\\infty$\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a dp \u5c31\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u7684 $k + 1$ \u4e2a\u72b6\u6001\uff0c\u60f3\u8c61\u6210\u62c6\u4e3a $k + 1$ \u4e2a\u4e0d\u540c\u7684\u7ed3\u70b9\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u53ef\u4ee5\u76f8\u8fde\uff0c\u4eff\u4f5b\u8fd9\u5f20\u56fe\u4e00\u5171\u6709 $k + 1$ \u5c42\u3002\n\n\u5bf9\u4e8e\u8fdb\u884c Dijkstra \u7b97\u6cd5\u7684\u8fc7\u7a0b\uff0c\u628a $\\text{done}$ \u6570\u7ec4\u4e5f\u5f00\u6210\u4e8c\u7ef4\u5c31\u597d\uff0c\u6bcf\u6b21\u5165\u961f\u7684\u65f6\u5019\u5206\u522b\u5224\u65ad\u80fd\u5426\u4f7f\u7528\u514d\u8d39\u901a\u884c\u6743\u9650\u5373\u53ef\u3002\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u9700\u8981\u7edf\u8ba1\u51fa\u5230\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u603b\u5171 $k + 1$ \u79cd\u72b6\u6001\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nstruct State { // \u4f18\u5148\u961f\u5217\u7684\u7ed3\u70b9\u7ed3\u6784\u4f53\n    int v, w, cnt; // cnt \u8868\u793a\u5df2\u7ecf\u4f7f\u7528\u591a\u5c11\u6b21\u514d\u8d39\u901a\u884c\u6743\u9650\n    State() {}\n    State(int v, int w, int cnt) : v(v), w(w), cnt(cnt) {}\n    bool operator<(const State &rhs) const { return w > rhs.w; }\n};\n\nvoid dijkstra() {\n    memset(dis, 0x3f, sizeof dis);\n    dis[s][0] = 0;\n    pq.push(State(s, 0, 0)); // \u5230\u8d77\u70b9\u4e0d\u9700\u8981\u4f7f\u7528\u514d\u8d39\u901a\u884c\u6743\uff0c\u8ddd\u79bb\u4e3a\u96f6\n    while (!pq.empty()) {\n        const State top = pq.top(); pq.pop();\n        int u = top.v, nowCnt = top.cnt;\n        if (done[u][nowCnt]) continue;\n        done[u][nowCnt] = true;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].v, w = edge[i].w;\n            if (nowCnt < k && dis[v][nowCnt + 1] > dis[u][nowCnt]) { // \u53ef\u4ee5\u514d\u8d39\u901a\u884c\n                dis[v][nowCnt + 1] = dis[u][nowCnt];\n                pq.push(State(v, dis[v][nowCnt + 1], nowCnt + 1));\n            }\n            if (dis[v][nowCnt] > dis[u][nowCnt] + w) { // \u4e0d\u53ef\u4ee5\u514d\u8d39\u901a\u884c\n                dis[v][nowCnt] = dis[u][nowCnt] + w;\n                pq.push(State(v, dis[v][nowCnt], nowCnt));\n            }\n        }\n    }\n}\n\nint main() {\n    n = read(), m = read(), k = read(); \n    // \u7b14\u8005\u4e60\u60ef\u4ece 1 \u5230 n \u7f16\u53f7\uff0c\u800c\u8fd9\u9053\u9898\u662f\u4ece 0 \u5230 n - 1\uff0c\u6240\u4ee5\u8981\u5904\u7406\u4e00\u4e0b \n    s = read() + 1, t = read() + 1;\n    while (m--) {\n        int u = read() + 1, v = read() + 1, w = read();\n        add(u, v, w), add(v, u, w); // \u8fd9\u9053\u9898\u662f\u53cc\u5411\u8fb9 \n    }\n    dijkstra();\n    int ans = std::numeric_limits<int>::max(); // ans \u53d6 int \u6700\u5927\u503c\u4e3a\u521d\u503c\n    for (int i = 0; i <= k; ++i)\n    \tans = std::min(ans, dis[t][i]); // \u5bf9\u5230\u8fbe\u7ec8\u70b9\u7684\u6240\u6709\u60c5\u51b5\u53d6\u6700\u4f18\u503c \n    println(ans);\n}\n```",
        "postTime": 1540867358,
        "uid": 53062,
        "name": "Anguei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u5404\u4f4d\u5927\u4f6c\u7528\u7684\u90fd\u662f\u5206\u5c42\u56fe\u54ce\uff0c\u6211\u4e00\u4e2a\u849f\u84bb\uff0c\u6839\u672c\u4e0d\u77e5\u9053\u5206\u5c42\u56fe\u662f\u5565\uff0c\u600e\u4e48\u529e\uff1f\n\n\u4ece\u6700\u7b80\u5355\u7684djstl\u5f00\u59cb\n\n```c\nvoid djstl()\n{\n    q.push(pnode(s,0));\n    dis[s]=0;\n//    vis[s]=1;\n    while(!q.empty())\n    {\n        pnode u=q.top();\n        q.pop();\n    //    vis[u.x]=0;\n        if(u.l>dis[u.x]) continue;\n        for(int i=head[u.x];i;i=p[i].next)\n        {\n            int v=p[i].to;\n            if(dis[v]>dis[u.x]+p[i].v)\n            {\n                dis[v]=dis[u.x]+p[i].v;\n       //         if(!vis[v])\n                {\n            //        vis[v]=1;\n                    q.push(pnode(v,dis[v]));\n                }\n            }\n        }\n    }\n}\n```\nif(dis[v]>dis[u.x]+p[i].v) dis[v]=dis[u.x]+p[i].v;\n\u8fd9\u53e5\u8bdd\u662f\u4e0d\u662f\u5f88\u773c\u719f\uff0c\u50cf\u4ec0\u4e48\uff1f\n\n# **dp\uff01\uff01\uff01**\n\n\n------------\n\u5bf9\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u7528dp\uff0c\u4ece\u8fd9\u4e2a\u5f0f\u5b50\u6765\u770b\uff0cdjstl\u672c\u8d28\u5c31\u662f\n\n**dp+bfs**\n\n\u4f46\u4ed6\u662f\u4e00\u7ef4\u7684\uff0c\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u53ef\u4ee5\u53d8\u6210\u4e8c\u7ef4\u5417\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u90fd\u53ef\u4ee5\u4ece\u7528\u514d\u8d39\u673a\u4f1a\u4e0e\u4e0d\u7528\u8f6c\u79fb\u8fc7\u6765\uff0c\u65e2\u7136\u80fd\u8f6c\u79fb\uff0c\u800c\u4e14\u53ef\u4ee5\u8bc1\u660e\u5982\u679c\u80fd\u8f6c\u79fb\u65f6\u4e0d\u8f6c\u79fb\uff0c\u540e\u9762\u60c5\u51b5\u80af\u5b9a\u4e0d\u5982\u8f6c\u79fb\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528dp\n\n\u90a3\u4e48\u5982\u4f55\u8f6c\u79fb\n\n\u6211\u4eec\u8bbef[v][k]\u4e3av\u70b9\u7528\u4e86k\u6b21\u514d\u8d39\u82b1\u7684\u6700\u5c11\u8d39\u7528\n\n\u89c2\u5bdfif(dis[v]>dis[u.x]+p[i].v) dis[v]=dis[u.x]+p[i].v;\n\n\u540c\u7406\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0d\u7528\u673a\u4f1a\u7684\u8f6c\u79fb\u65b9\u7a0b\n\n**f[v][k]=f[u][k]+\u8fb9\u6743\uff1b**\n\n\u5982\u679c\u7528\u4e86**f[v][k]=f[v][k-1] _\u6ce8\u610fk>0_**\n\n\u8fb9\u754c\u4e5f\u548cdjstl\u4e00\u6837f[s][i]=0;(0<=i<=k)\uff0c\n\u5176\u4ed6\u4e3ainf\n\n\u5faa\u73af\u5e76\u6ca1\u6709\u592a\u591a\u95ee\u9898\uff0c\u628afor\u653e\u5728while\u5916\u9762\u5c31\u884c\u4e86\uff0c\u56e0\u4e3awhile\u5728\u5916\u9762\u7684\u8bdd\uff0c\u6bcf\u4e00\u6b21for\u524d\u90fd\u8981\u628a\uff08s\uff0c0\uff09\u538b\u5165\uff0c\u8fd9\u6837\u6240\u6709for\u6267\u884c\u5b8c\u524d\uff0cwhile\u4e00\u76f4\u5728\uff0c\u8fd9\u6837while\u5c31\u6ca1\u592a\u5927\u610f\u4e49\uff0c\u800c\u4e14\u6709\u4e9b\u64cd\u4f5c\u662f\u9488\u5bf9while\u800c\u975efor\u7684\n\n## \u672c\u9898\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5c31\u662f**\u7f16\u53f7\u662f0~n-1**\n\n\n------------\n\u4e0a\u4ee3\u7801\n\n\n------------\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,k,s,t,f[111111][21];\nstruct edge\n{\n\tint next,to,vl;\n}p[1111111];\nint head[1111111],num;\nvoid ad(int x,int y,int z) \u3001\u3001\u524d\u5411\u661f\n{\n\tp[++num].next=head[x];\n\tp[num].to=y;\n\tp[num].vl=z;\n\thead[x]=num;\n}\nstruct vs\n{\n\tint x,vl;\n\tvs(int a,int b)\n\t{\n\t\tx=a;\n\t\tvl=b;\n\t}\n\tbool operator <(const vs b) const\n    {\n        return vl>b.vl;\n    }\n};\npriority_queue<vs> q;\nvoid djstl()\n{\n\tfor(int i=0;i<=k;i++) f[s][i]=0;\n\tfor(int i=0;i<=k;i++)//for\u653e\u5916\u9762\n\t{\n\t\tq.push(vs(s,0));\n\t\twhile(!q.empty())\\\\djstl\n\t\t{\n\t\t\tvs u=q.top();\n\t\t\tq.pop();\n\t\t\tif(u.vl>f[u.x][i]) continue;#\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u662f\u9488\u5bf9while\u7684\n\t\t\tfor(int j=head[u.x];j;j=p[j].next)\n\t\t\t{\n\t\t\t\tint v=p[j].to;\n\t\t\t\tbool bl=0;\n\t\t\t\tif(i)\n\t\t\t\tif(f[v][i]>f[u.x][i-1])\n\t\t\t\t{\n\t\t\t\t\tf[v][i]=f[u.x][i-1];\n\t\t//\t\t\tprintf(\"!%d %d %d %d %d\\n\",u.x,v,i,j,f[v][i]);\t\n\t\t\t\t\tbl=1;\n\t\t\t\t}\n\t\t\t\tif(f[v][i]>f[u.x][i]+p[j].vl)\n\t\t\t\t{\n\t\t\t\t\tf[v][i]=f[u.x][i]+p[j].vl;\n\t\t//\t\t\tprintf(\"@%d %d %d %d %d\\n\",u.x,v,i,j,f[v][i]);\t\n\t\t\t\t\tbl=1;\n\t\t\t\t}\n\t\t\t\tif(bl)\n\t\t\t\t{\n\t\t\t\t\tq.push(vs(v,f[v][i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\u300a--\u8fd9\u662f\u4e2a\u4e2d\u6587\u5927\u62ec\u53f7\u3010\u6ed1\u7a3d\u3011\nint main()\n{\n\tcin>>n>>m>>k>>s>>t;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tad(x,y,z);\n\t\tad(y,x,z);\n\t}\n\tfor(int i=0;i<n;i++) \uff01\u6ce8\u610f\u662f0~n-1\n\t{\n\t\tfor(int j=0;j<=k;j++) f[i][j]=1e9;\n\t}\n\tdjstl();\n//\tprintf(\"%d %d\\n\",f[0][0],f[2][1]);\n\tprintf(\"%d\",f[t][k]);\n\treturn 0\uff1b<-\u6709\u70b9\u5947\u602a\u7684\u5206\u53f7\n}\n\n```\n",
        "postTime": 1562824172,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\n>### Description\n>Alice\u548cBob\u73b0\u5728\u8981\u4e58\u98de\u673a\u65c5\u884c\uff0c\u4ed6\u4eec\u9009\u62e9\u4e86\u4e00\u5bb6\u76f8\u5bf9\u4fbf\u5b9c\u7684\u822a\u7a7a\u516c\u53f8\u3002\u8be5\u822a\u7a7a\u516c\u53f8\u4e00\u5171\u5728nn\u4e2a\u57ce\u5e02\u8bbe\u6709\u4e1a\u52a1\uff0c\u8bbe\u8fd9\u4e9b\u57ce\u5e02\u5206\u522b\u6807\u8bb0\u4e3a$0$\u5230$n\u22121$\uff0c\u4e00\u5171\u6709$m$\u79cd\u822a\u7ebf\uff0c\u6bcf\u79cd\u822a\u7ebf\u8fde\u63a5\u4e24\u4e2a\u57ce\u5e02\uff0c\u5e76\u4e14\u822a\u7ebf\u6709\u4e00\u5b9a\u7684\u4ef7\u683c\u3002\n\n>Alice\u548cBob\u73b0\u5728\u8981\u4ece\u4e00\u4e2a\u57ce\u5e02\u6cbf\u7740\u822a\u7ebf\u5230\u8fbe\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u9014\u4e2d\u53ef\u4ee5\u8fdb\u884c\u8f6c\u673a\u3002\u822a\u7a7a\u516c\u53f8\u5bf9\u4ed6\u4eec\u8fd9\u6b21\u65c5\u884c\u4e5f\u63a8\u51fa\u4f18\u60e0\uff0c\u4ed6\u4eec\u53ef\u4ee5\u514d\u8d39\u5728\u6700\u591a$k$\u79cd\u822a\u7ebf\u4e0a\u642d\u4e58\u98de\u673a\u3002\u90a3\u4e48Alice\u548cBob\u8fd9\u6b21\u51fa\u884c\u6700\u5c11\u82b1\u8d39\u591a\u5c11\uff1f\n>### Input\n>\u6570\u636e\u7684\u7b2c\u4e00\u884c\u6709\u4e09\u4e2a\u6574\u6570\uff0c$n,m,k$\uff0c\u5206\u522b\u8868\u793a\u57ce\u5e02\u6570\uff0c\u822a\u7ebf\u6570\u548c\u514d\u8d39\u4e58\u5750\u6b21\u6570\u3002\n\n>\u7b2c\u4e8c\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c$s,t$\uff0c\u5206\u522b\u8868\u793a\u4ed6\u4eec\u51fa\u884c\u7684\u8d77\u70b9\u57ce\u5e02\u7f16\u53f7\u548c\u7ec8\u70b9\u57ce\u5e02\u7f16\u53f7\u3002\n\n>\u63a5\u4e0b\u6765\u6709$m$\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570\uff0c$a,b,c$\uff0c\u8868\u793a\u5b58\u5728\u4e00\u79cd\u822a\u7ebf\uff0c\u80fd\u4ece\u57ce\u5e02$a$\u5230\u8fbe\u57ce\u5e02$b$\uff0c\u6216\u4ece\u57ce\u5e02$b$\u5230\u8fbe\u57ce\u5e02$a$\uff0c\u4ef7\u683c\u4e3a$c$\u3002 \n\n>### Output\n>\u53ea\u6709\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u4e3a\u6700\u5c11\u82b1\u8d39\n\n### \u5206\u6790\n\n\u200b\t\u660e\u663e,\u6b64\u9898\u4e3a\u6700\u77ed\u8def\u95ee\u9898,\u4f46\u662f\u8003\u8651\u5230\u53ef\u4ee5\u514d\u8d39\u642d\u4e58(\u5373\u76f4\u63a5\u901a\u8fc7\u4e00\u6761\u8fb9\u65e0\u9700\u8d39\u7528.)\n\n\u8fd9\u79cd\u95ee\u9898\u6709\u4e00\u4e2a\u5b98\u65b9\u7684\u540d\u5b57 **\u5206\u5c42\u56fe\u6700\u77ed\u8def\u95ee\u9898**\n\n> \u5206\u5c42\u56fe\u6700\u77ed\u8def\u662f\u6307\u5728\u53ef\u4ee5\u8fdb\u884c\u5206\u5c42\u56fe\u7684\u56fe\u4e0a\u89e3\u51b3\u6700\u77ed\u8def\u95ee\u9898.\n\n\u662f\u4e0d\u662f\u542c\u8d77\u6765\u5c31\u5f88nb?\n\n~~\u5177\u4f53\u5206\u5c42\u56fe\u662f\u5565,\u6211\u4e5f\u4e0d\u77e5\u9053~~\n\n> \u4e00\u822c\u6a21\u578b\uff1a\n>\n> \u200b\t \u3000\u5728\u56fe\u4e0a,\u6709$k$\u6b21\u673a\u4f1a\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u4e00\u6761\u8fb9,\u95ee\u8d77\u70b9\u4e0e\u7ec8\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84.\n\n\u5f88\u660e\u663e,\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u88f8\u7684\u5206\u5c42\u56fe\u6700\u77ed\u8def\u95ee\u9898 (\u8c8c\u4f3c\u8fd9\u7c7b\u95ee\u9898\u90fd\u633a\u88f8\u7684 emm\n\n#### \u89e3\u6cd5\n\n \u6211\u4eec\u8bbe\n\n> $dis[i][j]$\u4ee3\u8868\u5230\u8fbe$i$\u7528\u4e86$j$\u6b21\u514d\u8d39\u673a\u4f1a\u7684\u6700\u5c0f\u82b1\u8d39.\n>\n> $vis[i][j]$\u4ee3\u8868\u5230\u8fbe$i$\u7528\u4e86$j$\u6b21\u514d\u8d39\u673a\u4f1a\u7684\u60c5\u51b5\u662f\u5426\u51fa\u73b0\u8fc7.\t\n\n\u5bf9\u4e8e\u67d0\u6761\u8def\u5f84\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u673a\u4f1a,\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u4f7f\u7528\u673a\u4f1a.\n\n\u8ba8\u8bba\u8fd9\u4e24\u79cd\u60c5\u51b5\u5373\u53ef\n\n```c++\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define R register\n#define N 20008\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(s>'9' or s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile(s>='0' and s<='9'){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint head[N],tot,n,m,s,t,k;\nint dis[N][15],ans=2147483647;\nbool vis[N][15];\nstruct cod{int u,v,w;}edge[N*6+8];\ninline void add(int x,int y,int z)\n{\n\tedge[++tot].u=head[x];\n\tedge[tot].v=y;\n\tedge[tot].w=z;\n\thead[x]=tot;\n}\nstruct coc{\n\tint u,d,used;\n\tbool operator <(const coc&a) const \n\t{\n\t\treturn d>a.d;\n\t}\n};\ninline void dijkstra()\n{\n\tmemset(dis,127,sizeof dis);\n\tdis[s][0]=0;\n\tpriority_queue<coc>q;\n\tq.push((coc){s,0,0});\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().u,now=q.top().used;\n\t\tq.pop();\n\t\tif(vis[u][now])continue;\n\t\tvis[u][now]=true;\n\t\tfor(R int i=head[u];i;i=edge[i].u)\n\t\t{\n\t\t\tif(now<k and !vis[edge[i].v][now+1] and dis[edge[i].v][now+1]>dis[u][now])//\u5f53\u524d\u8def\u5f84,\u4f7f\u7528\u4e00\u6b21\u514d\u8d39\u673a\u4f1a.\u6ce8\u610f\u5224\u65ad now<k\n\t\t\t{\n\t\t\t\tdis[edge[i].v][now+1]=dis[u][now];\n\t\t\t\tq.push((coc){edge[i].v,dis[edge[i].v][now+1],now+1});\n\t\t\t}\n\t\t\tif(!vis[edge[i].v][now] and dis[edge[i].v][now]>dis[u][now]+edge[i].w)//\u5f53\u524d\u8def\u5f84,\u4e0d\u4f7f\u7528\u514d\u8d39\u673a\u4f1a\n\t\t\t{\n\t\t\t\tdis[edge[i].v][now]=dis[u][now]+edge[i].w;\n\t\t\t\tq.push((coc){edge[i].v,dis[edge[i].v][now],now});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tin(n),in(m),in(k);\n\tin(s),in(t);\n\ts++;t++;//\u8fd9\u91cc\u4e2a\u4eba\u4e60\u60ef\u4e0d\u540c.\u6211\u9009\u62e9\u8bb0\u5f55\u7f16\u53f7\u4e3a1~n\n\tfor(R int i=1,x,y,z;i<=m;i++)\n\t{\n\t\tin(x),in(y),in(z);\n\t\tx++;y++;\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tdijkstra();//\u76f4\u63a5\u8dd1dijkstra\n\tfor(R int i=0;i<=k;i++)\n\t\tans=min(ans,dis[t][i]);//\u5230\u8fbet\u6211\u4eec\u9700\u8981\u5bf9\u4f7f\u7528\u514d\u8d39\u673a\u4f1a\u7684\u60c5\u51b5\u679a\u4e3e.\u53d6min\n\tprintf(\"%d\",ans);\n}\n```\n\n",
        "postTime": 1538883288,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\ (2 \\leq n \\leq 10^4)$ \u4e2a\u70b9\uff08\u7f16\u53f7\u4e3a $0 \\sim n - 1$\uff09\uff0c$m\\ (1 \\leq m \\leq 5 \\times 10^4)$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u5176\u4e2d\u6700\u591a\u53ef\u4ee5\u628a $k\\ (0 \\leq k \\leq 10)$ \u6761\u8fb9\u7684\u8fb9\u6743\u53d8\u6210 $0$\uff0c\u6c42 $s$ \u5230 $t\\ (0 \\leq s,t < n)$ \u7684\u6700\u77ed\u8def\u3002\n\n## Solution\n\n**\u5206\u5c42\u56fe\u6700\u77ed\u8def** \u6a21\u677f\u9898\u3002\n\n\u8fd9\u7c7b\u9898\u76ee\u4e3b\u8981\u96be\u5728\u5efa\u56fe\u3002\n\n\u6bd4\u5982\u8bf4\uff0c\u5bf9\u4e8e\u6837\u4f8b\n\n### Sample Input\n\n```\n5 6 1\n0 4\n0 1 5\n1 2 5\n2 3 5\n3 4 5\n2 3 3\n0 2 100\n```\n\n### Sample Output\n\n```\n8\n```\n\n\u5efa\u51fa\u6765\u7684\u56fe\uff1a\n\n![E8gzgs.png](https://s2.ax1x.com/2019/04/30/E8gzgs.png)\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u56fe\u5206\u6210 $k + 1$ \u5c42\uff0c\u6bcf\u5f80\u4e0b\u4e00\u5c42\uff0c\u8fb9\u6743\u53d8\u6210 $0$ \u7684\u8fb9\u5c31\u589e\u52a0 $1$ \u6761\u3002\u7f16\u53f7\u4e3a $i$ \u7684\u70b9\u5728\u7b2c $j$ \u5c42\u7684\u7f16\u53f7\u4e3a $i + j \\times n\\ (0 \\leq i < n,0 \\leq j \\leq k)$ \u3002\n\n\u6bcf\u4e00\u5c42\u90fd\u6709\u540c\u6837\u7684 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u3002\n\n\u5728\u5c42\u4e0e\u5c42\u4e4b\u95f4\u6709\u5355\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a $0$\uff0c\u4e14\u4e0d\u80fd\u4ece\u4e0b\u5c42\u5230\u4e0a\u5c42\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8fb9\u6743\u4e3a $w$ \u7684\u65e0\u5411\u8fb9 $u \\leftrightarrow v$\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c $i = 0 \\sim k$ \u5c42\u8fde\u65e0\u5411\u8fb9 $u + i \\times n \\leftrightarrow v + i \\times n$\uff0c\u8fb9\u6743\u4e3a $w$\uff0c\u8868\u793a\u6bcf\u4e00\u5c42\u91cc\u7684 $u$ \u548c $v$ \u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u4e14\u82b1\u8d39\u7684\u4ee3\u4ef7\u4e3a $w$ \u3002\n\n\u7d27\u63a5\u7740\uff0c\u5728\u7b2c $i - 1$ \u5c42\u548c\u7b2c $i$ \u5c42\u4e4b\u95f4\u8fde\u4e24\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u6709\u5411\u8fb9 $u + (i-1) \\times n \\to v + i \\times n$ \u548c $v + (i-1) \\times n \\to u + i \\times n$\uff0c\u8868\u793a\u53ef\u4ee5\u628a\u8fb9 $u \\to v$ \u6216 $v \\to u$ \u7684\u8fb9\u6743\u53d8\u6210 $0$\uff0c\u7136\u540e\u5230\u4e0b\u4e00\u5c42\u7684 $v$ \u70b9\u6216 $u$ \u70b9\u3002\n\n\u5efa\u56fe\u540e\uff0c$s$ \u5230 $t + k \\times n$ \u7684\u6700\u77ed\u8def\u5373\u662f\u7528\u5b8c $k$ \u6b21\u673a\u4f1a\u7684\u6700\u5c11\u82b1\u8d39\u3002\n\n\u6700\u540e\u53ef\u80fd\u6ca1\u6709\u7528\u5b8c $k$ \u6b21\u673a\u4f1a\uff0c\u6240\u4ee5\u5230\u6bcf\u5c42\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u90fd\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O\\left(mk\\log (nk) \\right)$ \u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 2e5, MAXM = 5e6;\nint n, m, k, s, t, tot, ans = 0x7fffffff, head[MAXN + 5], dis[MAXN + 5];\nbool vis[MAXN + 5];\nstruct Edge {\n    int next, to, dis;\n} e[MAXM + 5];\nstruct Node {\n    int val, id;\n    inline friend bool operator<(Node x, Node y) {\n        return x.val > y.val;\n    } \n};\n\ninline void addEdge(int u, int v, int w) {\n    e[++tot] = (Edge) { head[u], v, w };\n    head[u] = tot;\n}\n\ninline void dijkstra(int s) {//\u5806\u4f18\u5316 dijkstra \n    memset(dis, 0x3f, sizeof (dis));\n    priority_queue<Node> q;\n    dis[s] = 0;\n    q.push((Node) { 0, s });\n    for (; !q.empty(); ) {\n        int u = q.top().id;\n        q.pop();\n        if (vis[u]) continue;\n        vis[u] = 1;\n        for (int v, w, i = head[u]; v = e[i].to, w = e[i].dis, i; i = e[i].next)\n            if (dis[v] > dis[u] + w) {\n                dis[v] = dis[u] + w;\n                if (!vis[v]) q.push((Node) { dis[v], v });\n            }\n    }\n}\n\nint main() {\n    read(n), read(m), read(k), read(s), read(t);\n    ++s, ++t;//\u70b9\u7684\u7f16\u53f7\u6539\u4e3a 1 ~ n \n    for (int u, v, w, i = 1; i <= m; ++i) {\n        read(u), read(v), read(w);\n        ++u, ++v;\n        addEdge(u, v, w), addEdge(v, u, w);\n        for (int j = 1; j <= k; ++j) {//\u4e00\u5171 k \u5c42 \n            addEdge(u + (j - 1) * n, v + j * n, 0), addEdge(v + (j - 1) * n, u + j * n, 0);\n            //\u5c42\u4e0e\u5c42\u4e4b\u95f4\u5bf9\u5e94\u7684\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a 0 \u7684\u8fb9 \n            addEdge(u + j * n, v + j * n, w), addEdge(v + j * n, u + j * n, w);\n            //\u6bcf\u4e00\u5c42\u4e2d\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\n        }\n    }\n    dijkstra(s);\n    for (int i = 0; i <= k; ++i) ans = min(ans, dis[t + i * n]);\n    //\u53ef\u80fd\u6ca1\u6709\u7528\u5b8c k \u6b21\u673a\u4f1a\uff0c\u6240\u4ee5\u8981\u53d6 \u5230\u6bcf\u4e00\u5c42\u7ec8\u70b9\u6700\u77ed\u8def \u7684\u6700\u5c0f\u503c \n    write(ans);\n    putchar('\\n');\n    return 0;\n}\n```\n",
        "postTime": 1556606224,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u7d2b\u9898\u9898\u89e3\u3002    \n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5206\u5c42\u56fe\uff0c\u7b2ci\u5c42\u4ee3\u8868\u4f7f\u7528\u4e86i\u6b21\u514d\u8d39\u98de\u884c\u7684\u60c5\u51b5\u3002     \n\u6240\u4ee5\u5efak\u4e2a\u56fe\uff0c\u56fe\u95f4\u4ee5\u6743\u503c\u4e3a0\u7684\u8fb9\u8fde\u63a5\uff0c\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002     \n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<climits>\n#include<ctime>\n#include<cstdlib>\n#include<algorithm>\n#include<iostream>\n#include<complex>\n#include<map>\n#include<queue>\n#include<vector>\n#define ll long long\n#define INF 0x3f3f3f3f\nusing namespace std;\nstruct edge\n{\n\tint to,next,weight;\n}a[6000060];\nstruct node\n{\n\tint dist,id;\n\tnode(){}\n\tnode(int dist,int id):dist(dist),id(id){}\n};\nbool operator <(node xi,node yi)\n{\n\treturn xi.dist>yi.dist;\n}\nint n,m,k;\nint s,t;\nint x,y,w;\nint cnt(0);\nint head[1000010];\nint vis[1000010];\nint dist[1000010];\nvoid addedge(int xi,int yi,int wi)\n{\n\ta[cnt].to=yi;\n\ta[cnt].next=head[xi];\n\ta[cnt].weight=wi;\n\thead[xi]=cnt++;\n}\nvoid dijkstra(int s)\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dist,INF,sizeof(dist));\n\tpriority_queue<node> q;\n\tq.push(node(0,s));\n\tdist[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tnode t(q.top());\n\t\tq.pop();\n\t\tif(vis[t.id])continue;\n\t\tvis[t.id]=1;\n\t\tfor(int i=head[t.id];i!=-1;i=a[i].next)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tif(dist[v]>a[i].weight+t.dist)\n\t\t\t{\n\t\t\t\tdist[v]=a[i].weight+t.dist;\n\t\t\t\tq.push(node(dist[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tscanf(\"%d%d\",&s,&t);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\taddedge(x,y,w);\n\t\taddedge(y,x,w);\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\taddedge(x+(j*n),y+(j*n),w);\n\t\t\taddedge(y+(j*n),x+(j*n),w);\n\t\t\taddedge(x+((j-1)*n),y+(j*n),0);\n\t\t\taddedge(y+((j-1)*n),x+(j*n),0);\n\t\t}\n\t}\n\tfor(int i=1;i<=k;i++)addedge(t+(i-1)*n,t+i*n,0);\n\tdijkstra(s);\n\tprintf(\"%d\",dist[t+k*n]);\n\treturn 0;\n}\n```",
        "postTime": 1541683828,
        "uid": 105496,
        "name": "KevinYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u663e\u7136\u662f\u4e00\u9053\u5206\u5c42\u56fe\u6700\u77ed\u8def\u3002\u3002\u3002\n\n\u7136\u800c\u6211\u8fd9\u4e2a\u849f\u84bb\u4e4b\u524d\u603b\u662f\u5199\u9519\u5206\u5c42\u56fe\uff0c\u8fd8\u597d\u8fd9\u6b21\u4e00\u904dA\u4e86\uff08~~\u5fc3\u60c5\u5927\u597d~~\uff09\u3002\u3002\u3002\n\n\u6211\u8ba4\u4e3a\u7684\u5206\u5c42\u56fe\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/29090.png)\n\n~~\u672c\u849f\u84bb\u62d9\u52a3\u7684\u753b\u6280\u53ef\u80fd\u5df2\u7ecf\u8ba9\u5927\u4f6c\u9119\u89c6\u4e86\u3002\u3002\u3002~~\n\n\u5bf9\u4e8e\u666e\u901a\u7684\u6700\u77ed\u8def\uff0c\u6570\u7ec4\u53ea\u5f00\u4e00\u7ef4\uff0cd[u]\u8868\u793a\u4ece\u8d77\u70b9\u5230\u8fbeu\u7684\u6700\u77ed\u8def\u3002\u3002\u3002\n\n\u73b0\u5728\u591a\u52a0\u5165\u4e00\u7ef4\uff0cd[g][h]\u8868\u793a\u4ece\u8d77\u70b9\u5230g\uff0c\u4f7f\u7528\u4f18\u60e0\u6b21\u6570\u4e3ah\u7684\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u8f6c\u79fb\u4e5f\u9700\u8981\u6539\u53d8\uff1a\n\n\u9996\u5148\u662f\u4e0d\u4f7f\u7528\u4f18\u60e0\u7684\u60c5\u51b5\uff1a\n\nd[son][h]:=min(d[son][h],d[g][h]+cost)\uff08son\u4e3a\u4eceg\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u8282\u70b9\uff0ccost\u4e3a\u6240\u9700\u7684\u8d39\u7528\uff09\n\n\u4f7f\u7528\u4f18\u60e0\uff1f\uff01\n\nd[son][h+1]:=min(d[son][h+1],d[g][h])\n\n\u672c\u849f\u84bb\u8ba8\u538c\u5806\uff0c\u6240\u4ee5\u6253\u4e86\u4e2a\u849f\u84bb\u7248\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\u3002\u3002\n\n~~Pascal~~ Code\uff1a\n\n```cpp\n// luogu-judger-enable-o2//\u6d1b\u8c37O2\nuses math;//\u61d2\u5f97\u6253max\uff0cmin\ntype node=record//\u8bb0\u5f55\u7c7b\u578b\u8bb0\u5f55g\u548ch\n  g,h:longint;\nend;\nvar\n  head,next,d1,d2:array[0..500005]of longint;\n  tree:array[0..500005]of int64;\n  id:array[0..500005]of node;\n  d:array[0..20005,0..25]of int64;\n  ss:array[0..500005]of longint;\n  n,m,k,s,t,i,j,x,y,z,num,zty,v,cost,getnode,ll:longint;\n  ans,inf:int64;\n  u,newnode:node;\nprocedure add(x,y,z:longint);//\u94fe\u5f0f\u524d\u5411\u661f\u8bb0\u5f55\u8fb9\nbegin\n  inc(num);\n  d1[num]:=y;//\u8282\u70b9\n  d2[num]:=z;//\u4ef7\u503c\n  next[num]:=head[x];\n  head[x]:=num;\nend;\nfunction titititing(u:node):longint;////\u5c06node\u7c7b\u578b\u53d8\u4e3a\u4e00\u4e2a\u6570\u5b57\nbegin\n  exit((u.g-1)*(k+1)+u.h+1);\nend;\nfunction titititingg(p:longint):longint;//\u901a\u8fc7\u6570\u5b57\u53d6\u51fag\nbegin\n  exit((p-1) div (k+1)+1);\nend;\nfunction titititingh(p:longint):longint;//\u901a\u8fc7\u6570\u5b57\u53d6\u51fah\nbegin\n  if p mod (k+1)=0 then\n    exit(k);\n  exit(p mod (k+1)-1);\nend;\nprocedure build(p,l,r:longint);//\u5efa\u6811\nvar\n  mid,getg,geth:longint;\nbegin\n  if l=r then\n  begin\n    getg:=titititingg(l);\n    geth:=titititingh(l);\n    tree[p]:=d[getg][geth];\n    id[p].g:=getg;\n    id[p].h:=geth;\n    ss[l]:=p;\n    exit;\n  end;\n  mid:=(l+r) >> 1;\n  build(p+p,l,mid);\n  build(p+p+1,mid+1,r);\n  if tree[p+p]<=tree[p+p+1] then\n  begin\n    tree[p]:=tree[p+p];\n    id[p]:=id[p+p];\n  end else\n  begin\n    tree[p]:=tree[p+p+1];\n    id[p]:=id[p+p+1];\n  end;\nend;\nprocedure change(p:longint);//\u4fee\u6539\nbegin\n  if p=0 then\n    exit;\n  if tree[p+p]<=tree[p+p+1] then\n  begin\n    tree[p]:=tree[p+p];\n    id[p]:=id[p+p];\n  end else\n  begin\n    tree[p]:=tree[p+p+1];\n    id[p]:=id[p+p+1];\n  end;\n  change(p div 2);\nend;\nbegin\n  readln(n,m,k);\n  readln(s,t);\n  inc(s);inc(t);\n  for i:=1 to m do\n  begin\n    readln(x,y,z);\n    inc(x);inc(y);\n    add(x,y,z);\n    add(y,x,z);\n  end;\n  inf:=1000000007;\n  for i:=1 to n do\n    for j:=0 to k do\n      d[i][j]:=inf;\n  d[s][0]:=0;\n  build(1,1,n*(k+1));\n  while tree[1]<inf do\n  begin\n    u:=id[1];\n    zty:=titititing(u);\n    tree[ss[zty]]:=inf;\n    change(ss[zty] div 2);\n    ll:=head[u.g];\n    while ll<>0 do\n    begin\n      v:=d1[ll];\n      cost:=d2[ll];\n      if d[u.g][u.h]+cost<d[v][u.h] then//\u7b2c\u4e00\u79cd\u60c5\u51b5\n      begin\n        d[v][u.h]:=d[u.g][u.h]+cost;\n        newnode.g:=v;\n        newnode.h:=u.h;\n        getnode:=titititing(newnode);\n        tree[ss[getnode]]:=d[v][u.h];\n        change(ss[getnode] div 2);\n      end;\n      if (u.h<k) and (d[u.g][u.h]<d[v][u.h+1]) then//\u7b2c\u4e8c\u79cd\u60c5\u51b5\n      begin\n        d[v][u.h+1]:=d[u.g][u.h];\n        newnode.g:=v;\n        newnode.h:=u.h+1;\n        getnode:=titititing(newnode);\n        tree[ss[getnode]]:=d[v][u.h+1];\n        change(ss[getnode] div 2);\n      end;\n      ll:=next[ll];\n    end;\n  end;\n  ans:=inf;\n  for i:=0 to k do\n    ans:=min(ans,d[t][i]);\n  writeln(ans);\nend.\n```",
        "postTime": 1534482637,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u5206\u5c42\u56fe\u7684\u6a21\u7248\u9898      \n\u4ec0\u4e48\u662f\u5206\u5c42\u56fe     \n\u5206\u5c42\u56fe--------\u53ef\u4ee5\u7406\u89e3\u4e3a\u6709\u591a\u4e2a\u5e73\u884c\u7684\u56fe     \n\u7b2ci\u5c42\u8868\u793a\u7528\u4e86i\u5f20\u514d\u8d39\u5377\u540e\u5230\u8fbe\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def     \n\u663e\u7136\uff0c\u53ef\u4ee5\u5728\u540c\u5c42\u8dd1\u6700\u77ed\u8def\uff0c\u800c\u4f4e\u5c42\u53ef\u4ee5\u5230\u9ad8\u5c42       \n\u8fd9\u5c31\u6ee1\u8db3\u4e86\u5728\u4e0d\u540c\u5c42\u95f4\u65e0\u540e\u6548\u6027\u7684\u62d3\u5c55    \n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8bbe\u72b6\u6001\n```\ndis[i][j]//\u8868\u793a\u5728\u7b2cj\u5c42\uff08\u7528j\u5f20\u514d\u8d39\u5377\uff09\u5230\u7b2ci\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\ndis[i][j]=Min(Min{dis[k][j]+value[k][i]},Min{dis[k][j-1]})\n//k\u4e3a\u4e0ei\u8054\u901a\u7684\u70b9\n```\n\u732e\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801:    \n```\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define ll long long\n\nstruct point{\n    ll d,id,dep;\n    bool operator <(const point &a)const{\n        return d>a.d;\n    }\n};\n\npriority_queue<point>q;\n\nll u[100005],v[100005],w[100005];\nll first[10005],next[100005];\nll tot=0;\n\ninline void addedge(ll a,ll b,ll c){\n    tot++;u[tot]=a,v[tot]=b,w[tot]=c;\n    next[tot]=first[a];first[a]=tot;\n}\n\nll dis[10005][15];\nll vis[10005][15];\nll n,m,k;\n\n//\u7ba1\u5b83\u5361\u4e0d\u5361spfa,dij+heap\u5e38\u89c4\u64cd\u4f5c\nll dijkstra(ll s,ll t){\n    memset(dis,0x3f,sizeof dis);\n    dis[s][0]=0;q.push({0,s,0});vis[s][0]=1;\n    while(!q.empty()){\n        point p=q.top();q.pop();\n        ll x=p.id,op=p.dep,d=p.d;\n        \n        if(d!=dis[x][op])continue;\n        vis[x][op]=1;\n        \n        for(int i=first[x];i;i=next[i]){\n            int y=v[i];\n            if(!vis[y][op]){\n\t\t\t\tif(dis[y][op]>dis[x][op]+w[i]){\n\t\t\t\t\tdis[y][op]=dis[x][op]+w[i];\n\t\t\t\t\tq.push({dis[y][op],y,op});\n\t\t\t\t}\n            }\n            if(op<k&&!vis[y][op+1]){\n            \tif(dis[y][op+1]>dis[x][op]){\n            \t\tdis[y][op+1]=dis[x][op];\n            \t\tq.push({dis[y][op+1],y,op+1});\n\t\t\t\t}\n\t\t\t}\n        }\n    }\n    return dis[t][k];\n}\n\nint main(){\n    scanf(\"%lld%lld%lld\",&n,&m,&k);\n    ll s,t;scanf(\"%lld%lld\",&s,&t);\n    for(ll i=1;i<=m;i++){\n        ll a,b,c;scanf(\"%lld%lld%lld\",&a,&b,&c);\n        addedge(a,b,c);addedge(b,a,c);\n    }\n    printf(\"%lld\",dijkstra(s,t));\n    return 0;\n}\n```",
        "postTime": 1541062598,
        "uid": 24685,
        "name": "IzumiSagiri",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u5361spfa\u554aQAQ\u2026\u2026\u5728\u5176\u4ed6\u5730\u65b9\u7528spfa\u90fd\u80fd\u8fc7\u7684\u8bf4\u2026\u2026\u5bb3\u5f97\u6211\u8981\u7528dijkstra\u91cd\u65b0\u6253\u4e00\u904d\u2026\u2026\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u56fe\u7684\u601d\u8def\u6765\u8003\u8651\u8fd9\u9053\u95ee\u9898\u3002\u9996\u5148\uff0c\u8fd9\u9053\u9898\u56e0\u4e3a\u6709k\u6b21\u514d\u8d39\u673a\u4f1a\uff0c\u6240\u4ee5\u4e0d\u80fd\u548c\u5e73\u5e38\u7684\u6700\u77ed\u8def\u4e00\u6837\u8003\u8651\uff0c\u56e0\u4e3a\u90a3\u6837\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u5224\u5b9a\u54ea\u4e9b\u8fb9\u5e94\u8be5\u514d\u8d39\u3002\n\n\u65e2\u7136\u65e0\u6cd5\u4ee5\u57ce\u5e02\u4e3a\u70b9\uff0c\u90a3\u6211\u4eec\u6362\u4e2a\u601d\u8def\uff0c\u4ee5\u6bcf\u4e00\u4e2a\u72b6\u6001\u4e3a\u70b9\u3002\u8bbe\uff08x+i\u4e58n\uff09\u8868\u793a\u4e00\u4e2a\u8282\u70b9\uff0cx\u4e3a\u57ce\u5e02\u7f16\u53f7\uff0ci\u4e3a\u7528\u4e86i\u6b21\u514d\u8d39\u673a\u4f1a\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\uff08x+i\u4e58n\uff09\u5411\uff08y+i\u4e58n\uff09\u8fde\u4e00\u6761\u957f\u5ea6\u4e3az\u7684\u8fb9\uff0c\u4ece\uff08x+i\u4e58n\uff09\u5411\uff08x+\uff08i+1\uff09\u4e58n\uff09\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u8fb9\u3002\u8fd9\u5c31\u53d8\u6210\u4e00\u9053N\uff08k+1\uff09\u4e2a\u70b9\u7684\u56fe\u3002\u5728\u8fd9\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa1\u5230\uff08x+i\u4e58k\uff09\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u5373\u4e3a\u6240\u6c42\u7684\u7b54\u6848\n\n\u6e29\u99a8\u63d0\u793a\uff0c\u8bf7\u4e0d\u8981\u7528spfa\uff0c\u7528\u5806\u4f18\u5316\u7684dijkstra\uff0c\u5426\u5219\u2026\u2026\n\nps\uff1a\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u4e58\u53f7\u6253\u4e0d\u51fa\u6765\u2026\u2026\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\uff0c\u4e0a\u4ee3\u7801\uff08\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u5173\u5fc3\u8fd9\u4e2a\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n#include<cstring>\n#define a(a,b,c) for(int a=b;a<=c;a++)\n#define b(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\ntypedef long long LL;\nconst int N=110050,M=2100050,INF=0x3f3f3f3f;\nstruct ab{\n    int y,z;\n};\nint ver[M],edge[M],Next[M],head[N],used[N],d[N];\nint n,m,k,s,t,tot;\nbool operator < (ab i,ab j)\n{\n\tif((i.z-1)/n!=(j.z-1)/n) return (i.z-1)/n>(j.z-1)/n;\n\treturn i.z>j.z;\n    //\u6ce8\u610f\uff0c\u5806\u91cc\u8981\u4f18\u5148\u4f7f\u7528\u7684\u514d\u8d39\u6b21\u6570\u5c11\u7684\uff0c\u518d\u8003\u8651\u8fb9\u6743\uff0c\u5426\u5219\u4f1aWA\n}\nvoid add(int x,int y,int z)\n{\n    ver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n    return;\n}\nvoid kruskal(int s)\n{\n    priority_queue<ab> q;\n    q.push(ab{s,0});\n    memset(d,0x3f,sizeof(d));\n    d[s]=0;\n    while(!q.empty())\n    {\n        int x=q.top().y;\n        q.pop();\n        if(used[x]) continue;\n        used[x]=1;\n        for(int i=head[x];i;i=Next[i])\n        {\n            int y=ver[i],z=edge[i];\n            if(d[y]>d[x]+z)\n            {\n                d[y]=d[x]+z;\n                q.push(ab{y,d[y]});\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d%d\",&n,&m,&k,&s,&t),s++,t++;\n    //\u5c06\u9898\u76ee\u76840\u2014\u2014n-1\u6539\u4e3a1\u2014\u2014n\u5b58\u50a8\n    a(i,0,m-1)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        x++,y++;\n        a(j,0,k-1)\n        {\n            add(x+j*n,y+j*n,z);\n            add(y+j*n,x+j*n,z);\n            add(x+j*n,y+(j+1)*n,0);\n            add(y+j*n,x+(j+1)*n,0);\n            //\u5982\u4e0a\u9762\u6240\u8bf4\uff0c\u5c06\u65e0\u5411\u56fe\u8fde\u8fb9\n        }\n        add(x+k*n,y+k*n,z);\n        add(y+k*n,x+k*n,z);\n    }\n    kruskal(s);\n    //\u6709\u53ef\u80fd\u822a\u7ebf\u603b\u5171\u90fd\u4e0d\u8db3k\u6761\uff0c\u4ee5\u9632\u4e07\u4e00\uff08\u867d\u7136\u76f4\u63a5\u8f93\u51fa\u4e5f\u80fdA\u5c31\u662f\u4e86\u2026\u2026\uff09\n    b(i,k,0)\n    if(d[t+i*n]!=INF)\n    {\n        printf(\"%d\\n\",d[t+i*n]);\n        return 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1527853664,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u4e2a\u5206\u5c42\u56fe\n### \u7136\u800c\u6211\u548c\u697c\u4e0b\u7684\u90a3\u4f4d\u505a\u5206\u5c42\u56fe\u7684\u65b9\u5f0f\u5e76\u4e0d\u4e00\u6837\n\n\u8bdd\u8bf4\u4e3a\u5565\u6709\u51e0\u4e2a\u70b9\u5361SPFA\u554a\uff0c\u53bbbzoj\u4e0a\u90fd9100ms\u8fc7\u4e86qwq\n\u9996\u5148\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684k\u5f88\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5224\u65ad\u7684inque\u548cvis\u6570\u7ec4\u76f4\u63a5\u5f00\u6210\u4e8c\u7ef4\u6570\u7ec4\u3002\n\n\u7136\u540e\u6211\u4eec\u6bcf\u4e00\u6b21\u677e\u5f1b\u65f6\u5148\u7528\u8fd9\u4e2a\u70b9\u53bb\u66f4\u65b0\u548c\u4ed6\u540c\u4e00\u5c42\u7684\u70b9\uff0c\u7136\u540e\u518d\u7528\u4ed6\u66f4\u65b0\u4e0b\u4e00\u5c42\u7684\u70b9\n\n\u800c\u4e14\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u8981\n```cpp\n F(i,0,k) \n     ans=min(ans,vis[i][go_t]);\n```\n\u56e0\u4e3a\u5728\u6bcf\u4e00\u5c42\u4e2d\u90fd\u627e\u5230t\u7684\u6700\u5c0f\u503c\uff08\u6700\u591ak\u6761\u514d\u8d39\uff09,\u4e3a\u4ec0\u4e48\u8981\u5728\u6bcf\u4e00\u5c42\u90fd\u627e\uff0c\u800c\u4e0d\u662f\u53ea\u5728\u6700\u540e\u4e00\u5c42\u5bfb\u627e\u5462\u3002\u5047\u8bbe\u6709\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c\u7531s--t\u7684\u6700\u5c11\u7684\u8def\u4e0a\u7684\u9014\u5f84\u6570\u76ee\u5c11\u4e8ek\u6761\uff0c\u90a3\u4e48\u5728k\u4e4b\u524d\u7684\u67d0\u4e00\u5c42\u4e0a\u5c31\u6709dis=0\uff0c\u4f46\u662f\u5982\u679c\u5fc5\u987b\u4f7f\u7528k\u6761\u8def\u5f84\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u627e\u7684\u4e00\u6761\u8def\u9014\u6570\u591a\u4e8ek\u7684\u8def\u6765\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u53ea\u7528\u7b2ck\u5c42\u7684dis\u81ea\u7136\u4e0d\u662f\u6b63\u786e\u7ed3\u679c\u4e86\n\n\u4e0b\u8fb9\u662f\u4ee3\u7801\uff1a \n```cpp\n\t#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#define K 11\n#define N 10000\n#define M 110000\n#define F(i,a,b) for(int i=a;i<=b;i++)\n#define G(i,a,b) for(int i=head[a];i;i=b[i].next)\n\nusing namespace std;\n\nint n,m,k,t,start,go_t;\nstruct Edge{\n    int to;\n    int data;\n    int next;\n}e[M];\nstruct Que{\n    int time,cur;\n    Que(int a,int b):time(a),cur(b){}\n \tQue(){}\n};\nint head[N],vis[K][N];\nbool inque[K][N];\nint ans=2147483647;\nqueue <Que> qu;\n\nvoid add (int x,int y,int z){\n    e[++t].to=y;\n    e[t].data=z;\n    e[t].next=head[x];\n    head[x]=t;\n    return;\n}\ninline void spfa (int x){\n    memset(vis,0x3f3f3f3f,sizeof(vis));\n    vis[0][x]=0;inque[0][x]=1;qu.push(Que(0,start));\n    while (!qu.empty()){\n        Que j=qu.front();\n        qu.pop();\n        inque[j.time][j.cur]=0;\n        G(i,j.cur,e){\n            int k=e[i].to;\n            if (vis[j.time][k]>vis[j.time][j.cur]+e[i].data){\n                vis[j.time][k]=vis[j.time][j.cur]+e[i].data;\n                if (!inque[j.time][k]){\n                    inque[j.time][k]=1;\n                    qu.push(Que(j.time,k));\n                }\n            }\n        }\n        if (j.time<k)\n         G(i,j.cur,e){\n         \tint k=e[i].to;\n         \tif (vis[j.time+1][k]>vis[j.time][j.cur]){\n         \t\tvis[j.time+1][k]=vis[j.time][j.cur];\n         \t\tif (!inque[j.time+1][k]){\n         \t\t\tinque[j.time+1][k]=1;\n         \t\t\tqu.push(Que(j.time+1,k));\n                 }\n             }\n         }\n    }\n    F(i,0,k) \n     ans=min(ans,vis[i][go_t]);\n    return;\n}\n\nint main(){\n    scanf (\"%d%d%d\",&n,&m,&k);\n    scanf (\"%d%d\",&start,&go_t);\n    F(i,1,m){\n        int x,y,z;\n        scanf (\"%d%d%d\",&x,&y,&z);\n        add (x,y,z);\n        add (y,x,z);\n    }\n    spfa(start);\n    printf (\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1526213952,
        "uid": 54047,
        "name": "\u516e\u6c34XiShui\u4e36",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "# \u5206\u5c42\u56fe\u6700\u77ed\u8def\n[\u8f6c\u8f7d\u5730\u5740](https://blog.csdn.net/Robin2321/article/details/103964365)\n\n\n - \u9898\u76ee [P4568\u98de\u884c\u8def\u7ebf](https://www.luogu.com.cn/problem/P4568)\n \n#### \u505a\u6cd5\n - \u9898\u76ee\u8bf4\u4e00\u5171\u6709k\u6b21\u514d\u8d39\u4e58\u5750\u673a\u4f1a\u3002\n - \u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u70b9\u90fd\u6709\u514d\u8d39\u901a\u5411\u4e0b\u4e00\u4e2a\u70b9\u7684\u4e00\u6761\u8def\uff0c\u5efak+1\u5c42\u56fe\u3002\n![](https://img-blog.csdnimg.cn/20200114184409834.png)\n - \uff08\u5f53\u7136\u8fd9\u91cc\u8981\u5efa\u53cc\u5411\u8fb9\uff09\u7b2c\u4e00\u884c\u662f\u7b2c\u4e00\u5c42\u56fe\uff0c\u7b2c\u4e8c\u884c\u662f\u7b2c\u4e8c\u5c42\u56fe\uff08\u6ce8\uff1a\u56e0\u4e3a\u7b2c\u4e00\u5c42\u6709n\u4e2a\u70b9\uff0c\u6240\u4ee5\u7b2c\u4e8c\u5c42\u8981\u4ecen+0\u5f00\u59cb\uff0c\u907f\u514d\u91cd\u590d\uff09\u7b2c\u4e00\u5c42\u8868\u793a\u4e0d\u6d88\u8017\u514d\u8d39\u6b21\u6570\uff0c\u7b2c\u4e8c\u5c42\u8868\u793a\u6d88\u8017\u4e00\u6b21\u514d\u8d39\u6b21\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c**\u7b2c i \u5c42\u8868\u793a\u6d88\u8017 i-1 \u6b21\u514d\u8d39\u6b21\u6570**\u3002\n - \u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8d77\u70b90\u5230\u7ec8\u70b9 n , 2n , 3n\uff0c. . .\uff0c(k+1)*n \u7684\u6700\u77ed\u8def\u6765\u627e\u5230**\u6d88\u8017k\u6b21\u514d\u8d39\u673a\u4f1a\u540e\u7684\u6700\u77ed\u8def**\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u82b1\u8d39\u3002\n - `ans=min(dis[n],dis[2*n],dis[3*n],...,dis[(k+1)*n]);`\n ##### \u4e3e\u4e2a\u4f8b\u5b50\n ![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200118103349217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JvYmluMjMyMQ==,size_16,color_FFFFFF,t_70)\n`\n - `dis[2]`\u8868\u793a1\u52302\u7684\u6700\u77ed\u8def,`dis[5]`\u8868\u793a1\u52305\u7684\u6700\u77ed\u8def\uff1b\n - `dis[10]`\u8868\u793a1\u523010\u7684\u6700\u77ed\u8def\uff0c\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c**\u6709\u4e14\u53ea\u6709**\u7ecf\u8fc7\u4e86**1**\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u624d\u80fd\u523010\u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u82b1\u8d39\u4e86**1**\u6b21\u514d\u8d39\u673a\u4f1a\uff1b\n -  \u540c\u6837\uff0c`dis[15]`\u8868\u793a1\u523015\u7684\u6700\u77ed\u8def\uff0c\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c**\u6709\u4e14\u53ea\u6709**\u7ecf\u8fc7\u4e86**2**\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u624d\u80fd\u523015\u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u82b1\u8d39\u4e86**2**\u6b21\u514d\u8d39\u673a\u4f1a\uff1b\n - \u540c\u7406\uff0c`dis[20]`\u8868\u793a1\u523020\u7684\u6700\u77ed\u8def\uff0c\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c**\u6709\u4e14\u53ea\u6709**\u7ecf\u8fc7\u4e86**3**\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u624d\u80fd\u523020\u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u82b1\u8d39\u4e86**3**\u6b21\u514d\u8d39\u673a\u4f1a\uff1b\n - \u4ee5\u6b64\u7c7b\u63a8\uff0c`dis[25]`\u8868\u793a1\u523025\u7684\u6700\u77ed\u8def\uff0c\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c**\u6709\u4e14\u53ea\u6709**\u7ecf\u8fc7\u4e86**4**\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u624d\u80fd\u523025\u8fd9\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u82b1\u8d39\u4e86**4**\u6b21\u514d\u8d39\u673a\u4f1a\uff1b\n - \u6240\u4ee5\uff0c\u663e\u7136\uff0c`ans=min(dis[5],dis[10],dis[15],dis[20],dis[25]);`**\uff08\u8fd9\u91cc\u8981\u770bk\u662f\u591a\u5c11\uff0c\u6bd4\u8f83k+1\u4e2a\u6570\u7684\u5927\u5c0f\uff09\u3002**\n\n\n##### \u4e0b\u9762\u770b\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define maxn 900005//\u56e0\u4e3a\u8981\u5efan*(k+1)\u4e2a\u70b9 \n#define maxm 90000005//\u56e0\u4e3a\u6709\u597d\u591a\u6761\u8fb9\uff08\u5f53\u7136\u6211\u8fd9\u91cc\u592a\u5927\u4e86\u70b9\uff09 \n#define inf 0x7fffffff\n#define ri register int\nusing namespace std;\npriority_queue<pair<int,int> >q;//\u9a9a\u64cd\u4f5c \nint to[maxm];\nint weight[maxm];\nint next[maxm];\nint head[maxn];\nint dis[maxn];\nint vis[maxn];\nint n,m,K,s,t,cnt;\ninline int read()//\u5feb\u8bfb \n{\n\tri x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0') \n\t{\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\ninline void add_edge(int u,int v,int w)//\u5efa\u8fb9 \n{\n\tto[cnt]=v;\n\tweight[cnt]=w;\n\tnext[cnt]=head[u];\n\thead[u]=cnt;\n\tcnt++;\n}\nvoid Dijkstra(int s,int t)//\u8fd9\u91cc\u548c\u6700\u77ed\u8def\u4e00\u6bdb\u4e00\u6837 \n{\n\tfor(ri i=0;i<=maxn;++i) dis[i]=inf;//\u6bcf\u4e2a\u70b9\u90fd\u8981\u521d\u59cb\u5316 \n\tdis[s]=0;\n\tq.push(make_pair(-dis[s],s));\n\twhile(q.size())\n\t{\n\t\tri k=q.top().second;\n\t\tq.pop();\n\t\tif(vis[k]) continue;\n\t\tvis[k]=1;\n\t\tfor(ri i=head[k];i!=-1;i=next[i])\n\t\t{\n\t\t\tri v=to[i],w=weight[i];\n\t\t\tif(!vis[v]&&dis[k]+w<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[k]+w;\n\t\t\t\tq.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read(),K=read();\n\ts=read(),t=read();\n\tmemset(head,-1,sizeof(head));\n\tfor(ri i=1,u,v,w;i<=m;++i)\n\t{\n\t\tu=read(),v=read(),w=read();\n\t\tfor(ri j=0;j<=K;++j)\n\t\t{\n\t\t\tadd_edge(u+n*j,v+n*j,w);//\u5efa\u5f53\u524d\u5c42\u7684\u56fe \n\t\t\tadd_edge(v+n*j,u+n*j,w);\n\t\t\tif(j!=K)//\u7b2cK\u5c42\u6ca1\u6709\u4e0b\u4e00\u5c42 \n\t\t\t{\n\t\t\t\tadd_edge(u+n*j,v+n*(j+1),0);//\u5efa\u4e0b\u4e00\u5c42\u7684\u56fe \n\t\t\t\tadd_edge(v+n*j,u+n*(j+1),0);\n\t\t\t}\n\t\t}\n\t}\n\tDijkstra(s,t);\n\tri min=inf;\n\tfor(ri i=0;i<=K;++i)\n\t\tif(dis[t+n*i]<min) min=dis[t+n*i];//\u627eK+1\u5c42\u4e2d\u6700\u5c0f\u7684\u503c \n\tprintf(\"%d\",min);\n\treturn 0;\n}\n```\n\n - \u770b\u4e0d\u61c2\u6211\u7684\u4ee3\u7801\u7684\u8bf7\u770b[\u8fd9\u91cc](https://blog.csdn.net/Robin2321/article/details/103979475)\u3002\n",
        "postTime": 1579150758,
        "uid": 169844,
        "name": "w2321",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P4568\u98de\u884c\u8def\u7ebf"
    },
    {
        "content": "### \u5206\u5c42\u56fe\u6700\u77ed\u8def\u6a21\u677f\n\u677f\u5b50\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u5927\u5bb6\u8ba8\u8bba\u5f97\u90fd\u5dee\u4e0d\u591a\u4e86\uff0c\u6765\u8bf4\u4e00\u8bf4\u4e00\u4e9b\u7ec6\u8282\u548c\u542f\u793a\u3002  \n\u9996\u5148\uff0c\u672c\u849f\u84bb\u5728\u63a5\u89e6\u5230\u8fd9\u4e2a\u7684\u65f6\u5019\u5c31\u611f\u89c9\u5f88\u591a\u7684\u4ee3\u7801\u5e76\u4e0d\u662f\u7279\u522b\u5b8c\u5584\u3002\u4f8b\u5982\u9488\u5bf9dis[v][p]\u7684\u66f4\u65b0\u53d6\u5230\u7684\u6700\u5c0f\u503c\u4e0d\u4e00\u5b9a\u5c0f\u4e8edis[v][t], \u5176\u4e2dt < p\u3002\u8fd9\u4e0d\u7b26\u5408\u8d2a\u5fc3\u539f\u7406\u3002\u5176\u539f\u56e0\u662f,\u6211\u4eec\u7528dijkstra\u6216spfa\u7ef4\u62a4dp\u65f6\u8981\u6c42\u4e0d\u91cd\u590d\u8d70\u8fc7\u8def\uff0c\u56e0\u800c\u5927\u591a\u6570\u4ee3\u7801\u8dd1\u51fa\u6765\u7684\u662f\u4e25\u683c\u4f7f\u7528p\u6b21\u673a\u4f1a\u53d6\u5230\u7684\u6700\u4f18\u503c\uff0c\u800c\u4e0d\u662f\u81f3\u591a\u4f7f\u7528p\u6b21\u673a\u4f1a\u53d6\u5f97\u7684\u3002\u8fd9\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u4e5f\u7b97\u662f\u4e00\u79cd\u9650\u5236\u6761\u4ef6\u3002\u53d1\u73b0\u672c\u9898\u6240\u8c13\u7684\"hack\"\u6570\u636e\u5c31\u662f\u57fa\u4e8e\u8fd9\u4e2a\u539f\u7406\u5f04\u51fa\u6765\u7684(\u5176\u5b9e\u5f53\u521d\u521d\u5b66\u7684\u65f6\u5019\u5c31\u8bbe\u8ba1\u8fc7\u7c7b\u4f3c\u7684\u4e1c\u897f)\u3002  \n\u4e3a\u4e86\u53d6\u5f97\u5408\u7406\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u8003\u8651\u7528dis[v][p]\u66f4\u65b0dis[v][z],p<z<=k\u3002\u5177\u4f53\u7684\uff0c\u53ef\u4ee5\u5728dij\u8fc7\u7a0b\u4e2d\u7ef4\u62a4(\u4f46\u662f\u590d\u6742\u5ea6\u8f83\u9ad8)\u3002\u5f53\u7136\u672c\u9898\u53ea\u662f\u6c42\u5230\u67d0\u70b9\u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u4e0d\u5fc5\u8981\u8fd9\u4e48\u9ebb\u70e6\uff0c\u53ea\u8981\u5728\u8f93\u51fa\u524d\u626b\u63cf\u6240\u6709\u7684dis[e][p]\uff0ce\u4e3a\u7ed3\u675f\u70b9,0<= p <= k,\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define pii pair<int, int>\n#define pip pair<int, pii>\n\nusing namespace std;\n\nint head[10010], ver[100010], wei[100010], nex[100010], d[10010][20], tot, n, k, s, e;\n\ninline void add(int u, int v, int w) {\n    ver[tot] = v; wei[tot] = w; nex[tot] = head[u]; head[u] = tot++;\n}\n\npriority_queue<pip> q;\n\nvoid dijkstra(int s) {\n    d[s][0] = 0;\n    q.push(make_pair(0, make_pair(s, 0)));\n    while(!q.empty()) {\n        int cur = q.top().second.first, p = q.top().second.second, de = -q.top().first; q.pop();\t\n        if(de > d[cur][p]) continue;\n        for(int i = head[cur]; i != -1; i = nex[i]) {\n            int u = cur, v = ver[i], w = wei[i];\n            if(d[v][p] > d[u][p] + w) {\n                d[v][p] = d[u][p] + w; q.push(make_pair(-d[v][p], make_pair(v, p)));\n            }\n            if(p < k && d[v][p+1] > d[u][p]) {\n                d[v][p+1] = d[u][p]; q.push(make_pair(-d[v][p+1], make_pair(v, p+1)));\n            }\n        }\n    }\n}\n\nint main() {\n    int m, u, v, w;\n    scanf(\"%d %d %d %d %d\", &n, &m, &k, &s, &e);\n    memset(head, -1, sizeof(head));\n    while(m--) {\n        scanf(\"%d %d %d\", &u, &v, &w);\n        add(u, v, w); add(v, u, w);\n    }\n    memset(d, 0x3f, sizeof(d));\n    dijkstra(s);\n    int res = 0x3f3f3f3f;\n    for(int i = 0; i <= k; i++) res = min(res, d[e][i]);\n    printf(\"%d\\n\", res);\n    return 0;\n}\n```\n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)",
        "postTime": 1551368591,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u6ca1\u6709\u5361SPFA\u554a\uff1f\uff1f\u52a0\u4e00\u4e2a\u7384\u5b66\u4f18\u5316\u5c31\u8fc7\u4e86\u554a23333\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4dis\uff0cdis[i][j]\u8868\u793a\u5230\u7b2ci\u4e2a\u70b9\uff0c\u7528\u4e86j\u6b21\u514d\u8d39\u673a\u4f1a\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u6700\u77ed\u8def\uff0c\u7b2c\u4e00\u6b21\u8dd1\u5230ed\u65f6\uff0c\u4e00\u5b9a\u662f\u6700\u77ed\u8def\u3002\uff08STL\u5efa\u56fe\u7248\u7684SPFA\uff09\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=1e4+5;\nconst int M=1e5+10;\nint st,ed;\nint n,m,kpath;\nint dis[N][15],vis[N][15];\nstruct edge\n{\n\tint to,cost;\n}add;\nvector<edge>v[M];\nstruct fast\n{\n\tint to,cost,k;\n\tbool friend operator < (fast a,fast b)\n\t{\n\t\treturn a.cost>b.cost; \n\t} \n}now,t;\npriority_queue<fast>q;\nvoid SPFA()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tnow.to=st;now.cost=0;now.k=0;\n\tq.push(now);dis[st][0]=0;\n\twhile (q.size())\n\t{\n\t\tnow=q.top();q.pop();\n\t\tif (vis[now.to][now.k]) continue;\n\t\tvis[now.to][now.k]=1;\n\t\tif (now.to==ed) {cout<<now.cost;return ;}\n\t\tfor (int i=0;i<v[now.to].size();i++)\n\t\t{\n\t\t\tint go=v[now.to][i].to;\n\t\t\tint pay=v[now.to][i].cost;\n\t\t\tif (now.k<kpath&&!vis[go][now.k+1]&&dis[go][now.k+1]>now.cost)\n\t\t\t{\n\t\t\t\tdis[go][now.k+1]=now.cost;\n\t\t\t\tt.to=go;t.cost=now.cost;t.k=now.k+1;\n\t\t\t\tq.push(t);\n\t\t\t}\n\t\t\tif (dis[go][now.k]>now.cost+pay&&!vis[go][now.k])\n\t\t\t{\n\t\t\t\tdis[go][now.k]=now.cost+pay;\n\t\t\t\tt.to=go;t.cost=dis[go][now.k];t.k=now.k;\n\t\t\t\tq.push(t);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&n,&m,&kpath,&st,&ed);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd.to=a;add.cost=c;v[b].push_back(add);\n\t\tadd.to=b;add.cost=c;v[a].push_back(add);\n\t}\n\tSPFA();\n\treturn 0;\n}\n\n```",
        "postTime": 1529050362,
        "uid": 71558,
        "name": "AcerMo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "### \u88f8\u7684\u5206\u5c42\u56fe\u2026\u2026\n\n------------\n\n[P4822](https://www.luogu.org/problem/P4822)\n\n[P4568](https://www.luogu.org/problem/P4568)\n\n[P1948](https://www.luogu.org/problem/P1948)\n\n[P2939](https://www.luogu.org/problem/P2939) <--\u6bd2\u7624\uff0c\u5361\u6570\u7ec4\u5927\u5c0f\n\n### 4\u500d\u7ecf\u9a8c\uff01\n\n\n------------\n\n\u5c06\u4e0a\u4e0b\u4e24\u5c42\u4e4b\u95f4\u8fde\u4e0a\u6743\u503c\u4e3a0\u7684\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff01\n\n\u7136\u540e\u5c31\u662f\u5206\u5c42\u56fe\u5e38\u89c4\u64cd\u4f5c\u4e86\n\n\u6ce8\u610f\u7ec6\u8282\uff01\n\u7ec6\u8282\u5904\u6253 $ * $ \u53f7\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1500001;\nstruct st{\n    int dis,x;\n    st (const int a,const int b){\n        dis=a;\n        x=b;\n    }\n    bool operator < (const st a)const {\n        return dis>a.dis;\n    }\n};\npriority_queue <st> q;\nint n,m,cnt,s,t,k;\nint nxt[2*N],last[2*N],a[2*N],w[2*N];\nint dis[N];\nbool l[N];\nvoid add(int x,int y,int z){\n    nxt[++k]=last[x];\n    last[x]=k;\n    a[k]=y;\n    w[k]=z;\n}\nvoid dijkstra(int s){\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push(st(0,s));\n    while (!q.empty()){\n        while (!q.empty()&&l[q.top().x]) q.pop();\n        if (q.empty()) break;\n        int x=q.top().x;q.pop();\n        l[x]=1;\n        for (int i=last[x];i;i=nxt[i]){\n            int y=a[i];\n            if (dis[y]>dis[x]+w[i]){\n                dis[y]=dis[x]+w[i];\n                q.push(st(dis[y],y));\n            }\n        }\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld%lld%lld%lld\",&n,&m,&cnt,&s,&t);\n    // for (int i=0;i<n;i++) last[i]=-1;\n    for (int x,y,z,i=1;i<=m;i++){\n        scanf(\"%lld%lld%lld\",&x,&y,&z);\n        add(x,y,z);add(y,x,z);\n        for (int j=1;j<=cnt;j++){\n            add(x+(j-1)*n,y+j*n,0);\n            add(y+(j-1)*n,x+j*n,0);\n            add(x+j*n,y+j*n,z);\t\t\t\t\t\t//*\n            add(y+j*n,x+j*n,z);\t\t\t\t\t\t//*\n        }\n    }\n    for (int i=1;i<=cnt;i++) add(t+(i-1)*n,t+i*n,0);\t//*\n    dijkstra(s);\n    printf(\"%lld\",dis[t+cnt*n]);\n    return 0;\n}\n```\n",
        "postTime": 1571575977,
        "uid": 23170,
        "name": "\u56de\u9752\u7edd\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## [P4568 [JLOI2011]\u98de\u884c\u8def\u7ebf](https://www.luogu.org/problem/P4568)\n\n\u611f\u89c9\u9898\u89e3\u4f1a\u6c89\u5e95\u5427\u3002\u3002~~\u5982\u679c\u89c9\u5f97\u597d\u5c31\u8d5e\u4e00\u4e2a\u5427qwq~~\n\n\u5206\u5c42\u56fe\u6a21\u677f\u9898\uff0c\u76f8\u4f3c\u7684\u9898\u8fd8\u6709[P4822 [BJWC2012]\u51bb\u7ed3](https://www.luogu.org/problem/P4822)\uff0c[\nP2939 [USACO09FEB]\u6539\u9020\u8defRevamping Trails](https://www.luogu.org/problem/P2939),\u5176\u5b9e\u505a\u60ef\u4e86\u4e5f\u5c31\u4e0d\u96be\u4e86\u3002\u3002\n\n\u4e3a\u4ec0\u4e48\u6709\u8fd9\u7bc7\u9898\u89e3\uff1f\n\n- ~~\u611f\u89c9\u5199\u7684\u6bd4\u8f83\u7b80\u6d01\u6e05\u6670~~\n\n- \u7ebf\u6bb5\u6811\u4f18\u5316\u6700\u77ed\u8def\n\n### \u4e00\u3001\u5806\u4f18\u5316dijkstra\n\n 652ms /  25.58MB /  1.31KB C++\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int MAXN=110005,MAXM=2500001;\nstruct edge {\n\tint to,dis,next;\n} e[MAXM];\nint n,m,k,s,t,head[MAXN],dis[MAXN],cnt;\nbool vis[MAXN];\nstruct node {\n\tint dis,pos;\n\tbool operator <(const node &x)const {\n\t\treturn x.dis<dis;\n\t}\n};\npriority_queue<node> q;\ninline void add_edge(int u,int v,int d) {\n\te[++cnt].dis=d;\n\te[cnt].to=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\ninline void dijkstra() {\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[s]=0;\n\tq.push((node) {\n\t\t0,s\n\t});\n\twhile(!q.empty()) {\n\t\tnode tmp=q.top();\n\t\tq.pop();\n\t\tint x=tmp.pos,d=tmp.dis;\n\t\tif (vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor (int i=head[x]; i; i=e[i].next) {\n\t\t\tint y=e[i].to;\n\t\t\tif (dis[y]>dis[x]+e[i].dis) {\n\t\t\t\tdis[y]=dis[x]+e[i].dis;\n\t\t\t\tif (!vis[y])\n\t\t\t\t\tq.push((node) {\n\t\t\t\t\tdis[y],y\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%d%d\",&n,&m,&k,&s,&t);\n\tfor (register int i=0; i<m; i++) {\n\t\tregister int u,v,d;\n\t\tscanf(\"%d%d%d\",&u,&v,&d);\n\t\tadd_edge(u,v,d),add_edge(v,u,d);\n\t\tfor(int j=1; j<=k; ++j) {\n\t\t\tadd_edge(u+(j-1)*n,v+j*n,0);\n\t\t\tadd_edge(v+(j-1)*n,u+j*n,0);\n\t\t\tadd_edge(u+j*n,v+j*n,d);\n\t\t\tadd_edge(v+j*n,u+j*n,d);\n\t\t}//\u6bcf\u5c42\u4e4b\u95f4\u5efa\u8fb9\n\t}\n\tfor(int i=1; i<=k; ++i) {\n\t\tadd_edge(t+(i-1)*n,t+i*n,0);//\u6bcf\u5c42\u7ec8\u70b9\u8fde\u8fb9\uff08\u4e0d\u4e00\u5b9a\u7528K\u6b21\u6700\u4f18\uff09\n\t}\n\tdijkstra();\n\tprintf(\"%d\",dis[k*n+t]);\n\treturn 0;\n}\n```\n\n### \u4e8c\u3001\u7ebf\u6bb5\u6811dijkstra\n\n 523ms /  26.64MB /  1.41KB C++\n \n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=110005,M=2500001;\nint n,m,kth,cnt,s,t;\nint tr[N<<2],h[N],nxt[M],to[M],w[M],dis[N];\n#define R register int\ninline int rd() {\n\tint t=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9') c=getchar();\n\twhile(c>='0' && c<='9') t=(t<<3)+(t<<1)+(c^48),c=getchar();\n\treturn t;\n}\ninline void add_edge(int u,int v,int _w) {\n\tnxt[++cnt]=h[u],to[cnt]=v,w[cnt]=_w,h[u]=cnt;\n}\n#define min(a,b) (dis[a]<dis[b]? a:b)\ninline void modify(int o,int l,int r,int pos,int val) {\n\tif (l==r) {\n\t\ttr[o]=val;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif (pos<=mid) modify(o<<1,l,mid,pos,val);\n\telse modify(o<<1|1,mid+1,r,pos,val);\n\ttr[o]=min(tr[o<<1],tr[o<<1|1]);\n}\ninline void dijkstra() {\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[s]=0,modify(1,1,kth*n,s,s);//\u7ebf\u6bb5\u6811\u5b58\u70b9\u7684\u7f16\u53f7\uff0c\u7136\u540e\u901a\u8fc7\u6bd4\u8f83dis\u4e0a\u4f20\n\tfor (R t=1,u,v; t<kth*n; t++) {\n\t\tu=tr[1],modify(1,1,kth*n,u,0);//dis0\u59cb\u7ec8\u4fdd\u63010x3f\uff0c\u4f5c\u4e3a\u5220\u9664\u64cd\u4f5c\n\t\tfor (R i=h[u]; i; i=nxt[i])\n\t\t\tif (dis[v=to[i]]>dis[u]+w[i])\n\t\t\t\tdis[v]=dis[u]+w[i],modify(1,1,kth*n,v,v);\n\t}\n}\nint main() {\n\tn=rd(),m=rd(),kth=rd(),s=rd()+1,t=rd()+1;//\u7f16\u53f7\u52a01\uff0c\u7a7a\u51fadis0\u7684\u4f4d\u7f6e\n\tfor (R i=1,u,v,_w; i<=m; i++) {\n\t\tu=rd()+1,v=rd()+1,_w=rd();\n\t\tadd_edge(u,v,_w),add_edge(v,u,_w);\n\t\tfor(int j=1; j<=kth; ++j) {\n\t\t\tadd_edge(u+(j-1)*n,v+j*n,0);\n\t\t\tadd_edge(v+(j-1)*n,u+j*n,0);\n\t\t\tadd_edge(u+j*n,v+j*n,_w);\n\t\t\tadd_edge(v+j*n,u+j*n,_w);\n\t\t}\n\t}\n\tfor (R i=1;i<=kth;i++)\n\t add_edge(t+(i-1)*n,t+i*n,0);\n\tkth++;\n\tdijkstra();\n\tprintf(\"%d\",dis[(kth-1)*n+t]);\n\treturn 0;\n}\n```\n\n\u4e09\u3001DP\u6700\u77ed\u8def\n\n 296ms /  2.26MB /  1.15KB C++\n \n \u8fd9\u79cd\u65b9\u6cd5\u6700\u5feb\uff0c\u800c\u4e14\u6570\u7ec4\u7684\u8303\u56f4\u6bd4\u8f83\u597d\u786e\u5b9a\n \n \u6ce8\u610fdis\uff0cvis\uff0cnode\u662f\u4e8c\u7ef4\uff0c\u8981\u8bb0\u5f55\u70b9\u7684\u7f16\u53f7\u548c\u6240\u7528\u6b21\u6570\n \n ```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct edge {\n\tint v,w,h;\n} e[100010];\nint n,m,K,s,t,cnt,ans,h[10010],d[10010][11];\nbool vis[10010][11];\nstruct node {\n\tint u,k;\n\tbool operator <(const node &x) const {\n\t\treturn d[u][k]>d[x.u][x.k];\n\t}\n};\ninline void add(int u,int v,int w) {\n\te[++cnt]=(edge) {v,w,h[u]},h[u]=cnt;\n}\ninline void dijkstra() {\n\tpriority_queue<node> q;\n\tmemset(d,0x3f,sizeof d);\n\tq.push((node) {\n\t\ts,0\n\t}),d[s][0]=0,vis[s][0]=1;//s\u70b9\uff0c\u7528\u4e860\u6b21\n\twhile(!q.empty()) {\n\t\tnode x=q.top();\n\t\tq.pop(),vis[x.u][x.k]=0;\n\t\tfor (register int i=h[x.u],v,u,k; i; i=e[i].h) {\n\t\t\tif (d[v=e[i].v][k=x.k]>d[u=x.u][k]+e[i].w) {\n\t\t\t\td[v][k]=d[u][k]+e[i].w;\n\t\t\t\tif (!vis[v][k]) q.push((node) {\n\t\t\t\t\tv,k\n\t\t\t\t}),vis[v][k]=1;\n\t\t\t}//\u66f4\u65b0\u4e0d\u4f7f\u7528\u7684\u60c5\u51b5\uff0ck\u4e0d\u53d8\n\t\t\tif (d[v][k+1]>d[u][k] && k<K) {\n\t\t\t\td[v][k+1]=d[u][k];\n\t\t\t\tif (!vis[v][k+1] && k<K) q.push((node) {\n\t\t\t\t\tv,k+1\n\t\t\t\t}),vis[v][k+1]=1;\n\t\t\t}//\u66f4\u65b0\u4f7f\u7528\u7684\u60c5\u51b5\uff0ck\u52a01\u4e14\u5c0f\u4e8eK\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%d%d\",&n,&m,&K,&s,&t);\n\tfor (int i=1,u,v,w; i<=m; i++)\n\t\tscanf(\"%d%d%d\",&u,&v,&w),add(u,v,w),add(v,u,w);\n\tdijkstra();\n\tans=1e9;\n\tfor (int i=0; i<=K; i++)\n\t\tans=ans<d[t][i]? ans:d[t][i];//\u7528\u51e0\u6b21\u6700\u4f18\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1565602920,
        "uid": 68706,
        "name": "Randolph\u3001",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4568 \u3010\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u5206\u5c42\u56fe\u6700\u77ed\u8def\u9898\n\n\u8003\u8651\u628a\u56fe\u5206\u6210 $k$ \u5c42\uff08\u5c31\u662f\u6bcf\u4e2a\u70b9\u590d\u5236 $k$ \u6b21\uff09\uff0c\u7b2c $i$ \u5c42\u8868\u793a\u5f53\u524d\u5df2\u7ecf\u4f7f\u7528\u4e86 $i$ \u6b21\u514d\u8d39\u673a\u4f1a\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06**\u6bcf\u4e00\u5c42\u56fe**\u90fd\u6309\u7167\u7ed9\u5b9a\u7684\u65b9\u5f0f\u8fde\u8fb9\u3002\u5982 $a$ \u70b9\u53ef\u4ee5\u901a\u5411 $b$ \u70b9\uff0c\u957f\u5ea6\u4e3a $c$ \uff0c\u90a3\u4e48\n\n1. \u5f53\u524d\u5c42 $a$ \u901a\u5411\u5f53\u524d\u5c42 $b$ \u82b1\u8d39\u4e3a $c$ \u3002\uff08 \u4e0d\u4f7f\u7528 \uff09\n\n2. \u5f53\u524d\u5c42 $b$ \u901a\u5411\u5f53\u524d\u5c42 $a$ \u82b1\u8d39\u4e3a $c$ \u3002\n\n3. \u7531\u5f53\u524d\u5c42\u7684 $a$ \u901a\u5f80\u4e0b\u4e00\u5c42 $b$ \uff0c\u514d\u8d39\u3002\uff08 \u4f7f\u7528\u4e00\u6b21\u514d\u8d39\u673a\u4f1a \uff09\n\n4. \u7531\u5f53\u524d\u5c42\u7684 $b$ \u901a\u5f80\u4e0b\u4e00\u5c42 $a$ \uff0c\u514d\u8d39\u3002\n\n\u56e0\u4e3a\u53ea\u6709 $k$ \u5c42\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u80fd\u4f7f\u7528 $k$ \u6b21\u514d\u8d39\u673a\u4f1a\u3002\n\n\u7136\u540e\u8dd1 $dijkstra +$ \u5806\u4f18\u5316\uff0c\u5728\u6bcf\u4e00\u5c42\u7684 $t$ \u70b9\u5904\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u53cc\u500d\u7ecf\u9a8c\u524d\u5f80[P2939 [USACO09FEB]\u6539\u9020\u8defRevamping Trails](https://www.luogu.org/problemnew/show/P2939)\n\n## Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=1000005; // \u9632 RE \u6570\u7ec4\u5927\u5c0f\nstruct Edge\n{\n\tint nxt,to,w;\n}e[maxn*10];\nstruct node\n{\n\tint id,dis;\n\tfriend bool operator<(node x,node y) // \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\t{\n\t\treturn x.dis>y.dis;\n\t}\n};\npriority_queue<node>q;\nint n,m,k,s,t,a,b,c,cnt=0,ans=0x3f3f3f3f,vis[maxn],dis[maxn],head[maxn];\nvoid add(int x,int y,int w) // \u90bb\u63a5\u8868\u5b58\u56fe\n{\n\te[++cnt]=(Edge){head[x],y,w};\n\thead[x]=cnt;\n}\nvoid dijkstra() // \u6700\u77ed\u8def\uff08\u4e0d\u4f1a\u7684\u8bf7\u53f3\u8f6c\u5355\u6e90\u6700\u77ed\u8def\u6a21\u677f\uff09\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push((node){s,0});\n\tdis[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint a=q.top().id;\n\t\tq.pop();\n\t\tif(vis[a]) continue;\n\t\tvis[a]=1;\n\t\tfor(int i=head[a];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[a]+e[i].w) \n\t\t\t{\n\t\t\t\tdis[v]=dis[a]+e[i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tq.push((node){v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&n,&m,&k,&s,&t);\n\ts++; t++; // \u4e2a\u4eba\u4e60\u60ef\u4ece1\u5f00\u59cb\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\ta++; b++;\n\t\tfor(int j=0;j<=k;j++) // \u5faa\u73af\u5c42\u6570\n\t\t{\n\t\t\tadd(a+j*n,b+j*n,c); // \u6bcf\u4e00\u5c42\u90fd\u6309\u7167\u7ed9\u5b9a\u65b9\u5f0f\u8fde\u8fb9\n\t\t\tadd(b+j*n,a+j*n,c);\n\t\t\tif(j<k)\n\t\t\t{\n\t\t\t\tadd(a+j*n,b+(j+1)*n,0); // \u5f53\u524da -> \u4e0b\u4e00\u5c42b\n\t\t\t\tadd(b+j*n,a+(j+1)*n,0); // \u5f53\u524db -> \u4e0b\u4e00\u5c42a\n\t\t\t}\n\t\t}\n\t}\n\tdijkstra();\n\tfor(int i=0;i<=k;i++)\n\t\tans=min(ans,dis[i*n+t]); // \u7edf\u8ba1\u7b54\u6848\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1554896105,
        "uid": 138280,
        "name": "lxy__",
        "ccfLevel": 6,
        "title": "P4568  [JLOI2011]\u98de\u884c\u8def\u7ebf"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P4568)\u770b\u9898\u76ee\u3002 \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u8003\u8651\u7279\u6b8a\u60c5\u51b5\uff08$k=1$\uff09\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u8fc7\u4e8e\u7ecf\u5178~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u4ece$1$\u5f00\u59cb\u6c42\u51fa\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u6570\u7ec4$f[]$\uff0c\u4ece$n$\u5f00\u59cb\u6c42\u51fa\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u6570\u7ec4$g[]$\uff08$g$\u5f53\u7136\u662f\u5728\u53cd\u56fe\u4e0a\u9762\u8dd1\u51fa\u6765\u7684\uff09\u3002\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9$(u,v)$\uff0c\u5047\u5982\u5b83\u5c31\u662f\u90a3\u6761\u4e0d\u82b1\u94b1\u7684\u8fb9\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u82b1\u8d39\u5c31\u662f$f[u]+g[v]$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u800c\u73b0\u5728$k\\not=1$\u4e86\uff0c\u600e\u4e48\u505a\u5462\uff1f  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u91cd\u65b0\u8003\u8651$k=1$\uff0c\u6211\u4eec\u6362\u4e00\u4e2a\u601d\u8def\u3002\u8003\u8651$DP$\u3002\u72b6\u6001$f(u,0/1)$\u8868\u793a\u4ece$1$\u51fa\u53d1\uff0c\u5230\u8fbe$u$\u70b9\uff0c\u4e0d\u4f7f\u7528/\u4f7f\u7528\u7279\u6743\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u8f6c\u79fb\u65b9\u7a0b\u6bd4\u8f83\u7b80\u5355\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\\displaystyle f(u,0)=\\min_{(v,u)\\in E}\\{f(v,0)+w(v,u)\\},f(u,1)=\\min_{(v,u)\\in E}\\{\\min\\{f(v,0),f(v,1)+w(v,u)\\}\\}$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u679c\u539f\u56fe\u662f$DAG$\uff0c\u90a3\u4e48\u6211\u4eec\u5f53\u7136\u53ef\u4ee5$DP$\u3002\u4f46\u662f\u539f\u56fe\u4e0d\u662f\u554a......\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u5f97\u5efa\u56fe\u8dd1$Dijkstra$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u600e\u4e48\u5efa\u5462\uff1f\u8003\u8651\u5efa\u4e24\u4e2a\u56fe\uff0c\u7b2c\u4e00\u4e2a\u8868\u793a\u6ca1\u6709\u4f7f\u7528\u7279\u6743\uff0c\u7b2c\u4e8c\u4e2a\u8868\u793a\u4f7f\u7528\u8fc7\u4e86\u3002\u81ea\u7136\uff0c\u539f\u56fe\u4e2d\u7684\u70b9$u$\u5c31\u5bf9\u5e94\u5730\u53d8\u6210\u4e86$u_1$\u548c$u_2$\u3002\u5bf9\u4e8e\u6bcf\u6761\u8fb9$e\\in E$\uff0c\u5728\u65b0\u56fe\u4e2d\u5efa\u4e24\u7c7b\u8fb9$E_1$\u548c$E_2$\uff0c$E_1$\u4e2d\u6709$(u_1,v_1)$\u548c$(u_2,v_2)$\uff0c\u8fb9\u6743\u5747\u4e3a$w(e)$\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u4e0d\u7528\u7279\u6743\uff1b$E_2$\u4e2d\u53ea\u6709$(u_1,v_2)$\uff0c\u8fb9\u6743\u4e3a$0$\uff0c\u8868\u793a\u4f7f\u7528\u7279\u6743\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8dd1\u5b8c\u4e4b\u540e\u7b54\u6848\u5c31\u662f$n_1$\u548c$n_2$\u7684\u6700\u77ed\u8def\u7684\u6700\u5c0f\u503c\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u73b0\u5728\u628a\u8fd9\u4e2a\u65b9\u6848\u6269\u5c55\u5230$k>1$\u7684\u60c5\u51b5\u3002\u72b6\u6001$f(u,k)$\u8868\u793a\u4ece$1$\u51fa\u53d1\uff0c\u5230\u8fbe$u$\u70b9\uff0c\u4f7f\u7528$k$\u6b21\u7279\u6743\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u72b6\u6001\u8f6c\u79fb\u5e94\u8be5\u53ef\u4ee5\u81ea\u5df1\u5217\u51fa\u6765\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u73b0\u5728\u8003\u8651\u5efa\u65b0\u56fe\u3002\u4e00\u4e2a\u70b9$u$\u5c31\u53d8\u6210\u4e86$u_1,u_2,...,u_{k+1}$;\u4e00\u6761\u8fb9$e\\in E$\u53d8\u6210\u4e86$E_1$\u548c$E_2$\u4e24\u7c7b\u8fb9\u3002$E_1$\u4e2d\u4e3a$(u_1,u_1),(u_2,u_2),...,(u_{k+1},u_{k+1})$\uff0c\u8fb9\u6743\u5747\u4e3a$w(e)$\uff1b$E_2$\u4e2d\u4e3a$(u_1,u_2),(u_2,u_3),...,(u_k,u_{k+1})$\uff0c\u8fb9\u6743\u5747\u4e3a$0$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b54\u6848\u5373\u4e3a$n_1,n_2,...,n_{k+1}$\u7684\u6700\u77ed\u8def\u7684\u6700\u5c0f\u503c\u3002\n# \u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1e4 + 5, MAXM = 5e4 + 5, MAXK = 15;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\nstruct node\n{\n\tint u, dis;\n\tnode(){}\n\tnode( const int U, const int Dis ){ u = U, dis = Dis; }\n\tbool operator < ( const node & other ) const { return ! ( dis < other.dis ); }\n};\n\nstruct edge\n{\n\tint to, nxt, w;\n}Graph[MAXK * MAXM * 4 + MAXK * 2];\n\npriority_queue<node> q;\n\nint dis[MAXN * MAXK];\nint head[MAXN * MAXK];\nint N, M, K, S, T, cnt;\nbool visited[MAXN * MAXK];\n\nvoid addEdge( const int from, const int to, const int W )\n{\n\tcnt ++;\n\tGraph[cnt].w = W, Graph[cnt].nxt = head[from], Graph[cnt].to = to;\n\thead[from] = cnt;\n}\n\nvoid Dijkstra( const int sta )\n{\n\twhile( ! q.empty() ) q.pop();\n\tmemset( dis, 0x3f, sizeof( dis ) ), memset( visited, false, sizeof( visited ) );\n\tdis[sta] = 0, q.push( node( sta, 0 ) );\n\tnode h;\n\tint v, w;\n\twhile( ! q.empty() )\n\t{\n\t\th = q.top(), q.pop();\n\t\tif( visited[h.u] ) continue;\n\t\tvisited[h.u] = true;\n\t\tfor( int i = head[h.u] ; i ; i = Graph[i].nxt )\n\t\t{\n\t\t\tv = Graph[i].to, w = Graph[i].w;\n\t\t\tif( ! visited[v] && dis[v] > dis[h.u] + w )\n\t\t\t\tdis[v] = dis[h.u] + w, q.push( node( v, dis[v] ) );\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint fr, to, W;\n\tread( N ), read( M ), read( K );\n\tread( S ), read( T );\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tread( fr ), read( to ), read( W );\n\t\tfor( int j = 0 ; j < K ; j ++ ) addEdge( fr + j * N, to + ( j + 1 ) * N, 0 ), addEdge( to + j * N, fr + ( j + 1 ) * N, 0 );\n\t\tfor( int j = 0 ; j <= K ; j ++ ) addEdge( fr + j * N, to + j * N, W ), addEdge( to + j * N, fr + j * N, W );\n\t}\n\tDijkstra( S );\n\tint res = INF;\n\tfor( int i = 0 ; i <= K ; i ++ )\n\t\tres = MIN( res, dis[i * N + T] );\n\twrite( res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1571750968,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[JLOI2011]\u98de\u884c\u8def\u7ebf"
    },
    {
        "content": "### \u524d\u8a00\n\u770b\u5230\u597d\u591a\u5927\u4f6c\u90fd\u5728\u8dd1\u5206\u5c42\u56fe\u6700\u77ed\u8def\uff0c$\\text{DP}$ \u89e3\u6cd5\u7684\u6211\u745f\u745f\u53d1\u6296\u3002\u3002\u3002\n\n----\n### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u5f20 $N$ \u4e2a\u70b9\uff08\u70b9\u7f16\u53f7\u4ece $0$ \u5230 $N-1$\uff09\uff0c$M$ \u6761\u8fb9\u7684\u65e0\u5411\u5e26\u6743\u56fe $G$\u3002\u7ed9\u5b9a\u5e38\u6570 $k$\uff0c\u4f60\u53ef\u4ee5\u5728\u56fe $G$ \u4e2d\u4f7f\u4e0d\u8d85\u8fc7 $k$ \u6761\u8fb9\u7684\u8fb9\u6743\u4e3a $0$\uff0c\u6c42\u5728\u8be5\u6761\u4ef6\u4e0b\u70b9 $s$ \u5230\u70b9 $t$ \u7684\u6700\u77ed\u8def\u3002  \n\u6570\u636e\u8303\u56f4\uff1a$2\\le N\\le10000,1\\le M\\le50000,0\\le k\\le10$\n\n----\n### \u57fa\u672c\u601d\u8def\n\u8003\u8651 $\\text{DP}$  \n\u6211\u4eec\u8bbe $dis[i][u]$ \u8868\u793a\u4ece\u70b9 $s$ \u51fa\u53d1\u5bf9 $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u6e05\u96f6\u65f6\u7684\u6700\u77ed\u8def\uff0c\u7b54\u6848\u5c31\u662f $dis[k][t]$  \n\u8003\u8651\u8f6c\u79fb\uff1a  \n\u9996\u5148\u8dd1\u4e00\u904d\u88f8\u7684\u6700\u77ed\u8def\uff0c\u6c42\u51fa $dis[0][u]\\ u \\in[0,n-1]$  \n\u7136\u540e\u5bf9\u4e8e $\\forall\\ i \\in [1,k]$  \n$$dis[i][u]=min\\{dis[i-1][v],dis[i][v]+(v,u)\\}$$\n\u5176\u4e2d $u$ \u662f $v$ \u7684\u540e\u7ee7\u3002  \n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8f6c\u79fb\u4e86\u3002  \n\n----\n### \u6ce8\u610f\u4e8b\u9879\n\n+ \u70b9\u7f16\u53f7\u4ece $0$ \u5230 $N-1$\n+ \u65e0\u5411\u56fe\u8fb9\u7684\u7a7a\u95f4\u5f00\u4e24\u500d\n\n----\n### \u53c2\u8003\u4ee3\u7801\n```cpp\n/*--------------------------------\n  Author: The Ace Bee\n  Blog: www.cnblogs.com/zsbzsb\n  This code is made by The Ace Bee\n--------------------------------*/\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#define rg register\n#define mp make_pair\n#define pii pair < int, int >\nusing namespace std;\ntemplate < typename T > inline void read(T& s) {\n\ts = 0; int f = 0; char c = getchar();\n\twhile (!isdigit(c)) f |= (c == '-'), c = getchar();\n\twhile (isdigit(c)) s = s * 10 + (c ^ 48), c = getchar();\n\ts = f ? -s : s;\n}\nconst int _ = 10010;\nconst int __ = 100010;\nint n, m, k, s, t, dis[11][_], exi[_];\nint tot, head[_], nxt[__], ver[__], w[__];\ninline void Add_edge(int u, int v, int d)\n{ nxt[++tot] = head[u], head[u] = tot, ver[tot] = v, w[tot] = d; }\nqueue < int > q1, q2;\ninline void spfa1(int x) {\n\tmemset(dis[x], 0x3f, sizeof dis[x]);\n\tdis[x][s] = 0, exi[s] = 1;\n\tq1.push(s), q2.push(s);\n\twhile (!q1.empty()) {\n\t\tint u = q1.front(); q1.pop(), exi[u] = 0;\n\t\tfor (rg int i = head[u]; i; i = nxt[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif (dis[x][v] > dis[x - 1][u]) {\n\t\t\t\tdis[x][v] = dis[x - 1][u];\n\t\t\t\tif (!exi[v])\n\t\t\t\t\texi[v] = 1, q1.push(v), q2.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\ninline void spfa2(int x) {\n\tif (x == 0)\n\t\tmemset(dis[x], 0x3f, sizeof dis[x]), q2.push(s);\n\tdis[x][s] = 0, exi[s] = 1;\n\twhile (!q2.empty()) {\n\t\tint u = q2.front(); q2.pop(), exi[u] = 0;\n\t\tfor (rg int i = head[u]; i; i = nxt[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif (dis[x][v] > dis[x][u] + w[i]) {\n\t\t\t\tdis[x][v] = dis[x][u] + w[i];\n\t\t\t\tif (!exi[v]) exi[v] = 1, q2.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\", \"r\", stdin);\n#endif\n\tread(n), read(m), read(k), read(s), read(t);\n\tfor (rg int u, v, d, i = 1; i <= m; ++i)\n\t\tread(u), read(v), read(d), Add_edge(u, v, d), Add_edge(v, u, d);\n\tspfa2(0);\n\t// for (rg int u = 0; u < n; ++u)\n\t// \t\tprintf(\"%d%c\", dis[0][u], \" \\n\"[u == n - 1]);\n\tfor (rg int i = 1; i <= k; ++i) {\n\t\tspfa1(i);\n\t\t// for (rg int u = 0; u < n; ++u)\n\t\t// \tprintf(\"%d%c\", dis[i][u], \" \\n\"[u == n - 1]);\n\t\tspfa2(i);\n\t\t// for (rg int u = 0; u < n; ++u)\n\t\t// \tprintf(\"%d%c\", dis[i][u], \" \\n\"[u == n - 1]);\n\t}\n\tprintf(\"%d\\n\", dis[k][t]);\n\treturn 0;\n}\n\n```\n----\n**\u5b8c\u7ed3\u6492\u82b1 $QwQ$**",
        "postTime": 1567148485,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## \u9898\u89e3P4568[JLOI]\u98de\u884c\u8def\u7ebf\n\n[\u914d\u5408Blog\u98df\u7528\u66f4\u4f73](https://www.luogu.org/blog/149815/solution-p4568)\n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problem/P4568)\n\n**\u5206\u5c42\u56fe\u6a21\u677f\u9898**\n\n\u9898\u610f\u7b80\u5316\uff1a\u6709n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0c\u6c42s\u5230t\u7684\u6700\u77ed\u8def\n\n\n\u539f\u672c\u662f\u8fd9\u6837\u7684\uff08\u56fe\u5f88\u4e11\uff0c\u8bf7\u89c1\u8c05\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/72236.png)\n\n\u4f46\u9898\u76ee\u4e2d\u591a\u4e86\u4e00\u4e2a\u6761\u4ef6\uff1a\u6211\u4eec\u81f3\u591a\u53ef\u4ee5\u8ba9k\u6761\u8fb9\u7684\u6743\u503c\u53d8\u4e3a0\uff08\u4e0d\u4e00\u5b9a\u8981\u6709k\u6761\u8fb9\u6743\u503c\u53d8\u62100\uff09\n\n\u8fd9\u4e0d\u5c31\u662f\u5206\u5c42\u56fe\u88f8\u9898\u5417\uff0c\u5efak\u5c42\u56fe\uff08\u56e0\u4e3ak\u226410\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5360\u7528\u592a\u5927\u7684\u7a7a\u95f4\uff09\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1ax\u548cy\u4e4b\u95f4\u6709\u4e00\u6761\u6743\u503c\u4e3az\u7684\u8fb9\uff0c\u5219\u7b2c0\u5230k\u5c42\u7684x,y\u4e4b\u95f4\u90fd\u8981\u8fde\u6743\u503c\u4e3az\u7684\u8fb9,\u7b2c0\u5230k-1\u5c42\u7684x\u6216y\u8fde\u5230\u7b2ci+1\u5c42\u7684y\u6216x\u7684\u6743\u503c\u6539\u4e3a0\uff08\u4ee3\u8868\u4e00\u6b21\u514d\u8d39\u4e58\u5750\u98de\u673a\uff09\n\n\u56fe\u5c31\u53d8\u6210\u4e86\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/72243.png)\n\n~~\u4e71\u4e03\u516b\u7cdf\uff0c\u770b\u90fd\u770b\u4e0d\u6e05~~\n\np.s.\u56fe\u4e2d8\u548c9\u7684\u7f16\u53f7\u753b\u53cd\u4e86 ~~\uff0c\u51d1\u5408\u7740\u770b\u5427~~\n\n\u597d\u5427\u7b49\u6709\u65f6\u95f4\u4e86\u6211\u4f1a\u6539\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u53ea\u9700\u8981\u8dd1\u4e00\u8fb9Dijkstra\u518d\u627e\u51fadis[i*(n+1)+t]\u7684\u6700\u5c0f\u503c\u5373\u4e3a\u7b54\u6848\n\nCode\n```cpp\n#include<cstdio>\n#include<queue>\n#define ri register int\n#define MAXN 10001\n#define MAXM 50001\n#define INF 2147483647\nusing namespace std;\nint n,m,k,s,t,edge_sum;\nint head[MAXM*201],dis[MAXN*201];\nbool vis[MAXN*201];\nstruct Edge{\n\tint next,to,dis;\n}edge[MAXM*201];//\u524d\u5411\u661f\u5b58\u56fe\ninline void addedge(int from,int to,int dis){\n\tedge[++edge_sum].next=head[from];\n\tedge[edge_sum].dis=dis;\n\tedge[edge_sum].to=to;\n\thead[from]=edge_sum;\n}\nstruct Node{\n\tint u,dis;\n\tbool operator <(const Node& rhs) const {\n        return dis>rhs.dis;\n    }\n};\ninline void dijkstra(){//\u5806\u4f18\u5316Dij\n\tpriority_queue<Node> q;//STL\u4f18\u5148\u961f\u5217\uff0c\u7528\u6765\u4f18\u5316Dij\n\tq.push((Node){s,0});\n\twhile(!q.empty()) {\n\t\tint u=q.top().u;\n\t\tq.pop();\n\t\tvis[u]=1;\n\t\tfor(ri i=head[u];i;i=edge[i].next)\n\t\t\tif(!vis[edge[i].to]&&dis[edge[i].to]>dis[u]+edge[i].dis){\n\t\t\t\tdis[edge[i].to]=dis[u]+edge[i].dis;\t\t\n\t\t\t\tq.push((Node){edge[i].to,dis[edge[i].to]});\n\t\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&m,&k);\n\tscanf(\"%d %d\",&s,&t);\n   for(ri i=1;i<=m;i++)\n   {\n    int x,y,z;\n       scanf(\"%d%d%d\",&x,&y,&z);\n       for(ri j=0;j<=k;j++) addedge(j*(n+1)+x,j*(n+1)+y,z),addedge(j*(n+1)+y,j*(n+1)+x,z);//\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\u6240\u4ee5\u5b58\u4e24\u6b21\n       for(ri j=0;j<k;j++) addedge(j*(n+1)+x,(j+1)*(n+1)+y,0),addedge(j*(n+1)+y,(j+1)*(n+1)+x,0);//\u5b58\u7b2ci\u5c42\u7684x(y)\u548c\u7b2ci+1\u5c42\u7684y(x)\u4e4b\u95f4\u7684\u8fb9\n   }\n   for(ri i=0;i<=(n+1)*k+n;i++) dis[i]=INF;//\u521d\u59cb\u503c\u8d4b\u4e3aINF\n   dis[s]=0;\n   dijkstra();//Dij\u6c42\u6700\u77ed\u8def\n   int min=INF;\n   for(ri i=0;i<=k;i++) if(min>dis[i*(n+1)+t]) min=dis[i*(n+1)+t];//\u5bfb\u627e\u6700\u4f18\u89e3\n   printf(\"%d\\n\",min);\n   return 0;\n}\n```\n\n# \u8bf4\u53e5\u95f2\u8bdd\uff1a\u7814\u7a76\u5206\u5c42\u56fe\u7684\u6700\u597d\u65b9\u6cd5\u662f\n### A\u4e864568,\u518dA\u4e862939\uff0c\u8fd8\u8981A\u4e864822\n**\u795d\u4f60\u4eec\u6210\u529f (\u6ed1\u7a3d**\n\nAC\u7d2b\u9898+=3;\n\n\u6211\u90fd\u544a\u8bc9\u4f60\u8fd9\u4e48\u591a\u4e86\uff0c\u4e0d\u70b9\u4e2a\u8d5e\uff1f",
        "postTime": 1565856377,
        "uid": 149815,
        "name": "Isprime",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "[blog\u4e2d\u67e5\u770b](https://www.cnblogs.com/sun123zxy/p/shortestpath.html)\n\n\u561b\uff0c\u8fd9\u662f\u5206\u5c42\u56fe\u6700\u77ed\u8def\u7684\u6a21\u7248\u9898\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u56fe\u4e0a\u52a8\u6001\u89c4\u5212\u3002\u5bf9\u8def\u5f84\u6709\u989d\u5916\u8981\u6c42\uff0c\u5728\u666e\u901a\u7684\u6700\u77ed\u8def\u4e0a\u7ed9dis\u6570\u7ec4\u4e0a\u52a0\u7ef4\u8868\u793a\u72b6\u6001\u5c31\u884c\n\n\u6bd4\u5982\u6b64\u9898\u5c31\u662fdis[i][j]\u8868\u793a\u5f53\u8d70\u5230i\u70b9\uff0c\u8fd8\u5269j\u5f20\u514d\u8d39\u52b5\u65f6\u82b1\u8d39\u7684\u6700\u5c0f\u503c\n\n\u5728\u5355\u6e90\u6700\u77ed\u8def\u7684\u57fa\u7840\u4e0a\u67092\u79cd\u60c5\u51b5\n\n\u7b2c\u4e00\u79cd\u662f\u4e0d\u7528\u52b5\u8f6c\u79fb\u5230\u4e0b\u4e00\u8282\u70b9\uff0c\u82b1\u94b1\u8f6c\u79fb\u3002dis[to][fr]=dis[id][fr]+edge[i].w\n\n\u7b2c\u4e8c\u79cd\u662f\u7528\u52b5\u8f6c\u79fb\uff0c\u8fd9\u662f\u4e0d\u9700\u8981\u82b1\u94b1\uff0c\u4f46\u4f59\u4e0b\u514d\u8d39\u52b5\u7684\u6570\u91cf\u51cf1\u3002dis[to][fr-1]=dis[id][fr]\n\n\u6ce8\u610f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5f53\u514d\u8d39\u52b5\u5df2\u7ecf\u7528\u5b8c\u65f6\u4e0d\u80fd\u8f6c\u79fb\n\n\u8fd9\u9053\u9898\u76ee\u53ea\u9700\u8981\u66f4\u65b0\u8fd92\u79cd\u60c5\u51b5\uff0c\u6709\u4e9b\u53ef\u4ee5\u53e0\u52a0\u4f7f\u7528\u7684\u9898\u76ee\u5c31\u5f97\u591a\u4e00\u91cd\u5faa\u73af\u8f6c\u79fb\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int INF=2147483647;\nint n,m,K,Start,End;\nstruct star{//\u94fe\u5f0f\u524d\u5411\u661f \n    int u,v,w;\n}edge[100005];\nint last[100005],next[100005];\nvoid addedge(int u,int v,int w){\n    m++;\n    edge[m]=(star){u,v,w};\n}\nvoid starinit(){//\u524d\u5411\u661f\u521d\u59cb\u5316 \n    for(int i=1;i<=n;i++) last[i]=-1;\n    for(int i=1;i<=m;i++){\n        int flag=edge[i].u;\n        next[i]=last[flag];\n        last[flag]=i;\n    }\n}\nstruct em{//\u52a0\u5230\u4f18\u5148\u961f\u5217\u91cc\u7684\u7ed3\u6784\u4f53 \n    int id,fr,val;\n    bool operator<(em uuz)const{//\u91cd\u8f7d\uff0cSTL\u91cc\u7684\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u662f\u5927\u6839\u5806 \n        return val>uuz.val;\n    }\n};\nint dis[100005][15];\npriority_queue<em>heap;\nvoid dij(int sta){//dijkstra+\u4f18\u5148\u961f\u5217 \n    for(int i=1;i<=n;i++)for(int j=0;j<=K;j++) dis[i][j]=INF;\n    dis[sta][K]=0;\n    heap.push((em){sta,K,0});\n    for(;!heap.empty();){\n        em now=heap.top();\n        int id=now.id;\n        int fr=now.fr;\n        heap.pop();\n        if(now.val!=dis[id][fr]) continue;//\u5224\u65ad\u662f\u5426\u88ab\u5e9f\u5f03 \n        for(int i=last[id];i!=-1;i=next[i]){\n            int to=edge[i].v;\n            if(dis[to][fr]>dis[id][fr]+edge[i].w){//\u66f4\u65b0\u4e0d\u7528\u514d\u8d39\u52b5\u7684\u60c5\u51b5 \n                dis[to][fr]=dis[id][fr]+edge[i].w;\n                heap.push((em){to,fr,dis[to][fr]});\n            }\n            if(fr-1>=0&&dis[to][fr-1]>dis[id][fr]){//\u66f4\u65b0\u4f7f\u7528\u514d\u8d39\u52b5\u7684\u60c5\u51b5 \n                dis[to][fr-1]=dis[id][fr];\n                heap.push((em){to,fr-1,dis[to][fr-1]});\n            }\n        }\n    }\n}\nint main(){\n    int cirno;\n    cin>>n>>cirno>>K;\n    cin>>Start>>End;\n    Start++;End++;//\u628a\u7f16\u53f7\u5f04\u6210\u6b63\u6574\u6570\u65b9\u4fbf\u5904\u7406 \n    for(int i=1;i<=cirno;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        u++;v++;//\u540c\u4e0a \n        addedge(u,v,w);\n        addedge(v,u,w);\n    }\n    starinit();\n    dij(Start);\n    int ans=INF;\n    for(int i=0;i<=K;i++){//\u6709\u53ef\u80fd\u6ca1\u7528\u5b8c\u52b5 \n        ans=min(ans,dis[End][i]);\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1541510041,
        "uid": 23632,
        "name": "sun123zxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u5206\u5c42\u56fe + dijkstra     \n\u5206\u5c42\u56fe\u677f\u5b50\u9898        \n\u5982\u679c\u60f3\u4e86\u89e3\u5206\u5c42\u56fe\u8bf7\u770b\u8fd9\u91cc\n[\u4e86\u89e3\u5206\u5c42\u56fe](https://www.cnblogs.com/acioi/p/11716483.html)      \n\n### \u3010\u9898\u76ee\u5927\u610f\u3011\n\u4ece1\u5230n\u8dd1    \n\u5176\u4e2d\u53ef\u4ee5\u8ba9k\u6761\u8def\u7684\u8017\u65f6\u53d8\u4e3a\u539f\u6765\u7684\u4e00\u534a     \n\u6c42\u6700\u5c0f\u8017\u65f6    \n  \n### \u3010\u9898\u76ee\u5206\u6790\u3011\n\u5982\u679c\u4f60\u4e0d\u662f\u7b2c\u4e00\u6b21\u505a\u5206\u5c42\u56fe\u7684\u8bdd   \n\u90a3\u770b\u5230\u8fd9k\u6761\u8def\u51cf\u534a    \n\u4e00\u5b9a\u4f1a\u60f3\u5230\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u7b97\u6cd5\u5206\u5c42\u56fe   \n\u5206\u5c42\u56fe\u5c31\u662f\u4e13\u95e8\u7528\u6765\u89e3\u51b3\u8fd9\u79cdk\u6761\u8def\u51cf\u534a\u7684\u95ee\u9898\u7684   \n\u4e0d\u8fc7\u9700\u8981\u5f00\u5f88\u5927\u7684\u7a7a\u95f4    \n\u5f00\u6570\u7ec4\u7684\u65f6\u5019\u8981\u597d\u597d\u659f\u914c\u4e00\u4e0b  \n\u4e0d\u7136\u5f88\u5bb9\u6613\u51fa\u95ee\u9898     \n\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u6b63\u5e38\u5efa\u4e00\u904d\u56fe    \n\u7136\u540e\u8d4b\u503ck\u904d    \n\u7b2ci\u5f20\u56fe\u4f5c\u4e3a\u7528\u4e86i\u6b21\u514d\u8d39\u7684\u673a\u4f1a      \n\u6240\u4ee5\u4e24\u5f20\u56fe\u4e4b\u95f4\u662f\u514d\u8d39\u673a\u4f1a\u7528\u7684\u8def    \n\u90a3\u5c31\u9700\u8981\u8d4b\u503c\u4e3a0     \n\u8fd9\u6837\u76f4\u63a5\u8dd1dijkstra\u5c31\u5b8c\u5168\u6ca1\u6709\u95ee\u9898    \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct point\n{\n\tint w,x;\n\tbool operator < (const point & xx)const\n\t{\n\t\treturn xx.w < w;\n\t}\n};\nconst int Max = 4000000;\nstruct node\n{\n\tint y,ne,z;\n}a[Max];\nint sum = 0,head[Max];\nint d[Max];\n\nvoid add(int x,int y,int z)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\ta[sum].z = z;\n\thead[x] = sum;\n}\nbool use[Max];\nint s,t;\npriority_queue<point>q;\nvoid dj()\n{\n\tmemset(d,0x3f,sizeof(d));\n\td[s] = 0;\n\tq.push((point){0,s});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x,w = qwq.w;\n\t\tif(use[x] == true)\n\t\t\tcontinue;\n\t\telse\n\t\t\tuse[x] = true;\n\t\tfor(register int i = head[x];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(d[awa] > d[x] + a[i].z)\n\t\t\t{\n\t\t\t\td[awa] = d[x] + a[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t\tq.push((point){d[awa],awa});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tint n,m,k;\n\tcin >> n >> m >> k;\n\tcin >> s >> t;\n\tint x,y,z;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tcin >> x >> y >> z;\n\t\tadd(x,y,z),add(y,x,z);\n\t\tfor(register int j = 1;j <= k;++ j)\n\t\t{\n\t\t\tadd(j * n + x,j * n + y,z);\n\t\t\tadd(j * n + y,j * n + x,z);\n\t\t\tadd((j - 1) * n + x,j * n + y,0);\n\t\t\tadd((j - 1) * n + y,j * n + x,0);\n\t\t}\n\t}\n\tdj();\n\tint M = 0x7fffffff;\n\tfor(register int i = 0;i <= k;++ i)\n\t\tM = min(M,d[i * n + t]);\n\tcout << M << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571793604,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "## p\u515a\u7684\u798f\u5229 \n\n### \u5206\u5c42\u56fe\u677f\u5b50\u5408\u96c6\uff08spfa+\u5806\u4f18\u5316\u7684dijkstra\uff09\n\n\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u5206\u5c42\u56fe\u7684\u6700\u77ed\u8def\u95ee\u9898\n\n\u5206\u5c42\u56fe\u6700\u77ed\u8def\u4ee5\u6211\u7684\u7406\u89e3\u5c31\u662f\u5c06n\u4e2a\u56fe\u5408\u5728\u4e00\u8d77\u8dd1\u6700\u77ed\u8def\n\n\u90a3\u5982\u4f55\u5408\u56fe\u5462\uff1f\n------------\n\n- \u5176\u5b9e\u5c31\u662f\u5148\u5efak\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u56fe\u7684\u4e3b\u4f53\u662f\u4e00\u6837\u7684\uff08\u6b63\u5e38\u8fb9\u6743\u5728\u6bcf\u4e2a\u56fe\u90fd\u80fd\u4f53\u73b0\u5230\uff09\n\n- \u7136\u540e\u5c06\u7279\u6b8a\u8fb9\u4ece\u7b2cj-1\u4e2a\u56fe\u5411j\u4e2a\u56fe\u8fde\u8fb9\u5c31\u884c\u4e86\uff081\u2264j\u2264k)\n```pascal\n//\u6211\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u7684\u56fe\nprocedure link(x,y,z:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=z;\nend;\n//\u8fd9\u4e00\u6b65\u548c\u5e73\u5e38\u7684\u5b58\u56fe\u4e00\u6837\n//\u4f46\u662f\u8981\u6ce8\u610f\u6570\u7ec4\u8981\u5f002*k*m\u90a3\u4e48\u5927\n//\u7136\u540e\u662f\u8bfb\u5165\u64cd\u4f5c\uff0c\u8fd9\u91cc\u5c31\u6709\u6587\u7ae0\u53ef\u505a\u4e86\nfor i:=1 to m do begin\n\treadln(x,y,z);\n\tlink(x,y,z);//\u9996\u5148\u662f\u6b63\u5e38\u7684\u65e0\u5411\u56fe\u5b58\u56fe\n\tlink(y,x,z);\n\tfor j:=1 to k do begin//\u8fd9\u91cc\u5c31\u662f\u5206\u5c42\u56fe\u72ec\u6709\u7684\u5b58\u56fe\u65b9\u6cd5\n\t\tlink((j-1)*n+x,j*n+y,0);//\u4ece\u7b2cj-1\u4e2a\u56fe\u7684x\u70b9\u5411\u7b2cj\u4e2a\u56fe\u7684y\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\n\t\tlink((j-1)*n+y,j*n+x,0);\n\t\tlink(x+j*n,y+j*n,z);\n\t\tlink(y+j*n,x+j*n,z);//\u5728\u7b2cj\u4e2a\u56fe\u4e2d\u5efa\u7acb\u6b63\u5e38\u7684\u8fb9\u6743\n\tend;\nend;\n```\n\u5efa\u5b8c\u56fe\uff0c\u7136\u540e\u5c31\u5feb\u4e50\u5730\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86~\n\n### P4568(\u88f8dijkstra)pas \nTLE4\u4e2a\u70b9 64\u5206\n```pascal\nvar\n        n,m,k,s,e,i,j,head,tail,tot,v,minn,x,y,z:longint;\n        ans:int64;\n        he,ne,t,w,dis:array[0..4000000] of int64;\n        p:array[0..4000000] of boolean;\nfunction min(x,y:int64):int64;\nbegin\n        if x<y then exit(x) else exit(y);\nend;\nprocedure link(x,y,z:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=z;\nend;\nbegin\n        readln(n,m,k);\n        readln(s,e);\n        for i:=1 to m do begin\n                readln(x,y,z);\n                link(x,y,z);\n                link(y,x,z);\n                for j:=1 to k do begin\n                        link((j-1)*n+x,j*n+y,0);\n                        link((j-1)*n+y,j*n+x,0);\n                        link(x+j*n,y+j*n,z);\n                        link(y+j*n,x+j*n,z);\n                end;\n        end;\n        for i:=0 to n*(k+1) do dis[i]:=maxlongint*10000;\n        dis[s]:=0;\n        head:=s;\n        while not p[head] do begin\n                p[head]:=true;\n                v:=he[head];\n                while v>0 do begin\n                        if (not (p[t[v]])) and (dis[t[v]]>dis[head]+w[v]) then\n                         dis[t[v]]:=dis[head]+w[v];\n                        v:=ne[v];\n                end;\n                minn:=maxlongint;\n                for i:=0 to n*(1+k) do if (not p[i]) and (minn>dis[i]) then begin\n                        minn:=dis[i];\n                        head:=i;\n                end;\n        end;\n        ans:=maxlongint*10000;\n        for i:=0 to k do ans:=min(ans,dis[e+i*n]);\n        writeln(ans);\nend.\n```\n### P4568(\u5806+dijkstra).pas \n\u5f00o2 394ms \u4e0d\u5f00458ms\n```pascal\nvar\n        n,m,k,s,e,i,j,head,tot,v,x,y,z:longint;\n        ans:int64;\n        he,ne,t,w,dis,cj,num,heap:array[0..4000000] of int64;\nfunction min(x,y:int64):int64;\nbegin\n        if x<y then exit(x) else exit(y);\nend;\nfunction swap(var x,y:int64):int64;\nvar\n        t:int64;\nbegin\n        t:=x;\n        x:=y;\n        y:=t;\nend;\nprocedure link(x,y,z:longint);\nbegin\n        inc(tot);\n        ne[tot]:=he[x];\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=z;\nend;\nprocedure insert(a,x:longint);\nvar\n        i:longint;\nbegin\n        if cj[x]<>0 then begin\n                i:=cj[x];\n                heap[i]:=a;\n        end else begin\n                inc(heap[0]);\n                i:=heap[0];\n                heap[i]:=a;\n                num[i]:=x;\n                cj[x]:=i;\n        end;\n        while (i>>1>0) and (heap[i]<heap[i>>1]) do begin\n                swap(cj[num[i]],cj[num[i>>1]]);\n                swap(heap[i],heap[i>>1]);\n                swap(num[i],num[i>>1]);\n                i:=i>>1;\n        end;\nend;\nprocedure del;\nvar\n        i,m:longint;\nbegin\n        cj[num[1]]:=0;\n        heap[1]:=heap[heap[0]];\n        num[1]:=num[heap[0]];\n        dec(heap[0]);\n        i:=1;\n        if (heap[i<<1]<heap[i<<1+1]) or (i=heap[0]) then m:=i<<1 else m:=i<<1+1;\n        while (m<=heap[0]) and (heap[m]<heap[i]) do begin\n                swap(cj[num[i]],cj[num[m]]);\n                swap(heap[i],heap[m]);\n                swap(num[i],num[m]);\n                i:=m;\n                if (heap[i<<1]<heap[i<<1+1]) or (i<<1=heap[0]) then m:=i<<1 else m:=i<<1+1;\n        end;\nend;\nbegin\n        readln(n,m,k);\n        readln(s,e);\n        for i:=1 to m do begin\n                readln(x,y,z);\n                link(x,y,z);\n                link(y,x,z);\n                for j:=1 to k do begin\n                        link((j-1)*n+x,j*n+y,0);\n                        link((j-1)*n+y,j*n+x,0);\n                        link(x+j*n,y+j*n,z);\n                        link(y+j*n,x+j*n,z);\n                end;\n        end;\n        for i:=0 to n*(k+1) do dis[i]:=maxlongint*10000;\n        heap[0]:=1;\n        num[1]:=s;\n        dis[s]:=0;\n        head:=s;\n        while heap[0]<>0 do begin\n                v:=he[head];\n                while v>0 do begin\n                        if dis[t[v]]>dis[head]+w[v] then begin\n                                dis[t[v]]:=dis[head]+w[v];\n                                insert(dis[t[v]],t[v]);\n                        end;\n                        v:=ne[v];\n                end;\n                del;\n                head:=num[1];\n        end;\n        ans:=maxlongint*10000;\n        for i:=0 to k do ans:=min(ans,dis[e+i*n]);\n        writeln(ans);\nend.\n```\n### P4568(spfa).pas\n413ms\n```pascal\nvar\n        n,m,k,i,j,x,y,z,head,tail,v,o,s,e:longint;\n        tot,ans,maxn,g:int64;\n        ne,he,t,w,f:array[0..200000] of int64;\n        dis:array[0..200000,0..21] of int64;\n        p:array[0..200000] of boolean;\n        q:array[0..8000000] of longint;\nfunction min(x,y:int64):int64;\nbegin\n        if x<y then exit(x) else exit(y);\nend;\nprocedure link(x,y,z:longint);\nbegin\n        inc(tot);\n        ne[he[x]]:=tot;\n        he[x]:=tot;\n        t[tot]:=y;\n        w[tot]:=z;\n        if f[x]=0 then f[x]:=tot;\nend;\nprocedure swap(x,y:longint);\nbegin\n        g:=q[x];\n        q[x]:=q[y];\n        q[y]:=g\nend;\nbegin\n        maxn:=maxlongint*100;\n        readln(n,m,k);\n        readln(s,e);\n        inc(s);\n        inc(e);\n        for i:=1 to m do begin\n                readln(x,y,z);\n                inc(x);\n                inc(y);\n                link(x,y,z);\n                link(y,x,z);\n        end;\n        for i:=1 to n+1 do for j:=0 to k do dis[i,j]:=maxn;\n        dis[s,0]:=0;\n        head:=0;\n        tail:=1;\n        p[s]:=true;\n        q[1]:=s;\n        for i:=0 to k do begin\n                while head<>tail do begin\n                        inc(head);\n                        o:=q[head];\n                        v:=f[o];\n                        while v<>0 do begin\n                                if dis[o,i]+w[v]<dis[t[v],i] then begin\n                                        dis[t[v],i]:=dis[o,i]+w[v];\n                                        if not p[t[v]] then begin\n                                                inc(tail);\n                                                q[tail]:=t[v];\n                                                if dis[t[v],i]<dis[q[head+1],i] then swap(head+1,tail);\n                                                p[t[v]]:=true;\n                                        end;\n                                end;\n                                v:=ne[v];\n                        end;\n                        p[o]:=false;\n                end;\n                for j:=1 to n do begin\n                        v:=f[j];\n                        while v<>0 do begin\n                                dis[t[v],i+1]:=min(dis[t[v],i+1],dis[j,i]);\n                                v:=ne[v];\n                        end;\n                end;\n                head:=0;\n                tail:=0;\n                for j:=1 to n do if dis[j,i+1]<>maxn then begin\n                        inc(tail);\n                        q[tail]:=j;\n                        p[j]:=true;\n                end else p[j]:=false;\n        end;\n        ans:=maxn;\n        for i:=0 to k do ans:=min(ans,dis[e,i]);\n        writeln(ans);\nend.\n```",
        "postTime": 1551578826,
        "uid": 113864,
        "name": "kfhkx",
        "ccfLevel": 0,
        "title": "P4568\u9898\u89e3"
    },
    {
        "content": "\u5efa\u4e00\u4e2a\u5206\u5c42\u56fe,\u7b2c$i$\u5c42\u7684\u7b2c$j$\u4e2a\u8282\u70b9\u8868\u793a\u8d70\u5230$j$\u53f7\u8282\u70b9,\u7528\u4e86$i$\u4e2a\u4f18\u60e0\u7684\u6700\u77ed\u8def,\u6211\u4eec\u8bbe\u4e3a$[i,j]$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u539f\u56fe\u7684\u4e00\u6761\u6743\u503c\u4e3a$w$\u7684\u53cc\u5411\u8fb9$(u,v)$,\u5bf9\u4e8e\u4efb\u610f\u7684$0\\le x\\le k$,\u5728$[x,u]$\u548c$[x,v]$\u4e4b\u95f4\u5efa\u7acb\u6743\u503c\u4e3a$w$\u7684\u53cc\u5411\u8fb9,\u5bf9\u4e8e\u4efb\u610f\u7684$0\\le x<k$,\u5728$[x,u]$\u548c$[x+1,v]$\u4e4b\u95f4\u4ee5\u53ca$[x,v]$\u548c$[x+1,u]$\u4e4b\u95f4\u5206\u522b\u5efa\u7acb\u5355\u5411\u8fb9\u3002\n\n\u4ece$[0,s]$\u5f00\u59cb\u8dd1\u5355\u6e90\u6700\u77ed\u8def,\u7b54\u6848\u4e3a$0\\le x\\le k$\u7684$[x,t]$\u5230$[0,s]$\u7684\u6700\u77ed\u8def\u7684\u6700\u5c0f\u503c\u3002\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\n#define val(u,id) (n*(u)+id)\nusing namespace std;\nstruct node{\n\tint d,mn;\n\tbool operator<(node y)const{\n\t\treturn mn==y.mn?d>y.d:mn>y.mn;\n\t}\n}td;\nstruct edge{\n\tint t,v,nxt;\n}e[2200010];\nconst int INF=1e9;\nint n,m,k,s,t,u,v,w,be[110010],cnt,mn[110010],vis[110010],ans=INF;\npriority_queue<node>pq;\nvoid add(int x,int y,int val){\n\te[++cnt].t=y,e[cnt].v=val,e[cnt].nxt=be[x],be[x]=cnt;\n}\nvoid Dijkstra(){\n\tfor(int i=0;i<=k;++i)for(int j=0;j<n;++j)mn[val(i,j)]=INF;\n\tmn[s]=0,pq.push((node){s,0});\n\twhile(!pq.empty()){\n\t\twhile(!pq.empty()&&vis[(td=pq.top(),td.d)])pq.pop();\n\t\tif(pq.empty())return;\n\t\tpq.pop(),vis[td.d]=1;\n\t\tfor(int i=be[td.d];i;i=e[i].nxt)(mn[e[i].t]>mn[td.d]+e[i].v)?mn[e[i].t]=mn[td.d]+e[i].v,pq.push((node){e[i].t,mn[e[i].t]}),0:0;\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d%d\",&n,&m,&k,&s,&t);\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tfor(int j=0;j<k;++j)add(val(j,u),val(j,v),w),add(val(j,v),val(j,u),w),add(val(j,u),val(j+1,v),0),add(val(j,v),val(j+1,u),0);\n\t\tadd(val(k,u),val(k,v),w),add(val(k,v),val(k,u),w);\n\t}\n\tDijkstra();\n\tfor(int i=0;i<=k;++i)ans=min(ans,mn[val(i,t)]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1551012067,
        "uid": 26294,
        "name": "xryjr233",
        "ccfLevel": 9,
        "title": "[2019.2.21]BZOJ2763 [JLOI2011]\u98de\u884c\u8def\u7ebf(\u5206\u5c42\u56fe/\u5355\u6e90\u6700\u77ed\u8def)"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u5206\u5c42\u56fe\u9898\uff0c\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a\u56fe\u590d\u5236k\u6b21\uff0c\u6210\u4e3a\u4e00\u4e2ak\u5c42\u7684\u56fe\u3002\n\n\u5982\u679c\u4ece\u70b9i\u5230\u70b9j\u6709\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u4ece\u7b2cx\u5c42\u7684i\u8282\u70b9\u5230\u7b2cx+1\u7684j\u8282\u70b9\u548c\u7b2cx\u5c42\u7684j\u8282\u70b9\u5230\u7b2cx+1\u5c42\u7684i\u8282\u70b9\u90fd\u5404\u6709\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u8fb9\uff0c\u4f46\u5982\u679c\u5df2\u5c3d\u5230\u4e86\u7b2ck\u5c42\u5c06\u4e0d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u641c ~~\u60f3\u5403\u9738\u738b\u9910\u5427QwQ~~\n\n\u5982\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/45961.png)\n\n\u5728k=1\u65f6\uff0c\u628a\u5b83\u53d8\u6210\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/45962.png)\n\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;//\u4e07\u80fd\u5934\u4e0d\u8bf4(\u8bdd\u8bf4\u4e0d\u4f1a\u7684\u53ef\u4ee5\u505a\u8fd9\u9053\u9898\u5417?)\nconst int maxn=10010,maxk=20;//\u5f00\u5927\u70b9\uff0c\u5c0f\u5fc3RE\nconst int point=maxn*maxk;\nstruct po{//\u6bcf\u4e00\u4e2a\u70b9\n\tint z,x;\n\tbool operator<(const po&a)const{//\u91cd\u7f6e'<'\n\t\treturn a.x<x;\n\t}\n}o,re;\nint di[point],i,j,n,m,k,fr,to,x,y,zz;\nbool vi[point];\npriority_queue<po>q;//\u81ea\u52a8\u6392\u5e8f\u5806.\nvector<int>a[point],b[point];//\u76f8\u90bb\u7684\u70b9\u4e0e\u8fb9\u6743\nvoid add_edge(int u,int v,int c){//\u52a0\u5165\u4e00\u6761\u8fb9\n\ta[u].push_back(v),b[u].push_back(c);\n}\nvoid add(int t,int y,int kkk){\n\tadd_edge(t,y,kkk);\n    add_edge(y,t,kkk);\n    for(int j=1;j<=k;++j){\n        add_edge(t+(j-1)*n,y+j*n,0);//\u6743\u4e3a0\u7684\u70b9\n        add_edge(y+(j-1)*n,t+j*n,0);\n        add_edge(t+j*n,y+j*n,kkk);//\u6784\u5efa\u6bcf\u5c42\u7684\u56fe\n        add_edge(y+j*n,t+j*n,kkk);\n    }\n\treturn;\n} \nint main()\n{\n\tcin>>n>>m>>k;\n\tk++;\n\tcin>>fr>>to;\n\tfr++,to++;\n\tfor(i=1;i<=n*k;i++){\n\t\tdi[i]=100000000;\n\t}\n\tfor(i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&zz);\n\t\tx++,y++;\n\t\tadd(x,y,zz);\n\t}\n\tdi[fr]=0;\n\to.z=fr,o.x=0;\n\tq.push(o);\n\twhile(!q.empty()){\n\t\to=q.top();\n\t\tq.pop();\n\t\tif(vi[o.z]==0){\n\t\t\tvi[o.z]=1;\n\t\t\tint l=a[o.z].size();\n\t\t\tfor(i=0;i<l;i++){\n\t\t\t\tif(di[o.z]+b[o.z][i]<di[a[o.z][i]]){\n\t\t\t\t\tdi[a[o.z][i]]=di[o.z]+b[o.z][i];\n\t\t\t\t\tre.z=a[o.z][i],re.x=di[a[o.z][i]];\n\t\t\t\t\tq.push(re);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint MAX=100000000;\n\tfor(i=to;i<=n*k;i+=n){\n\t\tMAX=min(MAX,di[i]);\n\t}\n\tcout<<MAX;\n\treturn 0;\n}\n\n```",
        "postTime": 1544358409,
        "uid": 90176,
        "name": "xixiup",
        "ccfLevel": 0,
        "title": "P4568\u9898\u89e3"
    },
    {
        "content": "\u7528\u9ad8\u5ea6\u6765\u9650\u5236 $K$,\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3,\u770b\u7b2c\u4e00\u4f4d\u7684\u56fe\u53ef\u77e5\u4e86\u3002\n\n\u5f53\u7136 $DP$ \u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u624b\u5199\u5806 $7.in$ \u4f1a\u70b8\u6389! \u56e0\u4e3a\u4f1a\u6709 $heap_{num} \\leq 0$ \u7684\u65f6\u5019!\n\n![](https://i.loli.net/2018/11/24/5bf95120d3c3a.png)\n\n```pascal\n// luogu-judger-enable-o2\n// T1\n\nUses math;\n\nvar\n    next,rope,from,value,reach:array[-1..21000000] of longint;\n    heap,node:array[-1..21000000] of longint;\n    dis,cnt:array[-1..510000] of longint;\n    id:array[-1..510000,-1..11] of longint;\n    ask:array[-1..510000] of boolean;\n    l,r,k,i,j,n,m,num,tot,free,sink,source:longint;\n\nprocedure swap(var a,b:longint);var t:longint; begin t:=a; a:=b; b:=t; end;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot); from[tot]:=l; reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\nend;\n\nprocedure Insert(x:longint);\nvar father:longint;\nbegin\n    if x=1 then exit;\n    father:=x >> 1;\n    if heap[father]>heap[x] then\n    begin\n        swap(heap[x],heap[father]); swap(node[x],node[father]);\n        Insert(father);\n    end;\nend;\n\nprocedure Down(x:longint);\nvar son:longint;\nbegin\n    if x << 1>num then exit;\n    son:=x << 1;\n    if (son+1<=num)and(heap[son+1]<=heap[son]) then inc(son);\n    if heap[x]>heap[son] then begin swap(heap[x],heap[son]); swap(node[x],node[son]); end;\n    Down(son);\nend;\n\nprocedure Dijkstar;\nvar i,key,rope:longint;\nbegin\n    fillchar(ask,sizeof(ask),0);\n    rope:=0; dis[source]:=0; num:=0;\n    for i:=1 to free do\n    begin\n        inc(num); heap[num]:=dis[id[source,i]]; node[num]:=id[source,i];\n        Insert(num);\n    end;\n    repeat\n        key:=node[1];\n        heap[1]:=heap[num]; node[1]:=node[num];\n        dec(num); down(1);\n        if ask[key]=False then\n        begin\n            inc(rope); ask[key]:=True;\n            i:=cnt[key];\n            while i<>-1 do\n            begin\n                if (dis[reach[i]]>value[i]+dis[key]) then\n                begin\n                    dis[reach[i]]:=value[i]+dis[key];\n                    inc(num); heap[num]:=dis[reach[i]]; node[num]:=reach[i];\n                    Insert(num);\n                end;\n                i:=next[i];\n            end;\n        end;\n    until rope=n*free;\nend;\n\nbegin\n    filldword(dis,sizeof(dis) div 4,maxlongint div 84);\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1);\n    filldword(heap,sizeof(heap) div 4,0);\n    read(n,m,free,source,sink);\n    inc(free); inc(source); inc(sink);\n    for j:=1 to free do for i:=1 to n do id[i,j]:=(j-1)*n+i;\n    for j:=1 to free do dis[id[source,j]]:=0;\n    for i:=1 to m do\n    begin\n        read(l,r,k); inc(l); inc(r);\n        for j:=1 to free do begin add(id[l,j],id[r,j],k); add(id[r,j],id[l,j],k); end;\n        for j:=1 to free-1 do begin add(id[l,j],id[r,j+1],0); add(id[r,j],id[l,j+1],0); end;\n    end;\n    Dijkstar;\n    writeln(dis[id[sink,free]]);\nend.\n```",
        "postTime": 1543066281,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    },
    {
        "content": "\u6709\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u5237[\u8fd9\u9053\u9898](https://www.cnblogs.com/wzzorz/articles/10994078.html)  \n[\u539f\u9898link](https://www.luogu.org/problemnew/show/P4568)  \nDijkstra+dp(?)  \n\u9644\u6837\u4f8b\u56fe\u7247\uff0c\u4f7f\u7528EternalAlexander\u7684[OI painter](https://pan.baidu.com/s/1bt5zHPvulT7s8Qjg45LfkA)  \n![\u6837\u4f8b](https://i.loli.net/2019/06/13/5d023f6c1a91d96703.png)  \n(\u6211\u662f\u5148\u591a\u5efa\u8fb9)  \ndijkstra\uff0c\u5220\u6389vis\u6570\u7ec4\uff0cdp\u5373\u53ef  \ndist[i][j]\u4e3a\u70b9i\u7528\u6389j\u6b21\u514d\u8d39\u673a\u4f1a\u65f6\u5230\u6e90\u70b9\u7684\u6700\u77ed\u8def  \n\u5269\u4e0b\u7684\u5f88\u597d\u7406\u89e3?~~(\u96fe)~~\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,K;\nint ip1,ip2,ip3,st,en;\nint dist[10010][11];\nstruct edge\n{\n\tint to;\n\tint dis;\n\tint N;\n};\nstruct node\n{\n\tint dis;\n\tint pos,N;\n\tbool operator < (const node &x)const\n\t{\n\t\treturn x.dis<dis;\n\t}\n};\nvector<edge>a[10010];\nvoid Dijkstra(int x)\n{\n\tpriority_queue<node>q;\n\tfor(int i=0;i<=1;i++)\n\t{\n\t\tnode sta;\n\t\tsta.dis=0;\n\t\tsta.pos=x;\n\t\tsta.N=i;\n\t\tdist[x][i]=0;\n\t\tq.push(sta);\n\t}\n\twhile(!q.empty())\n\t{\n\t\tnode T=q.top();\n\t\tq.pop();\n\t\tint now=T.pos;\n\t\tfor(int i=0;i<a[now].size();i++)\n\t\t{\n\t\t\tif(a[now][i].N+T.N>K)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(dist[a[now][i].to][T.N+a[now][i].N]>dist[now][T.N]+a[now][i].dis)\n\t\t\t{\n\t\t\t\tdist[a[now][i].to][T.N+a[now][i].N]=dist[now][T.N]+a[now][i].dis;\n\t\t\t\tnode tmp;\n\t\t\t\ttmp.dis=dist[a[now][i].to][T.N+a[now][i].N];\n\t\t\t\ttmp.pos=a[now][i].to;\n\t\t\t\ttmp.N=T.N+a[now][i].N;\n\t\t\t\tq.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>K;\n\tcin>>st>>en;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>ip1>>ip2>>ip3;\n\t\ta[ip1].push_back((edge){ip2,ip3,0});\n\t\ta[ip2].push_back((edge){ip1,ip3,0});\n\t\ta[ip1].push_back((edge){ip2,0,1});\n\t\ta[ip2].push_back((edge){ip1,0,1});\n\t}\n\tfor(int i=0;i<=10001;i++)\n\t{\n\t\tfor(int j=0;j<=10;j++)\n\t\t{\n\t\t\tdist[i][j]=2147483647;\n\t\t}\n\t}\n\tDijkstra(st);\n\tprintf(\"%d\",dist[en][K]);\n}\n```\n",
        "postTime": 1560429318,
        "uid": 97593,
        "name": "G_A_TS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4568 \u3010[JLOI2011]\u98de\u884c\u8def\u7ebf\u3011"
    }
]