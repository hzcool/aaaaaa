[
    {
        "content": "\u8fd9\u91cc\u9898\u76ee\u4e0d\u6e05\u695a\uff0c\u9898\u76ee\u5927\u5bb6\u53bb\u7f51\u4e0a\u627e\n\n\u9898\u76ee\u6e05\u695a\u4e4b\u540e\u5c31\u662f\u6c34\u9898\n\n\u5148\u5bf9\u8fd9k\u4e2a\u67a2\u7ebd\u8dd1spfa\n\n\u90a3\u4e48\u4e4b\u540e\u8be2\u95ee\u7684\u65f6\u5019\u5c31\u770b\u8d77\u70b9\u662f\u4e0d\u662f\u67a2\u7ebd\n\n\u662f\u7684\u8bdd\u5c31\u76f4\u63a5\u8f93\u51faspfa\u7684\u7b54\u6848\n\n\u4e0d\u7136\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u67a2\u7ebd\uff0c\u90a3\u4e2a\u67a2\u7ebd\u9053\u91cd\u70b9\u7684\u503c\u52a0\u4e0a\u8d77\u70b9\u5230\u67a2\u7ebd\u7684\u503c\u53bbmin\n\n\u5c31\u597d\u5566\n\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst Ll N=2e4+5;\nstruct cs{int to,nxt,v;}a[N];\nint head[N],ll,d[201][N],v[N],ok[N];\nbool vi[N];\nint n,m,x,y,z,K,q,sum;\nLl s;\nvoid spfa(int v,int S){\n    queue<int>Q;\n    Q.push(S);d[v][S]=0;\n    while(!Q.empty()){\n        int x=Q.front();Q.pop();vi[x]=0;\n        for(int k=head[x];k;k=a[k].nxt)\n            if(d[v][a[k].to]>d[v][x]+a[k].v){\n                d[v][a[k].to]=d[v][x]+a[k].v;\n                if(!vi[a[k].to])vi[a[k].to]=1,Q.push(a[k].to);\n            }\n    }\n}\nvoid init(int x,int y,int v){a[++ll].to=y;a[ll].v=v;a[ll].nxt=head[x];head[x]=ll;}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&K,&q);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        init(x,y,z);\n    }\n    for(int i=1;i<=K;i++)scanf(\"%d\",&v[i]),ok[v[i]]=i;\n    memset(d,63,sizeof d);\n    for(int i=1;i<=K;i++)spfa(i,v[i]);\n    while(q--){\n        scanf(\"%d%d\",&x,&y);\n        int ans=1e9;\n        if(ok[x])ans=d[ok[x]][y];else\n            for(int k=head[x];k;k=a[k].nxt)\n                ans=min(ans,a[k].v+d[ok[a[k].to]][y]);\n        if(ans<=2e8)sum++,s+=ans;\n    }printf(\"%d\\n%lld\",sum,s);\n}\n\n```",
        "postTime": 1505562541,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3096 \u3010[USACO13DEC]\u5047\u671f\u8ba1\u5212\uff08\u9ec4\u91d1\uff09Vacation Planning (gold)\u3011"
    },
    {
        "content": "\u611f\u89c9\u9898\u76ee\u8bfb\u4e86\u5f88\u957f\u65f6\u95f4 \uff0c QAQ\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86\n\n\u9898\u76ee\u8bfb\u61c2\u540e\u96be\u5ea6\u53ef\u80fd\u5c31\u5728\u4ee3\u7801\u4e0a\u4e86 \uff0c \n\n\u56e0\u4e3a\u6bcf\u6761\u8fb9\u80af\u5b9a\u4e0e\u81f3\u5c11\u4e00\u4e2a\u6536\u8d39\u7ad9\u76f8\u8fde \uff0c\u800c\u4e14\u6536\u8d39\u7ad9\u4e2a\u6570\u5f88\u5c11 \uff0c \u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u60f3floyd\u90a3\u6837\u679a\u4e3e\u51fa\u6240\u6709\u8d77\u70b9 \uff0c \u53ea\u7528\u679a\u4e3e\u90a3k\u4e2a\u6536\u8d39\u7ad9\u5373\u53ef\n\n\u6b63\u56fe\u53cd\u56fe\u90fd\u5efa\u4e00\u4e0b \uff0c \u6bcf\u4e2a\u6536\u8d39\u7ad9\u4f5c\u4e3a\u8d77\u70b9\u8dd1\u4e00\u4e0b**\u6700\u77ed\u8def**\n\n\u7edf\u8ba1\u7b54\u6848\u65f6 \uff0c \u5982\u679c\u8d77\u70b9\u7ec8\u70b9\u662f\u6536\u8d39\u7ad9 \uff0c** ans= \u5230\u53e6\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u77ed\u8def** \uff0c \n\n\u5982\u679c\u4e0d\u662f \uff0c **ans= \u6536\u8d39\u7ad9->\u8d77\u70b9\uff08\u53cd\u56fe\uff09  + \u6536\u8d39\u7ad9->\u7ec8\u70b9 ** \n\n\u6700\u77ed\u8defdis\u7684\u4ee3\u7801\u7ec6\u8282\u8fd8\u662f\u8981\u6ce8\u610f\u4e0b \uff0c \u5982\u679c\u4e0d\u60f3\u5199\u591a\u4e2a\u677f\u5b50\uff0c \u90a3\u5c31\u8981\u52a0\u51e0\u4e2a\u7ef4\u5ea6\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n``` C++\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\n#define re register\n#define ll long long\n#define Rep(i,l,r) for(re int i=l;i<=r;++i)\n#define Max(a,b) ((a)>(b)?(a):(b))\n#define N 20005\n#define inf 2e8\n\nint n,m,k,q;\nint head[2][N] , tot[2] , ch[N];\nint p[205] , cnt;\nint dis[2][205][N] , vis[N];\nll s=0 , s2=0;\nstruct node{\n\tint v,nxt,w;\n}e[2][N*2];\ninline void add(int u,int v,int val,int num){\n\te[num][++tot[num]]=(node){v,head[num][u],val};\n\thead[num][u]=tot[num];\n}\n\nvoid spfa(int num1 , int U , int num){\n\tdis[num][num1][U]=0;\n\tqueue <int> q;\n\tmemset(vis,0,sizeof(vis));\n\tq.push(U) , vis[U]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front() ;\n\t\tq.pop() , vis[u]=0;\n\t\tfor(re int i=head[num][u];i;i=e[num][i].nxt){\n\t\t\tint v=e[num][i].v;\n\t\t\tif(dis[num][num1][v]>dis[num][num1][u]+e[num][i].w){\n\t\t\t\tdis[num][num1][v]=dis[num][num1][u]+e[num][i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t\tvis[v]=1 , q.push(v); \n\t\t\t}\n\t\t}\n\t}\n}\nvoid init(int num,int u){\n\tspfa(num,u,1);\n\tspfa(num,u,0);\n}\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&k,&q);\n\tRep(i,1,m){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w,1) , add(v,u,w,0);\n\t}\n\tmemset(dis,35,sizeof(dis));\n\tRep(i,1,k) scanf(\"%d\",&p[++cnt]) , ch[p[cnt]]=cnt , init(cnt,p[cnt]);\n\tRep(i,1,q){\n\t\tint u,v , ans=inf;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(ch[u]) ans=dis[1][ch[u]][v];\n\t\tif(ch[v]) ans=min(ans,dis[0][ch[v]][u]);\n\t\tif(ans==inf)\n\t\t\tRep(j,1,k) ans=min(ans , dis[0][j][u]+dis[1][j][v]);\n\t\ts+= (ans<inf?ans:0); s2+=(ans<inf?1:0);\n\t}\n\tcout<<s2<<endl<<s;\n\treturn 0;\n}\n``` ",
        "postTime": 1540250056,
        "uid": 65987,
        "name": "SuperGoodGame",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3096 \u3010[USACO13DEC]\u5047\u671f\u8ba1\u5212\uff08\u9ec4\u91d1\uff09Vacation Planning (gold)\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c$n$ \u4e2a\u70b9\uff0c$m$ \u6761\u5355\u5411\u8fb9\u3002\n\n\u6bcf\u6761\u5355\u5411\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u662f\u67a2\u7ebd\uff0c\u603b\u5171\u6709 $k$ \u4e2a\u67a2\u7ebd\u3002\n\n\u7ed9\u51fa\u82e5\u5e72\u5bf9\u5f62\u5982 ```x y``` \u7684\u8be2\u95ee\uff0c\u8868\u793a\u8be2\u95ee\u80fd\u5426\u4ece $x$ \u70b9\u8d70\u5230\u5230 $y$ \u70b9\u3002\n\n\u6c42\u51fa\u80fd\u6210\u7acb\u7684\u8be2\u95ee\u7684\u4e2a\u6570\uff0c\u4ee5\u53ca\u6240\u6709\u8be2\u95ee\u7684\u6700\u77ed\u8def\u7a0b\u548c\u3002\n\n## Solution\n\n### \u5177\u4f53\u601d\u8def\n\n\u53d1\u73b0\u5982\u679c\u6bcf\u4e2a\u70b9\u90fd\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u95ee\u9898\u5c31\u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\u3002\n\n\u4f46\u662f $n\\le 20000$\uff0c\u6570\u7ec4\u663e\u7136\u5f00\u4e0d\u4e0b\u3002\n\n\u53e6\u5916\u6709\u8def\u5f84\u5fc5\u987b\u7ecf\u8fc7\u81f3\u5c11\u4e00\u4e2a\u67a2\u7ebd\u7684\u9650\u5236\uff0c\u6240\u4ee5\u53ea\u5bf9\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\u4e5f\u662f\u884c\u4e0d\u901a\u7684\u3002\n\n\u5df2\u77e5\u6bcf\u6761\u8fb9\u7684\u81f3\u5c11\u4e00\u4e2a\u7aef\u70b9\u4e3a\u67a2\u7ebd\uff0c\u4e14\u6700\u591a $k$ \u4e2a\uff0c$k\\le 200$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u4e2a\u67a2\u7ebd\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5c31\u53ef\u4ee5\u638c\u63e1\u5168\u56fe\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff1a\n\n- \u5982\u679c\u8d77\u70b9\u662f\u67a2\u7ebd\uff0c\u5df2\u7ecf\u8dd1\u8fc7\u6700\u77ed\u8def\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u3002\n\n- \u5982\u679c\u8d77\u70b9\u4e0d\u662f\u67a2\u7ebd\uff0c\u90a3\u4e48\u5176\u80fd\u904d\u5386\u5230\u7684\u70b9\u4e00\u5b9a\u662f\u67a2\u7ebd\uff0c\u800c\u5bf9\u4e8e\u67a2\u7ebd\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d6\u8d77\u70b9\u5230\u67a2\u7ebd\u7684\u8fb9\u6743\u4e0e\u67a2\u7ebd\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n\u53e6\u5916\u6ce8\u610f\uff0c\u867d\u7136 $k\\le 200$\uff0c\u4f46\u662f\u7ed9\u51fa\u7684\u67a2\u7ebd\u7f16\u53f7\u8303\u56f4\u662f $[1,20000]$\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u5176\u7f16\u53f7\u4f5c\u4e3a\u6570\u7ec4\u7684\u4e00\u7ef4\u4f1a\u5f00\u4e0d\u4e0b\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\uff0c\u672c\u9898\u53ef\u4ee5\u5b8c\u6210\u3002\n\n## Code\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#define maxn 40010\n#define INF 0x3f3f3f3f\n#define int long long\n\nusing namespace std;\n\nbool vis[maxn];\nint n,m,k,q,tot,ans,cnt,pre[maxn];\nint Dis[maxn],head[maxn],path[210][maxn];\nstruct edge{int fr,to,dis,nxt;}e[maxn];\n\ninline int read(){\n    int s=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n    return s*w;\n}\n\nvoid add(int fr,int to,int dis){\n    e[++tot]=(edge){fr,to,dis,head[fr]};head[fr]=tot;\n}\n\nvoid Dijk(int s){\n    priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\n    memset(Dis,INF,sizeof Dis);memset(vis,0,sizeof vis);q.push(make_pair(0,s));Dis[s]=0;\n    while(!q.empty()){\n        int u=q.top().second;q.pop();\n        if(vis[u]) continue;vis[u]=1;\n        for(int i=head[u];i;i=e[i].nxt){\n            int to=e[i].to;\n            if(Dis[to]>Dis[u]+e[i].dis)\n                Dis[to]=Dis[u]+e[i].dis,\n                q.push(make_pair(Dis[to],to));\n        }\n    }\n    for(int i=1;i<=n;i++) path[pre[s]][i]=Dis[i];\n}\n\nsigned main(){\n    memset(path,INF,sizeof path);\n    n=read();m=read();k=read();q=read();     \n    for(int i=1,fr,to,dis;i<=m;i++){\n        fr=read();to=read();dis=read();\n        add(fr,to,dis);\n    }\n    for(int i=1,pos;i<=k;i++)\n        pos=read(),pre[pos]=i,Dijk(pos);\n    for(int i=1,fr,to;i<=q;i++){\n        fr=read();to=read();\n        if(pre[fr]&&path[pre[fr]][to]<path[0][0]) cnt++,ans+=path[pre[fr]][to];\n        else{\n            int now=INF;\n            for(int j=head[fr];j;j=e[j].nxt){\n                int v=e[j].to;\n                now=min(e[j].dis+path[pre[v]][to],now);\n            }\n            if(now!=INF&&now<path[0][0]) ans+=now,cnt++;\n        }\n    }\n    printf(\"%lld\\n%lld\",cnt,ans);\n    return 0;\n} \n```\n",
        "postTime": 1619678662,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3096 \u3010[USACO13DEC]Vacation Planning G\u3011"
    },
    {
        "content": "[\u539f\u9898](https://www.luogu.com.cn/problem/P3096)\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\u7684\u6709\u5411\u7b80\u5355\u56fe\uff0c\u5176\u4e2d\u6709$k$\u4e2a\u70b9\u662f\u67a2\u7ebd\uff0c\u5e76\u544a\u8bc9\u4f60\u8fd9$k$\u4e2a\u70b9\u3002\n\n$(1\\le n,m\\le 20000$\uff0c$1\\le k\\le 200)$\n\n\u7ed9\u5b9a$1\\le q\\le 50000$\u4e2a\u8be2\u95ee\uff0c\u7b2c$i$\u4e2a\u8be2\u95ee\u7ed9\u51fa$u_i$\u548c$v_i$\uff0c\u6c42\n\n$\\large\\sum\\limits_{i=1}^q{pos(u_i,v_i)}\\quad$\u53ca$\\quad\\large\\sum\\limits_{i=1}^q{dis(u_i,v_i)}$\n\n\u5176\u4e2d\uff0c\u5f53$u$\u53ef\u4ee5\u7ecf\u8fc7\u81f3\u5c11\u4e00\u4e2a\u67a2\u7ebd\u5230\u8fbe$v$\u65f6\uff0c$pos(u,v) = 1$\n\n\u5426\u5219$pos(u,v) = 0$\uff1b\n\n\u800c\u5f53$pos(u,v) = 0$\u65f6\uff0c$dis(u,v) = 0$\n\n\u5426\u5219$dis(u,v)$\u4e3au\u7ecf\u8fc7\u81f3\u5c11\u4e00\u4e2a\u67a2\u7ebd\u5230\u8fbev\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\n~~\u600e\u4e48\u8fd9\u4e48\u7ed5\u554a~~\n\n### \u601d\u8def\n\n\u663e\u7136\u8dd1$n^3$\u7684Floyd\u662f\u4f1a\u59a5\u59a5\u7684T\u98de\u7684\u3002\u8ba9\u6211\u4eec\u6362\u4e2a\u89d2\u5ea6\u601d\u8003\u3002\n\n\u6ce8\u610f\u5230$k\\le 200$~~\u5341\u5206\u597d\u6b3a\u8d1f~~\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u600e\u4e48\u641e\u51fa\u4e00\u4e2a\u4f9d\u8d56$k$\u7684\u7b97\u6cd5\u3002\n\n\u53c2\u8003\u8fd9\u9053\u9898\u7684\u83dc\u9e21\u7248\u672c[P3094](https://www.luogu.com.cn/problem/P3094)\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u67a2\u7ebd\u6765\u8ba1\u7b97\u6700\u77ed\u8def\n\n\u56e0\u6b64\u6211\u4eec\u4e0d\u7528\u8ba1\u7b97\u51fa\u6bcf\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u53ea\u9700\u8ba1\u7b97\uff1a\n\n(1)\u6240\u6709\u70b9\u5230\u6240\u6709\u67a2\u7ebd\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n(2)\u6240\u6709\u67a2\u7ebd\u5230\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n\u60f3\u8981\u8ba1\u7b97(1)\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u53cd\u5411\u56fe\uff0c\u5bf9\u6240\u6709\u67a2\u7ebd\u8dd1\u4e00\u904ddijkstra\uff1b\n\n\u8ba1\u7b97(2)\u5219\u53ea\u9700\u5bf9\u6b63\u5411\u56fe\u4e2d\u7684\u6240\u6709\u67a2\u7ebd\u8dd1\u4e00\u904ddijkstra\u3002\n\n\u6700\u540e\u679a\u4e3e\u67a2\u7ebd\uff0c\u7edf\u8ba1\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u5c0f\u6280\u5de7\uff1a\u5efa\u8fb9\u7684\u65f6\u5019\u6bcf\u5efa\u4e00\u6761$(u,v)$\u7684\u8fb9\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u5efa\u4e00\u6761$(v+n,u+n)$\u7684\u8fb9\u4f5c\u4e3a\u53cd\u5411\u8fb9\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u5f00\u4e24\u4e2a\u6570\u7ec4\u3002\n\n### \u4ee3\u7801\n\n```cpp\n// \u6b64\u5904\u5e94\u6709\u5934\u6587\u4ef6...\nconst int N = 4e4 + 10,M = 2e2 + 10;\nconst int inf = 0x3fffffff;\nint n,m,s,k,q; // s\u4e3a\u6e90\u70b9 \nint cnt = 0;\nint st[N][M]; // \u8bb0\u5f55\u6240\u6709\u70b9\u5230\u6240\u6709\u67a2\u7ebd\u4e4b\u95f4\u7684\u6700\u77ed\u8def \nint ed[M][N]; // \u8bb0\u5f55\u6240\u6709\u67a2\u7ebd\u5230\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def \nint mid[M]; // \u67a2\u7ebd\nint dis[N];\nbool vis[N];\nint head[N];\nstruct edge\n{\n\tint v,w;\n\tint nxt;\n}edge[N];\nstruct node\n{\n\tint dis,num;\n\tbool operator < (const node &x) const\n\t\t{return x.dis < dis;}\n};\nvoid add(int u , int v , int w)\n{\n\t++cnt;\n\tedge[cnt].v = v;\n\tedge[cnt].w = w;\n\tedge[cnt].nxt = head[u];\n\thead[u] = cnt;\n\treturn ;\n}\nvoid dijkstra()\n{\n\tfor(int i = 1;i <= n << 1;i++) // \u5faa\u73af\u5f00\u4e24\u500d\uff0c\u540c\u65f6\u521d\u59cb\u5316\u53cd\u5411\u8fb9\u57df \n\t\tdis[i] = inf;\n\tmemset( vis , false , sizeof(vis) ); \n\tdis[s] = 0;\n\tpr_q<node> q;\n\tq.push( (node){0 , s} );\n\twhile( !q.empty() )\n\t{\n\t\tint u = q.top().num;\n\t\tq.pop();\n\t\tif( vis[u] )\n\t\t\tcontinue;\n\t\tvis[u] = true;\n\t\tfor(int i = head[u];i;i = edge[i].nxt)\n\t\t{\n\t\t\tint v = edge[i].v;\n\t\t\tif(dis[v] > dis[u] + edge[i].w) // relax\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + edge[i].w;\n\t\t\t\tq.push( (node){dis[v] , v} );\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin >> n >> m >> k >> q;\n\tint u,v,w;\n\tfor(int i = 1;i <= m;i++)\n\t\tcin >> u >> v >> w,add(u , v , w),add(v + n , u + n , w); // \u53cd\u5411\u8fb9 \n\tfor(int i = 1;i <= k;i++)\n\t{\n\t\tcin >> mid[i];\n\t\ts = mid[i] + n; // \u5bf9\u53cd\u5411\u56fe\u8dd1dijkstra. \n\t\tdijkstra();\n\t\tfor(int j = n + 1;j <= n << 1;j++) // \u522b\u5fd8\u4e86\u4ecen+1\u5f00\u59cb \n\t\t\tif(dis[j] != inf)\n\t\t\t\tst[j - n][i] = dis[j];\n\t\t\telse\n\t\t\t\tst[j - n][i] = -1; // \u8fd9\u91cc\u8d4b\u6210-1\u662f\u4e3a\u4e86\u5904\u7406\u8be2\u95ee\u65f6u\u6216v\u5c31\u662f\u67a2\u7ebd\u7684\u60c5\u51b5 \n\t\ts = mid[i]; // \u5bf9\u6b63\u5411\u56fe\u8dd1dijkstra. \n\t\tdijkstra();\n\t\tfor(int j = 1;j <= n;j++)\n\t\t\tif(dis[j] != inf)\n\t\t\t\ted[i][j] = dis[j];\n\t\t\telse\n\t\t\t\ted[i][j] = -1;\n\t}\n\tint ans = 0,c = 0; // \u6700\u77ed\u8def\u957f\u5ea6\u548c\uff0c\u53ef\u5230\u8fbe\u7684\u6570\u91cf\n\twhile(q--)\n\t{\n\t\tint minn = inf; \n\t\tcin >> u >> v;\n\t\tfor(int i = 1;i <= k;i++)\n\t\t\tif( st[u][i] != -1 && ed[i][v] != -1 )\n\t\t\t\tminn = min(st[u][i] + ed[i][v] , minn);\n\t\tif(minn != inf)\n\t\t\t++c,ans += minn;\n\t}\n\tcout << c << endl << ans << endl;\n    return 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nklogn+qk)$\uff0c\u4e0d\u8fc7\u542c\u8bf4\u8fd9\u9898SPFA\u8dd1\u7684\u6bd4dijkstra\u5feb\n\n~~\u6545\u800c\u8981\u5f00O2\uff0c\u4e0d\u7136\u59a5\u59a5\u7684T\u98de~~",
        "postTime": 1605873448,
        "uid": 203763,
        "name": "iorit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3096 \u3010[USACO13DEC]Vacation Planning G\u3011"
    },
    {
        "content": "\u8003\u8651k\u53ea\u6709200.\u4ece\u9898\u9762\u5f97\u4e4b\u4ed6\u6bcf\u6761\u8def\u4e0d\u53ef\u80fd\u5728\u4e24\u4e2a\u975e\u67a2\u7ebd\u8282\u70b9\u4e4b\u95f4\u76f8\u8fde\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7684\u7b54\u6848\u4e5f\u5fc5\u5b9a\u662f u-\u67a2\u7ebd\u8282\u70b9i-v\u3002\n\ni\u53ef\u4ee5\u679a\u4e3e\u5f97\u5230\u3002\u90a3\u4e48\u5c31\u8981\u6c42dis\uff08u,i\uff09+dis\uff08i,v\uff09\u6700\u77ed\uff0ck\u65e2\u7136\u8fd9\u4e48\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u67a2\u7ebd\u8282\u70b9\uff0c\u5bf9\u539f\u56fe\uff0c\u53cd\u56fe\u5747\u505a\u4e00\u904d\u6700\u77ed\u8def\u3002\u5f53\u7136\u5806\u4f18\u5316dij\u6bd4spfa\u4f18\uff1f\uff1f\uff08\u6211\u4e0d\u786e\u5b9a\u8fd9\u6837\u7684\u56fespfa\u4f1a\u4e0d\u4f1a\u88ab\u5361\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define pa pair<int ,int >\nusing namespace std;\nconst int maxm=20005,maxn=20005;\nstruct edge{\n\tint link,next,val;\n}e[maxm];\nint n,m,k,q,tot,head[maxn];\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\ninline void add_edge(int u,int v,int w){\n\te[++tot]=(edge){v,head[u],w}; head[u]=tot;\n}\nint p1[maxn],p2[maxn],p3[maxn];\ninline void init(){\n\tn=read(); m=read(); k=read(); q=read();\n\tfor (int i=1;i<=m;i++){\n\t\tp1[i]=read(); p2[i]=read(); p3[i]=read();\n\t\tadd_edge(p1[i],p2[i],p3[i]); \n\t}\n}\nint nod[maxn],dis2[205][maxn],dis1[205][maxn],vis[maxn];\npriority_queue<pa, vector<pa > ,greater<pa> >heap;\ninline void dijkstra(int * dis,int x){\n\tmemset(dis,60,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[x]=0; heap.push(make_pair(dis[x],x));\n\twhile (!heap.empty()){\n\t\tint u=heap.top().second; heap.pop();\n\t\tif (vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (dis[v]>dis[u]+e[i].val){\n\t\t\t\tdis[v]=dis[u]+e[i].val;\n\t\t\t\theap.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nconst int inf=1e9;\nint can,sum;\ninline void solve(){\n\tfor (int i=1;i<=k;i++){\n\t\tnod[i]=read();\n\t}\n\tfor (int i=1;i<=k;i++) dijkstra(dis1[i],nod[i]);\n\ttot=0; memset(head,0,sizeof(head));\n\tfor (int i=1;i<=m;i++){\n\t\tadd_edge(p2[i],p1[i],p3[i]); \n\t}\n\tfor (int i=1;i<=k;i++) dijkstra(dis2[i],nod[i]);\t\n\tfor (int i=1;i<=q;i++){\n\t\tint u=read(),v=read(),ans=inf;\n\t\tfor (int j=1;j<=k;j++){\n\t\t\tans=min(ans,dis2[j][u]+dis1[j][v]); \n\t\t}\n\t\tif (ans!=inf) can++,sum+=ans;\n\t}\n\twriteln(can); writeln(sum);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1523089157,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3096 \u3010[USACO13DEC]\u5047\u671f\u8ba1\u5212\uff08\u9ec4\u91d1\uff09Vacation Planning (gold)\u3011"
    }
]