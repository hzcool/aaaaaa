[
    {
        "content": "\u9996\u5148\u5ba3\u4f20blog\uff1a[blog](http://blog.csdn.net/stone41123/article/details/78172774)\n\n###\u9898\u89e3\n\n\u8fd9\u4e2a\u9898\u660e\u663e\u662fdp\uff0c\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55dp\u3002\n\n\u6211\u4eec\u628a\u56db\u79cd\u72b6\u6001\uff1a\uff08\u672c\u5217\uff09\u90091\uff0c\u90092\uff0c\u90093\uff08\u5927\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u4e2a\uff09\uff0c\u90093\uff08\u5c0f\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u4e2a\uff09\n\n\u5206\u522b\u79f0\u4e3a\uff1a\u72b6\u60011\uff0c\u72b6\u60012\uff0c\u72b6\u60013\uff0c\u72b6\u60014\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u72b6\u60011\u53ef\u4ee5\u7531\u524d\u9762\u7684\u72b6\u60011\uff0c2\uff0c3\uff0c4\u63a8\u8fc7\u6765\uff0c\u53ea\u8981\u6ee1\u8db3\u90a3\u4e00\u4f4d\u6240\u9009\u7684\u6570\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7684\u6570\u3002\n\n\u7c7b\u4f3c\u7684\uff0c\u72b6\u60012\u4e5f\u53ef\u4ee5\u7531\u524d\u9762\u7684\u72b6\u60011\uff0c2\uff0c3\uff0c4\u63a8\u8fc7\u6765\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u7136\u800c\uff0c\u72b6\u60013\u5374\u4e0d\u53ef\u4ee5\u7531\u72b6\u60014\u9012\u63a8\u8fc7\u6765\uff0c\u56e0\u4e3a\u5fc5\u987b\u4fdd\u8bc1\u65b9\u5411\u76f8\u540c\u3002\n\n\u540c\u6837\u7684\uff0c\u72b6\u60014\u4e5f\u4e0d\u53ef\u4ee5\u7531\u72b6\u60013\u9012\u63a8\u8fc7\u6765\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u8fd9\u6837\u4e00\u4e2a\u72b6\u6001\uff1a\n\n$dp(k,i)\u8868\u793a\u4ee5\u7b2ci\u4f4d\u5728\u7b2ck\u79cd\u72b6\u6001\u7ed3\u5c3e\u7684\u6700\u5927\u5e8f\u5217\u957f\u5ea6$\n\n$\u8f6c\u79fb\u5982\u4e0b\uff1a$\n\n$dp(1,i)=max(dp(k,j))(1<=k<=4,1<=j<i,val_{1,j}<=val_{1,i})+1$\n\n$dp(2,i)=max(dp(k,j))(1<=k<=4,1<=j<i,val_{1,j}>=val_{1,i})+1$\n\n$dp(3,i)=max(dp(k,j))(1<=k<=4,k\\not =4 ,1<=j<i,val_{1,j}<=val_{1,i})+1$\n\n$dp(4,i)=max(dp(k,j))(1<=k<=4,k\\not =3,1<=j<i,val_{1,j}>=val_{1,i})+1$\n\n\u66b4\u529b\u8f6c\u79fb\u5c31\u662f$O(n^2)$\n\n\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u67e5\u8be2\uff0c\u6bd4\u5982\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u72b6\u6001\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u6b21\u8f6c\u79fb\u65f6\u591a\u67e5\u8be2\u51e0\u6b21\uff0c\u8fd9\u6837\u4e0d\u5bb9\u6613\u9519\uff0c\u7136\u540e\u6bcf\u6b21\u8ba1\u7b97\u5b8c\u7b54\u6848\u4e4b\u540e\u5c06\u503c\u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u4e2d\u3002\n\n\u8dd1\u5f97\u8fd8\u633a\u5feb\uff0c\u6700\u6162\u7684\u70b9400ms\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x=0;char ch=' ';int f=1;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')f=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nint n,size;\nint a[100001],b[100001],c[100001],num[300001];\nint dp[5][100001],t[5][1200001];\ninline void insert(int id,int rt,int l,int r,int pos,int v){\n    if(l==r){t[id][rt]=max(t[id][rt],v);return;}\n    int mid=(l+r)>>1;\n    if(pos<=mid)insert(id,rt<<1,l,mid,pos,v);\n    else insert(id,rt<<1|1,mid+1,r,pos,v);\n    t[id][rt]=max(t[id][rt<<1],t[id][rt<<1|1]);\n}\ninline int query(int id,int rt,int l,int r,int L,int R){\n    if(L<=l&&r<=R)return t[id][rt];\n    int mid=(l+r)>>1;\n    int ans=0;\n    if(L<=mid)ans=max(ans,query(id,rt<<1,l,mid,L,R));\n    if(mid+1<=R)ans=max(ans,query(id,rt<<1|1,mid+1,r,L,R));\n    return ans;\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++)a[i]=read(),num[++size]=a[i];\n    for(int i=1;i<=n;i++)b[i]=read(),num[++size]=b[i];\n    for(int i=1;i<=n;i++)c[i]=read(),num[++size]=c[i];\n    sort(num+1,num+size+1);\n    size=unique(num+1,num+size+1)-num-1;\n    for(int i=1;i<=n;i++)a[i]=lower_bound(num+1,num+size+1,a[i])-num;\n    for(int i=1;i<=n;i++)b[i]=lower_bound(num+1,num+size+1,b[i])-num;\n    for(int i=1;i<=n;i++)c[i]=lower_bound(num+1,num+size+1,c[i])-num;\n    for(int i=1;i<=n;i++){\n        dp[1][i]=max(dp[1][i],query(1,1,1,size,1,a[i]));\n        dp[1][i]=max(dp[1][i],query(2,1,1,size,1,a[i]));\n        dp[1][i]=max(dp[1][i],query(3,1,1,size,1,a[i]));\n        dp[1][i]=max(dp[1][i],query(4,1,1,size,1,a[i]));\n        dp[1][i]++;\n        dp[2][i]=max(dp[2][i],query(1,1,1,size,b[i],size));\n        dp[2][i]=max(dp[2][i],query(2,1,1,size,b[i],size));\n        dp[2][i]=max(dp[2][i],query(3,1,1,size,b[i],size));\n        dp[2][i]=max(dp[2][i],query(4,1,1,size,b[i],size));\n        dp[2][i]++;\n        dp[3][i]=max(dp[3][i],query(1,1,1,size,1,c[i]));\n        dp[3][i]=max(dp[3][i],query(2,1,1,size,1,c[i]));\n        dp[3][i]=max(dp[3][i],query(3,1,1,size,1,c[i]));\n        dp[3][i]++;\n        dp[4][i]=max(dp[4][i],query(1,1,1,size,c[i],size));\n        dp[4][i]=max(dp[4][i],query(2,1,1,size,c[i],size));\n        dp[4][i]=max(dp[4][i],query(4,1,1,size,c[i],size));\n        dp[4][i]++;\n        insert(1,1,1,size,a[i],dp[1][i]);\n        insert(2,1,1,size,b[i],dp[2][i]);\n        insert(3,1,1,size,c[i],dp[3][i]);\n        insert(4,1,1,size,c[i],dp[4][i]);\n    }\n    int ans=0;\n    for(int k=1;k<=4;k++){\n        for(int i=1;i<=n;i++){\n            ans=max(ans,dp[k][i]);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1507398485,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3928 \u3010SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u3011"
    },
    {
        "content": "\u4e00\u9053$dp$\u9898\uff08\u5f53\u7136\u8003\u8bd5\u65f6\u5019\u6211\u5e76\u6ca1\u6709\u60f3\u51fa\u6765\uff09\n\n\u7531\u4e8e\u6570\u636e\u592a\u6c34\uff0c\u4f60\u53ea\u9700\u8981\n```cpp\nprintf(\"%d\\n\", read());\n```\n\u5c31\u670920\u5206\u3002\u3002\u3002\u3002\u3002\u3002\n\n## \u6b63\u89e3\uff1a\n\u8bbe$f[i][j]$\uff0c\u8868\u793a\u7b2c$i$\u5217\uff0c\u72b6\u6001\u662f$j$\u53ef\u83b7\u5f97\u7684\u6700\u5927\u957f\u5ea6\u8bbe\u7b2c\u4e00\u884c\u4e3aA\uff0c \u7b2c\u4e8c\u884c\u4e3aB\uff0c \u7b2c\u4e09\u884c\u4e3aC\n\n\u90a3\u5c31\u6709\u4eceA\u8fc7\u6765\u7684\uff0c\u4eceB\u8fc7\u6765\u7684\uff0c\u4eceC\u5347\u5e8f\u8fc7\u6765\u7684\uff0c\u4eceC\u964d\u5e8f\u8fc7\u6765\u7684\u56db\u79cd\u60c5\u51b5\uff0c\u8003\u8651\u8f6c\u79fb\n\n\u5982\u679c\u662fA\uff0c$f[i][A]$\u5c31\u9700\u8981\u5728A\u65f6\u5019\u5224\u65ad\u80fd\u4e0d\u80fd\u52a0\uff0c\u5426\u5219\u5c31\u548c\u5176\u4ed6\u7684\u53d6\u4e2aMAX\uff0cB\u540c\u7406\uff0cC\u7684\u8bdd\uff0c\u770b\u770b\u662f\u4ece\u5347\u6216\u964d\u54ea\u4e00\u4e2a\n\n\u5347\u7684\u548c\u964d\u7684\u53d6MAX\u5c31\u884c\uff0c$m$\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u5148\u79bb\u6563\u5316\uff0c\u4e4b\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u8fd9\u662f\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5176\u4e2d$j$\u662f\u4f60\u679a\u4e3e\u7684\u72b6\u6001\n\n```cpp\nf[i][0] = max(f[i][0], query(1, j, 1, cnt, 1, a[i][0]) + 1);\nf[i][1] = max(f[i][1], query(1, j, 1, cnt, a[i][1], cnt) + 1);\nif(j != 3) f[i][2] = max(f[i][2], query(1, j, 1, cnt, 1, a[i][2]) + 1);\nif(j != 2) f[i][3] = max(f[i][3], query(1, j, 1, cnt, a[i][2], cnt) + 1);\n```\n\u4e4b\u540e\u518d\u5206\u522b$Change$\u4e00\u904d\u5c31\u5b8c\u4e86\uff0c\u5e94\u8be5\u597d\u7406\u89e3\u5427\n```cpp\nChange(1, 0, 1, cnt, a[i][0], f[i][0]);\nChange(1, 1, 1, cnt, a[i][1], f[i][1]);\nChange(1, 2, 1, cnt, a[i][2], f[i][2]);\nChange(1, 3, 1, cnt, a[i][2], f[i][3]);\n```\n\u5b8c\u7ed3\u6492\u82b1\uff1f",
        "postTime": 1571399285,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3928 \u3010SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u3011"
    },
    {
        "content": "\u4f20\u9001\u95e8\uff01\n\n\u6700\u7b80\u5355\u7684\u66b4\u529b\uff1a\u8f93\u51faN\uff0820\uff09\uff01\n\n\u6b63\u89e3DP\uff1a\n\n60DP\uff1a\n\ndp[i][j]\u4e3a\u9009\u7b2ci\u884c\u5230\u7b2cj\u4f4d\u7f6e\u6700\u957f\u7684\u7b26\u5408\u8981\u6c42\u7684\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u6211\u4eec\u628a\u7b2c\u4e09\u4e2a\u5e8f\u5217\u9009\u4e0a\u5347\u7684\u5b9a\u4e49\u4e3adp[3][j]\n\n\u4e0b\u964d\u7684\u5b9a\u4e49\u4e3adp[4][j]\u3002\n\n\u72b6\u6001\u8f6c\u79fb\uff1a\n\n\u5f88\u660e\u663e\n\ndp[1][j]=max(dp[1][1->(j-1)],dp[2][1->(j-1)],dp[3][1->(j-1)],dp[4][1->(j-1)])+1(\u524d\u63d0\u662f\u8981\u5927\u4e8e\u7b49\u4e8e\u8f6c\u79fb\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a)\n\ndp[2][j]\u7684\u8f6c\u79fb\u540c\u7406\u3002\n\n\u5bf9\u4e8edp[3][j]\uff0c\u5f88\u660e\u663e\u4e0d\u80fd\u7531dp[4][1->(j-1)]\u8f6c\u79fb\u800c\u6765\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u8981\u6574\u5355\u8c03\u7684\u3002\n\n\u5bf9\u4e8edp[4][j]\u540c\u7406\u3002\n\n\u6700\u540e\u8f93\u51famax(dp[i][j])\uff08i=1->4,j=1->n\uff09.\n\n\u590d\u6742\u5ea6O(n^2)\u3002\n\n\u7ebf\u6bb5\u6811\u4f18\u5316\uff08100\uff09\uff1a\n\n\u5bf9\u4e8e\u8f6c\u79fb\uff0c\u7531\u4e8e\u6211\u4eec\u53d6max\uff0c\u90a3\u4e48\u53ef\u4ee5\u7ef4\u62a4\u56db\u68f5\u7ebf\u6bb5\u6811\u6765\u5feb\u901f\u6c42\u89e3\u6700\u5927\u503c\u3002\n\n\u7528\u6570\u7ec4\u4e2d\u5177\u4f53\u7684\u503c\u4f5c\u4e3a\u7ebf\u6bb5\u6811\u7684\u7aef\u70b9\n\n\u67e5\u8be2\u6bd4\u5f53\u524d\u5c0f\u7684\uff081->\u503c\uff09\n\n\u67e5\u8be2\u6bd4\u5f53\u524d\u5927\u7684\uff08\u503c->n\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2adp[i][j]\uff0c\u8f6c\u79fb\u5b8c\u4ee5\u540e\u63d2\u5165\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u4f46\u662f\u503c<=1000000000\u3002\u592a\u5927\u548b\u529e\u3002\n\n\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u628a\u5927\u5c0f\u5173\u7cfb\u6574\u597d\u5c31\u884c\uff01\n\n\u590d\u6742\u5ea6O(nlogn)\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio> \n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int maxm=1100000;\nint a[maxm],b[maxm],c[maxm];\nint num[3*maxm],cnt;\nint tree[5][4*maxm];\nint dp[5][maxm];\nvoid updata(int id,int o,int l,int r,int ind,int ans)\n{\n    if(l==r)\n    {\n        tree[id][o]=max(tree[id][o],ans);\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(ind<=mid)\n     updata(id,(o<<1),l,mid,ind,ans);\n    else\n     updata(id,(o<<1)|1,mid+1,r,ind,ans);\n    tree[id][o]=max(tree[id][(o<<1)],tree[id][(o<<1)|1]);\n}\nint ask(int id,int o,int l,int r,int ql,int qr)\n{\n    if(ql>r||qr<l) return -1;\n    if(ql<=l&&qr>=r) return tree[id][o];\n    int mid=l+((r-l)>>1);\n    int p1=ask(id,(o<<1),l,mid,ql,qr);\n    int p2=ask(id,(o<<1)+1,mid+1,r,ql,qr);\n    return max(p1,p2);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n     scanf(\"%d\",&a[i]),num[++cnt]=a[i];\n    for(int i=1;i<=n;i++)\n     scanf(\"%d\",&b[i]),num[++cnt]=b[i];\n    for(int i=1;i<=n;i++)\n     scanf(\"%d\",&c[i]),num[++cnt]=c[i];\n    sort(num+1,num+cnt+1);\n    int t=unique(num+1,num+cnt+1)-num-1;//\u79bb\u6563\u5316\n    for(int i=1;i<=n;i++)\n     a[i]=lower_bound(num+1,num+t+1,a[i])-num;\n    for(int i=1;i<=n;i++)\n     b[i]=lower_bound(num+1,num+t+1,b[i])-num;\n    for(int i=1;i<=n;i++)\n     c[i]=lower_bound(num+1,num+t+1,c[i])-num;//\u8fd8\u539f\u5927\u5c0f\u5173\u7cfb\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=4;j++)\n         dp[1][i]=max(dp[1][i],ask(j,1,1,t,1,a[i]));\n        for(int j=1;j<=4;j++)\n         dp[2][i]=max(dp[2][i],ask(j,1,1,t,b[i],t));\n        dp[3][i]=max(dp[3][i],ask(1,1,1,t,1,c[i]));\n        dp[3][i]=max(dp[3][i],ask(2,1,1,t,1,c[i]));\n        dp[3][i]=max(dp[3][i],ask(3,1,1,t,1,c[i]));\n        dp[4][i]=max(dp[4][i],ask(1,1,1,t,c[i],t));\n        dp[4][i]=max(dp[4][i],ask(2,1,1,t,c[i],t));\n        dp[4][i]=max(dp[4][i],ask(4,1,1,t,c[i],t));\n        dp[1][i]++,dp[2][i]++,dp[3][i]++,dp[4][i]++;\n        updata(1,1,1,t,a[i],dp[1][i]);\n        updata(2,1,1,t,b[i],dp[2][i]);\n        updata(3,1,1,t,c[i],dp[3][i]);\n        updata(4,1,1,t,c[i],dp[4][i]);//\u66f4\u65b0\u7ebf\u6bb5\u6811\u7684\u503c\u3002\n    }\n    int ans=0;\n    for(int j=1;j<=n;j++)\n     for(int i=1;i<=4;i++)\n     ans=max(ans,dp[i][j]);//\u627e\u6700\u5927\u7684\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1508050973,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3928 \u3010SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e0b\u7528\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\u3002\n\n\u8fd9\u9053\u9898\u9996\u5148\u662fDP\u3002\n\n\u642c\u8fd0\u4e00\u4e0b\u5b98\u65b9\u9898\u89e3\u4e2d\u7684\u5185\u5bb9\uff1a\u8bbe$dp_{i,j}$\u8868\u793a\uff1a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u9009\u62e9\u7b2c $j$ \u4e2a\u5e8f\u5217\u7684\u6570\uff0c\u524d $i$ \u4e2a\u4f4d\u7f6e\u6240\u80fd\u6784\u6210\u7684\u6700\u957f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u7279\u522b\u7684\uff0c$dp_{i,2}$\u8868\u793a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u9009\u62e9\u7b2c\u4e09\u4e2a\u5e8f\u5217\u7684\u6570\uff0c\u4e14\u5927\u4e8e\u7b49\u4e8e\u524d\u4e00\u4e2a\u6570\uff1b$dp_{i,3}$\u8868\u793a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u9009\u62e9\u7b2c\u4e09\u4e2a\u5e8f\u5217\u7684\u6570\uff0c\u4e14\u5c0f\u4e8e\u7b49\u4e8e\u524d\u4e00\u4e2a\u6570\u3002\n\n$$dp_{i,0}=max(dp_{j,k})+1,0\\leq{j}<i,0\\leq{k}<4,a_{j,k}\\leq{a_{i,0}};$$\n\n\n$$dp_{i,1}=max(dp_{j,k})+1,0\\leq{j}<i,0\\leq{k}<4,a_{j,k}\\geq{a_{i,1}};$$\n\n\n$$dp_{i,2}=max(dp_{j,k})+1,0\\leq{j}<i,0\\leq{k}<3,a_{j,k}\\leq{a_{i,2}};$$\n\n\n$$dp_{i,3}=max(dp_{j,k})+1,0\\leq{j}<i,0\\leq{k}<4,k\\neq{2},a_{j,k}\\geq{a_{i,2}};$$\n\n\n\u8fb9\u754c\u6761\u4ef6\uff1a$dp_{0,j}=0$\u3002\n\n\u72b6\u6001\u6570 $O(n)$\uff0c\u8f6c\u79fb\u590d\u6742\u5ea6 $O(n)$\uff0c\u603b\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n(60\u5206\u505a\u6cd5\uff09\n\n\u8981\u53d6\u5f97100\u5206\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u4f18\u5316\u3002\u5b98\u65b9\u9898\u89e3\u4e2d\u662f\u8fd9\u6837\u8bf4\u7684\uff1a\u8be5\u8f6c\u79fb\u548c LIS \u7684\u8f6c\u79fb\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\u3002\n\n\u4ee5 LIS \u4e3a\u4f8b\uff0c\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u521d\u59cb\u65f6\u6240\u6709\u4f4d\u7f6e\u90fd\u4e3a 0\u3002\n\n\u6bcf\u6b21\u6c42 $dp$ \u503c\u65f6\uff0c\u67e5\u8be2\u503c\u4ecb\u4e8e $[\u2212\u221e,a_i]$ \u4e2d\u7684 $dp$ \u503c\u7684\u6700\u5927\u503c\u3002\n\n\u518d\u5c06 $i$ \u4f4d\u7f6e\u7684 $dp$ \u503c\u63d2\u5165\u5230\u7ebf\u6bb5\u6811 $a_i$ \u5904\u3002\n\n\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $O(log n)$\uff0c\u6545\u603b\u590d\u6742\u5ea6 $O(n log n)$\u3002\n\n(100\u5206\u505a\u6cd5\uff09\n\n\u7136\u800c\u9898\u89e3\u4e2d\u8bb2\u7ebf\u6bb5\u6811\u6807\u7a0b\u91cc\u5374\u662f\u6811\u72b6\u6570\u7ec42333\n\n60\u5206\u505a\u6cd5\u5e94\u8be5\u5f88\u597d\u5199\uff0c\u90a3\u6211\u8bb2\u4e00\u4e0b\u5982\u4f55\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u4e09\u4e2a\u6570\u5217\u7684\u5143\u7d20\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u6839\u636e $i$ \u4ece 1 \u5230 $n$ \u5faa\u73af\u3002\u5bf9\u4e8e\u7b2c $k$ \u4e2a\u6570\u5217\u7684\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u9700\u8981\u627e\u51fa\u5728\u5b83\u524d\u9762\u7684\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5927\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u505a\u3002\n\n\u4ee4 $f[j][0]$ \u8868\u793a\u5230\u76ee\u524d\u4e3a\u6b62 $dp_{i,0}$ \u548c $dp_{i,1}$ \u4e2d\u4ee5 $j-(j\\&-j)+1$ \u5230 $j$ \u7ed3\u5c3e\u7684\u6700\u5927\u503c, $f[j][2]$ \u8868\u793a\u5230\u76ee\u524d\u4e3a\u6b62 $dp_{i,2}$ \u4e2d\u4ee5 $j-(j\\&-j)+1$ \u5230 $j$ \u7ed3\u5c3e\u7684\u6700\u5927\u503c, $f[j][4]$ \u8868\u793a\u5230\u76ee\u524d\u4e3a\u6b62 $dp_{i,3}$ \u4e2d\u4ee5 $j-(j\\&-j)+1$ \u5230 $j$ \u7ed3\u5c3e\u7684\u6700\u5927\u503c\u3002\u7531\u4e8e\u8fd8\u8981\u6c42\u5927\u4e8e $a_{j,k}$ \u7684\u503c\uff0c\u56e0\u6b64\u518d\u8bbe\u7f6e $f[j][1],f[j][3],f[j][5]$\uff0c\u7528\u7684\u65f6\u5019\u628a $a_{j,k}$ \u53cd\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\n\n$dp_{i,0}$ \u7684\u503c\u7528 $f[a_{i,k}][0],f[a_{i,k}][2],f[a_{i,k}][4]$ \u66f4\u65b0\uff0c\u518d\u5c06\u503c\u66f4\u65b0\u5230 $f[a_{i,k}][0],f[a_{i,k}][1]$ \u4e2d;\n\n$dp_{i,1}$ \u7684\u503c\u7528 $f[a_{i,k}][1],f[a_{i,k}][3],f[a_{i,k}][5]$ \u66f4\u65b0\uff0c\u518d\u5c06\u503c\u66f4\u65b0\u5230 $f[a_{i,k}][0],f[a_{i,k}][1]$ \u4e2d;\n\n$dp_{i,2}$ \u7684\u503c\u7528 $f[a_{i,k}][0],f[a_{i,k}][2]$ \u66f4\u65b0\uff0c\u518d\u5c06\u503c\u66f4\u65b0\u5230 $f[a_{i,k}][2],f[a_{i,k}][3]$ \u4e2d;\n\n$dp_{i,3}$ \u7684\u503c\u7528 $f[a_{i,k}][0],f[a_{i,k}][4]$ \u66f4\u65b0\uff0c\u518d\u5c06\u503c\u66f4\u65b0\u5230 $f[a_{i,k}][4],f[a_{i,k}][5]$ \u4e2d\u3002\n\n\u6700\u540e\u6839\u636e $f[max][0],f[max][2],f[max][4](max\u4e3a\u5143\u7d20\u79bb\u6563\u5316\u540e\u6700\u5927\u503c)$ \u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nint n,a[100001][4],f[7][300001],ans,data[300001],up,tot;\nvoid add(int x,int p,int* f){\n    for (;p<=up;p+=p&-p){\n        if (x<=f[p]) break;\n        f[p]=x;\n    }\n}\nint slv(int p,int* f){\n    int ans=0;\n    for (;p;p-=p&-p) ans=ans<f[p]?f[p]:ans;\n    return ans;\n}\nvoid dcp(){\n    sort(data+1,data+tot+1);\n    up=unique(data+1,data+1+tot)-data-1;\n    for (int i=0;i<=2;++i)\n        for (int j=1;j<=n;++j) a[j][i]=lower_bound(data+1,data+1+up,a[j][i])-data;\n}\nvoid read(int& x){\n    x=0;\n    int y=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9'){\n        if (ch=='-') y=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    x=x*y;\n}\nint main(){\n    int i,j,k,t,m,x1,x2,x3;\n    read(n);\n    for (i=0;i<=2;++i)\n        for (j=1;j<=n;++j){\n            read(a[j][i]);\n            data[++tot]=a[j][i];\n        }\n    dcp();\n    for (i=1;i<=n;++i){\n        t=0;\n        m=slv(a[i][0],f[0]);\n        t=m>t?m:t;\n        m=slv(a[i][0],f[2]);\n        t=m>t?m:t;\n        m=slv(a[i][0],f[4]);\n        t=m>t?m:t;\n        x1=t+1;\n        t=0;\n        m=slv(up-a[i][1]+1,f[1]);\n        t=m>t?m:t;\n        m=slv(up-a[i][1]+1,f[3]);\n        t=m>t?m:t;\n        m=slv(up-a[i][1]+1,f[5]);\n        t=m>t?m:t;\n        x2=t+1;\n        t=0;\n        m=slv(a[i][2],f[0]);\n        t=m>t?m:t;\n        m=slv(a[i][2],f[2]);\n        t=m>t?m:t;\n        x3=t+1;\n        t=0;\n        m=slv(up-a[i][2]+1,f[1]);\n        t=m>t?m:t;\n        m=slv(up-a[i][2]+1,f[5]);\n        t=m>t?m:t;\n        add(t+1,a[i][2],f[4]);\n        add(t+1,up-a[i][2]+1,f[5]);\n        add(x1,a[i][0],f[0]);\n        add(x1,up-a[i][0]+1,f[1]);\n        add(x2,a[i][1],f[0]);\n        add(x2,up-a[i][1]+1,f[1]);\n        add(x3,a[i][2],f[2]);\n        add(x3,up-a[i][2]+1,f[3]);\n    }\n    ans=slv(up,f[0]);\n    ans=max(ans,slv(up,f[2]));\n    ans=max(ans,slv(up,f[4]));\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1507680507,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3928 \u3010SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u3011"
    },
    {
        "content": "#\u7ebf\u6bb5\u6811+dp\n\n\u8bbe dp\\_(i,k) \u8868\u793a\uff1a\u7b2c i \u4e2a\u4f4d\u7f6e\u9009\u62e9\u7b2ck\u4e2a\u5e8f\u5217\u7684\u6570\uff0c\u524d i \u4e2a\u4f4d\u7f6e \u6240\u80fd\u6784\u6210\u7684\u6700\u957f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6709\u4e00\u4e0b4\u4e2a\u72b6\u6001,\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6ei\n\n```cpp\nk=0\u9009\u62e9\u7b2c\u4e00\u884c\nk=1\u9009\u7b2c\u4e8c\u884c\u3002\nk=2\u9009\u7b2c\u4e09\u884c,\u4e14\u5927\u4e8e\u7b49\u4e8e\u524d\u4e00\u4e2a\u6570\nk=3\u9009\u7b2c\u4e09\u884c,\u4e14\u5c0f\u4e8e\u7b49\u4e8e\u524d\u4e00\u4e2a\u6570\n```\n\u90a3\u4e48\u6839\u636e\u9898\u610f,\u5bf9\u4e8e2,3,\u4e24\u4e2a\u72b6\u6001,\u4ed6\u4eec\u4e0d\u80fd\u76f8\u4e92\u8f6c\u79fb.\u6240\u4ee5\u6211\u4eec\u6709\n\n```cpp\ndp[i][0]=dp[0~i-1][0~3]+1   (a[j][k]<=a[i][0]);\ndp[i][1]=dp[0~i-1][0~3]+1   (a[j][k]>=a[i][1]);\ndp[i][2]=dp[0~i-1][0,1,2]+1   (a[j][k]<=a[i][2]);\ndp[i][3]=dp[0~i-1][0,1,3]+1   (a[j][k]>=a[i][3]);\n```\n\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u53d1\u73b0\u4f1aT TAT\n\n\u4e8e\u662f\u5c31\u8003\u8651\u4f18\u5316\u7b2c\u4e8c\u7ef4j\u7684\u5faa\u73af\u3002\n\n\u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f6c\u79fba[i][?]\u6211\u4eec\u90fd\u8981\u627e\u5230\u4e00\u4e2adp\u503c\u6700\u5927\u7684a[j][k]\u5176\u4e2d\n\na[j][k]\u6ee1\u8db3\u8f6c\u79fb;\n\n\u4e8e\u662fn\u5f88\u5c0f,\u5c31\u53ef\u4ee5\u628a\u6570\u636e\u79bb\u6563\u540e\u653e\u8fdb\u7ebf\u6bb5\u6811\u4e2d.\u5bf9\u4e8edp\u7684\u6bcf\u4e00\u7ef4\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811,\u50a8\u5b58\u5f53\u524d\u4ee5\u4e3a\u6700\u540e\u4e00\u4e2a\u9009\u62e9\u4e3a(\u9009\u62e9\u6570)\u6700\u5927\u6240\u80fd\u5230\u8fbe\u7684dp\u503c\u3002\n\nbel\u5f53\u524d\u5c5e\u4e8e\u7b2c\u51e0\u7ef4\u7684dp(\u67e5\u8be2&&\u4fee\u6539)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int maxn=100000+233;\ninline int read(){\n    int an=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while('0'<=ch&&ch<='9'){an=an*10+ch-'0';ch=getchar();}\n    return an*f;\n}\nint dp[maxn][5],n,ans;\nint a[maxn][5],tot,cnt,id[maxn<<2];\nstruct saber{\nint ma[6];\nint l,r;\n}tr[maxn<<4];\nvoid prepare(){\n    n=read();\n    for(int j=0;j<=2;j++)\n        for(int i=1;i<=n;i++){\n        a[i][j]=read();tot++;id[tot]=a[i][j];}\n    sort(id+1,id+1+tot);\n    cnt=unique(id+1,id+1+tot)-id;\n    for(int i=1;i<=n;i++)\n    for(int j=0;j<=2;j++)\n    a[i][j]=lower_bound(id+1,id+cnt,a[i][j])-id+1;\n    for(int i=1;i<=n;i++)a[i][3]=a[i][2];\n}\nvoid build(int k,int l,int r){\n    tr[k].l=l;tr[k].r=r;\n    if(l==r)return ;\n    int mid=(l+r)>>1;\n    build(k<<1,l,mid);\n    build(k<<1|1,mid+1,r);\n}\nint ask(int bel,int k,int x,int y){\n    int l=tr[k].l,r=tr[k].r;\n    if(l==x&&r==y)return tr[k].ma[bel];\n    int mid=(l+r)>>1;\n    if(y<=mid)ask(bel,k<<1,x,y);\n    else if(x>mid)ask(bel,k<<1|1,x,y);\n    else return max( ask(bel,k<<1,x,mid),ask(bel,k<<1|1,mid+1,y) );\n}\nvoid add(int bel,int k,int poi,int wi){\n    int l=tr[k].l,r=tr[k].r;;\n    if(poi==l&&poi==r){\n    tr[k].ma[bel]=max(wi,tr[k].ma[bel]);\n    return ;}\n    int mid=(l+r)>>1;\n    if(poi<=mid)add(bel,k<<1,poi,wi);\n    else add(bel,k<<1|1,poi,wi);\n    tr[k].ma[bel]=max(tr[k<<1].ma[bel],tr[k<<1|1].ma[bel]);\n}\nvoid DP(){\n    build(1,1,cnt);\n    for(int i=1;i<=n;i++){\n            for(int k=0;k<4;k++){\n            dp[i][0]=max(ask(k,1,1,a[i][0])+1,dp[i][0]);//\u67e5\u8be2\u5c0f\u4e8e\u7b49\u4e8e\n            dp[i][1]=max(ask(k,1,a[i][1],cnt)+1,dp[i][1]);//\u540e\u9762\u5927\u4e8e\u7b49\u4e8e\n            if(k!=3)\n            dp[i][2]=max(ask(k,1,1,a[i][2])+1,dp[i][2]);\n            if(k!=2)\n            dp[i][3]=max(ask(k,1,a[i][3],cnt)+1,dp[i][3]);\n            }\n            add(0,1,a[i][0],dp[i][0]);\n            add(1,1,a[i][1],dp[i][1]);\n            add(2,1,a[i][2],dp[i][2]);\n            add(3,1,a[i][3],dp[i][3]);\n        }\n    for(int i=0;i<4;i++)\n    ans=max(ans,dp[n][i]);\n}\nint main(){\n    prepare();\n    DP();\n    cout<<ans;\n}\n```",
        "postTime": 1507379772,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3928 \u3010SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u829d\u58eb\nLIS\uff0c\u7ebf\u6bb5\u6811\u3002\n## \u601d\u8def\n\u660e\u663e\u7684\u7ebf\u6027 DP\uff0c\u4e0e LIS \u6a21\u578b\u5927\u81f4\u76f8\u540c\u3002\u72b6\u6001\u8bbe\u8ba1\u5982\u4e0b\uff1a$dp_{j,i}$ \u4e3a\u5f53\u524d\u5904\u7406\u5230\u7b2c $i$ \u4e2a\u6570\uff0c\u82e5 $j=1/2$\uff0c\u5219\u8868\u793a\u4e0a\u4e00\u4e2a\u6240\u9009\u7684\u6570\u5728\u7b2c $j$ \u884c\u7684\u6700\u5927\u957f\u5ea6\u3002\u82e5 $j=3/4$\uff0c\u5219\u8868\u793a\u4e0a\u4e00\u4e2a\u6240\u9009\u7684\u6570\u5728\u7b2c 3 \u884c\u7684\u6700\u5927\u957f\u5ea6\uff08\u9012\u589e/\u9012\u51cf\uff09\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n$$dp_{1,i}=\\max_{1 \\le j < i}{dp_{k,j}}(k = 1,2,3,4,a[p_k][j] \\le a[1][i])$$\n$$dp_{2,i}=\\max_{1 \\le j < i}{dp_{k,j}}(k = 1,2,3,4,a[p_k][j] \\ge a[1][i])$$\n$$dp_{3,i}=\\max_{1 \\le j < i}{dp_{k,j}}(k = 1,2,3,a[p_k][j] \\le a[1][i])$$\n$$dp_{4,i}=\\max_{1 \\le j < i}{dp_{k,j}}(k = 1,2,4,a[p_k][j] \\ge a[1][i])$$\n\u6ce8\u610f\uff0c\u4e0a\u8ff0 $p_k$ \u4ec5\u4ec5\u8868\u793a\u7b2c\u4e00\u7ef4\u6240\u5bf9\u5e94\u7684\u8f6c\u79fb\u884c\uff0c\u65e0\u7279\u522b\u610f\u4e49\u3002\n\n\u6b64\u65f6\uff0c\u662f\u5e73\u65b9\u7ea7\u522b\u7684\u7b97\u6cd5\uff0c\u8fc7\u4e0d\u4e86\u6b64\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb 4 \u68f5\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u56db\u4e2a\u8f6c\u79fb\u7684\u6700\u5927\u503c\uff0c\u5c31\u4e0d\u7528\u7ebf\u6027\u7684\u626b\u63cf\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n## AC code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5;\nint n,len,ans1,ans2,ans3,ans4,ans; \nint a[3][N],b[N];\nstruct Sgt {\n\tint val;\n\t#define ls(x) (x<<1)\n\t#define rs(x) (x<<1|1)\n}t[4][N<<2];\nvoid sre() {\n\tsort(b+1,b+3*n+1);\n\tlen=unique(b+1,b+3*n+1)-b-1;\n\tfor(int i=0;i<3;i++)\n\t\tfor(int j=1;j<=n;j++) a[i][j]=lower_bound(b+1,b+len+1,a[i][j])-b;\n}\nvoid pushup(int p,int pos) {\n\tt[pos][p].val=max(t[pos][ls(p)].val,t[pos][rs(p)].val);\n}\nvoid change(int p,int l,int r,int x,int d,int pos) {\n\tif(r<x||l>x) return;\n\tif(l==r&&l==x) {\n\t\tt[pos][p].val=max(t[pos][p].val,d);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tchange(ls(p),l,mid,x,d,pos);\n\tchange(rs(p),mid+1,r,x,d,pos);\n\tpushup(p,pos); \n}\nint query(int p,int l,int r,int L,int R,int pos) {\n\tif(L<=l&&r<=R) return t[pos][p].val;\n\tint mid=l+r>>1;\n\tint res=0;\n\tif(L<=mid) res=max(res,query(ls(p),l,mid,L,R,pos));\n\tif(R>mid) res=max(res,query(rs(p),mid+1,r,L,R,pos)); \n\treturn res;\n}\nint max4(int A,int B,int C,int D) {\n\treturn max(A,max(B,max(C,D)));\n}\nint max3(int A,int B,int C) {\n\treturn max(A,max(B,C));\n}\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tcin>>n;\n\tfor(int i=0;i<3;i++)\n\t\tfor(int j=1;j<=n;j++) {\n\t\t\tcin>>a[i][j];\n\t\t\tb[j+i*n]=a[i][j];\n\t\t}\n\tsre();\n\tfor(int i=1;i<=n;i++) {\n\t\tans1=max4(query(1,1,len,1,a[0][i],0),query(1,1,len,1,a[0][i],1),query(1,1,len,1,a[0][i],2),query(1,1,len,1,a[0][i],3))+1;\n        ans2=max4(query(1,1,len,a[1][i],len,0),query(1,1,len,a[1][i],len,1),query(1,1,len,a[1][i],len,2),query(1,1,len,a[1][i],len,3))+1;\n        ans3=max3(query(1,1,len,1,a[2][i],0),query(1,1,len,1,a[2][i],1),query(1,1,len,1,a[2][i],2))+1;\n        ans4=max3(query(1,1,len,a[2][i],len,0),query(1,1,len,a[2][i],len,1),query(1,1,len,a[2][i],len,3))+1;\n        ans=max(ans,max4(ans1,ans2,ans3,ans4));\n        change(1,1,len,a[0][i],ans1,0);\n        change(1,1,len,a[1][i],ans2,1);\n        change(1,1,len,a[2][i],ans3,2);\n\t\tchange(1,1,len,a[2][i],ans4,3);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1661428794,
        "uid": 502707,
        "name": "2021hych",
        "ccfLevel": 4,
        "title": "P3928 SAC E#1 - \u4e00\u9053\u7b80\u5355\u9898 Sequence2\u9898\u89e3"
    }
]