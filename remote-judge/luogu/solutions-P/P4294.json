[
    {
        "content": "## \u9898\u89e3\n\n\u8fd9\u9053\u9898\u662f\u3010\u65af\u5766\u7eb3\u6811\u3011\u7684\u7ecf\u5178\u4f8b\u9898\u3002\u65af\u5766\u7eb3\u6811\u662f\u8fd9\u6837\u4e00\u7c7b\u95ee\u9898\uff1a\u5e26\u8fb9\u6743\u65e0\u5411\u56fe\u4e0a\u6709\u51e0\u4e2a\uff08\u4e00\u822c\u7ea610\u4e2a\uff09\u70b9\u662f\u3010\u5173\u952e\u70b9\u3011\uff0c\u8981\u6c42\u9009\u62e9\u4e00\u4e9b\u8fb9\u4f7f\u8fd9\u4e9b\u70b9\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u5185\uff0c\u540c\u65f6\u8981\u6c42\u6240\u9009\u7684\u8fb9\u7684\u8fb9\u6743\u548c\u6700\u5c0f\u3002\n\n\u600e\u4e48\u89e3\u51b3\u65af\u5766\u7eb3\u6811\u95ee\u9898\uff1f\u2026\u2026\u5176\u5b9e\uff0c\u5c31\u662f\u4e00\u79cd\u72b6\u538bDP\u3002\n\n$dp[i][j]$\u8868\u793a\u4ee5i\u53f7\u8282\u70b9\u4e3a\u6839\uff0c\u5f53\u524d\u72b6\u6001\u4e3aj\uff08j\u7684\u4e8c\u8fdb\u5236\u4e2d\u5df2\u7ecf\u4e0ei\u8fde\u901a\u7684\u70b9\u5bf9\u5e94\u4f4d\u7f6e\u4e3a1\uff09\u3002\n\n\u8fd9\u4e2a\u201c\u4ee5i\u4e3a\u6839\u201d\u662f\u54ea\u6765\u7684\u5462\uff1f\u5176\u5b9ei\u53ef\u4ee5\u662f\u8054\u901a\u5757\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6ca1\u6709\u989d\u5916\u9650\u5236\uff0c\u53ea\u662f\u5f15\u5165\u8fd9\u4e2ai\u5c31\u53ef\u4ee5DP\u4e86\u3002\n\n\u5f53\u6839i\u4e0d\u6539\u53d8\u65f6\uff08\u5373\u5408\u5e76\u4e24\u4e2a\u90fd\u5305\u542bi\u7684\u8054\u901a\u5757\uff09\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f\uff1a\n\n$$dp[i][j] = \\min_{s \\in j}\\{dp[i][s] + dp[i][\\complement_js] - val[i]\\}$$ \n\n\uff08$val[i]$\u8868\u793a\u672c\u9898\u4e2di\u53f7\u70b9\u7684\u6743\u503c\uff0c\u51cf\u53bb\u4e00\u4e2a\u662f\u56e0\u4e3a$dp[i][s]$\u548c$dp[i][\\complement_js]$\u4e2d\u90fd\u542b\u6709i\u53f7\u70b9\u7684\u6743\u503c\uff0c\u8981\u9632\u6b62\u201c\u52a0\u91cd\u4e86\u201d\uff09\n\n\u5f53\u6839\u6539\u53d8\u65f6\uff08\u5373\u5728\u539f\u6709\u8054\u901a\u5757\u4e2d\u52a0\u5165\u4e00\u4e2a\u65b0\u8282\u70b9i\u5e76\u8bbe\u7f6e\u4e3a\u6839\uff0c\u8981\u6c42i\u3001k\u76f8\u90bb\uff09\uff1a\n\n$$dp[i][j] = \\min\\{dp[k][j] + val[i]\\}$$\n\n\u7b2c\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6709\u987a\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5DP\uff1b\u800c\u7b2c\u4e8c\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6ca1\u6709\u660e\u663e\u987a\u5e8f\uff0c\u4f46\u53ef\u4ee5\u6309\u7167\u6700\u77ed\u8def\u7684SPFA\u7b97\u6cd5\u201cDP\u201d\uff08\u795e\u5947\uff01\uff09\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <queue>\n#define space putchar(' ')\n#define enter putchar('\\n')\nusing namespace std;\ntypedef long long ll;\ntemplate <class T>\nvoid read(T &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n    if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n    x = x * 10 + c - '0';\n    if(op) x = -x;\n}\ntemplate <class T>\nvoid write(T x){\n    if(x < 0) putchar('-'), x = -x;\n    if(x >= 10) write(x / 10);\n    putchar('0' + x % 10);\n}\n\nconst int INF = 0x3f3f3f3f;\nint n, m, K, root, f[101][1111], a[101], ans[11][11];\nbool inq[101];\ntypedef pair<int, int> par;\ntypedef pair<par, int> rec;\n#define fi first\n#define se second\n#define mp make_pair\n#define num(u) (u.fi * m + u.se)\nrec pre[101][1111];\nconst int dx[] = {0, 0, -1, 1};\nconst int dy[] = {1, -1, 0, 0};\nqueue<par> que;\n\nbool legal(par u){\n    return u.fi >= 0 && u.se >= 0 && u.fi < n && u.se < m;\n}\nvoid spfa(int now){\n    while(!que.empty()){\n\tpar u = que.front();\n\tque.pop();\n\tinq[num(u)] = 0;\n\tfor(int d = 0; d < 4; d++){\n\t    par v = mp(u.fi + dx[d], u.se + dy[d]);\n\t    int nu = num(u), nv = num(v);\n\t    if(legal(v) && f[nv][now] > f[nu][now] + a[nv]){\n\t\tf[nv][now] = f[nu][now] + a[nv];\n\t\tif(!inq[nv]) inq[nv] = 1, que.push(v);\n\t\tpre[nv][now] = mp(u, now);\n\t    }\n\t}\n    }\n}\nvoid dfs(par u, int now){\n    if(!pre[num(u)][now].se) return;\n    ans[u.fi][u.se] = 1;\n    int nu = num(u);\n    if(pre[nu][now].fi == u) dfs(u, now ^ pre[nu][now].se);\n    dfs(pre[nu][now].fi, pre[nu][now].se);\n}\n\nint main(){\n\n    read(n), read(m);\n    memset(f, 0x3f, sizeof(f));\n    for(int i = 0, tot = 0; i < n; i++)\n\tfor(int j = 0; j < m; j++){\n\t    read(a[tot]);\n\t    if(!a[tot]) f[tot][1 << (K++)] = 0, root = tot;\n\t    tot++;\n\t}\n    for(int now = 1; now < (1 << K); now++){\n\tfor(int i = 0; i < n * m; i++){\n\t    for(int s = now & (now - 1); s; s = now & (s - 1))\n\t\tif(f[i][now] > f[i][s] + f[i][now ^ s] - a[i]){\n\t\t    f[i][now] = f[i][s] + f[i][now ^ s] - a[i];\n\t\t    pre[i][now] = mp(mp(i / m, i % m), s);\n\t\t}\n\t    if(f[i][now] < INF)\n\t\tque.push(mp(i / m, i % m)), inq[i] = 1;\n\t}\n\tspfa(now);\n    }\n    write(f[root][(1 << K) - 1]), enter;\n    dfs(mp(root / m, root % m), (1 << K) - 1);\n    for(int i = 0, tot = 0; i < n; i++){\n\tfor(int j = 0; j < m; j++)\n\t    if(!a[tot++]) putchar('x');\n\t    else putchar(ans[i][j] ? 'o' : '_');\n\tenter;\n    }\n\n    return 0;\n}\n```",
        "postTime": 1521537743,
        "uid": 8947,
        "name": "RabbitHu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5b9e\u8d28\u4e0a\u5c31\u662f\u6c42\u70b9\u6743\u4e4b\u548c\u6700\u5c0f\u7684\u65af\u5766\u7eb3\u6811\u3002\n\n\u628a\u4e8c\u7ef4\u5750\u6807\u6620\u5c04\u6210\u4e00\u7ef4\u5750\u6807\uff0c\u518d\u5efa\u597d\u8fb9\uff0c\u5c31\u548c\u65af\u5766\u7eb3\u6811\u7684\u505a\u6cd5\u5dee\u4e0d\u591a\u4e86\u3002\n\n\u548c\u6a21\u677f\u7684\u5957\u8def\u4e00\u6837\uff0c\u8bbe $f_{i,S}$ \u4e3a\u4ee5 $i$ \u4e3a\u6839\u7684\u6811\uff0c\u5305\u542b\u4e86\u7ed9\u51fa\u70b9\u96c6\u4e2d\u7684\u5b50\u96c6 $S$\uff0c\u80fd\u591f\u5f97\u5230\u7684\u6700\u5c0f\u70b9\u6743\u548c\u3002\n\n- $f_{i,S}=\\min \\{f_{i,S},f_{j,S}+a_i\\}$ (1).\n- $f_{i,S}=\\min\\{f_{i,S},f_{j,S-S'}+f_{i,S'}\\}(S' \\subset S)$ (2). \n\n\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u6211\u4eec\u4ecd\u7136\u4f7f\u7528 $\\text{dijistra}$ \u8fdb\u884c\u677e\u5f1b\uff0c\u4f46\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u8981\u505a\u51fa\u4e00\u5b9a\u7684\u53d8\u5316\uff0c\u4e0d\u518d\u662f\u6c42\u8fb9\u6743\u548c\u6700\u5c0f\u65f6\u7684 $f_{i,S} = min\\{f_{i,S'}+f_{i,S-S'}\\}$\u3002\u7531\u4e8e\u8fd9\u9898\u7684\u8981\u6c42\u53d8\u4e3a\u6c42\u70b9\u6743\u4e4b\u548c\u6700\u5c0f\uff0c\u6240\u4ee5\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5982\u679c\u7167\u642c\u4e0a\u5f0f\uff0c\u540c\u4e00\u4e2a\u70b9\u6743 $a_i$ \u53ef\u80fd\u4f1a\u88ab\u91cd\u590d\u7d2f\u52a0\u4e24\u904d\uff0c\u6211\u4eec\u9700\u8981\u5728\u5408\u5e76\u7684\u65f6\u5019\u51cf\u53bb\u591a\u7d2f\u52a0\u7684\u90a3\u4e00\u6b21\uff0c\u5373 $f_{i,S}= \\min \\{f_{i,S},f_{i,S'}+f_{i,S-S'}-a_i\\}$(3)\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5e76\u4e0d\u5728\u4e8e\u5982\u4f55\u6c42\u51fa\u7b54\u6848\uff0c\u800c\u5728\u4e8e\u6253\u5370\u65b9\u6848\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\u4e24\u4e2aDP\u5f0f\u5b50\uff0c\u53d1\u73b0(1)\u5f0f\u662f\u4e00\u4e2a\u662f\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\uff0c(3)\u5f0f\u662f\u4e00\u4e2a\u9012\u63a8\u5f0f\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e24\u4e2a\u5f0f\u5b50\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u4e0a\u4e00\u4e2a\u8f6c\u79fb\u8fc7\u6765\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f62\u6210\u4e00\u6761\u94fe\uff0c\u94fe\u4e0a\u7684\u70b9\u53ef\u80fd\u53c8\u7531(3)\u5f0f\u8f6c\u79fb\u800c\u6765\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u76f4\u63a5\u9012\u5f52\u6c42\u89e3\u3002\u6240\u4ee5\u4e24\u79cd\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u662f\u8fd9\u9898\u6253\u5370\u65b9\u6848\u7684\u65b9\u6cd5\u3002\n\n\u6253\u5370\u65b9\u6848\u7684\u5177\u4f53\u601d\u8def\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u6211\u8ba4\u4e3a\u662f\u5199\u7684\u5f88\u6e05\u695a\u7684\u4e86\uff0c\u5982\u679c\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u76f4\u63a5\u79c1\u4fe1\u672c\u4eba\u3002\n\n**Show the Code**\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<functional>\n#define id(x,y) ((x)*m+(y))\n#define min(a,b) ((a)<(b)? (a):(b))\nconst int inf=0x3f3f3f3f;\nint cnt=0;\nint a[105],vis[105],mp[105],b[105][1<<10],f[105][1<<10],pre[105][1<<10];\nint h[105],to[2005],ver[2005];\nstd::priority_queue<std::pair<int,int> > Q;\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {\n\tto[++cnt]=y;\n\tver[cnt]=h[x];\n\th[x]=cnt;\n}\ninline void print(int x) {int a[25];a[0]=0;while(x) {a[++a[0]]=x&1;x>>=1;}while(a[0]) {printf(\"%d\",a[a[0]--]);}printf(\" \");}\ninline void dijistra(int S) {\n\twhile(Q.size()) {\n\t\tint x=Q.top().second;Q.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(register int i=h[x];i;i=ver[i]) {\n\t\t\tint y=to[i];\n\t\t\tif(f[y][S]>f[x][S]+a[y]) Q.push(std::make_pair(-(f[y][S]=f[x][S]+a[y]),y)),pre[y][S]=x;\n\t\t}\n\t}\n}\nvoid dfs(int x,int S) {\n\tif(b[x][S]) return;\n\tb[x][S]=1;\n\tmp[x]=1;\n\tif(pre[x][S]!=-1&&f[pre[x][S]][S]+a[x]==f[x][S]) {\n\t\tint tmp=pre[x][S];\n\t\twhile(tmp!=-1) {dfs(tmp,S);tmp=pre[tmp][S];}\n\t}\n\tfor(register int S0=S;S0>=0;--S0) {\n\t\tif((S0|S)!=S) continue;\n\t\tif(f[x][S]==f[x][S0]+f[x][S-S0]-a[x]) {dfs(x,S0);dfs(x,S^S0);break;}\n\t}\n}\nint main() {\n\tint n=read(),m=read(),k=0,pos=-1;\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(pre,-1,sizeof(pre));\n\tfor(register int i=0;i<n;++i) {\n\t\tfor(register int j=0;j<m;++j) {\n\t\t\tif(!(a[id(i,j)]=read())) f[id(i,j)][1<<((++k)-1)]=0,pos=id(i,j);\n\t\t\tif(i-1>=0) {\n\t\t\t\tadd(id(i-1,j),id(i,j));\n\t\t\t\tadd(id(i,j),id(i-1,j));\n\t\t\t}\n\t\t\tif(j-1>=0) {\n\t\t\t\tadd(id(i,j-1),id(i,j));\n\t\t\t\tadd(id(i,j),id(i,j-1));\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int S=1;S<(1<<k);++S) {\n\t\tfor(register int i=0;i<n*m;++i) {\n\t\t\tfor(register int S0=S;S0>=0;--S0) {\n\t\t\t\tif((S0|S)!=S) continue;\n\t\t\t\tf[i][S]=min(f[i][S],f[i][S0]+f[i][S-S0]-a[i]);//+a[i]*2 -> must -a[i]\n\t\t\t}\n\t\t\tvis[i]=0;\n\t\t\tif(f[i][S]!=inf) Q.push(std::make_pair(-f[i][S],i));\n\t\t}\n\t\tdijistra(S);\n\t}\n\tif(pos!=-1) printf(\"%d\\n\",f[pos][(1<<k)-1]);\n\telse printf(\"0\\n\");\n\tdfs(pos,(1<<k)-1);\n\tfor(register int i=0;i<n;++i) {\n\t\tfor(register int j=0;j<m;++j) {\n\t\t\tint x=id(i,j);\n\t\t\tif(a[x]&&mp[x]) printf(\"o\");\n\t\t\tif(a[x]&&(!mp[x])) printf(\"_\");\n\t\t\tif(!a[x]) printf(\"x\");\n\t\t}\n\t\tif(i!=n-1) printf(\"\\n\");\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1585213381,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "\u53d1\u73b0spj\u597d\u4e86\u4e4b\u540e\uff0c\u7ecf\u8fc7\u591a\u6b21\u7684\u4fee\u6539\u7b80\u5316\u4e0e\u6ce8\u91ca\uff0c\u6211\u7ec8\u4e8e\u8fb9\u590d\u4e60\u4e86\u4e00\u904d\u63d2\u5934dp\u8fb9\u7528\u63d2\u5934dp\u7684\u6700\u5c0f\u8868\u793a\u6cd5\u6b63\u5f0fAC\u672c\u9898\u3002\n\n\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff1ahttp://www.cnblogs.com/luyouqi233/p/8258525.html\n\n\u5bf9\u63d2\u5934dp\u7684\u7b80\u8981\u8bb2\u89e3\uff1ahttp://www.cnblogs.com/luyouqi233/p/8256778.html\n\n\u672c\u9898\u89e3\u53c2\u8003\u81ea\uff1ahttp://www.sigongzi.org/index.php/archives/jiyuliantongxingdezhuangtaiyasuodongtaiguihua.html\n\n\uff08\u8bf7\u6ce8\u610f\u53c2\u8003\u535a\u5ba2\u4ee3\u7801\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\uff0c\u540e\u9762\u6709hack\u6570\u636e\u3002\uff09\n\n\u770b\u5230\u53c8\u662f\u683c\u5b50\u53c8\u662f\u8def\u5f84\u8054\u901a\u7b49\u7b49\u4e4b\u7c7b\u7684\u6761\u4ef6\uff0c\u52a0\u4e0a\u6211\u4eec\u53c8\u5b66\u8fc7\u63d2\u5934dp\u800c\u4e0d\u4f1a\u65af\u5766\u7eb3\u6811\u8fd9\u4e2a\u7b97\u6cd5\uff08\u6bd4\u5982\u6211\uff09\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u60f3\u5230\u4f7f\u7528\u63d2\u5934dp\u3002\n\n\u800c\u4e14\u5982\u679c\u6ca1\u6709\u5b66\u8fc7\u62ec\u53f7\u8868\u793a\u6cd5\u63d2\u5934dp\u7684\u72ec\u7acb\u63d2\u5934\uff08\u6bd4\u5982\u6211\uff09\uff0c\u90a3\u4e48\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u727a\u7272\u5e38\u6570\u9009\u7528\u6700\u5c0f\u8868\u793a\u6cd5\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u4f46\u662f\u6211\u4eec\u6700\u5f00\u59cb\u5b66\u7684\u63d2\u5934dp\u53ea\u80fd\u89e3\u51b3\u54c8\u5bc6\u987f\u56de\u8def\u554a\u6839\u672c\u6ca1\u6709\u8fd9\u9053\u9898\u8fd9\u4e48\u590d\u6742\u8fd9\u53ef\u600e\u4e48\u529e\uff1f\n\n\u522b\u614c\uff0c\u6211\u4eec\u6162\u6162\u7406\uff1a\n\n1.\u666f\u70b9\u662f\u5fc5\u987b\u8981\u53d6\u7684\uff08\u63d2\u5934\u4e0d\u80fd\u4e3a\u201c0\u201d\uff09\u3002\n\n2.\u8def\u5f84\u5fc5\u987b\u662f\u4e92\u76f8\u8054\u901a\u7684\u7ebf\u6bb5\u3002\n\n\u5bf9\u4e8e1\uff0c\u6211\u4eec\u5f3a\u5236\u4e0d\u8ba9\u8fd9\u4e2a\u683c\u5b50\u4e0d\u653e\u63d2\u5934\u5373\u53ef\u3002\n\n\u5bf9\u4e8e2\uff0c\u6211\u4eec\u8003\u8651\u5982\u679c\u6211\u4eec\u5f53\u524d\u683c\u5b50\u7684\u4e0a\u63d2\u5934\u5728\u8f6e\u5ed3\u7ebf\u518d\u6ca1\u6709\u4e0e\u4e4b\u76f8\u8fde\u901a\u7684\u63d2\u5934\uff0c\u6b64\u65f6\u6211\u4eec\u4e0d\u9009\u5f53\u524d\u683c\u5b50\u7684\u8bdd\u6211\u4eec\u5c31\u5c06\u5206\u5f00\u6210\u4e24\u6761\u8def\u5f84\u4e86\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u53d6\uff1b\u4f46\u662f\u5982\u679c\u662f\u5de6\u63d2\u5934\u7684\u8bdd\u5982\u679c\u4e0d\u53d6\u7684\u8bdd\u662f\u53ef\u80fd\u7b26\u54082\u7684\u3002\n\n\uff08\u5982\u679c\u4e0d\u662f\u5f88\u597d\u7406\u89e3\u7684\u8bdd\u52a8\u624b\u753b\u56fe\u5427\u3002\uff09\n\n\u53e6\u5916\u8fd8\u8981\u6ce8\u610f\u7684\u662f\u5f53\u6211\u4eec\u5df2\u7ecf\u628a\u6240\u6709\u7684\u666f\u70b9\u90fd\u626b\u5b8c\u65f6\uff0c\u4e4b\u540e\u7684\u72b6\u6001\u5c31\u90fd\u6709\u53ef\u80fd\u6784\u6210\u4e00\u79cd\u65b9\u6848\uff0c\u6240\u4ee5\u8981\u65f6\u523b\u66f4\u65b0\uff08\u8fd9\u4e5f\u662f\u53c2\u8003\u535a\u5ba2\u4ee3\u7801\u7684\u9519\u8bef\u3002\uff09\n\n\u7136\u540e\u6b63\u5e38\u63d2\u5934dp\u5373\u53ef\uff0c\u90e8\u5206\u7ec6\u8282\u5199\u5728\u4e86\u4ee3\u7801\u6ce8\u91ca\u91cc\u3002\n\nemmmm\u4f60\u8981\u95ee\u6211\u590d\u6742\u5ea6\u7684\u8bdd\u6211\u4e5f\u4e0d\u77e5\u9053\u5440\uff01\n\n```\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int INF=2147483647;\nconst int mod=999983;\nconst int N=11;\nconst int M=1000005;\nstruct node{//\u54c8\u5e0c\u8868 \n    int nxt;\n    int state,ans,pos,pre;//\u72b6\u6001\uff0c\u7b54\u6848\uff0c\u7f16\u53f7\uff0c\u524d\u4e00\u4e2a\u72b6\u6001 \n    bool choose;//\u662f\u5426\u9009\u62e9\u8be5\u65b9\u5757 \n}edge[M];\nint head[mod+1],cnt;\nint lcnt,rcnt;\nvoid insert(int now,int num,int ppos,int last,bool flag){\n    int u=now%mod;\n    for(int i=head[u];i;i=edge[i].nxt){\n        if(edge[i].state==now){\n            if(num<edge[i].ans){\n                edge[i].ans=num;\n                edge[i].pos=ppos;\n                edge[i].pre=last;\n                edge[i].choose=flag;\n            }\n            return;\n        }\n    }\n    edge[++cnt].nxt=head[u];\n    head[u]=cnt;\n    edge[cnt].state=now;\n    edge[cnt].ans=num;\n    edge[cnt].pos=ppos;\n    edge[cnt].pre=last;\n    edge[cnt].choose=flag;\n    return;\n}\nbool g[N][N];\nint w[N],cntt;\nint n,m,lastedge,e1,e2;\nint mp[N][N];\nint mapp[N];\ninline void decode(int now){\n    for(int i=m;i>=1;i--){\n    \tw[i]=now&7;\n    \tnow>>=3;\n    }\n    return;\n}\ninline int encode(){\n    int x=0,tot=0;\n    memset(mapp,-1,sizeof(mapp));\n    mapp[0]=0;\n    for(int i=1;i<=m;i++){\n        if(mapp[w[i]]==-1)mapp[w[i]]=++tot;\n        w[i]=mapp[w[i]];\n        x=x<<3|w[i]; \n    }\n    return x;\n}\ninline void init(){\n    memset(head,0,sizeof(head));\n    lcnt=rcnt+1;rcnt=cnt;\n    return;\n}\ninline void getans(){\n    for(int k=lcnt;k<=rcnt;k++){\n        int now=edge[k].state;\n        int num=edge[k].ans;\n        decode(now);\n        bool flag=1;\n        for(int l=1;l<=m&&flag;l++){\n            if(w[l]>1)flag=0;\n        }\n        if(num<cntt&&flag){\n            cntt=num;\n            lastedge=k;\n        }\n    }\n    return;\n}\nvoid plugdp(){\n    insert(0,0,101,0,0);\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            init();\n           \tif(i>e1||(i==e1&&j>e2))getans();//\u5f53\u524d\u72b6\u6001\u53ef\u80fd\u6784\u6210\u4e00\u79cd\u65b9\u6848\n            for(int k=lcnt;k<=rcnt;k++){\n                int now=edge[k].state;\n                int num=edge[k].ans;\n                decode(now);\n                int is_right=w[j-1];//\u8fd9\u4e2a\u683c\u5b50\u5de6\u9762\u683c\u5b50\u7684\u53f3\u63d2\u5934 \n                int is_down=w[j];//\u8fd9\u4e2a\u683c\u5b50\u4e0a\u9762\u683c\u5b50\u7684\u4e0b\u63d2\u5934 \n                bool flag=0;//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u653e\u63d2\u5934\uff0c1\u53ef\u4ee5\u4e0d\u653e \n                if(!mp[i][j])flag=0;//\u666f\u70b9\u5fc5\u987b\u653e \n                else if(!is_down)flag=1;//\u4e0b\u63d2\u5934\u4e0d\u9700\u8981\u518d\u5339\u914d\uff0c\u6545\u53ef\u4ee5\u4e0d\u653e\u3002 \n                else{\n                    flag=0;\n                    for(int l=1;l<=m&&!flag;l++){\n                    \tif(l!=j&&w[l]==is_down)flag=1;\n                        //\u4e0a\u63d2\u5934\u5df2\u7ecf\u4e0e\u8f6e\u5ed3\u7ebf\u7684\u4e00\u7aef\u5339\u914d\uff0c\u53ef\u4ee5\u5728\u90a3\u4e00\u7aef\u5ef6\u4f38\u3002 \n                \t}\n                \t//\u6ca1\u6709\u5339\u914d\u7684\u63d2\u5934\uff0c\u5fc5\u987b\u8981\u63a5\u4e0a \n            \t}\n                if(flag){//\u4e0d\u653e\u63d2\u5934 \n                    w[j]=0;//\u4e0b\u63d2\u5934\u6ca1\u6709\u7528\u4e86 \n                    insert(encode(),num,(i-1)*m+j,k,0);\n                    w[j]=is_down;\n                }\n                //\u653e\u63d2\u5934 \n                if(!is_right&&!is_down)w[j]=7;//\u4e00\u4e2a\u65b0\u63d2\u5934 \n                else if(!is_down&&is_right)w[j]=is_right;//\u53f3\u63d2\u5934\u5ef6\u7eed\u8fc7\u6765 \n                else if(is_right!=is_down&&is_right&&is_down){\n                    for(int l=1;l<=j;l++){//\u4e0d\u592a\u597d\u8bf4\uff0c\u4f46\u753b\u4e2a\u56fe\u5e94\u8be5\u5c31\u7406\u89e3\u4e86 \n                    \tif(w[l]==is_right)w[l]=is_down;\n                    }\n                }\n                //\u5982\u679c\u4e0b\u63d2\u5934\u548c\u53f3\u63d2\u5934\u5339\u914d\u90a3\u4e48\u5c31\u628a\u5b83\u4eec\u8fde\u8d77\u6765 \n            \tinsert(encode(),num+mp[i][j],(i-1)*m+j,k,1);\n            } \n        }\n    }\n    init();\n    getans();\n    return;\n}\nvoid getans(int k){\n    if(!k)return;\n    int r=edge[k].pos;\n    int l=(r-1)/m+1;r=(r-1)%m+1;\n    g[l][r]=edge[k].choose;\n    getans(edge[k].pre);\n    return;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            scanf(\"%d\",&mp[i][j]);\n            if(!mp[i][j])e1=i,e2=j;\n        }\n    }\n    cntt=INF;\n    plugdp();\n    printf(\"%d\\n\",cntt);\n    getans(lastedge);\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(!mp[i][j])putchar('x');\n            else if(g[i][j])putchar('o');\n            else putchar('_');\n        }\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n\nhack\u53c2\u8003\u535a\u5ba2\u7a0b\u5e8f\u7684\u6570\u636e\u3002\n```\n4 3\n0 1 1\n10 10 1\n10 10 0\n10 10 1\n\nans\uff1a\n3\nxoo\n__o\n__x\n___\n```",
        "postTime": 1524400330,
        "uid": 36276,
        "name": "w36557658",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "~~\u6559\u7ec3\u4e0a\u6b21\u8bfe\u8bb2\u4e86\u63d2\u5934dp,\u7136\u540e\u5217\u51fa\u7684\u63d2\u5934dp\u9898\u76ee\u91cc\u6709\u8fd9\u9053\u9898\u3002\u672c\u6765\u60f3\u7ec3\u7ec3\u63d2\u5934dp\u7684\u7ed3\u679c\u7528\u66f4\u5feb\u66f4\u7b80\u5355\u7684\u65af\u5766\u7eb3\u6811\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002~~     \n\u65af\u5766\u7eb3\u6811\u7ecf\u5178\u9898\u76ee\u3002       \n\u65af\u5766\u7eb3\u6811\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u4e00\u822c\u7528\u6765\u89e3\u51b3\u5728\u4e00\u5f20\u65e0\u5411\u56fe\u4e0a\u9009\n$\\text{m}$\u4e2a\u70b9\u4f7f\u8fd9$\\text{m}$\u4e2a\u70b9\u8fde\u901a\u5e76\u4e14\u59cb\u6240\u9009\u8fb9\u8fb9\u6743\u6700\u5c0f\u3002   \n\n\u90a3\u4e48\u56de\u5230\u672c\u9898\u3002    \n\u8bbe$f_{i,j,s}$\u8868\u793a\u5f53\u524d\u5728\u7b2c$\\text{i}$\u884c$\\text{j}$\u5217\u7684\u70b9\uff0c\u72b6\u6001\u4e3a$\\text{s}$\u7684\u65f6\u5019\u6700\u5c0f\u6743\u503c\u548c\u3002\u8bbe$\\text{s1}$\u4ee3\u8868$\\text{s}$\u7684\u5b50\u96c6\u3002       \n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u663e\u800c\u6613\u89c1\u3002        \n$$f_{i,j,s} = min(f_{i,j,s},f_{i,s1xors} - a_{i,j})$$       \n\u8fd9\u4e2a\u8f6c\u79fb\u5e94\u8be5\u4e0d\u96be\u770b\u61c2\u5427\u3002             \n\u4f46\u662f\u8fd9\u91cc\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u90a3\u5c31\u662f\u4f1a\u51fa\u73b0\u65b0\u7684\u8282\u70b9\u3002    \n\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u77ed\u8def\u7684\u65b9\u5f0f\u6c42\u51fa\u4e0b\u9762\u4e00\u4e2a\u65b9\u7a0b\uff1a    \n\u8bbe$\\text{x,y}$\u4e3a\u5f53\u524d\u7684\u8282\u70b9\uff0c$\\text{xa,ya}$\u662f\u65b0\u62d3\u5c55\u51fa\u7684\u4e0e$\\text{x,y}$\u76f8\u8fde\u63a5\u7684\u8282\u70b9\u3002        \n\u5219\uff1a          \n$$f_{xa,ya,s} = min(f_{xa,ya,s},f_{x,y,s} +a_{xa,ya})$$         \n\u7136\u540e\u6211\u4eec\u5c31\u987a\u5229\u7684\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002      \n### My Code\uff1a      \n```cpp\n#include <bits/stdc++.h>\n\nconst int maxn = 20;\nconst int maxm = 20;\nconst int inf = 0x3f3f3f3f;\ntypedef long long ll;\n\nstruct Pair {\n  int x, y;\n  Pair() { x = 0;  y = 0; }\n  Pair(int _x,int _y) { x = _x;  y = _y;  }\n};\n\ninline Pair Make_Pair(int x,int y) {\n  return Pair(x,y);\n}\n\ntemplate<class T> inline void read(T& res) {\n  res = 0;  bool sign = 0;  char ch;\n  do ch = getchar(), sign |= ch == '-'; while(!isdigit(ch));\n  while(isdigit(ch)) res = (res << 1) + (res << 3) + (ch & 15), ch = getchar();\n  (sign) && (res = -res);\n}\n\nconst int dir[4][2] = {{0,-1},{0,1},{-1,0},{1,0}};\nint n, m, i, j, k, tx, ty;\nint a[maxn][maxn], f[maxn][maxn][1 << 11];\nbool inq[maxn][maxn], ans[maxn][maxn];\nstruct state {\n  int x, y, S;\n  state() { x = y = S = 0; }\n  state(int _x,int _y,int _S) { x = _x;  y = _y;  S = _S; }\n} las[maxn][maxn][1 << 11];\nstd::queue<Pair> q;\n\ninline void spfa(int s) {\n  while(!q.empty()) {\n    Pair qwq = q.front();  q.pop();\n    int x = qwq.x, y = qwq.y;  inq[x][y] = 0;\n    for(int i = 0, xa, ya;i < 4;i++) {\n      xa = x + dir[i][0];\n      ya = y + dir[i][1];\n      if(xa < 1 || xa > n || ya < 1 || ya > m) continue;\n      if(f[x][y][s] + a[xa][ya] < f[xa][ya][s]) {\n        f[xa][ya][s] = f[x][y][s] + a[xa][ya];\n        if(!inq[xa][ya]) q.push(Make_Pair(xa,ya)), inq[xa][ya] = 1;\n        las[xa][ya][s] = state(x,y,s);\n      }\n    }\n  }\n}\n\nvoid dfs(int i,int j,int s) {\n  if(!las[i][j][s].S) return;  ans[i][j] = 1;\n  state qwq = las[i][j][s];\n  int x = qwq.x, y = qwq.y, S = qwq.S;\n  dfs(x,y,S);\n  if(i == x && j == y) dfs(i,j,s ^ S);\n}\n\nint main() {\n  read(n);  read(m);\n  int cnt = 0;\n  memset(f,0x3f,sizeof(f));\n  for(int i = 1;i <= n;i++) {\n    for(int j = 1;j <= m;j++) {\n      read(a[i][j]);\n      if(!a[i][j]) tx = i, ty = j, f[i][j][1 << cnt] = 0, cnt++;\n    }\n  }\n  for(int l = 1, liml = (1 << cnt) - 1;l <= liml;l++) {\n    while(!q.empty()) q.pop();\n    for(int i = 1;i <= n;i++) {\n      for(int j = 1;j <= m;j++) {\n        for(int k = l;k;k = l & (k - 1)) {\n          if(f[i][j][l] > f[i][j][k] + f[i][j][k ^ l] - a[i][j]) {\n            f[i][j][l] = f[i][j][k] + f[i][j][k ^ l] - a[i][j];\n            las[i][j][l] = state(i,j,k);\n          }\n        }\n        if(f[i][j][l] != inf) q.push(Make_Pair(i,j)), inq[i][j] = 1;\n      }\n    }\n    spfa(l);\n  }\n  printf(\"%d\\n\",f[tx][ty][(1 << cnt) - 1]);\n  dfs(tx,ty,(1 << cnt) - 1);\n  for(int i = 1;i <= n;i++) {\n    for(int j = 1;j <= m;j++) {\n      if(!a[i][j]) { printf(\"x\");  continue; }\n      ans[i][j] ? printf(\"o\") : printf(\"_\");\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n```",
        "postTime": 1557140350,
        "uid": 114320,
        "name": "\u843d\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u4e00\u5f20 $n\\times m$ \u7684\u7f51\u683c\uff0c\u7f51\u683c\u6709\u6743\u503c\uff0c\u67d0\u4e9b\u683c\u5b50\u5fc5\u987b\u53d6\uff0c\u95ee\u80fd\u8986\u76d6\u6240\u6709\u5fc5\u987b\u53d6\u7684\u70b9\u7684\u8fde\u901a\u5757\u7684\u6700\u5c0f\u6743\u503c\u3002\n## \u9898\u89e3\n\u6700\u8fd1\u5728\u505a\u8f6e\u5ed3\u7ebfdp\u4e8e\u662f\u5c31\u7528\u8f6e\u5ed3\u7ebf\u6c34\u4e86\u4e00\u53d1\u3002\n\n\u5176\u5b9e\u5982\u679c\u7a0d\u5fae\u7406\u89e3\u4e00\u4e0b\u7684\u8bdd\u5c31\u662f[[JLOI2009]\u795e\u79d8\u7684\u751f\u7269](https://www.luogu.com.cn/problem/P3886)\u7684\u6539\u7f16\u4e86\u3002\n~~(\u770b\u8fd9\u5e74\u4efd\u53ef\u80fd\u662fJLOI\u6539\u7f16\u8fd9\u9053\u9898)~~\n\n\u9996\u5148\u662f\u5bf9\u4e8e\u5fc5\u987b\u9009\u7684\u70b9\uff0c\u6211\u4eec\u8d4b\u6781\u5c0f\u503c\uff0c\u4f7f\u5176\u5fc5\u987b\u9009\u4e2d\uff0c\u518d\u628a\u8fd9\u90e8\u5206\u6743\u503c\u52a0\u56de\u6765\u3002\u4ee5\u540e\u7684\u8ba8\u8bba\u5c31\u4e0d\u7528\u7ba1\u5fc5\u9009\u4e0e\u5426\u4e86\u3002\n\n\u7531\u4e8e\u4e0d\u662f\u95ed\u5408\u56de\u8def\uff0c\u6211\u4eec\u65e0\u6cd5\u7528\u62ec\u53f7\u5e8f\u5217\u6765\u8868\u793a\uff0c\u56e0\u6b64\u6211\u4eec\u7528**\u6700\u5c0f\u8868\u793a\u6cd5**\uff0c\u6bd4\u5982\u5f53\u524d\u7684\u8f6e\u5ed3\u7ebf\u4e0a\uff0c$1,3,4$ \u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c $6,7$ \u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $(1011022)$ \u6765\u8868\u793a\u5f53\u524d\u7684\u8f6e\u5ed3\u7ebf\u3002\u4e0d\u96be\u8bc1\u660e\u4e00\u4e2a\u6570\u5217\u4e0e\u4e00\u4e2a\u8f6e\u5ed3\u7ebf\u7684\u8fde\u901a\u6027\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u7531\u4e8e $m\\le 10$ \uff0c\u4e00\u6761\u8f6e\u5ed3\u7ebf\u4e0a\u7684\u4e0d\u540c\u7684\u8fde\u901a\u5757\u4e2a\u6570\u6700\u591a\u6709 $6$ \u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 $8$ \u8fdb\u5236\u6765\u8868\u793a\u8fd9\u4e2a\u6570\u5217\u3002\n\n\u6765\u8003\u8651\u600e\u4e48\u8f6c\u79fb\uff0c\u53d1\u73b0\u6709\u4ee5\u4e0b\u51e0\u79cd\n\n### \u6b64\u65b9\u683c\u4e0d\u9009\n\u82e5\u662f\u4fdd\u8bc1 $\\rm dp$ \u72b6\u6001\u5408\u6cd5\uff0c\u5de6\u8fb9\u7684\u65b9\u5757\u7684\u8fde\u901a\u6027\u4e0d\u53d8\uff0c\u4e0a\u9762\u7684\u5fc5\u987b\u4e0d\u662f\u552f\u4e00\u7684\u8fd9\u4e2a\u6807\u53f7\uff0c\u4e0d\u7136\u4e0a\u9762\u7684\u65b9\u5757\u5c31\u53d8\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u901a\u5757\u4e86\u3002\u82e5\u5408\u6cd5\u628a\u4e0a\u9762\u7684\u8fde\u901a\u5757\u6807\u53f7\u6539\u4e3a $0$ \u5373\u53ef\u3002\n### \u6b64\u65b9\u683c\u9009\u4e14\u5de6\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u9009\n\u8bbe\u6807\u53f7\u5206\u522b\u4e3a $A$\u3001$B$\uff0c\u90a3\u4e48\u9700\u8981 $A$\u3001$B$ \u4f1a\u8fde\u901a\u6210\u4e00\u4e2a\u8fde\u901a\u5757\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u3002\u90a3\u4e48\u53ea\u9700\u8981\u628a $\\min(A,B)$ \u4ee5\u53ca \u5f53\u524d\u683c\u70b9\u7684\u6807\u53f7\u6539\u4e3a $\\max(A,B)$ \u5373\u53ef\u3002\u4e0d\u8fc7\u5982\u679c $\\min(A,B)=0$ \u5c31\u6ca1\u5fc5\u8981\u6539\u4e86\u3002\n### \u6b64\u65b9\u683c\u9009\u4e14\u5de6\u4e0a\u90fd\u672a\u9009\n\u6700\u7b80\u5355\uff0c\u53ea\u9700\u8981\u65b0\u5efa\u4e00\u4e2a $7$ \u53f7\u8fde\u901a\u5757\u5373\u53ef\u3002\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u64cd\u4f5c\u6211\u4eec\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u6700\u5c0f\u8868\u793a\uff0c\u53ea\u662f\u5355\u7eaf\u5730\u8fde\u901a\u6027\u3002\u6211\u4eec\u9700\u8981\u7b80\u5355\u5730\u5199\u4e00\u4e2a\u51fd\u6570\u4f7f\u5176\u53d8\u4e3a\u6700\u5c0f\u8868\u793a\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u5728\u8f6c\u4e3a\u6700\u5c0f\u8868\u793a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u4e14\u4ec5\u5f53\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u65f6\u72b6\u6001\u624d\u53ef\u4ee5\u8ba1\u5165\u7b54\u6848\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u80fd\u8ba1\u7b97\u6700\u5c0f\u503c\u4e86\u3002\u8003\u8651\u6784\u9020\u65b9\u6848\u3002\u3002\n\n\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\uff0c\u5728 $\\rm dp$ \u6570\u7ec4\u4e2d\u8bb0\u5f55\u6bcf\u79cd\u72b6\u6001\u7684\u6700\u5927\u503c\u7684\u524d\u4e00\u4e2a\u72b6\u6001\uff0c\u7b54\u6848\u7684\u7ed3\u675f\u72b6\u6001\u3001\u7ed3\u675f\u4f4d\u7f6e\u3002\u8fd9\u91cc\u7528\u4e86\u4e2a `pair` \u6765\u5b9e\u73b0\u3002\u4ece\u7ed3\u675f\u4f4d\u7f6e\u5411\u524d\u904d\u5386\uff0c\u5e76\u6bcf\u6b21\u8df3\u5230\u524d\u4e00\u4e2a\u72b6\u6001\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u5730A\u4e86\u8fd9\u9053\u9898\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N=11,INF=1000000;\nint n,m,k,val[N][N];//\u4e3a\u4e86\u5f3a\u5236\u9009\u666f\u70b9\uff0c\u8d4b\u6781\u5c0f\u503c-INF\nint mp[N][N];//\u5728\u6700\u4f18\u65b9\u6848\u4e2d\u8fd9\u4e2a\u503c\u9009\u4e0d\u9009\npair<int,pair<int,pair<int,int>>>ans;\n#define Ans ans.first\n#define endst ans.second.first\n#define endx ans.second.second.first\n#define endy ans.second.second.second\nint bits[N],s[N];int x,y,nowans,nowst;\nunordered_map<int,pair<int,int>>dp[N][N];\n//\u89c4\u5b9a\uff1afirst\u4e3a\u6700\u5c0f\u503c\uff0c second\u4e3a\u4e0a\u4e00\u6b21\u72b6\u6001\nvoid init_bits(){for(int i=1;i<N;i++)bits[i]=i*3;}\nvoid getstate(){for(int i=1;i<=m;i++)s[i]=(nowst>>bits[i])&7;s[0]=0;}\nint relable(){\n\tstatic int t[20];memset(t,0,sizeof t);int cnt=0,st=0;\n\tfor(int i=1;i<=m;i++)if(s[i]){\n\t\tif(t[s[i]])s[i]=t[s[i]];\n\t\telse s[i]=t[s[i]]=++cnt;\n\t}\n\tfor(int i=1;i<=m;i++)st+=s[i]<<bits[i];\n\tif(cnt==1)ans=min(ans,{nowans,{st,{x,y}}});\n\treturn st;\n}\nvoid insert(int st){\n\tif(dp[x][y].find(st)==dp[x][y].end())dp[x][y][st]={nowans,nowst};\n\telse dp[x][y][st]=min(dp[x][y][st],{nowans,nowst});\n}\nvoid DP(){\n\tdp[0][m][0]={0,0};\n\tfor(x=1;x<=n;x++)\n\t\tfor(y=1;y<=m;y++){\n\t\t\tint prex=x,prey=y-1;\n\t\t\tif(prey==0)prey=m,prex=x-1;\n\t\t\tfor(auto k:dp[prex][prey]){\n\t\t\t\tnowst=k.first,nowans=k.second.first;\n\t\t\t\t//\u5047\u88c5\u8fd9\u91cc\u6ca1\u6709\u63d2\u5934\n\t\t\t\tgetstate();\n\t\t\t\tint d_plug=s[y],r_plug=s[y-1];\n\t\t\t\tint cnt=0;s[y]=0;\n\t\t\t\tfor(int l=1;l<=m;l++)\n\t\t\t\t\tif(d_plug==s[l])cnt++;\n\t\t\t\tif(!d_plug||cnt)insert(relable());\n\t\t\t\t//\u5982\u679c\u6709\u63d2\u5934\n\t\t\t\tgetstate();\n\t\t\t\tnowans+=val[x][y];\n\t\t\t\tif(!r_plug&&!d_plug)s[y]=7;//\u65b0\u5efa\u8fde\u901a\u5757\n\t\t\t\telse{\n\t\t\t\t\ts[y]=max(r_plug,d_plug);\n\t\t\t\t\tfor(int l=1;l<=n;l++)\n\t\t\t\t\t\tif(s[l]&&s[l]==min(r_plug,d_plug))\n\t\t\t\t\t\t\ts[l]=max(r_plug,d_plug);\n\t\t\t\t}\n\t\t\t\tinsert(relable());\n\t\t\t}\n\t\t}\n}\nsigned main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(x=1;x<=n;x++)\n\t\tfor(y=1;y<=m;y++)\n\t\t\tscanf(\"%d\",&val[x][y]),val[x][y]==0&&(val[x][y]=-INF,k++);\n\tinit_bits();DP();\n\tprintf(\"%d\\n\",Ans+k*INF);\n\tnowst=endst;\n\tfor(x=endx;x;x--){\n\t\tfor(y=x==endx?endy:m;y;y--){\n\t\t\tif(nowst>>bits[y]&7)mp[x][y]=1;\n\t\t\tnowst=dp[x][y][nowst].second;\n\t\t}\n\t}\n\tfor(x=1;x<=n;x++){\n\t\tfor(y=1;y<=m;y++){\n\t\t\tif(val[x][y]==-INF)putchar('x');\n\t\t\telse if(mp[x][y])putchar('o');\n\t\t\telse putchar('_');\n\t\t}putchar('\\n');\n\t}\n}\n```",
        "postTime": 1612103006,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9053\u9898\u524d\uff0c\u60a8\u5f97\u4fdd\u8bc1\u4f1a\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u3002\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u9898\u76ee\u610f\u601d\u662f\u8981\u627e\u5230\u4e00\u4e9b\u70b9\u653e\u5fd7\u613f\u8005\uff0c\u4f7f\u7ed9\u5b9a\u70b9\u8fde\u901a\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u540e\u4e00\u5b9a\u4f1a\u5f62\u6210\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\u591a\u4f59\u7684\u8fb9\u4f1a\u8ba9\u7b54\u6848\u4e0d\u4f18\uff08\u8fb9\u6743\u4e0d\u4e3a\u8d1f\uff09\n\n\u90a3\u4e48\uff0c\u5c31\u53ef\u4ee5\u7528\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u6765\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n\u5728\u6a21\u677f\u9898\u4e2d\uff0c\u6211\u4eec\u4f7f $dp_{i,S}$ \u8868\u793a\u4ee5 $ i $ \u4e3a\u6839\uff0c\u8fde\u901a\u6027\u4e3a $ S $ \u7684\u6700\u4f18\u4ee3\u4ef7\u3002\u53ef\u662f\u8fd9\u9898\u662f\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u8fdb\u884c\u8f6c\u7f6e\u3002\n\nn\u884cm\u5217\u7684\u77e9\u9635\u4e2d\uff0c$g(x, y)$ \u53ef\u4ee5\u7528 $a((x - 1) $ * $ m + y)$ \u8868\u793a\u3002\n\n\u6ce8\u610f\uff1a\u4e0d\u662f $a((x - 1) $ * $ n + y)$ \uff0c\u7b14\u8005\u56e0\u4e3a\u8fd9\u4e2a\u4e00\u76f4WA50\u3002\n\n\u7136\u540e\u770b\u4e0a\u53bb\u5c31\u662f\u677f\u5b50\u9898\u4e86\uff1f\n\n\u989d\uff0c\u8fd8\u6709\u4e9b\u7ec6\u8282\uff0c\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u70b9\u6743\u5316\u8fb9\u6743\uff0c\u6240\u4ee5\u8981\u628a\u8fd9\u4e2a\n\n```cpp\nfor (int subset = s & (s - 1); subset; subset = (subset - 1) & s)\n\tif (dp[i][s] > dp[i][subset] + dp[i][s ^ subset]) {\n\t\tdp[i][s] = dp[i][subset] + dp[i][s ^ subset];\n\t\tpre[i][s] = Mp(Mp(x, y), subset);\n\t}\n```\n\n\u6539\u4e3a\n\n```cpp\nfor (int subset = s & (s - 1); subset; subset = (subset - 1) & s)\n\tif (dp[i][s] > dp[i][subset] + dp[i][s ^ subset] - a[i]) {\n\t\tdp[i][s] = dp[i][subset] + dp[i][s ^ subset] - a[i];\n\t\tpre[i][s] = Mp(Mp(x, y), subset);\n\t}\n```\n\n\u6700\u540e\u8fd8\u8981\u628a\u6bcf\u6b21\u8f6c\u79fb\u51b3\u7b56\u70b9\u627e\u51fa\u6765\uff0c\u65b9\u4fbf\u8f93\u51fa\u65b9\u6848\u3002\n\n\u5b8c\u7ed3\u6492\u82b1\uff1a\n\n```cpp\nconst int dx[] = {0, 0, -1, 1};\nconst int dy[] = {-1, 1, 0, 0};\nconst int Maxn = 15, Maxm = 1 << 11;\nint n, m, k, a[Maxn * Maxn], ans[Maxn][Maxn], dp[Maxn * Maxn][Maxm], cnt;\ntypedef pair < pair <int, int>, int > pii; pii pre[Maxn * Maxn][Maxm];\n\nstruct state {\n\tint x, y, d;\n\tstate(void) { x = y = d = 0; }\n\tstate(int _x, int _y, int _d) : x(_x), y(_y), d(_d) {}\n\tinline bool operator < (const state&rhs) const { return d > rhs.d; }\n}; priority_queue <state> q; bool vis[Maxn][Maxn];\n\ninline bool vaild(int x, int y) { return x >= 1 && y >= 1 && x <= n && y <= m; }\ninline void Dijkstra(int s) {\n\tMs(vis, false);\n\twhile (!q.empty()) {\n\t\tint x = q.top().x, y = q.top().y; q.pop();\n\t\tif (vis[x][y]) continue; vis[x][y] = true;\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tint nx = x + dx[i], ny = y + dy[i];\n\t\t\tif (vaild(nx, ny) && dp[(nx - 1) * m + ny][s] > dp[(x - 1) * m + y][s] + a[(nx - 1) * m + ny]) {\n\t\t\t\tdp[(nx - 1) * m + ny][s] = dp[(x - 1) * m + y][s] + a[(nx - 1) * m + ny];\n\t\t\t\tq.push(state(nx, ny, dp[(nx - 1) * m + ny][s])); pre[(nx - 1) * m + ny][s] = Mp(Mp(x, y), s);\n\t\t\t}\n\t\t}\n\t}\n}\n\n#define coor(u) ((u.first - 1) * m + u.second)\ninline void findpaths(pair <int, int> u, int s) {\n\tif (!pre[coor(u)][s].second) return;\n\tans[u.first][u.second] = 1;\n\tif (pre[coor(u)][s].first == u) findpaths(u, s ^ pre[coor(u)][s].second);\n\tfindpaths(pre[coor(u)][s].first, pre[coor(u)][s].second);\n}\n\nint fx, fy, pos;\nsigned main(void) {\n//\tfile(\"\");\n\tread(n), read(m); Ms(dp, 0x3f);\n\tfor (int i = 1; i <= n; i++)\n\tfor (int j = 1; j <= m; j++) {\n\t\tread(a[++cnt]);\n\t\tif (a[cnt] == 0) { ++k;\n\t\t\tdp[cnt][1 << k - 1] = 0;\n\t\t\tpos = cnt; fx = i; fy = j;\n\t\t}\n\t}\n\t\n\tfor (int s = 1; s < 1 << k; s++) {\n\t\tfor (int x = 1; x <= n; x++)\n\t\tfor (int y = 1; y <= m; y++) { int i = (x - 1) * m + y;\n\t\t\tfor (int subset = s & (s - 1); subset; subset = (subset - 1) & s)\n\t\t\t\tif (dp[i][s] > dp[i][subset] + dp[i][s ^ subset] - a[i]) {\n\t\t\t\t\tdp[i][s] = dp[i][subset] + dp[i][s ^ subset] - a[i];\n\t\t\t\t\tpre[i][s] = Mp(Mp(x, y), subset);\n\t\t\t\t}\n\t\t\tif (dp[i][s] != 0x3f3f3f3f) q.push(state(x, y, dp[i][s]));\n\t\t} Dijkstra(s);\n\t} writeln(dp[pos][(1 << k) - 1]); findpaths(Mp(fx, fy), (1 << k) - 1);\n\t\n\tfor (int i = 1; i <= n; i++)\n\tfor (int j = 1; j <= m; j++) {\n\t\tif (!a[(i - 1) * m + j]) putchar('x');\n\t\telse putchar(ans[i][j] ? 'o' : '_');\n\t\tif (j == m) putchar('\\n');\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596080882,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "2019 8.9\n\u65af\u5766\u7eb3\u6811\uff0c\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u73af\u7684\u5b58\u5728\u6ca1\u6709\u610f\u4e49\u3002\n\n\u7c7b\u4f3c\u5b9d\u85cf\u7684\uff0c\u6700\u4f18\u89e3\u662f\u4e00\u9897\u6811\n\n\u6a21\u578b\uff1a\u7ed9\u5b9a\u67d0\u4e9b\u5173\u952e\u70b9\uff0c\u627e\u5230\u4e00\u4e9b\u8fb9\u7684\u96c6\u5408\u4f7f\u5f97\u5173\u952e\u70b9\u4e92\u76f8\u8fde\u901a\uff0c\u8981\u6c42\u5f00\u9500\u6700\u5c0f\n\n\u7528\u5230\u4e00\u70b9\u70b9\u6811\u5f62dp\u7684\u60f3\u6cd5\uff0c\u7528 dp i\uff0cs\u8868\u793a\u4ee5i\u4e3a\u6839\uff0cs\u662f\u5173\u952e\u70b9\u96c6\u5408\u72b6\u6001\u4e0b\u7684\u6700\u5c0f\u503c\u3002\n\n1\uff0c\u6811\u4e0e\u6811\n\n\u6811\u662f\u7531\u5b50\u6811\u5408\u5e76\u6765\u7684\n\n\u5e38\u89c4\u7b2c\u4e00\u5c42\u8f6c\u79fb\uff1a dp i\uff0cs=min\uff08dp i\uff0cS+dp i\uff0cs-S\uff09\uff1b\n\n2\uff0c\u6811\u4e0e\u70b9\n\n\u8003\u8651\u6811\u7531\u53e6\u5916\u4e00\u4e2a\u70b9\u8f6c\u79fb\u8fc7\u6765,dp i,s=min(dp j,s+dis i,j)\n\n\u8fd9\u662f\u4e09\u89d2\u4e0d\u7b49\u5f0f\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528spfa\u6765\u52a0\u901f\u7b97\u6cd5\uff1b\n\n\u6811\u5f62\u7ed3\u5408\u4e00\u4e0b\u5c31\u662fspfa\u662f\u6709dx\u3001dy\u53c2\u4e0e\u7684\u4e0a\u4e0b\u5de6\u53f3\u56db\u683c\u7684\u62d3\u5c55\uff0c\u8fd9\u6837\u4fdd\u8bc1i\u4e0ej\u76f8\u8fde\n\n\u7b2c\u4e00\u5c42\u8f6c\u79fb\u662f\u5bf9i\u672c\u8eab\u6709\u53ef\u80fd\u8fde\u8d77\u6765\u7684\u60c5\u51b5\u7684\u5408\u5e76\uff1b\n\n\u4e00\u4e9b\u7ec6\u8282\u6ce8\u610f\uff1a\n\n1 \u8bfb\u5165\u65f6\u9884\u5904\u7406\u666f\u70b9\uff0c dp k\uff0c1<<(k-1)=0\uff1b\n\n2\u961f\u5217\u4e2d\u5df2\u7ecf\u6269\u5c55\u5b8c\u7684\u70b9\u4e0d\u53ef\u4ee5\u518d\u6269\u5c55\uff0c\u5047\u8bbei j\u76f8\u8fde\uff0ci\u70b9get\u6700\u4f18\u540e\u8f6e\u5230j\u6269\uff0cj\u4e5f\u53d6\u5f97\u6700\u4f18\u540e\u518d\u8fd4\u56de\u53bb\u628ai\u4e5f\u6269\u4e00\u904d\uff0c\u662f\u975e\u6cd5\u7684\u3002\u4e0d\u6807\u8bb0\u4f1a\u51c9\u51c9\u3002 \u5176\u5b9e\u8fd9\u70b9\u5728spfa\u6a21\u677f\u4e2d\u90fd\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u7b14\u8005\u662f\u5199\u6765\u63d0\u9192\u81ea\u5df1\u3002\n\n3 \u53d6min\u6240\u4ee5memset max\uff1b\n\n4\u6254\u5230\u961f\u5217\u4e2d\u65f6\u4e5f\u8981\u8981\u6c42\u8fd9\u4e2a\u70b9\u5728\u4e4b\u524d\u662f\u6269\u5c55\u8fc7\u7684\uff0c\u5426\u5219\u592a\u5927\u4f1a\u7206\u6389\uff080x7f\uff09;\n\n5\u62d3\u6251\u987a\u5e8f\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u7b2c\u4e00\u91cd\u548c\u7b2c\u4e8c\u91cd\u4e0d\u80fd\u98a0\u5012\uff1a\u7b2c\u4e8c\u91cd\u7684dp\u662f\u5728\u6240\u6709\u8282\u70b9\u5bf9\u4e8es\u5df2\u7ecf\u6c42\u5f97\u6700\u5c0f\u503c\u7684\u60c5\u51b5\u4e0b\u518d\u62d3\u5c55\uff0c\u6bd4\u65b9\u8bf4\u5047\u8bbe\u201c\u8003\u8651\u6811\u7531\u53e6\u5916\u4e00\u4e2a\u70b9\u8f6c\u79fb\u8fc7\u6765,dp i,s=min(dp j,s+dis i,j)\u201d\uff0c\u4e14\u8fd9\u79cd\u65b9\u6848\u662f\u6700\u4f18\uff0c\u5982\u679c\u8fd9\u65f6\u7684dp\nj\uff0cs\u6ca1\u6709\u66f4\u65b0\u8fc7\u5c31\u51c9\u51c9\uff0c\u5b8c\u7f8e\u907f\u5f00\u3002\u6240\u4ee5spfa\u7684\u987a\u5e8f\u662f\u5728i\u548cs\u7684\u4e24\u91cd\u5faa\u73af\u5b8c\u540e\u518d\u8dd1\u7684\u3002\n\n6.\u5173\u4e8e\u4e3a\u4ec0\u4e48\u9700\u8981\u7b2c\u4e8c\u91cd\u7684\u4e00\u4e9b\u601d\u8003\u3002\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u7b2c\u4e00\u91cd\u65f6\u53ea\u4fdd\u8bc1\u4e86\u4e24\u4e2a\u5b50\u96c6\u4e92\u4e0d\u91cd\u5408\uff0c\u4e5f\u5c31\u662f\u8bf4\u5173\u952e\u70b9\u7684\u8fde\u901a\u72b6\u6001\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u5728\u771f\u5b9e\u5730\u56fe\u4e0a\u9053\u8def\u662f\u6709\u91cd\u53e0\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6d6a\u8d39\u3002\u5047\u8bbei\u70b9\u5f97\u5230\u7684\u6700\u4f18\u89e3\u4e2d\u4e24\u4e2a\u5b50\u96c6\u7684\u9053\u8def\u6709\u91cd\u53e0\uff0c\u6211\u4eec\u5728\u540e\u7eed\u679a\u4e3e\u67d0\u4e2a\u70b9\u65f6\uff0c\u4e00\u5b9a\u4f1a\u679a\u4e3e\u5230\u521a\u521a\u597d\u4e0d\u91cd\u53e0\u4e14\u53d6\u6700\u4f18\u7684\u70b9j\uff08\u56e0\u4e3a\u679a\u4e3e\u4e86\u6240\u6709\u7684\u70b9\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u4e00\u5b9a\u5305\u62ec\u5728\u5176\u4e2d\uff09\uff0c\u8fd9\u6837\u518d\u8dd1\u4e00\u6b21\u7b2c\u4e8c\u91cd\u8f6c\u79fb\uff0c\u5c31\u80fd\u628a\u4e0d\u91cd\u53e0\u7684\u65b9\u6848\u8003\u8651\u8fdb\u53bb\uff0c\u4ecej\u8f6c\u79fb\u5230i\u3002\n\nTALK IS CHEAP,SHOE ME THE CODE.\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint dx[5]={0,-1,1,0,0},dy[5]={0,0,0,-1,1},book[300],num[105][105],\nf[201][1<<11],n,m,k,MOVEx[300],MOVEy[300],a[300],tot=0,cnt=0,i,s,ts,\nget[300],pre[300][1<<11][3];\nstruct node{\n\tint x,y,id;\n};\nqueue <node>q;\nvoid print( )\n{ int i;\nfor(i=1;i<=n*m;i++)\n {if(a[i]==0) get[i]=2;}\n \nfor(i=1;i<=n;i++)\n {for(int j=1;j<=m;j++)\n  {if(get[num[i][j]]==2)\n    {cout<<\"x\";}\n    else if(get[num[i][j]]==1)\n     {cout<<\"o\";}\n      else cout<<\"_\";\n\t\t}\n\tcout<<endl;\t\n\t  }\n}\nvoid dfs(int i,int s)\n{ if(pre[i][s][0]==1)\n   {if(pre[i][s][1]==i) {\n\t get[i]=2;\t\n     return;\n\t }\n\t else {\n\t\tget[pre[i][s][1]]=1;//\u653e\u7f6e\t\n\t    dfs(pre[i][s][1],s);\n\t }\n\t\t}\n \telse {\n\t\tget[i]=1;\n\t\tdfs(i,pre[i][s][1]);\n\t\tdfs(i,pre[i][s][2]);\n \t}\n}\nvoid spfa(int s)\n{ while(!q.empty( ))\n\t{ node p=q.front( );\n\t  q.pop( );\n\t int xx=p.x,yy=p.y,r=p.id,newr;//\u6570\u636e\uff0c\u7f16\u53f7 \n\t  book[r]=0;//\u4e0d\u5728\u961f\u5217\u4e2d \n\t  for(int i=1;i<=4;i++)\n\t   { int x=xx+dx[i],y=yy+dy[i];\n\t\n\t\t  if(x<=n&&x>=1&&y<=m&&y>=1)//ok\n\t\t   {newr=num[x][y];\n\t\t\t\tif(f[newr][s]>f[r][s]+a[newr])\n\t\t\t\t {f[newr][s]=f[r][s]+a[newr];\n\t\t\t\t  pre[newr][s][0]=1;\n\t\t\t\t  pre[newr][s][1]=r;\n\t\t\t\t   if(book[newr]==0)\n\t\t\t\t\t{book[newr]=1;//\u5408\u6cd5&&\u53ef\u6269 \u538b\u5165\u961f\u5217 \n\t\t\t\t\t node newp;\n\t\t\t\t\t newp.id=newr;newp.x=x;newp.y=y;\n\t\t\t\t\t q.push(newp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\nvoid solve( )\n{ int U=(1<<k)-1;\n \tfor(s=0;s<=U;s++)\n \t {\n\t   for(i=1;i<=n*m;i++)\n \t    { for(ts=(s&(s-1));ts;ts=((ts-1)&s))//\u7c7b\u4f3c\u5b9d\u85cf \u679a\u4e3e\u5b50\u96c6 \n\t\t\t{\n\t\t\t\tif(f[i][s]>f[i][ts]+f[i][s^ts]-a[i])\n\t\t\t\t{f[i][s]=f[i][ts]+f[i][s^ts]-a[i];\n\t\t\t\t pre[i][s][0]=2;\n\t\t\t\t pre[i][s][1]=ts;\n\t\t\t\t pre[i][s][2]=(s^ts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t if(f[i][s]<20192019) \n\t\t\t {node h;\n\t\t\t  h.x=MOVEx[i];h.y=MOVEy[i];h.id=i;\n\t\t\t   if(book[h.id]==0)\n\t\t\t     {q.push(h);book[i]=1;}\n\t\t\t   }\t\n\t\t\t}\n\t\t\tspfa(s);\n\t\t }\n\t\t int point,ans=20192019;\n\t\t for(i=1;i<=n*m;i++)\n\t\t { if(ans>f[i][U]) \n\t\t    {ans=f[i][U];point=i;\n\t\t\t\t }\n\t\t\t\t}\t\n\t\tdfs(point,U);\n\t\tprint( );\t\t\t\t\t\n}\nint main( )\n{\n\tcin>>n>>m;\n\tfor(int s=0;s<=(1<<11)-1;s++)\n\t for(int i=1;i<=200;i++)\n\t  {f[i][s]=20192019;}\nint ch;\nk=0;\n\tfor(int i=1;i<=n;i++)\n\t for(int j=1;j<=m;j++)\n\t  {cin>>ch;\n\t   ++cnt;\n\t   tot+=ch;\n\t   num[i][j]=cnt;//\u540c\u4e0b \n\t   a[cnt]=ch;//\u5750\u6807\u7edf\u4e00\u8f6c\u4e3a\u7f16\u53f7 \n\t   MOVEx[cnt]=i;MOVEy[cnt]=j;//\u7f16\u53f7\u8f6c\u683c\u5b50 \n\t   if(ch==0) {\n\t\t\t++k;\n\t\t\t f[cnt][1<<(k-1)]=0;\n\t\t\t pre[cnt][1<<(k-1)][0]=1;\n\t\t\t pre[cnt][1<<(k-1)][1]=cnt;\n\t\t\t get[cnt]=2;\n\t   }\n\t}\n\n\tsolve( );\t\t\n}\t \n```\n\n",
        "postTime": 1565350513,
        "uid": 130183,
        "name": "liyishui2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4294 \u3010[WC2008]\u6e38\u89c8\u8ba1\u5212\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u6211\u5c31\u559c\u6b22\u8fd9\u79cd\u91cd\u9898\u7684\u9898\uff0c\u4e0d\u77e5\u9053\u662fWC\u642c\u7684CF\u8fd8\u662fCF\u642c\u7684WC\uff0c\u4e0d\u7ba1\u4e86\uff0c\u53cd\u6b63\u4e00\u6837\u5c31\u662f\u4e86\u3002\n\n\u65e2\u53ef\u4ee5\u6c34 $2$ \u7bc7\u9898\u89e3\uff0c\u4e5f\u53ef\u4ee5\u641e\u6389\u4e00\u9ed1\u4e00\u7d2b\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\uff1f\n\n## \u89e3\u9898\u601d\u8def\n\n$k$ \u5f88\u5c0f\uff0c\u53c8\u662f\u8fde\u901a\u6027\u95ee\u9898\uff0c\u663e\u7136\u6700\u5c0f\u65af\u5766\u7eb3\u6811\uff0c\u95ee\u9898\u662f\u5982\u4f55\u5efa\u56fe\uff1f\u5982\u4f55\u6c42\u51fa\u65b9\u6848\uff1f\n\n### \u5efa\u56fe\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u56db\u8054\u901a\u6765\u5efa\u56fe\uff0c\u4e0d\u7528\u7ba1\u8fb9\u6743\u3002\u7531\u4e8e\u5728\u8fd9\u5f20\u56fe\u91cc\u53ea\u6709\u70b9\u6743\uff0c\u6211\u4eec\u7684\u65af\u5766\u7eb3\u6811 DP \u8f6c\u79fb\u65b9\u7a0b\u4f1a\u6709\u6240\u6539\u53d8\uff08\u4e0d\u8981\u91cd\u590d\u8ba1\u7b97\u70b9\u6743\uff09\uff0c\u5177\u4f53\u770b\u4ee3\u7801\uff0c\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff08\u53ea\u8981\u4f60\u7406\u89e3\u4e86\u65af\u5766\u7eb3\u6811\u7684\u677f\u5b50\uff09\u3002\n\n### \u6c42\u51fa\u65b9\u6848\n\n\u8fd9\u4e2a\u6709\u70b9\u96be\u5ea6\u3002\u5176\u5b9e\u53ef\u4ee5\u548c\u5927\u90e8\u5206 DP \u4e00\u6837\uff0c\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u8f6c\u79fb\u51b3\u7b56\u70b9\u3002SPFA \u53ef\u4ee5\u8fd9\u6837\uff0c\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f\u7684\u90e8\u5206\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u8fd9\u6837\uff0c\u5982\u679c\u53ef\u4ee5\u5df2\u901a\u8fc7 SPFA \u8bb0\u5f55\u7684\u51b3\u7b56\u70b9\u4e00\u76f4\u5f80\u524d\u63a8\uff0c\u5c31\u5f80\u524d\uff0c\u76f4\u5230\u7ed3\u675f\u4e3a\u6b62\uff0c\u6211\u4eec\u5c31\u5728\u628a\u5f53\u524d\u72b6\u6001\u7684\u9012\u63a8\u5728\u8dd1\u4e00\u904d\u5373\u53ef\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=110,MAXK=11,INF=2e9;\nconst int dx[]={1,0,-1,0};\nconst int dy[]={0,1,0,-1};\n\nint n,m,k,cnt;\nint a[MAXN],h[MAXN],f[MAXN][1<<MAXK],g[MAXN][1<<MAXK];\nchar ans[MAXN];\nbool inq[MAXN],vis[MAXN][1<<MAXK];\nqueue<int> q;\n\nint idx(int i,int j) {\n\treturn (i-1)*m+j;\n} \nbool ok(int i,int j) {\n\tif(i>n||i<1||j>m||j<1) {\n\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nstruct edge {\n\tint to,nxt;\n}e[10000];\n\nvoid addedge(int u,int v) {\n\te[++cnt].nxt=h[u];\n\te[cnt].to=v;\n\th[u]=cnt;\n}\n\nvoid SPFA(int s) {\n\twhile(!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinq[u]=0;\n\t\t\n\t\tfor(int i=h[u];i;i=e[i].nxt) {\n\t\t\tint v=e[i].to;\n\t\t\tif(f[v][s]>f[u][s]+a[v]) {\n\t\t\t\tf[v][s]=f[u][s]+a[v];\n\t\t\t\tg[v][s]=u;\n\t\t\t\tif(!inq[v]) {\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid getans(int u,int s) {\n\tif(vis[u][s]) {\n\t\treturn ;\n\t}\n\tvis[u][s]=1;\n\t\n\tans[u]='o';\n    //\u4e00\u76f4\u5f80\u524d\u63a8\n\twhile(g[u][s]!=-1&&f[g[u][s]][s]+a[u]==f[u][s]) {\n\t\tu=g[u][s];\n\t\tgetans(u,s);\n\t}\n\tfor(int t=s&(s-1);t;t=(t-1)&s) {\n\t\tif(f[u][t]+f[u][s^t]-a[u]==f[u][s]) {\n\t\t\tgetans(u,t);\n\t\t\tgetans(u,s^t);\n\t\t\tbreak;\n            //\u91cd\u65b0\u9012\u63a8\n\t\t}\n\t}\n}\n\nsigned main() {\n\tcin>>n>>m;\n\tfor(int i=1;i<=n*m;i++) {\n\t\tfor(int j=0;j<=1023;j++) {\n\t\t\tf[i][j]=INF;\n\t\t\tg[i][j]=-1;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tans[idx(i,j)]='_';\n\t\t\tcin>>a[idx(i,j)];\n\t\t\tif(!a[idx(i,j)]) {\n\t\t\t\tf[idx(i,j)][1<<k]=0;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tfor(int p=0;p<4;p++) {\n\t\t\t\tif(ok(i+dx[p],j+dy[p])) {\n\t\t\t\t\taddedge(idx(i,j),idx(i+dx[p],j+dy[p]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint mx=(1<<k)-1;\n\t\n\tfor(int s=0;s<=mx;s++) {\n\t\tfor(int i=1;i<=n*m;i++) {\n\t\t\tfor(int t=s&(s-1);t;t=(t-1)&s) {\n\t\t\t\tf[i][s]=min(f[i][s],f[i][t]+f[i][s^t]-a[i]);\n                //\u540c\u4e00\u70b9\u7684\u70b9\u6743\u4e0d\u8981\u91cd\u590d\u7b97\n\t\t\t}\n\t\t\tif(f[i][s]<INF) {\n\t\t\t\tinq[i]=1;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t\tSPFA(s);\n\t}\n\t\n\tint minn=INF,mark=0;\n\tfor(int i=1;i<=n*m;i++) {\n\t\tif(f[i][mx]<minn) {\n\t\t\tminn=f[i][mx];\n\t\t\tmark=i;\n\t\t}\n\t}\n\t\n\tcout<<minn<<endl;\n\tgetans(mark,mx);\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(!a[idx(i,j)]) {\n\t\t\t\tans[idx(i,j)]='x';\n\t\t\t}\n\t\t\tprintf(\"%c\",ans[idx(i,j)]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1624886781,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "LG 4294[WC2008]\u6e38\u89c8\u8ba1\u5212"
    },
    {
        "content": "[\u9898\u9762](https://www.lydsy.com/JudgeOnline/problem.php?id=2595)\n\n\u65af\u5766\u7eb3\u6811\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u4ec0\u4e48\u662f\u65af\u5766\u7eb3\u6811\u3002\u770b\u8d77\u6765\u540d\u5b57\u5f88\u9ad8\u6df1\uff0c\u5176\u5b9e\u53ea\u4e0d\u8fc7\u662f\u4e00\u68f5\u6811\u666e\u901a\u7684\u6811\u800c\u5df2\u3002\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u7ed9\u4f60$n$\u4e2a\u70b9\uff0c\u5176\u4e2d\u6709$k$\u4e2a\u662f\u5173\u952e\u70b9\uff0c\u6211\u4eec\u5c06\u628a\u8fd9\u4e2a$k$\u4e2a\u5173\u952e\u70b9\u8fde\u63a5\u8d77\u6765\u7684\u6811\u79f0\u4f5c\u65af\u5766\u7eb3\u6811\u3002\u5982\u679c\u8fde\u63a5\u6709\u8fb9\u6743\uff0c\u4e14\u5f53\u524d\u8fde\u63a5\u65b9\u5f0f\u7684\u603b\u8fb9\u6743\u6700\u5c0f\uff0c\u5219\u79f0\u4e4b\u4e3a\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u3002\u663e\u7136\uff0c\u6700\u5c0f\u751f\u6210\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u3002\n\n\u90a3\u4e48\u5f88\u660e\u663e\u4e86\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u88f8\u7684\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u7684\u9898\u4e86\u3002\u7136\u540e\u5f00\u59cb\u601d\u8003\u5982\u4f55\u6c42\u89e3\u6700\u5c0f\u65af\u5766\u7eb3\u6811\u3002\u6bd4\u8f83\u5e38\u89c4\u7684\u65b9\u6cd5\u5c31\u662f\u72b6\u538b\u4e86\u3002\u72b6\u6001\u7684\u6bcf\u4e00\u4f4d\u7528\u6765\u8868\u793a\u8fd9\u4e00\u4f4d\u5bf9\u5e94\u7684\u70b9\u662f\u5426\u88ab\u8fde\u63a5\u4e0a\u4e86\u3002\u4e8e\u662f\u5c31\u662f\u5e38\u89c4\u7684\u72b6\u538b\u4e86\u3002$dp[i][S]$\u8868\u793a\u5f53\u524d\u70b9\u7684\u7f16\u53f7\u4e3a$i$\uff0c\u72b6\u6001\u4e3a$S$\u7684\u6700\u5c0f\u6743\u503c\u548c\u3002\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u597d\u5199\uff0c\u5c31\u662f\u679a\u4e3e\u5b50\u96c6$SS$,$dp[i][S]=min(dp[i][SS]+dp[i][SS xor S]-va[i])$\u3002\u7136\u540e\u8fd9\u91cc\u53ef\u80fd\u4f1a\u51fa\u73b0\u65b0\u7684\u7ed3\u70b9\uff08\u5373\u4e0d\u662f\u5b50\u96c6\uff09\uff0c\u6240\u4ee5\u65b9\u7a0b\u53d8\u6210$dp[i][S]=min(dp[j][S]+va[i])$\uff08$j$\u548c$k$\u76f8\u8fde\uff09\u3002\u800c\u8fd9\u6761\u65b9\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6c42\u6700\u77ed\u8def\u7684\u65b9\u5f0f\u6c42\u51fa\u3002\u4e8e\u662f\u5c31\u505a\u597d\u4e86\u3002\n\ncode:\n```\n//2018.9.10 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline int read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline int _abs(const res &x){\n    return x>0?x:-x;\n}\ninline int _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline int _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst int N=10+10;\nconst int dx[]={0,0,-1,1};\nconst int dy[]={-1,1,0,0};\nnamespace MAIN{\n    int n,m;\n    typedef pair<int,int> Pair;\n#define mp make_pair\n    Pair Q[N*N];\n    int he,ta;\n    int dp[N][N][1<<10];\n    int va[N][N],tot,ex,ey,sx,sy;\n    struct SIT{\n        int x,y,S;\n        SIT() {}\n        SIT(res x,res y,res S):x(x),y(y),S(S) {}\n    }pre[N][N][1<<10];\n    bool vis[N][N];\n    inline void spfa(res S){\n        while(he<=ta){\n            res x=Q[he].first,y=Q[he].second;\n            he++;\n            vis[x][y]=0;\n            for(res d=0;d<4;d++){\n                res nx=x+dx[d],ny=y+dy[d];\n                if(nx<1||nx>n||ny<1||ny>m)continue;\n                if(dp[nx][ny][S]>dp[x][y][S]+va[nx][ny]){\n                    dp[nx][ny][S]=dp[x][y][S]+va[nx][ny];\n                    if(!vis[nx][ny])Q[++ta]=mp(nx,ny),vis[nx][ny]=1;\n                    pre[nx][ny][S]=SIT(x,y,S);\n                }\n            }\n        }\n    }\n    bool ans[N][N];\n    void dfs(res x,res y,res S){\n        if(!pre[x][y][S].S)return;\n        ans[x][y]=1;\n        SIT p=pre[x][y][S];\n        dfs(p.x,p.y,p.S);\n        if(p.x==x&&p.y==y)dfs(x,y,S^p.S);\n    }\n    inline void MAIN(){\n        n=read(),m=read();\n        memset(dp,inf,sizeof(dp));\n        for(res i=1;i<=n;i++)\n            for(res j=1;j<=m;j++){\n                va[i][j]=read();\n                if(!va[i][j])dp[i][j][1<<tot]=0,ex=i,ey=j,tot++;\n            }\n        for(res S=1;S<(1<<tot);S++){\n            he=1,ta=0;\n            for(res i=1;i<=n;i++)\n                for(res j=1;j<=m;j++){\n                    for(res SS=S;SS;SS=S&(SS-1))\n                        if(dp[i][j][S]>dp[i][j][SS]+dp[i][j][SS^S]-va[i][j])\n                            dp[i][j][S]=dp[i][j][SS]+dp[i][j][SS^S]-va[i][j],pre[i][j][S]=SIT(i,j,SS);\n                    if(dp[i][j][S]!=inf)Q[++ta]=mp(i,j),vis[i][j]=1;\n                }\n            spfa(S);\n        }\n        printf(\"%d\\n\",dp[ex][ey][(1<<tot)-1]);\n        dfs(ex,ey,(1<<tot)-1);\n        for(res i=1;i<=n;i++){\n            for(res j=1;j<=m;j++){\n                if(!va[i][j])printf(\"x\");\n                else if(ans[i][j])printf(\"o\");\n                else printf(\"_\");\n            }\n            puts(\"\");\n        }\n    }\n}\nint main(){\n    MAIN::MAIN();\n    return 0;\n}\n```\n",
        "postTime": 1536576335,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010WC2008\u3011\u6e38\u89c8\u8ba1\u5212"
    }
]