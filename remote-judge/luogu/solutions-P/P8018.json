[
    {
        "content": "[link](https://www.luogu.com.cn/problem/P8018)\n\n\u9996\u5148\u7ed9\u6bcf\u4e2a\u70b9\u548c\u5b83\u6307\u5411\u7684\u70b9\u8fde\u8fb9\u4e4b\u540e\u4f1a\u5f62\u6210\u4e00\u7247\u5185\u5411\u57fa\u73af\u6811\u68ee\u6797\uff0c\u6bd5\u7adf\u9898\u76ee\u4e2d\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u6307\u5411\u77e9\u5f62\u5916\u7684\u533a\u57df\uff08\u867d\u7136\u6837\u4f8b\u4e8c\u4f3c\u4e4e\u6253\u7834\u4e86\u8fd9\u4e2a\u9650\u5236\u4f46\u65e0\u4f24\u5927\u96c5\uff09\u3002\u800c\u9898\u76ee\u4e2d Hansel \u83b7\u80dc\u7684\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n\n- \u4ece\u7b2c\u4e00\u5217\u67d0\u4e2a\u70b9\u5230\u6700\u540e\u4e00\u5217\u67d0\u4e2a\u70b9\u7684\u8def\u4e0a\u6070\u597d\u6709\u4e00\u4e2a\u5f69\u8272\u65b9\u5757\u3002\n- \u7b2c\u4e00\u5217\u67d0\u4e2a\u70b9\u6240\u5728\u7684\u57fa\u73af\u6811\u4e0a\u538b\u6839\u6ca1\u6709\u6700\u540e\u4e00\u5217\u7684\u7ed3\u70b9\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5927\u53ef\u4ee5\u4e0d\u7ba1\u5b83\uff0c\u56e0\u4e3a\u7ed9\u8fd9\u4e9b\u8282\u70b9\u67d3\u591a\u5c11\u8272\u90fd\u662f\u5408\u6cd5\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u57fa\u73af\u6811\u4e0a\u8def\u5f84\u662f\u4ee4\u4eba\u96be\u53d7\u7684\u3002\u4f46\u4f17\u6240\u5468\u77e5\uff0c\u6811\u52a0\u8fb9\u7b49\u4e8e\u57fa\u73af\u6811\uff0c\u6362\u53e5\u8bdd\u8bf4\u57fa\u73af\u6811\u51cf\u8fb9\u7b49\u4e8e\u6811\u3002\u800c\u6839\u636e\u9898\u76ee\u4e2d\u7684\u8bbe\u5b9a\uff0c\u673a\u5668\u4eba\u5230\u6700\u540e\u4e00\u884c\u4e4b\u540e\u5c31\u4e0d\u4f1a\u518d\u79fb\u52a8\u4e86\uff08\u6240\u4ee5\u7ed9\u6700\u540e\u4e00\u884c\u7684\u7bad\u5934\u5e72\u561b\u5440\u5bf9\u5427\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u6761\u8fb9\u65ad\u6389\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u4e00\u68f5\u4ee5\u6700\u540e\u4e00\u5217\u7ed3\u70b9\u4e3a\u6839\u7684\u6811\u3002\n\n\u8fd9\u6837\u5904\u7406\u5b8c\u4e86\u4e4b\u540e\u5462\uff0c\u6839\u636e\u9898\u610f\u6811\u4e0a\u6709\u90a3\u4e48\u4e00\u4e9b\u7279\u6b8a\u7684\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u7b2c\u4e00\u5217\u7684\u7ed3\u70b9\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u7ed9\u6811\u4e0a\u7684\u67d0\u4e9b\u7ed3\u70b9\u67d3\u8272\uff08\u6811\u6839\u662f\u4e0d\u80fd\u67d3\u8272\u54d2\uff09\uff0c\u7136\u540e\u4f7f\u5f97\u6bcf\u4e2a\u7279\u6b8a\u8282\u70b9\u5230\u6811\u6839\u7684\u8def\u5f84\u4e0a\u521a\u597d\u6709\u4e00\u4e2a\u67d3\u8272\u7ed3\u70b9\u3002\u7136\u540e\u53d1\u73b0\u8003\u8651\u6bcf\u4e2a\u7279\u6b8a\u8282\u70b9\u80fd\u88ab\u54ea\u4e9b\u70b9\u7ba1\u8f96\u5230\u662f\u590d\u6742\u7684\uff0c\u800c\u8003\u8651\u6bcf\u4e2a\u70b9\u80fd\u5f71\u54cd\u54ea\u4e9b\u7279\u6b8a\u70b9\u662f\u7b80\u5355\u7684\uff0c\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6bcf\u4e2a\u70b9\u80fd\u7ba1\u8f96\u4e00\u4e9b\u70b9\uff0c\u8981\u6c42\u9009\u51fa\u4e00\u4e9b\u70b9\u4f7f\u5f97\u6bcf\u4e2a\u7279\u6b8a\u70b9\u6070\u597d\u88ab\u7ba1\u8f96\u4e00\u6b21\u3002\n\n\u8003\u8bd5\u5b8c\u779f\u4e86\u4e00\u773c\u5b98\u65b9\u9898\u89e3\uff0c\u8bf4\u53ef\u4ee5\u7528 bitmasks \uff08\u4f4d\u63a9\u7801\uff09\u6765\u52a0\u901f\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4f46\u660e\u663e\u6211\u90a3\u4e48\u5f31\u662f\u4e0d\u4f1a\u8fd9\u79cd\u9ad8\u7ea7\u4e1c\u897f\u7684\u3002\u5982\u679c\u505a\u8fc7\u540c\u4e3a COCI \u7684 [Burza](https://www.luogu.com.cn/problem/P6499) \u7684\u8bdd\u4f1a\u53d1\u73b0\u4e8c\u8005\u6700\u540e\u7684\u5904\u7406\u65b9\u6cd5\u60ca\u4eba\u7684\u76f8\u4f3c\uff08\u8bf4\u4e0d\u5b9a\u662f\u540c\u4e00\u4e2a\u51fa\u9898\u4eba\u51fa\u7684\u5462\uff09\u3002\u5982\u679c\u7528\u6df1\u641c\u5e8f\u6765\u7ed9\u6bcf\u4e2a\u7b2c\u4e00\u5217\u7684\u7ed3\u70b9\u7f16\u53f7\uff0c\u90a3\u4e48\u6bcf\u4e2a\u8282\u70b9\u80fd\u7ba1\u8f96\u7684\u7279\u6b8a\u70b9\u7f16\u53f7\u5fc5\u7136\u662f\u8fde\u7eed\u7684\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\u90a3\u9053\u9898\u4e00\u6837\u7684\u65b9\u6cd5\u8fdb\u884c DP \u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u770b\u90a3\u9053\u9898\u7684\u76f8\u5173\u535a\u5ba2\uff0c\u771f\u7684\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u3002\n\n\u8f93\u51fa\u7b54\u6848\u65b9\u9762\u76f4\u63a5\u5728 DP \u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e00\u4e0b\u662f\u54ea\u4e2a\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u7684\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd8\u6709\u4e00\u70b9\u5c31\u662f\u6709\u53ef\u80fd\u4ed6\u7684\u989c\u6599\u6bd4\u8f83\u591a\uff0c\u4e3a\u4e86\u5237\u6ee1\u90a3\u4e48\u591a\u4e2a\u70b9\u6211\u4eec\u53ef\u80fd\u9700\u8981\u53bb\u8f93\u51fa\u4e00\u4e9b\u65e0\u7528\u70b9\uff08\u5305\u62ec\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u5185\u6ca1\u6709\u7279\u6b8a\u70b9\u7684\u70b9\u548c\u6240\u5728\u57fa\u73af\u6811\u4e0d\u5305\u542b\u6700\u540e\u4e00\u5217\u70b9\u7684\u70b9\uff09\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5373\u53ef\u3002\n\n\u6700\u540e\u662f\u7531\u4e8e\u8fd9\u9053\u9898\u6bd4\u8f83\u9634\u9669\uff0c\u9650\u5236\u7684\u662f\u77e9\u9635\u4e2d\u7684\u7ed3\u70b9\u4e2a\u6570\u548c\u800c\u4e0d\u662f\u957f\u5bbd\uff0c\u4e0d\u80fd\u4f7f\u7528\u6709\u5e8f\u6570\u5bf9\u6765\u4ee3\u8868\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7a0d\u5fae\u9ebb\u70e6\u70b9\u4f46\u5176\u5b9e\u8fd8\u597d\uff0c\u53cd\u6b63\u7a7a\u95f4\u7ed9\u5f97\u8db3\uff08\u6bd4\u8d77\u4e4b\u524d COICI \u52a8\u4e0d\u52a8\u7528 32M \u7684\u7a7a\u95f4\u6253\u538b\u6211\u7b49\u849f\u84bb\u7684\u9898\u597d\u591a\u4e86\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define feyn\n#define p(i,j) ((i-1)*n+j)\nconst int N=1000010;\nusing namespace std;\ninline void read(int &wh){\n    wh=0;int f=1;char w=getchar();\n    while(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n    while(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\n    wh*=f;return;\n}\ninline int get(){\n\tchar w=getchar();\n\twhile(w<'A'||w>'Z')w=getchar();\n\tif(w=='U')return 0;\n\tif(w=='R')return 1;\n\tif(w=='D')return 2;\n\tif(w=='L')return 3;\n}\ninline int min(int s1,int s2){\n\treturn s1<s2?s1:s2; \n}\ninline int max(int s1,int s2){\n\treturn s1<s2?s2:s1;\n}\n\nstruct edge{\n\tint t,next;\n}e[N];\nint head[N],esum;\ninline void add(int fr,int to){\n\te[++esum]=(edge){to,head[fr]};head[fr]=esum;\n}\n\nint m,n,able;\nbool ll[N],rr[N],vis[N];\ninline void print(int wh){\n\tprintf(\"%d %d\\n\",(wh-1)/n+1,(wh-1)%n+1);\n}\n\nstruct node{\n\tint id,r;\n};\nvector<int>useless;\nvector<node>pl[N];\nint al[N],ar[N],cnt;//\u6bcf\u4e2a\u70b9\u7ba1\u8f96\u7684\u7279\u6b8a\u70b9\u7684\u8303\u56f4\uff0ccnt\u662f\u6df1\u641c\u5e8f \nvoid dfs(int wh){\n\tal[wh]=1e9;if(ll[wh])al[wh]=ar[wh]=++cnt;\n\tfor(int i=head[wh],th;i;i=e[i].next){\n\t\tif(rr[th=e[i].t])continue;dfs(th);\n\t\tif(ar[th])al[wh]=min(al[wh],al[th]),ar[wh]=max(ar[wh],ar[th]);\n\t}\n\tif(ar[wh]==0)return;vis[wh]=true;\n\tpl[al[wh]].push_back((node){wh,ar[wh]});\n}\n\nbool f[N][60];//f[i][j]\u524di\u4e2a\u70b9\u7528\u4e86j\u6b21\u67d3\u8272\u673a\u4f1a\u662f\u5426\u80fd\u5168\u90e8\u67d3\u5b8c \nint come[N][60];//\u8bb0\u5f55\u6bcf\u4e2a\u72b6\u6001\u662f\u4ece\u54ea\u91cc\u8f6c\u79fb\u8fc7\u6765\u7684 \n\nsigned main(){\n\t\n\t#ifdef feyn\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\t\n\tread(m);read(n);read(able);\n\tfor(int i=1;i<=m;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(j==1)ll[p(i,j)]=true;\n\t\t\tif(j==n)rr[p(i,j)]=true;\n\t\t\tswitch(get()){\n\t\t\t\tcase 0:add(p(i-1,j),p(i,j));break;\n\t\t\t\tcase 1:add(p(i,j+1),p(i,j));break;\n\t\t\t\tcase 2:add(p(i+1,j),p(i,j));break;\n\t\t\t\tcase 3:add(p(i,j-1),p(i,j));break;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)dfs(p(i,n));\n\tint num_=0;\n\tfor(int i=1;i<=m*n;i++){\n\t\tif((i-1)%n+1==n)continue;\n\t\tif(vis[i]==false)num_++,useless.push_back(i);\n\t}\n\t\n\tf[0][0]=true;\n\tfor(int i=0;i<cnt;i++){\n\t\tfor(vector<node>::iterator it=pl[i+1].begin();it!=pl[i+1].end();it++){\n\t\t\tint _r=(*it).r,_wh=(*it).id;\n\t\t\tfor(int k=0;k<able;k++){\n\t\t\t\tif(f[i][k]==false)continue;\n\t\t\t\tif(f[_r][k+1]==false){\n\t\t\t\t\tf[_r][k+1]=true;\n\t\t\t\t\tcome[_r][k+1]=_wh;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=able;i++){\n\t\tif(f[cnt][i]==false)continue;\n\t\tif(able-i>num_)continue;\n\t\table-=i;int x=cnt;\n\t\tfor(int j=i;j;j--){\n\t\t\tprint(come[x][j]);\n\t\t\tx=al[come[x][j]]-1;\n\t\t}\n\t\tfor(int j=0;j<able;j++)print(useless[j]);\n\t\treturn 0;\n\t}\n\tprintf(\"-1\");\n\t\n\treturn 0;\n}\n```",
        "postTime": 1659153954,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "P8018"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9\u7684\u56fe\u6784\u6210\u5185\u5411\u57fa\u73af\u68ee\u6797\u3002\n\n\u5b9a\u4e49 $1$ \u5217\u7684\u70b9\u4e3a\u201c\u8d77\u70b9\u201d\uff0c$m$ \u5217\u7684\u70b9\u4e3a\u201c\u7ec8\u70b9\u201d\u3002\n\n\u7531\u4e8e\u8d70\u5230\u7ec8\u70b9\u5c31\u4e0d\u7528\u7ed5\u73af\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5148\u628a\u7ec8\u70b9\u7684\u51fa\u8fb9\u65ad\u5f00\u3002\u8fd9\u6837\u5c31\u6784\u6210\u4e86 \u4e00\u4e9b\u4e0d\u542b\u7ec8\u70b9\u7684\u5185\u5411\u57fa\u73af\u6811 + \u4e00\u4e9b\u4ee5\u7ec8\u70b9\u4e3a\u6839\u7684\u5185\u5411\u6811\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u57fa\u73af\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u6216\u5b50\u6811\u5185\u6ca1\u6709\u8d77\u70b9\u7684\u8282\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u70b9\u67d3\u4e0d\u67d3\u8272\u90fd\u4e00\u6837\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5e9f\u7269\u70b9\u201d\u3002**\u6ce8\u610f\u7ec8\u70b9\u4e0d\u80fd\u6210\u4e3a\u5e9f\u7269\u70b9**\uff08\u56e0\u4e3a\u4e0d\u80fd\u67d3\u8272\uff09\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u8d77\u70b9\uff0c\u6211\u4eec\u5229\u7528\u5176 dfs \u5e8f\u4e3a\u5176\u7f16\u53f7\uff0c\u8bb0\u4f5c $dfn_i$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a\u975e\u5e9f\u7269\u70b9\u80fd\u591f\u201c\u5835\u4f4f\u201d\u7684\u8d77\u70b9\u7684 $dfn$ \u662f\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u3002\n\n\u4e8e\u662f\u6309\u7167 $dfn$ \u8fdb\u884c DP\uff0c$dp_{i,j}$ \u8868\u793a\u80fd\u5426\u4f7f\u7528 $j$ \u6b21\u67d3\u8272\uff0c\u5835\u4f4f $dfn_x\\leq i$ \u7684\u6240\u6709\u8282\u70b9\u3002\u5373\u53ef $O(nk)$ \u89e3\u51b3\u3002\n\n\u6ce8\u610f\u7b54\u6848\u7684 $dp$ \u4e0d\u4e00\u5b9a\u8981\u67d3\u8272 $k$ \u6b21\uff0c\u56e0\u4e3a\u5982\u679c\u591f\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528\u5e9f\u7269\u8282\u70b9\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\n#define N 1000010\nint n, m, K;\nint h[N], e[N], ne[N], idx;\nint nx[N];\nvoid add_edge(int x, int y)\n{\n\tne[++idx] = h[x];\n\th[x] = idx;\n\te[idx] = y;\n}\n#define id(x, y) ((x - 1) * m + y)\nchar str[N];\nbool vis[N];\nint feiwu[N], fwidx;\nint leaf[N], leafidx;\nbool is_begin[N], is_end[N];\nint in[N], out[N];\nint S, T;\n\nbool dfs1(int k)\n{\n\tvis[k] = 1;\n\tint res = 0;\n\tfor(int i = h[k]; ~i; i = ne[i])\n\t{\n\t\tint nx = e[i];\n\t\tif(vis[nx])\n\t\t\tS = k, T = nx, res = 1;\n\t\telse\n\t\t\tres |= dfs1(nx);\n\t}\n\treturn res;\n}\n\nvoid dfs2(int k)\n{\n\tif(!is_end[k])\n\t\tfeiwu[++fwidx] = k;\n\tfor(int i = h[k]; ~i; i = ne[i])\n\t{\n\t\tint nx = e[i];\n\t\tif(k == S && T == nx)\n\t\t\tcontinue;\n\t\tdfs2(nx);\n\t}\n}\n\nstd::vector <std::pair <int, int> > v[N];\n\nvoid dfs3(int k)\n{\n\tin[k] = 0x3f3f3f3f;\n\tout[k] = 0;\n\tif(is_begin[k])\n\t\tleaf[++leafidx] = k, in[k] = out[k] = leafidx;\n\tfor(int i = h[k]; ~i; i = ne[i])\n\t{\n\t\tint nx = e[i];\n\t\tdfs3(nx);\n\t\tin[k] = std::min(in[k], in[nx]);\n\t\tout[k] = std::max(out[k], out[nx]);\n\t}\n\tif(is_end[k])\n\t\treturn;\n\tif(in[k] != 0x3f3f3f3f)\n\t\tv[in[k]].push_back(std::make_pair(out[k], k));\n\telse\n\t\tfeiwu[++fwidx] = k;\n}\n\nbool hh[N];\n\nvoid solve(int k)\n{\n\tint p = k;\n\thh[p] = 1;\n\twhile(nx[p] && !hh[nx[p]])\n\t{\n\t\thh[nx[p]] = 1;\n\t\tp = nx[p];\n\t}\n\tS = 0, T = 0;\n\tk = p;\n\tif(dfs1(p))\n\t\tdfs2(p);\n\telse\n\t\tdfs3(p);\n}\n\nvoid print(int x)\n{\n\tprintf(\"%d %d\\n\", (x + m - 1) / m, (x - 1) % m + 1);\n}\n\nint dp[N][55], last[N][55], pid[N][55];\n\nint main()\n{\n\tmemset(h, -1, sizeof(h));\n\tscanf(\"%d%d%d\", &n, &m, &K);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%s\", str + 1);\n\t\tfor(int j = 1; j < m; j++)\n\t\t{\n\t\t\tif(str[j] == 'L')\n\t\t\t\tnx[id(i, j)] = id(i, j - 1);\n\t\t\tif(str[j] == 'R')\n\t\t\t\tnx[id(i, j)] = id(i, j + 1);\n\t\t\tif(str[j] == 'U')\n\t\t\t\tnx[id(i, j)] = id(i - 1, j);\n\t\t\tif(str[j] == 'D')\n\t\t\t\tnx[id(i, j)] = id(i + 1, j);\n\t\t\tadd_edge(nx[id(i, j)], id(i, j));\n\t\t}\n\t\tis_end[id(i, m)] = is_begin[id(i, 1)] = 1;\n\t}\n\tfor(int i = 1; i <= n * m; i++)\n\t{\n\t\tif(vis[i])\n\t\t\tcontinue;\n\t\tsolve(i);\n\t}\n\tdp[0][0] = 1;\n\tfor(int l = 1; l <= leafidx; l++)\n\t{\n\t\tint sz = v[l].size();\n\t\tfor(int _ = 0; _ < sz; _++)\n\t\t{\n\t\t\tint r = v[l][_].first, id = v[l][_].second;\n\t\t\tfor(int i = 0; i < K; i++)\n\t\t\t{\n\t\t\t\tif(!dp[l - 1][i]) continue;\n\t\t\t\tdp[r][i + 1] |= dp[l - 1][i];\n\t\t\t\tpid[r][i + 1] = id;\n\t\t\t\tlast[r][i + 1] = l - 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i <= K; i++)\n\t{\n\t\tif(!dp[leafidx][i])\n\t\t\tcontinue;\n\t\tif(i + fwidx < K)\n\t\t\tcontinue;\n\t\tint p = leafidx, t = i;\n\t\twhile(p)\n\t\t{\n\t\t\tprint(pid[p][t]);\n\t\t\tp = last[p][t];\n\t\t\tt--;\n\t\t}\n\t\tfor(int j = i + 1; j <= K; j++)\n\t\t\tprint(feiwu[j - i]);\n\t\treturn 0;\n\t}\n\tprintf(\"-1\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1682768461,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "P8018"
    },
    {
        "content": "\u9996\u5148\u6ce8\u610f\u5230\uff0c\u53ea\u6709\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u5217\u7684\u8d77\u59cb\u70b9\u624d\u6709\u610f\u4e49\u3002\n\n\u7136\u540e\u548c[P1514 [NOIP2010 \u63d0\u9ad8\u7ec4] \u5f15\u6c34\u5165\u57ce](https://www.luogu.com.cn/problem/P1514)\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a\u300c\u6700\u540e\u4e00\u5217\u7684\u67d0\u4e2a\u70b9\u300d\u5982\u679c\u80fd\u7531\u4e00\u4e9b\u8d77\u59cb\u70b9\u5230\u8fbe\uff0c\u90a3\u8fd9\u4e9b\u8d77\u59cb\u70b9\u5fc5\u7136\u662f**\u8fde\u7eed\u7684\u533a\u95f4**\u3002\n\n\u8003\u8651\u5efa\u53cd\u56fe\u4e4b\u540e\u4ece\u300c\u6700\u540e\u4e00\u5217\u300d\u7684\u70b9\u5f00\u59cb DFS\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u300c\u7b2c\u4e00\u5217\u7684\u70b9\u300d\u7684\u533a\u95f4\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4f7f\u7528\u8fd9\u4e9b\u533a\u95f4\u5b8c\u5168\u8986\u76d6\u7b2c\u4e00\u5217\u7684\u8d77\u59cb\u70b9\uff08\u90a3\u4e9b\u4e0d\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u5217\u7684\u8d77\u59cb\u70b9\u9664\u5916\uff09\uff0cDP\u89e3\u51b3\u3002\n\n\u5c06\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u6216\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c$dp(i,j)$ \u8868\u793a\u7528\u6070\u597d $i$ \u4e2a\u533a\u95f4\uff0c\u8986\u76d6 $\\left [ 1,j\\right ] $ \u7684\u70b9\uff0c\u662f\u5426\u53ef\u884c\u3002\n\n\u6bcf\u4e2a\u533a\u95f4\u662f $O(k)$ \u7684\u8f6c\u79fb\uff0c\u5177\u4f53\u4e0d\u5199\u4e86\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5f97\u5230\u65b9\u6848\uff0c\u8003\u8651\u5c06\u300c\u662f\u5426\u53ef\u884c\u300d\u66ff\u6362\u4e3a\u300c\u6700\u53f3\u8fb9\u533a\u95f4\u7684\u7f16\u53f7\u300d\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff1a\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u5728 DFS \u4e4b\u540e\u6ca1\u6709\u5f97\u5230\u533a\u95f4\uff0c\u4ed6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n    1. \u8fd9\u4e2a\u70b9\u5728\u539f\u56fe\u4e0d\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u5217\u7684\u70b9\uff08\u53ef\u80fd\u9677\u5165\u4e86\u73af\uff09\uff0c\u6ca1\u6709\u88ab DFS \u8fc7\u3002\n    1. \u8fd9\u4e2a\u70b9\u5728\u539f\u56fe\u4e2d\uff0c\u6ca1\u6709\u8d77\u59cb\u70b9\u53ef\u4ee5\u5230\u8fbe\uff0c\u88ab DFS \u8fc7\u4e86\u4f46\u6ca1\u6709\u533a\u95f4\u3002\n\n\u8fd9\u4e24\u79cd\u4f4d\u7f6e\uff0c\u90fd\u53ef\u4ee5\u6ca1\u6709\u987e\u8651\u7684\u6d82\u8272\uff0c\u5f53\u6211\u4eec DP \u540e\u53d1\u73b0\u51d1\u4e0d\u591f $k$ \u4e2a\u6765\u8986\u76d6\u7b2c\u4e00\u5217\u7684\u65f6\u5019\uff0c\u7528\u4ed6\u4eec\u51d1\u6210 $k$ \u4e2a\u3002\n\n\u8fd8\u6709\uff0c\u5982\u679c\u8981\u5220\u53bb\u90a3\u4e9b\u6ca1\u6709\u610f\u4e49\u7684\u8d77\u59cb\u70b9\uff0c\u53ef\u4ee5\u5728 DFS \u8fc7\u7a0b\u4e2d\u5c06\u7b2c\u4e00\u5217\u7684\u8282\u70b9\u6309\u7167\u300c\u641c\u7d22\u5230\u7684\u65f6\u95f4\u987a\u5e8f\u300d\u91cd\u65b0\u6807\u53f7\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u533a\u95f4\u8fde\u7eed\u4e14\u4e0d\u5305\u542b\u6ca1\u6709\u610f\u4e49\u7684\u70b9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define pii pair<int,int>\nusing namespace std;\nconst int N=1e6+10;\nint n,m,k,tot,dp[N][52],cnt;\nvector<int>edge[N];\nstruct node{int l,r,num;}s[N];\nvoid print(int x){cout<<(x-1)/m+1<<' '<<(x-1)%m+1<<'\\n';}\nvoid dfs(int x){\n    if(x%m==1){s[x]={++tot,tot,x};}\n    for(int to:edge[x]) \n        dfs(to),\n        s[x].l=min(s[x].l,s[to].l),\n        s[x].r=max(s[x].r,s[to].r);\n}\nint main(){\n    cin>>n>>m>>k;\n    for(int i=1;i<=n*m;i++){\n        char c;cin>>c;\n        s[i]={INT_MAX,-1,i};\n        if(i%m==0) continue;\n        if(c=='U') edge[i-m].push_back(i);\n        if(c=='D') edge[i+m].push_back(i);\n        if(c=='R') edge[i+1].push_back(i);\n        if(c=='L') edge[i-1].push_back(i);\n    }\n    for(int i=1;i<=n;i++) for(int to:edge[i*m]) dfs(to);\n    dp[0][0]=1;\n    sort(s+1,s+n*m+1,[](node x,node y){return x.r<y.r;});\n    for(int i=1;i<=n*m&&cnt<k;i++) if(s[i].r==-1&&s[i].num%m) dp[0][++cnt]=i;\n    for(int i=1;i<=n*m;i++){\n        if(s[i].r==-1) continue;\n        for(int j=0;j<k;j++)\n            if(dp[s[i].l-1][j]) dp[s[i].r][j+1]=i;\n    }\n    \n    if(!dp[tot][k]) cout<<-1<<'\\n';\n    else{\n        int nw=tot;\n        for(int i=k;i>=1;i--){\n            print(s[dp[nw][i]].num);\n            if(s[dp[nw][i]].r==-1) nw=0;\n            else nw=s[dp[nw][i]].l-1;\n        }\n    }\n    return 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1671544134,
        "uid": 238310,
        "name": "2019gzy",
        "ccfLevel": 3,
        "title": "P8018"
    }
]