[
    {
        "content": "~~\u795e\u4ed9dp\u9898\uff0c\u8003\u573a\u72060\u53ea\u6709\u6211\u4e86~~\n\n# \u89e3\u6cd5\n\nmyy\u51fa\u7684\uff0c\u642c\u4e00\u4e0b**\u4ed6\u7684\u539f\u8bdd\u5982\u4e0b**\n\n30\u5206\u7684DP\u5c31\u662fdp[i][j]\u8868\u793ai\u5230j\u662f\u5426\u5b58\u5728\u4e00\u6761\u5408\u6cd5\u7684\u8def\u5f84\uff0c\u8f6c\u79fb\u5c31\u662f\u679a\u4e3ei\u7684\u8fb9\u548cj\u7684\u8fb9\u3002\u603b\u590d\u6742\u5ea6\u662f$O(m^2)$\u3002\n\n\u8003\u8651\u51cf\u5c11\u8fb9\u6570\u3002\u6211\u4eec\u628a\u4e00\u79cd\u6807\u53f7\u5355\u72ec\u62ff\u51fa\u6765\uff0c\u53ea\u8003\u8651\u8fde\u63a5\u540c\u4e00\u79cd\u6807\u53f7\u7684\u4e24\u4e2a\u70b9\u7684\u8fb9\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u5b83\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u4ec5\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u7b54\u6848\u4e5f\u4e0d\u4f1a\u53d8\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u8fde\u901a\u5757\u4e4b\u5185\u7684\u8f6c\u79fb\u4ecd\u7136\u53ef\u4ee5\u5b9e\u73b0\uff08\u53ea\u8981\u53e6\u4e00\u8fb9\u5728\u4e24\u4e2a\u70b9\u5185\u6765\u56de\u8d70\u5373\u53ef\uff09\u3002\u5982\u679c\u5b83\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u81ea\u73af\u3002\n\n\u6211\u4eec\u8003\u8651\u8fde\u63a5\u4e0d\u540c\u6807\u53f7\u7684\u8fb9\uff0c\u53ea\u628a\u8fd9\u4e9b\u8fb9\u62ff\u51fa\u6765\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f62\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c \u6839\u636e\u540c\u6837\u7684\u9053\u7406\u6211\u4eec\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u5373\u53ef\uff08\u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u8fde\u901a\u5757\u4e00\u5b9a\u90fd\u662f\u4e8c\u5206\u56fe\uff09\u3002\n\n\u8fd9\u6837\u603b\u8fb9\u6570\u4e0d\u8d85\u8fc7$2n-2$\uff0c\u752830\u5206DP\u7684\u601d\u8def\u53ef\u4ee5\u505a\u5230$O(n^2)$\u5e76\u4e14\u901a\u8fc7\u672c\u9898\u3002\n\n----\n\n\u6240\u4ee5\u4e3a\u4ec0\u4e48\u4e0d\u662f\u4e8c\u5206\u56fe\u7684\u65f6\u5019\u53ef\u4ee5\u52a0\u81ea\u73af\u5462\uff1f\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5982\u679c\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5c31\u8bf4\u660e\u56fe\u4e2d\u4e00\u5b9a\u6709\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af\u3002\u90a3\u4e48\u5728\u8fd9\u8fb9\u53ef\u4ee5\u4e00\u76f4\u6765\u56de\u8f6c\u5708\uff0c\u53e6\u4e00\u8fb9\u5982\u679c\u4e5f\u6709\u5947\u6570\u73af\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u5339\u914d\uff0c\u5982\u679c\u53e6\u4e00\u8fb9\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u8fb9\u8f6c\u4e0a\u51e0\u5708\uff0c\u8ba9\u957f\u5ea6\u53d8\u6210\u5076\u6570\uff0c\u4f9d\u7136\u53ef\u4ee5\u8f6c\u79fbQAQ\n\n\u5982\u679c\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u624b\u9020\u6570\u636e\u7684QAQ\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\n\n\u4e8e\u662f\u5c31\u53d8\u6210\u4e86$kruskal$\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\n\n#define rg register\n#define il inline\n#define MX (5000 + 65)\n#define M_MX (500000 + 5)\n\nint cs ,cd;\nstruct ip{\n\tint u ,v;\n}same[M_MX] ,diff[M_MX];\nint color[MX];\n\nnamespace FS{\t//forward_star \u524d\u5411\u661f\n\tint head[MX] ,tot;\n\tstruct edge{\n\t\tint node ,next;\n\t}h[M_MX << 1];\n\til void addedge(int u ,int v){\n\t\th[++tot].next = head[u];\n\t\thead[u] = tot;\n\t\th[tot].node = v;\n\t}\n}\nint n ,m ,q;\n\nint fa[MX];\nvoid init(int upper){\n\tfor(rg int i = 1 ; i <= upper ; ++i)\tfa[i] = i;\n\tusing namespace FS;\n\tmemset(FS::head ,0 ,sizeof(head));\n\tmemset(h ,0 ,sizeof(h));\n\ttot = 0;\n}\nint find(int x){return fa[x] == x ? x : fa[x] = find(fa[x]);}\nvoid link(int x ,int y){fa[find(x)] = find(y);}\n\nint vis[MX][MX] ,DP[MX][MX];\nnamespace MST{\t//Minimum Spanning Tree \u6700\u5c0f\u751f\u6210\u6811\n\tint head[MX] ,tot;\n\tFS::edge h[M_MX << 1];\n\tvoid addedge(int u ,int v){\n\t\th[++tot].next = head[u];\n\t\thead[u] = tot;\n\t\th[tot].node = v;\n\t}int Tag[MX];\n\tbool check2fen(int x ,int tag){\n\t\tif(Tag[x])\treturn Tag[x] == tag;\n\t\tTag[x] = tag;\n\t\tfor(rg int i = FS::head[x] ; i ; i = FS::h[i].next){\n\t\t\tint d = FS::h[i].node;\n\t\t\tif(!check2fen(d ,tag == 1 ? 2 : 1))\treturn false;\n\t\t}return true;\n\t}\n\tvoid kruskal(int type){\n\t\tif(type == 1){\t//\u5355\u72ec\u62ff\u51fa\u8fde\u63a5\u540c\u79cd\u7f16\u53f7\u7684\n\t\t\tfor(rg int i = 1 ; i <= n ; ++i)\tTag[i] = false;\n\t\t\tinit(n);\n\t\t\tint cnt = 0;\n\t\t\tfor(rg int i = 1 ; i <= cs ; ++i){\n\t\t\t\tFS::addedge(same[i].u ,same[i].v);\n\t\t\t\tFS::addedge(same[i].v ,same[i].u);\n\t\t\t}\n\t\t\tfor(rg int i = 1 ; i <= cs ; ++i){\n\t\t\t\tif(find(same[i].u) != find(same[i].v)){\n\t\t\t\t\tLST::addedge(same[i].u ,same[i].v);\n\t\t\t\t\tLST::addedge(same[i].v ,same[i].u);\n\t\t\t\t\tlink(same[i].u ,same[i].v);\n\t\t\t\t\t++cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(rg int i = 1 ; i <= n ; ++i){\n\t\t\t\tif(!Tag[i]){\n\t\t\t\t\tif(!check2fen(i ,1))\tLST::addedge(i ,i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{//\u5355\u72ec\u62ff\u51fa\u8fde\u63a5\u4e0d\u540c\u79cd\u7f16\u53f7\u7684\n\t\t\tinit(n);\n\t\t\tfor(rg int i = 1 ; i <= n ; ++i)\tTag[i] = false;\n\t\t\tint cnt = 0;\n\t\t\tfor(rg int i = 1 ; i <= cd ; ++i){\n\t\t\t\tFS::addedge(diff[i].u ,diff[i].v);\n\t\t\t\tFS::addedge(diff[i].v ,diff[i].u);\n\t\t\t}\n\t\t\tfor(rg int i = 1 ; i <= cd ; ++i){\n\t\t\t\tif(find(diff[i].u) != find(diff[i].v)){\n\t\t\t\t\tLST::addedge(diff[i].u ,diff[i].v);\n\t\t\t\t\tLST::addedge(diff[i].v ,diff[i].u);\n\t\t\t\t\tlink(diff[i].u ,diff[i].v);\n\t\t\t\t\t++cnt;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(rg int i = 1 ; i <= n ; ++i){\n\t\t\t\tif(!Tag[i]){\n\t\t\t\t\tif(!check2fen(i ,1))\tLST::addedge(i ,i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}using namespace MST;\n\nvoid dp(){\t//\u5927\u529b\u8f6c\u79fb\uff0c\u56e0\u4e3a\u672c\u9898\u6709O2\uff0c\u53ef\u4ee5\u653e\u5fc3\u7528STL\n\tstd::queue<int> q1 ,q2;\n\tfor(rg int i = 1 ; i <= n ; ++i){\n\t\tvis[i][i] = true;\n\t\tDP[i][i] = true;\n\t\tq1.push(i) ,q2.push(i);\n\t\tfor(rg int j = head[i] ,d ; j ; j = h[j].next){\n\t\t\td = h[j].node;\n\t\t\tvis[i][d] = vis[d][i] = true;\n\t\t\tif(color[i] != color[d])\tcontinue;\n\t\t\tDP[i][d] = DP[d][i] = true;\n\t\t\tq1.push(i) ,q2.push(d);\n\t\t}\n\t}\n\twhile(!q1.empty()){\n\t\tint x = q1.front() ,y = q2.front();\n\t\tq1.pop() ,q2.pop();\n\t\tfor(rg int i = head[x] ; i ; i = h[i].next){\n\t\t\tfor(rg int j = head[y] ; j ; j = h[j].next){\n\t\t\t\tif(!vis[h[i].node][h[j].node] && color[h[i].node] == color[h[j].node]){\n\t\t\t\t\tDP[h[i].node][h[j].node] = DP[h[j].node][h[i].node] = true;\n\t\t\t\t\tq1.push(h[i].node) ,q2.push(h[j].node);\n\t\t\t\t}vis[h[i].node][h[j].node] = vis[h[j].node][h[i].node] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\t\n\tscanf(\"%d%d%d\" ,&n ,&m ,&q);\n\tfor(rg int i = 1 ; i <= n ; ++i){\n\t\tscanf(\"%1d\" ,color + i);\n\t}\n\tfor(rg int i = 1 ,u ,v ; i <= m ; ++i){\n\t\tscanf(\"%d%d\" ,&u ,&v);\n\t\tFS::addedge(u ,v);\n\t\tFS::addedge(v ,u);\n\t\tif(color[u] ^ color[v])\tdiff[++cd] = (ip){u ,v};\n\t\telse same[++cs] = (ip){u ,v};\n\t}\n\tusing namespace MST;\n\tkruskal(1);\n\tkruskal(2);\n\t//outedge();\n\tdp();\n\tfor(rg int i = 1 ,u ,v ; i <= q ; ++i){\n\t\tscanf(\"%d%d\" ,&u ,&v);\n\t\tif(DP[u][v] || DP[v][u])\tputs(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1554717020,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "HNOI 2019 D2T1"
    },
    {
        "content": "\u795e\u4ed9\u9898\uff0c\u4e4b\u524d\u5199\u8fc7\u4e00\u7bc7\u9898\u89e3\uff0c\u53ef\u80fd\u8f83\u4e3a\u96be\u61c2\uff0c\u6700\u8fd1\u8ba2\u6b63\u4e00\u4e0b\n\n\u9996\u5148\u6ce8\u610f\u5230\u4e00\u4e2a\u56de\u6587\u4e32\u5c06\u5176\u9996\u5c3e\u53bb\u9664\u4ecd\u4e3a\u56de\u6587\u4e32\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u7c7b\u4f3c\u4e8e spfa \u4ece\u957f\u5ea6\u4e3a $2/1$ \u7684\u56de\u6587\u4e32\u5f00\u59cb\u904d\u5386\uff0c\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u662f\u5426\u56de\u6587\u53ef\u8fbe\uff0c\u8fd9\u6837\u6bcf\u4e00\u5bf9\u70b9\u90fd\u4f1a\u62d3\u5c55\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u4e3a $deg\\times deg$\uff0c\u5373 $\\mathcal O((\\sum deg)^2)=\\mathcal O(m^2)$\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u4e00\u4e2a\u56de\u6587\u4e32\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u82e5\u5e72\u6bb5 $01$ \u548c $11$ \u548c $00$ \u7684\u7ec4\u5408\uff0c\u800c\u4e14\u7531\u4e8e\u5141\u8bb8\u8d70\u975e\u7b80\u5355\u8def\u5f84\uff0c\u90a3\u4e48\u91cd\u590d\u7ed5\u540c\u4e00\u8fb9\u8d70\u53ef\u4ee5\u6539\u53d8\u4efb\u610f\u4e00\u6bb5\u7684\u5947\u5076\u6027\uff0c\u4e8e\u662f\u7b54\u6848\u53ea\u548c\u6bcf\u4e00\u6bb5\u7684\u5947\u5076\u6027\u76f8\u5173\u3002\n\n\u8003\u8651\u4ec0\u4e48\u56fe\u4e2d\u67d0\u4e24\u4e2a\u70b9\u7684\u5947\u5076\u6027\u6052\u5b9a $\\to$ \u4e8c\u5206\u56fe\uff0c\u4e8e\u662f\u5c06 $01$ \u8fb9\u5355\u72ec\u8003\u8651\uff0c$1\\to 1$ \u8fb9\u5355\u72ec\u8003\u8651\uff0c$0\\to 0$ \u8fb9\u5355\u72ec\u8003\u8651\uff0c\u5982\u679c\u4e3a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4fdd\u7559\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\u5373\u53ef\u4fdd\u8bc1\u7b54\u6848\u76f8\u540c\uff08\u6ce8\u610f\u8fd9\u4ecd\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u540c\u65f6\u7ed5\u91cd\u8fb9\u4efb\u4f55\u5408\u6cd5\uff09\u82e5\u4e3a\u975e\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u81ea\u73af\u5373\u53ef\uff08\u53ef\u4ee5\u901a\u8fc7\u7ed5\u81ea\u73af\u6765\u6539\u53d8\u67d0\u4e24\u4e2a\u70b9\u5947\u5076\u6027\uff09\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5c06\u8fb9\u6570\u964d\u4e3a $n$ \u7684\u7ea7\u522b\uff0c\u7136\u540e\u505a\u4e0a\u9762\u90a3\u4e2a\u66b4\u529b\uff0c\u590d\u6742\u5ea6\u5373\u4e3a $\\mathcal O(n^2)$\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read() {\n    char cc = getchar(); int cn = 0;\n    while(cc < '0' || cc > '9') cc = getchar();\n    while(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n    return cn;\n}\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i ) \n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next ) \nconst int M = 1e6 + 5 ; \nconst int N = 5000 + 5;\nstruct E {\n    int to, next ;  \n} e[M * 2];\nstruct S {\n    int from, to ; \n} s[M * 2];\nint n, m, Q, head[N], cnt, w[N], dis[N][N], fa[N][2], col[N], sd[N], book[N];\nchar ss[N] ; \nqueue< S> q ;  \nvoid add( int x, int y ) {\n    e[++ cnt] = (E){ y, head[x] }, head[x] = cnt ; \n    e[++ cnt] = (E){ x, head[y] }, head[y] = cnt ; \n}\nint abc( int x ) { //\u7edd\u5bf9\u503c \n    return ( x > 0 ) ? x : -x ; \n}\nint find( int x, int node ) {\n    if( fa[x][node] == x ) return x ; \n    return fa[x][node] = find(fa[x][node], node) ; \n}\nvoid dfs( int x, int c ) {\n    col[x] = c ; \n    Next( i, x ) {\n        int v = e[i].to ; \n        if( !col[v] ) dfs( v, -c ) ;\n        else if( col[v] == col[x] ) sd[abc(c)] = 1 ; \n    }\n}\nvoid init() {\n    rep( i, 1, n ) if( !col[i] ) dfs( i, i ) ;  //\u4e8c\u5206\u56fe\u67d3\u8272 \n    \n    memset( head, 0, sizeof(head) ), cnt = 0 ;\n    rep( i, 1, m ) {\n        int Fr = s[i].from, To = s[i].to ; \n        if( w[Fr] != w[To] ) {\n            int u = find( Fr, 1 ), v = find( To, 1 ) ;\n            if( u == v ) continue ;\n            add( Fr, To ), fa[u][1] = v ;\n        }\n        else {\n            int u = find(Fr, 0), v = find(To, 0) ; \n            if( u == v ) continue ; \n            add( Fr, To ), fa[u][0] = v ; \n            q.push((S){ Fr, To }), dis[Fr][To] = dis[To][Fr] = 1 ; \n        } \n    }\n    rep( i, 1, n ) {\n        int cc = abc(col[i]) ;\n        if( sd[cc] && ( book[cc] == 0 ) ) add( cc, cc ), book[cc] = 1 ; //\u81ea\u73af \n    }\n}\nvoid spfa() { //spfa\u6c42\u89e3\u4e24\u4e2a\u70b9\u662f\u5426\u53ef\u8fbe \n    while( !q.empty() ) {\n        S u = q.front(); q.pop() ;\n        int Fr = u.from, To = u.to ; \n        Next( i, Fr ) {\n            int v = e[i].to ; \n            Next( j, To ) {\n                int v2 = e[j].to ; \n                if( w[v] != w[v2] || dis[v][v2] ) continue ; \n                dis[v][v2] = dis[v2][v] = 1, q.push((S){v, v2}) ;\n            }\n        } \n    }\n}\nvoid output() { //\u8f93\u51fa\u6587\u4ef6 \n    int x, y ; \n    rep( i, 1, Q ) {\n        x = read(), y = read() ; \n        if( dis[x][y] ) puts(\"YES\") ; \n        else puts(\"NO\") ; \n    }\n}\nsigned main()\n{\n    n = read(), m = read(), Q = read() ; \n    scanf(\"%s\", ss);\n    rep( i, 1, n ) w[i] = ss[i - 1] - '0', dis[i][i] = 1, fa[i][0] = fa[i][1] = i, q.push((S){i, i}) ;\n    rep( i, 1, m ) {\n        s[i].from = read(), s[i].to = read();\n        if( w[s[i].from] == w[s[i].to] ) add( s[i].from, s[i].to ) ;\n    }\n    init(), spfa(), output() ; \n    return 0;\n}\n```",
        "postTime": 1554723447,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "\n\u9996\u5148\u8003\u8651\u66b4\u529b\u505a\u6cd5\u600e\u4e48\u505a\u3002  \n\u628a\u6240\u6709\u53ef\u884c\u7684\u4e8c\u5143\u7ec4\u5168\u90e8\u4e22\u8fdb\u961f\u5217\u91cc\uff0c\u6bcf\u6b21\u4e24\u4e2a\u70b9\u5206\u522b\u5411\u4e24\u4fa7\u62d3\u5c55\u4e00\u4e2a\u540c\u8272\u70b9\uff0c\u7136\u540e\u66f4\u65b0\u53ef\u884c\u7684\u60c5\u51b5\u3002  \n\u8fd9\u6837\u5b50\u7684\u590d\u6742\u5ea6\u662f$O(m^2)$\u7684\u3002  \n\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fb9\u6570\uff0c\u5148\u8bf4\u7ed3\u8bba\uff1a  \n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u540c\u8272\u8054\u901a\u5757\uff0c\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u5c31\u884c\u4e86\uff0c\u5426\u5219\u968f\u4fbf\u627e\u4e2a\u70b9\u8fde\u4e00\u6761\u81ea\u73af\u3002  \n\u5bf9\u4e8e\u8fde\u63a5\u4e0d\u540c\u8272\u4e24\u4e2a\u70b9\u7684\u8fb9\uff0c\u4e00\u5b9a\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u5c31\u884c\u4e86\u3002   \n\u8bc1\u660e\u662f\u8fd9\u6837\u5b50\u7684\uff1a  \n\u9996\u5148\u6211\u4eec\u628a\u8def\u5f84\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u540c\u8272\u8fde\u7eed\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5bf9\u5e94\u7684\u4e24\u6bb5\u957f\u5ea6\u8981\u76f8\u7b49\u3002  \n\u957f\u5ea6\u77ed\u4e86\u662f\u65e0\u6240\u8c13\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u590d\u8d70\u4e00\u6761\u8fb9\uff0c\u8fbe\u5230\u628a\u5e8f\u5217\u8fb9\u957f\u7684\u76ee\u7684\u3002  \n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\u800c\u8a00\uff0c\u5982\u679c\u53cd\u590d\u8d70\uff0c\u5176\u957f\u5ea6\u7684\u5947\u5076\u6027\u4e0d\u4f1a\u6539\u53d8\uff0c\u5426\u5219\u5947\u5076\u6027\u53ef\u4ee5\u4efb\u610f\u6539\u53d8\uff0c\u90a3\u4e48\u9700\u8981\u8fde\u4e00\u4e2a\u81ea\u73af\u6765\u6539\u53d8\u5947\u5076\u6027\u3002  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define ll long long\n#define MAX 5050\ninline int read()\n{\n\tint x=0;char ch=getchar();bool fl=false;\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-')fl=true,ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn fl?-x:x;\n}\nstruct Line{int v,next;}e[500500<<1];\nint h[MAX],cnt=1;\ninline void Add(int u,int v){e[cnt]=(Line){v,h[u]};h[u]=cnt++;}\nint n,m,Qr;char a[MAX];\nstruct Node{int x,y;};queue<Node> Q;\nbool vis[MAX][MAX];\nvector<int> E[MAX];\nint col[MAX];bool chk;\nint f[MAX];\nint getf(int x){return x==f[x]?x:f[x]=getf(f[x]);}\nvoid dfs(int u,int c)\n{\n\tcol[u]=c;\n\tfor(int i=0,l=E[u].size();i<l;++i)\n\t{\n\t\tint v=E[u][i];\n\t\tif(a[u]!=a[v])continue;\n\t\tif(col[v]==col[u])chk=false;\n\t\tif(col[v])continue;\n\t\tAdd(u,v),Add(v,u);dfs(v,c^1);\n\t\tvis[u][v]=vis[v][u]=true;\n\t\tQ.push((Node){u,v});\n\t}\n}\nint main()\n{\n\tfreopen(\"tour.in\",\"r\",stdin);\n\tfreopen(\"tour.out\",\"w\",stdout);\n\tn=read();m=read();Qr=read();scanf(\"%s\",a+1);\n\tfor(int i=1;i<=n;++i)f[i]=i;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\tE[u].push_back(v);\n\t\tE[v].push_back(u);\n\t\tif(a[u]!=a[v])\n\t\t{\n\t\t\tif(getf(u)==getf(v))continue;\n\t\t\tAdd(u,v);Add(v,u);\n\t\t\tf[getf(u)]=getf(v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tif(!col[i])\n\t\t{\n\t\t\tchk=true;dfs(i,2);\n\t\t\tif(!chk)Add(i,i);\n\t\t}\n\tfor(int i=1;i<=n;++i)vis[i][i]=true,Q.push((Node){i,i});\n\twhile(!Q.empty())\n\t{\n\t\tNode u=Q.front();Q.pop();\n\t\tint x=u.x,y=u.y;\n\t\tfor(int i=h[x];i;i=e[i].next)\n\t\t{\n\t\t\tint xx=e[i].v;\n\t\t\tfor(int j=h[y];j;j=e[j].next)\n\t\t\t{\n\t\t\t\tint yy=e[j].v;\n\t\t\t\tif(vis[xx][yy])continue;\n\t\t\t\tif(a[xx]!=a[yy])continue;\n\t\t\t\tvis[xx][yy]=vis[yy][xx]=true;\n\t\t\t\tQ.push((Node){xx,yy});\n\t\t\t}\n\t\t}\n\t}\n\twhile(Qr--)\n\t{\n\t\tint x=read(),y=read();\n\t\tif(vis[x][y])puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554711975,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "[\u6b22\u8fce\u6765\u535a\u5ba2\u73a9\u5440](https://www.cnblogs.com/luoshuitianyi/p/10679665.html)\n# Algorithm\n$DP$\n\n# Mentality\n\u8003\u573a\u4e0a\u65e0\u4eba\u5207\u7684\u795e\u9898 $orz$ \uff0c$myy\\ nb$ \u3002\n\n\u7531\u4e8e $n$ \u5f02\u5e38\u7684\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u5b8c\u5168\u53ef\u4ee5\u7528 $n^2$ \u7684\u4e8c\u7ef4\u7a7a\u95f4\u6765\u50a8\u5b58\u4fe1\u606f\uff0c\u800c $m$ \u548c $q$ \u76f8\u5bf9\u6765\u8bf4\u53c8\u5f02\u5e38\u5927\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u4e00\u79cd\u770b\u8d77\u6765\u5f88\u66b4\u529b\u7684\u65b9\u6cd5\u505a\u8fd9\u9053\u9898 -- \u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u5bf9\u7684\u60c5\u51b5\u3002\n\n$30$ \u5206\u7684\u505a\u6cd5\u8fd8\u662f\u5f88\u597d\u60f3\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5c06\u56de\u6587\u8def\u5f84\u5206\u4e3a\u4e24\u7c7b\uff1a\u957f\u5ea6\u4e3a\u5947\u6570\u7684\uff0c\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u3002\n\n\u8bbe $f[i][j]$ \u4e3a $i,j$ \u4e4b\u95f4\u662f\u5426\u6709\u56de\u6587\u8def\u5f84\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u5904\u7406\u51fa\u957f\u5ea6\u6700\u77ed\u7684\u5947\u5076\u56de\u6587\u8def\u5f84\u3002\u9996\u5148\uff0c\u957f\u5ea6\u6700\u77ed\u7684\u5947\u6570\u56de\u6587\u8def\u5f84\u5c31\u662f\u6bcf\u4e2a\u70b9\u81ea\u5df1\uff0c\u5373 $f[i][i]=1$ \u3002\u7136\u540e\u89c2\u5bdf\u5230\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u5982\u679c\u8fde\u7684\u4e24\u4e2a\u70b9 $u,v$ \u7f16\u53f7\u76f8\u540c\uff0c\u5219 $f[u][v]=f[v][u]=1$ \uff0c\u8fd9\u4e9b\u5c31\u662f\u957f\u5ea6\u6700\u77ed\u7684\u5076\u6570\u56de\u6587\u8def\u5f84\u3002\n\n\u7136\u540e\u8003\u8651\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c $DP$ \u8f6c\u79fb\uff0c\u6211\u4eec\u7528 $bfs$ \u7684\u987a\u5e8f\u6765\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u5c06\u8fd9\u4e9b\u4e24\u70b9\u4e4b\u95f4\u6709\u8def\u5f84\u7684\u4e8c\u5143\u7ec4 $(u,v)$ \u6254\u8fdb\u961f\u5217\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u679a\u4e3e $u,v$ \u7684\u51fa\u8fb9 $to_u,to_v$\uff0c\u5982\u679c $to_u$ \u7684\u7f16\u53f7\u4e0e $to_v$ \u76f8\u540c\uff0c\u90a3\u4e48 $to_u,to_v$ \u4e4b\u95f4\u80af\u5b9a\u4e5f\u5b58\u5728\u56de\u6587\u8def\u5f84\uff0c\u6211\u4eec\u5c06 $f$ \u6570\u7ec4\u66f4\u65b0\uff0c\u7136\u540e\u5c06\u4e8c\u5143\u7ec4 $to_u,to_v$ \u4e22\u5165\u961f\u5217\u672b\u5c3e\u7b49\u5f85\u4e0b\u4e00\u6b21\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6bcf\u6b21\u8f6c\u79fb\u90fd\u8981\u679a\u4e3e\u4e24\u70b9\u7684\u51fa\u8fb9\u4e00\u4e00\u5224\u65ad\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a $m^2$ \u3002\n\n\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u4e2a\u6837\u5b50\uff1f\n\n```cpp\nwhile(h<t)\n{\n\th++;\n\tfor(int i=hd[u[h]];i;i=Nx[i])\n\t\tfor(int j=hd[v[h]];j;j=Nx[j])\n\t\t\tif(S[To[i]]==S[To[j]]&&!f[To[i]][To[j]])\n\t\t\t\tf[To[i]][To[j]]=f[To[j]][To[i]]=1,Add(To[i],To[j]);\n}\n```\n\n\u7531\u4e8e $STL$ \u5e38\u6570\u592a\u5927\uff0c\u6240\u4ee5\u624b\u5199\u961f\u5217 (\u4e5f\u5c31\u603b\u5171 $5e7$ \u7684\u7a7a\u95f4~~\u800c\u5df2~~)\n\n\u8be2\u95ee\u4e00\u6b21\u5c31\u76f4\u63a5\u770b\u5b83\u7684 $f$ \u6570\u7ec4\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 $100$ \u5206\u505a\u6cd5\u3002\n\n\u89c2\u5bdf\u5230 $m$ \u5de8\u5927\uff0c\u6211\u4eec\u8003\u8651\u51cf\u5c11\u8fb9\u7684\u679a\u4e3e\u3002\n\n\u6211\u4eec\u5c06\u6240\u6709\u8f6c\u79fb\u5206\u6210\u4e24\u7c7b\uff1a\u5411\u76f8\u540c\u7f16\u53f7\u7684\u70b9\u8f6c\u79fb\uff0c\u5411\u4e0d\u540c\u7f16\u53f7\u7684\u70b9\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u4f9d\u6b64\u5c06\u8fb9\u5206\u4e3a\u4e24\u7c7b\uff1a\u8fde\u63a5\u76f8\u540c\u7f16\u53f7\u70b9\u7684\u8fb9\uff0c\u8fde\u63a5\u4e0d\u540c\u7f16\u53f7\u70b9\u7684\u8fb9\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u7c7b\u8fb9\uff0c\u8b6c\u5982\u8fde\u63a5\u76f8\u540c\u7f16\u53f7\u70b9\u7684\u8fb9\u3002\n\n\u8fd9\u4e9b\u8fb9\u628a\u56fe\u5206\u6210\u4e86\u8bb8\u591a\u4e2a\u8054\u901a\u5757\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\u5185\u7684\u8f6c\u79fb\uff0c\u53ea\u53d6\u51b3\u4e8e\u4e00\u4ef6\u4e8b\uff1a\u8fd9\u4e2a\u8054\u901a\u5757\u662f\u4e0d\u662f\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u6765\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u8054\u901a\u5757\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u5b83\u6ee1\u8db3\u4e24\u4e2a\u6027\u8d28\u3002\n\n- \u80fd\u5c06\u8054\u901a\u5757\u5185\u7684\u70b9\u5212\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u540c\u4e00\u96c6\u5408\u5185\u7684\u70b9\u4e92\u4e0d\u76f4\u63a5\u76f8\u8fde\u3002\n\n- \u540c\u65f6\u7531\u4e8e\u8fd9\u662f\u4e2a\u8054\u901a\u5757\uff0c\u4e24\u70b9\u4e4b\u95f4\u7686\u53ef\u8fbe\u3002\n\n\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6211\u5728\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u60f3\u8981\u8f6c\u79fb\u5230\u96c6\u5408\u5185\u53e6\u4e00\u70b9\uff0c\u5fc5\u5b9a\u4f1a\u7ecf\u8fc7\u5076\u6570\u6761\u8fb9\u3002\n\n\u56e0\u4e3a\u6211\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6ce8\u5b9a\u53ea\u80fd\u662f\u91cd\u590d `\u5f53\u524d\u96c6\u5408` -> `\u53e6\u4e00\u96c6\u5408` -> `\u5f53\u524d\u96c6\u5408` \u8fd9\u6837\u7684\u6b65\u9aa4\uff0c\u6240\u4ee5\u6700\u540e\u7684\u6b65\u6570\u4e00\u5b9a\u662f\u5076\u6570\u6761\u3002\n\n\u6362\u800c\u8a00\u4e4b\uff0c\u82e5\u8054\u901a\u5757\u4e3a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u8054\u901a\u5757\u5185\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u5947\u5076\u6027\u552f\u4e00\u3002\n\n\u800c\u6ce8\u610f\u5230\uff0c\u5f53\u6211\u4eec $DP$ \u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u82e5\u56de\u6587\u4e32\u4e24\u7aef\u65b0\u589e\u7684\u6570\u5b57\u5168\u90fd\u76f8\u540c\uff0c\u8b6c\u5982\u5728\u5de6\u53f3\u7aef\u90fd\u6dfb\u4e0a $0$ \uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u5de6\u53f3\u4e24\u8fb9\u65b0\u589e\u7684\u6570\u91cf\u76f8\u540c\u5373\u53ef\u3002\n\n\u800c\u6839\u636e\u9898\u76ee\u7684\u6027\u8d28\u53ef\u77e5\uff0c\u6211\u4eec\u4e3a\u4fdd\u8bc1\u6570\u91cf\u76f8\u7b49\uff0c\u5b8c\u5168\u53ef\u4ee5\u5728\u4e00\u6761\u8fde\u5411\u4e00\u4e2a\u76f8\u540c\u7f16\u53f7\u70b9\u7684\u8fb9\u4e0a\u6765\u56de\u6a2a\u8d70\u4fdd\u8bc1\u6570\u91cf\u7684\u589e\u503c\u3002\u4f46\u662f**\u8fd9\u6837\u4e0d\u6539\u53d8\u5947\u5076\u6027**\u3002\n\n\u90a3\u4e48\u5947\u5076\u6027\u5c31\u6210\u4e86\u5224\u65ad $DP$ \u8f6c\u79fb\u7684\u91cd\u8981\u6027\u8d28\u4e86\u3002\n\n\u63a5\u7740\u4e0a\u9762\u7684\u63a8\u8bba\uff0c\u7531\u4e8e\u82e5\u8054\u901a\u5757\u4e3a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u8054\u901a\u5757\u5185\u4e24\u70b9\u4ef6\u8def\u5f84\u957f\u5ea6\u5947\u5076\u6027\u552f\u4e00\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8fd9\u4e2a\u8054\u901a\u5757\u5185\uff0c\u53ea\u9700\u8981**\u4fdd\u7559\u4e00\u9897\u751f\u6210\u6811**\u5373\u53ef\uff0c\u56e0\u4e3a **\u5947\u5076\u552f\u4e00** \uff0c\u6240\u4ee5 **\u4e0d\u5f71\u54cd $DP$ \u8fc7\u7a0b** \u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u770b\uff0c\u5982\u679c\u4e0d\u662f\u4e8c\u5206\u56fe\u600e\u4e48\u529e\u3002\u8fd8\u662f\u5212\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u540c\u4e00\u96c6\u5408\u5185\u81f3\u5c11\u6709\u4e00\u5bf9\u70b9 $(u,v)$ \u4e4b\u95f4\u76f4\u63a5\u6709\u8fde\u8fb9\u3002\u7531\u4e8e\u53ea\u8003\u8651\u8fde\u63a5\u4e24\u4e2a\u4e0d\u540c\u96c6\u5408\u7684\u8fb9\u65f6\uff0c\u4ece $u$ \u81f3 $v$ \u5fc5\u5b9a\u6709\u4e00\u6761\u957f\u5ea6\u4e3a **\u5076\u6570** \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u518d\u52a0\u4e0a\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e2a\u8054\u901a\u5757\u5185\u5c31\u6709\u4e86\u4e00\u4e2a **\u5947\u73af** \u3002\u5219\u8054\u901a\u5757\u5185\u4efb\u610f\u4e00\u70b9\u90fd\u53ef\u4ee5\u8d70\u5230\u5947\u73af\u4e0a\u901a\u8fc7\u7ed5\u73af\u6539\u53d8\u8def\u5f84\u957f\u5ea6\u5947\u5076\u6027\u3002\n\n\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5148\u50cf\u4e8c\u5206\u56fe\u4e00\u6837\uff0c\u4fdd\u7559\u4e00\u9897\u751f\u6210\u6811\u3002\u81f3\u4e8e\u90a3\u4e2a\u5947\u73af\uff0c\u6211\u4eec\u53ea\u9700**\u8981\u5728\u751f\u6210\u6811\u5185\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0a\u968f\u4fbf\u8fde\u4e2a\u81ea\u73af**\u5c31\u884c\u4e86 $QwQ$\uff0c\u53cd\u6b63\u53ea\u662f\u8981\u4e2a\u5947\u73af\u800c\u5df2\uff0c\u81ea\u73af\u5f53\u7136\u4e5f\u662f\u5566\u3002\n\n\u4ee5\u4e0a\u662f\u8fde\u63a5\u76f8\u540c\u7f16\u53f7\u70b9\u7684\u8fb9\u7684\u5904\u7406\u65b9\u5f0f\u3002\n\n\u81f3\u4e8e\u8fde\u63a5\u4e0d\u540c\u7f16\u53f7\u7684\u8fb9\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u8054\u901a\u5757\u80af\u5b9a\u5c31\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u76f4\u63a5\u4fdd\u7559\u751f\u6210\u6811\u5373\u53ef\u3002\n\n\u90a3\u4e48\u8fb9\u6570\u51cf\u5c11\u4e3a $n$ \u7684\u7ea7\u522b\uff0c\u6b64\u65f6\u518d\u53bb $DP$ \uff0c\u590d\u6742\u5ea6\u5c31\u964d\u4e3a $n^2$ \u4e86\u3002\n\n\u5982\u82e5\u672a\u61c2\u8be6\u89c1\u4ee3\u7801\n\n# Code\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,Q;\nint cntr,head[5001],nx[1000001],to[1000001],col[5001];\nint cr,hd[5001],Nx[1000001],To[1000001];\nint h,t,u[25000001],v[25000001];\nbool flag,f[5001][5001];\nchar S[5001];\nstruct node{int u,v;};\nvoid read(int &x)\n{\n\tx=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n}\nvoid addr(int u,int v)\n{\n\tcntr++;\n\tnx[cntr]=head[u],to[cntr]=v;\n\thead[u]=cntr;\n}\nvoid Addr(int u,int v)\n{\n\tcr++;\n\tNx[cr]=hd[u],To[cr]=v;\n\thd[u]=cr;\n}\nvoid Add(int U,int V)\n{\n\tt++;\n\tu[t]=U,v[t]=V;\n}\nvoid dye(int x,bool type)\n{\n\tfor(int i=head[x];i;i=nx[i])\n\t{\n\t\tint p=to[i];\n\t\tif((S[p]==S[x])==type)//\u6784\u56fe\u53c2\u6570\u7684\u4f7f\u7528\n\t\t{\n\t\t\tif(col[p]!=-1)if(!(col[p]^col[x]))flag=1;//\u67d3\u8272\u51b2\u7a81\u5219\u4e0d\u662f\u4e8c\u5206\u56fe\n\t\t\tif(col[p]==-1)\n\t\t\t{\n\t\t\t\tcol[p]=col[x]^1,dye(p,type);\n\t\t\t\tAddr(x,p),Addr(p,x);//\u52a0\u8fb9\n\t\t\t}\n\t\t}\n\t}\n}\nvoid Read_Init()\n{\n\tread(n),read(m),read(Q);\n\tscanf(\"%s\",S+1);\n\tint u,v;\n\twhile(m--)\n\t{\n\t\tread(u),read(v);\n\t\tif(S[u]==S[v])f[u][v]=f[v][u]=1,Add(u,v);//\u5148\u52a0\u5165\u5076\u6570\u6700\u77ed\u8fb9\uff0c\u5e76\u66f4\u65b0 DP \u6570\u7ec4\n\t\taddr(u,v),addr(v,u);\n\t}\n}\nvoid Build_Init()\n{\n\tfor(int i=1;i<=n;i++)f[i][i]=1,Add(i,i);//\u52a0\u5165\u5947\u6570\u6700\u77ed\u8fb9\uff0c\u5e76\u66f4\u65b0 DP \u6570\u7ec4\n\tfor(int k=0;k<2;k++)//k \u662f\u6784\u56fe\u53c2\u6570\n\t{\n\t\tfor(int i=1;i<=n;i++)col[i]=-1;//\u4e8c\u5206\u56fe\u67d3\u8272\u521d\u59cb\u5316\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(col[i]==-1)\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tcol[i]=0,dye(i,k);\n\t\t\t\tif(flag)Addr(i,i);//\u5982\u679c\u4e0d\u662f\u4e8c\u5206\u56fe\u90a3\u5c31\u52a0\u4e2a\u81ea\u73af\n\t\t\t}\n\t}\n}\nvoid DP()\n{\n\twhile(h<t)\n\t{\n\t\th++;\n\t\tfor(int i=hd[u[h]];i;i=Nx[i])\n\t\t\tfor(int j=hd[v[h]];j;j=Nx[j])\n\t\t\t\tif(S[To[i]]==S[To[j]]&&!f[To[i]][To[j]])\n\t\t\t\t\tf[To[i]][To[j]]=f[To[j]][To[i]]=1,Add(To[i],To[j]);//DP \u8f6c\u79fb\n\t}\n}\nvoid Answer()\n{\n\tint u,v;\n\twhile(Q--)\n\t{\n\t\tread(u),read(v);\n\t\tif(f[u][v])printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n}\nint main()\n{\n\tRead_Init();\n\tBuild_Init();\n\tDP();\n\tAnswer();\n}\n```",
        "postTime": 1554814503,
        "uid": 39954,
        "name": "\u6d1b\u6c34\u00b7\u9526\u4f9d\u536b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://www.luogu.com.cn/problem/P5292)\n\n\u5148\u8003\u8651\u66b4\u529b\uff1a  \n\u8bbe$f_{x,y}$\u8868\u793a$(x,y)$\u662f\u5426\u6709\u4e00\u6761\u6ee1\u8db3\u8981\u6c42\u7684\u8def\u5f84\u3002  \n\u8f6c\u79fb\u5219\u8003\u8651\u679a\u4e3e$(x,y)$\u7684\u51fa\u70b9\uff0c\u5224\u65ad\u662f\u5426\u6709\u989c\u8272\u76f8\u540c\u7684\uff0c\u4e4b\u540e\u9012\u5f52\u3002\u5173\u4e8e\u8f6c\u79fb\u987a\u5e8f\uff0c\u53ef\u4ee5\u8003\u8651\u8bb0\u5fc6\u5316\u6216\u8005$spfa$\u3002  \n\u8fd9\u6837\u66b4\u529b\u662f$O(m^2)$\u7684\uff0c\u56e0\u4e3a\u662f\u679a\u4e3e\u51fa\u8fb9\u3002\n\n\u6211\u4eec\u8003\u8651\u662f\u5426\u53ef\u4ee5\u5220\u53bb\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u5f97\u8fb9\u7684\u603b\u6570\u4e3a$O(n)$\u7ea7\u522b\uff0c\u4e14\u4fdd\u8bc1\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u663e\u7136\u80fd\u591f\u6309\u989c\u8272\u5c06\u5176\u5206\u4e3a\u5f88\u591a\u6bb5\uff0c\u5176\u4e2d\u6bcf\u6bb5\u989c\u8272\u76f8\u540c\u3002\u663e\u7136\u540c\u4e00\u6bb5\u7684\u70b9\u662f\u5728\u8fde\u63a5\u540c\u79cd\u989c\u8272\u7684\u8fb9\u4e4b\u95f4\u8f6c\u79fb\u7684\uff0c\u800c\u6bb5\u4e4b\u95f4\u7684\u5206\u754c\u5219\u662f\u7531\u8fde\u63a5\u4e0d\u540c\u989c\u8272\u7684\u8fb9\u8f6c\u79fb\u7684\u3002\n\n\u56e0\u6b64\u5c06\u8fb9\u5206\u7c7b\u8ba8\u8bba\uff1a  \n1.\u8fde\u63a5\u76f8\u540c\u989c\u8272\u7684\u8fb9\uff1a  \n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ea\u8003\u8651\u4e00\u79cd\u7f16\u53f7\u7684\u8fb9\uff0c\u6bd4\u5982\u8bf4$1$\uff0c\u53e6\u4e00\u79cd\u540c\u7406\u3002\u6211\u4eec\u53d1\u73b0\u53ea\u4fdd\u7559\u8fd9\u4e9b\u8fb9\u4f1a\u6784\u6210\u4e00\u4e2a\u4e2a\u8fde\u901a\u5757\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u770b\u662f\u5426\u80fd\u5c06\u5176\u5316\u7b80\u3002\n\n\u6211\u4eec\u8fd9\u4e48\u8003\u8651\uff1a\u6784\u9020\u56de\u6587\u4e32\u65f6\uff0c\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u6784\u9020\u4e00\u4e2a$11111...$\uff0c\u8ddf\u4e4b\u540e\u56de\u6587\u4e32\u4e2d$11111...$\u76f8\u5bf9\u5e94\u3002\u6211\u4eec\u53d1\u73b0\u53ea\u7528\u5173\u5fc3$1$\u7684\u4e2a\u6570\u7684\u5947\u5076\u6027\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u6761\u8fb9\u53cd\u590d\u6a2a\u8df3\u6765\u4e0d\u65ad\u6dfb\u52a0$1$\uff0c\u4f46\u662f\u4e00\u6b21\u6dfb\u52a0\u4e24\u4e2a\uff0c\u662f\u65e0\u6cd5\u6539\u53d8\u5947\u5076\u6027\u7684\uff0c\u56e0\u6b64\u53ea\u8981\u4fdd\u8bc1\u76f8\u5bf9\u5e94\u7684\u4e24\u6bb5$1$\u80fd\u4f7f\u4e2a\u6570\u7684\u5947\u5076\u6027\u76f8\u540c\u5373\u53ef\u3002\uff08**\u8fd9\u91cc\u5f88\u91cd\u8981\uff0c\u4e00\u5b9a\u8981\u7406\u89e3**\uff09\n\n\u6b64\u65f6\u6211\u4eec\u6839\u636e\u8fde\u901a\u5757\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\u5206\u7c7b\uff1a  \n\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u4e3a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u6bcf\u5bf9\u70b9\u4e4b\u95f4\u7684\u5947\u5076\u6027\u662f\u56fa\u5b9a\u7684\uff0c\u5373\u540c\u4e00\u96c6\u5408\u7684\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u8def\u5f84\u5fc5\u5b9a\u5076\u6570\uff0c\u53cd\u4e4b\u5219\u4e3a\u5947\u6570\u3002\u6211\u4eec\u77e5\u9053\u6811\u4e5f\u662f\u4e8c\u5206\u56fe\uff0c\u56e0\u6b64\u8fd9\u4e2a\u8054\u901a\u5757\u6211\u4eec\u53ea\u4fdd\u7559\u4e00\u9897\u751f\u6210\u6811\u5373\u53ef\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8054\u901a\u5757\u4e0d\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u5b83\u5fc5\u5b9a\u5b58\u5728\u5947\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8d70\u8fd9\u4e2a\u5947\u73af\u6539\u53d8\u8def\u5f84\u7684\u5947\u5076\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u641e\u51fa\u4e00\u9897\u751f\u6210\u6811\uff0c\u4e4b\u540e\u5728\u5176\u4e2d\u52a0\u4e00\u4e2a\u81ea\u73af\uff0c\u8fd9\u6837\u6bcf\u6761\u8def\u5f84\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u81ea\u73af\u6539\u53d8\u5947\u5076\u6027\u3002\n\n2.\u8fde\u63a5\u4e0d\u540c\u989c\u8272\u7684\u8fb9\uff1a\n\n\u663e\u7136\u6bcf\u4e2a\u8054\u901a\u5757\u90fd\u662f\u4e8c\u5206\u56fe\uff0c\u6839\u636e\u6211\u4eec\u5728\u4e0a\u9762\u5f97\u51fa\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u540c\u6837\u53ea\u4fdd\u7559\u4e00\u9897\u751f\u6210\u6811\u5373\u53ef\u3002\n\n\u4e8e\u662f\u8fb9\u7684\u4e2a\u6570\u5c31\u53d8\u4e3a\u4e86$O(n)$\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u4ee5$O(n^2)$\u7684\u590d\u6742\u5ea6\u901a\u8fc7\u672c\u9898\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5010;\nconst int maxm=500010;\nint n,m,Q,cnt_edge;\nint head[maxn],col[maxn],fa[maxn];\nbool flag;\nbool f[maxn][maxn];\nchar s[maxn];\nvector<int>ve[maxn];\nstruct Edge{int u,v;}E[maxm];\nstruct edge{int to,nxt;}e[(maxn*3)<<1];\ninline int read()\n{\n    char c=getchar();int res=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\n    return res*f;\n}\ninline void add_edge(int u,int v)\n{\n\te[++cnt_edge].nxt=head[u];\n\thead[u]=cnt_edge;\n\te[cnt_edge].to=v;\n}\nvoid dfs(int x,int c)\n{\n\tcol[x]=c;\n\tfor(unsigned int i=0;i<ve[x].size();i++)\n\t{\n\t\tint y=ve[x][i];\n\t\tif(~col[y])flag|=(col[x]==col[y]);\n\t\telse add_edge(x,y),add_edge(y,x),dfs(y,c^1);\n\t}\n}\ninline void build(char op)\n{\n\tfor(int i=1;i<=n;i++)col[i]=-1,ve[i].clear();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=E[i].u,v=E[i].v;\n\t\tif(s[u]!=op||s[v]!=op)continue;\n\t\tve[u].push_back(v);ve[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(~col[i])continue;\n\t\tflag=0;dfs(i,0);\n\t\tif(flag)add_edge(i,i);\n\t}\n}\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n#define pii pair<int,int>\n#define mkp make_pair\n#define fir first\n#define sec second\ninline void spfa()\n{\n\tqueue<pii>q;\n\tfor(int i=1;i<=n;i++)f[i][i]=1,q.push(mkp(i,i));\n\tfor(int i=1;i<=m;i++)\n\t\tif(s[E[i].u]==s[E[i].v])f[E[i].u][E[i].v]=f[E[i].v][E[i].u]=1,q.push(mkp(E[i].u,E[i].v));\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front().fir,y=q.front().sec;q.pop();\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\tfor(int j=head[y];j;j=e[j].nxt)\n\t\t\t\tif(s[e[i].to]==s[e[j].to]&&!f[e[i].to][e[j].to])\n\t\t\t\t\tf[e[i].to][e[j].to]=f[e[j].to][e[i].to]=1,q.push(mkp(e[i].to,e[j].to));\t\n\t}\t\n}\nint main()\n{\n\tn=read(),m=read(),Q=read();\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=m;i++)E[i].u=read(),E[i].v=read();\n\tbuild('0');build('1');\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=E[i].u,v=E[i].v;\n\t\tif(s[u]==s[v])continue;\n\t\tint x=find(u),y=find(v);\n\t\tif(x==y)continue;\n\t\tfa[x]=y;add_edge(u,v);add_edge(v,u);\n\t}\n\tspfa();\n\twhile(Q--)\n\t{\n\t\tint x=read(),y=read();\n\t\tputs(f[x][y]?\"YES\":\"NO\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1586958914,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P5292 [HNOI2019]\u6821\u56ed\u65c5\u884c(DP+\u751f\u6210\u6811)"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5292)\r\n\r\n\u672c\u9898\u7efc\u5408\u4e86\u56fe\u7684\u8bb8\u591a\u7b97\u6cd5\uff0c\u5177\u6709\u8f83\u5927\u7684\u601d\u7ef4\u96be\u5ea6\uff0c\u4f46\u4e5f\u56e0\u6b64\u5341\u5206\u6709\u4ef7\u503c\u3002\r\n## \u9898\u76ee\u5206\u6790\r\n\u9996\u5148\uff0c\u9898\u76ee\u8981\u6c42\u662f\u8981\u5224\u65ad\u8be2\u95ee\u7684\u4e24\u70b9\u95f4\u662f\u5426\u5b58\u5728\u56de\u6587\u8def\u5f84\u3002\r\n\r\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u7684\u505a\u6cd5\u662f\u4ece\u56fe\u7684\u67d0\u4e2a\u5c40\u90e8\u5f00\u59cb\u62d3\u5c55\uff0c\u5c06\u5c40\u90e8\u7684\u72b6\u6001\u8f6c\u79fb\u5230\u5168\u56fe\u7684\u72b6\u6001\u3002\r\n\r\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u56fe\u4e0a dp \u7684\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u72b6\u6001 $f(i,j)$ \u8868\u793a\u4ece\u70b9 $i$ \u5230\u70b9 $j$ \u662f\u5426\u5b58\u5728\u56de\u6587\u8def\u5f84\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4ece**\u6807\u8bb0\u76f8\u540c**\u7684**\u70b9\u5bf9**\u6216\u8005**\u5355\u70b9**\u5f00\u59cb\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff08\u56e0\u4e3a\u6839\u636e\u9898\u610f\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u5fc5\u7136\u5b58\u5728\u56de\u6587\u8def\u5f84\uff09\u3002\r\n\r\n\u663e\u7136\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u5bf9 $(i,j)$\uff0c\u5982\u679c $f(i,j)=true$ \u4e14\u70b9 $i$ \u548c \u70b9 $j$ \u7684\u5b50\u8282\u70b9\u7ec4\u6210\u7684\u70b9\u5bf9\u6807\u8bb0\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u8282\u70b9\u5bf9\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u66f4\u65b0\u4e3a $true$\u3002\r\n\r\n\u4ece\u5355\u70b9\u51fa\u53d1\u7684\u66f4\u65b0\u4e5f\u662f\u540c\u7406\u3002\r\n\r\n\u7531\u4e8e\u6211\u4eec\u8981\u679a\u4e3e\u6240\u6709\u51fa\u8fb9\uff0c\u6240\u4ee5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a $O(m^2)$\uff0c\u663e\u7136\u4f1a\u8d85\u65f6\u3002\r\n\r\n\u4e8e\u662f\u6211\u4eec\u7b97\u6cd5\u7684\u74f6\u9888\u5c31\u5728\u4e8e\u8fb9\u7684\u6570\u91cf\uff0c\u4e0b\u9762\u8003\u8651\u8be5\u5982\u4f55\u4f18\u5316\u3002\r\n\r\n## \u7b97\u6cd5\u4f18\u5316\r\n\u6211\u4eec\u610f\u8bc6\u5230\uff0c\u70b9\u7684\u6570\u91cf\u548c\u8fb9\u7684\u6570\u91cf\u5dee\u522b\u662f\u5f88\u5927\u7684\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u5f20\u56fe\u5b58\u5728\u5927\u91cf\u7684**\u73af**\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u56fe\u6216\u8005\u5b50\u56fe\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684**\u751f\u6210\u6811**\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u5c31\u6709\u5e0c\u671b\u964d\u4f4e\u5230 $O(n^2)$ \u7ea7\u522b\u3002\r\n\r\n\u4f46\u95ee\u9898\u662f\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f1a\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u6b63\u786e\u6027\u5462\uff1f\r\n\r\n\u90a3\u4e48\u5148\u6765\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84\u7684\u5145\u5206\u6761\u4ef6\u662f\u4ec0\u4e48\u3002\r\n\r\n\u9898\u76ee\u8bf4\u4e86\uff0c\u8fd9\u6761\u8def\u5f84**\u4e0d\u4e00\u5b9a**\u662f**\u7b80\u5355\u8def\u5f84**\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8def\u5f84\u4e0a\u53ef\u4ee5\u6765\u56de\u884c\u8d70\u3002\r\n\r\n\u6211\u4eec\u628a\u4e00\u6761\u8def\u5f84\u4ece\u8d77\u70b9\u8d70\u5230**\u7ed9\u5b9a\u7ec8\u70b9**\u6240\u7ecf\u8fc7\u7684\u70b9\u7684\u6570\u91cf\u5b9a\u4e49\u4e3a**\u8def\u5f84\u5927\u5c0f**\u3002\r\n\r\n\u90a3\u4e48\u5982\u679c\u628a\u4e00\u6761**\u7b80\u5355\u8def\u5f84**\u4ece\u4e2d\u95f4\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u5047\u8bbe\u5de6\u53f3\u90e8\u5206\u5168\u662f**\u540c\u4e00\u79cd\u6807\u8bb0**\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\r\n\r\n\u5176\u5de6\u53f3\u4e24\u90e8\u5206\u8def\u5f84\u5927\u5c0f\u662f\u5426\u76f8\u540c\u5c31\u53ef\u4ee5\u4ee3\u8868\u8fd9\u6574\u6761\u8def\u5f84\u662f\u5426\u751f\u6210\u4e86\u4e00\u4e2a\u56de\u6587\u4e32\u3002\r\n\r\n\u5982\u679c\u5de6\u53f3\u4e24\u90e8\u5206\u8def\u5f84\u5927\u5c0f\u4e0d\u7b49\uff0c\u4e14**\u5947\u5076\u6027\u76f8\u540c**\uff0c\u901a\u8fc7\u5728\u8def\u5f84\u5927\u5c0f\u8f83\u5c0f\u7684\u90a3\u90e8\u5206\u6765\u56de\u8d70\u5fc5\u7136\u80fd\u4f7f\u5f97\u5de6\u53f3\u4e24\u90e8\u5206\u8def\u5f84\u5927\u5c0f\u76f8\u540c\u3002\r\n\r\n\u56e0\u4e3a\u6765\u56de\u8d70\u5bf9\u8def\u5f84\u5927\u5c0f\u5e26\u6765\u7684\u589e\u91cf\u4e00\u5b9a\u662f**\u5076\u6570**\uff0c\u6240\u4ee5\u8def\u5f84\u5927\u5c0f\u7684**\u5947\u5076\u6027**\u5728**\u6765\u56de\u8d70**\u7684\u8fc7\u7a0b\u4e2d\u662f**\u4e0d\u53d8\u7684**\u3002\r\n\r\n\u53c8\u56e0\u4e3a\u8def\u5f84\u5927\u5c0f\u7684\u589e\u91cf\u81f3\u5c11\u4e3a$2$\uff0c\u6240\u4ee5\u4e00\u4e2a\u8def\u5f84\u5927\u5c0f\u901a\u8fc7\u589e\u957f\u53ef\u4ee5\u751f\u6210\u5176\u540e\u7eed\u7684**\u5947\u6570\u5217**\u6216\u8005**\u5076\u6570\u5217**\uff0c\u81ea\u7136\u5c31\u53ef\u4ee5\u589e\u957f\u4e3a\u540c\u5947\u5076\u6027\u7684\u8def\u5f84\u5927\u5c0f\u4e86\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84\u7684\u5145\u5206\u6761\u4ef6\u5c31\u662f\u90fd\u4e3a**\u5355\u4e00**\u6807\u8bb0\u7684\u5de6\u53f3\u90e8\u5206\u8def\u5f84\u7684\u5947\u5076\u6027\u76f8\u540c\u3002\r\n\r\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u82e5\u60f3\u5efa\u7acb\u5b50\u56fe\u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u53ea\u8981\u4fdd\u6301\u5176\u8def\u5f84\u5927\u5c0f\u7684\u5947\u5076\u6027\u4e0d\u53d8\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u6211\u4eec\u77e5\u9053\u4e86\uff0c\u6765\u56de\u8d70\u662f\u4e0d\u6539\u53d8\u8def\u5f84\u7684\u5947\u5076\u6027\u7684\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u8fd0\u52a8\u5462\uff1f\u6bd4\u5982\u73af\u72b6\u8fd0\u52a8\uff1f\r\n\r\n\u6709\u6ca1\u6709\u4ec0\u4e48\u56fe\u7684\u8def\u5f84\u5927\u5c0f\u5947\u5076\u6027\u662f\u53d7\u5230\u81ea\u7531\u8fd0\u52a8\u7684\u5f71\u54cd\u7684\uff1f\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c**\u5947\u73af**\u7684\u8def\u5f84\u5947\u5076\u6027\u4f1a\u53d7\u5230\u5728\u8def\u5f84\u4e0a\u73af\u72b6\u8fd0\u52a8\u7684\u5f71\u54cd\u3002\r\n\r\n\u56e0\u4e3a\u6cbf\u7740\u5947\u73af\u5355\u5411\u8fd0\u52a8\u82e5\u5e72**\u6574\u5708**\u7684\u8def\u5f84\u5927\u5c0f\u589e\u91cf\u53ef\u80fd\u4e3a\u5947\u6570\u4e5f\u53ef\u80fd\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u4e00\u6761\u53ef\u4ee5\u7ecf\u8fc7\u5947\u73af\u7684\u8def\u5f84\u7684\u8def\u5f84\u5927\u5c0f\u5947\u5076\u6027\u5c31\u4e0d\u56fa\u5b9a\u4e86\u3002\r\n\r\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u751f\u6210\u5b50\u6811\u65f6\u8981\u901a\u8fc7\u67d0\u4e9b\u65b9\u6cd5\u4fdd\u6301\u5947\u73af\u7684\u8fd9\u79cd\u201c**\u53ef\u53d8\u6027**\u201d\u3002\r\n\r\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u53ea\u6709\u5305\u542b\u5947\u73af\u7684\u5b50\u56fe\u624d\u5177\u6709\u5947\u5076\u7684\u201c\u53ef\u53d8\u6027\u201d\uff0c\u4e0d\u5305\u542b\u5947\u73af\u7684\u56fe\u4e0d\u5c31\u662f**\u4e8c\u5206\u56fe**\u5417\uff1f\u95ee\u9898\u5c31\u5f88\u660e\u786e\u4e86\u3002\r\n\r\n## \u5177\u4f53\u5b9e\u73b0\r\n\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fde\u63a5\u7684\u4e24\u70b9\u7684\u6807\u8bb0\u5747\u4e3a$1$\u6216$0$\u7684\u8fb9\u5212\u5206\u6210\u4e24\u4e2a\u5b50\u56fe\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u56fe\u7684\u6bcf\u4e2a**\u8fde\u901a\u5206\u91cf**\uff0c\u53ef\u4ee5\u7528 Kruskal \u7b97\u6cd5\u6c42\u51fa\u5176\u751f\u6210\u6811\uff0c\u7136\u540e\u5224\u65ad\u5176\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\uff0c\r\n\r\n\u5982\u679c\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u4e3a\u4e86\u4fdd\u6301\u4e0a\u6587\u63d0\u5230\u7684\u201c\u53ef\u53d8\u6027\u201d\uff0c\u9700\u8981\u5728\u751f\u6210\u6811\u4e2d\u52a0\u5165\u5947\u73af\uff0c\u4e3a\u4e86\u4f7f\u5f97\u589e\u52a0\u7684\u8fb9\u6570\u5c3d\u91cf\u5c0f\uff0c\u6211\u4eec\u589e\u52a0\u4e00\u4e2a**\u81ea\u73af**\u5373\u53ef\uff0c\u56e0\u4e3a\u81ea\u73af\u662f\u6700\u7b80\u5355\u7684\u5947\u73af\u3002\r\n\r\n\u6211\u4eec\u8fd8\u5269\u4e0b\u8fde\u63a5\u4e0d\u540c\u6807\u8bb0\u7684\u4e24\u70b9\u7684\u8fb9\u7684\u96c6\u5408\uff0c\u5f88\u663e\u7136\uff0c\u8fd9\u5fc5\u7136\u662f\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5efa\u7acb\u751f\u6210\u6811\u540e\u6ca1\u5fc5\u8981\u518d\u8fdb\u884c\u5224\u65ad\u3002\r\n\r\n\u6700\u540e\u6ce8\u610f\u4e00\u70b9\uff0c\u5728\u5efa\u751f\u6210\u6811\u65f6\uff0c\u8bb0\u5f97\u8981\u52a0**\u65e0\u5411\u8fb9**\uff0c\u56e0\u4e3a\u201c\u6765\u56de\u8d70\u201d\u7684\u601d\u60f3\u6b63\u662f\u4f53\u73b0\u5728\u6b64\uff0c\u53ea\u6709\u52a0\u65e0\u5411\u8fb9\uff0c\u5728\u679a\u4e3e\u51fa\u8fb9\u7684\u65f6\u5019\u624d\u80fd\u91cd\u590d\u8bbf\u95ee\u5230\u7236\u8282\u70b9\u3002\r\n\r\n## \u5b9e\u4f8b\u8bf4\u660e\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/kipmfgos.png)\r\n\r\n~~\u5199\u5f97\u6709\u70b9\u4e11\uff0c\u522b\u4ecb\u610f\u3002~~\r\n\r\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u4ece$6$\u8d70\u5230$10$\uff0c\u5728\u53ea\u7ecf\u8fc7\u6807\u8bb0\u4e3a$1$\u7684\u70b9\u7684\u60c5\u51b5\u4e0b\u5fc5\u7136\u8981\u7ecf\u8fc7\u5076\u6570\u4e2a\u70b9\u3002\r\n\r\n$4$ $6$ $7$ $10$\u8fd9\u56db\u4e2a\u70b9\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u8fb9\u7ec4\u6210\u7684\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\r\n\r\n\u6839\u636e\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u53bb\u4f8b\u5982\u65e0\u5411\u8fb9$(4,6)$\uff0c\u53ef\u4ee5\u770b\u5230$6$\u4f9d\u7136\u53ea\u80fd\u7ecf\u8fc7\u5076\u6570\u4e2a\u70b9\u5230\u8fbe$10$\u3002\r\n\r\n\u5bf9\u4e8e$11$,\u54ea\u6015\u53bb\u6389\u8fd9\u6761\u8fb9\uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u56de\u6587\u8def\u5f84\u5230\u8fbe$6$\u3002\r\n\r\n\u800c\u4e14\uff0c\u5047\u5982\u5220\u9664\u4e86\u8fd9\u6761\u8fb9\uff0c\u7531\u4e8e$11$->$8$\u8def\u5f84\u5927\u5c0f\u4e3a\u5076\u6570\uff0c$6$->...->$4$\u4e5f\u662f\u5076\u6570\uff0c\u6240\u4ee5$11$\u548c$4$\u603b\u662f\u53ef\u4ee5\u901a\u8fc7\u56de\u6587\u4e32\u8fde\u63a5\uff0c\u5982\u8def\u5f84$11$->$8$->$11$->$8$->$5$->$6$->$10$->$7$->$4$\u3002\r\n\r\n\u4e0b\u9762\u662f\u5947\u73af\u7684\u4f8b\u5b50\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/tqkulqdu.png)\r\n\r\n\u8fd9\u6837\u5904\u7406\u5373\u53ef\uff1a\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/98zrokdp.png)\r\n\r\n## \u9644\u4e0a\u4ee3\u7801\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define maxn 5010\r\n#define N 500010\r\n#define fi first\r\n#define se second\r\n#define mkp make_pair\r\n#define pub push_back\r\nusing namespace std;\r\ntypedef pair<int,int> PII; \r\nstruct line{int to,pre;};\r\nstruct edge{int u,v;};\r\nline b[N*2],b1[maxn*2];\r\nint head[N],head1[maxn],t,t1;\r\nint n,m,Q;\r\nchar s[maxn];\r\nbool f[maxn][maxn],ok;\r\nint vis[maxn],fa[maxn];\r\nqueue<PII>q;//\u7528\u4e8e\u5b58\u50a8\u72b6\u6001 \r\nvector<edge>e1,e2;//\u7528\u4e8e\u5212\u5206\u5b50\u56fe \r\nvoid ad(int x,int y)\r\n{\r\n\tt++;\r\n\tb[t].to=y;\r\n\tb[t].pre=head[x];\r\n\thead[x]=t;\r\n}\r\n//\u5efa\u751f\u6210\u6811\u7684\u8fb9 \r\nvoid ad1(int x,int y)\r\n{\r\n\tt1++;\r\n\tb1[t1].to=y;\r\n\tb1[t1].pre=head1[x];\r\n\thead1[x]=t1;\r\n}\r\nint getf(int x)\r\n{\r\n\tif(x!=fa[x])\r\n\t\tfa[x]=getf(fa[x]);\r\n\treturn fa[x];\r\n}\r\ninline int merge(int x,int y)\r\n{\r\n\tint t1=getf(x),t2=getf(y);\r\n\tif(t1==t2)return 0;\r\n\telse {fa[t2]=t1;return 1;}\r\n}\r\n//\u4e8c\u5206\u56fe\u67d3\u8272\u5224\u5b9a \r\nvoid dfs(int x,int col)\r\n{\r\n\tvis[x]=col;\r\n\tfor(int i=head[x];i;i=b[i].pre)\r\n\t{\r\n\t\tint y=b[i].to;\r\n\t\tif(s[x]==s[y])\r\n\t\t{\r\n\t\t\tif(!vis[y])dfs(y,3-col);\r\n\t\t\telse if(vis[y]==col)ok=0;\r\n\t\t}\r\n\t}\r\n}\r\n//\u5904\u7406\u5947\u73af \r\nvoid check()\r\n{\r\n\tmemset(vis,0,sizeof(vis));\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\tif(!vis[i])\r\n\t\t{\r\n\t\t\tok=1;\r\n\t\t\tdfs(i,1);\r\n\t\t\tif(!ok)ad1(i,i);//\u6dfb\u52a0\u81ea\u73af \r\n\t\t}\r\n\t}\r\n}\r\n//\u521b\u5efa\u751f\u6210\u6811 \r\nvoid generate()\r\n{\r\n\tfor(int i=1;i<=n;++i)fa[i]=i;//\u521d\u59cb\u5316\u5e76\u67e5\u96c6 \r\n\tfor(int i=0;i<e1.size();++i)\r\n\t{\r\n\t\tint x=e1[i].u,y=e1[i].v;\r\n\t\tif(merge(x,y))ad1(x,y),ad1(y,x);\r\n\t}\r\n\tcheck();\r\n\tfor(int i=1;i<=n;++i)fa[i]=i;\r\n\tfor(int i=0;i<e2.size();++i)\r\n\t{\r\n\t\tint x=e2[i].u,y=e2[i].v;\r\n\t\tif(merge(x,y))ad1(x,y),ad1(y,x);\r\n\t}\r\n}\r\n//\u72b6\u6001\u8f6c\u79fb\u90e8\u5206 \r\nvoid dp()\r\n{\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tPII temp=q.front(); q.pop();\r\n\t\tint x=temp.fi,y=temp.se;\r\n\t\tfor(int i=head1[x];i;i=b1[i].pre)\r\n\t\t\tfor(int j=head1[y];j;j=b1[j].pre)\r\n\t\t\t{\r\n\t\t\t\tint u=b1[i].to,v=b1[j].to;\r\n\t\t\t\tif(!(f[u][v]||f[v][u])&&s[u]==s[v])\r\n\t\t\t\t{\r\n\t\t\t\t\tf[u][v]=1;\r\n\t\t\t\t\tf[v][u]=1;\r\n\t\t\t\t\tq.push(mkp(u,v));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tcin>>n>>m>>Q;\r\n\tcin>>s+1;\r\n\tfor(int i=1;i<=m;++i)\r\n\t{\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tif(s[x]==s[y])\r\n\t\t{\r\n\t\t\tf[x][y]=1;\r\n\t\t\tf[y][x]=1;\r\n\t\t\tq.push(mkp(x,y));\r\n\t\t\te1.pub(edge{x,y});\r\n\t\t}\r\n\t\telse\r\n\t\t\te2.pub(edge{x,y});\r\n\t\tad(x,y);\r\n\t\tad(y,x);\r\n\t}\r\n\tfor(int i=1;i<=n;++i)f[i][i]=1,q.push(mkp(i,i));\r\n\tgenerate();\r\n\tdp();\r\n\twhile(Q--)\r\n\t{\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tif(f[x][y]||f[y][x])puts(\"YES\");\r\n\t\telse puts(\"NO\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "postTime": 1660304142,
        "uid": 625380,
        "name": "FriedrichC",
        "ccfLevel": 0,
        "title": "P5292 [HNOI2019]\u6821\u56ed\u65c5\u884c \u9898\u89e3"
    },
    {
        "content": "- \u9996\u5148\u8003\u8651 $30$ \u5206\u7684\u505a\u6cd5\uff0c\u6bd4\u8f83\u663e\u800c\u6613\u89c1\uff1a\n\n\u8bbe $F_{i,j}$ \u8868\u793a $i$ \u5230 $j$ \u662f\u5426\u53ef\u8fbe\uff0c\u8003\u8651\u4efb\u4f55\u7684 $(i,i)$ \u548c\u6709\u8fb9\u4e14\u6743\u503c\u76f8\u7b49\u7684 $(u,v)$ \u90fd\u662f\u53ef\u8fbe\u7684\uff0c\u6211\u4eec\u9996\u5148\u628a\u8fd9\u6837\u7684\u4e8c\u5143\u7ec4 $(x,y)$ \u6254\u8fdb\u961f\u5217\u91cc\n\n\u63a5\u7740\u4ece\u961f\u5217\u91cc\u4f9d\u6b21 $(x,y)$ \uff0c\u679a\u4e3e\u4e00\u6761\u8fde\u63a5 $x$ \u7684\u8fb9\uff0c\u4e00\u6761\u8fde\u63a5 $y$ \u7684\u8fb9\uff0c\u5224\u65ad\u8fb9\u7684\u53e6\u5916\u4e24\u4e2a\u7aef\u70b9 $i$ \u548c $j$ \u6743\u503c\u662f\u5426\u76f8\u540c\uff0c\u82e5\u76f8\u540c\uff0c\u66f4\u65b0 $F_{i,j}$ \u540e\u628a $(i,j)$ \u6254\u8fdb\u961f\u5217\u91cc\n\n\u8fd9\u6837\u505a\u76f8\u5f53\u4e8e\u679a\u4e3e\u4e86\u6bcf\u4e00\u5bf9\u8fb9\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(M^2)$\n\n- \u63a5\u7740\u8003\u8651\u6ee1\u5206\u505a\u6cd5\n\n\u6ca1\u6709\u529e\u6cd5\u6362\u6389\u539f\u5148\u7684\u72b6\u6001\u8f6c\u79fb\uff0c\u539f\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(M^2)$ \uff0c\u8003\u8651\u628a $M$ \u964d\u5230\u4e0e $N$ \u540c\u9636\n\n\u9996\u5148\u628a\u6743\u503c\u76f8\u540c\u7684\u8fde\u901a\u5757\u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u73b0\u5728\u53ea\u5269\u8fde\u63a5\u989c\u8272\u4e0d\u540c\u7684\u70b9\u7684\u8fb9\u4e86\n\n\u8fd9\u4e1c\u897f\u663e\u7136\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u53ea\u4fdd\u7559\u5176\u4e2d\u7684\u4e00\u68f5\u751f\u6210\u6811\u5373\u53ef\uff08\u56e0\u4e3a\u6ca1\u6709\u5947\u73af\uff0c\u800c\u6bcf\u6b21\u8f6c\u79fb\u90fd\u662f\u679a\u4e3e\u4e00\u5bf9\u8fb9\uff09\n\n\u63a5\u7740\u8003\u8651\u8054\u901a\u5757\u5185\uff0c\u65e2\u7136\u521a\u624d\u90fd\u626f\u5230\u4e86\u4e8c\u5206\u56fe\uff0c\u73b0\u5728\u4e5f\u7ee7\u7eed\u5f80\u8fd9\u60f3\n\n\u5982\u679c\u8fde\u901a\u5757\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u548c\u521a\u624d\u540c\u7406\uff0c\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\n\n\u5982\u679c\u4e0d\u662f\u5462\uff1f\u539f\u672c\u662f\u53ef\u4ee5\u6539\u53d8\u5947\u5076\u6027\u7684\uff0c\u53ea\u4fdd\u7559\u751f\u6210\u6811\u540e\u5374\u4e0d\u884c\u4e86\uff0c\u6240\u4ee5\u5f97\u52a0\u4e0a\u4e00\u4e2a\u80fd\u6539\u53d8\u5947\u5076\u6027\u7684\u4e1c\u897f\n\n\u4e3a\u4e86\u65b9\u4fbf\u548c\u8fb9\u6570\u7684\u9650\u5236\uff0c\u8fd8\u8981\u968f\u4fbf\u9009\u4e2a\u70b9\u8fde\u81ea\u73af\n\n~~70\u5206\u662f\u7ed9\u8c01\u7684?\u6ca1\u9519\uff0c\u662f\u7ed9\u6211\u8fd9\u79cd\u7528\u4e00\u5806STL\u53c8\u4e0d\u5f00O2\u7684\u4eba~~\n\n- \u4ee3\u7801\uff08\u8981\u5f00 O2 \uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <utility>\n#include <vector>\n#include <queue>\nusing namespace std;\ninline int read(){\n    char ch=getchar();int res=0,w=1;\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {res=res*10+ch-'0';ch=getchar();}\n    return res*w;\n}\nint n,m,qu,a[5001],f[5001];\nbool flag,ans[5001][5001];\nchar s[5002];\nvector<int> ee[5001],e[5001];\nqueue<pair<int,int> > q;\nint Find(int x) {return f[x]==x?x:f[x]=Find(f[x]);}//\u5e76\u67e5\u96c6\u641e\u5927\u751f\u6210\u6811\nvoid dfs(int x,int co){//\u4e8c\u5206\u56fe\u67d3\u8272\u548c\u5f80\u961f\u5217\u91cc\u6254\u521d\u59cb\u7684(u,v)\n\ta[x]=co;\n\tfor(register int i=0;i<ee[x].size();i++)\n\t\tif(s[ee[x][i]]==s[x])\n\t\t{\n\t\t\tif(a[ee[x][i]]==a[x]) flag=true;//\u4e0d\u662f\u4e8c\u5206\u56fe\n\t\t\tif(!a[ee[x][i]]) {dfs(ee[x][i],co^1);ans[x][ee[x][i]]=ans[ee[x][i]][x]=true;e[x].push_back(ee[x][i]);e[ee[x][i]].push_back(x);q.push(make_pair(x,ee[x][i]));}\n\t\t}\n}\nsigned main(){\n\tn=read();m=read();qu=read();scanf(\"%s\",s+1);\n\tfor(register int i=1;i<=n;i++) f[i]=i;\n\twhile(m--)\n\t{\n\t\tint u=read(),v=read();ee[u].push_back(v);ee[v].push_back(u);\n\t\tif(s[u]!=s[v])\n\t\t{\n\t\t\tint fx=Find(u),fy=Find(v);\n\t\t\tif(fx!=fy) {f[fx]=fy;e[u].push_back(v);e[v].push_back(u);}//\u5927\u751f\u6210\u6811\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!a[i])\n\t\t{\n\t\t\tflag=false;dfs(i,114514);\n\t\t\tif(flag) e[i].push_back(i);//\u8fde\u81ea\u73af\n\t\t}\n\tfor(register int i=1;i<=n;i++) {ans[i][i]=true;q.push(make_pair(i,i));}//\u628a(i,i)\u6254\u8fdb\u53bb\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front().first,y=q.front().second;q.pop();\n\t\tfor(register int i=0;i<e[x].size();i++)\n\t\t\tfor(register int j=0;j<e[y].size();j++)\n\t\t\t\tif(!ans[e[x][i]][e[y][j]]&&s[e[x][i]]==s[e[y][j]]) {ans[e[x][i]][e[y][j]]=ans[e[y][j]][e[x][i]]=true;q.push(make_pair(e[x][i],e[y][j]));}\n\t}\n\twhile(qu--) puts(ans[read()][read()]?\"YES\":\"NO\");\n    return 0;\n}\n\n```",
        "postTime": 1584199587,
        "uid": 80679,
        "name": "Register",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/Luogu5292.html )\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u7ed9\u4f60\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6743\u503c\u4e3a$0$\u6216$1$\uff0c\u591a\u7ec4\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84\u3002\n\n### \u66b4\u529b$DP$\n\n\u9996\u5148\uff0c\u770b\u5230$n$\u5982\u6b64\u4e4b\u5c0f\uff08$n\\le5000$\uff09\uff0c\u4fbf\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a$O(m^2)$\u7684\u66b4\u529b$DP$\u3002\n\n\u6211\u4eec\u7528$f_{i,j}$\u8868\u793a**$i$\u4e0e$j$\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84**\u3002\n\n\u521d\u59cb\u5316\uff0c$f_{i,i}=1,f_{i,j}=1(s_i=s_j)$\uff0c\u5373\u5206\u522b\u9884\u5904\u7406\u6700\u77ed\u7684\u5947\u6570\u957f\u5ea6\u56de\u6587\u8def\u5f84\u548c\u5076\u6570\u957f\u5ea6\u56de\u6587\u8def\u5f84\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u6240\u6709$f_{i,j}=1$\u7684\u70b9\u5bf9$(i,j)$\u6254\u5165\u4e00\u4e2a\u961f\u5217\u91cc\uff0c\u7528\u7c7b\u4f3c\u4e8e$BFS$\u7684\u65b9\u5f0f\uff0c\u6bcf\u6b21\u679a\u4e3e$i$\u7684\u4e00\u4e2a\u76f8\u90bb\u8282\u70b9$x$\u4e0e$j$\u7684\u4e00\u4e2a\u76f8\u90bb\u8282\u70b9$y$\uff0c\u5982\u679c$s_x=s_y$\uff0c\u5219\u663e\u7136\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84$x->i->j->y$\uff0c\u56e0\u6b64\u66f4\u65b0$f_{x,y}=1$\u5e76\u5c06$(x,y)$\u6254\u5165\u961f\u5217\u91cc\u3002\n\n\u8fd9\u91cc\u8981\u52a0\u4e0a\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4f18\u5316\uff0c\u5373\u5982\u679c$f_{x,y}$\u539f\u672c\u5c31\u4e3a$1$\uff0c\u6211\u4eec\u5c31\u4e0d\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u8fd9\u6837\u6bcf\u7ec4\u70b9\u5bf9\u6700\u591a\u88ab\u679a\u4e3e\u4e00\u6b21\uff0c\u8fd9\u91cc\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\u3002\n\n\u4f46\u679a\u4e3e\u76f8\u90bb\u8282\u70b9\u65f6\u8981\u540c\u65f6\u679a\u4e3e\u4e24\u6761\u8fb9\uff0c\u56e0\u6b64\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(m^2)$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5c31\u5728\u4e8e\u679a\u4e3e\u4e24\u6761\u8fb9\u8fd9\u91cc\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8003\u8651\u5bf9\u8fd9\u4e2a\u5730\u65b9\u8fdb\u884c\u4f18\u5316\u3002\n\n### \u5947\u5076\u6027\u4e0e\u4e8c\u5206\u56fe\u6027\u8d28\n\n\u6211\u4eec\u5148\u8003\u8651**\u53ea\u5728\u540c\u8272\u70b9\u4e4b\u95f4\u8fde\u8fb9**\u3002\n\n\u8003\u8651\u5230**\u6bcf\u6761\u8fb9\u53ef\u4ee5\u91cd\u590d\u591a\u6b21**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u8f6c\u79fb\u65f6\u5982\u679c\u5728\u4e00\u6761\u8fb9\u4e0a\u65e0\u9650\u8d70\uff0c\u5219\u53ef\u4ee5\u65e0\u9650\u5237\u957f\u5ea6\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u65e0\u9650\u5237\u957f\u5ea6\u4e0d\u4e00\u5b9a\u80fd\u6539\u53d8**\u5947\u5076\u6027**\u3002\n\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u81f3\u5c11\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5728$DP$\u8f6c\u79fb\u65f6\uff0c\u53ea\u8981\u662f\u5947\u5076\u6027\u76f8\u540c\u7684\u4e00\u6bb5\u540c\u8272\u8def\u5f84\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u5947\u5076\u6027\u4e0d\u540c\u4e5f\u53ef\u4ee5\u8f6c\u79fb\u5462\uff1f\n\n\u8fd9\u65f6\u5019\u5c31\u8981\u501f\u52a9**\u4e8c\u5206\u56fe**\u7684\u5b9a\u4e49\u6765\u6c42\u89e3\u4e86\u3002\n\n\u8003\u8651\u5148\u5224\u65ad\u5f53\u524d\u56fe\u662f\u5426\u662f\u4e8c\u5206\u56fe\uff0c\u8fd9\u53ea\u9700\u8981$DFS$\u7ed9\u76f8\u90bb\u70b9\u67d3\u4e0d\u540c\u989c\u8272\uff0c\u51fa\u73b0\u77db\u76fe\u5c31\u8bf4\u660e\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u5426\u5219\u662f\u4e8c\u5206\u56fe\u3002\n\n\u800c\u4e8c\u5206\u56fe\u6709\u4e2a\u6027\u8d28\uff0c\u5373\u53ef\u4ee5\u5c06\u56fe\u4e2d\u70b9\u96c6\u5212\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u540c\u4e00\u90e8\u5206\u7684\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u5fc5\u7136\u8981\u6cbf\u7740\u8fd9\u4e00\u4e2a\u70b9\u96c6$->$\u53e6\u4e00\u4e2a\u70b9\u96c6$->$\u8fd9\u4e00\u4e2a\u70b9\u96c6$->$\u53e6\u4e00\u4e2a\u70b9\u96c6$->...->$\u8fd9\u4e00\u4e2a\u70b9\u96c6\u8fd9\u6837\u7684\u8def\u5f84\u8d70\u624d\u80fd\u8d70\u56de\u5230\u8be5\u70b9\uff0c\u5219\u7ecf\u8fc7\u8fb9\u6570\u4e3a\u5076\u6570\uff0c\u65e0\u6cd5\u6539\u53d8\u5947\u5076\u6027\u3002\n\n\u5426\u5219\uff0c\u56fe\u4e2d\u5fc5\u7136\u5b58\u5728\u5947\u73af\uff0c\u800c\u901a\u8fc7\u5947\u73af\u5c31\u53ef\u4ee5\u6539\u53d8\u5947\u5076\u6027\u4e86\u3002\n\n### \u5927\u529b\u5220\u8fb9\n\n\u6240\u4ee5\u6211\u4eec\u524d\u9762\u8bb2\u4e86\u8fd9\u4e48\u591a\u662f\u8981\u5e72\u4ec0\u4e48\u5462\uff1f\u5c31\u662f\u4e3a\u4e86\u5220\u6389\u56fe\u4e2d\u7684\u4e00\u4e9b\u8fb9\uff0c\u4f7f\u8fb9\u6570\u53d8\u6210$O(n)$\u89c4\u6a21\u3002\n\n\u6211\u4eec\u8981\u660e\u767d\u4e8c\u5206\u56fe\u7684\u53e6\u4e00\u4e2a\u6027\u8d28\uff0c\u5373\u4e8c\u5206\u56fe\u7684\u4e00\u68f5\u751f\u6210\u6811\u4e5f\u6ee1\u8db3\u4e8c\u5206\u56fe\u6027\u8d28\uff0c\u65e0\u6cd5\u6539\u53d8\u5947\u5076\u6027\u3002\n\n\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u662f\u4e8c\u5206\u56fe\u7684\u540c\u8272\u8fde\u901a\u5757\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u3002\n\n\u800c\u5bf9\u4e8e\u4e0d\u662f\u4e8c\u5206\u56fe\u7684\u8fde\u901a\u5757\uff0c\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u53d6\u4e00\u68f5\u751f\u6210\u6811\uff0c\u7136\u540e\u53ea\u8981\u7ed9\u8fd9\u5f20\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u52a0\u4e0a\u4e00\u4e2a\u81ea\u73af\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u6539\u53d8\u5947\u5076\u6027\uff0c\u4e0e\u539f\u8fde\u901a\u5757\u662f\u7b49\u4ef7\u7684\u3002\n\n\u800c\u5bf9\u4e8e**\u53ea\u5728\u5f02\u8272\u70b9\u4e4b\u95f4\u8fde\u8fb9**\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u89c4\u5f8b\uff0c\u800c\u4e14\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u5fc5\u5b9a\u662f\u4e8c\u5206\u56fe\uff08\u5c06\u70b9\u96c6\u6309\u989c\u8272\u5212\u5206\u6210\u4e24\u4e2a\u70b9\u96c6\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fdd\u7559\u751f\u6210\u6811\u3002\n\n\u4e8e\u662f\u70b9\u4e00\u4e0b\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309\u524d\u9762\u7684\u66b4\u529b$DP$\u6765\u641e\u4e86\uff01\n\n\u8fd9\u65f6\u8fb9\u6570\u662f$O(n)$\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u662f$O(n^2)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Tp template<typename Ty>\n#define Ts template<typename Ty,typename... Ar>\n#define Reg register\n#define RI Reg int\n#define Con const\n#define CI Con int&\n#define I inline\n#define W while\n#define N 5000\n#define M 500000\n#define mp make_pair\n#define fir first\n#define sec second\n#define add(x,y) (e[++ee].nxt=lnk[x],e[lnk[x]=ee].to=y)\nusing namespace std;\nint n,m,ee,H,T,lnk[N+5],f[N+5][N+5];string s;\nstruct edge {int to,nxt;}e[(M<<1)+5];\ntypedef pair<int,int> Pr;Pr q[N*N+5];\nclass FastIO\n{\n\tprivate:\n\t\t#define FS 100000\n\t\t#define tc() (A==B&&(B=(A=FI)+fread(FI,1,FS,stdin),A==B)?EOF:*A++)\n\t\t#define tn (x<<3)+(x<<1)\n\t\t#define D isdigit(c=tc())\n\t\tchar c,*A,*B,FI[FS];\n\tpublic:\n\t\tI FastIO() {A=B=FI;}\n\t\tTp I void read(Ty& x) {x=0;W(!D);W(x=tn+(c&15),D);}\n\t\tTs I void read(Ty& x,Ar&... y) {read(x),read(y...);}\n\t\tI void reads(string& x) {x=\"\";W(isspace(c=tc()));W(x+=c,!isspace(c=tc())&&~c);}\n}F;\nclass GraphBuilder//\u5efa\u65b0\u56fe\n{\n\tprivate:\n\t\t#define nadd(x,y) (ne[++nee].nxt=nlnk[x],ne[nlnk[x]=nee].to=y)//\u5efa\u65b0\u8fb9\n\t\tint nee,t,col[N+5];\n\t\tI void Travel(CI x,CI op)//\u626b\u4e00\u904d\u8fde\u901a\u5757\uff08op\u8868\u793a\u53ea\u80fd\u5728\u540c\u8272/\u5f02\u8272\u70b9\u95f4\u8fde\u8fb9\uff09\uff0c\u5efa\u597d\u751f\u6210\u6811\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u4e3a\u4e8c\u5206\u56fe\n\t\t{\n\t\t\tfor(RI i=lnk[x];i;i=e[i].nxt) (s[x-1]==s[e[i].to-1])==op&&\n\t\t\t(\n\t\t\t\tcol[e[i].to]?(col[x]==col[e[i].to]&&(t=0))//\u5982\u679c\u4ea7\u751f\u77db\u76fe\u8bf4\u660e\u4e0d\u662f\u4e8c\u5206\u56fe\n\t\t\t\t:(col[e[i].to]=3-col[x],Travel(e[i].to,op),nadd(x,e[i].to),nadd(e[i].to,x))//\u7ed9\u76f8\u90bb\u70b9\u67d3\u4e0a\u4e0d\u540c\u989c\u8272\n\t\t\t);\n\t\t}\n\tpublic:\n\t\tint nlnk[N+5];edge ne[(M<<1)+5];\n\t\tI void Build()//\u5efa\u56fe\n\t\t{\n\t\t\t#define Clear() for(i=1;i<=n;++i) col[i]=0\n\t\t\tRI i;Clear();for(i=1;i<=n;++i) !col[i]&&(col[i]=t=1,Travel(i,1),!t&&nadd(i,i));//\u5bf9\u4e8e\u975e\u4e8c\u5206\u56fe\u5efa\u4e00\u4e2a\u81ea\u73af\n\t\t\tClear();for(i=1;i<=n;++i) !col[i]&&(col[i]=1,Travel(i,0),0);\n\t\t}\n}G;\n#define Push(x,y) (q[++T]=mp(x,y),f[x][y]=f[y][x]=1)\nI void DP()//\u52a8\u6001\u89c4\u5212\n{\n\tRI i,j;Pr k;W(H<=T) for(i=G.nlnk[(k=q[H++]).fir];i;i=G.ne[i].nxt)//\u679a\u7b2c\u4e00\u4e2a\u70b9\u7684\u76f8\u90bb\u8282\u70b9\n\t\tfor(j=G.nlnk[k.sec];j;j=G.ne[j].nxt) s[G.ne[i].to-1]==s[G.ne[j].to-1]&&//\u679a\u7b2c\u4e8c\u4e2a\u70b9\u7684\u76f8\u90bb\u8282\u70b9\n\t\t\t!f[G.ne[i].to][G.ne[j].to]&&Push(G.ne[i].to,G.ne[j].to);//\u6254\u5165\u961f\u5217\u4e2d\n}\nint main()\n{\n\tRI Qtot,i,x,y;for(F.read(n,m,Qtot),F.reads(s),i=1;i<=m;++i)//\u8bfb\u5165\u6570\u636e\n\t\tF.read(x,y),add(x,y),add(y,x),s[x-1]==s[y-1]&&Push(x,y);//\u521d\u59cb\u5316\u961f\u5217\n\tfor(G.Build(),i=1;i<=n;++i) Push(i,i);DP();//\u5efa\u65b0\u56fe\uff0c\u521d\u59cb\u5316\u961f\u5217\uff0c\u7136\u540eDP\n\tW(Qtot--) F.read(x,y),puts(f[x][y]?\"YES\":\"NO\");return 0;//\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8f93\u51fa\u7b54\u6848\n}\n```",
        "postTime": 1555589232,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "# \u4e00\u4e2a\u8fb9\u754c\u6570\u636e\n\n\u8003\u8651\u5982\u4e0b\u6570\u636e\uff1a\n\n```text\n9 9 1\n101011101\n1 2\n2 3\n3 4\n1 4\n4 5\n5 6\n6 7\n7 8\n8 9\n1 9\n```\n\n\u5b83\u8be2\u95ee\u4e0b\u56fe\u4e2d$1$\u5230$9$\u662f\u5426\u6709\u56de\u6587\u4e32\uff1a\n\n![](https://images.cnblogs.com/cnblogs_com/blogs/516461/galleries/1664237/o_210708074142graph.png)\n\n\u5176\u4e2d\u62ec\u53f7\u91cc\u7684\u662f\u989c\u8272\uff0c\u62ec\u53f7\u5916\u7684\u662f\u8282\u70b9\u7f16\u53f7\uff0c\u52a0\u9ed1\u7684\u70b9\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002\n\n\u5982\u679c\u6309\u9898\u89e3\u91cc\u7684\u7b97\u6cd5\uff0c\u5efa\u51fa\u6765\u7684\u56fe\u662f\u8fd9\u6837\u7684\uff1a\uff08\u4e0d\u4fe1\u53ef\u4ee5\u968f\u4fbf\u7528\u4e00\u4e2a[AC\u4ee3\u7801](https://loj.ac/s/1144807)\u8bd5\u8bd5\u770b\u2014\u2014\u5982\u679c\u61d2\u7684\u81ea\u5df1\u6539\u53ef\u4ee5\u770b\u6587\u672b\u9644\u7684\u4ee3\u7801\uff09\n\n![](https://images.cnblogs.com/cnblogs_com/blogs/516461/galleries/1664237/o_210708074512graph%20(1).png)\n\n\u770b\u4f3c\u539f\u6765\u7684\u56de\u6587\u4e32\u88ab\u7834\u574f\u4e86\uff0c\u4f1a\u8f93\u51fa`NO`\uff0c\u4f46\u5176\u5b9e$1$\u5230$9$\u4e4b\u95f4\u8fd8\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u56de\u6587\u4e32`10101110101`\uff1a\n\n$$\n1\\to2\\to3\\to4\\to5\\to6\\to7\\to8\\to7\\to8\\to9\n$$\n\n\u7b54\u6848\u4ecd\u7136\u662f`YES`\uff0c\u662f\u6b63\u786e\u7684\uff01\u8fd9\u662f\u56e0\u4e3a$1-0$\u8fb9\u4e5f\u53ef\u4ee5\u53cd\u590d\u7ecf\u8fc7\uff0c\u53ef\u4ee5\u5c06$1-0$\u6269\u5c55\u6210$1-0-1-0-\\dots-1-0$\uff0c\u539f\u672c\u7684\u56de\u6587\u4e32\u4f9d\u7136\u53ef\u4ee5\u53d8\u4e3a\u65b0\u7684\u56de\u6587\u4e32\u3002\n\n## \u5b9e\u9a8c\u4ee3\u7801\n\n```cpp\n#include \"bits/stdc++.h\"\n#define N 5005\nusing namespace std;\nint n, m, p, l = 1, r, c[N], fa[N];\nchar str[N], f[N][N];\nstruct Node {\n    int x, y;\n} q[N * N];\nvector<int>g[N], G[N];\ninline int getf(int x) {\n    return x == fa[x] ? x : fa[x] = getf(fa[x]);\n}\nvoid A(int x, int y) {\n    f[x][y] = f[y][x] = 1, q[++r] = {min(x, y), max(x, y)};\n}\ninline char dfs(int x, int C) {\n    char res = 0;\n    c[x] = C;\n\n    for (int y : g[x])\n        if (c[y] == -1)\n            G[x].push_back(y), G[y].push_back(x), res |= dfs(y, C ^ 1), A(x, y);\n        else if (c[y] == C)\n            res = 1;\n\n    return res;\n}\nint main(void) {\n\tfreopen(\"a.in\", \"r\", stdin);\n\tfreopen(\"a.out\", \"w\", stdout);\n    int i, x, y, a, b;\n    scanf(\"%d%d%d%s\", &n, &m, &p, str + 1);\n\n    for (i = 1; i <= n; ++i)\n        fa[i] = i;\n\n    for (i = 1; i <= m; ++i) {\n        scanf(\"%d%d\", &x, &y);\n\n        if (str[x] == str[y])\n            g[x].push_back(y), g[y].push_back(x);\n        else {\n            if ((a = getf(x)) ^ (b = getf(y)))\n                fa[a] = b, G[x].push_back(y), G[y].push_back(x);\n        }\n    }\n\n    for (i = 1; i <= n; ++i)\n        c[i] = -1;\n\n    for (i = 1; i <= n; ++i) {\n        if (c[i] == -1 && dfs(i, 0))\n            G[i].push_back(i);\n\n        A(i, i);\n    }\n\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j: G[i]) if (j >= i) {\n\t\t\tprintf(\"%d %d\\n\", i, j);\n\t\t}\n\t}\n\n    while (l <= r) {\n        x = q[l].x, y = q[l].y, ++l;\n\n        for (int a : G[x])\n            for (int b : G[y]) {\n//\t\t\t\tprintf(\"%d %d->%d %d\\n\", x, y, a, b);\n                if (str[a] == str[b] && !f[a][b])\n                    A(a, b);\n\t\t\t}\n    }\n\n    while (p--)\n        scanf(\"%d%d\", &x, &y), puts(f[x][y] ? \"YES\" : \"NO\");\n\n    return 0;\n}\n```",
        "postTime": 1625731271,
        "uid": 73915,
        "name": "frank3215",
        "ccfLevel": 9,
        "title": "[HNOI2019] \u6821\u56ed\u65c5\u884c \u2014\u2014 \u4e00\u4e2a\u8fb9\u754c\u6570\u636e"
    },
    {
        "content": "\u975e\u5e38\u5999\u7684\u4e00\u9053\u601d\u535a\u9898\u554a\uff0c\u4e0d\u6127\u662fmyy\u51fa\u7684\u9898\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u66b4\u529bDP\uff0c\u76f4\u63a5\u5f00\u4e00\u4e2a\u6570\u7ec4$f_{i,j}$\u8868\u793a$i\\to j$\u7684\u8def\u5f84\u80fd\u5426\u6784\u6210\u56de\u6587\u4e32\n\n\u8003\u8651\u76f4\u63a5\u62ff\u4e00\u4e2a\u961f\u5217\u6765\u8f6c\u79fb\uff0c\u961f\u5217\u91cc\u5b58\u7684\u90fd\u662f$f_{i,j}=1$\u7684\u70b9\u5bf9\uff0c\u7136\u540e\u6bcf\u6b21\u679a\u4e3e\u4e24\u8fb9\u7684\u8fb9\u66f4\u65b0\u7b54\u6848\u5e76\u6269\u5c55\u5373\u53ef\n\n\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(m^2)$\u7684\uff0c\u4e0d\u591f\u4f18\u79c0\u3002\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u8fd9\u79cd\u65b9\u6cd5\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u6709\u5f88\u591a**\u65e0\u7528\u8fb9**\u5bfc\u81f4\u6211\u4eec\u6d6a\u8d39\u4e86\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5220\u53bb\u4e00\u4e9b\u8fb9\n\n\u6211\u4eec\u9996\u5148\u5728\u539f\u56fe\u4e0a\u628a\u6240\u6709**\u540c\u8272\u70b9**\u95f4\u7684\u8fb9\u8fde\u8d77\u6765\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u7ecf\u8fc7\u4efb\u610f\u6b21\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651**\u5947\u5076\u6027**\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u80fd\u8ba9\u5230\u4e00\u4e2a\u70b9\u7684\u5947\u5076\u6027\u6539\u53d8\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5b58\u5728**\u5947\u73af**\n\n\u6211\u4eec\u518d\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\u6ca1\u6709\u5947\u73af\uff0c\u90a3\u4e48\u5b83\u5c31\u662f**\u4e8c\u5206\u56fe**\uff0c\u800c\u4e8c\u5206\u56fe\u7684\u4e00\u4e2a**\u751f\u6210\u6811**\u663e\u7136\u4e5f\u6ee1\u8db3\u5982\u4e0a\u7684\u6027\u8d28\n\n\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u6b64\u65f6\u6784\u6210\u7684\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u6211\u4eec\u6c42\u51fa\u5b83\u7684\u751f\u6210\u6811\u5373\u53ef\n\n\u4f46\u662f\u5982\u679c\u4e0d\u662f\u5462\uff0c\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u8003\u8651\u6700\u7b80\u5355\u7684\u5947\u73af\u662f\u4ec0\u4e48\uff0c\u5176\u5b9e\u5c31\u662f**\u81ea\u73af**\n\n\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u627e\u4e00\u4e2a\u70b9\u7ed9\u5b83\u8fde\u4e00\u4e2a\u81ea\u73af\u5e2e\u52a9\u8f6c\u79fb\u5373\u53ef\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u53ea\u6709\u5f02\u8272\u70b9\u4e4b\u95f4\u7684\u8fb9\u4e86\uff0c\u8fd9\u4e2a\u7531\u4e8e\u5b83\u90fd\u5e2e\u4f60\u67d3\u8272\u597d\u4e86\uff0c\u6240\u4ee5\u5fc5\u7136\u662f\u4e8c\u5206\u56fe\uff0c\u76f4\u63a5\u6c42\u751f\u6210\u6811\u5373\u53ef\n\n\u7efc\u4e0a\uff0c\u6b64\u65f6\u7684\u8fb9\u6570\u53ea\u6709$O(n)$\u7ea7\u522b\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u5c31\u662f$O(n^2)$\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<utility>\n#include<cstring>\n#define RI register int\n#define CI const int&\n#define Ms(f,x) memset(f,x,sizeof(f))\nusing namespace std;\nconst int N=5005,M=500005;\ntypedef pair <int,int> pi;\nstruct edge\n{\n    int to,nxt;\n}e[M<<1],ne[M<<1]; bool f[N][N],flag; pi q[N*N];\nchar s[N]; int n,m,t,H,T,head[N],nhead[N],cnt,x,y,col[N];\ninline void addedge(CI x,CI y)\n{\n    e[++cnt]=(edge){y,head[x]}; head[x]=cnt;\n    e[++cnt]=(edge){x,head[y]}; head[y]=cnt;\n}\ninline void nadd(CI x,CI y)\n{\n    ne[++cnt]=(edge){y,nhead[x]}; nhead[x]=cnt;\n}\ninline void push(CI x,CI y)\n{\n    f[x][y]=f[y][x]=1; q[++T]=make_pair(x,y);\n}\n#define to e[i].to\ninline void DFS(CI now,CI tp)\n{\n    for (RI i=head[now];i;i=e[i].nxt) if ((s[now]==s[to])==tp)\n    {\n        if (~col[to]) { if (col[to]==col[now]) flag=0; }\n        else col[to]=col[now]^1,DFS(to,tp),nadd(now,to),nadd(to,now);\n    }\n}\n#undef to\nint main()\n{\n    //freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n    RI i,j; for (scanf(\"%d%d%d%s\",&n,&m,&t,s+1),i=1;i<=m;++i)\n    scanf(\"%d%d\",&x,&y),addedge(x,y),s[x]==s[y]&&(push(x,y),0); cnt=0; Ms(col,-1);\n    for (i=1;i<=n;++i) if (!~col[i]&&(col[i]=flag=1,DFS(i,1),!flag)) nadd(i,i);\n    for (Ms(col,-1),i=1;i<=n;++i) if (!~col[i]) col[i]=1,DFS(i,0);\n    for (i=1;i<=n;++i) push(i,i); while (H<T)\n    {\n        ++H; int x=q[H].first,y=q[H].second;\n        for (i=nhead[x];i;i=ne[i].nxt) for (j=nhead[y];j;j=ne[j].nxt)\n        if (s[ne[i].to]==s[ne[j].to]&&!f[ne[i].to][ne[j].to]) push(ne[i].to,ne[j].to);\n    }\n    while (t--) scanf(\"%d%d\",&x,&y),puts(f[x][y]?\"YES\":\"NO\"); return 0;\n}\n```\n\n",
        "postTime": 1555890026,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f[\u5b98\u65b9\u9898\u89e3](http://matthew99.blog.uoj.ac/blog/4968)\u3002\n\n\u5bf9\u4e8e$30$\u5206\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u505a\u6cd5\uff1a\u8bbe$f[i][j]$\u8868\u793a$i\\to j$\u7684\u7b54\u6848\uff0c\u7136\u540e\u679a\u4e3e$i,j$\u7684\u51fa\u8fb9\u8f6c\u79fb\uff0c\u8fd9\u6837\u505a\u662f$O(m^2)$\u7684\u3002\n\n\u5bf9\u4e8e$100$\u5206\uff0c\u6ce8\u610f\u5230\u70b9\u7684\u89c4\u6a21\u6ca1\u53d8\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u7f29\u8fb9\u7684\u60f3\u6cd5\u3002\n\n\u6211\u4eec\u628a\u8fb9\u5206\u6210\u4e09\u7c7b\uff0c\u540c\u8272\u7684\u4e24\u79cd\u548c\u5f02\u8272\u7684\u4e00\u79cd\uff0c\u5bf9\u6bcf\u7c7b\u5206\u522b\u5efa\u56fe\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8054\u901a\u5757\u8fdb\u884c\u8003\u8651\uff1a\n\n- \u5982\u679c\u5f53\u524d\u8054\u901a\u5757\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bf4\u660e\u4ece$i$\u70b9\u5230$j$\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u6570\u5fc5\u7136\u53ea\u80fd\u662f\u5947\u6570\u6216\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u4efb\u610f\u5904\u7406\u51fa\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u68f5\u751f\u6210\u6811\u548c\u539f\u56fe\u7b49\u4ef7\uff08\u5982\u679c\u8fd9\u8fb9\u591a\u8d70\u4e86\u5c31\u5728\u53e6\u4e00\u8fb9\u6765\u56de\u8d70\u4ee5\u62b5\u6d88\uff09\u3002\n- \u5982\u679c\u5f53\u524d\u8054\u901a\u5757\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u8fb9\u6570\u53ef\u4ee5\u662f\u5947\u6570\u6216\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u751f\u6210\u6811\u4efb\u610f\u52a0\u4e00\u4e2a\u81ea\u73af\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u6ee1\u8db3\u8fb9\u6570\u4efb\u610f\u5947\u5076\uff0c\u6ce8\u610f\u5f02\u8272\u8fb9\u5efa\u51fa\u6765\u7684\u56fe\u4e0d\u53ef\u80fd\u6709\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u7f29\u5b8c\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u8fb9\u6570\u662f$O(n)$\u7ea7\u522b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5957\u7528\u4e0a\u8fb9\u7684\u66b4\u529b\uff0c\u590d\u6742\u5ea6\u8fbe\u5230\u4e86$O(n^2)$\uff0c\u8db3\u5df2\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n \nvoid read(int &x) {\n    x=0;int f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-f;\n    for(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';x*=f;\n}\n \nvoid print(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(!x) return ;print(x/10),putchar(x%10+48);\n}\nvoid write(int x) {if(!x) putchar('0');else print(x);putchar('\\n');}\n\n#define lf double\n#define ll long long \n\nconst int maxn = 2e5+10;\nconst int inf = 1e9;\nconst lf eps = 1e-8;\n\nchar s[maxn];\nint n,m,Q,vis[maxn],sta[maxn],top,f[5050][5050],flag;\n\nstruct Graph {\n\tint head[maxn],tot,fa[maxn];\n\tstruct edge{int to,nxt;}e[maxn*20];\n\t\n\tvoid add(int u,int v) {e[++tot]=(edge){v,head[u]},head[u]=tot;}\n\tvoid ins(int u,int v) {add(u,v),add(v,u);}\n\n\tvoid dfs(int x,int c) {\n\t\tvis[x]=c,sta[++top]=x;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\tif(!vis[e[i].to]) dfs(e[i].to,3-c),fa[e[i].to]=x;\n\t\t\telse flag|=(vis[e[i].to]!=3-c);\n\t}\n\n\tvoid solve() {\n\t\tqueue<pair<int,int > > q;\n\t\tfor(int i=1;i<=n;i++) f[i][i]=1,q.push(make_pair(i,i));\n\t\tfor(int x=1;x<=n;x++)\n\t\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\t\tif(s[x]==s[e[i].to]) f[x][e[i].to]=1,q.push(make_pair(x,e[i].to));\n\t\twhile(!q.empty()) {\n\t\t\tint x=q.front().first,y=q.front().second;q.pop();\n\t\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t\t\tfor(int u,v,j=head[y];j;j=e[j].nxt)\n\t\t\t\t\tif(s[u=e[i].to]==s[v=e[j].to])\n\t\t\t\t\t\tif(!f[u][v]) f[u][v]=1,q.push(make_pair(u,v));\n\t\t}\n\t}\n}g[3],t;\n\nint main() {\n\tread(n),read(m),read(Q);scanf(\"%s\",s+1);\n\tfor(int i=1,x,y;i<=m;i++) {\n\t\tread(x),read(y);\n\t\tif(s[x]!=s[y]) g[0].ins(x,y);\n\t\telse if(s[x]=='1') g[1].ins(x,y);\n\t\telse g[2].ins(x,y);\n\t}\n\tfor(int i=0;i<=2;i++) {\n\t\tmemset(vis,0,sizeof vis);\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!vis[j]) {\n\t\t\t\ttop=flag=0,g[i].dfs(j,1);\n\t\t\t\twhile(top) {\n\t\t\t\t\tint x=sta[top];\n\t\t\t\t\tif(g[i].fa[x]) t.ins(g[i].fa[x],x);top--;\n\t\t\t\t}if(flag) t.ins(j,j);\n\t\t\t}\n\t}\n\tt.solve();\n\tfor(int i=1,x,y;i<=Q;i++) read(x),read(y),puts(f[x][y]?\"YES\":\"NO\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1554769959,
        "uid": 50777,
        "name": "Hyscere",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "\u662f myy \u7684\u9898 orz\n\n\u9996\u5148\u7ed9\u4e2a\u56de\u6587\u4e32\u7684\u5f62\u5f0f\u5316\u9012\u5f52\u5b9a\u4e49\uff1a\n\n- \u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u7684\u4e32\u662f\u56de\u6587\u4e32\u3002\n- \u53ea\u6709\u4e24\u4e2a\u5b57\u7b26\u7684\u4e32\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u4e5f\u662f\u56de\u6587\u4e32\uff1b\n- \u5982\u679c $S$ \u662f\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u5728 $S$ \u7684\u5f00\u5934\u548c\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5f62\u6210\u7684\u65b0\u4e32\u4e5f\u662f\u56de\u6587\u4e32\u3002\n\n\u6839\u636e\u524d\u4e24\u6761\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u957f\u5ea6\u4e3a $1$\uff08\u53ea\u7ecf\u8fc7\u4e00\u4e2a\u70b9\uff09\u548c\u957f\u5ea6\u4e3a $2$\uff08\u4e24\u4e2a\u70b9\u901a\u8fc7\u4e00\u6761\u8fb9\u76f4\u63a5\u76f8\u8fde\uff09\u7684\u56de\u6587\u4e32\u3002\n\n\u6839\u636e\u7b2c\u4e09\u6761\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5df2\u6709\u7684\u56de\u6587\u4e32\u57fa\u7840\u4e0a\uff0c\u5c1d\u8bd5\u5728\u5f00\u5934\u548c\u7ed3\u5c3e\u5404\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\uff0c\u4ea7\u751f\u65b0\u7684\u56de\u6587\u4e32\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe $f_{i,j}$ \u8868\u793a\u4ece $i$ \u5230 $j$ \u662f\u5426\u5b58\u5728\u4e00\u6761\u56de\u6587\u8def\u5f84\u3002\u521a\u5f00\u59cb\u5c06\u6240\u6709\u957f\u5ea6\u4e3a $1$ \u548c $2$ \u7684\u56de\u6587\u4e32\u72b6\u6001\u52a0\u5165\u961f\u5217\u3002\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u72b6\u6001 $(i,j)$\uff0c\u904d\u5386 $i$ \u7684\u6240\u6709\u51fa\u70b9\uff0c\u904d\u5386 $j$ \u7684\u6240\u6709\u51fa\u70b9\uff0c\u770b\u662f\u5426\u80fd\u6269\u5c55\u51fa\u65b0\u7684\u56de\u6587\u4e32\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u5c06\u65b0\u7684\u56de\u6587\u4e32\u538b\u5165\u961f\u5217\u4e2d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m^2)$\u3002\n\n\u8fd9\u4e2a\u8f6c\u79fb\u672c\u8eab\u6ca1\u6709\u4ec0\u4e48\u592a\u5927\u4f18\u5316\u7a7a\u95f4\uff0c\u6211\u4eec\u53ea\u80fd\u4ece\u964d\u4f4e $m$ \u7684\u89c4\u6a21\u5165\u624b\u3002\n\n\u8003\u8651\u8fde\u63a5\u4e24\u4e2a\u6807\u53f7\u76f8\u540c\u7684\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u8fd9\u4e9b\u8fb9\u80fd\u591f\u5f62\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\u3002\n\n\u6bcf\u4e2a\u8fde\u901a\u5757\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u5982\u679c\u8fde\u901a\u5757\u662f\u4e8c\u5206\u56fe\uff08\u4e0d\u5b58\u5728\u5947\u73af\uff09\uff0c\u7ecf\u8fc7\u5076\u73af\u5e76\u4e0d\u4f1a\u5bf9\u4e32\u7684\u957f\u5ea6\u7684\u5947\u5076\u6027\u9020\u6210\u6539\u53d8\uff0c\u518d\u52a0\u4e0a\u5141\u8bb8\u4e00\u6761\u8fb9\u53ef\u4ee5\u8d70\u591a\u6b21\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4fdd\u7559\u73af\uff0c\u53ea\u9700\u4fdd\u7559\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u4e00\u4e2a\u751f\u6210\u6811\u5373\u53ef\u3002\n- \u5982\u679c\u8fde\u901a\u5757\u4e0d\u662f\u4e8c\u5206\u56fe\uff08\u5b58\u5728\u5947\u73af\uff09\uff0c\u7ecf\u8fc7\u5947\u73af\u4f1a\u5f71\u54cd\u4e32\u957f\u5ea6\u7684\u5947\u5076\u6027\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u4ecd\u7136\u53ea\u4fdd\u7559\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u751f\u6210\u6811\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5176\u4e2d\u4e00\u4e2a\u70b9\u4e0a\u52a0\u4e00\u4e2a\u81ea\u73af\uff08\u4ece\u800c\u7559\u4e0b\u6539\u53d8\u5947\u5076\u6027\u7684\u673a\u4f1a\uff09\u3002\n\n\u5982\u679c\u628a\u6bcf\u4e2a\u989c\u8272\u76f8\u540c\u7684\u8fde\u901a\u5757\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u6240\u6709\u4e0d\u540c\u989c\u8272\u7684\u70b9\u4e4b\u95f4\u4e5f\u80fd\u5f62\u6210\u82e5\u5e72\u8fde\u901a\u5757\u3002\u5bb9\u6613\u770b\u51fa\uff0c\u8fd9\u4e9b\u8fde\u901a\u5757\u91cc\u90fd\u4e0d\u5b58\u5728\u5947\u6570\u73af\u3002\n\n\u56e0\u6b64\u548c\u4e0a\u9762\u540c\u7406\uff0c\u6211\u4eec\u53ea\u7528\u4fdd\u7559\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u4e00\u4e2a\u751f\u6210\u6811\u5373\u53ef\uff0c\u5269\u4e0b\u6210\u73af\u7684\u8fb9\u90fd\u53ef\u4ee5\u5220\u9664\u3002\n\n\u6700\u540e\u4f1a\u5269\u4e0b\u591a\u5c11\u8fb9\u5462\uff1f\u53ef\u4ee5\u8bc1\u660e\uff0c\u6700\u591a\u4e0d\u8d85\u8fc7 $2n-2$ \u6761\u8fb9\u3002\n\n\u4ece\u800c\u6211\u4eec\u5c06 $m$ \u7684\u89c4\u6a21\u964d\u5230\u4e86\u4e0e $n$ \u540c\u9636\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $O(n^2)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u672c\u9898\u3002\n\n```cpp\n// Problem : P5292 [HNOI2019]\u6821\u56ed\u65c5\u884c\n// Contest : Luogu Online Judge\n// URL : https://www.luogu.com.cn/problem/P5292\n// Author : StudyingFather\n// Site : https://studyingfather.com\n// Memory Limit : 500 MB\n// Time Limit : 2000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cp-editor)\n\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <vector>\nusing namespace std;\ntypedef pair<int,int> pii;\nstruct dsu\n{\n int fa[5005];\n void init(int n)\n {\n  for(int i=1;i<=n;i++)\n   fa[i]=i;\n }\n int find(int x)\n {\n  return fa[x]==x?x:fa[x]=find(fa[x]);\n }\n bool merge(int x,int y)\n {\n  x=find(x),y=find(y);\n  if(x==y)return false;\n  fa[y]=x;\n  return true;\n }\n}d;\nint n,m,q;\nint col[5005];\nchar s[5005];\nbool flag;\nbool res[5005][5005];\nvector<int> e1[5005],e2[5005];\nqueue<pii> que;\nvoid dfs(int u,int c)\n{\n col[u]=c;\n for(auto v:e2[u])\n  if(col[v]==col[u])flag=false;\n  else if(col[v]==-1)\n  {\n   e1[u].push_back(v);\n   e1[v].push_back(u);\n   dfs(v,c^1);\n  }\n}\nint main()\n{\n ios::sync_with_stdio(false);\n memset(col,-1,sizeof(col));\n cin>>n>>m>>q;\n cin>>(s+1);\n d.init(n);\n for(int i=1;i<=m;i++)\n {\n  int u,v;\n  cin>>u>>v;\n  if(s[u]!=s[v])\n  {\n   if(d.merge(u,v))\n   {\n    e1[u].push_back(v);\n    e1[v].push_back(u);\n   }\n  }\n  else\n  {\n   e2[u].push_back(v);\n   e2[v].push_back(u);  \n  }\n }\n for(int i=1;i<=n;i++)\n  if(col[i]==-1)\n  {\n   flag=true;\n   dfs(i,0);\n   if(!flag)e1[i].push_back(i);\n  }\n for(int i=1;i<=n;i++)\n  que.push({i,i}),res[i][i]=true;\n for(int u=1;u<=n;u++)\n  for(auto v:e1[u])\n  {\n   if(v!=u&&s[u]==s[v])\n    que.push({u,v}),res[u][v]=true;\n  }\n while(!que.empty())\n {\n  int x=que.front().first,y=que.front().second;\n  que.pop();\n  for(auto v1:e1[x])\n   for(auto v2:e1[y])\n    if(s[v1]==s[v2])\n     if(!res[v1][v2])\n      res[v1][v2]=true,que.push({v1,v2});\n }\n while(q--)\n {\n  int x,y;\n  cin>>x>>y;\n  cout<<(res[x][y]?\"YES\":\"NO\")<<endl;\n }\n return 0;\n}\n```",
        "postTime": 1584338487,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "## \u4f20\u9001\u95e8\n[\u6d1b\u8c37](https://www.luogu.org/problemnew/show/P5292)\n\n## \u5410\u69fd\n\u80af\u5b9a\u662f\u56e0\u4e3a\u6211\u592a\u83dc\u4e86,\u8003\u573a\u4e0a\u770b\u5230\u8fd9\u79cd\u9898\u76ee\u53ef\u4ee5\u4e0d\u8d70\u7b80\u5355\u8def\u5f84\u5c31\u4e0d\u4f1a\u505a...\n\n## Solution\n\u8003\u8651\u6211\u4eec\u5b66\u8fc7\u7684\u53ef\u4ee5\u4e0d\u8d70\u7b80\u5355\u8def\u5f84\u7684\u90fd\u6709\u5565?$SPFA$!!!\nemmm,\u56de\u6587\u8def\u5f84\u6709\u6ca1\u6709\u4e00\u4e9b\u795e\u5947\u7684\u6027\u8d28?\u51cf\u53bb\u9996\u5c3e\u8fd8\u56de\u6587!!!~~\u6211\u5446\u5230\u8003\u573a\u60f3\u4e0d\u51fa\u6765\u8fd9\u4e2a...~~\n\u90a3\u4e48\u4e0d\u59a8\u8bbe$f_{i,j}$\u8868\u793a$i$\u548c$j$\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u56de\u6587\u8def\u5f84,\u5f88\u663e\u7136\u53ef\u4ee5\u5199\u51fa\u8f6c\u79fb:\n```cpp\nwhile(!Q.empty())\n{\n    pii now=Q.front();Q.pop();\n    int u1=now.first,u2=now.second;\n    for(int i=front[u1];i;i=e[i].nxt)\n    {\n        int v1=e[i].to;\n        for(int j=front[u2];j;j=e[j].nxt)\n        {\n            int v2=e[j].to;\n            if(a[v1]==a[v2] && !dis[v1][v2]){dis[v1][v2]=dis[v2][v1]=1;Q.push(mp(v1,v2));}\n        }\n    }\n}\n```\n\u7136\u540e\u5462?\n\u8fd9\u4e2a\u600e\u4e48\u4f18\u5316\u554a?\n> \u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u540c\u8272\u8054\u901a\u5757\uff0c\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u5c31\u884c\u4e86\uff0c\u5426\u5219\u968f\u4fbf\u627e\u4e2a\u70b9\u8fde\u4e00\u6761\u81ea\u73af\u3002\n> \u5bf9\u4e8e\u8fde\u63a5\u4e0d\u540c\u8272\u4e24\u4e2a\u70b9\u7684\u8fb9\uff0c\u4e00\u5b9a\u6784\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u53ea\u9700\u8981\u4fdd\u7559\u4e00\u68f5\u751f\u6210\u6811\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u4e86.\n\n## \u4ee3\u7801\u5b9e\u73b0\n```cpp\n/*\n  mail: mleautomaton@foxmail.com\n  author: MLEAutoMaton\n  This Code is made by MLEAutoMaton\n*/\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<queue>\n#include<set>\n#include<map>\n#include<iostream>\nusing namespace std;\n#define ll long long\n#define re register\n#define file(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\ntypedef pair<int,int> pii;\ninline int gi()\n{\n\tint f=1,sum=0;char ch=getchar();\n\twhile(ch>'9' || ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9'){sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn f*sum;\n}\nconst int N=5010,M=500010;\nstruct node\n{\n\tint to,nxt;\n}e[M<<1];\nint front[N],cnt,dis[N][N],n,m,a[N];\nqueue<pii>Q;\n#define mp make_pair\nvoid Add(int u,int v)\n{\n\te[++cnt]=(node){v,front[u]};front[u]=cnt;\n}\nnamespace subtask2\n{\n\tvector<int>G[N];\n\tint flag,col[N],f[N];\n\tint find(int x)\n\t{\n\t\tif(f[x]!=x)f[x]=find(f[x]);\n\t\treturn f[x];\n\t}\n\tvoid dfs(int u,int color)\n\t{\n\t\tcol[u]=color;\n\t\tfor(int i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tint v=G[u][i];\n\t\t\tif(a[u]!=a[v])continue;\n\t\t\tif(col[v]==col[u])flag=1;\n\t\t\tif(col[v])continue;\n\t\t\tAdd(u,v);Add(v,u);dfs(v,color^1);\n\t\t\tdis[u][v]=dis[v][u]=1;\n\t\t\tQ.push(mp(u,v));\n\t\t}\n\t}\n\tvoid main()\n\t{\n\t\tfor(int i=1;i<=n;i++)f[i]=i;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint u=gi(),v=gi();\n\t\t\tG[u].push_back(v);\n\t\t\tG[v].push_back(u);\n\t\t\tif(a[u]!=a[v])\n\t\t\t\tif(find(u)!=find(v)){Add(u,v);Add(v,u);f[find(v)]=find(u);}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(!col[i])\n\t\t\t{\n\t\t\t\tflag=0;dfs(i,2);\n\t\t\t\tif(flag)Add(i,i);\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++){dis[i][i]=1;Q.push(mp(i,i));}\n\t\twhile(!Q.empty())\n\t\t{\n\t\t\tpii now=Q.front();Q.pop();\n\t\t\tint u1=now.first,u2=now.second;\n\t\t\tfor(int i=front[u1];i;i=e[i].nxt)\n\t\t\t{\n\t\t\t\tint v1=e[i].to;\n\t\t\t\tfor(int j=front[u2];j;j=e[j].nxt)\n\t\t\t\t{\n\t\t\t\t\tint v2=e[j].to;\n\t\t\t\t\tif(a[v1]==a[v2] && !dis[v1][v2]){dis[v1][v2]=dis[v2][v1]=1;Q.push(mp(v1,v2));}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=gi();m=gi();int q=gi();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar ch=getchar();while(ch!='1' && ch!='0')ch=getchar();\n\t\ta[i]=ch-'0';\n\t}\n\tsubtask2::main();\n#undef mp\n\twhile(q--)\n\t{\n\t\tint x=gi(),y=gi();\n\t\tif(dis[x][y])puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1556286342,
        "uid": 51343,
        "name": "MLEAutoMaton",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    },
    {
        "content": "# Description\n\n\u7ed9\u5b9a$n$\u4e2a\u70b9\uff0c$m$\u6761\u8fb9\u7684\u56fe\u3002\u6bcf\u4e2a\u70b9\u6709$0/1$\u7684\u6807\u53f7\uff0c\u6709$Q$\u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u70b9\u5bf9$(u,v)$\u95f4\u662f\u5426\u4e00\u6761\u8def\u5f84\uff08\u4e0d\u4e00\u5b9a\u662f\u7b80\u5355\u8def\u5f84\uff09\uff0c\u6ee1\u8db3\u8def\u5f84\u7ecf\u8fc7\u7684\u70b9\u7684\u6807\u53f7\u6240\u5f62\u6210\u7684\u4e32\u662f\u56de\u6587\u4e32\u3002\n\n$n \\leq 5000, m \\leq 5000000$\n\n# Solution\n\n\u8bbe$f_{i,j}$\u8868\u793a$i,j$\u662f\u5426\u5b58\u5728\u4e00\u6761\u6ee1\u8db3\u6761\u4ef6\u7684\u8def\u5f84\u3002\u521d\u59cb\u72b6\u6001\u548c\u8f6c\u79fb\u663e\u7136\u3002\n\n\u8003\u8651\u6bcf\u6b21\u8f6c\u79fb\u7684\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u800c\u8fd9\u5f20\u56fe\u7684\u70b9\u6570\u8f83\u5c11\uff0c\u8fb9\u6570\u8f83\u591a\u3002\n\n\u628a\u8fde\u63a5\u4e86\u540c\u4e00\u79cd\u6807\u53f7\u7684\u8fb9\u62ce\u51fa\u6765\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e9b\u8fb9\u4f7f\u56fe\u5f62\u6210\u4e86\u82e5\u5e72\u8fde\u901a\u5757\u3002\u5bf9\u4e8e\u67d0\u4e2a\u8fde\u901a\u5757\uff0c\u5982\u679c\u5b83\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\u540e\uff0c\u540c\u8272\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u957f\u5ea6\u53ea\u53ef\u80fd\u4e3a\u5947\u6570\uff0c\u5f02\u8272\u70b9\u4e4b\u95f4\u8def\u5f84\u957f\u5ea6\u53ea\u53ef\u80fd\u4e3a\u5076\u6570\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u628a\u8fd9\u5f20\u4e8c\u5206\u56fe\u66ff\u6362\u4e3a\u5b83\u7684\u4e00\u68f5\u751f\u6210\u6811\uff0c\u4e0a\u8ff0\u6027\u8d28\u4e0d\u53d8\uff0c\u800c\u4e00\u4e2a\u7aef\u70b9\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u72b6\u6001\u7684\u8f6c\u79fb\u4e5f\u4e0d\u53d8\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u539f\u56fe\u4e0a\u7684\u4e00\u6761\u8fb9\u53ef\u4ee5\u66ff\u4ee3\u4e3a\u7ecf\u8fc7\u8fd9\u6761\u975e\u6811\u8fb9\u5728\u6811\u4e0a\u7684\u8def\u5f84\uff08\u8ba9\u53e6\u4e00\u4e2a\u7aef\u70b9\u91cd\u590d\u8d70\u5373\u53ef\uff09\u3002\u800c\u5982\u679c\u8fd9\u4e0d\u662f\u4e8c\u5206\u56fe\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u53ef\u4ee5\u7ecf\u8fc7\u67d0\u4e2a\u73af\u6539\u53d8\u8def\u5f84\u7684\u5947\u5076\u6027\uff0c\u6240\u4ee5\u7ed9\u8fd9\u68f5\u751f\u6210\u6811\u52a0\u4e0a\u4e00\u4e2a\u81ea\u73af\u3002\n\n\u5bf9\u4e8e\u8fde\u63a5\u4e0d\u540c\u6807\u53f7\u7684\u8fb9\u540c\u7406\u3002\u7ecf\u8fc7\u8fd9\u6837\u64cd\u4f5c\u4e4b\u540e\uff0c\u8fb9\u6570\u4e0d\u8d85\u8fc7$2n-2$\uff0c\u76f4\u63a5\u5957\u7528\u4e0a\u8ff0\u66b4\u529b$DP$\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 5005, maxm = 500005;\n\nint n, m, q;\nvector<pair<int, int>> E[2][2];\nint fa[maxn], col[maxn], f[maxn][maxn];\nvector<int> to[maxn][2];\nchar s[maxn];\nqueue<pair<int, int>> que;\n\nstruct edge\n{\n    int to, next;\n} e[maxm * 4];\nint h[maxn], tot;\n\ninline int gi()\n{\n    char c = getchar();\n    while(c < '0' || c > '9') c = getchar();\n    int sum = 0;\n    while('0' <= c && c <= '9') sum = sum * 10 + c - 48, c = getchar();\n    return sum;\n}\n\ninline void add(int u, int v)\n{\n    e[++tot] = (edge) {v, h[u]}; h[u] = tot;\n    e[++tot] = (edge) {u, h[v]}; h[v] = tot;\n    to[u][s[v] - '0'].push_back(v);\n    to[v][s[u] - '0'].push_back(u);\n}\n\nint find(int x)\n{\n    if (fa[x] == x) return x;\n    return fa[x] = find(fa[x]);\n}\n\nbool merge(int x, int y)\n{\n    x = find(x); y = find(y);\n    if (x == y) return 0;\n    return fa[x] = y, 1;\n}\n\nvoid dfs(int u, int fa)\n{\n    for (int i = h[u], v; v = e[i].to, i; i = e[i].next)\n        if (v != fa) col[v] = col[u] ^ 1, dfs(v, u);\n}\n\nvoid solve(int c1, int c2)\n{\n    for (int i = 1; i <= n; ++i) h[i] = 0, fa[i] = i;\n    tot = 0;\n    \n    for (auto e : E[c1][c2]) {\n        int x = e.first, y = e.second;\n        if (merge(x, y)) add(x, y);\n    }\n    for (int i = 1; i <= n; ++i)\n        if (fa[i] == i) col[i] = 0, dfs(i, 0);\n    for (auto e : E[c1][c2]) {\n        int x = e.first, y = e.second;\n        if (col[x] == col[y]) col[find(x)] = -1;\n    }\n    for (int i = 1; i <= n; ++i)\n        if (col[i] == -1) add(i, i);\n}\n\nvoid bfs()\n{\n    for (int i = 1; i <= n; ++i) f[i][i] = 1, que.push(make_pair(i, i));\n    for (int i = 1; i <= n; ++i)\n        for (int j : to[i][s[i] - '0']) if (i < j) f[i][j] = 1, que.push(make_pair(i, j));\n        \n    int u, v, siz1, siz2, i, j, a, b;\n    while (!que.empty()) {\n        u = que.front().first, v = que.front().second;\n        que.pop();\n        \n        siz1 = to[u][0].size(); siz2 = to[v][0].size();\n        for (i = 0; i < siz1; ++i)\n            for (j = 0; j < siz2; ++j) {\n                a = to[u][0][i], b = to[v][0][j];\n                if (a > b) swap(a, b);\n                if (f[a][b]) continue;\t\t\t\t\n                que.push(make_pair(a, b));\n                f[a][b] = 1;\n            }\n\n        siz1 = to[u][1].size(); siz2 = to[v][1].size();\n        for (i = 0; i < siz1; ++i)\n            for (j = 0; j < siz2; ++j) {\n                a = to[u][1][i], b = to[v][1][j];\n                if (a > b) swap(a, b);\n                if (f[a][b]) continue;\t\t\t\t\n                que.push(make_pair(a, b));\n                f[a][b] = 1;\n            }\n    }\n}\n\nint main()\n{\n    n = gi(); m = gi(); q = gi();\n    scanf(\"%s\", s + 1);\n\n    for (int u, v, i = 1; i <= m; ++i) {\n        u = gi(); v = gi();\n        if (s[u] > s[v]) swap(u, v);\n        E[s[u] - '0'][s[v] - '0'].push_back(make_pair(u, v));\n    }\n\n    solve(0, 0);\n    solve(1, 1);\n    solve(0, 1);\n\n    bfs();\n\n    for (int a, b, i = 1; i <= q; ++i) {\n        a = gi(); b = gi();\n        if (a > b) swap(a, b);\n        puts(f[a][b] ? \"YES\" : \"NO\");\n    }\n    \n    return 0;\n}\n\n```",
        "postTime": 1555311480,
        "uid": 119899,
        "name": "dsidsi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5292 \u3010[HNOI2019]\u6821\u56ed\u65c5\u884c\u3011"
    }
]