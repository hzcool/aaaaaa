[
    {
        "content": "\u70b9\u5206\u6cbb\u88f8\u9898\u3002\n\n\u5177\u4f53\u8bf4\u4e00\u4e0b\u505a\u6cd5\uff1a\u5f53\u524d\u91cd\u5fc3\u662f $r$ \u65f6\uff0c\u8ba1\u7b97\u6240\u6709\u7ecf\u8fc7 $r$ \u7684\u8def\u5f84\u3002\u56e0\u4e3a $k\\le 10^6$\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5f00\u4e2a\u6876\uff0c$mine[i]$ \u8868\u793a\u4ece $r$ \u5f00\u59cb\u7684\u6743\u503c\u548c\u4e3a $i$ \u7684\u6240\u6709\u8def\u4e2d\uff0c\u8fb9\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n\u66f4\u65b0\u7b54\u6848\u65f6\uff0c\u6211\u4eec\u7528\u5f53\u524d\u5b50\u6811\u7684\u6240\u6709\u8ddd\u79bb\u548c\u524d\u9762\u5b50\u6811\u7684\u6876\u3002\u601d\u60f3\u5e94\u8be5\u4e0d\u96be\u60f3\uff0c\u5c31\u662f $ans=\\min(ans,cnt[v]+mine[k-dis[v]])$\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u7531\u4e8e\u6ca1\u6709\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u4f3c\u4e4e\u662f $O(n\\log n)$\uff1f\u6211\u5c31\u8bf4\u600e\u4e48\u4e00\u770b\u6bd4\u522b\u4eba\u5feb\u7684\u6837\u5b50\u2026\u2026\uff08\u5f00O2\u603b\u65f6\u95f42816ms\uff0c\u6700\u5927\u70b9396ms\uff09\n\n\u8981\u6ce8\u610f\u7684\u662f\u6c42\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u4e0d\u6ee1\u8db3\u53ef\u51cf\u6027\uff0c\u6240\u4ee5\u4e0d\u80fd\u50cf\u6d1b\u5495\u65e5\u62a5\u4e0a\u90a3\u6837\u628a\u591a\u52a0\u7684\u51cf\u56de\u53bb\u3002\n\n\u7136\u540e\u8fd9\u9898\u4f3c\u4e4e\u5361\u6808\u7a7a\u95f4\u2026\u2026\u628a\u9012\u5f52\u51fd\u6570\u4e2d\u80fd\u4e0d\u7528\u7684\u53d8\u91cf\u4e0d\u7528\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=200020,maxk=1000100;\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline int read(){\n\tchar ch=getchar();int x=0,f=0;\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nint n,k,el,head[maxn],to[maxn*2],w[maxn*2],nxt[maxn*2];\nint rt,tot,sz[maxn],son[maxn],mine[maxk],ans=INT_MAX,dis1[maxn],dis2[maxn],dl;\nbool vis[maxn];\ninline void add(int u,int v,int w_){\n\tto[++el]=v;w[el]=w_;nxt[el]=head[u];head[u]=el;\n}\nvoid getrt(int u,int f){\t//\u6c42\u91cd\u5fc3\n\tsz[u]=1;son[u]=0;\n\tfor(int i=head[u];i;i=nxt[i]){\n    \t//v=to[i]\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u53ef\u4ee5\u53bb\u6389\n\t\tif(to[i]==f || vis[to[i]]) continue;\n\t\tgetrt(to[i],u);\n\t\tsz[u]+=sz[to[i]];son[u]=max(son[u],sz[to[i]]);\n\t}\n\tson[u]=max(son[u],tot-sz[u]);\n\tif(son[u]<son[rt]) rt=u;\n}\nvoid getdis(int u,int f,int d1,int d2){\t//dfs\u5c06\u5b50\u6811\u7684\u4fe1\u606f\u8bb0\u5f55\u4e0b\u6765\uff08d1\u662f\u6743\u503c\u548c\uff0cd2\u662f\u8fb9\u6570\uff09\n\tif(d1>k) return;\n\tdis1[++dl]=d1;dis2[dl]=d2;\n\tfor(int i=head[u];i;i=nxt[i]){\n    \t//\u540c\u4e0a\n\t\tif(to[i]==f || vis[to[i]]) continue;\n\t\tgetdis(to[i],u,d1+w[i],d2+1);\n\t}\n}\nvoid getans(int u){\t//\u8ba1\u7b97\u7ecf\u8fc7u\u7684\u8def\u5f84\u7684\u7b54\u6848\n\tmine[0]=0;dl=0;\t//mine[0]\u662f0\uff01\u56e0\u4e3a\u4e00\u4e2a\u7aef\u70b9\u662fu\u7684\u8def\u5f84\u4e5f\u8981\u8003\u8651\uff0c\u800c\u4e140\u4e0d\u4f1a\u88ab\u5176\u5b83\u5b50\u6811\u8bb0\u5f55\u5230\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tif(vis[to[i]]) continue;\n\t\tint pdl=dl;\t//\u524d\u9762\u7684\u5b50\u6811\u6709\u591a\u5c11\u5143\u7d20\n\t\tgetdis(to[i],u,w[i],1);\t//\u6ce8\u610f\u8c03\u7528\u65f6w[i]\u548c1\n\t\tFOR(j,pdl+1,dl) ans=min(ans,mine[k-dis1[j]]+dis2[j]);\n        //\u66f4\u65b0\u7b54\u6848\n\t\tFOR(j,pdl+1,dl) mine[dis1[j]]=min(mine[dis1[j]],dis2[j]);\n        //\u66f4\u65b0\u6876\n\t}\n\tFOR(i,1,dl) mine[dis1[i]]=1e9;\n}\nvoid getall(int u){\t//\u70b9\u5206\u6cbb\u4e3b\u8fc7\u7a0b\n\tvis[u]=true;\n\tgetans(u);\n\tfor(int i=head[u];i;i=nxt[i]){\n\t\tif(vis[to[i]]) continue;\n\t\ttot=sz[to[i]];rt=0;\n\t\tgetrt(to[i],u);\n\t\tgetall(rt);\n\t}\n}\nint main(){\n\tn=read();k=read();\n\tFOR(i,1,n-1){\n\t\tint u=read()+1,v=read()+1,w=read();\t//\u7f16\u53f7\u4ece0\u5f00\u59cb\n\t\tadd(u,v,w);add(v,u,w);\n\t}\n\tson[0]=(tot=n)+1;\t//son[0]\u8bbe\u4e3aINF\n\tgetrt(1,0);\n\tMEM(mine,0x3f);\n\tgetall(rt);\n\tprintf(\"%d\\n\",ans>=n?-1:ans);\t//\u6700\u77ed\u957f\u5ea6\u8d85\u8fc7n\u5c31\u662f\u65e0\u89e3\n}\n```",
        "postTime": 1549379763,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u597d\u7684\u9898\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u7528\u53ef\u7231\u7684dsu on tree\n\n\u7b2c\u4e00\u904ddfs\u7684\u65f6\u5019\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e00\u4e0b\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u548c\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u70b9\u6570.\n\n\u5957\u8def\u4f7f\u7528dsu on tree \u7ef4\u62a4\u4e00\u4e2amap\uff0c\u4fdd\u5b58\u6bcf\u4e2a\u957f\u5ea6\u5bf9\u5e94\u7684\u6700\u5c0f\u6df1\u5ea6\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u8282\u70b9\u67e5\u8be2\u4e00\u4e0b\u7b54\u6848\uff0c\u6700\u540e\u53d6\u4e00\u4e0b\u6700\u5c0f\u503c\u5373\u53ef.\u601d\u7ef4\u96be\u5ea6\u504f\u4f4e\uff0c\u4ee3\u7801\u96be\u5ea6\u5dee\u4e0d\u591a\u662fNOIP.\n\n\u5173\u4e8e dsu on tree,\u63a8\u8350\u4e00\u4e2a[blog](http://codeforces.com/blog/entry/44351)\n\nSTL + C++11 \u98df\u7528\u6700\u5609.\n\n\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,k;\nvector<int>to [200005];\nvector<int>len[200005];\nlong long deep[200005];\nint diep[200005];\nint size[200005];\nint son [200005];\nint nid [200005];\nint id  [200005];\nint cnt;\n\nmap< long long,int >dep;\nint ans = 1e9;\n\nvoid dfs1(int now,int last){\n    size[now] = 1;\n    id  [now] = ++ cnt;\n    nid [cnt] = now;\n    int mx = 0;\n    for(int i = 0;i < to[now].size();i ++){\n        int next = to[now][i];\n        if( next == last )continue;\n        deep[next] = deep[now] + len[now][i];\n        diep[next] = diep[now] + 1;\n        dfs1( next,now );\n        size[now] += size[next];\n        if( size[next] > mx ){\n            mx = size[next];\n            son[now] = next;\n        }\n    }\n}\n\nvoid updata(int x,int k){\n    int dx = deep[x];\n    if( k == -1 ){\n        dep[ dx ] = 0;\n    }else{\n        int tmp = dep[dx];\n        if( tmp == 0 )tmp = 1e9;\n        dep[dx] = min( tmp,diep[x] );\n    }\n}\n\nvoid dfs2(int now,int last,bool keep){\n    for(auto next : to[now]){\n        if( next == son[now] or next == last )continue;\n        dfs2( next,now,0 );\n    }\n    if( son[now] )dfs2( son[now],now,1 );\n    for(auto next : to[now]){\n        if( next == son[now] or next == last )continue;\n        for( int i = 0;i < size[next];i ++ ){\n            int nxt = nid[ id[next] + i ];\n            int req = k + 2 * deep[now] - deep[nxt];\n            if( dep[ req ] ){\n                ans = min( ans,dep[ req ] + diep[nxt] - 2 * diep[now] );\n            }\n        }\n        for( int i = 0;i < size[next];i ++){\n            updata( nid[ id[next] + i ],1 );\n        }\n    }\n    updata( now,1 );\n    if( dep[ deep[now] + k ] )ans = min( ans,dep[ deep[now] + k ] - diep[now] );\n    if( keep == 0 ){\n        for( int i = 0;i < size[now];i ++ ){\n            updata( nid[ id[now] + i ],-1 );\n        }\n    }\n}\n\nint main(){\n    cin >> n >> k;\n    for(int i = 1;i < n;i ++){\n        int u,v,w;scanf( \"%d%d%d\",&u,&v,&w );\n        to[u].push_back(v);\n        to[v].push_back(u);\n        len[u].push_back(w);\n        len[v].push_back(w);\n    }\n    diep[0] = 1;\n    dfs1(0,0);dfs2(0,0,0);\n    if( ans == 1e9 )ans = -1;\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1536970182,
        "uid": 47240,
        "name": "bzy369258147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "### \u4eba\u751f\u4e2d\u505a\u7684\u7b2c\u4e00\u9053IOI\u9898 (\u6570\u5b57\u4e09\u89d2\u4e0d\u7b97\uff0c\u592a\u6c34\u4e86)  \n\u8fd9\u9898\u7b97\u662f\u4e00\u4e2a\u6bd4\u8f83\u88f8\u7684\u70b9\u5206\u6cbb\uff0c\u4f46\u662f\u5b9e\u9645\u5199\u8d77\u6765\u8fd8\u8981\u60f3\u5f88\u591a\u7684\u3002 \n\n### \u89e3\u6cd5\uff1a \n\u5982\u679c\u4f60\u628a[P3806](https://www.luogu.org/problemnew/show/P3806)\u7684\u6a21\u677f\u76f4\u63a5\u642c\u8fc7\u6765\uff0c\u8fd9\u9898\u4f1aT\u98de\u5230\u53ea\u670910\u5206\u3002  \n\u90a3\u5904\u7406\u5b50\u6811\u7684\u5730\u65b9\u80af\u5b9a\u4e0d\u80fd$\\Theta(n^2)$\u6765\u641e\u4e86\uff0c\u8981\u8003\u8651\u4f18\u5316\u3002 \n\n\u6211\u7b2c\u4e00\u60f3\u6cd5\u662f\u8fd9\u6837\u7684\uff1a  \n\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u53eb$\\text{cnt}$\uff0c\u5176\u4e2d$\\text{cnt}[i]$\u8868\u793a\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684\u3001\u542b\u6709$i$\u6761\u8fb9\u7684\u8def\u5f84\u6570\u3002  \n\u7136\u540e\u5904\u7406\u5b50\u6811\u4fe1\u606f\u65f6\uff0c\u5c06\u5176\u4e2d\u627e\u5230\u7684\u8def\u5f84\u90fd\u5728\u6570\u7ec4\u4e2d\u6253\u6807\u8bb0\uff0c\u7136\u540e$\\Theta(n)$\u5c31\u80fd\u5904\u7406\u8fd9\u68f5\u5b50\u6811\u4e86\u3002  \n\u7136\u540e\u6211\u5199\u5230\u4e00\u534a\u53d1\u73b0\u4e0d\u5bf9\u3002\u3002\u8fd9\u6837\u6ca1\u529e\u6cd5\u7ef4\u62a4\u6700\u5c11\u7684\u8fb9\u6570\u3002  \n\n\u90a3\u6211\u4eec\u8003\u8651\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\uff1a  \n\u4ecd\u7136\u4fdd\u7559\u7b2c\u4e00\u79cd\u65b9\u6cd5\u7684$\\text{cnt}$\u6570\u7ec4\uff0c\u4f46\u662f\u5904\u7406\u5b50\u6811\u65f6\uff0c\u628a\u627e\u5230\u7684\u8def\u5f84\u7528\u7ed3\u6784\u4f53\u6253\u5305\uff0c\u5b58\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4$\\text{p}$\u4e2d\u3002  \n\u6211\u7684\u7ed3\u6784\u4f53\u662f\u8fd9\u4e48\u5199\u7684\uff1a   \n\u5176\u4e2d\u8bb0\u5f55\u4e24\u4e2a\u91cf\uff0c\u8def\u5f84\u957f\u5ea6\u4ee5\u53ca\u8fb9\u6570\u3002\n```cpp\nstruct path{\n\tint dis,dep;\n\tpath(int dis=0,int dep=0):dis(dis),dep(dep){}\n\tbool operator < (const path& nd) const{\n\t\tif(dis==nd.dis) return dep < nd.dep;\n\t\treturn dis < nd.dis;\n\t}\n\tbool operator == (const path& nd) const{\n\t\treturn dis==nd.dis&&dep==nd.dep;\n\t}\n};\n```  \n\u4f60\u4e5f\u770b\u89c1\u4e86\uff0c\u8fd9\u91cc\u9762\u91cd\u8f7d\u4e86\u8fd0\u7b97\u7b26\uff0c\u4f5c\u7528\u5c31\u662f\u6392\u5e8f\u3002  \n\u6211\u4eec\u628a$\\text{p}$\u4ee5`\u8def\u5f84\u957f\u5ea6`\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c`\u8fb9\u6570`\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\uff0c\u4e0b\u9762\u518d\u8bf4\u3002  \n \n\u6392\u597d\u5e8f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a$d$\u3002   \n\u90a3\u73b0\u5728\u53ea\u9700\u627e\u51fa\u957f\u5ea6\u4e3a$k-d$\u7684\u8def\u5f84\u5c31\u597d\u5566\uff01  \n\u7531\u4e8e$\\text{p}$\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5927\u529b\u4e8c\u5206\u67e5\u627e\u3002   \n\u627e\u5230\u4e4b\u540e\uff0c\u5c06\u8fd9\u4e24\u6761\u8def\u5f84\u7684`\u8fb9\u6570`\u52a0\u8d77\u6765\uff0c\u5728$\\text{cnt}$\u6570\u7ec4\u4e2d$+1$\u6216$-1$\u5373\u53ef (\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u82e5\u662f\u53bb\u91cd\u7684\u65f6\u5019\u5c31$-1$)\n\n\u73b0\u5728\u4e5f\u5c31\u8bf4\u660e\u4e86\u4ee5`\u8def\u5f84\u957f\u5ea6`\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u7684\u539f\u56e0\uff1a  \n\u6211\u4eec\u53ea\u8981\u628a\u957f\u5ea6\u76f8\u540c\u7684\u8def\u5f84\u653e\u5230\u4e00\u8d77\uff0c\u627e\u5230\u4e00\u4e2a\uff0c\u5176\u5b83\u7684\u4e5f\u5c31\u90fd\u627e\u5230\u4e86\u3002\u4ee5\u6b64\u6765\u4fdd\u8bc1\u5904\u7406\u5b50\u6811\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(n\\log n)$\u7684\u3002  \n\n\u5148\u522b\u6025\u7740\u53bb\u5199\uff0c\u73b0\u5728\u8fd9\u4e2a\u65b9\u6cd5\u8fd8\u4e0d\u5b8c\u6574\u3002\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a  \n\u5728\u83ca\u82b1\u56fe\u4e2d\uff0c\u627e\u5230\u7684\u6240\u6709\u8def\u5f84\u957f\u5ea6\u90fd\u4e00\u6837\uff0c\u800c\u4e14\u521a\u597d\u662f$k/2$\u65f6\uff0c\u6309\u7167\u6211\u4eec\u521a\u641e\u51fa\u6765\u7684\u65b9\u6cd5\uff0c\u8fd9\u5c31\u88ab\u5361\u5230$\\Theta(n^2)$\u4e86\u3002\u3002\n\n\u81f3\u6b64\uff0c\u53c8\u63ed\u793a\u4e86\u4ee5`\u8fb9\u6570`\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u539f\u56e0\uff1a  \n\u9898\u76ee\u65e2\u7136\u8981\u6c42\u627e\u5230\u957f\u5ea6\u4e3a$k$\u7684\u8def\u5f84\uff0c\u8fb9\u6570\u5c3d\u91cf\u5c11\u3002\u90a3\u6211\u4eec\u5bf9\u4e8e\u6bcf\u79cd\u957f\u5ea6\u7684\u8def\u5f84\uff0c\u90fd\u9009`\u8fb9\u6570`\u6700\u5c11\u7684\u90a3\u4e00\u6761\u53bb\u4e8c\u5206\uff0c\u4e0d\u5c31\u884c\u4e86\uff1f  \n\u5177\u4f53\u5b9e\u73b0\u4e5f\u4e0d\u96be\uff0c\u5982\u679c\u6709$\\text{p}[i]=\\text{p}[i-1]$\uff0c\u90a3\u5c31\u4e0d\u7528\u7ba1\u5b83\u4e86\u3002\u56e0\u4e3a$\\text{p}[i-1]$\u8fd9\u6761\u8def\u5f84\u5df2\u7ecf\u5904\u7406\u8fc7\uff0c\u4e14**\u4e00\u5b9a**\u6bd4$\\text{p}[i]$\u66f4\u4f18\u3002  \n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e5f\u8be5\u4e0a\u4ee3\u7801\u4e86\uff1a  \n\u6ce8\u610f\u4ee3\u7801\u4e2d\u5f88\u591a\u53d8\u91cf\u540d\u4e0e\u6587\u4e2d\u6240\u8bf4\u4e0d\u540c\u3002  \n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<bitset>\n#include<map>\n#define N 200002\n#define M 1000002\n#define inf 0x3f3f3f3f\n#define ll long long\nusing namespace std;\n\nstruct edge{\n    int v,w;\n    edge(int v=0,int w=0):v(v),w(w){}\n};\n\nstruct node{ //\u8fd9\u91cc\u7684node\u5c31\u662fpath\n    int dis,dep;\n    node(int dis=0,int dep=0):dis(dis),dep(dep){}\n    bool operator < (const node& nd) const{\n        if(dis==nd.dis) return dep < nd.dep;\n        return dis < nd.dis;\n    }\n    bool operator == (const node& nd) const{\n        return dis==nd.dis&&dep==nd.dep;\n    }\n};\n \nvector<edge> adj[N];\nint size[N],son[N],dis[N],dep[N],minw[M]; //minw\u5c31\u662fcnt\nnode nd[N]; //nd\u5c31\u662fp\nbool vis[N];\nint n,m,root,s,cnt,k,ans;\n\ninline void read(int &x);\nvoid find_root(int u,int fa);\nvoid partition(int u);\nvoid get_dist(int u,int fa,int len);\nvoid solve(int u,int len,int w,int depth);\ninline void find(int l,int r,node tg,int w);\n\nint main(){\n    ans = inf;\n    int u,v,w;\n    read(n),read(k);\n    if(k==0){ //\u7279\u5224k\u4e3a0,\u76f4\u63a5\u8f93\u51fa0\n    \tputchar('0');\n    \treturn 0;\n    }\n    for(int i=1;i<n;++i){\n        read(u),read(v),read(w);\n        ++u,++v;\n        adj[u].push_back(edge(v,w));\n        adj[v].push_back(edge(u,w));\n    }\n    s = son[root] = n;\n    find_root(1,0);\n    partition(root);\n    for(int i=1;i<=1000000;++i){ //\u904d\u5386\u6807\u8bb0\u6570\u7ec4,\u627e\u5230\u8fb9\u6570\u6700\u5c11\u7684\u8def\u5f84\n    \tif(minw[i]<1) continue;\n    \tprintf(\"%d\",i);\n    \treturn 0;\n    }\n    printf(\"-1\");\n    return 0;\n}\n\ninline void find(int l,int r,node tg,int w){\n\t//\u4e8c\u5206\u67e5\u627e\u7528\u7684\u51fd\u6570\n    int mid,dist,depth;\n    dist = k-tg.dis;\n    depth = tg.dep;\n    while(r-l>2){\n        mid = (l+r)>>1;\n        if(nd[mid].dis>dist) r = mid;\n        else l = mid;\n    }\n    for(int i=r;i>=l;--i){\n        if(nd[i].dis!=dist) continue;\n        mid = i;\n        break;\n    }\n    if(nd[mid].dis!=dist) return; //\u627e\u4e0d\u5230\u957f\u5ea6\u4e3ak-d\u7684\u8fb9\uff0c\u8fd4\u56de\n    for(int i=mid;;--i){\n        if(nd[i].dis!=dist) break;\n        if(nd[i]==tg) continue;\n        minw[nd[i].dep+depth] += w;\n    }\n    for(int i=mid+1;;++i){\n        if(nd[i].dis!=dist) break;\n        if(nd[i]==tg) continue;\n        minw[nd[i].dep+depth] += w;\n    }\n}\n\nvoid solve(int u,int len,int w,int depth){\n    dis[u] = len;\n    dep[u] = depth;\n    cnt = 0;\n    get_dist(u,0,len);\n    sort(nd+1,nd+1+cnt);\n    nd[0].dis = -1; //\u907f\u514d\u51fa\u9505\n    for(int i=1;i<=cnt;++i){\n    \tif(nd[i].dis>k) break;\n    \tif(nd[i].dis==nd[i-1].dis) continue; //\u5f88\u91cd\u8981\u7684\u4e00\u884c\u526a\u679d\n    \tfind(0,cnt,nd[i],w);\n    }\n}\n\n//\u4ee5\u4e0b\u90fd\u662f\u70b9\u5206\u6cbb\u677f\u5b50\n\nvoid get_dist(int u,int fa,int len){\n    nd[++cnt] = node(dis[u],dep[u]);\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(v==fa||vis[v]) continue;\n        dis[v] = len+adj[u][i].w;\n        dep[v] = dep[u]+1;\n        get_dist(v,u,dis[v]);\n    }\n}\n\n\nvoid partition(int u){\n    vis[u] = 1;\n    solve(u,0,1,0);\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(vis[v]) continue;\n        solve(v,adj[u][i].w,-1,1);\n        root = 0;\n        son[root] = n;\n        s = size[v];\n        find_root(v,u);\n        partition(root);\n    }\n}\n\nvoid find_root(int u,int fa){\n    size[u] = 1;\n    son[u] = 0;\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(v==fa||vis[v]) continue;\n        find_root(v,u);\n        size[u] += size[v];\n        son[u] = max(son[u],size[v]);\n    }\n    son[u] = max(son[u],s-size[u]);\n    if(son[u]<son[root]) root = u;\n}\n\n//\u4ee5\u4e0a\u90fd\u662f\u70b9\u5206\u6cbb\u677f\u5b50\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n```",
        "postTime": 1547117860,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "# \u672c\u9898\u622a\u6b62\u81f32018\u5e749\u67084\u65e5\u4e3a\u6b62\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\u7684\u70b9\u5206\u6cbb\u901a\u8fc7\u3002\n\n\u5177\u4f53\u800c\u8a00luogu+bzoj\u4e0d\u7528\u6269\u6808\uff0cCOGS\u9700\u8981\u6269\u6808\uff0c\u5426\u5219RE\u4e00\u4e2a\u70b9\n\n\u5728\u8fd9\u91cc\u8d34\u51fa\u672c\u849f\u84bb\u66f4\u65b0\u540e\u7684\u4ee3\u7801\n\n### \u53e6\u6ce8\uff1a\u539f\u6587\uff08\u5373\u5206\u5272\u7ebf\u4e0b\u65b9\u7684\u90e8\u5206\uff09\u4e2d\u7684\u4ee3\u7801\u91cc\u7684\u6269\u6808\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u8be6\u89c1\u4e0b\u6587\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,K,first[200010],cnte,siz[200010],son[200010],root,sum;\nstruct edge{\n    int to,next,w;\n}a[400010];\ninline void add(int u,int v,int w){\n    a[++cnte]=(edge){v,first[u],w};first[u]=cnte;\n    a[++cnte]=(edge){u,first[v],w};first[v]=cnte;\n}\nbool vis[200010];\nvoid getroot(int u,int f){//\u9012\u5f52\u627e\u91cd\u5fc3\n    int i,v;\n    siz[u]=1;son[u]=0;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(v==f||vis[v]) continue;\n        getroot(v,u);siz[u]+=siz[v];\n        if(son[u]<siz[v]) son[u]=siz[v];\n    }\n    son[u]=max(son[u],sum-siz[u]);\n    if(son[u]<son[root]) root=u;\n}\nint tmp[1000010],ans=1e9;\nvoid getinfo(int u,int f,int dis,int cnt){//\u7edf\u8ba1\u7b54\u6848\n    int i,v;\n    if(dis>K) return;\n    ans=min(ans,tmp[K-dis]+cnt);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(v==f||vis[v]) continue;\n        getinfo(v,u,dis+a[i].w,cnt+1);\n    }\n}\nvoid update(int u,int f,int dis,int cnt){//\u52a0\u56de\u6765\n    int i,v;\n    if(dis>K) return;\n    tmp[dis]=min(tmp[dis],cnt);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(v==f||vis[v]) continue;\n        update(v,u,dis+a[i].w,cnt+1);\n    }\n}\nvoid clear(int u,int f,int dis){//\u6e05\u7a7a\n    int i,v;\n    if(dis>=K) return;\n    tmp[dis]=1e9;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(v==f||vis[v]) continue;\n        clear(v,u,dis+a[i].w);\n    }\n}\nvoid dfs(int u,int sz){//\u70b9\u5206\u6cbb\u4e3b\u8fc7\u7a0b\n    int i,v;tmp[0]=0;vis[u]=1;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(vis[v]) continue;\n        getinfo(v,u,a[i].w,1);\n        update(v,u,a[i].w,1);\n    }\n    clear(u,0,0);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;if(vis[v]) continue;\n        sum=((siz[v]>siz[u])?(sz-siz[u]):siz[v]);\n        root=0;son[0]=sum;\n        getroot(v,0);\n        dfs(root,sum);\n    }\n}\nint main(){\n    memset(first,-1,sizeof(first));\n    n=read();K=read();int i,t1,t2,t3;\n    for(i=1;i<n;i++){\n        t1=read();t2=read();t3=read();\n        add(t1+1,t2+1,t3);\n    }\n    for(i=0;i<=K;i++) tmp[i]=1e9;\n    sum=n;root=0;son[0]=n;\n    getroot(1,0);\n    dfs(root,n);\n    if(ans!=1e9) printf(\"%d\\n\",ans);\n    else puts(\"-1\");\n}\n```\n\n---\n\n\u5206\u5272\u7ebf\u4ee5\u4e0b\u4e3a\u539f\u6587\n\n---\n\n### \u65e5\u5e38\u5356\u5b89\u5229\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8401118.html)\n\n## \u601d\u8def\uff1a\n\n\u7edf\u8ba1\u6811\u4e0a\u8def\u5f84\u4fe1\u606f\uff0c\u70b9\u5206\u6cbb\u554a\n\nK<=1e6\uff0c\u8003\u8651\u5bf9\u4e8e\u8ddd\u79bb\u4e3ai\u7684\u70b9\u5efa\u7acbtmp\\[i\\]\uff0c\u8868\u793a\u5728\u5f53\u524d\u9012\u5f52\u5230\u7684\u5b50\u6811\u4e2d\uff0c\u8d70\u5230\u8ddd\u79bb\u4e3ai\u7684\u9876\u70b9\u6700\u5c11\u9700\u8981\u8d70\u591a\u5c11\u8fb9\n\n\u70b9\u5206\u6cbb\uff0c\u6bcf\u6b21\u5148\u5bf9\u6bcf\u68f5\u5b50\u6811\u904d\u5386\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9i\u5230root\u7684\u8ddd\u79bbdis\\[i\\]\uff0c\u4ee5\u53ca\u8d70\u8fc7\u7684\u8fb9\u6570d\\[i\\]\n\n\u90a3\u4e48ans=min(ans,tmp\\[k-dis\\[i\\]\\]+d\\[i\\])\n\n\u904d\u5386\u5b8c\u8fd9\u68f5\u5b50\u6811\u518d\u4fee\u6539\u88ab\u8bbf\u95ee\u4e86\u7684tmp\\[dis\\[i\\]\\]\uff0c\u7136\u540e\u4e0b\u4e00\u68f5\n\n\u6240\u6709\u5b50\u6811\u904d\u5386\u5b8c\u4e86\u4ee5\u540e\uff0c\u518d\u904d\u5386\u4e00\u904d\u6240\u6709\u8282\u70b9\uff0c\u628a\u4fee\u6539\u5230\u7684tmp\u503c\u53d8\u56deinf\uff08\u521d\u59cb\u5c31\u662finf\uff09\n\n\u7136\u540e\u624d\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u6811\u627e\u91cd\u5fc3\u3001\u9012\u5f52\u4e0b\u4e00\u6b65\u64cd\u4f5c\n\n \n\n## \u6ce8\u610f\uff1a\n\ntmp\u8981\u5f00\u52301000000\uff0c\u4e0d\u8981\u5f00\u6210n\u7684\u5927\u5c0f\n\n\u6bcf\u6b21\u8fdb\u5165dfs_solve\u65f6tmp\\[0\\]=0\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5f53\u524d\u7684\u6839\u5230\u81ea\u5df1\u8ddd\u79bb\u4e3a0\uff0c\u8d70\u8fc7\u4e860\u6761\u8fb9\n\n\u6ce8\u610f\u5e38\u6570\u4f18\u5316\n\n#### \u70b9\u662f\u4ece\u96f6\u5f00\u59cb\u7684\n\n# Code:\n\n### \u6ce8\u610f\u8fd9\u4efd\u4ee3\u7801\u91cc\u9762\u7684\u4e24\u4e2a\u6269\u6808\u64cd\u4f5c\uff08#pragma\u4ee5\u53ca\u6c47\u7f16\uff09\u76ee\u524d\u572864\u4f4d\u673a\u5668\u4e0a\u9762\u90fd\u662f\u65e0\u6548\u7684\u3002\u7f16\u8bd1\u5668\uff08\u81f3\u5c11\u6211\u672c\u673a\u7684\u662f\u8fd9\u6837\uff09\u4f1a\u5ffd\u7565\u7b2c\u4e00\u6761#pragma\uff0c\u5e76\u4e14\u7b2c\u4e8c\u6761\u6c47\u7f16\u662f32\u4f4d\u6c47\u7f16\u8bed\u8a00\uff0c64\u4f4d\u673a\u5668\u65e0\u6cd5\u8bc6\u522b\uff0c\u53ea\u80fd\u9002\u7528\u4e8eCOGS\u8fd9\u6837\u768432\u4f4d\u8001\u673a\u5668\uff0c\u6682\u65f6\u6ca1\u6709\u627e\u5230\u89e3\u51b3\u529e\u6cd5\uff0c\u5982\u679c\u6709\u6c47\u7f16\u5927\u795e\u77e5\u9053\u5982\u4f55\u572864\u4f4d\u4e0b\u9762\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u6b63\uff0c\u87f9\u87f9\uff01\n\n### \u7b2c\u4e00\u6761\u6269\u6808pragma\u88ab\u6211\u5220\u6389\u4e86\uff0c\u5927\u5bb6\u4e0d\u7528\u518d\u5728\u610fqwq\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#define inf 1e9\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n}\nint n,m,cnt,sum,root,first[200010],siz[200010],son[200010];\nint d[200010],dis[200010],ans=inf,tmp[1000010];\nbool vis[200010];\nstruct edge{\n    int to,next,w;\n}a[400010];\ninline void add(int u,int v,int w){\n    a[++cnt]=(edge){v,first[u],w};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],w};first[v]=cnt;\n}\ninline int _max(int l,int r){return (l>r)?l:r;}\ninline int _min(int l,int r){return (l<r)?l:r;}\nvoid getroot(int u,int f){\n    int i,v;\n    siz[u]=1;son[u]=0;\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(v==f||vis[v]) continue;\n        getroot(v,u);\n        siz[u]+=siz[v];son[u]=_max(son[u],siz[v]);\n    }\n    son[u]=_max(son[u],sum-siz[u]);\n    if(son[u]<son[root]) root=u;\n}\nvoid calc(int u,int f){\n    int i,v;\n    if(dis[u]<=m) ans=_min(ans,tmp[m-dis[u]]+d[u]);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(v==f||vis[v]) continue;\n        dis[v]=dis[u]+a[i].w;d[v]=d[u]+1;\n        calc(v,u);\n    }\n}\nvoid update(int u,int f,int t){\n    int i,v;\n    if(dis[u]<=m){\n        if(t) tmp[dis[u]]=_min(tmp[dis[u]],d[u]);\n        else tmp[dis[u]]=inf;\n    }\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(v==f||vis[v]) continue;\n        update(v,u,t);\n    }\n}\nvoid dfs(int u){\n    int i,v;vis[u]=1;tmp[0]=0;//\u6ce8\u610f\u8fd9\u91cc\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(vis[v]) continue;\n        dis[v]=a[i].w;d[v]=1;\n        calc(v,0);update(v,0,1);\n    }\n    for(i=first[u];~i;i=a[i].next) if(!vis[a[i].to]) update(a[i].to,0,0);\n    for(i=first[u];~i;i=a[i].next){\n        v=a[i].to;\n        if(vis[v]) continue;\n        sum=siz[v];root=0;\n        getroot(v,0);\n        dfs(root);\n    }\n}\nint main(){\n\n    int size = 128 << 20;\n    char *p = (char*)malloc(size) + size;  \n    __asm__(\"movl %0, %%esp\\n\" :: \"r\"(p));//\u6709\u4e9bOJ\u4e0a\u4e0d\u6269\u6808\u4f1aRE\n    //\u76ee\u524d\u77f3\u9524\u8fd9\u4e2a\u572864\u4e3a\u673a\u5668\u4e0a\u7f16\u8bd1\u4e0d\u4e86\uff0c\u53ea\u80fd\u5728COGS\u8fd9\u79cd\u8001OJ\u768432\u4f4d\u673a\u5668\u4e0a\u624d\u53ef\u4ee5\n\n//  freopen(\"ioi2011-race.in\",\"r\",stdin);\n//  freopen(\"ioi2011-race.out\",\"w\",stdout);\n\n    memset(first,-1,sizeof(first));\n    int i,t1,t2,t3;\n    n=read();m=read();\n    for(i=1;i<=m;i++) tmp[i]=inf;\n    for(i=1;i<n;i++){\n        t1=read();t2=read();t3=read();//\u70b9\u662f\u4ece\u96f6\u5f00\u59cb\u7684\n        add(t1+1,t2+1,t3);\n    }\n    sum=n;root=0;son[0]=n;\n    getroot(1,0);\n    dfs(root);\n    if(ans!=inf) printf(\"%d\\n\",ans);\n    else printf(\"-1\");\n}\n```",
        "postTime": 1517488581,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "\u6bd5\u7adf\u662f\u4eba\u751f\u7b2c\u4e00\u9053IOI\uff08~~\u73b0\u5728\u5df2\u7ecf\u6302\u4e86~~\u53c8A\u4e86~~\uff09\uff0c\u5c31\u8ba4\u771f\u5199\u4e00\u5199\u5427\u3002\n\n\u7adf\u7136\u6709\u7206\u6808\u8fd9\u79cd\u64cd\u4f5c\uff08~~\u4e8f\u6211\u82b1\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u4f18\u5316\u65f6\u95f4\u4ee5\u4e3aRE\u662fTLE~~\uff09\n\n\u9898\u9762\u4e00\u770b\u5c31\u662f\u6dc0\u7c89\u8d28\u3002\uff08\u611f\u89c9\u597d\u88f8\uff09\n\n~~\u4ee5\u4e0b\u662f\u540c\u5b66\u7684\u6302\u6389\u505a\u6cd5~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class T>\ninline void read(T &a)\n{\n    T s = 0, w = 1;\n    char c = getchar();\n    while(c < '0' || c > '9')\n    {\n        if(c == '-') w = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        s = (s << 1) + (s << 3) + (c ^ 48);\n        c = getchar();\n    }\n    a = s*w;\n} \nstruct edge{\n    int from,to,cost,net;\n    edge(int f = 0, int t = 0, int c = 0, int n = 0)\n    {\n        from = f;\n        to = t;\n        cost = c;\n        net = n;\n    }\n}edges[101010];\nint head[101010],tot,k,n;\nvoid add(int x, int y, int c)\n{\n    edges[++tot] = edge(x,y,c,head[x]);\n    head[x] = tot;\n}\nint root = 0;\nint vis[101010],mx[10101],size[101010],S;\nvoid find(int x, int fa)\n{\n    size[x] = 1;mx[x] = 0;\n    for (int i = head[x];i;i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(vis[v.to] || v.to == fa) continue;\n        find(v.to,x);\n        size[x] += size[v.to];\n        mx[x] = max(mx[x],size[v.to]);\n    }\n    mx[x] = max(mx[x],S-size[x]);\n    if(mx[x] < mx[root])\n    {\n        root = x;\n    }\n}\nint cnt,dis[10101],deep[101010];\nint minn = 0x3f3f3f3f;\nint ans = 0;\nvoid get_dis(int x,int fa,int len,int k)\n{\n    dis[++cnt] = len;\n    deep[cnt] = k;\n    for (int i = head[x];i;i = edges[i].net)\n    {\n        edge v = edges[i];\n        if(vis[v.to]||v.to == fa) continue;\n        get_dis(v.to,x,len+v.cost,k+1);\n    }\n}\nvoid solve(int x,int len, int pp)\n{\n    cnt = 0;\n    get_dis(x,0,len,0);\n    sort(dis+1,dis+1+cnt);\n    int l = 1,r = cnt;\n    while(l <= r)\n    {\n        if(dis[l] + dis[r] == k)\n        {\n            ans += pp;\n            if(deep[l] + deep[r] < minn)\n            {\n                minn = deep[l] + deep[r];\n            }\n            break;\n        }\n        if(dis[l] + dis[r] < k) l++;\n        if(dis[l] + dis[r] > k) r--;\n        \n    }\n    /*for (int i = 1; i <= cnt; i++)\n    {\n        for (int j = 1; j <= cnt; j++)\n        {\n            if(dis[i] + dis[j] == k) ans += pp;\n        }\n    }*/\n}\nvoid Divide(int x)\n{\n    solve(x,0,1);\n    vis[x] = 1;\n    for (int i = head[x];i;i = edges[i].net)\n    {\n    \tedge v = edges[i];\n    \tif(vis[v.to]) continue;\n    \tsolve(v.to,v.cost,-1);\n    \tS = size[v.to]; root = 0;\n    \tfind(v.to,x);\n    //\tprintf(\"%d\\n\",root);\n    \tDivide(root);\n    }\n}\nint main()\n{\n    read(n); read(k);\n    for (int i = 1; i < n; i++)\n    {\n    \tint x,y,z;\n    \tread(x); read(y); read(z);\n    \tx++;y++;\n    \tadd(x,y,z);\n    \tadd(y,x,z);\n    }\n    root = 0;\n    mx[root] = n+1;\n    S = n;\n    find(1,0);\n    //printf(\"%d\\n\",root);\n    Divide(root);\n    printf(\"%d\\n\",ans == 0? -1 : minn);\n    return 0;\n}\n```\n\u8be5\u7b97\u6cd5\u6302\u6389\u7684\u4e3b\u8981\u539f\u56e0\u5728\u4e8e\u4f7f\u7528\u8ba1\u6570\u5668\u8bb0\u5f55\u6700\u5c0f\u503c\u65f6\uff0c\u4e00\u4e2a\u5143\u7d20\u65e0\u6cd5\u5904\u7406\u9519\u8bef\u8def\u5f84\u8fd9\u79cd\u9a9a\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u849f\u84bb\u7684\u6211\u60f3\u5230\u4e86\u5f00\u4e00\u4e2a\u5927\u6570\u7ec4\u6765\u8ba1\u6570\uff08~~\u8fd9TM\u4e0d\u5c31\u662f\u6876\u6392\u5417~~\uff09\n\n\u4e8e\u662f\u6211\u5c31\u81ea\u4fe1\u5730\u6253\u4e0a\u4e86\u5982\u4e0b\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#define ll long long\nusing namespace std;\ninline ll read()\n{\n    ll kkk=0;\n    int x=1;\n    char c=getchar();\n    while(c<'0' || c>'9')\n    {\n        if(c=='-')\n            x=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9')\n        kkk=(kkk<<3)+(kkk<<1)+(c-'0'),c=getchar();\n    return kkk*x;\n}\nstruct sb\n{\n    int to,l,nextn;\n}a[200001];\nint n,k,num,maxn,root,z,tot,head[200001],size[200001],maxsize[200001],ans[200001],dis[200001][2];\nchar pd[200001];\ninline int ADD(int from,int to,int l)\n{\n    ++tot;\n    a[tot].to=to,a[tot].l=l,a[tot].nextn=head[from],head[from]=tot;\n}\ninline int find(int u,int fa)\n{\n    size[u]=1,maxsize[u]=0;\n    for(register int i=head[u];i!=0;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(v==fa || pd[v]==1)\n            continue;\n        find(v,u);\n        size[u]+=size[v],maxsize[u]=max(maxsize[u],size[v]);\n    }\n    maxsize[u]=max(maxsize[u],z-size[u]);\n    if(maxsize[u]<maxn)\n        root=u,maxn=maxsize[u];\n}\ninline int run(int u,int fa,int l,int deep)\n{\n    dis[++num][0]=l,dis[num][1]=deep;\n    for(register int i=head[u];i!=0;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(v==fa || pd[v]==1)\n            continue;\n        run(v,u,l+a[i].l,deep+1);\n    }\n}\ninline int fun(int Root)\n{\n    pd[Root]=1;\n    num=0;\n    run(Root,-1,0,0);\n    for(register int i=1;i<=num;++i)\n        for(register int j=i;j<=num;++j)\n            if(dis[i][0]+dis[j][0]==k)\n                ++ans[dis[i][1]+dis[j][1]];\n    for(register int i=head[Root];i!=0;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(pd[v]==1)\n            continue;\n        num=0;\n        run(v,Root,a[i].l,1);\n        for(register int j=1;j<=num;++j)\n            for(register int w=j;w<=num;++w)\n                if(dis[j][0]+dis[w][0]==k)\n                    --ans[dis[j][1]+dis[w][1]];\n        maxn=0x7f7f7f7f,root=-1,z=size[v];\n        find(v,Root);\n        fun(root);\n    }\n}\nint main()\n{\n    n=read(),k=read();\n    for(register int i=1;i<n;++i)\n    {\n        int u=read(),v=read(),k=read();\n        ADD(u,v,k),ADD(v,u,k);\n    }\n    maxn=0x7f7f7f7f,root=-1,z=n;\n    find(0,-1);\n    fun(root);\n    for(register int i=0;i<=n;++i)\n        if(ans[i]!=0)\n        {\n            printf(\"%d\\n\",i);\n            return 0;\n        }\n    putchar('-');\n    putchar('1');\n    putchar('\\n');\n    return 0;\n}\n```\n~~\u548c\u4e4b\u524d\u90a3\u4efd\u4ee3\u7801\u660e\u663e\u7801\u98ce\u4e0d\u540c\u5427~~\n\n\u7ed3\u679c\u6211\u5c34\u5c2c\u5730\u53ea\u62ff\u4e8610\u5206\uff0c\u849f\u84bb\u7684\u6211\u5f00\u59cb\u6c89\u601d\u2014\u2014\u2014\u2014\u8fd9\u4e48\u9ad8\u7ea7\u7684\u65b9\u6cd5\u600e\u4e48\u4f1a\u6302\u5462\uff1f\uff1f\uff1f\uff08~~WTF\uff0c\u9664\u4e86\u70b9\u5206\u6cbb\u9ad8\u7ea7\u5916\u5c31\u5168\u662f\u679a\u4e3e\u597d\u5427~~\uff09\n\n\u5176\u5b9e\u6211\u53ea\u662f\u60f3\u68c0\u67e5\u7b97\u6cd5\u6b63\u786e\u6027\u73a9\u73a9\u800c\u5df2\uff08~~\u554a\u554a\uff0c\u522b\u6253~~\uff09\n\n\u4ee5\u4e0a\u4ee3\u7801\u6302\u6389\u7684\u4e3b\u8981\u539f\u56e0\u662f\u8ba1\u6570\u90a3\u4e00\u6bb5\u592a\u6162\u4e86\uff0c\u6ca1\u9519\u5c31\u662f\u4e0b\u9762\u8fd9\u4e00\u6bb5\n```cpp\n    num=0;\n    run(Root,-1,0,0);\n    for(register int i=1;i<=num;++i)\n        for(register int j=i;j<=num;++j)\n            if(dis[i][0]+dis[j][0]==k)\n                ++ans[dis[i][1]+dis[j][1]];\n```\n\n\u4e8e\u662f\u6211\u6392\u4e86\u4e2a\u5e8f\uff0c\u7528\u7528\u4e24\u4e2a\u6307\u9488\u627e\u4e86\u4e0b\u5408\u6cd5\u65b9\u6848\uff0c\u5e76\u7528last\u8bb0\u5f55\u6ca1\u6b21\u4e8c\u53f7\u6307\u9488\u7684\u6700\u5927\u4f4d\u7f6e+1\u5c31\u8fc7\u4e86\n\nPS\uff1a\u6ce8\u610f\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u5b8c\u5168\u53ef\u4ee5\u76f8\u7b49\uff0c\u6240\u4ee5\u627e\u5230\u5408\u6cd5\u65b9\u6848\u540e\u8981\u5411\u4e0b\u5faa\u73af\u6c42\u89e3~~\u5e94\u8be5\u4f1a\u88ab\u5361\u6210\u8ddf\u4e4b\u524d\u90a3\u6bb5\u4e00\u6837\u7684\u65f6\u95f4~~\uff08\u79bb\u6563\u5316\u53ef\u4ee5\u4f18\u5316\uff09\n```cpp\n    num=0;\n    run(Root,-1,0,0);\n    sort(dis+1,dis+num+1,cmp);  //\u4e3a\u4e86\u6392\u5e8f\uff0c\u6211\u628a\u4e4b\u524d\u7684dis[][0]\u548cdis[][1]\u653e\u5728\u4e86struct\u91cc\u9762\n    int last=1;\n    for(;last<=num & dis[1].l+dis[last].l<=k;++last);   //\u8fd9\u91cc\u6709\u4e2a\u5206\u53f7\uff01\uff01\uff01\n    for(register int i=1;i<=num & dis[i].l*2<k;++i)\n    {\n        int j=last-1;\n        while(j>=i)\n        {\n            int P=dis[i].l+dis[j].l;\n            if(P<=k)\n            {\n                last=j+1;\n                if(P==k)\n                {\n                    ++ans[dis[i].deep+dis[j].deep];\n                    while(dis[j-1].l==dis[j].l & j>i)\n                        --j,++ans[dis[i].deep+dis[j].deep];\n                }\n                break;\n            }\n            --j;\n        }\n    }\n```\n\n\u4e0d\u8fc7\u6211\u89c9\u5f97last\u7684\u521d\u59cb\u5316\u592a\u66b4\u529b\uff0c\u5c31\u7528\u4e8c\u5206\u67e5\u627e\u5c0f\u4f18\u5316\u4e86\u4ee5\u4e0b\uff0c\u90a3\u90fd\u662f\u540e\u8bdd\u4e86\n\n\u597d\u5427\u63a5\u4e0b\u6765\u662fAC\u4ee3\u7801\uff08~~\u81f3\u5c11\u4ee5\u524d\u662f\u7684~~\u73b0\u5728\u4e5f\u662f\uff09\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n    int kkk=0;\n    int x=1;\n    char c=getchar();\n    while(c<'0' || c>'9')\n    {\n        if(c=='-')\n            x=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9')\n        kkk=(kkk<<3)+(kkk<<1)+(c-'0'),c=getchar();\n    return kkk*x;\n}\nstruct sb\n{\n    int to,l,nextn;\n}a[400001];\nint n,k,num,maxn,root,z,tot,head[400001],size[400001],maxsize[400001],ans[400001];\nstruct tmd\n{\n    int l,deep;\n}dis[400001];\nchar pd[400001];\ninline int cmp(tmd x,tmd y)\n{\n    return x.l<y.l;\n}\ninline int ADD(int from,int to,int l)\n{\n    ++tot;\n    a[tot].to=to,a[tot].l=l,a[tot].nextn=head[from],head[from]=tot;\n}\ninline int find(int u,int fa)\n{\n    size[u]=1,maxsize[u]=0;\n    for(register int i=head[u];i;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(v==fa | pd[v])\n            continue;\n        find(v,u);\n        size[u]+=size[v],maxsize[u]=(maxsize[u]>size[v]?maxsize[u]:size[v]);\n    }\n    maxsize[u]=(maxsize[u]>z-size[u]?maxsize[u]:z-size[u]);\n    if(maxsize[u]<maxn)\n        root=u,maxn=maxsize[u];\n}\ninline int run(int u,int fa,int l,int deep)\n{\n    dis[++num].l=l,dis[num].deep=deep;\n    for(register int i=head[u];i;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(v==fa | pd[v])\n            continue;\n        run(v,u,l+a[i].l,deep+1);\n    }\n}\ninline int fun(int Root)\n{\n    pd[Root]=1,num=0,run(Root,-1,0,0),sort(dis+1,dis+num+1,cmp);\n    int last,l=1,r=num;\n    while(l<r)\n    {\n        int mid=(l+r)/2;\n        if(dis[1].l+dis[mid].l<=k)\n            l=mid+1;\n        else\n            r=mid;\n    }\n    last=l;\n    if(last==num & dis[1].l+dis[last].l<=k)\n        ++last;\n    for(register int i=1;i<=num & dis[i].l*2<k;++i)\n    {\n        int j=last-1;\n        while(j>=i)\n        {\n            int P=dis[i].l+dis[j].l;\n            if(P<=k) \n            {\n                last=j+1;\n                if(P==k)\n                {\n                    ++ans[dis[i].deep+dis[j].deep];\n                    while(dis[j-1].l==dis[j].l & j>i)\n                        --j,++ans[dis[i].deep+dis[j].deep];\n                }\n                break;\n            }\n            --j;\n        }\n    }\n    for(register int i=head[Root];i;i=a[i].nextn)\n    {\n        int v=a[i].to;\n        if(pd[v])\n            continue;\n        num=0,run(v,Root,a[i].l,1),sort(dis+1,dis+num+1,cmp);\n        l=1,r=num;\n        while(l<r)\n        {\n            int mid=(l+r)/2;\n            if(dis[1].l+dis[mid].l<=k)\n                l=mid+1;\n            else\n                r=mid;\n        }\n        last=l;\n        if(last==num & dis[1].l+dis[last].l<=k)\n            ++last;\n        for(register int j=1;j<=num & dis[j].l*2<k;++j)\n        {\n            int w=last-1;\n            while(w>=j)\n            {\n                int P=dis[j].l+dis[w].l;\n                if(P<=k)\n                {\n                    last=w+1;\n                    if(P==k)\n                    {\n                        --ans[dis[j].deep+dis[w].deep];\n                        while(dis[w-1].l==dis[w].l & w>j)\n                            --w,--ans[dis[j].deep+dis[w].deep];\n                    }\n                    break;\n                }\n                --w;\n            }\n        }\n        maxn=0x7f7f7f7f,root=-1,z=size[v],find(v,Root),fun(root);\n    }\n}\nint main()\n{\n    n=read(),k=read();\n    for(register int i=1;i<n;++i)\n    {\n        int u=read(),v=read(),k=read();\n        ADD(u,v,k),ADD(v,u,k);\n    }\n    maxn=0x7f7f7f7f,root=-1,z=n;\n    find(0,-1),fun(root);\n    for(register int i=0;i<=n;++i)\n        if(ans[i])\n        {\n            printf(\"%d\\n\",i);\n            return 0;\n        }\n    putchar('-');\n    putchar('1');\n    putchar('\\n');\n    return 0;\n}\n```\n\n-----------\n\u540e\u8bb0\uff1a\n\n\u6d1b\u8c37\u8bc4\u6d4b\u59ec\u66f4\u65b0\u4ee5\u540e\u7a7a\u95f4\u597d\u50cf\u53d8\u5c11\u4e86\uff0c\u6240\u4ee5\u6211\u7684\u6808\u7a7a\u95f4\u88ab\u5361\u7206\u4e86\uff0c\u5927\u6570\u636e\u8fde\u627e\u91cd\u5fc3\u90fd\u8dd1\u4e0d\u8fc7\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u6253\u624b\u52a8~~\u819c~~\u6a21\u62df\u6808\u6765\u4f18\u5316\uff0c\u4f46\u592a\u9ebb\u70e6\u4e86\u3002\uff082018.8\uff09\n\n\u6211\u4eca\u5929\u597d\u50cf\u53d1\u73b0\u628a\u80fd\u6362int\u7c7b\u578b\u7684\u51fd\u6570\u6362\u6210void\u5c31\u80fd\u8fc7\u4e86\u3002\uff082018.10.30\uff09",
        "postTime": 1534955451,
        "uid": 36933,
        "name": "zhy12138",
        "ccfLevel": 9,
        "title": "[IOI2011]Race"
    },
    {
        "content": "# \u70b9\u5206\u6cbb\u88f8\u9898\uff1f\n\u628a\u6bcf\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff08\u5230\u9009\u5b9a\u7684\u6839\u7684\u8ddd\u79bb\u548c\u6df1\u5ea6\uff09\u653e\u5728pair\u4e2d\uff0c\u4e22\u5230set\u91cc\uff0c\u6bcf\u6b21\u76f4\u63a5lower_bound\u67e5\u627e\u5373\u53ef\uff08\u6ce8\u610f\u6bcf\u6b21\u8981\u5148\u628a(0,0)\u52a0\u5165\uff09\n\n~~\u8dd1\u5f97\u8d85\u7ea7\u6162\uff0c\u6216\u8bb8\u624b\u5199\u5e73\u8861\u6811\u4f1a\u5feb\u8bb8\u591a\uff0c\u5f00O2\u5feb\u56db\u500d~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int gi() {\n\tregister int x,op=1,c;\n\twhile(c=getchar(),c<'0'||c>'9')if(c=='-')op=-op;\n\tx=c^48;\n\twhile(c=getchar(),c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48);\n\treturn x*op;\n}\nint head[200001],nxt[400001],ver[400001],val[400001],tot=0;\nvoid add(int x,int y,int v) {\n\tver[++tot]=y,val[tot]=v,nxt[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,val[tot]=v,nxt[tot]=head[y],head[y]=tot;\n}\nint n,k;\nbool v[200001]={0};\nint root;\nint sz[200001],mx[200001];\nint S;\nvoid getroot(int x,int f) {\n\tsz[x]=1,mx[x]=0;\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(ver[i]!=f&&!v[ver[i]]) {\n\t\t\tgetroot(ver[i],x);\n\t\t\tsz[x]+=sz[ver[i]];\n\t\t\tmx[x]=max(mx[x],sz[ver[i]]);\n\t\t}\n\tmx[x]=max(mx[x],S-sz[x]);\n\tif(mx[x]<mx[root])root=x;\n}\nint ans=1e9;\nint cnt;\npair<int,int>a[200001];\nvoid dfs(int x,int f,int vl,int dp) {\n\tif(dp>ans||vl>k)return;//\u526a\u679d\n\ta[++cnt]=make_pair(vl,dp);\n\tfor(int i=head[x];i;i=nxt[i])\n\t\tif(ver[i]!=f&&!v[ver[i]])\n\t\t\tdfs(ver[i],x,vl+val[i],dp+1);\n}\nvoid solve(int x,int s) {\n\tS=s;\n\troot=0;\n\tgetroot(x,x);\n\tv[root]=1;\n\tset<pair<int,int> >st;\n\tst.insert(make_pair(0,0));\n\tfor(int i=head[root];i;i=nxt[i])\n\t\tif(!v[ver[i]]) {\n\t\t\tcnt=0;\n\t\t\tdfs(ver[i],root,val[i],1);\n\t\t\tset<pair<int,int> >::iterator it;\n\t\t\tfor(int i=1;i<=cnt;i++) {\n\t\t\t\tit=st.lower_bound(make_pair(k-a[i].first,0));\n\t\t\t\tif(it!=st.end()&&it->first+a[i].first==k)ans=min(ans,it->second+a[i].second);\n\t\t\t}\n\t\t\tfor(int i=1;i<=cnt;i++)st.insert(a[i]);\n\t\t}\n\tst.clear();\n\tfor(int i=head[root];i;i=nxt[i])\n\t\tif(!v[ver[i]])solve(ver[i],sz[ver[i]]);\n}\nint main() {\n\tmx[0]=1e9;\n\tn=gi(),k=gi();\n\tfor(int i=1,x,y;i<n;i++)\n\t\tx=gi()+1,y=gi()+1,add(x,y,gi());\n\tsolve(1,n);\n\tif(ans==1e9)puts(\"-1\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1544753698,
        "uid": 70310,
        "name": "wuzhaoxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u6bcf\u6b21\u627e\u51fa\u4e00\u4e2a\u91cd\u5fc3,\u628a\u6811\u4e0a\u7684\u8def\u5f84\u5206\u4e3a\u4e24\u7c7b,\u4e00\u7c7b\u662f\u7ecf\u8fc7\u8fd9\u4e2a\u91cd\u5fc3\u7684,\u4e00\u7c7b\u662f\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u91cd\u5fc3\u7684,\u6211\u4eec\u53ea\u8003\u8651\u7ecf\u8fc7\u8fd9\u4e2a\u91cd\u5fc3\u7684\u8def\u5f84,\u5206\u6cbb\u7684\u601d\u60f3\u5c31\u5f88\u660e\u663e\u4e86.\n\n\u8003\u8651\u6bcf\u4e2a\u91cd\u5fc3\u7684\u66f4\u65b0\u65b9\u5f0f,\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2ache[i],\u8868\u793a\u4e00\u6761\u6743\u503c\u548c\u4e3ai\u7684\u8def\u5f84\u7684\u6700\u5c0f\u957f\u5ea6,\u8bb0\u5f55\u8def\u5f84\u7684\u6743\u503c\u548crem[i],\u957f\u5ea6di[i],\u6bcf\u6b21\u5c1d\u8bd5\u7528k-rem[i]\u6765\u5339\u914d,\u518d\u7528di[i]\u6765\u66f4\u65b0che[i]\u5373\u53ef.\n\n\u4ee3\u7801\u5f88\u597d\u61c2.\n\n## \u4ee3\u7801\n\n```cpp\n#include \"iostream\"\n#include \"cstdio\"\n#include \"cstring\"\n#include \"cmath\"\n#include \"cstdlib\"\n#include \"cctype\"\n#include \"algorithm\"\n#include \"set\"\n#include \"queue\"\n#include \"map\"\n#include \"stack\"\n#include \"vector\"\n#define lxl long long\n#define R register\n#define INF 9223372036854775807\n#define debug(x) printf(\"debug:%lld\\n\",x)\nconst lxl maxn=200010,maxk=1000010;\nlxl n,k,EdgeSize,rt,sum,ans=INF;\nlxl maxp[maxn],size[maxn],head[maxn],dis[maxn],val[maxn],che[maxk],rem[maxn],di[maxn],q[maxn];\nbool vis[maxn];\nstruct _Edge\n{\n\tlxl to,next,val;\n}e[maxn<<1];\ninline lxl read()\n{\n\tchar c=getchar();\n\tlxl f=1,x=0;\n\tfor(;!isdigit(c);c=getchar())(c=='-')&&(f=-1);\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\treturn f*x;\n}\ninline void EdgeAdd(lxl from,lxl to,lxl val)\n{\n\te[EdgeSize].to=to;\n\te[EdgeSize].next=head[from];\n\te[EdgeSize].val=val;\n\thead[from]=EdgeSize++;\n}\nvoid GetRoot(lxl now,lxl from)\n{\n\tsize[now]=1,maxp[now]=0;\n\tfor(R int i(head[now]);~i;i=e[i].next)\n\t{\n\t\tif(e[i].to==from||vis[e[i].to])continue;\n\t\tGetRoot(e[i].to,now);\n\t\tsize[now]+=size[e[i].to];\n\t\tmaxp[now]=std::max(maxp[now],size[e[i].to]);\n\t}\n\tmaxp[now]=std::max(maxp[now],sum-size[now]);\n\tif(maxp[now]<maxp[rt])rt=now;\n}\nvoid GetDis(lxl now,lxl from)\n{\n\trem[++rem[0]]=val[now],di[rem[0]]=dis[now];\n\tfor(R int i(head[now]);~i;i=e[i].next)\n\t{\n\t\tif(from==e[i].to||vis[e[i].to])continue;\n\t\tdis[e[i].to]=dis[now]+1,val[e[i].to]=val[now]+e[i].val;\n\t\tGetDis(e[i].to,now);\n\t}\n}\nvoid calc(lxl now)\n{\n\tq[0]=0;\n\tfor(R int i(head[now]);~i;i=e[i].next)\n\t{\n\t\tif(vis[e[i].to])continue;\n\t\tval[e[i].to]=e[i].val,dis[e[i].to]=1,rem[0]=0,di[0]=0;\n\t\tGetDis(e[i].to,now);\n\t\tfor(R int i(1);i<=rem[0];++i)\n\t\t{\n\t\t\tif(k-rem[i]<0)continue;\n\t\t\tif(che[k-rem[i]]<INF)ans=std::min(ans,di[i]+che[k-rem[i]]);\n\t\t}\n\t\tfor(R int i(1);i<=rem[0];++i)if(rem[i]<=k)che[rem[i]]=std::min(che[rem[i]],di[i]),q[++q[0]]=rem[i];\n\t}\n\tfor(R int i(1);i<=q[0];++i)che[q[i]]=INF;\n}\nvoid slove(lxl now)\n{\n\tvis[now]=true,che[0]=0;\n\tcalc(now);\n\tfor(R int i(head[now]);~i;i=e[i].next)\n\t{\n\t\tif(vis[e[i].to])continue;\n\t\tmaxp[rt=0]=INF,sum=size[e[i].to];\n\t\tGetRoot(e[i].to,0),slove(rt);\n\t}\n}\nint main(void)\n{\n//\tfreopen(\"P4149_7.in\",\"r\",stdin);\n\tmemset(head,-1,sizeof(head));\n\tn=read(),k=read();\n\tfor(R int i(1);i<=k;++i)che[i]=INF;\n\tfor(R int i(1),u,v,val;i<n;++i)\n\t{\n\t\tu=read()+1,v=read()+1,val=read();\n\t\tEdgeAdd(u,v,val),EdgeAdd(v,u,val);\n\t}\n\tmaxp[rt]=sum=n;\n\tGetRoot(1,0);\n\tslove(rt);\n\tif(ans<=n)printf(\"%lld\\n\",ans);\n\telse printf(\"-1\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1581597476,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "\u7ed9\u535a\u5ba2\u6253\u4e00\u4e0b\u5e7f\u544a\uff1a[QAQ](https://www.cnblogs.com/NLDQY/p/10824460.html)\n\n## Solution:\n\n\u70b9\u5206\u6cbb\uff0c\u7b97\u51fa\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u8bb0\u5f55\u6240\u5c5e\u5b50\u6811\u548c\u4e0e\u8ddf\u4e4b\u95f4\u7684\u8fb9\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u8bb0\u5f55\u6392\u5e8f\u8fc7\u540e\u4f4d\u7f6e\u79bb\u81ea\u5df1\u6700\u8fd1\u7684\u4e0d\u540c\u5b50\u6811\u7684\u70b9\uff0c\u8bb0\u505ago[x]\n\n\u6bcf\u6b21\u4e8c\u5206\u53bb\u66f4\u65b0\uff0c\u82e5\u9047\u5230\u540c\u4e00\u5b50\u6811\u7684\u70b9\uff0c\u5219\u5c1d\u8bd5\u7528go[x]\u53bb\u66f4\u65b0\n\n\u6392\u5e8f\u4ee5\u8ddd\u79bb\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u8fb9\u6570\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57(\u8fd9\u6837\u4e8c\u5206\u51fa\u6765\u7684\u70b9\u4e00\u5b9a\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u4f18\u7684\u70b9)\n\n\u8be6\u89c1\u4ee3\u7801(\u6ce8\u610f\u7f16\u53f7\u4ece0\u5f00\u59cb)\n\n## Code:\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 2147483647\nusing namespace std;\nconst int N=2e5+1;\nint n,k,rt,szt,cnt,tot,head[N];\nint ans,sz[N],mx[N],vis[N],go[N];\nstruct Edge{int nxt,to,val;}edge[N<<1];\nstruct Pos{int dis,be,u;}p[N];\ninline bool cmp(Pos a,Pos b){return a.dis==b.dis?a.u<b.u:a.dis<b.dis;}\nvoid ins(int x,int y,int z){\n\tedge[++cnt].nxt=head[x];\n\tedge[cnt].to=y;edge[cnt].val=z;\n\thead[x]=cnt;\n}\nvoid getrt(int x,int fa){\n\tmx[x]=0;sz[x]=1;\n\tfor(int i=head[x];~i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(vis[y]||y==fa) continue;\n\t\tgetrt(y,x);sz[x]+=sz[y];\n\t\tmx[x]=max(mx[x],sz[y]);\n\t}mx[x]=max(mx[x],szt-sz[x]);\n\tif(mx[x]<mx[rt]) rt=x;\n}\nvoid getdis(int x,int fa,int d,int s,int num){\n\tp[++tot].dis=d;\n\tp[tot].be=s;\n\tp[tot].u=num;\n\tfor(int i=head[x];~i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(vis[y]||y==fa) continue;\n\t\tgetdis(y,x,d+edge[i].val,s,num+1);\n\t}\n}\nint find(int x,int l,int r){\n\twhile(l<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(x+p[mid].dis<k) l=mid+1;\n\t\telse r=mid;\n\t}return l;\n}\nvoid divide(int x){\n\tvis[x]=1;tot=0;\n\tfor(int i=head[x];~i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(vis[y]) continue;\n\t\tgetdis(y,x,edge[i].val,y,1);\n\t}\n\tsort(p+1,p+tot+1,cmp);\n\tfor(int i=1;i<=tot;i++)\n\t\tif(p[i].dis==k) ans=min(ans,p[i].u);\n\tfor(int i=tot;i>=1;i--){\n\t\tif(p[i].be!=p[i+1].be) go[i]=i+1;\n\t\telse go[i]=go[i+1];\n\t}p[tot+1].dis=0;\n\tfor(int i=1;i<=tot;i++){\n\t\tint x=find(p[i].dis,i+1,tot);\n\t\tif(p[i].dis+p[x].dis==k){\n\t\t\tif(p[i].be!=p[x].be) ans=min(ans,p[i].u+p[x].u);\n\t\t\telse if(p[i].dis+p[go[x]].dis==k) ans=min(ans,p[i].u+p[go[x]].u);\n\t\t}\n\t}\n\tfor(int i=head[x];~i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tif(vis[y]) continue;\n\t\trt=2e5;szt=sz[y];getrt(y,x);\n\t\tdivide(rt);\n\t}\n}\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n    while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint main(){\n\tn=read(),k=read();\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1;i<n;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tins(x,y,z);ins(y,x,z);\n\t}rt=2e5;\n\tszt=n;mx[rt]=inf;getrt(0,-1);\n\tans=inf;divide(rt);printf(\"%d\\n\",ans==inf?-1:ans);\n\treturn 0;\n}\n```",
        "postTime": 1557200545,
        "uid": 73702,
        "name": "DQYdqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "[Luogu4149](https://www.luogu.org/problem/P4149)\n\n\u62dc\u6258\uff0c\u8fd9\u9898\u6211\u662f\u5f53\u70b9\u5206\u6cbb\u6a21\u7248\u6253\uff0c\u7ed3\u679c\u592a\u7740\u6025\u6302\u4e86\u4e2a\u5e95\u671d\u5929\uff0c\u771f\u662f*******\n\n## \u9898\u89e3\uff1a\n\n\u6211\u628a\u672c\u9898\u5206\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u70b9\u5206\u6cbb\u6a21\u7248\uff0c\u4e00\u4e2a\u662f\u672c\u9898\u4e2d\u7684\u5904\u7406\u3002\n\n### \u70b9\u5206\u6cbb\n\n[\u70b9\u5206\u6cbb\u7684\u4ecb\u7ecd](https://www.cnblogs.com/bztMinamoto/p/9489473.html)\uff08\u5927\u4f6c\u5199\u7684\u592a\u597d\u5566\uff0c\u6211\u53ea\u8865\u5145\u4e00\u70b9\u5b9e\u73b0\u7684\u7ec6\u8282\uff0cOrz\uff09\n\n\u70b9\u5206\u6cbb\u672c\u8d28\u4e0a\u4e0d\u662f\u6570\u636e\u7ed3\u6784\u800c\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u7075\u6d3b\u5730\u8fd0\u7528\u5b83\uff0c\u4f46\u4e00\u5b9a\u8981\u81ea\u5df1\u63a8\u4e00\u904d\u590d\u6742\u5ea6\u3002\n\n\u6bd4\u5982\u5728\u6b64\u9898\u4e2d\uff0c\u4e00\u5f00\u59cb\u6211\u8003\u8651\u8fd9\u6837\u70b9\u5206\uff0c\u5373\u7528\u91cd\u5fc3\u5b50\u6811\u548c\u91cd\u5fc3\u81ea\u5df1\u5212\u5206\u6811\uff08\u7ed3\u679c\u662f\u91cd\u5fc3\u88ab\u91cd\u590d\u5305\u542b\uff0c\u4f46\u4e0d\u5f71\u54cd\u7b54\u6848\uff09\uff0c\u4f46\u5728\u6211\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u8981\u60f3\u628a\u6811\u6709\u6548\u5212\u5206\u5f00\uff0c\u5fc5\u987b\u6682\u65f6\u5220\u9664\u8981\u5220\u9664\u7684\u8fb9\uff0c\u7b49\u5904\u7406\u5b8c\u8fd9\u68f5\u5b50\u6811\u518d\u6062\u590d\uff0c\u8fd9\u6837\u7684\u8bdd\u8981\u60f3\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u7528\u5220\u9664\u6807\u8bb0\uff0c\u9020\u6210\u904d\u5386\u5212\u5206\u540e\u7684\u5b50\u6811\u65f6\u5fc5\u987b\u8bbf\u95ee\u6240\u6709\u7684\u8fb9\u800c\u4e0d\u662f\u6b64\u65f6\u6811\u4e2d\u8fd8\u6ca1\u6709\u88ab\u5220\u9664\u7684\u8fb9\uff0c\u5982\u679c\u6211\u7528\u5305\u542b\u91cd\u5fc3\u7684\u5212\u5206\uff0c\u53ef\u4ee5\u770b\u51fa\u590d\u6742\u5ea6\u53d1\u751f\u4e25\u91cd\u9000\u5316\uff0c\u80af\u5b9a\u4e0d\u53ef\u53d6\u3002\n\n\u8fd8\u6709\u5c31\u662f\u5bf9\u5220\u9664\u6807\u8bb0\u7684\u5904\u7406\uff0c\u5982\u679c\u7b80\u5355\u5730\u7528bool\u6570\u7ec4\u7684\u8bdd\uff0c\u53ef\u4ee5\u60f3\u89c1\u51fa\u73b0\u7684\u95ee\u9898\uff1a\u4e0a\u4e00\u6bb5\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u904d\u5386\u5212\u5206\u540e\u7684\u5b50\u6811\u65f6\u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u5df2\u7ecf\u5220\u9664\u7684\u8fb9\uff0c\u5982\u679c\u5212\u5206\u5230\u6700\u540e\u53ea\u5269\u4e24\u4e2a\u70b9\u7684\u6811\u65f6\uff0c\u539f\u6765\u91cd\u5fc3\u7684\u513f\u5b50\u5c31\u53ef\u80fd\u88ab\u9009\u4e3a\u65b0\u7684\u91cd\u5fc3\uff0c\u8fd9\u6837\u5f53\u4f60\u5220\u9664\u53c8\u6062\u590d\u5f53\u524d\u91cd\u5fc3\u4e0e\u513f\u5b50\u7684\u8fde\u8fb9\u540e\uff0c\u5c31\u65e0\u610f\u95f4\u6062\u590d\u4e86\u4e0d\u5e94\u8be5\u6062\u590d\u7684\u539f\u6765\u91cd\u5fc3\u548c\u73b0\u5728\u91cd\u5fc3\u7684\u8fde\u8fb9\uff0c\u9020\u6210\u9519\u8bef\u3002\u6211\u89e3\u51b3\u7684\u65b9\u6cd5\u662f\u628a\u5220\u9664\u6807\u8bb0\u6570\u7ec4\u5f00\u6210int\uff0c\u5220\u8fb9\u628a\u6570\u7ec4++\uff0c\u6062\u590d\u628a\u6570\u7ec4--\u3002\uff08\u5220\u9664\u6062\u590d\u65f6\u522b\u5fd8\u4e86\u4e00\u5757\u5904\u7406\u5b83\u7684\u53cd\u5411\u8fb9\uff09\n\n### \u672c\u9898\uff1a\n\n\u7531\u4e8e\u672c\u9898\u4e2d\u662f\u53d6\u6700\u5c0f\uff0c\u53ef\u4ee5\u5141\u8bb8\u91cd\u590d\u7edf\u8ba1\uff0c\u6211\u4e8e\u662f\u6f5c\u610f\u8bc6\u5730\u7528\u8fd9\u79cd\u60f3\u6cd5\uff0c\u628a\u6240\u6709\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u88c5\u8fdb\u6876\u91cc\uff0c\u518d\u679a\u4e3e\u6bcf\u4e00\u5b50\u6811\uff0c\u7528\u67d0\u79cd\u65b9\u6cd5\u5728\u540c\u79cd\u628a\u6b64\u5b50\u6811\u7684\u6570\u636e\u5220\u53bb\uff0c\u53ef\u4ee5\u8fd9\u4e48\u8bf4\u2014\u2014\u5c31\u662f\u628a\u6bcf\u4e2a\u5b50\u6811\u548c\u4e0d\u7b49\u4e8e\u5b83\u7684\u5b50\u6811\u7684\u6570\u636e\u6bd4\u8f83\uff0c\u6700\u540e\u53d1\u73b0\u820d\u8fd1\u6c42\u8fdc\u515c\u4e86\u4e00\u5708\u3002\n\n\u5176\u5b9e\uff0c\u53ea\u8981\u628a\u6bcf\u4e2a\u5b50\u6811\u548c\u5c0f\u4e8e\u5b83\u7684\u5b50\u6811\u7684\u6570\u636e\u6bd4\u8f83\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5148\u6bd4\u8f83\u518d\u66f4\u65b0\u6570\u636e\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5220\u53bb\u4ec0\u4e48\u3002\n\n\u8fd8\u662f\u90a3\u53e5\u8bdd\uff1a\u6362\u4e2a\u89d2\u5ea6\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <vector>\nusing namespace std;\ntypedef pair<int,int> pii;\nconst int N=2e5+50;\nconst int K=1e6+50;\nint n,k,cnt,ans=N;\nint pre[2*N],head[N],to[2*N],len[2*N],shan[2*N],gsz[N],Hav[K];\nvector<pii > hav[N];\n\nvoid addedge(int ui,int vi,int wi){\n\tcnt++;\n\tpre[cnt]=head[ui];\n\thead[ui]=cnt;\n\tto[cnt]=vi;\n\tlen[cnt]=wi;\n}\n\nvoid dfs_gsz(int now,int fa){\n\tgsz[now]=1;\n\tfor(int i=head[now];i;i=pre[i])\n\t{\n\t\tif(shan[i] || to[i]==fa) continue;\n\t\tdfs_gsz(to[i],now);\n\t\tgsz[now]+=gsz[to[i]];\n\t}\n}\n\nvoid Find(int now,int fa,int& maxp,int& Maxv,int Ato){\n\tint maxv=Ato-gsz[now]+1;\n\tfor(int i=head[now];i;i=pre[i]){\n\t\tif(shan[i] || to[i]==fa) continue;\n\t\tFind(to[i],now,maxp,Maxv,Ato);\n\t\tmaxv=max(maxv,gsz[to[i]]+1);\n\t}\n\tif(maxv!=1 && maxv<Maxv) maxp=now,Maxv=maxv;\n}\n\nint findg(int now){\n\tint maxp=-1,maxv=N;\n\tdfs_gsz(now,-1);\n\tFind(now,-1,maxp,maxv,gsz[now]);\n\treturn maxp;\n}\n\nvoid dfs_hav(int now,int fa,int dep,int root,int Add)\n{\n\tfor(int i=head[now];i;i=pre[i])\n\t{\n\t\tif(shan[i] || to[i]==fa) continue;\n\t\tif(Add+len[i]<=k) \n\t\t{\n\t\t\thav[root].push_back(make_pair(Add+len[i],dep+1));\n\t\t\tdfs_hav(to[i],now,dep+1,root,Add+len[i]);\n\t\t}\n\t}\n}\n\ninline int Min(int a,int b){\n\tif(!a) return b;\n\treturn min(a,b);\n}\n\nvoid solve(int now)\n{\n\tint G=findg(now);\n\tif(G==-1) return;\n\tfor(int i=head[G];i;i=pre[i]) shan[(i&1)?(i+1):(i-1)]++,shan[i]++;\n\tfor(int i=head[G];i;i=pre[i]) if(shan[i]==1) solve(to[i]);\n/**/\n\tfor(int i=head[G];i;i=pre[i])\n\t\tif(shan[i]==1){\n\t\t\tif(len[i]<=k)\n\t\t\t{\n            \thav[to[i]].push_back(make_pair(len[i],1));\n\t\t\t\tdfs_hav(to[i],-1,1,to[i],len[i]);\n\t\t\t}\n\t\t\tfor(int gg=0;gg<hav[to[i]].size();gg++)\n\t\t\t\tif(Hav[k-hav[to[i]][gg].first])\n\t\t\t\t\tans=min(ans,Hav[k-hav[to[i]][gg].first]+hav[to[i]][gg].second);\n\t\t\tfor(int gg=0;gg<hav[to[i]].size();gg++)\n\t\t\t\tHav[hav[to[i]][gg].first]=Min(Hav[hav[to[i]][gg].first],hav[to[i]][gg].second);\n\t\t}\n\tif(Hav[k]) ans=min(ans,Hav[k]);\n\tfor(int i=head[G];i;i=pre[i])\n\t\tif(shan[i]==1){\n\t\t\tfor(int gg=0;gg<hav[to[i]].size();gg++)\n\t\t\t\tHav[hav[to[i]][gg].first]=0;\n\t\t\thav[to[i]].clear();\n\t\t}\n/**/\n\tfor(int i=head[G];i;i=pre[i]) shan[(i&1)?(i+1):(i-1)]--,shan[i]--;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint ui,vi,wi;\t\n\t\tscanf(\"%d%d%d\",&ui,&vi,&wi);\n\t\tui++,vi++;\n\t\taddedge(ui,vi,wi);\n\t\taddedge(vi,ui,wi);\n\t}\n\tsolve(1);\n\tif(ans==N) printf(\"-1\\n\");\n\telse printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1567255745,
        "uid": 41271,
        "name": "\u59a9\u5a9a\u7684ak\u841d\u8389",
        "ccfLevel": 9,
        "title": "IOI2011Race(\u70b9\u5206\u6cbb)"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u8ddf[P3806\u3010\u6a21\u677f\u3011\u70b9\u5206\u6cbb1](https://www.luogu.org/problemnew/show/P3806)\n\u662f\u4e00\u6837\u7684\u9898\uff0c\u53ea\u4e0d\u8fc7\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u6211\u4eec\u7684\u8be2\u95ee\u53ea\u6709\u4e00\u4e2a$k$\uff0c\u800c\u4e14\u8981\u5f00\u4e00\u4e2a\u6876$minn$\u8bb0\u5f55\u4ece\u5f53\u524d\u70b9\u51fa\u53d1\u8ddd\u79bb\u4e3a$x$\u7684\u6700\u5c11\u8fb9\u6570\u662f$minn_x$\uff0c\u5168\u5c40\u7b54\u6848\u7edf\u8ba1\u6700\u5c0f\u5373\u53ef\n```cpp\n#include <bits/stdc++.h>\n#define rg register\n#define inl inline\ntypedef int ll;\nconst int N = 2e5 + 5;\nusing namespace std;\nnamespace fast_IO {\n    inl ll read() {\n        rg char c;\n        rg ll x = 0;\n        rg bool flag = false;\n        while ((c = getchar()) == ' ' || c == '\\n' || c == '\\r');\n        if (c == EOF)return c; if (c == '-')flag = true; else x = c ^ 48;\n        while ((c = getchar()) != ' ' && c != '\\n' && c != '\\r'&&~c)\n            x = (x << 1) + (x << 3) + (c ^ 48);\n        if (flag)return -x; return x;\n    }\n    inl ll max(rg ll a, rg ll b) { if (a > b)return a; return b; }\n    inl ll min(rg ll a, rg ll b) { if (a < b)return a; return b; }\n    void write(rg long long x) { if (x < 0)putchar('-'), x = -x; if (x >= 10)write(x / 10); putchar(x % 10 ^ 48); }\n};\nint minn[N * 5], ssize[N], rt, num, p[N], b[N << 1], nt[N << 1], dist[N], dis[N], w[N << 1], maxt[N], st[N * 5], sum, ans = 0x3f3f3f3f, K, edge[N];\nbool vis[N];\ninl void add(rg int z, rg int y, rg int x)\n{\n    ++x, ++y;\n    b[++num] = y, w[num] = z;\n    nt[num] = p[x], p[x] = num;\n    b[++num] = x, w[num] = z;\n    nt[num] = p[y], p[y] = num;\n}\nvoid getrt(rg int x, rg int fa)\n{\n    ssize[x] = 1; maxt[x] = 0;\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        if (b[e] == fa || vis[b[e]])continue;\n        getrt(b[e], x); ssize[x] += ssize[b[e]];\n        maxt[x] = fast_IO::max(maxt[x], ssize[b[e]]);\n    }\n    maxt[x] = fast_IO::max(maxt[x], sum - ssize[x]);\n    if (maxt[x] < maxt[rt])rt = x;\n}\nvoid getdist(rg int x, rg int tiao, rg int fa)\n{\n    if (dis[x] > K || tiao > ans)return;\n    dist[++*dist] = dis[x], edge[*dist] = tiao;\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        if (b[e] == fa || vis[b[e]])continue;\n        dis[b[e]] = dis[x] + w[e];\n        getdist(b[e], tiao + 1, x);\n    }\n}\ninl void getchild(rg int x)\n{\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        rg int kk = b[e];\n        if (vis[kk])continue;\n        *dist = 0; dis[kk] = w[e];\n        getdist(kk, 1, x);\n        for (rg int j = 1; j <= *dist; ++j)\n            ans = fast_IO::min(ans, edge[j] + minn[K - dist[j]]);\n        for (rg int i = 1; i <= *dist; ++i)\n            minn[st[++*st] = dist[i]] = fast_IO::min(minn[dist[i]], edge[i]);\n    }\n    while (*st)minn[st[*st]] = 0x3f3f3f3f, --*st;\n}\nvoid solve(rg int x)\n{\n    vis[x] = true; minn[0] = 0; getchild(x);\n    for (rg int e = p[x]; e; e = nt[e])\n    {\n        rg int kk = b[e];\n        if (vis[kk])continue;\n        rt = 0; sum = ssize[kk];\n        getrt(kk, x); solve(rt);\n    }\n}\n\nint main(void)\n{\n    rg int n = fast_IO::read(); K = fast_IO::read();\n    for (rg int i = 1; i != n; ++i)\n    {\n        rg int x = fast_IO::read(), y = fast_IO::read(), z = fast_IO::read();\n        add(z, y, x);\n    }\n    memset(minn, 0x3f, sizeof(minn));\n    sum = maxt[rt] = n;\n    getrt(1, 0); solve(rt);\n    if (ans >= n)puts(\"-1\"); else fast_IO::write(ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1550910827,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4149 \u3010[IOI2011]Race\u3011"
    },
    {
        "content": "\u521a\u5b66\u5b8c\u70b9\u5206\u6cbb\uff0c\u7b80\u5355\u4ea4\u6d41\u4e00\u4e0b\u5fc3\u5f97\u3002\n\n\u70b9\u5206\u6cbb\u5f80\u5f80\u679a\u4e3e\u8981\u8fdb\u884c\u8ba1\u7b97\u7684\u70b9\uff0c\u5bf9\u5b83\u8fdb\u884c$divide$\uff08$caculate$\uff09\uff0c\u5e76\u6ce8\u610f\u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u5b50\u6811\u5185\uff0c\u8def\u5f84\u4e0d\u7ecf\u8fc7\u679a\u4e3e\u7684\u70b9\uff0c\u8fd9\u6837\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u5e94\u5f53\u907f\u514d\u5c06\u8fd9\u79cd\u60c5\u51b5\u8ba1\u7b97\u5165\u7b54\u6848\u5185\u3002\n\n~~\u867d\u7136\u8fd9\u4e48\u8bf4\uff0c\u4f46\u8fd8\u662f$WA$\u5728\u4e86\u4e0a\u9762\uff0c\u8fd8\u53d1\u4e86\u6c42\u52a9\u5e16\uff0c\u7136\u540e\u88ab\u4eba\u6253\u56de\u53bb\u5bf9\u62cd......~~\n\n\u5176\u5b9e\u611f\u89c9\u70b9\u5206\u6cbb\u7684$caculate$\u539f\u7406\u7c7b\u4f3c$dp$\uff0c\u4f46\u662f\u6bd4$dp$\u7684\u601d\u7ef4\u96be\u5ea6\u66f4\u5c0f\uff0c~~\u5f53\u7136\u590d\u6742\u5ea6\u4e5f\u66f4\u52a3~~\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u70b9\u5206\u6cbb\u8981\u4e0d\u65ad\u5bfb\u627e\u91cd\u5fc3\uff0c\u907f\u514d\u590d\u6742\u5ea6\u9000\u5316\u3002\n\n\u4ee5\u4e0a\u5927\u6982\u5c31\u662f~~\u70b9\u5206\u6cbb\u5165\u95e8\u56db\u90e8\u66f2~~\u7684\u4e3b\u8981\u60c5\u8282\u4e86\u5427\u3002\n\n------------\n\n\u7b80\u5355\u5730\u8bb2\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\n\n\u540c\u6837\u5730\uff0c\u6211\u4eec\u627e\u5230\u6811\u7684\u91cd\u5fc3\uff0c\u5bf9\u5b83\u8fdb\u884c$divide$\uff08$caculate$\uff09\u3002$dfs$\uff0c\u6574\u9897\u5b50\u6811\uff0c\u6c42\u51fa\u5b50\u6811\u8282\u70b9\u5230\u8be5\u70b9\u7684$dis$\uff0c\u628a$dis$\u5165\u6876\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5c31\u67e5\u627e\u662f\u5426\u6709$K-dis$\u7684\u8def\u5f84\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f3c\u4e4e\u666e\u904d\u7684\u505a\u6cd5\u662f$divide$\u4e4b\u540e\u7edf\u4e00\u628a\u6876\u6e05\u7a7a\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c$lazytag$\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u4f7f\u7528\u65f6\u518d\u6e05\u7a7a\u3002\n\n\u53e6\u5916\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684$dis>K$\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\uff0c\u53ef\u4ee5\u76f4\u63a5$return$\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n\n\n------------\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define chk_digit(c) (c>='0'&&c<='9')\ninline int read() {\n    reg int x=0,f=1;reg char c=getchar();\n    while(!chk_digit(c)) { if(c=='-') f=-1;c=getchar(); }\n    while(chk_digit(c)) x=x*10+c-'0',c=getchar();\n    return x*f;\n}\n#define maxsize 1000010\n#define mymax(x,y) (x>=y?x:y)\n#define mymin(x,y) (x>=y?y:x)\nint n,k,dis[maxsize],ans=maxsize,h[maxsize],cnt,maxs[maxsize],f[maxsize],tot,root,num,alr[maxsize*3],vis[maxsize],d[maxsize*3],dfn;\nstruct node{ int y,next,val; }edg[maxsize<<1];\ninline void add(int x,int y,int val) { edg[++cnt].next=h[x],edg[cnt].y=y,edg[cnt].val=val,h[x]=cnt; }\ninline void find_root(int x,int fa) {\n    f[x]=1,maxs[x]=0;\n    for(reg int i=h[x];i;i=edg[i].next) {\n        int y=edg[i].y;if(y==fa||vis[y]) continue;\n        find_root(y,x),f[x]+=f[y],maxs[x]=mymax(maxs[x],f[y]);\n    }\n    maxs[x]=mymax(maxs[x],tot-f[x]);\n    if(maxs[x]<maxs[root]) root=x; \n} \ninline void dfs(int x,int fa,int dep) {\n    if(dis[x]==k) ans=mymin(ans,dep);\n    if(dis[x]>=k) return;\n    if(alr[dis[x]]!=dfn) d[dis[x]]=maxsize;//\u91cd\u7f6e\u6876 \n    if(dis[x]<k) { if(alr[k-dis[x]]==dfn) ans=mymin(ans,d[k-dis[x]]+dep); }\n    for(reg int i=h[x];i;i=edg[i].next) {\n        int y=edg[i].y;if(y==fa||vis[y]) continue;\n        dis[y]=dis[x]+edg[i].val,dfs(y,x,dep+1);\n    }\n}\ninline void takedown(int x,int fa,int dep) {//\u66f4\u65b0\u6876 \n\tif(dis[x]>=k) return;\n\talr[dis[x]]=dfn,d[dis[x]]=mymin(d[dis[x]],dep);\n\tfor(reg int i=h[x];i;i=edg[i].next) {\n\t\tint y=edg[i].y;if(y==fa||vis[y]) continue;\n\t\ttakedown(y,x,dep+1);\n\t}\n}\ninline void divide(int x) {\n    vis[x]=1,dis[x]=0,++dfn;\n    for(reg int i=h[x];i;i=edg[i].next) {\n        int y=edg[i].y;if(vis[y]) continue;\n        dis[y]=edg[i].val,dfs(y,x,1),takedown(y,x,1);//\u5148\u7edf\u8ba1\u7b54\u6848\u518d\u8bb0\u5f55 \n    }\n    for(reg int i=h[x];i;i=edg[i].next) {\n        int y=edg[i].y;if(vis[y]) continue;\n        tot=f[y]/*\u6bcf\u6b21\u627e\u91cd\u5fc3\u7684tot\u90fd\u5e94\u8be5\u66f4\u65b0*/,root=0,find_root(y,x),divide(root);\n    }\n}\nint main() {\n    n=read(),k=read();\n    for(reg int i=1;i<n;++i) {\n        int x=read()+1,y=read()+1,val=read();\n        add(x,y,val),add(y,x,val);\n    } \n    tot=n,maxs[root=0]=maxsize<<1/*\u4e00\u5b9a\u8981\u8bb0\u5f97\u521d\u59cb\u5316\uff0c\u4e0d\u7136\u4f1a\u5f88\u96be\u53d1\u73b0\u9519\u8bef\u4e4b\u5904*/,find_root(1,0),divide(root);\n    if(ans>n) printf(\"-1\\n\");\n    else printf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1583206173,
        "uid": 134640,
        "name": "zsaskk",
        "ccfLevel": 0,
        "title": "[IOI2011]Race"
    },
    {
        "content": "\u8fd9\u9898\u7ec6\u8282\u5de8\u591a\uff08\u4e0d\u8fc7\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u83dc\uff09\uff0c\u8d21\u732e\u4e86\u534a\u9875\u7684\u63d0\u4ea4\u8bb0\u5f55$emmm$\u3002\n\n\u70b9\u5206\u6cbb\u6700\u5bb9\u6613\u51fa\u9505\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u4fe1\u606f\u5e94\u8be5\u5728\u7edf\u8ba1\u5b8c\u8be5\u5b50\u6811\u4e4b\u540e\u518d\u52a0\u5165\u3002\n\n\u4fe1\u606f\u5728\u5230\u4e0b\u4e00\u5c42\u5206\u6cbb\u65f6\u4e00\u5b9a\u8981\u6e05\u5e72\u51c0\u3002\n\n\u8fd9\u9898\u7684\u601d\u8def\u57fa\u672c\u548c\u6a21\u677f\u4e00\u6837\uff0c\u628a\u4e00\u6761\u8def\u5f84\u62c6\u6210\u4e24\u6bb5\uff0c\u5f00\u4e00\u4e2a\u6876\u8bb0\u5f55$dis$\u503c\uff0c\u552f\u4e00\u591a\u4e86\u7684\u5c31\u662f\u8981\u8bb0\u5f55\u6700\u5c11\u7684\u8fb9\u6570\uff08\u66f4\u65b0\u7684\u65f6\u5019\u5343\u4e07\u522b\u7528\u8be5\u6570\u7ec4\u66f4\u65b0\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5404\u79cd\u6bd4\u6807\u51c6\u8f93\u51fa\u5c0f\u7684\u60c5\u51b5\u3002\u8fd9\u4e2a\u6570\u7ec4\u53ea\u662f\u7528\u6765\u7edf\u8ba1\u7b54\u6848\u7684\uff09\u3002\n\n\u7136\u540e\u5c31\u662f~~\u5e38\u6570\u5de8\u5927\u7684~~\u4ee3\u7801\u4e86\n\nCode\uff1a\n\n```cpp\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <tuple>\n#include <bitset>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\ntemplate <class Read>\ninl Read read() {\n\tRead x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-') w = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\nstruct edge {\n\tint next, to, w;\n}e[5000001];\nint focus, min_siz, ncnt, k, n, d[2000001], siz[2000001], head[2000001], tot, st[2000001], top, rem[2000001], rtop, minn[10000001], ans;\nbool bucket[10000001], vis[2000001];\ninl void dfs1(int x, int fa) {\n\tre max_sub = 0;\n\tsiz[x] = 1;\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (fa != e[i].to && !vis[e[i].to]) {\n\t\t\tdfs1(e[i].to, x);\n\t\t\tsiz[x] += siz[e[i].to];\n\t\t\tif (siz[e[i].to] > max_sub)max_sub = siz[e[i].to];\n\t\t}\n\t}\n\tmax_sub = max(max_sub, ncnt - siz[x]);\n\tif (max_sub < min_siz) {\n\t\tmin_siz = max_sub;\n\t\tfocus = x;\n\t}\n}\ninl void dfs2(int x, int fa, int now) {\n\tsiz[x] = 1;\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (e[i].to != fa && !vis[e[i].to]) {\n\t\t\td[e[i].to] = d[x] + e[i].w;\n\t\t\tif (d[e[i].to] > k)d[e[i].to] = k + 1;\n\t\t\tdfs2(e[i].to, x, now + 1);\n\t\t\tsiz[x] += siz[e[i].to];\n\t\t}\n\t}\n}\ninl void calc(int x, int fa, int now) {\n\tif (d[x] <= k)st[++top] = d[x], rem[++rtop] = d[x];\n\tif (d[x] <= k && bucket[k - d[x]]) {\n\t\tminn[k] = min(minn[k], now + minn[k - d[x]]);\n\t}\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (!vis[e[i].to] && e[i].to != fa) {\n\t\t\tcalc(e[i].to, x, now + 1);\n\t\t}\n\t}\n}\ninl void dfs3(int x, int fa, int now) {\n\tminn[d[x]] = min(minn[d[x]], now);\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (!vis[e[i].to] && e[i].to != fa) {\n\t\t\tdfs3(e[i].to, x, now + 1);\n\t\t}\n\t}\n}\ninl void divide(int x, int fa) {\n\tmin_siz = inf;\n\tdfs1(x, fa);\n\tx = focus, vis[x] = 1, bucket[0] = 1, minn[0] = 0, d[x] = 0, top = 0;\n\tdfs2(x, fa, 0);\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (!vis[e[i].to]) {\n\t\t\tcalc(e[i].to, x, 1);\n\t\t\tif (e[i].next) {\n\t\t\t\twhile (top) {\n\t\t\t\t\tif (st[top] <= k)bucket[st[top]] = 1;\n\t\t\t\t\ttop--;\n\t\t\t\t}\n\t\t\t\tdfs3(e[i].to, x, 1);\n\t\t\t}\n\t\t}\n\t}\n\tans = min(ans, minn[k]);\n\twhile (rtop) {\n\t\tif (rem[rtop] <= k)bucket[rem[rtop]] = 0, minn[rem[rtop]] = inf;\n\t\trtop--;\n\t}\n\tfor (re i = head[x]; i; i = e[i].next) {\n\t\tif (!vis[e[i].to]) {\n\t\t\tncnt = siz[e[i].to];\n\t\t\tdivide(e[i].to, x);\n\t\t}\n\t}\n}\ninl void add(int x, int y, int w) {\n\te[++tot] = edge{ head[x],y,w }, head[x] = tot;\n\te[++tot] = edge{ head[y],x,w }, head[y] = tot;\n}\nsigned main() {\n\tmemset(minn, 0x3f, sizeof(minn)), ans = inf;\n\tncnt = n = read<int>(), k = read<int>();\n\tfor (re i = 1, x, y, w; i < n; i++)x = read<int>() + 1, y = read<int>() + 1, w = read<int>(), add(x, y, w);\n\tdivide(1, 0);\n\tprintf(\"%d\\n\", ans == inf ? -1 : ans);\n}\n```\n\n",
        "postTime": 1556443592,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "P4149 Race \u70b9\u5206\u6cbb"
    }
]