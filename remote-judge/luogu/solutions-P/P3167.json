[
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u306eblog](http://www.cnblogs.com/dedicatus545/p/8919383.html)\n\n# \u601d\u8def\n\n## 0x01 KMP\n\n\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u800c~~\u4f18\u79c0~~\u7684\u60f3\u6cd5\uff1a\u628a\u6a21\u677f\u4e32\u6309\u7167'\\*'\u5206\u6bb5\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u6c42$next$\uff0c'?'\u5c31\u5f53\u6210\u53ef\u4ee5\u5bf9\u4e8e\u4efb\u610f\u5b57\u7b26\u5339\u914d\u5c31\u884c\u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6587\u672c\u4e32\uff0c\u4ece\u524d\u5f80\u540e\u627e\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e00\u6bb5\u5b57\u7b26\u8d8a\u9760\u5de6\uff0c\u7ed3\u679c\u4e00\u5b9a\u8d8a\u4f18\n\n\u627e\u5230\u4e86\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\u4ee5\u540e\u5f80\u540e\u8df3\uff0c\u540c\u65f6\u6362\u6210\u66f4\u65b0\u7684\u4e00\u6bb5\u6a21\u677f\u4e32\uff0c\u4e00\u76f4\u5339\u914d\u5230\u6a21\u677f\u4e32\u6ca1\u6709\u4e86\u4e3a\u6b62\n\n\u542c\u8d77\u6765\u5f88\u4e0d\u9519\uff0c\u662f\u5417\uff1f\u4ee3\u7801\u770b\u7740\u4e5f\u5f88\u7b80fu\u6d01za\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint cmp(char l,char r){\n    if(l=='?'||r=='?') return 1;\n    return l==r;\n}\nvoid getfail(char s[],int fail[]){\n    int len=strlen(s),i,j=0;\n    fail[0]=fail[1]=0;\n    for(i=1;i<len;i++){\n        while(j&&!cmp(s[i],s[j])) j=fail[j];\n        j+=cmp(s[i],s[j]);fail[i+1]=j;\n    }\n}\nint match(char b[],char a[],int fail[],int l,int r,int m,int n){\n    int i,j=0;\n    for(i=l;i<=r;i++){\n        while(j&&!cmp(b[j],a[i])) j=fail[j];\n        j+=cmp(b[j],a[i]);\n        if(j==m) return i;\n    }\n    return -1;\n}\nvoid empty(){}\nchar s[100010],b[15][100010],a[100010];int n,m,cnt,p1,p2,fail[15][100010],tot;\nint main(){\n    scanf(\"%s\",s);int i,j,tmp,Q,k,l,r,ans=0;n=strlen(s);\n    p1=(s[0]!='*');p2=(s[n-1]!='*');\n    for(i=0;i<n;i++){\n        if(s[i]=='*') continue;\n        j=i;tmp=0;cnt++;b[cnt][tmp]=s[j];\n        while(s[j+1]!='*'&&j<n) j++,tmp++,b[cnt][tmp]=s[j];\n        i=j;\n    }\n    for(i=1;i<=cnt;i++) getfail(b[i],fail[i]),tot+=strlen(b[i]);\n    if(cnt==0){\n        scanf(\"%d\",&Q);\n        for(j=1;j<=Q;j++){\n            scanf(\"%s\",a);puts(\"YES\");\n        }\n    }\n    if(cnt==1&&p1&&p2){\n        scanf(\"%d\",&Q);\n        for(j=1;j<=Q;j++){\n            scanf(\"%s\",a);m=strlen(a);\n            if(m!=strlen(b[1])) continue;\n            l=match(b[1],a,fail[1],0,m-1,strlen(b[1]),m);\n            if(l==m-1) puts(\"YES\");\n            else puts(\"NO\");\n        }\n        return 0;\n    }\n    scanf(\"%d\",&Q);\n    for(j=1;j<=Q;j++){\n        scanf(\"%s\",a);m=strlen(a);bool flag=0;\n        if(m<tot) goto end;\n        l=p1*strlen(b[1]);r=m-p2*strlen(b[cnt])-1;\n        if(p1)\n            for(i=0;i<strlen(b[1]);i++) \n                if(!cmp(b[1][i],a[i])) goto end;\n        if(p2)\n            for(i=0;i<strlen(b[cnt]);i++) \n                if(!cmp(b[cnt][i],a[m-strlen(b[cnt])+i])) goto end;\n        for(k=p1+1;k<=cnt-p2;k++){\n            l=match(b[k],a,fail[k],l,r,strlen(b[k]),strlen(a));\n            if(l==-1) goto end;\n            l++;\n        }\n        puts(\"YES\");flag=1;\n        end:if(!flag) puts(\"NO\");\n    }\n}\n```\n\n![](http://images.cnblogs.com/cnblogs_com/dedicatus545/1199264/o_1.PNG)\n\n\u51c9\uff01\u51c9\uff01\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u597d\u50cf\u6211\u4eec\u628a'?'\u5f53\u6210\u901a\u914d\u7b26\u5904\u7406\uff0c\u4e5f\u6ca1\u6709\u8fdd\u80cc$next$\u6570\u7ec4\u7684\u610f\u4e49\u554a\uff1f\n\n\u662f\u7684\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7684\u786e\u6ca1\u6709\u8fdd\u80cc\uff0c\u4f46\u662f\u6709\u4e00\u70b9\uff1a\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u4f20\u7edf\u7684$O\\left(n\\right)$\u65b9\u6cd5\u6c42\u51fa$next$\u6570\u7ec4\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u6c42$next$\u7684\u4ee3\u7801\uff1a\n```cpp\nbool cmp(char l,char r){//\u5e26\u901a\u914d\u7b26\u60c5\u51b5\u4e0b\u5224\u65ad\u76f8\u7b49\n\tif(l=='?'||r=='?') return 1;\n    return l==r;\n}\n```\n```cpp\nj=0;fail[0]=fail[1]=0;//fail\u5c31\u662fnext\nfor(i=1;i<len;i++){\n\twhile(j&&!cmp(s[i],s[j])) j=fail[j];\n    j+=cmp(s[i],s[j]);fail[i+1]=j;\n}\n```\n\n\u8fd9\u5176\u4e2d\uff0c\u4e3a\u4ec0\u4e48\u53d8\u91cf$j$\u53ef\u4ee5\u76f4\u63a5\u4e0d\u66f4\u65b0\u76f4\u63a5\u4f7f\u7528\uff1f\uff08\u5176\u4ed6\u7248\u672c\u7684$KMP$\u7684$j$\u672c\u8d28\u4e0a\u5176\u5b9e\u4e5f\u6ca1\u6709\u66f4\u65b0\uff09\n\n\u56e0\u4e3a\u8fd9\u91cc\u7684\u201c\u516c\u5171\u524d\u540e\u7f00\u201d\u6709\u4e00\u4e2a\u524d\u63d0\u6761\u4ef6\uff1a\u6bcf\u4e2a\u5b57\u7b26\u7684\u610f\u4e49\u4e0d\u53d8\uff0c\u8fd9\u6837\u624d\u80fd\u6ee1\u8db3\u6211\u4eec\u4e00\u6b21\u4e00\u6b21\u5f80\u540e\u63a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5229\u7528\u7684\u90fd\u662f\u6700\u957f\u7684\u5df2\u77e5\u516c\u5171\u524d\u540e\u7f00\uff1b\u5982\u679c\u4e2d\u95f4\u51fa\u73b0\u610f\u4e49\u4e0d\u7edf\u4e00\u7684\u5b57\u7b26\u7684\u8bdd\uff0c\u5c31\u4f1a\u5bfc\u81f4$WA$\n\n\u4f46\u662f'?'\u8fd9\u4e2a\u5b57\u7b26\u663e\u7136\u4e0d\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u2014\u2014\u5b83\u53ef\u80fd\u5728$next[5]$\u4e2d\u4f5c\u4e3a'a'\uff0c\u4f46\u662f\u5728$next[6]$\u4e2d\u4f5c\u4e3a'b'\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4$j$\u4e0d\u80fd\u76f4\u63a5\u7ee7\u7eed\u8c03\u7528\uff0c\u6240\u4ee5\u5728\u672c\u9898\u4e2d\uff0c\u8fd9\u4e2a\u6c42$next$\u7684\u65b9\u6cd5\u662f\u9519\u8bef\u7684\uff0820\u5206\u5df2\u7ecf\u662f\u51fa\u9898\u4eba\u601c\u60af\u6211\u4eec\u4e86\uff09\n\n\u90a3\u4e48\u600e\u4e48\u529e\uff1f\u96be\u9053\u66b4\u529b\u6c42$next$\u5417\uff1f\u90a3\u6837\u53ef\u662f$O\\left(n^3\\right)$\u7684\uff0c\u8fd8\u4e0d\u5982\u66b4\u529b\u5339\u914d\u5462......\n\n\u522b\u6025\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a$KMP$\u7684\u6b63\u786e\u6027\n\n## 0x02 \u4f18\u5316\u306e$KMP$\n\n\u5206\u6bb5\u8fd9\u4e2a\u601d\u60f3\uff0c\u5728\u4e0a\u4e00\u6b65\u4e2d\u5e76\u672a\u51fa\u73b0\u4efb\u4f55\u95ee\u9898\n\n\u90a3\u6211\u4eec\u8003\u8651\u628a\u5206\u6bb5\u8d2f\u5f7b\u5230\u5e95\u2014\u2014\u628a'?'\u4e5f\u5206\u5f00\uff01\n\n\u8fd9\u6837\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u5806\u4e0d\u5305\u542b\u4efb\u4f55\u901a\u914d\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u4f9d\u65e7\u662f\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5206\u6bb5\u6c42$next$\uff0c\u6c42\u6700\u9760\u5de6\u7684\u5339\u914d......\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint fail[15][100010],n,m,cnt=0,jump[15],stl[15];\nchar b[15][100010],a[100010];\nvoid getfail(char s[],int len){\n    int i,j=0;fail[cnt][0]=fail[cnt][1]=0;stl[cnt]=len;\n    for(i=1;i<len;i++){\n        while(j&&(s[i]!=s[j])) j=fail[cnt][j];\n        j+=(s[i]==s[j]);fail[cnt][i+1]=j;\n    }\n}\nchar s[100010];\nint main(){\n    scanf(\"%s\",s);int i,j,len,k,l;m=strlen(s);\n    for(i=0;i<m;i++){\n        if(s[i]=='*') continue;\n        if(s[i]=='?'){jump[cnt]++;continue;}\n        j=i;cnt++;len=0;\n        while(s[j]!='*'&&s[j]!='?'&&j<m) b[cnt][len]=s[j],j++,len++;\n        getfail(b[cnt],len);\n        i=j;\n    }\n    scanf(\"%d\",&n);\n    for(l=1;l<=n;l++){\n        scanf(\"%s\",a);len=strlen(a);\n        i=jump[0];bool flag=1;\n        for(k=1;k<=cnt;k++){\n            j=0;\n            for(;i<len;i++){\n                while(j&&(a[i]!=b[k][j])) j=fail[k][j];\n                j+=(a[i]==b[k][j]);\n                if(j==stl[k]) break;\n            }\n            if(j<stl[k]){\n                puts(\"NO\");flag=0;break;\n            }\n            i+=jump[k];\n        }\n        if(flag) puts(\"YES\");\n    }\n}\n```\n\n![](http://images.cnblogs.com/cnblogs_com/dedicatus545/1199264/o_2.PNG)\n\n\u600e\u4e48\u8fd8\u662f$WA!!!!$\n\n\u7b49\u7b49\uff0c\u8fd9\u4e2a\u7b97\u6cd5......\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u9760\u5de6\u7684\u5339\u914d\uff0c\u73b0\u5728\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u4e86\u4e48\uff1f\n\n\u4e0d\u662f\uff01\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n\u6a21\u677f\u4e32\u662f$\\ast aca?ctc$\n\n\u6587\u672c\u4e32\u662f$acaacaactc$\n\n\u90a3\u4e48\uff0c\u663e\u7136\u7b2c\u4e00\u4e2a\u5206\u6bb5$aca$\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u5c31\u662f\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\uff0c\u4f46\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u4f1a\u663e\u793a\u6ca1\u6709\u5339\u914d\u2014\u2014\u56e0\u4e3a'?'\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u8fd9\u65f6\u53ef\u80fd\u9760\u53f3\u624d\u662f\u66f4\u597d\u7684\u9009\u62e9\n\n\u8fd9\u6837\u6765\u770b\uff0c$KMP$\u597d\u50cf\u8d70\u5230\u6b7b\u80e1\u540c\u4e86\uff0c\u63a5\u4e0b\u6765\u600e\u4e48\u529e\u5462......\n\n## 0x03 $dp$\n\n$KMP$\u884c\u4e0d\u901a\u4e86\uff0c\u6211\u4eec\u6765\u60f3\u60f3\u4e00\u4e2a\u66f4\u57fa\u7840\u7684\u505a\u6cd5\uff1a$dp$\n\n\u9898\u76ee\u4e2d\u8bf4\u4e86\uff0c\u672c\u9898\u7684\u901a\u914d\u7b26\u53ea\u670910\u4e2a\u6700\u591a\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u4ee5\u901a\u914d\u7b26\u4e3a\u754c\uff0c\u8bbe\u5b9a$dp$\u72b6\u6001\uff08\u5176\u5b9e\u4e0a\u9762\u7684\u4e24\u4e2a$KMP$\u7b97\u6cd5\u90fd\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u4e2a\u95ee\u9898......\u7701\u9009\u9898\u53ef\u4e0d\u662f\u5ffd\u7565\u4e86\u4e00\u4e2a\u6761\u4ef6\u4e5f\u80fd\u8f7b\u677e$AC$\u7684\uff09\n\n\u8bbe$dp[i][j]$\u8868\u793a\u6587\u672c\u4e32\u7684\u524d$j$\u4e2a\u5b57\u7b26\u5339\u914d\u4e86\u6a21\u5f0f\u4e32\u7b2c$i$\u4e2a\u901a\u914d\u7b26\uff08\u5305\u62ec\u8fd9\u4e2a\u901a\u914d\u7b26\uff09\u524d\u9762\u7684\u6240\u6709\u5b57\u7b26\uff0c\u503c\u4e3a0\u4ee3\u8868\u4e0d\u80fd\uff0c\u503c\u4e3a\u4e00\u4ee3\u8868\u4e0d\u884c\n\n\u90a3\u4e48\uff0c\u663e\u7136\u6709\u4e24\u79cd\u8f6c\u79fb\uff1a\u7b2c$i+1$\u4e2a\u901a\u914d\u7b26\u662f'\\*'\u6216\u8005'?'\n\n\u8f6c\u79fb\u7684\u6761\u4ef6\uff0c\u662f\u4ece\u7b2c$j+1$\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u4e00\u6bb5\u5b57\u7b26\u4e32\u53ef\u4ee5\u4e0e\u7b2c$i$\u4e2a\u548c\u7b2c$i+1$\u4e2a\u901a\u914d\u7b26\u4e4b\u95f4\u7684\u6a21\u677f\u4e32\u5b57\u7b26\u5339\u914d\n\n\u8bbe\u8fd9\u4e00\u6bb5\u6a21\u677f\u4e32\u957f\u5ea6\u4e3a$k$\n\n\u5982\u679c\u662f'?'\uff0c\u90a3\u4e48$dp[i+1][j+k+1]=1$\n\n\u5982\u679c\u662f'\\*'\uff0c\u90a3\u4e48$dp[i+1][j+k...strlen(s)]=1$\n\n\u8fd9\u4e2a\u9012\u63a8\u8c8c\u4f3c\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\n\n**\u600e\u4e48\u8db3\u591f\u5feb\u5730\u77e5\u9053\uff0c\u4ece\u7b2c$j+1$\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u4e00\u6bb5\u5b57\u7b26\u4e32\uff0c\u4e0e\u7b2c$i$\u4e2a\u548c\u7b2c$i+1$\u4e2a\u901a\u914d\u7b26\u4e4b\u95f4\u7684\u6a21\u677f\u4e32\u5b57\u7b26\uff0c\u53ef\u4e0d\u53ef\u4ee5\u5339\u914d\uff1f\uff1f\uff1f**\n\n## 0x04 \u5b57\u7b26\u4e32$hash$\n\n\u53e4\u8bdd\u8bf4\u7684\u597d\uff0c\u8f6c\u6362\u601d\u8def\u662f\u6700\u91cd\u8981\u7684\uff08\u8c8c\u4f3c\u4e0d\u662f\u53e4\u8bdd\uff1f=_=\uff09\n\n\u6211\u4eec\u770b\uff0c\u5982\u679c\u60f3\u77e5\u9053\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u4e14\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u4e24\u4e2a\u5df2\u77e5\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u4ed6\u4eec\u662f\u5426\u5339\u914d\uff08\u7b49\u4ef7\u4e8e\u662f\u5426\u76f8\u7b49\uff09\uff1f\n\n$hash$\u4e00\u4e0b\uff01\n\n\u6211\u4eec\u5982\u679c\u77e5\u9053\u4e86\u8fd9\u4e24\u6bb5\u5b57\u7b26\u4e32\u7684$hash$\u503c\uff0c\u90a3\u4e48\u5224\u65ad\u5b83\u4eec\u662f\u5426\u76f8\u7b49\u4e0d\u662f\u8f7b\u800c\u6613\u4e3e\u4e86\uff1f\n\n\u5148\u522b\u6025\u7740\u9ad8\u5174\uff0c\u56e0\u4e3a\u6c42\u4e00\u6bb5\u672a\u77e5\u5b57\u7b26\u4e32\u7684$hash$\u503c\u4e5f\u662f$O\\left(n\\right)$\u7684......\n\n\u7136\u800c\u6211\u4eec\u7684\u7a0b\u5e8f\u9700\u8981\u5728\u8fd9\u4e00\u6b65\u4e0a\u53ea\u80fd\u6709$O\\left(1\\right)$\u7684\u65f6\u95f4\u5f00\u9500\n\n\u600e\u4e48\u529e\uff1f\n\n## 0x05 $hash+$\u524d\u7f00\u548c\n\n\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u5728\u9700\u8981$O\\left(1\\right)$\u77e5\u9053\u4e00\u6bb5\u533a\u95f4\u7684\u548c\uff08\u5c31\u662f$hash$\u503c\uff09\u7684\u65f6\u5019\uff0c\u662f\u600e\u4e48\u505a\u7684\uff1f\n\n\u524d\u7f00\u548c\u554a\uff01\n\n\u4f46\u662f\uff0c$hash$\u503c\uff0c\u771f\u7684\u53ef\u4ee5\u524d\u7f00\u548c\u5417\uff1f\n\n\u5b8c\u5168\u5927\u4e08\u592b\uff01\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5e38\u89c1$hash$\u8fc7\u7a0b\uff1a\n\n\u4ee5\u5b57\u7b26\u4e32\u7684\u7b2ci\u9879\uff0c\u4f5c\u4e3a$x^i$\u7684\u7cfb\u6570\uff0c\u7136\u540e\u628a\u9009\u5b9a\u7684$x$\uff08\u6bd4\u598219260817\uff09\u4ee3\u5165\u5f97\u5230$hash$\u503c\uff0c\u4e2d\u95f4\u901a\u8fc7mod\u4e00\u4e2a\u6570\u6216\u8005Unsigned\u7c7b\u578b\u7684\u81ea\u7136\u6ea2\u51fa\u6765\u51cf\u5c0f\u8303\u56f4\n\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u591a\u9879\u5f0f\u6c42\u503c\uff0c\u79e6\u4e5d\u97f6\u7b97\u6cd5\u4f18\u5316\u4e0b\u53ef\u4ee5\u8fbe\u5230$O\\left(n\\right)$\n\n\u518d\u8003\u8651\u4e00\u4e2a\u5df2\u77e5\u5b57\u7b26\u4e32$s$\uff0c\u8bbe\u5b83\u7684\u957f\u5ea6\u4e3a$len$\n\n\u90a3\u4e48\uff0c\u5b83\u7684\u524d\u7f00$pre[i]$\u7684\u5b57\u7b26\u4e32$hash$\u7684\u503c\uff0c\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a\n\n### $hash[i]=\\sum_{j=0}^is[j]\\ast x^{i-j}$\n\n\u8003\u8651\u53e6\u4e00\u4e2a$hash$\u503c$hash[p]$\uff0c\u7b97\u6cd5\u4e5f\u662f\u4e00\u6837\u7684\uff08\u8bbe$p>i$\uff09\n\n\u90a3\u4e48\u600e\u4e48\u6c42$i+1$\u5230$p$\u8fd9\u6bb5\u5b57\u7b26\u4e32\u7684$hash$\u503c\u5462\uff1f\n\n\u6211\u4eec\u4ee4$tmp=hash[p]-hash[i]\\ast x^{p-i}$\uff0c\u628a$hash[p]$\u548c$hash[i]$\u5c55\u5f00\uff0c\u5c31\u4f1a\u5f97\u5230\uff1a\n\n### $tmp=\\sum_{j=i+1}^ps[j]\\ast x^{p-j}$\n\n\u628a\u5b50\u4e32$s[i+1...p]$\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a$ss$\uff0c\u957f\u5ea6$llen=p-i$\n\n\u90a3\u4e48\uff1a\n\n### $tmp=\\sum_{j=0}^ps[j]\\ast x^{llen-j}$\n\n\u6b63\u597d\u5c31\u662f\u8fd9\u4e2a\u5b50\u4e32\u7684$hash$\u503c\n\n\u56e0\u6b64\u6211\u4eec\u628a\u8f93\u5165\u7684\u6587\u672c\u4e32\u7684\u524d\u7f00\u7684$hash$\u503c\u9884\u5904\u7406\u597d\uff0c\u540c\u65f6\u9884\u5904\u7406\u51fa$x$\u7684\u5e42\uff0c\u5c31\u53ef\u4ee5$O(1)$\u5b8c\u6210\u5224\u65ad\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll unsigned long long\nll key=19260817ll;//\u819c\u6cd5\u6570\u5b57\nusing namespace std;\nll pre[100010],mul[100010],h[20];int n,cnt,sp[20],stl[20],dp[15][100010];\n//sp\u8868\u793a\u901a\u914d\u7b26\u7c7b\u578b\uff0cstl\u5c31\u662fstrlen\uff08\u8868\u793a\u67d0\u4e00\u6bb5\u7684\u957f\u5ea6\uff09\uff0ch\u662f\u6a21\u677f\u4e32\u67d0\u4e00\u6bb5\u7684hash\u503c\nchar b[15][100010],a[100010],tmp[100010];\nll gethash(char s[],int len){//\u79e6\u4e5d\u97f6\u7b97\u6cd5\u6c42hash\n    ll re=0;int i;\n    for(i=0;i<len;i++) re*=key,re+=(ll)s[i];\n    return re;\n}\nint main(){\n    scanf(\"%s\",a);int i,j,k,l,len=strlen(a);ll t1;\n    mul[0]=1;\n    for(i=1;i<=100000;i++) mul[i]=mul[i-1]*key;\n    if(a[0]=='*'||a[0]=='?') h[++cnt]=gethash(b[cnt],stl[cnt]=0);\n    for(i=0;i<len;){//\u9884\u5904\u7406\u6bcf\u4e00\u6bb5\n        if(a[i]=='*'||a[i]=='?'){sp[cnt]=(sp[cnt]||(a[i]=='*'));i++;}\n        j=0;cnt++;\n        while(a[i]!='*'&&a[i]!='?'&&i<len) b[cnt][j]=a[i],i++,j++;\n        h[cnt]=gethash(b[cnt],stl[cnt]=j);\n    }\n    len++;\n    if(a[len-2]=='*'||a[len-2]=='?') cnt++,sp[cnt]=stl[cnt]=h[cnt]=0;\n    else sp[cnt]=0;\n    scanf(\"%d\",&n);\n    for(l=1;l<=n;l++){\n        memset(a,0,sizeof(a));\n        scanf(\"%s\",a);a[strlen(a)]='$';\n        memset(dp,0,sizeof(dp));dp[0][0]=1;\n        len=strlen(a);\n        for(i=0;i<len;i++) pre[i+1]=pre[i]*key+(ll)a[i];//\u6c42\u524d\u7f00\u548c\n        for(j=0;j<=len;j++){\n            for(i=0;i<=cnt;i++){\n                if(!dp[i][j]) continue;\n                t1=pre[j+stl[i+1]]-pre[j]*mul[stl[i+1]];\n                if(t1==h[i+1]){//hash\u503c\u76f8\u7b49\uff0c\u5339\u914d\u6210\u529f\n                    if(sp[i+1]) for(k=j+stl[i+1];k<=len;k++) dp[i+1][k]=1;\n                    else dp[i+1][j+stl[i+1]+1]=1;\n                    //\u8fd9\u91cc\u5206\u60c5\u51b5\u9012\u63a8\n                }\n            }\n        }\n        if(dp[cnt][len]) puts(\"YES\");\n        else puts(\"NO\");\n    }\n}\n```\n\n![](http://images.cnblogs.com/cnblogs_com/dedicatus545/1199264/o_3.PNG)\n\n$WTF!!!!!$\n\n\u96be\u9053\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u662f\u9519\u7684\uff1f\uff1f\uff1f\uff1f\n\n## 0x06 \u6700\u540e\u7684\u4f18\u5316\n\n\u4e0d\u80fd\u653e\u5f03\u5e0c\u671b\n\n\u6211\u4eec\u89c2\u5bdf\u5199\u51fa\u7684\u4ee3\u7801\u2014\u2014\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\u4f1a\u9020\u6210\u6b7b\u5faa\u73af\uff0c\u90a3\u4e48\u5c31\u662f\u5e38\u89c4\u5faa\u73af\u5bfc\u81f4\u5b83$TLE$\u4e86\uff0c\u7a76\u7adf\u662f\u54ea\u4e00\u6bb5\u5462\uff1f\n```cpp\nif(t1==h[i+1]){\n    if(sp[i+1]) for(k=j+stl[i+1];k<=len;k++) dp[i+1][k]=1;\n    else dp[i+1][j+stl[i+1]+1]=1;\n}\n```\n\n\u6ca1\u9519\uff0c\u6b63\u662f\u8fd9\u4e2a\u4e07\u6076\u7684$for$\u5faa\u73af\uff01\n\n\u8fd9\u4e2a$for$\u5faa\u73af\u7684\u4f5c\u7528\uff0c\u662f\u5728$sp[i+1]=1$\uff0c\u4e5f\u5c31\u662f\u4e0b\u4e00\u4e2a\u901a\u914d\u7b26\u4e3a'\\*'\u7684\u65f6\u5019\uff0c\u7528\u6765\u4e00\u8def\u66f4\u65b0\u4e0b\u53bb\u7684\n\n\u4f46\u662f\u8fd9\u6837\u66f4\u65b0\u6765\u66f4\u65b0\u53bb\uff0c\u4e00\u5b9a\u4f1a\u5bfc\u81f4$TLE$\n\n\u90a3\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4f18\u5316\uff0c\u8ba9\u8fd9\u4e2a\u5faa\u73af\u7684\u8fc7\u7a0b\u5206\u6563\u5230\u904d\u5386$dp[i][j]$\u7684\u65f6\u5019\u53bb\uff0c\u7701\u53bb\u4e00\u5c42$n$\u7684\u590d\u6742\u5ea6\n\n\u8fd9\u91cc\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u4e0d\u540c\u7684\u503c\u6765\u8868\u793a$dp[i][j]$\u7684\u4e0d\u540c\u610f\u4e49\uff1a\n\n\u5f53$dp[i][j]=-1$\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0ccontinue\n\n\u5f53$dp[i][j]=0$\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u88ab\u4e14\u4ec5\u88ab\u4e00\u4e2a'?'\u5f80\u540e\u7684\u9012\u63a8\u8bbf\u95ee\u8fc7\uff0c\u8fd9\u65f6\u6211\u4eec\u4ee4$dp[i][j]=2,dp[i][j+1]=2$\uff0c\u5e76continue\uff08\u56e0\u4e3a\u5f53\u524d\u8282\u70b9\u5e76\u6ca1\u6709\u610f\u4e49\uff0c\u53ea\u662f\u8bbf\u95ee\u8fc7\uff0c\u4e0d\u80fd\u7ee7\u7eed\u9012\u63a8\uff09\n\n\u5f53$dp[i][j]=1$\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u662f\u88ab'\\*'\u8bbf\u95ee\u8fc7\u7684\uff0c\u8fd9\u65f6\u6211\u4eec\u4ee4$dp[i][j+1]=1$\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u5f80\u4e0b\u9012\u63a8\n\n\u5f53$dp[i][j]=2$\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8282\u70b9\u88ab'?'\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u66f4\u65b0\u5230\u4e862\uff0c\u8fd9\u65f6\u76f4\u63a5\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f80\u540e\u9012\u63a8\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u503c\n\n\u6700\u540e\uff0c\u5f53$dp[i][j]=3$\u7684\u65f6\u5019\u2014\u2014\u8fd9\u4e2a\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u60c5\u51b5\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u8ff0\u7684-1\u52302\u7684\u503c\u91cc\u9762\uff0c1\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c0\u6b21\u4e4b\uff0c2\u6700\u4f4e\uff0c-1\u53ef\u4ee5\u88ab\u5b83\u4eec\u968f\u4fbf\u8986\u76d6\n\n\u4f46\u662f\u6211\u4eec\u7684\u786e\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e00\u4e2a0\u5ef6\u4f38\u51fa\u6765\u76842\uff0c\u8986\u76d6\u5230\u4e86\u53e6\u4e00\u4e2a0\n\n\u6b64\u65f6\u8fd9\u4e2a0\u4e0d\u4ec5\u4f1a\u4ee4$dp[i][j]=dp[i][j+1]=2$\uff0c\u5b83\u81ea\u8eab\u4e5f\u9700\u8981\u5f80\u4e0b\u9012\u63a8\uff0c\u800c\u4e0d\u662f\u76f4\u63a5continue\uff08\u56e0\u4e3a\u4e0a\u4e00\u4e2a\u8fc7\u6765\u76842\u8bf4\u660e\u5b83\u6709\u8fd9\u4e2a\u610f\u4e49\uff09\n\n\u6240\u4ee5\u6211\u4eec\u4ee4\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684$dp[i][j]$\u7684\u503c\u4e3a3\uff0c\u6b64\u65f6\u4ee4$dp[i][j+1]=2$\uff0c\u5e76\u4e14\u4ece\u5f53\u524d\u8282\u70b9\u9012\u63a8\n\n\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u5168\u90e8\u8bbe\u4e3a-1\uff0c$dp[0][0]=2$\n\n\u6700\u540e\u5982\u679cdp\\[\u6a21\u677f\u4e32\u7684\u6bb5\u6570\\]\\[\u6587\u672c\u4e32\u957f\u5ea6\\]\u4e0d\u662f-1\u7684\u8bdd\uff0c\u5c31\u8f93\u51faYES\uff0c\u5426\u5219NO\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll unsigned long long\nll key=19260817ll;\nusing namespace std;\nll pre[100010],mul[100010],h[20];int n,cnt,sp[20],stl[20],dp[15][100010];\nchar b[15][100010],a[100010],tmp[100010];\nll gethash(char s[],int len){\n    ll re=0;int i;\n    for(i=0;i<len;i++) re*=key,re+=(ll)s[i];\n    return re;\n}\nint main(){\n    scanf(\"%s\",a);int i,j,k,l,len=strlen(a);ll t1;\n    mul[0]=1;\n    for(i=1;i<=100000;i++) mul[i]=mul[i-1]*key;\n    if(a[0]=='*'||a[0]=='?') h[++cnt]=gethash(b[cnt],stl[cnt]=0);\n    for(i=0;i<len;){\n        if(a[i]=='*'||a[i]=='?'){sp[cnt]=(sp[cnt]||(a[i]=='*'));i++;}\n        j=0;cnt++;\n        while(a[i]!='*'&&a[i]!='?'&&i<len) b[cnt][j]=a[i],i++,j++;\n        h[cnt]=gethash(b[cnt],stl[cnt]=j);\n    }\n    len++;\n    if(a[len-2]=='*'||a[len-2]=='?') cnt++,sp[cnt]=stl[cnt]=h[cnt]=0;\n    else sp[cnt]=0;\n    scanf(\"%d\",&n);\n    for(l=1;l<=n;l++){\n        memset(a,0,sizeof(a));\n        scanf(\"%s\",a);\n        len=strlen(a);a[len]='$';len++;\n        memset(dp,-1,sizeof(dp));dp[0][0]=2;pre[0]=0;\n        for(i=0;i<len;i++) pre[i+1]=pre[i]*key+(ll)a[i];\n        for(j=0;j<=len;j++){\n            for(i=0;i<=cnt;i++){//\u53ea\u6709\u8fd9\u91cc\u6709\u5dee\u522b\n                if(dp[i][j]==-1) continue;\n                if(dp[i][j]==1) dp[i][j+1]=1;\n                if(!dp[i][j]){\n                    dp[i][j]=2;\n                    if(dp[i][j+1]==-1) dp[i][j+1]=2;\n                    if(dp[i][j+1]==0) dp[i][j+1]=3;//\u5224\u65ad\u8d4b2\u8fd8\u662f3\n                    continue;\n                }\n                if(dp[i][j]==3){\n                    dp[i][j]=2;\n                    if(dp[i][j+1]==-1) dp[i][j+1]=2;\n                    if(dp[i][j+1]==0) dp[i][j+1]=3;//\u5224\u65ad\u8d4b2\u8fd8\u662f3\n                }\n                t1=pre[j+stl[i+1]]-pre[j]*mul[stl[i+1]];\n                if(t1==h[i+1]){\n                    dp[i+1][j+stl[i+1]]=max(dp[i+1][j+stl[i+1]],sp[i+1]);\n                }\n            }\n        }\n        if(dp[cnt][len]!=-1) puts(\"YES\");\n        else puts(\"NO\");\n    }\n}\n```\n\n![](http://images.cnblogs.com/cnblogs_com/dedicatus545/1199264/o_4.PNG)\n\nFinally\uff0c\u8fd9\u9053\u9898\u76ee\u544a\u4e00\u6bb5\u843d\n\n# 0x07 \u603b\u7ed3\n\n\u4e00\u6ca1\u6ce8\u610f\uff0c\u9898\u89e3\u5c31\u5199\u4e86\u4e24\u767e\u591a\u884c\u4e86\n\n\u8fd9\u7684\u786e\u505a\u8d77\u6765\u662f\u9053\u9ebb\u70e6\u4f46\u662f\u6709\u8da3\u7684\u9898\u76ee\uff0c\u6700\u540e\u7b97\u6cd5\u8fd4\u749e\u5f52\u771f\uff0c\u7528\u6700\u57fa\u7840\u7684\u3001\u6d1b\u8c37\u4e0a\u666e\u53ca-\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u5c31\u505a\u5b8c\u4e86\n\n\u4f46\u662f\u6574\u4e2a\u505a\u9898\u7684\u8fc7\u7a0b\u5374\u975e\u5e38\u8010\u4eba\u5bfb\u5473\uff1aKMP\u4e3a\u4ec0\u4e48\u662f\u9519\u7684\uff1f\u600e\u4e48$O\\left(1\\right)$\u5b9e\u73b0\u4e00\u4e2a\u770b\u8d77\u6765\u4e0d\u53ef\u80fd\u7684\u8fc7\u7a0b\uff1f\u4e3a\u4ec0\u4e48$hash$\u6ee1\u8db3\u524d\u7f00\u548c\uff1f\u600e\u4e48\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b\u628a\u9012\u63a8\u6b63\u786e\u6027\u4fdd\u8bc1......\n\n\u867d\u7136\u6700\u540e\u7684\u4ee3\u7801\u8dd1\u7684\u5f88\u6162\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u505a\u5b8c\u8fd9\u9053\u9898\u6211\u7684\u6536\u83b7\u5c31\u5c0f\n\n\u6070\u6070\u76f8\u53cd\uff0c\u90a3\u957f\u8fbe\u4e00\u6574\u9875\u7684\u63d0\u4ea4\u8bb0\u5f55\u624d\u662f\u771f\u6b63\u5f97\u5230\u7684\u3001\u6700\u73cd\u8d35\u7684**\u601d\u7ef4**\n\n[The Way To ACCEPTED](https://www.luogu.org/recordnew/lists?uid=27753&pid=P3167&status=&sort=0)",
        "postTime": 1524468398,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    },
    {
        "content": "Upd in 12.21:\n\n\u7531\u4e8e\u6ca1\u6709\u5224\u4e00\u4e2a\u4e32\u80fd\u5339\u914d\u7684\u6700\u5c0f\u957f\u5ea6\u6240\u4ee5\u88ab hack \u4e86\u3002\u3002\u3002\n\n\u4fee\u6539\u4e86 latex\uff0c\u6539\u4e86\u4e00\u4e0b\u9a6c\u8702\uff0c\u8865\u4e86\u4e00\u4e0b\u9505\u3002~~(\u4e4b\u524d\u7684\u9a6c\u8702\u8fc7\u4e8e\u4e11\u4e86)~~\n\n\u5177\u4f53\u5c31\u4f53\u73b0\u5728\u4e0b\u9762\u65b0\u6dfb\u52a0\u7684 $cntc$ \u53d8\u91cf\u3002\n\n## \u9898\u610f\n\n\u672c\u9898\u7684\u610f\u601d\u5c31\u662f\u7ed9\u51fa\u4e00\u6bb5\u5e26\u6709 $?$ \u4e0e $*$ \u7684\u5b57\u7b26\u4e32(\u5728\u4e0b\u9762\u79f0\u4e3a $s$)\uff0c$?$ \u5fc5\u987b\u5360\u636e\u4e00\u4e2a\u5b57\u7b26\u4f4d\u7f6e\uff0c$*$ \u53ef\u4ee5\u5360\u636e\u4efb\u610f\u4f4d\u7f6e\uff0c\n\u6c42\u4e0b\u9762\u7ed9\u51fa\u51e0\u6bb5(\u5728\u4e0b\u9762\u79f0\u4e3a $ss$)\u4e2d\u80fd\u591f\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002\n\n## \u601d\u8def\n------------\n\n\n#### \u524d\u8a00\n\n\u672c\u9898\u6700\u53ef\u6076\u7684\u4e00\u70b9\u662f\uff0c\u5982\u679c s \u7684\u7b2c\u4e00\u6bb5/\u6700\u540e\u4e00\u6bb5\u662f\u5b57\u7b26\uff0c\u90a3\u4e48 ss \u4e2d\u6700\u5f00\u59cb/\u6700\u540e\u4e5f\u5fc5\u987b\u662f\u4e00\u6837\u7684\u5b57\u7b26\u3002\n\n\u53e6\u5916\uff0c\u672c\u9898\u6211\u4f7f\u7528\u4e86 hash + \u524d\u7f00\uff0c\u5982\u679c\u4e0d\u592a\u719f\u6089\u7684\u8bdd\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\uff5e[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3370)\n\u4e3e\u4e2a\u6817\u5b50\uff5e\n\n\u5982\u6837\u4f8b\uff0cs \u4e3a *aca?ctc\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5b83\u5206\u4e3a\n\n$*$ \uff0caca\uff0c $?$ \uff0cctc \u5171\u56db\u6bb5\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u6211\u4eec\u7528\u4e00\u4e2a $add$ \u6570\u7ec4\u6765\u5224\u65ad\u5b83\u7684\u79cd\u7c7b\uff0c\n\n\u7528 $co$ \u8bb0\u5f55\u5b83\u7684\u6bb5\u6570\uff0c\u5b57\u7b26\u4e32\u5bf9\u5e94 2,$*$ \u5bf9\u5e94 1,$?$ \u5bf9\u5e94 0\uff1a\n```cpp\n\n\tscanf(\"%s\",s+1);lens=strlen(s+1);\n\tif(s[1]<'a'||s[1]>'z')co=0;else add[1]=2;\n\tfor(register int i=1;i<=lens;i++){\n\t\tif((s[i]>='a'&&s[i]<='z')||(s[i]=='?'))cntc++;\n\t\tif(s[i]>='a'&&s[i]<='z'){\n\t\t\tlen[co]++;\n\t\t\tf[co]=f[co]*131+s[i];\n\t\t}\n\t\telse if(s[i]=='*') {add[++co]=1;if(i!=lens&&s[i+1]>='a'&&s[i+1]<='z')add[++co]=2;}\n\t\telse{co++;if(i!=lens&&s[i+1]>='a'&&s[i+1]<='z')add[++co]=2;}\n\t}\n```\n\u6ce8\u610f\uff0c\u7531\u4e8e\u5f00\u5934\u5b57\u7b26\u4e0d\u597d\u5224\u65ad\uff0c\u6240\u4ee5\u8fd9\u91cc\u52a0\u4e86\u4e00\u4e2a\u7279\u5224\uff0c\n\u6765\u8bb0\u5f55\u5f00\u5934\u662f\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u3002\n\n\n#### \u5224\u65ad\n\n\u9884\u5904\u7406\u597d\u4e86\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u8fdb\u884c\u5224\u65ad\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u7b97\u51fa\u539f\u4e32\u6700\u5c11\u8981\u5339\u914d\u591a\u5c11\u5b57\u7b26\uff0c\u5982\u679c\u8be2\u95ee\u4e32\u957f\u5ea6\u6bd4\u8fd9\u4e2a\u8fd8\u8981\u5c0f\u5c31\u76f4\u63a5\u5224\u5426\u3002\n\n\u8fd9\u91cc\uff0c\u6211\u7528\u4e86 $doit$ \u4e0e $ask$ \u4e24\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\n\ndoit \u7528\u6765\u5bf9\u53ef\u4ee5\u81ea\u7531\u5339\u914d\u7684\u5b57\u7b26\u79cd\u7c7b\u8fdb\u884c\u5224\u65ad\u5904\u7406\uff0c\n\nask \u7528\u6765\u5bf9\u201c \uff1f \u201d\u540e\u7684\u5b57\u7b26\u8fdb\u884c\u5224\u65ad\u5904\u7406\u3002\n\n\u4e24\u4e2a\u51fd\u6570\u4e2d\u90fd\u4f7f\u7528\u4e86 key\uff0ck \u4e24\u4e2a\u53c2\u6570\uff0c\nkey \u8bb0\u5f55\u4e86\u5230\u54ea\u4e2a\u5b57\u7b26\uff08\u6307\u9488\uff09\uff0ck \u8bb0\u5f55\u4e86\u5230\u7b2c\u51e0\u6bb5\u3002\n\n\u5bf9\u4e8e doit\uff1a\n```cpp\n\ninline void doit(int key,int k){\n\tif(k>co){can=1;return;}\n\tif(add[k]==2){\n\t\tfor(register int i=key+len[k]-1;i<=le;i++)\n\t\tif(ff[i]-ff[i-len[k]]*p[len[k]]==f[k])\n\t\t{doit(i+1,k+1);if(can)return;}\n\t\treturn;\n\t}\n\tif(add[k]==1){\n\t\tdoit(key,k+1);\n\t\tif(can)return;\n\t\treturn;\n\t}\n\tif(add[k]==0){\n\t\task(key+1,k+1);return;\n\t}\n}\n```\n\u5bf9\u4e8e ask\uff1a\n```cpp\n\ninline void ask(int key,int k){\n\tif(k>co){can=1;return;}\n\tif(add[k]==2){\n\t\tif(ff[key+len[k]-1]-ff[key-1]*p[len[k]]==f[k])doit(key+len[k],k+1);\n\t}\n\telse{\n\t\tif(add[k]==1){if(add[k+1]==0){for(register int i=key+2;i<=le;i++)if(ff[i+len[k+2]-1]-ff[i-1]*p[len[k+2]]==f[k+2])doit(i+len[k+2],k+3);}doit(key,k+1);}\n\t\telse ask(key+1,k+1);\n\t}\n}\n```\n\n\n\n#### \u6536\u5c3e\n\n\u5230\u8fd9\u91cc\uff0c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20\u4e1c\u98ce\uff0c\u8fdb\u884c\u6211\u4eec\u534e\u4e3d\u7684\u7ed3\u675f\u5427\uff5e\n\n\u63a5\u4e0b\u6765\u5c31\u8be5\u8bfb\u5165\u4e0e\u5224\u65ad\u4e86\uff1a\n```cpp\n\tp[0]=1;\n\tfor(register int i=1;i<=100000;i++)p[i]=p[i-1]*131;\n\tint n=read();\n\twhile(n--){\n\t\tcan=0;\n\t\tscanf(\"%s\",ss+1);le=strlen(ss+1);\n\t\tif(cntc>le){puts(\"NO\");continue;}\n\t\tfor(register int i=1;i<=le;i++)ff[i]=ff[i-1]*131+ss[i];\n\t\tif(add[1]==2)if(ff[len[1]]-ff[0]*p[len[1]]!=f[1]){printf(\"NO\\n\");continue;}\n\t\tif(add[co]==2)if(ff[le]-ff[le-len[co]]*p[len[co]]!=f[co]){printf(\"NO\\n\");continue;}\n\t\tdoit(1,1);\n\t\tif(can)printf(\"YES\\n\");else printf(\"NO\\n\");\n\t}\n```\n\n## CODE\n------------\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nnamespace EMT{\n\t#define ull unsigned long long\n\tinline int read(){int x=0;char ch=getchar();while(ch<'0'||ch>'9')ch=getchar();while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();return x;}\n\tchar s[100005],ss[100005];\n\tint lens,len[25],co=1,le,k,key,cnt,add[25];bool can;\n\tull f[25],ff[100010],p[100010];\n\tint cntc;\n\tinline void ask(int,int);\n\tinline void doit(int,int);\n\t\tinline void ask(int key,int k){\n\t\t\tif(k>co){can=1;return;}\n\t\t\tif(add[k]==2){\n\t\t\t\tif(ff[key+len[k]-1]-ff[key-1]*p[len[k]]==f[k])doit(key+len[k],k+1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(add[k]==1){if(add[k+1]==0){for(register int i=key+2;i<=le;i++)if(ff[i+len[k+2]-1]-ff[i-1]*p[len[k+2]]==f[k+2])doit(i+len[k+2],k+3);}doit(key,k+1);}\n\t\t\t\telse ask(key+1,k+1);\n\t\t\t}\n\t\t}\n\tinline void doit(int key,int k){\n\t\tif(k>co){can=1;return;}\n\t\tif(add[k]==2){\n\t\t\tfor(register int i=key+len[k]-1;i<=le;i++)\n\t\t\tif(ff[i]-ff[i-len[k]]*p[len[k]]==f[k])\n\t\t\t{doit(i+1,k+1);if(can)return;}\n\t\t\treturn;\n\t\t}\n\t\tif(add[k]==1){\n\t\t\tdoit(key,k+1);\n\t\t\tif(can)return;\n\t\t\treturn;\n\t\t}\n\t\tif(add[k]==0){\n\t\t\task(key+1,k+1);return;\n\t\t}\n\t}\n\tinline short main(){\n\t\tscanf(\"%s\",s+1);lens=strlen(s+1);\n\t\tif(s[1]<'a'||s[1]>'z')co=0;else add[1]=2;\n\t\tfor(register int i=1;i<=lens;i++){\n\t\t\tif((s[i]>='a'&&s[i]<='z')||(s[i]=='?'))cntc++;\n\t\t\tif(s[i]>='a'&&s[i]<='z'){\n\t\t\t\tlen[co]++;\n\t\t\t\tf[co]=f[co]*131+s[i];\n\t\t\t}\n\t\t\telse if(s[i]=='*') {add[++co]=1;if(i!=lens&&s[i+1]>='a'&&s[i+1]<='z')add[++co]=2;}\n\t\t\telse{co++;if(i!=lens&&s[i+1]>='a'&&s[i+1]<='z')add[++co]=2;}\n\t\t}\n\t\tp[0]=1;\n\t\tfor(register int i=1;i<=100000;i++)p[i]=p[i-1]*131;\n\t\tint n=read();\n\t\twhile(n--){\n\t\t\tcan=0;\n\t\t\tscanf(\"%s\",ss+1);le=strlen(ss+1);\n\t\t\tif(cntc>le){puts(\"NO\");continue;}\n\t\t\tfor(register int i=1;i<=le;i++)ff[i]=ff[i-1]*131+ss[i];\n\t\t\tif(add[1]==2)if(ff[len[1]]-ff[0]*p[len[1]]!=f[1]){printf(\"NO\\n\");continue;}\n\t\t\tif(add[co]==2)if(ff[le]-ff[le-len[co]]*p[len[co]]!=f[co]){printf(\"NO\\n\");continue;}\n\t\t\tdoit(1,1);\n\t\t\tif(can)printf(\"YES\\n\");else printf(\"NO\\n\");\n\t\t}\n\t\treturn 0;\n\t}\n}\nint main(){return EMT::main();}\n```\n\n\n\n#### \u7ed3\u8bed\n\n\u8fd9\u9053\u9898\u6211\u4e5f\u8c03\u4e86\u6709\u597d\u4e45\u4e86\uff0c\u751a\u81f3\u90fd\u6709\u4e9b\u820d\u4e0d\u5f97\u4e86\uff0c\u6240\u4ee5\u5199\u4e0b\u4e86\u672c\u7bc7\u9898\u89e3\uff0c\u4e5f\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6c42\u4e2a\u8d5eqwq",
        "postTime": 1617455675,
        "uid": 451066,
        "name": "letitdown",
        "ccfLevel": 9,
        "title": "P3167 \u901a\u914d\u7b26\u5339\u914d"
    },
    {
        "content": "# \u9707\u60ca\uff01\u6ca1\u770b\u660e\u767d\u697c\u4e0b\u7384\u5b66\u601d\u8def\n### \u4ec0\u4e48\u5404\u79cdKMP\uff0cDP\uff0cHASH\uff0c\u5404\u79cd\u7384\u5b66\u75af\u72c2\u64cd\u4f5c\uff0c\u7801\u957f\u9707\u60ca\uff0c\u672c\u849f\u84bb\u8868\u793a\u5e76\u6ca1\u6709\u770b\u61c2\u600e\u4e48\u529e\uff08\u5446\u5446\u7684\u5403\u624b\u6307~\uff09\n#### \u90a3\u600e\u4e48\u529e\u554a\uff0c\u6211\u53c8\u4e0d\u60f3\u5446\u5446\u7684\u770b\u7740\u4ed6WA0\uff0c\u53ef\u6015\n#### \u7384\u5b66\u601d\u8def\u7a81\u73b0\u8111\u4e2d\uff0c\u7206\u641c\uff1f\u5dee\u4e0d\u591a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar ch[100001],wzc[100001];\nint n;\nbool _doudou(int x,int y)//\u5f00\u59cb\u7206\u641c\uff0c\u4ece\u540e\u5f80\u524d\u641c\uff0c\u907f\u514d\u6709\u7684\u70b9\u6545\u610f\u5361\u4f60\uff0c\u5176\u5b9e\u4e5f\u662f\u4e3a\u4e86\u65b9\u4fbf \n{\n    if(y==0)//\u5982\u679c\u5339\u914d\u4e32\u5230\u5934\u4e86 \n    {\n        if(x==0)return 1;//\u901a\u914d\u7b26\u4e32\u4e5f\u88ab\u5403\u5b8c\u4e86\uff0c\u80af\u5b9a\u6ca1\u95ee\u9898 \n        for(int i=x;i>0;i--)//\u5f00\u59cb\u7206\u641c\u5269\u4e0b\u7684'*' \n            if(ch[i]!='*')return 0;//\u5982\u679c\u8fd8\u6709\uff0c\u80af\u5b9a\u4e0d\u884c \n        return 1;//\u6ca1\u4e86\uff0c\u5c31\u6ca1\u95ee\u9898 \n    }\n    if(!x)return 0;//\u5982\u679c\u901a\u914d\u7b26\u4e32\u5148\u6302\u5b8c\u4e86\uff0c\u5c31\u80af\u5b9a\u6302\u4e86 \n    if(ch[x]=='*')//\u5982\u679c\u641c\u5230\u4e86\u4e00\u4e2a'*' \n    {\n        for(int i=y;i>=0;i--)//\u5c31\u4ece\u5269\u4e0b\u7684\u6240\u6709\u7684\u4f4d\u7f6e\u5f00\u59cb\u641c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u8d77\u6765\u5f88\u9ad8\uff0c\u4f46\u662f\u8bd5\u60f3\u51e0\u4e4e\u6240\u6709\u7684\u60c5\u51b5\u5728\u641c\u4e86\u4e00\u4e0b\u4e4b\u540e\u5c31\u4f1a\u8df3\u51fa\uff0c\u5176\u5b9e\u4e5f\u5e76\u4e0d\u590d\u6742 \n            if(_doudou(x-1,i))return 1;\n    }\n    else\n    {\n        if(wzc[y]==ch[x]||ch[x]=='?')return _doudou(x-1,y-1);//\u5982\u679c\u662f\u4e00\u4e2a'?'\uff0c\u5c31\u8ba9\u4e24\u4e2a\u4e32\u90fd\u5411\u524d\u8d70\u4e00\u4f4d \n        else return 0;//\u6302\u55bd \n    }\n}\nint main()\n{\n    scanf(\"%s%d\",ch+1,&n);//\u8bfb\u5165,QwQ~ \u5c31\u662f\u60f3\u5356\u4e2a\u840c \n    int len=strlen(ch+1);\n    while(n--)\n    {\n        scanf(\"%s\",wzc+1);\n        if(_doudou(len,strlen(wzc+1)))printf(\"YES\\n\");//\u6ca1\u4e3a\u9898\u5c31\u8f93\u51faYES \n        else printf(\"NO\\n\");//\u5426\u5219NO \n    }\n    return 0;//\u795d\u4f60\u5e78\u798f~ \n}\n```\n#### \u6211\u611f\u89c9\u7801\u957f\u8fd8\u53ef\u4ee5\uff0c\u800c\u4e14\u8dd1\u7684\u98de\u5feb\uff08\u81ea\u6211\u611f\u89c9\u826f\u597d\uff09\n#### \u800c\u4e14\u6bd4\u8f83\u9002\u5408\u521d\u5b66\u8005\u53ed?",
        "postTime": 1556618495,
        "uid": 93488,
        "name": "Porsche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\uff1a\n\n\u7f51\u4e0a\u9898\u89e3\u597d\u50cf\u90fd\u662f\u54c8\u5e0c\u548c$KMP$\u7684\uff0c\u4f46\u5176\u5b9e$AC$\u81ea\u52a8\u673a\u4e5f\u662f\u53ef\u4ee5\u505a\u7684(\u56e0\u4e3a\u8fd9\u662f\u6211$AC$\u81ea\u52a8\u673a\u505a\u9898\u5217\u8868\u91cc\u7684\u9898...)\n\n\u5bf9\u4e8e\u901a\u914d\u7b26 $ * $ \uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5305\u542b\u901a\u914d\u7b26\u7684\u5b57\u7b26\u4e32\u4ee5 $ * $ \u5206\u5f00\u5c31\u597d\u4e86\uff0c\u7136\u540e\u9664\u4e86\u6700\u540e\u4e00\u6bb5\u5176\u4ed6\u5c3d\u91cf\u5339\u914d\u9760\u524d\u7684\u539f\u4e32\u5b50\u4e32\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u5339\u914d\u7684\u8bdd\uff0c\u5982\u679c\u4e2d\u95f4\u5939\u6742\u5176\u4ed6\u5b57\u7b26\u662f\u53ef\u4ee5\u76f4\u63a5\u7528 $ * $ \u4ee3\u66ff\u7684\uff0c\u8fd9\u4e2a\u601d\u8def\u4e5f\u662f\u54c8\u5e0c\u548c $ KMP $ \u505a\u6cd5\u4e2d\u7684\u4e00\u79cd\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u901a\u914d\u7b26 $ ? $ \uff0c\u6211\u4eec\u4e5f\u4eff\u7167 $ * $ \uff0c\u6839\u636e $ ? $ \u5206\u6bb5\uff0c\u5c06\u5206\u6bb5\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u4e22\u5230$AC$\u81ea\u52a8\u673a\u91cc\uff0c\u7136\u540e\u7528$vector$\u5b58\u4e0b\u6bcf\u6bb5\u5b57\u7b26\u4e32\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u7528$vector$\u5b58$end$\u6570\u7ec4\uff0c\u56e0\u4e3a\u5206\u6bb5\u7684\u4e32\u53ef\u80fd\u4f1a\u91cd\u590d\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u4e32$abcd?abc?cd?abcd$\uff0c\u5efa\u51fa\u6765\u7684$Trie$\u6811\u5982\u4e0b\uff1a\n\n![](https://luvwgyx.com/wp-content/uploads/2019/03/out.jpg)\n\n\u5176\u4e2d\u7eff\u8272(\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u5565\u989c\u8272)\u7684\u8282\u70b9\u662f\u7ed3\u675f\u8282\u70b9\uff0c\u65c1\u8fb9\u6807\u6ce8\u7684\u6570\u5b57\u5219\u662f\u4ee5\u5b83\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u4eec\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5efa$fail$\u6307\u9488\u548c\u6b63\u5e38\u7684$AC$\u81ea\u52a8\u673a\u5efa\u6cd5\u662f\u4e00\u6837\u7684\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a$cnt$\u6570\u7ec4\uff0c\u4e0b\u6807\u5bf9\u5e94\u539f\u4e32\u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u7136\u540e\u5728$AC$\u81ea\u52a8\u673a\u4e0a\u8dd1\uff0c\u5982\u679c\u5339\u914d\u5230\u7ed3\u675f\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8ba9$cnt[pos-ed[p][j]+1]++$\uff0c\u5176\u4e2d$pos$\u4e3a\u5f53\u524d\u5339\u914d\u4f4d\u7f6e\uff0c$ed[p]$\u5219\u662f\u4e0a\u8ff0\u7684$vector$\u6570\u7ec4\u3002\n\n\u8fd9\u6837\u5904\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u904d\u5386\u4e00\u904d\uff0c\u5982\u679c\u6709\u4e00\u4e2a$cnt$\u503c\u7b49\u4e8e\u6bb5\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u6574\u4e2a\u4e32\u7684\u5339\u914d\u7684\u8d77\u70b9\u3002\n\n\u5c31\u5982\u4e4b\u524d\u7684\u4e32$abcd?abc?cd?abcd$\uff0c\u6bcf\u4e00\u4e2a\u8fd9\u6837\u5b50\u5904\u7406\u4e4b\u540e\uff0c\u53ea\u6709\u7b2c\u4e00\u4e2a$abcd$\u7684$a$\u8282\u70b9\u662f\u6ee1\u8db3$cnt$\u7b49\u4e8e\u6bb5\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u8fd9\u6b21\u80fd\u591f\u5339\u914d\u7684\u6700\u9760\u524d\u7684\u4f4d\u7f6e\u4e86\u3002\n\n#### Code\uff1a\n\n```cpp\n/*Program from Luvwgyx*/\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e5+10;\nint n,m,num;bool Beg,End;char s[maxn],t[maxn];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid print(int x){\n    if(x<0)putchar('-'),x=-x;\n    if(x>9)print(x/10);\n    putchar(x%10+'0');\n}\nvoid write(int x){print(x);puts(\"\");}\nstruct AC_automaton{\n    vector<int >ed[maxn];queue<int >q;\n    int tot,root,cnt[maxn],seq[maxn],fail[maxn],trie[maxn][26];\n    int newnode(){\n        tot++;fail[tot]=0;ed[tot].clear();\n        for(int i=0;i<26;i++)trie[tot][i]=-1;\n        return tot;\n    }\n    void insert(int l,int r,int id){\n        int p=root;\n        for(int i=l;i<=r;i++){\n            int ch=t[i]-'a';\n            if(trie[p][ch]==-1)trie[p][ch]=newnode();\n            p=trie[p][ch];\n        }ed[p].push_back(id);\n    }\n    void make_fail(){\n        for(int i=0;i<26;i++)\n            if(trie[root][i]!=-1){\n                fail[trie[root][i]]=root;\n                q.push(trie[root][i]);\n            }else trie[root][i]=root;\n        while(!q.empty()){\n            int x=q.front();q.pop();\n            for(int i=0;i<(int)ed[fail[x]].size();i++)ed[x].push_back(ed[fail[x]][i]);\n            for(int i=0;i<26;i++){\n                if(trie[x][i]!=-1){\n                    fail[trie[x][i]]=trie[fail[x]][i];\n                    q.push(trie[x][i]);\n                }else trie[x][i]=trie[fail[x]][i];\n            }\n        }\n    }\n    bool find(int l,int r,bool fir,bool las){\n        tot=0;root=newnode();\n        memset(cnt,0,sizeof(cnt));\n        int bel=0;\n        for(int i=l,pos=i;i<=r;i++,pos=i)\n            if(t[i]!='?'){\n                while(pos<=r&&t[pos]!='?')pos++;\n                pos--;insert(i,pos,pos-l+1);\n                i=pos;bel++;\n            }\n        make_fail();int p=root;\n        for(int i=1;i<=n;i++){\n            int ch=s[i]-'a';p=trie[p][ch];\n            for(int j=0;j<(int)ed[p].size();j++)\n                if(i-ed[p][j]+1>0)cnt[i-ed[p][j]+1]++;\n        }\n        for(int i=1;i<=n;i++)\n            if(cnt[i]==bel){\n                if(!num){\n                    if(!Beg&&fir&&i!=1)continue;\n                    if(!End&&las&&i+r-l!=n)continue;\n                    seq[++num]=i+r-l;\n                    return 1;\n                }else {\n                    if(i<=seq[num])continue;\n                    if(!End&&las&&i+r-l!=n)continue;\n                    seq[++num]=i+r-l;\n                    return 1;\n                }\n            }\n        return 0;\n    }\n}AC;\nint main(){\n    scanf(\"%s\",t+1);int T=read();m=strlen(t+1);\n    while(T--){\n        scanf(\"%s\",s+1);n=strlen(s+1);num=0;\n        Beg=t[1]=='*';End=t[m]=='*';int len=m;\n        while(len&&t[len]=='*')len--;\n        if(!len){puts(\"YES\");continue;}\n        int bel=0;bool flag=0;\n        for(int i=1;i<=m;i++)\n            if(t[i]!='*'){\n                int pos=i;\n                while(pos<=m&&t[pos]!='*')pos++;pos--;\n                if(!AC.find(i,pos,bel==0,pos==len)){flag=1;break;}\n                i=pos;bel++;\n            }\n        puts(flag?\"NO\":\"YES\");\n    }\n    return 0;\n}\n```",
        "postTime": 1551499283,
        "uid": 43012,
        "name": "Luvwgyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    },
    {
        "content": "# \u300c\u9898\u89e3\u62a5\u544a\u300d[P3167 [CQOI2014]\u901a\u914d\u7b26\u5339\u914d](https://www.luogu.com.cn/problem/P3167)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Keven-He/p/16578002.html)\n\n[\u63a8\u9500\u535a\u5ba2](https://www.cnblogs.com/Keven-He/)\n\n## \u601d\u8def\n\n`*` \u548c `?` \u663e\u7136\u65e0\u6cd5\u76f4\u63a5\u5339\u914d\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u300c\u901a\u914d\u7b26\u4e2a\u6570\u4e0d\u8d85\u8fc7 $10$\u300d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5206\u6bb5\u5339\u914d\u3002\n\n\u6211\u4eec\u9996\u5148\u628a\u539f\u5b57\u7b26\u4e32\u5206\u6210\u591a\u4e2a\u4ee5\u4e00\u4e2a\u901a\u914d\u7b26\u5f00\u5934\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u5c06 `happy*birthdey?xingchen` \u5206\u6210\uff1a\n\n```\nhappy\n*birthday\n?xingchen\n```\n\n\u7136\u540e\u8bbe\u539f\u4e32\u6709 $m$ \u4e2a\u901a\u914d\u7b26\uff0c $op_i$ \u8868\u793a\u5206\u51fa\u6765\u7684\u7b2c $i$ \u4e2a\u4e32\u524d\u7684\u901a\u914d\u7b26\uff08$0$ \u6ca1\u6709\uff0c$1$ \u662f`?`\uff0c$2$ \u662f`*`\uff09\uff0c$len_i$ \u8868\u793a\u5206\u51fa\u6765\u7684\u7b2c $i$ \u4e2a\u4e32\u7684\u957f\u5ea6\uff0c$f_{i,j}$ \u8868\u793a\u5206\u51fa\u6765\u7684\u7b2c $i$ \u4e2a\u4e32\u7684\u7ed3\u5c3e\u80fd\u5426\u5339\u914d\u4e0a\u5f53\u524d\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e $j$\u3002\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b\u663e\u7136\u4e3a\uff1a\n\n$$\nf_{i,j}=\n\\begin{cases}\nf_{i-1,j-len_i}&op_i=0\\\\\nf_{i-1,j-len_i-1}&op_i=1\\\\\n\\sum_{k=0}^{j-len_i}f_{i-1,k}&op_i=2\\\\\n\\end{cases}\n$$\n\n\u80fd\u5426\u8f6c\u79fb\u76f4\u63a5\u7528 Hash $\\Theta(1)$ \u6bd4\u8f83\u5373\u53ef\u3002\n\n\u521d\u59cb\u72b6\u6001 $f_{0,0}=1$\uff0c\u7b54\u6848\u4e3a $f_{m,\\left|S\\right|}$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(mn\\left|S\\right|)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\nconst ll N=1e5+10,inf=1ll<<40;\nll T,n,m=1,ln,ans;\nll a1[20],a2[20],len[20],op[20];\nll f[20][N],sm[N];\nchar s[N],t[N];\nclass Hash{\npublic:\n\tconst ll P1=315716521,P2=475262633;\n\tll h1[N],h2[N],z1[N],z2[N];\n\tinline void Init(char *s){\n\t\tz1[0]=z2[0]=1;\n\t\tll length=strlen(s+1);\n\t\t_for(i,1,length){\n\t\t\tz1[i]=z1[i-1]*233%P1;\n\t\t\tz2[i]=z2[i-1]*233%P2;\n\t\t\th1[i]=(h1[i-1]*233+s[i]-'a'+1)%P1;\n\t\t\th2[i]=(h2[i-1]*233+s[i]-'a'+1)%P2;\n\t\t}\n\t\treturn;\n\t}\n\tinline ll GetHash1(ll l,ll r){return (h1[r]-h1[l-1]*z1[r-l+1]%P1+P1)%P1;}\n\tinline ll GetHash2(ll l,ll r){return (h2[r]-h2[l-1]*z2[r-l+1]%P2+P2)%P2;}\n}b;\nnamespace SOLVE{\n\tinline ll rnt(){\n\t\tll x=0,w=1;char c=getchar();\n\t\twhile(!isdigit(c)){if(c=='-')w=-1;c=getchar();}\n\t\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\treturn x*w;\n\t}\n\tinline ll GetA1(char *awa){\n\t\tll hash_val=0;\n\t\tll length=strlen(awa+1);\n\t\t_for(i,1,length)hash_val=(hash_val*233+awa[i]-'a'+1)%b.P1;\n\t\treturn hash_val;\n\t}\n\tinline ll GetA2(char *awa){\n\t\tll hash_val=0;\n\t\tll length=strlen(awa+1);\n\t\t_for(i,1,length)hash_val=(hash_val*233+awa[i]-'a'+1)%b.P2;\n\t\treturn hash_val;\n\t}\n\tinline void Pre(){\n\t\tchar qwq[N];\n\t\t_for(i,1,n){\n\t\t\tif(s[i]=='?'||s[i]=='*'){\n\t\t\t\tif(i==1)--m;\n\t\t\t\ta1[m]=GetA1(qwq);\n\t\t\t\ta2[m]=GetA2(qwq);\n\t\t\t\tmemset(qwq,0,sizeof(qwq));\n\t\t\t\top[++m]=(s[i]=='?')?1:2;\n\t\t\t}\n\t\t\telse qwq[++len[m]]=s[i];\n\t\t}\n\t\ta1[m]=GetA1(qwq);\n\t\ta2[m]=GetA2(qwq);\n\t\treturn;\n\t}\n\tinline bool Check(ll a,ll i){\n\t\tif(a1[a]!=b.GetHash1(i-len[a]+1,i))return 0;\n\t\tif(a2[a]!=b.GetHash2(i-len[a]+1,i))return 0;\n\t\treturn 1;\n\t}\n\tinline void PP(){\n\t\tf[0][0]=1;\n\t\t_for(i,0,ln)sm[i]=1;\n\t\t_for(i,1,m){\n\t\t\t_for(j,0,ln)f[i][j]=0;\n\t\t\tfor_(j,ln,len[i]){\n\t\t\t\tif(Check(i,j)){\n\t\t\t\t\tif(op[i]==0)f[i][j]=f[i-1][j-len[i]];\n\t\t\t\t\telse if(op[i]==1)f[i][j]=f[i-1][j-len[i]-1];\n\t\t\t\t\telse f[i][j]=sm[j-len[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tsm[0]=0;\n\t\t\t_for(j,1,ln)sm[j]=sm[j-1]|f[i][j];\n\t\t}\n\t\treturn;\n\t}\n\tinline void In(){\n\t\tscanf(\"%s\",s+1);\n\t\tn=strlen(s+1),Pre();\n\t\tT=rnt();\n\t\twhile(T--){\n\t\t\tscanf(\"%s\",t+1);\n\t\t\tb.Init(t),ln=strlen(t+1);\n\t\t\tPP(),puts(f[m][ln]?\"YES\":\"NO\");\n\t\t}\n\t\treturn;\n\t}\n}\n```\n\nUpdate 2023/3/1\uff1a\u66f4\u6539\u4e86\u9519\u8bef\u7684\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u661f\u5c18\u751f\u65e5\u662f 8.12\uff0c\u53bb\u5e74\u624b\u6b20\u53d1\u65e9\u4e86\u3002",
        "postTime": 1660225518,
        "uid": 306045,
        "name": "K8He",
        "ccfLevel": 5,
        "title": "\u300c\u9898\u89e3\u62a5\u544a\u300dP3167 [CQOI2014]\u901a\u914d\u7b26\u5339\u914d"
    },
    {
        "content": "[\u901a\u914d\u7b26\u5339\u914d](https://www.luogu.com.cn/problem/P3167)\n\n\u8fd9\u4e00\u9053\u9898\u542c\u8bf4\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a\u6765\u505a\n\n\u4f46\u662f\u6211\u89c9\u5f97\u6211\u4eec\u53ef\u4ee5\u8ba9AC\u81ea\u52a8\u673a\u53bbAC\u522b\u7684\u9898\u76ee\uff0c\u7528\u6700\u7b80\u5355\u7684\n\n### \u5b57\u7b26\u4e32\u54c8\u5e0c\n\n\u5c31\u53ef\u4ee5\u4e86\n\n\u5f53\u7136\u8fd8\u662f\u8981\u8dd1$dp$\u7684~~qwq~~\n\n---\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a$bool$\u578b\u7684$f[i][j]$\u8868\u793a\n\n#### \u524d\u9762\u539f\u5b57\u7b26\u4e32\u7684\u524d$i$\u4e2a\u5b57\u7b26\u4e0e\u5f85\u5339\u914d\u7684\u5b57\u7b26\u4e32\u7684\u524d$j$\u4e2a\u5b57\u7b26\u5339\u914d\n\n\u5982\u679c\u5f53\u524d\u901a\u914d\u7b26\u662f'*'\u7684\u8bdd\uff0c\u53ea\u8981\u5f53\u524d\u5339\u914d\u4e86\uff0c\u90a3\u4e48\u540e\u9762\u6240\u6709\u7684\u90fd\u53ef\u4ee5\u5339\u914d\n\n\u5982\u679c\u5728\u4e24\u4e2a\u901a\u914d\u7b26\u4e4b\u95f4\u7684\u5b57\u7b26\u5168\u90e8\u5339\u914d\uff08\u7528$hash$\u5904\u7406\uff09\n\n\u90fd\u53ef\u4ee5\u6253\u6807\u8bb0\n\n\u4f46\u5982\u679c\u5f53\u524d\u901a\u914d\u7b26\u662f'?'\u7684\u8bdd\uff0c\u4e0d\u80fd\u7ed9\u5f53\u524d\u5b57\u7b26\u6253\u6807\u8bb0\uff0c\u8981\u8df3\u5230\u4e0b\u4e00\u4e2a\n\n\u56e0\u4e3a'?'\u53ea\u80fd\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\n\n\u521d\u59cb\u5316\u7684\u8bdd\n\n\u5c31\u662f$f[0][0]=1$\n\n\u56e0\u4e3a\u4e00\u4e2a\u5b57\u7b26\u90fd\u6ca1\u6709\u7684\u4e24\u4e2a\u7a7a\u4e32\u662f\u5339\u914d\u7684\n\n## \u5173\u4e8e\u4ee3\u7801\n\n\u6211\u7684\u7801\u98ce\u5341\u5206\u5947\u602a\uff0c\u80fd\u770b\u5f97\u61c2\u5c31\u884c\n\n\u5176\u4e2d$tpf$\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u901a\u914d\u7b26\n\n\u4e24\u4e2a$h$\u5206\u522b\u8868\u793a\u539f\u5b57\u7b26\u4e32\u548c\u5f85\u5904\u7406\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u524d\u7f00\u548c\n\n\u53e6\u5916\uff0c\u6211\u662f\u7528\u5b57\u7b26\u4e32\u5b58\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u5728\u6bcf\u4e2a\u5b57\u7b26\u4e32\u524d\u90fd\u52a0\u4e0a\u4e2a\u7a7a\u683c\n\n\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\n\n\u5982\u679c\u539f\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0d\u662f\u901a\u914d\u7b26\u7684\u8bdd\n\n\u540e\u9762\u7684\u5b57\u7b26\u662f\u5339\u914d\u4e0d\u5230\u7684\n\n\u6240\u4ee5\u6211\u5728\u539f\u5b57\u7b26\u4e32\u540e\u9762\u52a0\u4e86\u4e00\u4e2a'?'\uff0c\u4e3a\u4e86\u4e0d\u6539\u53d8\u5b57\u7b26\u4e32\u503c\uff0c\u6240\u4ee5\u5728\u6bcf\u4e00\u4e2a\u5f85\u5904\u7406\u5b57\u7b26\u4e32\u524d\u90fd\u8981\u52a0\u4e0a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define ull unsigned long long\nusing namespace std;\nconst int N=100010;\nint n,m,k,tpf[50],cnt,ans;\null h1[N],h2[N],t[N],b=1331;\nstring s,str;\nbool f[20][N];\nint main(){\n\tcin>>s;\n\ts=' '+s+'?';\n\tn=s.size()-1;\n\tt[0]=1;\n\tfor(int i=1;i<N;i++)t[i]=t[i-1]*b;\n\tfor(int i=1;i<=n;i++){\n\t\th1[i]=h1[i-1]*b+s[i];\n\t\tif(s[i]=='*'||s[i]=='?')tpf[++cnt]=i;\n\t}\n\tscanf(\"%d\",&k);\n\twhile(k--){\n\t\tcin>>str;\n\t\tstr=' '+str+'a';\n\t\tm=str.size()-1;\n\t\tfor(int i=1;i<=m;i++)h2[i]=h2[i-1]*b+str[i];\n\t\tmemset(f,0,sizeof(f));\n\t\tf[0][0]=1;\n\t\tfor(int i=0;i<=cnt;i++){\n\t\t\tif(s[tpf[i]]=='*')for(int j=1;j<=m;j++)if(f[i][j-1])f[i][j]=1;\n\t\t\tfor(int j=0;j<=m;j++){\n\t\t\t\tif(!f[i][j])continue;\n\t\t\t\tregister int lt=tpf[i]+1,rt=tpf[i+1]-1,ls=j+1,rs=j+(rt-lt+1);\n\t\t\t\tif(h1[rt]-h1[lt-1]*t[rt-lt+1]==h2[rs]-h2[ls-1]*t[rs-ls+1])\n\t\t\t\t\tf[i+1][rs+(s[tpf[i+1]]=='?')]=1;\n\t\t\t}\n\t\t}\n\t\tputs(f[cnt][m]?\"YES\":\"NO\");\n\t}\n}\n```\n\n\u53e6\u5916\uff0c\u8fd9\u4e00\u9053\u9898\u548c[\u75c5\u6bd2\u68c0\u6d4b](https://www.luogu.com.cn/problem/P2536)\u4e5f\u5f88\u76f8\u4f3c\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u53bb$A$\u4e00\u4e0b",
        "postTime": 1609303593,
        "uid": 310802,
        "name": "_Diu_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    },
    {
        "content": "**\u5176\u5b9e\u2026\u2026\u4e0d\u7528\u52a8\u6001\u89c4\u5212\u3002**\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u662f\uff0c\u6309\u7167\"\\*\"\u5c06\u6a21\u677f\u4e32\u5206\u6bb5\uff0c\u90a3\u4e48\u6bcf\u4e00\u6bb5\u5176\u5b9e\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u2014\u2014\u53ea\u8981\u5728\u8be2\u95ee\u4e32\u4e2d\u80fd**\u76f8\u7ee7**\u627e\u5230\u8fd9\u4e9b\u6bb5\u5373\u53ef\u3002\uff08\u6211\u8bed\u6587\u4e0d\u597d...\u4ee5\u4e0b\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e0d\u592a\u5408\u8bed\u6587\u8bed\u6cd5\u7684\"\u6bb5\"\uff0c\u610f\u6307\u6309\u7167'\\*'\u5206\u9694\u51fa\u6765\u7684\u5b57\u7b26\u4e32\uff09\n\n\u6bd4\u5982\uff1a\n```cpp\n*abc*bcd*efg* -> abc, bcd, efg\n```\n\u5206\u6210\u4e09\u6bb5\u3002\u53ea\u8981\u8fd9\u4e09\u6bb5\u90fd\u80fd\u5728\u8be2\u95ee\u91cc\u5148\u540e\u627e\u5230\u5373\u5408\u6cd5\u3002\u800c\u4e14\u663e\u7136\u7684\u662f\uff0c\u627e\u5230\u7684\u8d8a\u524d\u9762\u5c31\u8d8a\u4f18\uff08**\u627e\u5230\u8d8a\u524d\u610f\u5473\u7740\u7559\u7ed9\u540e\u9762\u7684\u9009\u62e9\u8d8a\u591a**\uff0c\u6bd5\u7adf\u2018\\*\u2019\u53ef\u4ee5\u4efb\u610f\u8df3\uff0c\u5b9e\u5728\u4e0d\u884c\u628a\u591a\u51fa\u6765\u7684\u4ea4\u7ed9\u2018\\*\u2019\u8df3\u8fc7\u5c31\u597d\u4e86\uff09\u3002\u5f53\u7136\uff0c\u6536\u5c3e\u5982\u679c\u4e0d\u662f\u901a\u914d\u7b26\u5c31\u8981\u76f4\u63a5\u6bd4\u8f83\u4e00\u4e0b\uff0c\u56e0\u4e3a\u9996\u5c3e\u56fa\u5b9a\u4e86\u4e0d\u80fd\u52a8\u3002\n\n\u90a3\u4e48\u60f3\u60f3\u600e\u4e48\u627e\u3002\u3002\u3002\n\n\u9996\u5148\u6700\u597d\u60f3\u5230\u7684\u5f53\u7136\u662fKMP\uff0c\u628a'?'\u8ddf\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u90fd\u8ba4\u4e3a\u76f8\u7b49\u5c31\u597d\u4e86\u561b\u3002**\u4f60\u770b\u8fd9\u4e2a\u590d\u6742\u5ea6\uff0c\u5b83\u591a\u4e48\u4f18\u79c0\u554a\uff01**\u8d70\uff0cKMP\uff01\n\n\uff08\u8fd9\u4e48\u60f3\u7684\u540c\u5b66**\u8f6c\u5230\u697c\u4e0b\u5927\u4f6c\u7684\u9898\u89e3**\u3002\u3002\u6211\u6a21\u62df\u8d5b\u65f6\u6253\u7684\u4e5f\u662fKMP\u3002\u3002\u3002\uff09\n\n\u6ca1\u4e86KMP\uff0c\u6211\u4eec\u80fd\u5feb\u901f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u597d\u50cf\u53ea\u6709**hash**\u4e86\u3002\n\n\uff08\u539f\u7406\uff0c\u61c2\u7684\u540c\u5b66\u53ef\u4ee5\u8df3\u8fc7\uff09\u4ee4\u6570\u7ec4hash[i]\u8868\u793a**str[i] + str[i + i] \\* base + str[i + 2] \\* base ^ 2 + ... + str[n] * base ^ (n - i)**\uff0c\u5176\u4e2dstr[i]\u8868\u793a\u7b2ci\u4f4d\u5b57\u7b26\uff0cbase\u4e3a\u4efb\u610f\u6307\u5b9a\u7684\u6b63\u6574\u6570\uff0c**hash[n]\u672c\u8d28\u4e0a\u76f8\u5f53\u4e8e\u4ee5\u4e00\u4e2abase\u8fdb\u5236\u6570\u8868\u793a1\u5230n\u8fd9\u6bb5\u7684\u5b57\u7b26\u4e32**\n\n\u90a3\u4e48\u6709**hash[i] = hash[i + 1] \\* base + str[i]**\uff0c\u6211\u4eec\u53ef\u4ee5O(n)\u9012\u63a8\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684hash\u6570\u7ec4\u3002\n\n\u800c\u4e14\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e2a\u5b50\u4e32[x, x + len]\uff0c\u5b83\u7684hash\u503c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9hash\u6570\u7ec4\u4f5c\u51cf\u6cd5\u5f97\u5230\uff1a\n```cpp\nson_hash(begin, length) = hash[begin] - hash[begin + length] * base ^ length\n```\n\u53ea\u8981\u6211\u4eec\u518d\u9884\u5904\u7406\u51fa\u6240\u6709base^i\uff0c\u4e0a\u9762\u7684\u5f0f\u5b50\u5c31\u662fO(1)\u53ef\u5f97\u7684\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0cO(n)\u7684\u9884\u5904\u7406\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u610f\u5b50\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u7528O(1)\u7684\u65f6\u95f4\u6c42\u51fa\u5176hash\u503c\u3002\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90fd\u4e0d\u4f1a\u5e0c\u671b\u4e00\u4e2a\u6570\u5b57\"\u7206int\"\uff0c\"\u7206long long\"\uff0c\u6240\u4ee5\u4f1a\u7ed9\u5b83\u52a0\u4e0a\u4e00\u4e2a\u53d6\u6a21\u3002\u4f46\u5bf9\u4e8ehash\u503c\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u53bb\u6a21\u5b83\uff0c\u800c\u662f\u4f7f\u7528unsigned long long\u8ba9\u5b83\u81ea\u7136\u6ea2\u51fa\uff0c\u8fd9\u6837\u505a\u6bd4\u53d6\u6a21\u8981\u5feb\u5f88\u591a\u3002\u867d\u7136\u8fd9\u6837\u662f\u53ef\u80fd\u88ab\u5361\u6389\u7684\uff08\u56e0\u4e3a\u8fd9\u6837\u5c31\u662f%2^63\u6b21\uff09\uff0c\u4f46\u4e00\u822c\u4e0d\u4f1a\u6709\u6076\u6bd2\u7684\u51fa\u9898\u4eba\u7279\u610f\u6765\u5361\u81ea\u7136\u6ea2\u51fa\u3002\n\n\n**\u6765\u8bf4\u8bf4\u5177\u4f53\u7684\u3002**\n\n\u9996\u5148\u660e\u786e\u4e00\u4e0b\u95ee\u9898\uff0c\u539f\u95ee\u9898\u5df2\u7ecf\u8f6c\u5316\u6210\u4e86\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u2018?\u2019\u7684\u5b57\u7b26\u4e32\uff0c\u6c42\u5728\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6700\u65e9\u4f4d\u7f6e\u3002\uff08\u4e0d\u505c\u7684\u505a\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u80fd\u5904\u7406\u5b8c\u6240\u6709\u6bb5\u4e86\uff09\n\n\u663e\u7136\u7684\u662f\uff0c**\u5982\u679c\u628a'?'\u7684\u503c\u7b97\u5728hash\u503c\u91cc\u9762\uff0c\u6211\u4eec\u4e4b\u524d\u5173\u4e8ehash\u503c\u6bd4\u8f83\u7684\u4e00\u5927\u6bb5\u8bdd\u5c31\u5168\u5f53\u653e\u5c41\u4e86**\u3002\uff08\u628a\u2018\uff1f\u2019\u7684\u7b97\u5165hash\u503c\uff0c\u80fd\u76f8\u7b49\u624d\u602a\u2014\u2014\u76f8\u7b49\u4e86\u53cd\u5012\u5c31\u662fhash\u51b2\u7a81\u4e86\u3002\u3002\uff09\n\n**\u6240\u4ee5'?'\u8981\u88ab\u5355\u72ec**~~\u7ea6\u8c08~~**\u5904\u7406**\u3002\u5bf9\u4e8e\u5df2\u7ecf\u6309\u7167'\\*'\u5206\u9694\u51fa\u6765\u7684\u6bcf\u4e00\u6bb5\uff0c\u6211\u4eec\u518d\u628a\u5b83\u6309\u7167'?'\u5355\u72ec\u5206\u5f00\u6765\uff0c\u4e00\u6bb5\u4e00\u6bb5\u7684\u627e\u3002\u6ce8\u610f\u8fd9\u91cc\u548c'\\*'\u7684\u4e0d\u540c\u4e4b\u5904\uff1a**'\\*'\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff0c\u4f46'?'\u53ea\u80fd\u62b5\u6389\u4e00\u4e2a\u5b57\u7b26**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6bd4\u8f83\u6309\u7167'\\*'\u5206\u9694\u7684\u6bb5\uff0c\u6bd4\u8f83\u7684\u5927\u6982\u5c31\u662f\u4e0b\u9762\u8fd9\u79cd\u4e1c\u897f\uff1a\n```cpp\nhash_val1, ?, ?, hash_val2, ?, hsah_val3, \u2026\u2026\n```\n\u6bd4\u8f83hash\u503c\u7684\u65f6\u5019\u6bd4\u53bb\u5c31\u597d\u4e86\uff0c\u5982\u679c\u78b0\u5230'?'\u5c31\u628a\u8be2\u95ee\u4e32\u7684\u8d77\u59cb\u6307\u9488\uff08\u4e0b\u6807\uff09\u5f80\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u56e0\u4e3a'?'\u5339\u914d\u4e14\u53ea\u5339\u914d\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u5339\u914d\u5230\u540e\u9762\u53d1\u73b0\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u8981\u628a\u8be2\u95ee\u4e32\u7684\u6307\u9488\u5f80\u524d\u56de\u6eaf\uff0c\u56de\u6eaf\u5230\u4e4b\u524d\u7684\u4f4d\u7f6e+1\u3002**\u542c\u8d77\u6765\u5f88\u590d\u6742\uff0c\u4f46\u5b9e\u9645\u4e0a\u5199\u6210\u591a\u4e2a\u51fd\u6570\u5c31\u597d\u591a\u4e86\u3002**\n\n\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u672a\u5fc5\u548c\u4e0a\u8ff0\u543b\u5408\uff0c\u4f46\u601d\u8def\u662f\u4e00\u81f4\u7684\uff0c\u5b9e\u73b0\u5c31\u89c1\u4ec1\u89c1\u667a\u5427\u3002\n\n\u4ee3\u7801\u91cc\u9762\u4f1a\u52a0\u4e00\u5c0f\u70b9\u6ce8\u91ca\uff0c\u8bfb\u8005\u53ef\u4ee5\u7ec6\u7ec6\u54c1\u5473\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#include <vector>\n\nnamespace my {\n\ttypedef unsigned long long ull;\n\tconst int maxn(112345);\n\tconst ull base(23);//\u9009\u62e9\u7684\u8fdb\u5236\u6570\n\tull power[maxn];//power[i] = base ^ i\uff0c\u5176\u4e2d'^'\u8868\u793a\u5e42\n\tinline void init_power() {\n\t\tpower[0] = 1;\n\t\tfor (int i(1); i != maxn; ++i) {\n\t\t\tpower[i] = power[i - 1] * base;\n\t\t}\n\t}\n\tclass string {//\u81ea\u5df1\u5199\u7684string\uff0c\u5c01\u88c5\u4e86\u4e00\u4e0bhash\u76f8\u5173\u7684\u51fd\u6570\n\t\tpublic:\n\t\t\tstring() : end(0) {}\n\t\t\tchar& operator[](int p) {\n\t\t\t\treturn str[p];\n\t\t\t}\n\t\t\tvoid clear() { end = 0; }\n\t\t\tvoid read() {//\u8bfb\u5165\n\t\t\t\tend = 0;\n\t\t\t\tchar c(getchar());\n\t\t\t\twhile (c < 'a' || c > 'z') c = getchar();\n\t\t\t\tstr[end++] = 'a';//\u5728\u5b57\u7b26\u4e32\u6536\u5c3e\u7edf\u4e00\u52a0\u5165\u76f8\u540c\u5b57\u7b26\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u4e14\u907f\u514d\u4e86\u7ed3\u5c3e\u3001\u5f00\u5934\u662f\u901a\u914d\u7b26\u7684\u60c5\u51b5\u3002\n\t\t\t\tdo {\n\t\t\t\t\tstr[end++] = c;\n\t\t\t\t\tc = getchar();\n\t\t\t\t} while (c >= 'a' && c <= 'z');\n\t\t\t\tstr[end++] = 'a';\n\t\t\t\tinit_hash();\n\t\t\t}\n\t\t\tbool empty() const { return end == 0; }\n\t\t\tint size() const { return end; }\n\t\t\tvoid push_back(char c) {//\u5411\u8be5string\u4e2d\u52a0\u5165\u5b57\u7b26\n\t\t\t\tif (c == '?') pos.push_back(end);//pos\u8bb0\u5f55\u4e86\u8be5string\u6240\u6709'?'\u7684\u4f4d\u7f6e\uff08\u539f\u56e0\u662f\u6211\u5728\u5206\u6bb5\u65f6\u53ea\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5411string\u4e2d\u52a0\u5165\u5b57\u7b26\uff09\n\t\t\t\tstr[end++] = c;\n\t\t\t}\n\t\t\tvoid init_hash() {//\u521d\u59cb\u5316hash\uff0c\u539f\u7406\u5982\u4e0a\u6240\u8ff0\n\t\t\t\thash[end] = 0;\n\t\t\t\tfor (int i(end - 1); i >= 0; --i) {\n\t\t\t\t\thash[i] = hash[i + 1] * base + str[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tull gethash(int beg, int len) const {//\u83b7\u5f97\u5176\u4e2d\u67d0\u4e00\u6bb5\u7684hash\u503c\n\t\t\t\treturn hash[beg] - hash[beg + len] * power[len];\n\t\t\t}\n\t\t\tull gethash() const {//\u83b7\u5f97\u6574\u6bb5\u7684hash\u503c\uff0c\u7a0b\u5e8f\u4e2d\u4f3c\u4e4e\u6ca1\u6709\u7528\u5230\n\t\t\t\treturn hash[0];\n\t\t\t}\n\t\t\tstd::vector<int> pos;//pos\u8bb0\u5f55\u6240\u6709'?'\u7684\u4f4d\u7f6e\n\t\tprotected:\n\t\t\tchar str[maxn];\n\t\t\tull hash[maxn];\n\t\t\tint end;\n\t}seg[20], head, tail, dest;//\u56db\u8005\u5206\u522b\u662f\uff1a\u6a21\u677f\u4e32\u5206\u51fa\u6765\u7684\u6bcf\u4e00\u6bb5\uff0c\u6a21\u677f\u4e32\u7684\u9996\uff0c\u6a21\u677f\u4e32\u7684\u5c3e\uff0c\u76ee\u6807\u4e32\uff08\u8be2\u95ee\u4e32\uff09\n\tchar str[maxn];\n\tint endseg, lenstr;//endseg\u5373\u5206\u51fa\u6765\u7684\u6bb5\u6570\n\tvoid init_seg(int len) {//\u628a\u6a21\u677f\u4e32\u5206\u6bb5\n\t\tint left(0), right(len - 1);\n\t\twhile (left <= right) {//\u5148\u5904\u7406\u9996\n\t\t\tif (str[left] == '*') break;\n\t\t\thead.push_back(str[left++]);\n\t\t}\n\t\thead.init_hash();\n\t\tint pos(right);\n\t\twhile (left <= pos) {//\u7531\u4e8e\u5c3e\u4e32\u5927\u5c0f\u4e0d\u5b9a\uff0c\u5148\u627e\u5230\u8d77\u59cb\u70b9\n\t\t\tif (str[pos] == '*') break;\n\t\t\t--pos;\n\t\t}\n\t\tfor (int i(pos + 1); i <= right; ++i) {\n\t\t\ttail.push_back(str[i]);\n\t\t}\n\t\ttail.init_hash();\n\t\t++left; right = pos;\n\t\twhile (left <= right) {//\u5904\u7406\u51fa\u6240\u6709\u7684\u6bb5\n\t\t\tif (str[left] == '*') {//\u6bcf\u6bb5\u95f4\u7684\u5206\u9694\u7b26\n\t\t\t\tif (!seg[endseg].empty())//\u4e3a\u907f\u514dab******c\u7684\u60c5\u51b5\uff0c\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u4e3a\u7a7a\n\t\t\t\t\tseg[endseg].init_hash(), ++endseg;//\u975e\u7a7a\uff0c\u521d\u59cb\u5316hash\u503c\n\t\t\t\t++left;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tseg[endseg].push_back(str[left++]);//\u52a0\u5165\u6bb5\u4e2d\n\t\t\t}\n\t\t}\n\t\tif (!seg[endseg].empty()) ++endseg;//\u5982\u679cendseg\u4e2d\u6709\u5143\u7d20\uff0c++endseg\u4f7f\u5176\u6307\u5411\u8d85\u51fa\u672b\u7aef\u4e0b\u4e00\u4f4d\n\t}\n\t\n\tinline bool match(int s, int beg) {//\u5e38\u8bc6\u5c06\u6bb5seg[s]\u4e0e\u76ee\u6807\u4e32beg\u5904\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\n\t\tint front(0);\n\t\tfor (int i(0); i != seg[s].pos.size(); ++i) {//\u679a\u4e3e'?'\u95f4\u7684\u5b57\u7b26\u4e32\n\t\t\tint len(seg[s].pos[i] - front);\n\t\t\tif (seg[s].gethash(front, len) != dest.gethash(beg, len)) {//hash\u503c\u4e0d\u76f8\u7b49\uff0c\u4e00\u5b9a\u6ca1\u5bf9\u4e0a\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbeg += len + 1;\n\t\t\tfront += len + 1;//\u5339\u914d\u4e0a\u4e86\uff0c\u90a3\u4e48\u7ee7\u7eed\u5339\u914d\u4e0b\u4e00\u4e2a\u3002+1\u662f\u8868\u793a\u8fd9\u91cc\u8df3\u4e86\u4e00\u4e2a\u5b57\u7b26(\u5373'?')\n\t\t}\n\t\tint len(seg[s].size() - front);\n\t\tif (seg[s].gethash(front, len) != dest.gethash(beg, len)) return false;//\u6700\u540e\u6ca1\u6709'?'\u4e4b\u540e\u53ef\u80fd\u8fd8\u6709\u4e00\u6bb5\u9700\u8981\u6bd4\u8f83 \n\t\treturn true;\n\t}\n\tinline bool com_seg(int s, int& left, int right) {\n\t\twhile (left <= right) {//\u5c1d\u8bd5\u5c06\u6bb5seg[s]\u4e0edest\u5728[left, right]\u95f4\u7684\u5b50\u4e32\u8fdb\u884c\u5339\u914d\n\t\t\tif (match(s, left)) {\n\t\t\t\tleft += seg[s].size();//\u5982\u679c\u6210\u529f\u5339\u914d\uff0cleft\u5c31\u5f80\u540e\u8df3\u5230\u4e0b\u4e00\u4e2a\u9700\u8981\u5339\u914d\u7684\u8d77\u59cb\u4f4d\u7f6e\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t++left;//\u5339\u914d\u5931\u8d25\uff0c\u5c1d\u8bd5++left\u7ee7\u7eed\u5339\u914d\n\t\t}\n\t\treturn false;\n\t}\n\tinline bool cmpstr(string& a, int x, string& b, int y, int len) {//\u6bd4\u8f83a\u4ecex\u5904\u7684\u957f\u5ea6\u4e3alen\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e0eb\u4ecey\u5904\u5f00\u59cb\u7684\u957f\u5ea6\u4e3alen\u7684\u5b57\u7b26\u4e32\u76f8\u7b49\n\t\tfor (int i(0); i != len; ++i) {\n\t\t\tif (a[x + i] != b[y + i] && a[x + i] != '?' && b[y + i] != '?') return false;\n\t\t}\n\t\treturn true;\n\t}\n\tvoid compare() {//\u6574\u4f53\u7684\u5339\u914d\n\t\tint left(0), right(dest.size() - 1);\n\t\tif (head.size() > dest.size() || tail.size() > dest.size()) {//\u9996\u3001\u5c3e\u4e32\u5927\u5c0f\u5bf9\u4e0d\u4e0a\uff0c\u4e00\u5b9a\u9519\u4e86\u3002\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t\tif (!cmpstr(head, 0, dest, 0, head.size())) {//\u7531\u4e8e\u63d2\u5165\u4e86'a'\uff0c\u6a21\u677f\u4e32\u7684\u9996\u4e32\u4e00\u5b9a\u4e0d\u662f\u901a\u914d\u7b26\uff0c\u4e00\u5b9a\u8981\u4e0e\u76ee\u6807\u4e32\u7684\u5f00\u5934\u5339\u914d\u3002\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t} else {\n\t\t\tleft = head.size();\n\t\t}\n\t\tif (!cmpstr(tail, 0, dest, right - tail.size() + 1, tail.size())) {//\u4e0e\u4e0a\u540c\u7406\uff0c\u5339\u914d\u5c3e\u4e32\n\t\t\tprintf(\"NO\\n\");\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tright = right - tail.size();\n\t\t}\n\t\tfor (int i(0); i != endseg; ++i) {\n\t\t\tif (!com_seg(i, left, right)) {\u5c1d\u8bd5\u5c06\u6bb5seg[i]\u4e0eleft\u5230right\u7684\u5b57\u7b26\u4e32\u5339\u914d\uff08\u53ef\u4ee5\u8df3\u8dc3\uff0c\u56e0\u4e3a\u6bb5\u7684\u6536\u5c3e\u90fd\u662f\u88ab\u62b9\u53bb\u7684'\\*'\uff09\n\t\t\t\tprintf(\"NO\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t}\n\t\n\tint main() {\n\t\tinit_power();//\u4e00\u4e9b\u521d\u59cb\u5316\u548c\u51fd\u6570\u8c03\u7528\n\t\tint T;\n\t\tscanf(\"%s%d\", str + 1, &T);\n\t\tstr[0] = 'a';\n\t\tstr[lenstr = ::strlen(str)] = 'a';\n\t\tinit_seg(++lenstr);\n\t\twhile (T--) {\n\t\t\tdest.read();\n\t\t\tcompare();\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nint main() {\n\treturn my::main();\n}\n\n```",
        "postTime": 1541147388,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    },
    {
        "content": "\u5728[\u8fd9\u91cc](https://www.cnblogs.com/closureshop/p/16882153.html)\u98df\u7528\u66f4\u4f73\u54e6\u3002\n\n\u60f3\u4e86\u4e24\u79cd\u505a\u6cd5\uff0c\u7b2c\u4e00\u79cd\u62ff\u5230\u4e86 10 \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u800c\u7b2c\u4e8c\u79cd\u505a\u6cd5\u4e0d\u7528\u524d\u7f00\u548c\uff0c\u800c\u4e14\u8fd8\u8dd1\u7684\u98de\u5feb\u3002\u76ee\u524d\u6700\u4f18\u89e3\u7b2c\u4e09~~\u5c1d\u8bd5\u5361\u8fdb\u6700\u4f18\u89e3\u672a\u679c~~\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u662f\u4e00\u9053\u597d\u9898\uff0c\u505a\u5b8c\u5bf9 KMP \u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3\u3002\n\n# 1.\uff08\u672c\u4eba\u7684\uff09 KMP \u7a76\u7adf\u54ea\u91cc\u9519\u4e86\n\n\u9996\u5148\uff0c\u770b\u5230\u5339\u914d\uff0c\u7b2c\u4e00\u773c\u60f3\u5230 KMP\u3002\u63a5\u7740\u5c31\u80fd\u53d1\u73b0\u5b9e\u9645\u4e0a\u5206\u9694\u7b26 ```*``` \u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u4e00\u6574\u4e2a\u5b57\u7b26\u4e32\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u5c0f\u4e32\uff0c\u5339\u914d\u5b8c\u4e00\u4e2a\u624d\u80fd\u5339\u914d\u4e0b\u4e00\u4e2a\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u7ed3\u8bba\uff1a\u6bcf\u4e00\u4e2a\u5c0f\u4e32\u80fd\u5b8c\u5168\u5339\u914d\u65f6\u5c31\u8981\u5339\u914d\uff0c\u56e0\u4e3a\u4e4b\u540e\u7684 ```*``` \u53ef\u4ee5\u5339\u914d\u4efb\u610f\u957f\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u8981\u6ce8\u610f\u5339\u914d\u6700\u540e\u4e00\u4e2a\u5c0f\u4e32\u7ec8\u70b9\u7684\u7279\u5224\uff09\u3002 \n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53e3\u80e1\u51fa\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u5bf9\u7684\u505a\u6cd5\uff1a\u5bf9\u6bcf\u4e2a\u5c0f\u4e32\u505a KMP\uff0c\u9047\u5230\u95ee\u53f7\u76f4\u63a5\u5f53\u505a\u5339\u914d\uff0c\u7136\u540e\u5728\u8be2\u95ee\u4e32\u4e0a\u8dd1\u5339\u914d\u5b8c\u4e00\u4e2a\u5c0f\u4e32\u5c31\u8fdb\u5165\u4e0b\u4e00\u4e2a\u5c0f\u4e32\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n\u6b63\u5982\u524d\u8a00\u6240\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728\u6211\u7684\u63d0\u4ea4\u8bb0\u5f55\u770b\u5230\u593a\u76ee\u7684 10 \u5206\u3002\u4e3a\u4ec0\u4e48\u9519\u4e86\u5462\uff1f\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u4e32\uff1a```aca?c``` \u3002\u6309\u7167 KMP \u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u6c42\u51fa\u7684\u5931\u914d\u6307\u9488\u5e94\u8be5\u4e3a $0,0,1,2,2$\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\u6765\u6c42\uff0c\u7b54\u6848\u4f1a\u662f\u8fd9\u6837\uff1a$0,0,1,2,0$\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u8bbe\u5b57\u7b26\u4e32\u4e3a $s$\uff0c\u5f53\u524d\u81ea\u5339\u914d\u5230 $j$\uff0c\u5931\u914d\u6570\u7ec4\u4e3a $fail$\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u5faa\u73af\u5230\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u6211\u4eec\u8981\u5c06 $s_{j+1}$ \u4e5f\u5c31\u662f $s_3$ \u4e0e $s_5$ \u6bd4\u8f83\u3002\u53d1\u73b0\u4e0d\u884c\uff0c\u8fd9\u65f6\u6211\u4eec\u7684 $j$ \u4f1a\u56de\u8df3\u5230 $fail_j$ \u4e5f\u5c31\u662f $s_0$ \u5904\u3002\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6b63\u5e38\u7684 KMP \u8fc7\u7a0b\u3002\n\n\u4f46\u662f KMP \u7684\u4f18\u5316\u5728\u6b64\u65f6\u4f1a\u9ed8\u8ba4\u672c\u6765\u4e3a ```?``` \u7684 $s_4$ \u4e3a ```a``` \u3002\u56e0\u4e3a\u8ba1\u7b97\u673a\u4f1a\u8ba4\u4e3a\u65e2\u7136 $s_2$ \u4e0e $s_4$ \u76f8\u5339\u914d\uff0c\u90a3\u4e48 $s_4 = s_2$ \u4e5f\u662f\u7406\u6240\u56e0\u5f53\u7684\u3002\u8fd9\u65f6\u5931\u914d\u6307\u9488\u5f80\u56de\u8df3\u65f6\u5c31\u6ca1\u6709\u8003\u8651 $s_4$ \u53d1\u751f\u53d8\u5316\u7684\u60c5\u51b5\uff0c\u5b83\u53ea\u4f1a\u61a8\u61a8\u5730\u8ba4\u4e3a ```ac``` \u4e0e ```cc``` \u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u5e94\u8be5\u8df3\u56de\u8d77\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u95ee\u53f7\u76f4\u63a5\u8df3\u8ba1\u5212\u5ba3\u544a\u7834\u4ea7\u3002\n\n# 2.\u8dd1\u7684\u98de\u5feb\u7684\u54c8\u5e0c\u505a\u6cd5\n\n\u4e00\u4e2a\u4e32\u4e0e\u4e00\u4e2a\u4e32\u5339\u914d\uff0c\u9664\u4e86 KMP \uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u60f3\u5230\u54c8\u5e0c\u3002\u5728\u4ee5 ```*``` \u4e3a\u5206\u9694\u5c06\u5927\u4e32\u5206\u5272\u4e3a\u5c0f\u4e32\u540e\uff0c\u6bcf\u4e00\u4e2a\u5c0f\u4e32\u7684\u957f\u5ea6\u56fa\u5b9a\u3002\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u626b\u8be2\u95ee\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u63d0\u53d6\u51fa\u5f53\u524d\u5c0f\u4e32\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 $O(1)$ \u6c42\u54c8\u5e0c\u503c\u3002\n\n\u8bf4\u5177\u4f53\u70b9\uff0c\u4f60\u9996\u5148\u4ece\u8d77\u70b9\u63d0\u53d6\u51fa\u5c0f\u4e32\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u987a\u4fbf\u8bb0\u5f55\u4e00\u4e0b\u6700\u5de6\u8fb9\u4e58\u4e86\u51e0\u6b21\u54c8\u5e0c\u7684\u5355\u4f4d\uff0c\u7136\u540e\u8f6c\u79fb\u65f6\u5220\u9664\u6700\u5de6\u8fb9\u7684\u6743\u503c\u4e58\u6700\u5de6\u8fb9\u4e58\u8fc7\u7684\u54c8\u5e0c\u5355\u4f4d\u5c31\u884c\u3002\n\n\u4e0b\u9762\u662f\u4e00\u5f20\u56fe\uff0c\u5047\u8bbe\u5c0f\u4e32\u957f\u5ea6\u4e3a 3\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zx90qpfh.png)\n\n\u4e0d\u8bb8\u8bf4\u6211\u5b57\u4e11\uff01\n\n\u90a3\u95ee\u53f7\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u628a\u95ee\u53f7\u7684\u6743\u503c\u7f6e\u4e3a 0\uff0c\u52a8\u6001\u8bb0\u5f55\u5f53\u524d\u8be2\u95ee\u4e32\u4e2d\u54ea\u51e0\u4e2a\u4e32\u4e0e\u95ee\u53f7\u5bf9\u5e94\uff0c\u5c06\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\u5f3a\u5236\u8d4b\u4e3a 0\uff08\u65b9\u6cd5\u53ef\u53c2\u7167\u51cf\u53bb\u6700\u5de6\u7aef\u6743\u503c\u7684\u65b9\u6cd5\uff09\uff0c\u5411\u540e\u63a8\u8fdb\u65f6\u66b4\u529b\u8f6c\u79fb\uff0c\u5c06\u6240\u6709\u4e0e\u95ee\u53f7\u5bf9\u5e94\u7684\u4e0b\u6807\u52a0\u4e00\u5373\u53ef\u3002\n\n\u7531\u4e8e\u95ee\u53f7\u6700\u591a\u53ea\u6709 10 \u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5c31\u662f $O(n)$ \u5e26\u4e86\u4e2a 10 \u7684\u5e38\u6570\u3002\n\n\u8fd9\u4e00\u9053\u9898\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n\n1. \u5f00\u5934\u9664\u975e\u6709\u4e00\u4e2a ```*``` \u6321\u7740\uff0c\u5426\u5219\u7b2c\u4e00\u4e2a\u5c0f\u4e32\u4e00\u5b9a\u8981\u4e0e\u8be2\u95ee\u4e32\u524d\u7f00\u5339\u914d\u3002\u6240\u4ee5\u8981\u7279\u5224\uff0c\u5426\u5219\u4f1a\u5728\u7b2c\u4e09\u4e2a\u70b9 WA\u3002\n2. \u5230\u6700\u540e\u9664\u975e\u6709\u4e00\u4e2a ```*``` \u6321\u7740\uff0c\u5426\u5219\u6700\u540e\u4e00\u4e2a\u4e32\u4e00\u5b9a\u8981\u4e0e\u8be2\u95ee\u4e32\u540e\u7f00\u5339\u914d\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2a\u4e32\u5339\u914d\u4e86\u5374\u4e0d\u662f\u4e0e\u540e\u7f00\u5339\u914d\u7684\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u7ed3\u675f\uff0c\u8fd8\u8981\u7ee7\u7eed\u6bd4\u8f83\u3002\n3. \u6bcf\u4e00\u6b21\u5411\u540e\u63a8\u8fdb\u65f6\uff0c\u5148\u52a0\u4e0a\u539f\u5148\u4e32\u88ab\u5f3a\u5236\u8d4b\u4e3a 0 \u7684\u70b9\u7684\u6743\u503c\uff0c\u518d\u51cf\u53bb\u6700\u5de6\u8fb9\u7684\u6743\u503c\u4e58\u4e0a\u5b83\u7684\u5e42\uff0c\uff08\u8be6\u60c5\u53c2\u7167\u4e0a\u56fe\uff09\u5e76\u52a0\u4e0a\u4e0b\u4e00\u4f4d\u6743\u503c\uff0c\u6700\u540e\u518d\u5c06\u5f53\u524d\u4e0e\u95ee\u53f7\u5339\u914d\u7684\u70b9\u5f3a\u5236\u8d4b\u4e3a 0\u3002\u5982\u679c\u7b2c\u4e00\u4e8c\u6b65\u987a\u5e8f\u4e71\u6389\u7684\u8bdd\u4f1a\u5bfc\u81f4\u88ab\u5f00\u5934\u662f ```?``` \u7684\u6570\u636e hack \u6389\u3002\u56e0\u4e3a\u6b64\u65f6\u6700\u5de6\u8fb9\u7684\u6743\u503c\u51cf\u4e86\u4e24\u904d\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ull unsigned long long\nusing namespace std;\n#define rep(i,a,b) for(int i =(a);i <= (b);i ++)\nconst int maxn = 1e5 + 5;\nconst ull base = 19260817;\nint len[maxn], tot;\nbool pd[15];\nstring s, p[maxn];\null H[maxn];\nbool hjl, hzh;\null qpow(ull u, ull v)\n{\n    ull ans = 1;\n    while(v)\n    {\n        if(v & 1) ans *= u;\n        u *= u;\n        v >>= 1;\n    }\n    return ans;\n}\nvoid solve()\n{\n\tint n = s.size();\n\ts = ' ' + s;\n    ull ha = 0, now = 1;\n    bool pd = 0;\n    ull en[12], st = -1, cnt = 0, mi[12], big = 0;//st\u4e3a\u6700\u5de6\u8fb9\u7684\u4e0b\u6807\uff0cen\u4e0ecnt\u5b58\u50a8\u4e0e\u95ee\u53f7\u5339\u914d\u7684\u70b9\uff0cmi\u7edf\u8ba1\u4e0e\u95ee\u53f7\u5bf9\u5e94\u7684\u70b9\u4e58\u4e86\u51e0\u6b21base\uff0cbig\u7edf\u8ba1\u6700\u5de6\u7aef\u4e58\u4e86\u51e0\u6b21base\n    rep(i, 1, n)\n    {\n        int li = i;\n        if(pd == 0)\n        {\n            st = i;\n            int m = p[now].size() - 1;\n            cnt = 0;big = 1;ha = 0;\n            rep(j, 0, m)\n            {\n                ha *= base;\n                if(j > 0) big *= base;\n                if(p[now][j] != '?') \n                {\n                    ha += (ull)(s[i] - 'a' + 1);\n                }\n                else\n                {\n                    en[++ cnt] = i;//\u987a\u4fbf\u8bb0\u5f55\u6bcf\u4e2a?\u7684\u521d\u59cb\u5bf9\u5e94\u4f4d\u7f6e\n                    mi[cnt] = qpow(base, m - j);\n                }\n                i ++;\n            }\n            pd = 1;\n            if(ha == H[now]) //\u4e00\u5f00\u59cb\u63d0\u53d6\u51fa\u7684\u4e32\u4e5f\u8981\u8fdb\u884c\u5339\u914d \n            {\n                int o = 0;\n                if(now < tot) now ++, pd = 0, o = 1;\n                if(o == 0 && (i >= n || hzh == 1))//\u5373\u4f7f\u6240\u6709\u4e32\u5339\u914d\u5b8c\u4e86\u4e5f\u4e0d\u4e00\u5b9a\u5b8c\u5168\u5339\u914d\uff0c\u5177\u4f53\u53c2\u7167\u4e0a\u6587\u63d0\u9192\n                {\n                    cout << \"YES\" << endl;\n                    return;\n                }\n            }\n            else if(hjl == 0 && li == 1)\n            {\n                cout << \"NO\" << endl;\n                return ;\n            }\n            i --;\n            continue;\n        }\n        rep(j, 1, cnt) ha += (ull)(s[en[j]] - 'a' + 1) * mi[j], en[j] ++;\n        ha -= (ull)(s[st] - 'a' + 1) * big;\n        ha *= base;\n        ha += (ull)(s[i] - 'a' + 1);\n        st ++;\n        rep(j, 1, cnt) ha -= (ull)(s[en[j]] - 'a' + 1) * mi[j];//\u6ce8\u610f\u987a\u5e8f\n        if(ha == H[now])\n        {\n            int o = 0;\n            if(now < tot) now ++, pd = 0, o = 1;\n            if(o == 0 && (i >= n || hzh == 1))\n            {\n                cout << \"YES\" << endl;\n                return;\n            }\n        }\n    }\n    cout << \"NO\" << endl;\n    return ;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tcin >> s;\n\tint n = s.size();\n\tstring c = \"\";\n    rep(i, 0, n - 1)\n\t{\n\t\tif(s[i] == '*') \n\t\t{\n            if(i == 0) hjl = 1;\n            if(i == n - 1) hzh = 1;//\u5982\u679c\u5f00\u5934\u7ed3\u5c3e\u6709*\uff0c\u90a3\u4e48\u6ca1\u6709\u5339\u914d\u524d\u540e\u7f00\u7684\u5b57\u7b26\u4e32\u4e5f\u80fd\u89c6\u4f5c\u5b8c\u5168\u5339\u914d\n\t\t\tif(c != \"\") p[++ tot] = c, c = \"\";\n\t\t}\n\t\telse c = c + s[i];\n\t}\n\tif(c != \"\") p[++ tot] = c;\n    rep(i, 1, tot)\n    {\n        int m = p[i].size();\n        rep(j, 0, m - 1)\n        {\n            H[i] *= base;\n            if(p[i][j] != '?') H[i] += (ull)(p[i][j] - 'a' + 1);\n        }\n    }\n\tint Q;\n\tcin >> Q;\n\twhile(Q --)\n\t{\n\t\tcin >> s;\n\t\tsolve();\n\t}\n}\n```\n\n\u672c\u7bc7\u9898\u89e3\u5c31\u5230\u8fd9\u91cc\u4e86\uff0c\u8003\u8651\u8003\u8651\u70b9\u4e2a\u63a8\u8350\uff0c\u7136\u540e\u53bb\u628a\u672c\u83dc\u9e21\u4ece\u6700\u4f18\u699c\u4e0a\u6324\u4e0b\u53bb\uff1f",
        "postTime": 1668174813,
        "uid": 149219,
        "name": "_maze",
        "ccfLevel": 6,
        "title": "P3167 [CQOI2014]\u901a\u914d\u7b26\u5339\u914d \u9898\u89e3"
    },
    {
        "content": "\u989d\uff0c\u5176\u5b9e\u77e5\u9053\u662f\u54c8\u5e0c\u4ee5\u540e\u5c31\u8fd8\u597d\u5566\n\n\u5c24\u5176\u662f\uff0c\u5f53\u4f60\u5df2\u7ecf\u505a\u8fc7\u75c5\u6bd2\u68c0\u6d4b\u8fd9\u9053\u9898\u7684\u65f6\u5019\n\n\u4e0d\u8fc7\uff0c\u5f53\u6211\u4eec\u5bf9\u6bd4\u4e24\u9898\u7684\u6570\u636e\u8303\u56f4\u4e4b\u540e\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u610f\u8bc6\u5230\u4e86\u4e00\u4e2a\u4e25\u8083\u7684\u95ee\u9898\n\n\u663e\u7136\uff0c\u8fd9\u9898\u4e0d\u53ef\u80fd\u50cf\u4e4b\u524d\u90a3\u6837\u653e\u5728\u4e00\u9897Trie\u6811\u4e0a\u8dd1\uff0c100000\\*100\uff0c\u8fde\u63d2\u5165Trie\u6811\u90fd\u4e0d\u592a\u53ef\u80fd\uff01\n\n\u4e0d\u8fc7\uff0c\u4f46\u6211\u4eec\u6ce8\u610f\u5230\uff0cn<=100\u4e14\u901a\u914d\u7b26\u6570\u91cf<=10\u8fd9\u4e2a\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u8fc5\u901f\u60f3\u5230\u4e00\u4e2a\u6a21\u7cca\u7684\u601d\u8def\n\n\u4ee5\u901a\u914d\u7b26\u4e3a\u754c\uff0c\u628aT(\u5c31\u662f\u4e00\u5f00\u59cb\u7684\u6a21\u677f\u4e32)\u62c6\u6210\u82e5\u5e72\u4e2a\u4e32\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u7684\u548c\u6587\u672c\u4e32\u53bb\u5339\u914d\u5373\u53ef\uff0c\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u81f4\u662f10\\*100\\*100000=\u4e00\u4ebf\uff0c\u4f3c\u4e4e\u8981\u8d85\u65f6\u554a\uff1f\u4e0d\u8fc7\u6ca1\u4e8b\uff0c\u8981\u6709\u68a6\u60f3\uff0c\u63a5\u7740\u5f80\u4e0b\u60f3\u5148 \n\n\u65e2\u7136\u901a\u914d\u7b26\u6709\u7740\u795e\u5947\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u770b\u901a\u914d\u7b26\u4e24\u7aef\u80fd\u4e0d\u80fd\u5339\u914d\uff0c\u6700\u540e\u518d\u8003\u8651\u4e07\u80fd\u7684\u901a\u914d\u7b26\u3002\n\n\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u600e\u4e48\u5feb\u901f\u5f97\u51fa\u4e24\u7aef\u80fd\u5426\u5339\u914d\u5462\uff1f\n\nkmp\uff1f\n\n\u5176\u5b9e\uff0c\u8fd8\u6709\u66f4\u7b80\u5355\u7684\uff0c\uff1fHash\uff01\n\n\u4e07\u80fd\u7684hash\n\n\u628a\u6a21\u677f\u4e32\u548c\u6587\u672c\u4e32\u4f9d\u6b21hash\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5339\u914d\u4e86\n\n\u90a3\u6211\u4eec\u600e\u4e48\u77e5\u9053\u5f53\u524d\u5339\u914d\u5230\u4e86\u4ec0\u4e48\u5730\u65b9\uff0c\u4e0b\u4e00\u6b65\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u662f\u4e00\u4e2a\u5982\u4f55\u201c\u8f6c\u79fb\u201d\u7684\u95ee\u9898,\n\n\u8f6c\u79fb\uff0c\n\n\u60f3\u5230\u4e86\u4ec0\u4e48\uff0c\n\n\u6ca1\u9519\uff0c\n\nDP\uff01\n\n\u6211\u4eec\u8bbedp\\[i\\]\\[j\\]\u8868\u793a\uff0c\u7b2ci\u4e2a\u901a\u914d\u7b26\uff08\u5305\u62ec\u81ea\u5df1\uff09\u524d\u6240\u6709\u5b57\u7b26\u5df2\u7ecf\u4e0e\u6587\u672c\u4e32\u4e2d\u7684\u524dj\u4e2a\u5b57\u7b26\u662f\u5426\u5339\u914d\n\n\u6709true or false\u6765\u8868\u793a  \n\n\u63a5\u4e0b\u6765\u8003\u8651\u8f6c\u79fb\uff0ci\u5411i+1\u8f6c\u79fb\uff0c\u68c0\u6d4b\u8fd9\u4e00\u6bb5\u7684\u5b57\u7b26\u662f\u5426\u80fd\u548c\u6587\u672c\u4e32\u5339\u914d\uff0c\n\n\u8fd9\u4e00\u6bb5\u4f4d\u7f6e\u53d8\u5316\u5c31\u662f(loc\\[i+1\\]-1)-\uff08loc\\[i\\]+1\uff09+1\n\n\u90a3\u4e48j\u4e5f\u8981\u5411\u524d\u8d70\u8fd9\u4e48\u591a\n\n\u82e5\u80fd\u5339\u914d\uff0c\n\n\u4e14\uff0c\u7b2ci+1\u4e2a\u901a\u914d\u7b26\u4e3a'?'\u7684\u8bdd\uff0c\u90a3\u6211\u4eec\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u518d\u5f80\u524d\u8d70\u4e00\u6b65\uff0c\n\n\u4e5f\u5c31\u662f,i+1\u4e0ej+\u4f4d\u7f6e\u53d8\u5316+1\n\n\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u7531\u4e8e\\*\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u6389\u8fd9\u4e2a\u901a\u914d\u7b26\uff0c\u4e5f\u5c31\u662f\u4e0d\u53d8\n\n\u7b49\u7b49\u2026\u2026\n\n\u90a3\\*\u662f\u4e0d\u662f\u5c31\u6ca1\u7528\u4e86\uff1f\n\n\u8bf6\uff0c\u6b64\u8a00\u5dee\u77e3\uff0c\u6211\u4eec\u6bcf\u6b21dp\u4e4b\u524d\uff0c\u90fd\u53ef\u4ee5\u5148\u68c0\u6d4b\u4e00\u4e0b\u5f53\u524d\u4f4d\u7f6e\u7684i\u548cj-1\n\n\u5982\u679c\u4fe9\u80fd\u5339\u914d\u7684\u8bdd\uff0c\u4e14\u5f53\u524d\u901a\u914d\u7b26\u662f\\*\u7684\u8bdd\uff0c\u90a3\u6211\u4eec\u5c31\u5f80\u4e0b\u8d70\u4e00\u6b65\uff0c\u5373if(dp\\[i\\]\\[j-1\\]==true) dp\\[i\\]\\[j\\]=true\n\n\u5f53\u7136\uff0c\u4f60\u4ecej\u5230j+1\u597d\u50cf\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u884c\u7684\u3002\n\n\u90a3\u4e48\u7ecf\u8fc7\u4e00\u8f6e\u9012\u5f52\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770bdp\\[\u901a\u914d\u7b26\u7684\u4e2a\u6570\\]\\[\u6587\u672c\u4e32\u957f\u5ea6\\]\u662f\u4e0d\u662f\u4e3a\u771f\uff0c\n\n\u6765\u5224\u65ad\u8f93\u51faYES\u8fd8\u662fNO\u4e86 \n\n\u8fd9\u6837\u4e5f\u89e3\u51b3\u4e86\u6211\u4eec\u5148\u524d\u6240\u62c5\u5fc3\u7684\u8d85\u65f6\u95ee\u9898\uff0cdp\u6709\u5f88\u591a\u72b6\u6001\u8fbe\u4e0d\u5230\uff0c\u5c31\u4e0d\u62c5\u5fc3\u8d85\u65f6\u7684\u95ee\u9898\u5566\uff01\n\n\u989d\uff0c\u4e0b\u9762\u4ee3\u7801\u4e2d\u7528\u4e86\u70b9\u5c0f\u6280\u5de7\uff0c\u628a\u6a21\u5f0f\u4e32\u672b\u5c3e\u8865\u4e00\u4e2a'?'\uff0c\u7136\u540e\u6587\u672c\u4e32\u672b\u5c3e\u968f\u4fbf\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd9\u6837\u7684\u8bdd\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u3002 \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll unsigned long long\nusing namespace std;\nchar T[100005];\nchar tmp[100005];\nbool dp[15][100005];\nint loc[15];\nll jz[100005];\nll hash[100005][2],base=131;\nint n;\nint cnt=0;\ninline void dohash(char *s,int k)\n{\n\tregister int i,len=strlen(s+1);\n\thash[0][k]=0;\n\tfor(i=1;i<=len;i++)\n\thash[i][k]=hash[i-1][k]*base+(ll)s[i];\n}\ninline ll gethash(int l,int r,int k)\n{\n\tif(r<l) return -1;\n\treturn hash[r][k]-jz[r-l+1]*hash[l-1][k];\n}\nint main()\n{\n\tscanf(\"%s\",T+1);\n\tregister int i,j,k,len,Len=strlen(T+1);\n\tjz[0]=1;\n\tfor(i=1;i<=100000;i++)\n\tjz[i]=jz[i-1]*base;\n\tdohash(T,0);\n\tfor(i=1;i<=Len;i++)\n\tif(T[i]=='?'||T[i]=='*')\n\tloc[++cnt]=i;\n\tLen++;\n\tloc[++cnt]=Len;T[Len]='?';\n\tscanf(\"%d\",&n);\n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",tmp+1);\n\t\tlen=strlen(tmp+1);\n\t\ttmp[++len]='&';\n\t\tdohash(tmp,1);\n\t\tmemset(dp,false,sizeof dp);\n\t\tdp[0][0]=true;\n\t\tfor(i=0;i<=cnt;i++)\n\t\t{\n\t\t\tif(T[loc[i]]=='*')\n\t\t\tfor(j=1;j<=len;j++)\n\t\t\tif(dp[i][j-1]) dp[i][j]=true;\n\t\t\tfor(j=0;j<=len;j++)\n\t\t\t{\n\t\t\t\tif(dp[i][j]&&gethash(j+1,j+(loc[i+1]-1)-(loc[i]+1)+1,1)==\n\t\t\t\tgethash(loc[i]+1,loc[i+1]-1,0))\n\t\t\t\t{\n\t\t\t\t\tif(T[loc[i+1]]=='?')\n\t\t\t\t\tdp[i+1][j+(loc[i+1]-1)-(loc[i]+1)+1+1]=true;\n\t\t\t\t\telse\n\t\t\t\t\tdp[i+1][j+(loc[i+1]-1)-(loc[i]+1)+1]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dp[cnt][len]) puts(\"YES\");\n\t\telse puts(\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523861643,
        "uid": 39675,
        "name": "longgod",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3167 \u3010[CQOI2014]\u901a\u914d\u7b26\u5339\u914d\u3011"
    }
]