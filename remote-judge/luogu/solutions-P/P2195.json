[
    {
        "content": "**Update 2020.08.25**\uff1a\u4fee\u6539\u4e86\u4e00\u4e9b\u9519\u522b\u5b57\u4e0e\u4e0d\u901a\u987a\u7684\u5730\u65b9\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7ec4\u6210\u7684\u68ee\u6797\uff0c\u6709 $q$ \u7ec4\u8be2\u95ee\uff1a  \n\n1. \u7ed9\u51fa\u70b9 $x$\uff0c\u6c42\u70b9 $x$ \u6240\u5728\u7684\u6811\u7684\u76f4\u5f84  \n2. \u7ed9\u51fa\u70b9 $x,y$\uff0c\u8981\u6c42\u5c06 $x,y$ \u6240\u5728\u7684\u6811\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u5e76\u6784\u6210\u4e00\u68f5\u65b0\u7684\u6811\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u65b0\u7684\u6811\u7684\u76f4\u5f84\u6700\u5c0f\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u7528\u6811\u5f62DP\uff08\u6216bfs\uff09\u6c42\u51fa\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u5e76\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u60c5\u51b5  \n\u7ef4\u62a4 $c$ \u6570\u7ec4\uff1a\u5bf9\u4e8e\u6bcf\u68f5\u6811\u7684\u6839\u8282\u70b9 $x$\uff0c$c[x]=$ \u8be5\u6811\u7684\u76f4\u5f84\u957f\u5ea6\n\n\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $2$\uff08\u5982\u679c\u7ed9\u51fa\u7684\u4e24\u70b9\u5728\u540c\u4e00\u68f5\u6811\u5185\u5219\u5ffd\u7565\uff09\uff0c\u5229\u7528\u5e76\u67e5\u96c6\u627e\u51fa\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9 $x,y$\uff0c\u5e76\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u4e24\u68f5\u6811\uff1b\u5408\u5e76\u540e\u7684\u6811\u7684\u76f4\u5f84\u5219\u4e3a $max\\{ \\lceil\\frac{c[x]}{2}\\rceil  + \\lceil\\frac{c[y]}{2}\\rceil +1,c[x],c[y] \\}$\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u539f\u56e0\n\n\u8981\u60f3\u76f4\u5f84\u6700\u77ed\uff0c\u6211\u4eec\u9009\u62e9\u52a0\u8fb9\u7684\u70b9\u4e00\u5b9a\u8981\u5728\u76f4\u5f84\u4e0a\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u70b9\u8d70\u5230\u76f4\u5f84\u8fd8\u8981\u4e00\u6bb5\u8ddd\u79bb\uff0c\u4ece\u800c\u589e\u957f\u4e86\u8def\u5f84\n\n\u90a3\u4e48\u76f4\u5f84\u5c31\u88ab\u9009\u62e9\u7684\u70b9\u5206\u6210\u4e86\u4e24\u6bb5\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u6700\u5c0f\u5316\u8f83\u957f\u7684\u90a3\u4e00\u6bb5\uff0c\u6240\u4ee5\u8981\u8ba9\u9009\u62e9\u7684\u70b9\u5c3d\u91cf\u9760\u8fd1\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f \u76f4\u5f84\u957f\u5ea6\u7684\u4e00\u534a\u5411\u4e0a\u53d6\u6574\n\n**\u6ce8\u610f**\uff1a\u540e\u8fb9\u7684 $c[x],c[y]$ \u4e00\u5b9a\u8981\u52a0\u4e0a\uff0c\u4e0d\u7136\u53ea\u6709\u4e09\u5341\u5206\uff08\u50cf\u6211\u4e00\u6837QwQ\uff09  \n\u56e0\u4e3a\u5728\u5408\u5e76\u540e\u7684\u6811\u91cc\uff0c\u539f\u6765\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u8fd8\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u65b0\u7684\u6811\u7684\u76f4\u5f84\u81f3\u5c11\u662f $max(c[x],c[y])$\n\n\u6bd4\u5982\u8bf4\u4e0b\u56fe\uff1a\n\n![image.png](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDEvMjcvWmROVGdpdjdrcmhDc21jLnBuZw?x-oss-process=image/format,png)\n\n\n$c[x]=4,c[y]=0$  \n\u90a3\u4e48\uff0c\u6309 $\\lceil\\frac{c[x]}{2}\\rceil  + \\lceil\\frac{c[y]}{2}\\rceil +1$ \u7b97\u51fa\u7684\u76f4\u5f84\u5e94\u8be5\u662f $3$\u3002  \n\u800c\u6b63\u786e\u7684\u76f4\u5f84\u8be5\u662f $4$\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u8003\u8651 $c[x],c[y]$\n\n\u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee $1$\uff0c\u8f93\u51fa\u8be5\u6811\u6839\u8282\u70b9\u5bf9\u5e94\u7684 $c$ \u6570\u7ec4\u503c\u5c31\u53ef\u4ee5\u4e86\n\n**AC\u4ee3\u7801**\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int Maxn=300000+10,inf=0x3f3f3f3f;\nint d[Maxn],g[Maxn];\nint f[Maxn],c[Maxn]; // \u8fd9\u91cc\u7684c\u6570\u7ec4\u7684\u542b\u4e49\u4e0d\u662f\u8ddf\u4e0a\u9762\u5bf9\u5e94\u7684\nbool vis[Maxn];\nvector <int> e[Maxn];\nint n,m,q,len;\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nint find(int x)\n{\n\tif(f[x]==x)return x;\n\treturn f[x]=find(f[x]);\n}\nvoid dfs(int x,int fa) // \u6811\u5f62DP\u6c42\u6811\u7684\u76f4\u5f84\n{\n\tint m1=-1,m2=-1;\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t\tint tmp=d[y]+1;\n\t\td[x]=max(d[x],tmp);\n\t\tif(tmp>m1)m2=m1,m1=tmp;\n\t\telse if(tmp>m2)m2=tmp;\n\t}\n\tg[x]=max(max(0,m1+m2),max(m1,m2));\n\tlen=max(len,g[x]);\n}\nvoid calc(int x) // \u5bfb\u627e\u6811\u7684\u76f4\u5f84\n{\n\tlen=0;\n\tdfs(x,0);\n\tc[x]=len;\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read(),m=read(),q=read();\n\t\n\tfor(int i=1;i<=n;++i)\n\tf[i]=i;\n\t\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read();\n\t\tf[find(x)]=find(y);\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\t\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(f[i]!=i || vis[i])continue;\n\t\tcalc(i);\n\t\tvis[i]=1;\n\t}\n\t\n\twhile(q--)\n\t{\n\t\tint opt=read(),x=read();\n\t\tif(opt==1)\n\t\t{\n\t\t\tprintf(\"%d\\n\",c[find(x)]);\n\t\t\tcontinue;\n\t\t}\n\t\tint y=read();\n\t\tx=find(x),y=find(y);\n\t\tif(x==y)continue;\n\t\tint tmp=((c[x]+1)>>1)+((c[y]+1)>>1)+1; //\u4e00\u4e2a\u5de7\u5999\u7684\u5411\u4e0a\u53d6\u6574\u7684\u65b9\u6cd5\n\t\t\n\t\ttmp=max(tmp,max(c[x],c[y]));\n\t\t\n\t\tf[find(x)]=find(y);\n\t\tc[find(x)]=tmp;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1580110500,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6d89\u53ca\u7684\u77e5\u8bc6\u662f\u6811\u7684\u76f4\u5f84\uff08\u6811\u4e0a\u6700\u8fdc\u70b9\u5bf9\uff09+\u5e76\u67e5\u96c6\u2026\u2026\u5f53\u65f6\u662f\u770b\u524d\u4e09\u9898\u592a\u6c34\u52a0\u7684\u2026\u2026\u4e0d\u8fc7\u611f\u89c9\u53ef\u80fd\u653e\u5728\u666e\u53ca\u7684\u8bdd\u4e5f\u8bb8\u96be\u5ea6\u662f\u5927\u4e86\u70b9\u2026\u2026\u5176\u5b9e\u5982\u679c\u77e5\u9053\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u7684\u8bdd\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\u3002\u5f53\u7136\u8fd8\u6709\u4e00\u4e2a\u96be\u70b9\u662f\u6b63\u786e\u5f97\u51fa\u8fde\u63a5\u4e24\u4e2a\u533a\u57df\u65f6\u7684\u6700\u4f18\u7b56\u7565\u53ca\u600e\u4e48\u5f97\u51fa\u6700\u4f18\u89e3\uff0c\u8fd8\u8981\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\u9996\u5148\uff0c\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u6765\u52a8\u6001\u5408\u5e76+\u7ef4\u62a4\u533a\u57df\u4fe1\u606f\u3002\u7136\u540e\u662f\u8981\u8f93\u51fa\u533a\u57df\u4e2d\u7684\u6700\u957f\u8def\u5f84\u2026\u2026\u5408\u5e76\u7684\u65f6\u5019\u4e5f\u8981\u7ef4\u62a4\u6700\u957f\u8def\uff0c\u4f7f\u5f97\u5176\u5408\u5e76\u540e\u662f\u6700\u77ed\u7684\uff0c\u90a3\u4e48\u5bb9\u6613\u60f3\u5230\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u533a\u57df\u7684\u76f4\u5f84\u2026\u2026\uff08\u5176\u5b9e\u5c31\u662f\u6811\u7684\u76f4\u5f84\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u65e0\u73af\uff09\uff0c\u7136\u540e\u5408\u5e76\u7684\u65f6\u5019\u56e0\u4e3a\u8981\u6c42\u65b0\u7684\u533a\u57df\u7684\u6700\u957f\u8def\u6700\u77ed\uff0c\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u662f\u5b83\u5230\u5176\u4ed6\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u6211\u4eec\u5408\u5e76\u76f4\u5f84\u662f\u5404\u9009\u4e00\u4e2a\u6700\u8fdc\u8ddd\u79bb\u6700\u5c0f\u7684\u70b9\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\uff0c\u8fd9\u4e2a\u65b0\u7684\u6700\u957f\u8def\u4e00\u5b9a\u662fmax((path[y]+1)/2+(path[x]+1)/2+1,path[x],path[y])\u3002\uff08\u5177\u4f53\u53ef\u4ee5\u81ea\u5df1\u641e\u4e2a\u6837\u4f8b\u6a21\u62df\u6a21\u62df\u5c31\u80fd\u7406\u89e3\u4e86\uff09\n\n\u8fd8\u6709\u6c42\u6811\u7684\u76f4\u5f84\u7684\u8bdd\u4e24\u6b21BFS\u6216\u8005DFS\u5373\u53ef\uff0c\u6211\u662f\u7528\u7684BFS\u3002\u5177\u4f53\u8fc7\u7a0b\u5c31\u662f\u5148\u9009\u53d6\u4e00\u70b9u\uff0c\u8dd1\u51fau\u7684\u6700\u8fdc\u70b9yuan\uff0c\u7136\u540e\u4eceyuan\u8dd1\u51fayuan\u7684\u6700\u8fdc\u70b9y2\uff0c\u8fd9\u65f6\u5019y2\u548cyuan\u4e4b\u95f4\u7684\u8ddd\u79bb\u5373\u4e3a\u6811\u7684\u76f4\u5f84\u3002\u8bc1\u660e\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u4e86\uff0c\u5176\u5b9e\u633a\u663e\u7136\u7684\u2026\u2026\n\n\n  \n  \n```cpp\n#include<iostream>  \n#include<cstring>  \n#include<cstdio>  \n#include<algorithm>  \n#include<vector>  \n#include<string>  \n#include<set>  \n#include<queue>  \n#include<stack>  \n#include<map>  \n#include<cmath>  \n#include<cstdlib>  \n#define ll long long  \n#define maxn 600010  \n#define inf 1000000000  \n#define linf (1LL<<50)  \nusing namespace std;  \ninline ll read()  \n{  \n    ll x=0,f=1;char ch=getchar();  \n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}  \n    while(ch>='0'&&ch<='9'){x*=10;x+=ch-'0';ch=getchar();}  \n    return x*f;  \n}  \ninline void read(char *s,int &ts)  \n{  \n    char x=getchar();  \n    while(!(x>='a'&&x<='z'))x=getchar();  \n    while(x>='a'&&x<='z')s[++ts]=x,x=getchar();  \n}  \nint n,m,que,tot=0;  \nint q[maxn];  \nstruct data{  \n    int to,next;  \n}e[2*maxn];  \nint head[maxn];  \nint path[maxn];  \nint d[maxn];  \nint flag[maxn];  \nint f[maxn];  \nvoid line(int a,int b)  \n{  \n    tot++;  \n    e[tot].to=b;  \n    e[tot].next=head[a];  \n    head[a]=tot;  \n}  \nint get(int x)  \n{   \n    return(x==f[x])?x:f[x]=get(f[x]);  \n}  \nint find(int x)  \n{  \n    d[x]=0;  \n    flag[x]=x;  \n    q[q[0]=1]=x;  \n    int yuan=x;  \n    for(int i=1;i<=q[0];i++)  \n    {  \n        int y=q[i];  \n        for(int u=head[y];u;u=e[u].next)  \n        if(flag[e[u].to]!=x)  \n        {  \n            flag[e[u].to]=x;  \n            q[++q[0]]=e[u].to;  \n            d[e[u].to]=d[y]+1;  \n            if(d[e[u].to]>d[yuan])   \n            yuan=e[u].to;  \n        }  \n    }  \n    int y2=yuan;  \n    d[yuan]=0;  \n    q[q[0]=1]=yuan;  \n    flag[yuan]=yuan;  \n    for(int i=1;i<=q[0];i++)  \n    {  \n        int y=q[i];  \n        for(int u=head[y];u;u=e[u].next)  \n        if(flag[e[u].to]!=yuan)  \n        {  \n            flag[e[u].to]=yuan;  \n            q[++q[0]]=e[u].to;  \n            d[e[u].to]=d[y]+1;  \n            if(d[e[u].to]>d[y2])  \n            y2=e[u].to;  \n        }  \n    }  \n    return d[y2];  \n}  \nint main()  \n{  \n    scanf(\"%d%d%d\",&n,&m,&que);  \n    for(int i=1;i<=n;i++)  \n    f[i]=i;  \n    for(int i=1;i<=m;i++)  \n    {  \n        int x,y;  \n        scanf(\"%d%d\",&x,&y);  \n        line(x,y);  \n        line(y,x);  \n        if(get(x)!=get(y))  \n        f[get(x)]=get(y);  \n    }  \n    for(int i=1;i<=n;i++)  \n    if(i==get(i)) path[i]=find(i);  \n    for(int i=1;i<=que;i++)  \n    {  \n        int pos;  \n        scanf(\"%d\",&pos);  \n        if(pos==1)  \n        {  \n            int x;  \n            scanf(\"%d\",&x);  \n            printf(\"%d\\n\",path[get(x)]);  \n        }  \n        else  \n        {  \n            int x,y;  \n            scanf(\"%d%d\",&x,&y);  \n            x=get(x);y=get(y);  \n            if(x==y) continue;  \n            int u1=path[x];  \n            int u2=path[y];  \n            f[x]=y;  \n            path[y]=(u1+1)/2+(u2+1)/2+1;  \n            if(path[y]<u1) path[y]=u1;  \n            if(path[y]<u2) path[y]=u2;  \n        }  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1412435109,
        "uid": 270,
        "name": "caozy623",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "\u597d\u9898\u554a\u2026\u2026\n\n\u53c8\u662f\u4e00\u9053\u8ba9\u4eba\u5934\u79c3\u7684\u597d\u9898\u554a\u2026\u2026\n\n\u771f\u662f\u6109\u60a6\u2026\u2026\n\n\u5c45\u7136\u5361memset\u2026\u2026\n\n\u770b\u5b8c\u8bb0\u5f97\u70b9\u8d5e\u554a\n\n#### \u601d\u8def\n\n\u8fd9\u9053\u9898\u5149\u8bfb\u9898\u5c31\u8bfb\u4e86\u534a\u5929\u2026\u2026\n\n~~My vegetable has exploded\u2026\u2026~~\u54b3\u54b3\u2026\u2026\u770b\u9898\n\n\u5148\u770b\u6211\u7684\u8270\u8f9b\u5386\u7a0b\uff1a\n\n[\u5386\u7a0b1](https://img.langlangago.xyz/2019/06/25/5d11c47510448.png)\n\n[\u5386\u7a0b2](https://img.langlangago.xyz/2019/06/25/5d11c4752112f.png)\n\n[\u5386\u7a0b3](https://img.langlangago.xyz/2019/06/25/5d11c4752a4ef.png)\n\n[\u5386\u7a0b4](https://img.langlangago.xyz/2019/06/25/5d11c47527b57.png)\n\n\u6811\u7684\u76f4\u5f84\u5927\u5bb6\u90fd\u77e5\u9053\u5427\u2026\u2026\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://big-news.github.io/2019/04/11/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/)\u3002\n\n\u8fd9\u91cc\uff0c\u6211\u7528\u7684\u662f\u8dd1\u4e24\u904d\u5927\u6cd5\u5e08\uff08$dfs$\uff09\u6c42\u76f4\u5f84\u3002\n\n\u9898\u76ee\u4e2d\u6240\u8bf4\u7684\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f\u6811\u7684\u5408\u5e76\uff0c\u90a3\u4e48\uff0c\u5f88\u660e\u663e\uff0c\u6211\u4eec\u8981\u7528\u5e76\u67e5\u96c6\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6839\u636e\u5df2\u77e5\u7684\u8fb9\uff0c\u6765\u5c06\u5df2\u77e5\u7684\u6240\u6709\u6811\uff08**\u6ce8\u610f\u96c6\u5408\u7684\u5408\u5e76**\uff09\u90fd\u5efa\u597d\u3002\u7136\u540e\u5bf9\u4e8e\u8fd9\u6bcf\u4e2a\u6811\uff0c\u90fd\u5355\u72ec\u8dd1\u4e24\u904d\u5927\u6cd5\u5e08\uff0c\u6c42\u51fa\u8fd9\u68f5\u6811\uff08**\u8fd9\u4e2a\u96c6\u5408**\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\uff08\u4e5f\u5c31\u662f\u7b2c\u4e00\u95ee\uff09\u3002\n\n\u54e6\u5bf9\uff0c\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u5728\u8dd1\u8fd9\u51e0\u904d\u5927\u6cd5\u5e08\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u7528$memset$\u521d\u59cb\u5316$vis$\u6570\u7ec4\uff0c\u76f4\u63a5\u5728\u5927\u6cd5\u5e08$return$\u524d$vis[x]=false$\u5373\u53ef\uff0c\u5426\u5219\u2026\u2026\u8bf7\u770b\u5386\u7a0b3\u3002\n\n\u7136\u540e\uff0c\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5f53$opt=1$\u65f6\uff0c\u76f4\u63a5\u8f93\u51fax\u6240\u5728\u7684\u6811\uff08\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\uff08$dis[find(x)]$\uff09\u5373\u53ef\u3002\n\n\u5f53$opt=2$\u65f6\uff0c\u5c06x\u548cy\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76($merge(x,y)$)\uff0c\u66f4\u65b0\u5408\u5e76\u540e\u7684\u6811\uff08\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n\u600e\u4e48\u66f4\u65b0\u5462\uff1f\u8fd9\u5c31\u662f\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\u6240\u5728\u4e86\u5427\u2026\u2026~~\u4e5f\u8bb8~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u4e00\u4e2a\u70b9\u8d8a\u9760\u8fd1\u4e00\u4e2a\u94fe\uff08\u76f4\u5f84\uff09\u7684\u4e2d\u70b9\uff0c\u8fd9\u4e2a\u70b9\u6240\u80fd\u8fbe\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u6700\u77ed\u3002\n\n\u6765\u4e2a\u56febb\u4e00\u4e0b\uff1a\n\n![graph.png](https://img.langlangago.xyz/2019/06/25/5d11ce16eb380.png)\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u8be5\u94fe\u4e2d\uff0c\u4e24\u7aef\u4e3a$0$\u548c$4$\u3002\n\n\u6211\u4eec\u5047\u5982\u53d6$0$\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48$0$\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u4e3a$0$\u5230$4$\u7684\u8ddd\u79bb\uff0c\u4e3a$4$.\n\n\u6211\u4eec\u5047\u5982\u53d6\u6700\u9760\u8fd1\u8be5\u94fe\u7684\u4e2d\u70b9\u7684$2$\uff08\u4e5f\u5c31\u662f\u4e2d\u70b9\uff09\uff0c\u90a3\u4e48$2$\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u4e3a$2$\u5230$4$\u7684\u8ddd\u79bb\uff0c\u4e3a$2$\u3002\u4e5f\u5c31\u662f\u8fd9\u4e2a\u70b9\u6240\u80fd\u8fbe\u5230\u4e24\u7aef\u7684\u6700\u957f\u8ddd\u79bb\u6700\u77ed\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8fde\u63a5\u8fd9\u4e24\u68f5\u6811\u4e2d\u7684\u76f4\u5f84\u4e0a\u6700\u9760\u8fd1\u4e2d\u70b9\u7684\u4e24\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u201c\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\u6700\u5c0f\u201d\u3002\n\n\u4e5f\u5c31\u662f$dis[yy]=max(max((dis[xx]+1)/2+(dis[yy]+1)/2+1,dis[xx]),dis[yy]);$\n\n$xx$\u4e3a$find(x)$,$yy$\u4e3a$find(y)$\n\n#### code\n\n```c++\n#include<cstdio>\n#include<cstring>\n\n#define in inline\n#define re register\n#define mian int main()\n\nconst int maxn=3e6+10;\n\nstruct edge{\n\tint to,next;\n}map[maxn];\n\nint n,m,q,fa[maxn],maxx,dis[maxn],st;\nint cnt,head[maxn];\nbool vis[maxn],vis2[maxn];\n\nin int read(){\n    char ch=getchar();int x=0,f=1;\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\nin void add(int x,int y){\n\tmap[++cnt].to=y;\n\tmap[cnt].next=head[x];\n\thead[x]=cnt;\n}\n\nin int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nin void merge(int x,int y){\n\tint xx=find(x),yy=find(y);\n\tfa[xx]=yy;\n}\n\nin void dfs(int x,int val){\n\tif(maxx<val) maxx=val,st=x;\n\tfor(int i=head[x];i;i=map[i].next){\n\t\tint y=map[i].to;\n\t\tif(!vis[y]){\n\t\t\tvis[y]=true;\n\t\t\tdfs(y,val+1);\n\t\t}\n\t}\n\tvis[x]=false;//TLE\u7684\u60e8\u75db\u6559\u8bad\n}\n\nin void dfs2(int x,int val){\n\tif(maxx<val) maxx=val;\n\tfor(int i=head[x];i;i=map[i].next){\n\t\tint y=map[i].to;\n\t\tif(!vis[y]){\n\t\t\tvis[y]=true;\n\t\t\tdfs2(y,val+1);\n\t\t}\n\t}\n\tvis[x]=false;//TLE\u7684\u60e8\u75db\u6559\u8bad\n}\n\nin int max(int a,int b){return a>b?a:b;}\n\nmian{\n\tn=read(),m=read(),q=read();\n\tfor(re int i=1;i<=n;i++) fa[i]=i;//\u521d\u59cb\u5316 \n\tfor(re int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t\tmerge(x,y);\n\t}\n\tfor(re int i=1;i<=n;i++){\n\t\tint x=find(i);\n\t\tif(vis2[x]) continue;\n\t\tmaxx=-1;\n\t\t//memset(vis,false,sizeof(vis));->TLE\u7684\u7f6a\u9b41\u7978\u9996\n\t\tvis[x]=true;\n\t\tdfs(x,0);//\u5927\u6cd5\u5e081\n\t\tmaxx=-1;\n\t\t//memset(vis,false,sizeof(vis));->TLE\u7684\u7f6a\u9b41\u7978\u9996\n\t\tvis[st]=true;\n\t\tdfs2(st,0);//\u5927\u6cd5\u5e082\n\t\tvis2[x]=true;\n\t\tdis[x]=maxx;//\u5c06\u8fd9\u68f5\u6811\uff08\u8fd9\u4e2a\u96c6\u5408\uff09\u6240\u62e5\u6709\u7684\u76f4\u5f84\u8bb0\u5f55\u4e0b\u6765\n\t}\n\tfor(re int i=1;i<=q;i++){\n\t\tint opt=read(),x=read(),y;\n\t\tif(opt==1) printf(\"%d\\n\",dis[find(x)]);\n\t\telse{\n\t\t\ty=read();int xx=find(x),yy=find(y);\n\t\t\tif(xx==yy) continue;\n\t\t\tdis[yy]=max(max((dis[xx]+1)/2+(dis[yy]+1)/2+1,dis[xx]),dis[yy]);\n\t\t\tmerge(x,y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u66f4\u597d\u7684\u4f53\u9a8c\uff1ahttps://www.langlangago.xyz/index.php/archives/76/\n",
        "postTime": 1561448877,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "## \u9898\u610f\n>  \u7ed9\u5b9a\u4e0d\u4e00\u5b9a\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u4e00\u68f5\u65e0\u6839\u6811\uff0c\u8fdb\u884c\u64cd\u4f5c\uff1a\n> 1. `1 x` \u67e5\u8be2 $x$ \u6240\u5728\u8fde\u901a\u5757\u7684\u76f4\u5f84\n> 2. `2 x y` \u3010$x,y$ **\u8054\u901a\u5219\u5ffd\u7565**\u3011\u5728 $x,y$ \u6240\u5728\u8fde\u901a\u5757\u4e2d\u5404\u53d6\u4efb\u4e00\u70b9\u5e76\u5728\u4e24\u70b9\u95f4\u8fde\u8fb9\uff0c\u4f7f\u5f97\u5408\u5e76\u540e\u7684\u6811\u76f4\u5f84\u6700\u77ed\n>\n> $n,m,q\\leq3\\cdot10^5$\n\n## \u5206\u6790\n\u60f3\u5230\u5408\u5e76\u65f6\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\uff0c\u90a3\u4e48\uff1a\n\n\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\uff1a`find(),unite()`\n\n**\u64cd\u4f5c\u5e8f\u5217\u5f00\u59cb\u540e**$^*$\uff0c\u8bb0 $F_{find(x)}$ \u8868\u793a $x$ \u7684\u8fde\u901a\u5757\u5185\u76ee\u524d\u7684\u76f4\u5f84\u3002\uff08$*$\uff1a\u6307\u5728\u9884\u5904\u7406\u90fd\u505a\u5b8c\uff0c\u73b0\u5728\u51c6\u5907 `q--` \u56de\u7b54\u95ee\u9898\u7684\u65f6\u5019\u4e4b\u540e\uff09\n1. \u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u76f4\u63a5\u67e5\u8be2 $F_{find(x)}$ \u8f93\u51fa\u5373\u53ef\n2. \u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u90a3\u4e48\u8bb0 $rx,ry$ \u4e3a $x,y$ \u6240\u5728\u5b50\u96c6\u7684\u5e76\u67e5\u96c6\u6839\uff0c\u5219\uff1a\u9996\u5148\uff0c\u600e\u6837\u8ba9\u4e00\u68f5\u65e0\u6839\u6811\u7684\u6df1\u5ea6\u6700\u5c0f\uff1a\u8ba9\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u76f4\u5f84\u957f\u4e3a\u5947\u6570\u5c31\u662f\u4e2d\u95f4\u4e24\u4e2a\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff09\u6210\u4e3a\u6839\uff0c\u5728\u6b64\u7b80\u79f0\u6700\u5c0f\u6839\uff1b\u5408\u5e76\u540e\u7684\u6811\u7684\u76f4\u5f84\u7684\u6700\u5c0f\u65b9\u6848\u4e3a\u5e76\u67e5\u96c6 $rx,ry$ \u7684\u6700\u5c0f\u6839\u4e4b\u95f4\u8fde\u8fb9\uff0c\u6b64\u65f6\u76f4\u5f84\u4e3a $\\max\\{D_{rx},D_{ry},D_{rx}'+D_{ry}'+1\\}$\uff0c\u5176\u4e2d\uff0c1\u4e3a\u6240\u8fde\u65b0\u8fb9\uff0c\u6613\u7b97 $D_{rx}'=\\dfrac{D_{rx}+1}{2},D_{ry}'=\\dfrac{D_{ry}+1}{2}$\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8f93\u5165\u65f6\u7684\u521d\u59cb\u8fde\u8fb9\u6211\u4eec\u540c\u6837\u9700\u8981\u5c06\u4e24\u4e2a\u8fde\u901a\u5757\uff08\u5e76\u67e5\u96c6\uff09\u5408\u5e76\uff0c\u4f46\u6b64\u65f6\u5e76\u975e\u7b56\u7565\u5408\u5e76\uff0c\u800c\u66b4\u529b\u5408\u5e76\u6211\u4eec\u5c31\u9700\u8981\u76f4\u63a5\u8fde\u8fb9\u3002\u5728\u6240\u6709\u8fb9\u8f93\u5165\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u5e76\u67fb\u5b50\u96c6\u7684\u6839 $rt$ \u6240\u5728\u7684\u8fde\u901a\u5757\u6c42\u4e00\u4e2a\u76f4\u5f84\u4f5c\u4e3a $F_{rt}$ \u7684\u521d\u59cb\u503c\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=3e5+5;\nint n,m,q,u,l;\nint fa[N],f[N];\nvector<int>G[N];\nvoid findfur(int x,int fa,int s){\n\tif(s>=l)l=s,u=x;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint y=G[x][i];\n\t\tif(y^fa)findfur(y,x,s+1);\n\t}\n}\nint gd(int st){\n\tl=0,findfur(st,0,0);\n\tl=0,findfur(u,0,0);\n\treturn l;\n}\nint find(int x){return x==fa[x]?x:fa[x]=find(fa[x]);};\nvoid con(int u,int v){G[u].push_back(v),G[v].push_back(u);}\nvoid un(int u,int v){\n    con(u,v);\n    fa[find(v)]=find(u);\n}\nint main()\n{\n    cin>>n>>m>>q;\n    int u,v,o,x,y;\n    for(int i=1;i<=n;i++)fa[i]=i;\n    for(int i=1;i<=m;i++){\n        cin>>u>>v;\n        un(u,v);\n    }\n    for(int i=1;i<=n;i++)if(i==fa[i])f[i]=gd(i);\n    while(q--){\n        cin>>o;\n        if(o==1){\n            cin>>x;\n            cout<<f[find(x)]<<endl;\n        }else{\n            cin>>x>>y;\n            x=find(x),y=find(y);\n            if(x==y)continue;\n            f[x]=max(max(f[x],f[y]),(f[x]+1)/2+(f[y]+1)/2+1);\n            fa[find(y)]=find(x);\n        }\n    }\n}\n```",
        "postTime": 1625060663,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P2195 HXY\u9020\u516c\u56ed"
    },
    {
        "content": "[Double\uff01](https://www.luogu.com.cn/problem/CF455C)\n\n### Description\n\n\u8981\u6c42\u5b8c\u6210\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u67e5\u8be2\u4e00\u4e2a\u70b9\u6240\u5728\u6811\u7684\u76f4\u5f84\uff1b\n- \u6dfb\u52a0\u4e00\u6761\u8fb9\u5408\u5e76\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u6811\uff0c\u8981\u6c42\u5408\u5e76\u540e\u65b0\u6811\u7684\u76f4\u5f84\u6700\u5c0f\u3002\n\n### Solution\n\n\u663e\u7136\u6211\u4eec\u65e0\u6cd5\u6bcf\u6b21\u771f\u7684\u5408\u5e76\u4e24\u68f5\u6811\u518d\u91cd\u65b0\u8dd1\u4e00\u904d\u76f4\u5f84\uff0c\u90a3\u6211\u4eec\u770b\u4e00\u4e0b\u6811\u7684\u5408\u5e76\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u6027\u8d28\u3002\n\n\u901a\u8fc7\u624b\u73a9\u51e0\u4e2a\u7b80\u5355\u7684\u6837\u4f8b\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u76f4\u5f84\u4e3a $x$ \u7684\u6811\u4e0e\u76f4\u5f84\u4e3a $y$ \u7684\u6811\u5408\u5e76\u540e\u5f62\u6210\u7684\u65b0\u6811\u76f4\u5f84\u4e3a $\\max\\{x,y,\\lceil \\frac{x}{2} \\rceil+\\lceil \\frac{y}{2}\\rceil+1\\}$\u3002\n\n\u56e0\u4e3a\u8981\u4fdd\u8bc1\u65b0\u6811\u76f4\u5f84\u6700\u5c0f\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4f1a\u8fde\u63a5\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\n\n\u82e5\u4e24\u68f5\u6811\u7684\u76f4\u5f84 $x>y$\uff0c\u90a3\u6211\u4eec\u8fde\u63a5\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b0\u6811\u7684\u76f4\u5f84\u5927\u5c0f\u4ecd\u7136\u662f $x$\u3002$x<y$ \u65f6\u540c\u7406\u4e3a $y$\u3002\n\n\u82e5\u4e24\u68f5\u6811\u7684\u76f4\u5f84 $x=y$\uff0c\u90a3\u6211\u4eec\u8fde\u63a5\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b0\u6811\u7684\u76f4\u5f84\u5927\u5c0f\u4e3a\n$\\lceil \\frac{x}{2} \\rceil+\\lceil \\frac{y}{2}\\rceil+1$\u3002\n\n\u56e0\u4e3a\u5728\u957f\u5ea6\u4e0d\u540c\u65f6\u524d\u8005\u5927\u4e8e\u540e\u8005\uff0c\u957f\u5ea6\u76f8\u540c\u65f6\u540e\u8005\u5927\u4e8e\u524d\u8005\u3002\u6240\u4ee5\u4e09\u8005\u76f4\u63a5\u53bb\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6211\u4eec\u5148\u6c42\u51fa\u521d\u59cb\u7684\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u5408\u5e76\u4e0e\u5224\u65ad\u64cd\u4f5c\u9760\u5e76\u67e5\u96c6\u5b9e\u73b0\uff0c\u7136\u540e\u66f4\u65b0\u6240\u5728\u6811\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n\n```cpp\nint n,m,q,tot,len,sec;\nint head[maxn],fa[maxn];\nint ans[maxn],Dis[maxn];\nstruct edge{int fr,to,nxt;}e[maxn<<1];\n\nvoid add(int fr,int to){\n  e[++tot]=(edge){fr,to,head[fr]};\n  head[fr]=tot;\n}\n\nint findf(int x){\n  return fa[x]^x?fa[x]=findf(fa[x]):x;\n}\n\nvoid dfs(int u,int fat){\n  Dis[u]=Dis[fat]+1;\n  if(Dis[u]>len)len=Dis[u],sec=u;\n  for(int i=head[u];i;i=e[i].nxt){\n    int to=e[i].to;\n    if(to==fat) continue;\n    dfs(to,u);\n  }\n}\n\nint main(){\n  n=read();m=read();q=read();\n  for(int i=1;i<=n;i++) fa[i]=i;\n  for(int i=1,fr,to,dis;i<=m;i++){\n    fr=read();to=read();\n    add(fr,to);add(to,fr);\n    fr=findf(fr),to=findf(to);\n    if(fr!=to) fa[to]=fr;\n  }\n  for(int i=1;i<=n;i++){\n    if(findf(i)!=i) continue;\n    dfs(i,0);len=0;dfs(sec,0);\n    ans[i]=len-1;len=0;sec=0;\n  }\n  for(int i=1,opt,x,y;i<=q;i++){\n    opt=read();x=read();\n    if(opt==1) printf(\"%d\\n\",ans[findf(x)]);\n    else{\n      y=read();x=findf(x);y=findf(y);if(x==y) continue;fa[y]=x;\n      ans[x]=max(max(ans[x],ans[y]),(ans[x]+1)/2+(ans[y]+1)/2+1);\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1628234100,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u9898\u662f\u82e5\u5e72\u4e2a\u6811\u3002\u7279\u5f81\u5f88\u660e\u663e\uff1a1.\u8def\u5f84\u65e0\u73af 2.$m<n$ 3.\u5df2\u7ecf\u8054\u901a\u7684\u70b9\u4e0d\u518d\u5904\u7406\u3002\n\n\u7136\u540e\uff0c\u9898\u76ee\u91cc\u57fa\u672c\u6311\u660e\u4e86\u8981\u7ef4\u62a4\u6811\u7684\u76f4\u5f84\u3002\u5148\u6446\u4e0a\u6811\u7684\u76f4\u5f84\u7684\u6811\u5f62DP\u7248\u672c\uff08\u611f\u89c9\u6ca1\u4ec0\u4e48\u4eba\u5199\u8fd9\u79cd\u56e0\u800c\u653e\u4e0a\u4ee3\u7801\uff09\u3002\u8fd9\u6837\u4e3b\u51fd\u6570\u4e2d\u5c31\u6bd4\u8f83\u7b80\u6d01\u3002\n\n```cpp\n//\u672c\u8d28\u5c31\u662f\u7ef4\u62a4\u6700\u957f\u548c\u6b21\u957f\u5ef6\u7533\u51fa\u53bb\u7684\u8ddd\u79bb\u3002\nvoid dfs(int place,int fa)\n{\n    d1[place] = d2[place] = 0;//d1\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5ef6\u7533\u51fa\u53bb\u7684\u6700\u957f\u8def\u5f84\uff0cd2\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5ef6\u7533\u51fa\u53bb\u6b21\u957f\u7684\u8def\u5f84\u3002\n    for (int i = headers[place]; i;i=que[i].next)\n        if(que[i].to!=fa)\n        {\n            dfs(que[i].to, place);\n            int now = d1[que[i].to] + 1;//\u6ce8\u610f+1\uff1a\u56e0\u4e3a\u4ece\u5b50\u8282\u70b9\u5230\u8be5\u8282\u70b9\u8fd8\u67091\u7684\u8def\u5f84\u957f\n            //\u6ce8\u610f\uff1a\u4e00\u4e2a\u513f\u5b50\u53ea\u80fd\u66f4\u65b0\u4e00\u4e2a\u503c\uff0c\u4e0d\u80fd\u4e24\u4e2a\u540c\u65f6\u53d8\u6210\u5168\u65b0\u7684\u503c\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u4e00\u4e2a\u513f\u5b50\u5ef6\u7533\u51fa\u53bb\u7684\u88ab\u8ba1\u7b97\u4e24\u6b21\u5bfc\u81f4\u9519\u8bef\n            if (now > d1[place])//now\u6bd4\u6700\u957f\u7684\u8fd8\u957f\n            {\n                d2[place] = d1[place];//\u79fb\u52a8\u4f4d\u7f6e\uff0c\u66f4\u65b0\u6b21\u957f\n                d1[place] = now;//\u66f4\u65b0\u6700\u957f\n            }\n            else\n                if (now > d2[place])//\u6bd4\u6b21\u957f\u957f\n                    d2[place] = now;//\u66f4\u65b0\u6b21\u957f\n        }\n    diameter = max(diameter, d1[place] + d2[place]);//diameter\u6307\u6811\u7684\u76f4\u5f84\u3002\u663e\u7136\uff0c\u6811\u7684\u76f4\u5f84\u53ef\u4ee5\u7531\u5b83\u7684\u4e0d\u540c\u513f\u5b50\u5ef6\u7533\u51fa\u53bb\u7684\u957f\u5ea6\u7684\u548c\u6765\u66f4\u65b0\u3002\u8fd9\u79cd\u8def\u5f84\u624d\u662f\u5fc5\u7136\u7ecf\u8fc7place\u8282\u70b9\n}\n```\n\n\u4e0a\u8ff0\u64cd\u4f5c\u8981\u5bf9\u6bcf\u4e2a\u6811\u8fdb\u884c\u3002\n\n\u7136\u540e\u770b\u4e0b\u9762\u7684\u64cd\u4f5c\u30021\u662f\u67e5\u8be2\uff0c\u8fd9\u6ca1\u8bdd\u8bf4\uff0c\u76f4\u63a5\u6253\u5370\u5c31\u597d\uff0c\u7edf\u8ba1\u4e0b\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\u7136\u540e\u5b58\u8d77\u6765\u3002\u9ebb\u70e6\u7684\u662f2\uff0c\u5408\u5e76\u64cd\u4f5c\u3002\u4f46\u662f\u8fd9\u91cc\u53ea\u6709\u5408\u5e76\u6ca1\u6709\u62c6\u5206\u64cd\u4f5c\u3002**\u5e76\u67e5\u96c6\u7684\u7528\u5904\u5c31\u662f\u7ef4\u62a4\u4e0d\u65ad\u5408\u5e76\u7684\u4e00\u4e9b\u8282\u70b9\u7684\u53ef\u52a0\u548c\u4fe1\u606f**\uff0c\u56e0\u6b64\u8fd9\u91cc\u5e94\u8be5\u4f7f\u7528\u5e76\u67e5\u96c6\u3002\n\n\u6709\u4e86\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u5224\u65ad\u8fd9\u4e2a\u70b9\u8d70\u8fc7\u6ca1\u8d70\u8fc7\u90fd\u53d8\u5f97\u65b9\u4fbf\u8d77\u6765\uff1a\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u6811\u7684\u76f4\u5f84\u7684\u65f6\u5019\u591a\u52a0\u4e00\u53e5\uff1a\n\n```cpp\n\tfather[place] = fa;\n```\n\u5c31\u884c\u3002\u521d\u59cb\u5316\u7684\u65f6\u5019\u8fde\u90a3\u4e2a\u5faa\u73af\u90fd\u7701\u4e86\u3002\u6ca1\u8bbf\u95ee\u7684\u8282\u70b9\u7684father\u4e3a0\uff0c\u800c\u8d70\u8fc7\u7684\u8282\u70b9father\u7684\u7956\u5148\u5fc5\u4e3a\u6839\u8282\u70b9\u3002\n\n\u8fd9\u662f\u5904\u7406\u540e\u7684\u5e76\u67e5\u96c6\u521d\u59cb\u5316\u90e8\u5206\uff1a\n\n```cpp\n    for (int i = 1; i <= n; i++)\n        if(!father[i])//\u8fd8\u6ca1\u8bbf\u95ee\u8fc7\n            dfs(i, i);//\u6ce8\u610f\uff1a\u6b64\u65f6\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u53ef\u8d4b\u4e3a-1\uff0c\u56e0\u4e3a\u8fd9\u662f\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\n```\n\n\u7136\u540e\u5c31\u662f\u5408\u5e76\u64cd\u4f5c\u3002\u6211\u4eec\u5982\u4f55\u6c42\u4e24\u4e2a\u6811\u5408\u5e76\u540e\u7684\u6700\u5c0f\u6811\u7684\u76f4\u5f84\u5462\uff1f\n\n\u8fd9\u91cc\u5176\u5b9e\u662f\u4e00\u4e2a\u8d2a\u5fc3\uff0c\u7ed3\u8bba\u5c31\u662f**\u5c3d\u91cf\u53d6\u76f4\u5f84\u4e0a\u7684\u4e2d\u70b9**\u3002\u51e1\u8d2a\u5fc3\uff0c\u5fc5\u8bc1\u660e\u3002\u56e0\u800c\u5728\u4e0b\u9762\u8fdb\u884c\u8bc1\u660e\uff1a\n\n\u5728\u6811\u4e0a\u64cd\u4f5c\u7684\u65f6\u5019\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u753b\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\u6765\u8fdb\u884c\u5206\u6790\uff1a\n\n[![sjD1A0.png](https://s3.ax1x.com/2021/01/26/sjD1A0.png)](https://imgchr.com/i/sjD1A0)\n\n\u8bb01-4\u4e3a\u6811\u7684\u76f4\u5f84\uff0c\u4e0d\u59a8\u4ee4$dis[1][3]<dis[3][4]$\u3002\u540c\u65f6\uff0c1\uff0c2\uff0c4\u53ea\u662f\u53f6\u5b50\u8282\u70b9\uff0c3\u4e3a\u8fd9\u4e24\u4e2a\u8fb9\u7684\u4ea4\u6c47\u70b9\u30021-3\uff0c3-4\uff0c2-3\u4e2d\u8fd8\u6709\u5927\u91cf\u7684\u8282\u70b9\u672a\u753b\u51fa\u3002\u90a3\u4e48\u7531\u5b9a\u4e49\uff0c$dis[2][3]<dis[1][3]<dis[3][4]$\u3002\n\n\u6211\u4eec\u5728\u5408\u5e76\u7684\u65f6\u5019\u53ea\u7528\u8003\u5bdf\u8fd9\u4e00\u8fb9\u7684\u60c5\u51b5\uff0c\u53e6\u4e00\u8fb9\u7684\u60c5\u51b5\u548c\u8fd9\u8fb9\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u9700\u8981\u8d2a\u5fc3\u7684\uff0c\u662f\u8ba9\u8fd9\u4e2a\u70b9\u5230\u6811\u4e0a\u5176\u4ed6\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u6700\u5c0f\u3002\n\n\u8003\u8651\u5f85\u94fe\u63a5\u7684\u70b9$x$\u7684\u4f4d\u7f6e\uff0c\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\u57281-3\u4e0a\uff0c\u57283-4\u4e0a\uff0c\u57282-3\u4e0a\u3002\n\n\u5982\u679c\u57282-3\u4e0a\uff0c\u90a3\u4e48\u6700\u957f\u8ddd\u79bb\u5fc5\u4f1a\u5927\u4e8e$dis[3][4]$\u2014\u2014\u8003\u86514\u7684\u8d21\u732e\u3002\n\n\u5982\u679c\u57281-3\u4e0a\uff0c\u90a3\u4e48\u6700\u957f\u8ddd\u79bb\u4e5f\u4f1a\u5927\u4e8e$dis[3][4]$\u2014\u2014\u8003\u86514\u7684\u8d21\u732e\u3002\n\n\u5982\u679c\u57283-4\u4e0a\uff0c\u6700\u957f\u8ddd\u79bb**\u53ef\u80fd\u4e0d\u4f1a\u5927\u4e8e**$dis[3][4]$\u2014\u2014\u56e0\u4e3a\u672c\u8eab\u5728\u8fd9\u6761\u8fb9\u4e0a\uff0c\u90a3\u4e48\u52304\u7684\u8ddd\u79bb\u5c31\u4e0d\u4f1a\u5927\u4e8e$dis[3][4]$\u3002\u8003\u86511\u548c2\uff0c\u7531\u4e8e\u52302\u7684\u8ddd\u79bb\u7b49\u4e8e$dis[2][3]+dis[3][x]$\uff0c\u5c0f\u4e8e\u52301\u7684\u8ddd\u79bb$dis[1][3]+dis[3][x]$\uff0c\u56e0\u800c\u53ea\u8003\u86511\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u6700\u5c0f\u5316$\\max{dis[1][x],dis[x][4]}$\u4e86\u3002\u90a3\u4e48\u663e\u7136\uff0c\u5728\u4e2d\u70b9\u7684\u65f6\u5019\u4e0a\u8ff0\u503c\u6700\u5c0f\uff08\u8fd9\u5e94\u8be5\u662f\u663e\u7136\u4e86\uff09\uff0c\u56e0\u800c**\u6bcf\u6b21\u5c3d\u91cf\u53d6\u76f4\u5f84\u4e0a\u7684\u4e2d\u70b9**\u3002\n\n\u90a3\u4e48\uff0c\u65b0\u7684\u76f4\u5f84\u5728\u8fd9\u9897\u6811\u4e0a\u7684\u957f\u5ea6\u5c31\u5e94\u8be5\u662f$\\frac{diameter[1]+1}{2}$\u4e86\u2014\u2014\u76f4\u5f84\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u65f6\u5019\u5bf9\u534a\u53d6\uff0c\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u65f6\u5019\u53d6\u4e00\u534a\u66f4\u957f\u7684\u90a3\u4e00\u90e8\u5206\u3002\n\n\u56e0\u6b64\u5408\u5e76\u7684\u65f6\u5019\u7684\u65b0\u76f4\u5f84\u957f\u4e3a$\\frac{diameter[1]+1}{2}+\\frac{diameter[2]+1}{2}+1$\u2014\u2014\u522b\u5fd8\u4e86\u8fde\u63a5\u7684\u957f\u5ea61\u3002\n\n\u4f46\u662f\uff01\u6709\u53ef\u80fd\u4e00\u68f5\u6811\u5f88\u5927\uff0c\u53e6\u4e00\u68f5\u6811\u5f88\u5c0f\uff0c\u4ee5\u81f3\u4e8e\u65b0\u957f\u5ea6\u8fd8\u5c0f\u4e8e\u5927\u6811\u7684\u8001\u957f\u5ea6\uff0c\u56e0\u800c\u6700\u540e\u7684\u5408\u5e76\u65b9\u7a0b\uff082\u54111\u5408\u5e76\uff09\u4e3a\uff1a\n\n$$diameter[1]=\\max \\{ \\max \\{diameter[1],diameter[2]\\},\\frac{diameter[1]+1}{2}+\\frac{diameter[2]+1}{2}+1 \\} $$\n\n\u5408\u5e76\u51fd\u6570\u5982\u4e0b\uff1a\n\n```cpp\nvoid merge(int x,int y)\n{\n    diameter[getfather(y)] = max(max(diameter[getfather(y)], diameter[getfather(x)]), 1 + (diameter[getfather(y)] + 1) / 2 + (diameter[getfather(x)] + 1) / 2);//\u5408\u5e76\u65b9\u7a0b\u89e3\u91ca\u5982\u4e0a\n    father[getfather(x)] = getfather(y);//\u4e00\u5b9a\u6ce8\u610f\u6b21\u5e8f\uff01\u66f4\u65b0\u7684\u4fe1\u606f\u4e00\u5b9a\u8981\u5728\u5f52\u5e76\u524d\u8fdb\u884c\uff01\n    return;\n}\n```\n\u5269\u4e0b\u7684\u90e8\u5206\u4ee3\u7801\u8f83\u4e3a\u57fa\u7840\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u5b8c\u6210\u3002",
        "postTime": 1612083952,
        "uid": 80026,
        "name": "walk_alone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "~~\u53c8\u6c34\u4e86\u4e00\u9053\u7d2b\u9898~~\n\n\u53cc\u500d\u7ecf\u9a8c\uff1a[CF455C Civilization](https://www.luogu.com.cn/problem/CF455C)\n~~\u8fde\u6837\u4f8b\u90fd\u4e00\u6837~~\n\n### \u4e00. \u9898\u610f\n\n\u539f\u9898\u8fde\u63a5\uff1a[P2195 HXY\u9020\u516c\u56ed](https://www.luogu.com.cn/problem/P2195)\n\n- \u7ed9\u5b9a $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u68ee\u6797\uff0c\u4e00\u5171 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5305\u62ec\u4ee5\u4e0b\u4e24\u79cd\uff1a  \n\n1. `1 x` \uff1a\u8f93\u51fa\u70b9 $x$ \u6240\u5728\u7684\u6811\u7684\u76f4\u5f84\u3002  \n\n2. `2 x y` \uff1a\u7528\u4e00\u6761\u8fb9\u8fde\u63a5\u70b9 $x$ \u548c $y$ \u6240\u5728\u7684\u6811\uff0c\u5e76\u4f7f\u65b0\u6811\u7684\u76f4\u5f84\u6700\u5c0f\u3002\u82e5\u70b9 $x$\uff0c$y$ \u5df2\u8fde\u901a\u5219\u5ffd\u89c6\u8be5\u64cd\u4f5c\u3002\n\n- $1 \\le m \\lt n \\le 3 \\times10^{5} , 1 \\le q \\le 3\\times10^{5}$\n\n### \u4e8c. \u5206\u6790\u4e0e\u89e3\u7b54\n\n\u9996\u5148\u663e\u7136\u9700\u8981\u9884\u5904\u7406\u521d\u59cb\u65f6\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\u3002  \n  \n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6811\u5f62dp $O(n)$ \u89e3\u51b3\u3002\n\n\u5177\u4f53\u5c31\u662f\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5b50\u6811\u4e2d\u5230\u8be5\u7ed3\u70b9\u7684\u6700\u5927\u957f\u5ea6\u548c\u6b21\u5927\u957f\u5ea6\uff08\u4e0d\u80fd\u5728\u540c\u4e00\u68f5\u5b50\u6811\u4e2d\uff09\uff0c\u7136\u540e\u7528\u6700\u5927\u957f\u5ea6\u548c\u6b21\u5927\u957f\u5ea6\u7684\u548c\u66f4\u65b0\u5f53\u524d\u76f4\u5f84\u3002\n\n\u5982\u679c\u4e0a\u9762\u7684\u6ca1\u770b\u61c2\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u5728\u8fd9\u91cc\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6811\u7684\u8fde\u901a\uff0c\u5e76\u4e14\u7528\u5e76\u67e5\u96c6\u7684\u6839\u5b58\u50a8\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u7b49\u60a8\u770b\u5b8c\u540e\u9762\u5c31\u77e5\u9053\u5566\u3002\n\n---\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5904\u7406\u4e24\u4e2a\u64cd\u4f5c\u3002  \n  \n\u9996\u5148\u89c2\u5bdf\u64cd\u4f5c 2\uff0c\u8981\u6c42\u7ef4\u62a4\u96c6\u5408\u7684\u8fde\u901a\u6027\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u5e76\u67e5\u96c6\u3002\n\n\u90a3\u4e48\u4e0d\u59a8\u7528\u5e76\u67e5\u96c6\u7684\u6839\u6765\u4ee3\u8868\u8fd9\u68f5\u6811\u3002\n\n\u8bb0 $val$ \u8868\u793a\u8fde\u901a\u5757\u4e2d\u7684\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u5728\u5408\u5e76\u4e24\u68f5\u6811 $x$\uff0c$y$ \u65f6\uff0c\u8fd9\u91cc\u4e0d\u59a8\u76f4\u63a5\u8bbe $x$\u3001$y$ \u90fd\u4e3a\u6811\u6839\u3002\u7531\u4e8e\u8981\u6c42\u65b0\u7684\u76f4\u5f84\u6700\u5c0f\uff0c\u6240\u4ee5\u5bb9\u6613\u60f3\u5230\u53d6\u4e24\u68f5\u6811\u7684\u76f4\u5f84\u7684\u4e2d\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u65b0\u6811\u76f4\u5f84\u7684\u957f\u5ea6\u5c31\u4e3a\uff1a\n$$ max(val_x,val_y,\\lceil\\dfrac{val_x}{2}\\rceil + \\lceil\\dfrac{val_y}{2}\\rceil+1) $$\n\n\u4e5f\u5c31\u662f\u5728\u539f\u6765 $x$ \u7684\u76f4\u5f84\u548c $y$ \u7684\u76f4\u5f84\u4ee5\u53ca\u65b0\u4ea7\u751f\u7684\u8de8\u8d8a\u4e24\u68f5\u6811\u7684\u6700\u957f\u8def\u5f84\u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u5728\u6700\u540e\u4e00\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u4e0a\u53d6\u6574\u8868\u793a\u53d6\u8f83\u957f\u7684\u4e00\u6bb5\uff0c\u56e0\u4e3a\u8981\u7b97\u4e0a\u65b0\u8fde\u4e0a\u7684\u8fb9\u6240\u4ee5\u8981 +1 \u3002\n\n---\n\n\u63a5\u4e0b\u6765\u518d\u770b\u64cd\u4f5c 1\uff0c\u5c31\u4f1a\u53d1\u73b0\u53ea\u9700\u8981\u8f93\u51fa\u5904\u7406\u597d\u7684 $x$ \u6240\u5728\u7684\u8fde\u901a\u5757\u76f4\u5f84\u5373\u53ef\u3002\n\n\u5c31\u505a\u5b8c\u4e86\u3002\n\n### Code\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n\nusing namespace std;\n\nconst int MAXN = 300010;\n\nint n, m, q;\n\nstruct edge{\n\tint ne, to;\n\tedge(int N=0,int T=0):ne(N),to(T){}\n}e[MAXN<<1];\nint fir[MAXN], num = 0;\ninline void join(int a, int b)\n{\n\te[++num] = edge(fir[a], b);\n\tfir[a] = num;\n}\n\nint f[MAXN], val[MAXN];\nint find(int x)\n{\n\treturn f[x] == x ? x : f[x] = find(f[x]);\n}\ninline void merge(int x, int y) // \u5408\u5e76\u4e24\u68f5\u6811 \n{\n\tint fx = find(x), fy = find(y);\n\tif(fx == fy) return ;\n\tval[fx] =  max((val[fx]+1)/2+(val[fy]+1)/2+1, max(val[fx], val[fy]));\n\t// \u66f4\u65b0\u65b0\u7684\u76f4\u5f84 \n\tf[fy] = fx;\n}\n\nint maxx[MAXN][2];\nvoid dfs(int u, int fa, int rt) // \u5904\u7406\u76f4\u5f84 \n{\n\tmaxx[u][0] = maxx[u][1] = 0;\n\tfor(int i=fir[u];i;i=e[i].ne)\n\t{\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v, u, rt);\n\t\tint now = maxx[v][0] + 1;\n\t\tif(now > maxx[u][1])\n\t\t{\n\t\t\tif(now > maxx[u][0])\n\t\t\t{\n\t\t\t\tmaxx[u][1] = maxx[u][0];\n\t\t\t\tmaxx[u][0] = now;\n\t\t\t}\n\t\t\telse maxx[u][1] = now;\n\t\t}\n\t}\n\tval[rt] = max(val[rt], maxx[u][0] + maxx[u][1]);\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=n;i++)\n\t\tf[i] = i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a, b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tjoin(a, b);\n\t\tjoin(b, a);\n\t\tint fx = find(a), fy = find(b);\n\t\tif(fx != fy) f[fx] = fy;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i] == i)\n\t\t\tdfs(i, 0, i);\n\twhile(q--)\n\t{\n\t\tint opt, x, y;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt == 1) \n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tprintf(\"%d\\n\",val[find(x)]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmerge(x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1590056442,
        "uid": 151601,
        "name": "Aphros",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "## \u95ee\u9898\u63cf\u8ff0\n\n[LG-CF455C](https://www.luogu.org/problem/CF455C)\n\n\u53cc\u500d\u7ecf\u9a8c.jpg\n\n---\n\n## \u9898\u89e3\n\n\u9996\u5148\uff0c\u9898\u76ee\u7ed9\u51fa\u4e86 $m$ \u6761\u8fb9\uff0c\u5bf9\u8fd9 $n$ \u4e2a\u70b9\uff0c $m$ \u6761\u8fb9\u7ec4\u6210\u7684\u68ee\u6797\uff0c\u8dd1\u51fa\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\uff0c\u540c\u65f6\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6811\u7684\u8fde\u901a\u6027\u3002\n\n\u8003\u8651\u5408\u5e76\u4e24\u68f5\u6811\u7684\u60c5\u51b5\uff1a\u8bbe\u8fd9\u4e24\u68f5\u6811\u7684\u4ee3\u8868\u5143\u4e3a $u,v$ \uff0c\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\u6709\u4e09\u79cd\u6765\u6e90\uff1a\n\n- $u$ \u8fd9\u68f5\u6811\u7684\u76f4\u5f84\n\n- $v$ \u8fd9\u68f5\u6811\u7684\u76f4\u5f84\n\n- \u7a7f\u8fc7 $u,v$ \u5408\u5e76\u8fb9\u7684\u4e00\u6761\u8def\u5f84\n\n$u,v$ \u4e24\u68f5\u6811\u7684\u76f4\u5f84\u662f\u5df2\u77e5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6700\u5c0f\u5316\u7b2c\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u8bbe\u6811 $u,v$ \u5408\u5e76\u65f6\u7684\u70b9\u4e3a $rt_u,rt_v$ \uff0c\u6b64\u65f6\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u503c\u4e3a $\\frac{maxdis_{rt_u}}{2}+\\frac{maxdis_{rt_v}}{2}+1$\n\n\u663e\u7136\uff0c\u4e3a\u4e86\u6700\u5c0f\u5316\u4e24\u4e2a $maxdis$ \uff0c\u8fd9\u4e24\u4e2a\u70b9\u9009\u53d6\u7684\u4e00\u5b9a\u662f\u539f\u6765\u4e24\u68f5\u6811\u76f4\u5f84\u7684\u4e2d\u70b9\u3002\n\n---\n\n## $\\mathrm{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate <typename Tp>\nvoid read(Tp &x){\n\tx=0;char ch=1;int fh;\n\twhile(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n\tif(ch=='-') ch=getchar(),fh=-1;\n\telse fh=1;\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\tx*=fh;\n}\n\nconst int maxn=300007;\nconst int maxm=600007;\n\nint n,m,T;\nvector<int> G[maxn];\nint fa[maxn];\n\nint bel[maxn],cnt;\n\nvoid add(int x,int y){\n\tG[x].push_back(y);\n}\n\nint find(int x){\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\n\nint dep[maxn],ans[maxn];\n\nint pos,lst;\n\nvoid merge(int x,int y){\n\tif(find(x)!=find(y)) fa[fa[x]]=fa[y];\n}\n\nvoid dfs(int x,int col,int dis){\n\tif(bel[x]==col) return;\n\tif(dis>=lst) lst=dis,pos=x;\n\tbel[x]=col;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint y=G[x][i];\n\t\tmerge(x,y);\n\t\tdfs(y,col,dis+1);\n\t}\n}\n\nvoid Getmax(){\n\tint mx=-1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(dep[i]>mx) mx=dep[i],pos=i;\n\t}\n}\n\nvoid cz1(){\n\tint x;read(x);\n\tprintf(\"%d\\n\",ans[find(x)]);\n}\n\nvoid cz2(){\n\tint x,y;read(x);read(y);\n\tint xx=find(x),yy=find(y);\n\tif(xx==yy) return;\n\tfa[xx]=yy;\n\tans[yy]=max(ans[xx],max(ans[yy],(ans[xx]+1)/2+(ans[yy]+1)/2+1));\n}\n\nvoid preprocess(){\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n}\n\nint main(){\n\tread(n);read(m);read(T);\n\t\n\tpreprocess();\n\t\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tread(x);read(y);\n\t\tadd(x,y);add(y,x);\n\t}\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tif(bel[i]) continue;\n\t\tlst=0,pos=i;\n\t\tdfs(i,i,0);\n\t\tlst=0;\n\t\tdfs(pos,pos,0);\n\t\tans[find(i)]=lst;\n\t}\n\t\n\tint op;\n\twhile(T--){\n\t\tread(op);\n\t\tif(op==1) cz1();\n\t\telse cz2();\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1573199379,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "\u5929\u54ea\u8fd9\u9053\u9898\u7adf\u7136\u53ea\u6709\u4e00\u7bc7\u9898\u89e3\uff01\n\n------------\n\nemm\uff0c\u9996\u5148\u8bfb\u9898\u770b\u5b8c\u4e24\u4e2a\u64cd\u4f5c\u5c31\u5df2\u7ecf\u6709\u5f88\u660e\u786e\u7684\u601d\u8def\u4e86\uff0c\u663e\u7136\u662f\u5e76\u67e5\u96c6+\u6811\u7684\u76f4\u5f84 \u4e00\u6ce2\u89e3\u51b3\u3002\n\n\u5e76\u67e5\u96c6\u4e0d\u591a\u8bf4\u4e86\uff0c\u5982\u679c\u4e0d\u4e86\u89e3\u7684\u53ef\u4ee5[\u770b\u8fd9\u91cc](https://www.luogu.org/blog/aaronlee/bing-zha-ji).\n\n\u6811\u7684\u76f4\u5f84\u7684\u601d\u8def\u5f88\u6734\u5b9e\uff0c\u5c31\u662f\u4e24\u8fb9DFS\uff08BFS\u4e5fOK\uff09\u3002\u5177\u4f53\u5148\u968f\u4fbf\u627e\u4e00\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u641c\u4e00\u904d\uff0c\u627e\u5230\u6700\u8fdc\u7684\uff0c\u7136\u540e\u518d\u641c\u4e00\u904d\uff0c\u8fd9\u6837\u5408\u5728\u4e00\u8d77\u5c31\u4e00\u5b9a\u662f\u6700\u957f\u7684\u4e86\u3002\n\n\u4e0d\u8fc7\u5462\u8fd9\u9053\u9898\u8fd8\u662f\u6ce8\u610f\u4e00\u4e0b\u6c42\u76f4\u5f84\u7684\u516c\u5f0f\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\n\nD_new=max(D_u,D_v,[D_u/2]+[D_v/2]+1)\n\n\u90a3\u4e2a\u65b9\u62ec\u53f7\u6307\u7684\u662f\u53d6\u6574\uff08\u6ca1\u627e\u5230\u5728\u54ea\u91cc\u6253\u51fa\u6765\uff09\u3002\n\nen\u9664\u6b64\u4e4b\u5916\u597d\u50cf\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u3002\u3002\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n\nconst int maxn=300300;\n\nint n,m,q,max_i,max_v;\nint f[maxn],len[maxn],sz[maxn];\nbool used[maxn];\nvector<int>g[maxn];\n\nvoid dfs(int val,int depth,int pos){\n\tif(depth>max_i){\n\t\tmax_i=depth;\n\t\tmax_v=val;\n\t}\n\tfor(int i=0;i<g[val].size();i++){\n\t\tif(g[val][i]!=pos)dfs(g[val][i],depth+1,val);\n\t}\n}\n\nint calc(int val){\n\tmax_i=-1;\n\tdfs(val,0,-1);\n\tmax_i=-1;\n\tdfs(max_v,0,-1);\n\treturn max_i;\n}\n\nint find(int x){\n\tif(x==f[x])return x;\n\treturn f[x]=find(f[x]);\n}\n\nvoid merge(int x,int y){\n\tx=find(x),y=find(y);\n\tif(sz[x]>sz[y])swap(x,y);\n\tsz[y]+=sz[x];\n\tf[x]=y;\n}\n\nint radius(int x){\n    return (len[x]+1)/2;\n}\n\nvoid merge2(int x,int y){\n    x=find(x),y=find(y);\n    if(x==y)return;\n    if(sz[x]>sz[y])swap(x,y);\n    sz[y]+=sz[x];\n    f[x]=y;\n    len[y]=max(max(radius(x)+radius(y)+1,len[x]),len[y]);\n}\n\nint main() {\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(int i=1;i<=n;i++){\n    \tf[i]=i;\n    \tsz[i]=i;\n    \tlen[i]=0;\n\t}\n    for(int i=1;i<=m;i++){\n        int x,y;\n    \tscanf(\"%d%d\",&x,&y);\n        g[x].push_back(y);\n        g[y].push_back(x);\n        merge(x,y);\n    }\n    for(int i=1;i<=n;i++){\n        int p=find(i);\n        if(!used[p]){\n            used[p]=1;\n            len[p]=calc(i);\n        }\n    }\n    while(q--){\n        int t,x,y;\n        scanf(\"%d\",&t);\n        if(t==1){\n        \tscanf(\"%d\",&x);\n            printf(\"%d\\n\",len[find(x)]);\n        }else{\n        \tscanf(\"%d%d\",&x,&y);\n            merge2(x,y);\n        }\n    }\n}\n```",
        "postTime": 1528446459,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u68ee\u6797\u3002\u8981\u6c42\u652f\u6301\u4ee5\u4e0b\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- \u9009\u4e2d\u4e00\u4e2a\u8282\u70b9\uff0c\u6c42\u8fd9\u4e2a\u8282\u70b9\u6240\u5728\u6811\u7684\u76f4\u5f84\u3002\n- \u9009\u4e2d\u4e24\u68f5\u6811\uff0c\u8fde\u63a5\u4e00\u6761\u80fd\u4f7f\u5f97\u4e24\u68f5\u6811\u8fde\u63a5\u540e\u76f4\u5f84\u6700\u5c0f\u7684\u8fb9\u3002\n\n## \u89e3\u6cd5\n\n\u8282\u70b9\u5408\u5e76\u7528\u5e76\u67e5\u96c6\u5224\u65ad\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u68f5\u6811\u7684\u76f4\u5f84\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u64cd\u4f5c 2 \u3002\u53d1\u73b0\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5c31\u662f\u4e24\u68f5\u6811\u4e2d\u7684\u76f4\u5f84\u4e2d\u70b9\u8fde\u8fb9\uff0c\u8fde\u540e\u7684\u76f4\u5f84\u6700\u5c0f\u3002\u7136\u540e\u89c2\u5bdf\u8fd9\u4e24\u68f5\u6811\u7684\u6700\u957f\u94fe\u4e0a\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n- \u5982\u679c\u4e24\u4e2a\u90fd\u662f\u5947\u94fe\uff0c\u5408\u5e76\u540e\u7684\u4e2d\u70b9\u9009\u5408\u5e76\u524d\u7684\u4e2d\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u5c31\u53ef\u4ee5\u3002\n- \u5982\u679c\u4e00\u4e2a\u662f\u5947\u94fe\uff0c\u4e00\u4e2a\u662f\u5076\u94fe\uff0c\u5408\u5e76\u540e\u7684\u4e2d\u70b9\u9009\u5076\u94fe\u4e0a\u7684\u90a3\u4e2a\u4e2d\u70b9\u3002\n- \u5982\u679c\u4e24\u4e2a\u90fd\u662f\u5076\u94fe\uff0c\u5408\u5e76\u540e\u7684\u4e2d\u70b9\u9009\u5408\u5e76\u524d\u7684\u4e2d\u70b9\u7684\u4efb\u610f\u4e00\u4e2a\u5c31\u53ef\u4ee5\u3002\n\n\u8bbe\u8fde\u7ed3\u524d A \u6811\u7684\u76f4\u5f84\u4e3a $d_a$\uff0cB \u6811\u7684\u76f4\u5f84\u4e3a $d_b$\u3002\u5f88\u663e\u7136\uff0c\u5408\u5e76\u540e\u7684\u76f4\u5f84\u4e3a $l_c = \\left\\lceil\\frac{d_a + 1}{2}\\right\\rceil + \\left\\lceil\\frac{d_b + 1}{2}\\right\\rceil$ \u3002\uff08\u8fd9\u91cc\u7684\u76f4\u5f84\u957f\u4e3a\u76f4\u5f84\u4e0a\u70b9\u7684\u6570\u91cf\uff09\n\n\u7136\u540e\u5728\u5e76\u67e5\u96c6\u4e0a\u8fdb\u884c\u5408\u5e76\u548c\u4fe1\u606f\u5411\u4e0a\u4f20\u9012\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u672c\u9898\u4ee3\u7801\u76f8\u5bf9\u6765\u8bf4\u8f83\u4e3a\u7b80\u5355\uff0c\u8bf7\u8bfb\u8005\u7ecf\u601d\u8003\u540e\u81ea\u884c\u5b8c\u6210\u3002",
        "postTime": 1625150615,
        "uid": 294745,
        "name": "Sora1336",
        "ccfLevel": 0,
        "title": "\u503c\u5f97\u4e00\u60f3\u548c\u4e00\u5199\u7684\u76f4\u5f84\u4e2d\u70b9"
    },
    {
        "content": "\u56e0\u4e3a\u6d1b\u8c37\u4e0a C \u8bed\u8a00\u9898\u89e3\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u6211\u6765\u4e00\u53d1\u9898\u89e3(\u867d\u7136\u8fd9\u9053\u9898 c \u8bed\u8a00\u548c c++\u90fd\u5dee\u4e0d\u591a)\u3002\n\n\u8fdb\u5165\u4e3b\u9898\uff1a\n\n\u770b\u9898\u610f\u9898\u76ee\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u68ee\u6797\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5904\u7406\u51fa\u68ee\u6797\u4e2d\u6bcf\u68f5\u65e0\u5411\u6811\u7684\u76f4\u5f84\uff08\u76f4\u5f84\uff1a\u4e00\u68f5\u6811\u4e0a\u4e24\u4e2a\u8282\u70b9\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff09\uff0c\u6c42\u89e3\u6811\u7684\u76f4\u5f84\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u6811\u72b6DP\u548c\u8dd1\u4e24\u904dBFS\uff0c\u672c\u6587\u4e2d\u7528\u7684\u662f\u4e24\u904d bfs\uff0c\u5bf9\u6811\u72b6 DP \u65b9\u6cd5\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u7b2c\u4e00\u904d bfs \u662f\u627e\u5230\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u8282\u70b9\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c\nint dep[N];\n\n  dep[fa]=1; //fa \u662f\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\n\n  int queue[N<<2],head=0,tail=1;\n\n  queue[0]=fa;\n\n  while(tail>head){\n\n\u200b    int u=queue[head++];\n\n  for(int i=last[u];i;i=e[i].next){\n\n\u200b    int v=e[i].v;\n\n\u200b    root[v]=fa;// \u5e76\u67e5\u96c6\uff0c\u4e0b\u9762\u8bb2\n\n\u200b    if(!dep[v]){\n\n\u200b      dep[v]=dep[u]+1;\n\n\u200b      queue[tail++]=v;\n\n\u200b    }\n\n  }\n\n  }\n\n  s=queue[--head];//s \u5c31\u662f\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fdc\u7684\u8282\u70b9\n```\n\n \n\n\u627e\u5230s\u8282\u70b9\u7b2c\u4e00\u6b65\u5c31\u5b8c\u6210\u5566\u3002\n\n\u63a5\u4e0b\u6765\u7b2c\u4e8c\u6b65\uff0c\u4ece s \u8282\u70b9\u51fa\u53d1\uff0c\u627e\u51fa\u6700\u5927\u8ddd\u79bb\u3002\n\n```c\n int depp[N];\n\n  head=0;\n\n  tail=1;\n\n  depp[s]=1;\n\n  queue[0]=s;\n\n  while(tail>head){\n\n\u200b    int u=queue[head++];\n\n\u200b    for(int i=last[u];i;i=e[i].next){\n\n\u200b      int v=e[i].v;\n\n\u200b      if(!depp[v]){\n\n\u200b        depp[v]=depp[u]+1;\n\n\u200b        queue[tail++]=v;\n\n\u200b      }\n\n\u200b    }\n\n  }\n\n  diameter[fa]=depp[queue[--head]]-1;//di diameter[i] \u8bb0\u5f55 i \u8282\u70b9\u6240\u5728\u7684\u6811\u7684\u76f4\u5f84\n```\n\n\n\n\n\n\u90a3\u4e48\u600e\u4e48\u77e5\u9053\u8981\u4ee5\u54ea\u4e2a\u70b9\u4e3a\u9876\u70b9\u8fdb\u884c bfs\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e00\u68f5\u6811\u4e0a\u7684\u8282\u70b9\u53eabfs\u4e00\u6b21\u5462\uff1f\n\n\u5206\u79bb\u96c6(\u58f0\u660e\uff1a\u5206\u79bb\u96c6\u6307\u7684\u662f\u5e76\u67e5\u96c6\uff0c\u4e0b\u9762\u5c31\u7528\u5206\u79bb\u96c6\u4e86)\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u5728\u7b2c\u4e00\u6b21bfs\u7684\u65f6\u5019\u6211\u5199\u4e86\u8fd9\u6837\u4e00\u6761\u8bed\u53e5\uff1aroot[v]=fa\uff1b \u5176\u4e2d root[v] \u8bb0\u5f55\u7684\u662fv\u70b9\u7684\u7956\u5148\uff08\u4e0d\u4e00\u4fdd\u8bc1\u662f\u6839\u8282\u70b9\uff09\u3002\n\n\u6bd4\u5982\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\n\n![1](https://yanx57.gitee.io/photo/tree.jpg)\n\n D \u8282\u70b9\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\u4e3a A\uff0c\u4f46\u662f\u5728\u67d0\u4e00\u65f6\u523b\u4e0d\u4fdd\u8bc1 root[D] \u5b58\u7684\u662f A \u800c\u662f B\uff0c\u4f46\u4f46\u662f\uff0c\u53ea\u8981   root[B] \u5b58\u7684\u662f A \uff0c\u6211\u4eec\u603b\u6709\u529e\u6cd5\u4ece D \u627e\u5230 A\uff0c\u5c31\u7b97 D \u8282\u70b9\u7684\u9ad8\u5ea6\u518d\u5927\uff0c\u6709\u8fd9\u6837\u4e00\u6761\u94fe\u5728\uff0c\u6211\u4eec\u90fd\u662f\u80fd\u6700\u7ec8\u627e\u5230 A \u7684\u3002\u56de\u5230\u7b2c\u4e00\u6b21 bfs\uff0c\u6bcf\u4e00\u6b21\u6709\u8282\u70b9 v \u8fdb\u5165\u961f\u5217 queue\uff0c\u6211\u4eec\u5c31\u5c06 root[v] \u8bbe\u7f6e\u4e3a fa\uff0c\u5373\u8fd9\u68f5\u6811\u4e0a\u7684\u6839\u8282\u70b9\u3002\u8fdb\u5165 bfs \u6761\u4ef6\uff1a \n\n```c\nfor(int i=1;i<=n;i++){\n\n\u200b    if(root[i]==i&&alone[i]){//alone[i] \u4e3a0\u8868\u793a i \u662f\u4e00\u4e2a\u5b64\u7acb\u70b9\uff0c\u5b64\u7acb\u70b9\u5c31\u6ca1\u5fc5\u8981 bfs \u4e86\n\n\u200b      bfs1(i);\n\n\u200b    }\n\n  }\n\n\n```\n\n\n\n\u63a5\u4e0b\u6765\uff0c\u67e5\u8be2\u64cd\u4f5c\uff0c\u76f4\u63a5\u8f93\u51fa\u6570\u7ec4 diameter \u5bf9\u5e94\u7684\u8bb0\u5f55\u5c31\u597d\u3002\n\n\u5408\u5e76\u64cd\u4f5c\uff0c\u53ef\u4ee5\u63a8\u51fa\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u70b9 u,v, \u5b83\u4eec\u7684\u6839\u8282\u70b9\u5206\u522b\u662f rootu\uff0crootv\uff0c\u5c06 rootv \u4e3a\u6839\u7684\u6811\u5408\u5e76\u5230 rootu \u4e3a\u6839\u7684\u6811\u4e2d\uff0c\u663e\u7136\uff0c\u5728 rootv \u4e3a\u6839\u7684\u6811\u4e2d\u7684\u6700\u957f\u8def\u5f84\u7684\u4e2d\u70b9\uff0c\u5411 rootu \u4e3a\u6839\u7684\u6811\u4e2d\u7684\u6700\u957f\u8def\u5f84\u7684\u4e2d\u70b9\u5efa\u8fb9\uff0c\u5f97\u5230\u7684\u6811\u7684\u76f4\u5f84\u4f1a\u6700\u5c0f\uff0c\u53ef\u4ee5\u8bc1\u660e\uff1a\n\n\u8bbe rootu \u4e3a\u6839\u7684\u6811\u76f4\u5f84\u4e3a l1,rootv \u4e3a\u6839\u7684\u6811\u76f4\u5f84\u4e3a l2,\u5c06 l1\u548c l2\u90fd\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\n\nx1,x2,x3,x4, \u5219 x1+x2=l1,x3+x4=l2, \u5047\u8bbe x1>=x2,x3>=x4, \u5219x1+x3>=1/2\u2716\ufe0fl1 \u7684\u4e0a\u53d6\u6574+1/2\u2716\ufe0fl2 \u7684\u4e0a\u53d6\u6574\uff0cc\u8bed\u8a00\u53ef\u4ee5\u5199\u6210\u4e3a1/2(l1+1)+1/2(l2+1),\u518d\u4e0e\u539f\u6765\u5408\u5e76\u524d\u7684\u4e24\u4e2a\u6811\u7684\u76f4\u5f84\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```c\n#include<stdio.h>\n\n#include<string.h>\n\n#include<stdlib.h>\n\n#include<limits.h>\n\n#include<stdbool.h>\n\n\n\n#define N 300050\n\n#define M 300050\n\nint n,m,q;\n\nint root[N],diameter[N],alone[N];\n\n\n\nstruct edge{\n\n  int u,v;\n\n  int next;\n\n}e[M<<2];\n\n\n\n\n\nint last[N],tot=0;\n\nvoid addEdge(int u,int v){\n\n  e[++tot].u=u;e[tot].v=v;\n\n  e[tot].next=last[u];last[u]=tot;\n\n}\n\n\n\nint find(int x){\n\n  if(root[x]==x) return x;\n\n  root[x]=find(root[x]);\n\n  return root[x];\n\n}\n\n\n\n\n\nint max(int x,int y){\n\n  return x>y?x:y;\n\n}\n\n\n\nint min(int x,int y){\n\n  return x<y?x:y;\n\n}\n\n \n\nint s;\n\nvoid bfs1(int fa){\n\n  int dep[N];\n\n  dep[fa]=1;\n\n  int queue[N<<2],head=0,tail=1;\n\n  queue[0]=fa;\n\n  while(tail>head){\n\n\u200b    int u=queue[head++];\n\n  for(int i=last[u];i;i=e[i].next){\n\n\u200b    int v=e[i].v;\n\n\u200b    root[v]=fa;\n\n\u200b    if(!dep[v]){\n\n\u200b      dep[v]=dep[u]+1;\n\n\u200b      queue[tail++]=v;\n\n\u200b    }\n\n  }\n\n  }\n\n  s=queue[--head];\n\n  int depp[N];\n\n  head=0;\n\n  tail=1;\n\n  depp[s]=1;\n\n  queue[0]=s;\n\n  while(tail>head){\n\n\u200b    int u=queue[head++];\n\n\u200b    for(int i=last[u];i;i=e[i].next){\n\n\u200b      int v=e[i].v;\n\n\u200b      if(!depp[v]){\n\n\u200b        depp[v]=depp[u]+1;\n\n\u200b        queue[tail++]=v;\n\n\u200b      }\n\n\u200b    }\n\n  }\n\n  diameter[fa]=depp[queue[--head]]-1;\n\n}\n\n\n\n\n\n\n\nint quickRead(){\n\n  int a=0,b=1;\n\n  char ch=getchar();\n\n  while((ch>'9'||ch<'0')&&ch!='-') ch=getchar();\n\n  if(ch=='-') {b=-1;ch=getchar();}\n\n  while(ch>='0'&&ch<='9') {a=a*10+ch-'0';ch=getchar();}\n\n  return a*b;\n\n}\n\n\n\nint main(){\n\n  n=quickRead();m=quickRead();q=quickRead();\n\n  int p,u,v;\n\n  for(int i=1;i<=n;i++) root[i]=i;\n\n  for(int i=1;i<=m;i++){\n\n\u200b    u=quickRead();v=quickRead();\n\n\u200b    alone[u]=1;\n\n\u200b    alone[v]=1;\n\n\u200b    addEdge(u, v);\n\n\u200b    addEdge(v, u);\n\n  }\n\n  for(int i=1;i<=n;i++){\n\n\u200b    if(root[i]==i&&alone[i]){\n\n\u200b      bfs1(i);\n\n\u200b    }\n\n  }\n\n\n\n  for(int i=1;i<=q;i++){\n\n\u200b    p=quickRead();\n\n\u200b    if(p==1){\n\n\u200b      u=quickRead();\n\n\u200b      printf(\"%dn\",diameter[find(root[u])]);\n\n\u200b    }else{\n\n\u200b      u=quickRead();v=quickRead();\n\n\u200b      int rootu=find(u);\n\n\u200b      int rootv=find(v);\n\n\u200b      if(rootu!=rootv){\n\n\n\n\u200b        int l1=diameter[rootu],l2=diameter[rootv];\n\n\u200b        diameter[rootu]=max(((l1+1)>>1)+((l2+1)>>1)+1,max(l1,l2));\n\n\u200b        root[rootv]=rootu;\n\n\n\n\u200b      }\n\n\u200b    }\n\n  }\n\n  return 0;\n\n}\n```\n\n",
        "postTime": 1608217388,
        "uid": 273211,
        "name": "yanxu20191617",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e24\u4e2a\u8fde\u901a\u5757\u8fde\u8d77\u6765\uff0c\u80af\u5b9a\u662f\u5728\u4e24\u4e2a\u76f4\u5f84\u4e2d\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u4f7f\u5f97\u65b0\u7684\u76f4\u5f84\u6700\u77ed\n\n\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u540c\u65f6\u8bb0\u5f55\u8fde\u901a\u5757\u7684\u76f4\u5f84\u5927\u5c0f\n\n\u4ee4\u4e24\u4e2a\u8fde\u901a\u5757\u7684\u76f4\u5f84\u5206\u522b\u4e3a$len_{s1}>len_{s2}$\n\n\u5219\u65b0\u7684\u76f4\u5f84\u662f$max(len_{s1},\\frac{len_{s1}+1}{2}+\\frac{len_{s2}+1}{2}+1)$\n\n\u9664\u6cd5\u662f\u4e0a\u53d6\u6574\u7684\u610f\u601d\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 300010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 1];\nint num, head[maxn], rt, Max;\nint n, m, q, f[maxn], len[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\nint getfa(int k){ return f[k] == k ? k : f[k] = getfa(f[k]); }\n\nvoid dfs(int u, int pre, int s){\n\tif (s > Max) Max = s, rt = u;\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif (v != pre) dfs(v, u, s + 1);\n\t}\n}\n\nvoid merge(int x, int y){\n\tint s1 = getfa(x), s2 = getfa(y);\n\tif (len[s1] < len[s2]) swap(s1, s2);\n\tf[s2] = s1, len[s1] = max(len[s1], (len[s1] + 1) / 2 + (len[s2] + 1) / 2 + 1);\n}\n\nint main(){\n//\tfreopen(\"1.txt\", \"r\", stdin);\n//\tfreopen(\"21.out\", \"w\", stdout);\n\tn = read(), m = read(), q = read();\n\tfor (int i = 1; i <= n; ++i) f[i] = i;\n\twhile (m--){\n\t\tint x = read(), y = read(), s1 = getfa(x), s2 = getfa(y);\n\t\taddedge(x, y), addedge(y, x);\n\t\tf[s1] = s2;\n\t}\n\tfor (int i = 1; i <= n; ++i){\n\t\tint x = getfa(i);\n\t\tif (!len[x]){\n\t\t\trt = 0, Max = 0;\n\t\t\tdfs(i, 0, 0);\n\t\t\tMax = 0;\n\t\t\tdfs(rt, 0, 0);\n\t\t\tlen[x] = Max;\n\t\t}\n\t}\n\twhile (q--){\n\t\tint opt = read();\n\t\tif (opt == 1) printf(\"%d\\n\", len[getfa(read())]); else{\n\t\t\tint x = read(), y = read();\n\t\t\tif (getfa(x) != getfa(y)) merge(x, y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1599657684,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2195 \u3010HXY\u9020\u516c\u56ed\u3011"
    }
]