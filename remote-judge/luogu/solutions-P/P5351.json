[
    {
        "content": "\u70b9\u5206\u6cbb+\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u6811\u4e0a\u7684\u8def\u5f84\u7edf\u8ba1\u95ee\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u70b9\u5206\u6cbb\u3002\n\n\u6bcf\u6b21\u5206\u6cbb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5bf9\u5f53\u524d\u8fde\u901a\u5757\uff0c\u6c42\u51fa\u6240\u6709\u4ece\u6839\u51fa\u53d1\u7684\u8def\u5f84\u7684\u4ef7\u503c\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5408\u5e76\u8fd9\u4e9b\u94fe\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u94fe\u6309\u7167\u5176\u9b54\u529b\u503c\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u3002\u5bf9\u6bcf\u6761\u94fe\uff0c\u8bbe\u5176\u9b54\u529b\u503c\u4e3a$w$\uff0c\u5b83\u4e0e\u5176\u4e4b\u524d\u679a\u4e3e\u5230\u7684\u94fe\u4ea7\u751f\u7684\u8d21\u732e\u5747\u4e3a$w$\u3002\u7528\u6811\u72b6\u6570\u7ec4\u6765\u652f\u6301\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\uff0c\u7136\u540e\u5bf9\u6bcf\u6761\u94fe\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u67e5\u8be2\u4e4b\u524d\u6709\u591a\u5c11\u6ee1\u8db3\u8fb9\u6570\u9650\u5236\u7684\u94fe\u5373\u53ef\u3002\u7136\u540e\u518d\u628a\u8fd9\u6761\u94fe\u653e\u8fdb\u6811\u72b6\u6570\u7ec4\u91cc\u3002\n\n\u6ce8\u610f\u51cf\u53bb\u540c\u4e00\u68f5\u5b50\u6811\u5185\u7684\u8d21\u732e\u3002\n\n\u7b54\u6848\u6700\u540e\u4e582\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2 n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nconst int N=1e5+7;\ntypedef long long LL;\nLL ans;\nint n,L,R;\nstruct edge{\n\tint to,nxt,w;\n}e[N<<1];\nint head[N],cnt,mx[N],sz[N],all,rt,vis[N];\nvoid getrt(int now,int pre){\n\tmx[now]=0,sz[now]=1;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!vis[e[i].to]&&e[i].to!=pre)getrt(e[i].to,now),sz[now]+=sz[e[i].to],mx[now]=std::max(mx[now],sz[e[i].to]);\n\tmx[now]=std::max(mx[now],all-sz[now]);\n\tif(!rt||mx[now]<mx[rt])rt=now;\n}\nint B[N];\ninline void add(int i,int x){for(;i<=R;i+=i&-i)B[i]+=x;}\ninline int ask(int i){int x=0;for(;i;i^=i&-i)x+=B[i];return x;}\nstd::vector<std::pair<int,int>>al,tt;\nvoid dfs(int now,int pre,int len,int val){\n\ttt.emplace_back(val,len);\n\tif(len<R)\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(e[i].to!=pre&&!vis[e[i].to])dfs(e[i].to,now,len+1,std::max(val,e[i].w));\n}\nvoid doit(int now){\n\tal.clear();\n\tfor(int i=head[now];i;i=e[i].nxt)if(!vis[e[i].to]){\n\t\ttt.clear();\n\t\tdfs(e[i].to,now,1,e[i].w);\n\t\tstd::sort(tt.begin(),tt.end());\n\t\tfor(int t=0;t<tt.size();++t)\n\t\tans-=(LL)tt[t].first*(ask(R-tt[t].second)-ask(std::max(0,L-tt[t].second-1))),add(tt[t].second,1);\n\t\tfor(int t=0;t<tt.size();++t)add(tt[t].second,-1);\n\t\tfor(auto t:tt)al.push_back(t);\n\t}\n\tstd::sort(al.begin(),al.end());\n\tfor(int t=0;t<al.size();++t)\n\tans+=(LL)al[t].first*(ask(R-al[t].second)-ask(std::max(0,L-al[t].second-1))),add(al[t].second,1);\n\tfor(int t=0;t<al.size();++t)add(al[t].second,-1);\n\tfor(auto t:al)\n\tif(t.second>=L)ans+=t.first;\n}\nvoid solve(int now){\n\tvis[now]=1,doit(now);\n\tconst int sm=all;\n\tfor(int i=head[now];i;i=e[i].nxt)if(!vis[e[i].to]){\n\t\trt=0;\n\t\tall=sz[e[i].to]<sz[now]?sz[e[i].to]:sm-sz[now];\n\t\tgetrt(e[i].to,now),solve(rt);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&L,&R);\n\tfor(int i=1;i<n;++i){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\te[++cnt]=(edge){v,head[u],w},head[u]=cnt;\n\t\te[++cnt]=(edge){u,head[v],w},head[v]=cnt;\n\t}\n\trt=0,all=n;\n\tgetrt(1,0),solve(rt);\n\tprintf(\"%lld\\n\",ans<<1);\n\treturn 0;\n}\n```",
        "postTime": 1557127454,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5351 \u3010Ruri Loves Maschera\u3011"
    },
    {
        "content": "$Ruri\\ Loves\\ Maschera$ \u9898\u89e3\n\n\u8fd9\u662f $Owen$ \u81ea\u5df1\u51fa\u7684\u3002\u3002\u3002\u867d\u7136\u8d85\u7ea7\u50cf\u539f\u9898\uff0c\u4f46\u662f\u662f\u539f\u521b\u3002\u3002\u3002\n\n\u4e0d\u5c11\u4e8e $L$ \u6761\u4e14\u4e0d\u591a\u4e8e $R$ \u6761\u7684\u8bdd\u53ef\u4ee5\u60f3\u5230\u70b9\u5206\u6cbb\u3002\u6211\u4eec\u5728\u70b9\u5206\u6cbb\u8bb0\u5f55\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u6df1\u5ea6 $dep$\uff0c\u4e00\u4e2a\u662f\u8be5\u70b9\u5230\u91cd\u5fc3\u7684\u6700\u5927\u503c $Max$\u3002\u73b0\u5728\u8003\u8651\u600e\u4e48\u5408\u5e76\u4e24\u4e2a\u6700\u5927\u503c\u3002\n\n\u6211\u4eec\u5148\u4e0d\u7ba1\u8def\u5f84\u6761\u6570\u7684\u9650\u5236\u3002\u6709 $n$ \u4e2a\u4ef7\u503c $a_1\\leq a_2\\leq ...\\leq a_n$\uff0c\u73b0\u5728\u6c42 $\\sum_{i=1}^{n}\\max(a_i,v)$\u3002\n\n\u5148\u627e\u5230\u4e00\u4e2a\u6570 $k$\uff0c\u4f7f\u5f97 $a_k\\leq v,a_{k+1}>v$\u3002$[1,k]$ \u7684\u8d21\u732e\u4e3a $v\\times k$\uff0c$[k+1,n]$ \u7684\u8d21\u732e\u4e3a $\\sum_{i=k+1}^{n}a_i$\n\n\u90a3\u4e48\u6211\u4eec\u518d\u52a0\u4e00\u7ef4\u6df1\u5ea6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u53ea\u6709  $L-dep_a\\leq dep_b\\leq R-dep_a$ \u7684\u503c\u4f1a\u5bf9\u5176\u4ea7\u751f\u8d21\u732e\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u4e00\u7ef4 $sort$ \u4e00\u7ef4\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$",
        "postTime": 1556975532,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "Ruri Loves Maschera \u9898\u89e3"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\uff1a~~\u6dc0\u7c89\u8d28~~\u70b9\u5206\u6cbb\n\n\u636e\u51fa\u9898\u4eba\u8bf4\uff1a\u770b\u5230\u8fd9\u79cd\u6811\u4e0a\u8be2\u95ee\u8def\u5f84\u957f\u5ea6\u4e3aL~R\u7684\u4fe1\u606f\u7684\uff0c\u80af\u5b9a\u662f\u70b9\u5206\u6cbb.\n\n~~\u636e\u51fa\u9898\u4eba\u8bf4:\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7801\u519c\u9898\uff0c\u6700\u5f00\u59cb\u8fd8\u8981\u5957\u4e2aK-D\u6811\u3002~~\n\n\u5148\u601d\u8003$O(n^2)$\u7684\u7b97\u6cd5\uff08\u66b4\u529b\uff09\uff0c\u53d1\u73b0\u6ca1\u4ec0\u4e48\u597d\u4f18\u5316\u7684\u3002\n\n\u518d\u601d\u8003$O(n^2logn)$\u7684\u70b9\u5206\u6cbb\u7b97\u6cd5\uff08\u53ef\u80fd\u4f1a\u6709\u4eba\u89c9\u5f97\u590d\u6742\u5ea6\u53d8\u5927\u4e86\uff0c\u4f46\u5148\u522b\u6025\uff09\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u53d1\u7684\u6240\u6709\u8fb9\u90fd\u4e24\u4e24\u66b4\u529b\u62fc\u63a5\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u7b54\u6848\uff0c\u8fd9\u590d\u6742\u5ea6\u662f\u9519\u8bef\u7684\uff08\u4f46\u51fa\u9898\u4eba\u8bf4$O(n^2logn)$\u80fd\u768410pts\uff09\u3002\n\n\u518d\u4e00\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u957f\u5ea6\u4e3a$l$\u7684\u8fb9\uff0c\u53ea\u6709\u957f\u5ea6\u5728$(L-l)$~$(R-l)$\u7684\u6240\u6709\u8fb9\u80fd\u6210\u4e3a\u7b54\u6848\u3002\u7531\u6211\u4eec\u8bbe\u957f\u5ea6\u5c0f\u4e8e\u5f53\u524d\u8fb9\u7684\u8fb9\u624d\u4f1a\u5bf9\u5f53\u524d\u8fb9\u4ea7\u751f\u8d21\u732e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6240\u6709\u8fb9\u6392\u5e8f\u4e00\u904d\uff0c\u7136\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u4f46\u5982\u679c\u4e24\u6761\u8fb9\u518d\u540c\u4e00\u68f5\u5b50\u6811\u4e2d\uff0c\u8fd9\u4e2a\u8d21\u732e\u662f\u591a\u4f59\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8981\u5bf9\u6bcf\u4e2a\u5b50\u6811\u518d\u8dd1\u4e00\u904d\uff0c\u5728\u7b54\u6848\u4e2d\u51cf\u53bb\uff0c\u4ee5\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n\u56e0\u4e3a\u5408\u5e76\u65f6\u6211\u5df2\u7ecf\u5047\u8bbe\u5c0f\u4e8e\u5f53\u524d\u8fb9\u7684\u8fb9\u624d\u4f1a\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u7b54\u6848\u8981\u4e582\u518d\u8f93\u51fa\u3002\n\n\u6570\u636e\u597d\u50cf\u6bd4\u8f83\u6c34\uff08\u6ca1\u6709\u4ec0\u4e48**\u83ca\u82b1\u56fe\u52a0\u94fe\u52a0\u5b8c\u5168\u4e8c\u53c9\u6811**\uff09\uff0c\u6211\u5f00\u59cb\u597d\u50cf\u7528\u4e86\u4e00\u4e2a\u6709\u70b9\u9519\u8bef\u7684\u7b97\u6cd5\u6c34\u4e86\u8fc7\u53bb\uff1f\n\n```cpp#include<bits/stdc++.h>\n#define res register int\n#define ll long long\nusing namespace std;\nconst int N=100010;\nint L,R,n,k;\ninline int read(){\n    int ret=0;char c;\n    for(c=getchar();!isdigit(c);c=getchar());\n    for(;isdigit(c);ret=ret*10+c-'0',c=getchar());\n    return ret;\n}\nstruct BIT{\n    ll tr[N];\n    void add(int x,ll z){\n        if(x==0){tr[0]+=z;return;}\n        for(;x<N;x+=x&-x)tr[x]+=z;\n    }\n    ll query(int x){\n        if(x<0)return 0;\n        if(x==0)return tr[0];\n        ll ret=0;\n        for(;x;x-=x&-x)ret+=tr[x];\n        return ret;\n    }\n    void clear(int x){\n        if(x==0){tr[0]=0;return;}\n        for(;x<N;x+=x&-x)tr[x]=0;\n    }\n}tr;\nint tot,bian[N<<1],nxt[N<<1],zhi[N<<1],head[N];\ninline void add(int x,int y,int z){\n    tot++,bian[tot]=y,zhi[tot]=z,nxt[tot]=head[x],head[x]=tot;\n}\nint S,v[N],sz[N],mx[N],root;\nvoid getroot(int x,int f){\n    sz[x]=1,mx[x]=0;\n    for(res i=head[x];i;i=nxt[i]){\n        res y=bian[i];\n        if(f==y||v[y])continue;\n        getroot(y,x);\n        sz[x]+=sz[y];\n        mx[x]=max(mx[x],sz[y]);\n    }\n    mx[x]=max(mx[x],S-sz[x]);\n    if(mx[x]<mx[root]){\n        root=x;\n    }\n}\nvoid getsize(int x,int f){\n    sz[x]=1;\n    for(res i=head[x];i;i=nxt[i]){\n        res y=bian[i];\n        if(v[y]||y==f)continue;\n        getsize(y,x);\n        sz[x]+=sz[y];\n    }\n}\nlong long ans;\nstruct data{\n    int l,now,trnum;\n    data(int l=0,int now=0,int trnum=0):l(l),now(now),trnum(trnum){};\n};\nbool operator<(const data&x,const data&y){\n    if(x.now!=y.now)return x.now<y.now;\n    return x.l<y.l;\n}\nbool cmp(const data&x,const data&y){\n    if(x.trnum!=y.trnum)return x.trnum<y.trnum;\n    return x.now<y.now;\n}\nvector<data>q;\nint trcnt;\nvoid dfs1(int x,int f,int now,int l){\n    q.push_back(data(l,now,trcnt));\n    if(L<=l&&l<=R)ans+=now;\n    for(int i=head[x];i;i=nxt[i]){\n        int y=bian[i];\n        if(y==f||v[y])continue;\n        dfs1(y,x,max(now,zhi[i]),l+1);\n    }\n}\nvoid solve(int x,int f,int pre){\n    q.clear();\n    getsize(x,f);\n    v[x]=1;trcnt=0;\n    for(int i=head[x];i;i=nxt[i]){\n        int y=bian[i];\n        if(v[y]||y==f)continue;\n        trcnt++;\n        dfs1(y,x,zhi[i],1);\n    }\n    sort(q.begin(),q.end());\n    for(int len=q.size(),i=0;i<len;++i){\n        ans+=1ll*(tr.query(R-q[i].l)-tr.query(L-q[i].l-1))*q[i].now;\n        tr.add(q[i].l,1);\n    }\n    for(int len=q.size(),i=0;i<len;++i){\n        tr.clear(q[i].l);\n    }\n    sort(q.begin(),q.end(),cmp);\n    for(int now=0,i=head[x];i;i=nxt[i]){\n        int y=bian[i];\n        if(v[y]||y==f)continue;\n        sort(&q[now],&q[now+sz[y]]);\n        for(int j=now;j<now+sz[y];++j){\n            ans-=1ll*(tr.query(R-q[j].l)-tr.query(L-q[j].l-1))*q[j].now;\n            tr.add(q[j].l,1);\n        }\n        for(int j=now;j<now+sz[y];++j){\n            tr.clear(q[j].l);\n        }\n        now+=sz[y];\n    }\n    for(res i=head[x];i;i=nxt[i]){\n        res y=bian[i];\n        if(y==f||v[y])continue;\n        root=0;\n        S=sz[x]>sz[y]?sz[y]:pre-sz[x];\n        getroot(y,0);\n        solve(root,0,S);\n    }\n}\nint main(){\n    cin>>n>>L>>R;\n    for(res i=1;i<n;++i){\n    \tres x=read(),y=read(),z=read();\n        add(x,y,z);\n        add(y,x,z);\n    }\n    mx[0]=1e9;\n    S=n;\n    getroot(1,0);\n    solve(root,0,n);\n    cout<<ans*2<<endl;\n}\n```",
        "postTime": 1557023509,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5351 \u3010Ruri Loves Maschera\u3011"
    },
    {
        "content": "\u6765\u81ea\u4e00\u4f4d\u521a\u5b66\u70b9\u5206\u6cbb\u7684\u840c\u65b0\u7684\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u5bf9\u4f60\u6709\u5e2e\u52a9\u3002\n\n\u6211\u4eec\u5b9a\u4e49 $val_{i,j}=\\max \\{v_1,v_2,v_3,...,v_k \\}$ \uff0c\u5373 $i \\to j$ \u8def\u5f84\u7684\u9b54\u529b\u503c\uff0c $d_{i,j}$ \u4e3a $i \\to j$ \u4e0a\u7684\u8fb9\u6570\u3002\n\n\u9898\u610f\u5373\u6c42: $\\sum val_{i,j}[L\\le d_{i,j} \\le R]$\n\n\u76f8\u5f53\u4e8e\uff0c\u6bcf\u4e00\u5bf9\u70b9\u5bf9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6c42\u6ee1\u8db3\u67d0\u4e00\u6761\u4ef6\u7684\u6240\u6709\u70b9\u5bf9\u7684\u6743\u503c\u548c\u3002\n\n\u8fd9\u6837\u5c31\u5f88\u81ea\u7136\u7684\u53ef\u4ee5\u5f00\u59cb\u8003\u8651\u4f7f\u7528\u70b9\u5206\u6cbb\u3002\n\n\u8bbe\u6211\u4eec\u5f53\u524d\u9009\u53d6\u7684\u6839\u8282\u70b9 (\u5373\u539f\u6811\u91cd\u5fc3) \u662f $rt$\u3002\u8bb0 $mx_u=val_{u,rt},k_u=d_{u,rt}$, \u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $u$ \u5230 $rt$ \u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(mx_u,k_u)$\u3002\n\n\u8003\u8651\u5982\u4f55\u5408\u5e76\u3002\n\n\u5047\u5982\u6211\u4eec\u73b0\u5728\u6709\u4fe9\u6761\u8def\u5f84 $(mx_u,k_u), (mx_v,k_v)$ \uff0c\u4ed6\u4eec\u5408\u5e76\u540e\u7684\u8def\u5f84\u5c31\u662f $(\\max\\ \\{mx_u,mx_v \\},k_u+k_v)$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7b97\u8d21\u732e\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6761\u8def\u5f84\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u662f $\\max \\{mx_u,mx_v \\}$ ,\u53ef\u4ee5\u627e\u5230\u6709\u591a\u5c11 $mx_v$ \u6bd4 $mx_u$ \u5c0f\uff0c\u8bbe\u6709 $t$ \u4e2a\uff0c\u8fd9\u6837 $mx_u$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $k *mx_u$\u3002\n\n\u5509\u7b49\u7b49\uff0c\u73b0\u5728\u6211\u4eec\u597d\u50cf\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e2a**\u4e8c\u7ef4\u504f\u5e8f**\u95ee\u9898\u4e86\u3002\n\n\u5148**\u4e0d\u8003\u8651**\u4fe9\u4e2a\u70b9\u5728 $rt$ \u540c\u4e00\u4e2a\u7684\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5185\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a  $(mx_u,k_u)$ \u8981\u627e\u90fd\u6709\u591a\u5c11\u4e2a $(mx_v,k_v)$ \u6ee1\u8db3\u6761\u4ef6: \n\n$mx_v\\le mx_u$  \u4e14 $L-k_u\\le k_v \\le R-k_u$\n\n\u53ef\u4ee5\u5bf9 $mx$ \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 $k$ \u5373\u53ef\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u91c7\u7528\u5408\u5e76\u5b50\u6811\u7684\u505a\u6cd5\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e00\u6b21\u90fd\u9700\u8981\u91cd\u65b0\u6392\u5e8f\uff0c\u590d\u6742\u5ea6\u4f1a\u70b8\uff0c\u8003\u8651\u53ef\u52a0\u6027\u95ee\u9898\u53ef\u4ee5\u6574\u4e2a\u7b97\u5b8c\u540e\u518d\u51cf\u53bb\u5b50\u6811\u5185\u591a\u7b97\u7684\u8d21\u732e\u6765\u89e3\u51b3\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u5b9e\u73b0\u4e5f\u662f\u5f88\u7b80\u5355\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\u5373\u53ef\u3002\n\n# Code:\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N=1e5+5;\n\nstruct oi {\n\tint to;\n\tint w;\n\tint id;\n};\n\nstruct oi2 {\n\tint mx;\n\tint k;\n};\n\noi2 p[N];\nint cnt;\nvector<oi> b[N];\nint n,L,R;\nint sz,new_rt;\nint minn;\nint ans=0;\nint mx[N];\nint k[N];\nint siz[N];\nint vis[N];\nint c[N*2];\n\nvoid read() {\n\tcin>>n>>L>>R;\n\tfor(int i=1; i<=n-1; i++) {\n\t\tint u,v,w;\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\tb[u].push_back({v,w,i});\n\t\tb[v].push_back({u,w,i});\n\t}\n}\n\nvoid dfs(int u,int fa) {\n\tsiz[u]=1;\n\tint maxn=0;\n\tfor(int i=0; i<b[u].size(); i++) {\n\t\tint v=b[u][i].to;\n\t\tint id=b[u][i].id;\n\t\tif(vis[id]||v==fa) continue;\n\t\tdfs(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>maxn) maxn=siz[v];\n\t}\n\tmaxn=max(sz-siz[u],maxn);\n\tif(maxn<minn) {\n\t\tminn=maxn;\n\t\tnew_rt=u;\n\t}\n}\n\nint get_size(int u) {\n\tdfs(u,0);\n\treturn siz[u];\n}\n\nint find_core(int u) {\n\tminn=2e9;\n\tdfs(u,0);\n\treturn new_rt;\n}\n\nbool cmp(oi2 x,oi2 y) {\n\treturn x.mx<y.mx;\n}\n\nint lowbit(int x) {\n\treturn x&(-x);\n}\nvoid add(int x,int y) {\n\tfor(; x<=n; x+=lowbit(x)) c[x]+=y;\n}\nint query(int x) {\n\tint res=0;\n\tif(x<0) return 0;\n\tfor(; x; x-=lowbit(x)) res+=c[x];\n\treturn res;\n}\n\nvoid dfs2(int u,int fa,int val,int len) {// \u6c42\u51fa mx \u548c k \u6570\u7ec4\n\tmx[u]=val;\n\tk[u]=len;\n\tp[++cnt]=(oi2) {\n\t\tmx[u],k[u]\n\t};\n\tfor(int i=0; i<b[u].size(); i++) {\n\t\tint v=b[u][i].to;\n\t\tint w=b[u][i].w;\n\t\tint id=b[u][i].id;\n\t\tif(vis[id]||v==fa) continue;\n\t\tdfs2(v,u,max(val,w),len+1);\n\t}\n}\n\nint calc(int u,int k0) {\n\tcnt=0;\n\tdfs2(u,0,k0,(k0==0)?0:1);// \u89e3\u51b3\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\tsort(p+1,p+1+cnt,cmp);\n\tint res=0;\n\tfor(int i=1; i<=cnt; i++) {\n\t\tres+=(query(R-p[i].k+1)-query(L-p[i].k))*p[i].mx;\n\t\tadd(p[i].k+1,1);\n\t}\n\tfor(int i=1; i<=cnt; i++) add(p[i].k+1,-1);\n\treturn res;\n}\n\nvoid solve(int u) {\n\tsz=get_size(u);\n\tu=find_core(u);// \u627e\u91cd\u5fc3\n\tfor(int i=0; i<b[u].size(); i++) {\n\t\tint v=b[u][i].to;\n\t\tint w=b[u][i].w;\n\t\tint id=b[u][i].id;\n\t\tif(vis[id]) continue ;\n\t\tvis[id]=1;\n\t\tans-=calc(v,w);//\u51cf\u53bb\u5b50\u6811\u7684\u8d21\u732e\n\t\tvis[id]=0;\n\t}\n\tans+=calc(u,0);// \u7b97\u8d21\u732e\n\n\tfor(int i=0; i<b[u].size(); i++) {\n\t\tint v=b[u][i].to;\n\t\tint w=b[u][i].w;\n\t\tint id=b[u][i].id;\n\t\tif(vis[id]) continue;\n\t\tvis[id]=1;\n\t\tsolve(v);// \u70b9\u5206\u6cbb\u6a21\u677f\n\t\tvis[id]=0;\n\t}\n}\n\nsigned main() {\n\tread();\n\tsolve(1);\n\tcout<<ans*2<<endl;// \u7b54\u6848\u6700\u540e\u8981 *2\n\treturn 0;\n}\n\n```\n\n\n",
        "postTime": 1660786578,
        "uid": 175011,
        "name": "rfsfreffr",
        "ccfLevel": 6,
        "title": "P5351 Ruri Loves Maschera \u9898\u89e3"
    },
    {
        "content": "# \u7b2c\u4e00\u7bc7$C++$\u9898\u89e3\uff08\u597d\u4f24\u5fc3\uff0c\u544a\u522b$pascal$\uff09\n\n\u770b\u5230\u4e86\u201c\u4e0d\u5c11\u4e8e$L$\u6761\u4e14\u4e0d\u591a\u4e8e$R$\u6761\u9053\u8def\u201d\uff0c\u53c8\u662f\u6c42\u8def\u5f84\u4ef7\u503c\u548c\uff0c\u60f3\u5230\u7684\u4e5f\u53ea\u6709\u70b9\u5206\u6cbb\u4e86\u3002\n\n\u6211\u8ba4\u771f\u770b\u5b8c\u4e86\u9898\u76ee\uff0c\u53d1\u73b0\u8fd9\u9053\u9898\u548c[P4178 Tree](https://www.luogu.org/problemnew/show/P4178)\u975e\u5e38\u50cf\uff0cP4178\u5c31\u662f\u4ee4$v[i]=1$\u7684\u60c5\u51b5\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u628a\u90a3\u9053\u9898\u7684\u4ee3\u7801\u6284\u8fc7\u6765\uff0c\u6539\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66b4\u529b\u4ee3\u7801\uff0c\u6211\u7528\u7684\u662f\u6307\u9488\u626b\u63cf\u6570\u7ec4\u6cd5\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define int long long\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<typename T>\ninline void read(T &x)\n{\n    static char ch;int f=1;\n    for(x=0,ch=getchar();!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(;isdigit(ch);x=(x<<1)+(x<<3)+(ch^48),ch=getchar());x*=f;\n}\nstruct node{\n    int jia,point;\n} c[100001];\nint ver[200001],head[200001],edge[200001],nxt[200001],n,m,x,y,z,maxx,de[100001],minn,len[100001],len1,tot,gen,ans,L,R,tot1,k,s[100001];\nbool vis[100001];\ninline bool cmp(node x,node y) {return x.jia<y.jia;}\nvoid dfs1(int x,int fa) { //\u6c42\u5b50\u6811\u8282\u70b9\u6570\u91cf \n    len[x]=1;\n    for(res i=head[x];i;i=nxt[i]) {\n        if(vis[ver[i]]||ver[i]==fa) continue;\n        dfs1(ver[i],x),len[x]+=len[ver[i]];\n    }\n}\nvoid dfs2(int x,int fa,int tot) { //\u6c42\u6811\u7684\u91cd\u5fc3 \n    int max1=0;\n    for(res i=head[x];i;i=nxt[i]) {\n        if(vis[ver[i]]||ver[i]==fa) continue;\n        max1=max(max1,len[ver[i]]),dfs2(ver[i],x,tot);\n    }\n    max1=max(max1,tot-len[x]);if(max1<minn) minn=max1,gen=x;\n}\nvoid dfs3(int x,int fa,int deep) { //\u8fd9\u4e2adfs\u7528\u6765\u5904\u7406\u8ddd\u79bb\u548c\u9b54\u6cd5\u503c\n    de[x]=deep;\n    for(res i=head[x];i;i=nxt[i]) if(ver[i]!=fa&&!vis[ver[i]]) dfs3(ver[i],x,max(deep,edge[i]));\n}\nvoid dfs4(int x,int fa,int tot) {\n    if(tot>k) return;\n    c[++len1].jia=tot,c[len1].point=x;\n    for(res i=head[x];i;i=nxt[i]) if(ver[i]!=fa&&!vis[ver[i]]) dfs4(ver[i],x,tot+1);\n}\ninline void query(int x,int dat,int id) {\n    memset(s,0,sizeof(s));\n    len1=0,dfs4(x,0,dat),sort(c+1,c+1+len1,cmp);res l=1,r=len1;\n//\tfor(res i=1;i<=len1;++i) printf(\"%lld %lld %lld \",c[i].jia,c[i].point,de[c[i].point]);puts(\"\");\n    while(l<r) if(c[l].jia+c[r].jia<=k) {\n        for(res i=l+1;i<=r;++i) //\u6ce8\u610f\u8fd9\u91cc\u626b\u63cf\u7684\u8fb9\u754c\uff0c\u8fd9\u5c31\u8981\u770b\u70b9\u5206\u6cbb\u662f\u5426\u5b66\u4e86\u8fdb\u53bb\n        if(k==R) tot+=id*max(de[c[i].point],de[c[l].point]);\n        else tot1+=id*max(de[c[i].point],de[c[l].point]);\n        ++l;\n    }\n    else --r;\n}\nvoid dianfenzhi(int x) { //\u70b9\u5206\u6cbb\n    minn=1e9,dfs1(x,0),dfs2(x,0,len[x]),vis[x=gen]=true,dfs3(x,0,0),query(x,0,1);\n    for(res i=head[x];i;i=nxt[i]) if(!vis[ver[i]]) query(ver[i],1,-1);\n    for(res i=head[x];i;i=nxt[i]) if(!vis[ver[i]]) dianfenzhi(ver[i]);\n}\ninline void add(int x,int y,int z) {ver[++ans]=y,nxt[ans]=head[x],head[x]=ans,edge[ans]=z;}\nsigned main()\n{\n    read(n),read(L),read(R);\n    for(res i=1;i<n;++i) read(x),read(y),read(z),add(x,y,z),add(y,x,z);\n    k=R,dianfenzhi(1),k=L-1,memset(vis,false,sizeof(vis)),dianfenzhi(1); //\u6ce8\u610f\u521d\u59cb\u5316\uff0c\u4e00\u6b21dfs\u8fc7\u540evis\u672a\u6e05\u96f6\u4f1a\u6b7b\u7684\u5f88\u60e8\n//    printf(\"%lld %lld\\n\",tot,tot1);\n    printf(\"%lld\",(tot-tot1)<<1);\n    return 0;\n}\n```\n\n\u7136\u540e\u6211\u6ee1\u6000\u4fe1\u5fc3\u5730\u4ea4\u4e86\u4e0a\u53bb\u2026\u2026\n\n## \u5168\u90e8$TLE$!\n\n\u5f88\u5feb\u6211\u4eec\u4f1a\u53d1\u73b0\uff0cP4178\u4e2d\u626b\u63cf\u6570\u7ec4\u65f6\uff0c\u53ef\u4ee5$O(1)$\u8ba1\u7b97\u4ef7\u503c\uff0c\u7136\u800c\u672c\u9898\u4e2d\uff0c$max(de[c[l].point],de[c[i].point])$\u4e0d\u53ef\u80fd$O(1)$\u6c42\u51fa\uff0c\u4e8e\u662f\uff0c\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2logn)$\uff0c\u8fde\u6700\u5c0f\u7684\u6570\u636e\u90fd\u8fc7\u4e0d\u53bb\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u76ee\u524d\u70b9\u5206\u6cbb\u5230\u7684\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u8ba1\u7b97\u51fa\u5176\u4f59\u8282\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\u548c\u9b54\u6cd5\u503c\uff0c\u7136\u540e\u628a\u5b83\u4eec\u6309\u7167\u9b54\u6cd5\u503c\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8003\u8651\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u5de6\u8fb9\u7684\u8282\u70b9\u4e0e\u5b83\u6784\u6210\u7684\u8def\u5f84\u6240\u80fd\u83b7\u5f97\u7684\u9b54\u529b\u503c\u5c31\u662f\u5b83\u672c\u8eab\uff01\u540c\u7406\uff0c\u5b83\u7684\u53f3\u8fb9\u7684\u8282\u70b9\u6240\u80fd\u83b7\u5f97\u7684\u9b54\u529b\u503c\u5c31\u662f\u5b83\u7684\u53f3\u8fb9\u7684\u8282\u70b9\u7684\u9b54\u529b\u503c\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u51fa\u73b0\u6b21\u6570\u548c\u9b54\u6cd5\u503c\uff0c\u518d\u52a0\u4e0a\u6307\u9488\u626b\u63cf\u6570\u7ec4\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a$O(nlog^2n)$\u7684\u7b97\u6cd5\uff08\u867d\u7136\u6211\u8fd9\u8f88\u5b50\u7b2c\u4e00\u6b21\u542c\u8bf4\u70b9\u5206\u6cbb\u4e2d\u6811\u72b6\u6570\u7ec4\u80fd\u548c\u6307\u9488\u626b\u63cf\u4e00\u8d77\u4f7f\u7528\u7684\u2026\u2026\uff09\n\n\u6ce8\uff1a\u8fd9\u91cc\u7684\u6307\u9488\u626b\u63cf\u6570\u7ec4\u5e76\u4e0d\u662f\u4e8c\u5206\u7248\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e0d\u662f$O(nlog^3n)$\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define int long long\n#define lowbit(x) (x&(-x))\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<typename T>\ninline void read(T &x)\n{\n    static char ch;int f=1;\n    for(x=0,ch=getchar();!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(;isdigit(ch);x=(x<<1)+(x<<3)+(ch^48),ch=getchar());x*=f;\n}\nstruct node{\n    int jia,point;\n} c[100001];\nint ver[200001],head[200001],edge[200001],nxt[200001],n,m,x,y,z,maxx,de[100001],minn,len[100001],len1,tot,gen,ans,L,R,tot1,k,c1[100001],c2[100001],max2;\nbool vis[100001];\ninline bool cmp(node x,node y) {return x.jia<y.jia||(x.jia==y.jia&&de[x.point]<de[y.point]);}\nvoid dfs1(int x,int fa) { //\u6c42\u5b50\u6811\u8282\u70b9\u6570\u91cf \n    len[x]=1;\n    for(res i=head[x];i;i=nxt[i]) {\n        if(vis[ver[i]]||ver[i]==fa) continue;\n        dfs1(ver[i],x),len[x]+=len[ver[i]];\n    }\n}\nvoid dfs2(int x,int fa,int tot) { //\u6c42\u6811\u7684\u91cd\u5fc3 \n    int max1=0;\n    for(res i=head[x];i;i=nxt[i]) {\n        if(vis[ver[i]]||ver[i]==fa) continue;\n        max1=max(max1,len[ver[i]]),dfs2(ver[i],x,tot);\n    }\n    max1=max(max1,tot-len[x]);if(max1<minn) minn=max1,gen=x;\n}\nvoid dfs3(int x,int fa,int deep) {\n    de[x]=deep;\n    for(res i=head[x];i;i=nxt[i]) if(ver[i]!=fa&&!vis[ver[i]]) dfs3(ver[i],x,max(deep,edge[i]));\n}\nvoid dfs4(int x,int fa,int tot) {\n    if(tot>R) return;\n    c[++len1].jia=tot,c[len1].point=x;\n    for(res i=head[x];i;i=nxt[i]) if(ver[i]!=fa&&!vis[ver[i]]) dfs4(ver[i],x,tot+1);\n}\ninline void modify(int x,int y) {if(!x) ++x;for(res i=x;i<=max2;i+=lowbit(i)) c1[i]+=y,c2[i]+=x*y;} //\u6ce8\u610f\u6811\u72b6\u6570\u7ec4\u5f97\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0cc1\u8868\u793a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0cc2\u8868\u793a\u9b54\u6cd5\u503c*\u51fa\u73b0\u6b21\u6570\u3002\ninline int ask(int x) {\n    int tot1=0,tot2=0;\n    for(res i=max2;i;i^=lowbit(i)) tot2+=c2[i];\n    for(res i=x;i;i^=lowbit(i)) tot1+=c1[i],tot2-=c2[i];\n    return tot1*x+tot2; //tot1*x\u8868\u793a\u8be5\u6570\u5de6\u8fb9\uff0ctot2\u8868\u793a\u8be5\u6570\u53f3\u8fb9\n}\ninline void query(int x,int dat,int id) {\n    len1=0,dfs4(x,0,dat),sort(c+1,c+1+len1,cmp);res l=len1+1,r=len1,tot1=0;\n//\tfor(res i=1;i<=len1;++i) printf(\"%lld %lld %lld \",c[i].jia,c[i].point,de[c[i].point]);puts(\"\"); \n    for(res i=1;i<=len1;++i) { //\u8fd9\u91cc\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6307\u9488\u626b\u63cf\n//    \tprintf(\"pre=%lld\\n\",tot);\n    \twhile(l>1&&c[i].jia+c[l-1].jia>=L) modify(de[c[--l].point],1);\n    \twhile(r>=1&&c[i].jia+c[r].jia>R) modify(de[c[r--].point],-1);\n//    \tprintf(\"between=%lld\\n\",tot);\n    \ttot1+=ask(de[c[i].point]);\n//    \tprintf(\"now=%lld\\n\",tot);\n    }\n    while(l<=r) modify(de[c[r--].point],-1); //\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\uff0c\u6781\u5176\u91cd\u8981\uff01\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u5f88\u4e45\u5f88\u4e45\n//\tmemset(c1,0,sizeof(long long)*(max2+1));\n//\tmemset(c2,0,sizeof(long long)*(max2+1));\n    tot+=tot1*id;\n}\nvoid dianfenzhi(int x) {\n    minn=1e18,dfs1(x,0),dfs2(x,0,len[x]),vis[x=gen]=true,dfs3(x,0,0);\n    for(res i=head[x];i;i=nxt[i]) if(!vis[ver[i]]) query(ver[i],1,-1);query(x,0,1);\n    for(res i=head[x];i;i=nxt[i]) if(!vis[ver[i]]) dianfenzhi(ver[i]);\n}\ninline void add(int x,int y,int z) {ver[++ans]=y,nxt[ans]=head[x],head[x]=ans,edge[ans]=z;}\nsigned main()\n{\n    read(n),read(L),read(R);\n    for(res i=1;i<n;++i) read(x),read(y),read(z),add(x,y,z),add(y,x,z),max2=max(max2,z);\n    dianfenzhi(1);\n//    printf(\"%lld %lld\\n\",tot,tot1);\n    printf(\"%lld\",tot);\n    return 0;\n}\n```",
        "postTime": 1557232608,
        "uid": 43697,
        "name": "chenyewei_1234",
        "ccfLevel": 7,
        "title": "P5351 Ruri Loves Maschera"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5351)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io./2023/02/22/P5351%20Ruri%20Loves%20Maschera/)\n\n\u7b80\u5355\u7684\u6dc0\u7c89\u8d28\u677f\u5b50\u3002\n\n\n## \u5206\u6790\n\n\u8003\u8651\u7edf\u8ba1\u7ecf\u8fc7\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3 $u$ \u7684\u7b54\u6848\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $v \\in \\text{subtree}(u)$\uff0c\u6211\u4eec\u7ef4\u62a4 $d_v$ \u548c $w_v$\uff0c\u8868\u793a $u \\rightarrow v$ \u7684\u8fb9\u6570\u548c\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u5bf9\u6240\u6709\u70b9\u6309\u7167 $w$ \u8fdb\u884c\u6392\u5e8f\u3002\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u8ba1\u7b97\u4e00\u4e2a\u70b9 $v$ \u7684\u8d21\u732e\uff0c\u7531\u4e8e\u6309\u7167 $w$ \u6392\u5e8f\u8fc7\u4e86\uff0c\u6240\u4ee5\u5b83\u7684\u8d21\u732e\u5c31\u662f $w_v$ \u4e58\u4e0a\u6ee1\u8db3\u8def\u5f84\u957f\u5ea6\u7684\u8def\u5f84\u6761\u6570\uff0c\u540e\u9762\u7684\u95ee\u9898\u663e\u7136\u662f\u4e00\u4e2a BIT \u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u7528 $O(n \\log^2n)$ \u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n#define L(i, j, k) for(int i = (j); i <= (k); i++)\n#define R(i, j, k) for(int i = (j); i >= (k); i--)\n#define G(i, u) for (int i = h[(u)]; ~i; i = ne[i])\n#define ll long long\n#define ld long double\n#define ull unsigned long long\n\nusing namespace std;\nconst int N = 1e5 + 10;\nint h[N], e[N << 1], ne[N << 1], w[N << 1], idx;\nint vis[N];\nvector<pair<int, int> > now, all;\nint n, L, R;\nint tr[N];\nll res;\n\ninline int read() {\n    int x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\ninline void add(int a, int b, int c) {\n    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;\n}\n\ninline void add(int x, int v) {\n    for (; x <= n; x += x & -x) tr[x] += v;\n}\n\ninline int ask(int x) {\n    int res = 0;\n    for (; x; x -= x & -x) res += tr[x];\n    return res;\n}\n\ninline int getSize(int u, int p) {\n    if (vis[u]) return 0;\n    int res = 1;\n    G(i, u) if (e[i] != p) res += getSize(e[i], u);\n    return res;\n}\n\ninline int getRoot(int u, int p, int all, int &root) {\n    if (vis[u]) return 0;\n    int now = 0, sum = 1;\n    G(i, u) {\n        int v = e[i];\n        if (v == p) continue;\n        int k = getRoot(v, u, all, root);\n        now = max(now, k), sum += k;\n    }\n    now = max(now, all - sum);\n    if (now <= all / 2) root = u;\n    return sum;\n}\n\ninline void getDist(int u, int p, int dist, int pe) {\n    if (vis[u]) return;\n    now.push_back({pe, dist});\n    if (dist < R) G(i, u) if (e[i] != p) getDist(e[i], u, dist + 1, max(pe, w[i]));\n}\n\ninline ll calc(vector<pair<int, int> > &a) {\n    ll res = 0;\n    sort(a.begin(), a.end());\n    for (pair<int, int> t : a) res += 1ll * t.first * (ask(R - t.second) - ask(max(0, L - t.second - 1))), add(t.second, 1);\n    for (pair<int, int> t : a) add(t.second, -1);\n    return res;\n}\n\ninline void calc(int u) {\n    all.clear();\n    G(i, u) {\n        int v = e[i];\n        if (vis[v]) continue;\n        now.clear();\n        getDist(v, u, 1, w[i]);\n        res -= calc(now);\n        for (pair<int, int> t : now) all.push_back(t); \n    }\n    res += calc(all);\n    for (pair<int, int> t : all) if (t.second >= L) res += t.first;\n}\n\ninline void dfs(int u) {\n    if (vis[u]) return;\n    getRoot(u, -1, getSize(u, -1), u);\n    vis[u] = true;\n    calc(u);\n    G(i, u) dfs(e[i]);\n}\n\nint main() {\n    memset(h, -1, sizeof h);\n    n = read(), L = read(), R = read();\n    L(_, 1, n - 1) {\n        int a = read(), b = read(), c = read();\n        add(a, b, c), add(b, a, c);\n    }\n    dfs(1);\n    printf(\"%lld\\n\", res << 1);\n    return 0;\n}\n```\n\n",
        "postTime": 1677161741,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P5351"
    },
    {
        "content": "\u5148ORZ$Owen$\u4e00\u53d1\u3002\u611f\u89c9\u662f\u4e2a\u5f88\u5957\u8def\u7684\u9898\uff0c\u8fd9\u91cc\u7ed9\u4e00\u4e2a\u849f\u84bb\u7684\u9700\u8981\u7279\u5224\u6570\u636e\u7684\u4f2a$n\\log^2 n$\u7b97\u6cd5\uff0c\u771f\u6b63\u7684\u4e24\u53ea$\\log$\u7684\u8fd8\u662f\u53bb\u770b\u6807\u7b97\u5427\uff08\u4f46\u8fd9\u4e2a\u597d\u60f3\u597d\u5199\u8dd1\u4e0d\u6ee1\u554a\uff09\n\n\u9996\u5148\u8fd9\u79cd\u6811\u4e0a\u8def\u5f84\u7edf\u8ba1\u7684\u95ee\u9898\u6211\u4eec\u5148\u5957\u4e00\u4e2a**\u70b9\u5206\u6cbb**\u4e0a\u53bb\u5c31\u662f\u4e86\uff0c\u7136\u540e\u6c42\u51fa\u5206\u6cbb\u4e2d\u5fc3\u8fde\u51fa\u53bb\u7684\u6bcf\u4e00\u6761\u8def\u5f84\n\n\u6211\u4eec\u8fd8\u662f\u5957\u8def\u5730\u5206\u6210\u4e0d\u540c\u5b50\u6811\u6c42\u89e3\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u4e00\u6761\u8def\u5f84\u8bbe\u4e00\u4e2a**\u4e8c\u5143\u7ec4**$(dep,val)$\u8868\u793a\u5230\u5206\u6cbb\u4e2d\u5fc3\u7684\u6df1\u5ea6\u4ee5\u53ca\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5c31\u8003\u8651\u600e\u4e48\u628a\u4e00\u68f5\u5b50\u6811\u5185\u7684\u8def\u5f84\u548c\u5176\u5b83\u5b50\u6811\u7684\u5408\u5e76\u4e86\n\n\u8003\u8651\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7aef\u70b9\u9650\u5236\u600e\u4e48\u505a\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5b83\u4eec\u7684\u548c\u53d6\u503c\u90fd\u6ee1\u8db3\u5355\u8c03\u6027\n\n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u628a\u4e24\u8fb9\u90fd\u6309$dep$\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5$\\text{two points}$\u626b\u51fa\u4e00\u4e2a\u7aef\u70b9\u7684\u8303\u56f4\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e24\u4e2a\u7aef\u70b9\u600e\u4e48\u505a\uff0c\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u53ef\u4ee5\u9009\u7684\u70b9\u5f62\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\uff0c\u65e2\u7136\u8fd9\u4e2a\u533a\u95f4\u4e24\u4e2a\u7aef\u70b9\u90fd\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u8fd9\u4e2a\u533a\u95f4\u79fb\u52a8\u4e5f\u662f\u5355\u8c03\u7684\n\n\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u626b\u51fa\u6bcf\u4e2a\u70b9\u7684\u5408\u6cd5\u533a\u95f4\u4e4b\u540e\u8003\u8651\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\n\n\u9996\u5148\u6240\u6709\u6bd4\u5b83\u5c0f\u7684\u6570\u6700\u540e\u7684\u8d21\u732e\u90fd\u662f\u5b83\u7684\u6743\u503c\uff0c\u7136\u540e\u6240\u6709\u5927\u4e8e\u5b83\u7684\u6570\u7684\u8d21\u732e\u5373\u662f\u5b83\u4eec\u672c\u8eab\n\n\u6211\u4eec\u76f4\u63a5\u62ff\u4e24\u4e2a**\u6811\u72b6\u6570\u7ec4**\u6765\u7ef4\u62a4\uff0c\u4e00\u4e2a\u8bb0\u5f55\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u53e6\u4e00\u4e2a\u8bb0\u5f55\u6bd4\u5b83\u5927\u7684\u6570\u7684\u6743\u503c\u548c\uff0c\u76f4\u63a5\u8ddf\u7740\u6307\u9488\u4e00\u8d77\u6dfb\u5220\u70b9\u5373\u53ef\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5927\u90e8\u5206\u6d88\u8017\u5728\u6392\u5e8f\u4e0a\uff0c\u5982\u679c\u6bcf\u6b21\u66b4\u529b\u6392\u5e8f\u7684\u8bdd\u590d\u6742\u5ea6\u6700\u574f\u4f1a\u88ab\u5361\u5230$n^2\\log^2 n$\uff0c\u4f46\u662f\u5f88\u591a\u65f6\u5019\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u6ca1\u6709\u90a3\u4e48\u591a\uff0c\u6240\u4ee5\u8dd1\u8d77\u6765\u975e\u5e38\u5feb\uff0c\u5927\u81f4\u6bd4\u4e24\u4e2a$\\log$\u591a\u4e00\u4e9b\u5e38\u6570\u5427\n\n\u6240\u4ee5\u6211\u4eec\u5199\u5b8c\u4e4b\u540e\u7279\u5224\u4e00\u4e0b\u83ca\u82b1\u56fe\u5373\u53ef\uff0c\u8fd9\u4e2a\u66f4\u52a0\u7b80\u5355\uff0c\u56e0\u4e3a\u8def\u5f84\u957f\u5ea6\u53ea\u6709$1/2$\uff0c\u66b4\u529b\u6392\u5e8f\u540e\u679a\u4e3e\u4e00\u4e0b\u5373\u53ef\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define RI int\n#define CI const int&\n#define Tp template <typename T>\nusing namespace std;\ntypedef long long LL;\nconst int N=100005,INF=1e9;\nstruct edge\n{\n    int to,nxt,v;\n}e[N<<1]; int n,head[N],rst[N],num,cnt,L,R,x,y,z; LL ans; bool flag;\nclass FileInputOutput\n{\n    private:\n        static const int S=1<<21;\n        #define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n        char Fin[S],*A,*B;\n    public:\n        Tp inline void read(T& x)\n        {\n            x=0; char ch; while (!isdigit(ch=tc()));\n            while (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n        }\n        #undef tc\n}F;\ninline int min(CI a,CI b)\n{\n    return a<b?a:b;\n}\ninline void addedge(CI x,CI y,CI z)\n{\n    e[++cnt]=(edge){y,head[x],z}; head[x]=cnt;\n    e[++cnt]=(edge){x,head[y],z}; head[y]=cnt;\n}\nnamespace Case1 //Point Division Solver\n{\n    class Tree_Array\n    {\n        private:\n            int size[N]; LL sum[N]; bool vis[N];\n        public:\n            #define lowbit(x) x&-x\n            inline void add(CI x,CI y,CI opt,RI i=0)\n            {\n                for (i=x;i<=num;i+=lowbit(i)) size[i]+=opt;\n                for (i=x;i;i-=lowbit(i)) sum[i]+=opt*y;\n            }\n            inline int query_rk(RI x,int ret=0)\n            {\n                for (;x;x-=lowbit(x)) ret+=size[x]; return ret;\n            }\n            inline LL query_sum(RI x,LL ret=0)\n            {\n                for (;x<=num;x+=lowbit(x)) ret+=sum[x]; return ret;\n            }\n            #undef lowbit\n    }BIT;\n    #define to e[i].to\n    class Point_Division_Solver\n    {\n        private:\n            struct data\n            {\n                int dep,mxv;\n                friend inline bool operator < (const data& A,const data& B)\n                {\n                    return A.dep<B.dep;\n                }\n            }s[N]; int size[N],tot,pl[N],pr[N]; bool vis[N];\n            inline int max(CI a,CI b)\n            {\n                return a>b?a:b;\n            }\n            inline void maxer(int& x,CI y)\n            {\n                if (y>x) x=y;\n            }\n            inline void DFS(CI now,CI fa,CI d,CI mx)\n            {\n                s[++tot]=(data){d,mx}; if (L<=d&&d<=R) ans+=rst[mx];\n                for (RI i=head[now];i;i=e[i].nxt)\n                if (to!=fa&&!vis[to]) DFS(to,now,d+1,max(mx,e[i].v));\n            }\n        public:\n            int mx[N],ots,rt;\n            inline void getrt(CI now,CI fa=1)\n            {\n                size[now]=1; mx[now]=0;\n                for (RI i=head[now];i;i=e[i].nxt) if (to!=fa&&!vis[to])\n                getrt(to,now),size[now]+=size[to],maxer(mx[now],size[to]);\n                if (maxer(mx[now],ots-size[now]),mx[now]<mx[rt]) rt=now;\n            } \n            inline void solve(CI now)\n            {\n                RI i,j; vis[now]=1; tot=0; int lst=0;\n                for (i=head[now];i;i=e[i].nxt) if (!vis[to])\n                {\n                    DFS(to,now,1,e[i].v); sort(s+lst+2,s+tot+1); if (lst)\n                    {\n                        int p1=lst; for (j=lst+1;j<=tot;++j)\n                        {\n                            while (p1&&s[p1].dep+s[j].dep>R) --p1; pr[j]=p1; \n                        }\n                        int p2=1; for (j=tot;j>lst;--j)\n                        {\n                            while (p2<=lst&&s[p2].dep+s[j].dep<L) ++p2; pl[j]=p2;\n                        }\n                        p1=lst+1; p2=lst; for (j=lst+1;j<=tot;++j)\n                        {\n                            while (p1>pl[j]) --p1,BIT.add(s[p1].mxv,rst[s[p1].mxv],1);\n                            while (p2>pr[j]) BIT.add(s[p2].mxv,rst[s[p2].mxv],-1),--p2;\n                            ans+=1LL*BIT.query_rk(s[j].mxv)*rst[s[j].mxv]+BIT.query_sum(s[j].mxv+1);\n                        }\n                        for (j=p1;j<=p2;++j) BIT.add(s[j].mxv,rst[s[j].mxv],-1);\n                    }\n                    lst=tot; sort(s+1,s+lst+1);\n                }\n                for (i=head[now];i;i=e[i].nxt) if (!vis[to])\n                mx[rt=0]=INF,ots=size[to],getrt(to,now),solve(rt);\n            }\n    }PD;\n    #undef to\n    inline void solve(void)\n    {\n        sort(rst+1,rst+n); num=unique(rst+1,rst+n)-rst-1;\n        for (RI i=1;i<=cnt;++i) e[i].v=lower_bound(rst+1,rst+num+1,e[i].v)-rst;\n        PD.mx[PD.rt=0]=INF; PD.ots=n; PD.getrt(1); PD.solve(PD.rt); \n    }\n};\nnamespace Case2 //Flower Graph Solver\n{\n    inline void solve(void)\n    {\n        RI i; sort(rst+1,rst+n); if (L<=1&&1<=R)\n        for (i=1;i<n;++i) ans+=rst[i]; if (L<=2&&2<=R)\n        for (i=1;i<n;++i) ans+=1LL*rst[i]*(i-1);\n    }\n};\nint main()\n{\n    //freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n    RI i; for (F.read(n),F.read(L),F.read(R),flag=i=1;i<n;++i)\n    {\n        F.read(x); F.read(y); F.read(z);\n        addedge(x,y,z); rst[i]=z; if (min(x,y)!=1) flag=0;\n    }\n    if (flag) Case2::solve(); else Case1::solve();\n    return printf(\"%lld\",ans<<1LL),0;\n}\n```\n\n",
        "postTime": 1557322064,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5351 \u3010Ruri Loves Maschera\u3011"
    }
]