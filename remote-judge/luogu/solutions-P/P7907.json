[
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u5e8f\u5217\u7ef4\u62a4\u9898\u3002\n\n\u6ca1\u8bf4\u5728\u7ebf\u5c31\u5148\u79bb\u7ebf\u626b\u63cf\u7ebf\u3002\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u626b\u5230\u4e86 $r$\uff0c\u6211\u4eec\u8981\u5bf9\u6bcf\u4e00\u4e2a $l$ \u7ef4\u62a4\u51fa\u4e00\u4e2a $p_l$ \u8868\u793a $[l,p_l]$ \u662f $[l,r]$ \u7684\u4e00\u4e2a\u5408\u6cd5\u5b50\u533a\u95f4\u4e14 $p_l$ \u6700\u5c0f\u3002\n\n\u73b0\u5728\u8003\u8651\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a $p$ \u554a\u3002\u73b0\u5728\u6211\u4eec\u52a0\u5165\u4e86\u4e00\u4e2a $w_i$\uff0c\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $c$\uff0c\u90a3\u4e48 $[c+1,i]$ \u8fd9\u4e9b\u6570\u90fd\u9700\u8981\u5305\u542b\u5230 $i$ \u624d\u5408\u6cd5\u3002\u8fd9\u4e2a\u53ef\u4ee5\u533a\u95f4\u6253\u6807\u8bb0\u3002\n\n\u63a5\u4e0b\u6765\u601d\u8003\u67e5\u8be2\u600e\u4e48\u5b9e\u73b0\u3002\u73b0\u5728\u626b\u63cf\u5230\u4e86 $r$\uff0c\u5904\u7406\u8be2\u95ee $[l,r]$\u3002\u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u5927\u7684 $c$ \u6ee1\u8db3 $[c,r]$ \u662f $[l,r]$ \u7684\u5408\u6cd5\u5b50\u533a\u95f4\uff0c\u7b54\u6848\u5c31\u662f $i \\in [l,c], p_i-i$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u9996\u5148\u5982\u679c\u77e5\u9053\u8fd9\u4e2a\u533a\u95f4\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u7136\u540e\u533a\u95f4\u6253\u6807\u8bb0\u89e3\u51b3\u67e5\u8be2\u7684\u95ee\u9898\u3002\u73b0\u5728\u95ee\u9898\u6765\u5230\u4e86\u600e\u4e48\u627e\u8fd9\u4e2a $c$ \u4e0a\u3002\n\n\u6709\u5f88\u7b80\u5355\u7684 $O(n \\log n)$ \u7684\u7ef4\u62a4\u65b9\u6cd5\u3002\u8003\u8651\u4e00\u4e9b\u63a5\u8fd1\u7ebf\u6027\u7684\u65b9\u6cd5\u5427\u3002\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u626b\u63cf\u7ebf\u7684\u65f6\u5019\u7ef4\u62a4\u5e76\u67e5\u96c6\u4e0a\u6bcf\u4e2a\u7ed3\u70b9 $l$ \u7684\u6839 $c$ \u8868\u793a $[c,r]$ \u662f $[l,r]$ \u7684\u5408\u6cd5\u5b50\u533a\u95f4\u4e14 $c$ \u6700\u5927\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\u6ce8\u610f\u5230\u5728\u52a0\u5165 $w_i$ \u7684\u65f6\u5019\uff0c\u8bb0\u5176\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $c$\uff0c\u90a3\u4e48\u5c31\u4e0d\u518d\u9700\u8981 $c$ \u8fd9\u4e2a\u4f4d\u7f6e\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u5e76\u67e5\u96c6\u4e0a\u7ed3\u70b9 $c$ \u8fde\u5411\u7ed3\u70b9 $c+1$ \u5373\u53ef\u3002\n\n\u90a3\u4e48\u627e\u5230\u8fd9\u4e2a $c$ \u5c31\u53ea\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u5e76\u67e5\u96c6\u67e5\u8be2\u3002\u95ee\u9898\u89e3\u51b3\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\u5b58\u5728 $O(n \\log \\log n)$ \u7684\u505a\u6cd5\u3002\n\n```cpp\nint minn[8000005],tag[8000005];\ninline void push_up(int now){minn[now]=min(minn[lc(now)],minn[rc(now)]);}\ninline void push_down(int now,int l,int r)\n{\n\tif(tag[now])\n\t{\n\t\ttag[lc(now)]=tag[rc(now)]=tag[now];\n\t\tMm;\n\t\tminn[lc(now)]=tag[now]-mid+1,minn[rc(now)]=tag[now]-r+1;\n\t\ttag[now]=0;\n\t}\n}\nvoid modify(int l,int r,int now,int x,int y,int c)\n{\n\tif(x<=l && r<=y)\n\t{\n\t\ttag[now]=c;\n\t\tminn[now]=c-r+1;\n\t\treturn ;\n\t}\n\tpush_down(now,l,r);\n\tMm;\n\tif(x<=mid)\tmodify(l,mid,lc(now),x,y,c);\n\tif(mid<y)\tmodify(mid+1,r,rc(now),x,y,c);\n\tpush_up(now);\n}\nint query(int l,int r,int now,int x,int y)\n{\n\tif(x<=l && r<=y)\treturn minn[now];\n\tpush_down(now,l,r);\n\tMm,ret=1e9;\n\tif(x<=mid)\tret=min(ret,query(l,mid,lc(now),x,y));\n\tif(mid<y)\tret=min(ret,query(mid+1,r,rc(now),x,y));\n\treturn ret;\n}\nstruct unionFindSet{\n\tint fa[2000005];\n\tvoid makeSet(int up){for(int i=0;i<=up;++i)\tfa[i]=i;}\n\tint findSet(int x){return x==fa[x]?x:fa[x]=findSet(fa[x]);}\n\tint& operator [] (int x){return fa[x];}\n}ufs;\n#define mp make_pair\nvector<pair<int,int>> qry[2000005];\nint n,a[2000005],ans[2000005];\nint lst[2000005];\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)\ta[i]=read();\n\tufs.makeSet(n);\n\tint q=read();\n\tfor(int i=1;i<=q;++i)\n\t{\n\t\tint l=read(),r=read();\n\t\tqry[r].push_back(mp(l,i));\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tmodify(1,n,1,lst[a[i]]+1,i,i);\n\t\tif(lst[a[i]])\tufs[lst[a[i]]]=lst[a[i]]+1;\n\t\tlst[a[i]]=i;\n\t\tfor(auto st:qry[i])\n\t\t{\n\t\t\tint l=st.first,r=ufs.findSet(l);\n\t\t\tans[st.second]=query(1,n,1,l,r);\n\t\t}\n\t}\n\tfor(int i=1;i<=q;++i)\twrite(ans[i]),puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1662121039,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u5173\u4e8e\u5b8c\u5168\u542c\u4e0d\u61c2\u6570\u636e\u7ed3\u6784\u6ce2\u7279\u5728\u8bf4\u4ec0\u4e48\u7684\u4e8b"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4e00\u79cd\u7b80\u5355\u7684\u60c5\u51b5\uff1a\u67e5\u8be2\u533a\u95f4 $[1,n]$ \u7684\u5408\u6cd5\u6700\u77ed\u5b50\u533a\u95f4\u3002\n\n\u679a\u4e3e\u53f3\u7aef\u70b9 $r$\uff0c\u8003\u8651\u4e00\u4e2a\u5143\u7d20 $a_r$ \u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002\u8bbe $lst(i)$ \u4ee3\u8868\u5143\u7d20 $a_i$ \u4e0a\u4e00\u6b21\u7684\u51fa\u73b0\u4f4d\u7f6e\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u6709\u4ee5\u5de6\u7aef\u70b9 $l \\in [lst(r),r]$ \u7684\u533a\u95f4 $[l,r]$ \u5185\uff0c$a_r$ \u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5373\u533a\u95f4\u5185\u6570\u5b57\u79cd\u7c7b\u6570 $+1$\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u679a\u4e3e $r$ \u65f6\uff0c\u7ebf\u6bb5\u6811\u4e8c\u5206\u67e5\u627e\u6700\u5927\u7684\u5408\u6cd5\u5de6\u7aef\u70b9\u5373\u53ef\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u8003\u8651\u679a\u4e3e\u5de6\u7aef\u70b9 $l$\uff0c\u8bbe $nxt(i)$ \u8868\u793a\u5143\u7d20 $a_i$ \u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u6ce8\u610f\u5230\u5982\u679c\u4e00\u4e2a\u533a\u95f4 $[l',r']$ \u662f\u6ee1\u8db3\u8981\u6c42\u7684\u6700\u5c0f\u533a\u95f4\u7684\u8bdd\uff0c$a_{l'}$ \u4e0e $a_{r'}$ \u5fc5\u7136\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u5143\u7d20 $a_l$ \u5fc5\u7136\u53ea\u4f1a\u5bf9\u53f3\u7aef\u70b9 $r_i \\in [l,nxt(l)]$ \u7684\u533a\u95f4\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u5373\u5c06\u7b54\u6848\u8d4b\u503c\u4e3a\u4e86 $r_i-l+1$\u3002\u800c\u5f53\u5408\u6cd5\u533a\u95f4\u7684\u5de6\u7aef\u70b9 $l'$ \u56fa\u5b9a\u65f6\uff0c\u53f3\u7aef\u70b9 $r'$ \u7684\u53d6\u503c\u8303\u56f4\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u4e8c\u5206\u6c42\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684\u53f3\u7aef\u70b9 $r'$ \u6700\u5c0f\u5728\u54ea\u91cc\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int SIZE=2e6+10;\nconst int INF=0x3f3f3f3f;\n\nstruct Laffey{\n\n    #define ls(i) (i<<1)\n    #define rs(i) (i<<1|1)\n\n    int l,r;\n    int mn,lst;// mn \u4e3a\u7b54\u6848,lst\u4e3a\u5143\u7d20\u7684\u4e0a\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\n    int tag;\n\n    Laffey(int l=0,int r=0,int mn=INF,int lst=INF,int tag=-1):l(l),r(r),mn(mn),lst(lst),tag(tag){}\n\n    #define ls(i) (i<<1)\n    #define rs(i) (i<<1|1)\n\n}tree[SIZE<<2];\n\nvoid push_up(int i){\n\n    tree[i].mn=min(tree[ls(i)].mn,tree[rs(i)].mn);\n    tree[i].lst=min(tree[ls(i)].lst,tree[rs(i)].lst);\n\n}\n\nvoid update(int i,int k){\n\n    tree[i].tag=k;\n    tree[i].mn=tree[i].l-k;\n\n}\n\nvoid push_down(int i){\n    \n    if(tree[i].tag==-1) return ;\n    update(ls(i),tree[i].tag);\n    update(rs(i),tree[i].tag);\n    tree[i].tag=-1;\n\n}\n\nint lst[SIZE];\nvoid build(int l,int r,int i){\n\n    tree[i].l=l,tree[i].r=r;\n    if(l==r)\n    {\n        tree[i].lst=lst[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(l,mid,ls(i));\n    build(mid+1,r,rs(i));\n    push_up(i);\n\n}\n\nint query_pos(int l,int r,int i){\n\n    if(tree[i].l>r||tree[i].lst>=l) return 0;\n    if(tree[i].l==tree[i].r) return tree[i].l;\n    push_down(i);\n    int res=query_pos(l,r,rs(i));\n    if(!res) res=query_pos(l,r,ls(i));\n    return res;\n\n}\n\nvoid cover(int l,int r,int i){\n\n    if(tree[i].l>=l&&tree[i].r<=r)\n    {\n        update(i,l-1);\n        return ;\n    }\n    push_down(i);\n    if(tree[ls(i)].r>=l) cover(l,r,ls(i));\n    if(tree[rs(i)].l<=r) cover(l,r,rs(i));\n    push_up(i);\n\n}\n\nint query_min(int l,int r,int i){\n\n    if(tree[i].l>=l&&tree[i].r<=r)\n        return tree[i].mn;\n    int Min=INF;\n    push_down(i);\n    if(tree[ls(i)].r>=l) Min=min(Min,query_min(l,r,ls(i)));\n    if(tree[rs(i)].l<=r) Min=min(Min,query_min(l,r,rs(i)));\n    return Min;\n\n}\n\nstruct QUES{\n\n    int l,r,id;\n\n}qqq[SIZE];\n\nbool cmp(QUES x,QUES y){\n\n    return x.l<y.l;\n\n}\n\nint t[SIZE],a[SIZE];\nint ans[SIZE];\nint main(){\n\n    int n;\n    cin>>n;\n\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n        lst[i]=t[a[i]];\n        t[a[i]]=i;\n    }\n\n    for(int i=1;i<=n;i++)\n        t[i]=n+1;\n\n    build(1,n,1);\n    int q;\n    cin>>q;\n    for(int i=1;i<=q;i++)\n        cin>>qqq[i].l>>qqq[i].r,qqq[i].id=i;\n\n    sort(qqq+1,qqq+q+1,cmp);\n\n    int now=q;\n    for(int i=n;i>=1;i--)\n    {\n        cover(i,t[a[i]]-1,1);\n        t[a[i]]=i;\n        while(now>=1&&qqq[now].l==i)\n        {\n            int tmp=query_pos(i,qqq[now].r,1);\n            ans[qqq[now].id]=query_min(tmp,qqq[now].r,1);\n            now--;\n        }\n    }\n\n    for(int i=1;i<=q;i++)\n        cout<<ans[i]<<endl;\n\n    return 0;\n\n}\n```\n\n",
        "postTime": 1662334199,
        "uid": 335136,
        "name": "LordLaffey",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P7907 [Ynoi2005] rmscne"
    },
    {
        "content": "- \u6b64\u9898\u4e3a\u5f00\u6446\u8ba1\u5212 T7\u3002\n- \u611f\u8c22[\u5946\u4f6c](https://www.luogu.com.cn/user/109942)\u4e3a\u6b64\u9898\u89e3\u6cd5\u505a\u51fa\u7684\u542f\u53d1\uff08\u4f46\u662f\u5946\u4f6c\u5f53\u65f6\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u539f\u9898\u662f[\u8fd9\u9053](https://www.luogu.com.cn/problem/P7907)\uff09\u3002\n\n**[\u9898\u610f](https://www.luogu.com.cn/problem/U233831)**\n- \u7ed9\u5b9a\u6570\u5217\u548c\u591a\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u67e5\u8be2\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6\u7684\u533a\u95f4\u7684\u6700\u5c0f\u957f\u5ea6\uff1a\u539f\u533a\u95f4\u7684\u5b50\u533a\u95f4\uff0c\u5305\u542b\u539f\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u6570\u3002\n\n**\u5206\u6790**\n- \u9996\u5148\u6709 $O(nq)$ \u7684\u53cc\u6307\u9488\u66b4\u529b\uff0c\u5148\u5199\u4e00\u4e2a\uff0c\u9632\u6b62\u5199\u6302\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/k8jqkv80)\u3002\n- \u539f\u95ee\u9898\u6bd4\u8f83\u8df3\u8dc3\uff0c\u8ba9\u6211\u4eec\u7b80\u5316\u4e00\u4e2a\u6761\u4ef6\u5427\u5c31\u50cf[\u8fd9\u9898](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/post-jiu-shi-zhong-ti-fen-tang-guo)\u4e00\u6837\uff0c\u6bd4\u5982\u5047\u5b9a\u7ed9\u5b9a\u533a\u95f4\u5fc5\u987b\u662f\u539f\u533a\u95f4\u7684\u540e\u7f00\uff0c\u6709\u4ec0\u4e48\u7b80\u5355\u7684\u65b9\u6cd5\u5417\uff1f\u6211\u4eec\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u8fd9\u4e2a\u533a\u95f4\u6700\u540e\u51fa\u73b0\u7684\u6570\u3002\n- \u6839\u636e[\u8fd9\u9898](https://www.luogu.com.cn/problem/P1972)\u7684\u7ecf\u5178\u8001\u5957\u8def\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5904\u7406\u51fa\u5b83\u4e0b\u4e00\u4e2a\u76f8\u540c\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u5229\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u8f7b\u677e\u627e\u5230\u3002\n- \u63a5\u4e0b\u6765\u54b1\u4eec\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\uff08\u8bbe $S'(l,r)$ \u4e3a\u5f31\u5316\u7248\u8be2\u95ee\u7684\u7b54\u6848\uff0c$\\text{pre}(l,r)$ \u4e3a\u533a\u95f4 $[l,r]$ \u5185\u6240\u6709\u6570\u524d\u9a71\u7684\u6700\u5c0f\u4f4d\u7f6e\uff09\uff1a\n$$\\min_{r'\\le r,l\\le \\text{pre}(r'+1,r)}S'(l,r')$$\n- \u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u5de6\u7aef\u70b9\u56fa\u5b9a\uff0c\u53f3\u7aef\u70b9\u5728\u4e00\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\uff08\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5728\u54ea\u4e2a\u533a\u95f4\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u968f\u4fbf\u6c42\uff09\uff0c\u8003\u8651\u626b\u63cf\u7ebf\u3002\n- \u4ece\u5927\u5230\u5c0f\u679a\u4e3e $l$ \u66f4\u65b0 $S(l,r')$ \u4f60\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u4e0b\u6807\u4e3a $l$ \u5230 $\\text{next}(a_l)$ \u7684\u70b9\uff0c\u5168\u90fd\u88ab\u8d4b\u503c\u4e3a $r'-l+1$\uff0c\u5426\u5219\u4e00\u5b9a\u4e0d\u53d8\u3002\n- \u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u7b80\u5355\u5230\u7206\u7684\u64cd\u4f5c\uff1a\u533a\u95f4\u8d4b\u503c $k=1$ \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u533a\u95f4\u6c42 $\\min$\uff0c\u590d\u6742\u5ea6 $O((n+q)\\log n)$\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/16bixtl5)\u3002",
        "postTime": 1661175429,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u5f00\u6446\u8ba1\u5212#1\u3011\u6570\u5217\u9759\u6001\u67e5\u8be2\u57fa\u7840\u7ec3\u4e60\u9898"
    },
    {
        "content": "\n\u8fd9\u4e1c\u897f\u5728\u7ebf\u4e0d\u592a\u80fd\u505a\uff0c\u8003\u8651\u79bb\u7ebf\u626b\u63cf\u3002\u626b\u63cf\u53f3\u7aef\u70b9 $r$\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e $l$ \u7ef4\u62a4\u4e00\u4e2a $p_l$ \u8868\u793a\u6700\u5c0f\u7684 $p$ \u4f7f\u5f97 $[l,p]$ \u662f $[l,r]$ \u7684\u5408\u6cd5\u5b50\u533a\u95f4\u3002\n\n\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $p_l$\u3002\u8003\u8651\u65b0\u52a0\u5165\u7684\u53f3\u7aef\u70b9 $r$\uff0c\u52a0\u5165\u4e00\u4e2a\u6570 $a_r$\uff0c\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $lst_{a_r}=c$\uff0c\u90a3\u4e48\u5bf9\u4e8e $c$ \u548c\u4ee5\u524d\u7684\u4f4d\u7f6e\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff1b\u800c $(c,r]$ \u8fd9\u6bb5\u533a\u95f4\u7531\u4e8e\u6ca1\u6709 $a_r$ \u8fd9\u4e2a\u6570\uff0c\u90a3\u4e48\u76f4\u63a5\u8986\u76d6\u4e3a $r$ \u5373\u53ef\u3002\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8003\u8651\u67e5\u8be2\uff0c\u5f53\u524d\u626b\u63cf\u5230 $r$\uff0c\u8be2\u95ee $[l,r]$\u3002\u4ee4 $q_l$ \u4e3a\u6700\u5927\u7684 $q$ \u4f7f\u5f97 $[q,r]$ \u5408\u6cd5\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u7b54\u6848\u5c31\u662f $\\min\\limits_{i\\in[l,q_l]}\\{p_i-i\\}$\u3002\u8fd9\u4e1c\u897f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u4f46\u662f\u591a\u5e26\u4e86\u4e00\u534a\u5e38\u6570\uff0c\u4f30\u8ba1\u8fc7\u4e0d\u53bb\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u5999\u7684\u5e76\u67e5\u96c6\u505a\u6cd5\uff0c\u5b66\u4f1a\u4e86\u3002\n\n\u5c31\u662f\u8981\u5bf9\u6bcf\u4e2a $l$ \u7ef4\u62a4 $q_l$\uff0c\u5f53\u63d2\u5165 $r$ \u524d\u5df2\u7ecf\u6709\u4e00\u4e2a $lst_{a_r}$ \u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06 $q_{lst_{a_r}}\\to lst_{a_r}+1$ \u5373\u53ef\u3002\u56e0\u4e3a $q_l$ \u76f8\u5f53\u4e8e $[l,r]$ \u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u7684 $lst$ \u53d6 $\\min$\uff0c $lst_{a_r}$ \u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u66ff\u6362\u6210 $r$ \u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u6c42 $q_{lst_{a_r}+1}$ \u5373\u53ef\u3002\n\n---\n\nupd : \u5199\u5b8c\u4e86\uff0c\u7adf\u7136\u662f\u6700\u4f18\u89e3\u524d\u4e09\u3002\n\n```cpp\nconst int maxn = 2e6 + 200;\nconst int inf = 1e9;\nstruct seg { int mn, co; seg () { mn = inf, co = -1; } } tr[maxn << 2];\nint n, m, a[maxn], lst[maxn], ans[maxn], fa[maxn];\ntu3 q[maxn];\n\nint getf(int x) { return x == fa[x] ? x : fa[x] = getf(fa[x]); }\n#define ls x << 1\n#define rs x << 1 | 1\n#define mid ((l + r) >> 1)\nvoid pushup(int x) { tr[x].mn = min(tr[ls].mn, tr[rs].mn); }\nvoid pushcov(int x, int l, int r, int c) { tr[x].co = c, tr[x].mn = c - r + 1; }\nvoid pushdown(int x, int l, int r) {\n    if (tr[x].co == -1) return; \n    pushcov(ls, l, mid, tr[x].co);\n    pushcov(rs, mid + 1, r, tr[x].co);\n    tr[x].co = -1;\n}\n\nvoid update(int l, int r, int s, int t, int c, int x) {\n    if (s <= l && r <= t) return pushcov(x, l, r, c);\n    pushdown(x, l, r);\n    if (s <= mid) update(l, mid, s, t, c, ls);\n    if (t > mid) update(mid + 1, r, s, t, c, rs);\n    pushup(x);\n}\n\nint query(int l, int r, int s, int t, int x) {\n    if (s <= l && r <= t) return tr[x].mn;\n    pushdown(x, l, r);\n    int res = inf;\n    if (s <= mid) res = min(res, query(l, mid, s, t, ls));\n    if (t > mid) res = min(res, query(mid + 1, r, s, t, rs));\n    return res;\n}\n\nsigned main() {\n    n = read();\n    for (int i = 1; i <= n; i++) a[i] = read(), fa[i] = i;\n    m = read();\n    for (int i = 1; i <= m; i++) {\n        int l = read(), r = read();\n        q[i] = mt(r, l, i);\n    }\n    sort(q + 1, q + m + 1);\n    for (int i = 1, p = 1; i <= m; i++) {\n        int l = get<1>(q[i]), r = get<0>(q[i]), id = get<2>(q[i]);\n        while (p <= r) {\n            update(1, n, lst[a[p]] + 1, p, p, 1);\n            if (lst[a[p]]) fa[lst[a[p]]] = lst[a[p]] + 1;\n            lst[a[p]] = p;\n            p++;\n        }\n        r = getf(l);\n        ans[id] = query(1, n, l, r, 1);\n    }\n    for (int i = 1; i <= m; i++) \n        write(ans[i]), puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1677901230,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "Ynoi2005 rmscne"
    },
    {
        "content": "\u770b\u89c1\u79bb\u7ebf\u5148\u4e0a\u4e2a\u626b\u63cf\u7ebf\uff0c\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u7b54\u6848\u3002\r\n\r\n\u8bb0 $a_i$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $pre_i$\uff0c\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $nxt_i$\u3002\u8bbe $c_i$ \u4e3a\u6700\u5c0f\u7684\u4f4d\u7f6e\u6ee1\u8db3 $[i,c_i]$ \u5305\u62ec\u4e86 $[i,r]$ \u95f4\u51fa\u73b0\u7684\u6570\u3002\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a $a_r$ \u5bf9 $c$ \u6570\u7ec4\u7684\u5f71\u54cd\u3002\u5bf9\u4e8e $(pre_r,r]$ \u4e2d\u7684\u6570\u6765\u8bf4\uff0c\u5982\u679c\u8981\u6db5\u76d6 $[i,r]$ \u7684\u6240\u6709\u6570\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u5c06\u533a\u95f4\u6269\u5c55\u5230 $r$\uff0c\u800c\u52a0\u5165 $a_r$ \u5bf9 $pre_r$ \u53ca\u4ee5\u524d\u65e0\u5f71\u54cd\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\u533a\u95f4\u63a8\u5e73\u3002\r\n\r\n\u8003\u8651\u5982\u4f55\u56de\u7b54\u8be2\u95ee\u3002\u6211\u4eec\u8bbe $pos$ \u4e3a\u4e00\u4e2a\u6700\u9760\u540e\u7684\u4f4d\u7f6e\u6ee1\u8db3 $[pos,r]$ \u5305\u62ec\u4e86 $[l,r]$ \u7684\u6240\u6709\u6570\u3002\u5982\u679c\u6211\u4eec\u6c42\u5f97\u4e86 $pos$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2 $[l,pos]$ \u95f4\u7684 $c_i-i$ \u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\u73b0\u5728\u8003\u8651\u5982\u4f55\u6c42\u51fa $pos$\u3002\u663e\u7136\u5bf9\u4e8e\u8fd9\u4e2a $pos$ \u4e00\u5b9a\u8981\u6ee1\u8db3 $i\\in [l,pos-1],nxt_i\\le r$\u3002\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981 $O(n\\log n)$ \u6b21\u6c42\u4e00\u4e2a\u533a\u95f4\u4e2d $nxt$ \u7684\u6700\u5927\u503c\u3002\u8fd9\u4e2a\u6211\u4eec\u7528 st \u8868\u5373\u53ef\u3002\u603b\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\r\n\r\n\u4ea4\u4e86\u53d1 T \u6389\u4e86\uff0c\u6b7b\u6d3b\u5361\u4e0d\u8fdb\u53bb\uff0c\u563f\u563f\u563f\u54c8\u3002\r\n\r\n\u770b\u4e86\u773c\u9898\u89e3\u533a\u53d1\u73b0\u6709\u5f88\u9ad8\u5999\u7684\u5e76\u67e5\u96c6\u505a\u6cd5\uff0c\u5927\u6982\u5c31\u662f\u8bf4\u5b9a\u4e49\u5e76\u67e5\u96c6\u4e2d $x$ \u7684\u6839 $y$ \u4e3a\u6700\u9760\u540e\u7684\u4f4d\u7f6e\uff0c\u4e14\u6ee1\u8db3 $[y,r]$ \u5305\u542b\u4e86 $[x,r]$ \u51fa\u73b0\u7684\u6570\u3002\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a $r$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6839\u4e3a $pre_r$ \u7684\u4f4d\u7f6e\u6765\u8bf4\uff0c$pre_r$ \u5df2\u4e0d\u518d\u662f\u74f6\u9888\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5f80\u540e\u63a8\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u90a3\u6211\u4eec\u76f4\u63a5\u5c06 $pre_r$ \u5e76\u5230 $pre_r+1$ \u5373\u53ef\u3002\u89e3\u91ca\u4e0b\u8fd9\u4e48\u505a\u4e3a\u4ec0\u4e48\u6b63\u786e\uff1a\u8bbe $pre_r+1$ \u5728\u5e76\u67e5\u96c6\u4e2d\u7684\u6839\u4e3a $x$\uff0c\u90a3\u4e48 $[x,r-1]$ \u4e00\u5b9a\u5305\u542b\u4e86 $[pre_r+1,r-1]$ \u4e2d\u51fa\u73b0\u7684\u6570\u3002\u800c $pre_r$ \u5df2\u7ecf\u88ab $r$ \u8865\u4e86\uff0c\u6240\u4ee5\u52a0\u5165 $r$ \u540e  $[x,r]$ \u5fc5\u7136\u5305\u542b\u4e86 $[pre_r,r]$ \u4e2d\u51fa\u73b0\u7684\u6570\uff0c\u90a3\u4e48 $pre_r$ \u7684\u533a\u95f4\u5c31\u53ef\u4ee5\u63a8\u5230 $x$\u3002\u6240\u4ee5\u76f4\u63a5\u5408\u5e76\u662f\u6b63\u786e\u7684\u3002\u4f60\u53d1\u73b0\u597d\u5b9e\u73b0\u5e38\u6570\u8fd8\u5c0f\uff0c\u4e8e\u662f\u4f60\u5c31\u8fc7\u4e86\uff0c\u590d\u6742\u5ea6\u4e0d\u53d8\uff0c\u8fd8\u662f $O((n+q)\\log n)$\u3002\r\n\r\n\u4ee3\u7801\u4e0d\u7ed9\uff0c\u9700\u8981\u79c1\u4fe1\u3002",
        "postTime": 1663257736,
        "uid": 376149,
        "name": "sunset1028",
        "ccfLevel": 0,
        "title": "P7907 [Ynoi2005] rmscne \u9898\u89e3"
    },
    {
        "content": "**P7907 sol**\u3002\n\n\u6ce8\u610f\u8f6c\u5316\u9898\u610f\u7684\u65b9\u5411\u3002\n\n\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u4e00\u79cd\u6bd4\u8f83\u5957\u8def\u7684\u8f6c\u5316\u9898\u610f\u7684\u65b9\u5411\uff1a\u8bb0\u533a\u95f4 $[l_i,r_i]$ \u7684\u989c\u8272\u6570\u4e3a $c_i$\uff0c\u67e5\u8be2\u533a\u95f4\u5185\u957f\u5ea6\u6700\u77ed\u7684\u6ee1\u8db3\u989c\u8272\u6570\u7b49\u4e8e $c_i$ \u7684\u5b50\u533a\u95f4\u957f\u5ea6\u3002\n\n\u4e2a\u4eba\u5c1d\u8bd5\u4e86\u5f88\u4e45\u597d\u50cf\u90fd\u6709\u70b9\u840e\u2026\u2026\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u6709\u9ad8\u624b\u7528\u8fd9\u4e2a\u8f6c\u5316\u65b9\u5411\u505a\u51fa\u6765\u3002\n\n-------------------------------------------------------\n\n\u8003\u8651\u8fd9\u4e00\u7c7b\u95ee\u9898\u5e38\u7528\u7684\u626b\u63cf\u7ebf\u7ef4\u62a4 lst\uff0c\u6b64\u5904\u7528 $a$ \u8868\u793a\u539f\u5e8f\u5217\u3002\n\nlst \u5373\u5728\u626b\u63cf\u7ebf\u65f6\u4e00\u4e2a\u989c\u8272 $x$ \u5728 $[1,r]$ \u5185\u6700\u540e\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u7b80\u5355\u7684\u6027\u8d28\uff1a\n\n- \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5408\u6cd5\u533a\u95f4 $[l',r']$\uff0c\u5047\u8bbe\u67e5\u8be2\u533a\u95f4\u4e3a $[l,r]$\uff0c\u5219\u663e\u7136 $\\min_{i = l} ^ r lst_{a_i} \\geq l'$\u3002\u5426\u5219\u5728 $[l,l')$ \u7684\u533a\u95f4\u5185\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u989c\u8272 $x \\in [l,r] \\wedge x \\not \\in [l',r']$\u3002\n\n- \u663e\u7136\u4e0a\u8ff0\u7684\u6761\u4ef6\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u5408\u6cd5\u7684 $l'$ \u4f1a\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u5e76\u4e14\u6b64\u65f6\u6bcf\u4e2a\u5de6\u7aef\u70b9\u5de6\u8fb9\u7684\u989c\u8272\u4fe1\u606f\u662f\u65e0\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5fc5\u5b9a\u5728 $l'$ \u4e4b\u540e\u51fa\u73b0\u8fc7\u3002\n\n- \u8003\u8651\u5728\u628a $r$ \u5411\u53f3\u626b\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5c06 $[lst_{a_r} + 1 , r]$ \u533a\u95f4\u5185\u7684\u6240\u6709\u5019\u9009\u7aef\u70b9 $l'$ \u628a\u533a\u95f4\u4f38\u5c55\u5230 $r$\uff0c\u5426\u5219\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u5de6\u7aef\u70b9\u65e0\u6cd5\u53d6\u5230\u5f53\u524d\u7684\u989c\u8272 $a_r$\u3002\u663e\u7136\u8fd9\u4e2a\u4fe1\u606f\u662f\u53ef\u4ee5\u4f5c\u4e3a\u6807\u8bb0\u4e0b\u653e\u7684\u3002\n\n\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f lst\uff0c\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u914d\u5bf9\u5173\u7cfb\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n + q) \\log n)$\uff0c\u7a7a\u95f4\u7ebf\u6027\u3002\n\n\u5b58\u5728\u4e00\u79cd $O((n + q) \\log \\log n)$ \u65f6\u7a7a\u590d\u6742\u5ea6\u7684\u505a\u6cd5\uff0c\u6211\u4e89\u53d6\u53bb\u7814\u7a76\u4e00\u4e0b\u3002",
        "postTime": 1662106100,
        "uid": 782894,
        "name": "Kuon",
        "ccfLevel": 0,
        "title": "\u53ea\u662f\u671b\u7740\u4f60\u7684\u53d1\u4e1d\u548c\u773c\u775b\uff0c\u6211\u5c31\u4f1a\u5fc3\u75bc"
    },
    {
        "content": "\u8fd9\u9898\u4e5f\u592a\u51b7\u95e8\u4e86\u70b9\u2026\u2026\u5168\u7f51\u641c\u4e0d\u5230\u9898\u89e3\u3002\uff08Update\uff1a\u5f53\u6211\u6ca1\u8bf4\uff0cBing\u641c\u5230\u4e86\uff0c\u5783\u573e\u767e\u5ea6\uff09\n\n\u611f\u8c22[\u5de8\u4f6c](https://www.luogu.com.cn/user/260884)\u7684\u8010\u5fc3\u8bb2\u89e3\u3002\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u957f\u4e3a $n$ \u7684\u5e8f\u5217\uff0c$q$ \u6b21\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u7684\u6700\u77ed\u5b50\u533a\u95f4 $[l',r']$\uff0c\u6ee1\u8db3\u6240\u6709\u5728 $[l,r]$ \u4e2d\u51fa\u73b0\u7684\u6570\u4e5f\u5728 $[l',r']$ \u4e2d\u51fa\u73b0. \u8f93\u51fa $[l',r']$ \u7684\u957f\u5ea6 $r'-l'+1$\u3002\n\n## \u5206\u6790\n\n\u5229\u7528\u53cc\u6307\u9488\u53ef\u4ee5\u5199\u51fa $O(nq)$\uff0c\u4f46\u662f\u663e\u7136\u8fc7\u4e0d\u4e86\u8fd9\u9053\u9898\u3002\n\n\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u8003\u8651\u79bb\u7ebf\u7b97\u6cd5\uff1a\u626b\u63cf\u7ebf\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u53ef\u4ee5\u5904\u7406\u51fa\u5b83\u4e0a\u4e00\u6b21\u548c\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u5728\u533a\u95f4 $[l, r]$ \u5185\uff0c\u6211\u4eec\u6240\u6c42\u6700\u5c0f\u533a\u95f4\u7684\u53f3\u7aef\u70b9 $r'$ \u6ee1\u8db3 $r' \\leq r, \\operatorname{pre}(r' + 1, r) \\geq l$\u3002\u5176\u4e2d $\\operatorname{pre}(r' + 1, r)$ \u4ee3\u8868\u4ece $r' + 1$ \u5230 $r$ \u4e2d\u7684\u6240\u6709\u6570\u4e0a\u6b21\u51fa\u73b0\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u3002\n\n\u5bf9\u4e8e\u5df2\u77e5\u7684 $l, r$\uff0c\u53ef\u4ee5\u6c42\u5f97 $r'$ \u7684\u8303\u56f4\u662f\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\uff08\u6c42\u6cd5\u4e3a\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff09\u3002\n\n\u628a\u6240\u6709\u8be2\u95ee\u6309\u7167 $l$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u628a\u6240\u6709 $l$ \u76f8\u540c\u7684\u8be2\u95ee\u4e00\u540c\u5904\u7406\u3002\n\n\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $l$\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f53\u524d\u679a\u4e3e\u5230 $l$ \u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u4e3a\uff1a\u5c06 $[l, next_l)$ \u7684\u6240\u6709 $r'$ \u7684\u7b54\u6848\u8d4b\u503c\u4e3a $r' - l + 1$\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u652f\u6301\u8be5\u64cd\u4f5c\uff1a\u533a\u95f4\u8d4b\u503c\u4e00\u6b21\u51fd\u6570\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u3002\n\n\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n## \u6f14\u793a\n\n\u4e3a\u4e86\u66f4\u6e05\u6670\u5730\u7406\u89e3\uff0c\u6211\u4eec\u6765\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n```\n5\n1 3 2 3 4\n3\n2 4\n1 3\n2 5\n```\n\n$l=5, ans = \\{0, 0, 0, 0, 1\\}$\u3002\n\n$l=4, ans = \\{0, 0, 0, 1, 2\\}$\u3002\n\n$l=3, ans = \\{0, 0, 1, 2, 3\\}$\u3002\n\n$l=2$\uff0c\u6ce8\u610f\u5230 $next_l=4$\uff0c\u6240\u4ee5 $ans=\\{0, 1, 2, 2, 3\\}$\u3002\u6b64\u65f6\u5904\u7406\u4e24\u4e2a\u67e5\u8be2\uff0c\u67e5\u8be2 $l=2, r=4$\uff0c\u5219 $3 \\leq r' \\leq 4$\uff0c\u67e5\u8be2\u7684\u7b54\u6848\u4e3a $\\min\\{2, 3\\}=2$\uff0c\u800c\u67e5\u8be2 $l=2, r=5$ \u540c\u7406\u53ef\u5f97\u7b54\u6848\u4e3a $3$\u3002\n\n$l=1, ans = \\{1, 2, 3, 4, 5\\}$\u3002\u67e5\u8be2 $l=1, r=3$\uff0c\u7b54\u6848\u4e3a $3$\u3002\n\n\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint n, q;\nint a[2000005], pre[2000005], head[2000005];\nint tr[8000005], mk[8000005], pret[8000005];\nint ans[2000005];\nstruct Node {\n    int l, r, id;\n    bool operator<(const Node& o) const\n    {\n        return l < o.l;\n    }\n} b[2000005];\nvoid Build(int l, int r, int p)\n{\n    mk[p] = -1;\n    if (l == r) {\n        pret[p] = pre[l];\n    } else {\n        int mid = l + r >> 1;\n        Build(l, mid, p * 2);\n        Build(mid + 1, r, p * 2 + 1);\n        pret[p] = min(pret[p * 2], pret[p * 2 + 1]);\n    }\n}\nvoid Change(int p, int l, int x)\n{\n    mk[p] = x;\n    tr[p] = l - x;\n}\nvoid Pushdown(int p, int l, int m)\n{\n    Change(p * 2, l, mk[p]);\n    Change(p * 2 + 1, m + 1, mk[p]);\n    mk[p] = -1;\n}\nvoid Cover(int l, int r, int cl, int cr, int p)\n{\n    if (r < cl || l > cr)\n        return;\n    if (l <= cl && cr <= r) {\n        Change(p, cl, l - 1);\n    } else {\n        int mid = cl + cr >> 1;\n        if (~mk[p]) {\n            Pushdown(p, cl, mid);\n        }\n        Cover(l, r, cl, mid, p * 2);\n        Cover(l, r, mid + 1, cr, p * 2 + 1);\n        tr[p] = min(tr[p * 2], tr[p * 2 + 1]);\n    }\n}\nint Search(int l, int r, int cl, int cr, int p)\n{\n    if (r < cl || pret[p] >= l)\n        return 0;\n    if (cl == cr)\n        return cl;\n    int res = 0, mid = cl + cr >> 1;\n    if (~mk[p])\n        Pushdown(p, cl, mid);\n    res = Search(l, r, mid + 1, cr, p * 2 + 1);\n    if (!res)\n        res = Search(l, r, cl, mid, p * 2);\n    return res;\n}\nint Min(int l, int r, int cl, int cr, int p)\n{\n    if (r < cl || l > cr)\n        return 2e9;\n    if (cl >= l && cr <= r)\n        return tr[p];\n    int mid = cl + cr >> 1;\n    if (~mk[p])\n        Pushdown(p, cl, mid);\n    return min(Min(l, r, cl, mid, p * 2), Min(l, r, mid + 1, cr, p * 2 + 1));\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", a + i);\n        pre[i] = head[a[i]];\n        head[a[i]] = i;\n    }\n    scanf(\"%d\", &q);\n    Build(1, n, 1);\n    for (int i = 1; i <= q; i++) {\n        scanf(\"%d%d\", &b[i].l, &b[i].r);\n        b[i].id = i;\n    }\n    sort(b + 1, b + q + 1);\n    int j = q;\n    memset(head, 0x3f, sizeof(head));\n    for (int i = n; i >= 1; i--) {\n        int l = i, r = head[a[i]] - 1;\n        if (r > n)\n            r = n;\n        Cover(l, r, 1, n, 1);\n        head[a[i]] = i;\n        while (j && b[j].l == i) {\n            l = i;\n            r = b[j].r;\n            l = Search(l, r, 1, n, 1);\n            ans[b[j].id] = Min(l, r, 1, n, 1);\n            j--;\n        }\n    }\n    for (int i = 1; i <= q; i++) {\n        printf(\"%d\\n\", ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1662343034,
        "uid": 363415,
        "name": "251Sec",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7907 [Ynoi2005] rmscne"
    },
    {
        "content": "\u5634\u5df4\u602a\uff0c\u8bf4\u9519\u4e86\u8bf4\u660e\u6211\u8bf4\u9519\u4e86\u3002\uff08\u8e22\u6211\u8e22\u6211\uff09\n\n\u5f53 $l'=l$ \u65f6\uff0c\u5bb9\u6613\u6c42\u51fa\u5bf9\u5e94\u7684 $r'$\uff0c\u4ee4 $s=r'$\u3002\n\n\u8003\u8651 $l'\\to l'+1$\uff0c\u53d1\u73b0\u5c31\u662f\u628a\u7b54\u6848\u5bf9 $nxt_{l'}$ \u53d6 $\\max$\uff0c\u5176\u4e2d $nxt$ \u8868\u793a\u4e0b\u4e00\u4e2a\u76f8\u540c\u7684\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a $l'$\uff0c$r'$ \u5c31\u662f $\\max(s,nxt_{l\\dots l'-1})$\u3002\n\n\u5c31\u662f\u8981\u6700\u5c0f\u5316 $\\max(s,nxt_{l\\dots l'-1})-(l'-1)$\uff0c\u8fd9\u91cc $l'$ \u7684\u53d6\u503c\u6709\u8981\u6c42\uff0c$\\max nxt_{l\\dots l'-1} \\le r$\u3002\n\n\u5bf9\u4e8e $s> nxt_{l\\dots l'-1}$ \u7684\u90e8\u5206\uff0c\u662f\u5e73\u51e1\u7684\u3002\n\n\u5bf9\u4e8e $s\\le nxt_{l\\dots l'-1}$ \u7684\u90e8\u5206\uff0c\u5373\u6700\u5c0f\u5316 $\\max nxt_{l\\dots t}-t,t=l'-1$\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u7ed9\u51fa $t$ \u7684\u53d6\u503c\u8303\u56f4\u3002\n\n\u6ce8\u610f\u5230\u8bbe\u533a\u95f4\u4e2d\u7684\u524d\u7f00\u6700\u5927\u503c\u4f4d\u7f6e\u5206\u522b\u4e3a $p_{1\\dots k}$\uff0c$[p_i,p_{i+1})$ \u8fd9\u6bb5\u533a\u95f4\u7684\u524d\u7f00\u6700\u5927\u503c\u5c31\u662f $a_{p_i}$\uff0c\u7b54\u6848\u5c31\u662f $p_{i+1}-1-a_{p_i}$\u3002\n\n\u6240\u4ee5\u79bb\u7ebf\u4e0b\u6765\uff0c\u7528\u5355\u8c03\u6808\u5904\u7406\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u6700\u5927\u503c\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002",
        "postTime": 1662299323,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7907 [Ynoi2005] rmscne"
    },
    {
        "content": "\u6570\u636e\u7ed3\u6784\u597d\u9898\u3002\r\n\r\n\u9996\u5148\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u626b\u63cf\u7ebf\u626b\u7b54\u6848\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\r\n\r\n\u8bbe\u548c $l$ \u989c\u8272\u76f8\u540c\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u4e3a $x$\u3002\r\n\r\n\u90a3\u4e48\u5bf9\u4e8e\u5de6\u7aef\u70b9 $\\leq l$\uff0c$l \\leq$ \u53f3\u7aef\u70b9 $<x $ \u7684\u8be2\u95ee\uff0c $l$ \u518d\u5f80\u53f3\u79fb\u52a8\u7684\u8bdd\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u627e\u5230\u8fd9\u4e9b\u8be2\u95ee\u5e76\u4e14\u5220\u9664\u5373\u53ef\u3002\r\n\r\n\u8bbe\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u5168\u90e8\u5728 $(l,x)$ \u5916\u7684\u989c\u8272\u4e2d\u5728 $x$ \u540e\u6700\u5c0f\u7684\u4f4d\u7f6e\u4e3a $y$\u3002\r\n\r\n\u5bf9\u4e8e\u53f3\u7aef\u70b9 $\\ge x$ \u7684\u8be2\u95ee\uff0c\u4ed6\u7684\u7b54\u6848\u533a\u95f4\u5982\u679c\u4ee5 $l$ \u4e3a\u7aef\u70b9\u4e00\u5b9a\u4e0d\u4f18\uff0c\u56e0\u4e3a\u5982\u679c\u4ee5 $l$ \u4e3a\u7aef\u70b9\u4ed6\u4e00\u5b9a\u4f1a\u5305\u542b $y$\uff0c\u4e5f\u5c31\u5305\u542b $x$\uff0c\u4e0d\u5982\u5f80\u53f3\u79fb\uff0c\u4e0d\u7528\u8003\u8651\u3002\r\n\r\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u53f3\u7aef\u70b9\u5728 $x,y$ \u4e4b\u95f4\u7684\u533a\u95f4\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u53ef\u4ee5\u4e8c\u7ef4\u6570\u70b9\u6765\u7ef4\u62a4\u3002\r\n\r\n\u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u5c31\u662f\u4f1a\u4fee\u6539\u5230\u4e4b\u95f4\u5df2\u7ecf\u5220\u9664\u6389\u7684\u4e0d\u5408\u6cd5\u7684\u533a\u95f4\u3002\r\n\r\n\u53ea\u8981\u5728\u5220\u9664\u7684\u65f6\u5019\u628a\u53f3\u7aef\u70b9\u6539\u6210\u7b54\u6848\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5c31\u597d\u4e86\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n#define N 2001001\r\n#define MAX 2001\r\n#define eps 1e-10\r\nusing namespace std;\r\ntypedef int ll;\r\ntypedef double db;\r\nconst db PI=acos(-1);\r\nconst ll mod=64123,inv2=(mod+1)/2,inf=1e9;\r\ninline char nc(){\r\n    static char buf[100000],*p1=buf,*p2=buf;\r\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\r\n}\r\ninline ll read(){\r\n    char ch=nc();int sum=0;\r\n    while(!(ch>='0'&&ch<='9'))ch=nc();\r\n    while(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=nc();\r\n    return sum;\r\n}\r\nll n,a[N],m,nxt[N],las[N],ans[N],pd[N],ls[N],rs[N],headv[N],nexv[N],totv,headg[N],nexg[N],totg,totl,nexl[N],v[N],g[N];\r\ninline void vdd(ll x,ll y)\r\n{\r\n\tv[++totv]=y;\r\n\tnexv[totv]=headv[x];\r\n\theadv[x]=totv;\r\n\treturn;\r\n}\r\ninline void gdd(ll x,ll y)\r\n{\r\n\tg[++totg]=y;\r\n\tnexg[totg]=headg[x];\r\n\theadg[x]=totg;\r\n\treturn;\r\n}\r\nstruct point\r\n{\r\n\tll l,r;\r\n}q[N];\r\nbool vis[N];\r\nstruct cc\r\n{\r\n\tll x,l,r,v;\r\n};\r\nstruct node\r\n{\r\n\tll val,tag;\r\n}seg[N<<2];\r\ncc lis[N];\r\ninline void build(ll pos,ll l,ll r)\r\n{\r\n\tseg[pos].val=seg[pos].tag=inf;\r\n\tif(l!=r)\r\n\t{\r\n\t\tll mid=l+r>>1;\r\n\t\tbuild(pos<<1,l,mid);\r\n\t\tbuild(pos<<1|1,mid+1,r);\r\n\t}\r\n\treturn;\r\n}\r\ninline void add(ll pos,ll num)\r\n{\r\n\tseg[pos].val=seg[pos].val<num?seg[pos].val:num;\r\n\treturn;\r\n}\r\nll s,t,num;\r\ninline void upgrade(ll pos,ll l,ll r)\r\n{\r\n\tif(l>t||r<s)\r\n\t\treturn;\r\n\telse if(l>=s&&r<=t)\r\n\t\treturn add(pos,num);\r\n\tif(num>=seg[pos].val)\r\n\t\treturn;\r\n\tll mid=l+r>>1;\r\n\tupgrade(pos<<1,l,mid);\r\n\tupgrade(pos<<1|1,mid+1,r);\r\n\treturn;\r\n}\r\nll res=inf;\r\ninline void query(ll pos,ll l,ll r,ll p)\r\n{\r\n\tif(l>p||r<p)\r\n\t\treturn;\r\n\tres=min(res,seg[pos].val);\r\n\tif(l==r)\r\n\t\treturn;\r\n\tll mid=l+r>>1;\r\n\tif(p<=mid)\r\n\t\tquery(pos<<1,l,mid,p);\r\n\telse\r\n\t\tquery(pos<<1|1,mid+1,r,p);\r\n\treturn;\r\n}\r\nstruct ct\r\n{\r\n\tll siz;\r\n}st[N<<2];\r\ninline ct operator +(ct x,ct y)\r\n{\r\n\treturn ct{x.siz+y.siz};\r\n}\r\ninline void upd(ll pos,ll l,ll r,ll p,ll num)\r\n{\r\n\tll now=pd[p];\r\n\twhile(now)\r\n\t{\r\n\t\tst[now].siz+=num;\r\n\t\tnow>>=1;\r\n\t}\r\n\treturn;\r\n}\r\nstruct ncp\r\n{\r\n\tll num;\r\n}sg[N<<2];\r\ninline ncp operator +(ncp x,ncp y)\r\n{\r\n\treturn ncp{x.num+y.num};\r\n}\r\ninline void update(ll pos,ll l,ll r,ll p)\r\n{\r\n\tll now=pd[p];\r\n\twhile(now)\r\n\t{\r\n\t\tsg[now].num++;\r\n\t\tnow>>=1;\r\n\t}\r\n\treturn;\r\n}\r\ninline ll findpre(ll pos,ll l,ll r,ll p)\r\n{\r\n\tif(l>p||!st[pos].siz)\r\n\t\treturn 0;\r\n\telse if(l==r)\r\n\t\treturn l;\r\n\tll mid=l+r>>1;\r\n\tll tmp=findpre(pos<<1|1,mid+1,r,p);\r\n\tif(tmp)\r\n\t\treturn tmp;\r\n\treturn findpre(pos<<1,l,mid,p);\r\n}\r\ninline ll findnxt(ll pos,ll l,ll r,ll p)\r\n{\r\n\tif(r<p||!st[pos].siz)\r\n\t\treturn n+1;\r\n\telse if(l==r)\r\n\t\treturn l;\r\n\tll mid=l+r>>1;\r\n\tll tmp=findnxt(pos<<1,l,mid,p);\r\n\tif(tmp!=n+1)\r\n\t\treturn tmp;\r\n\treturn findnxt(pos<<1|1,mid+1,r,p);\r\n}\r\nll cur;\r\ninline void digui(ll pos,ll l,ll r)\r\n{\r\n\tif(!sg[pos].num)\r\n\t\treturn;\r\n\telse if(l==r)\r\n\t{\r\n\t\tll tmp=findpre(1,1,n,l);\r\n\t\tfor(int k=headv[l];k;k=nexv[k])\r\n\t\t{\r\n\t\t\tint j=v[k];\r\n\t\t\tans[j]=ans[j]<tmp-num+1?ans[j]:tmp-num+1;\r\n\t\t\tq[j].r=tmp;\r\n\t\t}\r\n\t\theadv[l]=0;\r\n\t\tsg[pos].num=0;\r\n\t\treturn;\r\n\t}\r\n\tll mid=l+r>>1;\r\n\tdigui(pos<<1|1,mid+1,r);\r\n\tdigui(pos<<1,l,mid);\r\n\tsg[pos]=sg[pos<<1]+sg[pos<<1|1];\r\n\treturn;\r\n}\r\ninline void work(ll pos,ll l,ll r)\r\n{\r\n\tif(!sg[pos].num)\r\n\t\treturn;\r\n\tif(l>t||r<s)\r\n\t\treturn;\r\n\telse if(l>=s&&r<=t)\r\n\t\treturn digui(pos,l,r);\r\n\tll mid=l+r>>1;\r\n\twork(pos<<1|1,mid+1,r);\r\n\twork(pos<<1,l,mid);\r\n\tsg[pos]=sg[pos<<1]+sg[pos<<1|1];\r\n\treturn;\r\n}\r\ninline void prework(ll pos,ll l,ll r)\r\n{\r\n\tif(l==r)\r\n\t\tpd[l]=pos;\r\n\telse\r\n\t{\r\n\t\tll mid=l+r>>1;\r\n\t\tprework(pos<<1,l,mid);\r\n\t\tprework(pos<<1|1,mid+1,r);\r\n\t}\r\n\treturn;\r\n}\r\nstatic char buf[100000],*pp=buf;\r\ntemplate<class T>inline void pc(T c)\r\n{\r\n    if(pp-buf==100000)fwrite(buf,1,100000,stdout),pp=buf;\r\n    *pp++=c;\r\n}\r\ninline void fsh(){fwrite(buf,1,pp-buf,stdout);pp=buf;}\r\nchar cs[N],tot;\r\ninline void write(ll x)\r\n{\r\n\ttot=0;\r\n\tcs[++tot]='\\n';\r\n\twhile(x)\r\n\t\tcs[++tot]=(x%10)^48,x/=10;\r\n\twhile(tot)\r\n\t\tpc(cs[tot--]);\r\n}\r\nsigned main()\r\n{\r\n\tn=read();\r\n\tfor(int i=1;i<=n;i++)\r\n\t\ta[i]=read();\r\n\tfor(int i=0;i<N;i++)\r\n\t\tlas[i]=n+1;\r\n\tfor(int i=n;i;i--)\r\n\t{\r\n\t\tnxt[i]=las[a[i]];\r\n\t\tlas[a[i]]=i;\r\n\t}\r\n\tm=read();\r\n\tprework(1,1,n);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\t\t\r\n\t\tif(vis[a[i]])\r\n\t\t\tcontinue;\r\n\t\tvis[a[i]]=true;\r\n\t\tupd(1,1,n,i,1);\r\n\t}\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tans[i]=inf;\r\n\t\tq[i].l=read();\r\n\t\tq[i].r=read();\r\n\t\tgdd(q[i].l,i);\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int k=headg[i];k;k=nexg[k])\r\n\t\t{\r\n\t\t\tint j=g[k];\r\n\t\t\tvdd(q[j].r,j);\r\n\t\t\tupdate(1,1,n,q[j].r);\r\n\t\t}\r\n\t\ts=i,t=nxt[i]-1,num=i;\r\n\t\twork(1,1,n);\r\n\t\tll tmp=findnxt(1,1,n,nxt[i]);\r\n\t\tlis[++totl]=cc{i,nxt[i],tmp-1,findpre(1,1,n,nxt[i])-i+1};\r\n\t\tif(nxt[i]!=n+1)\r\n\t\t\tupd(1,1,n,nxt[i],1);\r\n\t}\r\n\ttotv=0;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\theadv[i]=0;\r\n\tfor(int i=1;i<=totl;i++)\r\n\t\tvdd(lis[i].x,i);\r\n\tbuild(1,1,n);\r\n\tll cnt=0;\r\n\tfor(int i=n;i;i--)\r\n\t{\r\n\t\tfor(int k=headv[i];k;k=nexv[k])\r\n\t\t{\r\n\t\t\tint j=v[k];\r\n\t\t\ts=lis[j].l,t=lis[j].r,num=lis[j].v;\r\n\t\t\tupgrade(1,1,n),cnt++;\r\n\t\t}\r\n\t\tfor(int k=headg[i];k;k=nexg[k])\r\n\t\t{\r\n\t\t\tint j=g[k];\r\n\t\t\tres=inf;\r\n\t\t\tquery(1,1,n,q[j].r);\r\n\t\t\tans[j]=min(ans[j],res);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=m;i++)\r\n\t\twrite(ans[i]);\r\n\tfsh();\r\n\tquick_exit(0);\r\n}\r\n```",
        "postTime": 1662334840,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "P7907 [Ynoi2005] rmscne"
    }
]