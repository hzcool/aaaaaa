[
    {
        "content": "upd. \u4fee\u4e2a\u7b14\u8bef\u3002\n\n---\n\n\u6570\u636e\u968f\u673a\u81ea\u7136\u662f\u4e71\u641e\u3002\n\n\u8003\u8651\u4e00\u4e2a\u66b4\u529b dp\uff1a$f_{i,j,k}$ \u8868\u793a $i$ \u5b50\u6811\uff0c\u65ad\u4e86 $j$ \u6761\u8fb9\uff0c\u6839\u6240\u5728\u8fde\u901a\u5757\u7684 $a$ \u7684\u548c\u662f $k$\uff0c\u6700\u5c0f\u7684\u8fde\u901a\u5757\u5e73\u65b9\u548c\u3002\n\n\u5bf9\u4e8e\u8fb9 $(u,v)$\uff0c\u8f6c\u79fb\u662f\uff1a\n\n- $f_{u,x,y}+f_{v,p,q}+2yq\\rightarrow f_{u,x+p,y+q}'$\uff08\u4e0d\u65ad $u,v$ \u8fb9\uff09\n- $f_{u,x,y}+f_{v,p,q}\\rightarrow f_{u,x+p+1,y}'$\uff08\u65ad $u,v$ \u8fb9\uff09\n\n\u590d\u6742\u5ea6 $O(n^2w^2)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u526a\u679d\uff0c\u5bf9\u4e8e $k_1<k_2$\uff0c\u5982\u679c $f_{i,j,k_1}<f_{i,j,k_2}$\uff0c\u90a3\u4e48 $k_2$ \u663e\u7136\u6ca1\u7528\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a $f_{i,j}$ \u5f00\u4e2a vector \u5b58\u6240\u6709\u6709\u7528\u7684 $k$\uff0c\u6bcf\u6b21\u66b4\u529b\u679a\u4e3e\u4e24\u4e2a $k$ \u8f6c\u79fb\uff0c\u8f6c\u79fb\u5b8c\u66b4\u529b\u5bf9\u6240\u6709 vector \u6309 $k$ \u6392\u5e8f\u518d\u66b4\u529b\u5220\u6389\u6240\u6709\u6ca1\u7528\u7684\u70b9\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u76f4\u63a5\u4ee5\u6700\u5927\u70b9\u4e0d\u5230\u534a\u79d2\u7684\u4f18\u5f02\u8868\u73b0\u901a\u8fc7\u4e86\u8fd9\u9053\u9898\uff01\n\n\u590d\u6742\u5ea6\u6211\u4e0d\u4f1a\u4e25\u683c\u5206\u6790\uff0c\u4e0d\u8fc7\u611f\u6027\u7406\u89e3\u7684\u8bdd\uff0c\u5047\u5b9a dp \u6570\u7ec4\u5728\u6811\u548c\u70b9\u6743\u90fd\u5747\u5300\u968f\u673a\u7684\u60c5\u51b5\u4e0b\u8db3\u591f\u5747\u5300\u968f\u673a\uff0c\u90a3\u4e48\u6839\u636e\u524d\u7f00\u6700\u5927\u503c\u4e2a\u6570\u671f\u671b\uff08\u4e5f\u5c31\u662f\u7b1b\u5361\u5c14\u6811\u6df1\u5ea6\u671f\u671b\uff09\uff0c\u590d\u6742\u5ea6\u53ef\u4ee5\u5206\u6790\u4e3a $O(n^2\\log^2 w)$\u3002\n\n```cpp\nconst int N = 305;\n\nstruct Edge {\n    int to, nxt;\n    Edge() {\n        nxt = -1;\n    }\n};\nint n, hd[N], siz[N], pnt;\nlong long a[N];\nEdge e[N << 1];\nvector <pair <long long, long long> > dp[N][N], tmp[N];\n\ninline void AddEdge(int u, int v) {\n    e[++pnt].to = v;\n    e[pnt].nxt = hd[u];\n    hd[u] = pnt;\n}\n\ninline void Read() {\n    n = qread();\n    for (int i = 1;i <= n;i++) a[i] = qread();\n    for (int i = 1;i < n;i++) {\n        int u = qread(), v = qread();\n        AddEdge(u, v); AddEdge(v, u);\n    }\n}\n\ninline void Dfs(int u, int fa) {\n    siz[u] = 1;\n    for (int i = 0;i <= n;i++) dp[u][i].clear();\n    dp[u][0].push_back(make_pair(a[u], a[u] * a[u]));\n    for (int i = hd[u];~i;i = e[i].nxt) {\n        int v = e[i].to;\n        if (v != fa) {\n            Dfs(v, u);\n            for (int i = 0;i <= siz[v];i++) {\n                for (int j = 0;j <= siz[u];j++) {\n                    for (auto x : dp[v][i]) {\n                        for (auto y : dp[u][j]) {\n                            tmp[i + j].push_back(make_pair(x.first + y.first, x.second + y.second + 2 * x.first * y.first));\n                            tmp[i + j + 1].push_back(make_pair(y.first, x.second + y.second));\n                        }\n                    }\n                }\n            }\n            siz[u] += siz[v];\n            for (int i = 0;i <= siz[u];i++) {\n                dp[u][i].clear();\n                sort(tmp[i].begin(), tmp[i].end());\n                long long mnv = 0x3f3f3f3f3f3f3f3f;\n                for (int j = 0;j < tmp[i].size();j++) {\n                    if (tmp[i][j].second < mnv) {\n                        mnv = tmp[i][j].second;\n                        dp[u][i].push_back(tmp[i][j]);\n                    }\n                }\n                tmp[i].clear();\n            }\n        }\n    }\n}\n```",
        "postTime": 1684852028,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P9096 [PA2020] Sen o podboju"
    }
]