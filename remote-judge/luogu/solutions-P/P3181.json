[
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u8ddf[[AHOI2013]\u5dee\u5f02](https://www.luogu.org/problemnew/show/P4248)\u5f88\u50cf\n\n\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u7684\u672c\u8d28\u5c31\u662f\u8ba9\u4f60\u7b97\u6240\u6709\u540e\u7f00\u7684$lcp$\u957f\u5ea6\u4e4b\u548c\uff0c\u4f46\u662f\u5f97\u6765\u81ea\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\n\n\u5148\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u8d77\u6765\u505a\u4e00\u904d$SA$\uff0c\u7531\u4e8e\u6211\u4eec\u591a\u7b97\u4e86\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u4e32\u5185\u7684\u60c5\u51b5\n\n\u4e8e\u662f\u5728\u5206\u522b\u5bf9\u8fd9\u4e24\u4e2a\u4e32\u5efa$SA$\uff0c\u51cf\u6389\u8fd9\u4e24\u6b21\u7b97\u51fa\u6765\u7684\u7b54\u6848\n\n\u73b0\u5728\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u51fa$height$\u6570\u7ec4\u6240\u6709\u5b50\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684\u548c\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u52a8\u6001\u5f80\u5e8f\u5217\u672b\u5c3e\u52a0\u6570\u7684\u8fc7\u7a0b\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u5f80\u672b\u5c3e\u52a0\u4e00\u4e2a\u6570\u90fd\u4f1a\u548c\u4e4b\u524d\u6240\u6709\u7684\u6570\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\n\n\u8003\u8651\u5feb\u901f\u7b97\u51fa\u8fd9\u4e9b\u533a\u95f4\u7684\u6700\u5c0f\u503c\u7684\u548c\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5b58\u50a8\u4e00\u4e2a$a_i$\uff0c\u8868\u793a$i$\u5230\u5f53\u524d\u5e8f\u5217\u672b\u5c3e\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\n\n\u6211\u4eec\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u53ef\u4ee5\u5bf9\u66f4\u65b0\u4e00\u4e0b\u6240\u6709\u7684$a_i$\uff0c\u628a\u6240\u6709\u6bd4\u5f53\u524d\u52a0\u5165\u7684\u6570\u5927\u7684$a_i$\u53d8\u6210\u5f53\u524d\u6570\u5c31\u597d\u4e86\n\n\u8fd9\u4e0d\u5c31$T$\u4e86\u5417\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6240\u6709$a_i$\u7684\u548c\uff0c\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u4e2a$i$\u6765\u81ea\u54ea\u91cc\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u76f8\u7b49\u7684$a_i$\u653e\u5728\u4e00\u8d77\u8ba1\u7b97\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u5c31\u66b4\u529b\u626b\u4e00\u904d\u628a\u90a3\u4e9b\u6bd4\u5f53\u524d\u52a0\u5165\u6570\u5927\u7684\u5408\u5e76\u5230\u4e00\u4e2a$a_i$\u91cc\n\n\u770b\u8d77\u6765\u590d\u6742\u5ea6\u5e76\u4e0d\u79d1\u5b66\uff0c\u4f46\u662f\u6700\u574f\u60c5\u51b5\u4e0b\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u4e86\uff0c$O(n)$\u7684\uff0c\u8dd1\u7684\u8fd8\u633a\u5feb\u7684\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#define re register\n#define LL long long\n#define maxn 400005\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nint het[maxn],sa[maxn],rk[maxn],tp[maxn],tax[maxn];\nchar S[maxn],T[maxn];\nint L1,L2,n,m;\nLL a[maxn],cnt[maxn],top;\nLL tot;\ninline void qsort()\n{\n    for(re int i=0;i<=m;i++) tax[i]=0;\n    for(re int i=1;i<=n;i++) tax[rk[i]]++;\n    for(re int i=1;i<=m;i++) tax[i]+=tax[i-1];\n    for(re int i=n;i;--i) sa[tax[rk[tp[i]]]--]=tp[i];\n}\ninline LL SA()\n{\n    LL ans=0,sum=0;\n    memset(rk,0,sizeof(rk)),memset(sa,0,sizeof(sa)),memset(het,0,sizeof(het)),memset(tp,0,sizeof(tp));\n    memset(a,0,sizeof(a)),memset(cnt,0,sizeof(cnt)),top=0;\n    m=2500;\n    for(re int i=1;i<=n;i++) rk[i]=S[i],tp[i]=i;\n    qsort();\n    for(re int w=1,p=0;p<n;m=p,w<<=1)\n    {\n        p=0;\n        for(re int i=1;i<=w;i++) tp[++p]=n-w+i;\n        for(re int i=1;i<=n;i++) if(sa[i]>w) tp[++p]=sa[i]-w;\n        qsort();\n        for(re int i=1;i<=n;i++) std::swap(tp[i],rk[i]);\n        rk[sa[1]]=p=1;\n        for(re int i=2;i<=n;i++) rk[sa[i]]=(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w])?p:++p;\n    }\n    int k=0;\n    for(re int i=1;i<=n;i++)\n    {\n        if(k) --k;\n        int j=sa[rk[i]-1];\n        while(S[i+k]==S[j+k]) ++k;\n        het[rk[i]]=k;\n    }\n    for(re int i=2;i<=n;i++)  \n    {\n        LL now=1;\n        while(top&&het[i]<=a[top]) \n            now+=cnt[top],sum-=a[top]*cnt[top],top--;\n        cnt[++top]=now;\n        a[top]=het[i];\n        sum+=cnt[top]*a[top];\n        ans+=sum;\n    }\n    return ans;\n}\nint main()\n{\n    scanf(\"%s\",S+1);scanf(\"%s\",T+1);\n    L1=strlen(S+1),L2=strlen(T+1);n=L1+L2+1;\n    S[L1+1]='z'+1;\n    for(re int i=1;i<=L2;i++) S[i+L1+1]=T[i];\n    tot+=SA();\n    for(re int i=L1+1;i<=n;i++) S[i]=0;\n    n=L1;tot-=SA();\n    for(re int i=1;i<=L2;i++) S[i]=T[i];\n    for(re int i=L2+1;i<=n;i++) S[i]=0;\n    n=L2;\n    tot-=SA();\n    printf(\"%lld\\n\",tot);\n    return 0;\n}\n```",
        "postTime": 1545714156,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u7531\u4e8e\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u63d2\u5165\u7684\u65f6\u5019\u8fd8\u8981\u590d\u5236\u4e00\u904d\u5206\u88c2\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u5341\u5206\u4e0d\u4f18\u7f8e\uff0c\u518d\u52a0\u4e0aluogu\u9898\u89e3\u91cc\u5c45\u7136\u6ca1\u6709\u53ea\u5efa\u4e00\u5768\u540e\u7f00\u81ea\u52a8\u673a\u7684\u505a\u6cd5\uff0c\u679c\u65ad\u5199\u4e86\u4e00\u53d1\n\n\u8003\u8651\u5bf9\u5176\u4e2d\u4e00\u4e2a\u4e32\u5efa\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u518d\u628a\u53e6\u4e00\u4e2a\u4e32\u653e\u4e0a\u53bb\u5339\u914d\u8fdb\u884c\u7edf\u8ba1\u7b54\u6848\uff1b\n\n\u8bbeA\u4e3a\u540e\u7f00\u81ea\u52a8\u673a\u7684\u90a3\u4e2a\u4e32\uff0cB\u4e3a\u8981\u8fdb\u884c\u5339\u914d\u7684\u4e32\n\n\u6bcf\u5339\u914d\u5230B\u7684\u7b2ci\u4e2a\u5b57\u7b26\uff0c\u4e3a\u4e86\u4e0d\u91cd\u4e0d\u6f0f\u5730\u7edf\u8ba1\u7b54\u6848\u6b64\u65f6\u5e94\u52a0\u5165\u7684\u5c31\u662f\u4ee5i\u4e3a\u540e\u7f00\u7684\u6240\u6709\u5b50\u4e32\u8d21\u732e\u7684\u7b54\u6848\uff1b\n\n\u9996\u5148\u8981\u8bb0\u5f55\u4e00\u4e0b\u5728sam\u4e0a\u73b0\u5728\u5339\u914d\u5230\u7684\u8282\u70b9j\u65f6\u80fd\u5339\u914d\u7684\u957f\u5ea6\u662f\u591a\u5c11\uff1b\u8bbe\u5176\u4e3atv\uff0c\u90a3\u4e48\u5728\u73b0\u5728\u5339\u914d\u7684j\u8fd9\u4e2a\u8282\u70b9\u6240\u7ed9\u7684\u8d21\u732e\u5c31\u662f|right(j)|*(tv-len[f[j]]),\u56e0\u4e3atv\u662f\u4e0d\u4e00\u5b9a\u80fd\u591f\u8dd1\u6ee1len[j]\u7684\uff0c\u4f46tv\u5374\u4e00\u5b9a\u6bd4len[f[j]]\u8981\u5927\uff1b\n\n\u7136\u540e\u5269\u4e0b\u7684\u5c31\u662f\u7edf\u8ba1\u6240\u6709j\u7684\u7236\u4eb2\u8282\u70b9\u4e0a\u7684\u7b54\u6848\u4e86\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684|right|*(len-len(fa)),\u63d0\u524d\u62d3\u6251\u6392\u5e8f\u9884\u5904\u7406\u4e00\u4e0b\u524d\u7f00\u548c\u5c31\u597d\u4e86\n\n|right|\u662f\u5143\u7d20\u4e2a\u6570\u7684\u610f\u601dorz\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define LL long long\nconst int maxn=2e5+5;\nint len[maxn<<1],nxt[maxn<<1][26],f[maxn<<1],siz[maxn<<1],b[maxn<<1],pos[maxn<<1];\nLL fsiz[maxn<<1];\nstruct SAM{\n\tint tot,last;\n\tSAM(){tot=last=1;}\n\tvoid add(int v){\n\t\tint p=last,now=last=++tot;\n\t\tlen[now]=len[p]+1;\n\t\tsiz[now]=1;\n\t\twhile(p&&!nxt[p][v])nxt[p][v]=now,p=f[p];\n\t\tif(!p)f[now]=1;\n\t\telse{\n\t\t\tint q=nxt[p][v];\n\t\t\tif(len[p]+1==len[q])f[now]=q;\n\t\t\telse{\n\t\t\t\tint nq=++tot;\n\t\t\t\tlen[nq]=len[p]+1;\n\t\t\t\tmemcpy(nxt[nq],nxt[q],sizeof(nxt[q]));\n\t\t\t\tf[nq]=f[q];\n\t\t\t\tf[q]=f[now]=nq;\n\t\t\t\twhile(p&&nxt[p][v]==q)nxt[p][v]=nq,p=f[p];\n\t\t\t}\n\t\t} \n\t}\n\tvoid topsort(){\n\t\tfor(int i=1;i<=tot;i++)b[len[i]]++;\n\t\tfor(int i=1;i<=tot;i++)b[i]+=b[i-1];\n\t\tfor(int i=1;i<=tot;i++)pos[b[len[i]]--]=i;\n\t\tfor(int i=tot;i;i--)siz[f[pos[i]]]+=siz[pos[i]];\n\t\tfor(int i=2;i<=tot;i++)fsiz[pos[i]]=(LL)(len[pos[i]]-len[f[pos[i]]])*siz[pos[i]]+fsiz[f[pos[i]]];\n\t}\n\tLL match(char *s){\n\t\tint n=strlen(s),p=1,tv=0;\n\t\tLL ans=0ll; \n\t\tfor(int i=0;i<n;i++){\n\t\t\tint v=s[i]-'a';\n\t\t\twhile(p&&!nxt[p][v])p=f[p];\n\t\t\tif(!p)p=1,tv=0;\n\t\t\telse{\n\t\t\t\ttv=std::min(tv,len[p])+1;\n\t\t\t\tp=nxt[p][v];\n\t\t\t\tans+=(LL)fsiz[f[p]]+(LL)(tv-len[f[p]])*siz[p];\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n}sam;\nchar s[maxn];\nint main()\n{\n\tscanf(\"%s\",s);\n\tint n=strlen(s);\n\tfor(int i=0;i<n;i++)sam.add(s[i]-'a');\n\tsam.topsort();\n\tscanf(\"%s\",s);\n\tprintf(\"%lld\\n\",sam.match(s));\n\treturn 0;\n}\n```\n",
        "postTime": 1524848983,
        "uid": 45966,
        "name": "santongding",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "# \u627e\u76f8\u540c\u5b57\u7b26 ([HAOI2016\u3001luogu3181)\n\n\n## \u9898\u610f\uff1a\n\n\n\u200b    \u7ed9\u5b9a\u4e24\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32s1,s2(\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$2\\times 10^4$)\u3002\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u5404\u53d6\u4e00\u4e2a\u5b50\u4e32\uff0c\u4e24\u5b50\u4e32\u76f8\u7b49\u7684\u65b9\u6848\u6570\u3002\n\n\n## \u5206\u6790:\n\n\n$O(n^3)$\uff1a\n\n\n\u200b    \u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u3002\u5982\u679c\u8fde\u4e2a\u4e32\u4e2d\u5404\u53d6\u4e00\u4e2a\u6781\u957f\u7684\u76f8\u540c\u7684\u5b50\u4e32(\u6781\u957f\u7684\u610f\u601d\u5c31\u662f\u8fd9\u4e24\u4e2a\u4e32\u518d\u5411\u4e24\u8fb9\u5ef6\u4f38\u5c31\u4f1a\u4e0d\u540c\u6216\u51fa\u754c)\uff0c\u5219\u8fd9\u4e2a\u6781\u957f\u7684\u4e32\u7684\u6240\u6709\u5b50\u4e32\u4e5f\u662f\u76f8\u540c\u7684\u3002\n\n\n\u200b    \u7531\u4e8e\u679a\u4e3e\u6781\u957f\u7684\u4e32\u5e76\u6c42\u51fa\u5176\u957f\u5ea6\u5e76\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u6781\u957f\u7684\u4e32\u7684\u5de6\u7aef\u70b9\uff0c\u518d\u6c42\u51fa\u5176\u957f\u5ea6\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u91cd\u4e0d\u6f0f\u627e\u51fa\u6240\u6709\u7684\u6781\u957f\u7684\u4e32\u3002\u66f4\u56fe\u65b9\u4fbf\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u4e24\u539f\u4e32\u4e2d\u67d0\u540e\u7f00\u7684\u6240\u6709\u524d\u7f00\uff0c\u8fd9\u53ef\u4ee5\u8865\u5145\u4e0d\u6f0f\u627e\u51fa\u6240\u6709\u7684\u5b50\u4e32\u3002\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u8981\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u679a\u4e3e\uff0c\u540c\u65f6\u627e\u51fa\u5b50\u4e32\u7684\u957f\u5ea6\u4e5f\u8981\u8bdd\u8d39$O(n)$\u7684\u4ee3\u4ef7\uff0c\u56fa\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^3)$\u7684\u3002\n\n\n$O(n^2)$:\n\n\n\u200b    \u521a\u624d\u8bf4\u9053\u4e86\u540e\u7f00\u7684\u524d\u7f00\uff0c\u6211\u4eec\u4e0d\u7531\u81ea\u4e3b\u60f3\u5230\u4e86\u540e\u7f00\u6570\u7ec4\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u6c42\u51faA\u4e32\u548cB\u4e32\u7684\u67d0\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u7684\u66f4\u4f4e\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u901a\u8fc7\u4e00\u4e2a\u5206\u9694\u7b26\u62fc\u63a5\u8d77\u6765\uff0c\u6c42\u51faHeight\u6570\u7ec4\uff0c\u5373\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u6bcf\u4e2a\u540e\u7f00\u548c\u524d\u4e00\u4e2a\u7684LCP\u3002\u518d\u5229\u7528Height\u6570\u7ec4\u548cST\u8868\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5$O(1)$\u5f97\u5230\u4efb\u610f\u4e24\u540e\u7f00\u7684LCP\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709\u679a\u4e3e\u5b50\u4e32\u8d77\u70b9\u7684\u590d\u6742\u5ea6\u4e86\uff0c\u5373$O(n^2)$\u3002\n\n\n$O(nlogn)$\uff1a\n\n\n\u200b    \u73b0\u5728\u62c9\u9ad8\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7f6a\u9b41\u7978\u9996\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u60f3\u5c06\u5176\u590d\u6742\u5ea6\u964d\u4f4e\u3002\u8003\u8651\u5230\u5229\u7528Height\u6570\u7ec4\u6c42\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u7684LCP\u65f6\u7684\u72ec\u7279\u6027\u8d28\uff1a\u4e24\u4e2a\u540e\u7f00\u7684LCP\u4e3a\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u4ed6\u4eec\u4e2d\u95f4\u5939\u7684\u6700\u5c0f\u7684Height\u3002\u4e5f\u5c31\u662f\u8bf4\u6392\u5e8f\u540e\uff0c\u4e00\u4e2a\u540e\u7f00\u8d8a\u5f80\u540e\u6570LCP\u7684\u957f\u5ea6\u8d8a\u5c0f\u3002\n\n\n\u200b    \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\u5206A\u4e32\u7684\u5b50\u4e32\u5728\u524d\u3001B\u7684\u5b50\u4e32\u5728\u524d\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u7528\u5355\u8c03\u6808\u6c42\u51fa\u7b54\u6848\uff0c\u52a0\u8d77\u6765\u5c31\u884c\u3002\u81f3\u4e8e\u5982\u4f55\u7ef4\u62a4\uff0c\u806a\u660e\u7684\u5927\u5bb6\u4e00\u5b9a\u5df2\u7ecf\u77e5\u9053\u4e86\u3002\n\n\n\u200b    \u7531\u4e8e\u5229\u7528\u4e86\u5355\u8c03\u6808\u8fd9\u4e2a\u795e\u5947\u7684\u624b\u6bb5,\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86$O(nlogn)$\u3002\u5982\u679c\u6211\u4eec\u5728\u6784\u5efa\u540e\u7f00\u6570\u7ec4\u7684\u65f6\u5019\u91c7\u7528DC3\u7b97\u6cd5\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u89e3\u51b3\u8fd9\u9053\u9898\u3002(\u5f53\u7136\u6211\u8fd8\u662f\u61d2\u5f97\u6253)\n\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define MX 823123\n\nusing namespace std;\ntypedef long long ll;\ntypedef struct tSA\n{\n    int str[MX],n,m;\n    int rank[MX],SA[MX],het[MX];\n    int buk[MX],yp[MX];\n    bool cmp(int *f,int x,int y,int w){return f[x]==f[y]&&f[x+w]==f[y+w];}\n    void jsort()\n    {\n        for(int i=0;i<=m;i++)buk[i]=0;\n        for(int i=1;i<=n;i++)buk[rank[yp[i]]]++;\n        for(int i=1;i<=m;i++)buk[i]+=buk[i-1];\n        for(int i=n;i>=1;i--)SA[buk[rank[yp[i]]]--]=yp[i];\n    }\n    void getSA()\n    {\n        for(int i=1;i<=n;i++)rank[i]=str[i],yp[i]=i;\n        m=28;jsort();\n        for(int w=1;w<n;w<<=1)\n        {\n            int p=0;\n            for(int i=n-w+1;i<=n;i++)yp[++p]=i;\n            for(int i=1;i<=n;i++)if(SA[i]>w)yp[++p]=SA[i]-w;\n            jsort(),swap(rank,yp),rank[SA[1]]=p=1;\n            for(int i=2;i<=n;i++)rank[SA[i]]=(cmp(yp,SA[i],SA[i-1],w)?p:++p);\n            m=p;\n        }\n        int k=0;\n        for(int i=1;i<=n;i++)\n        {\n            k=(k?k-1:0);\n            while(str[i+k]==str[SA[rank[i]-1]+k])k++;\n            het[rank[i]]=k;\n        }\n    }\n}SA;\nSA sa;\nchar str[MX];\nint l1,l2,top,sum[MX];\npair<int,ll>stk[MX];\nvoid work()\n{\n    ll ans=0;\n    stk[0]=make_pair(1,0);\n    for(int i=1;i<=sa.n;i++)sum[i]=sum[i-1]+(sa.SA[i]<=l1);\n    for(int i=1;i<=sa.n;i++)\n    {\n        while(top&&sa.het[stk[top].first]>sa.het[i])top--;\n        top++;\n        stk[top]=make_pair(i,(sum[i-1]-sum[stk[top-1].first-1])*sa.het[i]+stk[top-1].second);\n        if(sa.SA[i]>l1+1)ans+=stk[top].second;\n    }\n    top=0;\n    for(int i=1;i<=sa.n;i++)sum[i]=sum[i-1]+(sa.SA[i]>l1+1);\n    for(int i=1;i<=sa.n;i++)\n    {\n        while(top&&sa.het[stk[top].first]>sa.het[i])top--;\n        top++;\n        stk[top]=make_pair(i,(sum[i-1]-sum[stk[top-1].first-1])*sa.het[i]+stk[top-1].second);\n        if(sa.SA[i]<=l1)ans+=stk[top].second;\n    }\n    printf(\"%lld\\n\",ans);\n}\nint main()\n{\n    scanf(\"%s\",str+1);l1=strlen(str+1);\n    scanf(\"%s\",str+l1+2);\n    str[l1+1]='z'+1;\n    sa.n=strlen(str+1);\n    for(int i=1;i<=sa.n;i++)sa.str[i]=str[i]-'a'+1;\n    sa.getSA();\n    work();\n    return 0;\n}\n```\n",
        "postTime": 1516884391,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u63d0\u793a\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\uff0c\u4f46\u7ec6\u8282\u5f88\u591a\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u63a5\u5728\u4e00\u8d77\uff0c\u5148\u7b97\u51fa\u8fd9\u4e2aA+B\u7684\u4e32\u4e2d\u6240\u6709\u76f8\u540c\u7684\u5b50\u4e32\u7684\u4e2a\u6570\uff0c\u8fd9\u662f\u5f88\u597d\u5199\u7684\u3002\n\n\u7136\u540e\u7528\u5bb9\u65a5\uff0c\u51cf\u53bb\uff08\u4e24\u4e2a\u5728A\u4e2d\u9009\uff09\u4e0e\uff08\u4e24\u4e2a\u5728B\u4e2d\u9009\uff09\u7684\u4e2a\u6570\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5728A+B\u8fd9\u4e2a\u957f\u4e32\u4e2d\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u5bf9A\u548cB\u7edf\u8ba1\u76f8\u540c\u7684\u5b50\u4e32\u7684\u4e2a\u6570\u3002\u90a3\u4e48\u5269\u4e0b\u6765\u7684\u5c31\u662f\uff08\u4e00\u4e2a\u5728A\u4e2d\u9009\uff0c\u4e00\u4e2a\u5728B\u4e2d\u9009\uff09\u7684\u4e2a\u6570\u3002\n\n\u603b\u590d\u6742\u5ea6\uff1aO(log n (2 |A|+2 |B|))\n\n```cpp\n#include<bits/stdc++.h>FSYAKIOI\nusing namespace std;\ntypedef long long int ll;\nconst ll maxn=4E5+5;\nll sa[maxn],rk[maxn],y[maxn],c[maxn],n,m,height[maxn],ans,f[maxn];\nstring s1,s2,str;\nvoid SS()\n{\n\tm='~';\n\tfor(int i=1;i<=n;++i)++c[rk[i]=str[i]];\n\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\tfor(int i=n;i>=1;--i)sa[c[rk[i]]--]=i;\n\tfor(int k=1;k<=n;k<<=1)\n\t{EVENBAOAKIOI\n\t\tint num=0;\n\t\tfor(int i=n-k+1;i<=n;++i)y[++num]=i;\n\t\tfor(int i=1;i<=n;++i)if(sa[i]>k)y[++num]=sa[i]-k;\n\t\tfor(int i=1;i<=m;++i)c[i]=0;\n\t\tfor(int i=1;i<=n;++i)++c[rk[i]];\n\t\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\t\tfor(int i=n;i>=1;--i)sa[c[rk[y[i]]]--]=y[i],y[i]=0;\n\t\tswap(rk,y);\n\t\trk[sa[1]]=num=1;\n\t\tfor(int i=2;i<=n;++i)\n\t\t{\n\t\t\tif(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])rk[sa[i]]=num;\n\t\t\telse rk[sa[i]]=++num;\n\t\t}\n\t\tif(num==n)break;\n\t\tm=num;\n\t}\n}\nvoid lcp()\n{\n    int cur=0;\n    for(int i=1;i<=n;++i)\n    {\n        if(cur)--cur;\n        int j=sa[rk[i]-1];\n        while(str[j+cur]==str[i+cur])++cur;\n        height[rk[i]]=cur;\n    }\n}\nvoid out()\n{\n\tcout<<str<<\" \"<<n<<endl;\n\tfor(int i=1;i<=n;++i)cout<<sa[i]<<' ';\n\tcout<<endl;\n\tfor(int i=1;i<=n;++i)cout<<height[i]<<' ';\n\tcout<<endl;\n\tfor(int i=1;i<=n;++i,cout<<endl)\n\t\tfor(int j=sa[i];j<=n;++j)\n\t\t\tcout<<str[j];\n}\nvoid solve(int flag,string PCF)\n{\n\tmemset(height,0,sizeof(height));\n\tmemset(rk,0,sizeof(rk));\n\tmemset(y,0,sizeof(y));\n\tmemset(c,0,sizeof(c));\n\tmemset(f,0,sizeof(f));\n\tn=PCF.size();\n\tPCF=\"~\"+PCF;\n\tstr=PCF;\n\tSS();\n\tlcp();FSYAKIOI\n\tstack<ll>S;\n\tll sum=0;\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\twhile(S.size()&&height[S.top()]>=height[i])S.pop();\n\t\tif(S.size()==0)f[i]=height[i]*(i-1);\n\t\telse f[i]=f[S.top()]+height[i]*(i-S.top());\n\t\tS.push(i);\n\t\tsum+=f[i]*flag;\n\t}\n\tans+=sum;\n}\nint main()\n{\n//\tfreopen(\"a.in\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>s1>>s2;\n\tsolve(1,s1+\"~\"+s2);\n\tsolve(-1,s1);\n\tsolve(-1,s2);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1549618509,
        "uid": 65771,
        "name": "czpcf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u672c\u6765\u51c6\u5907\u5bf9\u7740\u8fd9\u9053\u9898\u5b66\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u7684\uff0c\u7ed3\u679c\u5e76\u4e0d\u662f\u5f88\u770b\u5f97\u61c2\u5176\u4ed6\u9898\u89e3\uff0c\u5c24\u5176\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u62d3\u6251\u6392\u5e8f\u2026\u2026  \n\u6700\u540e\u7cca\u4e86\u4e00\u4e2a\u81ea\u5df1\u731c\u7684\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u66b4\u529b\u5efaparent\u6811dfs\u4e86\u4e00\u904d\uff0c\u4e5f\u8fc7\u4e86\uff0c\u5c31\u7b80\u4ecb\u4e00\u4e0b\u81ea\u5df1\u7684\u505a\u6cd5\u5427\uff08\u6709\u9519\u8bef\u8bf7\u5927\u4f6c\u6307\u51fa\n\n\u9996\u5148\u6bcf\u6b21\u63d2\u5165\u5b50\u4e32\u7684\u65f6\u5019\u628alast\u8bbe\u56deroot\uff0c\u7136\u540e\u63d2\u5165\u65b0\u7684np\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u8fd9\u4e2a\u8fd9\u4e2a\u8282\u70b9\u4e14\u8282\u70b9\u4e0e\u5b83\u8868\u793a\u7684\u5b57\u7b26\u96c6\u5b8c\u5168\u4e00\u6a21\u4e00\u6837\u7684\u8bdd\uff0c\u5c31\u4e0d\u7528\u65b0\u5efanp\u8282\u70b9\u4e86\uff0c\u53ea\u9700\u8981\u6807\u8bb0\u8fd9\u4e2a\u70b9\u5728\u7b2ci\u4e2a\u4e32\u4e0a\u662fnp\u7c7b\u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\n\n\u6839\u636e\u67d0\u4e2a\u6027\u8d28\uff0c\u4e00\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u6240\u6709\u5b57\u7b26\u4e32\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5176\u5728parent\u6811\u7684\u5b50\u6811\u4e2dnp\u7c7b\u8282\u70b9\u7684\u4e2a\u6570\n\n\u66b4\u529b\u5efa\u51faparent\u6811\uff0cdfs\u6574\u68f5\u6811  \n\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u77e5\u9053\u540c\u4e00\u4e2a\u8282\u70b9\u5728\u7b2c\u4e00\u4e2a\u4e32\u91cc\u51fa\u73b0\u4e86\u51e0\u904d\uff0c\u5728\u7b2c\u4e8c\u4e2a\u4e32\u91cc\u51fa\u73b0\u4e86\u51e0\u904d\uff0c\u540c\u65f6\u8fd9\u4e2a\u8282\u70b9\u7684\u5b57\u7b26\u96c6\u5927\u5c0f\u5c31\u662f\u5b83\u7684len-\u7236\u4eb2\u7684len  \n\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u5c31\u662f$(t[now].len-t[t[now].fa].len)*sz[now][0]*sz[now][1]$\n\ndfs\u7684\u540c\u65f6\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nchar s1[200020],s2[200020];\n\nstruct SAM\n{\n    struct point\n    {\n        int son[26],fa,mx,len;\n    }t[800080];\n\n    int last=1,cnt=1;\n    vector<int> g[800080];\n    int sz[800080][2];\n\n    void add(int c,int num)\n    {\n        int p=last;\n        if(t[p].son[c]&&t[p].len+1==t[t[p].son[c]].len)\n        {\n            last=t[p].son[c];\n            sz[last][num]++;\n            return ;\n        }\n        int np=++cnt;\n        t[np].len=t[p].len+1;\n        sz[np][num]++;\n        while(p&&!t[p].son[c])\n        {\n            t[p].son[c]=np;\n            p=t[p].fa;\n        }\n        if(!p)\n        {\n            t[np].fa=1;\n        }\n        else\n        {\n            int q=t[p].son[c],nq;\n            if(t[q].len==t[p].len+1)\n            {\n                t[np].fa=q;\n            }\n            else\n            {\n                nq=++cnt;\n                t[nq]=t[q];\n                t[nq].len=t[p].len+1;\n                t[np].fa=t[q].fa=nq;\n                while(p&&t[p].son[c]==q)\n                {\n                    t[p].son[c]=nq;\n                    p=t[p].fa;\n                }\n            }\n        }\n        last=np;\n    }\n\n    long long ans=0;\n\n    int dfs(int now)\n    {\n        t[now].mx=t[now].len-t[t[now].fa].len;\n        for(int i=0;i<g[now].size();i++)\n        {\n            dfs(g[now][i]);\n            sz[now][0]+=sz[g[now][i]][0];\n            sz[now][1]+=sz[g[now][i]][1];\n        }\n        ans+=1ll*t[now].mx*sz[now][0]*sz[now][1];\n    }\n\n    int solve()\n     {\n        for(int i=1;i<=cnt;i++) g[t[i].fa].push_back(i);\n        dfs(1);\n        printf(\"%lld\\n\",ans);\n    }\n}sam;\n\nint main()\n{\n    scanf(\"%s\",s1);\n    scanf(\"%s\",s2);\n    int len1=strlen(s1);\n    int len2=strlen(s2);\n    for(int i=0;i<len1;i++)\n    {\n        sam.add(s1[i]-'a',0);\n    }\n    sam.last=1;\n    for(int i=0;i<len2;i++)\n    {\n        sam.add(s2[i]-'a',1);\n    }\n    sam.solve();\n}\n```",
        "postTime": 1550631891,
        "uid": 185441,
        "name": "\u30cb\u30d2\u30eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u5b89\u5229\u672c\u4eba\u535a\u5ba2 [Little Dino luogu3181[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26 [SAM]](https://dino.ml)  \n\nOrz \u697c\u4e0b\u795e\u4ed9zyt\uff08\u5c3d\u7ba1\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u539f\u56e0\u7eaf\u7cb9\u662f\u662f\u56e0\u4e3a\u770b\u4ed6\u7684\u65b9\u6cd5\u5b9e\u5728\u662f\u592a\u9ebb\u70e6\u4e86\u2026\u2026\uff09\u5982\u679c\u4f60\u89c9\u5f97\u6587\u5b57\u5f88\u591a\u5f88\u70e6\u7136\u540e\u4f60\u5bf9 $SAM$ \u5e76\u975e\u4e00\u7a8d\u4e0d\u901a\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u7b2c\u516d\u6bb5\u201c\u7b80\u5355\u6765\u8bf4\u201d\u3002\n\n\u5bf9\u4e8e\u6709\u591a\u4e2a\u4e32\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u5e7f\u4e49 $SAM$\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981\uff0c\u53ef\u4ee5\u5c06\u6bcf\u4e24\u4e2a\u4e32\u4e4b\u95f4\u7528\u4e00\u4e2a\u5947\u602a\u7684\u5b57\u7b26\uff08\u4f8b\u5982 $'a'+26$\uff09\u5168\u90e8\u8fde\u8d77\u6765\uff0c\u53d8\u6210\u4e00\u4e2a\u4e32\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u4e32\u5efa $SAM$\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u4e32\u6709\u4e00\u4e2a\u5b50\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u5728 $SAM$ \u4e0a\u5bf9\u5e94\u7684\u662f\u540c\u4e00\u4e2a\u8282\u70b9\u3002\u6211\u4eec\u8f6c\u5316\u4e00\u4e0b\uff0c\u5982\u679c $SAM$ \u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u5728\u4e32 $A$ \u4e2d\u7684 $right$ \u96c6\u5408\u5927\u5c0f\u4e3a $a$\uff0c\u5728\u4e32 $B$ \u4e2d\u7684 $right$ \u96c6\u5408\u5927\u5c0f\u4e3a $b$\uff0c\u90a3\u4e48 $a$ \uff0c$b$ \u4e2d\u4efb\u610f\u4e24\u4e2a\u914d\u5bf9\u90fd\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u60c5\u51b5\uff08\u5373\u5b50\u4e32\u76f8\u540c\uff09\u3002\n\n\u53c8\u56e0\u4e3a\u8981\u6c42\u662f\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\uff0c$SAM$ \u4e0a\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e86\u957f\u5ea6\u5728 $[minlen,maxlen]$ \u4e4b\u95f4\u7684\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u6545\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u8fd8\u8981\u4e58\u4e0a $maxlen-minlen+1$\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u8fde\u63a5\u4e32 $A$\uff0c$B$ \u5efa\u5728\u4e00\u4e2a $SAM$ \u4e0a\uff0c\u5982\u679c\u7528 $tot$ \u8868\u793a $SAM$ \u7684\u70b9\u6570\uff0c $size[i][0/1]$ \u8868\u793a $SAM$ \u4e0a\u8282\u70b9 $i$ \u4e2d\u5305\u542b\u7684\u4e32 $A$ \u6216 $B$ \u7684 $right$ \u96c6\u5408\u7684\u5927\u5c0f\uff0c$mx[i]$ \u8868\u793a\u70b9 $i$ \u7684 $maxlen$\uff0c\u90a3\u4e48\n$$\nans=\\sum_{i=1}^{tot} size[i][0] \\times size[i][1] \\times (mx[i] - mx[fa[i]])\n$$\n\n\u4ee3\u7801\u5199\u8d77\u6765\u5c31\u662f $SAM$ \u7684\u57fa\u7840\u64cd\u4f5c\uff1a\u63d2\u5165\u548c\u57fa\u6570\u6392\u5e8f\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nnamespace TYC\n{\n    const int N=800010;\n\n    long long ans;\n\n    namespace SAM\n    {\n        int last=1,tot=1,size[N][2];\n\n        struct node\n        {\n            int fa,mx,son[27];\n        }tr[N];\n\n        void insert(const int c,const int id)\n        {\n            int now=++tot,p=last;\n            tr[now].mx=tr[p].mx+1;\n            if(id!=2) size[now][id]++;\n            while(p&&!tr[p].son[c])\n                tr[p].son[c]=now,p=tr[p].fa;\n            if(!p) tr[now].fa=1;\n            else \n            {\n                int q=tr[p].son[c];\n                if(tr[q].mx==tr[p].mx+1) tr[now].fa=q;\n                else \n                {\n                    int clone=++tot;\n                    tr[clone]=tr[q];\n                    tr[clone].mx=tr[p].mx+1;\n                    tr[q].fa=tr[now].fa=clone;\n                    while(p&&tr[p].son[c]==q)\n                        tr[p].son[c]=clone,p=tr[p].fa;\n                }\n            }\n            last=now;\n        }\n\n        void radix_sort()\n        {\n            static int bask[N],q[N];\n            for(int i=1;i<=tot;i++) bask[tr[i].mx]++;\n            for(int i=1;i<=tot;i++) bask[i]+=bask[i-1];\n            for(int i=tot;i;i--) q[bask[tr[i].mx]--]=i;\n            for(int i=tot;i>1;i--)\n            {\n                int now=q[i],f=tr[now].fa;\n                size[f][0]+=size[now][0];\n                size[f][1]+=size[now][1];\n                ans+=(long long)size[now][0]*size[now][1]*(tr[now].mx-tr[f].mx);\n            }\n        }\n    }\n\n    void work()\n    {\n        static char s[N>>1];\n        scanf(\"%s\",s);\n        int len=strlen(s);\n        for(int i=0;i<len;i++)\n            SAM::insert(s[i]-'a',0);\n        SAM::insert(26,2);\n        scanf(\"%s\",s);\n        len=strlen(s);\n        for(int i=0;i<len;i++)\n            SAM::insert(s[i]-'a',1);\n        SAM::radix_sort();\n        printf(\"%lld\",ans);\n    }\n}\n\nint main()\n{\n    TYC::work();\n    return 0;\n}\n```",
        "postTime": 1547305565,
        "uid": 60563,
        "name": "LittleDino",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u53d1\u73b0\u9898\u89e3\u4e2d\u7684\u540e\u7f00\u81ea\u52a8\u673a\u4e0d\u662f\u5e7f\u4e49SAM\u5c31\u662f\u5c06\u4e24\u4e2a\u4e32\u62fc\u5728\u4e00\u8d77\u6574\u7684\u4e71\u7cdf\u7cdf\u7684\uff0c\u6240\u4ee5\u6765\u4e00\u53d1\u666e\u901a\u7684\u540e\u7f00\u81ea\u52a8\u673a\u9898\u89e3\uff1b\n\n\u849f\u84bb\u4e0d\u4f1a\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u6240\u4ee5\u628a\u8fd9\u9053\u9898\u5f53\u4f5c\u666e\u901a\u540e\u7f00\u81ea\u52a8\u673a\u7684\u6a21\u677f\u6765\u5199\uff1b\n\n\u9996\u5148\u6211\u4eec\u5bf9\u4e8e\u4e32s\u548c\u4e32t\u5206\u522b\u6784\u9020\u4e00\u4e2aSAM\uff1b\u901a\u8fc7SAM\u57fa\u7840\u64cd\u4f5c(\u5229\u7528parent\u6811\u6216\u57fa\u6570\u6392\u5e8f)\u6c42\u51fa\u6bcf\u4e2a\u5b50\u4e32\u5728\u539f\u4e32\u7684\u51fa\u73b0\u6b21\u6570right[]\uff1b\n\n\u7136\u540e\u90fd\u4ece\u4e24\u4e2a\u81ea\u52a8\u673a\u7684\u6839\u8282\u70b9:1\u53f7\u8282\u70b9\u8dd1dfs\uff1b\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u5728\u4e24\u4e2aSAM\u4e0a\u8f6c\u79fb\u65b9\u5f0f\u76f8\u540c\u800c\u5230\u8fbe\u7684\u4e24\u4e2a\u8282\u70b9(\u5c3d\u7ba1\u4ed6\u4eec\u7684\u8282\u70b9\u7f16\u53f7\u4e0d\u540c\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u5e76\u4e0d\u5728\u4e00\u4e2aSAM\u4e0a)\uff0c\u5b83\u4eec\u5747\u53ef\u4ee5\u8868\u793a\u540c\u4e00\u4e2a\u5b50\u4e32\uff1b\n\n\u90a3\u4e48\u663e\u7136\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u4e24\u4e2aSAM\u7684\u8f6c\u79fb\u65b9\u5f0f\u76f8\u540c\u7684\u8282\u70b9x,y\u7684right[x]*right[y]\u7684\u7d2f\u52a0\n\n\u6ce8\u610f\uff0c\u867d\u7136SAM\u7684\u8282\u70b9\u8868\u793a\u7684\u662fendpos\u7b49\u4ef7\u7c7b\uff0c\u5e76\u4e0d\u662f\u5b50\u4e32\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u8f6c\u79fb\u5728\u4e24\u4e2aSAM\u4e0a\u8f6c\u79fb\u5230\u76f8\u540c\u7684\u70b9\u5bf9(x,y);\u8fd9\u610f\u5473\u7740\u6211\u4eec\u65e0\u9700\u5173\u6ce8SAM\u8282\u70b9\u4e2d\u7684len\u8fd9\u4e00\u5c5e\u6027\uff1b\n\n\u4ee3\u7801\u5c31\u5728\u4e0b\u9762\uff1a\u4e0d\u7406\u89e3\u7684\u8bf7\u770b~~horse~~\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define inc(i,a,b) for(register int i=a;i<=b;i++)\n#define dec(i,a,b) for(register int i=a;i>=b;i--)\nusing namespace std;\nchar s[1000010],t[1000010];\nint n,m;\nclass node2{\n\tpublic:\n\tclass node1{\n\t\tpublic:\n\t\tint link,len;\n\t\tint ch[27];\n\t}sam[1000010];\n\tint\tlast=1,size=1;\n\tlong long siz[1000010];\n\tvoid add(int to){\n\t\tint cur=++size; siz[cur]=1; \n\t\tsam[cur].len=sam[last].len+1;\n\t\tint u=last;\n\t\twhile(u&&!sam[u].ch[to]) sam[u].ch[to]=cur,u=sam[u].link;\n\t\tif(!u) sam[cur].link=1;\n\t\telse{\n\t\t\tint q=sam[u].ch[to];\n\t\t\tif(sam[q].len==sam[u].len+1) sam[cur].link=q;\n\t\t\telse{\n\t\t\t\tint neww=++size;\n\t\t\t\tsam[neww]=sam[q];\n\t\t\t\tsam[neww].len=sam[u].len+1;\n\t\t\t\twhile(u&&sam[u].ch[to]==q) sam[u].ch[to]=neww,u=sam[u].link;\n\t\t\t\tsam[q].link=neww;\n\t\t\t\tsam[cur].link=neww;\n\t\t\t}\n\t\t}\n\t\tlast=cur;\n\t}\n}SAM1,SAM2;\nlong long ans=0;\nvoid dfs(int x,int y){\n\tfor(int i=0;i<=25;i++){\n\t\tif(SAM1.sam[x].ch[i]&&SAM2.sam[y].ch[i]){\n\t\t\tdfs(SAM1.sam[x].ch[i],SAM2.sam[y].ch[i]);\n\t\t}\t\t\n\t}\t\n\tif(x!=1&&y!=1) ans+=SAM1.siz[x]*SAM2.siz[y];\n}\nint c1[1000010],t1[1000010],c2[1000010],t2[1000010];\nint main()\n{\n\tscanf(\"%s%s\",s+1,t+1); n=strlen(s+1),m=strlen(t+1);\n\tinc(i,1,n) SAM1.add(s[i]-'a');\n\tinc(i,1,m) SAM2.add(t[i]-'a');\n\tinc(i,1,SAM1.size) c1[SAM1.sam[i].len]++;\n\tinc(i,1,n) c1[i]+=c1[i-1];\n\tinc(i,1,SAM1.size) t1[c1[SAM1.sam[i].len]--]=i;\n\tdec(i,SAM1.size,1) SAM1.siz[SAM1.sam[t1[i]].link]+=SAM1.siz[t1[i]];\n\tinc(i,1,SAM2.size) c2[SAM2.sam[i].len]++;\n\tinc(i,1,m) c2[i]+=c2[i-1];\n\tinc(i,1,SAM2.size) t2[c2[SAM2.sam[i].len]--]=i;\n\tdec(i,SAM2.size,1) SAM2.siz[SAM2.sam[t2[i]].link]+=SAM2.siz[t2[i]];\n\tdfs(1,1); cout<<ans;\n}\n```\n\n\n\n",
        "postTime": 1578032721,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u771f\u662f\u597d\u9898\u2026\u2026\u3002\n\n\u5173\u4e8e\u5355\u8c03\u6808\u7684\u6bd4\u8f83\u6709\u6280\u5de7\u6027\u7684\u505a\u6cd5 \n\n~~\u5982\u679c\u5927\u4f6c\u8ba4\u4e3a\u6ca1\u6709\u6280\u5de7\u6027\u5c31\u81ea\u52a8\u63a0\u8fc7~~\uff1a\n\n\n\u6211\u4eec\u8981\u6c42\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a\n\n$\\sum_{Sa_i<n+1<Sa_j}min_{i\\leq k\\leq j }\\ ht_k + \\sum_{Sa_j<n+1<Sa_i}min_{j\\leq k\\leq i }\\ ht_k$\n\n\n\u4ece\u524d\u5f80\u540e\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5355\u8c03\u6808\uff0c\u4e3a\u4ec0\u4e48\u697c\u4e0b\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u8bb0$val$\u548c$ht$\uff0c\u5c31\u662f\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u6709\u7684\u603b\u6570\u548c\u7684$ht$\n\n\u8fd9\u91cc\u6309\u6392\u540d\u4ece\u540e\u5f80\u524d\u505a\u3002\uff08\u4e3a\u4ec0\u4e48\u6700\u540e\u4f1a\u8bb2\uff09\n\n\u5148\u53ea\u8003\u8651$S1$\u4e32\u63d2\u5165\uff0c$S2$\u4e32\u67e5\u8be2\u3002\n\n\u6211\u4eec\u6bcf\u9047\u5230\u4e00\u4e2a\u4e32\uff0c\u5c31\u8981\u5224\u65ad\u662f\u5728$S1$\u8fd8\u662f\u5728$S2$\uff0c\u5982\u679c\u5728$S1$\uff0c\u5c31\u76f4\u63a5\u52a0\u4e0a\u524d\u9762\u6240\u6709\u7684\u7b54\u6848\u4e4b\u548c\u3002\n\n\u7136\u540e\u5f39\u6808\uff0c\u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u4e0d\u662f\u771f\u6b63\u7684\u5f39\uff0c\u800c\u662f\u548c\u4e4b\u524d\u7684\u4e1c\u897f**\u5408\u5e76**\uff0c\u56e0\u4e3a\u73b0\u5728\u7684\u6808\u9876\u7684\u6700\u5927\u5143\u7d20\u5df2\u7ecf\u4e0d\u4f1a\u53d6\u5230\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5b83\u4e0e\u6808\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5408\u5e76\uff0c\u4e5f\u5c31\u662f$val_{top-1}+=val_{top}$\n\n\u4e5f\u5c31\u662f\u8bf4\u672c\u8d28\u4e0a\u8fd8\u4e0d\u662f\u5355\u8c03\u6808\uff0c\u662f\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u5982\u679c\u662f\u5728$S2$\uff0c$val_{top}$\u52a0\u4e00\uff0c\u4e5f\u5c31\u662f\u6709\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u5165\u6808\u3002\n\n\u7136\u540e\u66f4\u65b0\u5c06\u52a0\u5165\u7b54\u6848\u7684$now$\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u4ece\u540e\u5f80\u524d\u505a\uff1f\u56e0\u4e3a$height$\u6570\u7ec4\u7684\u5b9a\u4e49\u662f\u5f53\u524d\u6392\u540d\u548c\u4e0a\u4e00\u6392\u540d\u7684$lcp$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4ece\u524d\u5f80\u540e\u505a\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6392\u540d$i$\u800c\u8a00\uff0c\u67e5\u8be2$i-1$\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5c06\u4f1a\u662f$i-2$\u548c$i-1$\u7684$lcp$\uff0c\u8fd9\u6837\u5c31\u4e0d\u5bf9\u4e86\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u662f\u4ece\u540e\u5f80\u524d\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6392\u540d$i$\u800c\u8a00\uff0c\u67e5\u8be2$i+1$\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5c06\u4f1a\u662f$i$\u548c$i+1$\u7684$lcp$\uff0c\u8fd9\u6837\u5c31\u5bf9\u4e86\u3002\n\n\u8d34\u5355\u8c03\u6808\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```\nll sol(R b){\n    ll res=0,now=0,rec=0;\n    while(top)STK[top]=val[top]=0,top--;\n    for(R i=n-1;i>=1;--i){\n        rec=0;\n        if((sa[i]>len1+1)^b)res+=now;\n        while(STK[top]>=ht[i]&&top)\n            now-=1ll*STK[top]*val[top],rec+=val[top--];\n        STK[++top]=ht[i],val[top]=rec;\n        if((sa[i]<=len1)^b)val[top]++;\n        now+=1ll*val[top]*STK[top];\n    }\n    return res;\n}\n```\n\n$b$\u8868\u793a\u7684\u542b\u4e49\u662f\uff1a$S1$\u67e5\u8be2$S2$\u4fee\u6539 \u6216\u8005 $S2$\u67e5\u8be2$S1$\u4fee\u6539\n\n\u6700\u540e\u7684\u7b54\u6848\u662f$sol(0)+sol(1)$",
        "postTime": 1537349825,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "~~\u770b\u5230\u6ca1\u6709\u5206\u6cbb\u505a\u7684\u8d76\u7d27\u6765\u6c34\u4e00\u53d1\u2026\u2026~~\n\n\u5982\u679c\u8fd9\u662f\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u90a3\u5c31\u76f8\u5f53\u4e8e\u662f\u6240\u6709\u4e24\u4e2a\u540e\u7f00\u7684$LCP$\uff0c\u53ef\u4ee5\u8dd1\u4e00\u904d$SA$\u7136\u540e\u7528$Height$\u6c42\uff0c\u4f46\u8fd9\u662f\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e2a\u7279\u6b8a\u7b26\u53f7\u8fde\u8d77\u6765\u518d\u8dd1$SA$\uff0c\u4f46\u662f\u4f1a\u6709\u5728\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5185\u7684\u65b9\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bb9\u65a5\uff0c\u628a\u603b\u4f53\u7684\u65b9\u6848\u51cf\u53bb\u4e24\u4e2a\u5b57\u7b26\u4e32\u5185\u7684\u65b9\u6848\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u7b54\u6848\u5982\u4f55\u6c42\uff0c\u6211\u4eec\u77e5\u9053\u4e24\u4e2a\u540e\u7f00\u7684$LCP$\u662f$Height$\u533a\u95f4\u5185\u7684$min$\uff0c\u6211\u4eec\u8981\u7edf\u8ba1\u6240\u6709\u540e\u7f00\u5bf9\uff0c\u76f8\u5f53\u4e8e\u6c42$\\sum_{[l,r]\\in[1,n]}min_{i\\in [l,r]}\\{Height_i\\}$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6700\u88f8\u7684\u7edf\u8ba1\u6240\u6709\u533a\u95f4\u7684\u5206\u6cbb\u6c42\u51fa\u6765\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\nnamespace ywy\n{\n\tinline int get(char *str)\n\t{\n\t\tregister int ptr=1;\n\t\tchar c;\n\t\twhile((c=getchar())||23333)if(c>='a'&&c<='z')break;\n\t\tstr[ptr]=c;\n\t\tptr++;\n\t\twhile((c=getchar())||23333)\n\t\t{\n\t\t\tif(c>='a'&&c<='z')str[ptr]=c,ptr++;\n\t\t\telse return(ptr-1);\n\t\t}\n\t} char str1[500001],str2[500001],str[500001];\n\tunsigned char bv[500001];\n\tint sa[500001],rk[500001],tsa[500001],trk[500001],temp[500001],sums[500001],lst[500001],lstcnt[500001];\n\tint h[500001],height[500001],mins[500001];\n\tll tot=0;\n\tvoid digui(int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttot+=height[l];\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tdigui(l,mid);\n\t\tdigui(mid+1,r);\n\t\tmins[mid]=height[mid];\n\t\tmins[mid+1]=height[mid+1];\n\t\tfor(register int i=mid-1; i>=l; i--)mins[i]=min(mins[i+1],height[i]);\n\t\tfor(register int i=mid+2; i<=r; i++)mins[i]=min(mins[i-1],height[i]);\n\t\tregister int ptr=mid;\n\t\tfor(register int i=mid; i>=l; i--)\n\t\t{\n\t\t\twhile(ptr<r&&mins[ptr+1]>=mins[i])ptr++;\n\t\t\ttot+=(ll)mins[i]*(ll)(ptr-mid);\n\t\t}\n\t\tptr=mid+1;\n\t\tfor(register int i=mid+1; i<=r; i++)\n\t\t{\n\t\t\twhile(ptr>l&&mins[ptr-1]>mins[i])ptr--;\n\t\t\ttot+=(ll)mins[i]*(ll)(mid+1-ptr);\n\t\t}\n\t}\n\tinline int getrank(int a,int b)\n\t{\n\t\tif(lst[a]==b)\n\t\t{\n\t\t\tlstcnt[a]++;\n\t\t\treturn(sums[a]);\n\t\t}\n\t\tsums[a]-=lstcnt[a];\n\t\tlst[a]=b;\n\t\tlstcnt[a]=1;\n\t\treturn(sums[a]);\n\t}\n\tinline void SA(int n)\n\t{\n\t\tmemset(sums,0,sizeof(sums));\n\t\tfor(register int i=1; i<=n; i++)sums[str[i]]++;\n\t\tfor(register int i=1; i<='z'; i++)sums[i]+=sums[i-1];\n\t\tfor(register int i=1; i<=n; i++)rk[i]=sums[str[i]-1]+1;\n\t\tfor(register int i=1; i<=n; i++)sa[sums[str[i]]]=i,sums[str[i]]--;\n\t\tfor(register int bit=1; (1<<(bit-1))<=n; bit++)\n\t\t{\n\t\t\tmemset(sums,0,sizeof(sums));\n\t\t\tunsigned char bswitch=1;\n\t\t\tfor(register int i=1; i<=n; i++)sums[rk[i]]++,bv[i]=0;\n\t\t\tfor(register int i=1; i<=n; i++)sums[i]+=sums[i-1],lst[i]=-1,temp[i]=sums[i],lstcnt[i]=0;\n\t\t\tfor(register int i=n; i>=1; i--)\n\t\t\t{\n\t\t\t\tif(sa[i]<=(1<<(bit-1)))continue;\n\t\t\t\ttrk[sa[i]-(1<<(bit-1))]=getrank(rk[sa[i]-(1<<(bit-1))],rk[sa[i]]);\n\t\t\t\ttsa[temp[rk[sa[i]-(1<<(bit-1))]]]=sa[i]-(1<<(bit-1));\n\t\t\t\ttemp[rk[sa[i]-(1<<(bit-1))]]--;\n\t\t\t}\n\t\t\tfor(register int i=n; i>n-(1<<(bit-1)); i--)\n\t\t\t{\n\t\t\t\ttrk[i]=getrank(rk[i],0);\n\t\t\t\ttsa[temp[rk[i]]]=i;\n\t\t\t\ttemp[rk[i]]--;\n\t\t\t}\n\t\t\tfor(register int i=1; i<=n; i++)\n\t\t\t{\n\t\t\t\tsa[i]=tsa[i];\n\t\t\t\trk[i]=trk[i];\n\t\t\t\tif(bv[rk[i]])bswitch=0;\n\t\t\t\tbv[rk[i]]=1;\n\t\t\t}\n\t\t\tif(bswitch)break;\n\t\t}\n\t}\n\tinline void Height(int n)\n\t{\n\t\twhile(rk[1]!=1&&h[1]<n-sa[rk[1]-1]+1&&str[1+h[1]]==str[sa[rk[1]-1]+h[1]])h[1]++;\n\t\theight[rk[1]]=h[1];\n\t\tfor(register int i=1; i<=n; i++)\n\t\t{\n\t\t\th[i]=max(0,h[i-1]-1);\n\t\t\twhile(rk[i]!=1&&h[i]<min(n-i+1,n-sa[rk[i]-1]+1)&&str[i+h[i]]==str[sa[rk[i]-1]+h[i]])h[i]++;\n\t\t\theight[rk[i]]=h[i];\n\t\t}\n\t}\n\tinline ll solve(int n)\n\t{\n\t\ttot=0;\n\t\tSA(n);\n\t\tHeight(n);\n\t\tdigui(1,n);\n\t\treturn(tot);\n\t}\n\tvoid ywymain()\n\t{\n\t\tint n1=get(str1),n2=get(str2);\n\t\tmemcpy(str,str1,sizeof(str));\n\t\tll da=solve(n1);\n\t\tmemcpy(str,str2,sizeof(str));\n\t\tll db=solve(n2);\n\t\tint ptr=1;\n\t\tfor(register int i=1; i<=n1; i++)str[ptr]=str1[i],ptr++;\n\t\tstr[ptr]='C';\n\t\tptr++;\n\t\tfor(register int i=1; i<=n2; i++)str[ptr]=str2[i],ptr++;\n\t\tptr--;\n\t\tcout<<solve(ptr)-da-db<<endl;\n\t}\n}\nint main()\n{\n\tywy::ywymain();\n\treturn(0);\n}\n```",
        "postTime": 1542247538,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u5e7f\u4e49SAM\u3002\n\n\n\u5176\u5b9e\u4e5f\u6ca1\u600e\u4e48\u9ad8\u7ea7\uff0c\u5c31\u662f\u5c06SAM\u5efa\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u5171\u7528\u8282\u70b9\u800c\u5df2\u3002\n\n\n\u968f\u4fbf\u60f3\u60f3\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u7b54\u6848\u5e94\u8be5\u662f\n\n\n$\\sum\\limits_{p\\in DAWG}cnt1_p\\cdot cnt2_p\\cdot (max_p-min_p+1)$\n\n\n\u5176\u4e2d\uff0c\u5982\u679c\u8bbep\u6307\u5411\u7684link\u8282\u70b9\u4e3aq\uff0c\u5219$min_p=max_q+1$\n\n\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u5efa\u597d\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u540e\uff0c\u6309\u7167\u62d3\u6251\u5e8f\u6392\u597d\uff0c\u8d70\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f$t_0$\u4e0d\u4ea7\u751f\u8d21\u732e\uff0c\u4e0d\u8981\u52a0\u5165\u62d3\u6251\u5e8f\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n    #include<bits/stdc++.h>\n    #include<cctype>\n    #define For(i,a,b) for(i=(a),i##end=(b);i<=i##end;++i)\n    #define Forward(i,a,b) for(i=(a),i##end=(b);i>=i##end;--i)\n    #define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n    #define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n    using namespace std;\n    template<typename T>inline void read(T &x){\n        T s=0,f=1;char k=getchar();\n        while(!isdigit(k)&&k^'-')k=getchar();\n        if(!isdigit(k)){f=-1;k=getchar();}\n        while(isdigit(k)){s=s*10+(k^48);k=getchar();}\n        x=s*f;\n    }\n    void file(void){\n        #ifndef ONLINE_JUDGE\n        freopen(\"water.in\",\"r\",stdin);\n        freopen(\"water.out\",\"w\",stdout);\n        #endif\n    }\n    const int MAXN=2e5+7;\n    static char a[MAXN],b[MAXN];\n    void init()\n    {\n        scanf(\"%s%s\",a,b);\n    }\n    static struct DAWG\n    {\n        int len,link,nxt[30],cnt[2];\n    }p[MAXN<<2];\n    static int last=0,cur,nq,e=0;\n    inline void extend(int c,int tr)\n    {\n        p[cur=++e].len=p[last].len+1;p[cur].cnt[tr]=1;\n        static int i,q;\n        for(i=last;~i&&!p[i].nxt[c];i=p[i].link)p[i].nxt[c]=cur;\n        if(i==-1)p[cur].link=0;\n        else\n        {\n            q=p[i].nxt[c];\n            if(p[i].len+1==p[q].len)p[cur].link=q;\n            else\n            {\n                p[nq=++e].len=p[i].len+1;\n                memcpy(p[nq].nxt,p[q].nxt,sizeof p[q].nxt);\n                p[nq].link=p[q].link;\n                p[q].link=p[cur].link=nq;\n                for(;~i&&p[i].nxt[c]==q;i=p[i].link)p[i].nxt[c]=nq;\n            }\n        }\n        last=cur;\n    }\n    static int que[MAXN<<2];\n    static long long ans;\n    static int in[MAXN<<2],h,t;\n    void solve()\n    {\n        p[0].link=-1;\n        static int n=strlen(a)-1,m=strlen(b)-1;\n        Rep(i,0,n)extend(a[i]-'a',0);\n        last=0;\n        Rep(i,0,m)extend(b[i]-'a',1);\n        Rep(i,1,e)++in[p[i].link];\n        Rep(i,1,e)if(!in[i])que[++t]=i;\n        while(t<e)if(!(--in[p[que[++h]].link]))que[++t]=p[que[h]].link;\n        Rep(i,1,e)\n        {\n            ans+=1ll*p[que[i]].cnt[0]*p[que[i]].cnt[1]\n                *(p[que[i]].len-p[p[que[i]].link].len);\n            p[p[que[i]].link].cnt[0]+=p[que[i]].cnt[0];\n            p[p[que[i]].link].cnt[1]+=p[que[i]].cnt[1];\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    int main(void){\n        file();\n        init();\n        solve();\n        return 0;\n    }\n\n```",
        "postTime": 1516500426,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u4e2a\u6bd4\u8f83\u88f8\u7684 SAM \uff1f\n\n\u6211\u4eec\u8003\u8651\u5230\u53ef\u4ee5\u5148\u5efa\u4e00\u4e2a\u4e32 1 \u7684 sam \uff0c\u7136\u540e\u5904\u7406\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684 siz \u548c sum \n\uff08\u5176\u4e2d siz \u8868\u793a\u67d0\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u540e\u7f00\u51fa\u73b0\u6b21\u6570\uff0c sum \u8868\u793a\u4ee5\u5f53\u524d\u70b9\u4ee3\u8868\u7684\u540e\u7f00\u7684\u5b50\u4e32\u7684\u6240\u6709\u540e\u7f00\u51fa\u73b0\u6b21\u6570\uff09\n\n\n\u7136\u540e\u4e32 2 \u53bb\u5339\u914d\u5c31\u597d\u4e86\uff08\u8bdd\u8bf4\u8fd9\u4e2a\u5339\u914d\u8fc7\u7a0b\u4e0d\u662f\u975e\u5e38\u50cf  AC \u81ea\u52a8\u673a\u4e48\uff1f\uff09\n\n# code\n\n```\n//by Judge\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int M=4e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline bool cmin(int& a,int b){return a>b?a=b,1:0;}\ninline void reads(string& s){ char c=getchar();\n\tfor(;!isalpha(c);c=getchar()); s=\" \";\n\tfor(;isalpha(c);c=getchar()) s+=c;\n} int n; string s;\nstruct SAM{ int las,cnt; SAM(){las=cnt=1;}\n\tarr fa,len,siz,c,sa; int to[M][26]; ll sum[M];\n\tinline void insert(int c){ int p=las,np=++cnt;\n\t\tlas=np,len[np]=len[p]+1,siz[np]=1;\n\t\tfor(;p&&!to[p][c];p=fa[p]) to[p][c]=np;\n\t\tif(!p) return fa[np]=1,void(); int q=to[p][c];\n\t\tif(len[q]==len[p]+1) return fa[np]=q,void();\n\t\tint nq=++cnt; len[nq]=len[p]+1,fa[nq]=fa[q];\n\t\tfa[q]=fa[np]=nq,memcpy(to[nq],to[q],sizeof to[q]);\n\t\tfor(;p&&to[p][c]==q;p=fa[p]) to[p][c]=nq;\n\t}\n\tinline void sa_sort(){ fp(i,1,cnt) ++c[len[i]]; fp(i,1,cnt) c[i]+=c[i-1];\n\t\tfp(i,1,cnt) sa[c[len[i]]--]=i; fd(i,cnt,1) siz[fa[sa[i]]]+=siz[sa[i]];\n\t\tfp(i,1,cnt) sum[sa[i]]=sum[fa[sa[i]]]+1ll*(len[sa[i]]-len[fa[sa[i]]])*siz[sa[i]];\n\t}\n\tinline ll match(){\n\t\tint p=1,now=0,c; ll ans=0;\n\t\tfp(i,1,n){ c=s[i]-'a';\n\t\t\tfor(;p&&!to[p][c];p=fa[p]);\n\t\t\tif(!p){p=1,now=0; continue;}\n\t\t\tcmin(now,len[p]),++now,p=to[p][c];\n\t\t\tans+=sum[fa[p]]+(now-len[fa[p]])*siz[p]; //\u52a0\u4e0a fa \u7684 sum \u4ee5\u53ca\uff08\u5f53\u524d\u6700\u5927\u5339\u914d\u957f\u5ea6-fa \u7b97\u8fc7\u7684\u8d21\u732e\uff09* \u5f53\u524d\u540e\u7f00\u51fa\u73b0\u6b21\u6570\n\t\t} return ans;\n\t}\n}p;\nint main(){ reads(s),n=s.length()-1;\n\tfp(i,1,n) p.insert(s[i]-'a');\n\tp.sa_sort(),reads(s),n=s.length()-1;\n\treturn !printf(\"%lld\\n\",p.match());\n}\n```",
        "postTime": 1554163769,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u9898\u76ee\u76f8\u5f53\u4e8e\u95ee\uff0cs1\u7684\u6bcf\u4e2a\u540e\u7f00\u548cs2\u7684\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u548c\u3002\n\n\u540e\u7f00\u6570\u7ec4\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u9694\u4e2a\u7a7a\u683c\u3002\n\n\u7136\u540e\uff0c\u6c42\u51faheight\u3002\n\n\u4e4b\u540e\u4ece\u524d\u5f80\u540e\u626b\uff0c\u5982\u679c\u9047\u89c1s1\u7684\uff0c\u5c31\u8ba1\u7b97\u5df2\u6709s2\u7684\u548c\uff0c\u52a0\u5165\uff1b\u5982\u679c\u9047\u89c1s2\u7684\uff0c\u5c31\u8ba1\u7b97\u5df2\u6709s1\u7684\u548c\uff0c\u52a0\u5165\uff1b\u6bcf\u6b21\u8fd8\u8981\u5bf9\u6240\u6709\u5143\u7d20\u53d6min\u3002\n\n\u7528\u5355\u8c03\u6808\u5373\u53ef\u3002\n",
        "postTime": 1482491240,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "[$My\\ blog$](https://ctz45562.github.io/2019/04/21/%E6%B4%9B%E8%B0%B7-P3181-HAOI2016-%E6%89%BE%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3181)\n\n\u628a\u4e24\u4e2a\u4e32\u62fc\u4e00\u5757\u67d3\u4e2a\u8272\u9020$SA$\u3002\n\n\u5bf9\u4e8e\u5b83\u4eec\u7684\u5b50\u4e32$S_A,S_B$\uff0c\u8bbe\u5b83\u4eec\u5206\u522b\u5c5e\u4e8e\u540e\u7f00$suffix_i,suffix_j$\uff0c\u5219\u53ea\u8981$LCP(suffix_i,suffix_j)\\ge len(S_A)$\u4e24\u4e2a\u5b50\u4e32\u5c31\u662f\u76f8\u540c\u7684\u3002\n\n\u53c8\u6709$LCP(suffix_i,suffix_j)=\\min\\{height[k]\\}(i<k\\le j)$\n\n\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u533a\u95f4$[l,r]$\u5b83\u4f1a\u4ea7\u751f$\\min\\{height[k]\\}(k\\in (l,r])$\u7684\u8d21\u732e\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u4e86\u3002\u663e\u7136\u9009\u53d6\u7684\u4e24\u4e2a\u533a\u95f4\u7aef\u70b9\u989c\u8272\u8981\u4e0d\u540c\uff0c\u505a\u4e2a\u524d\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 400005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n\tT x=0;\n\tint y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nint sa[maxn],rk[maxn],hei[maxn],tp[maxn],tax[maxn],ll[maxn],rr[maxn],col[maxn],sum[maxn][2],n,m;\nchar a[maxn],s[maxn];\nstruct MonoStack{\n\tint sta[maxn],top;\n\tinline void push1(int x){\n\t\twhile(top>1&&hei[sta[top]]>=hei[x])--top;\n\t\tsta[++top]=x;\n\t}\n\tinline void push2(int x){\n\t\twhile(top>1&&hei[sta[top]]>hei[x])--top;\n\t\tsta[++top]=x;\n\t}\n\tinline void clear(){\n\t\ttop=0;\n\t}\n\tinline int back(){\n\t\treturn sta[top-1];\n\t}\n}st;//\u5355\u8c03\u6808\nvoid Rsort(){\n\tfor(register int i=0;i<=m;++i)tax[i]=0;\n\tfor(register int i=1;i<=n;++i)++tax[rk[i]];\n\tfor(register int i=1;i<=m;++i)tax[i]+=tax[i-1];\n\tfor(register int i=n;i;--i)sa[tax[rk[tp[i]]]--]=tp[i];\n}\nvoid Ssort(){\n\tfor(register int i=1;i<=n;++i)rk[i]=s[i],tp[i]=i;\n\tm=225,Rsort();\n\tfor(register int k=1,p=0;p<n;m=p,k<<=1){\n\t\tp=0;\n\t\tfor(register int i=1;i<=k;++i)tp[++p]=n-k+i;\n\t\tfor(register int i=1;i<=n;++i)if(sa[i]>k)tp[++p]=sa[i]-k;\n\t\tRsort();\n\t\tfor(register int i=1;i<=n;++i)tp[i]=rk[i];\n\t\trk[sa[1]]=p=1;\n\t\tfor(register int i=2;i<=n;++i)\n\t\t\trk[sa[i]]=tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+k]==tp[sa[i-1]+k]?p:++p;\n\t}\n}\nvoid get_height(){\n\tint k=0,x;\n\tfor(register int i=1;i<=n;++i){\n\t\tif(rk[i]==1)continue;\n\t\tif(k)--k;\n\t\tx=sa[rk[i]-1];\n\t\twhile(i+k<=n&&x+k<=n&&s[i+k]==s[x+k])++k;\n\t\thei[rk[i]]=k;\n\t}\n}\nvoid solve(){\n\tlong long ans=0;\n\tst.push1(1);\n\tfor(register int i=1;i<=n;++i)st.push1(i),ll[i]=st.back();\n\tst.clear(),st.push2(n+1);\n\tfor(register int i=n;i;--i)st.push2(i),rr[i]=st.back()-1;\n\tfor(register int i=1;i<=n;++i)\n\t\tsum[i][0]=sum[i-1][0]+(col[sa[i]]==1),sum[i][1]=sum[i-1][1]+(col[sa[i]]==2);//\u524d\u7f00\u548c\n\tfor(register int i=1;i<=n;++i){\n\t\tans+=1ll*hei[i]*((sum[rr[i]][0]-sum[i-1][0])*(sum[i-1][1]-sum[ll[i]-1][1])+(sum[rr[i]][1]-sum[i-1][1])*(sum[i-1][0]-sum[ll[i]-1][0]));\n\t}\n\n\tprintf(\"%lld\\n\",ans);\n}\nint main(){\n\tscanf(\"%s\",s+1),m=strlen(s+1)+1;\n\tfor(register int i=1;i<m;++i)col[i]=1;\n\ts[m]='$';\n\tscanf(\"%s\",a+1),n=strlen(a+1);\n\tfor(register int i=1;i<=n;++i)\n\t\ts[i+m]=a[i],col[i+m]=2;\n\tn+=m;\n\tSsort(),get_height(),solve();\n}\n\n```\n\n",
        "postTime": 1555809011,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u5355\u8c03\u6027\n\n\u7136\u540e\u7edf\u8ba1\u7b54\u6848\n\n\u4e2d\u95f4\u5bb9\u65a5\u4e00\u4e0b\n\n\u6211\u89c9\u5f97\u8fd9\u4e2a\u5e94\u8be5\u6bd4\u8f83\u597d\u50cf\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u5bfb\u627elcp\u7684\u5355\u8c03\u6027\n\n\u4e8e\u662f\u53ef\u4ee5\u7b97\u51fa\u4e0d\u540c\u60c5\u51b5\u7684\u6570\u91cf\n\n\u4e8e\u662f\u6211\u4eec\u5206\u4e00\u79cd\u5927\u4e8e\u7684\u628a\u5b83\u51cf\u6389\n\n\u5426\u5219\u52a0\u4e0a\n\n\u6ce8\u610f\u7528long long\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define N 500000\n#define ll long long\nusing namespace std;\nint n,c[N],x[N],y[N],rk[N],sa[N],height[N];\nstring s,s1,s2;\nll ansn,dp[N];\nstack<int> st;\nvoid pai(){\n//\tcout<<s<<endl;\n\tmemset(c,0,sizeof(c));memset(height,0,sizeof(height));\n\tfor (int i=1;i<=n;i++)c[s[i]]++;\n\tfor (int i=1;i<=256;i++)c[i]+=c[i-1];\n//\tfor (int i=1;i<=256;i++)cout<<c[i]<<' ';cout<<endl;\n\tfor (int i=n;i;i--)sa[c[s[i]]--]=i;\n//\tcout<<\"ok\"<<endl;\n//\tfor (int i=1;i<=n;i++)cout<<sa[i]<<' ';cout<<endl;\n//\tcout<<\"ok\"<<endl;\n\trk[sa[1]]=1;\n\tfor (int i=2;i<=n;i++)rk[sa[i]]=rk[sa[i-1]]+(s[sa[i]]!=s[sa[i-1]]);\n/*\tfor (int i=2;i<=n;i++){\n\t\tcout<<rk[sa[i]]<<' '<<rk[sa[i-1]]<<' '<<(s[sa[i]]!=s[sa[i-1]])<<endl;\n\t\tcout<<rk[sa[i-1]]+(s[sa[i]]!=s[sa[i-1]])<<endl;\n\t\tcout<<\"sa:\"<<sa[i]<<endl;\n\t}\n\tfor (int i=1;i<=n;i++)cout<<rk[i]<<' ';cout<<endl;\n\tcout<<\"ok\"<<endl;\n*/\n\tfor (int k=1;rk[sa[n]]!=n;k<<=1){\n\t\tfor (int i=1;i<=n;i++)x[i]=rk[i],y[i]=(i+k<=n) ? rk[i+k] : 0;\n\t\tmemset(c,0,sizeof(c));\n\t\tfor (int i=1;i<=n;i++)c[y[i]]++;\n\t\tfor (int i=1;i<=n;i++)c[i]+=c[i-1];\n\t\tfor (int i=n;i;i--)rk[c[y[i]]--]=i;\n\t\tmemset(c,0,sizeof(c));\n\t\tfor (int i=1;i<=n;i++)c[x[i]]++;\n\t\tfor (int i=1;i<=n;i++)c[i]+=c[i-1];\n\t\tfor (int i=n;i;i--)sa[c[x[rk[i]]]--]=rk[i];\n\t\trk[sa[1]]=1;\n\t\tfor (int i=2;i<=n;i++)rk[sa[i]]=rk[sa[i-1]]+(x[sa[i]]!=x[sa[i-1]]||y[sa[i]]!=y[sa[i-1]]);\n\t}\n//\tcout<<\"ok\"<<endl;\n\tint len=0;\n\tfor (int i=1;i<=n;i++){\n\t\tif (len)len--;\n\t\tint j=sa[rk[i]-1];\n\t\twhile (s[i+len]==s[j+len])len++;\n\t\theight[rk[i]]=len;\n\t}\n//\tcout<<\"ok\"<<endl;\n}\nvoid he(int f,string S){\n\tn=S.size();s='~'+S;pai();\n\tll ans=0;\n\twhile (!st.empty())st.pop();\n\tfor (int i=2;i<=n;i++){\n\t\twhile (!st.empty()&&height[st.top()]>height[i])st.pop();\n\t\tif (st.empty())dp[i]=height[i]*(i-1);else dp[i]=(dp[st.top()]+height[i]*(i-st.top()));\n\t\tst.push(i);ans+=dp[i]*f;\n\t}\n\tansn+=ans;\n//\tcout<<ansn<<' '<<ans<<endl;\n}\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tcin>>s1>>s2;\n\the(1,s1+\"&\"+s2);he(-1,s1);he(-1,s2);\n\tcout<<ansn<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1553336257,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": " [$$ \\Large \\texttt{My Blog} $$](http://blog.flyinthesky.win/bzoj3238/)\n\n------------\n\n\u4e00\u5f00\u59cb\u4e71\u4e8c\u5206\u6302\u4e86\u2026\u2026\n\n\u5176\u5b9e\u8fd9\u9898\u5c31\u662f[Bzoj 3238 \u5dee\u5f02](http://blog.flyinthesky.win/bzoj3238/)\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u6ca1\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u8fde\u63a5\uff0c\u7136\u540e\u5355\u8c03\u6808\u7ef4\u62a4\u6240\u6709\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\u4f46\u662f\u8fd9\u91cc\u662f\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u80fd\u4f1a\u6709\u7b54\u6848\u7b97\u5230\u662f\u540c\u4e32\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651**\u5bb9\u65a5**\u3002\n\n\u5373\u6c42\u4e09\u6b21\u540e\u7f00\u6570\u7ec4\uff0c\u7b2c\u4e00\u6b21\u6c42\u8fde\u63a5\u4e32\u7684\u7b54\u6848\uff0c\u7136\u540e\u6c42\u4e24\u4e2a\u539f\u4e32\u7684\u7b54\u6848\uff0c\u6700\u540e\u7528\u8fde\u63a5\u4e32\u7b54\u6848\u51cf\u6389\u540e\u9762\u7684\u4e24\u4e2a\u539f\u4e32\u7b54\u6848\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\n\n\u4ee3\u7801\u5f88\u4e11\uff0c\u6ca1\u6709\u5c06\u4e09\u6b21\u540e\u7f00\u6570\u7ec4\u5199\u6210\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u5c3d\u91cf\u53c2\u8003\u4e0a\u8ff0\u601d\u7ef4\u3002\n```c++\n#include<cstdio> \n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<set>\n#define ms(i, j) memset(i, j, sizeof i)\n#define LL long long\n#define db double\n#define fir first\n#define sec second\n#define mp make_pair\nusing namespace std;\n\nnamespace flyinthesky {\n    \n    const int MAXN = 400000 + 5;\n    \n    char ch[2][MAXN];\n    int a[MAXN], n, m;\n    int SA[MAXN], rk[MAXN], tp[MAXN], tax[MAXN], height[MAXN];\n    \n    void build(int n) {//11?\u00a8\u00aco\u00a8\u00ae\u00a1\u00c1o\u00a8\u00bay\u00a1\u00c1\u00a8\u00a6 \n        for (int i = 1; i <= m; ++i) tax[i] = 0;\n        for (int i = 1; i <= n; ++i) tax[rk[i] = a[i]]++;\n        for (int i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n        for (int i = n; i >= 1; --i) SA[tax[rk[i]]--] = i;//?\u00a8\u00b4\u00a8\u00bay??D\u00a8\u00b0??\u00a6\u00cc\u00a8\u00b2\u00a8\u00b0???\n    \n        for (int k = 1; k <= n; k <<= 1) {\n            int p = 0;\n            for (int i = n - k + 1; i <= n; i++) tp[++p] = i;//(n-k)~(n-1)?T\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1?\u00a1\u00ea??\u00a8\u00b4\u00a8\u00b0???D\u00a8\u00b0\u00a8\u00ae|?????\u00a8\u00b2?\u00a1\u00e3??\n            for (int i = 1; i <= n; i++) if (SA[i] > k) tp[++p] = SA[i] - k;\n            //??\u00a8\u00aeDSA[i]>=k\u00a6\u00cc?SA[i]2?\u00a8\u00ba?\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1?\u00a6\u00cc????? \n            //\u00a1\u00e4\u00a8\u00ae\u00a8\u00aa??D?\u00a8\u00a6\u00a8\u00b0??\u00a1\u00e43?\u00a6\u00cc\u00a8\u00b2\u00a8\u00b0?1??\u00a8\u00b9\u00a1\u00c1?o\u00a8\u00aa\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1?\u00a6\u00cc??????\u00a8\u00a42?k\u00a1\u00ea?1\u00a8\u00baSA[i] - k \n            for (int i = 1; i <= m; ++i) tax[i] = 0;\n            for (int i = 1; i <= n; ++i) tax[rk[tp[i]]]++;//x[tp[i]]?\u00a8\u00a4\u00a6\u00cc\u00a8\u00a8\u00a8\u00ae\u00a8\u00b2????\u00a6\u00cc\u00a8\u00b2i\u00a6\u00cc?\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1?\u00a6\u00cc?\u00a6\u00cc\u00a8\u00b2\u00a8\u00b0?1??\u00a8\u00b9\u00a1\u00c1?\u00a6\u00cc????? \n            for (int i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n            for (int i = n; i >= 1; --i) SA[tax[rk[tp[i]]]--] = tp[i];//\u00a1\u00c0\u00a1\u00ea?\u00a1\u00e8\u00a8\u00a2?\u00a6\u00cc\u00a8\u00b2\u00a8\u00b0?1??\u00a8\u00b9\u00a1\u00c1?\u00a6\u00cc??3D\u00a8\u00b0?\u00a8\u00b4??\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1? \n            //?\u00a8\u00b4\u00a8\u00bay??D\u00a8\u00b0\u00a6\u00cc\u00a8\u00b2\u00a8\u00b0?1??\u00a8\u00b9\u00a1\u00c1?(rank[i]\u00a6\u00cc?\u00a8\u00bay?\u00a6\u00cc)o\u00a8\u00aa\u00a6\u00cc\u00a8\u00b2?t1??\u00a8\u00b9\u00a1\u00c1?(tp[i]\u00a6\u00cc???\u00a1\u00c0\u00a8\u00ba) \n            swap(rk, tp);//\u00a1\u00e4?\u00a8\u00ba\u00a1\u00c0tp??\u00a8\u00ae?\u00a1\u00ea??Y\u00a1\u00e4?\u00a8\u00a6?\u00a8\u00b0???rank\u00a6\u00cc??\u00a6\u00cc\n            p = 1, rk[SA[1]] = 1;\n            for (int i = 2; i <= n; ++i) \n                rk[SA[i]] = (tp[SA[i]] == tp[SA[i - 1]] && tp[SA[i] + k] == tp[SA[i - 1] + k]) ? p : ++p;\n            //??????\u00a6\u00cc\u00a8\u00b2i\u00a6\u00cc?\u00a8\u00bay\u00a6\u00cc?rank\u00a1\u00ea?\u00a1\u00e3\u00a1\u00e4sa?3D\u00a8\u00b0?\u00a8\u00b91?\u00a1\u00c0\u00a1\u00ea?\u00a1\u00e8rank\u00a6\u00cc??y\u00a8\u00a8\u00a1\u00a4D?\u00a1\u00ea?\u00a6\u00cc?\u00a8\u00ba?\u00a8\u00b0acmp?D??\u00a8\u00ae?\u00a8\u00a6?\u00a8\u00b0???\u00a1\u00c1?\u00a1\u00a4?\u00a1\u00e4??\u00a8\u00a4\u00a6\u00cc\u00a8\u00a8\u00a6\u00cc??\u00a8\u00a6?? \n            if (p >= n) break;//???|\u00a1\u00ea?\u00a8\u00b0??-??\u00a8\u00aeD???\u00a1\u00e4?a?? \n            m = p; \n        }\n        int k = 0;//k\u00a8\u00ba?\u00a1\u00c0\u00a8\u00a8i-1?\u00a1\u00e3\u00a8\u00b0???\u00a6\u00cc?o\u00a8\u00ae\u00a1\u00c1o\n        for (int i = 1; i <= n; ++i) {//H[0], H[1], H[2] ...\u00a6\u00cc??3D\u00a8\u00b0???? \n            if (k) k--;//\u00a1\u00e4\u00a8\u00aek-1?a\u00a8\u00ba?\u00a1\u00c0\u00a8\u00a8?? ,??\u00a8\u00ae??\u00a8\u00a2??H[i]>=H[i-1]-1, \u00a1\u00c1?3\u00a1\u00e81?12?\u00a1\u00e3\u00a1\u00c1o\u00a6\u00cc?3\u00a1\u00e8?\u00a8\u00a8?\u00a8\u00a2\u00a8\u00a6\u00a8\u00b4\u00a8\u00ba?k-1(k = H[i-1])\n            int j = SA[rk[i] - 1]; //?\u00a1\u00e3\u00a8\u00b0???\u00a6\u00cc?o\u00a8\u00ae\u00a1\u00c1o???? \n            while (a[i + k] == a[j + k]) k++; //\u00a8\u00aa\u00a8\u00b4o\u00a8\u00ae\u00a1\u00c0\u00a8\u00a8?? \n            height[rk[i]] = k;  //?\u00a8\u00b9D?\u00a1\u00e4e\u00a1\u00e3? \n        }\n    }\n    \n    LL L[MAXN], R[MAXN], st[MAXN], top = 0, ans = 0;\n    \n    void clean() {\n    \tn = 0, m = 200, ms(height, 0), ms(SA, 0), ms(rk, 0), ms(tax, 0), ms(tp, 0), ms(L, 0), ms(R, 0), ms(st, 0);\n    }\n    int solve() {\n\n        // 1\n    \tclean();\n    \tscanf(\"%s\", ch[0] + 1);\n    \tint tmp = strlen(ch[0] + 1);\n    \tfor (int i = 1; i <= tmp; ++i) a[++n] = ch[0][i] - 'a' + 1;\n    \t\n    \ta[++n] = '$';\n    \tscanf(\"%s\", ch[1] + 1);\n    \ttmp = strlen(ch[1] + 1);\n    \tfor (int i = 1; i <= tmp; ++i) a[++n] = ch[1][i] - 'a' + 1;\n    \t\n    \tbuild(n);\n        \n        st[top = 1] = 1;\n        for (int i = 2; i <= n; ++i) {\n        \twhile (top && height[st[top]] > height[i]) R[st[top--]] = i;\n        \tL[i] = st[top];\n        \tst[++top] = i;\n        }\n        while (top) R[st[top--]] = n + 1;\n        for (int i = 1; i <= n; ++i) \n            ans += 1ll * (R[i] - i) * (i - L[i]) * height[i];\n        \n        // 2\n        clean();\n        tmp = strlen(ch[0] + 1);\n    \tfor (int i = 1; i <= tmp; ++i) a[++n] = ch[0][i] - 'a' + 1;\n    \tbuild(n);\n    \t\n    \tst[top = 1] = 1;\n        for (int i = 2; i <= n; ++i) {\n        \twhile (top && height[st[top]] > height[i]) R[st[top--]] = i;\n        \tL[i] = st[top];\n        \tst[++top] = i;\n        }\n        while (top) R[st[top--]] = n + 1;\n        for (int i = 1; i <= n; ++i) \n            ans -= 1ll * (R[i] - i) * (i - L[i]) * height[i];\n            \n        // 3\n        clean();\n        tmp = strlen(ch[1] + 1);\n    \tfor (int i = 1; i <= tmp; ++i) a[++n] = ch[1][i] - 'a' + 1;\n    \tbuild(n);\n    \t\n    \tst[top = 1] = 1;\n        for (int i = 2; i <= n; ++i) {\n        \twhile (top && height[st[top]] > height[i]) R[st[top--]] = i;\n        \tL[i] = st[top];\n        \tst[++top] = i;\n        }\n        while (top) R[st[top--]] = n + 1;\n        for (int i = 1; i <= n; ++i) \n            ans -= 1ll * (R[i] - i) * (i - L[i]) * height[i];\n        \n        printf(\"%lld\\n\", ans);\n        \n        return 0;\n    }\n}\nint main() {\n    flyinthesky::solve();\n    return 0;\n}\n```",
        "postTime": 1551438375,
        "uid": 12943,
        "name": "FlyInTheSky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a\u98df\u7528[$blog$](https://www.cnblogs.com/heyujun/p/10305863.html)\u4f53\u9a8c\u66f4\u4f73\n\n\u5176\u5b9e\u548c[\u8fd9\u9898](https://www.cnblogs.com/heyujun/p/10305797.html)\u5dee\u4e0d\u591a\u3002\n\n\u6839\u636e\u540e\u7f00\u6570\u7ec4\u5e38\u7528\u5957\u8def\uff0c\u5c06\u5c06$s1,s2$\u7528\u4e00\u4e2a\u672a\u66fe\u51fa\u73b0\u7684\u5b57\u7b26\u8fde\u8d77\u6765\n\n\u548c\u4e0a\u9762\u90a3\u9898\u4e00\u6837\u7684\u65b9\u6cd5\n\n\u7b97\u51fa\u6765\u4e00\u4e2a\u7b54\u6848\n\n\u7136\u540e\u51cf\u53bb\u5206\u522b\u5de6\u53f3\u4e24\u5b57\u7b26\u4e32\u9009\u7684\u8d21\u732e\u5c31\u597d\u5566\n\n\u4ee3\u7801\n\n```cpp\n#include <iostream> \n#include <cstdio> \n#include <cstdlib> \n#include <cstring> \n#include <cmath> \n#include <algorithm> \nusing namespace std; \nconst int MAX_N = 4e5 + 5; \nint N; char a[MAX_N], b[MAX_N], c[MAX_N];\nint sa[MAX_N], rnk[MAX_N], lcp[MAX_N]; \nvoid GetSA() { \n#define cmp(i, j, k) (y[i] == y[j] && y[i + k] == y[j + k]) \n\tstatic int x[MAX_N], y[MAX_N], bln[MAX_N]; \n\tint M = 122;\n\tfor (int i = 0; i <= M; i++) bln[i] = 0; \n\tfor (int i = 1; i <= N; i++) bln[x[i] = a[i]]++; \n\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\tfor (int i = N; i >= 1; i--) sa[bln[x[i]]--] = i; \n\tfor (int k = 1; k <= N; k <<= 1) {\n\t\tint p = 0; \n\t\tfor (int i = 0; i <= M; i++) y[i] = 0;\n\t\tfor (int i = N - k + 1; i <= N; i++) y[++p] = i; \n\t\tfor (int i = 1; i <= N; i++) if (sa[i] > k) y[++p] = sa[i] - k; \n\t\tfor (int i = 0; i <= M; i++) bln[i] = 0; \n\t\tfor (int i = 1; i <= N; i++) bln[x[y[i]]]++; \n\t\tfor (int i = 1; i <= M; i++) bln[i] += bln[i - 1]; \n\t\tfor (int i = N; i >= 1; i--) sa[bln[x[y[i]]]--] = y[i]; \n\t\tswap(x, y); x[sa[1]] = p = 1; \n\t\tfor (int i = 2; i <= N; i++) x[sa[i]] = cmp(sa[i], sa[i - 1], k) ? p : ++p; \n\t\tif (p >= N) break;\n\t\tM = p; \n\t} \n} \nvoid GetLcp() { \n\tfor (int i = 1; i <= N; i++) rnk[sa[i]] = i; \n\tfor (int i = 1, j = 0; i <= N; i++) { \n\t\tif (j) --j; \n\t\twhile (a[i + j] == a[sa[rnk[i] - 1] + j]) ++j; \n\t\tlcp[rnk[i]] = j; \n\t} \n}\ntypedef long long ll; \nint lp[MAX_N], rp[MAX_N], stk[MAX_N], top; \nll solve() { \n\tGetSA(), GetLcp(); \n\ttop = 0, stk[0] = 1; \n\tfor (int i = 2; i <= N; i++) { \n\t\twhile (top > 0 && lcp[stk[top]] >= lcp[i]) --top; \n\t\tlp[i] = i - stk[top], stk[++top] = i; \n\t} \n\ttop = 0, stk[0] = N + 1;\n\tfor (int i = N; i >= 2; i--) { \n\t\twhile (top > 0 && lcp[stk[top]] > lcp[i]) --top; \n\t\trp[i] = stk[top] - i, stk[++top] = i; \n\t}\n\tll res = 0; \n\tfor (int i = 2; i <= N; i++) res += 1ll * lp[i] * rp[i] * lcp[i]; \n\treturn res; \n} \nint main () { \n\tll ans = 0; int n, m; \n\tscanf(\"%s\", b + 1); scanf(\"%s\", c + 1); \n\tn = strlen(b + 1); m = strlen(c + 1); \n\tN = n; for (int i = 1; i <= N; i++) a[i] = b[i]; \n\tans -= solve();\n\tN = m; for (int i = 1; i <= N; i++) a[i] = c[i]; \n\tans -= solve();\n\tN = n + m + 1; \n\tfor (int i = 1; i <= n; i++) a[i] = b[i];\n\ta[n + 1] = '#'; \n\tfor (int i = 1; i <= m; i++) a[i + n + 1] = c[i];\n\tans += solve();\n\tprintf(\"%lld\\n\", ans); \n\treturn 0; \n} \n```",
        "postTime": 1550387590,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u53ef\u8bfb\u6027\u9ad8\u7684**\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a**\u7684\u7248\u672c\u5427\uff0c\u7b97\u6cd5\u7684\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u770b\u8bba\u6587...\n\n\u4e0b\u9762\u53ef\u80fd\u7528\u5230\u7684\u4e00\u4e9b\u672f\u8bed\u57fa\u672c\u51fa\u81ea $clj$ \u8bfe\u4ef6...\n\n\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u6784\u5efa\u65b9\u6cd5\uff0c\u5373\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u4e32\u540e\u5c06 $last$ \u8d4b\u4e3a\u6839\u8282\u70b9\u5373\u53ef\u3002\n\n\u5bf9 $SAM$ \u91cc\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u5b83\u4ee3\u8868\u7684 $right$ \u96c6\u5408\u5927\u5c0f\uff0c\u5206\u522b\u7ef4\u62a4\u7b2c\u4e00\u4e2a\u4e32\u548c\u7b2c\u4e8c\u4e2a\u4e32\u7684\u5927\u5c0f\uff0c\u4ee4 $len_i=max_i-mn_i+1$\n\n\u5219\u4e00\u4e2a\u8282\u70b9 $i$ \u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u4e3a $len_i \\cdot sz1_i \\cdot sz2_i$\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u6c42\u6bcf\u4e2a\u72b6\u6001 $right$ \u5927\u5c0f\u7684\u65f6\u5019\uff0c\u9664\u4e86\u7b2c\u4e00\u4e2a\u4e32\u4ee5\u5916\u4e0d\u80fd\u7528\u6b63\u5e38\u7684\u65b9\u6cd5\u3002\n\n\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ca1\u6709\u610f\u4e49\u7684 $np$\uff0c\u89e3\u51b3\u65b9\u6cd5\u6709\u50cf\u4ee3\u7801\u90a3\u4e48\u5199\u6216\u8005\u5efa $np$ \u7684\u65f6\u5019\u7279\u5224\u4e00\u4e0b\u65b0\u7684 $np$ \u662f\u5426\u6709\u610f\u4e49\u3002\n\n\n\n```cpp\n    #include <cmath>\n    #include <queue>\n    #include <cstdio>\n    #include <iomanip>\n    #include <cstdlib>\n    #include <cstring>\n    #include <iostream>\n    #include <algorithm>\n    #define N 200010\n    #define ll long long\n    using namespace std;\n    inline int read()\n    {\n        int x=0,f=1;char ch=getchar();\n        while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n        while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n        return x*f;\n    }\n    ll ans;\n```\nnamespace SAM\n    \n    \n```cpp\n    {\n        #define MAXN 800010\n        int ch[MAXN][26],fail[MAXN];\n        int mx[MAXN],sz[MAXN][2];\n        int last=1,tot=1;\n        void add(int x,int t)\n        {\n            int np=++tot,p=last,q,nq;\n            if(t==0)sz[np][t]=1;\n            mx[np]=mx[p]+1,last=np;\n            while(p&&!ch[p][x])ch[p][x]=np,p=fail[p];\n            if(p==0){fail[np]=1;return ;}\n            q=ch[p][x];\n            if(mx[q]==mx[p]+1){fail[np]=q;return ;}\n            nq=++tot,mx[nq]=mx[p]+1;\n            memcpy(ch[nq],ch[q],sizeof(ch[q]));\n            fail[nq]=fail[q],fail[q]=fail[np]=nq;\n            while(p&&ch[p][x]==q)ch[p][x]=nq,p=fail[p];\n        }\n        int ord[MAXN],bin[MAXN];\n        void count()\n        {\n            for(int i=1;i<=tot;i++)bin[mx[i]]++;\n            for(int i=1;i<=tot;i++)bin[i]+=bin[i-1];\n            for(int i=tot;i;i--)ord[bin[mx[i]]--]=i;\n            for(int i=tot;i;i--)\n            {\n                int x=ord[i];\n                sz[fail[x]][0]+=sz[x][0],sz[fail[x]][1]+=sz[x][1];\n            }\n            for(int i=1;i<=tot;i++)\n            {\n                ans+=(ll)(mx[i]-mx[fail[i]])*sz[i][0]*sz[i][1];\n            }\n        }\n    }\n    int n;\n    char s[N];\n    int main()\n    {\n        scanf(\"%s\",s+1),n=strlen(s+1);\n        for(int i=1;i<=n;i++)SAM::add(s[i]-'a',0);\n        SAM::last=1;\n        scanf(\"%s\",s+1),n=strlen(s+1);\n        int p=1;\n        for(int i=1;i<=n;i++)\n        {\n            SAM::add(s[i]-'a',1);\n            p=SAM::ch[p][s[i]-'a'];\n            SAM::sz[p][1]=1;\n        }\n        SAM::count();\n        printf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1515764217,
        "uid": 30459,
        "name": "\u6d88\u5931\u7684\u6d77\u5cb8\u7ebf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u697c\u4e0a\u8fc7\u7a0b\u8bf4\u7684\u5f88\u8be6\u7ec6\u5566\uff0c\u849f\u84bb\u4e3b\u8981\u5c31\u8d34\u4e2a\u4ee3\u7801\u3002\n\n\u6ce8\u610f\uff0cA\u4e32\u548cB\u4e32\u95f4\u5fc5\u987b\u7a7f\u63d2\u4e00\u4e2a\u5206\u5272\u7b26\u53f7\uff0c\u4ee5\u514d\u51fa\u73b0A\u4e32\u7684\u540e\u7f00\u5339\u914d\u5230B\u4e32\u6765\u4e86\uff0c\u4e0d\u52a0\u4f1a\u5b89\u62c9\u80e1\u963f\u514b\u5df4\u3002\n\n\u5355\u8c03\u6808\u7684\u65f6\u5019\u6ce8\u610f\u8981\u52a0\u4e00\u4e2a\u7cfb\u6570\uff08\u56e0\u4e3a\u5f39\u51fa\u6765\u7684\u5143\u7d20\u5b9e\u9645\u4e0a\u4f1a\u91cd\u65b0\u653e\u56de\u53bb\uff09\u3002\n\n\u4e3b\u8981\u81ea\u5df1\u52a8\u624b\u6a21\u62df\u4e00\u904d\u5c31\u884c\u5566OvO\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<string>\n#define N 1000005\nusing namespace std;\n\nlong n,m,i,j,k,len=0,p,ans=0,s[N],SA[N],rk[N],height[N],H[N];\nlong x[N],tmp[N];\nlong sta[N],stb[N],weigha[N],weighb[N],ta,tb,nowa,nowb,cnt;//weigha,weighb\u662f\u7cfb\u6570\nstring a,b;\nbool cmp(long t[],long a,long b,long w){return t[a]==t[b]&&t[a+w]==t[b+w];}\nvoid Rsort()\n{\n    long i,j;\n    for (i=0; i<=m; i++) tmp[i]=0;\n    for (i=1; i<=n; i++) tmp[rk[x[i]]]++;\n    for (i=1; i<=m; i++) tmp[i]+=tmp[i-1];\n    for (i=n; i; i--) SA[tmp[rk[x[i]]]]=x[i],tmp[rk[x[i]]]--;\n}\nvoid getSA()\n{\n    long i,w,p;\n    for (i=1; i<=n; i++) rk[i]=s[i],x[i]=i;\n    m=127; Rsort();\n    for (w=1,p=1; p<n; w<<=1,m=p)\n    {\n        for (p=0,i=n-w+1; i<=n; i++) p++,x[p]=i;\n        for (i=1; i<=n; i++)\n            if(SA[i]>w) p++,x[p]=SA[i]-w;\n        Rsort();\n        memcpy(x,rk,sizeof(rk)); rk[SA[1]]=p=1;\n        for (i=2; i<=n; i++) rk[SA[i]]=cmp(x,SA[i],SA[i-1],w)?p:++p;\n    }\n}\nvoid getheight()\n{\n    long i,j,k=0;\n    for (i=1; i<=n; i++)\n    {\n        for (k=k?k-1:k,j=SA[rk[i]-1]; s[i+k]==s[j+k]; k++);\n        H[i]=k;\n    }\n    for (i=1; i<=n; i++) height[rk[i]]=H[i];\n}\nbool isB(long t){return len-SA[t]+1<=b.size();}\nint main()\n{\n    cin>>a>>b;\n    n=a.size(); m=b.size();\n    for (i=1; i<=n; i++) len++,s[len]=a[i-1];\n    len++; s[len]=126;\n    for (i=1; i<=m; i++) len++,s[len]=b[i-1];\n    n=len;\n    \n    getSA(); getheight();\n\n    for (i=n-1; i; i--)\n        if (isB(i))\n        {\n            ans+=nowa;\n            cnt=0;\n            while (tb&&stb[tb]>height[i]) nowb=nowb-(stb[tb]-height[i])*weighb[tb],cnt+=weighb[tb],tb--;\n            tb++,stb[tb]=height[i],weighb[tb]=cnt+1,nowb+=height[i];\n            cnt=0;\n            while (ta&&sta[ta]>height[i]) nowa=nowa-(sta[ta]-height[i])*weigha[ta],cnt+=weigha[ta],ta--;\n            if(cnt)ta++,sta[ta]=height[i],weigha[ta]=cnt;\n        }\n            else {\n            ans+=nowb;\n            cnt=0;\n            while (ta&&sta[ta]>height[i]) nowa=nowa-(sta[ta]-height[i])*weigha[ta],cnt+=weigha[ta],ta--;\n            ta++,sta[ta]=height[i],weigha[ta]=cnt+1,nowa+=height[i];\n            cnt=0;\n            while (tb&&stb[tb]>height[i]) nowb=nowb-(stb[tb]-height[i])*weighb[tb],cnt+=weighb[tb],tb--;\n            if(cnt)tb++,stb[tb]=height[i],weighb[tb]=cnt;\n        }\n    cout<<ans;\n}\n```",
        "postTime": 1492523094,
        "uid": 24634,
        "name": "lxd150039",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3181)\n\n------------\n\n# Solution\n\n\u8fd9\u9898\u5c31\u662f\u8ba9\u6c42\u4e24\u4e2a\u4e32\u7684\u76f8\u540c\u5b50\u4e32\u7684\u4e2a\u6570\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5b57\u7b26\u4e32\u6240\u6709\u7684\u5b50\u4e32\u5c31\u662f\u5b57\u7b26\u4e32\u6240\u6709\u7684\u540e\u7f00\u7684\u6240\u6709\u524d\u7f00\u3002\n\n\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\uff0c\u53d8\u6210\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u540e\u7f00\u7684$lcp$\u7684\u957f\u5ea6\u7684\u548c\u3002\n\n\u6c42\u540e\u7f00\u7684$lcp$\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528$SA$\u3002\n\n\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\uff0c\u4e2d\u95f4\u4f4d\u7f6e\u653e\u4e00\u4e2a$1$\u9694\u5f00\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u67d3\u4e0a\u4e0d\u540c\u7684\u989c\u8272\u3002\n\n\u73b0\u5728\u7b54\u6848\u5c31\u53d8\u6210\u4e86\u6c42\u6bcf\u4e00\u5806\u4e2d\u989c\u8272\u4e0d\u540c\u7684\u540e\u7f00\u7684$lcp$\u957f\u5ea6\uff0c\u8003\u8651$height$\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u5373$lcp(i, j) = min_{k = i + 1}^j height_k$\uff0c\u6211\u4eec\u53d1\u73b0\u5728\u6bcf\u4e2a\u5757\u5185$lcp$\u7684\u957f\u5ea6\u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u8003\u8651\u6bcf\u4e00\u5806\u4e2d\u4e0d\u540c\u989c\u8272\u4e4b\u95f4\u7684$lcp$\u957f\u5ea6\u5c31\u76f8\u5f53\u4e8e\u5148\u5bf9\u4e8e\u4e00\u79cd\u989c\u8272\u7b97\u5728\u5b83\u4e4b\u524d\u51fa\u73b0\u7684\u53e6\u5916\u4e00\u79cd\u989c\u8272\u548c\u5b83\u7684$lcp$\uff0c\u518d\u6309\u7167\u53e6\u5916\u4e00\u79cd\u989c\u8272\u7b97\u4e00\u904d\u3002\n\n\u6211\u4eec\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u8fd9\u4e2a$lcp$\u957f\u5ea6\uff0c\u7528$sum$\u8bb0\u5f55\u5355\u8c03\u6808\u5185\u5143\u7d20\u5bf9\u7b54\u6848\u7684\u603b\u8d21\u732e\uff0c$stack$\u4e2d\u4fdd\u5b58\u4e24\u4e2a\u4fe1\u606f\u2014\u2014$height$\u503c\u7684\u5927\u5c0f\u548c\u6709\u591a\u5c11\u4e2a\u8d21\u732e\u548c\u5b83\u76f8\u540c\u7684\u5143\u7d20\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u5c06\u5f53\u524d\u7684\u540e\u7f00$i$\u52a0\u5165\u5355\u8c03\u6808\uff0c\u5982\u679c$sa_{i - 1}$\u7684\u989c\u8272\u4e0d\u662f\u6211\u4eec\u8981\u7b97\u8d21\u732e\u7684\u989c\u8272\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u5bf9\u5f53\u524d\u989c\u8272\u9020\u6210\u8d21\u732e\uff0c$sum += height_i$\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u5c06\u73b0\u5728\u7684$height_i$\u5165\u6808\uff0c\u8003\u8651\u5982\u679c$height_i <= height_{top}$\uff0c\u90a3\u4e48\u6808\u9876\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u4f1a\u53d8\u4e3a$height_i$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06$height_i$\u548c$height_{top}$\u5408\u5e76\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f$height_i$\uff0c\u8d21\u732e\u4e2a\u6570\u662f$num_i + num_{top}$\u3002\n\n\u5408\u5e76\u5b8c\u4e4b\u540e\u5982\u679c$sa_i$\u7684\u989c\u8272\u662f\u6211\u4eec\u8981\u7b97\u8d21\u732e\u7684\u989c\u8272\u5c31\u52a0\u4e0a\u6240\u6709\u6808\u5185\u7684\u8d21\u732e\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\n#define int long long\ntypedef long long ll;\n\nconst int N = 400050;\n\nint k, m, n, s[N], x[N], y[N], cnt[N], sa[N], rnk[N], height[N], col[N], l, stack[N][2], top;\nchar a[N], b[N];\nll ans, sum;\n\nvoid Rsort()\n{\n    for (int i = 0; i <= m; i++) cnt[i] = 0;\n    for (int i = 1; i <= n; i++) cnt[x[i]]++;\n    for (int i = 1; i <= m; i++) cnt[i] += cnt[i - 1];\n    for (int i = n; i >= 1; i--) sa[cnt[x[y[i]]]--] = y[i];\n    return;\n}\n\nvoid SA()\n{\n    m = 128;\n    for (int i = 1; i <= n; i++) x[i] = s[i], y[i] = i;\n    Rsort();\n    m = 0;\n    for (int k = 1; m < n; k <<= 1)\n    {\n        m = 0;\n        for (int i = n - k + 1; i <= n; i++) y[++m] = i;\n        for (int i = 1; i <= n; i++) if (sa[i] > k) y[++m] = sa[i] - k;\n        Rsort();\n        for (int i = 1; i <= n; i++) y[i] = x[i];\n        m = x[sa[1]] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            if(y[sa[i]] == y[sa[i - 1]] && y[sa[i] + k] == y[sa[i - 1] + k])\n                x[sa[i]] = m;\n            else x[sa[i]] = ++m;\n        }  \n    }\n    for (int i = 1; i <= n; i++) rnk[sa[i]] = i;\n    for (int i = 1; i <= n; i++)\n    {\n        height[rnk[i]] = height[rnk[i - 1]] - 1;\n        if (height[rnk[i]] < 0) height[rnk[i]] = 0;\n        while (s[i + height[rnk[i]]] == s[sa[rnk[i] - 1] + height[rnk[i]]]) height[rnk[i]]++;\n    }\n}\n\nsigned main()\n{\n    n = 0; ans = 0;\n    scanf(\"%s\", a + 1);\n    l = strlen(a + 1);\n    for (int i = 1; i <= l; i++) s[++n] = a[i] + 1, col[i] = 1;\n    s[++n] = 1;\n    scanf(\"%s\", b + 1);\n    l = strlen(b + 1);    \n    for (int i = 1; i <= l; i++) s[++n] = b[i] + 1, col[n] = 2;\n    SA();\n    for (int color = 1; color <= 2; color++)\n    {\n        top = sum = 0;\n        for (int i = 1; i <= n; i++)\n            if (height[i] == 0) sum = top = 0;\n            else\n            {\n                int cnt = 0;\n                if (col[sa[i - 1]] != color) \n                {\n                    cnt++;\n                    sum += height[i];\n                }\n                while(top && height[i] <= stack[top][1])\n                {\n                    cnt += stack[top][2];\n                    sum -= 1LL * stack[top][2] * (stack[top][1] - height[i]);\n                    top--;\n                }\n                stack[++top][1] = height[i]; stack[top][2] = cnt;\n                if (col[sa[i]] == color) ans += sum;\n            }\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1585553295,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "~~\u5e7f\u544a~~\n\n~~\u4e0d\u592a\u4f1a\u7528\u6d1b\u8c37\u7684markdown\uff0c\u683c\u5f0f\u53ef\u80fd\u4e71\u4e86\uff0c\u5b89\u5229\u4e2a\u4eba\u535a\u5ba2~~\n\n~~[\u3010BZOJ4566_\u6d1b\u8c373181\u3011[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\uff08SAM\uff09](https://www.cnblogs.com/zyt1253679098/p/10255109.html)~~\n\n\u5206\u6790\uff1a\n\nSAM\uff08\u53ef\u80fd\u662f\uff09\u6a21\u677f\u9898\uff08\u4e0d\u4f1aSAM\u7684\u540c\u5b66\u6233\u6211\uff1a[\u3010\u77e5\u8bc6\u603b\u7ed3\u3011\u540e\u7f00\u81ea\u52a8\u673a\u7684\u6784\u5efa](https://www.cnblogs.com/zyt1253679098/p/10154255.html)\uff09\u3002\n\n\u5bf9$s1$\u5efa\u51faSAM\uff0c\u7528$s2$\u5728\u4e0a\u9762\u8dd1\u3002\u7528$size[i]$\u8868\u793a\u7ed3\u70b9$i$\u7684$Right$\u96c6\u5408\u5927\u5c0f\uff08\u76f4\u63a5\u62d3\u6251\u6392\u5e8f\u540eDP\u5c31\u884c\uff09\u3002\u65e2\u7136\u8981\u6c42$s2$\u4e2d\u6709\u591a\u5c11\u5b50\u4e32\u5728$s1$\u4e2d\u51fa\u73b0\u4e86\uff0c\u90a3\u4e48\u7528$f[i]$\u8868\u793a\u7ed3\u70b9$i$\u5bf9\u5e94\u7684**\u6240\u6709**\u5b50\u4e32\u5728$s2$\u4e2d**\u4e00\u5171**\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff08\u4f4d\u7f6e\u4e0d\u540c\u7b97\u591a\u6b21\uff09\u3002\u7b54\u6848\u5c31\u662f$\\sum f[i]\\cdot size[i]$\n\n\u5982\u4f55\u8ba1\u7b97$f[i]$\u5462\uff1f\u5982\u679c\u5f53\u524d\u5339\u914d\u8fc7\u7a0b\u4e2d\u8d70\u5230\u4e86$p$\u70b9\uff0c\u5339\u914d\u957f\u5ea6\u4e3a$len$\u3002\u5f88\u660e\u663e\uff0c\u5f53\u524d\u5339\u914d\u5230\u7684\u662f\u4ece$p$\u70b9\u6cbf\u7740$fa$\u94fe\u5230\u6839\u7684\u8def\u5f84\u4e0a\u5bf9\u5e94\u7684\u957f\u5ea6\u4e0d\u5927\u4e8e$len$\u7684\u5b57\u7b26\u4e32\u3002\u5b83\u5bf9$f[p]$\u6709$len-min[p]+1=len-max[fa[p]]$\u7684\u8d21\u732e\uff08SAM\u4e0a$min[p]-1=max[fa[p]]$\uff09\uff0c\u4e14\u5bf9\u8fd9\u6761\u8def\u5f84\u4e0a\u4efb\u610f\u4e00\u70b9$q$\u7684$f[q]$\u90fd\u6709$max[q]-min[q]+1=max[q]-max[fa[q]]$\u7684\u8d21\u732e\u3002\u53ef\u4ee5\u53d1\u73b0\u6b64\u65f6\u53ea\u6709\u5bf9$f[p]$\u7684\u8d21\u732e\u4e0e$len$\u6709\u5173\uff0c\u5bf9\u5176\u4ed6\u7ed3\u70b9$q$\u7684\u8d21\u732e\u53ea\u53d6\u51b3\u4e8e$q$\u5728$fa$\u6811\u4e0a\u7684\u5b50\u6811\u7684\u8bbf\u95ee\u6b21\u6570\u4e4b\u548c\uff08\u4e58\u4e0a$max[q]-max[fa[q]]$\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u53ea\u5904\u7406\u5bf9$f[p]$\u7684\u8d21\u732e\uff0c\u5e76\u8bb0\u5f55\u4e00\u4e0b$p$\u88ab\u8bbf\u95ee\u4e86\u591a\u5c11\u6b21\uff0c\u5904\u7406\u5b8c\u540e\u4e00\u8d77\u63a8\u4e0a\u53bb\u5c31\u884c\u4e86\uff08\u7c7b\u4f3c\u6811\u4e0a\u5dee\u5206\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\u8fd9\u91cc\u53ef\u80fd\u8bb2\u5f97\u4e0d\u6e05\u695a\uff0c\u8be6\u89c1\u4ee3\u7801qwq\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n#include <string>\n#undef i\n#undef j\n#undef k\n#undef true\n#undef false\n#undef min\n#undef max\n#undef sort\n#undef swap\n#undef if\n#undef for\n#undef while\n#undef printf\n#undef scanf\n#undef putchar\n#undef getchar\n#define _ 0\nusing namespace std;\n\nnamespace zyt\n{\n\tconst int N = 2e5 + 10;\n\ttemplate<typename T>\n\tinline bool read(T &x)\n\t{\n\t\tbool f = false;\n\t\tchar c;\n\t\tx = 0;\n\t\tdo\n\t\t\tc = getchar();\n\t\twhile (c != EOF && c != '-' && !isdigit(c));\n\t\tif (c == EOF)\n\t\t\treturn false;\n\t\tif (c == '-')\n\t\t\tf = true, c = getchar();\n\t\tdo\n\t\t\tx = x * 10 + c - '0', c = getchar();\n\t\twhile (isdigit(c));\n\t\tif (f)\n\t\t\tx = -x;\n\t\treturn true;\n\t}\n\tinline bool read(string &s)\n\t{\n\t\tstatic char buf[N];\n\t\tif (scanf(\"%s\", buf) == -1)\n\t\t\treturn false;\n\t\ts = buf;\n\t\treturn true;\n\t}\n\ttemplate<typename T>\n\tinline void write(T x)\n\t{\n\t\tstatic char buf[20];\n\t\tchar *pos = buf;\n\t\tif (x < 0)\n\t\t\tputchar('-'), x = -x;\n\t\tdo\n\t\t\t*pos++ = x % 10 + '0';\n\t\twhile (x /= 10);\n\t\twhile (pos > buf)\n\t\t\tputchar(*--pos);\n\t}\n\tconst int CH = 26;\n\ttypedef long long ll;\n\tstring s1, s2;\n\tnamespace Auto_Suffix_Chicken\n\t{\n\t\tstruct node\n\t\t{\n\t\t\tint size, max, fa, s[CH];\n\t\t}tree[N << 1];\n\t\tint len, cnt, last;\n\t\tinline void init()\n\t\t{\n\t\t\tcnt = last = 1;\n\t\t}\n\t\tinline int ctoi(const char c)\n\t\t{\n\t\t\treturn c - 'a';\n\t\t}\n\t\tvoid insert(const char c)\n\t\t{\n\t\t\tint x = ctoi(c), np = ++cnt, p = last;\n\t\t\ttree[np].max = tree[p].max + 1;\n\t\t\ttree[np].size = 1;\n\t\t\twhile (p && !tree[p].s[x])\n\t\t\t\ttree[p].s[x] = np, p = tree[p].fa;\n\t\t\tif (!p)\n\t\t\t\ttree[np].fa = 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint q = tree[p].s[x];\n\t\t\t\tif (tree[p].max + 1 == tree[q].max)\n\t\t\t\t\ttree[np].fa = q;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint nq = ++cnt;\n\t\t\t\t\tmemcpy(tree[nq].s, tree[q].s, sizeof(char[CH]));\n\t\t\t\t\ttree[nq].max = tree[p].max + 1;\n\t\t\t\t\ttree[nq].fa = tree[q].fa;\n\t\t\t\t\ttree[np].fa = tree[q].fa = nq;\n\t\t\t\t\twhile (p && tree[p].s[x] == q)\n\t\t\t\t\t\ttree[p].s[x] = nq, p = tree[p].fa;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlast = np;\n\t\t}\n\t\tint buf[N << 1];\n\t\tvoid radix_sort()\n\t\t{\n\t\t\tstatic int count[N];\n\t\t\tmemset(count, 0, sizeof(int[len + 1]));\n\t\t\tfor (int i = 1; i <= cnt; i++)\n\t\t\t\t++count[tree[i].max];\n\t\t\tfor (int i = 1; i <= len; i++)\n\t\t\t\tcount[i] += count[i - 1];\n\t\t\tfor (int i = cnt; i > 0; i--)\n\t\t\t\tbuf[count[tree[i].max]--] = i;\n\t\t}\n\t\tvoid build(const string &s)\n\t\t{\n\t\t\tinit();\n\t\t\tlen = s.size();\n\t\t\tfor (int i = 0; i < s.size(); i++)\n\t\t\t\tinsert(s[i]);\n\t\t\tradix_sort();\n\t\t\tfor (int i = cnt; i > 0; i--)\n\t\t\t\ttree[tree[buf[i]].fa].size += tree[buf[i]].size;\n\t\t}\n\t\tinline ll query(const string &s)\n\t\t{\n\t\t\tstatic ll f[N << 1];\n\t\t\tstatic int num[N << 1];\n\t\t\tmemset(f, 0, sizeof(ll[cnt + 1]));\n\t\t\tmemset(num, 0, sizeof(int[cnt + 1]));\n\t\t\tll ans = 0;\n\t\t\tint now = 1, len = 0;\n\t\t\tfor (int i = 0; i < s.size(); i++)\n\t\t\t{\n\t\t\t\tint x = ctoi(s[i]);\n\t\t\t\twhile (now && !tree[now].s[x])\n\t\t\t\t\tnow = tree[now].fa, len = tree[now].max;\n\t\t\t\tif (now)\n\t\t\t\t\tnow = tree[now].s[x], ++len;\n\t\t\t\telse\n\t\t\t\t\tnow = 1, len = 0;\n\t\t\t\tf[now] += (len - tree[tree[now].fa].max), ++num[now];\n\t\t\t}\n\t\t\tradix_sort();\n\t\t\tfor (int i = cnt; i > 0; i--)\n\t\t\t{\n\t\t\t\tint tmp = tree[buf[i]].fa;\n\t\t\t\tf[tmp] += (ll)num[buf[i]] * (tree[tmp].max - tree[tree[tmp].fa].max);\n\t\t\t\tnum[tmp] += num[buf[i]];\n\t\t\t}\n\t\t\tfor (int i = 2; i <= cnt; i++)\n\t\t\t\tans += f[i] * tree[i].size;\n\t\t\treturn ans;\n\t\t}\n\t}\n\tint work()\n\t{\n\t\tusing namespace Auto_Suffix_Chicken;\n\t\tread(s1), read(s2);\n\t\tbuild(s1);\n\t\twrite(query(s2));\n\t\treturn (0^_^0);\n\t}\n}\nint main()\n{\n\tfreopen(\"4566.in\", \"r\", stdin);\n\tfreopen(\"4566.out\", \"w\", stdout);\n\treturn zyt::work();\n}\n```",
        "postTime": 1547189837,
        "uid": 47778,
        "name": "zyt1253679098",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u7528\u7684\u662f**\u666e\u901a**\u7684\u540e\u7f00\u81ea\u52a8\u673a\n\n~~\u9898\u89e3\u91cc\u600e\u4e48\u6ca1\u4eba\u8bf4\u8fd9\u79cd\u505a\u6cd5\u5462~~\n\n\u8fd9\u9053\u9898\u6211\u7684\u601d\u8def\u662f\uff0c\u7528\u4e00\u4e2a\u7279\u6b8a\u7b26\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u5f00\u6765\uff0c\u5efa\u4e00\u4e2asam\uff0c\u770b\u770b\u6bcf\u4e2a\u5b50\u4e32\u5206\u522b\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u6bcf\u4e2a\u5b50\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u6b21\u6570*(\u6b21\u6570-1)/2\uff0c\u4ee3\u8868\u9009\u4e24\u4e2a\u6709\u51e0\u79cd\u9009\u6cd5\u3002\n\n\u4e0d\u8fc7\u6709\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u9009\u7684\u4e24\u4e2a\u90fd\u662fs1\u91cc\u7684\uff0c\u6216\u8005\u90fd\u662fs2\u91cc\u7684\uff0c\u5c31\u4e0d\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u3002\u53ef\u4ee5\u628a\u8fd9\u4e9b\u591a\u4f59\u7684\u8d21\u732e\u51cf\u6389\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u628as1\u548cs2\u5355\u72ec\u518d\u5efa\u4e00\u4e2asam\uff0c\u8dd1\u4e00\u6b21\u8fd9\u4e2a\u505a\u6cd5\uff0c\u7528\u8fd9\u4e2a\u51cf\u6389\u524d\u9762\u7b97\u51fa\u6765\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u600e\u4e48\u7b97\u6bcf\u4e2a\u5b50\u4e32\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u5462\uff1f\u540e\u7f00\u81ea\u52a8\u673a\u7684\u6bcf\u4e00\u4e2a\u975e\u6839\u8282\u70b9u\uff0c\u5b83\u8868\u793a\u4e86len[u]-len[parent[u]]\u4e2a\u5b50\u4e32\uff0c\u6bcf\u4e00\u4e2a\u90fd\u5728\u5b57\u7b26\u4e32\u91cc\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90fd\u662f\u5728parent\u6811\u4e0au\u7684\u5b50\u6811\u4e2d\u975e\u7279\u6b8a\u8282\u70b9\u7684\u4e2a\u6570\u3002\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\uff08\u8fd9\u4e2a\u6027\u8d28\u5e94\u8be5\u6ca1\u9519\u628a\u2026\u2026\uff09\n\n\u7136\u540e\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxlen=400005;\nconst int maxnode=maxlen<<1;\nint fa[maxnode],len[maxnode],tot,rt,sz[maxnode];\nint ne[maxnode],he[maxnode];\nint ch[maxnode][27],d[maxnode];\nlong long ans;\nchar a[maxlen],b[maxlen];\nqueue<int> que;\ninline void make(char *s)\n{\n    register int i,cur,p,q,r;\n    rt=0,tot=1; cur=rt;\n    memset(ch[rt],-1,sizeof(ch[rt])),fa[rt]=-1,sz[rt]=0,len[rt]=0;\n    for(i=0;s[i];i++)\n    {\n        p=cur; cur=tot++,memset(ch[cur],-1,sizeof(ch[cur]));\n        len[cur]=i+1; sz[cur]=1;\n        for(;p>=0 && ch[p][s[i]-'a']==-1;p=fa[p]) ch[p][s[i]-'a']=cur;\n        if(p<0) fa[cur]=rt;\n        else\n        {\n            q=ch[p][s[i]-'a'];\n            if(len[p]+1==len[q]) fa[cur]=q;\n            else\n            {\n                r=tot++,memcpy(ch[r],ch[q],sizeof(ch[q])); len[r]=len[p]+1; sz[r]=0;\n                fa[r]=fa[q],fa[q]=r,fa[cur]=r;\n                for(;p>=0 && ch[p][s[i]-'a']==q;p=fa[p]) ch[p][s[i]-'a']=r;\n            }\n        }\n    }\n}\nvoid dfs(int rt,int flag)\n{\n    int i;\n    for(i=he[rt];i;i=ne[i])\n        dfs(i,flag),sz[rt]+=sz[i]; // \u8ba1\u7b97parent\u6811\u4e0au\u7684\u5b50\u6811\u4e2d\u975e\u7279\u6b8a\u8282\u70b9\u7684\u4e2a\u6570\n    if(rt) ans+=(sz[rt]*(sz[rt]-1ll)*flag*(len[rt]-len[fa[rt]]))>>1; // \u8ba1\u7b97\n}\nint main()\n{\n    int i;\n    ans=0;\n    scanf(\"%s%s\",a,b);\n    make(a);\n    for(i=0;i<tot;i++) he[i]=0;\n    for(i=1;i<tot;i++)\n        ne[i]=he[fa[i]],he[fa[i]]=i; // \u6784\u9020parent\u6811\n    dfs(rt,-1); // \u8ba1\u7b97a\u5f53\u4e2d\u76f8\u540c\u5b50\u4e32\u7684\u5bf9\u6570\n    make(b);\n    for(i=0;i<tot;i++) he[i]=0;\n    for(i=1;i<tot;i++)\n        ne[i]=he[fa[i]],he[fa[i]]=i;\n    dfs(rt,-1); // \u8ba1\u7b97b\u5f53\u4e2d\u76f8\u540c\u5b50\u4e32\u7684\u5bf9\u6570\n    strcat(a,\"{\"),strcat(a,b); // '{'=='z'+1\uff0c\u5077\u4e2a\u61d2\n    make(a);\n    for(i=0;i<tot;i++) he[i]=0;\n    for(i=1;i<tot;i++)\n        ne[i]=he[fa[i]],he[fa[i]]=i;\n    dfs(rt,1); // \u8ba1\u7b97a\u548cb\u8fde\u8d77\u6765\u540e\u76f8\u540c\u5b50\u4e32\u7684\u5bf9\u6570\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1545622485,
        "uid": 36998,
        "name": "ljc1301",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3181 \u3010[HAOI2016]\u627e\u76f8\u540c\u5b57\u7b26\u3011"
    }
]