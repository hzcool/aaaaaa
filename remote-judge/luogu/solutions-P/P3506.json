[
    {
        "content": "\u5b89\u5229\u7a9d\u7684[\u535a\u5ba2](https://www.q234rty.top/2019/02/10/loj3009/)\n\n\u76f8\u4fe1\u5f88\u591a\u4eba\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\u548c\u7a9d\u4e00\u6837\uff1a\u8fd9\u4e0d\u662f\u6c34\u9898\u5417\uff0c\u53ea\u8981\u8bb0 $f(i)$ \u8868\u793a\u4e0b\u6807\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u8f6c\u79fb\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u4eba\u53ef\u80fd\u89c9\u5f97\u8fd9\u9053\u9898\u9700\u8981\u5728\u72b6\u6001\u4e2d\u8bb0\u5f55\u957f\u5ea6 $\\bmod k$\uff0c\u4e8e\u662f\u5f97\u5230\u4e86\u4f18\u79c0\u7684 $O(nk\\log n)$ \u6216 $O(nk)$ \u505a\u6cd5\u3002\n\n\u7b2c\u4e00\u53cd\u5e94\u89c9\u5f97\u8fd9\u9053\u9898\u662f\u6c34\u9898\u4e4b\u540e\u53ef\u80fd\u4f1a\u89c9\u5f97\u4e0d\u5bf9\u52b2\uff0cDP \u9700\u8981\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u800c\u8fd9\u4e2a DP \u770b\u8d77\u6765\u5e76\u4e0d\u6ee1\u8db3\u5440\u3002\n\n\u7136\u800c\uff0c\u8fd9\u4e2a DP \u786e\u5b9e\u662f\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\uff08\u7f51\u4e0a\u7684\u9898\u89e3\u5927\u90fd\u6ca1\u5199\u8bc1\u660e\uff0c[neither_nor](https://blog.csdn.net/neither_nor/article/details/52557379) \u5199\u4e86\u8bc1\u660e\u4f46\u7a9d\u770b\u4e0d\u61c2\uff0c\u4e8e\u662f\u7a9d\u51b3\u5b9a\u5199\u4e00\u4e0b\u7528\u8c37\u6b4c\u7ffb\u8bd1\u770b[\u6ce2\u5170\u6587\u5b98\u65b9\u9898\u89e3](https://oi.edu.pl/static/attachment/20110704/oi17.pdf)\uff08\u5728 P152\uff09\u7684\u6210\u679c\uff09\n\n\u5c31\u662f\u8981\u8bc1\u4e0b\u6807\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\uff0c\u4e00\u5b9a\u53ef\u4ee5\u7531\u67d0\u4e2a\u4e0b\u6807\u4ee5 $j<i$ \u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u63a5\u4e0a $i$ \u5f97\u5230\u3002\n\n\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u8bbe\u4e0b\u6807\u4ee5 $n$ \u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u7b2c\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u518d\u8bbe $m$ \u4e3a\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u4e0a\u4e00\u4e2a\u4e0b\u6807\u3002\n\n\u8bbe $b_1,b_2,\\cdots,b_{f(m)}$ \u4e3a\u4e0b\u6807\u4ee5 $m$ \u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5b50\u5e8f\u5217\u5bf9\u5e94\u7684\u4e0b\u6807\u5e8f\u5217\uff0c\u663e\u7136 $b_{f(m)}=m$\uff0c\u8bbe $k=f(n)$\u3002\n\n\u56e0\u4e3a $n$ \u7ee7\u627f\u7684\u4e0d\u662f $m$ \u7684\u6700\u4f18\u89e3\uff0c\u6240\u4ee5 $k-1<f(m)$\uff0c\u5373 $f(m)\\geq k$\u3002\n\n\u8ba8\u8bba\uff1a\n\n- $a_m=a_n$\uff0c\u8fd9\u65f6 $b_1,b_2,\\cdots,b_{f(m)-1},n$ \u957f\u5ea6\u4e3a $f(m) \\geq k$\uff0c\u663e\u7136\u4e3a\u4e00\u4e2a\u4e0d\u4f1a\u66f4\u52a3\u7684\u89e3\u3002\n- $a_m<a_n$\uff0c\u8fd9\u5c31\u662f\u8bf4 $s_{k-1}=``<\"$\uff0c\u7ee7\u7eed\u8ba8\u8bba\uff1a\n  - $a_{b_{k-1}}<a_n$\uff0c\u90a3\u4e48 $b_1,b_2,\\cdots,b_{k-1},n$ \u957f\u5ea6\u4e3a $k$\uff0c\u4e0d\u4f1a\u66f4\u52a3\u3002\n  - $a_{b_{k-1}}\\geq a_n$\uff0c\u6211\u4eec\u6709 $a_{b_{k-1}}<a_{b_k}$\uff0c\u4f46\u662f $a_{b_{k-1}}\\geq a_n>a_m$\uff0c\u4e5f\u5373\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a $w\\geq k$ \u6ee1\u8db3 $a_{b_w}>a_{b_{w+1}}$\uff0c\u4e5f\u5373 $s_{w}=``>\"$\uff0c\u6211\u4eec\u53d6\u7b2c\u4e00\u4e2a\u8fd9\u6837\u7684 $w$\uff0c\u4e8e\u662f $\\forall i \\in [k,w), a_{b_i}\\leq a_{b_{i+1}}$\uff0c\u53c8 $a_{b_{k-1}}<a_{b_k}$\uff0c\u4e8e\u662f $a_{b_w}>a_{b_{k-1}}\\geq a_n$\uff0c\u4e8e\u662f $b_1,b_2,\\cdots,b_{w},n$ \u957f\u5ea6\u4e3a $w+1>k$\uff0c\u66f4\u4f18\u3002\n- $a_m>a_n$\uff0c\u540c\u7406\u5f97\u8bc1\u3002\n\n\u8fd9\u6837\u5c31\u8bc1\u5b8c\u5566\u3002\n\n\u4f7f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u7ef4\u62a4\u4e0b\u4e00\u4e2a\u662f\u5927\u4e8e\u548c\u5c0f\u4e8e\u7684\u60c5\u51b5\uff0c\u7b49\u4e8e\u76f4\u63a5\u7528\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n[Code](https://github.com/q234rty/OJ-Codes/blob/master/LibreOJ/3009.cpp)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int MAXSIZE=10000020;\nint bufpos;\nchar buf[MAXSIZE];\n#define NEG 0\nvoid init(){\n\t#ifdef LOCAL\n\t\tfreopen(\"3009.txt\",\"r\",stdin);\n\t#endif\n\tbuf[fread(buf,1,MAXSIZE,stdin)]='\\0';\n\tbufpos=0;\n}\n#if NEG\nint readint(){\n\tbool isneg;\n\tint val=0;\n\tfor(;!isdigit(buf[bufpos]) && buf[bufpos]!='-';bufpos++);\n\tbufpos+=(isneg=buf[bufpos]=='-');\n\tfor(;isdigit(buf[bufpos]);bufpos++)\n\t\tval=val*10+buf[bufpos]-'0';\n\treturn isneg?-val:val;\n}\n#else\nint readint(){\n\tint val=0;\n\tfor(;!isdigit(buf[bufpos]);bufpos++);\n\tfor(;isdigit(buf[bufpos]);bufpos++)\n\t\tval=val*10+buf[bufpos]-'0';\n\treturn val;\n}\n#endif\nchar readchar(){\n\tfor(;isspace(buf[bufpos]);bufpos++);\n\treturn buf[bufpos++];\n}\nint readstr(char* s){\n\tint cur=0;\n\tfor(;isspace(buf[bufpos]);bufpos++);\n\tfor(;!isspace(buf[bufpos]);bufpos++)\n\t\ts[cur++]=buf[bufpos];\n\ts[cur]='\\0';\n\treturn cur;\n}\nconst int maxn=1000002;\ninline void tense(pii &x,pii y){\n\tif (x<y)\n\t\tx=y;\n}\nstruct bit{\n\tint n;\n\tpii t[maxn];\n\tvoid add(int p,pii v){\n\t\tfor(;p<=n;p+=p&-p)\n\t\t\ttense(t[p],v);\n\t}\n\tpii query(int p){\n\t\tpii ans;\n\t\tfor(;p;p-=p&-p)\n\t\t\ttense(ans,t[p]);\n\t\treturn ans;\n\t}\n}b1;\nstruct tib{\n\tint n;\n\tpii t[maxn];\n\tvoid add(int p,pii v){\n\t\tfor(;p;p-=p&-p)\n\t\t\ttense(t[p],v);\n\t}\n\tpii query(int p){\n\t\tpii ans;\n\t\tfor(;p<=n;p+=p&-p)\n\t\t\ttense(ans,t[p]);\n\t\treturn ans;\n\t}\n}b2;\ninline pii inc(pii x){\n\tx.first++;\n\treturn x;\n}\nint a[maxn],dp[maxn],lst[maxn],stk[maxn];\npii qwq[maxn];\nchar s[maxn];\nint main(){\n\tinit();\n\tint n=readint(),k=readint();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=readint();\n\tfor(int i=1;i<=k;i++)\n\t\ts[i]=readchar();\n\tb1.n=b2.n=maxn-1;\n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tpii lol;\n\t\ttense(lol,inc(b1.query(a[i]-1)));\n\t\ttense(lol,inc(b2.query(a[i]+1)));\n\t\ttense(lol,inc(qwq[a[i]]));\n\t\tdp[i]=lol.first,lst[i]=lol.second;\n\t\t// printf(\"dp[%d]=%d lst[%d]=%d\\n\",i,dp[i],i,lst[i]);\n\t\tlol.second=i;\n\t\tchar now=s[(dp[i]-1)%k+1];\n\t\tif (now=='=')\n\t\t\ttense(qwq[a[i]],lol);\n\t\telse if (now=='<')\n\t\t\tb1.add(a[i],lol);\n\t\telse b2.add(a[i],lol);\n\t\t// printf(\"dp[%d]=%d lst[%d]=%d\\n\",i,dp[i],i,lst[i]);\n\t\tif (dp[i]>dp[ans])\n\t\t\tans=i;\n\t}\n\tprintf(\"%d\\n\",dp[ans]);\n\tint cur=0;\n\twhile(ans){\n\t\tstk[++cur]=ans;\n\t\tans=lst[ans];\n\t}\n\tfor(int i=cur;i;i--)\n\t\tprintf(\"%d \",a[stk[i]]);\n}\n```",
        "postTime": 1549809687,
        "uid": 3720,
        "name": "q234rty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3506 \u3010[POI2010]MOT-Monotonicity 2\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5b8c\u6210\u7684\u9898\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528\u7ebf\u6bb5\u6811\u5462\uff1f\n\n~~\u5e0c\u4e30\u5c55\uff1f\u770b[\u535a\u5ba2](https://www.cnblogs.com/Z8875/p/13379107.html)~~\n* \u5148\u7b80\u5316\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u5c31\u662f\u5c06 s \u5e8f\u5217\u590d\u5236\u51e0\u6b21\u5c55\u5f00\uff0c\u8ba9 a \u7684\u5b50\u5e8f\u5217\u7684\u7b26\u53f7\u662f s \u5e8f\u5217\u7684\u524d\u7f00\u3002\n\n\u5c31\u50cf <,>,= \u53ef\u4ee5\u5199\u6210 <,>,=,<,>,=,<,>,=,... a \u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217 2,4,3,3,5,3 \u7684\u7b26\u53f7\u5e8f\u5217 <,>,=,<,> \u5c31\u662f\u4e0a\u9762\u5c55\u5f00\u7684\u90a3\u4e2a\u5e8f\u5217\u7684\u524d\u7f00\uff0c\u6240\u4ee5\u5408\u6cd5\u3002\n* \u5206\u6790\n\n\u6839\u636e\u9898\u76ee\u53ef\u4ee5\u60f3\u5230$O(n^2)$\u7684\u5199\u6cd5\n\u5b9a\u4e49$f_i$\u4e3a\u4ee5$a_i$\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u5408\u6cd5\u5e8f\u5217\u3002\uff08\u6709\u4e9b\u7c7b\u4f3c\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff09\n\n\n\u7b2c\u4e00\u7ef4\u679a\u4e3e\u72b6\u6001 i\uff0c\u7b2c\u4e8c\u7ef4\u9009\u53d6\u51b3\u7b56 j\uff0c\u5c31\u662f\u5728 1 \u5230 i-1 \u4e2d\u9009\u53d6\u4e00\u4e2a j \u4f7f\u5f97$a_i$\u53ef\u4ee5\u63a5\u5728 $a_j$ \u540e\u9762\u4e14 $f_j$ \u6700\u5927\u3002\uff08\u5728\u7c7b\u6bd4\u4e00\u4e0b\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff09\n\n\u8fd9\u91cc\u8003\u8651$a_i$\u53ef\u4ee5\u63a5\u5728 $a_j$ \u540e\u9762\u6761\u4ef6\uff0c\u56e0\u4e3a$f_j$\u662f\u6700\u957f\u957f\u5ea6\uff0c\u8fd9\u6837\u5b83\u540e\u9762\u7684\u7b26\u53f7\u5176\u5b9e\u5c31\u786e\u5b9a\u4e86\uff0c\u5c31\u662f$s[f_i]$\uff08\u9884\u5904\u7406\u662f\u5148\u628a s \u5e8f\u5217\u6309\u6211\u63cf\u8ff0\u7684\u9898\u610f\u5c55\u5f00\uff09\uff0c\u662f\u5982\u679c\u8981\u63a5\u5230$a_j$\u7684\u540e\u9762\uff0c\u5fc5\u987b\u8981\u6ee1\u8db3$a_j s[f_i]a_i,s[f_i]\\in \\{<,>,=\\}$\n\n$n^2$\u7684\u89e3\u6cd5\u662f\u8dd1\u4e0d\u4e86n\u7684\u8303\u56f4\u662f$5\\times 10^5$\u7684\u6570\u636e\u7684\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u5173\u4e8eDP\u7684\u4f18\u5316\uff0c\u4ec0\u4e48\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u659c\u7387\u4f18\u5316\u5176\u5b9e\u90fd\u662f\u5728\u9009\u51b3\u7b56 j \u7684\u65f6\u4faf\u8fdb\u884c\u4f18\u5316\uff0c\u8fd9\u91cc\u7684\u51b3\u7b56\u4e5f\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u3002\n\n\u6bcf\u6b21\u90fd\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u800c\u4e14\u662f\u9009\u53d6\u7684\u6700\u5927\u503c\uff0c\u5176\u5b9e\u51b3\u7b56 j \u7684\u53d6\u503c\u4e5f\u6709\u4e09\u79cd\uff1a\n1. $a_j<a_i$\u4e2d f \u503c\u6700\u5927\u7684j\n2. $a_j>a_i$\u4e2d f \u503c\u6700\u5927\u7684j\n3. $a_j=a_i$\u4e2d f \u503c\u6700\u5927\u7684j\n\n\u90fd\u662f\u53d6\u6700\u5927\u503c\u800c\u4e14\u5c0f\u4e8e\u53f7\u60c5\u51b5\u662f\u524d\u7f00\u6700\u5927\u503c\uff0c\u5927\u4e8e\u53f7\u60c5\u51b5\u662f\u540e\u7f00\u6700\u5927\u503c\uff0c\u8fd9\u4e24\u4e2a\u7528\u5f00\u5728 0-1e6 \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u7b49\u4e8e\u53f7\u7684\u5176\u5b9e\u5f00\u4e2a\u6570\u7ec4\u5c31\u591f\u4e86\uff0c\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e0e\u5355\u70b9\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n\u5173\u4e8e\u6811\u72b6\u6570\u7ec4\u5982\u4f55\u7ef4\u62a4\u540e\u7f00\u6700\u5927\u503c\uff0c\u6211\u4eec\u60f3\uff0c\u7ef4\u62a4\u524d\u7f00\u6700\u5927\u503c\u7684\u65f6\u5019\u662f\u5411\u540e\u66f4\u65b0\uff0c\u5411\u524d\u67e5\u8be2\uff0c\u90a3\u7ef4\u62a4\u540e\u7f00\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u5411\u524d\u66f4\u65b0\uff0c\u5411\u540e\u67e5\u8be2\uff0c\u5176\u5b9e\u662f\u4e00\u4e2a\u9053\u7406\u7684\u3002\n\n\u6211\u7684\u4ee3\u7801\u4e5f\u4e0d\u662f\u5f88\u957f\uff0c\u8fd8\u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\u53ef\u4ee5\u770b\u4e00\u770b\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 5e5 + 5, M = 1e6 + 5;\nchar c[N];\nint n, k, a[N], f[N], t1[M], t2[M], t[M], p[N], ans, last;\nint low(int x) {//lowbit\u51fd\u6570\n\treturn x & -x;\n}\nvoid Change1(int x) {\u524d\u7f00\u6700\u5927\u503c\u5411\u540e\u66f4\u65b0\n\tfor (int i = a[x]; i <= 1e6; i += low(i))\n\t\tif (f[x] > f[t1[i]]) t1[i] = x;\n}\nint Ask1(int x) {\u524d\u7f00\u6700\u5927\u503c\u5411\u524d\u67e5\u8be2\n\tint b = 0;\n\tfor (int i = a[x] - 1; i; i -= low(i))\n\t\tif (f[b] < f[t1[i]]) b = t1[i];\n\treturn b;\n}\nvoid Change2(int x) {\u540e\u7f00\u6700\u5927\u503c\u5411\u524d\u66f4\u65b0\n\tfor (int i = a[x]; i; i -= low(i))\n\t\tif (f[x] > f[t2[i]]) t2[i] = x;\n}\nint Ask2(int x) {\u540e\u7f00\u6700\u5927\u503c\u5411\u540e\u67e5\u8be2\n\tint b = 0;\n\tfor (int i = a[x] + 1; i <= 1e6; i += low(i))\n\t\tif (f[b] < f[t2[i]]) b = t2[i];\n\treturn b;\n}\nvoid Print(int x) {//\u9012\u5f52\u8f93\u51fa\u65b9\u6848\n\tif (!x) return;\n\tPrint(p[x]);\n\tprintf(\"%d \", a[x]);\n}\nint main() {\n\tscanf(\"%d%d\", &n, &k);\n\tfor (int i = 1; i <= n; ++i)\n\t \tscanf(\"%d\", &a[i]), f[i] = 1;//f\u521d\u59cb\u5316\u4e3a1\n\tfor (int i = 1; i <= k; ++i)\n\t\tscanf(\" %c\", &c[i]);\n\tfor (int i = k + 1; i < n; ++i)\n\t\tc[i] = c[(i-1)%k+1];//\u5c55\u5f00\n\tfor (int i = 1, j; i <= n; ++i) {\n\t\tif (f[i] < f[j=Ask1(i)] + 1)//\u67e5\u8be2\u5c0f\u4e8e\u53f7\n\t\t\tf[i] = f[j] + 1, p[i] = j;\n\t\tif (f[i] < f[j=Ask2(i)] + 1)//\u67e5\u8be2\u5927\u4e8e\u53f7\n\t\t\tf[i] = f[j] + 1, p[i] = j;\n\t\tif (f[i] < f[j=t[a[i]]] + 1)//\u67e5\u8be2\u7b49\u4e8e\u53f7\n\t\t\tf[i] = f[j] + 1, p[i] = j;\n\t\tif (ans < f[i]) ans = f[i], last = i;//\u66f4\u65b0\u7b54\u6848\n\t\tif (c[f[i]] == '<') Change1(i);//\u66f4\u65b0\u5c0f\u4e8e\u53f7\n\t\tif (c[f[i]] == '>') Change2(i);//\u66f4\u65b0\u5927\u4e8e\u53f7\n\t\tif (c[f[i]] == '=' && f[i] > f[t[a[i]]]) //\u66f4\u65b0\u7b49\u4e8e\u53f7\n\t\t\tt[a[i]] = i;\n\t}\n\tprintf(\"%d\\n\", ans);\n\tPrint(last);//\u8f93\u51fa\u65b9\u6848\n\treturn 0;\n}\n```\n",
        "postTime": 1595717450,
        "uid": 106024,
        "name": "Shawk",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3506 \u3010[POI2010]MOT-Monotonicity 2\u3011"
    },
    {
        "content": "## POI 2010 MOT-Monotonicity 2\n\n\u200b\t\u9898\u76ee\u94fe\u63a5\uff1a[POI2010 MOT-Monotonicity 2](https://www.luogu.com.cn/problem/P3506)\n\n---\n\n\u200b\t\u8003\u8651 dp\uff0c\u4e8c\u7ef4 dp \u5341\u5206\u597d\u60f3\uff0c\u4f46\u662f\u4e8c\u7ef4 dp \u65e0\u8bba\u600e\u4e48\u4f18\u5316\u6700\u5feb\u4e5f\u53ea\u80fd\u8fbe\u5230 $O(n\\times k\\times\\log(n))$\uff0c\u90a3\u4e48\u4e8c\u7ef4 dp \u7684\u60f3\u6cd5\u53ea\u80fd\u88ab\u820d\u5f03\uff0c\u6211\u4eec\u80af\u5b9a\u7acb\u9a6c\u60f3\u5230\u4e0d\u7528\u4e8c\u7ef4\uff0c\u8bbe $f_i$ \u8868\u793a\u4ee5  $i$ \u4e3a\u7ed3\u5c3e\u7684\uff0c\u6240\u80fd\u5f62\u6210\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u957f\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u53ef\u662f\u8fd9\u4e48\u5b9a\u4e49\u72b6\u6001\u80fd\u4e0d\u80fd\u6ee1\u8db3**\u6700\u4f18\u5b50\u7ed3\u6784**\u8fd9\u4e2a\u6027\u8d28\u5462\u3002\n\n\u200b\t\u5982\u679c\u6ee1\u8db3**\u6700\u4f18\u5b50\u7ed3\u6784**\u8fd9\u4e2a\u6027\u8d28\uff0c\u5c31\u8bf4\u660e**\u4ece\u6700\u4f18\u89e3\u8f6c\u79fb\u4e00\u5b9a\u4e0d\u6bd4\u975e\u6700\u4f18\u89e3\u8f6c\u79fb\u52a3**\u3002\n\n\u200b\t\u4e0b\u9762\u6211\u4eec\u8bc1\u660e\u8fd9\u4e2a\u72b6\u6001\u6ee1\u8db3**\u6700\u4f18\u5b50\u7ed3\u6784**\uff1a\n\n\u200b\t\u6211\u4eec\u91c7\u53d6\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u6b63\u5728\u6c42 $f_i$\u3002$\\forall j\\in[1,i-1]$\uff0c\u6211\u4eec\u5047\u8bbe $f_j=x$\uff0c\u548c\u4e00\u4e2a\u6bd4 $x$ \u77ed\uff0c\u4ee5 $j$ \u4e3a\u7ed3\u5c3e\u7684\u5e8f\u5217\u7ed3\u5c3e\u518d\u6dfb\u4e0a\u4e00\u4e2a $i$ \u5c31\u6784\u6210\u4e86\u957f\u5ea6\u4e3a $f_i$ \u7684\u5e8f\u5217\u3002\u5373 $f_i$ \u4e0d\u662f\u7531 $f_j$ \u8fd9\u4e2a\u6700\u4f18\u89e3\u6dfb\u4e0a\u4e00\u4e2a $i$ \u83b7\u5f97\u7684\uff0c\u800c\u662f\u7531\u4e00\u4e2a\u957f\u5ea6\u4e3a $y$ \u7684\u975e\u6700\u4f18\u89e3\u5e8f\u5217\u83b7\u5f97\u7684\u3002\u90a3\u4e48\u6839\u636e\u6211\u4eec\u7684\u5047\u8bbe\uff0c\u6709 $x>y$\u3002\u6211\u4eec\u8bbe $\\text{long}$ \u5e8f\u5217\u4e3a\u957f\u5ea6\u4e3a $x$ \u7684\uff0c\u4ee5 $j$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u4f18\u89e3\u5e8f\u5217\uff0c$\\text{short}$ \u5e8f\u5217\u4e3a\u957f\u5ea6\u4e3a $y$ \u7684\uff0c\u4ee5 $j$ \u4e3a\u7ed3\u5c3e\u7684\u975e\u6700\u4f18\u89e3\u5e8f\u5217\uff0c\u90a3\u4e48\u5047\u8bbe\u5c31\u662f $f_i$ \u662f\u7531 $i$ \u7ee7\u627f $\\text{short}$ \u5e8f\u5217\u5f97\u5230\u5e8f\u5217\u7684\u957f\u5ea6 \uff0c\u800c\u4e14 $f_i$ \u4ece\u67d0\u4e2a\u6700\u4f18\u89e3\u8f6c\u79fb\u6765\u7684\u7b54\u6848\u52a3\u4e8e\u7531 $\\text{short}$ \u8f6c\u79fb\u6765\u7684\u7b54\u6848\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l284n7i8.png)\n\n\u200b\t\u90a3\u4e48\u6839\u636e\u5047\u8bbe\u6211\u4eec\u6709 $f_i=y+1,x>y$\u3002\u540c\u65f6\u8fd8\u6709\u4ee5\u4e0b\u63a8\u8bba\uff1a\n\n + \u4f4d\u7f6e $x$ \u4e0e \u4f4d\u7f6e $y$ \u7684\u7b26\u53f7\u4e0d\u540c\u3002\n\n   \u5982\u679c\u4ed6\u4eec\u76f8\u540c\u7684\u8bdd\uff0c\u7531\u4e8e\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u503c\u540c\u4e3a $a_j$ \u90a3\u4e48 $\\text{long}$ \u5e8f\u5217\u53ef\u4ee5\u66ff\u4ee3 $\\text{short}$ \u5e8f\u5217\uff0c\u56e0\u4e3a\u5982\u679c $a_i$ \u80fd\u63a5\u5728 $\\text{short}$ \u540e\u9762\u5c31\u4e00\u5b9a\u80fd\u63a5\u5728 $\\text{long}$ \u540e\u9762\uff0c\u800c $x+1>y+1$ \u663e\u7136\uff0c\u4f7f\u7528 $\\text{long}$ \u5e8f\u5217\u66f4\u4f18\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u8981\u6ee1\u8db3\u6211\u4eec\u7684\u5047\u8bbe\uff0c$a_i,a_j$ \u5c31\u53ea\u80fd\u6ee1\u8db3 $y$ \u540e\u7684\u7b26\u53f7\u800c\u4e0d\u6ee1\u8db3 $x$ \u540e\u7684\u7b26\u53f7\u3002\n\n+ $a_i$ \u4e0e $a_j$ \u4e0d\u76f8\u7b49\u3002\n\n  \u5982\u679c\u76f8\u7b49\uff0c\u6211\u4eec\u7ee7\u7eed\u5206\u7c7b\u8ba8\u8bba\uff0c\u82e5 $x$ \u540e\u7b26\u53f7\u4e3a $\\text{=}$ \u5219\u9009 $\\text{long}$ \u5e8f\u5217\u8f6c\u79fb\u3002\u82e5 $x$ \u540e\u7b26\u53f7\u4e0d\u4e3a $\\text{=}$ \u7531\u4e8e $a_i=a_j$ \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 $a_i$ \u4ee3\u66ff $a_j$ \u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $x$ \u7684\u5e8f\u5217\uff0c\u5373\u901a\u8fc7 $\\text{long}$ \u91cc $j$ \u7684\u524d\u4e00\u4e2a\u8f6c\u79fb\u8fc7\u6765\uff0c\u800c $x\\ge y+1$ \u6240\u4ee5 $a_i=a_j$ \u65f6\uff0c\u4ece\u6700\u4f18\u89e3\u8f6c\u79fb\u4e00\u5b9a\u4e0d\u52a3\u3002\n\n+ \u4f4d\u7f6e $y$ \u7684\u4f4d\u7f6e\u4e0d\u662f $\\text{=}$\u3002\n\n  \u6839\u636e\u4e0a\u8ff0\u4e24\u63a8\u8bba\u5f97\u5230\u3002\n\n\u90a3\u4e48\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u63a8\u8bba\u7684\u60c5\u51b5\u5c31\u53ef\u4ee5\u4ece\u6700\u4f18\u89e3\u8f6c\u79fb\uff0c\u6211\u4eec\u7ee7\u7eed\u63a2\u8ba8\u6ee1\u8db3\u4e0a\u8ff0\u4e09\u79cd\u63a8\u8bba\u7684\u60c5\u51b5\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k13x3it6.png)\n\n\u7531\u4e8e $x>y$ \u6240\u4ee5\u5728 $\\text{long}$ \u5e8f\u5217\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u8282\u70b9 $k$ \u4f7f\u5f97 $f_k=y$\u3002\u8fd9\u6837\u6211\u4eec\u53c8\u6709\u7ed3\u8bba\uff1a\n\n+ $a_i,a_k$ \u4e0d\u80fd\u6ee1\u8db3 $y$ \u4f4d\u7f6e\u540e\u7b26\u53f7\u7684\u5173\u7cfb\u3002\n\n  \u5982\u679c\u6ee1\u8db3\uff0c\u90a3\u4e48\u4ece $f_k$ \u8f6c\u79fb\u8fc7\u6765\u7684\u7b54\u6848\u4e0d\u52a3\u4e8e $\\text{short}$  \u8f6c\u79fb\u8fc7\u6765\u7684\u7b54\u6848\uff0c\u8fd9\u4e0e\u6211\u4eec\u7684\u5047\u8bbe\u4e0d\u7b26\u3002\n\n+ \u5982\u679c $x$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u662f $\\text{<}$\uff0c\u90a3\u4e48 $y$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u53ea\u80fd\u662f $\\text{>}$\u3002\n\n  \u56e0\u4e3a\u6839\u636e\u4e4b\u524d\u7684\u63a8\u8bba $x,y$ \u4f4d\u7f6e\u7b26\u53f7\u4e0d\u540c\uff0c\u4e14 $y$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u4e0d\u80fd\u662f $\\text{=}$ \u53f7\u3002\n\n  \u7136\u540e\u6211\u4eec\u987a\u7740\u8fd9\u79cd\u60c5\u5f62\u63a8\u4e0b\u53bb\uff0c\u5f97\u5230 $a_k<a_i<a_j$ \uff08$a_k,a_i$ \u4e0d\u6ee1\u8db3\u7b26\u53f7\u800c $a_i,a_j$ \u6ee1\u8db3\uff09\uff0c\u53c8\u56e0\u4e3a\u4f4d\u7f6e $y$ \u7684\u7b26\u53f7\u662f $\\text{>}$\u3002\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a $a_l(k<l\\le j)$ \u4e14 $l$ \u540e\u7684\u7b26\u53f7\u4e00\u5b9a\u662f $\\text{<}$\uff0c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a $l$ \u540e\u7684\u7b26\u53f7\u662f  $\\text{<}$ \u90a3\u4e48 $a_k,a_j$ \u7684\u5173\u7cfb\u5e94\u8be5\u662f $a_k\\ge a_i$\u3002\u8fd9\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u76f8\u8fdd\u80cc\u3002\u90a3\u4e48\u65e2\u7136\u5b58\u5728\u8fd9\u6837\u7684 $l$\uff0c\u90a3\u6211\u4eec\u53d6\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684 $l$ \u5c31\u80fd\u4fdd\u8bc1 $l$ \u524d\u7684\u7b26\u53f7\u90fd\u662f $\\text{>},\\text{=}$,\u5c31\u6709 $a_k\\ge a_l<a_j$ \u5373 $a_l<a_k<a_i<a_j$\uff0c\u53c8 $l$ \u540e\u7684\u7b26\u53f7\u4e3a $\\text{<}$ \u90a3\u4e48 $f_i$ \u53ef\u4ee5\u7531 $f_l$ \u8f6c\u79fb\u6765\uff0c\u800c $f_l\\ge f_k+1=y+1$\uff0c\u6240\u4ee5 $f_i\\ge y+2>y+1$\u3002\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e2d\uff0c$f_i$ \u4ece\u67d0\u4e2a\u6700\u4f18\u89e3\u8f6c\u79fb\u8fc7\u6765\u53cd\u800c\u66f4\u4f18\u3002\n\n+ \u5982\u679c $x$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u662f $\\text{=}$\uff0c\u90a3\u4e48 $y$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u53ea\u80fd\u662f $\\text{>},\\text{<}$\u3002\n\n  \u5148\u770b $y$ \u4f4d\u7f6e\u4e3a $\\text{>}$ \u7684\u60c5\u51b5\u3002\u53d1\u73b0\u8fd9\u79cd\u60c5\u51b5\u4e8e\u4e0a\u8ff0\u60c5\u51b5\u76f8\u540c\uff08\u56e0\u4e3a\u5728\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\u7684\u63a8\u5bfc\u4e2d $x$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u6ca1\u6709\u51fa\u73b0\uff09\u3002\n\n  \u518d\u770b $y$ \u4f4d\u7f6e\u4e3a $\\text{<}$ \u7684\u60c5\u51b5\uff08\u5176\u5b9e\u8fd9\u91cc\u4e0e\u4e0a\u9762\u90a3\u4e2a\u60c5\u51b5\u521a\u597d\u76f8\u53cd\uff0c\u5c06\u4e0a\u8ff0\u63a8\u5bfc\u7b26\u53f7\u53cd\u4e00\u53cd\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u8fd9\u91cc\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u770b\uff0c\u56e0\u4e3a\u8fc7\u7a0b\u96f7\u540c\u4e5f\u53ef\u4ee5\u8df3\u8fc7\uff09\n\n  \u6709 $a_k>a_i>a_j$ \uff08$a_k,a_i$ \u4e0d\u6ee1\u8db3\u800c $a_i,a_j$ \u6ee1\u8db3\uff09\uff0c\u53c8 $y$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u662f $\\text{<}$ \u90a3\u4e48\u4e00\u5b9a\u5b58\u5728 $a_l(k<l\\le j)$ \u6ee1\u8db3 $l$ \u4f4d\u7f6e\u540e\u7684\u7b26\u53f7\u4e3a $\\text{>}$\uff0c\u5426\u5219 $a_k,a_j$ \u7684\u5173\u7cfb\u5e94\u8be5\u662f $a_k\\le a_j$ \u8fd9\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u7b26\u3002\u6240\u4ee5 $l$ \u4e00\u5b9a\u5b58\u5728\uff0c\u6211\u4eec\u53d6\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684 $l$\uff0c\u5c31\u80fd\u6ee1\u8db3 $l$ \u524d\u7684\u7b26\u53f7\u5168\u662f $\\text{<},\\text{=}$ \u90a3\u4e48\u6709 $a_k\\le a_l>a_i$\uff0c\u53c8 $l$ \u540e\u7684\u7b26\u53f7\u662f $\\text{>}$\uff0c\u90a3\u4e48 $f_i$ \u53ef\u4ee5\u7531 $f_l$ \u8f6c\u79fb\u800c\u6765\uff0c\u800c $f_l\\ge f_k+1\\ge y+1$\uff0c\u5219 $f_i\\ge y+2>y+1$ \uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e5f\u662f\u7528\u6700\u4f18\u89e3\u8f6c\u79fb\u8fc7\u6765\u66f4\u4f18\u3002\n\n+ \u5982\u679c $x$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u662f $\\text{>}$ \u90a3\u4e48 $y$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u53ea\u80fd\u662f $\\text{<}$  \u8fd9\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u4e00\u81f4\uff08\u56e0\u4e3a $x$ \u4f4d\u7f6e\u7684\u7b26\u53f7\u6ca1\u6709\u5728\u63a8\u5bfc\u51fa\u73b0\uff0c\u4e5f\u5c31\u6ca1\u6709\u5f71\u54cd\uff09\n\n\u200b    \u7efc\u4e0a\u6240\u8ff0\uff0c$f_i$ \u4ece\u4e4b\u524d\u7684\u6700\u4f18\u89e3\u8f6c\u79fb\u8fc7\u6765\u7684\u7b54\u6848\u4e00\u5b9a\u4e0d\u52a3\uff0c\u751a\u81f3\u66f4\u4f18\u3002\u90a3\u4e48\u6709\u4e00\u4e2a\u663e\u7136\u7684 $O(n^2)$ \u7684 dp\u3002\u8f6c\u79fb\u5f0f\u4e3a\uff1a\n$$\ndp_i=\\left\\{\n\\begin{aligned}\n&dp_j+1(temp[dp_j]='\\text{<}',a_i<a_j)\\\\\n&dp_j+1(temp[dp_j]='\\text{>}',a_i>a_j)\\\\\n&dp_j+1(temp[dp_j]='\\text{=}',a_i=a_j)\\\\\n\\end{aligned}\n\\right.\n$$\n\u200b\t\u7136\u540e\u53d6\u4e2a\u6781\u503c\u5c31\u597d\u4e86\u3002\u90a3\u4e48\u4f18\u5316\u4e5f\u662f\u663e\u7136\u7684\uff0c\u6211\u4eec\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u8bb0\u5f55\u524d\u7f00\u6700\u5927\u503c\u548c\u540e\u7f00\u6700\u5927\u503c\uff0c\u7136\u540e\u7528\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u76f8\u7b49\u7684\u6743\u503c\u7684 $dp_i$ \u7684\u6700\u5927\u503c\u3002\u8fd9\u9898\u7684\u4e3b\u8981\u96be\u70b9\u5c31\u662f\u60f3\u5230\u4e00\u7ef4 dp \u7684\u53ef\u884c\u6027\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define lowbit(i) (i&(-i))\nusing namespace std;\nconst int MAXN = 5e5+5;\nconst int MX = 1e6;\nint n,k,a[MAXN],b[MAXN];\nint t1[MX+5],t2[MX+5],dp[MAXN],val[MX+5];\nvoid upd(int *t,int pos,int x){for(int i=pos;i<=MX;i+=lowbit(i))t[i]=max(t[i],x);}\nint query(int *t,int pos){int ans=0;for(int i=pos;i;i-=lowbit(i))ans=max(ans,t[i]);return ans;}\nstack <int> st;\nint main()\n{\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=k;++i)//1 = ,0 < , 2 >\n\t{\n\t\tchar s[4];\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='<') b[i]=0;\n\t\telse if(s[1]=='=') b[i]=1;\n\t\telse b[i]=2;\n\t}\n\tfor(int i=k+1;i<=n;++i)\n\t\tb[i]=b[i-k];\n\tint ans=0,res=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tdp[i]=max(val[a[i]],max(query(t1,a[i]-1),query(t2,MX-a[i])))+1;\n\t\tif(b[dp[i]]==0)upd(t1,a[i],dp[i]);\n\t\tif(b[dp[i]]==2)upd(t2,MX-a[i]+1,dp[i]);\n\t\tif(b[dp[i]]==1)val[a[i]]=max(dp[i],val[a[i]]);\n\t}\n\tint ind=0;\n\tfor(int i=1;i<=n;++i)\n\t\tif(dp[i]>ans) ans=dp[i],res=a[i],ind=i;\n\tprintf(\"%d\\n\",ans);--ans;st.push(res);\n\tfor(int i=ind-1;i>=1;--i)//\u8f93\u51fa\uff0c\u4ece\u5c3e\u90e8\u5f80\u524d\u904d\u5386\u6570\u7ec4\uff0c\u5229\u7528\u6808\u7684\u7279\u6027\u3002\n\t{\n\t\tif(ans==0) break;\n\t\tif(b[ans]==1)\n\t\t{\n\t\t\tif(res==a[i]&&dp[i]==ans)\n\t\t\t{\n\t\t\t\tst.push(a[i]);\n\t\t\t\t--ans;\n\t\t\t\tres=a[i];\n\t\t\t}\n\t\t}\n\t\telse if(b[ans]==0)\n\t\t{\n\t\t\tif(res>a[i]&&dp[i]==ans)\n\t\t\t{\n\t\t\t\tst.push(a[i]);\n\t\t\t\t--ans;\n\t\t\t\tres=a[i];\n\t\t\t}\n\t\t}\n\t\telse if(b[ans]==2)\n\t\t{\n\t\t\tif(res<a[i]&&dp[i]==ans)\n\t\t\t{\n\t\t\t\tst.push(a[i]);\n\t\t\t\t--ans;\n\t\t\t\tres=a[i];\n\t\t\t}\n\t\t}\n\t}\n\twhile(!st.empty())\n\t{\n\t\tprintf(\"%d \",st.top());\n\t\tst.pop();\n\t}\n\treturn 0;\n}\n```\n\n\n\n\u603b\u7ed3\uff1a\u592a\u6298\u78e8\u4e86\uff0c\u9b3c\u77e5\u9053\u6211\u8003\u8bd5\u88ab\u8fd9\u4e2a\u82df\u8bc1\u660e\u5361\u4e86\u591a\u4e45\uff0c\u6700\u540e\u8fd8\u662f\u770b\u9898\u89e3\u624d\u4f1a\u7684\u3002\u3002\u3002",
        "postTime": 1628510700,
        "uid": 141485,
        "name": "A_Sunny_Day",
        "ccfLevel": 0,
        "title": "POI 2010 MOT-Monotonicity 2"
    },
    {
        "content": "\u5c0f\u6e23\u6e23\u6765\u5206\u4eab\u4e00\u4e0b\u672c\u4eba\u7684\u601d\u8def\n## \u601d\u8def\n\n\u5b9a\u4e49f[i]\u4e3a\u5904\u7406\u5230\u7b2ci\u4f4d\uff0c\u6240\u5f97\u5339\u914d\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6839\u636ef[i]\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5b83\u540e\u9762\u8981\u8ddf\u7684\u7b26\u53f7\uff08\u53ef\u4ee5\u7528\u7b26\u53f7\u586b\u6ee1\uff0c\u907f\u514d\u4e00\u4e9b\u53d6\u6a21\u8fd0\u7b97\uff09\uff0c\u5bf9\u4e8ei\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2ai\u524d\u9762\u7684j\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u90a3\u4e48$n^2$\u7684\u505a\u6cd5\u5c31\u5f88\u5bb9\u6613\u80fd\u5199\u51fa\u6765\u4e86\n### $n^2$\u505a\u6cd5\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=20000+10;\nint f[maxn],a[maxn];\nchar op[100+10];\nint sta[maxn],top,ans,id;\nint path[maxn];\nvoid print(int id){\n    if(id==0)return;\n    print(path[id]);\n    printf(\"%d \",a[id]);\n}\nint main(){\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=1;i<=k;i++){\n        scanf(\" %c\",&op[i]);\n    }\n    f[1]=ans=id=1;\n    for(int i=2;i<=n;i++){\n        f[i]=1;\n        for(int j=1;j<i;j++){\n            char ch=op[(f[j]-1)%k+1];\n            if((ch=='>'&&a[j]>a[i])||(ch=='<'&&a[j]<a[i])||(ch=='='&&a[j]==a[i])){\n                if(f[i]<f[j]+1){\n                    f[i]=f[j]+1;\n                    path[i]=j;\n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(ans<f[i]){\n            ans=f[i];\n            id=i;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    print(id);\n}\n\n```\n### \u4f18\u5316\n\u4e0d\u8fc7\u6839\u636e\u8fd9\u9053\u9898\u7684\u6570\u636e\uff0c$n^2$\u663e\u7136\u662f\u8fc7\u4e0d\u4e86\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u4f18\u5316\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u4e0b\u9762\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u505a\u6cd5\n\n* \u7ef4\u62a4\u4e09\u68f5\u7ebf\u6bb5\u6811\uff08\u8c8c\u4f3c\u4e24\u68f5\u4e5f\u53ef\u4ee5\uff09\uff0c\u5206\u522b\u7ef4\u62a4\u540e\u9762\u8be5\u63a5 =\uff08root1\u4e3a\u6839\uff09\uff0c<\uff08root2\u4e3a\u6839\uff09, >\uff08root3\u4e3a\u6839\uff09 \u7684\u4f4d\u7f6e\n\n* insert \u6839\u636e\u5f53\u524d\u7684f[i]\u6c42\u51fa\u4e0b\u4e00\u4e2a\u7b26\u53f7\u8be5\u63a5\u4ec0\u4e48\uff0c\u7136\u540e\u653e\u5230\u76f8\u5e94\u7684\u7ebf\u6bb5\u6811\u91cc\u9762\n\n--->\u540e\u9762\u63a5\u201d=\u201c, insert(root1,1,1e6,i,f[i]);\n\n--->\u540e\u9762\u63a5\u201c<\u201d, insert(root2,1,1e6,i,f[i]);\n\n--->\u540e\u9762\u63a5\u201c>\u201d, insert(root3,1,1e6,i,f[i]);\n\n* query  \u5206\u522b\u5728\u4e09\u68f5\u7ebf\u6bb5\u6811\u4e2d\u627e\u4e00\u4e2a\u7b26\u5408\u7b26\u53f7\u7684\u7684\u6700\u5927f[j]\uff0c\u6bd4\u5982\u5728\u5c0f\u4e8e\u7684\u6811\u4e2d\u627e\u533a\u95f4[1,a[i]-1]]\u4e2d\u7684f\u6700\u5927\u503c\uff0c\u5e76\u8fd4\u56de\u4f4d\u7f6e\uff08\u8fd9\u91cc\u5c31\u662f\u4f18\u5316\u6240\u5728\uff0c\u5728\u67e5\u627e\u6700\u4f18j\u65f6\u53d8\u6210\u4e86$log$\u7ea7\u522b\uff09\uff0c\u56e0\u4e3a\u8981\u8bb0\u5f55\u8def\u5f84\uff0c\u6240\u4ee5\u6211\u4eec\u8fd4\u56de\u503c\u4e3a\u4f4d\u7f6e\uff08\u6709\u4e86\u4f4d\u7f6e\u641e\u5565\u4e0d\u884c\uff09\uff0c\u4f46\u662f\u8981\u4ee5f\u503c\u4e3a\u6807\u51c6\uff0c\u51b3\u5b9a\u8fd4\u56de\u7684\u662f\u54ea\u4e2a\u4f4d\u7f6e\n\n--->\u5728\u7b49\u4e8e\u7684\u6811\u4e2d\u53d6f\u503c\u6700\u5927\u5bf9\u5e94\u7684\u4f4d\u7f6e query(root1,1,1e6,a[i],a[i]);\n\n--->\u5728\u5c0f\u4e8e\u7684\u6811\u4e2d\u53d6f\u503c\u6700\u5927\u5bf9\u5e94\u7684\u4f4d\u7f6e query(root2,1,1e6,1,a[i]-1);\n\n--->\u5728\u5927\u4e8e\u7684\u6811\u4e2d\u53d6f\u503c\u6700\u5927\u5bf9\u5e94\u7684\u4f4d\u7f6e query(root3,1,1e6,a[i]+1,1e6);\n\n\u5bf9\u4e8e\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4tree[i]\uff08f\u503c\uff09\uff0cpos[i] (\u5728\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e)\uff0cls[i] (\u5de6\u513f\u5b50)\uff0crs[i] (\u53f3\u513f\u5b50),\u7ebf\u6bb5\u6811\u5f00\u503c\u57df\u5e94\u8be5\u6bd4\u8f83\u597d\u7ef4\u62a4\u3002\n\n\n## \u9644\u4e0a\u4ee3\uff08\u4e11\uff09\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5e5 + 10;\nint f[maxn * 21], a[maxn];\nint nodecnt, root1, root2, root3, ans, id, poss;\nint path[maxn], ls[maxn * 21], rs[maxn * 21], tree[maxn * 21], pos[maxn * 21];\nchar op[maxn];\ninline int read() {\n    int s = 0, w = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            w = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();\n    return s * w;\n}\n\nvoid print(int id) {\n    if (id == 0)\n        return;\n    print(path[id]);\n    printf(\"%d \", a[id]);\n}\nvoid up(int rt) {\n    if (tree[ls[rt]] < tree[rs[rt]]) {\n        tree[rt] = tree[rs[rt]];\n        pos[rt] = pos[rs[rt]];\n    } else {\n        tree[rt] = tree[ls[rt]];\n        pos[rt] = pos[ls[rt]];\n    }\n}\nvoid insert(int &rt, int l, int r, int val, int p) {\n    if (rt == 0)\n        rt = ++nodecnt;\n    if (l == r) {\n        if (tree[rt] < val) {\n            pos[rt] = p;\n            tree[rt] = val;\n        }\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if (a[p] <= mid)\n        insert(ls[rt], l, mid, val, p);\n    else\n        insert(rs[rt], mid + 1, r, val, p);\n    up(rt);\n    return;\n}\nint query(int rt, int l, int r, int s, int t) {\n    if (l >= s && r <= t)\n        return pos[rt];\n    if (s > t || !rt)\n        return 0;\n    int mid = (l + r) >> 1;\n    int ans = 0, poss = 0;\n    if (s <= mid) {\n        int lpos = query(ls[rt], l, mid, s, t);\n        if (ans < f[lpos]) {\n            ans = f[lpos];\n            poss = lpos;\n        }\n    }\n    if (t > mid) {\n        int rpos = query(rs[rt], mid + 1, r, s, t);\n        if (ans < f[rpos]) {\n            ans = f[rpos];\n            poss = rpos;\n        }\n    }\n    return poss;\n}\nint main() {\n    int n, k;\n    n = read(), k = read();\n    for (int i = 1; i <= n; ++i) a[i] = read(), f[i] = 1;\n    for (int i = 1; i <= k; ++i) scanf(\" %c\", &op[i]);\n    for (int i = k + 1; i < n; ++i) op[i] = op[(i - 1) % k + 1];\n    for (int i = 1, poss; i <= n; ++i) {\n        poss = query(root1, 1, 1e6, a[i], a[i]);\n        if (f[i] < f[poss] + 1) {\n            f[i] = f[poss] + 1;\n            path[i] = poss;\n        }\n        poss = query(root2, 1, 1e6, 1, a[i] - 1);\n        if (f[i] < f[poss] + 1) {\n            f[i] = f[poss] + 1;\n            path[i] = poss;\n        }\n        poss = query(root3, 1, 1e6, a[i] + 1, 1e6);\n        if (f[i] < f[poss] + 1) {\n            f[i] = f[poss] + 1;\n            path[i] = poss;\n        }\n        if (ans < f[i]) {\n            ans = f[i];\n            id = i;\n        }\n        if (op[f[i]] == '=')\n            insert(root1, 1, 1e6, f[i], i);\n        else if (op[f[i]] == '<')\n            insert(root2, 1, 1e6, f[i], i);\n        else if (op[f[i]] == '>')\n            insert(root3, 1, 1e6, f[i], i);\n    }\n    printf(\"%d\\n\", ans);\n    print(id);\n    return 0;\n}\n\n\n```\n\uff08\u6c42\u7ba1\u7406\u5458\u5927\u5927\u5ba1\u6838\u901a\u8fc7\uff09",
        "postTime": 1595760762,
        "uid": 345927,
        "name": "sodak",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3506 \u3010[POI2010]MOT-Monotonicity 2\u3011"
    },
    {
        "content": "### \u5b89\u5229\u535a\u5ba2$\\Longrightarrow\\Longrightarrow\\Longrightarrow$[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/y2823774827y/p/10259020.html)\n\n\u7b2c\u4e00\u6b21\u5207\u6389\u6ca1\u9898\u89e3\u7684\u9898$qwq$\n\n\u9996\u5148\u786e\u5b9a$a_i$\u7684\u4f4d\u7f6e\u540e\u663e\u7136\u5c31\u80fd\u786e\u5b9a$a_{i+1}$\u7684\u4f4d\u7f6e\uff0c\u5efa\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4$<,=,>$\u4e09\u79cd\u60c5\u51b5\n\n\u8003\u8651\u786e\u5b9a$a_{i}$\u7684\u4f4d\u7f6e\n1. \u5728$[min,a_{i}-1]$\u4e2d\u627e$<$\u7684\u6700\u5927\u503c\n\n1. \u5728$[a_{i}+1,max]$\u4e2d\u627e$>$\u7684\u6700\u5927\u503c\n\n1. \u627e$[a_{i},a_{i}]$\u7684$=$\u7684\u503c(\u5176\u5b9e\u4e0d\u7528\u7ebf\u6bb5\u6811\uff0c\u5f00\u4e2a\u6570\u7ec4\u5c31\u80fd\u7ef4\u62a4)\n\n1. \u6bd4\u8f83\u4e09\u4e2a\u503c\uff0c\u5047\u5b9a\u6700\u5927\u503c\u4e3a$val$\uff0c\u5219\u66f4\u65b0$[a_{i},a_{i}]$\u4e2d$s[(val-1)\\%k+1]$\u7684\u503c\uff08\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u53ea\u66f4\u65b0\u4e00\u4e2a\u7b26\u53f7\u7684\u503c\u5c31\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\uff1f\uff09\n\n\u8fd9\u9898\u7684\u96be\u70b9\u89e3\u51b3\u4e86\uff0c\u81f3\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u5982\u679c\u4f60\u505a\u591a\u4e86\u8fd9\u6837\u7684\u9898\u81ea\u7136\u80fd\u60f3\u5230\u5f00\u4e2a\u6570\u7ec4\u5b58**\u6bcf\u6b21**\u7684\u72b6\u6001\uff0c\u7136\u540e\u518d\u5f00\u4e2a\u6570\u7ec4\u5b58\u524d\u9a71\n\n\u4ee3\u7801\u5199\u5f97\u6bd4\u8f83\u4e71\uff0c\u91cd\u8f7d\u8fd9\u4e9b\u5927\u5bb6\u81ea\u5df1\u52a0\u5427\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef int LL;\nconst LL maxn=1500009;\ninline LL Read(){\n\tLL x(0),f(1); char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=-1; c=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t    x=(x<<3)+(x<<1)+c-'0',c=getchar();\n\treturn x*f;\n}\nstruct node{\n\tLL mx,mxi,tot;\n};\nstruct Tree{\n\tnode t[4];\n\tLL son[2];\n}tree[maxn];\nLL nod;\nnode Query(LL now,LL l,LL r,LL lt,LL rt,LL opt){\n\tif(!now||lt>rt)\n\t    return (node){0,0,0};\n\tif(lt<=l&&rt>=r)\n\t    return tree[now].t[opt];\n\tnode ans=(node){0,0,0};\n\tLL mid=(l+r)>>1;\n\tif(lt<=mid)\n\t\tans=Query(tree[now].son[0],l,mid,lt,rt,opt);\n\tif(rt>mid){\n\t\tnode tmp=Query(tree[now].son[1],mid+1,r,lt,rt,opt);\n\t    if(ans.mx<tmp.mx)\n\t\t    ans=tmp;\n\t}\n\treturn ans;\n}\ninline void Update(LL now,LL opt){\n\tLL son0(tree[now].son[0]),son1(tree[now].son[1]);\n\tif(tree[son0].t[opt].mx>tree[son1].t[opt].mx)\n\t\ttree[now].t[opt]=tree[son0].t[opt];\n\telse\n\t\ttree[now].t[opt]=tree[son1].t[opt];\n}\ninline void Change(LL &now,LL l,LL r,LL opt,LL goal,LL val,LL tot){\n\tif(!now){\n\t\tnow=++nod;\n\t\tif(l==r)\n\t        for(LL i=1;i<=3;++i)\n\t\t        tree[now].t[i]=(node){0,l,0};\n\t}\n\tif(l==r){\n\t\tif(tree[now].t[opt].mx<val)\n\t\t    tree[now].t[opt].mx=val,\n\t\t\ttree[now].t[opt].tot=tot;\n\t\treturn;\n\t}\n\tLL mid=(l+r)>>1;\n\tif(goal<=mid)\n\t    Change(tree[now].son[0],l,mid,opt,goal,val,tot);\n\telse\n\t    Change(tree[now].son[1],mid+1,r,opt,goal,val,tot);\n\tUpdate(now,opt);\n}\nLL n,k,root,ans,last,_min,_max;\nLL pre[maxn],a[maxn],c[maxn],ch[maxn],w[maxn];\nvoid Write(LL now){\n\tif(!now)\n\t    return;\n\tWrite(pre[now]);\n\tprintf(\"%d \",w[now]);\n}\nstruct LS{\n\tLL id,val;\n}b[maxn];\ninline bool cmp1(LS x,LS y){\n\treturn x.val<y.val;\n}\nint main(){\n\tn=Read(),k=Read();\n\tfor(LL i=1;i<=n;++i)\n\t    b[i]=(LS){i,Read()},\n\t\tc[i]=b[i].val;\n\tsort(b+1,b+1+n,cmp1);\n\tLL num(0);\n\tfor(LL i=1,last=-1;i<=n;++i){\n\t\tif(last!=b[i].val)\n\t\t    last=b[i].val,\n\t\t\t++num;\n\t\ta[b[i].id]=num;\n\t}\n\t_min=1,_max=num;\n\t\n\tfor(LL i=1;i<=k;++i){\n\t    char c;\n\t    scanf(\" %c\",&c);\n\t    if(c=='<')\n\t        ch[i]=1;\n\t    else if(c=='>')\n\t        ch[i]=3;\n\t    else\n\t        ch[i]=2;\n\t}\n\tLL tot(0),last;\n\tfor(LL i=1;i<=n;++i){\n\t\tnode ans1=Query(root,_min,_max, _min,a[i]-1,1),\n\t\t     ans2=Query(root,_min,_max, a[i],a[i]  ,2),\n\t\t     ans3=Query(root,_min,_max, a[i]+1,_max,3);\n\t\t++ans1.mx,++ans2.mx,++ans3.mx;\n\t\t\n\t\tif(ans1.mx<ans2.mx) ans1=ans2;\n\t\tif(ans1.mx<ans3.mx) ans1=ans3;\n\t\t\n\t\tLL sum(ans1.mx);\n\t\tw[++tot]=c[i],\n\t\tpre[tot]=ans1.tot,\n\t\tChange(root,_min,_max,ch[(sum-1)%k+1],a[i],sum,tot);\n\t\tif(sum>ans)\n\t\t    ans=sum,\n\t\t    last=tot;\n\t}\n\tprintf(\"%d\\n\",ans);\n\tWrite(last);\n\treturn 0;\n}/*\n20 5\n2 4 3 1 3 5 3 8 9 2 1 20 3 5 9 1 2 4 5 3\n< > = < >\n\n11\n2 4 3 3 5 3 9 1 1 4 3\n*/\n```",
        "postTime": 1547262312,
        "uid": 88804,
        "name": "y2823774827y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3506 \u3010[POI2010]MOT-Monotonicity 2\u3011"
    }
]