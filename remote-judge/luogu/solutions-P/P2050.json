[
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n## \u5efa\u56fe\u6a21\u578b\n\n\u8fd9\u9898\u5c31\u662fP2053\u4fee\u8f66\u7684\u6570\u636e\u52a0\u5f3a\u7248\uff0c\u90a3\u4e48\u5efa\u56fe\u65b9\u5f0f\u4e5f\u5dee\u4e0d\u591a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u83dc\u5efa\u7acb\u4e00\u4e2a\u70b9\uff0c\u6e90\u70b9\u5411\u5176\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u9700\u6c42\u91cf\u8d39\u7528\u4e3a\uff10\u7684\u8fb9\u3002\n\n\u7136\u540e\u518d\u5efa\u4e00\u5c42\u70b9\uff0c\u5206\u522b\u8868\u793a\u7b2cj\u4e2a\u53a8\u5e08\u505a\u7b2c\u5012\u6570i\u9053\u83dc\u3002\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\uff11\u8d39\u7528\u4e3a\uff10\u7684\u8fb9\u3002\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u70b9\u8868\u793a\u7b2cj\u4e2a\u53a8\u5e08\u505a\u7b2c\u5012\u6570k\u9053\u83dc\uff0c\u90a3\u4e48\u5bf9\u4e8e\u83dci\uff0c\u5411\u5176\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\uff11\uff0c\u8d39\u7528\u4e3ak\u00d7a(i,j)\u7684\u8fb9\u3002\u8fd9\u8868\u793a\u7b2cj\u4e2a\u53a8\u5e08\u505a\u7684\u5012\u6570\u7b2ck\u9053\u83dc\u662f\u83dci\uff0c\u90a3\u4e48\u5c31\u8981\u505aa(i,j)\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\uff0c\u6709k\u4e2a\u4eba\u8981\u7b49\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\u3002\n\n\u610f\u4f1a\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6a21\u578b\u80fd\u89e3\u51b3\u201c\u540c\u65f6\u505a\u201d\u95ee\u9898\u3002\n\n## \u4f18\u5316\n\n\u7531\u4e8e\u6b64\u9898\u6570\u636e\u91cf\u5f88\u5927\uff0c\u628a\u6240\u6709\u8fb9\u8fde\u5b8c\u540e\u518d\u8dd1\u8d39\u7528\u6d41\u662f\u4e00\u5b9a\u4f1aGG\u7684\uff0860\u5206\uff09\n\n\u7531\u4e8e\u6211\u4eec\u8dd1\u4e00\u6b21spfa\u53ea\u80fd\u627e\u51fa\u4e00\u6b21\u589e\u5e7f\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6682\u65f6\u4e0d\u8fde\u4e0d\u9700\u8981\u7684\u8fb9\u3002\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u628a\u6240\u6709\u53a8\u5e08\u505a\u5012\u6570\u7b2c\uff11\u9053\u83dc\u4e0e\u6240\u6709\u83dc\u8fde\u597d\uff0c\u7136\u540e\u627e\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u8fd9\u6761\u589e\u5e7f\u8def\u4e0a\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u70b9\uff0c\u8868\u793a\u7b2cj\u4e2a\u53a8\u5e08\u505a\u5012\u6570\u7b2c\uff11\u9053\u83dc\uff0c\u4e8e\u662f\u6211\u4eec\u6dfb\u52a0\u70b9\uff08\u7b2cj\u4e2a\u53a8\u5e08\u505a\u5012\u6570\u7b2c\uff12\u9053\u83dc\uff09\uff0c\u4e0e\u6c47\u70b9\u548c\u6240\u6709\u83dc\u8fde\u8fb9\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u610f\u4f1a\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u6bcf\u6b21spfa\u7684\u65f6\u5019\uff0c\u9700\u8981\u7684\u8fb9\u90fd\u88ab\u8fde\u4e0a\u4e86\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005,M=1e7+5,inf=0x3f3f3f3f;//\u8fb9\u4e00\u5b9a\u8981\u5f00\u5927\nint m,n,tot=1,sum,S,T,ans;\nint p[44],a[44][105],dish[N],cook[N];\nint h[N],ne[M],to[M],flow[M],w[M],dis[N],liu[N],pre[N],inq[N];\nvoid add(int x,int y,int z,int c) {\n    to[++tot]=y,ne[tot]=h[x],h[x]=tot,flow[tot]=z,w[tot]=c;\n    to[++tot]=x,ne[tot]=h[y],h[y]=tot,flow[tot]=0,w[tot]=-c;\n}\nint bfs() {//\u8d39\u7528\u6d41\uff1a\u4e3b\u5e72\u90e8\u5206\n    for(int i=S;i<=T;++i) dis[i]=inf,inq[i]=pre[i]=0;\n    queue<int>q;int x;\n    liu[S]=inf,dis[S]=0,q.push(S);\n    while(!q.empty()) {\n        x=q.front(),q.pop(),inq[x]=0;\n        for(int i=h[x];i;i=ne[i])\n            if(flow[i]>0&&dis[x]+w[i]<dis[to[i]]) {\n                dis[to[i]]=dis[x]+w[i],pre[to[i]]=i;\n                liu[to[i]]=min(liu[x],flow[i]);\n                if(!inq[to[i]]) inq[to[i]]=1,q.push(to[i]);\n            }\n    }\n    if(!pre[T]) return 0;\n    x=T;\n    while(x!=S) {\n        int kl=pre[x];\n        flow[kl]-=liu[T],flow[kl^1]+=liu[T];\n        ans+=w[kl]*liu[T],x=to[kl^1];\n    }\n    return 1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i) scanf(\"%d\",&p[i]),sum+=p[i];\n    for(int i=1;i<=n;++i) add(0,i+sum*m,p[i],0);\n    S=0,T=sum*m+n+1;\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n        scanf(\"%d\",&a[i][j]),add(i+sum*m,(j-1)*sum+1,1,a[i][j]);//\u9884\u5148\u52a0\u4e0a\u6240\u6709\u83dc\u88ab\u53a8\u5e08\u5012\u6570\u7b2c\uff11\u4e2a\u505a\n    for(int i=1;i<=m;++i) add((i-1)*sum+1,T,1,0);//\u9884\u5148\u52a0\u4e0a\u6240\u6709\u53a8\u5e08\u505a\u5012\u6570\u7b2c\uff11\u9053\u83dc\n    for(int i=1;i<=m;++i)\n        for(int j=1;j<=sum;++j) {\n            int tmp=(i-1)*sum+j;\n            dish[tmp]=j,cook[tmp]=i;\n            //\u8fd9\u662f\u672c\u849f\u84bb\u4e3a\u4e86\u65b9\u4fbf\u89e3\u7801\u800c\u5199\u7684\uff0c\u8868\u793atmp\u8fd9\u4e2a\u70b9\u4ee3\u8868cool[tmp]\u505a\u5012\u6570\u7b2cdish[tmp]\u9053\u83dc\n        }\n    while(bfs()) {\n        int tmp=to[pre[T]^1];\n        add(tmp+1,T,1,0);//\u6dfb\u52a0\u65b0\u7684\u8fb9\uff0c\u8bf4\u660e\u89c1\u4e0a\n        for(int i=1;i<=n;++i)\n            add(i+m*sum,tmp+1,1,a[i][cook[tmp]]*(dish[tmp]+1));\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1512877849,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3P2050\u3010\u7f8e\u98df\u8282\u3011\u3000\u8d39\u7528\u6d41"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684**\u52a8\u6001\u52a0\u70b9**\u7684\u8d39\u7528\u6d41\u9898\u76ee\u3002\n\n\u662f\u8fd9\u9053\u9898\u76ee\uff1a[ P2053 [SCOI2007]\u4fee\u8f66](https://www.luogu.com.cn/problem/P2053) \u7684\u52a0\u5f3a\u7248\u3002\n\n---\n\n## \u5efa\u6a21\uff1a\n\n\u6211\u4eec\u5148\u6309\u90a3\u9053\u9898\u7684\u601d\u8def\uff1a**\u628a\u201c\u53a8\u5e08\u201d\u5206\u5c42**\u3002\n\n\n\n\u5982\u679c\u7b2c $j$ \u4e2a\u53a8\u5e08\u5148\u540e\u505a\u4e86\u7b2c $a_1,a_2,\\cdots,a_w$ \u79cd\u83dc\uff0c\u90a3\u4e48\u7b49\u5f85\u65f6\u95f4\u4e4b\u548c\u5c31\u662f\uff1a\n\n$$t_{a_1,j}w+t_{a_2,j}(w-1)+\\cdots+t_{a_w,j}$$\n\n\u7b2c $k$ \u9879\u7684\u610f\u601d\u662f\u505a\u4e86\u7b2c $k$ \u9053\u83dc\u8ba9\u540e\u9762\u7684 $w-k$ \u9053\u83dc\u6bcf\u4e2a\u90fd\u7b49\u4e86 $t_{a_k,j}$ \u7684\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8ba9\u7b2c $j$ \u4e2a\u53a8\u5e08\u7684\u7b2c $w$ \u5c42\u8868\u793a\u7b2c $j$ \u4e2a\u53a8\u5e08\u505a\u4e86\u5012\u6570 $w$ \u9053\u83dc\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u628a\u5b83\u7528 $(j,w)$ \u8868\u793a\u3002$(w\\in [1,p])$\n\n\u5b83\u4e0e\u7b2c $i$ \u9053\u83dc\u8fde\u8fb9\u5c31\u8868\u793a\u7b2c $j$ \u4e2a\u53a8\u5e08\u505a\u7684\u5012\u6570\u7b2c $t$ \u9053\u83dc\u662f\u7b2c $i$ \u79cd\u83dc\u3002\n\n\u8bbe\u6e90\u70b9\u4e3a $S$ \uff0c\u6c47\u70b9\u4e3a $T$ \uff0c\u83dc\u7684\u7f16\u53f7\u4e3a $1\\sim n$\uff0c\u201d\u5206\u5c42\u53a8\u5e08\u201c \u5c31\u7528\u4e0a\u9762\u8bf4\u7684 $(j,w)$ \u8868\u793a\u3002\n\n- \u4ece\u6e90\u70b9\u5411\u6bcf\u9053\u83dc\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $p_i$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a\u7b2c $i$ \u4e2d\u83dc\u9700\u8981\u505a $p_i$ \u9053\u3002\n\n- \u6bcf\u4e2a $(j,w)$ \u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a\u7b2c $j$ \u4e2a\u53a8\u5e08\u505a\u5012\u6570\u7b2c $w$ \u9053\u83dc\u3002\n\n- \u6bcf\u9053\u83dc\u5411\u6bcf\u4e2a $(j,w)$ \u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $t_{i,j}\\times w$ \u7684\u8fb9\uff0c\u8868\u793a\u7b2c $i$ \u79cd\u83dc\u7684\u5176\u4e2d\u4e00\u9053\u662f\u7b2c $j$ \u4e2a\u53a8\u5e08\u505a\u7684\u5012\u6570\u7b2c $w$ \u9053\u83dc\uff0c\u6839\u636e\u5f00\u5934\u7ed9\u51fa\u7684\u90a3\u4e2a\u5f0f\u5b50\u53ef\u77e5\uff0c\u5b83\u8d21\u732e\u7684\u8d39\u7528\u662f $t_{i,j}\\times w$\u3002\n\n\u8fd9\u6837\u8fde\u4e3a\u4ec0\u4e48\u6b63\u786e\u5462\uff1f\n\n\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u8bbe\u7b2c $j$ \u4e2a\u53a8\u5e08\u505a\u4e86 $w_j$ \u9053\u83dc\uff0c\u90a3\u4e48\u88ab\u7528\u5230\u7684\u70b9\u4e00\u5b9a\u662f $(j,1)\\sim (j,w_j)$ \u8fde\u7eed\u7684\u3002\n\n\u5047\u8bbe\u662f\u65ad\u7eed\u7684\uff0c\u7531\u4e8e\u4e2d\u95f4\u6ca1\u6709\u88ab\u7528\u5230\u7684\u5c42\u9700\u8981\u7684\u8d39\u7528\u4e00\u5b9a\u6bd4\u540e\u9762\u7684\u5c42\u6240\u9700\u8981\u7684\u8d39\u7528\u5c0f\uff0c\u6240\u4ee5\u65ad\u7eed\u7684\u60c5\u51b5\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u3002\n\n\u8fd9\u6837\u505a\u70b9\u6570\u7684\u89c4\u6a21\u662f $\\mathcal{O}(mp+n)$ \u7684\uff0c\u8fb9\u6570\u7684\u89c4\u6a21\u662f $\\mathcal{O}(nmp)$ \u7684\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u5efa\u56fe\uff0c\u5c31\u80fd\u83b7\u5f97 $60pts$ \u7684\u597d\u6210\u7ee9\uff01-> [code](https://www.luogu.com.cn/paste/sd9gtsy9)\n\n---\n\n## \u4f18\u5316\u5efa\u56fe\uff1a\n\n\u5176\u5b9e\u6839\u636e\u4e0a\u9762\u7684\u5efa\u6a21\u53ef\u4ee5\u53d1\u73b0\uff0c\u597d\u591a $(j,w)$ \u7684\u70b9\u662f\u6ca1\u6709\u7528\u5230\u7684\u3002\n\n\u6839\u636e\u4e0a\u8ff0\u7684\u8d2a\u5fc3\u8bc1\u660e\u53ef\u77e5\uff1a\u88ab\u7528\u5230\u7684\u4e00\u5b9a\u662f\u4ece $(j,1)$ \u5f00\u59cb\u7684\u8fde\u7eed\u7684\u51e0\u4e2a\u5c42\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u4e00\u8fb9\u8dd1\u6d41\u4e00\u8fb9\u52a0\u70b9\u5462\uff1f\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u7701\u53bb\u5f88\u591a\u65e0\u7528\u7684\u70b9\u3002\n\n\u6211\u4eec\u8bbe\u7b2c $j$ \u4e2a\u53a8\u5e08\u5df2\u7ecf\u52a0\u5230\u4e86\u7b2c $top_j$ \u5c42\u3002\u82e5\u518d\u4e00\u6b21\u8dd1\u6d41\u4e4b\u540e\uff0c$(j,top_j)$ \u88ab\u7528\u6389\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u628a $(j,top_j+1)$ \u52a0\u8fdb\u56fe\u91cc\u9762\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u70b9\u6570\u7684\u89c4\u6a21\u5c31\u964d\u5230\u4e86 $\\mathcal{O}(n+m+p)$\uff0c\u8fb9\u6570\u7684\u89c4\u6a21\u964d\u5230\u4e86 $\\mathcal{O}(np)$\u3002\n\n**\u73b0\u5728\u7684\u91cd\u70b9\u5c31\u662f\u600e\u4e48\u5224\u65ad $(j,top_j)$ \u662f\u5426\u88ab\u8dd1\u8fc7\u4e86\uff1a**\n\n\u6211\u770b\u5927\u90e8\u5206\u4eba\u5199\u7684\u90fd\u662fKM\uff0c\u6bcf\u6b21\u53ea\u589e\u5e7f\u4e00\u6761\u8def\uff0c\u8fd9\u6837\u5f88\u5bb9\u6613\u5224\u65ad\u88ab\u7528\u6389\u7684\u201d\u5206\u5c42\u53a8\u5e08\u201c \u7684\u4f4d\u7f6e\u3002\n\n\u5176\u5b9e\uff0c\u591a\u8def\u589e\u5e7f\u7684Dinic\u4e5f\u5f88\u597d\u5224\u65ad\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n1.\u76f4\u63a5\u770b\u4e0e\u6c47\u70b9 $T$ \u76f8\u8fde\u7684\u8fb9\u7684\u6d41\u662f\u5426\u88ab\u8dd1\u6ee1\u3002\n\n2.\u76f4\u63a5\u770b $(j,top_j)$ \u662f\u5426\u88ab\u67d0\u4e00\u6761\u589e\u5e7f\u8def\u7ecf\u8fc7\u3002\n\n\u7b2c2\u79cd\u5b9e\u73b0\u8d77\u6765\u66f4\u7b80\u5355\uff0c\u5e76\u4e14\u5e38\u6570\u5c0f\uff0c\u76f4\u63a5\u5728\u8dd1\u6d41\u7684\u65f6\u5019\u6253\u6807\u8bb0\u5c31\u597d\u4e86\u3002\n\n**\u6ce8\u610f\uff1a** \u4e0d\u80fd\u7c7b\u4f3c\u4e8c\u5206\u56fe\u4e00\u6837\u7528\u7ecf\u8fc7 $(j,top_j)$ \u7684\u6d41\u7684\u8d70\u5411\u53bb\u5224\u65ad\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u589e\u5e7f\u8def\u6ee1\u8db3\u7ecf\u8fc7 $(j,top_j)$ \u4f46\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e0d\u662f $T$\u3002\u6240\u4ee5\u65e0\u8bba\u8fd9\u6761\u589e\u5e7f\u8def\u7684\u8d70\u5411\u5982\u4f55\uff0c\u53ea\u8981\u7ecf\u8fc7\u4e86 $(j,top_j)$ \u90a3\u4e48 $(j,top_j)$ \u4e00\u5b9a\u88ab\u7528\u8fc7\u3002\n\n~~\u8fd9\u6837\u8bf4\u7684\u8bdd\u662f\u4e0d\u662f\u65b9\u6cd51\u66f4\u597d\u7406\u89e3\u5462qwq~~\n\nDinic\u8dd1\u8d39\u7528\u6d41\u8d85\u5feb\u7684\u5462\uff01\u5f00O2\u65f6\u5019\u8fd8\u4e0d\u5230 1.3s\uff01 [\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/30833129)\n\n(\u6211\u5f88\u5947\u602a\u4e3a\u4ec0\u4e48\u73b0\u5728\u5927\u90e8\u5206\u4eba\u8dd1\u8d39\u7528\u6d41\u559c\u6b22\u7528KM\uff09\n\n***code:***\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\n#define N 103234\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint m,n,cnt,vis[N],dis[N],c[55][105],p[N],sum,top[N],nxt[N];\nint head[N],mincost,S,T;\nqueue<int> q;\nstruct Edge{\n\tint to,nxt,val,cost;\n}edge[N<<5];\ninline void add(int a,int b,int c,int d){\n\t++cnt;\n\tedge[cnt].to=b;\n\tedge[cnt].val=c;\n\tedge[cnt].cost=d;\n\tedge[cnt].nxt=head[a];\n\thead[a]=cnt;\n}\nbool SPFA(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(S);\n\tdis[S]=0;\n\tvis[S]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].to;\n\t\t\tif(edge[i].val&&dis[v]>dis[u]+edge[i].cost){\n\t\t\t\tdis[v]=dis[u]+edge[i].cost;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v),vis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]<inf;\n}\nint dfs(int u,int limit){\n\tif(u==T)return limit;\n\tint flow=0;\n\tvis[u]=1;\n\tfor(int i=head[u];i&&limit;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(edge[i].val&&!vis[v]&&dis[v]==dis[u]+edge[i].cost){\n\t\t\tint k=dfs(v,min(limit,edge[i].val));\n\t\t\tif(k>0){\n\t\t\t\tedge[i].val-=k;\n\t\t\t\tedge[i^1].val+=k;\n\t\t\t\tlimit-=k;\n\t\t\t\tflow+=k;\n\t\t\t\tmincost+=k*edge[i].cost;\n\t\t\t\tnxt[u]=v;\n\t\t\t}\n\t\t}\n\t}\n\tif(!flow)dis[u]=inf;\n\tvis[u]=0;\n\treturn flow;\n}\ninline int ID(int x,int y){\n\treturn (x-1)*sum+y;\n}\nint Dinic(){\n\tint maxflow=0;\n\twhile(SPFA()){\n\t\tmaxflow+=dfs(S,inf);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(nxt[n+ID(j,top[j])]&&top[j]<sum){//\u5224\u65ad\u662f\u5426\u88ab\u4e00\u6761\u589e\u5e7f\u8def\u7ecf\u8fc7\n\t\t\t\t++top[j];\n\t\t\t\tint now=n+ID(j,top[j]);\n\t\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\t\tadd(i,now,1,c[i][j]*top[j]);\n\t\t\t\t\tadd(now,i,0,-c[i][j]*top[j]);\n\t\t\t\t}\n\t\t\t\tadd(now,T,1,0);\n\t\t\t\tadd(T,now,0,0);\n\t\t\t}\n\t\t} \n\t}\n\treturn maxflow;\n}\nint main(){\n\tn=read(),m=read(),cnt=1;\n\tfor(int i=1;i<=n;i++){\n\t\tp[i]=read();sum+=p[i];\n\t}\n\tS=m*sum+n+1,T=m*sum+n+2;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tc[i][j]=read();\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadd(S,i,p[i],0),add(i,S,0,0);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tadd(i,n+ID(j,1),1,c[i][j]);\n\t\t\tadd(n+ID(j,1),i,0,-c[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\ttop[i]=1;\n\t\tadd(n+ID(i,1),T,1,0);\n\t\tadd(T,n+ID(i,1),0,0);\n\t}\n\tDinic();\n\tprintf(\"%d\\n\",mincost);\n\treturn 0;\n}\n\n```\n\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n\n\n\n",
        "postTime": 1582124775,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "# \u914d\u5408\u672c\u535a\u5ba2\u7684\u4e3e\u4f8b\u98df\u7528\u53e3\u611f\u66f4\u4f73\u3002\n\n~~\u4e00\u5f00\u59cb\u6807\u7a0b\u8d34\u9519\u4e86\uff0c\u611f\u8c22@guodong \u6307\u51fa~~\n\n**\u9898\u76ee\u63cf\u8ff0\uff1a**\n\n\u6709N\u4e2a\u53a8\u5e08M\u9053\u83dc\uff0c\u6bcf\u4e2a\u53a8\u5e08\u70e7\u7b2cI\u9053\u83dc\u8981C[I]\u5206\u949f\uff0c\u95ee\u6240\u4ee5\u83dc\u81f3\u5c11\u4e00\u5171\u7b49\u591a\u4e45\uff1f\n\n**\u9898\u89e3\uff1a**\n\n\u4e3a\u4e86\u505a\u8fc7\u7684\u65b9\u4fbf\u56de\u5fc6\u6240\u4ee5\u9898\u9762\u5199\u5f97\u5927\u6982\u8fd9\u6837\uff0c\u6709\u5f88\u591a\u5c0f\u7ec6\u8282\u8fd8\u8981\u8bfb\u8005\u81ea\u884c\u6ce8\u610f\u3002\n\n\u5148\u786e\u5b9a\u57fa\u672c\u6846\u67b6\uff1a\u4e00\u4e2a\u4eba\u5728\u4e0d\u540c\u7684\u72b6\u6001\u4e0b\u53ef\u4ee5\u505a\u4e0d\u540c\u83dc\uff0c\u4f46\u662f\u65f6\u95f4\u4f1a\u56e0\u4e3a\u4f60\u8d8a\u5f80\u540e\u505a\u800c\u7d2f\u52a0\uff0c\u8fd9\u5bb9\u6613\u8ba9\u4eba\u671b\u5206\u5c42\u56fe\u4e0a\u9760\uff0c\u4f46\u5177\u4f53\u505a\u6cd5\u53c8\u4e0d\u662f\u5f88\u6e05\u695a\u3002\u3002\n\n### \u6211\u4eec\u5148\u8003\u8651\u4e0d\u540c\u7684\u987a\u5e8f\u9020\u6210\u4e0d\u540c\u7684\u5f71\u54cd\uff1a\n\n\t\u5047\u8bbe\u6709\u4e09\u9053\u83dc1\uff0c2\uff0c3\uff1b\u6709\u4e00\u4f4d\u53a8\u5e08X\uff0c\u505a\u83dc\u65f6\u95f4\u5206\u522b\u4e3aC1,C2,C3\u3002\n\t\u82e5\u8fd9\u4f4d\u53a8\u5e08\u4ee5213\u987a\u5e8f\u505a\u83dc\uff0c\u5219\u603b\u8d21\u732e\u4e3aC2*3+C1*2+C3\uff1b\n\t\u82e5\u8fd9\u4f4d\u53a8\u5e08\u4ee5321\u987a\u5e8f\u505a\u83dc\uff0c\u5219\u603b\u8d21\u732e\u4e3aC3*3+C2*2+C1\uff1b\n\t....\n\u901a\u8fc7\u4ee5\u4e0a\u4f8b\u5b50\u5e94\u8be5\u5c31\u80fd\u60f3\u5230\uff0c\u8d8a\u5728\u524d\u9762\u505a\u7684\u83dc\u8d21\u732e\u8d8a\u591a\uff0c\u672c\u6587\u7ae0\u628a\u90a3\u4e2a\u7cfb\u6570\u5b9a\u4e49\u4e3a`\u65f6\u95f4\u6233`\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u65f6\u95f4\u6233`I`\u505a\u8981\u82b1\u8d39`C`\u7684\u83dc\u9020\u6210\u7684\u8d21\u732e\u4e3a`I*C`\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u65f6\u95f4\u6233\u5206\u5c42\u5566\uff01\n\n\n\u5176\u4ed6\u5efa\u56fe\u90fd\u662f\u5e38\u89c4\uff0c\u6211\u4eec\u8fde\u83dc\u7684\u65f6\u5019\u6ce8\u610f\u6d41\u91cf\u4e3a\u83dc\u7684\u6570\u91cf\u5373\u53ef\uff1b\u6211\u4eec\u5c06\u4e00\u4e2a\u53a8\u5e08\u62c6\u6210N\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u5728\u7b2ci\u4e2a\u65f6\u95f4\u6233\u7684\u53a8\u5e08\u3002\u6bcf\u4e2a\u53a8\u5e08\u90fd\u53ef\u4ee5\u5411\u6240\u6709\u83dc\u8fde\u8fb9\uff0c\u5bb9\u91cf1\uff0c\u7136\u540e\u8d39\u7528\u5c31\u662f`i*c[j]`\uff0c\u5747\u8fde\u5411\u8d85\u6c47\u3002\n\n\u6240\u4ee5\u4e0a\u8ff0\u6837\u4f8b\u5e94\u8be5\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/55493.png)\n\n\u56e0\u4e3a\u5bb9\u91cf\u662f1\uff0c\u6240\u4ee5\u6bcf\u4e2a\u65f6\u95f4\u6233\u90fd\u53ea\u4f1a\u7ecf\u8fc7\u4e00\u6b21\uff0c\u8fd9\u6837\u5c31OK\u5566\uff01\n\n#### \u4f46\u662f\u8fd9\u9053\u9898\u8981\u4f18\u5316\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u7684\u70b9\u4e5f\u592a\u591a\u4e86\uff0c\u5f00\u4e86O2\u624d\u8dd160\u5206~~\uff0c\u8fd9\u548b\u7206\u88c2\u554a\uff1f\uff1f~~\n\n\u6211\u4eec\u53d1\u73b0\u4e4b\u6240\u4ee5\u8fd9\u4e48\u6162\u90fd\u602a\u8fde\u70b9\u592a\u591a\u4e86\uff0c\u800c\u4e14\u592a\u591a\u7684\u72b6\u6001\u6d6a\u8d39\u6389\u4e86\u3002\n\n\u6211\u4eec\u4f9d\u7136\u4e3e\u4f8b\u5b50\uff1a\n\t\n\t\u5047\u8bbe\u67092\u9053\u83dc{1,2,3}\uff0c2\u4e2a\u53a8\u5e08{A,B}\uff0c\u5206\u522b\u65f6\u95f4\u662fC[I][J]\uff0c\u8ba9\u4ed6\u4eec\u6bd4\u4e2a\u8d5b\u3002\n\t1.\u5047\u5982\u6211\u4eec\u53ea\u8003\u8651\u6574\u4e2a\u53a8\u623f\u7684\u7b2c\u4e00\u9053\u83dc\u7684\u72b6\u51b5\uff0c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u505a\u5b8c\u7b2c\u4e00\u9053\u83dc\u7684\u662f\u6211\u4eec\u7684A\uff0c\u4ed6\u505a\u4e861\u53f7\u83dc\uff0c\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u5f80\u540e\u8dd1A\u5728\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6233\u7684\u60c5\u51b5\u3002\n\t\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u6b64\u65f6B\u8fd8\u6ca1\u5f00\u59cb\u505a\u83dc\u5462\uff01\u4e8e\u662f\u6b64\u65f6\u6211\u4eec\u5148\u4e0d\u6025\u7740\u628aB\u7684\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6233\u52a0\u4e0a\uff0c\u8fd8\u662f\u8ba9\u4ed6\u8dd1\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\n\n\t2.\u4e8e\u662f\u8ba9\u6bd4\u8d5b\u7ee7\u7eed\uff0c\u6211\u4eec\u53d1\u73b0\u6574\u4e2a\u53a8\u623f\u505a\u5b8c\u7b2c\u4e8c\u9053\u83dc\u8fd8\u662fA\uff0c\u4ed6\u53c8\u628a2\u53f7\u83dc\u7ed9\u505a\u4e86\u3002\n\t\u4f60\u53ef\u80fd\u4f1a\u95ee\u4e3a\u5565B\u5230\u73b0\u5728\u90fd\u6ca1\u5f00\u59cb\u505a\u83dc\uff1f\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u505a\u5565\u83dc\u90fd\u6162\u3002\u3002\u6240\u4ee5\u6211\u4eec\u7ed9A\u52a0\u5230\u7b2c\u4e09\u4e2a\u65f6\u95f4\u6233\uff0cB\u4ecd\u662f\u7b2c\u4e00\u4e2a\u3002\n\t\n\t3.\u6bd4\u8d5b\u7ee7\u7eed\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c\u4e09\u9053\u83dc\u7ec8\u4e8e\u662fB\u505a\u4e86\uff01\u4ed6\u505a\u7684\u662f3\u53f7\u83dc\uff01\n\t\u88c1\u5224\u5f88\u662f\u611f\u52a8\u4f46\u5e76\u6ca1\u6709\u7ed9\u4ed6\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u65f6\u95f4\u6233\uff0c\u56e0\u4e3a3\u9053\u83dc\u5168\u505a\u5b8c\u4e86\u6bd4\u8d5b\u7ed3\u675f\uff0cB\u4ece\u5934\u5230\u5c3e\u5c31\u6ca1\u6709\u52a0\u8fc7\u65b0\u7684\u65f6\u95f4\u6233\u3002\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/55494.png)\n\n\u7531\u4e0a\u4f8b\u5b50\u6211\u4eec\u53ef\u770b\u51fa\uff0c\u672c\u6765\u5e94\u8be5`2*3`\u4e2a\u65f6\u95f4\u6233\uff0c\u5982\u4eca\u53ea\u5269\u4e0b\u4e863\u4e2a\uff0c\u800c\u90a3\u4fbf\u662f\u83dc\u7684\u603b\u6570\uff01\uff01\n\n\u8fd9\u662f\u591a\u4e48\u4f18\u826f\u7684\u4f18\u5316\uff01\u7528\u56fe\u8bba\u7684\u8bf4\u6cd5\u5c31\u662f\uff1a\u6211\u4eec\u6bcf\u6b21\u8dd1\u8d39\u7528\u6d41\u627e\u589e\u5e7f\u8def\u7684\u65f6\u5019\uff0c\u4ec5\u589e\u52a0\u5f53\u524d\u53a8\u5e08\u7684\u65f6\u95f4\u6233\uff0c\u5176\u4ed6\u53a8\u5e08\u7b49\u4f60\u628a\u5f53\u524d\u65f6\u95f4\u6233\u7684\u83dc\u505a\u5b8c\u4e86\u518d\u52a0\uff0c\u8fd9\u6837\u8282\u70b9\u6570\u51cf\u5c11\u5230\u83dc\u7684\u603b\u6570\uff0c\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6d6a\u8d39\u4e86\uff01\n\n\u5f53\u7136\u4e5f\u5f88\u663e\u7136\u7684\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u57fa\u4e8eEK\u5206\u6790\u7684\uff0c\u4f46\u5982\u679c\u662fDinic\u7684\u591a\u8def\u589e\u5e7f\u4e5f\u540c\u6837\u9002\u7528\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5AC\u5566\uff01\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <cstring>\n#include <map>\n#include <queue>\n#define inf 2147483646\n#define N 10000\nusing namespace std;\n\nstruct ed{\n    int u,w,next,f;\n}e[1000000];\nint g[1000][2000],a[2000];\nint n,m,st=1,ans,cost,sm,fir[30000],c[30000],d[30000];\nint vis[30000],sp[30000];\nqueue<int> q; bool v[30000]; \nmap<int,int> ha;\n\nvoid add(int x,int y,int w,int f)\n{\n    e[++st].u=y; e[st].next=fir[x]; e[fir[x]=st].w=w; e[st].f=f;\n    e[++st].u=x; e[st].next=fir[y]; e[fir[y]=st].w=0; e[st].f=-f;\n}\n\nbool spfa()\n{\n    for (int i=0;i<=N;i++) d[i]=inf/2,c[i]=fir[i],v[i]=0;\n    q.push(0); v[0]=1; d[0]=0;\n    while (!q.empty())\n    {\n        int k=q.front(); q.pop();  v[k]=0;\n        for (int i=fir[k];i;i=e[i].next){\n            int u=e[i].u,w=e[i].f;\n            if (d[u]>d[k]+w&&e[i].w){\n                d[u]=d[k]+w; if (!v[u]) v[u]=1,q.push(u);\n            }\n        }\n    } \n    return (d[N]<inf/2);\n}\n\nint dfs(int p,int now)\n{\n    if (p==N){v[N]=1; return now;}\n    int mw=0;  v[p]=1;\n    for (int i=fir[p];i;i=e[i].next)\n    {\n        int u=e[i].u,w=e[i].f; \n        if (d[u]==d[p]+w&&e[i].w&&(!v[u]||u==N))\n        if (mw=dfs(u,min(e[i].w,now)))\n        {\n            e[i].w-=mw; e[i^1].w+=mw; \n            cost+=mw*w; return mw;\n        }\n    }\n}\n\nvoid dinic()\n{\n    while (spfa()) {\n         ans+=dfs(0,inf);\n         for (int i=fir[N];i;i=e[i].next){\n         \tint u=e[i].u,w=e[i].w;\n         \tif (w&&!vis[u]) {\n         \t\tvis[u]=1; int co=ha[u]; sp[co]++;\n         \t\tadd(++sm,N,1,0); ha[sm]=co;\n         \t\tfor (int i=1;i<=n;i++) add(i,sm,1,sp[co]*g[i][co]);\n             }\n         }\n    }\n}\n\nint main()\n{\n    cin>>n>>m; int sum=0;\n    for (int i=1;i<=n;i++) cin>>a[i],sum+=a[i];\n    for (int i=1;i<=n;i++) \n    for (int j=1;j<=m;j++) cin>>g[i][j];\n    \n    for (int i=1;i<=n;i++) add(0,i,a[i],0);\n    sm=n;\n    //for (int k=1;k<=n;k++) \u65f6\u95f4K(\u603b\u6570\u4e0d\u4e3an\u4e86\uff09 \n    for (int j=1;j<=m;j++) {//\u53a8\u5e08j \n    \tadd(++sm,N,1,0); ha[sm]=j; sp[j]=1;\n    \tfor (int i=1;i<=n;i++) add(i,sm,1,g[i][j]); //\u83dci \n    }\n    dinic();\n    cout<<cost<<endl; \n}\n\n\n\n```",
        "postTime": 1553964898,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P2050 [NOI2012]\u7f8e\u98df\u8282](https://www.luogu.org/problemnew/show/P2050)\n\n\u5148\u6765\u8bb2\u4e00\u4e0b[P2053 [SCOI2007]\u4fee\u8f66](https://www.luogu.org/problemnew/show/P2053)\uff08\u5982\u679c\u4f1a\u505a\u8bf7\u8df3\u8fc7\uff09\n\n> \u540c\u4e00\u65f6\u523b\u6709 $N$ \u4f4d\u8f66\u4e3b\u5e26\u7740\u4ed6\u4eec\u7684\u7231\u8f66\u6765\u5230\u4e86\u6c7d\u8f66\u7ef4\u4fee\u4e2d\u5fc3\u3002\u7ef4\u4fee\u4e2d\u5fc3\u5171\u6709 $M$ \u4f4d\u6280\u672f\u4eba\u5458\uff0c\u4e0d\u540c\u7684\u6280\u672f\u4eba\u5458\u5bf9\u4e0d\u540c\u7684\u8f66\u8fdb\u884c\u7ef4\u4fee\u6240\u7528\u7684\u65f6\u95f4\u662f\u4e0d\u540c\u7684\u3002\u73b0\u5728\u9700\u8981\u5b89\u6392\u8fd9 $M$ \u4f4d\u6280\u672f\u4eba\u5458\u6240\u7ef4\u4fee\u7684\u8f66\u53ca\u987a\u5e8f\uff0c\u4f7f\u5f97\u987e\u5ba2\u5e73\u5747\u7b49\u5f85\u7684\u65f6\u95f4\u6700\u5c0f\u3002\n> \u8bf4\u660e\uff1a\u987e\u5ba2\u7684\u7b49\u5f85\u65f6\u95f4\u662f\u6307\u4ece\u4ed6\u628a\u8f66\u9001\u81f3\u7ef4\u4fee\u4e2d\u5fc3\u5230\u7ef4\u4fee\u5b8c\u6bd5\u6240\u7528\u7684\u65f6\u95f4\u3002\n> $2 \\leq M \\leq 9,1 \\leq N \\leq 60,1 \\leq T \\leq 1000$ \u3002\n\n#### \u8d39\u7528\u63d0\u524d\u8ba1\u7b97\n\n\u6ce8\u610f\u5230\u6bcf\u4f4d\u8f66\u4e3b\u7684\u7b49\u5f85\u65f6\u95f4\u9664\u4e86\u8ddf\u81ea\u5df1\u7684\u8f66\u6240\u9700\u7684\u7ef4\u4fee\u65f6\u95f4\u6709\u5173\u4e4b\u5916\uff0c\u8fd8\u8ddf\u540c\u4e00\u4f4d\u6280\u672f\u4eba\u5458\u4e4b\u524d\u7ef4\u4fee\u6240\u82b1\u7684\u65f6\u95f4\u6709\u5173\uff0c\u8fd9\u5bfc\u81f4\u6211\u4eec\u5f88\u96be\u76f4\u89c2\u5730\u5efa\u6a21\u3002\n\n\u4f46\u662f\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u4eba\u7ef4\u4fee\u6240\u82b1\u7684\u65f6\u95f4\uff0c\u5bf9\u540c\u4e00\u4f4d\u6280\u672f\u4eba\u5458\u4e4b\u540e\u7684\u7ef4\u4fee\u9020\u6210\u7684\u5f71\u54cd\u662f\u5df2\u77e5\u4e14\u56fa\u5b9a\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c06\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\uff0c\u5373\uff0c\u628a\u7b2c $i$ \u4f4d\u8f66\u4e3b\u7684\u8f66\u7531\u7b2c $j$ \u4f4d\u7ef4\u4fee\u4eba\u5458\u5012\u6570\u7b2c $k$ \u4e2a\u7ef4\u4fee\u6240\u82b1\u7684\u65f6\u95f4\uff08\u8d39\u7528\uff09\u5f53\u4f5c $k \\times t_{i,j}$ \u3002\n\n\u4ece\u6e90\u70b9\u5411\u6bcf\u4f4d\u8f66\u4e3b\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \u3002\n\n\u6bcf\u4f4d\u7ef4\u4fee\u4eba\u5458\u62c6\u6210 $n$ \u4e2a\u70b9\uff0c\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $0$ \u3002\n\n\u7b2c $i$ \u4f4d\u8f66\u4e3b\u5411\u7b2c $j$ \u4f4d\u7ef4\u4fee\u4eba\u5458\u62c6\u6210\u7684\u7b2c $k$ \u4e2a\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $k \\times t_{i,j}$ \u3002\n\n\u6c42\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u56de\u5230[P2050 [NOI2012]\u7f8e\u98df\u8282](https://www.luogu.org/problemnew/show/P2050)\n\n> \u6b64\u9898\u4e3a **P2053 [SCOI2007]\u4fee\u8f66** \u7684\u6570\u636e\u52a0\u5f3a\u7248\u3002\n> $N \\leq 40,M \\leq 100$ \u3002\n\n\u540c **P2053 [SCOI2007]\u4fee\u8f66** \u7684\u5efa\u56fe\u65b9\u5f0f\uff0c\u4f46\u662f\u786c\u6c42\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u53ea\u80fd\u62ff\u5230 $60$ \u5206\u3002\n\n#### \u52a8\u6001\u5f00\u70b9\n\n\u8d77\u521d\u6bcf\u4e2a\u53a8\u5e08\u53ea\u62c6\u6210\u4e00\u4e2a\u70b9\uff0c\u6bcf\u6b21\u589e\u5e7f\u65f6\uff0c\u628a\u5f53\u4e0b\u7684\u53a8\u5e08\u62c6\u51fa\u4e00\u4e2a\u65b0\u70b9\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 6, M = 4e7 + 6, inf = 0x3f3f3f3f;\nint n, m, s, t, ans, d[N], pre[N], now[N], num, p[N];\nint Head[N], Edge[M], Leng[M], Cost[M], Next[M], tot = 1;\nbitset<N> v;\nint a[46][106];\n\ninline void add(int x, int y, int z, int w) {\n\tEdge[++tot] = y;\n\tLeng[tot] = z;\n\tCost[tot] = w;\n\tNext[tot] = Head[x];\n\tHead[x] = tot;\n}\n\ninline bool spfa() {\n\tv.reset();\n\tmemset(d, 0x3f, sizeof(d));\n\tqueue<int> q;\n\tq.push(s);\n\tv[s] = 1;\n\td[s] = 0;\n\tnow[s] = inf;\n\twhile (q.size()) {\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tv[x] = 0;\n\t\tfor (int i = Head[x]; i; i = Next[i]) {\n\t\t\tint y = Edge[i], z = Leng[i], w = Cost[i];\n\t\t\tif (!z || d[y] <= d[x] + w) continue;\n\t\t\td[y] = d[x] + w;\n\t\t\tnow[y] = min(now[x], z);\n\t\t\tpre[y] = i;\n\t\t\tif (!v[y]) {\n\t\t\t\tq.push(y);\n\t\t\t\tv[y] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn d[t] != inf;\n}\n\ninline void upd() {\n\tans += d[t] * now[t];\n\tint x = t;\n\twhile (x != s) {\n\t\tint i = pre[x];\n\t\tLeng[i] -= now[t];\n\t\tLeng[i^1] += now[t];\n\t\tx = Edge[i^1];\n\t}\n\tx = Edge[pre[t]^1];\n\tp[++num] = p[x];\n\tadd(num, t, 1, 0);\n\tadd(t, num, 0, 0);\n\tfor (int i = Head[x]; i; i = Next[i]) {\n\t\tint y = Edge[i], w = Cost[i^1];\n\t\tif (y == t) continue;\n\t\tw += a[y][p[x]];\n\t\tadd(y, num, 1, w);\n\t\tadd(num, y, 0, -w);\n\t}\n}\n\nint main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tadd(0, i, x, 0);\n\t\tadd(i, 0, 0, 0);\n\t}\n\tnum = t = n + m + 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\ta[i][j] = x;\n\t\t\tadd(i, n + j, 1, x);\n\t\t\tadd(n + j, i, 0, -x);\n\t\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tadd(n + i, t, 1, 0);\n\t\tadd(t, n + i, 0, 0);\n\t\tp[n+i] = i;\n\t}\n\twhile (spfa()) upd();\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1552149644,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P2050 [NOI2012]\u7f8e\u98df\u8282"
    },
    {
        "content": "\u5efa\u56fe\u522b\u7684\u9898\u89e3\u4e5f\u8bf4\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u6211\u4e5f\u662f\u770b\u7684\u9898\u89e3 /dog  \n\n## \u6211\u4e3b\u8981\u60f3\u8bf4\u4e00\u4e0b \u601d\u8def\u548c\u8d1f\u73af ##  \n\nnoi\u7684\u9898\u591a\u6570\u662f\u4e00\u4e2a\u6bd4\u8f83\u88f8\u7684\u7684\u4e1c\u897f\uff0c\u52a0\u4e0a\u5de7\u5999\u7684\u4f18\u5316\u5c31\u6210\u4e86\u4e00\u9053\u6709\u533a\u5206\u5ea6\u7684~~\u597d\u9898~~  \n\u8fd9\u9053\u9898\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u5148\u8003\u8651\u4e00\u4e0b\u6bcf\u4e2a\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u662f\u4ec0\u4e48\uff1f\uff1f\uff1f  \n**\u5176\u5b9e**\u5047\u5982\u4e00\u4e2a\u53a8\u5e08\u4e00\u5171\u505a\u4e864\u4e2a\u83dc\uff0c\u82b1\u8d39\u4f9d\u6b21\u662f$c1,c2,c3,c4$,\u90a3\u6211\u73b0\u5728\u7684\u7b49\u5f85\u65f6\u95f4\u5176\u5b9e\u5c31\u662f$4*c1+3*c2+2*c3+c4$,\u6240\u4ee5\u6211\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u6bcf\u4e2a\u53a8\u5e08\u505a\u83dc\u82b1\u8d39\u7684\u65f6\u95f4\u662f$1*c1+2*c2+3*c3+...+n*cn$  \n\u90a3\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u663e\u7136\u53ef\u4ee5\u628a\u4e00\u4e2a\u53a8\u5e08\u62c6\u6210\u82e5\u5e72\u4e2a\uff0c\u8fd9\u6837\u6211\u77e5\u9053\u8fd9\u4e2a\u53a8\u5e08\u7684\u7cfb\u6570k\uff0c\u6211\u628a\u8fd9\u4e2a\u53a8\u5e08\u7684\u5f53\u524d\u72b6\u6001\u8bb0\u4e3a$(i,k)$\uff0c\u6211\u5c31\u53ef\u4ee5\u4f18\u7f8e\u4e14\u660e\u786e\u7684\u8fde\u51fa\u4e00\u6761$c=1,w=cost*k$\u7684\u4e00\u6761\u8fb9\u7ed9\u6bcf\u4e2a\u83dc\uff0c\u56e0\u4e3a\u4e00\u4e2a\u53a8\u5e08\u5728\u4e00\u4e2a\u7cfb\u6570\u7684\u60c5\u51b5\u4e0b\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u76f4\u63a5\u4ece\u6e90\u70b9\u6765\u4e00\u6761$c=1,w=0$\u5373\u53ef  \n\u9898\u4e2d\u8bf4\u4e86\u6bcf\u79cd\u83dc\u6709\u591a\u5c11\u4e2a\uff0c\u90a3\u6211\u5c31\u628a\u6bcf\u4e2a\u79cd\u7c7b\u5efa\u4e00\u4e2a\u70b9\uff0c\u518d\u628a\u8fd9\u4e2a\u70b9\u8fde\u7ed9\u6c47\u70b9\u4e00\u6761$c=p[i],w=0$  \n\n### \u8fd9\u6837\u56fe\u5c31\u5efa\u597d\u4e86 ###\n\n\u4e0b\u6765\u5c31\u662f\u6a21\u677f\u65f6\u95f4\uff0c\u8bb2\u5230\u8fd9\u91cc[P2053 \u4fee\u8f66](https://www.luogu.com.cn/record/43867988)\u8fd9\u9053\u9898\u4f60\u5c31\u4f1a\u505a\u4e86\uff0c\u4f46\u5728\u8fd9\u9053\u9898\u4e2d\u4f60\u4f1a\u62ff\u523060\u5206\u7684tle\uff0c\u5e38\u89c4\u64cd\u4f5c\uff0c\u6211\u73b0\u5728\u8981\u8003\u8651\u5982\u4f55\u4f18\u5316  \ntips:\u5982\u679c\u4e00\u4e2a\u53a8\u5e08\u73b0\u5728$(i,1)$\u7684\u72b6\u6001\u8fd8\u6ca1\u7528\uff0c\u4ed6\u4f1a\u4f7f\u7528$(i,2)$\u8fd9\u4e2a\u72b6\u6001\u5417\uff1f\uff1f\uff1f  \n\n\u663e\u7136\u4ed6\u4e0d\u4f1a\uff0c\u4f46\u6211\u5728\u5efa\u5b8c\u9759\u6001\u56fe\u4e4b\u540e\uff0c\u6211\u50bb\u4e0d\u62c9\u51e0\u7684\u628a\u8fd9\u4e9b\u72b6\u6001\u90fd\u641c\u4e86\u4e00\u904d\uff0c\u8fd9\u6837\u4e0d\u597d\uff0c\u90a3\u6211\u662f\u5426\u53ef\u4ee5\u4e0d\u628a\u8fd9\u4e2a\u56fe\u5168\u90e8\u5efa\u51fa\u6765\uff0c\u800c\u662f\u5728\u6bcf\u4e2a\u53a8\u5e08\u628a$(i,j)$\u8fd9\u4e2a\u72b6\u6001\u7528\u5b8c\u4e4b\u540e\u518d\u628a$(i,j+1)$\u8fd9\u4e2a\u72b6\u6001\u5efa\u51fa\u6765,\u663e\u7136\u53ef\u4ee5\uff0c\u90a3\u6211\u5c31\u5148\u628a\u521d\u59cb\u7684\u56fe\u5efa\u51fa\u6765\uff0c\u66b4\u529b\u589e\u5e7f\uff0c\u6bcf\u6b21\u589e\u5e7f\u5b8c\u4e4b\u540e\u518d\u628a\u5f53\u524d\u7528\u6389\u7684\u70b9\u5206\u88c2\u51fa\u65b0\u8282\u70b9\u3002  \n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u5b8c\u4e86\uff0c\u6211\u4e0b\u6765\u4e3b\u8981\u8bb2\u4e00\u4e0b\u5982\u4f55\u907f\u514d**\u8d1f\u73af**\u51fa\u73b0  \n\n\u6211\u52a0\u70b9\u7684\u65f6\u5019\u5982\u679c\u4f1a\u51fa\u73b0\u8d1f\u73af\u4f1a\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\n![\u6765\u81eaYazhi\u5f88\u4e11\u7684\u56fe\u7247](https://cdn.luogu.com.cn/upload/image_hosting/7a986vgs.png)  \n\u663e\u7136\u6211\u7684$c1>c2$,\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u80af\u5b9a\u5148\u589e\u5e7f$c1$,\u6240\u4ee5\u5176\u5b9e\u8fd9\u6837\u4e00\u6b21\u4e00\u6b21\u627e\u589e\u5e7f\u8def\u52a8\u6001\u52a0\u8fb9\u662f\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u73af\u7684\n\n\u8bc4\u8bba\u533a\u91cc\u8fd8\u6709\u4e00\u4e9b\u9519\uff0c\u6bd4\u5982**\u7b2c\u4e09\u4e2a\u6570\u636e**\u51fa\u73b0\u4e86\u8d1f\u73af\uff0c\u56e0\u4e3a\u7b2c\u4e09\u4e2a\u6570\u636e\u628a\u4e00\u4e2a\u53a8\u5e08\u7684\u8dd1\u6ee1\u4e86\uff0c\u5b83\u9ed8\u8ba4\u628a(1,p+1)\u5efa\u51fa\u6765\u4e86\uff0c\u5982\u679c\u4f60\u628a\u6bcf\u4e2a\u79cd\u7c7b\u7684\u70b9\u5f53\u4f5cm*p+i\uff0c\u5c31\u53ef\u80fd\u91cd\u70b9\u5bfc\u81f4\u9519\u8bef",
        "postTime": 1608349554,
        "uid": 238311,
        "name": "\u77ac\u95f4\u3002\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u7684blog](http://www.cnblogs.com/dedicatus545/p/8735179.html)\n\n# \u6b63\u6587\n\n\u5148\u770b\u770b\u8fd9\u9053\u9898\n\n[\u4fee\u8f66](https://www.luogu.org/problemnew/show/P2053)\n\n\u4ed4\u7ec6\u7406\u89e3\u4e00\u4e0b\uff0c\u8fd9\u4e24\u9053\u9898\u662f\u4e0d\u662f\u4e00\u6837\u7684\uff1f\n\n### \u8fd9\u9053\u9898\u7684\u4e0d\u540c\u4e4b\u5904\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u533a\u522b\uff1a\u672c\u9898\u4e2d\u6bcf\u4e00\u79cd\u8f66\u6709\u591a\u4e2a\u9700\u6c42\uff0c\u4f46\u662f\u8fd9\u4e2a\u597d\u529e\uff0c\u8fde\u8fb9\u7684\u65f6\u5019\u5bb9\u91cf\u6da8\u6210$p\\lbrack i\\rbrack$\u5c31\u597d\u4e86\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u533a\u522b\uff1a\u6570\u636e\u91cf\u53d8\u5927\u4e86-_-\n\n\u8fd9\u76f4\u63a5\u5bfc\u81f4\u4e86\u8d39\u7528\u6d41\u88f8\u505a\uff0cTLE60\u5206\uff0c\u56e0\u4e3a\u6709\u8d85\u8fc76e6\u6761\u8fb9\n\n\u6211\u4eec\u5f97\u60f3\u4e2a\u529e\u6cd5\u6539\u8fdb\u4e00\u4e0b\n\n\u89c2\u5bdf\u53ef\u5f97\uff0c\u8fd9\u9053\u9898\u91cc\uff0c\u6309\u7167\u6211\u4eec\u7684\u6a21\u578b\uff0c\u6700\u591a\u51fa\u73b0800\u6761\u589e\u5e7f\u8def\uff0c\u800c\u4e14\u6bcf\u6b21\u589e\u5e7f\u90fd\u662f\u4e00\u7684\u6d41\u91cf\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5b9e\u9645\u4e0a\u8dd1800\u6b21spfa\u5373\u53ef\n\n\u4f46\u662fspfa\u548c\u8fb9\u552f\u4e00\u76f8\u5173\uff0c\u6211\u4eec\u5168\u5efa\u597d\u7684\u56fe\u4e2d6e6\\*800\\*k\u80af\u5b9a\u4f1aT\n\n\u90a3\u6211\u4eec\u5c31\u8981\u60f3\u4e2a\u529e\u6cd5\u4f18\u5316\u8fb9\u6570\n\n### \u4f18\u5316\n\n\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\uff0c\u7b2c\u4e00\u6b21spfa\u5f97\u51fa\u7684\u6700\u77ed\u8def\u80af\u5b9a\u662f~~\u67d0\u4eba\u5012\u6570\u7b2c\u4e00\u4e2a\u4fee\u67d0\u8f66~~\u67d0\u53a8\u5e08\u5012\u6570\u7b2c\u4e00\u4e2a\u505a\u67d0\u83dc\uff0c\u56e0\u4e3a\u5012\u6570\u7b2c\u4e00\u4e2a\u80af\u5b9a\u6bd4\u5012\u6570\u7b2c\u4e8c\u4e2a\u8ddd\u79bb\u77ed\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u53ea\u628a\u6240\u6709\u201c\u5012\u6570\u7b2c\u4e00\u4e2a\u505a\u7684\u83dc\u201d\u7684\u90a3\u4e9b\u8fb9\u52a0\u4e0a\n\n\u4e00\u65e6\u4e00\u6761\u589e\u5e7f\u8def\u88ab\u7528\u6389\u4e86\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u53a8\u5e08-\u505a\u83dc\u987a\u5e8f\u4e8c\u5143\u7ec4$\\left(j,k\\right)$\u88ab\u7528\u6389\u4e86\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6240\u6709\u4ee3\u8868\u4e8c\u5143\u7ec4$\\left(j,k+1\\right)$\u52a0\u4e0a\u53bb\uff08\u4e00\u5171\u6709n\u6761\uff09\uff0c\u518d\u8dd1spfa\n\n\u8fd9\u6837\u6211\u4eec\u56fe\u4e2d\u7684\u603b\u8fb9\u6570\u4e0d\u4f1a\u8d85\u8fc7$n\\ast\\sum_{i=1}^n p\\lbrack i\\rbrack$\n\n\u4e5f\u5c31\u662f\u603b\u65f6\u95f4\u5728$O\\left(np^2\\ast k\\right)$\u5de6\u53f3\uff0ck\u662fspfa\u5e38\u6570\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define inf 1e9\n#define id(i,j) ((i-1)*p+j+n)\n#define left(x) ((x-n-1)/p+1)\n#define right(x) ((x-n-1)%p+1)\nusing namespace std;\ninline int read(){\n\tint re=0,flag=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){\n\t\tif(ch=='-') flag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n\treturn re*flag;\n} \nint n,m,cnt=-1,first[100010],dis[100010],vis[100010],pre[100010],limit[100010];\nstruct edge{\n\tint to,next,w,cap;\n}a[10000010];\ninline void add(int u,int v,int w,int cap){\n\ta[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n\ta[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nint q[200010],ans,cost[50][110],p;\nbool spfa(int s,int t){\n\tint head=0,tail=1,u,v,w,i;\n\tmemset(dis,-1,sizeof(dis));memset(vis,0,sizeof(vis));\n\tmemset(pre,-1,sizeof(pre));memset(limit,0,sizeof(limit));\n\tq[0]=s;vis[s]=1;dis[s]=0;limit[s]=inf;\n\twhile(head<tail){\n\t\tu=q[head++];vis[u]=0;\n\t\tfor(i=first[u];~i;i=a[i].next){\n\t\t\tv=a[i].to;w=a[i].w;\n\t\t\tif(a[i].cap&&((dis[v]==-1)||(dis[v]>dis[u]+w))){\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tpre[v]=i;limit[v]=min(limit[u],a[i].cap);\n\t\t\t\tif(!vis[v]) q[tail++]=v,vis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn ~dis[t];\n}\nvoid mcmf(int s,int t){\n\tint u,i;\n\twhile(spfa(s,t)){//\u8fd9\u91cc\u6700\u591asigma(p[i])\u6b21\n\t\tfor(u=t;~pre[u];u=a[pre[u]^1].to){\n\t\t\ta[pre[u]].cap-=limit[t];a[pre[u]^1].cap+=limit[t];\n\t\t\tans+=limit[t]*a[pre[u]].w;\n\t\t}//\u8dd1\u5b8c\u4e00\u6b21\u66f4\u65b0\u7b54\u6848\n\t\tu=a[pre[t]^1].to;//u\u5c31\u662f\u5f53\u524d\u6d88\u8017\u7684\u4e8c\u5143\u7ec4\uff0cu+1\u5c31\u662f\u4e0b\u4e00\u4e2a\u4e8c\u5143\u7ec4\n\t\tadd(u+1,t,0,1);\n\t\tfor(i=1;i<=n;i++) add(i,u+1,cost[i][left(u+1)]*right(u+1),1);//\u52a0\u4e0a\u5bf9\u5e94\u7684\u4e0b\u4e00\u7ec4\u8fb9\n\t}\n}\nint main(){\n\tmemset(first,-1,sizeof(first));int i,j,t1;\n\tn=read();m=read();\n\tfor(i=1;i<=n;i++){\n\t\tt1=read();p+=t1;\n\t\tadd(0,i,0,t1);\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=m;j++){\n\t\t\tcost[i][j]=read();\n\t\t\tadd(i,id(j,1),cost[i][j],1);//\u521d\u59cb\u8fb9\n\t\t}\n\t}\n\tfor(j=1;j<=m;j++) add(id(j,1),n+p*m+1,0,1);\n\tmcmf(0,n+p*m+1);\n\tcout<<ans<<endl;\n}\n```",
        "postTime": 1523109884,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "\u795e\u4ed9\u9898...\n\n\u524d\u7f6e\u9898\u76ee:[\u4fee\u8f66](https://www.luogu.org/problemnew/show/P2053)\n\n\u8bbe$p=\\sum p_i$\u5373\u603b\u5171\u9700\u8981\u7684\u83dc\u6570\n\n\u8fde\u8fb9\u65b9\u5f0f\u662f\u628a\u6bcf\u4e2a\u53a8\u5e08\u62c6\u6210$p$\u4e2a\u70b9\uff0c\u4ece\u83dc$i$\u5411\u53a8\u5e08$j$\u62c6\u6210\u7684\u7b2c$k$\u4e2a\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$1$\u8d39\u7528\u4e3a$k\\times t[i][j]$\u7684\u8fb9.\n\n\u8fd9\u4e2a\u5c31\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u53a8\u5e08\u53ea\u5904\u7406\u81ea\u5df1\u505a\u7684\u83dc\uff0c\u5982\u679c\u4ed6\u5012\u6570\u7b2c$k$\u4e2a\u505a\u67d0\u83dc\u90a3\u4e48\u5c31\u6709$k$\u4e2a\u8fd8\u6ca1\u5403\u4e0a\u83dc\u7684\u4eba\u9700\u8981\u7b49.\n\n\u7136\u540e\u4ece$S$\u5411\u83dc$i$\u8fde\u4e00\u6761$(p[i],0)$\u7684\u8fb9\uff0c\u4ece\u53a8\u5e08\u62c6\u6210\u7684\u6240\u6709\u70b9\u5411$T$\u8fde\u4e00\u6761$(1,0)$\u7684\u8fb9.\n\n\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u592a\u5927\u4e86\uff0c\u56e0\u4e3a$spfa$\u7684\u65f6\u5019\u5f88\u591a\u8fb9\u662f\u6ca1\u6709\u7528\u7684\uff0c\u4f60\u6700\u591a\u53ea\u9700\u8981\u589e\u5e7f$p$\u6761\u8def\u5373\u53ef\uff0c\u4e8e\u662f\u6211\u4eec\u52a8\u6001\u52a0\u8fb9\uff0c\u5373\u4e00\u5f00\u59cb\u53ea\u628a\u53a8\u5e08\u62c6\u6210$1$\u4e2a\u70b9\uff0c\u5f53\u67d0\u4e2a\u53a8\u5e08\u6ee1\u6d41\u7684\u65f6\u5019\uff0c\u5c31\u518d\u62c6\u51fa\u4e00\u4e2a\u70b9\uff0c\u8fdb\u884c\u8fde\u8fb9.\n\n\u5b9e\u73b0\u4e0a\u5361\u4e86\u6211\u5f88\u4e45...\u8f6c\u4e86\u4e00\u5708\u9898\u89e3\u6ca1\u53d1\u73b0\u4ec0\u4e48\u591a\u8def\u589e\u5e7f+\u52a8\u6001\u52a0\u70b9\u7684...\u540e\u6765\u81ea\u5df1\u5199\u5c45\u71361A\u4e86...\u63d0\u4f9b\u4e00\u79cd\u5199\u6cd5\u5427233\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=7e6,inf=2e9;\nint ans=0,vis[N],dis[N],q[N],nxt[N],fst[N],mm,n,m,S,T,x,cur[N],sum,num[N],t[500][500];\nstruct Edge{int v,w,c;}e[N];\nvoid ade(int u,int v,int w,int c){e[mm]=(Edge){v,w,c};nxt[mm]=fst[u],fst[u]=mm++;}\nvoid Link(int u,int v,int w,int c){ade(u,v,w,c),ade(v,u,0,-c);}\nint SPFA(int S,int T)\n{\n\tfor(int i=1;i<=T;i++)dis[i]=inf,vis[i]=0;\n\tdis[S]=0,vis[S]=1,q[1]=S;int head=0,tail=1;\n\twhile(head<tail)\n\t{\n\t\tint u=q[++head];vis[u]=0;\n\t\tfor(int i=fst[u];i!=-1;i=nxt[i])\n\t\t{\n\t\t\tif(!e[i].w)continue;\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[u]+e[i].c<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].c;\n\t\t\t\tif(!vis[v])q[++tail]=v,vis[v]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]!=inf;\n}\nint dfs(int S,int T,int lim)\n{\n\tif(S==T||!lim)return lim;\n\tvis[S]=1;int add=0;\n\tfor(int &i=cur[S];i!=-1&&lim;i=nxt[i])\n\t{\n\t\tint v=e[i].v;\n\t\tif(!e[i].w||vis[v]||dis[v]!=dis[S]+e[i].c)continue;\n\t\tint f=dfs(v,T,min(lim,e[i].w));\n\t\tif(f)add+=f,lim-=f,e[i].w-=f,e[i^1].w+=f,ans+=f*e[i].c;\n\t}\n\tvis[S]=0;\n\treturn add;\n}\nvoid primal_dual(int S,int T)//\u4e8b\u5b9e\u4e0a\u6211\u4e00\u76f4\u4e0d\u77e5\u9053\u6211\u5199\u7684\u8d39\u7528\u6d41\u53eb\u4ec0\u4e48\u4e1c\u897f...\u5927\u6982\u4e0d\u662f\u539f\u59cb\u5bf9\u5076...\n{\n\tint maxflow=0;\n\twhile(maxflow<sum)//\u6240\u6709\u83dc\u90fd\u505a\u5b8c\u4e86\n\t{\n\t\tSPFA(S,T);\n\t\tfor(int i=S;i<=T;i++)cur[i]=fst[i];\n\t\tmaxflow+=dfs(S,T,inf);//\u7167\u5e38\u5199\n\t\tfor(int i=fst[T];i!=-1;i=nxt[i])//\u56e0\u4e3a\u7ec8\u70b9\u4e3aT\u7684\u8fb9\u4e0d\u597d\u679a\u4e3e\uff0c\u6240\u4ee5\u679a\u4e3e\u53cd\u5411\u8fb9\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(e[i^1].w)continue;//\u8981\u6ee1\u6d41\n\t\t\tint x=(v-n-1)/sum+1,y=(v-n-1)%sum+1;//\u628a\u53a8\u5e08\u548ck\u627e\u51fa\u6765\n\t\t\tif(y==num[x]&&num[x]<sum)\n\t\t\t{\n\t\t\t\t++num[x],++v;Link(v,T,1,0);\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tLink(j,v,1,(y+1)*t[j][x]);//\u65b0\u8fb9\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<=n;i++)fst[i]=-1;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&x),sum+=x,Link(0,i,x,0);\n\tT=n+m*sum+1;for(int i=n+1;i<=T;i++)fst[i]=-1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);t[i][j]=x;\n\t\t\tLink(i,n+(j-1)*sum+1,1,x);num[j]=1;\n\t\t}\n\tfor(int i=1;i<=m;i++)Link(n+(i-1)*sum+1,T,1,0);\n\tprimal_dual(0,T);\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1553997265,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "## Preface\n\n\u8d39\u7528\u6d41\u5efa\u6a21\u597d\u9898\uff01\n\n## Analysis\n\u5bf9\u4e8e\u8fd9\u79cd \u4e00\u773c\u671b\u8fc7\u53bb\u4e0d\u53ef\u505a \u7684\u795e\u9898\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u7f51\u7edc\u6d41/\u72b6\u538b DP\u3002\n\n\u4f46\u662f\u7785\u4e00\u773c\u6570\u636e\u8303\u56f4\u4f3c\u4e4e\u4e0d\u662f\u5f88\u80fd\u72b6\u538b\uff0c\u6211\u4eec\u51b3\u5b9a\u601d\u8003\u7f51\u7edc\u6d41\u3002\n\n\u9898\u76ee\u7ed9\u51fa\u4e86 **\u5bb9\u91cf\u9650\u5236** \u548c **\u6743\u503c**\uff0c\u6545\u4f7f\u7528\u8d39\u7528\u6d41\u6c42\u89e3\u3002\n\n1. \u5bf9\u4e8e\u7b2c $i$ **\u79cd**\u83dc\uff0c\u4ece\u6e90\u70b9\u5411\u5176\u8fde\u4e00\u6761\u300c\u5bb9\u91cf\u4e3a $p_i$\uff0c\u8d39\u7528\u4e3a0\u300d\u7684\u8fb9\uff0c\u8868\u793a\u8fd9\u79cd\u83dc\u5171\u8981\u505a $p_i$ \u4efd\u3002\n2. \u4ed4\u7ec6\u601d\u8003\u540c\u4e00\u53a8\u5e08\u5904\uff0c\u6bcf**\u9053**\u83dc\u5bf9\u603b\u7b49\u5f85\u65f6\u95f4\u7684\u8d21\u732e\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u540e\u4e00\u9053\u83dc\u5c31\u8d21\u732e\u4e86 $t'$ \u7684\u65f6\u95f4\uff0c\u5012\u6570\u7b2c\u4e8c\u9053\u83dc\u8d21\u732e\u4e86 $2\u00b7t'$\uff0c\u2026\u2026\uff0c\u5012\u6570\u7b2c $k$ \u9053\u83dc\u8d21\u732e\u4e86 $k\u00b7t'$ \u7684\u65f6\u95f4\u3002\uff08\u6b64\u5904 $t'$ \u8868\u793a\u5728\u67d0\u4e00\u53a8\u5e08\u5904\u5236\u4f5c\u8fd9\u9053\u83dc\u6240\u9700\u7684\u65f6\u95f4\uff09\u3002\n3. \u6240\u4ee5\uff0c\u5bf9\u4e8e\u300c\u4ea4\u7ed9\u7b2c $i$ \u4f4d\u53a8\u5e08\uff0c\u6392\u5728\u5012\u6570\u7b2c $j$ \u9053\u83dc\u300d\u8fd9\u4e00\u65b9\u6848\uff08\u4e0b\u7b80\u5199\u4e3a $(i,j)$\uff09\uff0c\u4ece\u6bcf\u9053\u83dc $x$ \u5411\u5176\u8fde\u4e00\u6761\u300c\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $t_{x,i}\\times j$\u300d\u7684\u8fb9\uff0c\u8868\u793a\u4e00\u79cd\u70f9\u996a\u65b9\u6848\u3002\n4. \u6700\u540e\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u65b9\u6848 $(i,j)$\uff0c\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u300c\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\u300d\u7684\u8fb9\uff0c\u8868\u793a\u6bcf\u4f4d\u53a8\u5e08\u5728\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u505a\u4e00\u9053\u83dc\u3002\n\n\u7136\u540e\u8dd1 MCMF \u5373\u53ef\u3002\n\n> \u7565\u8bb2\u4e00\u4e0b\u6b63\u786e\u6027\uff1a\u5f88\u663e\u7136\uff0cMCMF \u4f1a\u8dd1\u8d39\u7528\u6700\u5c0f\u7684\u589e\u5e7f\u8def\uff0c\u800c\u8d8a\u9760\u524d\u7684\u65f6\u95f4\u8d39\u7528\u4e5f\u8d8a\u5c0f\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u8dd1\u51fa\u6765\u7684\u65f6\u95f4\u4e00\u5b9a\u662f\u4ece $1$ \u5f00\u59cb\u7684\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u3002\n\n## Optimize\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u53ea\u6709 $60$ \u5206\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u8fb9\u592a\u591a\u4e86\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n> \u300c\u8dd1\u51fa\u6765\u7684\u65f6\u95f4\u4e00\u5b9a\u662f\u4ece $1$ \u5f00\u59cb\u7684\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u300d\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u65e2\u7136\u9700\u8981\u7528\u5230\u7684\u8fb9\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u800c\u4e14\u4f1a\u6709\u4e00\u5927\u5806\u8fb9\u7528\u4e0d\u5230\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d**\u52a8\u6001\u52a0\u8fb9**\u5462\uff1f\n\n\u4e8e\u662f\u6211\u4eec\u6bcf\u8dd1\u5b8c\u589e\u5e7f\u8def\u5c31\u5224\u65ad\u4e00\u4e0b\u8d70\u4e86\u54ea\u6761\u8fb9\uff0c\u5c06\u5176\u300c\u540e\u9762\u300d\u7684\u4e00\u6761\u8fb9\u52a0\u4e0a\u5373\u53ef\u3002\n\n\u8fd9\u6837\u70b9\u6570\u662f $O(n+m+p)$ \u7684\uff0c\u8fb9\u6570\u662f $O(np)$ \u7684\uff0c\u5373\u4f7f\u4f7f\u7528 EK \u5b9e\u73b0\u7684 SSP \u4e5f\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## Code\n```cpp\nint N,M;\nint p[41],P=0,ti[41][101]; // \u6b64\u5904 ti \u5373\u9898\u76ee\u4e2d\u7684 t\n\nclass MCMF // \u7f51\u7edc\u6d41\u57fa\u672c\u64cd\u4f5c\n{\n\tpublic:\n\tstruct Edge\n\t{\n\t\tint u,v,cap,flow,cost,nxt;\n\t};\n\tEdge e[1000001];\n\tint head[200001],cnt,n,t,s;\n\tint max_layer[200001],bl[200001];\n\tvoid operator() (int __n=0, int __s=0, int __t=0) { n=__n,s=__s,t=__t,cnt=1;  memset(head,0,sizeof(head)); }\n\til void __add(int u, int v, int cap, int flow, int cost)\n\t{\n\t\te[++cnt]=(Edge){u,v,cap,flow,cost,head[u]};\n\t\thead[u]=cnt;\n\t}\n\til void add(int u, int v, int cap, int cost)\n\t{\n\t\t__add(u,v,cap,0,cost);\n\t\t__add(v,u,cap,cap,-cost);\n\t}\n\n\tint inque[200001],dis[200001],q[200001],front,tail,pre[200001];\n\til int spfa()\n\t{\n\t\tmemset(inque,0,sizeof(inque));\n\t\tmemset(dis,-1,sizeof(dis));\n\t\tfront=tail=1,q[1]=s,inque[s]=1,dis[s]=0;\n\t\twhile(front<=tail)\n\t\t{\n\t\t\tint u=q[front++];inque[u]=0;\n\t\t\tfor(int i=head[u]; i; i=e[i].nxt)\n\t\t\t{\n\t\t\t\tif(e[i].cap-e[i].flow<=0) continue;\n\t\t\t\tint v=e[i].v,w=e[i].cost;\n\t\t\t\tif(dis[v]!=-1 && dis[v]<=dis[u]+w) continue;\n\t\t\t\tdis[v]=dis[u]+w,pre[v]=i;\n\t\t\t\t// cerr<<v<<\" > \"<<pre[v]<<' '<<e[pre[v]].u<<endl;\n\t\t\t\tif(!inque[v]) q[++tail]=v,inque[v]=1;\n\t\t\t}\n\t\t}\n\t\t// cerr<<\" - \"<<dis[t]<<endl;\n\t\treturn dis[t];\n\t}\n\til void print_graph() // \u8c03\u8bd5\u7528\uff0c\u4e0d\u7528\u7ba1\u4ed6\n\t{\n\t\tfor(int i=2; i<=cnt; i+=2)\n\t\t{\n\t\t\tprintf(\"#%d edge-1 : %d->%d cap %d flow %d cost %d\\n\",i,e[i].u,e[i].v,e[i].cap,e[i].flow,e[i].cost);\n\t\t\tprintf(\"#%d edge-2 : %d->%d cap %d flow %d cost %d\\n\\n\",i+1,e[i+1].u,e[i+1].v,e[i+1].cap,e[i+1].flow,e[i+1].cost);\n\t\t}\n\t}\n\til pii solve()\n\t{\n\t\t// print_graph();\n\t\tint ans=0,cost=0,dlt;\n\t\twhile((dlt=spfa())!=-1)\n\t\t{\n\t\t\tint flow=0x7fffffff,cur=t;\n\t\t\twhile(cur!=s) flow=min(flow,e[pre[cur]].cap-e[pre[cur]].flow),cur=e[pre[cur]].u;\n\t\t\tans+=flow,cost+=dlt*flow;\n\t\t\tcur=t;\n\t\t\twhile(cur!=s) e[pre[cur]].flow+=flow,e[pre[cur]^1].flow-=flow,cur=e[pre[cur]].u;\n\n\t\t\tint id=e[pre[t]].u;\n\t\t\t// cerr<<id<<' '<<bl[id]<<endl;\n\t\t\t++max_layer[bl[id]];\n\t\t\tbl[id+1]=bl[id];\n\t\t\tadd(id+1,t,1,0);\n\t\t\tFor(i,1,N) add(i,id+1,1,ti[i][bl[id+1]]*max_layer[bl[id+1]]); // \u52a8\u6001\u52a0\u8fb9\n\t\t\t// cerr<<endl;\n\t\t}\n\t\treturn mkp(ans,cost);\n\t}\n\n};\n\nMCMF netGraph;\n\n#define cook(i,j) (N+(i-1)*P+j) // \u70f9\u996a\u65b9\u6848\u7684\u4e8c\u5143\u7ec4\n\nsigned main()\n{\n\tread(N,M);\n\tFor(i,1,N) read(p[i]),P+=p[i];\n\tFor(i,1,N) For(j,1,M) read(ti[i][j]);\n\tnetGraph(N+M*P+1,0,N+M*P+1);\n\tFor(i,1,N) netGraph.add(0,i,p[i],0);\n\tFor(i,1,M)\n\t{\n\t\tnetGraph.add(cook(i,1),N+M*P+1,1,0);\n\t\tnetGraph.max_layer[i]=1;\n\t\tnetGraph.bl[cook(i,1)]=i;\n\t\tFor(k,1,N) netGraph.add(k,cook(i,1),1,ti[k][i]); // \u4e00\u5f00\u59cb\u628a\u7b2c\u4e00\u6761\u8fb9\u52a0\u4e0a\u53bb\n\t}\n\tcout<<netGraph.solve().second;\n\treturn 0;\n}\n```",
        "postTime": 1661265254,
        "uid": 356003,
        "name": "Xiaohuba",
        "ccfLevel": 7,
        "title": "P2050 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P2050)\u770b\u9898\u76ee\u3002  \n\n# \u5206\u6790\n\n\u672c\u9898\u7684\u5f31\u5316\u7248\u4fbf\u662f[[SCOI2007]\u4fee\u8f66](https://www.luogu.com.cn/problem/P2053)\u3002\n\n\u8003\u8651\u73b0\u5728\u6709 $n$ \u4efd\u83dc\u7ed9\u4e00\u4f4d\u53a8\u5e08\u505a\uff0c\u65f6\u95f4\u5206\u522b\u4e3a $t_1,t_2,\\dots,t_n$\uff0c\u603b\u7b49\u5f85\u65f6\u95f4\u4e3a\uff1a  \n$$\n\\sum_{i=1}^n\\sum_{j=1}^it_{j}=\\sum_{j=1}^nt_j(n-j+1)=\\sum_{j=1}^nj\\times t_{n-j+1}\n$$\n\u7531\u4e8e $t$ \u7684\u987a\u5e8f\u4efb\u610f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u65f6\u95f4\u5206\u644a\u5230\u6bcf\u4efd\u83dc\u4e0a\u9762\uff0c\u5373\u53ef\u4ee5\u76f4\u63a5\u8ba4\u4e3a\u7b2c $i$ \u4efd\u83dc\u7684\u82b1\u8d39\u4e3a $i\\times t_i$\u3002\n\n\u6ce8\u610f\u5230\u8d39\u7528\u540c\u65f6\u6536\u83dc\u7684\u79cd\u7c7b\uff0c\u53a8\u5e08\u8eab\u4efd\u548c\u505a\u83dc\u987a\u5e8f\u4e09\u4e2a\u5f71\u54cd\uff0c\u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u5982\u4e0b\u5efa\u56fe\u65b9\u5f0f\uff1a\n\n- \u5bf9\u4e8e $m$ \u4f4d\u53a8\u5e08\uff0c\u6bcf\u4f4d\u53a8\u5e08\u62c6\u6210 $p$ \u4e2a\u70b9\uff0c\u70b9 $(i,j)$ \u8868\u793a\u53a8\u5e08 $i$ \u6b63\u5728\u505a\u7b2c $j$ \u9053\u83dc\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $(i,j)$ \u8fde\u5411\u6c47\u70b9\uff0c\u5bb9\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a 0\u3002 \n- \u5bf9\u4e8e $n$ \u9053\u83dc\uff0c\u5efa\u7acb $n$ \u4e2a\u70b9\uff0c\u6e90\u70b9\u5411\u7b2c $i$ \u9053\u83dc\u8fde\u63a5\u8fb9\uff0c\u5bb9\u91cf\u4e3a $p_i$\uff0c\u8d39\u7528\u4e3a 0\u3002\n- \u5bf9\u4e8e\u7b2c $i$ \u9053\u83dc\u548c\u4efb\u610f\u4e2a\u53a8\u5e08\u70b9 $(x,y)$\uff0c\u8fde\u63a5 $i\\rightarrow (x,y)$\uff0c\u5bb9\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a $y\\times t_{i,x}$\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a**\u5728\u8d39\u7528\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b**\uff0c\u6bcf\u9053\u83dc\u7684\u5236\u4f5c\u65f6\u95f4\u5fc5\u7136\u4f1a\u5c3d\u91cf\u5730\u9760\u524d\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u505a\u83dc\u4e2d\u65ad\u7684\u60c5\u51b5\u3002\n\n---\n\n\u4f46\u662f\u8fd9\u91cc\uff0c\u8fd9\u79cd\u66b4\u529b\u5efa\u56fe\u65b9\u6cd5\u4f1a......\u76f4\u63a5 T \u98de\u3002\n\n\u95ee\u9898\u5f88\u660e\u663e\uff0c\u70b9\u592a\u591a\uff0c\u5bfc\u81f4\u8fb9\u4e5f\u592a\u591a\u3002\u6211\u4eec\u9700\u8981\u51cf\u5c11\u70b9\u6570\u3002\n\n\u56de\u5230\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u51fa\uff1a\u5982\u679c\u7b2c $i$ \u4e2a\u53a8\u5e08\u90fd\u8fd8\u6ca1\u6709\u505a\u7b2c $j$ \u9053\u83dc\uff0c\u90a3\u4e48\u4ed6\u4e5f\u4e0d\u53ef\u80fd\u505a $j+1$ \u9053\uff0c $j+2$ \u9053\u4ee5\u53ca\u66f4\u591a\u7684\u83dc\u3002\u4e5f\u5373\uff0c\u6211\u4eec\u53ea\u9700\u8981**\u5728\u56fe\u4e0a\u52a0\u5165\u7b2c $i$ \u4e2a\u53a8\u5e08\u7684\u7b2c\u4e00\u9053\u672a\u505a\u7684\u83dc**\uff0c\u800c\u5269\u4f59\u7684\u70b9\uff0c\u5219\u5b8c\u5168\u53ef\u4ee5\u5728\u505a\u5b8c\u4e00\u9053\u83dc\u4e4b\u540e\u518d\u52a0\u5165\u5230\u56fe\u4e2d\u3002\n\n\u6ce8\u610f\u672c\u9898\u7684 \" \u505a\u83dc \" \u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u56fe\u4e0a\u63a8\u6d41\u91cf\u4e3a 1 \u7684\u6d41\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u63a8\u6d41\u4e4b\u540e\u90fd\u9700\u8981\u52a0\u70b9\u3002\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u70b9\u6570\u5c31\u662f $O(m+p)$\uff0c\u8fb9\u6570\u5c31\u662f $O(n(m+p))$\uff0c~~\u518d\u52a0\u4e0a\u7384\u5b66\u7684\u7f51\u7edc\u6d41\u590d\u6742\u5ea6~~\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e86\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n\n#define rep( i, a, b ) for( int (i) = (a) ; (i) <= (b) ; ++ (i) )\n#define per( i, a, b ) for( int (i) = (a) ; (i) >= (b) ; -- (i) )\n\ntypedef long long LL;\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1e6 + 5, MAXM = 1e6 + 5;\nconst int MAXS = 1e3 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar(); int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ); s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) putchar( '-' ), x = -x;\n\tif( 9 < x ) write( x / 10 );\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\nstruct Edge\n{\n\tint to, nxt, w, c;\n}Graph[MAXM << 1];\n\nint q[MAXN], fro, rea;\n\nint tim[MAXS][MAXS];\nint id[MAXS][MAXS], len[MAXS];\n\nint head[MAXN], dist[MAXN], cur[MAXN], bel[MAXN], prev[MAXN];\nint N, M, cnt = 1, tot, source, sink;\nbool vis[MAXN];\n\nvoid AddEdge( const int from, const int to, const int C, const int W )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\tGraph[cnt].c = C, Graph[cnt].w = W, head[from] = cnt;\n}\n\nvoid AddE( const int from, const int to, const int C, const int W ) { AddEdge( from, to, C, W ), AddEdge( to, from, 0, -W ); }\n\n#define Nxt( x ) ( x = ( x + 1 ) % MAXN )\n\nbool SPFA( const int S, const int T )\n{\n\tint u, v; fro = rea = 0;\n\trep( i, 1, tot ) dist[i] = INF, prev[i] = 0;\n\tdist[q[rea] = S] = 0, vis[S] = true, Nxt( rea );\n\twhile( fro ^ rea )\n\t{\n\t\tvis[u = q[fro]] = false, Nxt( fro );\n\t\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t\t\tif( Graph[i].c && dist[v = Graph[i].to] > dist[u] + Graph[i].w )\n\t\t\t{\n\t\t\t\tdist[v] = dist[u] + Graph[i].w, prev[v] = i;\n\t\t\t\tif( ! vis[v] ) vis[q[rea] = v] = true, Nxt( rea );\n\t\t\t}\n\t}\n\treturn dist[T] < INF;\n}\n\nvoid Add( const int j )\n{\n\tbel[id[j][++ len[j]] = ++ tot] = j;\n\trep( i, 1, N ) AddE( i, id[j][len[j]], 1, tim[i][j] * len[j] );\n\tAddE( id[j][len[j]], sink, 1, 0 );\n}\n\nint main()\n{\n\tread( N ), read( M ), tot = N, source = ++ tot, sink = ++ tot;\n\trep( i, 1, N ) { int p; read( p ), AddE( source, i, p, 0 ); }\n\trep( i, 1, N ) rep( j, 1, M ) read( tim[i][j] );\n\trep( j, 1, M ) Add( j );\n\t\n\tLL cost = 0; int delt;\n\twhile( SPFA( source, sink ) )\n\t{\n\t\tdelt = INF;\n\t\tfor( int u = sink ; u ^ source ; u = Graph[prev[u] ^ 1].to ) delt = MIN( delt, Graph[prev[u]].c );\n\t\tfor( int u = sink ; u ^ source ; u = Graph[prev[u] ^ 1].to ) Graph[prev[u]].c -= delt, Graph[prev[u] ^ 1].c += delt;\n\t\tcost += delt * dist[sink], Add( bel[Graph[prev[sink] ^ 1].to] );\n\t}\n\twrite( cost ), putchar( '\\n' );\n\treturn 0;\n}\n```\n\n",
        "postTime": 1610112432,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[NOI2012] \u7f8e\u98df\u8282"
    },
    {
        "content": "\u5047\u8bbe\u7b2c $i$ \u4e2a\u53a8\u5e08\u603b\u5171\u505a $s$ \u9053\u83dc\uff0c\u90a3\u4e48\u505a\u8fd9\u4e9b\u83dc\u7684\u603b\u82b1\u8d39\u65f6\u95f4\u4e3a $\\sum_{j=1}^{s} (s-j+1)t_{i,j}$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u53a8\u5e08\u62c6\u6210 $p$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u5230 $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff0c\u5176\u4e2d\u8fde\u5230\u7b2c $i$ \u4e2a\u70b9\u7684\u8fb9\u7684\u8d39\u7528\u4e58\u4e0a $i$\u3002\u540c\u65f6\u5bf9\u6bcf\u9053\u83dc\u4ece $s$ \u8fde\u8fc7\u6765\u4e00\u6761\u5bb9\u91cf\u4e3a\u9700\u6c42\u7684\u8fb9\uff0c\u7136\u540e\u8fde\u4e0a\u83dc\u80b4\u548c\u53a8\u5e08\u4e4b\u95f4\u7684\u8fb9\n\n\u8fd9\u6837\u5efa\u56fe\u80af\u5b9a\u662f\u53ef\u4ee5\u5f97\u51fa\u6b63\u786e\u7b54\u6848\u7684\uff0c\u7136\u800c\u6211\u4eec\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u6837\u603b\u70b9\u6570\u5c06\u4f1a\u662f $n * m * p$ \u4e2a\uff0c\u540c\u65f6\u8fd8\u8981\u8dd1 $p$ \u904d $spfa$\uff0c\u663e\u7136\u662f\u4f1a\u8d85\u65f6\u7684\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\n\n\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21 $spfa$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u662f\u627e\u5230\u4e00\u6761\u6700\u77ed\u7684\u8def\u5f84\u7136\u540e\u63a8\u6d41\uff0c\u800c\u663e\u7136\u53a8\u5e08\u540e\u9762\u7684\u70b9\u5728\u524d\u9762\u7684\u70b9\u88ab\u4f7f\u7528\u4e4b\u524d\u662f\u4e0d\u53ef\u80fd\u5728\u6700\u77ed\u8def\u4e0a\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u8fb9\u8dd1 $spfa$ \u4e00\u8fb9\u52a0\u8fb9\uff0c\u53ea\u5728\u4e00\u4e2a\u53a8\u5e08\u88ab\u4f7f\u7528\u540e\u6211\u4eec\u624d\u52a0\u4e0a\u4ed6\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\nusing namespace std;\n\ntypedef struct edge{\n    int from,to,cap,cost,next,chef;\n}edge;\n\nconst int INF=100000000;\nedge e[2000010];\nint n,m,s=40001,t=40002,head[40010],tot=1,c[40010],p[40010],f[40010],inque[40010],flow,cost,ti[50][110],w[50],cnt,r[110];\n\ninline int read(){\n    int num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nvoid addedge(int u,int v,int cap,int cost,int chef){\n    e[++tot].from=u; e[tot].to=v; e[tot].cap=cap; e[tot].cost=cost; e[tot].chef=chef; e[tot].next=head[u]; head[u]=tot;\n    e[++tot].from=v; e[tot].to=u; e[tot].cap=0; e[tot].cost=-cost; e[tot].chef=chef; e[tot].next=head[v]; head[v]=tot;\n}\n\nint spfa(){\n    for(int i=1;i<=cnt;i++) p[i]=f[i]=0,c[i]=INF;\n    p[t]=f[t]=0; c[t]=INF;\n    queue<int> q;\n    q.push(s); inque[s]=1; c[s]=0; f[s]=INF;\n    while(!q.empty()){\n        int x=q.front(); q.pop(); inque[x]=0;\n        for(int i=head[x],to=e[i].to;i;i=e[i].next){\n            to=e[i].to;\n            if(e[i].cap && e[i].cost+c[x]<c[to]){\n                c[to]=e[i].cost+c[x]; p[to]=i; f[to]=min(f[x],e[i].cap);\n                if(!inque[to]) {q.push(to); inque[to]=1;}\n            }\n        }\n    }\n    return f[t];\n}\n\nvoid solve(){\n    for(int i=1;i<=n;i++) addedge(s,++cnt,w[i],0,0);\n    cnt++;\n    for(int i=1;i<=m;i++,cnt++){\n        for(int j=1;j<=n;j++) addedge(j,cnt,1,ti[j][i],0);\n        addedge(cnt,t,1,0,i); r[i]=1;\n    }\n    while(spfa()){\n        flow+=f[t]; cost+=f[t]*c[t];\n        for(int i=p[t];i;i=p[e[i].from]) e[i].cap-=f[t],e[i^1].cap+=f[t];\n        int chef=e[p[t]].chef; cnt++; r[chef]++;\n        for(int i=1;i<=n;i++) addedge(i,cnt,1,ti[i][chef]*r[chef],0);\n        addedge(cnt,t,1,0,chef);\n    }\n    return;\n}\n\nint main(){\n    n=read(); m=read();\n    for(int i=1;i<=n;i++) w[i]=read();\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) ti[i][j]=read();\n    solve();\n    printf(\"%d\",cost);\n    return 0;\n}\n\n```",
        "postTime": 1554456248,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2050)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://www.cmsblog.top/archives/noi2012-mei-shi-jie)\n\n\u8003\u8651\u8d39\u7528\u6d41\u3002\n\n\u9996\u5148\u8d39\u7528\u63d0\u524d\u8ba1\u7b97\uff0c\u7b2c $j$ \u4e2a\u53a8\u5e08\u5012\u6570\u7b2c $k$ \u4e2a\u505a\u7b2c $i$ \u9053\u83dc\u7684\u8d39\u7528\u662f $k \\times t_{i,j}$\uff0c\u56e0\u4e3a\u6700\u540e\u7684 $k$ \u4e2a\u4eba\u90fd\u9700\u8981\u7b49\u5f85\u8fd9\u4e00\u9053\u83dc\u3002\n\n\u5f00\u59cb\u5efa\u56fe\u3002\n\n1. \u6bcf\u9053\u83dc\u5411\u6e90\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $p_i$ \u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff1b\n\n2. \u6bcf\u4e2a\u53a8\u5e08\u62c6\u6210 $n$ \u4e2a\u70b9\uff0c\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u8d39\u7528\u4e3a $0$ \u7684\u70b9\u3002\n\n3. \u7b2c $i$ \u9053\u83dc\u5411\u7b2c $j$ \u4e2a\u521d\u59cb\u6240\u62c6\u51fa\u6765\u7684\u7b2c $k$ \u4e2a\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u8d39\u7528\u4e3a $k \\times t_{i,j}$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u8dd1\u4e00\u6b21 MCMF\u3002\n\n\u8fd9\u6837\u5b50\u53ef\u4ee5\u83b7\u5f97 $60$ \u5206\u7684\u9ad8\u5206\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a trick \u53eb\u505a**\u52a8\u6001\u5f00\u70b9**\u3002\n\n\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u8dd1 SPFA \u589e\u5e7f\uff0c\u53ea\u80fd\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6682\u65f6\u4e0d\u8fde\u4e0d\u9700\u8981\u7684\u8fb9\u3002\u4e00\u5f00\u59cb\u6211\u4eec\u5c06\u6bcf\u4e2a\u53a8\u5e08\u62c6\u6210\u4e00\u4e2a\u70b9\u8fdb\u884c\u8fde\u8fb9\uff0c\u5728\u904d\u5386\u589e\u5e7f\u8def\u7684\u65f6\u5019\u6211\u4eec\u5bf9\u6bcf\u4e2a\u53a8\u5e08\u6dfb\u52a0\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5e76\u6309\u7167\u4e0a\u8ff0\u7b2c $3$ \u4e2a\u8fde\u8fb9\u65b9\u5f0f\u8fde\u8fb9\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1e5 + 10, MAXM = 4e7 + 10;\nconst int INF = 0x3f3f3f3f;\n\nint N, M;\n\nstruct _ {\n    int To, Next, Flow, Cost;\n} G[MAXN];\nint Head[MAXN], Cnt = 1;\n\nvoid _add(int u, int v, int w, int c) {\n    G[++Cnt] = {v, Head[u], w, c};\n    Head[u] = Cnt;\n}\n\nvoid Add(int u, int v, int w, int c) {\n    _add(u, v, w, c);\n    _add(v, u, 0, -c);\n}\n\nint Dist[MAXN], Pre[MAXN], Incf[MAXN];\nbool Vis[MAXN];\nint T, S;\n\nbool SPFA() {\n    memset(Dist, 0x3f, sizeof Dist);\n    queue<int> q;\n    q.push(S);\n    Vis[S] = true;\n    Dist[S] = 0;\n    Incf[S] = INF;\n    Incf[T] = 0;\n    while (q.size()) {\n        int u = q.front();\n        q.pop();\n        Vis[u] = false;\n        for (int i = Head[u]; i; i = G[i].Next) {\n            const int &v = G[i].To, &w = G[i].Flow, &c = G[i].Cost;\n            if (!w || Dist[v] <= Dist[u] + c) continue;\n            Dist[v] = Dist[u] + c;\n            Incf[v] = min(w, Incf[u]);\n            Pre[v] = i;\n            if (!Vis[v]) {\n                q.push(v);\n                Vis[v] = true;\n            }\n        }\n    }\n    return Incf[T];\n}\n\nint MaxFlow, MinCost;\nint P[MAXN], A[50][150], CYB;\n\nvoid UpDate() {\n    MaxFlow += Incf[T];\n    MinCost += Dist[T] * Incf[T];\n    int x = T;\n    while (x != S) {\n        int i = Pre[x];\n        G[i].Flow -= Incf[T];\n        G[i ^ 1].Flow += Incf[T];\n        x = G[i ^ 1].To;\n    }\n    x = G[Pre[T] ^ 1].To;\n    P[++CYB] = P[x];\n    Add(CYB, T, 1, 0);\n    for (int i = Head[x]; i; i = G[i].Next) {\n        int v = G[i].To, w = G[i ^ 1].Cost;\n        if (v == T) continue;\n        w += A[v][P[x]];\n        Add(v, CYB, 1, w);\n    }\n}\n\nvoid MCMF() {\n    while (SPFA()) UpDate();\n}\n\nint main() {\n    scanf(\"%d %d\", &N, &M);\n    S = 0, T = CYB = N + M + 1;\n    for (int i = 1, x; i <= N; i++) {\n        scanf(\"%d\", &x);\n        Add(S, i, x, 0);\n    }\n    for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= M; j++) {\n            scanf(\"%d\", &A[i][j]);\n            Add(i, N + j, 1, A[i][j]);\n        }\n    }\n    for (int i = 1; i <= M; i++) {\n        Add(N + i, T, 1, 0);\n        P[N + i] = i;\n    }\n    MCMF();\n    cout << MinCost << endl;\n}\n```",
        "postTime": 1660806553,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "[NOI2012] \u7f8e\u98df\u8282"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u7b80\u5316\u7248\u5728 p2035 \u4fee\u8f66\uff0c\u505a\u5b8c\u90a3\u9053\u9898\u4e4b\u540e\u518d\u6765\u770b\u8fd9\u9053\u9898\u5427qwq\u3002\n\n\u4e0e\u90a3\u9053\u9898\u7c7b\u4f3c\uff0c\u6211\u4eec\u5148\u5c06\u53a8\u5e08\u62c6\u70b9\uff0c\u5c06\u6e90\u70b9\u540c\u62c6\u70b9\u540e\u7684\u53a8\u5e08\u76f8\u8fde\uff0c\u67431\u8d390\uff0c\u5c06\u6bcf\u9053\u83dc\u540c\u6c47\u70b9\u76f8\u8fde\uff0c\u6743\u4e3a\u70b9\u83dc\u4eba\u6570\uff0c\u8d39\u7528\u4e3a0\u3002\n\n\u7136\u540e\u5c31\u662f\u6700\u5173\u952e\u7684\u52a8\u6001\u52a0\u8fb9\u4e86\u2014\u2014\u6211\u4eec\u5148\u8003\u8651\u52a8\u6001\u52a0\u8fb9\uff08\u5207\u8bb0\uff0c\u4e0d\u662f\u65ad\u8fb9\u91cd\u5efa\uff0c\u662f\u52a0\u8fb9\uff01\uff09\u7684\u65b9\u5f0f\u3002\n\n\u6beb\u65e0\u7591\u95ee\u6211\u4eec\u9700\u8981\u5bf9\u94fe\u5f0f\u524d\u5411\u661f\u8fdb\u884c\u64cd\u4f5c\uff08\u5565\uff1f\u4f60\u95ee\u6211\u94fe\u5f0f\u524d\u5411\u661f\u662f\u4ec0\u4e48\uff1f\u554a\uff0c\u5c31\u662f\u4e00\u79cd\u8fdeNOI\u3001IOI\u56fe\u8bba\u9898\u90fd\u4f1a\u7528\u5230\u7684\u4e00\u79cd\u975e\u5e38\u9ad8\u6548\u7684~~\u53eb\u505a\u90bb\u63a5\u8868\u7684~~\u6570\u636e\u7ed3\u6784\u3002\uff09\u6211\u4eec\u8bbe\u7f6e\u6570\u7ec4**num[i]**\u8868\u793a\u7b2c**i**\u4e2a\u53a8\u5e08\u505a\u5230\u4e86\u5012\u6570\u7b2c**num[i]**\u9053\u83dc\uff0c\u5982\u679c\u539f\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u8fb9\u6d41\u51fa\u53bb\u4e86\uff0c\u5c31\u8fde\u63a5**s**\u4e0e**a[i].nx+1**\u5373\u53a8\u5e08\u5012\u6570\u7b2c**num[i]+1**\u9053\u83dc\uff0c\u8fde\u63a5**a[i].nx+1**\u4e0e\u5168\u90e8\u7684\u83dc\uff0c**++num[i]**\u3002\n\n\u5f00\u59cb\u5faa\u73afdinic\uff0c\u5f53\u6240\u6709\u83dc\u901a\u5f80\u6c47\u70b9\u7684\u8fb9\u6d41\u6ee1\u65f6\uff0c\u7ec8\u6b62\u5faa\u73af\u5e76\u8f93\u51fa\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u4e0d\u5b58\u5728\u6bd4\u7ec8\u6b62\u5faa\u73af\u65f6\u66f4\u4f18\u7684\u89e3\uff08\u5c31\u662f**\u8d2a\u5fc3\u8bc1\u660e**\u554aqwq\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u8fd9\u9053\u83dc\u653e\u5728\u524d\u9762\u505a\u65f6\u95f4\u80af\u5b9a\u4f1a\u6bd4\u803d\u6401\u4e00\u4f1a\u66f4\u4f18\uff0c\u6240\u4ee5~~\u662f\u4e0d\u662f\u6709\u70b9\u8349\u7387~~\u4e0d\u5b58\u5728\uff09\u3002\n\u4e0a\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=2e9;\n\nint n,m,x,y,s,t,np=1,mct,mfl;\nint h[84045],ln[84045],q[550005],w[105][45],cup[45],num[105];\nbool vis[84045];\nstruct rpg{\n\tint li,nx,ln,ct;\n}a[550005];\n\nvoid add(int ls,int nx,int ln,int ct){\n\ta[++np]=(rpg){h[ls],nx,ln,ct};\n\th[ls]=np;\n\ta[++np]=(rpg){h[nx],ls,0,-ct};\n\th[nx]=np;\n}\n\nbool spfa(){\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=s;i<=t;++i) ln[i]=INF;\n\tint hd=1,tl=1;\n\tq[hd]=t;\n\tln[t]=0;\n\tvis[t]=1;\n\twhile(hd<=tl){\n\t\tint nw=q[hd++];\n\t\tvis[nw]=0;\n\t\tfor(int i=h[nw];i;i=a[i].li){\n\t\t\tif(a[i^1].ln&&ln[a[i].nx]>ln[nw]-a[i].ct){\n\t\t\t\tln[a[i].nx]=ln[nw]-a[i].ct;\n\t\t\t\tif(!vis[a[i].nx]){\n\t\t\t\t\tvis[a[i].nx]=1;\n\t\t\t\t\tq[++tl]=a[i].nx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}return ln[s]<INF;\n}\n\nint dfs(int u,int maxn){\n\tif(u==t||!maxn) return maxn;\n\tvis[u]=1;\n\tint sum=0;\n\tfor(int i=h[u];i;i=a[i].li){\n\t\tif(a[i].ln&&!vis[a[i].nx]&&ln[a[i].nx]==ln[u]-a[i].ct){\n\t\t\tint f=dfs(a[i].nx,min(maxn,a[i].ln));\n\t\t\tif(f){\n\t\t\t\tmaxn-=f;\n\t\t\t\tsum+=f;\n\t\t\t\ta[i].ln-=f;\n\t\t\t\ta[i^1].ln+=f;\n\t\t\t\tif(!maxn) break;\n\t\t\t}\n\t\t}\n\t}return sum;\n}\n\nvoid dnc(){\n\twhile(spfa()){\n\t\tvis[t]=1;\n\t\twhile(vis[t]){\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tint d=dfs(s,INF);\n\t\t\tmfl+=d;\n\t\t\tmct+=d*ln[s];\n\t\t\tfor(int i=h[0];i;i=a[i].li){\n\t\t\t\tint tmp1=(a[i].nx-1)/cup[0]+1,tmp2=(a[i].nx-1)%cup[0]+1;\n\t\t\t\tif(!a[i].ln&&tmp2==num[tmp1]){\n\t\t\t\t\t++num[tmp1];\n\t\t\t\t\tadd(s,a[i].nx+1,1,0);\n\t\t\t\t\tfor(int j=1;j<=n;++j){\n\t\t\t\t\t\tadd(a[i].nx+1,j+m*cup[0],1,w[tmp1][j]*num[tmp1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&cup[i]);\n\t\tcup[0]+=cup[i];\n\t}for(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tscanf(\"%d\",&w[j][i]);\n\t\t}\n\t}\n\tt=m*cup[0]+n+1;\n\tfor(int i=1;i<=n;++i){\n\t\tadd(i+m*cup[0],t,cup[i],0);\n\t}for(int i=1;i<=m;++i){\n\t\tadd(s,(i-1)*cup[0]+1,1,0);\n\t\t++num[i];\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tadd((i-1)*cup[0]+1,j+m*cup[0],1,w[i][j]);\n\t\t}\n\t}while(mfl<cup[0]){\n\t\tdnc();\n\t}\n\tprintf(\"%d\\n\",mct);\n\treturn 0;\n}\n```",
        "postTime": 1521545824,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "**\u3010\u9898\u89e3\u3011**\n\n\u8d39\u7528\u6d41+\u52a8\u6001\u52a0\u8fb9\n\n\u521a\u5f00\u59cb\u5199\u7684\u5355\u7eaf\u7684\u8d39\u7528\u6d41TLE\u4e86\u3002\n\n\u4e8e\u662f\u53ea\u80fd\u7528\u4e00\u4e9b\u9ad8\u5927\u4e0a\u7684\u4e1c\u897f\u2014\u2014\u52a8\u6001\u52a0\u70b9\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u9664\u4e86\u6570\u636e\u8303\u56f4\uff0c\u4e0e scoi 2007 \u4fee\u8f66\u5c31\u662f\u4e00\u4e2a\u9898\u3002\n\n\u5efa\u56fe \u6e90\u70b9->\u6240\u6709\u53a8\u5e08\u62c6\u6210\u7684\u70b9\uff08\u4e00\u4e2a\u53a8\u5e08sigma pi \uff09\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n\n\u6bcf\u79cd\u83dc->\u6c47\u70b9 \u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n\n\u672c\u6765\u5e94\u8be5\u4e00\u4e2a\u53a8\u5e08\u62c6\u6210\u7684\u6bcf\u4e2a\u70b9\u90fd\u4e0e\u4e0d\u540c\u7684\u83dc\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3at[i][j]\u00d7k \u7684\u8fb9\uff08k\u8868\u793a\u5012\u6570\u7b2c\u51e0\u4e2a\u505a\uff0c\u56e0\u4e3a\u5012\u6570\u7b2c\u4e00\u505a\u53ea\u6709\u8fd9\u4e2a\u4eba\u9700\u8981\u7b49,\u505a\u8fd9\u4e2a\u83dc\u7684\u65f6\u95f4\u4e0d\u4f1a\u5176\u4ed6\u83dc\uff09 \uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u8fd9\u4e9b\u8fb9\u6700\u540e\u4e00\u5b9a\u6709\u5f88\u591a\u662f\u4e0d\u4f1a\u8d70\u5230\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u521a\u5f00\u59cb\u7684\u65f6\u5019\u53ea\u9700\u8981\u628a\u5012\u6570\u7b2c\u4e00\u4eba\uff0c\u5373t[i][j]\u8fde\u597d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6bcf\u6b21\u589e\u5e7f\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u53ea\u8981\u4e00\u4e2a\u662f\u505a\u83dc\u7684\u5176\u4f59\u90fd\u662f\u9000\u83dc\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u51fa\u6e90\u70b9\u7684\u540e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u4ed6\u5c5e\u4e8e\u54ea\u4e2a\u53a8\u5e08\u505a\u7684\u7b2c\u51e0\u9053\u83dc\uff0c\u6bd4\u5982\u662f\u7b2c\u4e00\u4e2a\u53a8\u5e08\u7684\u7b2c2\u9053\u83dc\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6240\u6709\u83dc\u5230\u7b2c\u4e00\u4e2a\u53a8\u5e08\u7684\u7b2c3\u9053\u83dc\u7684\u8fb9\u8054\u901a\uff0c\u518d\u7ee7\u7eed\u589e\u5e7f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6458\u81eahttps://www.2cto.com/kf/201605/507369.html\\*/\n\n\n**\u3010\u4ee3\u7801\u3011**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,n) for(int i=1;i<=n;i++)\n#define Rep(i,n) for(int i=0;i<n;i++)\n#define ForD(i,n) for(int i=n;i;i--)\n#define Forp(x) for(int p=pre[x];p;p=next[p])\n#define RepD(i,n) for(int i=n;i>=0;i--)\n#define MEM(a) memset(a,0,sizeof(a))\n#define MEMI(a) memset(a,127,sizeof(a))\n#define MEMi(a) memset(a,128,sizeof(a))\n#define INF (2139062143)\n#define F (1000000009)\n#define MAX_N (400+10)\n#define MAX_M (100+10)\n#define MAX_P (800+10)\n#define MAXN (80400+10)\n#define MAXM (720000+2600+10)\n#define read(x) { \\\n                while (!isdigit(c=getchar())); \\\n                x=c-48; \\\n                while (isdigit(c=getchar())) x=x*10+c-48; \\\n                }\ntypedef long lodefine read(x) { \\\n                while (!isdigit(c=getchar())); \\\n                x=c-48; \\\n                while (isdigit(c=getchar())) x=x*10+c-48; \\\n                }ng ll;\nchar c;\nint n1,n,s,t,n2,p[MAX_N],tim[MAX_N][MAX_M];\nint edge[MAXM],next[MAXM]={0},pre[MAXN]={0},size=1;\nll weight[MAXM],cost[MAXM];\nvoid addedge(int u,int v,int w,int c)\n{\n   edge[++size]=v;\n   weight[size]=w;\n   cost[size]=c;\n   next[size]=pre[u];\n   pre[u]=size;\n}\nvoid addedge2(int u,int v,int w,int c){addedge(u,v,w,c),addedge(v,u,0,-c);}\nint pre2[MAXN],q[MAXN*8];\nint d[MAXN];\nint who_cook_num[MAXN][2];\nbool b[MAXN]={0};\nvoid SPFA(int s)\n{\n   memset(d,127,sizeof(d));\n   d[s]=0;\n   int head=1,tail=1;\n   q[1]=s;pre2[s]=0;\n   while (head<=tail)\n   {\n      int now=q[head];b[now]=0;head++;\n      Forp(now)\n      {\n         int &v=edge[p];\n         if (weight[p]>0&&edge[p]^s&&d[now]+cost[p]<d[v])\n         {\n            d[v]=d[now]+cost[p];\n            pre2[v]=p;\n            if (b[v]) continue;b[v]=1;\n            q[++tail]=v;\n         }\n      }\n   }\n}\nll costflow(int s)\n{\n   ll totcost=0,totflow=0;\n   while(1)\n   {\n      SPFA(s);if (d[t]==INF) break;\n      ll fl=INF,nowcost=0;\n      for(int i=t;i^s;i=edge[pre2[i]^1]) fl=min(fl,weight[pre2[i]]),nowcost+=cost[pre2[i]];\n      for(int i=t;i^s;i=edge[pre2[i]^1]) weight[pre2[i]]-=fl,weight[pre2[i]^1]+=fl;\n      int whos=edge[pre2[t]^1];\n      who_cook_num[++n][0]=who_cook_num[whos][0],who_cook_num[n][1]=who_cook_num[whos][1]+1;\n      For(i,n1) addedge2(i,n,1,tim[i][who_cook_num[n][0]]*who_cook_num[n][1]);\n      addedge2(n,t,1,0);\n      totcost+=fl*nowcost;totflow+=fl;\n   }\n   return totcost;\n}\nint main()\n{\n   read(n1) read(n2)\n   int S=0;\n   For(i,n1)\n   {\n      read(p[i]);\n      S+=p[i];\n   }\n   n=n1+n2+2,s=n-1,t=n;\n   For(i,n1)\n   {\n      addedge2(s,i,p[i],0);\n   }\n   For(i,n2)\n   {\n      addedge2(n1+i,t,1,0);\n      who_cook_num[n1+i][0]=i,who_cook_num[n1+i][1]=1;\n   }\n   For(i,n1)\n      For(j,n2)\n      {\n         read(tim[i][j]);\n         addedge2(i,j+n1,1,tim[i][j]);\n      }\n   cout<<costflow(s)<<endl;\nreturn 0;\n}\n```",
        "postTime": 1510743148,
        "uid": 2519,
        "name": "\u81f3\u5c0a\u65e0\u654c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2050 \u3010\u7f8e\u98df\u8282\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define inf 1e9\n#define id(i,j) ((i-1)*p+j+n)\n#define left(x) ((x-n-1)/p+1)\n#define right(x) ((x-n-1)%p+1)\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n} \nint n,m,cnt=-1,first[100010],dis[100010],vis[100010],pre[100010],limit[100010];\nstruct edge{\n    int to,next,w,cap;\n}a[10000010];\ninline void add(int u,int v,int w,int cap){\n    a[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nint q[200010],ans,cost[50][110],p;\nbool spfa(int s,int t){\n    int head=0,tail=1,u,v,w,i;\n    memset(dis,-1,sizeof(dis));memset(vis,0,sizeof(vis));\n    memset(pre,-1,sizeof(pre));memset(limit,0,sizeof(limit));\n    q[0]=s;vis[s]=1;dis[s]=0;limit[s]=inf;\n    while(head<tail){\n        u=q[head++];vis[u]=0;\n        for(i=first[u];~i;i=a[i].next){\n            v=a[i].to;w=a[i].w;\n            if(a[i].cap&&((dis[v]==-1)||(dis[v]>dis[u]+w))){\n                dis[v]=dis[u]+w;\n                pre[v]=i;limit[v]=min(limit[u],a[i].cap);\n                if(!vis[v]) q[tail++]=v,vis[v]=1;\n            }\n        }\n    }\n    return ~dis[t];\n}\nvoid mcmf(int s,int t){\n    int u,i;\n    while(spfa(s,t)){//\u8fd9\u91cc\u6700\u591asigma(p[i])\u6b21\n        for(u=t;~pre[u];u=a[pre[u]^1].to){\n            a[pre[u]].cap-=limit[t];a[pre[u]^1].cap+=limit[t];\n            ans+=limit[t]*a[pre[u]].w;\n        }//\u8dd1\u5b8c\u4e00\u6b21\u66f4\u65b0\u7b54\u6848\n        u=a[pre[t]^1].to;//u\u5c31\u662f\u5f53\u524d\u6d88\u8017\u7684\u4e8c\u5143\u7ec4\uff0cu+1\u5c31\u662f\u4e0b\u4e00\u4e2a\u4e8c\u5143\u7ec4\n        add(u+1,t,0,1);\n        for(i=1;i<=n;i++) add(i,u+1,cost[i][left(u+1)]*right(u+1),1);//\u52a0\u4e0a\u5bf9\u5e94\u7684\u4e0b\u4e00\u7ec4\u8fb9\n    }\n}\nint main(){\n    \n        for(j=1;j<=m;j++){\n            cost[i][j]=read();\n            add(i,id(j,1),cost[i][j],1);//\u521d\u59cb\u8fb9\n        }\n    }\n    for(j=1;j<=m;j++) add(id(j,1),n+p*m+1,0,1);\n    mcmf(0,n+p*m+1);\n    cout<<ans<<endl;\n}\n```\n30\u5206\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define inf 1e9\n#define id(i,j) ((i-1)*p+j+n)\n#define left(x) ((x-n-1)/p+1)\n#define right(x) ((x-n-1)%p+1)\nusing namespace std;\ninline int read(){\n    int re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n} \nint n,m,cnt=-1,first[100010],dis[100010],vis[100010],pre[100010],limit[100010];\nstruct edge{\n    int to,next,w,cap;\n}a[10000010];\ninline void add(int u,int v,int w,int cap){\n    a[++cnt]=(edge){v,first[u],w,cap};first[u]=cnt;\n    a[++cnt]=(edge){u,first[v],-w,0};first[v]=cnt;\n}\nint q[200010],ans,cost[50][110],p;\nbool spfa(int s,int t){\n    int head=0,tail=1,u,v,w,i;\n    memset(dis,-1,sizeof(dis));memset(vis,0,sizeof(vis));\n    memset(pre,-1,sizeof(pre));memset(limit,0,sizeof(limit));\n    q[0]=s;vis[s]=1;dis[s]=0;limit[s]=inf;\n    while(head<tail){\n        u=q[head++];vis[u]=0;\n        for(i=first[u];~i;i=a[i].next){\n            v=a[i].to;w=a[i].w;\n            if(a[i].cap&&((dis[v]==-1)||(dis[v]>dis[u]+w))){\n                dis[v]=dis[u]+w;\n                pre[v]=i;limit[v]=min(limit[u],a[i].cap);\n                if(!vis[v]) q[tail++]=v,vis[v]=1;\n            }\n        }\n    }\n    return ~dis[t];\n}\nvoid mcmf(int s,int t){\n    int u,i;\n    while(spfa(s,t)){//\u8fd9\u91cc\u6700\u591asigma(p[i])\u6b21\n        for(u=t;~pre[u];u=a[pre[u]^1].to){\n            a[pre[u]].cap-=limit[t];a[pre[u]^1].cap+=limit[t];\n            ans+=limit[t]*a[pre[u]].w;\n        }//\u8dd1\u5b8c\u4e00\u6b21\u66f4\u65b0\u7b54\u6848\n        u=a[pre[t]^1].to;//u\u5c31\u662f\u5f53\u524d\u6d88\u8017\u7684\u4e8c\u5143\u7ec4\uff0cu+1\u5c31\u662f\u4e0b\u4e00\u4e2a\u4e8c\u5143\u7ec4\n        add(u+1,t,0,1);\n        for(i=1;i<=n;i++) add(i,u+1,cost[i][left(u+1)]*right(u+1),1);//\u52a0\u4e0a\u5bf9\u5e94\u7684\u4e0b\u4e00\u7ec4\u8fb9\n    }\n}\nint main(){\n    memset(first,-1,sizeof(first));int i,j,t1;\n    n=read();m=read();\n    for(i=1;i<=n;i++){\n        t1=read();p+=t1;\n        add(0,i,0,t1);\n    }\n    for(i=1;i<=n;i++){\n        for(j=1;j<=m;j++){\n            cost[i][j]=read();\n            add(i,id(j,1),cost[i][j],1);//\u521d\u59cb\u8fb9\n        }\n    }\n    for(j=1;j<=m;j++) add(id(j,1),n+p*m+1,0,1);\n    mcmf(0,n+p*m+1);\n    cout<<ans<<endl;\n}\n```\n100\u5206\n",
        "postTime": 1538813165,
        "uid": 122419,
        "name": "\u4f60\u7956\u5976\u6211\u5f88ok",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2050 \u3010[NOI2012]\u7f8e\u98df\u8282\u3011"
    }
]