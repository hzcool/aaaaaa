[
    {
        "content": "\u2026\u2026\u7f51\u4e0a\u7684\u8d2a\u5fc3\u9898\u89e3\u592a\u795e\u5566\u2026\u2026\n\n\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u5b9e\u5728\u662f\u592a\u7cbe\u5999\u4e86\u2026\u2026\uff0c\u8fd9\u91cc\u8bf4\u4e00\u4e2a\u4e0d\u662f\u90a3\u4e48\u96be\u60f3,\u4e5f\u4e0d\u90a3\u4e48\u96be\u7406\u89e3\u7684\u505a\u6cd5\uff0c\u4e0d\u9700\u8981\u5e76\u67e5\u96c6\n\n## \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u76f4\u63a5\u505a\u7684\u8bdd\u6839\u672c\u65e0\u4ece\u4e0b\u624b\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u6ce2\u5947\u602a\u7684\u64cd\u4f5c\u2026\u2026\u6bd4\u5982\u65f6\u5149\u5012\u6d41\n\n\u73b0\u5728\u6211\u4eec\u53cd\u8f6c\u8fd9p\u5929\u7684\u6d41\u7a0b\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u67d0\u4e9b\u83dc\u4f1a\u5728\u67d0\u4e9b\u65f6\u95f4\u7a81\u7136\u51fa\u73b0\uff0c\u4e4b\u540e\u6bcf\u4e00\u5929\u90fd\u4f1a\u8fd0\u8fc7\u6765$x_{i}$\u5355\u4f4d\u7684\u8fd9\u79cd\u83dc\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8003\u8651\u852c\u83dc\u4f1a\u574f\u6389\u7684\u95ee\u9898\u4e86\n\n\u6211\u4eec\u53d1\u73b0\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u5356\u83dc\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u6211\u4eec\u8fd0\u83dc\u7684\u60c5\u51b5\uff0c\u4e0d\u4f1a\u5b58\u5728\u6211\u628a\u8d35\u7684\u83dc\u7559\u7740\u4ee5\u540e\u5356\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u73b0\u5728\u4ec0\u4e48\u65f6\u5019\u5356\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u540e\u8fb9\u53ef\u80fd\u4f1a\u6709\u66f4\u597d\u7684\u83dc\u8fd0\u8fc7\u6765\uff0c\u4e0d\u5982\u4e3a\u5c06\u6765\u817e\u51fa\u7a7a\u95f4\uff0c\u6240\u4ee5\u73b0\u5728\u5404\u6b65\u7684\u51b3\u7b56\u5b8c\u5168\u65e0\u5173\u2026\u2026\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8d2a\u5fc3\uff0c\u5728\u6bcf\u4e00\u5929\u9009\u62e9\u6700\u8d35\u7684\u524dm\u79cd\u83dc\u5356\u6389\uff0c\u7136\u540e\u5904\u7406\u4e00\u4e0b\u7b2c\u4e00\u6b21\u5356\u83dc\u7684\u65f6\u5019\u7684\u989d\u5916\u6536\u76ca\u5373\u53ef\n\n\u7136\u540e\u73b0\u5728\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86NOIP\u7ea7\u522b\u7684\u5927\u6a21\u62df\u9898\u4e86\uff0c\u57fa\u672c\u601d\u8def\u5c31\u662f\u5f00\u4e00\u4e2a\u5806\u7136\u540e\u4e71\u4e03\u516b\u7cdf\u7ef4\u62a4\u4e00\u5806\u4e1c\u897f\u5c31\u591f\u4e86\n\n\u4f46\u662f\u6ce8\u610f\u5230k\u6700\u5927\u662f$10^5$\u7684\u91cf\u7ea7,(\u56e0\u4e3a\u6bcf\u6b21\u8be2\u95ee\u4e92\u4e0d\u76f8\u540c)\uff0c\u6211\u4eec\u8003\u8651\u5230\u8fd9\u6837\u505a\u53ef\u80fd\u4f1a\u534e\u4e3d\u7684T\u98de\u6389\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u591a\u7ec4\u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u9012\u63a8\uff0c\u5373\u662f\u5426\u53ef\u4ee5\u7531p\u7684\u7b54\u6848\u9012\u63a8\u5230p-1\u7684\u7b54\u6848\uff0c\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u9012\u63a8\u4e86\n\n\u7531\u4e8e\u6211\u4eec\u524dp\u5929\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u51b3\u7b56\u90fd\u53ef\u4ee5\u5728\u524dp-1\u5929\u505a\u51fa\u7684\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u5356\u83dc\u7684\u6536\u76ca\u548c\u65f6\u95f4\u65e0\u5173\uff0c\u5373\u6211\u9664\u4e86\u7b2c\u4e00\u6b21\u5356\u83dc\u4e4b\u5916\uff0c\u4ec0\u4e48\u65f6\u5019\u5356\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e8b\u5b9e\u4e0a\u4f1a\u53d1\u73b0p\u548cp-1\u7684\u552f\u4e00\u533a\u522b\u5c31\u5728\u4e8e\u6211\u4eec\u5c11\u5356\u4e86m\u4e2a\u5355\u4f4d\u7684\u83dc\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u6311\u51fam\u4e2a\u6536\u76ca\u6700\u5c0f\u7684\u83dc\u7136\u540e\u6254\u6389\u4e0d\u8981\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ecep\u9012\u63a8\u5230p-1\u4e86\u2026\u2026\n\n\u4e3a\u4e86\u4f53\u73b0\u9898\u76ee\u7684\u5728\u7ebf\u6027\uff0c\u6211\u76f4\u63a5\u6253\u4e86\u4e00\u4e2ap\u4ece1\u52301e5\u7684\u8868\uff0c\u7136\u540e\u6bcf\u6b21\u5904\u7406\u8be2\u95ee\u7684\u65f6\u5019\u76f4\u63a5\u67e5\u8868\u5373\u53ef\n_____________\n\n\u4e0a\u9762\u8bf4\u7684\u53ea\u662f\u4e00\u4e2a\u5927\u81f4\u7684\u601d\u8def\uff0c\u771f\u6b63\u5199\u8d77\u6765\u7684\u8bdd\u8fd9\u9053\u9898\u4f1a\u6709\u4e00\u5806\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\n\n\u771f\u6b63\u5199\u8d77\u6765\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5176\u5b9e\u5e76\u6ca1\u6709\u60f3\u50cf\u7684\u90a3\u4e48\u597d\u5199\uff0c\u6240\u4ee5\u6211\u4eec\u5927\u81f4\u63cf\u8ff0\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b\n\n1.\u751f\u6210p=1e5\u7684\u89e3\n\n1.1 \u6bcf\u4e00\u5929\u5f00\u4e00\u4e2avector\u66b4\u529b\u5b58\u50a8\u8fd9\u4e00\u5929\u4f1a\u6709\u4ec0\u4e48\u852c\u83dc\u51fa\u73b0\uff0c\u6211\u4eec\u8ba4\u4e3a$x_{i}=0$\u7684\u83dc\u5168\u90e8\u5728n=1e5\u7684\u5929\u51fa\u73b0\uff0c\u6ce8\u610f\u8fd9\u91cc\u8981\u7528\u4e0a\u53d6\u6574\u8ba1\u7b97\u5929\u6570\n\n1.2\u4ece\u7b2c1e5\u5929\u4ece\u540e\u5411\u524d\u626b\uff0c\u5f00\u4e00\u4e2a\u5806\u5b58\u50a8\u852c\u83dc\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u5929\u628a\u8fd9\u4e2avector\u91cc\u7684\u6240\u6709\u83dc\u6309\u7167$a_{i}+s_{i}$push\u5230\u5806\u91cc\n\n1.2.1\uff0c\u4ee4lim=m\uff0c\u91cd\u590d\u4ee5\u4e0b\u8fc7\u7a0b\u76f4\u5230lim=0\n\n1.2.2 \u4ece\u5806\u4e2d\u62ff\u51fa\u6743\u503c\u6700\u5927\u7684\u83dc\uff0c\u5224\u65ad\u8fd9\u79cd\u83dc\u6709\u6ca1\u6709\u88ab\u5356\u51fa\u8fc7(\u8fd9\u4e2a\u53ef\u4ee5\u5f00\u4e00\u4e2abool\u6570\u7ec4),\u5982\u679c\u5356\u51fa\u8fc7\u7684\u8bdd\u8ba1\u7b97\u8fd9\u4e00\u5929\u8fd9\u79cd\u83dc\u8fd8\u6709\u591a\u5c11=$c_{i}-(day-1)x_{i}$-\u8fd9\u79cd\u83dc\u5df2\u7ecf\u5356\u51fa\u7684\u6570\u91cf\uff0c\u7136\u540e\u548clim\u53d6\u4e2amin\u53bb\u51cf\uff0c\u540c\u65f6\u66f4\u65b0\u4e00\u4e0b\u5356\u51fa\u7684\u6570\u91cf\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u83dc\u63d2\u5165\u5230\u4e00\u4e2a\u961f\u5217\u91cc\u88c5\u7740\u5907\u7528\n\n1.2.2\u5982\u679c\u6ca1\u6709\u5356\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u5356\u4e00\u4e2a\uff0c\u83b7\u5f97\u8fd9$a_{i}+s_{i}$\u7684\u6743\u503c\uff0c\u7136\u540e\u7ed9\u5806\u91cc\u91cd\u65b0\u63d2\u5165\u4e00\u4e2a$a_{i}$\u7684\u6743\u503c\n\n1.2.3\u628a\u521a\u624d\u5907\u7528\u961f\u5217\u91cc\u7684\u5143\u7d20\u91cd\u65b0\u63d2\u56de\u961f\u5217\u91cc\uff0c\u5982\u679c\u8fd9\u79cd\u83dc\u88ab\u5356\u5149\u4e86\u5c31\u4e0d\u5fc5\u63d2\u5165\u4e86\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u751f\u6210\u4e86\u4e00\u4e2ap=1e5\u7684\u89e3\uff0c\u9012\u63a8p-1\u7684\u6d41\u7a0b\u548c\u521a\u624d\u7684\u7c7b\u4f3c\uff0c\u53ea\u662f\u6ce8\u610f\u6211\u4eec\u5728\u6254\u83dc\u7684\u65f6\u5019\u5148\u6254\u52301\uff0c\u7136\u540e\u91cd\u65b0\u63d2\u4e00\u4e2a\u6743\u503c\u4e3a$a_{i}+s_{i}$\u7684\u70b9\u5230\u5c0f\u6839\u5806\u91cc\u53bb\u6765\u5904\u7406\u653e\u5f03$S_{i}$\u7684\u60c5\u51b5\uff0c\u7136\u540e\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u5f20\u7b54\u6848\u8868\uff0c\u5c31\u53ef\u4ee5$O(1)$\u7684\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\u4e86~\n\n\u7b97\u6cd5\u590d\u6742\u5ea6$O(pmlog(n))$\u968f\u673a\u6570\u636e\u4e0bm\u6781\u6709\u53ef\u80fd\u8dd1\u4e0d\u6ee1\u2026\u2026\u5177\u4f53\u7ec6\u8282\u7684\u8bdd\u770b\u4ee3\u7801\u5427\u2026\u2026\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;const int N=1e5+10;typedef long long ll;\nint n;int m;int k;ll a[N];ll s[N];ll x[N];ll c[N];ll ans[N];\nstruct data\n{\n\tll v;int pos;\n\tfriend bool operator <(data a,data b){return a.v<b.v;}\n};priority_queue <data> pq;\nstruct nod\n{\n\tll v;int pos;\n\tfriend bool operator <(nod a,nod b){return a.v>b.v;}\n};priority_queue <nod> hp;\nqueue <int> us;int p=1e5;ll tot;\nvector <int> app[N];bool used[N];ll sd[N];\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++){scanf(\"%d%d%d%d\",&a[i],&s[i],&c[i],&x[i]);}\n\tfor(int i=1;i<=n;i++)//\u5904\u7406\u6bcf\u5929\u51fa\u73b0\u7684\u83dc \n\t{\n\t\tif(x[i]==0){app[p].push_back(i);}\n\t\telse {app[min((ll)p,(c[i]+x[i]-1)/x[i])].push_back(i);}\n\t}\n\tfor(int i=p;i>=1;i--)\n\t{\n\t\tfor(int j=0;j<app[i].size();j++)pq.push((data){a[app[i][j]]+s[app[i][j]],app[i][j]});\n\t\tif(pq.empty()){continue;}//\u5148\u63d2\u5165\u6240\u6709\u53ef\u80fd\u7684\u83dc \n\t\tfor(ll lim=m;lim&&!pq.empty();pq.pop())\n\t\t{\n\t\t\tdata now=pq.top();//\u53d6\u51fa\u5806\u5934 \n\t\t\tif(used[now.pos]==false)//\u83b7\u5f97si \n\t\t\t{\n\t\t\t\tused[now.pos]=true;ans[p]+=now.v;sd[now.pos]++;lim--;\n\t\t\t\tif(c[now.pos]!=1){pq.push((data){a[now.pos],now.pos});}//\u91cd\u65b0\u63d2\u56de\u53bb \n\t\t\t}\n\t\t\telse //\u8d2a\u5fc3\u7684\u591a\u53d6 \n\t\t\t{\n\t\t\t\tll rem=c[now.pos]-sd[now.pos]-(i-1)*x[now.pos];//\u5269\u4f59\u7684 \n\t\t\t\tll del=min(rem,lim);ans[p]+=del*now.v;sd[now.pos]+=del;lim-=del;\n\t\t\t\tif(sd[now.pos]!=c[now.pos]){us.push(now.pos);}//\u653e\u5230\u56de\u6536\u7684\u961f\u5217\u91cc \n\t\t\t}\n\t\t}\n\t\tfor(;!us.empty();us.pop()){int nw=us.front();pq.push((data){a[nw],nw});}//\u91cd\u65b0\u63d2\u56de\u53bb \n\t}\n\tfor(int i=1;i<=n;i++)//\u9012\u63a8ans \n\t{\n\t\tif(sd[i]==1){hp.push((nod){s[i]+a[i],i});}//\u7279\u5224si \n\t\telse if(sd[i]!=0){hp.push((nod){a[i],i});}tot+=sd[i];//\u7edf\u8ba1\u4e0b\u73b0\u5728\u5356\u4e86\u591a\u5c11\u83dc \n\t}\n\tfor(int i=p-1;i>=1;i--)\n\t{\n\t\tans[i]=ans[i+1];if(tot<=m*i){continue;}//\u5982\u679c\u8fd8\u662f\u53ef\u4ee5\u5356\u4e00\u6837\u7684\u83dc\u5c31\u4e0d\u6254\u83dc \n\t\tfor(ll lim=tot-m*i;lim&&!hp.empty();)//\u5426\u5219\u6254\u4ee3\u4ef7\u548c\u6700\u5c0f\u7684\u83dc \n\t\t{\n\t\t\tnod now=hp.top();hp.pop();//\u53d6\u51fa\u5806\u5934 \n\t\t\tif(sd[now.pos]!=1)//\u6254\u6389\u975esi\u90e8\u5206 \n\t\t\t{\n\t\t\t\tll del=min(sd[now.pos]-1,lim);\n\t\t\t\tsd[now.pos]-=del;lim-=del;ans[i]-=del*now.v;\n\t\t\t\tif(sd[now.pos]==1){hp.push((nod){a[now.pos]+s[now.pos],now.pos});}\n\t\t\t\telse {hp.push((nod){a[now.pos],now.pos});}//\u5224\u4e00\u4e0b\u662f\u4e0d\u662f\u9700\u8981\u63d2\u56de\u53bb \n\t\t\t}\n\t\t\telse {lim--;sd[now.pos]--;ans[i]-=now.v;}//\u6254\u6389si\u90e8\u5206 \n\t\t}tot=m*i;//\u66f4\u6539tot \n\t}\n\tfor(int i=1,t;i<=k;i++){scanf(\"%d\",&t);printf(\"%lld\\n\",ans[t]);}//\u67e5\u8868\u51fa\u7b54\u6848 \n\treturn 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```\n\n\n\n\n",
        "postTime": 1525526771,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017]\u852c\u83dc\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u7684\u662f\u5f88\u795e\u7684\u8d2a\u5fc3\u5440\u3002\u3002\u7f51\u4e0a\u7684\u9898\u89e3\u770b\u4e86\u534a\u5929\u624d\u7406\u89e3\uff0c\u8bf4\u4e00\u4e0b\u81ea\u5df1\u7684\u60f3\u6cd5\u5427  \n\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u540c\u4e8e\u4e4b\u524d\u9898\u89e3\u91cc\u7684\u65f6\u5149\u56de\u6d41\uff0c\u4e5f\u4e0d\u662f\u57fa\u4e8e\u5bf9\u5929\u6570\u7684\u8003\u8651\uff0c\u800c\u662f\u8003\u8651\u4f60\u6240\u5356\u7684\u6bcf\u4e00\u4e2a\u83dc  \n\u9996\u5148\u7684\u4e00\u70b9\u662f\uff0c\u8d35\u7684\u83dc\u80af\u5b9a\u8981\u5148\u5356\uff0c\u4f46\u540c\u65f6\uff0c\u83dc\u4e5f\u8981\u5c3d\u91cf\u5728\u8981\u53d8\u8d28\u65f6\u5356\uff08\u542c\u8d77\u6765\u6709\u4e9b\u77db\u76fe\uff0c\u7136\u800c\u5e76\u4e0d   \n\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6700\u8fd1\u7684\u8fd8\u80fd\u5356\u7684\u5929\u6570\uff0c\u628a\u83dc\u5c3d\u91cf\u5f80\u540e\u9762\u585e\uff0c\u5982\u679c\u6ca1\u4f4d\u7f6e\u4e86\u8bf4\u660e\u8fd9\u9897\u83dc\u4e0d\u9700\u8981\u4e86\n\u5148\u770b\u4e00\u4e0b\u4ee3\u7801 :\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MP make_pair\ntypedef long long ll;\nconst int N=1000005,mx=100000;\nint n,m,k;\nint a[N],s[N],c[N],x[N];\nint fa[N],num[N];\nll ans[N];\npriority_queue<pair<int,int> > q;\ninline int findf(int x){\n    return x==fa[x]?x:fa[x]=findf(fa[x]);\n}\n\ninline int read(){\n    int s=0;char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch)) s=s*10+ch-'0',ch=getchar();\n    return s;\n}\n\nint main(){\n    n=read(),m=read(),k=read();\n    for(int i=1;i<=n;i++) {\n        a[i]=read(),s[i]=read(),c[i]=read(),x[i]=read();\n        q.push(MP(a[i]+s[i],i));\n    }\n    for(int i=1;i<=mx;i++) fa[i]=i,num[i]=m;\n    int cnt=0,profit,t,day;\n    while(!q.empty()){\n        profit=q.top().first,t=q.top().second;q.pop();\n        if(!x[t]) day=findf(mx);\n        else day=findf(min(mx,(c[t]-1)/x[t]+1));\n        if(!day) continue;\n        c[t]--,num[day]--,cnt++;\n        if(!num[day]) fa[day]=findf(day-1);\n        if(c[t]) q.push(MP(a[t],t));\n        ans[cnt]=ans[cnt-1]+profit;\n    }\n    while(k--) printf(\"%lld\\n\",ans[min(cnt,m*read())]);\n    return 0;\n}\n```  \n\u5982\u679c\u4f60\u80fd\u628a\u8fd9\u4efd\u4ee3\u7801\u7406\u89e3\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u7591\u95ee:\u5982\u679c\u4f60\u628a\u83dc\u5f80\u540e\u9762\u653e\uff0c\u90a3\u5f53\u56de\u7b54\u65f6pj\u6bd4\u8f83\u5c0f\u662f\u4e0d\u662f\u6709\u95ee\u9898\u5462\uff1f\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u8868\u9762\u4e0a\u4f60\u628a\u83dc\u5f80\u540e\u653e\uff0c\u4f46\u5b9e\u9645\u4e0a\u90a3\u4e9b\u83dc\u4e5f\u53ef\u4ee5\u5f80\u524d\u653e\uff0c\u7b54\u6848\u5176\u5b9e\u4e3b\u8981\u4e0e\u4f60\u4e00\u5171\u80fd\u5356\u591a\u5c11\u83dc\u6709\u5173\u3002  \n~~\u4f3c\u4e4e\u8fd8\u662f\u5f88\u96be\u7406\u89e3\u6765\u7740~~",
        "postTime": 1549799670,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017]\u852c\u83dc\u3011"
    },
    {
        "content": "\u66f4\u4e25\u8c28\u7684\u6b63\u786e\u6027\u5206\u6790\u3002\n\n\u66f4\u81ea\u7136\u7684\u975e\u542f\u53d1\u5f0f\u601d\u8def\u3002\uff08\u7136\u800c\u4e5f\u6709\u70b9\u96be\u60f3\uff09\n\n\u66f4\u5f3a\u7684\u6269\u5c55\u6027\u3002\uff08\u7136\u800c\u4e5f\u6ca1\u505a\u8fc7\u51e0\u4e2a\u9898\uff09\n\n~~\u66f4\u591a\u7684\u8349\u7a3f\u7eb8\u3002~~\n\n**\u5e7f\u544a** \uff1a [\u6a21\u62df\u8d39\u7528\u6d41\u5c0f\u8bb0](https://www.luogu.com.cn/blog/command-block/mu-ni-fei-yong-liu-xiao-ji) \uff08\u5efa\u8bae\u9605\u8bfb\uff09\n\n------------\n\n**\u9898\u610f** : \u6709 $n$ \u79cd\u852c\u83dc\uff0c\u7b2c $i$ \u79cd\u852c\u83dc\u5355\u4ef7\u662f $a_i$\uff0c\u521d\u59cb\u65f6\u6570\u91cf\u4e3a $c_i$\uff0c\u82e5\u4e0d\u51fa\u552e\uff0c\u6bcf\u5929\u6709 $x_i$ \u4efd\u4f1a\u53d8\u8d28\u3002\u521d\u6b21\u51fa\u552e\u7b2c $i$ \u79cd\u852c\u83dc\u53ef\u4ee5\u83b7\u5f97 $s_i$ \u7684\u5956\u52b1\u3002\n\n\u6bcf\u5929\u53ef\u4ee5\u5356\u6389 $m$ \u4e2a\u672a\u53d8\u8d28\u7684\u852c\u83dc\u3002\u6709 $k$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u95ee\u5728 $1\\sim p$ \u5929\u51fa\u552e\u852c\u83dc\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\u3002\n \n------------\n\n\u9996\u5148\u89e3\u91ca\u4e00\u4e0b\u9898\u610f\u3002\n\n**\u540c\u79cd\u852c\u83dc\u4e2d**\uff0c\u6bcf\u68f5\u852c\u83dc\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u53d8\u8d28\u65f6\u95f4\uff0c\u5728\u4e0d\u51fa\u552e\u7684\u60c5\u51b5\u4e0b\uff0c\u6548\u679c\u662f\u6bcf\u5929\u6709 $x_i$ \u4efd\u4f1a\u53d8\u8d28\u3002\u4f46\u53ef\u4ee5\u51fa\u552e\u8fd9\u4e9b\u8f83\u5feb\u53d8\u8d28\u7684\u83dc\uff0c\u4fdd\u7559\u90a3\u4e9b\u8f83\u6162\u53d8\u8d28\u7684\u83dc\u3002\n\n- **\u6b63\u786e\u7406\u89e3** : \u6bcf\u5929\u4f1a\u6709 $3$ \u68f5\u83dc\u53d8\u8d28\uff0c\u5219\u53d8\u8d28\u65f6\u95f4\u4e3a $\\{1,1,1,2,2,2,3,3,3...\\}$\u3002\u82e5\u7b2c\u4e00\u5929\u5356\u6389\u4e86\u4e24\u68f5 $[1]$ \uff0c\u5219\u53ea\u6709\u4e00\u68f5 $[1]$ \u4f1a\u53d8\u8d28\u3002\n\n- **\u9519\u8bef\u7406\u89e3** : \u65e0\u8bba\u600e\u4e48\u5356\uff0c\u5269\u4f59\u7684\u8be5\u79cd\u852c\u83dc\u90fd\u4f1a\u53d8\u8d28 $3$ \u4e2a\u3002\n\n\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u5c06\u852c\u83dc\u518d\u6309\u7167\u8fc7\u671f\u65f6\u95f4\u5206\u7c7b\u4e3a\u4e0d\u540c\u7c7b\u522b\u7684\u83dc\u3002\n\n------------\n\n- $\\small\\blacksquare$ **\u8d39\u7528\u6d41\u6a21\u578b**\n\n\u8003\u8651**\u65f6\u95f4\u5012\u6d41**\uff0c\u95ee\u9898\u53d8\u4e3a : \u6bcf\u5929\u90fd\u4f1a\u52a0\u5165\u4e00\u4e9b\u83dc\uff08\u539f\u6765\u4f1a\u53d8\u8d28\u7684\u83dc\uff09\uff0c\u83dc\u53ef\u4ee5\u65e0\u9650\u671f\u4fdd\u5b58\uff0c\u4f46\u6bcf\u5929\u6700\u591a\u51fa\u552e $m$ \u4e2a\u83dc\uff0c\u95ee\u6700\u5927\u603b\u6536\u76ca\u3002\n\n\u4e3a\u7b2c $t$ \u5929\u7684\u7b2c $i$ \u79cd\u852c\u83dc\u5efa\u7acb\u70b9 $(t,i)$\u3002\u5efa\u8fb9 $S\\rightarrow (t,i)$ \uff0c\u8fb9\u6743\u4e3a $a_i$\uff0c\u5bb9\u91cf\u4e3a\u5f53\u5929\u52a0\u5165\u7684\u852c\u83dc\u6570\u76ee\u3002\n\n\u8fde\u8fb9 $(t,i)\\rightarrow (t+1,i)$ \uff0c\u5bb9\u91cf\u4e0d\u9650\uff0c\u8868\u793a\u53ef\u4ee5\u5c06\u852c\u83dc\u7559\u5230\u4e0b\u4e00\u5929\u3002\n\n\u4e3a\u7b2c $t$ \u5929\u5efa\u7acb\u4e00\u4e2a\u70b9\u8868\u793a\u51fa\u552e\uff0c\u8bb0\u4e3a $[t]$ \u3002\u5efa\u8fb9 $[t]\\rightarrow T$ \uff0c\u5bb9\u91cf\u4e3a $m$\u3002\n\n\u5efa\u8fb9 $(t,i)\\rightarrow[t]$ \uff0c\u5bb9\u91cf\u4e0d\u9650\u3002\n\n\u5728\u83dc $i$ **\u7b2c\u4e00\u6b21\u51fa\u73b0**\u7684\u65f6\u95f4\uff0c\u4ece $S\\rightarrow (t,i)$ \u4e2d\u5206\u51fa\u4e00\u4e2a\u6d41\u91cf\uff08\u7279\u6b8a\u83dc\uff09\uff0c\u8fb9\u6743\u6539\u4e3a $a_i+s_i$ \uff0c\u8868\u793a\u51fa\u552e\u5956\u52b1\u3002\n\n\uff08\u4e0d\u96be\u53d1\u73b0\uff0c\u4efb\u610f\u4e00\u79cd\u6ca1\u6709\u5356\u6389\u201c\u7279\u6b8a\u83dc\u201d\u60c5\u51b5\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5356\u6389\u201c\u7279\u6b8a\u83dc\u201d\u7684\u60c5\u51b5\u800c\u589e\u52a0\u6536\u76ca\uff0c\u7b97\u6cd5\u4e00\u5b9a\u4e0d\u4f1a\u9519\u8fc7\u5956\u52b1\uff09\n\n\u7136\u540e\u6c42\u89e3\u6700\u5927\u8d39\u7528\u4efb\u610f\u6d41\u3002\n\n- $\\small\\blacksquare$ **\u6a21\u62df\u8d39\u7528\u6d41** : \u83b7\u5f97\u6027\u8d28 & \u8d2a\u5fc3\u7b97\u6cd5\n\n\u9996\u5148\u89c2\u5bdf\u5efa\u56fe :\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cyjctszl.png)\n\n\u53ea\u6709\u6e90\u8fb9\u6709\u6743\u503c\uff0c\u5176\u4f59\u8fb9\u7684\u6743\u503c\u5747\u4e3a $0$\u3002\n\n\u8003\u8651\u4f7f\u7528 \u201c**\u589e\u91cf-\u6700\u5927\u8d39\u7528\u4efb\u610f\u6d41**\u201d \u6a21\u578b\u3002\n\n\u65f6\u95f4\u5012\u6d41\u540e\uff0c\u539f\u6765\u9650\u5236\u53ea\u80fd\u5728\u524d $1\\sim p$ \u5929\uff08\u4e00\u4e2a\u524d\u7f00\uff09\u51fa\u552e\uff0c\u73b0\u5728\u53d8\u4e3a\u5728\u4e00\u4e2a\u524d\u7f00\u4e0d\u80fd\u51fa\u552e\uff0c\u4e4b\u540e\u624d\u80fd\u51fa\u552e\u3002\n\n**\u4ece\u540e\u5411\u524d**\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e00\u5929\u7684\u51fa\u552e\u70b9\uff08\u8fd9\u6837\u624d\u80fd\u7b26\u5408\u539f\u6765\u7684\u65f6\u95f4\u987a\u5e8f\uff09\uff0c\u89c2\u5bdf\u4f1a\u65b0\u5f62\u6210\u600e\u6837\u7684\u201c\u6e90\u6c47\u8def\u201d\u6216\u201c\u73af\u201d :\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a9qvsm06.png)\n\n\u56fe $\\rm I$ : \u672a\u52a0\u5165\u51fa\u552e\u70b9\u65f6\u7684\u56fe\u3002\u6b64\u65f6\u56fe\u4e2d\u5373\u6ca1\u6709\u6e90\u6c47\u8def\u4e5f\u6ca1\u6709\u73af\uff0c\u65e0\u9700\u5904\u7406\u3002\n\n\u56fe $\\rm II$ : \u7ea2\u8272\u90e8\u5206\u4e3a\u65b0\u52a0\u5165\u7684\u70b9\u548c\u8fb9\uff0c\u8fb9\u7684\u65b9\u5411\u662f\u7ed9\u5b9a\u7684\u3002\u9ed1\u8272\u90e8\u5206\u4e3a\u4e4b\u524d\u7684\u70b9\u548c\u8fb9\uff0c\u8fb9\u7684\u65b9\u5411\u5e76\u4e0d\u786e\u5b9a\u3002\n\n\u56fe $\\rm III$ : \u4e09\u79cd\u65b0\u7684\u6e90\u6c47\u8def\u3002\u5177\u4f53\u610f\u4e49\u65e0\u9700\u5173\u5fc3\u3002\n\n\u56fe $\\rm IV$ : \u4e00\u79cd\u65b0\u7684\u73af\u3002\u548c\u4e0a\u4e00\u9898\u7c7b\u4f3c\uff0c\u8be5\u65b9\u6848\u4e0d\u5982\u5355\u8d70\u4e00\u4e2a\u6e90\u6c47\u8def\uff0c\u53ef\u4ee5\u6392\u9664\u3002\n\n\u56fe $\\rm V$ : \u4e00\u79cd\u65b0\u7684\u73af\u3002\u6ce8\u610f\u5230\u4e0d\u548c S \u76f8\u8fde\u7684\u8fb9\u5747\u65e0\u6743\uff0c\u6545\u8be5\u73af\u4e0d\u53ef\u80fd\u662f\u8d1f\u73af\uff0c\u53ef\u4ee5\u6392\u9664\u3002\n\n\u7efc\u4e0a\uff0c\u53ef\u80fd\u7684\u66f4\u65b0\u64cd\u4f5c\u4e2d\uff0c**\u6240\u6709 S \u7684\u51fa\u8fb9\u4e0d\u4f1a\u9000\u6d41**\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u51b3\u7b56\u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u5f62\u5f0f\u5316\u5730\uff0c\u5728**\u672a\u7ecf\u65f6\u5149\u5012\u6d41\u7684\u539f\u95ee\u9898**\u4e2d\uff0c\u524d $p$ \u5929\u552e\u5356\u852c\u83dc\u7684\u6700\u4f18\u65b9\u6848\uff0c\u662f\u5728\u524d $p-1$ \u552e\u5356\u852c\u83dc\u7684\u6700\u4f18\u65b9\u6848\u7684\u8d85\u96c6\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u8003\u8651\u5148\u6c42\u51fa\u524d $p$ \u5929\u7684\u6700\u4f18\u65b9\u6848\uff0c\u7136\u540e\u63a8\u51fa $1\\sim p-1$ \u5929\u7684\u65b9\u6848\u3002\n\n\u82e5\u524d $p$ \u5929\u7684\u6700\u4f18\u65b9\u6848\u4e3a\u852c\u83dc\u96c6\u5408 $S$ \uff0c\u5219 $S$ \u4e2d\u7684\u6240\u6709\u852c\u83dc\u7684\u8fc7\u671f\u65e5\u671f\u90fd $\\geq p$\u3002\n\n\u5bf9\u4e8e\u7b2c $p'$ \u5929\uff0c\u53ea\u9700\u4fdd\u7559\u5176\u4e2d\u6700\u8d35\u7684 $p'*m$ \uff08\u53ef\u80fd\u4e0d\u8db3\uff09\u68f5\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u5408\u6cd5\u7684\uff0c\u4e14\u662f\u6240\u6709\u5408\u6cd5\u5b50\u96c6\u4e2d\u6700\u4f18\u7684\u3002\n\n\u90a3\u4e48\u5c06 $S$ \u6392\u5e8f\u5c31\u5bb9\u6613\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u6c42\u51fa\u524d $p$ \u5929\u7684\u6700\u4f18\u65b9\u6848\uff0c\u5219\u9700\u8bbe\u8ba1\u53e6\u4e00\u79cd\u6a21\u62df\u8d39\u7528\u6d41\u3002\n\n\u73b0\u5728\u5df2\u7ecf\u6ca1\u6709\u65f6\u5e8f\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4efb\u610f\u987a\u5e8f\u5904\u7406\u8d39\u7528\u6d41\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/95eilgnl.png)\n\n\uff08\u6211\u4eec\u5c06\u601d\u8def\u56de\u5230\u65f6\u5149\u5012\u6d41\u540e\u7684\u5f62\u5f0f\uff09\n\n\u56fe $\\rm I$ : \u7ea2\u8272\u90e8\u5206\u4e3a\u65b0\u52a0\u5165\u7684\u70b9\u548c\u8fb9\uff0c\u9ed1\u8272\u90e8\u5206\u4e3a\u4e4b\u524d\u7684\u70b9\u548c\u8fb9\u3002\n\n\u56fe $\\rm II$ : \u4e00\u79cd\u53ef\u80fd\u7684\u6e90\u6c47\u8def\uff0c\u5bf9\u5e94\u5c06\u4eca\u5929\u52a0\u5165\u7684\u83dc\u76f4\u63a5\u5356\u6389\u3002\n\n\u56fe $\\rm III$ : \u4e00\u79cd\u53ef\u80fd\u7684\u6e90\u6c47\u8def\uff0c\u5bf9\u5e94\u5c06\u4e4b\u524d\u5b58\u4e0b\u7684\u83dc\u5356\u6389\u3002\n\n\u56fe $\\rm IV,V$ : \u4e24\u79cd\u73af\u3002\u548c\u4e0a\u6587\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u6392\u9664\u3002\n\n\u5728\u540c\u4e00\u79cd\u83dc\u4e2d\uff0c\u51fa\u552e\u90a3\u9897\u7684\u83b7\u76ca\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6545\u4f7f\u7528\u5806\u7ef4\u62a4\u5404\u79cd\u83dc\u5373\u53ef\u3002\u5f53\u552e\u7a7a\u65f6\uff0c\u5219\u4ece\u5806\u4e2d\u53d6\u51fa\u3002\n\n\u5f53\u52a0\u5165\u83dc\u65f6\uff0c\u82e5\u539f\u6765\u8fd9\u79cd\u83dc\u552e\u7a7a\uff0c\u5219\u5c06\u5176\u52a0\u5165\u5806\u3002\u8fd9\u9700\u8981\u7ef4\u62a4\u552e\u7a7a\u4e14\u6709\u6301\u7eed\u8f93\u5165\u7684\u83dc\u7684\u96c6\u5408\u3002\n\n\uff08\u8fd8\u6709\u4e00\u70b9\u5173\u4e8e $s$ \u7684\u5c0f\u7ec6\u8282\uff0c\u4e0d\u96be\u5904\u7406\uff09\n\n\u590d\u6742\u5ea6 $O(nm\\log n)$\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define pb push_back\n#define Pr pair<int,int>\n#define mp make_pair\n#define fir first\n#define sec second\n#define ll long long\n#define MaxN 100500\nusing namespace std;\nint a[MaxN],s[MaxN],tot[MaxN],d[MaxN],c[MaxN];\nint n,lim,m,t[MaxN],tim;\nll ans[MaxN*10];\nvector<int> g[MaxN];\nint st[MaxN],tn;\npriority_queue<Pr> q;\nint main()\n{\n  scanf(\"%d%d%d\",&n,&lim,&m);\n  for (int i=1;i<=n;i++)\n    scanf(\"%d%d%d%d\",&a[i],&s[i],&tot[i],&d[i]);\n  for (int i=1;i<=m;i++){\n    scanf(\"%d\",&t[i]);\n    tim=max(tim,t[i]);\n  }\n  for (int i=1;i<=n;i++)\n    if (!d[i])g[tim].pb(i);\n    else g[min((tot[i]+d[i]-1)/d[i],tim)].pb(i);\n  for (int t=tim;t;t--){\n    for (int i=0;i<g[t].size();i++)\n      st[++tn]=g[t][i];\n    for (int i=1;i<=tn;i++){\n      int k=st[i];\n      q.push(mp(!c[k] ? a[k]+s[k] : a[k],k));\n    }tn=0;\n    int cnt=lim;\n    while(cnt){\n      if (q.empty())break;\n      int i=q.top().sec;\n      if (!c[i]){\n        c[i]=1;cnt--;\n        q.pop();\n        if (tot[i]-d[i]*(t-1)>1)q.push(mp(a[i],i));\n        else if (d[i])st[++tn]=i;\n      }else {\n        int cnt2=min(tot[i]-d[i]*(t-1)-c[i],cnt);\n        c[i]+=cnt2;cnt-=cnt2;\n        if (tot[i]-d[i]*(t-1)==c[i])\n          {q.pop();if (d[i])st[++tn]=i;}\n      }\n    }\n  }\n  tn=0;\n  for (int i=1;i<=n;i++){\n    if (c[i])ans[++tn]=a[i]+s[i];\n    for (int j=2;j<=c[i];j++)ans[++tn]=a[i];\n  }sort(ans+1,ans+tn+1);reverse(ans+1,ans+tn+1);\n  for (int i=1;i<=tn;i++)ans[i]+=ans[i-1];\n  for (int i=1;i<=m;i++)\n    printf(\"%lld\\n\",ans[min(tn,t[i]*lim)]);\n  return 0;\n}\n```",
        "postTime": 1623767672,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3\u3010P3826 [NOI2017] \u852c\u83dc\u3011"
    },
    {
        "content": "~~\u54b3\u4e86\u4e00\u4e0b\u5348\u52a0\u4e00\u665a\u4e0a~~\n \n- \u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u4e2a\u771f\u7684\u662f\u4e2a\u795e\u4ed9\u9898\u2026\u2026\u3002\n- \u5148\u819c[yyb\u7684\u9898\u89e3](https://www.cnblogs.com/cjyyb/p/9743710.html)\uff0c\u5199\u7684\u592a\u597d\u4e86\u3002\n- \u9996\u5148\u53cd\u8fc7\u6765\u770b\uff0c\u628a\u852c\u83dc\u8fc7\u671f\u53d8\u6210\u852c\u83dc\u4e00\u70b9\u70b9\u8dd1\u56de\u6765\u3002\n- \u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u540e\u4e00\u5929\u5f80\u524d\u63a8\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u5929\u6709\u4ec0\u4e48\u852c\u83dc\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6700\u540e\u4e00\u5929\u8981\u5356\u4ec0\u4e48\u3002\n- \u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u852c\u83dc\u6700\u540e\u4e00\u6b21\u53d8\u8d28\u5b8c\u6210\u5728\u4ec0\u4e48\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002\n- \u7136\u540e\u518d\u8003\u8651\u4e0a\u4e00\u5929\u2026\u2026\u518d\u4e0a\u4e00\u5929\u2026\u2026\u3002\n- \u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u652f\u6301\u5feb\u901f\u63d2\u5165\uff0c\u67e5\u8be2\u6700\u5927\u503c\uff0c\u5220\u9664\u7684\u6570\u636e\u7ed3\u6784\u3002\u9009\u62e9**\u5927\u6839\u5806**\u3002\n- \u7136\u540e\u6bcf\u6b21\u628a\u5f53\u5929\u51fa\u73b0\u7684\u852c\u83dc\u653e\u8fdb\u5927\u6839\u5806\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u6392\u5e8f\u7684\u6743\u503c\u662f$a_i+s_i$\u3002\n- \u63a5\u4e0b\u6765\u5206\u6790\u5f53\u5929\u53d6$m$\u4e2a\u6700\u5927\u7684\u852c\u83dc\u3002\n- \u9996\u5148\u53d6\u51fa\u4ef7\u503c\u6700\u5927\u7684\u852c\u83dc\u3002\n- \u7136\u540e\u8003\u8651\u4ed6\u662f\u7b2c\u4e00\u6b21\u88ab\u5356\u8fd8\u662f\u7b2c\u4e8c\u6b21\u88ab\u5356\uff1a\n- \u5982\u679c\u662f\u7b2c\u4e00\u6b21\uff0c\u6211\u4eec\u5c31**\u53ea\u5356\u4e00\u4e2a**\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u7b2c\u4e00\u6b21\u7684\u4f18\u60e0$s_i$\u5bfc\u81f4\u4e86\u4ed6\u7684\u6743\u503c\u6bd4\u8f83\u5927\uff0c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u852c\u83dc\u90fd\u5356\u4e86\uff0c\u663e\u7136\u5c31\u4e0d\u4f18\u79c0\u3002\n- \u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\uff0c\u6211\u4eec\u5c31\u80fd\u5356\u5168\u5356\u4e86\u3002\n- \u4e3a\u4ec0\u4e48\u73b0\u5728\u80fd\u5356\u5c31\u5356\u662f\u5bf9\u7684\uff1f\n#### \u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\n- \u5fc5\u8981\u6027\u663e\u7136\u3002\n- \u5145\u5206\u6027\uff1a\u56e0\u4e3a\u6211\u4eec\u662f\u5012\u7740\u63a8\u7684\uff0c\u5c31\u4e0d\u5b58\u5728\u73b0\u5728\u5356\u6389\uff0c\u7136\u540e\u4ee5\u540e\u5c31\u5356\u4e0d\u6389\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u51b3\u7b56\u662f\u4e0d\u5177\u6709\u540e\u6548\u6027\u7684\uff0c\u73b0\u5728\u5356\u6389\u662f\u6700\u4f18\u7684\u3002\n### \u6ce8\u610f\n- \u8fd9\u4e2a\u65f6\u5019\u4f1a\u6709\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u4e2a\u852c\u83dc\uff0c\u73b0\u5728\u867d\u7136\u5356\u4e0d**\u5b8c**\u3002\n- \u6ce8\u610f\uff0c\u4e0d\u662f\u5356\u4e0d\u4e86\uff0c\u5356\u662f\u53ef\u4ee5\u5356\uff0c\u53ea\u662f\u8d85\u8fc7\u4e86$m$\u7684\u9650\u5236\uff0c\u6216\u8005\u53d8\u8d28\u7684\u90e8\u5206\u6ca1\u6709\u5b8c\u5168\u56de\u6765\uff0c\u8fd9\u91cc\u7684\u5356\u4e0d\u5b8c\u662f\u6307\u6ca1\u6709\u5356\u5b8c$c_i$\u7684\u603b\u5bb9\u91cf\uff0c\u4f46\u662f\u5728\u5f53\u5929\u6765\u770b\u662f\u5356\u5b8c\u4e86\u3002\n- \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5982\u679c\u628a\u4ed6\u4ece\u5806\u91cc\u9762\u5220\u6389\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u5728\u7b2c\u4e8c\u5929\u6211\u4eec\u53c8\u8981\u91cd\u65b0\u8003\u8651\u4ed6\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u5929\u8fd9\u4e2a\u852c\u83dc\u53c8\u4f1a\u6709\u65b0\u7684$x_i$\u56de\u6765\u3002\n- \u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u5f00\u4e00\u4e2a\u56de\u6536\u6808\uff0c\u6bcf\u6b21\u5220\u9664\u5373\u5165\u6808\uff0c\u6700\u540e\u5728\u628a\u6808\u91cc\u9762\u7684\u4e1c\u897f\u91cd\u65b0\u52a0\u5165\u5806\u91cc\u9762\u3002\n### \u524d\u65b9\u9ad8\u80fd\uff01\n- \u6211\u4e00\u5f00\u59cb\u505a\u7684\u65f6\u5019\uff0c\u5c31\u505a\u5230\u8fd9\u91cc\u6253\u6b62\u4e86\uff0c\u56e0\u4e3a\u6211\u4e00\u5f00\u59cb\u89c9\u5f97\uff0c\u4e0a\u9762\u7684\u8fc7\u7a0b\u662f\u4ece\u540e\u5f80\u524d\u63a8\u7684\u8fc7\u7a0b\uff0c\u90a3\u4e48\u4e4b\u524d\u7684\u7b54\u6848\u5c31\u5df2\u7ecf\u7b97\u51fa\u6765\u4e86\u3002\n- \u7136\u800c\u8fd9\u6837\u662f\u4e0d\u5bf9\u7684\u3002\n- \u56e0\u4e3a\u4e0a\u9762\u7b97\u51fa\u6765\u7684\u7b54\u6848\uff0c\u662f\u57fa\u4e8e$M$\u5929\u4e3a\u7ec8\u70b9\u7684\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u6709\u4e00\u4e9b\u5f88\u8d35\u91cd\u7684\u852c\u83dc\u662f\u5728\u540e\u9762\u5356\u6389\u7684\u3002\n- \u7136\u540e\u6211\u4eec\u5c31\u50cf\u5feb\u901f\u4ece$M$\u5929\u7684\u7b54\u6848\u5408\u6cd5\u63a8\u5230$M-1$\u5929\u7684\u7b54\u6848\u3002\n- \u663e\u7136\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5feb\u901f\u5220\u9664\u6700\u5c0f\u7684$m$\u4e2a\u852c\u83dc\u6240\u4ea7\u751f\u7684\u8d21\u732e\u3002\n- \u548c\u4e0a\u9762\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u77e5\u9053\u81ea\u5df1\u5df2\u7ecf\u5356\u4e86\u591a\u5c11\u852c\u83dc\u3002\n- \u7136\u540e\u5bf9\u4e8e\u5356\u6389\u7684\u6bcf\u4e00\u79cd\u852c\u83dc\uff0c\u5982\u679c\u53ea\u5356\u6389\u4e86\u4e00\u6b21\uff0c\u5c31\u628a$a_i+s_i$\u4e22\u5230\u5c0f\u6839\u5806\u91cc\u9762\u53bb\uff0c\u5426\u5219\u628a$a_i$\u4e22\u5230\u5c0f\u6839\u5806\u91cc\u9762\u53bb\u3002\n- \u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u5929\uff0c\u770b\u73b0\u5728\u5356\u6389\u7684\u852c\u83dc\u6709\u6ca1\u6709\u8d85\u8fc7$i*m$\u3002\n- \u5982\u679c\u6709\uff0c\u90a3\u4e48\u5c31\u5220\u6389\u4e00\u4e9b\u852c\u83dc\u3002\n- \u6bcf\u6b21\u53d6\u8d21\u732e\u6700\u5c0f\u7684\u852c\u83dc\uff0c\u5982\u679c\u4ed6\u53ea\u6709\u4e00\u4e2a\uff0c\u5c31\u5f7b\u5e95\u5220\u6389\u3002\n- \u5426\u5219\u5c31\u5220\u5230\u4e0d\u80fd\u5220\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65f6\u5019\u8981\u5269\u4e0b\u4e00\u4e2a\uff0c\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u7684\u8d21\u732e\u4e0d\u662f$a_i$\u4e86\uff0c\u800c\u662f$s_i+a_i$\u4e86\u3002\u56e0\u4e3a\u5f53\u524d\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u662f\u5b9e\u9645\u4e0a\u7684\u7b2c\u4e00\u4e2a\uff08\u6211\u4eec\u662f\u5012\u7740\u8003\u8651\u7684\uff09\uff0c\u6240\u4ee5\u518d\u628a$s_i+a_i$\u4e22\u5230\u5806\u91cc\u9762\u53bb\u3002\n- \u8fd9\u6837\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u5929\u7684\u7b54\u6848\u4e86\u3002\n#### \u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e2a\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\uff1a\n- \u867d\u7136\u6211\u4eec\u8003\u8651\u524d\u9762\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\uff0c\u524d\u9762\u7684\u7b54\u6848\u4e2d\u95f4\uff0c\u6709\u4e00\u90e8\u5206\u7684\u852c\u83dc\u662f\u5728\u540e\u9762\u88ab\u5356\u6389\u7684\u3002\n- \u4f46\u662f\u8003\u8651\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u603b\u5171\u5356\u6389\u7684\u4e1c\u897f\u662f\u6052\u5b9a\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u852c\u83dc\u53ef\u4ee5\u5728\u540e\u9762\u88ab\u5356\u6389\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u4e5f\u53ef\u4ee5\u5728\u524d\u9762\u88ab\u5356\u6389\u3002\n- \u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u524d\u9762\u6211\u4eec\u662f\u4ece\u540e\u5f80\u524d\u8003\u8651\u7684\uff0c\u8003\u8651\u5230\u4e86\u4e00\u4e2a\u852c\u83dc\u51fa\u73b0\u7684\u65f6\u95f4\uff08\u4e5f\u5c31\u662f\u53d8\u8d28\u7684\u65f6\u95f4\uff09\uff0c\u6240\u4ee5\u5728\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u540e\u9762\u8d21\u732e\u7684\u852c\u83dc\uff0c\u4e5f\u53ef\u4ee5\u5728\u524d\u9762\u88ab\u8d21\u732e\u3002\n\n- \u6700\u540e\u5f15\u7528[yyb](https://www.luogu.org/space/show?uid=21283)\u7684\u8bdd\uff1a\n\n> \u662f\u4e0d\u662f\u89c9\u5f97\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u6a21\u62df\u8d39\u7528\u6d41\u7684\u8fc7\u7a0b\u554a\uff0c\u5012\u63a8\u56de\u53bb\u5c31\u662f\u4e00\u4e2a\u9000\u6d41\u7684\u8fc7\u7a0b\uff0c\u6b63\u63a8\u7684\u8d2a\u5fc3\uff0c\u663e\u7136\u6bcf\u5929\u53ea\u6709\u90a3\u4e48\u51e0\u6761\u8def\u5f84\uff0c\u7528\u5806\u7ef4\u62a4\u7b49\u4ef7\u4e8e\u8dd1\u8d39\u7528\u6d41\uff0c\u5ffd\u7136\u611f\u89c9\u5f88\u5999\u554a\u3002\n\n\n- \u4ee3\u7801\u548c\u524d\u9762\u4e00\u7bc7\u9898\u89e3\u7684\u601d\u8def\u5dee\u4e0d\u591a\n- \u4e5f\u548c$yyb$\u7684\u5dee\u4e0d\u591a~~\u7b80\u76f4\u4e00\u6a21\u4e00\u6837~~\n- ~~\u6bd5\u7adf\u6211\u770b\u4ed6\u7684\u624d\u4f1a\u505a\u7684\u554a~~\n\n\n```\n#include<bits/stdc++.h>\n#define R register int\n#define ll long long \nusing namespace std;\nconst int N=200001;\nconst int M=1e5;\nint n,m,q,a[N],s[N],c[N],x[N],vis[N];\nint us[N],tp,sum;\nll ans[N];\nstruct ip{int v,id;}STK[N];\npriority_queue<ip>Q;\nvector<int>app[N];\nint operator < (ip x,ip y){return x.v<y.v;}\nint gi(){\n    R x=0,k=1;char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-')k=-1,c=getchar();\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x*k;\n}\nint main(){\n    freopen(\"s.in\",\"r\",stdin);\n\tn=gi(),m=gi(),q=gi();\n\tfor(R i=1;i<=n;++i)\n\t\ta[i]=gi(),s[i]=gi(),c[i]=gi(),x[i]=gi();\n\tfor(R i=1;i<=n;++i){\n\t\tif(!x[i])app[M].push_back(i);\n\t\telse app[min(M,(c[i]+x[i]-1)/x[i])].push_back(i);\n\t}\n\tfor(R i=M;i>=1;--i){\n\t\tfor(R j=0,lim=app[i].size();j<lim;++j)\n\t\t\tQ.push((ip){a[app[i][j]]+s[app[i][j]],app[i][j]});\n\t\tif(Q.empty())continue;\n\t\tfor(R j=m;j&&(!Q.empty());){\n\t\t\tip u=Q.top();Q.pop();\n\t\t\tif(!vis[u.id]){\n\t\t\t\tvis[u.id]=1,ans[M]+=u.v,us[u.id]++,--j;\n\t\t\t\tif(c[u.id]>1)Q.push((ip){a[u.id],u.id});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tR res=min(j,c[u.id]-us[u.id]-(i-1)*x[u.id]);\n\t\t\t\tans[M]+=1ll*res*u.v,us[u.id]+=res,j-=res;\n\t\t\t\tif(us[u.id]!=c[u.id])STK[++tp]=(ip){a[u.id],u.id};\n\t\t\t}\n\t\t}\n\t\twhile(tp)Q.push(STK[tp--]);\n\t}\n\twhile(!Q.empty())Q.pop();\n\tfor(R i=1;i<=n;++i)sum+=us[i];\n\tfor(R i=1;i<=n;++i)\n\t\tif(us[i]==1)Q.push((ip){-s[i]-a[i],i});\n\t\telse if(us[i])Q.push((ip){-a[i],i});\n\tfor(R i=M-1;i>=1;--i){\n\t\tans[i]=ans[i+1];\n\t\twhile(sum>i*m&&!Q.empty()){\n\t\t\tip u=Q.top();Q.pop(),u.v*=-1;\n\t\t\tif(us[u.id]>1){\n\t\t\t\tR res=min(sum-i*m,us[u.id]-1);\n\t\t\t\tus[u.id]-=res,sum-=res,ans[i]-=res*u.v;\n\t\t\t\tif(us[u.id]==1)Q.push((ip){-a[u.id]-s[u.id],u.id});\n\t\t\t\telse Q.push((ip){-a[u.id],u.id});\n\t\t\t}\n\t\t\telse --sum,--us[u.id],ans[i]-=u.v;\n\t\t}\n\t}\n\twhile(q--)printf(\"%lld\\n\",ans[gi()]);\n    return 0;\n}\n\n```\n",
        "postTime": 1538748908,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017]\u852c\u83dc\u3011"
    },
    {
        "content": "### [\u852c\u83dc](https://www.luogu.com.cn/problem/P3826)\n### [\u852c\u83dc\u7684\u5f31\u5f31\u5f31\u5316\u7248](https://www.luogu.com.cn/problem/UVA1316)\n## \u6211\u4eec\u5148\u4ece\u7b80\u5355\u7684\u5165\u624b\n\u5148\u770b\u5f31\u5316\u7248     \n\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u5148\u6309\u4ef7\u503c\u6392\u5e8f\uff0c~~\u663e\u7136~~\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6bcf\u4e00\u5546\u54c1\u5728\u5b83\u8fc7\u671f\u524d\u4e00\u5929\u5356\u53ef\u4ee5\u4f7f\u6536\u76ca\u6700\u5927\uff0c\u8fd9\u65f6\u95ee\u9898\u5c31\u51fa\u73b0\u4e86\uff0c\u5982\u679c\u4e24\u4e2a\u5546\u54c1\u5728\u540c\u4e00\u5929\u8fc7\u671f\u600e\u4e48\u529e\u3002    \n\u7ee7\u7eed\u6309\u8d2a\u5fc3\u7b56\u7565\uff0c\u5f53\u8fd9\u4e00\u5929\u5df2\u7ecf\u5356\u51fa\u4e86\u4e1c\u897f\uff0c\u90a3\u4e48\u5c31\u5c06\u8fd9\u4e00\u5929\u6307\u5411\u524d\u6700\u8fd1\u7684\u6ca1\u6709\u51fa\u552e\u5546\u54c1\u7684\u4e00\u5929\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230    \n### ~~\u75c5\u8336\u51e0~~    **\u5e76\u67e5\u96c6**      \n\u90a3\u4e48\u8fd9\u9053\u5f31\u5316\u7248\u5c31~~\u663e\u7136~~\u4e86     \n## \u6211\u4eec\u56de\u5230\u8fd9\u9053\u9898\n\u4f9d\u65e7\u662f\u8fd9\u4e2a\u8d2a\u5fc3\u601d\u8def\uff0c\u4f46\u662f\u591a\u4e86\u5f88\u591a\u7ec6\u8282\u3002\n#### \u9996\u5148    \n\u6bcf\u5929\u6709\u4e00\u4e2a\u4e0d\u5b9a\u7684\u552e\u5356\u4e0a\u9650m\uff0c\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u53ea\u51fa\u552e\u4e00\u4efd\uff0c\u8fd9\u6837\u65b9\u4fbf\u4e86\u5176\u4ed6\u7ec6\u8282\u7684\u5904\u7406\u3002    \n#### \u7136\u540e   \n \u591a\u4e86\u4e00\u4e2a\u5956\u52b1s,\u53ef\u4ee5\u5148\u5c06s\u52a0\u4e0a\uff0c\u7136\u540e\u5728\u5b83\u88ab\u7b2c\u4e00\u6b21\u5356\u51fa\u540e\u5c06\u6b64\u79cd\u5546\u54c1\u51cf\u53bbs\uff0c\u8fd9\u65f6\u5546\u54c1\u7684\u4ef7\u503c\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4ec5\u4ec5\u6392\u5e8f\u662f\u4e0d\u591f\u7684\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981**\u4f18\u5148\u961f\u5217**\uff0c\u6bcf\u4e00\u6b21\u53d6\u961f\u5934\uff08\u4ef7\u503c\u6700\u9ad8\u7684\u5546\u54c1\uff09\uff0c\u5982\u679c\u4e70\u5b8c\u4e4b\u540e\u5e93\u5b58\u4ecd\u7136\u6709\u5269\u4f59\uff0c\u5c31\u5c06\u5269\u4e0b\u7684\u538b\u56de\u961f\u91cc\u3002   \n#### \u63a5\u7740\n\u852c\u83dc\u6bcf\u4e00\u5929\u90fd\u4f1a\u8150\u70c2\u4e00\u4e9b\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u6309\u8d2a\u5fc3\u7b56\u7565\u6765\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u53ea\u51fa\u552e\u4e00\u4efd\uff0c\u6240\u4ee5\u627e\u5230\u5b83\u8150\u70c2\u5b8c\u7684\u524d\u4e00\u5929\uff08\u6ce8\u610f\u852c\u83dc\u5e93\u5b58\u4f1a\u53d1\u751f\u53d8\u5316\uff09\u552e\u5356\uff1b\u5982\u679c\u8fd9\u4e00\u5929\u5230\u8fbe\u4e86\u552e\u5356\u4e0a\u7ebf\uff0c\u4ecd\u7136\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\uff0c\u6307\u5411\u524d\u4e00\u5929\u3002\n#### \u6700\u540e\n\u591a\u6b21\u8be2\u95ee\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u867d\u7136\u95ee\u7684\u662f\u552e\u5356\u524dp\u5929\u7684\u6700\u5927\u5229\u6da6\uff0c\u7136\u800c\u5929\u6570\u662f\u4e0e\u552e\u5356\u603b\u91cf\u6b63\u76f8\u5173\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7ba1\u5929\u6570\uff0c\u53ea\u770b\u552e\u5356\u603b\u91cf\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\n \u3002   \n #### \u6700\u540e\u7684\u6700\u540e\n \u8bf7\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff0c\u5f00**long long** \uff0c~~\u4e0d\u7136\u8c8c\u4f3c\u53ea\u6709\u56db\u5206\uff0c\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u3002~~\n ##### \u4ee3\u7801\u6709\u6ce8\u91ca\uff0c\u8bf7\u653e\u5fc3\u98df\u7528\n ```\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\npriority_queue<pair<int,int> > q;\nint fa[1000100],con[1000001];\nint a[1000100],s[1000100],c[1000010],x[1000010];\nlong long ans[1000001];\nint find(int x)\n{\n\tif(x==fa[x]) return x;\n\treturn fa[x]=find(fa[x]);\n}\nint main()\n{\n\tint n,m,k; \n\tscanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;++i)\n    {\n      scanf(\"%d%d%d%d\",&a[i],&s[i],&c[i],&x[i]);\n      q.push(make_pair(a[i]+s[i],i));\n      //\u5148\u628a\u5e26\u5956\u52b1\u7684\uff08\u7b2c\u4e00\u6b21\u552e\u5356\uff09\u52a0\u8fdb\u961f\uff1b \n\t}\n\tfor(int i=1;i<=100000;++i)\n\t  fa[i]=i,con[i]=m;\n\t  //\u9884\u5904\u7406\uff1b \n\tint cnt=0;\n\twhile(!q.empty())\n\t{\n\t\tint day;\n\t\tint val=q.top().first,id=q.top().second;\n\t\tq.pop();\n\t\tif(x[id]==0) day=find(100000);\n\t\t//\u5982\u679c\u4e0d\u4f1a\u53d8\u8d28\uff0c\u6839\u636e\u8d2a\u5fc3\uff0c\u6211\u4eec\u5c3d\u91cf\u6700\u540e\u4e70 \n\t\telse day=find(min(100000,(c[id]-1)/x[id]+1));\n\t\tif(!day) continue;\n\t\t//\u5982\u679c\u4e00\u76f4\u6307\u5411\u4e86\u7b2c\u96f6\u5929\uff0c\u5c31\u4ee3\u8868\u65e0\u6cd5\u51fa\u552e\u4e86 \n\t\tc[id]--;\n\t\t//\u852c\u83dc\u5e93\u5b58-- \uff1b \n\t\tcon[day]++; \n\t\t//\u8fd9\u4e00\u5929\u552e\u5356\u91cf++\uff1b \n\t\tcnt++;\n\t\t//\u552e\u51fa\u603b\u6570++\uff1b \n\t\tif(con[day]==m) fa[day]=find(day-1);\n\t\t//\u5982\u679c\u8fd9\u4e00\u5929\u51fa\u552e\u4e86M \uff0c\u90a3\u4e48\u5c31\u6307\u5411\u524d\u4e00\u5929 \n\t\tif(c[id]) q.push(make_pair(a[id],id));\n\t\t//\u8fd9\u4e00\u5929\u5356\u7684\u662fid\u53f7\u852c\u83dc\uff0c \u5982\u679c\u8fd8\u6709\u5e93\u5b58\u91cd\u65b0\u653e\u56de\u53bb \n\t\tans[cnt]=ans[cnt-1]+val; \n\t}\n\twhile(k--)\n    {\n    \tint p;\n    \tscanf(\"%d\",&p);\n    \tprintf(\"%lld\\n\",ans[min(cnt,p*m)]);\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1601858857,
        "uid": 230202,
        "name": "yellow_bored",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3826"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u6709\u66f4\u7b80\u5355\u7684\u5efa\u6a21\u3002\n\n\u5148\u6784\u9020\u8d39\u7528\u6d41\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5929\u5efa\u4e00\u4e2a\u70b9\uff0c\u7b2c $i$ \u5929\u8bb0\u4e3a\u70b9 $i$\uff0c\u4e0b\u6587\u4e3a\u65b9\u4fbf\u8868\u8ff0\uff0c\u8bb0 $(u,v,c,w)$ \u8868\u793a\u4ece\u70b9 $u$ \u8fde\u5411 $v$ \u5bb9\u91cf\u4e3a $c$\uff0c\u8d39\u7528\u4e3a $w$ \u7684\u8fb9\u3002\n\n\u6bcf\u5929\u5356\u51fa $m$ \u9897\u83dc\uff0c\u8fde\u8fb9 $(S,i,m,0)$\u3002\u5bf9\u4e8e\u6bcf\u79cd\u852c\u83dc\uff0c\u7b2c $i$ \u5929\u6709 $x$ \u9897\u574f\u6389\uff0c\u5c31\u8fde\u8fb9 $(i,T,x,a_i)$\u3002\u7b2c $i$ \u5929\u53ef\u4ee5\u5356\u51fa\u5728 $\\ge i$ \u5929\u574f\u6389\u7684\u83dc\uff0c\u8fde\u8fb9 $(i,i+1, \\inf, 0)$\u3002\n\n\u76f4\u63a5\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\n\n\u540c\u65f6\u6211\u4eec\u89c2\u5bdf\u8fd9\u5f20\u56fe\uff0c\u53d1\u73b0\u5b83\u975e\u5e38\u4f18\u7f8e\uff0c\u9664\u4e86\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u5176\u5b83\u7684\u70b9\u521a\u597d\u6392\u6210\u4e00\u6392\uff0c\u5e76\u4e14\u6709\u8fb9 $(i,i+1,inf,0)$\uff0c\u4ece\u6e90\u70b9\u51fa\u53d1\u7684\u8fb9\uff0c\u6216\u51fa\u53d1\u5230\u6c47\u70b9\u7684\u8fb9\u90fd\u4e0d\u53ef\u80fd\u88ab\u9000\u6d41\uff0c\u6240\u4ee5\u552f\u4e00\u53ef\u80fd\u9000\u6d41\u7684\u53ea\u6709 $(i,i+1)$ \u4e4b\u95f4\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5df2\u7ecf\u53ef\u4ee5\u7b80\u5355\u7ef4\u62a4\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $(i,i+1)$ \u4e4b\u95f4\u7684\u53cd\u5411\u8fb9\u5bb9\u91cf\u5373\u53ef\uff08\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42\u6700\u5c0f\u503c\uff09\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e $s_i$ \u7684\u6761\u4ef6\uff0c\u6211\u4eec\u53ea\u7528\u5c06\u7b2c $i$ \u79cd\u852c\u83dc\u6700\u540e\u4e00\u9897\u574f\u6389\u7684\u83dc\u7684\u4ef7\u683c\u52a0\u4e0a $s_i$ \u5373\u53ef\u3002\u4ece\u524d\u5f80\u540e\u679a\u4e3e\u6bcf\u4e00\u5929\uff0c\u5e76\u6309\u4ef7\u683c\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u8003\u8651\u6bcf\u79cd\u852c\u83dc\u3002\u5bf9\u4e8e\u852c\u83dc\u7406\u8bba\u53ef\u4ee5\u76f4\u63a5\u53cc\u6307\u9488\u7ef4\u62a4\uff0c\u4ee3\u7801\u4e3a\u65b9\u4fbf\u76f4\u63a5\u5199\u4e86\u5806\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O}(nm\\log n)$\uff0c\u74f6\u9888\u5728\u4e8e\u7ebf\u6bb5\u6811\u3002\n\n```cpp\n#define N 100005\nint n, m, k, t, u[N], s[N], c[N], b[N], v[N], p[N]; LL ed[N];\npriority_queue<Pr>q;\nstruct node{int l, r, val, tag;}a[N << 2];\nconst int inf = 0x7fffffff;\n#define L a[x].l\n#define R a[x].r\n#define ls (x << 1)\n#define rs (ls | 1)\n#define S a[x].val\n#define T a[x].tag\nvoid build(int x,int l,int r){\n\tL = l, R = r;\n\tif(l == r)return;\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n}\ninline void pushup(int x,int w){T += w, S += w;}\ninline void down(int x){if(T)pushup(ls, T), pushup(rs, T), T = 0;}\nvoid ins(int x,int l,int r,int w){\n\tif(L >= l && R <= r)pushup(x, w);\n\telse{\n\t\tdown(x); int mid = (L + R) >> 1;\n\t\tif(mid >= l)ins(ls, l, r, w);\n\t\tif(mid < r)ins(rs, l, r, w);\n\t\tS = min(a[ls].val, a[rs].val);\n\t}\n}\nint ask(int x,int l,int r){\n\tif(L >= l && R <= r)return S;\n\tdown(x); int mid = (L + R) >> 1, mn = inf;\n\tif(mid >= l)cmn(mn, ask(ls, l, r));\n\tif(mid < r)cmn(mn, ask(rs, l, r));\n\treturn mn;\n}\ninline int day(int id){\n\tif(b[id] == 0)return k;\n\treturn (c[id] - v[id]) / b[id] + 1;\n}\nint main(){\n\tread(n, m, t);\n\trp(i, n){\n\t\tread(u[i], s[i], c[i], b[i]), v[i] = 1;\n\t\tq.push({s[i] + u[i], i});\n\t}\n\trp(i, t)read(p[i]), cmx(k, p[i]);\n\tbuild(1, 1, k);\n\trp(i, k){\n\t\tint res = m;\n\t\twhile(res--){\n\t\t\twhile(!q.empty()){\n\t\t\t\tPr cur = q.top(); q.pop();\n\t\t\t\tint id = cur.se, d = day(id);\n\t\t\t\tif(d >= i){\n\t\t\t\t\ted[i] += cur.fi, ++v[id];\n\t\t\t\t\tif(v[id] <= c[id])q.push({u[id], id});\n\t\t\t\t\tif(d > i)ins(1, i, d - 1, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint w = ask(1, d, i - 1);\n\t\t\t\t\tif(w){\n\t\t\t\t\t\ted[i] += cur.fi, ++v[id];\n\t\t\t\t\t\tif(v[id] <= c[id])q.push({u[id], id});\n\t\t\t\t\t\tins(1, d, i - 1, -1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(q.empty())break;\n\t\t}\n\t\ted[i] += ed[i - 1];\n\t}\n\trp(i, t)printf(\"%lld\\n\", ed[p[i]]);\n\treturn 0;\n}\n```\n",
        "postTime": 1660207450,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[NOI2017] \u852c\u83dc"
    },
    {
        "content": "\u4e3a\u4e86\u65b9\u4fbf\u4e0b\u6587\u7684\u63cf\u8ff0\uff0c\u4ee4 $S_p$ \u8868\u793a\u5f53\u8be2\u95ee\u5929\u6570\u4e3a $p$ \u65f6\uff0c\u5356\u51fa\u4e86\u54ea\u4e9b\u852c\u83dc\uff0c$S'_p(i)$ \u8868\u793a\u5f53\u8be2\u95ee\u5929\u6570\u4e3a $p$ \u65f6\uff0c\u7b2c $i$ \u5929\u5356\u51fa\u4e86\u54ea\u4e9b\u852c\u83dc\u3002\n\n\u4e00\u5f00\u59cb\u7684\u53d1\u73b0\uff1a$S_{p-1}\\subseteq S_p$\u3002\n\n\u8fd9\u8bf4\u660e\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5356\u51fa\u852c\u83dc\u7684**\u987a\u5e8f**\u3002\uff08\u5176\u5b9e\u4e0d\u7136\uff09\n\n\u7528\u4e00\u4e2a\u5806\u7ef4\u62a4\u3002\u6bcf\u6b21\u68c0\u67e5\u4e00\u4e0b\u5f53\u524d\u8fd9\u4e2a\u852c\u83dc\u662f\u5426\u8fc7\u671f\u3002\n\n> \u5047\u5982\u4ef7\u503c\u9ad8\u7684\u852c\u83dc\u4fdd\u8d28\u671f\u8f83\u957f\u600e\u4e48\u529e\uff1f\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\u5bf9\u4e8e\u67d0\u4e00\u4e2a $i<p$, $S'_{p-1}(i)\\neq S'_p(i)$\uff0c\u4f46\u5de7\u5999\u7684\u662f\uff0c$S_{p-1}\\subseteq S_p$ \u4ecd\u7136\u6210\u7acb\u3002\n\n\u9898\u76ee\u53ea\u8981\u6c42\u8f93\u51fa\u5229\u6da6\uff0c\u4e0d\u5728\u4e4e\u5177\u4f53\u65b9\u6848\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u4ef7\u503c\u90fd\u662f\u8be5\u5e8f\u5217\u7684\u4e00\u4e2a\u524d\u7f00\u3002\n\n\u663e\u7136\u503c\u8d8a\u5927\u7684\u8d8a\u5e94\u8be5\u653e\u5728\u524d\u9762\uff0c\u56e0\u6b64\u8fd8\u662f\u7528\u5806\u7ef4\u62a4\uff0c\u8fd8\u662f\u68c0\u67e5\u4e00\u4e0b\u5f53\u524d\u8be5\u852c\u83dc\u662f\u5426\u8fc7\u671f\u3002\n\n\u4e3a\u4e86\u907f\u514d\u628a\u4ef7\u503c\u9ad8\uff0c\u4fdd\u8d28\u671f\u957f\u7684\u852c\u83dc\u5206\u914d\u5728\u524d\u9762\u7684\u60c5\u51b5\uff0c\u5e94\u8be5\u628a\u6bcf\u4e2a\u852c\u83dc\u5c3d\u91cf\u5f80\u540e\u653e\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u5f53\u524d\u7684\u852c\u83dc\u662f\u7b2c $i$ \u7c7b\uff0c\u5148\u6c42\u51fa\u8fd9\u4e2a\u852c\u83dc\u6700\u8fdc\u80fd\u653e\u5728\u7b2c $day$ \u5929\uff0c\u5047\u5982\u8fd9\u4e00\u5929\u5356\u51fa\u7684\u852c\u83dc\u5df2\u7ecf\u6709 $m$ \u4e2a\uff0c\u5c31\u5c1d\u8bd5\u628a\u8be5\u852c\u83dc\u653e\u5230\u7b2c $day-1$ \u5929\uff0c\u5982\u679c\u4ecd\u7136\u4e0d\u884c\uff0c\u5c31\u653e\u5230\u7b2c $day-2$ \u5929 $\\dots$ \u5982\u679c\u53d8\u6210\u7b2c $0$ \u5929\uff0c\u8bf4\u660e\u8fd9\u4e2a\u852c\u83dc\u4e0d\u4f1a\u88ab\u52a0\u5165\u5e8f\u5217\u3002\u7531\u4e8e\u5728\u6b64\u4e4b\u524d\u52a0\u5165\u5e8f\u5217\u7684\u852c\u83dc\u4ef7\u503c\u90fd\u4e0d\u5c0f\u4e8e\u5b83\uff0c\u56e0\u6b64\u8fd9\u6837\u8d2a\u5fc3\u662f\u4e0d\u52a3\u7684\u3002\n\n\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u4f18\u5316\u4e0a\u8ff0\u8fc7\u7a0b\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u76f8\u5f53\u4e8e\u6c42\u5e8f\u5217\u524d $m\\times p$ \u4e2a\u503c\u7684\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(k\\log k)$ \u5176\u4e2d $k=n\\times m$\u3002\n\n\u4ee3\u7801\u4e0d\u8d85\u8fc7 $1.5$ K\u3002",
        "postTime": 1642643229,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017] \u852c\u83dc\u3011"
    },
    {
        "content": "\u672c\u8d28\u662f P2949 \u7684\u52a0\u5f3a\u7248\uff08\n\n\u4e2a\u4eba\u611f\u89c9\u4e0b\u9762\u8fd9\u4e2a\u505a\u6cd5\u6bd4\u5e76\u67e5\u96c6\u7684 nb \u505a\u6cd5\u597d\u60f3\u5f88\u591a\uff08\n\ndeadline \u5f62\u5f0f\u7684\u9650\u5236\u660e\u793a\u65f6\u5149\u5012\u6d41\uff0c\u53d8\u6210\u6bcf\u4e00\u4e2a\u65f6\u523b\u67d0\u4e00\u79cd\u83dc\u591a\u51fa\u82e5\u5e72\u5355\u4f4d\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u9500\u552e\u67d0\u4e00\u79cd\u7c7b\u578b\u52a0 $s$ \u5143\u94b1\u7684\u6761\u4ef6\uff0c\u5c31\u76f4\u63a5\u62c6\u6210\u4e24\u79cd\u83dc\uff0c\u7b2c\u4e00\u79cd\u7684\u6536\u76ca\u662f $a_i+s_i$\uff0c\u4e2a\u6570\u662f $1$\uff0c\u4e0d\u589e\u52a0\uff1b\u7b2c\u4e8c\u79cd\u6536\u76ca\u662f $a_i$\uff0c\u6700\u7ec8\u4e2a\u6570\u662f $c_i-1$\uff0c\u6bcf\u4e00\u5355\u4f4d\u65f6\u95f4\u589e\u52a0 $x_i$ \u4e2a\u3002\n\n\u7136\u540e\u66b4\u529b\u6a21\u62df\u52a0\u83dc\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u505a\u5230 $O(nmkp\\log n)$\uff0c\u53ef\u4ee5\u8fc7\u6389 $1\\sim 15$\uff0c\u5f97\u5230 $60$ \u5206\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u53ea\u5728\u4f18\u5148\u961f\u5217\u4e2d\u63d2\u5165\u4e00\u4e2a\u70b9\u4ee3\u8868\u4e00\u79cd\u83dc\u6bcf\u5355\u4f4d\u65f6\u95f4\u589e\u52a0 $x$ \u4e2a\u3002\u5728\u6bcf\u4e00\u5929\u7684 $m$ \u6b21\u9500\u552e\u4e2d\uff0c\u6bcf\u4e00\u6b21\u9500\u552e\u53d6\u51fa\u6536\u76ca\u6700\u5927\u8005\u5356\u6389 $1$ \u5355\u4f4d\uff0c\u5982\u679c\u5356\u5149\u4e86\uff0c\u90a3\u4e48\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c\u8fd9\u4e00\u7c7b\u4e0d\u4f1a\u589e\u52a0\uff0c\u5219\u5220\u9664\u4e4b\u3002\n- \u5982\u679c\u8fd9\u4e00\u7c7b\u4f1a\u589e\u52a0\uff0c\u4ece\u961f\u5217\u4e2d\u5f39\u51fa\uff0c\u7528\u4e00\u4e2a\u4e34\u65f6 vector \u4fdd\u5b58\u3002\n\n\u5982\u679c\u8fd8\u6ca1\u5356\u5149\uff0c\u90a3\u4e48\u5c31\u63d2\u56de\u961f\u5217\u3002\n\n\u4e00\u5929\u7684\u9500\u552e\u4e4b\u540e\u628a vector \u4e2d\u6240\u6709\u5143\u7d20\u63d2\u56de\u4f18\u5148\u961f\u5217\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u6b64\u65f6\u6bcf\u4e00\u5929\u521d\u59cb\u7684\u961f\u5217\u4e2d\u90fd\u4e0d\u4f1a\u6709\u5f53\u524d\u5e93\u5b58\u4e3a $0$ \u7684\u852c\u83dc\u51fa\u73b0\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5 $O(p\\log n)$ \u6c42\u4e00\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u4e86\u3002\u603b\u590d\u6742\u5ea6 $O(kmp\\log n)$\uff0c\u53ef\u4ee5\u8fc7\u6389 $80$ \u5206\u3002\n\n\u7136\u540e\u8003\u8651\u9006\u63a8\uff0c\u5148\u6c42\u51fa $p=10^5$ \u7684\u7b54\u6848\u3002\n\n\u73b0\u5728\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 $p=x$ \u7684\u9500\u552e\u65b9\u6848\uff0c\u8003\u8651\u6c42\u51fa $p=x-1$ \u7684\u9500\u552e\u65b9\u6848\u3002\n\n\u663e\u7136\u6700\u540e\u4e00\u5929\u7684\u4e0d\u80fd\u518d\u5356\u4e86\uff0c\u5bf9\u6bcf\u4e00\u5355\u4f4d\u8003\u8651\u628a\u5b83\u6254\u5230\u524d\u9762\u5356\u3002\u5982\u679c\u524d\u9762\u8fd8\u6709\u7a7a\u4f4d\uff0c\u5c31\u76f4\u63a5\u653e\u8fc7\u53bb\uff0c\u6ca1\u6709\u635f\u5931\uff1b\u5426\u5219\u5982\u679c\u6ca1\u6709\u7a7a\u4f4d\uff0c\u5219\u8003\u8651\u524d\u9762\u9500\u552e\u7684\u6536\u76ca\u6700\u5c0f\u7684\u4e00\u5355\u4f4d\uff0c\u5982\u679c\u5b83\u7684\u6536\u76ca\u5c0f\u4e8e\u5f53\u524d\u7684\u8fd9\u4e00\u5355\u4f4d\uff0c\u90a3\u4e48\u653e\u5f03\u6536\u76ca\u6700\u5c0f\u7684\u8fd9\u4e00\u5355\u4f4d\uff0c\u6539\u4f5c\u9500\u552e\u5f53\u524d\u5355\u4f4d\uff1b\u5426\u5219\u5c31\u653e\u5f03\u5f53\u524d\u5355\u4f4d\u3002\n\n\u7528\u4e00\u4e2a set \u7ef4\u62a4\u9500\u552e\u96c6\u5408\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u505a\u5230 $O(mp\\log n)$\uff0c\u4e8b\u5b9e\u4e0a\u5f88\u96be\u5361\u6ee1\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n```cpp\nconst int N = 100005;\nint a[N], s[N], c[N], x[N], n, m, k, q[N], dead[N], vidx[N], res[N];\nvector <int> sellout[N];\n\nstruct Node {\n\tint cost, k, b, addt;\n\tNode() {}\n\tNode(int cost, int k, int b, int addt) : cost(cost), k(k), b(b), addt(addt) {}\n\tbool operator < (const Node& b) const {\n\t\treturn cost < b.cost;\n\t}\n};\npriority_queue <Node> que;\nvector <Node> tmp;\nmultiset <pair <int, pair <int, int> > > st;\n\ninline bool cmp(int i, int j) {\n\treturn dead[i] > dead[j];\n}\n\ninline void Read() {\n\tn = qread(); m = qread(); k = qread();\n\tfor (int i = 1;i <= n;i++) {\n\t\ta[i] = qread(); s[i] = qread(); c[i] = qread(); x[i] = qread();\n\t\tif (!x[i]) dead[i] = 1e9;\n\t\telse dead[i] = (c[i] + x[i] - 1) / x[i];\n\t\t//printf(\"i=%d dead=%d\\n\", i, dead[i]);\n\t\tvidx[i] = i;\n\t}\n}\n\ninline long long Brute(int mxt) {\n\twhile (!que.empty()) que.pop();\n\tint cur = 1;\n\tlong long ans = 0;\n\tfor (int t = mxt;t >= 1;t--) {\n\t\twhile (dead[vidx[cur]] >= t) {\n\t\t\t//printf(\"add %d %d %d\\n\", vidx[cur], a[vidx[cur]], s[vidx[cur]]);\n\t\t\tque.push(Node(s[vidx[cur]] + a[vidx[cur]], 0, 1, 0));\n\t\t\tque.push(Node(a[vidx[cur]], x[vidx[cur]], c[vidx[cur]] - 1, 0));\n\t\t\tcur++;\n\t\t}\n\t\t//printf(\"day %d\\n\", t);\n\t\tfor (int i = 1;i <= m;i++) {\n\t\t\tif (que.empty()) {\n\t\t\t\tst.insert(make_pair(0, make_pair(t, i - 1)));\n\t\t\t\tsellout[t].push_back(0);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tNode cur = que.top();\n\t\t\tif (cur.b - (t - 1) * cur.k == 0) {\n\t\t\t\tque.pop();\n\t\t\t\tif (cur.k) tmp.push_back(cur);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//printf(\"sell %d %d\\n\", cur.cost, cur.b - (t - 1) * cur.k);\n\t\t\tans += cur.cost;\n\t\t\tsellout[t].push_back(cur.cost);\n\t\t\tst.insert(make_pair(cur.cost, make_pair(t, i - 1)));\n\t\t\tcur.b--;\n\t\t\tque.pop();\n\t\t\tif (cur.b - (t - 1) * cur.k == 0) {\n\t\t\t\tif (cur.k) tmp.push_back(cur);\n\t\t\t} else {\n\t\t\t\tque.push(cur);\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0;i < tmp.size();i++) que.push(tmp[i]);\n\t\ttmp.clear();\n\t}\n\treturn ans;\n}\n\ninline void Solve() {\n\tres[100000] = Brute(100000);\n\tfor (int i = 100000;i >= 2;i--) {\n\t\tres[i - 1] = res[i];\n\t\tfor (int j = 0;j < sellout[i].size();j++) st.erase(st.find(make_pair(sellout[i][j], make_pair(i, j))));\n\t\tfor (int j = 0;j < sellout[i].size();j++) {\n\t\t\tif (st.begin()->first < sellout[i][j]) {\n\t\t\t\tres[i - 1] -= st.begin()->first;\n\t\t\t\tint x = st.begin()->second.first, y = st.begin()->second.second;\n\t\t\t\tsellout[x][y] = sellout[i][j];\n\t\t\t\tst.erase(st.begin());\n\t\t\t\tst.insert(make_pair(sellout[x][y], make_pair(x, y)));\n\t\t\t} else {\n\t\t\t\tres[i - 1] -= sellout[i][j];\n\t\t\t}\n\t\t}\n\t}\n\twhile (k--) printf(\"%lld\\n\", res[qread()]);\n}\n```",
        "postTime": 1632324206,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017] \u852c\u83dc\u3011"
    },
    {
        "content": "# Problem\n\n\u4f60\u6709 $n$ \u79cd\u758f\u5de8\uff0c\u6bcf\u9500\u552e\u4e00\u4e2a\u5355\u4f4d\u7b2c $i$ \u79cd\u758f\u5de8\uff0c\u83b7\u5229 $a_i$ \u5143\u3002\u7b2c\u4e00\u6b21\u9500\u552e\u989d\u5916\u83b7\u5229 $s_i$ \u5143\u3002\u5f00\u59cb\u65f6\u6709 $c_i$ \u5355\u4f4d\uff0c\u6bcf\u5929\u4f1a\u53d8\u8d28 $x_i$ \u4efd\u3002\u6bcf\u5929\u4f60\u6700\u591a\u53ef\u4ee5\u9500\u552e $m$ \u5355\u4f4d\u758f\u5de8\u3002\n\n$k$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u9500\u552e $p$ \u5929\uff0c\u83b7\u5229\u6700\u5927\u503c\u3002\n\n# Sol\n\n$\\rm orz~\\mathtt{\\color{black}S\\color{red}yksykCCC}$\n\n\u9996\u5148\u7b2c\u4e00\u4e0b\u5f88\u5bb9\u6613\u4f1a\u60f3\u8d2a\u5fc3\uff1a\u6bcf\u5929\u9009\u62e9\u5269\u4f59\u83b7\u5229\u6700\u591a\u7684\u758f\u5de8\u9500\u552e\uff0c\u8fd9\u6837\u5b50\u8c8c\u4f3c\u5f88\u4f18\u79c0\u3002\u4f46\u53cd\u4f8b\u4e5f\u4e0d\u96be\u4e3e\u51fa\u6765\uff1a\u4e24\u79cd\u758f\u5de8\uff0c\u4e00\u79cd\u6536\u76ca\u5f88\u4f4e\uff0c\u4f46\u53d8\u8d28\u5f88\u5feb\uff1b\u4e00\u79cd\u6536\u76ca\u5f88\u9ad8\uff0c\u4f46\u4e0d\u4f1a\u53d8\u8d28\uff08\u6216\u53d8\u8d28\u5f88\u6162\uff09\uff0c\u8be2\u95ee\u7684\u5929\u6570\u5f88\u957f\uff0c\u8fd9\u6837\u6211\u4eec\u80af\u5b9a\u5148\u9009\u53d8\u8d28\u5feb\u7684\uff0c\u518d\u6162\u6162\u60a0\u60a0\u5730\u9009\u62e9\u4e0d\u53d8\u53d8\u8d28\u7684\uff0c\u8fd9\u6837\u5728\u603b\u91cf\u4e0a\u4f1a\u53d8\u591a\u3002\n\n\u987a\u7740\u8fd9\u4e2a\u89d2\u5ea6\u601d\u8003\uff0c\u53d1\u73b0\u5982\u679c\u5929\u6570\u77ed\u7684\u8bdd\u80af\u5b9a\u4f18\u5148\u9009\u62e9\u6536\u76ca\u9ad8\u7684\u758f\u5de8\uff08\u56e0\u4e3a\u80af\u5b9a\u9500\u552e\u4e0d\u5b8c\uff09\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\u5bf9\u4e8e\u4e00\u79cd\u758f\u5de8\uff0c\u6ee1\u8db3\u9500\u91cf\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u8fdf\u5730\u9500\u552e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e3a\u5176\u5b83\u9700\u8981\u65e9\u65e9\u9500\u552e\u7684\u758f\u5de8\u817e\u51fa\u7a7a\u95f4\u3002\n\n\u5047\u8bbe\u7b2c $i$ \u79cd\u758f\u5de8\u5728\u9500\u552e $d_i$ \u4efd\u65f6\uff0c\u80fd\u591f\u5141\u8bb8\u7684\u65f6\u95f4\u4e3a $t_i$\uff0c\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u65b9\u7a0b\n\n$$\n\\begin{cases}\n\\begin{aligned}\nt_i\\ge\\lceil\\frac{d_i}{m}\\rceil\n\\end{aligned}\\\\\nx_i(t_i-1)+d_i\\le c_i\n\\end{cases}\n$$\n\n\u89e3\u5f97\n\n$$\\lceil\\frac{d_i}m\\rceil\\le t_i\\le\\lfloor\\frac{c_i-d_i}{x_i}\\rfloor+1$$\n\n\u6211\u4eec\u5e0c\u671b\u5176\u80fd\u5c3d\u53ef\u80fd\u8fdf\u5730\u9500\u552e\uff0c\u5219\u9700\u8981\u53d6\u4e00\u4e2a $T_i=t_{i,\\max}=\\lfloor\\frac{c_i-d_i}{x_i}\\rfloor+1$\uff0c\u540c\u65f6\u8981\u6ee1\u8db3 $T_i\\ge\\lceil\\frac{d_i}m\\rceil$\u3002\n\n\u8fd9\u6837\u8f6c\u5316\u4ee5\u540e\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u7ec4 $(d_i,T_i)$ \u7684\u503c\u3002\u5206\u6790\u4e00\u7ec4\u53d6\u503c\u5408\u6cd5\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u6309\u7167 $T$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5047\u8bbe\u6392\u5e8f\u540e\u53d8\u6210 $(d_{p_1},T_{p_1}),(d_{p_2},T_{p_2}),\\cdots$\uff0c\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u4f9d\u6b21\u9009\uff0c\u76f4\u63a5\u63cf\u8ff0\u5c31\u662f **\u5fc5\u987b\u4efb\u610f\u65f6\u523b\u4e0b\u90fd\u80fd\u5408\u6cd5\u5730\u9009\u591f $m$ \u4efd\u758f\u5de8**\uff0c\u4f7f\u7528\u6570\u5b66\u8bed\u8a00\u63cf\u8ff0\u5c31\u662f\n\n$$\\forall i>0,\\sum_{k=1}^{i-1}d_{p_k}\\ge m(p-T_{p_i})$$\n\n\uff08\u5927\u767d\u8bdd\u5c31\u662f\u524d\u9762\u7684\u6240\u6709 $d$ \u591f\u585e\u6ee1\u540e $p-T$ \u5929\u7684\u9500\u91cf\uff09\n\n\u4e0b\u9762\u8003\u8651\u591a\u9500\u552e\u4e00\u4efd\u758f\u5de8\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d8\u5316\u3002\u67d0\u4e00\u79cd\u758f\u5de8\u7684 $d$ \u4f1a\u589e\u52a0\uff0c$T$ \u53ef\u80fd\u4f1a\u51cf\u5c0f\uff0c\u5982\u679c\u6ca1\u51cf\u5c0f\uff0c\u5f0f\u5b50\u4ecd\u7136\u6210\u7acb\uff0c\u65e0\u4e8b\u53d1\u751f\uff1b\u5982\u679c\u51cf\u5c0f\uff0c\u53ea\u4f1a\u5f71\u54cd\u5176\u4e2d\u7684\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff08\u53f3\u7aef $+m$\uff09\uff0c\u4f46\u4e5f\u6709\u53ef\u80fd\u4f7f\u5f97\u6392\u540d\u53d1\u751f\u6539\u53d8\uff0c\u603b\u7ed3\u4e0b\u6765\u5c31\u662f\u67d0\u4e00\u9879\u53f3\u8fb9 $+m$\uff0c\u67d0\u4e2a\u524d\u7f00\u7684\u6240\u6709\u4e0d\u7b49\u5f0f\u7ec4\uff0c\u5de6\u8fb9\u9879 $+1$\u3002\u4f46\u4e0d\u53ef\u80fd\u4e00\u4e2a\u4e0d\u7b49\u5f0f $+m$\uff0c\u4e00\u4e2a\u4e0d\u7b49\u5f0f $+1$\u3002\n\n\u7ef4\u62a4\u8fd9\u6837\u7684\u4e1c\u897f\u5373\u53ef\uff0c\u6bcf\u6b21\u9009\u62e9\u80fd\u8d2a\u5230\u7684\u6700\u5927\u6743\u6765\u8d2a\u4e00\u8d2a\u5c31\u884c\u4e86\u3002\u8bc1\u660e\u611f\u6027\u7406\u89e3\uff1f\uff08\u53cd\u6b63\u53ef\u4ee5\u5efa\u8d39\u7528\u6d41\u6a21\u578b\uff0c\u8d2a\u5fc3\u4e0d\u4f1a\u9519\uff0c~~\u597d\u5427\u5176\u5b9e\u6211\u4e0d\u4f1a\u8bc1~~\uff09\u3002\n\n\u6ce8\u610f\u8981\u5148\u505a $p$ \u6700\u5927\u7684\u60c5\u51b5\uff0c\u7136\u540e\u518d\u9000\u56de\u6765\u505a\uff08\u6bcf\u6b21\u628a\u4e0d\u597d\u7684\u758f\u5de8\u4e22\u4e86\uff09\uff0c\u8981\u4e0d\u7136 $p$ \u589e\u52a0\u7684\u65f6\u5019\u4e0d\u7b49\u5f0f\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e86\u3002\u4ed4\u7ec6\u601d\u8003\u4f7f\u7528\u5806\u7ef4\u62a4\uff0c\u590d\u6742\u5ea6 $\\mathcal O(\\max p_i\\times m\\log n)$\uff0c\u8be6\u7ec6\u4e00\u70b9\u5c31\u662f\u6309\u7167 $\\max_p$ \u4ece\u540e\u5f80\u524d\u626b\u4e00\u904d\uff0c\u80fd\u8d2a\u5c31\u8d2a\u3002\n\n~~\u4ee3\u7801\u5495\u5495\u5495\u5566~~",
        "postTime": 1626008549,
        "uid": 7706,
        "name": "AC_Evil",
        "ccfLevel": 9,
        "title": "[NOI2017]\u852c\u83dc"
    },
    {
        "content": "### \u9898\u610f\n\n\u597d\u7e41\u7410\u554a\uff0c\u81ea\u5df1\u53bb\u770b\u3002\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13736538.html)\n\n\u8ba9\u6211\u8fc7\u5427 >_<\n\n\u8fd9\u9898\u597d\u795e\u554a\uff0c\u53e3\u80e1\u90fd\u6ca1\u53e3\u80e1\u51fa\u6765\uff0c\u8fd8\u662f\u770b\u7740 yyb \u7684\u9898\u89e3\u5199\u51fa\u6765\u7684\u3002\n\n\u9996\u5148\u6211\u4e0d\u4f1a\u8d39\u7528\u6d41\u3002\n\n\u4f17\u6240\u5468\u77e5\u8fd9\u4e2a\u852c\u83dc\u53d8\u8d28\u7684\u95ee\u9898\u5f88\u70e6\u5bf9\u5427\uff0c\u6211\u4eec\u4e0d\u5982\u65f6\u95f4\u5012\u6d41\u4e00\u4e0b\uff0c\u6c42\u51fa\u6700\u540e\u4e00\u5929\u80fd\u5356\u591a\u5c11\u94b1\uff0c\u7136\u540e\u6bcf\u4e00\u5929\u7ed9\u4f60\u8fdb\u4e00\u4e9b\u852c\u83dc\u518d\u63a8\u51fa\u6bcf\u4e00\u5929\u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u8d2a\u5fc3\u3002\u5047\u8bbe\u6240\u6709\u852c\u83dc\u4e0d\u4f1a\u53d8\u8d28\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u5356\u90a3\u4e9b\u8d35\u7684\u3002\u6240\u4ee5\u8bf4\u5bf9\u4e8e\u6bcf\u4e00\u5929\u6765\u8bf4\u8d35\u7684\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u4fbf\u5b9c\u7684\u5356\u7684\u665a\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u6211\u4eec\u80fd\u4ece\u7b2c $p$ \u5929\u7684\u7b54\u6848\u63a8\u5230\u7b2c $p-1$ \u5929\u7684\u7b54\u6848\u3002\u56e0\u4e3a\u7b2c $p$ \u5929\u80fd\u5356\u7684\u852c\u83dc\u7b2c $p-1$ \u5929\u4e5f\u80fd\u5356\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u628a\u5229\u6da6\u6700\u5c0f\u7684 $m$ \u4e2a\u852c\u83dc\u6254\u6389\u6362\u6210\u522b\u7684\u5c31\u597d\u4e86\u3002\n\n\u6240\u4ee5\u8bf4\uff0c\u5173\u4e8e\u6700\u540e\u4e00\u5929\u7684\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u4e2a\u5806\u628a\u6240\u6709\u80fd\u5356\u7684\u852c\u83dc\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7136\u540e\u65f6\u95f4\u5012\u6d41\u6765\u66b4\u529b\u6a21\u62df\uff0c\u6bcf\u4e00\u5929\u4f1a\u52a0\u8fdb\u6765\u4e00\u4e9b\u852c\u83dc\uff0c\u7136\u540e\u8d2a\u5fc3\u53d6\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4ece $p$ \u5929\u63a8\u5230 $p-1$ \u5929\u4e5f\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\u7684\uff0c\u7ef4\u62a4\u65b9\u6cd5\u4e5f\u662f\u5dee\u4e0d\u592a\u591a\u7684\uff0c\u53ea\u8981\u6ce8\u610f\u4e00\u4e0b\u7b2c\u4e00\u6b21\u5356\u6709\u989d\u5916\u7684\u6536\u76ca\u5c31\u597d\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e5+51;\nstruct Item{\n\tll val,id;\n\tinline const bool operator <(const Item &rhs)const\n\t{\n\t\treturn this->val<rhs.val;\n\t}\n};\nItem it;\nll n,m,qcnt,r=1e5,rr,tp,sm;\nll u[MAXN],s[MAXN],c[MAXN],x[MAXN],used[MAXN],vis[MAXN];\nli res[MAXN];\nItem st[MAXN];\nvector<ll>v[MAXN];\npriority_queue<Item>q;\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\nint main()\n{\n\tn=read(),m=read(),qcnt=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tu[i]=read(),s[i]=read(),c[i]=read(),x[i]=read();\n\t\tv[x[i]?min(r,(c[i]+x[i]-1)/x[i]):r].push_back(i);\n\t}\n\tfor(register int i=r;i;i--)\n\t{\n\t\tfor(register int j:v[i])\n\t\t{\n\t\t\tq.push((Item){u[j]+s[j],j});\n\t\t}\n\t\tif(q.empty())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tfor(register int j=m;j&&!q.empty();)\n\t\t{\n\t\t\tit=q.top(),q.pop();\n\t\t\tif(!vis[it.id])\n\t\t\t{\n\t\t\t\tvis[it.id]=1,res[r]+=it.val,used[it.id]++,j--;\n\t\t\t\tc[it.id]>1?q.push((Item){u[it.id],it.id}):(void)1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trr=min(j,c[it.id]-used[it.id]-(i-1)*x[it.id]);\n\t\t\t\tres[r]+=(li)rr*it.val,used[it.id]+=rr,j-=rr;\n\t\t\t\tif(used[it.id]!=c[it.id])\n\t\t\t\t{\n\t\t\t\t\tst[++tp]=(Item){u[it.id],it.id};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(tp)\n\t\t{\n\t\t\tq.push(st[tp--]);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tq.pop();\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tsm+=used[i];\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(used[i]==1)\n\t\t{\n\t\t\tq.push((Item){-s[i]-u[i],i});\n\t\t}\n\t\tif(used[i]>1)\n\t\t{\n\t\t\tq.push((Item){-u[i],i});\n\t\t}\n\t}\n\tfor(register int i=r-1;i;i--)\n\t{\n\t\tres[i]=res[i+1];\n\t\twhile(sm>i*m&&!q.empty())\n\t\t{\n\t\t\tit=q.top(),q.pop(),it.val=-it.val;\t\n\t\t\tif(used[it.id]>1)\n\t\t\t{\n\t\t\t\trr=min(sm-i*m,used[it.id]-1);\n\t\t\t\tused[it.id]-=rr,sm-=rr,res[i]-=(li)rr*it.val;\n\t\t\t\tif(used[it.id]==1)\n\t\t\t\t{\n\t\t\t\t\tq.push((Item){-u[it.id]-s[it.id],it.id});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tq.push((Item){-u[it.id],it.id});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsm--,used[it.id]--,res[i]-=it.val;\t\n\t\t\t}\n\t\t} \n\t}\n\tfor(register int i=0;i<qcnt;i++)\n\t{\n\t\tprintf(\"%lld\\n\",res[read()]);\n\t}\n}\n```",
        "postTime": 1601086032,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3826 \u3010[NOI2017]\u852c\u83dc\u3011"
    },
    {
        "content": "## Part.0 \u5199\u5728\u524d\u9762\n\u672c\u7bc7\u9898\u89e3\u4e0d\u4f1a\u4ee5\u6a21\u62df\u8d39\u7528\u6d41\u7684\u5f62\u5f0f\u8bb2\u89e3\u8d2a\u5fc3\u7684\u601d\u8003\u8fc7\u7a0b\u3002\n## Part.1 \u9898\u610f\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6ce8\u610f\u4e00\u4e0b\u9898\u610f\u4e2d\u7684\u8fc7\u671f\u662f**\u5356\u6389\u4e86\u7684\u4e0d\u4f1a\u4e0a\u65b0**\u7136\u540e\u8fc7\u671f\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n$c_i=5,x_i=2$\uff0c\u90a3\u4e48\u5982\u679c\u7b2c\u4e00\u5929\u5356\u4e86\u4e00\u4e2a\uff0c\u90a3\u4e48\u7b2c\u4e00\u5929\u5c31\u53ea\u8fc7\u671f\u4e00\u4e2a\uff0c\u5982\u679c\u5356\u4e86\u4e09\u4e2a\uff0c\u90a3\u4e48\u7b2c\u4e00\u5929\u4e0d\u8fc7\u671f\uff0c\u7b2c\u4e8c\u5929\u8fc7\u671f\u4e00\u4e2a\u3002\n## Part.2 \u90e8\u5206\u5206\n\u76f4\u63a5\u8d39\u7528\u6d41\uff0c\u505a\u6cd5\u53c2\u8003\u5176\u4ed6\u9898\u89e3\u3002\n## Part.3 \u8d2a\u5fc3\n\u6211\u4eec\u91c7\u53d6\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff1a\u53d1\u73b0 $m\\leq10$\uff0c\u4e0d\u96be\u731c\u5230\u8fd9\u662f\u7a81\u7834\u70b9\uff0c**\u628a\u6bcf\u5929\u62c6\u6210\u591a\u4e2a\u5356\u83dc\u4f4d**\uff01\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u9009\u51fa\u5f53\u524d\u80fd\u9009\u7684\u6700\u8d35\u7684\u83dc\uff0c\u5e76\u6311**\u6700\u540e\u4e00\u4e2a\u7a7a\u4f4d**\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u6ca1\u6709\u7a7a\u4f4d\u5219\u8df3\u8fc7\u3002\n\n\u8003\u8651\u8bc1\u660e\u5176\u6b63\u786e\u6027\uff0c\u83dc\u7684\u5c1d\u8bd5\u987a\u5e8f\u4e00\u5b9a\u6700\u4f18\uff0c\u4f46\u662f\u76f4\u63a5\u5229\u7528\u7a7a\u4f4d\u6784\u9020\u51fa\u4e00\u4e2a\u65b9\u6848\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5728\u9884\u5904\u7406\u4e2d\u586b\u5230\u4e86\u4e00\u4e2a\u5f88\u9760\u540e\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5b9e\u9645\u4e0a\u5e76\u4e0d\u80fd\u7528\u8fd9\u4e2a\u4f4d\u7f6e\u3002\u4f46\u662f\u5728**\u6bcf\u9012\u63a8\u4e00\u4e2a\u5356\u83dc\u4f4d\u65f6\uff0c\u6700\u591a\u53ea\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u83dc\uff0c\u56e0\u6b64\u5356\u83dc\u4f4d\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u5356\u7684\u83dc\uff0c\u90a3\u4e48\u4e0d\u80fd\u7528\u7684\u4f4d\u7f6e\u4e00\u5b9a\u53ef\u4ee5\u5411\u524d\u79fb\u52a8\u5230\u5408\u6cd5\u4f4d\u7f6e**\uff0c\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u7ef4\u62a4\u6700\u540e\u4e00\u4e2a\u7a7a\u4f4d\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\uff0c\u6bcf\u6b21\u586b\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u5408\u5e76\u8fdb\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5373\u53ef\uff0c\u5373 `fa[x]=find(x-1)`\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u505a\u6389\u4e86\u8fd9\u9053\u795e\u4ed9\u8d2a\u5fc3\u3002\n\n\u4ee3\u7801\u592a\u4e11\u4e0d\u653e\u4e86\uff0c\u6709\u9700\u8981\u53ef\u4ee5\u627e\u6211\u8981\u3002",
        "postTime": 1647304264,
        "uid": 375895,
        "name": "SSL_wj",
        "ccfLevel": 0,
        "title": "P3826"
    },
    {
        "content": "\u795e\u4ed9\u8d2a\u5fc3\u9898\uff0c\u6211\u8fd9\u79cd\u849f\u84bb\u53ea\u80fd\u5199\u4e00\u7bc7\u9898\u89e3\u6765 $\\text{orz}$ \u3002\n\n### \u601d\u8def\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u505a\u8fd9\u9053\u9898\u65f6\uff0c\u6b63\u7740\u53bb\u9012\u63a8\u8d2a\u5fc3\u53ca\u5176\u56f0\u96be\u3002\n\n\u5c24\u5176\u8fd8\u6709\u4e00\u4e9b\u8fc7\u671f\u7b49\u9650\u5236\uff0c\u89e3\u51b3\u8d77\u6765\u53ca\u5176\u590d\u6742\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u80fd\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u601d\u8def\uff1a**\u65f6\u5149\u5012\u6d41**\u3002\n\n\u6211\u4eec\u4ece\u53cd\u7740\u6765\u9012\u63a8\u8d2a\u5fc3\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fc7\u671f\u8fd9\u4e2a\u9650\u5236\u5c31\u53d8\u6210\u4e86\u51fa\u73b0\u3002\n\n\u662f\u4e0d\u662f\u77ac\u95f4\u5c31\u7b80\u5355\u591a\u4e86\u3002\n\n### \u5b9e\u73b0\u6b65\u9aa4\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u6b65\u9aa4\uff1a\n\n1. \u7b97\u51fa\u7b2c\u5341\u4e07\u5929\u7684\u7b54\u6848\u3002\n\n2. \u4e0d\u65ad\u5f80\u524d\u9012\u63a8\uff0c\u7b97\u51fa\u524d\u9762\u6240\u6709\u7684\u8d21\u732e\uff0c\u5217\u51fa\u7b54\u6848\u8868\u3002\n\n3. \u6700\u540e $O(1)$ \u67e5\u8be2\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ece $p=10^5$ \u5f00\u59cb\u4ece\u540e\u5f80\u524d\u63a8\u3002\n\n\u9996\u5148\u8981\u8bb0\u5f55\u6bcf\u4e2a\u65f6\u523b\u51fa\u73b0\u90a3\u4e9b\u83dc\uff0c\u53ef\u4ee5\u7528 $\\text{vector}$\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e00\u4e2a\u65f6\u523b\u9009\u7684\u7684\u83dc\u7528\u4f18\u5148\u961f\u5217\u6765\u7ef4\u62a4\u3002\n\n\u4e00\u5f00\u59cb\u4ece $\\text{vector}$ \u52a0\u5165\u7684\u83dc\u7684\u503c\u662f $a_i+s_i$\u3002\n\n\u56e0\u4e3a\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002\n\n\u7136\u540e\uff0c\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u62ff\u51fa\u5806\u9876\u6700\u5927\u7684\u503c\u3002\n\n\u6211\u4eec\u540c\u6837\u8fd8\u8981\u8bb0\u5f55\u8fd9\u4e2a\u83dc\u6709\u6ca1\u6709\u88ab\u9009\u8fc7\u3002\n\n\u5982\u679c\u62ff\u51fa\u7684\u83dc\u6ca1\u6709\u88ab\u9009\u8fc7\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9**\u4e00\u4e2a**\u8bb0\u5f55\u7b54\u6848\uff0c\u5269\u4e0b\u7684**\u76f4\u63a5**\u4ee5 $a_i$ \u4e3a\u6743\u503c\u63d2\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\u5982\u679c\u62ff\u51fa\u7684\u83dc\u88ab\u9009\u8fc7\u4e86\uff0c\u5c31\u80fd\u53d6\u591a\u5c11\u53d6\u591a\u5c11\u3002\n\n\u6ce8\u610f\u4e0a\u8ff0\u8fc7\u7a0b\u7684\u7b54\u6848\u5168\u90e8\u90fd\u662f\u7ed9\u7b2c\u5341\u4e07\u5929\u52a0\u7684\u8d21\u732e\u3002\n\n\u9012\u63a8\u975e\u5e38\u7b80\u5355\u3002\n\n\u6bcf\u6b21\u5220\u6389\u8d21\u732e\u6700\u5c11\u7684\u83dc\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int maxn = 100010;\n\nint n , m , k , a[maxn] , s[maxn] , c[maxn] , x[maxn] , ans[maxn];\nint p = 100000 , now , sum[maxn] , used[maxn];\n\nqueue<pair<int , int> > r;\nvector<int> l[maxn];\npriority_queue< pair<int , int> > q;\npriority_queue< pair<int , int> , vector<pair<int , int> > , greater< pair<int , int> > > q2;\n\ninline int read()\n{\n    int asd = 0 , qwe = 1; char zxc;\n    while(!isdigit(zxc = getchar())) if(zxc == '-') qwe = -1;\n    while(isdigit(zxc)) asd = asd * 10 + zxc - '0' , zxc = getchar();\n    return asd * qwe;\n}\n\nsigned main()\n{\n    // freopen(\"1.in\" , \"r\" , stdin);\n    // freopen(\"1.out\" , \"w\" , stdout);\n    n = read() , m = read() , k = read();\n    for(int i = 1;i <= n;i++)\n    {\n        a[i] = read() , s[i] = read() , c[i] = read() , x[i] = read();\n        if(x[i] == 0) l[p].push_back(i);\n        else l[min(p , (c[i] + x[i] - 1) / x[i])].push_back(i);\n    }\n    for(int i = p;i >= 1;i--)\n    {\n        for(auto j : l[i]) q.push(make_pair(a[j] + s[j] , j));\n        if(q.empty()) continue;\n        for(int tim = m;tim >= 1 && q.empty() == 0;q.pop())\n        {\n            int top = q.top().second;\n            // cout << top << \" \" << tim << \" \" << used[top] << \" \" << a[top] << \" \" << s[top] << \" \" << i << \" \" << ans[p] << endl;\n            if(used[top] == 0)\n            {\n                tim--;\n                ans[p] += (a[top] + s[top]) , sum[top]++ , used[top] = 1;\n                if(sum[top] != c[top]) q.push(make_pair(a[top] , top));\n            }\n            else\n            {\n                int last = c[top] - (i - 1) * x[top] - sum[top];\n                int del = min(last , tim);\n                ans[p] += del * a[top] , sum[top] += del , tim -= del;\n                if(sum[top] != c[top]) r.push(make_pair(a[top] , top));\n            }\n        }\n        while(!r.empty()) q.push(r.front()) , r.pop();\n    }\n    for(int i = 1;i <= n;i++)\n    {\n        now += sum[i];\n        if(sum[i] == 1) q2.push(make_pair(a[i] + s[i] , i));\n        else if(sum[i] > 1) q2.push(make_pair(a[i] , i));\n    }\n    for(int i = p - 1;i >= 1;i--)\n    {\n        ans[i] = ans[i + 1];\n        int can_del = now - i * m;\n        while(can_del > 0)\n        {\n            int top = q2.top().second; q2.pop();\n            if(sum[top] == 1)\n            {\n                ans[i] -= (a[top] + s[top]);\n                can_del-- , now--;\n            }\n            else\n            {\n                int del = min(can_del , sum[top] - 1);\n                ans[i] -= a[top] * del;\n                can_del -= del , sum[top] -= del , now -= del;\n                if(sum[top] > 1) q2.push(make_pair(a[top] , top));\n                else if(sum[top] == 1) q2.push(make_pair(a[top] + s[top] , top));\n            }\n        }\n    }\n    for(int i = 1;i <= k;i++)\n    {\n        int x = read();\n        cout << ans[x] << endl;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1645085082,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "[NOI2017] \u852c\u83dc \u9898\u89e3"
    }
]