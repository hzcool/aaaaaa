[
    {
        "content": "\u9996\u5148\u6700\u76f4\u63a5\u7684\u505a\u6cd5\u662f\u628a\u6240\u6709\u53ef\u884c\u7684\u70b9\u76f4\u63a5\u8fde\u8fb9\uff0c\u6c42\u4e00\u4e2a\u6700\u77ed\u8def\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u4e2a\u70b9\u7684\u8fde\u8fb9\u662f\u4e00\u6bb5\u4e8c\u7ef4\u7684\u533a\u95f4\uff0c\u603b\u5171\u6709 $O(n^2)$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u603b\u5171\u4f1a\u6709 $O(n^4)$ \u7684\u8fb9\uff0c\u4e0d\u53ef\u63a5\u53d7\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u4f55\u4f18\u5316\uff1a\n\n### \u4f18\u5316\u8fde\u8fb9\n\n\u9996\u5148\u6700\u5957\u8def\u7684\u529e\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u662f\u4e00\u4e2a\u70b9\u5411\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\u3002\u7f51\u7edc\u6d41\u7684\u77e5\u8bc6\u544a\u8bc9\u6211\u4eec\uff0c\u70b9\u5411\u533a\u95f4\u7684\u8fde\u8fb9\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u4f18\u5316\uff0c\u4e8e\u662f\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e00\u884c\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u884c\u5185\u4f18\u5316\u8fde\u8fb9\u3002\n\n\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\uff0c\u70b9\u6570\u662f $O(n^2)$ \u7684\uff0c\u8fb9\u6570\u539f\u672c\u662f $O(n^4)$ \u7684\uff0c\u4f7f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u540e\u964d\u4e3a$O(n^3logn)$ ,\u4f7f\u7528dijkstra\u7b97\u6cd5\u6c42\u6700\u77ed\u8def\uff0c\u590d\u6742\u5ea6\uff1a\n\n$O(n^3lognlog(n^3logn))$\n\n\u7528\u4eba\u8bdd\u8bf4\uff0c\u53eb\u505a $O(\u80fd\u8fc7)$\n \n### \u62c6\u70b9\n\n\u8fd9\u4e2a\u505a\u6cd5\u662f\u76ee\u524d\u7f51\u4e0a\u6700\u5e38\u89c1\u7684\u505a\u6cd5\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u72b6\u6001 $dp[i][j][k]$ \u8868\u793a\u5230\u8fbe\u70b9 $(i,j)$ \uff0c\u5269\u4f59\u7684\u80fd\u91cf\u662f $k$ \uff0c\u6bcf\u8d70\u4e00\u683c\u9700\u8981\u6d88\u80171\u70b9\u80fd\u91cf\uff0c\u5230\u8fbe\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u8865\u5145\u4e86 $a[i][j]$ \u70b9\u80fd\u91cf\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u70b9\u5411\u5916\u53ea\u6709\u4e94\u79cd\u8f6c\u79fb\uff0c\u5206\u522b\u662f\u4e0a\u4e0b\u5de6\u53f3\u548c\u4e0d\u52a8\u3002\u7528\u8fd9\u4e2a\u4e1c\u897f\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8003\u8651\u5230 $a[i][j]$ \u8fd8\u662f\u5f88\u5c0f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e48\u505a\u8fd8\u662f\u53ef\u4ee5\u8dd1\u8fc7\u53bb\u7684\u3002\u4e0d\u8fc7\u5728bzoj\u4e0a\u8981\u8dd125s\u5de6\u53f3\u3002\n\n### \u5e76\u67e5\u96c6\u4f18\u5316\n\n\u8fd9\u4e2a\u505a\u6cd5\u662f\u4e00\u4e2a\u6bd4\u8f83\u7384\u7684\u79d1\u6280\uff0c\u5728\u6b64\u4e4b\u524d\u6211\u8fd8\u771f\u7684\u6ca1\u6709\u89c1\u8fc7\u2026\u2026\n\n\u8fd9\u4e5f\u5e94\u8be5\u662f\u672c\u9898\u76ee\u524d\u7684\u6700\u4f18\u505a\u6cd5\u3002\n\n\u9996\u5148\u770b\u4e00\u4e2a\u5f31\u5316\u7248\u7684\u9898\uff1ahttp://acm.hdu.edu.cn/showproblem.php?pid=5361\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9898\u662f\u672c\u9898\u7684\u4e00\u7ef4\u60c5\u51b5\uff0c\u5148\u6765\u89e3\u51b3\u8fd9\u4e2a\u4e00\u7ef4\u7684\u95ee\u9898\u3002\n\n\u8003\u8651\u5230\u4e00\u4e2a\u70b9\u7684\u8fde\u8fb9\u662f $[L_i,R_i]$ \u5185\u7684\u6240\u6709\u70b9\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u7aef\u70b9\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u4e8c\u6b21\u8fdb\u5165\uff08\u76f8\u5f53\u4e8e\u201c\u56de\u5934\u201d\uff09\uff0c\u8fd9\u4e2a\u70b9\u5fc5\u7136\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0c\u56e0\u4e3a\u76f8\u5f53\u4e8e\u6211\u4eec\u7ed5\u4e86\u51e0\u6b65\u53c8\u7ed5\u56de\u6765\u4e86\uff0c\u6211\u4eec\u5982\u679c\u80fd\u60f3\u4e00\u4e2a\u529e\u6cd5\u8df3\u8fc7\u8fd9\u4e9b\u70b9\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5f88\u4f18\u8d8a\u7684\u590d\u6742\u5ea6\u3002\n\n\u5f53\u5e74\u591a\u6821\u8003\u573a\u4e0a\u5f88\u591a\u9009\u624b\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2aset\uff0c\u4ee5\u6b64\u5224\u65ad\u5f53\u524d\u70b9\u662f\u5426\u88ab\u66f4\u65b0\u3002\u7136\u800c\u6709\u4e00\u4e2a\u66f4\u4f18\u7f8e\u7684\u505a\u6cd5\u662f\u5e76\u67e5\u96c6\uff1a\u6211\u4eec\u628a\u5df2\u7ecf\u66f4\u65b0\u7684\u70b9\u653e\u8fdb\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u6839\u8282\u70b9\u6307\u5411\u6700\u53f3\u8fb9\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\u3002\u8fd9\u6837\u5f53\u6211\u4eec\u4e8c\u6b21\u8fdb\u5165\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u53ef\u4ee5 $O(1)$ \u5730\u8df3\u8fc7\u5f53\u524d\u6240\u6709\u8282\u70b9\u3002\uff08\u56e0\u4e3a\u7b2c\u4e00\u6b21\u904d\u5386\u5b8c\u8fd9\u4e2a\u5df2\u66f4\u65b0\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u70b9\u65f6\uff0c\u8fd9\u4e2a\u5e76\u67e5\u96c6\u76f8\u5f53\u4e8e\u8fdb\u884c\u4e86\u4e00\u6b21\u8def\u5f84\u538b\u7f29\uff0c\u540c\u65f6\u4e0d\u4f1a\u6709\u65b0\u7684\u8282\u70b9\u52a0\u5165\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u63a5\u4e0b\u6765\u7684\u8bbf\u95ee\u7684\u590d\u6742\u5ea6\u90fd\u662f $O(1)$\uff09\n\n\u90a3\u4e48\u6211\u4eec\u63a8\u5e7f\u5230\u8fd9\u4e2a\u9898\uff0c\u6cbf\u7528\u7ebf\u6bb5\u6811\u7684\u529e\u6cd5\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u5217\u5efa\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u7ef4\u62a4\u8fd9\u4e00\u5217\u54ea\u4e9b\u70b9\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u3002\n\n\u7136\u800c\u5982\u679c\u76f4\u63a5\u52a0\u4e0a\u5e76\u67e5\u96c6\u7684\u8bdd\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff1a**\u5df2\u7ecf\u66f4\u65b0\u8fc7\u7684\u70b9\u4e0d\u80fd\u88ab\u66f4\u65b0\u7b2c\u4e8c\u6b21\uff0c\u8fd9\u662f\u672c\u7b97\u6cd5\u6b63\u786e\u7684\u5145\u8981\u6761\u4ef6\u3002**\n\n\u8003\u8651\u6211\u4eec\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u627e\u5230\u4e00\u4e2a\u70b9\u8df3\u8fc7\u53bb\uff0c\u8fd9\u4e00\u4e2a\u533a\u57df\u5185\u7684\u6240\u6709\u70b9\u90fd\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u6b64\u4f1a\u76f2\u76ee\u7684\u8df3\uff0c\u8fd9\u4e00\u4e2a\u533a\u57df\u5185\u7684\u70b9\uff08\u4e0b\u9762\u79f0\u4f5c\u67d0\u4e00\u70b9\u7684\u5b50\u8282\u70b9\uff09\u4ed6\u4eec\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u548c\u8fd9\u4e00\u533a\u57df\u5185\u522b\u7684\u70b9\u7684\u5b50\u8282\u70b9\u662f\u4f1a\u76f8\u4ea4\u7684\uff0c\u8fd9\u4e00\u7247\u76f8\u4ea4\u7684\u533a\u57df\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4f20\u7edf\u7684\u6700\u77ed\u8def\u7b97\u6cd5\u5c31\u4f1a\u88ab\u591a\u6b21\u66f4\u65b0\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u8fdb\u5165\u8fd9\u4e9b\u70b9\u662f\u6ca1\u6709\u51b3\u7b56\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u66f4\u6539\u8fb9\u6743\uff0c\u6211\u4eec\u628a\u8df3\u5230\u7684\u70b9\u7684 $a[i][j]$ \u4e5f\u7b97\u8fdb\u8fb9\u6743\uff0c\u8fd9\u6837\u5c31\u662f\u6b63\u786e\u7684\u4e86\u3002\n\n\u8bc1\u660e\u8003\u8651\u6570\u5b66\u5f52\u7eb3\uff1a\n\n\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u8df3\u5230\u4e00\u4e2a $a[i][j]$ \u6700\u5c0f\u7684\u70b9\uff0c\u5230\u4ed6\u7684\u8def\u5f84\u5fc5\u7136\u662f\u6700\u4f18\u7684\u3002\n\n\u4ece\u8be5\u8282\u70b9\u51fa\u53d1\uff0c\u8df3\u5230\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e5f\u5fc5\u7136\u662f\u6700\u4f18\u7684\u3002\n\n\u5982\u679c\u8df3\u5230\u4e86\u4e00\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u8df3\u6cd5\u5fc5\u7136\u662f\u5728\u4e4b\u524d\u6700\u4f18\u9009\u62e9\u5b8c\u4e86\u4e4b\u540e\u7684\u6b21\u4f18\u51b3\u7b56\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u56e0\u6b64\u5fc5\u7136\u4e0d\u4f1a\u88ab\u66f4\u65b0\u3002\n\n\u6240\u4ee5\u8fd9\u6837\u505a\u4fdd\u8bc1\u4e86\u66f4\u65b0\u8fc7\u7684\u70b9\u4e0d\u4f1a\u88ab\u66f4\u65b0\u7b2c\u4e8c\u6b21\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u4f18\u5316\u4e86\u3002\n\n\u63d0\u4f9b\u5e76\u67e5\u96c6\u4f18\u5316\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define lson (o<<1)\n#define rson (o<<1|1)\n#define fi first\n#define sc second\n#define dbg(x) cout<<#x<<\" = \"<<(x)<<endl;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nusing namespace std;\nconst double pi=acos(-1);\nconst double eps=1e-6;\ninline int lowbit(int x){return x&(-x);}\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\ntemplate<typename T> inline T max(T x,T y,T z){return max(max(x,y),z);}\ntemplate<typename T> inline T min(T x,T y,T z){return min(min(x,y),z);}\ntemplate<typename T> inline T sqr(T x){return x*x;}\ntemplate<typename T> inline void checkmax(T &x,T y){x=max(x,y);}\ntemplate<typename T> inline void checkmin(T &x,T y){x=min(x,y);}\ntemplate<typename T> inline void read(T &x){\nx=0;T f=1;char ch;do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\ndo x=x*10+ch-'0',ch=getchar();while(ch<='9'&&ch>='0');x*=f;\n}\ntemplate<typename A,typename B,typename C> inline A fpow(A x,B p,C yql){\n    A ans=1;\n    for(;p;p>>=1,x=1LL*x*x%yql)if(p&1)ans=1LL*x*ans%yql;\n    return ans;\n}\nstruct FastIO{\n    static const int S=1310720;\n    int wpos;char wbuf[S];\n    FastIO():wpos(0) {}\n    inline int xchar(){\n        static char buf[S];\n        static int len=0,pos=0;\n        if(pos==len)pos=0,len=fread(buf,1,S,stdin);\n        if(pos==len)return -1;\n        return buf[pos++];\n    }\n    inline int read(){\n        int c=xchar(),x=0;\n        while(c<=32&&~c)c=xchar();\n        if(c==-1)return -1;\n        for(;'0'<=c&&c<='9';c=xchar())x=x*10+c-'0';\n        return x;\n    }\n}io;\n#define read io.read\nconst int N=160;\nint dis[3][N][N],fa[N][N],a[N][N],b[N][N],vis[N][N],n,m;\ninline int find(int *fa,int x){return fa[x]?fa[x]=find(fa,fa[x]):x;}\nstruct Node{\n\tint d,x,y;\n};\ninline bool operator <(Node a,Node b){return a.d>b.d;}\ninline Node make_Node(int d,int x,int y){\n\tNode cur;cur.d=d;cur.x=x;cur.y=y;return cur;\n}\npriority_queue<Node> Q;\nconst int inf=1e9+7;\ninline void dijkstra(int dis[N][N],Node s){\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)dis[i][j]=inf;\n\tdis[s.x][s.y]=0;\n\tmemset(fa,0,sizeof(fa));memset(vis,0,sizeof(vis));\n\twhile(!Q.empty())Q.pop();\n\tQ.push(make_Node(a[s.x][s.y],s.x,s.y));\n\tfa[s.x][s.y]=s.y+1;\n\twhile(!Q.empty()){\n\t\tNode u=Q.top();Q.pop();\n\t\tint x=u.x,y=u.y;\n\t\tif(vis[x][y])continue;\n\t\tvis[x][y]=1;\n\t\tint lx=max(1,x-b[x][y]),rx=min(n,x+b[x][y]);\n\t\tfor(int i=lx;i<=rx;i++){\n\t\t\tint len=b[x][y]-abs(i-x);\n\t\t\tint up=max(1,y-len),dw=min(m,y+len);\n\t\t\tfor(int j=find(fa[i],up);j<=dw;j=find(fa[i],j)){\n\t\t\t\tif(dis[i][j]>dis[x][y]+a[x][y]){\n\t\t\t\t\tdis[i][j]=dis[x][y]+a[x][y];\n\t\t\t\t\tQ.push(make_Node(dis[i][j]+a[i][j],i,j));\n\t\t\t\t}\n\t\t\t\tfa[i][j]=j+1;\n\t\t\t}\n\t\t}\n\t}\n\t\n}\nNode st[10];\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)b[i][j]=read();\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)a[i][j]=read();\n\tfor(int i=0;i<3;i++)st[i].x=read(),st[i].y=read();\n\tfor(int i=0;i<3;i++)dijkstra(dis[i],st[i]);\n\tint mn=inf,mnpos=-1;\n\tfor(int i=0;i<3;i++){\n\t\tint cur=0;\n\t\tfor(int j=0;j<3;j++)cur+=dis[j][st[i].x][st[i].y];\n\t\tif(cur<mn)mn=cur,mnpos=i;\n\t}\n\tif(mnpos==-1)return puts(\"NO\"),0;\n\tif(mnpos==0)puts(\"X\");\n\tif(mnpos==1)puts(\"Y\");\n\tif(mnpos==2)puts(\"Z\");\n\tprintf(\"%d\\n\",mn);\n}\n```",
        "postTime": 1540558981,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    },
    {
        "content": "# \u5b9e\u5c5e\u6709\u6bd2\n\u4f5c\u4e3a\u4e00\u4e2adij\u515a\u3002\u3002\u3002  \n\u6c38\u8fdcdij\n\n\u91c7\u7528 \u4e09\u6b21dij \u7684\u65b9\u6cd5\u53ef\u884c\uff0c\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5b58\u8fb9\uff0c\n\ndij\u7684\u8bdd\uff0c\u9700\u8981\u6bcf\u4e2a\u70b9\u6269\u5c55\u4e00\u4e2a\u8303\u56f4\u5185\u6240\u6709\u8fb9\u6700\u574f\u60c5\u51b5\uff08150^4\uff09\u8d85\u8fc72\u4e2a\u4ebf\uff0c\u7a7a\u95f4\u662f\u5403\u4e0d\u6d88\u7684\n\n\u4e8e\u662f\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\u5b58\u8fb9\uff0c\u7136\u5e76\u5375\u3002\u3002\u3002\n\n\u6211\u53d1\u73b0\uff0c\u5b58\u8fb9\u8d8a\u662f\u5de5\u4e8e\u5fc3\u8ba1\uff0c\u8d8a\u662f\u4f18\u5316\u5230\u6700\u4f73\uff0c\u5c31\u8d8a\u5bb9\u6613\u5728\u7ec6\u679d\u672b\u8282\u7684\u758f\u5ffd\uff08\u7206\u7a7a\u95f4\uff09\u4e2dMLE\u5230\u65e0\u6cd5\u633d\u56de\u3002\u3002\u3002\n\n\u6240\u4ee5\n\n# \u6211\u4e0d\u5b58\u8fb9\u4e86\uff01\u6559\u7ec3\uff01\n\n\u6211\u4eec\u8003\u8651\u653e\u5f03\u5b58\u8fb9\uff0c\n\n\u56e0\u4e3a\u8fb9\u672c\u8eab\u5c31\u662f\u7ed9\u6211\u4eec\u4e00\u4e2a\u8d70\u56fe\u7684\u65b9\u5411\uff0c\u65e2\u7136\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8d70\u7684\u8303\u56f4\uff0c\u90a3\u5c31\u4e0d\u7528\u5b58\u8fb9\u4e86\uff0c\n\n\u4e8e\u662f\u8003\u8651\u5bf9\u5468\u56f4\u4e00\u5708\u7684\u70b9\u8fdb\u884c\u9009\u62e9\n```\nint l1=max(1,tx-v[tx][ty]),r1=min(n,tx+v[tx][ty]);//\u7eb5\u5411\u8fb9\u754c\n\t\tfor(int i=l1;i<=r1;i++){\n\t\t\tint len=v[tx][ty]-abs(tx-i);\n\t\t\tint l2=max(ty-len,1),r2=min(ty+len,m);//\u6a2a\u5411\u8fb9\u754c\n\t\t\tfor(int j=l2;j<=r2;j++){\n\t\t\t\tif(dis[po[i][j]]>dis[x]+(ll)cost[tx][ty]){\t\n\t\t\t\t\tdis[po[i][j]]=dis[x]+(ll)cost[tx][ty];\n\t\t\t\t\tif(!b[po[i][j]])que.push(make_pair(-dis[po[i][j]],po[i][j]));\n\t\t\t\t} \n\t\t\t}\n\t\t}\n```\n\u4f46\u662f\u65f6\u95f4\u8fd8\u662f\u6162\u3002\u3002\u3002\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c \u6211\u4eec\u53ea\u9700\u8981X\uff0cY\uff0cZ\u4e09\u4e2a\u70b9\u4e2d\u4e00\u70b9\u5230\u53e6\u5916\u4e24\u70b9\uff0c\u4e8e\u662f\uff0c\u5f53dij\u4e2d\u540c\u65f6 \n\n\u6807\u8bb0\u8fc7\uff08\u6700\u4f18\uff09X Y Z\u7684\u65f6\u5019\uff0c\u8003\u8651\u9000\u51fadij\u53ef\u4ee5\u51cf\u5c11\u65f6\u95f4\u7684\u4f7f\u7528\n```\n\tif(b[po[xa][xx]]&&b[po[ya][yy]]&&b[po[z][zz]])return; \n```\n\n\u6700\u540e\uff0c\u6bd4\u8f83\u53e6\u5916\u4e24\u4e2a\u70b9\u5230\u4e00\u4e2a\u70b9\u7684\u6d88\u8d39\uff0c\u5904\u7406\u7b54\u6848\u8f93\u51fa\n\n\u4f60\u4eec\u53ea\u770b\u8fd9\u4e2a\u5bf9\u5427\u3002\u3002\u3002\n\n~~dijspfa~~\n\n```\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#define ll long long\nusing namespace std;\nint n,m,v[200][200],xa,xx,ya,yy,z,zz;\nint cost[200][200],po[200][200],tt=0;\nll dis[35550];\nbool b[35550];\nstruct dd{\n\tint x,y;\n}q[25550];\nvoid dij(int xxx){\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(b,0,sizeof(b));\n\tdis[xxx]=0;\n\tpriority_queue< pair<ll ,int> >que;\n\tque.push(make_pair(0,xxx));\n\twhile(que.size()){\n\t\tint x=que.top().second;que.pop();\n\t\tif(b[x])continue;\n\t\tb[x]=1;tt_++;\n\t\tif(!v[q[x].x][q[x].y])continue;\n\t\tint tx=q[x].x,ty=q[x].y; \n\t\tint l1=max(1,tx-v[tx][ty]),r1=min(n,tx+v[tx][ty]);\n\t\tfor(int i=l1;i<=r1;i++){\n\t\t\tint len=v[tx][ty]-abs(tx-i);\n\t\t\tint l2=max(ty-len,1),r2=min(ty+len,m);\n\t\t\tfor(int j=l2;j<=r2;j++){\n\t\t\t\tif(dis[po[i][j]]>dis[x]+(ll)cost[tx][ty]){\t\n\t\t\t\t\tdis[po[i][j]]=dis[x]+(ll)cost[tx][ty];\n\t\t\t\t\tif(!b[po[i][j]])que.push(make_pair(-dis[po[i][j]],po[i][j]));\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\tif(b[po[xa][xx]]&&b[po[ya][yy]]&&b[po[z][zz]])return; \n//\t\tif(tt_>=tt)return ;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint tot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&v[i][j]);\n\t\t\tpo[i][j]=++tot;\n\t\t\tq[tot]=(dd){i,j};\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&cost[i][j]);\n\t\t}\n\t}\n\tscanf(\"%d%d%d%d%d%d\",&xa,&xx,&ya,&yy,&z,&zz);\n\tdij(po[xa][xx]);\t\t\t\t//\u4e09\u904ddij\n\t\tll ans1=dis[po[ya][yy]],ans2=dis[po[z][zz]];\n\tdij(po[ya][yy]);\n\t\tll ans3=dis[po[xa][xx]],ans4=dis[po[z][zz]];\n\tdij(po[z][zz]);\t\n\t\tll ans5=dis[po[ya][yy]],ans6=dis[po[xa][xx]];\n        \n\tll p1=ans3+ans6;//x\n           p2=ans1+ans5,//y\n\t   p3=ans2+ans4,//z\n\t\n\tif(p1>0x3f3f3f3f&&p2>0x3f3f3f3f&&p3>0x3f3f3f3f){//\u5224\u65ad\u662f\u5426\u6709\u7b54\u6848\n\t\tprintf(\"NO\");\n\t\treturn 0;\n\t}\n\tif(p1<=p2&&p1<=p3){\n\t\tprintf(\"X\\n%lld\",p1); \n\t}\n\telse if(p2<=p1&&p2<=p3){\n\t\tprintf(\"Y\\n%lld\",p2);\n\t}\n\telse{\n\t\tprintf(\"Z\\n%lld\",p3);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571056932,
        "uid": 197283,
        "name": "you_xiao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    },
    {
        "content": "\u4e00\u770b\u9898\u76ee\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5927\u529b\u7ebf\u6bb5\u6811\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u4f60\u76f4\u63a5\u66b4\u529b\u8fde\u8fb9\u7684\u8bdd\u8fb9\u6570\u4f1a\u7279\u522b\u5927\uff0c\u6240\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u6837\u8bf4\u6709\u70b9\u751f\u786c\uff0c\u8fd8\u662f\u4e22\u4e00\u526f\u56fe\u5427\u3002\n\n\u6bd4\u5982\uff0c\u4f60\u8981\u5c06\u4e0a\u9762\u7684\u8282\u70b9\u5411\u4e0b\u65b9\u7684\u4e03\u4e2a\u8282\u70b9\u8fde\u8fb9\uff0c\u76f4\u63a5\u66b4\u529b\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32663.png)\n\n\u8fd9\u6837\u4e00\u6b21\u8fde\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n)$\u7684\u3002\n\n\u800c\u7ecf\u8fc7\u7ebf\u6bb5\u6811\u4f18\u5316\u540e\u7684\u8fde\u8fb9\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/32664.png)\n\n\u8fd9\u6837\u4e00\u6b21\u8fde\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(\\log n)$\u3002\u867d\u7136\u56fe\u4e0a\u7684\u8fb9\u6570\u8981\u6bd4\u66b4\u529b\u591a\u4e00\u4e9b\uff0c\u4f46\u4e0b\u9762\u7684\u8fb9\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u4e00\u90e8\u5206\uff0c\u662f$O(n)$\u7684\uff0c\u5bf9\u603b\u4f53\u7684\u8fb9\u6570\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u5f71\u54cd\u3002\n\n\u73b0\u5728\u8003\u8651\u8fd9\u4e00\u9053\u9898\u3002\u6bcf\u4e00\u4e2a\u70b9\u8981\u8fde\u7684\u8fb9\u662f\u4e00\u4e2a\u8fde\u901a\u5757\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/17919.png)\n\n\u6240\u4ee5\u5c31\u4ece\u4e0a\u5230\u4e0b\u679a\u4e3e\u6bcf\u4e00\u884c\uff0c\u5728\u6bcf\u4e00\u884c\u5185\u90e8\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\u8fd9\u6837\u70b9\u6570\u662f$O(nm)$\u7684\uff0c\u8fb9\u6570\u662f$O(n^2m\\log m)$\u7684\uff0c\u5806\u4f18\u5316\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n^2m\\log m\\log(n^2m\\log m))$\u3002\u770b\u8d77\u6765\u5f88\u6050\u6016\uff0c\u4f46\u662f\u7ecf\u8fc7\u5b9e\u6d4b\u8fb9\u6570\u4e0d\u4f1a\u8d85\u8fc7$20000000$\u3002\uff08\u5f53\u7136\u5982\u679c\u4f60\u8db3\u591f\u5f3a\u7684\u8bdd\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff09\n\n\u4e0b\u9762\u8d34\u51fa\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#define ll long long\nusing namespace std;\nstruct Edge\n{\n    int to;\n    int next;\n    ll len;\n}e[20000005];\nll n,m,edgenum,head[1000005],points;//points\u662f\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u6570\u91cf\nll dis[1000005],a[305][305],b[305][305],ansx,ansy,ansz;\nint lson[1000005],rson[1000005],root[305],p[305][305],x,y,z,xx,yy;//lson,rson\u662f\u7ebf\u6bb5\u6811\u7684\u5de6\u53f3\u513f\u5b50\u7684\u4f4d\u7f6e\uff0croot\u662f\u6bcf\u4e00\u884c\u7684\u7ebf\u6bb5\u6811\u7684\u8ddf\u7684\u4f4d\u7f6e\uff0cp\u662f\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u3002\npriority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int> > >q;\nvoid add(int u,int v,ll l)\n{\n    e[++edgenum].len=l;\n    e[edgenum].next=head[u];\n    e[edgenum].to=v;\n    head[u]=edgenum;\n}\nint build(int line,int o,int l,int r)\u5728\u7b2cline\u884c\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9\u7f16\u53f7\u662fo\uff0c\u7ba1\u8f96\u7684\u533a\u95f4\u662f[l,r]\n{\n    if(l==r)\n    {\n        p[line][l]=o;//\u5728\u8fd9\u91cc\u66f4\u65b0p\uff0c\u8868\u793a\u7b2cline\u884c\u7b2cl\u5217\u7684\u70b9\u5bf9\u5e94\u7684\u8282\u70b9\u662fo\n        return o;\n    }\n    int mid=l+r>>1;\n    lson[o]=build(line,++points,l,mid);\n    rson[o]=build(line,++points,mid+1,r);\n    add(o,lson[o],0);//\u4ece\u7236\u8282\u70b9\u5f80\u5b69\u5b50\u5efa\u8fb9\n    add(o,rson[o],0);\n    return o;\n}\nvoid add2(int o,int l,int r,int node,int from,int to,ll v)//\u5f53\u524d\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u662fo\uff0c\u7ba1\u8f96\u533a\u95f4\u662f[l,r]\uff0c\u8981\u4ecenode\u5411[from,to]\u7684\u533a\u95f4\u8fde\u8fb9\u6743\u4e3av\u7684\u8fb9\n{\n//\tprintf(\"Enter:%d %d\\n\",l,r);\n    if(l>=from&&r<=to)return add(node,o,v);\n    int mid=l+r>>1;\n    if(from<=mid)add2(lson[o],l,mid,node,from,to,v);\n    if(to>mid)add2(rson[o],mid+1,r,node,from,to,v);\n}\nvoid Dijkstra(int u)//\u6700\u77ed\u8def\u677f\u5b50\n{\n    for(int i=1;i<=points;i++)dis[i]=100000000000000000;\n    dis[u]=0;\n    q.push(make_pair(dis[u],u));\n    while(!q.empty())\n    {\n        int node=q.top().second;\n        ll len=q.top().first;\n        q.pop();\n        if(len!=dis[node])continue;\n        for(int hd=head[node];hd;hd=e[hd].next)\n        {\n            int to=e[hd].to;\n            if(dis[to]>dis[node]+e[hd].len)\n            {\n                dis[to]=dis[node]+e[hd].len;\n                q.push(make_pair(dis[to],to));\n            }\n        }\n    }\n//\tfor(int i=1;i<=n;i++)\n//\t{\n//\t\tfor(int j=1;j<=m;j++)\n//\t\t  printf(\"%lld \",dis[p[i][j]]);\n//\t\tprintf(\"\\n\");\n//\t}\n//\tprintf(\"\\n\");\n}\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++)root[i]=build(i,++points,1,m);\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        scanf(\"%lld\",&a[i][j]);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    {\n        scanf(\"%lld\",&b[i][j]);\n//\t\tprintf(\"%d %d:\\n\",i,j);\n        for(int k=max(1ll,i-a[i][j]);k<=min(n,i+a[i][j]);k++)\n        {\n            int rest=a[i][j]-abs(k-i);\n//\t\t\tprintf(\"%d %d %d\\n\",k,max(1,j-rest),min(m,(ll)j+rest));\n            add2(root[k],1,m,p[i][j],max(1,j-rest),min(m,(ll)j+rest),b[i][j]);\n        }\n    }\n    scanf(\"%d%d\",&xx,&yy);\n    x=p[xx][yy];\n    scanf(\"%d%d\",&xx,&yy);\n    y=p[xx][yy];\n    scanf(\"%d%d\",&xx,&yy);\n    z=p[xx][yy];\n//\tfor(int i=1;i<=points;i++)\n//\t{\n//\t\tprintf(\"%d:\",i);\n//\t\tfor(int hd=head[i];hd;hd=e[hd].next)\n//\t\t{\n//\t\t\tprintf(\"(%d %lld)\",e[hd].to,e[hd].len);\n//\t\t}\n//\t\tprintf(\"\\n\");\n//\t}\n//\tfor(int i=1;i<=points;i++)\n//\t{\n//\t\tprintf(\"%d:\",i);\n//\t\tfor(int hd=head[i];hd;hd=e[hd].next)\n//\t\t{\n//\t\t\tprintf(\"(%d %lld)\",e[hd].to,e[hd].len);\n//\t\t}\n//\t\tprintf(\"\\n\");\n//\t}//\u770b\u770b\u8fd9\u4e00\u5806\u4e00\u5806\u7684\u6ce8\u91ca\uff0c\u5c31\u77e5\u9053\u6211\u5199\u9898\u7684\u65f6\u5019\u6709\u591a\u4e48\u5d29\u6e83\n    Dijkstra(x);\n    ll xy=dis[y],xz=dis[z];\n    Dijkstra(y);\n    ll yx=dis[x],yz=dis[z];\n    Dijkstra(z);\n    ll zx=dis[x],zy=dis[y];\n    ansx=yx+zx;\n    ansy=xy+zy;\n    ansz=xz+yz;\n    if(ansx>100000000000000000&&ansy>100000000000000000&&ansz>100000000000000000)\n    {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    if(ansx<=ansy&&ansx<=ansz)printf(\"X\\n%lld\\n\",ansx);\n    else if(ansy<=ansx&&ansy<=ansz)printf(\"Y\\n%lld\\n\",ansy);\n    else printf(\"Z\\n%lld\\n\",ansz);\n    return 0;\n}\n```",
        "postTime": 1536738819,
        "uid": 54214,
        "name": "wucstdio",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    },
    {
        "content": "$O(n^2\\log n)$ \u89e3\u6cd5\uff01\n\n\u9996\u5148\u8981\u77e5\u9053\u6700\u77ed\u8def\u7684\u5806\u5b58\u8fb9\u4f18\u5316\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u770b[\u5e38\u89c1\u4f18\u5316\u5efa\u56fe\u6280\u5de7](https://www.luogu.com.cn/blog/221955/chang-jian-you-hua-jian-tu-ji-qiao)\u3002\n\n\u7136\u540e\u6700\u77ed\u8def\u90e8\u5206\u590d\u6742\u5ea6\u5c31\u662f $O(n^2\\log n)$ \u4e86\u3002\n\n\u73b0\u5728\u53ea\u9700\u8981\u652f\u6301\u627e\u5230\u4e00\u4e2a\u659c\u7740\u7684\u6b63\u65b9\u5f62\u4e2d\u6240\u6709\u672a\u88ab\u5220\u9664\u7684\u70b9\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u5168\u90e8\u5220\u9664\u3002\n\n\u66b4\u529b\u679a\u4e3e\u662f $O(n^4)$ \u7684\u3002\n\n\u8003\u8651\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\u8def\u5f84\u538b\u7f29\uff0c\u5bf9\u6bcf\u4e00\u884c\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5220\u6389\u70b9 $(i,j)$ \u5c31\u5411 $(i,j+1)$ \u5408\u5e76\uff0c\u8fd9\u6837 $getfather(i,j)$ \u5c31\u662f $(i,j)$ \u540e\u9762\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u5220\u7684\u70b9\u3002\n\n\u5e76\u67e5\u96c6\u90e8\u5206\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002\u74f6\u9888\u662f\u6bcf\u6b21\u67e5\u8be2\u65f6\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u884c\uff0c\u590d\u6742\u5ea6 $O(n^3)$\u3002\n\n\u80fd\u4e0d\u80fd\u505a\u5230\u66f4\u4f18\uff1f\n\n\u8003\u8651\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u907f\u514d\u679a\u4e3e\u3002\n\n\u659c\u7740\u7684\u6b63\u65b9\u5f62\u4e0d\u597d\u5904\u7406\uff0c\u53ef\u4ee5\u5c06\u5750\u6807\u7cfb\u65cb\u8f6c $45$ \u5ea6\uff0c\u67e5\u8be2\u8303\u56f4\u5c31\u662f\u548c\u5750\u6807\u8f74\u5e73\u884c\u7684\u6b63\u65b9\u5f62\u3002\u672c\u8d28\u4e0a\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\u8f6c\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u3002\n\n\u7136\u540e\u5c31\u662f [P5471 [NOI2019] \u5f39\u8df3](https://www.luogu.com.cn/problem/P5471) \u4e86\uff0c\u76f4\u63a5\u6811\u5957 set \u5c31 $O(n^2\\log^2n)$ \u4e86\u3002\n\n\u80fd\u4e0d\u80fd\u518d\u505a\u5230\u66f4\u4f18\uff1f\n\n\u7ed3\u5408\u4e24\u79cd\u505a\u6cd5\u7684\u4f18\u70b9\uff0c\u7528\u7ebf\u6bb5\u6811\u5957\u5e76\u67e5\u96c6\u3002\n\n\u5177\u4f53\u505a\u6cd5\u662f\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u5efa\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5bf9\u4e8e\u533a\u95f4 $l,r$ \u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u7ed3\u70b9\uff0c\u5982\u679c $(l,j),(l+1,j)...(r,j)$ \u90fd\u88ab\u5220\u4e86\uff0c\u5219 $j$ \u5411 $j+1$ \u5408\u5e76\uff08\u8fd9\u91cc\u7684\u5b57\u6bcd\u90fd\u8868\u793a\u65cb\u8f6c\u5750\u6807\u7cfb\u4ee5\u540e\u7684\u5750\u6807\uff09\u3002\n\n\u56e0\u4e3a\u6bcf\u6b21\u67e5\u8be2\u5230\u7684\u70b9\u90fd\u4f1a\u76f4\u63a5\u5220\u6389\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u90e8\u5206\u590d\u6742\u5ea6\u5c31\u662f $n^2$ \u6b21\u5355\u70b9\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u4e5f\u5c31\u662f $O(n^2\\log n)$\u3002\n\n\u7ebf\u6bb5\u6811\u7ed3\u70b9\u6570\u5373\u5e76\u67e5\u96c6\u4e2a\u6570\u4e0d\u8d85\u8fc7 $4n$\uff0c\u6240\u4ee5\u5e76\u67e5\u96c6\u90e8\u5206\u590d\u6742\u5ea6\u4e5f\u662f $O(n^2\\log n)$\u3002\n\n\u518d\u7b97\u4e0a\u6700\u77ed\u8def dij \u7684\u590d\u6742\u5ea6\uff0c\u6240\u6709\u90e8\u5206\u90fd\u662f $O(n^2\\log n)$\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n^2\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=309;\nint a[N][N],b[N][N],f[N*4][N],px[3],py[3],pw[N][N],d[N][N],o,u,v,w,x,y;\nvector<pair<int,int>>s;\nstruct P{int x,y,w;bool operator<(P a)const{return w>a.w;}};\npriority_queue<P>q;\nint gf(int x,int y){return f[x][y]==y?y:f[x][y]=gf(x,f[x][y]);}\nbool c[N][N],e[N][N];\nvoid bd(int k,int l,int r){\n\tif(l==r){\n\t\tfor(int i=1;i<=o;++i)f[k][i]=i+e[l][i];\n\t\treturn;\n\t}\n\tint m=l+r>>1,i=1;\n\tfor(bd(k*2,l,m),bd(k*2+1,m+1,r);i<=o;++i)f[k][i]=min(gf(k*2,i),gf(k*2+1,i));\n}\nvoid qry(int k,int l,int r){//\u67e5\u8be2\u6b63\u65b9\u5f62\u5185\u5305\u542b\u7684\u70b9\n\tif(gf(k,x)>y)return;\n\tif(l==r){\n\t\tfor(int i=x;i=gf(k,i),i<=y;f[k][i]=i+1,++i)d[l][i]=w,q.push({l,i,w+a[l][i]}),s.push_back({l,i});\n\t\treturn;\n\t}\n\tint m=l+r>>1;\n\tif(u<=m)qry(k*2,l,m);\n\tif(m<v)qry(k*2+1,m+1,r);\n}\nvoid del(int k,int l,int r){//\u66f4\u65b0\u975e\u53f6\u7ed3\u70b9\u7684\u5e76\u67e5\u96c6\n\tif(l==r)return;\n\tint m=l+r>>1;\n\tu>m?del(k*2+1,m+1,r):del(k*2,l,m),f[k][v]=min(gf(k*2,v),gf(k*2+1,v));\n}\nvoid dij(int sx,int sy){\n\tint i,j;\n\twhile(q.size())q.pop(); \n\tmemset(d,9,sizeof d),memcpy(e,c,sizeof c),e[sx][sy]=1,d[sx][sy]=0,q.push({sx,sy,a[sx][sy]}),bd(1,1,o);\n\twhile(q.size()&&(d[px[0]][py[0]]>1e8||d[px[1]][py[1]]>1e8||d[px[2]][py[2]]>1e8)){\n\t\ti=q.top().x,j=q.top().y,w=q.top().w,q.pop(),s={};\n\t\tu=max(1,i-b[i][j]),v=min(o-1,i+b[i][j]),x=max(1,j-b[i][j]),y=min(o-1,j+b[i][j]),qry(1,1,o);\n\t\tfor(auto z:s)tie(u,v)=z,del(1,1,o);\n\t}\n}\nint main(){\n\tint n,m,i,j,k,l,u;\n\tscanf(\"%d%d\",&n,&m),o=n+m+1,memset(c,1,sizeof c);\n\tfor(i=1;i<=n;++i)for(j=1;j<=m;++j)scanf(\"%d\",b[i+j]+i-j+m),c[i+j][i-j+m]=0;//\u66fc\u54c8\u987f\u8ddd\u79bb\u8f6c\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\n\tfor(i=1;i<=n;++i)for(j=1;j<=m;++j)scanf(\"%d\",a[i+j]+i-j+m);\n\tfor(i=1;i<=o;++i)c[i][o]=0;\n\tfor(i=0;i<3;++i)scanf(\"%d%d\",&j,&k),px[i]=j+k,py[i]=j-k+m;\n\tfor(i=0;i<3;++i)for(dij(px[i],py[i]),j=0;j<3;++j)pw[i][j]=d[px[j]][py[j]];\n\tfor(i=0,j=k=5e7;i<3;++i){\n\t\tfor(l=u=0;l<3;++l)u+=pw[l][i];\n\t\tif(u<j)j=u,k=i;\n\t}\n\tif(k>2)puts(\"NO\");else printf(\"%c\\n%d\",'X'+k,j);\n\treturn 0;\n}\n```",
        "postTime": 1618394806,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "P4473 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\uff08\u5806\u5b58\u8fb9\u4f18\u5316\u6700\u77ed\u8def\uff09"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4eca\u5929\u6211\u4eec\u8003\u8bd5\u8003\u5230\u4e86\uff0c\u7b2c\u4e09\u9898\uff0c\u6700\u540e\u53ea\u5269\u534a\u5c0f\u65f6\u4e86\uff0c\u968f\u4fbf\u6253\u4e86\u4e2a\u66b4\u641c\uff0c\u6700\u540e\u7adf\u7136\u8fd8\u6ca1\u8c03\u5b8cQAQ\uff0c~~\u6211\u7adf\u7136\u8fde\u66b4\u529b\u90fd\u4e0d\u4f1a\u6253\u4e86~~\n\n\u54b3\u54b3\uff0c\u4e0d\u626f\u4e86\uff0c\u4e0b\u9762\u5f00\u59cb\u8bf4\u8fd9\u9053\u9898\u7684\u505a\u6cd5\n\n\u7531\u4e8eN\u548cM\u90fd\u4e0d\u5927\u4e8e150\u6700\u5bb9\u6613\u60f3\u5230\u7684\u662fFloyd\uff08\u5176\u5b9e\u662fDijkstra\u4e0d\u4f1a\u5199\uff09\u4e8e\u662f\u5c31\u6709\u4e86\u590d\u6742\u5ea6\u4e3aO($n^6$)\u768425\u5206\u7b97\u6cd5\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u768425\u5206\u505a\u6cd5\uff08\u8003\u8bd5\u65f625\u5206\uff0c\u6d1b\u8c37\u561b......0\u5206\uff09\n\u4ee3\u7801\u5982\u4e0b\uff08\u673a\u623f\u67d0\u4e2a\u5927\u4f6c\u5199\u7684\uff09\uff1a\n```\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define rep(i,a,b) for (register int i(a);i<=(b);i++)\nusing namespace std;\ntemplate <typename T>\nint read(T &x) {\n    x=0;int f=1;char c=getchar();\n\tfor(; !isdigit(c); c=getchar()) if(c=='-') f=-f;\n\tfor(; isdigit(c); c=getchar()) x=x*10+c-'0';\n\tx*=f;\n}\nint ans,n,m,b[20][20],a[20][20],c[20][20][20][20],x1,x2,x3,z1,z2,z3;\nchar t;\nint main(){\n\tfreopen(\"zhber.in\",\"r\",stdin);\n\tfreopen(\"zhber.out\",\"w\",stdout);\n\tread(n),read(m);\n\tif (n*m>450){\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tmemset(b,0,sizeof b);\n\tmemset(a,0,sizeof a);\n\tmemset(c,0,sizeof c);\n\trep(i,1,n)rep(j,1,m) read(b[i][j]);\n\trep(i,1,n)rep(j,1,m) read(a[i][j]);\n\tread(x1),read(z1),read(x2),read(z2),read(x3),read(z3);\n\trep(i1,1,n)rep(j1,1,m)rep(i2,1,n)rep(j2,1,m)\n\t\tif ((i1==i2)&&(j1==j2)) c[i1][j1][i1][j1]=0;\n\t\telse{\n\t\t\tint d=abs(i1-i2)+abs(j1-j2);\n\t\t\tif (b[i1][j1]>=d) c[i1][j1][i2][j2]=a[i1][j1];\n\t\t\telse c[i1][j1][i2][j2]=INF;\n\t\t\tif (b[i2][j2]>=d) c[i2][j2][i1][j1]=a[i2][j2];\n\t\t\telse c[i2][j2][i1][j1]=INF;\n\t\t}\n\trep(i1,1,n)rep(j1,1,m)rep(i2,1,n)rep(j2,1,m)rep(i3,1,n)rep(j3,1,m)\n\t\tif (c[i2][j2][i3][j3]>(c[i2][j2][i1][j1]+c[i1][j1][i3][j3])) c[i2][j2][i3][j3]=c[i2][j2][i1][j1]+c[i1][j1][i3][j3];\n\tans=INF;\n\tif (ans>c[x1][z1][x2][z2]+c[x3][z3][x2][z2]) ans=c[x1][z1][x2][z2]+c[x3][z3][x2][z2],t='X';\n\tif (ans>c[x2][z2][x1][z1]+c[x3][z3][x1][z1]) ans=c[x2][z2][x1][z1]+c[x3][z3][x1][z1],t='Y';\n\tif (ans>c[x1][z1][x3][z3]+c[x2][z2][x3][z3]) ans=c[x1][z1][x3][z3]+c[x2][z2][x3][z3],t='Z';\n\tif (ans<INF) printf(\"%c\\n%d\\n\",t,ans);\n\telse printf(\"NO\\n\");\n\treturn 0;\n}\n```\n~~emmmmmm\uff0c\u5176\u5b9e\u6211\u5c31\u662f\u51d1\u5b57\u6570~~\n\n\u770b\u4e00\u4e0b\u6ca1\u4ec0\u4e48\u4e0d\u597d2333\uff0c\u4e0b\u9762\u6709\u597d\u4e1c\u897f\uff0cBe patient~\n\n\u597d\u4e86\uff0c\u8a00\u5f52\u6b63\u4f20\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u90a3\u4e48\u81ea\u7136\u800c\u7136\u5c31\u60f3\u5230\u4e86Dijkstra\u7b97\u6cd5~~\uff08\u4e0d\u8981\u7ba1SPFA,\u5979\u5df2\u7ecf\u6b7b\u4e86\uff09~~\u3002\u4f46\u662f\u672c\u9898\u548c\u7eaf\u7684\u5355\u5143\u6700\u77ed\u8def\u5f84\u7565\u6709\u4e0d\u540c\uff0c\u9700\u8981\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\u90a3\u4e48\uff0c\u6700\u5bb9\u6613\u60f3\u5230\u7684\u662f\u5728\u6bcf\u4e2a\u70b9\u548c\u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u4e4b\u95f4\u52a0\u4e00\u6761\u8fb9\uff0c\u7136\u800c\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u8fb9\u603b\u6570\u7684\u6700\u5927\u503c\u662f$150^4$$*2=1012500000\n\n\u81ea\u7136\uff0c\u8fd9\u662f\u5b58\u4e0d\u4e0b\u7684(\u6d1b\u8c37\u4e0a\u7a7a\u95f4\u7ed9\u4e86512MB\u6211\u4eec\u8003\u8bd5\u624d\u7ed9128MB),\u6240\u4ee5\u4e0d\u5efa\u7acb\u8fb9\uff0c\u76f4\u63a5\u628a\u5728\u67d0\u4e2a\u70b9\u5f39\u5c04\u8303\u56f4\u5185\u7684\u70b9\u626b\u4e00\u904d\uff0c\u7136\u540e\u5168\u90e8\u538b\u5230\u961f\u5217\u91cc\u53bb\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801\uff08\u590d\u6742\u5ea6\uff1aO($(n*m)^2$log(n$*$m))\uff09\uff1a\n```\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define REP(i,a,b) for (register int i(a);i<=(b);i++)\nusing namespace std;\nint d,Da,Ans,n,m,Dist[160][160],x[5],y[5],p[5][5],a[160][160],b[160][160];\nstruct Node {\n\tint x,y,q;\n\tNode(int xx,int yy,int qq) {\n\t\tx=xx;\n\t\ty=yy;\n\t\tq=qq;\n\t}\n};\nbool operator < (Node a,Node b) {\n\treturn a.q>b.q;\n}\ntemplate <typename T>\nint Read(T &x) {\n\tx=0;\n\tint f=1;\n\tchar c=getchar();\n\twhile(c!='-'&&c>'9'&&c<'0')\n\t\tc=getchar();\n\tfor(; !isdigit(c); c=getchar())\n\t\tif(c=='-')\n\t\t\tf=-f;\n\tfor(; isdigit(c); c=getchar())\n\t\tx=x*10+c-'0';\n\tx*=f;\n\tif(c=='\\n')\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\nvoid Write(long long x) {\n\tif(x<0) {\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) {\n\t\tWrite((x-x%10)/10);\n\t}\n\tputchar(x%10+'0');\n}\ninline void Dijkstra(int k) {\n\tREP(i,1,n) {\n\t\tREP(j,1,m) {\n\t\t\tDist[i][j]=INF;\n\t\t}\n\t}\n\tpriority_queue<Node> Q;\n\tQ.push(Node(x[k],y[k],0));\n\tDist[x[k]][y[k]]=0;\n\twhile(!Q.empty()) {\n\t\tNode X=Q.top();\n\t\tQ.pop();\n\t\tif(Dist[X.x][X.y]!=X.q) {\n\t\t\tcontinue;\n\t\t}\n\t\tint Len=b[X.x][X.y],v=Dist[X.x][X.y]+a[X.x][X.y];\n\t\tREP(i,max(1,X.x-Len),min(n,X.x+Len)) {\n\t\t\tint Tmp=Len-abs(X.x-i);\n\t\t\tREP(j,max(1,X.y-Tmp),min(m,X.y+Tmp)) {\n\t\t\t\tif(Dist[i][j]>v) {\n\t\t\t\t\tDist[i][j]=v;\n\t\t\t\t\tQ.push(Node(i,j,Dist[i][j]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tREP(i,1,3) {\n\t\tp[k][i]=Dist[x[i]][y[i]];\n\t}\n}\nint main() {\n\tRead(n);\n\tRead(m);\n\tREP(i,1,n) {\n\t\tREP(j,1,m) {\n\t\t\tRead(b[i][j]);\n\t\t}\n\t}\n\tREP(i,1,n) {\n\t\tREP(j,1,m) {\n\t\t\tRead(a[i][j]);\n\t\t}\n\t}\n\tREP(i,1,3) {\n\t\tRead(x[i]);\n\t\tRead(y[i]);\n\t}\n\tREP(i,1,3) {\n\t\tDijkstra(i);\n\t}\n\tint Da=0,Ans=INF;\n\tREP(i,1,3) {\n\t\td=0;\n\t\td=p[1][i]+p[2][i]+p[3][i];\n\t\tif(d<Ans) {\n\t\t\tDa=i;\n\t\t\tAns=d;\n\t\t}\n\t}\n\tif(Ans==INF) {\n\t\tputs(\"NO\");\n\t} else {\n\t\tswitch(Da) {\n\t\t\tcase 0: {\n\t\t\t\tputs(\"NO\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: {\n\t\t\t\tputs(\"X\");\n\t\t\t\tWrite(Ans);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tputs(\"Y\");\n\t\t\t\tWrite(Ans);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tputs(\"Z\");\n\t\t\t\tWrite(Ans);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u8fd9\u4e2a\u4ee3\u7801\u5728\u6d1b\u8c37\u4e0a\u53ef\u4ee5AC,\u4f46\u8003\u8bd5\u65f6\u53ea\u670960\u5206\uff08\u56e0\u4e3a\u6d1b\u8c37\u65f6\u9650\u65f65000ms\uff0c\u6211\u4eec\u5b66\u6821\u7684\u662f1000ms\uff09QAQ\n\n\u6240\u4ee5\u8fd8\u8981\u4f18\u5316\uff0c\u4e8e\u662f\u6709\u4eba\u5199\u51fa\u4e86\u7ebf\u6bb5\u6811\u4f18\u5316Dijkstra\uff08\u590d\u6742\u5ea6\uff1a\u6211\u4e0d\u4f1a\u7b97\u554aQAQ,\u54ea\u4e2a\u5927\u4f6c\u6559\u6559\u6211\uff09\n\n~~\u4ee3\u7801\u6211\u61d2\u5f97\u5199\u4e86~~\u770b\u4e00\u4e0b\u4e0b\u9762\u5927\u4f6c\u7684\u9898\u89e3\u5427\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u6211\u4eec\u673a\u623f\u7684\u4e00\u4e2a\u795e\u4ed9\u5199\u51fa\u4e86\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff08\u590d\u6742\u5ea6\u6211\u540c\u6837\u4e0d\u4f1a\u7b97QAQ\uff0c\u4f46\u662f\u4f3c\u4e4e\u6bd4\u4e00\u822c\u7ebf\u6bb5\u6811\u5feb\u4e0d\u5c11\u5462\uff09\n(\u4ee3\u7801\u6765\u81ea[Centaurus99](https://www.luogu.org/space/show?uid=12686)\u5de8\u4f6c%%%%)\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch;\n\tdo{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n\tdo{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n\treturn x*f;\n}\nconst int N=160,INF=0x3f3f3f3f;\nint n,m,a[N][N],b[N][N],tag[N][N];\nstruct node{\n\tint v,x;\n};\ninline bool operator<(const node&t1,const node&t2){return t1.v<t2.v||(t1.v==t2.v&&t1.x>t2.x);}\ninline void inc(node&x,node&v){x=(v<x?v:x);}\ninline void inc(int&x,int&v){x=(v<x?v:x);}\nstruct DATA{\n\tnode mn;\n\tint addv;\n};\nstruct SGT{\n\tDATA T[N<<2];\n\tinline void create(int o,int l,int r){\n\t\tT[o].mn.v=INF,T[o].addv=INF;\n\t\tif (l==r){\n\t\t\tT[o].mn.x=l;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tcreate(o<<1,l,mid),create(o<<1|1,mid+1,r);\n\t\tpushup(o);\n\t}\n\tinline void pushup(int o){T[o].mn=min(T[o<<1].mn,T[o<<1|1].mn);}\n\tinline void pushdown(int o){\n\t\tif (T[o].addv!=INF){\n\t\t\tif (T[o<<1].mn.x) inc(T[o<<1].mn.v,T[o].addv),inc(T[o<<1].addv,T[o].addv);\n\t\t\tif (T[o<<1|1].mn.x) inc(T[o<<1|1].mn.v,T[o].addv),inc(T[o<<1|1].addv,T[o].addv);\n\t\t\tT[o].addv=INF;\n\t\t}\n\t}\n\tinline void qadd(int o,int l,int r,int x,int y,int v){\n\t\tif (T[o].mn.x==0) return;\n\t\tif (x<=l&&r<=y){\n\t\t\tinc(T[o].mn.v,v),inc(T[o].addv,v);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(o);\n\t\tint mid=(l+r)>>1;\n\t\tif (y<=mid) qadd(o<<1,l,mid,x,y,v);\n\t\telse if (x>mid) qadd(o<<1|1,mid+1,r,x,y,v);\n\t\telse qadd(o<<1,l,mid,x,y,v),qadd(o<<1|1,mid+1,r,x,y,v);\n\t\tpushup(o);\n\t}\n\tinline void qset(int o,int l,int r,int x,int v){\n\t\tif (l==r){\n\t\t\tT[o].mn.v=v;\n\t\t\tif (v==INF) T[o].mn.x=0;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(o);\n\t\tint mid=(l+r)>>1;\n\t\tif (x<=mid) qset(o<<1,l,mid,x,v);\n\t\telse qset(o<<1|1,mid+1,r,x,v);\n\t\tpushup(o);\n\t}\n}T[N];\nstruct PLA{\n\tint x,y;\n}S[4];\nint G[4][4];\ninline void update(int x,int y,int v){\n\tint lim=min(n,x+b[x][y]);\n\tfor (int i=max(1,x-b[x][y]);i<=lim;++i){\n\t\tint l=max(1,y-b[x][y]+abs(i-x)),r=min(m,y+b[x][y]-abs(i-x));\n\t\tT[i].qadd(1,1,m,l,r,v+a[x][y]);\n\t}\n}\nvoid dij(int s){\n\tint t1,t2;\n\tif (s==1) t1=2,t2=3;\n\telse if (s==2) t1=1,t2=3;\n\telse t1=1,t2=2;\n\tfor (int i=1;i<=n;++i) T[i].create(1,1,m);\n\tT[S[s].x].qset(1,1,m,S[s].y,0);\n\twhile (G[s][t1]==-1||G[s][t2]==-1){\n\t\tnode u;u.v=INF;int ux=0;\n\t\tfor (int i=1;i<=n;++i){\n\t\t\tnode t=T[i].T[1].mn;\n\t\t\tif (t<u) u=t,ux=i;\n\t\t}\n\t\tif (u.x==0||ux==0) break;\n\t\tif (ux==S[t1].x&&u.x==S[t1].y) G[s][t1]=u.v;\n\t\tif (ux==S[t2].x&&u.x==S[t2].y) G[s][t2]=u.v;\n\t\tT[ux].qset(1,1,m,u.x,INF);\n\t\tupdate(ux,u.x,u.v);\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;++i){\n\t\tfor (int j=1;j<=m;++j) b[i][j]=read();\n\t}\n\tfor (int i=1;i<=n;++i){\n\t\tfor (int j=1;j<=m;++j) a[i][j]=read();\n\t}\n\tfor (int i=1;i<=3;++i) S[i].x=read(),S[i].y=read(),tag[S[i].x][S[i].y]=i;\n\tmemset(G,-1,sizeof(G));\n\tint tans=INF,tip=0;\n\tfor (int i=1;i<=3;++i) dij(i);\n\tfor (int i=1;i<=3;++i){\n\t\tint now=0;\n\t\tfor (int j=1;j<=3;++j)if(i!=j){\n\t\t\tif (G[j][i]==-1){\n\t\t\t\tnow=INF;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnow+=G[j][i];\n\t\t}\n\t\tif (now<tans) tans=now,tip=i;\n\t}\n\tif (tip==0) return printf(\"NO\\n\"),0;\n\telse if (tip==1) printf(\"X\\n\");\n\telse if (tip==2) printf(\"Y\\n\");\n\telse printf(\"Z\\n\");\n\tprintf(\"%d\\n\",tans);\n\treturn 0;\n}\n\n```\n\n\u5f53\u7136\uff0c\u4e5f\u6709\u4eba\u5199\u5206\u5c42\u56feDijkstra\u7684\uff0c\u9898\u89e3\u91cc\u6709\u4eba\u53d1\u4e86\uff0c\u6211\u5c31\u4e0d\u5199\u4e86~~\uff08\u5176\u5b9e\u662f\u61d2\u5f97\u51992333\uff09~~\n\n\u4e0b\u9762\u91cd\u70b9\u6765\u4e86\n\n# \u6572\u9ed1\u677f~\n\n\u4e0a\u9762\u7684\u7b97\u6cd5\u90fd\u6bd4\u8f83\u4f18\u79c0\u7684\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\uff08\u5c24\u5176\u662f\u540e\u97622\u79cd\uff09\uff0c\u4f46\u662f......\n\n# \u8fd8\u4e0d\u591f\u5feb\n\n\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cdDijkstra+\u5e76\u67e5\u96c6\u4f18\u5316\u7684\u7b97\u6cd5\uff0c\u8fd9\u662f\u6211\u5728\u7f51\u4e0a\u770b\u5230\u7684\uff0c[\u539f\u5e16](https://blog.csdn.net/u013368721/article/details/52985072)\u5e76\u6ca1\u6709\u8bb2\u89e3\uff0c\u90a3\u6211\u6765\u8bf4\u4e00\u4e0b\u5427\n\n\u672c\u9898\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u88ab\u626b\u5230\u5f88\u591a\u6b21\uff0c\u5982\u679c\u5f53\u8fd9\u4e2a\u70b9\u4e0d\u518d\u88ab\u9700\u8981\u66f4\u65b0\u65f6\u8df3\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u65f6\u95f4\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u601d\u60f3\u3002\n\n\u8fd9\u9053\u9898\u4e2d\uff0c\u7ecf\u8fc7\u4ed4\uff08yi\uff09\u7ec6\uff08dun\uff09\u89c2\uff08luan\uff09\u5bdf\uff08gao\uff09\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u628a\u70b9\u538b\u5165\u5806\u4e2d\u65f6\uff0c\u6bd4\u8f83$Dist[i]+w[i]$\u800c\u4e0d\u662f\u6bd4\u8f83$Dist[i]$\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5df2\u7ecf\u66f4\u65b0\u8fc7\u7684\u7684\u70b9\u4ee5\u540e\u4e0d\u518d\u9700\u8981\u66f4\u65b0\u3002\n\u8bc1\u660e\uff08\u6211\u8fd9\u4e48\u83dc\uff0c\u5f53\u7136\u4e0d\u4f1a\u8bc1\u4e86QAQ,\u4ee5\u4e0b\u8bc1\u660e\u662f\u673a\u623f\u91cc[zcysky](https://www.luogu.org/space/show?uid=2978)\u548c[Holyk](https://www.luogu.org/space/show?uid=32180)\u4e24\u4f4d\u5de8\u4f6c~~\u5728\u4e00\u4e2a\u6708\u9ed1\u98ce\u9ad8\u7684\u591c\u665a~~\u60f3\u51fa\u6765\u7684,\u5728\u6b64\u5f15\u7528\u4e00\u4e0b\uff0c~~\u5e0c\u671b\u4ed6\u4eec\u522b\u6253\u6211~~\uff09\uff1a\n\n\u5047\u8bbe\u70b9 x \u5df2\u7ecf\u5f97\u5230\u4e86\u6700\u77ed\u8def\uff0c\u8bc1\u660e\u7528\u8be5\u70b9\u66f4\u65b0\u7684 y\u4e5f\u5f97\u5230\u4e86\u6700\u77ed\u8def\n\n\u53cd\u8bc1\uff0c\u5047\u8bbe\u5b58\u5728\u8def\u5f84 x\u2032\u2192y\n\n\u4f7f dis[y] \u66f4\u5c0f\uff0c\u4e14\u5728 x \u66f4\u65b0 y \u4e4b\u540e\uff0c\u90a3\u4e48\u6709 dis[x\u2032]+w[x]<dis[x]+w[x] \uff0c\u56e0\u4e3a x\u2032 \u5728 x \u4e4b\u540e\uff0c\u6709 dis[x\u2032]+w[x\u2032]\u2265dis[x]+w[x]\uff0c\u4e24\u5f0f\u77db\u76fe\uff0c\u8fd0\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u53ef\u77e5\u4e0a\u8ff0\u7ed3\u8bba\u6210\u7acb\uff0c\u4ee5\u53ca\u8d77\u70b9 s \u5230\u6bcf\u4e00\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5c31\u662f dis[i]\n\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e00\u884c\u5efa\u7acb\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u8df3\u8fc7\u5df2\u7ecf\u677e\u5f1b\u8fc7\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u4ee3\u7801\u6548\u7387\u5c31\u4f1a\u5927\u5927\u63d0\u9ad8\uff08\u590d\u6742\u5ea6:$O(n*m)*log(n*m)$\uff09\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.org/record/show?rid=12588902)\n\n\u901f\u5ea6\u786e\u5b9e\u5feb\u4e86\u4e0d\u5c11\u5462\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define REP(i,a,b) for (register int i(a);i<=(b);i++)\nnamespace fast_IO {\n    const int IN_LEN=10000000,OUT_LEN=10000000;\n    char ibuf[IN_LEN],obuf[OUT_LEN],*ih=ibuf+IN_LEN,*oh=obuf;\n    char *lastin=ibuf+IN_LEN;\n    const char *lastout=ibuf+OUT_LEN-1;\n    inline char getchar_() {\n        if(ih==lastin)lastin=ibuf+fread(ibuf,1,IN_LEN,stdin),ih=ibuf;\n        return (*ih++);\n    } inline void putchar_(const char x) {\n        if(ih==lastout)fwrite(obuf,1,oh-obuf,stdout),oh=obuf;\n        *oh++=x;\n    } inline void flush() {\n        fwrite(obuf, 1, oh - obuf, stdout);\n    }\n}\nusing namespace fast_IO;\ntemplate <typename T>\ninline void Read(T&x) {\n    char cu=getchar();\n    x=0;\n    bool fla=0;\n    while(!isdigit(cu)) {\n        if(cu=='-')fla=1;\n        cu=getchar();\n    }\n    while(isdigit(cu))x=x*10+cu-'0',cu=getchar();\n    if(fla)x=-x;\n}\ntemplate <typename T>\nvoid printe(const T x) {\n    if(x>=10)printe(x/10);\n    putchar(x%10+'0');\n}\ntemplate <typename T>\ninline void Write(const T x) {\n    if(x<0)putchar('-'),printe(-x);\n    else printe(x);\n}\n//\u7384\u5b66\u7684\u8bfb\u5165\u4f18\u5316\nusing namespace std;\nint n,m,Res,Da,x[5],y[5],a[160][160],b[160][160],Top[160][160];//Top\u662f\u5e76\u67e5\u96c6\nlong long Dist[160][160],Ans[5];//Dist\u6570\u7ec4\u5b58\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\uff0cAns\u6570\u7ec4\u5b58\u5f53\u5230\u524d\u70b9\u4f1a\u5408\u7684\u6700\u5c0f\u4ee3\u4ef7\nstruct Node {\n    long long Dis;\n    int x,y;\n    Node() {} Node(int x,int y,long long Dis):Dis(Dis),x(x),y(y) {}\n};\nbool operator <(Node a,Node b) {\n    return a.Dis>b.Dis;\n}\nint T(int Top[],int x) {\n    return Top[x]==x ? x:(Top[x]=T(Top,Top[x]));\n}//\u5e76\u67e5\u96c6\uff0c\u7528\u6765\u8df3\u8fc7\u5df2\u7ecf\u677e\u5f1b\u8fc7\u7684\u8282\u70b9\nvoid Dijkstra(int k) {//Dijkstra\u67e5\u8be2\u6700\u77ed\u8def\n    Node X;\n    int L,R,Nx,Ny,Len1,Len2;\n    REP(i,1,n) {\n        REP(j,1,m+1) {\n            Dist[i][j]=INF;\n            Top[i][j]=j;\n        }\n    }//\u521d\u59cb\u5316\n    priority_queue<Node>Q;\n    Q.push(Node(x[k],y[k],a[x[k]][y[k]]));\n    Top[x[k]][y[k]]=y[k]+1;\n    Dist[x[k]][y[k]]=0;//\u628a\u7b2c\u4e00\u4e2a\u70b9\u538b\u8fdb\u961f\u5217\uff0c\u5e76\u628a\u5b83\u7684\u4e0b\u4e00\u4e2a\u8bbe\u4e3a\u8bbe\u4e3a\u5b83\u53f3\u8fb9\u7684\u70b9\n    while(!Q.empty()) { //\u548c\u6b63\u5e38\u7684Dijkstra\u4e00\u6837\n        X=Q.top();\n        Q.pop();//\u53d6\u51fa\u961f\u5934\n        Len1=b[X.x][X.y];\n        Nx=max(1,X.x-Len1);\n        Ny=min(n,X.x+Len1);//\u8bbe\u7f6eX\u80fd\u5f39\u5c04\u7684\u8303\u56f4\n        REP(i,Nx,Ny) {\n            Len2=Len1-abs(X.x-i);\n            L=max(1,X.y-Len2);\n            R=min(m,X.y+Len2);\n            for(int j=T(Top[i],L); j<=R; j=T(Top[i],j)) {//\u5e76\u67e5\u96c6\u8df3\u8fc7\u5df2\u7ecf\u677e\u5f1b\u7684\u70b9\n                Q.push(Node(i,j,X.Dis+a[i][j]));//\u628a\u53ef\u4ee5\u8df3\u5230\u5e76\u4e14\u6ca1\u6709\u88ab\u677e\u5f1b\u8fc7\u7684\u70b9\u538b\u8fdb\u961f\u5217\n                Dist[i][j]=X.Dis;//\u677e\u5f1b\u64cd\u4f5c\n                Top[i][j]=j+1;//\u628a\u8fd9\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u5b83\u53f3\u8fb9\u7684\u70b9\n                if((Dist[x[1]][y[1]]!=INF)&&(Dist[x[2]][y[2]]!=INF)&&(Dist[x[2]][y[2]]!=INF)){\n                \treturn;//\u526a\u679d\u52a0\u901f\n\t\t\t\t}\n            }\n        }\n    }\n}\nint main() {\n    Read(n);\n    Read(m);\n    REP(i,1,n) {\n        REP(j,1,m) {\n            Read(b[i][j]);\n        }\n    }\n    REP(i,1,n) {\n        REP(j,1,m) {\n            Read(a[i][j]);\n        }\n    }\n    REP(i,1,3) {\n        Read(x[i]);\n        Read(y[i]);\n    }\n    fill(Ans,Ans+3,0);\n    Res=INF;\n    REP(i,1,3) {\n        Dijkstra(i);\n        REP(j,1,3) {\n            Ans[j]+=Dist[x[j]][y[j]]; //\u5206\u522b\u7b97\u51fa\u5230\u6bcf\u4e2a\u70b9\u4f1a\u5408\u7684\u6700\u5c0f\u4ee3\u4ef7\n        }\n    }\n    REP(i,1,3) {\n        if(Ans[i]<Res) {//\u6253\u64c2\u53f0\u627e\u51fa\u6700\u4f18\u89e3\n            Res=Ans[i];\n            Da=i;\n        }\n    }\n    if(Res==INF) {//\u6309\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7b54\u6848\n        puts(\"NO\");\n    } else {\n        switch(Da) {\n            case 1: {\n                puts(\"X\");\n                break;\n            }\n            case 2: {\n                puts(\"Y\");\n                break;\n            }\n            case 3: {\n                puts(\"Z\");\n                break;\n            }\n        }\n        Write(Res);\n    }\n    getchar();\n    return flush(),0;\n}\n```\n\n",
        "postTime": 1540562899,
        "uid": 107547,
        "name": "\u03c0\u9171",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    },
    {
        "content": "[\u9898\u76ee\u5927\u610f](https://www.luogu.org/problemnew/show/P4473)\n\n\u9996\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u4e24\u79cd\u505a\u6cd5\uff1a\u76f4\u63a5\u6309\u7167\u9898\u76ee\u6a21\u62df\uff08\u5efa\u4e00\u4e2a\u5806\uff09\uff0c\u6216\u8005\u76f4\u63a5\u66b4\u529b\u8fde\u8fb9\u8dd1\u6700\u77ed\u8def\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fn^4\uff0c\u5f88\u663e\u7136\u901a\u8fc7\u4e0d\u4e86\u8fd9\u9053\u9898\u76ee\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u60ca\u5947\u7684\u53d1\u73b0\u7b2c\u4e00\u79cd\u505a\u6cd5\u7684\u7a7a\u95f4\u5360\u7528\u91cf\u6781\u4f4e\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u5e38\u89c4\u7684\u4f18\u5316\uff1a\u8bb0\u5f55\u5404\u4e2a\u72b6\u6001\u3002\n\n\u6211\u4eec\u5b9a\u4e49f[i][j][k]\u4ee3\u8868\u76ee\u524d\u505c\u7559\u5728(i,j)\uff0c\u5728\u4e0d\u5f39\u5c04\u7684\u6761\u4ef6\u4e0b\u8fd8\u80fd\u8d70k\u4e2a\u70b9\u9700\u8981\u82b1\u8d39\u7684\u6700\u5c0f\u8d39\u7528\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u53ea\u6709\u4e94\u79cd\u8d70\u6cd5\uff1a\u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3\uff0c\u4e0d\u52a8\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u95ee\u6700\u540e\u8fd9\u4e00\u79cd\u662f\u600e\u4e48\u56de\u4e8b\uff0c\u5176\u5b9e\u52a0\u5165\u8fd9\u4e00\u79cd\u72b6\u6001\u7684\u76ee\u7684\u5c31\u662f\u8981\u8ba9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6709\u88ab\u8003\u8651\u5f39\u5c04\u7684\u53ef\u80fd\u6027\uff0c\u5e76\u4e14\u5c06\u6700\u540e\u7684\u7b54\u6848\u90fd\u6c47\u805a\u5230k=0\u7684\u72b6\u6001\u4e0b\uff0c\u4fbf\u4e8e\u6211\u4eec\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8dd1Dijkstra\u5c31\u884c\u4e86\uff0c\u6b63\u786e\u6027\u6bd4\u8f83\u663e\u7136\uff1a\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6709\u673a\u4f1a\u88ab\u8003\u8651\u5f39\u5c04\uff0c\u5230\u8fbe\u6bcf\u4e00\u6b65\u65f6\u4e00\u5b9a\u6700\u4f18\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n*m*(n+m))\n\n\u6700\u540e\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a\uff08\u81ea\u52a8\u7701\u7565\u5934\u6587\u4ef6\uff09\n\n```cpp\nstruct node\n{\n    LL px,py,nowcost,energy;\n    bool operator < (const node &a) const\n    {\n        return nowcost > a.nowcost;\n    }\n};\nLL dtx[5]= {0,1,0,-1,0},dty[5]= {1,0,-1,0,0};\nLL n,m;\nLL b[maxn+5][maxn+5],cost[maxn+5][maxn+5];\nLL x[4],y[4];\nLL f[maxn+5][maxn+5][maxn*2+5];\nbool vis[maxn+5][maxn+5][maxn*2+5];\n\nvoid dijkstra(int id)\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            for (int k = 0; k <= n + m; k++)\n            {\n                vis[i][j][k] = 0;\n                f[i][j][k] = inf;\n            }\n        }\n    }\n    priority_queue<node>q;\n    node temp; \n    temp.px=x[id],temp.py=y[id],temp.energy=b[x[id]][y[id]],temp.nowcost=cost[x[id]][y[id]];\n    q.push(temp);\n    vis[x[id]][y[id]][0]=1;\n    f[x[id]][y[id]][b[x[id]][y[id]]]=cost[x[id]][y[id]];\n    while(!q.empty())\n    {\n        if(vis[x[1]][y[1]][0]==1&&vis[x[2]][y[2]][0]==1&&vis[x[3]][y[3]][0]==1) return;\n        node w=q.top();\n        q.pop();\n        LL tx=w.px,ty=w.py,k=w.energy;\n        if(vis[tx][ty][k]==1) continue;\n        vis[tx][ty][k]=1;\n        if(k!=0)\n        {\n            for(int i=0; i<=4; i++)\n            {\n                LL nxtx=tx+dtx[i],nxty=ty+dty[i];\n                if(nxtx>=1&&nxtx<=n&&nxty>=1&&nxty<=m)\n                {\n                    if(f[nxtx][nxty][k-1]>f[tx][ty][k])\n                    {\n                        f[nxtx][nxty][k-1]=f[tx][ty][k];\n                        node temp;\n                        temp.px = nxtx;\n                        temp.py = nxty;\n                        temp.energy = k - 1;\n                        temp.nowcost = f[nxtx][nxty][k - 1];\n                        q.push(temp);\n                    }\n                }\n            }\n        }\n        else\n        {\n            if(f[tx][ty][0]+cost[tx][ty]<f[tx][ty][b[tx][ty]])\n            {\n                f[tx][ty][b[tx][ty]]=f[tx][ty][0]+cost[tx][ty];\n                node temp;\n                temp.px = tx;\n                temp.py = ty;\n                temp.energy = b[tx][ty];\n                temp.nowcost = f[tx][ty][b[tx][ty]];\n                q.push(temp);\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1; i<=n; i++)\n    {\n        for(int j=1; j<=m; j++)\n        {\n            scanf(\"%lld\",&b[i][j]);\n            b[i][j] = min(b[i][j],1LL*(max(i - 1,(int)n-i) + max(j - 1,(int)m - j)));\n        }\n    }\n    for(int i=1; i<=n; i++)\n    {\n        for(int j=1; j<=m; j++)\n        {\n            scanf(\"%lld\",&cost[i][j]);\n        }\n    }\n    for(int i=1; i<=3; i++) scanf(\"%lld%lld\",&x[i],&y[i]);\n    dijkstra(1);\n    LL a1 = f[x[2]][y[2]][0],a2 = f[x[3]][y[3]][0];\n    dijkstra(2);\n    LL b1 = f[x[1]][y[1]][0],b2 = f[x[3]][y[3]][0];\n    dijkstra(3);\n    LL c1 = f[x[1]][y[1]][0],c2 = f[x[2]][y[2]][0];\n    LL ans = inf;\n    char s;\n    if (b1 + c1 < ans)\n    {\n        ans = b1 + c1;\n        s = 'X';\n    }\n    if (a1 + c2 < ans)\n    {\n        ans = a1 + c2;\n        s = 'Y';\n    }\n    if (a2 + b2 < ans)\n    {\n        ans = a2 + b2;\n        s = 'Z';\n    }\n    if(ans>=inf) printf(\"NO\\n\");\n    else printf(\"%c\\n%lld\\n\",s,ans);\n    return 0;\n}",
        "postTime": 1558153429,
        "uid": 208081,
        "name": "MikukuOvO",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n> \u6709\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u5f62\u65b9\u9635\u3002\u5982\u679c\u4f60\u5728\u7b2c $i$ \u884c $j$ \u5217\uff0c\u5219\u4f60\u53ef\u4ee5\u4ee5 $a_{i,j}$ \u7684\u4ee3\u4ef7\u5230\u8fbe\u4e0e\u8be5\u683c\u66fc\u54c8\u987f\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $b_{i,j}$ \u7684\u683c\u5b50\u3002\n>\n> \u73b0\u5728\u6709\u4e09\u4e2a\u4eba\uff0c\u4ed6\u4eec\u60f3\u805a\u5728\u4e00\u8d77\u3002\u95ee\u5230\u54ea\u4e2a\u4eba\u6240\u5728\u7684\u5730\u65b9\u80fd\u4f7f\u53e6\u5916\u4e24\u4e2a\u4eba\u8d70\u7684\u8ddd\u79bb\u6700\u5c0f\uff0c\u5e76\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n> $1\\le n,m\\le 150,0\\le a_{i,j}\\le 100,0\\le b_{i,j}\\le 10^9$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u76f4\u63a5\u6309\u9898\u610f\u8fde\u8fb9\uff0c\u8dd1 Dijkstra\u3002\n\n\u4f46\u662f\u5728\u6781\u9650\u6570\u636e\u4e0b\uff0c\u8fb9\u6570\u662f $O(n^2m^2)$ \u7684\uff0c\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u8003\u8651\u7c7b\u4f3c DP \u7684\u65b9\u5f0f\u3002\u6211\u4eec\u8bbe $(i,j,k)$ \u8868\u793a\u4ece\u8d70\u5230 $(i,j)$\uff0c\u8fd8\u53ef\u4ee5\u8d70 $k$ \u6b65\u3002\n\n\u5219\u5728 $(i,j,k)$ \u548c $(x,y,k-1)$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $0$\u3002\u5176\u4e2d\uff0c $(x,y)$ \u662f $(i,j)$ \u76f8\u90bb\u7684\u4e00\u4e2a\u683c\u5b50\u6216\u8005\u540c\u4e2a\u683c\u5b50\u3002\uff08\u8017\u8d39\u4e00\u6b65\uff0c\u8d70\u6216\u8005\u4e0d\u8d70\uff09\n\n\u7136\u540e\u5728 $(i,j,0)$ \u548c $(i,j,b_{i,j})$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u8fb9\u6743\u662f $a_{i,j}$\u3002\u5373\u5728\u8fd9\u4e2a\u70b9\u652f\u4ed8 $a_{i,j}$ \u7684\u4ee3\u4ef7\uff0c\u8d70 $b_{i,j}$ \u6b65\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d Dijkstra \u6216\u8005 SPFA \u5c31\u884c\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,0,-1,1,0},dy[]={-1,1,0,0,0};\nint n,m;\nint a[155][155],b[155][155];\nint ax,ay,bx,by,cx,cy;\nint dis[6800005];bool vis[6800005];\nqueue<int>que;\nvoid SPFA(int S){\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[S]=0;\n\twhile(!que.empty())que.pop();\n\tque.push(S);\n\tvis[S]=1;\n\twhile(!que.empty()){\n\t\tint x=que.front();que.pop();\n\t\tvis[x]=0;\n\t\tint kk=(x-1)/(n*m),xx=((x-1)%(n*m))/m+1,yy=((x-1)%(n*m))%m+1;\n\t\tif(kk>0){\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tint xxx=xx+dx[i],yyy=yy+dy[i];\n\t\t\t\tif(xxx<1||xxx>n||yyy<1||yyy>m)continue;\n\t\t\t\tint y=(kk-1)*n*m+(xxx-1)*m+yyy;\n\t\t\t\tif(dis[y]>dis[x]){\n\t\t\t\t\tdis[y]=dis[x];\n\t\t\t\t\tif(!vis[y]){\n\t\t\t\t\t\tque.push(y);\n\t\t\t\t\t\tvis[y]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tint y=min(n+m,b[xx][yy])*n*m+(xx-1)*m+yy,z=a[xx][yy];\n\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\tdis[y]=dis[x]+z;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tque.push(y);\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)scanf(\"%d\",&b[i][j]);\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++)scanf(\"%d\",&a[i][j]);\n\tscanf(\"%d%d%d%d%d%d\",&ax,&ay,&bx,&by,&cx,&cy);\n\tint ans=0,anss=0x3f3f3f3f,disab,disba,disac,disca,disbc,discb;\n\tSPFA((ax-1)*m+ay);\n\tdisab=dis[(bx-1)*m+by],disac=dis[(cx-1)*m+cy];\n//\tprintf(\"%d %d\\n\",disab,disac);\n\tSPFA((bx-1)*m+by);\n\tdisba=dis[(ax-1)*m+ay],disbc=dis[(cx-1)*m+cy];\n//\tprintf(\"%d %d\\n\",disba,disbc);\n\tSPFA((cx-1)*m+cy);\n\tdisca=dis[(ax-1)*m+ay],discb=dis[(bx-1)*m+by];\n//\tprintf(\"%d %d\\n\",disca,discb);\n\tif(disba+disca<anss)ans=1,anss=disba+disca;\n\tif(disab+discb<anss)ans=2,anss=disab+discb;\n\tif(disac+disbc<anss)ans=3,anss=disac+disbc;\n\tif(!ans)puts(\"NO\");\n\telse{\n\t\tputchar((char)('X'+ans-1));puts(\"\");\n\t\tprintf(\"%d\\n\",anss);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1633762379,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3P4473 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0"
    },
    {
        "content": "\u597d\u50cf\u6570\u636e\u8fc7\u4e8e\u6c34\u8ba9\u7384\u5b66\u526a\u679d[\u809b\u8fc7\u53bb\u4e86](https://www.luogu.com.cn/record/41408801)\n\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u53ef\u4ee5\u63a5\u53d7\u3002\u4f46\u662f\u8003\u8bd5\u7684\u65f6\u5019\u53ea\u670950~90\u5206\u7684\u4e9a\u5b50\u3002\u8fd8\u662f\u5206\u4eab\u4e00\u4e0b\uff0c\u8f7b\u55b7qwq\u3002\n\n\u601d\u8def\u5c31\u662f\u641e\u4e2a\u5806\u4f18\u5316bfs\u6765\u6a21\u62df\uff0c\u8dd1\u4e09\u6b21\u6700\u77ed\u8def\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e0b\u5f53\u524d\u5230\u8fbe\u6b64\u5904\u65f6\u6700\u591a\u8fd8\u80fd\u8d70\u591a\u5c11\u6b65\uff0c\u5bb9\u6613\u53d1\u73b0\u540e\u9762\u518d\u6b21\u8bbf\u95ee\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\u4f60\u82b1\u8d39\u6bd4\u4e0a\u4e00\u6b21\u8bbf\u95ee\u9ad8\uff0c\u80fd\u8d70\u7684\u6b65\u6570\u8fd8\u4e0d\u6bd4\u4e0a\u6b21\u5927\uff0c\u76f4\u63a5\u526a\u6389\u5c31\u884c\u4e86\u3002\n- \u540c\u65f6\u4f7f\u7528\u540c\u4e00\u4e2a\u8df3\u53f0\u7684\u6b21\u6570\u6700\u591a\u53ea\u80fd\u662f\u4e00\u6b21\uff0c\u518d\u6b21\u8df3\u7684\u65f6\u5019\u82b1\u8d39\u80af\u5b9a\u4e0d\u6bd4\u4e0a\u6b21\u4f4e\u7684\uff0c\u800c\u4e14\u8df3\u7684\u8303\u56f4\u8fd8\u4e00\u6837\uff0c\u5c31\u526a\u6389\u3002\n- \u5f53\u53e6\u5916\u4e24\u4e2a\u7ec8\u70b9\u90fd\u88ab\u8bbf\u95ee\u8fc7\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u9000\u51fabfs\u3002\n\n\u8003\u8bd5\u7684\u65f6\u5019\u60f3\u4e0d\u51fa\u5206\u5c42\u56fe\uff0c\u6211\u592a\u5f31\u4e86\u3002\u3002\u3002\u4f46\u5b9e\u9645\u4e0a\u8fd9\u4efd\u4ee3\u7801\u7684\u7528\u65f6\u5728\u968f\u673a\u6570\u636e\u4e0b\u8fd8\u662f\u6bd4\u8f83\u4f18\u79c0\u7684\uff0c\u611f\u6027\u7406\u89e3\u5427\u3002\n\n\u5728\u5b66\u6821\u7684\u5783\u673a\u4e0a\u88ab\u8feb\u5438\u9ad8\u539f\u6c27\u3002\n```\n#pragma GCC optimize(\"Ofast\")\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define int long long\nusing namespace std;\nconst int maxn=155;\nint n,m,inf=4e18;\nint a[maxn][maxn];\nint b[maxn][maxn];\nint step[maxn][maxn],cost[maxn][maxn];\nbool vis[maxn][maxn];\nint dis[4][4],d[4];\nint X[4],Y[4];\nint mx[4]={1,0,-1,0};\nint my[4]={0,1,0,-1};\nstruct node\n{\n\tint x,y;\n\tint step,cost;\n\tbool friend operator <(node x,node y)\n\t{return x.cost>y.cost;}\n};\n#define Push(x,y,z,w) q.push((node){x,y,z,w})\nvoid bfs(int id)\n{\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tstep[i][j]=0,cost[i][j]=inf,vis[i][j]=0;\n\tpriority_queue<node>q;\n\tPush(X[id],Y[id],0,0);\n\tint x1,x2,y1,y2;//\u5b9a\u4e49\u7ec8\u70b9 \n\tif(id==1)x1=X[2],y1=Y[2];\n\telse x1=X[1],y1=Y[1];\n\tif(id==3)x2=X[2],y2=Y[2];\n\telse x2=X[3],y2=Y[3];\n\twhile(q.size())\n\t{\n\t\tnode tmp=q.top();q.pop();\n\t\tint x=tmp.x;\n\t\tint y=tmp.y;\n\t\tint Step=tmp.step;\n\t\tint Cost=tmp.cost;\n\t\tif(vis[x][y]&&Step<=step[x][y])continue ;\n\t\t//\u5982\u679c\u5f53\u524d\u52a8\u80fd\u8fd8\u4e0d\u5982\u4ee5\u524d,\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3 \t\t\n\t\tif(a[x][y]>0&&!vis[x][y])\n\t\t//\u5982\u679c\u5f53\u524d\u8df3\u53f0\u5df2\u7ecf\u88ab\u4f7f\u7528\u8fc7,\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3 \n\t\tPush(x,y,a[x][y],Cost+b[x][y]);\n\t\t\n\t\tcost[x][y]=min(cost[x][y],Cost);\n\t\tstep[x][y]=Step;\n\t\tvis[x][y]=1;\n\t\tif(vis[x1][y1]&&vis[x2][y2])break ;\n\t\t\n\t\tif(Step<=0)continue ;\n\t\t//step\u4e3a0\u5c31\u6ca1\u6cd5\u641c\u4e0b\u53bb\u4e86 \n\t\tfor(int i=0;i<=3;i++)\n\t\t{\n\t\t\tint tx=x+mx[i];\n\t\t\tint ty=y+my[i];\n\t\t\tif(tx<1||ty<1||tx>n||ty>m)continue ;\n\t\t\tPush(tx,ty,Step-1,Cost);\n\t\t}\n\t}\n\tint cos1=cost[x1][y1],cos2=cost[x2][y2];\n\tif(id==1)\n\tdis[1][2]=cos1,dis[1][3]=cos2;\n\tif(id==2)\n\tdis[2][1]=cos1,dis[2][3]=cos2;\n\tif(id==3)\n\tdis[3][1]=cos1,dis[3][2]=cos2;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tscanf(\"%lld\",&a[i][j]);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\tscanf(\"%lld\",&b[i][j]);\n\tfor(int i=1;i<=3;i++)\n\tscanf(\"%lld%lld\",&X[i],&Y[i]);\n\tint id=0,ans=inf;\n\tfor(int i=1;i<=3;i++)\n\tbfs(i);\n\tif(dis[2][1]==inf||dis[3][1]==inf)d[1]=inf;\n\telse d[1]=dis[2][1]+dis[3][1];\n\tif(dis[1][2]==inf||dis[3][2]==inf)d[2]=inf;\n\telse d[2]=dis[1][2]+dis[3][2];\n\tif(dis[1][3]==inf||dis[2][3]==inf)d[3]=inf;\n\telse d[3]=dis[1][3]+dis[2][3];\n\tfor(int i=1;i<=3;i++)\n\t{\n\t\tif(d[i]==inf)continue;\n\t\tif(ans>d[i])ans=d[i],id=i;\n\t}\n\tif(!id)return printf(\"NO\\n\"),0;\n\tif(id==1)printf(\"X\\n\");\n\telse if(id==2)printf(\"Y\\n\");\n\telse printf(\"Z\\n\");\n\tprintf(\"%lld\",ans);\n}\n```",
        "postTime": 1604664225,
        "uid": 246785,
        "name": "\u9614\u7761\u738b\u5b50",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4473 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u98de\u98de\u4fa0\u3011"
    }
]