[
    {
        "content": "## \u4e00\u3001\u66b4\u529b\u7b80\u8ff0\n   \n   [\u7529\u94fe\u63a5.jpeg](https://www.luogu.org/problemnew/show/P1083#sub)\n   \n   \u9996\u5148\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u9053\u9898\u2014\u2014\u2014\u2014\u5e76\u4e0d\u662f\u4e00\u9053\u591a\u96be\u7684\u9898\uff0c\u56e0\u4e3a\u663e\u7136\uff0c\u7b2c\u4e00\u773c\u770b\u9898\u76ee\u65f6\u4fbf\u5f88\u5bb9\u6613\u5730\u60f3\u5230\u66b4\u529b\u5982\u4f55\u6253\uff1a\u679a\u4e3e\u6bcf\u4e00\u79cd\u8ba2\u5355\uff0c\u7136\u540e\u9488\u5bf9\u6bcf\u4e00\u79cd\u8ba2\u5355\uff0c\u5bf9\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u5929\u8fdb\u884c\u4fee\u6539\uff08\u505a\u51cf\u6cd5\uff09\uff0c\u76f4\u5230\u67d0\u4e00\u4efd\u8ba2\u5355\u4f7f\u5f97\u67d0\u4e00\u5929\u5269\u4e0b\u7684\u6559\u5ba4\u6570\u91cf\u4e3a\u8d1f\u6570\uff0c\u5373\u53ef\u5f97\u51fa\u7ed3\u679c\u3002\n   \n   \u5148\u5c0f\u5c0f\u7684\u8bc4\u6790\u4e00\u4e0b\u5427\uff1a**\u51e1\u662f\u80fd\u6253\u51fa\u51e0\u8fd1\u6b63\u89e3\u7684\u66b4\u529b\u9898\uff0c\u90fd\u4e0d\u662f\u96be\u9898\uff01**\uff08\u849f\u84bb\u53ef\u4ee5\u9a97\u523050+\u7684\u4e0d\u5c31\u662f\u6c34\u9898\u5417qwq\uff09\u4f46\u662f\uff0c\u663e\u7136\u679a\u4e3e\u5f62\u5f0f\u7684\u66b4\u529b\u4f1a\u5f88\u6162\uff0c\u671f\u671b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3a \n### $O(m \\times n)$\uff0c\n\u53ef\u80fd\u4f1a\u66f4\u5feb\u4e00\u4e9b\uff08~~\u4f46\u6ca1\u5375\u7528qwq~~\uff09\n\n## \u4e8c\u3001\u601d\u60f3\u8be6\u8ff0\n\n\u8ba9\u6211\u4eec\u5f00\u52a8\u8111\u7b4b\u60f3\u4e00\u4e0b\uff1a\u6bcf\u5f20\u8ba2\u5355\u5176\u5b9e\u5c31\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u533a\u95f4\uff08\u64cd\u4f5c\uff09\uff0c\u5de6\u53f3\u533a\u95f4\u5206\u522b\u4e3a\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u64cd\u4f5c\u5417\u2014\u2014\u9996\u9009\u7ebf\u6bb5tree\u5566\uff01\u4f46\u662f\u7b14\u8005\u5728\u8fd9\u91cc\u5e76\u4e0d\u6253\u7b97\u4ecb\u7ecd\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a\u867d\u7136\u7ebf\u6bb5tree\u64cd\u4f5c\u65b9\u4fbf\u3001\u590d\u6742\u5ea6\u4f4e\uff0c\u4f46\u662f\u2014\u2014\u2014\u2014\u2014\u2014\u6211\u4e0d\u4f1a\u5199\u554aqwq\uff01\uff08\u9003\n\n\u5e76\u4e14\u603b\u611f\u89c9\u4f60\u8003\u8bd5\u7684\u65f6\u5019\u64b8\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6a21\u677f\u7684\u65f6\u95f4\u5b8c\u5168\u53ef\u4ee5\u591a\u6253\u4e24\u4e2a\u66b4\u529b\u554aqwq\uff08~~\u867d\u7136\u66b4\u529b\u4e5f\u4e0d\u4e00\u5b9a\u5bf9~~\uff09\n\n\u6240\u4ee5\uff0c\u9009\u62e9\u5f15\u5165\u4e00\u79cd\u597d\u7406\u89e3\u3001\u597d\u5b9e\u73b0\u7684\u7b97\u6cd5\uff1a**\u5dee\u5206\u6570\u7ec4**\n\n\u5728\u4ecb\u7ecd\u5dee\u5206\u4e4b\u524d\uff0c\u9700\u8981\u4ecb\u7ecd**\u524d\u7f00\u548c\u601d\u60f3**\n\n\uff08qwq\u6b64\u5904\u5f53\u7136\u53ea\u4f1a\u8bb2\u4e00\u7ef4\u7ebf\u6027\u7684\u524d\u7f00\u548c\u5566\uff09\n\n**\u6211\u4eec\u6709\u4e00\u7ec4\u6570\uff08\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u5343\u4e07\uff09\uff0c\u5e76\u4e14\u6709\u4e00\u5927\u5806\u8be2\u95ee\u2014\u2014\u7ed9\u5b9a\u533a\u95f4l\u3001r,\u6c42l\u3001r\u4e4b\u95f4\u6240\u6709\u6570\u4e4b\u548c\uff08\u8be2\u95ee\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u5343\u4e07\uff09 **\n\n\u6b64\u5904\u66b4\u529b\u80af\u5b9a\u4e0d\u884c\u554a\uff08O\uff08N*Q*length\uff09\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u89c2\u5bdf\u524d\u7f00\u548c\u662f\u600e\u4e48\u505a\u7684\uff1a\u7528sum[i]\u6765\u5b58\u50a8\u524di\u4e2a\u6570\u7684\u548c\uff0c\u7136\u540e\u7528sum[r]-sum[l-1]\u6765\u8868\u793al~r\u4e4b\u95f4\u6240\u6709\u6570\u7684\u548c\u3002\uff08l-1\u539f\u56e0\u662fl~r\u53ea\u770b\u8981\u5305\u542bl\uff09\u800csum\u6570\u7ec4\u4fbf\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u9012\u63a8\u6c42\u51fa\u6765\n\n\u4ee3\u7801\u6838\u5fc3\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)\n{cin>>a[i];sum[i]=sum[i-1]+a[i];}\nfor(int i=1;i<=q;i++)\n{cin>>l>>r;cout<<sum[r]-sum[l-1]<<\" \";}\n```\n\n\u800c\u6240\u8c13\u7684\u5dee\u5206\u6570\u7ec4\uff0c\u5373\u662f\u524d\u7f00\u548c\u6570\u7ec4\u7684\u9006\u8fd0\u7b97\uff1a\n\n\u6211\u4eec\u7ed9\u5b9a\u524di\u4e2a\u6570\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u5dee\uff081<=i<=n\uff09,\u6c42\u6bcf\u4e00\u9879a[i]\uff081<=i<=n\uff09\u3002\n\n\u6b64\u65f6\u65e0\u975e\u5c31\u662f\u7528\u4f5c\u5dee\u7684\u65b9\u5f0f\u6c42\u5f97\u6bcf\u4e00\u9879\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u4f5c\u5dee\u6570\u7ec4diff\uff0cdiff[i]\u7528\u4e8e\u8bb0\u5f55a[i]-a[i-1],\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u9879a[i],\u6211\u4eec\u53ef\u4ee5\u9012\u63a8\u51fa\u6765\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)\n{cin>>diff[i];a[i]=diff[i]+a[i-1];}\nfor(int i=1;i<=n;i++)\n{cout<<a[i];}\n```\n\n\u5230\u8fd9\u513f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c**\u524d\u7f00\u548c\u662f\u7528\u5143\u6570\u636e\u6c42\u5143\u4e0e\u5143\u4e4b\u95f4\u7684\u5e76\u96c6\u5173\u7cfb\uff0c\u800c\u5dee\u5206\u5219\u662f\u6839\u636e\u5143\u4e0e\u5143\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u6c42\u5143\u6570\u636e\uff0c\u662f\u4e92\u9006\u601d\u60f3**\uff08qwq\u4f46\u662f\u6709\u65f6\u5143\u6570\u636e\u548c\u5173\u7cfb\u6570\u636e\u4e0d\u662f\u5f88\u597d\u8fa8\u522b\u6216\u8005\u4ea7\u751f\u89d2\u8272\u53cd\u6f14\u554a\uff09\n\n\u4f46\u662f\uff0c\u7406\u89e3\u4e86\u524d\u7f00\u548c&\u5dee\u5206\uff0c\u5e76\u4e0d\u4ee3\u8868\u80af\u5b9a\u80fd\u505a\u5230\u6a21\u677f\u9898\uff1a\u6bd5\u7adf\uff0c**\u601d\u60f3\u53ea\u80fd\u662f\u8f85\u52a9\u5de5\u5177**\u554a\n\n## \u4e09\u3001\u5173\u4e8e\u7b54\u6848\u4e8c\u5206\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u4e8c\u5206\u662f\u4e2a\u5f88\u6709\u7528\u7684\u4f18\u5316\u9014\u5f84\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u76f4\u63a5\u5bfc\u81f4\u51cf\u534a\u8fd0\u7b97\uff0c\u800c\u5bf9\u4e8e\u80fd\u5426\u4e8c\u5206\uff0c\u6709\u4e00\u4e2a\u754c\u5b9a\u6807\u51c6\uff1a**\u72b6\u6001\u7684\u51b3\u7b56\u8fc7\u7a0b\u6216\u8005\u5e8f\u5217\u662f\u5426\u6ee1\u8db3\u5355\u8c03\u6027\u6216\u8005\u53ef\u4ee5\u5c40\u90e8\u820d\u5f03\u6027\u3002**\n\u800c\u5728\u8fd9\u4e2a\u9898\u91cc\uff0c\u56e0\u4e3a\u5982\u679c\u524d\u4e00\u4efd\u8ba2\u5355\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u6240\u6709\u8ba2\u5355\u90fd\u4e0d\u7528\u7ee7\u7eed\u8003\u8651\uff1b\u800c\u5982\u679c\u540e\u4e00\u4efd\u8ba2\u5355\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u4e4b\u524d\u7684\u6240\u6709\u8ba2\u5355\u4e00\u5b9a\u90fd\u53ef\u4ee5\u6ee1\u8db3\uff0c\u7b26\u5408\u5c40\u90e8\u820d\u5f03\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\u8ba2\u5355\u6570\u91cf\u3002\n\n\n## \u56db\u3001\u7ec8\u4e8e\u8981bb\u6b63\u89e3\u4e86\uff01\n\n\u9996\u5148\uff0c\u8981\u660e\u767d\u5982\u4e3a\u4ec0\u4e48\u8981\u7528\u533a\u95f4\u5dee\u5206\u800c\u4e0d\u662f\u533a\u95f4\u524d\u7f00\u548c\uff1a\u56e0\u4e3a\u8fd9\u4e2a\u9898\u6bcf\u6b21\u64cd\u4f5c\u9488\u5bf9\u7684\u5bf9\u8c61\u90fd\u662f\u539f\u672c\u9898\u76ee\u4e2d\u7ed9\u7684\u5143\u6570\u636e\uff0c\u800c\u4e0d\u662f\u8ba9\u6c42\u67d0\u4e2a\u5173\u7cfb\uff0c\u6240\u4ee5\u91c7\u7528\u5dee\u5206\u3002\n\n\u5176\u6b21\uff0c\u8981\u77e5\u9053\u5dee\u5206\u4f1a\u8d77\u5230\u600e\u6837\u7684\u4f5c\u7528\uff1a\u56e0\u4e3adiff\u6570\u7ec4\u51b3\u5b9a\u7740\u6bcf\u4e2a\u5143\u6570\u636e\u7684\u53d8\u5316\u5927\u5c0f\u3001\u8d8b\u52bf\uff0c\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u60f3\u8981\u9488\u5bf9\u533a\u95f4\u64cd\u4f5c\u65f6\uff0c\u94b1\u53ef\u4ee5\u8f6c\u5316\u6210\u5bf9diff\u6570\u7ec4\u64cd\u4f5c\uff1a\n\n```cpp\ndiff[l[i]]+=d[i];\ndiff[r[i]+1]-=d[i];//d[i]\u662f\u6307\u6bcf\u5929\u8981\u501f\u7684\u6559\u5ba4\u6570\n```\n\n\u56e0\u4e3a\u540e\u9762\u7684\u5143\u6570\u636e\u90fd\u7531\u4e4b\u524d\u7684diff\u6570\u7ec4\u63a8\u5bfc\u51fa\u6765\uff0c\u6240\u4ee5\u6539\u53d8diff[i]\u5c31\u76f8\u5f53\u4e8e\u6539\u53d8[i](\u5305\u62ec)\u4e4b\u540e\u7684\u6bcf\u4e00\u4e2a\u503c\uff0c\u5e76\u901a\u8fc7\u91cd\u65b0\u51cf\u53bb\u6539\u53d8\u7684\u91cf\uff0c\u8fbe\u5230\u64cd\u4f5c\u533a\u95f4\u7684\u76ee\u7684\u3002\n\nthen\uff0c\u6211\u4eec\u9700\u8981\u60f3\u660e\u767d\u7b56\u7565\uff1a\u4ece\u7b2c\u4e00\u4efd\u8ba2\u5355\u5f00\u59cb\u679a\u4e3e\uff0c\u76f4\u5230\u65e0\u6cd5\u6ee1\u8db3\u6216\u8005\u5168\u679a\u4e3e\u5b8c\u7ed3\u675f\u3002\n\n\u6700\u540e\uff0c\u4e00\u70b9\u63d0\u793a\uff0c\u6211\u4e0b\u9762\u7684\u6807\u7a0b\u662f\u901a\u8fc7\u6bd4\u5927\u5c0f\u6765\u5224\u65ad\u662f\u5426\u6ee1\u8db3\uff0c\u800c\u4e0d\u662f\u4f5c\u5dee\u5224\u8d1f\u6570\u2014\u2014\u2014\u2014\u80fd\u4e0d\u51fa\u8d1f\u6570\u5c31\u522b\u51fa\u8d1f\u6570\uff0c\u5426\u5219\u5bb9\u6613\u57fa\u4f6c\u7d2b\uff08re\uff09/\u624b\u52a8\u6ed1\u7a3d\n\n\u8d34\u6807\u7a0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio> \nusing namespace std;\nint n,m;\nint diff[1000011],need[1000011],rest[1000011],r[1000011],l[1000011],d[1000011];\nbool isok(int x)\n{\n    memset(diff,0,sizeof(diff));\n    for(int i=1;i<=x;i++)\n    {\n        diff[l[i]]+=d[i];\n        diff[r[i]+1]-=d[i]; \n    }\n    for(int i=1;i<=n;i++)\n    {\n        need[i]=need[i-1]+diff[i];\n        if(need[i]>rest[i])return 0;\n    }\n    return 1;\n} \nint main()\n{\n    \n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&rest[i]);\n    for(int i=1;i<=m;i++)scanf(\"%d%d%d\",&d[i],&l[i],&r[i]);\n    int begin=1,end=m; \n    if(isok(m)){cout<<\"0\";return 0;}\n    while(begin<end)\n    {\n        int mid=(begin+end)/2;\n        if(isok(mid))begin=mid+1;\n        else end=mid;\n    }\n    cout<<\"-1\"<<endl<<begin;\n}\n```\n\n\nwritter:\u768e\u6708\u534a\u6d12\u82b1_pks\n\n\n",
        "postTime": 1518004443,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "2012 D2 T2 \u501f\u6559\u5ba4 \u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u662f\u6c42\u54ea\u4e2a\u8ba2\u5355\u5148\uff0c\u5e76\u4e14\u770b\u8fd9\u5947\u8469\u6570\u636e\u8303\u56f4\uff0c\u4e8c\u5206\u59a5\u59a5\uff08\u7ebf\u6bb5\u6811\u795e\u7287\u4e0d\u8981\u5751\u4eba\uff09\n\n\u4f8b\u5982\u4e0b\u9762\u7684\u8fd9\u4e2a\u6837\u4f8b\uff1a\n\n4 3\n2 5 4 3\n\n2 1 3\n3 2 4\n4 2 4\n\u6211\u4eec\u53ef\u4ee5\u628a\u5f00\u59cb\u5929+\u79df\u501f\u6570\u91cf\n\n\u7ed3\u675f\u5929**\u540e\u9762\u7684\u90a3\u4e00\u5929**-\u79df\u501f\u6570\u91cf\n\n\u63a5\u4e0b\u6765\u5c31\u65e0\u8111\u5faa\u73af\u4e00\u904d\uff0c\u68c0\u67e5\u54ea\u4e00\u4e2a\u8ba2\u5355\u8d85\u8fc7\u4e86\u53ef\u4ee5\u79df\u501f\u7684\u6570\u91cf\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define maxn 1000005\n\nusing namespace std;\n\nint LEFT,MID,RIGHT,n,m,r[maxn],d[maxn],s[maxn],t[maxn],day[maxn];\n\nbool judge(int mid)\n{\n    memset(day,0,sizeof(day));\n    for (int i=1;i<=mid;i++)\n    {\n        day[s[i]]+=d[i];\n        day[t[i]+1]-=d[i];\n    }\n    if (day[1]>r[1])\n        return 1;\n    for (int i=2;i<=n;i++)\n    {\n        day[i]+=day[i-1];\n        if (day[i]>r[i])\n            return 1;\n    }\n    //cout << -1 << endl;\n    return 0;\n}\n\nint main()\n{\n    //freopen(\"classroom.in\",\"r\",stdin);\n    //freopen(\"classroom.ans\",\"w\",stdout);\n    cin >> n >> m;\n    for (int i=1;i<=n;i++)\n        scanf(\"%d\",&r[i]);\n    for (int i=1;i<=m;i++)\n        scanf(\"%d%d%d\",&d[i],&s[i],&t[i]);\n    LEFT=1;RIGHT=m;\n    while (LEFT<RIGHT)\n    {\n        MID=(LEFT+RIGHT)/2;\n        //cout << LEFT << \" \" << RIGHT << \" \" << MID << endl;\n        if (judge(MID))\n            RIGHT=MID;\n        else LEFT=MID+1;\n    }    \n    if (m!=RIGHT) \n    {\n        cout << -1 << endl;\n        cout << RIGHT << endl;\n    }\n    else cout << 0 << endl;\n    return 0;\n}\n```",
        "postTime": 1480238324,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": " \u770b\u5404\u4f4ddalao\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u5e26\u4e2a```log```\n\n\u672c\u849f\u84bb\u60f3\u5199\u4e00\u4efdO\uff08$n+m$\uff09\u7684\u4ee3\u7801\u4f9b\u5927\u5bb6\u53c2\u8003\n\n\n\n------------\u6b63\u6587\u5982\u4e0b------------\n\n\n\n####     \u5927\u81f4\u601d\u8def\uff1a\u5229\u7528\u5dee\u5206\u6570\u7ec4\u5b58\u6bcf\u5929\u7684\u6559\u5ba4\u4f7f\u7528\u60c5\u51b5\uff0c\u7136\u540e\u6c42\u524d\u7f00\u548c\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5c31\u4ece\u540e\u5f80\u524d\u64a4\u56de\u8ba2\u5355\uff0c\u76f4\u5230\u6bcf\u5929\u90fd\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u6211\u4eec\u64a4\u56de\u7684\u6700\u540e\u4e00\u4e2a\uff08\u4e5f\u5c31\u662f\u6700\u9760\u524d\u7684\u4e00\u4e2a\uff09\u5373\u4e3aans\n\n\u4ee3\u7801\u5982\u4e0b\uff08PAT\u610f\u601d\u4e3apay attention to\uff09\n```cpp\n//#pragma GCC optimize(3)\n#include <bits/stdc++.h>\nconst int I=1000005;\nint a[I],c[I],l[I],r[I],n,m,x=-1;\nlong long cf[I];\nlong long sum;\nbool flag=1;\nusing namespace std;\nint main(){\n\n\tios::sync_with_stdio(false);//\u8f93\u5165\u4f18\u5316 \n\tcin.tie(0);cout.tie(0);\n\t\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=1;i<=m;i++){//\u5dee\u5206\u6570\u7ec4 \n\t\tcin>>c[i]>>l[i]>>r[i];\n\t\tcf[l[i]]+=c[i];\n\t\tcf[r[i]+1]-=c[i];\n\t}\n\tint j=m;//PAT\uff1a\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u53ea\u8981\u53d1\u73b0\u5220\u9664\u54ea\u4e2a\u540e\u6b63\u597d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u5176\u4e3aans \n\tfor(int i=1;i<=n;i++){\n\t\tsum+=cf[i];//\u8ba1\u7b97\u6bcf\u4e2a\u6559\u5ba4\u7684\u4f7f\u7528\u60c5\u51b5 \n\t\tif(sum>a[i]){// \n\t\t\twhile(sum>a[i]){//\u4ece\u540e\u5f80\u524d\u64a4\u56de\u6d88\u606f \n\t\t\t\tcf[l[j]]-=c[j];\n\t\t\t\tcf[r[j]+1]+=c[j];\n\t\t\t\tif(l[j]<=i&&i<=r[j])//PAT\uff1a\u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u5305\u542b\u4e86\u7b2ci\u4e2a\u6559\u5ba4\uff0c\u5219\u5220\u9664\u5b83\u4f1a\u5f71\u54cdsum\u7684\u503c \n\t\t\t\t\tsum-=c[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tif(flag)x=j,flag=0;//\u66f4\u65b0x \n\t\t\telse\n\t\t\t\tx=min(x,j);\n\t\t}\n\t}\n\tif(x==-1)cout<<\"0\";\n\telse cout<<\"-1\"<<endl<<x+1;\n\treturn 0;\n}\n\n```",
        "postTime": 1534842993,
        "uid": 81777,
        "name": "JNK_DOG",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u771f\u7684\u5f88\u65b9\u4fbf\u554a\uff0c\u4e2a\u4eba\u89c9\u5f97\u6bd4\u5dee\u5206\u597d\u60f3\u8bf6\uff1f\uff1f\n\u7ebf\u6bb5\u6811\u505a\u6cd5\uff1a\n\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5b89\u6392\n\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7b2c\u51e0\u5929\u7684\u5269\u4f59\u6559\u5ba4\n\u7136\u540e\u8ba2\u5c31\u662f\u533a\u95f4\u51cf\u6cd5\uff0c\u7136\u540e\u540c\u65f6\u5224\u65ad\u4e00\u4e0b\u5c31ok\u4e86\n\u6ce8\u91ca\u5c31\u4e0d\u5199\u4e86\u5427...\u6570\u636e\u7ed3\u6784\u9898\uff0c\u6211\u7684\u51fd\u6570\u540d\u8fd8\u662f\u6bd4\u8f83\u660e\u4e86\u7684q;\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\nusing namespace std;\n\n#define MAXN 1000005\n#define MAXM 1000005\n#define R register\n#define GC getchar()\n#define PC(a) putchar(a+48)\n#define inf 2147483647\n\nstruct node {int l,r,minn,tag;}t[MAXM<<2];\n\ntemplate <typename T> inline void read(T &x);\ntemplate <typename T> inline void print(T x);\ntemplate <typename T> inline T max(T x,T y);\ntemplate <typename T> inline T min(T x,T y);\n\ninline int ls(int x);\ninline int rs(int x);\ninline void down(int x);\ninline void build (int L,int R,int x);\ninline void change(int num,int ll,int rr,int x,int &ff);\n\nint main()\n{\n\tR int n,m;\n\tread(n),read(m);\n\tbuild(1,n,1);\n\tR int d,s,t,f;\n\tfor(R int i=1;i<=m;i++)\n\t{\n\t\tread(d),read(s),read(t);\n\t\tf=0;\n\t\tchange(d,s,t,1,f);\n\t\tif(f) {printf(\"-1\\n%d\\n\",i);return 0;}\n\t}\n\tprint(0);\n\treturn 0;\n}\n\ntemplate <typename T>\ninline void read(T &x)\n{\n\tchar a=GC;int f=1;x=0;\n\tfor(;a>'9'||a<'0';a=GC) if(a=='-') f=-1;\n\tfor(;a>='0'&&a<='9';a=GC) x=(x<<1)+(x<<3)+(a^48);\n\tx*=f;\n}\n\ntemplate <typename T> \ninline void print(T x)\n{\n\tint tot=0,a[20];int f=0;\n\tif(x<0) putchar(' '),x=-x,f=1;\n\tif(x==0) {putchar('0');putchar('\\n');return;}\n\twhile(x) {a[++tot]=x%10;x/=10;}\n\tif(f) putchar('-');\n\twhile(tot) PC(a[tot--]);\n\tputchar('\\n');\n}\n\ntemplate <typename T> inline T max(T x,T y) {return x>y?x:y;}\ntemplate <typename T> inline T min(T x,T y) {return x<y?x:y;}\ninline int ls(int x) {return x<<1;}\ninline int rs(int x) {return x<<1|1;}\n\ninline void build(int LL,int RR,int x)\n{\n\tt[x].l=LL;t[x].r=RR;t[x].tag=0;t[x].minn=inf;\n\tif(LL==RR) {read(t[x].minn);return;}\n\tR int mid=LL+RR;mid>>=1;\n\tbuild(LL,mid,ls(x));\n\tbuild(mid+1,RR,rs(x));\n\tt[x].minn=min(t[ls(x)].minn,t[rs(x)].minn);\n}\n\ninline void change(int num,int ll,int rr,int x,int &ff)\n{\n\tif(t[x].l>=ll&&t[x].r<=rr) \n\t{\n\t\tif(t[x].minn<num) {ff=1;return;}\n\t\tt[x].minn-=num;\n\t\tt[x].tag+=num;\n\t\treturn;\n\t}\n\tif(t[x].tag) down(x);\n\tint mid=t[x].l+t[x].r;mid>>=1;\n\tif(ll<=mid)\n\tchange(num,ll,rr,ls(x),ff);\n\tif(rr>mid)\n\tchange(num,ll,rr,rs(x),ff);\n\tt[x].minn=min(t[ls(x)].minn,t[rs(x)].minn);\n}\n\ninline void down(int x)\n{\n\tt[ls(x)].tag+=t[x].tag;\n\tt[rs(x)].tag+=t[x].tag;\n\tt[ls(x)].minn-=t[x].tag;\n\tt[rs(x)].minn-=t[x].tag;\n\tt[x].tag=0;\n}\n```\n\n\u7ebf\u6bb5\u6811\uff0c\u4f60\u503c\u5f97\u62e5\u6709",
        "postTime": 1565513262,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "##noip2012\u501f\u6559\u5ba4\u9898\u89e3\n\n###\u2014\u2014\u4e8c\u5206\u52a0\u524d\u7f00\u5408\n\n\u4e8c\u5206\u7b56\u7565\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u76f4\u63a5\u5728\u8ba2\u5355\u7f16\u53f7\u4e2d\u4e8c\u5206\u5373\u53ef\uff0c\n\n\u4f46\u662f\u6211\u4eec\u5982\u4f55\u5224\u65ad\u5462\uff1f\uff1f\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u65b9\u6cd5\uff08\u4f46\u7528\u4e86\u8fd9\u4e2a\u4f60\u4e5f\u4e0d\u9700\u8981\u4e8c\u5206\u4e86\uff09\uff0c\u6211\u4eec\u8fd0\u7528\u4e8e\u7ebf\u6bb5\u6811\u529f\u80fd\u76f8\u540c\u7684\u524d\u7f00\u548c\n\n\u8bbec[]\u6570\u7ec4\u4e3a\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u5219\u5bf9\u4e8e\u4e00\u4e2ad[i],s[i],t[i],\u5219\u5c06c[s[i]]+=d[i], c[t[i]+1]-=d[i]\n\n**\u8bc1\u660e**\uff1a\n\n\u5728\u4e00\u4e2a\u8ba2\u5355\u7684\u8d77\u59cb\u5929+\u8981\u501f\u7684\u623f\u95f4\u6570\u91cf\uff0c\u5728\u7ed3\u675f\u5929\u7684\u4e0b\u4e00\u5929\u51cf\u53bb\u8981\u501f\u7684\u623f\u95f4\u6570\u91cf\u3002\u8bbe\u4e00\u4e2a\u6570\u7ec4c[i]\uff0c\u8bb0\u5f55\u524d\u7f00\u548c\u3002\u8bfb\u5165\u7684\u6570\u636e\u662fd,s,t\n\nc[s]:=c[s]+d;c[t+1]:=c[t+1]-d;\n\n\u90a3\u4e48\u5982\u679c\u7b2ci\u5929\u5728s\u548ct\u4e4b\u95f4\uff0c\u90a3\u4e48\u524di\u5929\u7684sum{c[i]}\u4e2d\u6709c[s],\u76f8\u5f53\u4e8e\u5df2\u7ecf\u8bb0\u4e0b\u7b2ci\u5929\u7684\u8ba2\u5355\u6570\u91cf\u4e86\u3002\u5982\u679c\u7b2ci\u5929\u5728t\u4e4b\u540e\uff0c\u524di\u5929\u7684sum{c[i]}\u4e2d\u6709c[s]\u548cc[t],\u56e0\u4e3ac[s]+d+c[t+1]-d=c[s]+c[t]\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8ba2\u5355\u53ea\u5bf9s\u548ct\u4e2d\u95f4\u5929\u6570\u8d77\u4f5c\u7528\u3002\u5f97\u8bc1\uff01\n\n(\u5177\u4f53\u64cd\u4f5c\u8be6\u89e3\u4ee3\u7801\u4e2d\u7684check()\u51fd\u6570)\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\nconst int maxn = 1000005;\nint n, m, ans = 20021228;\nint r[maxn], c[maxn], now;\nint d[maxn], s[maxn], t[maxn];\nbool check(int mid)  //\u5224\u65ad\u5f53\u524d\u7684\u4e8c\u5206\u503c\u662f\u5426\u53ef\u884c  \n{\n    int i, sum = 0;\n    if(now > mid) \n      for(i = mid + 1; i <= now; i++) {\n          c[s[i]] -= d[i];\n          c[t[i] + 1] += d[i];\n      }\n    else\n      for(i = now + 1; i <= mid; i++) {  //\u6ce8\u610f\u8fd9\u91cc\u662f\u5c06\u4ee5\u524d\u64cd\u4f5c\u7684\u6062\u590d\u539f\u6837\uff0c\u64cd\u4f5c\u76f8\u53cd\n          c[s[i]] += d[i];\n          c[t[i] + 1] -= d[i];\n      }\n    now = mid;\n    for(i = 1; i <= n; i++) {\n      sum += c[i];\n      if(sum > r[i]) return true;\n    }\n    return false;\n}\nint main()\n{\n    //freopen(\"classroom.in\", \"r\", stdin);\n    //freopen(\"classroom.out\", \"w\", stdout);\n    int i;\n    scanf(\"%d%d\", &n, &m);\n    for(i = 1; i <= n; i++)\n      scanf(\"%d\", &r[i]);\n    for(i = 1; i <= m; i++) {\n      scanf(\"%d%d%d\", &d[i], &s[i], &t[i]);\n    }\n    int l = 1, r = m, mid;\n    while(l <= r) {  //\u4e8c\u5206\u7b54\u6848\n      mid = (l + r) / 2;\n      if(check(mid)) ans = min(ans, mid), r = mid -1;\n      else l = mid + 1;\n    }\n    if(ans != 20021228) \n      printf(\"-1\\n%d\", ans);\n     else printf(\"0\"); \n    return 0;\n}\n```\n\u00b7\u00b7\u00b7\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u8bf7\u5927\u5bb6\u652f\u6301\n",
        "postTime": 1472651778,
        "uid": 17156,
        "name": "dsl2002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8bf4\u5361\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\u7b97\u4e86\u4e00\u4e0b\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u52a0\u4e2a\u5feb\u8bfb\u5c31\u8dd1\u5f97\u5f88\u5feb\u4e86\u3002~~\uff08\u5176\u5b9e\u662f\u6ca1\u60f3\u5230\u4e8c\u5206+\u524d\u7f00\u548c\uff09~~\u770b\u5230\u6ca1\u6709\u5199\u4e0d\u5c01\u88c5\u5728\u7ed3\u6784\u4f53\u91cc\u9762\u7684\u7ebf\u6bb5\u6811\u7684\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e2a\u9898\u89e3\u5427\u3002\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mid ((l+r)>>1)\n#define lson rt<<1,l,mid\n#define rson rt<<1|1,mid+1,r//\u5b8f\u5b9a\u4e49\ninline void read(int &x){\n    char c=getchar();\n    int p=1;\n    x=0;\n    while(!isdigit(c)){\n        if(c=='-')p=-1;\n        c=getchar();\n    }\n    while(isdigit(c)){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n    x*=p;\n}//\u5feb\u8bfb\nconst int maxn=1000005;\nint minn[maxn<<2],tag[maxn<<2],n,m;//\u7ebf\u6bb5\u6811\u8ba1\u7b97\u533a\u95f4min\u503c,\u56e0\u4e3a\u8981\u533a\u95f4\u4fee\u6539\u6240\u4ee5\u9700\u8981\u4e00\u4e2atag\u6765\u6807\u8bb0\ninline int _min(int a,int b){\n    return a>b?b:a;\n}//\u624b\u5199min\u51fd\u6570\u5361\u5361\u5e38\ninline void push_up(int rt){\n    minn[rt]=_min(minn[rt<<1],minn[rt<<1|1]);\n}\ninline void build(int rt,int l,int r){\n    if(l==r)read(minn[rt]);\n    else{\n        build(lson);\n        build(rson);\n        push_up(rt);\n    }\n}//\u666e\u901a\u5efa\u6811\ninline void push_down(int rt){\n    minn[rt<<1]-=tag[rt];\n    minn[rt<<1|1]-=tag[rt];\n    tag[rt<<1]+=tag[rt];\n    tag[rt<<1|1]+=tag[rt];\n    tag[rt]=0;\n}\ninline void update(int rt,int l,int r,int L,int R,int num){\n    if(l>=L&&r<=R){\n        minn[rt]-=num;\n        tag[rt]+=num;\n    }\n    else{\n        if(tag[rt])push_down(rt);\n        if(L<=mid)update(lson,L,R,num);\n        if(R>mid)update(rson,L,R,num);\n        push_up(rt);\n    }\n}//\u533a\u95f4\u4fee\u6539min\u503c\nint main(){\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n    read(n);read(m);\n    build(1,1,n);\n    for(register int i=1;i<=m;++i){\n        int d,s,j;\n        read(d);read(s);read(j);\n        update(1,1,n,s,j,d);//\u533a\u95f4\u4fee\u6539min\u503c\n        if(minn[1]<0){//\u5982\u679c\u5168\u90e8\u7684minn\u5c0f\u4e8e0\u5c31\u4e0d\u884c\u4e86\n            printf(\"-1\\n%d\\n\",i);\n            return 0;\n        }\n    }\n    puts(\"0\");\n    return 0;\n}\n```",
        "postTime": 1510056087,
        "uid": 20865,
        "name": "lizongru",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u65e0\u803b\u7684\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8](http://www.cnblogs.com/noblex/)\n\n---\n\n\u54c8\u54c8\u54c8\u54c8\uff0c\u849f\u84bb\u6765\u4ecb\u7ecd\u4e00\u79cd\u66b4\u529b**\u65b0**\u505a\u6cd5\n\n\u8fd9\u9898\u524d\u7f00\u548c\u641e\u4e00\u641e\u662f\u53ef\u4ee5\u628a\u6bcf\u5929\u7684\u6559\u5ba4\u9700\u6c42\u6570\u91cf\u7b97\u51fa\u6765\u7684\n\n\n```cpp\nsum[s[i]]+=d[i]; sum[t[i]+1]-=d[i];\n........\n........\nfor(int i=1;i<=n;i++) sum[i]+=sum[i-1];\n```\n\n\u8fd9\u6837\u5b50\u5c31\u628a\u6bcf\u5929\u7684\u9700\u6c42\u91cf\u7edf\u8ba1\u51fa\u6765\u4e86\n\n\n\u63a5\u7740\u4e00\u4e2a\u5faa\u73af\u66b4\u529b\u8ba1\u7b97\u54ea\u5929\u4f9b\u4e0d\u5e94\u6c42\uff0c\u518d\u66b4\u529b\u4e00\u4e2a\u4e2a\u51cf\u56de\u53bb\u76f4\u5230\u7b26\u5408\u6761\u4ef6\n\n\u6700\u574f\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u5361\u5230$ O(mn) $\u7684\uff0c\u4f46\u53ef\u80fd\u51fa\u9898\u4eba\u53bb\u5361\u5176\u4ed6\u505a\u6cd5\u4e86QwQ\n\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+100;\nint s[maxn],t[maxn];\nlong long  sum[maxn],r[maxn],d[maxn];\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&r[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%lld%d%d\",&d[i],&s[i],&t[i]);\n\t\tsum[s[i]]+=d[i]; sum[t[i]+1]-=d[i];\n\t}\n\tfor(int i=1;i<=n;i++) sum[i]+=sum[i-1];\n\tint anss=1e9;\n\tfor(int i=1;i<=n;i++){\n\t\tif(sum[i]>r[i]){\n\t\t\tlong long ans=sum[i]; int j;\n\t\t\tfor(j=m;j>=1;j--){\n\t\t\t\tif(s[j]<=i && t[j]>=i){\n\t\t\t\t\tans-=d[j]; if(ans<=r[i]) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tanss=min(anss,j);\n\t\t\tif(anss==1) break;\n\t\t}\n\t}\n\tif(anss==1e9) puts(\"0\");\n\telse printf(\"%d\\n%d\",-1,anss);\n\treturn 0;\n}\n```\n\n\n\u6ca1\u8bfb\u5165\u4f18\u53161120ms\n\n\u8fd9\u79cd\u5c0f\u4f18\u5316\u66b4\u529b\u771f\u662fNOIp\u4e2d\u7684\u4e0d\u4e8c\u4e4b\u9009\u554a\uff0c\u4ee3\u7801\u53ea\u670931\u884c\uff01\uff01\uff01\uff01",
        "postTime": 1529308863,
        "uid": 36281,
        "name": "noble_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "## \u66b4\u529b\n\n\u8fd8\u662f\u5148\u770b\u66b4\u529b\u600e\u4e48\u505a\u5427\uff0c\u5bf9\u4e8em\u6b21\u501f\u6559\u5ba4\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u628a\u533a\u95f4s~t\u7684\u7a7a\u6559\u5ba4\u6570r-=d\uff0c\u5f53\u6709\u4e00\u6b21r<0\u65f6\uff0c\u5219\u5f53\u524d\u8fd9\u4e2a\u4eba\u65e0\u6cd5\u88ab\u6ee1\u8db3\uff0c\u76f4\u63a5\u8f93\u51fa-1\u548c\u5f53\u524d\u8fd9\u4e2a\u4eba\u7684\u53f7\u6570\uff0c\u7136\u540e\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\u3002\u5982\u679cm\u6b21\u501f\u6559\u5ba4\u90fd\u64cd\u4f5c\u5b8c\u6210\u540e\u4f9d\u7136\u6ca1\u6709\u623f\u95f4\u6570r<0\uff0c\u5219\u8bf4\u660e\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u88ab\u6ee1\u8db3\uff0c\u5219\u8f93\u51fa0\u3002\n\n\u7efc\u5408\u4e0a\u8ff0\u505a\u6cd5+\u8fc7\u5927\u7684\u6570\u636e\u76f4\u63a5\u8f93\u51fa0\uff0c\u5f97\u520645\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint r[1000005];\nint d[1000005],s[1000005],t[1000005];\nint main()\n{\n\tcin>>n>>m; \n\tif(n>=100000)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>r[i];\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>d[i]>>s[i]>>t[i];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=s[i];j<=t[i];j++)\n\t\t{\n\t\t\tr[j]-=d[i];\n\t\t\tif(r[j]<0)\n\t\t\t{\n\t\t\t\tcout<<-1<<endl<<i;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<0;\n\treturn 0;\n} \n```\n\n\u663e\u7136\uff0c\u8fd9\u6837\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65f6O(N*M)\u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\uff0c\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u63a8\u77e5\u8be5\u9898\u6b63\u786e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662flog\u7ea7\u7684\u3002\n\n## \u6b63\u89e3 \n\n\u65e2\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u65f6log\u7ea7\u7684\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\u4e8c\u5206\u3002\n\n\u518d\u770b\u5230\u6bcf\u4e2a\u4eba\u501f\u6559\u5ba4\u7684\u65f6\u95f4\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u4e14\u8be5\u533a\u95f4\u53ea\u4f1a\u5bf9\u5176\u4ed6\u5728\u8be5\u533a\u95f4\u8981\u501f\u6559\u5ba4\u7684\u4eba\u4ea7\u751f\u5f71\u54cd\uff0c\u5bf9\u4e8e\u533a\u95f4\u4e4b\u5916\u7684\u501f\u6559\u5ba4\u7684\u4eba\u662f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u7684\uff0c\u4e8e\u662f\u53c8\u60f3\u5230\u4e86\u5dee\u5206\u3002\n\n\u5dee\u5206\u5e8f\u5217\uff1a\uff08\u53ef\u7528\u4e8e\u533a\u95f4\u589e\u51cf\uff09\u8bb0\u5f55\u76f8\u90bb\u4e24\u4e2a\u91cf\u7684\u53d8\u5316\u91cf\uff0c\u6240\u4ee5\u5f53\u5728\u4e00\u6bb5\u533a\u95f4[l,r]\u4e0a\u589e\u52a0a\u65f6\uff0c\u53ea\u9700\u8981\u5728l\u5904\u52a0a\uff0c\u5728r+1\u5904-a\u5373\u53ef\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u7406\u89e3\u5dee\u5206\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\u7684\uff0c[\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3368)\u611f\u53d7\u4e00\u4e0b\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4e8c\u5206\uff1a\u5982\u679c\u4e00\u4e2a\u4eba\u65e0\u6cd5\u88ab\u6ee1\u8db3\uff0c\u5219\u4ed6\u540e\u9762\u7684\u4eba\u5168\u90fd\u4e0d\u80fd\u88ab\u6ee1\u8db3\uff1b\u5982\u679c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u88ab\u6ee1\u8db3\uff0c\u5219\u4ed6\u524d\u9762\u7684\u4eba\u90fd\u53ef\u4ee5\u88ab\u6ee1\u8db3\u3002\u8fd9\u6070\u6070\u543b\u5408\u4e86\u6211\u4eec\u4e8c\u5206\u7684\u6027\u8d28\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;//\u5929\u6570\u548c\u8ba2\u5355\u7684\u6570\u91cf\nint r[1000005];//\u7b2ci\u5929\u5b66\u6821\u6709r[i]\u4e2a\u6559\u5ba4\u53ef\u501f\u7528 \nint d[1000005],s[1000005],t[1000005];//\u501f\u7684\u6559\u5ba4\u6570\u76ee\u3001\u4ece\u7b2cs\u5929\u501f\u5230t\u5929 \nint cf[1000005];//\u5dee\u5206\u6570\u7ec4 \nbool judge(int x)//\u5224\u65ad\u80fd\u4e0d\u80fd\u901a\u8fc7x\u4e2a\u4eba \n{\n\tmemset(cf,0,sizeof(cf));//\u6bcf\u6b21\u5224\u65ad\u90fd\u8981\u5148\u521d\u59cb\u5316\u5dee\u5206\u6570\u7ec4 \n\tint sum=0;//\u8bb0\u5f55\u9700\u8981\u501f\u7684\u6559\u5ba4\u6570 \n\tfor(int i=1;i<=x;i++)\n\t{\n\t\tcf[s[i]]+=d[i];//\u56e0\u4e3a\u53ea\u4f1a\u5bf9\u5728s~l\u4e4b\u95f4\u8981\u501f\u7528\u6559\u5ba4\u7684\u4eba\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5dee\u5206 \n\t\tcf[t[i]+1]-=d[i];//\u5dee\u5206//\u6ce8\u610f\u662ft[i]+1\uff0c\u56e0\u4e3a\u8981\u5305\u542bt[i]\u8fd9\u4e2a\u70b9 \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tsum+=cf[i];//\u56e0\u4e3acf\u662f\u5dee\u5206\u6570\u7ec4\uff0c\u6240\u4ee5sum\u5c31\u662f\u5728\u7b2ci\u5929\u7684\u501f\u6559\u5ba4\u7684\u603b\u6570 \n\t\tif(sum>r[i])//\u5982\u679c\u8981\u501f\u7684\u6559\u5ba4\u591a\u4e8e\u7a7a\u7684\u6559\u5ba4 \n\t\t\treturn false;//\u4e0d\u53ef\u884c \n\t}\n\treturn true;//\u53ef\u884c \n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&r[i]);\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&d[i],&s[i],&t[i]);\n\tif(judge(m)==true)//\u5982\u679c\u5168\u90e8\u6ee1\u8db3 \n\t{\n\t\tcout<<'0';//\u8f93\u51fa0 \n\t\treturn 0;//\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f \n\t}\n\tint l=1;\n\tint r=m;//\u4e8c\u5206\u5de6\u53f3\u533a\u95f4 \n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(judge(mid)==true)//\u5982\u679c\u53ef\u884c\n\t\t\tl=mid+1;//\u589e\u591a\u6ee1\u8db3\u4eba\u6570 \n\t\telse//\u5426\u5219 \n\t\t\tr=mid;//\u51cf\u5c11\u6ee1\u8db3\u4eba\u6570 \n\t}\n\tcout<<\"-1\"<<endl<<l;//\u8f93\u51fa-1\u548c\u9700\u8981\u4fee\u6539\u7684\u4eba \n\treturn 0;\n}\n```\n\n\u5982\u679c\u6709\u5174\u8da3\u611f\u53d7\u4e00\u4e0b\u4e8c\u5206\uff0c[\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P2678)\n\n\n\n------------\n\n\nps\uff1a\u90a3\u51e0\u4e2a\u6570\u7ec4\u4e00\u5b9a\u4e0d\u8981\u5f00\u5927\u4e86\uff0c\u5361\u7a7a\u95f4\u7684\u3002\u3002\u3002\u3002",
        "postTime": 1540866336,
        "uid": 59097,
        "name": "\u5f20\u4ea6\u5f1b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "# P1083 \u501f\u6559\u5ba4 \u9898\u89e3 \n\n### ~~\u7ebf\u6bb5\u6811\u5927\u6cd5\u597d\u2026\u2026~~\n\n\u770b\u5230\u9898\u76ee\uff0c\u7136\u540e\u6709\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5\u6211\u5c31\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u73b0\u5728\u9700\u8981\u7684\u662f\u4e00\u68f5\u652f\u6301**\u533a\u95f4\u4fee\u6539**\u548c**\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c**\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a$x-y$\u8fd9\u4e9b\u5929\u5f62\u8c61\u7684\u770b\u6210\u533a\u95f4$[x,y]$\uff0c\u4e00\u5f00\u59cb\u6211\u4eec\u5efa\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u533a\u95f4$[a,a]$\u76f4\u63a5\u8d4b\u503c\uff0c\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\u65e0\u6cd5\u6ee1\u8db3\u6559\u5ba4\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f93\u51fa$-1$\u4e4b\u7c7b\u7684\u4e86\u3002\u5426\u5219\uff0c\u6211\u4eec\u6bcf\u6b21\u6267\u884c\u533a\u95f4\u51cf\u5373\u53ef\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u800c\u6574\u4e2a\u533a\u95f4\u90fd\u51cf\u53bb\u4e00\u4e2a\u6570$val$\u7684\u8bdd\uff0c\u90a3\u4e48\u6700\u5c0f\u503c\u4e5f\u4f1a\u6bd4\u539f\u6765\u5c0f$val$\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u4fee\u6539\u65f6\u628a\u533a\u95f4\u6700\u4e0b\u503c\u51cf\u53bb$val$\u5373\u53ef\uff0c\u8bb0\u5f97\u6253\u6807\u8bb0\u3002\n\n\u5982\u679c\u5230\u4e86\u6700\u540e\u8fd8\u6ca1\u6709\u8f93\u51fa$-1$\uff0c\u90a3\u5c31\u8f93\u51fa\u4e2a$0$\u5c31\u884c\u3002\n\n\u56e0\u4e3a$n,m=10^6$\u2026\u2026\u6240\u4ee5\u4f60\u76f4\u63a5\u6253\u4f1a$T$\u6389\u4e00\u4e2a\u70b9\u2026\u2026\u7136\u540e\u6211\u6253\u4e86\u5feb\u8bfb\u5feb\u4e86$0.03s$\u5e76\u6ca1\u6709\u8fc7\uff0c\u63a5\u7740\u6211\u53c8\u52a0\u4e86\u4e00\u5806$inlline$\u8fd8\u662f\u6ca1\u8fc7\u3002\u6700\u540e\uff0c\u6211\u975e\u5e38\u66b4\u529b\u7684\u52a0\u4e86\u4e00\u5806$register$\uff0c\u7136\u540e\u90a3\u4e2a\u70b9\u5c31\u4ece$1.1s$\u53d8\u5230\u4e86$900ms$\u2026\u2026\u6211\u8fd8\u80fd\u8bf4\u4ec0\u4e48\u5462\uff1f\u6211\u5df2\u7ecf\u65e0\u8bdd\u53ef\u8bf4\u4e86\u2026\u2026(**~~\u6307\u4ee4\u96c6\u771f\u597d~~**)\n\n### $Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 10;\nstruct SegmentTree {\n\tint l, r, val;\n\tint tag;\n}t[N << 2];\n\n#define ls(x) x<<1\n#define rs(x) x<<1|1\n\ninline int read() {\n\tstatic char c;\n\tstatic int x;\n\twhile(!isdigit(c = getchar()));\n\tx = c - '0';\n\twhile(isdigit(c = getchar()))\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\treturn x;\n}\ninline void updata(register int p) {\n\tt[p].val = min(t[ls(p)].val, t[rs(p)].val);\n}\n\ninline void build(register int p, register int l, register int r) {\n\tt[p].l = l, t[p].r = r;\n\tif(l == r) {\n\t\tt[p].val = read();\n\t\treturn;\n\t}\n\t\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p), l, mid);\n\tbuild(rs(p), mid + 1, r);\n\tupdata(p);\n}\n\ninline void spread(register int p) {\n\tif(t[p].tag) {\n\t\tt[ls(p)].val -= t[p].tag;\n\t\tt[rs(p)].val -= t[p].tag;\n\t\tt[ls(p)].tag += t[p].tag;\n\t\tt[rs(p)].tag += t[p].tag;\n\t\tt[p].tag = 0;\n\t}\n}\n\ninline void change(register int p, register int l, register int r, register int val) {\n\tif(l <= t[p].l && r >= t[p].r) {\n\t\tt[p].val -= val;\n\t\tt[p].tag += val;\n\t\treturn;\t\n\t}\n\tspread(p);\n\tint mid = (t[p].l + t[p].r) >> 1;\n\tif(l <= mid) change(ls(p), l, r, val);\n\tif(r > mid) change(rs(p), l, r, val);\n\tupdata(p);\n}\n\ninline int ask(register int p, register int l, register int r) { \n\tif(l <= t[p].l && r >= t[p].r) return t[p].val;\n\tspread(p);\n\tint mid = (t[p].l + t[p].r) >> 1, val = 0x3f3f3f3f;\n\tif(l <= mid) val = min(val, ask(ls(p), l, r));\n\tif(r > mid) val = min(val, ask(rs(p), l, r));\n\treturn val;\n}\n\nint main() {\n\t\n\tint n = read(), m = read();\n\tbuild(1, 1, n);\n\tfor(register int i = 1; i <= m; i++) {\n\t\tint val = read(), l = read(), r = read();\n\t\tif(ask(1, l, r) < val) {\n\t\t\tprintf(\"-1\\n%d\\n\", i);\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tchange(1, l, r, val);\n\t}\n\tprintf(\"0\\n\");\n\treturn 0;\n}\n```\n\u4f60\u8fd8\u53ef\u4ee5\u6362\u4e2a\u5e38\u6570\u5c0f\u7684\u7ebf\u6bb5\u6811\u6253\u2026\u2026~~\u4e0d\u8fc7\u6211\u5fd8\u4e86\u53eb\u5565\u4e86~~\n\n\n\n------------\n### $updata2019.8.17$ \u4fee\u6b63\u4e86\u9519\u522b\u5b57\n\n$End$\n------------\n",
        "postTime": 1565945442,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u6b63\u89e3\u5e94\u8be5\u662f\u4e8c\u5206\uff0c\u4f46\u662f\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u53bb\u505a\uff0c\u697c\u4e0b\u6709\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\u3002\n\n\u4f46\u662f\u7ebf\u6bb5\u6811\u6bd4\u8f83\u6162\uff0c\u6709\u4e9b\u7ebf\u6bb5\u6811\u4f1a\u88ab\u5361\u7b2c13\u4e2a\u70b9\u3002\u6211\u6765\u4ecb\u7ecd\u4e00\u4e0b\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u8fd9\u9053\u9898\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u51cf\u6cd5\u7684\u6807\u8bb0\u3002\n\n\u6211\u4eec\u5728\u6253\u6807\u8bb0\u7684\u65f6\u5019\u4e0d\u4e0b\u4f20\u6807\u8bb0\uff0c\u800c\u662f\u5728\u66f4\u65b0\u7684\u65f6\u5019\u7528\u6700\u5c0f\u503c\u548c\u6807\u8bb0\u4e00\u8d77\u66f4\u65b0\u3002\n\n\u6b63\u5e38\u7684update\u51fd\u6570\u4e2dmin\u503c\u8981\u53d6min(\u5de6\u513f\u5b50min\uff0c\u53f3\u513f\u5b50min)\u3002\u5982\u679c\u6211\u4eec\u4e0d\u4e0b\u4f20\u6807\u8bb0\u7684\u8bdd\uff0c\u8fd9\u91cc\u5c31\u53ef\u4ee5\u8fd9\u4e48\u5199\n\nmin(\u5de6\u513f\u5b50min-\u5de6\u513f\u5b50\u6807\u8bb0\uff0c\u53f3\u513f\u5b50min-\u53f3\u513f\u5b50\u6807\u8bb0)\u3002\n\n\u5f53\u7136\u6700\u540e\u67e5\u8be2\u6839\u8282\u70b9\u7684min\u65f6\u4e5f\u8981\u51cf\u53bb\u6839\u8282\u70b9\u7684\u6807\u8bb0\u3002\n\n\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u597d\u5904\u662f\u901f\u5ea6\u4f1a\u53d8\u5feb\uff0c\u4ee5\u53ca\u4fbf\u4e8e\u5220\u9664\u6807\u8bb0\u3002\u4f46\u662f\u8fd9\u9053\u9898\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define min(a,b) (a<b?a:b)\nconst int maxn=1000010;\nstruct segment{\n    int l,r,minn,minus;\n}tree[maxn<<2];\nint a[maxn],n,m,l,r,s;\nvoid build(int l,int r,int now)\n{\n    tree[now].l=l,tree[now].r=r;\n    if(l==r)\n    {\n        tree[now].minn=a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(l,mid,now<<1);\n    build(mid+1,r,now<<1|1);\n    tree[now].minn=min(tree[now<<1].minn,tree[now<<1|1].minn);\n}\nvoid update(int now)\n{\n    tree[now].minn=min(tree[now].minn,min(tree[now<<1].minn-tree[now<<1].minus,tree[now<<1|1].minn-tree[now<<1|1].minus)); \n}\nvoid change(int l,int r,int now,int num)\n{\n    if(tree[now].l==l&&tree[now].r==r)\n    {        \n        tree[now].minus+=num;\n        return;\n    }\n    int mid=(tree[now].l+tree[now].r)>>1;\n    if(r<=mid) change(l,r,now<<1,num);\n    else if(l>mid) change(l,r,now<<1|1,num);\n    else change(l,mid,now<<1,num),change(mid+1,r,now<<1|1,num);\n    update(now);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    build(1,n,1);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&s,&l,&r);\n        change(l,r,1,s);\n        if(tree[1].minn-tree[1].minus<0)\n        {\n            printf(\"-1\\n%d\",i);\n            return 0;\n        }\n    }\n    printf(\"0\");\n}\n```",
        "postTime": 1504494689,
        "uid": 17828,
        "name": "revenger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\t\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u601d\u60f3\u522b\u7684\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u672c\u849f\u84bb\u5c31\u4e0d\u591aBB\u4e86\uff0c\u4eca\u5929\u7684\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u4e86\u4f7f\u66f4\u591a\u8ddf\u6211\u4e00\u6837\u7684\u849f\u84bb\u80fd\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u9053\u9898**\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a**\u4ee5\u53ca\u8fd9\u4e48\u505a**\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684**\uff1b\n    \n\u6837\u4f8b\u6570\u636e\uff1a\n```\n4 3 \n2 5 4 3 \n2 1 3 \n3 2 4 \n4 2 4\n```\n\n\u5217\u4e00\u4e2a\u8868\u683c\u770b\u7684\u6e05\u695a\u4e00\u70b9\n|  | \u7b2c\u4e00\u4efddd| \u7b2c\u4e8c\u4efddd  | \u7b2c\u4e09\u4efddd |\n| :----------: | :----------: | :----------: | :----------: |\n|\u5f00\u59cb|1|2|2|\n|\u7ed3\u675f|3|4|4|\n|\u9700\u8981|2|3|4|\n\n|\u5929\u6570|1|2|3|4|\n| -----------: | -----------: | -----------: | -----------: | -----------: |\n|\u5269\u4f59|2|5|4|3|\n\n\n\t\u7136\u540e\u5728\u6570\u7ec4NoName\u91cc\u8fdb\u884c\u5904\u7406\u6570\u636e\uff0c\u7b2c\u4e00\u4efddd\u4ece\u7b2c\u4e00\u5929\u5230\u7b2c\u4e09\u5929\u9700\u89812\u4e2a\u6559\u5ba4\uff0c\u5c31\u4f7f\nNoName[1]+=2,NoName[3+1]-=2;\n\n|NoName[1]  | NoName[2] |NoName[3]  |NoName[4]  |NoName[5]\n| -----------: | -----------: | -----------: | -----------: | -----------:|\n| 2 | 0 | 0 |  -2| 0|\n\n\t\u7b2c\u4e8c\u4efddd\uff1aNoName[2]+=3,NoName[5]-=3;\n\n|NoName[1]  | NoName[2] |NoName[3]  |NoName[4]  |NoName[5]\n| -----------: | -----------: | -----------: | -----------: | -----------:|\n| 2 | 3 | 0 |  -2| -3|\n\n\t\u7b2c\u4e09\u4efddd\uff1aNoName[2]+=4,NoName[4]-=4;\n\n|NoName[1]  | NoName[2] |NoName[3]  |NoName[4]  |NoName[5]\n| -----------: | -----------: | -----------: | -----------: | -----------:|\n| 2 | 7 | 0 |  -2| -7|\n\n\t\u5728\u8fd9\u91cc\u6211\u4eec\u518d\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4need\uff0c\u901a\u8fc7\u5bf9need\u548cNoName\u7684\u904d\u5386\u5c31\u53ef\u4ee5\u5f97\u51fa\u6bcf\u5929\u7684\u5b9e\u9645\u9700\u8981\uff0c\u5c06\u5176\u4e0eRE\u6570\u7ec4\u6bd4\u8f83\u5c31\u53ef\u4ee5\u5f97\u51fa\u662f\u5426\u7b26\u5408\uff1b\n\n\tNoName\u6570\u7ec4\u5b58\u50a8\u7684\u662f\u4e0e\u524d\u4e00\u5929\u7684\u5dee\u503c\uff0c\u6240\u4ee5need[i]=need[i-1]+NoName[i]\u5c31\u662f\u6bcf\u5929\u7684\u9700\u8981\uff1b\n\n|need[1]  | need[2] |need[3]  |need[4]  |need[5]\n| -----------: | -----------: | -----------: | -----------: | -----------:|\n|2|  9|9  | 7 | 0|\n\n\t\u63a5\u7740\u5c31\u662f\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u2014\u2014\u2014\u2014\u4e8c\u5206\n\t\u5df2\u77e5\uff1a\u4e8c\u5206\u6240\u9700\u7684\u6761\u4ef6\u4e3a\u76ee\u6807\u662f\u4e00\u6bb5\u5177\u6709\u5355\u8c03\u6027\u7684\u5e8f\u5217\n    \n\t\u601d\u8def\uff1a\u6211\u4eec\u9700\u8981\u627e\u5230\u8fd9\u4e00\u5e8f\u5217\u5177\u6709\u7684\u5355\u8c03\u6027\u662f\u4ec0\u4e48\n    \n\t\u7a81\u7834\u53e3\uff1a\u5982\u679c\u5728\u5206\u914d\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e00\u4efd\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\uff0c\u5219\u9700\u8981\u505c\u6b62\u6559\u5ba4\u7684\u5206\u914d\uff0c\u901a\u77e5\u5f53\u524d\u7533\u8bf7\u4eba\u4fee\u6539\u8ba2\u5355\u3002\n\t\u90a3\u4e48\u7ed3\u679c\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u5982\u679c\u6709\u4e00\u4efddd\u4e0d\u7b26\u5408\uff0c\u90a3\u4e48\u540e\u9762\u7684dd\u90fd\u4e0d\u7b26\u5408\uff0c\u5982\u4e0b\u8868\n  \n|\u7b2c\u4e00\u4efddd|\u7b2c\u4e8c\u4efddd|\u7b2c\u4e09\u4efddd|\n| -----------: | -----------: | -----------: |\n|TRUE|FALSE|FALSE|\n\n\t\u7136\u540e\uff0c\uff0c\u795d\u4f60\u4eec\u4e8c\u5206\u6109\u5feb\n\t\u8fd9\u91cc\u8d34\u4e00\u4e0b\u4ee3\u7801 ~~\u6211\u8bf4\u6211\u7528\u7684\u662f\u4e2d\u6587\u9017\u53f7\u4f60\u4fe1\u5417~~\n```\n#include<bits/stdc++.h>\n#define huaji int\nusing namespace std;\nconst int MAXN = 1000011;\nstruct information\n{\n\tint start\uff0c end\uff0c number\uff1b\n}p1083 [MAXN]\uff1b\nhuaji n\uff0c m\uff1b\nhuaji NoName [1000011]\uff0c NEED [1000011]\uff0c RE [1000011]\uff1b\nbool f (huaji x)\n{\n\tmemset (NoName, 0, sizeof (NoName));\n\tfor (huaji i = 1\uff1b i <= x\uff1b i++)\n\t{\n\t\tNoName [p1083 [i].start] += p1083 [i].number\uff1b\n\t\tNoName [p1083 [i].end + 1] -= p1083 [i].number\uff1b\n\t}\n\tfor (huaji i = 1\uff1b i <= n\uff1b i++)\n\t{\n\t\tNEED [i] = NEED [i - 1] + NoName [i]\uff1b\n\t\tif (NEED [i] > RE [i])\n\t\t\treturn 0\uff1b\n\t}\n\treturn 1\uff1b\n}\nint main \uff08 \uff09\n{\n\tscanf (\"%d%d\", &n, &m)\uff1b\n\tfor (huaji i = 1; i <= n; i++)scanf (\"%d\", &RE [i])\uff1b\n\tfor (huaji i = 1; i <= m; i++)scanf (\"%d%d%d\", &p1083 [i].number, &p1083 [i].start, &p1083 [i].end)\uff1b\n\thuaji Left = 1, Right = m, Mid\uff1b\n\tif (f (m))\n\t{\n\t\tprintf (\"0\")\uff1b//\u4e0d\u4e60\u60ef\u538b\u884c\uff0c\u8bf7\u591a\u5305\u5bb9\n\t\treturn 0;\n\t}\n\twhile (Left < Right)\n\t{\n\t\tMid = (Left + Right) >> 1;\n\t\tif (f (Mid))\n\t\t\tLeft = Mid + 1\uff1b\n\t\telse\n\t\t\tRight = Mid\uff1b\n\t}\n\tprintf (\"-1\\n%d\", Left)\uff1b\n\treturn 0\uff1b\n}\n```\n\t\u4e0d\u5efa\u8bae\u6284\u88ad\n\t\u56e0\u4e3a\u6211\u771f\u7684\u6362\u4e86\u7b26\u53f7\uff08\u6e9c\u4e86\u6e9c\u4e86",
        "postTime": 1565936967,
        "uid": 205014,
        "name": "ProjectRed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u5728\u5927\u5b66\u671f\u95f4\uff0c\u7ecf\u5e38\u9700\u8981\u79df\u501f\u6559\u5ba4\u3002\u5927\u5230\u9662\u7cfb\u4e3e\u529e\u6d3b\u52a8\uff0c\u5c0f\u5230\u5b66\u4e60\u5c0f\u7ec4\u81ea\u4e60\u8ba8\u8bba\uff0c\u90fd\u9700\u8981\u5411\u5b66\u6821\u7533\u8bf7\u501f\u6559\u5ba4\u3002\u6559\u5ba4\u7684\u5927\u5c0f\u529f\u80fd\u4e0d\u540c\uff0c\u501f\u6559\u5ba4\u4eba\u7684\u8eab\u4efd\u4e0d\u540c\uff0c\u501f\u6559\u5ba4\u7684\u624b\u7eed\u4e5f\u4e0d\u4e00\u6837\u3002\n\n\u9762\u5bf9\u6d77\u91cf\u79df\u501f\u6559\u5ba4\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u81ea\u7136\u5e0c\u671b\u7f16\u7a0b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u9700\u8981\u5904\u7406\u63a5\u4e0b\u6765$n$\u5929\u7684\u501f\u6559\u5ba4\u4fe1\u606f\uff0c\u5176\u4e2d\u7b2c$i$\u5929\u5b66\u6821\u6709$r_i$\u4e2a\u6559\u5ba4\u53ef\u4f9b\u79df\u501f\u3002\u5171\u6709$m$\u4efd\u8ba2\u5355\uff0c\u6bcf\u4efd\u8ba2\u5355\u7528\u4e09\u4e2a\u6b63\u6574\u6570\u63cf\u8ff0\uff0c\u5206\u522b\u4e3a$d_j$\u3001$s_j$\u548c$t_j$\uff0c\u8868\u793a\u79df\u501f\u8005\u9700\u8981\u4ece\u7b2c$s_j$\u5929\u5230\u7b2c$t_j$\u5929\u79df\u501f\u6559\u5ba4\uff08\u5305\u62ec\u7b2c$s_j$\u5929\u548c\u7b2c$t_j$\u5929\uff09\uff0c\u6bcf\u5929\u9700\u8981\u79df\u501f$d_j$\u4e2a\u6559\u5ba4\u3002\n\n\u6211\u4eec\u5047\u5b9a\uff0c\u79df\u501f\u8005\u5bf9\u6559\u5ba4\u7684\u5927\u5c0f\u3001\u5730\u70b9\u6ca1\u6709\u8981\u6c42\u3002\u5373\u5bf9\u4e8e\u6bcf\u4efd\u8ba2\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u5929\u63d0\n\n\u4f9b$d_j$\u4e2a\u6559\u5ba4\uff0c\u800c\u5b83\u4eec\u5177\u4f53\u662f\u54ea\u4e9b\u6559\u5ba4\uff0c\u6bcf\u5929\u662f\u5426\u662f\u76f8\u540c\u7684\u6559\u5ba4\u5219\u4e0d\u7528\u8003\u8651\u3002\n\n\u501f\u6559\u5ba4\u7684\u539f\u5219\u662f\u5148\u5230\u5148\u5f97\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u6309\u7167\u8ba2\u5355\u7684\u5148\u540e\u987a\u5e8f\u4f9d\u6b21\u4e3a\u6bcf\u4efd\u8ba2\u5355\u5206\u914d\u6559\u5ba4\u3002\u5982\u679c\u5728\u5206\u914d\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e00\u4efd\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\uff0c\u5219\u9700\u8981\u505c\u6b62\u6559\u5ba4\u7684\u5206\u914d\uff0c\u901a\u77e5\u5f53\u524d\u7533\u8bf7\u4eba\u4fee\u6539\u8ba2\u5355\u3002\u8fd9\u91cc\u7684\u65e0\u6cd5\u6ee1\u8db3\u6307\u4ece\u7b2c$s_j$\u5929\u5230\u7b2c$t_j$\u5929\u4e2d\u6709\u81f3\u5c11\u4e00\u5929\u5269\u4f59\u7684\u6559\u5ba4\u6570\u91cf\u4e0d\u8db3$d_j$\u4e2a\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u662f\u5426\u4f1a\u6709\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\u3002\u5982\u679c\u6709\uff0c\u9700\u8981\u901a\u77e5\u54ea\u4e00\u4e2a\u7533\u8bf7\u4eba\u4fee\u6539\u8ba2\u5355\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570$n,m$\uff0c\u8868\u793a\u5929\u6570\u548c\u8ba2\u5355\u7684\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u542b$n$\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u4e2d\u7b2c$i$\u4e2a\u6570\u4e3a$r_i$\uff0c\u8868\u793a\u7b2c$i$\u5929\u53ef\u7528\u4e8e\u79df\u501f\u7684\u6559\u5ba4\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765\u6709$m$\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570$d_j$\u3001$s_j$\u548c$t_j$\uff0c\u8868\u793a\u79df\u501f\u7684\u6570\u91cf\uff0c\u79df\u501f\u5f00\u59cb\u3001\u7ed3\u675f\u5206\u522b\u5728\u7b2c\u51e0\u5929\u3002\n\n\u6bcf\u884c\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\u5747\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5929\u6570\u4e0e\u8ba2\u5355\u5747\u7528\u4ece$1$\u5f00\u59cb\u7684\u6574\u6570\u7f16\u53f7\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u5982\u679c\u6240\u6709\u8ba2\u5355\u5747\u53ef\u6ee1\u8db3\uff0c\u5219\u8f93\u51fa\u53ea\u6709\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570$0$\u3002\u5426\u5219\uff08\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\uff09\u8f93\u51fa\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u8d1f\u6574\u6570$-1$\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u9700\u8981\u4fee\u6539\u8ba2\u5355\u7684\u7533\u8bf7\u4eba\u7f16\u53f7\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n```\n4 3 \n2 5 4 3 \n2 1 3 \n3 2 4 \n4 2 4\n```\n\n- \u8f93\u51fa\u6837\u4f8b\n```\n-1 \n2\n```\n\n$45$\u5206\u601d\u8def\uff1a\n\n\u9996\u5148\u5148\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u5982\u679c\u6211\u4eec\u7528$cr[i]$\u6765\u8868\u793a\u7b2c$i$\u5929\u8fd8\u6ca1\u6709\u88ab\u9884\u5b9a\u7684\u6559\u5ba4\u7684\u6570\u91cf\u7684\u8bdd\u3002\u90a3\u4e48\u5c31\u4ece\u8d77\u59cb\u65e5\u671f\u5230\u7ed3\u675f\u65e5\u671f\u53bb\u5c06$cy[i]$\u51cf\u53bb\u8981\u501f\u8d70\u7684\u6559\u5ba4\u7684\u6570\u91cf\uff08$i$\u5728\u533a\u95f4$[x,y]$\u5185\uff0c\u4e14$x \\leq y$\uff09\u3002\u5f53$cr[i]$\u4e3a\u8d1f\u6570\u65f6\u5c31\u8bf4\u660e\u7b2c$i$\u4e2a\u8bf7\u6c42\u4e0d\u80fd\u591f\u8fbe\u6210\u3002\u90a3\u4e48\u5c31\u8f93\u51fa$-1$\uff0c\u5e76\u6362\u884c\u8f93\u51fa\u90a3\u4e2a\u8bf7\u6c42\u7684\u7f16\u53f7\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$\u3002\n\n$100$\u5206\uff08\u6ee1\u5206\uff09\u601d\u8def\uff1a\n\n1. \u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5b8c\u6210\u672c\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u4e2a\u6570\u7684\u548c\u3002\u5f53\u63a5\u6536\u5230\u8ba2\u5355\u65f6\u5c31\u5c06\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9$\\in [x,y]$\u5185\u7684\u533a\u95f4\u7684\u548c\u51cf\u53bb$d$\uff08$d$\u8868\u793a\u7684\u662f\u79df\u501f\u7684\u6570\u91cf\uff0c$x$\u548c$y$\u8868\u793a\u7684\u662f\u79df\u501f\u5f00\u59cb\u7684\u65f6\u95f4\u4ee5\u53ca\u7ed3\u675f\u7684\u65f6\u95f4\uff09\uff0c\u5f53\u67d0\u4e00\u533a\u95f4\u5185\u7684\u548c\u5c0f\u4e8e$0$\u65f6\u8868\u793a\u8fd9\u4e2a\u8bf7\u6c42\u4e0d\u80fd\u591f\u8fbe\u6210\u3002\u90a3\u4e48\u5c31\u8f93\u51fa$-1$\uff0c\u5e76\u6362\u884c\u8f93\u51fa\u90a3\u4e2a\u8bf7\u6c42\u7684\u7f16\u53f7\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m$ $log_2$ $n)$\u3002\u4ee3\u7801\u5c31\u4e0d\u7ed9\u4e86~~\uff0c\u5176\u5b9e\u662f\u6211\u6ca1\u5199~~\u3002\n\n2. \u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e8c\u5206\u7684\u601d\u60f3\u6765\u505a\u8fd9\u9053\u9898\u76ee\u3002\u5148\u628a\u6240\u6709\u7684\u8ba2\u5355\u8bfb\u8fdb\u6765\uff0c\u518d\u4e8c\u5206\u8ba2\u5355\u7684\u7f16\u53f7\u5373\u53ef\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n$ $log_2$ $n)$\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86\u524d\u7f00\u548c\u4f18\u5316\u4ee5\u53ca\u5dee\u5206\u7684\u601d\u60f3\u3002\u4e0b\u9762\u5c06\u7ed9\u51fa\u89e3\u91ca\u3002\n\n> \u6211\u4eec\u6709\u4e00\u7ec4\u6570\uff08\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u5343\u4e07\uff09\uff0c\u5e76\u4e14\u6709\u4e00\u5927\u5806\u8be2\u95ee\u2014\u2014\u7ed9\u5b9a\u533a\u95f4$l$\u3001$r$,\u6c42$l$\u3001$r$\u4e4b\u95f4\u6240\u6709\u6570\u4e4b\u548c\uff08\u8be2\u95ee\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e00\u5343\u4e07\uff09\n\n> \u6b64\u5904\u66b4\u529b\u80af\u5b9a\u4e0d\u884c\u554a\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u89c2\u5bdf\u524d\u7f00\u548c\u662f\u600e\u4e48\u505a\u7684\uff1a\u7528$sum[i]$\u6765\u5b58\u50a8\u524d$i$\u4e2a\u6570\u7684\u548c\uff0c\u7136\u540e\u7528$sum[r]-sum[l-1]$\u6765\u8868\u793a$l~r$\u4e4b\u95f4\u6240\u6709\u6570\u7684\u548c\u3002\uff08$l-1$\u539f\u56e0\u662f$l~r$\u53ea\u770b\u8981\u5305\u542b$l$\uff09\u800c$sum$\u6570\u7ec4\u4fbf\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u9012\u63a8\u6c42\u51fa\u6765\u3002\n\n> \u4ee3\u7801\u6838\u5fc3\uff1a\n\n```\nfor(int i=1;i<=n;i++)\n{\n    cin>>a[i];sum[i]=sum[i-1]+a[i];\n}\nfor(int i=1;i<=q;i++)\n{\n    cin>>l>>r;cout<<sum[r]-sum[l-1]<<\" \";\n}\n```\n\n> \u800c\u6240\u8c13\u7684\u5dee\u5206\u6570\u7ec4\uff0c\u5373\u662f\u524d\u7f00\u548c\u6570\u7ec4\u7684\u9006\u8fd0\u7b97\uff1a\n\n> \u6211\u4eec\u7ed9\u5b9a\u524di\u4e2a\u6570\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u5dee\uff08$1 \\leq i \\leq n$\uff09,\u6c42\u6bcf\u4e00\u9879$a[i]$\uff08$1 \\leq i \\leq n$\uff09\u3002\n\n> \u6b64\u65f6\u65e0\u975e\u5c31\u662f\u7528\u4f5c\u5dee\u7684\u65b9\u5f0f\u6c42\u5f97\u6bcf\u4e00\u9879\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u4f5c\u5dee\u6570\u7ec4$diff$\uff0c$diff[i]$\u7528\u4e8e\u8bb0\u5f55$a[i]-a[i-1]$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u9879$a[i]$\uff0c\u6211\u4eec\u53ef\u4ee5\u9012\u63a8\u51fa\u6765\uff1a\n\n```\nfor(int i=1;i<=n;i++)\n{\n    cin>>diff[i];a[i]=diff[i]+a[i-1];\n}\nfor(int i=1;i<=n;i++)\n{\n    cout<<a[i];\n}\n```\n\n> \u5230\u8fd9\u513f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u524d\u7f00\u548c\u662f\u7528\u5143\u6570\u636e\u6c42\u5143\u4e0e\u5143\u4e4b\u95f4\u7684\u5e76\u96c6\u5173\u7cfb\uff0c\u800c\u5dee\u5206\u5219\u662f\u6839\u636e\u5143\u4e0e\u5143\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u6c42\u539f\u6570\u636e\uff0c\u662f\u4e92\u9006\u601d\u60f3\uff08qwq\u4f46\u662f\u6709\u65f6\u539f\u6570\u636e\u548c\u5173\u7cfb\u6570\u636e\u4e0d\u662f\u5f88\u597d\u8fa8\u522b\u6216\u8005\u4ea7\u751f\u89d2\u8272\u53cd\u6f14\u554a\uff09\u3002\n\n\u4e0a\u6587\u7684\u5f15\u7528\u90e8\u5206\u6458\u81ea[@_pks\u7684\u535a\u5ba2](https://pks-loving.blog.luogu.org/)\uff0c\u9009\u5165\u65f6\u6709\u5220\u6539\u3002\n\n$45$\u5206\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\nint cr[1000001];\nint main()\n{\n\tint n=0,m=0;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&cr[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint d=0,x=0,y=0;\n\t\tscanf(\"%d %d %d\",&d,&x,&y);\n\t\tfor(int j=x;j<=y;j++)\n\t\t{\n\t\t\tcr[j]-=d;\n\t\t\tif(cr[j]<0)\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tprintf(\"%d\",i);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"0\");\n\treturn 0;\n}\n```\n\n$100$\u5206\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\nint xy[1000001],ly[1000001],qz[1000001];\nint x[1000001],y[1000001],d[1000001];\nint n=0,m=0;\nbool check(int k)\n{\n\tmemset(qz,0,sizeof(qz));\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tqz[x[i]]+=d[i];\n\t\tqz[y[i]+1]-=d[i];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\txy[i]=xy[i-1]+qz[i];\n\t\tif(xy[i]>ly[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&ly[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&d[i],&x[i],&y[i]);\n\t}\n\tint l=1,r=m;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\tif(check(mid)==true)\n\t\t{\n\t\t\tl=mid+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr=mid;\n\t\t}\n\t}\n\tif(l==m)\n\t{\n\t\tprintf(\"0\");\n\t}\n\telse\n\t{\n\t\tprintf(\"-1\\n\");\n\t\tprintf(\"%d\",l);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1518149346,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010[NOIP2012]\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "## \u3010\u975e\u6b63\u89e3\u3011\u6765\u4e00\u53d1\u666e\u901a\uff08\u6c42\u548c\uff09\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206+\u7384\u5b66\u4f18\u5316\u7684\u9898\u89e3qwq\n\n\u9996\u5148\u8fd9\u9898\u662f\u4e2a\u666e\u901a\u7684\u5dee\u5206+\u524d\u7f00\u548c\u677f\u5b50\uff0c\u6b63\u89e3\u84dd\u9898\u6709\u4e9b\u9ad8\u3002~~\u4f46\u7531\u4e8e\u6211\u95f2\u7684\u86cb\u75bc~~\uff0c\u4e8e\u662f\u6253\u4e86\u4e00\u4e2a\u59a5\u59a5TLE\u7684\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\uff0c\u7136\u540e\u4e00\u901a\u4f18\u5316\uff0c\u8fc7\u4e86\u2026\u2026\n\n### \u6811\u72b6\u6570\u7ec4 \u533a\u95f4\u4fee\u6539+\u5355\u70b9\u67e5\u8be2\u7684\u57fa\u7840\u9898\u3010[\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3368)\u3011\u3010[\u8f6c\u4e00\u7bc7Chanis dalao\u7684\u6d1b\u8c37\u65e5\u62a5](https://www.luogu.org/blog/Chanis/super-BIT)\u3011\n\n***\n## \u6b65\u5165\u6b63\u9898\uff1a\n### \u51c6\u5907\u5de5\u4f5c:\n\u7528\u56db\u4e2a\u6570\u7ec4\uff08\u5f00\u5230$10^6$\uff09\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u6811\u72b6\u6570\u7ec4\uff0c\u5176\u4ed6\u4e09\u4e2a\u5206\u522b\u5b58\u50a8\u6bcf\u4e2a\u8ba2\u5355\u7684\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u3001\u9700\u8981\u7684\u6559\u5ba4\u6570\u3002\n\n\u8f93\u5165\u53ef\u7528\u6559\u5ba4\u65f6\uff0c\u53ea\u9700\u6267\u884c\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u76f8\u540c\u7684\u533a\u95f4\u4fee\u6539\uff0c\u5373\u53ef\u5b9e\u73b0\u5355\u70b9\u4fee\u6539\u3002\u8fd9\u4e9b\u90fd\u6682\u65f6\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4`c`\u4e2d\u3002\n\n### \u5148\u770b\u83b7\u5f97\u7b54\u6848\u7684\u65b9\u6cd5\uff1a\u4e8c\u5206\n\u5148\u5206\u6790\u9898\u610f\uff1a\u9898\u76ee\u4e2d\u6709\u4e00\u53e5\u8fd9\u6837\u7684\u8bdd\uff1a\n\n`\u501f\u6559\u5ba4\u7684\u539f\u5219\u662f\u5148\u5230\u5148\u5f97\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u6309\u7167\u8ba2\u5355\u7684\u5148\u540e\u987a\u5e8f\u4f9d\u6b21\u4e3a\u6bcf\u4efd\u8ba2\u5355\u5206\u914d\u6559\u5ba4\u3002\u5982\u679c\u5728\u5206\u914d\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e00\u4efd\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\uff0c\u5219\u9700\u8981\u505c\u6b62\u6559\u5ba4\u7684\u5206\u914d\uff0c\u901a\u77e5\u5f53\u524d\u7533\u8bf7\u4eba\u4fee\u6539\u8ba2\u5355\u3002`\n\n\u6ce8\u610f\uff1a**\u5148\u5230\u5148\u5f97**\n\n\u60f3\u5230\u4e86\u4ec0\u4e48\u6ca1\u6709\uff1f\n\n\u5982\u679c\u4f60\u60f3\u5230\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u7b49\u91cf\u5173\u7cfb\u2014\u2014**\u4e0d\u80fd\u6ee1\u8db3\u7684\u8ba2\u5355\u4e4b\u524d\u7684\u8ba2\u5355\u603b\u6570**`\u7b49\u4e8e`\u4e0d\u80fd\u6ee1\u8db3\u7684\u8ba2\u5355\u6807\u53f7-1\uff0c\u90a3\u4e48\u4f60\u5c31\u8de8\u51fa\u4e86\u7b2c\u4e00\u6b65\u3002\n\n\u63a5\u7740\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u6cd5\u627e\u6700\u5c0f\u7684\u603b\u6570\uff08\u5373\u4e0a\u9762\u7684\u7c97\u4f53\u90e8\u5206\uff09\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\u5982\u679c\u8be5\u603b\u6570\u6ee1\u8db3\uff0c\u5219\u6269\u5927\u603b\u6570\u7684\u503c\u5c1d\u8bd5\uff1b\u5426\u5219\u7f29\u5c0f\u8303\u56f4\u5c1d\u8bd5\u3002\u6ce8\u610f\u67e5\u627e\u65f6$R$\u4ece$m+1$\u5f00\u59cb\u3002\n\n\u53e6\u5916\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528\u5faa\u73af\u65f6$L\u2264R$\u7684\u505a\u6cd5\uff0c\u7531\u4e8e\u6700\u540e\u7684$L$\u4f1a\u7b49\u4e8e$Mid+1$\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa\\$L$\u5373\u53ef\u3002\n\n#### \u4e8c\u5206\u590d\u6742\u5ea6$O(\\log m\u00d7?)$\uff0c\u5176\u4e2d$?$\u662f\u5224\u65ad\u662f\u5426\u5408\u6cd5\u7684\u590d\u6742\u5ea6\u3002\n\n### \u518d\u770b\u5224\u65ad\u65b9\u6cd5\uff1a\u6811\u72b6\u6570\u7ec4\uff08\u533a\u95f4\u4fee\u6539+\u5355\u70b9\u67e5\u8be2\uff09\n#### ~~\u5404\u4f4d\u7528\u6811\u72b6\u6570\u7ec4RMQ\u7684dalao\u8f7b\u55b7~~\n\u9996\u5148\u4e00\u770b\u6570\u636e\u8303\u56f4$n,m\u226410^6$\uff0c\u653e\u5f03\u66b4\u529b\u679a\u4e3e\u3002\u7136\u540e\u8003\u8651\u5dee\u5206+\u524d\u7f00\u548c\u505a\u6cd5\u3002\u5dee\u5206+\u524d\u7f00\u548c\u59a5\u59a5\u7684$O(n)$\u80fd\u8fc7\uff0c\u4f46\u6811\u72b6\u6570\u7ec4\u5462\uff1f$O(n\\log n)$\uff0c\u6709\u70b9\u60ac\uff0c\u4f46\u8fd8\u662f\u53ef\u4ee5~~\u82df\u5ef6\u6b8b\u5598~~\u5c1d\u8bd5\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5224\u65ad\u51fd\u6570\u7684\u4ee3\u7801\uff1a\n```cpp\nint chk(int x){//O(nlogn)\n    memcpy(t,c,(n+1)*sizeof(int));//\u8fd9\u91cc\u662f\u62f7\u8d1d\u4e00\u4efd\u4e4b\u524d\u505a\u597d\u7684c\u6570\u7ec4\u91cd\u590d\u8ba1\u7b97\u521d\u59cb\u6570\u7ec4\n    for(int i=1;i<=x;++i)\n        update(t,l[i],r[i],-room[i]);//\u533a\u95f4\u51cf\n    for(int i=1;i<=n;++i)\n        if(query(t,i)<0)return 0;//\u4e0d\u6ee1\u8db3\uff0c\u8fd4\u56de0\n    return 1;\n}\n```\n\n\u5148\u524d\u4e8c\u5206\u5df2\u7ecf\u63a8\u51fa\u4e86\u6240\u8981\u6c42\u7684\u603b\u6570\uff0c\u63a5\u4e0b\u6765\u4fbf\u662f\u6811\u72b6\u6570\u7ec4\u4e00\u901a\u4e71\u641e\u5566\u3002\u628a\u6bcf\u4e2a\u603b\u6570\u4e4b\u5185\u7684\u8ba2\u5355\u90fd\u8003\u8651\u4e0a\uff0c\u7136\u540e`for`\u4e00\u904d\u770b\u6709\u6ca1\u6709\u4e0d\u6ee1\u8db3\u7684\u8ba2\u5355\uff08\u5373`query(pos)<0`\uff09,\u518d\u6839\u636e\u4ee5\u4e0a\u65b9\u6cd5\u8c03\u6574\u8303\u56f4\u5373\u53ef\u3002\n\n\u5982\u679c\u4f60\u6811\u72b6\u6570\u7ec4\u548c\u4e8c\u5206\u7b49\u6210\u5206\u90fd\u6ca1\u6709\u5199\u9519\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff1a**80\u5206**\u3002\n\n\u73b0\u5728\u4e0d\u5fc5\u8d28\u7591\u8fd9\u4e2a\u7b97\u6cd5\u7684~~\u7384\u5b66\u6027~~\u6b63\u786e\u6027\uff0c\u53ea\u9700\u4e00\u70b9\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u5c31\u80fd\u5b8c\u7f8e\u7684\u5361\u8fdb\u65f6\u9650\u3002\n\n### \u4f18\u5316\u65b9\u6cd5\uff1a\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u5728\u4e8c\u5206\u8c03\u6574\u8303\u56f4\u65f6\uff0c\u6709\u4e00\u4e9b\u8ba2\u5355\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4e8c\u5206\u5faa\u73af\u4f53\u91cc\u9762\u76f4\u63a5\u5fae\u8c03\u7a7a\u95f2\u6559\u5ba4\u6570\uff0c\u6b64\u65f6`chk`\u51fd\u6570\u53ea\u9700\u5224\u65ad\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\u505a\u6cd5\u662f\uff1a\u5982\u679c\u8303\u56f4\u7f29\u5c0f\uff0c\u5219\u628a\u4e4b\u524d\u591a\u8ba1\u7b97\u7684\u8ba2\u5355\u6240\u51cf\u53bb\u7684\u6559\u5ba4\u6570\u52a0\u56de\u6765\uff0c\u53cd\u4e4b\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e0a\u591a\u51cf\u53bb\u9700\u8981\u51cf\u53bb\u7684\u8ba2\u5355\u3002\n\n\u4e3e\u4f8b\uff1a\u5047\u8bbe`chk`\u8fd4\u56de\u4e860\uff0c\u5219\u533a\u95f4\u7f29\u5c0f\uff0c$R$\u53d8\u6210\u4e86\u539f\u6765\u7684\u539f\u6765\u7684$Mid-1$\uff0c$Mid$\u4e5f\u53d8\u6210\u4e86\u539f\u6765\u7684$(L+Mid-1)/2$\uff08\u4e8c\u5206\uff09\u3002\u6b64\u65f6\u53ea\u9700\u5faa\u73af$Mid+1$\uff08\u73b0\u5728\u7684$Mid+1$\uff0c\u5373\u5c06\u505a`chk`\u7684\u4e0b\u4e00\u4e2a\u6570\uff09\u5230\u73b0\u5728\u7684$R+1$\uff0c\u518d\u628a\u4e4b\u524d\u8ba1\u7b97\u7684\u8ba2\u5355\u52a0\u56de\u6765\u5373\u53ef\u3002\n\n\u5047\u8bbe`chk`\u8fd4\u56de\u4e861\uff0c\u5219\u533a\u95f4\u6269\u5927\uff0c$L$\u53d8\u6210\u4e86\u539f\u6765\u7684\u539f\u6765\u7684$Mid+1$\uff0c$Mid$\u4e5f\u53d8\u6210\u4e86\u539f\u6765\u7684$(Mid+1+R)/2$\uff08\u4e8c\u5206\uff09\u3002\u6b64\u65f6\u53ea\u9700\u5faa\u73af\u73b0\u5728\u7684$L$\u5230\u73b0\u5728\u7684$Mid$\uff0c\u518d\u8ba1\u7b97\u8ba2\u5355\u5373\u53ef\u3002\n\n#### ~~\u539f\u8c05\u6211\u6c34\u4e86\u8fd9\u4e48\u591a\u5b57~~\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u5728\u8c03\u6574\u533a\u95f4\u65f6\uff0c\u6811\u72b6\u6570\u7ec4\u7684`update`\u64cd\u4f5c\u6700\u591a\u88ab\u6267\u884c$O(n)$\u6b21\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4ece$O(n\\log n+(n\\log n+n\\log m)\\log m)$\u4f18\u5316\u5230$O(n\\log n+n\\log n\u00d7\\log m)$\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5e38\u6570\u7684\u4f18\u5316\uff09\uff0c\u5b8c\u7f8e\u5361\u8fdb\u65f6\u9650\u3002\n\n### \u6700\u540e\u8d34\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint t[1000010],l[1000010],r[1000010],room[1000010],n,m;\ninline int lowbit(int x){\n\treturn x&-x;\n}\nvoid add(int x,int k){\n\tfor(int i=x;i<=n;i+=lowbit(i))t[i]+=k;\n}\nvoid update(int x,int y,int k){\n\tadd(x,k);\n\tadd(y+1,-k);\n}\nint query(int x){\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))res+=t[i];\n\treturn res;\n}\n#define isdigit(x) ((x)>='0'&&(x)<='9')\n#define gc(c) c=getchar()\ninline int read(){\n    int res=0;\n    char c;\n    gc(c);\n    while(!isdigit(c))gc(c);\n    while(isdigit(c))res=(res<<1)+(res<<3)+c-48,gc(c);\n    return res;\n}\nint chk(int x){//O(nlogn)\n\tfor(int i=1;i<=n;++i)\n\t\tif(query(i)<0)return 0;\n\treturn 1;\n}\nint main(){\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=n;++i){\n\t\tint xx=read();\n\t\tupdate(i,i,xx);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\troom[i]=read();\n\t\tl[i]=read();\n\t\tr[i]=read();\n\t}\n\tint L=1,R=m+1,Mid=(L+R)>>1;\n\tfor(int i=1;i<=Mid;++i)update(l[i],r[i],-room[i]);\n\twhile(L<=R){//O(logm)\n\t\tif(chk(Mid)){\n\t\t\tL=Mid+1;\n\t\t\tMid=(L+R)>>1;\n\t\t\tfor(int i=L;i<=Mid;++i){\n\t\t\t\tif(Mid<=m)update(l[i],r[i],-room[i]);//\u4e0d\u52a0if\u6b7b\u5faa\u73af\uff08\u4e0d\u8981\u5728\u610fif\u5728\u5faa\u73af\u5185\u90e8\uff09\n                //\u5982\u679cMid>m\u4e86\uff0cL\u4e5f\u4f1a\u8d85\u51fa\uff0c\u6240\u4ee5\u5199\u6cd5\u6b63\u786e\uff0c\u6682\u65f6\u627e\u4e0d\u5230hack\u6570\u636e\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\telse{\n\t\t\tR=Mid-1;\n\t\t\tMid=(L+R)>>1;\n\t\t\tfor(int i=Mid+1;i<=R+1;++i)\n\t\t\t\tupdate(l[i],r[i],room[i]);\n\t\t}\n\t}\n\tif(L>=m)printf(\"0\");\n\telse {\n\t\tprintf(\"-1\\n\");\n\t\tprintf(\"%d\",L);\n\t} \n\treturn 0;\n}\n```\n#### \u9e23\u8c22\uff1a[\u91ce\u5fc3qwq](https://www.luogu.org/space/show?uid=96968)\u5e2e\u6211\u627e\u51fa\u4e86\u67d0\u4e2a\u70b9\u6b7b\u5faa\u73af\u7684\u9519\u8bef \u4ee5\u53ca\u6559\u7ec3\u5bf9\u672c\u9898\u7b97\u6cd5\u7684\u8981\u6c42\uff08\u6811\u72b6\u6570\u7ec4\uff09",
        "postTime": 1540465975,
        "uid": 73574,
        "name": "WAMonster",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4e00\u9898\u7b80\u5355\u7684\u7ebf\u6bb5\u6811(\u4f46\u5728\u8fd9\u9898\u770b\u6765\u4f3c\u4e4e\u662f\u4e00\u79cd\u7384\u5b66\u7b97\u6cd5)\n\n\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u652f\u6301\u533a\u95f4\u4fee\u6539\u5373\u53ef\n\n\u53ea\u8981\u6574\u4e2a\u533a\u95f4\u4e2d\u6709<0\u7684\u5c31\u4e0d\u884c,\u5373\u6559\u5ba4\u4e0d\u591f\u4e86.\u8f93\u51fa\u5f53\u524d\u7684\u8ba2\u5355\u53f7\u5c31\u884c.\n\nCode:\n```\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#include <iostream>\n#define MAXN 10000010  \n#define inf 0x3f3f3f3f  \n  \nusing namespace std;  \n  \nstruct node{  \n    int l,r;\n    int add;\n    int mn;  \n}tree[MAXN<<2]; \n  \nvoid pushup(int index){    \n    tree[index].mn = min(tree[index<<1].mn,tree[index<<1|1].mn);  \n}  \nvoid pushdown(int index){  \n    if(tree[index].add){   \n        tree[index<<1].mn += tree[index].add;  \n        tree[index<<1|1].mn += tree[index].add;  \n        tree[index<<1].add += tree[index].add;  \n        tree[index<<1|1].add += tree[index].add;  \n        tree[index].add = 0;  \n  \n    }  \n}  \nvoid build(int l,int r,int index){  \n    tree[index].l = l;  \n    tree[index].r = r;  \n    tree[index].add = 0;\n    if(l == r){  \n        scanf(\"%d\",&tree[index].mn);\n        return ;  \n    }  \n    int mid = (l+r)>>1;  \n    build(l,mid,index<<1);  \n    build(mid+1,r,index<<1|1);  \n    pushup(index);  \n}  \nvoid updata(int l,int r,int index,int val){  \n    if(l <= tree[index].l && r >= tree[index].r){  \n        tree[index].mn += val;   \n        tree[index].add += val;\n  \n        return ;  \n    }  \n    pushdown(index);  \n    int mid = (tree[index].l+tree[index].r)>>1;  \n    if(l <= mid){  \n        updata(l,r,index<<1,val);  \n    }  \n    if(r > mid){  \n        updata(l,r,index<<1|1,val);  \n    }  \n    pushup(index);  \n}  \nint main()  \n{  \n    int n,m,x,y,z; \n\tscanf(\"%d%d\",&n,&m);\n    build(1,n,1);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&z,&x,&y);\n\t\tupdata(x,y,1,-z);\n\t\tif(tree[1].mn<0){\n\t\t\tcout<<\"-1\"<<endl<<i<<endl;\n\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t}\n\tcout<<\"0\"<<endl;\n    return 0;  \n}\n```\n",
        "postTime": 1536246962,
        "uid": 31021,
        "name": "Limerick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u989d....\u7ebf\u6bb5\u6811\u9898\u89e3\u6709\u51e0\u7bc7\u4e86\uff0c\uff0c\u8fd9\u91cc\u9664\u4e86\u4ecb\u7ecd\u4e00\u822c\u601d\u8def\u5916\u8fd8\u63d0\u51e0\u4e2a\u53ef\u4ee5\u7565\u7565\u4f18\u5316\u7ebf\u6bb5\u6811\u7684\u70b9\u3002\n~~\uff08\u5361\u5e38\u7528\uff09\uff08\u9003\uff09~~  \n\u6b63\u89e3\u80af\u5b9a\u662f\u5dee\u5206\u4e86\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u8fc7\u5462\uff1f  \n[2018\u5e74CCF\u5347\u7ea7\u4e86\u8bc4\u6d4bCPU](https://www.zhihu.com/question/301938619)  \n\u6240\u4ee5\u65f6\u4ee3\u5728\u8fdb\u6b65\uff0c\u867d\u7136\u5dee\u5206\u6027\u80fd\u597d\uff0c\u4f46\u662f\u4e5f\u8981\u63a5\u7eb3\u7ebf\u6bb5\u6811\u554a\u3002  \n\u5e9f\u8bdd\u8bf4\u5b8c\u4e86\u8bb2\u9898\u76ee\u3002  \n\n\n------------\n## P1083 \u501f\u6559\u5ba4[NOIP\u63d0\u9ad8\u7ec42012]  \u9898\u89e3  \n#### \u9898\u610f\u7b80\u8ff0\n\u5bf9\u4e8e\u4e00\u4e2a\u957f\u4e3aN\u7684\u7ebf\u6027\u5e8f\u5217(\u5373\u6bcf\u5929\u6709\u591a\u5c11\u4e2a\u6559\u5ba4\u53ef\u7528),\u8fdb\u884cM\u6b21\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4(L,R,k)\u8868\u793a\uff0c\u610f\u4e3a\u533a\u95f4[L,R]\u5185\u7684\u6bcf\u4e2a\u6570\u51cf\u53bbk,\u5f53\u5e8f\u5217\u4e2d\u51fa\u73b0\u8d1f\u6570\u65f6\u7ec8\u6b62\u64cd\u4f5c\u5e76\u8f93\u51fa\u64cd\u4f5c\u7f16\u53f7\u3002  \n#### \u5206\u6790  \nemmm.....\u533a\u95f4\u64cd\u4f5c\uff0c\u800c\u4e14\u8981\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5e8f\u5217\u6700\u5148\u51fa\u73b0\u8d1f\u6570\uff0c\u53ef\u4ee5\u7528\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u6574\u4e2a\u5e8f\u5217\u5185\u7684\u6700\u5c0f\u503c\u7b49\u4e8e\u8d1f\u6570\u5c31\u7acb\u9a6c\u505c\u6b62\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u3002\uff08\u6570\u636e\u7ed3\u6784\u786e\u5b9a\uff09  \n**\u5206\u6790\u7ed3\u679c**\uff1a\u7528\u7ebf\u6bb5\u6811\u4e2d\u7684\u8282\u70b9\u8868\u793a\u8be5\u533a\u95f4\u5185\u7684**\u6700\u5c0f\u503c**\uff0c**\u533a\u95f4\u51cf\u6389**\u5b9a\u503ck\uff0c\u6700\u5c0f\u503c\u51fa\u73b0**\u8d1f\u6570**\u65f6\u505c\u6b62\u64cd\u4f5c\u3002  \n\u8fd8\u6709\u4e0d\u61c2\u7684\u53bb\u4ee3\u7801\u91cc\u9762\u627e\u6211\u3002   \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define mid (L+R>>1)\n//\u52a0\u6cd5\u4f18\u5148\u7ea7\u9ad8\u4e8e\u4f4d\u8fd0\u7b97\u52a0\u62ec\u53f7\u662f\u62c5\u5fc3\u7ffb\u8f66\ninline int Read()//\u8bfb\u5165\u4f18\u5316\n{\n\tint f=1,re;\n\tchar c;\n\twhile((c=getchar())>'9'||c<'0');\n\tre=c-48;\n\twhile((c=getchar())>='0'&&c<='9')\n\tre=re*10+c-48;\n\treturn re;\n}\ninline int min_(const int &x,const int &y)\n{\n\treturn x>y?y:x;\n} \nint TREE[4000007],lazy[4000007];\n//TREE\u5c31\u662f\u7ebf\u6bb5\u6811\u6570\u7ec4\uff0clazy\u662f\u61d2\u4eba\u6807\u8bb0\uff08\u662f\u4e0d\u662f\u5f88\u786c\u6838\uff09\n//lazy[i]\u8868\u793aTREE[i]\u7684\u533a\u95f4\u5185\u9700\u8981\u51cf\u53bb\u7684\u503c\nint N,M;\nint c,s,e;\nint h[1000007];\nbool flag;\ninline void Build(int L,int R,int i)//\u5efa\u7acb\u7ebf\u6bb5\u6811\n{\n\tif(L==R)\n\t{\n\t\tTREE[i]=h[L];\n\t\treturn ;\n\t}\n\tBuild(L,mid,i<<1);\n\tBuild(mid+1,R,i<<1|1);\n\tTREE[i]=min_(TREE[i<<1],TREE[i<<1|1]);\n\treturn ;\n}\ninline void LAZY(int i)//\u61d2\u60f0\u6807\u8bb0\u4e0b\u4f20\n{\n\tif(lazy[i]==0) return ;\n\tlazy[i<<1]+=lazy[i];//\u8bb0\u4f4f\u662f\u52a0\u53f7\uff08\u51cf\u53bb\u7684\u503c\u53e0\u8d77\u6765\uff09\n\tlazy[i<<1|1]+=lazy[i];\n\tTREE[i<<1]-=lazy[i];//\u8868\u793a\u533a\u95f4\u6700\u5c0f\u503c\u76f4\u63a5\u51cf\n\tTREE[i<<1|1]-=lazy[i];\n\tlazy[i]=0;//\u8fd9\u4e94\u53e5\u8bdd\u4e00\u4e2a\u90fd\u4e0d\u80fd\u5c11\uff01\n\treturn ;\n}\ninline void Update(int L,int R,int l,int r,int i,int k)\n{\n\tif(l<=L&&R<=r)\n\t{\n\t\tTREE[i]-=k;\n\t\tlazy[i]+=k;//\u8fd9\u91ccTREE\u548clazy\u540c\u6b65\u66f4\u65b0\u4e0d\u8981\u6389\u4e86\n\t\treturn ;//\u4e0dreturn\u5c31\u4f1a\u65e0\u9650\u9012\u5f52RE\n\t}\n\tLAZY(i);//\u53ea\u8981\u8981\u8bbf\u95ee\u5b50\u8282\u70b9\u5c31\u4e00\u5b9a\u8981\u4e0b\u4f20\u6807\u8bb0\n\tif(l<=mid) Update(L,mid,l,r,i<<1,k);\n\tif(r>mid) Update(mid+1,R,l,r,i<<1|1,k);\n\tTREE[i]=min_(TREE[i<<1],TREE[i<<1|1]);//\u66f4\u65b0\n\treturn ;\n}\nint main()\n{\n\tN=Read();M=Read();\n\tfor(int i=1;i<=N;i++)\n\t\th[i]=Read();\n\tBuild(1,N,1);\n\tfor(int i=1;i<=M;i++)\n\t{\n\t\tc=Read();s=Read();e=Read();\n\t\tUpdate(1,N,s,e,1,c);\n\t\tif(TREE[1]<0)//\u8fd9\u91cc\u4e5f\u662f\u4e2a\u6280\u5de7\u5427\n      //TREE[1]\u8868\u793a\u7684\u5c31\u662f\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u5c0f\u503c\n\t\t{\n\t\t\tprintf(\"-1\\n%d\",i);\n\t\t\treturn 0;//\u76f4\u63a5\u7ec8\u6b62\u7a0b\u5e8f\n\t\t}\n\t}\n\tprintf(\"0\");//\u80fd\u591f\u8fd0\u884c\u5230\u8fd9\u91cc\u8868\u793a\u5168\u90fd\u662f\u53ef\u4ee5\u6ee1\u8db3\u7684\n\treturn 0;\n}\n```\n\u7ebf\u6bb5\u6811\u6548\u7387\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u5730\u65b9\u8fd8\u662f\u8981\u6ce8\u610f\u4e00\u4e0b\uff1a  \n- 1- \u61d2\u60f0\u6807\u8bb0  \n\t\u61d2\u60f0\u6807\u8bb0\u8fd0\u7528\u5728\u533a\u95f4\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u7ebf\u6bb5\u6811\u8bbf\u95ee\u5230\u53f6\u8282\u70b9\u7528\u65f6\u5728\u64cd\u4f5c\u591a\u8d77\u6765\u7684\u65f6\u5019\u4f1a\u79ef\u7d2f\u7684\u5f88\u5927\uff0c\u52a0\u4e0a\u61d2\u60f0\u6807\u8bb0\u53ef\u4ee5\u4e0d\u5230\u53f6\u8282\u70b9\u5c31\u5b8c\u6210\u4fe1\u606f\u66f4\u65b0\u3002\u8fd9\u4e2a\u6280\u5de7\u5728\u533a\u95f4\u7279\u522b\u662f\u5927\u533a\u95f4\u65f6\u4f18\u52bf\u4f1a\u53d8\u5f97\u5f88\u660e\u663e\u3002  \n- 2- \u6807\u8bb0\u4e0b\u4f20  \n\t\u4e0d\u540c\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0d\u540c\u7684\u4fe1\u606f\uff0c\u4e0b\u4f20\u4e5f\u81ea\u7136\u4e0d\u540c\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u88ab\u5f85\u66f4\u65b0\u533a\u95f4\u5b8c\u5168\u5305\u542b\u5c31\u76f4\u63a5\u51cf\u53bb\uff0c\u56e0\u4e3a\u533a\u95f4\u5185\u6240\u6709\u7684\u6570\u5b57\u90fd\u51cf\u53bb\u76f8\u540c\u7684\u503c\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\uff0c\u6700\u5c0f\u503c\u5c31\u7b49\u4e8e\u539f\u6765\u7684\u6700\u5c0f\u503c\u51cf\u53bb\u8fd9\u4e2a\u5b9a\u503c\uff0c\u800c\u5b50\u8282\u70b9\u7684\u61d2\u60f0\u6807\u8bb0\u4e5f\u9700\u8981\u53e0\u52a0\uff08\u4e07\u4e00\u6709\u5b59\u5b50\u5462\uff09\uff0c\u6807\u8bb0\u4e0b\u4f20\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u6613\u9519\u7684\u70b9\uff01\uff01  \n- 3- \u4e00\u4e2a\u5c0f\u5c0f\u7684\u5e38\u6570\u4f18\u5316  \n\t\u5982\u679c\u5728\u66f4\u65b0\u7684\u65f6\u5019\u5927\u91cf\u4f7f\u7528max/min\u51fd\u6570\u5efa\u8bae\u81ea\u5df1\u5199\uff0c\u8fd9\u6837\u4f1a\u63d0\u9ad8\u6548\u7387\uff0c\u53e6\u5916\u8fd9\u6837\u7684\u5c0f\u51fd\u6570\u7528const+\u4f20\u5f15\u7528\u4e5f\u80fd\u52a0\u901f\u4e00\u4e22\u4e22\u3002\uff08\u4eb2\u6d4b\u5c5e\u5b9e\uff09  \n \n\n------------\n\n \u5b9e\u9645\u4e0a\u7ebf\u6bb5\u6811\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u8fd8\u662f\u633a\u5f3a\u7684\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5b66\u4e60\u5176\u4ed6\u7684\u7ebf\u6bb5\u6811\u53d8\u5f62\uff0c\u6bd4\u5982zkw\u7ebf\u6bb5\u6811\u548c\u674e\u8d85\u7ebf\u6bb5\u6811\u7b49\u7b49\uff08\u849f\u84bb\u6211\u4e0d\u4f1a\u7684\u90a3\u4e9b\u7ebf\u6bb5\u6811\uff09\u3002  \n \u9898\u89e3\u4e0d\u6613\uff0c\u6709\u95ee\u9898\u8bf7\u79c1\u4fe1\u6216\u8005\u8bc4\u8bba@\u6211\uff0c\u8c22\u8c22\u5927\u5bb6\u3002",
        "postTime": 1580618770,
        "uid": 215697,
        "name": "LeavingZ",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1083)\n\n\u770b\u5230dalao\u4eec\u90fd\u5199\u4e86\u7ebf\u6bb5\u6811/\u4e8c\u5206+\u5dee\u5206\uff0c\u6211\u63d0\u4f9b\u4e00\u4e2a\u500d\u589e+\u5dee\u5206\u7684\u505a\u6cd5\u3002\n\n\u5176\u5b9e\u500d\u589e\u548c\u4e8c\u5206\u7684\u601d\u60f3\u90fd\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u500d\u589e\u662f\u4ece\u5de6\u5f00\u59cb\u5f80\u53f3\u8d70\uff0c\u800c\u4e8c\u5206\u662f\u4ece\u4e2d\u95f4\u5f00\u59cb\u5f80\u4e24\u8fb9\u8d70\u3002\n\n\u6bcf\u4e2a\u501f\u6559\u5ba4\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u628a[s,t]\u5929\u7684\u6559\u5ba4\u6570\u91cf-d\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u5dee\u5206\u3002\n\n\u5177\u4f53\u505a\u6cd5\u662f\uff1a\u8bbe$k=log_2n+1$\uff0c\u5148\u6267\u884c\u7b2c1\u4e2a\u64cd\u4f5c\u5230\u7b2c$2^k$\u64cd\u4f5c\uff0c\u6267\u884c\u5b8c\u540e\u626b\u4e00\u904d\u6570\u7ec4\uff0c\u5982\u679c\u6709\u67d0\u4e00\u5929\u7684\u6559\u5ba4\u6570\u91cf<0\uff0c\u8bf4\u660e\u5728$[1,2^k]$\u4e2d\u67d0\u4e00\u5929\u4f1a\u51fa\u73b0\u67d0\u4e00\u5929\u7684\u6559\u5ba4\u6570\u91cf<0\u3002\u6240\u4ee5\uff0c\u5c31\u53ef\u4ee5\u7f29\u5c0f\u8303\u56f4\u81f3$[1,2^{k-1}]$\u3002\n\n\u5982\u679c\u6267\u884c$[1,2^{k-1}]$\u4e2d\u64cd\u4f5c\u540e\u6ca1\u6709\u54ea\u4e00\u5929\u7684\u6559\u5ba4\u6570\u91cf<0\uff0c\u5c31\u8bf4\u660e\u51fa\u73b0\u6559\u5ba4\u6570\u91cf<0\u7684\u64cd\u4f5c\u80af\u5b9a\u5728$2^{k-1}$\u540e\uff0c\u90a3\u4e48\u5c31\u6267\u884c$[2^{k-1},2^{k-1}+2^{k-2}]$\u7684\u64cd\u4f5c\u3002\u5426\u5219\uff0c\u6267\u884c$[1,2^{k-2}]$\u7684\u64cd\u4f5c\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e00\u76f4\u7b97\u4e0b\u53bb\uff0c\u76f4\u52302\u7684\u5e42\u6b21\u4e3a0\u4e3a\u6b62\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u5341\u8fdb\u5236\u6570\u90fd\u53ef\u4ee5\u62c6\u5206\u6210\u82e5\u5e72\u4e2a2\u7684\u6b21\u5e42\u4e4b\u548c\uff0c\u6240\u4ee5\u8fd9\u4e48\u627e\u80af\u5b9a\u80fd\u627e\u5230\u6700\u540e\u4e00\u4e2a \u4e0d\u4f7f\u67d0\u4e00\u5929\u7684\u6559\u5ba4\u6570\u91cf<0 \u7684\u64cd\u4f5c\u7684\u7f16\u53f7\u3002\u8fd9\u6837\uff0c\u8fd9\u4e2a\u7f16\u53f7+1\uff0c\u5c31\u662f\u7b2c\u4e00\u4e2a \u4f7f\u67d0\u4e00\u5929\u7684\u6559\u5ba4\u6570\u91cf<0 \u7684\u64cd\u4f5c\u7684\u7f16\u53f7\u4e86\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define N 1000011\nusing namespace std;\nint n,m,num[N],l[N],r[N],add[N],dif[N],day=0;\ninline void read(int &in)\n{\n\tin=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile('0'<=c&&c<='9')in=in*10+c-'0',c=getchar();\n\treturn;\n}\nint main()\n{\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++)read(num[i]);\n\tfor(int i=1;i<=m;i++)read(add[i]),read(l[i]),read(r[i]);\n\tfor(int i=20,pow2,frog=0;i>=0;i--)\n\t{\n\t\tpow2=1<<i;\n\t\tif(day+pow2>m)continue;\n\t\tfor(int j=day+1;j<=min(day+pow2,m);j++)dif[l[j]]-=add[j],dif[r[j]+1]+=add[j];\n\t\tfrog=0;\n\t\tfor(int j=1,sum=0;j<=n;j++)\n\t\t{\n\t\t\tsum+=dif[j];\n\t\t\tif(sum+num[j]<0){frog=1;break;}\n\t\t}\n\t\tif(!frog)day+=min(pow2,m+1);\n\t\telse for(int j=day+1;j<=min(day+pow2,m);j++)dif[l[j]]+=add[j],dif[r[j]+1]-=add[j];\n\t}\n\tif(day>=m)puts(\"0\");\n\telse printf(\"-1\\n%d\\n\",day+1);\n\treturn 0;\n}\n```",
        "postTime": 1573376619,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4ec0\u4e48\uff1f \u8981\u7528\u5dee\u5206\uff0c \u4e8c\u5206\uff1f\uff1f\uff1f\u4e0d\u8981\u6b3a\u8d1f\u849f\u84bb\u554a$QWQ$\n\n\u90a3\u5c31\u5148\u60f3\u4e00\u60f3\u66b4\u529b\u5427\n\n\u663e\u7136\u5bf9\u6bcf\u4e2a\u9700\u6c42\uff0c\u66b4\u529b\u4fee\u6539\uff0c\u5982\u679c\u8d85\u51fa\u4f9b\u7ed9\u76f4\u63a5\u8f93\u51fa\uff0c\u5f97\u4e86$45$\u5206\uff0c \u5982\u4e0b\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cmath>\n#define LL long long\n#define rep(i, a, b) for(int i = a; i <= b; ++i)\n#define per(i, a, b) for(int i = a; i >= b; --i)\n#define clr(a,b)  memset((a),b,sizeof(a))\nusing namespace std;\ninline int Read(){\n\tint s = 0, w = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9')   { if(ch == '-') w = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9') { s = (s << 3) + (s << 1) + (ch ^ 48); ch = getchar(); }\n\treturn s * w;\n}\nconst int MX = 5e5 + 50;\nint d[MX], t[MX], r[MX], s[MX], N, M, u[MX];\nvoid solve() {\n\trep(i, 1, N) {\n\t\trep(j, s[i], t[i]) {\n\t\t\tu[j] += d[i];\n\t\t\tif(u[j] > r[j]) {\n\t\t\t\tprintf(\"-1\\n%d\\n\", i);\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"0\");\n}\nint main() {\n\tN = Read(), M = Read();\n\trep(i, 1, N) r[i] = Read();\n\trep(i, 1, M) d[i] = Read(), s[i] = Read(), t[i] = Read();\n\tsolve();\n\treturn 0;\n}\n```\n\n\u6320\u5934$ing ~ -1s...~-1s....$\n\n\u554a\uff01\n\n\u7ebf\u6bb5\u6811\uff01\uff01\uff01\n\n\u65e2\u7136\u8981\u533a\u95f4\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u554a\uff01\uff01\n\n\u6211\u4eec\u53d1\u73b0\u6b64\u9898\u53ea\u9700\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u5982\u679c\u533a\u95f4\u4fee\u6539\u7684\u65f6\u5019\u6700\u5c0f\u503c\u51cf\u53bb\u5f53\u524d\u7684\u9700\u6c42\u5df2\u7ecf\u4e3a\u8d1f\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef$OvO$\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cmath>\n#define LL long long\n#define rep(i, a, b) for(int i = a; i <= b; ++i)\n#define per(i, a, b) for(int i = a; i >= b; --i)\n#define clr(a,b)  memset((a),b,sizeof(a))\nusing namespace std;\ninline LL Read(){\n\tLL s = 0, w = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9')   { if(ch == '-') w = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9') { s = (s << 3) + (s << 1) + (ch ^ 48); ch = getchar(); }\n\treturn s * w;\n}\nconst int MX = 2000010;\nint t[MX], s[MX], N, M;\nLL R[MX],tree[MX * 5], num, flag[MX * 5], d[MX];\nvoid pushup(int now) { tree[now] = min(tree[now << 1], tree[now << 1 | 1]); } \nvoid Build_tree(int l, int r, int now) {\n\tif(l == r) {\n\t\ttree[now] = R[l];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tBuild_tree(l, mid, now << 1);\n\tBuild_tree(mid + 1, r, now << 1 | 1);\n\tpushup(now);\n}\nvoid pushdown(int now) {\n\tif(flag[now]) {\n\t\ttree[now << 1] -= flag[now];\n\t\ttree[now << 1 | 1] -= flag[now];\n\t\tflag[now << 1] += flag[now];\n\t\tflag[now << 1 | 1] += flag[now];\n\t\tflag[now] = 0;\n\t}\n\treturn;\n}\nvoid updata(int l, int r, int now, int x, int y, LL z) {\n\tif(x <= l && r <= y) {\n\t\tif(tree[now] - z < 0) {\n\t\t\tprintf(\"-1\\n%lld\\n\", num);\n\t\t\texit(0);\n\t\t}\n\t\ttree[now] -= z;\n\t\tflag[now] += z;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tpushdown(now);\n\tif(x <= mid) updata(l, mid, now << 1, x, y, z);\n\tif(y > mid) updata(mid + 1, r, now << 1 | 1, x, y, z);\n\tpushup(now);\n}\nvoid solve() {\n\tfor(num = 1; num <= M; ++num) updata(1, N, 1, s[num], t[num], d[num]);\n\tcout << \"0\" << endl;\n}\nint main() {\n\tN = Read(), M = Read();\n\trep(i, 1, N) R[i] = Read();\n\trep(i, 1, M) d[i] = Read(), s[i] = Read(), t[i] = Read();\n\tBuild_tree(1, N, 1);\n\tsolve();\n\treturn 0;\n}\n```\n$By$ \u98de\u9a6c\u306e\u5e7b\u60f3\n \n$End~$\n",
        "postTime": 1541374722,
        "uid": 44650,
        "name": "SpXace",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/08/07/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8F%E6%B4%9B%E8%B0%B7P1083%20%E5%80%9F%E6%95%99%E5%AE%A4)\n\n### Solution\n\n\u8fd9\u9898\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u5148\u5224\u65ad\u8ba2\u5355\u80fd\u5426\u5b8c\u5168\u6ee1\u8db3\uff0c\u7136\u540e\u5f00\u59cb\u4e8c\u5206\u3002\n\n\u5224\u65ad\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u89e3\u51b3\uff0c`diff[i]`\u4e3a\u5dee\u5206\u6570\u7ec4\uff0c\u5728\u52a0\u5165\u6bcf\u4e00\u4e2a\u501f\u7528\u6bb5\u65f6\uff0c\u6211\u4eec\u53ea\u8981\u628a\u5934\u5c3e\u6807\u8bb0\uff1a\u5728\u5f00\u5934\u589e\u52a0\u9700\u8981\u7684\u6559\u5ba4\u6570\uff0c\u5728\u7ed3\u5c3e\u51cf\u53bb\u5b83\u6240\u9700\u8981\u7684\u6559\u5ba4\u6570\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAXN = 1000005;\nint n, m, a[MAXN], d[MAXN], s[MAXN], t[MAXN], diff[MAXN];\ninline bool check(int x) {\n    memset(diff, 0, sizeof(diff));//\u6e05\u7a7a\u5dee\u5206\u6570\u7ec4\n    for (int i = 1; i <= x; i++) {\n        diff[s[i]] += d[i];//\u5728\u5f00\u5934\u52a0\u4e0a\n        diff[t[i] + 1] -= d[i];//\u5728\u7ed3\u5c3e\u51cf\u53bb\n    }\n    int need = 0;//\u8868\u793a\u5728\u90a3\u4e00\u5929\u6240\u9700\u7684\u6559\u5ba4\u7684\u6570\u91cf\n    for (int i = 1; i <= n; i++) {\n        need += diff[i];\n        if (need > a[i]) return 0;//\u5982\u679c\u6559\u5ba4\u4e0d\u591f\u7528\u4e86\n    }\n    return 1;\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    for (int i = 1; i <= m; i++)\n        scanf(\"%d%d%d\", &d[i], &s[i], &t[i]);\n    if (check(m)) {//\u5148\u5224\u65ad\u8ba2\u5355\u80fd\u5426\u5b8c\u5168\u6ee1\u8db3\uff0c\u7136\u540e\u5f00\u59cb\u4e8c\u5206\u3002\n        printf(\"0\\n\");\n        return 0;\n    }\n    int l = 1, r = m;\n    while (l < r) {//\u4e8c\u5206\n        int mid = l + r >> 1;\n        if (check(mid)) l = mid + 1; else r = mid;\n    }\n    printf(\"-1\\n%d\\n\", l);\n    return 0;\n}\n```",
        "postTime": 1565184451,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4e3a\u5565\u90fd\u662f\u524d\u7f00\u548c\uff0c\u5dee\u5206\u4e0d\u662f\u66f4\u663e\u800c\u6613\u89c1\u4e48\uff1f\n\n\n\u8003\u8651\u7ef4\u62a4\u5404\u5929\u5269\u4f59\u6559\u5ba4\u6570\u91cf\uff0c\u5dee\u5206\u540e\u533a\u95f4\u51cf\u65f6\u53ea\u7528dt[l]-=c, dt[r+1]+=c\u3002\n\n\n\u7136\u540e\u4ece\u7b2c\u4e00\u5929\u5f00\u59cb\u7d2f\u52a0dt[]\uff0c\u5373\u67d0\u4e00\u5929\u5269\u4f59\u6559\u5ba4\u6570\u91cf\uff0c\u82e5<0\uff0c\u5c31\u4ece\u7b2cm\u4e2a\u8bf7\u6c42\u5f00\u59cb\u64a4\u9500\uff08\u533a\u95f4\u52a0\uff09\uff0c\u540c\u65f6--m\uff0c\u6b64\u65f6\u6ce8\u610f\u533a\u95f4\u4e0e\u5f53\u524d\u5929\u7684\u5173\u7cfb\uff0c\u5177\u4f53\u770b\u4ee3\u7801for\u91cc\u9762\u7684if\u3002\n\n\n\u6700\u7ec8n\u5929\u626b\u5b8c\uff0c\u6b64\u65f6m\u5373\u4e3a\u6ee1\u8db3n\u5929\u5269\u4f59\u6559\u5ba4\u5747\u975e\u8d1f\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u52a01\u5373\u4e3a\u7b54\u6848\uff0c\u5f53\u7136\u82e5\u7b49\u4e8e\u539fm\u9700\u8f93\u51fa0\u3002\n\n\n\u7531\u4e8em\u5355\u8c03\u4e0d\u589e\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3aO(n+m)\n\n\n\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u6307\u9488\u800c\u4e0d\u662f\u76f4\u63a5--m\n\n```cpp\nconst int N = 1000003;\nconst int M = 1000003;\nstruct Q_{int c,l,r;}ss[M], *sp = ss;\nint w[N]; ll dt[N];\n\nint main()\n{\n  int n = i_(), m = i_();\n  for(int i = 1; i <= n; ++i) dt[i] = (w[i] = i_())-w[i-1];\n  for(int i = 1; i <= m; ++i)\n  {\n    int c = i_(), l = i_(), r = i_();\n    *sp++ = (Q_){c, l, r};\n    dt[l] -= c, dt[r+1] += c;\n  }\n  ll cur = 0;\n  for(int i = 1; i <= n; ++i)\n    for(cur += dt[i]; cur < 0 && --sp; )\n      if(sp->l > i) dt[sp->l] += sp->c, dt[sp->r+1] -= sp->c;\n      else if(sp->r >= i) cur += sp->c, dt[sp->r+1] -= sp->c;\n  if(sp-ss == m) puts(\"0\");\n  else printf(\"-1\\n%d\\n\", (int)(sp-ss)+1);\n  return 0;\n}\n```",
        "postTime": 1475725527,
        "uid": 9567,
        "name": "HOOCCOOH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\n\u4e8c\u5206\u7b54\u6848 + \u5dee\u5206     \n\u66b4\u529b\u679a\u4e3e\u53ea\u670945\u5206     \n\u4e0d\u8fc7\u53ef\u4ee5\u4e8c\u5206\u524d\u591a\u5c11\u4e2a\u80fd\u591f\u6210\u529f\u501f\u5230\u6559\u5ba4    \n\u56e0\u4e3a\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u7279\u5f81    \n\u5982\u679c\u7b2ci\u4e2a\u53ef\u4ee5\u6210\u529f\u501f\u5230\u6559\u5ba4     \n\u90a3\u4e48\u7b2ci - 1\u4e2a\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u6210\u529f\u501f\u5230\u6559\u5ba4     \n\u6240\u4ee5\u4e8c\u5206\u8d77\u6765\u662f\u53ef\u4ee5\u7684     \n\u4e0d\u7528\u62c5\u5fc3\u4e8c\u5206\u53d8\u6362r\u548cl\u7684\u503c\u5f97\u65f6\u5019\u524d\u9762\u7684\u662f\u662f\u4e0d\u80fd\u591f\u501f\u5230\u6559\u5ba4\u7684    \n\n\u4e0d\u8fc7\u8fd9\u4e2acheck\u66b4\u529b\u8be5\u4e5f\u662f\u4e0d\u53ef\u884c\u7684    \n\u662f\u53ef\u4ee5\u7528\u5dee\u5206\u6570\u7ec4    \n\u4fee\u6539\u533a\u95f4\u7684\u65f6\u5019\u53ea\u9700\u8981\u4fee\u6539\u4e24\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86    \n\u5c06\u4e8c\u5206\u51fa\u6765\u7684\u524dmid\u4e2a\u8ba2\u5355    \n\u6309\u7167\u8981\u6c42\u7684\u65f6\u95f4\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u9762\u4fee\u6539\u4e00\u4e0b    \n\u7136\u540e\u8dd1\u4e00\u904d\u524d\u7f00\u548c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u9700\u8981\u63d0\u4f9b\u591a\u5c11\u4e2a\u6559\u5ba4    \n\u540c\u65f6\u548c\u4e4b\u524d\u8f93\u5165\u7684\u6bcf\u5929\u80fd\u591f\u63d0\u4f9b\u7684\u6559\u5ba4\u7684\u6570\u91cf\u6bd4\u8f83\u4e00\u4e0b   \n\u5982\u679c\u6709\u5927\u4e8e\u80fd\u591f\u63d0\u4f9b\u7684\u6559\u5ba4\u7684\u6570\u91cf\u7684    \n\u90a3\u5c31\u8fd4\u56de\u5047    \n\u5230\u6700\u540e\u90fd\u6ca1\u6709\u7684\u8bdd\u90a3\u5c31\u8fd4\u56de\u771f   \n\n\u6ce8\u610f\u5728\u5f00\u59cb\u4e8c\u5206\u524d    \n\u5e94\u8be5\u5148check\u4e00\u4e0bm\u5408\u4e0d\u5408\u6cd5   \n\u4e5f\u5c31\u662f\u80fd\u4e0d\u80fd\u5168\u90e8\u5b89\u6392\u5b8c    \n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define int long long\n\nusing namespace std;\nconst int Max = 1000005;\nstruct node\n{\n\tint d,s,t;\n}a[Max];\nint r[Max];\nint c[Max];\nint n,m;\n\nbool check(int x)\n{\n\tmemset(c,0,sizeof(c));\n\tfor(register int i = 1;i <= x;++ i)\n\t{\n\t\tc[a[i].s] += a[i].d;\n\t\tc[a[i].t + 1] -= a[i].d;\n\t}\n\tint last = 0,now;\n\tfor(register int i = 1;i <= n;++ i)\n\t{\n\t\tnow = last + c[i];\n\t\tif(now > r[i])return false;\n\t\tlast = now;\n\t}\n\treturn true;\n}\n\nsigned main()\n{\n\tcin >> n >> m;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcin >> r[i];\n\tfor(register int i = 1;i <= m;++ i)\n\t\tcin >> a[i].d >> a[i].s >> a[i].t;\n\tint l = 0,r = m;\n\tif(check(m) == true){cout << 0 <<endl;return 0;}\n\twhile(l < r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid))l = mid + 1;\n\t\telse\tr = mid;\n\t}\n\tcout << -1 << endl << l << endl;\n\treturn 0;\n}\n```",
        "postTime": 1570708884,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u662f\u660e\u663e\u7684\u7ebf\u6bb5\u6811\u88f8\u9898\u5427\uff0c\u90a3\u4e9b\u4e8c\u5206\u5927\u4f6c\u592a\u5f3a\u4e86\u6211\u53ea\u80fd\u5199\u7ebf\u6bb5\u6811\n\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u6bb5\u533a\u95f4\uff08\u5929\u6570\uff09\u7684\u6700\u5c0f\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7533\u8bf7\u5c1d\u8bd5\u5728\u4e00\u6bb5\u533a\u95f4\u51cf\u53bbd\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u591f\u51cf\u8fd4\u56defalse\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u5426\u5219\u8fd4\u56detrue\u8fdb\u884c\u4e0b\u4e00\u6b21\u7533\u8bf7\u7684\u5904\u7406\u3002\n\u732e\u4e0a\u849f\u84bb\u7684\u4ee3\u7801\uff08\u6211\u6bd4\u8f83\u559c\u6b22\u7528\u6307\u9488\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct tree{\n\ttree *lchild,*rchild;\n\tint left,right,sum,delta;//sum\u662f\u533a\u95f4\u80fd\u79df\u7528\u6559\u5ba4\u7684\u6700\u5c0f\u503c\uff0cdelta\u662f\u533a\u95f4\u5ef6\u8fdf\u4fee\u6539\u91cf\n}*t=new tree; \nclass f {\n\tpublic:\n\t\tf operator>>(int &num) {\n\t\t\tnum=0;\n\t\t\tchar c=getchar();\n\t\t\twhile(!isdigit(c))\tc=getchar();\n\t\t\twhile(isdigit(c))\tnum=(num<<3)+(num<<1)+(c&15),c=getchar();\n\t\t}\n} fin;//\u4e00\u4e2a\u5f31\u5f31\u7684\u5feb\u8bfb\nint min(int x,int y){\n\treturn x<y?x:y;\n}//\u542c\u8bf4\u81ea\u5df1\u5199min\u4f1a\u5feb\u4e00\u4e9b\nint use[1000007];\nvoid lazytag(tree *tt){\n\tif(tt->delta==0)\n\treturn;\n\ttt->lchild->sum-=tt->delta;\n\ttt->rchild->sum-=tt->delta;\n\ttt->lchild->delta+=tt->delta;\n\ttt->rchild->delta+=tt->delta;\n\ttt->delta=0;\n}//\u61d2\u6807\u8bb0-\u533a\u95f4\u5ef6\u8fdf\u4fee\u6539\nvoid build(tree *tt,int l,int r){\n\ttt->left=l;\n\ttt->right=r;\n\tif(l==r){\n\t\ttt->sum=use[l];\n\t\ttt->lchild=NULL;\n\t\ttt->rchild=NULL;\n\t\treturn;\n\t}\n\ttt->lchild=new tree;\n\ttt->rchild=new tree;\n\tint mid=(l+r)>>1;\n\tbuild(tt->lchild,l,mid);\n\tbuild(tt->rchild,mid+1,r);\n\ttt->sum=min(tt->lchild->sum,tt->rchild->sum);\n}//\u7b80\u5355\u7684\u5efa\u6811\nbool doit(tree *tt,int l,int r,int d){\n\tif(l<=tt->left&&tt->right<=r)//\u53d1\u73b0\u5728\u8bf7\u6c42\u8303\u56f4\u5185{\n\t\tif(tt->sum<d)//\u5982\u679c\u5176\u4e2d\u6559\u5ba4\u6700\u5c11\u7684\u4e00\u5929\u4e0d\u591f\u79df\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bf7\u6c42\u662f\u80af\u5b9a\u4e0d\u53ef\u4ee5\u5b9e\u73b0\u7684\n\t\treturn false;\n\t\ttt->sum-=d;\n\t\ttt->delta+=d;\n\t\treturn true;\n\t}\n\tlazytag(tt);\n\tint mid=(tt->left+tt->right)>>1;\n\tbool ans=true;\n\tif(l<=mid){\n\t\tif(!doit(tt->lchild,l,r,d)){\n\t\t\tans=false;\n\t\t}\n\t}\n\tif(mid<r){\n\t\tif(!doit(tt->rchild,l,r,d)){\n\t\t\tans=false;\n\t\t}\n\t}\n\ttt->sum=min(tt->lchild->sum,tt->rchild->sum);//\u66f4\u65b0sum\u503c\n\treturn ans;\n}\nint main() {\n\tint n,m;\n\tfin>>n>>m;\n\tfor(register int i=1; i<=n; i++)\n\t\tfin>>use[i];\n\tbuild(t,1,n);\n\tfor(register int i=1; i<=m; i++) {\n\t\tint d,s,tt;\n\t\tfin>>d>>s>>tt;\n\t\tif(!doit(t,s,tt,d)) {\n\t\t\tprintf(\"-1\\n%d\",i);\n\t\t\treturn 0;\n\t\t}//\u5982\u679c\u8fd4\u56defalse\uff0c\u4ee3\u8868\u65e0\u6cd5\u79df\u7528\uff0c\u8f93\u51fa\u7b54\u6848\u5e76\u7ed3\u675f\u7a0b\u5e8f\n\t}\n\tprintf(\"0\\n\");\n   return 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```\n",
        "postTime": 1565497500,
        "uid": 59554,
        "name": "electronlsr",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4e00\u822c\u5728\u8bfb\u61c2\u9898\u76ee\u4ee5\u540e\u4fbf\u4f1a\u660e\u767d\uff1a\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\uff0c\u4f46\u518d\u770b\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u53d1\u73b0\u6211\u4eec\u4e0d\u4f46\u9700\u8981\u4e8c\u5206\u53ef\u4ee5\u901a\u8fc7\u7684\u8bf7\u6c42\u6570\uff0c\u8fd8\u6709\u4e00\u4e2anlogn\u7684\u65f6\u95f4\uff0c100w\u7684\u6570\u636e\u6839\u672c\u8fc7\u4e0d\u4e86\u3002\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u662f\u53ef\u4ee5\u79bb\u7ebf\u505a\u7684\uff0c\u800c\u7ebf\u6bb5\u6811\u3001\u6811\u72b6\u6570\u7ec4\u662f\u5728\u7ebf\u65f6\u7684\u65b9\u6cd5\uff0c\u8fd9\u65f6\uff0c\u5dee\u5206\u6570\u7ec4\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\n\n\u5dee\u5206\u6570\u7ec4\u5c31\u662f\u628a\u4e00\u6bb5\u5e8f\u5217\u76f8\u90bb\u4e24\u8005\u4e4b\u5dee\u5b58\u5728\u53e6\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u5982\u679c\u60f3\u77e5\u9053\u67d0\u4e00\u70b9\u7684\u503c\uff0c\u5c31\u9700\u8981O(n)\u7684\u65f6\u95f4\u6c42\u524d\u7f00\u548c\u3002\u4f46\u662f\uff0c\u5982\u679c\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u8bbe\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u503c\u4e3as,t,c,\u53ea\u8981a[s]+=c\u4e14a[t+1]-=c\u5c31\u884c\u4e86\uff0c\uff08\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\uff09\u3002\u5176\u5b9e\u8fd9\u5728\u6811\u72b6\u6570\u7ec4\u7684\u533a\u95f4\u4fee\u6539\u4e2d\u5c31\u5df2\u7ecf\u6709\u5e94\u7528\u4e86\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628anlogn\u7684\u65f6\u95f4\u964d\u5230\u4e86n\uff0c\u8f7b\u677e\u89e3\u51b3\uff01\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m,lim[1000012],s[1000012],t[1000012];\nlong long a[1000012],c[1000012];\ninline bool check(int now)\n{\n\tfor (int i=1; i<=n; i++) a[i]=0;\n\tfor (int i=1; i<=now; i++)\n\t{\n\t\ta[s[i]]+=c[i];\n\t\ta[t[i]+1]-=c[i];\n\t}//\u533a\u95f4\u4fee\u6539\n\tlong long sum=0;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tsum+=a[i];\n\t\tif (sum>lim[i]) return 0;\n\t}//\u6c42\u524d\u7f00\u548c\u5982\u679c\u8d85\u51fa\u8303\u56f4\u5c31\u4e0d\u884c\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1; i<=n; i++)\n\t\tscanf(\"%d\",&lim[i]);\n\tfor (int i=1; i<=m; i++) scanf(\"%lld%d%d\",&c[i],&s[i],&t[i]);\n\tif (check(m)) return printf(\"0\\n\"),0;\n    //\u5224\u65ad\u80fd\u4e0d\u80fd\u5168\u90e8\u63a5\u53d7\n\tint l=1,r=m,mid;\n\twhile (l<r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif (check(mid)) l=mid+1;\n\t\telse r=mid;\n\t}\n\tprintf(\"-1\\n%d\\n\",l);\n\treturn 0;\n}\n```",
        "postTime": 1541388606,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\uff0c\u8c8c\u4f3c\u6211\u7684\u4ee3\u7801\u8fd8\u662f\u8dd1\u7684\u6bd4\u8f83\u5feb\u7684\uff08\u5c0f\u9a84\u50b2\uff09\uff08<1000ms\uff09\n\n\n#\u5148\u8bf4\u4e0b\u4e3b\u4f53\u601d\u8def\n\n\u5728\u9898\u9762\u4e2d\u6709\u63d0\u5230\uff0c\u5206\u914d\u6559\u5ba4\u662f\u6309\u5148\u5230\u5148\u5f97\u7684\u89c4\u77e9\u6765\u7684\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u6839\u636e\u8fd9\u4e2a\u5355\u8c03\u6027\u8d28\u60f3\u5230\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4efd\u8ba2\u5355\u5230\u5f53\u524d\u8ba2\u5355\u4e0d\u6ee1\u8db3\u5c31\u5411\u524d\u627e\uff0c\u53cd\u4e4b\u5219\u5411\u540e\u627e\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u8ba2\u5355\u6240\u9700\u6559\u5ba4\u6570\u91cf\u770b\u6210\u662f\u5bf9\u533a\u95f4\uff08\u5929\u6570\uff09\u8fdb\u884c\u4fee\u6539\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\u7528\u5dee\u5206\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u5728O\uff081\uff09\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u3002\n\n\n##\u5176\u5b9e\u4e00\u5f00\u59cb\u6211\u662f\u5426\u5b9a\u6389\u4e86\u4e8c\u5206\u8fd9\u79cd\u601d\u60f3\uff0c\u56e0\u4e3a\u5728\u4ed4\u7ec6\u63a8\u6572\u4e4b\u540e\u4e8c\u5206+\u5dee\u5206\u6570\u7ec4\u662f\u53ef\u4ee5\u88ab\u5361\u6210O\uff08\uff08n+m\uff09logn\uff09\u7684\uff0c\u5728\u5341\u4e07\u7684\u6570\u91cf\u7ea7\u4e0a\u7ffb\u500d\u4e5f\u7b97\u662f\u4e00\u4e2a\u4e0d\u5c0f\u7684\u5e38\u719f\u4e86\uff0c\u5f71\u54cd\u4ee3\u7801\u6548\u7387\u3002\n\n\n\u95ee\u9898\u5c31\u51fa\u5728\u5bf9\u4e8e\u6bcf\u6b21\u5224\u65ad\u5f53\u524d\u7b54\u6848\u7684\u53ef\u884c\u6027\u65f6\uff0c\u5bf9\u4e8e\u5dee\u5206\u6570\u7ec4\u7684\u6e05\u7a7a\u53ca\u91cd\u65b0\u7ef4\u62a4\u3002\n\n```cpp\nbool pd(int r){\n    int sum=0;\n    memset(c,0,sizeof(c));\n    for(int i=1;i<=r;i++){\n        c[b[i].s]+=b[i].d;\n        c[b[i].t+1]-=b[i].d;\n    }\n    for(int i=1;i<=n;i++){\n        sum+=c[i];\n        if(sum>a[i])return false;\n    }\n    return true;\n}\n```\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u4e8c\u5206\u540e\u90fd\u4f1a\u5bf91......r\uff08\u5f53\u524d\u7b54\u6848\uff09\u8fdb\u884c\u91cd\u65b0\u7ef4\u62a4\uff0c\u4f46\u5176\u5b9e\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u53ef\u4ee5\u60f3\u5230\u6bcf\u6b21\u4e8c\u5206\u5fc5\u6709\u4e00\u6bb5\u533a\u95f4\u8fdb\u884c\u4e86\u91cd\u590d\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u7b97\u51fa\u8fd9\u6bb5\u91cd\u590d\u7684\u533a\u95f4\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\uff0c\u5e76\u6bcf\u6b21\u53ea\u7ef4\u62a4\u672a\u91cd\u590d\u533a\u95f4\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3aO\uff08nlogn+m\uff09\n\n\u6700\u540e\u63d0\u4e00\u4e0b\uff0c\u4e8c\u5206\u4e00\u5b9a\u8981\u6ce8\u610f\u6700\u7ec8\u7684\u7b54\u6848\u505c\u5728\u54ea\u91cc\u3002\n\n\n#\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nconst int MAXN = 1000010;\nusing namespace std;\nint n,m;\nint d[MAXN],s[MAXN],t[MAXN];\nint data[MAXN];\nint room[MAXN];\nbool pd(){\n    register int now = 0;\n    for(int i=1;i<=n;i++){\n        now+=room[i];\n        if(now>data[i])return false;\n    }\n    return true;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&data[i]);\n    for(int i=1;i<=m;i++)scanf(\"%d%d%d\",&d[i],&s[i],&t[i]);\n    int l=1,r=m;\n    for(int i=1;i<=(l+r)/2;i++){\n        room[s[i]]+=d[i];\n        room[t[i]+1]-=d[i];\n    }\n    while(l != r){\n        int mid=(l+r)/2;\n        if(pd()){\n            for(int i=mid+1;i<=(mid+1+r)/2;i++){\n                room[s[i]]+=d[i];\n                room[t[i]+1]-=d[i];\n            }\n            l=mid+1;\n        }else{\n            for(int i=(l+mid)/2+1;i<=mid;i++){\n                room[s[i]]-=d[i];\n                room[t[i]+1]+=d[i];\n            }\n            r=mid;\n        }\n    }\n    if(r == m){//\u82e5\u662f\u6ee1\u8db3\u5168\u90e8\u8ba2\u5355\uff0c\u7b54\u6848\u540c\u6837\u4f1a\u505c\u5728\u6700\u540e\u4e00\u4e2a\u70b9 \uff0c\u6211\u4eec\u9700\u8981\u518d\u8fdb\u884c\u4e00\u6b21\u5224\u65ad\u3002 \n        if(pd()){\n            printf(\"0\\n\");\n            return 0;\n        }\n    }\n    printf(\"-1\\n%d\\n\",r);\n    return 0;\n}\n```",
        "postTime": 1509464351,
        "uid": 55644,
        "name": "shadow__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\u8fd9\u662f\u4e00\u9053\u7528\u524d\u7f00\u548c\u4e0e\u4e8c\u5206\u778e\u641e\u7684\u9898\u3002\n\n\u6211\u4eec\u77e5\u9053\u6240\u6709\u7684\u8ba2\u5355\uff0c\u5e76\u4e14\u9898\u76ee\u89c4\u5b9a\u4e86\u6240\u6709\u8ba2\u5355\u5fc5\u987b\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u5904\u7406\u3002\n\n\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u6700\u524d\u9762\u4e00\u4e2a\u9700\u8981\u4fee\u6539\u7684\u8ba2\u5355\u53f7\u3002\n\n\u4e4b\u524d\u6211\u4eec\u8bf4\uff0c\u53ef\u4ee5\u4e8c\u5206\u7684\u9898\u76ee\u9700\u8981\u6ee1\u8db3\u89e3\u7684\u6709\u754c\u6027\u548c\u5355\u8c03\u6027\uff0c\u6b64\u9898\u663e\u7136\u6ee1\u8db3\u3002\n\n\u6709\u754c\u6027\uff0c\u9700\u8981\u4fee\u6539\u7684\u8ba2\u5355\u4e00\u5b9a\u51fa\u73b0\u5728[1,m]\u4e4b\u95f4\u3002\n\n\u5355\u8c03\u6027\uff0c\u8fd9\u662f\u9898\u76ee\u7ed9\u7684\u5df2\u77e5\u6761\u4ef6\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u6c42\u89e3\u8fd9\u9053\u9898\u3002\n\n\u663e\u7136\uff0c\u5b83\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u6c42\u201c\u6700\u5927\u503c\u6700\u5c0f\u201d\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u5728[1,m]\u4e0a\u5bf9\u7b54\u6848\u8fdb\u884c\u4e8c\u5206\uff0c\u5e76\u4e14\u5c31\u6682\u4e14\u8ba4\u4e3a\u8fd9\u4e00\u5929\u4f1a\u51fa\u95ee\u9898\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u8fd9\u4e00\u5929\u6709\u6ca1\u6709\u51fa\u95ee\u9898\u5462\uff1f\n\n\u9700\u8981\u9884\u5904\u7406\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4sum\uff0c\u7528\u6765\u7ef4\u62a4[1,mid]\u4e4b\u95f4\u7684\u9700\u8981\u623f\u95f4\u603b\u6570\u3002\n\n\u8fd9\u91cc\u53ef\u80fd\u4e0d\u597d\u60f3\uff0c\u5bf9\u4e8e\u4e00\u4e2asum\uff0c\u6211\u4eec\u7528order[i].st\u4ee3\u8868\u7b2ci\u4e2a\u8ba2\u5355\u7684\u5f00\u59cb\u65f6\u95f4\uff0corder[i].ed\u4e3a\u7ec8\u6b62\u65f6\u95f4\uff0corder[i].room\\_num\u4e3a\u8fd9\u4e2a\u8ba2\u5355\u5185\u6bcf\u5929\u9700\u8981\u7684\u623f\u95f4\u6570\u3002\n\n\u4e8e\u662f\u6709\n\nsum[order[i].st] += order[i].room\\_num;\n\nsum[order[i].ed+1] -= order[i].room\\_num;\n\n\uff08\u5bf9\u4e8ei\u2208[1,mid]\uff09\n\n\u5373\u5f00\u59cb\u5728\u8ba2\u5355\u5185\u7684\u67d0\u5929\u52a0\u4e0a\u8fd9\u4e00\u5929\u6240\u9700\u8981\u7684\u623f\u95f4\u6570\n\n\u8ba2\u5355\u5916\u540e\u7684\u4e0b\u4e00\u5929\u51cf\u53bb\u90a3\u4e00\u5929\u9700\u8981\u7684\u623f\u95f4\u6570\uff08\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u501f\u5b8c\u4e86\uff09\n\n\u8fd9\u65f6\u6211\u4eec\u5c31\u5904\u7406\u597d\u4e86\u67d0\u4e00\u5929\u9700\u8981\u7684\u603b\u623f\u95f4\u6570\u3002\u90a3\u4e48\uff0c\u679a\u4e3e\u6240\u6709\u8ba2\u5355\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u8ba2\u5355\uff0c\u5982\u679c\u627e\u5230\u4e86\u4e0d\u5408\u6cd5\u8ba2\u5355\u5c31\u8fd4\u56detrue\u3002\u6240\u6709\u8ba2\u5355\u90fd\u5408\u6cd5\u5c31\u8fd4\u56defalse\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#define maxn 1000005\nusing namespace std;\nstruct orders{\n    int room_num;\n    int st;\n    int ed;\n};\norders order[maxn];\nint n,m;\nint room_limit[maxn];\nint l,r,mid;\nint sum[maxn];\nint read(){\n    int num = 0;\n    char c;\n    bool flag = false;\n    while ((c = getchar()) == ' ' || c == '\\n' || c == '\\r');\n    if (c == '-')\n        flag = true;\n    else\n        num = c - '0';\n    while (isdigit(c = getchar()))\n        num = num * 10 + c - '0';\n    return (flag ? -1 : 1) * num;\n}\n\nbool judge(int mid){\n    memset(sum,0,sizeof(sum));\n    for (register int i=1;i<=mid;i++){\n        sum[order[i].st] += order[i].room_num;\n        sum[order[i].ed+1] -= order[i].room_num;\n    }\n    for (register int i=1;i<=n;i++){\n        sum[i]+=sum[i-1];\n        if (sum[i]>room_limit[i])\n            return true;\n    }\n\n    return false;\n}\n\nint main(){\n    n = read();m = read();\n    for (register int i=1;i<=n;i++)\n        room_limit[i] = read();\n    for (register int i=1;i<=m;i++){\n        order[i].room_num = read();\n        order[i].st = read();\n        order[i].ed = read();\n    }\n    l=1;r=m;\n    while (l<r){\n        mid=(l+r) >> 1;\n        if (judge(mid))\n            r=mid;\n        else l=mid+1;\n    }    \n    if (m!=r) \n        printf(\"-1\\n%d\",r);\n    \n    else \n        printf(\"0\\n\");\n    return 0;\n}\n```",
        "postTime": 1507827194,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9a97\u5206\u53ef\u4ee5\u9a97\u5230\u6ee1\u5206\uff08\u53ef\u80fd\u662f\u6570\u636e\u4e0d\u592a\u5f3a\u7ed9\u5f3a\u884c\u8fc7\u53bb\u4e86\uff09\n\n\n\u8fd9\u9053\u9898\u5982\u679c\u662f\u6309\u7167\u9898\u610f\u53bb\u6a21\u62df\u7528\u5faa\u73af\u53bb\u4fee\u6539\u533a\u95f4\u7684\u8bdd\u53ea\u670945\u5206\uff0c\u6b63\u89e3\u662f\u4e8c\u5206+\u5dee\u5206\u6570\u7ec4\uff0c\u9a97\u5206\u4e5f\u662f\u5dee\u5206\u6570\u7ec4\u4f46\u662f\u6ca1\u6709\u4f7f\u7528\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u662fO(n\\*m)\uff0c\u6570\u636e\u826f\u5fc3\u5e76\u6ca1\u6709\u8fd9\u79cd\u6700\u574f\u7684\u60c5\u51b5\u3002\n\n\n\u62ff\u6837\u4f8b\u4e3e\u4f8b\uff1a\n\n\n\u56db\u5929\u91cc\uff0c\u6bcf\u4e00\u5929\u7684\u6559\u5ba4\u7684\u53ef\u7528\u6570\u91cf\u4e3a\n\n\n2 5 4 3\n\n\n\u8bfb\u5165\u8ba2\u5355\uff0c\u7136\u540e\u5229\u7528\u5dee\u5206\u4fee\u6539\u533a\u95f4\u907f\u514d\u8d85\u65f6\uff0c\u4e0d\u8003\u8651\u6559\u5ba4\u7684\u6570\u91cf\u4e0b\u9650\uff0c\u4fee\u6539\u540e\u6bcf\u4e00\u5929\u7684\u6559\u5ba4\u7684\u53ef\u7528\u6570\u91cf\u4e3a\n\n\n0 -4 -5 -4\n\n\n\u7136\u540e\u4ece\u7b2c\u4e00\u5929\u5230\u6700\u540e\u4e00\u5929\u904d\u5386\uff0c\u5982\u679c\u5f53\u5929\u7684\u6559\u5ba4\u53ef\u7528\u6570\u91cf\u5c0f\u4e8e0\uff0c\u5219\u5f53\u5929\u7684\u6559\u5ba4\u662f\u4e0d\u591f\u7528\u4e86\u7684\uff0c\u6a21\u62df\u5f53\u5929\u7684\u60c5\u51b5\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u8ba2\u53551\uff1a\u6bcf\u5929\u501f\u4e24\u95f4\uff0c\u4ece\u7b2c\u4e00\u5929\u5230\u7b2c\u4e09\u5929\n\n\n\u8ba2\u53552\uff1a\u6bcf\u5929\u501f\u4e09\u95f4\uff0c\u4ece\u7b2c\u4e8c\u5929\u5230\u7b2c\u56db\u5929\n\n\n\u8ba2\u53553\uff1a\u6bcf\u5929\u501f\u56db\u95f4\uff0c\u4ece\u7b2c\u4e8c\u5929\u5230\u7b2c\u56db\u5929\n\n\n\u7b2c\u4e00\u5929\uff1a0\uff0c\u4e0d\u5c0f\u4e8e0\n\n\n\u7b2c\u4e8c\u5929\uff1a-4\uff0c\u5c0f\u4e8e0\uff0c\u6a21\u62df\u5f53\u5929\u60c5\u51b5\uff0c\u539f\u6765\u7684\u6559\u5ba4\u53ef\u7528\u6570\u91cf\u4e3a5\uff0c\u4ece\u8ba2\u53551\u5230\u8ba2\u53553\u6a21\u62df\uff0c\u7b2c\u4e8c\u5929\u5728\u8ba2\u53551\u7684\u533a\u95f4\u5185\uff0c\u6559\u5ba4\u7684\u53ef\u7528\u6570\u91cf\u51cf\u53bb2\uff0c\u76ee\u524d\u53ef\u7528\u6570\u91cf\u4e3a3\u3002 \u5728\u8ba2\u53552\u7684\u533a\u95f4\u5185\uff0c\u53ef\u7528\u6570\u91cf\u51cf\u53bb3\uff0c\u76ee\u524d\u53ef\u7528\u6570\u91cf\u53d8\u4e3a0\u3002 \u5728\u8ba2\u53553\u7684\u533a\u95f4\u5185\uff0c\u53ef\u7528\u6570\u91cf\u51cf\u53bb4\uff0c\u76ee\u524d\u53ef\u7528\u6570\u91cf\u4e3a-4\uff0c\u5728\u8ba2\u53553\u65f6\u53ef\u7528\u6570\u91cf\u53d8\u4e3a\u5c0f\u4e8e0\uff0c\u9700\u8981\u4fee\u6539\u8ba2\u5355\u7684\u8ba2\u5355\u4e3a\u8ba2\u53553\uff0c\u7b54\u6848\u66f4\u65b0\u4e3a3\n\n\n\u7b2c\u4e09\u5929\uff1a-5\uff0c\u5c0f\u4e8e0\uff0c\u539f\u6765\u53ef\u7528\u6570\u91cf\u4e3a4\uff0c\u5728\u8ba2\u53551\u7684\u533a\u95f4\u5185\uff0c-2\uff0c\u53ef\u7528\u6570\u91cf\u53d8\u4e3a2\uff0c\u5728\u8ba2\u53552\u7684\u533a\u95f4\u5185\uff0c-3\uff0c\u53ef\u7528\u6570\u91cf\u53d8\u4e3a-1\uff0c\u5c0f\u4e8e\u96f6\uff0c\u9700\u8981\u4fee\u6539\u8ba2\u5355\u7684\u8ba2\u5355\u4e3a\u8ba2\u53552\uff0c\u8ba2\u53552\u7684\u987a\u5e8f\u5728\u8ba2\u53553\u4e4b\u524d\uff0c\u6309\u7167\u9898\u610f\uff0c\u5148\u5230\u5148\u5f97\uff0c\u7b54\u6848\u66f4\u65b0\u4e3a2\n\n\n\u7b2c\u56db\u5929\uff1a\u2026\u2026\u2026\u2026\u2026\u2026\uff08\u6309\u7167\u4e0a\u9762\u7ee7\u7eed\u6a21\u62df\uff09\n\n\n\u9a97\u5206\u5927\u6cd5\u795e\u5947qwq\n\n\n\u8d34\u4e0a\u4ee3\u7801\n\n\n```cpp\nvar\n        n,m,i,j,k,ans:longint;\n        r,d,s,t,a,b:array[1..1000000] of longint;\n        flag:boolean;\nbegin\n        readln(n,m);\n        for i:=1 to n do\n                read(r[i]);  //\u8bfb\u5165\u6bcf\u5929\u7684\u53ef\u7528\u6559\u5ba4\u6570\u91cf\n        for i:=1 to m do\n        begin\n                readln(d[i],s[i],t[i]);  //\u8bfb\u5165\u8ba2\u5355\n                a[s[i]]:=a[s[i]]-d[i];\n                a[t[i]+1]:=a[t[i]+1]+d[i];  //\u5dee\u5206\u6570\u7ec4\u9884\u5904\u7406\n        end;\n        k:=0;\n        for i:=1 to n do\n        begin\n                k:=k+a[i];\n                b[i]:=r[i]+k;   //\u5dee\u5206\n        end;\n        ans:=maxlongint;  //ans\u521d\u59cb\u5316\n        flag:=true;  //\u6807\u8bb0\u662f\u5426\u6ee1\u8db3\u6240\u6709\u8ba2\u5355\n        for i:=1 to n do  //\u679a\u4e3e\u6bcf\u5929\u7684\u53ef\u7528\u6559\u5ba4\n                if b[i]<0 then  //\u5982\u679c\u53ef\u7528\u6559\u5ba4\u6570\u91cf\u5c0f\u4e8e0\n                begin\n                        flag:=false;  //\u4e0d\u53ef\u80fd\u6ee1\u8db3\u6240\u6709\u8ba2\u5355\n                        for j:=1 to m do\n                                if (i<=t[j]) and (i>=s[j]) then  //\u5728\u8ba2\u5355j\u7684\u533a\u95f4\u5185\n                                        if r[i]-d[j]<0 then  //\u5982\u679c\u51cf\u53bb\u5f53\u524d\u8ba2\u5355\u6240\u9700\u7684\u6559\u5ba4\u6570\u91cf\u5c0f\u4e8e0\n                                        begin\n                                                if j<ans then  //\u5982\u679c\u5c0f\u4e8eans\uff0c\u5219\u66f4\u65b0ans\n                                                begin\n                                                        ans:=j;\n                                                        break;\n                                                end;\n                                        end\n                                        else\n                                                r[i]:=r[i]-d[j];  //\u51cf\u53bb\u5f53\u524d\u8ba2\u5355\u6240\u9700\u7684\u6559\u5ba4\n                end;\n        if flag then writeln('0')\n        else\n        begin\n                writeln('-1');\n                writeln(ans);\n        end;\nend.\n```",
        "postTime": 1503372572,
        "uid": 30828,
        "name": "Jummmmm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u7136\u540e\u4fee\u6539\u548c\u67e5\u8be2\u64cd\u4f5c\u4e00\u8d77\u8fdb\u884c\u5c31\u597d\u3002\n\n\u5177\u4f53\u89e3\u91ca\u89c1\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int MAXN = 1000010;\nlong long Min[MAXN * 4], n, m, a[MAXN], lazy[MAXN * 4];    //\u6ce8\u610f\u8981\u5f00long long \ninline long long min(long long a, long long b) {    //\u81ea\u5df1\u5199min\u51fd\u6570\u8dd1\u5f97\u5feb\u4e00\u70b9 \n    return a < b ? a : b;\n}\nvoid build(int l, int r, int rt) {    //\u5efa\u6811 \n    if (l == r) {\n        Min[rt] = a[l];\n        return;\n    }\n    int m = (l + r) >> 1;\n    build(l, m, rt << 1);\n    build(m + 1, r, rt << 1 | 1);\n    Min[rt] = min(Min[rt << 1], Min[rt << 1 | 1]);\n}\nlong long update(int L, int R, int C, int l, int r, int rt) {    //\u4fee\u6539\u548c\u67e5\u8be2\u6700\u5c0f\u503c \n    if (L <= l && r <= R) {\n        Min[rt] += C;\n        lazy[rt] += C;\n        return Min[rt];\n    }\n    int m = (l + r) >> 1;\n    if (lazy[rt]) {\n        lazy[rt << 1] += lazy[rt];\n        lazy[rt << 1 | 1] += lazy[rt];\n        Min[rt << 1] += lazy[rt];\n        Min[rt << 1 | 1] += lazy[rt];\n        lazy[rt] = 0;\n    }\n    if (L <= m)\n        update(L, R, C, l, m, rt << 1);\n    if (R > m)\n        update(L, R, C, m + 1, r, rt << 1 | 1);\n    return Min[rt] = min(Min[rt << 1], Min[rt << 1 | 1]);\n}\n\ninline int read() {                    //\u5feb\u8bfb \n    int ans = 0;\n    char c = getchar();\n    while(c < '0' || c > '9')\n        c = getchar();\n    while(c >= '0' && c <= '9') {\n        ans = ans * 10 + (c - '0');\n        c = getchar();\n    }\n    return ans;\n}\nint main() {\n    n = read(), m = read();\n    for (int i = 1; i <= n; i++) {\n        char c = getchar();            //\u76f4\u63a5\u628a\u5feb\u8bfb\u7684\u4ee3\u7801\u7c98\u8fc7\u6765\uff0c\u51cf\u5c11\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4 \n        while(c < '0' || c > '9')\n            c = getchar();\n        while(c >= '0' && c <= '9') {\n            a[i] *= 10;\n            a[i] += c - '0';\n            c = getchar();\n        }\n    }\n    build(1, n, 1);\n    int d, s, j;\n    for (int i = 0; i < m; i++) {\n        d = read(), s = read(), j = read();\n        if (update(s, j, -d, 1, n, 1) < 0) {    //\u5982\u679c\u4fee\u6539\u540e\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u4e0d\u6ee1\u8db3\u8ba2\u5355 \n            cout << -1 << endl << i + 1 << endl;\n            return 0;\n        }\n    }\n    cout << 0 << endl;\n    return 0;\n}\n```",
        "postTime": 1499997614,
        "uid": 22520,
        "name": "tfx2001",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "- \u8fd9\u4e2a\u9898\u8981\u7528****scanf****\u8bfb\u5165\uff0c\u4e0d\u7136\u5bf9\u65f6\u95f4\u6709\u5f88\u5927\u5f71\u54cd\uff08\u5f53\u7136\u53ef\u80fd\u4f60\u7b97\u6cd5\u6bd4\u8f83dio\n\n- \u9898\u89e3\u91cc\u9762\u5df2\u7ecf\u6709\u5f88\u591a\u7b97\u6cd5\u4e86\u6211\u8d34\u51fa\u6211\u7684\u4e24\u79cd\u5427\u3002\u3002\u5176\u5b9e\u548c\u5927\u5bb6\u5e94\u8be5\u90fd\u5dee\u4e0d\u591a\n\n**\u5dee\u5206**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define ll long long\n#define N 1000005\nusing namespace std;\nll n,m,flag=0,p=0,ans;\nll f[N],a[N],b[N],c[N],r[N],d=0;\nint main()\n{\n    memset(f,0,sizeof(f));\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n            scanf(\"%d\",&r[i]);\n    }   \n    for(int i=1;i<=m;i++)\n    {\n            scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n            f[b[i]]-=a[i];\n            f[c[i]+1]+=a[i];//\u5dee\u5206\n    }\n    ll t;\n    for(int i=1;i<=n;i++)\n    {\n            p+=f[i];\n            r[i]+=p;//\u5dee\u5206 \u53ef\u63a5\u6559\u5ba4\u6570 \n            if(r[i]<0)\n            {\n                flag=1;\n                 while(r[i]<0)//\u4e3a\u8d1f\u6570\u4e0d\u7b26\u5408\u6761\u4ef6\n                 {\n                     if(i<=c[m]&&i>=b[m])//\u82e5\u5728\u8303\u56f4\u5185\n                     {\n                     p+=a[m];//\u56e0\u4e3a\u5728\u8303\u56f4\u5185\u6240\u4ee5\u8981\u8fd8\u539fp\n                     f[b[m]]+=a[m];\n                     f[c[m]+1]-=a[m];//\u8fd8\u539f\n                    r[i]+=a[m];\n                     m--;\n                    }\n                    else//\u4e0d\u5728\u5f53\u524dm\u7684\u8303\u56f4\u5185\u7684\u8bddm\u80af\u5b9a\u4e0d\u7b26\u5408\n                    {\n                    f[b[m]]+=a[m];\n                     f[c[m]+1]-=a[m];//\u8fd8\u539f\n                     m--;\n                    }\n                 }\n            }\n    }\n    if(flag==0){printf(\"0\\n\");return 0;}\n    ans=m+1;\n    printf(\"-1\\n%d\\n\",ans);\n    return 0;\n}\n```\n**\u8fd9\u4e2a\u4e5f\u662f\u5dee\u5206\uff0c\u518d+\u4e8c\u5206**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define ll long long\n#define N 1000005\nusing namespace std;\nint search(ll);\nll n,m,flag=0,k,p=0,t=1,le,mid,ri,ans;\nll r[N],f[N]={0},a[N],b[N],c[N],ni[N];\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n            scanf(\"%d\",&r[i]);\n    }   \n    for(int i=1;i<=m;i++)\n    {\n            scanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\n            f[b[i]]-=a[i];\n            f[c[i]+1]+=a[i];\n    }\n    ll t;\n    for(int i=1;i<=n;i++)//\u5148\u68c0\u6d4b\u662f\u5426\u5168\u90e8\u7b26\u5408\u6761\u4ef6\n    {\n            p+=f[i];\n            t=r[i];\n            t+=p;//\u5dee\u5206\n            if(t<0){flag=1;break;}//\u4e0d\u7b26\u5408\u8df3\u51fa\n    }\n    if(flag==0){printf(\"0\\n\");return 0;}//\u82e5\u7b26\u5408\u76f4\u63a5\u7ed3\u675f\n    le=1;ri=m;\n    while(ri>=le)//\u4e8c\u5206\u8ba2\u5355\n    {\n         mid=(le+ri)/2;\n         if(search(mid)){le=mid+1;}\n         else {ri=mid-1;ans=mid;}\n    }\n    printf(\"-1\\n%d\\n\",ans);\n    return 0;\n}\nint search(ll x)\n{\n    ll t1;\n    memset(f,0,sizeof(f));//\u6e05\u7a7a\u5dee\u5206\n    p=0;\n    for(int i=1;i<=x;i++)\n    {\n            f[b[i]]-=a[i];\n            f[c[i]+1]+=a[i];//\u6784\u7b51\u5dee\u5206\n    }\n     for(int i=1;i<=n;i++)\n    {\n            p+=f[i];\n            t1=r[i];\n            t1+=p;\n            if(t1<0)return 0;//\u53ea\u8981\u6709\u8d1f\u6570\u5c31\u8bf4\u660e\u4e0d\u7b26\u5408\n    }\n    return 1;//\u7b26\u5408\n}\n```",
        "postTime": 1479546204,
        "uid": 25476,
        "name": "Zn_Hua",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u770b\u89c1\u8fd9\u9053\u9898\uff0c\u9996\u5148\u60f3\u5230\u7684\u662f\u641c\u7d22\uff0c\u7136\u540e\u770b\u89c1\u6570\u636e\u8303\u56f4\uff0c\u53ea\u80fd\u7528n^2\u4ee5\u4e0b\u7684\n\n\u53c8\u60f3\u5230\u5b83\u7684\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\n\n\u56e0\u4e3a\u6bcf\u4e00\u5929\u90fd\u8981\u6bd4\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u5b58\u7b2ci\u5929\u9700\u6c42\u4e0e\u524d\u4e00\u5929\u76f8\u6bd4\uff0c\u53d8\u4e86\u591a\u5c11\uff0c\u7528sum[i]\u8868\u793a\n\n\u679a\u4e3e\u5230\u7b2ci\u4e2a\u8ba2\u5355\uff0c\u53ea\u8981inc(sum[s[i]],d[i]);dec(sum[t[i]+1],d[i]);\u5c31\u884c\u4e86\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3anlogn\n\n\u4ee3\u7801\uff1a\n\n```delphi\n\nvar\n  n,m,i,l,r,now,k,ssum:longint;\n  room,d,s,t,sum:array[0..1000001]of longint;\n  flag:boolean;\nprocedure init;\nbegin\n  read(n,m);\n  for i:=1 to n do\n    read(room[i]);\n  for i:=1 to m do\n    read(d[i],s[i],t[i]);\nend;\nprocedure print;\nbegin\n  write(0);\n  halt;\nend;\nprocedure work;\nbegin\n  now:=0;\n  l:=0;\n  r:=m+1;\n  repeat\n    flag:=true;\n    k:=(l+r)shr 1;\n    if k>now then\n    for i:=now+1 to k do\n      begin\n        inc(sum[s[i]],d[i]);\n        dec(sum[t[i]+1],d[i]);\n      end\n    else\n    for i:=k+1 to now do\n      begin\n        dec(sum[s[i]],d[i]);\n        inc(sum[t[i]+1],d[i]);\n      end;\n    now:=k;\n    ssum:=0;\n    for i:=1 to n do\n      begin\n        inc(ssum,sum[i]);\n        if ssum>room[i] then begin flag:=false; break; end;\n      end;\n    if flag then l:=k+1\n    else r:=k;\n  until l=r;\n  if (k=m)and(flag) then print;\n  writeln(-1);\n  write(l);\nend;\nbegin\n  init;\n  work;\nend.\n\n```",
        "postTime": 1446643691,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u6211\u8ba4\u4e3a\u7ebf\u6bb5\u6811\u6709\u53ef\u80fd\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e8c\u5206\u548c\u524d\u7f00\u548c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662fsum\u4e5f\u5c31\u662f\u524d\u7f00\u548c\u6570\u7ec4\u7684\u53d8\u91cf\u5f00int\u6709\u53ef\u80fd\u4f1a\u7206\uff0c\u6240\u4ee5\u8981\u5f00longlong;\n\nsum-\u300b\u524d\u7f00\u548c\u6570\u7ec4\n\nclassroom-\u300b\u5f53\u5929\u6559\u5ba4\u4f9b\u5e94\u91cf\n\nbilbin-\u300b\u8ba2\u5355\n\n```cpp\n\n#include<stdio.h>\nint classroom[1000002]={0},n,m,sumn=0,ans=-1,bilisok=0;\nlong long sum[1000002]={0};\nstruct bill\n{\n    int begday,endday,bron;\n}bilbin[1000002];\nint judge(int i)\n{\n    int j,tmp=0;\n    if(i>sumn){\n        for(j=sumn+1;j<=i;j++){\n            sum[bilbin[j].begday]+=bilbin[j].bron;\n            sum[bilbin[j].endday+1]+=bilbin[j].bron*-1;\n        }\n        sumn=i;\n    }\n    else{\n        if(i<sumn){\n            for(j=sumn;j>i;j--){\n                sum[bilbin[j].begday]-=bilbin[j].bron;\n                sum[bilbin[j].endday+1]-=bilbin[j].bron*-1;\n            }\n            sumn=i;\n        }\n    }\n    for(j=1;j<=1000002;j++){\n        tmp+=sum[j];\n        if(tmp>classroom[j]){\n            return 0;\n        }\n    }\n    return 1;\n}\nvoid div(int left,int right)\n{\n    int guide;\n    while(right-left>1){\n        guide=(left+right)/2;\n        if(judge(guide)==0){\n            right=guide;\n        }\n        else{\n            left=guide+1;\n        }\n    }\n    if(judge(left)==0) ans=left;\n        else ans=right;\n}\nint main()\n{\n    int i;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&classroom[i]);\n    }\n    for(i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&bilbin[i].bron,&bilbin[i].begday,&bilbin[i].endday);\n    }\n    div(1,m);\n    if(ans==m && judge(ans)==1){\n        printf(\"0\");\n        return 0;\n    }\n    printf(\"-1\\n%d\",ans);\n    return 0;\n}\n\n```\uff08c/c++\uff09\n",
        "postTime": 1446031943,
        "uid": 8296,
        "name": "March",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "# \u501f\u6559\u5ba4 \u9898\u89e3\n\n&emsp;&emsp;\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u4e00\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65e0\u8bba\u5f53\u524d\u6559\u5ba4\u7533\u8bf7\u8fd8\u662f\u4e0d\u7533\u8bf7\uff0c\u901a\u8fc7\u8fd8\u662f\u6ca1\u6709\u901a\u8fc7\uff0c\u90fd\u5bf9\u4e8e\u63a5\u4e0b\u6765\u7684\u72b6\u6001\u6ca1\u6709\u5f71\u54cd\u3002\u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u6ee1\u8db3\u52a8\u6001\u89c4\u5212\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u70b9\uff1a\u65e0\u540e\u6548\u6027\uff1b\n\n&emsp;&emsp;\u76f8\u4fe1\u505a\u5230\u8fd9\u9053\u9898\u7684\u540c\u5b66\u4ee5\u524d\u90fd\u5e94\u8be5\u5bf9\u4e8e\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u6709\u6240\u4e86\u89e3\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u975e\u5e38\u8f7b\u6613\u5730\u8bbe\u8ba1\u51fa\u72b6\u6001\uff1a\n\n\u8bbe$f_{i,j}$\u8868\u793a\u5f53\u524d\u5904\u7406\u5230\u7b2c$i$\u5802\u8bfe\u4e14\u4f7f\u7528\u4e86$j$\u6b21\u7533\u8bf7\u673a\u4f1a\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n&emsp;&emsp;\u7b49\u4e00\u4e0b\u4e0b\uff0c\u597d\u50cf\u8fd9\u6837\u8bbe\u8ba1\u8f6c\u79fb\u4e0d\u51fa\u6765\u3002\n\n&emsp;&emsp;\u4e3a\u4ec0\u4e48\u8f6c\u79fb\u4e0d\u51fa\u6765\uff1f\u56e0\u4e3a\u4e0a\u4e00\u6b21\u7533\u8bf7\u7684\u901a\u8fc7\u4e0e\u5426\u4f1a\u5f71\u54cd\u5230\u5f53\u524d\u7684\u72b6\u6001\u5230\u5e95\u8981\u8d70\u90a3\u4e00\u8fb9\uff08\u5373\u4ece$c_i$\u51fa\u53d1\u8fd8\u662f\u4ece$d_i$\u51fa\u53d1\uff09\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u518d\u9644\u52a0\u4e00\u4e2a\u4e0a\u4e00\u6b21\u662f\u5426\u4f7f\u7528\u8fc7\u7533\u8bf7\u673a\u4f1a\u7684\u9644\u52a0\u7ef4\u5ea6$0/1$\uff0c\u5176\u4e2d0\u8868\u793a\u4e0a\u4e00\u6b21\u6ca1\u6709\u4f7f\u7528\uff0c1\u8868\u793a\u4e0a\u6b21\u4f7f\u7528\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5217\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\uff1a\n\n$f_{i,j,0}=min\\begin{cases}f_{i-1,j,0}+dis_{C1,C3}\\\\f_{i-1,j,1}+dis_{C1,C3} \\times (1-k_{i-1})+dis_{C2,C3} \\times k_{i-1}\\end{cases}$\n\n$f_{i,j,1}=min\\begin{cases}f_{i-1,j-1,0}+dis_{C1,C3} \\times (1-k_{i})+dis_{C1,C4} \\times k_i\\\\f_{i-1,j-1,1}+dis_{C1,C3} \\times (1-k_{i-1}) \\times (1-k_{i})+dis_{C1,C4} \\times (1-k_{i-1}) \\times k_i+dis_{C2,C3} \\times k_{i-1} \\times (1-k_i) + dis_{C2,C4} \\times k_{i-1} \\times k_i\\end{cases}$\n\n\uff0811.8\u66f4\u65b0\uff09 \u62b1\u6b49\u3002\u9012\u63a8\u516c\u5f0f\u4f3c\u4e4e\u663e\u793a\u6709\u70b9\u95ee\u9898\uff0c\u73b0\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u3002\n\n\u5176\u4e2d\uff0c$dis_{x,y}$\u8868\u793a\u6559\u5ba4$x,y$\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u53ef\u4ee5\u4f7f\u7528Floyd\u6765\u89e3\u51b3\u3002\n\n\u5b9a\u4e49\u5982\u4e0b\uff1a\n\n$C1=c_{i-1},C2=d_{i-1},C3=c_i,C4=d_i$\n\n\u9644\u6e90\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\nusing namespace std;\nconst int MAXN=1e6+10;\nint n,m;\nint ren[MAXN];\nint dat[MAXN*4],add[MAXN*4];\nint min(int a,int b)\n{\n\treturn a<b?a:b;\n}\nvoid build(int k,int l,int r)\n{\n\tif (l==r)\n\t{\n\t\tdat[k]=ren[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\tdat[k]=min(dat[k<<1],dat[k<<1|1]);\n}\nvoid pushdown(int k,int l,int r,int mid)\n{\n\tif (add[k]==0) return;\n\tdat[k<<1]+=add[k];\n\tadd[k<<1]+=add[k];\n\tdat[k<<1|1]+=add[k];\n\tadd[k<<1|1]+=add[k];\n\tadd[k]=0;\n}\nbool query(int k,int l,int r,int x,int y,int v)\n{\n\tif (x<=l&&r<=y)\n\t{\n\t\tif (dat[k]<v) return false;\n\t\telse return true;\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(k,l,r,mid);\n\tbool ok1=true,ok2=true;\n\tif (x<=mid) ok1=query(k<<1,l,mid,x,y,v);\n\tif (mid<y) ok2=query(k<<1|1,mid+1,r,x,y,v);\n\treturn ok1&&ok2;\n}\nvoid modify(int k,int l,int r,int x,int y,int v)\n{\n\tif (x<=l&&r<=y)\n\t{\n\t\tadd[k]+=v;\n\t\tdat[k]+=v;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tpushdown(k,l,r,mid);\n\tif (x<=mid) modify(k<<1,l,mid,x,y,v);\n\tif (mid<y) modify(k<<1|1,mid+1,r,x,y,v);\n\tdat[k]=min(dat[k<<1],dat[k<<1|1]);\n}\nint read()\n{\n\tchar a=getchar();\n\tint x=0;\n\twhile (a<'0'||'9'<a) a=getchar();\n\twhile ('0'<=a&&a<='9')\n\t{\n\t\tx=x*10+a-'0';\n\t\ta=getchar();\n\t}\n\treturn x;\n}\nint main()\n{\n\t//freopen(\"classroom.in\",\"r\",stdin);\n\t//freopen(\"classroom.out\",\"w\",stdout);\n\tn=read(); m=read();\n\tfor (int i=1;i<=n;i++)\n\t\tren[i]=read();\n\tbuild(1,1,n);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint num,a,b;\n\t\tnum=read(); a=read(); b=read();\n\t\tif (!query(1,1,n,a,b,num))\n\t\t{\n\t\t\tprintf(\"-1\\n%d\",i);\n\t\t\treturn 0;\n\t\t}\n\t\tmodify(1,1,n,a,b,-num);\n\t}\n\tprintf(\"0\");\n}\n```\n",
        "postTime": 1573050554,
        "uid": 113476,
        "name": "Gorun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3\u3010P1083\u3011 \u501f\u6559\u5ba4"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f\u5c31\u662f\uff1a**\n\n**\u7b2c$i$\u5929\u6709$a_i$\u4e2a\u6559\u5ba4\u53ef\u4f9b\u4f7f\u7528**\uff0c\u8fd8\u6709**$m$\u4e2a\u7ae5\u978b\u60f3\u6765\u79df\u501f\u6559\u5ba4(\u5929\u6570\u4e0e\u4e2a\u6570\u4e0d\u5b9a)**\uff0c\u95ee**\u6700\u591a\u53ef\u4ee5\u6ee1\u8db3\u524d\u591a\u5c11\u4e2a**\uff1b\n\n\u5f88\u5feb\u53ef\u4ee5\u60f3\u51fa**\u4e8c\u5206\u505a\u6cd5**\uff1a\n\n\u56e0\u4e3a\u5728**\u7ae5\u978b\u8d8a\u5c11\u60c5\u51b5\u4e0b**\uff0c\u6559\u5ba4\u8d8a\u6709**\u53ef\u80fd\u6ee1\u8db3**\uff0c\u800c**\u7ae5\u978b\u4e00\u65e6\u591a\u4e86**\uff0c\u90a3\u4e48**GG\u7684\u6982\u7387\u5c31\u5927\u4e86**\n\n\u6240\u4ee5\uff0c\u73b0\u5728\u95ee\u9898\u8f6c\u6362\u6210\uff1a\n\n**\u73b0\u6709$x$\u4e2a\u7ae5\u978b\u6765\u501f\u6559\u5ba4\uff0c\u95ee\u662f\u5426\u53ef\u884c**\uff0c\u800c**$x$\u662f\u6211\u4eec\u4e8c\u5206\u7684\u7b54\u6848**\uff1b\n\n\u73b0\u5728\u95ee\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5224\u5b9a\u662f\u5426\u53ef\u884c\uff1b\n\n\u65e2\u7136**\u7b2c$i$\u4e2a\u7ae5\u978b\u9700\u8981\u5728\u7b2c$u$\u5230 $v$\u5929\u501f$d$\u4e2a\u6559\u5ba4**\uff0c\u9700\u8981\u5224\u5b9a\u5728\u8fd9\u51e0\u5929\u4e2d\u662f\u5426\u8db3\u591f\uff0c\u90a3\u4e48\uff0c\u6211\u4eec**\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u5b9e\u73b0**\n\n\u8bbe$a[i]$\u4e3a\u7b2c$i$\u5929\u7684**\u6559\u5ba4\u53ef\u7528\u91cf**\uff0c$b[i]$\u4e3a$a[i]-a[i-1]$;\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ae5\u978b\u7684\u8bf7\u6c42\uff1a\u501f**$u_i$\u5230$v_i$\u7684$d_i$\u4e2a\u6559\u5ba4**\uff0c\u6211\u4eec\u53ef\u4ee5**\u5728$b[i]$\u7684\u4f4d\u7f6e\u51cf\u53bb$d_i$**,**\u5728$b[i-1]$\u7684\u4f4d\u7f6e\u52a0\u4e0a$d_i$**\u5373\u53ef**\u5b9e\u73b0$O(1)$**\u4fee\u6539,\u5728**\u4ece$1\u5230x$\u6c42\u524d\u7f00\u548c\uff0c\u5c31\u662f\u4fee\u6539\u8fc7\u540e\u7684$a[i]$\u6570\u7ec4**\u5566\uff1b\n\n\u4e0d\u5408\u6cd5\u60c5\u51b5\u4e3a**\u5728\u4fee\u6539\u8fc7\u540e\u7684$a[i]$\u6570\u7ec4\u4e2d\u6709$< 0$**\u7684\u60c5\u51b5\uff0c**\u8fd4\u56de$faluse$,\u8d1f\u8d23\u5c31\u4e3a$true$**\n\n**\u5177\u4f53\u5b9e\u73b0\u8fd8\u662f\u770b\u4ee3\u7801\u5427** \uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define N 2005000\nusing namespace std;\n\nint n,m;\nint a[N],b[N],c[N];\nstruct node {\n\tint d,s,t;\n}data[N];\n\ninline bool Check(int x) {\n\tfor(int i = 1;i <= n;i ++) c[i] = b[i];\n\tfor(int i = 1;i <= x;i ++) {\n\t\tint u = data[i].s,v = data[i].t;\n\t\tc[u] -= data[i].d;\n\t\tc[v + 1] += data[i].d;\n\t}\n\tfor(int i = 1;i <= n;i ++) {\n\t\tc[i] += c[i - 1];\n\t\tif(c[i] < 0) return false;\n\t}\n\treturn true;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]);\n\tfor(int i = 1;i <= n;i ++) b[i] = a[i] - a[i - 1];\n\tfor(int i = 1;i <= m;i ++) \n\t\tscanf(\"%d%d%d\",&data[i].d,&data[i].s,&data[i].t);\n\tint l = 1,r = m,ans = 0;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(Check(mid)) l = mid + 1,ans = mid;\n\t\telse r = mid - 1;\n\t}\n\tif(ans == m) cout << 0 << endl;\n\telse cout << -1 << endl << ans + 1 << endl;\n}\n```\n\n\n**\u5176\u5b9e\u8fd8\u6709\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff1a**\n\n\u65e2\u7136**\u6c42\u5728\u6ee1\u8db3\u7b2c$i$\u4e2a\u7ae5\u978b\u540e\u662f\u5426\u5b58\u5728\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5**\uff0c\uff0c\u6211\u4eec\u7528**\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u51cf\uff0c\u4e0e\u533a\u95f4\u6700\u5c0f\u503c**\n\n\u5177\u4f53\u5b9e\u73b0\u662f\u9171\uff1a\n\n\u5047\u8bbe**\u7b2c$i$\u4e2a\u7ae5\u978b\u7684\u8981\u6c42\u6211\u53ef\u4ee5\u6ee1\u8db3**\uff0c\u90a3\u4e48**\u5148\u501f\u7ed9\u4ed6**\uff0c\u5c31\u662f\u6267\u884c\u4e00\u6b21**\u4ece$u_i$\u5230$v_i$\u51cf\u53bb$d_i$\u7684\u64cd\u4f5c**\n\n\u5f53**\u6ee1\u8db3\u540e\uff0c\u53d1\u73b0\u5176\u4e2d\u6709\u4e00\u5929\u4e0d\u591f\u7528**\uff0c\u5373\u4e3a\u5728**\u7ebf\u6bb5\u6811\u7684$1$\u53f7\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u4e3a\u8d1f**\uff0c\u4e0d\u5408\u6cd5\uff0c**\u8f93\u51fa\u5f53\u524d\u7f16\u53f7**\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b(**\u6bd4\u4e8c\u5206\u6162\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u8fc7\u7684\uff0c\u653e\u5fc3\u98df\u7528**)\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define N 2006005\nusing namespace std;\n\nint n,m;\nint a[N];\nstruct node {\n\tint val,laz;\n}tr[N * 4];\n\ninline void Built(int k,int l,int r) {\n\tif(l == r) {\n\t\ttr[k].val = a[l];\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tBuilt(k << 1,l,mid); \n\tBuilt(k << 1 | 1,mid + 1,r);\n\ttr[k].val = min(tr[k << 1].val,tr[k << 1 | 1].val);\n}\n\ninline void Pushdn(int k) {\n\tif(tr[k].laz) {\n\t\ttr[k << 1].val -= tr[k].laz;\n\t\ttr[k << 1 | 1].val -= tr[k].laz;\n\t\ttr[k << 1].laz += tr[k].laz;\n\t\ttr[k << 1 | 1].laz += tr[k].laz;\n\t\ttr[k].laz = 0;\n\t}\n}\n\ninline void Change(int k,int l,int r,int a,int b,int c) {\n\tif(a <= l && r <= b) {\n\t\ttr[k].val -= c;\n\t\ttr[k].laz += c;\n\t\treturn ;\n\t}\n\tPushdn(k);\n\tint mid = (l + r) >> 1;\n\tif(a <= mid) Change(k << 1,l,mid,a,b,c);\n\tif(b > mid) Change(k << 1 | 1,mid + 1,r,a,b,c);\n\ttr[k].val = min(tr[k << 1].val,tr[k << 1 | 1].val);\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]);\n\tBuilt(1,1,n); int flag = 0,ans;\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint u,v,w; scanf(\"%d%d%d\",&w,&u,&v);\n\t\tChange(1,1,n,u,v,w);\n\t\tif(tr[1].val < 0 && flag == 0) {\n\t\t\tflag = 1; ans = i;\n\t\t}\n\t}\n\tif(flag) cout << -1 << endl << ans << endl;\n\telse cout << 0 << endl;\n}\n```",
        "postTime": 1571110499,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "### \u672c\u9898\u6b63\u89e3\uff1a\u4e8c\u5206+\u6570\u7ec4\u6a21\u62df\n\n\u89e3\u9898\u601d\u8def\uff1a\u8fd9\u9053\u9898\u76ee\u5982\u679c\u6570\u636e\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u89e3\u3002\u7531\u4e8e\u6570\u636e\u91cf\u8f83\u5927\uff0c\u5982\u679c\u66b4\u529b\u7684\u8bdd\u53ea\u80fd\u5f9730\u5206\u3002\u7f51\u4e0a\u6709\u7ebf\u6bb5\u6811\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u6765\u5199\uff0c\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002\n\n\u8bbemid=(0+\uff08m+1))\u3002\u5148\u8003\u86511\u5230mid\u4efd\u8ba2\u5355\u7684\u5408\u6cd5\u6027\uff0c\u5982\u679c1\u5230mid\u5408\u6cd5\u7684\u8bdd\uff0c\u518d\u8003\u86511\u5230\uff08mid+\uff08m+1)/2)\u4efd\u8ba2\u5355\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u5219\u8003\u86511\u5230\uff081+mid/2\uff09\u4efd\u8ba2\u5355\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u6700\u7ec8\u5373\u53ef\u6c42\u5f97\u7ed3\u679c\u3002\u6ce8\u610f\u5728check\u4e2d\u6c42\u548c\u91c7\u7528\u4e86\u4e00\u4e9b\u6280\u5de7\u6765\u63d0\u5347\u6548\u7387\uff08\u539f\u7406\u89c1\u6700\u4e0b\u65b9\u56fe)\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,m,l,r,room[1000005],d[1000005],s[1000005],t[1000005],sum[1000005],a[1000005];\nbool check(long long x){\n\tmemset(a,0,sizeof(a));\n\tfor(long long i=1;i<=x;i++){\n\t\ta[s[i]]+=d[i];\n\t\ta[t[i]+1]-=d[i];\n\t}\n\tlong long num=0;\n\tfor(long long i=1;i<=n;i++){\n\t\tnum+=a[i];\n\t\tif(num>room[i])return false;\n\t}\n\treturn true;\n}\nint main(){\n\tios::sync_with_stdio(false);                         //\u5c31\u56e0\u4e3a\u8fd9\u4e9b\u4e1c\u897f\u5bb3cin\u90a3\u4e48\u6162\n\tcin.tie(0);                                          //\u6240\u4ee5\u8981\u5173\u6389\u540c\u6b65\u6d41\n\tcin>>n>>m;\n\tfor(long long i=1;i<=n;i++)cin>>room[i];\n\tfor(long long i=1;i<=m;i++)cin>>d[i]>>s[i]>>t[i];\n\tl=0,r=m+1;                                           //\u4ee5\u4e0b\u4e3a\u4e8c\u5206\u641c\u7d22 \n\twhile(l+1<r){\n\t\tlong long mid=(l+r)/2;\n\t\tif(check(mid))l=mid;                             //check \n\t\telse r=mid;\n\t}\n\tif(l==m)cout<<\"0\";\n\telse cout<<\"-1\\n\"<<l+1;\n\treturn 0;\n}\n```",
        "postTime": 1570279853,
        "uid": 242967,
        "name": "JasonZRY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5462\u4ed6\u95ee\u662f\u5426\u4f1a\u6709\u8ba2\u5355\u65e0\u6cd5\u6ee1\u8db3\uff0c\u5982\u679c\u6709\u8981\u8f93\u51fa-1\u5e76\u4e14\u8f93\u51fa**\u7b2c\u4e00\u4e2a**\u4e0d\u6ee1\u8db3\u7684\u4eba\u7684\u7f16\u53f7\u3002\n\n\u770b\u5230\u9898\u76ee\u7684\u7b2c\u4e00\u773c\u60f3\u7684\u662f~~\u6253\u4e2a\u66b4\u529b~~\uff0c\u6328\u4e2a\u679a\u4e3e\u6bd4\u8f83\u770b\u770b\u54ea\u4e2a\u4e0d\u6ee1\u8db3\u76f4\u63a5\u8f93\u51fa\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662fO(nm)\uff0c\u90a3\u80af\u5b9a\u4e0d\u884c\u554a\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7533\u8bf7\u4eba\u7f16\u53f7\uff0c\u5de6\u7aef\u70b9\u8bbe\u4e3a1\uff0c\u53f3\u7aef\u70b9\u8bbe\u4e3am\uff0c\u7136\u540e\u5f00\u59cb\u4e8c\u5206\uff0c\u5982\u679cmid\u4e0d\u80fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u4e0d\u5c31\u8bf4\u660e\u5728mid\u540e\u9762\u7684\u4eba\u90fd\u4e0d\u80fd\u6ee1\u8db3\u5417\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u627e\u7b2c\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u628a\u53f3\u7aef\u70b9\u5de6\u79fb\uff0c\u5982\u679cmid\u80fd\u6ee1\u8db3\u90a3\u4e48\u5c31\u8bf4\u660e\u524d\u9762\u7684\u4eba\u90fd\u80fd\u6ee1\u8db3\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u5de6\u7aef\u70b9\u53f3\u79fb\u3002\u6700\u7ec8\u5de6\u7aef\u70b9\u7684\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u7136\u540e\u770b\u4e86\u770b\uff0c\u6211\u4eec\u8981\u5bf9\u533a\u95f4\uff08s\uff0ct\uff09\u8fdb\u884c\u4fee\u6539\uff0cs\u548ct\u4e5f\u5f88\u5927\u554a\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u4e00\u4e2a**\u5dee\u5206**\u7684\u601d\u60f3\u3002\n\u5dee\u5206\u5462\u5c31\u662f\u524d\u7f00\u548c\u7684\u9006\u8fd0\u7b97\u3002\n```cpp\n\u7b80\u5355\u6765\u8bf4\u5462\u5dee\u5206\u5c31\u662fcha[i]=a[i]-a[i-1];\n\u6240\u4ee5\u8bf4\u628a\u533a\u95f4\u5185\u6bcf\u4e2a\u6570\u540c\u65f6\u52a0\u4e0ad[i]\u5c31\u76f8\u5f53\u4e8e\u628a\u5dee\u5206\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u6570\u52a0d[i]\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u7684\u540e\u9762\u4e00\u4e2a\u6570-d[i]\u3002\n```\n\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\nbool check(int mid){\n\tfor(int i=1;i<=n;i++)cha[i]=0;\n\tfor(int i=1;i<=mid;i++){\n\t\tcha[s[i]]+=d[i];       \n\t\tcha[t[i]+1]-=d[i];      \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsum[i]=sum[i-1]+cha[i];//sum[i]\u8868\u793a\u7b2ci\u5929\u8981\u501f\u7684\u6559\u5ba4\u603b\u6570\u3002\n\t\tif(sum[i]>r[i]){\n\t\t\tf=1;//\u8fd9\u4e00\u5929\u8981\u501f\u7684\u6559\u5ba4\u603b\u6570\u5927\u4e8e\u80fd\u501f\u51fa\u53bb\u7684\u8bf4\u660e\u6709\u4e0d\u6ee1\u8db3\u7684\uff0c\u7528f\u6807\u8bb0\u4e00\u4e0b\u5f85\u4f1a\u65b9\u4fbf\u8f93\u51fa-1\uff1b\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint r[1000001],f=0,sum[1000002];\nint d[1000001],s[1000002],t[1000002],cha[1000010];\nbool check(int mid){\n\tfor(int i=1;i<=n;i++)cha[i]=0;\n\tfor(int i=1;i<=mid;i++){\n\t\tcha[s[i]]+=d[i];        \n\t\tcha[t[i]+1]-=d[i];      \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsum[i]=sum[i-1]+cha[i];\n\t\tif(sum[i]>r[i]){\n\t\t\tf=1;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>r[i];\n\tfor(int i=1;i<=m;i++)cin>>d[i]>>s[i]>>t[i];\n\tint l=1,r=m;\n\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tif(check(mid))l=mid+1;\n\t\t    else r=mid; \n\t}\n\tif(f==1)cout<<-1<<endl<<l;\n\telse cout<<f;\n\treturn 0; \n\t\n}\n```\n\n\n\n",
        "postTime": 1569320987,
        "uid": 106119,
        "name": "\u91ce\u9e64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P1083)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u672c\u9898\u4e3b\u8981\u6709\u4e24\u79cd\u601d\u8def\u3002\u4e00\u79cd\u5c5e\u4e8e\u66b4\u529b\u4f18\u5316\uff0c\u5e38\u6570\u5927\uff1b\u53e6\u4e00\u79cd\u662f\u4e8c\u5206\u3002  \n### P1 \u66b4\u529b\u4f18\u5316\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9996\u5148\u60f3\u5230\u533a\u95f4\u540c\u65f6\u51cf\u53bb\u4e00\u4e2a\u503c\u548c\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u66b4\u529b\u505a$O(nm)$\uff0c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u7684\u8bdd\u5c31\u53ef\u4ee5\u505a\u5230$O(m\\log_2n)$\uff0c\u4f46\u662f\u5e38\u6570\u975e\u5e38\u5927\u3002\u9694\u58c1\u4e8c\u5206\u6700\u5feb$212ms$\uff08\u699c\u4e0a\u6570\u636e\uff09\uff0c\u7ebf\u6bb5\u6811$2s$\uff08\uff01\uff01\uff01\uff09\u5de6\u53f3\uff0c\u5728\u699c\u4e0a\u6839\u672c\u627e\u4e0d\u7740\u4eba......    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u5982\u679c\u8981\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u8fd9\u9053\u9898\u7684\u8bdd\uff0c\u8bf4\u5b9e\u8bdd\u5b83\u5c31\u662f\u4e2a\u677f\u5b50\u3002~~  \n### P2 \u4e8c\u5206  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0d\u8fc7\uff0c\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u51cf\u503c\u7684\u4e1c\u897f\u4e0d\u6b62\u7ebf\u6bb5\u6811\u4e00\u4e2a\uff0c\u8fd8\u6709\u5dee\u5206\uff01  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u96fe\u8349\uff0c\u96be\u9053\u4f60\u8fd8\u8981\u6bcf\u6b21\u4fee\u6539\u5b8c\u4e4b\u540e\u518d\u68c0\u67e5\u4e00\u904d\u5417\uff1f\u4e0d\u8fd8\u662f$O(nm)$\uff1f~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f53\u7136\u4e0d\u662f\u3002\u6709\u4e86\u5dee\u5206\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$O(1)$\u7684\u65f6\u95f4\u5b8c\u6210\u4e00\u6b21\u4fee\u6539\uff0c\u8f6c\u800c\u7528$O(n)$\u7684\u65f6\u95f4\u5b8c\u6210\u4e00\u6b21\u67e5\u8be2\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u591a\u4fee\u6539\uff0c\u5c11\u67e5\u8be2\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u56de\u5934\u518d\u770b\u4e00\u4e0b\u9898\u76ee\u3002\u5982\u679c\u7b2c$x$\u4e2a\u8ba2\u5355\u51fa\u73b0\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48$x+1,x+2,......,m$\u5728\u7528\u5dee\u5206\u5904\u7406\u7684\u65f6\u5019\u90fd\u4f1a\u5b58\u5728\u51b2\u7a81\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u51b2\u7a81\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u5355\u8c03\u7684\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u6109\u5feb\u5730\u4e8c\u5206\u4e86\u3002\u6bcf\u6b21\u7528$O(m)$\u7684\u65f6\u95f4\u5904\u7406\u51fa\u64cd\u4f5c\u5b8c\u524d$mid$\u6761\u8ba2\u5355\u540e\u7684\u5dee\u5206\u6570\u7ec4\uff0c\u518d\u7528$O(n)$\u7684\u65f6\u95f4\u68c0\u67e5\u662f\u5426\u6709\u51b2\u7a81\uff0c\u8fd9\u6837\u65f6\u95f4\u5c31\u662f$O((n+m)\\log_2m)$\u7684\u3002\n# \u4ee3\u7801\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7ebf\u6bb5\u6811\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n//#define __DEBUG\n\n#define isLeaf( a ) ( segTree[a].l == segTree[a].r )\n\nconst int MAXN = 1e6 + 5, MAXM = 1e6 + 5, INF = 0x3f3f3f3f;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar(); int f = 1;\n\twhile( s < '0' || '9' < s ){ f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ), x = -x; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\nstruct segmentTreeNode\n{\n\tint l, r;\n\tint minVal, lazy;\n}segTree[MAXN << 2];\n\nint r[MAXN], d[MAXM], s[MAXM], t[MAXM];\nint N, M;\n\nvoid upt( const int now )\n{\n\tsegTree[now].minVal = MIN( segTree[now << 1].minVal, segTree[now << 1 | 1].minVal );\n}\n\nvoid normalize( const int now )\n{\n\tif( ! segTree[now].lazy ) return ;\n\tsegTree[now << 1].minVal += segTree[now].lazy, segTree[now << 1 | 1].minVal += segTree[now].lazy;\n\tsegTree[now << 1].lazy += segTree[now].lazy, segTree[now << 1 | 1].lazy += segTree[now].lazy; \n\t\n\tsegTree[now].lazy = 0;\n}\n\nvoid build( const int now, const int left, const int right )\n{\n\tsegTree[now].l = left, segTree[now].r = right;\n\tif( left == right )\n\t{\n\t\tsegTree[now].minVal = r[left];\n\t\tsegTree[now].lazy = 0;\n\t\treturn ;\n\t}\n\tbuild( now << 1, left, ( left + right ) >> 1 );\n\tbuild( now << 1 | 1, ( ( left + right ) >> 1 ) + 1, right );\n\tupt( now );\n}\n\nvoid update( const int now, const int segL, const int segR, const int val )\n{\n\t#ifdef __DEBUG\n\tsegmentTreeNode &node1 = segTree[now];\n\t#endif\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return ;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR )\n\t{\n\t\tsegTree[now].minVal += val;\n\t\tsegTree[now].lazy += val;\n\t\treturn ;\n\t}\n\tif( isLeaf( now ) ) return ;\n\tnormalize( now );\n\tupdate( now << 1, segL, segR, val );\n\tupdate( now << 1 | 1, segL, segR, val );\n\tupt( now );\n}\n\nint query( const int now, const int segL, const int segR )\n{\n\t#ifdef __DEBUG\n\tsegmentTreeNode &node2 = segTree[now];\n\t#endif\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return INF;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR ) return segTree[now].minVal;\n\tif( isLeaf( now ) ) return INF;\n\tnormalize( now );\n\tint v = query( now << 1, segL, segR );\n\treturn MIN( v, \n\t\t\t\tquery( now << 1 | 1, segL, segR ) ); \n}\n\nint main()\n{\n\tread( N ), read( M );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( r[i] );\n\tbuild( 1, 1, N );\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tread( d[i] ), read( s[i] ), read( t[i] );\n\t\tif( query( 1, s[i], t[i] ) < d[i] )\n\t\t{\n\t\t\twrite( -1 ), putchar( '\\n' ), write( i ), putchar( '\\n' );\n\t\t\treturn 0;\n\t\t}\n\t\tupdate( 1, s[i], t[i], -d[i] );\n\t}\n\tputs( \"0\" );\n\treturn 0;\n}\n```\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8c\u5206\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n\nconst int MAXN = 1e6 + 5, MAXM = 1e6 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar(); int f = 1;\n\twhile( s < '0' || '9' < s ){ f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ), x = -x; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint r[MAXN], d[MAXN], s[MAXN], t[MAXN], dif[MAXN];\nint N, M;\n\nbool chk( const int pos )\n{\n\tfor( int i = 1 ; i <= N ; i ++ ) dif[i] = 0;\n\tfor( int i = 1 ; i <= pos ; i ++ ) dif[s[i]] += d[i], dif[t[i] + 1] -= d[i];\n\tint num = 0;\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tnum += dif[i];\n\t\tif( num > r[i] ) return false;\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tread( N ), read( M );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( r[i] );\n\tfor( int i = 1 ; i <= M ; i ++ ) read( d[i] ), read( s[i] ), read( t[i] );\n\tif( chk( M ) )\n\t{\n\t\tputs( \"0\" );\n\t\treturn 0;\n\t}\n\tputs( \"-1\" );\n\tint l = 1, r = M - 1, mid;\n\twhile( r - l > 1 )\n\t{\n\t\tmid = ( l + r ) >> 1;\n\t\tif( chk( mid ) ) l = mid + 1;\n\t\telse r = mid;\n\t}\n\tif( ! chk( l ) ) write( l );\n\telse write( r );\n\tputchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1568518109,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[LG P1083][NOIp 2012]\u501f\u6559\u5ba4"
    },
    {
        "content": "## NOIP2012 D2T2 \u501f\u6559\u5ba4\n\n#### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u6bb5\u957f\u4e3a N \u7684\u6570\u5217\uff0c\u6709 M \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u7ed9\u6307\u5b9a\u4e00\u6bb5\u533a\u95f4\u51cf\u53bb\u67d0\u4e2a\u503c\uff0c\u95ee\u6267\u884c\u7b2c\u51e0\u4e2a\u64cd\u4f5c\u65f6\u6570\u5217\u4e2d\u51fa\u73b0\u5c0f\u4e8e0\u7684\u6570\n\nN,M<=1e6 \uff0c\u6240\u6709\u6570\u5728 int \u8303\u56f4\u5185\n\n#### \u89e3\u6790\n\n\u5982\u679c\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u8fd9\u9898\u5c31\u53d8\u6210\u4e86\u6a21\u677f\u9898\uff08\u533a\u95f4\u51cf\uff0c\u6c42\u533a\u95f4min\uff09\n\n\u4e4b\u524d\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u8003\u8651\u65b0\u505a\u6cd5\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u9898\u76ee\u8981\u6c42\u8fdb\u884c\u533a\u95f4\u51cf\uff0c\u5e76\u67e5\u8be2\u6240\u6709\u6570\u4e2d\u662f\u5426\u6709\u6570\u5c0f\u4e8e0\n\n\u5982\u679c\u666e\u901a\u66b4\u529b\uff0c\u4e24\u4e2a\u64cd\u4f5c\u90fd\u662fO(N)\u671f\u671b\u590d\u6742\u5ea6\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6570\u5217\u5dee\u5206\uff0c\u5c31\u53ef\u4ee5\u628a\u524d\u4e00\u4e2a\u64cd\u4f5c\u964d\u5230O(1)\uff0c\u540e\u4e00\u4e2a\u64cd\u4f5c\u4e0d\u53d8\n\n\u73b0\u5728\u8003\u8651\uff1a\u5982\u679c\u6bcf\u6b21\u90fd\u8981\u67e5\u8be2\uff0c\u90a3\u4e48\u6700\u574f\u590d\u6742\u5ea6\u5c06\u662fO(N^2)\uff0c\u8fd8\u662f\u5403\u4e0d\u6d88\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u64cd\u4f5c\u5177\u6709\u5355\u8c03\u6027\uff08\u6570\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff09\n\n\u6240\u4ee5\u6211\u4eec\u518d\u8003\u8651\u5bf9\u64cd\u4f5c\u8fdb\u884c\u4e8c\u5206\n\n\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86O(N log M)\uff0c\u6210\u529fAC\n\n\uff08\u8bf4\u5b9e\u8bdd\uff0c\u8fd8\u4e0d\u5982\u5199\u7ebf\u6bb5\u6811\u5462\uff09\n\n\u5f53\u7136\uff0c\u4e8c\u5206\u8bf4\u8d77\u6765\u5bb9\u6613\uff0c\u5199\u8d77\u6765\u96be\uff0c\u6211\u5c31WA\u4e86\u81f3\u5c1110\u904d\u4ee5\u4e0a\u624dAC\n\n\u5728\u8fd9\u91cc\u7ed9\u51fa\u6ce8\u610f\u70b9\uff1a\n\n1.mid\u7684\u53d6\u503c\uff1a\u5f53 l=mid/r=mid-1\u65f6\uff0c\u5e94\u5f53\u5199mid=(l+r+1)>>1 \u800c\u4e0d\u662f mid=(l+r)>>1\n\n2.\u5f53\u4e8c\u5206\u201c\u80fd\u591f\u6ee1\u8db3\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u201d\u65f6\u8981\u7279\u5224\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff08\u9632\u6b62\u6ca1\u6709\u4e00\u4e2a\u64cd\u4f5c\u6ee1\u8db3\uff09\n\n\u5f53\u4e8c\u5206\u201c\u4e0d\u6ee1\u8db3\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u201d\u65f6\u8981\u7279\u5224\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\uff08\u9632\u6b62\u6240\u6709\u64cd\u4f5c\u90fd\u6ee1\u8db3\uff09\n\n\u4ece\u8fd9\u4e2a\u9898\u76ee\u6765\u770b\uff0c\u4e8c\u5206\u540e\u8005\u66f4\u4f73\uff0c\u4f46\u6211\u4e8c\u5206\u7684\u662f\u524d\u8005\uff0c\u5bfc\u81f4\u4ea4\u4ee3\u7801\u65f6\u53ea\u6709 95\u5206\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\nint n,m;\nint d[maxn],l[maxn],r[maxn]; \nint a[maxn],t[maxn];\nbool check(int x){\n\t//\u6784\u9020\u5dee\u5206\u6570\u7ec4\n\tfor(int i=1;i<=n;++i)t[i]=a[i]-a[i-1];\n\t//\u4ece1\u5230x\u6765\u533a\u95f4\u51cf\n\tfor(int i=1;i<=x;++i)\n\t\tt[l[i]]-=d[i],t[r[i]+1]+=d[i];\n\t//\u5224\u65ad\u6709\u6ca1\u6709\u5c0f\u4e8e0\u7684\n\tint sum=0; \n\tfor(int i=1;i<=n;++i){\n\t\tsum+=t[i];\n\t\tif(sum<0)return false;\n\t}\n\treturn true;\n}\nint main()\n{\n\t//\u8bfb\u5165 \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=m;++i)\n\t\tscanf(\"%d%d%d\",&d[i],&l[i],&r[i]);\n\t//\u7279\u5224\n\tif(check(m)){\n\t\tprintf(\"0\\n\");\n\t\treturn 0;\n\t}\n\telse if(!check(1)){\n\t\tprintf(\"-1\\n1\\n\");\n\t\treturn 0;\n\t}\n\t//\u5bf9\u8ba2\u5355\u8fdb\u884c\u4e8c\u5206\n\tint left=1,right=m;\n\twhile(left<right){\n\t\tint mid=(left+right+1)>>1;\n\t\tif(check(mid))left=mid;\n\t\telse right=mid-1;\n\t}\n\t//\u8f93\u51fa\u7b54\u6848\n\tprintf(\"-1\\n%d\\n\",left+1);\n\treturn 0;\n}\n```",
        "postTime": 1564655678,
        "uid": 97238,
        "name": "forlight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u672c\u9898\u8981\u6c42\uff0c\u79df\u501f\u8005\u7684\u8bf7\u6c42\u662f\u8981\u4fdd\u8bc1\u5148\u5230\u5148\u5f97\u7684\uff0c\u5982\u679c\u524d\u9762\u4e00\u4e2a\u4eba\u65e0\u6cd5\u6ee1\u8db3\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6240\u6709\u4eba\u90fd\u662f\u65e0\u6cd5\u6ee1\u8db3\u7684\uff0c\u4fdd\u8bc1\u4e86\u7b54\u6848\u7684\u5355\u8c03\u3001\u552f\u4e00\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u80fd\u591f\u6ee1\u8db3\u7684\u4eba\uff0c\u6765\u67e5\u627e\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6ee1\u8db3\u7684\u4eba\n\n\u5269\u4e0b\u7684\u5c31\u662fjudge\u90e8\u5206\uff0c\u672c\u9898\u7684\u6570\u636e![7](https://s2.ax1x.com/2019/07/30/eGDpbF.png)\uff0c\u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u66b4\u529b\u7684O(n^2)\u6c42\u89e3\u3002\u56e0\u6b64\uff0c\u5dee\u5206\u5c31\u662f\u4e00\u79cd\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u6c42\u51fa\u90e8\u5206\u7d2f\u52a0\u7684\u6570\u7ec4\uff0c\u800c\u4e14\u662fO(n)\u7684\n\n\u672c\u9898\u96be\u70b9\uff1a\u5dee\u5206\n\n\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u5c06\u6570\u7ec4a\u7684\u4e00\u90e8\u5206\u7d2f\u52a0\u56fa\u5b9a\u7684\u6570\u5b57\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6570\u7ec4b[i]\u8868\u793aa[i]-a[i-1]\u3002\u4e3e\u4f8b\uff0c\u73b0\u5728\u60f3\u8981\u628a\u6570\u7ec4a[5]~a[9]\u5168\u90fd+3\uff0c\u5c31\u53ef\u4ee5\u5148inc(b[5],3);dec(b[10],3)\u3002\n\n```pascal\n  for i:=1 to x do\n  begin\n    inc(b[s[i]],d[i]);\n    dec(b[t[i]+1],d[i]);\n  end;\n```\n\n![8](https://s2.ax1x.com/2019/07/30/eGDtr8.png)\n\n\u505a\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\uff0c\u5728\u7528O(n)\u626b\u4e00\u904d\u5c31\u53ef\u4ee5\u5f97\u51fa\u6570\u7ec4a\u4e86\u3002\n\n```pascal\n  for i:=1 to n do\n  begin\n    a[i]:=a[i-1]+b[i];\n```\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```pascal\nvar\n  n,m,i,z,y,mid,ans:longint;\n  r,d,s,t,b,a:array[0..1000001] of longint;\nfunction pd(x:longint):boolean;//\u5224\u65ad\u4eba\u6570\u662f\u5426\u6ee1\u8db3\nvar i:longint;\nbegin\n  for i:=1 to n do\n    b[i]:=0;\n  for i:=1 to x do//\u6c42\u51fa\u6570\u7ec4a\u7684\u5dee\n  begin\n    inc(b[s[i]],d[i]);\n    dec(b[t[i]+1],d[i]);\n  end;\n  a[0]:=0;\n  for i:=1 to n do//\u6c42\u51fa\u6570\u7ec4a\n  begin\n    a[i]:=a[i-1]+b[i];\n    if a[i]>r[i] then\n      exit(false);\n  end;\n  exit(true);\nend;\nbegin\n  read(n,m);\n  for i:=1 to n do\n    read(r[i]);\n  for i:=1 to m do\n    read(d[i],s[i],t[i]);\n  if pd(m) then//\u5982\u679c\u90fd\u80fd\u6ee1\u8db3\uff0c\u8f93\u51fa\u20180\u2019\n  begin\n    writeln('0');\n    halt;\n  end;\n  z:=0;y:=m-1;\n  while (z<=y) do//\u4e8c\u5206\u6700\u5927\u6ee1\u8db3\u4eba\u6570\n  begin\n    mid:=(z+y) shr 1;\n    if pd(mid) then\n    begin\n      ans:=mid;\n      z:=mid+1;\n    end\n    else\n      y:=mid-1;\n  end;\n  writeln('-1');//\u4f9d\u636e\u9898\u610f\n  writeln(ans+1);\nend.\n```\n\n",
        "postTime": 1564463939,
        "uid": 219900,
        "name": "\u4e16\u754c\u7ecf\u5178",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "![](http://219.153.61.2:9000/imgupload/problem_1136_026791d52c6c0169cf6ea6cc6a41ceb8.png)\n![](http://219.153.61.2:9000/imgupload/problem_1136_84da4400a07475ac7c033d19a3d7c0df.png)\n\n## **\u66b4\u529b**\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u66b4\u529b\u679a\u4e3e\u5982\u679c\u8fd0\u6c14\u597d\u7684\u8bdd\u5e94\u8be5\u80fd\u62ff\u523050\u5206\u5de6\u53f3\uff08O(N*M)\uff09\u5177\u4f53\u65b9\u6cd5\u662f\u73b0\u5c06\u6240\u6709\u8ba2\u5355\u52a0\u8d77\u6765\uff0c\u5728\u4e00\u4e2a\u4e00\u4e2a\u51cf\uff0c\u76f4\u5230\u7b26\u5408\u9898\u76ee\u8981\u6c42\n\n## **\u6b63\u89e3**\n\n\u8fd9\u9053\u9898\u6b63\u89e3\u7684\u8bdd\u6211\u505a\u7684\u662f\u4e8c\u5206\uff0c~~\u56e0\u4e3a\u4e0d\u4f1a\u7ebf\u6bb5\u6811~~\uff0c\u4e8c\u5206\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u4e3b\u8981\u8bb2\u4e00\u8bb2\u524d\u7f00\u548c\u7684\u5904\u7406\n\u6211\u4eec\u7528sum[i]\u6765\u8868\u793a\u7b2ci\u5929\u9700\u8981\u7528\u591a\u5c11\u6559\u5ba4\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406\u8fb9\u754c\uff0c\u5728\u5904\u7406\u524d\u7f00\u548c\n\u6bd4\u5982\uff1a\nd[i]=5,s[i]=2,t[i]=4 \u8fd9\u65f6sum\u6570\u7ec4\u4e3a 0 0 0 0 0 0\n\n\u6211\u4eec\u5c06sum[s[i]]\u52a0\u4e0ad[i] \u5c06sum[t[i]+1]\u51cf\u53bbd[i]\n\n\u8fd9\u65f6sum\u6570\u7ec4\u4e3a 0 2 0 0 -2 0 0\n\n\u5c06\u6240\u6709i\u5904\u7406\u5b8c\u4e4b\u540e\u518d\u5c06sum[i]\u52a0\u4e0asum[i-1]\u8fdb\u884c\u524d\u7f00\u548c\u64cd\u4f5c\n\n\u8fd9\u65f6sum\u6570\u7ec4\u4e3a 0 2 2 2 0 0 0\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u65f6sum[2]\u5230sum[4]\u90fd\u5df2\u7ecf\u52a0\u4e0a\u4e86d[i]\n\n## **Code**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,sum[1000001],d[1000001],s[1000001],t[1000001],r[1000001],ans;\nbool check(int x){\n    memset(sum,0,sizeof(sum));\n    for(int i=1;i<=x;i++) sum[s[i]]+=d[i],sum[t[i]+1]-=d[i];\n    for(int i=1;i<=n;i++) sum[i]+=sum[i-1];\n    for(int i=1;i<=n;i++) if(sum[i]>r[i]) return 0;\n    return 1;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) cin>>r[i];\n    for(int i=1;i<=m;i++) cin>>d[i]>>s[i]>>t[i];\n    int left=1,right=m,mid;\n    while(left<=right){\n        mid=(left+right)/2;\n        if(check(mid)) ans=mid,left=mid+1;\n        else right=mid-1;\n    }\n    if(ans==m) cout<<\"0\";\n    else cout<<\"-1\"<<endl<<ans+1;\n    return 0;\n}\n\n```\n",
        "postTime": 1563364282,
        "uid": 186573,
        "name": "Boring__Zheng",
        "ccfLevel": 6,
        "title": "\u3010NOIP2012 \u63d0\u9ad8\u7ec4 day2\u3011\u501f\u6559\u5ba4 \u9898\u89e3"
    },
    {
        "content": "\u5230[$My$ $Blog$](https://www.cnblogs.com/Garbage-Only-one/p/11170101.html)\u98df\u7528\u66f4\u4f73\u3002\n\n\u8fd9\u662f\u6211\u7684\u7b2c\u4e8c\u9053\u7ebf\u6bb5\u6811\u7684\u7ec3\u4e60\u9898\u3002\u53c8\u662f\u4e00\u5929\u534a,\u6211\u592a\u83dc\u4e86\u3002\n\n$\\color{white}\\text{\u83dc=CAI=Can't AK IOI}$\n\n\u5148\u7ed9\u4f60\u4eec\u63a8\u8350\u4e00\u6279[\u7ebf\u6bb5\u6811\u5165\u95e8\u9898](https://www.luogu.org/discuss/show/122164)\u3002\n\n\u597d\u4e86,\u7136\u540e\u518d\u6765\u8bf4\u8bf4\u505a\u6cd5\u3002\n\n## 45\u5206\u66b4\u529b\n\n\u8fd9\u4e2a\u56e0\u8be5\u4e0d\u8981\u8bb2\u4e86\u5427,\u624b\u52a8\u6a21\u62df\u5440\u3002\n\n## 100\u5206\u5dee\u5206+\u6811\u72b6\u6570\u7ec4\n\n\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u4e00\u770b[\u8fd9\u9898](https://www.luogu.org/problemnew/show/P3368),\u5c31\u660e\u767d\u4ec0\u4e48\u662f\u5dee\u5206+\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\u4e86\u3002\n\n~~\u90a3\u9898\u751a\u81f3\u53ef\u4ee5\u5361\u6389\u7ebf\u6bb5\u6811~~\n\n## 5\u5206\u7ebf\u6bb5\u6811\n\n~~\u6211\u7684\u5947\u8469\u505a\u6cd5~~\n\n\u9996\u5148,\u628a\u6bcf\u4e00\u5929\u5f53\u6210\u4e00\u4e2a\u8981\u7ef4\u62a4\u7684\u503c\u3002\n\n\u7136\u540e,\u6784\u5efa\u51fa\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\n\n\u518d\u63a5\u7740,\u6bcf\u4e00\u4e2a\u8ba2\u5355\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u51cf\u6cd5,\u6253\u6807\u8bb0,\u4e0b\u4f20\u3002\n\n~~\u4e0b\u4f20\u7684\u65f6\u5019\u53ea\u8981\u6709\u4efb\u610f\u8282\u70b9\u7684`data`\u5c0f\u4e8e0,\u6807\u8bb0,\u518d\u8f93\u51fa\u3002~~\n\n~~\u663e\u7136\u662f\u4e2a\u9519\u7684\u3002~~\n\n\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fd8\u80fd\u8fc7\u4e00\u4e2a\u70b9\u3002\n\n**\u4f46\u662f\u5982\u679c\u60a8\u60f3\u5230\u4e86\u8fd9\u79cd\u505a\u6cd5,\u5e76\u610f\u8bc6\u5230\u4e86\u9519\u8bef,\u90a3\u4e48\u60a8\u79bb\u6210\u529f\u5df2\u7ecf\u4e0d\u8fdc\u4e86\u3002**\n\n## 95\u5206\u7ebf\u6bb5\u6811\n\n~~\u4e0d\u8981\u8138\u611f\u8c22[mrsrz](https://www.luogu.org/space/show?uid=6813)\u6307\u51fa~~\n\n\u9996\u5148,\u6211\u4eec\u8981\u77e5\u9053\u4e0a\u9762\u7684\u505a\u6cd5\u9519\u5728**\u5e94\u8be5\u7edf\u8ba1\u533a\u95f4\u6700\u5c0f\u503c,\u800c\u4e0d\u662f\u533a\u95f4\u4efb\u610f\u503c**!!!\n\n\u800c\u4e14,\u6211\u4eec\u77e5\u9053**\u5bf9\u4e8e\u4e00\u6574\u4e2a\u533a\u95f4\u51cfC,\u6700\u5c0f\u503c\u4e5f\u4f1a\u51cfC**\u3002\n\n\u90a3\u4e48,\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u5b8c\u6210\u540e\u5bf9\u4e8e\u4e00\u6574\u4e2a\u533a\u95f4\u8fdb\u884c\u7edf\u8ba1\u6700\u5c0f\u503c\u4e0d\u4e45\u597d\u4e86\u5417?\n\n\u90a3\u4e48\u601d\u8def\u662f:**\u5148\u6253\u4e0a\u6807\u8bb0,`down`,\u5de6\u53f3\u533a\u95f4\u9012\u5f52,`up`**\u3002\n\n\u5176\u4e2d`down`\u662f\u6807\u8bb0\u4e0b\u4f20\u64cd\u4f5c,`up`\u662f`min`\u503c\u66f4\u65b0\u64cd\u4f5c\u3002\n\n_\u60f3\u4e00\u60f3,`min`\u4e3a\u4ec0\u4e48\u662f`up`\u800c\u4e0d\u662f`down`?_\n\n\u7136\u540e\u5c31\u53bb\u5199\u4ee3\u7801\u5427!\n\n~~\u9057\u61be\u7684\u662f,\u6709\u4e00\u4e2a\u70b9\u88ab\u5361\u4e86\u3002~~\n\n## 100\u5206\u7ebf\u6bb5\u6811+\u5361\u5e38\n\n\u4f60\u53ef\u4ee5\u53bb\u8bfb\u5165\u4f18\u5316,`register`,\u7b49\u7b49\u7b49\u7b49\u3002\n\n~~\u4e5f\u53ef\u4ee5\u70b9\u51fb\u63d0\u4ea4\u4e0a\u65b9\u7684\u4e00\u4e2a\u6807\u7b7e\u3002~~\n\n## 100\u5206\u4e8c\u5206\n\n\u4e8c\u5206\u624d\u662f\u672c\u9898\u7684\u6b63\u89e3,\u4f46\u662f\u6211\u6ca1\u6709\u53bb\u5c1d\u8bd5\u3002\n\n\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5**\u90fd\u8bd5\u4e00\u8bd5**\u5440\uff01\n\n\u90fd\u8bd5\u4e00\u8bd5,\u603b\u662f\u6709\u597d\u5904\u7684\uff01\n\n## \u4ee3\u7801\n\n~~\u4f60\u60f3\u7684\u592a\u7f8e\u4e86\u3002~~\n\n```\n9552fb97479f2868a8a3dba14bfd6805b2eeff32\n```",
        "postTime": 1562829196,
        "uid": 104380,
        "name": "garbage2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "~~\uff08\u8c22\u9080\uff09~~\n\n\u5404\u4f4d\u4e8c\u5206\u7ebf\u6bb5\u6811\u5927\u4f6c\u592a\u5de8\u4e86emmm\uff0c\u83dc\u9e21\u592a\u4e45\u6ca1\u5199\u4e8c\u5206\uff0c\u770b\u6b64\u9898\u7b2c\u4e00\u53cd\u5e94\u662f\u5dee\u5206\u6c34\u9898\u3002\n\n\u8fd9\u9053\u9898\u76ee\u6700\u660e\u663e\u7684\u63d0\u793a\u6211\u662f\u5dee\u5206\u7684\u5730\u65b9\u5728\u4e8e**\u533a\u95f4\u52a0\u51cf**\uff0c\u6570\u636e\u572810000\u4ee5\u4e0a\u66b4\u529b\u5730\u65e0\u8111\u8ba1\u7b97\u662f\u80af\u5b9a\u4f1aT\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u79cd\u5927\u533a\u95f4\u7ea7\u522b\u8fd0\u7b97\u95ee\u9898\uff0c\u901a\u5e38\u6211\u4eec\u8003\u8651\u7684\u6709**\u6811\u72b6\u6570\u7ec4\uff08\u7ebf\u6bb5\u6811\uff09**\u548c**\u5dee\u5206**\u3002\n\n\u56e0\u4e3a\u672c\u9898\u4e0d\u4f1a\u6d89\u53ca\u5230\u533a\u95f4\u4fee\u6539\uff0c\u666e\u901a\u7684\u5dee\u5206\u5c31\u53ef\u4ee5\u8fc7\u3002\n\n\u5dee\u5206\u7684\u542b\u4e49\u5728\u4e8e\uff1a\u5bf9\u4e8e\u4e00\u6bb5\u8981\u8fdb\u884c\u76f8\u540c\u52a0\u51cf\u64cd\u4f5c\u7684\u533a\u95f4\uff0c**\u5b83\u8fdb\u884c\u64cd\u4f5c\u7684\u7ed3\u679c\u662f\u4f1a\u6bd4\u540e\u9762\u7684\u533a\u95f4\u5927\u6216\u5c0f\u4e00\u4e2a\u5e38\u6570**\uff0c\u6211\u4eec\u5728\u610f\u7684\u53ea\u662f\u6700\u7ec8\u6548\u679c\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u5b8c\u5168\u66b4\u529b\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53ea\u9700\u8981**\u8bb0\u5f55\u8fd9\u6bb5\u533a\u95f4\u8fdb\u884c\u8fd0\u7b97\u540e\u7684\u6548\u679c**\u5c31\u597d\u4e86\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u91cd\u65b0\u58f0\u660e\u4e00\u4e2a\u533a\u95f4\u6548\u679c\u6570\u7ec4\uff0c\u5728\u9700\u8981\u8fd0\u7b97\u7684\u533a\u95f4\u7684\u5f00\u5934\u5143\u7d20\u7684\u4e0b\u6807\u5904\u52a0\u4e0a\u8fd9\u4e2a\u5e38\u6570\uff0c\u5728\u8fd9\u4e2a\u533a\u95f4\u672b\u5c3e\u5143\u7d20\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u6807\u51cf\u53bb\u8fd9\u4e2a\u5e38\u6570\uff0c\u5c31\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u533a\u95f4\u4ea7\u751f\u7684\u6548\u679c\u3002\n\n\u5f53\u6211\u4eec\u9700\u8981\u6c42\u6700\u7ec8\u533a\u95f4\u7684\u65f6\u5019\uff0c\u53ea\u9700\u4ece\u5f00\u5934\u5f00\u59cb\u505a\u4e00\u6b21\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u672c\u9898\u5728\u5904\u7406\u597d\u5dee\u5206\u6570\u7ec4\u540e\u53ea\u9700\u4ece\u5934\u626b\u4e00\u904d\uff0c\u9047\u89c1\u7b2c\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u5929\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u5728\u4ece\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5f00\u59cb\u9a8c\u8bc1\uff0c\u9047\u5230\u7b2c\u4e00\u4e2a\u4f7f\u5f53\u524d\u5929\u6570\u4e0d\u5408\u6cd5\u7684\u8ba2\u5355\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8d34\u4e0b\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct edge\n{\n  int x;\n  int y;\n  int v;\n}e[1001000];\nlong long a[1001000];\nlong long sum[1001000];\nvoid init()\n{\n  scanf(\"%d %d\\n\",&n,&m);\n  for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n  for(int i=1;i<=m;i++)\n    scanf(\"%d %d %d\\n\",&e[i].v,&e[i].x,&e[i].y);\n}\nvoid work_()\n{\n  memset(sum,false,sizeof(sum));\n  for(int i=1;i<=m;i++)\n  {\n    sum[e[i].x]+=e[i].v;\n    sum[e[i].y+1]-=e[i].v;\n  }\n  for(int i=1;i<=n;i++)\n    sum[i]+=sum[i-1];\n}\nint main()\n{\n  init();\n  work_();\n  int temp=0;\n  for(int i=1;i<=n;i++)\n  {\n    if(sum[i]>a[i])\n    {\n\t  temp=i;  //\u627e\u5230\u4e0d\u5408\u6cd5\u7684\u5929\u6570 \n\t  break;\n\t}\n  }\n  long long k=0;\n  for(int i=1;i<=m;i++)\n  {\n    if(e[i].x<=temp&&e[i].y>=temp)  //\u5982\u679c\u5f53\u524d\u533a\u95f4\u6bb5\u5305\u542b\u4e86\u4e0d\u5408\u6cd5\u5929\u6570 \u8fdb\u884c\u5904\u7406 \n    {\n      k+=e[i].v;\n\t  if(k>a[temp])\n\t  {\n\t    cout<<-1<<endl;\n\t    cout<<i<<endl;\n\t    return 0;\n\t  }\n\t}\n  }\n  cout<<0<<endl;\n  return 0;\n} \n\n\n```\n\n\u6d1b\u8c37\u9996\u6587\uff0c\u611f\u8c22\u5404\u4f4ddalao\u9605\u8bfb",
        "postTime": 1544942524,
        "uid": 11707,
        "name": "OguraEn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8d34\u4e00\u4e2a\u849f\u84bb\u7684**\u5947\u602a**\u601d\u8def\uff08\u786c\u7528\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u641e\n\n\u601d\u60f3\u8fd8\u662f**\u4e8c\u5206**\uff0c\u4f46\u5982\u679c\u76f4\u63a5\u4e8c\u5206\u518d\u6811\u72b6\u6570\u7ec4\u6c42\u548c\uff0cO(nmlogm)\uff0c\u5fc5\u7136**TLE**\uff08\u53ea\u8fc74\u4e2a\u70b9\u2026\u2026\n\n\u5982\u679c\u5b9a\u4e49cur\u4e3a\u6811\u72b6\u6570\u7ec4\u5df2\u7ecf\u5904\u7406\u7684\u6559\u5ba4\u7533\u8bf7\u6570\u91cf\uff0c\u4e8c\u5206\u65f6\u5224\u65adcur\u4e0emid\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u518d\u4ececur\u72b6\u6001\u5230mid\u72b6\u6001\uff0cO(nlogm)(?)\n\n# Code:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nint n,m;\nll val[1000010];\nll tot[1000010];\nint L[1000010],R[1000010];ll W[1000010];\nint l,r;\nint cur;\n\ninline int lowbit(int x){\n\treturn x&(-x);\n}\n\nvoid add(int x,ll w){\n\twhile(x<=n){\n\t\tval[x]+=w;\n\t\tx+=lowbit(x);\n\t}\n}\n\nll find(int x){\n\tll ans=0;\n\twhile(x>0){\n\t\tans+=val[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\n\nbool func(int mid){\n\t//memset(val,0,sizeof(val));\n\tint i;\n\tif(cur<mid){\n\t\tfor(i=cur+1;i<=mid;i++){\n\t\t\tadd(L[i],W[i]);add(R[i]+1,-W[i]);\n\t\t}\n\t}\n\telse if(cur>mid){\n\t\tfor(i=cur;i>mid;i--){\n\t\t\tadd(L[i],-W[i]);add(R[i]+1,W[i]);\n\t\t}\n\t}\n\tcur=mid;\n\tfor(i=1;i<=n;i++)\n\t\tif(find(i)>tot[i])return false;\n\treturn true;\n}\n\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tint i;\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&tot[i]);\n\tfor(i=1;i<=m;i++)\n\t\tscanf(\"%lld%d%d\",&W[i],&L[i],&R[i]);\n\tr=m+1;\n\twhile(r-l>1){\n\t\tint mid=(l+r)>>1;\n\t\tif(func(mid))\n\t\t\tl=mid;\n\t\telse r=mid;\n\t}\n\t//printf(\"%d\",func(2));\n\tif(l==m)printf(\"0\");\n\telse printf(\"-1\\n%d\",l+1);\n\treturn 0;\n}\n\n```",
        "postTime": 1541072422,
        "uid": 91823,
        "name": "diltraser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "p1083          \n\u9898\u9762      \nn\u5929\u7684\u501f\u6559\u5ba4\u4fe1\u606f\uff0c\u5176\u4e2d\u7b2ci\u5929\u5b66\u6821\u6709ri\u4e2a\u6559\u5ba4\u53ef\u4f9b\u79df\u501f\u3002\u5171\u6709m\u4efd\u8ba2\u5355\uff0c\u6bcf\u4efd\u8ba2\u5355\u7528\u4e09\u4e2a\u6b63\u6574\u6570\u63cf\u8ff0\uff0c\u5206\u522b\u4e3adj,sj,tj\uff0c\u8868\u793a\u67d0\u79df\u501f\u8005\u9700\u8981\u4ece\u7b2csj\u5929\u5230\u7b2ctj\u5929\u79df\u501f\u6559\u5ba4\uff08\u5305\u62ec\u7b2csj\u5929\u548c\u7b2ctj\u5929\uff0c\u6bcf\u5929\u9700\u8981\u79df\u501fdj\u4e2a\u6559\u5ba4\u3002\n\n\u6211\u4eec\u5047\u5b9a\uff0c\u79df\u501f\u8005\u5bf9\u6559\u5ba4\u7684\u5927\u5c0f\u3001\u5730\u70b9\u6ca1\u6709\u8981\u6c42\u3002\u5373\u5bf9\u4e8e\u6bcf\u4efd\u8ba2\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u5929\u63d0\u4f9bdj\u4e2a\u6559\u5ba4\uff0c\u800c\u5b83\u4eec\u5177\u4f53\u662f\u54ea\u4e9b\u6559\u5ba4\uff0c\u6bcf\u5929\u662f\u5426\u662f\u76f8\u540c\u7684\u6559\u5ba4\u5219\u4e0d\u7528\u8003\u8651\u3002     \n\n\u6309\u7167\u8ba2\u5355\u7684\u5148\u540e\u987a\u5e8f\u4f9d\u6b21\u4e3a\u6bcf\u4efd\u8ba2\u5355\u5206\u914d\u6559\u5ba4\u3002\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\u6307\u4ece\u7b2csj\u5929\u5230\u7b2ctj\u5929\u4e2d\u6709\u81f3\u5c11\u4e00\u5929\u5269\u4f59\u7684\u6559\u5ba4\u6570\u91cf\u4e0d\u8db3dj\u4e2a\u3002  \n#### \u8f93\u5165\uff1a\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6b63\u6574\u6570n,m\uff0c\u8868\u793a\u5929\u6570\u548c\u8ba2\u5355\u7684\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u4e2d\u7b2ci\u4e2a\u6570\u4e3ar \ni\uff0c\u8868\u793a\u7b2ci\u5929\u53ef\u7528\u4e8e\u79df\u501f\u7684\u6559\u5ba4\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765\u6709m\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570d_j,s_j,t_j\uff0c\u8868\u793a\u79df\u501f\u7684\u6570\u91cf\uff0c\u79df\u501f\u5f00\u59cb\u3001\u7ed3\u675f\u5206\u522b\u5728\u7b2c\u51e0\u5929\u3002\n\n\u6bcf\u884c\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\u5747\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5929\u6570\u4e0e\u8ba2\u5355\u5747\u7528\u4ece1\u5f00\u59cb\u7684\u6574\u6570\u7f16\u53f7\u3002\n\n#### \u8f93\u51fa\uff1a\n\u5982\u679c\u6240\u6709\u8ba2\u5355\u5747\u53ef\u6ee1\u8db3\uff0c\u5219\u8f93\u51fa\u53ea\u6709\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u65700\u3002\u5426\u5219\uff08\u8ba2\u5355\u65e0\u6cd5\u5b8c\u5168\u6ee1\u8db3\uff09\u8f93\u51fa\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e00\u4e2a\u8d1f\u6574\u6570-1\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u9700\u8981\u4fee\u6539\u8ba2\u5355\u7684\u7533\u8bf7\u4eba\u7f16\u53f7\u3002            \n## 1\u00b7\u524d\u7f00\u548c\uff0c\u5dee\u5206\uff0c\u4e8c\u5206\n### \uff081\uff09\u524d\u7f00\u548c\uff1a     \n\u524d\u7f00\u548c\u5373\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5230\u5f53\u524d\u5143\u7d20\u7684\u7d2f\u52a0\uff0c\u5373\u03a3    \n\u5bf9\u4e8e\u524d\u7f00\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bfb\u5165\u5143\u7d20\u65f6\u8bbe\u7f6esum[]\u6570\u7ec4\uff0c\u8bfb\u5165\u5143\u7d20\uff0c\u5047\u5982\u8bfb\u5230\u7b2ci\u4e2a\u5143\u7d20d[i],\u5219\u8bb0\u5176\u524d\u7f00\u548c\u3000\u3000\u3000\u3000\n#### sum[i]=sum[i-1]+d[i];             \n\n\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u6cd5\u6211\u4eec\u53ef\u4ee5\u5728\u8bfb\u5165\u65f6\u5c31\u5904\u7406\u51fa\u524d\u7f00\u548c        \n\u5904\u7406\u51fa\u524d\u7f00\u548c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bb9\u65a5\u539f\u7406\u5feb\u901f\u627e\u51fa\u5404\u4e2a\u533a\u95f4\u7684\u548c\uff08\u5728\u4e0d\u9700\u4f7f\u7528\u7ebf\u6bb5\u6811\u7b49\u7ed3\u6784\u65f6\u901a\u5e38\u662f\u4e00\u79cd\u5f88\u4f18\u7684\u65b9\u6cd5\uff09\u3002  \n\u6bd4\u5982\u60f3\u77e5\u9053i~j\u7684\u533a\u95f4\u548c(\u8868\u793a\u4e3asum[i][j])\uff0c\u53ea\u9700\u8981\u5229\u7528\u4e00\u70b9\u7b80\u5355\u7684\u5bb9\u65a5\uff1a   \n#### sum[i][j]=sum[1][j]-sum[1][i-1]           \n~~\uff08\u4e00\u53e5\u8bdd\uff1a\u7528\u6574\u4e2a\u5927\u96c6\u5408\u51cf\u53bb\u8865\u96c6\uff0c\u7b80\u5355\u70b9\u5c31\u662f\u5148\u90fd\u7b97\u4e0a\uff0c\u518d\u51cf\u53bb\u4e0d\u8be5\u7b97\u4e0a\u7684\uff09~~\n\uff08\u8fd9\u91cc\u4e0d\u4ecb\u7ecd\u4e8c\u7ef4\u2026\u2026\u548c\u8fd9\u9898\u5b8c\u5168\u4e0d\u4e00\u5c42\u6b21\uff09     \n\u50cf\u8fd9\u6837\u8fd8\u6709\u597d\u591a\u79cd\u73a9\u6cd5\uff0c\u53ea\u8981\u624b\u73a9\u4e00\u4e0b\u5904\u7406\u597d\u8fb9\u754c\u5c31\u6ca1\u95ee\u9898\uff08\u9694\u58c1\u7684p1026\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u6709\u6d89\u53ca\u524d\u7f00\u548c\u7684\u5de7\u73a9\u6cd5\uff09        \n### \uff082\uff09\u5dee\u5206       \n\u5dee\u5206\u5728\u6982\u5ff5\u4e0a\u76f8\u5bf9\u4e8e\u524d\u7f00\u548c\uff0c~~\u4f46\u7406\u89e3\u4e0a\u7ed3\u5408\u4e24\u8005\u5e76\u6ca1\u6709\u610f\u4e49~~\u8fd9\u91cc\u5355\u72ec\u53bb\u7406\u89e3\u5dee\u5206\u3002               \n\n\u5c31\u5982\u8fd9\u9053\u9898\u4e00\u6837\uff0c\u6709\u65f6\u4f1a\u9047\u5230\u533a\u95f4\u4fee\u6539\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u8fd9\u9898\u7684di\uff0csi\uff0cti\uff0c\u5c31\u76f8\u5f53\u4e8e\u7ed9\u533a\u95f4\uff08si\uff0cti\uff09\u90fd\u51cf\u53bbdi\uff08\u52a0\u4e0a\u8d1fdi\uff09\u3002          \n\n\u6211\u4eec\u8003\u8651\u4e00\u79cd\u975e\u7ebf\u6bb5\u6811\u7684\u8f83\u4f18\u7b97\u6cd5\u3002\u539f\u6765\u7684\u64cd\u4f5c\u662f\u5bf9\u4e00\u4e2a\u533a\u95f4\u6bcf\u4e2a\u6570\u90fd\u66f4\u6539\uff0c\u957fm\u7684\u533a\u95f4\u8fdb\u884cn\u4e2a\u4fee\u6539\u5c31\u5927\u6982\u8981\u5230O(m*n)\u7684\u590d\u6742\u5ea6\u4e86\u3002\u65e2\u7136\u7ed9\u6bcf\u4e2a\u70b9\u90fd\u6539\u4f1a\u70b8\u3002\n\n _ \u90a3\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u8f83\u5c11\u7684\u70b9\u8bb0\u5f55\u51fa\u4fee\u6539\u7684\u4fe1\u606f\u5462\uff1f _        \n \n\u8981\u77e5\u9053\u6211\u4eec\u7684\u4fee\u6539\u503cdi\u76f8\u5f53\u4e8e\u4fee\u6539\u524d\u540e\u6570\u503c\u7684\u5dee\uff0c\u540c\u65f6\u4e5f\u662f\u548c\u6ca1\u4fee\u6539\u7684\u6570\u7684\u5dee\u3002\u8fd9\u65f6\u5019\u628a\u90e8\u5206\u5dee\u8868\u793a\u51fa\u6765\u5c31\u662f\u5dee\u5206\uff08\u5927\u96fe\uff09 \n\n\u5177\u4f53\u4e0a\u5dee\u5206\u7684\u5b9e\u73b0\uff0c\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e2a\u72ec\u7acb\u6570\u7ec4\uff08\u8fd9\u91cc\u7528derta[]\uff0c\u5565\u610f\u601d\u62fc\u7740\u8bfb\u51fa\u6765\u5c31\u77e5\u9053\u4e86\uff08\u94a8\uff09\uff09\u3002\u5f53\u4f60\u83b7\u5f97\u533a\u95f4\u4fee\u6539\uff08si,ti\uff09di\u65f6\uff0c\u7ed9derta[si]\u6253\u6807\u8bb0\uff0c\u8868\u793a\u4ecesi\u5230m\uff08\u5168\u957f\u7684\u53f3\u8fb9\u754c\uff09\u90fd\u88ab\u52a0/\u51cf\u4e86di:         \n#### derta[si]+=di\n\u53ef\u662f\u8fd9\u6837\u5bf9\u4e8eti+1\u5230n\u88ab\u52a0\u91cd\u4e86\uff0c\u6211\u4eec\u8981\u518d\u5728derta[ti+1]\u8bb0\u5f55\u4e00\u6b21di\uff0c\u8868\u793a\u628a\u4e4b\u540e\u7684\u6570\u90fd\u51cfdi\uff1a\n#### derta[ti+1]-=di\n\u8fd9\u6837\u4e0d\u65ad\u7ef4\u62a4\u5dee\u503c\uff0c\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u90e8\u5206\uff08\u533a\u95f4\uff09\u6211\u4eec\u5c31\u90fd\u6709\u4e86\u5176\u603b\u4fee\u6539\u91cf\uff0c\u4fee\u6539\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\uff0c\u7531\u4e8e\u4ecen\u4e2a\u70b9\u7684\u4fee\u6539\u6539\u4e3am\u4e2a\u70b9\u7684\u4fee\u6539\u4e24\u4e2a\u70b9\u7684\u4fee\u6539\uff0c\u964d\u4f4e\u4e86\u590d\u6742\u5ea6~~\uff08\u4e8c\u7ef4\u4e0d\u5728\u6b64\u53d9\u8ff0\uff09~~        \n### \uff083\uff09\u4e8c\u5206\n\u4e8c\u5206 \u53ef\u8c13\u662fnoip\u7684\u8d85\u7ea7\u5e38\u5ba2\u4e86\uff0c\u4e5f\u662foier\u7684\u8d85\u7ea7\u5e38\u5ba2\uff0c\u8fd0\u7528\u5728\u5404\u5904\u3002    \n\u4e8c\u5206\u7684\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4e2a\u4eba\u603b\u7ed3\uff1a\n#### \u6298\u534a\u67e5\u627e\n\u5728\u6570\u636e\u5bf9\u4e8c\u5206\u9002\u7528\u7684\u60c5\u51b5\u4e0b    \n\u5b9e\u73b0\uff1a\u627e\u5230\u4e2d\u95f4\u5143\u7d20mid\uff0c\u82e5mid\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u5411\u5de6\u8fb9\u53d6\u4e2d\u70b9\u627e\u66f4\u5c0f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u503c\uff1b\u82e5mid\u4e0d\u7b26\u5408\u5219\u5411\u53f3\u8fb9\u53d6\u4e2d\u70b9\u627e\u66f4\u5927\u7684\u503c\u770b\u662f\u5426\u7b26\u5408\u6761\u4ef6\n```\nint find(int l,int r){\n\t\tif(l==r)return l;\n\t\tint mid=(l+r)/2;\n        if(mid)find(l,mid);\n        else find(mid+1,r);\n        }\n```       \n\u7406\u60f3\u80fd\u964dlog2\u7ea7\u522b\uff1b\n\u4f46\u662f\u5173\u952e\u662f\u4ec0\u4e48\u65f6\u5019\u7528\uff08\u51fa\u9898\u4eba\u80af\u5b9a\u4f1a\u85cf\u8d77\u6765\u5440\uff09\u548c\u80fd\u4e0d\u80fd\u7528\u3002      \n\u9996\u5148\u5bf9\u4e8e\u80fd\u4e0d\u80fd\u7528\u597d\u529e\uff0c\u4e3b\u8981\u4e00\u79cd\u8981\u6c42**\u5de5\u4f5c\u6709\u5e8f\u6027**\uff0c\u6bd4\u5982\u672c\u9898\u6765\u7533\u8bf7\u7684\u4eba\u662f\u5148\u6765\u540e\u5230\u7684\uff1b\u53e6\u4e00\u79cd**\u6570\u636e\u6709\u5e8f\u6027**\uff0c\u6bd4\u5982\u4efb\u610f\u6709\u5e8f\u6570\u5217\u2026\u2026\n\u90a3\u4e48\u5bf9\u4e8e\u4ec0\u4e48\u65f6\u5019\u7528\u4e8c\u5206\uff0c\u8fd9\u91cc\u603b\u7ed3\u4e24\u79cd\uff1a      \n##### 1\u00b7\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6700\u5c0f\u503c\u6700\u5927\u7b49\u2026\u2026\n\u8fd9\u79cd\u4e00\u822c\u95ee\u9898\u53ef\u4ee5\u7406\u89e3\u4e3a\u6709\u4e00\u4e2a\u4e0a\u754c\uff08\u6216\u4e0b\u754c\uff09\u4f60\u6bcf\u6b21mid\u8981\u5224\u65ad\u662f\u5927\u4e8e\u8fb9\u754c\u8fd8\u662f\u5c0f\u4e8e\u8fb9\u754c\uff0c\u7136\u540e\u628a\u533a\u95f4\u6298\u534a\uff0c\u4e0d\u65ad\u67e5\u627e\u6700\u4f18\u4f18\u89e3\n##### 2\u00b7\u5224\u65ad\u53ef\u884c\u6027\uff08\u5e76\u627e\u5230\u67d0\u53ef\u884c/\u4e0d\u53ef\u884c\u4f4d\u7f6e\uff09\n\u8fd9\u79cd\u95ee\u9898\u4f60\u4f1a\u53d1\u73b0\u5982\u679cmid\u53ef\u884c\uff0c\u90a3\u524d\u9762\u7684\u90fd\u53ef\u884c\uff1b\u5982\u679cmid\u4e0d\u53ef\u884c\uff0c\u90a3\u540e\u9762\u7684\u80af\u5b9a\u4e5f\u4e0d\u53ef\u884c\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u4e8c\u5206\u4e86\n## 2.\u9898\u89e3\n\u9996\u5148~~\u9ad8\u8fbe~~55\u5206\u7684\u66b4\u529b\u76f4\u63a5\u6765\u4e00\u4e2a\u4eba\u628a\u6bcf\u5929\u7684\u6559\u5ba4\u6570\u51cf\u4e00\u4e0b\u2026\u2026\u7136\u540e\u5f53\u7b54\u6848\u6bd4\u8f83\u5f80\u540e\u7684\u65f6\u5019\u6bcf\u4e2a\u4eba\u7684\u6301\u7eed\u5929\u6570\u8fd8\u8f83\u957f\uff0c\u5c31\u4f1a\u76f4\u63a5\u88ab\u5361\u7206\uff0c\u51fa\u73b0\u4e00\u4e2a\u5f02\u5e38\u597d\u770b\u768450\u621655\u7684\u8bc4\u6d4b\u84dd\u7eff\u56fe     \n\u6b63\u89e3\uff1a      \n\u7528\u5dee\u5206\u7684\u601d\u8def\uff0c\u6bcf\u6b21\u4e0d\u76f4\u63a5\u4fee\u6539\u5168\u90e8\u4e86\uff0c\u5f00\u4e00\u4e2aderta[]\u6bcf\u6b21\u53ea\u5728derta[si]+=di,\u5e76\u5728derta[ti+1]-=di         \n\u5f00\u4e00\u4e2asumd\u6570\u7ec4\u7528\u4e8e\u7edf\u8ba1\u6bcf\u5929\u6240\u9700\u7684\u6559\u5ba4\uff0c\u5e76\u4e0e\u62e5\u6709\u7684\u6559\u5ba4\u6bd4\u8f83\uff0c\u6765\u5224\u65ad\u662f\u5426\u7533\u8bf7\u6210\u529f\uff1a\n```\nsumd[i]=sumd[i-1]+derta[i];\n        if(sumd[i]>r[i])return 0;\n```\n\u5982\u679c\u73b0\u5728\u6765\u4e86mid\u4e2a\u4eba\u53d1\u73b0\u6709\u7533\u8bf7\u4e0d\u8fc7\u7684\uff0c\u90a3\u540e\u9762\u80af\u5b9a\u90fd\u4e0d\u53ef\u884c\uff0c\u5411\u524d\u627e\uff0cr=mid\uff1b\u53cd\u4e4b\u5982\u679c\u4e00\u76f4\u5230mid\u8fd9\u4e2a\u4eba\u90fd\u53ef\u884c\uff0c\u90a3\u524d\u9762\u7684\u4eba\u4e00\u5b9a\u90fd\u53ef\u884c\uff0c\u53bb\u627e\u540e\u9762\uff0cl=mid+1\n\u6bcf\u6b21\u4e8c\u5206\u524d\u521d\u59cb\u5316\u4e00\u4e0bderta\u6570\u7ec4\u5c31\u597d\uff0c\u6700\u540e\u4e8c\u5206l==r\u65f6\u5c31\u662f\u7b54\u6848       \n\u53e6\u5916\u8fd9\u9053\u9898\u7ebf\u6bb5\u6811\u53ef\u8fc7\uff0c\u4e0d\u8fc7\u662f2000\u591ams\u2026\u2026\n## code\uff1a\n```\n#include<bits/stdc++.h>\n#define fu(i,q,w) for(register int i=q;i<=w;i++)\n#define fd(i,q,w) for(register int i=q;i>=w;i++) \nusing namespace std;\ntypedef int ll;\ninline ll read(){\n\tll ret=0,f=1;char c;\n\twhile((c=getchar())<'0'||c>'9')if(c=='-')f=-1;\n\twhile(c>='0'&&c<='9')ret=ret*10+(c-'0'),c=getchar();\n\treturn ret*f;\n}\nconst int maxn=1111111;\nll n,m;\nll r[maxn];//\u6bcf\u5929\u6709\u6559\u5ba4\u6570 \nll d[maxn],s[maxn],t[maxn];//\u4ece\u7b2csi\u5929\u5230ti\u5929\u6bcf\u5929\u7528di\u95f4\u6559\u5ba4 \nll derta[maxn],sumd[maxn];//\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u5929\u8981\u7528\u7684\u6559\u5ba4 \nvoid in(){\n\tn=read(),m=read();\n//\tprintf(\"%d %d\\n\",n,m);\n\tfu(i,1,n)\n\t\tr[i]=read();\n\tfu(i,1,m){\n\t\td[i]=read(),s[i]=read(),t[i]=read();\n\t\tderta[s[i]]+=d[i];\n        derta[t[i]+1]-=d[i]; //\u5dee\u5206\u7ef4\u62a4\u533a\u95f4 \n\t\t}\n\t} \nvoid mem(int mid){\n\tmemset(derta,0,sizeof(derta));//mid\u53d8\u5316\u65f6\u8981\u91cd\u65b0\u521d\u59cb\u5316derta\n\t//\u4f46\u8fd9\u91cc\u53ef\u4ee5\u4f18\u5316\uff0c\u4f18\u5316\u540e\u53ef\u4ece600+ms\u5230200~300+ms\uff0c\u4f46\u7531\u4e8e\u590d\u6742\u4ee3\u7801\u91cf\u800c\u4e14\u5f53\u524d\u590d\u6742\u5ea6\u4ee5\u53ca\u5b8c\u5168\u53ef\u8fc7\u6240\u4ee5\u4e0d\u5c1d\u8bd5 \n    fu(i,1,mid)\n    {\n        derta[s[i]]+=d[i];\n        derta[t[i]+1]-=d[i]; \n    }\n}\nint check()//\u5224\u65ad\u6559\u5ba4\u662f\u5426\u8db3\u591f//\u526a\u679d\u81ea\u613f \n{\n    fu(i,1,n)\n    {\n        sumd[i]=sumd[i-1]+derta[i];//\u7edf\u8ba1\u67d0\u5929\u8981\u7528\u591a\u5c11\u6559\u5ba4 \n        if(sumd[i]>r[i])return 0;//\u6559\u5ba4\u4e0d\u591f\u7528 \n    }\n    return 1;\n} \nint find(int l,int r){//\u4e8c\u5206\u67e5\u627e\uff0c\u679a\u4e3emid \n\t\twhile(l<r){\n\t\tint mid=(l+r)/2;\n\t\tmem(mid);\n\t\tif(check())l=mid+1;\n\t\telse r=mid;\n\t}\n\treturn l;\n}\t\nint main(){\n\tin();\n\tif(check()){\n\t\tprintf(\"0\");//\u90fd\u7533\u8bf7\u901a\u8fc7\u4e86 \n\t\treturn 0;\n\t}\n\tint ans=find(1,m);\n\tprintf(\"-1\\n%d\",ans);\n\treturn 0;\n}\n\n \n```\n\n",
        "postTime": 1540906074,
        "uid": 55873,
        "name": "GrayCatH",
        "ccfLevel": 0,
        "title": "noip\u63d0\u9ad82012 \u501f\u6559\u5ba4\uff1a\u5173\u4e8e\u524d\u7f00\u548c\u3001\u5dee\u5206\u3001\u4e8c\u5206\u6280\u5de7\u7684\u8fd0\u7528"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848+\u524d\u7f00\u548c\n\n\u663e\u7136\uff0c\u7533\u8bf7\u6570\u91cf\u8d8a\u5c11\u8d8a\u6709\u53ef\u80fd\u6ee1\u8db3\u6761\u4ef6\u3002\u6211\u4eec\u8ba8\u8bba\u524dx\u4e2a\u7533\u8bf7\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679c\u6ee1\u8db3\uff0cx\u5e94\u8be5\u66f4\u5927\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0cx\u5e94\u8be5\u66f4\u5c0f\u3002\u901a\u8fc7\u4e8c\u5206\u6765\u627e\u51fa\u6700\u5927\u7684x\u503c\u3002x+1\u5373\u662f\u8981\u8f93\u51fa\u7684\u503c\uff08\u7b2c\u4e00\u4e2a\u4e0d\u6ee1\u8db3\u7684\u7533\u8bf7\uff09\n\n\u7528\u5dee\u5206\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u5224\u65ad\u6bcf\u4e2a\u65f6\u95f4\u70b9\u6570\u91cf\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002\n\u65e2\u662f\u679a\u4e3e\u524dx\u4e2a\u7533\u8bf7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7533\u8bf7\uff0c\u6253\u4e0a\u533a\u95f4\u5934\u5c3e\u6807\u8bb0\uff1a\n\n```cpp\np[s[i]]+=d[i];\np[t[i]]-=d[i];\n```\n\n\u6253\u5b8c\u6807\u8bb0\u540e\u8ba1\u7b97p\u6570\u7ec4\u7684\u524d\u7f00\u548c\uff0c\u76f8\u5f53\u4e8e\u6279\u91cf\u8fdb\u884c\u4e86\u533a\u95f4\u4fee\u6539\u7684\u64cd\u4f5c\u3002\n\u5982\u679c\u6709\u67d0\u4e2a\u65f6\u523b\uff0c\u8bf7\u6c42\u6559\u5ba4\u603b\u548c\u8d85\u51fa\u6761\u4ef6\uff0c\u5219\u8be5\u60c5\u51b5\u4e0d\u6210\u7acb\u3002\n\n\u6bcf\u6b21check\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[1000001],d[1000001],s[1000001],t[1000001];\nbool check(int x){\n\tint p[1000002];\n\tmemset(p,0,sizeof(p));\n\tfor(int i=1;i<=x;i++){\n\t\tp[s[i]]+=d[i];\n\t\tp[t[i]+1]-=d[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tp[i]+=p[i-1];\n\t\tif(p[i]>a[i])\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>d[i]>>s[i]>>t[i];\n\tint l=1,r=m;\n\twhile(l<=r){\n\t\tint x=(l+r)>>1;\n\t\tif(check(x))\n\t\t\tr=x-1;\n\t\telse\n\t\t\tl=x+1;\n\t}\t\n\tif(l<=m)\n\t\tcout<<-1<<endl<<l<<endl;\n\telse\n\t\tcout<<0<<endl;\n\treturn 0;\n}\n```\n\n\u5bf9\u4e8e\u533a\u95f4\u6279\u91cf\u4fee\u6539\uff0c\u5355\u6b21\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u5dee\u5206\u7684\u65b9\u5f0f\u6765\u505a\u3002\u5982\u679c\u8981\u5728\u4fee\u6539\u540c\u65f6\u67e5\u8be2\u5219\u9700\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\uff0c\u901a\u5e38\u65f6\u95f4\u590d\u6742\u5ea6\u5728O(nlogn)\u7ea7\u522b\u3002\u672c\u9898\u7ebf\u6bb5\u6811\u6709TLE\u7684\u53ef\u80fd\u3002\n",
        "postTime": 1540455603,
        "uid": 31952,
        "name": "\u5976\u6cb9\u9752\u8c46\u70e7\u9c7c",
        "ccfLevel": 0,
        "title": "P1083\u501f\u6559\u5ba4"
    },
    {
        "content": "\u9996\u5148\u4e8c\u5206\u7b54\u6848\n\n\u7b54\u6848\u662f\u53ef\u4e8c\u5206\u7684\n\n\u5982\u4f55\u5224\u65ad\u7b54\u6848\u662f\u5426\u5408\u6cd5\n\nm\u4e2a\u533a\u95f4\u4fee\u65391\u4e2a\u8be2\u95ee\u5982\u4f55\u6765\u6c42\n\n\u5dee\u5206\u2014\u524d\u7f00\u548c\u7684\u9006\u8fd0\u7b97\n```\n3 3 4 7 4\n3 -2 1 3 -1\n3 0 1 3 -3\n```\n\u5bf9\u4e00\u4e2a\u533a\u95f4\u52a0\u4e0a\u540c\u6837\u7684\u4e00\u4e2a\u6570x\n\n\u5728\u533a\u95f4\u5185\u90e8\u5dee\u5206\u4e4b\u540e\u7684\u503c\u4e0d\u53d8\uff0c\u533a\u95f4\u5de6\u7aef\u70b9\u52a0x\uff0c\u53f3\u7aef\u70b9\u51cfx\n\n\u5bf9\u6bcf\u4e00\u6b21\u4fee\u6539\u5dee\u5206\u53ea\u4fee\u6539\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n\n\u5728m\u6b21\u4fee\u6539\u4e4b\u540e\u6c42\u524d\u7f00\u548c\uff08\u5c31\u662f\u4fee\u6539m\u6b21\u7684\u539f\u5e8f\u5217\uff09\n\n\u4e8c\u5206\u64cd\u4f5c\u6570k\uff0c\u8fdb\u884ck\u6b21\u64cd\u4f5c\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\n\u8865\u5145\nn\u4ee5\u5185\u8d28\u6570\u4e2a\u6570\u5927\u6982n/log(n)\n\n# [\u4ee3\u7801\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/83239100)",
        "postTime": 1540084054,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "# ~~\u8fd9\u9898\u7684\u6570\u636e\u771f\u7684\u5f88\u6c34~~\n\n\u5dee\u5206\u53ea\u8981\u505a\u8fc7\u6811\u72b6\u6570\u7ec42\u5e94\u8be5\u90fd\u77e5\u9053\n\n\u4f46\u662f\u6211\u505a\u8fd9\u9898\u662f\u771f\u7684\u6ca1\u6709\u60f3\u8fc7\u600e\u4e48\u4e8c\u5206\n\n~~\u5927\u6982\u662f\u592a\u5f31\u4e86~~\n\n\u6240\u4ee5\u6211\u9760\u7740\u5dee\u5206\u5199\u4e86\u4e2a\u5feb\u4e50\u7684\u66b4\u529b\u89e3\u6cd5\n\n\u6ca1\u60f3\u5230\u5c45\u7136A\u4e86\n\n\u800c\u4e14\u5c45\u7136\u6bd4\u6709\u7684\u4e8c\u5206\u5feb\n\n~~\u6240\u4ee5\u6570\u636e\u771f\u7684\u662f\u6c34~~\n\n\u7b97\u6cd5\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5dee\u5206\u4e4b\u540e\u4ece\u524d\u5f80\u540e\u626b\uff0c\u5f53\u51fa\u73b0\u6559\u5ba4\u4e0d\u591f\u7528\u7684\u65f6\u5019\u4ece\u5934\u5f00\u59cb\u641c\u7d22\u8bb0\u5f55\uff0c\u5e76\u8bb0\u5f55\u6700\u5c0f\u7684\u4e0d\u5408\u683c\u8bb0\u5f55\u3002\n\n\u603b\u4e4b\u770b\u4ee3\u7801\u5427\u3002\n\n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint sl[3000000];\nint zs[3000000];\nstruct jl\n{\n\tint sl;\n\tint l;\n\tint r;\n}jll[3000000];//\u8bb0\u5f55\u501f\u6559\u5ba4\u7684\u6570\u91cf\u548c\u65f6\u95f4\nint main()\n{\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d\",&zs[i]);\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%d%d%d\",&jll[i].sl,&jll[i].l,&jll[i].r);\n\t\tsl[jll[i].l] += jll[i].sl;//\u5dee\u5206\n\t\tsl[jll[i].r + 1] -= jll[i].sl;//\u5dee\u5206\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsl[i] = sl[i - 1] + sl[i];\n\t}//\u628a\u5dee\u5206\u6570\u7ec4\u53d8\u6210\u539f\u672c\u7684\u503c\n\tint minn = 99999999;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(zs[i] < sl[i])\n\t\t{\n\t\t\tint k = zs[i];//\u8bb0\u5f55\u6b64\u65f6\u6700\u591a\u80fd\u501f\u51fa\u591a\u5c11\u6559\u5ba4\n\t\t\tint temp = 0;//\u8bb0\u5f55\u5df2\u7ecf\u501f\u51fa\u4e86\u591a\u5c11\u6559\u5ba4\n\t\t\tfor(int ii = 1; ii <= m; ii++)\n\t\t\t{\n\t\t\t\tif(ii > minn)//\u6ca1\u4ec0\u4e48\u7528\u7684\u4f18\u5316\n\t\t\t\t\tbreak;\n\t\t\t\tif(jll[ii].l <= i && jll[ii].r >= i)\n\t\t\t\t{\n\t\t\t\t\ttemp += jll[ii].sl;\n\t\t\t\t\tif(temp > k)\n\t\t\t\t\t{\n\t\t\t\t\t\tminn = min(minn,ii);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(minn == 99999999)\n\t\tcout<<0<<endl;\n\telse\n\t{\n\t\tcout<<-1<<endl;\n\t\tcout<<minn<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u4e2a\u4ee3\u7801\u6700\u591a\u5e94\u8be5\u8fd8\u80fd\u538b\u7f29\u5230800ms\u5de6\u53f3\uff0c\u7136\u540e\u518d\u4f4e\u7684\u5c31\u9700\u8981\u522b\u7684\u7b97\u6cd5\u4e86.......\n\n###### \u6bd5\u7adf\u8fd9\u53ea\u662f\u4e2a\u66b4\u529b\u89e3\u6cd5\u554a......",
        "postTime": 1536929042,
        "uid": 75830,
        "name": "\u660e\u5b50\u7a76",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u3000\u3000\u8fd9\u9898\u7684\u8bdd\u770b\u9898\u89e3\u597d\u591a\u5927\u4f6c\u90fd\u7528\uff0c<del>\u53ef\u60dc\u6211\u4e0d\u4f1a</del>,\u521a\u5b66\u4e86\u7ebf\u6bb5\u6811\uff0c\u90a3\u5c31\u800d\u800d\u5427\u3002  \n\u3000\u770b\u5230\u4e86\u533a\u95f4\uff0c\u6211\u60f3\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u5f53\u7136\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u662f\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u7684\u66f4\u65b0(\u501f\u6559\u5ba4)\uff0c\u6211\u4eec\u53ef\u4ee5\u6211\u4eec\u5728\u533a\u95f4\u4e0a\u51cf\u53bb\u8be5\u503c(\u501f\u6559\u5ba4\u7684\u5929\u6570)\uff0c\u7136\u540e\u5224\u65ad\u7ebf\u6bb5\u6811\u7684\u6700\u5c0f\u503c(\u6839\u8282\u70b9)\u662f\u5426\u5c0f\u4e8e\u96f6\uff0c\u6839\u636e\u9898\u610f\u8f93\u51fa\u5373\u53ef\u3002\n \n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define INF 9999999\nconst int maxn=10000005;\nll a[maxn],minv[maxn],addv[maxn];\nll n,m,x,y,z;\n#define lson (o<<1)\n#define rson (o<<1|1)\ninline int _min(int a,int b){\n    return a>b?b:a;\n}\nvoid pushup(int o){minv[o]=_min(minv[lson],minv[rson]);}\nvoid f(int o,int l,int r,int v){\n    minv[o]=minv[o]-v;\n    addv[o]+=v;\n}\nvoid pushdown(int o,int l,int r){\n    if(!addv[o]) return;\n    int mid=(l+r)>>1;\n    f(lson,l,mid,addv[o]);\n    f(rson,mid+1,r,addv[o]);\n    addv[o]=0;\n}\n\nvoid build(int o,int l,int r){\n    addv[o]=0;\n    if(l==r){ minv[o]=a[l];return;}\n    int mid=(l+r)>>1;\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    pushup(o);\n}\nvoid update(int o,int l,int r,int ql,int qr,int v){\n    if(ql<=l&&r<=qr){ minv[o]=minv[o]-v;addv[o]+=v;return; }\n    int mid=(l+r)>>1;\n    pushdown(o,l,r);\n    if(ql<=mid) update(lson,l,mid,ql,qr,v);\n    if(qr>mid) update(rson,mid+1,r,ql,qr,v);\n    pushup(o);\n}\n\nint main(){\n  scanf(\"%lld%lld\",&n,&m);\n  for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n  build(1,1,n); //cout<<minv[4];\n  for(int i=1;i<=m;i++){\n      scanf(\"%lld%lld%lld\",&x,&y,&z);\n      update(1,1,n,y,z,x);\n     if(minv[1]<0){cout<<\"-1\"<<endl;cout<<i<<endl;return 0;}\n  }\n   cout<<\"0\"<<endl;\n\n\n    return 0;\n}\n```\n \u6570\u7ec4\u5f00\u7684\u6709\u70b9\u5927",
        "postTime": 1535507737,
        "uid": 39597,
        "name": "\u5434\u900a",
        "ccfLevel": 0,
        "title": "P1083\u501f\u6559\u5ba4(\u7ebf\u6bb5\u6811\u5199\u7684)"
    },
    {
        "content": "## 0x00 \u5148\u770b\u6570\u636e\u8303\u56f4\n\n$ 1\u2264n,m\u226410^6  $\uff0c\u7b2c\u4e00\u53cd\u5e94 $O(nlogn)$\n\n## 0x01 5 pts \n\n\u76f4\u63a5\u8f93\u51fa '0' \u5373\u53ef\u3002\n\n\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u77e5\u9053\u8f93\u51fa '0' \u53ef\u4ee5\u62ff 5 pts\u3002\n\n\u4fdd\u6301\u5fae\u7b11.jpeg \\*1\n\n## 0x02 40~50 pts\n\n\u8003\u8651\u66b4\u529b\u3002\n\n\u6309\u7167\u9898\u610f\u679a\u4e3e\u5373\u53ef\u3002\n\n\u6838\u5fc3\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n\u5b9a\u4e49 n, m \u4e3a int \u578b\u53d8\u91cf \n\u5b9a\u4e49 r \u4e3a int \u578b\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a Max_N \n\u8bfb\u5165 n, m\n\u8bfb\u5165 r \u6570\u7ec4 \n\u5b9a\u4e49 d, s, t \u4e3a int \u578b\u53d8\u91cf \n\u4f7f\u7528\u53d8\u91cf i \u4ece 1 \u5230 m \u904d\u5386\n\t\u8bfb\u5165 d, s, t\n\t\u4f7f\u7528\u53d8\u91cf j \u5728 r \u6570\u7ec4\u91cc\u4ece s \u5230 t \u904d\u5386\n\t\tr[j] \u51cf\u53bb d;\n\t\t\u5982\u679c r[j] < 0 \u90a3\u4e48 \n\t\t\t\u8f93\u51fa \"-1\" \u548c\u56de\u8f66 \n\t\t\t\u8f93\u51fa i \n\t\t\t\u7ed3\u675f\u7a0b\u5e8f\n\t\t\u5426\u5219 \n\t\t\tj \u6307\u9488\u540e\u79fb\n\u8f93\u51fa \"0\" \n\u7ed3\u675f\u7a0b\u5e8f \n``` \n\u7136\u540e\uff0c\u8003\u5bdf\u4f60\u7a0b\u5e8f\u7684\u5e38\u6570\u7684\u65f6\u5019\u5230\u4e86\u3002\n\n\u4fdd\u6301\u5fae\u7b11.jpeg \\*2\n\n## 0x03 70 pts\n\n\u4e00\u770b\u5c31\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u800c\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u7ebf\u6bb5\u6811\u7684\u5e38\u6570\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u6240\u4ee5\u53ea\u6709 70 pts\u3002\n\n\u5f53\u7136\uff0c\u6211\u4e5f\u770b\u89c1\u4e86\u7528\u7ebf\u6bb5\u6811A\u9898\u7684\u5927\u4f6c\uff0c\u5728\u6b64\u8868\u793a\u7531\u8877\u7684\u656c\u610f.\n\n## 0x04 \u6df1\u5165\u601d\u8003\n\n\u56de\u5fc6\u6211\u4eec\u9884\u6d4b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n\u5f00\u59cb\u731c\u7b97\u6cd5\n\n> ![](https://cdn.luogu.com.cn/upload/pic/30121.png)\n \n> \u2014\u2014\u962e\u884c\u6b62\n\n\u4fdd\u6301\u5fae\u7b11.jpeg \\*3\n\n\u7136\u540e\u60f3\u5230\u4e8c\u5206\u7b54\u6848\n\n## 0x05 \u4e8c\u5206\uff1f\n\n\u8bbe\uff1a\u4e8c\u5206\u7b54\u6848\u7684\u5185\u5bb9\u4e3a\u6700\u591a\u53ef\u4ee5\u6ee1\u8db3\u7b2c mid \u4e2a\u4eba\u7684\u9700\u6c42\n\n\u7136\u540e\u5f00\u59cb\u60f3 judge \u51fd\u6570\u3002\n\n\u8fd9\u65f6\u5019\u62fc\u5c3d\u8111\u5b50\u60f3 $O(n)$ \u7b97\u6cd5\n\n\u7136\u540e\u60f3\u5230\u5dee\u5206\n\n## 0x06 \u4e8c\u5206 judge \u51fd\u6570\u4e4b\u5dee\u5206\n\n\u4f2a\u4ee3\u7801\uff1a\n```\n\u51fd\u6570\u53c2\u6570\uff1ax(int \u578b\u6574\u6570) // \u8868\u793a\u53ef\u5426\u6ee1\u8db3\u7b2c x \u4e2a\u4eba\u7684\u9700\u6c42\n    Clear dif // dif \u662f\u5927\u5c0f\u4e3a Max_N \u7684 int \u578b\u6570\u7ec4\n    For i (i between [1, x])\n        dif[s[i]] = dif[s[i]] + d[i]\n        dif[t[i] + 1] = dif[t[i] + 1] - d[i]\n    now = 0\n    For i (i between [1, n])\n        now += dif[i];\n        If now > r[i] Return false;\n    Return true;\n} \n```\n\n## 0x07 \u4e8c\u5206\n\n```\nint l = 0, r = m, mid;\nwhile (l < r) {\n\tmid = (l + r + 1) >> 1;\n\tif (judge(mid)) l = mid;\n\telse r = mid - 1;\n}\nif (l == m) putchar('0');\nelse puts(\"-1\"), write(l + 1);\n```\n\n\u51e0\u70b9\u8bf4\u660e\uff1a\n\n1. \u5982\u679c judge(m) \u4e3a\u771f\uff0c\u8bf4\u660e\u6240\u6709\u8ba2\u5355\u5747\u53ef\u6ee1\u8db3\n2. \u56e0\u4e3a l \u8868\u793a\u6700\u591a\u53ef\u4ee5\u6ee1\u8db3\u7b2c l \u4e2a\u4eba\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u9700\u8981\u4fee\u6539\u8ba2\u5355\u7684\u4eba\u7684\u7f16\u53f7\u4e3a l + 1\n\n## 0x08 \u4ee3\u7801\n\n```\n// luogu-judger-enable-o2\n/**\n * Problem:\tP1083 \u501f\u6559\u5ba4. \n * Author:\t\u822a\u7a7a\u4fe1\u5965. \n * Date:\t2018/08/23. \n * Upload:\tLuogu. \n */\n#include <stdio.h>\n#include <string.h>\n\nnamespace HangKongXinAo {\n    template <typename _TpInt> inline _TpInt read();\n    template <typename _TpInt> inline void write(_TpInt x);\n    \n#\tdefine Max_N 1000007\n    \n    int n, m, r[Max_N];\n    int d[Max_N], s[Max_N], t[Max_N];\n    int dif[Max_N]; \n    \n    bool judge(int x)\n    {\n        memset(dif, 0, sizeof(dif));\n        for (int i = 1; i <= x; i++) {\n            dif[s[i]] += d[i];\n            dif[t[i] + 1] -= d[i]; \n        }\n        int now = 0;\n        for (int i = 1; i <= n; i++) {\n            now += dif[i];\n            if (now > r[i]) return false;\n        }\n        return true;\n    } \n    \n    void Binary_search() \n    {\n        int l = 0, r = m, mid;\n        while (l < r) {\n            mid = (l + r + 1) >> 1;\n            if (judge(mid)) l = mid;\n            else r = mid - 1;\n        }\n        if (l == m) putchar('0');\n        else puts(\"-1\"), write(l + 1);\n    }\n    \n    int main() \n    {\n        n = read<int>();\n        m = read<int>();\n        for (int i = 1; i <= n; i++) {\n            r[i] = read<int>();\n        }\n        for (int i = 1; i <= m; i++) {\n            d[i] = read<int>();\n            s[i] = read<int>();\n            t[i] = read<int>();\n        }\n        Binary_search();\n        return 0;\n    }\n\n    char BufferRead[1 << 17];\n    int rLen = 0, rPos = 0;\n    inline char Getchar()\n    {\n        if (rPos == rLen) rPos = 0, rLen = fread(BufferRead, 1, 1 << 17, stdin);\n        if (rPos == rLen) return EOF;\n        return BufferRead[rPos++];\n    } \n\n    template <typename _TpInt>\n    inline _TpInt read()       \n    {\n        register int flag = 1;\n        register char c = Getchar();\n        while ((c > '9' || c < '0') && c != '-') \n            c = Getchar();\n        if (c == '-') flag = -1, c = Getchar();\n        register _TpInt init = (c & 15);\n        while ((c = Getchar()) <= '9' && c >= '0') \n            init = (init << 3) + (init << 1) + (c & 15);\n        return init * flag;\n    }\n\n    template <typename _TpInt>\n    inline void write(_TpInt x)\n    {\n        if (x < 0) {\n            putchar('-');\n            write<_TpInt>(~x + 1);\n        }\n        else {\n            if (x > 9) write<_TpInt>(x / 10);   \n            putchar(x % 10 + '0');\n        }\n    }\n}\n\nint main()\n{\n    HangKongXinAo::main();\n    return 0;\n}\n```\n\n## 0x09 \u5976\u4e00\u53e3\n\n\u6807\u7b7e\u4e3a $\\color{#ffffff}\\colorbox{#3498db}{\u63d0\u9ad8+/\u7701\u9009-}$ ? \u8c8c\u4f3c\u6076\u610f\u8bc4\u5206\u3002\u3002\u3002\n\n\u849f\u84bb\u89c1\u89e3\uff1a$\\color{#ffffff}\\colorbox{#5eb95e}{\u666e\u53ca+/\u63d0\u9ad8}$",
        "postTime": 1535012250,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u66b4\u529b\u601d\u8def\uff1a\n\n\u60f3\u90fd\u4e0d\u60f3\u5148\u66b4\u529b\u4e00\u904d\uff0c\u5148\u62ff\u5f9745\u5206\n\n\u6b63\u89e3\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u770b\u4e0a\u53bb\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u6a21\u7248\u9898\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u8fd9\u9898\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8c\u5206\u6765\u641c\u7d22\u51fa\u7b54\u6848\uff1b\u4f46\u7b54\u6848\u7684\u68c0\u67e5\u6b63\u786e\u6027\u5374\u9700\u8981\u7528\u533a\u95f4\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u56fa\u7136\u662f\u53ef\u884c\u7684\uff0c\u4f46\u56e0\u4e3a\u53ea\u6709\u8fd9\u4e00\u79cd\u64cd\u4f5c\uff0c\u6240\u4ee5\u5dee\u5206\u5373\u53ef\u3002\n\n[](https://blog.csdn.net/Njhemu/article/details/79677192)\u4e0d\u77e5\u9053\u5dee\u5206\u7684\u70b9\u8fd9\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u5927\u4f53\u6846\u67b6\u7528\u4e8c\u5206\u641c\u7d22\uff0c\u5c40\u90e8\u68c0\u67e5\u7528\u5dee\u5206\u5b8c\u6210\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int SIZE=2000005;\n\n \n\nbool check(int t);\n\n \n\nstruct node{\n\n    int d,s,t;\n\n}a[SIZE];\n\nint r[SIZE],c[SIZE]; \n\n \n\nint n,m,ans=0;\n\n \n\nint main()\n\n{\n\n    scanf(\"%d%d\",&n,&m);\n\n    for (int i=1;i<=n;i++) scanf(\"%d\",&r[i]);\n\n    for (int i=1;i<=m;i++) scanf(\"%d%d%d\",&a[i].d,&a[i].s,&a[i].t);\n\n    \n\n    int L=1,R=m,mid;\n\n    while (L<=R){\n\n        mid=(L+R)/2;\n\n        if (!check(mid)){  //\u4e8c\u5206\u641c\u7d22\n\n            ans=mid;\n\n            R=mid-1;\n\n        }\n\n        else L=mid+1;\n\n    }\n\n    \n\n    if (!ans) printf(\"0\");\n\n    else\t  printf(\"-1\\n%d\",ans);\n\n    \n\n    return 0;\n\n}\n\n \n\nbool check(int t)\n\n{\n\n    memset(c,0,sizeof(c));\n\n    int sum=0;\n\n    bool flag=true;\n\n    for (int i=1;i<=t;i++){\n\n        c[a[i].s]+=a[i].d;\n\n        c[a[i].t+1]-=a[i].d; //\u8fdb\u884c\u5dee\u5206\u68c0\u67e5 \n\n    }\n\n    for (int i=1;i<=n;i++){\n\n        sum+=c[i];\n\n        if (sum>r[i]){\n\n            flag=false;\n\n            break;\n\n        }\n\n    }\n\n    return flag;\n\n}\n\n```\n\n\u5207\u52ff\u6284\u88ad\u3002",
        "postTime": 1533522977,
        "uid": 34478,
        "name": "Nj85",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u53d1\u73b0\u90fd\u662f\u7528\u7684\u7ebf\u6bb5\u6811\u4e8c\u5206\u2026\u2026\u8fd9\u9053\u9898\u5f53\u7136\u662f\u9009\u62e9\u597d\u5199\u7684\u5206\u5757\u5566\uff01block\u8bb0\u5f55\u6700\u5c0f\u503c\uff0c\u770b\u6bcf\u6b21\u64cd\u4f5c\u662f\u5426\u5c0f\u4e8e\u96f6\u5c31\u884c\u4e86\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<algorithm>\n#define inf 21983781293871989LL\n#define ll long long\nusing namespace std;\n\nll n,m,s;\nll a[1000005],block[1000005],lazy[1000005];//block\u7ef4\u62a4\u5757\u4e2d\u6700\u5c0f\u503c\n\nvoid modify(ll l,ll r,ll d,ll num) {\n    ll lid=(l-1)/s+1;\n    ll rid=(r-1)/s+1;\n    if(lid==rid) {\n        for(ll k=l; k<=r; k++) {\n            a[k]+=d,block[lid]=min(block[lid],a[k]+lazy[lid]);\n            if(block[lid]<0) {\n                printf(\"-1\\n%lld\",num);\n                exit(0);\n            }\n        }\n    } else {\n        for(ll k=l; k<=lid*s; k++) {\n            a[k]+=d;\n            block[lid]=min(block[lid],a[k]+lazy[lid]);\n            if(block[lid]<0) {\n                printf(\"-1\\n%lld\",num);\n                exit(0);\n            }\n        }\n        for(ll k=(rid-1)*s+1; k<=r; k++) {\n            a[k]+=d;\n            block[rid]=min(block[rid],a[k]+lazy[rid]);\n            if(block[rid]<0) {\n                printf(\"-1\\n%lld\",num);\n                exit(0);\n            }\n        }\n        for(ll k=lid+1; k<rid; k++) {\n            block[k]+=d;\n            lazy[k]+=d;\n            if(block[k]<0) {\n                printf(\"-1\\n%lld\",num);\n                exit(0);\n            }\n        }\n    }\n}\nint main() {\n    scanf(\"%lld%lld\",&n,&m);\n    s=sqrt(n);\n    for(int i=1; i<=s+1; i++) block[i]=inf;\n    for(int i=1; i<=n; i++)\n        scanf(\"%lld\",&a[i]),block[(i-1)/s+1]=min(block[(i-1)/s+1],a[i]);\n    for(int k=1; k<=m; k++) {\n        ll x,i,j;\n        scanf(\"%lld%lld%lld\",&x,&i,&j);\n        modify(i,j,-x,k);\n    }\n    putchar('0');\n}\n\n```",
        "postTime": 1531396942,
        "uid": 83839,
        "name": "Katoumegumi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "# \u53f2\u4e0a\u6700\u5168\u89e3\u6cd5\u5206\u6790\n\n\n------------\n\n## \u5dee\u5206+\u4e8c\u5206\u7248\n#### \u4e00\u5b9a\u8981\u4e8c\u5206\uff01\u4e00\u5b9a\u8981\u4e8c\u5206\uff01\u4e00\u5b9a\u8981\u4e8c\u5206\uff01\n\u697c\u4e0b\u6709\u6211\u7b2c\u4e00\u6b21\u5199\u7684\u6ca1\u4e8c\u5206\u7684\u4ee3\u7801\n\n\u6ca1\u4e8c\u5206\u7684\u8bdd\u633a\u7b80\u5355\u7684 \u76f4\u63a5\u5dee\u5206\n\n\u7136\u540e\u5982\u4f60\u6240\u613f TLE\n\n\u90a3\u4e48\u5c31\u8981\u4e8c\u5206\u67e5\u627e\u627e\u7b54\u6848\u554a\n\n\u4e8c\u5206\u4ec0\u4e48\u5462\uff1f\u8bb0\u4f4f\u6bcf\u4e00\u6b21\u68c0\u67e5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u4ece1\u5230\u5f53\u524d\u8fd9\u4e2a\u70b9\n\n\u8fd9\u4e2a1\u548c\u4e8c\u5206\u65f6\u5019\u7684left\u662f\u4e0d\u4e00\u6837\u7684~~\uff08\u849f\u84bb\u8868\u793a\u5f53\u65f6\u5f04\u6df7\u4e86~~\uff09\n\n\u6211\u4eec\u8fd9\u91cc\u4e8c\u52061-m \uff08\u4e8c\u5206\u7a0b\u5e8f\u89c1\u7b2c\u4e8c\u7248while\u90e8\u5206\uff09\n\n\u68c0\u67e5\u4f60\u4e8c\u5206\u5230\u7684\u8fd9\u4e2a\u70b9\u662f\u5426\u7b26\u5408\u6761\u4ef6 \u6211\u5b9a\u4e49\u4e86\u4e2achafen\u51fd\u6570\n\n\u76f4\u63a5\u6765\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u6211\u4eec\u8981\u4e8c\u5206\u7684\u7b54\u6848\n\n\u7136\u540e\u6700\u540e\u9010\u6e10\u627e\u5230left\u548cright\u63a5\u8fd1\n\n\u6ce8\u610f\uff1a\u6211\u4eec\u5f00\u59cb\u641c\u7684\u65f6\u5019\u662f\u5148\u641c\u7684right\n\n\u53ea\u6709chafen(right)\u6ee1\u8db3\u6761\u4ef6\u6211\u4eec\u624d\u505a\n\n\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019 \u8981\u660e\u767dright\u53f3\u7aef\u70b9\u4e00\u5b9a\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\n\n\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa\u5de6\u7aef\u70b9\u5373\u53ef\n\n## \u7ebf\u6bb5\u6811\u7248\n\u5f00\u59cb\u6211\u7684pushdown\u7684lazy\u4e0b\u6807\u53ea\u662f\u653e\u76840\u6216\u80051\n\n\u5f00\u59cb\u7684\u65f6\u5019\u6211\u60f3\u7684\u662f\u5982\u679c\u662f1\u5c31\u4e0b\u4f20 \u5982\u679c\u662f0\u5c31\u4e0dpushdown\n\n\u4f46\u662f\u5c31\u662f\u4e0d\u5e94\u8be5\u53ea\u653e0\u548c1\n\n\u56e0\u4e3a\u4f60pushdown\u7684\u65f6\u5019\u4f60\u513f\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u503c\u8fd8\u8981\u66f4\u65b0\n\n\u90a3\u4e48\u8981\u66f4\u65b0\u7684\u8fd9\u4e2a\u503c\u653e\u5230\u54ea\u91cc\u5462\uff1f\u5c31\u662f\u653e\u5230\u8fd9\u4e2a\u6807\u8bb0\u91cc\n\n\u8fd9\u91cc\u6211\u767e\u5ea6\u4e86\u4e00\u4e0blazy\u6807\u8bb0\u7684\u4e1c\u897f \u622a\u56fe\u732e\u4e0a\n\n![](https://i.loli.net/2018/02/25/5a9226f41d69e.png)\n\n\u5176\u4ed6\u7684\u8bdd\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u64cd\u4f5c\n\n# \u7a0b\u5e8f\u4ee3\u7801\n#### 40\u5206\u672a\u4e8c\u5206\u7248\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define MAXN 1000005\nusing namespace std;\nint n,m,a[MAXN],b[MAXN];\nvoid solve();\nvoid del(int,int,int);\nint check();\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    solve();\n    for(int i=1;i<=m;i++)\n    {\n        int d,s,t;\n        scanf(\"%d%d%d\",&d,&s,&t);\n        del(s,t,d);\n        if(check()==1)\n        {\n            printf(\"-1\\n%d\",i);\n            return 0;\n        }\n    }\n    printf(\"0\");\n    return 0;\n}\nvoid solve()\n{\n    for(int i=1;i<=n;i++)\n        b[i]=a[i]-a[i-1];\n}\nvoid del(int l,int r,int x)\n{\n    b[l]-=x;\n    b[r+1]+=x;\n    for(int i=1;i<=n;i++)\n        a[i]=b[i]+a[i-1];\n}\nint check()\n{\n    for(int i=1;i<=n;i++)\n        if(a[i]<0)\n            return 1;\n    return 0;\n}\n```\n#### \u5dee\u5206+\u4e8c\u5206\u7248\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define MAXN 1000005\nusing namespace std;\nstruct cf{\n    int x,l,r;\n};\ncf f[MAXN];\nint n,m,a[MAXN],b[MAXN],c[MAXN];\nbool chafen(int);\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d%d\",&f[i].x,&f[i].l,&f[i].r);\n    if(chafen(m))\n        printf(\"0\");\n    else\n    {\n        int l=1,r=m;\n        while(l<r)\n        {\n            int mid=(l+r)>>1;\n            if(chafen(mid))\n                l=mid+1;\n            else\n                r=mid;\n        }\n        printf(\"-1\\n%d\",l);\n    }\n    return 0;\n}\nbool chafen(int x)//\u5dee\u5206 \n{\n    memset(b,0,sizeof(b));\n    for(int i=1;i<=x;i++)\n    {\n        b[f[i].l]+=f[i].x;\n        b[f[i].r+1]-=f[i].x;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        c[i]=b[i]+c[i-1];\n        if(c[i]>a[i])\n            return 0;\n    }\n    return 1;\n}\n```\n#### \u7ebf\u6bb5\u6811\u7248\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define MAXN 1000005\nusing namespace std;\nstruct tree{\n    int l,r,p,minn;\n};\ntree node[MAXN*4+1];\nint n,m,a[MAXN];\nvoid update(int);\nvoid build(int,int,int);\nvoid pushdown(int);\nvoid update_qj(int,int,int,int);\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        int b,c,d;\n        scanf(\"%d%d%d\",&b,&c,&d);\n        update_qj(1,c,d,-b);\n        if(node[1].minn<0)\n        {\n            printf(\"-1\\n%d\",i);\n            return 0;\n        }\n    }\n    printf(\"0\");\n    return 0;\n}\nvoid build(int x,int l,int r)\n{\n    node[x].p=0;//lazy\n    node[x].l=l;\n    node[x].r=r;\n    if(l==r)\n    {\n        node[x].minn=a[l];\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(2*x,l,mid);\n    build(2*x+1,mid+1,r);\n    node[x].minn=min(node[x<<1].minn,node[(x<<1)|1].minn);\n}\nvoid pushdown(int x)\n{\n    node[x<<1].p+=node[x].p;\n    node[(x<<1)|1].p+=node[x].p;\n    node[x<<1].minn+=node[x].p;\n    node[(x<<1)|1].minn+=node[x].p;\n    node[x].p=0;\n}\nvoid update_qj(int x,int l,int r,int v)\n{\n    if(node[x].l==l&&node[x].r==r)\n    {\n        node[x].p+=v;\n        node[x].minn+=v;\n        return ;\n    }\n    if(node[x].p)\n        pushdown(x);\n    int mid=(node[x].l+node[x].r)>>1;\n    if(r<=mid)\n        update_qj(x<<1,l,r,v);\n    else\n        if(l>mid)\n            update_qj((x<<1)|1,l,r,v);\n    else\n    {\n        update_qj(x<<1,l,mid,v);\n        update_qj((x<<1)|1,mid+1,r,v);\n    }\n    node[x].minn=min(node[x<<1].minn,node[(x<<1)|1].minn);\n}\n```",
        "postTime": 1521946368,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8bf4\u8fd9\u9053\u9898\u662f\u7ebf\u6bb5\u6811~~\uff08\u5176\u5b9e\u53ea\u662f\u4e0d\u4f1a\u4e8c\u5206\u800c\u5df2\uff09~~\n\n\u65e2\u7136\u662f\u7ebf\u6bb5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u9996\u5148\u5f53\u7136\u662f\u6700\u7b80\u5355\u7684\u5efa\u6811\n\n\u5efa\u6811\u4ee3\u7801\u5982\u4e0b\n\n``` cpp\nvoid build(int p,int l,int r)\n{\n    a[p].left=l;\n    a[p].right=r;\n    if(l==r)\n    {\n        a[p].num=data[l];\n        return;\n    }\n    int mid=(a[p].left+a[p].right)/2;\n    build(2*p,l,mid);\n    build(2*p+1,mid+1,r);\n    pushup(p);\n}\n```\n\u6b64\u5904\u53ea\u9700\u8981\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5efa\u6811\u662f\u5f88\u57fa\u7840\u7684\uff0c\u5c31\u4e0d\u591a\u8d58\u8ff0\u4e86\u3002\n\n\n\u63a5\u4e0b\u6765\u662f\u66f4\u65b0\n\n``` cpp\nvoid add(int p,int l,int r,long long d)\n{\n    if(f==1)\n        return;\n    if(a[p].left==l&&a[p].right==r)\n    {\n        a[p].val+=d;\n        a[p].num+=d;\n        if(a[p].num<0)\n            f=1;\n        return;\n    }\n    pushdown(p);\n    int mid=(a[p].left+a[p].right)/2;\n    if(r<=mid)\n        add(2*p,l,r,d);\n    else if(l>mid)\n        add(2*p+1,l,r,d);\n    else\n    {\n        add(2*p,l,mid,d);\n        add(2*p+1,mid+1,r,d);\n    }\n    pushup(p);\n}\n```\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6b64\u5904\u7684\u6807\u8bb0\u662f\u4e3a\u4e86\u4f18\u5316\uff0c\u5982\u679c\u4e0d\u52a0\u5c31\u4f1aT\u6389\u4e00\u4e2a\u70b9\n\n\u6700\u540e\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u67e5\u8be2\u6839\u8282\u70b9\u7684\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u53ea\u9700\u67e5\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\uff08\u4f46\u662f\u5148\u8981\u66f4\u65b0\uff09\n\n\u603b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n``` cpp\n#include <bits/stdc++.h>\n#define N 1000010\nusing namespace std;\nstruct node\n{\n    int left,right;\n    long long val,num;\n};struct node a[4*N];\nint data[N],n,m,x,y,z,b,f;\nvoid pushup(int p)\n{\n    a[p].num=min(a[2*p].num,a[2*p+1].num);\n}\nvoid pushdown(int p)\n{\n    if(a[p].val!=0)\n    {\n        a[2*p].val+=a[p].val;\n        a[2*p+1].val+=a[p].val;\n        a[2*p].num+=a[p].val;\n        a[2*p+1].num+=a[p].val;\n        a[p].val=0;\n    }\n}\nvoid build(int p,int l,int r)\n{\n    a[p].left=l;\n    a[p].right=r;\n    if(l==r)\n    {\n        a[p].num=data[l];\n        return;\n    }\n    int mid=(a[p].left+a[p].right)/2;\n    build(2*p,l,mid);\n    build(2*p+1,mid+1,r);\n    pushup(p);\n}\nvoid add(int p,int l,int r,long long d)\n{\n    if(f==1)\n        return;\n    if(a[p].left==l&&a[p].right==r)\n    {\n        a[p].val+=d;\n        a[p].num+=d;\n        if(a[p].num<0)\n            f=1;\n        return;\n    }\n    pushdown(p);\n    int mid=(a[p].left+a[p].right)/2;\n    if(r<=mid)\n        add(2*p,l,r,d);\n    else if(l>mid)\n        add(2*p+1,l,r,d);\n    else\n    {\n        add(2*p,l,mid,d);\n        add(2*p+1,mid+1,r,d);\n    }\n    pushup(p);\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&data[i]);\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %d\",&x,&y,&z);\n        add(1,y,z,-x);\n        if(f==1)\n        {\n            printf(\"-1\\n%d\",i);\n            return 0;\n        }\n    }\n    printf(\"0\");\n    return 0;\n}\n```\n\u867d\u7136\u8bf4\u662f\u5361\u7ebf\u6bb5\u6811\uff0c\u4f46\u5176\u5b9e\u5e76\u4e0d\u4f1a\uff08\u867d\u71363448ms\u8dd1\u7684\u6bd4\u8f83\u6162\uff09\n\n\u603b\u8fd8\u662f\u53ef\u4ee5A\n",
        "postTime": 1514278870,
        "uid": 55454,
        "name": "DimensionTripper",
        "ccfLevel": 0,
        "title": "P1083 \u501f\u6559\u5ba4\u7ebf\u6bb5\u6811AC"
    },
    {
        "content": "\u4e00\u9053\u8f83\u4e3a\u57fa\u7840\u7684\u7ebf\u6bb5\u6811\u9898\u76ee\u3002\n\n\u5927\u4f53\u7684\u601d\u8def\u662f\u6bcf\u8f93\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u7528find\u51fd\u6570\u67e5\u770b\u4e00\u4e0b\u662f\u5426\u53ef\u884c\uff1b\n\n\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u8c03\u7528add\u51fd\u6570\u6539\u53d8\u7ebf\u6bb5\u6811\u4e2d\u7684\u6570\u503c\uff1b\n\n\u5982\u679c\u4e0d\u884c\uff0c\u5c31\u8f93\u51fa-1\uff0c\u8fd8\u6709\u5f53\u524d\u7684\u7533\u8bf7\u5e8f\u53f7\uff0creturn 0\uff1b\n\n\u5982\u679c\u4e00\u76f4\u6ca1\u6709return 0\uff0c\u8bf4\u660e\u90fd\u53ef\u4ee5\uff0c\u8f93\u51fa0\uff0creturn 0\uff1b\n\n\u5bf9\u4e8efind\u51fd\u6570\u5927\u4f53\u601d\u8def\uff1a\n\n\u533a\u95f4\u6700\u503c\u4e0e\u7ed9\u7684\u6559\u5ba4\u6570\u5927\u5c0f\u5173\u7cfb\u7684\u5224\u65ad\uff0c\u90fd\u53ef\u4ee5\u5c31\u53ef\u4ee5\uff0c\u4efb\u4f55\u4e00\u4e2a\u4e0d\u884c\u5c31\u90fd\u4e0d\u884c\uff1b\n\n\u5bf9\u4e8eadd\u51fd\u6570\u5927\u4f53\u601d\u8def\uff1a\n\n\u5f53find\u53d1\u73b0\u53ef\u4ee5\u501f\u7684\u65f6\u5019\u624d\u8c03\u7528\uff1b\n\n\u7ebf\u6bb5\u6811\u5bf9\u4e8e\u533a\u95f4\u6700\u503c\u7684\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u7b26\u5408\u7684\u6839\u8282\u70b9tree[i]-=\u6559\u5ba4\u6570\uff1b\n\n\u5e76\u7528lazy\u6570\u7ec4\u7ef4\u62a4\uff1b\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint tree[24000010],a[600010],lazy[24000010],n,m,s,r,ans;\nvoid read(int &x)\n{\n    x=0;\n    char c=getchar();\n    while (c<'0'||c>'9') c=getchar();\n    while (c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n}\nvoid build(int x,int l,int r)\n{\n    if (l==r)\n    {\n        tree[x]=a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(x<<1,l,mid);\n    build(x<<1|1,mid+1,r);\n    tree[x]=min(tree[x<<1],tree[x<<1|1]);\n}\nvoid pushdown(int node,int l,int r)\n{\n    tree[node<<1]+=lazy[node];\n    lazy[node<<1]+=lazy[node];\n    tree[node<<1|1]+=lazy[node];\n    lazy[node<<1|1]+=lazy[node];\n    lazy[node]=0;\n}\nvoid add(int node,int l,int r,int x,int y,int z)\n{\n    if (l==x&&r==y)\n    {\n        tree[node]-=z;\n        lazy[node]-=z;\n        return;\n    }\n    if (lazy[node]) pushdown(node,l,r);\n    int mid=(l+r)>>1;\n    if (y<=mid)\n        add(node<<1,l,mid,x,y,z);\n    else\n    if (mid<x)\n        add(node<<1|1,mid+1,r,x,y,z);\n    else\n    {\n        add(node<<1,l,mid,x,mid,z);\n        add(node<<1|1,mid+1,r,mid+1,y,z);\n    }\n    tree[node]=min(tree[node<<1],tree[node<<1|1]);\n}\nbool find(int node,int l,int r,int x,int y,int z)\n{\n    if(r==y&&x==l)\n    {\n        if (tree[node]>=z)\n        return true;\n        else\n        return false;\n    }\n    if (lazy[node]) pushdown(node,l,r);\n    int mid=(l+r)/2;\n    if (y<=mid)\n        return find(node<<1,l,mid,x,y,z);\n    else\n    if (x>mid)\n        return find(node<<1|1,mid+1,r,x,y,z);\n    else\n    return find(node<<1,l,mid,x,mid,z)&find(node<<1|1,mid+1,r,mid+1,y,z);\n}\nint main()\n{\n    read(n);\n    read(m);\n    for(int i=1;i<=n;i++)\n    read(a[i]);\n    build(1,1,n);\n    for (int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        read(z);\n        read(x);\n        read(y);\n        if (find(1,1,n,x,y,z))\n        {\n            add(1,1,n,x,y,z);\n        }\n        else\n        {\n            cout<<-1<<endl;\n            cout<<i<<endl;\n            return 0;\n        }\n    } \n    cout<<0<<endl;\n}\n```",
        "postTime": 1511428952,
        "uid": 50291,
        "name": "\u6c61\u9f99tea",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u4f18\u7f8e\u7684\u6811\u72b6\u6570\u7ec4...\n\n\u9996\u5148\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u88f8\u9898,\u4f46\u662f\u67d0\u849f\u84bb\u89c9\u5f97\u7ebf\u6bb5\u6811(\u5927\u5e38\u6570)\u4f1a\u88ab\u5361...\n\n\u6ca1\u6709\u4fe1\u4ef0\u5730\u6253\u4e86\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4...\n\n\n\u5177\u4f53\u505a\u6cd5\u662f\u4f9d\u6b21\u6c42\u6bcf\u5929\u7684\u6559\u5ba4\u6700\u591a\u4f9b\u7ed9\u81f3\u7b2c\u51e0\u6b21\u8ba2\u5355,\u7b54\u6848\u5c31\u662f\u6bcf\u4e00\u5929\u7684\u7b54\u6848\u53d6\u6700\u5c0f\u503c...\n\n\u5b9e\u73b0\u7684\u65f6\u5019\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206,\u590d\u6742\u5ea6nlogn\u5c0f\u5e38\u6570...\n\n\n\n\n\n\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline void read(int &x){\n              x=0 ; static int\\\n        fl=1;static char c=getchar();\n     for (;!('0'<=c&&c<='9');c=getchar())\n     if (c=='-')fl=-1;for (;('0'<=c&&c<=\\\n        '9');)x=(x<<3)+(x<<1)+c-'0',\\\n             c=getchar();x*=fl;\n}\nint n,m,c[1001000],a[1001000],ans=1e7,mx;\nstruct Node{\n    int who,val;\n};\nvector<Node>v[1001000];\nvoid add(int x,int v){ for (;x<=mx;x+=x&-x) c[x]+=v; }\nint que(int las){\n    int res=0;\n    for (int i=19;i>=0;i--) if (res+(1<<i)<=mx)\n        if (las>=c[res+(1<<i)])\n            res+=1<<i,las-=c[res];\n    return res+1;\n}\nint main(){\n    read(n); read(m); mx=m;\n    for (int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n    for (int x,y,z,i=1;i<=m;++i) \n        scanf(\"%d%d%d\",&x,&y,&z), v[y].push_back((Node){i,x}), v[z+1].push_back((Node){i,-x});\n    for (int i=1;i<=n;i++){\n        for (auto the:v[i]) add(the.who,the.val);\n        ans=min(ans,que(a[i]));\n    }\n    if (ans>m) printf(\"0\");\n    else printf(\"-1\\n%d\",ans);\n}\n```",
        "postTime": 1510055210,
        "uid": 13750,
        "name": "zhang2333",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\n**\u5148\u8bf4\u4e00\u4e0b\u603b\u4f53\u601d\u8def: \u4e8c\u5206\u7b54\u6848 + \u5dee\u5206\u524d\u7f00\u548c\u4f18\u5316\u3002**\n\n## \u4e00.\u601d\u8def\u5206\u6790\n\n\n\u9996\u5148\uff0c\u8bfb\u9898\u7684\u65f6\u5019\u6ce8\u610f\u5230\u8ba2\u5355\u987a\u5e8f\u662f\u5df2\u7ecf\u5b89\u6392\u597d\u7684\uff0c\u800c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6c42\u51fa\u54ea\u4e9b\u8ba2\u5355\u80fd\u88ab\u6ee1\u8db3\u3002\n\n\u6bd4\u8f83\u539f\u59cb\u7684\u4e00\u4e2a\u601d\u8def\u5c31\u662f:\u4e24\u91cdfor\u5faa\u73af\uff0c\u7b2c\u4e00\u91cd\u679a\u4e3e\u6bcf\u4e00\u5929\uff0c\u7b2c\u4e8c\u91cd\u6309\u987a\u5e8f\u904d\u5386\u6240\u6709\u7684\u9700\u6c42\uff0c\n\n\u770b\u4e00\u4e0b\u54ea\u4e2a\u9700\u6c42\u5728\u8fd9\u4e00\u5929\u9700\u8981\u6559\u5ba4\uff0c\u5e76\u7d2f\u52a0\u4e00\u4e0b\uff0c\u6bcf\u52a0\u4e00\u6b21\u6bd4\u8f83r[i]\u4e0eneed[i]\u7684\u5927\u5c0f\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u662fO(nm)\u7684\u590d\u6742\u5ea6\uff0c\u53ea\u670930\u5206\u3002\u800c\u4e14\u8fd9\u4e2a\u601d\u8def\u4e0d\u597d\u4f18\u5316\u3002\n\n\n\u6240\u4ee5\u8981\u6362\u4e2a\u601d\u8def\u3002\u8fd9\u91cc\u8981\u7528\u5230\u3010\u6b63\u96be\u5219\u53cd\u3011\u7684\u601d\u60f3\u3002\n\n\u5c31\u662f\uff0c\u5982\u679c\u7b54\u6848\u6b63\u7740\u6c42\u4e0d\u597d\u6c42\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\uff0c\u5982\u679c\u6709\u4e86\u7b54\u6848\uff0c\u600e\u4e48\u9a8c\u8bc1\u5b83\u3002\n\n\u53c8\uff1a\u901a\u5e38\u8fd9\u7c7b\u9898\u7b54\u6848\u53c8\u5177\u6709\u5355\u8c03\u6027\uff0c\u56e0\u6b64 => \u4e8c\u5206\u7b54\u6848\u3002\n\n\u8fd9\u4e2a\u9898\u6ee1\u8db3\u8fd92\u4e2a\u6761\u4ef6\uff1a\n\n\u2460\u5982\u679c\u77e5\u9053\u4e86\u80fd\u6ee1\u8db3\u5230\u54ea\u4e9b\u8ba2\u5355\uff0c\u6211\u4eec\u9a8c\u8bc1\u53ea\u9700\u8981\u4ece\u5934\u626b\u4e00\u904d\u5373\u53ef\u3002=>\u3010\u77e5\u9053\u7b54\u6848\u6613\u9a8c\u8bc1\u3011\n\n\u2461\u56e0\u4e3a\u8ba2\u5355\u662f\u6709\u987a\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u8ba2\u5355i\u80fd\u88ab\u6ee1\u8db3\uff0c\u90a3\u4e48\u8ba2\u53551...i-1\u4e00\u5b9a\u90fd\u80fd\n\n\u88ab\u6ee1\u8db3\uff1b\u5982\u679c\u8ba2\u5355i\u4e0d\u80fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u8ba2\u5355i+1...m\u4e00\u5b9a\u90fd\u4e0d\u80fd\u88ab\u6ee1\u8db3\u3002=>\u3010\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\u3011\n\n\n\u4e8c\u5206\u7b54\u6848\u7684\u4e00\u822c\u5957\u8def\u662f\uff1a\u4e8c\u5206 + check\u3002\n\n\u5957\u6a21\u677f=>\u6211\u4eec\u53ea\u8981\u4e8c\u5206\u51fa\u3010\u80fd\u6ee1\u8db3\u5230\u54ea\u4e2a\u8ba2\u5355\u3011(mid)\uff0c\u7136\u540echeck(mid)\uff0c\u8868\u793a\u9a8c\u8bc1\u4e00\u4e0b1...mid\u8fd9\u4e9b\n\n\u8ba2\u5355\u80fd\u5426\u88ab\u6ee1\u8db3\u3002\u5982\u679c\u80fd\u88ab\u6ee1\u8db3\uff0c\u5c31\u53bb\u3010\u53f3\u8fb9\u533a\u95f4\u3011\u627e\u2014\u2014\u5c1d\u8bd5\u6ee1\u8db3\u66f4\u591a\u7684\u8ba2\u5355\uff1b\u5982\u679c\u4e0d\u80fd\u6ee1\u8db3\uff0c\u5c31\n\n\u53bb\u3010\u5de6\u8fb9\u533a\u95f4\u3011\u627e\u2014\u2014\u5c1d\u8bd5\u66f4\u5c11\u7684\u8ba2\u5355\u80fd\u5426\u88ab\u6ee1\u8db3\u3002\n\n\n\u7136\u540e\uff0c\u5728check\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\u8981\u679a\u4e3e1...mid\u7684\u6240\u6709\u8ba2\u5355\uff0c\u628aneed[s...t]\u8fd9\u4e00\u6bb5\u533a\u95f4\u52a0\u4e0ad(\u8fd9\u4efd\n\n\u8ba2\u5355\u4eca\u5929\u9700\u8981\u591a\u5c11\u6559\u5ba4)\u3002\u8fd9\u91cc\u6709\u3010\u533a\u95f4\u52a0\u3011\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u3010\u5dee\u5206\u3011\uff0c\n\n\u5c06\u533a\u95f4\u64cd\u4f5c\u8f6c\u6362\u4e3a\u7aef\u70b9\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u7684\u6b21\u5e42\u964d\u4e00\u4e2a\uff0c\u5982O(n^2) -> O(n)\u3002\n\n/\\*\n\u600e\u4e48\u505a\u5462\uff1f\u5c31\u662f\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u5c06a[L...R]\u52a01\uff0c\u6211\u4eec\u53ef\u4ee5\u5728a[L]\u5904\u52a01\uff0c\u5728a[R+1]\u5904\u51cf1\uff0c\u7136\u540e\u5bf9a\u6570\u7ec4\n\n\u505a\u4e00\u904d\u524d\u7f00\u548c\uff0c\u5c31\u5b8c\u6210a[L...R]\u52a01\u7684\u64cd\u4f5c\u4e86\u3002\n\n\u5efa\u8bae\u8fd8\u662f\u81ea\u5df1\u641c\u4e00\u4e0b\u5dee\u5206\n\n\\*/\n\u4ee5\u672c\u9898\u4e3a\u4f8b\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u628a\u6240\u6709need[s...t]\u8fd9\u4e00\u6bb5\u533a\u95f4\u52a0d\uff0c\u66b4\u529b\u7684\u5199\u6cd5\u5c31\u662f\uff1a\n\n```cpp\nfor(int i = 1; i <= mid; ++i){\n    for(int j = a[i].s; j <= a[i].t; ++j)\n        need[j] += a[i].d;\n}\n```\n\u7136\u800c\u7528\u5dee\u5206\u5c31\u53ef\u4ee5\uff1a\n\n```cpp\nfor(int i = 1; i <= num; ++i){\n    need[ a[i].s ] += a[i].d;\n    need[ a[i].t+1 ] -= a[i].d;\n}\nfor(int i = 1; i <= n; ++i)\n    need[i] += need[i-1];\n```\n\u53ef\u4ee5\u4f18\u5316\u6389\u4e00\u5c42\u5faa\u73af\uff0c\u4f7fcheck\u7684\u590d\u6742\u5ea6\u964d\u5230\u4e86O(n)\u3002\n\n\n\u53e6\u5916\uff0c\u5dee\u5206\u662f\u53ef\u4ee5\u63a8\u5e7f\u7684\u3002\u6bd4\u598211.2\u665a\u4e0a\u7684noip Day2\u6a21\u62df\u8d5bT3\u2014\u2014\u661f\u7a7a(\u4e0d\u5267\u900f\u4e86)\u3002\n\n\n\u6700\u540e\uff0c\u4e0d\u8981\u6392\u5e8f\uff01\u4e0d\u8981\u6392\u5e8f\uff01\u8ba4\u771f\u8bfb\u9898\uff0c\u9898\u76ee\u5df2\u7ecf\u7ed9\u4f60\u5b89\u6392\u597d\u987a\u5e8f\u4e86\u3001\n\n\u6211\u6392\u4e86\u5e8f\uff0c\u4e00\u76f410\u5206...\u540e\u6765\u770b\u9898\u89e3\u624d\u5e61\u7136\u9192\u609f\u3002\n\n \n##  \u4e8c.AC\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 1e6 + 10;\nint n, m, ans;\n//\u4e8c\u5206\u80fd\u6ee1\u8db3\u591a\u5c11\u8ba2\u5355(logm),\u6bcf\u6b21\u5dee\u5206+\u524d\u7f00\u548cO(n)\u540e\u626b\u4e00\u904d\u6240\u6709\u5929\u6570O(n),\u5224\u65ad\u80fd\u5426\u6ee1\u8db3;\nlong long r[MAXN], cha[MAXN];\nstruct Order{\n    long long d;\n    int s, t;\n}a[MAXN];\n\n//\u68c0\u67e5\u80fd\u5426\u6ee1\u8db31...num\u8fd9\u4e9b\u8ba2\u5355,\u5982\u679c\u80fd,\u8fd4\u56detrue;\u5982\u679c\u4e0d\u80fd,\u8fd4\u56defalse;\nbool check(int num){\n    //\u5dee\u5206.\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e24\u4e2a\u6570\u7ec4:\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4,\u4e00\u4e2a\u539f\u6570\u7ec4;\n    //\u505a\u5b8c\u64cd\u4f5c\u540e\u5c06\u5dee\u5206\u6570\u7ec4\u505a\u4e00\u904d\u524d\u7f00\u548c\u518d\u4e0e\u539f\u6570\u7ec4\u76f8\u52a0\u5373\u53ef\u3002\n    for(int i = 1; i <= num; ++i){\n        cha[ a[i].s ] += a[i].d;\n        cha[ a[i].t+1 ] -= a[i].d;\n    }\n    for(int i = 1; i <= n; ++i){\n        cha[i] += cha[i-1];\n        if(cha[i] > r[i])return false;\n    }        \n    return true;\n}\n\nint main(){    \n    cin>>n>>m;\n    for(int i = 1; i <= n; ++i)scanf(\"%d\", &r[i]);\n    for(int i = 1; i <= m; ++i)scanf(\"%d%d%d\", &a[i].d, &a[i].s, &a[i].t);\n\n    //\u6211\u4e0d\u7528L\u662f\u56e0\u4e3a\u5c0f\u5199L\u548c1\u592a\u5bb9\u6613\u6df7\u4e86!\u597d\u5427\u6211\u627f\u8ba4\u6211\u61d2\u5f97\u8c03Dev-C++\u6570\u5b57\u989c\u8272...\n    int lef = 1, rig = m;\n    while(lef <= rig){\n        int mid = (lef + rig)>>1;\n        if(check(mid)){\n            ans = mid;    //\u5982\u679c\u80fd\u6ee1\u8db3\uff0c\u5c31\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u8ba2\u5355\u6570\n            lef = mid + 1;\n        }\n        else rig = mid - 1;\n        for(int i = 1; i <= n; ++i)cha[i] = 0;\n    }\n    if(ans == m)cout<<0<<endl;\n    else{\n        cout<<-1<<endl;\n        //\u56e0\u4e3a\u5f53\u6070\u597d\u4e0d\u6ee1\u8db3\u7684\u65f6\u5019\u4e8c\u5206\u9000\u51fa\uff0c\u800cans\u8bb0\u5f55\u7684\u662f\u6ee1\u8db3\u7684(\u6700\u540e\u4e00\u4e2a)\u4e00\u4e2a\u8ba2\u5355\uff0c\n        //\u6240\u4ee5ans+1\u5c31\u662f\u6070\u597d\u4e0d\u6ee1\u8db3\u7684\u90a3\u4e00\u4e2a\u8ba2\u5355\u3002\u8981\u7406\u89e3\u201c\u6070\u597d\u201d\u7684\u542b\u4e49\u3002 \n        //\u8fd9\u91cc\u4e0d\u7406\u89e3\u7684\u8bdd\uff0c\u53ef\u4ee5\u753b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6a21\u62df\u4e00\u4e0b\u4e8c\u5206\u7684\u6700\u540e\u4e00\u6b65\u3002 \n        cout<<ans+1<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1509717404,
        "uid": 21244,
        "name": "_Bluehole",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4e8c\u5206\u771f\u5fc3\u4e0d\u4f1a\uff0c\u6765\u4e00\u53d1\u4f18\u7f8e\u7684\u7ebf\u6bb5\u6811\uff08\u8dd1\u7684\u771f\u5fc3\u5feb\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define N 1000009\n#define gc getchar\nusing namespace std;\nstruct tree{\n    int l,r,num,tag;\n}t[N<<2];\nint n,m;\nint read(){\n    int x=0;char ch=gc();\n    while(!isdigit(ch))ch=gc();\n    while(isdigit(ch))x=(x<<3)+(x<<1)+ch-'0',ch=gc();\n    return x;\n}\nvoid bulid(int n,int l,int r){\n    int n1=n<<1,n2=n1|1;//\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50 ,\u53ea\u7b97\u4e00\u6b21\uff0c\u591a\u6b21\u8c03\u7528\uff0c\u8282\u7701\u65f6\u95f4\n    t[n].l=l;t[n].r=r;\n    if(l==r){\n        t[n].num=read();\n        return;\n    }\n    int mid=(l+r)>>1;\n    bulid(n1,l,mid);\n    bulid(n2,mid+1,r);\n    t[n].num=min(t[n1].num,t[n2].num);\n}\nvoid updata(int n,int l,int r,int d){\n    if(l<=t[n].l&&t[n].r<=r){\n        t[n].tag+=d;\n        t[n].num+=d;\n        return;\n    }\n    int n1=n<<1,n2=n1|1,mid=(t[n].l+t[n].r)>>1;\n    if(t[n].tag){\n        t[n1].num+=t[n].tag;\n        t[n2].num+=t[n].tag;            //\u6574\u9f50\u5212\u4e00 \n        t[n1].tag+=t[n].tag;    \n        t[n2].tag+=t[n].tag;\n        t[n].tag=0;\n    }\n    if(l<=mid)updata(n1,l,r,d);\n    if(r> mid)updata(n2,l,r,d);\n    t[n].num=min(t[n1].num,t[n2].num);\n}\nint main(){\n    n=read();\n    m=read();\n    bulid(1,1,n);\n    for(int i=1;i<=m;++i){\n        int d=read(),st=read(),end=read();\n        updata(1,st,end,-d);\n        if(t[1].num<0){        //\u6709\u6559\u5ba4\u4e0d\u591f\u5c31\u8f93\u51fa \n            printf(\"-1\\n%d\",i);\n            return 0;\n        }\n    }\n    printf(\"0\");\n    return 0;\n}\n```",
        "postTime": 1509673797,
        "uid": 40673,
        "name": "w_32768",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811+\u5361\u5e38\n\n\u6ca1\u60f3\u5230\u4e8c\u5206\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u66b4\u529b\u3002\n\n\u7136\u800c1e6\u7684\u6570\u636e\u7528\u7ebf\u6bb5\u6811\u9700\u8981\u4e00\u4e9b\u6280\u5de7\u3002\n\n\u8ba9\u8282\u70b9\u6ee1\u8db3\u5806\u6027\u8d28\uff0c\u4e0d\u8981\u7528cnt\u52a8\u6001\u5206\u914d\u3002\n\n\u53e6\u5916\uff0c\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u4e0d\u8981\u5b58\u4e0b\u6765\uff0c\u8981\u73b0\u7528\u73b0\u7b97\uff0c\u867d\u7136\u8fd9\u6837\u538b\u6808\u66f4\u591a\u3002\n\n\u6ca1\u6709\u4ee5\u4e0a\u4e24\u70b9\u4f18\u5316\uff0c\u4eb2\u6d4b\u4f1aTLE\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4f60\u7684CPU\u6bcf\u4e2a\u6838\u5fc3\u67094\u4e2a\u7b97\u672f\u8fd0\u7b97\u5355\u5143(\u52a0\u6cd5\u5668)\uff0c\u90fd\u80fd\u8fdb\u884c\u4f4d\u8fd0\u7b97\u3002\n\n\u800c\u4f60\u7684CPU\u6bcf\u4e2a\u6838\u5fc3\u53ea\u67092\u7ec4\u8bbf\u5b58\u3002\n\n(\u4ee5\u4e0a\u6570\u636e\u53c2\u8003Haswell\u67b6\u6784\u7684core i7\uff0cintel\u540e\u6765\u7684\u67b6\u6784\u5e94\u8be5\u5dee\u4e0d\u591a)\n\n\u5185\u5b58\u8bbf\u95ee\u672c\u6765\u5c31\u6162\uff0c\u6bcf\u6b21\u8bbf\u95ee\u7b97\u4f4d\u79fb\u8fd8\u5f97\u8ba1\u7b97\u52a0\u6cd5\u3002\n\n\u4e0dTLE\u624d\u602a\u3002\n\n\u8be6\u89c1\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u5b58\u50a8\u5668\u7684\u5c42\u6b21\u548cCPU\u7684\u67b6\u6784(\u8001\u4e86\uff0c\u5177\u4f53\u9875\u6570\u8bb0\u4e0d\u6e05\u4e86)\u3002\n\n```cpp\n#include<cstdio>\n#define mid ((l+r)>>1)\n#define debug cout\n#define inf 0x3f3f3f3f\n#define lson (pos<<1)\n#define rson ((pos<<1)|1)\nusing namespace std;\nconst int maxn=1e6+1e2;\nint mi[4*maxn],add[4*maxn];\nint m,n,x,s,e,ll,rr;\ninline int min(int a,int b){return a<b?a:b;}\ninline int getint()\n{\n    int fix=1,ret=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') fix=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9')\n    {\n        ret=ret*10+ch-'0';\n        ch=getchar();\n    }\n    return fix*ret;\n}\nvoid build(int pos,int l,int r)\n{\n    if(l==r)\n    {\n        mi[pos]=getint();\n        return;\n    }\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    mi[pos]=min(mi[lson],mi[rson]);\n}\ninline void push(int pos)\n{\n    if(add[pos])\n    {\n        add[lson]+=add[pos],mi[lson]+=add[pos];\n        add[rson]+=add[pos],mi[rson]+=add[pos];\n        add[pos]=0;\n    }\n}\nvoid update(int pos,int x,int l,int r)\n{\n    if(l>rr||r<ll) return;\n    if(ll<=l&&r<=rr)\n    {\n        add[pos]+=x;\n        mi[pos]+=x;\n        return;\n    }\n    push(pos);\n    update(lson,x,l,mid);\n    update(rson,x,mid+1,r);\n    mi[pos]=min(mi[lson],mi[rson]);\n}\nint query(int pos,int l,int r)\n{\n    if(l>rr||r<ll) return inf;\n    push(pos);\n    if(l<=l&&r<=r) return mi[pos];\n    return min(query(lson,l,mid),query(rson,mid+1,r));\n}\nint main()\n{\n    n=getint(),m=getint();\n    build(1,1,n);\n    int i;\n    for(i=1;i<=m;i++)\n    {\n        x=getint(),s=getint(),e=getint();\n        ll=s,rr=e;\n        update(1,-x,1,n);\n        if(query(1,1,n)<0) break;\n    }\n    if(i>m) puts(\"0\");\n    else puts(\"-1\"),printf(\"%d\\n\",i);\n    return 0;\n}\n\n```",
        "postTime": 1507548517,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u4e8c\u5206+\u5dee\u5206\u524d\u7f00\u548c\u3002\u5bf9\u8ba2\u5355\u53f7\uff08\u6709\u5e8f\u5e8f\u5217\uff09\u8fdb\u884c\u4e8c\u5206\uff0c\u5224\u65ad\u6559\u5ba4\u662f\u5426\u591f\u7528\u3002\u4e0d\u591f\u7684\u8bdd\uff0c\u79fb\u52a8\u53f3\u8fb9\u754c\uff0c\u5c1d\u8bd5\u66f4\u5c0f\u7684\u8ba2\u5355\u53f7\uff1b\u591f\u7528\u7684\u8bdd\uff0c\u5219\u79fb\u52a8\u5de6\u8fb9\u754c\uff0c\u770b\u66f4\u5927\u7684\u7f16\u53f7\u662f\u5426\u6ee1\u8db3\u3002\u5176\u4e2d\uff0cjudge\u8981\u7528\u5230\u5dee\u5206\u548c\u524d\u7f00\u548c\u7684\u6982\u5ff5\u6765\u5feb\u901f\u5224\u65ad\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define f(i,n,k) for(int i=1;i<=n;i+=k) \n#define ll long long\nusing namespace std;\nint n,m;\nconst int DNUM=1000001;\nint cc[DNUM];\nll sum[DNUM]; //\u5dee\u5206\nint d[DNUM];\nint s[DNUM];\nint e[DNUM];\nint minn=DNUM;\nbool judge(int mid)\n{\n    memset(sum,0,sizeof(sum));\n    f(i,mid,1)\n    {\n        sum[s[i]]+=d[i];  //\u7b2cs[i]\u5929\u5f00\u59cb\u9700\u8981\u591a\u501fd[i]\u4e2a\u6559\u5ba4\n        sum[e[i]+1]-=d[i]; //\u7b2ce[i]\u540e\u4e00\u5929\u51cf\u5c11d[i]\u4e2a\u6559\u5ba4\n    }\n    ll ss=0;\n    f(i,n,1)\n    {\n     ss+=sum[i]; //\u7528\u524d\u7f00\u548c\u5f97\u51fa\u7b2ci\u5929\u9700\u8981\u501f\u591a\u5c11\u6559\u5ba4\n     if(ss>cc[i]) //\u4e0d\u591f\u501f\u4e86\uff0c\u8bb0\u5f55\u4e0b\u7f16\u53f7\uff0c\u8fd4\u56detrue\n     {\n        minn=min(minn,mid);\n        return true;\n     }\n   }   \n   return false;\n}\nint main()\n{\n    ios::sync_with_stdio(false);  //\u4f18\u5316\u8f93\u5165\u8f93\u51fa\n    cin.tie(NULL);\n    cin>>n>>m;\n    f(i,n,1) cin>>cc[i];\n    f(i,m,1) cin>>d[i]>>s[i]>>e[i];\n    if(!judge(m))  //\u5982\u679c\u53ef\u4ee5\u6ee1\u8db3m\u4e2a\u8ba2\u5355\uff0c\u8f93\u51fa\u7ed3\u679c\u3002\u5426\u5219\u4e8c\u5206\u67e5\u627e\n    {\n        cout<<0;\n        return 0;\n    }\n    else\n    {\n        int l,r;\n        l=1;  \n        r=m;\n        int mid;\n        while(l<r)\n        {\n             mid=(l+r)/2;\n             if(judge(mid))\n                 r=mid;\n            else\n                l=mid+1;\n        }\n        cout<<-1<<endl;\n        cout<<minn<<endl;\n    }\n}\n```",
        "postTime": 1505690523,
        "uid": 37408,
        "name": "Randyhoads",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u533a\u95f4\u64cd\u4f5c\u95ee\u9898\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7ebf\u6bb5\u6811\n\n\u5f88\u660e\u663e\u662f\u5c31\u662f\u7ebf\u6bb5\u6811\u7684  \u533a\u95f4\u4fee\u6539\u5566\n\n\uff08\u6b63\u89e3\u662f\u4e8c\u5206\u7b54\u6848\uff09\n\n\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8bb0\u5f55\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff08\u6700\u5c0f\u80fd\u51fa\u501f\u7684\u6559\u5ba4\u6570\u76ee\uff09\n\n\u6bcf\u5f53\u4e00\u4e2a\u8bf7\u6c42 \u7533\u8bf7 \u4ece \u7b2cl\u5929\u5230\u7b2cr\u5929\u8981k\u4e2a\u6559\u5e08\u7684\u65f6\u5019\u6211\u4eec\u5c06l-r\u533a\u95f4\u5168\u90e8\u51cf\u53bbk\n\n\u6700\u540e\u8bbf\u95ee\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\uff0c\u5c0f\u4e8e0\uff0c\u5c31\u662f\u4e0d\u5408\u6cd5\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1000005;  \nint n,m,x,y,k,u,v,a[maxn];\nstruct Tree{ int l,r,Min,tag; }tre[maxn<<2];\ninline void read(int &x){\n    x=0; int f=1; char c=getchar();\n    while(c>'9'||c<'0'){ if(c=='-')f=-1; c=getchar(); }\n    while(c>='0'&&c<='9'){ x=x*10+c-'0'; c=getchar(); } x*=f;\n}\nvoid Build(int u,int l,int r){\n    tre[u].l=l,tre[u].r=r,tre[u].tag=0;\n    if(l==r){ read(tre[u].Min); return ; }\n    int Mid=(l+r)>>1;\n    Build(u<<1,l,Mid),Build(u<<1|1,Mid+1,r);\n    tre[u].Min=min(tre[u<<1].Min,tre[u<<1|1].Min);\n}\ninline void Push_Down(int u){\n    tre[u<<1].tag+=tre[u].tag,tre[u<<1|1].tag+=tre[u].tag;\n    tre[u<<1].Min-=tre[u].tag,tre[u<<1|1].Min-=tre[u].tag;\n    tre[u].tag=0;\n}\nvoid Modify(int u,int l,int r,int val){\n    if(l==tre[u].l&&tre[u].r==r){\n        tre[u].tag+=val,tre[u].Min-=val;\n        return ;\n    }\n    if(tre[u].tag) Push_Down(u);\n    int Mid=(tre[u].l+tre[u].r)>>1;\n    if(l>Mid) Modify(u<<1|1,l,r,val);\n    else if(r<=Mid)Modify(u<<1,l,r,val);\n    else Modify(u<<1,l,Mid,val),Modify(u<<1|1,Mid+1,r,val);\n    tre[u].Min=min(tre[u<<1].Min,tre[u<<1|1].Min);\n}\nint main(){\n    read(n),read(m);\n    Build(1,1,n);\n    for(int k,l,r,i=1;i<=m;++i){\n        read(k),read(l),read(r);\n        Modify(1,l,r,k);\n        if(tre[1].Min<0){ printf(\"-1\\n%d\\n\",i); return 0; }\n    }\n    printf(\"0\\n\");\n    return 0;\n}\n```\n\u4e0a\u9762\u662f\u4ee3\u7801\uff0c\u4e00\u822c\u7ebf\u6bb5\u6811\u662f95\u5206\uff0c\u52a0\u70b9\u7384\u5b66\u4f18\u5316\u5c31\u80fdA\u6389\u4e86\n\n\u4e0d\u61c2\u5f97\u53ef\u4ee5\u79c1\u4fe1\u6211\uff0c\u6216\u8005[http://twietn.cf/](http://twietn.cf/)\n",
        "postTime": 1503481491,
        "uid": 22884,
        "name": "Aiker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "\u597d\u50cf\uff0c\u8fd8\u6ca1\u6709\u7528zkw\u7ebf\u6bb5\u6811\u7684\u4eba\uff0c\u6240\u4ee5\u3002\u3002\u3002\n\nzkw\u7ebf\u6bb5\u6811(1.391s)\n\nt[]\u4e3a\u6811\u4e0a\u503c\uff0cv[]\u4e3a\u6c38\u4e45\u6807\u8bb0\u3002\n\n\u590d\u5236\u4ee3\u7801\n\n```cpp\n 1 #include<cstdio>\n 2 #include<cstring>\n 3 int n,m,q;\n 4 int a,b,c;\n 5 int t[1<<20],v[1<<20];\n 6 inline int min_(int x,int y){return x<y?x:y;}\n 7 void build(){\n 8     for(int i=1;i<=n;i++) scanf(\"%d\",&t[m+i]);\n 9     for(int i=m;i>0;i--) t[i]=min_(t[i<<1],t[i<<1|1]);\n10 }\n11 void reduce(int l,int r,int s){\n12     for(l=l+m-1,r=r+m+1;l^r^1;l>>=1,r>>=1){\n13         if(l<m) t[l]=min_(t[l<<1],t[l<<1|1])-v[l];\n14         if(~l&1) t[l^1]-=s,v[l^1]+=s;\n15         if(r<m) t[r]=min_(t[r<<1],t[r<<1|1])-v[r];\n16         if(r&1) t[r^1]-=s,v[r^1]+=s;\n17     }\n18     for(l,r;l&&r;l>>=1,r>>=1){\n19         t[l]=min_(t[l<<1],t[l<<1|1])-v[l];\n20         t[r]=min_(t[r<<1],t[r<<1|1])-v[r];\n21     }\n22 }\n23 int main(){\n24     freopen(\"classrooms.in\",\"r\",stdin);\n25     freopen(\"classrooms.out\",\"w\",stdout);\n26     scanf(\"%d%d\",&n,&q);\n27     for(m=1;m<=n;m<<=1);\n28     build();\n29     for(int i=1;i<=q;i++){\n30         scanf(\"%d%d%d\",&a,&b,&c);\n31         reduce(b,c,a);\n32         if(t[1]<0){\n33             printf(\"-1\\n%d\\n\",i);\n34             return 0;\n35         }\n36     }\n37     puts(\"0\");\n38     return 0;\n39 }\n```\n\u590d\u5236\u4ee3\u7801\n\u5410\u69fd\u4e00\u4e0b\u88f8\u7684\u7ebf\u6bb5\u6811\u4e5f\u8fc7\u4e86\uff0c\u7ebf\u6bb5\u6811(2.702s)\uff0c\u5e76\u6ca1\u6709\u5361\u523095\u5206\u3002\n\n\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u6bcf\u6b21\u68c0\u67e5\u662f\u5426\u5408\u6cd5\u90fd\u662f\u76f4\u63a5\u67e5\u7684root\u8282\u70b9\u3002\n",
        "postTime": 1495803901,
        "uid": 21020,
        "name": "Long\u00b7J\u00b7William",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "#\u7ebf\u6bb5\u6811\n\n\u4e3b\u8981\u539f\u56e0\u662f\u2026\u2026\u6211\u6ca1\u60f3\u5230\u600e\u4e48\u4e8c\u5206\u5dee\u5206\u2026\u2026\n\n\u76f4\u63a5\u5954\u7ebf\u6bb5\u6811\u53bb\u4e86\uff0c\u7ed3\u679c\u53d1\u73b0\u5927\u5bb6\u5199\u7684\u4e8c\u5206\u90fd\u597d\u7b80\u5355\u2026\u2026\n\n100AC\u4e86\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565=\\_=\uff0c\u4e0d\u8fc7\u4e2d\u9014\u6709\u597d\u51e0\u4e2a\u9884\u5904\u7406\u5c0f\u9519\u6298\u817e\u4e86\u4e24\u4e2a\u591a\u5c0f\u65f6\uff0c\u54ed\u778eQAQ\n\n##\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nconst int MAX_N = 0x000fffff+5;\nbool judge = false;\nlong long N, n, m, tree[2*MAX_N], subtree[2*MAX_N];//subtree\u6020\u60f0\u5904\u7406\u6811\uff08\u8d1f\u6811\uff09 \nint r[MAX_N], d[MAX_N], s[MAX_N], t[MAX_N];\nvoid init()//\u521d\u59cb\u5316 \n{\n    N=1;\n    while(N < n) N *= 2;\n    for(int i=1; i<=n; i++){\n        scanf(\"%d\", &r[i]);\n        tree[N+i-1] = r[i];\n    }\n    for(int i=N-1; i>0; i--){//\u6ce8\u610f\u8303\u56f4\u522b\u5199\u9519 \n        tree[i] = min( tree[i*2], tree[i*2+1] );\n    }\n}\n```\n/\\*\u540e\u9762\u7684\u53c2\u6570\u662f\u4e3a\u4e86\u8ba1\u7b97\u8d77\u6765\u65b9\u4fbf\u800c\u4f20\u5165\u7684\u3002\nk\u662f\u8282\u70b9\u7f16\u53f7\uff0cl,r\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u662f[l,r]\u533a\u95f4\\*/\n\n\n```cpp\nint deal(int a, int b, int k, int l, int r, int x){\n    if( r<a or b<l ) return tree[k] - subtree[k];\n    //\u5982\u679c[a,b]\u5b8c\u5168\u5305\u542b[l,r]\uff0c\u5219\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u503c\n    if( a<=l and r<=b ){\n        subtree[k] += x;\n        //printf(\"[%d,%d]-->(%d,%d),k=%d, tree=%lld, sub=%lld, root=%lld\\n\",a,b,l,r,k,tree[k],subtree[k],tree[1]-subtree[1]);\n        return tree[k] - subtree[k];\n    }\n    else{\n        //\u7ee7\u7eed\u4e8c\u5206\uff0c\u4e4b\u524d\u5bc4\u5b58\u7684sub\u4e0d\u5f97\u4e0d\u5411\u4e0b\u5206\u914d \n        subtree[k*2+0] += subtree[k];\n        int vl = deal( a, b, k*2+0, l, (l+r)/2, x );\n        subtree[k*2+1] += subtree[k];\n        int vr = deal( a, b, k*2+1, 1+(l+r)/2, r, x );\n        tree[k] = min( vl, vr ); //\u56de\u6eaf\u66f4\u65b0\u7ef4\u62a4\u6700\u5c0f\u503c\u6811 \n        subtree[k] = 0;\n        //printf(\"[%d,%d]-->(%d,%d),k=%d, tree=%lld, sub=%lld, root=%lld\\n\",a,b,l,r,k,tree[k],subtree[k],tree[1]-subtree[1]);\n        return tree[k];\n    } \n} \nint main()\n{\n    cin >> n >> m;\n    memset(tree,0x7f,sizeof(tree));\n    init(); judge = false;\n    for(int i=0;i<m;i++)\n        scanf(\"%d%d%d\", &d[i], &s[i], &t[i]); \n    for(int i=0;i<m;i++){\n        if( deal(s[i], t[i], 1, 1, N, d[i]) < 0) judge = true; \n        //\u8d1f\u6570\u8bf4\u660e\u6839\u8282\u70b9\u8868\u793a\u7684\u201c\u6570\u5217\u6700\u5c0f\u503c\u201d\u70b8\u4e86\uff08\u8d85\u6807\uff09 \n        if( judge ) { //\u56de\u5bb6\u5403\u996d \n            cout << \"-1\" <<endl << i+1 << endl;\n            break;\n        }\n    }\n    if(!judge) cout << \"0\" <<endl;\n    return 0;\n}\n```",
        "postTime": 1494830621,
        "uid": 25302,
        "name": "hansen97",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    },
    {
        "content": "```cpp\n        var a,ca,d,s,t:array[0..1000005] of longint;\n            i,j,k,l,n,m,r,o,now:longint;\n            tmt,ans:int64;\n            p:boolean;\n        begin\n             read(n,m);\n             for i:=1 to n do read(a[i]);\n             for i:=1 to m do read(d[i],s[i],t[i]);\n             d[m+1]:=a[1]+1; s[m+1]:=1; t[m+1]:=1;\n             l:=1; r:=m+1; now:=0;\n             while l<=r do\n             begin\n                  ans:=l+((r-l) shr 1);\n                  if ans>now then\n                                for i:=now+1 to ans do\n                                begin\n                                        inc(ca[s[i]],d[i]);\n                                        dec(ca[t[i]+1],d[i]);\n                                end\n                  else\n                                for i:=ans+1 to now do\n                                begin\n                                        dec(ca[s[i]],d[i]);\n                                        inc(ca[t[i]+1],d[i]);\n                                end;\n                  now:=ans;\n                  tmt:=0;\n                  p:=true;\n                  for i:=1 to n do\n                  begin\n                                tmt:=tmt+ca[i];\n                                if tmt>a[i] then begin p:=false; break; end;\n                  end;\n                  if p then l:=ans+1\n                       else r:=ans-1;\n             end;\n             if l=m+1 then writeln(0)\n             else\n                begin\n                     writeln(-1);\n                     writeln(l);\n                end;\n        end.\n```\n\u6570\u7ec4\u628aint64\u6539\u6210longint\uff0c\u6700\u6162\u7684\u4ece900+ms\u53d8\u6210\u4e86600+ms\uff0c\u6d1b\u8c37\u4e0a\u66f4\u662f\u4ece\u8d85\u65f6\u4e24\u4e2a\u70b9\u5230\u6700\u6162\u7684600+ms\uff0c\u544a\u8bc9\u6211\u4e3a\u4ec0\u4e48\u3002\n\u601d\u8def\uff1a\u6069\u4e8c\u5206\u7684\u8bdd\u4e0d\u7528\u8bb2\uff0c\u7136\u540e\u5c31\u662f\u5224\u65ad\u6ee1\u4e0d\u6ee1\u8db3\u7684\u90e8\u5206\u3002\n\n\u7528\u5230\u4e86\u4e00\u4e2a\u8bb0\u5f55\u7684\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u6027\u8d28\u662f\uff1aca[i]\u8868\u793aa[i]\u8fd9\u4e2a\u6570\u6bd4a[i-1]\u5927ca[i]\uff0c\u7136\u540e\u6211\u60f3\u4f60\u5df2\u7ecf\u77e5\u9053\u4e86\u3002\n\n\u8fd9\u4e2a\u6570\u7ec4\u5176\u5b9e\u5c31\u662f\u8bb0\u5f55\u4e00\u4e2a\u5dee\u503c\uff0c\u7136\u540e\u4f7f\u533a\u95f4\u52a0\u51cf\u7684\u590d\u6742\u5ea6\u53d8\u6210\u4e86O\uff081\uff09\uff0c\u4f46\u662f\u67e5\u8be2\u5c31\u662fO\uff08n\uff09\uff08\u67e5\u8be2\u4e00\u4e2a\u548c\u67e5\u8be2N\u4e2a\u590d\u6742\u5ea6\u4e00\u6837\uff09\u3002\n",
        "postTime": 1446457394,
        "uid": 4753,
        "name": "LN_handsome",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1083 \u3010\u501f\u6559\u5ba4\u3011"
    }
]