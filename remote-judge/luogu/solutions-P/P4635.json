[
    {
        "content": "\u597d\u9898\u3002\n\n\u9996\u5148\u80af\u5b9a\u662f\u5c1d\u8bd5\u786c\u4e0a\u7ebf\u6bb5\u6811......\u7136\u540e\u53d1\u73b0\u6bcf\u6b21 `operate1` \u5bf9 `operate2` \u7edf\u8ba1\u91cf\u7684\u5f71\u54cd\u4e0d\u662f\u5f88\u597d\u7b97......\n\n\u600e\u4e48\u529e\uff1f\n\n~~\u51c9\u62cc\u3002~~\n\n\u53d1\u73b0 `operate1` \u5176\u5b9e\u5c31\u662f\u6b63\u5e38\u7684\u533a\u95f4\u52a0\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u601d\u8003\u4e00\u4e0b\u5dee\u5206\uff08\u6bd5\u7adf\u6ca1\u5565\u601d\u8def\uff09\u3002\n\n\u73b0\u5728\u95ee\u9898\u5c31\u6765\u4e86\uff1a\u533a\u95f4\u52a0\u662f\u5426\u80fd\u591f\u8f6c\u5316\u4e3a\u5355\u70b9\u52a0\uff1f\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c**\u6709\u70b9\u95ee\u9898**\u3002\n\n\u56e0\u4e3a\u8981\u53d6\u5c1b\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u4e2d\u95f4\u7684\u5dee\u5206\u6570\u7ec4\u4e0d\u4e00\u5b9a\u5168\u90e8\u4e0d\u53d8\uff0c\u53ef\u80fd\u4f1a\u4e71\u4e03\u516b\u7cdf= =\u3002\n\n\u6ca1\u529e\u6cd5\u4e86= =\u3002\n\n\u6362\u79cd\u601d\u8def\uff0c\u4e3b\u8981\u7684\u6df7\u4e71\u5728\u4e8e\u53d6\u5c1b\uff0c\u90a3\u5982\u679c\u628a\u53d6\u5c1b\u6254\u8fdb\u5dee\u5206\u6570\u7ec4\uff08\u4e5f\u5c31\u662f\u539f\u6570\u7ec4\u5f00\u59cb\u4e71\u53d8\u4f46\u662f\u5dee\u5206\u6570\u7ec4\u6b63\u5e38\uff0c\u53cd\u6b63\u4e0d\u5173\u5fc3\u539f\u6570\u7ec4\u4e86= =\uff09\uff0c\u90a3\u662f\u4e0d\u662f `operate1` \u5c31\u6c34\u6389\u4e86\uff1f\n\n~~\u81f3\u5c11\u5148\u5e72\u6389\u4e00\u4e2a\u3002~~\n\n\u518d\u60f3\u60f3\uff0c\u8fd9\u4e2a\u5dee\u5206\u6570\u7ec4\u8981\u63a8\u56de\u539f\u5e8f\u5217\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u96be= =\u3002\n\n\u4e5f\u5c31\u662f\u524d\u7f00\u548c\u53d6\u5c1b\u3002\n\n\u90a3\uff0c\u65e2\u7136\u5dee\u5206\u6570\u7ec4\u90fd\u662f\u6b63\u7684\uff0c\u4ec0\u4e48\u6837\u7684\u4f4d\u7f6e\u4f1a\u5bf9 `operate2` \u4ea7\u751f\u8d21\u732e\uff1f\n\n\u4e5f\u5c31\u662f\u524d\u7f00\u548c\u8ba1\u7b97\u5230\u540e\u4e00\u4e2a\u6570\u7684\u7ed3\u679c\u53cd\u800c\u6bd4\u524d\u4e00\u4e2a\u6570\u5927\uff1f\n\n**\u4e5f\u5c31\u662f\u4e00\u8def\u52a0\u8fc7\u53bb\u4e4b\u540e\uff0c\u53d6\u5c1b\u628a\u5b83\u53d8\u5c0f\u4e86\uff0c\u4e5f\u5c31\u662f\u201c\u6ea2\u51fa\u201d\u4e86\u3002**\n\n\u89c2\u5bdf\u5230\u6211\u4eec\u53ef\u4ee5\u628a `operate2` \u7684\u533a\u95f4\u8f6c\u5316\u4e3a\u4e24\u4e2a\u524d\u7f00\u4e4b\u5dee\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u89e3\u51b3\u4e00\u8def\u524d\u7f00\u548c\u52a0\u5230\u67d0\u4e2a\u6570\u201c\u6ea2\u51fa\u201d\u4e86\u51e0\u6b21\u3002\n\n\u597d\u597d\u60f3\u60f3\uff0c\u5230\u8fd9\u91cc\u5df2\u7ecf\u6c34\u4e86\uff0c~~\u81ea\u884c\u601d\u8003\u5427\u3002~~\n\n~~\u6ca1\u601d\u8003\u51fa\u6765\u7684\u53ef\u4ee5\u7ee7\u7eed\u770b\u3002~~\n\n**\u5c31\u662f\u4e0d\u53d6\u5c1b\u524d\u7f00\u548c\u52a0\u5230\u8fd9\u91cc\uff0c\u9664\u4ee5 $p$ \u4e0b\u53d6\u6574\u7684\u503c\u3002**\n\n\u4e3a\u4ec0\u4e48\uff1f\u81ea\u884c\u601d\u8003\uff0c\u6216\u8005\u753b\u4e2a\u6817\u5b50\u819c\u4f60\u5427\u3002\n\n\u55ef\u5230\u8fd9\u91cc\u5c31\u6ca1\u4e86= =\u3002\n\nBIT\u7ef4\u62a4\uff0cOver.\n\n\u51e0\u4e2a\u4e8b\u60c5\uff1a\n\n1. \u8fd8\u662f\u6709\u70b9\u61f5\u7684\u5efa\u8bae\u518d\u7406\u7406\uff0c\u6216\u8005\u753b\u753b\u6837\u4f8b\uff0c\u6216\u8005\u627e\u6211\u95ee\uff0c\u6216\u8005\u6362\u4e2a\u9898\u89e3\u3002\n\n2. \u600e\u4e48\u60f3\u5230\u7684\uff1f\u771f\u5c31\u7384\u5b66\u5457= =\u3002\u53cd\u6b63\u6211\u662f\u62cd\u8111\u74dc\u60f3\u51fa\u6765\u7684\uff0c\u8fd9\u9898\u601d\u8def\u4e5f\u7b97\u662f\u5bf9\u65b0\u624b\u6bd4\u8f83\u4e0d\u53cb\u597d\uff08\u5427\uff1f\u53ef\u80fd\u6211\u83dc\uff09\u3002\n\n\u6700\u540e\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1e5+9;\nint n,m,p;\nint bit[N],raw[N];//raw\u5373\u539f\u5dee\u5206\u6570\u7ec4\uff0c\u7528\u6765\u5224\u65ad\u5355\u70b9\u52a0\u8be5\u52a0\u591a\u5c11\nvoid update(int pos,int val){\n\tfor(raw[pos]=(raw[pos]+val)%p;pos<=n;pos+=pos&-pos)bit[pos]+=val;\n}//\u70b9\u66f4\u65b0\nint query(int pos){\n\tint ret=0;\n\twhile(pos)ret+=bit[pos],pos&=pos-1;\n\treturn ret;\n}//\u524d\u7f00\u548c\u67e5\u8be2\nsigned main(){\n\tcin>>n>>m>>p;\n\tfor(int i=1,prv=0,x;i<=n;++i)cin>>x,update(i,(x-prv+p)%p),prv=x;//\u76f4\u63a5\u66f4\u65b0\u5dee\u5206\u6570\u7ec4\n\tfor(int num,l,r,c;m;--m){\n\t\tcin>>num>>l>>r;\n\t\tif(num==1)cin>>c,c%=p,++r,update(l,raw[l]+c>=p?c-p:c),update(r,raw[r]>=c?-c:p-c);//\u70b9\u66f4\u65b0\n\t\telse cout<<query(r)/p-query(l)/p<<endl;//\u524d\u7f00\u548c\u76f8\u51cf\n\t}\n\treturn 0;\n}//Over.\n```\n\n\u795d\u5927\u5bb6AC\uff01",
        "postTime": 1591359750,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4635 \u3010[SHOI2011]\u6539\u8fdb\u4ee3\u7801\u3011"
    },
    {
        "content": "# [SHOI2011]\u6539\u8fdb\u4ee3\u7801 \u9898\u89e3\n\n\u7531\u4e8e\u9898\u89e3\u533a\u552f\u4e8c\u7684\u4e24\u7bc7\u9898\u89e3\u5168\u90fd\u662f $\\mathcal{O}(n\\log n)$ \u505a\u6cd5\uff0c\u636e\u8bf4\u5bf9\u65b0\u624b\u4e0d\u592a\u53cb\u597d\uff0c\u56e0\u6b64\u6709\u4e86\u8fd9\u7bc7\u66f4\u597d\u7406\u89e3\u7684 $\\mathcal{O}(m\\sqrt n)$ \u7b97\u6cd5\u3002\n\n\u672c\u9898\u89e3\u5e76\u975e\u6700\u4f18\u89e3\uff0c\u5982\u679c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u8ffd\u6c42\u6700\u4f18\u89e3\u7684\u8bdd\u5efa\u8bae\u53bb\u770b\u5176\u4ed6\u4eba\u7684\u9898\u89e3\uff0c\u6211\u5728\u6b64\u4ec5\u662f\u4e3a\u4e86\u63d0\u4f9b\u53e6\u5916\u4e00\u79cd\u601d\u8def\u7f62\u4e86\u3002\n\n\u8003\u8651\u5f53\u533a\u95f4\u5185\u7684\u6570\u5168\u90e8\u52a0\u4e0a $x$  \u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u4ec0\u4e48?\n\n1. \u5bf9\u4e8e\u4e00\u5f00\u59cb\u5c31\u662f $a_i=a_{i+1}$ \u7684\u60c5\u51b5\uff0c\u65e0\u8bba\u52a0\u591a\u5c11\u90fd\u4e0d\u53ef\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u3002\n\n2. \u5bf9\u4e8e\u4e00\u5f00\u59cb\u662f $a_i<a_{i+1}$ \u7684\u60c5\u51b5\uff0c\u53ea\u6709\u5f53 $a_{i+1}+x\\geq p$ \u4e14 $a_i+x<p$ \u65f6\uff0c$a_{i+1}$ \u4f1a\u56e0\u4e3a\u6a21\u4e0a $p$ \u7684\u9650\u5236\u800c\u6539\u53d8 $a_i$ \u548c $a_{i+1}$ \u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u7b54\u6848\u4f1a\u52a0 $1$\u3002\n\n3. \u5bf9\u4e8e\u4e00\u5f00\u59cb\u662f $a_i>a_{i+1}$ \u7684\u60c5\u51b5\uff0c\u53ea\u6709\u5f53 $a_{i+1}+x<p$ \u4e14 $a_i+x\\geq p$ \u65f6\uff0c$a_i$ \u4f1a\u56e0\u4e3a\u6a21\u4e0a $p$ \u7684\u9650\u5236\u800c\u6539\u53d8 $a_i$ \u548c $a_{i+1}$ \u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u7b54\u6848\u4f1a\u51cf $1$\u3002\n\n\u5c06 $x$ \u79fb\u5230\u4e0d\u7b49\u53f7\u7684\u53f3\u8fb9\uff0c\u4f1a\u53d8\u6210: \n\n$\\left \\{ \\begin{aligned}\na_{i + 1} & \\geq p - x \\\\\na_i & < p - x\n\\end{aligned} \\right. \\to \\texttt{ans+=1}$ \u548c $\\left \\{ \\begin{aligned}\na_{i + 1} & < p - x \\\\\na_i & \\geq p - x\n\\end{aligned} \\right. \\to \\texttt{ans-=1}$\n\n\u90a3\u4e48\u753b\u4e00\u4e2a\u793a\u610f\u56fe\u51fa\u6765\u5c31\u4f1a\u662f\u4ee5\u4e0b\u8fd9\u6837\u7684: \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/br5yths5.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u6574\u4e2a\u533a\u57df\u5206\u6210\u4e86\u4e0a\u4e0b\u4e24\u90e8\u5206\u3002\n\n\u5982\u679c\u4f60\u56fe\u753b\u7684\u591a\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u4f60\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\uff0c\u5148\u8df3\u5230\u53e6\u4e00\u4e2a\u533a\u57df\uff0c\u6700\u540e\u53c8\u56de\u5230\u5f53\u524d\u7684\u533a\u57df\uff0c\u6700\u7ec8\u7b54\u6848\u503c\u4e00\u5b9a\u662f\u4e0d\u53d8\u7684\u3002\n\n\u63a8\u5e7f\u4e00\u4e0b\uff0c\u5f53\u7b2c $1$ \u4e2a\u70b9\u548c\u7b2c $n$ \u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u533a\u57df\u7684\u8bdd\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u503c\u662f\u4e0d\u53d8\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5728\u4e0d\u540c\u533a\u57df\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u70b9\u5728\u4e0b\u9762\u7684\u533a\u57df\uff0c\u7b2c $n$ \u4e2a\u70b9\u5728\u4e0a\u9762\u7684\u533a\u57df\u7684\u60c5\u51b5\uff0c\u4e00\u5f00\u59cb\u5148\u8df3\u5230\u4e0a\u9762\u7684\u533a\u57df\uff0c\u7b54\u6848\u52a0\u4e86 $1$\uff0c\u7136\u540e\u5c31\u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u540c\u4e00\u4e2a\u533a\u57df\u7684\u60c5\u51b5\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u70b9\u5728\u4e0a\u9762\u7684\u533a\u57df\uff0c\u7b2c $n$ \u4e2a\u70b9\u5728\u4e0b\u9762\u7684\u533a\u57df\u7684\u60c5\u51b5\uff0c\u4e00\u5f00\u59cb\u5148\u8df3\u5230\u4e0b\u9762\u7684\u533a\u57df\uff0c\u7b54\u6848\u51cf\u4e86 $1$\uff0c\u7136\u540e\u5c31\u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u5728\u540c\u4e00\u4e2a\u533a\u57df\u7684\u60c5\u51b5\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u3002\n\n\u90a3\u4e48\u5c31\u662f\u8003\u8651\u5982\u4f55\u505a\u6389\u8fd9\u9898\u4e86\u3002\n\n\u7531\u4e8e\u4e0a\u8ff0\u6761\u4ef6\u7684\u8981\u6c42\u662f\u8981\u5728\u52a0\u7684\u6570\u90fd\u662f\u4e00\u6837\u7684\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5206\u5757\uff0c\u8bb0\u5f55\u67d0\u4e00\u5757\u52a0\u7684\u6570\u4e3a $x$\uff0c\u5f53\u524d\u5757\u5728\u4e0d\u52a0 $x$ \u7684\u60c5\u51b5\u4e0b\u7b54\u6848\u4e3a $\\texttt{ans}$\u3002\n\n\u533a\u95f4\u52a0\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6563\u5757\u7684\u6570\uff0c\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5728\u6563\u5757\u91cc\u7684\u6570\uff0c\u5bf9\u8fd9\u4e2a\u6570\u52a0\u4e0a $c$ \u7136\u540e\u66b4\u529b\u66f4\u65b0\u8fd9\u4e2a\u6570\u4e0e\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u5bf9\u8fd9\u4e2a\u6563\u5757\u7684 $\\texttt{ans}$ \u7684\u8d21\u732e\uff1b\u5bf9\u4e8e\u6574\u5757\u7684\u6570\uff0c\u76f4\u63a5\u5bf9\u8fd9\u4e2a\u6574\u5757\u7684 $x$ \u52a0\u4e0a $c$ \u6a21\u4e0a $p$ \u5373\u53ef\u3002\n\n\u533a\u95f4\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u66b4\u529b\u67e5\u8be2\u6563\u5757\u91cc\u6bcf\u4e24\u4e2a\u6570\u4e4b\u95f4\u7684\u8d21\u732e\u5e76\u52a0\u5230\u672c\u6b21\u7684\u7b54\u6848\u4e0a\u53bb\uff0c\u7136\u540e\u5148\u5c06\u6bcf\u4e00\u4e2a\u6574\u5757\u7684 $\\texttt{ans}$ \u52a0\u5230\u6700\u7ec8\u7684\u7b54\u6848\u4e0a\u53bb\uff0c\u5e76\u6839\u636e\u4e0a\u8ff0\u505a\u6cd5\u4fee\u6539\u5f53\u524d\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6700\u540e\u8fd8\u8981\u6ce8\u610f\u628a\u6240\u6709\u76f8\u90bb\u4e24\u4e2a\u5757\u8fde\u63a5\u5904\u7684\u60c5\u51b5\u7684\u8d21\u732e\u52a0\u5230\u672c\u6b21\u7684\u7b54\u6848\u4e0a\u53bb\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u7531\u4e8e\u662f $\\mathcal{O}(m\\sqrt n)$ \u7b97\u6cd5\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0 TLE \u7684\u60c5\u51b5\uff0c\u5c06 $\\texttt{x+=y;x\\%=p;}$ \u7684\u5f62\u5f0f\u6539\u4e3a $\\texttt{x+=y;if (x>=p) x-=p;}$ \u7684\u5f62\u5f0f\u5373\u53ef\uff0c\u6ce8\u610f\u8fd9\u6837\u7684\u8bdd\u5728\u8f93\u5165\u7684 $c$ \u8981\u5148\u5bf9 $p$ \u53d6\u6a21\u3002\n\n\u5982\u679c\u6ca1\u6709\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u7406\u89e3\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ntemplate<typename T> inline\nvoid read(T& x) {\n    T f=1,b=0; char ch=getchar();\n    while (!isdigit(ch)) {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    } while (isdigit(ch))\n        b*=10,b+=ch-'0',ch=getchar();\n    x=f*b; return;\n}\ntemplate<typename T> inline\nvoid print(T x) {\n    if (x<0) putchar('-'),x=-x;\n    if (x==0) return putchar('0'),void();\n    int st[51]={0},k=0;\n    while (x) st[++k]=x%10,x/=10;\n    for (int i=k;i;i--) putchar(st[i]+'0');\n} const int MaxN=1e5+10;\nconst int SIZ=333;\nint n,m,p,a[MaxN];\nint bel[MaxN],add[MaxN],ans[MaxN];\n// \u66b4\u529b\u4fee\u6539\u6563\u5757\u5185\u7684\u6570\nvoid addsignle(int wh,int c) {\n    // \u5148\u5c06\u5f53\u524d\u6570\u548c\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u51cf\u53bb\n    if (bel[wh-1]==bel[wh]&&a[wh-1]>a[wh]) ans[bel[wh]]--;\n    if (bel[wh+1]==bel[wh]&&a[wh]>a[wh+1]) ans[bel[wh]]--;\u3001\n    // \u66b4\u529b\u4fee\u6539a[wh]\u7684\u503c\uff0c\u5bf9p\u53d6\u6a21\n    a[wh]+=c; if (a[wh]>=p) a[wh]-=p;\n    // \u518d\u5c06\u73b0\u5728\u5f53\u524d\u6570\u548c\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u52a0\u5230\u6563\u5757\u4e0a\n    if (bel[wh-1]==bel[wh]&&a[wh-1]>a[wh]) ans[bel[wh]]++;\n    if (bel[wh+1]==bel[wh]&&a[wh]>a[wh+1]) ans[bel[wh]]++;\n}\n// \u6574\u5757\u52a0c\uff0c\u5bf9p\u53d6\u6a21\nvoid addblock(int wh,int c) {\n    add[wh]+=c; if (add[wh]>=p) add[wh]-=p;\n}\n// \u83b7\u53d6\u6574\u5757\u5185\u5f53\u524d\u7684\u7b54\u6848\nint getblock(int wh) {\n    int tmp=ans[wh];\n    // \u5f53\u524d\u6574\u5757\u7684\u8303\u56f4\n    int l=(wh-1)*SIZ+1,r=wh*SIZ;\n    // l\u5728\u4e0b\u9762\u7684\u533a\u57df\uff0cr\u5728\u4e0a\u9762\u7684\u533a\u57df\u7684\u60c5\u51b5\n    if (a[l]<p-add[wh]&&a[r]>=p-add[wh]) tmp++;\n    // l\u5728\u4e0a\u9762\u7684\u533a\u57df\uff0cr\u5728\u4e0b\u9762\u7684\u533a\u57df\u7684\u60c5\u51b5\n    if (a[l]>=p-add[wh]&&a[r]<p-add[wh]) tmp--;\n    // \u8fd4\u56de\u7b54\u6848\n    return tmp;\n}\n// \u83b7\u53d6\u76f8\u90bb\u4e24\u4e2a\u5757\u8fde\u63a5\u5904\u7684\u7b54\u6848\nint getblockbet(int wh1,int wh2) {\n    // \u66b4\u529b\u83b7\u53d6\u4e24\u4e2a\u70b9\u7684\u503c\uff0c\u5bf9p\u53d6\u6a21\n    int x=a[wh1*SIZ]+add[wh1],y=a[(wh2-1)*SIZ+1]+add[wh2];\n    if (x>=p) x-=p; if (y>=p) y-=p; \n    // \u66b4\u529b\u5224\u65ad\u662f\u5426\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\n    return x>y;\n}\n// \u83b7\u53d6\u6563\u5757\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u7b54\u6848\nint getsignle(int wh1,int wh2) {\n    // \u66b4\u529b\u83b7\u53d6\u4e24\u4e2a\u70b9\u7684\u503c\uff0c\u5bf9p\u53d6\u6a21\n    int x=a[wh1]+add[bel[wh1]],y=a[wh2]+add[bel[wh2]];\n    if (x>=p) x-=p; if (y>=p) y-=p; \n    // \u66b4\u529b\u5224\u65ad\u662f\u5426\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\n    return x>y;\n}\nvoid update(int l,int r,int x) {\n    if (bel[l]==bel[r]) {\n        // l\u548cr\u5728\u540c\u4e00\u4e2a\u5757\u7684\u60c5\u51b5\n        for (int i=l;i<=r;i++) addsignle(i,x);\n        return;\n    } // \u6563\u5757\n    for (int i=l;i<=bel[l]*SIZ;i++) addsignle(i,x);\n    // \u6574\u5757\n    for (int i=bel[l]+1;i<bel[r];i++) addblock(i,x);\n    // \u6563\u5757\n    for (int i=(bel[r]-1)*SIZ+1;i<=r;i++) addsignle(i,x);\n}\nint query(int l,int r) {\n    int ans=0;\n    if (bel[l]==bel[r]) {\n        // l\u548cr\u5728\u540c\u4e00\u4e2a\u5757\u7684\u60c5\u51b5\n        for (int i=l;i<r;i++) ans+=getsignle(i,i+1);\n        return ans;\n    } // \u6563\u5757\n    for (int i=l;i<bel[l]*SIZ;i++) ans+=getsignle(i,i+1);\n    // \u6574\u5757\n    for (int i=bel[l]+1;i<bel[r];i++) ans+=getblock(i);\n    // \u6574\u5757\u8fde\u63a5\u5904\n    for (int i=bel[l];i<bel[r];i++) ans+=getblockbet(i,i+1);\n    // \u6563\u5757\n    for (int i=(bel[r]-1)*SIZ+1;i<r;i++) ans+=getsignle(i,i+1);\n    return ans;\n}\nsigned main() {\n    read(n),read(m),read(p);\n    for (int i=1;i<=n;i++) read(a[i]);\n    for (int i=1;i<=n;i++) bel[i]=(i-1)/SIZ+1;\n    for (int i=1;i<n;i++) {\n        if (bel[i]!=bel[i+1]) continue;\n        // \u5148\u66b4\u529b\u8ba1\u7b97\u67d0\u4e00\u4e2a\u6574\u5757\u7684\u7b54\u6848\n        if (a[i]>a[i+1]) ans[bel[i]]++;\n    }\n    for (int i=1;i<=m;i++) {\n        int op,l,r,x; read(op),read(l),read(r);\n        if (op==1) read(x),update(l,r,x%p);\n        else print(query(l,r)),putchar('\\n');\n    }\n}\n```\n\n",
        "postTime": 1657012922,
        "uid": 185758,
        "name": "LittleYang0531",
        "ccfLevel": 7,
        "title": "[SHOI2011]\u6539\u8fdb\u4ee3\u7801 \u9898\u89e3"
    },
    {
        "content": "\u5199\u5728\u524d\u9762\uff1a\u6b64\u9898\u6570\u636e\u51fa\u9505\uff0c\u8be6\u89c1\u8ba8\u8bba\uff0c\u8bf7\u7ba1\u7406\u5458\u5927\u5927\u4fee\u9505\u3002\n\n[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://aqours.life/index.php/solution-P4635.html)\n\n**[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P4635)** \n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u4e00\u4e2a\u6a21\u6570 $p$ \uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u52a0\u4e0a\u4e00\u4e2a\u6570\u3002\n2. \u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff0c\u6ee1\u8db3\u524d\u8005\u5927\u4e8e\u540e\u8005\uff0c\u8fd9\u6837\u7684\u6570\u5bf9\u7684\u4e2a\u6570\u3002\n\n\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u5bf9 $p$ \u53d6\u6a21\u3002\n\n$n\\leq 10^5 $\n\n## Solution\n\n\u8fd9\u9898\u505a\u6cd5\u5f88\u5de7\u5999\uff0c\u89c2\u6469\u4e86\u5f88\u4e45\u624d\u660e\u767d\u600e\u4e48\u505a\u3002\n\n\u6211\u4eec\u5148\u628a\u53d6\u6a21\u653e\u5728\u4e00\u8fb9\uff0c\u5982\u4f55\u5904\u7406\u533a\u95f4\u52a0\uff1f\u6211\u4eec\u60f3\u5230\u5dee\u5206\u3001\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u800c\u7ebf\u6bb5\u6811\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u51b3\u64cd\u4f5c2\uff0c\u533a\u95f4\u52a0\u7684\u65f6\u5019\u4e07\u4e00\u88ab\u53d6\u6a21\u4e86\uff0c\u7ebf\u6bb5\u6811\u6ca1\u6709\u529e\u6cd5\u7ef4\u62a4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5dee\u5206\u3002\u6211\u4eec\u5904\u7406\u51fa\u5dee\u5206\u6570\u7ec4\uff0c\u7136\u540e**\u5c06\u5dee\u5206\u6570\u7ec4\u5bf9 $p$ \u53d6\u6a21**\uff08\u8d1f\u6570\u8981\u5316\u4e3a\u6b63\u6570\uff09\u3002\n\n\u90a3\u4e48 $a[i]-a[i+1]>=1$ **\u76f8\u5f53\u4e8e\u53d6\u6a21\u4e4b\u540e\u7684\u5dee\u5206\u6570\u7ec4\u505a\u524d\u7f00\u548c\u7684\u65f6\u5019\u53d1\u751f\u4e86\u201c\u6ea2\u51fa\u201d**\u3002\n\n\u4f46\u662f\u8fd9\u6837\u7684\u65b9\u6cd5\u8fd8\u662f $(n^2)$ \u7684\uff0c\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u6211\u4eec\u51b7\u9759\u601d\u8003\u53d1\u73b0\uff0c\u5f53\u6ea2\u51fa\u65f6\uff0c\u524d\u7f00\u548c\u4f1a\u51cf\u5c11 $p$ \uff0c\u6240\u4ee5\u53ea\u9700\u7ef4\u62a4\u53d6\u6a21\u540e\u7684\u5dee\u5206\u6570\u7ec4\u7684\u524d\u7f00\u548c\uff0c\u5e76\u4e14\u8981\u5355\u70b9\u4fee\u6539\u3002\u90a3\u4e48\u6211\u4eec\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5c31\u89e3\u51b3\u4e86\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define qaq \"Lovely_XianShen\"\ntypedef long long ll;\nll n, m, p;\n\nll c[100005], del[100005];\n\ninline ll read() {\n    ll x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    };\n    while (!(ch < '0' || ch > '9')) {\n        x = (x << 3) + (x << 1) + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\n\ninline ll lowbit(int x) { return x & (-x); }\ninline void add(int x, ll d) {\n    c[x] += d;\n    while (x <= n) {\n        del[x] += d;\n        x += lowbit(x);\n    }\n}\ninline ll sum(int x) {\n    ll res = 0;\n    while (x) {\n        res += del[x];\n        x -= lowbit(x);\n    }\n    return res;\n}\n\nint main() {\n    n = read();\n    m = read();\n    p = read();\n    int last_number = 0;\n    for (int i = 1; i <= n; i++) {\n        int now_number = read();\n        add(i, now_number < last_number ? now_number + p - last_number : now_number - last_number);\n        last_number = now_number;\n    }\n    while (m--) {\u3000\n        // cout<<qaq<<endl;\n        int opt = read();\n        if (opt == 1) {\n            ll l = read(), r = read(), d = read();\n            add(l, (c[l] + d) % p - c[l]);\n            if (r <= n - 1)\n                add(r + 1, ((c[r + 1] - d % p) + p) % p - c[r + 1]);\n        } else {\n            ll l = read(), r = read();\n            printf(\"%d\\n\", sum(r) / p - sum(l) / p);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1574346200,
        "uid": 145596,
        "name": "AquaRio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4635 \u3010[SHOI2011]\u6539\u8fdb\u4ee3\u7801\u3011"
    },
    {
        "content": "\u7ed9\u4e2a\u65e0\u8111\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u533a\u95f4\u52a0\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u5408\u5e76\u533a\u95f4\u9996\u5148\u9700\u8981\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u7b54\u6848\u52a0\u8d77\u6765\uff0c\u56e0\u4e3a\u5408\u5e76\u533a\u95f4\u65f6\u4e2d\u95f4\u4f1a\u6709\u4e24\u4e2a\u6570\u76f8\u90bb\uff08\u5de6\u533a\u95f4\u6700\u53f3\u7aef\u7684\u6570\u548c\u53f3\u533a\u95f4\u6700\u5de6\u7aef\u7684\u6570\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u6570\uff0c\u5408\u5e76\u7b54\u6848\u65f6\u53ea\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u6570\u5927\u5c0f\u5173\u7cfb\u51b3\u5b9a\u533a\u95f4\u7b54\u6848\u662f\u5426 $+1$ \u5c31\u884c\u3002\n\n\u73b0\u5728\u53ea\u5269\u4e0b\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5728\u533a\u95f4\u52a0\u65f6\u7ef4\u62a4\u533a\u95f4\u7b54\u6848\uff1f\n\n\u9996\u5148\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u533a\u95f4\u52a0 $x$ \u548c\u533a\u95f4\u52a0 $x\\bmod p$ \u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u56e0\u6b64\u53ef\u4ee5\u9650\u5b9a $x$ \u7684\u503c\u57df\u4e3a $[0,p-1]$\u3002\n\n\u8003\u8651\u5728\u533a\u95f4\u52a0 $x$ \u524d\u540e\u54ea\u4e9b\u5927\u5c0f\u5173\u7cfb\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6613\u5f97\u53ea\u6709\u5728\u76f8\u90bb\u4e24\u4e2a\u6570 $a,b (a\\gt b)$ \u4e2d\uff0c$a+x\\ge p$ \u4e14 $b+x\\lt p$ \u65f6\u624d\u4f1a\u53d8\u5316\uff0c\u6b64\u65f6\u4fee\u6539\u8fc7\u540e\u7684 $a'$ \u4e00\u5b9a\u5c0f\u4e8e $b'$ \u3002\n\n\u7ee7\u7eed\u8003\u8651\u8be5\u6027\u8d28\uff0c\u53ef\u5f97\u51fa\u7ed3\u8bba\uff1a\u533a\u95f4\u52a0\u81f3\u591a\u53ea\u4f1a\u8ba9\u533a\u95f4\u7b54\u6848\u53d8\u5316 $1$\u3002\n![kjfkdsfds.png](https://s2.loli.net/2022/07/05/B943GTjs1SwEcZy.png)\n\n\u5982\u4e0a\u56fe\uff0c\u6b64\u65f6\u7ea2\u8272\u90e8\u5206\u533a\u95f4\u52a0\u540e $\\leq p$\uff0c\u84dd\u8272\u90e8\u5206\u533a\u95f4\u52a0\u540e $\\gt p$\uff0c\u7ea2\u8272\u90e8\u5206\u548c\u84dd\u8272\u90e8\u5206\u4ea4\u754c\u5904\u4f1a\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\u3002\u7531\u4e8e\u7ea2\u84dd\u90e8\u5206\u662f\u4ea4\u66ff\u7684\uff0c\u56e0\u6b64\u533a\u95f4\u52a0\u4e4b\u540e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e5f\u662f $+1,-1,+1...$ \u4ea4\u66ff\uff0c\u7ed3\u8bba\u6210\u7acb\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u8ba8\u8bba\u533a\u95f4\u7b54\u6848\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u548c\u533a\u95f4\u4e24\u7aef\u7684\u6570\u5728\u533a\u95f4\u52a0\u540e\u548c $p$ \u7684\u5927\u5c0f\u5173\u7cfb\u6709\u5173\uff0c\u800c\u4e0e\u4e2d\u95f4\u7684\u6570\u65e0\u5173\u3002\n\n\u505a\u5b8c\u4e86\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\uff08\u5047\u5b9a $n,m$ \u540c\u9636\uff09\n\n\n\n",
        "postTime": 1657007565,
        "uid": 425007,
        "name": "Kappa6174",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P4635 [SHOI2011] \u6539\u8fdb\u4ee3\u7801"
    }
]