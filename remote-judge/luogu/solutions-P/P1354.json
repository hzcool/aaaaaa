[
    {
        "content": "%%%%%%%%\u697c\u4e0b\u5927\u4f6c\uff0c\u4ee3\u7801\u5199\u5f97\u90a3\u4e48\u957f\uff0c\u8fde300\u591a\u884c\u7684\u4ee3\u7801\u90fd\u51fa\u6765\u4e86\uff0c\u4e00\u770b\u5230\u7684\u65f6\u5019\u786e\u5b9e\u5413\u4e86\u4e00\u8df3\u3002\n\n\u8fd9\u9898\u7684\u601d\u8def\u548c\u7b97\u6cd5\u697c\u4e0b\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5728\u6bcf\u4e00\u4e2a\u70b9\u4e4b\u95f4\u5229\u7528\u4e00\u6b21\u51fd\u6570\u5224\u65ad\u540e\u5efa\u8fb9\uff0c\u6700\u540e\u8dd1\u6700\u77ed\u8def\n\n\u8fd9\u91cc\u53ea\u5728\u4ee3\u7801\u98ce\u683c\u4e0a\u505a\u4e00\u4e9b\u5c0f\u4f18\u5316\n\n1.zhengrunzhe\u4f60\u5c31\u4e0d\u80fd\u7528\u5faa\u73af\u5417\uff1f29\u884c\u7684\u5efa\u8fb9\uff01\uff01\uff01\uff01\uff01\uff01\n\n2.\u5c31\u8fd9\u9898n<=20\u7684\u6570\u636e\u91cf\uff0c\u771f\u641e\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u8981\u5199dijkstra\uff0c\u8fd8\u5e26\u4f18\u5316\u2026\u2026\u2026\u2026\n\n\u76f4\u63a5\u5199floyd\u4e0d\u4e45\u597d\u4e86\u4e48\uff1f\uff1f\uff1f\n\n\u4e0a\u4ee3\u7801\uff0846\u884c\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct wall\n{\n    double x,z[5];//\u5b58\u50a8\u5899\u7684\u6a2a\u5750\u6807\u4e0e\u6bcf\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\n}w[22];\nint n;\ndouble e[101][101];\nbool hathes(int a,int b,int w1,int w2)\n{\n    if (b-a<2) return 1;\n    double x1=w[a].x,x2=w[b].x,y1=w[a].z[w1],y2=w[b].z[w2];\n    double k=(y1-y2)/(x1-x2),t=y1-x1*k;\n    for (int i=a+1;i<b;i++)\n    {\n        double y=k*w[i].x+t;\n        if (y<w[i].z[1]||y>w[i].z[2]&&y<w[i].z[3]||y>w[i].z[4]) return 0;\n    }\n    return 1;\n}\nvoid addedge(int a,int b,int w1,int w2)\n{\n    if (!hathes(a,b,w1,w2)) return;//\u5224\u65ad\u4e2d\u95f4\u662f\u5426\u6709\u5899\u963b\u6321\n    double x1=w[a].x,x2=w[b].x,y1=w[a].z[w1],y2=w[b].z[w2];\n    e[a*4+w1][b*4+w2]=e[b*4+w2][a*4+w1]=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));//\u8ba1\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb\uff0c\u5efa\u8fb9\n}\nint main()\n{\n    cin>>n;\n    memset(e,127,sizeof(e));\n    for (int i=1;i<=n;i++)\n    {\n        cin>>w[i].x;\n        for (int j=1;j<5;j++) cin>>w[i].z[j];\n    }\n    w[0].x=0;w[++n].x=10;\n    for (int i=1;i<5;i++) w[0].z[i]=w[n].z[i]=5;//\u521d\u59cb\u5316\u8d77\u70b9\u4e0e\u7ec8\u70b9\n    for (int i=0;i<n;i++) for (int j=i+1;j<=n;j++) for (int k=1;k<5;k++) for (int l=1;l<5;l++) addedge(i,j,k,l);//\u5faa\u73af\u5efa\u8fb9\n    for (int i=0;i<101;i++) e[i][i]=0;\n    for (int k=1;k<=n*4+4;k++)\n      for (int i=1;i<=n*4+4;i++)\n        for (int j=1;j<=n*4+4;j++)\n          e[i][j]=min(e[i][j],e[i][k]+e[k][j]);//floyd\n    printf(\"%.2f\\n\",e[1][n*4+1]);\n    return 0;\n}\n```",
        "postTime": 1500426470,
        "uid": 14380,
        "name": "24680esz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "\n   \n   \n   \n\u65e2\u7136\u8fd9\u662f\u4e00\u9053\u56fe\u8bba\u9898\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u8003\u8651\u5efa\u56fe\u3002  \n\u8fd9\u91cc\u628a\u56fe\u642c\u51fa\u6765\uff1a   \n\n![](https://cdn.luogu.com.cn/upload/pic/141.png)   \n\n\u867d\u7136\u5728\u8fd9\u4e2a\u623f\u95f4\u91cc\u53ef\u4ee5\u7528\u5f88\u591a\u79cd\u8d70\u6cd5\uff0c\u4f46\u5b9e\u9645\u4e0a\u56fe\u7684\u8282\u70b9\u53ea\u6709\u5899\u58c1\u7684\u7aef\u70b9\u548c\u59cb\u672b\u70b9\u5c31\u884c\u4e86\u3002    \n\u5c31\u6bd4\u5982 $(4,2),(4,7),(4,9),(7,4.5)$ \u7b49\u70b9\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u70b9\u76f8\u8fde\u5efa\u56fe\u5373\u53ef\u3002     \n\n\u5149\u662f\u8fd9\u6837\u8fd8\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u6709\u4e00\u4e9b\u8282\u70b9\u4e4b\u95f4\u8fde\u6210\u7684\u7ebf\u6bb5\u662f\u88ab\u5899\u9694\u65ad\u7684\u3002\u90a3\u6211\u5c31\u9700\u8981\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6765\u5224\u65ad\u4e00\u6761\u7ebf\u6bb5\u662f\u5426\u4e0e\u4e00\u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\uff08\u4e5f\u5c31\u662f\u5899\u58c1\uff09\u6709\u4ea4\u70b9\u3002   \n    \n\u8bbe\u7ebf\u6bb5\u7684\u4e24\u7aef\u70b9\u5206\u522b\u4e3a $(x_1,y_1)$ \u548c $(x_2,y_2)$\uff0c\u53ef\u4ee5\u5f97\u51fa\u5176\u6240\u5728\u76f4\u7ebf\u7684\u65b9\u7a0b\uff08\u7531\u4e8e $x_2\\neq x_1$ \u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u5199\uff09\uff1a\n\n$$y = \\frac{y_2-y_1}{x_2-x_1}(x-x_1)+y_1$$\n\u90a3\u4e48\u53ea\u9700\u8981\u4ee4 $x$ \u4e3a\u5899\u58c1\u6240\u5728\u7684\u6a2a\u5750\u6807\uff0c\u5224\u65ad $y$ \u503c\u662f\u5426\u5728\u5899\u58c1\u7684\u4e24\u7aef\u4e4b\u95f4\u3002\n\n\u5efa\u56fe\u7684\u95ee\u9898\u4e5f\u89e3\u51b3\u4e86\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u968f\u4fbf\u9009\u62e9\u4e00\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u90fd\u80fd\u901a\u8fc7\u3002  \n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#define inf 0x3f3f3f3f\n#define ll long long\n#define N 1003\n#define M 24\nusing namespace std;\n\nstruct edge{//\u6c42\u6700\u77ed\u8def\u7528,\u56fe\u7684\u8fb9,w\u5373\u8ddd\u79bb\n    int v;\n    double w;\n    edge(int v=0,double w=0):v(v),w(w){}\n};\n\nstruct node{//\u6c42\u6700\u77ed\u8def\u7528,\u56fe\u7684\u8282\u70b9,d\u4e3a\u5230\u6e90\u70b9\u8ddd\u79bb\n    int id;\n    double d;\n    node(int id=0,double d=0):id(id),d(d){}\n    bool operator < (const node& n1) const{\n        return d > n1.d;\n    }\n};\n\nstruct point{//\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u7684\u4e00\u4e2a\u70b9\n    double x,y;\n    point(double x=0,double y=0):x(x),y(y){}\n};\n\nstruct wall{//\u8bb0\u5f55\u4e00\u5835\u5899,y1,y2\u5206\u522b\u4e3a\u5899\u7684\u4e0a\u3001\u4e0b\u7eb5\u5750\u6807\n    double x,y1,y2;\n    wall(double x=0,double y1=0,double y2=0):x(x),y1(y1),y2(y2){}\n};\n\ndouble d[N];\npoint pt[M*4];\nwall wl[M*3];\ndouble x,a1,b1,a2,b2;\nvector<edge> adj[N]; //vector\u5b58\u56fe\nint n,m = 0,s,wallCount;\n//n\u4e3a\u8282\u70b9\u6570,m\u4e3a\u8fb9\u6570,s\u4e3a\u6e90\u8282\u70b9(\u4e5f\u5c31\u662f1\u53f7\u8282\u70b9,\u5165\u53e3)\n\ninline double dis(double x1,double y1,double x2,double y2){\n    //\u8ba1\u7b97\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u4e24\u70b9\u8ddd\u79bb\n    return sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n}\n\ninline bool intersect(point pt1,point pt2,wall wal){\n    //\u5224\u65ad\u8def\u5f84\u662f\u5426\u4e0e\u5899\u76f8\u4ea4\n    double wlx = wal.x,y1 = wal.y1,y2 = wal.y2;\n    if(pt1.x==pt2.x) return true;\n    double k = (pt1.y-pt2.y)/(pt1.x-pt2.x);\n    double b = pt1.y-k*pt1.x;\n    double wyy = k*wlx+b; //wyy\u53ef\u7231\u3002\n    return (wyy<y1 && wyy>y2 && pt1.x<wlx && pt2.x>wlx);\n    //\u4ea4\u70b9\u5728\u5899\u4e0a,\u4e5f\u5728\u8def\u5f84\u4e0a\n}\n\nvoid dijkstra(){\n    //dijkstra\u6c42\u6700\u77ed\u8def,SPFA\u5df2\u6b7b\n    s = 1;\n    for(int i=1;i<=n;++i) d[i] = inf;\n    d[s] = 0;\n    priority_queue<node> q;\n    q.push(node(s,0));\n    while(!q.empty()){\n        int u,v,l;\n        u = q.top().id;\n        double du = q.top().d;\n        q.pop();\n        if(du>d[u]) continue;\n        l = adj[u].size();\n        double w;\n        for(int i=0;i<l;++i){\n            w = adj[u][i].w;\n            v = adj[u][i].v;\n            if(du+w>=d[v]) continue;\n            d[v] = du+w;\n            q.push(node(v,d[v]));\n        }\n    }\n}\n\ninline void build(int from,point pt1){\n    //\u526a\u679d:\u4ecefrom\u53f7\u70b9\u5efa\u8fb9,\u4e4b\u524d\u7684\u90fd\u4e0d\u7528\u8003\u8651,\u56e0\u4e3a\u4e00\u5b9a\u4e0d\u76f8\u4ea4\n    point pt2;\n    //pt1\u4e3a\u8d77\u70b9,pt2\u4e3a\u7ec8\u70b9\n    for(int i=from+1;i<=n;++i){\n        bool connect = true;\n        pt2 = pt[i];\n        for(int j=1;j<=wallCount;++j){\n            //\u904d\u5386\u6240\u6709\u5899,\u5224\u65ad\u662f\u5426\u8fde\u901a\n            if(!intersect(pt1,pt2,wl[j])) continue;\n            connect = false;\n            break;\n        }\n        if(!connect) continue;\n        adj[from].push_back(edge(i,dis(pt1.x,pt1.y,pt2.x,pt2.y)));\n        ++m;\n    }\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    wallCount = n*3;\n    //\u5899\u7684\u6570\u91cf\u4e00\u5b9a\u662fn*3\n    pt[1] = point(0,5); //\u8d77\u70b9\n    int t = 2; //t\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u6570-1\n    for(int i=1;i<=n;++i){\n        scanf(\"%lf%lf%lf%lf%lf\",&x,&a1,&b1,&a2,&b2);\n        wl[(i-1)*3+1] = wall(x,10,b2);\n        wl[(i-1)*3+2] = wall(x,a2,b1);\n        wl[(i-1)*3+3] = wall(x,a1,0);\n        pt[t] = point(x,a1);\n        pt[t+1] = point(x,b1);\n        pt[t+2] = point(x,a2);\n        pt[t+3] = point(x,b2);\n        t += 4;\n    }\n    pt[t] = point(10,5); //\u7ec8\u70b9\n    n = t;\n    for(int i=1;i<n;++i) build(i,pt[i]);\n    dijkstra();\n    printf(\"%.2lf\",d[n]);\n}\n```",
        "postTime": 1540393637,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "\u7384\u5b66AC\uff08\u901f\u5ea6\u662f\u6240\u6709\u63d0\u4ea4\u4e2d\u6700\u6162\u7684\uff09\n\n\u4f46\u662f\u2026\u2026\u8fd9\u9898n<=20\uff0c\u4e3a\u4ec0\u4e48\u8981\u5efa\u56fe\u5462\uff1f\uff08\u5176\u5b9e\u6211\u4e5f\u60f3\u4e0d\u51fa\u6765\u56fe\u600e\u4e48\u5efa233333\uff09\n\n\u7531\u9898\u76ee\u53ef\u4ee5\u60f3\u5230DP\u72b6\u6001f[i][j]\u4e3a\u7b2ci\u5835\u5899\u5750\u6807\u4e3aj\u65f6\u7684\u6700\u77ed\u8def\n\n\u7531\u4e8ej\u662f\u5b9e\u6570\uff0c\u6240\u4ee5\u9700\u8981\u505a\u4e00\u4e9b\u5904\u7406\n\n\u6211\u4eec\u5c31\u9009\u62e9\u679a\u4e3e0.00\u30010.01...10.00\u4e3aj\n\n\u4e3a\u4e86\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5728\u5927\u90e8\u5206\u65f6\u5019\u5c06j\u7f6e\u4e8e\u6574\u6570\n\n\u4e8e\u662f\u6211\u4eec\u4ece0\u52301000\u679a\u4e3e\uff0c\u8fd0\u7b97\u7684\u65f6\u5019\u518d/100\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e86\n\n\u6545\u5f97\u51fa\u65b9\u7a0b\n\n\u5047\u5982f[i][j]\u8868\u793a\u5230\u7b2ci\u5835\u5899\uff0c\u7eb5\u5750\u6807\u4e3aj\u65f6\u7684\u6700\u77ed\u8def,a[i]\u8868\u793a\u7b2ci\u5835\u5899\u7684\u6a2a\u5750\u6807\uff0cdis(x1,y1,x2,y2)\u8868\u793a(x1,y1)\u548c(x2,y2)\u7684\u8ddd\u79bb\n\nf[i][j]=min{f[i-1][k]+dis(a[i],j,a[i-1],k)...f[i-1][k]+dis(a[i],j,a[i-1],k)};\n\n(\u4fdd\u8bc1\u6240\u6709\u7684\u70b9k\u90fd\u53ef\u4ee5\u5230\u8fbef[i][j])\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    int n;\n    double wall[25][5],f[20][2005]; //wall\u4ee3\u8868\u6bcf\u4e00\u5835\u5899\uff0c\n    double dis(double x1,double y1,double x2,double y2)//\u8ddd\u79bb\u51fd\u6570\n    {\n        return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));  //\u52fe\u80a1\u5b9a\u7406\n    }\n    int main()\n    {\n        memset(f,0x7f,sizeof(f));  //\u5148\u628a\u6240\u6709\u90fd\u7f6e\u6210\u65e0\u9650\u5927\n        for(int i=0;i<2005;i++)  //\u5230\u58990\uff08\u8d77\u70b9\uff09\u7684\u8ddd\u79bb\u4e3a0\n            f[0][i]=0;\n        cin>>n;  //\u8bfb\u5165n\n        wall[0][0]=0;\n        //\u521d\u59cb\u5316\u8d77\u70b9\uff0c\u628a\u8d77\u70b9\u770b\u6210\u6a2a\u5750\u6807\u4e3a0\u7684\u53ea\u6709\u4e00\u4e2a\u6d1e\u7684\u5899\n        wall[0][1]=wall[0][3]=wall[n+1][1]=wall[n+1][3]=5;\n        //\u7ec8\u70b9\u4e5f\u662f\uff0c\u628a\u7ec8\u70b9\u4e5f\u770b\u6210\u53ea\u6709\u4e00\u4e2a\u6d1e\u7684\u5899\n        wall[0][2]=wall[0][4]=wall[n+1][2]=wall[n+1][4]=5;\n        wall[n+1][0]=10;  //\u8bbe\u7f6e\u7ec8\u70b9\u7684\u6a2a\u5750\u6807\n        for(int i=1;i<=n;i++)\n            cin>>wall[i][0]>>wall[i][1]>>wall[i][2]>>wall[i][3]>>wall[i][4];  //\u8bfb\u5165\u9898\u76ee\u8981\u6c42\u7684x\uff0ca1\uff0cb1\uff0ca2\uff0cb2\n        for(int i=1;i<=n+1;i++)  //\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u9762\u5899\uff0c\u8fd9\u91cc\u5230\u58990\uff08\u8d77\u70b9\uff09\u7684\u8ddd\u79bb\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\n            for(int j=0;j<=1000;j++) //\u679a\u4e3ej\n                if((j/100.0>=wall[i][1]&&j/100.0<=wall[i][2])||(j/100.0>=wall[i][3]&&j/100.0<=wall[i][4]))  //\u5982\u679c\u679a\u4e3e\u7684j\u4e0d\u518d\u5899\u4e0a\n                    for(int k=0;k<=1000;k++)  //\u679a\u4e3ek\n                        if((k/100.0>=wall[i-1][1]&&k/100.0<=wall[i-1][2])||(k/100.0>=wall[i-1][3]&&k/100.0<=wall[i-1][4]))  //\u5982\u679ck\u4e0d\u5728\u5899\u4e0a\n                            f[i][j]=min(f[i-1][k]+dis(wall[i][0],j/100.0,wall[i-1][0],k/100.0),f[i][j]);  //\u627e\u6700\u4f18\u89e3\n        printf(\"%.2lf\\n\",f[n+1][500]);  //\u8f93\u51fa\n        return 0;  //\u8fd4\u56de0\n}\n```",
        "postTime": 1515244823,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6ca1\u6709C++\u7684\u9898\u89e3\uff0c\u6240\u4ee5:\n\n\u601d\u8def/\u7b97\u6cd5\uff1a\u6700\u77ed\u8def\n\n\u5751\u70b9\uff1a\u5c0f\u6570\u3001\u9ebb\u70e6\u7684\u5efa\u8fb9\n\n\u6211\u4eec\u628a\u8d77\u70b9\u7ec8\u70b9\u548c\u6bcf\u5835\u5899\u7684a1,b1,a2,b2\u90fd\u770b\u505a\u70b9\n\n\u4e00\u5f00\u59cb\u6211\u628an\u5148\u52a0\u4e0a2\uff0c\u5373\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u6240\u5728\u7684\u76f4\u7ebf\u770b\u4f5c\u4e00\u5835\u5899\n\n\u4ee4\u8d77\u70b9\u7684\u7f16\u53f7\u4e3a1\uff0c\u5f97\u51faa1[i]\u7684\u7f16\u53f7\u4e3a(i-2)\\*4+2,b1[i]\u5373(i-2)\\*4+3,a2[i]\u5373(i-1)\\*4,b2[i]\u5373(i-1)\\*4+1\uff0c\u7ec8\u70b9\u5373(n-2)\\*4+2\n\n\u7136\u540e\u5224\u65ad\u4e24\u70b9\u95f4\u662f\u5426\u65e0\u963b\u62e6\n\n\u5229\u7528\u4e00\u6b21\u51fd\u6570\uff0c\u6c42\u51fa\u8fde\u7ed3\u4e24\u70b9\u7684\u7ebf\u6bb5\u4e0e\u6bcf\u5835\u5899\u6240\u5728\u76f4\u7ebf\u7684\u4ea4\u70b9\n\n\u7136\u540e\u5224\u65ad\u4ea4\u70b9\u662f\u5426\u5728\u5899\u6d1e\uff0c\n\n\u5982\u679c\u90fd\u4e0d\u4f1a\u88ab\u6240\u6709\u5899\u6321\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5c31\u53ef\u4ee5\u5efa\u4e00\u6761\u8fb9\n\n\u8be5\u8fb9\u7684\u6743\u503c\u5c31\u662f\u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7\u516c\u5f0f\u6c42\u51fa\n\n\u6700\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u6211\u662f\u7528Dijkstra+Heap\u4f18\u5316\n\n\u66f4\u591a\u89e3\u91ca\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#define end (n-2)*4+2  //\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u662f\u7ec8\u70b9\u7684\u7f16\u53f7 \nusing namespace std;\ntypedef double dou;  //\u4e3a\u4e86\u65b9\u4fbf\u2026 \nconst int N=23,M=16*(N-1)*N;  //M\u662f\u8fb9\u7684\u6700\u5927\u6570\u91cf (\u5f53\u7136\u5e94\u8be5\u4e5f\u662f\u5f00\u591a\u4e86)\nconst dou INF=233333333.0;  //\u641e\u4e2a\u7b11\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\u5f00\u8fd9\u4e48\u5927 \nint n,head[N*4],num;\nstruct wall{dou x,a1,b1,a2,b2;int p1,p2,p3,p4;}a[N];  //\u5b58\u6bcf\u4e00\u5835\u5899\u7684\u4fe1\u606f\uff0cp1~p4\u8868\u793aa1~b2\u7684\u8282\u70b9\u7f16\u53f7 \nstruct edge{dou w;int to,next;}e[M];  //\u5b58\u8fb9\uff0c\u91c7\u7528\u90bb\u63a5\u8868 \nbool check(dou xa,dou ya,dou xb,dou yb,dou xx,dou aa,dou ba,dou ab,dou bb)  //\u5224\u65ad\u4ea4\u70b9\u662f\u5426\u4e0d\u88ab\u5835 \n{\n    //\u8bf4\u660e\u4e00\u4e0b\u90a3\u4e00\u5927\u4e32\u53d8\u91cf\uff0c\u6309\u987a\u5e8f\u5206\u522b\u8868\u793a\uff1a\n    //\u4e24\u70b9\u4e2d\u5176\u4e2d\u4e00\u70b9\u7684\u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\uff0c\u53e6\u4e00\u70b9\u7684\u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\uff0c\u5899\u7684\u6a2a\u5750\u6807\uff0c\u5899\u7684a1~b2 \n    dou k=(ya-yb)/(xa-xb);  //\u8ba1\u7b97\u659c\u7387 \n    dou b=ya-xa*k; //\u8ba1\u7b97\u622a\u8ddd \n    dou yy=k*xx+b;  //\u8ba1\u7b97\u4e0e\u5899\u7684\u4ea4\u70b9\u7684\u7eb5\u5750\u6807 \n    if ((yy>=aa&&yy<=ba)||(yy>=ab&&yy<=bb))return 1; //\u5982\u679c\u5728\u5899\u7a9f\u7abf\u4e2d\u5c31\u8bf4\u660e\u6ca1\u88ab\u5835 \n    return 0;  //\u5426\u5219\u5c31\u4e0d\u884c \n}\nvoid addedge(int u,int v,dou c)  //\u5efa\u4e00\u6761\u8fb9 \n{\n    e[++num].next=head[u];\n    e[num].to=v;\n    head[u]=num;\n    e[num].w=c;\n}\nvoid addonce(int p,int q,dou xp,dou yp,dou xq,dou yq,int posp,int posq)  //\u5224\u65ad\u80fd\u5426\u642d\u8fb9\u540e\u518d\u642d\u8fb9 \n{\n    //\u518d\u89e3\u91ca\u4e00\u4e0b\u90a3\u4e00\u5806\u53d8\u91cf\uff0c\u6309\u987a\u5e8f\u5206\u522b\u4e3a\uff1a\n    //\u4e00\u70b9\u7f16\u53f7\uff0c\u53e6\u4e00\u70b9\u7f16\u53f7\uff0c\u4e00\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u53e6\u4e00\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0c\u4e00\u70b9\u6240\u5728\u7684\u5899\u7684\u7f16\u53f7(\u4e0b\u6807)\uff0c\u53e6\u4e00\u70b9\u6240\u5728\u7684\u5899\u7684\u7f16\u53f7 \n    bool flag=0;\n    for (int o=posp+1;o<posq;o++) \n        if (!check(xp,yp,xq,yq,a[o].x,a[o].a1,a[o].b1,a[o].a2,a[o].b2))\n            {flag=1;break;}\n    dou dis=sqrt((xp-xq)*(xp-xq)+(yp-yq)*(yp-yq));  //\u8ba1\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb \n    if (!flag)addedge(p,q,dis),addedge(q,p,dis);  //\u5982\u679c\u53ef\u4ee5\u5efa\u5c31\u5efa\u8fb9 \n}\nvoid add(int l,int r)  //\u5efa\u51fa\u4e24\u5835\u5899\u7684\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0cl\uff0cr\u5206\u8868\u8868\u793a\u4e24\u5835\u5899\u7684\u7f16\u53f7 \n{\n    if (l>1&&r<n)  //\u5982\u679c\u4e0d\u662f\u8d77\u70b9\u6240\u5728\u7684\u5899\u6216\u7ec8\u70b9\u6240\u5728\u7684\u5899(\u662f\u4e0d\u662f\u5f88\u53ef\u6015233333333) \n        addonce(a[l].p1,a[r].p1,a[l].x,a[l].a1,a[r].x,a[r].a1,l,r),\n        addonce(a[l].p1,a[r].p2,a[l].x,a[l].a1,a[r].x,a[r].a2,l,r),\n        addonce(a[l].p1,a[r].p3,a[l].x,a[l].a1,a[r].x,a[r].b1,l,r),\n        addonce(a[l].p1,a[r].p4,a[l].x,a[l].a1,a[r].x,a[r].b2,l,r),\n        addonce(a[l].p2,a[r].p1,a[l].x,a[l].a2,a[r].x,a[r].a1,l,r),\n        addonce(a[l].p2,a[r].p2,a[l].x,a[l].a2,a[r].x,a[r].a2,l,r),\n        addonce(a[l].p2,a[r].p3,a[l].x,a[l].a2,a[r].x,a[r].b1,l,r),\n        addonce(a[l].p2,a[r].p4,a[l].x,a[l].a2,a[r].x,a[r].b2,l,r),\n        addonce(a[l].p3,a[r].p1,a[l].x,a[l].b1,a[r].x,a[r].a1,l,r),\n        addonce(a[l].p3,a[r].p2,a[l].x,a[l].b1,a[r].x,a[r].a2,l,r),\n        addonce(a[l].p3,a[r].p3,a[l].x,a[l].b1,a[r].x,a[r].b1,l,r),\n        addonce(a[l].p3,a[r].p4,a[l].x,a[l].b1,a[r].x,a[r].b2,l,r),\n        addonce(a[l].p4,a[r].p1,a[l].x,a[l].b2,a[r].x,a[r].a1,l,r),\n        addonce(a[l].p4,a[r].p2,a[l].x,a[l].b2,a[r].x,a[r].a2,l,r),\n        addonce(a[l].p4,a[r].p3,a[l].x,a[l].b2,a[r].x,a[r].b1,l,r),\n        addonce(a[l].p4,a[r].p4,a[l].x,a[l].b2,a[r].x,a[r].b2,l,r); //\u5404\u79cd\u6392\u5217\uff0c\u517116\u79cd(\u5176\u5b9e\u5982\u679c\u7528\u6570\u7ec4\u5b58\uff0c\u4e00\u904dfor\u53ef\u80fd\u5c31\u53ef\u4ee5\u4e86) \n    if (l==1&&r<n) //\u5982\u679c\u4e00\u5835\u5899\u662f\u8d77\u70b9\u7684\u5899\uff0c\u800c\u53e6\u4e00\u70b9\u4e0d\u662f\u7ec8\u70b9\u7684\u5899 \n        addonce(1,a[r].p1,0,5,a[r].x,a[r].a1,1,r),\n        addonce(1,a[r].p2,0,5,a[r].x,a[r].a2,1,r),\n        addonce(1,a[r].p3,0,5,a[r].x,a[r].b1,1,r),\n        addonce(1,a[r].p4,0,5,a[r].x,a[r].b2,1,r); //\u5171\u56db\u79cd \n    if (r==n&&l>1)  //\u5982\u679c\u4e00\u5835\u5899\u662f\u7ec8\u70b9\u6240\u5728\u7684\u5899\uff0c\u800c\u53e6\u4e00\u70b9\u4e0d\u662f\u8d77\u70b9\u7684\u5899 \n        addonce(a[l].p1,end,a[l].x,a[l].a1,10,5,l,n),\n        addonce(a[l].p2,end,a[l].x,a[l].a2,10,5,l,n),\n        addonce(a[l].p3,end,a[l].x,a[l].b1,10,5,l,n),\n        addonce(a[l].p4,end,a[l].x,a[l].b2,10,5,l,n); //\u5171\u56db\u79cd \n    if (l==1&&r==n) //\u5982\u679c\u4e24\u5835\u5899\u5c31\u662f\u8d77\u70b9\u7ec8\u70b9 \n        addonce(1,end,0,5,10,5,1,n);  //\u5c31\u4e00\u79cd \n}\nstruct heap //\u5806\u7684\u5f62\u5f0f \n{\n    int id,dis;\n    bool operator<(const heap &doby)\n    const\n    {\n        return dis>doby.dis;\n    }\n};\ntypedef heap h;  //\u4e3a\u4e86\u65b9\u4fbf \npriority_queue<h>q; //\u5efa\u7acb\u5806 \ndou d[N*4];\nbool f[N*4];\ndou dijkstra()  //\u8fea\u6770\u65af\u7279\u62c9\uff0c\u4e0d\u89e3\u91ca \n{\n    for (int i=2;i<=end;i++)d[i]=INF;\n    q.push((h){1,0});\n    while (q.size())\n    {\n        int p=q.top().id;q.pop();\n        if (f[p])continue;f[p]=1;\n        for (int i=head[p];i;i=e[i].next)\n            if (d[p]+e[i].w<d[e[i].to]&&!f[e[i].to])\n                d[e[i].to]=d[p]+e[i].w,\n                    q.push((h){e[i].to,d[e[i].to]});\n    }\n    return d[end]; //\u6700\u7ec8\u8fd4\u56de\u7684\u662f\u7ec8\u70b9\u7f16\u53f7\u7684d\uff0c\u800c\u4e0d\u662fd[n] (\u7ec8\u70b9\u6240\u5728\u7684\u5899\u7684\u7f16\u53f7\u7684d)\n}\nint main()\n{\n    scanf(\"%d\",&n);n+=2; //\u628an\u52a0\u4e0a\u4e862\uff0c\u56e0\u4e3a\u6211\u641e\u4e86\u4e00\u4e2a\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5899 \n    for (int i=2;i<n;i++)\n        scanf(\"%lf%lf%lf%lf%lf\",&a[i].x,&a[i].a1,&a[i].b1,&a[i].a2,&a[i].b2),\n        a[i].p1=(i-2)*4+2,a[i].p2=(i-2)*4+3,a[i].p3=(i-1)*4,a[i].p4=(i-1)*4+1;\n    for (int i=1;i<n;i++)\n        for (int j=i+1;j<=n;j++)\n            add(i,j);\n    printf(\"%.2lf\",dijkstra());\n    return 0;\n}  //\u5171111\u884c(\u5305\u542b\u6ce8\u91ca\u6240\u5360\u7684\u884c)\n```",
        "postTime": 1500026146,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "# \u601d\u8def\uff1a\u5efa\u56fe\uff0c\u8dd1\u6700\u77ed\u8def\n\n\u521a\u770b\u5230\u8fd9\u9053\u9898\uff0c\u770b\u6807\u7b7e\uff0c\u8ba1\u7b97\u51e0\u4f55\uff0c~~\u597d\u7684\u518d\u89c1\u6211\u4e0d\u505a\u4e86~~\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u76ee\u7edd\u5bf9\u4e0d\u4f1a\u8ba9\u4f60\u8d70\u66f2\u7ebf ~~\u6bd4\u5982\u692d\u5706\u3001\u53cc\u66f2\u7ebf\u3001\u629b\u7269\u7ebf\u3001bulabulabula~~ \uff0c\u6bd5\u7adf\u4e24\u70b9\u4e4b\u95f4\u7ebf\u6bb5\u6700\u77ed\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/141.png)\n\n\u518d\u770b\u4e00\u4e0b\u6837\u4f8b\u7684\u56fe\u6211\u4eec\u53d1\u73b0\uff0c\u6709\u6548\u7684\u70b9\u4f3c\u4e4e\u53ea\u6709\u5899\u7684\u4e24\u7aef\uff1f\u8fd9\u662f\u4e3a\u4ec0\u4e48\u55b5\uff1f\n\n>\u8fd9\u91cc\u6211\u4eec\u79f0\u6709\u6548\u7684\u70b9\u4e3a\u4e00\u4e2a\u6298\u7ebf\u6bb5\u4e0a\u7684\u6298\u70b9\uff08\u5982\u56fe\u4e2d\u70b9(7,4.5)\u5c31\u662f\u4e00\u4e2a\u6709\u6548\u70b9\uff09\u3002\n\n\u60f3\u8c61\u4e00\u6839\u6bdb\u7ebf\uff0c\u5c06\u5b83\u968f\u610f\u5730\u7a7f\u8fc7\u6837\u4f8b\u7684\u56fe\uff0c\u7136\u540e\u7528\u529b\u62c9\u76f4\u3002\u9664\u4e86\u88ab\u5899\u9876\u4f4f\u7684\u70b9\uff0c\u5176\u4ed6\u70b9\u663e\u7136\u90fd\u4e0d\u662f\u6709\u6548\u7684\u70b9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5899\u8fb9\u7f18\u7684\u70b9\u89c6\u4e3a\u6709\u6548\u70b9\uff0c\u7136\u540e\u8fde\u8fb9\u5efa\u56fe\u3002\n\n\u4f46\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u53ef\u80fd\u4f1a\u88ab\u5899\u6321\u4f4f\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u5224\u65ad\u662f\u5426\u9700\u8981\u6dfb\u52a0\u8fd9\u6761\u8fb9\u4e86\u3002\n\n\u8bbeA(ax,ay)\u548cB(bx,by)\u4ee5\u53ca\u4e00\u5835\u5728\u6a2a\u5750\u6807\u5728ax-bx\u4e4b\u95f4\u7684\u5899\uff0c\u5982\u679c\u5b58\u5728\u4ea4\u70b9(x,y)\u6709\n\n>$$\\frac{y-a{}_{y}}{x-a{}_{x}}\\qquad=\\frac{y-b{}_{y}}{x-b{}_{x}}\\qquad$$\n\n\u5316\u7b80\u53ef\u5f97\uff1a\n\n>$$y = \\frac{(x-a{}_{x})b{}_{y}-(x-b{}_{x})a{}_{y}} {b{}_{x}-a{}_{x}} \\qquad$$\n\nx\u662f\u5899\u7684\u6a2a\u5750\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u6c42\u51fay\uff0c\u5f53y\u5728\u8fd9\u5835\u5899\u5185\u65f6\uff0c\u5219\u65e0\u6cd5\u8fde\u63a5A\u5230B\u7684\u8fde\u8fb9\u3002\n\n\u5bf9\u6bcf\u4e00\u5bf9\u70b9\u8fdb\u884c\u8fde\u8fb9Link\u64cd\u4f5c\uff0c\u5176\u4e2d\u5f53\u4e24\u70b9\u7684\u6a2a\u5750\u6807\u76f8\u540c\u65f6\uff0c\u76f4\u63a5\u8fde\u63a5\uff08\u56e0\u4e3a\u5373\u4f7f\u8fd9\u4e24\u70b9\u4e2d\u95f4\u6709\u5899\u4e5f\u53ef\u4ee5\u6781\u9650\u64e6\u5899\u8d70\uff09\n\n\u6700\u540e\u5728\u65b0\u5efa\u7684\u56fe\u4e0a\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u8fd9\u9898\u6700\u591a\u53ea\u670920 * 4 = 80\u4e2a\u70b9\uff0c\u6240\u4ee5\u7528floyd\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u6253\u51fa\u4e00\u4e2a\u4e0d\u7b97\u5f88\u957f\u7684\u4ee3\u7801\uff0c\u7801\u98ce\u5f88\u4e11\uff0c\u6240\u4ee5\u4e0e\u5176\u7167\u7740\u8fd9\u4e2a\u6253\u8fd8\u4e0d\u5982\u770b\u5b8c\u4e0a\u9762\u7684\u601d\u8def\u540e\u81ea\u5df1\u6253\u4e00\u904d\u55b5OvO~\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nstruct _Wall{\n\tfloat x,up,down;\n\tint p;\n};//\u5899\u58c1 x\uff1a\u6a2a\u5750\u6807 down\uff1a\u4e0b\u7aef\u7684\u7eb5\u5750\u6807 up\uff1a\u4e0a\u7aef\u7684\u603b\u5750\u6807\n_Wall make(float x,float down,float up){\n\t_Wall w;\n\tw.x=x;w.up=up;w.down=down;\n\treturn w;\n}\nstruct point{\n\tfloat x,y;\n}pt[200];\npoint PT(float x,float y){\n\tpoint a;\n\ta.x=x;a.y=y;\n\treturn a;\n}\n_Wall wall[200][10];\nint n,pn;\nfloat mp[200][200];\ninline float Link(int u,int v){//\u5224\u65ad\u662f\u5426\u53ef\u8fde\u8fb9\uff0c\u5426\u5219\u8fd4\u56de0\n\tif(pt[u].x==pt[v].x) return abs(pt[u].y-pt[v].y);\n\tfor(int i=1;i<=n;++i){\n\t\tfloat X=wall[i][1].x,Y;\n\t\tif(X<=pt[u].x||X>=pt[v].x) continue;\n\t\tY=((X-pt[u].x)*pt[v].y-(X-pt[v].x)*pt[u].y)/(pt[v].x-pt[u].x);\n\t\tfor(int w=1;w<=3;++w)\n\t\tif(Y>=wall[i][w].down&&Y<=wall[i][w].up) return 0;\n\t}\n\tfloat delx=pt[v].x-pt[u].x,dely=pt[u].y-pt[v].y;\n\treturn sqrt(delx*delx+dely*dely);\n}\nint main(){\n\tfloat x,a1,a2,b1,b2;\n\tscanf(\"%d\",&n);\n\tpt[++pn]=PT(0,5);//\u8d77\u70b9\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x>>a1>>b1>>a2>>b2;\n\t\twall[i][1]=make(x,0,a1);pt[++pn]=PT(x,a1);\n\t\twall[i][2]=make(x,b1,a2);pt[++pn]=PT(x,b1);pt[++pn]=PT(x,a2);\n\t\twall[i][3]=make(x,b2,10);pt[++pn]=PT(x,b2);\n\t}\n\tpt[++pn]=PT(10,5);//\u7ec8\u70b9\n\tfor(int i=1;i<=pn;++i)\n\tfor(int j=i+1;j<=pn;++j) mp[i][j]=mp[j][i]=Link(i,j);\n\tfor(int k=1;k<=pn;++k)\n\tfor(int i=1;i<=pn;++i)\n\tfor(int j=1;j<=pn;++j)\n\tif(i!=k&&j!=k&&i!=j)\n\tif(mp[i][k]!=0&&mp[k][j]!=0){\n\t\tif(mp[i][j]==0) mp[i][j]=mp[i][k]+mp[k][j];\n\t\telse mp[i][j]=min(mp[i][j],mp[i][k]+mp[k][j]);\n\t}\n\tprintf(\"%.2f\\n\",mp[1][pn]);\n\treturn 0;\n}\n```\n",
        "postTime": 1572669094,
        "uid": 46326,
        "name": "NekoPass",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "\u628a\u6240\u6709\u5899\u7684\u9876\u70b9\u90fd\u63d0\u51fa\u6765\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u70b9\u7684\u963b\u6321\uff0c\u90a3\u4e48\u5efa\u8fb9\uff0c\u6700\u540e\u6700\u77ed\u8def\u5373\u53ef\u3002\n\n\n```delphi\n\n\ntype\n q=record\n    t1,t3:longint;\n    t2:real;\n   end;\nvar\n n,i,total,sum,j,k:longint;\n data:array[1..20,1..5] of real;\n save:array[1..1000] of q;\n map,queue:array[1..100] of longint;\n dist:array[1..100] of real;\n flag:array[1..100] of boolean;\n len:real;\n p:array[1..100,1..2] of real;\nprocedure add(a,b:longint;l:real);\nbegin\n inc(total);\n save[total].t1:=b;\n save[total].t2:=l;\n save[total].t3:=map[a];\n map[a]:=total;\nend;\nprocedure spfa;\nvar\n now,next,head,tail,x:longint;\nbegin\n for i:=1 to sum do\n  dist[i]:=100000000;\n dist[1]:=0;\n flag[1]:=true;\n head:=0;\n tail:=1;\n queue[1]:=1;\n while head<>tail do\n  begin\n   head:=(head mod 100)+1;\n   now:=queue[head];\n   flag[now]:=false;\n   x:=map[now];\n   while x<>-1 do\n    begin\n     next:=save[x].t1;\n     if dist[next]>dist[now]+save[x].t2 then\n      begin\n       dist[next]:=dist[now]+save[x].t2;\n       if not(flag[next]) then\n        begin\n         flag[next]:=true;\n         tail:=(tail mod 100)+1;\n         queue[tail]:=next;\n        end;\n      end;\n     x:=save[x].t3;\n    end;\n  end;\nend;\nfunction check(i,j:longint):boolean;\nvar\n l1,l2,k:longint;\n temp,slope,inter:real;\nbegin\n if i=1 then\n  l1:=0\n else\n  l1:=(i+2) div 4;\n l2:=(j+2) div 4;\n if l2=l1+1 then\n  exit(true);\n slope:=(p[j,2]-p[i,2])/(p[j,1]-p[i,1]);\n inter:=p[i,2]-slope*p[i,1];\n for k:=l1+1 to l2-1 do\n  begin\n   temp:=slope*data[k,1]+inter;\n   if (temp<=data[k,2]) or ((temp>=data[k,3]) and (temp<=data[k,4])) or\n      (temp>=data[k,5]) then\n    exit(false);\n  end;\n exit(true);\nend;\nbegin\n assign(input,'door.in');\n assign(output,'door.out');\n reset(input);\n rewrite(output);\n readln(n);\n fillchar(map,sizeof(map),$ff);\n for i:=1 to n do\n  readln(data[i,1],data[i,2],data[i,3],data[i,4],data[i,5]);\n inc(sum);\n p[sum,1]:=0;\n p[sum,2]:=5;\n for i:=1 to n do\n  begin\n   inc(sum);\n   p[sum,1]:=data[i,1];\n   p[sum,2]:=data[i,2];\n   inc(sum);\n   p[sum,1]:=data[i,1];\n   p[sum,2]:=data[i,3];\n   inc(sum);\n   p[sum,1]:=data[i,1];\n   p[sum,2]:=data[i,4];\n   inc(sum);\n   p[sum,1]:=data[i,1];\n   p[sum,2]:=data[i,4];\n  end;\n inc(sum);\n p[sum,1]:=10;\n p[sum,2]:=5;\n for i:=1 to sum-1 do\n  for j:=i+1 to sum do\n   begin\n    if (i=1) or (((i+2) div 4)<>((j+2) div 4)) then//\u6ce8\u610f\u8fd9\u4e2a\u70b9\u6240\u5c5e\u7684\u5899\u7684\u7f16\u53f7\u4e3a(k+2) div 4\uff0c\u5f00\u59cb\u50bbX\u4e86\u3002\u3002\u3002\n     begin\n      if check(i,j) then\n       begin\n        len:=sqrt(sqr(p[i,1]-p[j,1])+sqr(p[i,2]-p[j,2]));\n        add(i,j,len);\n       end;\n     end;\n   end;\n spfa;\n writeln(dist[sum]:0:2);\nend.\n\n\n```",
        "postTime": 1376547756,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "## \u9898\u76ee\u94fe\u63a5\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1354)\n## \u601d\u8def\uff1a\n\u5728\u9605\u8bfb\u9898\u76ee\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6700\u77ed\u8def\u5f84\u4e00\u5b9a\u662f\u4e00\u6761\u6298\u7ebf\u6216\u8005\u662f\u7ebf\u6bb5\uff0c\u56e0\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7ebf\u6bb5\u6700\u77ed\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u77ed\u8def\u5f84\u4f1a\u7ecf\u8fc7\u5899\u7f3a\u53e3\u5904\u7684\u70b9\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u7279\u6b8a\u6027\u8d28\uff0c\u4e14\u8d77\u70b9\u7ec8\u70b9\u56fa\u5b9a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u6362\u6210\u5355\u5143\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u91c7\u7528\u5806\u4f18\u5316\u7684 Dijkstra \u7b97\u6cd5\u89e3\u51b3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5899\u7f3a\u53e3\u5904\u7684\u70b9\u4f5c\u4e3a\u6709\u5411\u56fe\u4e2d\u7684\u8282\u70b9\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a\u8fb9\u6743\uff0c\u5728\u5efa\u8fb9\u4e4b\u524d\u5224\u65ad\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u88ab\u5899\u4f53\u963b\u62e6\u3002\n\n\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u516c\u5f0f\uff1a\n\n$$\\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}$$\n\n\u5bf9\u4e8e\u5224\u65ad\u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u5899\u4f53\u963b\u62e6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\u770b\u4f5c\u4e00\u6b21\u51fd\u6570\uff0c\u5982\u679c\u4e0e\u5899\u4f53\u6709\u4ea4\u70b9\u5219\u65e0\u6cd5\u5efa\u8fb9\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u8bbe\u8d77\u70b9\u4e3a $(x_1,y_1)$ \uff0c\u7ec8\u70b9\u4e3a $(x_2,y_2)$ \uff0c\u4e0e\u5899\u4f53\u7684\u4ea4\u70b9\u4e3a $(x,y)$ \n\n\u5219\u659c\u7387 $k$ \u4e3a\uff1a\n\n$$\\frac{y_2-y_1}{x_2-x_1}$$\n\n\u540c\u7406\uff1a\n\n$$\\frac{y-y_1}{x-x_1}=\\frac{y_2-y}{x_2-x}$$\n\n\u5c06 $y$ \u63d0\u51fa\u6709\uff1a\n\n$$y=\\frac{xy_2-x_1y_2-xy_1+x_2y_1}{x_2-x_1}$$\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u5899\u4f53\u5e76\u8fdb\u884c\u5224\u65ad\u5373\u53ef\u3002\n\n## \u4ee3 \u7801 \u653e \u9001\uff1a\n\n\u65e2\u7136\u4f60\u80fd\u627e\u5230\u8fd9\u9898\uff0c\u6211\u76f8\u4fe1\u4f60\u80fd\u77ac\u95f4\u505a\u51fa\u6765\u7684\u3002\n\n$Code:$\n```cpp\n#include<bits/stdc++.h>\n#define Max(a,b) (a>b?a:b)\n#define Min(a,b) (a<b?a:b)\n#define l(a,b,c,d) sqrt((a-c)*(a-c)+(b-d)*(b-d))\nusing namespace std;\nconst int N=100010,M=1000010,INF=0x3f3f3f3f;\nint head[N],ver[M],Next[M],tot;\ndouble edge[M],d[N];\nbool v[N];\nint n,cnt=1;\npriority_queue< pair<double, int> > q;\nstruct Point{\n\tint id;\n\tdouble x,y;\n}p[N][10];\nvoid add(int x,int y,double z){\n\tver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n}\nvoid init(){\n\tfor(int i=1;i<=4;i++)\n\t\tp[0][i].x=0,p[0][i].y=5,p[n+1][i].x=10,p[n+1][i].y=5;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>p[i][0].x;\n\t\tfor(int j=1;j<=4;j++)\n\t\t\tcin>>p[i][j].y,p[i][j].x=p[i][0].x;\n\t}\n\tfor(int i=1;i<=4;i++)\n\t\tp[0][i].id=1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=4;j++)\n\t\t\tp[i][j].id=++cnt;\n\tfor(int i=1;i<=4;i++)\n\t\tp[n+1][i].id=cnt+1; \n}\nbool Check(int i,int j,double sx,double sy,double ex,double ey){\n\tif(j-i<2)return 1;\n\tfor(int k=i+1;k<j;k++){\n\t\tdouble x=p[k][1].x;\n\t\tdouble y=((x-sx)*ey-(x-ex)*sy)/(ex-sx);\n\t\tif(!(y>=p[k][1].y&&y<=p[k][2].y)&&!(y>=p[k][3].y&&y<=p[k][4].y))return 0;\n\t}\n\treturn 1;\n}\nvoid dijkstra(){\n\tfor(int i=1;i<=N;i++)d[i]=INF;\n\tmemset(v,0,sizeof(v));\n\td[1]=0;\n\tq.push(make_pair(0,1));\n\twhile(q.size()){\n\t\tint x=q.top().second;q.pop();\n\t\tif(v[x])continue;v[x]=1;\n\t\tfor(int i=head[x];i;i=Next[i]){\n\t\t\tint y=ver[i];\n\t\t\tdouble z=edge[i];\n\t\t\tif(d[y]>d[x]+z){\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tinit();\n\tif(Check(0,n+1,0,5,10,5)){puts(\"10.00\");return 0;}\n\tfor(int i=0;i<=n;i++)\n\t\tfor(int j=i+1;j<=n+1;j++)\n\t\t\tfor(int l1=1;l1<=4;l1++)\n\t\t\t\tfor(int l2=1;l2<=4;l2++)\n\t\t\t\t\tif(Check(i,j,p[i][l1].x,p[i][l1].y,p[j][l2].x,p[j][l2].y))\n\t\t\t\t\t\tadd(p[i][l1].id,p[j][l2].id,l(p[i][l1].x,p[i][l1].y,p[j][l2].x,p[j][l2].y));\n\tdijkstra();\n\tprintf(\"%.2lf\\n\",d[cnt+1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1581945244,
        "uid": 137242,
        "name": "Dia\u043esi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "$\\text{DP}$\u3002\u8fd9\u9053\u9898\u7684\u8ff7\u60d1\u6027\u5f88\u5f3a\uff0c\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u50cf\u8ba1\u7b97\u51e0\u4f55\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u540e\u53ef\u4ee5\u60f3\u51fa**\u6700\u77ed\u8def**\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u8ba1\u7b97\u51e0\u4f55\u7684\u672c\u8d28\u8fd8\u5728\uff0c\u5728\u8fde\u8fb9\u65f6\u9700\u8981\u5224\u65ad\u4e2d\u95f4\u662f\u5426\u6709\u5899\u963b\u6321\uff0c\u4e0d\u662f\u5f88\u597d\u5199\uff0c\u4f46 $\\text{DP}$ \u5219\u4e0d\u96be\u60f3\u5230\uff0c\u4e14\u975e\u5e38\u597d\u5199\u3002\n\n\u6211\u4eec\u8bbe\u7f6e $f[i][j]$ \u8868\u793a **\u5f53\u524d\u4e3a\u7b2c $i$ \u5835\u5899\uff0c\u5782\u76f4\u4f4d\u7f6e\u4e3a $j$ \u65f6\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6**\u3002\u663e\u7136\uff0c\u5782\u76f4\u4f4d\u7f6e\u662f\u4e00\u4e2a\u5b9e\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83 $\\times100$\uff08\u7531\u4e8e\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff0c\u6240\u4ee5\u53ea\u4fdd\u7559\u4e24\u4f4d\u5373\u53ef\uff09\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4e86\u3002\n\n\u5728\u6bcf\u6b21\u8f6c\u79fb\u65f6\uff0c\u6211\u4eec\u4ece\u5f53\u524d\u8fd9\u9762\u5899\u7684\u4e24\u4e2a\u7a7a\u7f3a\u4e0a\u626b\u8fc7\u53bb\uff0c\u7136\u540e\u4ece\u4e0a\u4e00\u9762\u5899\u7684\u4e24\u4e2a\u7a7a\u7f3a\u4e0a\u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u8bbe\u5f00\u59cb\u5899\u4e3a $0$ \uff0c\u7ed3\u675f\u5899\u4e3a $n+1$\uff0c\u7a7a\u7f3a\u4e3a $(5,5)\\ (5,5)$\u3002\n\n\u4f2a\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n\tfor i=1 to n+1\n        for j=i_a1 to i_b1\n            for k=i-1_a1 to i-1_b1\n                f[i][j*100]=min(f[i][j*100],f[i-1][k*100]+dist(i_x,j,i-1_x,k))\n            for k=i-1_a2 to i-1_b2\n                f[i][j*100]=min(f[i][j*100],f[i-1][k*100]+dist(i_x,j,i-1_x,k))\n        for j=i_a2 to i_b2\n            for k=i-1_a1 to i-1_b1\n                f[i][j*100]=min(f[i][j*100],f[i-1][k*100]+dist(i_x,j,i-1_x,k))\n            for k=i-1_a2 to i-1_b2\n                f[i][j*100]=min(f[i][j*100],f[i-1][k*100]+dist(i_x,j,i-1_x,k))\n```\n\n$\\text{TIP : }$ $j$ \u548c $k$ \u90fd\u662f\u5b9e\u6570\u7c7b\u578b\u3002$i$ \u4e3a\u6574\u578b\u3002\n\n\u521d\u503c\u4e3a\u5168\u90e8\u8bbe\u4e3a $\\infty$ \uff0c\u7136\u540e\u628a $f[0]$ \u8fd9\u4e00\u7ef4\u8bbe\u6210 $0$\u3002\u7b54\u6848\u5728 $f[n+1][500]$ \u7684\u4f4d\u7f6e\u3002",
        "postTime": 1546664222,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "### \u795e\u5947DP\n\n\u628a\u623f\u9ad8$10$\u7c73\u62c6\u6210$2001(0$~$2000)$\u4e2a\u70b9\uff0c$dp[i][j]$\u8868\u793a\u505a\u7b2c$i$\u5835\u5899\u7684\u7b2c$j$\u4e2a\u4f4d\u7f6e\u7684\u6700\u77ed\u8def\uff0c\u5219\u8d77\u70b9\u4e3a$dp[0][1000]=0$\uff0c\u6bcf\u6b21\u5148\u679a\u4e3e\u8fd9\u4e2a\u5899\u4e0a\u7684\u7f3a\u53e3\uff0c\u518d\u679a\u4e3e\u4e0a\u4e00\u5c42\u4e24\u4e2a\u7f3a\u53e3\u8f6c\u79fb\uff08\u8fd9\u662f\u56e0\u4e3a\u4e24\u5835\u5899\u4e4b\u95f4\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u7f3a\u53e3\u770b\u5230\u7684\uff09\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e00\u5c42\u7684\u6700\u77ed\u8def\uff0c\u52a0\u4e0a\u52fe\u80a1\u5b9a\u7406\u6c42\u5f97\u4e24\u70b9\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\u6765\u8f6c\u79fb\u5566\uff0c\u6700\u540e\u7b54\u6848\u7684\u5c31\u662f$dp[n+1][1000]$\uff0c\u70b9\u505a\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u8981\u9664\u4ee5$200$\n\n\u56e0\u4e3a\u60f3\u7684\u65f6\u5019\u662f\u4ece\u540e\u5f80\u524d\u7740\u60f3\u7684\uff0c\u6240\u4ee5dp\u4e5f\u662f\u4ece\u540e\u5f80\u524d\u5012\u7740\u505a\u7684\u5566\uff0c\u5177\u4f53\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\uff08\u770b\u9898\u89e3\u91cc\u9762\u4e5f\u6709\u62c6\u6210$1000$\u7684\uff0c\u662f\u4e0d\u662f\u4f1a\u66f4\u5feb\u554aqwq\uff09\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\n#define Sqr(x) (x) * (x)\n#define Dis(x1, y1, x2, y2) sqrt(Sqr(x1 - x2) + Sqr(y1 - y2))\n\nint n;\ndouble dp[22][2001];\n\nstruct Wall\n{\n\tdouble x, a1, b1, a2, b2;\n} a[22];\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf(\"%lf%lf%lf%lf%lf\", &a[i].x, &a[i].a1, &a[i].b1, &a[i].a2, &a[i].b2);\n\ta[0].x = 0, a[0].a1 = a[0].b1 = a[0].a2 = a[0].b2 = 5;\n\ta[++n].x = 10, a[n].a1 = a[n].b1 = a[n].a2 = a[n].b2 = 5;\n\tmemset(dp, 0x4f, sizeof dp);\n\tdp[n][1000] = 0;\n\tdouble a1, a2, b1, b2;\n\tfor (int i = n - 1; i >= 0; --i)\n\t{\n\t\tWall tmp = a[i];\n\t\ta1 = tmp.a1, a2 = tmp.b1;\n\t\tfor (int j = a1 * 200; j <= a2 * 200; ++j)\n\t\t{\n\t\t\tb1 = a[i + 1].a1, b2 = a[i + 1].b1;\n\t\t\tfor (int k = b1 * 200; k <= b2 * 200; ++k)\n\t\t\t\tdp[i][j] = std::min(dp[i][j], Dis(tmp.x, j / 200.0, a[i + 1].x, k / 200.0) + dp[i + 1][k]);\n\t\t\tb1 = a[i + 1].a2, b2 = a[i + 1].b2;\n\t\t\tfor (int k = b1 * 200; k <= b2 * 200; ++k)\n\t\t\t\tdp[i][j] = std::min(dp[i][j], Dis(tmp.x, j / 200.0, a[i + 1].x, k / 200.0) + dp[i + 1][k]);\n\t\t}\n\t\ta1 = tmp.a2, a2 = tmp.b2;\n\t\tfor (int j = a1 * 200; j <= a2 * 200; ++j)\n\t\t{\n\t\t\tb1 = a[i + 1].a1, b2 = a[i + 1].b1;\n\t\t\tfor (int k = b1 * 200; k <= b2 * 200; ++k)\n\t\t\t\tdp[i][j] = std::min(dp[i][j], Dis(tmp.x, j / 200.0, a[i + 1].x, k / 200.0) + dp[i + 1][k]);\n\t\t\tb1 = a[i + 1].a2, b2 = a[i + 1].b2;\n\t\t\tfor (int k = b1 * 200; k <= b2 * 200; ++k)\n\t\t\t\tdp[i][j] = std::min(dp[i][j], Dis(tmp.x, j / 200.0, a[i + 1].x, k / 200.0) + dp[i + 1][k]);\n\t\t}\n\t}\n\tprintf(\"%.2lf\\n\", dp[0][1000]);\n\treturn 0;\n}\n```",
        "postTime": 1539756720,
        "uid": 32380,
        "name": "\u6563\u534e\u793c\u5f25",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    },
    {
        "content": "\u6761\u4ef6\u633a\u591a\u7684\uff0c\u6539\u4e86\u5f88\u591a\u6b21\uff0c\u52a0\u4e86\u5f88\u591a\u6761\u4ef6\u5224\u65ad\u624d\u6539\u5bf9\u3002\n\u9996\u5148\u8fd9\u4e2a\u56fe\u7684\u6240\u6709\u70b9\u8981\u8fdb\u884c\u8bb0\u5f55\uff0c\u6211\u7528\u7684\u662fp\u6570\u7ec4\u5b58\u4e00\u4e2a\u70b9\u7684x\uff0cy\uff0c\u7528d\u6570\u7ec4\u6765\u5b58\u6bcf\u4e00\u4e2a\u5899\u7684\u6570\u636e\uff0c\u628a\u6240\u6709\u7684\u70b9\u5b58\u5b8c\u4e4b\u540e\uff0c\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5f00\u59cb\u548c\u540e\u9762\u7684\u70b9\u6bd4\u8f83\uff0c\u5224\u65ad\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u5899\u963b\u788d\uff0c\u6ca1\u6709\u5c31\u5efa\u8fb9\uff0c\u6700\u540e\u7531\u4e8e\u6570\u636e\u8f83\u5c0f\uff0cfloyed\u641c\u4e00\u904d\u7ed3\u675f\u3002\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\n#include <cmath>\n#define inf 0x3f3f3f3f\nusing namespace std;\nint n;\ndouble dis[1005][1005];\nstruct sa1\n{\n    double x,a1,b1,a2,b2;\n} d[1005];\nstruct sa2\n{\n    double x,y;\n} p[1005];\nint judge(double x1,double y1,double x2,double y2,int p1,int p2)//\u5224\u65ad\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u963b\u788d\n{\n    if(x1==x2)return 0;\n    else\n    {\n        double k=(y2-y1)/(x2-x1);//\u4e24\u70b9\u95f4\u659c\u7387\n        for(int i=p1/4+1; i<=(p2-1)/4+1; i++)\n        {\n            double z=k*(d[i].x-x1)+y1;//\u4e24\u70b9\u7ec4\u6210\u76f4\u7ebf\u5728\u5899\u5904\u7684y\u503c\n            if(!((z>=d[i].a1&&z<=d[i].b1)||(z>=d[i].a2&&z<=d[i].b2)))\n                return 0;\n        }\n        return 1;\n    }\n}\nint main()\n{\n    while(scanf(\"%d\",&n)!=-1)\n    {\n        int num=0;\n        p[num].x=0,p[num].y=5,num++;//\u8d77\u70b9\n        for(int i=1; i<=n; i++)\n        {\n            scanf(\"%lf%lf%lf%lf%lf\",&d[i].x,&d[i].a1,&d[i].b1,&d[i].a2,&d[i].b2);\n            p[num].x=d[i].x,p[num].y=d[i].a1,num++;\n            p[num].x=d[i].x,p[num].y=d[i].b1,num++;\n            p[num].x=d[i].x,p[num].y=d[i].a2,num++;\n            p[num].x=d[i].x,p[num].y=d[i].b2,num++;\n        }\n        d[n+1].x=10,d[n+1].a1=0,d[n+1].b1=10,d[n+1].a2=10,d[n+1].b2=10;//\u628a\u6700\u53f3\u8fb9\u7684\u5899\u770b\u4f5c\u4e00\u6b21\u963b\u788d\uff0c\u5426\u5219\u6700\u540e\u4e00\u4e2a\u70b9\u96be\u5224\u65ad\n        p[num].x=10,p[num].y=5;//\u7ec8\u70b9\n        for(int i=0; i<=num; i++)\n            for(int j=0; j<=num; j++)dis[i][j]=inf;//\u521d\u59cb\u5316\n        for(int i=0; i<num; i++)\n            for(int j=i+1; j<=num; j++)\n                if(judge(p[i].x,p[i].y,p[j].x,p[j].y,i,j))\n                    dis[i][j]=sqrt((p[i].x-p[j].x)*(p[i].x-p[j].x)+(p[i].y-p[j].y)*(p[i].y-p[j].y));\n        for(int i=0; i<=num; i++)\n            for(int j=0; j<=num; j++)\n                for(int k=0; k<=num; k++)\n                    dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n        printf(\"%.2lf\\n\",dis[0][num]);\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1532774691,
        "uid": 105348,
        "name": "Liweiz",
        "ccfLevel": 0,
        "title": "P1354 \u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898"
    },
    {
        "content": "\u697c\u4e0bdalao\u601d\u8def\u5f88\u673a\u667a\uff0c\u641e\u51fa\u70b9\u548c\u8def\uff0c\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u2026\u2026\n\n\u7ed3\u679c\u9898\u89e3\u7684\u5927\u4f53\u601d\u8def\u90fd\u5728\u5f80\u8fd9\u65b9\u9762\u8dd1\u2026\u2026\n\n\u53ef\u662f\u5c31\u6211\u4e00\u4e2a\u4eba\u8d70\u4e86\u5f2f\u8def\u2026\u2026\n\n\u91cd\u70b9\u5728\u4e8e\u5904\u7406\u5899\u7684\u51e0\u4e2a\u9694\u5f00\u7684\u70b9\u8fde\u51fa\u7684\u8fb9\u662f\u5426\u4f1a\u548c\u5176\u4ed6\u7684\u5899\u76f8\u649e\u7684\u95ee\u9898\u2026\u2026\n\n\u5927\u91cf\u7684\u4ee3\u7801\u90fd\u5728\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b9e\u5728\u6d6a\u8d39\u554a\u2026\u2026\n\n\u5904\u7406\u51fa\u4e00\u4e2a\u4e4b\u540e\u540e\u9762\u90fd\u662fctrl+c\u4e0ectrl+v\u518d\u5e26\u4e0a\u4e00\u4e9b\u5fae\u5c0f\u7684\u4fee\u6539\u4e86\u2026\u2026\n\n\u4f46\u662f\u5176\u5b9e\u653e\u5230\u5faa\u73af\u548c\u51fd\u6570\u91cc\u4e4b\u540e\u4ee3\u7801\u91cf\u4f1a\u8fc5\u901f\u51cf\u5c11\u2026\u2026\n\n-------------------------------------------\u5206\u5272\u7ebf-------------------------------------------\n\n\u8d77\u70b9\u7ec8\u70b9\u548c\u6bcf\u5835\u5899\u7684a1,b1,a2,b2\u90fd\u770b\u505a\u70b9\n\n\u9996\u5148\u8d4b\u70b9\uff0c\u8fd9\u4e2a\u968f\u610f\u4e86\uff0c\u80fd\u51fa\u7ed3\u679c\u5c31\u884c\n\n\u7136\u540e\u6700\u5751\u7684\u5c31\u662f\u5224\u4efb\u610f\u4e24\u70b9\u95f4\n\n\u9996\u5148\u662f\u8d77\u70b9\u7ec8\u70b9\uff0c\u80fd\u8fde\u4e0a\u5c31\u4e0d\u7528\u7ee7\u7eed\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa10.00\n\n\u7136\u540e\u8d77\u70b9\u7ec8\u70b9\u548c1-n\u7684a1,a2,b1,b2\n\n\u6700\u540e1-n\u4efb\u610f\u4e24\u70b9\u8fd8\u8981\u8fde\u2026\u2026\n\n\u8fd9\u4e2a\u5c31\u7528\u7c7b\u4f3c\u4e00\u6b21\u51fd\u6570\u7684\u65b9\u6cd5\uff0c\u770b\u4e00\u4e0b\u5f53\u8fde\u7684\u8fb9\u4e0e\u5f53\u524d\u7684\u5899\u6240\u5728\u76f4\u7ebf\u76f8\u4ea4\u7684\u70b9\u662f\u5426\u662f\u5899\n\n\u8fb9\u6743\u4e5f\u633a\u597d\u6c42\u7684\uff0cbaidu\u4e24\u70b9\u95f4\u8ddd\u79bb\u516c\u5f0f\u5c31\u597d\u4e86\u2026\u2026\n\n\u6700\u540e\u6700\u77ed\u8def\uff0cdijkstra+\u4f18\u5148\u961f\u5217(\u53ef\u6709\u53ef\u65e0)\n\n\u60f3\u8981\u66f4\u8be6\u7ec6\u4e00\u70b9\u7684\u53ef\u4ee5\u770b\u697c\u4e0b\u90a3\u4f4d\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\nint n,count=2,cnt=0,pd,p,q,n1[30],n2[30],n3[30],n4[30],head[10010];\nfloat xx,yy,x[30],a1[30],a2[30],b1[30],b2[30],dis[10010];\nbool done[10010];\nstruct Edge//\u56fe\n{\n    int to,next;\n    float dis;\n}e[10010];\nstruct Heap\n{\n    int id;\n    float dis;\n    bool operator<(const Heap &h1)const\n    {\n        return dis>h1.dis;\n    }\n};\nvoid add(int x,int y,float z)//\u8fde\u8fb9\n{\n```\ncnt++,\n```cpp\n    e[cnt].next=head[x],\n    e[cnt].to=y,\n    e[cnt].dis=z,\n    head[x]=cnt;\n}\nvoid Dijkstra(int s)//dijkstra+\u4f18\u5148\u961f\u5217\u4f18\u5316(\u5176\u5b9e\u70b9\u5f88\u5c11\uff0c\u4f18\u5316\u53ef\u6709\u53ef\u65e0)\n{\n    priority_queue<Heap> h;\n    for(int i=1;i<=count;i++){dis[i]=2333333.000;}\n    dis[s]=0;\n    Heap x;\n    x.dis=0,x.id=s;\n    h.push(x);\n    while(!h.empty())\n    {\n        x=h.top();\n        h.pop();\n        p=x.id;\n        if(done[p]){continue;}\n        done[p]=1;\n        for(int i=head[p];i!=0;i=e[i].next)\n        {\n            q=e[i].to;\n            if(dis[p]+e[i].dis<dis[q])\n            {\n                dis[q]=dis[p]+e[i].dis,\n                x.dis=dis[q],\n                x.id=q;\n                h.push(x);\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){scanf(\"%f%f%f%f%f\",&x[i],&a1[i],&a2[i],&b1[i],&b2[i]);}\n    for(int i=1;i<=n;i++)\n    {\n        n1[i]=count,count++,\n        n2[i]=count,count++,\n        n3[i]=count,count++,\n        n4[i]=count,count++;//\u9876\u70b9\u6807\u53f7\uff0c\u51fa\u53d1\u70b9\u4e3a1\uff0c\u7ed3\u675f\u70b9\u5373\u4e3a\u6700\u540e\u7684count\u7684\u503c\n    }\n    pd=0;//\u5982\u679c\u80fd\u76f4\u63a5\u5230\u5c31\u4e0d\u7528\u8dd1\u4e00\u904d\u56fe\u4e86\n    for(int i=1;i<=n;i++)\n    {\n        if(!((a1[i]<=5.000&&a2[i]>=5.000)||(b1[i]<=5.000&&b2[i]>=5.000))){pd++;break;}\n    }\n    if(!pd)\n    {\n        printf(\"10.00\");\n        return 0;\n    }\n    for(int i=1;i<=n;i++)//\u8d77\u70b9\u7ec8\u70b9\u5206\u522b\u548c\u6bcf\u4e2a\u70b9\u94fe\u63a5\uff0c\u4e0d\u5177\u4f53\u505a\u89e3\u91ca\u4e86\n    {\n        pd=0;\n        for(int j=1;j<i;j++)\n        {\n            xx=x[j],yy=((a1[i]-5.000)/x[i])*x[j]+5.000;//\u7c7b\u4f3c\u4e00\u6b21\u51fd\u6570\u7684\u65b9\u6cd5\uff0c\u5904\u7406\u51fa\u7eb5\u5750\u6807\uff0c\u6709\u70b9\u9ebb\u70e6\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(1,n1[i],sqrt(x[i]*x[i]+abs(a1[i]-5.000)*abs(a1[i]-5.000)));\n            add(n1[i],1,sqrt(x[i]*x[i]+abs(a1[i]-5.000)*abs(a1[i]-5.000)));\n        }\n        pd=0;\n        for(int j=1;j<i;j++)\n        {\n            xx=x[j],yy=((a2[i]-5.000)/x[i])*x[j]+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(1,n2[i],sqrt(x[i]*x[i]+abs(a2[i]-5.000)*abs(a2[i]-5.000)));\n            add(n2[i],1,sqrt(x[i]*x[i]+abs(a2[i]-5.000)*abs(a2[i]-5.000)));\n        }\n        pd=0;\n        for(int j=1;j<i;j++)\n        {\n            xx=x[j],yy=((b1[i]-5.000)/x[i])*x[j]+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(1,n3[i],sqrt(x[i]*x[i]+abs(b1[i]-5.000)*abs(b1[i]-5.000)));\n            add(n3[i],1,sqrt(x[i]*x[i]+abs(b1[i]-5.000)*abs(b1[i]-5.000)));\n        }\n        pd=0;\n        for(int j=1;j<i;j++)\n        {\n            xx=x[j],yy=((b2[i]-5.000)/x[i])*x[j]+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(1,n4[i],sqrt(x[i]*x[i]+abs(b2[i]-5.000)*abs(b2[i]-5.000)));\n            add(n4[i],1,sqrt(x[i]*x[i]+abs(b2[i]-5.000)*abs(b2[i]-5.000)));\n        }\n        pd=0;\n        for(int j=n;j>i;j--)\n        {\n            xx=x[j],yy=((a1[i]-5.000)/(10.000-x[i]))*(10.000-x[j])+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(count,n1[i],sqrt((10.000-x[i])*(10.000-x[i])+abs(a1[i]-5.000)*abs(a1[i]-5.000)));\n            add(n1[i],count,sqrt((10.000-x[i])*(10.000-x[i])+abs(a1[i]-5.000)*abs(a1[i]-5.000)));\n        }\n        pd=0;\n        for(int j=n;j>1;j--)\n        {\n            xx=x[j],yy=((a2[i]-5.000)/(10.000-x[i]))*(10.000-x[j])+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(count,n2[i],sqrt((10.000-x[i])*(10.000-x[i])+abs(a2[i]-5.000)*abs(a2[i]-5.000)));\n            add(n2[i],count,sqrt((10.000-x[i])*(10.000-x[i])+abs(a2[i]-5.000)*abs(a2[i]-5.000)));\n        }\n        pd=0;\n        for(int j=n;j>1;j--)\n        {\n            xx=x[j],yy=((b1[i]-5.000)/(10.000-x[i]))*(10.000-x[j])+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(count,n3[i],sqrt((10.000-x[i])*(10.000-x[i])+abs(b1[i]-5.000)*abs(b1[i]-5.000)));\n            add(n3[i],count,sqrt((10.000-x[i])*(10.000-x[i])+abs(b1[i]-5.000)*abs(b1[i]-5.000)));\n        }\n        pd=0;\n        for(int j=n;j>1;j--)\n        {\n            xx=x[j],yy=((b2[i]-5.000)/(10.000-x[i]))*(10.000-x[j])+5.000;\n            if(!((yy>=a1[j]&&yy<=a2[j])||(yy>=b1[j]&&yy<=b2[j]))){pd++;break;}\n        }\n        if(!pd)\n        {\n            add(count,n4[i],sqrt((10.000-x[i])*(10.000-x[i])+abs(b2[i]-5.000)*abs(b2[i]-5.000)));\n            add(n4[i],count,sqrt((10.000-x[i])*(10.000-x[i])+abs(b2[i]-5.000)*abs(b2[i]-5.000)));\n        }\n    }\n    for(int i=2;i<=n;i++)//\u4e2d\u95f4\u7684\u70b9\u4e24\u4e24\u94fe\u63a5\uff0c\u4e0d\u591a\u505a\u89e3\u91ca\u4e86\n    {\n        for(int j=i-1;j<i;j++)//\u7edd\u5bf9\u4e0d\u80fd\u662f\u540c\u4e00\u5835\u5899\u4e0a\u7684\u70b9\u554a\uff0c\u8fd9\u5c31\u6ca1\u610f\u4e49\u4e86\n        {\n            if(i!=j)\n            {\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a1[i]-a1[j])/(x[i]-x[j]))*(x[i]-x[k])+a1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n1[i],n1[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-a1[j])*abs(a1[i]-a1[j])));\n                    add(n1[j],n1[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-a1[j])*abs(a1[i]-a1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a1[i]-a2[j])/(x[i]-x[j]))*(x[i]-x[k])+a2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n1[i],n2[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-a2[j])*abs(a1[i]-a2[j])));\n                    add(n2[j],n1[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-a2[j])*abs(a1[i]-a2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a1[i]-b1[j])/(x[i]-x[j]))*(x[i]-x[k])+b1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n1[i],n3[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-b1[j])*abs(a1[i]-b1[j])));\n                    add(n3[j],n1[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-b1[j])*abs(a1[i]-b1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a1[i]-b2[j])/(x[i]-x[j]))*(x[i]-x[k])+b2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n1[i],n4[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-b2[j])*abs(a1[i]-b2[j])));\n                    add(n4[j],n1[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a1[i]-b2[j])*abs(a1[i]-b2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a2[i]-a1[j])/(x[i]-x[j]))*(x[i]-x[k])+a1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n2[i],n1[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-a1[j])*abs(a2[i]-a1[j])));\n                    add(n1[j],n2[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-a1[j])*abs(a2[i]-a1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a2[i]-a2[j])/(x[i]-x[j]))*(x[i]-x[k])+a2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n2[i],n2[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-a2[j])*abs(a2[i]-a2[j])));\n                    add(n2[j],n2[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-a2[j])*abs(a2[i]-a2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a2[i]-b1[j])/(x[i]-x[j]))*(x[i]-x[k])+b1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n2[i],n3[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-b1[j])*abs(a2[i]-b1[j])));\n                    add(n3[j],n2[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-b1[j])*abs(a2[i]-b1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((a2[i]-b2[j])/(x[i]-x[j]))*(x[i]-x[k])+b2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n2[i],n4[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-b2[j])*abs(a2[i]-b2[j])));\n                    add(n4[j],n2[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(a2[i]-b2[j])*abs(a2[i]-b2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b1[i]-a1[j])/(x[i]-x[j]))*(x[i]-x[k])+a1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n3[i],n1[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-a1[j])*abs(b1[i]-a1[j])));\n                    add(n1[j],n3[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-a1[j])*abs(b1[i]-a1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b1[i]-a2[j])/(x[i]-x[j]))*(x[i]-x[k])+a2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n3[i],n2[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-a2[j])*abs(b1[i]-a2[j])));\n                    add(n2[j],n3[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-a2[j])*abs(b1[i]-a2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b1[i]-b1[j])/(x[i]-x[j]))*(x[i]-x[k])+b1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n3[i],n3[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-b1[j])*abs(b1[i]-b1[j])));\n                    add(n3[j],n3[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-b1[j])*abs(b1[i]-b1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b1[i]-b2[j])/(x[i]-x[j]))*(x[i]-x[k])+b2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n3[i],n4[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-b2[j])*abs(b1[i]-b2[j])));\n                    add(n4[j],n3[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b1[i]-b2[j])*abs(b1[i]-b2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b2[i]-a1[j])/(x[i]-x[j]))*(x[i]-x[k])+a1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n4[i],n1[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-a1[j])*abs(b2[i]-a1[j])));\n                    add(n1[j],n4[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-a1[j])*abs(b2[i]-a1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b2[i]-a2[j])/(x[i]-x[j]))*(x[i]-x[k])+a2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n4[i],n2[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-a2[j])*abs(b2[i]-a2[j])));\n                    add(n2[j],n4[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-a2[j])*abs(b2[i]-a2[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b2[i]-b1[j])/(x[i]-x[j]))*(x[i]-x[k])+b1[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n4[i],n3[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-b1[j])*abs(b2[i]-b1[j])));\n                    add(n3[j],n4[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-b1[j])*abs(b2[i]-b1[j])));\n                }\n                pd=0;\n                for(int k=j+1;k<i;k++)\n                {\n                    xx=x[k],yy=((b2[i]-b2[j])/(x[i]-x[j]))*(x[i]-x[k])+b2[j];\n                    if(!((yy>=a1[k]&&yy<=a2[k])||(yy>=b1[k]&&yy<=b2[k]))){pd++;break;}\n                }\n                if(!pd)\n                {\n                    add(n4[i],n4[j],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-b2[j])*abs(b2[i]-b2[j])));\n                    add(n4[j],n4[i],sqrt((x[i]-x[j])*(x[i]-x[j])+abs(b2[i]-b2[j])*abs(b2[i]-b2[j])));\n                }\n            }\n        }\n    }\n    Dijkstra(1);\n    printf(\"%.2f\\n\",dis[count]);\n    return 0;\n}\n```",
        "postTime": 1500191786,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1354 \u3010\u623f\u95f4\u6700\u77ed\u8def\u95ee\u9898\u3011"
    }
]