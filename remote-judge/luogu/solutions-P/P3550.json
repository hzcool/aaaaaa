[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3550)\n\n## \u9898\u76ee\u5206\u6790\n\n\u672c\u9898\u662f\u4e00\u9053\u6bd4\u8f83\u6709\u610f\u601d\u7684\u8d2a\u5fc3\u3002\n\n\u9996\u5148\u6211\u4eec\u4e00\u770b\u9898\u76ee\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u8fc7\u603b\u90e8\u4e4b\u524d\uff0c\u4f7f\u7528\u8ddd\u79bb\u8d8a\u5c0f\u7684\u8f66\u8d8a\u6d6a\u8d39\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8ddd\u79bb\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u4f7f\u7528\u8f66\u5373\u53ef\u3002\n\n\u4f46\u662f\u4ed4\u7ec6\u4e00\u60f3\uff0c\u5982\u679c\u6211\u4eec\u628a\u5927\u8f66\u90fd\u7528\u4e86\uff0c\u6700\u540e\u5269\u4e0b\u7684\u5c0f\u8f66\u662f\u6ca1\u6709\u529e\u6cd5\u5e26\u6211\u4eec\u56de\u5bb6\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5f97\u7559\u4e00\u8f86\u53ef\u4ee5\u4ece\u603b\u90e8\u76f4\u63a5\u56de\u5bb6\u7684\u8f66\uff0c\u7136\u540e\u4f7f\u7528\u521a\u521a\u7684\u8d2a\u5fc3\u7b56\u7565\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u8d34\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define pb push_back\n#define pf push_front\n#define ass assign\n#define fst first\n#define sec second\n#define lb lower_bound\n#define ub upper_bound\n#define zlt using\n#define AK namespace\n#define IOI std\nzlt AK IOI;\nconst int maxn=500010;\nlong long m,d,n,a[maxn];\nlong long tot1,tot2,ans=1;\nbool cmp(long long x,long long y){return x>y;}\nvoid init(){\n\tcin>>m>>d>>n;\n\tfor(register long long i=1;i<=n;++i) cin>>a[i];\n\tsort(a+1,a+n+1,cmp);\n}\nvoid duel(){\n\tfor(register long long i=n;i>=1;--i){\n\t\tif(a[i]>=m-d){\n\t\t\ttot1=i;break;\n\t\t}\n\t}\n\tif(tot1==0) cout<<\"0\",exit(0);\n\tfor(register long long i=1;i<=n;++i){\n\t\tif(tot1==i) continue;\n\t\tif(tot2>=d||m+d-2*tot2<=a[tot1]) break;\n\t\telse if(a[i]<=d-tot2) cout<<\"0\",exit(0);\n\t\tans++;\n\t\ttot2+=(a[i]-d+tot2);\n\t\tif(tot2>=m){\n\t\t\tans--;\n\t\t\tcout<<ans;\n\t\t\texit(0);\n\t\t}\n\t}\n}\nvoid print(){\n\tif(m+d-2*tot2>a[tot1]) cout<<\"0\";\n\telse cout<<ans;\n}\nint main(){\n\tinit();\n\tduel();\n\tprint();\n}\n```",
        "postTime": 1657587111,
        "uid": 590864,
        "name": "Yizhixiaoyun",
        "ccfLevel": 5,
        "title": "P3550 \u9898\u89e3"
    },
    {
        "content": "\u6536\u5230@\u8fdc\u822a\u4e4b\u66f2  \u601d\u8def\u7684\u542f\u53d1,\u987a\u4fbf\u5c06\u9898\u76ee\u8fdb\u884c\u4e86\u7ffb\u8bd1(\u7ffb\u8bd1\u7684\u4e0d\u597d\u4e0d\u8981\u6253\u6211).\n\n\u6b64\u9898\u8d2a\u5fc3\u5f88\u662f\u5de7\u5999,\u4ecb\u4e8e\u697c\u4e0b\u9898\u89e3\u4e2d\u6ce8\u91ca\u4e0d\u591a,\u6545\u8fdb\u884c\u8865\u5145.\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nlong long now,num,last,ans=1;\n//now\u4e3a\u73b0\u5728\u4eba\u7684\u4f4d\u7f6e ans=1\u521d\u59cb\u5316\u4e3a1\u8868\u793a\u6700\u7ec8\u8981\u7528\u4e00\u8f86\u8f66\u76f4\u63a5\u4ece\u603b\u90e8\u5230\u7ec8\u70b9 \nlong long N,M,a[500005];\n//\u6b64\u9898\u9700\u5f00long long \nbool cmp(long long a,long long b){return a>b;}\nint main(){\n    scanf(\"%lld %lld %lld\",&N,&M,&num);//\u8f93\u5165\u8def\u7a0b\u603b\u8ddd\u79bb,\u4ece\u8d77\u70b9\u5230\u603b\u90e8\u8ddd\u79bb,\u51fa\u79df\u8f66\u6570\u91cf \n    for(int i=1;i<=num;++i)scanf(\"%lld\",&a[i]);//\u8f93\u5165\u6bcf\u4e2a\u51fa\u79df\u8f66\u7684;\u8def\u7a0b\u9650\u5236 \n    sort(a+1,a+1+num,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n    for(int i=1;i<=num;++i)if(a[i]<N-M){last=i;break;}//\u627e\u5230\u7b2c\u4e00\u4e2a\u9650\u5236\u8ddd\u79bb\u5c0f\u4e8e\u4ece\u603b\u90e8\u5230\u7ec8\u70b9\u8ddd\u79bb\u7684\u8f66 \n    last--;//\u4e0a\u4e00\u4e2a\u8f66\u7684\u9650\u5236\u8ddd\u79bb\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u4ece\u603b\u90e8\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb \n    //\u8981\u5c06\u8fd9\u4e2a\u8f66\u7559\u4e0b\u6765(\u6700\u540e\u5230\u603b\u90e8\u65f6\u76f4\u63a5\u7528\u8fd9\u8f86\u8f66) \n    //\u8d2a\u5fc3:\u4e4b\u524d\u4ece\u8d77\u70b9\u5230\u603b\u90e8\u65f6\u4f1a\u6d6a\u8d39\u8f66\u7684\u6c7d\u6cb9,\u4e14\u4e0d\u80fd\u5c06\u6c7d\u6cb9\u591a\u7684\u5168\u90e8\u7528\u5c3d,\u5426\u5219\u867d\u7136\u7528\u7684\u8f66\u5c11,\u4f46\u662f\u6700\u540e\u5269\u4e0b\u7684\u8f66\n    //\u6c7d\u6cb9\u90fd\u5f88\u5c11,\u4ece\u603b\u90e8\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9 \n    if(!last){printf(\"0\");return 0;}//\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u8f66\u6ee1\u8db3\u6761\u4ef6,\u5219\u4e00\u5b9a\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9 \n    for(int i=1;i<=num;++i){//\u679a\u4e3e\u6bcf\u4e2a\u8f66 \n        if(i==last)continue;//\u5c06\u6b64\u8f66\u7559\u4e0b\u6765 \n        if(now>=M || N-now+M-now<=a[last]) break;//\u5230\u8fbe\u603b\u90e8\u6216\u6b64\u8ddd\u79bb\u5c0f\u4e8e\u7559\u4e0b\u7684\u8f66\u5c31\u8df3\u51fa\u5faa\u73af\n        //\u89e3\u91ca\u6b64\u8ddd\u79bb:\u56e0\u4e3a\u6b64\u65f6\u4eba\u5728\u603b\u90e8\u5de6\u4fa7,\u7559\u4e0b\u7684\u8f66\u5148\u8981\u884c\u9a76M-now\u5230\u8fbe\u4eba\u7684\u4f4d\u7f6e\n        //\u518d\u884c\u9a76N-now\u7684\u8ddd\u79bb\u5230\u8fbe\u7ec8\u70b9,\u5982\u679c\u7559\u4e0b\u7684\u8f66\u53ef\u4ee5\u505a\u5230\u8fd9\u70b9\u5c31\u8df3\u51fa\u5faa\u73af \n        else if(a[i]<=M-now){printf(\"0\");return 0;}//\u8fd9\u4e2a\u8f66\u4e0d\u80fd\u4f7f\u4eba\u5411\u524d\u79fb\u52a8(\u4eba\u5728\u603b\u90e8\u5de6\u8fb9\u65f6,\u8f66\u9700\u8981\u5148\u8fc7\u6765) \n        ans++;//\u4f7f\u7528\u8f66\u7684\u6570\u91cf\u52a0\u4e00 \n        now+=a[i]-(M-now);//\u4eba\u7684\u4f4d\u7f6e\u79fb\u52a8 \n        if(now>=N){printf(\"%lld\",ans-1);return 0;}//\u76f4\u63a5\u5230\u8fbe(\u6ca1\u6709\u7528\u7559\u7684\u8f66)\u6240\u4ee5ans-1 \n    }\n    if(N-now+M-now>a[last])printf(\"0\");//\u5269\u4e0b\u7684\u8f66\u4e5f\u5230\u4e0d\u4e86 \n    else printf(\"%lld\",ans);//\u53ef\u4ee5\u5230 \n    return 0;\n}\n```",
        "postTime": 1509063545,
        "uid": 36075,
        "name": "karma",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3550 \u3010[POI2013]TAK-Taxis\u3011"
    },
    {
        "content": "\u611f\u89c9\u662f\u4e00\u9053\u5f88\u4e0d\u9519\u7684\u8d2a\u5fc3\n\n\n\u7b2c\u4e00\u773c\u7684\u611f\u89c9\u80af\u5b9a\u662f\u8d2a\u5fc3\uff0c\u56e0\u4e3a\u4eba\u5728\u8fd8\u6ca1\u8fc7\u8f66\u7ad9\u7684\u65f6\u5019\u79bb\u8f66\u7ad9\u8d8a\u8fdc\u8d8a\u4e0d\u5212\u7b97\uff0c\u6d6a\u8d39\u7684\u8def\u7a0b\u4e5f\u5c31\u8d8a\u591a\uff0c\u6240\u4ee5\u8981\u5c3d\u91cf\u5148\u53eb\u884c\u9a76\u8def\u7a0b\u8fdc\u7684\u8f66\n\n\n\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u5f9750\u5206\u3002\n\n\n\u6bd4\u5982\u8bf4\u8fd9\u7ec4\u6570\u636e\uff1a\n\n\n12 4 5\n2 3 4 5 8\n\n\n\u5982\u679c\u8d2a\u5fc3\u7684\u8bdd\u663e\u7136\u662f\u56de\u4e0d\u53bb\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\n\u6211\u4eec\u89c2\u5bdf\uff0c\u5f53\u4eba\u8fc7\u4e86\u8f66\u7ad9\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u4e00\u8f86\u80fd\u4ece\u8f66\u7ad9\u5230\u5bb6\u7684\u8f66\u5c31\u591f\u4e86\uff0c\u4f60\u6709\u518d\u591a\u5176\u4ed6\u7684\u8f66\u8def\u7a0b\u77ed\u4e5f\u6ca1\u7528\n\n\n\u6240\u4ee5\u8d2a\u5fc3\u4e4b\u524d\u9700\u8981\u7ed9\u81ea\u5df1\u7559\u4e00\u4e2a\u8def\u7a0b\u6700\u5c0f\u7684\u80fd\u4ece\u8f66\u7ad9\u56de\u5bb6\u7684\u8f66\uff0c\u8fd9\u4e2a\u8f66\u4e4b\u524d\u4e0d\u80fd\u7528\n\n\n````cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nlong long inline read()\n{\n    long long x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nlong long m,d,n,a[500010];\nbool comp(long long a,long long b)\n{\n    return a>b;\n}\nvoid cut(){puts(\"0\");exit(0);}\nmain()\n{\n    m=read(),d=read(),n=read();\n    for (int i=1;i<=n;i++)\n        a[i]=read();\n    sort(a+1,a+1+n,comp);\n    long long res;\n    for (res=1;res<=n;res++)\n        if (a[res]<m-d)\n            break;\n    res--;if (!res) cut();\n    long long now=0,ans=1;\n    for (int i=1;i<=n;i++)\n    {\n        if(i==res) \n            continue;\n        if(now>=d || m-now+d-now<=a[res]) \n            break;\n        if(a[i]<=d-now) \n            cut();\n        ans++;\n        now+=a[i]-(d-now);\n        if(now>=m) \n        {\n            ans--;break;\n        }\n    }\n    if (m-now+d-now>a[res])\n        puts(\"0\");\n    else\n        printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1508203790,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3550 \u3010[POI2013]TAK-Taxis\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3550)\n\n\u9898\u76ee\u5927\u6982\u610f\u601d\u662f\uff1a\u4e00\u6761\u7ebf\u6bb5\u6709\u4e09\u4e2a\u70b9\uff0c$0$ \u4e3a\u8d77\u59cb\u4f4d\u7f6e\uff0c$d$ \u4e3a\u8f66\u7684\u603b\u90e8\uff0c$m$ \u4e3a\u5bb6\u3002\u6709 $n$ \u8f86\u8f66\uff0c\u6bcf\u8f86\u8f66\u6700\u591a\u884c\u9a76 $x_i$\uff0c\u90fd\u4ece $d$ \u51fa\u53d1\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u7ed3\u675f\uff0c\u95ee\u6700\u5c11\u51e0\u8f86\u8f66\u53ef\u4ee5\u5230\u5bb6\u3002\n\n\u9996\u5148\u8003\u8651\u8d2a\u5fc3\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4ece\u5927\u5230\u5c0f\u53eb\u8f66\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u800c\u4e14\u5982\u679c\u884c\u8d70\u7684\u8ddd\u79bb\u8d85\u8fc7 $d$ \u7684\u8bdd\u9700\u8981\u4e00\u8f86\u8f66\u5c31\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\u3002\n\n\u4f46\u662f\u4ece\u5927\u5230\u5c0f\u53eb\u8f66\u53ef\u80fd\u4f1a\u65e0\u89e3\uff0c\u6bd4\u5982\u628a $x_i \\geq m - d$ \u7684\u8f66\u5168\u90e8\u8017\u5728\u4e86 $\\leq d$ \u7684\u4f4d\u7f6e\uff0c\u5bfc\u81f4 $\\geq d$ \u7684\u4f4d\u7f6e\u8fc7\u4e0d\u53bb\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u9009\u51fa $x_i \\geq m - d$ \u7684\u6700\u5c0f\u8f66\u7559\u7ed9 $\\geq d$ \u7684\u4f4d\u7f6e\uff0c\u5269\u4e0b\u7684\u8fd8\u662f\u8d2a\u5fc3\u6c42\u89e3\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, res;\nlong long m, d, x;\nvector<long long> l;\n\nint main () {\n\tlong long a = 0, j;\n\t\n    scanf(\"%lld%lld%d\", &m, &d, &n);\n    \n\tfor (int i = 0; i < n; i++) {\n\t\tscanf(\"%lld\", &x);\n\t\tl.push_back(x);\n\t}\n\t\n\tsort(l.begin(), l.end());\n\t\n\tif (m - d != 0) {\n\t\tint p = lower_bound(l.begin(), l.end(), m - d) - l.begin();\n\t\tif (p >= n) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\ta = l[p];\n\t\tl.erase(l.begin() + p);\n\t}\n\t\n\treverse(l.begin(), l.end());\n\t\n\tlong long pos = 0, td = d - (a - m + d >> 1);\n\t\n\tfor (long long i = 0; i < l.size(); i++) {\n\t\tlong long t = l[i] - d + pos;\n\t\t\n\t\tif (t <= 0) {\n\t\t\tprintf(\"0\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tpos += t;\n\t\tres++;\n\t\t\n\t\tif (pos >= td) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprintf(\"%d\\n\", res + (pos < m));\n    \n\treturn 0;\n}\n```\n",
        "postTime": 1626943414,
        "uid": 299086,
        "name": "Mistybranch",
        "ccfLevel": 5,
        "title": "P3550 [POI2013]TAK-Taxis"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3550)\n\n\u8fd9\u9898\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\u601d\u8def\uff0c\u5f53\u53d1\u73b0\u4eba\u5728 $[0,d)$ \u65f6\uff0c\u8f66\u8d8a\u591a\u5c31\u8d8a\u6d6a\u8d39\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u7528\u8ddd\u79bb\u8fdc\u7684\u8f66\u3002\u4f46\u8fd9\u6837\u53ef\u80fd\u5bfc\u81f4\u6ca1\u6709\u8f66\u4ece $d$ \u53bb $m$\uff0c\u6240\u4ee5\u5728\u6700\u5f00\u59cb\u7559\u4e00\u8f86\u53ef\u4ee5\u7684\u8f66\u3002\n\n\u6ce8\u610f\u5224\u65ad\u53ea\u9700\u8981\u6700\u540e\u4e00\u8f86\u8f66\u53ef\u4ee5\u5e26\u5230 $m$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1000005;\nint n,ans,m,d,x,a;\nvector<int> s;\nsigned main(){\n    scanf(\"%lld%lld%lld\",&m,&d,&n);\n    for(int i=0;i<n;++i){\n    \tscanf(\"%lld\",&x);\n    \ts.push_back(x);\n\t}\n\tsort(s.begin(),s.end());\n    if(m-d){\n    \tint p=lower_bound(s.begin(),s.end(),m-d)-s.begin();\n    \tif(p>=n){\n    \t\tputs(\"0\");\n    \t\treturn 0;\n\t\t}\n\t\ta=s[p];\n\t\ts.erase(s.begin()+p);\n\t}\n    reverse(s.begin(),s.end());\n    int pos=0,td=d-(a-m+d>>1);\n    for(int i:s){\n    \tint t=i-d+pos;\n    \tif(t<=0){\n    \t\tputs(\"0\");\n    \t\treturn 0;\n\t\t}\n\t\tpos+=t;++ans;\n\t\tif(pos>=td)break;\n\t}\n    printf(\"%d\",ans+(pos<m));\n    return 0;\n}\n```\nBye\uff01",
        "postTime": 1685100270,
        "uid": 652444,
        "name": "IcyFoxer_XZY",
        "ccfLevel": 4,
        "title": "TAK-Taxis\u9898\u89e3"
    },
    {
        "content": "# [LG-P3550 [POI2013]TAK-Taxis](https://www.luogu.com.cn/problem/P3550) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=LG-P3550-Solution)\n\n## \u9898\u9762\n\n\u5b58\u5728\u4e00\u6761\u7ebf\u6bb5\uff0c\u6709\u4e09\u4e2a\u4f4d\u7f6e\uff0c$ 0 $\uff08\u5373\u539f\u70b9\uff09\u4e3a Byteasar \u521d\u59cb\u6240\u5728\u7684\u4f4d\u7f6e\uff0c$ d $ \u4e3a\u51fa\u79df\u8f66\u603b\u90e8\u4f4d\u7f6e\uff0c$ m $ \u4e3a\u76ee\u7684\u5730\u4f4d\u7f6e\uff0c\u6709 $ n $ \u8f86\u51fa\u79df\u8f66\uff0c\u6bcf\u8f86\u51fa\u79df\u8f66\u90fd\u6709\u4e00\u4e2a\u884c\u9a76\u8def\u7a0b\u4e0a\u9650 $ x_i $\uff0c\u6bcf\u8f86\u51fa\u79df\u8f66\u90fd\u4ece\u603b\u90e8\u51fa\u53d1\uff0c\u5e76\u4e14\u6700\u7ec8\u53ef\u4ee5\u4e0d\u56de\u5230\u603b\u90e8\u3002Byteasar \u80fd\u642d\u4e58\u51fa\u79df\u8f66\u884c\u52a8\uff0c\u4f46\u662f\u4ed6\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u4efb\u610f\u70b9\u6539\u53d8\u51fa\u79df\u8f66\u3002\n\n\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u8f86\u51fa\u79df\u8f66\u624d\u80fd\u4f7f Byteasar \u62b5\u8fbe\u76ee\u7684\u5730\uff0c\u65e0\u89e3\u8f93\u51fa $ 0 $\u3002\n\n$ 1 \\le d \\le m \\le 10^{18}, 1 \\le n \\le 5 \\times 10^5, 1 \\le x_i \\le 10^{18} $\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n> $ m $ $ d $ $ n $\n>\n> $ x_1, x_2, \\cdots, x_n $\n\n## Solution\n\n\uff08\u5efa\u8bae\u60a8\u4ece\u4e0a\u65b9\u94fe\u63a5\u8fdb\u5165\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u67e5\u770b\u6b64 Blog\uff0c\u5728 Luogu \u4e2d\u56fe\u7247\u4f1a\u88ab\u5899\u6389\uff0c\u90e8\u5206 Markdown \u4e5f\u4f1a\u5931\u6548\uff09\n\n\u5bf9\u4e8e\u672c\u9898\u7684\u601d\u8def\u548c\u4ee3\u7801\u5b9e\u73b0\u9898\u89e3\u533a\u7684\u5927\u4f6c\u4eec\u5df2\u7ecf\u8bf4\u7684\u5f88\u8be6\u7ec6\u4e86\uff0c\u8fd9\u91cc\u4e3b\u8981\u5bf9\u8be5\u9898\u8d2a\u5fc3\u7b56\u7565\u4e2d\u7684\u4e00\u4e9b\u7ec6\u8282\u8fdb\u884c\u8bba\u8ff0\u4e0e\u8bc1\u660e\u3002\n\n\u672c\u6765\u770b\u8fd9\u9898\u9762\u611f\u89c9\u5f88\u50cf\u4e00\u9053 DP\uff0c\u7136\u540e\u53e3\u7cca\u4e86\u534a\u5929\u4e5f\u6ca1\u60f3\u5230\u4ec0\u4e48\u4f18\u79c0\u7684\u72b6\u6001\u548c\u8f6c\u79fb\u3002\u3002\u3002\n\n~~\u6240\u4ee5\u8fd9\u9053\u9898\u662f\u4e2a\u8d2a\u5fc3~~\u3002\n\n\u5927\u6982\u5c31\u662f\u663e\u7136\u6bcf\u8f86\u8f66\u662f\u9700\u8981\u5148\u5148\u8d70\u5230\u4eba\u6240\u5728\u7684\u4f4d\u7f6e\u7136\u540e\u5411\u7740\u603b\u90e8\u8d70\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\u663e\u7136\u4f18\u5148\u9009\u8def\u7a0b\u4e0a\u9650\u66f4\u5927\u7684\u8f66\u662f\u66f4\u4f18\u7684\uff0c\u8fd9\u4e2a\u5f88\u663e\u7136\u5427\uff0c\u5982\u679c\u9009\u8def\u7a0b\u5c0f\u7684\u90a3\u4e48\u53bb\u6389\u524d\u5f80\u4eba\u6240\u5728\u4f4d\u7f6e\u7684\u8def\u7a0b\uff0c\u6700\u7ec8\u7684\u8d21\u732e\u5c31\u4f1a\u66f4\u5c0f\uff0c\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u8f66\u65e0\u7528\u7684\u8def\u7a0b\u66f4\u591a\uff0c\u8d21\u732e\u4e5f\u4f1a\u53d8\u5c0f\u3002\n\n\u4f46\u5982\u679c\u53ea\u8003\u8651\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u56e0\u4e3a\u524d\u9762\u4e3a\u4e86\u89e3\u66f4\u4f18\u800c\u8017\u8d39\u4e86\u8fc7\u591a\u7684\u5927\u8f66\u5bfc\u81f4\u6700\u7ec8\u53ea\u5269\u4e0b\u8def\u7a0b\u5c0f\u4e8e $ m - d $ \u7684\u5c0f\u8f66\uff0c\u4ece\u800c\u4f7f\u6709\u89e3\u53d8\u4e3a\u65e0\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u6700\u540e\u7684 $ m - d $ \u7684\u8def\u7a0b\u9884\u7559\u4e00\u4e2a\u8def\u7a0b\u6700\u77ed\u4f46 $ x_i \\ge m - d $ \u7684\u8f66\uff0c\u7136\u540e\u6309\u7167\u521a\u624d\u7684\u601d\u8def\u8d2a\u5fc3\u3002\n\n\u7136\u540e\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\uff0c\u4f46\u6211\u7684\u4e4b\u524d\u8bc1\u660e\u5047\u4e86\u3002\u3002\n\n**update**\uff1a\n\n\u8003\u8651\u5bf9\u4e8e\u6700\u540e\u4e00\u6bb5 $ m - d $ \u7684\u8def\u7a0b\u4e00\u5b9a\u662f\u9700\u8981\u901a\u8fc7\u4e00\u8f86\u81f3\u5c11\u4e3a $ m - d $ \u7684\u8f66\u6765\u9001\u8d70\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u9884\u7559\u4e0b\u8f66\u4e4b\u540e\uff0c\u8bbe\u9884\u7559\u7684\u8f66\u4e3a $ \\xi $\uff0c\u4e14 $ \\xi \\ge m - d $\uff0c\u5269\u4e0b\u7684\u8f66\u6211\u4eec\u6309\u7167\u4ece\u5927\u5230\u5c0f\u8d2a\u5fc3\u5730\u4f7f\u7528\uff0c\u90a3\u4e48\u5982\u679c\u6700\u540e\u4e00\u8f86\u8f66\u53ef\u4ee5\u5728\u5230\u8fbe $ d $ \u4ee5\u524d\u76f4\u63a5\u9001\u5230 $ m $\uff0c\u90a3\u4e48\u663e\u7136\u8bbe\u8fd9\u8f86\u8f66\u4e3a $ \\epsilon $\uff0c\u8bbe\u8f66 $ \\epsilon $ \u9700\u8981\u5411 $ 0 $ \u8d70\u7684\u8def\u7a0b\u4e3a $ \\alpha $\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3 $ \\epsilon \\ge \\alpha \\times 2 + m - d $ \u4e14 $ \\xi \\le \\epsilon $\uff0c\u8fd9\u6837\u663e\u7136\u6211\u4eec\u5b8c\u5168\u4e0d\u9700\u8981\u7528\u9884\u7559\u7684 $ \\xi $ \u8fd9\u8f86\u8f66\u3002\n\n\u5982\u679c\u6700\u540e\u4e00\u8f86\u8f66\u4e0d\u80fd\u9001\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b\u4e00\u5b9a\u81f3\u5c11\u90fd\u518d\u9700\u8981\u4e00\u8f86\u5927\u4e8e $ m - d $ \u7684\u8f66\uff0c\u90a3\u4e48\u6309\u7167\u6211\u4eec\u7684\u8d2a\u5fc3\u601d\u8def\u9009\u62e9\u6700\u5c0f\u7684\u5927\u4e8e $ m - d $ \u7684\u8f66\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u6216\u8005\u8bf4\u4e0d\u52a3\u7684\uff0c$ \\square $\u3002\n\n**\u4e0b\u9762\u7684\u5185\u5bb9\u5747\u4e3a\u4e4b\u524d\u5199\u7684\u5047\u7684\u8bc1\u660e\uff0c\u601d\u8def\u9519\u4e86\uff0c\u8fd9\u91cc\u7559\u4f5c\u7eaa\u5ff5\u3002**\n\n\u8fd9\u65f6\u5019\u4ed4\u7ec6\u60f3\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u5728\u5230\u8fbe\u603b\u90e8\u4e4b\u524d\u7684\uff0c\u4e58\u5750\u7684\u6700\u540e\u4e00\u8f86\u8f66\u7684\u884c\u9a76\u8ddd\u79bb\u8db3\u591f\u957f\uff0c\u53ef\u4ee5\u628a\u6211\u4eec\u9001\u5230\u8d85\u8fc7\u603b\u90e8 $ \\xi $ \u8ddd\u79bb\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ea\u9700\u8981 $ x_i \\ge m - d - \\xi $ \u7684\u8f66\u5c31\u53ef\u4ee5\u8fbe\u5230\u76ee\u6807\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u53ef\u80fd\u56e0\u4e3a\u6211\u4eec\u6700\u521d\u9884\u7559\u7684\u90a3\u8f86\u8f66\u8ddd\u79bb\u8fc7\u957f\u800c\u5bfc\u81f4\u7b54\u6848\u66f4\u52a3\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ee4\u6309\u7167\u8d2a\u5fc3\u7b56\u7565\u9884\u7559\u7684\u8f66\u8ddd\u79bb\u4e3a $ \\alpha $\uff0c\u4ee4\u5728\u5230\u8fbe\u603b\u90e8\u4e4b\u524d\u9009\u62e9\u7684\u6240\u6709\u8f66\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u4e3a $ \\beta $\uff0c\u4ee4\u8d70\u5230\u603b\u90e8\u524d\u5012\u6570\u7b2c\u4e8c\u8f86\u8f66\u5230\u8fbe\u7684\u4f4d\u7f6e\u8ddd\u79bb\u603b\u90e8\u7684\u4f4d\u7f6e\u4e3a $ \\epsilon $\u3002\n\n\u663e\u7136\u5982\u679c $ \\beta \\ge 2 \\times \\epsilon + (m - d) $\uff0c\u90a3\u4e48\u5230\u8fbe\u603b\u90e8\u524d\u7684\u6700\u540e\u4e00\u8f86\u8f66\u5c31\u5df2\u7ecf\u53ef\u4ee5\u5e26\u6211\u4eec\u8d70\u5230\u76ee\u7684\u5730\uff0c\u90a3\u4e48\u9884\u7559\u7684\u8f66\u4fbf\u53ef\u4ee5\u65e0\u9700\u4f7f\u7528\uff0c\u7b54\u6848\u51cf\u5c11 $ 1 $\u3002\n\n\u53cd\u4e4b\u5219\u4e3a\u4e00\u822c\u60c5\u51b5\uff1a\n\n\u82e5 $ \\beta \\ge \\alpha $\uff1a\u90a3\u4e48\u663e\u7136\u9700\u8981\u4f7f\u7528\u9884\u7559\u7684\u8f66\u3002\n\n\u82e5 $ \\beta \\lt \\alpha $\uff1a\u6b64\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u5c06 $ \\alpha, \\beta $ \u4e92\u6362\uff0c\u6216\u8005\u8bf4\u5c06 $ \\alpha $ \u53d8\u4e3a\u4e00\u4e2a\u66f4\u5c0f\u4e00\u70b9\u7684\u8f66\uff0c\u4f1a\u4ee4\u7ed3\u679c\u66f4\u4f18\uff0c\u4f46\u662f\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u5c31\u4f1a\u53d1\u73b0\uff0c\u56e0\u4e3a\u6b64\u65f6\u663e\u7136\u56e0\u4e3a $ \\beta \\lt 2 \\times \\epsilon + (m - d) $\uff0c\u6240\u4ee5\u5373\u4f7f\u6539\u53d8 $ \\alpha $\uff0c\u4e5f\u53ea\u80fd\u4f7f\u5230\u8fbe\u603b\u90e8\u524d\u7684\u6700\u540e\u4e00\u8f86\u8f66\u5230\u8fbe\u8d85\u8fc7\u603b\u90e8\u6bd4 $ \\xi $ \u66f4\u8fdc\u7684\u4f4d\u7f6e\uff0c\u4f9d\u7136\u4e0d\u80fd\u76f4\u63a5\u5230\u8fbe $ m $\uff0c\u6240\u4ee5\u6b64\u65f6\u662f\u6539\u53d8 $ \\alpha $\uff0c\u53ea\u4f1a\u4f7f\u65b9\u6848\u6539\u53d8\uff0c\u800c\u4e0d\u4f1a\u4f7f\u6700\u5c11\u4f7f\u7528\u7684\u8f66\u8f86\u6570\u6539\u53d8\uff0c\u6700\u7ec8\u4ecd\u7136\u9700\u8981\u989d\u5916\u7684\u4e00\u8f86\u8f66\u6765\u9001\u5230\u6700\u7ec8\u7684\u76ee\u7684\u5730\u3002\n\n\u540c\u65f6\u6ce8\u610f\uff0c\u4e0a\u8ff0\u6211\u4eec\u8bba\u8ff0\u7684\u5747\u4e3a\u5230\u8fbe\u603b\u90e8\u524d\u6700\u540e\u4e00\u8f86\u8f66\u80fd\u5c06\u6211\u4eec\u9001\u5230\u8d85\u8fc7\u603b\u90e8\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6700\u540e\u4e00\u8f86\u8f66\u65e0\u6cd5\u5c06\u6211\u4eec\u9001\u8fbe\u603b\u90e8\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5224\u5b9a\u4e3a\u65e0\u89e3\uff0c\u9700\u8981\u8003\u8651\u5230\u9884\u7559\u7684\u90a3\u8f86\u8f66\u4e5f\u53ef\u4ee5\u5148\u5411\u603b\u90e8\u5de6\u4fa7\u884c\u9a76\u4e00\u6bb5\u540e\u518d\u5411\u53f3\u884c\u9a76\u5230\u76ee\u7684\u5730\uff0c\u6240\u4ee5\u5728\u8df3\u51fa\u5faa\u73af\u4e4b\u540e\u8fd8\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u56e0\u6b64\u5728\u7a0b\u5e8f\u4e2d\u6211\u4eec\u9664\u4e86\u5224\u5b9a\u662f\u5426\u6ee1\u8db3\u5230\u8fbe $ m $ \u4e4b\u5916\uff0c\u4e5f\u9700\u8981\u5224\u65ad\u662f\u5426\u5230\u8fbe\u4e86\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u9884\u7559\u7684\u8f66\u8f86\u9001\u8fbe\u76ee\u7684\u5730\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u5230\u4e86\u5c31\u76f4\u63a5\u8f93\u51fa $ ans + 1 $ \u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\n/******************************\nabbr\n\n******************************/\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\n#define int ll\n\ntemplate<typename T = int>\ninline T read(void);\n\nint M, D, N;\nvector < int > dis;\n\nsigned main(){\n    // freopen(\"in.txt\", \"r\", stdin);\n    M = read(), D = read(), N = read();\n    for(int i = 1; i <= N; ++i)dis.push_back(read());\n    sort(dis.begin(), dis.end(), greater < int >());\n    auto ptr = lower_bound(dis.rbegin(), dis.rend(), M - D);\n    if(ptr == dis.rend()){printf(\"0\\n\"); return 0;}\n    int val = *ptr;\n    dis.erase((++ptr).base());\n    int cur(0), ans(0);\n    for(auto i : dis){\n        cur += i - (D - cur);\n        ++ans;\n        if(cur <= 0){--ans; break;}\n        if(cur >= M){printf(\"%lld\\n\", ans); return 0;}\n        if(cur >= D - (val - (M - D)) / 2){printf(\"%lld\\n\", ans + 1); return 0;}\n        // printf(\"cur:%d, ans:%d\\n\", cur, ans);\n    }\n    if((D - cur) * 2 + (M - D) <= val)printf(\"%lld\\n\", ans + 1);\n    else printf(\"0\\n\");\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate<typename T>\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_09_XX \u521d\u7a3f\n\nupdate-2022_10_08 \u4fee\u6539\u4e86\u9519\u8bef\u7684\u8d2a\u5fc3\u8bc1\u660e\n\n",
        "postTime": 1664163867,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "LG-P3550 [POI2013]TAK-Taxis \u9898\u89e3"
    }
]