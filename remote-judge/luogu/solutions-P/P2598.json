[
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u6839\u672c\u6ca1\u6709\u5176\u5b83\u9898\u89e3\u8bf4\u7684\u90a3\u4e48\u590d\u6742\u3002\n\n\u5efa\u56fe\u65b9\u5f0f\uff1a\n\n1\u3001\u539f\u70b9\u5411\u6240\u6709\u72fc\u8fde\u6d41\u91cf $inf$ \u7684\u8fb9\n\n2\u3001\u6240\u6709\u7f8a\u5411\u6c47\u70b9\u8fde\u6d41\u91cf $inf$ \u7684\u8fb9\n\n3\u3001\u6240\u6709\u70b9\u5411\u56db\u5468\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u4e0b\u9762\u5c31\u6ca1\u4e86\u3002\n\n\u6c42\u51fa\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\uff0c\u4e0d\u7528\u8003\u8651\u9898\u89e3\u8bf4\u7684\u4ec0\u4e48 $0$ \u7684\u5f52\u5c5e\u95ee\u9898\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\n\n\u6240\u6709\u72fc\u548c\u7f8a\u4e4b\u95f4\u7684\u8fb9\u90fd\u88ab\u5272\u6389\u4e86\uff0c\u76f8\u5f53\u4e8e\u4fee\u4e86\u6805\u680f\uff0c\u6240\u4ee5\u662f\u5bf9\u7684\u3002\n\n\n~~\u6b7b\u56e0\uff1an,m\u5199\u53cd\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6~~\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define INF 1<<29\n#define num(i,j) ((i-1)*m+j)\nusing namespace std;\n\ninline void rd(int &X){\n    X=0;int w=0;char ch=0;\n    while(!isdigit(ch))w|=ch=='-',ch=getchar();\n    while(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    X=w?-X:X;\n}\n\nint n,m,s,t,ans,f,k;\nint head[N],cnt=1,d[N];\nstruct nd{int nxt,to,v;}e[N<<1];\n#define For(x) for(int y,i=head[x];(y=e[i].to);i=e[i].nxt)\n\nvoid add(int x,int y,int w){\n    e[++cnt]=(nd){head[x],y,w};head[x]=cnt;\n    e[++cnt]=(nd){head[y],x,0};head[y]=cnt;\n}\nbool bfs()\n{\n    queue<int> q; q.push(s);\n    memset(d,0,sizeof d); d[s]=1;\n    while(!q.empty()){\n        int x=q.front();q.pop();\n        For(x) if(e[i].v&&!d[y]){\n            q.push(y); d[y]=d[x]+1;\n            if(y==t) return 1;\n        }\n    } return 0;\n}\n\nint dinic(int x,int flow)\n{\n    if(x==t) return flow; int re=flow;\n\n    for(int y,i=head[x];(y=e[i].to)&&re;i=e[i].nxt)\n        if(e[i].v&&d[y]==d[x]+1)\n        {\n            k=dinic(y,min(re,e[i].v));\n            if(!k) d[y]=0;\n            e[i].v-=k;e[i^1].v+=k;re-=k; \n        }\n    return flow-re;\n}\nint a[105][105];\nint mx[]={1,-1,0,0};\nint my[]={0,0,1,-1};\nvoid build()\n{\n    rd(n);rd(m);s=n*m+1;t=n*m+2;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            rd(a[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(a[i][j]==1)\n                add(s,num(i,j),INF);\n            else if(a[i][j]==2)\n                add(num(i,j),t,INF);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            for(int k=0;k<4;k++)\t\n            {\n                int tx=i+mx[k];\n                int ty=j+my[k];\n                if(tx<=n and ty<=m and tx>=1 and ty>=1)\n                    add(num(i,j),num(tx,ty),1);\n            }\n}\nint main()\n{\n    build();\n    while(bfs())\n        while(f=dinic(s,INF))\n            ans+=f;\n    cout<<ans;\n}\n```",
        "postTime": 1543308888,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u2014\u2014\u6700\u5927\u6d41"
    },
    {
        "content": "# \u524d\u8a00\n\n\u8fd9\u662f\u4e2a\u4eba\u5728**\u7f51\u7edc\u6d41-\u6700\u5927\u6d41(\u6700\u5c0f\u5272)** \u5f53\u4e2d\u8ba4\u4e3a\u6700\u6709\u610f\u601d\u7684\u9898\n\n\u672c\u9898\u89e3\u4f7f\u7528$ISAP$\n\n# \u9898\u76ee\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/P2598)\n\n# \u6b63\u9898\n\n\u5982\u679c\u4f60\u5b66\u8fc7\u7f51\u7edc\u6d41\uff0c\u90a3\u4e48\u4f60\u4e00\u5b9a\u80fd\u505a\u51fa\u8fd9\u9053\u9898\uff0c\u8ddf\u7740\u6211\u4e00\u8d77\u6765\u770b\u770b\u5427\n\n\u8fd9\u9053\u9898\u6700\u91cd\u8981\u662f **\u5982\u4f55\u770b\u51fa\u662f\u6700\u5c0f\u5272** \u548c **\u600e\u4e48\u5efa\u56fe** \uff0c\u81f3\u4e8e\u6700\u5c0f\u5272\u7684\u4e8b\uff0c\u8ba9\u677f\u5b50\u53bb\u8dd1\u5c31\u597d\u4e86\n\n## 1.\u5982\u4f55\u770b\u51fa\u662f\u6700\u5c0f\u5272\n\n~~\u770b\u9898\u89e3~~\n\n\u8fd9\u91cc\u6709\u51e0\u4e2a\u4e0d\u7b97\u63d0\u793a\u7684\u63d0\u793a\uff1a\n\n### (1)\u6570\u636e\u8303\u56f4\u8f83\u5c0f\n\n$100\\%$\u7684\u6570\u636e$ n,m\\le100$\n\n### (2)\u4e24\u4e2a\u52bf\u529b(\u5c3d\u7ba1\u6709\u4e2d\u7acb)\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u56fe->\u7f51\u7edc\u6d41\n\n\u4f46\u8fd9\u4e0d\u662f\u4e8c\u5206\u56fe\n\n### \u203b(3)\u8349\u7a3f\u7eb8\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u72fc\u548c\u7f8a\u7684\u672c\u8d28\u662f\u76f8\u540c\u7684\n\n\u5373\u4e0d\u7ba1\u8ba9$1$\u4e3a\u7f8a\u6216$2$\u4e3a\u7f8a\uff0c\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\n\n\u6211\u4eec\u5148\u968f\u624b\u753b\u4e00\u4e2a\u56fe(\u7ea2\u8272\u4e3a\u7f8a\uff0c\u7eff\u8272\u4e3a\u72fc(\u867d\u7136\u53cd\u8fc7\u6765\u4e5f\u884c))\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/02n1ufzl.png)\n\n\u5176\u4e2d\u8981\u4fee\u5efa\u680f\u6746\u7684\u4f4d\u7f6e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pwrvivio.png)\n\n\u628a\u7f8a\u548c\u72fc\u770b\u6210\u70b9\uff0c\u680f\u6746\u770b\u6210\u8fb9\n\n\u73b0\u5728\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4muvxfi5.png)\n\n\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4ece\u4efb\u4f55\u4e00\u53ea\u7f8a\u51fa\u53d1\uff0c\u4e0d\u80fd\u8d70\u5230\u4efb\u4f55\u4e00\u53ea\u72fc\n\n\u4f46\u8fd9\u592a\u51cc\u4e71\u4e86\n\n\u6211\u4eec\u6839\u636e\u7ecf\u9a8c\uff0c\u5efa\u4e24\u4e2a\u8d85\u7ea7\u70b9\uff0c\u5206\u522b\u4e0e\u7f8a\u548c\u72fc\u8fde\u8fb9\n\n\u53ea\u9700\u5728\u780d\u53bb\u4e00\u4e9b\u8fb9\u4e4b\u540e\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u8d85\u7ea7\u70b9\u65e0\u6cd5\u8d70\u5230\u53e6\u4e00\u4e2a\u8d85\u7ea7\u70b9\u5c31\u597d\u4e86\n\n\u6240\u4ee5\u73b0\u5728\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nhzbbvm6.png)\n\n\u6709\u6ca1\u6709\u5f88\u719f\u6089\u4e86\n\n\u4e24\u4e2a\u8d85\u7ea7\u70b9\u5206\u522b\u4e3a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u72fc\u548c\u7f8a\u4e3a\u70b9\uff0c\u680f\u6746\u4e3a\u8fb9\n\n**\u6700\u5c0f\u5272\uff01**\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u4e86\n\n## 2.\u5982\u4f55\u5efa\u56fe\n\n\u6839\u636e\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u5148\u5c06\u72fc\u548c\u7f8a\u8fde\u8fb9\n\n\u81f3\u4e8e\u5bb9\u91cf\uff0c\u5f53\u7136\u662f$1$\uff0c\u56e0\u4e3a\u4e00\u4e2a\u680f\u6746\u5bf9\u5e94\u7684\u5c31\u662f\u4e00\u4e2a\u5355\u4f4d\u82b1\u8d39\n\n\u800c\u6e90\u70b9\u548c\u6c47\u70b9\u5411\u72fc\u548c\u7f8a\u8fde\u8fb9\u7684\u5bb9\u91cf\u81ea\u7136\u5c31\u662f$INF$\uff0c\u4e00\u4e2a\u6781\u5927\u503c\n\n\u4f46\u662f\u4e2d\u7acb\u7684\u5730\u65b9\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u5982\u679c\u4e0d\u7ba1\u4e2d\u7acb\u5730\u533a(\u9ed1\u8272)\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/620t4n5u.png)\n\n\u6b7b\u5f97\u60e8(\u6307\u4f60\u7684\u7a0b\u5e8f\u548c\u7f8a)\n\n\u7f8a\u73b0\u5728\u53ef\u4ee5\u6839\u636e\u8def\u7ebf \u7f8a->\u4e2d\u7acb\u5730\u533a->\u72fc \u51c6\u786e\u7684\u9001\u5230\u72fc\u7684\u5634\u91cc\n\n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4fdd\u8bc1\u65e0\u6cd5\u4ece **\u7f8a->\u4e2d\u7acb\u5730\u533a->\u72fc**\n\n\u5373 **\u6e90\u70b9->\u7f8a->\u4e2d\u7acb\u5730\u533a->\u72fc->\u6c47\u70b9**\n\n\u6240\u4ee5 \u7f8a\u4e0e\u4e2d\u7acb\u5730\u533a\uff0c\u4e2d\u7acb\u5730\u533a\u4e0e\u72fc(\u6ce8\u610f\u987a\u5e8f) \u4e5f\u8981\u8fde\u8fb9\n\n\u90a3\u4e48\u4e2d\u7acb\u5730\u533a\u81ea\u5df1\u8981\u4e0d\u8981\u8fde\u8fb9\u5462\uff1f\n\n\u7b54\u6848\u662f\u8981\n\n\u5982\u679c\u4e0d\u8fde\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230$10pts$\u7684\u9ad8\u5206\n\n\u5982\u679c\u8fde\u4e0a\uff0c\u606d\u559c\u4f60$AC$\u6b64\u9898\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f \u56e0\u4e3a\u6211\u4eec\u5982\u679c\u628a \u4e2d\u7acb\u5730\u533a->\u53e6\u4e00\u4e2a\u4e2d\u7acb\u5730\u533a \u7684\u8fb9\u780d\u6389\uff0c\u90a3\u4e48\u7f8a\u4f9d\u7136\u4e0d\u80fd\u6839\u636e\u8def\u5f84 \u7f8a->\u4e2d\u7acb\u5730\u533a->\u72fc \u9001\u5230\u72fc\u5634\u91cc\n\n\u81f3\u4e8e\u662f\u780d\u8fd9\u4e2a\u8def\u5f84\u4f18\u8fd8\u662f\u780d\u5176\u4ed6\u7684\u8def\u5f84\u4f18\uff0c\u90a3\u5c31\u4e0d\u662f\u6211\u4eec\u8003\u8651\u7684\u95ee\u9898\u4e86\uff0c\u90a3\u5c31\u662f\u6700\u5c0f\u5272\u4e86\n\n## 3.\u5c0f\u603b\u7ed3\n\n\u5176\u5b9e\u6574\u6761\u8def\u5f84\u662f\u8fd9\u6837\u7684\uff1a\n\n**\u6e90\u70b9->\u7f8a->\u4e2d\u7acb\u5730\u533a->\u4e2d\u7acb\u5730\u533a->\u72fc->\u6c47\u70b9**\n\n\u6211\u4eec\u4e0d\u80fd\u628a\u6e90\u70b9\u548c\u7f8a\u7684\u8fb9\u780d\u6389\uff0c\u4e5f\u4e0d\u80fd\u628a\u72fc\u548c\u6c47\u70b9\u7684\u8fb9\u780d\u6389\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u4e3a\u6781\u5927\u503c\n\n\u6211\u4eec\u53ea\u80fd\u4efb\u610f\u780d\u6389\u5176\u5b83\u7684\u8fb9\uff0c\u4f7f\u5f97\u8fd9\u6761\u8def\u5f84\u4e0d\u901a\uff0c\u800c\u780d\u6389\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7\u4e3a$1$\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u4e3a$1$\n\n\u6240\u4ee5\u6574\u4e2a\u8fc7\u7a0b\u5c31\u662f\u6c42\u6700\u5c0f\u5272\n\n\u6211\u4eec\u8981\u8fde\u7684\u8fb9\u6709\uff1a\n\n(1)\u6e90\u70b9 $-INF->$ \u7f8a\n\n(2)\u7f8a $-1->$ \u72fc\n\n(3)\u72fc $-INF->$ \u6c47\u70b9\n\n(4)\u7f8a $-1->$ \u4e2d\u7acb\u5730\u533a\n\n(5)\u4e2d\u7acb\u5730\u533a $-1->$ \u4e2d\u7acb\u5730\u533a\n\n(6)\u4e2d\u7acb\u5730\u533a $-1->$ \u72fc\n\n# \u4ee3\u7801\n\n\u4ee3\u7801\u4e2d$ID(n+1,1)$\u4ee3\u8868\u6e90\u70b9\uff0c$ID(n+1,2)$\u4ee3\u8868\u6c47\u70b9\n\n```cpp\n//12252024832524\n#include <cstdio>\n#include <algorithm>\nusing namespace std; \n\ntypedef long long LL;\nconst int MAXN = 100*100+5;\nconst int MAXM = 100*100*4+5;\nconst int INF = 0x3f3f3f3f;\nint n,m,p,tot = 1,s,t;\nint head[MAXN];\nint d[MAXN];//\u8ddd\u79bb\u6807\u53f7\nint vd[MAXN];//\u6807\u53f7\u4e3ai\u7684\u8282\u70b9\u4e2a\u6570\nint a[105][105];\nint dx[4] = {1,-1},dy[4] = {0,0,1,-1};\nstruct edge\n{\n\tint v,w,nxt;\n}e[MAXM << 2];\n\nint Read()\n{\n\tint x = 0,f = 1;char c = getchar();\n\twhile(c > '9' || c < '0'){if(c == '-')f = -1;c = getchar();}\n\twhile(c >= '0' && c <= '9'){x = (x*10) + (c^48);c = getchar();}\n\treturn x * f;\n}\nvoid Put1(int x)\n{\n\tif(x > 9) Put1(x/10);\n\tputchar(x%10^48);\n}\nvoid Put(int x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tPut1(x);\n}\ntemplate <typename T>T Max(T x,T y){return x > y ? x : y;}\ntemplate <typename T>T Min(T x,T y){return x < y ? x : y;}\ntemplate <typename T>T Abs(T x){return x < 0 ? -x : x;}\n\nvoid Add_Edge(int x,int y,int z)\n{\n\te[++tot].v = y;\n\te[tot].w = z;\n\te[tot].nxt = head[x];\n\thead[x] = tot;\n}\nint ID(int x,int y)\n{\n\treturn (x-1) * m + y;\n}\nint aug(int x,int ap)//ap = Augmented path\u589e\u5e7f\u8def\u7ecf\n{\n    if(x == t) return ap;\n    int sum = 0,mind = n*m+1,t;\n    for(int i = head[x]; i ;i = e[i].nxt)\n    {\n        if(e[i].w > 0)\n        {\n            if(d[x] == d[e[i].v]+1)\n            {\n                t = Min(ap - sum,e[i].w);\n                t = aug(e[i].v,t);\n                e[i].w -= t;\n                e[i^1].w += t;\n                sum += t;\n                if(d[s] >= n*m+2) return sum;\n                if(sum == ap) break;\n            }\n            if(d[e[i].v] < mind) mind = d[e[i].v];\n        }\n    }\n    if(!sum)\n    {\n        vd[d[x]]--;\n        if(!vd[d[x]]) d[s] = n*m+2;\n        d[x] = mind + 1;\n        vd[d[x]]++;\n    }\n    return sum;\n} \nint ISAP(int S,int T)\n{\n    int ret = 0;\n    s = S;t = T;\n    vd[0] = n*m+2;\n    while(d[s] < n*m+2) ret += aug(s,INF);\n    return ret;\n}\nvoid cls()\n{\n\tfor(int i = n*m+2;i >= 0;-- i)\n\t\tvd[i] = d[i] = head[i] = 0;\n\ttot = 1;\n}\n\nsigned main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\twhile(~scanf(\"%d\",&n))\n\t{\n\t\tm = Read();\n\t\tfor(int i = 1;i <= n;++ i)\n\t\t\tfor(int j = 1;j <= m;++ j)\n\t\t\t{\n\t\t\t\ta[i][j] = Read();\n\t\t\t\tif(a[i][j] == 1)\n\t\t\t\t{\n\t\t\t\t\tAdd_Edge(ID(n+1,1),ID(i,j),INF);\n\t\t\t\t\tAdd_Edge(ID(i,j),ID(n+1,1),0);\n\t\t\t\t}\n\t\t\t\telse if(a[i][j] == 2)\n\t\t\t\t{\n\t\t\t\t\tAdd_Edge(ID(i,j),ID(n+1,2),INF);\n\t\t\t\t\tAdd_Edge(ID(n+1,2),ID(i,j),0);\n\t\t\t\t}\n\t\t\t}\n\t\tfor(int i = 1;i <= n;++ i)\n\t\t\tfor(int j = 1;j <= m;++ j)\n\t\t\t\tfor(int k = 0;k < 4;++ k)\n\t\t\t\t{\n\t\t\t\t\tif(a[i][j] == 1 || !a[i][j])\n\t\t\t\t\t{\n\t\t\t\t\t\tint tox = i + dx[k],toy = j + dy[k];\n\t\t\t\t\t\tif(tox >= 1 && tox <= n && toy >= 1 && toy <= m)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(a[tox][toy] == 1) continue;\n\t\t\t\t\t\t\tAdd_Edge(ID(i,j),ID(tox,toy),1);\n\t\t\t\t\t\t\tAdd_Edge(ID(tox,toy),ID(i,j),0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\tPut(ISAP(ID(n+1,1),ID(n+1,2)));\n\t\tputchar('\\n');\n\t\tcls();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1576049214,
        "uid": 137437,
        "name": "PPL_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "## P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\n\n\u9898\u76ee\u63cf\u8ff0\n\u201c\u72fc\u7231\u4e0a\u7f8a\u554a\u7231\u7684\u75af\u72c2\uff0c\u8c01\u8ba9\u4ed6\u4eec\u771f\u7231\u4e86\u4e00\u573a\uff1b\u72fc\u7231\u4e0a\u7f8a\u554a\u5e76\u4e0d\u8352\u5510\uff0c\u4ed6\u4eec\u8bf4\u6709\u7231\u5c31\u6709\u65b9\u5411\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\u201d Orez\u542c\u5230\u8fd9\u9996\u6b4c\uff0c\u5fc3\u60f3\uff1a\u72fc\u548c\u7f8a\u5982\u6b64\u548c\u8c10\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u7f8a\u72fc\u5408\u517b\u5462\uff1f\u8bf4\u5e72\u5c31\u5e72\uff01 Orez\u7684\u7f8a\u72fc\u5708\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2an*m\u4e2a\u77e9\u9635\u683c\u5b50\uff0c\u8fd9\u4e2a\u77e9\u9635\u7684\u8fb9\u7f18\u5df2\u7ecf\u88c5\u4e0a\u4e86\u7bf1\u7b06\u3002\u53ef\u662fDrake\u5f88\u5feb\u53d1\u73b0\u72fc\u518d\u600e\u4e48\u4e5f\u662f\u72fc\uff0c\u5b83\u4eec\u603b\u662f\u5bf9\u7f8a\u5782\u6d8e\u4e09\u5c3a\uff0c\u90a3\u9996\u6b4c\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u52a8\u4eba\u7684\u4f20\u8bf4\u800c\u5df2\u3002\u6240\u4ee5Orez\u51b3\u5b9a\u5728\u7f8a\u72fc\u5708\u4e2d\u518d\u52a0\u5165\u4e00\u4e9b\u7bf1\u7b06\uff0c\u8fd8\u662f\u8981\u5c06\u7f8a\u72fc\u5206\u5f00\u6765\u517b\u3002 \u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\uff0cOrez\u53d1\u73b0\u72fc\u548c\u7f8a\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u9886\u5730\uff0c\u82e5\u72fc\u548c\u7f8a\u4eec\u4e0d\u80fd\u5446\u5728\u81ea\u5df1\u7684\u9886\u5730\uff0c\u90a3\u5b83\u4eec\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u66b4\u8e81\uff0c\u4e0d\u5229\u4e8e\u4ed6\u4eec\u7684\u6210\u957f\u3002 Orez\u60f3\u8981\u6dfb\u52a0\u7bf1\u7b06\u7684\u5c3d\u53ef\u80fd\u7684\u77ed\u3002\u5f53\u7136\u8fd9\u4e2a\u7bf1\u7b06\u9996\u5148\u5f97\u4fdd\u8bc1\u4e0d\u80fd\u6539\u53d8\u72fc\u7f8a\u7684\u6240\u5c5e\u9886\u5730\uff0c\u518d\u5c31\u662f\u7bf1\u7b06\u5fc5\u987b\u4fee\u7b51\u5b8c\u6574\uff0c\u4e5f\u5c31\u662f\u8bf4\u5fc5\u987b\u4fee\u5efa\u5728\u5355\u4f4d\u683c\u5b50\u7684\u8fb9\u754c\u4e0a\u5e76\u4e14\u4e0d\u80fd\u53ea\u4fee\u5efa\u4e00\u90e8\u5206\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570n\u548cm\u3002\u63a5\u4e0b\u6765n\u884c\u6bcf\u884cm\u4e2a\u6574\u6570\uff0c1\u8868\u793a\u8be5\u683c\u5b50\u5c5e\u4e8e\u72fc\u7684\u9886\u5730\uff0c2\u8868\u793a\u5c5e\u4e8e\u7f8a\u7684\u9886\u5730\uff0c0\u8868\u793a\u8be5\u683c\u5b50\u4e0d\u662f\u4efb\u4f55\u4e00\u53ea\u52a8\u7269\u7684\u9886\u5730\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u6587\u4ef6\u4e2d\u4ec5\u5305\u542b\u4e00\u4e2a\u6574\u6570ans\uff0c\u4ee3\u8868\u7bf1\u7b06\u7684\u6700\u77ed\u957f\u5ea6\u3002\n\n---\n\n# \u5206\u6790\n\n\u8981\u4fdd\u8bc1\u7bf1\u7b06\u957f\u6700\u5c0f\u800c\u628a\u72fc\u548c\u7f8a\u5206\u5f00\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230**\u6700\u5c0f\u5272**\u6a21\u578b\u3002\u4e00\u4e2a\u56fe\u7684\u6700\u5c0f\u5272\u5c31\u662f\u628a\u56fe\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff08\u6e90\u70b9\u53ca\u6c47\u70b9\u4e0d\u5728\u540c\u4e00\u90e8\uff09\u7684\u8fb9\u6743\u548c\u3002\u6700\u5c0f\u5272\u53ef\u4ee5\u7528**\u6700\u5927\u6d41**\u7b97\u6cd5\u6c42\u5f97\u3002\n\n# \u5efa\u6a21\n\n\u8981\u8bf4\u5230\u7f51\u7edc\u6d41\uff0c\u91cd\u70b9\u5c31\u5728\u4e8e\u5efa\u6a21\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u628a\u6b64\u7f51\u683c\u56fe\u8f6c\u6362\u4e3a\u6700\u5927\u6d41\u7f51\u7edc\u6d41\u5462\uff1f\u5176\u5b9e\u5bf9\u4e8e\u4e00\u4e2a\u683c\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u4e0e\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u90fd\u6709\u4e00\u6761\u8fde\u8fb9\uff0c\u800c\u628a\u8fd9\u4e2a\u683c\u5b50\u62bd\u8c61\u6210\u4e00\u4e2a\u70b9\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18005.png)\n\n\u4f9d\u636e\u9898\u610f\u548c\u6700\u5927\u6d41\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u53ef\u4ee5\u8fde\u8fb9\u4e86\uff1a\uff08\u6211\u4ee5\u7f8a\u7684\u4e00\u90e8\u4f5c\u4e3a\u6e90\u70b9\uff0c\u6240\u4ee5\uff09\u6e90\u70b9\u8fde\u7f8a\uff0c\u72fc\u8fde\u6c47\u70b9\uff0c\u82e5\u76f8\u90bb\u7684\u70b9\u4e8b\u72fc\uff0c\u5219\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff08\u4ed6\u7684\u6a21\u578b\u610f\u4e49\u662f\uff1a\u628a\u7f8a\u548c\u72fc\u5206\u5f00\u3010\u5272\u3011\u9700\u8981\u6d88\u8017\u201c1\u201d\uff09\n\n\u4f46\u662f\u5bf9\u4e8e0\u600e\u4e48\u529e\u5462\uff1f**\u8fd9\u662f\u672c\u9898\u7684\u96be\u70b9**\n\n\u53ef\u4ee5\u601d\u7d22\u4e00\u4e0b\uff0c\u82e5\u662f\u628a0\u5168\u90e8\u5f52\u4e3a\u72fc\u6216\u8005\u7f8a\u5427\uff0c\u611f\u89c9\u53c8\u4f1a\u6709\u66f4\u4f18\u89e3\uff08\u4e8b\u5b9e\u4e5f\u662f\u8fd9\u6837\uff0c\u56e0\u4e3a\u72fc\u548c\u7f8a\u662f\u7b49\u4ef7\u7684\u3010\u628a\u72fc\u4ece\u7f8a\u4e2d\u9694\u79bb\u5f00\u6765\u7b49\u4ef7\u4e8e\u628a\u7f8a\u4ece\u72fc\u4e2d\u9694\u79bb\u5f00\u6765\u3011\uff0c\u6240\u4ee5\u8fd9\u6837\u5355\u65b9\u9762\u5212\u5206\u662f\u80af\u5b9a\u4e0d\u6b63\u786e\u7684\uff09\uff0c\u90a3\u4e48\u600e\u4e48\u529e\u5462\n\n**\u4f60\u53ef\u80fd\u4e0d\u4f1a\uff0c\u4f46\u4f60\u7684\u6700\u5927\u6d41\u7b97\u6cd5\u4e00\u5b9a\u77e5\u9053\u600e\u4e48\u505a**\n\n**\u6211\u4eec\u8fd9\u6837\u8fde\uff1a\u6e90\u70b9---\u7f8a--\uff08\u8fb9A\uff0cc=1\uff09--0--\uff08\u8fb9B, c=1\uff09--\u72fc---\u6c47\u70b9**\n\n\u8bd5\u60f3\u4e00\u4e0b\uff0c\u4f60\u7684\u7bf1\u7b06\u7684\u4f5c\u7528\u662f\u5206\u5272\u72fc\u548c\u7f8a\uff0c0\u8fd9\u4e9b\u683c\u5b50\u8981\u4e48\u88ab\u5212\u5206\u5230\u72fc\u7684\u9886\u5730\uff0c\u8981\u4e48\u88ab\u5212\u5206\u5230\u7f8a\u7684\u9886\u5730\uff0c\u82e5\u662f\u5212\u5206\u5230\u72fc\u90a3\u8fb9\uff0c\u4f60\u7684\u7b97\u6cd5\u4f1a\u5272\u5f00\u9760\u8fd1\u7f8a\u7684\u90a3\u6761\u8fb9 A \uff0c\u8981\u662f\u5212\u5206\u5230\u7f8a\u8fd9\u8fb9\uff0c\u4ed6\u4f1a\u81ea\u52a8\u5272\u5f00\u9760\u8fd1\u72fc\u7684\u8fb9 B \u3002\u4e00\u5b9a\u4e0d\u5b58\u5728\u4e00\u79cd\u5272\u7684\u65b9\u5f0f\uff0c\u4f7f A \u548c B \u540c\u65f6\u88ab\u5272\u5f00\uff0c**\u56e0\u4e3a\u4f60\u7684\u7b97\u6cd5\u77e5\u9053\uff0c\u5272\u4e00\u6761\u5c31\u8db3\u4ee5\u5206\u5f00\u4e24\u70b9\uff0c\u4e0d\u9700\u8981\u5272\u7b2c\u4e8c\u6761**\u3002\n\n _\u6240\u4ee5\uff0c\u653e\u624b\u7ed9\u7a0b\u5e8f\u53bb\u8dd1\u5427_ \n \n # Code\n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nint RD(){\n    int out = 0,flag = 1;char c = getchar();\n    while(c < '0' || c >'9'){if(c == '-')flag = -1;c = getchar();}\n    while(c >= '0' && c <= '9'){out = out * 10 + c - '0';c = getchar();}\n    return flag * out;\n    }\nconst int maxn = 100019,INF = 1e9;\nint nume = 1;\nint lenx,leny;\nint map[190][190];\nint mx[4] = {1,-1,0,0};\nint my[4] = {0,0,1,-1};\nint s,t,maxflow;\nint head[maxn];\nstruct Node{\n    int v,dis,nxt;\n    }E[maxn << 2];\nvoid add(int u,int v,int dis){\n    E[++nume].nxt = head[u];\n    E[nume].v = v;\n    E[nume].dis = dis;\n    head[u] = nume;\n    }\nint lev[maxn];\nbool bfs(){\n    queue<int>Q;\n    memset(lev,0,sizeof(lev));\n    Q.push(s);\n    lev[s] = 1;\n    while(!Q.empty()){\n        int u = Q.front();\n        Q.pop();\n        for(int i = head[u];i;i = E[i].nxt){\n            int v = E[i].v;\n            if(E[i].dis && !lev[v]){\n                lev[v] = lev[u] + 1;\n                Q.push(v);\n                if(v == t)return 1;\n                }\n            }\n        }\n    return 0;\n    }\nint Dinic(int u,int flow){\n    if(u == t)return flow;\n    int rest = flow,k;\n    for(int i = head[u];i;i = E[i].nxt){\n        int v = E[i].v;\n        if(E[i].dis && lev[v] == lev[u] + 1 && rest){\n            k = Dinic(v,min(rest,E[i].dis));\n            if(!k)lev[v] = 0;\n            E[i].dis -= k;\n            E[i ^ 1].dis += k;\n            rest -= k;\n            }\n\n        }\n    return flow - rest;\n    }\nint getindex(int x,int y){\n    return (x - 1) * leny + y;\n    }\nbool judge(int x,int y){\n    if(x < 1 || x > lenx || y < 1 || y > leny)return 0;\n    return 1;\n    }\n/*for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            \n            }\n        }*/\nvoid build(){\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            if(map[i][j] == 2){\n                add(s,getindex(i,j),INF);\n                add(getindex(i,j),s,0);\n                }\n            else if(map[i][j] == 1){\n                add(getindex(i,j),t,INF);\n                add(t,getindex(i,j),0);\n                }\n            }\n        }\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            if(map[i][j] == 2 || map[i][j] == 0){\n                for(int k = 0;k < 4;k++){\n                    int nx = i + mx[k],ny = j + my[k];\n                    if(!judge(nx,ny))continue;\n                    if(map[nx][ny] == 1 || map[nx][ny] == 0){\n                        add(getindex(i,j),getindex(nx,ny),1);\n                        add(getindex(nx,ny),getindex(i,j),0);\n                        }\n                    }\n                }\n            }\n        }\n    }\nint main(){\n    lenx = RD();leny = RD();\n    for(int i = 1;i <= lenx;i++){\n        for(int j = 1;j <= leny;j++){\n            map[i][j] = RD();\n            }\n        }\n    s = lenx * leny + 1,t = s + 1;\n    build();\n    int flow = 0;\n    while(bfs())while(flow = Dinic(s,INF))maxflow += flow;\n    printf(\"%d\\n\",maxflow);\n    return 0;\n    }\n```",
        "postTime": 1524567495,
        "uid": 56230,
        "name": "\u5929\u4e0a\u4e00\u9897\u86cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a $N\\times M$ \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u53ef\u80fd\u662f\u72fc\u3001\u7a7a\u5730\u6216\u8005\u7f8a\uff0c\u4f60\u8981\u5728\u67d0\u4e9b\u70b9\u7684\u67d0\u51e0\u4e2a\u8fb9\u754c\u65b9\u7bf1\u7b06\u4f7f\u5f97\u4efb\u610f\u72fc\u3001\u7f8a\u4e0d\u80fd\u4e92\u901a\u3002\n\n# \u6b63\u6587\uff1a\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5355\u4f4d\u7684\u7bf1\u7b06\u628a\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u5206\u5f00\uff0c\u60f3\u5230\u7528\u6700\u5c0f\u5272\uff0c\u539f\u70b9\u5411\u7f8a\u8fde\u4e00\u6761\u65e0\u7a77\u5927\u7684\u8fb9\uff0c\u7f8a\u5411\u7a7a\u5730\u548c\u72fc\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a\u4e00\u7684\u8fb9\uff0c\u7a7a\u5730\u5411\u5176\u5b83\u7a7a\u5730\u548c\u72fc\u8fde\u8fb9\u6743\u4e3a\u4e00\u7684\u8fb9\uff0c\u72fc\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u65e0\u7a77\u5927\u7684\u8fb9\u3002\n\n\u5982\uff1a\n\n![](https://s1.ax1x.com/2020/08/16/dVU6cF.png)\n\n# \u4ee3\u7801\uff1a\n\n```cpp\nvoid Add(int x, int y, int w)\n{\n\te[++tot] = (edge){y, w, tot + 1, head[x]}; \n\thead[x] = tot;\n\te[++tot] = (edge){x, 0, tot - 1, head[y]}; \n\thead[y] = tot; \n}\n\nint dis[N * N];\nqueue <int> que;\n\nbool bfs()\n{\n\twhile(!que.empty())que.pop();\n\tmemset(dis, 60, sizeof(dis));\n\tdis[s] = 0;\n\tque.push(s);\n\twhile(!que.empty())\n\t{\n\t\tint x = que.front();que.pop();\n\t\tfor (int i = head[x]; i; i = e[i].next)\n\t\t{\n\t\t\tint y = e[i].y;\n\t\t\tif(dis[y] >= dis[x] + 1 && e[i].w)\n\t\t\t{\n\t\t\t\tdis[y] = dis[x] + 1;\n\t\t\t\tif(y == t) return 1;\n\t\t\t\tque.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nll dfs(int x, ll f)\n{\n\tif(x == t) return f;\n\tll sum = 0;\n\tfor (int i = head[x]; i; i = e[i].next)\n\t{\n\t\tint y = e[i].y;\n\t\tif(dis[y] == dis[x] + 1 && e[i].w)\n\t\t{\n\t\t\tll f2 = dfs(y, min(e[i].w * 1ll, f - sum));\n\t\t\tif (!f2) dis[y] = -1;\n            e[i].w -= f2; \n            e[e[i].op].w += f2;\n            sum += f2;\n            if (sum == f) break;\n\t\t}\n\t}\n\treturn sum;\n}\n\nll dinic()\n{\n\tll sum = 0;\n\twhile(bfs()){sum += dfs(s, 1010580540);}\n\treturn sum;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\ts = n * m + 1, t = n * m + 2; \n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tscanf (\"%d\", &a[i][j]);\n\t\t\tif(a[i][j] == 1)\n\t\t\t{\n\t\t\t\tAdd(s, (i - 1) * m + j, 1010580540);\n\t\t\t} else\n\t\t\tif(a[i][j] == 2)\n\t\t\t{\n\t\t\t\tAdd((i - 1) * m + j, t, 1010580540);\n\t\t\t}\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tif(a[i][j] == 1 || a[i][j] == 0)\n\t\t\t\tfor (int k = 0; k < 4; k++)\n\t\t\t\t{\n\t\t\t\t\tint x = i + dx[k], y = j + dy[k];\n\t\t\t\t\tif(x <= 0 || x > n || y <= 0 || y > m)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif(a[x][y] == 2 || a[x][y] == 0)\n\t\t\t\t\t\tAdd((i - 1) * m + j, (x - 1) * m + y, 1);\n\t\t\t\t}\n\t\t}\n\tprintf(\"%lld\", dinic());\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1597584048,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "[$$\\color{#0e90d2}\\huge{\\texttt{my blog}}$$](https://wxwoo.github.io/2019/03/13/solution-p2598/)\n\n******\n\n[\u539f\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P2598)\n\n\u5c06\u72fc\u548c\u7f8a\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1a~~\u660e\u663e\u7684~~\u6700\u5c0f\u5272\n\n\u6839\u636e*\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406*\uff0c\u6700\u5927\u6d41=\u6700\u5c0f\u5272\uff0c\u6240\u4ee5\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528\u6700\u5927\u6d41\u7b97\u6cd5\u6c42\u89e3\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u683c\u5b50\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5982\u4e0b\u5efa\u8fb9\uff1a\n\n> 1. \u6e90\u70b9\u5411\u72fc\u7684\u9886\u5730\u8fde\u6d41\u91cf\u4e3a$inf$\u7684\u8fb9\n\n> 1. \u7f8a\u7684\u9886\u5730\u5411\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a$inf$\u7684\u8fb9\n\n> 1. \u6bcf\u4e2a\u683c\u5b50\u5411\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u8fde\u6d41\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u601d\u8003\u8fd9\u6837\u5efa\u8fb9\u7684\u6b63\u786e\u6027\n\n\u5728\u6700\u5c0f\u5272\u6a21\u578b\u4e2d\uff0c\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a$inf$\u7684\u8fb9\u610f\u4e3a\u8fde\u4e00\u6761\u4e0d\u53ef\u5272\u8fb9\uff08\u8fd9\u5957\u8def\u5f88\u5e38\u89c1\u7684\uff09\n\n\u90a3\u4e48\u8fd9\u4e2a\u56fe\u4e2d\u7684\u53ef\u5272\u8fb9\u5c31\u53ea\u6709\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u7684\u8fb9\u4e86\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u90a3\u4e9b\u4e3a$0$\u7684\u683c\u5b50\n\n\u7531\u4e8e\u6700\u5c0f\u5272\u7684\u6027\u8d28\uff0c\u72fc\u548c\u7f8a\u4e00\u5b9a\u4f1a\u88ab\u5206\u6210\u4e24\u90e8\u5206\uff0c\u548c\u4e3a$0$\u7684\u683c\u5b50\u65e0\u5173\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int inf=1e9;\nconst int N=3e5+1;\nstruct edge\n{\n    int from,to,next,cap,flow;\n}e[N];\nint cnt,n,m,sour,sink,head[N],ans,q[N],l[N],p[N];\nconst int move[4][2]={{0,1},{0,-1},{1,0},{-1,0}};\ninline int min(int i,int j)\n{\n    return i<j?i:j;\n}\ninline void add(int u,int v,int l)\n{\n    e[++cnt]=(edge){u,v,head[u],l,0};\n    head[u]=cnt;\n    e[++cnt]=(edge){v,u,head[v],0,0};\n    head[v]=cnt;\n}\ninline bool find()\n{\n    memset(l,0,sizeof(l));\n    int h=1,t=1;\n    q[1]=sour;\n    l[sour]=1;\n    while(h<=t)\n    {\n        int x=q[h++];\n        for(int i=head[x];i;i=e[i].next)\n            if(!l[e[i].to]&&e[i].cap>e[i].flow)\n            {\n                q[++t]=e[i].to;\n                l[e[i].to]=l[x]+1;\n                if(e[i].to==sink)\n                    return true;\n            }\n    }\n    return false;\n}\nint dfs(int x,int now)\n{\n    if(x==sink||!now)\n        return now;\n    int t=now,detla;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        if(e[i].cap>e[i].flow&&l[e[i].to]==l[x]+1)\n        {\n            detla=dfs(e[i].to,min(t,e[i].cap-e[i].flow));\n            if(!detla)\n                l[e[i].to]=0;\n            e[i].flow+=detla;\n            e[((i-1)^1)+1].flow-=detla;\n            t-=detla;\n            if(t==0)\n                break;\n        }\n    }\n    return now-t;\n}\ninline void dinic()\n{\n    while(find())\n        ans+=dfs(sour,inf);\n}\ninline void read(int &x)\n{\n    char ch;\n    int f=1;\n    x=0;\n    do\n    {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }while(!('0'<=ch&&ch<='9'));\n    do\n    {\n        x=(x<<3)+(x<<1)+ch-48;\n        ch=getchar();\n    }while('0'<=ch&&ch<='9');\n    x*=f;\n}\ninline int get(int x,int y)\n{\n    return (x-1)*m+y;\n}\nint main()\n{\n    read(n);\n    read(m);\n    sour=0;\n    sink=n*m+1;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            int t;\n            read(t);\n            if(t==2)\n            \tadd(get(i,j),sink,inf);\n            else if(t==1)\n            \tadd(sour,get(i,j),inf);\n            for(int k=0;k<4;k++)\n            {\n            \tint x=i+move[k][0],y=j+move[k][1];\n            \tif(x<1||x>n||y<1||y>m)\n            \t\tcontinue;\n            \tadd(get(i,j),get(x,y),1);\n            }\n        }\n    }\n    dinic();\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1550063284,
        "uid": 116659,
        "name": "wxwoo",
        "ccfLevel": 6,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b \u9898\u89e3"
    },
    {
        "content": "[P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b](https://www.luogu.com.cn/problem/P2598)\n\n\u5927\u81f4\u9898\u610f\uff1a\u72fc\u548c\u7f8a\u5728\u77e9\u9635\u91cc\uff0c\u9700\u8981\u5c06\u67d0\u4e9b\u8fb9\u5206\u5f00\u4f7f\u5f97\u4ed6\u4eec\u4e0d\u76f8\u90bb\u3002\n\n\u6700\u5c0f\u5272\u3002\u975e\u5e38\u5957\u8def\uff0c\u76f4\u63a5\u628a\u4e24\u79cd\u52a8\u7269\u5206\u522b\u5bf9\u5e94\u5230\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u8ba9\u72fc\u5403\u4e0d\u5230\u7f8a\u5c31\u662f\u8ba9\u6e90\u70b9\u4e0e\u6c47\u70b9\u4e0d\u60f3\u901a\uff0c\u8003\u8651\u6700\u5c0f\u5272\u89e3\u51b3\u3002\n\n\u8fde\u8fb9\uff1a\n\n1\u3001\u6e90\u70b9\u5411\u6240\u6709\u72fc\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ \\infty $ \u7684\u8fb9\n\n2\u3001\u6bcf\u53ea\u7f8a\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ \\infty $ \u7684\u8fb9\n\n3\u3001\u6bcf\u4e2a\u65b9\u683c\u5411\u5468\u56f4\u5417\uff0c\u6bcf\u4e2a\u65b9\u683c\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $ 1 $ \u7684\u8fb9\u3002\n\n\u6700\u540e\u5229\u7528\u6700\u5c0f\u5272\u6700\u5927\u6d41\u5b9a\u7406\u6c42\u51fa\u6700\u5c0f\u5272\u3002\n\n\u601d\u8003\u4e00\u4e0b\u539f\u7406\uff0c\u5728\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5efa\u7bf1\u7b06\uff0c\u81ea\u7136\u5c31\u4e3a $ 1 $\uff0c\u81f3\u4e8e\u5411\u6e90\u70b9\u4e0e\u6c47\u70b9\uff0c\u524d\u9762\u6709\u8bf4\u3002\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u5957\u8def\u7684\u9898\u3002\n\nCode\n\n```cpp\n# include <iostream>\n# include <cstdio>\n# include <queue>\n# include <cstring>\nusing namespace std;\n\nconst int N = 1e5 + 5;\nconst int M = 2e6 + 5;\nconst int maxn = 100 + 5;\nconst int inf = 0x3f3f3f3f;\nint n , m;\n\ntypedef struct {\n\tint x , y , z , next;\n} Edge;\nEdge edge[M];\nint E = 1 , elast[N];\nint S , T;\nvoid add(int x , int y , int z) {\n\tE ++;\n\tedge[E].x = x;\n\tedge[E].y = y;\n\tedge[E].z = z;\n\tedge[E].next = elast[x];\n\telast[x] = E;\n}\nint x , y , z;\nint a[maxn][maxn];\nint dis[N] , cnt[N];\nvoid bfs(int start) {\n\tqueue<int> q;\n\tq.push(start);\n\tdis[start] = 0;\n\tcnt[S] = 1;\n\twhile (!q.empty()) {\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tfor (int i = elast[cur] ; i ; i = edge[i].next) {\n\t\t\tint v = edge[i].y;\n\t\t\tif (dis[v] != -1) continue;\n\t\t\tdis[v] = dis[cur] + 1;\n\t\t\tq.push(v);\n\t\t\tcnt[dis[v]] ++;\n\t\t}\n\t}\n}\nint cur[N];\nint dfs(int u , int flow) {\n\tif (u == T) return flow;\n\tint temp , delta = 0;\n\tfor (int i = cur[u] ; i ; i = edge[i].next) {\n\t\tcur[u] = i;\n\t\tint v = edge[i].y;\n\t\tif (edge[i].z > 0 && dis[u] == dis[v] + 1) {\n\t\t\ttemp = dfs(v , min(flow - delta , edge[i].z));\n\t\t\tedge[i].z -= temp;\n\t\t\tedge[i ^ 1].z += temp;\n\t\t\tdelta += temp;\n\t\t\tif (delta == flow) return delta;\n\t\t}\n\t}\n\tif (dis[S] >= T) return delta;\n\tcur[u] = elast[u];\n\tif (-- cnt[dis[u]] == 0) dis[S] = T;\n\tcnt[++ dis[u]] ++;\n\treturn delta;\n}\nint Isap() {\n\tint Ans = 0;\n\tmemset(cnt , 0 , sizeof cnt);\n\tmemset(dis , -1 , sizeof dis);\n\tbfs(T);\n\tfor (int i = 0 ; i <= T ; i ++) {\n\t\tcur[i] = elast[i];\n\t}\n\twhile (dis[S] < T) Ans += dfs(S , inf);\n\treturn Ans;\n}\nsigned main() {\n\tcin >> n >> m;\n\tS = 0 , T = n * m + 1;\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tscanf(\"%d\" , &a[i][j]);\n\t\t}\n\t}\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tfor (int j = 1 ; j <= m ; j ++) {\n\t\t\tif (i - 1 > 0) add((i - 1) * m + j , (i - 2) * m + j , 1) , add((i - 2) * m + j , (i - 1) * m + j , 0);\n\t\t\tif (i + 1 <= n) add((i - 1) * m + j , i * m + j , 1) , add(i * m + j , (i - 1) * m + j , 0);\n\t\t\tif (j - 1 > 0) add((i - 1) * m + j , (i - 1) * m + j - 1 , 1) , add((i - 1) * m + j - 1 , (i - 1) * m + j , 0);\n\t\t\tif (j + 1 <= m) add((i - 1) * m + j , (i - 1) * m + j + 1 , 1) , add((i - 1) * m + j + 1 , (i - 1) * m + j , 0);\n\t\t\tif (a[i][j] == 1) add(S , (i - 1) * m + j , inf) , add((i - 1) * m + j , S , 0);\n\t\t\tif (a[i][j] == 2) add((i - 1) * m + j , T , inf) , add(T , (i - 1) * m + j , 0);\n\t\t} \n\t}\n\tprintf(\"%d\\n\" , Isap());\n\treturn 0;\n}\n```",
        "postTime": 1629269132,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b"
    },
    {
        "content": "[\u72fc\u548c\u7f8a\u7684\u6545\u4e8b](https://www.luogu.com.cn/problem/P2598)\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u4e0d\u96be\uff0c\u53ea\u662f\u9898\u610f\u6709\u90a3\u4e48~~\u4ebf~~\u70b9\u70b9\u96be\u7406\u89e3\u3002\u6211\u6700\u5f00\u59cb\u60f3\u590d\u6742\u4e86\uff0c\u7406\u89e3\u4e3a\u4e86\u6805\u680f\u957f\u5ea6\u662f\u683c\u70b9\u7684\u5468\u957f\uff0c\u90a3\u4e8b\u60c5\u5c31\u590d\u6742\u4e86\u3002\u3002\u3002\n\n**\u9898\u76ee\u5206\u6790**\uff1a\n\n\n- \u9996\u5148\uff0c\u8981\u660e\u786e\u7684\u662f\uff1a\u4e00\u4e2a\u72fc\u9886\u5730\u548c\u7f8a\u9886\u5730\u4e4b\u95f4\u53ea\u9700\u5efa\u957f\u5ea6\u4e3a $1$ \u7684\u6805\u680f\u3002\u786e\u5b9a**\u6e90\u70b9**\u4e3a\u72fc\uff0c**\u6c47\u70b9**\u4e3a\u7f8a\uff0c\u6b63\u5e38\u8fde\u8fb9\uff0c\u6ce8\u610f\u8fb9\u6743\u4e3a**\u6781\u5927\u503c**\uff0c\u56e0\u4e3a**\u4e0d\u786e\u5b9a**\u4e00\u53ea\u72fc\u4f1a\u548c\u51e0\u53ea\u7f8a\u76f8\u90bb\uff0c\u6240\u4ee5\u76f4\u63a5\u6765\u6781\u5927\u503c\uff1b\n\n\u56e0\u4e3a\u8981\u72fc\u548c\u7f8a\u4e4b\u95f4\u4e0d\u5f71\u54cd\uff0c\u610f\u601d\u5c31\u662f\u8bf4\u8981\u6e90\u70b9\u548c\u6c47\u70b9\u4e4b\u95f4**\u4e0d\u8054\u901a**\uff0c\u5c31\u662f\u660e\u663e\u7684**\u6700\u5c0f\u5272**\u5566\u3002\n\n- \u7136\u540e\uff0c\u8fde\u76f8\u90bb\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u5982\u679c\u8be5\u683c\u70b9\u662f\u7f8a\uff0c\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u5f71\u54cd~~\u5351\u5fae~~\uff0c\u8981\u8003\u8651\u7684\u662f\u7a7a\u5730\u548c\u72fc\u7684\u60c5\u51b5\u3002\u5982\u679c\u4e24\u5757\u90fd\u662f\u72fc\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff08\u7f8a\u90fd\u6ca1\u6709\u5403\u4e2a\u5bc2\u5bde\uff09\u3002\u90a3\u4e48\u5269\u4e0b\u7684\u60c5\u51b5\u76f4\u63a5\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u5373\u4fee\u4e00\u6b21\u6805\u680f\uff1b\n\n- \u6700\u540e\uff0c\u6700\u5c0f\u5272\u6a21\u677f\u6c42\u51fa\u7b54\u6848\u5c31\u597d\u5566\u3002\n\n\n**\u5b8c\u6574\u4ee3\u7801**\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n#define rt register int\nconst int N = 1e4 + 10,M = 1e5 + 10,inf = 1e9;\nstruct node {\n    int to,nex;\n}e[M];\nint n,m,s,t,top,ed,map[105][105],dep[N],head[N],cur[N],tot = 1,f[M],q[N],a[4][2] = {{0,1},{1,0},{-1,0},{0,-1}};\ninline void add(int x,int y,int w) {\n    e[++tot] = (node) {y,head[x]}, f[tot] = w, head[x] = tot;\n    e[++tot] = (node) {x,head[y]}, head[y] = tot; \n}\ninline bool bfs() {\n    memset(dep,-1,sizeof(dep));\n    dep[s] = 0, cur[s] = head[s], q[top = 1] = s; ed = 1;\n    int now,ver;\n    while(top <= ed) {\n        now = q[top++];\n        for(rt i = head[now]; i; i = e[i].nex) {\n            ver = e[i].to;\n            if(dep[ver] == -1 && f[i]) {\n                dep[ver] = dep[now] + 1, cur[ver] = head[ver];\n                if(ver == t) return 1;\n                q[++ed] = ver;\n            }\n        }\n    }\n    return 0;\n}\ninline int find(int x,int limit) {\n    if(x == t) return limit;\n    int flow = 0, tmp, ver;\n    for(rt i = head[x]; i && flow < limit; i = e[i].nex) {\n        ver = e[i].to;\n        if(dep[ver] == dep[x] + 1 && f[i]) {\n            tmp = find(ver,min(limit - flow,f[i]));\n            if(!tmp) dep[ver] = -1;\n            f[i] -= tmp, f[i ^ 1] += tmp, flow += tmp; \n        }\n    }\n    return flow;\n}\ninline int dinic() {\n    int res = 0, flow;\n    while(bfs()) res += find(s,inf);\n    return res;\n}\ninline void read(int &x) {\n    x = 0;int ff = 1;\n    char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-') ff = -1;s = getchar();}\n    while(s <= '9' && s >= '0') {x = x * 10 + s - '0', s = getchar(); }\n    x *= ff;\n}\ninline int pos(int x,int y) {\n    return m * (x - 1) + y;\n}\nint main() {\n    read(n), read(m);\n    s = n * m + 1, t = s + 1;\n    for(rt i = 1; i <= n; i ++) {\n        for(rt j = 1; j <= m; j ++) {\n            read(map[i][j]);\n            if(map[i][j] == 1) add(s,pos(i,j),inf);//\u72fc \n            if(map[i][j] == 2) add(pos(i,j),t,inf);//\u7f8a \n        }\n    }\n    int tx,ty;\n    for(rt i = 1; i <= n; i ++) {\n        for(rt j = 1; j <= m; j ++) {\n            for(rt k = 0; k < 4; k ++) {//\u4e0a\u4e0b\u5de6\u53f3 \n                tx = i + a[k][0], ty = j + a[k][1];\n                if(tx < 1 || ty  < 1 || tx > n || ty > m || map[i][j] == 2) continue;//\u6392\u9664\u8d8a\u754c\u548c\u7f8a\u7684\u60c5\u51b5 \n                if(map[i][j] != 1 || map[tx][ty] != 1) add(pos(i,j),pos(tx,ty),1);//\u6392\u9664\u4e24\u53ea\u90fd\u662f\u72fc\u7684\u60c5\u51b5 \n            }\n        }\n    }\n    printf(\"%d\",dinic());\n    return 0;\n} \n```\n\n\u8bdd\u8bf4\u6709\u6ca1\u6709\u4eba\u8ddf\u6211\u4e00\u6837\uff0c\u8bfb\u5b8c\u9898\u9762\u8111\u888b\u91cc\u5c31\u5f00\u59cb\u6d17\u8111\u56de\u653e\u201c\u72fc\u7231\u4e0a\u7f8a\u554a\u7231\u7684\u75af\u72c2\u2026\u2026\u201d\u554a\u96fe~\n",
        "postTime": 1609164285,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "P2598 [ZJOI2009] \u72fc\u548c\u7f8a\u7684\u6545\u4e8b"
    },
    {
        "content": "###\u9898\u76ee\u63cf\u8ff0\n\n\u201c\u72fc\u7231\u4e0a\u7f8a\u554a\u7231\u7684\u75af\u72c2\uff0c\u8c01\u8ba9\u4ed6\u4eec\u771f\u7231\u4e86\u4e00\u573a\uff1b\u72fc\u7231\u4e0a\u7f8a\u554a\u5e76\u4e0d\u8352\u5510\uff0c\u4ed6\u4eec\u8bf4\u6709\u7231\u5c31\u6709\u65b9\u5411\uff0e\uff0e\uff0e\uff0e\uff0e\uff0e\u201d Orez\u542c\u5230\u8fd9\u9996\u6b4c\uff0c\u5fc3\u60f3\uff1a\u72fc\u548c\u7f8a\u5982\u6b64\u548c\u8c10\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u7f8a\u72fc\u5408\u517b\u5462\uff1f\u8bf4\u5e72\u5c31\u5e72\uff01 Orez\u7684\u7f8a\u72fc\u5708\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2an\\*m\u4e2a\u77e9\u9635\u683c\u5b50\uff0c\u8fd9\u4e2a\u77e9\u9635\u7684\u8fb9\u7f18\u5df2\u7ecf\u88c5\u4e0a\u4e86\u7bf1\u7b06\u3002\u53ef\u662fDrake\u5f88\u5feb\u53d1\u73b0\u72fc\u518d\u600e\u4e48\u4e5f\u662f\u72fc\uff0c\u5b83\u4eec\u603b\u662f\u5bf9\u7f8a\u5782\u6d8e\u4e09\u5c3a\uff0c\u90a3\u9996\u6b4c\u53ea\u4e0d\u8fc7\u662f\u4e00\u4e2a\u52a8\u4eba\u7684\u4f20\u8bf4\u800c\u5df2\u3002\u6240\u4ee5Orez\u51b3\u5b9a\u5728\u7f8a\u72fc\u5708\u4e2d\u518d\u52a0\u5165\u4e00\u4e9b\u7bf1\u7b06\uff0c\u8fd8\u662f\u8981\u5c06\u7f8a\u72fc\u5206\u5f00\u6765\u517b\u3002 \u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\uff0cOrez\u53d1\u73b0\u72fc\u548c\u7f8a\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u9886\u5730\uff0c\u82e5\u72fc\u548c\u7f8a\u4eec\u4e0d\u80fd\u5446\u5728\u81ea\u5df1\u7684\u9886\u5730\uff0c\u90a3\u5b83\u4eec\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u66b4\u8e81\uff0c\u4e0d\u5229\u4e8e\u4ed6\u4eec\u7684\u6210\u957f\u3002 Orez\u60f3\u8981\u6dfb\u52a0\u7bf1\u7b06\u7684\u5c3d\u53ef\u80fd\u7684\u77ed\u3002\u5f53\u7136\u8fd9\u4e2a\u7bf1\u7b06\u9996\u5148\u5f97\u4fdd\u8bc1\u4e0d\u80fd\u6539\u53d8\u72fc\u7f8a\u7684\u6240\u5c5e\u9886\u5730\uff0c\u518d\u5c31\u662f\u7bf1\u7b06\u5fc5\u987b\u4fee\u7b51\u5b8c\u6574\uff0c\u4e5f\u5c31\u662f\u8bf4\u5fc5\u987b\u4fee\u5efa\u5728\u5355\u4f4d\u683c\u5b50\u7684\u8fb9\u754c\u4e0a\u5e76\u4e14\u4e0d\u80fd\u53ea\u4fee\u5efa\u4e00\u90e8\u5206\u3002\n\n\n###\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570n\u548cm\u3002\u63a5\u4e0b\u6765n\u884c\u6bcf\u884cm\u4e2a\u6574\u6570\uff0c1\u8868\u793a\u8be5\u683c\u5b50\u5c5e\u4e8e\u72fc\u7684\u9886\u5730\uff0c2\u8868\u793a\u5c5e\u4e8e\u7f8a\u7684\u9886\u5730\uff0c0\u8868\u793a\u8be5\u683c\u5b50\u4e0d\u662f\u4efb\u4f55\u4e00\u53ea\u52a8\u7269\u7684\u9886\u5730\u3002\n\n\n###\u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u6587\u4ef6\u4e2d\u4ec5\u5305\u542b\u4e00\u4e2a\u6574\u6570ans\uff0c\u4ee3\u8868\u7bf1\u7b06\u7684\u6700\u77ed\u957f\u5ea6\u3002\n\n\n###\u8bf4\u660e\n\n10%\u7684\u6570\u636e n\uff0cm\u22643\n\n30%\u7684\u6570\u636e n\uff0cm\u226420\n\n100%\u7684\u6570\u636e n\uff0cm\u2264100\n\n\n---\n>\u5efa\u56fe\uff1a1.\u6e90\u70b9s\u8fde\u72fc(\u5bb9\u91cf\u4e3ainf),\u7f8a\u8fde\u6c47\u70b9t(\u5bb9\u91cf\u4e3ainf);\n2.\u9664\u53bb\u72fc\u4e3a\u5165\u70b9\uff0c\u7f8a\u4e3a\u51fa\u70b9(\u4fdd\u8bc1\u6d41\u5411)\u4ee5\u53ca\u8fde\u8fb9\u754c\u7684\u60c5\u51b5\uff0c\u628a\u5176\u4ed6\u6240\u6709\u70b9\u548c\u5176\u76f8\u90bb\u7684\u70b9\u8fde\u8d77\u6765(\u5bb9\u91cf\u4e3a1)\n\n3.\u5176\u4f59\u4e3aDinic\u6a21\u677f\n\n**\u6ce8\u610f\uff1a**\u70b9p(x,y)\u7684\u7f16\u53f7\u4e3am\\*(x-1)+y\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=110,M=10010;\nint n,m,s,t,cnt=1,Ans;//cnt\u8bb0\u5f55\u8fb9\u6570\uff0c\u8981\u4ece1\u5f00\u59cb\nint a[N][N],last[M],dep[M],cur[M],A[4]={0,0,-1,1},B[4]={-1,1};//cur[]\u5f53\u524d\u5f27\u4f18\u5316\nstruct edge{\n    int to,next,w;//w\u4e3a\u5bb9\u91cf\n}e[10*M];\nvoid insert(int u,int v,int c)//\u8fde\u8fb9\n{\n    e[++cnt]=(edge){v,last[u],c};last[u]=cnt;\n    e[++cnt]=(edge){u,last[v],0};last[v]=cnt;\n}\nqueue<int> Q;\nbool bfs()\n{\n    while(!Q.empty())Q.pop();\n    memset(dep,0,sizeof(dep));//dep[]\u4e3abfs\u6df1\u5ea6\n    dep[s]=1;\n    Q.push(s);\n    while(!Q.empty())\n    {\n        int now=Q.front();Q.pop();\n        for(int i=last[now];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(!dep[v]&&e[i].w>0)dep[v]=dep[now]+1,Q.push(v);\n        }\n    }\n    return dep[t]!=0;\n}\nint dfs(int now,int flow)\n{\n    if(now==t)return flow;\n    for(int& i=cur[now];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(dep[v]==dep[now]+1&&e[i].w!=0)\n        {\n            int di=dfs(v,min(flow,e[i].w));\n            if(di>0){e[i].w-=di;e[i^1].w+=di;return di;}\n        }\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    t=n*m+1;//\u6e90\u70b9s\u4e3a0\uff0c\u6c47\u70b9t\u4e3an*m+1\n    for(int i=1;i<=n;i++)a[i][0]=-1,a[i][m+1]=-1;//\u5904\u7406\u8fb9\u754c\n    for(int i=1;i<=m;i++)a[0][i]=-1,a[n+1][i]=-1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\",&a[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            if(a[i][j]==1)insert(s,m*(i-1)+j,1e9);\n            if(a[i][j]==2){insert(m*(i-1)+j,t,1e9);continue;}\n            for(int k=0;k<4;k++)//\u76f8\u90bb\u70b9\n            {\n                int ll=i+A[k],cc=j+B[k];\n                if(a[ll][cc]==-1||a[ll][cc]==1)continue;\n                insert(m*(i-1)+j,m*(ll-1)+cc,1);\n            }\n        }\n    while(bfs())//Dinic\n    {\n        for(int i=s;i<=t;i++)cur[i]=last[i];//\u5f53\u524d\u5f27\u521d\u59cb\u5316\n        while(int d=dfs(s,1e9))Ans+=d;\n    }\n    printf(\"%d\\n\",Ans);\n    return 0;\n}\n```",
        "postTime": 1515810593,
        "uid": 59646,
        "name": "\u4e2d\u56fd\u98de\u9c7c",
        "ccfLevel": 0,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b"
    },
    {
        "content": "\u6bd4\u8f83\u88f8\u7684\u6700\u5c0f\u5272\uff0c\u4f46\u662f\u5728\u5904\u7406\u5efa\u56fe\u4e0a\u8981\u6ce8\u610f\u7ec6\u8282\u3002\n\nS\u4e3a0\uff0cT\u4e3an\\*m+1\uff0c\u6240\u4ee5\u6bcf\u6b21\u5f53\u524d\u5f27\u4f18\u5316\u90fd\u8981\u4ece0\u5230n\\*m+1\n\n\u5feb\u901f\u8ba1\u7b97\u5750\u6807\u7684\u65b9\u6cd5\uff1a\n\n#define P(x,y) (~-(x)\\*m+(y))\n\n~-a\u76f8\u5f53\u4e8e(a-1)\uff0cdefine\u8bb0\u5f97\u6253\u62ec\u53f7\uff0cy\u4e0d\u8981\u51cf\u4e00\uff0c\u56e0\u4e3a\u6700\u5c0f\u5750\u6807\u662f1\uff0c0\u4e3a\u6e90\u70b9S\n\n\n\u5efa\u56fe\u65f6S\u5230\u72fc\u8fdeINF\uff0c\u7f8a\u5230T\u8fdeINF\uff08\u90fd\u53cd\u8fc7\u6765\u5f53\u7136\u4e5f\u4e00\u6837\uff09\n\n\u5176\u4ed6\u8fb9\u5224\u65ad\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u8fde\u51fa\u8fb9\u4e0d\u8fde\u5165\u8fb9\uff0c\u9632\u6b62\u91cd\u590d\u8ba1\u7b97\uff1a\n\n\u5982\u679c\u90bb\u5c45\u662f\u72fc\u548c\u6216\u8005\u81ea\u5df1\u662f\u7f8a\uff0c\u5c31\u4e0d\u8fde\u8fd9\u6761\u8fb9\uff0c\u5176\u4ed6\u6761\u4ef6\u90fd\u8981\u8fde\uff08\u81ea\u5df1\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\uff09\n\n\u4ee3\u7801\u4e2da-b\u5199\u5728if\u4e2d\u5176\u5b9e\u5c31\u662fa!=b\uff08\u6162\u6162\u7406\u89e3\u4e00\u4e0b\uff09\n\n\n\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u4e0b\u9762\u662fDinic\uff0c\uff08\u5bf9\u697c\u4e0b\u7684SAP\u795e\u7287\u8868\u793a\u656c\u754f\uff09\n\n\n\n\n\n\n\n    \n\n\n        \n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 10000\n#define MAXM 100000\n#define INF 0x3f3f3f3f\n#define P(x,y) (~-(x)*m+(y))\nstruct Edge\n{\n    int to,nex,c;\n    Edge(){}\n    Edge(int _to, int _nex, int _c):to(_to),nex(_nex),c(_c){}    \n};\nEdge e[MAXM+5];\nint first[MAXN+5], cur[MAXN+5], q[MAXN+5], level[MAXN+5], tot, N, n, m, S, T;\nint g[105][105];\nint adj[4][2] = {{0,1},{1,0},{0,-1},{-1,0}};\ninline void Add(int a, int b, int c)\n{\n    if(a+1 && b+1)\n    {\n        e[tot] = Edge(b,first[a],c);\n        first[a] = tot++;\n        e[tot] = Edge(a,first[b],0);\n        first[b] = tot++; \n    }\n    return;\n}\nbool BFS()\n{\n    memset(level,0,sizeof(level));\n    level[S] = 1, q[0] = S;\n    for(register int head = 0, tail = 1, t, i; head != tail; )\n        for(t = q[head], head = (head+1)%MAXN, i = first[t]; i+1; i = e[i].nex)\n            if(!level[e[i].to] && e[i].c > 0)\n            {\n                level[e[i].to] = level[t]+1;\n                q[tail] = e[i].to, tail = (tail+1)%MAXN;\n                if(e[i].to == T)\n                    return true;\n            } \n    return false;\n}\nint DFS(int u, int f)\n{\n    if(u == T)\n        return f;\n    int tag = 0;\n    for(int &i = cur[u], del; i+1; i = e[i].nex)\n        if(level[e[i].to] == level[u]+1 && e[i].c > 0)\n        {\n            del = DFS(e[i].to,min(f-tag,e[i].c));\n            e[i].c -= del, e[i^1].c += del, tag += del;\n            if(tag == f)\n                return tag;\n        }\n    return tag;\n} \ninline int Dinic()\n{\n    int ans = 0;\n    for(register int i; BFS(); ans += DFS(S,INF))\n        for(i = 0; i <= N; i++)\n            cur[i] = first[i];\n    return ans;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m), memset(first,-1,sizeof(first)), S = 0, T = N = n*m+1;\n    for(register int i = 1, j; i <= n; i++)\n        for(j = 1; j <= m; j++)\n            scanf(\"%d\",g[i]+j);\n    for(register int i = 1, j, k, p, np; i <= n; i++)\n        for(j = 1; j <= m; j++)\n        {\n            p = P(i,j);\n            if(g[i][j] == 1)\n                Add(S,p,INF);\n            if(g[i][j] == 2)\n                Add(p,T,INF);\n            for(k = 0; k < 4; k++)\n            {\n                if(i+adj[k][0] < 1 || i+adj[k][0] > n || j+adj[k][1] < 1 || j+adj[k][1] > m)\n                    continue;\n                np = P(i+adj[k][0],j+adj[k][1]);\n                if(g[i+adj[k][0]][j+adj[k][1]]-1 && g[i][j]-2)\n                    Add(p,np,1);\n            }\n        }\n    printf(\"%d\\n\",Dinic());\n     return 0;\n}\n```",
        "postTime": 1485238473,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P2598)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n \\times m$ \u7684\u7f51\u683c\u56fe\uff0c\u6bcf\u4e2a\u70b9\u53ef\u80fd\u662f\u72fc\u7684\u9886\u5730\uff0c\u4e5f\u53ef\u80fd\u662f\u7f8a\u7684\u9886\u5730\uff0c\u6216\u8005\u4e24\u8005\u7686\u4e0d\u662f\u3002\u8981\u6c42\u5728\u4e00\u4e9b\u70b9\u7684\u8fb9\u4e0a\u5efa\u6805\u680f\uff0c\u4f7f\u5f97\u6240\u6709\u72fc\u7684\u9886\u5730\u548c\u7f8a\u7684\u9886\u5730\u65e0\u6cd5\u76f4\u63a5\u76f8\u8fde\u3002\u6c42\u6700\u5c0f\u5efa\u7684\u6805\u680f\u6570\u3002\n\n#### \u6570\u636e\u8303\u56f4\n\n$1 \\leq n,m \\leq 100$\u3002\n\n### \u601d\u8def\n\n\u6ce8\u610f\u5230\u9898\u76ee\u8981\u6c42\u7f8a\u7684\u9886\u5730\u548c\u72fc\u7684\u9886\u5730\u4e0d\u8fde\u901a\uff0c\u53c8\u8981\u4ee3\u4ef7\u6700\u5c0f\uff0c\u53ef\u4ee5\u8054\u7cfb\u5230\u7f51\u7edc\u6d41\u4e2d\u7684\u6700\u5c0f\u5272\u6a21\u578b\u3002\n\n\u9996\u5148\uff0c\u4ece\u6e90\u70b9\u5411\u6240\u6709\u7f8a\u7684\u9886\u5730\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\uff0c\u4ece\u6240\u6709\u72fc\u7684\u9886\u5730\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $+\\infty$\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5728\u6700\u5c0f\u5272\u4e2d\u7684\u5272\u8fb9\u4e0d\u4f1a\u4e0e\u6e90\u70b9\u6216\u8005\u6c47\u70b9\u76f8\u8fde\uff0c\u5728\u672c\u9898\u4e2d\u7684\u542b\u4e49\u5c31\u662f\u4e0d\u4f1a\u5728\u4e0d\u5b58\u5728\u7684\u5730\u65b9\u5efa\u6805\u680f\u3002\u518d\u4ece\u6240\u6709\u539f\u56fe\u4e2d\u7684\u70b9\u5411\u56db\u5468\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u70b9\uff0c\u8868\u793a\u5982\u679c\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u5efa\u6805\u680f\uff0c\u4ee3\u4ef7\u4e3a $1$\u3002\n\n\u8fd9\u6837\u7f51\u7edc\u6d41\u6a21\u578b\u5c31\u5efa\u597d\u4e86\u3002\u518d\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u6c42\u51fa\u7f51\u7edc\u4e2d\u7684\u6700\u5927\u6d41\u5c31\u662f\u672c\u9898\u7684\u7b54\u6848\u3002\n\n### code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+10;\nconst int M=2e5+10;\nconst int INF=0x3f3f3f3f;\nint dx[4]={-1,1,0,0};\nint dy[4]={0,0,-1,1};\nint h[N],idx=1,q[N],d[N],s,t,cur[N],n,m;\nstruct edge{\n\tint v,w,nex;\n}e[M];\nvoid add(int u,int v,int w){e[++idx].v=v;e[idx].w=w;e[idx].nex=h[u];h[u]=idx;}\nbool bfs()\n{\n\tint hh=0,tt=-1;memset(d,-1,sizeof(d));d[s]=0,cur[s]=h[s];q[++tt]=s;\n\twhile(hh<=tt)\n\t{\n\t\tint u=q[hh++];\n\t\tfor(int i=h[u];i;i=e[i].nex)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(d[v]==-1&&e[i].w)\n\t\t\t{\n\t\t\t\td[v]=d[u]+1;cur[v]=h[v];\n\t\t\t\tif(v==t) return true;\n\t\t\t\tq[++tt]=v;\n\t\t\t}\n\t\t} \n\t} \n\treturn false;\n}\nint dfs(int u,int limit)\n{\n\tif(u==t) return limit;\n\tint flow=0;\n\tfor(int i=cur[u];i&&flow<limit;i=e[i].nex)\n\t{\n\t\tint v=e[i].v;cur[u]=i;\n\t\tif(d[v]==d[u]+1&&e[i].w)\n\t\t{\n\t\t\tint t=dfs(v,min(e[i].w,limit-flow));\n\t\t\tif(!t) d[v]=-1;flow+=t;e[i].w-=t,e[i^1].w+=t;\n\t\t}\n\t}\n\treturn flow;\n}\nint dinic()\n{\n\tint res=0,flow;\n\twhile(bfs()) while(flow=dfs(s,INF)) res+=flow;\n\treturn res;\n}\nint get(int i,int j){return (i-1)*m+j;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);s=0,t=n*m+1;\n\tfor(int i=1;i<=n;i++)\n\t    for(int j=1;j<=m;j++)\n\t    {\n\t    \tint opt,u=get(i,j),v;scanf(\"%d\",&opt);\n\t    \tif(opt==1) add(s,u,INF),add(u,s,0);\n\t\t\tif(opt==2) add(u,t,INF),add(t,u,0);\n\t\t\tfor(int k=0;k<4;k++)\n\t\t\t{\n\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\tif(x<1||x>n||y<1||y>m) continue;\n\t\t\t\tv=get(x,y);add(u,v,1),add(v,u,0);\n\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\",dinic());\n\treturn 0;\n} \n```\n",
        "postTime": 1635390437,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u53ef\u80fd\u662f\u72fc\u3001\u7f8a\u6216\u8005\u7a7a\u5730\u3002\n\n\u4f60\u9700\u8981\u5728\u683c\u5b50\u7684\u8fb9\u754c\u4fee\u5efa\u7bf1\u7b06\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u72fc\u4e0e\u7f8a\u7684\u683c\u5b50\u4e0d\u8fde\u901a\u3002\n\n\u7ed9\u4e00\u4e2a\u683c\u5b50\u7684\u4e00\u6761\u8fb9\u754c\u4fee\u5efa\u7bf1\u7b06\uff0c\u90a3\u4e48\u7bf1\u7b06\u603b\u957f\u5ea6\u589e\u52a0 $1$\uff0c\u6c42\u7bf1\u7b06\u7684\u6700\u77ed\u957f\u5ea6\u3002\n\n$n, m\\leq 100$.\n\n## \u5206\u6790\n\n**\u8fd9\u662f\u6700\u5c0f\u5272\u95ee\u9898\u7684\u5e38\u89c1\u6a21\u578b\u3002**\n\n\u7f51\u7edc\u6d41\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u77e9\u9635\u4e0a\uff0c\u901a\u8fc7\u9650\u5236\u8fb9\uff0c\u4e0e\u8fde\u901a\u6027\u76f8\u5173\u7684\u95ee\u9898\u3002\n\n\u8fd9\u9053\u9898\uff0c\u9700\u8981\u628a\u72fc\u548c\u7f8a\u5206\u5f00\uff0c\u6240\u4ee5\u60f3\u5230\uff1a\n\n- **\u6e90\u70b9\u5411\u6240\u6709\u72fc\u8fde\u5bb9\u91cf\u4e3a $\\inf$ \u7684\u8fb9\uff1b**\n\n- **\u6240\u6709\u7f8a\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a $\\inf$ \u7684\u8fb9\uff1b**\n\n\u8fd9\u6837\u4f7f\u72fc\u548c\u7f8a\u4e00\u5b9a\u5206\u522b\u5c5e\u4e8e\u4e24\u4e2a\u96c6\u5408\u3002\n\n\u4e4b\u540e\u5bf9\u77e9\u9635\u4e0a\u7684\u9650\u5236\u8fdb\u884c\u6a21\u62df\uff0c**\u6240\u6709\u70b9\u5411\u56db\u5468\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u3002**\n\n\u8fd9\u6837\u65ad\u6389\u4e00\u6761\u8fb9\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5728\u77e9\u9635\u4e2d\u9009\u4e00\u6761\u8fb9\u754c\u62e6\u4f4f\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN = 10008, MAXM = 1e7;\nconst int inf = 0x3f3f3f3f;\nint n, m, S, T;\nint dir[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nint num[MAXN][MAXN];\nint get_id(int x, int y) {\n\treturn (x - 1) * m + y;\n}\nstruct Edge{\n\tint to, val, nxt;\n} edge[MAXM];\nint head[MAXN], e_cnt = 1;\nvoid add(int u, int v, int w) {\n\tedge[++e_cnt] = (Edge){v, w, head[u]};\n\thead[u] = e_cnt;\n}\nvoid add_edge(int u, int v, int w) {\n\tadd(u, v, w); add(v, u, 0);\n}\nint lev[MAXN];\nbool bfs() {\n\tmemset(lev, -1, sizeof(lev)); lev[S] = 0;\n\tqueue<int> q; q.push(S);\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i = head[u]; i; i = edge[i].nxt) {\n\t\t\tint v = edge[i].to, val = edge[i].val;\n\t\t\tif(lev[v] == -1 && val) {\n\t\t\t\tlev[v] = lev[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn (lev[T] != -1);\n}\nint dfs(int u, int flow) {\n\tif(u == T) return flow;\n\tint ret = 0;\n\tfor(int i = head[u]; i; i = edge[i].nxt) {\n\t\tint v = edge[i].to, val = edge[i].val;\n\t\tif(lev[v] == lev[u] + 1 && val) {\n\t\t\tint tmp = dfs(v, min(flow, val));\n\t\t\tedge[i].val -= tmp;\n\t\t\tedge[i ^ 1].val += tmp;\n\t\t\tflow -= tmp;\n\t\t\tret += tmp;\n\t\t\tif(flow == 0) break;\n\t\t}\n\t}\n\tif(ret == 0) lev[u] = -1;\n\treturn ret;\n}\nint Dinic() {\n\tint ret = 0;\n\twhile(bfs()) {\n\t\tret += dfs(S, inf);\n\t}\n\treturn ret;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tS = 0; T = n * m + 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= m; j++) {\n\t\t\tscanf(\"%d\", &num[i][j]);\n\t\t\tint id = get_id(i, j);\n\t\t\tif(num[i][j] == 1) add_edge(S, id, inf);\n\t\t\tif(num[i][j] == 2) add_edge(id, T, inf);\n\t\t\tfor(int k = 0; k < 4; k++) {\n\t\t\t\tint nx = i + dir[k][0], ny = j + dir[k][1];\n\t\t\t\tif(nx < 1 || ny < 1 || nx > n || ny > m) continue;\n\t\t\t\tadd_edge(id, get_id(nx, ny), 1);\n\t\t\t}\n\t\t}\n\t}\n\tcout << Dinic() << endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1626269179,
        "uid": 166535,
        "name": "TonyYin",
        "ccfLevel": 0,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b"
    },
    {
        "content": "## \u5206\u6790\n\u9996\u5148\u5206\u6790\u72fc\u7684\u5403\u7f8a\u8def\u7ebf\uff1a\u72fc $\\to$ \u7a7a\u5730 $\\to$ \u7a7a\u5730$\\to\\ldots$ - $\\to$ \u7f8a\u3002\u90a3\u4e48\u6211\u4eec\u5207\u65ad\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u73af\u8282\u5373\u53ef\u3002\n\n\u5957\u8def\u5730\u8ba9\u8d85\u7ea7\u6e90\u70b9 $s$ \u5411\u6240\u6709\u72fc\u8fde\u8fb9\uff0c\u7f8a\u5411\u8d85\u7ea7\u6c47\u70b9 $t$ \u8fde\u8fb9\uff0c\u8fb9\u6743\u8bbe\u4e3a $\\inf$\uff08\u4e0d\u53ef\u4ee5\u5272\u6389\u8fd9\u6761\u8fb9\uff09\uff0c\u7136\u540e\u8fde\u63a5\u72fc $\\to$ \u7a7a\u5730\uff0c\u7a7a\u5730 $\\to$ \u7a7a\u5730\uff0c\u72fc $\\to$ \u7f8a\u7684\u8fb9\uff0c\u5bb9\u91cf\u4e3a 1\uff0c\u5c06\u72fc\u7f8a\u5206\u6210\u4e24\u534a\uff0c\u6c42\u6700\u5c0f\u5272\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u6d41\u5373\u53ef\u3002Dinic \u53ef\u8fc7\uff0cEK \u4e0d\u77e5\u9053\u3002\n\n## \u89e3\u51b3\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nconst int N = 10010, M = 200010, d[4][2] = {{0, -1}, {-1, 0}, {1, 0}, {0, 1}};\nint n, m, mp[105][105], id[105][105];\nint head[N], ver[M], nxt[M], edge[M], tot = -1;\nint que[N], l, r;\nint increase[N], dep[N], s, t, maxflow;\n\ninline bool bfs() {\n\tmemset(dep, 0, sizeof(dep)); \n    que[1] = s, l = r = 1, dep[s] = 1;\n    while (l <= r) {\n        int tmp = que[l++];\n        for (register int i = head[tmp]; ~i; i = nxt[i])\n            if (edge[i] && !dep[ver[i]]) {\n                dep[ver[i]] = dep[tmp] + 1, que[++r] = ver[i];\n                if (ver[i] == t)\n                \treturn true;\n            }\n    }\n    return false;\n}\n\ninline int dinic(int cur, int flow) {\n\tif (cur == t)\n\t\treturn flow;\n\tint rest = flow;\n\tfor (register int i = head[cur]; (~i) && rest; i = nxt[i])\n\t\tif (edge[i] && dep[ver[i]] == dep[cur] + 1) {\n\t\t\tint increase = dinic(ver[i], min(rest, edge[i]));\n\t\t\tif (increase == 0)\n\t\t\t\tdep[ver[i]] = 0;\n\t\t\tedge[i] -= increase, edge[i ^ 1] += increase, rest -= increase;\n\t\t}\n\treturn flow - rest;\n}\n\ninline void Addedge(int x, int y, int z) { ver[++tot] = y, nxt[tot] = head[x], head[x] = tot, edge[tot] = z; }\ninline void addedge(int x, int y, int z) { Addedge(x, y, z), Addedge(y, x, 0); }\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\ts = 0, t = n * m + 1;\n\tmemset(head, -1, sizeof(head));\n\tfor (register int i = 1; i <= n; i++)\n\t\tfor (register int j = 1; j <= m; j++)\n\t\t\tscanf(\"%d\", &mp[i][j]), id[i][j] = j == 1 ? id[i - 1][m] + 1 : id[i][j - 1] + 1;\n\tfor (register int i = 1; i <= n; i++)\n\t\tfor (register int j = 1; j <= m; j++) {\n\t\t\tif (mp[i][j] == 1)\n\t\t\t\taddedge(s, id[i][j], 0x3f3f3f3f);\n\t\t\tif (mp[i][j] == 2)\n\t\t\t\taddedge(id[i][j], t, 0x3f3f3f3f);\n\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\tint x = i + d[k][0], y = j + d[k][1];\n\t\t\t\tif (x >= 1 && y >= 1 && x <= n && y <= m && ((mp[i][j] == 0 && mp[x][y] != 1) || (mp[i][j] == 1 && mp[x][y] != 1)))\n\t\t\t\t    addedge(id[i][j], id[x][y], 1);\n\t\t\t}\n\t\t}\n\twhile (bfs()) maxflow += dinic(s, 0x3f3f3f3f);\n\tcout << maxflow << endl;\n\treturn 0;\n}\n\n```\n\n\u8bf4\u53e5\u95f2\u8bdd\uff0c\u5199\u9898\u89e3\u7684\u65f6\u5019\u4f60\u8c37\u6362 Logo\u4e86\uff08",
        "postTime": 1617256008,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "P2598 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a $n\\cdot m$ \u7684\u77e9\u9635\uff0c\u77e9\u9635\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u662f $1$ \uff0c $2$ \u6216\u8005 $0$ \uff0c\u6c42\u5c06\u6240\u6709 $1$ \u548c $2$ \u5206\u5f00\u6240\u8981\u6321\u4e0a\u7684\u6700\u5c11\u8fb9\u754c\u6570\u91cf\u3002\n\n$1\\leq n,m\\leq 100$\n\n### solution\n\u4e00\u5171\u6709\u4e09\u79cd\u521d\u59cb\u60c5\u51b5\uff0c\u8fd8\u6709\u4e00\u79cd\u6ca1\u7528\uff0c\u6240\u4ee5\u5c31\u4e24\u79cd\uff0c\u201c\u4e8c\u5206\u56fe\u201d\u4e0a\u6700\u5c0f\u5272\u65e0\u7591\u4e86\uff0c\u5de6\u8fb9\u4e00\u6e9c\u5c31\u5b9a\u4e3a\u521d\u59cb\u4e3a $1$ \u7684\u4f4d\u7f6e\uff0c\u53f3\u8fb9\u4e00\u6e9c\u5c31\u5b9a\u4e3a\u521d\u59cb\u4e3a $2$ \u7684\u4f4d\u7f6e\u3002\n\n\u5176\u5b9e\u56e0\u4e3a $0$ \u662f\u6ca1\u6709\u7528\u7684\uff0c\u6839\u672c\u4e0d\u7528\u8003\u8651\u5b83\u7684\u611f\u53d7\u3002\n\n\u76f4\u63a5\uff0c\n\n1\u3001\u6e90\u70b9\u5411\u6240\u6709\u4e3a 1 \u7684\u70b9\u8fde\u6d41\u91cf $\\infty$ \u7684\u8fb9\u3002\n\n2\u3001\u6240\u6709\u4e3a 2 \u7684\u70b9\u5411\u6c47\u70b9\u8fde\u6d41\u91cf $\\infty$ \u7684\u8fb9\u3002\n\n3\u3001\u6240\u6709\u70b9\u5411\u56db\u5468\u5728\u77e9\u9635\u5185\u7684\u70b9\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u5c31\u597d\u4e86\uff01\n\n\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u662f\u72fc\u7f8a\u76f4\u63a5\u8fde\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u4e0d\u7528\u53e6\u8d70\u5f2f\u8def\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u88ab\u5272\u3002\n\n\u90a3\u4e48\u5982\u679c\u662f\u6709 $0$ \u5728\u4e2d\u95f4\u5462\uff0c\u80af\u5b9a\u4f1a\u9009\u62e9\u8d70\u6700\u5c11\u7684\u5f2f\u8def\uff0c\u6b64\u65f6\u867d\u7136\u4f1a\u6709\u8bb8\u591a\u5197\u4f59\u8fb9\uff0c\u4f46\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n\u6b64\u65f6\u6211\u8dd1\u4e86 [93ms](https://www.luogu.com.cn/record/47398777) \u3002\n\n\u4f46\u4f1a\u6709\u5f88\u591a\u5197\u4f59\u8fb9\u53ef\u4ee5\u53bb\u6389\uff0c\u4e00\u5f00\u59cb\u4e0d\u77e5\u9053\u600e\u4e48\u53bb\u6389\uff0c\u5c31\u5148\u628a\u8f93\u5165\u4e0e\u52a0\u8fb9\u5206\u5f00\uff0c\u6ca1\u60f3\u5230\u53ea\u8dd1\u4e86 [42ms](https://www.luogu.com.cn/record/47526240) \u3002\uff08\u8c01\u80fd\u544a\u8bc9\u6211\u662f\u4ec0\u4e48\u539f\u7406\uff09\n\n\u540e\u6765\u53d1\u73b0\u4e86 $1$ \u548c $2$ \u540c\u7c7b\u4e4b\u95f4\u7684\u8fb9\u73c2\u4ee5\u53bb\u6389\uff0c\u4f46 $0$ \u7684\u4e0d\u80fd\u53bb\u6389\n\n\u4e3a\u4ec0\u4e48\u5462\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n$1_1$ $1_2$ $1_3$ $1_4$\n\n$0_1$ $0_2$ $0_3$ $0_4$\n\n$0_5$ $0_6$ $0_7$ $0_8$\n\n$2_1$ $2_2$ $2_3$ $2_4$\n\n\u5982\u679c 0 \u540c\u7c7b\u4e4b\u95f4\u7684\u8fb9\u4e5f\u53bb\u6389\u540e\u5efa\u51fa\u6765\u7684\u56fe\u662f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g9eck5jv.png)\n\n\u8fd9\u6837\u7684\n\n\u5f53 $1$ \u548c $2$ \u5f7b\u5e95\u5206\u5f00\u5c31\u53ef\u80fd\u4f1a\u51fa bug\n\n\u6240\u4ee5\u53ea\u6709 $1$ \u548c $2$ \u540c\u7c7b\u4e4b\u95f4\u7684\u8fb9\u73c2\u4ee5\u53bb\u6389\n\n\u7136\u540e\u5c31\u53ea\u8dd1\u4e86 [39ms](https://www.luogu.com.cn/record/47526794) \u3002\n\n\u867d\u7136\u662f\u8fd0\u6c14\u597d\uff0c\u4f46\u8fd9\u4e2a\u601d\u8003\u7684\u8fc7\u7a0b\u4e5f\u7565\u5fae\u4f53\u73b0\u4e86\u4e00\u4e0b\u672c\u9898\u4e00\u70b9\u4e0d\u540c\u7684\u4ef7\u503c\u4e4b\u5904\n```cpp\n#include<bits/stdc++.h>\n#define id(i,j) (i-1)*m+j\nusing namespace std;\ntypedef long long ll;\nconst int N=1e4+10,M=1e5+10;\nconst int INF=0x3f3f3f3f;\nconst int xx[]={0,0,1,-1},yy[]={1,-1,0,0};\nint n,m,s,t,cur[N],gap[N],dep[N],q[N];\n//cur[i]:\u5f53\u524d\u5f27\u4f18\u5316,gap[i]:GAP\u4f18\u5316 \nint fst[N],nxt[M],to[M],val[M],tot=2;\nint a[108][108];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s*w;\n}\ninline void add(int u,int v,int w)\n{\n\tnxt[tot]=fst[u];\n\tto[tot]=v,val[tot]=1ll*w;\n\tfst[u]=tot;++tot;\n\tnxt[tot]=fst[v];\n\tto[tot]=u,val[tot]=0;\n\tfst[v]=tot;++tot;\n}\ninline void bfs()\n{\n\tfor(int i=s;i<=t;++i)\n\tdep[i]=q[i]=gap[i]=0;\n\tint hd=0,tl=1;\n\tdep[t]=1,gap[1]=1;q[tl]=t;\n\t//\u8fd9\u662f\u4ece\u6c47\u70b9\u5f00\u59cb\n\twhile(hd<tl)\n\t{\n\t\tint u=q[++hd];\n\t\tfor(int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(!dep[v])\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\t++gap[dep[v]];\n\t\t\t\tq[++tl]=v;\n\t\t\t}\n\t\t}\n\t}\n}\nll dfs(int u,ll lim)\n{\n\tif(u==t)return lim;\n\tint ans=0,tmp;\n\tfor(int i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tcur[u]=i;\n\t\tif(dep[v]==dep[u]-1&&val[i])\n\t\t{\n\t\t\ttmp=dfs(v,min(lim,1ll*val[i]));\n\t\t\tval[i]-=tmp,lim-=tmp;\n\t\t\tans+=tmp,val[i^1]+=tmp;\n\t\t\tif(!lim)break;\n\t\t}\n\t}\n\tif((!ans)||lim)\n\t{\n\t\tif(--gap[dep[u]]==0)dep[s]=n*m+3;\n\t\t++gap[++dep[u]];\n\t}\n\treturn ans;\n}\ninline ll isap()\n{\n\tll ans=0;\n\tbfs();\n\twhile(dep[s]<=n*m+2)\n\t{\n\t\tmemcpy(cur,fst,sizeof(cur));\n\t\tans+=dfs(s,INF);\n\t}\n\treturn ans;\n}\nint main()\n{\n\tn=read(),m=read(),s=0,t=n*m+1;\n\tfor(int i=1;i<=n;++i)\n\tfor(int j=1;j<=m;++j)\n\t{\n\t\tint p=read();a[i][j]=p;\n\t}\n\tfor(int i=1;i<=n;++i)for(int j=1;j<=m;++j)\n\t{\n\t\tint p=a[i][j];\n\t\tif(p==1)add(s,id(i,j),INF);\n\t\tif(p==2)add(id(i,j),t,INF);\n\t\tfor(int k=0;k<4;++k)\n\t\t{\n\t\t\tint x=i+xx[k],y=j+yy[k];\n\t\t\tif(x<1||y<1||x>n||y>m||((p==1||p==2)&&a[x][y]==p))continue;\n\t\t\tadd(id(x,y),id(i,j),1);\n\t\t}\n\t}\n\tprintf(\"%d\",isap());\n\tgetchar();\n\treturn 0;\n}\n```\n\u53ea\u6c42\u80fd\u5e2e\u52a9\u5230\u51e0\u4e2a\u4eba\u7f62\u3002\u3002",
        "postTime": 1615123193,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $nm$ \u7684\u7531 $(0,1,2)$ \u7ec4\u6210\u7684\u77e9\u9635\uff0c\u8981\u6c42\u5728\u4e24\u4e2a\u6570\u4e4b\u95f4\u5efa\u5899\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a $1$ \u548c $2$ \u4e0d\u8fde\u901a\uff08\u4e24\u4e2a\u6570\u76f8\u90bb\u4e14\u4e4b\u95f4\u65e0\u5899\u5373\u4e3a\u8054\u901a\uff09\uff0c\u6c42\u6700\u5c11\u8981\u5efa\u591a\u5c11\u5899\u3002\n\n\u8fd9\u9053\u9898\u53ef\u89c6\u4f5c\u662f\u8981\u5c06 $1$ \u548c $2$ \u5212\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u8003\u8651\u6700\u5c0f\u5272\u3002\n\n$s\\longrightarrow\\{(i,j)|mp_{i,j}==1\\}$\uff0c\u5bb9\u91cf $+\\infty$\u3002\n\n$t\\longrightarrow\\{(i,j)|mp_{i,j}==2\\}$\uff0c\u5bb9\u91cf $+\\infty$\u3002\n\n\u5bb9\u91cf $+\\infty$ \u662f\u4e3a\u4e86\u4fdd\u8bc1\u6700\u7ec8\u4e0d\u4f1a\u51fa\u73b0 $1$ \u548c $2$ \u5728\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u60c5\u51b5\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u683c\u5b50\u548c\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u683c\u5b50\u76f8\u90bb\uff0c\u6240\u4ee5\u5c06\u5b83\u548c\u5468\u56f4\u7684\u683c\u5b50\u8fde\u8d77\u6765\u3002\n\n$(i,j)\\longrightarrow(i+1,j)$\uff0c\u5bb9\u91cf\u4e3a $1$\u3002\n\n$(i,j)\\longrightarrow(i,j+1)$\uff0c\u5bb9\u91cf\u4e3a $1$\u3002\n\n$(i,j)\\longrightarrow(i-1,j)$\uff0c\u5bb9\u91cf\u4e3a $1$\u3002\n\n$(i,j)\\longrightarrow(i,j-1)$\uff0c\u5bb9\u91cf\u4e3a $1$\u3002\n\n\u8fd9\u6837\uff0c\u8dd1\u6700\u5c0f\u5272\u65f6\uff0c\u6bcf\u5272\u6389\u4e00\u6761\u8fb9\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u5efa\u4e00\u5835\u5899\uff0c\u4ee3\u4ef7 $++$ \uff0c\u6240\u4ee5\u4e0a\u9762\u5efa\u56fe\u65f6\u5bb9\u91cf\u4e3a $1$ \u3002\n\n\u6700\u7ec8\u6700\u5c0f\u5272\u5373\u4e3a\u7b54\u6848\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n//#define int long long\n#define pair pair<int,int>\nusing namespace std;\ninline void end()\n{\n\tputs(\"\");\n\tsystem(\"pause\");\n}\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*f;\n}\nconst int N=1e4+4,M=5e5+5;\nint n,m,s,t,ans;\nint first[N],nex[M],to[M],w[M],num=1;\ninline void add(int u,int v,int val)\n{\n\tnex[++num]=first[u];\n\tfirst[u]=num;\n\tto[num]=v;\n\tw[num]=val;\n}\ninline void Add(int u,int v,int val)\n{\n\tadd(u,v,val);\n\tadd(v,u,0);\n}\nnamespace ISAP\n{\n\tint dep[N],gap[N],cur[N];\n\tvoid bfs()\n\t{\n\t\tmemset(dep,-1,sizeof(dep));\n\t\tmemset(gap,0,sizeof(gap));\n\t\tqueue<int> q;\n\t\tq.push(t);\n\t\tdep[t]=0;gap[0]=1;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=first[u];i;i=nex[i])\n\t\t\t{\n\t\t\t\tint v=to[i];\n\t\t\t\tif(dep[v]!=-1) continue;\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tgap[dep[v]]++;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tinline int dfs(int u,int in)\n\t{\n\t\tif(u==t) return in;\n\t\tint out=0;\n\t\tfor(int i=cur[u];i;i=nex[i])\n\t\t{\n\t\t\tcur[u]=i;\n\t\t\tint v=to[i];\n\t\t\tif(!w[i]||dep[v]!=dep[u]-1) continue;\n\t\t\tint res=dfs(v,min(w[i],in-out));\n\t\t\tw[i]-=res;\n\t\t\tw[i^1]+=res;\n\t\t\tout+=res;\n\t\t\tif(in==out) return out;\n\t\t}\n\t\tgap[dep[u]]--;\n\t\tif(!gap[dep[u]]) dep[s]=n*m+3;\n\t\tdep[u]++;\n\t\tgap[dep[u]]++;\n\t\treturn out;\n\t}\n\tvoid work()\n\t{\n\t\tbfs();\n\t\twhile(dep[s]<n*m+2)\n\t\t{\n\t\t\tmemcpy(cur,first,sizeof(first));\n\t\t\tans+=dfs(s,1e9);\n\t\t}\n\t}\n}\nint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};\ninline int id(int x,int y){return (x-1)*m+y;}\nint main()\n{\n\tn=read(),m=read();\n\ts=0,t=n*m+1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tint x=read();\n\t\t\tif(x==1) Add(s,id(i,j),1e9);\n\t\t\telse if(x==2) Add(id(i,j),t,1e9);\n\t\t\tfor(int k=0;k<4;++k)\n\t\t\t{\n\t\t\t\tint xx=i+dx[k],yy=j+dy[k];\n\t\t\t\tif(xx<1||yy<1||xx>n||yy>m) continue;\n\t\t\t\tAdd(id(i,j),id(xx,yy),1);\n\t\t\t}\n\t\t}\n\t}\n\tISAP::work();\n\tprintf(\"%d\",ans);\n\t//end();\n\treturn 0;\n}\n```\n",
        "postTime": 1614769421,
        "uid": 205541,
        "name": "Aftglw",
        "ccfLevel": 0,
        "title": "\u72fc\u548c\u7f8a\u7684\u6545\u4e8b \u9898\u89e3"
    },
    {
        "content": "\u7231\u60c5\u5176\u5b9e\u4e5f\u662f\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\uff0c\u542c\u8d77\u6765\u90a3\u4e48\u4f20\u5947\uff0c\u4f46\u603b\u662f\u5145\u65a5\u7740\u8352\u5510\uff0c\u6709\u65f6\u8fd8\u6ca1\u5c11\u7537\u5c11\u5973\u7684\u7eaf\u60c5\u6765\u5f97\u7b80\u5355\u3002\n\n\u5982\u679c\u628a\u72fc\u9886\u57df\u548c\u7f8a\u9886\u57df\u770b\u6210\u4e24\u4e2a\u4e92\u4e0d\u8054\u7cfb\u7684\u70b9\u96c6\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u81ea\u7136\u800c\u7136\u60f3\u5230\u6700\u5c0f\u5272\u3002     \n\n\u73b0\u5728\u6211\u4eec\u5047\u8bbe $S$ \u662f $1$ \u9635\u8425\uff0c $T$ \u662f $2$ \u9635\u8425\u3002  \n\n\u90a3\u4e48\u6211\u4eec\u9996\u5148\u80af\u5b9a\u8981\u628a $S$ \u5411\u6240\u6709 $1$ \u683c\u5b50\u90fd\u8fde\u4e00\u6761 $Inf$ \u8fb9\uff0c $T$ \u5411\u6240\u6709 $2$ \u90fd\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u73b0\u5728\u6211\u4eec\u80af\u5b9a\u8981\u5411\u56db\u9762\u8fde\u8fb9\uff0c\u4f46\u662f\u600e\u4e48\u624d\u80fd\u4f53\u73b0\u6211\u4eec\u7684\u5206\u5272\u5462\uff1f     \n\n\u4ee5 $1$ \u4e3a\u4f8b\uff0c\u6211\u4eec\u6b64\u65f6\u56db\u9762\u8fde\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u53ea\u6709\u53ef\u80fd\u6709 $3$ \u79cd\u60c5\u51b5\u3002\n\n- \u8fde\u8fb9\u7684\u683c\u5b50\u4e5f\u662f $1$\uff0c\u90a3\u4e48\u6b64\u65f6\u6b64\u523b\u8fd9\u6761\u8fb9\u5fc5\u7136\u4e0d\u4f1a\u88ab\u5220\u53bb\uff0c\u56e0\u4e3a\u8fd9\u5c5e\u4e8e\u65e0\u610f\u4e49\u64cd\u4f5c\uff1b   \n\n- \u8fde\u8fb9\u7684\u683c\u5b50\u662f $0$ \uff0c\u90a3\u4e48\u6b64\u65f6\u6b64\u523b\u8fd9\u6761\u8fb9\u6709\u53ef\u80fd\u4f1a\u88ab\u5220\u53bb\uff0c\u6700\u540e\u54ea\u4e2a\u70b9\u96c6\u62ff\u5230\u5b83\u5c31\u5728\u54ea\u91cc\u4fee\u6805\u680f\u5457\uff1b   \n\n- \u8fde\u8fb9\u7684\u683c\u5b50\u662f $2$ \uff0c\u90a3\u4e48\u6b64\u65f6\u6b64\u523b\u4e00\u5b9a\u4f1a\u88ab\u5220\u53bb\u3002   \n\n\u6240\u4ee5\u8bf4\u7f51\u7edc\u6d41\u5206\u7c7b\u8ba8\u8bba\u7684\u5176\u5b9e\u5c31\u662f\u8fde\u5411 $0$ \u7684\u8fb9\u7684\u5f52\u5c5e\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u8981\u627e\u5230\u6700\u5c0f\u600e\u4e48\u5272 $0$ \u8fb9\u5373\u53ef\u3002     \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int Len = 100 * 100 * 5 + 10,Inf = 1e9;\nint n,m,dep[Len],S,T,cur[Len],a[105][105],head[Len],cnt = 1,ans,sum;\nstruct node\n{\n\tint next,to,w;\n}edge[Len << 1];\nvoid add(int from,int to,int w)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].w = w;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nint BFS()\n{\n\tqueue<int> q;\n\tmemset(dep , 0 , sizeof dep);\n\tq.push(S);dep[S] = 1;cur[S] = head[S];\n\twhile(!q.empty())\n\t{\n\t\tint p = q.front() ; q.pop();\n\t\tfor(int e = head[p] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(!dep[to] && edge[e].w)\n\t\t\t{\n\t\t\t\tdep[to] = dep[p] + 1;\n\t\t\t\tcur[to] = head[to];\n\t\t\t\tif(to == T) return dep[T];\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int u,int In)\n{\n\tif(u == T) return In;\n\tint Out = 0;\n\tfor(int e = cur[u] ; e && In > 0 ; e = edge[e].next)\n\t{\n\t\tcur[u] = e;\n\t\tint to = edge[e].to;\n\t\tif(edge[e].w && dep[to] == dep[u] + 1)\n\t\t{\n\t\t\tint res = dfs(to , min(In , edge[e].w));\n\t\t\tIn -= res;\n\t\t\tOut += res;\n\t\t\tedge[e].w -= res;\n\t\t\tedge[e ^ 1].w += res;\n\t\t}\n\t}\n\treturn (!Out) ? dep[u] = 0 : Out;\n}\nint Clone(int x,int y){return (x - 1) * m + y;}\nint dx[8] = {0 , -1 , 0 , 0 , 1};\nint dy[8] = {0 , 0 , -1 , 1 , 0};\nbool judge(int x,int y){if(x < 1 || x > n || y < 1 || y > m) return false;return true;}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tS = 0 , T = n * m + 1;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= m ; j ++) scanf(\"%d\",&a[i][j]);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfor(int j = 1 ; j <= m ; j ++)\n\t\t{\n\t\t\tif(a[i][j] == 1) add(S , Clone(i , j) , Inf) , add(Clone(i , j) , S , 0);\n\t\t\telse if(a[i][j] == 2) add(Clone(i , j) , T , Inf) , add(T , Clone(i , j) , 0);\n\t\t\tfor(int k = 1 ; k <= 4 ; k ++)\n\t\t\t{\n\t\t\t\tint tx = i + dx[k] , ty = j + dy[k];\n\t\t\t\tif(!judge(tx , ty)) continue;\n\t\t\t\tadd(Clone(i , j) , Clone(tx , ty) , 1) , add(Clone(tx ,  ty) , Clone(i , j) , 1);\n\t\t\t}\n\t\t}\n\twhile(BFS()) ans += dfs(S , Inf);\n\tprintf(\"%d\\n\",ans / 2);\n\treturn 0;\n}\n```",
        "postTime": 1609167821,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": " _\u624d\u5b66\u7684\u6700\u5927\u6d41\u6700\u5c0f\u5272\u4eca\u5929\u5c31\u6765\u8bd5\u8bd5\u516b_\n \n \u8fd9\u7bc7\u9898\u89e3\u8c28\u732e\u7ed9\u50cf\u6211\u4e00\u6837\u61f5\u61f5\u61c2\u61c2\u7684\u4ebaXD\n \n###  \u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\n\n\u7f51\u7edc\u4e2d\u7684\u6700\u5c0f\u5272\u5c31\u662f\u6700\u5927\u6d41\n\n\u8bc1\u660e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff08\u4f46\u6211\u4e0d\u4f1a\u4e25\u8c28\u7684\uff09\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u6700\u5927\u6d41\u4e00\u5b9a\u6709\u4e00\u4e9b\u8fb9\u662f\u6ee1\u7684\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u8fb9\u5272\u4e86\u5b83\u5c31\u6d41\u4e0d\u6210\u4e86\u3002\u5bf9\u4e8e\u5176\u4ed6\u7684\u8fb9\uff0c\u8981\u4e48\u4e0d\u662f\u5fc5\u7ecf\u4e4b\u8def\uff0c\u8981\u4e48\u8fb9\u6743\u4e0d\u6bd4\u540c\u4e00\u6761\u6d41\u4e0a\u7684\u6700\u5927\u6d41\u7684\u8fb9\u5c0f\uff0c\u6240\u4ee5~~\u5f97\u8bc1~~\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u7684\u8bdd\u5176\u4ed6\u524d\u8f88\u5df2\u7ecf\u8bb2\u5f97\u5f88\u597d\u4e86\uff0c\u5373\u6c42\u6cd5\u5c31\u662f\n\n1. \u5c06\u6240\u6709\u72fc\u8fde\u5230\u539f\u70b9\uff0c\u8fb9\u6743INF\n1. \u5c06\u6240\u6709\u7f8a\u8fde\u5230\u6c47\u70b9\uff0c\u8fb9\u6743INF\n1. \u5c06\u6240\u6709\u70b9\u7684\u56db\u5468\u52a0\u8fb9\uff0c\u8fb9\u6743\u4e3a1\n\n\u8fd9\u662f\u4e00\u4e2a\u5bf9\u5076\u56fe\u7684\u601d\u60f3\uff0c\u76f8\u5f53\u4e8e\u7ec4\u6210\u4e86\u4e00\u4e2a\u7f51\u7edc\uff0c\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\uff0c\u53ea\u8981\u70b9\u4e0e\u70b9\u4e4b\u95f4\u6709\u8fb9\u76f8\u8fde\u5c31\u76f8\u5f53\u4e8e\u4e4b\u95f4\u6ca1\u6709\u6805\u680f\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u662f\u5168\u90e8\u8fde\u63a5\u7684\u3002\u6211\u4eec\u8981\u505a\u7684\uff0c\u5c31\u662f~~\u780c\u6805\u680f~~\u628a\u4e00\u4e9b\u8fb9\u65ad\u6389\uff0c\u4f7f\u72fc\u548c\u7f8a\u5206\u79bb\u3002\u56e0\u4e3a\u6240\u6709\u72fc\u548c\u6240\u6709\u7f8a\u90fd\u8fde\u5728\u539f\u70b9\u548c\u6c47\u70b9\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u6c42\u6700\u5c0f\u5272\u4e86\u3002\n\n\uff08\u4e0d\u77e5\u9053\u8bb2\u6e05\u695a\u6ca1\u6709\uff09\n\n\u524d\u9762\u4e24\u4e2a\u5927\u5bb6\u5e94\u8be5\u90fd\u6e05\u695a\uff0c\u8fb9\u6743INF\u76f8\u5f53\u4e8e\u6ca1\u6709\u5f71\u54cd\u53ea\u662f\u628a\u6240\u6709\u72fc/\u7f8a\u8fde\u5728\u4e00\u8d77\u7f62\u4e86\u3002\u7b2c\u4e09\u6b65\u5c31\u662f\u8fde\u8fb9\uff1a\u56e0\u4e3a\u4fee\u4e00\u4e2a\u6805\u680f\u9700\u89811\uff0c\u6240\u4ee5\u8fb9\u6743\u4e3a1\uff0c\u7b80\u76f4\u548c\u5bf9\u5076\u56fe\u4e00\u6a21\u4e00\u6837\uff08\u672c\u6765\u5c31\u662f\u4e00\u4e2a\u601d\u60f3\uff09\n\n\u6240\u4ee5\u8fd9\u91cc\u5efa\u8bae\u6ca1\u5199\u8fc7bzoj1001\u7684\u4eba\u8054\u7cfb\u4e00\u4e0b~\n\n\u540c\u6837\u7684\uff0c\u8fd9\u91cc\u7684\u96be\u5ea6\u5c31\u5728\u4e8e\u5efa\u8fb9\uff0c\u5efa\u5b8c\u6c42\u6700\u5927\u6d41\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u6570\u7ec4\u7684\u5927\u5c0f\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cctype>\n#include<utility>\n#include<queue>\nusing namespace std;\ninline int read()\n{\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=100005,INF=0x3f3f3f3f;\n\tint n,m;\n\tint mapp[105][105];\n\tint ecnt=1,head[maxn],t[maxn<<1],nxt[maxn<<1],val[maxn<<1];\n\tinline void addedge(int from,int to, int dis)\n\t{\n\t\tt[++ecnt]=to;val[ecnt]=dis;nxt[ecnt]=head[from];head[from]=ecnt;\n\t\tt[++ecnt]=from;val[ecnt]=0;nxt[ecnt]=head[to];head[to]=ecnt;\n\t}\n\tint fx[]={0,1,0,-1},fy[]={1,0,-1,0};\n\tint cnt;\n\tint dep[maxn],start,end,cur[maxn];\n\tinline bool BFS()\n\t{\n\t\tqueue<int> q;\n\t\tfor(int i=1;i<=cnt;i++)dep[i]=-1,cur[i]=head[i];\n\t\tdep[start]=0;\n\t\tq.push(start);\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=head[u];i;i=nxt[i])\n\t\t\t\tif(val[i] and dep[t[i]]==-1)\n\t\t\t\t\tdep[t[i]]=dep[u]+1,q.push(t[i]);\n\t\t}\n\t\tif(dep[end]==-1)return 0;\n\t\treturn 1;\n\t}\n\t\n\tint DFS(int x,int flow)\n\t{\n\t\tif(x==end)return flow;\n\t\tint used=0;\n\t\tfor(int i=cur[x];i;i=nxt[i])\n\t\t{\n\t\t\tcur[x]=i;\n\t\t\tint u=t[i];\n\t\t\tif(val[i] and dep[u]==dep[x]+1)\n\t\t\t{\n\t\t\t\tint w=DFS(u,min(val[i],flow-used));\n\t\t\t\tused+=w;\n\t\t\t\tval[i]-=w;\n\t\t\t\tval[i^1]+=w;\n\t\t\t\tif(used==flow)return flow;\n\t\t\t}\n\t\t}\n\t\tif(!used)dep[x]=-1;\n\t\treturn used;\n\t}\n\tinline void build()\n\t{\n\t\tn=read(),m=read();\n\t\tcnt=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tmapp[i][j]=++cnt;\n\t\tstart=++cnt,end=++cnt;\n\t\tfor(int zp,i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tif((zp=read())==1)addedge(start,mapp[i][j],INF);\n\t\t\t\telse if(zp==2)addedge(mapp[i][j],end,INF);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\t{\n\t\t\t\t\tint xx=i+fx[k],yy=j+fy[k];\n\t\t\t\t\tif(xx<1 or xx>n or yy<1 or yy>m)continue;\n\t\t\t\t\taddedge(mapp[i][j],mapp[xx][yy],1);\n\t\t\t\t}\n\t}\n\tinline void work()\n\t{\n\t\tbuild();\n\t\tint ans=0;\n\t\twhile(BFS())ans+=DFS(start,INF);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\nint main()\n{\n\tstar::work();\n\treturn 0;\n}\n```\n",
        "postTime": 1595039595,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u4eca\u5929\u4e0a\u8bfe\u5c06\u7f51\u7edc\u6d41\u4f8b\u9898\uff0c\u96be\u5f97\u7684\u60f3\u51fa\u600e\u4e48\u5efa\u56fe\u7684\u51e0\u4e2a\u9898\u4e4b\u4e00\u3002\u3002\n\n# \u9898\u9762\n\n[\u9898\u9762](luogu.org/problem/P2598)\n\n# Solution\n\n\u56e0\u4e3a\u53ea\u6709\u7f8a\u548c\u72fc\u4e24\u79cd\u751f\u7269\uff0c\u4e14\u4e0d\u80fd\u5206\u5230\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u5efa\u7acb\u4e8c\u5206\u56fe\u3002\u800c\u6211\u4eec\u8981\u7528\u6700\u5c11\u7684\u7bf1\u7b06\uff0c\u5c06\u72fc\u548c\u7f8a\u5206\u5f00\uff0c\u8003\u8651\u6700\u5c0f\u5272\u3002\n\n\u865a\u62df\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u8fde\u5411\u6240\u6709\u662f\u72fc\u7684\u683c\u5b50\uff0c\u6d41\u91cf\u4e3a $INF$ \uff0c\u8868\u793a\u8fd9\u4e2a\u8fb9\u4e0d\u80fd\u5272\u3002\n\n\u865a\u62df\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u5c06\u6240\u6709\u662f\u7f8a\u7684\u683c\u5b50\u8fde\u5411\u5b83\uff0c\u6d41\u91cf\u4e3a $INF$ \uff0c\u7406\u7531\u540c\u4e0a\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50\uff0c\u5411\u4ed6\u7684\u56db\u5468\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u8868\u793a\u5728\u8fd9\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u4fee\u4e00\u4e2a\u7bf1\u7b06\uff0c\u8d39\u7528\u4e3a $1$ \u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u90fd\u662f\u72fc\u6216\u8005\u90fd\u662f\u7f8a\uff0c\u5c31\u4e0d\u7528\u8fde\u4e86\uff0c\u56e0\u4e3a\u6ca1\u5fc5\u8981\u5728\u8fd9\u91cc\u4fee\u7bf1\u7b06\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u5272\uff0c\u6bcf\u6761\u5272\u8fb9\u8868\u793a\u5728\u8fd9\u91cc\u4fee\u4e00\u4e2a\u7bf1\u7b06\u3002\n\n\u6b63\u786e\u6027\uff1a\u5bf9\u4e8e\u6240\u6709\u7684\u72fc\u3001\u7f8a\uff0c\u90fd\u662f\u8fde\u7740\u6e90\u70b9\u3001\u6c47\u70b9\u7684\uff0c\u6d41\u91cf\u4e3a $INF$ \uff0c\u4e00\u5b9a\u4e0d\u4f1a\u5272\u8fd9\u4e9b\u8fb9\uff0c\u800c\u72fc\u548c\u7f8a\u3001\u7a7a\u683c\u5b50\u8fde\u8fb9\u4ee3\u8868\u7bf1\u7b06\uff0c\u8fd9\u4e2a\u56fe\u7684\u6700\u5c0f\u5272\u96c6\u4f7f\u5f97\u8be5\u56fe\u5206\u4e3a\u53ea\u542b\u72fc\u3001\u53ea\u542b\u7f8a\u7684\u4e24\u4e2a\u96c6\u5408\uff0c\u4e5f\u5c31\u6ee1\u8db3\u4e86\u9898\u610f\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(res*bas)%mod;\n\t\tbas=(bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 105;\nint n,m,s,t,val[MAXN][MAXN],cur[MAXN*MAXN],head[MAXN*MAXN],num_edge=-1,dis[MAXN*MAXN];\nstruct Edge{\n\tint next,to,w;\n\tEdge(){}\n\tEdge(int next,int to,int w):next(next),to(to),w(w){}\n}edge[MAXN*MAXN*9];\nil add_edge(int u,int v,int w){\n\tedge[++num_edge]=Edge(head[u],v,w),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u,0),head[v]=num_edge;\n}\ninl bool BFS(int s,int t){\n\tdel(dis,0),dis[s]=1;\n\tqueue<int> q;q.push(s);\n\twhile(!q.empty()){\n\t\tri pos=q.front();q.pop();\n\t\tfor(ri i=head[pos];i!=-1;i=edge[i].next)\n\t\t\tif(!dis[edge[i].to]&&edge[i].w>0){\n\t\t\t\tdis[edge[i].to]=dis[pos]+1;\n\t\t\t\tif(edge[i].to==t) return true;\n\t\t\t\tq.push(edge[i].to);\n\t\t\t}\n\t}\n\treturn false;\n}\nit DFS(int now,int t,int flow){\n\tif(now==t) return flow;\n\tri s=0,k;\n\tfor(ri &i=cur[now];i!=-1;i=edge[i].next)\n\t\tif(dis[edge[i].to]==dis[now]+1&&edge[i].w>0){\n\t\t\tk=DFS(edge[i].to,t,min(flow-s,edge[i].w));\n\t\t\ts+=k,edge[i].w-=k,edge[i^1].w+=k;\n\t\t\tif(s==flow) break;\n\t\t}\n\tif(s==0) dis[now]=0;\n\treturn s;\n}\nit Dinic(int s,int t){\n\tri res=0;\n\twhile(BFS(s,t)){\n\t\tmemcpy(cur,head,sizeof(head));\n\t\tres+=DFS(s,t,INF);\n\t}\n\treturn res;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m),del(head,-1),t=n*m+1;\n\tfor(ri i=1;i<=n;++i)\n\t\tfor(ri j=1;j<=m;++j)\n\t\t\tread(val[i][j]);\n\tfor(ri i=1;i<=n;++i)\n\t\tfor(ri j=1;j<=m;++j){\n\t\t\tif(val[i][j]==1) add_edge(s,(i-1)*m+j,INF);\n\t\t\tif(val[i][j]==2) add_edge((i-1)*m+j,t,INF);\n\t\t\tif(i!=1&&(val[i][j]!=val[i-1][j]||!val[i][j])) add_edge((i-1)*m+j,(i-2)*m+j,1);\n\t\t\tif(i!=n&&(val[i][j]!=val[i+1][j]||!val[i][j])) add_edge((i-1)*m+j,i*m+j,1);\n\t\t\tif(j!=1&&(val[i][j]!=val[i][j-1]||!val[i][j])) add_edge((i-1)*m+j,(i-1)*m+j-1,1);\n\t\t\tif(j!=m&&(val[i][j]!=val[i][j+1]||!val[i][j])) add_edge((i-1)*m+j,(i-1)*m+j+1,1);\n\t\t}\n\tprintf(\"%d\",Dinic(s,t));\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u6700\u5c0f\u5272\u7684\u9898\u5427\uff0c\u5efa\u56fe\u6bd4\u8f83\u660e\u663e\uff0c\u770b\u5230\u4e24\u79cd\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4e0d\u80fd\u5206\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u5f80\u8fd9\u65b9\u9762\u8054\u60f3\u4e00\u4e0b\u3002",
        "postTime": 1566307909,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P2598 [ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b \u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684\u6700\u5c0f\u5272\n\n\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u539f\u56fe\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u6c47\u70b9\n\n\u7136\u540e\n\n\u6e90\u70b9\u5411\u6240\u6709\u72fc\u8fde\u6d41\u91cf oo \u7684\u8fb9\n\n\u6240\u6709\u7f8a\u5411\u6c47\u70b9\u8fde\u6d41\u91cf oo \u7684\u8fb9\n\n\u6240\u6709\u70b9\u5411\u56db\u5468\u80fd\u5230\u8fbe\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\n\n\u7136\u540e\u4e00\u8fb9\u6700\u5c0f\u5272\u5373\u53ef\n\n\u6211\u5199\u7684\u662fdinic\n\n\uff08\u5176\u5b9e\u5c31\u662f\u6700\u5927\u6d41\uff09\n\n\u7136\u540e\u5c31\u77ac\u95f4A\u9898\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 50005, M = N << 4, inf = 1 << 30;\nconst int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nint to[M], nxt[M], len[M], inv[M], fir[N], cur[N], lev[N], q[N], a[205][205];\nint S, T, ecnt;\nbool vis[N];\nvoid ae(int u, int v, int w) {\n    to[++ecnt] = v; nxt[ecnt] = fir[u]; len[ecnt] = w; inv[ecnt] = ecnt + 1; fir[u] = ecnt;\n    to[++ecnt] = u; nxt[ecnt] = fir[v]; len[ecnt] = 0; inv[ecnt] = ecnt - 1; fir[v] = ecnt;\n}\nbool make_level() {\n    int l, r, u, v, w, i;\n    memset(vis, false, sizeof(vis));\n    for (i = S; i <= T; ++i) cur[i] = fir[i];\n    q[l = r = 1] = S; lev[S] = 1; vis[S] = true;\n    while (l <= r) {\n        u = q[l++];\n        for (i = fir[u]; i; i = nxt[i]) {\n            v = to[i]; w = len[i];\n            if (w && !vis[v]) {\n                lev[v] = lev[u] + 1;\n                vis[q[++r] = v] = true;\n            }\n        }\n    }\n    return vis[T];\n}\nint dinic(int u, int lim) {\n    if (u == T) return lim;\n    int tmp, ret = 0, v, w, i;\n    for (i = cur[u]; i; i = nxt[i]) {\n        v = to[i]; w = len[i];\n        if (w && lev[v] == lev[u] + 1) {\n            tmp = dinic(v, min(w, lim));\n            len[i] -= tmp; len[inv[i]] += tmp;\n            ret += tmp; lim -= tmp;\n            if (!lim) {cur[u] = i; return ret;}\n        }\n    }\n    cur[u] = 0; return ret;\n}\nint main() {\n    int n, m, i, j, k, x, y, ans = 0;\n    scanf(\"%d%d\", &n, &m);\n    S = 0; T = n * m + 1;\n    for (i = 1; i <= n; ++i)\n        for (j = 1; j <= m; ++j) scanf(\"%d\", &a[i][j]);\n    for (i = 1; i <= n; ++i)\n        for (j = 1; j <= m; ++j) {\n            if (a[i][j] == 1) ae(S, (i - 1) * m + j, inf);\n            if (a[i][j] == 2) ae((i - 1) * m + j, T, inf);\n        }\n    for (i = 1; i <= n; ++i)\n        for (j = 1; j <= m; ++j)\n            for (k = 0; k < 4; ++k) {\n                x = i + dx[k]; y = j + dy[k];\n                if (x > 0 && x <= n && y > 0 && y <= m) ae((i - 1) * m + j, (x - 1) * m + y, 1);\n            }\n    while (make_level()) ans += dinic(S, inf);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1552129103,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "\u5f53\u4e00\u4e2a\u7f8a\u8eab\u8fb9\u6709\u72fc\u65f6\u4ea7\u751f\u8d21\u732e,\u6700\u591a\u53ea\u6709\u56db\u5468\u3002\n\n- \u6240\u6709\u6e90\u70b9\u8fde\u72fc,\u4ee3\u8868\u8fd9\u4e9b\u72fc\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\u3002\n\n- \u6240\u6709\u5730\u8fde\u56db\u5468,\u4ee3\u8868\u72fc\u53ef\u4ee5\u5bf9\u4e00\u5b9a\u5730\u7406\u4f4d\u7f6e\u7684\u7f8a\u4ea7\u751f\u8d21\u732e\u3002\n\n- \u6240\u6709\u7f8a\u8fde\u6c47\u70b9,\u4ee3\u8868\u56de\u6536\u8d21\u732e\u3002\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\n\nvar\n    value,reach,next,from:array[-1..210000] of longint;\n    id,matrix:array[-1..101,-1..101] of longint;\n    gap,dis,cnt:array[-1..810000] of longint;\n    n,m,l,r,k,i,j,num,tot,sink,source,maxflow:longint;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot); from[tot]:=l; reach[tot]:=r; value[tot]:=sum; next[tot]:=cnt[l]; cnt[l]:=tot;\n    inc(tot); from[tot]:=r; reach[tot]:=l; value[tot]:=8-8; next[tot]:=cnt[r]; cnt[r]:=tot;\nend;\n\nfunction Dfs(now,flow:longint):longint;\nvar i,k,mindis,ret:longint;\nbegin\n    mindis:=n-1; ret:=flow;\n    if now=sink then exit(flow);\n    i:=cnt[now];\n    while i<>-1 do\n    begin\n        if value[i]>0 then\n        begin\n            if dis[now]=dis[reach[i]]+1 then\n            begin\n                k:=Dfs(reach[i],min(ret,value[i]));\n                dec(value[i],k);inc(value[i xor 1],k);\n                dec(ret,k);\n                if dis[source]>=n then exit(flow-ret);\n                if ret=0 then break;\n            end;\n             mindis:=min(mindis,dis[reach[i]]);\n        end;\n        i:=next[i];\n    end;\n    if ret=flow then\n    begin\n        dec(gap[dis[now]]);\n        if gap[dis[now]]=0 then dis[source]:=n;\n        dis[now]:=mindis+1;\n        inc(gap[dis[now]]);\n    end;\n    exit(flow-ret);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1); tot:=1;\n    read(n,m); source:=1; sink:=n*m+2; num:=1;\n    for i:=1 to n do for j:=1 to m do\n    begin\n    \tinc(num); id[i,j]:=num;\n    \tread(matrix[i,j]);\n    end;\n    for i:=1 to n do for j:=1 to m do\n    begin\n    \tif matrix[i,j]=1 then add(id[i,j],sink,maxlongint div 843);\n    \tif matrix[i,j]=2 then add(source,id[i,j],maxlongint div 843);\n        if (i-1>0) then add(id[i,j],id[i-1,j],1);\n        if (i+1<=n) then add(id[i,j],id[i+1,j],1);\n    \tif (j-1>0) then add(id[i,j],id[i,j-1],1);\n    \tif (j+1<=m) then add(id[i,j],id[i,j+1],1);\n    end;\n    n:=sink+1; gap[source]:=n;\n    while dis[source]<n do inc(maxflow,Dfs(source,maxlongint));\n    writeln(maxflow);\nend.\n```",
        "postTime": 1544861895,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "//\u672c\u849f\u84bb\u535a\u5ba2\u7684\u540c\u6b65\u9605\u8bfb\uff1a[Newuser\u5c0f\u7ad9\uff01](http://www.newuser.top/2018/04/14/%e3%80%90zjoi2009%e7%8b%bc%e5%92%8c%e7%be%8a%e7%9a%84%e6%95%85%e4%ba%8b%e3%80%91%e6%9c%80%e5%a4%a7%e6%b5%81%e6%9c%80%e5%b0%8f%e5%89%b2/)\n\n\u5176\u5b9e\u8fd9\u662f\u4e00\u9053UVA1515\u7684\u7b80\u5316\u7248\uff0cluogu\u4f20\u9001\u95e8https://www.luogu.org/problemnew/show/UVA1515\n\u7ffb\u8bd1\u5728\u8fd9\u9053\u9898\u8ba8\u8bba\u533a\u91cc\u9762\uff0c\u539f\u7248\u672c\u91cc\u9762\u9664\u4e86\u5212\u5206\u4ee5\u5916\u8fd8\u6709\u4fee\u6539\u5730\u76d8\u64cd\u4f5c\uff0c\u4f46\u7a0d\u52a0\u601d\u7d22\u4e5f\u5e76\u4e0d\u96be\uff0c\u770b\u5411\u672c\u9898\u3002\n\n\u8fd9\u9053\u9898\u5f88\u663e\u7136\u7684\u4e00\u9053\u6700\u5927\u6d41\u6700\u5c0f\u5272\u677f\u5b50\u9898\u3002\u6211\u4eec\u6700\u540e\u5c31\u662f\u6c42\u5c06\u7f8a\u548c\u72fc\u5272\u6210\u4e24\u5757\u7684\u6700\u5c0f\u5272\uff0c\u76f4\u63a5S\u8fde\u6240\u6709\u7684\u7f8a\uff0c\u72fc\u8fde\u6240\u6709\u7684T\uff0c\u5bb9\u91cf\u4e3ainf\uff0c\u7136\u540e\u5c06\u7f8a\u4e0e\u72fc\u8fde\u63a5\uff0c\u5bb9\u91cf\u4e3a1\u5c31\u597d\u5566\uff01\n\n\u503c\u5f97\u659f\u914c\u7684\u662f\u91cc\u9762\u76840.\u7a0d\u52a0\u601d\u7d22\u4e4b\u540e\uff0c\u6211\u4eec\u628a0\u5f53\u505a\u7f8a\u6765\u8fde\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u770b\u7f8a\u7684\u8fde\u8fb9\u5373\u662f\u8fde\u54110\u548c\u72fc\uff0c\u800c0\u7684\u8fde\u8fb9\u4e5f\u662f\u8fde\u54110\u548c\u72fc\uff0c\u4f460\u4e0d\u4e0eS\u76f8\u8fde\uff0c\u5bb9\u91cf\u8fd9\u91cc\u90fd\u4e3a1\u3002\n\n\u5927\u81f4\u6700\u540e\u7684\u56fe\u662f \uff1a   S-\u300b\u7f8a-\u300b0-\u300b\u72fc-\u300bT\n\n\u641e\u5b9a\uff01\n\n```cpp\n//S->yang-0-> lang ->T\t \n#include<bits/stdc++.h>\n#define id(x,y) ((x-1)*m+y)\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nint n,m,S,T;\nint dx[4]={0,0,-1,1};\nint dy[4]={1,-1,0,0};\nint tu[105][105];\nint la[10005],nt[100005],en[100005],v[100005],owo=1;\nvoid addedge(int a,int b,int c)\n{\n\ten[++owo]=b; nt[owo]=la[a]; la[a]=owo; v[owo]=c;\n}\nint dis[10005],cnt[10005];\nint sap(int x,int flow)\n{\n\tif(x==T) return flow;\n\tint dlt=0,tmp;\n\tfor(int it=la[x];it;it=nt[it])\n\t{\n\t\tif(v[it]&&dis[x]==dis[en[it]]+1)\n\t\t{\n\t\t\ttmp=sap(en[it],min(flow-dlt,v[it]));\n\t\t\tdlt+=tmp;\n\t\t\tv[it]-=tmp;\n\t\t\tv[it^1]+=tmp;\n\t\t\tif(dlt==flow||dis[S]>=n*m+2) return dlt;\n\t\t}\n\t}\n\tif(dis[S]>=n*m+2) return dlt;\n\tcnt[dis[x]]--;\n\tif(!cnt[dis[x]]) dis[S]=n*m+2;\n\tdis[x]++;\n\tcnt[dis[x]]++;\n\treturn dlt;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&tu[i][j]);\n\tS=n*m+1; T=n*m+2;\n\tint nx,ny;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(tu[i][j]==2)\n\t\t\t{\n\t\t\t\taddedge( id(i,j) ,T, 0x3f3f3f3f );\n\t\t\t\taddedge( T,id(i,j), 0);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(tu[i][j]==1)\n\t\t\t\t{\n\t\t\t\taddedge( S,id(i,j) ,0x3f3f3f3f );\n\t\t\t\taddedge( id(i,j),S,0);\n\t\t\t\t} \n\t\t\t\tfor(int k=0;k<4;k++)\n\t\t\t\t{\n\t\t\t\t\tnx=i+dx[k]; ny=j+dy[k];\n\t\t\t\t\tif(nx>=1&&nx<=n&&ny>=1&&ny<=m) \n\t\t\t\t\t{\n\t\t\t\t\t\tif(tu[nx][ny]==0||tu[nx][ny]==2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddedge(id(i,j),id(nx,ny),1);\n\t\t\t\t\t\t\taddedge( id(nx,ny),id(i,j),0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tint ans=0;\n\twhile(dis[S]<n*m+2)\n\t{\n\t\tans+=sap(S,0x3f3f3f3f);\n\t}\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1523715150,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79681087)\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](http://www.lydsy.com/JudgeOnline/problem.php?id=1412)\n\n\u9898\u89e3\n-\n\n\u8fd9\u9053\u9898\u8fd8\u633a\u7b80\u5355\u7684\uff1b\u8981\u6c42\u5272\u6700\u5c0f\u7684\u8fb9\u4f7f\u72fc\u548c\u7f8a\u4e24\u4e2a\u96c6\u5408\u4e92\u4e0d\u76f8\u4ea4\uff0c\u4e00\u773c\u770b\u51fa\u8fde\u8fb9\u6c42\u6700\u5c0f\u5272\uff1b\n\u600e\u4e48\u5efa\u56fe\u5462\uff1fS\u5411\u6240\u6709\u7684\u7f8a\uff0c\u6240\u6709\u7684\u72fc\u5411T\uff0c\u5bb9\u91cf\u90fd\u662finf\uff1b\u5728\u77e9\u5f62\u4e2d\u76f8\u90bb\u7684\u7f8a\u548c\u72fc\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff1b\n\u5bf9\u4e8e0\u7684\u70b9\u600e\u4e48\u5904\u7406\u5462\uff0c\u6211\u4eec\u628a\u5b83\u9ed8\u8ba4\u4e3a\u7f8a\uff0c\u7f8a\u54110, 0\u5411\u72fc\u8fde\u8fb9\u5373\u53ef\u5bb9\u91cf\u5747\u4e3a1\uff1b\n\u8fd9\u4e48\u7b80\u5355\u7684\u9898\u8fd8\u6ca1\u67091A,\u539f\u6765\u662f\u6211\u628a0\u8fde\u5411\u72fc\u7684\u8fb9\u5bb9\u91cf\u8bbe\u4e3ainf\u5c31WA\u4e86\n\n\u4ee3\u7801\n-\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int maxn=100000;\nconst int inf=1e9;\n\nint n,m,mp[101][101],maxflow;\nstruct Edge{\n\tint next,to,dis;\n}edge[maxn<<1];\nint num_edge=-1,head[maxn],cur[maxn],deep[maxn];\nint dx[5]={0,0,0,1,-1},\n\tdy[5]={0,1,-1,0,0};\n \nvoid add_edge(int from,int to,int dis)\n{\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\tedge[num_edge].dis=dis;\n\thead[from]=num_edge;\n}\nvoid add(int x,int y,int z) {add_edge(x,y,z); add_edge(y,x,0);}\nint id(int x,int y) {return (x-1)*m+y;}\nqueue <int> q;\n\nbool bfs(int s,int t)\n{\n\tmemset(deep,0x7f,sizeof(deep));\n\twhile (!q.empty()) q.pop();\n\tfor (int i=0; i<=t; i++) cur[i]=head[i];\n\tdeep[s]=0; q.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint now=q.front(); q.pop();\n\t\tfor (int i=head[now]; i!=-1; i=edge[i].next)\n\t\t{\n\t\t\tint to=edge[i].to;\n\t\t\tif (deep[to]>inf && edge[i].dis){\n\t\t\t\tdeep[to]=deep[now]+1;\n\t\t\t\tq.push(to);\n\t\t\t\tif (to==t) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn deep[t]<inf;\n}\n\nint dfs(int now,int t,int limit)\n{\n\tif (now==t || !limit) return limit;\n\tint flow=0,f;\n\tfor (int i=cur[now]; i!=-1; i=edge[i].next)\n\t{\n\t\tcur[now]=i; int to=edge[i].to;\n\t\tif (deep[to]==deep[now]+1 && (f=dfs(to,t,min(limit,edge[i].dis))))\n\t\t{\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\tedge[i].dis-=f;\n\t\t\tedge[i^1].dis+=f;\n\t\t\tif (!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nvoid Dinic(int s,int t)\n{\n\twhile (bfs(s,t)) \n\t\tmaxflow+=dfs(s,t,inf);\n}\nvoid build()\n{\n\tfor (int i=1; i<=n; i++)\n\t\tfor (int j=1; j<=m; j++)\n\t\t{\n\t\t\tif (mp[i][j]==1 || mp[i][j]==0)\n\t\t\t\tfor (int k=1; k<=4; k++)\n\t\t\t\t{\n\t\t\t\t\tint xx=i+dx[k]; int yy=j+dy[k];\n\t\t\t\t\tif (1<=xx && xx<=n && 1<=yy && yy<=m)\n\t\t\t\t\t\tif (mp[xx][yy]==2) add(id(i,j),id(xx,yy),1);\n\t\t\t\t\t\telse if (mp[xx][yy]==0) add(id(i,j),id(xx,yy),1);\n\t\t\t\t}\n\t\t}\n}\n\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d\",&n,&m);\n\tint S=0,T=n*m+1;\n\tfor (int i=1; i<=n; i++)\n\t\tfor (int j=1; j<=m; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&mp[i][j]);\n\t\t\tif (mp[i][j]==1) add(S,id(i,j),inf);\n\t\t\telse if (mp[i][j]==2) add(id(i,j),T,inf);\n\t\t}\n\tbuild();\n//\tfor (int i=0; i<=num_edge; i++) printf(\"%d: %d %d %d\\n\",i,edge[i^1].to,edge[i].to,edge[i].dis);\n\tDinic(S,T);\n\tprintf(\"%d\",maxflow);\n\treturn 0;\n}\n```",
        "postTime": 1521895691,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    },
    {
        "content": "ZJOI\u7684\u9898\u76ee\uff0c\u770b\u9898\u9762\u5e94\u8be5\u662f\u8bf4\u628a\u72fc\u548c\u7f8a\u9694\u5f00\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u72fc\u7fa4\u5e94\u8be5\u5728\u4e00\u4e2a\u70b9\u96c6\u4e2d\uff0c\u7f8a\u7fa4\u5728\u4e00\u4e2a\u70b9\u96c6\u4e2d\uff1f\n\n\u5efa\u4e00\u4e2a\u8d85\u6e90\u8d85\u6c47\uff0c\u5c31\u662f\u8981\u6c42\u4e2a\u6700\u5c0f\u5272\u5427\uff1f\n\n\u8003\u8651\u4e00\u4e0b0\u5427\uff0c\u6211\u4eec\u89c4\u5b9a\u4e00\u4e0bS->\u72fc->0->\u7f8a->T\uff0c\u5efa\u4e2a\u56fe\u8dd1\u6700\u5927\u6d41\uff0c\u6211\u6253\u7684\u662f\u975e\u9012\u5f52\u5f0f\u7684ISAP\uff08\u6bd4dinic\u5feb\u4e00\u4e22\u4e22\uff09\n\n\u60f3\u5177\u4f53\u4e86\u89e3ISAP\u7684\u53ef\u4ee5\u770b\u770b\u6d1b\u8c37P3376\u6211\u5199\u7684\u9898\u89e3\u3002\u653e\u4e2a\u94fe\u63a5\u5427\uff1ahttps://www.luogu.org/wiki/show?name=%E9%A2%98%E8%A7%A3+P3376\n\n\n\u53c2\u8003\u4ee3\u7801\uff08\u5341\u5206\u89c4\uff08luo\uff09\u8303\uff08suo\uff09\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int N=110;\nconst int M=N*N*8;\nstruct Edge{\n    int to,cap,next;\n}e[M*2];\nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\nint a[M],cur[M],num[M],d[M],fa[M];\nint b[N][N];\nint n,tn,m,S,T,EdgeCnt=0;\nqueue<int> Q;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nbool inside(int x,int y){\n    return x>0 && x<=tn && y>0 &&y<=m;\n}\nvoid addedge(int u,int v,int w){\n    int &p=EdgeCnt;\n    e[p].to=v;e[p].cap=w;e[p].next=a[u];\n    a[u]=p++;\n    e[p].to=u;e[p].cap=0;e[p].next=a[v];\n    a[v]=p++;\n}\nvoid BFS(){\n    for (int i=1;i<=n;i++)d[i]=n;\n    Q.push(T);d[T]=0;\n    while (!Q.empty()){\n        int u=Q.front();Q.pop();\n        for (int p=a[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p^1].cap && d[v]>d[u]+1){\n                d[v]=d[u]+1;\n                Q.push(v);\n            }\n        }\n    }\n}\nint Augment(){\n    int u=T,f=INF;\n    while (u!=S){\n        u=fa[u];\n        f=min(f,e[cur[u]].cap);\n    }\n    u=T;\n    while (u!=S){\n        u=fa[u];\n        e[cur[u]].cap-=f;\n        e[cur[u]^1].cap+=f;\n    }\n    return f;\n}\nint MaxFlow(){\n    memset(num,0,sizeof(num));\n    BFS();\n    for (int i=1;i<=n;i++)num[d[i]]++,cur[i]=a[i];\n    int u=S,flow=0;\n    while (d[S]<n){\n        if (u==T){\n            flow+=Augment();u=S;\n        }\n        bool done=false;\n        for (int p=cur[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p].cap && d[u]==d[v]+1){\n                done=true;cur[u]=p;fa[v]=u;u=v;\n                break;\n            }\n        }\n        if (!done){\n            int m=n-1;\n            for (int p=a[u];p!=-1;p=e[p].next){\n                int v=e[p].to;\n                if (e[p].cap)m=min(m,d[v]);\n            }\n            if (--num[d[u]]==0)break;\n            num[d[u]=m+1]++;\n            cur[u]=a[u];\n            if (u!=S)u=fa[u];\n        }\n    }\n    return flow;\n}\nint main(){\n    memset(a,0xff,sizeof(a));\n    tn=read();m=read();\n    for (int i=1;i<=tn;i++)\n        for (int j=1;j<=m;j++)\n            b[i][j]=read();\n    S=tn*m+1;T=tn*m+2;n=T;\n    for (int i=1;i<=tn;i++)\n        for (int j=1;j<=m;j++)\n            if (b[i][j]==2){\n                for (int k=0;k<4;k++){\n                    int nx=i+dx[k],ny=j+dy[k];\n                    if (inside(nx,ny) && b[nx][ny]<2)\n                        addedge(m*(i-1)+j,m*(nx-1)+ny,1);\n                }\n                addedge(S,m*(i-1)+j,INF);\n            }else if (!b[i][j]){\n                for (int k=0;k<4;k++){\n                    int nx=i+dx[k],ny=j+dy[k];\n                    if (inside(nx,ny) && b[nx][ny]<2)\n                        addedge(m*(i-1)+j,m*(nx-1)+ny,1);\n                }\n            }else addedge(m*(i-1)+j,T,INF);\n    printf(\"%d\",MaxFlow());\n    return 0;\n}\n```",
        "postTime": 1503632633,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2598 \u3010[ZJOI2009]\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u3011"
    }
]