[
    {
        "content": "\u7b97\u6cd51\uff1a\n\n\u9898\u9762\u4e2d\u6709\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5178\u578b\u7684\u4e8c\u5206\uff01\u9996\u5148\u4e8c\u5206\u8fb9\u6743\uff0c\u7136\u540e\u628a\u8fb9\u6743\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u5206\u7684\u8fb9\u6743\u7684\u8fb9\u5168\u90e8\u7528\u5e76\u67e5\u96c6\u8fde\u63a5\u5230\u4e00\u8d77\uff0c\u5224\u65ad\u662f\u5426\u8054\u901a\u5373\u53ef\u3002\n\n\n\u7b97\u6cd52\uff1a\n\n\u672c\u9898\u8981\u6c42\u6c42\u7684\u5c31\u662f\u74f6\u9888MST\uff0c\u5373\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002\u6709\u4e2a\u5b9a\u7406\uff1a\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u5fc5\u5b9a\u662f\u4e00\u68f5\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u505a\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\u5373\u53ef\n",
        "postTime": 1445521613,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u628a\u4ea4\u53c9\u8def\u53e3\u770b\u505a\u56fe\u4e2d\u7684\u70b9\uff0c\u9053\u8def\u4e3a\u8fb9\uff0c\u5219\u53ef\u4ee5\u4ece\u4e09\u4e2a\u6761\u4ef6\uff1a\n\n\n1\uff0e\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u80fd\u591f\u628a\u6240\u6709\u7684\u4ea4\u53c9\u8def\u53e3\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8fde\u901a\u8d77\u6765\u3002\n\n\n2\uff0e\u5728\u6ee1\u8db3\u8981\u6c421\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u9053\u8def\u5c3d\u91cf\u5c11\u3002\n\n\n3\uff0e\u5728\u6ee1\u8db3\u8981\u6c421\u30012\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u4e2d\u5206\u503c\u6700\u5927\u7684\u9053\u8def\u5206\u503c\u5c3d\u91cf\u5c0f\u3002\n\n\n\u53ef\u5f97\uff0c\u672c\u9898\u662f\u4e00\u4e2a\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u7b2c\u4e00\u95ee\u6c42\u9009\u62e9\u7684\u9053\u8def\u6570\uff0c\u56e0\u4e3a\u53ea\u6709\u201c\u4fdd\u8bc1\u8054\u901a\u201d\u4e00\u4e2a\u6761\u4ef6\u4f18\u5148\u7ea7\u5728\u201c\u9053\u8def\u5c3d\u91cf\u5c11\u201d\u4e4b\u4e0a\uff0c\u4e0d\u96be\u770b\u51fa\u76f4\u63a5\u8f93\u51fan-1\u5373\u53ef\u3002\uff08\u4e00\u4e2aN\u4e2a\u70b9\u7684\u8054\u901a\u56fe\u6700\u5c11\u6709n-1\u6761\u8fb9\uff09\uff1b\n\n\u7b2c\u4e8c\u95ee\u76f4\u63a5\u5728\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u540c\u65f6\uff0c\u8bb0\u5f55\u4e0b\u5f53\u524d\u5df2\u641c\u5230\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u7531\u4e8e\u6b64\u9898\u672a\u8981\u6c42\u8f93\u51fa\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u548c\uff0c\u56e0\u6b64\u5728\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u53ea\u8bb0\u5f55\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u5e38\u7528\u65b9\u6cd5\uff1aprim\u548c\u514b\u9c81\u65af\u5361\u5c14(\u5229\u7528\u5e76\u67e5\u96c6)\u3002\n\n\u6b64\u9898\u7528\u514b\u9c81\u65af\u5361\u5c14\u66f4\u4f18\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u6761\u4ef63\uff0c\u4e0d\u8fc7\u8c8c\u4f3cprim\u4e5f\u80fd\u8fc7~\n\nc++\u4ee3\u7801\n\n\nprim:\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint g[310][310];\nint n,m,a,b,c,minn[310],mmax=-1;\nbool u[310];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        g[a][b]=c;\n        g[b][a]=c;\n    }\n    memset(minn,0x7f,sizeof(minn));    \n    minn[1]=0;\n    memset(u,1,sizeof(u));\n    for(int i=1;i<=n;++i){\n        int k=0;\n        for(int j=1;j<=n;j++)\n            if(u[j]&&(minn[j]<minn[k]))\n                k=j;\n        u[k]=0;\n        for(int j=1;j<=n;j++)\n            if(u[j] && g[k][j]!=0 && g[k][j]<minn[j])\n                minn[j]=g[k][j];\n    }\n    for(int i=1;i<=n;++i){\n        if(minn[i]>mmax)\n            mmax=minn[i];\n    }\n    printf(\"%d %d\",n-1,mmax);\n    return 0;\n}\n```\n\u514b\u9c81\u65af\u5361\u5c14\uff1a\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint m, n, u, v, c, maxn, k;\nint fa[301];\nint find(int x) {\n    if(fa[x]!=x) \n        fa[x]=find(fa[x]);\n    return fa[x];\n}\nvoid unionn(int x,int y) {\n    int fx = find(x);\n    int fy = find(y);\n    if (fx != fy) fa[fx]=fy;\n}\nstruct Node {\n    int x, y, v;\n    bool operator < (const Node &b) const {\n        return v<b.v;\n    }\n}a[51000];\nint main() {\n    cin >> n >> m;\n    for (int i=1; i<=m; i++) {\n        cin >> u >> v >> c;\n        a[i]=(Node){u, v, c};\n    }\n    for (int i=1; i<=n; i++) fa[i]=i;\n    sort(a+1,a+m+1);\n    for (int i=1; i<=m; i++) {\n        if (find(fa[a[i].x]) != find(fa[a[i].y])) {\n            unionn(a[i].x, a[i].y);\n            maxn = a[i].v;\n            k++;\n        }\n        if (k == n-1) break;\n    }\n    cout<< n-1 << \" \" <<maxn; \n    return 0;\n}\n```",
        "postTime": 1491789315,
        "uid": 7869,
        "name": "\u5f20\u4f73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "   \u770b\u4e86\u6b64\u9898\u5982\u679c\u4e0d\u662f\u5bf9kruskal\u719f\u6089\u5e76\u4e14\u672a**\u8ba4\u771f\u8bfb\u9898**\u7684OIer\u7684\u7b2c\u4e00\u611f\u89c9\u5c31\u662f**\u6700\u7b26\u5408\u4eba\u7c7b\u601d\u60f3**\u7684**Floyd\u7b97\u6cd5**\uff0c\u4f46\u662f\u5f88\u4e0d\u5e78\u8fd8\u771f\u4e0d\u662f\u5b83\uff0c\u800c\u662f\u90a3\u4e2a\u5b83\u3002\u4e14\u542c\u6211\u5a13\u5a13\u9053\u6765\u3002\n   \n   ~~kruskal\u4e2d\u6587\u8bd1\u4e3a\u514b\u9c81\u65af\u5361\u5c14\uff0c\u4e0d\u5bf9\u626f\u8fdc\u4e86~~\n   \n   \u514b\u9c81\u65af\u5361\u5c14\u7684\u7cbe\u9ad3\u4e09\u4e2a\u5b57\u2014\u2014 _\u5e76\u67e5\u96c6_ \uff08\u67e5\u627e and \u5408\u5e76\uff09\uff1b\n   \n\n------------\n\n   First\uff1a\u8bbe\u5b9a\u4e00\u4e2a\u7236\u4eb2\u6570\u7ec4\u5373fa[N] \uff08\u6b64\u5904N\u4e3a\u4e00\u4e2a\u5e38\u6570\u4e0b\u6587\u540c\u6837\uff09\n   \n   Second\uff1a\u521d\u59cb\u5316\u7236\u4eb2\u6570\u7ec4  \n   ```cpp for(inti=1;i<=n;i++)fa[i]=i;```\n \n  \n   Third:\u81ea\u5b9a\u4e49find\uff08\u67e5\u627e\uff09\u4e0e\u5408\u5e76\u51fd\u6570\n  ```cpp\nint find(int x)\n{\n\tif(x!=fa[x])  fa[x]=find(fa[x]);\n\treturn fa[x];\n}\n```\n```cpp\nint hebing(int x,int y)\n{\n   int aa=find(x);\n   int bb=find(y);\n   if(aa!=bb) fa[aa]=bb;\n}\n```\n  Fourth\uff1asort\u6392\u5e8f\u540e\u5f00\u59cb\u514b\u9c81\u65af\u5361\u5c14\n  \n\n------------\n\n  \u5982\u679c\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u6b64\u56db\u6b65\uff0c\u90a3\u4e48\u4f60\u5df2\u7ecf\u6210\u529f\u4e86\u4e00\u534a\u3002\n  \n  \u90a3\u6211\u5c31\u76f4\u63a5\u6765\u6211\u7684\u4ee3\u7801\u4f9b\u5404\u4f4d\u53c2\u8003~~\u6284\u88ad~~\u3002\n  ```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\nint fa[100001];//\u7236\u4eb2\u6570\u7ec4\nstruct p\n{\n\tint x,y,val;\n}a[100001];//\u8fd9\u91cc\u8868\u793a\u4ecex\u5230y\u7684\u5206\u503c\u6211\u8ba4\u4e3a\u7ed3\u6784\u4f53\u66f4\u7406\u89e3\u6240\u4ee5\u7528\u7684\u7ed3\u6784\u4f53\uff0c\u5982\u6709\u5176\u4ed6\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\nint find(int x)\n{\n\tif(x!=fa[x])  fa[x]=find(fa[x]);\n\treturn fa[x];\n}\nint bj(p a,p b)//\u7528\u4e8e\u540e\u9762\u6392\u5e8f\n{\n\treturn a.val<b.val;\n}\nint main()\n{\n\tint maxx=-9999999;//\u521d\u59cb\u5316\u4e00\u4e2a\u6781\u5c0f\u503c\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)fa[i]=i;//\u521d\u59cb\u5316\u7236\u4eb2\u6570\u7ec4\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a[i].x>>a[i].y>>a[i].val;\n\t}\n\tint k=0;\n\tsort(a+1,a+1+m,bj);//\u4ece\u5c0f\u5230\u5927\u6392\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(find(a[i].x)!=find(a[i].y))\n\t\t{\n\t\t    maxx=a[i].val;//\u7531\u4e8e\u5df2\u7ecf\u6392\u5e8f\u6240\u4ee5\u4e3a\u4e00\u7ec4\u5355\u589e\u6570\u636e\u53ef\u4ee5\u4e0d\u7528\u6bd4\u8f83\u5927\u5c0f\n\t\t\tint aa=find(a[i].x);//\u6b64\u5904\u6211\u628a\u5408\u5e76\u51fd\u6570\u653e\u5728\u8fd9\u53ea\u662f\u4e2a\u4eba\u4e60\u60ef\u3002\n\t\t\tint bb=find(a[i].y);\n\t\t\tif(aa!=bb) fa[aa]=bb;\n\t\t\tk++;//\u8bb0\u5f55\u51fa\u73b0\u7684\u8fb9\u6570\n\t\t\tif(k==n-1)break;//\u5982\u679c\u8fb9\u6570\u662f\u70b9\u6570-1\u90a3\u4e48\u8bf4\u660e\u5df2\u7ecf\u51fa\u73b0\u4e86\u6700\u5c0f\u751f\u6210\u6811\u5c31\u53ef\u4ee5\u76f4\u63a5\u505c\u6b62\u4e86\n\t\t}\n\t}\n\tcout<<n-1<<\" \"<<maxx<<endl;\n}\n```\n\n  \n\n   \n\n\n\n   ",
        "postTime": 1564995059,
        "uid": 225384,
        "name": "a15326987",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u8fd9\u9898\u663e\u7136\u5c31\u662f\u6c42\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u7684\u751f\u6210\u6811\uff0c\u800c\u7528\u514b\u9c81\u65af\u5361\u5c14\u5f88\u5bb9\u6613\u8bc1\u660e\u8fd9\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\uff08\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u6bcf\u6b21\u53d6\u7684\u90fd\u662f\u4e0d\u6784\u6210\u73af\u7684\u6700\u5c0f\u8fb9\u5c31\u884c\u4e86\uff09\uff0c\u7136\u540e\u7528\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u6c42\u89e3\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data {\n\tint x,y,k;\n} e[100005];\nint n,m,tot,maxn,fa[305];\nint find(int x) {\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nbool cmp(data x,data y) {\n\treturn x.k<y.k;\n}\nint main() {\n\tfor(int i=1; i<=300; i++)\n\t\tfa[i]=i;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=m; i++)\n\t\tscanf(\"%d%d%d\",&e[i].x,&e[i].y,&e[i].k);\n\tprintf(\"%d \",n-1);\n\tsort(e+1,e+m+1,cmp);\n\tfor(int i=1; i<=m; i++)\n\t\tif(find(e[i].x)!=find(e[i].y)) {\n\t\t\tfa[find(e[i].x)]=find(e[i].y);\n\t\t\ttot++;\n\t\t\tmaxn=e[i].k;\n\t\t\tif(tot==n-1)\n\t\t\t\tbreak;\n\t\t}\n\tprintf(\"%d\",maxn);\n}\n```\n",
        "postTime": 1554639560,
        "uid": 134476,
        "name": "wyx__",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "### [P2330](https://www.luogu.org/problem/P2330)\n\u8fd9\u9053\u9898\u8fd8\u662f\u5bf9\u4e8e**ju**\u4f6c\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u4e00\u4e0b\u5c31\u4f1a\u8ba9\u4eba\u60f3\u5230\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8fd9\u91cc\u6211\u5c31\u7167\u987e\u4e0b\u4e0d\u77e5\u9053kruskal\u7684\u5c0f\u76c6\u53cb\n\n------------\n\u5e76\u67e5\u96c6\u6a21\u677f\uff1a\n```\nint find(int x){\t\n\tif(x==father[x])\n\t\treturn father[x];\n\treturn father[x]=find(father[x]);\n}\nvoid unionn(int x,int y){\t\n\tx=find(x);\n\ty=find(y);\n\tif(x!=y)\n\t\tfather[x]=y;\n}\n```\nkruskal\u662f\u4f9d\u9760\u5e76\u67e5\u96c6\u5224\u73af\uff0c\u8d2a\u5fc3\u6700\u5c0f\u7684\u70b9\uff0c\u6a21\u62dfn-1\u4e2a\u8fb9\n\n\n------------\n\nkruskal\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nint find(int x){\n\tif(x==father[x])\n\t\treturn father[x];\n\treturn father[x]=find(father[x]);\n}\nvoid unionn(int x,int y){\t\n\tx=find(x);\n\ty=find(y);\n\tif(x!=y)\n\t\tfather[x]=y;\n}\nvoid kruskal(){\t\n\tint a,b;\n\tsort(edge+1,edge+1+m,cmp);\t\n\tfor(int i=1;i<=m;i++){\n\t\ta=find(edge[i].u);\t \n\t\tb=find(edge[i].v);\n\t\tif(a!=b){\t\n\t\t\tans=max(edge[i].w,ans);\n\t\t\tcnt++;\n\t\t\tunionn(a,b);\t \n\t\t\tif(cnt==n-1)\t\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn;\n}\n```\n\u6240\u4ee5\u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u6570\u5c31\u662fn-1\uff0c\u7b2c\u4e8c\u4e2a\u6570\u662f\u53bb\u4e86\u7684\u8fb9\u4e2d\uff0c\u8fb9\u6743\u6700\u5927\u7684\u503c\n\n _\u4ee3\u7801_\u5982\u4e0b \uff1a\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint father[310],n,m,cnt,ans;\nstruct node{\n\tint u;\n\tint v;\n\tint w;\n}edge[10010];\nint cmp(node x,node y){\t\t//\u8c03\u6574\u6392\u5e8f \n\treturn x.w<y.w;\n} \nint find(int x){\t//\u627e\u7956\u5148 \n\tif(x==father[x])\n\t\treturn father[x];\n\treturn father[x]=find(father[x]);\n}\nvoid unionn(int x,int y){\t//\u5408\u5e76 \n\tx=find(x);\n\ty=find(y);\n\tif(x!=y)\n\t\tfather[x]=y;\n}\nvoid kruskal(){\t//\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f \n\tint a,b;\n\tsort(edge+1,edge+1+m,cmp);\t//\u8d2a\u5fc3\uff0c\u6700\u5c0f\u503c\u4f18\u5148 \n\tfor(int i=1;i<=m;i++){\n\t\ta=find(edge[i].u);\t \n\t\tb=find(edge[i].v);\n\t\tif(a!=b){\t//\u5982\u679c\u4e0d\u662f\u540c\u4e00\u4e2a\u7956\u5148\uff08\u5982\u679c\u6ca1\u6709\u5408\u5e76\uff09\uff0c\u662f\u5426\u4e3a\u73af \n\t\t\tans=max(edge[i].w,ans);\t//\u9898\u76ee\u8981\u6c42  \n\t\t\tcnt++;\n\t\t\tunionn(a,b);\t//\u5408\u5e76\uff0c \n\t\t\tif(cnt==n-1)\t//\u5982\u679c\u5df2\u7ecf\u9009\u62e9\u4e86n-1\u6761\u8fb9\uff0c\u5c31\u9000\u51fa \n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfather[i]=i;\t//\u521d\u59cb\u5316\u5e76\u67e5\u96c6 \n\tfor(int i=1;i<=m;i++){\n\t\tcin>>edge[i].u>>edge[i].v>>edge[i].w;\n\t}\n\tkruskal();\t//\u6700\u5c0f\u751f\u6210\u6811\u6a21\u677f \n\tcout<<n-1<<' '<<ans;\t//\u56e0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u662fn\u4e2a\u70b9,n-1\u6761\u8fb9 \n\treturn 0;\n}\n```\n\n",
        "postTime": 1573732282,
        "uid": 108540,
        "name": "\u4ece\u4e0d\u518d\u89c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u601d\u8def:Kruskal\u7b97\u6cd5\n\n\u8f93\u51fa\uff1a\u70b9\u6570-1\u53ca\uff08\u751f\u6210\u6811\u4e2d\uff09\u6700\u5927\u8fb9\u6743\n\n\u5982\u679c\u8fd8\u4e0d\u4f1a\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u8bf7\u5de6\u8f6c\u8fd9\u91cc\n\n\u597d\u4e86\uff0c\u5f00\u59cb\u6211\u4eec\u7684\u6b63\u9898\uff0c\u6b64\u9898\u7528\u7684\u662fKruskal\u7b97\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u57fa\u4e8e\u8d2a\u5fc3\u548c\u5e76\u67e5\u96c6\u7684\u7b97\u6cd5\uff08\u5c31\u662f\u628a\u8fb9\u6743\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u641c\uff0c\u5982\u679c\u5f62\u6210\u73af\u5c31\u8df3\u8fc7\u7ee7\u7eed\u641c\uff0c\u76f4\u5230\u751f\u6210\u6811\u7684\u8fb9\u6570\u4e3a\u603b\u8fb9\u6570\u5373\u53ef\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nstruct Edge{\n\tint from,to,dis;\n}edge[100001];//\u90bb\u63a5\u8868\nbool operator <(Edge a,Edge b)\n{\n\treturn a.dis<b.dis;\n}//\u91cd\u8f7d\u8fd0\u7b97\u7b26\nint n,m,s,maxx;\nint fa[10001];\nint get(int x)\n{\n\tif(fa[x]==x)  return x;\n\treturn fa[x]=get(fa[x]);\n}//\u5e76\u67e5\u96c6\u67e5\u8be2\u64cd\u4f5c\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>edge[i].from>>edge[i].to>>edge[i].dis;\n\t}\n\tfor(int i=1;i<=n;i++)  fa[i]=i;\n\tsort(edge+1,edge+1+m);//\u6392\u5e8f\u8fb9\u6743\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=get(edge[i].from),y=get(edge[i].to);\n\t\tif(x==y) continue;\n\t\tfa[x]=y;maxx=edge[i].dis;//\u5e76\u67e5\u96c6\u5408\u5e76\u64cd\u4f5c\n\t}\n\tcout<<n-1<<\" \"<<maxx;\n\treturn 0;\n}\n```\n\u6700\u540e\uff0c\u5e0c\u671b\u5404\u4f4d\u540c\u5b66\u90fd\u80fd\u591f\u5b66\u4f1aKruskal\uff0c\u4e5f\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u80fd\u591f\u901a\u8fc7\u6b64\u7bc7\u9898\u89e3\uff01\n",
        "postTime": 1572017653,
        "uid": 118300,
        "name": "\u626c\u76932006",
        "ccfLevel": 0,
        "title": "P2330 [SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02 \u9898\u89e3"
    },
    {
        "content": "\u6700\u5c0f\u751f\u6210\u6811\u6c34\u9898\n\n\u5927\u5bb6\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u9898\u9762\uff0c\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u5904\u5904\u90fd\u5728\u6697\u793a\u6700\u5c0f\u751f\u6210\u6811\uff01\n\n>1\uff0e\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u80fd\u591f\u628a\u6240\u6709\u7684\u4ea4\u53c9\u8def\u53e3\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8fde\u901a\u8d77\u6765\u3002\n\n\u8fd9\u53e5\u8bdd\u544a\u8bc9\u6211\u4eec\u8981\u9020\u4e00\u4e2a\u8fde\u901a\u56fe\uff01\n\n>2\uff0e\u5728\u6ee1\u8db3\u8981\u6c421\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u9053\u8def\u5c3d\u91cf\u5c11\u3002\n\n\u8fd9\u53e5\u8bdd\u63d0\u793a\u6211\u4eec\u9020\u7684\u56fe\u662f\u4e00\u68f5\u6811\uff01\n\n> 3\uff0e\u5728\u6ee1\u8db3\u8981\u6c421\u30012\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u4e2d\u5206\u503c\u6700\u5927\u7684\u9053\u8def\u5206\u503c\u5c3d\u91cf\u5c0f\u3002\n\n\u8fd9\u53e5\u8bdd\u544a\u8bc9\u6211\u4eec\u6811\u7684\u6743\u503c\u8981\u5c3d\u91cf\u5c0f\uff01\n\n# \u8fd9\u4e0d\u5c31\u662f\u9020\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u5417\uff1f\n\n\u4e0d\u8fc7\u8fd9\u9898\u95ee\u7684\u4e0e\u6a21\u677f\u7565\u6709\u4e0d\u540c\uff0c\u95ee\u7684\u662f\u6700\u5927\u7684\u6743\u503c\uff0c****\u6240\u4ee5\u7b54\u6848\u4e0d\u662f\u6743\u503c\u548c\uff0c\u800c\u662f\u6743\u503c\u7684\u6700\u5927\u503c****\n\n\u63a5\u4e0b\u6765\u5957\u4e00\u4e2a\u6a21\u677f\u5c31\u884c\u4e86\uff08\u4e0d\u4f1a\u6a21\u677f\u7684\u6765[\u8fd9\u513f](https://www.luogu.org/problem/P3366)\uff09\n\n\u8fd9\u91cc\u63a8\u8350$kruskal$\u7b97\u6cd5\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,fi[310],nx,ny,ans,cur=1;\nstruct edge{\n\tint x,y,w;\n}e[100010];\nbool cmp(edge a,edge b){\n\treturn a.w<b.w;\n}\nint find(int x){\n\twhile(x!=fi[x]){\n\t\tx=fi[x]=fi[fi[x]];\n\t}\n\treturn x;\n}\nvoid kruskal(){\n\tfor(int i=1;i<=m;i++){\n\t\tnx=find(e[i].x),ny=find(e[i].y);\n\t\tif(nx==ny){\n\t\t\tcontinue;\n\t\t}\n\t\tfi[ny]=nx;\n\t\tans=e[i].w;\n\t\tcur++;\n\t\tif(cur==n){\n\t\t\treturn;\t\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tfi[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>e[i].x>>e[i].y>>e[i].w;\n\t}\n\tsort(e+1,e+m+1,cmp);\n\tkruskal();\n\tcout<<n-1<<\" \"<<ans;\n\treturn 0;\n}\n```\n\u53cd\u6b63$CSP$\u5df2\u7ecf\u7206\u96f6\u4e86\uff0c\u8fd8\u662f\u8ba9\u5fc3\u5f52\u96f6\uff0c\u597d\u597d~~\u7ec3\u5b57~~\u505a\u9898\u5427\uff01\u8981\u662f\u7238\u7238\u5988\u5988\u77e5\u9053\u6211\u4e00\u4e2a\u661f\u671f\u624d\u5199\u8fd9\u4e48\u4e00\u70b9\u9898\uff0c\u7238\u7238\u5988\u5988\u4f1a\u6d41\u773c\u6cea\u7684\uff01",
        "postTime": 1574477058,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "# Prim\u7684\u9898\u89e3\n## \u5207\u8bb0\u8981\u7528scanf\u548cprintf\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\n## \u7ec6\u8282\u89c1\u4ee3\u7801\u7684\u6ce8\u91ca\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint u[2505] ;//\u662f\u5426\u52a0\u5165\u6811 \nint s[2505] ;//\u6ca1\u52a0\u5165\u6811\u7684\u8282\u70b9 \nint mp[2505][2505] ; //\u4e24\u6761\u8def\u4e4b\u95f4\u7684\u5206\u503c \nint main()\n{\n\tmemset(mp , 1 , sizeof(mp)) ;//\u521d\u59cb\u5316mp  \n\tmemset(s , 1 , sizeof(s)) ;//\u521d\u59cb\u5316s \n\tint n , m , ans = 0 ;\n\tscanf(\"%d%d\" , &n , &m) ;//\u8f93\u5165 \n\tfor(int i = 1 ; i <= m ; ++i)\n\t{\n\t\tint u , v , c ;\n\t\tscanf(\"%d%d%d\" , &u , &v , &c) ;\n\t\tif(c < mp[u][v])//\u9009\u62e9\u5206\u503c\u5c0f\u7684 \n\t\t\tmp[u][v] = mp[v][u] = c ; \n\t}\n\ts[1] = 0 ;//\u8bbe\u7f6e\u8d77\u70b9  \n\tfor(int i = 1 ; i <= n ; ++i)\n\t{\n\t\tint k = 0 ;\n\t\tfor(int j = 1 ; j <= n ; ++j)//\u5bfb\u627e\u8fd8\u6ca1\u6709\u8fdb\u5165\u6811\u4f46\u662fs\u6700\u5c0f\u7684\u8def \n\t\t\tif(u[j] == 0 && s[j] < s[k])\n\t\t\t\tk = j ;\n\t\tu[k] = 1 ;\n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && mp[k][j] < s[j])\n\t\t\t\ts[j] = mp[k][j] ;\n\t}\n\tfor(int i = 1 ; i<= n ; ++i)//\u5bfb\u627e\u5206\u503c\u6700\u5927\u7684\u8def \n\t\tif(s[i] > ans)\n\t\t\tans = s[i] ;\n\tprintf(\"%d %d\" , n - 1 , ans) ;//\u8f93\u51fa \n\treturn 0 ;\n}\n```\n## \u6ca1\u52a0\u6ce8\u91ca\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint u[2505] ;\nint s[2505] ;\nint mp[2505][2505] ; \nint main()\n{\n\tmemset(mp , 1 , sizeof(mp)) ;  \n\tmemset(s , 1 , sizeof(s)) ;\n\tint n , m , ans = 0 ;\n\tscanf(\"%d%d\" , &n , &m) ;\n\tfor(int i = 1 ; i <= m ; ++i)\n\t{\n\t\tint u , v , c ;\n\t\tscanf(\"%d%d%d\" , &u , &v , &c) ;\n\t\tif(c < mp[u][v])\n\t\t\tmp[u][v] = mp[v][u] = c ; \n\t}\n\ts[1] = 0 ;\n\tfor(int i = 1 ; i <= n ; ++i)\n\t{\n\t\tint k = 0 ;\n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && s[j] < s[k])\n\t\t\t\tk = j ;\n\t\tu[k] = 1 ;\n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && mp[k][j] < s[j])\n\t\t\t\ts[j] = mp[k][j] ;\n\t}\n\tfor(int i = 1 ; i<= n ; ++i)\n\t\tif(s[i] > ans)\n\t\t\tans = s[i] ;\n\tprintf(\"%d %d\" , n - 1 , ans) ;\n\treturn 0 ;\n}\n```\n\n",
        "postTime": 1565167218,
        "uid": 99729,
        "name": "TYX180129",
        "ccfLevel": 0,
        "title": "P2330 \u7e41\u5fd9\u7684\u90fd\u5e02 \u9898\u89e3"
    },
    {
        "content": "\u6700\u5f00\u59cb\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u9996\u5148\u5c31\u4f1a\u60f3\u5230\u6bcf\u4e00\u6761\u6865\u90fd\u5fc5\u987b\u5728\u6240\u9009\u8fb9\u7684\u96c6\u5408\u5185\uff0c\u6545\u60f3\u5230\u4f7f\u7528tarjan\n\n\u4f46\u56e0\u4e3a\u5b9e\u9645\u5e94\u7528\u65f6\u53d1\u73b0\u5e76\u4e0d\u9700\u8981\u5728\u6b64\u9898\u8fd0\u7528\u8fd9\u4e48\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff08\u5176\u5b9e\u5c31\u662f\u5fd8\u4e86\uff09\uff0c\u8003\u8651\u5230\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5\uff0c\u679a\u4e3e\u8fb9\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5224\u65ad\u56fe\u5f62\u662f\u5426\u53ef\u4ee5\u8fde\u901a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define one LONG_LONG_MAX/4\nusing namespace std;\ninline void input(long long&);\nlong long n,m;\nstruct edge\n{\n    long long st,ed;\n    long long length;\n    edge(long long p=0,long long q=0,long long r=0)\n    {\n        this->st=p;\n        this->ed=q;\n        this->length=r;\n    }\n    edge operator = (const edge b)\n    {\n        this->st=b.st;\n        this->ed=b.ed;\n        this->length=b.length;\n        return (*this);\n    }\n};\nedge road[90001];\ninline void input(edge&);\nstruct cmp\n{\n    bool operator () (const edge x,const edge y)\n    {\n        return x.length<y.length;\n    }\n};\nlong long fa[301];\ninline long long f(long long);\nlong long l,r;\ninline bool runable(long long);\nint main()\n{\n    input(n);input(m);\n    for(long long i=1;i<=m;i++)\n    {\n        input(road[i]);\n    }\n    sort(road+1,road+m+1,cmp());\n    l=n-1;\n    r=m;\n    while(l<r)\n    {\n        long long mid=l+r;\n        mid>>=1;\n        if(runable(mid))\n        {\n            r=mid;\n        }\n        else\n        {\n            l=mid+1;\n        }\n    }\n    printf(\"%lld %lld\\n\",n-1,road[r].length);\n    exit(0);\n}\ninline bool runable(long long x)\n{\n    for(long long i=1;i<=n;i++)\n    {\n        fa[i]=i;\n    }\n    long long num=0;\n    for(long long i=1;i<=x;i++)\n    {\n        long long p=road[i].st,q=road[i].ed;\n        if(f(p)!=f(q))\n        {\n            num++;\n            fa[f(p)]=f(q);\n        }\n    }\n    if(num<(n-1))\n    {\n        return false;\n    }\n    return true;\n}\ninline long long f(long long x)\n{\n    if(fa[x]==x)\n    {\n        return x;\n    }\n    return fa[x]=f(fa[x]);\n}\ninline void input(edge &x)\n{\n    input(x.st);\n    input(x.ed);\n    input(x.length);\n    return;\n}\ninline void input(long long &x)\n{\n    x=0;\n    long long opt=1;\n    char ch;\n    while(ch=getchar())\n    {\n        if(ch=='-')\n        {\n            opt=-1;\n            break;\n        }\n        if(ch<'0'||ch>'9')\n        {\n            continue;\n        }\n        x=ch-'0';\n        break;\n    }\n    while(ch=getchar())\n    {\n        if(ch<'0'||ch>'9')\n        {\n            break;\n        }\n        x*=10;\n        x+=ch-'0';\n    }\n    x*=opt;\n    return;\n}\n```\n\u5176\u4e2d\uff0c\u5224\u65ad\u56fe\u5f62\u8fde\u901a\u6027\u53ef\u4ee5\u8fd0\u7528\u6700\u5c0f\u751f\u6210\u6811\u7684kruskal\u7b97\u6cd5\n\n\u56e0\u4e3a\u8981\u4f7f\u4e00\u5f20\u56fe\u8fde\u901a\uff0c\u56fe\u4e2d\u8fb9\u6570\u81f3\u5c11\u4e3a\u8fb9\u6570\u51cf\u4e00\uff0c\u6240\u4ee5\u4e8c\u5206\u7b54\u6848\u65f6\u5c06\u5de6\u8fb9\u754c$l$\u521d\u59cb\u4e3a$n-1$,\u53f3\u8fb9\u754c$r$\u521d\u59cb\u4e3a$m$\u5373\u53ef\u3002",
        "postTime": 1569829609,
        "uid": 62849,
        "name": "\u6d1b\u5fc5\u8fbe\u6cd5\u5219",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f**\u6700\u5c0f\u751f\u6210\u6811**\n\n\u56e0\u4e3a\u5b83\u8981\u6c42\u8fde\u63a5\u6240\u6709\u8fb9\uff0c\u4e14\u8fb9\u8981\u5c11\uff0c\u8fb9\u6743\u8981\u5c0f\n\nn\u4e2a\u8282\u70b9\u7528n-1\u6761\u8fb9\u8fde\u8d77\u6765\u7684\u56fe\u5f62\u53ea\u80fd\u662f\u6811\uff08\u6240\u4ee5\u7b2c\u4e00\u4e2a\u8f93\u51fa\u5c31\u662fn-1\uff09\uff0c\u7136\u540e\u8fb9\u6743\u8981\u5c0f\uff0c\u90a3\u4e48\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u4e86\n\n\u672c\u4eba\u4e60\u60ef\u7528Kruskal\u7b97\u6cd5\uff08\u8981\u7528\u5230\u5e76\u67e5\u96c6\uff09\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,m;\nstruct node{\n\tint x,y;//\u8fde\u63a5\u7684\u4e24\u70b9\n\tint fz;//\u5206\u503c\n}dis[100007];//\u5b58\u8fb9\nint sum;//\u8bb0\u5f55\u5df2\u53d6\u7684\u8fb9\u6570\nint fa[307];//\u5e76\u67e5\u96c6\uff0c\u4fdd\u5b58\u6bcf\u4e2a\u70b9\u7684\u7956\u5148\nint fi(int x){\n\tif(fa[x]!=x)fa[x]=fi(fa[x]);\n\treturn fa[x];//\u627e\u67d0\u4e2a\u70b9\u6700\u65e9\u7684\u7956\u5148\n}\nvoid hb(int x,int y){\n\tfa[x]=y;\n\treturn;//\u5408\u5e76\u4e24\u4e2a\u70b9\uff08\u653e\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\uff09\n}\nbool cmp(node x,node y){\n\treturn x.fz<y.fz;//\u6309\u5206\u503c\u6392\u5e8f\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,c;//\u53d8\u91cf\u540d\u6700\u597d\u4e0e\u9898\u76ee\u4e2d\u4e00\u6837\n\t\tcin>>u>>v>>c;\n\t\tdis[i].x=u;\n\t\tdis[i].y=v;\n\t\tdis[i].fz=c;\n\t}\n\tsort(dis+1,dis+m+1,cmp);//\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)\n\tfa[i]=i;//\u5148\u628a\u6bcf\u4e2a\u70b9\u7684\u7956\u5148\u4fdd\u5b58\u4e3a\u81ea\u5df1\n\tfor(int i=1;i<=m;i++){\n\t\tint a=dis[i].x;\n\t\tint b=dis[i].y;//\u770b\u7740\u5199\u7740\u90fd\u65b9\u4fbf\u4e00\u4e9b\n\t\tif(fi(a)!=fi(b)){//\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u91cc\n\t\t\thb(fi(a),fi(b));//\u5408\u5e76\n\t\t\tsum++;//\u5df2\u53d6\u7684\u8fb9\u6570\u52a0\u4e00\n\t\t}\n\t\tif(sum==n-1){//\u5168\u90e8\u8fde\u63a5\u4e86\n\t\t\tcout<<n-1<<' '<<dis[i].fz<<endl;\n            \t\t//\u6700\u5927\u5206\u503c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u70b9\uff08\u56e0\u4e3a\u6309\u7167\u5206\u503c\u6392\u5e8f\u4e86\uff09\n\t\t\tbreak;//\u9000\u51fa\u5faa\u73af\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566457264,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "```cpp\n//\u5934\u6587\u4ef6\n#include <bits/stdc++.h>//\u4e07\u80fd\u5e93\nusing namespace std;\n//\u5b9a\u4e49\u53d8\u91cf\nconst int N=5050,M=200200;//N\u4e3a\u70b9\uff0cM\u4e3a\u8fb9\nint i,j,k,n,m,ans;\nint f[N];\nstruct edge { int x,y,z;} A[M];//\u6709x\u8d77\u70b9y\u7ec8\u70b9z\u957f\u5ea6\u7684\u7ed3\u6784\u4f53\n//\u5b9a\u4e49\u6bd4\u8f83\u7b26\nbool cmp(edge a,edge b) { return a.z<b.z;}\n//\u6c42\u6240\u5c5e\u96c6\u5408\u7684\u51fd\u6570\uff08\u5e76\u67e5\u96c6\u554a\uff09\nint getf(int x) {\n    if (f[x]==x) return x;\n    return f[x]=getf(f[x]);\n}\n//\u4e3b\u7a0b\u5e8f\uff08Kruskal\uff09\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for (i=1;i<=m;i++) scanf(\"%d%d%d\",&A[i].x,&A[i].y,&A[i].z);//\u8bfb\u5165\n    sort(A+1,A+m+1,cmp);//\u6392\u5e8f\n    for (i=1;i<=n;i++) f[i]=i;//\u5404\u70b9\u6240\u5c5e\u96c6\u5408\u521d\u59cb\u5316\n    int num=0;\n    for (i=1;i<=m;i++) {//\u6838\u5fc3\n        int x=A[i].x,y=A[i].y;\n        if (getf(x)!=getf(y)) {//\u5982\u679c\u6240\u5c5e\u96c6\u5408\u4e0d\u540c...\n            num++;//\u8fb9\u6570\u7d2f\u52a0\n            f[f[x]]=f[y];//\u628a\u8d77\u70b9\u7ec8\u70b9\u5e76\u5230\u540c\u4e00\u96c6\u5408\u4e2d\u53bb\n            ans=max(ans,A[i].z);//max\u6c42\u6700\u5927\u8fb9\u6743\u503c\n        }\n        if (num==n-1) break;//\u8d70\u5b8c\u4e86\u5c31\u8df3\u51fa\uff08\u867d\u7136\u5e76\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\uff09\n    }\n    printf(\"%d %d\\n\",num,ans);//\u8f93\u51fa\uff1anum\u4e3a\u6700\u540e\u8fb9\u6570\uff0cans\u4e3a\u6700\u5927\u8fb9\u6743\u503c\n}\n```",
        "postTime": 1523673334,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u6700\u5c0f\u751f\u6210\u6811Kruskal\u6a21\u677f\u9898"
    },
    {
        "content": "\u6211\u770b\u697c\u4e0b\u6ca1\u6709\u4e8c\u5206\u4ee3\u7801\uff0c\u53d1\u4e0a\u6765\u6709\u5174\u8da3\u7684\u770b\u4e00\u4e0b\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e8c\u5206\u7b54\u6848\u5373\u53ef\n\n\n\n    \n\n\n\n    \n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\nusing namespace std;\nconst int maxn=300+5,maxc=10000+5;\nint n,m;\nbool visited[maxn];\nstruct Edge{\n    int v,l;\n    Edge(){\n        v=0; l=0;\n    }\n    Edge(int v_in,int l_in){\n        v=v_in; l=l_in;\n    }\n};\nvector<Edge> G[maxn];\nvoid dfs(int u,int max_c){\n    visited[u]=1;\n    for(int i=0;i<G[u].size();i++){\n        if(visited[G[u][i].v] || G[u][i].l>max_c) continue;\n        dfs(G[u][i].v,max_c);\n    }\n    return ;\n}\nbool access(int max_c){\n    memset(visited,0,sizeof(visited));\n    dfs(1,max_c);\n    int p=1;\n    while(visited[p])p++;\n    if(p<=n) return false;\n    else return true;\n}\nint main(){\n    cin>>n>>m;\n    for(int i=0;i<m;i++){\n        int u,v,c;\n        cin>>u>>v>>c;\n        G[u].push_back(Edge(v,c));\n        G[v].push_back(Edge(u,c));\n    }\n    int l=1,r=maxc;\n    while(l<r){\n        int mid=(l+r)/2;\n        if(access(mid)) r=mid;\n        else l=mid+1;\n    }\n    cout<<n-1<<\" \"<<l;\n    return 0;\n}\n```",
        "postTime": 1479172348,
        "uid": 9024,
        "name": "\u9ebb\u7237\u5728\u7ebf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u5206\u6790\u9898\u610f\uff1a\n\n\u8981\u6c421\uff1a\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u80fd\u591f\u628a\u6240\u6709\u7684\u4ea4\u53c9\u8def\u53e3\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8fde\u901a\u8d77\u6765\u2014\u2014**\u6784\u5efa\u4e00\u4e2a\u8fde\u901a\u56fe**\n\n\u8981\u6c422\uff1a\u5728\u6ee1\u8db3\u8981\u6c421\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u9053\u8def\u5c3d\u91cf\u5c11\u2014\u2014**\u6784\u5efa\u4e00\u68f5\u6811**\n\n\u8981\u6c423\uff1a\u5728\u6ee1\u8db3\u8981\u6c421\u30012\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u9020\u7684\u90a3\u4e9b\u9053\u8def\u4e2d\u5206\u503c\u6700\u5927\u7684\u9053\u8def\u5206\u503c\u5c3d\u91cf\u5c0f\u2014\u2014**\u6784\u5efa\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811**\n\n\u56e0\u4e3a\u7ed3\u679c\u8981\u6c42\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u957f\u8fb9\uff0c\u6240\u4ee5\u5728Prim\u548cKruskal\u4e2d\uff0c\u6211\u679c\u65ad\u7684\u9009\u62e9\u4e86Kruskal\uff08~~\u5176\u5b9e\u6211\u4e0d\u5927\u4f1a\u5199Prim~~\uff09\n\n### \u90a3\u4e48\u7ed3\u8bba\u5c31\u51fa\u6765\u5566\uff1a\u6784\u5efa\u4e00\u9897\u6700\u5c0f\u751f\u6210\u6811\u5e76\u6c42\u5176\u6700\u957f\u8fb9\n\n\u6ca1\u53d1\u8fc7\u51e0\u6b21\u9898\u89e3\uff0c\u8bf7\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u901a\u8fc7\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6781\u591a\u6279\u6ce8\u7248\uff09\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nll n,m,f[100005],ans,num;\nstruct node{\n\tll u,v,c;//u\uff0cv\u8868\u793a\u9053\u8def\u4eceu\u5230v\uff0c\u9053\u8def\u6743\u503c\u4e3ac \n}p[100005];\nbool cmp(node a,node b){//\u6309\u8fb9\u6743\u6392\u5e8f \n\treturn a.c<b.c;\n}\nll getf(ll a){//\u67e5\u8be2\u7956\u5148 \n\tif(a==f[a]) return a;//\u5982\u679c\u7956\u5148\u5c31\u662f\u81ea\u5df1\u5c31return \n\tf[a]=getf(f[a]);//\u4e0d\u7136\u5c31\u67e5\u8be2\uff0c\u66f4\u65b0\uff0c\u518dreturn \n\treturn f[a];\n}\nint main(){\n\tscanf(\"%lld%lld\",&n,&m);//n\u8868\u793a\u8282\u70b9\u6570\uff0cm\u8868\u793a\u8fb9\u7684\u6570\u91cf \n\tfor(ll i=1;i<=m;i++)\n\tscanf(\"%lld%lld%lld\",&p[i].u,&p[i].v,&p[i].c);//\u7ed3\u6784\u4f53\u5b58\u8fb9 \n\tsort(p+1,p+m+1,cmp);//\u6309\u8fb9\u6743\u6392\u5e8f \n\tfor(ll i=1;i<=n;i++) f[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff0c\u6839\u8282\u70b9\u6307\u5411\u81ea\u5df1 \n\tfor(ll i=1;i<=m;i++){\n\t\tll fa=getf(p[i].u),fb=getf(p[i].v);\n\t\tif(fa!=fb){//\u5982\u679c\u4e24\u8fb9\u4e0d\u76f8\u8fde \n\t\t\tll w=p[i].c;\n\t\t\tf[fa]=fb;//\u5408\u5e76 \n\t\t\tans=max(ans,w);//\u8bb0\u5f55\u6700\u5927\u6743\u503c \n\t\t\tnum++;//\u8bb0\u5f55\u8fb9\u6570 \n\t\t}\n\t\tif(num==n-1)//\u5982\u679c\u8fb9\u6570=n-1\uff0c\u4e5f\u5c31\u662f\u6784\u9020\u4e86\u4e00\u9897\u6700\u5c0f\u751f\u6210\u6811 \n\t\tbreak;//\u76f4\u63a5\u8df3\u51fa\u5faa\u73af \n\t}\n\tcout<<n-1<<\" \"<<ans;//\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u6570\u53ea\u6709n-1\uff0c\u76f4\u63a5\u8f93\u51fan-1 \u548c\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743 \n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f \n} \n```\n\u7384\u5b66\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u6211\u7b2c\u4e00\u6b21\u63d0\u4ea4\u6ca1\u6709\u8fb9\u6570=n-1\u8df3\u51fa\u5faa\u73af\u7684\u64cd\u4f5c\uff0c\u4ee3\u7801\u8dd1\u5f97\u8fd8\u4f1a\u6bd4\u8df3\u51fa\u5faa\u73af\u7684\u5feb\uff0c\u8bf7\u5927\u4f6c\u6307\u6559\n",
        "postTime": 1566565140,
        "uid": 102345,
        "name": "auroral",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u5f88\u5c11\u6709\u4eba\u7528$Prim$\u6765\u505a\u3002\n\n\u6bd5\u7adf\u6570\u636e\u662f\u7a20\u5bc6\u56fe\uff0c\u7406\u8bba\u4e0a$Prim$\u66f4\u5feb\u3002\n\n\u4e0b\u9762\u8fdb\u884c\u8bb2\u89e3\u3002\n\n\n------------\n\u9996\u5148\u770b\u9898\u76ee\uff0c\u7ed9\u51fa\u90a3\u4e48\u591a\u6761\u4ef6\u4e00\u770b\u5c31\u6655\uff0c\u5b9e\u9645\u4e0a\u4ed4\u7ec6\u7406\u89e3\u5c31\u4e0d\u96be\u53d1\u73b0\uff0c\u7b80\u8ff0\u9898\u610f\u4e3a\uff1a\n> \u6c42\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684**\u8fb9\u6700\u5927\u7684\u6743\u503c**\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u6bd4\u8f83\u88f8\u4e86\uff0c\u6ca1\u6709\u91cd\u8fb9\u3001\u81ea\u73af\u7b49\u5751\uff0c\u6309\u7167\u6d41\u7a0b\u5efa\u65e0\u5411\u56fe\uff0c\u63a8\u8350\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u6216$vector$\u3002\n\n\u6211\u4eec\u91c7\u7528\u5806\uff08STL\u7684\u4f18\u5148\u961f\u5217\uff09\u6765\u4f18\u5316\u627e\u6700\u5c0f\u6743\u503c\u8fb9\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\u3002\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u9898\u76ee\u7b2c\u4e00\u95ee\uff0c\u6839\u636e\u6700\u5c0f\u751f\u6210\u6811\u6027\u8d28\u53ef\u53ea\uff0c\u4e00\u5b9a\u662f\u5269\u4e0b$n-1$\u6761\u9053\u8def\u3002\n\n\u5bf9\u4e8e$Prim$\u7684\u6559\u7a0b\uff0c\u8bf7\u70b9[\u94fe\u63a5](https://www.luogu.org/blog/80049/template-Minimum-Spanning-Tree)\u3002\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n------------\n\n\u5269\u4e0b\u7684\u90fd\u662f\u7ec6\u8282\u3002\u770b\u7a0b\u5e8f\u5427\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=100005;\nint n,m,ans;\nstruct node\n{\n\tint to,v;\n};\nvector <node> edge[MAXN];\nbool visit[MAXN];\n\nstruct cmp\n{\n\tbool operator()(const node& x,const node& y)const\n\t{\n\t\treturn x.v>y.v;\n\t}\n};\n\nvoid input(void)\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tedge[x].push_back((node){y,z});\n\t\tedge[y].push_back((node){x,z});\n\t}\n}\n\nvoid prim(void)\n{\n\tpriority_queue <node,vector<node>,cmp> q;\n\tvisit[1]=true;\n\tfor(vector<node>::iterator it=edge[1].begin();it!=edge[1].end();it++)\n\t q.push(*it);\n\twhile(!q.empty())\n\t{\n\t\tconst node tmp=q.top();\n\t\tq.pop();\n\t\tif(visit[tmp.to])\n\t\t continue;\n\t\tvisit[tmp.to]=true;\n\t\tans=max(ans,tmp.v);\n\t\tfor(vector<node>::iterator it=edge[tmp.to].begin();it!=edge[tmp.to].end();it++)\n\t     if(!visit[it->to])\n\t      q.push(*it);\n\t}\n}\n\nint main()\n{\n\tinput();\n\tprim();\n\tcout<<n-1<<' '<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1549364209,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u6a21\u677f\u6539\u4e00\u70b9\u70b9\uff01\uff01\n\n\u867d\u7136\u6211\u4e5f\u6539\u4e86\u534a\u4e2a\u5c0f\u65f6\uff08\u9519\u5728\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u4e0a\uff09\n\n\u6211\u7528\u7684\u662fKruskal,\u4f5c\u4e3a\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u4ee3\u7801\uff0c\u5475\u5475\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```pascal\n#include<bits/stdc++.h>\nusing namespace std;\nlong long father[5002];\nlong long n,m,cnt=0,sum=0,maxx=0;\nstruct ag\n{\n\tint x,y,z;\n}book[200002];\nbool cmp(ag a,ag b)\n{\n\treturn  a.z<b.z;\n}\nint find(int x)\n{\n\tif(father[x]==x)\n\t  return x;\n\treturn father[x]=find(father[x]);\n}\nvoid no(int c,int d)\n{\n\tint a,b;\n    a=find(c);\n    b=find(d);\n    father[a]=b;\n}\nvoid ku()\n{\n\tsort(book+1,book+1+m,cmp);\n\tfor(int i=1;i<=m;i++)\n\t{\t\n\t\tif(find(book[i].x)!=find(book[i].y))\n\t\t{ \n\t\t\tno(book[i].x,book[i].y);\n\t\t\tsum+=book[i].z;\n\t\t    cnt++;\n\t\t    maxx=book[i].z;\n\t\t    if(cnt==n-1)\n\t\t      break;\n\t\t}\n\t}\n}\nint main()\n{\n\tint x,y,z,k;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t  father[i]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\tbook[i].x=x;\n\t\tbook[i].y=y;\n\t\tbook[i].z=z;\n\t}\n\tku();\n\tcout<<cnt<<\" \"<<maxx;\n\treturn 0;\n}\n```",
        "postTime": 1544616689,
        "uid": 18413,
        "name": "\u661f\u4e4b\u5e7b\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u5c31\u662f\u4e00\u4e2a \u514b\u9c81\u65af\u5361\u5c14\n\u6838\u5fc3\n```\nvoid kruskal(){//\u514b\u9c81\u65af\u5361\u5c14 \n\tfor(int i=1;i<=number;i++)father[i]=i;\n\tcnt=number;ans=0;\n\tsort(e+1,e+way+1,cmp);\n\tfor(int i=1;i<=way;i++){\n\t\tif(cnt==1)break;\n\t\tint xx=find(e[i].from);int yy=find(e[i].to);\n\t\tif(xx!=yy){//\u5224\u65ad\u662f\u5426\u8054\u901a \n\t\t\tcnt--;ans+=e[i].dis;sum++;//sum:\u627e\u4e86\u591a\u5c11\u6761\u8fb9 \n\t\t\tmaxn=max(maxn,e[i].dis);//\u627e\u6700\u5927\u7684\u8fb9 \n\t\t\tfather[xx]=yy;\n\t\t}\n\t}\n}\n```\n\u6240\u6709\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint number,way,father[300002],cnt,ans,sum=0,maxn=0;\nstruct node{\n\tint from;int to;int dis;\n}e[300002];\n\nbool cmp(node a,node b){\n\treturn a.dis<b.dis;\n}\n\nint find(int a){//\u627e\u7956\u5148 \n\tif(father[a]!=a)father[a]=find(father[a]);\n\treturn father[a];\n}\n\nvoid kruskal(){//\u514b\u9c81\u65af\u5361\u5c14 \n\tfor(int i=1;i<=number;i++)father[i]=i;\n\tcnt=number;ans=0;\n\tsort(e+1,e+way+1,cmp);\n\tfor(int i=1;i<=way;i++){\n\t\tif(cnt==1)break;\n\t\tint xx=find(e[i].from);int yy=find(e[i].to);\n\t\tif(xx!=yy){//\u5224\u65ad\u662f\u5426\u8054\u901a \n\t\t\tcnt--;ans+=e[i].dis;sum++;//sum:\u627e\u4e86\u591a\u5c11\u6761\u8fb9 \n\t\t\tmaxn=max(maxn,e[i].dis);//\u627e\u6700\u5927\u7684\u8fb9 \n\t\t\tfather[xx]=yy;\n\t\t}\n\t}\n}\n\nint main(){\n\tcin>>number>>way;\n\tfor(int i=1;i<=way;i++){\n\t\tcin>>e[i].from>>e[i].to>>e[i].dis;\n\t}\n\tkruskal();\n\tcout<<sum<<\" \"<<maxn;\n\treturn 0;\n}\n```",
        "postTime": 1540886739,
        "uid": 67983,
        "name": "GMSD",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u9898\u610f\u5f88\u660e\u786e\uff0c\u4f7fN\u4e2a\u70b9\u4e24\u4e24\u4e92\u8fbe\n\n\u6240\u4ee5\u5982\u679c\u4e24\u4e2a\u70b9\u5df2\u7ecf\u95f4\u63a5\u6216\u76f4\u63a5\u76f8\u8fde\uff0c\u4f60\u8fd8\u8fde\u4ed6\u4eec\u4e24\u4e2a\u662f\u4e0d\u662f\u94b1\u592a\u591a\u4e86\n\n\u6240\u4ee5\u53ea\u8981\u6709N-1\u6761\u8fb9\u5c31\u53ef\u4ee5\u4e86\n\n\u5c31\u662f\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u55bd\n\n\u4e3a\u4e86\u4fdd\u8bc1\u603b\u548c\u6700\u5c0f\uff0c\u5148\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff09\n\n\u7136\u540e\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u7684u\u548cv\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u7528\u5e76\u67e5\u96c6\u52a0\u5230\u96c6\u5408\u91cc\uff0c\u5982\u679c\u4ed6\u4eec\u5728\u540c\u4e00\u96c6\u5408\uff0c\u8868\u793a\u5df2\u7ecf\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u4ec0\u4e48\u90fd\u4e0d\u5e72\n\n\u2191\u5c31\u662f\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\n\n\u5f00\u59cb\u76f4\u63a5\u8f93\u51fan-1\u6761\u8fde\u8fb9\n\n\u6bcf\u6b21\u9012\u51cfn\uff0c\u5f53n=1\u65f6\u8df3\u51fa\n\n\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\uff0c\u6240\u4ee5\u53ea\u8981\u8f93\u51fa\u6b64\u65f6\u70b9\u7684c\u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\n\n```\nType\n    hh=record\n        a,x,y:longint;\n    end;\n\nVar\n    fa:array[1..301]of longint;\n    n,i,f1,f2,m:longint;\n    a:array[1..50001]of hh;\n    \nFunction getfather(k:longint):longint;//\u5e76\u67e5\u96c6\nbegin\n    if fa[k]<>k then getfather:=getfather(fa[k])\n        else getfather:=k;\n    fa[k]:=getfather;\nend;\n\nProcedure qsort(l,r:longint);\nvar\n    i,j,e:longint;\n    f:hh;\nbegin\n    i:=l;\n    j:=r;\n    e:=a[(l+r) div 2].a;\n    repeat\n        while a[i].a<e do inc(i);\n        while a[j].a>e do dec(j);\n        if i<=j then\n            begin\n                f:=a[i];\n                a[i]:=a[j];\n                a[j]:=f;\n                inc(i);\n                dec(j);\n            end;\n    until i>j;\n    if i<r then qsort(i,r);\n    if l<j then qsort(l,j);\nend;\n\nBegin\n    readln(n,m);\n    write(n-1,' '); //\u6811\u6709N-1\u6761\u8fb9\u76f8\u8fde\n    for i:=1 to m do\n        read(a[i].x,a[i].y,a[i].a);\n    qsort(1,m);\n    for i:=1 to n do\n        fa[i]:=i;\n    i:=0;\n    while (n>1) and (i<=m) do\n        begin\n            inc(i);\n            f1:=getfather(a[i].x);\n            f2:=getfather(a[i].y);\n            if f1<>f2 then //\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5e76\n                begin\n                    fa[f1]:=f2;\n                    dec(n);\n                end;\n        end;\n    writeln(a[i].a); //\u6839\u636e\u6392\u5e8f\u6027\u8d28\uff0c\u5f53\u524d\u70b9\u7684\u503c\u4e00\u5b9a\u6700\u5927\nEnd.\n```",
        "postTime": 1532328881,
        "uid": 5931,
        "name": "Misaka19280",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053Kruskal\u9898\u76ee\u3002\n\nAC\u4ee3\u7801\u89c1\u4e0b\u3002\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u5c06\u6240\u6709\u7684\u8fb9\u50a8\u5b58\u8d77\u6765\uff0c\u7136\u540e\u8fdb\u884c\u8d2a\u5fc3\u5730\u9009\u62e9\uff0c\u671f\u95f4\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u6709\u5173\u8054\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u901a\u8fc7\u5e76\u67e5\u96c6\u5b9e\u73b0\u3002Kruskal\u90e8\u5206\u5957\u6a21\u677f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <iostream> \n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nconst int maxn = 500;\n\nint n, m;\nint x[maxn], y[maxn], f[maxn];\nint ans = 0;\n\nstruct node {\n    int x, y;\n    int val;\n}dis[50100];\n\nbool cmp(node a, node b) {\n    return a.val < b.val;\n}\n\nint find(int x) {\n    int r = x;\n    while(r != f[r]) r = f[r];\n    int i = x, j;\n    while(f[i] != r) {  \n        j = f[i];  \n        f[i] = r;  \n        i = j;  \n    }\n    return r;  \n}\n\nvoid merge(int x, int y) {\n\tx = find(x);\n\ty = find(y);\n\tif(x != y) f[y] = x;\n}\n\nint main() {\n\tcin >> n >> m;\n\tfor(int i = 1; i <= m; i++) {\n\t\tcin >> dis[i].x >> dis[i].y >> dis[i].val;\n\t}\n\tfor(int i = 1; i <= n; i++) f[i] = i;\n\t\n\tsort(dis + 1, dis + m + 1, cmp);\n\tint tmp = 0, maxn = 0;\n    for(int i = 1; i <= m; i++) {\n        if(find(dis[i].x) != find(dis[i].y)) {\n        \tmerge(dis[i].x, dis[i].y);\n            tmp++;\n            maxn = max(maxn, dis[i].val);\n        }\n        if(tmp == n - 1) break;\n    }\n    \n    cout << tmp << ' ' << maxn;\n}\n```",
        "postTime": 1523685850,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u5728\u8dd1kruskal\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5408\u5e76\u4e4b\u540e\u6bd4\u8f83\u6bcf\u6761\u8def\u4e0a\u7684\u6743\u503c\uff0cmin\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6bd4\u8f83\u6c34\u7684\u9898\uff0c\u9644\u4e0a\u4ee3\u7801\u3002\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+5;;\nstruct node {\n    int u,v,w;\n    bool operator < (const node &t) const {\n        return w < t.w;\n    }\n} d[N];\nint n,m,tot,fa[N],k,ans;\nvoid add(int x,int y,int k) {\n    d[++tot].u = x;     d[tot].v = y;    d[tot].w = k;\n}\nint find(int x) {\n    return fa[x]==x ? x : fa[x] = find(fa[x]);\n}\nvoid kruskal() {\n    for(int i=1; i<=n; i++) \n        fa[i] = i;\n    for(int i=1; i<=tot; i++) {\n        if(find(d[i].u)!=find(d[i].v)) {\n            fa[find(d[i].u)] = find(d[i].v);\n            ans = max(ans,d[i].w);\n            k++;\n        }\n        if(k==n-1)\n            break;\n    }\n}\nint main() {\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1; i<=m; i++) {\n        int x,y,k;\n        scanf(\"%d %d %d\",&x,&y,&k);\n        add(x,y,k);\n    }\n    sort(d+1,d+1+tot);\n    kruskal();\n    printf(\"%d %d\",k,ans);\n    return 0;\n}\n```",
        "postTime": 1508164806,
        "uid": 45197,
        "name": "p0ny",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u6211\u505a\u4e86\u4e09\u9053\u6700\u5c0f\u751f\u6210\u6811 \u6bcf\u4e00\u9053\u9898\u90fd\u8ba9\u6211\u53d1\u73b0\u6211\u7684\u667a\u5546\u591a\u4e48\u4f4e\n\n\u5927\u5bb6\u4e00\u5b9a\u8981\u6ce8\u610f** \u7ec6\u5fc3\uff01\uff01\uff01**\n\n\u6211\u5c45\u7136\u56e0\u4e3a\u7a7a\u683c\u6253\u7684\u662f\u5168\u89d2WA\u4e86\u4e24\u904d \u6211\u771f\u662f\u3002\u3002\u3002\n\n\u81f3\u4e8e\u8fd9\u9053\u9898 \u6ca1\u4e8b\u62ff\u6765\u6253\u6253\u677f\u5b50 \u7b2c\u4e00\u95ee\u7684\u8bdd\u4f3c\u4e4e\u90fd\u4e0d\u7528\u7a0b\u5e8f\u5427\u3002\u3002\u8fde\u63a5n\u4e2a\u70b9\u5c31n-1\u6761\u8fb9\u5c31\u884c\u4e86 \u7b2c\u4e8c\u95ee\u7684\u8bdd\u56e0\u4e3a\u8981\u95ee\u6700\u5927\u7684\u4e00\u6761\u8fb9\u6700\u5c0f\u662f\u591a\u5c11 \u6211\u5f00\u59cb\u5c45\u7136\u8fd8\u8111\u6b8b\u7684\u4ee5\u4e3a\u8981\u7528\u4e8c\u5206\u4ec0\u4e48\u7684 \u4e8b\u5b9e\u8bc1\u660e\u6839\u672c\u4e0d\u7528\u554a\u3002\u3002\u3002\u6211\u8111\u6b8b \u771f\u7684\n\nans\u76f4\u63a5\u5c31\u7b49\u4e8e\u8fb9\u7684\u6743\u503c\u5c31\u53ef\u4ee5\u4e86 \u4e5f\u4e0d\u7528\u6bd4\u8f83\u4e00\u904d\u4e86 \u6bd5\u7adf\u662f\u6392\u8fc7\u5e8f\u7684\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<functional>\n#include<cmath>\n#include<algorithm>\n#define MAXN 200100\nusing namespace std;\nint father[MAXN],ans=0;\nint flag[MAXN];\npriority_queue<int>q;\nstruct edge{\n    int from,to;\n    int value;\n};edge Edge[MAXN];\nbool cmp(edge x,edge y)\n{\n    return x.value<y.value;//\u6bd4\u8f83\u51fd\u6570 \n}\nint Find(int x)\n{\n    if(father[x]!=x)\n    {\n        father[x]=Find(father[x]);//\u8def\u5f84\u538b\u7f29 \n    }\n    return father[x];\n}\nvoid Union(int x,int y)\n{\n    int fx=Find(x),fy=Find(y);\n    if(fx!=fy)\n    {\n        father[fx]=fy;\n    }\n}\nint main()\n{\n    memset(flag,1,sizeof(flag));\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        father[i]=i;//\u521d\u59cb\u5316\u4e00\u4e0b \n    }\n    for(int i=0;i<m;i++)\n    {\n        cin>>Edge[i].from>>Edge[i].to>>Edge[i].value;\n    }\n    sort(Edge,Edge+m,cmp);\n    for(int i=0;i<m;i++)\n    {\n        int a=Edge[i].from,b=Edge[i].to;\n        if(Find(a)!=Find(b))\n        {\n            Union(a,b);\n            ans=Edge[i].value;//\u8981\u662f\u60f3\u5728\u8fd9\u91cc\u4f18\u5316\u4e00\u4e0b\u7684\u8bdd \u5c31\u8bb0\u5f55\u4e00\u4e0b\u70b9\u7684\u4e2a\u6570 \u7136\u540ebreak\u5c31\u597d\u4e86 \u6211\u662f\u771f\u7684\u61d2 \n        }\n    }\n    cout<<n-1<<\" \"<<ans;\n    return 0;\n}\n```",
        "postTime": 1506343102,
        "uid": 18875,
        "name": "\u53f8\u5f92stuart",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u6a21\u677f\u9898\u561b\uff0c\u591a\u5199\u5c31\u597d\u4e86233\n\n\n\u4e00\u4e2akruskal\uff0c\u533a\u522b\u5c31\u662f\u4e0d\u9700\u8981\u7b97\u603b\u4ef7\u503c\uff0c\u53ea\u9700\u968f\u65f6\u8bb0\u5f55\u6700\u5927\u8def\u5f84\u5c31\u597d\u4e86\uff0c\u7b2c\u4e00\u95ee\uff08n-1\uff09\uff0c\u663e\u7136\u3002\u3002\u3002\n\n\n\u6ce8\u610f\u5e76\u67e5\u96c6\u8981\u538b\u7f29\u8def\u5f84\uff0c\u4ee5\u514d\u5f62\u6210\u957f\u94fegg\uff08TLE\uff09\uff0c\u5c31\u662f\u5408\u5e76\u7956\u5148\uff0c\u628a\u94fe\u53d8\u6210\u8611\u83c7\u90a3\u6837\u7684\u4f1e\u72b6233\n\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4ec0\u4e48\u4e86\u5427\uff0cac\u6109\u5feb\n\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint n,m;\nint fa[305];\nint ans;\nstruct stu\n{\n    int x;\n    int y;\n    int dis;\n    friend bool operator < (const stu& a,const stu& b)\n    {\n        return a.dis>b.dis;\n    }\n};\npriority_queue <stu> q;\nint findset(int x)\n{\n    if(fa[x]==x) return x;\n    else return fa[x]=findset(fa[x]);\u8fd9\u6837\u5c31\u538b\u7f29\u8def\u5f84\u5566\n}\nvoid unionset(int x,int y)\n{\n    int fax=findset(x);\n    int fay=findset(y);\n    if(fax!=fay) fa[fax]=fay;\n}\nvoid kruskal()//\u4e2a\u4eba\u559c\u6b22\u4f18\u5148\u961f\u5217\u5b58\u8fb9\uff0cSTL+1\n{\n    int nos=n;\n    for(;;)\n    {\n        stu t=q.top();\n        q.pop();\n        if(findset(t.x)==findset(t.y)) continue;//\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\uff0c\u4e0d\u91c7\u7528\u8be5\u8def\u5f84\uff0c\u4fdd\u8bc1\u7b2c\u4e00\u95ee\u4e3an-1\n        unionset(t.x,t.y);//\u4e24\u70b9\u5408\u5e76\n        nos--;//\u96c6\u5408\u53d8\u5c11\n        ans=t.dis;//\u8bb0\u5f55\u5f53\u524d\u6700\u957f\u5206\u91cf\n        if(nos==1) return ;//\u53ea\u6709\u4e00\u4e2a\u96c6\u5408\uff0c\u5219\u5168\u90e8\u8054\u901a\n    } \n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) \n        fa[i]=i;\n    stu t;\n    for(int i=1;i<=m;i++)\n    {   \n       cin>>t.x>>t.y>>t.dis;\n       q.push(t);//\u5c06\u8fb9\u538b\u5165\u4f18\u5148\u961f\u5217\n    }\n    kruskal();\n    cout<<n-1<<\" \"<<ans<<endl;\n}\n```",
        "postTime": 1505484277,
        "uid": 13994,
        "name": "panzheng1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u611f\u89c9\u7528kruskal\u7b97\u6cd5\u4f1a\u7b80\u5355\u5f88\u591a\uff0c\u4f46\u662f\u524d\u9762wa\u4e86\u5f88\u591a\u6b21\uff0c\u68c0\u67e5\u597d\u4e45\u624d\u53d1\u73b0\u5176\u5b9e\u662f\u56e0\u4e3a\u8fde\u63a5\u4e24\u4e2a\u70b9\u65f6\uff0c\u4e0d\u80fd\u53ea\u628a\u5176\u4e2d\u4e00\u4e2a\u70b9\u5e76\u5165\u53e6\u4e00\u4e2a\u70b9\u7684\u96c6\u5408\uff0c\n\n\u800c\u662f\u8981\u5c06\u5176\u4e2d\u4e00\u4e2a\u70b9\u6240\u5c5e\u7684\u6574\u4e2a\u96c6\u5408\u90fd\u4e0e\u5176\u5408\u5e76\uff0c\u6240\u4ee5\uff0c\u65e2\u7136\u8fd9\u6837\uff0c\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5c31\u76f4\u63a5\u5c06\u4e24\u4e2a\u6839\u8282\u70b9\u76f8\u8fde\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u628a\u4e00\u4e2a\u6839\u8282\u70b9\u76f4\u63a5\u63a5\u5728\u53e6\u4e00\u4e2a\u70b9\u4e0a\u662f\u4e3a\u4e86\u51cf\u5c0f\u6df1\u5ea6\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct abc{//\u5b9a\u4e49\u7ed3\u6784\u4f53\n    int from,want,price;\n};\nint n,m;abc s[50010];int z[400];\nint find(int x)//\u627e\u5230\u6839\u8282\u70b9\n{\n    while(z[x]!=x)\n        x=z[x];\n    return x;        \n}\nbool cmp(abc x,abc y)\n{\n    return x.price<y.price;\n}\nint main()\n{\n    int i,tot=0;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n        scanf(\"%d%d%d\",&s[i].from,&s[i].want,&s[i].price);\n    sort(s+1,s+m+1,cmp);//\u6392\u5e8f\n    for(i=1;i<=n;i++)\n        z[i]=i;\n    for(i=1;i<=m;i++)\n    {\n        if(find(s[i].from)!=find(s[i].want)) //\u5fc5\u987b\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u624d\u80fd\u9009\n        {\n            if(find(s[i].from)<find(s[i].want)) z[find(s[i].want)]=z[find(s[i].from)];//\u6ce8\u610f\u8fd9\u91cc\u96c6\u5408\u7edf\u4e00\u628a\u6839\u8282\u70b9\u8bbe\u4e3a\u5c0f\u7684\u90a3\u4e2a\uff0c\u9632\u6b62\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u6bd4\u59821\u7684\u6839\u8282\u70b9\u662f2\uff0c2\u7684\u6839\u8282\u70b9\u662f1\uff0c\u90a3\u5230\u5e95\u8c01\u662f\u771f\u6b63\u7684\u6839\u8282\u70b9\u5462\uff1f\u663e\u7136\u6ca1\u6709\uff0c\u6240\u4ee5\u8981\u7edf\u4e00\u4e00\u4e2a\u6807\u51c6\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u8fd9\u4e2a\u5728\u6211\u5f53\u521d\u5199\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u5751\u4e86\u6211\u597d\u4e45o(\u2565\ufe4f\u2565)o\n            else z[find(s[i].from)]=z[find(s[i].want)];\n            tot++;        //tot\u8bb0\u5f55\u5df2\u7ecf\u9009\u62e9\u7684\u8fb9\u7684\u4e2a\u6570\n        }\n        if(tot==n-1) //\u7ecf\u8fc7\u63a8\u7406\u53ef\u4ee5\u5f97\u51fa\uff0c\u8fde\u63a5n\u4e2a\u70b9\u6700\u5c11\u9700\u8981n-1\u6761\u8fb9\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u5224\u65ad\u662f\u4e0d\u662f\u6240\u6709\u70b9\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u53ea\u8981\u9009\u62e9\u4e86n-1\u6761\u8fb9\n```\n{//\u5e76\u4e14\u6ca1\u6709\u51fa\u73b0\u73af\u6765\u6d6a\u8d39\u8fb9\u7684\u8bdd\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u8fde\u5b8cn\u6761\u8fb9\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u505c\u4e0b\u5e76\u8f93\u51fa\u4e86\n```cpp\n            printf(\"%d %d\",n-1,s[i].price);\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1503979812,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "**prim\u7b97\u6cd5**\n\n\u7b97\u6cd5\u6211\u5c31\u4e0d\u60f3\u8bb2\u4e86\uff0c\u7f51\u4e0a\u6709\u5f88\u591a\u3002\n\n\u6211\u60f3\u8bb2\u7684\u662f\u90bb\u63a5\u8868\u3002\n\n\u4e0d\u4f1a\u53c8\u61d2\u5f97\u770b\u6570\u636e\u7ed3\u6784\u4e66\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u770b\u4e00\u770b\u3002\u5e0c\u671b\u80fd\u6709\u5e2e\u52a9 :)\n\n\n\n\n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=310;\nconst int oo=1000000000; \nint tot,head[MAXN];//head[i]\u8868\u793a\u9876\u70b9i\u7b2c\u4e00\u6761\u8fb9\u7684\u7f16\u53f7 \nint vis[MAXN];//\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6709\u54ea\u4e9b\u70b9 vis[i]==1 \u8868\u793a\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d \nint dis[MAXN];//dis[i]\u8868\u793a\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u6240\u6709\u70b9\u5230 i \u7684\u8ddd\u79bb\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u662f\u591a\u5c11 \nint N,M;\nstruct als//\u6211\u4eec\u9700\u8981\u7ed9\u4e00\u4e2a\u9876\u70b9\u53d1\u51fa\u7684\u6240\u6709\u8fb9\u7f16\u53f7\uff0c\u6bcf\u6761\u8fb9\u53ea\u8981\u8bb0\u4e0b\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u9876\u70b9\u6240\u6709\u8fb9 \n{ \n    int next;//\u6b64\u9876\u70b9\u4e0b\u4e00\u6761\u8fb9\u7684\u7f16\u53f7 \n    int to;//\u6b64\u9876\u70b9\u53d1\u51fa\u7684\u8fd9\u4e00\u6761\u8fb9\u7684\u7f16\u53f7 \n    int w; //\u6b64\u9876\u70b9\u53d1\u51fa\u7684\u8fd9\u4e00\u6761\u8fb9\u7684\u6743\u503c \n}s[MAXN*MAXN];//\u90bb\u63a5\u8868 \u521d\u5b66\u8005\u5efa\u8bae\u7528\u90bb\u63a5\u77e9\u9635\u3002\u4f46\u90bb\u63a5\u8868\u5728\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u90fd\u6bd4\u90bb\u63a5\u77e9\u9635\u66f4\u4f18 \n//\u8bf4\u660e\u4e0b\uff0cs\u7684\u4e0b\u6807\u662f\u8fb9\u7684\u7f16\u53f7\uff0chead\u7684\u4e0b\u6807\u662f\u70b9\u7684\u5e8f\u53f7\u3002\n//\u5982\u679c\u6211\u4eec\u8981\u626b\u63cf\u9876\u70b9i\u7684\u6240\u6709\u8fb9 ,\u901a\u8fc7head[i]\u5c31\u53ef\u4ee5\u627e\u5230\u4ed6\u7684\u7b2c\u4e00\u6761\u8fb9\u3002\u7136\u540e\u901a\u8fc7\u8fd9\u4e00\u6761\u8fb9\u8bb0\u5f55\u7684next\uff08\u4e0b\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\uff09\n//\u4e0b\u4e00\u6761\u8fb9\u53c8\u8bb0\u4e86\u4e0b\u4e0b\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u627e\u5230i\u7684\u6240\u6709\u8fb9\u3002\n//\u600e\u4e48\u77e5\u9053\u662f\u6700\u540e\u4e00\u6761\u8fb9\u5462\uff0c\u5f88\u663e\u7136\u6211\u4eec\u5728\u52a0\u7b2c\u4e00\u6761\u8fb9\u7684\u65f6\u5019\u4ed6\u7684next\u662f0\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5\u6b64\u5224\u65ad \nvoid add(int x,int y,int z)\n{\n    s[++tot]=(als){head[x],y,z};head[x]=tot;\n    s[++tot]=(als){head[y],x,z};head[y]=tot;\n} //\u52a0\u8fb9\uff08\u65e0\u5411\u8fb9\uff09 \nvoid init()\n{\n    cin>>N>>M;\n    for(int x,y,z,i=1;i<=M;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);\n    }\n    for(int i=1;i<=N;i++)\n        dis[i]=oo;//dia\u6570\u7ec4\u521d\u59cb\u5316 \n}\nvoid work()\n{\n    int ans=0;\n    vis[1]=1;//\u4ece\u8282\u70b91\u5f00\u59cb\uff0c\u5176\u5b9e\u4ece\u54ea\u4e2a\u5f00\u59cb\u90fd\u4e00\u6837\u3002\n    for(int i=head[1];i;i=s[i].next)//\u90bb\u63a5\u8868\u7ecf\u5178\u8bed\u53e5\u8fd9\u91cci\u7684\u521d\u503c\u7684\u662fhead[1],\u5982\u679c\u662fhead[j]\u5c31\u4f1a\u628aj\u53d1\u51fa\u7684\u6240\u6709\u8fb9\u626b\u4e00\u904d \n        dis[s[i].to]=s[i].w; \n    for(int i=1;i<N;i++)\n    {\n        int ID,minn=oo;\n        for(int j=1;j<=N;j++)\n        {\n            if(!vis[j]&&dis[j]<minn)//\u5982\u679c\u8282\u70b9j\u4e0d\u5728\u6700\u5c0f\u751f\u6210\u6811\u91cc\uff0c\u5e76\u4e14\u4ece\u5f53\u524d\u6765\u770b\u5c06\u4ed6\u52a0\u5165\u6700\u4f18\n            {ID=j;minn=dis[j];}//\u90a3\u4e48\u5c31\u628a\u4ed6\u7684\u7f16\u53f7\u548c\u9700\u52a0\u5165\u7684\u8fb9\u7684\u6743\u503c\u8bb0\u4e0b\u6765  \n        }\n        vis[ID]=1;\n        ans=max(ans,minn);\n        for(int j=head[ID];j;j=s[j].next)\n```\n{//\u65e2\u7136\u65b0\u52a0\u5165\u4e86\u9876\u70b9ID\uff0c\u90a3\u4e2a\u4e5f\u5c31\u610f\u5473\u7740\u5c06\u4e00\u4e9b\u70b9\u52a0\u5165\u6709\u6743\u503c\u66f4\u5c0f\u7684\u8fb9\u53ef\u4ee5\u9009\n\n```cpp\n            int t=s[j].to,wi=s[j].w;\n            if(!vis[t]&&dis[t]>wi) \n            dis[t]=wi;//\u66f4\u65b0dis\u7684\u5185\u5bb9 \n        }\n    }\n    cout<<N-1<<' '<<ans<<endl;\n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n```",
        "postTime": 1502119394,
        "uid": 9282,
        "name": "\u6d6e\u5c18ij",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "prim\u7684pascal\u7b97\u6cd5 \u5177\u4f53\u7684\u90a3\u73a9\u610f\u6211\u4e5f\u5c31\u4e0d\u8bf4\u4e86\u6211\u5728\u53e6\u4e00\u9898P2820\uff08\u5c40\u57df\u7f51\uff09\u5199\u4e86\uff08\u521a\u63d0\u4ea4\u53ef\u80fd\u6ca1\u8fc7\uff09\n\n\u9996\u5148\u6709\u4e00\u4e2a\u771f\u7684\u662f\u975e\u5e38\u68d2\u7684\u5c31\u662f\u53ea\u8981\u662f\u5168\u90e8\u8054\u901a\u5c31\u597d\u4e86\u90a3\u4e48\u4ed6\u7684\u8fb9\u6570\u5c31\u662f\u8282\u70b9\u6570-1 \u6240\u4ee5\u4e0b\u9762\u76f4\u63a5\u8f93\u51fan-1\u5c31\u597d\u4e86\n\n\n\n\n\n\n\n\n\n```cpp\nvar d:array[0..1000] of longint;\n    b:array[1..1000] of boolean;\n    g:array[1..1000,1..1000] of longint;\n    i,j,k,m,n,l,p,q,max,min,total,sum:longint;\nprocedure init;\nbegin\n    assign(input,'city.in');\n    reset(input);\n    assign(output,'city.out');\n    rewrite(output);\nend;\nbegin\n    init;\n    readln(n,k);\n    for total:=1 to k do\n    begin\n      readln(i,j,m);\n      g[i,j]:=m; g[j,i]:=m;\n    end;\n    total:=0;\n    filldword(d,sizeof(d)>>2,maxlongint>>1);\n    fillchar(b,sizeof(b),true);\n    d[1]:=0;\n    for i:=1 to n do\n    begin\n      min:=maxlongint;\n      for j:=1 to n do\n      if b[j] and (d[j]<min) then \u6ee1\u8db3\u6761\u4ef6\u5c31\u597d\u4e86\n      begin\n        min:=d[j];\n    k:=j;\n      end;\n      b[k]:=false;\n      inc(sum,min);    \u52a0\u4e00\u4e0b\u5ef6\u5e74\u76ca\u5bff\n      if min>max then max:=min;   \u6bd4\u4ed6\u5927\u5c31\u8d4b\u503c\n      for j:=1 to n do\n       if b[j] and (g[k,j]<d[j]) and (g[k,j]<>0) then d[j]:=g[k,j];   \u4e00\u5b9a\u8981\u52a0<>0\u90a3\u73a9\u610f \u8981\u4e0d\u7136\u539f\u672c\u90fd\u662fmaxlongint>>1 \n   end;\n   writeln(n-1,' ',max);    n-1\u770b\u7740\u975e\u5e38\u68d2 max\u987e\u540d\u601d\u4e49\u5c31\u662f\u6700\u5927\u5206\u503c\u5f97\u90a3\u73a9\u610f\n   close(output);\nend.\n```\n\u8fd9\u9053\u9898\u6211\u4e5f\u4e0d\u591a\u8bb2\u4e5f\u5c31\u662f\u628aP2820\u7684\u7a0b\u5e8f\u52a0\u4e862\u884c\u7136\u540e\u7a0d\u5fae\u4fee\u6539\u4e86\u4e00\u4e0b\u5c31\u597d\u4e86\nhttps://www.luogu.org/problem/show?pid=2820\n",
        "postTime": 1489388174,
        "uid": 28595,
        "name": "Hydroxyl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u6069\u6211\u6ce8\u610f\u5230\u697c\u4e0b\u90fd\u662f\u7528\u7684\u6700\u5c0f\u751f\u6210\u6811\u505a\u7684\u6700\u5c0f\u74f6\u9888\u6811\uff0c\u8fd9\u91cc\u8d34\u4e00\u4e2a\u7528Floyd\u7b97\u6cd5\u6c42\u70b9\u5bf9\u6700\u5c0f\u74f6\u9888\u8def\u7684\u7b97\u6cd5\uff0c\u518d\u5728\u5176\u4e2d\u627e\u4e00\u4e2a\u6700\u5927\u7684\u5373\u53ef\u3002\u7528Floyd\u7b97\u6cd5\u6c42\u70b9\u5bf9\u6700\u5c0f\u74f6\u9888\u8def\uff0c\u7528\u5218\u6c5d\u4f73\u7684\u8bdd\uff0c\u5c31\u662f\u201c\u628aFloyd\u7b97\u6cd5\u4e2d\u7684\u2018\u4e4b\u548c\u2019\uff0c'\u53d6\u6700\u5c0f\u503c'\u6539\u6210'\u6700\u5927\u503c'\u548c'\u53d6\u6700\u5c0f\u503c'\u201d\u5373\u53ef.\n\n[codec]\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#define INF 100000000\nusing namespace std;\nint g[310][310];\nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(i!=j) g[i][j]=INF;\n            else g[i][j]=0;\n    for(int i=1;i<=m;i++)\n    {\n        int u,v;cin>>u>>v;\n        cin>>g[u][v];\n        g[v][u]=g[u][v];\n    }\n    for(int k=1;k<=n;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                if(i!=k&&k!=j&&i!=j)\n                    if(g[i][j]>max(g[i][k],g[k][j]))\n                        g[i][j]=max(g[i][k],g[k][j]);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(g[i][j]>ans) ans=g[i][j];\n    cout<<n-1<<\" \"<<ans<<endl;\n    return 0;\n}\n[\\codec]\n```",
        "postTime": 1470318098,
        "uid": 8662,
        "name": "Mys_C_K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u514b\u7f57\u65af\u5361\u5c14\u7b97\u6cd5\n\n\u56e0\u4e3a\u8981\u6c42\u6700\u77ed\u7684\u8def\u5f84\n\n\u6240\u4ee5\u4f18\u5148\u8003\u8651\u6743\u503c\u5c0f\u7684\u8fb9\n\n\u4f46\u5982\u679c\u5f62\u6210\u56de\u8def\n\n\u53cd\u800c\u4f1a\u589e\u52a0\u8def\u7a0b\n\n\u6240\u4ee5\u5148\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u9009\u53d6\u8f83\u5c0f\u7684\u8fb9\n\n\u5224\u65ad\u5b83\u662f\u5426\u4e0e\u5df2\u9009\u53d6\u7684\u8fb9\u5f62\u6210\u56de\u8def\n\n\u76f4\u5230\u627e\u5230n-1\u6761\u8fb9\n\n```delphi\nvar\n  n,i,j,m,ans:longint;\n  a:array[1..50000,1..3]of longint;\n  father:array[1..50000]of longint;\nfunction getfather(v:longint):longint;//\u5bfb\u627e\u6839\u8282\u70b9\nbegin\n  if father[v]=v then\n    exit(v);\n  father[v]:=getfather(father[v]);\n  exit(father[v]);\nend;\n\nprocedure merge(x,y:longint);//\u5408\u5e76\u4e24\u96c6\u5408\nvar\n  xx,yy:longint;\nbegin\n  xx:=getfather(x);\n  yy:=getfather(y);\n  father[xx]:=yy;\nend;\n\nfunction judge(x,y:longint):boolean;//\u5224\u65ad\u662f\u5426\u5728\u4e00\u96c6\u5408\u4e2d\nvar\n  xx,yy:longint;\nbegin\n  xx:=getfather(x);\n  yy:=getfather(y);\n  exit(xx=yy);\nend;\n\nprocedure sort(l,r: longint);//\u5feb\u6392\n var i,j,x,y: longint;\n begin\n  i:=l;\n  j:=r;\n  x:=a[(l+r) div 2,3];\n   repeat\n    while a[i,3]<x do\n    inc(i);\n    while x<a[j,3] do\n     dec(j);\n    if not(i>j) then\n    begin\n     y:=a[i,2];\n     a[i,2]:=a[j,2];\n     a[j,2]:=y;\n     y:=a[i,1];\n     a[i,1]:=a[j,1];\n     a[j,1]:=y;\n     y:=a[i,3];\n     a[i,3]:=a[j,3];\n     a[j,3]:=y;\n     inc(i);\n     j:=j-1;\n     end;\n   until i>j;\n  if l<j then\n  sort(l,j);\n  if i<r then\n  sort(i,r);\n end;\n\nbegin\n readln(m,n);\n for i:=1 to n do\n begin\n readln(a[i,1],a[i,2],a[i,3]);//\u8bfb\u5165\n father[i]:=i;//\u7236\u8282\u70b9\u6570\u7ec4\u521d\u59cb\u5316\n end;\n sort(1,n);//\u6392\u5e8f\n i:=0;\n repeat\n inc(i);\n if judge(a[i,1],a[i,2]) then continue//\u5982\u679c\u5728\u4e00\u4e2a\u96c6\u5408\u5c31\u9000\u51fa\n else begin//\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u5c31\u5408\u5e76\n inc(ans);\n merge(a[i,1],a[i,2]);\n end;\n until ans=m-1;//\u76f4\u5230\u627e\u51fan-1\u6761\u8def\n writeln(ans,' ',a[i,3]);\nend.\n\n```",
        "postTime": 1454468677,
        "uid": 14567,
        "name": "\u7a7a\u843d\u79bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u7528Prim\u2026\u2026\n\n```cpp\n\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nint g[310][310];\nbool pd[310]={false};//0 is false;\nint Min[310];\nint Mst=-1;//\u6b64\u5904\u4e3a\u627e\u6700\u5c0f\u6743\u503c\u7ec4\u7684\u6700\u5927\u503c \nint main()\n{\n    int n,m;\n    cin>>n>>m;\n    for(int i=0;i<=300;i++)//\u5c06\u90bb\u63a5\u77e9\u9635\u8d4b\u521d\u503c \n      for(int j=1;j<=300;j++)\n        g[i][j]=2000000000;\n    for(int i=1;i<=m;i++)//\u8f93\u5165\u90bb\u63a5\u77e9\u9635 \n      {\n        int x,y;\n        cin>>x>>y;\n        cin>>g[x][y];\n        g[y][x]=g[x][y];\n      }\n    for(int i=1;i<=309;i++)//\u6700\u5c0f\u6743\u503c\u6570\u7ec4\u8d4b\u521d\u503c\uff0c\u6ca1\u8fb9\u5219\u4e3a20\u4ebf\n      Min[i]=g[1][i];\n    pd[1]=1;//\u6807\u8bb0\u7b2c\u4e00\u4e2a\u70b9\n    for(int i=1;i<n;i++)\n      {\n        int j;\n        int zuixiao=2000000000;\n        int zui;//zui\u5b58\u6700\u5c0f\u503c\u7684 \n        for(j=1;j<=n;j++)//\u64c2\u53f0\u6bd4\u8f83\u627e\u6700\u5c0f\u7684\n          {\n            if(pd[j]==0)//\u6ca1\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\n              if(zuixiao>Min[j])\n                {zuixiao=Min[j];zui=j;}\n          }\n        pd[zui]=1;//\u6807\u8bb0\n        if(Mst<zuixiao)\n          Mst=zuixiao;\n        for(int k=1;k<=n;k++)//\u66f4\u65b0\n          {\n            if(g[zui][k]<Min[k]&&pd[k]==0)\n              Min[k]=g[zui][k];\n          }\n\n      }\n      cout<<n-1<<\" \"<<Mst; \n} \n\n```",
        "postTime": 1454464979,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "s\u5f88\u5bb9\u6613\u6c42\u51fa\uff0c\u65e0\u8bba\u6570\u636e\u5177\u4f53\u662f\u4ec0\u4e48\uff0cs\u6052\u7b49\u4e8en-1\uff1b\n\nmax\u4e5f\u6bd4\u8f83\u5bb9\u6613\u6c42\u51fa\uff0c\u679a\u4e3e\u8fb9\uff0c\u5224\u65ad\u6240\u6709\u5206\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5206\u503c\u7684\u9053\u8def\u80fd\u591f\u628a\u6240\u6709\u7684\u4ea4\u53c9\u8def\u53e3\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8fde\u901a\u8d77\u6765\uff0cmax\u5373\u4e3a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u5206\u503c\u6700\u5c0f\u7684\u8fb9\u7684\u5206\u503c\uff0c\u5224\u65ad\u7528\u641c\u7d22\u5373\u53ef\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nint n,m,i,j,u,v,map[301][301],answer=9999999;\nbool YBI[301];\nbool DFS (int maximum,int No=1)\n{\n    if (No==1)\n    for (int i=1;i<=n;i++)\n    YBI[i]=1;\n    YBI[No]=0;\n    for (int i=1;i<=n;i++)\n    if (YBI[i]&&maximum>=map[No][i])\n    DFS(maximum,i);\n    for (int i=1;i<=n;i++)\n    if (YBI[i])\n    return 0;\n    return 1;\n}\nint main ()\n{\n    cin>>n>>m;\n    cout<<n-1;\n    for (i=1;i<=n;i++)\n    for (j=1;j<=n;j++)\n    map[i][j]=9999999;\n    for (i=1;i<=m;i++)\n    {\n        cin>>u>>v;\n        cin>>map[u][v];\n        map[v][u]=map[u][v];\n    }\n    for (i=1;i<=n;i++)\n    for (j=1;j<=n;j++)\n    if (map[i][j]<answer&&DFS(map[i][j]))\n    answer=map[i][j];\n    cout<<' '<<answer;\n    return 0;\n}\n\n```",
        "postTime": 1434111352,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u7136\u540eKruscal\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6700\u5927\u7684\u4e00\u6761\u8fb9\u5373\u4e3a\u6240\u6c42\n",
        "postTime": 1428479880,
        "uid": 5147,
        "name": "Bryant",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "#\\_\u56e0\u4e3a\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898  \u6240\u4ee5\u4e0d\u8fc7\u591a\u5bf9kruskal\u7b97\u6cd5\u8fdb\u884c\u8bf4\u660e \\_\n\n#\u7740\u91cd\u8bf4\u660e\u6280\u5de7\n\n\n\n\n\n\n\n    \n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std; \nconst int maxn = 309, maxm=50009;\nint f[maxn]={0};\ninline int read()\n{\n    int x=0;char a=getchar();\n    while ( a<'0' || a>'9' )    a=getchar();\n    while ( a>='0' && a<='9'){\n        x=10*x+a-'0';    a=getchar();\n    }\n    return x;\n}\ninline int find(int x)\n{\n    return x==f[x] ? x:f[x]=find(f[x]);\n}\n//\u8def\u5f84\u538b\u7f29\u5f62 \u7684\u57fa\u672c\u6a21\u677f \u8eab\u4e3a\u4e00\u4e2aioer \u4f60\u5fc5\u987b\u638c\u63e1\nstruct Point{\n    int u,v,w;\n}e[maxm];\ninline bool cmp(const Point &x,const Point &y)\n{\n    return x.w<y.w;\n}\n//sort\u7684\u6bd4\u8f83\u51fd\u6570 \u4e0d\u52a0 \u4f1a\u51fa\u73b0\u4e71\u4e03\u516b\u7cdf\u7684\u62a5\u9519 \nint n,m;int mx=0;\nvoid init()\n{\n    n=read();    m=read();\n    for (int i = 1; i <= n; i++ )    f[i]=i;\n    for (int i = 1; i <= m; i++)\n    {\n        e[i].u=read();e[i].v=read();e[i].w=read();\n    }\n}\ninline bool merge(int u,int v)\n{\n    int x=find(u);int y=find(v);\n    if (  x!=y )\n    {\n        f[x]=y;\n        return true;\n    }\n    return false;\n}\n//\u5224\u65ad + \u5408\u5e76 \nvoid solve()\n{\n    sort(e+1,e+m+1,cmp);\n    int cnt= 0; \n    for (int i = 1; i <= m; i++)\n    {\n        if ( merge(e[i].u,e[i].v))\n        {\n            cnt++; \n            if ( mx < e[i].w )\n                mx = e[i].w;\n        }\n        if ( cnt==n-1 )    break;\n    }\n}\nint main()\n{\n//\u5206\u6bb5\u7f16\u5199\u5bb9\u6613\u6392\u9519\n    init();\n    solve();\n    printf(\"%d %d\\n\",n-1,mx);\n    return 0;\n}\n```",
        "postTime": 1508417357,
        "uid": 19502,
        "name": "\u9b54\u541b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    },
    {
        "content": "\u7528kruskal\u7684\u65b9\u6cd5\u6765\u6c42\u89e3\u6700\u5c0f\u751f\u6210\u6811\uff0c\n\n\u7b2c\u4e00\u95ee\u4e0d\u7528\u591a\u8bf4\uff0c\u56e0\u4e3a\u8981\u8fde\u63a5n\u4e2a\u70b9\uff0c\u6700\u5c11\u5c31\u8981n-1\u6761\u8fb9\u3002\u3002\u3002\u3002\u3002\u3002\n\nKruskal\u7684\u5e76\u67e5\u96c6\u6211\u767e\u65e0\u804a\u8d56\u7684\u5199\u4e86\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u849f\u84bb\uff0c\uff0c\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m,ans;\nint fa[2005],rk[2005];\nstruct node{\n    int u,v,w;\n} e[10005];\nbool cmp(node x,node y){\n    return x.w<y.w;\n}\nint find_set(int x){\n    if (fa[x]!=x)\n        fa[x]=find_set(fa[x]);\n    return fa[x];\n}\nvoid Union(int x,int y){\n    int root_x=find_set(x);\n    int root_y=find_set(y);\n    if (root_x==root_y)\n        return;\n    if (rk[x]<rk[y])\n        fa[root_x]=root_y;\n    else\n    if (rk[x]>rk[y])\n        fa[root_y]=root_x;\n    else\n        fa[root_x]=root_y,rk[y]++;\n}\nvoid Kruskal(){\n    for (int i=1; i<=m; i++)\n        if (find_set(e[i].u)!=find_set(e[i].v)){\n            Union(e[i].u,e[i].v);\n            ans=e[i].w;\n        }\n}\nint main()\n{\n    freopen(\"city.in\",\"r\",stdin);\n    freopen(\"city.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1; i<=n; i++)\n        fa[i]=i,rk[i]=0;\n    for (int i=1; i<=m; i++)\n        scanf(\"%d%d%d\",&e[i].u,&e[i].v,&e[i].w);\n    sort(e+1,e+m+1,cmp);\n    Kruskal();\n    printf(\"%d %d\\n\",n-1,ans);\n    return 0;\n}\n```",
        "postTime": 1504441754,
        "uid": 14908,
        "name": "Jack_Homes_Huang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2330 \u3010[SCOI2005]\u7e41\u5fd9\u7684\u90fd\u5e02\u3011"
    }
]