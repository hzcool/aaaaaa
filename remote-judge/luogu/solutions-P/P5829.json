[
    {
        "content": "# P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811 \u9898\u89e3\n## \u9898\u610f\u7b80\u8ff0\n\u7ed9\u4f60\u4e00\u4e2a\u4e32 $S$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 $\\text{border}$ \u4e3a\u5b83\u7684\u975e\u672c\u8eab\u7684\u65e2\u662f\u5b83\u7684\u524d\u7f00\u53c8\u662f\u5b83\u7684\u540e\u7f00\u7684\u5b57\u7b26\u4e32\uff0c$m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e24\u4e2a\u6570 $i,j$\uff0c\u8be2\u95ee $S_{1...i}$ \u548c $S_{1...j}$ \u7684\u6700\u957f\u516c\u5171 $\\text{border}$\u3002\n\n$1\\le|S|\\le10^6,1\\le i,j\\le|S|,1\\le m\\le10^5$\uff0c\u5b57\u7b26\u96c6\u4e3a $26$ \u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\n## \u89e3\u6cd5\n\u9996\u5148\u6211\u4eec\u6765\u770b\u53e6\u5916\u4e00\u4e2a\u4e0e\u5b83\u76f8\u5173\u7684\u95ee\u9898\uff1a\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709 $\\text{border}$\uff1f\n\n\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u65e2\u662f $S$ \u7684\u524d\u7f00\u53c8\u662f $S$ \u7684\u540e\u7f00\uff0c\u90a3\u4e48\u6211\u4eec\u628a $S$ \u81ea\u5df1\u5e73\u79fb\u4e00\u4e0b\u5c31\u53ef\u4ee5\u524d\u540e\u91cd\u5408\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5339\u3002\u3002\u3002\u3002\u3002\u8bf6\uff1f\u8fd9\u4e0d\u662f $\\text{KMP}$ \u4e48\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u539f\u4e32 $\\text{KMP}$ \u4e00\u904d\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c$S_{1\\cdots next(|S|)}$ \u548c $S_{|S|-next(|S|)+1\\cdots |S|}$ \u662f\u5b8c\u5168\u4e00\u6837\u7684\uff01\u4e8e\u662f $S^\\prime=S_{1\\cdots next(|S|)}$ \u5c31\u662f $S$ \u7684\u4e00\u4e2a $\\text{border}$\u3002\n\n\u90a3\u4e48 $S$ \u662f\u5426\u8fd8\u6709\u5176\u4ed6 $\\text{border}$ \u5462\uff1f\u6709\u3002\u6839\u636e\u4e0a\u6587\uff0c$S^{\\prime\\prime}= S_{1\\cdots next(next(|S|))}$ \u662f $S^\\prime=S_{1\\cdots next(|S|)}$ \u7684\u4e00\u4e2a $\\text{border}$\uff0c\u4e8e\u662f $S^{\\prime\\prime}$ \u65e2\u662f $S^\\prime$ \u7684\u524d\u7f00\u53c8\u662f $S^\\prime$ \u7684\u540e\u7f00\u3002\u7531\u4e8e $S^\\prime$ \u65e2\u662f $S$ \u7684\u540e\u7f00\u53c8\u662f $S$ \u7684\u524d\u7f00\uff0c\u6240\u4ee5 $S^{\\prime\\prime}$ \u65e2\u662f $S$ \u7684\u524d\u7f00\u7684\u524d\u7f00\u53c8\u662f $S$ \u7684\u540e\u7f00\u7684\u540e\u7f00\uff0c\u6240\u4ee5 $S^{\\prime\\prime}$ \u65e2\u662f $S$ \u7684\u524d\u7f00\u53c8\u662f $S$ \u7684\u540e\u7f00\uff0c\u4e5f\u662f $S$ \u7684 $\\text{border}$\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c$S$ \u7684\u6240\u6709 $\\text{border}$ \u4e3a\uff1a$S_{1\\cdots next(|S|)},S_{1\\cdots next(next(|S|))},S_{1\\cdots next(next(next(|S|)))},\\cdots$\u3002\n\n\u6211\u4eec\u518d\u6765\u770b\u770b\u539f\u9898\uff1a\u6c42\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 $\\text{border}$\u3002\n\n\u8001\u5957\u8def\uff0c\u5148\u5bf9\u539f\u4e32 $\\text{KMP}$ \u4e00\u904d\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8df3\u4e24\u4e2a\u524d\u7f00\u7684 $next$ \u6c42\u5230\u4e24\u4e2a\u524d\u7f00\u7684\u6240\u6709 $\\text{border}$\u3002\n\n\u7b49\u7b49\uff0c\u8fd9\u4e0d\u662f\u66b4\u529b\u6c42 $\\text{LCA}$ \u7684\u601d\u8def\u5417\uff1f\u5148\u66b4\u529b\u627e\u5230\u6240\u6709\u7956\u5148\uff0c\u518d\u5224\u65ad\u76f8\u4ea4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 $next$ \u6570\u7ec4\u5efa\u4e00\u68f5\u6811\u51fa\u6765\uff08\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 $\\text{AC}$ \u81ea\u52a8\u673a\u7684 $fail$ \u6811\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53eb\u5b83 $fail$ \u6811\uff09\uff0c\u5bb9\u6613\u53d1\u73b0\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 $\\text{border}$ \u5c31\u662f\u5b83\u4eec\u5728 $fail$ \u6811\u4e0a\u7684 $\\text{LCA}$\uff08\u5f53\u5b83\u4eec\u662f\u7956\u5148\u2014\u540e\u4ee3\u5173\u7cfb\u65f6\u9664\u5916\uff0c\u6b64\u65f6\u7ed3\u679c\u662f\u7956\u5148\u7684\u7236\u4eb2\uff09\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u672c\u9898\u7684\u505a\u6cd5\u5982\u4e0b\uff1a\n\n- \u5bf9\u539f\u4e32 $\\text{KMP}$ \u4e00\u904d\uff0c\u6c42\u51fa $next$ \u6570\u7ec4\uff1b\n- \u6784\u5efa $fail$ \u6811\uff1b\n- \u5728 $fail$ \u6811\u4e0a\u8dd1 $\\text{LCA}$\uff08\u500d\u589e\u548c $\\text{tarjan}$ \u90fd\u53ef\u4ee5\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<fstream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Set(a) memset(a,0,sizeof(a))\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define openf(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define re register\n#define ri re int\n#define il inline\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> inline T rd(T& x)\n{\n\tT f=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+(T)(c-'0');\n\tx*=f;\n\treturn x;\n}\nll rd(){ll x;rd(x);return x;}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int inf=1<<30;\n\nconst int N=1000005;\nint fa[N][22],n,m,dep[N];char s[N];\nint main()\n{\n\tscanf(\"%s\",s+1);n=strlen(s+1);\n\tfa[0][0]=fa[1][0]=0,dep[0]=0,dep[1]=1;\n\tfor(ri i=2,j=0;i<=n;++i)\n\t{\n\t\twhile(j!=0&&s[j+1]!=s[i]) j=fa[j][0];\n\t\tif(s[j+1]==s[i]) ++j;\n\t\tfa[i][0]=j,dep[i]=dep[j]+1;\n\t}\n\t//\u4ee5\u4e0a\u4e3akmp\n\t//\u4ee5\u4e0b\u4e3a\u500d\u589elca\n\tF(i,1,21) F(j,1,n) fa[j][i]=fa[fa[j][i-1]][i-1];\n\trd(m);\n\twhile(m--)\n\t{\n\t\tint x,y;rd(x);rd(y);if(dep[x]<dep[y]) swap(x,y);\n\t\tUF(i,21,0) if(dep[fa[x][i]]>=dep[y]) x=fa[x][i];\n\t\tUF(i,21,0) if(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\t\tprintf(\"%d\\n\",fa[x][0]);\n\t}\n\treturn 0;\n}\n```\n\u7a81\u7136\u611f\u89c9\u8fd9\u9898\u6709\u79cd\u5f3a\u884c\u4e8c\u5408\u4e00\u7684\u611f\u89c9\uff08\n****\n\u500d\u589e\u4e0d\u5f00 $-\\text O2$ \u592a\u6162\u4e86\uff0c\u6709\u51e0\u4e2a\u70b9\u4f1a $900ms$\u3002\u3002\u3002\u8fd9\u91cc\u518d\u8d34\u4e2a $\\text{tarjan}$ \u7684\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<fstream>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define Set(a) memset(a,0,sizeof(a))\n#define F(i,a,b) for(register int i=a,i##end=b;i<=i##end;++i)\n#define UF(i,a,b) for(register int i=a,i##end=b;i>=i##end;--i)\n#define openf(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\n#define re register\n#define ri re int\n#define il inline\ntypedef long long ll;\ntypedef unsigned long long ull;\ntemplate<typename T> inline T rd(T& x)\n{\n\tT f=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(; isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+(T)(c-'0');\n\tx*=f;\n\treturn x;\n}\nll rd(){ll x;rd(x);return x;}\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\nconst int inf=1<<30;\n\nconst int N=1000005;\nint next[N],n,m;char s[N];\nint fa[N];int get(int x){return fa[x]==x?x:fa[x]=get(fa[x]);}void merge(int x,int y){if((x=get(x))!=(y=get(y)))fa[x]=y;}\nbool vis[N];\nint head[N],to[2*N],nxt[2*N],tot;void add(int u,int v){to[++tot]=v;nxt[tot]=head[u];head[u]=tot;}//graph\nint head2[N],to2[2*N],nxt2[2*N],num[2*N],tot2;void add2(int u,int v,int w){to2[++tot2]=v;num[tot2]=w;nxt2[tot2]=head2[u];head2[u]=tot2;}//query\nint ans[N],x[N],y[N];\nvoid tarjan(int x)\n{\n\tvis[x]=true;\n\tfor(ri i=head[x];i;i=nxt[i]) if(!vis[to[i]]) {tarjan(to[i]);merge(to[i],x);}\n\tfor(ri i=head2[x];i;i=nxt2[i]) if(vis[to2[i]]) ans[num[i]]=get(to2[i]);\n}\nint main()\n{\n\tscanf(\"%s\",s+1);n=strlen(s+1);\n\tnext[0]=next[1]=0;F(i,1,n) fa[i]=i;\n\tfor(ri i=2,j=0;i<=n;++i)\n\t{\n\t\twhile(j!=0&&s[j+1]!=s[i]) j=next[j];\n\t\tif(s[j+1]==s[i]) ++j;\n\t\tnext[i]=j;\n\t}\n\tF(i,1,n) add(next[i],i);\n\trd(m);\n\tF(i,1,m){rd(x[i]);rd(y[i]);add2(x[i],y[i],i);add2(y[i],x[i],i);}\n\ttarjan(0);\n\tF(i,1,m) printf(\"%d\\n\",(ans[i]==x[i]||ans[i]==y[i])?next[ans[i]]:ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1576719329,
        "uid": 130151,
        "name": "WYXkk",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "[\u51e0\u5e74\u4e0d\u66f4\u65b0\u4e00\u6b21\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/RainbowCat/)\n\n**\u524d\u6392Orz\u51fa\u9898\u4eba\u548c\u6276\u82cf\u7237\u3002**\n\n\u5b8c\u5168\u6ca1\u542c\u8bf4\u8fc7border\u6811\u8fd9\u4e2a\u4e1c\u897f\u3002\u3002\u3002\u3002\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0cborder\u7684\u5b9a\u4e49\u548c\u6211\u4eec\u505akmp\u65f6\u6240\u6c42\u7684fail\u6570\u7ec4\u57fa\u672c\u4e00\u81f4\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u5bf9\u4e8eA<--fail--B<--fail--C\uff0cA\u4e0eC\u663e\u7136\u80fd\u4e5f\u5f62\u6210border\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u4f20\u9012\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728fail\u6570\u7ec4\u4e0a\u500d\u589e\uff0c\u4e8c\u5206\u6700\u9760\u53f3\u7684\u4ea4\u6c47\u70b9\u7f16\u53f7\uff0c\u8ba9\u4e24\u4e2a\u70b9\u500d\u589e\u53bb\u8df3\u5373\u53ef\uff0cO(nlog^2n)\u3002\n\n\u56de\u5fc6\u6811\u4e0a\u500d\u589elca\uff0c\u8fd9\u91cc\u4e4b\u6240\u4ee5\u8981\u4e8c\u5206\u7684\u539f\u56e0\u5c31\u662f\u6ca1\u6cd5\u628a\u4e24\u4e2a\u70b9\u63d0\u5230\u540c\u4e00\u9ad8\u5ea6\uff08\u8fd9\u91cc\u76f8\u5f53\u4e8e\u4ee5\u7f16\u53f7\u4f5c\u4e3a\u9ad8\u5ea6\uff0c\u56e0\u6b64\u6bcf\u4e2a\u70b9\u9ad8\u5ea6\u90fd\u4e0d\u540c\uff09\u3002\n\n\u6a21\u4eff\u6811\u4e0a\u500d\u589e\u7684\u5957\u8def\uff0c\u6309\u7167fail\u94fe\u957f\u5ea6\u7ed9\u6bcf\u4e2a\u70b9\u8bbe\u7f6e\u4e00\u4e0b\u9ad8\u5ea6\uff0c\u6811\u4e0a\u500d\u589e\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\uff0c\u5373O(\u80fd\u8fc7)\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f\u56e0\u4e3aborder\u4e0d\u80fd\u662f\u6574\u4e2a\u4e32\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u5fc5\u987b\u90fd\u8df3\u81f3\u5c11\u4e00\u6b21\u3002\n\n~~\uff08\u4e0d\u77e5\u9053\u8fd9\u4e2a\u662f\u4e0d\u662fborder\u6811\uff09~~\n\n\u4e0d\u8fc7\u672c\u9898\u5e76\u6ca1\u5fc5\u8981\u663e\u5f0f\u7684\u8fde\u8fb9\u5efa\u4e00\u9897\u6811\u51fa\u6765\u3002\n\n```cpp\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\nusing namespace std;\nconst int kmaxlog=25;\nconst int kmaxn=1000000+5;\nconst int ml=21;\nint fail[kmaxn];\nint fa[kmaxn][kmaxlog];\nint dis[kmaxn];\nchar s[kmaxn];\nint n,q;\nvoid init()\n{\n\tint p=0;\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\twhile(p&&s[p+1]!=s[i])\n\t\t\tp=fail[p];\n\t\tif(s[p+1]==s[i])++p;\n\t\tfail[i]=p;\n\t\tdis[i]=dis[p]+1;\n\t\tfa[i][0]=p;\n\t}\n\tfor(int k=1;k<=ml;++k)\n\t{\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tfa[i][k]=fa[fa[i][k-1]][k-1];\n\t}\n}\nint jmp(int x,int h)\n{\n\tif(dis[x]<=h)return x;\n\tfor(int i=ml;i>=0;--i)\n\t{\n\t\tif(dis[fa[x][i]]>h)\n\t\t\tx=fa[x][i];\n\t}\n\treturn fa[x][0];\n}\nint lca(int x,int y)\n{\n\tif(dis[x]<dis[y])swap(x,y);\n\tx=jmp(x,dis[y]);\n\tfor(int i=ml;i>=0;--i)\n\t{\n\t\tif(fa[x][i]!=fa[y][i])\n\t\t{\n\t\t\tx=fa[x][i];\n\t\t\ty=fa[y][i];\n\t\t}\n\t}\n\treturn fa[x][0];\n}\nint a,b;\nint main()\n{\n\tscanf(\"%s%d\",&s[1],&q);\n\tn=strlen(s+1);\n\tinit();\n\twhile(q--)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tprintf(\"%d\\n\",lca(a,b));\n\t}\n\treturn 0;\n}\n```\n\n\u521a\u770b\u5230\u9898\u65f6\u5019\u50bb\u4e86\u4ee5\u4e3ahash\u5c31\u80fd\u641e\uff0c\u8fd8\u770b\u9519\u4e86\u9898\uff0c\u65e5\u5e38\u4e22\u4eba\u3002",
        "postTime": 1576723131,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "# \u3010\u5b57\u7b26\u4e32\u3011\u3010P5830\u3011 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $S$\uff0c\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $S$ \u7684\u4e24\u4e2a\u524d\u7f00\uff0c\u6c42\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171 ``border`` \u7684\u957f\u5ea6\u3002\n\n\u6700\u957f\u516c\u5171 ``border`` \u7684\u542b\u4e49\u4e3a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 $T$\uff0c\u8bbe\u5176 ``Border`` \u96c6\u5408\u4e3a\u6240\u6709\u65e2\u662f $S$ \u7684\u524d\u7f00\u5b50\u4e32\u53c8\u662f $S$ \u7684\u540e\u7f00\u5b50\u4e32\u7684\u96c6\u5408\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171 ``border`` \u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684 ``Border`` \u96c6\u5408\u7684\u4ea4\u96c6\u4e2d\u957f\u5ea6\u6700\u957f\u7684\u5b57\u7b26\u4e32\u3002\n\n## Limitations\n\n$1 \\leq n \\leq 10^6$\n\n$1 \\leq m \\leq 10^5$\n\n## Solution\n\n**\u6ce8\u610f\uff0c\u8fd9\u7bc7\u9898\u89e3\u4e0d\u662f\u8fd9\u4e2a\u6a21\u677f\u7684\u6807\u51c6\u505a\u6cd5\uff0c\u4e5f\u4e0d\u662f\u6700\u7b80\u5355\u7684\u505a\u6cd5\u3002**\n\n~~\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 border \u5373\u4e3a\u4ed6\u4eec\u5728 border \u6811\u4e0a\u7684 LCA~~\n\n\u56e0\u4e3a\u521a\u8d77\u5e8a\u5c31\u88ab ``fa\u59d0\u59d0`` \u62c9\u6765\u9a8c\u9898\uff0c\u8111\u888b\u660f\u660f\u5fd8\u8bb0\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53ea\u80fd\u518d\u53e3\u80e1\u4e00\u4e2a\u94c1\u61a8\u61a8\u505a\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u6240\u6c42\u7684 ``border`` \u4e00\u5b9a\u65e2\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff0c\u53c8\u662f\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff0c\u56e0\u6b64\u4e00\u5b9a\u662f\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u540e\u7f00 \uff0c\u540c\u65f6\u6ce8\u610f\u5230\u7531\u4e8e\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 $T$ \u65e2\u662f\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u4e32\u7684 ``border``\uff0c\u53c8\u662f\u4e24\u4e2a\u4e32\u7684\u516c\u5171\u540e\u7f00\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u4e24\u4e2a\u4e32\u7684\u516c\u5171 ``border``\u3002\u5e76\u4e14\u8fd9\u4e2a\u6761\u4ef6\u663e\u7136\u4e5f\u662f\u5fc5\u8981\u6761\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u6c42\u51fa\u4e24\u4e32\u7684 ``lcp`` \u4ee5\u540e\u53ea\u9700\u8981\u5728\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u4e32\u4e0a\u627e\u5230\u5176\u6700\u957f\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 ``lcp`` \u957f\u5ea6\u7684 ``border``\uff0c\u90a3\u4e48\u8be5\u4e32\u5373\u4e3a\u4e24\u4e32\u7684\u6700\u957f\u516c\u5171 ``border``\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\u4e24\u4e32\u7684 ``lcp`` \u957f\u5ea6\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53ea\u5269\u4e0b\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u6c42\u5176\u6700\u957f\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7\u67d0\u6570\u7684 ``border``\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e2a\u524d\u7f00\uff0c\u5c06\u5b83\u5411\u5b83\u7684\u6700\u957f ``border`` \u8fde\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u56fe\u6709 $(n + 1)$ \u4e2a\u8282\u70b9\uff0c $n$ \u6761\u8fb9\uff0c\u53c8\u56e0\u4e3a\u8fd9\u4e2a\u56fe\u662f\u8054\u901a\u7684\uff0c\u6839\u636e\u6811\u7684\u5224\u5b9a\u5b9a\u7406\uff0c\u8fd9\u4e2a\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u82e5\u89c4\u5b9a $0$ \u662f\u8fd9\u68f5\u6811\u7684\u6839\uff0c\u6570\u5b66\u5f52\u7eb3\u53ef\u5f97\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u4e3a\u8be5\u8282\u70b9\u6240\u4ee3\u8868\u7684\u524d\u7f00\u7684\u6700\u957f ``border``\u3002\u56e0\u4e3a\u4e00\u4e2a\u8282\u70b9\u7684 ``border`` \u663e\u7136\u6bd4\u8be5\u8282\u70b9\u7684\u957f\u5ea6\u5c0f\uff0c\u6240\u4ee5\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u6240\u5728\u7684\u94fe\u4e0a\uff0c\u82e5\u5c06\u8282\u70b9\u6309\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u5219\u5176\u6240\u4ee3\u8868\u7684\u524d\u7f00\u957f\u5ea6\u4e00\u5b9a\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6574\u68f5\u6811\u8fdb\u884c ``dfs``\uff0c\u540c\u65f6\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u94fe\uff0c\u7136\u540e\u5728\u6808\u91cc\u4e8c\u5206\u5373\u53ef\u627e\u5230\u6240\u6c42\u7684\u4e32\u3002\n\n\u6c42 ``border`` \u7684\u65b9\u6cd5\u89c1 [\u3010P3375\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d](https://www.luogu.com.cn/problem/P3375)\u3002\n\n\u800c\u6c42\u4e24\u4e2a\u524d\u7f00\u7684 ``lcp``\uff0c\u53ef\u4ee5\u5bf9\u539f\u4e32\u5efa\u7acb\u4e00\u4e2a ``SAM``\uff0c\u4e24\u4e2a\u524d\u7f00\u5728 ``parent`` \u6811\u4e0a\u6240\u5bf9\u5e94\u8282\u70b9\u7684 ``LCA`` \u5373\u4e3a\u4ed6\u4eec\u7684 ``lcp``\u3002\u4e5f\u53ef\u4ee5\u5c06\u539f\u4e32\u53cd\u8fc7\u6765\uff0c\u8f6c\u5316\u4e3a\u6c42\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6c42\u51fa ``SA`` \u540e\u7528 ``height`` \u6570\u7ec4\u89e3\u51b3\u3002\n\n\u4f46\u662f\u6276\u82cf\u65e2\u4e0d\u613f\u610f\u5c06\u539f\u4e32\u53cd\u8fc7\u6765\u6c42 ``SA`` \u5728\u5199\u4e2a ``ST``\uff0c\u4e5f\u62c5\u5fc3\u6bd2\u7624\u51fa\u9898\u4eba\u5361\u4e86\u7a7a\u95f4\u4ee5\u540e ``SAM`` \u5efa\u51fa\u6765\u4f1a\u7206\u7a7a\u95f4\uff0c\u56e0\u6b64\u6276\u82cf\u9009\u62e9\u4e86 \u4e8c\u5206+hash \u6c42\u51fa\u5176 ``lcp``\u3002\n\n\u663e\u7136\u516c\u5171\u540e\u7f00\u7684\u957f\u5ea6\u6ee1\u8db3\u4e8c\u5206\u6027\uff0c\u56e0\u6b64\u53ea\u8981\u9009\u62e9\u4e00\u4e2a\u6ee1\u8db3\u524d\u7f00\u53ef\u51cf\u6027\u7684 ``hash`` \u51fd\u6570\u5c31\u53ef\u4ee5 $O(1)$ check \u4e86\u3002\n\n\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e8c\u5206\u6c42 ``lcp`` \u7684\u590d\u6742\u5ea6\u662f $O(m \\log n)$\uff0c\u5728 ``border`` \u6811\u4e0a\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u662f $O(m \\log n)$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6  $O(n + m \\log n)$\u3002\n\n## Code\n\n\u672c\u6765\u6276\u82cf\u5199\u4e86\u4e2a\u56db\u6a21\u6570 ``hash``\uff0c\u7136\u540e\u88ab\u5361\u5e38\u4e86\u5c31\u5c1d\u8bd5\u51cf\u5c11\u6a21\u6570\u4e2a\u6570\uff0c\u6700\u540e\u53d1\u73b0\u5355\u6a21\u6570\u5c31\u53ef\u4ee5\u4e86\uff08\u96fe\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n\nconst int maxh = 4;\nconst int maxm = 100005;\nconst int maxn = 1000005;\n\nconst int MOD[] = {998244353, 1000000007, 1000000009, 1145141};\n\nint n, m, top = -1;\nchar S[maxn];\nint border[maxn], ans[maxm], stk[maxn];\nstd::vector<int> son[maxn], query[maxn];\n\nstruct HASH {\n  int md;\n  ll hash[maxn], inv[maxn];\n\n  ll mpow(const int a, int d, const int p) {\n    ll ret = 1, tmp = a;\n    while (d) {\n      if (d & 1) {\n        (ret *= tmp) %= p;\n      }\n      (tmp *= tmp) %= p;\n      d >>= 1;\n    }\n    return ret;\n  }\n\n  void build(const int x) {\n    md = x;\n    ll tmp = 1, iv = mpow(100, x - 2, x);\n    inv[0] = 1;\n    for (int i = 1; i <= n; ++i) {\n      hash[i] = (hash[i - 1] + (S[i] - 'a') * tmp) % md;\n      inv[i] = inv[i - 1] * iv % md;\n      (tmp *= 100) %= md;\n    }\n  }\n\n  bool check(const int x, const int y, const int len) {\n    ll h1 = (hash[x] - hash[x - len]) * inv[x - len] % md, h2 = (hash[y] - hash[y - len]) * inv[y - len] % md;\n    if (h1 < 0) h1 += md;\n    if (h2 < 0) h2 += md;\n    if (h1 != h2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\nHASH h[maxh];\n\nint ReadStr(char *p);\nvoid dfs(const int u);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  n = ReadStr(S);\n  for (int i = 0; i < maxh; ++i) {\n    h[i].build(MOD[i]);\n  }\n  for (int i = 2, j = 0; i <= n; ++i) {\n    while (j && (S[j + 1] != S[i])) {\n      j = border[j];\n    }\n    if (S[j + 1] == S[i]) {\n      ++j;\n    }\n    son[border[i] = j].push_back(i);\n  }\n  son[0].push_back(1);\n  qr(m);\n  for (int p, q, Ans, i = 1; i <= m; ++i) {\n    p = q = Ans = 0; qr(p); qr(q);\n    for (int l = 1, r = std::min(p, q) - 1, mid = (l + r) >> 1; l <= r; mid = (l + r) >> 1) {\n      bool flag = true;\n      for (int i = 0; i < maxh; ++i) if ((flag = h[i].check(p, q, mid)) == false) {\n        break;\n      }\n      if (flag) {\n        l = (Ans = mid) + 1;\n      } else {\n        r = mid - 1;\n      }\n    }\n    ans[i] = Ans;\n    query[std::min(p, q)].push_back(i);\n  }\n  dfs(0);\n  for (int i = 1; i <= m; ++i) {\n    qw(ans[i], '\\n', true);\n  }\n  return 0;\n}\n\nint ReadStr(char *p) {\n  auto beg = p;\n  do *(++p) = IPT::GetChar(); while ((*p >= 'a') && (*p <= 'z'));\n  *p = 0;\n  return p - beg - 1;\n}\n\nvoid dfs(const int u) {\n  stk[++top] = u;\n  for (auto v : query[u]) {\n    int w = ans[v]; ans[v] = 0;\n    for (int l = 1, r = top, mid = (l + r) >> 1; l <= r; mid = (l + r) >> 1) if (stk[mid] <= w) {\n      ans[v] = stk[mid];\n      l = mid + 1;\n    } else {\n      r = mid - 1;\n    }\n  }\n  for (auto v : son[u]) {\n    dfs(v);\n  }\n  --top;\n}\n\n```\n\n\n\n",
        "postTime": 1576684108,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u76ee\u524d\u6700\u4f18\u89e3 ~~\u53ea\u6709\u4e5d\u4e2a\u901a\u8fc7\u554a\u5582~~\uff0c\u63d0\u4f9b\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u770b\u5230 border\uff0c\u5f88\u5bb9\u6613\u60f3\u5230 KMP\u3002\u7136\u540e\u5c31\u5199\u4e86\u4e2a `min(nxt[a],nxt[b])`\uff0c\u62ff\u5230\u4e86 16pts\u3002\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u524d\u7f00\u6709 border \u957f\u5ea6\u4e3a 3\uff0c\u5b83\u4e0d\u4e00\u5b9a\u6709 border \u957f\u5ea6\u4e3a 2\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\u7c7b\u4f3c\u8fd9\u6837\u5b50\uff1a\n\n```\nwhile(a!=b)\n{\n    while(a>b)\n    {\n        a = nxt[a];\n    }\n    while(b>a)\n    {\n        b = nxt[b];\n    }\n}\n```\n\n\u5f88\u663e\u7136\u8fd9\u6837\u5e72\u4f1a T \u98de\u3002\u56e0\u4e3a KMP \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5747\u644a\u8bc1\u660e\u7684\uff0c\u8fd9\u6837\u505a\u5f88\u5bb9\u6613\u88ab\u5361\u5230 $\\Theta(nm)$\u3002\n\n\u6709\u4e00\u79cd\u505a\u6cd5\u662f\uff0c\u5c06 `nxt[i]` \u4f5c\u4e3a `i` \u7684\u7236\u8282\u70b9\uff0c\u5efa\u7acb\u4e00\u9897\u6811\uff0c\u7136\u540e\u5728\u6811\u4e0a\u6c42 `LCA`\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a ST \u8868 LCA $\\Theta(n\\log n+m)$ \u6216\u6811\u94fe\u5256\u5206 $\\Theta(n+m\\log n)$\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n\u89c2\u5bdf\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 `s` \u7684\u5faa\u73af\u8282\u957f\u5ea6\u5373\u4e3a `n-nxt[n]`\uff0c\u5373 `s` \u662f\u7531\u6709\u9650\uff08\u53ef\u80fd\u4e3a 1\uff09\u6b21\u91cd\u590d\u7684 `n-nxt[n]` \u518d\u52a0\u4e0a\u51e0\u4e2a\u5269\u4f59\u5b57\u7b26\u7ec4\u6210\u7684\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\uff0c\u90fd\u6709\u6b64\u6027\u8d28\u3002\n\n\u7136\u540e\u53ef\u4ee5\u6839\u636e\u5faa\u73af\u8282\u957f\u5ea6\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u5177\u4f53\u7ec6\u8282\u53ef\u80fd\u8fd8\u662f\u4ee3\u7801\u6bd4\u8f83\u6e05\u6670\u3002\n\n\u6bcf\u6b21\u5faa\u73af\u90fd\u81f3\u5c11\u8ba9 i,j \u4e2d\u67d0\u4e00\u4e2a\u6570\u81f3\u5c11\u6298\u534a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n+m\\log n)$\u3002\n\n\u9644 AC \u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nchar str[1000005];\nint nxt[1000005];\n\nvoid buildnxt(int n)\n{\n\tfor(int i=2; i<=n; ++i)\n\t{\n\t\tint j = nxt[i-1];\n\n\t\twhile(j && str[j+1]!=str[i])\n\t\t{\n\t\t\tj = nxt[j];\n\t\t}\n\n\t\tif(str[j+1] == str[i])\n\t\t{\n\t\t\tnxt[i] = j+1;\n\t\t}\n\t}\n}\n\nint bordering(int i,int j)\n{\n\twhile(i != j)\n\t{\n\t\tif(!i || !j)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst int loopi = i-nxt[i];\n\t\tconst int loopj = j-nxt[j];\n\n\t\tif(loopi == loopj)  // \u5faa\u73af\u8282\u957f\u5ea6\u76f8\u540c\n\t\t{\n\t\t\tif(i%loopi == j%loopj) // \u4e4b\u540e\u4f59\u4e0b\u6765\u7684\u4e00\u6bb5\u4e5f\u76f8\u540c\n\t\t\t{\n\t\t\t\treturn min(i/loopi,j/loopj)*loopi + i%loopi;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti = i%loopi ? i%loopi : loopi; // \u8fd9\u91cc\u5224\u65ad\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u65e9\u5730\u8df3\u5230 0\n\t\t\t\tj = j%loopj ? j%loopj : loopj;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(loopi > loopj)  // \u8fd9\u91cc\u5fc5\u987b\u8981\u8df3\u8f83\u5927\u7684\uff0c\u9632\u6b62\u5176\u4e2d\u4e00\u4e2a\u4e32\u4e3a\u53e6\u4e00\u4e2a\u4e32\u7684\u5faa\u73af\u8282\n\t\t\t{\n\t\t\t\ti %= loopi;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tj %= loopj;\n\t\t\t}\n\t\t}\n\t}\n\treturn i;\n}\n\nint main()\n{\n\tscanf(\"%s\",str+1);\n\n\tbuildnxt(strlen(str+1));\n\n\tint m;\n\tscanf(\"%d\",&m);\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tprintf(\"%d\\n\",bordering(nxt[a],nxt[b]));\n\t}\n}\n```",
        "postTime": 1576718592,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "## Tag\n\u5b57\u7b26\u4e32\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u4e00\u5171 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u4e00\u6b21\u8be2\u95ee\u5b57\u7b26\u4e32 $S$ \u7684\u524d\u7f00 $p$ \u4e0e\u524d\u7f00 $q$ \u7684\u6700\u957f\u516c\u5171 border\u3002\n$\\texttt{data range:} |S| \\leq 10^6, m \\leq 10^5$.\n\n\n## Solution\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u5c31\u662f**\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 border \u4e00\u5b9a\u5305\u542b\u4e86\u6bd4\u5176\u77ed\u7684\u6240\u6709\u8be5\u5b57\u7b26\u4e32\u7684 border**\u3002\n\n\u5bf9\u4e8e\u627e\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 border \u6211\u4eec\u6709\u975e\u5e38\u4f18\u79c0\u7684 KMP \u7b97\u6cd5\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u51fa\u4e00\u4e2a\u5355\u5b57\u7b26\u4e32\u7684\u6240\u6709\u524d\u7f00\u7684\u6700\u957f border\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u6700\u957f\u516c\u5171 border\uff0c\u6240\u4ee5\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b\u5c06\u5931\u914d\u6307\u9488\u770b\u6210\u5f53\u524d\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u7136\u540e\u5f62\u6210\u7684\u4e00\u9897\u6811\u5c31\u662f\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u5931\u914d\u6811\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u67e5\u8be2\u4e24\u4e2a\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\u5c31\u662f\u6240\u6709\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4e00\u5b9a\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u9700\u5efa\u6811\uff0c\u53ef\u4ee5\u7ebf\u6027\u7684\u9884\u5904\u7406\uff0c$O(\\lg n)$ \u7684\u67e5\u8be2\u4e24\u4e2a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u7528\u6811\u5256\u5373\u53ef\u3002\n\n## Code\n\n```cpp\nconstexpr int N = 1e6 + 10;\n\nchar s[N];\n\nint fa[N], son[N], top[N], sz[N], dep[N];\nint lca(int x, int y) {\n    while(top[x] ^ top[y]) {\n        if(dep[top[x]] < dep[top[y]]) swap(x, y);\n        x = fa[top[x]];\n    }\n    return dep[x] < dep[y] ? x : y;\n}\n\nvoid solve() {\n    scanf(\"%s\", s + 1);\n    int n = strlen(s + 1);\n    for(int i = 2, j = 0; i <= n; i++) {\n        while(j && s[j + 1] != s[i]) j = fa[j];\n        if(s[i] == s[j + 1]) j++;\n        fa[i] = j;\n    }// KMP \u8fc7\u7a0b\n    ROF(i, n, 1) {\n        sz[i]++;\n        if(fa[i]) sz[fa[i]] += sz[i];\n        if(sz[i] >= sz[son[fa[i]]]) son[fa[i]] = i;\n    }\n    FOR(i, 1, n) {\n        dep[i] = dep[fa[i]] + 1;\n        if(son[fa[i]] != i) top[i] = i;\n        else top[i] = top[fa[i]];\n    }// \u6811\u5256\u9884\u5904\u7406\n    int q = rd;\n    while(q--) {\n        int x = fa[rd], y = fa[rd];\n        cout << lca(x, y) << '\\n';\n    }\n    return ;\n}\n```\n\n## Final\n\n\u6811\u5256\u7684\u5e38\u6570\u5927\u6982\u662f\u500d\u589e lca \u5e38\u6570\u7684 $\\frac 23$ \u5de6\u53f3\uff0c\u800c\u4e14\u9884\u5904\u7406\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u975e\u5e38\u4f18\u79c0\uff0c\u5f00\u4e86 O2 \u4e4b\u540e\u662f\u6700\u4f18\u89e3\u7b2c\u4e00\u9762\u9664\u4e86\u4e00\u5e2e\u5b50\u5199\u53d6\u6a21\u8df3\u7236\u4eb2\u7684\u4eba\u4e4b\u5916\u7684\u6700\u5feb\u7684\u4e86\u3002\n\n\u7ec6\u8282\uff1a\u7531\u4e8e\u4e00\u4e2a\u524d\u7f00\u7684 border \u4e0d\u80fd\u662f\u4ed6\u81ea\u5df1\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u5148\u5f80\u81ea\u5df1\u7684\u7236\u4eb2\u8df3\u4e00\u4e0b\u3002\n\n~~\u5b89\u5229\uff1a\u5e0c\u671b\u5927\u5bb6\u591a\u5199\u6811\u5256 lca \u4e0d\u8981\u5199\u500d\u589e lca\uff0c\u963f\u91cc\u560e\u591a\u3002~~",
        "postTime": 1644208226,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811 \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u5230 $\\operatorname{border}$ \u6ee1\u8db3\u51e0\u4e2a\u6027\u8d28\uff1a\n\n- $\\bold{Border}(s)$ \u4e2d\u6240\u6709\u5143\u7d20\u7684\u90fd\u5c0f\u4e8e $\\lvert s \\rvert$\u3002\n- $\\bold{Border}(s)$ \u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u7684 $\\operatorname{border}$ \u90fd\u662f $\\bold{Border}(s)$ \u7684\u4e00\u4e2a\u5b50\u96c6\u3002\n- \u82e5\u6211\u4eec\u8bbe $f_s$ \u4e3a $\\bold{Border}(s)$ \u4e2d\u6700\u5927\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6709\u9012\u63a8\u5f0f $\\bold{Border}(s) = \\bold{Border}(s[1 \\ldots f_s]) \\bigcup \\{ f_s \\}$\u3002\n\n$f_s$ \u5176\u5b9e\u5c31\u662f\u5931\u914d\u6307\u9488\uff0c\u53ef\u4ee5\u7528\u4e00\u6b21 kmp \u6765\u6c42\u3002\n\n\u8fd9\u4e9b\u6027\u8d28\u7406\u89e3\u8d77\u6765\u633a\u663e\u7136\u7684\uff0c\u5927\u6982\u5c31\u662f $f_s$ \u4f5c\u4e3a $s$ \u7684 $\\operatorname{border}$\uff0c\u5728\u524d\u7f00\u548c\u540e\u7f00\u90fd\u51fa\u73b0\u4e00\u6b21\u3002\u800c $\\bold{Border}([1 \\ldots f_s])$ \u662f $f_s$ \u5728\u524d\u7f00\u51fa\u73b0\u65f6\uff0c$f_s$ \u7684\u540e\u7f00\u4e0e\u524d\u7f00\u76f8\u540c\u7684\u90a3\u4e9b\u4f4d\u7f6e\uff0c\u7136\u540e\u8fd9\u4e2a\u540e\u7f00\u53ef\u4ee5\u8054\u7cfb\u5230 $s$ \u7684\u540e\u7f00\u90a3\u4e2a $f_s$ \u6765\uff0c\u4e8e\u662f\u5c31\u628a $s$ \u7684\u540e\u7f00\u548c $f_s$ \u7684\u524d\u7f00\uff08\u4e5f\u662f $s$ \u7684\u524d\u7f00\uff09\u5efa\u7acb\u4e86\u8054\u7cfb\uff0c\u5373\u4e3a $s$ \u5176\u4ed6\u7684 $\\operatorname{border}$\u3002\n\n\u6839\u636e\u7b2c\u4e00\u6761\u548c\u7b2c\u4e09\u6761\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u68f5\u6811\uff0c\u4f7f\u5f97 $i$ \u53f7\u70b9\u5728\u6811\u4e0a\u7684\u7236\u4eb2\u4e3a $f_{s[1 \\ldots i]}$\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u540e\u7f00\uff0c\u5b83\u7684 $\\operatorname{border}$ \u96c6\u5408\u5185\u6240\u6709\u70b9\u5c31\u662f\u5b83\u7684\u6240\u6709\u7956\u5148\u3002\n\n\u5f97\u5230\u6811\u4ee5\u540e\uff0c\u6c42 $\\boldsymbol{p}$ \u524d\u7f00\u548c $\\boldsymbol{q}$ \u524d\u7f00\u7684\u6700\u957f\u516c\u5171 $\\operatorname{border}$ \u5c31\u662f $p$ \u4e0e $q$ \u5728\u6811\u4e0a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\u500d\u589e\u6216\u5176\u4ed6\u65b9\u6cd5\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u7279\u522b\u5730\uff0c\u5982\u679c\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e0e $p$ \u6216 $q$ \u91cd\u5408\uff0c\u8981\u518d\u5f80\u4e0a\u8df3\u4e00\u683c\uff0c\u56e0\u4e3a\u81ea\u5df1\u4e0d\u662f\u81ea\u5df1\u7684 $\\operatorname{border}$\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O}\\left((\\lvert s \\rvert + m) \\log \\lvert s \\rvert \\right)$\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nconst int MaxN = 1000000 + 5, MaxM = 100000 + 5;\nconst int MaxLog = 20;\n\nint N, M;\nchar S[MaxN];\nint Fail[MaxN];\nint Fa[MaxLog + 1][MaxN], Dep[MaxN];\n\nvoid init() {\n  scanf(\"%s\", S + 1);\n  N = strlen(S + 1);\n  scanf(\"%d\", &M);\n}\n\ninline int getLca(int u, int v) {\n  if (Dep[u] < Dep[v]) std::swap(u, v);\n  int d = Dep[u] - Dep[v];\n  for (int i = MaxLog; i >= 0; --i)\n    if (d & (1 << i)) u = Fa[i][u];\n  if (u == v) return u;\n  for (int i = MaxLog; i >= 0; --i)\n    if (Fa[i][u] != Fa[i][v]) {\n      u = Fa[i][u];\n      v = Fa[i][v];\n    }\n  return Fa[0][u];\n}\n\nvoid solve() {\n  for (int i = 2, j = 0; i <= N; ++i) {\n    while (j > 0 && S[i] != S[j + 1]) j = Fail[j];\n    if (S[i] == S[j + 1]) j++;\n    Fail[i] = j;\n  }\n  for (int u = 1; u <= N; ++u) {\n    Fa[0][u] = Fail[u];\n    Dep[u] = Dep[Fail[u]] + 1;\n    for (int i = 1; (1 << i) <= Dep[u]; ++i)\n      Fa[i][u] = Fa[i - 1][Fa[i - 1][u]];\n  }\n  for (int q = 1; q <= M; ++q) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    int l = getLca(x, y);\n    if (l == x || l == y) printf(\"%d\\n\", Fa[0][l]);\n    else printf(\"%d\\n\", l);\n  }\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n```",
        "postTime": 1576714458,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "\u9996\u5148\u4e00\u4e2a\u9053\u7406\uff1aBorder \u7684 Border \u662f Border\uff0c\u4e14\u6700\u957f Border \u7684 \u6700\u957f Border \u662f\u6b21\u957f Border\u3002\u5f88\u660e\u663e\uff0cBorder \u7684\u5173\u7cfb\u662f\u4e00\u68f5\u6811\uff0c\u4e24\u70b9\u7684\u6700\u957f\u516c\u5171 Border \u662f\u4ed6\u4eec\u7684 LCA\u3002\n\n\u6c42\u6240\u6709\u524d\u7f00\u7684\u6700\u957f Border \u53ef\u4ee5\u4f7f\u7528 Z \u7b97\u6cd5\uff0cLCA \u53ef\u4ee5\u4f7f\u7528\u5b9e\u73b0\u7b80\u5355\u7684 Link-Cut-Tree\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u5751\u70b9\u662f\uff1aBorder \u4e0d\u80fd\u662f\u81ea\u5df1\uff0c\u6240\u4ee5\u5f53 LCA \u662f\u4e24\u6570\u4e4b\u4e00\u65f6\uff0c\u8981\u518d\u5f80\u4e0a\u8df3\u4e00\u683c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e6+6;\nchar buf[N+5],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,N,stdin),p1==p2)?EOF:*p1++)\ninline void read(int &x){\n\tfor(c=gc;c<'0'||c>'9';c=gc);\n\tfor(x=0;c>='0'&&c<='9';x=x*10+c-'0',c=gc);\n}\nchar st[N];\nint z[N],n,Q,f[N],q[N],t[N][2],yf[N];\n#define Tp(x) (t[f[x]][1]==x)\n#define In(x) (t[f[x]][0]==x||Tp(x))\ninline void rot(int x){\n\tint y=f[x],z=f[y],k=Tp(x),w=t[x][!k];\n\tif(t[t[x][!k]=y][k]=w)f[w]=y;\n\tif(In(y))t[z][Tp(y)]=x;f[f[y]=x]=z;\n}\ninline int Access(int x){\n\tint y,F;for(y=0;x;x=f[y=x]){\n\t\tfor(F=f[x];In(x);rot(x),F=f[x])\n\t\t\tif(In(F))rot(Tp(x)^Tp(F)?x:F);t[x][1]=y;\n\t}return y;\n}\nint main(){\n\twhile(!isalpha(c=gc));int i,l=1,r=0,ml=1;\n\tfor(st[++n]=c;isalpha(c=gc);st[++n]=c);\n\tfor(f[1]=n+1,i=2;i<=n;++i){\n\t\tif(i<ml+z[ml])if(z[i-ml+1]<ml+z[ml]-i)z[i]=z[i-ml+1];\n\t\t\t\t\t\telse z[i]=ml+z[ml]-i;\n\t\twhile(st[i+z[i]]==st[z[i]+1])++z[i];\n\t\tq[++r]=i;if(i+z[i]>=ml+z[ml])ml=i;\n\t\twhile(l<=r&&q[l]+z[q[l]]<=i)++l;\n\t\tyf[i]=f[i]=l<=r?i-q[l]+1:n+1;\n\t}read(Q);\n\twhile(Q--){\n\t\tread(l),read(r),Access(l),ml=Access(r);\n\t\tif(ml==l||ml==r)ml=yf[ml];\n\t\tprintf(\"%d\\n\",ml==n+1?0:ml),fflush(stdout);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644719036,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811 \u9898\u89e3"
    },
    {
        "content": "~~\u5199\u4e8e 2022 \u4e03\u5915\u7b2c\u4e8c\u5929\uff0c\u5982\u679c\u5931\u914d\u4e86\uff0c\u6ca1\u5173\u7cfb\uff0c\u5199\u5199\u5931\u914d\u6811\uff0c\u4e00\u53d1 AC \u89e3\u5343\u6101\uff01~~\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n### Border\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 $s$\uff0c\u5176 Border \u5b9a\u4e49\u4e3a\u65e2\u662f $s$ \u7684\u524d\u7f00\u53c8\u662f $s$ \u7684\u540e\u7f00\u7684\u5b50\u4e32\u3002\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32 `abcababc`\uff0c\u5176 Border \u5c31\u662f `abc`\u3002\u5bf9\u4e8e Border \u6709\u5982\u4e0b\u6027\u8d28\uff1a\n\n**\u6027\u8d28 $1$**\uff1a\u5bf9\u4e8e\u5b57\u7b26\u4e32 $s$ \u7684 Border $x,y$\uff0c\u82e5 $|x| < |y|$ \u5219 $x$ \u662f $y$ \u7684 Border\u3002\n\n**\u6027\u8d28 $2$**\uff1a\u82e5 $s[1,n]$ \u7684 Border \u957f\u5ea6\u4e3a $x$\uff0c\u5219 $s[1,n-1]$ \u7684 Border \u957f\u5ea6\u4e3a $x-1$\u3002\n\n\u6839\u636e\u6027\u8d28 $1$\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n**\u7ed3\u8bba $1$**\uff1a\u627e\u5230 $s$ \u7684\u6240\u6709 Border \u7684\u65b9\u6cd5\u662f\uff0c\u9996\u5148\u627e\u5230 $s$ \u7684\u6700\u957f Border $B(s)$\uff0c\u518d\u627e\u5230 $B(s)$ \u7684\u6700\u957f Border $B(B(s))$\uff0c\u5982\u6b64\u67e5\u627e\u4e0b\u53bb\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\u3002\n\n\n### KMP \u5b57\u7b26\u4e32\u5339\u914d\n\n\u6839\u636e\u6027\u8d28 $2$ \u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u627e\u5b57\u7b26\u4e32 $s$ \u6700\u957f Border \u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u5982\u679c\u4e0d\u4f1a\u53ef\u4ee5\u53bb\u770b [P3375 \u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d](https://www.luogu.com.cn/problem/P3375)\uff08\u8fd9\u4e2a\u662f\u524d\u7f6e\u77e5\u8bc6\uff09\n\n### \u6811\u4e0a\u500d\u589e\u6c42 LCA\n\n[P3379 \u3010\u6a21\u677f\u3011\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09](https://www.luogu.com.cn/problem/P3379)\n\n\u4e0b\u9762\u9ed8\u8ba4\u5927\u5bb6\u90fd\u4f1a\u4e86 Border \u7684\u5b9a\u4e49\u6027\u8d28\u53ca KMP \u4e0e LCA\u3002\n\n---\n\n## \u5931\u914d\u6811\n\n\u5bb9\u6613\u53d1\u73b0\u5931\u914d\u6811\u5c31\u662f\u4ee5\u4e0a\u51e0\u4e2a\u677f\u5b50\u62fc\u63a5\u8d77\u6765\u7684\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u5b57\u7b26\u4e32 `abaabaaba`\uff0c\u73b0\u5728\u6211\u4eec\u8981\u6c42\u51fa\u5176\u6240\u6709 Border\u3002\n\n\u9996\u5148\u5176\u6700\u957f Border \u4e3a `abaaba`\uff0c`abaaba` \u7684\u6700\u957f Border \u4e3a `aba`\uff0c`aba` \u7684\u6700\u957f Border \u4e3a `a`\uff0c`a` \u6ca1\u6709 Border\uff0c\u81f3\u6b64\u7ed3\u675f\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u6240\u6709 Border \u7ec4\u6210\u4e86\u4e00\u4e2a\u94fe\u5f0f\u7ed3\u6784\uff1a$\\texttt{abaaba} \\to \\texttt{aba} \\to \\texttt{a}$\uff0c\u5176\u4e2d $\\to$ \u53f3\u8fb9\u6240\u6709\u5b57\u7b26\u4e32\u662f $\\to$ \u5de6\u8fb9\u6240\u6709\u5b57\u7b26\u4e32\u7684 Border\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u6709\u5b50\u4e32 $s[1,i]$\uff08\u4e5f\u5c31\u662f $s$ \u7684\u6240\u6709\u524d\u7f00\uff0c\u9898\u9762\u4e2d\u7684 $p,q$ \u6ee1\u8db3\u8be5\u8981\u6c42\uff09\u7684\u6240\u6709 Border \u653e\u5230\u4e00\u68f5\u6811\u4e2d\uff0c\u5176\u4e2d\u6ee1\u8db3\u4ece\u6839\u8282\u70b9\u5230\u4efb\u610f\u7ed3\u70b9\u6240\u7ec4\u6210\u7684\u4e00\u6761\u94fe\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9 $x$ \u8868\u793a\u7684\u524d\u7f00\u5b50\u4e32\uff0c\u6240\u6709\u6ee1\u8db3 $\\text{dep}(x')<\\text{dep}(x)$ \u7684 $x'$ \u8868\u793a\u7684\u524d\u7f00\u5b50\u4e32\u90fd\u662f $x$ \u7684 Border\u3002\n\n\u5177\u4f53\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\uff1a\n\n\u4ee5\u6837\u4f8b $1$ \u4e3a\u4f8b\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32 `aaaabbabbaa`\uff0c\u5176 $nxt$ \u6570\u7ec4\uff08\u5c31\u662f KMP \u4e2d\u51fa\u73b0\u7684\u90a3\u4e2a\uff0c$nxt_i$ \u8868\u793a $s[1,i]$ \u7684\u6700\u957f Border \u957f\u5ea6\uff09\u7684\u503c\u5206\u522b\u4e3a $\\{0, 1, 2, 3, 0, 0, 1, 0, 0, 1, 2\\}$\u3002\u5bf9\u4e8e $nxt$ \u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n- \u82e5 $nxt_i=nxt_j$\uff0c\u5219 $i,j$ \u7684 Border \u76f8\u540c\u3002\n\n- $s[1,i]$ \u7684\u6700\u957f Border \u7684\u6700\u957f Border \u5c31\u662f $s[1,nxt_i]$ \u7684\u6700\u957f Border\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4ece\u540e\u5f80\u524d\u679a\u4e3e\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u5c31\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u5efa\u8fb9\uff0c\u65b9\u6848\u5982\u4e0b\uff1a\n\n- \u5bf9\u4e8e $p \\in [1,n]$\uff0c\u82e5 $nxt_p$ \u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5c31\u5efa\u4e00\u6761\u8fb9 $(nxt_p,p)$\uff0c\u518d\u4ee4 $p \\gets nxt_p$\uff0c\u4e0d\u65ad\u5faa\u73af\uff0c\u76f4\u5230 $p$ \u88ab\u8bbf\u95ee\u8fc7\u6216 $p=0$ \u4e3a\u6b62\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\uff0c\u6211\u4eec\u753b\u4e2a\u56fe\u6765\u8868\u793a\u8fd9\u68f5\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7bexf4a3.png)\n\n\u5bf9\u7167\u6837\u4f8b\u624b\u73a9\u4e00\u904d\u5c31\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u4e00\u6761\u94fe\u4e0a\u7684\u4efb\u4e00\u7ed3\u70b9 $x$\uff0c\u5728\u540c\u4e00\u6761\u94fe\u4e0a\u4e14\u6df1\u5ea6\u6bd4\u5176\u5c0f\u7684\u70b9 $x'$\uff0c$s[1,x']$ \u90fd\u662f $s[1,x]$ \u7684 Border\u3002\n\n\u5931\u914d\u6811\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u5728\u4ece\u6839\u7ed3\u70b9\u5230 $x$ \u7ed3\u70b9\u7684\u94fe\u4e0a\uff0c\u6240\u6709\u6ee1\u8db3 $\\text{dep}(x')<\\text{dep}(x)$ \u7684 $x'$ \u90fd\u6709 $x'<x$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u51fa $nxt$ \u6570\u7ec4\u540e\u518d\u4ece\u540e\u5f80\u524d\u904d\u5386\u5efa\u7acb\u51fa\u8fd9\u9897\u6811\uff08\u597d\u5427\u5c31\u53eb\u5b83\u5931\u914d\u6811\uff09\uff0c\u4f46\u6b64\u65f6\u6211\u4eec\u5e94\u5982\u4f55\u6c42\u51fa\u524d\u7f00 $p,q$ \u7684\u6700\u957f\u516c\u5171 Border \u5462\uff1f\n\n\u6839\u636e\u4e0a\u9762\u7684\u5185\u5bb9~~\u4e0d\u538c\u5176\u70e6\u5730\u518d\u91cd\u590d\u4e00\u904d~~\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$\uff0c\u5176\u6240\u6709 Border \u5c31\u662f\u4ece $x$ \u7684\u7236\u4eb2\u5230\u6839\u8282\u70b9\u7ec4\u6210\u7684\u70b9\u96c6\uff0c\u5176\u4e2d\u4efb\u610f\u4e00\u70b9 $x' \\ne 0,s[1,x']$ \u90fd\u662f $s[1,x]$ \u7684 Border\u3002\n\n\u4e24\u4e2a\u5462\uff1f\u5c31\u662f\u4e24\u6761\u94fe\u7684\u516c\u5171\u90e8\u5206\u3002\n\n\u6700\u957f\u5462\uff1f\u7ed3\u70b9\u7f16\u53f7\u5c3d\u91cf\u5927\uff0c\u5c31\u662f\u6df1\u5ea6\u5c3d\u91cf\u6df1\u3002\n\n\u5408\u5728\u4e00\u8d77\u5462\uff1f\u5c31\u662f\u4e24\u4e2a\u70b9\u7684**\u6700\u8fd1\u516c\u5171\u7956\u5148**\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5728\u5efa\u597d\u7684\u5931\u914d\u6811\u4e0a\u8fdb\u884c\u6811\u4e0a\u500d\u589e\u6c42 LCA \u5373\u53ef\u3002\n\n\u6ce8\u610f\uff0c\u82e5\u6c42\u51fa\u6765\u7684 LCA \u662f $p,q$ \u7684\u5176\u4e2d\u4e00\u4e2a\uff0c\u90a3\u5c31\u8981\u8f93\u51fa LCA \u7684\u7236\u4eb2\uff0c\u56e0\u4e3a\u6211\u4eec\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 Border \u4e0d\u80fd\u662f\u5b83\u672c\u8eab\u3002\n\n\u5176\u5b9e\u6811\u662f\u53ef\u4ee5\u4e0d\u7528\u5efa\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u6ce8\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\uff1b\u4f46\u4e3a\u4e86\u66f4\u76f4\u89c2\u6211\u8fd8\u662f\u628a\u6811\u5efa\u4e86\u51fa\u6765\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u8fd9\u4e2a\u53eb\u505a\u5931\u914d\u6811\u7684\u4e1c\u897f\uff0c\u4e2a\u4eba\u611f\u89c9\u5b83\u4f5c\u4e3a\u6a21\u677f\u8c8c\u4f3c\u6ca1\u5565\u7528\uff0c\u4f46\u786e\u5b9e\u662f\u4e00\u9053\u7ec3\u4e60\u5b57\u7b26\u4e32\u548c\u6811\u76f8\u7ed3\u5408\u7684\u597d\u9898\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nchar s[1000010];\nint t, p, x, y, n, kmp[1000010], vis[1000010], h[1000010], dep[1000010], f[1000010][23];\nstruct node{\n\tint x, y, next;\n}d[4000010];\nvoid add(int x, int y){\n\td[++p].y = y, d[p].next = h[x], h[x] = p;\n}\nvoid dfs(int x, int fa){\n\tdep[x] = dep[fa] + 1;\n\tfor (int i=0; i<=20; i++){\n\t\tf[x][i+1] = f[f[x][i]][i];\n\t}\n\tfor (int i=h[x]; i; i=d[i].next){\n\t\tint y = d[i].y;\n\t\tif (y == fa) continue;\n\t\tf[y][0] = x;\n\t\tdfs(y, x);\n\t}\n}\nint LCA(int x, int y){\n\tif (dep[x] < dep[y]) swap(x, y);\n\tfor (int i=21; i>=0; i--){\n\t\tif (dep[f[x][i]] >= dep[y]) x = f[x][i];\n\t\tif (x == y) return x;\n\t}\n\tfor (int i=21; i>=0; i--){\n\t\tif (f[x][i] != f[y][i]){\n\t\t\tx = f[x][i], y = f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\nint main(){\n\tscanf (\"%s\", s+1);\n\tn = strlen(s+1);\n\tfor (int i=2, j=0; i<=n; i++){\n\t\twhile (j && s[i] != s[j+1]) j = kmp[j];\n\t\tif (s[i] == s[j+1]) j ++;\n\t\tkmp[i] = j;\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tprintf (\"%d \", kmp[i]);\n\t}\n\tfor (int i=n; i>=1; i--){\n\t\tif (!vis[i]){\n\t\t\tvis[i] = 1;\n\t\t\tint tmp = i;\n\t\t\twhile (1){\n\t\t\t\tif (!tmp) break;\n\t\t\t\tadd(tmp, kmp[tmp]);\n\t\t\t\tadd(kmp[tmp], tmp);\n\t\t\t\ttmp = kmp[tmp];\n\t\t\t\tif (vis[tmp]) break;\n\t\t\t\tvis[tmp] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tdfs(0, n+1);\n\tscanf (\"%d\", &t);\n\twhile (t --){\n\t\tscanf (\"%d%d\", &x, &y);\n\t\tint lca = LCA(x, y);\n\t\tif (lca == x || lca == y) lca = f[lca][0];\n\t\tprintf (\"%d\\n\", lca);\n\t}\n\treturn 0;\n}\n//\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u6709 border\uff1anxt[nxt[nxt...]] \u5bf9\u6b64\u5efa\u6811\u5373\u53ef \n```",
        "postTime": 1659703582,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811"
    },
    {
        "content": "[\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/fail-tree.html)\n\n## \u7b80\u4ecb\n\n\u5931\u914d\u6811\uff08\u7b80\u79f0 Fail \u6811\uff09\uff0c\u662f\u57fa\u4e8e KMP \u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u9ad8\u6548\u7684\u89e3\u51b3\u590d\u6742\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u540e\u7f00\u5173\u7cfb\u95ee\u9898\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\n\n- KMP \u7b97\u6cd5\uff08\u6c42\u5931\u914d\u6570\u7ec4\uff09\n- \u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09\n\n\u5e0c\u671b\u5927\u5bb6\u770b\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u53ef\u4ee5\u7406\u89e3\u5931\u914d\u6811\u3002\n\n## \u5f15\u5165\n\n\u5148\u6765\u770b\u4e00\u9053\u9898\uff08\u6821\u5185\u6a21\u62df\u9898\u00b7\u6539\uff09\n\n> \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u4f60\u9700\u8981\u4ece\u5b83\u7684\u975e\u7a7a\u524d\u7f00\u96c6\u5408 $\\operatorname{Pre}$ \u4e2d\u9009\u62e9\u4e00\u4e9b\u5b57\u7b26\u4e32\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408 $Q$\uff0c\u4f7f\u5f97\u96c6\u5408 $Q$ \u4e2d\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32 $A,B$\uff0c$A$ \u4e0d\u662f $B$ \u7684\u540e\u7f00\u3002\u6c42\u6781\u5927\u7684\u96c6\u5408 $Q$\uff0c\u8f93\u51fa $Q$ \u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32\uff08\u53ef\u80fd\u6709\u591a\u7ec4\u5408\u6cd5\u7b54\u6848\uff0c\u8f93\u51fa\u5176\u4e2d\u4efb\u610f\u4e00\u7ec4\uff09\u3002\n>\n> $2 \\leq |S| \\leq 10^{6}$\n\n\u4e00\u4e2a\u6734\u7d20\u7684\u601d\u8def\u662f\uff0c\u5bf9\u4e8e $\\operatorname{Pre}$ \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u7ffb\u8f6c\u540e\u63d2\u5165\u4e00\u4e2a\u5b57\u5178\u6811\u4e2d\u3002\u6700\u540e\u627e\u5b57\u5178\u6811\u7684\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5373\u53ef\u3002\u4e0d\u96be\u8bc1\u660e\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u53ef\u662f\u8fd9\u4e2a\u7b97\u6cd5\u662f $O(n^2)$\u7684\u3002\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u5b57\u5178\u6811\u4e2d\u5b58\u5728\u8bb8\u591a\u591a\u4f59\u5143\u7d20\u3002\u6bd4\u5982\u5b57\u7b26\u4e32 `abcdabghiab`\uff0c\u5efa\u51fa\u6765\u7684\u5b57\u5178\u6811\u2026\u2026\n\n\u5982\u4f55\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u8df3\u8fc7\u4e2d\u95f4\u7684\u591a\u4f59\u5143\u7d20\u3002\u5982\u4f55\u8df3\u8fc7\uff1f\u4e5f\u5c31\u662f\u8bf4\u5982\u4f55\u4ece $\\operatorname{border}$ \u6307\u5411\u5305\u542b\u5b83\u7684\u5b57\u7b26\u4e32\uff1f\u5f53\u7136\u662f $\\operatorname{KMP}$ \u4e2d\u7684\u5931\u914d\u6570\u7ec4\uff01\u4e8e\u662f\u6211\u4eec\u81ea\u7136\u7684\u60f3\u5230\u8fde\u8fb9 $(\\operatorname{nxt}_i,i)$\u3002\u7136\u540e\u627e\u53f6\u5b50\u3002\u590d\u6742\u5ea6\u964d\u5230\u4e86 $O(n)$\u3002\n\n## P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\n\u6709 $m$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u7ed9\u5b9a $p,q$\uff0c\u6c42 $s$ \u7684 **$\\boldsymbol{p}$ \u524d\u7f00** \u548c **$\\boldsymbol{q}$ \u524d\u7f00** \u7684 **\u6700\u957f\u516c\u5171 $\\operatorname{border}$**  \u7684\u957f\u5ea6\u3002\n>\n> $1\\leq p,q \\le |s|\\leq 10^6$\uff0c$1 \\leq m \\leq 10^5$\uff0c$s_i \\in [\\texttt{a}, \\texttt{z}]$\n\n\u5148\u5efa\u51fa\u5931\u914d\u6811\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6837\u4f8b\uff0c\u5931\u914d\u6811\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n5moeip5.png)\n\n\u7136\u540e\u53d1\u73b0\uff0c\u6700\u957f\u516c\u5171\u524d\u7f00\u4e0d\u5c31\u662f\u5728\u5931\u914d\u6811\u4e0a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5417\uff1f\n\n\u6ce8\u610f\uff1a\n\n- \u5982\u679c $\\operatorname{LCA}(p,q) \\in \\{p,q\\}$\uff0c\u90a3\u4e48\u7b54\u6848\u5176\u5b9e\u662f $\\operatorname{father}(\\operatorname{LCA}(p,q))$\u3002\n- \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u6811\u5256\u6c42 LCA\uff0c\u90a3\u4e48\u8bb0\u4f4f\u4e0d\u80fd\u4ee5 $0$ \u4e3a\u6839\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N = 1000005;\n\nstruct edge {\n\tint nxt, to;\n} g[N << 1];\nint head[N << 1], ec;\nvoid add(int u, int v) {\n\tg[++ec].nxt = head[u];\n\tg[ec].to = v;\n\thead[u] = ec;\n}\n\nint root;\nint siz[N], son[N], fa[N], top[N], dep[N];\nvoid dfs1(int u, int father, int deep) {\n\tdep[u] = deep;\n\tsiz[u] = 1;\n\tfa[u] = father;\n\tfor (int i = head[u]; i >= 0; i = g[i].nxt) {\n\t\tint v = g[i].to;\n\t\tdfs1(v, u, deep + 1);\n\t\tsiz[u] += siz[u];\n\t\tif (siz[v] >= siz[son[u]]) {\n\t\t\tson[u] = v;\n\t\t}\n\t}\n}\n\nvoid dfs2(int u, int father, int t) {\n\ttop[u] = t;\n\tif (son[u])dfs2(son[u], u, t);\n\tfor (int i = head[u]; i >= 0; i = g[i].nxt) {\n\t\tint v = g[i].to;\n\t\tif (v == son[u]) {\n\t\t\tcontinue;\n\t\t}\n\t\tdfs2(v, u, v);\n\t}\n}\n\nint lca(int x, int y) {\n\tint fx = top[x], fy = top[y];\n\twhile (fx != fy) {\n\t\tif (dep[fx] < dep[fy]){\n\t\t\tswap(fx, fy);\n\t\t\tswap(x, y);\n\t\t}\n\t\tx = fa[fx], fx = top[x];\n\t}\n\tif (dep[x] > dep[y]) {\n\t\treturn y;\n\t}\n\telse return x;\n}\n\nnamespace KMP{\n    int nxt[1000005];\n    char s[1000005];\n    int n;\n    void kmp(){\n        n = strlen(s+1);\n        add(n+1,1);\n        for(int i=2,j=0;i<=n;i++){\n            while(j&&s[i]!=s[j+1]){\n                j=nxt[j];\n            }\n            if(s[i]==s[j+1]){\n                j++;\n            }\n            nxt[i]=j;\n            if(j!=0){\n                add(j,i);\n            }\n            else{\n                add(n+1,i);\n            }\n        }\n    }\n}\n\nint m;\n\nsigned main(){\n    memset(head,-1,sizeof(head));\n    ec=-1;\n    cin>>(KMP::s+1)>>m;\n    KMP::kmp();\n    dfs1(KMP::n+1,0,1);\n    dfs2(KMP::n+1,0,KMP::n+1);\n    while(m--){\n        int p,q;\n        cin>>p>>q;\n        int LCA = lca(p,q);\n        if(LCA == p || LCA == q){\n            LCA = fa[LCA];\n        }\n        if(LCA==(KMP::n+1))LCA=0;\n        cout<<LCA<<'\\n';\n    }\n    return 0;\n}\n```\n\n[AC Record](https://www.luogu.com.cn/record/88848010)",
        "postTime": 1665038170,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "\u5931\u914d\u6811\u5b66\u4e60\u7b14\u8bb0 | P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811"
    },
    {
        "content": "### P.S.\n\u611f\u89c9\u8fd9\u4e2a\u4e1c\u897f\u770b\u4e0a\u53bb\u633a\u597d\u7406\u89e3\u7684\uff0c\u81ea\u5df1\u7a0d\u5fae\u770b\u4e86\u4e0b\u9898\u89e3\uff0c\u5c31\u4e71\u641e\u641e\u51fa\u6765\u4e86\u3002  \n\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u7684\u7406\u89e3\u3002  \n\u524d\u7f6e\u77e5\u8bc6\uff1aKMP\uff0cLCA\n\n### Description.\n$\\text{pre}_i=S[1:i],\\text{suf}_i=S[|S|-i+1:|S|]$  \n$\\text{Border}(s)=\\{\\text{pre}_i|i\\in[1,|S|)\\land \\text{pre}_i=\\text{suf}_i\\}$  \n$F(i,j)=\\max\\{\\text{len}_x|x\\in\\text{Border}(\\text{pre}_i)\\land x\\in\\text{Border}(\\text{pre}_j)\\}$  \n\u591a\u7ec4\u8be2\u95ee\uff0c\u7ed9\u5b9a $i$ \u548c $j$\uff0c\u6c42 $F(i,j)$\u3002  \n\n### Solution.\n\u8bbe $\\text{MaxBorder}$ \u8868\u793a\u6240\u6709 $\\text{Border}$ \u4e2d\u957f\u5ea6\u6700\u5927\u503c\u3002\n- \u5b9a\u7406\uff1a$\\text{Border}(s)=\\text{MaxBorder}(s)\\bigcup\\text{Border}(\\text{MaxBorder}(s))$  \n\u8bc1\u660e\u5982\u4e0b\uff08\u5176\u5b9e\u76f4\u63a5\u753b\u56fe\u5c31\u597d\u4e86  \n\t- $\\text{Border}(s)\\subseteq\\text{MaxBorder}(s)\\bigcup\\text{Border}(\\text{MaxBorder}(s))$  \n    \u8bbe $n=\\text{len}_s,m=\\text{len}_{\\text{MaxBorder}(s)},m_x=\\text{len}_{\\text{Border}(s)},m_x\\neq m$  \n    \u90a3\u4e48\u6211\u4eec\u6709 $s[1:m]=s[n-m+1:n],s[1:m_x]=s[n-m_x+1:n]$  \n    \u6240\u4ee5\u6211\u4eec\u6709 $s[m-m_x+1:m]=s[n-m_x+1:n]=s[1:m_x]$  \n    \u6240\u4ee5 $m_x$ \u5bf9\u5e94\u7684 $\\text{Border}(s)\\in\\text{MaxBorder}(s)$  \n    $\\therefore \\text{Border}(s)\\subseteq\\text{MaxBorder}(s)\\bigcup\\text{Border}(\\text{MaxBorder}(s))$\n    - $\\text{Border}(s)\\supseteq\\text{MaxBorder}(s)\\bigcup\\text{Border}(\\text{MaxBorder}(s))$  \n    \u9996\u5148\uff0c\u80af\u5b9a\u6709 $\\text{Border}(s)\\supseteq\\text{MaxBorder}(s)$  \n    \u8bbe $n=\\text{len}_s,m=\\text{len}_{\\text{MaxBorder}(s)},m_x=\\text{len}_{\\text{Border}(\\text{MaxBorder}(s))}$  \n    \u90a3\u4e48\u6709 $s[1:m]=s[n-m+1:n],s[1:m_x]=s[m-m_x+1:m]$  \n    \u6240\u4ee5\u6709 $s[n-m_x+1:n]=s[m-m_x+1:m]=s[1:m_x]$  \n    $\\therefore\\text{Border}(\\text{MaxBorder}(s))\\subseteq\\text{Border}(s)$  \n- \u5b9a\u7406\u8bc1\u5fc5\uff08\u8349\uff0c$\\LaTeX$ \u6740\u4eba\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u4e32\u7684\u6240\u6709 $\\text{Border}$ \u90fd\u53ef\u4ee5\u901a\u8fc7\u8df3 $\\text{MaxBorder}$ \u6765\u5f97\u5230\u3002  \n\u6211\u4eec\u8bbe\u4e00\u4e2a\u4e32\u7684\u7236\u4eb2\u4e3a\u5b83\u7684 $\\text{MaxBorder}$\uff0c\u90a3\u4e48\u4e00\u4e2a\u4e32\u7684\u6240\u6709 $\\text{Border}$ \u5c31\u662f\u5b83\u7684\u6240\u6709\u7956\u5148\u3002  \n\u6240\u4ee5\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171 $\\text{Border}$ \u662f\u5b83\u4eec\u7684 $\\text{LCA}$ \uff08\u4e00\u4e9b**\u7279\u6b8a\u60c5\u51b5**\u5148\u4e0d\u7ba1\u3002  \n\u4e8e\u662f\u6211\u4eec\u5efa\u51fa\u90a3\u68f5\u6811\uff0c\u7136\u540e\u76f4\u63a5\u500d\u589e\u6c42 $\\text{LCA}$ \u5c31\u597d\u4e86\uff08\u6811\u5256\u663e\u7136\u4e5f\u53ef\u4ee5\u3002  \n\n\u7279\u6b8a\u60c5\u51b5\uff1a\u4e00\u4e2a\u4e32\u7684 $\\text{Border}$ \u662f\u5b83\u7684\u4e25\u683c\u7956\u5148\u3002  \n\u6240\u4ee5\u5982\u679c\u4e92\u4e3a\u7956\u5148\u5173\u7cfb\u7684\u4e24\u4e2a\u4e32\u7684 $\\text{Border}$ \u5fc5\u987b\u662f\u5b83\u7684\u7236\u4eb2\uff0c\u800c\u4e0d\u662f $\\text{LCA}$\u3002  \n\u800c $\\text{MaxBorder}$ \u53ef\u4ee5\u7528 KMP \u6c42\u51fa\u3002  \n\n\u5982\u679c\u8fd8\u770b\u4e0d\u61c2\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u6ce8\u91ca\u3002\n\n### Coding.\n```cpp\n//\u613f\u4f60\u548c\u4f60\u91cd\u8981\u7684\u4eba\u80fd\u591f\u518d\u6b21\u91cd\u9022\uff01\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<48||c>59;c=getchar()) if(!(c^45)) f=1;\n\tfor(;c>=48&&c<=57;c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tf?x=-x:0;\n}\nint Q,dep[1000005],nxt[1000005][20],n;char c[1000005];\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=19;~i;i--) if(dep[nxt[x][i]]>=dep[y]) x=nxt[x][i];\n\tfor(int i=19;~i;i--) if(nxt[x][i]!=nxt[y][i]) x=nxt[x][i],y=nxt[y][i];\n\treturn nxt[x][0];\n}\nint main()\n{\n\tscanf(\"%s\",c+1),n=strlen(c+1),read(Q),nxt[1][0]=dep[1]=0;\n\tfor(int i=2,k=0;i<=n;i++)//KMP\n\t{\n\t\twhile(k&&c[k+1]!=c[i]) k=nxt[k][0];//\u800c\u8fd9\u4e2a\u6811\u4e2d\u80af\u5b9a\u6709\u4e00\u4e2a\u62d3\u6251\u5e8f\u662f [1,n]\n\t\tif(c[k+1]==c[i]) dep[i]=dep[nxt[i][0]=++k]+1;else dep[i]=dep[nxt[i][0]=k]+1;\n\t}\n\t//for(int i=1;i<=n;i++) printf(\"%d%c\",dep[i],i==n?'\\n':' ');\n\tfor(int i=1;i<20;i++) for(int j=1;j<=n;j++) nxt[j][i]=nxt[nxt[j][i-1]][i-1];\n\tfor(int x,y;Q--;) read(x),read(y),printf(\"%d\\n\",LCA(x,y));//\u500d\u589e LCA\n\treturn 0;\n}\n```",
        "postTime": 1612403913,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5829)\n\uff08\u5982\u679c $\\LaTeX$ \u70b8\u4e86\uff0c\u8bf7\u5230\u535a\u5ba2[\u89c2\u770b](https://www.luogu.com.cn/blog/thats-me/ti-jie-p5829-mu-ban-shi-pei-shu-post)\uff09\n\n$\\Large\\mathscr{Part\\,\\,0\\;\\;}\\text{\u524d\u7f6e\u77e5\u8bc6}$\n\n[$\\color{#00ffff}\\text{\u7b80\u5355\u306eKMP}$](https://www.luogu.com.cn/problem/P3375)\n\n[$\\color{#00ffff}\\text{\u7b80\u5355\u306eLCA}$](https://www.luogu.com.cn/problem/P3379)\n\n**\u4ee5\u4e0b\u5185\u5bb9\u9ed8\u8ba4\u8bfb\u8005\u5df2\u638c\u63e1\u524d\u7f6e\u77e5\u8bc6**\n\n$\\Large\\mathscr{Part\\,\\,1\\;\\;}\\text{\u57fa\u672c\u601d\u8def}$\n\n\u6ce8\u610f\u5230 $KMP$ \u4e2d\u7684 $next[\\ |s|\\ ]$ \u8868\u793a\u7684\u6b63\u597d\u662f $\\textbf{Border}(s)$ \u4e2d\u6700\u957f\u5143\u7d20\u7684\u957f\u5ea6\uff0c\u800c\u4e14 $\\textbf{Border}(s)$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684 $\\rm{border}$ \u5747\u662f $\\textbf{Border}(s)$ \u7684\u5b50\u96c6\uff0c\u5e76\u4e14\u5177\u6709\u4f20\u9012\u6027\u3002\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5efa\u4e00\u68f5\u6709\u6839\u6811 $T$\uff0c\u5c06 $KMP$ \u4e2d\u7684 $next$ \u6570\u7ec4\u66ff\u6362\u4e3a $fa$ \u6570\u7ec4\uff0c$fa[\\ |s|\\ ]$ \u610f\u4e3a $s$ \u5728 $T$ \u4e2d\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u7279\u522b\u5730\uff0c\u5bf9\u4e8e $\\forall next[\\ |s|\\ ]=0$\uff0c$fa[\\ |s|\\ ]=\\varnothing$\u3002\u5219 $s$ \u7684 **$p$ \u524d\u7f00** \u548c **$q$ \u524d\u7f00** \u5728 $T$ \u4e0a\u7684 $LCA$ \u5373\u4e3a\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171 $\\rm{border}$\u3002\n\n~~\u8bc1\u660e\u8d77\u6765\u4e5f\u5f88\u5bb9\u6613~~\n\n\u9996\u5148\uff0c\u6839\u636e\u6211\u4eec\u7684\u5b9a\u4e49\uff0c\u53ef\u77e5\u5bf9\u4e8e\u5b57\u7b26\u4e32 $s$ \u7684\u524d\u7f00\uff0c $|\\ fa[\\ |s|\\ ]\\ |<|s|$\u3002\u73b0\u5728\u8bbe\u5bf9\u4e8e $s$ \u7684 **$p$ \u524d\u7f00** \u548c **$q$ \u524d\u7f00** $s_p$ \u548c $s_q$ \u5728 $T$ \u4e0a\u7684 $LCA$ \u4e3a $s_i$\u3002\u7531\u4e8e $s_i$ \u5728\u4e4b\u524d $next$ \u6570\u7ec4\u7684\u5b9a\u4e49\u4e0b\u540c\u65f6\u4e3a $s_p$ \u548c $s_q$ \u7684\u524d\u540e\u7f00\uff0c\u800c $s_i$ \u7684\u7956\u5148\u7684\u957f\u5ea6\u5747\u5c0f\u4e8e $s_i$\uff1b\u540c\u65f6\u4e3a $s_p$ \u548c $s_q$ \u7684\u524d\u540e\u7f00\u4e14\u957f\u5ea6\u5927\u4e8e $s_i$ \u7684\u5b57\u7b26\u4e32\u5b9a\u4e3a $s_i$ \u7684\u540e\u4ee3\uff0c\u4f46\u8fd9\u4e0e $s_i$ \u662f $s_p$ \u548c $s_q$ \u7684 $LCA$ \u77db\u76fe\u3002\u6240\u4ee5 $s_i$ \u5373\u4e3a $s$ \u7684 **$p$ \u524d\u7f00** \u548c **$q$ \u524d\u7f00** \u7684\u6700\u957f\u516c\u5171 $\\rm{border}$\u3002\u7279\u522b\u5730\uff0c\u5982\u679c $s_i=s_p$ \u6216 $s_i=s_q$\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u540e\u7f00\u4e0d\u5305\u542b\u672c\u8eab\uff0c\u6240\u4ee5\u6b64\u65f6\u8981\u518d\u5f80\u4e0a\u8df3\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\u3002\u6700\u7ec8\uff0c$|s_i|$ \u5373\u4e3a\u6240\u6c42\u7b54\u6848\u3002\n\n$\\Large\\mathscr{Part\\,\\,2\\;\\;}\\text{Code}$\n\n~~\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u5408\u4e00~~\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int N=1e6+5,Log=22;\nchar b[N]; // \u539f\u4e32\nint T,m,fa[Log][N],dep[N],q,w,l;\nint lca(int x,int y){ // \u6b63\u5e38\u306e\u500d\u589eLCA\n\tif(dep[x]>dep[y]) x^=y^=x^=y;\n\tfor(int i=Log-1; ~i; i--) if(dep[fa[i][y]]>=dep[x]) y=fa[i][y];\n\tif(x==y) return fa[0][x]; // \u6ce8\u610f\uff0c\u82e5\u4e24\u4e2a\u5b50\u4e32\u7684LCA\u4e3a\u5176\u4e2d\u4e00\u4e2a\u5b50\u4e32\uff0c\u8fd4\u56de\u7684\u662f\u6df1\u5ea6\u4f4e\u7684\u5b50\u4e32\u7684\u7236\u4eb2\n\tfor(int i=Log-1; ~i; i--){\n\t\tif(fa[i][x]!=fa[i][y]){\n\t\t\tx=fa[i][x];\n\t\t\ty=fa[i][y];\n\t\t}\n\t}\n\treturn fa[0][x];\n}\nint main(){\n\tscanf(\"%s%d\",b+1,&T);\n\tm=strlen(b+1);\n\tint j=0;\n\tdep[1]=1; // \u9884\u5904\u7406\n\tfor(int i=2; i<=m; i++){ // \u6b63\u5e38\u306eKMP\n\t\twhile(j&&b[i]!=b[j+1]) j=fa[0][j];\n\t\tif(b[i]==b[j+1]) ++j;\n\t\tdep[i]=dep[fa[0][i]=j]+1;\n\t\tfor(int k=1; k<Log; k++){ // \u9884\u5904\u7406fa\u6570\u7ec4\n\t\t\tfa[k][i]=fa[k-1][fa[k-1][i]];\n\t\t}\n\t}\n\twhile(T--){ // \u76f4\u63a5\u5904\u7406\n\t\tscanf(\"%d%d\",&q,&w);\n\t\tprintf(\"%d\\n\",lca(q,w));\n\t}\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(\\ (|s|+m)\\cdot \\log_2|s|\\ )$\uff0c\u8fc7\u8fd9\u9898[$\\color{black}\\small\\text{\u7ef0\u7ef0\u6709\u4f59}$](https://www.luogu.com.cn/record/34286933)\u3002",
        "postTime": 1591714063,
        "uid": 238421,
        "name": "A_Pikachu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "\u60f3\u5931\u914d\uff1f\u6765\u53d1[\u3010\u6a21\u677f\u3011\u5931\u914d\u6811](https://www.luogu.com.cn/problem/P5829)\n\n## 0x0001 \u601d\u8def\uff1a\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 `border` \u7684 `border` \u4e5f\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684 `border`\n\n\u9898\u76ee\u8981\u6c42 $s$ \u957f\u5ea6\u4e3a $p$ \u7684\u524d\u7f00 \u548c\u957f\u5ea6\u4e3a $q$ \u524d\u7f00\u7684\u6700\u957f\u516c\u5171 `border` \u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u53ef\u77e5\uff0c\u5982\u679c\u4e24\u4e2a\u524d\u7f00\u90fd\u6709 `border` \u90a3\u4e48\u53ef\u80fd\u5305\u542b\u7740\u4e00\u4e2a `border`\uff0c\u662f\u4e24\u4e2a\u524d\u7f00\u7684 `border`\uff0c\u4e5f\u662f\u4ed6\u4eec `border` \u7684 `border`\uff0c\u8bf6\uff0c\u600e\u4e48\u8fd9\u4e48\u8033\u719f\uff0c\u8fd9\u4e0d\u662f\u627e\u6700\u8fd1\u516c\u5171\u7956\u5148\u5417\u3002\n\n\n\u90a3\u4e48\u662f\u4e2a\u4eba\u90fd\u77e5\u9053\u4e86\uff0c\u6211\u4eec\u5148\u628a\u8fd9\u4e00\u4e2a\u4e32\u627e\u4e00\u904d `border`\uff0c\u4e5f\u5c31\u662f\u8dd1 `KMP` \u7b97\u6cd5\uff0c\u8fd9\u6837\u5c31\u628a\u4efb\u610f\u524d\u7f00\u957f\u5ea6\u7684 `border` \u627e\u51fa\u6765\uff0c\u628a\u5176\u4e0e\u5176 `border` \u5efa\u8fb9\uff0c\u8dd1\u4e00\u904d\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u597d\u4e86\u3002\n\n## 0x0002 CODE\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\n\nusing namespace std;\ninline int read() {\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile (ch<'0'||ch>'9') {\n\t\tif (ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile (ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-48;\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\ninline void write(int x) {\n\tif(x < 0)putchar('-'),x = -x;\n\tif(x > 9)write(x / 10);\n\tputchar(x % 10 ^ 48);\n}\nstruct Node {\n\tint next, y;\n} f[1919810];\nint tot, head[1000001];\ninline void add(int x, int y) {\n\tf[++tot].y = y;\n\tf[tot].next = head[x];\n\thead[x] = tot;\n}\nint n = NULL, m, p, q;\nint d[1000010], dp[1000010][22], border[1000010];\ninline int lca(int x, int y) {\n\tif (d[x] < d[y])\n\t\tswap(x, y);\n\tfor (int i = log2(n) + 1; i >= 0; i--)\n\t\tif (d[x] - (1 << i) >= d[y])\n\t\t\tx = dp[x][i];\n\n\tif (x == y) \n\t\treturn x;\n\n\tfor (int i = log2(n) + 1; i >= 0; i--) \n\t\tif(dp[x][i] == dp[y][i]) continue;\n\t\telse x = dp[x][i], y = dp[y][i];\n\t\t\n\treturn dp[x][0];\n}\nsigned main() {\n\tstring s;\n\tcin >> s;\n\tn = s.size();\n\ts = \" \" + s;\n\tint j = 0;\n\tfor (int i = 2;  i <= n; i++) {\n\t\twhile (s[j + 1] != s[i] && j) j = border[j];\n\t\tif (s[j + 1] == s[i]) j++;\n\t\tborder[i] = j;\n\t\tdp[i][0] = j; d[i] = d[j] + 1;\n\t}\n\tfor (int i = 1; i <= log2(1e6) + 1; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tdp[j][i] = dp[dp[j][i - 1]][i - 1];\n\t\t}\n\t}\n\tcin >> m;\n\twhile (m--) {\n\t\tcin >> p >> q;\n\t\tcout << lca(dp[p][0], dp[q][0]) << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1671615431,
        "uid": 514850,
        "name": "Acerkaio",
        "ccfLevel": 4,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5829)\n\n### 0x01 \u524d\u7f6e\u77e5\u8bc6\n\n[KMP](https://oi.wiki/string/kmp/)\n\n[LCA](https://oi.wiki/graph/lca/)\n\n### 0x02 \u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5b66\u8fc7 $\\operatorname{KMP}$ \u7684\u4eba\u6765\u8bf4\uff0c\u770b\u5230 $\\operatorname{border}$ \u5c31\u4f1a\u60f3\u5230\u7528\u5931\u914d\u6570\u7ec4\uff08\u4ee5\u4e0b\u53eb\u505a $next$\uff09\u5b9e\u73b0\uff0c\u56e0\u4e3a ~~\u770b\u540d\u5b57\u548c\u9898\u76ee\u8fd9\u4e48\u50cf\u80af\u5b9a\u8981~~ $next$ \u6c42\u7684\u5c31\u662f $\\operatorname{border}$\uff0c\u4f46\u662f $\\Theta(\\min(p,q))$ \u679a\u4e3e\u6c42\u6700\u957f\u516c\u5171 $\\operatorname{border}$ \u662f\u4e0d\u884c\u7684\uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u5931\u914d\u6811\u3002\n\n\u6700\u957f\u7684 $\\operatorname{border}$ \u5c31\u662f $next(\\left|S\\right|)$\uff0c\u800c\u4e00\u4e2a\u4e32\u5f80\u5f80\u4e0d\u6b62\u4e00\u4e2a $\\operatorname{border}$\uff0c$next(next(\\left|S\\right|))$ \u4e5f\u53ef\u4ee5\u8bc1\u660e\u662f\u539f\u4e32\u7684 $\\operatorname{border}$\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c$next(next(next(\\left|S\\right|))),next(next(next(next(\\left|S\\right|))))\\dots$ \u90fd\u662f\u539f\u4e32\u7684 $\\operatorname{border}$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 $i$ \u4e0e $next(i)$ \u5efa\u8fb9\u3002\u5982\u56fe\uff0c\u6211\u4eec\u4ee5\u6837\u4f8b\u4e00\u4e3a\u4f8b\uff080 \u4e3a\u6839\uff09\uff1a\n\n![\u6837\u4f8b 1](https://pic.imgdb.cn/item/6393d9c5b1fccdcd36f548c5.png)\n\n\n\n\u8fd9\u6837\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\u90fd\u662f\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684  $\\operatorname{border}$\uff0c\u6240\u4ee5 $p$ \u4e0e $q$ \u7684 $\\operatorname{LCA}$ \u5c31\u662f\u7b54\u6848\uff08\u6ce8\u610f\uff0c\u5982\u679c $p$ \u662f $q$ \u7684\u7956\u5148\uff0c\u6216 $q$ \u662f $p$ \u7684\u7956\u5148\uff0c\u90a3\u4e48\u7956\u5148\u7684\u7236\u4eb2\u624d\u662f\u7b54\u6848\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4e32\u7684 $\\operatorname{border}$ \u4e0d\u80fd\u662f\u81ea\u5df1\u672c\u8eab\uff09\u3002\n\n### 0x03 AC Code\n\n```cpp\n//by olkieler \n#include <bits/stdc++.h>\n#define int long long\n#define N 1000005\n#define M 1005\n#define mod 998244353\n#define ios ios::sync_with_stdio(0);cin.tie(0)\n#define test cout << \"ASDF\\n\"\n#define inf INT_MAX\n#define linf LLONG_MAX\n#define pint pair<int, int>\n#define mp make_pair\nusing namespace std;\nint fa[N][25];\nint depth[N];\nstring st;\ninline int LCA(int x,int y)\n{\n    if (depth[x] < depth[y])\n    {\n        swap(x, y);\n    }\n    while (depth[x] > depth[y])\n    {\n        x = fa[x][(int)log2(depth[x]-depth[y])];\n    }\n    if (x == y)\n    {\n        return fa[x][0];\n    }\n    for (int i = log2(depth[x]); ~i; i--)\n    {\n        if (fa[x][i] != fa[y][i])\n        {\n            x = fa[x][i];\n            y = fa[y][i];\n        }\n    }\n    if (fa[x][0] == x || fa[x][0] == y)\n    {\n    \tx = fa[x][0];\n    }\n    return fa[x][0];\n}\nsigned main()\n{\n\tios;\n\tint m, len, j = 0;\n\tcin >> st >> m;\n\tlen = st.size();\n\tst = \" \" + st;\n\tfor (int i = 2; i <= len; i ++)\n\t{\n\t\twhile (j > 0 && st[j + 1] != st[i])\n\t\t{\n\t\t\tj = fa[j][0];\n\t\t}\n\t\tif (st[j + 1] == st[i])\n\t\t{\n\t\t\tj ++;\n\t\t}\n\t\tfa[i][0] = j;\n\t\tdepth[i] = depth[j] + 1;\n\t}\n\tfor (int i = 1; i <= 20; i ++)\n\t{\n\t\tfor (int j = 1; j <= len; j ++)\n\t\t{\n\t\t\tfa[j][i] = fa[fa[j][i - 1]][i - 1];\n\t\t}\n\t}\n\tfor (int asdf = 1; asdf <= m; asdf ++)\n\t{\n\t\tint p, q;\n\t\tcin >> p >> q;\n\t\tcout << LCA(p, q) << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1670637278,
        "uid": 466525,
        "name": "olkieler",
        "ccfLevel": 0,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u4e32 $S$\uff0c\u5b9a\u4e49 $border$ \u4e3a\u5b83\u7684\u975e\u672c\u8eab\u7684\u65e2\u662f\u5b83\u7684\u524d\u7f00\u53c8\u662f\u5b83\u7684\u540e\u7f00\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee $i$\uff0c$j$ \u6c42\u51fa\u524d $i$ \u4e2a\u548c\u524d $j$ \u4e2a\u5b57\u7b26\u7684\u6700\u957f\u516c\u5171 $border$ \u957f\u5ea6\u3002\n\n### \u7b97\u6cd5\u5206\u6790\uff1a\n\n\u6839\u636e\u9898\u76ee\u7684\u63cf\u8ff0\uff0c\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u662f $KMP$\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u524d\u7f00\u548c\u540e\u7f00\u5339\u914d\u7684\u957f\u5ea6\uff0c\u8bbe\u4e3a $kmp$ \u6570\u7ec4\u3002\u7136\u540e\u5c31\u662f\u8fd9\u9053\u9898\u7684\u7cbe\u9ad3\u3002\n\n\u8fd9\u91cc\u9700\u8981\u5efa\u4e00\u4e2a\u5931\u914d\u6811\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u4e2a\u70b9\u7684 $kmp$ \u6570\u7ec4\u5411\u8fd9\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\u3002(\u4e2a\u4eba\u611f\u89c9\u8ddf $AC$ \u81ea\u52a8\u673a\u7684 $fail$ \u6811\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002)\u8fd9\u65f6\u4f1a\u53d1\u73b0\uff0c\u4f1a\u5efa\u6210\u4e00\u4e2a\u6811\uff0c\u7236\u4eb2\u8282\u70b9\u5c31\u662f $kmp$ \u6570\u7ec4\u7684\u503c\uff0c\u513f\u5b50\u8282\u70b9\u5c31\u662f\u8be5\u70b9\u3002\n\n\u6700\u540e\uff0c\u9898\u76ee\u7684\u8981\u6c42\u76f8\u5f53\u4e8e\u6c42\u4e24\u4e2a\u70b9\u7684 $LCA$\uff0c\u7528\u500d\u589e\u6c42\u5373\u53ef\u3002\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u672c\u8eab\u5c31\u6709 $border$ \u5173\u7cfb\uff0c\u90a3\u4e48\u9700\u8981\u8f93\u51fa $dep$ \u5c0f\u7684\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u3002\u4e5f\u5f88\u597d\u5b9e\u73b0\uff0c\u628a\u500d\u589e\u4e2d\u7684\u4e2d\u9014 $x=y$ \u8fd4\u56de\u5220\u53bb\uff0c\u76f4\u63a5\u6700\u540e\u8fd4\u56de\u5373\u53ef\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\n\n### \u603b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch == '-') f=-1 ; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48) ; ch=getchar();}\n\treturn x*f;\n}\ninline void print(int x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nconst int M = 2e6+10;\nchar s[M];\nint head[M],dep[M],f[M][21],kmp[M];\nint cnt,ans,m,len;\nstruct edge{\n\tint to,nxt;\n}e[M];\nvoid add(int u,int v){ //\u52a0\u8fb9\n\te[++cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\nvoid pre(){ //kmp\u5339\u914d\n\tint j=0;\n\tfor(re int i(2) ; i<=len ; ++i){\n\t\twhile(j && s[i]!=s[j+1]) j=kmp[j];\n\t\tif(s[i] == s[j+1]) j++;\n\t\tkmp[i] = j;\n\t}\n}\nvoid dfs(int u){\n\tfor(re int i(head[u]) ; i ; i=e[i].nxt){\n\t\tint v = e[i].to;\n\t\tdep[v] = dep[u]+1; //\u8be5\u8282\u70b9\u7684\u6df1\u5ea6\u662f\u5b83\u7236\u8282\u70b9\u7684\u6df1\u5ea6+1\n\t\tf[v][0] = u; //\u8be5\u8282\u70b9\u7684\u7236\u4eb2\u662fu\n\t\tfor(re int i(1) ; i<=20 ; ++i) f[v][i] = f[f[v][i-1]][i-1];\n      //\u6c42\u500d\u589e\u6570\u7ec4\n\t\tdfs(v); //\u5f80\u4e0bdfs\n\t}\n}\nvoid work(){\n\tfor(re int i(1) ; i<=len ; ++i) add(kmp[i],i); //\u5efa\u5931\u914d\u6811\n\tdfs(0); //\u522b\u5fd8\u4e86\u4ece0\u5f00\u59cbdfs\n}\nint lca(int x,int y){ //\u5e38\u89c4\u6c42lca\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(re int i(20) ; i>=0 ; --i) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tfor(re int i(20) ; i>=0 ; --i) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nsigned main(){\n\tscanf(\"%s\",s+1);\n\tm=read();\n\tlen = strlen(s+1);\n\tpre();\n\twork();\n\twhile(m--){\n\t\tint x=read(),y=read(); //\u6bcf\u6b21\u8be2\u95ee\u5373\u53ef\n\t\tprintf(\"%d\\n\",lca(x,y));\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1649933004,
        "uid": 226367,
        "name": "glorious_dream",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5829 \u3010\u3010\u6a21\u677f\u3011\u5931\u914d\u6811\u3011"
    },
    {
        "content": "Border \u8bba\u5165\u95e8\u9898 .\n\n\u6211\u8981\u5ba3\u4f20\u535a\u5ba2\uff01\uff01\uff01[Border Theory](https://www.cnblogs.com/CDOI-24374/p/16009595.html) .\n***\n\n> **Definition 1**\uff08maxBorder\uff09\n> \n> \u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684\u6700\u957f Border \u4e3a $\\operatorname{maxBorder}(s)$ .\n\n***\n\n> **Lemma 1**\uff08Border \u7684\u4f20\u9012\u6027\uff09\n>\n> \u82e5 $s_0$ \u662f $s_1$ \u7684 Border\uff0c$s_2$ \u662f $s_1$ \u7684 Border\uff0c\u5219 $s_2$ \u662f $s_0$ \u7684 Border .\n\n\u8bc1\u660e\u663e\u7136 .\n\n\u7136\u540e\u56e0\u4e3a **Lemma 1**\uff0c\u4e00\u4e2a\u524d\u7f00\u7684 Border \u4e00\u5b9a\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff0c\u4e8e\u662f\n\n\n> **Definition 2**\uff08fail \u6307\u9488\uff09\n>\n> \u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684\u4e00\u4e2a\u524d\u7f00\u7684\u7684\u6700\u957f Border \u7684\u4e0b\u6807\uff0c\u8bb0\u4f5c $fail_i$ .\n\n\n\u4e8e\u662f\u4e00\u4e2a\u4e1c\u897f\u7684 Border \u5173\u7cfb\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u68f5\u6811\uff08\u53ef\u4ee5\u53eb fail \u6811\u6216\u8005 Border \u6811\uff09 .\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684\u6240\u6709\u524d\u7f00 $t=\\operatorname{pre}(s,i)$\uff0c\u8fde\u63a5\u6709\u5411\u8fb9 $t\\to fail_t$\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u524d\u7f00\u4e0d\u65ad\u8df3 $fail$ \u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u7684\u6240\u6709 Border\uff08\u4e5f\u5c31\u662f\u8bf4 $t$ \u7684\u6240\u6709\u7956\u5148\u90fd\u662f $t$ \u7684 Border\uff09\n\n\u7136\u540e\u663e\u7136\u6df1\u5ea6\u8d8a\u6df1\u5b57\u7b26\u4e32\u957f\u5ea6\u8d8a\u957f\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 Border \u7684\u5b9a\u4e49\u5f97\u5230 .\n\n\u4e8e\u662f\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 Border \u5c31\u662f\u5b83\u4eec\u5bf9\u5e94 fail \u6811\u4e0a\u7684 LCA \u4e86\uff01\n\n\u6ce8\u610f\u56e0\u4e3a\u77e5\u9053 Border \u4e0d\u662f\u81ea\u5df1\uff0c\u6240\u4ee5\u5982\u679c LCA \u627e\u5230\u4e00\u4e2a\u539f\u6709\u7684\u5b57\u7b26\u4e32\u90a3\u4e48\u5c31\u8981\u8df3\u4e00\u6b21\u7236\u4eb2 .\n\n\u4ee3\u7801\uff1a\n```cpp\n// \u56e0\u4e3a\u662f\u62ff\u4fe9\u677f\u5b50\u62fc\u8d77\u6765\u7684\uff0c\u53ef\u80fd\u6bd4\u8f83\u4e11\n// \u8bdd\u8bf4\u6811\u5256\u8dd1\u5f97\u771f\u7684\u6162\uff08\n\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 500;\ntypedef long long ll;\ntypedef char str[N];\nint n, m, r;\nint fa[N], dep[N], siz[N], son[N], top[N], dfn[N], rnk[N], cc;\nvector<int> g[N];\ninline void addedge(int u, int v){g[u].emplace_back(v);}\ninline void ade(int u, int v){addedge(u, v); addedge(v, u);}\nvoid dfs1(int u)\n{\n\tsiz[u] = 1;\n\tfor (auto v : g[u])\n\t{\n\t\tif (fa[u] == v) continue;\n\t\tdep[v] = dep[u] + 1;\n\t\tfa[v] = u;\n\t\tdfs1(v);\n\t\tsiz[u] += siz[v];\n\t\tif (!son[u]|| (siz[v] > siz[son[u]])) son[u] = v;\n\t}\n}\nvoid dfs2(int u, int t)\n{\n\ttop[u] = t;\n\trnk[++cc] = u; dfn[u] = cc;\n\tif (!son[u]) return ;\n\tdfs2(son[u], t);\n\tfor (auto v : g[u])\n\t\tif ((v != son[u]) && (v != fa[u])) dfs2(v, v);\n}\nint lca(int u, int v)\n{\n\twhile (top[u] != top[v])\n\t{\n\t\tif (dep[top[u]] > dep[top[v]]) u = fa[top[u]];\n\t\telse v = fa[top[v]];\n\t}\n\treturn dep[u] > dep[v] ? v : u;\n}\nstr s;\nint l, nxt[N];\nvoid getnxt()\n{\n\tnxt[1] = 0; int j = 0;\n\tfor (int i=2; i<=l; i++)\n\t{\n\t\twhile (j && (s[i] != s[j+1])) j = nxt[j];\n\t\tif (s[i] == s[j+1]) ++j;\n\t\tnxt[i] = j;\n\t}\n}\nint main()\n{\n    scanf(\"%s\", s+1); l = strlen(s+1);\n    getnxt();\n\tfor (int i=1; i<=l; i++) ade(i, nxt[i]);\n    scanf(\"%d\", &m);\n\tdfs1(r); dfs2(r, r);\n\tint u, v;\n\twhile (m--)\n\t{\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tint x = lca(u, v);\n\t\tif ((x == u) || (x == v)) printf(\"%d\\n\", fa[x]);\n\t\telse printf(\"%d\\n\", x);\n\t} return 0;\n}\n```",
        "postTime": 1649507263,
        "uid": 227514,
        "name": "jijidawang",
        "ccfLevel": 0,
        "title": "P5829 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u82e5\u5e72\u6b21\u8be2\u95ee\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 $\\text{border}$ \u957f\u5ea6\u3002\n\n\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u7684 $\\pi$ \u8fde\u5230\u8fd9\u4e2a\u70b9\uff0c\u6839\u8282\u70b9\u662f $0$\uff0c$\\pi=0$ \u5c31\u8868\u793a\u6ca1\u6709 $\\text{border}$\uff0c\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u7136\u540e\u6ce8\u610f\u5230\u6bcf\u7ec4\u8be2\u95ee\u4e2d\u7684\u7b54\u6848\u5fc5\u7136\u662f $\\{x,\\pi_x,\\pi_{\\pi_x}\\ldots,y,\\pi_y,\\pi_{\\pi_y}\\ldots\\}$\uff0c\u7136\u540e\u672c\u8d28\u5c31\u662f\u5bf9\u4e24\u4e2a\u8282\u70b9\u505a\u4e00\u4e0b\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u516c\u5171\u7956\u5148\u5c31\u662f\u5176\u4e2d\u4e00\u4e2a\u7684\u8bdd\uff0c\u8fd8\u8981\u5f80\u524d\u8df3\u4e00\u6b65\u6765\u6ee1\u8db3\u9700\u8981\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,j,k) for(int i=j;i<=(k);i++)\nsigned main(){\n  ios::sync_with_stdio(NULL);\n  string s;\n  cin>>s;\n  int n=s.size();\n  vector<int>pi(n);\n  vector<int>top(n+1),dep(n+1),fa(n+1),siz(n+1),son(n+1,-1);\n  vector<vector<int> >g(n+1);\n  rep(i,1,n-1){\n    int j=pi[i-1];\n    while(j&&s[i]!=s[j])j=pi[j-1];\n    if(s[i]==s[j])j++;\n    pi[i]=j;\n  }\n  rep(i,1,n)g[pi[i-1]].push_back(i);\n  function<void(int)>dfs1=[&](int x){\n    siz[x]=1;\n    for(int y:g[x]){\n      dep[y]=dep[x]+1;\n      fa[y]=x;\n      dfs1(y);\n      siz[x]+=siz[y];\n      if(son[x]==-1||siz[son[x]]<siz[y])son[x]=y;\n    }\n  };\n  function<void(int,int)>dfs2=[&](int x,int t){\n    top[x]=t;\n    if(son[x]==-1)return;\t\n    dfs2(son[x],t);\n    for(int y:g[x])\n    if(y!=son[x])dfs2(y,y);\n  };\n  dfs1(0);dfs2(0,0);\n  int m;\n  cin>>m;\n  auto lca=[&](int x,int y){\n    while(top[x]!=top[y]){\n      if(dep[top[x]]<dep[top[y]])swap(x,y);\n      x=fa[top[x]];\n    }\n    if(dep[x]>dep[y])swap(x,y);\n    return x;\n  };\n  while(m--){\n    int x,y;\n    cin>>x>>y;\n    int u=lca(x,y);\n    if(u==x||u==y)u=fa[u];\n    cout<<u<<endl;\n  }\n}\n```",
        "postTime": 1649377251,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "P5829 \u3010\u6a21\u677f\u3011\u5931\u914d\u6811 \u8bb0\u5f55"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://blog.calvincheng1231.org.cn/default/44.html)\n\n## \u5206\u6790\n\u9996\u5148 KMP \u6c42 $fail$\u3002\n\n\u5219\u6709 $\\bold{Border}(s_1s_2\\ldots s_i)=fail_i\\bigcup\\bold{Border}(s_1s_2\\ldots s_{fail_i})$\u3002\n\n\u5efa\u7acb\u4e00\u68f5\u6811\uff0c\u4f7f\u5f97 $fa_i=fail_i$\uff0c\u90a3\u4e48 $\\bold{Border}(s_1s_2\\ldots s_i)$ \u5c31\u662f\u8fd9\u68f5\u6811\u4e0a $i$ \u7684\u6240\u6709\u7956\u5148\uff08\u4e0d\u5305\u62ec\u81ea\u5df1\uff09\u3002\n\n\u67e5\u8be2 $p$ \u524d\u7f00\u548c $q$ \u524d\u7f00\uff0c\u5c31\u662f\u67e5\u627e\u8fd9\u68f5\u6811\u4e0a $fa_p$ \u548c $fa_q$ \u7684 LCA\u3002\n\n\u8fd9\u68f5\u6811\u5c31\u662f**\u5931\u914d\u6811**\u3002\n\n## \u89e3\u51b3\n\u8fd9\u91cc\u500d\u589e\u8c8c\u4f3c\u6bd4\u8f83\u597d\u5199\uff0c\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u77e5\u9053 $fa_i$\u3002\n\n\u5176\u4ed6\u9898\u89e3\u6ca1\u6709\u63d0\u5230\u7684\u4e00\u70b9\uff1a\n\n\u5176\u4ed6\u9898\u89e3\u91cc\u9762\u6c42\u7684\u662f $p$ \u548c $q$ \u7684 LCA\uff0c\u800c\u4e0d\u662f $fa_p$ \u548c $fa_q$ \u7684 LCA\u3002\u4f46\u662f $x \\not \\in \\bold{Border}(s_1s_2\\ldots s_x)$\uff0c\u6240\u4ee5\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u500d\u589e\u627e LCA \u7684\u3002\u5176\u4ed6\u9898\u89e3\u8bf4\u662f \u201c\u6b63\u5e38\u7684\u500d\u589e\u6c42 LCA\u201d\uff0c\u5176\u5b9e\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u6b63\u5e38\u7684\u500d\u589e\u6c42 LCA \u4e2d\uff0c\u8981\u5728\u5c06 $x$ \u548c $y$ \u8df3\u5230\u540c\u4e00\u5c42\u4e4b\u540e\u5224\u65ad $x$ \u548c $y$ \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u5c31\u8fd4\u56de $x$\uff0c\u4f46\u662f\u5728\u672c\u9898\u4e2d\u4e0d\u5e94\u8be5\u5224\uff0c\u56e0\u4e3a\u5982\u679c $x=y$\uff0c\u8bf4\u660e $x$ \u662f $y$ \u7684\u7956\u5148\u6216\u8005 $y$ \u662f $x$ \u7684\u7956\u5148\uff0c\uff0c\u6240\u4ee5\u4ecd\u7136\u5e94\u8be5\u8fd4\u56de $fa_x$\u3002\n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 1e6 + 5, Log = 20;\nint n, m, fail[N], dep[N], fa[N][Log];\nchar ch[N];\n\nvoid getFail() {\n\tfail[1] = 0;\n\tfor (int i = 2, j = 0; i <= n; i++) {\n        while (j > 0 && ch[i] != ch[j + 1]) j = fail[j];\n        if (ch[i] == ch[j + 1])\n            j++;\n        fail[i] = j;\n    }\n}\n\nvoid prework() {\n\tgetFail();\n\tfor (int i = 1; i <= n; i++) {\n\t\tdep[i] = dep[fail[i]] + 1, fa[i][0] = fail[i];\n\t\tfor (int j = 1; j < Log; j++) fa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t}\n}\n\nint lca(int x, int y) {\n\tif (dep[x] < dep[y])\n\t\tx ^= y ^= x ^= y;\n\tfor (int i = Log - 1; i >= 0; i--)\n\t\tif (dep[fa[x][i]] >= dep[y])\n\t\t\tx = fa[x][i];\n\tfor (int i = Log - 1; i >= 0; i--)\n\t\tif (fa[x][i] != fa[y][i])\n\t\t\tx = fa[x][i], y = fa[y][i];\n\treturn fa[x][0];\n}\n\nvoid read(int &ret) {\n\tret = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\twhile (ch >= '0' && ch <= '9') ret = ret * 10 + ch - '0', ch = getchar();\n}\n\nint main() {\n\tscanf(\"%s\", ch + 1);\n\tn = strlen(ch + 1);\n\tprework();\n\tread(m);\n\twhile (m--) {\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tprintf(\"%d\\n\", lca(x, y));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1625800775,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "P5829 \u9898\u89e3"
    },
    {
        "content": "\u5b57\u7b26\u4e32 $s$ \u7684 **border** $i$ \u6ee1\u8db3 $s$ \u7684\u957f $i$ \u7684\u524d\u540e\u7f00\u76f8\u7b49\u3002\u6211\u4eec\u8bbe $s$ \u7684 $\\text{max border}$ \u8868\u793a $\\text{border}$ \u96c6\u5408\u4e2d\u6700\u5927\uff08\u957f\uff09\u7684\u4e00\u4e2a\u3002\u663e\u7136\uff0c$\\text{max border}$ \u5373 KMP \u4e2d\u7684 $\\text{next}$\u3002\uff08\u56e0\u4e3a KMP \u7684\u7b2c\u4e00\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u81ea\u6211\u5339\u914d\u5bfb\u627e $\\text{border}$ \u7684\u8fc7\u7a0b\uff09\u3002\n\n\u5982\u4f55\u6c42\u51fa $\\text{border}$ \u96c6\u5408\uff1f\u6211\u4eec\u6709\u6027\u8d28 $\\text{border}(s)=\\text{border}(s[1,next_s]) \\cup next_s$\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u4e0d\u65ad\u5730\u8df3 $next$ \u5c31\u80fd\u6c42\u51fa\u4e00\u4e2a\u4e32\u7684 $\\text{border}$\u3002\n\n\u6709\u6ca1\u6709\u529e\u6cd5\u6c42\u51fa\u6240\u6709\u524d\u7f00\u7684 $\\text{border}$ \u5462\uff1f\u663e\u7136\u662f\u53ef\u4ee5\u7684\u3002\u7531\u4e8e\u4e00\u4e2a\u524d\u7f00\u7684 $\\text{border}$ \u4f9d\u8d56\u4e8e\u8fd9\u4e2a\u524d\u7f00\u7684\u4e00\u4e2a\u524d\u7f00\u7684 $\\text{border}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u79cd\u6811\u7684\u5173\u7cfb\u3002\u8003\u8651 $next_i$ \u4f5c\u4e3a $i$ \u5728\u8fd9\u6837\u7684\u6811\u4e0a\u7684\u7236\u4eb2\u8282\u70b9\uff08\u611f\u89c9\u662f\u4e0d\u662f\u53ef\u4ee5\u53eb border tree\uff09\uff0c\u90a3\u4e48\u524d\u7f00 $s[1,i]$ \u7684 $\\text{border}$ \u96c6\u5408\u5c31\u4e3a\u70b9 $i$ \u7684\u6240\u6709\u7956\u5148\u8282\u70b9\u3002\n\n\u9898\u76ee\u8981\u6c42\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171 $\\text{border}$\uff0c\u663e\u7136\u8fd9\u4e2a\u6700\u957f\u516c\u5171 $\\text{border}$ \u5c31\u662f\u5b83\u4eec\u4e24\u4e2a\u524d\u7f00\u5728\u8fd9\u68f5\u6811\u4e0a\u7684\u9664\u53bb\u81ea\u5df1\u7684 LCA\u3002\n\n```cpp\nint n,m,nxt[N],d[N],f[N][29];\nchar s[N];\nvector<int>e[N];\n\nvoid kmp(int j=0) {\n\te[0].push_back(1);\n\trep(i,2,n) {\n\t\twhile(j&&s[i]!=s[j+1]) j=nxt[j];\n\t\tif(s[j+1]==s[i]) j++;\n\t\tnxt[i]=j, e[j].push_back(i);\n\t}\n}\nvoid dfs(int u) {\n\trep(h,1,20) f[u][h]=f[f[u][h-1]][h-1];\n\tfor(auto v:e[u]) {\n\t\td[v]=d[u]+1, f[v][0]=u;\n\t\tdfs(v);\n\t}\n}\nint lca(int u,int v) {\n\tif(d[u]<d[v]) swap(u,v);\n\tper(h,20,0) if(d[f[u][h]]>=d[v]) u=f[u][h];\n\tper(h,20,0) if(f[u][h]!=f[v][h]) u=f[u][h], v=f[v][h];\n\treturn f[u][0];\n}\n\nint main() {\n\tscanf(\"%s\",s+1); n=strlen(s+1), m=read();\n\tkmp();\n\td[0]=1; dfs(0);\n\trep(i,1,m) {\n\t\tint p=read(), q=read();\n\t\tprintf(\"%d\\n\",lca(p,q));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1618390053,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u3010\u4e32\u4e32\u3011P5829 \u5931\u914d\u6811\uff08\u6a21\u677f\uff09"
    }
]