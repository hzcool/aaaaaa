[
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u628a\u201c\u4f18\u7f8e\u201d\u7684\u6761\u4ef6\u8f6c\u5316\u4e3a\uff1a\n\n- \u5b58\u5728\u4e00\u4e2a**\u6ce2\u8c37**\uff0c\u4f7f\u5f97\u4ece\u4e2d\u95f4\u5411\u4e24\u8fb9\u5206\u522b**\u4e25\u683c\u5355\u8c03\u9012\u589e**\u3002\n\n\u663e\u7136**\u6ce2\u8c37**\u5373\u5f53\u524d $a$ \u4e2d\u7684\u6700\u5c0f\u503c\u53ea\u80fd\u5b58\u5728**\u6070\u597d\u4e00\u4e2a**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u5f53\u6700\u5c0f\u503c\u4e0d\u6b62\u4e00\u4e2a\u65f6\u7b54\u6848\u4e3a $0$\u3002\n\n\u90a3\u5bf9\u4e8e\u5269\u4e0b\u7684\u6570\u5462\uff1f\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff1a\n\n- \u82e5\u5b58\u5728\u4e00\u4e2a**\u51fa\u73b0\u6b21\u6570 $> 2$ \u7684\u6570**\uff0c\u7b54\u6848\u4e3a $0$\u3002\n\n\u663e\u7136\u4f60\u53ea\u80fd\u628a\u8fd9\u4e2a\u6570\u653e\u5728**\u6ce2\u8c37**\u4e24\u8fb9\uff0c\u4e14\u4e00\u8fb9\u81f3\u591a\u4e00\u4e2a\u2014\u2014\u6bd5\u7adf\u6211\u4eec\u8981\u6c42\u7684\u65f6**\u4e25\u683c\u5355\u8c03\u9012\u589e**\uff0c\u800c\u8fd9\u4e2a\u51fa\u73b0\u6b21\u6570 $> 2$ \u7684\u6570\u5c31\u6ca1\u6cd5\u653e\u4e86\u3002\n\n\u90a3\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6784\u9020\u4e00\u79cd\u5408\u6cd5\u7684\u201c\u4f18\u7f8e\u201d\u5e8f\u5217\uff1a\n\n- \u6211\u4eec\u5148\u5904\u7406\u90a3\u4e9b**\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u4e14\u975e\u6700\u5c0f\u503c\u7684\u6570**\uff0c\u5c06\u5176\u968f\u610f\u5212\u5206\u6210\u4e24\u5806\uff0c\u628a\u6700\u5c0f\u503c\u653e\u5728\u4e2d\u95f4\uff0c\u518d\u628a\u8fd9\u4e24\u5806\u6392\u5e8f\u540e\u5206\u5217\u4e24\u4fa7\uff1b\u7136\u540e\u6211\u4eec\u518d\u6765\u5904\u7406\u90a3\u4e9b**\u6070\u597d\u51fa\u73b0\u4e24\u6b21\u7684\u6570**\uff0c\u6839\u636e\u5927\u5c0f\u5728\u5de6\u53f3\u5404\u63d2\u5165\u4e00\u4e2a\uff08\u4e0d\u96be\u53d1\u73b0\u56fa\u5b9a\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u7684\u6392\u5217\u987a\u5e8f\u540e\u65b9\u6848\u552f\u4e00\uff09\u5373\u53ef\u3002\n\n\u80fd\u6309\u8fd9\u79cd\u65b9\u5f0f\u6784\u9020\u663e\u7136\u662f\u4e00\u4e2a\u5145\u8981\u6761\u4ef6\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\uff1a\n\n- \u4ee4 $cnt$ \u8868\u793a\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u4e14\u975e\u6700\u5c0f\u503c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5219\u7b54\u6848\u4e3a $2^{cnt}$\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6ce8\u610f\u5230\u6211\u4eec\u5728\u4e0a\u9762\u7684\u6784\u9020\u4e2d\u662f\u628a\u8fd9 $cnt$ \u4e2a\u6570**\u968f\u610f\u5212\u5206\u6210\u4e24\u5806**\u7684\uff0c\u4e14\u56e0\u4e3a\u8981\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5173\u5fc3\u987a\u5e8f\u3002\u4e8e\u662f\u65b9\u6848\u6570\u5373\u4e3a\u5b50\u96c6\u6570\u91cf $2^{cnt}$\u3002\n\n\u5b9e\u73b0\u65f6\uff0c\u5148\u9884\u5904\u7406 $2$ \u7684\u5e42\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6876\u7ef4\u62a4\u6bcf\u4e2a\u6570\u5f53\u524d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5b9e\u73b0 `add/del` \u64cd\u4f5c\u7ef4\u62a4**\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u6570**\u548c**\u51fa\u73b0\u6b21\u6570 $> 2$ \u7684\u6570**\u7684\u6570\u91cf\uff0c\u518d\u7528\u4e00\u4e2a multiset \u7ef4\u62a4\u6240\u6709\u6570\uff08\u56e0\u4e3a\u4f60\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u6700\u5c0f\u503c\uff09\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n + m) \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <set>\n#include <cstdio>\n\nusing namespace std;\n\nint cnt1 = 0, cnt2 = 0;\nint power[500007], a[500007], cnt[500007];\nmultiset<int> s;\n\ninline void init(int n, int p){\n\tpower[0] = 1;\n\tfor (register int i = 1; i <= n; i++){\n\t\tpower[i] = power[i - 1] * 2 % p;\n\t}\n}\n\ninline int read(){\n\tint ans = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\tans = ans * 10 + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn ans;\n}\n\ninline void add(int x){\n\tcnt[x]++;\n\ts.insert(x);\n\tif (cnt[x] == 1){\n\t\tcnt1++;\n\t} else if (cnt[x] == 2){\n\t\tcnt1--;\n\t} else if (cnt[x] == 3){\n\t\tcnt2++;\n\t}\n}\n\ninline void output(){\n\tif (cnt2 > 0 || cnt[*s.begin()] > 1){\n\t\tprintf(\"0\\n\");\n\t} else {\n\t\tprintf(\"%d\\n\", power[cnt1 - 1]);\n\t}\n}\n\ninline void del(int x){\n\tcnt[x]--;\n\ts.erase(s.lower_bound(x));\n\tif (cnt[x] == 0){\n\t\tcnt1--;\n\t} else if (cnt[x] == 1){\n\t\tcnt1++;\n\t} else if (cnt[x] == 2){\n\t\tcnt2--;\n\t}\n}\n\nint main(){\n\tint n = read(), m = read(), p = read();\n\tinit(n - 1, p);\n\tfor (register int i = 1; i <= n; i++){\n\t\ta[i] = read();\n\t\tadd(a[i]);\n\t}\n\toutput();\n\tfor (register int i = 1; i <= m; i++){\n\t\tint x = read(), k = read();\n\t\tdel(a[x]);\n\t\ta[x] = k;\n\t\tadd(k);\n\t\toutput();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1670313481,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 \u300cDPOI-1\u300d\u4f18\u7f8e\u7684\u5e8f\u5217"
    },
    {
        "content": "\u505a\u6cd5\uff1a\u8ba1\u6570 + \u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u53ef\u80fd\u8fd9\u4e2a\u505a\u6cd5\u96be\u5ea6\u4e0d\u6b62\u9ec4\u3002\n\n\u9898\u633a\u4e0d\u9519\u7684\uff0c\u5c31\u662f\u4e0d\u77e5\u9053\u6bd4\u8d5b\u7684\u65f6\u5019\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u505a\u3002\n\n\u663e\u7136\u9898\u76ee\u662f\u8ba9\u6211\u4eec\u6c42\u51fa\u4e00\u4e2a\u5e8f\u5217\u7684\u5168\u6392\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u5168\u6392\u5217\u662f\u4e25\u683c\u5355\u8c37\u7684\uff0c\u5176\u4e2d\u5f62\u5982 `4321` \u7684\u4e5f\u7b97\u3002\n\n\u9996\u5148\u8003\u8651\u65e0\u89e3\u5373\u65b9\u6848\u6570\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u53d1\u73b0\u53ea\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u6700\u5c0f\u7684\u6570\u51fa\u73b0\u4e86\u4e24\u6b21\u65f6\u65e0\u89e3\uff0c\u56e0\u4e3a\u60f3\u8981\u5f62\u6210\u5355\u8c37\uff0c\u8fd9\u4e24\u4e2a\u6570\u5fc5\u987b\u653e\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u7531\u4e8e\u662f\u4e25\u683c\u5355\u8c37\uff0c\u76f8\u90bb\u4e24\u6570\u4e0d\u80fd\u76f8\u7b49\uff0c\u6240\u4ee5\u4e00\u5b9a\u6ca1\u6709\u5408\u6cd5\u65b9\u6848\u3002\n1. \u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86\u4e09\u6b21\u6216\u4e09\u6b21\u4ee5\u4e0a\u3002\u82e5\u6709\u4e24\u4e2a\u76f8\u7b49\uff0c\u5219\u53ef\u4ee5\u628a\u4e00\u4e2a\u653e\u5728\u8c37\u5e95\u5de6\u8fb9\uff0c\u4e00\u4e2a\u653e\u5728\u8c37\u5e95\u53f3\u8fb9\uff0c\u800c\u51fa\u73b0\u4e86\u4e09\u4e2a\u663e\u7136\u65e0\u6cd5\u5b89\u6392\u3002\n\n\u5f53\u7b54\u6848\u4e0d\u4e3a $0$ \u65f6\uff0c\u7531\u4e8e\u8c37\u5e95\u56fa\u5b9a\uff0c\u6240\u4ee5\u6bcf\u4e2a**\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570**\u90fd\u53ef\u4ee5\u653e\u5728\u8c37\u5e95\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\uff08\u6ce8\u610f\u5982\u679c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u5728\u8c37\u5e95\u5de6\u8fb9\uff0c\u4e00\u4e2a\u5728\u53f3\u8fb9\uff09\uff0c\u5373 $2$ \u79cd\u9009\u62e9\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u82e5\u6709 $n$ \u4e2a\u975e\u8c37\u5e95\u7684\u4e14\u53ea\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u5c31\u662f $2^n$\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5f53\u6700\u5927\u503c\u5927\u4e8e $2$ \u65f6\uff0c\u5219\u65e0\u89e3\u3002\u7136\u540e\u7528\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u5224\u65ad\u6700\u5c0f\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u82e5\u5927\u4e8e $1$ \u5219\u65e0\u89e3\u3002\n\n\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u6570\u7684\u6570\u91cf\uff0c\u8bb0\u4e3a $cnt$\uff0c\u7531\u4e8e\u4e0a\u9762\u5df2\u7ecf\u5224\u65ad\u8fc7\u8c37\u5e95\u662f $1$\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa $2^{cnt - 1}$ \u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nconst int N = 500010;\n#define int long long\n\nstruct SegmentTree {\n    int l, r;\n    int num, dat, sum;\n} t[N << 2];\n\nint n, m, p;\nint a[N], two[N];\n\nvoid build(int p, int l, int r) {\n    t[p].l = l, t[p].r = r;\n    if (l == r) { t[p].num = t[p].dat = t[p].sum = 0; return; }\n    int mid = (l + r) >> 1;\n    build(p << 1, l, mid), build((p << 1) | 1, mid + 1, r);\n    t[p].num = t[p].dat = t[p].sum = 0;\n}\n\nvoid change(int p, int x, int v) {\n    if (t[p].l == t[p].r) {\n        t[p].sum += v, t[p].dat += v;\n        if (t[p].sum == 1) t[p].num = 1;\n        else t[p].num = 0;\n        return;\n    }\n    int mid = (t[p].l + t[p].r) >> 1;\n    if (x <= mid) change(p << 1, x, v);\n    if (x > mid) change((p << 1) | 1, x, v);\n    t[p].sum = t[p << 1].sum + t[(p << 1) | 1].sum;\n    t[p].num = t[p << 1].num + t[(p << 1) | 1].num;\n    t[p].dat = max(t[p << 1].dat, t[(p << 1) | 1].dat);\n}\n\nint ask(int p) {\n    if (t[p].l == t[p].r) return t[p].sum;\n    int val = t[p << 1].sum;\n    if (val) return ask(p << 1);\n    return ask((p << 1) | 1);\n}\n\nsigned main() {\n    scanf(\"%lld%lld%lld\", &n, &m, &p);\n    two[0] = 1; build(1, 1, N - 1);\n    for (int i = 1; i < N; i++) two[i] = two[i - 1] * 2 % p;\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%lld\", a + i);\n        change(1, a[i], 1);\n    }\n    if (t[1].dat > 2 || ask(1) != 1) puts(\"0\");\n    else printf(\"%lld\\n\", two[t[1].num - 1]);\n    while (m--) {\n        int x, v; scanf(\"%lld%lld\", &x, &v);\n        change(1, a[x], -1), change(1, v, 1), a[x] = v;\n        if (t[1].dat > 2 || ask(1) != 1) puts(\"0\");\n        else printf(\"%lld\\n\", two[t[1].num - 1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1672715958,
        "uid": 574944,
        "name": "Micnation_AFO",
        "ccfLevel": 4,
        "title": "P8895 \u300cDPOI-1\u300d\u4f18\u7f8e\u7684\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8895)\n\n## \u7b80\u5316\u9898\u610f\n\n\u505a\u9898\u5148\u7b80\u5316\u4e00\u4e0b\u9898\u610f\u3002\n\n\u7ed9\u5b9a $n$ \u4e2a\u6570\uff0c\u8981\u6c42\u6392\u5e8f\u540e\u6ee1\u8db3\u8be5\u5e8f\u5217\u4e3a\u5148\u4e0b\u964d\u540e\u4e0a\u5347\uff08\u76f8\u90bb\u4e24\u4e2a\u4e0d\u80fd\u76f8\u7b49\uff09\uff0c\u6c42\u603b\u65b9\u6848\u6570\u3002\n\n## \u6b63\u6587\u90e8\u5206\n\n\uff08\u8868\u8ff0\u6216\u8bb8\u4e0d\u592a\u5bf9\uff0c\u8bf7\u5927\u4f6c\u6307\u51fa\uff09\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u627e\u5230\u6700\u5c0f\u503c\uff0c\u663e\u7136\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u8f6c\u6298\u70b9\u3002\u7531\u4e8e\u4e0d\u80fd\u76f8\u7b49\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u5426\u5219\u7b54\u6848\u4e3a $0$\u3002\n\n\u5b9a\u597d\u4e86\u6700\u5c0f\u503c\uff0c\u7136\u540e\u8003\u8651\u5176\u4ed6\u7684\u6570\u6446\u653e\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\u6837\u4f8b $1$\uff0c\u6700\u5c0f\u503c\u4e3a $1$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u6446\u653e $1$\uff1a\n\n$$[]\\quad[]\\cdots[1]\\cdots[]\\quad[]$$\n\n\u9996\u5148 $3$ \u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u5de6\u53f3\u90fd\u80fd\u653e\u3002$2$ \u6709\u4e24\u4e2a\uff0c\u53ea\u80fd\u4e00\u8fb9\u653e\u4e00\u4e2a\uff0c\u5426\u5219\u540c\u65f6\u653e\u4e00\u8fb9\u4f1a\u4f7f\u5f97\u4ed6\u4eec\u76f8\u7b49\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6211\u4eec\u7b97\u5f97\u7b54\u6848\u4e3a $2\\times 1=2$\u3002\n\n\u4fee\u6539\u4e86\u4e00\u6b21\u540e\uff0c\u5e8f\u5217\u53d8\u6210\u4e86 $1\\ 2\\ 4\\ 3$\u3002\n\n\u8fd9\u65f6\uff0c\u548c\u6211\u4eec\u4e0a\u9762\u7684\u5206\u6790\u4e00\u6837\uff0c\u6211\u4eec\u77e5\u9053 $2$\u3001$3$\u3001$4$\uff0c\u90fd\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e24\u8fb9\u90fd\u53ef\u4ee5\u653e\uff0c\u90a3\u4e48\u5c31\u7b97\u5f97\u7b54\u6848\u4e3a $2\\times 2\\times 2=8$\u3002\n\n\u4ed4\u7ec6\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u548c\u6570\u662f\u591a\u5c11\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u548c\u6709\u51e0\u4e2a\u76f8\u540c\u7684\u6570\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5f00\u4e00\u4e2a\u6876\u6765\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u6570\u91cf\u3002\n\n\u65e2\u7136\u548c\u6570\u7684\u6570\u91cf\u6709\u5173\u7cfb\uff0c\u90a3\u4e48\u6570\u592a\u591a\u4f1a\u6709\u4ec0\u4e48\u5f71\u54cd\u5417\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6570\u91cf $\\ge 3$ \u65f6\uff0c\u65e0\u8bba\u600e\u4e48\u6446\u653e\uff0c\u4e24\u8fb9\u90fd\u4f1a\u6709\u76f8\u540c\uff0c\u8fd9\u65f6\u7b54\u6848\u4e5f\u4e3a $0$\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e0b\u601d\u8def\uff1a\n\n1. \u9996\u5148\u627e\u5230\u6700\u5c0f\u503c\u7684\u4e2a\u6570\uff0c\u5982\u679c $>1$\uff0c\u5219\u7b54\u6848\u4e3a $0$\u3002\n2. \u5982\u679c\u6709\u76f8\u540c\u7684\u6570\u8d85\u8fc7\u4e09\u4e2a\uff0c\u90a3\u4e48\u7b54\u6848\u4e5f\u4e3a $0$\u3002\n3. \u5f53\u6570\u91cf\u4e3a $2$ \u4e2a\u65f6\uff0c\u7b54\u6848 $\\times 1$\uff0c\u5f53\u6570\u91cf\u4e3a $1$ \u65f6\uff0c\u7b54\u6848 $\\times 2$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u5206\u522b\u8bb0\u5f55\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u6570\u91cf\u4e3a $1$\u3001$2$ \u7684\u6570\uff0c\u5047\u8bbe\u662f $s1$ \u548c $s2$\u3002\u4f46\u56e0\u4e3a\u6570\u91cf\u4e3a $2$ \u65f6\uff0c\u7b54\u6848 $\\times 1$\uff0c\u6240\u4ee5 $s2$ \u53ef\u4ee5\u4e0d\u7528\u8bb0\u3002\u518d\u8bb0\u5f55\u6570\u91cf $\\ge 3$ \u7684\uff0c\u5047\u8bbe\u4e3a $s3$\u3002\n\n\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\u7b54\u6848\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u5373\u4e0a\u9762\u7684\u60c5\u51b5 $1$ \u548c\u60c5\u51b5 $2$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u4e3a $2^{s1-1}$\uff0c$s1-1$ \u662f\u56e0\u4e3a\u8fd9\u65f6\u6700\u5c0f\u503c\u7684\u4e2a\u6570\u4e5f\u662f $1$\uff0c\u5e76\u4e14\u9700\u8981\u53bb\u6389\u5b83\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=5e5+5;\nint n,m;ll p;\nll a[N],tong[N];\nll s1,s3;\nll QuickPow(ll a,ll b)\n{\n\tll res=1;\n\twhile(b>0)\n\t{\n\t\tif(b&1)res=(res*a)%p;\n\t\ta=(a*a)%p;b>>=1;\n\t}\n\treturn res;\n}\nll calc()\n{\n\tif(s3)return 0;\n\tll Min=LONG_LONG_MAX;\n\tfor(int i=1;i<=n;i++)Min=min(Min,a[i]);\n\tif(tong[Min]!=1)return 0;\n\treturn QuickPow(2,s1-1);\n}\nint main(){\n\tscanf(\"%d%d%lld\",&n,&m,&p);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&a[i]),tong[a[i]]++;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(tong[i]==1)s1++;\n\t\tif(tong[i]>=3)s3++;\n\t}//s1,s3\u7684\u610f\u4e49\u5728\u4e0a\u9762\u8bb2\u5230\u4e86\n\tprintf(\"%lld\\n\",calc());\n\twhile(m--)\n\t{\n\t\tint x,k;\n\t\tscanf(\"%d%d\",&x,&k);\n\t\t//del\n\t\tif(tong[a[x]]==3)s3--;\n\t\tif(tong[a[x]]==2)s1++;\n\t\tif(tong[a[x]]==1)s1--;\n\t\ttong[a[x]]--;\n\t\t//add\n\t\tif(tong[k]==0)s1++;\n\t\tif(tong[k]==1)s1--;\n\t\tif(tong[k]==2)s3++;\n\t\ttong[k]++;\n\t\t//\n\t\ta[x]=k;\n\t\tprintf(\"%lld\\n\",calc());\n\t}\n\treturn 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm)$\uff08\u7136\u800c\u8fd8\u8981\u7b97\u4e0a\u6bcf\u4e2a\u8be2\u95ee\u7684\u5feb\u901f\u5e42\u7684\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a $2^i$\uff09\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u4ee3\u7801\u7684\u74f6\u9888\u5728\u4e8e\u6bcf\u4e00\u6b21\u6c42 $\\min$ \u65f6\uff0c\u90fd\u9700\u8981 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u53ea\u8981\u8fd9\u91cc\u964d\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u6c42 $\\min$\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2 $\\min$ \u5373\u53ef\uff0c\u5b98\u65b9\u9898\u89e3\u662f\u7528 multiset\uff0c~~\u4f46\u849f\u84bb\u4e0d\u4f1a\u554a~~\u3002\n\n\u6700\u540e\u7684\u4ee3\u7801\u5c31\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002~~\u5c31\u6ca1\u6709\u5fc5\u8981\u5c55\u793a\u4e86\u5427\u3002\u3002\u3002~~\n\n\u4e8e\u662f\uff0c$O(nm)\\xrightarrow{}O((n+m)\\log n)$\uff08\u540c\u4e0a\uff0c\u5e76\u6ca1\u6709\u8003\u8651\u5feb\u901f\u5e42\uff09\uff0c\u5b8c\u7f8e\u901a\u8fc7\u6b64\u9898\u3002\n\n## \u9898\u5916\u8bdd\n\n\u5173\u4e8e\u6211\u7684 $s3$ \u7684\u8ba1\u7b97\u65f6\u72af\u4e86\u4e00\u4e2asb\u9519\u8bef\uff0c\u5199\u4e86\uff1a\n```cpp\nif(tong[a[i]]==3)s3++;\n```\n\u7adf\u7136\u4e5f\u8fc7\u4e86\u3002\u7136\u540e\u51fa\u9898\u4eba\u5c31\u641e\u4e86\u4e00\u4e2a\u6570\u636eHack\u6211\u4e86\u3002\u3002\u3002\u4e3a\u6b64\u8fd8\u5199\u5728\u4e86\u9898\u5934\u3002\u3002\u3002",
        "postTime": 1671368582,
        "uid": 537046,
        "name": "\u5927\u773c\u4ed4Happy",
        "ccfLevel": 5,
        "title": "P8895 \u300cDPOI-1\u300d\u4f18\u7f8e\u7684\u5e8f\u5217 \u9898\u89e3"
    }
]