[
    {
        "content": "[![License: CC BY-SA 4.0](https://img.shields.io/badge/License-CC_BY--SA_4.0-green.svg)](https://creativecommons.org/licenses/by-sa/4.0/)\n\n\u672c\u6587\u4ee5 [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) \u53d1\u5e03\u3002\n\n\u641c\u4e86\u4e00\u5708\u6ca1\u641c\u5230\u5178\u578b\u4f8b\u9898\uff0c\u6240\u4ee5\u8fd9\u91cc\u81ea\u5df1\u5199\u4e00\u4e2a\u9898\u89e3\u3002\n\n\u8fd9\u9053\u9898\u7684\u969c\u788d\u70b9\u975e\u5e38\u7a00\u758f\uff0c\u6240\u4ee5\u5927\u6982\u4e0d\u80fd\u7528\u5e38\u89c1\u7684\u60ac\u7ebf\u6cd5\u6216\u8005\u5355\u8c03\u6808\u3002\u5ffd\u7565\u8fb9\u754c\u7684\u8bdd\uff0c\u4e00\u4e2a\u5c40\u90e8\u7684\u6781\u5927\u6b63\u65b9\u5f62\u80af\u5b9a\u7531\u67d0\u4e00\u5bf9\u969c\u788d\u7269\u9650\u5236\u4f4f\u4e86\u5927\u5c0f\uff0c\u90a3\u4e48\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u5bf9\u969c\u788d\u7269\u5373\u53ef\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u969c\u788d\u7269\uff0c\u5728\u4ee5\u5b83\u4eec\u4e24\u4e2a\u8fde\u7ebf\u4e3a\u5bf9\u89d2\u7ebf\u7684\u77e9\u5f62\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u53e6\u5916\u7684\u969c\u788d\u7269\uff0c\u90a3\u4e48\u8fd9\u4e00\u5bf9\u80af\u5b9a\u9650\u5236\u4e0d\u4f4f\u6b63\u65b9\u5f62\u7684\u5927\u5c0f\u3002\n\n  ![](https://images-64b.pages.dev/P8404/A.svg)\n\n- \u77e9\u5f62\u91cc\u6ca1\u6709\u969c\u788d\u7269\u7684\u8bdd\uff0c\u770b\u957f\u8f74\u7684\u5782\u76f4\u65b9\u5411\u4e0a\u627e\u4e0a\u4e0b\u754c\uff0c\u5224\u65ad\u4e0a\u4e0b\u754c\u4e4b\u95f4\u662f\u5426\u80fd\u5bb9\u4e0b\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\n  ![](https://images-64b.pages.dev/P8404/B.svg)\n\n\u5f53\u7136\uff0c\u8fb9\u754c\u4ee5\u53ca\u8fb9\u754c\u9876\u70b9\u9700\u8981\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\uff0c\u76f4\u63a5\u628a\u9876\u70b9\u4e5f\u653e\u5230\u969c\u788d\u7269\u91cc\u518d\u9650\u5236\u4e00\u4e0b\u4e0a\u4e0b\u754c\u7684\u521d\u59cb\u503c\u3002\n\n## \u4ee3\u7801\n\n\u50a8\u5b58\u7ed3\u6784\u53ca\u9884\u5904\u7406\uff0c\u9884\u5148\u6392\u4e2a\u5e8f\uff1a\n\n```cpp\nstruct Point {\n  int x, y;\n  int xOrder, yOrder;\n};\nconstexpr int LIMIT = 100 + 4;\n\nPoint trees[LIMIT];\nPoint* treesXSorted[LIMIT];\nPoint* treesYSorted[LIMIT];\n\nvoid sortAndPrune(int T) {\n  sort(treesXSorted, treesXSorted + T, [](const Point* a, const Point* b) {\n    return a->x < b->x;\n  });\n  sort(treesYSorted, treesYSorted + T, [](const Point* a, const Point* b) {\n    return a->y < b->y;\n  });\n  for (int i = 0; i != T; ++i) {\n    treesXSorted[i]->xOrder = i;\n    treesYSorted[i]->yOrder = i;\n  }\n}\n```\n\n\u5bf9\u4e8e\u67d0\u4e00\u5bf9\u969c\u788d\u7269\u67e5\u627e\u5176\u9650\u5236\u4f4f\u7684\u6700\u5927\u6b63\u65b9\u5f62\uff1a\uff08\u76f4\u63a5\u4e0a\u4e86 `template` \u5e0c\u671b\u7f16\u8bd1\u5668\u80fd\u591f\u81ea\u52a8 `inline`\uff09\n\n```cpp\nusing Getter = int(const Point&);\n\ntemplate<Point** axis>\ninline int axisWiseMax(const Point& a, const Point& b, int n,\n                       int dx, Getter getY,\n                       Getter order) {\n  int minY = 0, maxY = n;\n  int lessY = min(getY(a), getY(b)), greaterY = max(getY(a), getY(b));\n  const Point& larger = order(a) > order(b) ? a : b;\n  const Point& smaller = order(a) > order(b) ? b : a;\n  for (int o = order(smaller) + 1; o != order(larger); ++o) {\n    const Point& p = *axis[o];\n    if (getY(p) <= lessY) {\n      if (getY(p) > minY) {\n        minY = getY(p);\n      }\n    } else if (greaterY <= getY(p)) {\n      if (getY(p) - 1 < maxY) {\n        maxY = getY(p) - 1;\n      }\n    } else {\n      return 0;\n    }\n  }\n  return min(maxY - minY, dx);\n}\n\ninline int maxBetween(const Point& a, const Point& b, int n) {\n  int dx = abs(a.x - b.x) - 1;\n  int dy = abs(a.y - b.y) - 1;\n  if (dx >= dy) {\n    return axisWiseMax<treesXSorted>(a, b, n, dx,\n                       [](const Point& p) { return p.y; },\n                       [](const Point& p) { return p.xOrder; });\n  } else {\n    return axisWiseMax<treesYSorted>(a, b, n, dy,\n                       [](const Point& p) { return p.x; },\n                       [](const Point& p) { return p.yOrder; });\n  }\n}\n```\n\n\u904d\u5386\u6bcf\u4e00\u5bf9\u969c\u788d\u7269\u7684\u4ee3\u7801\u7565\u3002\u8fb9\u754c\u7684\u56db\u4e2a\u9876\u70b9\u4e5f\u8981\u52a0\u5230\u969c\u788d\u7269\u91cc\u3002\n\n### \u6269\u5c55\uff1a\u5982\u679c\u6cf3\u6c60\u53ef\u4ee5\u662f\u957f\u65b9\u5f62\uff1f\n\n\u8fd9\u65f6\u5019\u4e00\u4e2a\u957f\u65b9\u5f62\u4e00\u5b9a\u53d7\u5230\u4e24\u5bf9\u969c\u788d\u70b9\u7684\u9650\u5236\uff0c\u4e00\u5bf9\u4e0a\u4e0b\u65b9\u5411\uff0c\u4e00\u5bf9\u5de6\u53f3\u65b9\u5411\u3002\u90a3\u4e48\u6309\u4e0a\u9762\u7684\u601d\u8def\u53ef\u4ee5\u4e24\u4e2a\u65b9\u5411\u90fd\u904d\u5386\u4e00\u6b21\u3002\u66f4\u6709\u6548\u7387\u7684\u8bdd\u662f\u53ea\u6309\u4e00\u4e2a\u65b9\u5411\u904d\u5386\u4e00\u904d\uff0c\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u5904\u7406\u4e00\u4e9b\u8fb9\u4e0e\u8fb9\u754c\u91cd\u5408\u7684\u7279\u6b8a\u60c5\u51b5\u3002\n\n## \u6700\u5927\u5b50\u77e9\u9635\u76f8\u5173\u95ee\u9898\n\n\u672c\u9898\u56e0\u4e3a\u969c\u788d\u70b9\u6bd4\u8f83\u7a00\u758f\uff0c\u800c $n$ \u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u969c\u788d\u7269\u7740\u624b\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4e0d\u662f\u5f88\u7a00\u758f\u7684\u4f8b\u9898\uff0c\u6709\u5176\u4ed6\u5e38\u89c1\u7684\u505a\u6cd5\u3002~~\u627e\u4e0d\u5230\u5176\u5b83\u6bd4\u8f83\u7a00\u758f\u7684\u4f8b\u9898\u3002~~\n\n### \u969c\u788d\u4e25\u683c\u4e0d\u53ef\u8de8\u8d8a\n\n\u4e00\u822c\u662f\u60ac\u7ebf\u6cd5\u6216\u8005\u662f\u5355\u8c03\u6808\u3002\n\n- [P1387 \u6700\u5927\u6b63\u65b9\u5f62](https://www.luogu.com.cn/problem/P1387)\uff1a\n  \u4e0e\u672c\u9898\u76f8\u540c\uff0c\u4f46\u969c\u788d\u70b9\u5bc6\u96c6\u3002\n- [P4147 \u7389\u87fe\u5bab](https://www.luogu.com.cn/problem/P4147)\uff1a\n  \u6c42\u7684\u662f\u957f\u65b9\u5f62\u3002\u969c\u788d\u70b9\u6bd4\u8f83\u5bc6\u96c6\u3002\n\n### \u969c\u788d\u8d4b\u8d1f\u6743\n\n\u6ca1\u6709\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u969c\u788d\u70b9\uff0c\u5404\u70b9\u6709\u53ef\u8d1f\u6743\u91cd\u3002\u8fd9\u79cd\u9898\u57fa\u672c\u53ea\u80fd\u628a\u6240\u6709\u7ec4\u5408\u60c5\u51b5\u679a\u4e3e\u4e00\u904d\u3002\n\u6211\u4eec\u6700\u591a\u80fd\u591f\u4f18\u5316\u4e00\u4e0b\u8fd9\u79cd\u8fc7\u7a0b\uff0c\u4f8b\u5982\u7528\u6700\u5927\u5b50\u6bb5\u548c\u3001\u5355\u8c03\u6808\u7b49\u4f18\u5316\u4e00\u4e2a\u7ef4\u5ea6\u65b9\u5411\u7684\u679a\u4e3e\u3002\n\n- [P1115 \u6700\u5927\u5b50\u6bb5\u548c](https://www.luogu.com.cn/problem/solution/P1115)\uff1a\n  \u53ef\u770b\u4f5c\u4e00\u7ef4\u77e9\u9635\u3002\n- [P1719 \u6700\u5927\u52a0\u6743\u77e9\u5f62](https://www.luogu.com.cn/problem/P1719)\uff1a\n  \u6743\u503c\u6700\u5927\u7684\u5b50\u77e9\u9635\u3002\n- [P1565 \u725b\u5bab](https://www.luogu.com.cn/problem/P1565)\uff1a\n  \u6700\u5927\u9762\u79ef\u7684\u5b50\u77e9\u9635\uff0c\u4f46\u8981\u6c42\u6743\u503c\u6c42\u548c\u4e3a\u6b63\u3002\n- [P2331 [SCOI2005]\u6700\u5927\u5b50\u77e9\u9635](https://www.luogu.com.cn/problem/P2331)\uff1a\n  \u6c42 $k$ \u4e2a\u4e0d\u91cd\u53e0\u7684\u5b50\u77e9\u9635\u4f7f\u6743\u503c\u6700\u5927\u3002~~\u8fd8\u597d\u6570\u636e\u89c4\u6a21\u5f88\u5c0f\u3002~~",
        "postTime": 1655269180,
        "uid": 736107,
        "name": "gudzpoz",
        "ccfLevel": 0,
        "title": "\u6700\u5927\u5b50\u77e9\u9635\u4e2a\u4eba\u603b\u7ed3 - P8404 [CCC 2022 J5] Square Pool"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n[~~\u81ea\u5df1\u770b~~](https://www.luogu.com.cn/problem/P8404)\n\n\n------------\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f**\u679a\u4e3e**\u3002\n\n55pts \u89e3\u6cd5\uff1a\n\n\u4f7f\u7528\u524d\u7f00\u548c\u50a8\u5b58\u5730\u56fe\u6811\u7684\u68f5\u6570\uff0c\u53bb\u4e8c\u5206\u679a\u4e3e\u6c34\u6c60\u7684\u8fb9\u957f\uff0c\u7136\u540e\u53bb\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u5de6\u4e0a\u89d2\u4f4d\u7f6e\uff0c\u68c0\u9a8c\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n100pts \u89e3\u6cd5\uff1a\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6811\u662f\u975e\u5e38\u7a00\u758f\u7684\uff0c\u6700\u591a\u4ec5\u4e3a $100$ \u68f5\u3002\u56e0\u6b64\u5c31\u60f3\uff1a\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u6811\u6765\u679a\u4e3e\u6b63\u65b9\u5f62\u3002\n\n\u5f88\u660e\u663e\u7684\uff0c\u6b63\u65b9\u5f62\u7684\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u754c\u9650\uff0c\u4f1a\u88ab\u6811\u6216\u8005\u5899\u6240\u9650\u5236\u3002\u800c\u6b64\u65f6\u5b83\u7684\u8fb9\u957f\uff0c\u5c31\u4e3a\u4e0a\u4e0b\u754c\u8ddd\u79bb\u3001\u5de6\u53f3\u754c\u8ddd\u79bb\u4e2d\u66f4\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\u800c\u4ee3\u8868\u4e0a\u4e0b\u754c\u7684\u6811\u4e00\u5b9a\u5728\u4e24\u68f5\u5de6\u53f3\u754c\u6811\u4e4b\u95f4\u3002\u56e0\u6b64\uff0c\u57fa\u672c\u7684\u679a\u4e3e\u601d\u8def\uff0c\u5c31\u662f\u5c06\u6811\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u6392\u5e8f\uff0c\u63a5\u7740\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u5de6\u53f3\u754c\u3002\u5728\u6bcf\u4e00\u6b21\u4ece\u5de6\u754c\u5f00\u59cb\u5f80\u53f3\u679a\u4e3e\u53f3\u754c\u65f6\uff0c\u5c31\u53ef\u4ee5\u987a\u4fbf\u6c42\u51fa\u4e2d\u95f4\u7684\u4e0a\u4e0b\u754c\u3002\n\n![map](https://cdn.luogu.com.cn/upload/image_hosting/me25xwob.png)\n\n\u800c\u4e0a\u4e0b\u754c\u6811\u7684\u5177\u4f53\u786e\u5b9a\u65b9\u5f0f\uff0c\u76f8\u5f53\u4e8e\u4ee5\u5de6\u754c\u6811\u4e3a\u4e2d\u8f74\uff0c\u53d6\u4e00\u8def\u4e0a\u627e\u8fc7\u53bb\uff0c\u79bb\u8fd9\u4e2a\u201c\u4e2d\u8f74\u201d\u6700\u8fd1\u7684\u6811\uff0c\u5c31\u50cf\u5411\u4e2d\u95f4\u538b\u7f29\u8fc7\u53bb\u4e00\u6837\u3002\n\n![map2](https://cdn.luogu.com.cn/upload/image_hosting/o2gqrpqx.png)\n\n\u8fd9\u4e00\u6bb5\u7684\u4ee3\u7801\u5927\u6982\u5982\u4e0b\uff1a\n\n```cpp\nsort(tree+1, tree+1+t, cmp1);\nint ans = 0;\nfor(int i=1; i<=t; i++){\n    int minn = 1, maxn = n;\t\t\t\t\t\t\t\t\t\t//\u4e0a\u4e0b\u754c\u5728\u521d\u59cb\u65f6\u4e3a\u5899 \n    for(int j=i+1; j<=t; j++){\n        if(maxn-minn-1 < tree[j].x-tree[i].x-1) break;          //\u5982\u679c\u4e0a\u4e0b\u754c\u8ddd\u79bb\u5c0f\u4e8e\u5de6\u53f3\u754c\u8ddd\u79bb\uff0c\u65e0\u7ee7\u7eed\u679a\u4e3e\u5fc5\u8981 \n        ans = max(ans, tree[j].x-tree[i].x-1);                  //\u68c0\u6d4b\u8fb9\u957f \n        if(tree[j].y<=tree[i].y) minn = max(minn, tree[j].y);   //\u6253\u64c2\u53f0\uff0c\u6c42\u4e0a\u4e0b\u754c \n        if(tree[j].y>=tree[i].y) maxn = min(maxn, tree[j].y);\n    }\n}\n```\n\n\u73b0\u5728\u4f60\u53ef\u4ee5\u5f00\u5fc3\u5730\u53d1\u73b0\u6211\u4eec\u5df2\u7ecf\u8fc7\u4e86\u7b2c\u4e8c\u4e2a\u6837\u4f8b\uff0c\u4e5f\u5c31\u662f**\u6ca1\u6709\u5899 / \u4e0a\u754c\u6216\u4e0b\u754c\u4e3a\u5899 / \u4e0a\u754c\u4e0e\u4e0b\u754c\u4e3a\u5899**\u7684\u60c5\u51b5\u3002\u4f46\u662f\uff0c\u8fd8\u6709\u4e00\u4e9b\u6709\u9760\u5899\u7684\u7279\u6b8a\u60c5\u51b5\u6211\u4eec\u8fd8\u6ca1\u6709\u5904\u7406\u3002\n\n\n------------\n\n#### 1. \u56db\u754c\u4e3a\u5899\n\n\u663e\u7136\u5728\u6709\u6811\u7684\u60c5\u51b5\u4e0b\u5c31\u4e0d\u5b58\u5728\u3002\n\n------------\n\n#### 2. \u6709\u76f8\u90bb\u4e24\u754c / \u4e09\u754c\u4e3a\u5899\n\n\u8fd9\u4fbf\u662f\u6837\u4f8b\u4e00\u7684\u60c5\u5f62\u3002\n\n![sample1](https://cdn.luogu.com.cn/upload/image_hosting/c2b58ek8.png)\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u6b64\u65f6\u7684\u6700\u4f18\u6b63\u65b9\u5f62\u5fc5\u6709\u4e00\u4e2a\u89d2\u662f\u9760\u5728\u5899\u4e0a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u5730\u56fe\u7684\u56db\u4e2a\u89d2\u4e0a\u79cd\u6811\uff0c\u5373\u53ef\u5c06\u8fd9\u79cd\u60c5\u51b5\u8f6c\u5316\u4e3a\u5168\u662f\u6811\u7684\u60c5\u51b5\u3002\n\n\n------------\n\n#### 3. \u6709\u5de6\u754c\u6216\u53f3\u754c / \u5de6\u754c\u4e0e\u53f3\u754c\u4e3a\u5899\n\n![:)](https://cdn.luogu.com.cn/upload/image_hosting/m5175mdn.png)\n\n\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u4e0a\u4e0b\u987a\u5e8f\u6392\u5e8f\uff0c\u5e76\u4ee5\u679a\u4e3e\u4e0a\u4e0b\u754c\u7684\u65b9\u5f0f\u8d70\u4e00\u904d\u6211\u4eec\u4e4b\u524d\u7684\u679a\u4e3e\u5de6\u53f3\u754c\u7684\u7a0b\u5e8f\u5373\u53ef\u3002\n\n\n------------\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXT = 105;\nint n, t;\nstruct node{\n\tint x, y;\n} tree[MAXT];\n\nbool cmp1(node a, node b){\n\treturn a.x < b.x;\n}\n\nbool cmp2(node a, node b){\n\treturn a.y < b.y;\n}\n\nint main(){\n\tscanf(\"%d%d\", &n, &t);\n\tn++;\n\tfor(int i=1; i<=t; i++) scanf(\"%d%d\", &tree[i].x, &tree[i].y);\n\t//\u56db\u89d2\u79cd\u6811 \n\ttree[++t] = {0,0}, tree[++t] = {0,n};\n\ttree[++t] = {n,n}, tree[++t] = {n,0};\n\t//\u679a\u4e3e\u5de6\u53f3\u754c \n\tsort(tree+1, tree+1+t, cmp1);\n\tint ans = 0;\n\tfor(int i=1; i<=t; i++){\n\t\tint minn = 1, maxn = n;\n\t\tfor(int j=i+1; j<=t; j++){\n\t\t\tif(maxn-minn-1 < tree[j].x-tree[i].x-1) break;\n\t\t\tans = max(ans, tree[j].x-tree[i].x-1);\n\t\t\tif(tree[j].y<=tree[i].y) minn = max(minn, tree[j].y);\n\t\t\tif(tree[j].y>=tree[i].y) maxn = min(maxn, tree[j].y);\n\t\t}\n\t}\n\t//\u679a\u4e3e\u4e0a\u4e0b\u754c \n\tsort(tree+1, tree+1+t, cmp2);\n\tfor(int i=1; i<=t; i++){\n\t\tint minn = 1, maxn = n;\n\t\tfor(int j=i+1; j<=t; j++){\n\t\t\tif(maxn-minn-1 < tree[j].y-tree[i].y-1) break;\n\t\t\tans = max(ans, tree[j].y-tree[i].y-1);\n\t\t\tif(tree[j].x<=tree[i].x) minn = max(minn, tree[j].x);\n\t\t\tif(tree[j].x>=tree[i].x) maxn = min(maxn, tree[j].x);\n\t\t}\n\t}\n\tcout<<ans;\n\t\n\treturn 0;\n}\n```\n\n\n------------\n\n## ~~\u5e9f\u8bdd~~\u540e\u8bb0\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u53ef\u80fd\u6709\u758f\u6f0f\uff0c\u6b22\u8fce\u6307\u51fa\u3002\n\n\u6700\u540e\u7684\u6700\u540e\uff0c\u611f\u8c22\u60a8\u7684\u89c2\u770b\uff01",
        "postTime": 1667467268,
        "uid": 592380,
        "name": "David_Mercury",
        "ccfLevel": 4,
        "title": "P8404 [CCC2022 J5] Square Pool \u9898\u89e3"
    },
    {
        "content": "# [Square Pool](https://www.luogu.com.cn/problem/P8404)\r\n## by [jr_zch](https://www.luogu.com.cn/blog/jr-zch-code-garden/) \u535a\u5ba2\u98df\u7528\u66f4\u4f73\u55b5~\r\n## Part 1: \u9898\u76ee\u5927\u610f\r\n\u7ed9\u5b9a\u4e00\u4e2a $n \\times n$ \u7684\u77e9\u5f62 \u4ee5\u53ca $t$ \u4e2a\u969c\u788d\u7269\u7684\u5750\u6807 \u8bd5\u6c42\u8fb9\u957f\u6700\u5927\u7684\u6b63\u65b9\u5f62 $($ \u9898\u76ee\u8bf4\u5f97\u591f\u6e05\u6670\u4e86 $)$\u3002\r\n\r\n## Part 2: \u89e3\u9898\u601d\u8def\r\n$O(n^4):$ \u4e8c\u7ef4\u524d\u7f00\u548c\u66b4\u529b\u627e\u70b9\u5373\u53ef\u3002\r\n\r\n$O(n^2):$ \u7528\u626b\u63cf\u7ebf\u671d\u4efb\u610f\u65b9\u5411\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u626b\u63cf \u5e76 $O(n)$ \u9012\u63a8 $h$ \u6570\u7ec4 \u8bb0\u5f55\u80fd\u591f\u62d3\u5c55\u7684\u6700\u8fdc\u4f4d\u7f6e \u5bf9 $ans$ \u53d6 $\\max$ \u5373\u53ef\u3002\r\n\r\n$O(t^2):$ \u6b63\u89e3\u5982\u4e0b\r\n\r\n\u89c2\u5bdf\u5230 $n$ \u7684\u8303\u56f4\u975e\u5e38\u5927 \u8fbe\u5230\u4e86 $5 \\times 10^5$ \u4f46\u662f $t$ \u5374\u53ea\u6709 $100$ \u6240\u4ee5\u8003\u8651\u4ece $t$ \u7a81\u7834\u3002\r\n\r\n\u5f88\u5bb9\u6613\u60f3\u5230\u4efb\u4f55\u4e00\u4e2a\u6b63\u65b9\u5f62\u4e00\u5b9a\u662f\u88ab\u6811\u7ed9\u6846\u4f4f\u7684 \u6240\u4ee5\u53ef\u4ee5\u628a\u6811\u4f5c\u4e3a**\u6a2a\u5411\u6216\u8005\u7eb5\u5411\u7684\u4e2d\u5fc3**\u8fdb\u884c\u6269\u5c55 \u5e76\u4e14\u56fa\u5b9a\u4e00\u4e2a\u65b9\u5411\u4e3a\u8f83\u5c0f\u7684\u4e00\u8fb9 \u5982\u679c\u53e6\u4e00\u8fb9\u8f83\u5927 \u5219\u505c\u6b62\u6b64\u6b21\u6269\u5c55\u3002\r\n\r\n\u4ee5\u7eb5\u5411\u626b\u63cf\u4e3a\u4f8b \u5148\u9009\u4e00\u68f5\u6811 \u7136\u540e\u4e0d\u65ad\u5411\u4e0b\u627e \u9047\u5230\u65b0\u7684\u6811\u5c31\u4ee5\u6700\u521d\u7684\u6811\u7684 $x$ \u5750\u6807\u4e3a $mid$ \u8fdb\u884c\u7f29\u5c0f \u7136\u540e\u7ee7\u7eed\u5411\u4e0b\u6269\u5c55 \u76f4\u5230\u8d85\u51fa\u8fb9\u754c\u6216\u8005\u7eb5\u5411\u9ad8\u5ea6\u5927\u4e8e\u6a2a\u5411\u957f\u5ea6\u5c31\u7ec8\u6b62 \u518d\u4ee5\u4e0b\u4e00\u68f5\u6811\u4e3a\u4e2d\u5fc3\u6765\u6269\u5c55\u3002\r\n\r\n\u8bf7**\u4ed4\u7ec6\u89c2\u5bdf**\u4e0b\u56fe\r\n\r\n\u7b2c\u4e00\u6b65 $:$\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/5ztltamm.png)\r\n\r\n\u7b2c\u4e8c\u6b65 $:$\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/i14geezo.png)\r\n\r\n\u7b2c\u4e09\u6b65 $:$\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/7336hktp.png)\r\n\r\n\u7b2c\u56db\u6b65 $:$\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/11sl7n4s.png)\r\n\r\n\u6700\u540e\u5f97\u51fa\u7b54\u6848 $ans = 4$\u3002\r\n\r\n#### tips:\r\n* \u8f93\u5165\u662f\u65e0\u5e8f\u7684 \u8981\u5148\u6392\u5e8f\u3002\r\n* \u626b\u63cf\u4e00\u6b21\u4f1a\u6709\u90e8\u5206\u6f0f\u7f51\u4e4b\u5f62\u6240\u4ee5\u8981\u6a2a\u7eb5\u626b\u63cf\u4e24\u6b21\u3002\r\n* \u5728\u8be5\u8fc7\u7a0b\u4e2d\u8981\u59cb\u7ec8\u4fdd\u8bc1\u7eb5\u5411\u9ad8\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u6a2a\u5411\u957f\u5ea6 \u6a2a\u5411\u626b\u63cf\u65f6\u53cd\u4e4b\u3002\r\n* \u90e8\u5206\u77e9\u5f62\u4f1a\u4ee5 $1$ ~ $3$ \u6761\u8fb9\u754c\u4e3a\u8fb9 \u6240\u4ee5\u8981\u5728**\u56db\u4e2a\u89d2\u4e4b\u5916**\u90fd\u624b\u52a8\u79cd\u4e00\u68f5\u6811\u3002\r\n\r\n## Part 3: Code\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int maxn=1e2+7,inf=0x3f3f3f3f;\r\nint n,m,l,r,u,d,ans=-inf;\r\nstruct node{\r\n\tint x,y;\r\n}p[maxn];\r\n\r\nbool dcmp(node x,node y){\r\n\treturn x.x==y.x?x.y<y.y:x.x<y.x;\r\n}\r\n\r\nbool lcmp(node x,node y){\r\n\treturn x.y==y.y?x.x<y.x:x.y<y.y;\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d\",&p[i].x,&p[i].y);\r\n\tp[++m]=(node){0,0},p[++m]=(node){0,n+1},p[++m]=(node){n+1,0},p[++m]=(node){n+1,n+1};\r\n\tsort(p+1,p+1+m,dcmp);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tl=1,r=n;\r\n\t\tfor(int j=i+1;j<=m;j++){\r\n\t\t\tif(r-l+1<p[j].x-p[i].x-1) break;\r\n\t\t\tans=max(ans,p[j].x-p[i].x-1);\r\n\t\t\tif(l<=p[j].y&&p[j].y<=p[i].y) l=p[j].y+1;\r\n\t\t\telse if(r>=p[j].y&&p[j].y>p[i].y) r=p[j].y-1;\r\n\t\t}\r\n\t}\r\n\tsort(p+1,p+1+m,lcmp);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tu=1,d=n;\r\n\t\tfor(int j=i+1;j<=m;j++){\r\n\t\t\tif(d-u+1<p[j].y-p[i].y-1) break;\r\n\t\t\tans=max(ans,p[j].y-p[i].y-1);\r\n\t\t\tif(u<=p[j].x&&p[j].x<=p[i].x) u=p[j].x+1;\r\n\t\t\telse if(d>=p[j].x&&p[j].x>p[i].x) d=p[j].x-1;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",ans);\r\n\treturn 0;\r\n}\r\n```\r\n## $\\text Thanks~for~your~reading$",
        "postTime": 1683205551,
        "uid": 772999,
        "name": "jr_zch",
        "ccfLevel": 0,
        "title": "Square Pool"
    }
]