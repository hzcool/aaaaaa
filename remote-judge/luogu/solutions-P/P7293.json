[
    {
        "content": "\u7b80\u5355\u7684\u7ebf\u6027\u505a\u6cd5\u3002\n\n\u4ece\u65b0\u56fe\u7684\u8d77\u70b9\u8d70\u5230 $(a_1,a_2...a_k)$\uff0c\u76f8\u5f53\u4e8e\u5728 $k$ \u5f20\u56fe\u4e0a\u540c\u65f6\u4ece $1$ \u8d70\u5230 $a_i$\u3002\n\n\u5982\u679c\u67d0\u5f20\u56fe\u6bd4\u5176\u4ed6\u56fe\u5148\u8d70\u5230\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u4efb\u9009\u4e00\u6761\u7ecf\u8fc7\u5b83\u7684\u8fb9\u53cd\u590d\u6a2a\u8df3\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u4fdd\u8bc1\u6bcf\u5f20\u56fe\u4e0a\u4ece $1$ \u8d70\u5230 $a_i$ \u8ddd\u79bb\u7684\u5947\u5076\u6027\u76f8\u540c\u3002\n\n\u9996\u5148\u901a\u8fc7 bfs\uff0c\u9884\u5904\u7406\u6bcf\u5f20\u56fe\u4e0a $1$ \u5230\u6240\u6709\u70b9\u7684\u957f\u5ea6\u4e3a\u5947\u6570\u548c\u5076\u6570\u7684\u6700\u77ed\u8def\u3002\n\n\u8bb0 $ji_i$ \u4e3a\u5947\u6570\u6700\u77ed\u8def\uff0c$ou_i$ \u4e3a\u5076\u6570\u6700\u77ed\u8def\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u4e3a $\\inf$\u3002\n\n\u5219\u65b0\u56fe\u7684\u8d77\u70b9\u5230 $(a_1,a_2...a_k)$ \u7684\u8ddd\u79bb\uff0c\u7b49\u4e8e $\\min(\\max(ji_{a_i}),\\max(ou_{a_i}))$\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u4e0d\u597d\u5904\u7406\uff0c\u901a\u8fc7 $a+b=\\min(a,b)+\\max(a,b)$\uff0c\u8f6c\u5316\u4e3a $\\max(ji_{a_i})+\\max(ou_{a_i})-\\max(\\max(ji_{a_i},ou_{a_i}))$\u3002\n\n\u5c06\u4e09\u90e8\u5206\u5206\u522b\u8ba1\u7b97\uff0c\u6bcf\u6b21\u5206\u522b\u8bb0 $w_i=ji_i,ou_i,\\max(ji_i,ou_i)$\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $j$\uff0c\u6c42\u51fa $j\\in a_i$\uff0c\u4e14 $w_j=\\max(w_{a_i})$ \u7684\u65b9\u6848\u6570\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u4f1a\u7b97\u91cd\uff0c\u8003\u8651\u5bf9\u4e8e\u76f8\u540c\u7684 $w_j$\uff0c\u6309\u6240\u5c5e\u56fe\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6bd4\u8f83\u3002\n\n\u4e8e\u662f\u53ea\u9700\u8981\u5c06\u6240\u6709\u70b9\u6309 $w_j$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u56fe\u7684\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u56e0\u4e3a\u503c\u57df\u662f\u70b9\u6570\u7ea7\u522b\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u3002\n\n\u7136\u540e\u6309\u987a\u5e8f\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e2a\u70b9\uff0c\u52a0\u5165\u5c5e\u4e8e\u56fe $k$ \u7684\u70b9 $j$ \u65f6\u7684\u65b9\u6848\u6570\uff0c\u5c31\u662f\u9664 $k$ \u4ee5\u5916\u6240\u6709\u56fe\u5df2\u7ecf\u88ab\u52a0\u5165\u7684\u70b9\u7684\u4e2a\u6570\u7684\u4e58\u79ef\u3002\n\n\u9884\u5904\u7406\u4e58\u6cd5\u9006\u5143\u53ef\u4ee5 $O(1)$ \u52a0\u70b9\u3002\n\n\u603b\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+3,P=1e9+7;\nbasic_string<int>v[3][N+1];\nint iv[N],a[N],o,u;\nvoid in(){\n\tint n,m,i,j;\n\tbasic_string<int>ji,ou;\n\tvector<basic_string<int>>g;\n\tqueue<int>q;\n\tscanf(\"%d%d\",&n,&m),ji.assign(n+1,N),ou.assign(n+1,N),g.resize(n+1);\n\twhile(m--)scanf(\"%d%d\",&i,&j),g[i]+=j,g[j]+=i;\n\tq.push(1),ou[1]=0;\n\twhile(q.size()){//bfs\n\t\ti=q.front(),q.pop();\n\t\tif(i>n){\n\t\t\ti-=n;\n\t\t\tfor(int j:g[i])if(ou[j]==N)ou[j]=ji[i]+1,q.push(j);\n\t\t}else for(int j:g[i])if(ji[j]==N)ji[j]=ou[i]+1,q.push(j+n);\n\t}\n\tfor(i=1;i<=n;++i)v[0][ji[i]]+=u,v[1][ou[i]]+=u,v[2][max(ji[i],ou[i])]+=u;\n}\nint get(basic_string<int>*v){\n\tint i,s=0,t=1,c=0;\n\tfor(i=0,memset(a,0,N*4);i<N;++i)for(int j:v[i]){//\u52a0\u70b9\n\t\tif(a[j])t=t*1ll*iv[a[j]]%P;else ++c;\n\t\tif(c==o)s=(s+t*1ll*i)%P;\n\t\tt=t*1ll*(++a[j])%P;\n\t}\n\treturn s;\n}\nint main(){\n\tfor(iv[1]=1,u=2;u<N;++u)iv[u]=(P-P/u)*1ll*iv[P%u]%P;//\u9884\u5904\u7406\u9006\u5143\n\tfor(scanf(\"%d\",&o),u=1;u<=o;++u)in();\n\tprintf(\"%d\",((get(v[0])+get(v[1])-get(v[2]))%P+P)%P);\n\treturn 0;\n}\n```\n",
        "postTime": 1623840122,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "P7293 [USACO21JAN] Sum of Distances P\uff08\u56fe\u8bba\uff0cbfs\uff09"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7293)\n\n~~\u505a\u8fd9\u9053\u9898\u524d\u8bf7\u5148\u786e\u4fdd\u81ea\u5df1\u7406\u89e3\u4e86\u8fd9\u4e2a\u9b3c\u755c\u7684\u5efa\u56fe\u65b9\u5f0f\u3002~~\n\n\u624b\u6a21\u6837\u4f8b\u4e4b\u540e\u6211\u4eec\u6a21\u7cca\u5730\u610f\u8bc6\u5230\u4e00\u4e2a\u65b0\u56fe\u4e2d\u4e00\u4e2a\u70b9\u5230 $1$ \u53f7\u70b9\u7684\u8ddd\u79bb\u5927\u6982\u548c\u539f\u56fe\u7684\u6700\u77ed\u8def\u6709\u4ec0\u4e48\u5173\u8054\u3002\n\n\u53d1\u73b0 $\\prod\\limits N_i$ \u5927\u5f97\u79bb\u8c31\u4e4b\u540e\u66f4\u80fd\u786e\u5b9a\u8fd9\u9898\u662f\u6839\u636e\u539f\u56fe\u7684\u4fe1\u606f\u5f97\u51fa\u7b54\u6848\u3002\n\n\u5206\u6790\u6027\u8d28:\n\n\u4ece $(1,1,1, \\dots ,1)$ \u8d70\u5230$(j_1,j_2,j_3, \\dots ,j_K)$\u53ef\u4ee5\u770b\u505a\u5728\u7b2c\u4e00\u4e2a\u56fe\u4e0a\u4ece $1$ \u8d70\u5230 $j_1$\uff0c\u540c\u65f6\u5728\u7b2c\u4e8c\u4e2a\u56fe\u4e0a\u4ece $1$ \u8d70\u5230 $j_2$\u2026\u2026\uff0c\u5728\u7b2c $K$ \u4e2a\u56fe\u4e0a\u4ece $1$ \u8d70\u5230 $j_K$\u3002\n\n\u5982\u679c\u5728\u7b2c $i$ \u53f7\u56fe\u4e0a\u5df2\u7ecf\u8d70\u5230\u4e86 $j_i$ \u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u9644\u8fd1\u968f\u610f\u627e\u4e00\u6761\u8fb9\u53cd\u590d\u6a2a\u8df3\uff0c\u7b49\u5176\u4ed6\u56fe\u8d70\u5230\u5bf9\u5e94\u70b9\uff08\u7ed3\u5408\u6837\u4f8b\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\u3002\u800c\u7b49\u5176\u4ed6\u70b9\u7684\u8fc7\u7a0b\u4e2d\u4e00\u6b21\u8df3 $2$ \u6b65\uff0c\u6240\u4ee5\u53ea\u6709\u5947\u5076\u6027\u76f8\u540c\u7684\u8ddd\u79bb\u624d\u53ef\u4ee5\u4e92\u76f8\u201c\u7b49\u201d\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u6c42\u51fa\u5728\u6bcf\u4e2a\u56fe $i$ \u4e2d $1$ \u53f7\u70b9\u5230 $j_i$ \u53f7\u70b9\u7684\u5947\u6570\u6700\u77ed\u8ddd\u79bb\u548c\u5076\u6570\u6700\u77ed\u8ddd\u79bb\uff0c\u8bb0\u4e3a $odd_{j_i}$ \u548c $even_{j_i}$\uff0c\u5219\u4e00\u4e2a\u70b9 $(j_1,j_2,j_3, \\dots ,j_K)$ \u5230 $1$ \u53f7\u70b9\u7684\u8ddd\u79bb\u5c31\u662f$\\min(\\max (odd_{j_i}), \\max(even_{j_i}))$\u3002 \u5176\u4e2d $\\min$ \u8fd0\u7b97\u4e0d\u662f\u5f88\u597d\u5904\u7406\uff0c\u5bb9\u65a5\u4e00\u4e0b\u628a\u5f0f\u5b50\u8f6c\u6362\u6210 $\\max (odd_{j_i})+ max(even_{j_i}) -max(max(odd_{j_i},even_{j_i}))$\u3002\n\n\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u6c42\u8fd9\u4e2a $\\max$ \u7684\u5f0f\u5b50\u3002\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9 $j_i$\uff0c\u8ba1\u7b97\u6709\u591a\u5c11\u79cd\u53d6\u6cd5\u4f7f\u5f97 $j_i$ \u7684\u5bf9\u5e94\u503c\u6700\u5927\uff0c\u663e\u7136\u65b9\u6848\u6570\u5c31\u662f\u5176\u4ed6\u56fe\u91cc\u9762\u5bf9\u5e94\u503c\u5c0f\u4e8e $j_i$ \u7684\u8282\u70b9\u7684\u4e2a\u6570\u4e58\u79ef\u3002\u4e8b\u5148\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u5143\u7d20\u4f4d\u7f6e\uff0c\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u56fe\u4e2d\u5269\u4f59\u8282\u70b9\u4e2a\u6570\u4ee5\u53ca\u533a\u95f4\u4e58\u79ef\u3002\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6700\u5927\u503c $k$\uff0c\u5bf9\u4e8e\u5bf9\u5e94\u503c\u4e3a $k$ \u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 $i$\uff0c\u5b83\u7684\u8d21\u732e\u5c31\u662f\u548c $i$ \u4e0d\u5728\u4e00\u4e2a\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u76ee\uff0c\u8ba1\u7b97\u5b8c\u4e4b\u540e\u5c06\u8282\u70b9 $i$ \u5220\u6389\uff0c\u53ef\u4ee5\u611f\u6027\u8ba4\u8bc6\u5230\u8fd9\u79cd\u8ba1\u6570\u65b9\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u590d\u6742\u5ea6 $O(N \\log N)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define ls (x << 1)\n#define rs ((x << 1) | 1)\n#define int long long\nusing namespace std;\nconst int MAXN = 4e5 + 50;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f3f3f3f3f;\nint dis[MAXN][2], lib[MAXN][2];\nvector<int> pos[MAXN];\nvector<int> g[MAXN];\nint T, N[MAXN], M[MAXN], sum[MAXN], bel[MAXN], cnt[MAXN];\nstruct node\n{\n    int a, b;\n    node(){}\n    node(int x, int y)\n    {\n        a = x;\n        b = y;\n    }\n};\nqueue<node> q;\nstruct SegT\n{\n    int val[MAXN * 4];\n    void clear()\n    {\n        memset(val, 0, sizeof(val));\n    }\n    void update(int x, int l, int r, int t, int v)\n    {\n        if (l == r)\n        {\n            val[x] += v;\n            val[x] %= mod;\n            return;\n        }\n        int mid = (l + r) >> 1;\n        if (t <= mid)\n            update(ls, l, mid, t, v);\n        else\n            update(rs, mid + 1, r, t, v);\n        val[x] = val[ls] * val[rs] % mod;\n    }\n    int query(int x, int l, int r, int tl, int tr)\n    {\n        if (tl > r || tr < l)\n            return 1;\n        if(tl <= l && tr >= r)\n            return val[x];\n        int mid = (l + r) >> 1;\n        return query(ls, l, mid, tl, tr) * query(rs, mid + 1, r, tl, tr) % mod;\n    }\n} SegT;\nint solve(int typ)\n{\n    int maxn = 0;\n    memset(cnt, 0, sizeof(cnt));\n    for (int i = 1; i <= sum[T]; ++i)\n    {\n        int t = -1;\n        if (typ & 1)\n            t = max(t, lib[i][0]);\n        if (typ & 2)\n            t = max(t, lib[i][1]);\n        if (t == INF)\n            continue;\n        cnt[bel[i]]++;\n        pos[t].push_back(i);\n        maxn = max(maxn, t);\n    }\n    SegT.clear();\n    for (int i = 1; i <= T; ++i)\n        SegT.update(1, 1, T, i, cnt[i]);\n    int res = 0;\n    for (int i = maxn; i >= 1; --i)\n    {\n        int siz = pos[i].size();\n        for (int j = 0; j < siz; ++j)\n        {\n            int t = pos[i][j];\n            res += i * SegT.query(1, 1, T, 1, bel[t] - 1) % mod * SegT.query(1, 1, T, bel[t] + 1, T) % mod;\n            res %= mod;\n            SegT.update(1, 1, T, bel[t], -1);\n        }\n    }\n    for (int i = 1; i <= maxn; ++i)\n        pos[i].clear();\n    return res;\n}\nsigned main()\n{\n    scanf(\"%lld\", &T);\n    for (int x = 1; x <= T; ++x)\n    {\n        scanf(\"%lld%lld\", &N[x], &M[x]);\n        sum[x] = sum[x - 1] + N[x];\n        for (int i = 1; i <= N[x]; ++i)\n            g[i].clear();\n        for (int i = 1; i <= M[x]; ++i)\n        {\n            int u, v;\n            scanf(\"%lld%lld\", &u, &v);\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n        memset(dis, 0x3f, sizeof(dis));\n        dis[1][0] = 0;\n        q.push(node(1, 0));\n        while (!q.empty())\n        {\n            node t = q.front();\n            q.pop();\n            int siz = g[t.a].size();\n            for (int i = 0; i < siz; ++i)\n            {\n                int v = g[t.a][i];\n                if (dis[v][!t.b] > dis[t.a][t.b] + 1)\n                {\n                    dis[v][!t.b] = dis[t.a][t.b] + 1;\n                    q.push(node(v, !t.b));\n                }\n            }\n        }\n        for (int i = 1; i <= N[x]; ++i)\n            for (int j = 0; j <= 1; ++j)\n                lib[sum[x - 1] + i][j] = dis[i][j];\n        for (int i = sum[x - 1] + 1; i <= sum[x]; ++i)\n            bel[i] = x;\n    }\n    // cout << solve(1) << \" \" << solve(2) << \" \" << solve(3) << endl;\n    printf(\"%lld\\n\", (solve(1) + solve(2) - solve(3) + mod) % mod);\n    return 0;\n}\n```\n",
        "postTime": 1615030142,
        "uid": 63743,
        "name": "DrBit",
        "ccfLevel": 6,
        "title": "P7293 [USACO21JAN] Sum of Distances P \uff08\u601d\u7ef4\u9898\uff09"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u65e0\u8111\u7684 $O(n \\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u5f20\u56fe\u7684\u6bcf\u4e2a\u70b9\u8dd1\u51fa\u5947\u5076\u6700\u77ed\u8def\uff0c\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u6bcf\u5f20\u56fe\u9009\u51fa\u4e00\u4e2a\u70b9\uff0c\u8bbe\u7b2c $k$ \u5f20\u56fe\u9009\u51fa\u7684\u70b9\u662f $p_k$\u3002\u7b54\u6848\u5373\u4e3a $\\sum \\min(\\max(\\text{OddDis}_{p_i}),\\max(\\text{EvenDis}_{p_i})$\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u6211\u4eec\u8bbe\u9009\u51fa\u7684\u70b9\u7684 $\\text{EvenDis}$ \u6700\u5c0f\u503c\u4f4d\u7f6e\u4e3a $p$\uff0c\u4e3a\u4e86\u4e0d\u7b97\u91cd\u6211\u4eec\u628a\u8d21\u732e\u7b97\u5728\u6700\u9760\u5de6\u7684\u70b9\u4e0a\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u76f8\u5f53\u4e8e\u5b83\u524d\u9762\u7684\u56fe\u53ea\u80fd\u9009 $\\text{EvenDis}_i< \\text{EvenDis}_p$ \u7684\u70b9\uff0c\u540e\u9762\u7684\u56fe\u53ea\u80fd\u9009  $\\text{EvenDis}_i\\leq  \\text{EvenDis}_p$ \u7684\u70b9\uff0c\u5e76\u4e14\u8981\u6ee1\u8db3\u9009\u7684\u70b9 $\\max\\text{OddDis}>\\text{EvenDis}_p$\u3002\u8003\u8651\u5bb9\u65a5\u4e00\u4e0b\uff0c\u5148\u7b97\u6ca1\u6709 $\\text{OddDis}$ \u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u51cf\u53bb $\\max\\text{OddDis}<\\text{EvenDis}_p$ \u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u9650\u5236\u5c31\u5206\u522b\u53d8\u6210\u4e86 $\\max(\\text{OddDis}_i,\\text{EvenDis}_i)<  \\text{EvenDis}_p$ \u548c $\\max(\\text{OddDis}_i,\\text{EvenDis}_i)\\leq  \\text{EvenDis}_p$\u3002\u76f4\u63a5\u505a $\\max$ \u5377\u79ef\u5373\u53ef\u3002\u8fd9\u91cc\u91c7\u7528\u4e86\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u65b9\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\u6ce8\u610f\u53cd\u8fc7\u6765\u4e5f\u8981\u505a\u4e00\u904d\u3002\n\n[\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u653e\u8fd9\u513f\u4e86](https://www.luogu.com.cn/paste/raf3mlvm)\u3002",
        "postTime": 1650610895,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7293 [USACO21JAN] Sum of Distances P"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LaoMang-no-blog/p/16189295.html)\n\n---\n\n[**\u4f60\u8c37 link**](https://www.luogu.com.cn/problem/P7293)\n\n\u8fd9\u4e2a\u9898\u4e5f\u592a\u5999\u4e86\uff0c\u8003\u573a\u6839\u672c\u4e00\u70b9\u5934\u7eea\u6ca1\u6709\u3002\n\n\u7ed9\u5b9a\u4e00\u4e9b\u56fe\uff0c\u6c42\u8fd9\u4e9b\u56fe\u7684\u5f20\u91cf\u79ef\u4e2d $(1,1,\\cdots,1)$ \u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u548c\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5f20\u91cf\u79ef\u4e0a\u7684\u6700\u77ed\u8def\u6709\u4ec0\u4e48\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u6240\u6709\u56fe\u5206\u5f00\u8003\u8651\uff0c\u6bcf\u4e00\u5f20\u56fe\u5206\u5f00\u505a\uff0c\u52a0\u5165\u4ece $(1,1,\\cdots,1)$ \u5230 $(a_1,a_2,\\cdots,a_K)$\uff0c\u53ef\u4ee5\u770b\u6210\u5206\u522b\u4ece $1$ \u5230 $a_1$\uff0c$1$ \u5230 $a_2$\uff0c$\\cdots$\uff0c$1$ \u5230 $a_K$\uff0c\u540c\u65f6\u5230\u8fbe\u3002\n\n\u6211\u4eec\u53d1\u73b0\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5728\u4e00\u6761\u8fb9\u53cd\u590d\u8d70\u6765\u8fbe\u5230\u7b49\u5f85\u7684\u76ee\u7684\uff0c\u6240\u4ee5\u5c31\u53ea\u548c\u6700\u77ed\u8def\u957f\u5ea6\u7684\u5947\u5076\u6027\u76f8\u5173\u3002\n\n\u8003\u8651\u7b97\u51fa\u6bcf\u5f20\u56fe\u4e0a\u6bcf\u4e2a\u70b9\u7684\u5947\u5076\u6700\u77ed\u8def\uff0c\u8bbe\u7b2c $i$ \u5f20\u56fe\u4e2d $1$ \u5230 $j$ \u7684\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $\\text{odd}_{i,j}$\uff0c\u957f\u5ea6\u4e3a\u5076\u6570\u4e3a $\\text{even}_{i,j}$\uff0c\u90a3\u4e48 $(1,1,\\cdots,1)$ \u5230 $(a_1,a_2,\\cdots,a_K)$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $\\min\\{\\max_{i=1}^K\\{\\text{odd}_{i,a_i}\\},\\max_{i=1}^K\\{\\text{even}_{i,a_i}\\}\\}$\uff0c\u8fd9\u4e2a\u4e1c\u897f\u662f $\\min$ \u5957 $\\max$\uff0c\u5e76\u4e0d\u662f\u5f88\u597d\u5904\u7406\uff0c\u6240\u4ee5\u8003\u8651\u8fdb\u884c\u4e00\u6b65\u8f6c\u5316\uff0c\u5c06 $\n\\min$ \u5c55\u5f00\u6210 $\\max$\uff0c\u6700\u540e\u6211\u4eec\u5c31\u662f\u8981\u6c42\u8fd9\u6837\u4e00\u4e2a\u5f0f\u5b50\uff1a\n\n$$\n\\sum_{1\\le a_i\\le n_i}\\max_{i=1}^K\\{\\text{odd}_{i,a_i}\\}+\\max_{i=1}^K\\{\\text{even}_{i,a_i}\\}-\\max_{i=1}^K\\{\\text{odd}_{i,a_i},\\text{even}_{i,a_i}\\}\n$$\n\n\u53d1\u73b0\u53ef\u4ee5\u628a\u4e09\u4e2a\u5f0f\u5b50\u5206\u5f00\u6765\u7b97\uff0c\u8fd9\u6837\u5f62\u5f0f\u662f\u4e00\u6837\u7684\uff0c\u6700\u540e\u5c31\u662f\u8981\u7b97\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n$$\n\\sum_{1\\le a_i\\le n_i}\\max_{i=1}^K\\{V_{i,a_i}\\}\n$$\n\n\u8003\u8651\u8fd9\u4e2a $V$ \u7684\u8303\u56f4\u53ea\u6709 $n$\uff0c\u6240\u4ee5\u53ef\u4ee5\u7edf\u8ba1 $\\max_{i=1}^K\\{V_{i,a_i}\\}=x$ \u7684 $(a_1,a_2,\\cdots,a_n)$ \u7684\u6570\u91cf\u3002\n\n\u7136\u540e\u518d\u8003\u8651\u8fd9\u4e2a\u65b0\u7684\u5f0f\u5b50\u600e\u4e48\u7b97\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u56e0\u4e3a\u6c42\u5f97\u662f $\\max$\uff0c\u53c8\u662f\u8ba1\u6570\uff0c\u53ef\u4ee5\u8003\u8651\u4e24\u4e24\u5408\u5e76\uff0c\u8fd9\u6837\u5c31\u53ea\u8981\u8003\u8651\u76f8\u90bb\u4e24\u9879\uff0c\u7b97\u4ee5\u4e0b\u5f0f\u5b50\uff1a\n\n$$\nF_k=\\sum_{\\max\\{i,j\\}=k}A_iB_j\n$$\n\n\u5176\u4e2d $A_x$\uff0c$B_x$ \u5206\u522b\u4ee3\u8868\u5f85\u5408\u5e76\u7684\u4e24\u4e2a\u6570\u7ec4\u4e2d\u6ee1\u8db3 $\\max_{i=1}^K\\{V_{i,a_i}\\}=x$ \u7684\u6570\u91cf\uff0c$F_x$ \u540c\u7406\uff0c\u4e0d\u8fc7\u662f\u5408\u5e76\u7ed3\u679c\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u5f88\u50cf\u5377\u79ef\uff0c\u4f46\u663e\u7136\u4e0d\u662f\u6b63\u5e38\u7684\u591a\u9879\u5f0f\u5377\u79ef\u6216\u662f\u4f4d\u8fd0\u7b97\u5377\u79ef\u4e4b\u7c7b\u7684\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u662f\u4ec0\u4e48 FFT \u6216\u8005 FWT \u4e4b\u7c7b\u7684\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5f62\u8c61\u5730\u79f0\u4e3a $\\max$ \u5377\u79ef\u7684\u4e1c\u897f\u7b97\u8d77\u6765\u76f8\u5bf9 FFT \u6216\u8005 FWT \u66f4\u7b80\u5355\u5730\u591a\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u505a\u4e00\u79cd\u7c7b\u4f3c FFT \u4e2d DFT \u548c IDFT \u7684\u53d8\u6362\u6765\u4f7f\u5176\u6210\u4e3a\u4e00\u79cd\u7ebf\u6027\u53d8\u6362\uff0c\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u7528\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u5c31\u662f\u76f4\u63a5\u524d\u7f00\u548c\uff0c\u9006\u53d8\u6362\u5c31\u662f\u76f4\u63a5\u518d\u5dee\u5206\u56de\u6765\u5c31\u597d\u4e86\uff0c\u8bfb\u8005\u53ef\u4ee5\u624b\u6a21\u4e00\u4e0b\uff0c\u5177\u4f53\u539f\u7406\u53ef\u4ee5\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://s2.loli.net/2022/04/25/JD23HaL9j8zqgWM.png)\n\n\u8fd9\u91cc\u9ed1\u8272\u7684\u683c\u5b50\u8868\u793a\u4e24\u4e2a\u8981\u5408\u5e76\u7684\u6570\u7ec4\uff0c\u7ea2\u7ebf\u8868\u793a\u5f85\u6c42\u503c\u6700\u9876\u5c42\u8981\u7b97\u7684\uff0c\u7ea2\u7ebf\u548c\u84dd\u7ebf\u7684\u548c\u6b63\u597d\u662f\u524d\u7f00\u548c\u7684\u79ef\uff0c\u800c\u84dd\u7ebf\u4e5f\u662f\u524d\u7f00\u548c\u7684\u79ef\uff0c\u505a\u5dee\u5206\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\n\n\u8fd9\u6837\u6574\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u3002\n\n\u4e24\u4e2a\u6570\u7ec4\u548c\u5408\u5e76\u662f $\\mathcal O\\left(\\text{len}\\right)$ \u7684\uff0c\u5982\u679c\u76f4\u63a5\u5c06\u6240\u6709\u6570\u7ec4\u5408\u5e76\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u6210 $\\mathcal O\\left(Kn\\right)$\uff0c\u4f1a\u88ab\u5361\u6389\uff0c\u600e\u6837\u4f18\u5316\u5462\uff1f\u5176\u5b9e\u76f4\u63a5\u5c06\u6570\u7ec4\u6309\u957f\u5ea6\u4ece\u5c0f\u5230\u5927\u5408\u5e76\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal O\\left(\\sum n\\right)$\uff0c\u662f\u53ef\u8fc7\u7684\u3002\n\n[**c++ \u4ee3\u7801**](https://www.cnblogs.com/LaoMang-no-blog/p/16189295.html)",
        "postTime": 1650856325,
        "uid": 310525,
        "name": "\u8001\u83bd\u83bd\u7a7f\u4e00\u5207",
        "ccfLevel": 0,
        "title": "P7293 [USACO21JAN] Sum of Distances P \u9898\u89e3"
    }
]