[
    {
        "content": "## Pro ##\n\n[Luogu3528][1]\n\n\n## Sol ##\n\n[blog\u98df\u7528](http://www.caolaoshi.men/index.php/archives/poi2011-patsticks.html)\n\n1.\u8d2a\u5fc3\u9898\u3002\n\n\u6211\u4eec\u628a\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u7684\u53d6\u51fa\u6bcf\u4e00\u6761\u8fb9\uff0c\u7ef4\u62a4\u4e09\u6761\u8fb9\u7684\u989c\u8272\u53ca\u957f\u5ea6\u3002\u679a\u4e3e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u540c\u989c\u8272\u7684\u5df2\u7ecf\u5728\u7ef4\u62a4\u4e2d\u4e86\uff0c\u5c31\u66f4\u65b0\u8be5\u6761\u8fb9\u7684\u957f\u5ea6\uff0c\u56e0\u4e3a\u8d8a\u5f80\u540e\u8fb9\u7684\u957f\u5ea6\u8d8a\u957f\uff0c\u8fd9\u6761\u8fb9\u53ea\u6709\u66f4\u957f\u624d\u6709\u66f4\u5927\u7684\u673a\u4f1a\u6784\u6210\u4e09\u89d2\u5f62\u3002\u8fd8\u6709\u5462\u5c31\u662f\u5982\u679c\u4f60\u7ef4\u62a4\u7684\u4e09\u6761\u8fb9\u5f53\u4e2d\u6ca1\u6709\u65b0\u7684\u8fd9\u6761\u8fb9\u7684\u989c\u8272\uff0c\u5c31\u7528\u65b0\u7684\u8fd9\u6761\u8fb9\u53bb\u66f4\u65b0\u4f60\u7ef4\u62a4\u7684\u5f53\u4e2d\u6700\u77ed\u7684\u90a3\u4e2a\uff0c\u8fd9\u6837\u6709\u66f4\u591a\u7684\u673a\u4f1a\u53bb\u6784\u6210\u4e09\u89d2\u5f62\u3002\n\n2.\u4e8c\u5206\u67e5\u627e\uff08\u601d\u8def\uff09\u3002\n\n\u662f\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u8c8c\u4f3c\u6709\u798f\u5229\uff1a\u5927\u91cf\u7684\u526a\u679d\u3002\u679a\u4e3e\u4e24\u4e2a\u989c\u8272\uff0c\u518d\u5206\u522b\u679a\u4e3e\u5176\u4e2d\u7684\u4e24\u6761\u8fb9\uff0c\u4ece\u800c\u80fd\u786e\u5b9a\u7b2c\u4e09\u6761\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u7684\u957f\u5ea6\u8303\u56f4\uff0c\u518d\u679a\u4e3e\u7b2c\u4e09\u79cd\u989c\u8272\uff0c\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u5de6\u53f3\u7aef\u70b9\u548c\u5224\u65ad\u662f\u5426\u76f8\u7b49\u6765\u786e\u5b9a\u662f\u5426\u5b58\u5728\u7b54\u6848\u3002\u526a\u679d\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u7ef4\u62a4\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u662f\u524di\u884c\u5f53\u4e2d\u6700\u957f(\u77ed)\u7684\u8fb9\uff0c\u4e5f\u53ef\u4ee5\u662f\u7b2ci\u884c\u4e4b\u540e\u7684\u6240\u6709\u7684\u8fb9\u5f53\u4e2d\u6700\u957f(\u77ed)\u7684\u8fb9\uff0c\u526a\u679d\u7684\u8bdd\u9700\u8981\u4e00\u5b9a\u7684\u6570\u5b66\u80fd\u529b\uff08\u7136\u800c\u6211\u6ca1\u526a\u51fa\u6765\uff0c\u8fd9\u91cc\u53ea\u7559\u505a\u601d\u8def\uff09\n\n\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\uff1a\u8bbemaxx[i]\u4e3a\u7b2ci\u79cd\u989c\u8272\u5230\u7b2ck\u7684\u6240\u6709\u989c\u8272\u5f53\u4e2d\uff0c\u6728\u68cd\u7684\u6700\u5927\u503c\uff0c\u540c\u7406minn\u4e3a\u6700\u5c0f\u503c\u3002\u5bf9\u4e8e\u7b2ci\u79cd\u989c\u8272\uff0c\u80fd\u6ee1\u8db3\u7684\u533a\u95f4\u6700\u5927\u4e3a[maxx[i+1]-minn[i+1] \uff0c 2 * maxx[i+1] ] \uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u4e24\u4e2a\u4e8c\u5206\u6c42\u51fa\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u6839\u6728\u68cd\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u6761\u540c\u6837\u7684\u9053\u7406\uff0c\u4e5f\u7528\u4e8c\u5206\u67e5\u51fa\u533a\u95f4\uff0c\u7136\u540e\u679a\u4e3e\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u989c\u8272\u6765\u8bf4\uff0c\u5b83\u679a\u4e3e\u7684\u533a\u95f4\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u5904\u7406maxx \u548c minn\u7684\u8fc7\u7a0b\u4e2d\u6c42\u51fa\u533a\u95f4\u7684\u8303\u56f4\uff0c\u9884\u5904\u7406\u51fa\u6765\u3002\u5bf9\u4e8e\u679a\u4e3e\u7684\u7b2c\u4e09\u6761\u8fb9\uff0c\u5b83\u7684\u533a\u95f4\u662f\u7531\u53e6\u5916\u4e24\u6761\u8fb9\u51b3\u5b9a\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u63d0\u524d\u9884\u5904\u7406\u51fa\u6765\u3002\u8fd8\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u526a\u679d\u5c31\u662f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d0\u524d\u4e00\u8d77\u9884\u5904\u7406\u51fa\u6765\u7b2c\u4e09\u6761\u8fb9\u7684\u533a\u95f4\uff0c\u5728\u8fd9\u4e2a\u533a\u95f4\u4e0a\u4e8c\u5206\uff0c\u800c\u4e0d\u662f\u5728\u7b2c\u4e09\u79cd\u989c\u8272\u7684\u6574\u4e2a\u533a\u95f4\u4e0a\u4e8c\u5206\uff0c\u4f46\u8fd9\u4e2a\u590d\u6742\u5ea6\u5916\u9762\u5957\u4e86\u4e00\u4e2alog\uff0c\u53ef\u80fd\u4e0d\u4f1a\u4f18\u5316\u592a\u591a\u3002\n\n\n## \u8d2a\u5fc3Code ##\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nstruct node {\n\tint len , color;\n\tbool operator < (const node &a) const {\n\t\t\treturn len < a.len;\n\t}\n};\nnode g[1000010] , ans[5];\nint n , top = 0;\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) {\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tfor(int j=1; j<=x; j++) {\n\t\t\tscanf(\"%d\",&g[++top].len);\n\t\t\tg[top].color = i;\t\t\t\n\t\t}\n\t}\n\tsort(g+1 , g+top+1);\n\tfor(int i=1; i<=3; i++)\n\t\tans[i].color = ans[i].len = 0;\n\tfor(int i=1; i<=top; i++) {\n\t\tbool flag = false;\n\t\tfor(int j=1; j<=3; j++)\n\t\t\tif(g[i].color == ans[j].color) {\n\t\t\t\tans[j].len = g[i].len;\n\t\t\t\tflag = true;\n\t\t\t}\n\t\tif(flag == false)\n\t\t\tans[1] = g[i];\n\t\tsort(ans+1 , ans+4);\n\t\tif(ans[1].len + ans[2].len > ans[3].len) {\n\t\t\tfor(int j=1; j<=3; j++)\n\t\t\t\tprintf(\"%d %d \",ans[j].color,ans[j].len);\n\t\t\treturn 0;\t\t\t\n\t\t}\n\t}\n\tprintf(\"NIE\\n\");\n\treturn 0;\n}\n```\n\n\n  [1]: https://www.luogu.org/problemnew/show/P3528\n  [2]: https://www.lydsy.com/JudgeOnline/problem.php?id=2529",
        "postTime": 1533622135,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3528 \u3010[POI2011]PAT-Sticks\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\uff1a[\u6233\u8fd9\u91cc](https://www.luogu.com.cn/problem/P3528)\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n1. \u7ed9\u4f60 $k$ \u79cd\u989c\u8272\u7684\u6728\u68cd\uff0c\u6bcf\u79cd\u6728\u68cd\u989c\u8272\u4e0d\u4e00\u6837\u3002\n\n2. \u627e\u51fa\u4e09\u6839\u989c\u8272\u4e0d\u4e00\u6837\u7684\u6728\u68cd\u7ec4\u6210\u4e09\u89d2\u5f62\u3002\n\n3. \u5982\u679c\u53ef\u4ee5\u8f93\u51fa\u65b9\u6848\uff0c\u4e0d\u80fd\u8f93\u51fa \"NIE\"\u3002\n\n## \u601d\u8def\uff1a\n\n\u9047\u4e8b\u4e0d\u51b3\u5148\u770b\u6570\u636e\u8303\u56f4\u3002\n\n\u6700\u591a\u6709 $50$ \u79cd\u989c\u8272\uff0c\u800c\u6709 $10^6$ \u7684\u6728\u68cd\u3002\n\n#### zhx \u66fe\u7ecf\u8bf4\u8fc7\u5982\u679c\u9898\u76ee\u4e2d\u51fa\u73b0\u5947\u602a\u7684\u6570\u636e\u8303\u56f4\u8981\u7740\u91cd\u601d\u8003\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u989c\u8272\u7684\u4e2a\u6570\u5c31\u5f88\u53ef\u7591\u3002\n\n\u4e0b\u9762\u4ece\u989c\u8272\u5f00\u59cb\u5165\u624b\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651\u4e0d\u540c\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u6309\u957f\u5ea6\u6392\u5e8f\uff0c\u5982\u679c\u6709\u89e3\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u7ec4\u89e3\uff0c\u4e09\u6839\u6728\u68cd\u662f\u8fde\u7eed\u7684\uff0c\u4e14\u957f\u5ea6\u662f\u76f8\u8fd1\u7684\uff0c\u76f4\u63a5\u627e\u76f8\u90bb\u7684\u4e09\u6839\u6728\u68cd\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5982\u679c\u8003\u8651\u540c\u79cd\u989c\u8272\uff0c\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u5f00\u4e00\u4e2a\u5927\u6839\u5806\u3002\n\n\u628a\u6bcf\u79cd\u989c\u8272\u7684\u6728\u68cd\u4e22\u8fdb\u53bb\u3002\n\n\u5355\u72ec\u5f00\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u628a\u6bcf\u79cd\u989c\u8272\u957f\u5ea6\u6700\u5927\u7684\u6728\u68cd\u4e22\u8fdb\u53bb\u3002\n\n\n1. \u6bcf\u6b21\u53d6\u51fa\u6700\u957f\u7684\u4e09\u6839\u6728\u68cd\n\n2. \u5982\u679c\u53ef\u4ee5\u7ec4\u6210\u5219\u8f93\u51fa\u3002\n\n3.  \u5982\u679c\u5f53\u524d\u7684\u4e09\u6839\u4e0d\u80fd\u7ec4\u6210\u4e09\u89d2\u5f62\u5219\u628a\u6700\u957f\u7684\u4e00\u6839\u4e22\u6389\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u6709\u5176\u4ed6\u7684\u7ec4\u5408\u548c\u5b83\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u628a\u5269\u4e0b\u7684\u4e24\u6839\u4e22\u56de\u5806\u4e2d\u3002\n\n4. \u770b\u770b\u4e0e\u4e4b\u524d\u90a3\u4e2a\u6700\u957f\u7684\u76f8\u540c\u989c\u8272\u7684\u5806\u4e2d\u8fd8\u6709\u6ca1\u6709\u5176\u4ed6\u7684\uff0c\u5982\u679c\u6709\u5c31\u4e22\u5165\u65b0\u7684\u5806\u4e2d\u3002\n\n5. \u91cd\u590d\u4e0a\u9762\u6b65\u9aa4\uff0c\u76f4\u81f3\u65b0\u7684\u5806\u4e2d\u5143\u7d20\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8f93\u51fa\u65e0\u89e3\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u3002\n\n### \u4e0b\u9762\u662f\u8d34\u5fc3\u7684\u4ee3\u7801\u3002\n\n```cpp\n/*\n\n\u3000\u3000\u3000\u3000\u3000\uff0f\uff1e\u3000   \u30d5\n\u3000\u3000\u3000\u3000\u3000| \u3000_\u3000 _|\n\u3000 \u3000\u3000\u3000\uff0f`\u30df _x \u5f61\n\u3000\u3000 \u3000 /\u3000\u3000\u3000 \u3000 |\n\u3000\u3000\u3000 /\u3000  \u30fd\u3000\u3000 ?\n\u3000\uff0f\uffe3|\u3000\u3000 |\u3000|\u3000|\n\u3000| (\uffe3\u30fd\uff3f_\u30fd_)_)\n\u3000\uff3c\u4e8c\u3064\n\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node{\n\tint col,len;//\u989c\u8272\uff0c\u957f\u5ea6 \n\tbool operator < (const node &T) const {\n    return len < T.len;\n}\n};\n\n\npriority_queue<node> q[55];\npriority_queue<node> a;//\u5355\u72ec\u5f00\u7684\u5927\u6839\u5806\uff0c\u4fdd\u8bc1\u91cc\u9762\u7684\u6728\u68cd\u989c\u8272\u4e0d\u4e00\u6837 \n\nlong long read()\n{\n\tlong long x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-') f = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0'; ch = getchar();}\n\treturn x * f;\n}\n\nint n;\n\nbool check(node a, node b, node c)//\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \n{\n\tif(a.len + b.len > c.len && a.len - b.len < c.len) return true;\n\telse return false;\n}\n\nint main()\n{\n\tn = read();\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tint x = read();\n\t\tfor(int j = 1; j <= x; j++)\n\t\t{\n\t\t\tint y = read();\n\t\t\tq[i].push((node){i, y});\n\t\t}\n\t}\n\t\n\t//\u6839\u636e\u601d\u8def\u5927\u6a21\u62df \n\t \n\tfor(int i = 1; i <= n; i++) \n\t{\n\t\tif(!q[i].empty())\n\t\t{\n\t\t\ta.push(q[i].top());\t\n\t\t\tq[i].pop();\n\t\t}\n\t}\n\n\t//\u627e\u6700\u957f\u7684\u4e09\u6839 \n\n\twhile(!a.empty())\n\t{\n\t\tnode x = a.top();//\u53d6\u51fa\u4e09\u6839 \n\t\ta.pop();\n\t\tnode y = a.top();\n\t\ta.pop();\n\t\tnode z = a.top();\n\t\ta.pop();\n\t\tif(check(x, y, z))//\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \n\t\t{\n\t\t\tcout << x.col << \" \" << x.len << \" \";\n\t\t\tcout << y.col << \" \" << y.len << \" \";\n\t\t\tcout << z.col << \" \" << z.len;\n\t\t\treturn 0;\n\t\t}\n\t\telse//\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \n\t\t{\n\t\t\ta.push(y); \n\t\t\ta.push(z);\n\t\t\tif(!q[x.col].empty())\n\t\t\t{\n\t\t\t\ta.push(q[x.col].top());\n\t\t\t\tq[x.col].pop();\n\t\t\t}\n\t\t}\n\t\tif(a.size() < 3)//\u5982\u679c\u5c0f\u4e8e\u4e09\u6839\u5219\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62 \n\t\t{\n\t\t\tcout << \"NIE\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\n```\n\n### \u5c0f\u7ed3\uff1a\n\n\u4e8b\u51fa\u53cd\u5e38\u5fc5\u6709\u5996\uff0c\u4e00\u5b9a\u8981\u5173\u6ce8\u5947\u602a\u7684\u6570\u636e\u8303\u56f4\u8fdb\u800c\u6293\u4f4f\u9898\u76ee\u7684\u91cd\u70b9\u3002\n",
        "postTime": 1664717110,
        "uid": 672781,
        "name": "zhaozixu2006",
        "ccfLevel": 4,
        "title": "P3528 PAT-Sticks(2022.10.2)"
    },
    {
        "content": "# [POI2011]PAT-Sticks\n\n## \u6742\u9879\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3528)\n\n## \u601d\u8def\n\n\u6570\u636e\u7ed3\u6784\u9898\uff08\u4e5f\u662f\u8d2a\u5fc3\uff09\uff0c\u9996\u5148\u8003\u8651\u989c\u8272\u5168\u90fd\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u627e\u5230\u4e09\u4e2a\u76f8\u90bb\u7684\u6570\uff0c\u5224\u65ad\u80fd\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5982\u679c\u6709\u597d\u591a\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u989c\u8272\u90fd\u641e\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u7136\u540e\u518d\u641e\u4e00\u4e2a\u6700\u7ec8\u5b58\u7b54\u6848\u7684\u5927\u6839\u5806 $PQ$ \uff0c\u6bcf\u6b21\u53ef\u4ee5\u9009\u6240\u6709\u989c\u8272\u91cc\u6700\u957f\u7684\u90a3\u6839\uff08\u5806\u9876\uff09 push \u8fdb $PQ$ \uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u4e09\u4e2a\u6700\u957f\u7684\uff0c\u5982\u679c\u7b26\u5408\u76f4\u63a5\u8f93\u51fa\uff0c\u5426\u5219\u5c06\u6700\u957f\u7684\u90a3\u6839\u5f7b\u5e95\u653e\u5f03\uff0c\u518d\u9009\u4e00\u6839\u540c\u6837\u989c\u8272\u7684\u6700\u957f\u68cd push \u8fdb $PQ$ \u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u989c\u8272\u4e92\u4e0d\u76f8\u540c\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u6240\u6709\u989c\u8272\u90fd\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n\nAC code\n```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstdlib>\n#define pii pair<int,int>\n\nusing namespace std;\n\nconst int maxn=1e6+5;\n\ninline int read()\n{\n\tint w=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9')\n\t{\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9')\n\t{\n\t\tw=(w<<3)+(w<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn w*f;\n}\n\nstruct node\n{\n\tint col,len;\n};\n\npriority_queue <int> q[55];\n\npriority_queue <pii> q_ans;\n\nint k;\n\nint main()\n{\n\tk=read();\n\t\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint n=read();\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tint len=read();\n\t\t\tq[i].push(len);\n\t\t}\n\t}\n\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tif(!q[i].empty())\n\t\t{\n\t\t\tint val=q[i].top();\n\t\t\tq[i].pop();\n\t\t\tq_ans.push(make_pair(val,i));\n\t\t}\n\t}\n\n\twhile(q_ans.size()>=3)\n\t{\n\t\tpair<int,int> a=q_ans.top(); q_ans.pop();\n\t\tpair<int,int> b=q_ans.top(); q_ans.pop();\n\t\tpair<int,int> c=q_ans.top(); q_ans.pop();\n\t\t\n\t\tif(c.first>a.first-b.first)\n\t\t{\n\t\t\tcout<<a.second<<\" \"<<a.first<<\" \";\n\t\t\tcout<<b.second<<\" \"<<b.first<<\" \";\n\t\t\tcout<<c.second<<\" \"<<c.first<<\" \";\n\t\t\texit(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq_ans.push(make_pair(b.first,b.second));\n\t\t\tq_ans.push(make_pair(c.first,c.second));\n\t\t\t\n\t\t\tif(!q[a.second].empty())\n\t\t\t{\n\t\t\t\tint k=q[a.second].top();\n\t\t\t\tq[a.second].pop();\n\t\t\t\tq_ans.push(make_pair(k,a.second));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout<<\"NIE\";\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1667310625,
        "uid": 464366,
        "name": "NinT_W",
        "ccfLevel": 0,
        "title": "[POI2011]PAT-Sticks"
    },
    {
        "content": "## \u524d\u8a00\n\n1. \u524d\u5f80[\u6211\u7684\u535a\u5ba2](https://www.laoguantx.top)\uff08\u53ef\u80fd\u6b63\u5728\u5907\u6848\uff09\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n2. \u8fd9\u7bc7\u9898\u89e3\u7684\u8bb2\u8005\u4e3a\uff1a\u949f\u7693\u66e6\uff0c\u6211\u53ea\u662f\u5c06\u949f\u8001\u5e08\u7684\u8bb2\u89e3\u6574\u7406\u5e76\u590d\u8ff0\u4e00\u904d\u3002\n\n## \u542f\u53d1\n\n\u6211\u4eec\u4ece\u7b80\u5355\u7684\u95ee\u9898\u5f00\u59cb\uff0c\u5047\u8bbe\u6240\u6709\u7684\u6728\u68cd\u989c\u8272\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u6728\u68cd\u6765\u5c1d\u8bd5\u7740\u7ec4\u6210\u4e09\u89d2\u5f62\u3002\n\n> zhx\uff1a\n>\n> \u5982\u679c\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u6570\u636e\u987a\u5e8f\u53d8\u6362\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u7684\u8bdd\uff0c\u5c31\u53bb\u8003\u8651\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u6392\u5e8f\uff0c\u8bbe\u6211\u4eec\u8981\u627e\u51fa\u7684\u4e09\u6839\u6728\u68d2\u7684\u957f\u5ea6\u4e3a $a,b,c(a>b>c)$ \uff0c\u56e0\u4e3a $a,b,c$ \u7684\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u6240\u4ee5\u5e94\u8be5\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n$$a>b>a-c$$\n\n\u6240\u4ee5\u5b58\u5728\u4e00\u79cd\u65b9\u6cd5\uff1a\u5206\u522b\u67e5\u627e $a$ \u548c $a-c$ \u7684\u4f4d\u7f6e\uff0c\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u95f4\uff0c\u662f\u5426\u53ef\u4ee5\u52a0\u5165 $b$ \u8fd9\u4e2a\u6570\uff0c\u5982\u679c\u6709\uff0c\u5219\u5b58\u5728\u6784\u6210\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\u3002\n\n\u5982\u4f55\u907f\u514d\u67e5\u627e\u5462\uff1f\u90a3\u5c31\u662f\u9009\u62e9\u6392\u5e8f\u540e\u4e09\u6839\u8fde\u7eed\u7684\u6728\u68d2\u8fdb\u884c\u5224\u65ad\uff0c\u5f53\u786e\u5b9a $a$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53bb\u5bfb\u627e\u5c3d\u53ef\u80fd\u5c0f\u7684 $a-c$ \uff0c\u4e5f\u5c31\u662f\u5bfb\u627e\u5c3d\u53ef\u80fd\u5927\u7684 $c$ \uff0c\u53c8\u8981\u53bb\u5bfb\u627e\u5c3d\u53ef\u80fd\u5927\u4f46\u662f\u53c8\u4e0d\u8d85\u8fc7 $a$ \u7684 $b$ \uff0c\u6240\u4ee5\u8fde\u7eed\u7684\u4e09\u6839\u6728\u68d2\u662f\u6781\u7aef\u60c5\u51b5\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u9762\u5bf9\u6240\u6709\u6728\u68cd\u989c\u8272\u90fd\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u5934\u679a\u4e3e\u4e09\u6839\u6728\u68cd\u5373\u53ef\u5f97\u5230\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \u3002\n\n## \u95ee\u9898\u89e3\u51b3\n\n\u6839\u636e\u542f\u53d1\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u9009\u62e9\u957f\u5ea6\u76f8\u8fd1\u7684\u4e09\u6839\u6728\u68d2\u662f\u6700\u6709\u80af\u80fd\u5f97\u5230\u89e3\u51b3\u65b9\u6848\u7684\uff0c\u90a3\u4e48\u9762\u5bf9\u5b58\u5728\u989c\u8272\u76f8\u540c\u7684\u6728\u68d2\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1f\n\n\u4ecd\u7136\u662f\u6392\u5e8f\uff0c\u6bcf\u79cd\u989c\u8272\u7684\u6728\u68d2\u5206\u522b\u6392\u5e8f\uff0c\u6bcf\u6b21\u9009\u62e9\u989c\u8272\u4e0d\u540c\u7684\u3001\u957f\u5ea6\u6700\u76f8\u8fd1\u7684\u4e09\u6839\u6728\u68d2\u9010\u4e2a\u5224\u65ad\u4e5f\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\n\n\u601d\u8def\u5df2\u6709\uff0c\u5982\u4f55\u5b9e\u73b0\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u4e0d\u65ad\u83b7\u5f97\u4e0d\u540c\u989c\u8272\u6728\u68d2\u7684\u957f\u5ea6\u7684\u6700\u957f\u503c\uff08\u8003\u8651\u4ece\u957f\u5230\u77ed\u5bfb\u627e\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u5927\u6839\u5806\u6765\u7ef4\u62a4\uff0c\u5e76\u5355\u72ec\u5efa\u7acb\u8d77\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u8fd9\u4e2a\u5355\u72ec\u7684\u5927\u6839\u5806\u4e2d\u5b58\u50a8\u7740\u5f53\u524d\u8fd8\u672a\u6392\u9664\u7684\u4e0d\u540c\u989c\u8272\u7684\u6700\u957f\u7684\u6728\u68cd\uff0c\u6bcf\u6b21\u9009\u62e9\u6700\u957f\u7684\u4e09\u6839\u6728\u68cd\u8fdb\u884c\u6bd4\u8f83\uff0c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5219\u8f93\u51fa\uff0c\u5426\u5219\u5c06\u5355\u72ec\u5efa\u7acb\u7684\u5927\u6839\u5806\u5806\u9876\u7684\u6728\u68cd\u5f39\u51fa\uff0c\u8bf4\u660e\u5176\u4e0d\u80fd\u548c\u5176\u4ed6\u6728\u68cd\u6784\u6210\u7b26\u5408\u8981\u6c42\u4e09\u89d2\u5f62\u3002\u88ab\u5f39\u51fa\u7684\u6728\u68cd\u5c5e\u4e8e\u54ea\u79cd\u989c\u8272\uff0c\u5c31\u5c06\u54ea\u79cd\u989c\u8272\u5269\u4e0b\u6728\u68cd\u4e2d\u6700\u957f\u7684\u52a0\u5165\u5355\u72ec\u5efa\u7acb\u7684\u5927\u6839\u5806\uff0c\u76f4\u5230\u8be5\u989c\u8272\u6ca1\u6709\u6728\u68cd\u53ef\u7528\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5355\u72ec\u5efa\u7acb\u7684\u5927\u6839\u5806\u5185\u6240\u6709\u7684\u6728\u68cd\u989c\u8272\u4e0d\u540c\uff0c\u5e76\u5305\u542b\u6240\u6709\u53ef\u7528\u989c\u8272\u7684\u6728\u68cd\u3002\u6700\u7ec8\u5982\u679c\u6ca1\u6709\u4e09\u6839\u6728\u68cd\u6765\u7ec4\u6210\u4e09\u89d2\u5f62\uff0c\u8bf4\u660e\u7ed3\u679c\u4e0d\u5b58\u5728\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct Node{\n\tint len,col;\n}temp[4];\nbool operator <(const Node &a,const Node &b){\n\treturn a.len<b.len;\n}\npriority_queue<Node> h[50];\npriority_queue<Node> q; \nint n,col[55][1000010];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&col[i][0]);\n\t\tfor(int j=1;j<=col[i][0];j++){\n\t\t\tscanf(\"%d\",&col[i][j]);\n\t\t\th[i].push({col[i][j],i});\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tq.push(h[i].top());\n\t\th[i].pop();\n\t}\n\twhile(q.size()>=3){\n\t\tfor(int i=1;i<=3;i++){\n\t\t\ttemp[i]=q.top();\n\t\t\tq.pop();\n\t\t}\n\t\tif(temp[1].len-temp[2].len<temp[3].len){\n\t\t\tprintf(\"%d %d %d %d %d %d\",temp[1].col,temp[1].len,temp[2].col,temp[2].len,temp[3].col,temp[3].len);\n\t\t\treturn 0;\n\t\t}\n\t\tif(h[temp[1].col].size()){\n\t\t\tq.push(h[temp[1].col].top());\n\t\t\th[temp[1].col].pop();\n\t\t}\n\t\tq.push(temp[2]);\n\t\tq.push(temp[3]);\n\t}\n\tprintf(\"NIE\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1664711670,
        "uid": 135999,
        "name": "\u8001\u5b98\u7ae5\u978bgogo",
        "ccfLevel": 5,
        "title": "[POI2011]PAT-Sticks \u9898\u89e3"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u7406\u89e3\u7684\u4e00\u70b9\u5c31\u662f\uff0c\u5982\u679c\u6709\u89e3\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e00\u7ec4\u89e3\uff0c\u4e09\u6839\u6728\u68cd\u662f\u201c\u8fde\u7eed\u7684\u201d\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6392\u4e00\u904d\u5e8f\uff0c\u7136\u540e\u7ef4\u62a4\u8fde\u7eed\u7684\u4e09\u6839\u6728\u68cd\u5c31\u597d\u4e86\u3002\u5177\u4f53\u8bf4\u6765\u5c31\u662f\u7ef4\u62a4\u4e09\u6839\u989c\u8272\u4e0d\u540c\u4e14\u957f\u5ea6\u6700\u957f\u7684\u6728\u68cd\u3002\u4e00\u4e9b\u7ec6\u8282\u8bf7\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct dou{\n    int col,len;\n}a[1000006];\ninline bool cmp(dou x,dou y)\n{\n    if(x.len==y.len)return x.col<y.col;\n    return x.len<y.len;\n}\nint n;\nint tot;\nint ans[10];\nint vis[100];\nint t;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int m;\n        scanf(\"%d\",&m);\n        for(int j=1;j<=m;j++)\n        {\n            tot++;\n            a[tot].col=i;\n            scanf(\"%d\",&a[tot].len);\n        } \n    }\n    sort(a+1,a+1+tot,cmp);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    for(int i=1;i<=tot;i++)\n    {\n        int col=a[i].col;\n        int len=a[i].len;\n        if(vis[col]==0)//\u5982\u679c\u6ca1\u9009\u5b8c\u4e09\u6839\u5c31\u628a\u6ca1\u7528\u8fc7\u7684\u989c\u8272\u9009\u4e0a\n        {\n            t++;\n            vis[col]=t;\n            ans[t]=i;\n            if(t==3)\n                if(a[ans[3]].len>=a[ans[2]].len+a[ans[1]].len)//\u5f53\u9009\u6ee1\u4e09\u6839\u6728\u68cd\u65f6\n                {                                                                 \n                    vis[a[ans[1]].col]=0;//\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u5408\u6cd5\u5219\u9000\u51fa\u5faa\u73af\n                    ans[1]=ans[2];//\u5426\u5219\u5f39\u6389\u6700\u5c0f\u7684\u90a3\u6839\uff0c\u7ee7\u7eed\u627e\n                    ans[2]=ans[3];\n                    vis[a[ans[1]].col]=1;\n                    vis[a[ans[2]].col]=2;\n                    t=2;\n                }\n                else break;\n        }\n        else//\u5982\u679c\u5f53\u524d\u989c\u8272\u5df2\u7ecf\u88ab\u9009\u4e2d\u7684\u8bdd\u5219\u5c06\u5176\u66ff\u6362\u4e3a\u5f53\u524d\u6728\u68cd\n            if(t==1)ans[1]=i;//\u4ee5\u7ef4\u62a4\u6700\u957f\u7684\u4e09\u6839\u6728\u68cd\n            else \n                if(t==2)\n                    if(vis[col]==1)\n                    {\n                        ans[1]=ans[2];\n                        ans[2]=i;\n                        vis[a[ans[1]].col]=1;\n                        vis[a[ans[2]].col]=2;\n                    }\n                    else \n                        if(vis[col]==2)\n                            ans[2]=i;\n    }\n    if(t!=3)\n    {\n        printf(\"NIE\");\n        return 0;\n    }\n    for(int i=1;i<=3;i++)\n        printf(\"%d %d \",a[ans[i]].col,a[ans[i]].len);\n    return 0;\n} \n```\n\u4ee3\u7801\u4e11\u964b\u671b\u8c05\u89e3qwq\uff0c\u8fd8\u6709\u8981\u6ce8\u610f\u5f53\u6728\u68cd\u8c03\u6574\u65f6\u8bb0\u5f97\u8c03\u6574\u5bf9\u5e94\u7684\u989c\u8272\uff0c\u5728\u8fd9\u4e0a\u9762WA\u4e86\u597d\u51e0\u904d= =\n",
        "postTime": 1508578682,
        "uid": 31724,
        "name": "Vatyr",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3528 \u3010[POI2011]PAT-Sticks\u3011"
    }
]