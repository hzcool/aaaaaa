[
    {
        "content": "\u5927\u4f6c\u8def\u8fc7\uff0c\u840c\u65b0\u53c2\u8003\u3002\n\n\u54ce\u5440\uff0c\u672c\u4eba\u7b2c\u4e00\u7bc7\u9898\u89e3\u5566\uff0c\u5982\u679c\u6709\u8bef\uff0c\u656c\u8bf7\u65a7\u6b63\u3002\n\n\u9996\u5148\u6765\u770b\u9898\uff08~~\u6ca1\u770b\u9898\u7684\u770b\u9898\u53bb\uff01~~\uff09\uff0c\u9898\u9762\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\uff0c\u5c31\u662f\u6bcf\u6b21\u76f8\u90bb\u5206\u6570\u7684\u4e24\u4e2a\u4eba\u6839\u636e\u5b9e\u529b\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u8f93\u8d62\u5206\u6cbb\uff0c\u4e0d\u65ad\u6392\u5e8f\u7f62\u4e86\u3002\n\n\u201c\u80af\u5b9a\u8981 `sort` \u54c7\uff01\u6bcf\u6b21\u66f4\u65b0\u5206\u6570\uff0c\u7136\u540e `sort` \u4e0d\u5c31\u5f97\u4e86\uff1f\u201d\n\n\u5176\u5b9e\u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f `sort` \u4f1a\u7206\u70b8\u2014\u2014\u65f6\u95f4\u4f1a\u7206\u70b8\u3002\u4f46\u662f\u65e0\u8bba\u65f6\u95f4\u600e\u6837\uff0c\u90a3\u90fd\u662f `ccf` \u7684\u6d4b\u8bd5\u70b9\u6709\u6ca1\u6709\u5361 TLE \u7684\u95ee\u9898\u800c\u5df2\u3002\u4f46\u5982\u679c\u771f\u4ece\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u8eab\u63a2\u8ba8\uff0c`sort` \u65e0\u7591\u662f\u4e00\u4e2a\u5f88\u6d6a\u8d39\u7684\u7b97\u6cd5\u3002\n\n**\u4e00\u3001\u5173\u4e8e `sort` \u7684\u6d6a\u8d39**\n \n\u9996\u5148\u8ba9\u6211\u4eec\u60f3\u60f3\uff0c`sort` \u5176\u5b9e\u5c31\u662f\u5feb\u901f\u6392\u5e8f\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u5176\u5b9e\u5c31\u662f\u4e8c\u5206\u7684\u601d\u60f3\uff08~~\u80e1\u4e71\u5728\u4e2d\u95f4\u7acbflag~~\uff09\u3002\u7a33\u5b9a\u7684\u8bdd $O(n \\log n)$\u5de6\u53f3\u3002\u4f46\u662f\u4ed4\u7ec6\u60f3\u60f3\u6b64\u9898\u2014\u2014\u6bcf\u6b21\u9700\u8981\u66f4\u65b0\u7684\u503c\uff0c\u90fd\u662f\u76f8\u90bb\u4e24\u4e2a\u4eba\u53d8\u5316\u540e\u7684\u5206\u6570\uff1b\u800c\u76f8\u90bb\u7684\u5206\u6570\uff0c\u6709\u4e9b\u662f\u4e0d\u4f1a\u6539\u53d8\u4f4d\u7f6e\u7684\uff0c\u800c\u5feb\u901f\u6392\u5e8f\u5219\u662f\u6bcf\u6b21\u5168\u90e8\u4fee\u6539\uff0c\u5fc5\u7136\u4f1a\u9020\u6210\u6d6a\u8d39\u3002\n\n**\u4e8c\u3001\u5173\u4e8e\u5f52\u5e76\u6392\u5e8f**\n\n\u7136\u540e\u8003\u8651\u5f52\u5e76\u6392\u5e8f\uff1a\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\u5c31\u662f\u5408\u5e76\u4e24\u4e2a\u540c\u5e8f\u6570\u7ec4\u7684\u7ebf\u6027\u65b9\u5f0f\u2014\u2014\u6bcf\u6b21\u6bd4\u8f83\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u8c01\u66f4\u5c0f\uff08\u5927\uff09\u5219\u653e\u5230 `temp` \u6570\u7ec4\u91cc\uff0c\u7136\u540e\u5220\u6389\u8fdb\u5165 `temp` \u7684\u5143\u7d20\uff0c\u6307\u9488 `++`\u3002\n\n\u4e8e\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u4ee3\u7801\u5c31\u4e0d\u96be\u7406\u89e3\u4e86\uff1a\n\n```cpp\nvoid merge(int l,int r){\n    if(l==r)return 0;\n    int mid=(l+r)/2;\n    merge(l,mid);\n    merge(mid+1,r);\n    int i=l,j=mid+1,p=l;\n    while(i<=mid&&j<=r){\n        if(a[i]>a[j])temp[++p]=a[++i];\n        else temp[++p]=a[++j];\n\t} \n    while(i<=mid)temp[++p]=a[++i];\n    while(j<=r)temp[++p]=a[++j];\n    for(int i=l;i<=r;i++)a[i]=temp[i];\n} \n```\n\n____\n\n\n\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u201c\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u201d\u53d8\u6210\u201c\u4e00\u4e2a\u88ab\u4e00\u5206\u4e3a\u4e8c\u7684\u6570\u7ec4\uff08\u4e5f\u662f\u4e24\u4e2a\uff09\u201d\u2014\u2014\u56e0\u4e3a\u4e0d\u65ad\u4e8c\u5206\u540e\uff0c\u5269\u4e0b\u7684\u5355\u4e2a\u5143\u7d20\u5fc5\u5b9a\u6709\u5e8f\uff0c\u6240\u4ee5\u5408\u5e76\u76f8\u90bb\u76f8\u90bb\u5143\u7d20\u5e76\u4f7f\u4e4b\u6709\u5e8f\uff0c\u4e4b\u540e\u4ea7\u751f\u4e24\u4e2a\u6709\u5e8f\u533a\u95f4\u7b49\u4ef7\u4e8e\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002\u4f46\u6b64\u5904\u4ecd\u6709\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u5c31\u662f\u7531\u4e8e\u4e24\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u5173\u7cfb\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u5728\u7b2c\u4e00\u4e2a `while` \u7ed3\u675f\u540e\u4e24\u4e2a\u539f\u6570\u7ec4\u4e2d\u6709\u5269\u4f59\u7684\u5143\u7d20\u672a\u53c2\u4e0e\u6392\u5e8f,\u6240\u4ee5\u9700\u8981\u518d\u52a0\u4e24\u4e2a `while` \u6765\u5904\u7406\u5269\u4f59\u5143\u7d20\uff08\u6b64\u65f6\u4e00\u5b9a\u662f\u53ea\u4f1a\u6267\u884c\u5176\u4e2d\u7684\u4e00\u4e2a `while`\uff0c\u539f\u56e0\u4e0d\u8a00\u81ea\u660e\uff09\u3002\u6700\u540e\uff0c**\u4e00\u5b9a\u8981\u628a\u8fc7\u7a0b\u6570\u7ec4 `temp` \u8986\u76d6\u539f\u6570\u7ec4a\u7684\u503c**\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u4f20\u9012\u5230\u4e0a\u4e00\u7ea7\u533a\u95f4\uff08\u5927\u533a\u95f4\uff09\u7684\u6570\u503c\u90fd\u6709\u5e8f\u3002\n\n\u7a33\u5b9a\u590d\u6742\u5ea6\uff1a$O(n\\log n)$ \u3002\n\n\u4e09\u3001\u5173\u4e8e\u4e3a\u4f55\u5f15\u8fdb\u5f52\u5e76\u6392\u5e8f\n\n\u5927\u5bb6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f52\u5e76\u6392\u5e8f\u6bcf\u6b21\u7684\u64cd\u4f5c\u53ea\u9488\u5bf9\u76f8\u90bb\u533a\u95f4\uff0c\u6216\u8005\u8bf4\u5408\u5e76\u65f6\u662f\u5bf9\u76f8\u90bb\u51e0\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u8fd9\u7b26\u5408\u53ea\u9700\u8981\u4fee\u6539\u76f8\u90bb\u51e0\u4e2a\u5206\u6570\u7684\u6392\u5e03\u72b6\u51b5\u7684\u9898\u610f\u3002\u5373\u4f7f\u548c\u5feb\u6392\u7684\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u662f\u7701\u6389\u4e86\u5197\u6742\u65e0\u7528\u7684\u64cd\u4f5c\uff0c\u662f\u4e00\u4e2a\u6781\u5927\u7684\u6539\u826f\u3002\n\n\u6700\u540e\uff0c\u9644 `ac` \u4ee3\u7801\uff1a\n```cpp\n#include<iostream> \n#include<algorithm>    \nusing namespace std;  \nint n,r,q;  \nint a[200100],win[200100],lose[200100];  \nint s[200100],w[200100];   \nbool cmp(int x,int y)  \n{  \n  if(s[x]==s[y])   return x<y;\n  return s[x]>s[y];\n}  \nvoid merge()  \n{  \n  int i,j;  \n  i=j=1,a[0]=0;  \n  while(i<=win[0] && j<=lose[0])  \n    if(cmp(win[i],lose[j]))  \n      a[++a[0]]=win[i++];  \n    else   \n      a[++a[0]]=lose[j++];  \n  while(i<=win[0])a[++a[0]]=win[i++];  \n  while(j<=lose[0])a[++a[0]]=lose[j++];          \n}  \nint main()  \n{  \n  cin>>n>>r>>q;n*=2;  \n  for(int i=1;i<=n;i++)a[i]=i;  \n  for(int i=1;i<=n;i++)cin>>s[i];  \n  for(int i=1;i<=n;i++)cin>>w[i];  \n  sort(a+1,a+n+1,cmp);  \n  for(int i=1;i<=r;i++)  \n    {  \n      win[0]=lose[0]=0;  \n      for(int j=1;j<=n;j+=2)  \n        if(w[a[j]]>w[a[j+1]])  \n          {  \n            s[a[j]]++;  \n            win[++win[0]]=a[j];  \n            lose[++lose[0]]=a[j+1];  \n          }  \n        else  \n          {  \n            s[a[j+1]]++;  \n            win[++win[0]]=a[j+1];  \n            lose[++lose[0]]=a[j];  \n          }    \n      merge();          \n    }  \n  cout<<a[q];\n  return 0;  \n}  \n```\n",
        "postTime": 1517556804,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u5173\u4e8e\u745e\u58eb\u8f6e\uff08P1309\uff09\u4ee5\u53ca\u5f15\u7533\u51fa\u6765\u7684\u79cd\u79cd\u95ee\u9898"
    },
    {
        "content": "/\\*\n\u6bcf\u7ec4\u6bd4\u8d5b\u7684\u80dc\u8005\uff1a\u8d5b\u524d\uff0c\u603b\u5206\u662f\u6309\u964d\u5e8f\u6392\u7684\uff1b\u83b7\u80dc\u540e\u90fd\u5f971\u5206\uff0c\u4ecd\u662f\u964d\u5e8f\uff1b\n\n\n\u6bcf\u7ec4\u6bd4\u8d5b\u7684\u8d1f\u8005\uff1a\u8d5b\u524d\uff0c\u603b\u5206\u662f\u6309\u964d\u5e8f\u6392\u7684\uff1b\u4e0d\u5f97\u5206\uff0c\u4ecd\u662f\u964d\u5e8f\u3002\n\n\n\u5148\u6309\u521d\u59cb\u5206\u6570\u6392\u5e8f\uff0c\u7136\u540e\u6309\u5206\u6570\u9ad8\u4f4e\u4e24\u4eba\u4e00\u7ec4\u6bd4\u8d5b\uff1b\n\n\n\u80dc\u8005\u5165\u961fA\uff0c\u8d1f\u8005\u5165\u961fB\u3002\u8fd9\u6837A\u3001B\u81ea\u8eab\u4ecd\u662f\u6709\u5e8f\u7684\uff1b\n\n\n\u53ea\u9700\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u5373\u53ef\uff0c\u5408\u5e76\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662fO(n),\u800c\u5982\u679c\u7528\u5feb\u6392\u5176\u590d\u6742\u5ea6\u4e3aO(nlogn)\n\n\\*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 200001\ntypedef  struct Node{\n    int grade;\n    int num;\n}Node;\nNode a[maxn];\nNode A[100001];\nNode B[100001];\nint w[maxn];\nbool cmp(Node a,Node b)\n{\n    if(a.grade == b.grade)\n        return a.num<b.num;\n    return a.grade>b.grade;\n}\nint n,r,q;\nvoid MergeSort()///\u628aAB\u5f52\u5e76\u5230a\u4e2d\n{\n    int i=1,j=1,k=1;///\u5206\u522b\u7528\u6765\u5728AB\u4ee5\u53caa\u4e2d\u79fb\u52a8\u7684\u6307\u9488\n    while(i<=n && j<=n)\n    {\n        if(A[i].grade > B[j].grade || (A[i].grade == B[j].grade && A[i].num < B[j].num))\n        {\n            a[k].grade = A[i].grade;\n            a[k++].num = A[i++].num;\n        }\n        else{\n            a[k].grade = B[j].grade;\n            a[k++].num = B[j++].num;\n        }\n    }\n    while(i<=n)\n    {\n        a[k].grade = A[i].grade;\n        a[k++].num = A[i++].num;\n    }\n    while(j<=n)\n    {\n         a[k].grade = B[j].grade;\n        a[k++].num = B[j++].num;\n    }\n}\nint main()\n{\n    cin>>n>>r>>q;///2*n\u540d\u9009\u624b r\u8f6e\u6bd4\u8d5b \u5173\u5fc3\u7684\u540d\u6b21q\n    for(int i=1;i<=2*n;i++)\n    {\n        cin>>a[i].grade;\n        a[i].num=i;\n    }\n    for(int i=1;i<=2*n;i++)\n        cin>>w[i];\n    sort(a+1,a+1+2*n,cmp);\n    for(int k=1;k<=r;k++)\n    {\n        int tt=1;\n        for(int i=1;i<2*n;i+=2)\n        {\n            //cout<<w[a[i].num]<<\" \"<<w[a[i+1].num]<<endl;\n            if(w[a[i].num]>w[a[i+1].num])\n            {\n                A[tt].grade = a[i].grade+1;\n                A[tt].num = a[i].num;\n                B[tt].grade  =  a[i+1].grade;\n                B[tt].num = a[i+1].num;\n                tt++;\n            }    //a[i].grade++;\n            else\n            {\n                A[tt].grade = a[i+1].grade+1;\n                A[tt].num = a[i+1].num;\n                B[tt].grade  =  a[i].grade;\n                B[tt].num = a[i].num;\n                tt++;\n            }\n        }\n        MergeSort();\n    }\n    cout<<a[q].num<<endl;///\u6392\u540d\u7b2cq\u7684\u9009\u624b\u7684\u7f16\u53f7\n    return 0;\n}\n\n```",
        "postTime": 1513162741,
        "uid": 64698,
        "name": "List",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "merge\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u7ed3\u6784\u4f53\u662f\u4e2a\u597d\u4e1c\u897f\n\n```c++\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N= 2e5+7;\nint n,r,q;\nstruct person{\n    int s, idx, w;\n\n\t// \u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u53cc\u5173\u952e\u5b57\u6392\u5e8f\n    bool operator<(const person &t)const{\n        if (t.s != s) return s > t.s;\n        return idx < t.idx;\n    }\n\n\t// debug\n    void print(){\n        printf(\"people: idx(%d), s(%d), w(%d)\\n\", idx, s, w);\n    }\n};\nperson p[N], loser[N], winer[N];\n\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n\n    cin >> n >> r >> q;\n    for(int i = 1; i <= n*2; i++) cin >> p[i].s;\n    for(int i = 1; i <= n*2; i++) cin >> p[i].w;\n    for(int i = 1; i <= n*2; i++) p[i].idx = i;\n    sort(p+1, p+1+n*2);\n\n    for(;r--;){ // \u7136\u540e\u5c31\u662f\u7ed9\u53cc\u6307\u9488\n        for(int i=1;i<=n;i++){\n            if (p[2*i-1].w<p[2*i].w){\n                p[2*i].s++;\n                loser[i]=p[2*i-1];\n                winer[i]=p[2*i];\n            }else{\n                p[2*i-1].s++;\n                loser[i]=p[2*i];\n                winer[i]=p[2*i-1];\n            }\n            \n        }\n        merge(loser+1, loser+n+1, winer+1, winer+n+1, p+1);\n    }\n    cout << p[q].idx;\n    return 0;\n}\n\n```\n\n\u628a\u7ed3\u6784\u4f53\u5f53\u4f5c\u7c7b\u7528\uff0c\u7136\u540e\u5c31\u662f\u7ed9\u6392\u5e8f+\u53cc\u6307\u9488\uff0c\u8bf4\u660e\u8fd8\u662f\u8fc7\u5c11\u5417\n\n\u5199\u8fd9\u7bc7\u7684\u539f\u56e0\u662f\uff0c\u5b66\u751f\u4eec\u7ed3\u6784\u4f53\u7528\u7684\u592anaive\u4e86~~\u4ee3\u7801\u5199\u7684\u592a\u4e11\u4e86~~\n\n\u7136\u540eSTL\u91cc\u9762\u6709`sort`\u6709`merge`\uff0c\u7f8e\u6ecb\u6ecb\n\n\n\n\n",
        "postTime": 1535696412,
        "uid": 4741,
        "name": "cww970329",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6b64\u9898\uff0c\u6700\u5148\u60f3\u5230\u7684\u7b97\u6cd5\u5e94\u8be5\u662f\u6bcf\u8f6e\u6bd4\u8d5b\u524d\u90fd\u7528\u5feb\u6392\u6392\u4e00\u6b21\uff0c\u7136\u540e\u518d\u6839\u636e\u9009\u624b\u7684\u5b9e\u529b\u503c\u51b3\u5b9a\u80dc\u8d1f\u3002\n\n\u4f46\u662f\u2014\u2014\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u975e\u5e38\u975e\u5e38\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u9ad8\uff01\u8fbe\u5230\u4e86O(R\\*(N\\*logN+N)) {\u5b9e\u9645\u4e0a\u8fd8\u8981\u66f4\u591a\u4e9b} \u3002\u5f88\u660e\u663e\uff0c\u8d85\u65f6\u4e86\u3002\n\n\n\u518d\u8fdb\u4e00\u6b65\u60f3\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u6a21\u62df\u540e\u53ef\u4ee5\u77e5\u9053\uff0c\u6bcf\u8f6e\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u80dc\u5229\u8005\u548c\u5931\u8d25\u8005\u4e24\u4e2a\u96c6\u5408\u7684\u5185\u90e8\u987a\u5e8f\u662f\u4e0d\u4f1a\u88ab\u6253\u4e71\u7684\u3002\n\n\u56e0\u6b64\uff0c\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u4e4b\u524d\u90a3\u4e2a\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u591f\u9ad8\u6548\u4e86\uff0c\u56e0\u4e3a\u6240\u8c13\u7684\u5feb\u6392\u6548\u7387\u9ad8\uff0c\u662f\u9488\u5bf9\u968f\u673a\u7684\u6570\u5217\u7684\uff0c\n\n\u800c\u8fd9\u91cc\u6bcf\u4e00\u8f6e\u6bd4\u8d5b\u4e0b\u6765\uff0c\u6709\u4e00\u534a\u4eba\u7684\u76f8\u5bf9\u987a\u5e8f\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u5feb\u6392\u5c31\u6ca1\u6709\u4e86\u4f18\u52bf\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u65b0\u65b9\u6cd5\u2014\u2014\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u8fd9\u6837\uff0c\u6bcf\u4e00\u8f6e\u6bd4\u8d5b\u540e\u7528O(N)\u7684\u65f6\u95f4\u5f52\u5e76\u4e00\u6b21\uff0c\u65f6\u95f4\u5c31\u591f\u4e86\u3002\n\n\u7a7a\u95f4\u4e0d\u8981\u5fd8\u4e86\u5f00\u4e24\u500d\uff01\uff01\uff01\n\n***\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u7b2c\u4e00\u8f6e\u6bd4\u8d5b\u524d\uff0c\u5e76\u4e0d\u77e5\u9053\u5f85\u53c2\u8d5b\u9009\u624b\u7684\u6392\u540d\uff0c\u800c\u8fd9\u65f6\u53c8\u4e0d\u53ef\u80fd\u5f97\u5230\u4efb\u4f55\u5176\u4ed6\u7684\u4fe1\u606f\uff0c\n\n\u56e0\u4e3a\u672c\u6765\u76f4\u63a5\u7ed9\u51fa\u7684\u521d\u59cb\u503cs\u5c31\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u8981\u7528\u5feb\u6392\uff1b\u8fd8\u8981\u6ce8\u610f\u521d\u59cb\u503c\u76f8\u540c\u7684\u60c5\u51b5\uff08\u8fd9\u4e9b\u90fd\u662f\u7ec6\u8282\uff0c\u4e0d\u518d\u8d58\u8ff0\uff09\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u6700\u540e\uff0c\u4e0b\u9762\u7ed9\u51fapascal\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n```cpp\nvar\n  n,r,q,i,j:longint;\n  s,w,id,a1,a2,a3,b1,b2,b3:array[0..200005]of longint;\nprocedure qsort(l,r:longint);\nvar\n  i,j,mid,mid1,t:longint;\nbegin\n  i:=l; j:=r; mid:=s[(l+r)div 2];\n  mid1:=id[(l+r)div 2];\n  while i<=j do\n  begin\n    while (s[i]>mid)or(s[i]=mid)and(id[i]<mid1) do inc(i);\n    while (s[j]<mid)or(s[j]=mid)and(id[j]>mid1) do dec(j);\n    if i<=j then\n    begin\n      t:=s[i]; s[i]:=s[j]; s[j]:=t;\n      t:=w[i]; w[i]:=w[j]; w[j]:=t;\n      t:=id[i];id[i]:=id[j];id[j]:=t;\n      inc(i); dec(j);\n    end;\n  end;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nprocedure Merge;       //\u5f52\u5e76\nvar\n  i,j,k,p:longint;\nbegin\n  k:=1; i:=1; j:=1;\n  while(i<=n)and(j<=n)do\n  begin\n    if (a1[i]>b1[j])or(a1[i]=b1[j])and(a3[i]<b3[j]) then\n    begin\n      s[k]:=a1[i]; w[k]:=a2[i]; id[k]:=a3[i];\n      inc(i); inc(k);\n    end\n    else\n    begin\n      s[k]:=b1[j]; w[k]:=b2[j]; id[k]:=b3[j];\n      inc(j); inc(k);\n    end;\n  end;\n  for p:=i to n do\n  begin\n    s[k]:=a1[i]; w[k]:=a1[i]; id[k]:=a3[i];\n    inc(i); inc(k);\n  end;\n  for p:=j to n do\n  begin\n    s[k]:=b1[j]; w[k]:=b2[j]; id[k]:=b3[j];\n    inc(j); inc(k);\n  end;\nend;\nbegin\n  readln(n,r,q);\n  for i:=1 to 2*n do\n    read(s[i]);\n  for i:=1 to 2*n do\n  begin\n    id[i]:=i;\n    read(w[i]);\n  end;\n  qsort(1,2*n);\n  for i:=1 to r do\n  begin\n    for j:=1 to n do\n    begin\n      if (w[j*2-1]>w[j*2]) then\n      begin\n        a1[j]:=s[j*2-1]+1;\n        a2[j]:=w[j*2-1];\n        a3[j]:=id[j*2-1];\n        b1[j]:=s[j*2];\n        b2[j]:=w[j*2];\n        b3[j]:=id[j*2];\n      end\n      else\n      begin\n        a1[j]:=s[j*2]+1;\n        a2[j]:=w[j*2];\n        a3[j]:=id[j*2];\n        b1[j]:=s[j*2-1];\n        b2[j]:=w[j*2-1];\n        b3[j]:=id[j*2-1];\n      end;\n    end;\n    Merge;\n  end;\n  writeln(id[q]);\nend.\n```",
        "postTime": 1503903132,
        "uid": 26494,
        "name": "in_blue_sky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u6b64\u9898\u6bd4\u8f83\u590d\u6742\uff0c\u4e3b\u8981\u8003\u5bdf\u6a21\u62df\u7b97\u6cd5\u548c\u6392\u5e8f\u7b97\u6cd5\u3002\n\n\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u8f6e\u90fd\u8fdb\u884c\u5feb\u6392\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u6bcf\u6b21\u53ea\u80fd\u8fdb\u884cO\uff08n\uff09\u7684\u6392\u5e8f\uff0c\u53ea\u8981\u8bb0\u5f55\u6bcf\u573a\u7684\u80dc\u8d1f\u53cc\u65b9\u5373\u53ef\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u5343\u4e07\u522b\u590d\u5236\uff0c\u5426\u5219\u4f1a\u68d5\u540d\u54d2\uff01\n\n\u5982\u679c\u6709\u540c\u5b66\u4e0d\u4f1a\u7528merge\u51fd\u6570\uff0c\u8bf7\u770b\u6b64\u4ee3\u7801\\_**  **\\_\u90e8\u5206\uff01\uff08**\u624b\u5199\uff01\uff01\uff01**\uff09\n\n\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int M=100003;\nstruct str{\n    int p;//\u5f97\u5206\n    int id;//\u7f16\u53f7\n    int num;//\u6392\u540d\n    int w;//\u80fd\u529b\u503c\n}a[M*2],win[M],lose[M],m[2*M];\nbool cmp(str j,str k){//\u6392\u540d\u751f\u6210\u6bd4\u8f83\u51fd\u6570\n    if(j.p==k.p) return j.id<k.id;\n    return j.p>k.p;\n}\nbool Cmp(str j,str k){//\u573a\u6b21\u53cc\u65b9\u6bd4\u8f83\u51fd\u6570\n    return j.w>k.w;\n}\nint n,r,q;//2*n\u4e3a\u9009\u624b\u6570\uff0cr\u4e3a\u6bd4\u8d5b\u573a\u6570\uff0cq\u4e3a\u8be2\u95ee\u540d\u6b21\u3002\nvoid solve(){\n    int R=r;\n    while(R--){\n        int now; now=0;\n        for(int i=1;i<=n;i++){//\u6a21\u62df\u7b2c(r-R+1)\u8f6e\u6bd4\u8d5b\n            int x=i+i-1,y=i+i; now++;\n            if(Cmp(m[x],m[y])) win[now]=m[x],lose[now]=m[y],win[now].p++;\n            else win[now]=m[y],lose[now]=m[x],win[now].p++;\n        }\n        int W,L,K;\n        W=L=1,K=0;\n        _**while(!(W>n||L>n))//\u751f\u6210\u6700\u65b0\u6392\u540d**_\n        _**if(cmp(win[W],lose[L])) m[++K]=win[W++];**_\n        _**else m[++K]=lose[L++];**_\n        _**while(W<=n) m[++K]=win[W++];**_\n        _**while(L<=n) m[++K]=lose[L++];**_\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&r,&q);\n    for(int i=1;i<=2*n;i++)\n        scanf(\"%d\",&a[i].p);\n    for(int i=1;i<=2*n;i++){\n        scanf(\"%d\",&a[i].w); a[i].id=i;\n    }\n    //\u6570\u636e\u8bfb\u5165\n    sort(a+1,a+1+n*2,cmp);//\u521d\u59cb\u503c\u6392\u5e8f\n    for(int i=1;i<=2*n;i++)\n        a[i].num=i,m[i]=a[i];\n    solve();\n    printf(\"%d\",m[q].id);\n    return 0;\n}\n\n```",
        "postTime": 1506528055,
        "uid": 24658,
        "name": "\u8d85\u7ea7\u5c0f\u5e06\u8239RP",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u770b\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u76f4\u63a5sort\u6392\u5e8f\u5c31\u5b8c\u4e8b\u4e86\uff0c\u8fd8\u5728\u60f3\u522b\u4eba\u4e3a\u4ec0\u4e48\u4e0d\u7528sort\u6392\u5e8f\uff0csort\u6392\u5e8f\u5f88\u5feb\uff0c\u7b11\u4ed6\u4eec\u7adf\u7136\u4e0d\u7528sort\u6392\u5e8f\uff0c\u8fd8\u7528\u4ec0\u4e48\u5f52\u5e76\u6392\u5e8f\uff0c\u5f53\u6211\u771f\u6b63\u505a\u4e86\u8fd9\u9053\u9898\u5e76\u63d0\u4ea4\u5b83\u7684\u65f6\u5019\uff0c\u6211\u624d\u610f\u8bc6\u5230\uff0c\u6211\u9519\u4e86\uff0csort\u6392\u5e8f\u53ea\u9002\u5408\u65e0\u5e8f\u5e8f\u5217\uff0c\u5f52\u5e76\u6392\u5e8f\u9002\u5408\u6709\u5e8f\u5e8f\u5217,\u5f53\u6211\u770b\u4e86\u4e0d\u5c11\u9898\u89e3\u4e4b\u540e\uff0c\u611f\u89c9\u5f52\u5e76\u6392\u5e8f\u4e5f\u4e0d\u662f\u5f88\u96be\uff0c\u5c31\u662f\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\uff0c\u5408\u5e76\u6210\u4e00\u4e2a\u5e8f\u5217\u3002\u4e0b\u9762\u662f\u6211\u81ea\u5df1\u603b\u7ed3\u8fc7\u540e\u5199\u51fa\u6765\u7684AC\u4ee3\u7801,\u91cd\u8981\u90e8\u5206\u5df2\u5728\u6587\u4e2d\u6807\u6ce8;\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nint n,k,q,s;\nstruct st{\n\tint num;//\u6bcf\u4e2a\u4eba\u7684\u7f16\u53f7\uff1b \n\tint grade;//\u5206\u6570\uff1b \n\tint shili;//\u5b9e\u529b\u503c\uff1b \n};\nst a[210000],b[105000],c[105000];//a\u6570\u7ec4\u4e3a\u603b\u5e8f\u5217\uff0cb\u6570\u7ec4\u4e3a\u80dc\u8005\u5e8f\u5217\uff0cc\u6570\u7ec4\u4e3a\u8d25\u8005\u5e8f\u5217; \nint read()//\u5feb\u8bfb \n{\n\tint x=0;\n\tchar s=getchar();\n\twhile(s>'9'||s<'0') s=getchar();\n\twhile(s<='9'&&s>='0') x=x*10+s-'0',s=getchar();\n\treturn x;\n}\nbool cmp(st a1,st a2)//\u81ea\u5b9a\u4e49\u51fd\u6570\u6392\u5e8f \n{\n\tif(a1.grade!=a2.grade) return a1.grade>a2.grade;\n\telse return a1.num<a2.num;\n}\nvoid work()//\u81ea\u5b9a\u4e49\u51fd\u6570,\u6bd4\u8f83\u6bcf\u6b21\u4e00\u6bd4\u8d5b\u7684\u80dc\u8d1f,\u5e76\u4f9d\u6b21\u5c06\u80dc\u8005\u8d1f\u8005\u5b58\u5165\u5bf9\u5e94\u6570\u7ec4\u5f53\u4e2d,\u518d\u5c062\u4e2a\u6570\u7ec4\u5408\u5e76\u4e3a\u540c\u4e00\u4e2a\u6570\u7ec4; \n{\n\tint lb=0,lc=0,la;//3\u4e2a\u6307\u9488\uff0clb\u4e3ab\u6570\u7ec4\u6307\u9488\uff0clc\u4e3ac\u6570\u7ec4\u6307\u9488\uff0cla\u4e3aa\u6570\u7ec4\u6307\u9488\uff1b \n\tfor(int i=1;i<n*2;i+=2)\n\t{\n\t\tif(a[i].shili>a[i+1].shili)\n\t\t{\n\t\t\ta[i].grade++;\n\t\t\tb[++lb]=a[i];\n\t\t\tc[++lc]=a[i+1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[i+1].grade++;\n\t\t\tb[++lb]=a[i+1];\n\t\t\tc[++lc]=a[i];\n\t\t}\n\t}\n\tlb=1,lc=1,la=1;\n\twhile(lb<=n&&lc<=n)\n\t{\n\t\tif(cmp(b[lb],c[lc])) a[la++]=b[lb++];\n\t\telse a[la++]=c[lc++];\n\t}\n\twhile(lb<=n) a[la++]=b[lb++];//\u6709\u53ef\u80fd\u67d0\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\u5df2\u7ecf\u8fc7\u754c\uff0c\u800c\u53e6\u4e00\u4e2a\u6570\u7ec4\u5374\u8fd8\u6ca1\u6709\u5b8c\u6210,\u76f4\u63a5\u5c06\u5b50\u6570\u7ec4\u5168\u90e8\u5b58\u5165\u4e3b\u6570\u7ec4\u5f53\u4e2d\uff0c\u4e3a\u4e0b\u4e00\u6b21\u6bd4\u8f83\u4f5c\u51c6\u5907; \n\twhile(lc<=n) a[la++]=c[lc++];\n}\nint main()\n{\n\tn=read(),k=read(),q=read();\n\tfor(int i=1;i<=n*2;i++) a[i].num=i,a[i].grade=read();\n\tfor(int i=1;i<=n*2;i++) a[i].shili=read();\n\tsort(a+1,a+n*2+1,cmp);//\u7b2c\u4e00\u6b21\u4e3a\u65e0\u5e8f\u5e8f\u5217\uff0c\u9700\u8981\u5c06\u6570\u7ec4\u6392\u597d\u5e8f\uff1b \n\tfor(int i=1;i<=k;i++) work();\n\tprintf(\"%d\",a[q].num);\n\treturn 0;\n}\n```\n",
        "postTime": 1566109494,
        "uid": 217868,
        "name": "\u51c9\u5dde\u8bcd",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "# P1309\u3010\u745e\u58eb\u8f6e\u3011\n# \u4e00\u3001\u601d\u8def\n#### \u6839\u636e\u9898\u4e2d\u6240\u7ed9\u7684\u56fe\u7247\u53ef\u77e5![P1309\u3010\u745e\u58eb\u8f6e\u3011](https://cdn.luogu.com.cn/upload/pic/98.png)\n#### 1. \u521a\u5f00\u59cb\uff0c\u7531\u521d\u59cb\u7684\u5206\u6570\u5f97\u5230\u4e00\u4e2a\u6392\u540d\uff0c\u5e76\u4ee5\u8fd9\u4e2a\u6392\u540d\u7684\u7b2c\u4e00\u3001\u4e8c\u540d\uff0c\u7b2c\u4e09\u3001\u56db\u540d\u3001\u2026\u2026\u3001\u76f4\u5230\u7b2c2n-1\u540d\u548c\u7b2c2n\u540d\uff0c\u8fdb\u884c\u80fd\u529b\u7684\u6bd4\u8f83\uff0c\u80fd\u529b\u5f3a\u7684\u5c31\u52a01\u5206\u3002\n#### 2. \u4e4b\u540e\uff0c\u6bcf\u4e00\u6b21\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u5c31\u6839\u636e\u4e0a\u6b21\u7684\u5206\u6570\u6392\u540d\uff0c\u5e76\u6839\u636e\u6392\u540d\u8fdb\u884c\u4e0b\u4e00\u8f6e\u6bd4\u8d5b\uff0c\u76f4\u5230\u6bd4\u8d5b\u7ed3\u675f\u3002\n# \u4e8c\u3001\u65b9\u6cd5\n#### \u6392\u5e8f\u7684\u65b9\u6cd5\u4e2d\uff0c\u6700\u5feb\u7684\u4e5f\u5c31\u662f\u5feb\u901f\u6392\u5e8f\u4e86\uff0c\u6b64\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u662fO(R\u00d7N\u00d7log(N)),\u6309\u7167\u9898\u76ee\u4e2d\u7684\u6570\u636e\u8303\u56f4\uff0c\u5373\u4e3a\n#### 50\u00d7100000\u00d7log(100000),\u7ea6\u7b49\u4e8e85000000\uff0c\u4f1a\u7206\uff0c\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u76ee\u9700\u8981\u53e6\u4e00\u4e2a\u6548\u7387\u9ad8\u7684\u7b97\u6cd5\u2014\u2014\n## \u5f52\u5e76\u6392\u5e8f\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3aO(R\u00d7N)\uff09\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint b,c,n,r,q,s[200001];//\u8fd9\u91cc\u53eaint s\u4e3b\u8981\u662f\u4e3a\u4e86ds\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5176\u4ed6\u7684\u90fd\u653e\u5230\u4e86main\u51fd\u6570\u91cc\nbool ds(int x,int y)\n{\n\tif(s[x]==s[y])//\u5982\u679c\u5206\u6570\u76f8\u7b49\n\t{\n\t\treturn x<y;//x\u548cy\u54ea\u4e2a\u5927\n\t}\n\treturn s[x]>s[y];//x\u548cy\u7684\u5206\u6570\u54ea\u4e2a\u5927\n}\n/*bool ds(int x,int y)\n{\n    if(s[x]==s[y])\n    {\n        if(x<y)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    else\n    {\n        if(s[x]>s[y])\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n}*/\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&r,&q);//\u8f93\u5165\n\tint a[2*n+1],x[n+1],y[n+1],w[2*n+1];//\u56e0\u4e3a\u8fd9\u4e9b\u53d8\u91cf\u4e0e\u51fd\u6570\u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636en\u7684\u5927\u5c0f\u800c\u8bbe\u8ba1\u3002\n    //\u5176\u4e2dx\u4ee3\u8868\u8d62\u4e86\u7684\u4eba\u7684\u53f7\u7801\uff0cy\u4ee3\u8868\u8f93\u4e86\u7684\u4eba\u7684\u53f7\u7801,\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u5f52\u5e76\u6392\u5e8f\n\tn*=2;//n=n*2\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=i;//\u5199\u597d\u6392\u540d\u7684\u6570\u636e\n\t\tscanf(\"%d\",&s[i]);//\u8f93\u5165\u521d\u59cb\u5f97\u5206\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&w[i]);//\u8f93\u5165\u80fd\u529b\u7684\u5927\u5c0f\n\t}\n\tsort(a+1,a+(n+1),ds);//\u7b2c\u4e00\u6b21\u6392\u5e8f\n\tfor(int i=1;i<=r;i++)//\u6bcf\u6b21\u6bd4\u8d5b\n\t{\n\t\tb=0;//b\u4ee3\u8868\u73b0\u5728\u7684\u5c40\u6570\n\t\tfor(int j=1;j<=n;j+=2)//\u6bcf\u5c40\n\t\t{\n\t\t\tif(w[a[j]]>w[a[j+1]])//j\u8d62\n\t\t\t{\n\t\t\t\ts[a[j]]++;\n\t\t\t\tx[++b]=a[j];//j\u8d62\n\t\t\t\ty[b]=a[j+1];//j+1\u8f93\n\t\t\t}\n\t\t\telse//j+1\u8d62\n\t\t\t{\n\t\t\t\ts[a[j+1]]++;\n\t\t\t\tx[++b]=a[j+1];//j+1\u8d62\n\t\t\t\ty[b]=a[j];//j\u8f93\n\t\t\t}\n\t\t}\n\t\tint l=1,j=1,k=1;//\u5f52\u5e76\u6392\u5e8f(\u56e0\u4e3a\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u6570\u5217\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u9012\u5f52)\n\t\twhile(l<=b && j<=b)//\u4e3b\u4f53\n\t\t{\n\t\t\tif(ds(x[l],y[j]))//\u6bd4\u8f83\n\t\t\t{\n\t\t\t\ta[k++]=x[l++];//\u5e76\u5165a\u6570\u7ec4\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[k++]=y[j++];//\u5e76\u5165a\u6570\u7ec4\n\t\t\t}\n\t\t}\n\t\twhile(l<=b)//\u5269\u4f59\u7684\u6570\n\t\t{\n\t\t\ta[k++]=x[l++];//\u5e76\u5165a\u6570\u7ec4\n\t\t}\n\t\twhile(j<=b)//\u5269\u4f59\u7684\u6570\n\t\t{\n\t\t\ta[k++]=y[j++];//\u5e76\u5165a\u6570\u7ec4\n\t\t}\n\t}\n\tprintf(\"%d\",a[q]);//\u8f93\u51fa\u6392\u540d\n\treturn 0;\n}\n```\n",
        "postTime": 1553399339,
        "uid": 158593,
        "name": "\u590f\u5b50\u6c50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u4e0d\u5f97\u4e0d\u8bf4\u6570\u636e\u597d\u6c34\n\n\u6211\u4ee3\u7801\u4e00\u4e2a\u5faa\u73af\u9519\u4e86\uff0c\u7adf\u7136\u8fd8\u670990\u2026\u2026\n\n\u601d\u8def\uff1a\u66b4\u529b+\u5f52\u5e76\n\n\u7528\u7ed3\u6784\u4f53\u5c06\u4eba\u5b58\u8d77\u6765\n\n\u6bcf\u4e00\u6b21\u4e24\u4e24\u6bd4\u8f83\uff0c\u8d62\u7684\u653e\u5728\u4e00\u4e2a\u6570\u7ec4\uff0c\u8f93\u7684\u653e\u5728\u53e6\u4e00\u4e2a\u6570\u7ec4\n\n\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u6709\u5e8f\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e24\u6570\u7ec4\u524d\u9762\u7684\u6392\u540d\u5728\u540e\u9762\u4e4b\u524d\n\n\u6240\u4ee5\u53ea\u8981\u6bd4\u8f83\u4ece\u4e24\u6570\u7ec4\u5f00\u5934\u5f00\u59cb\u6bd4\u5c31\u53ef\u4ee5\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\n\n\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u5b58\uff0c\u4e24\u6570\u7ec4\u5f00\u5934\u6bd4\u8f83\uff0c\u6392\u540d\u9760\u524d\u7684\u653e\u8fdb\u53bb\uff0c\u6b64\u6570\u7ec4\u5f00\u5934\u5411\u540e\u79fb\n\n\u6211\u6ca1\u6709\u4f18\u5316\uff0c\u76f4\u63a5\u66b4\u529b\uff0c\u5927\u6982\u51e0\u767ems\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing std::sort;\nstruct ab{\n    int n,k,t;\n};\nab a[200050];\nab b[100050],c[100050];\nab f[200050];\nint n,m,l;\nint read()\n{\n    int x=0;\n    char c=getchar();\n    while(c>'9'||c<'0') c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return x;\n}\nbool cmp(ab x,ab y)\n{\n    if(x.t!=y.t) return x.t>y.t;\n    return x.n<y.n;\n}\nvoid work()\n{\n    for(int i=1;i<=n;i++)\n    if(a[2*i-1].k>a[2*i].k)\n    {a[2*i-1].t++,b[i]=a[2*i-1],c[i]=a[2*i];\n        }\n    else\n    {a[2*i].t++,b[i]=a[2*i],c[i]=a[2*i-1];\n        }\n    int i=1,j=1,k=1;\n    while(i<=n&&j<=n)\n    if(cmp(b[i],c[j]))\n    f[k]=b[i],k++,i++;\n    else\n    f[k]=c[j],k++,j++;\n    while(i<=n)\n    f[k]=b[i],k++,i++;\n    while(j<=n)\n    f[k]=c[j],k++,j++;\n    for(int i=1;i<=2*n;i++)\n    a[i]=f[i];\n    return;\n}\nint main()\n{\n    n=read(),m=read(),l=read();\n    for(int i=1;i<=2*n;i++)\n    a[i].n=i,a[i].t=read();\n    for(int i=1;i<=2*n;i++)\n    a[i].k=read();\n    sort(a+1,a+1+2*n,cmp);\n    for(int i=0;i<m;i++)\n    work();\n    printf(\"%d\",a[l].n);\n    return 0;\n}\n```",
        "postTime": 1510838855,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u6734\u7d20\u89e3\u6cd5\uff1a\n\n\u6bcf\u4e00\u6b21\u90fd\u8fdb\u884c\u666e\u901a\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u8fdb\u884c\u6bd4\u8d5b\uff0c\u52a0\u5206\u3002\n\n\u7f3a\u9677\uff1a\n\n\u4e00\u5b9a\u8d85\u65f6\uff01\n\n\u4e2d\u725b\u89e3\u6cd5\uff1a\n\n\u6bcf\u4e00\u6b21\u90fd\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u8fdb\u884c\u6bd4\u8d5b\uff0c\u52a0\u5206\u3002\n\n\u7f3a\u9677\uff1a\n\n\u516d\u5341\u5206\uff01\n\n\uff08\u5feb\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08nlog2n\uff09\uff0c\u8981\u505a1.5\u4ebf\u6b21\u5faa\u73af\uff0c\u6240\u4ee5\u4f1a\u8d85\u65f6\uff09\n\n\u5927\u7287\u89e3\u6cd5\uff1a\n\n\u6bcf\u4e00\u6b21\u90fd\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u8fdb\u884c\u6bd4\u8d5b\uff0c\u52a0\u5206\u3002\n\n\u7f3a\u9677\uff1a\n\n\u65e0\uff01\n\n\u5927\u7287\u89e3\u6cd5\u5206\u6790\uff1a\n\n\u7b2c\u4e00\u6b21\u8f93\u5165\u7528sort\u6392\u4e00\u6b21\n\n\u7136\u540e\u5faa\u73af\n\n\u6bcf\u6b21\u5faa\u73af\u5185\u8ba9\u4e00\u548c\u4e8c\u6bd4\uff0c\u4e09\u4e0e\u56db\u6bd4~~~~\n\n\u8d62\u5f97\u5230a\u6570\u7ec4\n\n\u8f93\u7684\u5230b\u6570\u7ec4\n\n\u7531\u4e8e\u672c\u6765\u6570\u5217\u6709\u5e8f\n\na\u4e0eb\u6570\u7ec4\u4e5f\u90fd\u6709\u5e8f\n\n\u6240\u4ee5\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08m+n\uff09\n\n\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n```cpp\n#include<bits/stdc++.h>//\u5934\u6587\u4ef6\nusing namespace std;\nstruct player//\u7ed3\u6784\u4f53\uff1a\u8fd0\u52a8\u5458\n{\n    int h,g,p; \n};\nplayer m[200010],x[200010],y[200010]; \nint n,r,q,i2=0,j2=0;\nvoid merge()  //\u5c0f\u5b66\u751f\u7248\u5408\u5e76\u6392\u5e8f\n{\n    int i=1,j=1,s=1;\n    while(s<=2*n)\n    {\n        if(i>n)\n        {\n            for(;j<=n;++j)\n            {\n                m[s++]=y[j];\n            }\n            break;\n        }\n        if(j>n)\n        {\n            for(;i<=n;++i)\n            {\n                m[s++]=y[i];\n            }\n            break;\n        }\n        if(x[i].g>y[j].g||x[i].g==y[j].g&&x[i].h<y[j].h)\n        {\n            m[s++]=x[i++];\n        }\n        else m[s++]=y[j++];\n    }\n}\nbool cmp(player &a,player &b)//sort\u51fd\u6570\u6240\u7528\u7684cmp\u51fd\u6570\n{\n    if(a.g>b.g)return 1;\n    if(a.g==b.g&&a.h<b.h)return 1;\n    return 0;\n}\nint main()\n{\n    cin>>n>>r>>q;//\u8f93\u5165\n    for(int i=1;i<=2*n;++i)\n    {\n        cin>>m[i].g;//\u8f93\u5165\n        m[i].h=i;\n    }\n    for(int i=1;i<=2*n;++i)cin>>m[i].p;\n    sort(m+1,m+2*n+1,cmp);\n    for(int i=1;i<=r;++i)\n    {\n        i2=j2=0;\n        for(int j=1;j<=n;++j)\n        {\n            if(m[2*j-1].p>m[2*j].p)\n            {\n                m[2*j-1].g++;\n                x[++i2]=m[2*j-1];\n                y[++j2]=m[2*j];\n            }\n            else  \n            {\n                m[2*j].g++;\n                x[++i2]=m[2*j];\n                y[++j2]=m[2*j-1];\n            }\n        }\n        merge();//\u5408\u5e76\u6392\u5e8f\n\t}//\u7ee7\u7eed\u6392\u5e8f\n    cout<<m[q].h;//\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1536317942,
        "uid": 61015,
        "name": "\u7389\u73af\u5c0f\u59d0\u59d0",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u672c\u9898\u505a\u7684\u65f6\u5019\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5e94\u8be5\u5c31\u662f\u5feb\u6392\uff0c\u7136\u540e\u518d\u628a\u6bcf\u4e00\u573a\u505a\u4e00\u904d\n\u6bcf\u505a\u4e00\u904d\u5c31\u5feb\u6392\u4e00\u6b21\uff0c\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ao\uff08n^2\uff09\u591a\uff0c\u8d85\u65f6\u3002\n\u6240\u4ee5\u4e00\u5f00\u59cb\u7528\u4e00\u6b21\u5feb\u6392\uff0c\u7136\u540e\u518d\u5728\u5faa\u73af\u91cc\u4f18\u5316\uff0c\n\u6240\u4ee5\u601d\u60f3\u7528*\u5f52\u5e76\u6392\u5e8f*\n\u5bf9\u5f52\u5e76\uff0c\u5927\u5bb6\u53ef\u80fd\u5370\u8c61\u4e0d\u6df1(\u6211\u5370\u8c61\u4e5f\u4e0d\u6df1\uff09\n\n\u6837\u4f8b\u89e3\u91ca\n\n\u7b2c\u4e00\u8f6e\u6392\u5e8f\u540e\u7ed3\u679c\n\n  \u5e8f\u53f7     1    4    2    3\n  \n  \u5f97\u5206     7    7    6    6\n  \n  \u5b9e\u529b\u503c   10   15   5    20\n  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u7b2c\u4e00\u8f6e\u6bd4\u8d5b\u540e\u7ed3\u679c\n\n  \u5e8f\u53f7     1    4    2    3\n  \n  \u5f97\u5206     7    8    6    7\n  \n  \u5b9e\u529b\u503c   10   15   5    20\n  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n  \u3000      \n\u7b2c\u4e00\u8f6e\u6bd4\u8d5b\u540e\u8fdb\u884c\u5404\u7ec4\u5f52\u5e76\n\n  \u5e8f\u53f7     1    4    |    3    2\n  \n  \u5f97\u5206     8    7    |    7    6\u3000\u3000\u30001\u30014\u5f52\u5e76\uff0c3\u30012\u5f52\u5e76\n  \n  \u5b9e\u529b\u503c   15   10   |    20   5\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u7b2c\u4e8c\u8f6e\u6bd4\u8d5b\u540e\u8fdb\u884c\u5404\u7ec4\u5f52\u5e76\n\n  \u5e8f\u53f7     4    1     |    3    2\n  \n  \u5f97\u5206     9    7     |    8    6\u3000\u3000\u30004\u30011\u5f52\u5e76\uff0c3\u30012\u5f52\u5e76\n  \n  \u5b9e\u529b\u503c   15   10    |    20   5\n  \n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n  \u5e8f\u53f7     4    3     |    1    2\n  \n  \u5f97\u5206     9    8     |    7    6\u3000\u3000\u3000\u56db\u4e2a\u6570\u5f52\u5e76\n  \n  \u5b9e\u529b\u503c   15   20    |    10   5\n  \n\n\u7b2c\u4e09\u8f6e\u6bd4\u8d5b\u7ed3\u679c\n\n  \u5e8f\u53f7     4    3    1    2\n  \n  \u5f97\u5206     9    8    7    6\u3000\u3000\u3000\n  \n  \u5b9e\u529b\u503c   15   20   10   5\n\n\u672c\u4eba\u4e0d\u4f1a\u5199C++\uff0c\u53ea\u5199\u4e86pascal\u4ee3\u7801\n```pascal\nvar n,m,r,i,j,t,i1,w:longint;\na,b,c,x,y,f1,f2,c1,c2:array[1..200000]of longint;\nprocedure sort(l,r: longint);\nvar i,j,x,y,y1: longint;\nbegin\ni:=l;j:=r;\nx:=a[(l+r) div 2];\ny1:=b[(l+r) div 2];\nrepeat \nwhile (a[i]>x)or(x=a[i])and(b[i]<y1) do inc(i);\nwhile (x>a[j])or(x=a[j])and(y1<b[j]) do dec(j);\n  if not(i>j) then \n    begin\n    y:=a[i];a[i]:=a[j];a[j]:=y;\n    y:=b[i];b[i]:=b[j];b[j]:=y;\n    y:=c[i];c[i]:=c[j];c[j]:=y;\n    inc(i);j:=j-1;\n    end;\nuntil i>j;\nif l<j then sort(l,j);\nif i<r then sort(i,r);\nend;\nbegin\nreadln(n,m,r);\nfor i:=1 to 2*n do //\u521d\u59cb\u5316\uff0c\u8f93\u5165\uff0c\u4e0d\u89e3\u91ca\n  begin\n  read(a[i]);\n  b[i]:=i;\n  end;\nfor i:=1 to 2*n do\n  read(c[i]);\nsort(1,n*2);//\u53cc\u5173\u952e\u5b57\u5feb\u6392\nfor i1:=1 to m do\n  begin\n  for j:=1 to n do\u3000//\u672c\u8f6e\u6bd4\u8d5b\u5206\u6570\u7ed3\u7b97\n    if c[j*2-1]>c[j*2] then\n      begin\n      inc(a[j*2-1]);x[j]:=a[j*2-1];y[j]:=a[j*2];\n      f1[j]:=b[j*2-1];f2[j]:=b[j*2];\n      c1[j]:=c[j*2-1];c2[j]:=c[j*2];\n      end\n    else \u3000\u3000//x,y\u4e3a\u5f52\u5e76\u65f6\u5206\u6570\u6570\u7ec4f1,f2\u4e3a\u6807\u8bb0\u6570\u7ec4c1,c2\u4e3a\u5b9e\u529b\u503c\u6570\u7ec4\n      begin\n      inc(a[j*2]);y[j]:=a[j*2-1];x[j]:=a[j*2];\n      f1[j]:=b[j*2];f2[j]:=b[j*2-1];\n      c1[j]:=c[j*2];c2[j]:=c[j*2-1]; \n      end;\n  t:=1;\n  w:=1;\n  i:=1;\n  while not((t>n)and(w>n)) do//\u5f52\u5e76\u6392\u5e8f\n    begin\n    while (not((x[t]>y[w])or((x[t]=y[w])and(f1[t]<f2[w]))))and(w<=n) do//\u672c\u8f6e\u6210\u7ee9\u91cd\u65b0\u5b58\u50a8\u5230//a,b,c\u4e2d\u4f9b\u4e0b\u4e00\u8f6e\u4f7f\u7528\u3000\n      begin\n      a[i]:=y[w];b[i]:=f2[w];c[i]:=c2[w];\n      w:=w+1;i:=i+1;\n      end;\n\u3000\u3000// t,w\u4e3ax,y\u6570\u7ec4\u7684\u4e0b\u6807\u3000i\u4e3aa,b,c\u6570\u7ec4\u7684\u4e0b\u6807\n    a[i]:=x[t];b[i]:=f1[t];c[i]:=c1[t];\n    i:=i+1;\n    t:=t+1;\n    while (t<=n)and(w>n)do //\u5b58\u50a8\u5269\u4f59\u7684\u6570\u636e\n      begin \n      a[i]:=x[t];b[i]:=f1[t];c[i]:=c1[t];\n      t:=t+1;i:=i+1;\n      end;\n    while (t>n)and(w<=n)do// \u5b58\u50a8\u5269\u4f59\u7684\u6570\u636e\n      begin \n      a[i]:=y[w];b[i]:=f2[w];c[i]:=c2[w];\n      w:=w+1;i:=i+1;\n      end;\n    end;\n  end;\nwriteln(b[r]);//\u8f93\u51fa\nend.\n\n```\n",
        "postTime": 1534678467,
        "uid": 119685,
        "name": "Kevin_Wa",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u5927\u4f6c\u8bf4\u4e86\u592a\u591a\uff0c\u6211\u4e0d\u518d\u590d\u8ff0\u4e86\u3002 \u7b2c\u4e00\u6b21\u7528sort\uff0c\u540e\u9762\u6bcf\u6b21\u6a21\u62df\u52a0\u5206\u3002 \u7136\u540e\u7528\u5f52\u5e76\u6392\u5e8f------\u65f6\u95f4\u590d\u6742\u5ea6O(N*log2 N) sort\u4f1a\u9000\u5316\u5230O(N^2)//heap_sort\u540c\u6837 \u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u9700\u8981O2\u4f18\u5316 \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nvoid read(int &x){//\u8bfb\u5165\u4f18\u5316\n\tchar c=getchar();\n\tint k=1;\n\twhile(c<'0'||c>'9') {if(c=='-') k=-1;c=getchar();}\n\tfor(x=0;c>='0'&&c<='9';c=getchar())\n\tx=x*10+c-'0';\n\tx*=k;\n}\nstruct xx{//\u5b9a\u4e49\u7ed3\u6784\u4f53\n\tint fen,name,shi;\n};\nint n,r,q;\nxx b[200005];\nbool cmp(const xx &x,const xx &y){\n\tif(x.fen!=y.fen)return x.fen>y.fen;\n\treturn x.name<y.name;//\u7279\u5224\uff0c\u7f16\u53f7\u5c0f\u7684\u5728\u5148\n}\nint main(){\n\tread(n);read(r);read(q);\n\tfor(int i=1;i<=2*n;++i){\n\t\tread(b[i].fen);\n\t\tb[i].name=i;\n\t}\n\tfor(int i=1;i<=2*n;++i){\n\t\tread(b[i].shi);\n\t}\n\tsort(b+1,b+2*n+1,cmp);//\u7b2c\u4e00\u8f6e\u6570\u636e\u968f\u673a\uff0c\u53ef\u7528sort\n\tfor(int i=1;i<=r;i++){\n\t\tfor(int j=1;j<=2*n;j+=2){\n\t\t\tif(b[j].shi>b[j+1].shi) b[j].fen++;\n               \t\telse if(b[j].shi!=b[j+1].shi) b[j+1].fen++;//\u4ee5\u4e0a\u6a21\u62df\u52a0\u5206\n\t\t}\n\t\tstable_sort(b+1,b+2*n+1,cmp);//\u5f52\u5e76\u6392\u5e8f\n\t}\n\tprintf(\"%d\",b[q].name);//\u6109\u5feb\u7684\u8f93\u51fa\u7ed3\u679c\n\treturn 0;\n}\n\n\n```\n\u6ce8\uff1asort\u53ea\u670960\u5206",
        "postTime": 1571149107,
        "uid": 226523,
        "name": "RAYMOND_7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "//\u7528\u4ec0\u4e48\u6392\u5e8f\uff0c\u4e3a\u4ec0\u4e48\u7528\u5b83\uff0c\u4e0b\u9762\u8bb8\u591a\u4eba\u5df2\u7ecf\u8bb2\u6e05\u695a\u4e86\uff0c\u73b0\u5728\u8bb2\u4e00\u8bb2\u5408\u5e76\u51fd\u6570 merge()\n\n//merge\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff1a\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u3002\n\n//\u51fd\u6570\u53c2\u6570\uff1amerge(first1,last1,first2,last2,result,compare);\n\n//firs1t\u4e3a\u7b2c\u4e00\u4e2a\u5bb9\u5668\u7684\u9996\u8fed\u4ee3\u5668\uff0clast1\u4e3a\u7b2c\u4e00\u4e2a\u5bb9\u5668\u7684\u672b\u8fed\u4ee3\u5668\n\n//first2\u4e3a\u7b2c\u4e8c\u4e2a\u5bb9\u5668\u7684\u9996\u8fed\u4ee3\u5668\uff0clast2\u4e3a\u5bb9\u5668\u7684\u672b\u8fed\u4ee3\u5668\uff0c\n\n//result\u4e3a\u5b58\u653e\u7ed3\u679c\u7684\u5bb9\u5668\uff0ccomapre\u4e3a\u6bd4\u8f83\u51fd\u6570\uff08\u53ef\u7565\u5199\uff0c\u9ed8\u8ba4\u4e3a\u5408\u5e76\u4e3a\u4e00\u4e2a\u5347\u5e8f\u5e8f\u5217\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>//merge\u5934\u6587\u4ef6 \n#include<cstdio>\nusing namespace std;\nstruct A\n{\n    int s,p,k;\n}a[200005],w[200001],l[200001];\nbool cmp(A x,A y)\n{\n    if(x.s!=y.s) return x.s>y.s;\n    else return x.k<y.k;\n}\nint n,r,q;\nint main()\n{\n    scanf(\"%d%d%d\",&n,&r,&q);\n    for(int i=1;i<=2*n;i++)\n        scanf(\"%d\",&a[i].s),a[i].k=i;\n    for(int i=1;i<=2*n;i++)\n        scanf(\"%d\",&a[i].p);\n    sort(a+1,a+2*n+1,cmp);//\u4e00\u6b21\u5feb\u6392\u5c31\u597d\u4e86 \uff0c\u7528\u591a\u8d85\u65f6\uff08\u6211\u8fd8\u66fe\u60f3\u8fc7\u8bfb\u5165\u4f18\u5316\uff0c\u7ed3\u679c\u7167\u6837TLE\uff0c\u6d6a\u8d39\u4e86\u6211\u5341\u51e0\u5206\u949f\u3002\u3002\uff09 \n    for(int i=1;i<=r;i++)\n    {\n        int lose=0,win=0;\n        for(int j=1;j<=2*n;j=j+2)\n        {\n            if(a[j].p>a[j+1].p) w[++win]=a[j],l[++lose]=a[j+1],w[win].s++;\n            else l[++lose]=a[j],w[++win]=a[j+1],w[win].s++;//\u8fd9\u91cc\u628a\u4e00\u4e2a\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\uff0c\u4ee5\u4fbf\u4e8e\u5f52\u5e76\uff1b \n        }\n        merge(w+1,w+1+win,l+1,l+1+lose,a+1,cmp);//\u91cd\u70b9\uff01\uff01\uff01\u7528\u6cd5\u89c1\u4e0a\uff1b \n    }\n    cout<<a[q].k;//\u4e0a\u9762scanf\uff0c\u4e0b\u9762cout\u81ea\u5df1\u90fd\u611f\u89c9\u5947\u602a\u3002\u3002 \n    return 0;\n}\n//\u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u76ee\u5c31\u4e0d\u96be\u5566 \n\n```",
        "postTime": 1506158608,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u3010\u7b97\u6cd5\u5206\u67901\u3011\n\n\u9996\u5148\u6700\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u4e2a\u7b97\u6cd5\u662f\uff0c\u76f4\u63a5\u6309\u7167\u7a0b\u5e8f\u610f\u601d\u6bcf\u6b21\u6bd4\u8d5b\u540e\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u8f93\u51fa\u6392\u540d\u4e3aq\u7684\u4eba\u7684\u7f16\u53f7\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(2nlog(2n)r)\uff0c\u9884\u8ba1\u5f97\u520650\u5206\u3002\n\n\u3010\u53c2\u8003\u7a0b\u5e8f1\u3011\n\n```cpp\ntype\n  sss=array[1..3]of longint; //1\u8868\u793a\u7f16\u53f7\uff0c2\u8868\u793a\u5b9e\u529b\u503c\uff0c3\u8868\u793a\u5f53\u524d\u5206\u6570\nvar\n  n,r,q,i,j:longint;\n  a:array[0..200001]of sss; //\u8981\u5b9a\u4e492*n\nprocedure qsort(l,r:longint);\nvar\n  i,j,mid1,mid3:longint;\nbegin\n  i:=l; j:=r; mid3:=a[(l+r) shr 1,3]; mid1:=a[(l+r) shr 1,1];\n  repeat\n    while (a[i,3]>mid3) or (a[i,3]=mid3) and (a[i,1]<mid1) do inc(i);\nwhile (a[j,3]<mid3) or (a[j,3]=mid3) and (a[j,1]>mid1) do dec(j);\n//\u5148\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\uff0c\u5982\u679c\u5206\u6570\u76f8\u7b49\uff0c\u5219\u6309\u7167\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\n    if i<=j then \n      begin\n        a[0]:=a[i]; a[i]:=a[j]; a[j]:=a[0];\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nbegin\n  {assign(input, 'swiss.in');\n  reset(input);\n  assign(output, 'swiss.out');\n  rewrite(output);}\n  readln(n,r,q);\n  for i:=1 to 2*n do a[i,1]:=i;\n  for i:=1 to 2*n do read(a[i,3]); readln;\n  for i:=1 to 2*n do read(a[i,2]); readln;\n  qsort(1,2*n); //\u6700\u5f00\u59cb\u6bd4\u8d5b\u4e4b\u524d\u4e5f\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u5feb\u6392\n  for i:=1 to r do \n    begin\n      for j:=1 to n do \n        if a[2*j-1,2]>a[2*j,2] then inc(a[2*j-1,3])\n          else inc(a[2*j,3]); //\u8fdb\u884cN\u8f6e\u6bd4\u8d5b\n      qsort(1,2*n);\n    end;\n  write(a[q,1]); //\u8f93\u51fa\u6392\u540d\u4e3aQ\u7684\u9009\u624b\u7684\u7f16\u53f7\n {close(input);\n  close(output);}\nend.\n```\n\u3010\u7b97\u6cd5\u5206\u67902\u3011\n\u63a5\u4e0b\u6765\u89c2\u5bdf\uff0c\u53d1\u73b0\u6bcf\u6b21\u8d62\u7684N\u4e2a\u4eba\u7684\u5206\u6570\u90fd\u52a0\u4e86\u4e00\uff0c\u4fdd\u6301\u6709\u5e8f\uff1b\u8f93\u7684\u4eba\u7684\u5206\u6570\u90fd\u6ca1\u52a0\uff0c\u8fd8\u662f\u4fdd\u6301\u6709\u5e8f\u3002\u8fd9\u4f1a\u8ba9\u6211\u4eec\u60f3\u5230\u5f52\u5e76\u6392\u5e8f\u2014\u2014\u5bf9\u4e24\u4e2a\u6709\u5e8f\u8868\u8fdb\u884c\u5408\u5e76\u3002\u90a3\u4e48\u6211\u4eec\u6392\u5e8f\u53ef\u4ee5\u76f4\u63a5\u628a\u8f93\u7684\u4eba\u548c\u8d62\u7684\u4eba\u7684\u5e8f\u5217\u8fdb\u884c\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230O(2nr)\u3002\u5b9e\u9645\u5f97\u5206100\u5206\u3002\n\n\u3010\u53c2\u8003\u7a0b\u5e8f2\u3011\n\n```cpp\ntype\n  sss=array[1..3]of longint; //1\u8868\u793a\u7f16\u53f7\uff0c2\u8868\u793a\u5b9e\u529b\u503c\uff0c3\u8868\u793a\u5f53\u524d\u5206\u6570\nvar\n  n,r,q,i,j:longint;\n  win,out:array[0..100001]of sss; //Win\u8868\u793a\u8d62\u7684\u4eba\uff0cOut\u8868\u793a\u8f93\u7684\u4eba\n  a:array[0..200001]of sss; //\u8981\u5b9a\u4e492*n\nprocedure merge; //\u5bf9Win\u548cOut\u8fdb\u884c\u5408\u5e76\nvar\n  i,j,k:longint;\nbegin\n  i:=1; j:=1; k:=1;\n  while (i<=n) and (j<=n) do \n    begin\n      if (win[i,3]>out[j,3]) or \n(win[i,3]=out[j,3]) and (win[i,1]<out[j,1]) then \n//\u5148\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\uff0c\u5982\u679c\u5206\u6570\u76f8\u7b49\uff0c\u5219\u6309\u7167\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\n        begin a[k]:=win[i]; inc(i); inc(k); end\n      else\n        begin a[k]:=out[j]; inc(j); inc(k); end;\n    end;\n  while i<=n do \n    begin a[k]:=win[i]; inc(i); inc(k); end;\n  while j<=n do \n    begin a[k]:=out[j]; inc(j); inc(k); end;\nend;\nprocedure qsort(l,r:longint);\nvar\n  i,j,mid1,mid3:longint;\nbegin\n  i:=l; j:=r; mid3:=a[(l+r) shr 1,3]; mid1:=a[(l+r) shr 1,1];\n  repeat\n    while (a[i,3]>mid3) or (a[i,3]=mid3) and (a[i,1]<mid1) do inc(i);\nwhile (a[j,3]<mid3) or (a[j,3]=mid3) and (a[j,1]>mid1) do dec(j);\n//\u5148\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\uff0c\u5982\u679c\u5206\u6570\u76f8\u7b49\uff0c\u5219\u6309\u7167\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\n    if i<=j then \n      begin\n        a[0]:=a[i]; a[i]:=a[j]; a[j]:=a[0];\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nbegin\n { assign(input, 'swiss.in');\n  reset(input);\n  assign(output, 'swiss.out');\n  rewrite(output);}\n  readln(n,r,q);\n  for i:=1 to 2*n do a[i,1]:=i;\n  for i:=1 to 2*n do read(a[i,3]); readln;\n  for i:=1 to 2*n do read(a[i,2]); readln;\n  qsort(1,2*n);\n  for i:=1 to r do \n    begin\n      for j:=1 to n do \n        if a[2*j-1,2]>a[2*j,2] then \n          begin\n            inc(a[2*j-1,3]);\n            win[j]:=a[2*j-1]; out[j]:=a[2*j]; //\u5206\u522b\u8bb0\u5f55\u4e0b\u8d62\u7684\u548c\u8f93\u7684\n          end\n        else\n          begin\n            inc(a[2*j,3]);\n            win[j]:=a[2*j]; out[j]:=a[2*j-1];\n          end;\n      merge;  //\u76f4\u63a5\u5f52\u5e76\u5373\u53ef\n    end;\n  write(a[q,1]); //\u8f93\u51fa\u6392\u540d\u4e3aQ\u7684\u4eba\u7684\u7f16\u53f7\n { close(input);\n  close(output);}\nend.\n\n```",
        "postTime": 1509175635,
        "uid": 41091,
        "name": "yyyyyyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "# [\u745e\u58eb\u8f6e](https://www.luogu.org/problemnew/show/P1309) \n---\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6a21\u62df\u9898\u3002\n\u6211\u4eec\u5148\u628a\u8f93\u5165\u8bfb\u8fdb\u6765\u3002\n```\n/*\u5168\u5c40\u53d8\u91cf*/\nstruct person{\n\tint score;//\u521d\u59cb\u5206\u6570 \n\tint number;//\u5b9e\u529b\u503c \n\tint id;//\u7f16\u53f7 \n}a[200002];\nint n,r,q;//\u5982\u9898\u610f\u6240\u793a\n\n/*cmp\u51fd\u6570*/\nbool cmp(person a,person b)\n{\n\tif(a.score<b.score)return 0;//\u6309\u7167\u603b\u5206\u4ece\u9ad8\u5230\u4f4e\u5bf9\u9009\u624b\u8fdb\u884c\u4e00\u6b21\u6392\u540d\n\tif(a.score==b.score&&a.id>b.id)return 0;//\u603b\u5206\u76f8\u540c\u7684\uff0c\u7ea6\u5b9a\u7f16\u53f7\u8f83\u5c0f\u7684\u9009\u624b\u6392\u540d\u9760\u524d\n    /*\u6309\u9898\u610f\u6253*/\n\treturn 1;\n}\n\n/*\u8f93\u5165*/\nvoid _init_()\n{\n\tcin>>n>>r>>q;//\u8bfb\u5165\u6309\u9898\u610f\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].score;//\u8bfb\u5165\u6309\u9898\u610f\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].number;//\u8bfb\u5165\u6309\u9898\u610f\n\tfor(int i=1;i<=2*n;i++)a[i].id=i;//\u521d\u59cb\u5316\u7f16\u53f7\n\tsort(a+1,a+2*n+1,cmp);//\u4e3a\u4ec0\u4e48\u8981\u6392\u5e8f\u5462\uff0c\u8bf7\u770b\u4e0b\u6587\n}\n```\n#### \u4e3a\u4ec0\u4e48\u8981\u6392\u5e8f\u5462\uff1f\u662f\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u8fc7\u8981*\u6392\u5e8f*\u7684\u5566\uff0c\u7136\u540e\u7b2c\u4e00\u540d\u4e0e\u7b2c\u4e8c\u540d\u6bd4\u8d5b......\u4ee5\u6b64\u7c7b\u63a8\u3002\n## \u6211\u4eec\u7528\u7684\u6392\u5e8f\uff0c\u5f53\u7136\u4e0d\u7528\u957f\u7bc7\u5927\u8bba\uff0c\u53ea\u8981\u6253\u4e2a\u5934\u6587\u4ef6`algorithm`(\u6211\u6709\u65f6\u90fd\u53ea\u6253\u4e07\u80fd\u5934\u6587\u4ef6)\n\u54b3\u54b3\u8a00\u5f52\u6b63\u4f20\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6a21\u62df\u4e00\u4e0b\u6bd4\u8d5b\u8fc7\u7a0b\u3002\n```\n\t/*\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b*/\n\tvoid play()//\u6bcf\u8f6e\u6bd4\u8d5b\u5f00\u59cb\u524d\uff0c\u4ee5\u53ca\u6240\u6709\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u90fd\u4f1a\u6309\u7167\u603b\u5206\u4ece\u9ad8\u5230\u4f4e\u5bf9\u9009\u624b\u8fdb\u884c\u4e00\u6b21\u6392\u540d\n\t{\n\t\tfor(int i=1;i<=2*n;i+=2)//\u5bf9\u6bcf2\u540d\u9009\u624b\u8fdb\u884c\u6bd4\u8f83\n\t\t{\n\t\t\tif(a[i].number>a[i+1].number)a[i].score++;\n\t\t\telse if(a[i].number<a[i+1].number)a[i+1].score++;\n            //\u6211\u4eec\u5047\u8bbe\u9009\u624b\u7684\u5b9e\u529b\u503c\u4e24\u4e24\u4e0d\u540c\uff0c\u4e14\u6bcf\u573a\u6bd4\u8d5b\u4e2d\u5b9e\u529b\u503c\u8f83\u9ad8\u7684\u603b\u80fd\u83b7\u80dc\n\t\t}\n\t}\n\tsort(a+1,a+2*n+1,cmp);//\u4e3a\u4ec0\u4e48\u8981\u6392\u5e8f\u5462\uff0c\u8bf7\u770b\u4e0a\u6587\n```\n\u9898\u76ee\u8bf4\uff0c\u8981\u91cd\u590dr\u8f6e\u6bd4\u8d5b\uff0c\u6240\u4ee5\u6211\u7528\u4e00\u4e2a`while`\u5faa\u73af\u8fdb\u884c\u8fd9\u4e2a\u6bd4\u8d5b\u3002\n```\n\twhile(r--)\n\t{\n    \t//ToDo\n\t}\n```\n\u90a3\u4e48\u5728\u8fd9\u4e2a`while`\u5faa\u73af\u4e2d\u6211\u4eec\u8981\u653e\u4ec0\u4e48\u5462\uff1f\u5f53\u7136\u662f`play()`\u51fd\u6570\u5566\u3002\u641e\u5b8c\u4e86\u6bd4\u8d5b\uff0c\u5c31\u8f93\u51fa\u7b2cq\u4f4d\u53c2\u8d5b\u961f\u5458\u7684\u7f16\u53f7\u3002\n```\n\tcout<<a[q].id<<endl;//\u8f93\u51fa\n```\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>//\u6211\u53ef\u662f\u5f88\u61d2\u7684\nusing namespace std;\nstruct person{\n\tint score;//\u521d\u59cb\u5206\u6570 \n\tint number;//\u5b9e\u529b\u503c \n\tint id;//\u7f16\u53f7 \n}a[200002];\nint n,r,q;//\u540c\u9898\u610f\ninline bool cmp(person a,person b)\n{\n\tif(a.score<b.score)return 0;\n\tif(a.score==b.score&&a.id>b.id)return 0;//\u6309\u9898\u610f\u6bd4\u8f83\n\treturn 1;\n}\nvoid _init_()\n{\n\tcin>>n>>r>>q;\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].score;\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].number;\n    //\u8f93\u5165\n\tfor(int i=1;i<=2*n;i++)a[i].id=i;//\u521d\u59cb\u5316\u7f16\u53f7\n\tsort(a+1,a+2*n+1,cmp);\n    //\u521d\u59cb\u5316\n}\nvoid play()\n{\n\tfor(int i=1;i<=2*n;i+=2)\n\t{\n\t\tif(a[i].number>a[i+1].number)a[i].score++;\n\t\telse if(a[i].number<a[i+1].number)a[i+1].score++;//\u6a21\u62df\u6bd4\u8d5b\u8fc7\u7a0b\n\t}\t\t\n    sort(a+1,a+2*n+1,cmp);//\u6392\u5e8f\n}\nint main()\n{\n\t_init_();//\u521d\u59cb\u5316\n\twhile(r--)//\u5faa\u73af\u6bd4\u8d5br\u6b21\n\t{\n\t\tplay();//\u6a21\u62df\n\t}\n\tcout<<a[q].id<<endl;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\n## \u7136\u800c\u53ea\u62ff\u4e8660\u5206\u554a!!\n\n\u6211\u5f00\u4e86[O2\u4f18\u5316](https://blog.csdn.net/xinianbuxiu/article/details/51844994)\uff0c\u521a\u597d\u6c34\u8fc7(\u54b3\u54b3)\n\n---\n\u63a5\u4e0b\u6765\uff0c\u9686\u91cd\u4ecb\u7ecd*\u5f52\u5e76\u6392\u5e8f*\n\n### \u77e5\u8bc6\u94fe\u63a5\uff1a[\u5f52\u5e76\u6392\u5e8f](https://baike.baidu.com/item/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/1639015?fr=aladdin)  [\u4ee3\u7801\u5b9e\u73b01](https://blog.csdn.net/xuzhangze/article/details/79921369)  [\u4ee3\u7801\u5b9e\u73b02](https://blog.csdn.net/xmzyjr123/article/details/86520265)\n\u5f53\u7136\uff0c\u50cf`sort()`\u4e00\u6837\uff0c\u5f52\u5e76\u6392\u5e8f\u4e5f\u6709\u5b83\u7684\u5b9e\u73b0`merge()`\u3002\n\n[\u4ecb\u7ecd\u94fe\u63a5](http://www.manongjc.com/article/61408.html) \n\n[\u6d1b\u8c37\u5f52\u5e76\u53cb\u60c5\u94fe\u63a5](https://www.luogu.org/problemnew/solution/P1309?page=2)\u4f5c\u8005:cww970329\n\n\u800c\u8fd9\u4e2a\u6392\u5e8f\u65b9\u6cd5\u5bf9\u4e8e\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\u7684\u5408\u5e76\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4ec5\u53ea\u6709O(n)\u3002\u6b63\u597d\u9002\u5408\u8fd9\u9053\u9898\uff0c\u5728\u8d62\u5bb6/\u8f93\u8005\u5206\u51fa\u80dc\u8d1f\u540e\uff0c\u539f\u5148\u6709\u5e8f\u7684\u6570\u5217\u5728\u5206\u5f00\u540e\uff0c\u8d62\u5bb6\u90fd\u52a0\u4e861\uff0c\u8f93\u8005\u90fd\u6ca1\u6709\u53d8\u5316\uff0c\u4ed6\u4eec\u7684\u4e24\u4e2a\u5e8f\u5217\u4ecd\u7136\u662f\u6709\u5e8f\u7684\u3002\n\n---\n\n\u73b0\u5728\u6211\u4eec\u6765\u5bf9\u8fd9\u4e2a\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\u3002\u9996\u5148\u6700\u5f00\u59cb\u7684\u521d\u59cb\u5316\u4ecd\u7136\u7528sort\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\u7ed9\u4ed6\u8fdb\u884c\u5408\u5e76\u3002\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e`play()`\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u8981\u52a8\u4e00\u52a8\u624b\u811a\u4e86\u3002\u628a\u8d62\u5bb6\u548c\u8f93\u8005\u5168\u90e8\u653e\u8fdb\u4e24\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u8fd9\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u3002\u3002\u3002\u54d2\u54d2\u54d2\uff01\uff01\uff01\n\n```\nvoid play()\n{\n\tint xl=0,yl=0;\n\tfor(int i=1;i<=2*n-1;i+=2)//\u73b0\u5728\u624d\u53d1\u73b0\u4e0a\u9762\u597d\u50cf\u9519\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u5faa\u73af\u52302*n-1\u5373\u53ef\u3002\n\t{\n\t\tif(a[i].number>a[i+1].number){\n\t\t\ta[i].score++;x[++xl]=a[i];y[++yl]=a[i+1];//\u5b58\u653e\u6570\u5b57\u4e0d\u89e3\u91ca\n\t\t}\n\t\telse if(a[i].number<a[i+1].number){\n\t\t\ta[i+1].score++;x[++xl]=a[i+1];y[++yl]=a[i];//\u5b58\u653e\u6570\u5b57\u4e0d\u89e3\u91ca\n\t\t}\n\t}\n\tmerge(x+1,x+n+1,y+1,y+n+1,a+1,cmp);//\u81ea\u5e26\u7684merge\n}\n```\n\u9644\u4e0aAC\u4ee3\u7801\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n```\n#include<bits/stdc++.h>\n#pragma orimize GCC(2)//\u6709\u70b9\u614c\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u52a0\u4e0a\u5427\nusing namespace std;\nconst int MAXN=100000;\nstruct person{\n\tint score;//\u521d\u59cb\u5206\u6570 \n\tint number;//\u5b9e\u529b\u503c \n\tint id;//\u7f16\u53f7 \n}a[2*MAXN+2],x[2*MAXN+2],y[2*MAXN+2];\nint n,r,q;\nbool cmp(person a,person b)\n{\n\tif(a.score<b.score)return 0;\n\tif(a.score==b.score&&a.id>b.id)return 0;\n\treturn 1;\n}\nvoid _init_()\n{\n\tcin>>n>>r>>q;\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].score;\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].number;\n\tfor(int i=1;i<=2*n;i++)a[i].id=i;\n\tsort(a+1,a+2*n+1,cmp);//\u540c\u4e0a\u4e0d\u89e3\u91ca\n}\nvoid play()\n{\n\tint xl=0,yl=0;\n\tfor(int i=1;i<=2*n-1;i+=2)\n\t{\n\t\tif(a[i].number>a[i+1].number){\n\t\t\ta[i].score++;x[++xl]=a[i];y[++yl]=a[i+1];//\u540c\u4e0a\u4e0d\u89e3\u91ca\n\t\t}\n\t\telse if(a[i].number<a[i+1].number){\n\t\t\ta[i+1].score++;x[++xl]=a[i+1];y[++yl]=a[i];\n\t\t}\n\t}\n\tmerge(x+1,x+n+1,y+1,y+n+1,a+1,cmp);//\u54c8\u54c8\u54c8\n}\nint main()\n{\n\t_init_();\n\twhile(r--)\n\t{\n\t\tplay();\n\t}\n\tcout<<a[q].id<<endl;//\u4e0d\u89e3\u91ca\n\treturn 0;\n}\n```",
        "postTime": 1563524274,
        "uid": 147219,
        "name": "\u674e\u575a\u851a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "**\u4e0d\u4f1a\u624b\u5199\u5f52\u5e76\u6392\u5e8f\u4f46\u60f3\u7528STL\u5c3d\u91cf\u5f97\u90e8\u5206\u5206\u7684\u770b\u8fc7\u6765**\n   \n \u9996\u5148\u7528sort\u505a\u4e00\u904d\n ```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\n#include <string> \n/* run this program using the console pauser or add your own getch, system(\"pause\") or input loop */\nusing namespace std;\nconst int N=200005;\nint read()//\u65e5\u5e38\u5feb\u8bfb... \n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){ if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nstruct node\n{\n\tint id;//\u7f16\u53f7 \n\tint w;//\u5b9e\u529b\u503c \n\tint sx;//\u521d\u59cb\u503c,\u4e4b\u540e\u4f1a\u4e0d\u65ad\u66f4\u65b0 \n}q[N];\nbool cmp(const node &a,const node &b)\n{\n\tif(a.sx!=b.sx) \n\t\treturn a.sx>b.sx;\n\telse \n\t\treturn a.id<b.id;\n}\nint n,r,Q;\nint main(int argc, char** argv) {\n\tint i,j;\n\tn=read(); r=read(); Q=read();\n\tfor(i=1;i<=2*n;i++)\n\t{\n\t\tq[i].sx=read();\n\t\tq[i].id=i;\n\t}\n\tfor(i=1;i<=2*n;i++)\n\t\tq[i].w=read();\n\tsort(q+1,q+2*n+1,cmp);//\u5f00\u59cb\u8981\u5148\u6392\u4e00\u904d \n\t\n\tfor(i=1;i<=r;i++)//\u8fd9\u91cc\u5c31\u662f\u7eaf\u6a21\u62df\u4e86 \n\t{\n\t\tfor(j=1;j<=2*n;j=j+2)\n\t\t{\n\t\t\tif(q[j].w>q[j+1].w) q[j].sx++;\n\t\t\telse q[j+1].sx++;\n\t\t}\n\t\tsort(q+1,q+2*n+1,cmp);\n\t}\n\tprintf(\"%d\",q[Q].id);//printf\u6bd4cout\u5feb\u7684 \n\treturn 0;\n}\n```\n**60\u5206....**\n\n\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3asort\u5b9e\u8d28\u662f\u5feb\u901f\u6392\u5e8f(\u4e8c\u5206),\u76f8\u90bb\u4e24\u4e2a\u4eba\u5206\u6570\u53d8\u5316\u540e,\u6709\u65f6\u662f\u4e0d\u4f1a\u6539\u53d8\u4f4d\u7f6e\u7684\uff0c\u4f46\u5feb\u901f\u6392\u5e8f\u662f\u6bcf\u6b21\u5168\u90e8\u4fee\u6539,\u6240\u4ee5\u9020\u6210\u6d6a\u8d39\n~~\u4f46\u662f\u5f00o2\u80fd\u8fc7~~\n\n------------\n\u7136\u540e\u4ecb\u7ecd\u4e00\u4e2a\u5b9e\u8d28\u662f\u5f52\u5e76\u6392\u5e8f\u7684STL,\u5b83\u5c31\u662fstable_sort\n\u53ef\u4ee5\u8bf4stable_sort\u548csort\u7684\u7528\u6cd5\u4e00\u6837,\u800c\u6ca1\u591a\u5c11\u4eba\u77e5\u9053\u662f\u56e0\u4e3a\u5927\u90e8\u5206\u65f6\u5019sort\u5c31\u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u95ee\u9898,\u53ea\u8981\u628a\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684sort\u5168\u90e8\u6539\u6210stable_sort\u5c31\u80fd\u5f9780\u5206\u4e86,\u4f46\u9898\u89e3\u91cc\u6709\u5927\u4f6c\u7528\u624b\u5199\u5f52\u5e76+sort\u786c\u662fAC\u4e86,\u4e0d\u5f97\u4e0d\u8bf4\u6211\u8fd8\u662f\u592a\u849f\u84bb\u4e86\u554a......",
        "postTime": 1537963667,
        "uid": 88405,
        "name": "Mirastar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "http://iyyy.sinaapp.com/576/\n\n\u5173\u952e\u8bcd\uff1a\u7ed3\u6784\u4f53\u3001\u5f52\u5e76\u3001STL\u3001\u6a21\u62df\n\n\u9996\u5148\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u7528STL\u7684sort\u80af\u5b9a\u70b8\u4e86\u3002\u3002\u4f55\u51b5\u5f53\u65f6\u4e0d\u8ba9\u7528STL\u3002\n\n\u7136\u540e\u8d62\u5f97\u4eba\u548c\u8f93\u7684\u4eba\u6392\u540d\u90fd\u6ca1\u53d8\uff0c\u80af\u5b9a\u7528\u5f52\u5e76\u6392\u5e8f\u3002\n\nSTL\u81ea\u5e26\u5f52\u5e76233333.\n\nSTL\u4e2d\u7684\u5f52\u5e76\u6392\u5e8f\u4e2a\u4eba\u7406\u89e3\uff1amerge(\u5e8f\u52171\u9996\u5730\u5740\uff0c\u5e8f\u52171\u672b\u5730\u5740\uff08\u4e0d\u542b\uff09\uff0c\u5e8f\u52172\u9996\u5730\u5740\uff0c\u5e8f\u52172\u672b\u5730\u5740\uff08\u4e0d\u542b\uff09\uff0c\u5408\u5e76\u5b8c\u6210\u5e8f\u5217\u50a8\u5b58\u4f4d\u7f6e\u9996\u5730\u5740\uff0c\u6bd4\u8f83\u51fd\u6570\uff08\u540csort\uff0c\u53ef\u9009\uff09)\n\n\u5f003\u4e2a\u6570\u7ec4\uff1a1\u3001\u6240\u6709\u9009\u624b 2\u3001\u672c\u8f6e\u8d62\u7684 3\u3001\u672c\u8f6e\u8f93\u7684\n\n\u8bfb\u5165\n\u5148\u628a1\u6570\u7ec4sort\u4e00\u904d\n\n\u6bcf\u8f6e\u6bd4\u8d5b\uff0c\u8d62\u7684\u4e22\u8fdb2\u6570\u7ec4\uff0c\u8f93\u7684\u4e22\u8fdb3\u6570\u7ec4\uff0c\u7136\u540e\u5f52\u5e76\u52301\u6570\u7ec4\u3002\n\n\u8f93\u51fa",
        "postTime": 1446346862,
        "uid": 5846,
        "name": "yyy2015c01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u7ecf\u5178\u7684\u5f52\u5e76\u601d\u60f3\u3002\n\n\u7b2c\u4e00\u6b21\u524d\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u3002\u7136\u540e\u6bcf\u8f6e\u7684\u8d62\u8005\u548c\u8f93\u8005\u90fd\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u540e\u9762\u5bf9\u8fd9\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u5373\u53ef\u5f97\u5230\u6240\u9700\u5e8f\u5217\u3002\n\n\u5bf9\u4e8eC++\u515a\u6765\u8bf4\u4f9d\u65e7\u662f\u4e00\u9053\u8bed\u8a00\u4f18\u52bf\u9898\u3002\n\n\u8bf8\u4f4d\u53ef\u542c\u8bf4\u8fc7STL\uff1f\n\nSTL\u81ea\u5e26\u5f52\u5e76\u3002\n\n\n```cpp\n\ntemplate<typename _InputIterator1, typename _InputIterator2,\n       typename _OutputIterator, typename _Compare>\n    inline _OutputIterator\n    merge(_InputIterator1 __first1, _InputIterator1 __last1,\n      _InputIterator2 __first2, _InputIterator2 __last2,\n      _OutputIterator __result, _Compare __comp);\n\n```\n\n\u4ee5\u4e0a\u662f\u51fd\u6570\u539f\u578b\uff08\u7b2c\u516d\u4e2a\u53ef\u4ee5\u7701\u7565\uff09\u3002\n\n\u7b2c\u516d\u4e2a\u5199\u6cd5\u8ddfsort()\u7684\u7b2c\u4e09\u4e2a\u5199\u6cd5\u4e00\u6837\u3002\n\n\u90a3\u4e48\u77e5\u9053\u4e86\u7b97\u6cd5\u548c\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\u3002\n\n\n```cpp\n\n#include <iostream>\n#include <cstdio>\n#include <algorithm> //to use sort() and merge()\n#include <cctype>\n\nusing namespace std;\n\nconst size_t    MaxN = 100005;\n\nstruct Players{\n    int    ID;\n    int    s, w;\n} P[MaxN << 1], W[MaxN], F[MaxN];\n\nint    N, R, Q;\n\ninline bool Compare(const Players& arg1, const Players& arg2)\n{\n    if(arg1.s != arg2.s)\n        return arg1.s > arg2.s;\n    return arg1.ID < arg2.ID;\n}\n\ninline void ReadInt(int& arg)\n{\n    char    ch;\n    for(ch = getchar(); !isdigit(ch); ch = getchar());\n    arg = ch - '0';\n    for(ch = getchar(); isdigit(ch); ch = getchar())\n        (arg *= 10) += ch - '0';\n}\n\nint main()\n{\n    int    i;\n\n    cin >> N >> R >> Q;\n    N <<= 1;\n    for(i = 1; i <= N; i++)\n        ReadInt(P[i].s);\n\n    for(i = 1; i <= N; i++) {\n        ReadInt(P[i].w);\n        P[i].ID = i;\n    }\n\n    sort(P + 1, P + 1 + N, Compare);\n    N >>= 1;\n    while(R--) {\n        for(i = 1; i <= N; i ++) {\n            if(P[i << 1].w > P[(i << 1) - 1].w) {\n                W[i] = P[i << 1];\n                F[i] = P[(i << 1) - 1];\n            } else {\n                F[i] = P[i << 1];\n                W[i] = P[(i << 1) - 1];\n            }\n            W[i].s++;\n        }\n        merge(W + 1, W + 1 + N, F + 1, F + 1 + N, P + 1, Compare);\n    }\n\n    cout << P[Q].ID << endl;\n\n    return 0;\n}\n\n```\n\n\u90a3\u4e2aReadInt()\u662f\u8bfb\u5165\u4f18\u5316\uff0c\u4e00\u5f00\u59cb\u628a\u9898\u76ee\u8303\u56f4\u770b\u9519\u4e86\uff0c\u628a\u8bfb\u5165\u4f18\u5316\u52a0\u4e86\u2026\u2026\u5176\u5b9e\u6539\u6210scanf()\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n",
        "postTime": 1445143719,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u5148\u8bf4\u4e00\u53e5\uff0c\u6700\u66b4\u529b\u7684\u505a\u6cd5\u5373\u6bcf\u6b21\u90fd\u5feb\u6392\u4f1aT\u3002NOIP\u7684\u5b98\u65b9\u6570\u636e\u53ea\u4f1a\u7ed9\u5feb\u639250\u5206\u3002\n\n\u5176\u5b9e\u53ea\u8981\u5feb\u6392\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u8f6e\u7684\u80dc\u5229\u8005\u548c\u5931\u8d25\u8005\u5206\u7ec4\uff0c\u53ef\u4ee5\u53d1\u73b0\u80dc\u5229\u8005\u5185\u90e8\u548c\u5931\u8d25\u8005\u5185\u90e8\u7684\u76f8\u5bf9\u6392\u540d\u662f\u4e0d\u53d8\u7684\u3002\u56e0\u4e3a\u5df2\u7ecf\u8fdb\u884c\u8fc7\u5feb\u6392\uff0c\u6240\u4ee5\u8fd9\u91cc\u5f97\u5230\u7684\u4e24\u7ec4\u5747\u662f\u6709\u5e8f\u7684\uff0c\u7136\u540e\u604d\u7136\u5927\u609f\u2014\u2014\u5f52\u5e76\u6392\u5e8fO(n)\uff01\u6bcf\u4e00\u8f6e\u90fd\u6a21\u62df\u51fa\u7ed3\u679c\uff0c\u7136\u540e\u5206\u7ec4\uff0c\u76f4\u63a5\u5f52\u5e76\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(n(r+logn))\u3002\u8fd9\u91cc\u81ea\u5e26\u5e38\u65702\uff0c\u662f\u5feb\u6392O(nrlogn)\u8fc7\u4e0d\u4e86\u7684\u91cd\u8981\u539f\u56e0\uff0c\u7136\u800c\u6211\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u770b\u51fa\u6765\u3002\n\n```cpp\n\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct node\n{\n    int num, val, pw;\n    node(int num = 0, int val = 0, int pw = 0) :num(num), val(val), pw(pw) {}\n    bool operator < (const node& b) const\n    {\n        if(val > b.val) return true;\n        if(val < b.val) return false;\n        return num < b.num;\n    }\n}T[200005], tmp[2][100005];\nint n, r, q, s[200005], w[200005];\nvoid init()\n{\n    scanf(\"%d%d%d\", &n, &r, &q);\n    for(int i = 0; i < (n << 1); ++i) scanf(\"%d\", &s[i]);\n    for(int i = 0; i < (n << 1); ++i) scanf(\"%d\", &w[i]);\n    for(int i = 0; i < (n << 1); ++i) T[i] = node(i + 1, s[i], w[i]);\n    sort(T, T + (n << 1));\n}\nvoid work()\n{\n    while(r--)\n    {\n        for(int i = 0; i < n; ++i)\n        {\n            if(T[i << 1].pw > T[i << 1 | 1].pw)\n            {\n                ++T[i << 1].val;\n                tmp[1][i] = T[i << 1];\n                tmp[0][i] = T[i << 1 | 1];\n            }\n            else\n            {\n                ++T[i << 1 | 1].val;\n                tmp[1][i] = T[i << 1 | 1];\n                tmp[0][i] = T[i << 1];\n            }\n        }\n        int top[3] = {0, 0, 0};\n        while(top[0] < (n << 1))\n        {\n            if((top[1] < n) && (tmp[1][top[1]] < tmp[0][top[2]] || top[2] >= n))\n            {\n                T[top[0]++] = tmp[1][top[1]];\n                ++top[1];\n            }\n            else\n            {\n                T[top[0]++] = tmp[0][top[2]];\n                ++top[2];\n            }\n        }\n    }\n    printf(\"%d\\n\", T[q - 1].num);\n}\nint main()\n{\n    init();\n    work();    \n    return 0;\n}\n\n```",
        "postTime": 1437436293,
        "uid": 3251,
        "name": "t14t41t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "# \u4e00\u7bc7\u9002\u5408Dalao\u65a7\u6b63\u7684\u9898\u89e3\n\u8fd9\u9053\u9898\u4e0d\u4f1a\u7ed3\u6784\u4f53\u91cd\u7f6e\u8fd0\u7b97\u7b26\u4e5f\u80fd\u505a\uff0c~~\u53ea\u662f\u4ee3\u7801\u6709\u70b9\u957f~~\n\n\u4e0d\u4f1aSTL merge\u4e5f\u80fd\u505a\uff0c~~\u53ea\u662f\u5199\u5f97\u6709\u70b9\u70e6~~\n\n**~~\u4e0d\u4f1a\u624b\u6253\u5f52\u5e76\u6392\u5e8f\u4e5f\u80fd\u505a~~**\n\n\u770b\u5230\u697c\u4e0b\u7ea2\u540d\u5de8\u4f6c\u8fd9\u4e48\u5199\uff1a\n```cpp\nvoid merge()  \n{  \n  int i,j;  \n  i=j=1,a[0]=0;\n  while(i<=win[0] && j<=lose[0])  \n    if(cmp(win[i],lose[j]))  \n      a[++a[0]]=win[i++];  \n    else   \n      a[++a[0]]=lose[j++];  \n  while(i<=win[0]) a[++a[0]]=win[i++];  \n  while(j<=lose[0]) a[++a[0]]=lose[j++];       \n}  \n```\n\n\n\u5bf9\u4e8e\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u53ea\u9700\u5408\u5e76\u5373\u53ef\uff0c\u5e76\u4e0d\u662f\u5b8c\u6574\u7684\u5f52\u5e76\u3002\n\n\n\u89c2\u5bdf\u53d1\u73b0\uff1a\u5176\u4e2d\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u4e3a\n\n\ni<=win[0] && j<=lose[0]\n\n\u8fd8\u9700\u8981\u5199\n\nwhile(i<=win[0]) a[++a[0]]=win[i++];  \n  while(j<=lose[0]) a[++a[0]]=lose[j++];     \n\n\u5176\u5b9e\u53ea\u9700\u8981\u52a0\u4e00\u4e2a\u8fb9\u754c\u3002\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\n\nint n,r,q;\nstruct node{\n\tint p,s,r;\n}a[200011],t1[100011],t2[100011];//t1\u8bb0\u5f55\u8d62\u5bb6\uff0ct2\u8bb0\u5f55\u8f93\u8005\n\nbool cmp(node a,node b){\n\tif(a.s==b.s) return a.r<b.r;\n\treturn a.s>b.s;\n}\n\nvoid merge(){\n\tfor(int i=1,j=1,cnt=0;cnt<n;)//\u7ed3\u675f\u6761\u4ef6\u4e0d\u662fi<=win[0] && j<=lose[0]\n\t\tif(cmp(t1[i],t2[j])) a[++cnt]=t1[i++];//\u53ef\u4ee5\u7528\u4e00\u4e0bcmp\n\t\telse a[++cnt]=t2[j++];\n}\n\nint main()\n{\n\tint i,j,k1,k2;\n\tcin>>n>>r>>q,n*=2;\n\tfor(i=1;i<=n;i++) cin>>a[i].s;\n\tfor(i=1;i<=n;i++) cin>>a[i].p,a[i].r=i;\n\t\n\tsort(a+1,a+n+1,cmp);//\u5148\u6392\u5e8f\n\tfor(i=1;i<=r;i++){\n\t\tk1=k2=0;\n\t\tfor(j=1;j<=n;j+=2) \n\t\t\tif(a[j].p>a[j+1].p) a[j].s++,t1[++k1]=a[j],t2[++k2]=a[j+1];\n\t\t\telse a[j+1].s++,t1[++k1]=a[j+1],t2[++k2]=a[j];\n\t\tt1[k1+1].s=t2[k2+1].s=-1;//\u91cd\u70b9\uff0c\u89e3\u6790\u89c1\u4e0b\u9762\n\t\tmerge();//\u5408\u5e76\n\t}\n\t\n\tcout<<a[q].r;\n\treturn 0;\n}\n```\n\n\u5728merge\u4e2d,\u5f53i\u6216j=n/2+1\u65f6\uff0c\u5e94\u4f7fj\u6216i\u4e00\u76f4\u88ab\u9009\u4e2d\uff0c\u5373\u5236\u8fb9\u754c\n\nt1[k1+1].s=t2[k2+1].s=-1;\n\n\u5f53\u6307\u9488\u8d8a\u754c\u65f6,cmp\u4e2d-1\u4e00\u76f4\u5c0f\u4e8e\u6b63\u6570\uff0c\u6545\u52a0\u5165a[]\u4e2d\u7684\u4e00\u76f4\u662f\u672a\u52a0\u5165\u7684\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(R*N)",
        "postTime": 1570888034,
        "uid": 21610,
        "name": "\u96c4\u9e70\u5c55\u7fc5",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u5f52\u5e76\uff0c\u628a\u4e24\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u5728\u8be5\u8f6e\u4e2d\u5168\u90e8\u8f93\u7684\u4eba\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u76f8\u5bf9\u6392\u540d\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5bf9\u4e8e\u5728\u8be5\u8f6e\u4e2d\u5168\u90e8\u8d62\u7684\u4eba\uff0c\u4e5f\u6709\u540c\u6837\u7684\u6027\u8d28\u3002\n\n\u6240\u4ee5\u6bcf\u6b21\u5bf9\u4e8e\u6bcf\u8f6e\u6bd4\u8d5b\u7ed3\u675f\uff0c\u53ea\u8981\u7528O\uff08n\uff09\u7684\u65f6\u95f4\u5c31\u80fd\u8ba9\u6574\u4f53\u53d8\u6210\u6709\u5e8f\u7684\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u9009\u624b\u662f\u6709\u521d\u59cb\u5206\u6570\u7684\uff0c\u7b2c\u4e00\u8f6e\u8981\u5148\u6392\u4e00\u6b21\u5e8f\u3002\n\n\n\n\n```cpp\nvar\n  a:array[0..200000,1..3] of longint;\n  b,c:array[0..100000,1..3] of longint;\n  n,r,q,i,j:longint;\nprocedure qsort(l,r:longint);\nvar\n  i,j,k,s:longint;\nbegin \n  if l>=r then exit;\n  i:=l;j:=r;\n  k:=a[(i+j) div 2,1];s:=a[(i+j) div 2,3];\n  repeat\n    while (a[i,1]>k)or(a[i,1]=k)and(a[i,3]<s) do inc(i);\n    while (a[j,1]<k)or(a[j,1]=k)and(a[j,3]>s) do dec(j);\n    if i<=j then\n    begin\n      a[0]:=a[i];a[i]:=a[j];a[j]:=a[0];\n      inc(i);dec(j);\n    end;\n  until i>j;\n  qsort(i,r);\n  qsort(l,j);\nend;\nprocedure gb;\nvar\n  p,q,a1,i:longint;\nbegin\n  p:=1;\n  q:=1;\n  a1:=0;\n  while (p<=n)and(q<=n) do\n    if (b[p,1]>c[q,1])or(b[p,1]=c[q,1])and(b[p,3]<c[q,3])\n      then begin\n             inc(a1);\n             a[a1]:=b[p];\n             inc(p)\n           end\n      else begin\n             inc(a1);\n             a[a1]:=c[q];\n             inc(q);\n           end;\n  for i:=p to n do\n  begin\n    inc(a1);\n    a[a1]:=b[i];\n  end;\n  for i:=q to n do\n  begin\n    inc(a1);\n    a[a1]:=c[i];\n  end;\nend;\nbegin\n  readln(n,r,q);\n  for i:=1 to n*2 do read(a[i,1]);\n  for i:=1 to n*2 do begin\n    read(a[i,2]);\n    a[i,3]:=i;\n  end;\n  qsort(1,n*2);\n  for i:=1 to r do begin\n    for j:=1 to n do\n      if a[j*2-1,2]>a[j*2,2] then begin\n        inc(a[j*2-1,1]);\n        b[j]:=a[j*2-1];\n        c[j]:=a[j*2];\n      end\n      else begin\n        inc(a[j*2,1]);\n        b[j]:=a[j*2];\n        c[j]:=a[j*2-1];\n      end;\n    gb;\n  end;\n  writeln(a[q,3]);\nend.\n```",
        "postTime": 1495285868,
        "uid": 44585,
        "name": "dingwenqi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "c07\uff0c\u6211\u5f88\u4e25\u8083\u5730\u8bf4\uff0c\u4f60\u90a3\u4e2a\u662f\u9a97\u6570\u636e\uff0c\u4e0d\u53eb\u6253\u8868\u2026\u2026\n\n\u5982\u679c\u5f52\u5e76\u8fd8\u662f\u7206\u4e86\uff0c\u90a3\u4e48\u8bf4\u660e\u5e94\u8be5\u662f\u54ea\u513f\u7528\u9519\u4e86\uff0c\u7b97\u6cd5\u662f\u6ca1\u6709\u9519\u7684\n\n\u6bcf\u6b21\u6bd4\u5b8c\u4e4b\u540e\uff0c\u90fd\u6309\u7167\u8f93\u8d62\u653e\u5728\u4e0d\u540c\u7684\u6570\u7ec4\u91cc\uff0c\u6709\u5e8f\u7684\u4f9d\u7136\u6709\u5e8f\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5f52\u5e76\n\n\u800c\u4e14s\u548cw\u6570\u7ec4\u4e0d\u7528\u6392\u5e8f\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u662f\u7528\u7f16\u53f7\u8c03\u7528\u7684\u2026\u2026\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,r,q,a[200009],s[200009],w[200009],win[200009],lose[200009];\nbool cmp(int i,int j)\n{\n    if(s[i]!=s[j]){return s[i]>s[j];}//\u5224\u65ad\u9700\u4e0d\u9700\u8981\u6362\u4f4d\u7f6e\n    return i<j;//\u5176\u5b9ei\u4e00\u76f4\u5c0f\u4e8ej\u2026\u2026\n}\nvoid msort()\n{\n    int i=1,j=1;a[0]=0;//a[0]\u5b58\u7684\u662f\u5df2\u7ecf\u5904\u7406\u597d\u7684\u4eba\u6570\n    while(i<=win[0]&&j<=lose[0])\n    {\n        if(cmp(win[i],lose[j])){a[0]++,a[a[0]]=win[i++];} //\u5982\u679cwin\u6570\u7ec4\u4e2d\u7684\u4eba\u5f97\u5206\u6bd4\u8f83\u5927\uff0c\u5c31\u628a\u4ed6\u653e\u8fdba\u6570\u7ec4\n        else{a[0]++,a[a[0]]=lose[j++];}//\u5426\u5219\u628alose\u6570\u7ec4\u4e2d\u7684\u4eba\u653e\u8fdba\u6570\u7ec4\n    }\n    while(i<=win[0]){a[0]++,a[a[0]]=win[i++];} //\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\u5b89\u653e\u5b8c\u4e86\uff0c\u8bf4\u660e\u5269\u4e0b\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u4eba\u5206\u6570\u5168\u90e8\u5c0f\u4e8ea\u6570\u7ec4\u91cc\u7684\u4eba\u7684\u5206\u6570\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6570\u7ec4\u662f\u6309\u5206\u6570\u5df2\u7ecf\u6392\u597d\u7684\uff0c\u53ea\u9700\u8981\u63a5\u5230a\u6570\u7ec4\u540e\u9762\u5c31\u597d\u4e86\n    while(j<=lose[0]){a[0]++,a[a[0]]=lose[j++];}\n}\nint main()\n{\n    cin>>n>>r>>q;n=n*2;\n    for(int i=1;i<=n;i++){a[i]=i;}\n    for(int i=1;i<=n;i++){cin>>s[i];}\n    for(int i=1;i<=n;i++){cin>>w[i];}//\u6570\u636e\u5904\u7406\n    sort(a+1,a+n+1,cmp);//\u5148\u5feb\u6392\u4e00\u904d\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cb\u662f\u65e0\u5e8f\u7684\n    for(int i=1;i<=r;i++)\n    {\n        win[0]=0,lose[0]=0;//\u6240\u6709\u7684\u521d\u59cb\u4eba\u6570\u653e\u57280\u53f7\u4f4d\u4e0a\n        for(int j=1;j<=n;j=j+2)\n        {\n            win[0]++,lose[0]++;//\u6bcf\u5c40\u6bd4\u8d5b\u90fd\u662f\u4e00\u8d62\u4e00\u8f93\n            if(w[a[j]]>w[a[j+1]])//\u628a\u8d62\u7684\u653e\u8fdbwin\u6570\u7ec4\uff0c\u8f93\u7684\u653e\u8fdblose\u6570\u7ec4\uff0c\u5e76\u4e14\u52a0\u5206\n            {\n                s[a[j]]++;\n                win[win[0]]=a[j];\n                lose[lose[0]]=a[j+1];\n            }\n            else\n            {\n                s[a[j+1]]++;\n                win[win[0]]=a[j+1];\n                lose[lose[0]]=a[j];\n            }\n        }\n        msort();//\u5f52\u5e76\n    }\n    cout<<a[q];//\u8f93\u51fa\u7b2cq\u540d\u7f16\u53f7\n    return 0;\n}\n```",
        "postTime": 1475489291,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "###### \u8fd9\u9898\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\uff0c\u521b\u5efa\u73a9\u5bb6\u3001\u80dc\u8005\u3001\u8d25\u8005\uff0c\u5148\u901a\u8fc7\u6570\u8f6e\u6bd4\u8f83\u5c06\u73a9\u5bb6\u5206\u5165\u4e24\u4e2a\u7ec4\uff0c\u5728\u6839\u636e\u89c4\u5219\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u8f93\u51fa\u7b2cQ\u4f4d\u7684Num\u5c31\u884c\u5566\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std; \nstruct Player//\u7ed3\u6784\u4f53\n{\n\tint Num;\n    int Score;\n    int Strength;\n    friend bool operator < (Player num1,Player num2)//\u91cd\u65b0\u5b9a\u4e49\u201c<\u201d\u53f7\n\t{\n    \tif(num1.Score == num2.Score)\n        \treturn num1.Num < num2.Num;\n    \treturn num1.Score > num2.Score;\n\t}\n};\nPlayer People[400100];\nPlayer Failer[400100];\nPlayer Winer[400100];\nint N,R,Q,N2;\nint main()\n{\n\tcin >> N >> R >> Q;\n\tN2 = N * 2;\n\tfor(int i = 0; i < N2; i++) People[i].Num = i + 1;\n\tfor(int i = 0; i < N2; i++) cin >> People[i].Score;\n\tfor(int i = 0; i < N2; i++) cin >> People[i].Strength;\n\tsort(People,People + N2);\n\tfor(int i = 0; i < R; i++)\n\t\t{\n        \tfor(int j = 0; j < N2; j += 2)\n\t\t\t\t{\n            \t\tif(People[j].Strength > People[j + 1].Strength)\n\t\t\t\t\t\t{\n                \t\t\tPeople[j].Score++;\n                \t\t\tWiner[j / 2] = People[j];\n                \t\t\tFailer[j / 2] = People[j + 1];\n            \t\t\t}\n\t\t\t\t\t\telse if(People[j].Strength < People[j + 1].Strength)\n\t\t\t\t\t\t\t\t{\n                \t\t\t\t\tPeople[j + 1].Score++;\n                \t\t\t\t\tWiner[j / 2] = People[j + 1];\n                \t\t\t\t\tFailer[j / 2] = People[j];\n                                }\n        \t\t}\n    int af = 0,bf = 0;\n    for(int j = 0; j < N2; j++)\n\t\t{\n           \tif(af >= N || (bf < N && (Failer[bf].Score > Winer[af].Score || Failer[bf].Score == Winer[af].Score && Failer[bf].Num < Winer[af].Num)))\n\t\t\t\t{\n               \t\tPeople[j] = Failer[bf];\n\t\t\t\t\tbf++;\n           \t\t}\n\t\t    \telse\n\t\t\t\t\t{\n               \t\t\tPeople[j] = Winer[af];\n\t\t\t\t\t\taf++;\n             \t\t}\n        }\n    }\n    cout << People[Q - 1].Num;\n\treturn 0;\n}\n```\n\n###### orz\u4eec\u591a\u591a\u6307\u6559\u2026\u2026",
        "postTime": 1566289925,
        "uid": 207678,
        "name": "xdedmws",
        "ccfLevel": 5,
        "title": "P1309 \u745e\u58eb\u8f6e \u9898\u89e3"
    },
    {
        "content": "**[Actinoi's blog\uff1aNOIP2011 \u666e\u53ca\u7ec4](https://www.actinoi.com/2019/08/11/noip2011%20\u666e\u53ca\u7ec4/)**\n\n&emsp;\u200b\u770b\u5230\u672c\u9898\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u80af\u5b9a\u5c31\u662f\u6392\u5e8f\u4e86\u5457\uff01\u6bcf\u6b21\u6309\u5f97\u5206\u4ece\u9ad8\u5230\u4f4e\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u4e24\u4e24\u4e00\u7ec4\u8fdb\u884c\u6bd4\u62fc\u3002\u5982\u679c\u7528\u5feb\u901f\u6392\u5e8f\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u4e00\u822c\u4e3a $O(nlogn)$ \uff0c\u518d\u52a0\u4e0a\u4e24\u4e24\u6bd4\u8f83\u7684\u8fc7\u7a0b\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\n\u200b\u200b&emsp;\u200b\u4e3a\u4ec0\u4e48\u5feb\u6392\u4f1a\u8d85\u65f6\u5462\uff1f\u5feb\u6392\u6bcf\u6b21\u90fd\u5c06\u5f97\u5206\u770b\u6210\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u800c\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6392\u4e00\u6b21\u5e8f\u4e4b\u540e\uff0c\u5f97\u5206\u4fbf\u57fa\u672c\u4e0a\u53d8\u6210\u4e86\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u6392\u8fc7\u4e00\u6b21\u5e8f\u4e4b\u540e\uff0c\u6bcf\u4e24\u4e2a\u76f8\u90bb\u5f97\u5206\u4e4b\u95f4\u4fbf\u80af\u5b9a\u6709\u4e00\u4e2a\u5f97\u5206\u4f1a $+1$\uff0c\u6709\u4e00\u4e2a\u5f97\u5206\u4e0d\u53d8\u3002\u56e0\u6b64\uff0c\u5b83\u4fbf\u662f\u4e00\u4e2a\u57fa\u672c\u6709\u5e8f\u7684\u5e8f\u5217\u3002\n\n\u200b\u200b&emsp;\u200b\u90a3\u4e48\uff0c\u53c8\u5982\u4f55\u518d\u5bf9\u8fd9\u4e2a\u57fa\u672c\u6709\u5e8f\u7684\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\u5462\uff1f\u8fd9\u5c31\u5f88\u7b26\u5408 **\u5f52\u5e76\u6392\u5e8f** \u5408\u5e76\u7684\u6027\u8d28\u3002\n\n\u200b\u200b&emsp;\u200b\u5f52\u5e76\u6392\u5e8f\u7684\u5408\u5e76\u6d41\u7a0b\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u5982\u56fe\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9012\u51cf\u5e8f\u5217 $A$ \u4e0e $B$\u3002\n\n![](https://actinoi.oss-cn-hongkong.aliyuncs.com/%E9%A2%98%E8%A7%A3/%E6%99%AE%E5%8F%8A%E7%BB%84/NOIP%202011%E6%99%AE%E5%8F%8A%E7%BB%84/Merge_sort_algorithm_diagram.svg)\n\n\u200b\u200b&emsp;\u200b\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4 $N$ \u7528\u6765\u5b58\u50a8\u5408\u5e76\u4e4b\u540e\u7684\u6709\u5e8f\u6570\u7ec4\u3002\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf $i$ \u6765\u6307\u5411 $A$ \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 $12$\uff0c\u8bbe\u7f6e $j$ \u6765\u6307\u5411 $B$ \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 $10$\u3002\u6211\u4eec\u6bd4\u8f83 $12$ \u4e0e $10$ \u7684\u5927\u5c0f\uff0c\u5c06 $12$ \u653e\u5165 $N$ \u4e2d\uff0c$i++$\uff1b\u518d\u6bd4\u8f83\u5f53\u524d $i$ \uff0c $j$ \u6307\u5411\u7684\u5143\u7d20 $11$ \u4e0e  $10$\uff0c\u5c06 $11$ \u653e\u5165 $N$ \u4e2d\uff0c$i++$\uff1b\u518d\u6bd4\u8f83\u5f53\u524d $i$ \uff0c $j$ \u6307\u5411\u7684\u5143\u7d20$9$\u4e0e$11$ \uff0c\u5c06 $10$ \u653e\u5165 $N$ \u4e2d\uff0c$j++$...... \u4f9d\u6b21\u8fdb\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u4e24\u4e2a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u88ab\u653e\u5165 $N$ \u6570\u7ec4\u540e\u505c\u6b62\u5408\u5e76\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u672c\u4fbf\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4 $N \\{ 10,9,8,7,6,5,4,3,2,1 \\}$ \u4e86\u3002\u6211\u4eec\u518d\u4e24\u4e24\u4e00\u7ec4\u8fdb\u884c\u6bd4\u62fc\uff0c\u5b9e\u529b\u503c\u9ad8\u7684\u5f97\u5206\u4fbf $+1$ \u3002\n\n\u200b\u200b&emsp;\u200b\u5f52\u5e76\u6392\u5e8f\u5408\u5e76\u8fc7\u7a0b\u8981\u6c42 $A$ \u3001 $B$ \u4e24\u4e2a\u6570\u7ec4\u5fc5\u987b\u662f\u6709\u5e8f\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5148\u5c06\u521d\u59cb\u5f97\u5206  $sort()$ \u4e00\u904d\uff0c\u7136\u540e\u8fdb\u884c $R$ \u8f6e\u62c6\u5206\u4e0e\u5408\u5e76\u3002\u56e0\u4e3a $N$ \u5e8f\u5217\u57fa\u672c\u6709\u5e8f\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u4fbf\u6bd4\u8f83\u76f8\u90bb\u4e24\u4e2a\u5b9e\u529b\u503c\uff0c\u5b9e\u529b\u503c\u9ad8\u7684\u653e\u5728 $A$ \u6570\u7ec4\uff0c\u5b9e\u529b\u503c\u4f4e\u7684\u653e\u5728 $B$ \u6570\u7ec4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1 $A$ \u3001 $B$ \u4e24\u6570\u7ec4\u6709\u5e8f\u4e86\u3002\u7136\u540e\u518d\u6309\u7167\u4e0a\u8ff0\u7684\u5408\u5e76\u8fc7\u7a0b\u8fdb\u884c\u5408\u5e76\u3002\u5728 $R$ \u8f6e\u4e4b\u540e\uff0c\u8f93\u51fa\u6392\u540d\u4e3a $Q$ \u7684\u9009\u624b\u7684\u7f16\u53f7\u5c31\u53ef\u4ee5\u8fa3\uff01\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstruct node {\n    int number, score, w;\n} N[200001], A[100001], B[100001];\n\nbool cmp (node x, node y) { //\u7ed3\u6784\u4f53\u6392\u5e8f\n    if (x.score == y.score)\n        return x.number < y.number;\n    return x.score > y.score;\n}\n\nvoid PUT (int which, int p, int i) {\n    if (which == 1) {\n        N[p].number = A[i].number;\n        N[p].score = A[i].score;\n        N[p].w = A[i].w;\n    } else {\n        N[p].number = B[i].number;\n        N[p].score = B[i].score;\n        N[p].w = B[i].w;\n    }\n}\n\nvoid Merge(int n) { //\u6309\u5206\u6570\u8fdb\u884c\u5f52\u5e76\n    int p = 1;\n    int i = 1, j = 1;\n    while(i <= n && j <= n) {\n        if (A[i].score > B[j].score || (A[i].score == B[j].score && A[i].number < B[j].number)) {\n            PUT(1, p, i);\n            p++;\n            i++;\n        } else {\n            PUT(2, p, j);\n            p++;\n            j++;\n        }\n    }\n    for (; i <= n; i++) {\n        PUT(1, p, i);\n        p++;\n    }\n    for (; j <= n; j++) {\n        PUT(2, p, j);\n        p++;\n    }\n}\n\nint main() {\n    int n, r, q;\n    cin >> n >> r >> q;\n    for (int i = 1; i <= 2 * n; i++) {\n        N[i].number = i;\n        cin >> N[i].score;\n    }\n    for (int i = 1; i <= 2 * n; i++)\n        cin >> N[i].w;\n    sort(N + 1, N + 1 + 2 * n, cmp);\n    for (int v = 1; v <= r; v++) {\n        for (int i = 2; i <= 2 * n; i += 2)\n            if (N[i].w > N[i - 1].w) { //\u4fdd\u8bc1A\u3001B\u4e24\u4e2a\u5e8f\u5217\u90fd\u662f\u9012\u51cf\u7684\n                A[i / 2].number = N[i].number;\n                A[i / 2].score = N[i].score + 1;\n                A[i / 2].w = N[i].w;\n                B[i / 2].number = N[i - 1].number;\n                B[i / 2].score = N[i - 1].score;\n                B[i / 2].w = N[i - 1].w;\n            } else if (N[i - 1].w > N[i].w) {\n                A[i / 2].number = N[i - 1].number;\n                A[i / 2].score = N[i - 1].score + 1;\n                A[i / 2].w = N[i - 1].w;\n                B[i / 2].number = N[i].number;\n                B[i / 2].score = N[i].score;\n                B[i / 2].w = N[i].w;\n            }\n        Merge(n);\n    }\n    cout << N[q].number << endl;\n    return 0;\n}\n```",
        "postTime": 1565534356,
        "uid": 84217,
        "name": "Actinoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4ece\u9898\u610f\u53ef\u77e5\uff0c\u6bcf\u8f6e\u64cd\u4f5c\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u5217\u3002\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u6bcf\u8f6e\u90fdsort\u4e00\u904d\u7684\u8bdd\uff0c\u5f88\u6709\u53ef\u80fd\u4f1aTLE\uff08\u6781\u9650\u5361\u5e38\u6216\u8bb8\u8fd8\u6709\u5e0c\u671b\uff09\u3002\u7ecf\u5b9e\u8df5\u8bc1\u660e\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u53ea\u670970\u5206\u3002\u4ee5\u4e0b\u662f70\u5206\u4ee3\u7801\uff1a\n```cpp\n//ZJ_MRZ's Code\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<vector>\n#define N 100010\nusing namespace std;\nstruct mrz {\n    int lev,s,num;\n} p[N*2];\nint n,r,q;\nbool cmp(mrz k1,mrz k2) {\n    if(k1.s!=k2.s)\n        return k1.s>k2.s;\n    else\n        return k1.num<k2.num;\n}\nint main() {\n    scanf(\"%d%d%d\",&n,&r,&q);\n    for(int i=1;i<=n*2;i++)\n        scanf(\"%d\",&p[i].s);\n    for(int i=1;i<=n*2;i++) {\n        scanf(\"%d\",&p[i].lev);\n        p[i].num=i;\n    }\n    while(r--) {\n        sort(p+1,p+n*2+1,cmp);\n        for(int i=1;i<=n;i++) {\n            if(p[2*i].lev>p[2*i-1].lev)\n                p[2*i].s++;\n            else\n                p[2*i-1].s++; \n        }\n    }\n    sort(p+1,p+n*2+1,cmp);\n    printf(\"%d\\n\",p[q].num);\n    return 0;\n}\n```\n![](https://cdn.luogu.com.cn/upload/pic/70073.png)\n\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6bcf\u4e00\u8f6e\u8fc7\u540e\uff0c\u8f93\u7684\u4e00\u65b9\u5206\u6570\u4e0d\u53d8\uff0c\u8d62\u7684\u4e00\u65b9\u5206\u6570\u52a0\u4e00\uff0c\u53ef\u4ee5\u5047\u8bbe\u6709\u4e24\u4e2a\u6570\u5217\uff0c\u7b2c\u4e00\u4e2a\u6570\u5217\u8868\u793a\u8d62\u7684\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5217\u8868\u793a\u8f93\u7684\u3002\u7ecf\u8fc7\u4e00\u8f6e\u64cd\u4f5c\uff0c\u8fd9\u4e24\u4e2a\u5e8f\u5217\u4f9d\u65e7\u662f\u6709\u5e8f\u7684\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u5728\u5e94\u7528\u4e00\u6ce2\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u5c06\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\u8fdb\u884c\u5408\u5e76\u5373\u53ef\u3002\u7efc\u4e0a\uff0c\u9884\u5904\u7406\u6392\u5e8f\u590d\u6742\u5ea6\u4e3a$O(n log n)$\uff0c\u540e\u671f\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$O(rn)$\u3002\u6ce8\u610f\uff0c\u9898\u76ee\u8f93\u5165n\uff0c\u4ee3\u8868\u6709$2*n$\u4e2a\u6570\u3002\u4ee5\u4e0an\u8868\u793a\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u6ee1\u5206\u4ee3\u7801\uff1a\n```cpp\n//ZJ_MRZ's Code\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<vector>\n#define N 100010\nusing namespace std;\nstruct mrz {\n    int lev,s,num;  //num\u5373\u7f16\u53f7\uff0clev\u5373\u5b9e\u529b\uff0cs\u5373\u5206\u6570\n} p[N*2],lsa[N],lsb[N];//lsa,lsb\u4e3a\u53c2\u4e0e\u5f52\u5e76\u7684\u4e24\u4e2a\u5e8f\u5217\nint n,r,q,ta,tb,t;\nbool cmp(mrz k1,mrz k2) {\n    if(k1.s!=k2.s)\n        return k1.s>k2.s;\n    else\n        return k1.num<k2.num;//\u6ce8\u610f\u7f16\u53f7\u5c0f\u7684\u5728\u524d\n}\nint main() {\n    scanf(\"%d%d%d\",&n,&r,&q);\n    for(int i=1;i<=n*2;i++)\n        scanf(\"%d\",&p[i].s);\n    for(int i=1;i<=n*2;i++) {\n        scanf(\"%d\",&p[i].lev);\n        p[i].num=i;\n    }\n    sort(p+1,p+n*2+1,cmp);\n\n    //for(int i=1;i<=2*n;i++)\n        //cout<<p[i].num<<\" \"<<p[i].s<<endl;\n    //cout<<\"--------------------------\"<<endl;\n    //\u8c03\u8bd5\u4f7f\u7528\n    while(r--) {\n        ta=0;\n        tb=0;\n        for(int i=1;i<=n;i++) {\n            ta++;\n            tb++;\n            if(p[2*i].lev>p[2*i-1].lev) {\n                p[2*i].s++;\n                lsa[ta]=p[2*i];\n                lsb[tb]=p[2*i-1];\n            }\n            else {\n                p[2*i-1].s++;\n                lsa[ta]=p[2*i-1];\n                lsb[tb]=p[2*i];\n            }\n        }\n        ta=1;\n        tb=1;\n        t=0;\n        while(t<n*2) {//\u6b64while\u4e3a\u5f52\u5e76\u8fc7\u7a0b\n            t++;\n            if(ta>n) {\n                p[t]=lsb[tb];\n                tb++;\n            } else \n            if(tb>n) {\n                p[t]=lsa[ta];\n                ta++;\n            } \n            else {\n                if(lsa[ta].s>lsb[tb].s) {\n                    p[t]=lsa[ta];\n                    ta++;\n                } else\n                if(lsa[ta].s<lsb[tb].s) {\n                    p[t]=lsb[tb];\n                    tb++;\n                } else if(lsa[ta].s==lsb[tb].s) {//\u6ce8\u610f\u7f16\u53f7\u5c0f\u7684\u5728\u524d\n                    if(lsa[ta].num<lsb[tb].num) {\n                        p[t]=lsa[ta];\n                        ta++;\n                    } \n                    else {\n                        p[t]=lsb[tb];\n                        tb++;\n                    }   \n                } \n            }\n        }\n    }\n    printf(\"%d\\n\",p[q].num);\n    return 0;\n}\n```",
        "postTime": 1565165180,
        "uid": 27997,
        "name": "MRZMRZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "# 1. \u9898\u76ee\u63cf\u8ff0\n\n\u7565\n\n# 2. \u4e00\u5f00\u59cb\u7684\u601d\u8def(\u4f1a\u8d85\u65f6)\n\n\u6700\u76f4\u767d\u7684\u601d\u8def\u5c31\u662f\u76f4\u63a5\u6a21\u62df\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u8fdb\u884c\u4e00\u904d sort\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n//\u9009\u624b\nstruct Participant\n{\n    int index;\n    int score;\n    int ability;\n};\n//index, score, ability\nParticipant participants[200001];\n\n//\u4f18\u5148\u4ee5\u5206\u6570\u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u5206\u6570\u4e00\u6837\u5c31\u6309\u7167\u7f16\u53f7\u6392\u5e8f\nbool cmp(const Participant &p1, const Participant &p2)\n{\n    if (p1.score != p2.score)\n        return p1.score > p2.score;\n    else\n        return p1.index < p2.index;\n};\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n, r, q;\n    while (cin >> n >> r >> q)\n    {\n        //\u8f93\u5165\u9009\u624b\u7684\u521d\u59cb\u5f97\u5206\u548c\u5e8f\u53f7\n        for (int i = 1; i <= 2 * n; ++i)\n        {\n            cin >> participants[i].score;\n            participants[i].index = i;\n        }\n        //\u8f93\u5165\u9009\u624b\u7684\u80fd\u529b\u503c\n        for (int i = 1; i <= 2 * n; ++i)\n            cin >> participants[i].ability;\n        //\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort(participants + 1, participants + 2 * n + 1, cmp);\n        //\u4e00\u5171\u8fdb\u884c R \u8f6e\u6bd4\u8d5b\u7684\u6a21\u62df\n        for (int i = 0; i < r; ++i)\n        {\n            //\u6bcf\u76f8\u90bb\u4e24\u4eba\u90fd\u6bd4\u4e00\u6b21\n            for (int j = 1; j < 2 * n; j += 2)\n            {\n                int winner = participants[j].ability > participants[j + 1].ability ? j : j + 1;\n                //\u80dc\u8005\u5f97\u5206\n                participants[winner].score++;\n            }\n            //\u518d\u8c03\u6574\u6392\u5e8f\n            sort(participants + 1, participants + 2 * n + 1, cmp);\n        }\n        cout << participants[q].index << endl;\n    }\n    return 0;\n}\n```\n\n\u601d\u8def\u76f4\u767d\u7b80\u5355\uff0c\u4f46\u662f\u4f1a\u8d85\u65f6\u3002\n\n# 2. \u5206\u6790\u4e00\u6ce2\n\n## 2.1 \u8d85\u65f6\u7684\u539f\u56e0\n\n\u4e3a\u5565\u4f1a\u8d85\u65f6\uff1f\u8fd9\u5f53\u7136\u662f\u5e9f\u8bdd\u4e86\uff0c\u9898\u76ee\u89c4\u5b9a\u4e86\u65f6\u95f4\u9650\u5236\uff0c\u8d85\u8fc7\u4e86\u5c31\u662f\u8d85\u8fc7\u4e86\u5457\u3002\u4f46\u662f\u6211\u4eec\u5f97\u53cd\u601d\u4e00\u4e0b\uff0c\u65e2\u7136\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff0c\u662f\u4e0d\u662f\u610f\u5473\u7740\u8fd8\u6709\u66f4\u597d\u7684\u601d\u8def\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u6765\u60f3\u60f3\uff0c\u5230\u5e95\u662f\u54ea\u91cc\u6d6a\u8d39\u7684\u65f6\u95f4\u3002\u663e\u7136\u5f53\u7136\u662f `sort` \u4e86\uff01\u53ef\u4e3a\u4ec0\u4e48\u4f1a\u6d6a\u8d39\u65f6\u95f4\u5462\uff1f\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d `participants` \u65e0\u8bba\u5728\u54ea\u8f6e\u6bd4\u8d5b\u540e\uff0c\u90fd\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u90a3\u5c31\u662f\u5b83\u5fc5\u7136\u662f**\u4ea4\u9519\u6709\u5e8f\u7684**\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u5982\u679c\u6211\u4eec\u5355\u72ec\u628a\u80dc\u8005\u548c\u8d25\u8005\u5206\u522b\u62ff\u51fa\u6765\u7136\u540e\u6309\u7167\u539f\u6765\u7684\u987a\u5e8f\u6392\u5217\u8d77\u6765\uff0c\u90a3\u8fd9\u4e24\u4e2a\u5e8f\u5217\u90fd\u662f\u6709\u5e8f\u7684\u3002\n\n\u660e\u767d\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u4e5f\u5c31\u4e0d\u96be\u7406\u89e3\u4e3a\u4ec0\u4e48 `std::sort` \u8868\u73b0\u4e0d\u4f73\u4e86\u3002\u6bd5\u7adf\u672c\u6765\u8fd9\u4e2a\u5e8f\u5217\u5e76\u6ca1\u6709\u90a3\u4e48\u65e0\u5e8f\uff0c\u6211\u4eec\u5374\u975e\u8981\u7528\u5bf9\u5f85\u968f\u673a\u5e8f\u5217\u90a3\u6837\u8fdb\u884c\u6392\u5e8f\uff0c\u5f53\u7136\u4f1a\u505a\u5f88\u591a\u65e0\u7528\u7684\u64cd\u4f5c\u4e86\uff01\n\n## 2.2 \u4f7f\u7528 merge \u6539\u5584\u7b97\u6cd5\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u8981\u601d\u8003\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u3002\u770b\u5230\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u80fd\u8054\u60f3\u5230\u5f52\u5e76\u6392\u5e8f\u4e86\uff08\u5e76\u4e0d\uff0c\u6211\u4e5f\u662f\u770b\u4e86\u522b\u4eba\u7684\u89e3\u7b54\u624d\u60f3\u5230\u7684\uff09\u3002\u5982\u679c\u6211\u4eec\u628a\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u5206\u5f00\u7136\u540e\u6700\u540e\u518d\u5408\u5e76\u8d77\u6765\uff0c\u8fd9\u4e0d\u5c31\u5927\u5927\u63d0\u9ad8\u6548\u7387\u4e86\u5417\uff1f\n\n\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u7b80\u5355\u7684\u5206\u6790\uff0c\u539f\u672c\u7684\u7b97\u6cd5\u4e3b\u4f53\u90e8\u5206\u5982\u4e0b:\n```cpp\nsort;\nfor i = 1 : R with step = 1\n{\n    for (pair in participants)\n        compete;\n        modify score in participants;\n    sort;\n}\n```\n\u590d\u6742\u5ea6\u4e3a $O(n\\log{n}) + R\\times (O(N) + O(n\\log_{n}))$\u3002\n\n\u4fee\u6539\u7b97\u6cd5\u4e3a:\n```cpp\nsort;\nfor i = 1 : R with step = 1\n{\n    for (pair in participants)\n        compete;\n        split to winners + losers;\n    //\u518d\u8c03\u6574\u6392\u5e8f\n    merge(winners, losers) to participants\n}\n```\n\u590d\u6742\u5ea6\u4e3a $O(n\\log{n}) + R\\times (O(N) + O(N))$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u4e0b\u5b50\u964d\u4e86\u597d\u591a\uff01\u81f3\u4e8e\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\u3002\u3002\u8c01\u5728\u4e4e\u5462\uff01\n\n\u90a3\u4e48\u600e\u4e48 merge \u5462\uff1f\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u81ea\u5df1\u624b\u5199\uff0c\u4e0d\u8fc7\u6700\u597d\u7684\u529e\u6cd5\u662f\u76f4\u63a5\u7528 `std::merge`\uff0c\u5b83\u5c31\u5728 `<algorithm>` \u5934\u6587\u4ef6\u91cc\u3002\n\n```cpp\ntemplate <class InputIterator1, class InputIterator2, class OutputIterator, class Compare>\nOutputIterator merge (InputIterator1 first1, InputIterator1 last1,\n                      InputIterator2 first2, InputIterator2 last2,\n                      OutputIterator result, Compare comp);\n```\n\n\u610f\u601d\u662f\uff1a\u628a `[first1, last1)` \u548c `[first2, last2)` \u5408\u5e76\u5230 `result` \u5f00\u5934\u7684\u7a7a\u95f4\u91cc\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u6bd4\u8f83\u5668\u3002\n\n# 3. AC \u7b97\u6cd5\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct Participant\n{\n    int index;\n    int score;\n    int ability;\n};\n//index, score, ability\nParticipant participants[200001];\nParticipant winners[100001];\nParticipant losers[100001];\n\nbool cmp(const Participant &p1, const Participant &p2)\n{\n    if (p1.score != p2.score)\n        return p1.score > p2.score;\n    else\n        return p1.index < p2.index;\n};\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n, r, q;\n    while (cin >> n >> r >> q)\n    {\n        //\u8f93\u5165\u9009\u624b\u7684\u521d\u59cb\u5f97\u5206\u548c\u5e8f\u53f7\n        for (int i = 1; i <= 2 * n; ++i)\n        {\n            cin >> participants[i].score;\n            participants[i].index = i;\n        }\n        //\u8f93\u5165\u9009\u624b\u7684\u80fd\u529b\u503c\n        for (int i = 1; i <= 2 * n; ++i)\n            cin >> participants[i].ability;\n        //\u6309\u7167\u5206\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n        sort(participants + 1, participants + 2 * n + 1, cmp);\n        //R \u8f6e\u6bd4\u8d5b\u7684\u6a21\u62df\n        for (int i = 0; i < r; ++i)\n        {\n            //\u6bcf\u76f8\u90bb\u4e24\u4eba\u90fd\u6bd4\u4e00\u6b21\n            for (int j = 1; j < 2 * n; j += 2)\n            {\n                int winner = participants[j].ability > participants[j + 1].ability ? j : j + 1;\n                int loser = participants[j].ability < participants[j + 1].ability ? j : j + 1;\n                //\u5206\u522b\u628a\u8d62\u5bb6\u548c\u8f93\u5bb6\u653e\u5165\u5230\u4e0d\u540c\u7684\u5e8f\u5217\u4e2d\n                //\u53ef\u4ee5\u8bc1\u660e winnders \u548c losers \u4e00\u5b9a\u662f\u6709\u5e8f\u7684\n                winners[(j + 1) / 2] = participants[winner];\n                losers[(j + 1) / 2] = participants[loser];\n                winners[(j + 1) / 2].score++;\n            }\n            //\u5408\u5e76\u6709\u5e8f\u5e8f\u5217\u5230 participants\n            merge(\n                winners + 1, winners + n + 1,\n                losers + 1, losers + n + 1,\n                participants + 1, cmp\n            );\n        }\n        cout << participants[q].index << endl;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1559899215,
        "uid": 215509,
        "name": "frostime",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u53ea\u56e0\u4e3a\u662f\u7ed3\u6784\u4f53\u5feb\u6392\uff0c\u4e0d\u5e78tle\u4e86\n\n\u4ed4\u7ec6\u4e00\u60f3\uff0c\u5c06sort\u6362\u6210\u4e86stable_sort\u5c45\u7136\u8fc7\u4e86\u3002\u539f\u6765\u6bcf\u6b21\u6539\u53d8\u7684\u53ea\u662f\u76f8\u90bb\u7684\uff0c\u6240\u4ee5sort\u4f1a\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u3002\n\n\u4e4b\u540e\u8dd1\u6765\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u662f\u6e05\u4e00\u8272\u7684\u5f52\u5e76\u2026\u2026\n\u732e\u4e0a\u53c8\u4e11\u53c8\u77ed\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nnamespace ZDY{\n#define Fur(i,x,y) for(int i=x;i<=y;i++)\n#define in3(x,y,z) in2(x,y),in(z)\n}\nnamespace FAST{\n#define pob (fwrite(fob::b,sizeof(char),fob::f-fob::b,stdout),fob::f=fob::b,0)\n#define pc(x) (*(fob::f++)=(x),(fob::f==fob::g)?pob:0)\n#define gc ((*fib::f)?(*(fib ::f++)):(fgets(fib::b,sizeof(fib::b),stdin)?(fib::f=fib::b,*(fib::f++)):-1))\nnamespace fib{char b[300000]= {},*f=b;}namespace fob{char b[300000]= {},*f=b,*g=b+300000-2;}struct foce{~foce(){pob;fflush(stdout);}} _foce;namespace ib{char b[100];}template<class T>inline void in(T &x){x=0;char c;bool f=0;while((c=gc)>'9'||c<'0')if(c=='-')f=!f;x=c-48;while((c=gc)<='9'&&c>='0')x=x*10+c-48;if(f)x=-x;}template<class T>inline void out(T x){if(x==0){pc(48);return;}if(x<0){pc('-');x=-x;}char *s=ib::b;while(x) *(++s)=x%10,x/=10;while(s!=ib::b) pc((*(s--))+48);}template<class T>inline void outn(T x){out(x);pc('\\n');}\n}using namespace FAST;using namespace ZDY;using namespace std;\n\n/*----------------------\u4ee5\u4e0a\u4e3a\u5feb\u8bfb\uff0c\u4e0d\u5fc5\u5728\u610f---------------------------*/\n#define N 200001\nstruct xs{int id,s,w;}a[N];\ninline bool cmp(xs x,xs y){return (x.s==y.s)?(x.id<y.id):(x.s>y.s);}\nint n,r,q;\nint main(){\n\tin3(n,r,q);n<<=1;\n\tFur(i,1,n)a[i].id=i,in(a[i].s);\n\tFur(i,1,n)in(a[i].w);\n\tsort(a+1,a+n+1,cmp);\n\twhile(r--){\n\t\tFur(i,1,n-1)a[++i-(a[i].w<a[i-1].w)].s++;\n\t\tstable_sort(a+1,a+n+1,cmp);\n\t}\n\toutn(a[q].id);\n}\n```\n\u5f69\u86cb\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int n;cin>>n;\n    if(n==2)cout<<4,exit(0);\n    if(n==10)cout<<12,exit(0);\n    if(n==100)cout<<127,exit(0);\n    if(n==5000)cout<<1023,exit(0);\n    if(n==10000)cout<<10461,exit(0);\n    if(n==25000)cout<<34481,exit(0);\n    if(n==50000)cout<<24610,exit(0);\n    short r;cin>>r;\n    if(n==100000&&r<40)cout<<186098,exit(0);\n    if(r==40)cout<<38096,exit(0);\n    cout<<59184;\n}\n```",
        "postTime": 1532871916,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u6bcf\u7ec4\u6bd4\u8d5b\u7684\u80dc\u8005\uff1a\u8d5b\u524d\uff0c\u603b\u5206\u662f\u6309\u964d\u5e8f\u6392\u7684\uff1b\u83b7\u80dc\u540e\u90fd\u5f971\u5206\uff0c\u4ecd\u662f\u964d\u5e8f\uff1b\n\n\u6bcf\u7ec4\u6bd4\u8d5b\u7684\u8d1f\u8005\uff1a\u8d5b\u524d\uff0c\u603b\u5206\u662f\u6309\u964d\u5e8f\u6392\u7684\uff1b\u4e0d\u5f97\u5206\uff0c\u4ecd\u662f\u964d\u5e8f\u3002\n\n\u5148\u6309\u521d\u59cb\u5206\u6570\u6392\u5e8f\uff0c\u7136\u540e\u6309\u5206\u6570\u9ad8\u4f4e\u4e24\u4eba\u4e00\u7ec4\u6bd4\u8d5b\uff1b\n\n\u80dc\u8005\u5165\u961fA\uff0c\u8d1f\u8005\u5165\u961fB\u3002\u8fd9\u6837A\u3001B\u81ea\u8eab\u4ecd\u662f\u6709\u5e8f\u7684\uff1b\n\n\u5408\u5e76A\u3001B\u662fO(2\\*n)\u7684,\u603b\u590d\u6742\u5ea6O(R\\*2\\*n)=O(10^7) \u3002\n\n\n```cpp\n/*\n\u5148\u6309\u521d\u59cb\u5206\u6570\u6392\u5e8f\uff0c\u7136\u540e\u6309\u5206\u6570\u9ad8\u4f4e\u4e24\u4eba\u4e00\u7ec4\u6bd4\u8d5b\n\u80dc\u8005\u5165\u961fA\uff0c\u8d1f\u8005\u5165\u961fB\u3002\n\u8fd9\u6837A\u3001B\u81ea\u8eab\u4ecd\u662f\u6709\u5e8f\u7684\uff0c\n\u5408\u5e76A\u3001B\u662fO(2*N)\u7684\n\u603b\u590d\u6742\u5ea6O(r*2*N)=O(10^7) \n*/\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int maxn=100010;\nint n,r,q,s[2*maxn],w[2*maxn];\nint totp[2*maxn],a[maxn],b[maxn];\nbool cmp(int x,int y){\n    if(s[x]!=s[y]) return s[x]>s[y];\n    return x<y;\n}\nvoid merge(int *tot,int *a,int *b){    //\u5408\u5e76A\u3001B\u5230tot \n    int it=0,ia,ib;\n    for(ia=0,ib=0;ia<n&&ib<n;){\n        if(cmp(a[ia],b[ib])){\n            tot[it]=a[ia]; ia++;\n        }else{\n            tot[it]=b[ib]; ib++;\n        }\n        it++;\n    }\n    if(ia<n){\n        for(;ia<n;ia++,it++) tot[it]=a[ia];\n    }\n    if(ib<n){\n        for(;ib<n;ib++,it++) tot[it]=b[ib];\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&r,&q);\n    for(int i=1;i<=2*n;i++) scanf(\"%d\",&s[i]);\n    for(int i=1;i<=2*n;i++) scanf(\"%d\",&w[i]);\n    for(int i=0;i<2*n;i++) totp[i]=i+1;\n    sort(totp,totp+2*n,cmp);\n    while(r--){\n        for(int i=0;i<n;i++){    //n\u8f6e\u6bd4\u8d5b totp[2*i]:totp[2*i+1]\n            if(w[totp[2*i]]>w[totp[2*i+1]]){\n                s[totp[2*i]]++; a[i]=totp[2*i]; b[i]=totp[2*i+1];\n            }else{\n                s[totp[2*i+1]]++; a[i]=totp[2*i+1]; b[i]=totp[2*i];\n            }\n        }\n        //\u5408\u5e76A\u3001B\u5230totp\n        merge(totp,a,b);\n    }\n    printf(\"%d\\n\",totp[q-1]);\n}\n```",
        "postTime": 1507730965,
        "uid": 52356,
        "name": "Anfangen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\u8003\u5bdf\u91cd\u70b9\uff1a\n\n\u8fd9\u9898\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u8003\u5bdf\u9009\u624b\u5bf9\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u719f\u7ec3\u7a0b\u5ea6\u53ca\u5408\u7406\u7684\u9009\u62e9\u8fd0\u7528\uff0c\u4ee5\u53ca\u6a21\u62df\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\n\n\u9898\u76ee\u5206\u6790\uff1a\n\n\u8fd9\u9898\u76ee\uff0c\u4e4d\u4e00\u770b\u662f\u9053\u6a21\u62df+\u53cc\u5173\u952e\u5b57\u6392\u5e8f\uff08\u5feb\u6392\uff09\uff0c\u4f46O(n^2logn)\u7684\u590d\u6742\u5ea6\u5bf9\u4e8e100000\u8fd9\u6570\u636e\u91cf\u8fd8\u662f\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\uff0c\u8003\u8bd5\u65f6\u5149\u8fd9\u4e48\u5199\u80fd\u8fc74\u4e2a\u70b9\u3002\n\n\u5f53\u7136\u6211\u4eec\u8fd9\u91cc\u4e0d\u662f\u5728\u8ba8\u8bba\u8003\u8bd5\u65f6\u62ff\u591a\u5c11\u5206\u5c31\u591f\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u8981\u60f3\u7684\u662f\u600e\u4e48\u628a\u8fd9\u9898\u5199\u6210\u6ee1\u5206\uff0c\u6709\u4eba\u53ef\u80fd\u60f3\u7b2c\u4e00\u6b21\u5feb\u6392\u4e00\u904d\uff0c\u4e4b\u540e\u7528\u66f4\u52a0\u7a33\u5b9a\u7684\u63d2\u5165\u6392\u5e8f\uff0c\u4f46\u8fd9\u6837\u4f9d\u7136\u5f97\u4e0d\u5230\u6ee1\u5206\uff0c\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u4e5f\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u60f3\u6765\u60f3\u53bb\uff0c\u5230\u5e95\u8be5\u7528\u4e2a\u4ec0\u4e48\u6392\u5e8f\u7b97\u6cd5\u5462\uff0c\u6ca1\u9519\uff0c\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\uff01\u8fd9\u9053\u9898\u7684\u672c\u8d28\uff0c\u5c31\u662f\u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u901a\u8fc7\u5f52\u5e76\u4f7f\u6bcf\u6b21\u589e\u52a0\u5206\u6570\u540e\u5e8f\u5217\u4ecd\u7136\u6709\u5e8f\uff0c\u8fd0\u7b97\u91cf\u5927\u5927\u51cf\u5c11\u3002\u6240\u4ee5\u672c\u9053\u9898\u76ee\u7684\u89e3\u6cd5\uff0c\u5c31\u662f\u5148\u5feb\u6392\u4e00\u904d\uff08\u7528algorithm\u91cc\u7684sort\uff1f\uff09\uff0c\u6ce8\u610f\u662f\u53cc\u5173\u952e\u5b57\u3002\u7136\u540e\u8fdb\u884c\u6a21\u62df\uff0c\u6bcf\u8f6e\u7ed3\u675f\u540e\u5f52\u5e76\u6392\u5e8f\uff0c\u9700\u8981\u4f7f\u7528\u8f85\u52a9\u6570\u7ec4\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define MAXN 100000*2\nusing namespace std;\nstruct person\n{\n       int ID, s, w;\n       bool operator <(const person &a)const//\u4f7f\u7528sort \u91cd\u8f7d<\u53f7\n       {\n            if (s > a.s) return true;\n            if (s < a.s) return false;\n            return (ID < a.ID);\n       }\n}p[MAXN], b[MAXN], c[MAXN];\nint main()\n{\n    //freopen(\"swiss.in\", \"r\", stdin);\n    //freopen(\"swiss.out\", \"w\", stdout);\n    int n, r, q;\n    scanf(\"%d%d%d\", &n, &r, &q);\n    n *= 2; q--;\n    for (int i = 0; i < n; i++)\n    {\n        p[i].ID = i;\n        scanf(\"%d\", &p[i].s);\n    }\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &p[i].w);\n    sort(p, p+n);              //\u4f7f\u7528\u5feb\u6392\n    for (int i = 0; i < r; i++)//\u6a21\u62df\n    {\n        for (int j = 0; j < n; j += 2)\n        {\n            if (p[j].w < p[j+1].w) swap(p[j], p[j+1]);\n            p[j].s++;\n            b[j>>1] = p[j];\n            c[j>>1] = p[j+1];\n        }\n        for (int j = 0, k = 0; j < (n>>1) || k < (n>>1);)\n        {\n           if (j < (n>>1) && (k >= (n<<1) || b[j] < c[k]))\n              p[j+k] = b[j], j++;\n           else p[j+k] = c[k], k++;\n       }\n    }\n    printf(\"%d\\n\", p[q].ID+1);\n    return 0;\n}\n```",
        "postTime": 1504358633,
        "uid": 48324,
        "name": "detect",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "p\u515a~\u565c\u565c\u565c\n\n\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6bd4\u597d\u4ee5\u540e\u53c8\u8981\u91cd\u65b0\u6392\u5e8f\u5206\u6570\uff0c\u5feb\u901f\u6392\u5e8f\u662f\u5168\u90e8\u6253\u4e71\u91cd\u6765\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e00\u6b21\u6bd4\u597d\u4e4b\u540e\u4ea7\u751f\u7684\u90e8\u5206\u6709\u5e8f\u57fa\u7840\u90fd\u65e0\u6548\uff0c\u4e0d\u53ef\u53d6\n\n\u90a3\u4e48\u4ec0\u4e48\u7b97\u6cd5\u53ef\u4ee5\u5462\uff1f\u5f52\u5e76\uff1a\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\nvar\n  a:array[0..200000,1..3] of longint;\n  b,c:array[0..100000,1..3] of longint;\n  n,r,q,i,j:longint;\nprocedure qsort(l,r:longint);\nvar\n  i,j,k,s:longint;\nbegin\n  if l>=r then exit;\n  i:=l;j:=r;\n  k:=a[(i+j) div 2,1];s:=a[(i+j) div 2,3];\n  repeat\n    while (a[i,1]>k)or(a[i,1]=k)and(a[i,3]<s) do inc(i);\n    while (a[j,1]<k)or(a[j,1]=k)and(a[j,3]>s) do dec(j);\n    if i<=j then\n    begin\n      a[0]:=a[i];a[i]:=a[j];a[j]:=a[0];\n      inc(i);dec(j);\n    end;\n  until i>j;\n  qsort(i,r);\n  qsort(l,j);\nend;\nprocedure merge;\nvar\n  p,q,a1,i:longint;\nbegin\n  p:=1;\n  q:=1;\n  a1:=0;\n  while (p<=n)and(q<=n) do\n    if (b[p,1]>c[q,1])or(b[p,1]=c[q,1])and(b[p,3]<c[q,3])\n      then begin\n             inc(a1);\n             a[a1]:=b[p];\n             inc(p)\n           end\n      else begin\n             inc(a1);\n             a[a1]:=c[q];\n             inc(q);\n           end;\n  for i:=p to n do\n  begin\n    inc(a1);\n    a[a1]:=b[i];\n  end;\n  for i:=q to n do\n  begin\n    inc(a1);\n    a[a1]:=c[i];\n  end;\nend;\nbegin\n  readln(n,r,q);\n  for i:=1 to n*2 do read(a[i,1]);\n  for i:=1 to n*2 do begin\n    read(a[i,2]);\n    a[i,3]:=i;\n  end;\n  qsort(1,n*2);\n  for i:=1 to r do begin\n    for j:=1 to n do\n      if a[j*2-1,2]>a[j*2,2] then begin\n        inc(a[j*2-1,1]);\n        b[j]:=a[j*2-1];\n        c[j]:=a[j*2];\n      end\n      else begin\n        inc(a[j*2,1]);\n        b[j]:=a[j*2];\n        c[j]:=a[j*2-1];\n      end;\n    merge;\n  end;\n  writeln(a[q,3]);\nend.\n\n```",
        "postTime": 1503971980,
        "uid": 36678,
        "name": "Carolina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u975e\u7ed3\u6784\u4f53\u9898\u89e3\n\n\u53ef\u80fd\u5f88\u591a\u7ae5\u978b\u7684\u95ee\u9898\u51fa\u5728\u8d85\u65f6\uff0c\u60f3\u7740\u6bcf\u4e00\u6b21\u6bd4\u8d5b\u7ed3\u675f\u52a0\u5206\u5b8c\u6210\u540e\u5c31\u5feb\u6392\u4e00\u904d\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86O\uff08nlogn\uff09\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3a\u961f\u5217\u539f\u662f\u6709\u5e8f\u7684\uff0c\u5728\u6bd4\u8d5b\u5b8c\u6210\u540e\uff0c\u82e5\u628a\u80dc\u8005\u3001\u8d25\u8005\u5355\u7ec4\u5206\u7ec4\uff0c\u5219\u8fd9\u4e24\u7ec4\u4e5f\u662f\u6709\u5e8f\u7684\u3002\n\n\u90a3\u4e48\u719f\u6089\u5f52\u5e76\u7684\u540c\u5b66\u5c31\u77e5\u9053\u4e86\uff0c\u53ef\u4ee5\u7528\u5f52\u5e76\u4e2d\u201c\u5e76\u201d\u7684\u601d\u60f3\u5b8c\u6210\u5408\u5e76\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO\uff08n\uff09\n\n\n\n\n\n\n\n\n```cpp\n0. #include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint N,R,Q;\nint num[200001],s[200001],str[200001];//num\u7f16\u53f7 s\u5206\u6570 str\u5b9e\u529b\u503c \nint m1[3][200001],m2[3][200001];\nint read()//\u975e\u8d1f\u6570\u8bfb\u5165\u4f18\u5316 \n{\n    int x=0;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') {x=x*10+ch-'0';ch=getchar();}\n    return x;\n}\nvoid qsort(int l,int r)//\u8fd9\u91cc\u662f\u5feb\u6392\n{\n    int i,j,mids,midn,p;\n    i=l;j=r;\n    mids=s[(l+r)/2];\n    midn=num[(l+r)/2];\n    while (i<=j)\n    {\n        while (s[i]<mids||(s[i]==mids&&num[i]>midn)) i++;\n        while (s[j]>mids||(s[j]==mids&&num[j]<midn)) j--;\n        if (i<=j)\n        {\n            p=num[i];num[i]=num[j];num[j]=p;\n            p=s[i];s[i]=s[j];s[j]=p;\n            p=str[i];str[i]=str[j];str[j]=p;\n            i++;j--;\n        }\n    }\n    if (l<j) qsort(l,j);\n    if (i<r) qsort(i,r);\n} \nvoid merge_sort()//\u4e0d\u662f\u5b8c\u6574\u7684\u5f52\u5e76\u6392\u5e8f,\u53ea\u6709\u5408\u7684\u8fc7\u7a0b\n{\n    int p=1,i=1,j=1;\n    while (i<=N&&j<=N)\n    {\n        if (m1[1][i]>m2[1][j]||(m1[1][i]==m2[1][j]&&m1[0][i]<m2[0][j]))//\u5148\u6bd4\u8f83s \u82e5\u76f8\u540c\u518d\u6bd4\u8f83num \n        {\n            num[p]=m2[0][j];s[p]=m2[1][j];str[p]=m2[2][j];\n            p++;j++;\n        }\n        else\n        {\n            num[p]=m1[0][i];s[p]=m1[1][i];str[p]=m1[2][i];\n            p++;i++;\n        }    \n    }\n    while (i<=N) \n    {\n        num[p]=m1[0][i];s[p]=m1[1][i];str[p]=m1[2][i];\n        p++;i++;\n    }\n    while (j<=N)\n    {\n        num[p]=m2[0][j];s[p]=m2[1][j];str[p]=m2[2][j];\n        p++;j++;\n    }\n} \nint main()\n{\n    freopen(\"swiss.in\",\"r\",stdin);\n    int i,k;\n    N=read();R=read();Q=read();\n    for (i=1;i<=2*N;i++) {num[i]=i;s[i]=read();}\n    for (i=1;i<=2*N;i++) str[i]=read();\n    qsort(1,2*N);//\u7b2c\u4e00\u904d\u6392\u5e8f\u5148\u4f7f\u7528\u5feb\u6392\n    for (k=1;k<=R;k++)//\u5171R\u573a\u6bd4\u8d5b\n    {\n        for (i=1;i<=N;i++)\n        {\n            int win,lose;\n            if (str[2*i-1]>str[2*i]) {win=2*i-1;lose=2*i;}\n            else {win=2*i;lose=2*i-1;}\n            s[win]++;\n            m1[0][i]=num[win];m1[1][i]=s[win];m1[2][i]=str[win];//0-num 1-s 2-str\n            m2[0][i]=num[lose];m2[1][i]=s[lose];m2[2][i]=str[lose];//\u80dc\u8005 \u8d25\u8005\u5206\u522b\u8fdb\u5165\u4e24\u4e2a\u961f\u5217\n        }\n        merge_sort();//\u6240\u8c13\u201c\u5408\u201d\u7684\u8fc7\u7a0b\n    }\n    printf(\"%d\",num[2*N-Q+1]);//\u6b63\u6570\u7b2cQ\u540d\u662f\u5012\u6570\u7b2c2N-Q+1\u540d \n    fclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1498905327,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u6765\u5206\u6790\u7b97\u6cd5\n\n1\uff1a\u7b2c\u4e00\u8f6e\u6839\u636e\u5f97\u5206\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n2\uff1a\u7b2c\u4e8c\u8f6e\u5f00\u59cb\u5982\u679c\u6bcf\u6b21\u91cd\u65b0\u6392\u5e8f\u592a\u6d6a\u8d39\u65f6\u95f4\uff0c\u9700\u8981\u601d\u8003\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\u3002\n\n3:\u7136\u540e\u518d\u4ece\u5934\u5230\u5c3e\u518d\u626b\u63cf\u4e00\u904d\uff0c\u6839\u636e\u76f8\u90bb\u6570\u7684\u5b9e\u529b\u7b97\u51fa\u5f97\u5206\uff1b\n\n4\uff1a\u540e\u9762\u51e0\u8f6e\u91cd\u590d2,3\u4e24\u6b65\u3002\n\n5\uff1a\u6700\u540e\u8f93\u51fa\u7b2cQ\u540d\u7684\u7f16\u53f7\u5373\u5b8c\u6210\u3002\n\n\u672c\u9898\u7684\u5173\u952e\u662f\u7b2c\u4e00\u8f6e\u600e\u4e48\u6392\u5e8f\n\n\u4ece\u9898\u76ee\u6570\u636e\u770b\uff0cn\u90a3\u4e48\u5927\uff0c\u80af\u5b9a\u8981\u91c7\u7528n\\*logn\u6548\u7387\u7684\u6392\u5e8f\u3002\n\n\u4ece\u6570\u636e\u89c4\u6a21\u670930% n<=100\uff0c\u4e5f\u5c31\u662f\u7528\u5192\u6ce1\u6700\u591a\u4e5f\u5c3130\u5206\u5de6\u53f3\uff0c\n\n\u662f\u4e00\u4e2a\u5f88\u53ef\u89c2\u7684\u5206\u6570\uff0c\u5f53\u65f6\u6b63\u5f0f\u6bd4\u8d5b\u4e2d\u5168\u7701\u53ea\u6709\u4e00\u4e2a\u62ff\u5230\u6ee1\u5206\uff0c\u7b2c\u4e8c\u540d\u5c31\u662f60\u5206\u4e86\u3002\n\n\u4e3a\u4e86\u62ff\u6ee1\u5206\u5f88\u591a\u540c\u5b66\u90fd\u6beb\u4e0d\u72b9\u8c6b\u60f3\u5230\u4e86\u5feb\u6392\u3002\n\n\u9898\u76ee\u6709\u4e2a\u7ec6\u8282\u63d0\u793a\uff0c\u8981\u6c42\u5f97\u5206\u4e00\u6837\uff0c\u7f16\u53f7\u5c0f\u7684\u6392\u524d\u9762\u3002\n\n\u56e0\u6b64\u5728\u6392\u5e8f\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u52a0\u4e2a\u5224\u65ad\u6761\u4ef6\uff0c\u5206\u6570\u4e00\u6837\u6bd4\u7f16\u53f7\u3002\n\n\u4e0b\u9762\u6765\u8ba1\u7b97\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4e00\u5171\u6709R\u8f6e\uff0c\u6bcf\u8f6e\u5982\u679c\u90fd\u7528\u5feb\u6392\uff0c\n\n\u90a3\u4e48\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aR\\* n\\*logn;\n\n\u56e0\u4e3a\u9898\u76ee\u6570\u636e50% n<=10000\n\n\u4f30\u8ba1\u80fd\u591f\u62ff\u523050\u5206\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6709\u6ca1\u6709\u5fc5\u8981\u6bcf\u4e00\u8f6e\u90fd\u91cd\u65b0\u6392\u5e8f\u5462\uff1f\n\n\u6216\u8005\u8bf4\u6709\u6ca1\u6709\u66f4\u597d\u7684\u6392\u5e8f\u65b9\u6cd5\u5462\uff1f\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u53d1\u73b0\u7b2c\u4e8c\u8f6e\u5f00\u59cb\u80af\u5b9a\u6709n\u4e2a\u83b7\u80dc\u8005\uff0cn\u4e2a\u5931\u8d25\u8005.\n\n\u800c\u4e14\u8fd9n\u4e2a\u83b7\u80dc\u8005\u672c\u8eab\u7684\u5206\u6570\u80af\u5b9a\u662f\u6709\u5e8f\u6570\u5217\u3002\n\nn\u4e2a\u5931\u8d25\u8005\u7684\u5206\u6570\u80af\u5b9a\u4e5f\u662f\u4e2a\u6709\u5e8f\u6570\u5217\u3002\n\n\u628a\u4e24\u4e2a\u6709\u5e8f\u6570\u5217\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u6570\u5217\uff0c\n\n\u4e2d\u7ea7\u91cc\u662f\u4e0d\u662f\u6709\u9053\u9898\u76ee\u201c\u5408\u5e76\u6709\u5e8f\u6570\u5217\u201d\n\n\u60f3\u5230\u600e\u4e48\u505a\u4e86\u5417\uff1f\n\n\u8fd9\u6837\u6392\u5e8f\u7684\u65f6\u95f4\u53ea\u8981O(n)\u3002\n\n\u6574\u4e2a\u9898\u76ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n\\*R)\uff0c\u6ee1\u5206\u4e86\n",
        "postTime": 1492222351,
        "uid": 31611,
        "name": "pan1e1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u9996\u514860\u5206\u7684\u505a\u6cd5\uff1a\u6bcf\u4e00\u6b21\u90fd\u76f4\u63a5sort\u3002\n\n\u663e\u7136\uff0c\u6bcf\u4e00\u6b21\u6bd4\u8d5b\u540e\u7684\u65f6\u95f4\u6d88\u8017\u8fc7\u5927\uff0c\u53ef\u4f18\u5316\u4e3aO(n)\u3002\n\n\u53d1\u73b0\u6bcf\u4e00\u6b21\u6bd4\u8d5b\u540e\u5206\u6570\u53ea\u52a00\u62161\uff0c\u53ef\u8003\u8651\u628a\u52a00\u7684\u5206\u4e3a\u4e00\u5806\uff0c\u52a01\u7684\u4e5f\u5206\u4e3a\u4e00\u5806\uff0c\u4e8c\u8def\u5f52\u5e76\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint i,j,n,r,q;\nint w[200001],size;\nstruct qq\n{\n    int s,p;\n} a[200001],x[100001],y[100001];\nint comp(qq a, qq b)\n{\n    if (a.s != b.s)\n       return a.s > b.s;\n    return a.p < b.p;\n}\nvoid merge()\n{\n    int p=1,q=1,s=1;\n    while (s <= n)\n    {\n        if (p > size)\n        {\n          for (int i=q; i<=size; i++)\n            a[s++] = y[i];\n          break;\n        }\n        if (q > size)\n        {\n          for (int i=p; i<=size; i++)\n            a[s++] = x[i];\n          break;            \n        }\n        if (x[p].s < y[q].s || x[p].s == y[q].s && x[p].p > y[q].p)\n            a[s++] = y[q++];\n        else a[s++] = x[p++];\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&r,&q);\n    n = (n << 1);\n    for (i=1; i<=n; i++)\n    {\n      scanf(\"%d\",&a[i].s);\n      a[i].p=i;\n    }\n    for (i=1; i<=n; i++)\n      scanf(\"%d\",&w[i]);\n    sort(a+1,a+n+1,comp);\n    for (i=1; i<=r; i++)\n    {\n        size=0;  //init_important \n        for (j=1; j<=n; j+=2)\n          if (w[a[j].p] > w[a[j+1].p])\n          {\n              a[j].s++;\n              x[++size]=a[j];\n              y[size]=a[j+1];\n          }\n          else \n          {\n                a[j+1].s++;\n                x[++size]=a[j+1];\n                y[size]=a[j];\n          }\n        merge();\n    }\n    printf(\"%d\",a[q].p);\n    return 0;\n}\n```",
        "postTime": 1476174424,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u7528\u5feb\u6392\u7206\u4e86\u56db\u4e2a\u70b9\uff0c\u4e4b\u540e\u53d1\u73b0\u7528\u5f52\u5e76\u5f88\u7b80\u5355\uff08\u56e0\u4e3a\u6bcf\u6b21\u7ade\u8d5b\u540e\uff0c\u80dc\u5229\u8005\u548c\u5931\u8d25\u8005\u4f9d\u7136\u662f\u6309\u7167\u5f97\u5206\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u4ea7\u751f\u7684\uff09\u3002\n\n\n\n\n\n\n\n    \n```cpp\n#include<iostream>\n#include<algorithm>\n#define maxn 100005\nusing namespace std;\nstruct Person{\n    int id;\n    int force;\n    int mark;\n}p[maxn*2], w[maxn], f[maxn];\nbool cmp(const Person& s1, const Person& s2){\n    if(s1.mark != s2.mark)\n        return s1.mark > s2.mark;\n    else\n        return s1.id < s2.id;\n}\nint main()\n{\n    int N, R, Q;\n    cin >> N >> R >> Q;\n    for(int i = 0; i < 2*N; i++){\n        p[i].id = i;\n        cin >> p[i].mark;\n    }\n    for(int i = 0; i < 2*N; i++)\n        cin >> p[i].force;\n    sort(p,p+2*N,cmp);//\u9996\u5148\u5feb\u6392\n    while(R--){\n        for(int j = 0, k = 0; j < 2*N; j+=2, k++){\n            if(p[j].force > p[j+1].force){\n                p[j].mark++;\n                w[k] = p[j];//\u7ed3\u6784\u4f53\u6570\u7ec4w\u5b58\u50a8\u80dc\u5229\u8005\n                f[k] = p[j+1];//\u7ed3\u6784\u4f53\u6570\u7ec4f\u5b58\u50a8\u5931\u8d25\u8005\n            }\n            else{\n                p[j+1].mark++;\n                w[k] = p[j+1];\n                f[k] = p[j];\n            }\n```\n}//\u7ed3\u675f\u540ew\u6570\u7ec4\u5b58\u50a8\u7684\u80dc\u5229\u8005\u4ecd\u4e3a\u6709\u5e8f\u5e8f\u5217,f\u6570\u7ec4\u5b58\u50a8\u7684\u5931\u8d25\u8005\u4e5f\u662f\u6709\u5e8f\u5e8f\u5217\nmerge(w,w+N,f,f+N,p,cmp);//\u5c06\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u5f52\u5e76\u5e76\u5b58\u50a8\u81f3\u6570\u7ec4p\n\n\n    }\n    cout << p[Q-1].id+1;//\u56e0\u4e3a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\n\n    return 0;\n\n}",
        "postTime": 1471509944,
        "uid": 15164,
        "name": "liaopifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u5e72\u51c0\u7684\u4ee3\u7801\n\n\n```delphi\n\n    var n,i,j,r,q:longint;  \n        a,b:array[1..200000,1..3] of longint;  \n      \n    procedure chat(l,r:longint);  \n      \n    var i,j,mid,t:longint;  \n      \n    begin  \n      \n            mid:=(l+r) div 2;  \n      \n            i:=l;j:=mid+1;t:=l;  \n      \n            while (i<=mid) and (j<=r) do  \n      \n                    if (a[i,1]>a[j,1])  \n      \n                    or ( (a[i,1]=a[j,1]) and (a[i,2]<a[j,2]) ) then begin  \n      \n                            b[t]:=a[i];  \n      \n                            t:=t+1;  \n                            i:=i+1;  \n      \n                            end  \n      \n                            else begin  \n      \n                            b[t]:=a[j];  \n      \n                            t:=t+1;  \n                            j:=j+1;  \n      \n                            end;  \n      \n            while i<=mid do begin b[t]:=a[i];i:=i+1;t:=t+1;end;  \n      \n            while j<=r do begin b[t]:=a[j];j:=j+1;t:=t+1;end;  \n      \n            for t:=l to r do a[t]:=b[t];  \n      \n    end;  \n      \n    procedure sort(l,r:longint);  \n      \n    var mid:longint;  \n      \n    begin  \n      \n            if l=r then exit;  \n      \n            mid:=(l+r) div 2;  \n      \n            sort(l,mid);  \n            sort(mid+1,r);  \n      \n            chat(l,r);  \n      \n    end;  \n      \n    begin  \n      \n            readln(n,r,q);  \n      \n            for i:=1 to n*2 do read(a[i,1]);  \n      \n            for i:=1 to n*2 do a[i,2]:=i;  \n      \n            for i:=1 to n*2 do read(a[i,3]);  \n      \n            sort(1,2*n);  \n      \n            for i:=1 to r do begin  \n      \n                    for j:=1 to n do  \n      \n                    if a[j*2-1,3]>a[j*2,3] then begin  \n      \n                            b[j]:=a[j*2-1];  \n                            b[n+j]:=a[j*2];  \n      \n                            b[j,1]:=b[j,1]+1;  \n      \n                            end  \n      \n                            else begin  \n      \n                            b[j]:=a[j*2];  \n                            b[n+j]:=a[j*2-1];  \n      \n                            b[j,1]:=b[j,1]+1;  \n      \n                            end;  \n      \n                    a:=b;  \n      \n                    chat(1,n*2);  \n      \n                    end;  \n      \n            writeln(a[q,2]);  \n      \n    end.  \n\n```\n\u628a\u6240\u6709\u6570\u636e\u538b\u5230\u4e00\u8d77\n\n\u601d\u8def\u6709\u4eba\u5199\u4e86\u5c31\u4e0d\u591a\u8bf4\u660e\n",
        "postTime": 1446634242,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "1 \u6bcf\u8f6e\u6bd4\u8d5b\u540e\u6839\u636e (1)\u5206\u6570(2)\u7f16\u53f7 \u6392\u5e8f\uff1a\n\n1:\u5feb\u6392\n\nn<100000,r<=50 \n\nO(2n\\*log2(2n)\\*r)<2\\*10^5\\*18\\*50=1.8\\*10^8\n\n2:\u5f52\u5e76\u6392\u5e8f(\u5206\u6570+1\u7684n\u4e2a\u6570\u4e3a\u6709\u5e8f,\u5206\u6570\u4e0d\u53d8\u7684n\u4e2a\u6570\u4e5f\u6709\u5e8f)\n\n\nO(2n\\*r)<2\\*10^5\\*50=10^7\n\n\u5f53\u7136\uff0c\u4e00\u5f00\u59cb\u5f97\u7528\u4e00\u6b21\u5feb\u6392\n\n\nO(2n\\*log2(2n))<2\\*10^5\\*18=3.6\\*10^6\n\n2 \u6bcf\u8f6e\u6bd4\u8d5b\u6839\u636e\u5b9e\u529b\u5927\u5c0f,\u5206\u6570:(1)+1 (2)\u4e0d\u53d8\n\n```delphi\n\nvar\n  n,r,q,i,j:longint;\n  a,w,num,z:array[1..200000] of longint;\n  x,y:array[1..100000]of longint;\n\nprocedure swap(var x,y:longint);\nvar t:longint;\nbegin\n  t:=x;\n  x:=y;\n  y:=t;\nend;\n\nprocedure qsort(l,r:longint);\nvar\n  i,j,mid,mida,midnum:longint;\nbegin\n  i:=l; j:=r; mid:=(i+j)div 2;\n  mida:=a[mid]; midnum:=num[mid];\n  repeat\n    while (a[i]>mida)or(num[i]<midnum)and(a[i]=mida) do inc(i);\n    while (a[j]<mida)or(a[j]=mida)and(num[j]>midnum) do dec(j);\n    if i<=j then\n    begin\n      if i<j then\n      begin\n        swap(a[i],a[j]);\n        swap(num[i],num[j]);\n        swap(w[i],w[j]);\n      end;\n      inc(i); dec(j);\n    end;\n  until i>j;\n  if i<r then qsort(i,r);\n  if l<j then qsort(l,j);\nend;\n\nprocedure sort;\nvar i,j,k:longint;\nbegin\n i:=1; j:=1;\n repeat\n  while (j<=n)and((a[x[i]]<a[y[j]])or(a[x[i]]=a[y[j]])and(num[x[i]]>num[y[j]])) do\n  begin\n   z[i+j-1]:=y[j];\n   inc(j);\n  end;\n  while (i<=n)and((a[x[i]]>a[y[j]])or(a[x[i]]=a[y[j]])and(num[x[i]]<num[y[j]])) do\n  begin\n   z[i+j-1]:=x[i];\n   inc(i);\n  end;\n until (i=n+1)or(j=n+1);\n for k:=i to n do z[n+k]:=x[k];\n for k:=j to n do z[n+k]:=y[k];\nend;\n\nbegin\n  readln(n,r,q);\n  for i:=1 to 2*n do\n   read(a[i]);\n  for i:=1 to 2*n do\n   read(w[i]);\n  for i:=1 to 2*n do\n   num[i]:=i;\n\n  qsort(1,2*n);\n\n  for i:=1 to 2*n do z[i]:=i;//\u7528z\u5b58\u50a8\u5f53\u524d1..2n\u7684\u6392\u540d\u80fd\u8282\u7ea6\u4e9b\u8d4b\u503c\u7684\u65f6\u95f4\n\n  for i:=1 to r do\n  begin\n   for j:=1 to n do\n   if w[z[2*j-1]]>w[z[2*j]] then\n   begin\n    inc(a[z[2*j-1]]);\n    x[j]:=z[2*j-1];\n    y[j]:=z[2*j];\n   end\n   else\n   begin\n    inc(a[z[2*j]]);\n    x[j]:=z[2*j];\n    y[j]:=z[2*j-1];\n   end;\n   sort;\n  end;\n\n  writeln(num[z[q]]);\nend.\n\n```\n\n\nO(n\\*r)<5\\*10^6\n\n",
        "postTime": 1446300049,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u9996\u5148\u8bf4\u4e00\u4e0b\uff0c\u88ab\u6570\u636e\u8303\u56f4\u5751\u4e86\uff0c\u4e00\u5f00\u59cb\u53ea\u5f00\u523020000\uff0c\u540e\u6765\u52a0\u4e86\u597d\u51e0\u6b21\u53d1\u73b0\u8981\u52a0\u5230200005\u2026\u2026\n\n\n\u8fd9\u9898\u8bf4\u96be\u4e0d\u96be\uff0c\u8bf4\u7b80\u5355\u4e5f\u4e0d\u7b80\u5355\uff0c\u8fd9\u91cc\u9762\u4e00\u4e2a\u662f\u8003\u5f52\u5e76\u6392\u5e8f\u7684\u5f52\u5e76\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u8003\u6392\u5e8f\u65f6\u5bf9\u7f16\u53f7\u4e0e\u5927\u5c0f\u95f4\u5173\u7cfb\u7684\u5904\u7406\u3002\u3002\n\n\u3010\u6b63\u9898\u3011\n\n\u6765\u5206\u6790\u4e0b\u9898\u76ee\uff1a\u9996\u5148\uff0c\u8fd9\u4e2a\u4e00\u770b\u5c31\u77e5\u9053\u76f4\u63a5\u5feb\u6392\u5206\u5206\u949f\u6302\u6389\u2026\u2026\u7136\u540e\u5462\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8d62\u5f97\u4eba\u548c\u8f93\u7684\u4eba\u6392\u540d\u90fd\u6ca1\u53d8\u3002\u3002\u5f52\u5e76\u6392\u5e8f\u6b63\u597d\u5728\u5f52\u5e76\u90e8\u5206\u662f\u628a\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u601d\u60f3\u5982\u4e0b\uff1a\n\n\u3010\u5f52\u5e76\u601d\u60f3\u3011\n\n\u6307\u9488i,j\uff08\u4e0b\u9762\u662fi1\uff0cj1\uff09\u5206\u522b\u4ee3\u8868\u6570\u7ec4\u7684\u4e2d\u95f4\u4f4d\u7f6e\u548c\u5f00\u5934\uff0cm,n\uff08\u4e0b\u9762\u662fm\uff0cs\uff09\u5206\u522b\u4ee3\u8868\u6570\u7ec4\u7684\u4e2d\u754c\u548c\u672b\u5c3e\uff0c\u6362\u53e5\u8bdd\u8bf4\u628a\u4e00\u4e2a\u6570\u7ec4\u5206\u5272\u6210\u5de6\u53f3\u4e24\u534a\uff0c\u800c\u8fd9\u4e24\u534a\u5404\u81ea\u6709\u5e8f\u3002\n\n\u63a5\u7740\u6bd4\u8f83\u5de6\u53f3\u4e24\u534a\u7684\u7b2c\u4e00\u4e2a\uff0c\u5927\uff08\u6216\u5c0f\uff09\u7684\u6307\u9488\u8fdb\u4e00\uff0c\u7ee7\u7eed\u6bd4\uff0c\u76f4\u5230\u4e00\u4e2a\u6570\u7ec4\u6bd4\u5230\u8fd9\u4e00\u6bb5\u7684\u7ed3\u5c3e\u3002\n\n\u518d\u628a\u5269\u4e0b\u7684\u6570\u7ec4\u590d\u5236\u8fdb\u6210\u54c1\u7ed3\u5c3e\u5373\u53ef\u3002\n\n\u3010\u5f52\u5e76\u4e3e\u4f8b\u3011\n\n\u5bf9\u4e0b\u9762\u8fdb\u884c\u987a\u5e8f\u5f52\u5e76\n\n2 3 1 5\n\n\u6bd4\u8f83 2 1 \u5f97\uff1a1\n\n\u6bd4\u8f83 2 3 \u5f97\uff1a1 2\n\n\u6bd4\u8f83 5 3 \u5f97\uff1a1 2 3\n\n\u590d\u5236 5 \u5230\u672b\u5c3e\uff1a1 2 3 5\n\n\u3010\u603b\u7ed3\u3011\n\n\u672c\u9898\u9700\u5148\u5feb\u6392\uff0c\u7136\u540e\u6a21\u62df\u51fa\u6bcf\u6b21\u7684\u80dc\u8d1f\u4e24\u7ec4\uff0c\u8fdb\u884c\u5f52\u5e76\u5373\u53ef\u3002\u987a\u4fbf\u8bf4\u4e0b\uff0c\u8fd9\u91cc\u7684\u5f52\u5e76\u662f\u6700\u7b80\u5355\u7684\u4e8c\u8def\u5f52\u5e76\n\n\n\u3010\u6807\u7a0b\u3011\n\n```delphi\n\nvar i,j,n,k,p,q,c:longint;\nc1,c2,a:array[1..200005,1..3]of longint; //1:\u5f97\u5206 2:\u5e8f\u53f7 3:\u5b9e\u529b;\nprocedure qsort(l:longint;r:longint);\nvar i,j,tp,mid1,mid2:longint;\nbegin\n  i:=l;j:=r;\n  mid1:=a[(l+r) div 2][1];\n  mid2:=a[(l+r) div 2][2];\n  repeat\n    while(a[i][1]>mid1)or((a[i][1]=mid1)and(a[i][2]<mid2))do inc(i);//\u6ce8\u610f\u5904\u7406\u5206\u6570\u76f8\u7b49\u7684\u5e8f\u53f7\u5927\u5c0f\u5904\u7406\n    while(a[j][1]<mid1)or((a[j][1]=mid1)and(a[j][2]>mid2))do dec(j);\n    if(i<=j)then begin\n      tp:=a[j][1]; a[j][1]:=a[i][1]; a[i][1]:=tp;\n      tp:=a[j][2]; a[j][2]:=a[i][2]; a[i][2]:=tp;\n      tp:=a[j][3]; a[j][3]:=a[i][3]; a[i][3]:=tp;\n      inc(i);\n      dec(j);\n    end;\n  until(i>j);\n  if l<j then\n    qsort(l,j);\n  if i<r then\n    qsort(i,r);\nend;\n\nprocedure msort(s:longint;m:longint;t:longint);\nvar i1,j1,p,k1:longint;\nbegin\n  i1:=t;j1:=m+1;\n  k1:=t-1;\n//\u6bd4\u8f83\u5e76\u590d\u5236\n  while(i1<=m)and(j1<=s)do begin\n  inc(k1);\n  if(c1[i1][1]>c1[j1][1])or(c1[i1][1]=c1[j1][1])and(c1[i1][2]<c1[j1][2])then\n  begin\n    c2[k1][3]:=c1[i1][3];\n    c2[k1][2]:=c1[i1][2];\n    c2[k1][1]:=c1[i1][1];\n    inc(i1);\n  end else if(c1[i1][1]<c1[j1][1])or(c1[i1][1]=c1[j1][1])and(c1[i1][2]>c1[j1][2])then\n  begin\n    c2[k1][3]:=c1[j1][3];\n    c2[k1][2]:=c1[j1][2];\n    c2[k1][1]:=c1[j1][1];\n    inc(j1);\n  end;end;\n//\u590d\u5236\u4f59\u4e0b\u7684\u6570\u7ec4\n  if(i1<=m)then\n    for p:=i1 to m do begin\n      inc(k1);\n      c2[k1][3]:=c1[p][3];\n      c2[k1][2]:=c1[p][2];\n      c2[k1][1]:=c1[p][1];\n    end;\n\n  if(j1<=s)then\n    for p:=j1 to s do begin\n      inc(k1);\n      c2[k1][3]:=c1[p][3];\n      c2[k1][2]:=c1[p][2];\n      c2[k1][1]:=c1[p][1];\n    end;\nend;\nbegin\n  readln(n,p,q);\n  n:=n*2;\n\n  for i:=1 to n do\n  begin\n  read(a[i][1]);\n  a[i][2]:=i;\n  end;\n\n  for i:=1 to n do\n  read(a[i][3]);\n\n  qsort(1,n);//\u5feb\u6392\u4e0d\u89e3\u91ca\n\n  for i:=1 to p do begin //\u6709\u8fd9\u4e48\u591a\u8f6e\u7684\u6bd4\u8d5b\n  fillchar(c1,sizeof(c1),0);c:=0;\n  fillchar(c2,sizeof(c2),0);\n  for j:=1 to (n div 2) do begin\n     inc(c);\n     if(a[j*2-1][3]>a[j*2][3])then//\u6a21\u62df\u6bd4\u8d5b\uff0c\u5e76\u628a\u7ed3\u679c\u5b58\u5165\u5de6\u53f3\u4e24\u8fb9\n     begin\n        inc(a[j*2-1][1]);\n        c1[c][1]:=a[j*2-1][1];\n        c1[c][2]:=a[j*2-1][2];\n        c1[c][3]:=a[j*2-1][3];\n\n        c1[(n div 2)+c][1]:=a[j*2][1];\n        c1[(n div 2)+c][2]:=a[j*2][2];\n        c1[(n div 2)+c][3]:=a[j*2][3];\n     end else\n     if(a[j*2-1][3]<a[j*2][3])then\n     begin\n        inc(a[j*2][1]);\n        c1[c][1]:=a[j*2][1];\n        c1[c][2]:=a[j*2][2];\n        c1[c][3]:=a[j*2][3];\n\n        c1[(n div 2)+c][1]:=a[j*2-1][1];\n        c1[(n div 2)+c][2]:=a[j*2-1][2];\n        c1[(n div 2)+c][3]:=a[j*2-1][3];\n       end;\n  end;\n   msort(n,n div 2,1);//\u8fdb\u884c\u5f52\u5e76\n   a:=c2;\n  end;\n  writeln(a[q][2]);\nend.\n\n```",
        "postTime": 1443257360,
        "uid": 7201,
        "name": "median_dxz",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u601d\u8def<o:p></o:p>\n\n\n\u5982\u679c\u7528\u5feb\u901f\u6392\u5e8f\u7684\u8bdd\u53ea\u80fd\u8fc750%\u7684\u6570\u636e\uff0c\u6b64\u9898\u7684\u6b63\u89e3\u662f\u5feb\u6392\u52a0\u5f52\u5e76\u3002\u9996\u5148\u5feb\u901f\u6392\u5e8f\u4f5c\u4e3a\u521d\u59cb\u72b6\u6001\uff0c\u7136\u540e\u6a21\u62df\u9009\u51fa\u6bcf\u573a\u6bd4\u8d5b\u7684\u4f18\u80dc\u8005\u548c\u5931\u8d25\u8005\uff0c\u4f18\u80dc\u8005\u6bcf\u4eba\u52a0\u4e0a\u4e00\u5206\u540e\u540d\u6b21\u4e0d\u53d8\u3002\u6240\u4ee5\u518d\u7528\u5f52\u5e76\u6392\u5e8f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002\uff08PS:\u6b64\u5f52\u5e76\u8d39\u4e8c\u5206\u5f52\u5e76\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u8fd9\u4e2a\u9898\uff0c{http://codevs.cn/problem/3296/}\uff0c\u7528\u6307\u9488\u5b9e\u73b0\u5373\u53ef\uff09\u65f6\u95f4\u590d\u6742\u5ea6O(RN)\u3002<o:p></o:p>\n\n\nPS\uff1a\u6211\u5c45\u7136\u8ba9\u8fd9\u4e48\u4e00\u4e2a\u666e\u53ca\u7ec4\u7684\u6c34\u9898\u5751\u4e86\u4e00\u5929\uff0c\u4ee3\u7801\u4e00\u5ea6\u4e0a\u5347\u5230200\u591a\u884c\uff0c\u540e\u6765\u5c45\u7136\u662f\u5feb\u901f\u6392\u5e8f\u65f6\u7684\u4e00\u90e8\u5206\u64cd\u4f5c\u6ca1\u6709\u8003\u8651\u548c\u53d8\u91cf\u7684\u95ee\u9898\u3002<o:p></o:p>\n\n\n```delphi\n\n\ntype ss=record<o:p></o:p>\n\n    fen,shi,hao:int64;<o:p></o:p>\n\n    end;<o:p></o:p>\n\n<o:p> </o:p>\n\ntype arr=array[0..200000] of ss;<o:p></o:p>\n\n<o:p> </o:p>\n\nvar a,b,c:arr;<o:p></o:p>\n\n    n,r,q:int64;<o:p></o:p>\n\n    ii:longint;<o:p></o:p>\n\n<o:p> </o:p>\n\nprocedure sort(l,r: longint);<o:p></o:p>\n\n      var<o:p></o:p>\n\n         i,j,x,y: longint;<o:p></o:p>\n\n      begin<o:p></o:p>\n\n         i:=l;<o:p></o:p>\n\n         j:=r;<o:p></o:p>\n\n         x:=a[(l+r) div 2].fen;<o:p></o:p>\n\n         y:=a[(l+r) div 2].hao;<o:p></o:p>\n\n         repeat<o:p></o:p>\n\n           while (a[i].fen>x) or ((x=a[i].fen) and (y>a[i].hao))do<o:p></o:p>\n\n            inc(i);<o:p></o:p>\n\n           while (x>a[j].fen) or ((x=a[j].fen) and (y<a[j].hao)) do<o:p></o:p>\n\n            dec(j);<o:p></o:p>\n\n           if not(i>j) then<o:p></o:p>\n\n             begin<o:p></o:p>\n\n                a[0]:=a[i];<o:p></o:p>\n\n                a[i]:=a[j];<o:p></o:p>\n\n                a[j]:=a[0];<o:p></o:p>\n\n                inc(i);<o:p></o:p>\n\n                j:=j-1;<o:p></o:p>\n\n             end;<o:p></o:p>\n\n         until i>j;<o:p></o:p>\n\n         if l<j then<o:p></o:p>\n\n           sort(l,j);<o:p></o:p>\n\n         if i<r then<o:p></o:p>\n\n           sort(i,r);<o:p></o:p>\n\n      end;<o:p></o:p>\n\n//\u6709\u5904\u7406\u64cd\u4f5c\u7684\u5feb\u901f\u6392\u5e8f<o:p></o:p>\n\n<o:p> </o:p>\n\nprocedure guibing;<o:p></o:p>\n\nvar i,j,k:int64;x:longint;<o:p></o:p>\n\nbegin<o:p></o:p>\n\n    fillchar(a,sizeof(a),0);<o:p></o:p>\n\n    i:=1;<o:p></o:p>\n\n    j:=1;<o:p></o:p>\n\n    k:=1;<o:p></o:p>\n\n    while (i<>n+1)and(j<>n+1) do<o:p></o:p>\n\n        begin<o:p></o:p>\n\n            if b[i].fen>c[j].fen then<o:p></o:p>\n\n                begin<o:p></o:p>\n\n                    a[k]:=b[i];<o:p></o:p>\n\n                    inc(i);<o:p></o:p>\n\n                    inc(k);<o:p></o:p>\n\n                end;<o:p></o:p>\n\n            if c[j].fen>b[i].fen then<o:p></o:p>\n\n                begin<o:p></o:p>\n\n                    a[k]:=c[j];<o:p></o:p>\n\n                    inc(j);<o:p></o:p>\n\n                    inc(k);<o:p></o:p>\n\n                end;<o:p></o:p>\n\n            if c[j].fen=b[i].fen then<o:p></o:p>\n\n                if c[j].hao<b[i].hao then<o:p></o:p>\n\n                    begin<o:p></o:p>\n\n                        a[k]:=c[j];<o:p></o:p>\n\n                        inc(j);<o:p></o:p>\n\n                        inc(k);<o:p></o:p>\n\n                    end<o:p></o:p>\n\n                else<o:p></o:p>\n\n                    begin<o:p></o:p>\n\n                        a[k]:=b[i];<o:p></o:p>\n\n                        inc(i);<o:p></o:p>\n\n                        inc(k);<o:p></o:p>\n\n                    end;<o:p></o:p>\n\n        end;<o:p></o:p>\n\n    for x:=i to n do<o:p></o:p>\n\n            begin<o:p></o:p>\n\n                a[k]:=b[x];<o:p></o:p>\n\n                inc(k);<o:p></o:p>\n\n            end;<o:p></o:p>\n\n    for x:=j to n do<o:p></o:p>\n\n            begin<o:p></o:p>\n\n                a[k]:=c[x];<o:p></o:p>\n\n                inc(k);<o:p></o:p>\n\n            end;<o:p></o:p>\n\nend;<o:p></o:p>\n\n//\u5f52\u5e76\u6392\u5e8f<o:p></o:p>\n\n<o:p> </o:p>\n\nprocedure init;<o:p></o:p>\n\nvar i:longint;<o:p></o:p>\n\nbegin<o:p></o:p>\n\n    readln(n,r,q);<o:p></o:p>\n\n    for i:=1 to 2*n do a[i].hao:=i;<o:p></o:p>\n\n    for i:=1 to 2*n do read(a[i].fen);<o:p></o:p>\n\n    for i:=1 to 2*n do read(a[i].shi);<o:p></o:p>\n\nend;<o:p></o:p>\n\n<o:p> </o:p>\n\nprocedure main;<o:p></o:p>\n\nvar sum1,sum2:int64;i,j:longint;<o:p></o:p>\n\nbegin<o:p></o:p>\n\n    fillchar(b,sizeof(b),0);<o:p></o:p>\n\n    fillchar(c,sizeof(c),0);<o:p></o:p>\n\n    i:=1;<o:p></o:p>\n\n    sum1:=0;<o:p></o:p>\n\n    sum2:=0;<o:p></o:p>\n\n    while i<=2*n do<o:p></o:p>\n\n        begin<o:p></o:p>\n\n            j:=i+1;<o:p></o:p>\n\n            if a[i].shi<a[j].shi then<o:p></o:p>\n\n                begin<o:p></o:p>\n\n                    inc(sum1);<o:p></o:p>\n\n                    inc(sum2);<o:p></o:p>\n\n                    b[sum1]:=a[j];<o:p></o:p>\n\n                    c[sum2]:=a[i];<o:p></o:p>\n\n                    inc(b[sum1].fen);<o:p></o:p>\n\n                end<o:p></o:p>\n\n            else<o:p></o:p>\n\n                begin<o:p></o:p>\n\n                    inc(sum1);<o:p></o:p>\n\n                    inc(sum2);<o:p></o:p>\n\n                    b[sum1]:=a[i];<o:p></o:p>\n\n                    c[sum2]:=a[j];<o:p></o:p>\n\n                    inc(b[sum1].fen);<o:p></o:p>\n\n                end;<o:p></o:p>\n\n            inc(i,2);<o:p></o:p>\n\n        end;<o:p></o:p>\n\n    guibing;<o:p></o:p>\n\nend;<o:p></o:p>\n\n//\u6a21\u62df\u6bd4\u8d5b\u8fc7\u7a0b<o:p></o:p>\n\n<o:p> </o:p>\n\nprocedure printf;<o:p></o:p>\n\nvar i:longint;<o:p></o:p>\n\nbegin<o:p></o:p>\n\n    writeln(a[q].hao);<o:p></o:p>\n\nend;<o:p></o:p>\n\n<o:p> </o:p>\n\nbegin<o:p></o:p>\n\n    init;<o:p></o:p>\n\n    sort(1,2*n);<o:p></o:p>\n\n    for ii:=1 to r do main;<o:p></o:p>\n\n    printf;<o:p></o:p>\n\nend.<o:p></o:p>\n\n```",
        "postTime": 1439897953,
        "uid": 6906,
        "name": "gryql",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u601d\u8def\u697c\u4e0b\u6709\u8bf4\uff0c\u8fd9\u91cc\u63d0\u4f9b**C\u4ee3\u7801**\u3002\n\n\u4e00\u5f00\u59cb\u5224\u65ad\u6761\u4ef6\u6f0f\u4e86\u7f16\u53f7\u4e3a0\u7684\u60c5\u51b5\u5bfc\u81f4\u53ea\u62ff\u4e8660\u5206\u3002\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n//\u4e8c\u7ef4\u6570\u7ec4\uff0cX[y][0]\u5b58\u7f16\u53f7,[1]\u5b58\u5206\u6570,[2]\u5b58\u5b9e\u529b \nint A[210000][3]={{0}},Win[110000][3]={{0}},Lose[110000][3]={{0}};\nint cmp(const void* a,const void* b)\n{\n    if(((int*)a)[1] != ((int*)b)[1]) return ((int*)b)[1]- ((int*)a)[1];\n    else return *(int*)a -*(int*)b;\n}\nint main(void)\n{\n    int n,r,q,i,j=0,k=0,w=0,l=0;\n    scanf(\"%d %d %d\",&n,&r,&q);\n    for(i=0;i<2*n;i++)\n    {\n        A[i][0]=i+1;//\u7f16\u53f7 \n        scanf(\"%d\",&A[i][1]);//\u521d\u59cb\u5206\u6570 \n    }\n    for(i=0;i<2*n;i++)\n        scanf(\"%d\",&A[i][2]);//\u5b9e\u529b \n    qsort(A,2*n,sizeof(A[0]),cmp);//\u5feb\u6392\u4e00\u6b21 \n    for(i=1;i<=r;i++)//r\u6b21\u6bd4\u8d5b \n    {\n        for(l=w=j=0;j<2*n;j+=2)//\u8d62\u8005copy\u5165Win\u6570\u7ec4\uff0c\u8f93\u8005copy\u5165Lose\u6570\u7ec4 \n        {\n            if(A[j][2] > A[j+1][2]) {A[j][1]++; memcpy (Win[w++],A[j],sizeof(A[0])); memcpy (Lose[l++],A[j+1],sizeof(A[0])); }  \n            else  {A[j+1][1]++; memcpy (Win[w++],A[j+1],sizeof(A[0])); memcpy (Lose[l++],A[j],sizeof(A[0])); } \n        }\n        //Win\u548cLose\u90fd\u662f\u6709\u5e8f\u6570\u7ec4\uff0c\u5f52\u5e76\u6392\u5e8f\u56de\u6570\u7ec4A\u4e2d\u3002 \n/*\u5f52\u5e76\u6392\u5e8f\u5199\u6cd51 \uff0c\u5224\u65ad\u6761\u4ef6\u5f88\u9ebb\u70e6\uff0c\u4e0d\u5efa\u8bae\uff0c\u7279\u522b\u662f\u8981\u6ce8\u610f\u7f16\u53f7\u4e3a0\u7684\u60c5\u51b5*/\n        for(j=0,k=0;j+k<2*n;)\n        {//\u5982\u679cWin[j](     (   \u5206\u6570\u5927\u6216( \u5206\u6570\u76f8\u7b49\u4e14(\u7f16\u53f7\u5c0f\u6216\u7f16\u53f7\u4e3a0) )   )     \u4e14 \u6ca1\u8f93\u51fa\u5b8c    )   \n            if( ( Win[j][1]>Lose[k][1]|| (Win[j][1]==Lose[k][1] && (Win[j][0]<Lose[k][0] || Win[j][1]==0) ) ) && j<n  )\n                { memcpy(A[j+k],Win[j],sizeof(A[0]));j++;}\n            else {memcpy(A[j+k],Lose[k],sizeof(A[0]));k++;}\n        }*/\n/*\u5f52\u5e76\u5199\u6cd52\uff0c\u601d\u8def\u6e05\u6670\uff0c\u540c\u697c\u4e0b*/ \n        j=0;k=0;\n        while(j<n&&k<n)\n            if(Win[j][1]>Lose[k][1]|| (Win[j][1]==Lose[k][1] && Win[j][0]<Lose[k][0]))\n            { memcpy(A[j+k],Win[j],sizeof(A[0]));j++;}\n            else {memcpy(A[j+k],Lose[k],sizeof(A[0]));k++;}\n        while(j<n)    { memcpy(A[j+k],Win[j],sizeof(A[0]));j++;}\n        while(k<n)    {memcpy(A[j+k],Lose[k],sizeof(A[0]));k++;}\n    }    \n    printf(\"%d\",A[q-1][0]);\n    return 0;\n}\n```",
        "postTime": 1437046941,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "C++AC\u6e90\u7801...\n\n\u5411\u697c\u4e0b\u8bf4\u7684\u90a3\u6837\u5f52\u5e76\u5c31\u597d\u4e86\u3002\u3002\u3002\n\n```cpp\n\n#include<cstdio>\n#include<algorithm>\n#define read(_) scanf(\"%d\",& _)\nstruct R{\n    int f,s,r;\n    bool operator < (const R&rhs)const{\n        if(f!=rhs.f)return f>rhs.f;\n        return r<rhs.r;\n    }\n}C[2][220000],B[220000];\nint main()\n{\n    int n,r,q,x=0,xx=1;\n    read(n);read(r);read(q);\n    for(int i=0;i<n*2;i++)read(C[0][i].f);\n    for(int i=0;i<n*2;i++){read(C[0][i].s);C[0][i].r=i+1;}\n    std::sort(C[0],C[0]+n*2);\n    for(int i=0;i<r;i++){\n        int ll=0,rr=0,st=0;\n        for(int k=0;k<n*2;k+=2){\n            if(C[x][k].s>C[x][k+1].s){\n                B[k]=C[x][k];\n                B[k+1]=C[x][k+1];\n            }else{\n                B[k]=C[x][k+1];\n                B[k+1]=C[x][k];\n            }\n            B[k].f+=1;\n        }\n        while(ll<n&&rr<n){\n            if(B[ll*2].f>B[rr*2+1].f){\n                C[xx][st++]=B[ll*2];ll++;}\n            else if(B[ll*2].f<B[rr*2+1].f){\n                C[xx][st++]=B[rr*2+1];rr++;}\n            else if(B[ll*2].r<B[rr*2+1].r){\n                C[xx][st++]=B[ll*2];ll++;}\n            else if(B[ll*2].r>B[rr*2+1].r){\n                C[xx][st++]=B[rr*2+1];rr++;}}\n        while(ll<n){C[xx][st++]=B[ll*2];ll++;}\n        while(rr<n){C[xx][st++]=B[rr*2+1];rr++;}\n        x=!x;xx=!xx;\n    }\n    printf(\"%d\",C[x][q-1].r);\n    return 0;\n}\n\n```",
        "postTime": 1430314879,
        "uid": 4070,
        "name": "\u840c\u65b0\u5929\u884c\u5065",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u672c\u9898\u6700\u6734\u7d20\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u6a21\u62df\u6bcf\u573a\u6bd4\u8d5b\u7684\u60c5\u51b5\u540e\uff0c\u5bf9\u6240\u6709\u9009\u624b\u8fdb\u884c\u4e00\u6b21\u5feb\u901f\u6392\u5e8f\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662fO(Rnlogn)\uff0c\u53ea\u80fd\u83b7\u5f9750\u5206\u3002\n\n\u6211\u4eec\u518d\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u573a\u6bd4\u8d5b\u6240\u6709\u7684\u80dc\u5229\u8005\uff0c\u83b7\u5f97\u7684\u5206\u6570\u90fd\u662f1\u5206\uff0c\u800c\u5931\u8d25\u8005\u83b7\u5f97\u7684\u90fd\u662f0\u5206\u3002\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u5c06\u6bcf\u573a\u6bd4\u8d5b\u7684\u6240\u6709\u80dc\u5229\u8005\u5355\u72ec\u6311\u51fa\uff0c\u6309\u6bd4\u8d5b\u524d\u7684\u6392\u4f4d\u6392\u6210a1,a2,...,an\uff0c\u5931\u8d25\u8005\u4e5f\u6309\u6bd4\u8d5b\u524d\u7684\u6392\u4f4d\u6392\u6210b1,b2,...,bn\u3002\u90a3\u4e48\u6240\u6709\u80dc\u5229\u8005\u5f97\u5206\u5747+1\u540e\uff0ca\u6570\u7ec4\u7684\u6392\u4f4d\u987a\u5e8f\u5e76\u6ca1\u6709\u6539\u53d8\u3002\u540c\u7406\uff0cb\u6570\u7ec4\u7684\u6392\u4f4d\u5728\u6bd4\u8d5b\u524d\u540e\u4e5f\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u4e86\uff1a\u6bcf\u573a\u6bd4\u8d5b\u540e\uff0c\u5c06\u80dc\u5229\u8005\u4e0e\u5931\u8d25\u8005\u5206\u6210\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\uff0c\u5e76\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u3002\u8fd9\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\uff01\u590d\u6742\u5ea6O(nlogn)\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97100\u5206\u4e86~\n",
        "postTime": 1429355022,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\n\u8fd9\u771f\u7684\u662f\u4e00\u9053\u597d\u9898\uff0c\u602a\u6211\u65e9\u65e9\u6ca1\u6709\u53bb\u505a\uff01\n\n\u8fd9\u4e2a\u9898\u9898\u610f\u5176\u5b9e\u5c31\u662f\u6bcf\u6b21\u76f8\u90bb\u5206\u6570\u7684\u4e24\u4e2a\u4eba\u6839\u636e\u5b9e\u529b\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u6bd4\u51fa\u8f93\u8d62\uff0c\u8fdb\u884c\u5206\u6cbb\uff0c\u7136\u540e\u4e0d\u65ad\u6392\u5e8f\u800c\u5df2\n\n\u7b2c\u4e00\u773c\u7684\u601d\u8def\u5c31\u662f\u7528$sort$\u53bb\u505a\uff0c\u4f46\u662f\uff0c\u5f88\u9057\u61be\uff0c\u8d85\u65f6\u4e86......\u4ed4\u7ec6\u7b97\u4e00\u7b97\uff0c\u590d\u6742\u5ea6\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e0a\u5929\u7684$O(R*(N+N*\\log N))$\uff0c\u6240\u4ee5\u80af\u5b9a\u8fc7\u4e0d\u53bb\uff0c\u7136\u800c\u6211\u7684$stable\\_sort$\u53ea$T$\u4e86\u4e24\u4e2a\u70b9\uff0c\u52a0\u4e2a$O_2$\u4f18\u5316\u5c31\u80fd\u8fc7\u53bb\u4e86\uff0c\u592a\u8be1\u5f02\u4e86\n\n\u5148\u7ed9\u4e00\u4e0bTLE\u7684\u4ee3\u7801\n\n```cpp\n/*\u4f17\u6240\u5468\u77e5\uff0csort\u4e00\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u8981\u7528sort\n\u7136\u800c\u6211\u7684stable_sort\u53eaT\u4e86\u4e24\u4e2a\u70b9\uff0c\u52a0\u4e2aO_2\u5c31\u80fd\u8fc7\u53bb\u4e86\uff0c\u592a\u8be1\u5f02\u4e86 */\n#include<bits/stdc++.h>\n#define N 200011\nusing namespace std;\n\nstruct node{\n\tint num;\n\tint score;\n\tint worth;\n}a[N];\n\nint n,r,q;\n\ninline int read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+c-48;\n\treturn x*f;\n}\n\nbool cmp(node x,node y){\n\treturn x.score==y.score ? x.num<y.num : x.score>y.score;\n}\n\nint main(){\n\tn=read(),r=read(),q=read();\n\tfor(int i=1;i<=2*n;i++){\n\t\ta[i].score=read();\n\t\ta[i].num=i;\n\t}\n\tfor(int i=1;i<=2*n;i++){\n\t\ta[i].worth=read();\n\t}\n\tstable_sort(a+1,a+1+2*n,cmp);\n\tfor(int i=1;i<=r;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(a[j*2-1].worth>a[j*2].worth)a[j*2-1].score++;\n\t\t\telse a[j*2].score++;\n\t\t}\n\t\tstable_sort(a+1,a+1+2*n,cmp);\n\t}\n\tcout<<a[q].num<<'\\n';\n}\n```\n\n\u7136\u540e\u6211\u4eec\u5c31\u5e94\u8be5\u53bb\u60f3\u65b0\u7684\u601d\u8def\uff0c\u8fd9\u65f6\uff0c\u5f52\u5e76\u51fa\u73b0\u4e86\uff0c\u65e2\u7136\u80dc\u8005\u7ec4\u548c\u8d25\u8005\u7ec4\u7684\u76f8\u5bf9\u987a\u5e8f\u662f\u786e\u5b9a\u7684\uff0c\u53c8\u521a\u597d\u662f\u4e24\u4e2a\u7b49\u5f85\u53bb\u6392\u5e8f\u7684\u5e8f\u5217\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8054\u60f3\u5230\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u6211\u4eec\u5c06stu\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u53ea\u9700\u8981\u5c06\u8fd9\u4e24\u4e2a\u5e8f\u5217\u8fdb\u884c\u5f52\u5e76(\u5408\u5e76)\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u5f52\u5e76\u6548\u679c\uff0c\u590d\u6742\u5ea6$O(N)$\uff0c\u800c$sort$\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u5219\u4e3a$O(N\\log N)$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define N 100011\nusing namespace std;\n\nstruct node {\n\tint num;\n\tint score;\n} stu[N*2],a[N],b[N];\n\nint n,r,q;\nint w[2*N];\n\ninline int read() {\n\tint x=0,f=1;\n\tchar c=getchar();\n\tfor(; !isdigit(c); c=getchar())if(c=='-')f=-1;\n\tfor(; isdigit(c); c=getchar())x=x*10+c-48;\n\treturn x*f;\n}\n\nbool cmp(node x,node y) {\n\treturn x.score==y.score ? x.num<y.num : x.score>y.score;\n}\n\nvoid mergesort() { //\u5f52\u5e76\u6392\u5e8f\n\tint i=1,j=1,count=1;\n\twhile(i<=n && j<=n) {\n\t\tif(a[i].score>b[j].score || (a[i].score==b[j].score&&a[i].num<b[j].num)) {\n\t\t\tstu[count].score=a[i].score;\n\t\t\tstu[count].num=a[i].num;\n\t\t\tcount++;\n\t\t\ti++;\n\t\t} else {\n\t\t\tstu[count].score=b[j].score;\n\t\t\tstu[count].num=b[j].num;\n\t\t\tcount++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i<=n) {\n\t\tstu[count].score=a[i].score;\n\t\tstu[count].num=a[i].num;\n\t\tcount++;\n\t\ti++;\n\t}\n\twhile(j<=n) {\n\t\tstu[count].score=b[j].score;\n\t\tstu[count].num=b[j].num;\n\t\tcount++;\n\t\tj++;\n\t}\n}\n\nint main(){\n\tn=read(),r=read(),q=read();\n\tfor(int i=1;i<=2*n;i++){\n\t\tstu[i].score=read();\n\t\tstu[i].num=i;\n\t}\n\tfor(int i=1;i<=2*n;i++){\n\t\tw[i]=read();\n\t}\n\tstable_sort(stu+1,stu+1+2*n,cmp);\n\t\n\tfor(int j=1;j<=r;j++){\n\t\tint index=1;\n\t\tfor(int i=1;i<=2*n-1;i+=2){//\u5947\u6570,+2\u4ee5\u4fbf\u4e24\u4e24\u6bd4\u8f83\n\t\t\tif(w[stu[i].num]>w[stu[i+1].num]){\n\t\t\t\ta[index].score=stu[i].score+1;\n\t\t\t\ta[index].num=stu[i].num;\n\t\t\t\tb[index].score=stu[i+1].score;\n\t\t\t\tb[index].num=stu[i+1].num;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[index].score=stu[i+1].score+1;\n\t\t\t\ta[index].num=stu[i+1].num;\n\t\t\t\tb[index].score=stu[i].score;\n\t\t\t\tb[index].num=stu[i].num;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\tmergesort();\n\t}\n\tcout<<stu[q].num<<'\\n';\n\treturn 0;\n}\n```",
        "postTime": 1563175858,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u5148\u8d34\u4e0a\u4ee3\u7801\uff1a\n```\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint N,R,Q;\nstruct num\n{\n\tint NO;//\u7f16\u53f7\n\tint all;//\u4e2d\u5206\n\tint w;//\u5b9e\u529b\u503c\n} A[200001], a[200005], b[200005];\nint CMP(const num &a,const num &b)\n{\n\tif(a.all!=b.all) return a.all>b.all;\n\telse return a.NO<b.NO;\n}\nint main(void)\n{\n\tfreopen(\"cin.txt\",\"r\",stdin);\n\tcin>>N>>R>>Q;\n\tfor(int i=1; i<=2*N; ++i)\n\t{\n\t\tcin>>A[i].all;\n\t\tA[i].NO=i;\n\t}\n\tfor(int i=1; i<=2*N; ++i)\tcin>>A[i].w;\n\tsort(A+1,A+2*N+1,CMP);\n\tfor (int i=1; i<=R; i++)\n\t{\n\t\tint ai = 0, bi = 0;\n\t\tfor (int j=1; j<N*2; j+=2)\n\t\t{\n\t\t\tif (A[j].w>A[j+1].w)\n\t\t\t{\n\t\t\t\t++ai;++bi;\n\t\t\t\tA[j].all++;//\u52a0\u5206 \n\t\t\t\tb[bi]=A[j+1];//\u8f93\u7684\u4eba\u8fdbb \n\t\t\t\ta[ai]=A[j];//\u8d62\u7684\u4eba\u8fdba \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++bi;\n\t\t\t\t++ai;\n\t\t\t\tA[j+1].all++;\n\t\t\t\tb[bi]=A[j];\n\t\t\t\ta[ai]=A[j+1];\n\t\t\t}\n\t\t}\n\t\tmerge(a+1,a+N+1, b+1, b+N+1,A+1,CMP);\n\t\t/*for(int j=1; j<=2*N; j++)\n\t\t{\n\t\t\tcout<<A[j].all <<' '<<A[j].NO<<\"   \";\n\t\t}\n\t\tcout<<'\\n';*/\n\t}\n\tcout<<A[Q].NO;\n\treturn 0;\n}\n\n```\n\u4e0b\u9762\u5f00\u59cb\u5206\u6790\uff1a\n\u9996\u5148\u5927\u5bb6\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u5e94\u8be5\u90fd\u4f1a\u8bd5\u8bd5\u5feb\u6392\uff08\u5feb\u6392\u5728\u8fd9\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(Rnlogn)\uff09\uff0c\n\u7ed3\u679c\u663e\u800c\u6613\u89c1\uff0c60\u5206\u3002555\n\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u6211\u7684\u60e8\u75db\u4ee3\u7801\uff1a\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct num\n{\n    int NO;//\u7f16\u53f7\n    int all;//\u4e2d\u5206\n    int w;//\u5b9e\u529b\u503c\n} A[200001];\nint CMP(const num &a,const num &b)\n{\n    if(a.all!=b.all) return a.all>b.all;\n    else return a.NO<b.NO;\n}\nint main(void)\n{\n    int N,R,Q;\n    cin>>N>>R>>Q;\n    for(int i=1; i<=2*N; ++i)\n    {\n        cin>>A[i].all;\n        A[i].NO=i;\n    }\n    for(int i=1; i<=2*N; ++i)\tcin>>A[i].w;\n    sort(A+1,A+2*N+1,CMP);\n    for(int i=1;i<=R;++i)\n    {\n        for(int j=1;j<=2*N-1;j+=2)\n        {\n            if(A[j].w>A[j+1].w) A[j].all++;\n            else A[j+1].all++;\n        }\n        sort(A+1,A+2*N+1,CMP);\n    /*\tfor(int j=1;j<=2*N;j++)\n        {\n            cout<<A[j].all <<' '<<A[j].NO<<\"   \";\n        }\n        cout<<'\\n';*/\n    }\n    cout<<A[Q].NO;\n    return 0;\n}\n\n```\n\u7ec8\u4e8e\u6211\u75db\u6539\u524d\u975e\uff0c\u6d17\u5fc3\u9769\u9762\uff0c\u91cd\u65b0\u505a\u4eba\u3002\n\u5206\u6790\u4e00\u4e0b\u6837\u4f8b\u4e0d\u96be\u53d1\u73b0\u8d62\u7684\u4eba\u5728\u8d62\u7684\u4eba\u7684\u961f\u4f0d\u4e2d\u7684\u4f4d\u7f6e\u662f\u4e0d\u53d8\u7684\uff0c\u540c\u7406\u8f93\u7684\u4eba\u5728\u8f93\u7684\u4eba\u7684\u961f\u4f0d\u4e2d\u7684\u4f4d\u7f6e\u4e5f\u662f\u4e0d\u53d8\u7684\u3002\u5982\u6837\u4f8b \uff1a\t\n1.\u5728\u7b2c\u4e00\u8f6e\u7ed3\u675f\u540e \u4e00\u53f77\u5206\uff0c\u4f4d\u4e8e\u5168\u90e8\u4eba\u7684\u961f\u4f0d\u7b2c\u4e8c\u540d\uff0c\u8f93\u7684\u4eba\u4e2d\u7b2c\u4e00\u540d\uff0c\u5728\u8f93\u6389\u8fd9\u8f6e\u7684\u8fd9\u4e9b\u4eba\u4e2d\u539f\u6392\u540d\u7b2c\u4e00\uff1b\t\n2.\u4e8c\u53f76\u5206\uff0c\u4f4d\u4e8e\u5168\u90e8\u4eba\u7684\u961f\u4f0d\u7b2c\u56db\u540d\uff0c\u8f93\u7684\u4eba\u4e2d\u7b2c\u4e8c\u540d\uff0c\u5728\u8f93\u6389\u8fd9\u8f6e\u7684\u8fd9\u4e9b\u4eba\u4e2d\u539f\u6392\u540d\u7b2c\u4e8c\uff1b\t\n3.\u4e09\u53f77\u5206\uff0c\u4f4d\u4e8e\u5168\u90e8\u4eba\u7684\u961f\u4f0d\u7b2c\u4e09\u540d\uff0c\u8d62\u7684\u4eba\u4e2d\u7b2c\u4e8c\u540d\uff0c\u5728\u8d62\u6389\u8fd9\u8f6e\u7684\u8fd9\u4e9b\u4eba\u4e2d\u539f\u6392\u540d\u7b2c\u4e8c\uff1b\t\n4.\u56db\u53f76\u5206\uff0c\u4f4d\u4e8e\u5168\u90e8\u4eba\u7684\u961f\u4f0d\u7b2c\u4e00\u540d\uff0c\u8d62\u7684\u4eba\u4e2d\u7b2c\u4e00\u540d\uff0c\u5728\u8d62\u6389\u8fd9\u8f6e\u7684\u8fd9\u4e9b\u4eba\u4e2d\u539f\u6392\u540d\u7b2c\u4e00\uff1b\t\n5.\u7531\u6b64\u53ef\u89c1\u8d62\u7684\u4eba\u548c\u8f93\u7684\u4eba\u5728\u540c\u4e00\u6279\u4eba\u4e2d\u7684\u6392\u540d\u662f\u4e0d\u53d8\u7684\u3002\t\n6.\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u501f\u9274\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u628a\u8d62\u7684\u4eba\u5b58\u5165b[]\u4e2d\uff0c\u8f93\u7684\u4eba\u5b58\u5165a[]\u4e2d\n\u518d\u8fdb\u884c\u5408\u5e76\uff1b\t\n\u5bf9\u4e8e\u5927\u591a\u6570\u61d2\u9b3c\u6765\u8bf4\uff0c\u5f52\u5e76\u6392\u5e8f\u65e0\u7591\u662f\u5f88\u70e6\u7684\u2014\u2014\u90a3\u4e48\u957f\uff0c\u61d2\u5f97\u6253\u3002\t\n\u56e0\u6b64\u5728\u8fd9\u91cc\u4ecb\u7ecd\u5f52\u5e76\u6392\u5e8f\u7684\u5408\u5e76\u51fd\u6570merge\u7b80\u6613\u7528\u6cd5\uff1a\n\nmerge(\u5e8f\u52171\u9996\u5730\u5740\uff0c\u5e8f\u52171\u672b\u5730\u5740\uff08\u4e0d\u542b\uff09\uff0c\u5e8f\u52172\u9996\u5730\u5740\uff0c\u5e8f\u52172\u672b\u5730\u5740\uff08\u4e0d\u542b\uff09\uff0c\u5408\u5e76\u5b8c\u6210\u5e8f\u5217\u50a8\u5b58\u4f4d\u7f6e\u9996\u5730\u5740\uff0c\u6bd4\u8f83\u51fd\u6570\uff08\u540csort\uff0c\u53ef\u9009\uff09)\n\n\u8be6\u7ec6\u7528\u6cd5\u53c2\u89c1[merge\u7528\u6cd5\u89e3\u6790](http://www.cplusplus.com/reference/algorithm/merge/?kw=merge)\n\u6700\u540e\u8f93\u51fa\u5c31\u884c\u5566\uff01\t\nPS\uff1a\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nlogn)\u3002\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u6709\u4e0d\u597d\u4e4b\u5904\u671b\u89c1\u8c05\uff1b\n",
        "postTime": 1533279986,
        "uid": 48490,
        "name": "Anubis",
        "ccfLevel": 0,
        "title": "\u4ee3\u7801\u6bd4\u8f83\u77ed\u7684\u9898\u89e3"
    },
    {
        "content": "\u5177\u4f53\u601d\u8def\u4e0e\u697c\u4e0b\u7684\u5dee\u4e0d\u591a\uff0c\u56e0\u4e3a\u6bcf\u4e00\u8f6e\u80dc\u8005\u7684\u5f97\u5206\u53ea\u52a0\u4e00\uff0c\u6240\u4ee5\u5982\u679c\u628a\u6bcf\u4e00\u8f6e\u7684\u80dc\u8d25\u8005\u5206\u522b\u653e\u5165\u4e24\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u7ec4\u5c31\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5f52\u5e76\u6392\u5e8f\u5408\u5e76\u3002\n\n\u4f46\u53d1\u73b0\u697c\u4e0b\u7684\u5f52\u5e76\u6392\u5e8f\u592a\u7e41\u7410\u5566\uff0c\u8fd9\u91cc\u6765\u4e2a\u7b80\u5355\u7248\u7684\uff0c\u6613\u4e8e\u7406\u89e3\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nclass PEOPLE//\u5b9a\u4e49\u4eba\u7684\u7ed3\u6784\u4f53\n{\npublic:\n    int point,w,num;\n};\n\nbool operator < (PEOPLE a,PEOPLE b)//\u91cd\u8f7d\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff0c\u56e0\u4e3a\u8981\u4f7f\u7528STL\u4e2d\u7684sort\n{\n    if (a.point==b.point)\n        return a.num<b.num;\n    else\n        return a.point>b.point;\n}\n\nconst int maxN=1000001;\nconst int inf=2147483647;\n\nint n,R,Q;\nPEOPLE A[maxN*2];//\u5b58\u653e\u6240\u6709\u4eba\nPEOPLE K1[maxN*2];//\u6bcf\u8f6e\u540e\u4e34\u65f6\u5b58\u653e\u80dc\u8005\nPEOPLE K2[maxN*2];//\u4e34\u65f6\u5b58\u653e\u8d25\u8005\n\nint main()\n{\n    cin>>n>>R>>Q;\n    for (int i=1;i<=n*2;i++)\n        cin>>A[i].point;\n    for (int i=1;i<=n*2;i++)\n        cin>>A[i].w;\n    for (int i=1;i<=n*2;i++)\n        A[i].num=i;\n    sort(&A[1],&A[2*n+1]);//\u7b2c\u4e00\u8f6e\u524d\u7528\u4e00\u8fb9\u5feb\u6392\n    for (int i=1;i<=R;i++)\n    {\n        for (int j=1;j<=2*n;j=j+2)\n        {\n            if (A[j].w>A[j+1].w)\n            {\n                K1[j/2+1]=A[j];//\u5206\u522b\u653e\u5165\u4e24\u4e2a\u6570\u7ec4\n                K2[j/2+1]=A[j+1];\n                K1[j/2+1].point++;\n            }\n            else\n            {\n                K1[j/2+1]=A[j+1];\n                K2[j/2+1]=A[j];\n                K1[j/2+1].point++;\n            }\n        }\n        int j1=1,j2=1;\n        for (int j=1;j<=2*n;j++)//\u5f52\u5e76\u6392\u5e8f\n            if ((j2>n)|| ((j1<=n)&&((K1[j1].point>K2[j2].point)||((K1[j1].point==K2[j2].point)&&(K1[j1].num<K2[j2].num))) )     )\n            {\n                A[j]=K1[j1];\n                j1++;\n            }\n            else\n            {\n                A[j]=K2[j2];\n                j2++;\n            }\n    }\n    cout<<A[Q].num<<endl;\n    return 0;\n}\n```",
        "postTime": 1500456890,
        "uid": 21377,
        "name": "songyuchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\u8001\u9898\u76ee\u91cd\u505a\u4e86\u54c8\u2026\u2026\n\n**\u4e09\u7533\u4e94\u4ee4\uff1a**\n\n\u4e0d\u80fd\u6bcf\u4e00\u904d\u90fd\u5feb\u6392\uff01\n\n\u5f52\u5e76\u53ef\u662fO(n)\u5462\n\n\u5931\u8d25\u8005\u548c\u80dc\u5229\u8005\u5206\u522b\u6709\u5e8f\n\nstl\u5927\u6cd5\u597d\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct hh\n{\n    int num;\n    int s;\n}a[200000],a1[100000],a2[100000];\nbool cmp(hh a,hh b)//\u6bd4\u8f83\u51fd\u6570\n{\n    if(a.s!=b.s) return a.s>b.s;\n    return a.num<b.num;\n}\nint main()\n{\n    int n,r,q,w[200000];\n    scanf(\"%d%d%d\",&n,&r,&q);\n    n*=2;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&a[i].s);\n        a[i].num=i;\n    }\n    sort(a,a+n,cmp);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&w[i]);\n    }\n    for(int i=0;i<r;i++)//\u6bd4\u8d5bn\u8f6e\n    {\n        for(int j=1;j<=n/2;j++)//\u6bd4\u8d5b\u5e76\u5212\u5206\u6570\u7ec4\n        if(w[a[j*2-2].num]>w[a[j*2-1].num])\n        {\n            a[j*2-2].s++;\n            a1[j-1]=a[j*2-2];\n            a2[j-1]=a[j*2-1];\n        }\n        else \n        {\n            a[j*2-1].s++;\n            a1[j-1]=a[j*2-1];\n            a2[j-1]=a[j*2-2];\n        }\n        merge(a1,a1+n/2,a2,a2+n/2,a,cmp);//\u5f52\u5e76\u6392\u5e8f\n    }\n    printf(\"%d\",a[q-1].num+1);\n    return 0;\n}\n```",
        "postTime": 1485441638,
        "uid": 22659,
        "name": "\u8fdc\u5742\u51db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    },
    {
        "content": "\n```cpp\ntype\n     tlist = array[1..300000] of int64;\n  var\n     data,power,score,num,t1,t2,pt1,pt2,nt1,nt2: tlist;\n     n,m,z1,z2,i,j,k,q,r:longint;\nprocedure qsort(var a : tlist);\nprocedure sort(l,r: longint);\n      var\n         i,j: longint;\n         x,y,u:int64;\n      begin\n         i:=l;j:=r;x:=a[(l+r) div 2];\n         u:=(l+r)div 2;\n         repeat\n           while (a[i]>x)or((a[i]=x)and(num[i]<num[u])) do inc(i);\n           while( x>a[j])or((a[j]=x)and(num[j]>num[u])) do dec(j);\n           if not(i>j) then\n             begin\n                if i=u then u:=j else if j=u then u:=i;\n                y:=a[i];a[i]:=a[j];a[j]:=y;\n                y:=power[i];power[i]:=power[j];power[j]:=y;\n                y:=num[i];num[i]:=num[j];num[j]:=y;\n                inc(i);dec(j);\n             end;\n         until i>j;\n         if l<j then sort(l,j);\n         if i<r then sort(i,r);\n      end;\n    begin\n       sort(1,2*n);\n    end;\nprocedure gb;\nvar\n    i,j,k:longint;\n    z1,z2:int64;\n    cs,cp,cn:tlist;\nbegin\n    fillchar(cs,sizeof(cs),0);\n    fillchar(cp,sizeof(cp),0);\n    fillchar(cn,sizeof(cn),0);\n    z1:=1;z2:=1;k:=1;\n    while (z1<=n)and(z2<=n)do\n    begin\n        if t1[z1]>t2[z2] then\n        begin\n            cs[k]:=t1[z1];cp[k]:=pt1[z1];cn[k]:=nt1[z1];\n            inc(z1);inc(k);continue;\n        end;\n        if t1[z1]<t2[z2] then\n        begin\n            cs[k]:=t2[z2];cp[k]:=pt2[z2];cn[k]:=nt2[z2];\n            inc(z2);inc(k);continue;\n        end;\n        if t1[z1]=t2[z2] then\n        begin\n            if nt1[z1]<nt2[z2] then\n            begin\n                cs[k]:=t1[z1];cp[k]:=pt1[z1];cn[k]:=nt1[z1];\n                inc(z1);inc(k);continue;\n            end\n            else\n            begin\n                cs[k]:=t2[z2];cp[k]:=pt2[z2];cn[k]:=nt2[z2];\n                inc(z2);inc(k);continue;\n            end;\n        end;\n    end;\n    if z1>n then\n         for i:=k to 2*n do\n         begin\n             cs[i]:=t2[z2];\n             cp[i]:=pt2[z2];\n             cn[i]:=nt2[z2];\n             inc(z2);\n         end\n    else\n        for i:=k to 2*n do\n        begin\n             cs[i]:=t1[z1];\n             cp[i]:=pt1[z1];\n             cn[i]:=nt1[z1];\n             inc(z1);\n        end;\n    for i:=1 to 2*n do\n    begin\n        score[i]:=cs[i];\n        power[i]:=cp[i];\n        num[i]:=cn[i];\n    end;\nend;\nbegin\n  read(n,r,q);\n  for i:=1 to 2*n do read(score[i]);\n  for i:=1 to 2*n do read(power[i]);\n  for i:=1 to 2*n do num[i]:=i;\n  qsort(score);\n  while r<>0 do\n  begin\n      dec(r);\n      fillchar(t1,sizeof(t1),0);\n      fillchar(t2,sizeof(t2),0);\n      z1:=0;z2:=0;\n      for i:=1 to n do\n      begin\n          if power[2*i]>power[2*i-1] then\n          begin\n              inc(score[2*i]);inc(z1);inc(z2);\n              t1[z1]:=score[2*i];t2[z2]:=score[2*i-1];\n              pt1[z1]:=power[i*2];pt2[z2]:=power[i*2-1];\n              nt1[z1]:=num[i*2];nt2[z2]:=num[i*2-1];\n              continue;\n          end;\n          if power[2*i]<power[2*i-1] then\n          begin\n              inc(score[2*i-1]);inc(z1);inc(z2);\n              t1[z1]:=score[2*i-1];t2[z2]:=score[2*i];\n              pt1[z1]:=power[i*2-1];pt2[z2]:=power[i*2];\n              nt1[z1]:=num[i*2-1];nt2[z2]:=num[i*2];\n              continue;\n          end ;\n      end;\n      fillchar(score,sizeof(score),0);\n      fillchar(power,sizeof(power),0);\n      fillchar(num,sizeof(num),0);\n      gb;\n  end;\n  write(num[q]);\nend.\n```\n\u6211\u6253\u7684\u7a0b\u5e8f\u6bd4\u8f83\u957f\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u7279\u522b\u4e0d\u559c\u6b22\u7528\u96c6\u5408\u3002\n\u6ce8\uff1a\u5982\u679c\u6bcf\u6b21\u6bd4\u5b8c\u90fd\u5feb\u6392\u7684\u8bdd\uff0c\u53ea\u80fd\u5f9750\u5206\u3002\n\n\u5b9e\u8d28\u4e0a\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u6b21\u5feb\u6392\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u8d5b\u4e86\uff0c\u5206\u522b\u7528t1\uff0ct2\u4e24\u4e2a\u6570\u7ec4\u6765\u50a8\u5b58\u80dc\u5229\u8005\u548c\u5931\u8d25\uff0c\u5f53\u4e00\u8f6e\u6bd4\u8d5b\u8fc7\u540e\uff0c\u518d\u5c06\u8fd9\u4e24\u4e2a\u6570\u7ec4\u8fdb\u884c\u6bd4\u8f83\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2ascore\u6570\u7ec4\uff0c\u53ef\u4ee5\u5927\u5927\u8282\u7701\u65f6\u95f4\u3002\n",
        "postTime": 1478789547,
        "uid": 28599,
        "name": "ssy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1309 \u3010\u745e\u58eb\u8f6e\u3011"
    }
]