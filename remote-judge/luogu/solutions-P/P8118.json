[
    {
        "content": "\u5148\u6765\u70b9\u5f31\u667a\u95ee\u9898\uff1a$n=1$ \u548b\u505a\u3002\n\n\u76f4\u63a5 $a_1=b_1$\uff0c\u6ca1\u4e86\u3002\n\n---\n\n\u518d\u6765\u70b9\u5f31\u667a\u95ee\u9898\uff1a$n=2$ \u548b\u505a\u3002\n\n\u8003\u8651\u8fd8\u662f $a_1=b_1$\uff0c$a_2-b_1\\geq k$ \u5c31 $a_2=b_2$\uff0c\u5426\u5219 $b_2=b_1+k$\uff0c\u5bb9\u6613\u8bc1\u660e\u8fd9\u662f\u6700\u4f18\u89e3\u4e4b\u4e00\u3002\n\n\n---\n\n\u90a3\u4e48\u6765\u70b9\u4e0d\u90a3\u4e48\u5f31\u667a\u7684\u95ee\u9898\uff1a$n=3$ \u548b\u505a\u3002\n\n\u8003\u8651\u4ece $n=2$ \u7684\u5730\u65b9\u62d3\u5c55\u8fc7\u6765\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6784\u9020\u597d\u4e86\u524d\u4e24\u4e2a\u6570\uff0c\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u3002$a_3-b_2\\geq k$ \u7684\u60c5\u51b5\u662f\u5e73\u51e1\u7684\uff0c\u4e0d\u591a\u8d58\u8ff0\uff0c\u5bf9\u4e8e $a_3-b_2\\geq k$ \u7684\u90e8\u5206\uff0c\u6211\u4eec\u5148\u4ee4 $b_3=b_2+k$ \u7136\u540e\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- $a_2-b_1<k$\n\n  \u8fd9\u4e2a\u65f6\u5019\u4e09\u4e2a\u6570\u662f\u4e92\u76f8\u4f9d\u8d56\u7684\uff0c\u56e0\u4e3a $b_2>a_2,b_3>a_3,b_1=a_1$\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5c06 $b$ \u7684\u503c\u6574\u4f53\u51cf\u5c11 $1$\uff0c\u90a3\u4e48 $b_2,b_3$ \u7b54\u6848\u53d8\u5c0f $1$\uff0c$b_1$ \u7b54\u6848\u53d8\u5927 $1$\uff0c\u7b54\u6848\u53d8\u4f18\uff0c\u5982\u6b64\u53ef\u4ee5\u4e00\u76f4\u5e73\u79fb\u5230 $a_2=b_2$ \u6216 $a_3=b_3$ \u65f6\u505c\u6b62\u3002\n  \n- $a_2-b_1\\geq k$\n\n  \u548c $n=2$ \u4e00\u6837\u3002\n  \n---\n\n\u63a8\u5e7f\u5230 $n$ \u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u8def\uff1a\u7ef4\u62a4\u8fde\u7eed\u7684\u4e00\u6bb5\u4e92\u76f8\u4f9d\u8d56\u7684\u6570\u5b57\u6700\u4f18\u65b9\u6848\u4e2d\u6240\u6709\u6570\u5b57\u6700\u5c0f\u7684\u6784\u9020\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u540e\u9762\u4e00\u4e2a\u6570\u5c3d\u53ef\u80fd\u9760\u8fd1 $a$\u3002\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\uff0c\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\u6240\u6709 $b_i>a_i$ \u7684\u4f4d\u7f6e $b_i-a_i$ \u7684\u503c\uff0c\u5e76\u4e14\u7edf\u8ba1\u5f53\u524d\u4e00\u6bb5\u91cc\u9762 $b_i>a_i$ \u548c  $b_i\\leq a_i$ \u7684\u4f4d\u7f6e\u4e2a\u6570\u3002\n\n\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5982\u679c $a_i-b_{i-1}>k$\uff0c\u6211\u4eec\u76f4\u63a5\u65b0\u5f00\u4e00\u6bb5\u5373\u53ef\uff1b\u5426\u5219\u5982\u679c\u5f53\u524d\u6bb5\u5185 $b_i>a_i$ \u7684\u6570\u4e2a\u6570\u5982\u679c**\u4e0d\u5c11\u4e8e** $b_i\\leq a_i$ \u7684\u6570\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5411\u4e0b\u6574\u4f53\u5e73\u79fb\u7b54\u6848\u4e0d\u4f1a\u53d8\u52a3\uff0c\u4e8e\u662f\u5e73\u79fb\u5230\u6bb5\u5185\u65b0\u51fa\u73b0\u4e00\u4e2a $a_i=b_i$ \u4e3a\u6b62\u3002\u8fd9\u4e2a\u8ddd\u79bb\u662f\u53ef\u4ee5\u76f4\u63a5\u5728\u5806\u91cc\u67e5\u51fa\u6765\u7684\uff0c\u7136\u540e\u5f39\u51fa\u5806\u9876\u5143\u7d20\uff0c\u5e76\u7ed9\u6574\u4e2a\u5806\u6253\u4e0a\u8fd9\u4e48\u591a\u7684\u51cf\u6807\u8bb0\u3002\n\n\u4f46\u662f\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u6ca1\u6709\u8003\u8651\u5230\uff1a\u9664\u4e86\u7b2c\u4e00\u6bb5\uff0c\u522b\u7684\u6bb5\u662f\u4e0d\u80fd\u65e0\u9650\u5236\u5411\u4e0b\u5e73\u79fb\u7684\uff0c\u56e0\u4e3a\u5230\u67d0\u4e2a\u4f4d\u7f6e\u8fd9\u4e00\u6bb5\u7684\u6bb5\u9996\u4f1a\u548c\u4e0a\u4e00\u6bb5\u6bb5\u4f4d\u76f8\u5dee\u521a\u597d $k$\uff0c\u4e24\u7aef\u4f1a\u76f8\u8fde\u53d8\u6210\u4e00\u6bb5\u3002\n\n\u8fd9\u542f\u793a\u6211\u4eec\u4f7f\u7528\u53ef\u5e76\u5806\uff0c\u5b58\u4e00\u4e0b\u76f8\u90bb\u4e24\u7aef\u4e4b\u95f4\u7684\u5dee\u548c\u524d\u9762\u6bb5\u7684\u4fe1\u606f\uff0c\u6bcf\u6b21\u5e73\u79fb\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u4e24\u7aef\u662f\u5426\u76f8\u8fde\uff0c\u5982\u679c\u76f8\u8fde\u5c31\u6574\u4e2a\u6bb5\u5411\u4e0b\u5e73\u79fb\u5230\u4e24\u7aef\u521a\u597d\u76f8\u8fde\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5408\u5e76\u4e24\u4e2a\u6bb5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define int long long\nint t,n,m,a[2000001],ans,ch[2000001][2],val[2000001],tag[2000001],root[2000001],dis[2000001],tot,low,high,lst,cnt;\nvector<pair<int,int> > v;\nvector<int> gap,num;\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')\n        c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x;\n}\ninline void print(int x)\n{\n    if(x>=10)\n        print(x/10);\n    putchar(x%10+'0');\n}\ninline int newnode(int w)\n{\n    val[++tot]=w;\n    return tot;\n}\ninline void push_down(int x)\n{\n    if(tag[x])\n    {\n        if(ch[x][0])\n        {\n            val[ch[x][0]]-=tag[x];\n            tag[ch[x][0]]+=tag[x];\n        }\n        if(ch[x][1])\n        {\n            val[ch[x][1]]-=tag[x];\n            tag[ch[x][1]]+=tag[x];\n        }\n        tag[x]=0;\n    }\n}\ninline int merge(int x,int y)\n{\n    if(!x||!y)\n        return x|y;\n    if(val[x]>val[y])\n        x^=y^=x^=y;\n    push_down(x);\n    ch[x][1]=merge(ch[x][1],y);\n    if(dis[ch[x][0]]<dis[ch[x][1]])\n        ch[x][0]^=ch[x][1]^=ch[x][0]^=ch[x][1];\n    dis[x]=dis[ch[x][1]]+1;\n    return x;\n}\ninline int pop(int x)\n{\n    push_down(x);\n    return merge(ch[x][0],ch[x][1]);\n}\nsigned main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;++i)\n        a[i]=read();\n    t=read();\n    if(t==0)\n    {\n        print(0);\n        putchar('\\n');\n    }\n    low=1;\n    lst=a[1];\n    for(int i=2;i<=n;++i)\n    {\n        if(a[i]-lst>=m)\n        {\n            v.push_back({low,high});\n            gap.emplace_back(a[i]-lst-m);\n            num.emplace_back(cnt++);\n            low=1;\n            high=0;\n            lst=a[i];\n        }\n        else\n        {\n            ++high;\n            lst+=m;\n            ans+=lst-a[i];\n            root[cnt]=merge(root[cnt],newnode(lst-a[i]));\n            while(high>=low)\n            {\n                if(gap.empty())\n                {\n                    lst-=val[root[cnt]];\n                    if(root[cnt])\n                    {\n                        tag[root[cnt]]+=val[root[cnt]];\n                        root[cnt]=pop(root[cnt]);\n                    }\n                    --high;\n                    ++low;\n                    continue;\n                }\n                if(val[root[cnt]]<=gap.back())\n                {\n                    lst-=val[root[cnt]];\n                    if(root[cnt])\n                    {\n                        gap.back()-=val[root[cnt]];\n                        tag[root[cnt]]+=val[root[cnt]];\n                        root[cnt]=pop(root[cnt]);\n                    }\n                    --high;\n                    ++low;\n                    continue;\n                }\n                lst-=gap.back();\n                if(root[cnt])\n                {\n                    tag[root[cnt]]+=gap.back();\n                    val[root[cnt]]-=gap.back();\n                    root[cnt]=merge(root[cnt],root[num.back()]);\n                }\n                low+=v.back().first;\n                high+=v.back().second;\n                gap.pop_back();\n                num.pop_back();\n                v.pop_back();\n            }\n        }\n        if(t==0)\n        {\n            print(ans);\n            putchar('\\n');\n        }\n    }\n    if(t==1)\n    {\n        print(ans);\n        putchar('\\n');\n    }\n    return 0;\n}\n```",
        "postTime": 1644410916,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "P8118 \u300cRdOI R3.5\u300dMystery \u9898\u89e3"
    },
    {
        "content": "\u8bf4\u53e5\u95f2\u8bdd\uff0c\u8fd9\u9898\u8ddf\u52a8\u6001\u89c4\u5212\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\n\n\u672c\u9898\u89e3\u7ebf\u6bb5\u6811 $O(n\\log n)$\u3002\n\n\u9996\u5148\u624b\u73a9\u6837\u4f8b\uff0c\u5c06 $a_i$ \u4ece\u5de6\u5230\u53f3\u4e00\u4e2a\u4e00\u4e2a\u5730\u63d2\u5165\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u52a8\u6001\u7ef4\u62a4\u4f7f\u5f97\u7b54\u6848\u6700\u5c0f\u7684\u5e8f\u5217 $b_i$\u3002\n\n\u624b\u73a9\u524d\u4e24\u4e2a\u6837\u4f8b\u540e\u53ef\u4ee5\u53d1\u73b0 $b$ \u5e8f\u5217\u4f1a\u5206\u6210\u82e5\u5e72\u4e2a\u6bb5\uff0c\u6bcf\u4e2a\u6bb5\u91cc\u7684 $b_i$ \u4e00\u5b9a\u662f\u4e00\u4e2a\u4ee5 $k$ \u4e3a\u516c\u5dee\u7684\u7b49\u5dee\u6570\u5217\uff0c\u539f\u56e0\u53ef\u4ee5\u4ece\u4e0b\u9762\u7684\u4f8b\u5b50\u770b\u51fa\u3002\n\n\u6bd4\u5982\u5f53 $k=2$ \u65f6\uff0c\u5bf9\u4e8e\u4e0b\u9762\u7684 $a$ \u5e8f\u5217\n\n```\na: 1 1 4 5 9 10 11 16 17 18 19\n```\n\n \u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u8fd9\u6837\u7684\u4e00\u4e2a $b$ \u5e8f\u5217\u4f7f\u5f97\u5dee\u5f02\u503c\u6700\u5c0f\n\n```\nb: -1 1 3 5 | 8 10 12 | 15 17 19 21\n```\n\n\u5176\u4e2d ```|``` \u5c06\u4e0d\u540c\u7684\u6bb5\u5206\u4e86\u5f00\u6765\u3002\n\n\u73b0\u5728\u6211\u4eec\u5728 $a$ \u5e8f\u5217\u7684\u672b\u5c3e\u52a0\u5165\u6570\u5b57 ```20```\uff0c$a$ \u5e8f\u5217\u53d8\u6210\n\n```\na: 1 1 4 5 | 9 10 11 | 16 17 18 19 20\n```\n\n\u56e0\u4e3a $21+k=23>20$\uff0c\u6211\u4eec\u8ba9 $b$ \u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u6570\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u4e5f\u5c31\u662f ```23```\u3002\n\n```\nb: -1 1 3 5 | 8 10 12 | 15 17 19 21 23\n```\n\n\u4f46\u662f\u5dee\u5f02\u503c\u4e0d\u518d\u662f\u6700\u5c0f\u7684\u4e86\uff0c\u6211\u4eec\u9700\u8981\u5bf9 $b$ \u5e8f\u5217\u4f5c\u4e00\u4e9b\u6539\u52a8\u4f7f\u5f97\u5dee\u5f02\u503c\u51cf\u5c0f\u3002\n\n\u5bf9\u6bd4\u4e00\u4e0b $a$ \u5e8f\u5217\u7684\u6700\u540e\u4e00\u6bb5\u548c $b$ \u5e8f\u5217\u7684\u6700\u540e\u4e00\u6bb5\u3002\n\n```\na: 16 17 18 19 20\nb: 15 17 19 21 23\n```\n\n\u56e0\u4e3a $b$ \u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u6bb5\u4e00\u5b9a\u662f\u4e00\u4e2a\u4ee5 $k$ \u4e3a\u516c\u5dee\u7684\u7b49\u5dee\u6570\u5217\uff0c\u82e5\u60f3\u4fee\u6539\u4e00\u6bb5\u4e2d\u7684\u6570\u5b57\u5fc5\u7136\u4f7f\u8fd9\u4e00\u6bb5\u6574\u4f53\u52a0\u6216\u51cf\u4e00\u4e2a\u76f8\u540c\u7684\u6570\u503c\uff0c\u5bf9\u6bb5\u7684\u4fee\u6539\u5fc5\u7136\u662f\u6574\u4f53\u52a0\u51cf\u3002\n\n\u8003\u8651\u5230\u6700\u540e\u4e00\u6bb5\u4e2d\uff0c\u82e5\u6574\u4f53\u51cf\u7684\u8bdd\u4f1a\u6709 $2$ \u4e2a\u6570\u5b57 ```15 17``` \u4f1a\u4f7f\u5f97\u5dee\u5f02\u503c\u589e\u5927\uff0c\u4f1a\u6709 $3$ \u4e2a\u6570\u5b57 ```19 21 23``` \u4f1a\u4f7f\u5dee\u5f02\u503c\u51cf\u5c0f\u3002\n\n\u6211\u4eec\u79f0\u4f7f\u5dee\u5f02\u503c\u589e\u5927\u7684\u6570\u4e3a**\u5347\u6570**\uff0c\u4f7f\u5dee\u5f02\u503c\u51cf\u5c0f\u7684\u6570\u4e3a**\u964d\u6570**\uff0c\u663e\u7136\u5347\u6570\u548c\u964d\u6570\u7684\u4e2a\u6570\u51b3\u5b9a\u4e86\u6574\u4f53\u51cf\u662f\u5426\u4f1a\u4f7f\u5dee\u5f02\u503c\u51cf\u5c0f\u3002\n\n\u6700\u540e\u4e00\u6bb5\u4e2d\uff0c\u5347\u6570\u7684\u4e2a\u6570\u5c0f\u4e8e\u964d\u6570\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u4f7f\u6700\u540e\u4e00\u6bb5\u6574\u4f53\u51cf\u4ee5\u4f7f\u5dee\u5f02\u503c\u51cf\u5c0f\uff0c\u90a3\u4e48\u8981\u51cf\u591a\u5c11\u5408\u9002\u5462\uff1f\n\n\u663e\u7136\u51cf\u5230\u964d\u6570\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u5347\u6570\u4e2a\u6570\u65f6\u6700\u4e3a\u5408\u9002\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6574\u4f53\u51cf $1$\uff0c\u4f7f\u5f97 $b$ \u5e8f\u5217\u7684\u6700\u540e\u4e00\u6bb5\u53d8\u6210\n\n```\nb: 14 16 18 20 22\n```\n\n\u4e8e\u662f\u65b0\u7684 $a$ \u5e8f\u5217\u548c $b$ \u5e8f\u5217\u5c31\u662f\n\n```\na: 1 1 4 5 | 9 10 11 | 16 17 18 19 20\nb: -1 1 3 5 | 8 10 12 | 14 16 18 20 22\n```\n\n\u7136\u540e\u6211\u4eec\u518d\u5728 $a$ \u4e2d\u52a0\u5165\u4e00\u4e2a\u6570\u5b57 ```21```\uff0c\u6ce8\u610f\u5230 ```b``` \u4e2d\u7684\u5347\u6570\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\u964d\u6570\u4e2a\u6570\uff0c\u4e0d\u9700\u8981\u6574\u4f53\u51cf\uff0c\u6240\u4ee5\u4e24\u4e2a\u5e8f\u5217\u53d8\u4e3a\n\n```\na: 1 1 4 5 | 9 10 11 | 16 17 18 19 20 21\nb: -1 1 3 5 | 8 10 12 | 14 16 18 20 22 24\n```\n\n\u518d\u5728 $a$ \u4e2d\u52a0\u5165\u4e00\u4e2a\u6570\u5b57 ```22```\uff0c\u8fd9\u65f6\u5019 ```b``` \u4e2d\u7684\u964d\u6570\u4e2a\u6570\u5927\u4e8e\u5347\u6570\u4e2a\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5bf9 $b$ \u5e8f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u6bb5\u8fdb\u884c\u6574\u4f53\u51cf\u3002\n\n```\na: 1 1 4 5 | 9 10 11 | 16 17 18 19 20 21 22\nb: -1 1 3 5 | 8 10 12 | 13 15 17 19 21 23 25\n```\n\n\u4f46\u662f\u8fd9\u6837\u6709\u95ee\u9898\uff0c\u6ce8\u610f\u5230 $b$ \u5e8f\u5217\u4e2d\u7b2c $2$ \u6bb5\u672b\u5c3e\u7684\u6570\u5b57 ```12``` \u548c\u7b2c $3$ \u6bb5\u5f00\u5934\u7684\u6570\u5b57 ```13``` \u5dee\u8ddd\u5c0f\u4e8e $k$\uff0c\u8fd9\u6837\u7684 $b$ \u5e8f\u5217\u662f\u975e\u6cd5\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c06 $b$ \u5e8f\u5217\u5012\u9000\u56de\u6574\u4f53\u51cf\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\n\n```\nb: -1 1 3 5 | 8 10 12 | 14 16 18 20 22 24 26\n```\n\n\u53d1\u73b0\u7b2c $2$ \u6bb5\u548c $3$ \u6bb5\u4e4b\u95f4\u5df2\u7ecf\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u4e86\uff0c\u5e94\u8be5\u5c06\u4e24\u6bb5\u5408\u5e76\u3002\n\n```\nb: -1 1 3 5 | 8 10 12 14 16 18 20 22 24 26\n```\n\n\u518d\u4e0e $a$ \u5e8f\u5217\u5bf9\u6bd4\u4e00\u4e0b\u3002\n\n```\na: 1 1 4 5 | 9 10 11 16 17 18 19 20 21 22\n```\n\n\u5347\u6570\u6709 ```8 10 14 16 18```\uff0c\u964d\u6570\u6709 ```12 20 22 24 26```\uff0c\u964d\u6570\u4e0e\u5347\u6570\u6570\u91cf\u4e00\u81f4\uff0c\u4e0d\u9700\u8981\u518d\u6574\u4f53\u51cf\u4e86\u3002\n\n\u518d\u5728 $a$ \u4e2d\u52a0\u5165\u6570\u5b57 ```40```\uff0c\u56e0\u4e3a $b$ \u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u52a0 $k$ \u540e\u7684\u503c $26+2=28<40$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8ba9 $b$ \u7684\u4e0b\u4e00\u4e2a\u6570\u5b57\u4e3a $40$\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u65b0\u5f00\u4e00\u4e2a\u6bb5\u3002\n\n```\nb: -1 1 3 5 | 8 10 12 14 16 18 20 22 24 26 | 40\n```\n\n\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u9700\u8981\u4e3a $b$ \u5e8f\u5217\u7684\u6bcf\u4e2a\u6bb5\u7ef4\u62a4\u964d\u6570\u548c\u5347\u6570\u7684\u4e2a\u6570\uff0c\u4ee5\u53ca\u6700\u5feb\u80fd\u51cf\u5c11\u6210\u5347\u6570\u7684\u964d\u6570\u662f\u54ea\u4e00\u4e2a\uff0c\u540c\u65f6\u6bcf\u4e2a\u6bb5\u662f\u4e00\u4e2a\u516c\u5dee\u4e3a $k$ \u7684\u7b49\u5dee\u6570\u5217\uff0c\u6545\u9700\u8981\u4e3a\u6bcf\u4e2a\u6bb5\u7ef4\u62a4\u7b49\u5dee\u6570\u5217\u7684\u521d\u503c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8bbe\u8ba1\u5982\u4e0b\u7684\u7ed3\u6784\u4f53\u6765\u7ef4\u62a4 $b$ \u5e8f\u5217\u4e2d\u4e0d\u540c\u7684\u6bb5\u3002\n\n```cpp\n#define ll long long\nstruct Section{\n    int l, r; //\u8fd9\u4e2a\u6bb5\u5bf9\u5e94\u7684\u533a\u95f4\u4e3a[l,r]\n    ll \tbase, //\u7b49\u5dee\u6570\u5217\u7684\u521d\u503c\n    \tmax_down; //\u8fd9\u4e2a\u6bb5\u518d\u6574\u4f53\u51cf\u5c11\u591a\u5c11\u5c31\u9700\u8981\u4e0e\u4e0a\u4e00\u4e2a\u6bb5\u5408\u5e76(\u7b2c\u4e00\u4e2a\u6bb5\u8ba4\u4e3a\u662f\u6b63\u65e0\u7a77)\n    ll get_lst(){ return base + (ll)(r-l)*k; } //\u8fd4\u56de\u7b49\u5dee\u6570\u5217\u7684\u672b\u503c\n};\n```\n\n\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u5185\u7684\u964d\u6570\u4e2a\u6570\u3001\u6bcf\u4e2a\u964d\u6570\u518d\u51cf\u5c11\u591a\u5c11\u5c31\u4f1a\u53d8\u6210\u5347\u6570\u3001\u6700\u5feb\u51cf\u5c11\u6210\u5347\u6570\u7684\u964d\u6570\u662f\u54ea\u4e00\u4e2a\u3002\n\n```cpp\nstruct Seg{\n    int cnt, //\u964d\u6570\u4e2a\u6570\n    \tpos; //\u6700\u5feb\u51cf\u5c11\u6210\u5347\u6570\u7684\u964d\u6570\u5728 b \u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\n    ll\ttmi, //pos \u4e0a\u7684\u6570\u518d\u51cf\u5c11\u591a\u5c11\u5c31\u4f1a\u53d8\u6210\u5347\u6570\n    \ttag; //\u533a\u95f4\u52a0\u6807\u8bb0\uff0c\u7528\u6765\u5b8c\u6210\u6574\u4f53\u51cf\u7684\u64cd\u4f5c\n} seg[maxn<<2]\n```\n\n\u7136\u540e\u6211\u4eec\u5728\u7ed9 $a$ \u5e8f\u5217\u4e0d\u65ad\u6dfb\u52a0\u6570\u5b57\u7684\u8fc7\u7a0b\u4e2d\u52a8\u6001\u7ef4\u62a4 $b$ \u5e8f\u5217\u4ee5\u53ca\u7b54\u6848\u5373\u53ef\u3002\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u52a0\u6ce8\u91ca\u3002\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <assert.h>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define ll long long\n#define db double\n#define ull unsigned long long\n#define _for(i, a, b) for(re int i = (a); i < (b); ++i)\n#define _rfor(i, a, b) for(re int i = (a); i <= (b); ++i)\n#define _fev(p, u) for(re int p = head[u]; p; p = nex[p])\n#define inf 0x7fffffffffffffffll\n#define maxn 1000005\n#define maxnn (10*maxn)\n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\ntemplate<class T> \ninline void umx(T &x, const T &y){ if (y > x) x = y; }\ntemplate<class T>\ninline void umi(T &x, const T &y){ if (y < x) x = y; }\n\nint rg; //\u7ebf\u6bb5\u6811\u7684\u503c\u57df\nstruct Seg{ int pos, cnt; ll tag, tmi; } seg[maxnn];\n#define tmi(x) seg[x].tmi\n#define pos(x) seg[x].pos\n#define cnt(x) seg[x].cnt\n#define tag(x) seg[x].tag\n#define lx (x<<1)\n#define rx (x<<1|1) \n\n//push up \u64cd\u4f5c\nvoid ud(re int x){\n\ttmi(x) = min(tmi(lx), tmi(rx));\n\tpos(x) = tmi(lx) == tmi(x) ? pos(lx) : pos(rx);\n\tcnt(x) = cnt(lx) + cnt(rx);\n}\n\nvoid build(int x, int tl, int tr){\n\ttag(x) = 0;\n\tif (tl == tr){ cnt(x) = tag(x) = pos(x) = 0; tmi(x) = inf; return; }\n\tint mi = (tl+tr)>>1;\n\tbuild(lx, tl, mi);\n\tbuild(rx, mi+1, tr);\n\tud(x);\n}\n\n//\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u533a\u95f4\u51cf\u64cd\u4f5c\nvoid spread(re int x, re ll vl){\n\tif (tmi(x) < inf){\n\t\ttmi(x) -= vl;\n\t\ttag(x) += vl;\n\t\tassert(tmi(x) >= 0);\n\t}\n}\n\n//push down \u64cd\u4f5c\nvoid pd(re int x){\n\tspread(lx, tag(x));\n\tspread(rx, tag(x));\n\ttag(x) = 0;\n}\n\n//\u5728\u4f4d\u7f6e p \u4e0a\u63d2\u5165\u4e00\u4e2a\u964d\u6570\uff0c\u8fd9\u4e2a\u964d\u6570\u518d\u51cf\u5c11 vl \u5c31\u4f1a\u53d8\u6210\u5347\u6570\nvoid addn(int x, ll vl, int p, int tl, int tr){\n\tif (tl == tr){ tmi(x) = vl; pos(x) = p; cnt(x) = 1; tag(x) = 0; return; }\n\tif (tag(x)) pd(x);\n\tint mi = (tl+tr)>>1;\n\tif (p <= mi) addn(lx, vl, p, tl, mi);\n\telse addn(rx, vl, p, mi+1, tr);\n\tud(x);\n}\n\n//\u5c06\u4f4d\u7f6e p \u4e0a\u7684\u964d\u6570\u4fee\u6539\u4e3a\u5347\u6570\nvoid deln(int x, int p, int tl, int tr){\n\tassert(x);\n\tif (tl == tr){\n\t\tassert(tmi(x)==0);\n\t\ttmi(x) = inf; pos(x) = cnt(x) = tag(x) = 0;\n\t\treturn;\n\t}\n\tif (tag(x)) pd(x);\n\tint mi = (tl+tr)>>1;\n\tif (p <= mi) deln(lx, p, tl, mi);\n\telse deln(rx, p, mi+1, tr);\n\tud(x); \n}\n\n//\u533a\u95f4\u51cf\u64cd\u4f5c\nvoid mdf(int x, ll vl, int l, int r, int tl, int tr){\n\tif (l == tl && r == tr){ spread(x, vl); return; }\n\tif (tag(x)) pd(x);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) mdf(lx, vl, l, r, tl, mi);\n\telse if (l > mi) mdf(rx, vl, l, r, mi+1, tr);\n\telse mdf(lx, vl, l, mi, tl, mi), mdf(rx, vl, mi+1, r, mi+1, tr);\n\tud(x);\n}\n\n//\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5185\u964d\u6570\u7684\u4e2a\u6570 c, \u6700\u5feb\u51cf\u5c11\u6210\u5347\u6570\u7684\u964d\u6570\u7684\u4f4d\u7f6e p, p \u4f4d\u7f6e\u4e0a\u7684\u964d\u6570\u51cf\u5c11\u591a\u5c11\u540e\u4f1a\u53d8\u6210\u5347\u6570 vl\nstruct Par{ int p, c; ll vl; };\nPar qry(int x, int l, int r, int tl, int tr){\n\tif (tl == l && tr == r){ return {pos(x), cnt(x), tmi(x)}; }\n\tif (tag(x)) pd(x);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) return qry(lx, l, r, tl, mi);\n\telse if (l > mi) return qry(rx, l, r, mi+1, tr);\n\telse{\n\t\tPar p1 = qry(lx, l, mi, tl, mi), p2 = qry(rx, mi+1, r, mi+1, tr);\n\t\treturn p1.vl <= p2.vl ? Par({p1.p, p1.c+p2.c, p1.vl}) : Par({p2.p, p1.c+p2.c, p2.vl});\n\t}\n}\n\nint k,\n\ttop = 0, //\u6bb5\u7684\u6570\u76ee, \u4e5f\u5c31\u662f\u6808\u9876\n\ta[maxn]; //a \u5e8f\u5217\nll ans = 0; //\u7b54\u6848\nstruct Section{\n\tint l, r;\n\tll updown, base;\n\tll get_lst(){ return base+(ll)(r-l)*k; }\n} stk[maxn]; //\u6808\n\n//\u5bf9\u4e00\u4e2a\u6bb5\u8fdb\u884c\u6574\u4f53\u51cf vl\n//\u540c\u65f6 p \u4ee3\u8868\u90a3\u4e2a\u6700\u65b0\u53d8\u4e3a\u5347\u6570\u7684\u964d\u6570\u7684\u4f4d\u7f6e\n//c \u662f\u8fd9\u4e00\u6bb5\u4e2d\u7684\u964d\u6570\u4e2a\u6570\u51cf\u53bb\u5347\u6570\u4e2a\u6570\nvoid decrease(Section &sec, re int c, re int p, re ll vl){\n\tans -= (ll)c*vl;\n\tmdf(1, vl, sec.l, sec.r, 1, rg);\n\tif (vl == 0) assert(p != -1);\n\tif (p != -1) deln(1, p, 1, rg);\n\tsec.base -= vl;\n\tif (sec.updown < inf){\n\t\tassert(sec.updown >= vl);\n\t\tsec.updown -= vl;\n\t}\n}\n\n//\u5c1d\u8bd5\u5c06\u6700\u540e\u4e00\u6bb5\u6574\u4f53\u51cf\u5c11\n//\u8fd9\u6837\u4e00\u5b9a\u81f3\u5c11\u4f7f\u4e00\u4e2a\u964d\u6570\u53d8\u4e3a\u4e00\u4e2a\u5347\u6570\n//\u82e5\u6210\u529f\u4f7f\u5f97\u81f3\u5c11\u4e00\u4e2a\u964d\u6570\u53d8\u4e3a\u5347\u6570\u5219\u8fd4\u56de true\n//\u5426\u5219\u8fd4\u56de false\nbool maintain(){\n\tSection &sec = stk[top];\n\t\n\tPar par = qry(1, sec.l, sec.r, 1, rg);\n\tre int c = par.c*2-(sec.r-sec.l+1); //\u964d\u6570\u4e2a\u6570\u51cf\u53bb\u5347\u6570\u4e2a\u6570 \n\tif (c < 0) return false;\n\t\n\tre int p = par.p; re ll vl = par.vl;\n\tassert(vl < inf && p > 0);\n\t\n\tif (sec.updown == inf || vl < sec.updown){//\u8fd8\u6ca1\u51cf\u5c11\u5b8c\n\t\tdecrease(sec, c, p, vl);\n\t} \n\telse{ //\u51cf\u5c11\u5b8c\u4e86\uff0c\u8981\u4e0e\u4e0a\u4e00\u6bb5\u5408\u5e76\u4e86\n\t\tdecrease(sec, c, vl==sec.updown?p:-1, sec.updown);\n\t\tassert(sec.updown == 0);\n\t\tassert(top > 1);\n\t\tSection &pre_sec = stk[top-1];\n\t\tassert(pre_sec.get_lst()+k == sec.base);\n\t\tpre_sec.r = sec.r;\n\t\t--top;\n\t}\n\treturn true;\n}\n\nsigned main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\t//freopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\t\n\tseg[0] = {0, 0, 0, inf};\n\t\n\tre int n = rg = rdnt(), T; k = rdnt(); ans = top = 0;\n\t_rfor(i, 1, n) a[i] = rdnt(); T = rdnt();\n\tbuild(1, 1, n);\n\t\n\t_rfor(i, 1, n){\n\t\tif (i == 1){\n\t\t\tSection &sec = stk[++top];\n\t\t\tsec.l = sec.r = 1; sec.updown = inf; sec.base = a[i];\n\t\t}\n\t\telse{\n\t\t\tre ll curb = stk[top].get_lst()+k;\n\t\t\tif (curb >= a[i]){\n\t\t\t\tans += curb-a[i];\n\t\t\t\t++stk[top].r;\n\t\t\t\taddn(1, curb-a[i], i, 1, rg);\n\t\t\t\twhile(maintain());\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSection &sec = stk[++top];\n\t\t\t\tsec.l = sec.r = i; sec.updown = a[i]-curb; sec.base = a[i];\n\t\t\t}\n\t\t}\n\t\tif (T == 0 || i == n) pf(\"%lld\\n\", ans);\n\t}\n\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1646292213,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P8118 \u300cRdOI R3.5\u300dMystery\u3011\u9898\u89e3"
    }
]