[
    {
        "content": "\u5148\u8003\u8651\u53ea\u6709\u4e00\u7ef4\u7684\u60c5\u51b5\uff0c\u8981\u6c42\u652f\u6301\u533a\u95f4\u52a0\u548c\u6c42\u533a\u95f4 $\\gcd$\uff0c\u6839\u636e $\\gcd$ \u7684\u6027\u8d28\uff0c\u53d1\u73b0\uff1a\n\n$$\n\t\\gcd(a_1,a_2,a_3,\\ldots a_n)=\\gcd(a_i,a_2-a_1,a_3-a_2,\\ldots a_n-a_{n-1})\n$$\n\n\u5176\u4e2d $a_i$ \u4e3a\u539f\u5e8f\u5217 $a$ \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u4e0e\u5e8f\u5217 $a$ \u7684\u5dee\u5206\u5e8f\u5217\u7684 $\\gcd$ \u5373\u4e3a\u539f\u5e8f\u5217\u7684 $\\gcd$\u3002\u6839\u636e\u8be5\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e00\u7ef4\u7684\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u7ef4\u62a4\u5dee\u5206\u5e8f\u5217\uff0c\u533a\u95f4\u67e5\u8be2 $\\gcd$ \u6765\u5b9e\u73b0\u4e86\u3002\u5bf9\u4e8e $a_i$\uff0c\u6839\u636e\u4fee\u6539\u7ef4\u62a4\u5176\u5f53\u524d\u503c\u5373\u53ef\u3002\n\n\u7136\u540e\u8003\u8651\u4e8c\u7ef4\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a $4 \\times 4$ \u7684\u77e9\u5f62\uff1a\n\n$$\n\\begin{aligned} \n\ta_{1,1}\\quad a_{1,2}\\quad a_{1,3}\\quad a_{1,4} \\\\\n\ta_{2,1}\\quad a_{2,2}\\quad a_{2,3}\\quad a_{2,4} \\\\\n\ta_{3,1}\\quad a_{3,2}\\quad a_{3,3}\\quad a_{3,4} \\\\\n\ta_{4,1}\\quad a_{4,2}\\quad a_{4,3}\\quad a_{4,4}   \n\\end{aligned}\n$$\n\n\u8bbe\u68cb\u76d8\u5b88\u62a4\u8005\u7684\u4f4d\u7f6e\u4e3a $(x,y)$\uff0c\u5148\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c\u5dee\u5206\uff0c\u5f97\uff1a\n\n$$\n\\begin{aligned} \n\ta_{1,y}\\quad a_{1,2}-a_{1,1}\\quad a_{1,3}-a_{1,2}\\quad a_{1,4}-a_{1,3} \\\\\n\ta_{2,y}\\quad a_{2,2}-a_{2,1}\\quad a_{2,3}-a_{2,2}\\quad a_{2,4}-a_{2,3} \\\\\n\ta_{3,y}\\quad a_{3,2}-a_{3,1}\\quad a_{3,3}-a_{3,2}\\quad a_{3,4}-a_{3,3} \\\\\n\ta_{4,y}\\quad a_{4,2}-a_{4,1}\\quad a_{4,3}-a_{4,2}\\quad a_{4,4}-a_{4,3}   \n\\end{aligned}\n$$\n\n\u5bf9\u6bcf\u4e00\u884c\u6765\u7ef4\u62a4\u5dee\u5206\u5e8f\u5217\uff0c\u6839\u636e\u6bcf\u4e00\u884c\u7684 $\\gcd$\uff0c\u5c31\u80fd\u6c42\u5f97\u6574\u4e2a\u77e9\u5f62\u7684 $\\gcd$\u3002\u53d1\u73b0\u8fd9\u6837\u5b9e\u73b0\u590d\u6742\u5ea6\u4f9d\u7136\u65e0\u6cd5\u63a5\u53d7\uff0c\u4e8e\u662f\u5bf9\u6bcf\u4e00\u5217\u4e5f\u8fdb\u884c\u5dee\u5206\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u4e8c\u7ef4\u5dee\u5206\uff0c\u5f97\uff1a\n\n$$\n\\begin{aligned} \n\t&a_{x,y}\\qquad\\qquad\\qquad\\quad a_{x,2}-a_{x,1}\\qquad\\qquad\\qquad\\quad a_{x,3}-a_{x,2}\\qquad\\qquad\\qquad\\quad a_{x,4}-a_{x,3} \\\\\\\\\n\t&a_{2,y}-a_{1,y}\\qquad a_{2,2}-a_{2,1}-a_{1,2}+a_{1,1}\\qquad a_{2,3}-a_{2,2}-a_{1,3}+a_{1,2}\\qquad a_{2,4}-a_{2,3}-a_{1,4}+a_{1,3} \\\\\\\\\n\t&a_{3,y}-a_{2,y}\\qquad a_{3,2}-a_{3,1}-a_{2,2}+a_{2,1}\\qquad a_{3,3}-a_{3,2}-a_{2,3}+a_{2,2}\\qquad a_{3,4}-a_{3,3}-a_{2,4}+a_{2,3} \\\\\\\\\n\t&a_{4,y}-a_{3,y}\\qquad a_{4,2}-a_{4,1}-a_{3,2}+a_{3,1}\\qquad a_{4,3}-a_{4,2}-a_{3,3}+a_{3,2}\\qquad a_{4,4}-a_{4,3}-a_{3,4}+a_{3,3}  \n\\end{aligned}\n$$\n\n\u53d1\u73b0\u4e8c\u7ef4\u5dee\u5206\u540e\u7684\u8fd9\u4e2a\u77e9\u5f62\u7684 $\\gcd$ \u5373\u4e3a\u539f\u77e9\u5f62\u7684 $\\gcd$\u3002\u7136\u540e\u8003\u8651\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\uff0c\u53bb\u6389\u4f4d\u7f6e $(1,1)$ \u7684 $a_{x,y}$ \u540e\u5269\u4e0b\u7684\u5e8f\u5217\uff0c\u5176\u4e3a\u4e00\u7ef4\u4e0a\u7684\u95ee\u9898\uff0c\u7528\u4e24\u4e2a\u4e00\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\u5bf9\u4e8e\u53bb\u6389\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u7684\u5269\u4e0b\u7684\u77e9\u5f62\uff0c\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\u4e24\u8005\u90fd\u662f\u53ea\u7528\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u3002\u5bf9\u4e8e $a_{x,y}$\uff0c\u6839\u636e\u4fee\u6539\u7ef4\u62a4\u5176\u5f53\u524d\u503c\u5373\u53ef\u3002\n\n\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7528\u6811\u5957\u6811\u6216\u8005\u56db\u5206\u6811\u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6811\u5957\u6811\u7684\u7a7a\u95f4\u4e0d\u597d\u5904\u7406\uff0c\u5e76\u4e14\u9898\u76ee\u4e2d\u4e5f\u8bf4\u660e\u4e86\u67e5\u8be2\u662f\u968f\u673a\u7684\uff0c\u6240\u4ee5\u6211\u8fd9\u91cc\u7528\u56db\u5206\u6811\u6765\u5b9e\u73b0\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u4e86\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2000010\n#define maxm 32000010\n#define a(i,j) a[(i-1)*m+j]\n#define b(i,j) b[(i-1)*m+j]\n#define ls (cur<<1)\n#define rs (cur<<1|1)\n#define mid ((l+r)>>1)\n#define midx ((u+d)>>1)\n#define midy ((l+r)>>1)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,sx,sy,q,root,rt=1,tree_cnt;\nint uls[maxm],urs[maxm],dls[maxm],drs[maxm];\nll w;\nll a[maxn],b[maxn],val[maxm];\nll gcd(ll a,ll b)\n{\n    return b?gcd(b,a%b):abs(a);\n}\nvoid build(int u,int d,int l,int r,int &cur)\n{\n    if(u>d||l>r) return;\n    if(!cur) cur=++tree_cnt;\n    if(u==d&&l==r)\n    {\n        val[cur]=b(u,l);\n        return;\n    }\n    build(u,midx,l,midy,uls[cur]),build(u,midx,midy+1,r,urs[cur]);\n    build(midx+1,d,l,midy,dls[cur]),build(midx+1,d,midy+1,r,drs[cur]);\n    val[cur]=gcd(gcd(val[uls[cur]],val[urs[cur]]),gcd(val[dls[cur]],val[drs[cur]]));\n}\nvoid modify(int u,int d,int l,int r,int x,int y,ll v,int cur)\n{\n    if(l==r&&u==d)\n    {\n        val[cur]+=v;\n        return;\n    }\n    if(x<=midx)\n    {\n        if(y<=midy) modify(u,midx,l,midy,x,y,v,uls[cur]);\n        else modify(u,midx,mid+1,r,x,y,v,urs[cur]);\n    }\n    else\n    {\n        if(y<=midy) modify(midx+1,d,l,midy,x,y,v,dls[cur]);\n        else modify(midx+1,d,midy+1,r,x,y,v,drs[cur]);\n    }\n    val[cur]=gcd(gcd(val[uls[cur]],val[urs[cur]]),gcd(val[dls[cur]],val[drs[cur]]));\n}\nll query(int U,int D,int L,int R,int u,int d,int l,int r,int cur)\n{\n    if(U>D||L>R) return 0;\n    if(U<=u&&D>=d&&L<=l&&R>=r) return val[cur];\n    ll v=0;\n    if(U<=midx)\n    {\n        if(L<=midy) v=gcd(v,query(U,D,L,R,u,midx,l,midy,uls[cur]));\n        if(R>midy) v=gcd(v,query(U,D,L,R,u,midx,midy+1,r,urs[cur]));\n    }\n    if(D>midx)\n    {\n        if(L<=midy) v=gcd(v,query(U,D,L,R,midx+1,d,l,midy,dls[cur]));\n        if(R>midy) v=gcd(v,query(U,D,L,R,midx+1,d,midy+1,r,drs[cur]));\n    }\n    return v;\n}\nstruct Segment_Tree\n{\n    ll a[maxn],val[maxn];\n    void build(int l,int r,int cur)\n    {\n        if(l==r)\n        {\n            val[cur]=a[l];\n            return;\n        }\n        build(l,mid,ls),build(mid+1,r,rs);\n        val[cur]=gcd(val[ls],val[rs]);\n    }\n    void modify(int l,int r,int pos,ll v,int cur)\n    {\n        if(l==r)\n        {\n            val[cur]+=v;\n            return;\n        }\n        if(pos<=mid) modify(l,mid,pos,v,ls);\n        else modify(mid+1,r,pos,v,rs);\n        val[cur]=gcd(val[ls],val[rs]);\n    }\n    ll query(int L,int R,int l,int r,int cur)\n    {\n        if(L>R) return 0;\n        if(L<=l&&R>=r) return val[cur];\n        ll v=0;\n        if(L<=mid) v=gcd(v,query(L,R,l,mid,ls));\n        if(R>mid) v=gcd(v,query(L,R,mid+1,r,rs));\n        return v;\n    }\n}T1,T2;\nint main()\n{\n    read(n),read(m),read(sx),read(sy),read(q);\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n            read(a(i,j));\n    for(int i=1;i<n;++i)\n        for(int j=1;j<m;++j)\n            b(i,j)=a(i+1,j+1)-a(i,j+1)-a(i+1,j)+a(i,j);\n    for(int i=1;i<n;++i) T1.a[i]=a(i+1,sy)-a(i,sy);\n    for(int i=1;i<m;++i) T2.a[i]=a(sx,i+1)-a(sx,i);\n    w=a(sx,sy),build(0,n,0,m,root),T1.build(0,n,root),T2.build(0,m,root);\n    while(q--)\n    {\n        int u,d,l,r,opt;\n        ll v;\n        read(opt),read(u),read(l),read(d),read(r);\n        if(!opt)\n        {\n            u=sx-u,l=sy-l,d=sx+d,r=sy+r;\n            v=gcd(w,query(u,d-1,l,r-1,0,n,0,m,root));\n            v=gcd(v,gcd(T1.query(u,d-1,0,n,rt),T2.query(l,r-1,0,m,rt)));\n            printf(\"%lld\\n\",v);\n        }\n        else\n        {\n            read(v);\n            if(sx>=u&&sx<=d&&sy>=l&&sy<=r) w+=v;\n            if(sy>=l&&sy<=r) T1.modify(0,n,u-1,v,rt),T1.modify(0,n,d,-v,rt);\n            if(sx>=u&&sx<=d) T2.modify(0,m,l-1,v,rt),T2.modify(0,m,r,-v,rt);\n            modify(0,n,0,m,u-1,l-1,v,root),modify(0,n,0,m,d,r,v,root);\n            modify(0,n,0,m,u-1,r,-v,root),modify(0,n,0,m,d,l-1,-v,root);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1594349639,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2086 \u3010[NOI2012]\u9b54\u5e7b\u68cb\u76d8\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4e00\u7ef4\u7684\u60c5\u51b5\u600e\u4e48\u505a\uff0c\u6211\u4eec\u53d1\u73b0\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u65e0\u6cd5\u533a\u95f4\u4fee\u6539\u3002\n\n\u89c2\u5bdf\u53d1\u73b0 $\\gcd(x,y)=\\gcd(x,y-x)$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5dee\u5206\uff0c\u7136\u540e\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002\n\n\u4e8c\u7ef4\u5462\uff1f\n\n\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e8c\u9636\u5dee\u5206\u5c31\u597d\u5566\uff01\n\n\u6211\u4eec\u53d1\u73b0\u56e0\u4e3a\u4ed6\u6bcf\u6b21\u90fd\u662f\u4ece\u4e00\u4e2a\u70b9\u5f80\u5916\u6269\u5c55\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5 $(x,y)$ \u4e3a\u4e2d\u5fc3\u5411\u56db\u4e2a\u65b9\u5411\u5dee\u5206\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u529b\u5206\u4e5d\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n- \u4fee\u6539\u77e9\u5f62\u5305\u542b $(X,Y)$\n- \u4fee\u6539\u77e9\u5f62\u5305\u542b $x=X,y=Y$ \u4e2d\u7684\u4e00\u6761\uff08\u56db\u79cd\uff09\n- \u4fee\u6539\u77e9\u5f62\u5168\u90e8\u4f4d\u4e8e $(X,Y)$ \u7684\u4e00\u4e2a\u65b9\u5411\uff08\u5de6\u4e0a\uff0c\u53f3\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0b\uff09\n\n\u901a\u8fc7\u4e8c\u9636\u5dee\u5206\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u5b9e\u73b0\u5355\u70b9\u4fee\u6539\n\n\u7136\u540e\u5c31\u662f\u6109\u5feb\u7684coding\u65f6\u95f4\u5566\uff01\n\n[code](https://www.luogu.com.cn/paste/rtyanhx6)",
        "postTime": 1606370201,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2086 \u3010[NOI2012]\u9b54\u5e7b\u68cb\u76d8\u3011"
    },
    {
        "content": "### \u7b80\u5316\u9898\u610f\n\n\u4e8c\u7ef4\u77e9\u5f62\uff0c\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6c42 $\\gcd$\u3002\n### \u5206\u6790\n\u5148\u6765\u8003\u8651\u5f31\u5316\u7684\u4e00\u7ef4\u7248\u672c\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u53ef\u662f\u5c31\u65e0\u6cd5\u4e0b\u4f20\u6807\u8bb0\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u8003\u8651\u628a\u533a\u95f4\u64cd\u4f5c\u8f6c\u6362\u4e3a\u5355\u70b9\uff0c\u60f3\u5230\u4e86\u5dee\u5206\u3002\u53d1\u73b0 $\\gcd(a,b)=\\gcd(a-b,b)$\uff0c\u6240\u4ee5\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u662f\u5bf9\u7684\uff0c\u8fb9\u754c\u518d\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n### \u6269\u5c55\n\u73b0\u5728\u53d8\u6210\u4e86\u4e8c\u7ef4\uff0c\u5982\u679c\u6211\u4eec\u7b80\u7b80\u5355\u5355\u7684\u7ef4\u62a4 $n$ \u884c\u5dee\u5206\u6570\u7ec4\uff0c$n$ \u9897\u7ebf\u6bb5\u6811\uff0c\u4fee\u6539\u65f6\u4e00\u884c\u4e00\u884c\u4fee\u6539\u5c31\u4f1a\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u4e0d\u884c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u4e24\u4e2a\u6570\u76f8\u4e58\u7b49\u4e8e $n$\uff0c\u5fc5\u5b9a\u6709\u4e00\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e $\\sqrt{n}$\uff0c\u53e6\u4e00\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e $\\sqrt{n}$\uff0c\u6240\u4ee5\u6211\u4eec\u6311\u77ed\u7684\u7ef4\u62a4\u5c31\u884c\u3002\u4e00\u6b21\u64cd\u4f5c\u65f6\u95f4\u4e3a $O(\\min(n, m)\\times \\log_{\\max(n, m)})$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u518d\u4e58\u4e0a\u4e00\u4e2a $T$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u5361\u5361\u5e38\u5b8c\u5168\u8fc7\u5f97\u53bb\u3002",
        "postTime": 1678314726,
        "uid": 637796,
        "name": "Xy_top",
        "ccfLevel": 0,
        "title": "P2086 \u9898\u89e3"
    },
    {
        "content": "\u8865\u4e00\u4e2a\u56db\u5206\u6811\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u8bc1\u660e\u3002\n\n\u7c7b\u4f3c\u4e8e CH4302\uff0c\u9898\u89e3\u533a\u5927\u4f6c\u5bf9\u91c7\u53d6\u4e8c\u7ef4\u5dee\u5206\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e8c\u7ef4\u7248\u672c\u7684\u65b9\u6cd5\u5df2\u7ecf\u6709\u8be6\u7ec6\u7684\u9610\u91ca\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u9700\u8981\u4e00\u4e2a\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\u3001\u77e9\u5f62 $\\gcd$ \u7684\u6570\u636e\u7ed3\u6784\uff0c\u663e\u7136\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u7136\u800c\uff0c\u7531\u4e8e\u521d\u5b66 DS \u65f6\u5e38\u5e38\u542c\u5230\u56db\u5206\u6811\u8fd9\u4e00\u590d\u6742\u5ea6\u201c\u6781\u7aef\u9519\u8bef\u201d\u7684\u7ed3\u6784\uff0c\u8fd9\u91cc\u7b14\u8005\u9996\u5148\u60f3\u5230\u4e86\u56db\u5206\u6811\u3002\u663e\u7136\u5355\u70b9\u4fee\u6539\u6ca1\u6709\u95ee\u9898\uff1b\u800c\u5b9e\u9645\u4e0a\u7531\u4e8e\u6570\u636e\u968f\u673a\uff0c\u5b9e\u9645\u4e0a\u8fd8\u53ef\u4ee5\u8fbe\u5230 $O(\\log n)$ \u7684\u5747\u644a\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6\u548c\u8f83\u5c0f\u7684\u65f6\u7a7a\u5e38\u6570\u3002\u8fd9\u91cc\u5206\u6790\u56db\u5206\u6811\u7684\u590d\u6742\u5ea6\u3002\u8003\u8651\u56db\u5206\u6811\u6bcf\u6b21\u9012\u5f52\u7684\u60c5\u5f62\uff1a\n\n1. \u8be2\u95ee\u77e9\u5f62\u6070\u597d\u5b8c\u5168\u8986\u76d6\u5f53\u524d\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n2. \u5426\u5219\u82e5\u8be2\u95ee\u77e9\u5f62\u4e0e\u56db\u4e2a\u513f\u5b50\u4e2d\u7684\u67d0\u4e00\u4e2a\u91cd\u53e0\uff0c\u53ea\u9012\u5f52\u5355\u68f5\u5b50\u6811\u3002\n3. \u5426\u5219\u82e5\u8be2\u95ee\u77e9\u5f62\u4e0e\u4e24\u4e2a\u76f8\u90bb\u513f\u5b50\u91cd\u53e0\uff0c\u9012\u5f52\u4e24\u68f5\u5b50\u6811\u3002\n4. \u5426\u5219\u82e5\u8be2\u95ee\u77e9\u5f62\u4e0e\u56db\u4e2a\u513f\u5b50\u91cd\u53e0\uff0c\u9012\u5f52\u56db\u68f5\u5b50\u6811\u3002\n\n\u8003\u8651\u6700\u574f\u60c5\u51b5\uff0c\u8be2\u95ee\u4e3a $1\\times n$ \u7684\u77e9\u5f62\uff0c\u663e\u7136\u5bfc\u81f4\u590d\u6742\u5ea6\u548c\u904d\u5386\u5355\u68f5\u7ebf\u6bb5\u6811\u76f8\u5f53\uff0c\u4e3a $O(n)$\u3002\n\n\u4f46\u7531\u4e8e **\u6570\u636e\u968f\u673a**\uff0c\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u6982\u7387\u8f83\u5c0f\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u60c5\u51b5 4 \u53ea\u4f1a\u51fa\u73b0\u591a\u6b21\uff0c\u4f46\u8fd9\u65f6\u5b9e\u9645\u4e0a\u53ea\u6709\u4e00\u6b21\u53ef\u80fd\u51fa\u73b0\u8be2\u95ee\u77e9\u5f62\u4e0d\u4e0e\u8be5\u8282\u70b9\u56db\u89d2\u4e2d\u4efb\u610f\u4e00\u4e2a\u91cd\u53e0\u3002\u800c\u5982\u679c\u91cd\u53e0\uff0c\u663e\u7136\u4f1a\u9012\u5f52\u5728\u513f\u5b50\u4e0a\u51fa\u73b0\u4e00\u6b21 1 \u60c5\u51b5\uff08\u5982\u5de6\u4e0b\uff09\u3002\u53e6\u5916\uff0c\u8fd9\u4e2a\u513f\u5b50\u5bf9\u9762\u7684\uff08\u5982\u53f3\u4e0a\uff09\u513f\u5b50\u80af\u5b9a\u4e5f\u4f1a\u51fa\u73b0\u4e0e\u89d2\u843d\u91cd\u5408\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u513f\u5b50\u4f1a\u5728\u82e5\u5e72\u6b21 2 \u60c5\u51b5\u540e\u56de\u5230 4 \u60c5\u51b5\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u56e0\u6b64\uff0c\u60c5\u51b5 4 \u603b\u5171\u53ea\u4f1a\u5e26\u6765 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u5b9e\u9645\u5bfc\u81f4\u590d\u6742\u5ea6\u4e0d\u5bf9\u7684\u662f\u5728\u63a5\u4e0b\u6765\u51fa\u73b0\u7684\u60c5\u51b5 3 \u4ee5\u53ca\u4e4b\u524d 4 \u60c5\u51b5\u4e2d\u51fa\u73b0\u7684\u5c1a\u672a\u88ab\u5904\u7406\u7684\u4e24\u4e2a\u513f\u5b50\uff08\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u82e5\u5e72\u60c5\u51b5 3 \u7ec4\u5408\uff09\uff0c\u4f8b\u5982\u8de8\u8fc7\u6574\u4e2a\u77e9\u5f62\u4e2d\u70b9\u7684\u4e00\u6b21 $n\\times 2$ \u7684\u8be2\u95ee\u5c31\u5bfc\u81f4\u8fd9\u4e24\u4e2a\u513f\u5b50\u9700\u8981\u9012\u5f52 $O(n)$ \u6b21\u624d\u80fd\u5f97\u5230\u7ed3\u679c\u3002\u6b64\u65f6\u8be2\u95ee\u77e9\u5f62\u5728\u9012\u5f52\u4e2d\u59cb\u7ec8\u4e0e\u4e24\u4e2a\u513f\u5b50\u91cd\u53e0\u3002\u663e\u7136\uff0c\u7ebf\u6bb5\u6811\u4e2d\u4e5f\u4f1a\u5b58\u5728\u4e0e\u4e24\u4e2a\u513f\u5b50\u59cb\u7ec8\u91cd\u5408\u7684\u8be2\u95ee\u533a\u95f4\uff0c\u4f46\u5728\u8fd9\u4e4b\u524d\u9012\u5f52\u8def\u5f84\u4e0a\u5df2\u7ecf\u7531\u4e8e\u88ab\u5b8c\u5168\u8986\u76d6\u800c\u526a\u679d\u4e86\u3002\u4f46\u5728\u56db\u5206\u6811\u4e0a\uff0c\u7531\u4e8e\u8282\u70b9\u7684\u989d\u5916\u4e00\u7ef4\u59cb\u7ec8\u4e0d\u80fd\u88ab\u8be2\u95ee\u77e9\u5f62\u5b8c\u5168\u8986\u76d6\uff0c\u56e0\u6b64\u53ea\u80fd\u7ee7\u7eed\u9012\u5f52\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u5728\u67d0\u4e00\u5b50\u6811\u5185\u51fa\u73b0\u4e86\u8fd9\u4e00\u60c5\u51b5\uff0c\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u8bbe\u6b64\u65f6\u8be5\u5b50\u6811\u5bf9\u5e94\u77e9\u5f62\u5728\u5de6\u8fb9\u754c\u4e0e\u8be2\u95ee\u77e9\u5f62\u91cd\u5408\u5e76\u4e14\u6ca1\u6709\u8de8\u8fc7\u56db\u4e2a\u513f\u5b50\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fdb\u5165\u8fd9\u4e00\u5b50\u6811\u65f6\uff0c\u6211\u4eec\u53ea\u4f1a\u5bf9\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u8fb9\u4e24\u4e2a\u513f\u5b50\u8fdb\u884c\u9012\u5f52\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5de6\u8fb9\u91cd\u5408\u7684\u90e8\u5206\u5bbd\u5ea6\u4e3a $k$\uff0c\u5219\u6211\u4eec\u4e00\u65e6\u5728\u60c5\u51b5 2 \u4e2d\u8fdb\u5165\u5bbd\u5ea6\u5c0f\u4e8e $k$ \u7684\u8282\u70b9\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u3002\u800c\u5982\u679c\u9012\u5f52\u4e2d\u51fa\u73b0\u60c5\u51b5 4\uff0c\u90a3\u4e48\u5de6\u534a\u8fb9\u80af\u5b9a\u88ab\u5b8c\u5168\u8986\u76d6\u76f4\u63a5\u8fd4\u56de\uff0c\u53f3\u8fb9\u53c8\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u60c5\u51b5 2 \u7684\u95ee\u9898\uff08\u8fd9\u65f6\u548c\u7ebf\u6bb5\u6811\u5b8c\u5168\u4e00\u81f4\uff09\u3002\n\n\u5982\u679c\u5047\u8bbe $k$ \u662f**\u968f\u673a**\u7684\uff0c\u5219\u671f\u671b\u6b64\u65f6\u9012\u5f52\u4ea7\u751f\u590d\u6742\u5ea6\u4e3a\uff1a\n\n$$\\dfrac{1}{n}\\sum^{n}_{k=1}\\sum^{\\lceil \\log n - \\log k\\rceil}_{j=0}2^j={O}(\\log n)$$\n\n\u663e\u7136\u4e24\u4e2a\u672a\u5904\u7406\u513f\u5b50\u7684 $k$ \u503c\u5e94\u5f53\u4e3a\u968f\u673a\u3002\u800c $3$ \u60c5\u51b5\u8981\u4e48\u7531\u4e8e\u8be2\u95ee\u533a\u95f4\u6070\u597d\u4f4d\u4e8e\u5bf9\u5e94\u4f4d\u7f6e\u5bfc\u81f4\uff0c\u8981\u4e48\u662f\u7531**\u7b2c\u4e00\u6b21**\u60c5\u51b5 4 \u4ea7\u751f\u3002\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u4e0a\u8ff0\u5206\u6790\u540c\u6837\u53ef\u4ee5\u7528\u4e8e\u6574\u4f53\u8be2\u95ee\u3002\n\n\u7ec6\u8282\u8bf8\u591a\u3002\u6ce8\u610f\u5230\u5728 CH4302 \u4e2d\u8fd9\u4e2a\u662f\u652f\u6301\u4efb\u610f\u533a\u95f4\u4fee\u6539\u7684\uff0c\u5b9e\u9645\u4e0a\u672c\u9898\u4e2d\u4e5f\u540c\u6837\u652f\u6301\uff0c\u53ea\u4e0d\u8fc7\u8fd8\u9700\u8981\u989d\u5916\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u5b9e\u9645\u503c\u3002\u8003\u8651\u67e5\u8be2\u77e9\u5f62 $(x_1,y_1)(x_2,y_2)$\uff0c\u6c42 $\\gcd(a_{x_1,y_1},\\operatorname{ask}(x_1,y_1+1,x_2,y_2),\\operatorname{ask}(x_1+1,y_1,x_2,y_2))$ \u5373\u53ef\u3002",
        "postTime": 1651594655,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "P2086 [NOI2012] \u9b54\u5e7b\u68cb\u76d8 \u9898\u89e3"
    },
    {
        "content": "# \u524d\u7f6e\u6280\u80fd\n\u672c\u9898\u662f\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u9635\u6c42gcd\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u95ee\u9898\uff0c\u90a3\u5904\u7406\u4e00\u7ef4\u7684\u95ee\u9898\u81ea\u7136\u5c31\u662f\u524d\u7f6e\u6280\u80fd\u4e86\uff01\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n$\\boxed{\\gcd(a1,a2,\\dots,an)=\\gcd(a1,a2-a1,\\dots,an-an-1)}$\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u7ef4\u7684\u95ee\u9898\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u4e86\u3002\n\n# \u505a\u6cd5\n\n## \u9519\u89e3\n\u6709\u4e86\u4e0a\u9762\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u628a\u67e5\u8be2\u7684\u77e9\u5f62\u5206\u6210\u5de6\u4e0a\u89d2\u4e00\u4e2a\u70b9\uff0c\u5de6\u8fb9\u4e00\u5217\uff0c\u4e0a\u9762\u4e00\u884c\uff0c\u53f3\u4e0b\u4e00\u5757\u56db\u4e2a\u90e8\u5206\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5f00\u59cb\u6211\u4e5f\u662f\u8fd9\u4e48\u505a\uff0c\u7136\u540e\u5c31\u628a4k+\u7684\u4ee3\u7801\u5220\u5f97\u53ea\u5269\u7ebf\u6bb5\u6811\u4e86\u3002\u8be5\u505a\u6cd5\u7684\u95ee\u9898\u5c31\u5728\u4e8e\uff0c\u5982\u679c\u4f60\u4fee\u6539\u4e86\u4e00\u4e2a\u77e9\u9635\u90a3\u4f60\u4e5f\u9700\u8981\u5c06\u8fd9\u4e2a\u77e9\u9635\u62c6\u5206\u6210\u56db\u4e2a\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u3002\n\n\u4f46\u662f\u4f60\u4fee\u6539\u5de6\u8fb9\u4e00\u5217\u7684\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e00\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u5bf9\u5e94\u4e00\u884c\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4fee\u6539\u4e86\u4e00\u5217\uff0c\u5bf9\u5e94\u7684\u6bcf\u884c\u90fd\u9700\u4fee\u6539\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684\uff01\n\n\u770b\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3q1d7tvx.png)\n\n\u5b9e\u9645\u4e0a\u4fee\u6539\u65f6\u4f60\u5e76**\u65e0\u6cd5\u4fee\u6539\u5230\u84dd\u8272**\u8fd9\u4e00\u683c\uff0c\u56e0\u4e3a\u4fee\u6539\u7684\u65f6\u5019\u84dd\u8272\u8fd9\u4e00\u683c\u662f\u4f5c\u4e3a\u4e00\u6574\u4e2a\u65b9\u5757\u8fdb\u884c\u4fee\u6539\u7684\uff0c\u5219\u8be2\u95ee\u4ee5\u5176\u4e3a\u8d77\u59cb\u5bf9\u5e94\u884c\u5217\u90fd\u4f1a\u51fa\u95ee\u9898\u3002\n\n\u51fa\u9898\u4eba\u5fc5\u7136\u4e5f\u77e5\u9053\u4e0a\u9762\u8fd9\u4e2a\u770b\u4f3c\u6b63\u786e\u7684\u9519\u89e3\uff0c\u90a3\u4e48\u96be\u9053\u8fd9\u662f\u4e00\u9053\u9519\u9898\uff1f\n\n\u663e\u7136\u4e0d\u662f\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u7279\u70b9\uff0c\u6240\u6709\u8be2\u95ee\u90fd\u662f\u4ee5 $(x,y)$ \u4e3a\u4e2d\u5fc3\u7684\uff01\n\n\u90a3\u4e48\u6211\u4eec\u4ee5 $(x,y)$ \u4e3a\u5750\u6807\u539f\u70b9\uff0c\u5efa\u7acb\u5750\u6807\u7cfb\u5207\u5272\u77e9\u5f62\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u8be2\u95ee\u7684\u6bcf\u4e2a\u77e9\u5f62\u7684\u6bcf\u4e2a\u90fd\u8981\u4e48\u5728\u539f\u70b9\uff0c\u8981\u4e48\u5728\u5750\u6807\u8f74\u4e0a\uff0c\u8981\u4e48\u5728\u56db\u4e2a\u8c61\u9650\n\n\u6211\u4eec\u53ea\u9700\u8981\u4e00\u68f5\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u8bb0\u5f55\u4e00\u4e0b\u4e00\u4e2a\u77e9\u9635\u505a\u5b8c\u5dee\u5206\u540e\u7684gcd\u5c31\u884c\u4e86\u3002~~\u8981\u4e0d\u5c31\u50cf\u6211\u4e00\u6837\\*\\*\u5730\u5f00\u4e863\u68f5\u7ebf\u6bb5\u6811\uff0c\u56db\u4e2a\u8c61\u9650\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u5750\u6807\u8f74\u7528\u4e00\u7ef4\u7ebf\u6bb5\u6811~~\n\n\u5177\u4f53\u600e\u4e48\u5dee\u5206\u5462\uff0c\u5728\u5750\u6807\u8f74\u4e0a\u7684\u5927\u5bb6\u4e00\u5b9a\u90fd\u4f1a\uff0c\u6211\u5c31\u4e3e\u4e00\u4e2a\u5728\u7b2c\u4e00\u8c61\u9650\u7684\u4f8b\u5b50\u597d\u4e86\n\n\u5bf9\u4e8e\u7b2c\u4e00\u8c61\u9650\u4e00\u4e2a\u70b9\uff0c\u6709\uff1a\n\n$\\boxed{c[i][j]=a[i][j]-a[i+1][j]-a[i][j+1]+a[i+1][j+1]}$\n\n($c$ \u8868\u793a\u5dee\u5206\u540e\u7684\u503c\uff0c$a$ \u8868\u793a\u539f\u77e9\u9635)\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff1f\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u505a\u7684\u4e8b\u5c31\u662f**\u51cf\u5c11\u4fee\u6539\u6b21\u6570**\uff0c\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u90a3\u4e2a\u5dee\u5206\u521a\u597d\u52a0\u4e24\u4e2a\u503c\uff0c\u51cf\u4e24\u4e2a\u503c\uff0c\u800c\u4e14\u8fd9\u56db\u4e2a\u6570\u521a\u597d\u76f8\u90bb\u6784\u6210\u77e9\u9635\uff0c\u4e14\u8fd9\u4e2a\u77e9\u9635\u521a\u521a\u521a\u521a\u597d\u662f\u5411\u7740\u539f\u70b9\u7684\u554a\uff0c\u771f\u7684\u662f\u521a\u521a\u521a\u521a\u597d\u554a\uff0c\u4e0d\u9009\u5b83\u9009\u8c01\u554a\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u7684\u7a0b\u5e8f\u5b9e\u73b0\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\uff0c\u4fee\u6539\u4e5f\u662f\u5206\u4e3a\u4fee\u6539\u5750\u6807\u8f74\u548c\u4fee\u6539\u8c61\u9650.\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8c61\u9650\u505a\u7684\u64cd\u4f5c\u5927\u6982\u957f\u8fd9\u6837:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j2p8ha1z.png)\n\n\u65e2\u7136\u5dee\u5206\u5df2\u7ecf\u505a\u51fa\u6765\u4e86\uff0c\u90a3\u4fee\u6539\u4e5f\u4e0d\u662f\u96be\u4e8b\u3002\u8fd8\u6709\u4e00\u4e9b\u8fb9\u754c\u95ee\u9898\u9700\u8981\u5904\u7406\u4e00\u4e0b\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u5f53\u77e9\u5f62\u4e00\u6761\u8fb9\u6070\u597d\u8d34\u5728\u5750\u6807\u8f74\u4e0a\u65f6\uff0c\u4f8b\u5982\u8d34\u5728x\u8f74\u4e0a\uff0c\u77e9\u9635\u5411y\u7684\u6b63\u534a\u8f74\u5ef6\u4f38\uff0c\u6b64\u65f6\u77e9\u9635\u5e76\u4e0d\u5305\u62ecy\u7684\u8d1f\u534a\u8f74\uff0c\u4f46\u662f\u8d1f\u534a\u8f74\u7684\u7b2c\u4e00\u4e2a\u70b9\u4e0e\u539f\u70b9\u505a\u5dee\u5206\u7684\u65f6\u5019\uff0c\u5dee\u5206\u7684\u7ed3\u679c\u4ecd\u7136\u4f1a $-k$\uff0c\u5f53\u7136\uff0c\u8fb9\u8d34\u5728\u5750\u6807\u8f74\u4e0a\u65f6\uff0c\u8c61\u9650\u4e2d\u7684\u70b9\u4e5f\u4f1a\u53d7\u5230\u4e00\u4e9b\u5f71\u54cd\uff0c\u8fd9\u4e2a\u53cd\u6b63\u4e71\u641e\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n# $code$\n\n```\n#include<bits/stdc++.h>  \nusing namespace std;      \n         \nconst int maxn = 5E5 + 10;     \nconst int dx[4][4] = {{0,0,1,1},{0,0,1,1},{0,0,-1,-1},{0,0,-1,-1}};    \nconst int dy[4][4] = {{0,1,0,1},{0,-1,0,-1},{0,1,0,1},{0,-1,0,-1}};     \ntypedef long long LL;      \n         \nLL c[maxn*25];      \nint n,m,t,x,y,X1,X2,Y1,Y2,cnt = 0,tt,lc[maxn*20],rc[maxn*20];   \nint jx[10],jy[10],cur;     \n         \nvector <LL> v[maxn];    \nvector <int> bo[maxn];\n         \nLL gcd(LL a,LL b) {return b?gcd(b,a%b):a;}      \n     \nLL ABS(LL x) {return x>0?x:x*-1;}  \n     \nvoid PRE(int l,int r,int o)      \n{      \n    cnt = max(cnt,o);      \n    if (l == r) return;      \n    int mid = (l+r) >> 1;      \n    PRE(l,mid,2*o); PRE(mid+1,r,2*o+1);      \n}  \n         \nLL que(int o,int l,int r,int ql,int qr)    \n{    \n    if (ql <= l && r <= qr) return ABS(c[o]);    \n    LL ret = 0;    \n    int mid = (l+r) >> 1;    \n    if (ql <= mid) ret = gcd(ret,que(lc[o],l,mid,ql,qr));    \n    if (qr > mid) ret = gcd(ret,que(rc[o],mid+1,r,ql,qr));    \n    return ret;    \n}  \n       \nLL Modi(int l,int r,int o,int pos,LL va,int typ)      \n{      \n    if (l == r) {if (typ) c[o] = va; else c[o] += va; return ABS(c[o]);}      \n    int mid = (l+r) >> 1; LL ret;  \n    if (pos <= mid) {      \n        if (!lc[o]) lc[o] = ++cnt;      \n        ret = Modi(l,mid,lc[o],pos,va,typ);      \n    }      \n    else {      \n        if (!rc[o]) rc[o] = ++cnt;      \n        ret = Modi(mid+1,r,rc[o],pos,va,typ);      \n    }      \n    c[o] = gcd(ABS(c[lc[o]]),ABS(c[rc[o]]));  \n    return ret;  \n}      \n         \nLL Modify(int l,int r,int o,int pn,int pm,LL va)      \n{      \n    if (!pn || !pm || pn > n || pm > m) return -1;    \n    if (l == r) return Modi(1,m,o,pm,va,0);      \n    int mid = (l+r) >> 1;      \n    LL ret1,ret2;  \n    if (pn <= mid) {  \n        ret1 = Modify(l,mid,2*o,pn,pm,va);  \n        ret2 = que(2*o+1,1,m,pm,pm);   \n    }     \n    else {  \n        ret1 = Modify(mid+1,r,2*o+1,pn,pm,va);  \n        ret2 = que(2*o,1,m,pm,pm);      \n    }  \n    return Modi(1,m,o,pm,gcd(ret1,ret2),1);  \n}      \n         \nLL getLL()    \n{    \n    LL ret = 0;  LL xx = 1;  \n    char ch = getchar();    \n    while (ch < '0' || ch > '9') {  \n        if (ch == '-') xx = -1;  \n        ch = getchar();   \n    }  \n    while ('0' <= ch && ch <= '9') ret = ret*10 + 1LL*(ch-'0'),ch = getchar();    \n    return ret*xx;    \n}    \n         \nvoid Judge(int px,int py,LL c)    \n{    \n    if (!px || !py || px > n || py > m || px == x || py == y) return;   \n\tif (bo[px][py] == tt) return; \n    int po;    \n    if (px < x && py < y) po = 0;    \n    else if (px < x && py > y) po = 1;    \n    else if (px > x && py < y) po = 2;    \n    else po = 3;    \n    LL tot = 0;    \n    for (int l = 0; l < 4; l++) {    \n        int xx = px + dx[po][l];    \n        int yy = py + dy[po][l];    \n        LL t;    \n        if ((!dx[po][l] || !dy[po][l]) && dx[po][l] != dy[po][l]) t = -1;  else t = 1;    \n        if (X1 <= xx && xx <= X2 && Y1 <= yy && yy <= Y2) tot += c*t;    \n    }    \n    if (tot != 0) Modify(1,n,1,px,py,tot),bo[px][py] = tt,jx[cur] = px,jy[cur++] = py;    \n}     \n         \nLL query(int o,int l,int r,int nl,int nr,int ml,int mr)    \n{    \n    if (nl <= l && r <= nr) return que(o,1,m,ml,mr);    \n    LL ret = 0;    \n    int mid = (l+r) >> 1;    \n    if (nl <= mid) ret = gcd(ret,query(2*o,l,mid,nl,nr,ml,mr));    \n    if (nr > mid) ret = gcd(ret,query(2*o+1,mid+1,r,nl,nr,ml,mr));    \n    return ret;    \n}      \n       \nint main()      \n{      \n    #ifdef YZY      \n        //freopen(\"chess1.in\",\"r\",stdin);      \n        //freopen(\"test.txt\",\"w\",stdout);  \n    #endif      \n             \n    cin >> n >> m >> x >> y >> t; PRE(1,n,1);      \n    for (int i = 1; i <= n; i++) {    \n        v[i].push_back(0);    bo[i].push_back(0);\n        for (int j = 1; j <= m; j++) {    \n            LL x; x = getLL();    \n            v[i].push_back(x);    bo[i].push_back(0);\n        }    \n    }    \n           \n    for (int i = 1; i <= n; i++)    \n        for (int j = 1; j <= m; j++) {    \n            if (i == x && j == y) Modify(1,n,1,i,j,v[i][j]);    \n            else if (i == x && j < y) Modify(1,n,1,i,j,v[i][j]-v[i][j+1]);    \n            else if (i == x && j > y) Modify(1,n,1,i,j,v[i][j]-v[i][j-1]);    \n            else if (j == y && i < x) Modify(1,n,1,i,j,v[i][j]-v[i+1][j]);    \n            else if (j == y && i > x) Modify(1,n,1,i,j,v[i][j]-v[i-1][j]);    \n            else if (i < x && j < y) Modify(1,n,1,i,j,v[i][j]-v[i+1][j]-v[i][j+1]+v[i+1][j+1]);    \n            else if (i < x && j > y) Modify(1,n,1,i,j,v[i][j]-v[i+1][j]-v[i][j-1]+v[i+1][j-1]);    \n            else if (i > x && j < y) Modify(1,n,1,i,j,v[i][j]-v[i-1][j]-v[i][j+1]+v[i-1][j+1]);    \n            else Modify(1,n,1,i,j,v[i][j]-v[i][j-1]-v[i-1][j]+v[i-1][j-1]);    \n        }  \n            \n    while(t--) {      \n        int typ = getLL();    \n        if (typ == 0) {    \n            X1 = getLL(); Y1 = getLL();     \n            X2 = getLL(); Y2 = getLL();    \n            X1 = x - X1; X2 = x + X2;    \n            Y1 = y - Y1; Y2 = y + Y2;    \n            printf(\"%lld\\n\",query(1,1,n,X1,X2,Y1,Y2));    \n        }    \n        else {    \n        \t++tt;\n            X1 = getLL(); Y1 = getLL();     \n            X2 = getLL(); Y2 = getLL();    \n            LL c; c = getLL();  cur = 0;  \n            Judge(X1-1,Y1-1,c); Judge(X1,Y1-1,c); Judge(X1,Y1,c); Judge(X1-1,Y1,c);    \n            Judge(X1-1,Y2,c); Judge(X1-1,Y2+1,c); Judge(X1,Y2+1,c); Judge(X1,Y2,c);    \n            Judge(X2,Y1,c);  Judge(X2+1,Y1,c); Judge(X2+1,Y1-1,c); Judge(X2,Y1-1,c);   \n            Judge(X2,Y2,c); Judge(X2,Y2+1,c); Judge(X2+1,Y2,c); Judge(X2+1,Y2+1,c);    \n            if (X1 <= x && x <= X2 && Y1 <= y && y <= Y2) Modify(1,n,1,x,y,c);    \n            if (X1 <= x && x <= X2) {    \n                if (Y1 <= y && y <= Y2) Modify(1,n,1,x,Y2+1,-c),Modify(1,n,1,x,Y1-1,-c);    \n                else if (y > Y2) Modify(1,n,1,x,Y2,c),Modify(1,n,1,x,Y1-1,-c);    \n                else Modify(1,n,1,x,Y1,c),Modify(1,n,1,x,Y2+1,-c);    \n            }    \n            if (Y1 <= y && y <= Y2) {    \n                if (X1 <= x && x <= X2) Modify(1,n,1,X1-1,y,-c),Modify(1,n,1,X2+1,y,-c);    \n                else if (x > X2) Modify(1,n,1,X2,y,c),Modify(1,n,1,X1-1,y,-c);    \n                else Modify(1,n,1,X1,y,c),Modify(1,n,1,X2+1,y,-c);    \n            }    \n        }    \n    }      \n    return 0;      \n}     \n```\n\n\n ",
        "postTime": 1638250875,
        "uid": 464732,
        "name": "luqyou",
        "ccfLevel": 5,
        "title": "solution-p2086"
    },
    {
        "content": "\u975e\u5e38\u611f\u8c22 @LYqwq \u548c @\u738b\u7199\u6587 \u7684\u5361\u5e38\n\n\u770b\u5230\u5176\u4ed6\u9898\u89e3\u90fd\u662f\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u505a\u7684\uff0c\u6211\u592a\u83dc\u4e86\uff0c\u4e0d\u4f1a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\n\n\u4e8e\u662f\uff0c\u6211\u5f00\u59cb\u60f3\u522b\u7684\u89e3\u6cd5\uff0c\u6211\u7a81\u53d1\u5947\u60f3\uff1a\u53ef\u4e0d\u53ef\u4ee5\u7528 n \u4e2a\u4e00\u7ef4\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\u5462\uff1f\n\n\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f $O(Tn\\log m)$ \uff0c\u660e\u663e\u4e0d\u884c\u3002\n\n\u5728\u9762\u5bf9 $n$ \u5f88\u5927\u7684\u6570\u636e\u65f6\uff0c\u5b83\u5c31\u4e0d\u884c\u3002\u90a3\u5982\u679c\u5728 $n$ \u8fc7\u5927\u65f6\uff0c\u5c06\u77e9\u9635\u4ece $n$ \u884c $m$ \u5217\u8f6c\u6362\u6210 $m$ \u884c $n$ \u5217\u5462\uff1f\n\n\u5b83\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(T\\min(n,m)\\log \\max(n,m))$\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad $n$ \u662f\u5426\u8fc7\u5927\u5462\uff1f\u53ef\u4ee5\u8fd9\u6837\u5224\u65ad\uff1a\u5982\u679c $\\sqrt{nm}\\ge m$ \uff0c\u90a3\u4e48 $n$ \u5c31\u592a\u5927\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c $n=3,m=2$ \uff0c\u77e9\u9635\u4e3a\uff1a\n\n$\\begin{matrix}1&2\\\\3&4\\\\5&6\\end{matrix}$\n\n\u5219\u8f6c\u6362\u4e3a\uff1a\n\n$\\begin{matrix}2&4&6\\\\1&2&3\\end{matrix}$\n\n\u4ea4\u6362 n , m \u6709\u52a9\u4e8e\u4e4b\u540e\u7684\u8ba1\u7b97\u3002\n\n\u4e00\u7ef4\u7ebf\u6bb5\u6811\u53ef\u4ee5\u8fd9\u4e48\u5904\u7406\uff1a\n\n$\\gcd(x,y)=\\gcd(x,y-x)$\n\n\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u6b21\u533a\u95f4 $+c$ \u65f6\u53ef\u4ee5 $a_l+c,a_{r+1}-c$\n\n\u81f3\u4e8e x \u561b\uff0c\u53ef\u4ee5\u7528\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\n\n## 60 \u5206\uff1a\n\n\u7528 map \u5b58\u50a8\u77e9\u9635\uff0c\u5e76\u7528\u521a\u624d\u7684\u65b9\u6cd5\u89e3\u9898\u3002\n\n[Code](https://www.luogu.com.cn/paste/c2mh7nfr)\n\n## 70 \u5206\uff1a\n\n\u5c06 map \u6539\u4e3a unordered_map \u5373\u53ef\u3002\n\n## 90 \u5206\n\n\u7531\u4e8e unordered_map \u5e38\u6570\u5f88\u5927\uff0c\u800c\u77e9\u9635\u5143\u7d20\u6570\u91cf\u53c8\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5c06 unordered_map \u6539\u6210\u666e\u901a\u4e00\u7ef4\u6570\u7ec4\uff0c$a_{i,j}$ \u53d8\u6210 $a_{(i-1)*m+j}$\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u4e2a\u4e2a\u4f8b\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u8981\u5f00 4 \u500d\u7a7a\u95f4\u3002 $a_{i,j}$ \u53d8\u6210 $a_{(i-1)*4*m+j}$\n\n[Code(\u7ecf\u8fc7@LYqwq \u7565\u5fae\u5361\u5e38)](https://www.luogu.com.cn/paste/yn8yd4zm)\uff1a\n\n## 100 \u5206\n\n\u4f17\u6240\u5468\u77e5\uff0c\u8f97\u8f6c\u76f8\u9664\u6cd5\u7684\u590d\u6742\u5ea6\u662f\uff1a $O(\\log \\max(x,y))$\n\n\u5982\u679c\u6570\u636e\u89c4\u6a21\u5f88\u5927\uff0c\u4f7f\u7528\u8f97\u8f6c\u76f8\u9664\u6cd5\u5c31\u4f1a TLE\n\n\u611f\u8c22 @\u738b\u7199\u6587 \u7ed9\u51fa\u7684\u6c42\u6700\u5927\u516c\u7ea6\u6570\u7684\u51fd\u6570\n\n```cpp\ninline ll exgcd(ll a,ll b)\n{\n\tif(a<0) a=-a;\n\tif(b<0) b=-b;\n\tif(!a) return b;\n\tif(!b) return a;\n\tll t=__builtin_ctzll(a|b),tmp;\n\ta>>=__builtin_ctzll(a);\n\tdo\n\t{\n\t\tb>>=__builtin_ctzll(b);\n\t\tif(a>b)\n\t\t{\n\t\t\ttmp=a,a=b,b=tmp;\n\t\t}\n\t\tb-=a;\n\t} while(b);\n\treturn a<<t;\n}\n```\n\u5c06\u539f\u6765\u7684 exgcd \u66ff\u6362\u6210\u73b0\u6709\u7684 exgcd \u5373\u53ef AC\u3002",
        "postTime": 1643102012,
        "uid": 333855,
        "name": "PwXmBjR_bYsVmG",
        "ccfLevel": 5,
        "title": "P2086\u9898\u89e3"
    },
    {
        "content": "> Upt:2019-03-02\n>\n> \u55ef\u522b\u770b\u8fd9\u7bc7\u9898\u89e3\u4e86\n> \n> \u56db\u5206\u6811\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f\u5047\u7684\uff0c\u6700\u52a3$O(\\sqrt n)$\n>\n> \u611f\u8c22@Marser \u63d0\u9192\n>\n> \u53cd\u6b63\u80fd\u8fc7\u8fd9\u9898\u8fd9\u4ee3\u7801\u5c31\u653e\u5728\u8fd9\u5427\u2026\u2026\n\n\u8c03\u4e86\u4e00\u5929\u5230\u65e9\u4e0a\u53d1\u73b0\u662f\u5dee\u5206\u5dee\u9519\u4e86\n![](https://cdn.luogu.com.cn/upload/pic/15867.png)\n\n------\n\n\u601d\u8def\u697c\u4e0a\u5df2\u7ecf\u5199\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u73b0\u5728\u53ea\u662f\u7ed9\u53e6\u4e00\u79cd\u7528\u56db\u5206\u6811\u7684\u5199\u6cd5\n\n\u56db\u5206\u6811\u5c31\u662f\u56db\u5206\u4e00\u4e2a\u77e9\u9635\uff0c\u7136\u540e\u666e\u901a\u7ebf\u6bb5\u6811\u64cd\u4f5c\u5c31\u884c\u4e86\n\n\u7801\u91cf~~\u975e\u5e38~~\u6bd4\u8f83\u5927\uff0c\u8dd1\u7684\u8fd8\u633a\u5feb\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u5e38\u6570\u5c0f\uff1f\n\n\u4ee3\u7801\uff1a\n```cpp\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<cstdlib>\n# define LL long long\n# define midl (x1+x2>>1)\n# define midr (y1+y2>>1)\n# define tll s[k].ll\n# define tlr s[k].lr\n# define trl s[k].rl\n# define trr s[k].rr\n# define pu(i,j) (i-1)*m+j\nusing namespace std;\nconst int MAX=5e5+1;\nstruct p{\n\tLL x;\n\tint ll,lr,rl,rr;\n}s[MAX<<4];\nint n,m,xs,ys,T,tot,rt;\nLL a[MAX],b[MAX];\nLL gcd(LL x,LL y)\n{\n\treturn y?gcd(y,x%y):abs(x);\n}\nLL read()\n{\n\tLL x=0,f=1;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);f=(ch=='-')?-1:1,ch=getchar());\n\tfor(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n\treturn x*f;\n}\nvoid pus(int k)\n{\n\ts[k].x=gcd(s[tll].x,gcd(s[tlr].x,gcd(s[trl].x,s[trr].x)));\n}\nvoid build(int x1,int y1,int x2,int y2,int &k)\n{\n\tif(x1>x2||y1>y2) return;\n\tk=++tot;\n\tif(x1==x2&&y1==y2)\n\t{\n\t\ts[k].x=a[pu(x1,y1)];\n\t\treturn;\n\t}\n\tbuild(x1,y1,midl,midr,tll);\n\tbuild(midl+1,y1,x2,midr,tlr);\n\tbuild(x1,midr+1,midl,y2,trl);\n\tbuild(midl+1,midr+1,x2,y2,trr);\n\tpus(k);\n}\nLL ask(int x1,int y1,int x2,int y2,int k,int X1,int Y1,int X2,int Y2)\n{\n\tif(x1>X2||x2<X1||y1>Y2||y2<Y1) return 0;\n\tif(x1>=X1&&x2<=X2&&y1>=Y1&&y2<=Y2) return s[k].x;\n\treturn gcd(ask(x1,y1,midl,midr,tll,X1,Y1,X2,Y2),gcd(ask(midl+1,y1,x2,midr,tlr,X1,Y1,X2,Y2),gcd(ask(x1,midr+1,midl,y2,trl,X1,Y1,X2,Y2),ask(midl+1,midr+1,x2,y2,trr,X1,Y1,X2,Y2))));\n}\nvoid change(int x1,int y1,int x2,int y2,int k,int X,int Y,LL dis)\n{\n\tif(x1==x2&&y1==y2)\n\t{\n\t\ts[k].x+=dis;\n\t\treturn;\n\t}\n\tif(X<=midl)\n\tif(Y<=midr) change(x1,y1,midl,midr,tll,X,Y,dis);\n\telse change(x1,midr+1,midl,y2,trl,X,Y,dis);\n\telse if(Y<=midr) change(midl+1,y1,x2,midr,tlr,X,Y,dis);\n\telse change(midl+1,midr+1,x2,y2,trr,X,Y,dis);\n\tpus(k);\n}\n\nint main()\n{\n\tn=read(),m=read(),xs=read(),ys=read(),T=read();\n\tfor(int i=1;i<=n;++i)\n\t  for(int j=1;j<=m;++j)\n\t    a[pu(i,j)]=read();\n\tfor(int i=xs-1;i>=1;--i)\n\t  for(int j=1;j<=m;++j)\n\t    {\n\t    \tint pos=pu(i,j);\n\t    \tb[pos]=a[pos]-a[pos+m];\n\t\t}\n\tfor(int i=xs+1;i<=n;++i)\n\t  for(int j=1;j<=m;++j)\n\t    {\n\t    \tint pos=pu(i,j);\n\t    \tb[pos]=a[pos]-a[pos-m];\n\t\t}\n\tfor(int i=1;i<=m;++i)\n\t  {\n\t  \tint pos=pu(xs,i);\n\t  \tb[pos]=a[pos];\n\t  }\n\tfor(int i=1;i<=n;++i)\n\t  for(int j=ys-1;j>=1;--j)\n\t    {\n\t    \tint pos=pu(i,j);\n\t    \ta[pos]=b[pos]-b[pos+1];\n\t\t}\n\tfor(int i=1;i<=n;++i)\n\t  for(int j=ys+1;j<=m;++j)\n\t    {\n\t    \tint pos=pu(i,j);\n\t    \ta[pos]=b[pos]-b[pos-1];\n\t\t}\n\tfor(int i=1;i<=n;++i)\n\t  {\n\t  \tint pos=pu(i,ys);\n\t  \ta[pos]=b[pos];\n\t  }\n\tbuild(1,1,n,m,rt);\n\tfor(int i=1;i<=T;++i)\n\t  {\n\t  \tint op=read(),x1=read(),y1=read(),x2=read(),y2=read();\n\t  \tif(!op) printf(\"%lld\\n\",ask(1,1,n,m,1,xs-x1,ys-y1,xs+x2,ys+y2));\n\t  \telse if(op==1)\n\t  \t{\n\t  \t\tLL dis=read();\n\t  \t\tif(x1<=xs&&y1<=ys&&x2>=xs&&y2>=ys)\n\t  \t\t{\n\t  \t\t\tchange(1,1,n,m,1,xs,ys,dis);\n\t  \t\t\tif(x1!=1)\n\t  \t\t\t{\n\t  \t\t\t\tchange(1,1,n,m,1,x1-1,ys,-dis);\n\t  \t\t\t\tif(y1!=1) change(1,1,n,m,1,x1-1,y1-1,dis);\n\t  \t\t\t\tif(y2!=m) change(1,1,n,m,1,x1-1,y2+1,dis);\n\t\t\t\t}\n\t\t\t\tif(x2!=n)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x2+1,ys,-dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,x2+1,y1-1,dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,x2+1,y2+1,dis);\n\t\t\t\t}\n\t\t\t\tif(y1!=1) change(1,1,n,m,1,xs,y1-1,-dis);\n\t\t\t\tif(y2!=m) change(1,1,n,m,1,xs,y2+1,-dis);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(x1<xs&&y1<ys&&x2<xs&&y2<ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x2,y2,dis);\n\t\t\t\t\tif(y1!=1&&x1!=1) change(1,1,n,m,1,x1-1,y1-1,dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,x2,y1-1,-dis);\n\t\t\t\t\tif(x1!=1) change(1,1,n,m,1,x1-1,y2,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1<xs&&y1>ys&&x2<xs&&y2>ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x2,y1,dis);\n\t\t\t\t\tif(y2!=m&&x1!=1) change(1,1,n,m,1,x1-1,y2+1,dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,x2,y2+1,-dis);\n\t\t\t\t\tif(x1!=1) change(1,1,n,m,1,x1-1,y1,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1>xs&&y1<ys&&x2>xs&&y2<ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x1,y2,dis);\n\t\t\t\t\tif(y1!=1&&x2!=n) change(1,1,n,m,1,x2+1,y1-1,dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,x1,y1-1,-dis);\n\t\t\t\t\tif(x2!=n) change(1,1,n,m,1,x2+1,y2,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1>xs&&y1>ys&&x2>xs&&y2>ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x1,y1,dis);\n\t\t\t\t\tif(y2!=m&&x2!=n) change(1,1,n,m,1,x2+1,y2+1,dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,x1,y2+1,-dis);\n\t\t\t\t\tif(x2!=n) change(1,1,n,m,1,x2+1,y1,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1<=xs&&x2>=xs&&y1<ys&&y2<ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,xs,y2,dis);\n\t\t\t\t\tif(y1!=1&&x1!=1) change(1,1,n,m,1,x1-1,y1-1,dis);\n\t\t\t\t\tif(y1!=1&&x2!=n) change(1,1,n,m,1,x2+1,y1-1,dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,xs,y1-1,-dis);\n\t\t\t\t\tif(x1!=1) change(1,1,n,m,1,x1-1,y2,-dis);\n\t\t\t\t\tif(x2!=n) change(1,1,n,m,1,x2+1,y2,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1<=xs&&x2>=xs&&y1>ys&&y2>ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,xs,y1,dis);\n\t\t\t\t\tif(y2!=m&&x1!=1) change(1,1,n,m,1,x1-1,y2+1,dis);\n\t\t\t\t\tif(y2!=m&&x2!=n) change(1,1,n,m,1,x2+1,y2+1,dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,xs,y2+1,-dis);\n\t\t\t\t\tif(x1!=1) change(1,1,n,m,1,x1-1,y1,-dis);\n\t\t\t\t\tif(x2!=n) change(1,1,n,m,1,x2+1,y1,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1<xs&&x2<xs&&y1<=ys&&y2>=ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x2,ys,dis);\n\t\t\t\t\tif(y1!=1&&x1!=1) change(1,1,n,m,1,x1-1,y1-1,dis);\n\t\t\t\t\tif(y2!=m&&x1!=1) change(1,1,n,m,1,x1-1,y2+1,dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,x2,y1-1,-dis);\n\t\t\t\t\tif(x1!=1) change(1,1,n,m,1,x1-1,ys,-dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,x2,y2+1,-dis);\n\t\t\t\t}\n\t\t\t\telse if(x1>xs&&x2>xs&&y1<=ys&&y2>=ys)\n\t\t\t\t{\n\t\t\t\t\tchange(1,1,n,m,1,x1,ys,dis);\n\t\t\t\t\tif(y1!=1&&x2!=n) change(1,1,n,m,1,x2+1,y1-1,dis);\n\t\t\t\t\tif(y2!=m&&x2!=n) change(1,1,n,m,1,x2+1,y2+1,dis);\n\t\t\t\t\tif(y1!=1) change(1,1,n,m,1,x1,y1-1,-dis);\n\t\t\t\t\tif(x2!=n) change(1,1,n,m,1,x2+1,ys,-dis);\n\t\t\t\t\tif(y2!=m) change(1,1,n,m,1,x1,y2+1,-dis);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t  }\n\treturn 0;\n}\n```",
        "postTime": 1524446520,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2086 \u3010[NOI2012]\u9b54\u5e7b\u68cb\u76d8\u3011"
    },
    {
        "content": "\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u6309\u5957\u8def\u5dee\u5206\u539f\u77e9\u9635\uff0cgcd( x1, x2, \u2026\u2026, xn ) = gcd( xi , x2 - x1 , \u2026\u2026, xn - xn-1 )\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u539f\u6570 xi\uff0c\u6070\u597d\u6bcf\u6b21\u8be2\u95ee\u90fd\u5305\u542b\u4e00\u4e2a\u56fa\u5b9a\u70b9 ( x , y )\uff0c\u5dee\u5206\u4ee5\u5b83\u4e3a\u4e2d\u5fc3\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u662f\u539f\u503c\u3002\u4ee5 e \u4e3a\u4e2d\u5fc3\u7684\u4e8c\u9636\u5dee\u5206\u5982\u56fe\u3002\n\n\uff08\u5982\u679c\u56fe\u7247\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u8bf7\u70b9[\u8fd9\u91cc](http://www.cnblogs.com/milky-w/p/8530723.html)\u3002\uff09\n\n![](https://images2018.cnblogs.com/blog/1326357/201803/1326357-20180308155219267-394626.png)\n\n\u5bf9\u4e8e\u4e00\u7ef4\u5e8f\u5217\uff0c\u4fee\u6539\u533a\u95f4 [ l , r ] \u53ea\u9700\u4fee\u6539\u5dee\u5206\u540e\u7684 l \u548c r + 1 \u4e24\u70b9\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e8c\u7ef4\uff0c\u5dee\u5206\u540e\u7684\u4fee\u6539\u5982\u4e0b\u6240\u793a\uff1a\n\n![](https://images2018.cnblogs.com/blog/1326357/201803/1326357-20180308200045381-604844866.png)\n\n\u4e2d\u95f4\u7684\u7070\u8272\u683c\u5b50\u4e3a\u5b88\u536b\u8005\u6240\u5728\u5730\uff08\u4e3a\u65b9\u4fbf\u8868\u793a\u591a\u4e2a\u533a\u57df\u628a\u5b83\u62c6\u6210\u4e86 9 \u683c\uff09\uff0c\u4ee5\u5b83\u4e3a\u5dee\u5206\u4e2d\u5fc3\uff0c\u82e5\u4fee\u6539\u77e9\u9635\u5728\u5b83\u7684\u53f3\u4e0b\u65b9\uff0c\u5373\u9ec4\u8272\u533a\u57df\uff0c\u8bbe\u5b83\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a ( x1, y1)\uff0c\u53f3\u4e0b\u89d2\u5750\u6807 ( x2, y2 )\uff0c\u5219\u9700\u5728 ( x1, y1 ) \u5904 + c\uff0c( x1, y2+1 ) \u5904 - c\uff0c( x2+1, y1 ) \u5904 - c\uff0c( x2 + 1, y2 + 1) \u5904 +c\u3002\n\n\u5176\u4ed6\u533a\u57df\u540c\u7406\u3002\u518d\u52a0\u4e0a\u5b88\u536b\u8005\u6b63\u4e0a\u65b9\u3001\u6b63\u4e0b\u65b9\u3001\u6b63\u5de6\u65b9\u3001\u6b63\u53f3\u65b9\u7684\u533a\u57df\uff0c\u4e00\u5171 8 \u79cd\u60c5\u51b5\u3002\u5982\u679c\u4e00\u4e2a\u4fee\u6539\u77e9\u9635\u5305\u542b\u591a\u4e2a\u533a\u57df\uff0c\u5c31\u5c06\u5176\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u5b50\u77e9\u9635\u5904\u7406\u3002\n\n\u8fd9\u6837\u5c31\u5c06\u5de8\u6162\u7684\u533a\u95f4\u4fee\u6539\u8f6c\u6362\u6210\u4e86\u5355\u70b9\u4fee\u6539\uff0c\u6bcf\u4fee\u6539\u5b8c\u4e00\u4e2a\u70b9\uff0cpushup( ) \u7ef4\u62a4 gcd \u5373\u53ef\u3002\n\n\u53e6\u5916\u8bfb\u5165\u7684\u65f6\u5019\uff0c500000 * 500000 \u7684\u4e8c\u7ef4\u6570\u7ec4\u662f\u5f00\u4e0d\u4e86\u7684\uff0c\u9700\u8981\u52a8\u6001\u5206\u914d\u5185\u5b58\uff1b\u6216\u8005\u5f00\u4e00\u4e2a 500000 \u7684\u4e00\u7ef4\u6570\u7ec4\u8bfb\u5165\uff0c\u5224\u65ad\u6bcf\u4e00\u884c\u7684\u672b\u7aef\u5728\u54ea\u91cc\u3002\n\n\u8ba8\u8bba\u7684\u65f6\u5019\u6709\u4e9b\u9ebb\u70e6\uff0c\u4e0b\u9762\u5217\u4e00\u4e0b\u5927\u81f4\u7684\u60c5\u51b5\uff1a\uff08\u9ec4\u8272\u8868\u793a\u4fee\u6539\u7684\u533a\u57df\uff0c\u7eff\u8272\u52a0\uff0c \u7ea2\u8272\u51cf\uff09\n\n\uff08\u5982\u679c\u56fe\u7247\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u8bf7\u70b9[\u8fd9\u91cc](http://www.cnblogs.com/milky-w/p/8530723.html)\u3002\uff09\n\n![](https://images2018.cnblogs.com/blog/1326357/201803/1326357-20180309134736310-607758096.png)\n\n\u4ed4\u7ec6\u89c2\u5bdf\u540e\uff0c\u53d1\u73b0\u53ef\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a\u2460 \u5305\u542b\u5b88\u536b\u8005 ( X , Y )\uff1b\u2461 \u5305\u542b X \u884c\u6216 Y \u5217\uff1b\u2462 \u53ea\u5305\u542b\u5de6\u4e0a\u6216\u5de6\u4e0b\u3001\u53f3\u4e0a\u6216\u53f3\u4e0b\u533a\u57df\u3002\n\n\u7ec6\u8282\u8bf8\u591a\u3002\n\n```cpp\n#include <cstdio>\n#include <string>\n\nconst int N = 500005;\ntypedef long long ll;\n\nint n, m; ll a[N], b[N];\n\nll read() {\n\tll x = 0, f = 1;\n\tchar c = getchar();\n\twhile (!isdigit(c)) {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (isdigit(c)) {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nll abs(ll x) {\n\tif (x >= 0) return x; return -x;\n}\n\nll gcd(ll x, ll y) {\n\tif (y) return gcd(y, x % y); return abs(x);\n}\n\nstruct inNode {\n\tll val;\n\tinNode *ls, *rs;\n\tinNode() : val(0), ls(NULL), rs(NULL) {}\n} inPool[N << 2];\n\ninNode *newInNode () {\n\tstatic int cnt = 0;\n\treturn &inPool[++cnt];\n}\n\nvoid buildY(inNode *&cur, int l, int r, int x) {\n\tif (!cur) cur = newInNode();\n\tif (l == r) cur->val = a[(x - 1) * m + l];\n\telse {\n\t\tint mid = l + ((r - l) >> 1);\n\t\tbuildY(cur->ls, l, mid, x);\n\t\tbuildY(cur->rs, mid + 1, r, x);\n\t\tcur->val = gcd(cur->ls->val, cur->rs->val);\n\t}\n}\n\nvoid updateY(inNode *&cur, int l, int r, int y, ll val) {\n\tif (l == r) cur->val += val;\n\telse {\n\t\tint mid = l + ((r - l) >> 1);\n\t\tif (y <= mid) updateY(cur->ls, l, mid, y, val);\n\t\telse updateY(cur->rs, mid + 1, r, y, val);\n\t\tcur->val = gcd(cur->ls ? cur->ls->val : 0, cur->rs ? cur->rs->val : 0);\n\t}\n}\n\nvoid maintainY(inNode *&cur, int l, int r, int y, ll val) {\n\tif (l == r) cur->val = val;\n\telse {\n\t\tint mid = l + ((r - l) >> 1);\n\t\tif (y <= mid) maintainY(cur->ls, l, mid, y, val);\n\t\telse maintainY(cur->rs, mid + 1, r, y, val);\n\t\tcur->val = gcd(cur->ls ? cur->ls->val : 0, cur->rs ? cur->rs->val : 0);\n\t} \n}\n\nll queryY(inNode *&cur, int l, int r, int y1, int y2) {\n\tif (y1 <= l && r <= y2) return cur->val;\n\tint mid = l + ((r - l) >> 1); ll res = 0;\n\tif (y1 <= mid) res = gcd(res, queryY(cur->ls, l, mid, y1, y2));\n\tif (mid < y2) res = gcd(res, queryY(cur->rs, mid + 1, r, y1, y2));\n\treturn res;\n}\n\nstruct outNode {\n\tinNode *root;\n\toutNode *ls, *rs;\n\toutNode() : root(NULL), ls(NULL), rs(NULL) {}\n} outPool[N << 2], *root;\n\noutNode *newOutNode() {\n\tstatic int cnt = 0;\n\treturn &outPool[++cnt];\n}\n\nvoid maintainX(inNode *&cur, inNode *&lc, inNode *&rc, int l, int r) {\n\tif (!cur) cur = newInNode();\n\tif (l == r) cur->val = gcd(lc->val, rc->val);\n\telse {\n\t\tint mid = l + ((r - l) >> 1);\n\t\tmaintainX(cur->ls, lc->ls, rc->ls, l, mid);\n\t\tmaintainX(cur->rs, lc->rs, rc->rs, mid + 1, r);\n\t\tcur->val = gcd(cur->ls->val ,cur->rs->val);\n\t}\n}\n\nvoid buildX(outNode *&cur, int l, int r) {\n\tif (!cur) cur = newOutNode();\n\tif (l == r) buildY(cur->root, 1, m, l);\n\telse {\n\t\tint mid = l + ((r - l) >> 1);\n\t\tbuildX(cur->ls, l, mid);\n\t\tbuildX(cur->rs, mid + 1, r);\n\t\tmaintainX(cur->root, cur->ls->root, cur->rs->root, 1, m);\n\t}\n}\n\nvoid updateX(outNode *&cur, int l, int r, int x, int y, ll val) {\n\tif (x <= 0 || y <= 0 || x > n || y > m) return;\n\tif (l == r) updateY(cur->root, 1, m, y, val);\n\telse {\n\t\tint mid = l + ((r - l) >> 1); ll lv = 0, rv = 0;\n\t\tif (x <= mid) updateX(cur->ls, l, mid, x, y, val);\n\t\telse updateX(cur->rs, mid + 1, r, x, y, val);\n\t\tif (cur->ls) lv = queryY(cur->ls->root, 1, m, y, y);\n\t\tif (cur->rs) rv = queryY(cur->rs->root, 1, m, y, y);\n\t\tmaintainY(cur->root, 1, m, y, gcd(lv, rv));\n\t}\n}\n\nll queryX(outNode *&cur, int l, int r, int x1, int x2, int y1, int y2) {\n\tif (x1 <= l && r <= x2) return queryY(cur->root, 1, m, y1, y2);\n\tint mid = l + ((r - l) >> 1); ll res = 0;\n\tif (x1 <= mid) res = gcd(res, queryX(cur->ls, l, mid, x1, x2, y1, y2));\n\tif (mid < x2) res = gcd(res, queryX(cur->rs, mid + 1, r, x1, x2, y1, y2));\n\treturn res;\n}\n\nint main() {\n\tn = read(), m = read();\tint X = read(), Y = read(), T = read();\n\tfor (int i = 1; i <= n * m; ++ i) a[i] = read();\n\tfor (int i = 1; i <= n * m; ++ i) {\n\t\tif ((i - 1) % m + 1 < Y) b[i] = a[i] - a[i + 1];\n\t\telse if ((i - 1) % m + 1 > Y) b[i] = a[i] - a[i - 1];\n\t\telse b[i] = a[i];\n\t}\n\tfor (int i = 1; i <= n * m; ++ i) {\n\t\tif ((i - 1) / m + 1 < X) a[i] = b[i] - b[i + m];\n\t\telse if ((i - 1) / m + 1 > X) a[i] = b[i] - b[i - m];\n\t\telse a[i] = b[i];\n\t}\n\tbuildX(root, 1, n);\n\twhile (T--) {\n\t\tint opt = read(), x1 = read(), y1 = read(), x2 = read(), y2 = read();\n\t\tif (opt == 0) {\n\t\t\tx1 = X - x1, x2 = X + x2, y1 = Y - y1, y2 = Y + y2;\n\t\t\tprintf(\"%lld\\n\", queryX(root, 1, n, x1, x2, y1, y2));\n\t\t} else {\n\t\t\tll val = read();\n\t\t\tif (x1 <= X && x2 >= X && y1 <= Y && y2 >= Y) {\t//\u5305\u542b(X,Y) \n\t\t\t\tupdateX(root, 1, n, X, Y, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y1 - 1, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y2 + 1, val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y1 - 1, val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y2 + 1, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, Y, -val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, Y, -val);\n\t\t\t\tupdateX(root, 1, n, X, y1 - 1, -val);\n\t\t\t\tupdateX(root, 1, n, X, y2 + 1, -val);\n\t\t\t} else if (y1 <= Y && y2 >= Y) {\t\t\t\t//\u5305\u542bY\u5217 \n\t\t\t\tif (x1 < X) {\t\t\t\t\t\t\t\t//\u5728(X,Y)\u4e0a\u65b9 \n\t\t\t\t\tupdateX(root, 1, n, x2, Y, val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y1 - 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y2 + 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, Y, -val);\n\t\t\t\t\tupdateX(root, 1, n, x2, y1 - 1, -val);\n\t\t\t\t\tupdateX(root, 1, n, x2, y2 + 1, -val);\n\t\t\t\t} else {\t\t\t\t\t\t\t\t\t//\u5728(X,Y)\u4e0b\u65b9 \n\t\t\t\t\tupdateX(root, 1, n, x1, Y, val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y1 - 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y2 + 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, Y, -val);\n\t\t\t\t\tupdateX(root, 1, n, x1, y1 - 1, -val);\n\t\t\t\t\tupdateX(root, 1, n, x1, y2 + 1, -val);\n\t\t\t\t}\n\t\t\t} else if (x1 <= X && x2 >= X) {\t\t\t\t//\u5305\u542bX\u884c \n\t\t\t\tif (y1 < Y) {\t\t\t\t\t\t\t\t//\u5728(X,Y)\u5de6\u8fb9 \n\t\t\t\t\tupdateX(root, 1, n, X, y2, val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y1 - 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y1 - 1, val);\n\t\t\t\t\tupdateX(root, 1, n, X, y1 - 1, -val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y2, -val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y2, -val);\n\t\t\t\t} else {\t\t\t\t\t\t\t\t\t//\u5728(X,Y)\u53f3\u8fb9 \n\t\t\t\t\tupdateX(root, 1, n, X, y1, val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y2 + 1, val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y2 + 1, val);\n\t\t\t\t\tupdateX(root, 1, n, X, y2 + 1, -val);\n\t\t\t\t\tupdateX(root, 1, n, x1 - 1, y1, -val);\n\t\t\t\t\tupdateX(root, 1, n, x2 + 1, y1, -val);\n\t\t\t\t}\n\t\t\t} else if (x1 < X && y1 < Y) {\t\t\t\t\t//\u5de6\u4e0a\u533a\u57df \n\t\t\t\tupdateX(root, 1, n, x2, y2, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y1 - 1, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y2, -val);\n\t\t\t\tupdateX(root, 1, n, x2, y1 - 1, -val);\n\t\t\t} else if (x1 < X && y1 > Y) {\t\t\t\t\t//\u53f3\u4e0a\u533a\u57df \n\t\t\t\tupdateX(root, 1, n, x2, y1, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y2 + 1, val);\n\t\t\t\tupdateX(root, 1, n, x1 - 1, y1, -val);\n\t\t\t\tupdateX(root, 1, n, x2, y2 + 1, -val);\n\t\t\t} else if (x1 > X && y1 < Y) {\t\t\t\t\t//\u5de6\u4e0b\u533a\u57df \n\t\t\t\tupdateX(root, 1, n, x1, y2, val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y1 - 1, val);\n\t\t\t\tupdateX(root, 1, n, x1, y1 - 1, -val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y2, -val);\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t//\u53f3\u4e0b\u533a\u57df \n\t\t\t\tupdateX(root, 1, n, x1, y1, val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y2 + 1, val);\n\t\t\t\tupdateX(root, 1, n, x1, y2 + 1, -val);\n\t\t\t\tupdateX(root, 1, n, x2 + 1, y1, -val);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1520598471,
        "uid": 30922,
        "name": "Milky_Way",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2086 \u3010[NOI2012]\u9b54\u5e7b\u68cb\u76d8\u3011"
    },
    {
        "content": "~~\u4f5c\u4e3a\u4e00\u4e2a\u521d\u4e00\u849f\u84bb\u5c45\u7136\u6562\u5199\u9ed1\u9898\u9898\u89e3\uff0c\u771f\u662f\u592a\u52c7\u4e86~~\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u4ece $N \\times M \\leq 5 \\times 10^{5},T \\leq 10^{5}$ \u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u9898\u76ee\u3002\u8fd9\u91cc\u6211\u9009\u7528\u7684\u662f\u56db\u5206\u6811\u6765\u5b9e\u73b0\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u3002\n\n\u672c\u9898\u6700\u70e6\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u4f7f\u7528\u7ebf\u6bb5\u6811\u76f4\u63a5\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\u52a0\u548c\u533a\u95f4\u67e5\u8be2 $\\gcd$\u3002\u56e0\u4e3a $\\gcd$ \u7684\u6027\u8d28 $\\gcd(a,b)=\\gcd(a,b-a)$\uff0c\u6240\u4ee5\u672c\u9898\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u4e8c\u7ef4\u5dee\u5206\u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n## \u521d\u59cb\u5316\n\n\u90a3\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u521d\u59cb\u5316\u8fd9\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5462\uff1f\u672c\u9898\u67e5\u8be2\u65f6\u7684\u4e00\u4e2a\u7279\u6027\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5e2e\u52a9\uff0c\u90a3\u5c31\u662f\u67e5\u8be2\u65f6\u4e00\u5b9a\u5305\u542b\u5750\u6807 $(X,Y)$ \u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee5 $(X,Y)$ \u4e3a\u4e8c\u7ef4\u5dee\u5206\u6570\u7ec4\u7684\u4e2d\u5fc3\uff0c\u7136\u540e\u4f9d\u6b21\u5bf9\u5de6\u4e0a\u89d2\u3001\u53f3\u4e0a\u89d2\u3001\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0b\u89d2\u7684\u533a\u57df\u505a\u4e00\u904d\u4e8c\u7ef4\u5dee\u5206\u6570\u7ec4\u5373\u53ef\u3002\u5982\u56fe\uff081\uff09\u6240\u793a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r79xqsd4.png) \n\n$$\\texttt{\u56fe\uff081\uff09}$$\n\n## \u4fee\u6539\n\n\u73b0\u5728\u6700\u68d8\u624b\u7684\u95ee\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u4fee\u6539\u4e86\u3002\u901a\u8fc7\u5dee\u5206\u6211\u4eec\u5df2\u7ecf\u628a\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u4fee\u6539\u6539\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u4f46\u95ee\u9898\u662f\u6211\u4eec\u7684\u4e8c\u7ef4\u5dee\u5206\u6570\u7ec4\u662f\u4ee5\u5750\u6807 $(X,Y)$ \u4e3a\u4e2d\u5fc3\u8fdb\u884c\u5dee\u5206\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4fee\u6539\u65f6\u8981\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\u6211\u4eec\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1. \u67e5\u8be2\u65f6\u5305\u542b\u5750\u6807 $(X,Y)$\uff0c\u9700\u8981\u4fee\u6539 $9$ \u4e2a\u5355\u70b9\u3002\uff08\u5373\u67e5\u8be2\u7684\u8303\u56f4\u8986\u76d6\u4e86\u5de6\u4e0a\uff0c\u53f3\u4e0a\uff0c\u5de6\u4e0b\u548c\u53f3\u4e0b\u56db\u7247\u533a\u57df\uff09\n\n1. \u67e5\u8be2\u65f6\u5305\u542b $X$ \u884c\u6216 $Y$ \u5217\uff0c\u9700\u8981\u4fee\u6539 $6$ \u4e2a\u5355\u70b9\u3002\uff08\u5373\u67e5\u8be2\u7684\u8303\u56f4\u8986\u76d6\u4e86\u5982\u4e0a\u63cf\u8ff0\u7684\u533a\u57df\u4e2d\u7684\u4e24\u4e2a\uff09\n\n1. \u5176\u4ed6\u60c5\u51b5\uff0c\u9700\u8981\u4fee\u6539 $4$ \u4e2a\u5355\u70b9\u3002\uff08\u5373\u67e5\u8be2\u7684\u8303\u56f4\u4ec5\u8986\u76d6\u4e86\u5982\u4e0a\u63cf\u8ff0\u7684\u533a\u57df\u4e2d\u7684\u4e00\u4e2a\uff09\n\n## \u67e5\u8be2\n\n\u67e5\u8be2\u65f6\u6211\u4eec\u53ea\u9700\u8981\u76f4\u63a5\u4e00\u4e2a\u533a\u95f4\u67e5\u8be2 $\\gcd$ \u5373\u53ef\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n## AC CODE\n\n\u4ee3\u7801\u5bf9\u4e8e\u4e00\u9053 $NOI$ \u7684\u9898\u76ee\u6765\u8bf4\u7b97\u662f\u6b63\u5e38\u7684\u5427\u3002$120$ \u884c\u5de6\u53f3\u3002\n\n```cpp\n#include<stdio.h>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nll Abs(ll a){return a>=0?a:-a;}\nll gcd(ll a,ll b){\n    return b?gcd(b,a%b):Abs(a);\n}\nconst int MAXA=2000010,MAXB=8000010;\nint n,m;\n#define pt(x,y) (x-1)*m+y\nclass Double_Segment_Tree{\n    public:\n    ll a[MAXB]; int clls[MAXB],clrs[MAXB],crls[MAXB],crrs[MAXB],cnt;\n    Double_Segment_Tree(){\n    \tmemset(a,0,sizeof(a)); memset(clls,0,sizeof(clls)); cnt=1;\n    \tmemset(clrs,0,sizeof(clrs)); memset(crls,0,sizeof(crls)); memset(crrs,0,sizeof(crrs));\n\t} \n    void Build(int lx,int ly,int rx,int ry,int u,ll *p){\n        if(lx==rx&&ly==ry){\n            a[u]=p[pt(lx,ly)];\n            return;\n        }\n        int mid1=(lx+rx)/2,mid2=(ly+ry)/2;\n        a[u]=0;\n        Build(lx,ly,mid1,mid2,clls[u]=++cnt,p),a[u]=gcd(a[u],a[clls[u]]);\n        if(mid1+1<=rx) Build(mid1+1,ly,rx,mid2,clrs[u]=++cnt,p),a[u]=gcd(a[u],a[clrs[u]]);\n        if(mid2+1<=ry) Build(lx,mid2+1,mid1,ry,crls[u]=++cnt,p),a[u]=gcd(a[u],a[crls[u]]);\n        if(mid1+1<=rx&&mid2+1<=ry) Build(mid1+1,mid2+1,rx,ry,crrs[u]=++cnt,p),a[u]=gcd(a[u],a[crrs[u]]);\n    }\n    void Update(int lx,int ly,int rx,int ry,int u,int chidx,int chidy,ll val){\n        if(lx==rx&&ly==ry){\n            a[u]+=val;\n            return;\n        }\n        int mid1=(lx+rx)/2,mid2=(ly+ry)/2;\n        if(chidx<=mid1&&chidy<=mid2) Update(lx,ly,mid1,mid2,clls[u],chidx,chidy,val);\n        if(mid1+1<=rx) if(chidx>mid1&&chidy<=mid2) Update(mid1+1,ly,rx,mid2,clrs[u],chidx,chidy,val);\n        if(mid2+1<=ry) if(chidx<=mid1&&chidy>mid2) Update(lx,mid2+1,mid1,ry,crls[u],chidx,chidy,val);\n        if(mid1+1<=rx&&mid2+1<=ry) if(chidx>mid1&&chidy>mid2) Update(mid1+1,mid2+1,rx,ry,crrs[u],chidx,chidy,val);\n        a[u]=gcd(a[clls[u]],gcd(a[clrs[u]],gcd(a[crls[u]],a[crrs[u]])));\n    }\n    ll Query(int lx,int ly,int rx,int ry,int u,int chlx,int chly,int chrx,int chry){\n        if(lx>=chlx&&ly>=chly&&rx<=chrx&&ry<=chry){\n            return a[u];\n        }\n        ll res=0;\n        int mid1=(lx+rx)/2,mid2=(ly+ry)/2;\n        if(chlx<=mid1&&chly<=mid2) res=gcd(res,Query(lx,ly,mid1,mid2,clls[u],chlx,chly,chrx,chry));\n        if(mid1+1<=rx) if(chrx>mid1&&chly<=mid2) res=gcd(res,Query(mid1+1,ly,rx,mid2,clrs[u],chlx,chly,chrx,chry));\n        if(mid2+1<=ry) if(chlx<=mid1&&chry>mid2) res=gcd(res,Query(lx,mid2+1,mid1,ry,crls[u],chlx,chly,chrx,chry));\n        if(mid1+1<=rx&&mid2+1<=ry) if(chrx>mid1&&chry>mid2) res=gcd(res,Query(mid1+1,mid2+1,rx,ry,crrs[u],chlx,chly,chrx,chry));\n        return res;\n    }\n}seg;\nll S[MAXA];\nint pl[5][4]={{0,0,0,0},{1,2,6,7},{4,5,9,10},{16,17,21,22},{19,20,24,25}};\nbool flag[26];\nint stx,sty,t,op,a,b,c,d;ll f;\nint xpro(int val){\n\tif(val==1) return a-1;\n\tif(val==2) return c;\n\tif(val==3) return stx;\n\tif(val==4) return a;\n\tif(val==5) return c+1;\n}\nint ypro(int val){\n\tif(val==1) return b-1;\n\tif(val==2) return d;\n\tif(val==3) return sty;\n\tif(val==4) return b;\n\tif(val==5) return d+1;\n}\nint jz[26]={0,1,-1,-1,-1,1,-1,1,1,1,-1,-1,1,1,1,-1,-1,1,1,1,-1,1,-1,-1,-1,1};\nint main(){\n    scanf(\"%d%d%d%d\",&n,&m,&stx,&sty);\n    scanf(\"%d\",&t);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            scanf(\"%lld\",&S[pt(i,j)]);\n    for(int i=1;i<=n;i++)\n        for(int j=m;j>sty;j--)\n            S[pt(i,j)]-=S[pt(i,j-1)];\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<sty;j++)\n            S[pt(i,j)]-=S[pt(i,j+1)];\n    for(int i=1;i<=m;i++)\n        for(int j=n;j>stx;j--)\n            S[pt(j,i)]-=S[pt(j-1,i)];\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<stx;j++)\n            S[pt(j,i)]-=S[pt(j+1,i)];\n    seg.Build(1,1,n,m,1,S);\n    while(t--){\n        scanf(\"%d%d%d%d%d\",&op,&a,&b,&c,&d);\n        if(op){//\u4fee\u6539\u90e8\u5206\u4e0d\u60f3\u5199\u4e00\u5927\u5806if\u5d4c\u5957\uff0c\u6240\u4ee5\u538b\u7f29\u4e86\u4ebf\u4e0b\n            scanf(\"%lld\",&f);\n            memset(flag,0,sizeof(flag));\n            int ssum=0;\n            if(a<=stx&&b<=sty) for(int i=0;i<4;i++) flag[pl[1][i]]=1,ssum++;\n            if(a<=stx&&d>=sty) for(int i=0;i<4;i++) flag[pl[2][i]]=1,ssum++;\n            if(c>=stx&&b<=sty) for(int i=0;i<4;i++) flag[pl[3][i]]=1,ssum++;\n            if(c>=stx&&d>=sty) for(int i=0;i<4;i++) flag[pl[4][i]]=1,ssum++;\n            if(flag[2]&&flag[4]) flag[2]=flag[4]=0,flag[3]=1;\n            if(flag[6]&&flag[16]) flag[6]=flag[16]=0,flag[11]=1;\n            if(flag[10]&&flag[20]) flag[10]=flag[20]=0,flag[15]=1;\n            if(flag[22]&&flag[24]) flag[22]=flag[24]=0,flag[23]=1;\n            if(flag[7]&&flag[9]) flag[7]=flag[9]=0,flag[8]=1;\n            if(flag[7]&&flag[17]) flag[7]=flag[17]=0,flag[12]=1;\n            if(flag[17]&&flag[19]) flag[17]=flag[19]=0,flag[18]=1;\n            if(flag[9]&&flag[19]) flag[9]=flag[19]=0,flag[14]=1;\n            if(flag[8]&&flag[18]) flag[8]=flag[18]=0,flag[13]=1;\n            for(int i=1;i<=25;i++){\n            \tif(!flag[i]) continue;\n            \tif(xpro((i-1)/5+1)>=1&&xpro((i-1)/5+1)<=n&&ypro((i-1)%5+1)>=1&&ypro((i-1)%5+1)<=m)\n            \t\tseg.Update(1,1,n,m,1,xpro((i-1)/5+1),ypro((i-1)%5+1),jz[i]*f);\n\t\t\t}\n        }\n        else{\n            printf(\"%lld\\n\",seg.Query(1,1,n,m,1,stx-a,sty-b,stx+c,sty+d));\n        }\n    }\n}\n```\n\n### \u6e29\u99a8\u63d0\u793a\uff1a\u6284\u4ee3\u7801\u4e00\u65f6\u723d\uff0c\u68d5\u540d\u5c01\u53f7\u4e24\u884c\u6cea\uff01",
        "postTime": 1672584526,
        "uid": 536745,
        "name": "WangTianZhuo719",
        "ccfLevel": 0,
        "title": "P2086 \u9898\u89e3"
    }
]