[
    {
        "content": "\u82b1\u59d0\u59d0\u5f53\u4e0a\u5fd7\u613f\u8005\u7684\u7b2c\u4e8c\u5929\uff0c\u8d76\u7d27\u7ed9\u5979\u4f20\u7684\u9898\u5199\u7bc7\u9898\u89e3\u3002  \n### \u9898\u610f\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5168\u5e8f\u96c6\uff0c\u9664 $0$ \u4ee5\u5916\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u4e00\u4e2a\u6570\u5bf9 $(x,y)$\uff0c\u4e14 $x,y$ \u5747\u662f\u5168\u5e8f\u96c6\u4e2d\u7684\u5143\u7d20\u3002  \n\u6211\u4eec\u5b9a\u4e49\u6bd4\u8f83\u8fd0\u7b97\uff0c\u89c4\u5b9a $0$ \u5c0f\u4e8e\u4efb\u4f55\u4e00\u4e2a\u975e $0$ \u6570\u3002\u5bf9\u4e8e\u4e24\u4e2a\u6570\u5bf9\uff0c\u6211\u4eec\u4ee5 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\u3002\u5373\uff0c$(x_1,y_1) < (x_2,y_2)$ \u5f53\u4e14\u4ec5\u5f53 $x_1 < x_2$ \u6216 $x_1 = x_2,y_1<y_2$\u3002  \n\u8981\u6c42\u7ef4\u62a4\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6570\u5217 $\\{a\\}$\uff0c\u521d\u59cb\u65f6\u6240\u6709\u5143\u7d20\u5747\u4e3a $0$\u3002\u6211\u4eec\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a  \n- \u7ed9\u5b9a $i,j,k$\uff0c\u5c06 $a_k$ \u8d4b\u503c\u4e3a $(a_i,a_j)$\u3002\n- \u7ed9\u5b9a $l,r$\uff0c\u6c42 $\\min_{i=l}^r a_i$ \u3002  \n\n### \u9898\u89e3\n\u6839\u636e\u5b9a\u4e49\uff0c\u8fd9\u79cd\u4e1c\u897f\u53ef\u4ee5\u9012\u5f52\u5730\u6bd4\u8f83\uff0c\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u7206\u70b8\u4e86\uff0c\u4e0d\u53ef\u63a5\u53d7\u3002  \n\u8003\u8651\u6539\u826f\u6bd4\u8f83\u65b9\u5f0f\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u4ee5\u8f83\u4f4e\u7684\u590d\u6742\u5ea6\u8fdb\u884c\u6bd4\u8f83\uff0c\u7528\u4e00\u68f5\u533a\u95f4\u7ebf\u6bb5\u6811\u5c31\u80fd\u5b8c\u6210\u9898\u76ee\u4e2d\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u7684\u64cd\u4f5c\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u7740\u773c\u4e8e\u5982\u4f55\u7b80\u5316\u6bd4\u8f83\u3002\n\n\u8003\u8651\u7ed9\u6bcf\u4e2a\u6570\u5bf9\u8d4b\u4e0a\u4e00\u4e2a\u6ee1\u8db3\u539f\u6570\u7684\u504f\u5e8f\u5173\u7cfb\u7684\u65b0\u6743\u503c\uff0c\u7528\u8fd9\u4e2a\u6743\u503c\u4ee3\u66ff\u6570\u5bf9\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u6837\uff0c\u4e24\u4e2a\u6570\u5bf9\u7684\u6bd4\u8f83\u5c31\u88ab\u7b80\u5316\u4e3a\u81f3\u591a $4$ \u4e2a\u6570\u7684\u6bd4\u8f83\u3002  \n\u8fd9\u4e2a\u65b9\u6cd5\u770b\u4e0a\u53bb\u4e0d\u9519\uff0c\u4f46\u662f\u4e0d\u592a\u597d\u5b9e\u73b0\u3002\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u6570\u5bf9\u63d2\u5165\u4e00\u68f5\u5e73\u8861\u6811\u3002\u663e\u7136\uff0c\u5de6\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u90fd\u5c0f\u4e8e\u6839\uff0c\u53f3\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u90fd\u5927\u4e8e\u6839\u3002\u4ee4\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u6743\u503c\u4e3a $[v_l,v_r]$\uff0c\u5e76\u7ed9\u5f53\u524d\u8282\u70b9\u8d4b\u4e0a $\\dfrac{v_l+v_r}2$ \u7684\u6743\u503c\uff0c\u518d\u9012\u5f52\u5904\u7406\u4e24\u4e2a\u5b50\u6811\uff0c\u5206\u522b\u8d4b\u4e0a $[v_l,\\dfrac{v_l+v_r}2]$ \u548c $[\\dfrac{v_l+v_r}2,v_r]$ \u7684\u533a\u95f4\u6743\u503c\u3002\u5bb9\u6613\u77e5\u9053\u8fd9\u6837\u8d4b\u503c\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5e73\u8861\u6811\u7684\u6811\u9ad8\u592a\u5927\uff0c\u5373\u4f7f\u4f7f\u7528\u5b9e\u6570\uff0c\u7cbe\u5ea6\u4e5f\u65e0\u6cd5\u4fdd\u8bc1\u3002\u4f46\u662f\uff0c\u5982\u679c\u8981\u7ef4\u62a4\u5e73\u8861\u7684\u6811\u7ed3\u6784\uff0c\u6211\u4eec\u5fc5\u987b\u65cb\u8f6c\u3002\u7136\u800c\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u65cb\u8f6c\u7684\u8fc7\u7a0b\u4e2d\u6709\u6548\u5730\u7ef4\u62a4\u8d4b\u503c\u7ed3\u679c\u3002\u4e0d\u80fd\u65cb\u8f6c\u53c8\u8981\u4fdd\u8bc1\u9ad8\u5ea6\uff0c\u6211\u4eec\u81ea\u7136\u60f3\u5230\u4e86\u66ff\u7f6a\u7f8a\u6811\u3002  \n\u6bcf\u6b21\u5728\u62cd\u6241\u91cd\u6784\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u6574\u68f5\u5b50\u6811\u8fdb\u884c\u91cd\u65b0\u8d4b\u503c\uff0c\u8fd9\u6837\uff0c\u590d\u6742\u5ea6\u5c31\u548c\u666e\u901a\u5e73\u8861\u6811\u6ca1\u6709\u5dee\u522b\u4e86\u3002  \n\u5c06\u6240\u5f97\u5230\u7684\u6743\u503c\u63d2\u5165\u533a\u95f4\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7ef4\u62a4\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define reg register\ntypedef long long ll;\nusing namespace std;\nconst int MN=5e5+5;\nconst double alpha=0.75;\ndouble a[MN];\nstruct data{\n\tint l,r;\n\tinline bool operator<(data x){\n\t\treturn a[l]==a[x.l]?a[r]<a[x.r]:a[l]<a[x.l];\n\t}\n\tinline bool operator==(data x){\n\t\treturn l==x.l&&r==x.r;\n\t}\n\tinline bool operator>(data x){\n\t\treturn !((*this)<x)&&!((*this)==x);\n\t}\n};\nint n,m,root,pos[MN];\n#define mid (l+r>>1)\nnamespace SGT{\n\tdata val[MN];\n\tint tot,top,siz[MN],ls[MN],rs[MN];\n\tint len,arr[MN];\n\tvoid pia(int t){\n\t\tif(!t)return;pia(ls[t]);\n\t\tarr[++len]=t;pia(rs[t]);\n\t}\n\tvoid build(int& t,int l,int r,double L,double R){\n\t\tif(l>r)return (void)(t=0);\n\t\treg double Mid=(L+R)/2;\n\t\tt=arr[mid];a[t]=Mid;\n\t\tbuild(ls[t],l,mid-1,L,Mid);\n\t\tbuild(rs[t],mid+1,r,Mid,R);\n\t\tsiz[t]=siz[ls[t]]+siz[rs[t]]+1;\n\t}\n\tvoid rebuild(int& t,double L,double R){\n\t\tlen=0;pia(t);build(t,1,len,L,R);\n\t}\n\tint insert(int& t,double L,double R,data v){\n\t\tdouble Mid=(L+R)/2;\n\t\tif(!t){\n\t\t\tt=++tot;siz[t]=1;val[t]=v;\n\t\t\ta[t]=Mid;return t;\n\t\t}\n\t\tif(v==val[t])return t;\n\t\tsiz[t]++;reg int res=0;\n\t\tif(v<val[t])res=insert(ls[t],L,Mid,v);\n\t\telse res=insert(rs[t],Mid,R,v);\n\t\tif(max(siz[ls[t]],siz[rs[t]])<siz[t]*alpha){\n\t\t\tif(top){\n\t\t\t\tif(ls[t]==top)rebuild(ls[t],L,Mid);\n\t\t\t\telse rebuild(rs[t],Mid,R);top=0;\n\t\t\t}\n\t\t}\n\t\telse top=t;\n\t\treturn res;\n\t}\n}\nnamespace ST{\n\t#define ls (t<<1)\n\t#define rs (t<<1|1)\n\tint tr[MN];\n\tvoid update(int t,int l,int r,int pos){\n\t\tif(l==r)return (void)(tr[t]=l);\n\t\tif(pos<=mid)update(ls,l,mid,pos);\n\t\telse update(rs,mid+1,r,pos);\n\t\tif(a[::pos[tr[ls]]]>=a[::pos[tr[rs]]])tr[t]=tr[ls];\n\t\telse tr[t]=tr[rs];\n\t}\n\tint query(int t,int l,int r,int a,int b){\n\t\tif(a<=l&&r<=b)return tr[t];\n\t\tif(b<=mid)return query(ls,l,mid,a,b);\n\t\tif(a>mid)return query(rs,mid+1,r,a,b);\n\t\treg int pl=query(ls,l,mid,a,mid),pr=query(rs,mid+1,r,mid+1,b);\n\t\tif(::a[pos[pl]]>=::a[pos[pr]])return pl;\n\t\telse return pr;\n\t}\n\t#undef ls\n\t#undef rs\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\ta[0]=-1;\n\tSGT::insert(root,0,1,(data){0,0});\n\tfor(reg int i=1;i<=n;i++)pos[i]=1;\n\tfor(reg int i=1;i<=n;i++)pos[i]=1;\n\tfor(reg int i=1;i<=n;i++)ST::update(1,1,n,i);\n\twhile(m--){\n\t\tstatic char ch[5];\n\t\tstatic int l,r,x;\n\t\tscanf(\"%s%d%d\",ch,&l,&r);\n\t\tif(ch[0]=='C'){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tpos[x]=SGT::insert(root,0,1,(data){pos[l],pos[r]});\n\t\t\tif(SGT::top)SGT::rebuild(root,0,1),SGT::top=0;\n\t\t\tST::update(1,1,n,x);\n\t\t}\n\t\tif(ch[0]=='Q')\n\t\t\tprintf(\"%d\\n\",ST::query(1,1,n,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585827707,
        "uid": 17930,
        "name": "Marser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6272 \u3010\u6ca1\u6709\u4eba\u7684\u7b97\u672f\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6272)\n\n#### \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n\u5e73\u8861\u6811\uff08Treap/\u66ff\u7f6a\u7f8a\u6811\uff09\uff0c~~\u5e94\u8be5\u6ca1\u4eba\u4f1a\u4e86\u5e73\u8861\u6811\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5427 qwq~~\n\n#### \u9898\u610f\uff1a\n\n* \u5b9a\u4e49\u4e00\u79cd\u6570\uff1a$0$ \u662f\u6570\uff0c\u5176\u4ed6\u7684\u6570\u7528 $(x_L, x_R)$ \u8868\u793a\uff0c\u5176\u4e2d $x_L,x_R$ \u4e5f\u662f\u8fd9\u79cd\u6570\u3002\n\n* \u5b9a\u4e49\u7b49\u4e8e\uff1a$0=0$\uff1b\u5f53 $x_L=y_L,x_R=y_R$ \u65f6\uff0c\u8ba4\u4e3a $(x_L, x_R)=(y_L, y_R)$\u3002\n\n* \u5b9a\u4e49\u5c0f\u4e8e\uff1a\u5bf9\u4e8e $x \\neq 0$\uff0c\u6709 $0<x$\uff1b\u5f53 $x_L<y_L$ \u65f6\u6216 $x_L=y_L,x_R<y_R$ \u65f6\uff0c\u8ba4\u4e3a $(x_L, x_R)<(y_L, y_R)$\u3002\n\n* \u73b0\u5728\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$\uff0c\u521d\u59cb\u503c\u5747\u4e3a $0$ \u7684\u6570\u5217 $\\{a_n\\}$\uff0c\u5904\u7406 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5206\u4e3a\u4e24\u79cd\uff1a\u5c06 $(a_l, a_r)$ \u8d4b\u503c\u7ed9 $a_k$\uff1b\u8be2\u95ee $a_{l...r}$ \u4e2d\u6700\u5927\u6570\u7684\u7f16\u53f7\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684\u6570\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u7f16\u53f7\u3002\n\n* $n\\le 10^5$\uff0c$m\\le 5\u00d710^5$\u3002\n\n~~\u597d\u957f\u7684\u7b80\u8ff0~~\n\n#### \u5206\u6790\uff1a\n\n\u66b4\u529b\u60f3\u6cd5\u662f\u9012\u5f52\u6bd4\u8f83\uff0c\u4f46\u662f\u6bcf\u6b21\u66f4\u6539\u64cd\u4f5c\u53ef\u80fd\u4f7f\u4e00\u4e2a\u6570\u4e2d $0$ \u7684\u6570\u91cf\u589e\u52a0\u81f3\u4e24\u500d\uff0c\u4f1a T\u3002\n\n\u6ce8\u610f\u5230\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u6700\u591a\u53ea\u80fd\u589e\u52a0\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u4f1a\u51fa\u73b0\u7ea6 $m$ \u4e2a\u4e0d\u76f8\u540c\u6570\uff1b\u5e76\u4e14\u6bcf\u6b21\u7684\u65b0\u6570\u90fd\u662f\u7531\u66fe\u7ecf\u51fa\u73b0\u8fc7\u7684\u6570\u7ec4\u6210\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u66fe\u7ecf\u51fa\u73b0\u8fc7\u7684\u5927\u5c0f\u5173\u7cfb\u6765\u8fdb\u884c\u65b0\u6570\u4e0e\u65e7\u6570\u7684\u6bd4\u8f83\u3002\n\n\u6bcf\u4e24\u4e2a\u6570\u4e4b\u95f4\u6709\u4e00\u4e2a\u5927\u5c0f\u5173\u7cfb\uff0c\u90a3\u96be\u9053\u6211\u4eec\u8981\u5b58\u50a8 $m^2$ \u79cd\u5173\u7cfb\uff1f\u5f53\u7136\u4e0d\u7528\uff0c\u6ce8\u610f\u5230\u9898\u76ee\u6240\u63d0\u4f9b\u7684\u6761\u4ef6\uff1a\n\n$$x\\le y,y\\le z \\Rightarrow x\\le z$$\n\n\uff08~~\u5176\u5b9e\u4e0d\u9700\u8981\u9898\u76ee\u63d0\u4f9b~~\uff09\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u79cd\u6570\u4e0e\u5e38\u89c4\u6570\u7684\u5927\u5c0f\u5173\u7cfb\u662f\u7c7b\u4f3c\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u6570\u8d4b\u4e0a\u4e00\u4e2a\u5e38\u89c4\u6570\u7684\u6743\u503c\uff0c\u901a\u8fc7\u6bd4\u8f83\u5e38\u89c4\u6570\u6765\u6bd4\u8f83\u8fd9\u79cd\u6570\u7684\u5173\u7cfb\u3002\n\n\u5982\u679c\u80fd\u591f\u65b9\u4fbf\u5730\u7ef4\u62a4\u8fd9\u6837\u7684\u6743\u503c\uff0c\u7531\u4e8e\u4fee\u6539\u53c8\u662f\u5355\u70b9\u4fee\u6539\uff0c\u6545\u53ea\u9700\u8981\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u5904\u7406\u533a\u95f4\u6700\u5927\u503c\uff1b\u56e0\u6b64\u5148\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u6743\u503c\u3002\n\n\u5f53\u4ea7\u751f\u4e00\u4e2a\u65b0\u6570\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u5176\u8d4b\u4e0a\u4e00\u4e2a\u65b0\u6743\u503c\uff0c\u800c\u7531\u4e8e\u65b0\u6570 $(a_l, a_r)$ \u548c\u65e7\u6570 $(x_L, x_R)$ \u4e2d\u7684 $a_l,a_r,x_L,x_R$ \u6743\u503c\u90fd\u5df2\u77e5\uff0c\u56e0\u6b64\u6bd4\u8f83\u5c31\u53ef\u4ee5 $O(1)$ \u8fdb\u884c\u3002\u5047\u8bbe\u8fd9\u4e2a\u6743\u503c\u5e8f\u5217\u6709\u5e8f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $O(\\log n)$ \u67e5\u627e\u65b0\u6570\u5e94\u8be5\u5728\u54ea\u4e2a\u4f4d\u7f6e\u3002\n\n\u800c\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u5728\u5e8f\u5217\u4e2d\u95f4\u63d2\u5165\u5143\u7d20\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528 set\u3002\n\n\u7136\u800c\uff0c\u5982\u679c\u4e0d\u505c\u5730\u5728\u4e24\u4e2a\u6570\u4e2d\u95f4\u63d2\u5165\u65b0\u6570\uff0c\u5c31\u4f1a\u8fd9\u6837\uff1a\n\n![\u8fd9\u91cc\u662f\u4e00\u5f20\u56fe qwq](https://z3.ax1x.com/2021/05/27/2i8MjI.png)\n\n\uff08\u8fd9\u91cc\u7684 al, ar \u663e\u7136\u5e76\u4e0d\u662f $a_k=(a_l, a_r)$ \u7684 $a_l,a_r$\uff0c\u800c\u662f\u67d0\u4e24\u4e2a\u6570\u7684\u5e38\u89c4\u6570\u6743\u503c\uff09\n\n\u5f53\u5206\u5272\u5f88\u591a\u6b21\u540e\uff08~~\u5c24\u5176\u662f\u4e94\u5341\u4e07\u6b21~~\uff09\uff0c\u5269\u4e0b\u7684\u533a\u95f4\u5c31\u4f1a\u5f88\u5c0f\uff0c\u5bfc\u81f4\u7cbe\u5ea6\u4e0d\u591f\u7684\u95ee\u9898\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u7531\u6b64\u8054\u60f3\u5230\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u4e00\u6761\u65e0\u9650\u4e0b\u964d\u7684\u94fe\uff1a\n\n![\u53e6\u4e00\u5f20\u56fe](https://z3.ax1x.com/2021/05/27/2i8vrt.png)\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u201c\u65cb\u8f6c\u201d\u6765\u964d\u4f4e\u94fe\u7684\u9ad8\u5ea6\uff0c\u5373\u63d0\u5347\u4e86\u533a\u95f4\u7684\u5927\u5c0f\uff1b\u540c\u65f6\u4e5f\u4fdd\u8bc1\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\uff0c\u800c\u6211\u4eec\u7ef4\u62a4\u7684\u201c\u6743\u503c\u201d\u6b63\u597d\u53ea\u8003\u8651\u76f8\u5bf9\u5927\u5c0f\uff0c\u5341\u5206\u5408\u9002\u3002\n\n![\u633a\u591a\u4f59\u7684\u56fe](https://z3.ax1x.com/2021/05/27/2iG4zj.png)\n\n\n\u8003\u8651\u5b9e\u73b0\u3002~~\u80af\u5b9a\u4e0d\u80fd\u7528 set \u4e86~~\uff0c\u53ef\u4ee5\u624b\u5199\u5e73\u8861\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u4e0d\u4ec5\u5b58\u653e\u6743\u503c\uff0c\u8fd8\u5b58\u653e\u8be5\u8282\u70b9\u6743\u503c\u7684\u4e0a\u4e0b\u754c\uff08\u65b9\u4fbf\u65cb\u8f6c\uff09\uff0c\u201c\u65cb\u8f6c\u201d\u5c31\u5bf9\u5e94\u6811\u7684\u65cb\u8f6c\u3002\u6b64\u65f6\uff0c\u65cb\u8f6c\u5c31\u4e0d\u53ea\u662f\u6539\u53d8\u4e86\u8282\u70b9\u7684\u7236\u4eb2\u513f\u5b50\u5173\u7cfb\uff0c\u4e5f\u6539\u53d8\u4e86\u8282\u70b9\u7684\u6743\u503c\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u4e0a\u56fe\u4e2d\uff0c\u8282\u70b9 al \u6743\u503c\u4e3a 0\uff0c\u8282\u70b9 ar \u6743\u503c\u4e3a 16\uff0c\u5e76\u4e14\u53ea\u8003\u8651\u4ee5 m1 \u4e3a\u6839\u7684\u5b50\u6811\u3002\u90a3\u4e48\u65cb\u8f6c\u524d\uff1a\n\n|\u8282\u70b9| m1 | m2 | m3 | m4 |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n|\u7236\u4eb2| / | m1 | m2 | m3 |\n|\u6743\u503c| 8 | 4 | 2 | 1 |\n|\u4e0a\u4e0b\u754c| (0, 16) | (0, 8) | (0, 4) | (0, 2) |\n\n\n\u65cb\u8f6c\u540e\uff1a\n\n|\u8282\u70b9| m1 | m2 | m3 | m4 |\n| :----------: | :----------: | :----------: | :----------: | :----------: |\n|\u7236\u4eb2| m2 | / | m2 | m3 |\n|\u6743\u503c| 12 | 8 | 4 | 2 |\n|\u4e0a\u4e0b\u754c| (8, 16) | (0, 16) | (0, 8) | (0, 4) |\n\n\u867d\u7136\u53ef\u4ee5\u4fdd\u8bc1\u7cbe\u5ea6\uff0c\u4f46\u6bcf\u6b21\u65cb\u8f6c\u90fd\u8981\u66f4\u65b0\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\uff0c\u82e5\u65cb\u8f6c\u6b21\u6570\u591a\uff08\u5982 Splay\uff09\u5c31\u4e0d\u80fd\u63a5\u53d7\u3002\u8003\u8651\u66ff\u7f6a\u7f8a\u6811\uff08\u65e0\u65cb\uff09\u6216 Treap\uff08\u671f\u671b\u65cb\u8f6c\u6b21\u6570 $O(1)$\uff09\u5b9e\u73b0\u3002\n\n\u540c\u65f6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6bd4\u8f83\uff0c\u5bf9\u4e8e\u6570 $x(x_L, x_R)$ \u8fd8\u5e94\u8be5\u5b58\u50a8 $x_L$ \u548c $x_R$\uff08~~\u867d\u7136\u8fd9\u4e2a\u5b58\u5728\u6811\u5916\u9762\u4e5f\u884c~~\uff09\u3002\n\n#### \u601d\u8def\uff1a\n\n1. Treap \u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u6743\u503c\uff0c\u6bcf\u6b21\u8d4b\u503c\u64cd\u4f5c\u5bf9\u5e94\u7740\u63d2\u5165\u65b0\u6570\u6216\u8005\u53d1\u73b0\u65b0\u6570\u4e0e\u67d0\u65e7\u6570\u76f8\u540c\u3002~~\u849f\u84bb\u4e0d\u4f1a\u66ff\u7f6a\u7f8a~~\n\n2. \u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u6bcf\u6b21\u8d4b\u503c\u64cd\u4f5c\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u3002\uff08\u867d\u7136\u6574\u9897\u5b50\u6811\u6743\u503c\u6539\u53d8\uff0c\u4f46\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e0d\u53d8\uff0c\u6545\u53ea\u9700\u4fee\u6539\u65b0\u6570\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\uff09\n\n---\n\n\u7ed9\u51fa Treap \u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n```cpp\n\ndouble mn[mS], mx[mS];\t//\u4e0b\u754c\uff0c\u4e0a\u754c \ndouble rk[mS];\t//rk[p] \u8868\u793a\u5e73\u8861\u6811\u4e2d\u8282\u70b9 p \u7684\u6743\u503c\uff0c\u4e0e (mn[p]+mx[p])/2 \u76f8\u7b49 \nint totn;\nint son[mS][2], rd[mS], xl[mS], xr[mS];\n//xl xr \u5373 (xL, xR)\uff0c\u5c31\u662f\u8fd9\u4e2a\u6570\u4ece\u54ea\u91cc\u6765 \nnamespace Treap {\n#define lc son[p][0]\n#define rc son[p][1]\n\tint rt;\n\tinline void build() {\t//\u63d2\u5165\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u8981\u8d4b\u503c\u521d\u59cb\u7684\u4e0a\u4e0b\u754c\uff0c\u6240\u4ee5\u5355\u72ec\u5199 \n\t\trt=++totn, rd[rt]=rand(), xl[rt]=0, xr[rt]=0;\t//\u8fd9\u4e2a\u6570\u662f (0, 0) \n\t\tmn[rt]=0, mx[rt]=inf, rk[rt]=(mn[rt]+mx[rt])/2;\n\t}\n\tinline void push_down(int p) {\t//\u5411\u4e0b\u4f20\u9012 mn \u548c mx\uff0c\u540c\u65f6\u7528\u81ea\u5df1\u7684\u4e0a\u4e0b\u754c\u66f4\u65b0\u81ea\u5df1\u7684\u6743\u503c\u3002\n\t\tmn[lc]=mn[p], mx[lc]=mn[rc]=rk[p]=(mn[p]+mx[p])/2, mx[rc]=mx[p];\n\t}\n\tinline void update(int p) {\t//\u66f4\u65b0\u6574\u4e2a\u5b50\u6811\u5185\u8282\u70b9\u7684\u6743\u503c \n\t\tpush_down(p);\n\t\tif(lc) update(lc); if(rc) update(rc);\n\t}\n\tinline void rotate(int &p, bool t) {\n\t\tint x=son[p][t^1];\n\t\tson[p][t^1]=son[x][t], son[x][t]=p;\n\t\tmn[x]=mn[p], mx[x]=mx[p], update(p=x);\t//\u65cb\u8f6c\u65f6\u8981\u628a p \u7684\u4e0a\u4e0b\u754c\u8d4b\u7ed9 x\uff0c\u518d\u66f4\u65b0\u6574\u4e2a\u5b50\u6811 \n\t}\n\tinline int insert(int &p, int f, int l, int r) {\t//f \u8868\u793a father\n\t\tif(!p) {\n\t\t\tp=++totn, rd[p]=rand();\n\t\t\txl[p]=l, xr[p]=r;\n\t\t\tpush_down(f), rk[p]=(mn[p]+mx[p])/2;\t//push_down f\uff0c\u7528\u6765\u5f97\u5230 p \u7684\u4e0a\u4e0b\u754c \n\t\t\treturn p;\t//\u8fd4\u56de\u503c\u662f\u65b0\u6570 (l, r) \u7684\u7f16\u53f7 \n\t\t}\n\t\tif(rk[l]==rk[xl[p]] && rk[r]==rk[xr[p]]) return p;\n\t\tbool t=!(rk[l]<rk[xl[p]]||rk[l]==rk[xl[p]]&&rk[r]<rk[xr[p]]);\n\t\t//\u62ec\u53f7\u5185\u8868\u793a (l, r) \u6bd4 p(xl, xr) \u5c0f\uff0c\u90a3 !(...) \u5c31\u662f (l, r) \u6bd4 p \u5927\n\t\t//\u7b49\u7b49\u6211\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5199 \n\t\tint res=insert(son[p][t], p, l, r);\n\t\tif(rd[son[p][t]]<rd[p]) rotate(p, t^1);\n\t\treturn res;\n\t}\n#undef lc\n#undef rc\n}\n```",
        "postTime": 1622442767,
        "uid": 364963,
        "name": "\u963f\u4e11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6272 [\u6e56\u5317\u7701\u961f\u4e92\u6d4b2014]\u6ca1\u6709\u4eba\u7684\u7b97\u672f"
    },
    {
        "content": "\u5728\u6211\u7684\u535a\u5ba2\u67e5\u770b\uff1ahttps://www.cnblogs.com/suxxsfe/p/13392676.html  \n\nhttps://darkbzoj.tk/problem/3600  \nhttps://www.luogu.com.cn/problem/P6272  \n\u66ff\u7f6a\u7f8a\u6811+\u7ebf\u6bb5\u6811  \n\n\u9898\u610f\uff1a  \n\u5b9a\u4e49\u4e86\u65b0\u7684\u4e00\u79cd\u6570\uff0c\u9012\u5f52\u7684\u5b9a\u4e49\u4e3a\uff1a$(x,y)$ \u6216 $0$\uff0c\u5176\u4e2d $x,y$ \u4e5f\u662f\u8fd9\u79cd\u6570  \n\u5bf9\u4e8e\u4e24\u4e2a\u8fd9\u79cd\u6570\u5927\u5c0f\u7684\u6bd4\u8f83\uff1a\u82e5 $a<b$ \u6216 $a=b,c<d$\uff0c\u5219 $(a,b)<(c,d)$\uff1b\u82e5 $a=b,c=d$ \u5219 $(a,b)=(c,d)$  \n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u8fd9\u79cd\u6570\u7684\u5e8f\u5217 $a$\uff0c\u521d\u59cb\u5168\u662f $0$\uff0c\u6709 $m$ \u4e2a\u64cd\u4f5c\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a  \n\n- `C l r k`\uff1a\u5c06 $a_k$ \u8d4b\u503c\u4e3a $(a_l,a_r)$  \n- `Q l r`\uff1a\u67e5\u8be2 $a_l,\\ldots a_r$ \u4e2d\u6700\u5c0f\u7684\u6570\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u540c\u6837\u5c0f\u7684\u6570\uff0c\u5c06\u7f16\u53f7\u6700\u5c0f\u7684\u89c6\u4e3a\u6700\u5c0f\u3002\u8f93\u51fa\u8fd9\u4e2a\u7f16\u53f7  \n\n$n\\le 10^5,m\\le 5\\cdot 10^5$  \n\n---------------------  \n\n\u5982\u679c\u6211\u4eec\u80fd\u8f83\u5feb\u7684\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u90a3\u76f4\u63a5\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5355\u70b9\u67e5\u8be2\u533a\u95f4\u7ef4\u62a4\u6700\u5927\u5c31\u5b8c\u4e86  \n\u4f46\u5982\u679c\u6309\u7167\u5b9a\u4e49\u6765\u6bd4\u8f83\uff0c\u663e\u7136\u590d\u6742\u5ea6\u7206\u6389\uff0c\u90a3\u4e48\u4e0b\u9762\u8003\u8651\u5982\u4f55\u66f4\u5feb\u7684\u6bd4\u8f83  \n\n\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u9898\u76ee\u91cc\u7684\u6570\u90fd\u7528\u4e00\u4e2a\u5b9e\u6570\u6765\u8868\u8fbe  \n\n\u9996\u5148\u8981\u89e3\u51b3\u7684\u662f\uff0c\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u5b9e\u6570\u7684\u503c\u3002  \n\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u540e\u9762\u63d2\u5165\u7684\u6570\u6709\u591a\u5c11\u6bd4\u4ed6\u5927\uff0c\u591a\u5c11\u6bd4\u4ed6\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u5b83\u4eec\u653e\u5230\u4e00\u9897\u4e8c\u53c9\u6811\u4e0a\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u6743\u503c\u7684\u533a\u95f4 $(l,r)$\uff0c\u7136\u540e\u8fd9\u4e2a\u8282\u70b9\u4e0a\u7684\u6570\u5bf9\u6743\u503c\u5c31\u662f $\\dfrac{l+r}{2}$  \n\u5f53\u63d2\u5165\u4e00\u4e2a\u6570\u5bf9\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5bf9\u6bd4\u5f53\u524d\u8282\u70b9\u7684\u6570\u5bf9\u5c0f\uff0c\u5c31\u8fd1\u5de6\u5b50\u6811\uff0c\u6743\u503c\u533a\u95f4 $(l,\\frac{l+r}{2})$\uff0c\u53cd\u4e4b\u8fdb\u5165\u53f3\u5b50\u6811\uff0c\u6743\u503c\u533a\u95f4 $(\\frac{l+r}{2},r)$  \n\u4e00\u76f4\u9012\u5f52\u5230\u8282\u70b9\u4e3a\u7a7a\uff0c\u6216\u5f53\u524d\u8282\u70b9\u5b58\u5728\u4e14\u5b83\u4ee3\u8868\u7684\u6570\u5bf9\u548c\u63d2\u5165\u7684\u6570\u5bf9\u76f8\u7b49\uff0c\u5c31\u8fd4\u56de\u8fd9\u4e2a\u8282\u70b9  \n\n\u4f46\u8fd9\u6837\uff0c\u5982\u679c\u9000\u5316\u6210\u4e00\u4e2a\u94fe\uff0c\u90a3\u6bcf\u6b21\u9664\u4ee5\u4e8c\uff0c\u7cbe\u5ea6\u8fd8\u662f\u4e0d\u591f\u7528  \n\u800c\u8fd9\u91cc\u53c8\u6d89\u53ca\u6743\u503c\u7684\u533a\u95f4\u7684\u95ee\u9898\uff0c\u4e0d\u80fd\u7528\u57fa\u4e8e\u65cb\u8f6c\u6216\u5206\u88c2\u5408\u5e76\u7684\u5e73\u8861\u6811\uff0c\u6240\u4ee5\u5e94\u8be5\u7528\u66ff\u7f6a\u7f8a\u6811  \n\u6bcf\u6b21\u66b4\u529b\u91cd\u6784\u7684\u65f6\u5019\uff0c\u91cd\u65b0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u8d4b\u4e0a\u6743\u503c\u7684\u533a\u95f4\uff0c\u8fd8\u6709\u4ee3\u8868\u8fd9\u4e2a\u8282\u70b9\u6570\u5bf9\u7684\u5b9e\u6570  \n\n\u4e0b\u9762\u5c31\u662f\u5b9e\u73b0\u7ec6\u8282\u4e0a\u7684\u95ee\u9898\u4e86  \n\u81f3\u4e8e\u5982\u4f55\u5728\u4e00\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e00\u4e2a\u6570\u5bf9\uff0c\u6211\u4eec\u5728\u8282\u70b9\u7684\u7ed3\u6784\u4f53\u91cc\u5b58\u4e24\u4e2a\u6307\u9488\uff0c\u7531\u4e8e\u4e00\u4e2a\u6570\u5bf9\u5b9e\u9645\u4e0a\u662f\u7531\u4e24\u4e2a\u4fdd\u5b58\u5728\u5176\u5b83\u8282\u70b9\u7684\u6570\u5bf9\u7ec4\u6210\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u6307\u9488\u4e5f\u5c31\u5206\u522b\u6307\u5411\u7ec4\u6210\u5b83\u7684\u4e24\u4e2a\u8282\u70b9  \n\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a `pos` \u6307\u9488\u6570\u7ec4\uff0c$pos_i$ \u6307\u5411 $a_i$ \u6240\u5bf9\u5e94\u7684\u6570\u5bf9\u5728\u66ff\u7f6a\u7f8a\u6811\u4e0a\u7684\u8282\u70b9  \n\u7136\u540e\u5c31\u53ef\u4ee5\u501f\u52a9\u8fd9\u4e2a\u6570\u7ec4\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c pushup \u4e86  \n\n\u53ea\u4e8e\u4e00\u5f00\u59cb\u6240\u6709\u6570\u90fd\u4e3a $0$\uff0c\u5c31\u5148\u5f80\u66ff\u7f6a\u7f8a\u6811\u91cc\u63d2\u5165\u4e00\u4e2a\u90a3\u4e24\u4e2a\u6307\u9488\u90fd\u662f null \u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u6839\uff0c\u7136\u540e\u6240\u6709 $pos_i$ \u4e00\u5f00\u59cb\u90fd\u6307\u5411\u6839\u5c31\u884c\u4e86  \n\n\u5c4e\u5c71\u4ee3\u7801\uff08\u5199\u4e86\u597d\u51e0\u4e2a\u5c0f\u65f6\uff0c\u800c\u4e14\u662f\u771f\u7684\u4e11\uff09\uff1a  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\n#define N 500005\nint n,m;\nstruct GOAT{\n\t#define alpha 0.7\n\tstruct tr;\n\tstruct data{\n\t\ttr *l,*r;\n\t\tinline int operator <(const data &x){\n\t\t\treturn l->a==x.l->a?r->a<x.r->a:l->a<x.l->a;\n\t\t}\n\t\tinline int operator==(const data &x){\n\t\t\treturn l->a==x.l->a&&r->a==x.r->a;\n\t\t}\n\t};\n\tstruct tr{\n\t\ttr *ls,*rs;\n\t\tint size;\n\t\tdata val;\n\t\tdouble a;\n\t}*root,*null,**badtag,dizhi[N],*nodes[N],*pos[N];\n\tdouble badtagL,badtagR;\n\tint tot,node;\n\tinline void init(){\n\t\tnull=&dizhi[0];\n\t\tnull->val=(data){0,0};\n\t\tnull->size=0;\n\t\troot=null;\n\t}\n\tinline int isbad(tr *tree){\n\t\treturn tree->ls->size>tree->size*alpha+5||tree->rs->size>tree->size*alpha+5;\n\t}\n\tvoid dfs(tr *tree){\n\t\tif(tree->ls!=null) dfs(tree->ls);\n\t\tnodes[++node]=tree;\n\t\tif(tree->rs!=null) dfs(tree->rs);\n\t}\n\ttr* build(int l,int r,double L,double R){\n\t\tif(l>r) return null;\n\t\tdouble MID=(L+R)/2;\n\t\tif(l==r){\n\t\t\tnodes[l]->ls=nodes[l]->rs=null;\n\t\t\tnodes[l]->size=1;\n\t\t\tnodes[l]->a=MID;\n\t\t\treturn nodes[l];\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tnodes[mid]->ls=build(l,mid-1,L,MID);nodes[mid]->rs=build(mid+1,r,MID,R);\n\t\tnodes[mid]->size=1+nodes[mid]->ls->size+nodes[mid]->rs->size;\n\t\tnodes[mid]->a=MID;\n\t\treturn nodes[mid];\n\t}\n\tinline void rebuild(tr *&tree){\n\t\tnode=0;dfs(tree);\n\t\ttree=build(1,node,badtagL,badtagR);\n\t}\n\ttr* insert(tr *&tree,double l,double r,data k){\n\t\tdouble mid=(l+r)/2;\n\t\tif(tree==null){\n\t\t\ttree=&dizhi[++tot];\n\t\t\ttree->ls=tree->rs=null;\n\t\t\ttree->val=k;\n\t\t\ttree->a=mid;\n\t\t\ttree->size=1;\n\t\t\treturn tree;\n\t\t}\n\t\tif(k==tree->val) return tree;\n\t\ttree->size++;\n\t\ttr* ret;\n\t\tif(k<tree->val) ret=insert(tree->ls,l,mid,k);\n\t\telse ret=insert(tree->rs,mid,r,k);\n\t\tif(isbad(tree)) badtag=&tree,badtagL=l,badtagR=r;\n\t\treturn ret;\n\t}\n\tinline tr* Insert(data k){\n\t\tbadtag=NULL;\n\t\ttr *ret=insert(root,1,1e9,k);\n\t\tif(badtag) rebuild(*badtag);\n\t\treturn ret;\n\t}\n\t#undef alpha\n}B;\nstruct SEG{\n\tstruct tr{\n\t\ttr *ls,*rs;\n\t\tint pos;\n\t}dizhi[N],*root=&dizhi[0];\n\tint tot;\n\tvoid build(tr *tree,int l,int r){\n\t\tif(l==r) return tree->pos=l,void();\n\t\ttree->ls=&dizhi[++tot];tree->rs=&dizhi[++tot];\n\t\tint mid=(l+r)>>1;\n\t\tbuild(tree->ls,l,mid);build(tree->rs,mid+1,r);\n\t\ttree->pos=l;\n\t}\n\tvoid change(tr *tree,int l,int r,int pos){\n\t\tif(l==r) return;\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid) change(tree->ls,l,mid,pos);\n\t\telse change(tree->rs,mid+1,r,pos);\n\t\ttree->pos=B.pos[tree->ls->pos]->a>=B.pos[tree->rs->pos]->a?tree->ls->pos:tree->rs->pos;\n\t}\n\tint get(tr *tree,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr) return tree->pos;\n\t\tint mid=(l+r)>>1;\n\t\tif(qr<=mid) return get(tree->ls,l,mid,ql,qr);\n\t\tif(ql>mid) return get(tree->rs,mid+1,r,ql,qr);\n\t\tint L=get(tree->ls,l,mid,ql,qr),R=get(tree->rs,mid+1,r,ql,qr);\n\t\treturn B.pos[L]->a>=B.pos[R]->a?L:R;\n\t}\n}A;\nint main(){\n\tn=read();m=read();\n\tB.init();\n\tB.Insert((GOAT::data){B.null,B.null});\n\tA.build(A.root,1,n);\n\tfor(reg int i=1;i<=n;i++) B.pos[i]=B.root;\n\treg int l,r,k;char c;\n\twhile(m--){\n\t\tc=getchar();\n\t\twhile(c!='Q'&&c!='C') c=getchar();\n\t\tl=read();r=read();\n\t\tif(c=='C'){\n\t\t\tk=read();\n\t\t\tB.pos[k]=B.Insert((GOAT::data){B.pos[l],B.pos[r]});\n\t\t\tA.change(A.root,1,n,k);\n\t\t}\n\t\telse printf(\"%d\\n\",A.get(A.root,1,n,l,r));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595930888,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "P6272 \u6ca1\u6709\u4eba\u7684\u7b97\u672f"
    }
]