[
    {
        "content": "\u8003\u8651\u64cd\u4f5c\u6709\u5220\u8fb9\u4f46\u6ca1\u6709\u6062\u590d\u8fb9\u7684\u64cd\u4f5c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u79bb\u7ebf\u540e\u9006\u5e8f\u64cd\u4f5c\u7684\u5957\u8def\u3002\n\n\u9006\u5e8f\u540e\u64cd\u4f5c\u5373\u4e3a\u53ea\u6709\u52a0\u8fb9\u6ca1\u6709\u5220\u8fb9\u4e86\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4f46\u662f\u6ce8\u610f\u5230\u9898\u76ee\u8981\u6c42\u70b9\u6743\u548c\uff0c\u6240\u4ee5\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u4fee\u6539\u6743\u503c\u4e5f\u53ef\u4ee5\u8f7b\u677e\u505a\uff0c\u5373\u5728\u7236\u4eb2\u7684\u70b9\u4e0a\u51cf\u53bb\u672c\u8eab\u7684\u8d21\u732e\u52a0\u4e0a\u65b0\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\nint ans[N], n, m;\nint a[N];\nbool v[N];\n\nstruct Query\n{\n\tint op, u, val, id;\n}q[N];\n\nclass Union_Find\n{\npublic:\n\tint fa[N], val[N];\n\tvoid build()\n\t{\n\t\tfor (int i = 0; i < N; i++) fa[i] = i, val[i] = a[i];\n\t}\n\tint find(int u)\n\t{\n\t\treturn fa[u] == u ? u : fa[u] = find(fa[u]);\n\t}\n\tvoid merge(int u, int v)\n\t{\n\t\tint x = find(u), y = find(v);\n\t\tfa[x] = y;\n\t\tval[y] += val[x];\n\t}\n}f;\n\npair<int, int> EDGE[N];\nint idx, lst[N];\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tEDGE[i] = make_pair(u, v);\n\t}\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint op;\n\t\tscanf(\"%d\", &op);\n\t\tq[i].op = op;\n\t\tif (op == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &op);\n\t\t\tv[op] = 1;\n\t\t\tq[i].u = op;\n\t\t}\n\t\telse if (op == 2)\n\t\t{\n\t\t\tint x, y;\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tq[i].u = x;\n\t\t\tq[i].val = y;\n\t\t\tlst[i] = a[x];\n\t\t\ta[x] = y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\", &op);\n\t\t\tq[i].id = ++idx;\n\t\t\tq[i].u = op;\n\t\t}\n\t}\n\tf.build();\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tif (!v[i])\n\t\t{\n\t\t\tf.merge(EDGE[i].first, EDGE[i].second);\n\t\t}\n\t}\n\tfor (int i = m; i >= 1; i--)\n\t{\n\t\tint op = q[i].op;\n\t\tif (op == 1)\n\t\t{\n\t\t\tint u = q[i].u;\n\t\t\tf.merge(EDGE[u].first, EDGE[u].second);\n\t\t}\n\t\telse if (op == 2)\n\t\t{\n\t\t\tint u = q[i].u, v = q[i].val;\n\t\t\tint ff = f.find(u);\n\t\t\tf.val[ff] -= v;\n\t\t\tf.val[ff] += lst[i];\n\t\t\t//a[u] = v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint u = q[i].u;\n\t\t\tans[q[i].id] = f.val[f.find(u)];\n\t\t}\n\t}\n\tfor (int i = 1; i <= idx; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1668053641,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P8827 [\u4f20\u667a\u676f #3 \u521d\u8d5b] \u68ee\u6797 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u6bd4\u8f83\u5957\u8def\u3002\n\n\u8003\u8651\u5230\u53ea\u6709\u5220\u8fb9\uff0c\u6ca1\u6709\u52a0\u8fb9\uff0c\u79bb\u7ebf\u64cd\u4f5c\u540e\u4f7f\u7528\u5e76\u67e5\u96c6\u5012\u5e8f\u7ef4\u62a4\u3002\n\n\u53c8\u56e0\u4e3a\u8981\u67e5\u8be2\u70b9\u6743\u548c\uff0c\u4f7f\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u79bb\u7ebf\u6240\u6709\u64cd\u4f5c\u540e\u8bb0\u5f55\u4e00\u4e0b\u6700\u7ec8\u6709\u54ea\u4e9b\u8fb9\u6ca1\u88ab\u5220\uff0c\u5728\u5012\u5e8f\u904d\u5386\u64cd\u4f5c\u65f6\u6539\u4e3a\u52a0\u8fb9\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u4f7f\u7528\u6808\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u66f4\u6539\u3002\u8bbe\u6808\u9876\u5143\u7d20\u5373\u8be5\u6b21\u4fee\u6539\u6210\u7684\u503c\u4e3a $x$\uff0c\u6808\u9876\u4e0b\u7684\u5143\u7d20\u4e3a $y$\uff0c\u5219\u8fd9\u6b21\u4fee\u6539\u9020\u6210 $y - x$ \u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $3$\uff0c\u67e5\u8be2\u8be5\u70b9\u7956\u5148\u7684\u6743\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <map>\n#include <stack>\n#define int long long\nusing namespace std;\n\nint fa[100010];\nint find(int x)\n{\n\tif (x == fa[x])\n\t\t{\n\t\t\treturn x;\n\t\t}\n\tfa[x] = find(fa[x]);\n\treturn fa[x];\n}\nlong long cnt[100010];\nvector <int> change[100010];\npair <int, int> edge[100010];\nbool have[100010];\nstruct que\n{\n\tint op;\n\tint x;\n\tint y;\n} q[100010];\nstack<long long> ans;\nstack<long long> last[100010];\nint a[100010];\n\nsigned main()\n{\n\tint n;\n\tint m;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tcin >> cnt[i];\n\t\t\tlast[i].push(cnt[i]);\n\t\t}\n\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tint a, b;\n\t\t\tcin >> a >> b;\n\t\t\tedge[i] = make_pair(a, b);\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfa[i] = i;\n\t\t}\n\tfor (int i = 1; i <= m; i++)\n\t\t{\n\t\t\tcin >> q[i].op >> q[i].x;\n\t\t\tif (q[i].op == 2)\n\t\t\t\t{\n\t\t\t\t\tcin >> cnt[q[i].x];\n\t\t\t\t\tlast[q[i].x].push(cnt[q[i].x]);\n\t\t\t\t}\n\t\t\tif (q[i].op == 1)\n\t\t\t\t{\n\t\t\t\t\thave[q[i].x] = true;\n\t\t\t\t}\n\t\t}\n\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tif (!have[i])\n\t\t\t\t{\n\t\t\t\t\tint x = find(edge[i].first), y = find(edge[i].second);\n\t\t\t\t\tcnt[y] += cnt[x];\n\t\t\t\t\tfa[x] = y;\n\t\t\t\t}\n\t\t}\n\tfor (int i = m; i >= 1; i--)\n\t\t{\n\t\t\tif (q[i].op == 1)\n\t\t\t\t{\n\t\t\t\t\tint x = find(edge[q[i].x].first), y = find(edge[q[i].x].second);\n\t\t\t\t\tcnt[y] += cnt[x];\n\t\t\t\t\tfa[x] = y;\n\t\t\t\t}\n\t\t\telse if (q[i].op == 2)\n\t\t\t\t{\n\t\t\t\t\tint tmp = last[q[i].x].top();\n\t\t\t\t\tlast[q[i].x].pop();\n\t\t\t\t\tcnt[find(q[i].x)] += (last[q[i].x].top() - tmp);\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint x = find(q[i].x);\n\t\t\t\t\tans.push(cnt[x]);\n\t\t\t\t}\n\t\t}\n\twhile (!ans.empty())\n\t\t{\n\t\t\tcout << ans.top() << '\\n';\n\t\t\tans.pop();\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1669269249,
        "uid": 408071,
        "name": "TankYu",
        "ccfLevel": 5,
        "title": "P8827\u9898\u89e3"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\n------------\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u70b9\u6709\u70b9\u6743\uff0c\u7ef4\u62a4\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n+ $\\tt{1~e}$\uff1a\u5220\u9664\u7f16\u53f7\u4e3a $e$ \u7684\u8fb9\u3002\n+ $\\tt{2~u~val}$\uff1a\u5c06 $u$ \u53f7\u8282\u70b9\u7684\u6743\u503c\u6539\u4e3a $val$\u3002\n+ $\\tt{3~u}$\uff1a\u67e5\u8be2 $u$ \u6240\u5728\u8fde\u901a\u5757\u7684\u6743\u503c\u548c\u3002\n\n#### \u601d\u8def\u5206\u6790\n\n\n------------\n\u6b63\u5411\u7ef4\u62a4\u663e\u7136\u65e0\u6cd5\u7b80\u5355\u7684\u7ef4\u62a4\u5220\u8fb9\u64cd\u4f5c\uff0c\u6545\u8003\u8651\u5c06\u8be2\u95ee\u53cd\u5411\uff0c\u5c06\u5220\u8fb9\u64cd\u4f5c\u6539\u4e3a\u52a0\u8fb9\u64cd\u4f5c\uff0c\u5bf9\u4e8e $2$ \u64cd\u4f5c\u5728\u8bfb\u5165\u6570\u636e\u65f6\u8bb0\u5f55 $u$ \u8282\u70b9\u4e4b\u524d\u7684\u503c\u548c\u66f4\u6539\u540e\u7684\u503c\uff0c\u5728\u7ef4\u62a4 $3$ \u67e5\u8be2\u8fde\u901a\u5757\u6743\u503c\u548c\u65f6\u76f4\u63a5\u66f4\u65b0\u6743\u503c\u548c\u51cf\u53bb\u66f4\u65b0\u540e\u7684\u503c\u518d\u52a0\u4e0a\u5148\u524d\u7684\u503c\uff08\u53cd\u5411\u5904\u7406\u8be2\u95ee\uff09\u3002\n\n\u5728\u8bfb\u5165\u65f6\u8bb0\u5f55\u4e0b\u54ea\u4e9b\u8fb9\u662f\u81ea\u59cb\u81f3\u7ec8\u90fd\u6ca1\u6709\u88ab\u5220\u9664\u7684\uff0c\u76f4\u63a5\u52a0\u5165\uff0c\u6b64\u65f6\u7684\u6811\u5c31\u662f\u8fdb\u884c\u5b8c\u6240\u6709\u64cd\u4f5c\u540e\u7684\u6811\uff0c\u4e5f\u5c31\u662f\u53cd\u5411\u64cd\u4f5c\u5f00\u59cb\u65f6\u7684\u6811\u3002\u6309\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u5728\u6811\u4e0a\u8fdb\u884c\u64cd\u4f5c\u5373\u53ef\u3002\u7ef4\u62a4\u4e00\u4e2a\u5e26\u6743\u5e76\u67e5\u96c6\uff0c\u5c06\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u6743\u503c\u8bb0\u5f55\u5230\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u7236\u4eb2\u8282\u70b9\u4e0a\uff0c\u5408\u5e76\u65f6\u5c06\u513f\u5b50\u7684\u6743\u503c\u52a0\u5230\u7236\u4eb2\u7684\u6743\u503c\u4e0a\u5373\u53ef\u3002\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#include<deque>\n#include<queue>\n#include<map>\n#include<vector>\n#define int long long//\nusing namespace std;\nconst int INF = 2e15;\nconst int mod = 1e9 + 7;\nconst int N = 1e5 + 10;\n\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n\tfor(; isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\nint fa[N],sum[N];\nint find(int x){\n\tif(fa[x] == x) return x;\n\telse return fa[x] = find(fa[x]);\n}\nvoid merge(int x,int y){\n\tint fx = find(x) , fy = find(y);\n\tif(fx != fy){\n\t\tfa[fx] = fy;\n\t\tsum[fy] += sum[fx];\n\t}\n}\nstruct Edge{\n\tint from,to;\n}ed[N<<1];\nstruct Node{\n\tint type,pos,val;\n}q[N];\nint lst[N],a[N],ans[N],cnt;\nbool vis[N];\nsigned main(){\n\tmemset(vis,false,sizeof(vis));\n\tint n = read() , m = read();\n\tfor(int i=1;i<=n;i++) a[i] = read();\n\tfor(int i=1;i<=n-1;i++){\n\t\ted[i].from = read() , ed[i].to = read();\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tq[i].type = read() , q[i].pos = read();\n\t\tif(q[i].type == 1){\n\t\t\tvis[q[i].pos] = true;\n\t\t}\n\t\tif(q[i].type == 2){\n\t\t\tq[i].val = read();\n\t\t\tlst[i] = a[q[i].pos];\n\t\t\ta[q[i].pos] = q[i].val;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) fa[i] = i , sum[i] = a[i];\n\tfor(int i=1;i<=n-1;i++){\n\t\tif(!vis[i]) merge(ed[i].from,ed[i].to);\n\t}\n\tfor(int i=m;i>=1;i--){\n\t\tint fx = find(q[i].pos);\n\t\tif(q[i].type == 1){\n\t\t\tmerge(ed[q[i].pos].from,ed[q[i].pos].to);\n\t\t}\n\t\telse if(q[i].type == 2){\n\t\t\tfx = find(q[i].pos);\n\t\t\tsum[fx] = sum[fx] - q[i].val + lst[i];\n\t\t}\n\t\telse{\n\t\t\tans[++cnt] = sum[fx];\n\t\t}\n\t}\n\tfor(int i=cnt;i>=1;i--){\n\t\tcout<<ans[i]<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1669078234,
        "uid": 335615,
        "name": "0xFF",
        "ccfLevel": 0,
        "title": "P8827"
    },
    {
        "content": "\u672c\u9898\u89e3\u63d0\u4f9b\u4e24\u79cd\u505a\u6cd5\u3002\n\n## \u505a\u6cd5\u4e00\n\n\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u5148\u5f15\u5165 $n$ \u7ea7\u6bcd\u6811\u7684\u6982\u5ff5\u3002\n\u5b9a\u4e49 $1$ \u7ea7\u6bcd\u6811\u5373\u4e3a\u8be5\u5b50\u6811\u88ab\u5220\u53bb\u524d\uff0c\u5176\u6240\u5728\u7684\u539f\u6765\u7684\u5b8c\u6574\u7684\u6811\u3002\n\n![666](https://cdn.luogu.com.cn/upload/image_hosting/0r4ejkpy.png)\n\n\u5982\u4e0b\u56fe\uff0c\u4ee5 $5$ \u4e3a\u6839\u7684\u4e00\u7ea7\u6bcd\u6811\u4e3a\u4ee5 $3$ \u4e3a\u6839\u7684**\u539f\u6765**\u7684\u5b50\u6811\u3002\u7c7b\u4f3c\u5730\uff0c\u4ee5 $1$ \u4e3a\u6839\u7684**\u539f\u6765**\u7684\u6811\u5373\u4e3a\u4ee5 $3$ \u4e3a\u6839\u7684\u6811\u7684 $1$ \u7ea7\u6bcd\u6811\u4ee5\u53ca\u4ee5 $5$ \u4e3a\u6839\u7684 $2$ \u7ea7\u6bcd\u6811\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u6709\u8fd9\u6837\u4e00\u4e2a\u6761\u4ef6\uff1a$v \\le 1000$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u68f5\u6811\u7684\u521d\u59cb\u60c5\u51b5\u662f\u4e00\u4e2a\u7c7b\u83ca\u82b1\u56fe\u3002\u83ca\u82b1\u56fe\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5c31\u662f\u5176\u6df1\u5ea6\u975e\u5e38\u6d45\u3002\u5728\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u6761\u4ef6\u4e0b\uff0c\u5047\u5982\u6211\u4eec\u4ece\u67d0\u4e00\u70b9\u6309\u7167\u5176\u7236\u4eb2\u4e00\u8def\u8df3\u81f3\u6839\u8282\u70b9\uff0c\u6700\u591a\u53ea\u80fd\u8df3 $1000$ \u6b21\u3002\n\n\u5229\u7528\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u548c $siz_u$\u3002\u90a3\u4e48\uff0c\u6bcf\u4e00\u68f5\u6811\u7684\u6743\u503c\u548c\u5373\u4e3a\u5176\u5f53\u524d\u6839\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\n\n\u8003\u8651\u64cd\u4f5c $1$, \u6211\u4eec\u76f4\u63a5\u6a21\u62df\u5220\u53bb\u5b50\u6811\u548c\u3002\u4ece\u73b0\u5728\u88ab\u5220\u6811\u6839\u8282\u70b9 $v$ \u7684\u7236\u4eb2\u81f3\u5176 $1$ \u7ea7\u6bcd\u6811\u7684\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684\u5b50\u6811\u548c\u663e\u7136\u90fd\u8981\u51cf\u6389 $siz_v$\u3002\u4e00\u8def\u4e0a\u8df3\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$, \u6211\u4eec\u8ba1\u7b97\u51fa\u524d\u540e\u7684\u6539\u53d8\u91cf\uff0c\u4ece\u5f53\u524d\u70b9\u5230\u5b50\u6811\u6839\u8282\u70b9\u4e0a\u7684 $siz_i$ \u663e\u7136\u90fd\u8981\u52a0\u4e0a\u6539\u53d8\u91cf\u3002\u4e00\u8def\u4e0a\u8df3\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $3$, \u6309\u7167\u4e0a\u6587\u6240\u8bf4\uff0c\u4e0a\u8df3\u5230\u5f53\u524d\u6811\u7684\u6839\u8282\u70b9\u67e5\u8be2\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100010\n#define ll long long\nconst int INF = 1e9; \n\ntemplate <class T>\ninline void read(T& a){\n\tT x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){ if(c == '-') s = -1; c = getchar(); }\n\twhile(isdigit(c)){ x = x * 10 + (c ^ '0'); c = getchar(); }\n\ta = x * s;\n\treturn ;\n}\n\nstruct node{\n  int u, v, next;\n} t[N << 1]; \nint head[N];\n\nint bian = 0;\ninline void addedge(int u, int v){\n  t[++bian] = (node){u, v, head[u]}, head[u] = bian;\n  return ; \n}\n\nint n, m; \nint a[N]; \n\nstruct hehe{\n  int u, v; \n} h[N]; \n\nint deth[N], siz[N], fa[N]; \n\nvoid dfs1(int u, int father){\n  fa[u] = father; \n  siz[u] = a[u]; \n  deth[u] = deth[father] + 1; \n  for(int i = head[u]; i; i = t[i].next){\n    int v = t[i].v; \n    if(v != father){\n      dfs1(v, u); \n      siz[u] += siz[v]; \n    }\n  }\n  return ; \n}\n\nmap <int, int> del[N]; // \u8bb0\u5f55\u5220\u8fb9\u60c5\u51b5\n\nsigned main(){\n  // freopen(\"hh.txt\", \"r\", stdin); \n  read(n), read(m);\n  for(int i = 1; i <= n; i++) read(a[i]); \n  for(int i = 1; i < n; i++){\n    int x, y;\n    read(x), read(y);\n    addedge(x, y); \n    addedge(y, x); \n    h[i].u = x, h[i].v = y; \n  }\n\n  dfs1(1, 0);\n  del[1][0] = del[0][1] = 1; \n\n  while(m--){\n    int opt, e, x, y; \n    read(opt); \n    if(opt == 1){\n      read(e); \n      int u = h[e].u; \n      int v = h[e].v; \n      if(deth[u] > deth[v]) swap(u, v); \n      del[u][v] = del[v][u] = 1; \n      while(!del[u][fa[u]]){\n        siz[u] -= siz[v]; \n        u = fa[u]; \n      }\n      siz[u] -= siz[v]; \n    }\n    else if(opt == 2){\n      read(x), read(y); \n      int d = y - a[x]; \n      a[x] = y;\n      while(!del[x][fa[x]]){\n        siz[x] += d; \n        x = fa[x]; \n      }\n      siz[x] += d; \n       \n    }\n    else{\n      read(x);\n      while(!del[x][fa[x]]) x = fa[x]; \n      cout << siz[x] << endl; \n    }\n  }\n\n  return 0;\n}\n```\n\n## \u65b9\u6cd5\u4e8c\n\n\u8003\u8651\u5728\u539f\u65b9\u6cd5\u4e0a\u8fdb\u884c\u5347\u7ea7\u3002\n\n\u601d\u8003\uff1a\u5982\u679c\u6ca1\u6709 $v \\le 1000$ \u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u66b4\u529b\u4e0a\u8df3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u9000\u5316\u4e3a $O(QN)$\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u884c\u7684\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u539f\u65b9\u6cd5\u7684\u64cd\u4f5c\u90fd\u662f\u533a\u95f4\u64cd\u4f5c\uff0c\u4e8e\u662f\u8003\u8651\u7528\u6811\u94fe\u5256\u5206\u52a0\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n\u5bf9\u4e8e\u627e\u5f53\u524d\u70b9\u6240\u5728\u6811\u7684\u6839\uff0c\u8003\u8651\u5982\u4e0b\u6027\u8d28\uff1a\n\n- \u6839\u4e00\u5b9a\u662f\u5f53\u524d\u70b9\u7684\u7236\u4eb2\u6216\u8005\u4ed6\u81ea\u5df1\u3002\n- \u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u5404\u4e2a\u70b9\u7684 $dfn$ \u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u4e14\u6df1\u5ea6\u6d45\u7684\u70b9\u4e00\u5b9a\u5c0f\u4e8e\u6df1\u5ea6\u5927\u7684\u70b9\u3002\n\n\u5229\u7528\u4e0a\u9762\u4e24\u4e2a\u6027\u8d28\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5c06\u5220\u8fb9\u64cd\u4f5c\u4e0b\u653e\u5230\u70b9\uff0c\u6807\u8bb0\u6df1\u5ea6\u8f83\u6df1\u7684\u90a3\u4e2a\u70b9\u3002\u67e5\u8be2\u65f6\uff0c\u65ad\u70b9\u4e00\u5b9a\u4e0e\u5f53\u524d\u4e0a\u8df3\u7684\u70b9\u5728\u540c\u4e00\u6761\u94fe\u4e0a\uff0c\u56e0\u6b64\u67e5\u8be2\u4e0b\u6807\u6700\u5927\u7684\u90a3\u4e2a\u5373\u53ef\u3002\uff08\u5373\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u6700\u5927\u503c\u3002\uff09\n\n\u9664\u4e86\u4e0a\u9762\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5269\u4e0b\u7684\u4e0a\u8df3\u64cd\u4f5c\u76f4\u63a5\u4ee5\u6811\u94fe\u5256\u5206\u7684\u533a\u95f4\u4fee\u6539\u66ff\u4ee3\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100010\n#define ll long long\nconst int INF = 1e9; \n\ntemplate <class T>\ninline void read(T& a){\n\tT x = 0, s = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)){ if(c == '-') s = -1; c = getchar(); }\n\twhile(isdigit(c)){ x = x * 10 + (c ^ '0'); c = getchar(); }\n\ta = x * s;\n\treturn ;\n}\n\nstruct node{\n  int u, v, next;\n} t[N << 1]; \nint head[N];\n\nint bian = 0;\ninline void addedge(int u, int v){\n  t[++bian] = (node){u, v, head[u]}, head[u] = bian;\n  return ; \n}\n\nint n, m; \nint a[N]; \n\nstruct hehe{\n  int u, v; \n} h[N]; \n\nint dfn[N], id = 0, rev[N];\nint son[N], deth[N], top[N], siz[N], fa[N]; \nint w[N]; \n\nvoid dfs1(int u, int father){\n  fa[u] = father; \n  siz[u] = 1;\n  w[u] = a[u];  \n  deth[u] = deth[father] + 1; \n  int maxn = -INF; \n  for(int i = head[u]; i; i = t[i].next){\n    int v = t[i].v; \n    if(v != father){\n      dfs1(v, u); \n      siz[u] += siz[v]; \n      w[u] += w[v]; \n      if(siz[v] > maxn){\n        son[u] = v; \n        maxn = siz[v]; \n      }\n    }\n  }\n  return ; \n}\n\nvoid dfs2(int u, int tp){\n  top[u] = tp; \n  dfn[u] = ++id; rev[id] = u; \n  if(!son[u]) return ; \n  dfs2(son[u], tp); \n  for(int i = head[u]; i; i = t[i].next){\n    int v = t[i].v; \n    if(v != fa[u] && v != son[u])\n      dfs2(v, v); \n  }\n  return ; \n}\n\nstruct Segment_tree{\n  struct node{\n    int w; \n    bool del;  // \u8fd9\u4e2a\u70b9\u4e0a\u9762\u7684\u90a3\u6761\u8fb9\u662f\u5426\u88ab\u5220\u9664\n    int id;  // \u88ab\u5220\u9664\u7684\u6700\u9760\u53f3\u7684\u90a3\u4e2a\u70b9\n    int add; \n  } t[N << 2]; \n\n  #define lson (o<<1)\n  #define rson (o<<1|1)\n\n  inline void pushup(int o){\n    t[o].w = t[lson].w + t[rson].w;\n    t[o].del = t[lson].del | t[rson].del; \n    t[o].id = max(t[lson].id, t[rson].id); \n    return ; \n  }\n\n  inline void pushdown(int o, int l, int r){\n    int mid = l + r >> 1;\n    t[lson].add += t[o].add;\n    t[rson].add += t[o].add; \n\n    t[lson].w += t[o].add * (mid - l + 1); \n    t[rson].w += t[o].add * (r - mid);\n\n    t[o].add = 0; \n    return ; \n  }\n\n  void build(int o, int l, int r){\n    t[o].del = 0; \n    t[o].id = -1; \n    if(l == r){\n      t[o].w = w[rev[l]]; \n      return ; \n    }\n    int mid = l + r >> 1;\n    build(lson, l, mid);\n    build(rson, mid + 1, r);\n    pushup(o);\n    return ; \n  }\n\n  int query_sum(int o, int l, int r, int in, int end){\n    if(l > end || r < in) return 0; \n    if(l >= in && r <= end) return t[o].w; \n    int mid = l + r >> 1;\n    pushdown(o, l, r); \n    return query_sum(lson, l, mid, in, end) + query_sum(rson, mid + 1, r, in, end); \n  }\n\n  void update2(int o, int l, int r, int x){  // \u8868\u793a\u8981\u628a\u67d0\u4e2a\u70b9\u4e0a\u9762\u7684\u8fb9\u5220\u53bb\n    if(l > x || r < x) return ; \n    if(l == r && l == x){\n      t[o].del = 1; \n      t[o].id = l; \n      return ; \n    }\n    int mid = l + r >> 1;\n    pushdown(o, l, r); \n    update2(lson, l, mid, x); \n    update2(rson, mid + 1, r, x); \n    pushup(o);\n    return ; \n  }\n\n  int query_id(int o, int l, int r, int in, int end){  // \u6700\u9760\u53f3\u7684\u88ab\u5220\u9664\u7684\u70b9\u7684 id\n    if(l > end || r < in) return -INF;\n    if(l >= in && r <= end) return t[o].id; \n    int mid = l + r >> 1;\n    pushdown(o, l, r); \n    return max(query_id(lson, l, mid, in, end), query_id(rson, mid + 1, r, in, end)); \n  }\n\n  void update3(int o, int l, int r, int in, int end, int k){  // \u533a\u95f4\u52a0\u6cd5\n    if(l > end || r < in) return ; \n    if(l >= in && r <= end){\n      t[o].add += k; \n      t[o].w += (r - l + 1) * k; \n      return ; \n    }\n    pushdown(o, l, r); \n    int mid = l + r >> 1; \n    update3(lson, l, mid, in, end, k); update3(rson, mid + 1, r, in, end, k);\n    pushup(o);\n    return ; \n  }\n\n} tree; \n\nint get_id(int x){   // \u627e\u65ad\u70b9\uff0c\u8fd4\u56de\u539f\u59cb\u7f16\u53f7\n  while(top[x]){\n    int num = tree.query_id(1, 1, n, dfn[top[x]], dfn[x]); \n    if(num > 0) return rev[num]; \n    x = fa[top[x]]; \n  }\n  int num = tree.query_id(1, 1, n, dfn[top[x]], dfn[x]); \n  if(num > 0) return rev[num]; \n  return 1; \n}\n\nvoid change(int x, int y, int k){  // x, y \u8def\u5f84\u4e0a\u7684\u5168\u90e8\u52a0 k\n  while(top[x] != top[y]){\n    if(deth[x] < deth[y]) swap(x, y); \n    tree.update3(1, 1, n, dfn[top[x]], dfn[x], k); \n    x = fa[top[x]]; \n  }\n  if(deth[x] > deth[y]) swap(x, y); \n  tree.update3(1, 1, n, dfn[x], dfn[y], k); \n  return ; \n}\n\n\nsigned main(){\n  // freopen(\"hh.txt\", \"r\", stdin); \n  read(n), read(m);\n  for(int i = 1; i <= n; i++) read(a[i]); \n  for(int i = 1; i < n; i++){\n    int x, y;\n    read(x), read(y);\n    addedge(x, y); \n    addedge(y, x); \n    h[i].u = x, h[i].v = y; \n  }\n\n  dfs1(1, 0);\n  dfs2(1, 0); \n  tree.build(1, 1, n); \n\n  while(m--){\n    int opt, e, x, y; \n    read(opt); \n    if(opt == 1){\n      read(e); \n      int u = h[e].u; \n      int v = h[e].v; \n      if(deth[u] > deth[v]) swap(u, v); \n      tree.update2(1, 1, n, dfn[v]); \n      int id = get_id(u);\n      int d = tree.query_sum(1, 1, n, dfn[v], dfn[v]); \n      change(id, u, -d);  // \u8def\u5f84\u4e0a\u7684\u5168\u90e8\u51cf\u6389 w[v] \u503c\n    }\n    else if(opt == 2){\n      read(x), read(y); \n      int d = y - a[x]; \n      a[x] = y;\n      int id = get_id(x); \n      change(id, x, d);   // \u533a\u95f4\u52a0\u4e0a\u5dee\u503c\n    }\n    else{\n      read(x);\n      int id = get_id(x); \n      cout << tree.query_sum(1, 1, n, dfn[id], dfn[id]) << endl; \n    }\n  }\n\n  return 0;\n}\n```\n\n",
        "postTime": 1668058399,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P8827 [\u4f20\u667a\u676f #3 \u521d\u8d5b] \u68ee\u6797"
    },
    {
        "content": "### \u9898\u76ee\u601d\u8def\uff1a\n\n\u770b\u5230\u52a0\u8fb9\u3001\u51cf\u8fb9\u7684\u64cd\u4f5c\uff0c\u5411\u5e76\u67e5\u96c6\u4e0a\u9760\u62e2\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u53ea\u9650\u4e8e\u5220\u8fb9\uff0c\u5e76\u4e14\u4f34\u968f\u7740\u6743\u503c\u6539\u53d8\u3002\n\n\u663e\u7136\uff0c\u5220\u8fb9\u64cd\u4f5c\u662f\u4e0d\u597d\u7ef4\u62a4\u7075\u529b\u503c\u7684\u3002\n\n\u4f46\u662f\uff0c\u52a0\u8fb9\u64cd\u4f5c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684\u7075\u529b\u503c\u7684\u6539\u53d8\uff0c\u662f\u975e\u5e38\u597d\u7ef4\u62a4\u7684\u3002\n\n\u5047\u8bbe\u53ea\u6709\u52a0\u8fb9\u64cd\u4f5c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$ \u7684\u7075\u529b\u503c\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5c31\u6709\u70b9 $x$ \u7684\u7684\u6839\uff08\u5e76\u67e5\u96c6\u5bfb\u6839\uff09\u589e\u52a0 $newval - lastval$ \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u8003\u8651\u628a\u64cd\u4f5c\u79bb\u7ebf\u50a8\u5b58\u540e\uff0c\u5012\u5e8f\u5904\u7406\uff08\u51cf\u8fb9\u6362\u4e3a\u52a0\u8fb9\uff09\u3002\n\n\u5bf9\u4e8e\u6743\u503c\u7684\u53d8\u5316\u4e5f\u5bf9\u5e94\u53d6\u53cd\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u5012\u53d9\u5904\u7406\u524d\uff0c\u5e94\u8be5\u8981\u4fdd\u5b58\u64cd\u4f5c\u5b8c\u4e4b\u540e\u56fe\u7684\u6743\u503c\u53ca\u5206\u5757\u60c5\u51b5\uff0c\u4e4b\u540e\u5728\u6b64\u56fe\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5 $n$ \u4e2a\u70b9\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\n\n### CODE\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define debug(x) cout<<#x<<\":\"<<x<<endl;\n#define d(x) printf(\"%lld\\n\",x);\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nconst ll INF= 1e17;\nconst ll maxn = 4e5+700;\nconst int mod= 1e9+7;\nconst int up = 1e9;\ntemplate<typename T>inline void read(T &a){char c=getchar();T x=0,f=1;while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\nwhile(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}a=f*x;}\nll n,m,p;\nint pre[maxn];\nll num[maxn],val[maxn];\npair<int,int>e[maxn];\nvector<int>v[maxn];\nint vis[maxn];\nint Find(int x){\n    return pre[x]==x?x:pre[x] = Find(pre[x]);\n}\nstruct node{\n    int op,x,y;\n}q[maxn];\nll res[maxn];\nint main(){\n    read(n);read(m);\n    for(int i=1;i<=n;i++){\n        read(num[i]);\n        val[i] = num[i];\n        pre[i] = i;\n        v[i].push_back(num[i]);\n    }\n    for(int i=1;i<=n-1;i++){\n        int x,y;read(x);read(y);\n        e[i] = {x,y};\n    }\n    for(int i=1;i<=m;i++){\n        read(q[i].op);\n        if(q[i].op == 1){\n            read(q[i].x);\n            vis[q[i].x] = 1;\n        }\n        else if(q[i].op == 2){\n            read(q[i].x);\n            read(q[i].y);\n            v[q[i].x].push_back(q[i].y);\n        }else read(q[i].x);\n    }\n    for(int i=1;i<=n;i++)\n        if(v[i].size())\n            val[i] = num[i] = v[i].back();\n    for(int i=1;i<=n-1;i++){\n        if(vis[i]) continue;\n        int dx = Find(e[i].first),dy = Find(e[i].second);\n        if(dx != dy){\n            pre[dx] = dy;\n            val[dy] += val[dx];\n        }\n    }\n    for(int i=m;i>=1;i--){\n        if(q[i].op == 1){\n            int dx = Find(e[q[i].x].first),dy = Find(e[q[i].x].second);\n            if(dx != dy){\n                pre[dx] = dy;\n                val[dy] += val[dx];\n            }\n        }else if(q[i].op == 2){\n            v[q[i].x].pop_back();\n            int dx = Find(q[i].x);\n            val[dx] += v[q[i].x].back() - num[q[i].x];\n            num[q[i].x] = v[q[i].x].back();\n        }\n        else res[i] = val[Find(q[i].x)];\n    }\n    for(int i=1;i<=m;i++){\n        if(res[i])\n            printf(\"%lld\\n\",res[i]);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1682909734,
        "uid": 925577,
        "name": "ULSG_XBaiC",
        "ccfLevel": 0,
        "title": "P8827 [\u4f20\u667a\u676f #3 \u521d\u8d5b] \u68ee\u6797 \u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u53ea\u6709\u5220\u8fb9\u64cd\u4f5c\uff0c\u800c\u5220\u8fb9\u4e0d\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u5bb9\u6613\u60f3\u5230\u53ef\u4ee5\u5c06\u6570\u636e\u79bb\u7ebf\u4e0b\u6765\uff0c\u5220\u8fb9\u53d8\u4e3a\u52a0\u8fb9\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e86\u3002\u56e0\u4e3a\u6709\u70b9\u6743\uff0c\u6240\u4ee5\u4f7f\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u3002\n\n\u7528 $dis_i$ \u8868\u793a\u70b9 $i$ \u6240\u5728\u6811\u7684\u6743\u503c\u548c\uff0c$fa_i$ \u8868\u793a\u70b9 $i$ \u7684\u7956\u5148\u3002\n\n\u5408\u5e76\u64cd\u4f5c\uff1a\n\n```\nvoid merge(int x,int y){\n\tint X=find(x),Y=find(y);//\u627e\u7956\u5148\n\tif(X!=Y){\n\t\tfa[X]=Y;dis[Y]+=dis[X];\n\t}\n}\n```\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u70b9\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u8be5\u70b9\u6240\u5728\u6811\u6743\u503c\u548c\u9700\u8981\u52a0\u4e0a\u8fd9\u6b21\u64cd\u4f5c\u524d\u8be5\u70b9\u7684\u6743\u503c\uff0c\u5e76\u51cf\u53bb\u5f53\u524d\u8be5\u70b9\u7684\u6743\u503c\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $3$\uff0c\u76f4\u63a5\u8bb0\u5f55\u7b54\u6848\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=1e5+5;\nstruct data{\n\tint u,v;\n}e[N];\nstruct D{\n\tint op,u,val;\n}d[N];\nint n,m,val[N],dis[N],ans[N],cnt,fa[N],lst[N],now[N];\nbool flag_edge[N];\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint find(int x){\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\n}\nvoid merge(int x,int y){\n\tint X=find(x),Y=find(y);\n\tif(X!=Y){\n\t\tfa[X]=Y;dis[Y]+=dis[X];\n\t}\n}\nsigned main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)val[i]=read(),dis[i]=val[i],fa[i]=i;\n\tfor(int i=1;i<n;i++){\n\t\te[i].u=read();e[i].v=read();\n\t}\n\tfor(int i=1;i<=m;i++){//\u79bb\u7ebf\n\t\td[i].op=read();\n\t\td[i].u=read();\n\t\tif(d[i].op==1)flag_edge[d[i].u]=1;\n\t\tif(d[i].op==2){\n\t\t\td[i].val=read();lst[i]=dis[d[i].u];now[i]=d[i].val;dis[d[i].u]=d[i].val;\n\t\t}\n\t}\n\tfor(int i=1;i<n;i++){//\u521d\u59cb\u52a0\u8fb9\n\t\tif(!flag_edge[i]){\n\t\t\tmerge(e[i].u,e[i].v);\n\t\t}\n\t}\n\tfor(int i=m;i>=1;i--){//\u5012\u7740\u5904\u7406\n\t\tif(d[i].op==1){\n\t\t\tmerge(e[d[i].u].u,e[d[i].u].v);\n\t\t}\n\t\telse if(d[i].op==2){\n\t\t\tint X=find(d[i].u);\n\t\t\tdis[X]+=lst[i]-now[i];\n\t\t}\n\t\telse{\n\t\t\tint X=find(d[i].u);\n\t\t\tans[++cnt]=dis[X];\n\t\t}\n\t}\n\tfor(int i=cnt;i>=1;i--)printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1679048471,
        "uid": 356925,
        "name": "\u5feb\u6597\u6e38\u9e7f",
        "ccfLevel": 4,
        "title": "P8827\u9898\u89e3"
    },
    {
        "content": "# \u9898\u610f\n\u6709\u4e00\u9897\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743 $v$\u3002\u73b0\u5728\u8981\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c $m$ \u6b21\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\u4e4b\u4e00\uff1a\n\n- \u5220\u9664\u4e00\u6761\u8fb9\u3002\n\n- \u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u3002\n\n- \u67e5\u8be2\u4e00\u4e2a\u70b9 $u$ \u6240\u5728\u7684\u6811\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n# \u89e3\u9898\u601d\u8def\n\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u8981\u6c42\u5728\u7ebf\uff0c\u5bb9\u6613\u60f3\u5230\u79bb\u7ebf\u5012\u5e8f\u64cd\u4f5c\u7684\u60f3\u6cd5\u3002\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u64cd\u4f5c\u8fdb\u884c\u5b8c\u4e4b\u540e\u7684\u60c5\u666f\u6a21\u62df\u51fa\u6765\uff0c\u7531\u4e8e\u662f\u5012\u5e8f\u64cd\u4f5c\uff0c\u53ea\u6709\u52a0\u8fb9\u6ca1\u6709\u5220\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u4e09\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5c06\u70b9\u7684\u4e24\u4e2a\u7aef\u70b9\u6240\u5728\u7684\u6811\u5408\u5e76\u3002\n\n- \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5c06\u8fd9\u68f5\u6811\u7684\u70b9\u6743\u4e4b\u548c\u52a0\u4e0a\u539f\u6765\u7684\u70b9\u6743\u518d\u51cf\u53bb\u73b0\u5728\u7684\u70b9\u6743\u3002\n\n- \u5bf9\u4e8e\u7b2c\u4e09\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u6811\u7684\u70b9\u6743\u4e4b\u548c\u538b\u5165\u7b54\u6848\u6570\u7ec4\u5373\u53ef\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint opt, e, val, u;\n} q[100001];\nstruct _\n{\n\tint x, y;\n} e[100001];\nint n, m, sum[100001], fa[100001], ans[100001], tot;\nstack<int> change[100001];\nbool del[100001];\nint find(int x)\n{\n\tif (x == fa[x]) return x;\n\treturn fa[x] = find(fa[x]);\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i ++) scanf(\"%d\", &sum[i]), change[i].push(sum[i]), fa[i] = i;\n\tfor (int i = 1; i < n; i ++) scanf(\"%d%d\", &e[i].x, &e[i].y);\n\tfor (int i = m; i >= 1; i --)\n\t{\n\t\tscanf(\"%d\", &q[i].opt);\n\t\tif (q[i].opt == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &q[i].e);\n\t\t\tdel[q[i].e] = true;\n\t\t}\n\t\telse if (q[i].opt == 2) \n\t\t{\n\t\t\tscanf(\"%d%d\", &q[i].u, &q[i].val);\n\t\t\tsum[q[i].u] = q[i].val;\n\t\t\tchange[q[i].u].push(q[i].val);\n\t\t}\n\t\telse scanf(\"%d\", &q[i].u);\n\t}\n\tfor (int i = 1; i < n; i ++)\n\t\tif (!del[i])\n\t\t{\n\t\t\tint fx = find(e[i].x), fy = find(e[i].y);\n\t\t\tfa[fy] = fx;\n\t\t\tsum[fx] += sum[fy];\n\t\t}\n\tfor (int i = 1; i <= m; i ++)\n\t{\n\t\tif (q[i].opt == 1)\n\t\t{\n\t\t\tint fx = find(e[q[i].e].x), fy = find(e[q[i].e].y);\n\t\t\tfa[fy] = fx;\n\t\t\tsum[fx] += sum[fy];\n\t\t}\n\t\telse if (q[i].opt == 2)\n\t\t{\n\t\t\tint fx = find(q[i].u), tmp = change[q[i].u].top();\n\t\t\tchange[q[i].u].pop();\n\t\t\tsum[fx] += change[q[i].u].top() - tmp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint fx = find(q[i].u);\n\t\t\tans[++ tot] = sum[fx];\n\t\t}\n\t}\n\tfor (int i = tot; i >= 1; i --) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1674104277,
        "uid": 508927,
        "name": "Tong_Yuxin",
        "ccfLevel": 5,
        "title": "P8827 [\u4f20\u667a\u676f #3 \u521d\u8d5b] \u68ee\u6797 \u9898\u89e3"
    },
    {
        "content": "\u5f88\u5957\u8def\u7684\u4e00\u9053\u9898\uff0c\u662f\u9053\u7b80\u5355\u9898\u3002\n\n\u4e00\u770b\u5220\u8fb9\u64cd\u4f5c\u5c31\u80fd\u60f3\u5230\u79bb\u7ebf\u4e0b\u6765\u5012\u5e8f\u5e76\u67e5\u96c6\uff0c\u8fd9\u9898\u5c31\u662f\u8fd9\u6837\u3002\n\n- $1$ \u64cd\u4f5c\uff1a\u76f4\u63a5\u5012\u5e8f\u5408\u5e76\u5373\u53ef\u3002\n\n- $2$ \u64cd\u4f5c\uff1a\u5f00\u4e00\u4e2a vector \u8bb0\u5f55\u6bcf\u4e2a\u70b9\u503c\u7684\u53d8\u5316\uff0c\u7136\u540e\u76f4\u63a5\u4ece vector \u91cc\u66f4\u65b0\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u589e\u91cf\u5373\u53ef\u3002\n\n- $3$ \u64cd\u4f5c\uff1a\u7b80\u5355\u67e5\u8be2\u3002\n\n\u7801\uff1a\n\n```cpp\n/*\nKnowledge : Rubbish Algorithm\nWork by :Gym_nastics\nTime : O(AC)\n*/\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\nconst int Mod=1e9+7;\nconst int N=1e6+6;\n\nint read() {\n    int x=0,f=0;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) f|=(ch=='-');\n    for(;isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+(ch&15);\n    return f?-x:x;\n}\n\nvoid print(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10+48);\n}\n\nvector<int>v[N];\nint n,m,a[N],x[N],y[N];\n\nint fa[N];\nbool vis[N];\nint op[N],l[N],sz[N];\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\nvoid Merge(int x,int y){\n    int uf=find(x),vf=find(y);\n    if(uf==vf) return;\n    fa[vf]=uf;sz[uf]+=sz[vf];sz[vf]=0;\n}\n\nsigned main() {\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<n;i++) x[i]=read(),y[i]=read();\n    for(int i=1;i<=m;i++){\n        op[i]=read(),l[i]=read();\n        if(op[i]==1) vis[l[i]]=1;\n        else if(op[i]==2){\n            int val=read();\n            v[l[i]].push_back(a[l[i]]);\n            a[l[i]]=val;}}\n    for(int i=1;i<n;i++) if(!vis[i]) Merge(x[i],y[i]);\n    int cnt=0;\n    for(int i=1;i<=n;i++) fa[i]=i,sz[i]=a[i];\n    vector<int>ans(m);\n    for(int i=m;i>=1;i--){\n        if(op[i]==1) Merge(x[l[i]],y[l[i]]);\n        else if(op[i]==2){\n            int Val=v[l[i]][v[l[i]].size()-1];v[l[i]].pop_back();\n            sz[find(l[i])]+=Val-a[l[i]],a[l[i]]=Val;\n        }else ans[++cnt]=sz[find(l[i])];\n    }\n    for(int i=cnt;i>=1;i--) cout<<ans[i]<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1668169491,
        "uid": 397317,
        "name": "Gym_nastics",
        "ccfLevel": 0,
        "title": "P8827 [\u4f20\u667a\u676f #3 \u521d\u8d5b] \u68ee\u6797"
    }
]