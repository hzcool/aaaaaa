[
    {
        "content": "\u7834\u4e8b\u6c34\uff1aIOI2020 \u7ed3\u675f\u540e\u5c31\u60f3\u8981\u5199\u8fd9\u9898\uff0c\u4f46\u662f spj \u5f53\u65f6\u662f\u9505\u7684\uff0c\u4fee\u597d\u540e\u6211\u5c31~~\u79c9\u627f\u9e3d\u5b50\u7684\u826f\u597d\u54c1\u5fb7~~\u4e00\u76f4\u5495\u5230\u4e86\u73b0\u5728\u3002\n\n\u56e0\u4e3a CSP2020 \u8003\u7684\u6709\u70b9\u81ea\u95ed\uff0c\u6240\u4ee5\u6765\u505a\u4e00\u9053 IOI \u771f\u9898\u653e\u677e\u4e00\u4e0b\u3002\n\n---\n\n\u9898\u610f\u7b80\u8ff0\uff1a\u6784\u9020\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8def\u5f84\u4e2a\u6570\u4e0e\u9898\u76ee\u7ed9\u51fa\u7684\u76f8\u540c\u3002\n\n---\n\n\u601d\u8def\uff1a\n\n**\u6ce8\uff1a\u56e0\u4e3a\u6d1b\u8c37\u4e0e\u5176\u4ed6 oj\uff08\u5305\u62ec IOI \u5b98\u65b9\uff09\u7684\u8bc4\u6d4b\u65b9\u5f0f\u4e0d\u540c\uff0c\u672c\u9898\u89e3\u4ee3\u7801\u4ee5\u6d1b\u8c37\u4e3a\u51c6\uff0c\u5728\u5176\u4ed6 oj \u53ef\u80fd\u65e0\u6cd5\u76f4\u63a5\u53d6\u7684 AC\uff0c\u8bf7\u989d\u5916\u6ce8\u610f\u3002**\n\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\u4e2d\u7684\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u62e5\u6709**\u591a\u4e8e**\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u80af\u5b9a\u4e0d\u7b26\u5408\u9898\u610f\u3002\u4e3a\u5565\u5462\uff1f\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ce80n3m9.png)\n\n\u4ee5\u8fd9\u5f20\u56fe\u4e0a $4\\rightarrow 6$ \u7684\u8def\u5f84\u4e3a\u4f8b\uff0c\u5171\u6709\u5982\u4e0b\u60c5\u51b5\uff1a\n\n1. $4\\rightarrow 0\\rightarrow 1\\rightarrow 6$\n1. $4\\rightarrow 0\\rightarrow 1\\rightarrow 5\\rightarrow 6$\n1. $4\\rightarrow 3\\rightarrow 2\\rightarrow 1\\rightarrow 6$\n1. $4\\rightarrow 3\\rightarrow 2\\rightarrow 1\\rightarrow 5\\rightarrow 6$\n\n\u56e0\u4e3a\u8de8\u8fc7\u4e86\u4e24\u4e2a\u73af\uff0c\u8def\u5f84\u6761\u6570\u663e\u7136\u591a\u4e8e\u4e09\u4e2a\u3002\n\n\u6211\u4eec\u5f97\u5230\u4e86\u6784\u9020\u7684\u521d\u6b65\u65b9\u5411\uff1a**\u539f\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u7531\u6811\u6216\u57fa\u73af\u6811\u7ec4\u6210\u7684\u68ee\u6797**\u3002\n\n\u63a5\u7740\u627e\u89c4\u5f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tjnvm6dg.png)\n\n\u5bf9\u4e8e\u8fd9\u68f5\u57fa\u73af\u6811\uff0c\u901a\u8fc7\u624b\u63a8\uff0c\u53d1\u73b0\uff1a\n\n1. \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9\uff08\u6bd4\u5982 $2,4$\uff09\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8def\u5f84\u5982\u679c\u5168\u5728\u73af\u5916\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4**\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84**\u3002\n1. \u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9\uff08\u6bd4\u5982 $6,3$\uff09\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8def\u5f84\u5982\u679c\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u4e00\u5b9a\u5728\u73af\u4e0a\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4**\u6709\u4e24\u6761\u8def\u5f84**\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u628a\u6240\u6709\u73af\u4e0a\u7684\u8fb9\u5148\u5220\u6389\uff0c\u5982\u679c\u8fd8\u5728\u8fde\u901a\u5757\u5185\uff0c\u5c31\u53ea\u6709\u4e00\u6761\u8fb9\u3002\n\n\u53ef\u4ee5\u770b\u5230\uff0c**\u5982\u679c\u9898\u76ee\u4e2d\u8981\u6c42 $u,v$ \u4e4b\u95f4\u6709\u4e09\u6761\u8def\u5f84\uff0c\u6b64\u65f6\u65e0\u89e3**\u3002\n\n\u6211\u4eec\u5148 dfs \u4e00\u904d**\u6c42\u51fa\u8fde\u901a\u5757**\uff0c\u5982\u679c\u8fde\u901a\u5757\u5185\u5b58\u5728\u8981\u6c42\u6709\u4e09\u6761\u8def\u5f84\u7684\u8fb9\uff0c\u5c31\u76f4\u63a5\u5224\u6389\u3002\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8def\u5f84\u8981\u6c42\u4e3a\u96f6\uff0c\u4e5f\u53ef\u4ee5\u5224\u6389\u3002\u5269\u4e0b\u7684\u60c5\u51b5\u5c31\u5206\u4e3a\u4e24\u79cd\uff1a\u6811\u548c\u57fa\u73af\u6811\u3002\n\n\u5bf9\u4e8e\u8fde\u901a\u5757\u5185\u53ea\u8981\u6c42\u4e24\u4e24\u4e4b\u95f4\u6709\u4e00\u6761\u8def\u5f84\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u70b9\u548c\u8fde\u901a\u5757\u5185\u5176\u4ed6\u6240\u6709\u70b9\u76f8\u8fde\u5373\u53ef\u3002\u5bf9\u4e8e\u57fa\u73af\u6811\uff0c\u6211\u4eec\u5148\u4e0d\u8003\u8651\u8def\u5f84\u6570\u4e3a\u4e8c\u7684\u8fb9\uff0c\u5728\u5269\u4e0b\u7684\u8def\u5f84\u6570\u4e3a\u4e00\u7684\u8fb9\u91cc\u9762\u518d\u6b21 dfs \u6c42\u51fa\u73af\u5916\u7684\u8fde\u901a\u5757\uff0c\u6309\u7167\u76f8\u540c\u65b9\u5f0f\u8fde\u63a5\u540e\uff0c\u6bcf\u4e2a\u73af\u5916\u8fde\u901a\u5757\u53d6\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e9b\u70b9\u4f9d\u6b21\u8fde\u57ce\u73af\u5373\u53ef\u3002\n\n\u81f3\u6b64\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u6b63\u89e3\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005;\n\nvoid build(vector<vector<int> > b);\n\nint n, ma, vis[N];\nvector<int> block, edge, circle; // \u5206\u522b\u4e3a\u8fde\u901a\u5757\u3001\u57fa\u73af\u6811\u4e0a\u7684\u6811\u8fb9\u548c\u57fa\u73af\u6811\u4e0a\u7684\u73af \nvector<vector<int> > graph, res;\nvoid add(int u, int v) {res[u][v] = res[v][u] = 1;}\nvoid dfs(int u) {\n//\tprintf(\"DFS %d\\n\", u);\n\tvis[u] = 1;\n\tblock.push_back(u);\n\tfor(int v=0;v<n;v++) {\n\t\tma = max(ma, graph[u][v]);\n\t\tif(!vis[v] && graph[u][v]) dfs(v);\n\t}\n}\nvoid dfsCircle(int u) {\n\tvis[u] = 2;\n\tedge.push_back(u);\n\tfor(int v=0;v<n;v++) if(vis[v] == 1 && graph[u][v] == 1) dfsCircle(v);\n}\nint construct(vector<vector<int> > p) {\n//\tputs(\"CONSTRUCT\");\n\tgraph = p; n = p.size(); res.resize(n);\n\tfor(int i=0;i<n;i++) res[i].resize(n);\n\tfor(int i=0;i<n;i++) {\n\t\tif(vis[i]) continue;\n\t\tma = 1; block.clear(); dfs(i);\n//\t\tprintf(\"ROUND %d DFS ENDED WITH MAX=%d\\n\", i, ma);\n\t\tif(ma == 3) return 0;\n\t\tint sz = block.size();\n\t\tfor(int j=1;j<sz;j++) {\n\t\t\tfor(int k=0;k<j;k++) {\n\t\t\t\tif(!graph[block[j]][block[k]]) return 0;\n\t\t\t}\n\t\t}\n\t\tif(ma == 1) for(int j=1;j<sz;j++) add(block[0], block[j]);\n\t\telse {\n\t\t\tcircle.clear();\n\t\t\tfor(int _=0,j=block[_];_<sz;_++,j=block[_]) {\n\t\t\t\tif(vis[j] != 1) continue;\n\t\t\t\tedge.clear();\n\t\t\t\tdfsCircle(j);\n//\t\t\t\tputs(\"DFSCIRCLE ENDED\");\n\t\t\t\tint sz2 = edge.size();\n\t\t\t\tfor(int k=1;k<sz2;k++) {\n\t\t\t\t\tfor(int l=0;l<k;l++) {\n\t\t\t\t\t\tif(graph[edge[k]][edge[l]] != 1) return 0;\n\t\t\t\t\t}\n\t\t\t\t\tadd(edge[0], edge[k]);\n\t\t\t\t}\n\t\t\t\tcircle.push_back(edge[0]);\n//\t\t\t\tprintf(\"CIRCLE ADDED %d\\n\", edge[0]);\n\t\t\t}\n\t\t\tif(circle.size() <= 2) return 0;\n\t\t\tint sz3 = circle.size();\n\t\t\tfor(int j=0;j<sz3;j++) add(circle[j], circle[(j+1)%sz3]);\n\t\t}\n\t}\n\tbuild(res);\n\treturn 1;\n}/*\n\nvoid build(vector<vector<int> > b) {\n\tputs(\"BUILD\");\n\tfor(int i=0;i<b.size();i++) {\n\t\tfor(int j=0;j<b[i].size();j++) printf(\"%d \", b[i][j]);\n\t\tputs(\"\");\n\t}\n}\nint main() {\n\tvector<vector<int> > a = vector<vector<int> >\n\t\t\t\t\t\t\t({vector<int>({1, 1, 2, 2}), vector<int>({1, 1, 2, 2})\n\t\t\t\t\t\t\t, vector<int>({2, 2, 1, 2}), vector<int>({2, 2, 2, 1})});\n\tbuild(a);\n\tprintf(\"CONSTRUCT ENDED WITH RETURN VALUE %d\\n\", construct(a));\n\treturn 0;\n}*/\n```",
        "postTime": 1602414373,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6830 \u3010[IOI2020]\u8fde\u63a5\u64ce\u5929\u6811\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u56fe\uff0c\u7ed9\u5b9a\u4e86\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u4e0d\u540c\u7b80\u5355\u8def\u6570\u91cf $a_{ij}$\uff0c\u7b80\u5355\u8def\u5b9a\u4e49\u4e3a\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\u7684\u8def\u5f84\uff0c\u4fdd\u8bc1$0\\le a_{ij}\\le 3$\u3002\u6c42\u6784\u9020\u6ee1\u8db3\u8981\u6c42\u7684\u56fe\u6216\u5224\u65ad\u65e0\u89e3\u3002\n\n\u753b\u51e0\u5f20\u56fe\u89c2\u5bdf\u4e00\u4e0b\u7b80\u5355\u8def\u7684\u6027\u8d28\uff0c\u53d1\u73b0\u5408\u6cd5\u7684\u56fe\u4e00\u5b9a\u6ee1\u8db3**\u4efb\u610f\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u73af**\u3002\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u6709\u4e0d\u6b62\u4e00\u4e2a\u73af\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u5bf9\u70b9\u5b58\u5728\u81f3\u5c11\u56db\u6761\u4e0d\u540c\u7b80\u5355\u8def\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4uoyc4ux.png)\n\n\u90a3\u4e48\u4e00\u4e2a\u8fde\u901a\u5757\u4e00\u5b9a\u662f\u6811\u6216\u8005\u57fa\u73af\u6811\u3002dfs \u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\uff0c\u5148\u5224\u65ad\u4e00\u4e0b\u5982\u679c\u8fde\u901a\u5757\u91cc\u51fa\u73b0\u4e86\u8def\u5f84\u6570\u4e3a $0$  \u7684\u70b9\u5bf9\u5c31\u662f\u65e0\u89e3\u3002\u7136\u540e\u6811\u975e\u5e38\u597d\u5904\u7406\uff0c\u5982\u679c\u8fde\u901a\u5757\u5185\u8def\u5f84\u6570\u5168\u662f $1$ \u90a3\u5c31\u662f\u6811\uff0c\u968f\u4fbf\u6784\u9020\u4e00\u4e2a\u5c31\u884c\u3002\u57fa\u73af\u6811\u590d\u6742\u4e00\u4e9b\uff0c\u6211\u4eec\u753b\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/csdhwq0n.png)\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u7ea2\u5708\u91cc\uff0c\u90a3\u5b83\u4eec\u53ea\u95f4\u6709 $1$ \u6761\u7b80\u5355\u8def\uff0c\u5426\u5219\u6709 $2$ \u6761\u3002$3$ \u662f\u7edd\u5bf9\u4e0d\u4f1a\u51fa\u73b0\u7684\uff0c\u51fa\u73b0\u4e86\u76f4\u63a5\u65e0\u89e3\u3002\u7136\u540e dfs \u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u7531 $a_{ij}=1$ \u76f8\u8fde\u7684\u5b50\u8fde\u901a\u5757\uff0c\u5b83\u4eec\u5e94\u8be5\u5728\u4e00\u4e2a\u7ea2\u5708\u91cc\u3002\u5982\u679c\u4e00\u4e2a\u7ea2\u5708\u91cc\u6df7\u8fdb\u4e86\u8def\u5f84\u6570\u4e3a $2$ \u7684\u70b9\u5bf9\u90a3\u65e0\u89e3\uff0c\u5426\u5219\u628a\u5b83\u4eec\u8fde\u6210\u4e00\u68f5\u6811\u3002\u6700\u540e\u5728\u6bcf\u4e2a\u7ea2\u5708\u91cc\u627e\u4e00\u4e2a\u4ee3\u8868\u70b9\uff0c\u628a\u8fd9\u4e9b\u4ee3\u8868\u70b9\u4e32\u8d77\u6765\u6210\u4e3a\u4e00\u4e2a\u73af\u5373\u53ef\u3002\u5982\u679c\u4ee3\u8868\u70b9\u4e0d\u8db3\u4e09\u4e2a\u5c31\u6ca1\u6cd5\u4e32\u6210\u73af\uff0c\u8fd8\u662f\u65e0\u89e3\u3002\n\n```cpp\n#include \"supertrees.h\"\n#define N 1000\nstd::vector<std::vector<int>> *G, ret;\nvoid addedge(int x, int y) {\n\tret[x][y] = ret[y][x] = 1;\n}\nint n, mx; char vis[N];\nstd::vector<int> cnt, all, sm;\nvoid dfs(int x) {\n\tvis[x] = 1;\n\tcnt.push_back(x);\n\tfor (int i = 0; i < n; i++) {\n\t\tint d = (*G)[x][i];\n\t\tmx = std::max(d, mx);\n\t\tif (!vis[i] && d) dfs(i);\n\t}\n}\nvoid dfsS(int x) {\n\tvis[x] = 2;\n\tsm.push_back(x);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (vis[i] == 1 && (*G)[x][i] == 1) dfsS(i);\n\t}\n}\nint construct(std::vector<std::vector<int>> p) {\n\tG = &p; n = p.size();\n\tret.resize(n);\n\tfor (int i = 0; i < n; i++)\n\t\tret[i].resize(n);\n\tfor (int i = 0; i < n; i++) if (!vis[i]) {\n\t\tmx = 1;\n\t\tcnt.clear();\n\t\tdfs(i);\n\t\tif (mx == 3) return 0;\n\t\tfor (int i = 1; i < cnt.size(); i++)\n\t\t\tfor (int j = 0; j < i; j++)\n\t\t\t\tif (p[cnt[i]][cnt[j]] == 0)\n\t\t\t\t\treturn 0;\n\t\tif (mx == 1) {\n\t\t\tfor (int i = 1; i < cnt.size(); i++)\n\t\t\t\taddedge(cnt[0], cnt[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tall.clear();\n\t\tfor (int j : cnt) if (vis[j] == 1) {\n\t\t\tsm.clear();\n\t\t\tdfsS(j);\n\t\t\tfor (int i = 1; i < sm.size(); i++) {\n\t\t\t\tfor (int j = 0; j < i; j++)\n\t\t\t\t\tif (p[sm[i]][sm[j]] != 1)\n\t\t\t\t\t\treturn 0;\n\t\t\t\taddedge(sm[0], sm[i]);\n\t\t\t}\n\t\t\tall.push_back(sm[0]);\n\t\t}\n\t\tif (all.size() <= 2) return 0;\n\t\tfor (int j = 1; j < all.size(); j++)\n\t\t\taddedge(all[j-1], all[j]);\n\t\taddedge(all[0], all.back());\n\t}\n\tbuild(ret);\n\treturn 1;\n}\n```",
        "postTime": 1600438765,
        "uid": 90893,
        "name": "\u93e1\u97f3\u30ea\u30f3",
        "ccfLevel": 10,
        "title": "IOI2020\u8fde\u63a5\u64ce\u5929\u6811\u9898\u89e3"
    },
    {
        "content": "\u5b89\u5229\uff1a[IOI2020\u9898\u89e3-\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.com.cn/blog/s-r-f/ioi2020-ti-xie) [IOI2020\u9898\u89e3-cnblogs](https://www.cnblogs.com/s-r-f/p/13697373.html)\n\n---\n\n[\u9898\u76ee\u94fe\u63a5-LOJ](https://loj.ac/problem/3365) [\u9898\u76ee\u94fe\u63a5-\u6d1b\u8c37](https://www.luogu.com.cn/problem/P6830)\n\n\u9996\u5148\uff0c\u5982\u679c\u5b58\u5728 $p_{i,j}=0$ ,\u90a3\u4e48\u5c31\u5206\u6210\u4e86\u591a\u4e2a\u8054\u901a\u5757\uff0c\u8fd9\u4e9b\u8054\u901a\u5757\u5206\u5f00\u505a\u5373\u53ef\u3002\n\n\u7531\u4e8e $p_{i,j} \\leq 3 $ \u6240\u4ee5\u4e00\u4e2a\u8054\u901a\u5757\u5f53\u4e2d\u4e0d\u80fd\u51fa\u73b0\u591a\u4e8e\u4e00\u4e2a\u73af\uff0c\u5426\u5219\u5fc5\u7136\u4f1a\u6709\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709 $4$ \u6761\u8def\u5f84\u3002\n\n\u6ca1\u6709\u73af\u7684\u60c5\u51b5(\u8054\u901a\u5757\u5185 $p_{i,j}$ \u5747\u4e3a $1$ )\u5148\u5224\u6389\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8054\u901a\u5757\u6b63\u597d\u6709\u4e00\u4e2a\u73af\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u70b9 $x$ \u548c $y$ \u4e4b\u95f4\u7684\u8def\u5f84\u9700\u8981\u7ecf\u8fc7\u591a\u4e8e\u4e00\u4e2a\u73af\u4e0a\u7684\u8282\u70b9\uff0c\u90a3\u4e48 $p_{x,y}$ \u5c31\u7b49\u4e8e $2$ ,\u5426\u5219 $p_{x,y}$ \u4e3a $1$ , \u56e0\u6b64\u5982\u679c\u5b58\u5728 $p_{x,y} = 3$ \u90a3\u4e48\u4e5f\u65e0\u89e3\u3002\n\n\u628a\u6240\u6709\u7684 $p_{x,y} = 1$ \u7684 $x$ \u548c $y$ \u5408\u5e76\u5230\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff0c\u628a\u8fd9\u4e9b\u5757\u4e4b\u95f4\u8fde\u6210\u4e00\u4e2a\u73af\uff0c $check$ \u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n$\\Theta (n^2)$\n\ncode(LOJ\u4e0a\u901a\u8fc7):\n\n```cpp\n#include <bits/stdc++.h>\n#include \"supertrees.h\"\nusing namespace std;\nconst int N = 1001;\nint n,cur[N],cntc,G[N][N],ans[N][N];\nint p[N],l,fa[N];\ninline int Find(int x){ return x == fa[x] ? x : (fa[x] = Find(fa[x])); }\ninline void Merge(int x,int y){ fa[Find(x)] = Find(y); }\ninline void add_edge(int x,int y){ ans[x][y] = ans[y][x] = 1; }\ninline bool solve(int c){\n\tint i,j; bool is = 0;\n\tfor (l = 0,i = 1; i <= n; ++i) if (cur[i] == c) p[++l] = i;\n\tfor (i = 1; i <= l; ++i) for (j = 1; j <= l; ++j) if (G[p[i]][p[j]] != 1) is = 1;\n\tif (l == 1) return 1;\n\tif (l == 2){ if (G[p[1]][p[2]] > 1) return 0; add_edge(p[1],p[2]); return 1; }\n\tif (!is){ for (i = 1; i < l; ++i) add_edge(p[i],p[i+1]); return 1; }\n\tfor (i = 1; i <= l; ++i) fa[i] = i;\n\tfor (i = 1; i <= l; ++i) for (j = 1; j <= l; ++j) if (G[p[i]][p[j]] == 1) Merge(i,j);\n\tfor (i = 1; i <= l; ++i) fa[i] = Find(i);\n\tfor (i = 1; i <= l; ++i) for (j = 1; j <= l; ++j)\n\t\tif (fa[i] == fa[j] && G[p[i]][p[j]] == 2) return 0;\n\tfor (i = 1; i <= l; ++i) for (j = 1; j <= l; ++j)\n\t\tif (fa[i] != fa[j] && G[p[i]][p[j]] == 1) return 0;\n\tint x = 0,lst = 0,fir,cnt = 0;\n\tfor (i = 1; i <= l; ++i){\n\t\tx = is = 0;\n\t\tfor (j = 1; j <= l; ++j) if (fa[j] == i) is = 1;\n\t\tif (!is) continue;\n\t\t++cnt;\n\t\tfor (j = 1; j <= l; ++j) if (j != i && fa[j] == i){\n\t\t\tif (x) add_edge(p[x],p[j]); x = j;\n\t\t}\n\t\tif (x) add_edge(p[x],p[i]);\n\t\tif (lst) add_edge(p[lst],p[i]); else fir = i; lst = i;\n\t}\n\tif (cnt < 3) return 0;\n\tadd_edge(p[lst],p[fir]);\n\treturn 1;\n}\ninline void getcur(int x,int c){\n\tcur[x] = c;\n\tfor (int i = 1; i <= n; ++i) if (x != i && G[x][i] && !cur[i]) getcur(i,c);\n}\ninline int MAIN(){\n\tint i,j;\n\tfor (i = 1; i <= n; ++i) if (!cur[i]) getcur(i,++cntc);\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= n; ++j) if (cur[i] != cur[j] && G[i][j]) return 0;\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= n; ++j) if (cur[i] == cur[j] && !G[i][j]) return 0;\n\tfor (i = 1; i <= cntc; ++i) if (!solve(i)) return 0;\n\tvector<vector<int> >Ans; vector<int>ret; Ans.clear();\n\tfor (i = 1; i <= n; ++i){\n\t\tret.resize(n);\n\t\tfor (j = 0; j < n; ++j) ret[j] = ans[i][j+1],cerr << ans[i][j+1] << ' '; cerr<<'\\n';\n\t\tAns.push_back(ret);\n\t}\n\tbuild(Ans);\n\treturn 1;\n}\nint construct(vector<vector<int> > p){\n\tint i,j; n = p[0].size();\n\tfor (i = 0; i < n; ++i) for (j = 0; j < n; ++j) if (p[i][j] == 3) return 0;\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= n; ++j) G[i][j] = p[i-1][j-1];\n\treturn MAIN();\n}\n/*\nint main(){\n\tint n,i,j;\n\tcin >> n;\n\tvector<vector<int> >p; vector<int>q; p.clear(),q.resize(n);\n\tfor (i = 1; i <= n; ++i){\n\t\tfor (j = 0; j < n; ++j) cin >> q[j];\n\t\tp.push_back(q);\n\t\t\n\t}\n\tcout << construct(p) << '\\n';\n}\n*/\n```",
        "postTime": 1600514142,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6830 \u3010[IOI 2020 Day1] Connecting Supertrees\u3011"
    },
    {
        "content": "#### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n*n$ \u7684\u6570\u7ec4$p$\uff08$p_{ij}$ <= 3\uff09\uff0c\u6784\u9020\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u7b80\u5355\u56fe\u4f7f\u5f97\u4ece $i$ \u5230 $j$ \u7684\u7b80\u5355\u8def\u5f84\u6070\u597d\u6709 $p_{ij}$ \u6761\u3002\n\n#### \u9898\u89e3\n\n\u89c2\u5bdf\u53d1\u73b0 $p$ \u7684\u8303\u56f4\u975e\u5e38\u5c0f\uff0c\u6211\u4eec\u5c31\u4ece\u8fd9\u91cc\u5165\u624b\n\n\u5148\u8003\u8651 $p_{ij}$ \u4e3a $3$ \u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u60f3\u8981\u6ee1\u8db3\u6761\u4ef6\uff0c$i,j$ \u6240\u5904\u7684\u8fde\u901a\u5757\u81f3\u5c11\u6709\u4e24\u4e2a\u73af\uff0c\u81f3\u5c11\u4e00\u4e2a\u70b9\u5bf9\u4e4b\u95f4\u7684\u8def\u5f84\u6709\u56db\u6761\u6216\u4ee5\u4e0a\uff0c\u80af\u5b9a\u65e0\u89e3\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u7279\u5224\u4e00\u4e0b $p$ \u6570\u7ec4\u662f\u5426\u6709 $3$\u3002\n\n\u73b0\u5728\u6211\u4eec\u8fd8\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u81f3\u591a\u6709\u4e00\u4e2a\u73af\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u8fde\u901a\u5757\u90fd\u662f**\u6811**\u6216**\u57fa\u73af\u6811**\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u662f\u6811\uff0c\u663e\u7136\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u53ea\u6709\u4e00\u6761\u3002\n\n\u5982\u679c\u662f\u57fa\u73af\u6811\uff0c\u6211\u4eec\u5148\u628a\u73af\u53d6\u51fa\u6765\uff0c\u6bcf\u4e2a\u73af\u4e0a\u7684\u8282\u70b9\u5bf9\u5e94\u4e00\u68f5\u6811\u3002\u89c2\u5bdf\u53d1\u73b0\u4efb\u610f\u4e24\u4e2a\u5c5e\u4e8e\u4e0d\u540c\u7684\u6811\u7684\u8282\u70b9\u4e4b\u95f4\u6709\u4e24\u6761\u8def\u5f84\uff0c\u5c5e\u4e8e\u540c\u4e00\u68f5\u6811\u7684\u8282\u70b9\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\n\n\u65e2\u7136\u6811\u91cc\u9762\u7684\u8282\u70b9\u65e0\u8bba\u662f\u5426\u5728\u57fa\u73af\u6811\u4e0a\uff0c\u4e24\u4e24\u4e4b\u95f4\u90fd\u53ea\u6709\u4e00\u6761\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6811\u627e\u5230\uff0c\u5c06\u6ee1\u8db3 $p_{ij}$ \u4e3a $1$ \u7684\u8282\u70b9 $i,j$ \u653e\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u5426\u5219\u5c31\u4e0d\u653e\u3002\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u5fc5\u987b\u540c\u65f6\u5728\u4e00\u9897\u6811\u4e0a\u53c8\u5fc5\u987b\u4e0d\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u65e0\u89e3\u3002\n\n\u7136\u540e\u8003\u8651\u628a\u6811\u8fde\u6210\u57fa\u73af\u6811\u3002\u5982\u679c $p_{ij}$ \u4e3a $2$\uff0c\u5219\u5b83\u4eec\u6240\u5c5e\u7684\u6811\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u4e3a $0$ \u5219\u4e0d\u5728\u4e00\u4e2a\u73af\u4e0a\u3002\u540c\u7406\uff0c\u51fa\u73b0\u77db\u76fe\u65f6\u53ef\u4ee5\u5224\u65ad\u65e0\u89e3\u3002\n\n\u6700\u540e\u6211\u4eec\u7279\u5224\u4e00\u4e0b\u6709\u6ca1\u6709\u57fa\u73af\u6811\u4ec5\u6709\u4e24\u4e2a\u6811\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5c31\u65e0\u89e3\uff0c\u56e0\u4e3a\u4e24\u68f5\u6811\u8fde\u4e0d\u6210\u57fa\u73af\u6811\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u5927\u4f53\u601d\u8def\uff0c\u5c31\u662f\u5148\u7279\u5224 $3$ ,\u7136\u540e\u628a\u70b9\u8fde\u6210\u6811\uff0c\u628a\u6811\u8fde\u6210\u73af\uff0c\u7279\u5224\u4e00\u4e0b\u6700\u540e\u5efa\u56fe\u3002\n\n#### \u4ee3\u7801\n\n\u628a\u70b9\u8fde\u6210\u6811\uff0c\u628a\u6811\u8fde\u6210\u73af\u7684\u64cd\u4f5c\u7528\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff0c\u8fd8\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u77db\u76fe\u3002\u8981\u8bb0\u5f97\u50a8\u5b58\u6bcf\u68f5\u6811\u7684\u8282\u70b9\u548c\u6bcf\u4e2a\u73af\u5305\u542b\u7684\u6811\uff0c\u6700\u540e\u5efa\u8fb9\u8981\u7528\u5230\u3002\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\nvoid build(std::vector<std::vector<int> > b);\nconst int N = 2005;\n\nint fa[N];\ninline void init(int x)\n{\n\tfor(int i = 0;i < x;++i)\n\t\tfa[i] = i;\n\treturn;\n}\nint find(int x)\n{\n\treturn fa[x] == x?x:fa[x] = find(fa[x]);\n}\ninline void merge(int x, int y)\n{\n\tfa[find(x)] = find(y);\n\treturn;\n}\ninline bool same(int x, int y)\n{\n\treturn find(x) == find(y);\n}\n\nint col[N];\nstd::vector<int> tree[N];\nint vis[N];\nint cnt;\nstd::vector<int> ro[N];\nint construct(std::vector<std::vector<int> > p)\n{\n\tint n = p[0].size();\n\tfor(int i = 0;i < n;++i)\n\t\tfor(int j = i+1;j < n;++j)\n\t\t\tif(p[i][j] == 3) //\u5982\u679c\u67093\u76f4\u63a5return \n\t\t\t\treturn 0;\n\tinit(n);\n\tfor(int i = 0;i < n;++i)\n\t\tfor(int j = i+1;j < n;++j)\n\t\t\tif(p[i][j] == 1)\n\t\t\t\tmerge(i, j); // \u628a\u70b9\u8fde\u6210\u6811 \n\tfor(int i = 0;i < n;++i)\n\t\tfor(int j = i+1;j < n;++j)\n\t\t\tif(p[i][j] != 1 && same(i, j)) //\u5224\u65ad\u662f\u5426\u6709\u77db\u76fe \n\t\t\t\treturn 0;\n\tmemset(vis, -1, sizeof(vis));\n\tfor(int i = 0;i < n;++i)//\u628a\u6811\u7684\u4fe1\u606f\u50a8\u5b58\u8d77\u6765 \n\t{\n\t\tint f = find(i);\n\t\tif(vis[f] == -1)\n\t\t\tvis[f] = cnt++;\n\t\tcol[i] = vis[f]; //col\u662f\u8282\u70b9i\u6240\u5c5e\u7684\u6811\u7684\u7f16\u53f7 \n\t\ttree[vis[f]].push_back(i); //tree[i]\u50a8\u5b58\u6811i\u5305\u542b\u7684\u8282\u70b9 \n\t}\n\tinit(cnt);//\u8bb0\u5f97\u521d\u59cb\u5316 \n\tfor(int i = 0;i < n;++i)\n\t\tfor(int j = i+1;j < n;++j)\n\t\t\tif(p[i][j] == 2)\n\t\t\t\tmerge(col[i], col[j]); //\u628a\u6811\u8fde\u6210\u73af \n\tfor(int i = 0;i < n;++i)\n\t\tfor(int j = i+1;j < n;++j)\n\t\t\tif(p[i][j] == 0 && same(col[i], col[j])) //\u5224\u65ad\u662f\u5426\u77db\u76fe \n\t\t\t\treturn 0;\n\tfor(int i = 0;i < cnt;++i) //\u50a8\u5b58\u73af\u7684\u4fe1\u606f \n\t\t\tro[find(i)].push_back(tree[i][0]); //ro[i]\u50a8\u5b58\u73afi\u5305\u542b\u7684\u8282\u70b9 \n\tfor(int i = 0;i < cnt;++i) //\u5982\u679c\u6709\u4ec5\u6709\u4e24\u9897\u6811\u7684\u73af\uff0c\u65e0\u89e3 \n\t\tif(ro[i].size() == 2)\n\t\t\treturn 0;\n\t//\u63a5\u4e0b\u6765\u662f\u5efa\u56fe \n\tstd::vector<std::vector<int> > ans;\n\tans.resize(n);\n\tfor(int i = 0;i < n;++i)\n\t\tans[i].resize(n, 0);\n\tfor(int i = 0;i < cnt;++i)\n\t{\n\t\tfor(int j = 0;j < (signed)tree[i].size()-1;++j)\n\t\t{\n\t\t\tint x = tree[i][j], y = tree[i][j+1];\n\t\t\tans[x][y] = ans[y][x] = 1;\n\t\t}\n\t}\n\tfor(int i = 0;i < cnt;++i)\n\t{\n\t\tfor(int j = 0;j < (signed)ro[i].size()-1;++j)\n\t\t{\n\t\t\tint x = ro[i][j], y = ro[i][j+1];\n\t\t\tans[x][y] = ans[y][x] = 1;\n\t\t}\n\t\tif(ro[i].size() > 1)\n\t\t{\n\t\t\tint x = ro[i][0], y = ro[i][ro[i].size()-1];\n\t\t\tans[x][y] = ans[y][x] = 1;\n\t\t}\n\t}\n\tbuild(ans);\n\treturn 1;\n}\n```",
        "postTime": 1601296109,
        "uid": 244204,
        "name": "namelessgugugu",
        "ccfLevel": 9,
        "title": "P6830 [IOI2020]\u8fde\u63a5\u64ce\u5929\u6811 \u9898\u89e3"
    },
    {
        "content": ">\u7ed9\u5b9a\u77e9\u9635$g$,\u6784\u9020\u4e00\u4e2a$n$\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u4f7f\u5f97$i,j$\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u6709\u4e14\u4ec5\u6709$g_{i,j}$\u6761\uff0c\u5176\u4e2d$0\\leqslant g_{i,j}\\leqslant 3$\n\n#### $\\mathrm{Subtask1}:0\\leqslant g_{i,j}\\leqslant 1$\n\n\u7528$1$\u8054\u901a\u7684\u5173\u7cfb\u6c42\u5b8c\u8054\u901a\u5757\uff0c\u51fa\u73af\u5224\u6389\u7136\u540e\u5c31\u6709\u4e00\u4e2a\u68ee\u6797\n\n#### $\\mathrm{Subtask2}:0\\leqslant g_{i,j}\\leqslant 2$\n\n\u5bb9\u6613\u60f3\u5230$2$\u5173\u7cfb\u662f\u7528\u73af\u53bb\u6784\u9020\u7684\n\n\u4e00\u4e9b\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\n\n\u73af\u4ea4\u73af\uff0c\u4e24\u4e2a\u73af\n\n\u53d1\u73b0\u8fd9\u4e9b\u60c5\u51b5\u603b\u7ed3\u51fa\u6765\u5c31\u662f\n\n\u6309\u7167$2$\u5173\u7cfb\u627e\u8054\u901a\u5757\u5982\u679c\n- \u5185\u90e8\u6709$0/1$\u8fde\u8fb9\n- \u4e0d\u662f\u68ee\u6797\u4e2d\u7684\u6811\u4e0a**\u8def\u5f84**\n- \u8054\u901a\u5757\u6709\u591a\u4e2a\n\n\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\n\n\u5426\u5219\u628a$2$\u7684\u8054\u901a\u5757(\u4e00\u6761\u8def\u5f84)\u9996\u5c3e\u8fde\u6210\u73af\u5373\u53ef\n\n#### $\\mathrm{Subtask3}:0\\leqslant g_{i,j}\\leqslant 3$\n\n\u5bb9\u6613\u53d1\u73b0\u6709$3$\u5173\u7cfb\u5fc5\u6709$\\geqslant 4$\u5173\u7cfb\u51fa\u73b0\n\n\u6240\u4ee5\u65e0\u89e3",
        "postTime": 1600565346,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6830 \u3010[IOI 2020 Day1] Connecting Supertrees\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6211\u5c45\u7136\u4f1a IOI \u7684\u9898\uff1f\n\n\u5148\u53e3\u80e1\u4e00\u4e0b\uff0c\u53ef\u80fd\u4ee3\u7801\u7ec6\u8282\u591a\uff1f\u4e0d\u662f\u5f88\u60f3\u5199\uff0c\u4f46\u5e94\u8be5\u662f\u5bf9\u7684\u3002\n\n\u9996\u5148\u770b\u5230\u4e24\u4e24\u4e4b\u95f4\u7684\u8def\u5f84\u6761\u6570\u4e0d\u8d85\u8fc7 $3$\uff0c\u60f3\u5230\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u518d\u601d\u8003\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5728\u4e0d\u91cd\u8fb9\u7684\u60c5\u51b5\u4e0b\u4f7f\u5f97\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u591a\u6761\u8def\u5f84\uff1f\n\n\u65b9\u6cd5\uff1a\u5728\u4e2d\u95f4\u52a0\u5165\u73af\u3002\n\n\u5982\u679c\u52a0\u5165\u4e00\u4e2a\u73af\u5c31\u6709\u4e24\u6761\u8def\u5f84\uff0c\u4f46\u6709\u4e24\u4e2a\u73af\u65e0\u8bba\u600e\u6837\u90fd\u6709\u56db\u6761\uff0c\u6c38\u8fdc\u90fd\u4e0d\u53ef\u80fd\u53ea\u6709\u4e09\u6761\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5b58\u5728\u4e09\u6761\u5c31\u4e00\u5b9a\u65e0\u89e3\uff01\uff08\u602a\u4e0d\u5f97\u53ea\u6709 $4$ \u5206\uff09\n\n\u8003\u8651\u4e24\u6761\uff0c\u4e5f\u5c31\u662f\u8bf4\u6784\u9020\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u8003\u8651\uff0c\u5c06\u8fd9\u4e2a\u73af\u63d0\u5230\u6700\u4e0a\u9762\uff08\u611f\u6027\u7406\u89e3\uff09\uff0c\u7136\u540e\u5047\u5982\u5220\u6389\u73af\u5f97\u5230\u7684\u6811\u53eb\u505a\u5b50\u6811\uff0c\u90a3\u4e48\u6bcf\u4e00\u4e2a\u5b50\u6811\u5185\u70b9\u5bf9\u8def\u5f84\u6761\u6570\u90fd\u662f $1$\uff0c\u4e0d\u5728\u540c\u4e00\u5b50\u6811\u4e14\u8fde\u901a\u7684\u70b9\u5bf9\u4e4b\u95f4\u6709\u4e24\u6761\u8def\u5f84\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff08\u53e3\u80e1\uff09\uff1a\u5148\u628a\u8def\u5f84\u6761\u6570\u4e3a $1$ \u7684\u8fde\u6210\u68ee\u6797\uff0c\u7136\u540e\u518d\u628a\u9700\u8981\u8fde $2$ \u7684\u8fde\u6210\u4e00\u4e2a\u73af\uff0c\u6700\u540e\u5224\u4e00\u4e0b\u5408\u4e0d\u5408\u6cd5\u3002",
        "postTime": 1600523572,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6830 \u3010[IOI 2020 Day1] Connecting Supertrees\u3011"
    },
    {
        "content": "\u4e00\u9053\u5de7\u5999\u7684\u6784\u9020\u9898\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u5982\u679c\u6709 $p_{i,j}=3$ \u5219\u65e0\u89e3\u3002\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u6784\u9020\u51fa $p_{i,j}=3$ \u65f6\u7684\u6700\u7b80\u5316\u60c5\u51b5\uff1a\uff08\u56fe\u4e2d $i=1,j=2$\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6lsrv5b4.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u5373\u4fbf\u5982\u6b64\u4e5f\u6709 $p_{3,4}=4$\u3002\n\n\u6240\u4ee5\u63a5\u4e0b\u6765\u4ec5\u8ba8\u8bba $p_{i,j}\\le 2$ \u7684\u60c5\u51b5\u3002\u6240\u6709 $p_{i,j}> 0$ \u7684 $i,j$ \u4e00\u5b9a\u8fde\u901a\uff0c\u53ef\u4ee5\u5c06\u539f\u56fe\u5212\u5206\u4e3a\u591a\u4e2a\u4e0d\u76f8\u5173\u7684\u8fde\u901a\u5757\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8fde\u901a\u5757\u5185 $p_{i,j}$ \u5747\u7b49\u4e8e\u4e00\u90a3\u4e48\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u968f\u4fbf\u6784\u9020\u4e00\u68f5\u6811\u5373\u53ef\u3002\u5982\u679c\u5b58\u5728 $p_{i,j}=2$\uff0c\u90a3\u4e48\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u73af\u3002\n\n\u4f46\u662f\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u73af\u4e0d\u8d85\u8fc7\u4e00\u4e2a\uff0c\u56e0\u4e3a\u5b58\u5728\u4e24\u4e2a\u73af\u4e5f\u5c31\u52bf\u5fc5\u5b58\u5728\u4e24\u4e2a\u70b9\u6709\u56db\u6761\u4e0d\u540c\u7684\u8def\u5f84\u3002\u6240\u4ee5\u8fd9\u662f\u68f5\u57fa\u73af\u6811\u3002\n\n\u57fa\u73af\u6811\u4e2d\uff0c\u5c06\u73af\u8fb9\u5220\u6389\u4e4b\u540e\uff0c\u540c\u4e00\u8fde\u901a\u5757\u7684\u70b9\u5bf9\u5747\u53ea\u6709\u4e00\u6761\u8def\u5f84\uff0c\u800c\u4e0d\u540c\u8fde\u901a\u5757\u7684\u70b9\u5bf9\u5747\u6709\u4e24\u6761\u8def\u5f84\u3002\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u5728\u540c\u4e00\u8fde\u901a\u5757\u3002\u6700\u540e\u518d\u4ece\u6bcf\u4e2a\u8fde\u901a\u5757\u4e2d\u627e\u4e00\u4e2a\u4ee3\u8868\u70b9\u6210\u73af\u5373\u53ef\u3002\n\n\u6ce8\u610f\u7279\u5224\u73af\u4e2d\u53ea\u6709\u4e24\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u4e0d\u5408\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include \"supertrees.h\"\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=1e3;\n\nint construct(vector<vector<int>> p);\nvoid build(vector<vector<int>> b);\n\nint n,g[Maxn+5][Maxn+5],fa[Maxn+5];\nint vis[Maxn+5],ans[Maxn+5][Maxn+5];\nvector<int> v;\n\nint Find(int x) {return fa[x]==x?x:fa[x]=Find(fa[x]);}\nvoid dfs(int x)\n{\n    vis[x]=1,v.push_back(x);\n    For(i,1,n) if(!vis[i] && g[x][i]) dfs(i);\n}\nint Solve(int id)\n{\n    v.clear(),dfs(id);\n    for(auto i:v) for(auto j:v) if(!g[i][j]) return 0;\n    For(i,1,n) fa[i]=i;\n    for(auto i:v) for(auto j:v)\n        if(g[i][j]==1 && Find(i)!=Find(j))\n            fa[Find(i)]=Find(j);\n    for(auto i:v) for(auto j:v)\n    {\n        if(Find(i)==Find(j) && g[i][j]!=1) return 0;\n        if(Find(i)!=Find(j) && g[i][j]==1) return 0;\n    }\n    for(auto i:v) if(Find(i)!=i)\n        ans[Find(i)][i]=ans[i][Find(i)]=1;\n    int st=0,ed=0,cnt=0;\n    for(auto i:v) if(Find(i)==i)\n    {\n        if(!st) st=i;\n        if(ed) ans[ed][i]=ans[i][ed]=1;\n        ed=i,cnt++;\n    }\n    if(cnt==2) return 0;\n    if(st!=ed) ans[st][ed]=ans[ed][st]=1;\n    return 1;\n}\nint Solve()\n{\n    For(i,1,n) For(j,1,n) if(g[i][j]==3) return 0;\n    For(i,1,n) if(!vis[i] && !Solve(i)) return 0;\n    return 1;\n}\nint construct(vector<vector<int>> p)\n{\n    n=p.size();\n    For(i,0,n-1) For(j,0,n-1) g[i+1][j+1]=p[i][j];\n    if(!Solve()) return 0;\n    else\n    {\n        vector<vector<int>> b; b.resize(n);\n        For(i,0,n-1) b[i].resize(n);\n        For(i,0,n-1) For(j,0,n-1) b[i][j]=ans[i+1][j+1];\n        build(b); return 1;\n    }\n}\n```",
        "postTime": 1677053355,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6830 [IOI2020]\u8fde\u63a5\u64ce\u5929\u6811"
    },
    {
        "content": "\u8fd9\u9898\u4e3b\u8981\u7684\u96be\u70b9\u662f\u4ea4\u4e92\u9898\u7684\u5f62\u5f0f\u2026\u2026\u8c03\u8bd5\u4e86\u5feb\u4e00\u5e74\n\n\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a~~\u5947\u602a~~\u7684\u6570\u636e\u9650\u5236\uff1a$p[i][j]\\in [0,3]$\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u6709\u8def\u5f84\u7684\u8282\u70b9\uff0c\u4ed6\u4eec\u4e00\u5b9a\u4f4d\u4e8e\u4e00\u68f5\u6811\u6216\u4e00\u68f5\u57fa\u73af\u6811\u4e0a\n\n\u4e00\u4e2a\u8054\u901a\u7684\u65e0\u5411\u56fe\u53ef\u4ee5\u770b\u4f5c\u5728\u4e00\u68f5\u6811\u7684\u57fa\u7840\u4e0a\u52a0 $k$ \u6761\u8fb9\n\n\u5f53 $k=1$ \u65f6\uff0c\u662f\u4e00\u68f5\u57fa\u73af\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t0lx9m7f.png)\n\n\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u73af\u4e0a\u5404\u70b9\u76f8\u4e92\u4e4b\u95f4\u90fd\u6709 $2$ \u6761\u4e92\u901a\u8def\u5f84\uff0c\u800c\u73af\u4e0a\u8fde\u63a5\u7684\u6811\u5185\u4e24\u4e24\u53ea\u6709 $1$ \u6761\u8def\u5f84\n\n\u5982\u679c\u6211\u4eec\u518d\u52a0\u5165\u53e6\u4e00\u6761\u8fb9 $4-7$\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/bj92zw4k.png)\n\n\u5219\u4e00\u5b9a\u4f1a\u5f62\u6210\u4e24\u4e2a\u65b0\u7684\u73af($1-2-3-7-3$ \u4e0e $2-4-7-3-6-5$)\n\n\u6b64\u65f6\uff0c\u9664\u4e86\u5bf9\u4e8e\u539f\u73af\u4e0a\u7684\u4e00\u70b9\uff08\u9664\u4e86 $2,3$ \u4e24\u4e2a\u548c $4,7$ \u539f\u6765\u6709\u4e14\u53ea\u6709\u4e00\u6761\u8def\u5f84\u7684\uff09\uff0c\u6211\u4eec\u80fd\u627e\u5230\u81f3\u5c11 $4$ \u6761\u5230 $4$ \u6216 $7$ \u7684\u8def\u5f84\uff08\u5373\uff1a\u539f\u5148\u901a\u5f80 $2$ \u4e0e $3$ \u7684\u56db\u6761\u8def\u5f84\uff0c\u518d\u5728 $2$ $3$ \u7684\u5b50\u6811\u4e0a\u8d70\u5230\u5bf9\u5e94\u7684\u53e6\u4e00\u68f5\u5b50\u6811\u4e0a\u7684 $7$ $4$\uff09\n\n\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u90fd\u662f\u6811\u6216\u57fa\u73af\u6811\uff0c\u4e14\u6700\u5927\u7684\u8def\u5f84\u6811\u5e94\u4e3a $2$\uff0c\u6240\u4ee5\u51fa\u73b0 $3$ \u7684\u60c5\u51b5\u53ef\u4ee5\u76f4\u63a5\u6392\u9664\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6700\u5927\u8def\u5f84\u6570\u4e3a $1$ \u7684\u8fde\u901a\u5757\uff0c\u76f4\u63a5\u5efa\u6811\u5373\u53ef\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6700\u5927\u8def\u5f84\u6570\u4e3a $2$ \u7684\u8fde\u901a\u5757\uff0c\u6839\u636e\u4e0a\u9762\u5bf9\u4e8e\u57fa\u73af\u6811\u7684\u5206\u6790\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u4ee5\u73af\u4e0a\u4e00\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff08$2-4$ \u4e0e $3-7$\uff09\u5355\u72ec\u5efa\u6811\uff0c\u518d\u5728\u6bcf\u68f5\u6811\u4e0a\u5404\u53d6\u4e00\u70b9\u8fde\u6210\u73af\u5373\u53ef\n\n\u987a\u4fbf\u8d34\u4e00\u4e0b\u6d4b\u8bd5\u6570\u636e\u4e0e $check$ \u7a0b\u5e8f\u9886\u53d6[\u5730\u5740](https://cdn.ioi2020.sg/day1/supertrees.zip)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n\nusing namespace std;\n\nconst int MAXN = 1005;\n\nvoid build(vector<vector<int> > b);\n\nint n, cnt;\nint fa[MAXN], belong[MAXN], vis[MAXN];\nvector<int> cir, edg;\nvector<vector<int> > gr, tr, ans;\n\nint find(int x) { return fa[x] == x ? fa[x] : fa[x] = find(fa[x]); }\n\nvoid dfs(int u)\n{\n    vis[u] = 1;\n    edg.push_back(u);\n    for (int v = 0; v < n; v++)\n        if (!vis[v] && gr[u][v] == 1)\n            dfs(v);\n}\n\nint construct(vector<vector<int> > p)\n{\n    gr = p;\n    n = p[0].size();\n    tr.clear();\n    ans.clear();\n    tr.resize(n + 1);\n    ans.resize(n);\n    for (int i = 0; i < n; i++)\n    {\n        fa[i] = i;\n        ans[i].resize(n);\n    }\n    for (int i = 0; i < n; i++)\n        for (int j = i + 1; j < n; j++)\n            if (p[i][j] != 0)\n            {\n                int fx = find(i), fy = find(j);\n                if (fx != fy)\n                    fa[fx] = fy;\n            }\n    for (int i = 0; i < n; i++)\n    {\n        find(i);\n        if (belong[fa[i]])\n            belong[i] = belong[fa[i]];\n        else {\n            belong[i] = ++cnt;\n            tr[belong[i]].clear();\n            belong[fa[i]] = cnt;\n        }\n        tr[belong[i]].push_back(i);\n    }\n    for (int i = 1; i <= cnt; i++)\n    {\n        int siz = tr[i].size();\n        bool flag = 0;\n        for (int j = 0; j < siz - 1; j++)\n            for (int k = j + 1; k < siz; k++)\n            {\n                int u = tr[i][j], v = tr[i][k];\n                if (p[u][v] == 3 || p[u][v] == 0)\n                    return 0;\n                if (p[u][v] == 2)\n                    flag = 1;\n            }\n        if (!flag)\n        {\n            for (int j = 0; j < siz - 1; j++)\n                ans[tr[i][j]][tr[i][j + 1]] = ans[tr[i][j + 1]][tr[i][j]] = 1;\n        }\n        else {\n            cir.clear();\n            for (int j = 0; j < siz; j++)\n            {\n                int u = tr[i][j];\n                if (vis[u])\n                    continue;\n                edg.clear();\n                dfs(u);\n                int esiz = edg.size();\n                for (int k = 1; k < esiz; k++)\n                {\n                    for (int l = 0; l < k; l++)\n                        if (p[edg[k]][edg[l]] != 1)\n                            return 0;\n                    ans[edg[0]][edg[k]] = ans[edg[k]][edg[0]] = 1;\n                    // printf(\"%d %d\\n\", edg[0], edg[k]);\n                }\n                // printf(\"%d\\n\", edg[0]);\n                cir.push_back(edg[0]);\n            }\n            if (cir.size() <= 2)\n                return 0;\n            int csiz = cir.size();\n            for (int j = 0; j < csiz - 1; j++)\n                ans[cir[j]][cir[j + 1]] = ans[cir[j + 1]][cir[j]] = 1;\n            ans[cir[0]][cir[csiz - 1]] = ans[cir[csiz - 1]][cir[0]] = 1;\n        }\n    }\n    build(ans);\n    return 1;\n}\n```\n",
        "postTime": 1606291763,
        "uid": 58826,
        "name": "Conless",
        "ccfLevel": 7,
        "title": "\u3010\u89e3\u9898\u62a5\u544a\u3011[IOI2020]\u8fde\u63a5\u64ce\u5929\u6811"
    },
    {
        "content": "### \u9898\u610f\n\n\u597d\u590d\u6742\uff0c\u6211\u5c31\u4e0d\u5199\u4e86\u3002\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13708429.html)\n\n\u53e3\u80e1\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u6211\u5c45\u7136\u4f1a IOI \u7684\u9898\uff1f\n\n\u9996\u5148\u53d1\u73b0\u6709 $3$ \u4e00\u5b9a\u4e0d\u5408\u6cd5\uff0c\u56e0\u4e3a\u8fde\u901a\u5757\u91cc\u9762\u6709\u4e00\u4e2a\u73af\u7684\u8bdd $p_{i,j}$ \u6700\u591a\u4e3a $2$\uff0c\u6709\u4e24\u4e2a\u73af\u7684\u8bdd\u5c31\u5b58\u5728\u4e00\u4e2a $p_{i,j}$ \u4e3a $4$ \u4e86\u3002\n\n\u6240\u4ee5\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u4e4b\u5185\u8981\u4e48\u662f\u6811\u8981\u4e48\u662f\u57fa\u73af\u6811\u3002\n\n\u8003\u8651\u67d0\u4e2a\u8fde\u901a\u5757\u3002\u5c06\u8fd9\u4e2a\u8fde\u901a\u5757\u5212\u5206\u6210\u82e5\u5e72\u5b50\u6811\uff0c\u6709\u4e00\u4e2a\u73af\u6bcf\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\u6bd4\u5982\u8bf4\u4e0b\u9762\u7684\u56fe\u5c31\u5c06\u5b83\u5212\u5206\u4e3a $\\{1,2,3\\},\\{4,5,6\\},\\{7,8,9\\}$ \u4e09\u68f5\u5b50\u6811\u3002\n\n![wqPN5T.png](https://s1.ax1x.com/2020/09/21/wqPN5T.png)\n\n\u5bf9\u4e8e\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u9762\u7684\u70b9 $i,j$ \u6765\u8bf4\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u4e00\u4e2a\u5b50\u6811\u4e2d\u90a3\u4e48 $p_{i,j}$ \u663e\u7136\u4e3a $1$\uff0c\u5426\u5219 $p_{i,j}=2$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5c06 $p_{i,j}=1$ \u7684\u90a3\u4e9b\u70b9\u5408\u5e76\u6210\u5b50\u6811\uff0c\u518d\u968f\u610f\u6307\u5b9a\u4e00\u4e2a\u6839\u5c06\u6240\u6709 $p_{i,j}=2$ \u7684\u70b9\u8fde\u6210\u4e00\u4e2a\u73af\u5c31\u505a\u5b8c\u4e86\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e24\u4e2a\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u3002\n\n\u8fd9\u9898\u65e0\u89e3\u6709\u70b9\u96be\u5224\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#include \"supertrees.h\"\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=2e3+51;\nvector<vector<ll>>res,g,p;\nll n;\nll ffa[MAXN],ffa2[MAXN];\ninline ll find(ll x)\n{\n\treturn x==ffa[x]?x:ffa[x]=find(ffa[x]);\n}\ninline ll find2(ll x)\n{\n\treturn x==ffa2[x]?x:ffa2[x]=find(ffa2[x]);\n}\ninline void connect(ll x,ll y)\n{\n\treturn (void)(res[x][y]=res[y][x]=1);\n}\ninline ll merge(ll x,ll y)\n{\n\tll fx=find(x),fy=find(y);\n\tif(fx==fy)\n\t{\n\t\treturn 1;\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tif(p[x][i]!=p[y][i])\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn connect(fx,fy),ffa[fy]=fx,1;\n}\ninline void merge2(ll x,ll y)\n{\n\tll fx=find2(x),fy=find2(y);\n\tif(fx!=fy)\n\t{\n\t\tffa2[fy]=fx;\n\t}\n}\nll construct(vector<vector<ll>>x)\n{\n\tp=x,n=p.size(),res.resize(n),g.resize(n);\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tffa[i]=ffa2[i]=i,res[i].resize(n);\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tfor(register int j=0;j<n;j++)\n\t\t{\n\t\t\tif(p[i][j]>2)\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(i!=j&&p[i][j]==1&&!merge(i,j))\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tfor(register int j=0;j<n;j++)\n\t\t{\n\t\t\tfind(i)==i&&find(j)==j&&p[i][j]==2?merge2(i,j):(void)1;\n\t\t}\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tfor(register int j=0;j<n;j++)\n\t\t{\n\t\t\tif(i!=j&&find(i)==i&&find(j)==j&&find2(i)==find2(j)&&!p[i][j])\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tfind(i)!=i?connect(i,ffa[i]):g[find2(i)].emplace_back(i);\n\t}\n\tfor(register int i=0;i<n;i++)\n\t{\n\t\tif(find2(i)==i&&g[i].size()==2)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(find2(i)==i&&g[i].size()>1)\n\t\t{\n\t\t\tfor(register int j=0;j<g[i].size();j++)\n\t\t\t{\n\t\t\t\tconnect(g[i][j],g[i][(j+1)%g[i].size()]);\n\t\t\t}\n\t\t}\n\t}\n\treturn build(res),1;\n}\n```",
        "postTime": 1600611095,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6830 \u3010[IOI2020]Connecting Supertrees\u3011"
    }
]