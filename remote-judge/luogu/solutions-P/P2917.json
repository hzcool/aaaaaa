[
    {
        "content": "## \u7b97\u6cd5\uff1a\u4e09\u5206+\u8d2a\u5fc3\n\n### 1.\u8bfb\u9898\u4e4b\u540e\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f**\u660e\u786e\u76ee\u6807\u548c\u95ee\u9898**\uff1a\n\n&ensp;&ensp;&ensp;&ensp;\u7b2c\u4e00\u6b65\u6709\u540c\u5b66\u53ef\u80fd\u4f1a\u5f80DP\u7684\u65b9\u5411\u601d\u8003\uff08\u6bd4\u5982\u849f\u84bb\u6211\uff09\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u5904\u7406\u7684\u95ee\u9898\u662f\u6211\u9700\u8981\u4e70\u591a\u5c11\u4e2a\u73a9\u5177\uff0c\u5e76\u4e14\u6bcf\u5929\u5206\u522b\u5206\u591a\u5c11\u4e2a\u7ed9n1\uff0c\u591a\u5c11\u4e2a\u7ed9n2\u624d\u80fd\u4f7f\u5f97\u603b\u548c\u6700\u5c0f\u3002\n\u4f46\u662f\uff0c\u5728DP\u4e4b\u524d\u4e00\u5b9a\u8981\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u6709\u4e00\u4e2a\u7b97\u6cd5\u4e5f\u53ef\u4ee5\u5904\u7406\u90e8\u5206DP\u95ee\u9898\u4f46\u662f\u6bd4DP\u66f4\u4f18\u79c0\uff0c\u90a3\u5c31\u662f**\u8d2a\u5fc3**\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u4f46\u662f\u6211\u4eec\u8981\u8bc1\u660e\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\u3002\u6211\u4eec\u4e0d\u59a8\u5047\u8bbec1\u4e0ec2\u662f\u5546\u5e97\u91cc\u73a9\u5177\u7684\u53e6\u4e00\u79cd\u4ef7\u683c\u4e14\u6570\u91cf\u6709\u9650\uff0csum\u4e3a1~D\u5929\u6d3e\u5bf9\u6240\u9700\u8981\u7684\u73a9\u5177\u603b\u91cf\uff0c\u65e0\u8bba\u5982\u4f55\u6211\u4eec\u90fd\u8981\u4ecec1,c2,tc\u8fd9\u4e09\u79cd\u4ef7\u683c\u8d2d\u4e70sum\u4e2a\u73a9\u5177\uff0c\u663e\u7136\u4e70\u4ef7\u683c\u8d8a\u4fbf\u5b9c\u7684\u8d8a\u597d\u3002\n\n### 2. \u7b2c\u4e8c\u6b65\u5c06**\u95ee\u9898\u62c6\u5206**\uff0c\u5f80\u7b80\u5355\u7684\u65b9\u5411\u53bb\u601d\u8003\n\n&ensp;&ensp;&ensp;&ensp;\u5173\u4e8e\u62c6\u5206\u7684\u65b9\u5411\uff0c\u8fd9\u91cc\u662f\u6839\u636e\u7b97\u6cd5\u4ee5\u53ca\u81ea\u8eab\u7ecf\u9a8c\u6765\u7684\uff08\u5982\u679c\u662f\u5927\u4f6c\u7684\u8bdd\u5b8c\u5168\u53ef\u80fd\u80fd\u591f\u4e00\u6b21\u6027\u5230\u4f4d\u5427\uff09\u56e0\u4e3a\u6211\u4eec\u8981\u8ba9\u603b\u7684\u91d1\u989d\u6700\u5c11\uff0c\u5e76\u4e14\u8981\u8ba9\u6bcf\u5929\u6d3e\u5bf9\u62e5\u6709\u8db3\u591f\u7684\u73a9\u5177\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u9009\u62e9\u6700\u4fbf\u5b9c\u7684\u65b9\u6848\u3002\n\n###### &ensp;&ensp;&ensp;&ensp; **\u4e3a\u4e86\u8bf4\u660e\u65b9\u4fbf\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u6240\u6709\u73a9\u5177\u6d88\u6bd2\u53ea\u6309\u5929\u6570\u4ed8\u94b1\u3002\u4e5f\u5c31\u662f\u6211\u53ef\u4ee5\u5148\u628a\u6240\u6709\u73a9\u5177\u514d\u8d39\u6d88\u6bd2\uff0c\u7136\u540e\u6839\u636e\u53d6\u56de\u5f53\u5929\u8ddd\u79bb\u6d88\u6bd2\u5f53\u5929\u7684\u5929\u6570\uff0c\u5212\u5206n1\uff0cn2\u4e24\u4e2a\u6863\u6b21\u3002\u5982\u679cn1=1\uff0cn2=2\uff0c\u4e00\u4e2a\u73a9\u5177\u5728\u7b2c\u4e00\u5929\u9001\u53bb\u6d88\u6bd2\uff0c\u5728\u7b2c\u4e8c\u5929\u53d6\u51fa\u6765\u7684\u4ef7\u683c\u5c31\u662fc1\uff0c\u4f46\u662f\u5982\u679c\u5728\u7b2c\u4e09\u5929\u53d6\u51fa\u6765\u4ef7\u683c\u5c31\u662fc2\u4e86\uff08\u76f8\u5f53\u4e8e\u73a9\u5177\u4e0d\u7528\u7acb\u523b\u5728n1\u5929\u6216\u8005n2\u5929\u53d6\u51fa\uff0c\u53ef\u4ee5\u5b58\u653e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff09**\n\n\u8bbe$c1>c2$\uff08\u63a5\u4e0b\u6765\u7684\u5206\u6790\u662f\u5bf9\u4e8e\u6bcf\u5929\u5355\u72ec\u8d2a\u5fc3\u7684\u60c5\u51b5\uff09\n\n\u5982\u679c$c2>tc$ \u4e5f\u5c31\u8868\u660e\u4e0e\u5176\u9001\u53bb\u6d88\u6bd2\u4e0d\u5982\u5929\u5929\u4e70\u65b0\u73a9\u5177\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ea\u9700\u8981\u8f93\u51fa$tc*sum$\u5c31\u53ef\u4ee5\u5566\n\n\u5982\u679c$c1>tc>c2$\u6216\u8005$tc>c1>c2$\u4e14c2\u8981\u5feb\u4e00\u4e9b\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5c06\u73a9\u5177\u5206\u7ed9\u4ece\u5546\u5e97\u4e70\uff0c\u548cn2\u5929\u6d88\u6bd2\u5c31\u884c\n\n\u5982\u679c$tc>c1>c2$ \u4e14c2 \u6bd4\u8f83\u6162\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8981\u4ed4\u7ec6\u659f\u914c\u4e00\u4e0b\u5566\u3002\n\n&ensp;&ensp;&ensp;&ensp; \u5230\u8fd9\u91cc\u4e0e\u5176\u8003\u8651\u6bcf\u5929\u7684\u5206\u914d\u65b9\u5f0f\uff0c\u6211\u4eec\u4e0d\u5982\u4ece\u603b\u91cf\u5206\u6790\uff08\u56e0\u4e3a\u8fd9\u91cc\u6bcf\u5929\u5206\u6790\u4f1a\u53d8\u7684\u5f88\u9ebb\u70e6\uff09\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u6211\u4eec\u4e00\u5171\u8981\u4e70x\u4e2a\u73a9\u5177\uff0c\u90a3\u4e48\u6211\u4eec**\u8bbef(x)\u8868\u793a\u6ee1\u8db3\u6bcf\u5929\u9700\u6c42\u524d\u63d0\u6240\u9700\u8981\u7684\u6700\u5c0f\u8d39\u7528\uff0c\u5176\u4e2dx\u8868\u793a\u8d2d\u4e70\u7684\u7684\u65b0\u73a9\u5177\u7684\u4e2a\u6570\u3002g(x)\u8868\u793a\u57281~D\u5929\u5185\u628a\u8ba4\u4e3a\u9700\u8981\u9001\u53bb\u6d88\u6bd2\u7684\u65e7\u73a9\u5177\u9001\u53bb\u6d88\u6bd2\u82b1\u8d39\u7684\u8d39\u7528\u3002\u4ece\u5546\u5e97\u8d2d\u4e70\u7684\u8d39\u7528\u7b97\u4e3a$tc*x$,\u603b\u5171\u7684\u8d39\u7528\u5c31\u53ef\u4ee5\u7b97\u4e3a\uff1a$f(x)=g(x)+tc*x$\uff0c\u5e76\u4e14\u8fd9\u51fd\u6570\u7684\u659c\u7387\u662f\u5355\u8c03\u7684\u3002**\n#### \u4e3a\u4ec0\u4e48\uff1f\uff01\n&ensp;&ensp;&ensp;&ensp;\u5982\u679c\u65b0\u73a9\u5177\u5f88\u591a\uff0c\u90a3\u4e48g(x)\u5c31\u4f1a\u7279\u522b\u5c0f\u3002\u56e0\u4e3a\u65b0\u73a9\u5177\u5df2\u7ecf\u6ee1\u8db3\u4e86\u6d3e\u5bf9\u7684\u9700\u6c42\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u9001\u4e00\u4e9b\u53bb\u6d17\u4e86\u3002\u5e76\u4e14\u5b58\u5728$g(x-1)-g(x)>=g(x)-g(x+1)$\u53ef\u4ee5\u8fd9\u6837\u6765\u8003\u8651\uff0c\u56e0\u4e3a\u73a9\u5177\u6570\u5c11\u9700\u8981\u5feb\u6d17\uff0c\u82b1\u7684\u94b1\u5c31\u6bd4\u8f83\u591a\u3002\u5e76\u4e14abs(k)\u5c31\u8981\u5927\u4e00\u4e9b\uff0c\u51fd\u6570\u56fe\u50cf\u4e5f\u8981\u6296\u4e00\u4e9b\u3002\u4f46\u662f\u5982\u679c\u73a9\u5177\u6570\u91cf\u591a\uff0c\u5c31\u4f1a\u9009\u62e9\u6162\u6d17\u3002\u6240\u4ee5abs(k)\u5c31\u8981\u5c0f\u4e00\u4e9b\uff0c\u51fd\u6570\u56fe\u50cf\u4e5f\u5c31\u8981\u7f13\u4e00\u4e9b\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u53cd\u5411\u8868\u793a\u5e26\u5165\u53ef\u5f97\uff1a$f(x)-f(x-1)<=f(x+1)-f(x)$\u4e8e\u662ff(x)\u7684\u659c\u7387\u4e5f\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u662f\u5355\u5cf0\u7684\u5462\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u8bd5\u7740\u753b\u4e00\u4e0b\u659c\u7387\u5355\u589e\u7684\u51fd\u6570\u7684\u56fe\u50cf\uff08\u6bd4\u5982\u4e8c\u6b21\u51fd\u6570\uff09\u3002\n\n\n&ensp;&ensp;&ensp;&ensp; \u5982\u679c\u8fd9\u91cc\u7406\u89e3\u4e0d\u4e86\u7684\u540c\u5b66\u53ef\u4ee5\u8fd9\u6837\u610f\u4f1a\uff1a**\u5982\u679c\u73a9\u5177\u4e70\u591a\u4e86\u5c31\u4f1a\u6d6a\u8d39\u4e00\u90e8\u5206\u94b1\uff0c\u56e0\u4e3a\u591a\u4e70\u7684\u90e8\u5206\u53ef\u4ee5\u7528\u6d88\u6bd2\u7684\u8d39\u7528\u6765\u4ee3\u66ff\uff0c\u5982\u679c\u4e70\u5c11\u4e86\u53cd\u800c\u8981\u5728\u6d88\u6bd2\u4e0a\u9762\u82b1\u66f4\u591a\u7684\u94b1\u3002\u6240\u4ee5\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u5355\u5cf0\u7684\uff01**\n\n---\n\u5355\u5cf0\u7684\u51fd\u6570\u81ea\u7136\u800c\u7136\u4f1a\u8054\u60f3\u5230\u4e09\u5206\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u5230\u8fd9\u91cc\u5df2\u7ecf\u89e3\u51b3\u4e86\u4e00\u534a\u4e86\u3002\n\n### 3.\u63a5\u4e0b\u6765\u8981\u5b8c\u6210\u7684\u4efb\u52a1\u4fbf\u662f\u600e\u4e48\u6c42\u51fa\u8fd9\u4e2a\u603b\u82b1\u8d39\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u6211\u4eec\u4f9d\u65e7\u5728$tc>c1>c2$ \u4e14c2 \u6bd4\u8f83\u6162\u8fd9\u60c5\u51b5\u4e0b\u9762\u601d\u8003\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u90a3\u4e48\u53ea\u8003\u8651**\u5bf9\u6bcf\u5929\u8fdb\u884c\u8d2a\u5fc3**\uff0c\u5c31\u662f\u6bcf\u5929\u90fd\u6d17\u6700\u4fbf\u5b9c\u7684\u8863\u670d\uff0c\u6c42\u51fa\u6765\u7684\u7b54\u6848\u662f\u5426\u662f\u6700\u4f18\u7684\u5462\uff1f\n\n&ensp;&ensp;&ensp;&ensp;\u5f88\u660e\u663e**\u4e0d\u5b8c\u5168\u6b63\u786e\uff01** \u6211\u8fd9\u91cc\u4e3e\u4e2a\u4f8b\u5b50\uff1aD=4,N1=1,N2=3,C1=3,C2=1,Tc=4,D1=3,D2=1,D3=1,D4=4;\u5f53\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u8d2a\u5fc3\u7684\u65f6\u5019\u6c42\u51fa\u6765\u7684\u7ed3\u679c\u662f27\uff0c\u4f46\u662f\u6b63\u89e3\u662f25\uff0c\u539f\u56e0\u5c31\u662f\u6211\u4eec\u5728\u7b2c\u4e09\u5929\u7684\u65f6\u5019\uff0c\u8d2a\u5fc3\u4f1a\u9009\u62e9\u6765\u81ea\u7b2c\u4e00\u5929\u7684\u73a9\u5177\uff08\u56e0\u4e3a\u8fd9\u4e2a\u8d2a\u5fc3\u53ea\u8003\u8651\u5f53\u524d\u6700\u4fbf\u5b9c\u7684\u73a9\u5177\u4e0d\u8003\u8651\u5929\u6570\uff09\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u4f46\u662f\u5982\u679c\u6211\u4eec\u9009\u62e9\u8ddf\u7b2c\u4e00\u5929\u73a9\u5177\u76f8\u540c\u4ef7\u683c\u7684\u7b2c\u4e8c\u5929\u7684\u73a9\u5177\u3002\u867d\u7136\u5bf9\u4e8e\u7b2c\u4e09\u5929\u6765\u8bf4\u82b1\u8d39\u662f\u76f8\u901a\u7684\uff0c\u4f46\u662f\u5bf9\u7b2c\u56db\u5929\u6765\u8bf4\u82b1\u8d39\u5c31\u6709\u6240\u4e0d\u540c\u4e86\uff08\u5927\u5bb6\u53ef\u4ee5\u624b\u5de5\u6a21\u62df\u4e00\u4e0b\u8fd9\u91cc\u5c31\u4e0d\u518d\u505a\u8be6\u7ec6\u89e3\u91ca\u4e86\uff09\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u6240\u4ee5\u6211\u4eec\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u5f97\u5230\u4e86\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5728\u4ef7\u683c\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u6d88\u6bd2\u65f6\u95f4\u6700\u8fd1\u7684\u73a9\u5177\uff0c\u8fd9\u6837\u6d88\u6bd2\u65f6\u95f4\u8fdc\u7684\u73a9\u5177\u4ef7\u683c\u5c31\u4f1a\u964d\u4f4e\u3002\n\n---\n\u7b97\u6cd5\u5230\u8fd9\u91cc\u5927\u6982\u5c31\u89e3\u91ca\u6e05\u695a\u4e86 ~~\uff08\u5427\uff09~~\u7136\u540e\u662f\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100000+5;\nconst int inf=1000000000; \nint d,n1,n2,c1,c2,tc,l,r,t[maxn];\nstruct code\n{int Day,toys;};\ndeque<code> n,o,m;\n//\u6211\u4eec\u8fd9\u91cc\u7528\u4e86\u4e09\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u8868\u793an,o,m\u3002\n//n\u8868\u793a\u4ece\u5f00\u59cb\u6d88\u6bd2\u7684\u90a3\u5929\u5230\u4eca\u5929\u5c11\u4e8en1\u5929\u7684\u73a9\u5177\n//m\u8868\u793a\u6d88\u6bd2\u4e86\u81f3\u5c11\u6709n1\u5929\u4f46\u662f\u4e0d\u6ee1\u8db3n2\u5929\u7684\u73a9\u5177\n//o\u8868\u793a\u5df2\u7ecf\u6d88\u6bd2\u4e86\u81f3\u5c11n2\u5929\u7684\u73a9\u5177 \nvoid add(int day,int toy)\n{\n\tcode now;\n\tnow.Day=day,now.toys=toy;\n\tn.push_back(now);\n}\nvoid newch (int x)\n{\n\twhile (n.size()&&x-n.front().Day>=n1)//\u8fd9\u91cc\u4ece\u961f\u9996\u5f00\u59cb\u8ba8\u8bba\uff0c\u56e0\u4e3a\u961f\u9996\u90fd\u662f\u65e9\u5148\u88ab\u538b\u5165\u7684\uff0c\u65f6\u95f4\u6bd4\u8f83\u4e45 \n\tm.push_back(n.front()),n.pop_front();\n\twhile (m.size()&&x-m.front().Day>=n2)\n\to.push_back(m.front()),m.pop_front();\n}\nint Find(int x)\n{\n\twhile (n.size()) n.pop_front();//\u8bb0\u5f97\u6e05\u96f6\uff01 \n\twhile (o.size()) o.pop_front();\n\twhile (m.size()) m.pop_front();\n\tint money=(tc-c2)*x;\n\t//\u56e0\u4e3a\u5728\u4e0b\u9762\u7684\u8ba8\u8bba\u91cc\u9762\u6211\u4eec\u8981\u628a\u6240\u6709\u7684\u73a9\u5177\u5f53\u6210\u6d88\u6bd2\u8fc7\u7684\u3002\n\t//\u4f46\u8fd9\u91cc\u662f\u76f4\u63a5\u8d2d\u4e70\u7684\u73a9\u5177\uff0c\u6240\u4ee5\u8981\u51cf\u53bbc2 \n\tadd(-200000,x); //\u8bbe\u6210-200000\u662f\u4e3a\u4e86\u65b9\u4fbf\u8ba8\u8bba\uff08\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u624b\u5de5\u6a21\u62df\u4e00\u4e0b\uff09 \n\tfor (int i=1;i<=d;i++)\n\t{\n\t\tint rest=t[i];\n\t\tnewch(i);//\u5728\u8fd9\u91cc\u8fdb\u884c\u65b0\u65e7\u4ea4\u66ff\u7684\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u9898\u89e3\u4e2d\u6211\u4eec\u6309\u7167\u5929\u6570\u5806\u5bf9\u6d88\u6bd2\u8fdb\u884c\u4ed8\u6b3e\uff0c\u800c\u4e0d\u660e\u786e\u7684\u5206\u7c7b \n\t\twhile (rest&&o.size())//\u5148\u9009\u62e9\u4fbf\u5b9c\u7684 \n\t\t{\n\t\t\tif (o.back().toys>rest)//\u8fd9\u91cc\u4eceback\u5f39\u51fa\u5c31\u662f\u76f8\u540c\u4ef7\u683c\u9009\u62e9\u6e05\u6d17\u65f6\u95f4\u6bd4\u8f83\u8fd1\u7684\uff08\u4e0b\u540c\uff09 \n\t\t\to.back().toys-=rest,money+=rest*c2,rest=0;\n\t\t\telse \n\t\t\trest-=o.back().toys,money+=c2*o.back().toys,o.pop_back();\n\t\t}\n\t\twhile (rest&&m.size())\n\t\t{\n\t\t\t\n\t\t\tif (m.back().toys>rest)\n\t\t\tm.back().toys-=rest,money+=rest*c1,rest=0;\n\t\t\telse \n\t\t\trest-=m.back().toys,money+=c1*m.back().toys,m.pop_back();\n\t\t}\n\t\tif (rest) return inf;//inf\u5c31\u8868\u793a\u73a9\u5177\u6570\u91cf\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u6d3e\u5bf9\u7684\u9700\u6c42 \n\t\tadd(i,t[i]);\n\t}\n\treturn money;\n}\nint three()\n{\n\t r=r+1;\n\twhile (r-l>2)//\u5f53l\u548cr\u8db3\u591f\u63a5\u8fd1\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u624b\u5de5\u8df3\u51fa\u4e86 \n\t{\n\t\tint x=(2*l+r)/3,y=(2*r+l)/3;\n\t\tint a=Find(x);\n\t\tif (a!=inf&&a<=Find(y)) r=y; \n\t\telse l=x;\n\t}\n\tint ans=Find(l);\n\tfor (int i=l+1;i<=r;i++)\n\t\tans=min(ans,Find(i));\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d%d\",&d,&n1,&n2,&c1,&c2,&tc);\n\tif (n1>n2)//\u4fdd\u8bc1n1\u662f\u5feb\u6d17 \n\tswap(n1,n2),swap(c1,c2);\n\tif (c1<c2) c2=c1;//\u5982\u679c\u5feb\u7684\u4ef7\u683c\u53cd\u800c\u8981\u4f4e\u4e00\u4e9b\u4e3a\u4ec0\u4e48\u4e0d\u9009\u62e9\u5feb\u7684\u5462\n\t//\u56e0\u4e3a\u540e\u9762\u7684\u8ba8\u8bba\u662f\u6839\u636e\u6162\u7684\u6bd4\u8f83\u4f4e\u8fd9\u4e2a\u6761\u4ef6\u6765\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u9700\u8981\u8d4b\u503c\u3002 \n\tfor (int i=1;i<=d;i++) scanf(\"%d\",&t[i]),r+=t[i];\n\t//\u4e3a\u4ec0\u4e48\u4e8c\u5206\u7684\u4e0a\u9650\u662f\u73a9\u5177\u7684\u603b\u6570\uff0c\u56e0\u4e3a\u6211\u6700\u591a\u628a\u6240\u6709\u73a9\u5177\u4e70\u4e0b\u6765\u554a \n\tprintf(\"%d\",three()); \n}\n```\n\n\n\u53c2\u8003\u8d44\u6599\uff1a\u5b98\u65b9\u6807\u51c6\u7a0b\u5e8f\n\n---\n&ensp;&ensp;&ensp;&ensp;\u56e0\u4e3a\u672c\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u4e00\u6765\u60f3\u5230\u7684\u662fDp\uff08\u53ef\u80fdDP\u505a\u591a\u4e86\uff0c\u90fd\u5fd8\u4e86\u8001\u672c\u884c\u8d2a\u5fc3\u4e86\uff09\uff0c\u7136\u540e\u641e\u4e86\u4e2a\u4e94\u7ef4\u7684\u51fa\u6765\uff0c\u5e76\u4e14\u8fd8\u4e0d\u80fd\u4f18\u5316\uff08\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6709\u72b6\u6001\u538b\u7f29\u7684\u6807\u7b7e\u5462\uff09\uff0c\u603b\u4e4b\u5c31\u662f\u6211\u592a\u83dc\u4e86\u7b2c\u4e00\u6b21\u6ca1\u505a\u51fa\u6765\u3002\n\n&ensp;&ensp;&ensp;&ensp;\u4e8e\u662f\u672c\u849f\u84bb\u5c31\u5f88\u4e0d\u8981\u8138\u7684\u53bb\u7f51\u4e0a\u627e\u9898\u89e3\u4e86\uff08emm\uff09,\u53ef\u80fd\u662f\u5e74\u4ee3\u592a\u65e9\u4e86\uff0c\u7f51\u7edc\u4e0a\u7684\u9898\u89e3\u76f8\u5f53\u7684\u5c11\uff0c\u800c\u4e14\u76f8\u5f53\u7684\u7b80\u6d01\u3002\u53ef\u80fd\u4e00\u822c\u505a\u5230\u8fd9\u91cc\u7684\u4eba\uff0c\u90fd\u5df2\u7ecf\u5b66\u4f1a\u7f51\u7edc\u6d41\u4e86\uff08\u9910\u5dfe\u95ee\u9898\u5462\uff09\u6240\u4ee5\u672c\u849f\u84bb\u770b\u4e0d\u61c2\u5462qwq\u3002\u82b1\u4e86\u4e00\u5929\u7684\u65f6\u95f4\u7ec8\u4e8e\u628a\u8fd9\u9053\u9898A\u6389\u4e86\uff0c\u7136\u800c\u4e3a\u4e86\u9020\u798f\u540e\u9762\u89e3\u8fd9\u9053\u9898\u7684\u4eba\uff0c\u8fd9\u7bc7\u9898\u89e3\u5c31\u5199\u7684\u7279\u522b\u7684**\u5570\u55e6**\uff08\u5bb3\u6015\u6709\u4eba\u770b\u4e0d\u61c2emm\uff09\n\n&ensp;&ensp;&ensp;&ensp;\u53e6\u5916\u662f\u5173\u4e8e\u51fd\u6570\u7684\u90e8\u5206\uff0c\u5176\u5b9e\u4e4b\u524d\u6709\u5f88\u591a\u535a\u5ba2\u90fd\u8bc1\u660e\u4e86\u5355\u5cf0\u51fd\u6570\uff0c\u4f46\u662f\u51fd\u6570\u7684\u542b\u4e49\u5e76\u6ca1\u6709\u8be6\u7ec6\u7684\u7ed9\u51fa\u3002\u8fd9\u91cc\u8fdb\u884c\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u8bf4\u660e",
        "postTime": 1565787637,
        "uid": 98942,
        "name": "\u7c73\u65af\u5170\u8fbe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2917 \u3010[USACO08NOV]\u73a9\u5177Toys\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u603b\u5171 $ D $ \u5929\uff0c\u7b2c $ i $ \u5929\u91cc\u9700\u8981 $ T_i $ \u4e2a\u73a9\u5177\uff0c\u73a9\u5177\u73a9\u5b8c\u540e\u9700\u8981\u6d88\u6bd2\u624d\u80fd\u518d\u6b21\u4f7f\u7528\u3002\u4e70\u4e00\u4e2a\u5e72\u51c0\u7684\u73a9\u5177\uff08\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff09\u7684\u4ef7\u683c\u662f $ T_c $ \u3002\u5c06\u4e00\u4e2a\u7528\u8fc7\u7684\u73a9\u5177\u6e05\u7406\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u8017\u65f6 $ N_1 $ \u5929\u6d88\u6bd2\u597d\uff0c\u4ef7\u683c\u4e3a $ C_1 $ \uff1b\u7b2c\u4e8c\u79cd\u8017\u65f6 $ N_2 $ \u5929\u6d88\u6bd2\u597d\uff0c\u4ef7\u683c\u4e3a $ C_2 $ \u3002\u8bf7\u95ee\u5728 $ D $ \u5929\u7684\u9700\u6c42\u90fd\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u6d88\u8d39\u3002\n\n## \u9898\u76ee\u89e3\u6cd5\uff1a\n\n\u8fd9\u4e00\u9898\u89e3\u6cd5\u4e3a**\u8d2a\u5fc3+\u4e8c\u5206\u659c\u7387**\u3002\n\n\u5148\u8003\u8651\u73a9\u5177\u8d2d\u4e70\u7684\u603b\u91cf\u3002\u5982\u679c\u73a9\u5177\u8d2d\u4e70\u592a\u591a\u6216\u592a\u5c11\u90fd\u4f1a\u5bfc\u81f4\u603b\u4ef7\u592a\u9ad8\uff0c\u56e0\u6b64\u53ef\u4ee5\u5224\u65ad\u51fa\u8d2d\u4e70\u603b\u91cf\u4e0e\u6700\u5c0f\u4ef7\u503c\u7684\u51fd\u6570\u5b58\u5728\u552f\u4e00\u6781\u5c0f\u503c\u3002\u7136\u540e\u4fbf\u53ef\u901a\u8fc7\u4e8c\u5206\u659c\u7387\u67e5\u627e\u51fa\u5728\u603b\u5171\u4e70 $ [1,\\sum_{i=1}^D T_i] $ \u4e2a\u73a9\u5177\u4e2d\u6700\u4f18\u7684\u9009\u9879\u4e86\u3002\n\n\u73b0\u5728\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u7528\u8d2a\u5fc3\u6700\u5c0f\u5316\u603b\u5171\u4e70 $ k $ \u4e2a\u73a9\u5177\u65f6\u7684\u82b1\u8d39\u3002\n\n\u9996\u5148\uff0c\u80fd\u4e70\u5c31\u5148\u4e70\u73a9\u5177\u3002\u5728\u4e0d\u5f97\u4e0d\u6d17\u7684\u60c5\u51b5\u4e0b\uff0c\u5148\u5c06\u6d88\u6bd2\u65b9\u5f0f\u5206\u4e3a\u5feb\u548c\u6162\u4e24\u79cd\u3002\u5feb\u7684\u6d88\u6bd2\u901f\u5ea6\u8f83\u5feb\uff0c\u6162\u7684\u5219\u53cd\u4e4b\u3002\u7279\u6b8a\u7684\uff0c\u5982\u679c\u5feb\u6d88\u6bd2\u7684\u4ef7\u683c\u4e0e\u6162\u6d88\u6bd2\u4ef7\u683c\u4f4e\uff0c\u5219\u5c06\u5feb\u6d88\u6bd2\u65b9\u5f0f\u8986\u76d6\u6389\u6162\u7684\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9009\u62e9\u5feb\u7684\u7edd\u5bf9\u5360\u4f18\u3002\n\n\u5176\u6b21\uff0c\u5219\u80fd\u7528\u6162\u6d88\u6bd2\u6ee1\u8db3\u5219\u7528\u6162\u6d88\u6bd2\u3002\u56e0\u4e3a\u6162\u6d88\u6bd2\u7684\u8017\u8d39\u76f8\u5bf9\u8f83\u4f4e\u3002\n\n\u56e0\u6b64\uff0c\u6700\u540e\u53ef\u4ee5\u7528\u53cc\u7aef\u961f\u5217\u6a21\u62df\u51fa\u6d88\u6bd2\u64cd\u4f5c\u6765\u5b8c\u6210\u6b64\u9898\u3002\u5177\u4f53\u64cd\u4f5c\u770b\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\uff1a\n```c\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        {\n            f=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\ninline void write(int x)\n{\n    if(x<0)\n    {\n        putchar('-');\n        x=-x;\n    }\n    if(x>9)\n    {\n        write(x/10);\n        putchar(x%10+'0');\n        return;\n    }\n    putchar(x+'0');\n}\nstruct node\n{\n\tint t,c;//\u9700\u6d88\u6bd2\u73a9\u5177\u7684\u65f6\u95f4\u4e0e\u6570\u91cf \n};\nint n,m1,m2,c1,c2,p,a[100001],sum;\ndeque<node> qbuy,qmx,qkx;\nint mins(int num)\n{\n\twhile(!qbuy.empty()) qbuy.pop_back();\n\twhile(!qmx.empty()) qmx.pop_back();\n\twhile(!qkx.empty()) qkx.pop_back();//\u5148\u6e05\u7a7a\u6240\u6709\u961f\u5217 \n\tint ans=num*p;//\u4e70\u5165num\u4e2a\u73a9\u5177\u7684\u6d88\u8d39 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(!qbuy.empty()&&qbuy.front().t+m2<=i) qkx.push_back(qbuy.front()),qbuy.pop_front();//\u628a\u65e7\u73a9\u5177\u653e\u5165\u5feb\u6d88\u6bd2 \n\t\twhile(!qkx.empty()&&qkx.front().t+m1<=i) qmx.push_back(qkx.front()),qkx.pop_front();//\u628a\u65e7\u73a9\u5177\u4e2d\u6162\u6d88\u6bd2\u4e5f\u53ef\u4ee5\u6d88\u5b8c\u7684\u653e\u5165\u6162\u6d88\u6bd2 \n\t\tint ai=a[i];\n\t\tint buynum=min(ai,num);//\u5982\u679c\u8fd8\u53ef\u4ee5\u4e70\u5c31\u5148\u4e70\uff08\u4e70\u7684\u94b1\u5f00\u5934\u4fbf\u5df2\u8ba1\u7b97\uff09 \n\t\tai-=buynum;\n\t\tnum-=buynum;\n\t\twhile(ai&&!qmx.empty())//\u5148\u6162\u6d88\u6bd2 \n\t\t{\n\t\t\tint mxnum=min(ai,qmx.back().c);\n\t\t\tai-=mxnum;\n\t\t\tans+=mxnum*c1;\n\t\t\tif(qmx.back().c==mxnum) qmx.pop_back();\n\t\t\telse qmx.back().c-=mxnum;\n\t\t}\n\t\twhile(ai&&!qkx.empty())//\u540e\u5feb\u6d88\u6bd2 \n\t\t{\n\t\t\tint kxnum=min(ai,qkx.back().c);\n\t\t\tai-=kxnum;\n\t\t\tans+=kxnum*c2;\n\t\t\tif(qkx.back().c==kxnum) qkx.pop_back();\n\t\t\telse qkx.back().c-=kxnum;\n\t\t}\n\t\tif(ai) return 1e16;//\u65e0\u6cd5\u6210\u529f\u5b8c\u6210\u9700\u6c42\uff0c\u5c06\u603b\u503c\u8bb0\u4e3a\u65e0\u9650\u5927\uff08\u56e0\u4e3a\u90fd\u65e0\u6cd5\u5b8c\u6210\u6240\u4ee5\u4e0d\u80fd\u9009\uff09 \n\t\tqbuy.push_back((node){i,a[i]});\n\t}\n\treturn ans;\n}\nsigned main()\n{\n\tn=read(),m1=read(),m2=read(),c1=read(),c2=read(),p=read();\n\tfor(int i=1;i<=n;i++) a[i]=read(),sum+=a[i];\n\tif(m1<m2)\n\t{\n\t\tswap(m1,m2);\n\t\tswap(c1,c2);\n\t}\n\tif(c1>c2)\n\t{\n\t\tm1=m2;\n\t\tc1=c2;\n\t}\n\tint l=0,r=sum+1;\n\twhile(l<r-1)//\u4e8c\u5206\u627e\u51fa\u6700\u5c0f\u503c \n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(mins(mid)<mins(mid+1)) r=mid;\n\t\telse l=mid;\n\t}\n\twrite(mins(r));\n\treturn 0;\n}\n```\n",
        "postTime": 1647850659,
        "uid": 382274,
        "name": "\u6697\u5f71\u4e4b\u68a6",
        "ccfLevel": 6,
        "title": "P2917\u9898\u89e3"
    },
    {
        "content": "  \n**\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8][1]**\n\n \n- \u9898\u610f\n\n\u9910\u5dfe\u8ba1\u5212\u95ee\u9898\uff08\u8d39\u7528\u6d41\u7ecf\u5178\u9898\uff09\uff0c\u6570\u636e\u52a0\u5f3a\uff08$1 \\le N \\le 10^5$\uff09\u3002\n\n\n- Solution\n\n\u8bbe$f(x)$\u4ee3\u8868\u8d2d\u4e70$x$\u4e2a\u65b0\u73a9\u5177\u6240\u9700\u8981\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u4e48$f$\u662f\u4e00\u4e2a\u5355\u5cf0\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u5206\u6cd5\u6c42\u89e3\u3002\n\n$f(x)$\u53ef\u4ee5\u901a\u8fc7\u8d2a\u5fc3\u7684\u65b9\u6cd5\u6c42\u51fa\uff0c\u8fd9\u4e2a\u7a0d\u540e\u8be6\u7ec6\u4ecb\u7ecd\u3002\n\n\n\u2014\u2014\u2014\u2014\n\n\n- \u63a5\u4e0b\u6765\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\u8fd9\u4e2a\u5355\u5cf0\u3002\u5047\u8bbe\u5f53$x=t$\u65f6\u6709\u6700\u4f18\u89e3$f(t)$\u3002\u82e5\u53d6$x = t+1$\uff0c\u90a3\u4e48\u5c31\u4f1a\u591a\u4e86\u4e00\u4e2a\u65b0\u4e70\u7684\u73a9\u5177\u6ca1\u6709\u7528\uff0c\u6d6a\u8d39\u4e86\uff0c\u4e0d\u4f1a\u51fa\u73b0\u66f4\u4f18\u89e3\uff0c\u4e0d\u96be\u53d1\u73b0\u5f53$x = t + k ( k \\in N^* )$\uff0c\u8be5\u7ed3\u8bba\u5747\u6210\u7acb\uff1b\u82e5\u53d6$x = t - 1$\uff0c\u8003\u8651\u4f7f\u7528\u8d39\u7528\u6d41\u6c42\u89e3\u65f6\uff0c\u4e5f\u5c31\u662f\u6709\u6709\u4e00\u6761\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u6ca1\u6709\u8d70\uff0c\u53ef\u80fd\u8d70\u7684\u662f\u5176\u4ed6\u6700\u77ed\u8def\u5f84\u6216\u8005\u6b21\u77ed\u8def\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u66f4\u4f18\u89e3\uff0c$x = t-k$\u65f6\u7c7b\u4f3c\u3002\n\n\n\u2014\u2014\u2014\u2014\n\n\n- \u7136\u540e\u8bf4\u8bf4\u8d2a\u5fc3\u6cd5\u8ba1\u7b97$f(x)$\u3002\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u4e0d\u59a8\u8bbe$c1 \\le c2$\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u524d\u6240\u9700\u8981\u7684\u73a9\u5177\uff0c\u9996\u5148\u5e94\u8be5\u8003\u8651\u5df2\u7ecf\u8d2d\u4e70\u4f46\u662f\u8fd8\u6ca1\u6709\u4f7f\u7528\u7684\u65b0\u73a9\u5177\uff0c\u56e0\u4e3a\u989d\u5916\u82b1\u8d39\u4e3a0\uff1b\u5728\u8fd9\u4e4b\u540e\uff0c\u518d\u8003\u8651\u4fbf\u5b9c\u70b9\u7684$c1$\uff0c\u800c\u4e14\u662f\u79bb\u5f53\u524d\u8d8a\u8fd1\u8d8a\u597d\uff0c\u56e0\u4e3a\u518d\u5f80\u524d\u7684\u5929\u6570\u53ef\u80fd\u6ca1\u6709\u8db3\u591f\u7684\u810f\u73a9\u5177\u7528\u6765\u6d17\uff1b\u6700\u540e\u518d\u8003\u8651\u8d35\u7684$c2$\uff0c\u8fd9\u65f6\u5019\u5e94\u8be5\u79bb\u5f53\u524d\u8d8a\u8fdc\u8d8a\u597d\uff0c\u56e0\u4e3a\u8d8a\u5f80\u524d\u9760\u7684\u8bdd\uff0c\u6d17\u597d\u7684\u73a9\u5177\u5c31\u6709\u66f4\u5927\u7684\u673a\u4f1a\u7528\u6765\u7528$c1$\u6d17\uff0c\u53ef\u4ee5\u4e3a\u4ee5\u540e\u51cf\u5c11\u82b1\u8d39\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std ;\nvoid Read ( int &x, char c = getchar() ) {\n    for ( x = 0 ; !isdigit(c) ; c = getchar() ) ;\n    for ( ; isdigit(c) ; c = getchar() ) x = 10*x + c - '0' ;\n}\nconst int maxn = 1e5+5, zhf = 0x3f3f3f3f ;\nint n, m, t[maxn], s[maxn], tc, n1, n2, c1, c2 ;\nstruct node {\n    int id, val ;\n} ;\ndeque <node> Q ;\nint calc ( int x ) {\n    int rec = (tc - c2)*x, i, k ;\n    node tmp ;    \n    Q.clear() ;    \n    Q.push_front( (node){-n2, x} ) ;    \n    for ( i = 1 ; i <= n ; i ++ ) {\n        m = t[i] ;\n        if ( i - n1 >= 1 ) Q.push_front( (node){i - n1, t[i - n1]} ) ; \n        while(m) {\n            if ( Q.empty() ) return zhf ;\n            tmp = Q.back() ;\n            if ( tmp.id + n2 <= i && c1 > c2 ) {\n                k = min(m, tmp.val) ;\n                m -= k ; tmp.val -= k ;\n                rec += k*c2 ;\n                Q.pop_back() ;\n                if ( tmp.val ) Q.push_back(tmp) ;\n            } else {\n                tmp = Q.front() ;\n                k = min(m, tmp.val) ;\n                m -= k ; tmp.val -= k ;\n                rec += k*c1 ;\n                Q.pop_front() ;\n                if ( tmp.val ) Q.push_front(tmp) ;\n            }\n        }\n    }\n    return rec ;\n}\nint main() {\n    int i, k, l = 1, r = 0, mid1, mid2 ;\n    Read(n) ; Read(n1) ; Read(n2) ; Read(c1) ; Read(c2) ; Read(tc) ;\n    if ( n1 > n2 ) swap(n1, n2), swap(c1, c2) ;\n    for ( i = 1 ; i <= n ; i ++ ) {\n        Read(t[i]) ;\n        r += t[i] ;\n    }\n    while ( r - l > 20 ) {\n        mid1 = (l*2 + r)/3 ;\n        mid2 = (l + r*2)/3 ;\n        if ( calc(mid1) >= calc(mid2) ) l = mid1 ;\n        else r = mid2 ;\n    }\n    k = zhf ;\n    for ( i = l ; i <= r ; i ++ )\n        k = min(k, calc(i)) ;    \n    printf ( \"%d\\n\", k ) ;    \n    return 0 ;\n}\n\n```\n\n\n[1]: http://blog.csdn.net/wt\\_cnyali\n",
        "postTime": 1506094782,
        "uid": 39497,
        "name": "GoAway",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2917 \u3010[USACO08NOV]\u73a9\u5177Toys\u3011"
    }
]