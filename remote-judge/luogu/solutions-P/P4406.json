[
    {
        "content": "\u8fd9\u4e2a\u9898\u5f88\u663e\u7136\u7684\u626b\u63cf\u7ebf\n\n\u5148\u679a\u4e3e\u6bcf\u6761\u8fb9\u628a\u6bcf\u4e2a\u4ea4\u70b9\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6309\u4ea4\u70b9\u7684x\u5750\u6807\u5f53\u626b\u63cf\u7ebf\uff0c\u6392\u5e8f\uff0c\u7b54\u6848\u5373\u4e3a\u76f8\u90bb\u4e24\u6761\u626b\u63cf\u7ebf\u5404\u79cd\u4e0e\u4e09\u89d2\u5f62\u76f8\u4ea4\u957f\u5ea6\u548c*\u626b\u63cf\u7ebf\u4e4b\u95f4\u7684\u8ddd\u79bb/2\uff08\u626b\u63cf\u7ebf\u4e4b\u95f4\u7684\u4e09\u89d2\u5f62\u90e8\u5206\u90fd\u662f\u68af\u5f62\uff09\n\n\u6bcf\u6761\u626b\u63cf\u7ebf\u6c42\u51fa\u5b83\u7ecf\u8fc7\u4e86\u591a\u5c11\u9762\u79ef\uff0c\u6c42\u7684\u65f6\u5019\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u6c42\u548c\u4e09\u8fb9\u662f\u5426\u6709\u4ea4\uff0c\u5982\u679c\u4ea4\u70b9\u8d85\u8fc7\u4e00\u4e2a\uff08\u53ef\u4ee5\u4e0d\u5224\u662f\u4e0d\u662f\u540c\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5982\u679c\u662f\u626b\u63cf\u7ebf\u548c\u4e09\u89d2\u5f62\u7684\u4e00\u4e2a\u70b9\u76f8\u4ea4\uff0c\u8ba1\u5165\u7b54\u6848\u7684\u957f\u5ea6\u662f0\uff09\uff0c\u5c31\u628a\u4e24\u4e2a\u4ea4\u70b9\u4e4b\u95f4\u7684\u7ebf\u6bb5\u5b58\u6210pair\uff08y\u5c0f\u7684\u5f53first\uff09\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u76f8\u4ea4\u7ebf\u6bb5\u6392\u5e8f\uff0c\u626b\u63cf\u603b\u9762\u79ef\n\n\u626b\u63cf\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u5f53\u524d\u533a\u95f4\uff0c\u521d\u59cb\u5316\u4e3a[-inf,-inf]\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u65b0\u7ebf\u6bb5\u65f6\uff0c\u5982\u679c\u65b0\u7ebf\u6bb5\u548c\u5f53\u524d\u533a\u95f4\u65e0\u4ea4\uff0c\u5c31\u628a\u5f53\u524d\u533a\u95f4\u8ba1\u5165\u7b54\u6848\uff08\u7531\u4e8e\u6309\u8d77\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e4b\u540e\u4e0d\u4f1a\u518d\u6709\u533a\u95f4\u548c\u5f53\u524d\u533a\u95f4\u6709\u4ea4\u4e86\uff09\uff0c\u7136\u540e\u628a\u8bb0\u5f55\u7684\u533a\u95f4\u66f4\u65b0\u4e3a\u65b0\u7684\u533a\u95f4\uff0c\u5426\u5219\u66f4\u65b0\u53f3\u7aef\u70b9\uff08\u53d6max\uff09\n\n\u7edf\u8ba1\u7b54\u6848\u7684\u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\ndouble l=seg[1].x,r=seg[1].y,sum=0.0;\n    for (int i=2;i<=cnt;++i)\n    {\n        if (seg[i].x-r>eps) sum+=r-l,l=seg[i].x,r=seg[i].y;\n        else r=max(r,seg[i].y);\n    }\n    sum+=r-l;\n    return sum;\n```\n\u7136\u540e\u5982\u679c\u6309\u4e0a\u9762\u7684\u601d\u8def\u505a\u4f1aWA\u7b2c\u4e8c\u4e2a\u70b9\u4ee5\u53ca\u7b2c\u4e5d\u4e2a\u70b9\u53ef\u80fd\u51fa\u73b0\u5404\u79cd\u9519\u8bef\n\u95ee\u9898\u5728\u4e8e\u6709\u4e00\u6761\u8fb9\u548cy\u8f74\u5e73\u884c\u7684\u8fb9\n\u6bd4\u5982\u8fd9\u6837\u7684\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/29030.png)\n\n\u5728\u626b\u63cf\u5230\u5b83\u5de6\u8fb9\u7684\u65f6\u5019\u4f1a\u8bb0\u5f55\u5de6\u8fb9\u90a3\u4e2a\u8fb9\u7684\u8ddd\u79bb\uff0c\u4f46\u8fd9\u6761\u626b\u63cf\u7ebf\u548c\u524d\u4e00\u6761\u626b\u63cf\u7ebf\u7edf\u8ba1\u7b54\u6848\u65f6\u8fd9\u4e2a\u8fb9\u5e76\u4e0d\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u8981\u7279\u5224\u8fd9\u4e2a\uff0c\u5c31\u662f\u6bcf\u6761\u626b\u63cf\u7ebf\u4f5c\u4e3a\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u90a3\u6761\u626b\u63cf\u7ebf\u7edf\u8ba1\u7b54\u6848\u65f6\u8981\u5206\u522b\u8ba1\u7b97\u76f8\u4ea4\u9762\u79ef\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u79cd\u4e09\u89d2\u5f62\u5c31\u7279\u5224\u4e00\u4e0b\u662f\u4e0d\u662f\u5728\u5f53\u524d\u7edf\u8ba1\u7b54\u6848\u7684\u533a\u57df\u4ee5\u5916\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u91ccMinus\u662f\u5f53\u5de6\u8fb9\u7684\u626b\u63cf\u7ebf\u65f6\u7edf\u8ba1\u7b54\u6848\u7684\u51fd\u6570\uff0cPlus\u662f\u5f53\u53f3\u8fb9\u7684\u626b\u63cf\u7ebf\u65f6\u7edf\u8ba1\u7b54\u6848\u7684\u51fd\u6570\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u5dee\u522b\u5728\u7b2c\u56db\u884c\u7684\u5224\u65ad\u6761\u4ef6\uff08\u8f93\u5165\u65f6\u628a\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u70b9\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e86\uff09\uff0c\u81ea\u5df1\u60f3\u8c61\u4e00\u4e0b\u5c31\u77e5\u9053\u5dee\u522b\u5728\u54ea\u4e86\n\n\uff08\u6211\u81ea\u5df1\u7684\u4ee3\u7801\u6709\u7cbe\u5ea6\u95ee\u9898\uff08\u5e94\u8be5\u662f\u6ca1\u6709\u5224eps\u7684\u539f\u56e0\uff09\uff0c\u5f00long double\u53c8\u4f1aT\u4e00\u4e2a\uff0cO2\u90fd\u6551\u4e0d\u4e86\uff0c\u5c31\u5148\u653e\u4e00\u4e2a\u6307\u5bfc\u6211\u5199\u51fa\u4ee3\u7801\u7684\u4ee3\u7801\uff09\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\n#define N 105\n\nconst double eps=1e-12;\nconst double inf=1e9;\nint dcmp(double x)\n{\n    if (x<=eps&&x>=-eps) return 0;\n    return (x>0)?1:-1;\n}\nstruct Vector\n{\n    double x,y;\n    Vector(double X=0,double Y=0)\n    {\n        x=X,y=Y;\n    }\n    bool operator < (const Vector &a) const\n    {\n        return x<a.x||(x==a.x&&y<a.y);\n    }\n    void read(){scanf(\"%lf%lf\",&x,&y);}\n};\ntypedef Vector Point;\nstruct Line\n{\n    Point p,q;\n    Line(Point P=Point(0,0),Point Q=Point(0,0))\n    {\n        p=P,q=Q;\n    }\n};\nVector operator + (Vector a,Vector b) {return Vector(a.x+b.x,a.y+b.y);}\nVector operator - (Vector a,Vector b) {return Vector(a.x-b.x,a.y-b.y);}\nVector operator * (Vector a,double b) {return Vector(a.x*b,a.y*b);}\n\nint n,LSH;\ndouble ans;\ndouble lsh[N*N*10];\nPoint seg[N];\nLine line[N][3];\n\ndouble Cross(Vector a,Vector b)\n{\n    return a.x*b.y-a.y*b.x;\n}\nbool ins(Point A,Point B,Point C,Point D)\n{\n    Vector v,w,u;\n    v=A-C,w=C-D,u=B-D;\n    if (dcmp(Cross(v,w))==dcmp(Cross(u,w))) return 0;\n    v=C-A,w=B-A,u=D-A;\n    if (dcmp(Cross(v,w))==dcmp(Cross(u,w))) return 0;\n    return 1;\n}\nPoint GLI(Point P,Vector v,Point Q,Vector w)\n{\n    Vector u=P-Q;\n    double t=Cross(w,u)/Cross(v,w);\n    return P+v*t;\n}\ndouble Plus(double x)\n{\n    int cnt=0;\n    for (int i=1;i<=n;++i)\n    {\n        if (dcmp(line[i][1].p.x-line[i][1].q.x)==0&&dcmp(x==line[i][1].p.x))\n            continue;\n        double Min=inf,Max=-inf;\n        for (int j=1;j<=3;++j)\n        {\n            if (x<line[i][j].p.x||x>line[i][j].q.x) continue;\n            if (dcmp(line[i][j].p.x-line[i][j].q.x)==0) continue;\n            Point P=GLI(line[i][j].p,line[i][j].q-line[i][j].p,Point(x,-inf),Vector(0,inf));\n            Min=min(Min,P.y),Max=max(Max,P.y);\n        }\n        if (Max-Min>eps) seg[++cnt]=Point(Min,Max);\n    }\n    sort(seg+1,seg+cnt+1);\n    if (!cnt) return 0.0;\n    double l=seg[1].x,r=seg[1].y,sum=0.0;\n    for (int i=2;i<=cnt;++i)\n    {\n        if (seg[i].x-r>eps) sum+=r-l,l=seg[i].x,r=seg[i].y;\n        else r=max(r,seg[i].y);\n    }\n    sum+=r-l;\n    return sum;\n}\ndouble Minus(double x)\n{\n    int cnt=0;\n    for (int i=1;i<=n;++i)\n    {\n        if (dcmp(line[i][2].p.x-line[i][2].q.x)==0&&dcmp(x==line[i][2].p.x))\n            continue;\n        double Min=inf,Max=-inf;\n        for (int j=1;j<=3;++j)\n        {\n            if (x<line[i][j].p.x||x>line[i][j].q.x) continue;\n            if (dcmp(line[i][j].p.x-line[i][j].q.x)==0) continue;\n            Point P=GLI(line[i][j].p,line[i][j].q-line[i][j].p,Point(x,-inf),Vector(0,inf));\n            Min=min(Min,P.y),Max=max(Max,P.y);\n        }\n        if (Max-Min>eps) seg[++cnt]=Point(Min,Max);\n    }\n    sort(seg+1,seg+cnt+1);\n    if (!cnt) return 0.0;\n    double l=seg[1].x,r=seg[1].y,sum=0.0;\n    for (int i=2;i<=cnt;++i)\n    {\n        if (seg[i].x-r>eps) sum+=r-l,l=seg[i].x,r=seg[i].y;\n        else r=max(r,seg[i].y);\n    }\n    sum+=r-l;\n    return sum;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i)\n    {\n        Point A,B,C;A.read(),B.read(),C.read();\n        if (A.x>B.x) swap(A.x,B.x),swap(A.y,B.y);\n        if (B.x>C.x) swap(B.x,C.x),swap(B.y,C.y);\n        if (A.x>B.x) swap(A.x,B.x),swap(A.y,B.y);\n        lsh[++LSH]=A.x,lsh[++LSH]=B.x,lsh[++LSH]=C.x;\n        line[i][1]=Line(A,B),line[i][2]=Line(B,C);line[i][3]=Line(A,C);\n    }\n    for (int i=1;i<=n;++i)\n        for (int j=1;j<=3;++j)\n            for (int k=i+1;k<=n;++k)\n                for (int l=1;l<=3;++l)\n                {\n                    Point A=line[i][j].p,B=line[i][j].q,C=line[k][l].p,D=line[k][l].q;\n                    if (ins(A,B,C,D))\n                    {\n                        Point q=GLI(A,B-A,C,D-C);\n                        lsh[++LSH]=q.x;\n                    }\n                }\n    sort(lsh+1,lsh+LSH+1);LSH=unique(lsh+1,lsh+LSH+1)-lsh-1;\n    double last=0.0,now;\n    for (int i=1;i<=LSH;++i)\n    {\n        now=Plus(lsh[i]);\n        if (i>1) ans+=(now+last)*(lsh[i]-lsh[i-1])/2.0;\n        last=Minus(lsh[i]);\n    }\n    printf(\"%.2lf\\n\",ans-eps);\n}\n```\n\n\u4ee3\u7801\u6765\u6e90[\u4f20\u9001\u95e8](https://blog.csdn.net/Clove_unique/article/details/70327717)",
        "postTime": 1534430387,
        "uid": 9517,
        "name": "a2956331800",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4406 \u3010[CQOI2005]\u4e09\u89d2\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "# Description\n\n\u7ed9\u51fa $n$ \u4e2a\u4e09\u89d2\u5f62\uff0c\u6c42\u8fd9 $n$ \u4e2a\u4e09\u89d2\u5f62\u5e76\u7684\u9762\u79ef\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq n \\leq 100$\uff0c$-10^6 \\leq x, y \\leq 10^6$\u3002  \n\u65f6\u7a7a\u9650\u5236\uff1a$1000 \\ \\mathrm{ms} / 128 \\ \\mathrm{MiB}$\u3002\n\n# Solution\n\n\u626b\u63cf\u7ebf\u7684\u505a\u6cd5\u5927\u5bb6\u90fd\u4f1a\uff0c\u8fd9\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u662f\u81ea\u9002\u5e94\u8f9b\u666e\u68ee\u79ef\u5206\u3002\n\n\u8bb0 $f(t)$ \u8868\u793a\uff1a\u7ed9\u51fa\u7684 $n$ \u4e2a\u4e09\u89d2\u5f62\u4e0e\u76f4\u7ebf $x = t$ \u7684\u4ea4\u96c6\u957f\u5ea6\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5373\u4e3a\uff1a\n$$\n\\int_a^b f(x) \\ \\text{dx}\n$$\n\u5176\u4e2d $a, b$ \u5206\u522b\u8868\u793a\u8f93\u5165\u7684 $x$ \u4e2d\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u81ea\u9002\u5e94\u8f9b\u666e\u68ee\u79ef\u5206\u505a\u3002\u73b0\u5728\u7684\u5173\u952e\u662f\u8981\u5982\u4f55\u6c42\u51fa\u4efb\u610f\u4e00\u4e2a $f(t)$\u3002  \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u8003\u8651\u6c42\u51fa\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e0e\u76f4\u7ebf $x = t$ \u7684\u76f8\u4ea4\u90e8\u5206\u662f\u54ea\u4e00\u6bb5\u533a\u95f4\uff0c\u628a\u8fd9\u4e9b\u533a\u95f4\u63d0\u51fa\u6765\uff0c\u533a\u95f4\u5408\u5e76\u5373\u53ef\u6c42\u51fa\u51fd\u6570\u503c\u3002\u8ba1\u7b97\u4e00\u4e2a\u51fd\u6570\u503c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n \\log n)$ \u7684\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u7136\u540e\u9700\u8981\u63d0\u9ad8\u7cbe\u5ea6\uff1a\n\n- \u53ef\u4ee5\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u5f3a\u5236\u6267\u884c\u7684\u6700\u5c11\u8fed\u4ee3\u5c42\u6570\u3002\n- \u53ef\u4ee5\u5c06\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7684\u6700\u5c0f $x$ \u503c\u548c\u6700\u5927 $x$ \u503c\u63d0\u51fa\u6765\u540e\u6392\u5e8f\uff0c\u5bf9\u6240\u6709\u76f8\u90bb\u70b9\u6784\u6210\u7684\u533a\u95f4\u6c42\u79ef\u5206\uff0c\u5c06\u8fd9\u4e9b\u79ef\u5206\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u540e\u5927\u533a\u95f4 $[a, b]$ \u7684\u79ef\u5206\u3002\n\n# Code\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst double eps = 1e-9;\nconst double INF = 1e6;\n\nint sgn(double n) {\n\tif (fabs(n) < eps) return 0;\n\treturn n > 0 ? 1 : -1; \n}\n\nint dcmp(double x, double y) {\n\treturn sgn(x - y);\n}\n\nstruct point {\n\tdouble x, y;\n\n\tpoint() { x = y = 0; }\n\tpoint(double A, double B) : x(A), y(B) {}\n};\n\ntypedef point vec;\n\nvec operator + (vec a, vec b) { return vec(a.x + b.x, a.y + b.y); }\nvec operator - (vec a, vec b) { return vec(a.x - b.x, a.y - b.y); }\nvec operator * (vec a, double b) { return vec(a.x * b, a.y * b); }\nvec operator / (vec a, double b) { return vec(a.x / b, a.y / b); }\n\nbool operator < (point a, point b) {\n\tif (dcmp(a.x, b.x)) return a.x < b.x;\n\treturn a.y < b.y;\n}\n\ndouble cross(vec a, vec b) {\n\treturn a.x * b.y - a.y * b.x;\n}\n\npoint line_intersection(point A, point B, point C, point D) {\n\tpoint p = A, q = C;\n\tvec x = B - A, y = D - C;\n\n\tvec u = q - p;\n\tdouble t = cross(u, y) / cross(x, y);\n\treturn p + x * t;\n}\n\nconst int N = 110;\n\nint n;\nvector<point> a[N];\n\nint t;\ndouble pos[N * 2];\n\nint m;\nstruct range {\n\tdouble l, r;\n\n\trange() {}\n\trange(double A, double B) : l(A), r(B) {}\n} b[N];\n\nbool ruler(range a, range b) {\n\tif (dcmp(a.l, b.l)) return a.l < b.l;\n\treturn a.r < b.r;\n}\n\ndouble f(double x) {\n\tpoint Ga = point(x, 0), Gb = point(x, 1);\n\n\tm = 0;\n\tfor (int i = 1; i <= n; i ++) {\n\t\tvector<point> u = a[i];\n\n\t\tif (dcmp(x, u[0].x) < 0) continue;\n\t\tif (dcmp(x, u[2].x) > 0) continue;\n\n\t\tif (!dcmp(u[0].x, u[1].x) && !dcmp(u[0].x, x)) {\n\t\t\tb[++ m] = range(u[0].y, u[1].y);\n\t\t} else if (!dcmp(u[1].x, u[2].x) && !dcmp(u[1].x, x)) {\n\t\t\tb[++ m] = range(u[1].y, u[2].y);\n\t\t} else {\n\t\t\tvector<double> seq;\n\t\t\tseq.clear();\n\n\t\t\tfor (int j = 0; j < 3; j ++) {\n\t\t\t\tpoint A = u[j], B = u[(j + 1) % 3];\n\t\t\t\tif (B < A) swap(A, B);\n\n\t\t\t\tif (dcmp(x, A.x) < 0) continue;\n\t\t\t\tif (dcmp(x, B.x) > 0) continue;\n\n\t\t\t\tseq.push_back(line_intersection(A, B, Ga, Gb).y);\n\t\t\t}\n\n\t\t\tsort(seq.begin(), seq.end());\n\t\t\tb[++ m] = range(seq[0], seq[seq.size() - 1]);\n\t\t}\n\t}\n\n\tif (!m) return 0;\n\n\tsort(b + 1, b + 1 + m, ruler);\n\n\tdouble ans = 0;\n\tdouble st = b[1].l, ed = b[1].r;\n\n\tfor (int i = 2; i <= m; i ++) {\n\t\tif (dcmp(b[i].l, ed) > 0)\n\t\t\tans += ed - st,\n\t\t\tst = b[i].l, ed = b[i].r;\n\t\telse\n\t\t\ted = max(ed, b[i].r);\n\t}\n\n\tans += ed - st;\n\n\treturn ans;\n}\n\ndouble simpson(double Lv, double Mv, double Rv, double len) {\n\treturn (Lv + Rv + 4 * Mv) * len / 6; \n}\n\ndouble asr(double l, double r, double Lv, double Mv, double Rv, int dep) {\n\tdouble mid = (l + r) / 2;\n\tdouble A = f((l + mid) / 2), B = f((mid + r) / 2);\n\n\tdouble s = simpson(Lv, Mv, Rv, r - l);\n\tdouble Ls = simpson(Lv, A, Mv, mid - l);\n\tdouble Rs = simpson(Mv, B, Rv, r - mid);\n\n\tif (!dcmp(s, Ls + Rs) && dep <= 0) return Ls + Rs;\n\treturn asr(l, mid, Lv, A, Mv, dep - 1) + asr(mid, r, Mv, B, Rv, dep - 1);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\n\tfor (int i = 1; i <= n; i ++) {\n\t\tfor (int j = 0; j < 3; j ++) {\n\t\t\tdouble x, y;\n\t\t\tscanf(\"%lf%lf\", &x, &y);\n\n\t\t\ta[i].push_back(point(x, y));\n\t\t}\n\n\t\tsort(a[i].begin(), a[i].end());\n\n\t\tpos[++ t] = a[i][0].x;\n\t\tpos[++ t] = a[i][2].x;\n\t}\n\n\tsort(pos + 1, pos + 1 + t);\n\n\tdouble ans = 0;\n\n\tfor (int i = 2; i <= t; i ++) {\n\t\tif (!dcmp(pos[i - 1], pos[i])) continue;\n\n\t\tdouble l = pos[i - 1], r = pos[i];\n\t\tans += asr(l, r, f(l), f((l + r) / 2), f(r), 5);\n\t}\n\n\tprintf(\"%.2lf\\n\", ans);\n\n\treturn 0;\n}\n```",
        "postTime": 1629901063,
        "uid": 129578,
        "name": "Calculatelove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4406\u3010[CQOI2005] \u4e09\u89d2\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u8fb9\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u597d\u5199\u7684\u505a\u6cd5\uff0c\u867d\u7136\u8fd8\u662f\u626b\u63cf\u7ebf\u3002\n\n\u4e0d\u8003\u8651\u7279\u6b8a\u60c5\u51b5\uff0c\u626b\u63cf\u7ebf\u505a\u6cd5\u662f\u5bb9\u6613\u7684\uff1a\u6c42\u51fa\u5e73\u9762\u4e2d\u6240\u6709\u7ebf\u6bb5\u7684\u4ea4\u70b9\uff0c\u7136\u540e\u7eb5\u5750\u6807\u626b\u4e00\u904d\u626b\u63cf\u7ebf\u3002\n\n\u6bcf\u6b21\u6c42\u51fa\u76f4\u7ebf $y=y_{now}$ \u4e0e\u6240\u6709\u4e09\u89d2\u5f62\u7684\u5e76\u7684\u4ea4\u96c6\u957f\u5ea6 $L$\uff0c\u8fd9\u4e2a\u76f4\u63a5\u6a21\u62df\u662f $O(n\\log n)$\u3002\n\n\u5219\u5bf9\u4e8e\u76f8\u90bb\u4e24\u4e2a\u626b\u63cf\u7ebf $y=y_{pre}$ \u548c $y=y_{now}$\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f $\\frac{(L_{now}+L_{pre})|y_{now}-y_{pre}|}{2}$\u3002\n\n\u4f46\u662f\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5f53\u5b58\u5728\u6709\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684\u4e00\u6761\u8fb9\u4e0e $y$ \u8f74\u5e73\u884c\u65f6\u4f1a\u591a\u7edf\u8ba1\u4e00\u5757\u4e0d\u5728\u7b54\u6848\u5185\u7684\u90e8\u5206\u3002\n\n\u7279\u5224\uff1f\u4e0d\u5b58\u5728\u7684\u3002~~\u8003\u8651\u4eba\u7c7b\u667a\u6167~~\uff0c\u5c06\u6240\u6709\u4e09\u89d2\u5f62\u7ed5\u539f\u70b9\u65cb\u8f6c\u4e00\u5b9a\u7684\u89d2\u5ea6\uff0c\u90a3\u5c31~~\u57fa\u672c~~\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u4e86\u3002\n\n\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n^3\\log n)$\u3002\n\n[\u5199\u4e11\u4e86\u7684 code](https://www.luogu.com.cn/paste/pfh556lv)",
        "postTime": 1673103535,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P4406 [CQOI2005] \u4e09\u89d2\u5f62\u9762\u79ef\u5e76"
    }
]