[
    {
        "content": "\u697c\u4e0a\u4e24\u7bc7\u9898\u89e3\u5199\u7684\u6709\u4e00\u70b9\u70b9\u590d\u6742\uff0c\u6709map\u8fd8\u5199\u4e86\u79bb\u6563\u5316\u2026\u2026\n\n\u5dee\u5206\u56fa\u7136\u662f\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f\uff0c\u4f46\u5176\u5b9e\u6709\u4e00\u79cd\u66f4\u597d\u7684\u7406\u89e3\u65b9\u6cd5\u548c\u66f4\u7b80\u6d01\u7684\u4ee3\u7801\u3002\n\n\u90a3\u4e48\u73b0\u5728\u6211\u5c31\u6765\u8bb2\u4e00\u8bb2\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u6587\u5b57\u8bed\u8a00\uff1a\u6c42\u6811\u4e0a\u6700\u5927\u6743\u503c\u968f\u7956\u5b59\u5173\u7cfb\u4e0d\u964d\u7684\u70b9\u96c6\u5927\u5c0f\n\n\u6570\u5b66\u8bed\u8a00\uff1a\u6c42 $|S_{max}|$ \u4f7f\u5f97 $\\forall{i,j(ancestor\\ of \\ i)\\in S}, w_i\\leq w_j$\n\n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u6211\u4eec\u5b9a\u4e49\u8fd9\u79cd\u96c6\u5408\u4e3a\u201c\u6811\u4e0aLIS\u201d\u3002\n\n### \u9898\u89e3\n\n\u8003\u8651\u91c7\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\n\n\u7c7b\u4f3c\u5904\u7406\u5e8f\u5217LIS\u95ee\u9898\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $u$ \u4f7f\u7528multiset\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408 $f_u$ \u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\n\n- $f_{u,i}$ \u8868\u793a\u5728 $u$ \u7684\u5b50\u6811\u4e2d\u9009\u62e9 $i$ \u4e2a\u70b9\u7ec4\u6210\u7684\u6240\u6709\u6811\u4e0aLIS\u4e2d\uff0c\u7ea7\u522b\u503c $w$ \u6700\u5c0f\u503c\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002\n\n- \u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684 $ans_u=|f_u|$\uff08$|f_u|$\u8868\u793a\u96c6\u5408 $f_u$ \u7684\u5927\u5c0f\uff09\uff08\u8be5\u6027\u8d28\u53ef\u7531\u4e0a\u8ff0\u6027\u8d28\u53d1\u73b0\uff09\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 $u$, $f_u$\u663e\u7136\u53ea\u542b\u6709 $w_u$\uff0c\u6ee1\u8db3\u6811\u4e0aLIS\u6027\u8d28\u3002\n\n\u518d\u8003\u8651\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684 $u$\n\n\u5047\u8bbe\u70b9 $u$ \u7684\u6240\u6709\u5b69\u5b50 $v$ \u7684 $f_v$ \u5df2\u7ecf\u6ee1\u8db3\u6c42\u51fa\u5e76\u6ee1\u8db3\u4e0a\u8ff0\u6027\u8d28\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u6c42\u51fa $u$ \u7684 $f_u$ \u5462\uff1f\n\n\u9996\u5148\uff0c\u663e\u7136 $u$ \u7684\u6240\u6709\u5b69\u5b50\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u8981\u4ece\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\uff08\u9664 $u$ \uff09\u4e2d\u9009\u51fa\u5927\u5c0f\u4e3a $i$ \u7684\u6811\u4e0aLIS\uff0c\u53ef\u4ee5\u76f4\u63a5\u8d2a\u5fc3\u5730\u9009\u6240\u6709\u5b69\u5b50\u96c6\u5408\u4e2d\u6700\u5927\u7684 $i$ \u4e2a\uff0c\u4e8e\u662f\u53ea\u9700\u5c06\u5168\u90e8 $f_v$ \u53d6\u5e76\u96c6\u5e76\u6392\u5e8f\u5373\u53ef\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b69\u5b50\u4eec\u7684 $f_v$ \u96c6\u5408\u5168\u90e8\u542f\u53d1\u5f0f\u5408\u5e76\u4e22\u5165 $f_u$ \u7684multiset \uff0c\u8bb0 $S=\\bigcup_{v\\in u.son}f_v$ \n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u5c06 $u$ \u52a0\u5165 $S$ \u96c6\u5408\u5e76\u4f7f\u96c6\u5408\u6ee1\u8db3\u6027\u8d28\n\n\u6211\u4eec\u76f4\u63a5\u5728multiset\u4e0a\u4e8c\u5206\u51fa\u7b2c\u4e00\u4e2a $i$ \u6ee1\u8db3 $f_{u,i}\\geq w_u$ \u90a3\u4e48\u6211\u4eec\u5c06 $u$ \u63a5\u5728 $i$ \u524d\u663e\u7136\u662f\u6700\u4f18\u65b9\u6848\uff0c\u6b64\u65f6 $f_{u,i-1}$ \u5c31\u53ef\u4ee5\u88ab $w_u$ \u66ff\u6362\uff0c\u90a3\u4e48\u73b0\u5728\u7684\u96c6\u5408\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684 $f_u$\uff0c\u5e76\u4e14\u6ee1\u8db3\u6811\u4e0aLIS\u6027\u8d28\u3002\n\n\u6309\u7167\u8fd9\u6837\u7684\u65b9\u5f0f\u5728\u6811\u4e0adfs\u5373\u53ef\u6c42\u51fa $f_1$\uff0c\u6b64\u65f6\u7b54\u6848\u5373\u4e3a $|f_1|$\u3002\n\n### \u590d\u6742\u5ea6\u8bc1\u660e\n\n\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a $O(nlog^2n)$\n\n\u8003\u8651\u540c\u6837\u91c7\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\n\n\u8bb0 $T_u$ \u8868\u793a\u5904\u7406\u51fa $f_u$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c$S_u$\u8868\u793a $u$ \u7684\u5b50\u6811\u5927\u5c0f\n\n\u6211\u4eec\u9700\u8981\u8bc1\u660e $T_u=S_ulog^2S_u$\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 $u$\uff0c$S_u=1$\uff0c\u6b64\u65f6\u53ea\u9700\u5728multiset\u4e2d\u63d2\u5165 $w_u$ \u590d\u6742\u5ea6\u4e3a $O(1)$\uff0c\u6ee1\u8db3$T_i=S_ulog^2S_u$\n\n\u518d\u8003\u8651\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u7684 $u$\n\n\u5047\u8bbe\u70b9 $u$ \u7684\u6240\u6709\u5b69\u5b50 $v$ \u7684 $T_v=S_vlog^2S_v$ \n\n\u90a3\u4e48 $T_i=\\sum_{v\\in u.son}T_v+T_{merge}$\n\n\u56e0\u4e3a\u5b50\u5b59\u4eec\u5305\u542b\u7684\u8282\u70b9\u4e2a\u6570$\\sum_{v\\in u.son}S_v+1=S_u$\n\n\u6240\u4ee5$\\sum_{v\\in u.son}T_v\\leq S_ulog^2S_u$\n\n\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e3a $S_ulogS_u$\uff0c\u4f7f\u7528multiset\u7ef4\u62a4\u52a0\u4e00\u4e2alog\uff0c$T_{merge}=S_ulog^2S_u$\n\n\u6240\u4ee5$T_u$\u4e0e $S_ulog^2S_u$ \u540c\u9636\n\n\u8bc1\u6bd5\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nmultiset<int> f[N];\nmultiset<int>::iterator it;\nint n, w[N], ans;\nint h[N], to[N], nxt[N], t;\nbool comp(int x, int y) { return w[x] < w[y]; }\nvoid add(int u, int v) { to[++t] = v, nxt[t] = h[u], h[u] = t; }\nvoid merge(int u, int v) {\n    if(f[u].size() < f[v].size()) swap(f[u], f[v]);\n    for(it = f[v].begin(); it != f[v].end(); ++it) f[u].insert(*it);\n}\nvoid dfs(int u) {\n    for(int i = h[u]; i; i = nxt[i]) dfs(to[i]), merge(u, to[i]);\n    f[u].insert(w[u]);\n    it = f[u].lower_bound(w[u]);\n    if(it != f[u].begin()) f[u].erase(--it);\n}\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i) scanf(\"%d\", &w[i]);\n    for(int i = 2; i <= n; ++i) {\n        int f;\n        scanf(\"%d\", &f);\n        add(f, i);\n    }\n    dfs(1);\n    printf(\"%d\", f[1].size());\n}\n```\n",
        "postTime": 1553757784,
        "uid": 7449,
        "name": "dodo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "\n\u66f4\u68d2\u68d2\u7684\u4f53\u9a8c $\\Longrightarrow$ [$\\it George1123$](https://www.cnblogs.com/George1123/p/13634442.html)\n\n---\n## \u9898\u9762\n\n> [FJOI2018 \u9886\u5bfc\u96c6\u56e2\u95ee\u9898](https://www.luogu.com.cn/problem/P4577)\n\n> \u7ed9\u4e00\u68f5\u6811 $T(|T|=n)$\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e2a\u6743\u503c $w_i$\uff0c\u4ece\u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u70b9\u96c6 $P=\\{x\\in {\\rm node}|x\\in T\\}$\uff0c\u4f7f\u5f97 $\\forall u,v\\in P,v\\in{u{\\rm 's\\ subtree}}$ \u6ee1\u8db3 $w_v\\ge w_u$\uff0c\u6c42 $|P|_{\\max}$\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 2\\cdot 10^5$\uff0c$0<w_i\\le 10^9$\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u8fd9\u91cc\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 $\\rm dp$ \u7684\u505a\u6cd5\uff0c$\\Theta(n\\log n)$ \u4f46\u662f\u8dd1\u5f97\u6700\u6162\uff0c\u89c9\u5f97\u8fd9\u4e2a\u505a\u6cd5\u5c51\u7684\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u91cc\u6012\u65a5 $\\rm George1123$ \u900a\u7136\u540e\u70b9\u8e29\u8d70\u4eba\uff0c\u8fd9\u4e2a\u4f4e\u4f6c\u4e00\u7b49\u7684\u849f\u84bb\u9700\u8981\u60a8\u7684\u6253\u51fb\u3002\n\n\u5148\u5bf9 $w_i$ \u79bb\u6563\u5316\uff0c\u7136\u540e\u60f3 $n^2$ \u7684 $\\rm dp$\uff1a\u8003\u8651\u5230\u6bcf\u4e2a\u8282\u70b9\u8981\u9009\uff0c\u5b83\u7684\u5b50\u6811\u4e2d\u5c31\u53ea\u80fd\u9009 $\\ge$ \u5b83\u6743\u503c\u7684\u3002\u6240\u4ee5\u4ee4 $f(u,x)$ \u8868\u793a\u5728 $u$ \u7684\u5b50\u6811\u4e2d\uff0c\u9009\u7684\u8282\u70b9\u6743\u91cd\u90fd $\\ge x$ \u7684\u6700\u5927\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u5b50\u96c6\u5927\u5c0f\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u8003\u8651\u5b83\u9009\u4e0d\u9009\uff0c\u53ef\u4ee5\u5982\u4e0b\u8f6c\u79fb $dp$\uff1a\n\n$$x\\in [1,n],f(u,x)\\max=\\sum_{v\\in{u{\\rm 's\\ subtree}}}f(v,x)$$\n\n$$x\\in [1,w_u],f(u,x)\\max=\\sum_{v\\in{u{\\rm 's\\ subtree}}}f(v,w_u)$$\n\n\u8003\u8651\u5230\u8981\u533a\u95f4\u8f6c\u79fb\uff0c\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff1b\u8003\u8651\u5230\u8981\u5b50\u6811\u5408\u5e76\u8f6c\u79fb\uff0c\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u5199\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u5019\u8981\u7ef4\u62a4\u4e09\u4e2a\u64cd\u4f5c\uff1a\u6743\u503c\u6c42\u548c $\\rm merge$\u3001\u533a\u95f4\u4e0e $x$ \u53d6 $\\max$\u3001\u5355\u70b9\u6c42\u503c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u505a\u4e86\uff0c\u4f46\u662f\u56e0\u4e3a\u7ebf\u6bb5\u6811\u5408\u5e76\u4e0a\u533a\u95f4\u4fee\u6539\u5f88\u56f0\u96be\uff0c\u6240\u4ee5\u60a8\u65c1\u8fb9\u7684\u5de8\u4f6c zhoukangyang \u4f1a\u6012\u65a5\u7740\u544a\u8bc9\u60a8\u4e00\u4e2a\u66f4\u597d\u7684\u505a\u6cd5\uff1a\u5dee\u5206\u3002\n\n\u5f88\u660e\u663e $\\forall x\\in[1,n-1],u\\in T,f(u,x)\\ge f(u,x+1)$\uff0c\u6240\u4ee5\u4ee4 $g(u,x)=f(u,x)-f(u,x+1)$\uff0c\u7136\u540e\u7ef4\u62a4\u3002\n\n\u4e09\u4e2a\u64cd\u4f5c\u5bf9\u5e94\u7684\u65b0\u505a\u6cd5\u4e3a\uff1a\u7ee7\u7eed\u6743\u503c\u6c42\u548c $\\rm merge$\u3001\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5206\u754c\u70b9\u7136\u540e\u5dee\u5206\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6c42\u548c\u3002\n\n\u7136\u540e\u5c31\u5f88\u597d\u5199\u4e86\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5206\u754c\u70b9\u662f $\\Theta(\\log n)$ \u7684\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n---\n## \u4ee3\u7801\n\n\u4ece $0$ \u5f00\u59cb\u7684\u4e0b\u6807\u8bc1\u660e\u849f\u84bb\u662f\u4e2a $\\rm crab$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair((a),(b))\n#define x first\n#define y second\n#define be(a) (a).begin()\n#define en(a) (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define R(i,a,b) for(int i=(a),I=(b);i<I;i++)\n#define L(i,a,b) for(int i=(b)-1,I=(a)-1;i>I;i--)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=2e5;\nint n,m,a[N],d[N];\nvector<int> e[N];\nvoid adde(int u,int v){e[u].pb(v),e[v].pb(u);}\n\n//SegmentTree\nconst int T=2e7;\n#define mid ((l+r)>>1)\nint tn,ls[T],rs[T],mx[T];\nint newn(){ls[tn]=rs[tn]=-1;return tn++;}\nvoid pushup(int k){\n    // mx[k]=mx[ls[k]]+mx[rs[k]]; \u8fd9\u91cc\u8981\u8003\u8651\u5230\u7a7a\u8282\u70b9\n    mx[k]=0;\n    if(~ls[k]) mx[k]+=mx[ls[k]];\n    if(~rs[k]) mx[k]+=mx[rs[k]];\n}\nvoid add(int&k,int x,int v,int l=0,int r=m){\n    if(r<=x||x+1<=l) return; if(!~k) k=newn();\n    if(r-l==1) return mx[k]+=v,void();\n    add(ls[k],x,v,l,mid),add(rs[k],x,v,mid,r),pushup(k);\n}\nint find(int k,int v,int l=0,int r=m){\n    if(!~k) return -1; if(v>mx[k]) return -1; if(r-l==1) return l;\n    int t; if(~(t=find(rs[k],v,mid,r))) return t;\n    else return find(ls[k],v-(~rs[k]?mx[rs[k]]:0),l,mid); //\u8fd9\u91cc\u867d\u7136\u9012\u5f52\u4e86\u4e24\u6761\u8def\u5f84\uff0c\u4f46\u53ef\u4ee5\u8bc1\u660e\u81f3\u5c11\u6709\u4e00\u6761\u662f O(1) \u7684\n}\nint sum(int k,int x,int l=0,int r=m){\n    if(r<=x) return 0; if(!~k) return 0; if(x<=l) return mx[k];\n    return sum(ls[k],x,l,mid)+sum(rs[k],x,mid,r);\n}\nint merge(int k,int p,int l=0,int r=m){\n    if(!~k||!~p) return ~k?k:p; if(r-l==1) return mx[k]+=mx[p],k;\n    ls[k]=merge(ls[k],ls[p],l,mid),rs[k]=merge(rs[k],rs[p],mid,r);\n    return pushup(k),k;\n}\n\n//Tree\nint rt[N];\nvoid dfs(int u=0,int fa=-1){\n    for(int v:e[u])if(v!=fa)\n        dfs(v,u),rt[u]=merge(rt[u],rt[v]);\n    int t=sum(rt[u],a[u]),p=find(rt[u],t+1);  //\u6279\u91cf\u8f6c\u79fb dp\n    add(rt[u],a[u],1),add(rt[u],p,-1);\n}\n\n//Main\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n;\n    R(i,0,n) cin>>a[i],d[i]=--a[i];\n    sort(d,d+n),m=unique(d,d+n)-d;\n    R(i,0,n) a[i]=lower_bound(d,d+m,a[i])-d; // \u662f d+m \u4e0d\u662f d+n\uff0clower_bound \u7384\u5b66\u51fd\u6570\u8981\u5199\u51c6\n    R(i,1,n){\n        int fa; cin>>fa,--fa;\n        adde(fa,i);\n    }\n    fill(rt,rt+n,-1),dfs();\n    cout<<sum(rt[0],0)<<'\\n';\n    return 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1599561968,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u6811\u4e0a $\\text{LIS}$ \u95ee\u9898\uff0c\u8981\u6c42\u6811\u4e0a\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n# \u601d\u8def\n\u6211\u4eec\u5148\u56de\u5fc6\u4e00\u4e0b\u6b63\u5e38\u7ebf\u6027\u7684 $\\text{LIS}$ \u7684\u65b9\u6cd5\uff0c\u6734\u7d20\u505a\u6cd5\u662f\u679a\u4e3e\u524d\u4e00\u4f4d\uff0c\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\u3002\u4e00\u4e2a\u4f18\u5316\u505a\u6cd5\u662f\uff08\u62ff\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u4e3a\u4f8b\uff09\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u7684\u503c $k$\uff0c\u6211\u4eec\u627e\u5230\u5b83\u7684\u524d\u9a71\uff08\u5c0f\u4e8e\u5b83\u4e14\u6700\u5927\u7684\u6811\uff09\uff0c\u5c06\u5176\u4e0e\u524d\u9a71\u66ff\u6362\u3002\u8fd9\u6837\u5728\u4fdd\u8bc1\u539f\u6709\u5b50\u5e8f\u5217\u6709\u4e0d\u4e0a\u5347\u6027\u8d28\u7684\u540c\u65f6\uff0c\u8fd8\u80fd\u4fdd\u8bc1\u5f53\u524d\u7684\u9009\u62e9\u662f\u6700\u4f18\u7684\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u201c\u7d27\u51d1\u201d\uff09\u3002\n\n\u4e3e\u4f8b\u8bf4\u660e\u4e00\u4e0b\uff0c\u6bd4\u5982\u5b50\u5e8f\u5217 $5,4,1$\uff0c\u6b64\u65f6\u6211\u4eec\u679a\u4e3e\u5230\u4e86 $3$\uff0c\u82e5\u5c06 $1$ \u66ff\u6362\u6210 $3$\uff0c\u5b50\u5e8f\u5217\u5c31\u6210\u4e86 $5,4,3$\uff0c\u8fd9\u6837\u4e00\u6765\u540e\u7eed\u679a\u4e3e\u5230 $2$ \u65f6\uff0c\u8fd8\u662f\u53ef\u4ee5\u5e76\u5165\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u67e5\u8be2\u524d\u9a71\u7684\u76ee\u7684\u6240\u5728\u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u4e9b\u64cd\u4f5c\u4f9d\u7136\u660e\u4e86\uff0c\u4e14\u663e\u7136\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4eec\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5408\u5e76\uff0c\u6700\u540e\u5269\u4f59\u8981\u63d2\u5165\u7684\u5c31\u662f\u5b50\u6811\u6839\u8282\u70b9\u7684\u6743\u503c\uff0c\u4e4b\u540e\u7684\u64cd\u4f5c\u5c31\u662f\u67e5\u8be2\u524d\u9a71\u548c\u66ff\u6362\u4e86\u3002\n# \u5b9e\u73b0\n## \uff081\uff09$\\text{STL}$\n\u7528\u4e00\u4e2a $\\text{multiset}$ \u7ef4\u62a4\uff0c\u5e76\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u5373\u53ef\u3002\n```cpp\nmultiset<int> s[maxn];\ninline void merge(int x,int y){\n\tif(s[x].size()<s[y].size()) swap(s[x],s[y]);\n\tfor(multiset<int>::iterator i=s[y].begin();i!=s[y].end();i++){\n\t\ts[x].insert(*i);\n\t}\n}\ninline void dfs(int u,int fa){\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tmerge(u,v);\n\t}\n\tmultiset<int>::iterator i=s[u].lower_bound(w[u]);\n\tif(i!=s[u].end()) s[u].erase(i);\n\ts[u].insert(w[u]);\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n    \t//\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u67e5\u8be2\u524d\u9a71\uff0c\u8d4b\u503c\u6210\u8d1f\u8d21\u732e\n\t\tw[i]=1e9-read();\n\t}\n\tfor(int i=2;i<=n;i++){\n\t\tint v=read();\n\t\tadd_edge(i,v);\n\t\tadd_edge(v,i);\n\t}\n\tdfs(1,0);\n\tprintf(\"%ld\\n\",s[1].size());\n\treturn 0;\n}\n```\n## \uff082\uff09\u7ebf\u6bb5\u6811\u5408\u5e76\n\u79bb\u6563\u5316\u540e\u7528\u7ebf\u6bb5\u6811\u53bb\u67e5\u524d\u9a71\u4ee5\u53ca\u4fee\u6539\uff08\u6ce8\u610f\u7279\u5224\u672c\u8eab\u4e3a\u6700\u5c0f\u503c\u7684\u60c5\u51b5\uff09\u3002\n```cpp\nint tot,rt[maxn];\nstruct SegmentTree{\n\t#define mid ((l+r)>>1)\n\tint ch[maxm][2],siz[maxm];\n\tbool pd=0;\n\tinline void merge(int &x,int &y){\n\t\tif(!x||!y){\n\t\t\tx+=y;\n\t\t\treturn;\n\t\t}\n\t\tsiz[x]+=siz[y];\n\t\tmerge(ch[x][0],ch[y][0]),merge(ch[x][1],ch[y][1]);\n\t}\n\tinline void update(int x){\n\t\tif(!x) return;\n\t\tsiz[x]--;\n\t\tif(siz[ch[x][1]]) update(ch[x][1]);\n\t\telse update(ch[x][0]);\n\t}\n\tinline void insert(int &x,int l,int r,int k){\n\t\tif(!x) x=++tot;\n\t\tsiz[x]++;\n\t\tif(l==r) return;\n\t\tif(k<=mid){\n\t\t\tinsert(ch[x][0],l,mid,k);\n\t\t}\n\t\telse{\n\t\t\tinsert(ch[x][1],mid+1,r,k);\n\t\t\tif(!pd&&siz[ch[x][0]]){\n\t\t\t\tupdate(ch[x][0]);\n\t\t\t\tpd=1;\n\t\t\t}\n\t\t}\n\t\tif(pd) siz[x]--;\n\t}\n}tree;\nvector<int> G;\ninline int get(int x){\n\treturn lower_bound(G.begin(),G.end(),x)-G.begin()+1;\n}\ninline void dfs(int u,int fa){\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\ttree.merge(rt[u],rt[v]);\n\t}\n\ttree.pd=0;\n\ttree.insert(rt[u],1,G.size(),get(w[u]));\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tw[i]=read();\n\t\tG.push_back(w[i]);\n\t}\n\tsort(G.begin(),G.end());\n\tG.erase(unique(G.begin(),G.end()),G.end());\n\tfor(int i=2;i<=n;i++){\n\t\tint v=read();\n\t\tadd_edge(i,v);\n\t\tadd_edge(v,i);\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\\n\",tree.siz[rt[1]]);\n\treturn 0;\n}\n```",
        "postTime": 1645409396,
        "uid": 321177,
        "name": "SoyTony",
        "ccfLevel": 6,
        "title": "\u9898\u89e3\u2014\u2014P4577 [FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898"
    },
    {
        "content": "\u7ed9\u4e00\u4e2a\u4e0d\u7528\u5dee\u5206\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\u6cd5\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u4f18\u5316 dp\u3002\n\n\u6734\u7d20 dp\uff1a\u8bbe $f[i][j]$ \u8868\u793a $i$ \u5b50\u6811\uff0c\u6700\u5927\u503c\u4e3a $\\ge j$ \u7684\u7b54\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\uff1a$f[i][j]=\\max(\\sum f[v][j],\\sum f[v][w[i]]+1)$\uff0c$v$ \u4e3a $i$ \u5b50\u6811\uff0c$w[i]$ \u4e3a $i$ \u6743\u503c\u3002\n\n\u8f6c\u79fb\u62c6\u4e24\u6b65\uff1a\n\n1.$f[i][j]=\\sum f[v][j]$\n\n2.$f[i][k](k\\in[1,w[i]])=\\max(f[i][k],\\sum f[v][w[i]]+1)$\n\n\u6bcf\u4e2a\u70b9\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b2c\u4e8c\u7ef4\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u7b2c\u4e8c\u6b65\u5c31\u662f\u7ebf\u6bb5\u6811\u533a\u95f4\u4e0e $x$ \u53d6 $\\max$\uff0c\u67e5\u8be2\u5c31\u53ea\u6709\u5355\u70b9\u67e5\u8be2\u3002\n\n\u7136\u540e\u6211\u5199\u4e86\u4e00\u53d1\uff0cTLE/MLE 40 pts\u3002\n\n\u7136\u540e\u6211\u95ee\u4e86\u53ef\u7231\u7684@\u738b\u5b66\u9038 \uff0c\u5979\u544a\u8bc9\u6211\u5408\u5e76\u65f6 pushdown \u4e0d\u80fd\u540c\u65f6 pushdown \u4e24\u4e2a\u7ed3\u70b9\uff0c\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\u6ca1\u513f\u5b50\u7684\u65f6\u5019\u4f60\u5c31\u4e0d\u80fd pushdown\u3002\n\n\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u513f\u5b50\uff0c\u5b83\u5bf9\u5e94\u533a\u95f4\u4e2d\u6240\u6709\u4f4d\u7f6e\u4e0a\u7684\u6570\u90fd\u76f8\u540c\u3002\u6240\u4ee5\u5408\u5e76\u672c\u8d28\u662f\u533a\u95f4\u52a0\u64cd\u4f5c\u3002\u7ef4\u62a4\u533a\u95f4\u52a0\u548c\u533a\u95f4\u63a8\u5e73\u8fd9\u4e24\u4e2a\u6807\u8bb0\u5373\u53ef\u3002\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n\u56e0\u4e3a wxy \u5e2e\u6211\u6539\u4e86\u4e00\u4e0b\uff0c\u6240\u4ee5\u4ee3\u7801\u5185\u7801\u98ce\u53ef\u80fd\u6709\u4e0d\u540c\u3002\u5199\u4e86\u5783\u573e\u56de\u6536\u662f\u56e0\u4e3a\u4e00\u5f00\u59cb\u8c03\u7684\u65f6\u5019\u4ee5\u4e3a\u88ab\u5361\u7a7a\u95f4\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int N=2e5+5;\nstruct tree\n{\n\tint lson,rson,sum,assign,add;\n}t[N*20*5];\nint tot,root[N];\nint trash[N*22],top;\nint getnode()\n{\n\tif(!top) return ++tot;\n\tint x=trash[top--];\n\tt[x].lson=t[x].rson=t[x].sum=0;\n\tt[x].add=0;t[x].assign=-1;\n\treturn x;\n}\nvoid pushdown(int k)\n{\n\tif(!t[k].lson) t[k].lson=getnode();\n\tif(!t[k].rson) t[k].rson=getnode();\n\tif (t[k].add)\n\t{\n\t    t[t[k].lson].sum+=t[k].add;\n\t    t[t[k].rson].sum+=t[k].add;\n\t    t[t[k].lson].add+=t[k].add;\n\t    t[t[k].rson].add+=t[k].add;\n\t    t[t[k].lson].assign+=t[k].add;\n\t    t[t[k].rson].assign+=t[k].add;\n\t    t[k].add=0;\n\t} \n\tif (t[k].assign != -1)\n\t{\n\t    t[t[k].lson].sum=max(t[k].assign,t[t[k].lson].sum);\n\t    t[t[k].rson].sum=max(t[k].assign,t[t[k].rson].sum);\n\t    t[t[k].lson].assign=max(t[k].assign,t[t[k].lson].assign);\n\t    t[t[k].rson].assign=max(t[k].assign,t[t[k].rson].assign);\n\t    t[k].assign=-1;\n\t}\n\t\n}\nvoid seg_add(int x,int v)\n{\n    t[x].sum+=v;\n    if(t[x].assign!=-1) t[x].assign+=v;\n    t[x].add+=v;\n}\nvoid assign(int x,int v)\n{\n   t[x].sum=max(t[x].sum,v);\n   t[x].assign=max(v,t[x].assign);\n}\nint merge(int x,int y,int l,int r)\n{\n//\tcout<<\"merge\";\n\tif(!x||!y) return x+y;\n\tif (!t[y].rson && !t[y].lson) swap(x,y);\n    if (!t[x].lson && !t[x].rson)\n\t{\n        seg_add(y,t[x].sum);\n\t\treturn y;\n    }\n\tif(l==r)\n\t{\n\t\tt[x].sum+=t[y].sum;\n\t\tt[y].sum=t[y].lson=t[y].rson=0;\n\t\ttrash[++top]=y;\n\t\treturn x;\n\t}\n\tint mid=l+r>>1;\n\tpushdown(x);pushdown(y);\n\tt[x].lson=merge(t[x].lson,t[y].lson,l,mid);\n\tt[x].rson=merge(t[x].rson,t[y].rson,mid+1,r);\n\tt[y].sum=t[y].lson=t[y].rson=0;\n\ttrash[++top]=y;\n\treturn x;\n}\nint change(int k,int l,int r,int L,int R,int x)\n{\n\tif(!k) k=getnode();\n\tif(L<=l&&r<=R)\n\t{\n\t\t//t[k].sum=max(t[k].sum,x);\n\t\tassign(k,x);\n\t\treturn k;\n\t}\n\tpushdown(k);\n\tint mid=l+r>>1;\n\tif(L<=mid) t[k].lson=change(t[k].lson,l,mid,L,R,x);\n\tif(mid<R) t[k].rson=change(t[k].rson,mid+1,r,L,R,x);\n\treturn k;\n}\nint ask(int k,int l,int r,int x)\n{\n//\tcout<<\"ask\"; \n\tif(l==r) return t[k].sum;\n\tint ans=0;\n\tint mid=l+r>>1;\n\tpushdown(k);\n\tif(x<=mid) ans=max(ans,ask(t[k].lson,l,mid,x));\n\telse ans=max(ans,ask(t[k].rson,mid+1,r,x)); \n\treturn ans;\n}\nstruct edge\n{\n\tint to,nxt;\n}e[N*2];\nint head[N],n,cnt,w[N],X[N];\nvoid add(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid dfs(int now)\n{\n\tint sum=0;\n\tfor(int i=head[now];i;i=e[i].nxt)\ndfs(e[i].to),sum+=ask(root[e[i].to],1,n,w[now]),root[now]=merge(root[now],root[e[i].to],1,n);\n\troot[now]=change(root[now],1,n,1,w[now],sum+1);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>w[i];\n\t\tX[i]=w[i];\n\t}\n\tsort(X+1,X+n+1);\n\tint num=unique(X+1,X+n+1)-X-1;\n\tfor(int i=1;i<=n;i++)\n\tw[i]=lower_bound(X+1,X+num+1,w[i])-X;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tadd(x,i);\n\t}\n\tdfs(1);\n\tcout<<ask(root[1],1,n,1); \n\treturn 0;       \n}\n```\n",
        "postTime": 1639190028,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "P4577 \u9898\u89e3"
    },
    {
        "content": "\u9057\u61be\u5730\u544a\u8bc9\u5927\u5bb6\uff0c\u7531\u4e8e\u6570\u636e\u592a\u968f\uff08shui\uff09\u673a\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e00\u4e2a $n^2$ \u7684\u7b97\u6cd5\u6c34\u6389\uff08\u6240\u4ee5\u5199\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u6709\u70b9\u51c9\uff09\n\n\u800c\u4e14\u8fd9\u4e2a n^2 \u7b97\u6cd5\u8dd1\u5f97\u8d3c\u5feb...\uff08\u4f60\u770b\u6211\u8bb0\u5f55\u5c31\u77e5\u9053\u4e86=-=\uff09\n\n\u7136\u9e45\u624b\u9020\u4e00\u7ec4\u6570\u636e\u5361\u5230 $ 80 S~^+$\n\n~~\u7b2c\u4e00\u6b21\u4f53\u9a8c\u5230\u4e86\u66b4\u529b\u78be\u6807\u7b97\u7684\u8d76\u811a\uff1f~~\n\n\u5199\u9898\u89e3\u5c31\u662f\u60f3\u8ba9\u7ba1\u7406\u52a0\u4e00\u4e0b\u94fe\u7684\u6570\u636e\u70b9\uff08\u867d\u8bf4\u53ef\u80fd\u6027\u4e0d\u5927\uff0c\u56e0\u4e3a\u8fd9\u662f\u7701\u9009\u539f\u9898...\uff09\uff0c\u7136\u540e\u987a\u4fbf\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a\u590d\u6742\u5ea6\u4e3a\u5047\u7684\u7b97\u6cd5\n\n~~emmm\uff1f \u8fd9\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e0d\u662f $O(\\text{\u80fd\u8fc7})$ \u4e48\uff1f~~\n\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5c06\u6240\u6709\u7684\u70b9\u6309\u6743\u503c\u4ece\u5927\u5230\u5c0f\uff08\u6743\u503c\u76f8\u540c\u5c31\u6309\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\uff09\u52a0\u5165\u6811\u4e2d\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u66b4\u529b\u5411\u4e0a\u8dd1\u7236\u8282\u70b9\uff0c\u5e76\u4e14\u4e0d\u65ad\u7ed9\u8be5\u8282\u70b9\u7684 f \u6570\u7ec4++\uff0c\u5982\u679c\u8dd1\u5230\u67d0\u4e2a\u8282\u70b9\u53d1\u73b0\u4e4b\u524d\u8bbf\u95ee\u8fc7\u4e86\u5c31\u9000\u51fa\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u6807\u8bb0\u4e3a\u672a\u8bbf\u95ee\n\n\u90a3\u4e48\u8fd9\u4e48\u505a\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\n\n\u9996\u5148\u8bb2\u8bb2\u7b80\u5355\u7684\u60c5\u51b5\uff1a\n\n\n$$2$$\n$$/$$\n$$5$$\n$$/\\text{}~~~~|$$\n$$3 ~~~~~~~3$$\n\n\n\u5047\u8bbe\u662f\u8fd9\u6837\u4e00\u4e2a\u6811\uff08LaTeX\u6a21\u62df\u68f5\u6811\u597d\u7d2f...\uff09\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u6743\u503c 5 \u7684\u70b9\u4f1a\u8ba9\u6743\u503c 2 \u7684\u70b9++\uff08\u5373 f[1] ++\uff09\uff0c\u7136\u540e\u6743\u503c 3 \u7684\u70b9\u4e0a\u53bb\u540e\u53d1\u73b0\u6743\u503c 5 \u7684\u70b9\u8bbf\u95ee\u8fc7\u4e86\uff0c\u90a3\u4e48\u53d6\u6d88\u5b83\u7684\u8bbf\u95ee\uff0c\u7136\u540e\u53e6\u4e00\u4e2a\u6743\u503c 3 \u7684\u70b9\u53bb\u8bbf\u95ee\u7684\u65f6\u5019\u53c8\u8ba9 f[1]++ \u4e86\uff0c\u6700\u540e\u6743\u503c 2 \u7684\u70b9\u8ba9\u81ea\u8eab ++ \n\n\u8fd9\u65f6 f[1]=3   \u800c\u7b54\u6848\u786e\u5b9e\u4e5f\u662f 3\n\n\u4f46\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u6743\u503c 5 \u7684\u70b9\u7684 f \u503c\u662f\u5047\u7684\uff0c\u672c\u6765\u5e94\u8be5\u662f 1 \u4f46\u73b0\u5728\u662f 2\n\n\u5176\u5b9e\u8fd9\u91cc\u5229\u7528\u5230\u7684\u60f3\u6cd5\u5c31\u662f 3 \u5c06 5 \u7ed9\u53d6\u4ee3\u6389\u4e86\uff08\u7c7b\u4f3c\u4e00\u4e2a\u542f\u53d1\u5f0f\u5408\u5e76\u9898\u89e3\u4e2d\u7684\u4fee\u6539\u6743\u503c\uff0c\u5e76\u4e14\u88ab\u4fee\u6539\u7684\u70b9\u6ca1\u6709\u7b97\u8d21\u732e\uff09\n\n\u7136\u540e\u6700\u540e\u7684\u7b54\u6848\u5fc5\u7136\u662f f[1]\n\n\uff08\u6709\u70b9\u8499\uff0c\u5199\u5f97\u81ea\u5df1\u90fd\u8499\u4e86\uff09\n\n\u5176\u5b9e\u8fd8\u662f\u975e\u5e38\u50cf\u542f\u53d1\u5f0f\u5408\u5e76\u7684...\n\n\u5c11\u4e86\u4e2a log \u591a\u4e86\u4e2a n \u561b...\n\n\u6bd5\u7adf\u8fd9\u4e2a\u7b97\u6cd5\u6700\u4f18\u60c5\u51b5\u4e0b\u662f $O(n)$ \u7684\n\n\n```\n//by Judge\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int M=2e5+3;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void cmax(int& a,int b){if(a<b)a=b;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,pat,ans,a[M],fa[M],d[M],head[M],f[M],v[M],dep[M];\nstruct Edge{ int to,nxt; }e[M<<1];\ninline void add(int u,int v){\n\te[++pat]=(Edge){v,head[u]},head[u]=pat;\n}\ninline bool cmp(int x,int y){\n\treturn a[x]^a[y]?a[x]>a[y]:dep[x]>dep[y];\n}\nvoid dfs(int u){ dep[u]=dep[fa[u]]+1;\n\tfor(int i=head[u];i;i=e[i].nxt) dfs(e[i].to);\n}\nvoid insert(int u){ ++f[u],v[u]=v[0]=1;\n\tfor(u=fa[u];!v[u];u=fa[u]) ++f[u]; v[u]=0;\n}\nint main(){\n\tfreopen(\"1.in\",\"r\",stdin);\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=read(),d[i]=i;\n\tfor(int i=2,x;i<=n;++i)\n\t\tfa[i]=read(),add(fa[i],i);\n\tdfs(1),sort(d+1,d+1+n,cmp);\n\tfor(int i=1;i<=n;++i) insert(d[i]);\n\treturn !printf(\"%d\\n\",f[1]);\n}\n```\n\n\n\u4e0d\u770b\u4ee3\u7801\u662f\u641e\u4e0d\u61c2\u54d2 \u3010\u96fe\n\n\n\u4f46\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u9053\u597d\u9898\uff0c\u4e0d\u80fd\u5c31\u8fd9\u4e48\u6c34\u8fc7\u53bb\u4e86\uff08\u8fd8\u662f\u8981\u7ec3\u7ec3\u542f\u53d1\u5f0f\u5408\u5e76\uff09\n\n\n## \u590d\u8ff0\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6c42\u6811\u4e0a\u6700\u957f\u4e0d\u964d\u5b50\u5e8f\u5217\u7684\u5143\u7d20\u4e2a\u6570\uff08\u53ef\u4ee5\u6709\u679d\u6761\uff0c\u5373\u6ee1\u8db3\u4efb\u610f\u8282\u70b9\u6743\u503c\u4e0d\u5c0f\u4e8e\u5176\u7956\u5148\u8282\u70b9\u6743\u503c\uff09\n\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u5c06\u9898\u76ee\u4e2d\u7684\u95ee\u9898\u8f6c\u5316\n\n\u9898\u610f\u8ba9\u6211\u4eec\u6c42\u7684\u662f\u6700\u957f\u4e0d\u964d\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5230\u5728\u6811\u4e0a\u53d6\u70b9\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u8fd9\u5c31\u96be\u641e\u4e86\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7ed9\u67d0\u4e2a\u8282\u70b9\u8d4b\u4e00\u4e2a\u5047\u6743\u503c\uff0c\u7136\u540e\u8fd9\u4e2a\u70b9\u4e0d\u8ba1\u8d21\u732e\n\n## FAQ\uff1a\u8fd9\u6837\u505a\u6709\u4ec0\u4e48\u7528\u4e48\uff1f\n\n\u5f53\u7136\u6709\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u6811\u5f62 dp \u4e86\u554a\uff01\n\n\u90a3\u4e48\u8003\u8651\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n\u4ee4 $f[i][j]$ \u8868\u793a i \u53f7\u70b9\u6743\u503c\u4e3a j \u65f6\u5176\u5b50\u6811\u7684\u6700\u5927\u8d21\u732e\uff08\u5305\u62ec\u81ea\u8eab\uff09\n\uff0c\u5219\u6709\n\n$$f[u][j]=[j=w[u]]\\sum_{v\u2208u.son}Max(f[v][k],k>=j)$$\n\n\u524d\u9762\u90a3\u4e2a j=w[u] \u5c31\u662f\u8bf4 j \u4e3a u \u53f7\u70b9\u7684\u521d\u59cb\u6743\u503c\n\n\u4e0d\u96be\u53d1\u73b0\u8f6c\u79fb\u590d\u6742\u5ea6\u4e3a $n^3$\uff0c \u6309\u697c\u4e0a\u5927\u4f6c\u6240\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u540e\u7f00 Max \u5c06\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $n^2$ ,\u867d\u7136\u5e76\u6ca1\u6709\u4ec0\u4e48\u8f6f\u7528\uff0c\u4ec5\u4ec5\u662f\u5c06\u8f6c\u79fb\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n$$f[u][j]=[j=w[u]] + \\sum_{v\u2208u.son}Max[v][j] $$\n\n$$Max[i][j] = Max(v[i][k],k>=j)$$\n\n\n#### \u7136\u540e\u6211\u4eec\u53d1\u73b0\uff1a\u5bf9\u4e8e j>w[u] \uff0cMax[u][j] \u6240\u6709\u7684 Max[v][j] \u4e4b\u548c\n\n#### \u4e14\u5bf9\u4e8e j=w[u] \uff0cMax[u][j] \u4e3a\u4e0a\u9762\u90a3\u73a9\u610f\u513f +1\n\n\u4f46\u662f\u5bf9\u4e8e j<w[u] \u5c31\u9700\u8981 $O(n)$ \u7ef4\u62a4\u4e86\uff0c\u6240\u4ee5\u6709\u4ec0\u4e48\u4f18\u5316\u7684\u529e\u6cd5\uff1f\n\n\n\u6211\u4eec\u53d1\u73b0\u540e\u7f00 Max \u6570\u7ec4\u53ef\u4ee5\u5dee\u5206\uff0c\u5e76\u4e14\u6574\u4e2a\u6570\u7ec4\u975e\u8d1f\uff0c\u4e14\u4e5f\u6ee1\u8db3\u53ef\u52a0\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u8bb0\u5f55\u4e0b u \u53f7\u8282\u70b9\u6240\u6709\u5b50\u8282\u70b9\u7684 Max \u6570\u7ec4\u4e4b\u548c\uff0c\u5176\u5dee\u5206\u6570\u7ec4\u7b49\u4e8e\u6240\u6709\u5b50\u8282\u70b9 max \u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\u4e4b\u548c\n\n\u8bf4\u7684\u53ef\u80fd\u5f88\u7ed5\uff0c\u4ee4 F \u4e3a\u5dee\u5206\u6570\u7ec4\u7684\u8bdd\uff0c\u5176\u5b9e\u5c31\u662f\uff1a\n\n$$F[Max[v_1]+Max[v_2]+...+Max[v_n]]=F[Max[v_1]]+F[Max[v_2]]+...+F[Max[v_n]]$$\n\n\u8fd9\u6837\u6211\u4eec\u5c06\u5dee\u5206\u6570\u7ec4\u7ef4\u62a4\u8d77\u6765\u7684\u8bdd\u5176\u5b9e\u5c31\u662f\u5c06 Max \u6570\u7ec4\u7ef4\u62a4\u8d77\u6765\u4e86\n\n## FAQ: \u8fd9\u6837\u505a\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u4e4b\u524d\u7684\u95ee\u9898\u6709\u89e3\u51b3\u4e48\uff1f\n\n\u5f53\u7136\u6709\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c F[i][j] \u52a0\u4e0a 1 \u5bf9\u4e8e\u6574\u4e2a\u5dee\u5206\u6570\u7ec4\u7684\u5f71\u54cd\u4e0d\u8fc7\u662f F[i][j-1] \u9700\u8981 -1 \u7f62\u4e86\uff0c\u5e76\u4e14\u5982\u679c F[i][j-1] \u7b49\u4e8e 0 \u5c31\u4e0d\u7528\u51cf\u4e86\uff0c\u56e0\u4e3a\u5dee\u5206\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u540e\u7f00 Max \u4fe1\u606f\uff0c\u4e0d\u4f1a\u5b58\u5728\u8d1f\u6570\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 [ j=w[u] ] \u5bf9\u6574\u4e2a\u6570\u7ec4\u7684\u5f71\u54cd\u964d\u4e3a $O(1)$\n\n\u4f46\u662f\u8fd8\u662f\u6709\u95ee\u9898\u554a\uff0c\u8fd9\u4e2a F \u6570\u7ec4\u7684\u5408\u5e76\u662f $O~ n$ \u7684\u554a\uff0c\u590d\u6742\u5ea6\u8fd8\u662f\u5047\u7684\uff01\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u600e\u4e48\u628a\u8fd9\u4e2a\u5408\u5e76\u7684\u590d\u6742\u5ea6\u964d\u4e0b\u6765... \n\n\u4e4b\u524d\u4e0d\u662f\u8bf4\u4e86\u542f\u53d1\u5f0f\u5408\u5e76\u4e86\u561b...\u5e76\u4e14\u7531\u4e8e\u8fd9\u4e2a F \u6570\u7ec4\u5927\u90e8\u5206\u7684\u6570\u4e3a 0 \uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 map \u6765\u8bb0\u5f55 F \u6570\u7ec4\uff0c\u4e3a 0 \u7684\u5c31\u4e0d\u7ef4\u62a4\u4e86\uff0c\u7701\u65f6\u95f4\u7701\u7a7a\u95f4\n\n\n\u7136\u540e\u6211\u4eec\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u76f4\u63a5\u904d\u5386\u4e00\u4e0b F \u6570\u7ec4\u5c31\u597d\u4e86\n\n```\n//by Judge\n#include<map>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define IT map<int,int>::iterator\nusing namespace std;\nconst int M=2e5+3;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline void cmax(int& a,int b){if(a<b)a=b;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} int n,pat,res,w[M],d[M],rk[M],head[M]; map<int,int> dp[M];\nstruct Edge{ int to,nxt; }e[M<<1];\ninline void add(int u,int v){\n\te[++pat]=(Edge){v,head[u]},head[u]=pat;\n}\ninline bool cmp(int x,int y){return w[x]<w[y];}\ninline void merge(int p1,int p2){\n\tif(dp[p1].size()<dp[p2].size()) swap(dp[p1],dp[p2]);\n\tfor(IT it=dp[p2].begin();it!=dp[p2].end();++it)\n\t\tdp[p1][it->first]+=it->second;\n}\n#define v e[i].to \ninline void dfs(int u){\n\tfor(int i=head[u];i;i=e[i].nxt) dfs(v),merge(u,v);\n\tint fk=rk[u]-1; if(dp[u].begin()->first>fk) return ;\n\tIT it=dp[u].upper_bound(fk); --it;\n\tif(it->second==1) dp[u].erase(it); else --it->second;\n}\nint main(){ n=read();\n\tfor(int i=1;i<=n;++i) w[i]=read(),d[i]=i;\n\tfor(int i=2,f;i<=n;++i) f=read(),add(f,i);\n\tsort(d+1,d+1+n,cmp),rk[d[1]]=1;\n\tfor(int i=2;i<=n;++i) rk[d[i]]=(w[d[i]]==w[d[i-1]]?rk[d[i-1]]:i);\n\tfor(int i=1;i<=n;++i) ++dp[i][rk[i]]; dfs(1);\n\tfor(IT it=dp[1].begin();it!=dp[1].end();++it)\n\t\tres+=it->second; return !printf(\"%d\\n\",res);\n}\n```\n\n\n\n\n\u8bdd\u8bf4\u6807\u7b97\u548c\u66b4\u529b\u90fd\u597d\u77ed...\n",
        "postTime": 1551942295,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "# \u9898\u89e3 P4577 [FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\n\n\u9898\u89e3\u533a\u597d\u50cf\u6ca1\u6709\u7ebf\u6bb5\u6811\u4e0a\u53c8\u5957\u4e86\u4e8c\u5206\u7684\u505a\u6cd5\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u7247\u9898\u89e3\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4577)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Keven-He/p/solution-p4577.html)\n\n~~\u6000\u7740\u5fc5 WA \u7684\u51b3\u5fc3\u4ea4\u4e86\u4e24\u53d1\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u8fc7\u4e86\u3002~~\n\n## \u9898\u610f\n\n\u6c42\u4e00\u4e2a\u6811\u4e0a\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u8003\u8651\u88f8\u7684 dp\uff1a\u8bbe $f_{u,j}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u91cc\u9009\u7684\u6570\u7684\u6700\u5927\u503c\u4e0d\u5c0f\u4e8e $j$ \u80fd\u9009\u591a\u5c11\u4e2a\u3002\n\n$$\nf_{u,j}=\n\\begin{cases}\n\\sum_{v\\ is\\ u's\\ son}f_{v,j} &j>w_u\\\\\n\\max\\{\\sum_{v\\ is\\ u's\\ son}f_{v,j},\\sum_{v\\ is\\ u's\\ son}f_{v,j+1}+1\\} &j\\le w_u\n\\end{cases}\n$$\n\n\u63a5\u4e0b\u6765\u662f\u5982\u4f55\u4f18\u5316\uff1a\n\n\u5728 DFS \u6bcf\u4e2a\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4 $f_{u,j}$\u3002\n\n\u9996\u5148\u628a\u6240\u6709\u513f\u5b50\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u548c\u8d77\u6765\u3002\n\n\u7136\u540e\u8003\u8651**\u5728\u4ec0\u4e48\u533a\u95f4\u9009\u4e0a\u8fd9\u4e2a\u8282\u70b9\u66f4\u4f18**\u3002\n\n\u53f3\u7aef\u70b9\u80af\u5b9a\u662f $w_i$ \uff0c\u90a3\u4e48\u6211\u4eec\u4e8c\u5206\u6c42\u5de6\u7aef\u70b9\uff0c\u5373**\u4e8c\u5206\u4e00\u4e2a\u6700\u5c0f\u7684\u9009\u4e86\u6bd4\u4e0d\u9009\u66f4\u4f18\u7684\u70b9**\u3002\n\n\u5355\u70b9\u67e5\u8be2\u7528\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u5408\u5e76\u513f\u5b50\u4eec\u7684\u6811\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u533a\u95f4\u4fee\u6539\u7528\u6807\u8bb0\u53ef\u6301\u4e45\u5316\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nlog^2n)$\u3002\n\n~~\u867d\u7136\u6162\u5230\u8d77\u98de\u4f46\u662f\u80fd\u8fc7\u3002~~\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define _for(i,a,b) for(int i=a;i<=b;++i)\n#define for_(i,a,b) for(int i=a;i>=b;--i)\n#define ll long long\n#define bdmd int mid=(l+r)>>1\nusing namespace std;\nconst int N=2e5+10,inf=0x3f3f3f3f;\nint n,cnt,w[N];\nvector<int>son[N];\ninline int rnt(){\n\tint x=0,w=1;char c=getchar();\n\twhile(!isdigit(c)){if(c=='-')w=-1;c=getchar();}\n\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn x*w;\n}\nnamespace LISAN{\n\tint ls[N];\n\tvoid LiSan(){\n\t\t_for(i,1,n){\n\t\t\tls[i]=w[i];\n\t\t}\n\t\tsort(ls+1,ls+n+1);\n\t\tcnt=unique(ls+1,ls+n+1)-ls-1;\n\t\t_for(i,1,n)\n\t\t\tw[i]=lower_bound(ls+1,ls+cnt+1,w[i])-ls;\n\t\treturn;\n\t}\n}\nclass ValSegmentTree{\n public:\n\tint root[N],tot,uucnt,un_use[N*40];\n\tclass TREE{\n\t public:\n\t\tint left_son,right_son;\n\t\tint val=0;\n\t}tree[N*40];\n\tconst TREE NONE=(TREE){0,0,0};\n\t#define ls(p) tree[p].left_son\n\t#define rs(p) tree[p].right_son\n\t#define l_s(p) tree[p].left_son,l,mid\n\t#define r_s(p) tree[p].right_son,mid+1,r\n\t#define va(p) tree[p].val\n\t#define bdmd int mid=(l+r)>>1\n\tinline int NewP(){\n\t\tif(uucnt)\n\t\t\treturn un_use[uucnt--];\n\t\treturn ++tot;\n\t}\n\tinline void DeleteP(int p){\n\t\ttree[p]=NONE;\n\t\tun_use[++uucnt]=p;\n\t\treturn;\n\t}\n\tvoid UpdateQJ(int &p,int l,int r,int le,int ri,int val){\n\t\tif(!p)p=NewP();\n\t\tif(ri<l||r<le)return;\n\t\tif(le<=l&&r<=ri)\n\t\t\tva(p)+=val;\n\t\telse{\n\t\t\tbdmd;\n\t\t\tUpdateQJ(l_s(p),le,ri,val);\n\t\t\tUpdateQJ(r_s(p),le,ri,val);\n\t\t}\n\t}\n\tint QueryP(int p,int l,int r,int x){\n\t\tif(!p)return 0;\n\t\tif(l==r)return va(p);\n\t\telse{\n\t\t\tbdmd;\n\t\t\tif(x<=mid)\n\t\t\t\treturn va(p)+QueryP(l_s(p),x);\n\t\t\telse\n\t\t\t\treturn va(p)+QueryP(r_s(p),x);\n\t\t}\n\t}\n\tvoid Merge(int &p1,int p2){\n\t\tif(!p1){p1=p2;return;}\n\t\tif(!p2){return;}\n\t\tva(p1)+=va(p2);\n\t\tMerge(ls(p1),ls(p2));\n\t\tMerge(rs(p1),rs(p2));\n\t\tDeleteP(p2);\n\t\treturn;\n\t}\n\t#undef ls\n\t#undef rs\n\t#undef l_s\n\t#undef r_s\n\t#undef va\n}tr;\nvoid Dfs(int u,int father){\n\tint sz=son[u].size();\n\t_for(i,0,sz-1){\n\t\tint v=son[u][i];\n\t\tif(v==father)continue;\n\t\tDfs(v,u);\n\t\ttr.Merge(tr.root[u],tr.root[v]);\n\t}\n\tint xuan=tr.QueryP(tr.root[u],1,cnt,w[u]+1)+1;\n\tint l=1,r=w[u];\n\twhile(l<=r){\n\t\tbdmd;\n\t\tif(tr.QueryP(tr.root[u],1,cnt,mid)>=xuan)\n\t\t\tl=mid+1;\n\t\telse\n\t\t\tr=mid-1;\n\t}\n\ttr.UpdateQJ(tr.root[u],1,cnt,l,w[u],1);\n\treturn;\n}\nint main(){\n\tn=rnt();\n\t_for(i,1,n)w[i]=rnt();\n\tLISAN::LiSan();\n\t_for(i,2,n){\n\t\tint x=rnt();\n\t\tson[i].push_back(x);\n\t\tson[x].push_back(i);\n\t}\n\tDfs(1,0);\n\tprintf(\"%d\\n\",tr.QueryP(tr.root[1],1,n,1));\n\treturn 0;\n}\n```",
        "postTime": 1653290140,
        "uid": 306045,
        "name": "K8He",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4577 [FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898"
    },
    {
        "content": "\u8bbe $f_{u,i}$ \u8868\u793a $u$ \u7684\u5b50\u6811\u4e2d\u7684\u65b9\u6848\u6700\u5927\u503c\uff0c\u4fdd\u8bc1\u8fd9\u4e2a\u65b9\u6848\u4e2d\u70b9\u6743\u6700\u5c0f\u503c\u4e3a $i$\uff0c\u5f53\u4e0d\u9009 $u$ \u65f6\uff0c\u4f9d\u5982\u4e0b\u9012\u63a8\u5f0f\u5355\u6b21\u5c06 $u$ \u7684\u96c6\u5408\uff08\u6307\u4e4b\u524d\u626b\u8fc7\u7684\u513f\u5b50\u548c\u81ea\u5df1\u6784\u6210\u7684\u96c6\u5408\uff09\u4e0e $v$ \u7684\u5b50\u6811\u7684 dp \u4fe1\u606f\u5408\u5e76\uff08\u4e0d\u5b58\u5728\u65b9\u6848\u8bbe\u4e3a $-\\infty$\uff09\n\n$$\nf_{\\text{new}}(u,i)=\\max\\{f(u,i)+\\max_{j\\ge i} f(v,j), f(v,i)+\\max_{j\\ge i} f(u,j) \\}\n$$\n\n\u5f53\u9009 $u$ \u65f6\uff0c\u4f9d\u9012\u63a8\u5f0f\n\n$$\nf(u,a_u)\\leftarrow_{\\max} 1+\\sum_v \\max_{j\\ge a_u} f(v,j)\n$$\n\n\u73b0\u5728\u76f4\u63a5\u6536\u624b\uff0c\u4e0a\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6211\u4eec\u5c06\u4e0d\u5b58\u5728\u65b9\u6848\u7684 dp \u5728\u5b9e\u73b0\u662f\u8bbe\u4e3a 0 \uff08\u4e5f\u5c31\u662f\u8fd9\u91cc\u6ca1\u6709\u8282\u70b9\uff09\uff0c\u9009 $u$ \u65f6\u662f\u5355\u70b9\u6539\u6bd4\u8f83\u6b63\u5e38\uff0c\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\uff08\u5c06 $o'$ \u5408\u5e76\u5230 $o$ \u4e0a\uff09\u65f6\u9700\u8981\u7ef4\u62a4\u540e\u7f00 max\uff0c\u5982\u679c $o=\\text{null}$ \u65f6\uff0c\u9700\u8981\u4e00\u4e2a\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\u4e14\u4e00\u5f00\u59cb\u4e3a 0 \u7684\u4f4d\u7f6e\u4e0d\u80fd\u88ab\u52a0\u3002\u6240\u4ee5\u8981\u5b58\u50a8\u4e00\u4e2a\u8282\u70b9\u7684 dp \u6700\u5927\u503c\u548c\u6709 dp \u503c\u7684\u4f4d\u7f6e\u4e2a\u6570\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4f46\u5e38\u6570\u6781\u5927\uff0c\u8dd1\u4e0d\u8fc7\u53cc log\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int MAXN = 200005, INF = 100000000;\n\nint N, a[MAXN], id[MAXN], rk[MAXN];\nbool cmp(int x, int y) { return a[x] < a[y]; }\n\nstruct node { int v, next; } E[MAXN << 1]; int head[MAXN], Elen;\nvoid add(int u, int v) { ++Elen, E[Elen].v = v, E[Elen].next = head[u], head[u] = Elen; }\n\nint rt[MAXN];\nstruct segmentTree {\n\tint ls[MAXN * 30], rs[MAXN * 30], mx[MAXN * 30], tag[MAXN * 30], cnt[MAXN * 30], Tlen;\n\t#define mid ((l + r) >> 1)\n\tvoid pushUp(int o) { mx[o] = max(mx[ls[o]], mx[rs[o]]), cnt[o] = cnt[ls[o]] + cnt[rs[o]]; }\n\tvoid plus(int o, int k) { if (mx[o]) mx[o] += k, tag[o] += k; }\n\tvoid pushDown(int o) { if (tag[o]) plus(ls[o], tag[o]), plus(rs[o], tag[o]), tag[o] = 0; }\n\tint query(int& o, int l, int r, int L, int R) {\n\t\tif (!o) return 0;\n\t\tif (l == L && r == R) return mx[o];\n\t\telse {\n\t\t\tpushDown(o);\n\t\t\tif (R <= mid) return query(ls[o], l, mid, L, R);\n\t\t\telse if (L > mid) return query(rs[o], mid + 1, r, L, R);\n\t\t\telse return max(query(ls[o], l, mid, L, mid), query(rs[o], mid + 1, r, mid + 1, R));\n\t\t}\n\t}\n\tvoid insert(int& o, int l, int r, int pos, int k) {\n\t\tif (!o) o = ++Tlen;\n\t\tif (l == r) {\n\t\t\tif (!mx[o]) cnt[o] = 1;\n\t\t\tmx[o] = max(mx[o], k);\n\t\t}\n\t\telse {\n\t\t\tpushDown(o);\n\t\t\tif (pos <= mid) insert(ls[o], l, mid, pos, k);\n\t\t\telse insert(rs[o], mid + 1, r, pos, k);\n\t\t\tpushUp(o);\n\t\t}\n\t}\n\tvoid modify(int& o, int l, int r, int L, int R, int K) {\n\t\tif (!o) o = ++Tlen;\n\t\tif (l == L && r == R) plus(o, K);\n\t\telse {\n\t\t\tpushDown(o);\n\t\t\tif (R <= mid) modify(ls[o], l, mid, L, R, K);\n\t\t\telse if (L > mid) modify(rs[o], mid + 1, r, L, R, K);\n\t\t\telse modify(ls[o], l, mid, L, mid, K), modify(rs[o], mid + 1, r, mid + 1, R, K);\n\t\t\tpushUp(o);\n\t\t}\n\t}\n\tvoid merge(int& o, int l, int r, int old, int mx1, int mx2) {\n\t\tif (!o) o = old, plus(o, mx1);\n\t\telse if (!old) plus(o, mx2);\n\t\telse if (l == r) {\n\t\t\tint val = max(mx[o] + mx[old], max (mx[o] + mx2, mx[old] + mx1));\n\t\t\tif (val && !mx[o]) cnt[o] = 1;\n\t\t\tmx[o] = val;\n\t\t}\n\t\telse {\n\t\t\tpushDown(o), pushDown(old);\n\t\t\tmerge(ls[o], l, mid, ls[old], max(mx1, mx[rs[o]]), max(mx2, mx[rs[old]]));\n\t\t\tmerge(rs[o], mid + 1, r, rs[old], mx1, mx2);\n\t\t\tpushUp(o);\n\t\t}\n\t}\n} sgt;\n\nvoid dfs(int u, int ff) {\n\tint qaq = 1;\n\tfor (int i = head[u]; i; i = E[i].next) if (E[i].v != ff) dfs(E[i].v, u), qaq += sgt.query(rt[E[i].v], 1, N, rk[u], N);\n\tbool flag = 1;\n\tfor (int i = head[u]; i; i = E[i].next) if (E[i].v != ff) {\n\t\tif (flag) rt[u] = rt[E[i].v], flag = 0;\n\t\telse sgt.merge(rt[u], 1, N, rt[E[i].v], 0, 0);\n\t}\n\tsgt.insert(rt[u], 1, N, rk[u], qaq);\n}\n\nint ans;\nint main() {\n\tscanf(\"%d\", &N);\n\tfor (int i = 1; i <= N; ++i) scanf(\"%d\", &a[i]), id[i] = i;\n\tsort(id + 1, id + N + 1, cmp);\n\tfor (int i = 1; i <= N; ++i) rk[id[i]] = rk[id[i - 1]] + (a[id[i - 1]] != a[id[i]]);\n\tfor (int i = 2, x; i <= N; ++i) scanf(\"%d\", &x), add(x, i);\n\tdfs(1, 0);\n\tprintf(\"%d\\n\", sgt.query(rt[1], 1, N, 1, N));\n\treturn 0;\n}\n```",
        "postTime": 1589890783,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "\u672c\u4eba\u8868\u793a\u5e76\u4e0d\u77e5\u9053\u6811\u4e0aLIS\u95ee\u9898\u3002\u3002\u3002\n\n\u6211\u4e5f\u53ea\u80fd\u8fde\u731c\u5e26\u8499\u5730\u53e3\u80e1\uff0c\u8bb2\u51fa\u4e00\u4e2a\u4eff\u4f5b\u662f\u6b63\u89e3\u7684\u4e1c\u897f\uff0c\u6b63\u786e\u6027\u672a\u77e5\n\n\u9898\u76ee\u53eb\u6211\u4eec\u5728\u4e00\u68f5\u6811\u4e2d\u9009\u51fa\u5c3d\u53ef\u80fd\u591a\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u5c0f\u4e8e\u5176\u7956\u5148\u7684\u70b9\u6743\n\n\u60f3\u5230\u79bb\u6563\u5316\uff0c\u8003\u8bd5\u65f6\u5728\u60f3\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u5c06\u5b83\u8f6c\u5316\u6210\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u901a\u8fc7\u6811dp\u89e3\u51b3\u5462\uff1f\n\n\u5bf9\u4e8e40\u5206\u7684\u505a\u6cd5\uff1a\u8bbek\u4e3ai\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9i\uff0ck\u4ec5\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u5bf9\u4e8ei\u6765\u8bf4\uff0ck\u53ef\u9009\u53ef\u4e0d\u9009\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4fee\u6539\u6743\u503c\uff0c\u5f3a\u884c\u628ak\u7684\u6743\u503c\u8fdb\u884c\u4fee\u6539\uff0c\n\n\u4f7f\u5f97\u6ee1\u8db3\u6bcf\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u5c0f\u4e8e\u5176\u7956\u5148\u7684\u70b9\u6743\uff08\u8fd9\u4e00\u6b65\u9700\u8981\u70b9\u7075\u611f\uff09\n\n\u8bbedpi,j\u4e3a\u5728\u4ee5i\u4e3a\u5b50\u6811\u7684\u70b9\u96c6\u91cc\uff0c\u5f53i\u7684\u6743\u503c\uff08\u79bb\u6563\u5316\u540e\uff09\u88ab\u4fee\u6539\u6210j\u65f6\uff0c\n\n\u9009\u51fa\u6700\u591a\u5b50\u96c6\u7684\u70b9\u6570\uff08\u4e5f\u5c31\u7b49\u540c\u4e8e\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7\u7684\u70b9\u7684\u6570\u91cf\uff09\n\n\u521d\u59cb\u5316\u6761\u4ef6\u4e3adpi,wi=1\n\n\u4f9d\u6b21\u5730\u5408\u5e76\u5b50\u6811\uff0c\u56e0\u4e3adpi,j\u80fd\u4e0edpk,l\u5408\u5e76\u65f6\u4ec5\u5f53j<=l\uff0c\u4e8e\u662f\u6811dp\u65b9\u7a0b\u4e3a\uff1a\n\ndpi,j+=Maxnl=jdpk,l\u200b\uff0c\u60f3\u5230\u540e\u7f00\u6700\u5927\u503c\u6570\u7ec4\uff0c\u4f18\u5316\u5230O(n2)\n\n\u4e8e\u662f\u8003\u8bd5\u65f6\u5c31\u5361\u8fd9\u4e86\n\n\u5bf9\u4e8e100\u5206\u7684\u505a\u6cd5\uff1a\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u628a\u6211\u4eec\u6240\u505a\u7684\u51e0\u4ef6\u4e8b\u5217\u4e00\u5217\uff1a\n\n1.\u521d\u59cb\u5316dpi,wi=1\n\n2.\u4f9d\u6b21\u5bf9\u6bcf\u4e2a\u5b50\u8282\u70b9\u7d2f\u52a0\u6700\u5927\u503c\n\n3.\u8ba1\u7b97\u540e\u7f00\u6700\u5927\u503c\u6570\u7ec4\n\nvoid dfs(R int u) {\n        f[u][w[u]] = 1;//1\n        for(R Edge *i = la[u]; i; i = i->ne) {\n            R int to = i->v; dfs(to);\n            for(R int j = 1; j <= P; ++j) f[u][j] += g[to][j];//2\n        }\n        for(R int i = P; i >= 1; --i) g[u][i] = Max(g[u][i + 1], f[u][i]);//3\n }\n\n\u8003\u8651\u4e00\u76f4\u8fed\u4ee3\u641c\u7d22\u5230\u53f6\u8282\u70b9\uff0c\u89c2\u5bdf\u4fee\u6539dp\u6570\u7ec4\u7684\u53ea\u67091\u64cd\u4f5c\n\n\u4e00\u5f00\u59cb\u6570\u7ec4\u662f\u8fd9\u6837\u7684\uff1a\n\n0 0 0 ..... 0 0 0\n\n\u7ecf\u8fc71\u64cd\u4f5c:0 0 0 0.....1 0 0 ..... 0 0 0\n\n\u7ecf\u8fc73\u64cd\u4f5c:0 0 0 0.....1 1 1 ..... 1 1 1 //\u5ffd\u7565\u4e862\n\n\u5728\u9010\u6e10\u53d6\u6700\u5927\u503c\u662f\uff0c\u53d1\u73b0g\u4e00\u5b9a\u662f\u9012\u589e\u7684\uff08\u5e76\u4e0d\u4e25\u683c\uff09\n\n\u4e8e\u662f\u60f3\u5230\u5dee\u5206\u6570\u7ec4\uff0c\u5c31\u7b49\u540c\u4e8e\u5728w[i]\u8fd9\u4e2a\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a1\uff0c\u5176\u4ed6\u4ecd\u662f0\n\n\u7531\u4e8e\u5dee\u5206\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u7b54\u6848\u5c31\u7b49\u540c\u4e8e\u5168\u90e8\u4f4d\u7f6e\u4e4b\u548c\u76f8\u52a0\n\n\u518d\u6a21\u62df\u53d6\u6700\u5927\u503c\u7684\u8fc7\u7a0b\uff0c\u539f\u6765\u7684g\u6570\u7ec4\u662f0 0 0 .... 0 1 1 1 1\n\n\u518d\u63d2\u5165\u4e00\u4e2a\u53d8\u62100 0 0 ... 1 1 1... 1 1 1 \uff0c\n\n\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u64cd\u4f5c\u7684\u672c\u8d28\u7684\u95ee\u9898\uff0c\u5c31\u662f\u628ai\u5230i\u524d\u7684\u6570\u76f4\u63a5\u76840\u53d8\u62101\n\n\u5728\u5dee\u5206\u6570\u7ec4\u4e0a\u7684\u64cd\u4f5c\u5c31\u662f++t[i];--t[pre[i]];\n\n\u4f46\u5982\u679ci\u4e4b\u524d\u6ca1\u6709\u6570\u7684\u8bdd\uff0c\u5c31\u4e0d\u7528--t[pre[i]]\u4e86\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2amultiset\u7ef4\u62a4\u5e8f\u5217\uff0c\u6bcf\u6b21\u63d2\u5165\u503c\uff0c\n\n\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u8fd0\u7528\u542f\u53d1\u5f0f\uff0c\u53d6\u6700\u5927\u503c\u65f6\u627e\u5230\u4ed6\u7684\u524d\u9a71\u628a\u5b83\u5220\u6389\uff0c\n\n\u6700\u540e\u7b54\u6848\u5373\u4e3a\u8fd8\u7559\u5728multiset\u4e2d\u5269\u4f59\u7684\u6570\u7684\u6570\u91cf\n\n\u5b8c\u4e86",
        "postTime": 1552191768,
        "uid": 42872,
        "name": "SoloRejudger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "\u600e\u4e48\u5404\u4f4djulao\u90fd\u5199\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u554a\u2026\u2026\n\n\u7136\u800c\u542f\u53d1\u5f0f\u5408\u5e76\u8dd1\u7684\u98de\u8d77\uff0c$O(nlog^2n)$\u751a\u81f3\u8dd1\u7684\u6bd4\u4e00\u4e9b\u5e38\u6570\u5927\u7684$O(nlogn)$\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u8fd8\u5feb\u2026\u2026\n__________________\n\n## \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u7ffb\u8bd1\u4e00\u4e0b\u5e76\u4e0d\u662f\u5f88\u597d\u7406\u89e3\u7684\u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6709\u6839\u6811\uff0c\u8ba9\u4f60\u4ece\u8fd9\u68f5\u6811\u5f53\u4e2d\u9009\u53d6\u4e00\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u5728\u8fd9\u4e2a\u70b9\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u70b9\u6743\u90fd\u5927\u4e8e\u5b83\u7684\u6bcf\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u7956\u5148\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\u6211\u4eec\u5c06\u70b9\u6743\u79bb\u6563\u5316\u2026\u2026\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u50cf\u6811\u4e0a\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\u2026\u2026\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u4f1a\u505a\u5b50\u5e8f\u5217\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5728\u6211\u4eec\u70b9\u96c6\u4e2d\u7684\u70b9\u5728\u6811\u4e0a\u4e0d\u4e00\u5b9a\u76f8\u90bb\uff0c\u4f46\u662f\u6211\u4eec\u7684\u6811\u5f62dp\u662f\u8981\u6c42\u4e00\u5b9a\u662f\u5b69\u5b50\u548c\u7236\u4eb2\u8fdb\u884c\u8f6c\u79fb\u624d\u53ef\u4ee5\u8fdb\u884c\u5217dp\u5b9a\u4e49\u548c\u63a8dp\u65b9\u7a0b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8f6c\u5316\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u5f97\u5b83\u53d8\u6210\u4e00\u4e2a\u53ef\u7231\u7684\u6811\u4e0a\u7684\u8054\u901a\u5757\u95ee\u9898\u2026\u2026\n\n\u5047\u8bbe\u6211\u4eec\u9009\u53d6\u4e86\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\u96c6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9002\u5f53\u7684\u5411\u70b9\u96c6\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u70b9\u6765\u5c06\u8fd9\u4e2a\u70b9\u96c6\u53d8\u6210\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u4e2a\u88ab\u6211\u4eec\u5f3a\u884c\u6784\u9020\u51fa\u7684\u8054\u901a\u5757\u53ef\u80fd\u4e0d\u7b26\u5408\u4efb\u610f\u4e00\u4e2a\u70b9\u96c6\u4e2d\u7684\u70b9\u90fd\u5927\u4e8e\u5b83\u7684\u6bcf\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u7956\u5148\u8fd9\u4e2a\u6761\u4ef6\u2026\u2026\n\n\u4f46\u662f\u663e\u7136\u539f\u6765\u5c31\u5728\u70b9\u96c6\u4e2d\u7684\u70b9\u662f\u7b26\u5408\u7684\u8fd9\u4e2a\u6761\u4ef6\u7684\uff0c\u6211\u4eec\u7834\u574f\u4e86\u8fd9\u4e2a\u7ea6\u675f\u662f\u56e0\u4e3a\u6211\u4eec\u65b0\u52a0\u5165\u7684\u70b9\u7834\u574f\u4e86\u539f\u6765\u7684\u70b9\u6743\u5173\u7cfb\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u5c06\u8fd9\u4e9b\u70b9\u7684\u70b9\u6743\u5f3a\u884c\u8d4b\u6210\u4e00\u4e2a\u5408\u9002\u7684\u503c\uff0c\u4f7f\u5f97\u91cd\u65b0\u8d4b\u503c\u4e4b\u540e\u8fd9\u4e2a\u8054\u901a\u5757\u6ee1\u8db3\u70b9\u6743\u7684\u7ea6\u675f\u5173\u7cfb(\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u8f6c\u5316\u65b9\u5f0f\u4e00\u5b9a\u5b58\u5728)\n\n\u73b0\u5728\u5c31\u662f\u6211\u4eec\u5760\u559c\u6b22\u7684\u8054\u901a\u5757\u95ee\u9898\u4e86\uff01\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u8fd9\u6837\u7684\u4e00\u4e2adp\u5f0f\u5b50$dp_{i,j}$\u8868\u793a\u8054\u901a\u5757\u4e2d\u6700\u9ad8\u70b9\u4e3ai\uff0c\u4e14i\u53d6\u4e3aj\u7684\u70b9\u6743\u65f6\uff0c\u8054\u901a\u5757\u4e2d\u672a\u88ab\u7be1\u6539\u70b9\u6743\u70b9\u6570\u7684\u6700\u5927\u503c\n\n\u90a3\u4e48\u6839\u636e\u6811\u5f62dp\u7684\u4e00\u822c\u5957\u8def\u6211\u4eec\u8003\u8651\u5b69\u5b50\u548c\u7236\u4eb2\u4e4b\u95f4\u7684\u8f6c\u79fb\u95ee\u9898\uff0c\u8003\u8651\u6211\u4eec\u73b0\u5728\u51b3\u7b56\u5230\u4e86\u7b2cv\u68f5\u5b50\u6811\uff0c\u73b0\u5728\u8981\u628a\u8fd9\u9897\u5b50\u6811\u52a0\u5230\u5b83\u7684\u7236\u4eb2u\u7684\u8054\u901a\u5757\u4e2d\u7684\u60c5\u51b5\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0$(u,j)$\u548c$(v,k)$\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u80fd\u653e\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u5f53\u4e2d\u5f53\u4e14\u4ec5\u5f53$j<=k$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u8fd9\u6837\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n## $Dp_{u,j}+=Max_{k=j}^{n}Dp_{v,k}$\n\n\u610f\u4e49\u662f\u6211\u4eec\u679a\u4e3e\u6240\u6709\u5408\u6cd5\u7684\u8fde\u8fb9\u60c5\u51b5\u5728\u6240\u6709\u7684\u8fde\u8fb9\u65b9\u6848\u5f53\u4e2d\u53d6max\n\n\u521d\u59cb\u6761\u4ef6\u6bcf\u4e2a\u70b9\u7684$Dp_{i,w_{i}}=1$\u5176\u4ed6dp\u9879\u5168\u90e8\u4e3a0\n\n\u76f4\u63a5\u66b4\u529b\u8f6c\u79fb\u590d\u6742\u5ea6\u662f$O(n^3)$\u901a\u8fc7\u9884\u5904\u7406\u8fd9\u4e2a\u6570\u7ec4\u7684\u540e\u7f00max\u6570\u7ec4\u7684\u65b9\u5f0f\u6211\u4eec\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u964d\u5230$O(n^2)$\u4f46\u662f\u95ee\u9898\u6765\u4e86\u6211\u4eec\u7684\u6570\u636e\u8303\u56f4\u662f$10^5$\u56e0\u6b64\u8fd9\u70b9\u4f18\u5316\u5b8c\u5168\u6ca1\u7528\n\n\u53d1\u73b0\u590d\u6742\u5ea6\u5728\u8f6c\u79fb\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\n\n\u6211\u4eec\u53d1\u73b0\u8f6c\u79fb\u4e00\u6574\u4e2a\u6570\u7ec4\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u4e8e\u628a\u6bcf\u4e2au\u5b69\u5b50v\u7684dp\u6570\u7ec4\u7684\u540e\u7f00max\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\u4e4b\u540e\u6700\u540e\u628au\u7684\u539f\u59cbdp\u6570\u7ec4\u548c\u8fd9\u4e2a\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\u3002\n\n\u5982\u679c\u4f60\u8db3\u591f\u719f\u7ec3\u7684\u8bdd\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\u8fd9\u4e2a\u64cd\u4f5c\u5e94\u8be5\u96be\u4e0d\u4f4f\u4f60\uff0c\u4f46\u662f\u4f60\u4f1a\u9762\u4e34\u4e00\u4e2a\u5341\u5206\u8fa3\u624b\u7684\u64cd\u4f5c\u2014\u2014\u6c42\u540e\u7f00max\u6570\u7ec4\n\n\u5047\u5982\u4f60\u662f\u4e00\u540d\u5373\u5c06ak\u7684julao\uff0c\u95f2\u6765\u65e0\u4e8b\u6253\u5370\u51fa\u4e86\u8fd9\u4e2adp\u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u6570\u7ec4\u8fdb\u884c\u540e\u5411\u5dee\u5206\uff0c\u90a3\u4e48\u539f\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\u76f8\u5f53\u4e8e\u5dee\u5206\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u6c42\u540e\u7f00max\u6570\u7ec4\u7684\u64cd\u4f5c\uff0c\u53d1\u73b0\u4e00\u4e2a\u6709\u8da3\u7684\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u540e\u5411\u5dee\u5206\u5168\u90e8\u975e\u8d1f\u7684\u6570\u7ec4\uff0c\u5b83\u7684\u540e\u7f00max\u6570\u7ec4\u548c\u539f\u6570\u7ec4\u4e00\u6837\u2026\u2026\uff0c\u800c\u4e14\u540e\u7f00max\u6570\u7ec4\u4e00\u5b9a\u662f\u5dee\u5206\u5168\u6b63\u7684\u2026\u2026\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u51fa\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff0c\u3010\u5404\u4e2a\u5b69\u5b50\u7684\u3011\u3010\u540e\u7f00max\u6570\u7ec4\u7684\u3011\u548c\u6570\u7ec4\u3010\u7684\u5dee\u5206\u3011\u4e00\u5b9a\u4e5f\u662f\u5168\u6b63\u7684\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e00\u4ef6\u5f88\u6709\u610f\u601d\u7684\u4e8b\u60c5\uff0c\u53ea\u6709\u52a0\u5165\u4e86u\u7684\u6570\u7ec4\u4e4b\u540e\u8fd9\u4e2a\u6570\u7ec4\u624d\u6709\u53ef\u80fd\u51fa\u73b0\u8d1f\u5dee\u5206\u7684\u73b0\u8c61\uff0c\u6b64\u65f6\u6211\u4eec\u6c42\u540e\u7f00max\u6570\u7ec4\u624d\u6709\u610f\u4e49\uff0c\u5982\u679c\u540c\u65f6\u51fa\u73b0\u4e86\u591a\u4e2a\u8d1f\u70b9\u6211\u4eec\u5c06\u4f1a\u975e\u5e38\u96be\u53d7\uff0c\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u4e2a\u5dee\u5206\u6570\u7ec4\u6700\u591a\u6709\u51e0\u4e2a\u8d1f\u70b9\u5462\uff1f\n\n\u663e\u7136\u8d1f\u70b9\u53ea\u80fd\u6765\u81ea\u548cu\u7684\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\u8fd9\u4e2a\u64cd\u4f5c\n\n\u4f46\u662f\u6ce8\u610f\u5230\u6211\u4eec\u53d8\u6362\u4e86\u8f6c\u79fb\u987a\u5e8f\uff0c\u5148\u52a0\u5b8c\u4e86\u6240\u6709\u513f\u5b50\uff0c\u6700\u540e\u8003\u8651u\uff0c\u56e0\u6b64\u6211\u4eec\u7684u\u6570\u7ec4\u8fd8\u662f\u8fb9\u754c\u6761\u4ef6\u72b6\u6001\u2026\u2026\n\n\u4e5f\u5c31\u662f\u8bf4\u4e00\u58060\u91cc\u6709\u4e00\u4e2a1\n\n\u6362\u53e5\u8bdd\u8bf4\u5b83\u7684\u5dee\u5206\u6570\u7ec4\u5c31\u662f\u4e00\u4e2a1\u7d27\u8d34\u7740\u4e00\u4e2a-1\n\n\u6240\u4ee5u\u6570\u7ec4\u505a\u5b8c\u6309\u4f4d\u76f8\u52a0\u4e4b\u540e\u8fd9\u4e2a\u4e1c\u897f\u91cc\u9762\u6700\u591a\u6709\u4e00\u4e2a\u8d1f\u70b9\n\n\u8003\u8651\u63d2\u5165\u8fd9\u4e2a-1\u7684\u65f6\u5019\u4f1a\u53d1\u751f\u4ec0\u4e48\n\n\u5982\u679c\u52a0\u5230\u4e86\u4e00\u4e2a\u6b63\u7684\u5dee\u5206\u4e0a\u52a0\u5b8c\u4e4b\u540e\u5dee\u5206\u6570\u7ec4\u975e\u8d1f\u6240\u4ee5\u4e0d\u7528\u7ba1\n\n\u5f88\u4e0d\u5e78\u7684\u52a0\u5230\u4e860\u70b9\u4e0a\u6211\u4eec\u53ef\u80fd\u9700\u8981\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5904\u7406\u8fd9\u4e2a-1\u5dee\u5206\n\n\u663e\u7136\u4f1a\u8ba9\u63d2\u5165\u4e4b\u540e\u7684\u6570\u7ec4\"\u4e0b\u6c89\"\u4e00\u4e2a\u5355\u4f4d\uff0c\u6b64\u65f6\u6211\u4eec\u53d6\u540e\u7f00max\u5bfc\u81f4\u4e86\u8fd9\u4e2a\u4e0b\u6c89\u7684\u90e8\u5206\u4f1a\u6709\u4e00\u90e8\u5206\u88ab\u8fd9\u4e2a-1\u524d\u9762\u7684\u4f4d\u7f6e\u201c\u586b\u5e73\u201d\n\n\u90a3\u4e48\u7531\u4e8e\u4e0b\u6c89\u7684\u9ad8\u5ea6\u53ea\u67091\uff0c\u56e0\u6b64\u88ab\u586b\u5e73\u7684\u533a\u95f4\u5c31\u662f\u8fd9\u4e2a-1\u7684\u4f4d\u7f6e\u5230\u8fd9\u4e2a-1\u524d\u9762\u7684\u7b2c\u4e00\u4e2a\u975e\u96f6\u5dee\u5206\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7531\u4e8e\u8fd9\u4e2a\u4f4d\u7f6e\u88ab\u586b\u5e73\u4e861\uff0c\u56e0\u6b64\u8fd9\u4e2a\u524d\u9a71\u9700\u8981-1\uff0c\u7136\u540e\u5269\u4f59\u7684\u5dee\u5206\u5e76\u4e0d\u6539\u53d8\n\n\u5982\u679c\u524d\u9a71\u4e0d\u5b58\u5728\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u70b9\u90fd\u5c06\u88ab\u586b\u5e73\uff0c\u6240\u4ee5\u8fd9\u4e2a-1\u767d\u63d2\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u770b\u4e00\u770b\u73b0\u5728\u6211\u4eec\u9700\u8981\u5179\u74f7\u4ec0\u4e48\u64cd\u4f5c\u2026\u2026\n\n\u6570\u7ec4\u6309\u4f4d\u76f8\u52a0\uff0c\u627e\u6570\u7ec4\u91cc\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7b2c\u4e00\u4e2a\u975e0\u4f4d\u7f6e\n\n\u627e\u524d\u9a71map\u5373\u53ef\n\n\u4ec0\u4e48\uff1f\u4f60\u8bf4\u6309\u4f4d\u76f8\u52a0\uff1f\u66b4\u529b\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u628a\u5c0f\u7684map\u4e2d\u7684\u5143\u7d20\u4e00\u4e2a\u4e00\u4e2a\u52a0\u5165\u5230\u5927\u7684map\u5f53\u4e2d\u590d\u6742\u5ea6$O(nlog^2n)$\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u7528\u4e00\u4e2amap\u6109\u5feb\u7684\u505a\u5b8c\u4e86\u8fd9\u9053\u9898\n\n(\u5176\u5b9e\u627e\u524d\u9a71\u548c\u6309\u4f4d\u76f8\u52a0\u53ef\u4ee5\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\u5230\u66f4\u4f18\u79c0\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\u4e86QAQ)\n\n\u4ee3\u7801\u5f88\u597d\u5199~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<map>\nusing namespace std;const int N=2*1e5+10;int n;int tot;\nmap <int,int> dp[N];int res;\nint v[N];int x[N];int al[N];int ct;int w[N];int lsh[N];int rk[N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\ninline bool cmp(int a,int b){return w[a]<w[b];}\ninline void merge(int p1,int p2)//\u66b4\u529b\u542f\u53d1\u5f0f\u5408\u5e76 \n{\t\n\tif(dp[p1].size()<dp[p2].size())swap(dp[p1],dp[p2]);\n\tmap <int,int>::iterator it;\n\tfor(it=dp[p2].begin();it!=dp[p2].end();++it){dp[p1][it->first]+=it->second;}\n}\ninline void dfs(int u) \n{\n\tfor(int i=al[u];i;i=x[i]){dfs(v[i]);merge(u,v[i]);}//\u52a0\u4e00\u4e0b\u6240\u6709\u5b69\u5b50 \n\tint fk=rk[u]-1;if(dp[u].begin()->first>fk)return;//\u627e\u524d\u9a71 ,lower_bound\u4e4b\u540e--\u8fed\u4ee3\u5668\u5373\u53ef \n\tmap <int,int>::iterator it=dp[u].lower_bound(fk);if(it->first!=fk)--it;\n\tif(it->second==1){dp[u].erase(it);}else it->second--;//\u8bb0\u5f97\u5224\u4e00\u4e0b\u5982\u679c\u662f1\u7684\u8bdd\u51cf\u6cd5\u6539\u6210erase \n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&w[i]);\n\tfor(int i=2,f;i<=n;i++){scanf(\"%d\",&f);add(f,i);}\n\tfor(int i=1;i<=n;i++)lsh[i]=i;sort(lsh+1,lsh+n+1,cmp);//\u79bb\u6563\u5316 \n\trk[lsh[1]]=1;for(int i=2;i<=n;i++)rk[lsh[i]]=(w[lsh[i]]==w[lsh[i-1]])?rk[lsh[i-1]]:i;\n\tfor(int i=1;i<=n;i++)dp[i][rk[i]]++;dfs(1);map <int,int>::iterator it;\n\tfor(it=dp[1].begin();it!=dp[1].end();++it){res+=it->second;}//\u52a0\u4e0a\u6240\u6709\u7684\u5dee\u5206\u5c31\u53ef\u4ee5\u8fd8\u539f\u539f\u6570\u7ec4\u7684\u6700\u5927\u503c \n\tprintf(\"%d\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```",
        "postTime": 1527342117,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "[Luogu P4577](https://www.luogu.com.cn/problem/P4577)\u3002\n\n## Description\n\n\u7ed9\u51fa\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\uff0c\u7b2c $i$ \u4e2a\u8282\u70b9\u7684\u6743\u503c\u4e3a $w_i$\u3002\n\n\u4f60\u9700\u8981\u9009\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u8282\u70b9\u96c6\u5408\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u8282\u70b9\u96c6\u5408\u4e2d\u4e0d\u540c\u7684\u4e24\u4e2a\u70b9 $i, j$\uff0c\u82e5 $i$ \u4e3a $j$ \u7684\u7956\u5148\u8282\u70b9\uff0c\u5fc5\u987b\u6ee1\u8db3 $w_i \\geq w_j$\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1 \\leq  n \\leq 2 \\times 10^5$\uff0c$1 \\leq w_i \\leq 10^9$\u3002  \n\u65f6\u7a7a\u9650\u5236\uff1a$1000 \\ \\mathrm{ms}/ 250 \\ \\mathrm{MiB}$\u3002\n\n## Solution\n\n\u63d0\u4f9b\u4e00\u79cd\u7c7b\u4f3c [[NOI2020] \u547d\u8fd0](https://www.luogu.com.cn/problem/P6773) \u7684\u6574\u4f53 dp \u505a\u6cd5\u3002\n\n\u8003\u8651 dp\u3002\u8bb0 $f(u, i)$ \u8868\u793a\uff1a\u5728\u5b50\u6811 $u$ \u4e2d\u9009\u51fa\u7684\u8282\u70b9\u96c6\u5408\u7684 $w$ \u6700\u5c0f\u503c\u4e3a $i$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u7684\u8282\u70b9\u96c6\u5408\u7684\u5927\u5c0f\u3002\u6709\u4e24\u79cd\u8f6c\u79fb\uff1a\n\n- \u8282\u70b9\u96c6\u5408\u4e0d\u5305\u62ec $u$\uff08\u8981\u4fdd\u8bc1 $f(u, i)$ \u81f3\u5c11\u6709\u4e00\u4e2a $f(v, i)$ \u7684\u8f6c\u79fb\uff09\u3002\n\n$$\nf(u, i) \\gets \\sum\\limits_{v \\in \\mathrm{son}(u)} \\max\\{f(v, \\geq i)\\}\n$$\n\n- \u8282\u70b9\u96c6\u5408\u5305\u62ec $u$\u3002\n\n$$\nf(u, w_u) \\gets 1 + \\sum\\limits_{v \\in \\mathrm{son}(u)} \\max\\{f(v, \\geq w_u)\\}\n$$\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\u4f18\u5316\uff0c\u5728\u4e00\u68f5\u7ef4\u62a4\u5b50\u6811 $u$ \u7684\u7ebf\u6bb5\u6811\u4e2d\uff0c\u4ee3\u8868\u533a\u95f4 $[l, r]$ \u7684\u8282\u70b9\u9700\u8981\u7ef4\u62a4\u5728\u5b50\u6811 $u$ \u4e2d\u9009\u51fa\u7684\u8282\u70b9\u96c6\u5408\u7684 $w$ \u6700\u5c0f\u503c\u5728\u533a\u95f4 $[l, r]$ \u4e2d\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u7684\u8282\u70b9\u96c6\u5408\u7684\u5927\u5c0f\uff0c\u5373 $\\max\\limits_{l \\leq i \\leq r} f(u, i)$\u3002\n\n\u8f6c\u79fb 1 \u5373\u4e3a\u6574\u4f53 dp \u7684\u91cd\u70b9\uff0c\u5728\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u3002\u5177\u4f53\u5730\uff0c\u5728\u5408\u5e76\u7ebf\u6bb5\u6811 `p, q` \u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bbe\u5f53\u524d\u5408\u5e76\u5230\u4e86\u4ee3\u8868\u533a\u95f4 `[l, r]` \u7684\u8282\u70b9\uff0c\u5728\u9012\u5f52\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55 $\\max\\limits_{i < l} \\{f(u, i)\\}$ \u4e0e $\\max\\limits_{i < l} \\{f(v, i)\\}$ \u5e76\u5206\u522b\u8bb0\u4f5c `maxp, maxq`\u3002\u5c06\u60c5\u51b5\u5206\u6210\u4ee5\u4e0b\u4e94\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5f53 $p = 0, q = 0$ \u65f6\uff1a\u8fd4\u56de\u7a7a\u8282\u70b9 $0$ \u5373\u53ef\u3002\n- \u5f53 $p \\neq 0, q = 0$ \u65f6\uff1a\u6b64\u65f6\u76f8\u5f53\u4e8e\u5bf9 $p$ \u5185\u505a\u4e00\u6b21\u533a\u95f4\u52a0 `maxq`\uff0c\u6253\u4e0a\u61d2\u6807\u8bb0\u540e\u8fd4\u56de $p$ \u5373\u53ef\u3002\n- \u5f53 $p = 0, q \\neq 0$ \u65f6\uff1a\u6b64\u65f6\u76f8\u5f53\u4e8e\u5bf9 $q$ \u5185\u505a\u4e00\u6b21\u533a\u95f4\u52a0 `maxp`\uff0c\u6253\u4e0a\u61d2\u6807\u8bb0\u540e\u8fd4\u56de $q$ \u5373\u53ef\u3002\n- \u5f53 $l = r$ \u65f6\uff1a\u6b64\u65f6\u9012\u5f52\u5230\u4e86\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6709 $f'(u, l) = \\max(\\mathtt{maxp}, f(u, l)) + \\max(\\mathtt{maxq}, f(v, l))$\u3002\n- \u5f53 $p \\neq 0, q \\neq 0$ \u65f6\uff1a\u6b64\u65f6\u9700\u8981\u5148\u5408\u5e76 $p, q$ \u7684\u5de6\u53f3\u513f\u5b50\uff0c\u518d\u4ee5\u901a\u8fc7\u5de6\u53f3\u513f\u5b50\u4e0a\u4f20\u4fe1\u606f\u3002\n\n> \u7279\u522b\u8981\u6ce8\u610f\u7684\u662f\uff0c\u533a\u95f4\u52a0\u4e0d\u7528\u4e5f\u4e0d\u80fd\u5bf9\u7a7a\u8282\u70b9\u6253\u6807\u8bb0\uff0c\u56e0\u4e3a\u7a7a\u8282\u70b9\u4e0d\u80fd\u4fdd\u8bc1 $f(u, i)$ \u81f3\u5c11\u6709\u4e00\u4e2a $f(v, i)$ \u7684\u8f6c\u79fb\u3002\n\n\u8f6c\u79fb 2 \u5373\u4e3a\u5e73\u51e1\u7684\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\uff0c\u5355\u70b9\u4fee\u6539\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log w)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log w)$\u3002\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\ntemplate <class T>\ninline void read(T &x) {\n\tstatic char s;\n\twhile (s = getchar(), s < '0' || s > '9');\n\tx = s - '0';\n\twhile (s = getchar(), s >= '0' && s <= '9') x = x * 10 + s - '0';\n}\n\nconst int N = 200100;\nconst int sup = 1e9;\n\nint n;\nint a[N]; \n\nint tot, head[N], ver[N], Next[N];\nvoid add_edge(int u, int v) {\n\tver[++ tot] = v;    Next[tot] = head[u];    head[u] = tot;\n}\n\nnamespace SGT {\n\tconst int pond = 10001000;\n\n\tint nClock, root[N];\n\tstruct node {\n\t\tint lc, rc;\n\t\tint max;\n\t\tint add;\n\n\t\tvoid mk_add(int x) {\n\t\t\tmax += x;\n\t\t\tadd += x;\n\t\t}\n\t} t[pond];\n\n\tvoid spread(int p) {\n\t\tif (t[p].add) {\n\t\t\tif (t[p].lc) t[t[p].lc].mk_add(t[p].add);\n\t\t\tif (t[p].rc) t[t[p].rc].mk_add(t[p].add);\n\t\t\tt[p].add = 0;\n\t\t}\n\t}\n\n\tvoid insert(int &p, int l, int r, int x, int val) {\n\t\tif (!p) p = ++ nClock;\n\t\tt[p].max = std::max(t[p].max, val);\n\t\tif (l == r) return;\n\n\t\tspread(p);\n\t\tint mid = (l + r) >> 1;\n\n\t\tif (x <= mid)\n\t\t\tinsert(t[p].lc, l, mid, x, val);\n\t\telse\n\t\t\tinsert(t[p].rc, mid + 1, r, x, val);\n\t}\n\n\tint ask(int p, int l, int r, int s, int e) {\n\t\tif (s <= l && r <= e) return t[p].max;\n\n\t\tspread(p);\n\t\tint mid = (l + r) >> 1;\n\t\tint cur = 0;\n\n\t\tif (s <= mid)\n\t\t\tcur = std::max(cur, ask(t[p].lc, l, mid, s, e));\n\t\tif (mid < e)\n\t\t\tcur = std::max(cur, ask(t[p].rc, mid + 1, r, s, e));\n\n\t\treturn cur;\n\t}\n\n\tint merge(int p, int q, int l, int r, int maxp, int maxq) {\n\t\tif (!p && !q) return 0;\n\t\tif (p && !q) return t[p].mk_add(maxq), p;\n\t\tif (!p && q) return t[q].mk_add(maxp), q;\n\t\tif (l == r)\n\t\t\treturn t[p].max = std::max(t[p].max, maxp) + std::max(t[q].max, maxq), p;\n\n\t\tspread(p), spread(q);\n\t\tint mid = (l + r) >> 1;\n\n\t\tt[p].lc = merge(t[p].lc, t[q].lc, l, mid,\n\t\t\tstd::max(t[t[p].rc].max, maxp), std::max(t[t[q].rc].max, maxq));\n\t\tt[p].rc = merge(t[p].rc, t[q].rc, mid + 1, r, maxp, maxq);\n\t\tt[p].max = std::max(t[t[p].lc].max, t[t[p].rc].max);\n\n\t\treturn p;\n\t}\n}\n\nvoid dp(int u) {\n\tint val = 1;\n\tfor (int i = head[u]; i; i = Next[i]) {\n\t\tint v = ver[i];\n\t\tdp(v);\n\n\t\tval += SGT::ask(SGT::root[v], 1, sup, a[u], sup);\n\t\tSGT::root[u] = SGT::merge(SGT::root[u], SGT::root[v], 1, sup, 0, 0);\n\t}\n\n\tSGT::insert(SGT::root[u], 1, sup, a[u], val);\n}\n\nint main() {\n\tread(n);\n\n\tfor (int i = 1; i <= n; i ++) read(a[i]);\n\n\tfor (int i = 2, fa; i <= n; i ++) {\n\t\tread(fa);\n\t\tadd_edge(fa, i);\n\t}\n\n\tdp(1);\n\n\tprintf(\"%d\\n\", SGT::t[SGT::root[1]].max);\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1679556210,
        "uid": 129578,
        "name": "Calculatelove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4577\u3010[FJOI2018] \u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "\u4e3a\u5565dalao\u4eec\u5199\u7684\u90fd\u662f$O(n\\log ^2n)$\u7684dp\u4ec0\u4e48\u7684...\u660e\u660e\u6392\u5e8f\u540e\u8d2a\u5fc3\u662f\u5bf9\u7684\u554a...\u8fd8\u662f\u5148\u8bb2\u4e00\u8fb9DP\n\n## DP\n\n\u5f88\u5bb9\u6613\u5199\u51fa$O(n^2)$\u7684\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8bbe$dp[x][i]$\u8868\u793ax\u5b50\u6811\uff0c\u9009\u62e9\u7684\u6700\u5c0f\u6743\u503c$\\ge v$\u7684\u6700\u4f18\u89e3\u3002\n\n\u7136\u540e\u53d1\u73b0\u5f62\u5982\uff1a\u628a\u5b50\u6811\u7684dp\u503c\u5bf9\u5e94\u52a0\u8d77\u6765\uff0c\u7136\u540e\u53d6\u4e00\u4e2a\u524d\u7f00max\u6765\u4fee\u6539\u3002\n\n~~\u8fd9\u4e0d\u662f\u6574\u4f53DP\uff08\u7ebf\u6bb5\u6811\u5408\u5e76\uff09\u7684\u677f\u5b50\u5417~~\n\n\u4f46\u662f\u6211\u4eec\u8981\u5199\u7684\u723d\uff01\n\n\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u53d6\u524d\u7f00max\u7684dp\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u5b83\u7684\u540e\u5411\u5dee\u5206\u6570\u7ec4\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u76f8\u5f53\u4e8e\u5728w[x]\u5904\u5dee\u5206\u6570\u7ec4+1\uff0c\u5728\u5dee\u5206\u6570\u7ec4\u4e2dw[x]\u7684\u524d\u9a71\u5904-1\uff0c\u8fd9\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u7528map\u5b9e\u73b0\u3002\n\n\u4ee3\u7801\u6781\u5176\u597d\u5199\u3002\n\n```cpp\nvoid dfs(int x)\n{\n\tfor(solid v:sn[x])\n\t{\n\t\tdfs(v);\n\t\tif(Size(dp[v])>Size(dp[x])) dp[x].swap(dp[v]);\n\t\tfor(solid it:dp[v])\n\t\t\tif(!(dp[x][it.fi]+=it.se)) dp[x].erase(it.fi);\n\t}\n\t++dp[x][w[x]];\n\tauto it=dp[x].lower_bound(w[x]);\n\tif(it!=dp[x].begin())\n\t\tif(!--(--it)->se) dp[x].erase(it->fi);\n}\n```\n\n## \u8d2a\u5fc3\n\n\uff08\u8bb2\u9053\u7406\u5982\u679c\u4f60\u4e3a\u4e86\u8ffd\u6c42\u590d\u6742\u5ea6\uff0c\u662f\u9700\u8981\u5199\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u8fdb\u884c\u4e0b\u9762\u8bf4\u7684\u67e5\u627e\u7684\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u76f4\u63a5\u66b4\u529b\u8df3fa\u5c31\u975e\u5e38\u5feb\uff0c\u751a\u81f3\u6392\u8fdbrk\u524d3\uff08\u4e0d\u662f\u6211\u5199\u7684\uff0c\u522b\u4eba\u5199\u7684\uff09\n\n\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u9009\u62e9\u7684\u70b9\u7684\u96c6\u5408\u3002\u6211\u4eec\u628a\u70b9\u6309w\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u76f8\u540c\u7684\u6309\u7167\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u8003\u8651\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u627e\u5230\u5b83\u6700\u6df1\u7684\u88ab\u9009\u62e9\u7684\u7956\u5148\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u9009\u5b83\uff0c\u7b54\u6848+1\uff1b\u5426\u5219\uff0c\u4e0d\u9009\u62e9\u5b83\u7684\u7956\u5148\uff0c\u9009\u62e9\u5b83\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u540e\u9762\u7684\u70b9w\u90fd\u66f4\u5c0f\u3002\u6211\u4eec\u9009\u62e9\u7684\u70b9\u96c6\u81ea\u7136\u8d8a\u6df1\u8d8a\u597d\u3002\n\n\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5c0f\u9505\uff1a\u5047\u5982\u70b9x\u6709\u4e24\u4e2a\u7956\u5148y\u548cz$(dep[y]>dep[z])$\u90fd\u88ab\u9009\u62e9\uff0c\u90a3\u4e48\u7406\u8bba\u4e0a\u662f\u4e0d\u80fd\u4e0d\u9009y\uff0c\u9009x\u7684\u3002\u4f46\u662f\u6211\u4eec\u8fd9\u6837\u8003\u8651\uff1a\u5982\u679c\u6700\u7ec8\u7b54\u6848\u4e0d\u5305\u542bz\uff0c\u6bd4\u65b9\u8bf4p\u9876\u66ff\u4e86z\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u4e0d\u4f1a\u51b2\u7a81\u4e86\uff1b\u5982\u679c\u7b54\u6848\u5305\u542bz\uff0c\u8bf4\u660ez\u7684\u5b50\u6811\u91cc\u6ca1\u6709\u65b0\u70b9\u4e86\uff0c\u90a3\u4e48\u8fd9\u6b21\u201c\u9519\u8bef\u7684\u201d\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u503c\uff08\u65e0\u8bba\u9009y\u8fd8\u662f\u9009x\uff0c\u7b54\u6848\u90fd\u4e0d\u53d8\uff09",
        "postTime": 1556165214,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u8d2a\u5fc3/\u6574\u4f53DP-[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/16071315.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u6c42\u6811\u4e0a\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u4e0d\u59a8\u5148\u60f3\u60f3\u5e8f\u5217\u4e0a\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u518d\u5c06\u5e8f\u5217\u4e0a\u7684\u65b9\u6cd5\u79fb\u690d\u5230\u6811\u4e0a\u6765\u3002\n\n\u5e8f\u5217\u4e0a\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u95ee\u9898\uff1a\n\n\u6211\u4eec\u6709 $\\mathcal{O(n^2)}$ \u7684\u65e0\u8111\u52a8\u6001\u89c4\u5212\u505a\u6cd5\uff0c\u53ef\u4ee5\u4f18\u5316\u5230 $\\mathcal{O(n\\log n)}$\u3002\u6bcf\u4e00\u6b21\u5c3d\u91cf\u9009\u4e0e\u7b54\u6848\u5e8f\u5217\u7684\u4e0a\u4e00\u4e2a\u6570\u76f8\u8fd1\u7684\u6570\u3002\u6bd4\u5982\u8bf4 `5 4 1`\uff0c\u5982\u679c\u53c8\u6709\u4e00\u4e2a $3$ \u5728\u540e\u9762\uff0c\u90a3\u4e48\u53ef\u4ee5\u62ff $3$ \u66ff\u6362 $1$\uff1a`5 4 3`\uff0c\u8fd9\u6837\u5982\u679c\u540e\u9762\u518d\u51fa\u73b0\u4e00\u4e2a $2$ \u4e5f\u53ef\u4ee5\u52a0\u5165\u7b54\u6848\u5e8f\u5217\u4e2d\u3002\n\n\u6269\u5c55\u5230\u6811\u4e0a\uff1a\n\n\u7ef4\u62a4 $f_i$\uff0c\u8868\u793a\u4ee5\u70b9 $i$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u6ce8\u610f $f_i$ \u662f\u4e00\u4e2a\u5e8f\u5217\u3002\u56e0\u4e3a\u5b50\u6811\u76f8\u4e92\u72ec\u7acb\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u5408\u5e76\u3002\n\n\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u6570\u7684**\u76f8\u5bf9\u5927\u5c0f**\u53d6\u53cd\uff0c\u7136\u540e\u63d2\u5165\u4e00\u4e2a\u6570\u65f6\u627e\u5230\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u6570 $x$\uff0c\u5c06 $x$ \u5220\u6389\uff0c\u63d2\u5165\u5f53\u524d\u6570\u5373\u53ef\u3002\u6700\u540e\u7b54\u6848\u5373\u4e3a $f_1$ \u7684\u957f\u5ea6\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/3/29\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <set>\n#define enter putchar(10)\n#define debug(c,que) cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) cout << arr[i] << w;\n#define speed_up() cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : -(x))\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\nusing namespace std;\n\nconst int N = 2e5 + 5;\nstruct Gragh {\n\tint v,nxt;\n} gra[N << 1];\nint a[N],head[N];\t\nmultiset<int>st[N];\nint n,idx;\ninline void add(int u,int v) {\n\tgra[++ idx].v = v,gra[idx].nxt = head[u],head[u] = idx;\n}\ninline void merge(int x,int y) {\n\tif (st[x].size() < st[y].size()) swap(st[x],st[y]);\n\tfor (multiset<int>::iterator it = st[y].begin();it != st[y].end(); ++ it) {\n\t\tst[x].insert(*it);\n\t}\n}\ninline void dfs(int now,int fath) {\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (v != fath) {\n\t\t\tdfs(v,now);\n\t\t\tmerge(now,v);\n\t\t}\n\t}\n\tmultiset<int>::iterator it = st[now].lower_bound(a[now]);\n\tif (it != st[now].end()) st[now].erase(it);\n\tst[now].insert(a[now]);\n}\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read();\n\tfor (register int i = 1;i <= n; ++ i) a[i] = 1e9 - read();\n\tfor (register int i = 2;i <= n; ++ i) {\n\t\tint x = read();\n\t\tadd(i,x),add(x,i);\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\\n\",st[1].size());\n\t\n\treturn 0;\n}\n```",
        "postTime": 1648532226,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P4577 [FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898"
    },
    {
        "content": "> \u7ed9\u5b9a\u4e00\u68f5\u6709\u6839\u6811\uff0c\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u5b50\u96c6(\u4e0d\u4e00\u5b9a\u8054\u901a)\uff0c\u4f7f\u5f97\u5b50\u96c6\u6ee1\u8db3\u6027\u8d28,$\\forall(x,y),x$\u662f$y$\u7684\u5b50\u5b59\u90fd\u6709$v_x\\geqslant v_y$\n\n#### $40~pts'$\n\n\u6211\u4eec\u53ea\u7528\u77e5\u9053\u5b50\u6811\u5185\u7684\u6700\u5c0f\u5143\u7d20\u5c31\u53ef\u4ee5\u770b$x$\u8fd9\u4e2a\u70b9\u53d6\u4e0d\u53d6\u4e86\n\n\u56e0\u6b64\u8bbe$f_{x,K}$\u8868\u793a\u4ee5$x$\u4e3a\u6839(\u4f46$x$\u53ef\u4e0d\u53d6)\uff0c\u5b50\u6811\u5185\u6700\u5c0f\u6743\u503c\u6743\u503c$\\geqslant K$\u7684\u6700\u5927\u5b50\u96c6\n\n\u5bf9\u6700\u503c\u8bbe\u81f3\u5c11\u4e0d\u8bbe\u521a\u597d\u7684\u539f\u56e0\u662f\u4f60\u53d1\u73b0\u6743\u503c\u662f\u79bb\u6563\u7684\uff0c\u4e00\u4e2a\u503c\u9009\u4e86\u4f1a\u5f71\u54cd\u4e00\u4e2a\u8303\u56f4\u7684\u9009\u53d6\uff0c\u6211\u4eec\u53ea\u7528\u6700\u503c\u8303\u56f4\u53ef\u4ee5\u65b9\u4fbf\u8f6c\u79fb\u4e2d\u7684\u7f29\u653e\n\n\u7136\u540e\u53ef\u4ee5\u5feb\u901f\u8f6c\u79fb\u5982\u4e0b\n$$\nf_{x,K}=[a_x\\leqslant K]+\\sum_{y}f_{y,K}\n$$\n\u6ce8\u610f\u5230\u5b58\u5728\u81f3\u5c11\u8fd9\u4e2a\u5173\u952e\u5b57\u773c\u9700\u8981\u6c42\u524d\u7f00$\\max$,\u65e0\u6cd5\u76f4\u63a5\u6570\u636e\u7ed3\u6784\u4f18\u5316\n\n```cpp\ninline void dfs(int x){\n\tint i;\n\tfor(int y:g[x]){\n\t\tdfs(y);\n\t\tfor(i=1;i<=len;++i)f[x][i]+=f[y][i];\n\t}++f[x][a[x]];for(i=len-1;i;--i)f[x][i]=max(f[x][i],f[x][i+1]);\n}\n```\n\n\n\n#### $100~pts'$\n\n\u4f60\u53d1\u73b0\u4e0a\u9762\u7684\u5f0f\u5b50$\\mathcal O(n^2)$\u7684\u74f6\u9888\u548c$LIS$\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u9700\u8981\u53bb\u679a\u4e3e\u8fd9\u6837\u5927\u5c0f\u5173\u7cfb\u518d\u53bb\u8f6c\u79fb\u5417\n\n\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\n\n- \u628a\u5927\u5c0f\u5173\u7cfb\u53d8\u6210\u503c\u57df\u5212\u5206\u540e\u533a\u57df\u6c42\u6700\u503c$\\Rightarrow $\u6811\u72b6\u6570\u7ec4\u4f18\u5316$LIS$,\u73b0\u5728\u8981\u6c42\u524d\u7f00$\\max$,\u5728\u6811\u4e0a\u6211\u4eec\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef(\u60f3\u4e00\u60f3\u5dee\u5206)\n- \u8003\u8651\u4e00\u79cd\u8d2a\u5fc3\u65b9\u6848\uff0c\u6211\u4eec\u8ba9\u5b50\u6811\u5185\u6700\u5c0f\u70b9\u6743\u5c3d\u91cf\u5927\uff0c\u4e3a\u65b0\u6765\u7684\u70b9\u7559\u4f4d\u7f6e$\\Rightarrow$\u4e8c\u5206\u4f18\u5316$LIS$,\u73b0\u5728\u6211\u4eec\u4f9d\u7136\u4e8c\u5206\uff0c\u7136\u540e\u56e0\u4e3a\u591a\u7ebf\u7a0b\u5408\u5e76\u91c7\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u5957\u4e00\u4e2a\u6709\u5e8f\u7684\u7ed3\u6784$multiset$\u5373\u53ef\n\n\u5b9e\u73b0\u4e0a$F_x$\u8868\u793a$x$\u4e3a\u6839\u5b50\u6811\u5185\u70b9\u503c\u6700\u5c0f\u503c\u6700\u5927\u7684\u96c6\u5408\n\n```cpp\ninline void dfs(int x){\n\tint i;\n\tfor(int y:g[x])dfs(y),Merge(f[x],f[y]);\n\tauto it=(f[x].insert(a[x]),f[x].lower_bound(a[x]));if(it!=f[x].begin())f[x].erase(--it);\n}\n```",
        "postTime": 1598685135,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    },
    {
        "content": "\u521a\u5b66oi \u521a\u63a5\u89e6\u7ebf\u6811\u5408\u5e76,\u4e0d\u4f1a\u7b97\u7a7a\u95f4.\u5355\u770b\u4e00\u6761\u94fe\u662f\u5f88\u88f8\u7684\u6700\u957f\u975e\u5347\u5b50\u5e8f\u5217\u95ee\u9898,\u4f46\u662f\u6811\u4e0a\u95ee\u9898\u9700\u8981\u7ef4\u62a4\u4fe1\u606f.\u6211\u4eec\u8003\u8651nlog\u505a\u6cd5\u60c5\u51b5\u4e0b\u7684\u94fe\u505a\u6cd5,\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u4f9b\u6211\u4eec\u64cd\u4f5c.\u800c\u6811\u4e0a\u95ee\u9898\u5f80\u5f80\u9700\u8981\u5f80\u5408\u5e76\u65b9\u5411\u60f3,\u6216\u8005\u6362\u6839\u7ef4\u62a4,\u8fd9\u662f\u6700\u57fa\u672c\u7684\u601d\u8def.\u8fd9\u9053\u9898\u6839\u5df2\u7ecf\u786e\u5b9a,\u4e0d\u9700\u8981\u6362\u6839,\u5b50\u6811\u4e4b\u95f4\u4e0d\u4ea7\u751f\u4e92\u76f8\u7ea6\u675f,\u6240\u4ee5\u5408\u5e76\u662f\u5408\u6cd5\u7684,\u800c\u5408\u5e76\u624b\u6cd5\u5219\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76.\n\u800c\u7b54\u6848\u5c31\u662f\u6700\u7ec8\u4ee5\u6839\u4e3a\u8f85\u52a9\u6570\u7ec4\u7684size.\u8bb2\u771f\u7ebf\u6bb5\u6811\u5408\u5e76\u7a7a\u95f4\u597d\u96be\u63a7\u5236.\n\u4ee3\u7801\u5982\u4e0b\n```\n#include<bits/stdc++.h>\n#define N 4001000\n#define left l,mid,ls[pos]\n#define righ mid+1,r,rs[pos]\nusing namespace std;bool flag;\nint las[N],to[N],nxt[N],a[N],num[N*2],ls[N*2],rs[N*2],rt[N],n,cnt,d;\nvoid de(int x){if(!x)return;num[x]--;if(num[rs[x]])de(rs[x]);else de(ls[x]);}\nvoid sak_tr(int l,int r,int &pos){\n\tif(!pos)pos=++cnt;num[pos]++;if(l==r)return;int mid=l+r>>1;\n\tif(mid<d){sak_tr(righ);if(!flag&&num[ls[pos]])de(ls[pos]),flag=1;}\n\telse sak_tr(left);if(flag)num[pos]--;\n}\nvoid sak_me(int &pos,int &p){\n\tif(!p||!pos){pos+=p;return;}num[pos]+=num[p];\n\tsak_me(ls[pos],ls[p]),sak_me(rs[pos],rs[p]);\n}\nvoid sak_dfs(int x,int fa){\n\tfor(int i=las[x];i;i=nxt[i])if(to[i]!=fa)\n\t sak_dfs(to[i],x),sak_me(rt[x],rt[to[i]]);\n\tflag=0,d=a[x],sak_tr(0,1e9,rt[x]);\n}\nmain(){\n\tcin>>n;for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1,j=2,c=n*2-2;i<=c;i+=2,j++)scanf(\"%d\",&to[i]),to[i+1]=j,\n\t nxt[i]=las[j],las[j]=i,nxt[i+1]=las[to[i]],las[to[i]]=i+1;\n\tsak_dfs(1,1),cout<<num[rt[1]];\n}\n```\n",
        "postTime": 1543484197,
        "uid": 59907,
        "name": "Sakura_\u68a6\u7476",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4577 \u3010[FJOI2018]\u9886\u5bfc\u96c6\u56e2\u95ee\u9898\u3011"
    }
]