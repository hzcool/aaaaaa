[
    {
        "content": "\u672c\u6587\u65e8\u5728\u63a2\u8ba8\u5173\u4e8e\u8be5\u9898\u7f51\u4e0a\u6d41\u4f20\u7684\u552f\u4e00\u4e00\u4e2a\u7384\u5b66\u9898\u89e3\u7684\u6b63\u786e\u6027\u8bc1\u660e\uff0c\u4ee5\u53ca\u5173\u4e8e\u8be5\u9898\u56fe\u7684\u6027\u8d28\u7684\u5206\u6790.\n\n\u5b9e\u540d\u53cd\u5bf9\u697c\u4e0a\u7684\u9898\u89e3\u5173\u4e8eHNOI2011\u51fa\u9898\u4eba\u7684\u8bc4\u4ef7(\u5927\u96fe\n\n\u4ee5\u53ca\u8fd9\u9898\u662f\u4e00\u9053\u7c7b\u4f3c HNOI2018\u6bd2\u7624 \u7684 \u597d(\u6bd2\u7624) \u9898.\n\n\u4e5f\u662f\u4e00\u4e2a\u672c\u8d28\u4e0a\u7684 \u63d0\u4ea4\u7b54\u6848\u9898.\n\n\u89c2\u5bdf\u9898\u610f\u4e0d\u96be\u53d1\u73b0\u8fd9\u9898\u662f\u7ed9\u5b9a\u56fe\u6c42\u72ec\u7acb\u96c6\u7684\u4e2a\u6570.\n\n\u7136\u800c\u5bf9\u4e00\u822c\u56fe\u800c\u8a00\u8fd9\u662fNP\u7684,\u6240\u4ee5\u6211\u4eec\u731c\u60f3\u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u56fe.\n\n\u90a3\u5b83\u662f\u4e0d\u662f:\n\n\u94fe? (X)\n\n\u6811? (X)\n\n\u57fa\u73af\u6811? (X)\n\n\u4ed9\u4eba\u638c? (?)\n\n\u4e8c\u5206\u56fe? (X)\n\n\u6b63\u5219\u56fe? (X)\n\n\u5f26\u56fe? (X)\n\n\u90a3\u662f\u4e0d\u662f\u51fa\u9898\u4eba\u5c31\u662f\u6bd2\u7624\uff0c\u5c31\u662f\u62ff\u4e00\u4e2aNP\u95ee\u9898\u5f53\u666e\u901a\u9898\u51fa\u51fa\u6765? (X)\n\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u56fe\uff0c\u5b83\uff0c\u81f3\u5c11\uff0c\u662f\uff0c\u4e00\u4e2a\uff0c\u5e73\u9762\u56fe...\n\n\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48X\u752823333\n\n\u8fd9\u662f\u6211\u5728\u6c42\u51fa(1 - 2e5)\u6240\u6709\u8fb9\u518d\u62d3\u6251\u6392\u5e8f\u4ee5\u540e\u5269\u4e0b\u7684\u56fe\u7684\u6837\u5b50:\n\n![]( https://cdn.luogu.com.cn/upload/pic/54010.png )\n\n\u628a\u91cc\u8fb9\u76f8\u4ea4\u7684\u73af\u5c55\u5230\u5927\u73af\u5916\u9762\u5c31\u662f\u4e00\u4e2a\u5e73\u9762\u56fe\u4e86.\n\n\u8fd9\u662f\u6211\u5728\u6c42\u51fa(2e4 - 1e6)\u6240\u6709\u8fb9\u518d\u62d3\u6251\u6392\u5e8f\u4ee5\u540e\u5269\u4e0b\u7684\u56fe\u7684\u6837\u5b50:\n\n![]( https://cdn.luogu.com.cn/upload/pic/54011.png )\n\n\u6211\u4eec\u53d1\u73b0\u5b83\u751a\u81f3\u662f\u4e00\u4e2a\u6c99\u6f20\u56fe(\u4ed9\u4eba\u638c\u68ee\u6797).\n\n\u4e5f\u5c31\u662f\u8bf4\u51fa\u9898\u4eba\u6545\u610f\u5b89\u6392\u7684\u90e8\u5206\u5206\u5176\u5b9e\u662f\u6709\u610f\u4e49\u7684\u3002\n\n\u5177\u4f53\u52063\u6863\n\n30pt(1) : \u6811\u5f62DP\n\n70pt(1 + 3) : \u4ed9\u4eba\u638cDP\n\n100pt(1 + 2 + 3) : \u6b63\u89e3.\n\n\u901a\u8fc7\u89c2\u5bdf\u53d1\u73b0\uff0c\u539f\u56fe\u6240\u6709\u7684\u8054\u901a\u5b50\u56fe\u4e2d\u6700\u591a\u6bd4\u6811\u591a3\u6761\u8fb9\uff0c\u6240\u4ee5\u8fd9\u9898\u76f4\u63a5\u53d8\u6210\u4e86\u6bd2\u7624\u7684\u5f31\u5316\u7248\uff0c\u6240\u4ee5\u6240\u8c13\u7684\u7384\u5b66\u505a\u6cd5(\u6bd2\u7624\u7684\u90e8\u5206\u5206\u505a\u6cd5)\u81ea\u7136\u80fd\u8fc7\u5566.\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int mod = 1e9 + 7;\nint PW2[1000005];\n\nconst int maxN = 1e6;\n\nint n;\nint num[1000005];\n\nvector<int> to[1000005];\nbool vis[1000005];\nbool ins[1000005];\nint  sat[1000005];\n\nvector<int> QE;\n\nvoid dfs_init( int x, int f ) {\n    vis[x] = true;\n    for( auto N : to[x] ) if( N ^ f ) {\n        if( !vis[N] ) dfs_init( N, x );\n        else {\n            if( !ins[x] ) QE.push_back( x );\n            if( !ins[N] ) QE.push_back( N );\n            ins[x] = ins[N] = true;\n        }\n    }\n}\n\nint dp[1000005][2];\nint des[1000005];\nint pnt = 0;\n\nint dfs_dp( int x ) {\n    dp[x][0] = 1; dp[x][1] = PW2[ num[x] ] - 1; des[x] = pnt;\n    for( auto N : to[x] ) if( des[N] ^ pnt ) {\n        dp[x][0] = 1ll * dp[x][0] * dfs_dp( N ) % mod;\n        dp[x][1] = 1ll * dp[x][1] * dp[N][0] % mod;\n    }\n    if( sat[x] ==  1 ) dp[x][0] = 0;\n    if( sat[x] == -1 ) dp[x][1] = 0;\n    return ( dp[x][0] + dp[x][1] ) % mod;\n}\n\nbool check() {\n    for( auto P : QE ) for( auto N : to[P] ) \n      { if( sat[P] == 1 and sat[N] == 1 ) return false; }\n    return true;\n}\n\nint query(int x) {\n    QE.clear(); dfs_init( x, x );\n    int ans = 0;\n    int len = 1 << QE.size();\n    for( int i = 0; i < len; i ++ ) {\n        for( int j = 0; j < QE.size(); j ++ ) \n          { sat[ QE[j] ] = (i & (1 << j)) ? 1 : -1; }\n        if( check() ) pnt ++, ( ans += dfs_dp( x ) ) %= mod;\n    }\n    for( int i = 0; i < QE.size(); i ++ ) sat[ QE[i] ] = 0;\n    return ans;\n}\n\nint main(){\n    int n; cin >> n; PW2[0] = 1;\n    for(int i = 1;i <= n;i ++) PW2[i] = PW2[i - 1] * 2 % mod;\n    for(int i = 1;i <= n;i ++) { int x; cin >> x; num[x] ++; }\n    for(int i = 1;i * i <= maxN;i ++) for(int j = i + 1;2 * i * j <= maxN;j ++) {\n        if( j * j > 2 * maxN ) break;\n        int x = j * j - i * i, y = 2 * i * j;\n        if( x > maxN or y > maxN ) continue;\n        if( !num[x] or !num[y] or __gcd( x, y ) != 1 ) continue;\n        to[x].push_back(y); to[y].push_back(x);\n    }\n    int ans = 1;\n    for(int i = 1;i <= maxN;i ++) if( num[i] and !vis[i] ) \n      { ans = 1ll * ans * query(i) % mod; }\n    cout << ( ans - 1 + mod ) % mod;\n    return 0;\n}\n```\n\n\u62d3\u6251\u6392\u5e8f\u7684\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint N = 200000;\nint M = 0;\nint deg[1000005];\nvector<int> to[1000005];\n\nint main(){\n\n    for(int i = 2;i <= N;i ++) {\n        for(int j = 1;j <= i;j ++) {\n            if( 1ll * 2 * i * j > N ) break;\n            if( 1ll * i * i - 1ll * j * j > N ) continue;\n            if( __gcd( i, j ) > 1 ) continue;\n            long long u = i * i - j * j;\n            long long v = 2 * i * j;\n            if( __gcd( u, v ) > 1 ) continue;\n            if( u > v ) swap( u, v );\n            if( u < M or v < M ) continue;\n            deg[u] ++; deg[v] ++; to[u].push_back(v); to[v].push_back(u);\n            //printf( \"%d %d\\n\", u, v );\n        }\n    }\n    queue<int> Q;\n    for(int i = 1;i <= N;i ++) if( deg[i] == 1 ) Q.push(i);\n    while( !Q.empty() ) {\n        int x = Q.front(); Q.pop();\n        for( auto N : to[x] ) {\n            deg[N] --;\n            if( deg[N] == 1 ) Q.push( N );\n        }\n    }\n    for(int i = 1;i <= N;i ++) if( deg[i] > 1 )for( auto E : to[i] ) if( deg[E] > 1 ) printf( \"%d %d\\n\", i, E );\n    //for(int i = 1;i <= N;i ++) if( deg[i] > 1 ) printf( \"%d %d\\n\", i, deg[i] );\n    return 0;\n}\n```\n",
        "postTime": 1552553332,
        "uid": 47240,
        "name": "bzy369258147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3213 \u3010[HNOI2011]\u52fe\u80a1\u5b9a\u7406\u3011"
    },
    {
        "content": "[P3213 [HNOI2011]\u52fe\u80a1\u5b9a\u7406](https://www.luogu.org/problemnew/show/P3213)\n\n\u8fd9\u662f\u4e00\u9053\u795e\u9898\u3002\u3002\u3002\n\n\u6211\u4e00\u5f00\u59cb\u628a\u9898\u76ee\u770b\u9519\u4e86\uff0c\u6211\u4ee5\u4e3a\u662f\u5728$n$\u6839\u6728\u68d2\u4e2d\u9009\u4e24\u4e2a$i,j$\u6ee1\u8db3$gcd(i,j)==1$\uff0c\u5e76\u4e14\u5b58\u5728$k$\u4f7f\u5f97$i^2+j^2==k^2$\u3002\n\n~~\u6211\u8bf4\u8fd9\u4e0d\u662f\u7f51\u7edc\u6d41\u7684\u6c99\u8336\u9898\u561b\uff1f~~\n\n\u7136\u540e\u6570\u636e\u8303\u56f4$n<=10^6$\u3002\u3002\u3002\n\n\u600e\u4e48\u8fd9\u4e48\u5927\uff1f\u5c31\u7b97\u5efa\u56fe\u5efa\u5b8c\u4e86\uff0c$Dinic$\u597d\u50cf\u4e5f\u4f1a$TLE$\uff0c\u9884\u6d41\u63a8\u8fdb\u53ef\u80fd\u90fd\u4f1a$TLE$\u3002\u3002\u3002\n\n\u7136\u540e\u56de\u5934\u770b\u9898\u2014\u2014$MD$\uff0c\u6211\u5c31\u662f\u4e2a$zz$\u3002\u3002\u3002\n\n\u9009\u53d6\u82e5\u5e72\u4e2a\u3002\u3002\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u6bd4\u8f83\u597d\u505a\u4e86\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u7bc7$YDC$\u5de8\u4f6c\u7684\u535a\u5ba2\u8bb2\u7684\u6bd4\u6211\u597d\uff1a[\u94fe\u63a5](http://ydcydcy1.blog.163.com/blog/static/216089040201311512248331/)\n\n\u9996\u5148\u8981\u9884\u5904\u7406\u51fa$10^6$\u4ee5\u5185\u7684\u52fe\u80a1\u6570\u5bf9\u3002\n\n\u6839\u636e\u521d\u4e2d\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u6709\uff1a$$(m^2-n^2)^2+(2mn)^2=(m^2+n^2)^2$$\n\n\u8fd9\u4e2a\u5e94\u8be5\u90fd\u4f1a\u8bc1\u5427\uff0c\u5168\u90e8\u62c6\u5f00\u5c31\u597d\u4e86\u3002\n\n\u4e8e\u662f\u4e00\u5bf9\u4e92\u8d28\u52fe\u80a1\u6570$(a,b)$\u4e0e\u4e00\u5bf9$(i,j)$\u5e94\u6ee1\u8db3$$a=j^2-i^2,b=2\\times i\\times j,c=j^2+i^2,gcd(i,j)==1,i<j,\\text{i\u548cj\u4e0d\u540c\u5947\u5076}$$\n\n\u6211\u4eec\u679a\u4e3e$i,j$\uff0c\u7531\u4e8e$i\\times j<=\\frac{10000000}{2}$\uff0c\u5e76\u4e14$gcd$\u7684\u590d\u6742\u5ea6\u4e0a\u9650\u662f$\\log_2n$\uff0c\u4e00\u822c\u4e0d\u4f1a\u8fbe\u5230\uff0c\u6240\u4ee5\u5c31\u662f$500000\\times \\log_2 500000<500000\\times 20=10^7$\u7684\u590d\u6742\u5ea6\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u4e92\u8d28\u52fe\u80a1\u6570$(a,b)$\uff0c\u5728$a,b$\u95f4\u8fde\u8fb9\u3002\n\n\u6211\u4eec\u5047\u8bbe\u4ed6\u4eec\u6784\u6210\u4e86\u4e00\u7247\u68ee\u6797\uff0c\u90a3\u4e48\u9898\u76ee\u53d8\u6210\u5728\u68ee\u6797\u4e2d\u9009\u70b9\u4e14\u4e92\u4e0d\u76f8\u90bb\u4e86\uff0c\u8ddf[P1352 \u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a](https://www.luogu.org/problemnew/show/P1352)\u5f88\u50cf\uff0c\u7ecf\u5178\u6811\u5f62$DP$\u3002\n\n~~\u4f46\u662f\u81ea\u4ece\u6211\u53d1\u73b0\u8fd9\u4e2a\u4e0d\u662f\u57fa\u73af\u65e0\u5411\u6811\u5c31\u4e0d\u60f3\u505a\u4e86\u3002~~\n\n\u8bbe$dp[i][0]$\u8868\u793a\u5728$i$\u8fd9\u68f5\u5b50\u6811\u4e0a\u4e0d\u9009$i$\u7684\u65b9\u6848\u6570\uff0c$dp[i][1]$\u8868\u793a\u5728$i$\u8fd9\u9897\u5b50\u6811\u4e0a\u9009$i$\u7684\u65b9\u6848\u6570\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u957f\u8fd9\u6837\uff1a\n$$dp[i][0]=(dp[v_1][0]+F[v_1][1])\\times (dp[v_2][0]+dp[v_2][1])\\times ...$$\n$$dp[i][1]=(2^{num[i]}-1)\\times dp[v_1][0]\\times dp[v_2][0]\\times ...$$\n\n$num[i]$\u8868\u793a$i$\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5efa\u7684\u56fe\u5c06\u6784\u6210\u4e00\u7247\u68ee\u6797\u3002\n\n\u5047\u8bbe\u68ee\u6797\u91cc\u6bcf\u9897\u6811\u7684\u6839\u662f$rt_1,rt_2,...rt_k$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\uff1a\n$$(dp[rt_1][0]+dp[rt_1][1])\\times(dp[rt_2][0]+dp[rt_2][1])\\times ...\\text{\u4e4b\u540e\u518d\u51cf1\uff0c\u5373\u53bb\u6389\u7a7a\u96c6}$$\n\n$BUT$\uff01\u8fd9\u4e48\u505a\u662f$30$\u5206\u3002\n\n\u6211\u5f53\u65f6\u61f5\u7684\u4e00\u6279\u554a\u3002\u3002\u3002\u611f\u89c9\u8fd9\u65b9\u6cd5\u884c\u5f97\u901a\u5417\uff1f\uff1f\uff1f\n\n\u7136\u540e\u6211\u53d1\u73b0\u4e00\u4e2a\u667a\u969c\u4e00\u6837\u7684\u95ee\u9898\u2014\u2014\u56fe\u5e76\u4e0d\u4e00\u5b9a\u662f\u6811\uff0c\u53ef\u80fd\u6709\u73af\u3002\u3002\u3002\n\n~~\u9760\uff01\u8fd9\u4e2a\u5751\u3002\u3002\u3002~~\n\n\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u4e71\u641e\u4e86\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u56de\u8fb9$(u,v)$\uff0c\u5c31\u50cf$tarjan$\u6c42\u5f3a\u8fde\u901a\u4e2d\u7684$dfn[v]<dfn[u]$\u4e00\u6837\uff0c\u6211\u4eec\u628a$u,v$\u6807\u8bb0\u4e00\u4e0b\u52a0\u5165\u70b9\u96c6$stack$\uff0c\u628a\u8fd9\u6761\u8fb9\u5220\u6389\u3002\n\n\u4e4b\u540e$2^{|stack|}$\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u9009\u62e9\u60c5\u51b5\uff0c\u5728\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u5957\u7528\u6811\u5f62$DP$\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u7531\u4e8e\u662f\u540c\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u7528\u52a0\u6cd5\u539f\u7406\u800c\u4e0d\u662f\u4e58\u6cd5\u539f\u7406\uff0c\u5373\u6bcf\u6b21\u7edf\u8ba1\u7684\u7b54\u6848\u7528\u4e2a\u53d8\u91cf\u7d2f\u52a0\uff0c\u6700\u540e\u4e58\u4ee5\u8fd9\u4e2a\u53d8\u91cf\u3002\n\n\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\n\n\u5417\uff1f\n\n\u6ca1\u6709\uff01\n\n\u4f46\u662f\u56e0\u4e3a\u6570\u636e\u6c34\u7684\u539f\u56e0\uff0c\u51fa\u9898\u4eba\u5f3a\u884c\u628a$NP$\u7684\u9898\u51fa\u6210\u4e86\u666e\u901a\u9898\u3002\u3002\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u5c31\u5f53\u8fc7\u4e86\u5427\u3002\u3002\u3002\n\n~~HN\u7684\u51fa\u9898\u4eba\u771f\u662f\u4e0d\u8d1f\u8d23\u4efb\u3002\u3002\u3002~~\n\n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#define MAXN 1000010\n#define MOD 1000000007\nusing namespace std;\nvector<int> stack;//\u70b9\u96c6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u4e86vector\nint n,c=1,d=1,T;\nint head[MAXN],deep[MAXN],vis[MAXN],num[MAXN];\nlong long bit[MAXN],dp[MAXN][2];\nbool used[MAXN],choose[MAXN];\nstruct Edge{\n    int next,to;\n}a[MAXN];\ninline int read(){\n\tint date=0,w=1;char c=0;\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n\treturn date*w;\n}\ninline long long sqr(long long x){return x*x;}\nint gcd(int x,int y){\n    if(!y)return x;\n    return gcd(y,x%y);\n}\ninline void add(int x,int y){\n    a[c].to=y;a[c].next=head[x];head[x]=c++;\n    a[c].to=x;a[c].next=head[y];head[y]=c++;\n}\nvoid build(){//\u9884\u5904\u7406\u51fa\u4e92\u8d28\u52fe\u80a1\u6570\u5bf9\u4e0e2\u7684\u5e42\n    int m=MAXN-10;\n    for(int i=1;i<=m/2;i++)\n    for(int j=i+1;j<=m/2/i&&sqr(j)-sqr(i)<=m;j++)\n    if(((i&1)!=(j&1))&&gcd(i,j)==1)add(2LL*i*j,sqr(j)-sqr(i));\n    bit[0]=1;\n    for(int i=1;i<=m;i++)bit[i]=(bit[i-1]<<1)%MOD;\n}\ninline void insert(int x){//\u63d2\u5165\u70b9\u96c6\n    if(!used[x]){\n        used[x]=true;\n        stack.push_back(x);\n    }\n}\nbool check(int u,int f){\n    vis[u]=T;\n    for(int i=head[u];i;i=a[i].next){\n        int v=a[i].to;\n        if(v==f||!num[v])continue;\n        if(choose[u]&&choose[v])return false;\n        if(vis[v]!=T)if(!check(v,u))return false;\n    }\n    return true;\n}\nvoid dfs1(int x,int f){\n    deep[x]=d++;//deep[i]\u5373\u4e3adfn[i]\uff0c\u4f46\u662f\u4e60\u60ef\u8fd9\u6837\u6ca1\u6cd5\u6539\u4e86\u3002\u3002\u3002\n    for(int i=head[x];i;i=a[i].next){\n        int v=a[i].to;\n        if(!num[v]||v==f)continue;\n        if(!deep[v])dfs1(v,x);\n        else if(deep[v]<deep[x]){insert(x);insert(v);}\n    }\n}\nvoid dfs2(int x,int f){//\u5f00\u59cb\u6811\u5f62DP\n    vis[x]=T;\n    dp[x][0]=1;\n    dp[x][1]=(bit[num[x]]-1+MOD)%MOD;\n    if(used[x]){\n        if(choose[x])dp[x][0]=0;\n        else dp[x][1]=0;\n    }\n    for(int i=head[x];i;i=a[i].next){\n        int v=a[i].to;\n        if(v==f||!num[v]||vis[v]==T)continue;\n        if(vis[v]!=T)dfs2(v,x);\n        dp[x][0]=dp[x][0]*(dp[v][0]+dp[v][1])%MOD;\n        dp[x][1]=dp[x][1]*dp[v][0]%MOD;\n    }\n}\nvoid dfs3(int i,int m,int x,long long &ans){//\u66b4\u529b\u679a\u4e3e\u72b6\u6001\n    if(i==m){\n        T++;\n        if(check(x,-1)){\n            T++;\n            dfs2(x,-1);\n            ans=(ans+dp[x][0]+dp[x][1])%MOD;\n        }\n        return;\n    }\n    choose[stack[i]]=false;\n    dfs3(i+1,m,x,ans);\n    choose[stack[i]]=true;\n    dfs3(i+1,m,x,ans);\n}\nlong long solve(int x){//\u5bf9\u6bcf\u4e00\u4e2a\u6570\u5904\u7406\n    stack.clear();\n    dfs1(x,-1);\n    int m=stack.size();\n    long long ans=0;\n    dfs3(0,m,x,ans);\n    return ans;\n}\nvoid work(){\n    long long ans=1;\n    for(int i=1;i<=MAXN-10;i++)if(num[i]&&!deep[i])ans=ans*solve(i)%MOD;\n    printf(\"%lld\\n\",(ans-1+MOD)%MOD);//\u4e0d\u8981\u5fd8\u4e86-1\u3002\u3002\u3002\n}\nvoid init(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        int x=read();\n        num[x]++;\n    }\n}\nint main(){\n    build();\n    init();\n    work();\n    return 0;\n}\n\n```",
        "postTime": 1534390778,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3213 \u3010[HNOI2011]\u52fe\u80a1\u5b9a\u7406\u3011"
    },
    {
        "content": "\u636e\u8bf4\u662fNP\u95ee\u9898\u3002\n\n\u5f88\u660e\u663e\u6211\u4eec\u8981\u5148\u9884\u5904\u7406\u51fa\u6765\u52fe\u80a1\u6570\u5bf9\u3002\n\n\u4f46\u7531\u4e8e\u6570\u8fc7\u4e8e\u5927\uff0c\u6240\u4ee5\u5e38\u89c4\u7684\u679a\u4e3e\u662f\u89e3\u51b3\u4e0d\u4e86\u95ee\u9898\u7684\u3002\n\n\u4f46\u4e5f\u8c8c\u4f3c\u6ca1\u6709\u4ec0\u4e48\u5f88\u597d\u7684\u529e\u6cd5\u53ef\u4ee5\u7acb\u9a6c\u627e\u5230\u4e00\u4e2a\u6570\u7684\u52fe\u80a1\u6570\u5bf9\u3002\n\n\u6240\u4ee5\u53ea\u80fd\u7f29\u51cf\u679a\u4e3e\u8303\u56f4\u3002\n\n\u5df2\u77e5\uff1a\n$$\\begin{aligned}\n\n(x-y)^2+4xy&=(x+y)^2\\\\\n\n(x^2-y^2)^2+4x^2y^2&=(x^2+y^2)^2\\\\\n\n(x^2-y^2)^2+(2xy)^2&=(x^2+y^2)^2\n\n\\end{aligned}$$\n\n\u6240\u4ee5\u53ef\u4ee5\u628a $A$ \u770b\u6210 $(x-y)$\uff0c$B$ \u770b\u6210 $2xy$\uff0c\u7136\u540e\u679a\u4e3e $i,j$\uff0c\u4ee3\u8868\u5f0f\u5b50\u4e2d\u7684 $x,y$\uff0c\u5373\u53ef\u7f29\u5c0f\u679a\u4e3e\u8303\u56f4\u3002\u56e0\u4e3a\u8981\u6ee1\u8db3 $x^2-y^2\\le10^6\\hspace{0.3cm}2xy\\le10^6$\u3002\u679a\u4e3e\u590d\u6742\u5ea6\u7ea6\u4e3a $O(n)$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u52fe\u80a1\u6570\u5bf9\uff0c\u8fde\u63a5\u4e00\u6761\u8fb9\uff0c\u5373\u53ef\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u6811\u5f62dp\u4e86\u3002\n\n\u8bbe $dp_{i,(0,1)}$ \u4ee3\u8868\u9009\u4e0e\u4e0d\u9009\u6570 $i$ \u7684\u65b9\u6848\u6570\u3002\n\n\u5982\u679c\u4e0d\u9009\uff0c\u65b9\u6848\u5373\u4e3a\u81ea\u5df1\u513f\u5b50\u6240\u6709\u65b9\u6848\u7684\u4e58\u79ef\n\n$$dp_{i,0}=\\prod_{(i,j)} dp_{j,0}+dp_{j,1}$$\n\n\u82e5\u9009\uff0c\u5219\u81ea\u5df1\u513f\u5b50\u4e0d\u80fd\u9009\uff0c\u4e58\u4e0a\u81ea\u5df1\u513f\u5b50\u4e0d\u9009\u7684\u65b9\u6848\u6570\u4e0e\u9009\u8fd9\u4e2a\u6570\u7684\u5b50\u96c6\u6570\uff08\u4e0d\u7b97\u7a7a\u96c6\uff09\u5373\u53ef\u3002\n\n$$dp_{i,1}=2^{num_i}\\prod_{(i,j)}dp_{j,0}$$\n\n\u7136\u540e\u5bf9\u6bcf\u68f5\u6811\u6811\u5f62dp\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4f46\u662f\u4ea4\u4e0a\u53bb\u4e0d\u5bf9\uff0c\u90a3\u662f\u56e0\u4e3a\u5728\u8fd9\u4e4b\u524d\u7684\u6240\u6709\u5047\u8bbe\u90fd\u662f\u57fa\u4e8e\u5efa\u51fa\u6765\u7684\u662f\u68f5\u6811\u3002\n\n\u90a3\u63a5\u4e0b\u6765\u5c31\u9ebb\u70e6\u4e86\u3002\n\n\u4f46\u662f\u901a\u8fc7\u697c\u4e0a\u5927\u4f6c\u7684\u6a21\u62df\uff0c\u53d1\u73b0\u5728\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u5185\u5efa\u51fa\u6765\u7684\u4ec5\u4ec5\u662f\u68f5\u4ed9\u4eba\u638c\uff0c\u8fd9\u6837NP\u95ee\u9898\u5c31\u53ef\u4ee5\u8f6c\u6362\u4e3a\u666e\u901a\u95ee\u9898\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u4ed9\u4eba\u638cdp\u3002\n\n\u9996\u5148\u5229\u7528Tarjan\u601d\u60f3\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6574\u68f5\u4ed9\u4eba\u638c\u904d\u5386\u4e00\u904d\uff0c\u5efa\u7acb\u65f6\u95f4\u6233\uff0c\u5bfb\u627e\u73af\u3002\n\n\u627e\u5230\u73af\u4ee5\u540e\uff0c\u6211\u4eec\u8003\u8651\u65ad\u6389\u73af\u4e0a\u7684\u4e00\u6761\u8fb9\uff0c\u5e76\u8bb0\u5f55\u4e0b\u6765\u8fb9\u4e24\u8fb9\u7684\u70b9\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u4ed9\u4eba\u638c\uff0c\u5bf9\u8bb0\u5f55\u4e0b\u6765\u7684\u70b9\u7684\u72b6\u6001\u8fdb\u884c\u641c\u7d22\uff0c\u7136\u540e\u5728\u641c\u7d22\u7ec8\u7aef\u5224\u65ad\u4e24\u8fb9\u7684\u70b9\u662f\u5426\u540c\u4e3a $1$\u3002\u5982\u679c\u6ee1\u8db3\u90fd\u4e0d\u540c\u4e3a $1$\uff0c\u8fdb\u884c\u4e00\u6b21\u6811\u5f62dp\u3002\n\n\u90a3\u4e48\u8fd9\u68f5\u4ed9\u4eba\u638c\u6240\u5e26\u6765\u7684\u65b9\u6848\u6570\u5373\u4e3a $dp_{i,0}+dp_{i,1}$\u3002\n\n\u6700\u540e\u628a\u6240\u6709\u4ed9\u4eba\u638c\u6240\u5f97\u6765\u7684\u7b54\u6848\u76f8\u4e58\uff0c\u51cf\u53bb\u5168\u90e8\u4e3a\u7a7a\u96c6\u60c5\u51b5\uff0c\u5373\u51cf\u53bb\u4e00\uff0c\u5c31\u53ef\u5f97\u5230\u7b54\u6848\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define int long long\nusing namespace std;\nconst int N=1e6+5;\nconst int mod=1e9+7;\nint n,num[N],p[N],vis[N],ins[N],dfn[N],cnt,dp[N][2],chose[N],col[N],color;\nvector<int>a[N],t;\nint gcd(int x,int y)\n{\n\tif(y==0)return x;\n\treturn gcd(y,x%y);\n}\nvoid insert(int x)//\u8bb0\u5f55\u65ad\u6389\u7684\u8fb9\u4e24\u8fb9\u7684\u70b9\u3002\n{\n\tif(!vis[x])\n\t{\n\t\tvis[x]=1;\n\t\tt.push_back(x);\n\t}\n}\nvoid build(int x,int fa)//\u627e\u73af\u3002\n{\n\tdfn[x]=++cnt;\n\tint len=a[x].size();\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tif(a[x][i]==fa)continue;\n\t\tif(!dfn[a[x][i]])build(a[x][i],x);\n\t\telse if(dfn[a[x][i]]<dfn[x])insert(a[x][i]),insert(x);\n\t}\n}\nbool check(int x,int fa)//\u5224\u65ad\u65ad\u6389\u7684\u8fb9\u7684\u4e24\u70b9\u662f\u5426\u7b26\u5408\u6761\u4ef6\n{\n\tcol[x]=color;\n\tint len=a[x].size();\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tif(a[x][i]==fa)continue;\n\t\tif(chose[x]&&chose[a[x][i]])return false;\n\t\tif(col[a[x][i]]!=color&&!check(a[x][i],x))return false;\n\t}\n\treturn true;\n}\nvoid get_ans(int x,int fa)//\u6811\u5f62dp\u3002\n{\n\tcol[x]=color;\n\tint len=a[x].size();\n\tdp[x][0]=1;\n\tdp[x][1]=p[num[x]]-1;\n\tif(vis[x])\n\t{\n\t\tif(chose[x])dp[x][0]=0;\n\t\telse dp[x][1]=0;\n\t}\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tif(a[x][i]==fa||col[a[x][i]]==color)continue;\n\t\tif(col[a[x][i]]!=color)get_ans(a[x][i],x);\n\t\tdp[x][1]*=(dp[a[x][i]][0]);\n\t\tdp[x][1]%=mod;\n\t\tdp[x][0]*=(dp[a[x][i]][0]+dp[a[x][i]][1]);\n\t\tdp[x][0]%=mod;\n\t}\n}\nint dfs(int x,int step)//\u641c\u7d22\u3002\n{\n\tif(step==t.size())\n\t{\n\t\tcolor++;\n\t\tif(check(x,0))\n\t\t{\n\t\t\tcolor++;\n\t\t\tget_ans(x,0);\n\t\t\treturn dp[x][0]+dp[x][1];\n\t\t}\n\t\treturn 0;\n\t}\n\tchose[t[step]]=0;\n\tint sum=0;\n\tsum+=dfs(x,step+1);\n\tchose[t[step]]=1;\n\tsum+=dfs(x,step+1);\n\treturn sum%mod;\n}\nint solve(int x)\n{\n\tt.clear();\n\tbuild(x,0);\n\tint sum=dfs(x,0);\n\treturn sum;\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1,x;i<=n;i++)scanf(\"%lld\",&x),num[x]++;\n\tp[0]=1;\n\tfor(int i=1;i<=(N-5);i++)p[i]=p[i-1]*2,p[i]%=mod;\n   //\u4ee5\u4e0b\u4e3a\u9884\u5904\u7406\u3002\n\tfor(int i=1;i<=(N-5)/2;i++)\n\t{\n\t\tfor(int j=i+1;2*i*j<=(N-5)&&j*j-i*i<=(N-5);j++)\n\t\t{\n\t\t\tif(((i&1)^(j&1))&&gcd(i,j)==1)\n\t\t\t{\n\t\t\t\tint u=j*j-i*i,v=2*i*j;\n\t\t\t\tif(!num[u]||!num[v])continue;\n\t\t\t\ta[u].push_back(v);\n\t\t\t\ta[v].push_back(u);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=1;\n\tfor(int i=1;i<=N-5;i++)if(num[i]&&!col[i])ans=ans*solve(i)%mod;\n\tprintf(\"%lld\",ans-1);\n\treturn 0;\n}\n```",
        "postTime": 1663991384,
        "uid": 275793,
        "name": "Gmt\u4e36FFF",
        "ccfLevel": 5,
        "title": "P3213 [HNOI2011]\u52fe\u80a1\u5b9a\u7406 \u9898\u89e3"
    },
    {
        "content": "# \u5176\u5b9e\u5c31\u662f\u6811\u5f62DP+DFS\uff01\uff01\uff01\n##### \u6ce8\u610f\u6570\u636e\u8303\u56f4\u3002\u3002\u3002\uff08\u4e0d\u7136\u4f1a\u3002\u3002\u3002\u4f60\u61c2\uff09\n\u8be6\u7ec6\u89c1\u6807\u7a0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define MAXM 400000\n#define MAXH 1000000\n#define MAXN 1000010\n#define MOD 1000000007\nusing namespace std;\ntypedef long long LL;\nLL Two[MAXN]= {1},F[MAXN][2],ans=1;\nbool use[MAXN],must[MAXN],mark[MAXN],out[MAXM];\nint cnt[MAXN],digit[MAXN],n,point[MAXN],s,wait[MAXN],father[MAXN],edge[MAXN];\nint tot=1,to[MAXM],next[MAXM],start[MAXN];\nvoid make(int a,int b) {\n\ttot++,to[tot]=b,next[tot]=start[a],start[a]=tot;\n}\nint gcd(int a,int b) {\n\treturn a%b?gcd(b,a%b):b;\n}\nvoid ptm() {\n\tfor(LL i=2; (i<<1)<=MAXH; i++)\n\t\tfor(LL j=1; j*i*2<=MAXH&&j<i; j++)\n\t\t\tif((i&1)!=(j&1)&&gcd(i,j)==1&&i*i-j*j<=MAXH) {\n\t\t\t\tint a=i*i-j*j,b=2*i*j;\n\t\t\t\tmake(a,b),make(b,a);\n\t\t\t}\n}\nvoid Read(int &digit) {\n\tdigit=0;\n\tchar c;\n\tfor(c=getchar(); c<'0'||c>'9'; c=getchar());\n\tfor(; c>='0'&&c<='9'; digit=digit*10+c-'0',c=getchar());\n}\nvoid read() {\n\tRead(n);\n\tfor(int i=1; i<=n; i++) {\n\t\tTwo[i]=Two[i-1]*2%MOD;\n\t\tRead(digit[i]);\n\t\tcnt[digit[i]]++;\n\t}\n\tsort(digit+1,digit+n+1);\n}\nvoid Tree_Dp(int p) {\n\tF[p][0]=1,F[p][1]=Two[cnt[p]]-1;\n\tif(mark[p]&&must[p]==true) F[p][0]=0;\n\tif(mark[p]&&must[p]==false) F[p][1]=0;\n\tif(start[p]==0) return ;\n\tfor(int i=start[p]; i; i=next[i])\n\t\tif(out[i]==false&&to[i]!=father[p]) {\n\t\t\tint q=to[i];\n\t\t\tif(cnt[q]==0) continue;\n\t\t\tTree_Dp(q);\n\t\t\tF[p][0]=F[p][0]*(F[q][0]+F[q][1])%MOD;\n\t\t\tF[p][1]=F[p][1]*F[q][0]%MOD;\n\t\t}\n}\nvoid DFS(int p) {\n\tuse[p]=true,point[++s]=p;\n\tfor(int i=start[p]; i; i=next[i])\n\t\tif(cnt[to[i]]&&to[i]!=father[p]) {\n\t\t\tif(!use[to[i]]) father[to[i]]=p,DFS(to[i]);\n\t\t\telse out[i]=true,edge[++edge[0]]=i,mark[to[i]]=true,mark[p]=true;\n\t\t}\n}\nvoid DFS(int p,int n,LL &ans) {\n\tif(p>n) {\n\t\tfor(int i=1; i<=edge[0]; i++) {\n\t\t\tint x=edge[i],a=to[x],b=to[x^1];\n\t\t\tif(must[a]&must[b]) return ;\n\t\t}\n\t\tTree_Dp(point[1]);\n\t\tans=(ans+F[point[1]][0]+F[point[1]][1])%MOD;\n\t\treturn ;\n\t}\n\tmust[wait[p]]=true,DFS(p+1,n,ans);\n\tmust[wait[p]]=false,DFS(p+1,n,ans);\n}\nLL work(int p) {\n\ts=0,edge[0]=0,wait[0]=0;\n\tDFS(p);\n\tLL total=0;\n\tfor(int i=1; i<=s; i++)\n\t\tif(mark[point[i]])\n\t\t\twait[++wait[0]]=point[i];\n\tDFS(1,wait[0],total);\n\treturn total;\n}\nvoid work() {\n\tfor(int i=1; i<=n; i++)\n\t\tif(!use[digit[i]])\n\t\t\tans=ans*work(digit[i])%MOD;\n}\nint main() {\n\tptm();\n\tread();\n\twork();\n\tcout<<ans-1<<endl;\n\treturn 0;\n}\n```\n\uff08\u672c\u849f\u84bb\u592a\u849f\u4e86\uff0c\u4ee5\u81f3\u4e8e\u8c03\u4e86\u4e00\u5929\uff0c\u4e0d\u8fc7\u8fd0\u6c14\u8fd8\u597d\uff0c\u4e00\u6b21\u5c31A\u4e86 ~QAQ~\uff09",
        "postTime": 1555849143,
        "uid": 128113,
        "name": "Soroak",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3213 \u3010[HNOI2011]\u52fe\u80a1\u5b9a\u7406\u3011"
    }
]