[
    {
        "content": "# B2110 \u627e\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\n\n\u9898\u76ee\u5927\u610f\uff1a~~\u5982\u9898\u540d\u6240\u8ff0\u627e\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26~~ \u5c31\u662f\u627e\u51fa\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\uff0c\u6ca1\u6709\u5c31\u8f93\u51fa`no`\n\n~~\u672c\u9898\u5230\u6b64\u7ed3\u675f~~\n\n\u6211\u4eec\u679a\u4e3e\u8f93\u5165\u7684\u5b57\u7b26\u4e32`str`\u6bcf\u4e2a\u5b57\u7b26\uff08$0$ \u5230 $n-1$\uff09\uff0c\u5982\u679c\u51fa\u73b0\u5c31\u6807\u8bb0`visit[str[i] - 'a']`\u4e3a`true`\uff0c\u7136\u540e\u5982\u679c\u679a\u4e3e\u5230\u4e00\u4e2a\u5b57\u7b26\u4ed6\u7684`visit`\u4e3a`true`\uff08\u88ab\u8bbf\u95ee\u8fc7\uff09\uff0c\u5c31\u5427\u4ed6\u7684`flag`\u6807\u8bb0\u4e3a`true`\uff08\u6807\u8bb0\u4e3a\u4e0d\u53ef\u4ee5\uff09\n\n\u7136\u540e\u518d\u6b21\u679a\u4e3e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u7684`flag`\u4e3a`false`\uff08\u53ea\u88ab\u8bbf\u95ee\u8fc7 $1$ \u6b21\uff09\n\n\u90a3\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u7136\u540e `return 0`\uff08\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u662f\u7b2c\u4e00\u4e2a\uff09\n\n\u5982\u679c\u6ca1\u6709 `flag` \u4e3a `false` \u7684\uff0c\u5c31\u8f93\u51fa `no`\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nbool visit[30];\nbool flag[30];\nint main()\n{\n\tstring str;\n\tcin >> str;\n\tfor(int i = 0; i < str.size(); i++)\n\t{\n\t\tif(visit[str[i] - 'a'])\n\t\t{\n\t\t\tflag[str[i] - 'a'] = true;\n\t\t}\n\t\tvisit[str[i] - 'a'] = true;\n\t}\n\tfor(int i = 0; i < str.size(); i++)\n\t{\n\t\tif(!flag[str[i] - 'a'])\n\t\t{\n\t\t\tcout << str[i];\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout << \"no\";\n\treturn 0;\n}\n```\n",
        "postTime": 1625803507,
        "uid": 194465,
        "name": "\u5b8b\u5353\u6615",
        "ccfLevel": 0,
        "title": "B2110"
    },
    {
        "content": "## \u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u51fa\u5176\u4e2d**\u7b2c\u4e00\u4e2a**\u53ea\u51fa\u73b0\u8fc7**\u4e00\u6b21**\u7684**\u5c0f\u5199**\u5b57\u6bcd\uff0c\u82e5\u6ca1\u6709\u8f93\u51fa no\u3002\n\n## \u5206\u6790\n\n\u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5~~\u5f88\u5bb9\u6613~~\u7684\u60f3\u51fa\u7528**\u6876\u6392\u5e8f**\u7684\u601d\u60f3\u3002\u4f46\u662f\u9898\u76ee\u4e2d\u7ed9\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u600e\u4e48\u7528\u6574\u5f62\u8868\u793a\uff1f\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u6709\u54ea\u4e2a\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u6620\u5c04\uff1f\u7b54\u6848\u662f\uff1a STL \u5e93\u4e2d\u7684 **map** \uff01\n\n\u4ecb\u4e8e\u5927\u5bb6\u5e76\u4e0d\u662f\u5341\u5206\u4e86\u89e3 map \uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\u6211\u4eec\u53ef\u4ee5\u628a map \u770b\u4f5c\u4e00\u4e2a\u53ef\u4ee5\u5b58\u50a8\u4efb\u4f55\u6570\u636e\u5f62\u5f0f\u7684**\u52a8\u6001**\u6570\u7ec4\uff08\u4e5f\u5c31\u662f\u4e0b\u6807\u4e0d\u505a\u9650\u5236\u7684\u6570\u7ec4\u5566\uff09\uff0c\u5b83\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e3a\uff1a\n```\nmap <\u5b58\u50a8\u8fdb\u53bb\u7684\u7c7b\u578b\uff0c\u7528\u6765\u8868\u793a\u6570\u636e\u7684\u7c7b\u578b> \u540d\u79f0;\n```\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u672c\u9898\u4e2d\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a char \u7c7b\u578b\u4e0e int \u7c7b\u578b\u76f8\u4e92\u6620\u5c04\uff08\u7167\u5e94\uff09\u7684 map \u6765\u8fdb\u884c\u6876\u6392\u5e8f\uff0c\u5373\u5b9a\u4e49\u8fc7\u7a0b\u4e3a\n\n```\nmap <char,int> a;\n```\n\n\u6700\u540e\u662f\u95ea\u4eae\u7684\u4ee3\u7801\u5566\u3002\n\n## \u4ee3\u7801\n\n```\n#include <map> //\u4f7f\u7528 map \u8981\u8c03\u7528 map \u5e93\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nmap <char,int> a;\nstring s;\n\nint main()\n{\n\tcin>>s;\n\t\n\tfor(int i = 0; i <=s.size(); i++) //\u6ce8\u610f\u5b57\u7b26\u4e32\u4ece 0 \u5f00\u59cb\n\t{\n\t\ta[s[i]]++;\n\t}\n\tfor(int i = 0; i <= s.size(); i++)\n\t{\n\t\tif(a[s[i]] == 1)\n\t\t{\n\t\t\tcout<<s[i];\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"no\";\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1625311845,
        "uid": 358815,
        "name": "\u843d\u6cb3\u4e4b\u79cb",
        "ccfLevel": 0,
        "title": "B2110\u306e\u9898\u89e3"
    },
    {
        "content": "\u5b57\u7b26\u4e32\u6a21\u62df\u9898\u3002\n\n\u6211\u771f\u7684\u4e0d\u77e5\u9053\u8bf4\u4ec0\u4e48\uff0c\u5c31\u76f4\u63a5\u770b\u4e00\u4e2a\u5b57\u6bcd\u51fa\u73b0\u51e0\u6b21\u518d\u904d\u5386\u4e00\u6b21\u554a\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u7ed9\u4ee3\u7801\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[30];\nint main()\n{\n\tstring st;\n\tcin>>st;\n\tfor(int i=0;i<st.size();i++)//\u8fd9\u4e2a\u5b57\u6bcd\u51fa\u73b0\u4e86\u51e0\u6b21\n\t{\n\t\ta[st[i]-'a']++;//\u8f6c\u5316\u6210\u8f83\u5c0f\u6570\u5b57\n\t}\n\tfor(int i=0;i<st.size();i++)\n\t{\n\t\tif(a[st[i]-'a']==1)//\u5982\u679c\u51fa\u73b0\u4e86\u4e00\u6b21\n\t\t{\n\t\t\tcout<<st[i];\n\t\t\treturn 0;//\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\n\t\t}\n\t}\n\tcout<<\"no\";\n\treturn 0;\n}\n```",
        "postTime": 1625286652,
        "uid": 214649,
        "name": "Real_Create",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 B2110\u3010\u627e\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u3011"
    },
    {
        "content": "\u6b64\u9898\u6211\u4eec\u8981\u77e5\u9053\u4e00\u4e2a\u6876\u7684\u601d\u60f3\uff0c\u5982\u4e0b\u3002\n\n\n\u77e5\u8bc6\uff1a\u6876\u3002\u8981\u77e5\u9053\uff0c\u6211\u4eec\u7684\u6876\u662f\u7528\u6765\u88c5\u4e1c\u897f\u7684\uff0c\u4f46\u88c5\u7684\u4e1c\u897f\u6bd4\u8f83\u7279\u6b8a\uff0c\u662f\u67d0\u6837\u4e1c\u897f\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e1c\u897f\u7684\u540d\u5b50\uff08\u4e5f\u5c31\u662f\u6570\u5b57\u4e0b\u6807\uff09\u4f5c\u4e3a\u6876\u7684\u7f16\u53f7\uff0c\u5982\u679c\u8fd9\u4e2a\u4e1c\u897f\u51fa\u73b0\u4e00\u6b21\uff0c\u5c31\u628a\u8fd9\u4e2a\u6876\u52a0\u4e00\u3002\u4f46\u8fd9\u6837\u7684\u7f3a\u70b9\u662f\u6d6a\u8d39\u7a7a\u95f4\u3002\uff08\u826f\u5fc3\u81ea\u5236\u56fe\u7247\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f4wovr02.png)\n\n\u6b64\u9898\u4e2d\uff0c\u6211\u4eec\u628a\u6876\u7684\u540d\u5b57\u8bbe\u4e3a\u5b57\u6bcd\uff0c\u4f46\u5b57\u6bcd\u4e0d\u80fd\u505a\u6570\u7ec4\u4e0b\u6807\uff0c\u5219\u6211\u4eec\u7528\u5b83\u7684\u963f\u65af\u514b\u9a6c\u503c\u6765\u66ff\u4ee3\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6876\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u627e\u51fa\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u6bcd\u3002\n\n\u56e0\u4e3a\u53ea\u9700\u8981\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u5b57\u7b26\u4e32\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint a[10000001];\nint main(){\n    char c;\n    int i=0;\n    while(cin>>c){//\u4e00\u76f4\u8f93\u5230\u7ed3\u675f\n        int b=c;//\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u963f\u65af\u514b\u9a6c\u503c\n        a[b]++;\n        i++;//\u7edf\u8ba1\u5b57\u7b26\u4e32\u957f\u5ea6\n    }\n    for(int j=1;j<=i;++j)\n        if(a[j]==1){\n            char c1=j;//\u8f6c\u56de\u6765\n            cout<<c1;\n            return 0;\n        }\n    cout<<\"no\";\n    return 0;\n}\n\n```\n",
        "postTime": 1625402942,
        "uid": 371927,
        "name": "REAL_\u66fc\u5df4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528 `STL` \u7684 `map`\u5373\u53ef\uff0c\u5efa\u7acb\u4e24\u4e2a\u6620\u5c04\uff0c\u7b2c\u4e00\u4e2a\u662f\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6bcf\u4e2a\u5b57\u7b26\u6700\u5148\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6ce8\u610f `no` \u65f6\u5224\u65ad\u6761\u4ef6\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <iostream>\n#include <map>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint main()\n{\n\tmap<char, int> mp, mp2;\n\tstring s;\n\tios::sync_with_stdio(false);\n\tcin >> s;\n\tint len = s.length() - 1;\n\tfor (int i = 0; i <= len; i++)\n\t{\n\t\tmp[s[i]]++;\n\t\tif (mp2[s[i]])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tmp2[s[i]] = i;\n\t}\n\tmap<char, int>::iterator it_end = mp.end();\n\tint minx = 1101;\n\tfor (map<char, int>::iterator it = mp.begin(); it != it_end; ++it)\n\t{\n\t\tif (it->second == 1)\n\t\t{\n\t\t\tminx = min(minx, mp2[it->first]);\n\t\t}\n\t}\n\tif (minx == 1101)\n\t{\n\t\tcout << \"no\\n\";\n\t\treturn 0;\n\t}\n\tcout << s[minx] << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1625736392,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "STL\u5927\u6cd5\u597d"
    }
]