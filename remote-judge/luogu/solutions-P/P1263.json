[
    {
        "content": "&emsp;&emsp;\u6765\u4e00\u7bc7\u5e26\u6ce8\u91ca\u7684\u9898\u89e3\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\u3002\n\n&emsp;&emsp;\u79f0\u6bcf\u4e00\u6bb5\u671d\u4e0a\u7684\u5899\u4e3a\u6a2a\u5899\uff0c\u6bcf\u4e00\u6bb5\u671d\u5de6\u7684\u5899\u4e3a\u7ad6\u5899\u3002\u90a3\u4e48\u6bcf\u4e00\u4e2a\u4f8d\u536b\u90fd\u5bf9\u5e94\u552f\u4e00\u4e00\u6bb5\u6a2a\u5899\u548c\u7ad6\u5899\uff0c\u800c\u4e24\u4e2a\u4f8d\u536b\u4e0d\u4e92\u76f8\u653b\u51fb\u7684\u6761\u4ef6\u5c31\u662f\u8fd9\u4e24\u6bb5\u5899\u6240\u5bf9\u7684\u7a7a\u5730\u4e0a\u6ca1\u6709\u5176\u4ed6\u4f8d\u536b\u3002\u5c06\u6bcf\u4e00\u683c\u7a7a\u5730\u5bf9\u5e94\u7684\u6a2a\u5899\u548c\u7ad6\u5899\u8fde\u4e00\u6761\u8fb9\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/45909.png)\n \n&emsp;&emsp;\u56fe\u4e2d\u8bf8\u5982\u201c\u6a2a/\u7ad6 xy\u201d\u4ee3\u8868\u4f4d\u4e8e\u7a7a\u683c\uff08x\uff0cy\uff09\u4e0b/\u53f3\u65b9\u7684\u6a2a/\u7ad6\u5899\u3002\n\n&emsp;&emsp;\u5efa\u7acb\u7f51\u7edc\u6d41\u6a21\u578b\u6c42\u89e3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u8d85\u6e90\u8fde\u6240\u6709\u6a2a\u5899\uff0c\u6a2a\u5899\u901a\u8fc7\u7a7a\u683c\u8fde\u5bf9\u5e94\u7ad6\u5899\uff0c\u7ad6\u5899\u8fde\u8d85\u6c47\uff0c\u6743\u503c\u5747\u4e3a1\u3002\n\n&emsp;&emsp;\u653e\u5f20\u56fe\u77a7\u77a7\uff08\u56fe\u4e2d\u201c\u70b9xy\u201c\u7c7b\u578b\u7684\u8282\u70b9\u5728\u5efa\u56fe\u4e2d\u662f\u6ca1\u6709\u7684\uff0c\u8fd9\u91cc\u53ea\u662f\u65b9\u4fbf\u7406\u89e3\u52a0\u4e0a\u6765\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/45910.png)\n\n&emsp;&emsp;\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0chttps://csacademy.com/app/graph_editor/ \u8fd9\u73a9\u610f\u753b\u56fe\u771f\u597d\u7528\u3002\n \n&emsp;&emsp;\u5efa\u56fe\u65f6\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u5e73\u9762\u5185\u7684\u5899\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5750\u6807\u6620\u5c04\u5230\u4e00\u7ef4\u4e0a\uff0c\u7531\u4e8eN,M<=200\uff0c\u6240\u4ee5\u6211\u4eec\u4ee4z=(x-1)*200+y\uff0c\u6a2a\u5899\uff08x,y\uff09\u5bf9\u5e94\u7ed3\u70b9\u4e3ap\uff0c\u7ad6\u5899\uff08x,y\uff09\u5bf9\u5e94\u7ed3\u70b9\u4e3ap+40000\uff0c\u4ee4\u8d85\u7ea7\u6e90\u70b9\u4e3a0\uff0c\u8d85\u7ea7\u6c47\u70b9\u4e3a80001\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n&emsp;&emsp;\u4e0a\u4ee3\u7801\u54af\uff0c~~\u6709\u6ce8\u91ca\u7684\u4ee3\u7801~~\u3002\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <string.h>\n#include <iostream> \n#include <queue>\n#define MAXM 100100\n#define MAXN 202\n#define MAXN2 202*202\nusing namespace std;\n\nconst int INF=2147483647;\n\nint wall[MAXN][MAXN][2]; //\u8bb0\u5f55\u7a7a\u683c\u5bf9\u5e94\u7684\u6a2a\u5899\u548c\u7ad6\u5899 \nint castle[MAXN][MAXN]; //\u57ce\u5821\u5730\u5f62\u56fe \nint n,m,s,t; //n\uff1ax\u65b9\u5411\u957f\u5ea6  m\uff1ay\u65b9\u5411\u957f\u5ea6 \u8fd9\u91cc\u6ce8\u610f\uff0c\u548c\u9898\u76ee\u7ed9\u7684\u662f\u53cd\u8fc7\u6765\u7684  s\u548ct\u4e3a\u8d85\u6e90\u8d85\u6c47 \nint maxflow=0;\nint idbegin;  //\u4ece\u8fd9\u4e2a\u7f16\u53f7\u5f00\u59cb\u7684\u8fb9\u5168\u90e8\u662f\u8fde\u63a5\u7ad6\u5899\u548c\u6a2a\u5899\u7684\u8fb9 \n\nstruct EDGE\n{\n\tint from,to,weight,next;\n}edge[MAXM<<1]; //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n\nint head[MAXN2<<1];\nint deep[MAXN2<<1];\nint cnt=0;\n\ninline void add(int x,int y,int w)\n{\n\tedge[cnt].from=x;\n\tedge[cnt].to=y;\n\tedge[cnt].weight=w;\n\tedge[cnt].next=head[x];\n\thead[x]=cnt++;\n}\n\ninline int convert(int x,int y)  //\u628a\u4e8c\u7ef4\u7684\u5750\u6807\u6620\u5c04\u5230\u4e00\u7ef4 \n{\n\treturn (x-1)*200+y;\n}\n\nvoid input()\n{\n\tfor (int i=0;i<=MAXN2<<1;i++)\n\t\thead[i]=-1;\n\ts=0;\n\tt=80001;\n\tcin>>n>>m;\n\t\n\t\n\tfor (int i=0;i<=n+1;i++)\n\t{\n\t\tcastle[i][0]=2; \n\t\tcastle[i][m+1]=2; \n\t}\n\tfor (int i=1;i<=m+1;i++)\n\t{\n\t\tcastle[0][i]=2; \n\t\tcastle[n+1][i]=2; \n\t} //\u8fd9\u91cc\u628a\u57ce\u5821\u7528\u5899\u5148\u56f4\u4e0a\u4e00\u5708 \n\t\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&castle[i][j]); //\u8bfb\u5165 \n\n\tint poswall;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tif (castle[i][j]!=2)\n\t\t\t{\n\t\t\t\tposwall=convert(i,j);\n\t\t\t\tif (castle[i+1][j]==2) //\u5982\u679c\uff08i,j)\u4e0b\u65b9\u6709\u5835\u5899 \n\t\t\t\t{\n\t\t\t\t\tadd(s,poswall,1);\n\t\t\t\t\tadd(poswall,s,0); //\u4ece\u8d85\u6e90\u5f80\u8fd9\u5835\u5899\u8fde\u8fb9 \n\t\t\t\t\tfor (int k=i;castle[k][j]!=2;k--) //\u5f80\u4e0a\u8d70\uff0c\u8bb0\u5f55\u5728wall\u6570\u7ec4\u91cc \n\t\t\t\t\t\twall[k][j][0]=poswall;\n\t\t\t\t}\n\t\t\t\tif (castle[i][j+1]==2) //\u5982\u679c\uff08i,j)\u53f3\u65b9\u6709\u5835\u5899\n\t\t\t\t{\n\t\t\t\t\tadd(poswall+40000,t,1); //\u7ad6\u5899\u662f\u8981\u52a0\u4e0a40000\u7684 \n\t\t\t\t\tadd(t,poswall+40000,0);\n\t\t\t\t\tint poswall=convert(i,j);\n\t\t\t\t\tfor (int k=j;castle[i][k]!=2;k--)\n\t\t\t\t\t\twall[i][k][1]=poswall;\n\t\t\t\t}\n\t\t\t}\n\tidbegin=cnt; //\u8bb0\u5f55\u6b64\u65f6\u7684cnt\uff0c\u6700\u7ec8\u5bfb\u627e\u6709\u6d41\u8fb9\u7684\u65f6\u5019\u4ece\u8fd9\u91cc\u5f00\u59cb\u627e\u5c31\u884c\u4e86 \n\t\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tif (castle[i][j]==0) //\u5982\u679c\u9047\u5230\u7a7a\u5730\uff0c\u4ece\u5bf9\u5e94\u6a2a\u5899\u5f80\u5bf9\u5e94\u7ad6\u5899\u8fde\u8fb9 \n\t\t\t{\n\t\t\t\tadd(wall[i][j][0],wall[i][j][1]+40000,1);\n\t\t\t\tadd(wall[i][j][1]+40000,wall[i][j][0],0);\n\t\t\t}\n}\n\nbool bfs() //dinic\u7b97\u6cd5\u7684bfs\u90e8\u5206\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684deep \uff0c\u5982\u679c\u5230\u4e0d\u8fbe\u6c47\u70b9\u8bf4\u660e\u5df2\u7ecf\u6ee1\u6d41 \n{\n\tint cur;\n\tqueue <int> q;\n\tfor (int i=0;i<=80001;i++)\n\t\tdeep[i]=-1;\n\tdeep[s]=0;\n\tq.push(s);\n\twhile (!q.empty())\n\t{\n\t\tcur=q.front();\n\t\tq.pop();\n\t\tfor (int i=head[cur];~i;i=edge[i].next)\n\t\t\tif (!~deep[edge[i].to] && edge[i].weight)\n\t\t\t{\n\t\t\t\tdeep[edge[i].to]=deep[cur]+1;\n\t\t\t\tq.push(edge[i].to);\n\t\t\t}\n\t}\n\tif (~deep[t])\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n\nint dfs(int cur,int limit) //dinic\u7684dfs\u90e8\u5206\uff0c\u5bfb\u627e\u53ef\u884c\u6d41\n{\n\tif (!limit || cur==t)\n\t\treturn limit;\n\t\t\n\tint flow=0;\n\tint f;\n\t\n\tfor (int i=head[cur];~i;i=edge[i].next)\n\t{\n\t\tif (deep[edge[i].to]==deep[cur]+1 && (f=dfs(edge[i].to,min(limit,edge[i].weight))))\n\t\t{\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\tedge[i].weight-=f;\n\t\t\tedge[i^1].weight+=f;\n\t\t\tif (!limit) break;\n\t\t}\n\t}\n\tif (!flow) deep[cur]=-1;\n\treturn flow;\n}\n\nint dinic() //\u80fd\u770b\u5230\u8fd9\u9898\u5e94\u8be5dinic\u5df2\u7ecf\u638c\u63e1\u4e86\uff0c\u4e0d\u518d\u8d58\u8ff0\uff0c\u5982\u4e0d\u7136\u8bf7\u5148A\u4e86\u6a21\u677f\u9898 \n{\n\twhile (bfs())\n\t\tmaxflow+=dfs(s,INF);\n\treturn maxflow;\n}\n\nint main()\n{\n\tinput();\n\tdinic();\n\tcout<<maxflow<<endl;\n\tfor (int i=idbegin;i<cnt;i+=2) //\u626b\u63cf\u6240\u6709\u6b63\u5411\u8fb9 \n\t\tif (edge[i].weight==0) //\u5982\u679c\u6709\u6d41\u901a\u8fc7\uff0c\u8f93\u51fa\u5bf9\u5e94\u7ad6\u5899\u7684x\u5750\u6807\u548c\u6a2a\u5899\u7684y\u5750\u6807 \n\t\t\tcout<<(edge[i].to-40000-1)/200+1<<' '<<(edge[i].from-1)%200+1<<endl; //\u53cd\u8fc7\u6765\u6620\u5c04\u7684\u65f6\u5019\u8981\u5c0f\u5fc3 \n\treturn 0;\n}\n\n```",
        "postTime": 1544441909,
        "uid": 56267,
        "name": "Rhodoks",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "# **\u3010\u9898\u89e3\u3011\u5bab\u5ef7\u5b88\u536b [P1263]**\n\n[\u5e7f\u544a](https://www.cnblogs.com/Xing-Ling/p/11631854.html)\n\n**\u4f20\u9001\u95e8\uff1a[\u5bab\u5ef7\u5b88\u536b $[P1263]$](https://www.luogu.org/problem/P1263)**\n\n\n## **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u4e2a $n*m$ \u7684\u65b9\u683c\u56fe\uff0c\u5206\u522b\u7528\u6574\u6570 $0,1,2$ \u8868\u793a\u7a7a\u5730\u3001\u9677\u9631\u3001\u5899\uff0c\u7a7a\u5730\u4e0a\u53ef\u4ee5\u653e\u7f6e\u5b88\u536b\uff0c\u5982\u679c\u4e24\u4e2a\u5b88\u536b\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u4e14\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u5899\u7684\u963b\u6321\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u4f1a\u4e92\u76f8\u770b\u89c1\u3002\u6c42\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u591a\u5c11\u4e2a\u5b88\u536b\u4f7f\u5f97\u4ed6\u4eec\u4e92\u76f8\u65e0\u6cd5\u770b\u89c1\u5bf9\u65b9\uff0c\u5e76\u8f93\u51fa\u5176\u4e2d\u4e00\u79cd\u65b9\u6848\u3002\n\n-------\n\n## **\u3010\u5206\u6790\u3011**\n\n\u5982\u679c\u6ca1\u6709\u5899\u7684\u9650\u5236\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u679c\u7684\u4e8c\u5206\u56fe\u5957\u8def\u9898\uff08[\u8eca\u7684\u653e\u7f6e](https://www.acwing.com/problem/content/375/)\uff09\uff0c\u5c06\u6bcf\u4e00\u884c\u770b\u4f5c\u5de6\u70b9\uff0c\u6bcf\u4e00\u5217\u770b\u4f5c\u53f3\u70b9\uff0c\u5bf9\u4e8e\u6ca1\u6709\u9677\u9631\u7684\u70b9\uff08\u7a7a\u5730\uff09\uff0c\u5c06\u5176\u6240\u5728\u884c\u4e0e\u5176\u6240\u5728\u5217\u8fde\u8fb9\uff0c\u8dd1\u4e00\u904d\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n\u5899\u7684\u5b58\u5728\u4f7f\u5f97\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u90fd\u5206\u88c2\u6210\u4e86\u82e5\u5e72\u90e8\u5206\uff0c\u4e14\u6bcf\u4e00\u90e8\u5206\u90fd\u662f\u72ec\u7acb\u5b58\u5728\u3001\u4e92\u4e0d\u5e72\u6d89\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u6bcf\u4e00\u90e8\u5206\u90fd\u89c6\u4f5c\u4e00\u4e2a\u70b9\uff0c\u4f8b\u5982\u6837\u4f8b\uff1a\n\n**\u7b2c\u4e09\u5217** \u88ab **\u5899**$(2,3)$ \u5206\u4e3a\u4e86\u4e0a\u4e0b\u4e24\u4e2a\u90e8\u5206\uff0c\u4e0a\u9762\u662f\u5426\u653e\u5b88\u536b\u4e0e\u4e0b\u9762\u80fd\u5426\u653e\u5b88\u536b\u6ca1\u6709\u4efb\u4f55\u5173\u8054\uff0c\u540c\u7406\u4e0b\u9762\u4e5f\u5982\u6b64\u3002\n\n\u5269\u4f59\u90e8\u5206\u4e0e **\u8eca\u7684\u653e\u7f6e** \u76f8\u540c\u3002\n\n## **\u3010Code\u3011**\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<vector>\n#define Re register int\nusing namespace std;\nconst int N=203,M=80003;\nstruct QAQ{int to,next;}a[M<<1];\nint n,m,o,n1,n2,ans,pan[N*N*2],head[N*N*2],match[N*N*2],A[N][N],idh[N][N],idz[N][N];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int f=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')f|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=f?-x:x;\n}\ninline int dfs(Re x){//\u5308\u7259\u5229\u7b97\u6cd5\n    for(Re i=head[x],to;i;i=a[i].next)\n    \tif(!pan[to=a[i].to]){\n            pan[to]=1;\n            if(!match[to]||dfs(match[to])){\n            \tmatch[to]=x;return 1;\n            }\n    \t}\n    return 0;\n}\nint main(){\n    // \tfreopen(\"guard.in\",\"r\",stdin);\n    //\tfreopen(\"guard.out\",\"w\",stdout);\n    in(n),in(m);\n    for(Re i=1;i<=n;++i)\n    \tfor(Re j=1;j<=m;++j)\n            in(A[i][j]);\n    for(Re i=1;i<=n;++i)A[i][0]=2;//\u9884\u5904\u7406\u8fb9\u754c\n    for(Re i=1;i<=m;++i)A[0][i]=2;\n    for(Re i=1;i<=n;++i)//\u5904\u7406\u6bcf\u4e00\u884c\n    \tfor(Re j=1;j<=m;++j)\n            if(A[i][j]<2)//\u4e0d\u662f\u5899\uff0c\u9700\u8981\u5efa\u70b9\n            \tif(A[i][j-1]>1)idh[i][j]=++n1;//\u524d\u9762\u662f\u5899\uff0c\u65b0\u5f00\u4e00\u90e8\u5206\n            \telse idh[i][j]=idh[i][j-1];//\u524d\u9762\u4e0d\u662f\u5899\uff0c\u4e0e\u5176\u7b97\u4f5c\u4e00\u4e2a\u90e8\u5206\n    for(Re j=1;j<=m;++j)//\u5904\u7406\u6bcf\u4e00\u5217\n    \tfor(Re i=1;i<=n;++i)\n            if(A[i][j]<2)//\u4e0d\u662f\u5899\uff0c\u9700\u8981\u5efa\u70b9\n            \tif(A[i-1][j]>1)idz[i][j]=++n2;//\u524d\u9762\u662f\u5899\uff0c\u65b0\u5f00\u4e00\u90e8\u5206\n            \telse idz[i][j]=idz[i-1][j];//\u524d\u9762\u4e0d\u662f\u5899\uff0c\u4e0e\u5176\u7b97\u4f5c\u4e00\u4e2a\u90e8\u5206\n    for(Re i=1;i<=n;++i)\n    \tfor(Re j=1;j<=m;++j)\n            if(!A[i][j])add(idh[i][j],idz[i][j]);//\u6ca1\u6709\u9677\u9631\u5c31\u8fde\u8fb9\n    for(Re i=1;i<=n1;++i){//\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n    \tfor(Re j=1;j<=n2;++j)pan[j]=0;\n    \tans+=dfs(i);\n    }\n    printf(\"%d\\n\",ans);\n    for(Re i=1;i<=n;++i)//\u8f93\u51fa\u7b54\u6848\u5229\u7528\u5b50\u5308\u7259\u5229\u7b97\u6cd5\u7684\u7279\u6027\n    \tfor(Re j=1;j<=m;++j)//match\u6570\u7ec4\u8bb0\u5f55\u4e86\u6240\u6709\u7684\u5339\u914d\u8fb9\n            if(!A[i][j]&&idh[i][j]==match[idz[i][j]])printf(\"%d %d\\n\",i,j);\n//  fclose(stdin);\n//  fclose(stdout);\n    return 0;\n}\n```\n\n",
        "postTime": 1570447954,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u4f3c\u4e4e\u6ca1\u6709\u4e0b\u624b\u70b9\uff0c\u53ea\u80fd\u7528\u4e07\u80fd\u7b97\u6cd5\uff08\u7206\u641c\uff09\uff0c\u518d\u4ed4\u7ec6\u60f3\u4e00\u60f3\uff0c\u5176\u5b9e\u6700\u503c\u4e00\u822c\u5c31\u90a3\u51e0\u4e2a\u65b9\u6cd5\uff0cdp\u663e\u7136\u4e0d\u884c\uff0c\u8d2a\u5fc3\u4f3c\u4e4e\u4e5f\u4e0d\u884c\uff08\u6570\u636e\u91cf\u592a\u5c0f\uff09\uff0c\u4e8c\u5206\u5462\uff1f\u4e0d\u597d\u68c0\u67e5\uff0c\u4e8e\u662f\u8bd5\u8bd5\u7f51\u7edc\u6700\u5927\u6d41\u3002\n\n\u6709\u70b9\u7c7b\u4f3c\u4e00\u9053\u7f51\u7edc\u6d41\u7684\u57fa\u672c\u9898\u2014\u2014\u540c\u884c\u540c\u5217\u4e0d\u80fd\u51fa\u73b0\u4e24\u4e2a\u4eba\uff0c\u8fd9\u9053\u9898\u4e0d\u8fc7\u662f\u591a\u4e86\u4e24\u4e2a\u9650\u5236\u2014\u2014\u5899\u548c\u9677\u9631\u3002\u5176\u5b9e\u4e5f\u5f88\u597d\u5904\u7406\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u53ef\u4ee5\u6309\u7167\u5899\u8fdb\u884c\u5206\u6bb5\uff0c\u4e00\u6bb5\u5bf9\u5e94\u4e00\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u5217\u4e5f\u5206\u6bb5\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7a7a\u5730\uff0c\u60f3\u5b83\u6240\u5728\u7684\u884c\u6bb5\u548c\u5217\u6bb5\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0cS\u5411\u884c\u6bb5\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u5217\u6bb5\u5411T\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u7b97\u51fa\u6765\u7684\u6700\u5927\u6d41\u5c31\u662f\u6700\u591a\u53ef\u4ee5\u653e\u591a\u5c11\u4e2a\u4eba\uff0c\u6700\u540e\u770b\u770b\u54ea\u4e9b\u8fb9\u88ab\u4f7f\u7528\u8fc7\u5c31\u884c\u4e86\u3002\n\n\u8bdd\u8bf4\u4f3c\u4e4e\u590d\u6742\u5ea6\u5f88\u60ac\uff0c\u7ed3\u679cDinic\u7b97\u6cd5\u98de\u5feb\u7684AC\u4e86\uff0c\u6700\u6162\u7684\u5e97\u624d43ms\u3002\u3002\u3002\u4e0d\u660e\u767d\u600e\u4e48\u624d\u8fd9\u4e48\u5c11\u7684\u4ebaAC\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 40005, maxm = 160005;\nstruct Edge{int to, cap, next;} edge[maxm];\nint mp[205][205], head[maxn], tot, n, m;\ninline void addedge(int u, int v, int w){\n    edge[tot].to = v;\n    edge[tot].cap = w;\n    edge[tot].next = head[u];\n    head[u] = tot++;\n    edge[tot].to = u;\n    edge[tot].cap = 0;\n    edge[tot].next = head[v];\n    head[v] = tot++;\n}\nint que[maxn], level[maxn], id[maxn];\nvoid bfs(int s){\n    int he = 0, ta = 0;\n    memset(level, -1, sizeof(level));\n    level[que[ta++] = s] = 0;\n    while(he < ta){\n        int u = que[he++];\n        for(int i = head[u]; ~i; i = edge[i].next){\n            int v = edge[i].to;\n            if(edge[i].cap > 0 && level[v] < 0){\n                level[v] = level[u] + 1;\n                que[ta++] = v;\n            }\n        }\n    }\n}\nint dfs(int u, int t, int f){\n    if(u == t) return f;\n    int flow = 0, k;\n    for(int &i = id[u]; ~i; i = edge[i].next){\n        int v = edge[i].to, c = edge[i].cap;\n        if(c > 0 && level[v] > level[u] && \n            (k = dfs(v, t, min(f, c))) > 0){\n            f -= k; flow += k;\n            edge[i].cap -= k;\n            edge[i ^ 1].cap += k;\n            if(f == 0) return flow;\n        }\n    }\n    return flow;\n}\nint max_flow(int s, int t){\n    int flow = 0, f;\n    while(true){\n        bfs(s);\n        if(level[t] < 0) return flow;\n        memcpy(id, head, sizeof(id));\n        while((f = dfs(s, t, 0x7fffffff)) > 0) flow += f;\n    }\n}\nint row[205][205], col[205][205], x[maxm], y[maxm];\nint main(){\n    memset(head, -1, sizeof(head));\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 0; i < n; i++)\n    for(int j = 0; j < m; j++) scanf(\"%d\", &mp[i][j]);\n    int cnt = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < m;){\n            int k = j;\n            for(; k < m && mp[i][k] != 2; k++);\n            for(int l = j; l < k; l++) if(mp[i][l] == 0)\n                row[i][l] = cnt;\n            if(j < k) cnt++;\n            j = k + 1;\n        }\n    }\n    int cnt1 = cnt;\n    for(int i = 0, j = 0; i < m; i++){\n        for(int j = 0; j < n;){\n            int k = j;\n            for(; k < n && mp[k][i] != 2; k++);\n            for(int l = j; l < k; l++) if(mp[l][i] == 0)\n                col[l][i] = cnt;\n            if(j < k) cnt++;\n            j = k + 1;\n        }\n    }\n    int s = cnt, t = cnt + 1;\n    for(int i = 0; i < n; i++)\n    for(int j = 0; j < m; j++){\n        x[tot] = i + 1; y[tot] = j + 1;\n        addedge(row[i][j], col[i][j], 1);\n    }\n    for(int i = 0; i < cnt1; i++) addedge(s, i, 1);\n    for(int i = cnt1; i < cnt; i++) addedge(i, t, 1);\n    printf(\"%d\\n\", max_flow(s, t));\n    for(int i = 0; i < tot; i++) if(edge[i].cap == 0) {\n        if(x[i] > 0) printf(\"%d %d\\n\", x[i], y[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1508159330,
        "uid": 30575,
        "name": "waaadreamer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u53e6\u4e00\u79cd\u4e0d\u540c\u4e8e\u7f51\u7edc\u6d41\u7684\u505a\u6cd5\u2014\u2014\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u7b80\u5355\u597d\u8bb0\uff0c\u5bf9\u4e8e\u4e8c\u5206\u56fe\u5339\u914d\u540c\u6837\u9002\u7528\u3002\n\n\u5f62\u8c61\u7684\u8bf4\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u5927\u81f4\u5982\u4e0b\uff1a\uff08\u4e5f\u53ef\u4ee5\u767e\u5ea6\u641c\u7d22\uff0c[\u8fd9\u4e2a\u5e2e\u4eba\u627e\u59b9\u5b50\u7684\u4f8b\u5b50\u4e0d\u9519](https://blog.csdn.net/sunny_hun/article/details/80627351)\uff09\n\n\u8fd8\u6709\u9002\u5408\u6211\u7684\uff0c\u5c31\u628a\u5360\u6389\u3002\n\n\u9002\u5408\u6211\u7684\u90fd\u88ab\u5360\u4e86\uff0c\u5c31\u53bb\u62a2\u522b\u4eba\u7684\u3002\n\n\u522b\u4eba\u518d\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u3002\n\n\u5982\u679c\u6211\u7684\u88ab\u62a2\u4e86\u627e\u4e0d\u5230\u5176\u4ed6\u9002\u5408\u7684\uff0c\u5c31\u62d2\u7edd\u4f60\u3002\n\n\u6211\u662f\u4e2a\u6587\u660e\u4eba\uff08~~\u786e\u5b9a~~\uff09\uff0c\u5982\u679c\u62a2\u88ab\u62d2\u7edd\u4e86\u518d\u53bb\u62a2\u522b\u4eba\u7684\u3002\n\n\u62a2\u4e86\u4e00\u5708\u6ca1\u62a2\u5230\uff0c\u53ea\u597d\u5624\u5624\u5624\uff08\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\uff09\n\n\u8bf4\u7740\u590d\u6742\uff0c\u5176\u5b9e\u8fd9\u53ea\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\n\n\u81f3\u4e8e\u5efa\u56fe\uff0c\u5176\u4ed6dalao\u90fd\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u5c31\u53ea\u7b80\u5355\u63d0\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7a7a\u5730\uff0c\u5c06\u5176\u4e0b\u9762\u7b2c\u4e00\u5835\u5899\u548c\u53f3\u8fb9\u7b2c\u4e00\u5835\u5899\u5efa\u8fb9\u5373\u53ef\uff08\u5047\u8bbe\u56fe\u5916\u56f4\u4e3a\u4e86\u4e00\u5708\u5899\uff09\u3002\n\n\u7136\u540e\u5316\u5750\u6807\u4e3a\u4e00\u7ef4\u7684\u70b9\u5c31\u884c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <iostream>\n#define MP make_pair\nusing namespace std;\n\nconst int N = 203;\nint n, m, a[N][N];\nvector <int> c[N * N];\nint d[N * N], ans;\nbool vis[N * N];\npair <int, int> l[N];\n\ninline int zh (const int x, const int y) {return (x - 1) * (m + 1) + y;} //\u5316\u4e8c\u7ef4\u4e3a\u4e00\u7ef4\uff0c\u8fd9\u4e2a\u5c31\u968f\u559c\u597d\u5199\u4e86\ninline void add (const int x, const int y) {c[x].push_back (y); return ;}\ninline pair <int, int> work (const int t) {\n\tint x = (t - 1) / (m + 1) + 1;\n\tint y = t - (x - 1) * (m + 1);\n\treturn MP (x, y);\n} //\u5316\u4e00\u7ef4\u4e3a\u4e8c\u7ef4\n\nbool Find (int x) { //\u6bcf\u6b21Find\u5c31\u662f\u62a2\u522b\u4eba\u7684\u64cd\u4f5c\n\tint i, y, k = c[x].size ();\n\tfor (i = 0; i < k; ++i) {\n\t\ty = c[x][i];\n\t\tif (!vis[y]) {//\u5982\u679c\u8be5\u8282\u70b9\u8fd9\u4e00\u8f6e\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n\t\t\tvis[y] = 1;   //\u6807\u8bb0\u88ab\u8bbf\u95ee\n\t\t\tif (!d[y] || Find (d[y])) { //d\u6570\u7ec4\u8868\u793a\u8be5\u8282\u70b9\u88ab\u8c01\u5360\u636e\u4e86\uff0c0\u8868\u793a\u8fd8\u6ca1\u6709\u88ab\u5360\u636e\uff1b\u5982\u679c\u88ab\u5360\u636e\u4e14\u6211\u628a\u8fd9\u4e2a\u62a2\u8d70\uff0c\u522b\u4eba\u8fd8\u80fd\u5360\u5230\u5176\u4ed6\u7684\n\t\t\t\td[y] = x; //\u90a3\u8fd9\u4e2a\u5c31\u662f\u6211\u7684\u4e86\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main () {\n\tscanf (\"%d %d\", &n, &m);\n\tint i, j, x, y; for (i = 1; i <= n; ++i) for (j = 1; j <= m; ++j) scanf (\"%d\", &a[i][j]);\n\tfor (i = 0; i <= n + 1; ++i) a[i][0] = a[i][m + 1] = 2;\n\tfor (i = 0; i <= m + 1; ++i) a[0][i] = a[n + 1][i] = 2;\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= m; ++j) {\n\t\tif (a[i][j]) continue; //\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7a7a\u5730\u627e\u5899\u5efa\u56fe\n\t\ty = j + 1; while (a[i][y] != 2) ++y;\n\t\tx = i + 1; while (a[x][j] != 2) ++x;\n\t\tadd (zh (i, y), zh (x, j));\n\t}\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= m; ++j) {\n\t\tif (a[i][j + 1] == 2) {\n\t\t\tmemset (vis, 0, sizeof (vis));\n\t\t\tif (Find (zh (i, j + 1))) ++ans; //\u5982\u679c\u6211\u627e\u5230\u8282\u70b9\u5360\u636e\uff0cans++\n\t\t}\n\t}\n\tprintf (\"%d\\n\", ans);\n\tint t;\n\tfor (i = 1; i <= n; ++i) for (j = 1; j <= m; ++j) {\n\t\tt = zh (i + 1, j);\n\t\tif (d[t]) printf (\"%d %d\\n\", work (d[t]).first, j); //\u8be5\u8282\u70b9\u88ab\u5360\u636e\uff0c\u5c31\u8f93\u51fa\u8fd9\u4e24\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u5750\u6807\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566735391,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "\u524d\u7f6e\u7b97\u6cd5:\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\u8bf7\u5148\u5b66\u4e60\u6b64\u7b97\u6cd5\u6216\u8df3\u8fc7\u6b64\u9898\u89e3,\u82e5\u4e0d\u5b66,\u5f88\u96be\u770b\u61c2\u6b64\u7bc7\u9898\u89e3\u3002\n\n\u9996\u5148,\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u95ee\u9898,\u5982\u679c\u6ca1\u6709\u5899,\u90a3\u4e48\u8fd9\u9053\u9898\u600e\u4e48\u505a\u3002\n\n\u663e\u7136,\u6bcf\u4e00\u884c\u90fd\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a,\u6bcf\u4e00\u5217\u90fd\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a(\u5426\u5219\u4ed6\u4eec\u4f1a\u653b\u51fb)\n\n\u6240\u4ee5,\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06**\u4e0d\u662f\u9677\u9631\u7684\u683c\u5b50**\u884c\u5217\u5efa\u8fb9\u3002\u7136\u540e\u8dd1\u4e00\u904d\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u6bd4\u5982,\u5bf9\u4e8e\u8fd9\u4e2a\u56fe:\n```cpp\n00\n01\n```\n1\u884c1\u5217,1\u884c2\u5217,2\u884c1\u5217\u5747\u662f\u7a7a\u5730\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8fd9\u6837\u5efa\u8fb9,\u6700\u5927\u5339\u914d\u5c31\u662f1->1,2->2\n```cpp\n1==1\n \\\n  \\\n2==2\n```\n\n\u4f46\u73b0\u5728\u52a0\u5165\u4e86\u5899,\u90a3\u600e\u4e48\u529e\u5462?\u6bcf\u884c\u6bcf\u5217\u5c31\u4e0d\u662f\u53ea\u80fd\u9009\u4e00\u4e2a\u4e86\u3002\n\n\u90a3\u4e48,\u6211\u4eec\u8981\u6784\u9020\u51fa\u53ea\u80fd\u90091\u4e2a\u7684\u3002\u6211\u4eec\u53d1\u73b0,\u5728\u540c\u884c\u540c\u5217\u5e76\u4e14\u4e2d\u95f4\u6ca1\u6709\u5899\u7684\u4e00\u4e9b\u65b9\u683c\u5c31\u53ea\u80fd\u90091\u4e2a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u90a3\u4e9b\u53ef\u4ee5\u5c04\u51fb\u7684\u65b9\u683c\u8868\u793a\u4e3a\u76f8\u540c\u7684\u6570\u5b57,\u4e0d\u53ef\u4ee5\u5c04\u51fb\u8868\u793a\u4e3a\u4e0d\u540c\u7684\u6570\u5b57\u3002\u7136\u540e\u5efa\u8fb9\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u6837\u4f8b(x\u8868\u793a\u5899)\u3002\n```cpp\n3 4      \u884c\u53ef\u4ee5\u76f8\u4e92\u5c04\u51fb\u7684:   \u5217\u76f4\u63a5\u53ef\u4ee5\u76f8\u4e92\u5c04\u51fb\u7684:\n2 0 0 0  x 1 1 1             x 1 2 3\n2 2 2 1  x x x 2             x x x 3\n0 1 0 2  3 3 3 x             4 5 6 x\n```\n\u7136\u540e\u5efa\u8fb91->1,1->2,1->3,3->4,3->6\u3002\n\n\u5177\u4f53\u601d\u8def\u5c31\u770b\u4ee3\u7801\u5427,\u770b\u4e86\u4ee3\u7801\u4f60\u5c31\u61c2\u4e86\u3002\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint a[1005][1005],x[1005][1005],y[1005][1005];\nint kkksc03[1000005];\nbool mark[1000005];\nstruct xyq{\n\tint v,next;\n}_[1000005];\nint head[1000005],tot=1;\nvoid add(int u,int v){\n\t_[tot].v=v;\n\t_[tot].next=head[u];\n\thead[u]=tot;\n\t++tot;\n}\nbool dfs(int iakioi){\n\tint i;\n\tfor(i=head[iakioi];i;i=_[i].next){\n\t\tif(mark[_[i].v]){ \n\t\t\tcontinue;\n\t\t}\n\t\tmark[_[i].v]=1;\n\t\tif(!kkksc03[_[i].v]||dfs(kkksc03[_[i].v])){\n\t\t\tkkksc03[_[i].v]=iakioi;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint fx[1000005],fy[1000005],n,m;\nvoid Find(int xx,int yy,int &ra,int &rb){ //\u67e5\u627e\u884c\u5217\u7684\u51fd\u6570\u3002\n\tra=-1;\n\trb=-1;\n\tint i,j;\n\tfor(i=1;i<=n;++i){\n\t\tfor(j=1;j<=m;++j){\n\t\t\tif(x[i][j]==xx&&y[i][j]==yy){\n\t\t\t\tra=i;\n\t\t\t\trb=j;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tint i,j,sum=0,sumx=1,sumy=1,aa,bb;\n\tcin>>n>>m;\n\tfor(i=0;i<=n;i++){\n\t\tfor(j=0;j<=m;j++){\n\t\t\ta[i][j]=2; //\u4e00\u5f00\u59cb\u5168\u662f\u5899,\u5426\u5219\u4f1a\u51fa\u73b0\u8fb9\u754c\u4e0d\u662f\u5899\u800c\u4ea7\u751f\u7684\u95ee\u9898\u3002\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i){\n\t\tfor(j=1;j<=m;++j){\n\t\t\tcin>>a[i][j];\n\t\t\tif(a[i][j]!=2){\n\t\t\t\tif(a[i-1][j]==2){ //\u5982\u679c\u4e0e\u524d\u9762\u4e00\u4e2a\u53ef\u4ee5\u5c04\u51fb\u5c31\u4e0e\u524d\u9762\u4e00\u6837,\u5426\u5219\u65b0\u5efa\u4e00\u4e2a\u5206\u7ec4\u3002\n\t\t\t\t\tx[i][j]=sumx; \n\t\t\t\t\tfx[sumy]=i;\n\t\t\t\t\tfx[sumy]=j;\n\t\t\t\t\tsumx++;\n\t\t\t\t}else{\n\t\t\t\t\tx[i][j]=x[i-1][j];\n\t\t\t\t}\n\t\t\t\tif(a[i][j-1]==2){\n\t\t\t\t\ty[i][j]=sumy;\n\t\t\t\t\tfy[sumy]=i;\n\t\t\t\t\tfy[sumy]=j;\n\t\t\t\t\tsumy++;\n\t\t\t\t}else{\n\t\t\t\t\ty[i][j]=y[i][j-1];\n\t\t\t\t}\n\t\t\t\tif(!a[i][j]){ //\u53ea\u6709\u5728\u7a7a\u5730\u624d\u5efa\u8fb9\u3002\n\t\t\t\t\tadd(x[i][j],y[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<sumx;++i){\n\t\tmemset(mark,0,sizeof(mark));\n\t\tsum+=dfs(i);\n\t}\n\tcout<<sum<<endl;\n\tfor(i=1;i<=sumy;++i){\n\t\tif(kkksc03[i]){\n\t\t\tFind(kkksc03[i],i,aa,bb); //\u7531\u4e8e\u8981\u8f93\u51fa\u65b9\u6848,\u8981\u8bbe\u4e00\u4e2a\u67e5\u627e\u51fd\u6570,\u6839\u636e\u5206\u7ec4\u67e5\u627e\u51fa\u884c\u5217\u3002\n\t\t\tcout<<aa<<\" \"<<bb<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584887828,
        "uid": 87799,
        "name": "xh39",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "[\u535a\u5ba2](https://a-failure.github.io/2018/04/14/%E5%AE%AB%E5%BB%B7%E5%AE%88%E5%8D%AB/)\n\n\u8ddf[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P2825)\u601d\u8def\u4e00\u6837\n\n\u628a\u6bcf\u884c\u3001\u6bcf\u5217\u8fde\u7eed\u7684\u4e00\u6bb5\u7f29\u6210\u4e00\u4e2a\u70b9\u5e76\u7f16\u53f7\n\n\u7136\u540e\u53ef\u4ee5\u9009\u7684\u4f4d\u7f6e\u884c\u548c\u5217\u7684\u7f16\u53f7\u76f8\u8fde\uff0c\u8dd1\u4e2a\u6700\u5927\u6d41\u5c31\u884c\u4e86\n\n\u81f3\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u628a\u7f16\u53f7\u548c\u884c\u5217\u5bf9\u5e94\u4e00\u4e0b\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\nusing namespace std;\nconst int MAX=401,inf=1e8,MAXX=(MAX*MAX<<1)+1,t=MAX*MAX<<1;\nstruct p{\n    int x,y,dis;\n}c[MAXX<<1];\nint n,m,tot,num,TOT;\nint h[MAXX],d[MAXX],id[MAXX],id2[MAXX];\nint colr[MAX][MAX],colc[MAX][MAX],a[MAX][MAX];\nbool use[MAXX];\nvoid add(int x,int y,int dis)\n{\n    c[num]=(p){h[y],x,0};\n    h[y]=num++;\n    c[num]=(p){h[x],y,dis};\n    h[x]=num++;\n}\nbool bfs()\n{\n    queue<int> qu;\n    qu.push(0);\n    memset(d,0,sizeof(d));\n    d[0]=1;\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(!d[c[i].y]&&c[i].dis)\n          {\n          \td[c[i].y]=d[tt]+1;\n          \tqu.push(c[i].y);\n          }\n    }\n    return d[t];\n}\nint dfs(int x,int dix)\n{\n    if(!dix||x==t) return dix;\n    int sum=0;\n    for(int i=h[x];i;i=c[i].x)\n      if(d[c[i].y]==d[x]+1&&c[i].dis)\n      {\n      \tint dis=dfs(c[i].y,min(dix,c[i].dis));\n      \tif(dis)\n      \t{\n      \t\tdix-=dis;\n      \t\tsum+=dis;\n      \t\tc[i].dis-=dis;\n      \t\tc[i^1].dis+=dis;\n      \t\tif(!dix) break;\n        }\n      }\n    if(!sum) d[x]=-1;\n    return sum;\n}\nint dinic()\n{\n    int tot=0;\n    while(bfs()) tot+=dfs(0,inf);\n    return tot;\n}\nint read()\n{\n\tint x=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n\treturn x;\n}\nvoid work()\n{\n\tfor(int i=1;i<=tot;++i)\n\t  for(int j=h[i];j;j=c[j].x)\n\t    if(c[j^1].dis&&c[j].y)\n\t    printf(\"%d %d\\n\",id[i],id2[c[j].y-tot]);\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        a[i][j]=read();\n    for(int i=1;i<=n;i++)\n      {\n      \tid[++tot]=i;\n      \tfor(int j=1;j<=m;j++)\n      \t  {\n      \t  \tif(a[i][j]==2) ++tot;\n      \t  \telse colr[i][j]=tot;\n      \t  \tid[tot]=i;\n\t\t  }\n      }\n    for(int i=1;i<=m;i++)\n      {\n      \tid2[++TOT]=i;\n      \tfor(int j=1;j<=n;j++)\n      \t  {\n      \t  \tif(a[j][i]==2) ++TOT;\n      \t  \telse colc[j][i]=TOT+tot;\n      \t  \tid2[TOT]=i;\n\t\t  }\n      }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        if(!a[i][j])\n        {\n        \tif(!use[colr[i][j]])\n        \t{\n        \t\tadd(0,colr[i][j],1);\n        \t\tuse[colr[i][j]]=1;\n            }\n            if(!use[colc[i][j]])\n            {\n                add(colc[i][j],t,1);\n                use[colc[i][j]]=1;\n            }\n        \tadd(colr[i][j],colc[i][j],1);\n        }\n    printf(\"%d\\n\",dinic());\n    work();\n    return 0;\n}\n```\n",
        "postTime": 1529501479,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    },
    {
        "content": "\u4e09\u500d\u7ecf\u9a8c\u9898\u634f\u3002\n\n[\u4e09](https://www.luogu.com.cn/problem/P1263)\n[\u9053](https://www.luogu.com.cn/problem/P6062)\n[\u9898](https://www.luogu.com.cn/problem/P2825)\n\n## \u9898\u9762\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\times m$ \u7684\u7f51\u683c\u56fe\uff0c\u6709\u5899\uff0c\u7a7a\u5730\u548c\u9677\u9631\u4e09\u79cd\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u5728\u7a7a\u5730\u653e\u7f6e\u5b88\u536b\uff0c\u5b88\u536b\u80fd\u591f\u5c04\u51fb\u5b83\u6240\u5728\u7684\u884c\u548c\u5217\uff0c\u4f46\u662f\u65e0\u6cd5\u7a7f\u900f\u5899\uff0c\u9677\u9631\u53ef\u4ee5\u88ab\u7a7f\u900f\uff0c\u4f46\u4e0d\u80fd\u653e\u7f6e\u5b88\u536b\uff0c\u95ee\u6700\u591a\u653e\u7f6e\u591a\u5c11\u4e2a\u5b88\u536b\uff0c\u5e76\u7ed9\u51fa\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\u3002\n\n$1\\leq n,m \\leq 200$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u80fd\u505a\u5230\u8fd9\u9053\u9898\u7684\u4eba\u90fd\u662f\u64c5\u957f\u7f51\u7edc\u6d41\u7684\u4eba\uff0c\u5efa\u6a21\u8fd8\u9700\u8981\u6211\u8bb2\u5417(\n\n\u6211\u4eec\u4ed4\u7ec6\u8003\u8651\u5982\u4f55\u653e\u7f6e\u5b88\u536b\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u80fd\u591f\u653e\u7f6e\uff0c\u5219\u653e\u7f6e\uff0c\u5e76\u4e14\u5176\u6240\u5728\u7684\u884c\u548c\u5217\u4fbf\u65e0\u6cd5\u518d\u653e\u7f6e\uff0c\u6240\u4ee5\u539f\u9898\u53ef\u4ee5\u62bd\u8c61\u4e3a\u6bcf\u4e2a\u70b9\uff0c\u8981\u4e48\u88ab\u5b83\u6240\u5728\u5217\u8986\u76d6\uff0c\u8981\u4e48\u88ab\u5b83\u6240\u5728\u7684\u884c\u8986\u76d6\uff08\u5982\u679c\u90fd\u6ca1\u8986\u76d6\uff0c\u663e\u7136\u80fd\u591f\u518d\u653e\u7f6e\u4e00\u4e2a\u5b88\u536b\uff09\u3002\n\n\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u80fd\u591f\u88ab\u6240\u5728\u884c\u6216\u8005\u6240\u5728\u5217\u8986\u76d6\u7684\u524d\u63d0\u4e0b\uff0c\u80fd\u591f\u8986\u76d6\u591a\u5c11\u6b21\uff0c\u8fd9\u4e1c\u897f\u5c31\u662f\u7f51\u7edc\u6d41\u57fa\u672c\u5efa\u6a21\u4e86\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u7531\u6240\u5728\u884c\u8fde\u5411\u6240\u5728\u5217\uff0c\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u6211\u4eec\u53d1\u73b0\u884c\u548c\u5217\u4e0d\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u6982\u5ff5\u6539\u4e00\u4e0b\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5899\uff0c\u90fd\u7ed9\u5b83\u4e00\u4e2a\u7f16\u53f7 $x$\uff0c\u7136\u540e\u6211\u4eec\u7ef4\u62a4\u6bcf\u4e2a\u5899\u5411\u4e0b\u7684\u7a7a\u5730\u548c\u5411\u53f3\u7684\u7a7a\u5730\uff0c\u5219\u8bf4\u8fd9\u4e9b\u7a7a\u5730\u6240\u5728\u7684\u5217/\u884c\u4e3a\u5f53\u524d\u5899\u7684\u7f16\u53f7\uff0c\u7136\u540e\u76f4\u63a5\u7f51\u7edc\u6d41\u5373\u53ef\u3002\n\n\u8f93\u51fa\u65b9\u6848\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u8fde\u63a5\u884c\u548c\u5217\u7684\u7ebf\u6bb5\u662f\u8fde\u4e86\u54ea\u4e00\u884c\u54ea\u4e00\u5217\uff0c\u7136\u540e\u76f4\u63a5\u5728\u6b8b\u4f59\u7f51\u7edc\u4e0a\u627e\u8fb9\u6743\u4e3a $0$ \u7684\u6b63\u8fb9\u5373\u53ef\u3002\n\n## Code\n\n\u56e0\u4e3a\u8981\u7ef4\u62a4\u6bcf\u4e2a\u5899\u4e0b\u9762\u548c\u53f3\u9762\u7684\u70b9\uff0c\u6240\u4ee5\u9876\u7740\u4e0a\u9762\u548c\u5de6\u9762\u7684\u7a7a\u5730\u4f1a\u627e\u4e0d\u5230\u7f16\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u4eba\u4e3a\u5730\u589e\u52a0\u4e00\u884c\u4ee5\u53ca\u4e00\u5217\u5899\uff0c\u65b9\u4fbf\u4fee\u6539\u3002\n\n\u8bfb\u5165\u7684\u53d6\u6a21\u4e0d\u8981\u5728\u610f\uff0c\u90a3\u662f\u5176\u5b83\u7ecf\u9a8c\u7684\u9898\u7684\u8bfb\u5165\uff0c\u6211\u61d2\u5f97\u6539\u4e86\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <queue>\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N = 205;\nconst int V = N*N*4;\nchar ch[N];\nint mp[N][N],S,T;\nstruct aa{\n\tint nxt,to,val;\n}edge[V*2];\nint tot=1,head[V];\nvoid add(int u,int v,int w){\n\tedge[++tot].nxt = head[u];edge[tot].to = v;head[u] = tot;edge[tot].val = w;\n\tedge[++tot].nxt = head[v];edge[tot].to = u;head[v] = tot;edge[tot].val = 0;\n}\nint num1[N][N];\nint num2[N][N];\nint dep[V];\nqueue<int>q;\nbool bfs(){\n\tmemset(dep,0,sizeof(dep));\n\tdep[S] = 1;\n\tq.push(S);\n\twhile(!q.empty()){\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint now = edge[i].to;\n\t\t\tif(!dep[now]&&edge[i].val){\n\t\t\t\tdep[now] = dep[u]+1;\n\t\t\t\tq.push(now);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[T];\n}\nint dfs(int u,int f){\n\tif(u==T){\n\t\treturn f;\n\t}\n\tint used = 0;\n\tfor(int i=head[u];i&&f;i=edge[i].nxt){\n\t\tint now = edge[i].to;\n\t\tif(dep[now]==dep[u]+1&&edge[i].val){\n\t\t\tint w = dfs(now,min(f,edge[i].val));\n\t\t\tedge[i].val-=w;edge[i^1].val+=w;\n\t\t\tused+=w;f-=w;\n\t\t}\n\t}\n\tif(!used){\n\t\tdep[u] = 0;\n\t}\n\treturn used;\n}\nint ans,inf = 1e9;\nvoid dinic(){\n\twhile(bfs()){\n\t\tans+=dfs(S,inf);\n\t}\n}\nint val1[V],val2[V];\nint main(){\n\tint n,m;\n\tn = read();m = read();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tmp[i][j] = (read()+1)%3;\n\t\t}\n\t}\n\tS = 0;T = (n+1)*(m+1)*2+1;\n\tfor(int i=0;i<=n;i++){\n\t\tfor(int j=0;j<=m;j++){\n\t\t\tif(mp[i][j]){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbool flg = 1;\n\t\t\tfor(int k=i+1;k<=n;k++){\n\t\t\t\tif(mp[k][j]==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tflg = 0;\n\t\t\t\tnum1[k][j] = i*(m+1)+j; \n\t\t\t}\n\t\t\tif(!flg){\n\t\t\t\tadd(S,i*(m+1)+j,1);\n\t\t\t}\n\t\t\tflg = 1;\n\t\t\tfor(int k=j+1;k<=m;k++){\n\t\t\t\tif(mp[i][k]==0){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tflg = 0;\n\t\t\t\tnum2[i][k] = i*(m+1)+j+(n+1)*(m+1);\n\t\t\t}\n\t\t\tif(!flg){\n\t\t\t\tadd(i*(m+1)+j+(n+1)*(m+1),T,1);\n\t\t\t}\n\t\t}\n\t}\n\tint tots = tot;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(mp[i][j]==1){\n\t\t\t\tval1[tot+1] = i;val2[tot+1] = j;\n\t\t\t\tadd(num1[i][j],num2[i][j],1);\n\t\t\t}\n\t\t}\n\t}\n\tdinic();\n//\tfor(int i=head[T];i;i=edge[i].nxt){\n//\t\tint now = edge[i].to;\n//\t\tcout<<\"Node:\"<<now<<\" \"<<edge[i].val<<\"\\n\";\n//\t}\n\tcout<<ans<<\"\\n\";\n\tfor(int i=tots+1;i<tot;i+=2){\n\t\tif(!edge[i].val){\n\t\t\tcout<<val1[i]<<\" \"<<val2[i]<<\"\\n\"; \n\t\t}\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1671184386,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "P1263 [CEOI2002] Royal guards"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $m \\times n$ \u7684\u77e9\u9635\uff0c\u6709\u7a7a\u5730\u3001\u5899\u3001\u9677\u9631\u4e09\u79cd\u60c5\u51b5\u3002\n\n\u53ea\u6709\u7a7a\u5730\u53ef\u4ee5\u653e\u7f6e\u5b88\u536b\uff0c\u82e5\u4e24\u4e2a\u5b88\u536b\u5728\u540c\u4e00\u884c\u6216\u540c\u4e00\u5217\u4e14\u5176\u4e4b\u95f4\u6ca1\u6709\u5899\u7684\u963b\u6321\u5219\u8fd9\u4e24\u4e2a\u5b88\u536b\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\u3002\n\n\u6c42\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u7684\u5b88\u536b\u6570\uff0c\u5e76\u8f93\u51fa\u4e00\u79cd\u653e\u7f6e\u65b9\u6848\u3002\n\n### \u9898\u89e3\n\n\u5176\u5b9e\u8fd9\u9898\u548c P2825 \u51e0\u4e4e\u4e00\u81f4\uff0c\u5899\u7684\u5b58\u5728\u8ba9\u884c\u3001\u5217\u5206\u6bb5\uff0c\u5404\u6bb5\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u628a\u6bcf\u4e2a\u90e8\u5206\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5373\u628a\u8fde\u7eed\u7684\u4e00\u6bb5\u7f29\u6210\u4e00\u4e2a\u70b9\u5e76\u7f16\u53f7\u3002\n\n\u7136\u540e\u628a\u53ef\u4ee5\u653e\u7f6e\u7684\u70b9\u7684\u4f4d\u7f6e\u7684\u884c\u3001\u5217\u5750\u6807\u8fde\u8fb9\uff0c\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u5c31\u5229\u7528\u5308\u7259\u5229\u7b97\u6cd5\u7684\u7279\u6027\uff0c\u628a\u7f16\u53f7\u4e0e\u884c\u5217\u5bf9\u5e94\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define V e[i].v\nusing namespace std;const int N=2e3,M=1e6;int n,m,a[N][N],in[N][N],out[N][N],t,c,ans,F[M],f[N],p[M];\nstruct E{int v,nt;}e[M];void I(int u,int v){e[++c].v=v;e[c].nt=F[u];F[u]=c;}\nint D(int x){for(int i=F[x];i;i=e[i].nt)if(!f[V]){f[V]=1;if(!p[V]||D(p[V])){p[V]=x;return 1;}}return 0;}\nint main(){\n    cin>>n>>m;for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)cin>>a[i][j];\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(a[i][j]!=2){if(j==1||a[i][j-1]==2)t++;in[i][j]=t;}\n    for(int j=1;j<=m;j++)for(int i=1;i<=n;i++)if(a[i][j]!=2){if(i==1||a[i-1][j]==2)t++;out[i][j]=t;}\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(!a[i][j])I(in[i][j],out[i][j]);\n    for(int i=1;i<=t;i++)memset(f,0,sizeof(f)),ans+=D(i);cout<<ans<<endl;\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)if(p[out[i][j]]==in[i][j]&&!a[i][j])cout<<i<<\" \"<<j<<endl;\n    return 0;\n}\n```",
        "postTime": 1645796073,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "P1263"
    },
    {
        "content": "\u697c\u4e0b\u4ee3\u7801\u8c8c\u4f3c\u4e0d\u662f\u5341\u5206\u7f8e\u89c2\u3002\n\n\u5176\u5b9e\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u9053\u9898\u96be\u9053\u4e0d\u662f\u4e00\u770b\u5c31\u662f\u7f51\u7edc\u6d41\u4e48\u3002\u3002\u8fd9\u4e48\u7ecf\u5178\u7684\u6a21\u578b\u3002\u540c\u884c\u540c\u5217\u53ea\u80fd\u6709\u4e00\u4e2a\u4eba\uff0c\u5e76\u4e14\u6709\u5899\u7684\u9650\u5236\u3002\u3002\u3002\u7136\u800c\u5982\u679c\u6ca1\u6709\u5899\u7684\u9650\u5236\u8c8c\u4f3cO\uff081\uff09\u51fa\u89e3\u3002\u3002\u800c\u5982\u679c\u6709\u5899\u53c8\u51e0\u4e4e\u641c\u4e0d\u51fa\u6765\u3002\u3002\n\n\u628a\u6bcf\u4e00\u6a2a\u7eb5\u4ee5\u201c2\u201d\u62c6\u6210\u5f88\u591a\u4e2a\u4e32\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u4e32\u5f53\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u4f7f\u7528\u4e8c\u5206\u56fe\u5339\u914d\u6291\u6216\u662f\u7f51\u7edc\u6d41\u6765\u5b9e\u73b0\u4ed6\u4eec\u4e4b\u95f4\u7684\u5f02\u6216\u5173\u7cfb\u3002\u8fde\u8fb9\u4ec0\u4e48\u7684\u697c\u4e0b\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u90a3\u4e48\u8bf4\u4e00\u4e0b\u7f51\u7edc\u6d41\u95ee\u9898\u91cc\u4e00\u76f4\u6076\u5fc3\u7684\u8f93\u51fa\u65b9\u6848\uff0c\u8fd9\u4e2a\u9898\u8fd8\u6bd4\u8f83\u597d\uff0c\u7531\u4e8e\u6211\u4eec\u4ece\u6bcf\u4e00\u884c\u7684\u70b9\u53ea\u6709\u8fde\u5411\u5217\u7684\u548c\u6e90\u70b9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fb9\u6253\u4e0a\u6807\u8bb0\uff0c\u8868\u793a\u5b83\u662f\u4ecex\uff0cy\u70b9\u8fde\u51fa\u6765\u7684\uff0c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6240\u6709\u884c\u7684\u70b9\u5373\u53ef\u3002\n\n\u4e0d\u662f\u4e00\u9053\u96be\u9898\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#define inf 5000001\n#define re register\n#define ll long long \nusing namespace std;\nstruct po{\n\tint to,nxt,w,x,y;\n};\npo edge[500001];\nint head[20001],dep[20001],cur[20001],a[1001],b[50001],id,num=-1,nm,s,t,n,m;\nint line[201][201],row[201][201],map[201][201];\nstruct print{\n\tint x,y;\n};\nprint out[20001];\ninline int read()\n{\n    int x=0,c=1;\n    char ch=' ';\n    while((ch>'9'||ch<'0')&&ch!='-')ch=getchar();\n    while(ch=='-')c*=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-'0',ch=getchar();\n    return x*c;\n}\ninline void add_edge(int from,int to,int w,int x,int y)\n{\n\tedge[++num].nxt=head[from];\n\tedge[num].to=to;\n\tedge[num].w=w;\n\tedge[num].x=x;\n\tedge[num].y=y;\n\thead[from]=num;\n}\ninline void add(int from,int to,int w,int x,int y)\n{\n\tadd_edge(from,to,w,x,y);\n\tadd_edge(to,from,0,x,y);\n}\ninline bool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\twhile(!q.empty())\n\tq.pop();\n\tdep[s]=1;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(re int i=head[u];i!=-1;i=edge[i].nxt){\n\t\t\tint v=edge[i].to;\n\t\t\tif(edge[i].w>0&&!dep[v]){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tif(v==t) return 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int dfs(int u,int low)\n{\n\tif(u==t) return low;\n\tint diss=0;\n\tfor(re int& i=cur[u];i!=-1;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(edge[i].w&&dep[v]==dep[u]+1){\n\t\t\tint check=dfs(v,min(low,edge[i].w));\n\t\t\tif(check){\n\t\t\t\tlow-=check;\n\t\t\t\tdiss+=check;\n\t\t\t\tedge[i].w-=check;\n\t\t\t\tedge[i^1].w+=check;\n\t\t\t\tif(low==0) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn diss;\n}\ninline int dinic()\n{\n\tint ans=0;\n\twhile(bfs()){\n\t\tfor(re int i=s;i<=t;i++)\n\t\tcur[i]=head[i];\n\t\twhile(int d=dfs(s,inf))\n\t\tans+=d;\n\t}\n\treturn ans;\n}\ninline bool cmp(print p,print q){\n\tif(p.x<q.x) return 1;\n\telse if(p.x==q.x&&p.y<q.y) return 1;\n\treturn 0;\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tn=read();m=read();\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=m;j++)\n\t map[i][j]=read();\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=m;j++){\n\t \tif(map[i][j]==2) continue;\n\t \tif(j==1||map[i][j-1]==2) id++;\n\t \tline[i][j]=id;\n\t }\n\t int tt=id;\n\tfor(re int i=1;i<=m;i++)\n\t for(re int j=1;j<=n;j++){\n\t \tif(map[j][i]==2) continue;\n\t \tif(j==1||map[j-1][i]==2) id++;\n\t \trow[j][i]=id; \n\t}\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=m;j++)\n\t if(map[i][j]==0)\n\t add(line[i][j],row[i][j],1,i,j);\n\ts=0;t=id+1;\n\tfor(re int i=1;i<=tt;i++)\n\tadd(s,i,1,0,0);\n\tfor(re int i=tt+1;i<=id;i++)\n\tadd(i,t,1,0,0);\n\tcout<<dinic()<<endl;\n\tfor(re int i=1;i<=n;i++)\n\t for(re int j=1;j<=m;j++){\n\t \tint u=line[i][j];\n\t \tif(u&&!b[u]){\n\t \t\tfor(re int i=head[u];i!=-1;i=edge[i].nxt){\n\t \t\t\tif(edge[i^1].w!=0&&edge[i].to!=s)\n\t \t\t\tout[++nm].x=edge[i].x,out[nm].y=edge[i].y;\n\t\t\t }\n\t\t\t b[u]=1;\n\t\t }\n\t }\n\tsort(out+1,out+1+nm,cmp);\n\tfor(re int i=1;i<=nm;i++)\n\tcout<<out[i].x<<\" \"<<out[i].y<<endl;\n}\n```",
        "postTime": 1521509403,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1263 \u3010\u5bab\u5ef7\u5b88\u536b\u3011"
    }
]