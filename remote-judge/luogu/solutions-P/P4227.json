[
    {
        "content": "\u70b9\u6b64\u4f7f\u7528\u66f4\u4f73 [$\\huge{\\texttt{My Blog}}$](https://www.lu-anlai.com/oi/solution/tsinghua-2017-d4t1/)\u3002\n\n\u4e00\u9053**\u8be1\u5f02**\u7684 \u8ba1\u7b97\u51e0\u4f55 \u7684\u9898\u76ee\uff0c\u5149\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u5b83\u7684\u8be1\u5f02\u3002\n\n\u9898\u76ee\u94fe\u63a5\uff1a[Luogu P4227](https://www.luogu.com.cn/problem/P4227)/[LibreOJ 2329](https://loj.ac/problem/2329)/[UOJ 344](http://uoj.ac/problem/344)/\u6e05\u534e\u96c6\u8bad2017 D4T1\u3002\n\n# \u9898\u76ee\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u4e5d\u6761\u53ef\u601c\u662f\u4e00\u4e2a\u8d2a\u73a9\u7684\u5973\u5b69\u5b50\u3002\n\n\u8fd9\u5929\u5979\u5728\u4e00\u5835\u5899\u9489\u4e86 $n$ \u4e2a\u9489\u5b50\uff0c\u7b2c $i$ \u4e2a\u9489\u5b50\u7684\u5750\u6807\u662f $(x_i,y_i)$\u3002\u63a5\u7740\u5979\u53c8\u5728\u5899\u4e0a\u9489\u4e0a\u4e86 $m$ \u6839\u7ef3\u5b50\uff0c\u7ef3\u5b50\u7684\u4e00\u7aef\u662f\u70b9 $s_i(sx_i,sy_i)$\uff0c\u7ef3\u5b50\u7ecf\u8fc7\u70b9 $t_i(tx_i,ty_i)$\uff0c\u540c\u65f6\u7ef3\u5b50\u7684\u957f\u5ea6\u662f $L_i$\u3002\u5176\u4e2d $s_i$ \u70b9\u662f\u7c98\u5728\u5899\u4e0a\u7684\uff0c\u800c\u53e6\u4e00\u4e2a\u7aef\u70b9\u662f\u53ef\u4ee5\u79fb\u52a8\u7684\u3002\u521d\u59cb\u60c5\u51b5\u4e0b\u7ef3\u5b50\u662f\u7d27\u7ef7\u7684\u4e00\u6761\u76f4\u7ebf\u6bb5\u3002\n\n\u63a5\u7740\uff0c\u5bf9\u6bcf\u4e00\u6839\u7ef3\u5b50\u53ef\u601c\u90fd\u8fdb\u884c\u4e86\u4e00\u6b21\u6e38\u620f\u3002\u5728\u7b2c $i$ \u6b21\u6e38\u620f\u4e2d\uff0c\u53ef\u601c\u4f1a\u634f\u7740\u7b2c $i$ \u6839\u7ef3\u5b50\u7684\u6d3b\u52a8\u7aef\u70b9\u8fdb\u884c\u987a\u65f6\u9488\u79fb\u52a8\uff0c\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u6bcf\u65f6\u6bcf\u523b\u7ef3\u5b50\u90fd\u662f\u7d27\u7ef7\u7684\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u7ef3\u5b50\u6bcf\u65f6\u6bcf\u523b\u90fd\u5728\u4ee5\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u5706\u5fc3\u4f5c\u987a\u65f6\u9488\u7684\u5706\u5468\u8fd0\u52a8\u3002\u521d\u59cb\u60c5\u51b5\u4e0b\u5706\u5fc3\u662f\u7ef3\u5b50\u7684\u56fa\u5b9a\u7aef\u70b9 $s$\uff0c\u4f46\u662f\u5728\u8fd0\u52a8\u7684\u8fc7\u7a0b\u4e2d\u5706\u5fc3\u53ef\u80fd\u4f1a\u4e0d\u65ad\u53d1\u751f\u53d8\u5316\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![TsingHua-2017-D4T1.jpg](https://www.lu-anlai.com/wp-content/uploads/2020/04/TsingHua-2017-D4T1.jpg)\n\n\u56fe\u4e2d\u5de6\u4fa7\u7ea2\u70b9\u4e3a\u9489\u5b50\u6240\u5728\u7684\u70b9\uff0c\u53f3\u4fa7\u7ea2\u70b9\u4e3a\u7ef3\u5b50\u7684\u56fa\u5b9a\u7aef\u70b9\uff0c\u5176\u4ed6\u989c\u8272\u7684\u70b9\u4e3a\u865a\u62df\u70b9\uff0c\u6d3b\u52a8\u7aef\u70b9\u4e3a\u7d2b\u70b9\uff1b\u7ef3\u5b50\u4ece\u7d2b\u70b9\u5f00\u59cb\u8fd0\u52a8\uff0c\u5728\u8fd0\u884c\u5230\u84dd\u70b9\u65f6\u7ef3\u5b50\u7ed5\u4e0a\u5de6\u4fa7\u7ea2\u70b9\u7684\u9489\u5b50\uff0c\u56e0\u6b64\u6d3b\u52a8\u7aef\u70b9\u66f4\u6362\u4e86\u5706\u5fc3\u548c\u534a\u5f84\uff0c\u7ee7\u7eed\u4f5c\u987a\u65f6\u9488\u7684\u5706\u5468\u8fd0\u52a8\u3002\u63a5\u7740\u6d3b\u52a8\u7aef\u70b9\u4f1a\u8fd0\u884c\u5230\u7eff\u70b9\uff0c\u5e76\u4e14\u63a5\u4e0b\u6765\u6d3b\u52a8\u7aef\u70b9\u4f1a\u4e00\u76f4\u7ed5\u5de6\u4fa7\u9489\u5b50\u4e0d\u505c\u5730\u505a\u5706\u5468\u8fd0\u52a8\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u7ef3\u5b50\u7684\u8fd0\u52a8\u662f\u4e0d\u4f1a\u505c\u6b62\u7684\uff0c\u56e0\u6b64\u53ef\u601c\u5728\u5979\u611f\u89c9\u7d2f\u4e86\u4e4b\u540e\u5c31\u4f1a\u505c\u4e0b\u6765\u3002\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u597d\u5947\u5fc3\u6ee1\u6ee1\u7684\u5973\u5b69\u5b50\uff0c\u53ef\u601c\u51b3\u5b9a\u5bf9\u6bcf\u4e00\u6839\u7ef3\u5b50\u8ba1\u7b97\u4e00\u4e0b\u5982\u679c\u7ef3\u5b50\u65e0\u9650\u7684\u8fd0\u884c\u4e0b\u53bb\uff0c\u90a3\u4e48\u5b83\u7684\u5706\u5fc3\u4f1a\u5207\u6362\u591a\u5c11\u6b21\uff08\u5305\u62ec\u521d\u59cb\u7684\u5706\u5fc3\uff09\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u6570\u503c\u4e00\u5b9a\u662f\u6709\u9650\u7684\u3002\n\n\u8fd9\u91cc\u5bf9\u6e38\u620f\u8fc7\u7a0b\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5047\u8bbe\u6765\u7b80\u5316\u95ee\u9898\uff1a\n\n1. \u6d3b\u52a8\u7aef\u70b9\u5728\u8fd0\u52a8\u7684\u8fc7\u7a0b\u4e2d\u8ddd\u79bb\u6bcf\u4e00\u4e2a\u9489\u5b50\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u59cb\u7ec8\u5927\u4e8e\u7b49\u4e8e $9\\times 10^{-4}$\u3002\n2. \u9489\u5b50\u7684\u5750\u6807\u4e24\u4e24\u4e0d\u540c\u4f46\u53ef\u80fd\u6709\u591a\u70b9\u5171\u7ebf\u3002\n3. \u9489\u5b50\u7684\u4f53\u79ef\u4ee5\u53ca\u7ef3\u5b50\u7684\u4f53\u79ef\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u5728\u6e38\u620f\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u4e00\u6bb5\u7ef3\u5b50\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\u3002\n4. \u521d\u59cb\u60c5\u51b5\u4e0b\u7ef3\u5b50\u8ddd\u79bb\u6bcf\u4e00\u4e2a\u9489\u5b50\u7684\u6700\u8fd1\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5927\u4e8e\u7b49\u4e8e $9\\times 10^{-4}$\u3002\n5. \u6bcf\u4e00\u6839\u7ef3\u5b50\u521d\u59cb\u7c98\u7740\u7684\u7aef\u70b9\u4e0d\u4f1a\u5f71\u54cd\u7ef3\u5b50\u7684\u8fd0\u52a8\uff0c\u5373\u7ef3\u5b50\u4e0d\u4f1a\u7ed5\u56de\u7aef\u70b9\u4e0a\u3002\n\n## \u6570\u636e\u8303\u56f4\n\n|\u53d8\u91cf|\u53d6\u503c\u8303\u56f4|\n|:-:|:-:|\n|$n$|$\\leq 500$|\n|$m$|$\\leq 500$|\n|$T$|$\\leq 10$|\n|\u6240\u6709\u5750\u6807\u7684\u7edd\u5bf9\u503c|$\\leq 10^4$|\n\n## \u65f6\u7a7a\u9650\u5236\n\n|\u9898\u76ee|\u65f6\u95f4\u9650\u5236|\u7a7a\u95f4\u9650\u5236|\n|:-:|:-:|:-:|\n|[Luogu P4227](https://www.luogu.com.cn/problem/P4227)|$6-10\\text{s}$|$500\\text{MiB}$|\n|[LibreOJ 2329](https://loj.ac/problem/2329)|$10\\text{s}$|$512\\text{MiB}$|\n|[UOJ 344](http://uoj.ac/problem/344)|$10\\text{s}$|$512\\text{MiB}$|\n|\u6e05\u534e\u96c6\u8bad2017 D4T1|$10\\text{s}$|$512\\text{MiB}$|\n\n# \u9898\u89e3\n\n~~\u4f60\u770b\u5230\u8fd9\u9053\u9898\u76ee\u7684\u7b2c\u4e00\u4e2a\u8bcd\uff08\u4e5d\u6761\u53ef\u601c\uff09\u5c31\u5e94\u8be5\u77e5\u9053\u51fa\u9898\u4eba\u662f\u8c01\u4e86\uff0c\u7136\u540e\u9009\u62e9\u653e\u5f03\u3002~~\n\n\u672c\u9898\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u65f6\u95f4\u6548\u7387\u5dee\u8ddd\u6781\u5927\uff08\u7ea6 $30$ \u500d\uff09\uff0c\u4e0d\u8fc7\u4e24\u79cd\u505a\u6cd5\u5e76\u65e0\u672c\u8d28\u5dee\u522b\uff0c\u53ea\u662f\u6700\u540e\u89e3\u51b3\u65b9\u6cd5\u4e0d\u540c\uff0c\u4e0b\u9762\u4e3b\u8981\u8bb2\u601d\u8def\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u66b4\u529b\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u7ef3\u5b50\u662f\u987a\u65f6\u9488\u65cb\u8f6c\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6781\u89d2\u51cf\u5c0f\u7684\u8fc7\u7a0b\uff08\u4e0d\u8003\u8651\u8f6c\u5b8c\u4e00\u5708\u65f6\u4e2d\u95f4\u7684\u4ece $-\\pi\\to\\pi$ \u7684\u7a81\u53d8\uff0c\u8fd9\u4e2a\u7279\u6b8a\u8003\u8651\uff0c\u4e0b\u6587\u4e0d\u7279\u6b8a\u4ecb\u7ecd\uff09\u3002\n\n\u5173\u4e8e\u65cb\u8f6c\u7684\u64cd\u4f5c\u7528\u6781\u5750\u6807\u4e00\u822c\u66f4\u4e3a\u65b9\u4fbf\uff08\u522b\u8ddf\u6211\u8bf4\u4f60\u8981\u7528\u4ec0\u4e48 $ax+by$ \u53d8\u6362\uff09\uff0c\u8bbe\u5f53\u524d\u7ef3\u5b50\u6b63\u5728\u4ee5\u70b9 $A$ \u4e3a\u8f74\u8f6c\u52a8\uff0c\u4ee5\u70b9 $A$ \u4e3a\u6781\u70b9\uff0c\u6c34\u5e73\u65b9\u5411\u4e3a\u6781\u8f74\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\u3002\n\n**\u7ef3\u5b50\u4ec5\u4f1a\u88ab\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u89d2\u5ea6\u7684\u6700\u5927\u6781\u89d2\uff0c\u6781\u5f84\u5c0f\u4e8e\u7b49\u4e8e\u7ef3\u957f\u800c\u53c8\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u963b\u788d\u5230\u3002**\n\n\u5c31\u50cf\u8fd9\u5f20\u56fe\u91cc\u7684\u4f8b\u5b50\uff1a\n\n![TsingHua-2017-D4T1-Z1.png](https://www.lu-anlai.com/wp-content/uploads/2020/04/TsingHua-2017-D4T1-Z1.png)\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5f00\u59cb\uff0c\u5c06\u5468\u56f4\u7684 $n-1$ \u4e2a\u70b9\uff0c\u6309\u6781\u89d2\u6392\u5e8f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5229\u7528\u6781\u89d2\u7684\u5355\u8c03\u6027\u4e8c\u5206\u5f97\u51fa\u4e0b\u4e00\u4e2a\u65cb\u8f6c\u8f74\u7684\u5e8f\u53f7\uff0c\u7ee7\u800c\u9012\u63a8\u4e0b\u53bb\u3002\u8fd9\u6837\u5355\u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(n\\log_2n+\\log_2n)$\u3002\n\n\u4e0b\u9762\u8003\u8651\u4f18\u5316\u3002\n\n\u5f53\u7136\uff0c**\u5bf9\u4e8e\u5df2\u7ecf\u7ed9\u5b9a\u7684\u6bcf\u4e2a\u70b9\uff0c\u5b83\u5468\u56f4\u7684 $n-1$ \u4e2a\u70b9\u662f\u59cb\u7ec8\u4e0d\u53d8\u7684**\uff08\u9898\u76ee\uff1a\u6bcf\u4e00\u6839\u7ef3\u5b50\u521d\u59cb\u7c98\u7740\u7684\u7aef\u70b9\u4e0d\u4f1a\u5f71\u54cd\u7ef3\u5b50\u7684\u8fd0\u52a8\uff0c\u5373\u7ef3\u5b50\u4e0d\u4f1a\u7ed5\u56de\u7aef\u70b9\u4e0a\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u9884\u5904\u7406**\u51fa\u8fd9\u4e9b\u4e1c\u897f\uff0c\u9632\u6b62\u6bcf\u6b21\u751f\u6210\u6d6a\u8d39\u65f6\u95f4\u3002\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u53d8\u4e3a $\\Theta(\\log_2n)$\uff0c\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(n^2+n^2\\log_2n)$\u3002\n\n\u8003\u8651\u67e5\u8be2\u6b21\u6570\uff0c\u53d1\u73b0\u6bcf\u6b21\u8f6c\u6298\uff0c\u90fd\u4f1a\u4f7f\u5f97\u7ef3\u5b50\u957f\u5ea6\u51cf\u5c0f\uff0c\u800c\u7ef3\u5b50\u957f\u5ea6\u5c0f\u4e8e $1$ \u65f6\u5fc5\u7136\u65e0\u6cd5\u8f6c\u6298\uff0c\u56e0\u4e3a\u6574\u70b9\u7684\u5750\u6807\u8ddd\u79bb\u81f3\u5c11\u4e3a $1$\u3002**\u5b9e\u9645\u5224\u65ad\u662f\u5426\u65e0\u9650\u5faa\u73af\u65f6\u53ea\u8981\u5224\u65ad\u5f53\u524d\u7ef3\u957f $L$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e \u5230\u5176\u4ed6\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u5373\u53ef\u3002**\n\n\u6240\u4ee5\u6700\u574f\u7684\u60c5\u51b5\u662f\u4e24\u4e2a\u8ddd\u79bb\u4e3a $1$ \u7684\u70b9\uff0c\u7ef3\u5b50\u5728\u4e0a\u9762\u53cd\u590d\u6a2a\u8df3\uff0c**\u5f53 $L$ \u5f88\u5927\u65f6\uff0c\u65f6\u95f4\u6548\u7387\u4f1a\u5f53\u573a\u7206\u70b8\u3002**\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c**\u7ef3\u5b50\u5728\u53cd\u590d\u6a2a\u8df3\u7684\u65f6\u5019\uff0c\u7ecf\u8fc7\u7684\u7ed3\u70b9\u7f16\u53f7\u51fa\u73b0\u4e86\u5faa\u73af\u8282**\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f18\u5316\u6389\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u671f\u671b\u7684\u8f6c\u6298\u6b21\u6570\u4e3a $\\Theta(\\log_2L)$\uff0c\u5904\u7406\u5355\u7ec4\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n+n^2+m(\\log_2L+\\log_2n))$\n\n\u4e0b\u9762\u4e24\u79cd\u505a\u6cd5\u5f00\u59cb\u4f53\u73b0\u4ed6\u4eec\u7684\u4e0d\u540c\u3002\n\n### \u505a\u6cd5\u4e00\n\n> \u6765\u81ea https://www.cnblogs.com/xiao-ju-ruo-xjr/p/8058382.html \uff0c\u597d\u50cf\u6d1b\u8c37\u4e0a\u8fd8\u6709\u4e00\u7bc7\u9898\u89e3\u5c31\u662f\u8f6c\u8f7d\u8fd9\u4e2a\u7684\u3002\n\n> \u8003\u8651\u7528\u9884\u5904\u7406\u7684\u65b9\u5f0f\u4f18\u5316\u3002\u6211\u4eec\u4ee4 $A(x,y,z)$ \u8868\u793a\u8f74\u5fc3\u5728\u70b9 $x$\uff0c\u65b9\u5411\u6307\u5411\u70b9 $y$\uff0c\u5f53\u957f\u5ea6\u4e3a $z$ \u7684\u65f6\u5019\u6070\u597d\u53ef\u4ee5\u8d70\u5230\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7f16\u53f7\u3002\u90a3\u4e48\u9884\u5904\u7406\u7684\u65f6\u5019\u6211\u4eec\u5148\u679a\u4e3e\u70b9 $x$\uff0c\u7136\u540e\u4ee5 $x$ \u4e3a\u539f\u70b9\u6781\u89d2\u6392\u5e8f\uff0c\u63a5\u4e0b\u6765\u4e00\u904d $\\Theta(n^2)$ \u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\u3002\u90a3\u4e48\u5728\u8be2\u95ee\u65f6\u53ea\u9700\u8981\u4e8c\u5206\u4e00\u4e0b\u6781\u89d2\uff0c\u7136\u540e\u518d\u4e8c\u5206\u4e00\u4e0b\u957f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u5728 $\\Theta(\\log_2n)$ \u7684\u65f6\u95f4\u5185\u627e\u5230\u4e0b\u4e00\u4e2a\u70b9\u4e86\u3002\n\n\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u53bb\u770b\u4ee3\u7801\uff0c\u771f\u7684\u662f\u5199\u5f97\u8ba9\u4eba\u611f\u5230\u751f\u547d\u5df2\u5982\u98ce\u4e2d\u6b8b\u70db\uff0c\u5e76\u4e14\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\uff0c\u5927\u5bb6\u8c28\u614e\u9605\u8bfb\u3002~~\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u77e5\u9053\uff0c\u56e0\u4e3a\u6211\u4e5f\u662f\u8fd9\u4e48\u5199\u7684\uff09~~\n\n\u8fd9\u79cd\u505a\u6cd5\u5c06\u957f\u5ea6\u5355\u8c03\u9012\u589e\u65f6\u7684\u6bcf\u4e00\u4e2a\u9636\u6bb5\u90fd\u5212\u5206\u5f00\u6765\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(n^3)$\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $n^3$\uff0c**\u80af\u5b9a\u4f1a\u88ab\u5361**\uff0c\u5e76\u4e14\u9884\u5904\u7406\u548c\u67e5\u8be2\u7684\u6548\u7387\u53ca\u5176\u4f4e\u4e0b\uff0c\u4ee3\u7801\u8fd8\u6bd4\u8f83\u957f\uff0c\u4e0d\u63a8\u8350\u3002\n\n### \u505a\u6cd5\u4e8c\n\n\u6539\u8fdb\u9884\u5904\u7406\uff0c\u4fdd\u5b58\u6bcf\u4e2a\u70b9\u7684\u5468\u56f4\u70b9\u7684\u6570\u636e\uff08\u6781\u89d2\u3001\u6781\u5f84\u3001\u4e0b\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7\uff09\uff0c\u5e76**\u4ee5\u6781\u89d2\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u6781\u5f84\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f**\uff08$\\Theta(n^2+n^2\\log_2n)$\uff09\u3002\n\n\u5c06\u67e5\u8be2\u65f6\u7684\u4e8c\u5206\u6539\u8fdb\u4e00\u4e0b\uff0c\u6392\u5e8f\u65f6\u52a0\u5165\u3002\u76f4\u63a5\u5bf9\u89d2\u5ea6\u8fdb\u884c\u4e8c\u5206\uff0c\u753b\u56fe\u53ef\u77e5\uff0c**\u8f6c\u6298\u70b9\u6392\u5e8f\u540e\u8ddd\u79bb\u4e8c\u5206\u7ed3\u679c\u70b9\u5e94\u8be5\u4e0d\u8fdc**\uff0c\u4e14\u5927\u90e8\u5206\u7f16\u53f7\u90fd\u5c0f\u4e8e\u4e8c\u5206\u7ed3\u679c\uff0c\u6700\u574f\u7684\u7ed3\u679c\u662f\u8981\u904d\u5386\u5b8c $n$ \u4e2a\u70b9\uff0c\u4f46\u662f**\u6839\u636e\u7384\u5b66\u7684\u52bf\u80fd\u5206\u6790\u6cd5\u53ef\u4ee5\u5f97\u51fa\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a $\\Theta(\\log_2n)$**\u3002\n\n\u6b64\u5916\uff0c\u4e0a\u4e00\u79cd\u505a\u6cd5\u5224\u65ad\u5faa\u73af\u8282\u65f6\u7ecf\u5e38\u521d\u59cb\u5316\u5927\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(Tmn^2)$\uff0c\u5176\u5b9e\u76f4\u63a5\u7528 `int` \u6807\u8bb0\uff08\u7b2c\u51e0\u6b21\u67e5\u8be2\u65f6\u662f\u5426\u7ecf\u8fc7\uff09\u4ee3\u66ff `bool` \u6807\u8bb0\uff08\u5f53\u524d\u67e5\u8be2\u662f\u5426\u7ecf\u8fc7\uff09\u5373**\u8282\u7701\u521d\u59cb\u5316\u6570\u7ec4\u7684\u65f6\u95f4**\u3002\n\n## \u4ee3\u7801\n\n\u663e\u7136\u662f\u7b2c\u4e8c\u79cd\u505a\u6cd5\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define INF 1e9 //\u5b9a\u4e49\u6b63\u65e0\u7a77\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nstatic char buf[100000],*p1=buf,*p2=buf;\ninline int read(void){\n\treg bool f=false;\n\treg char ch=getchar();\n\treg int res=0;\n\twhile(ch<'0'||'9'<ch)f|=(ch=='-'),ch=getchar();\n\twhile('0'<=ch&&ch<='9')res=10*res+ch-'0',ch=getchar();\n\treturn f?-res:res;\n}\n\nconst long double eps=1e-8; //eps \u5224\u5b9a\u6d6e\u70b9\u6570\u7528\n\ninline int sgn(reg double x){ //\u7b26\u53f7\u51fd\u6570\n\tif(fabs(x)<eps)\n\t\treturn 0;\n\telse if(x>0)\n\t\treturn 1;\n\telse\n\t\treturn -1;\n}\n\nconst int MAXN=500+5; //\u6570\u636e\u8303\u56f4\n\ninline void Read(void);\ninline void Work(void);\n\nint main(void){\n\treg int T=read();\n\twhile(T--){\n\t\tRead();\n\t\tWork();\n\t}\n\treturn 0;\n}\n\nstruct Node{\n\tint x,y;\n\tinline void Read(void){\n\t\tx=read(),y=read();\n\t\treturn;\n\t}\n};\n\ninline double GetDis(const Node& a,const Node& b){ //\u5750\u6807\u5dee\u503c\u7684\u4e58\u79ef\u4e0d\u4f1a\u7206 int\uff0c\u4e0d\u7528\u5f3a\u5236\u8f6c\u6362\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\ninline double GetAng(const Node& a,const Node& b){ //\u6c42\u6781\u89d2\n\treturn atan2(b.y-a.y,b.x-a.x);\n}\n\nint n,m;\nNode nail[MAXN]; //\u9489\u5b50\n\ninline void Read(void){ //\u8bfb\u5165\u51fd\u6570\n\tn=read(),m=read();\n\tfor(reg int i=1;i<=n;++i)\n\t\tnail[i].Read();\n\treturn;\n}\n\nstruct Edge{\n\tdouble angle,length; //angle \u8868\u793a\u6781\u89d2\uff0clength \u8868\u793a\u6781\u5f84\n\tint to; //to \u8868\u793a\u7f16\u53f7\n\tinline Edge(reg double angle=0,reg double length=0,reg int to=0):angle(angle),length(length),to(to){\n\t\treturn;\n\t}\n\tinline bool operator<(const Edge& a)const{ //\u6392\u5e8f\n\t\treturn sgn(angle-a.angle)==0?sgn(length-a.length)<0:sgn(angle-a.angle)<0;\n\t}\n};\n\ndouble Min[MAXN]; //Min[i] \u8868\u793a\u70b9 i \u5230\u5176\u4ed6\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb\u662f Min[i]\nEdge C[MAXN][MAXN];\n\nint tim,vis[MAXN][MAXN]; //tim \u662f\u8868\u793a\u5f53\u524d\u662f\u7b2c\u51e0\u6b21\u67e5\u8be2\uff0cvis[i][j] \u8868\u793a\u6700\u8fd1\u4e00\u6b21\u4ece i \u5230 j \u7684\u8f6c\u6298\u53d1\u751f\u5728 vis[i][j] \u6b21\u67e5\u8be2\nint Las[MAXN][MAXN]; //\u4e0a\u4e00\u6b21\u7b54\u6848\uff08\u6c42\u5faa\u73af\u8282\u957f\u5ea6\uff09\nlong double His[MAXN][MAXN]; //\u4e2d\u9014\u7ecf\u8fc7\u7684\u8def\u7a0b\n\ninline void Solve(reg double angle,reg long double L){\n\t++tim;\n\tangle-=eps; //\u53ef\u80fd\u4f1a\u6709\u7b49\u4e8e\u7684\u60c5\u51b5\u51fa\u73b0\n\treg int ans=1,now=0;\n\twhile(sgn(L-Min[now])>=0){\n\t\treg int cnt=(now==0)?n:n-1; //\u5176\u4ed6\u70b9\u7684\u6570\u91cf\n\t\treg int l=1,r=cnt,res=-1;\n\t\twhile(l<=r){ //\u4e8c\u5206\u6c42\u7ed3\u679c\n\t\t\treg int mid=(l+r)>>1;\n\t\t\tif(sgn(C[now][mid].angle-angle)>=0){\n\t\t\t\tres=mid;\n\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tl=mid+1;\n\t\t}\n\t\tif(res==-1)\n\t\t\tres=cnt;\n\t\telse\n\t\t\tres=(res+cnt-2)%cnt+1;\n\t\treg int t=res;\n\t\twhile(sgn(L-C[now][t].length)<0)\n\t\t\tt=(t+cnt-2)%cnt+1; //\u5982\u679c\u4e0d\u884c\u5c31\u5411\u524d\u679a\u4e3e\n\t\tL-=C[now][t].length; //\u957f\u5ea6\u51cf\u5c11\n\t\tangle=C[now][t].angle; //\u89d2\u5ea6\u66f4\u65b0\n\t\treg int nxt=C[now][t].to; //\u4e0b\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7\n\t\tif(vis[now][nxt]==tim){ //\u51fa\u73b0\u5faa\u73af\n\t\t\treg long double delta=His[now][nxt]-L; //\u5faa\u73af\u8282\u7684\u8def\u7a0b\u957f\u5ea6\n\t\t\treg int cycle=floor(L/delta); //\u5faa\u73af\u591a\u5c11\u6b21\n\t\t\tans+=cycle*(ans-Las[now][nxt]+1); //\u5faa\u73af\u8282\u957f\u5ea6\n\t\t\tL-=cycle*delta; //\u957f\u5ea6\u51cf\u5c11\n\t\t}\n\t\t++ans; //\u7edf\u8ba1\u7b54\u6848\n\t\tvis[now][nxt]=tim;\n\t\tLas[now][nxt]=ans;\n\t\tHis[now][nxt]=L;\n\t\tnow=nxt; //\u66f4\u65b0\u4fe1\u606f\n\t}\n\tprintf(\"%d\\n\",ans); //\u8f93\u51fa\u7b54\u6848\n\treturn;\n}\n\ninline void Work(void){\n\tfor(reg int i=1;i<=n;++i){\n\t\treg int cnt=0;\n\t\tMin[i]=INF; //\u521d\u59cb\u5316\n\t\tfor(reg int j=1;j<=n;++j)\n\t\t\tif(i!=j){\n\t\t\t\tdouble Dis=GetDis(nail[i],nail[j]);\n\t\t\t\tC[i][++cnt]=Edge(GetAng(nail[i],nail[j]),Dis,j);\n\t\t\t\tMin[i]=min(Min[i],Dis);\n\t\t\t}\n\t\tsort(C[i]+1,C[i]+cnt+1); //\u6392\u5e8f\n\t}\n\twhile(m--){\n\t\tstatic int L;\n\t\tstatic Node s,t;\n\t\ts.Read(),t.Read(),L=read();\n\t\tnail[0]=s; //\u8d77\u70b9\u653e\u5728 [0] \u4e0a\n\t\tMin[0]=INF; //\u521d\u59cb\u5316\n\t\tfor(reg int i=1;i<=n;++i){\n\t\t\tdouble Dis=GetDis(nail[0],nail[i]);\n\t\t\tC[0][i]=Edge(GetAng(nail[0],nail[i]),Dis,i);\n\t\t\tMin[0]=min(Min[0],Dis);\n\t\t}\n\t\tsort(C[0]+1,C[0]+n+1); //\u6392\u5e8f\n\t\tSolve(GetAng(s,t),L);\n\t}\n\treturn;\n}\n```",
        "postTime": 1587356826,
        "uid": 38502,
        "name": "agicy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4227 \u3010\u6211\u7684\u751f\u547d\u5df2\u5982\u98ce\u4e2d\u6b8b\u70db\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u76f4\u63a5\uff0c\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\uff0c\u6bcf\u6b21\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u539f\u70b9\uff0c\u5c06\u6240\u6709\u70b9\u6309\u7167\u6781\u89d2\u6392\u5e8f\uff08O(nlogn)O(nlogn)\uff09\uff0c\u7136\u540e\u518d\u6839\u636e\u5f53\u524d\u6781\u89d2\u548c\u5269\u4f59\u957f\u5ea6\u66b4\u529b\u626b\u4e00\u904d\u627e\u5230\u4e0b\u4e00\u4e2a\u70b9\uff08O(n)O(n)\uff09\u3002\u7136\u540e\u6709\u53ef\u80fd\u51fa\u73b0\u5faa\u73af\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5224\u4e00\u4e0b\u5982\u679c\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u4e86\u4e24\u6b21\u5e76\u4e14\u8fd9\u4e24\u6b21\u5230\u8fbe\u8fd9\u4e2a\u70b9\u65f6\u6781\u89d2\u90fd\u4e00\u6837\uff0c\u5c31\u8868\u660e\u627e\u5230\u4e86\u4e00\u4e2a\u5faa\u73af\uff1b\u90a3\u4e48\u53ef\u4ee5\u7b97\u4e00\u4e0b\u8fd9\u4e2a\u5faa\u73af\u4f1a\u88ab\u8dd1\u591a\u5c11\u5708\uff0c\u8dd1\u5b8c\u540e\u589e\u52a0\u591a\u5c11\u6b65\u3001\u5269\u4e0b\u591a\u5c11\u957f\u5ea6\u3002\u8fd9\u6837\u505a\u603b\u5171\u4f1a\u6709 nlogLnlogL \u6b21\u8f6c\u6298\u70b9\uff08\u8003\u8651\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u5faa\u73af\u5c31\u4f1a\u4f7f\u957f\u5ea6\u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\uff0c\u5373 LL \u6700\u574f\u4e5f\u4f1a\u53d8\u6210 L2L2\uff0c\u5f53 LL \u5c0f\u4e8e 11 \u65f6\uff0c\u7531\u4e8e\u662f\u6574\u70b9\uff0c\u5c31\u4e0d\u53ef\u80fd\u518d\u78b0\u5230\u5176\u4ed6\u70b9\u4e86\uff09\uff0cmm \u7ec4\u8be2\u95ee\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 O(Tmn2logLlogn)O(Tmn2logLlogn)\uff08\u5bf9\u4e86\u8fd8\u8981\u4e58\u4e2a TT\uff09\uff0c\u7eb5\u7136\u6709 1010 \u79d2\uff0c\u4e5f\u8fc7\u4e0d\u53bb\u554a\u2026\u2026\uff08\u50cf\u6211\u8fd9\u79cd O(n3)O(n3) \u90fd\u5361\u4e86\u4e00\u5e74\u624d\u5361\u7ebf\u8fc7\u7684\u2026\u2026\uff09\n\n\u74f6\u9888\u5728\u4e8e\u6bcf\u6b21\u201c\u627e\u4e0b\u4e00\u4e2a\u70b9\u201d\u7684\u64cd\u4f5c\u592a\u8d39\u65f6\u4e86\u3002\u8003\u8651\u7528\u9884\u5904\u7406\u7684\u65b9\u5f0f\u4f18\u5316\u3002\u6211\u4eec\u4ee4 A(x,y,z)A(x,y,z) \u8868\u793a\u8f74\u5fc3\u5728\u70b9 xx\uff0c\u65b9\u5411\u6307\u5411\u70b9 yy\uff0c\u5f53\u957f\u5ea6\u4e3a zz \u7684\u65f6\u5019\u6070\u597d\u53ef\u4ee5\u8d70\u5230\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7f16\u53f7\u3002\u90a3\u4e48\u9884\u5904\u7406\u7684\u65f6\u5019\u6211\u4eec\u5148\u679a\u4e3e\u70b9 xx\uff0c\u7136\u540e\u4ee5 xx \u4e3a\u539f\u70b9\u6781\u89d2\u6392\u5e8f\uff0c\u63a5\u4e0b\u6765\u4e00\u904d O(n2)O(n2) \u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\u3002\u90a3\u4e48\u5728\u8be2\u95ee\u65f6\u53ea\u9700\u8981\u4e8c\u5206\u4e00\u4e0b\u6781\u89d2\uff0c\u7136\u540e\u518d\u4e8c\u5206\u4e00\u4e0b\u957f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u5728 O(logn)O(logn) \u7684\u65f6\u95f4\u5185\u627e\u5230\u4e0b\u4e00\u4e2a\u70b9\u4e86\u3002\n\n\u6700\u540e\u8d34\u4e0a\u6211\u53c8\u81ed\u53c8\u957f\u7684\u4ee3\u7801\u3002\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <vector>\n#include <cmath>\n#include <ctime>\nusing namespace std;\n#define rep(i, s, t) for(int i = (s); i <= (t); i++)\n#define dwn(i, s, t) for(int i = (s); i >= (t); i--)\n\nconst int BufferSize = 1 << 16;\nchar buffer[BufferSize], *Head, *Tail;\ninline char Getchar() {\n    if(Head == Tail) {\n        int l = fread(buffer, 1, BufferSize, stdin);\n        Tail = (Head = buffer) + l;\n    }\n    return *Head++;\n}\nint read() {\n    int x = 0, f = 1; char c = getchar();\n    while(!isdigit(c)){ if(c == '-') f = -1; c = getchar(); }\n    while(isdigit(c)){ x = x * 10 + c - '0'; c = getchar(); }\n    return x * f;\n}\n\n#define maxn 501\n#define LD long double\n\nconst LD eps = 1e-9;\n\nstruct Vec {\n    int x, y;\n    Vec() {}\n    Vec(int _, int __): x(_), y(__) {}\n    \n    LD operator - (const Vec& t) const {\n        return sqrt((LD)(x - t.x) * (x - t.x) + (LD)(y - t.y) * (y - t.y));\n    }\n} ps[maxn], BaseP;\n\nint n, id[maxn], nsiz[maxn][maxn], nxt[maxn][maxn][maxn], angsiz[maxn];\ndouble angle[maxn][maxn], pairAng[maxn][maxn], pairDis[maxn][maxn];\n\nint Base;\ninline bool cmp(const int& A, const int& B) {\n    Vec a = ps[A], b = ps[B];\n    LD anga = pairAng[Base][A], angb = pairAng[Base][B],\n           disa = a - ps[Base], disb = b - ps[Base];\n    return fabs(anga - angb) > eps ? anga < angb : disa > disb;\n}\ninline bool cmp2(const int& A, const int& B) {\n    Vec a = ps[A], b = ps[B];\n    LD anga = atan2(a.x - BaseP.x, a.y - BaseP.y), angb = atan2(b.x - BaseP.x, b.y - BaseP.y),\n           disa = a - BaseP, disb = b - BaseP;\n    return fabs(anga - angb) > eps ? anga < angb : disa > disb;\n}\n\nvoid init() {\n    rep(i, 1, n) id[i] = i;\n    rep(S, 1, n) rep(T, 1, n) {\n        nsiz[S][T] = 0;\n        if(S != T) pairAng[S][T] = atan2(ps[T].x - ps[S].x, ps[T].y - ps[S].y), pairDis[S][T] = ps[S] - ps[T];\n    }\n    rep(S, 1, n) {\n        Base = S;\n        sort(id + 1, id + n + 1, cmp);\n        int cnt = 0;\n        rep(T, 1, n) if(S != id[T] && (T == 1 || fabs(pairAng[S][id[T]] - pairAng[S][id[T-1]]) > eps)) {\n            angle[S][++cnt] = pairAng[S][id[T]];\n            rep(I, T + 1, n) if(id[I] != S && fabs(angle[S][cnt] - pairAng[S][id[I]]) > eps)\n                if(!nsiz[S][cnt] || pairDis[S][nxt[S][cnt][nsiz[S][cnt]-1]] > pairDis[S][id[I]]) nxt[S][cnt][nsiz[S][cnt]++] = id[I];//*/\n            rep(I, 1, n) if(id[I] != S) {\n                if(!nsiz[S][cnt] || pairDis[S][nxt[S][cnt][nsiz[S][cnt]-1]] > pairDis[S][id[I]]) nxt[S][cnt][nsiz[S][cnt]++] = id[I];\n                if(angle[S][cnt] < pairAng[S][id[I]]) break;\n            }\n        }\n        angsiz[S] = cnt;\n    }\n    return ;\n}\n\nLD atLen[maxn];\nint atTag[maxn], hasPass[maxn];\nint getAns(int p, LD ang, LD L) {\n    memset(atTag, 0, sizeof(atTag));\n    memset(hasPass, 0, sizeof(hasPass));\n    memset(atLen, 0, sizeof(atLen));\n    int tot = 1;\n    while(1) {\n        if(ang < angle[p][1]) ang = 1.0 / 0.0;\n        int dir;\n        int l = 1, r = angsiz[p] + 1;\n        while(r - l > 1) {\n            int mid = l + r >> 1;\n            if(angle[p][mid] <= ang) l = mid; else r = mid;\n        }\n        dir = l;\n        \n        l = 0; r = nsiz[p][dir] - 1;\n        while(l < r) {\n            int mid = l + r >> 1;\n            if(mid < nsiz[p][dir] - 1 && pairDis[nxt[p][dir][mid]][p] > L) l = mid + 1; else r = mid;\n        }\n        if(pairDis[nxt[p][dir][l]][p] > L) break;\n        \n        ang = pairAng[p][nxt[p][dir][l]];\n        L -= pairDis[nxt[p][dir][l]][p]; tot++;\n        p = nxt[p][dir][l];\n        if(atTag[p]) {\n            int cyc = (int)(L / (atLen[p] - L));\n            tot += (tot - atTag[p]) * cyc;\n            L -= (atLen[p] - L) * cyc;\n        }\n        if(hasPass[p]) atTag[p] = tot, atLen[p] = L;\n        else hasPass[p] = 1;\n    }\n    return tot;\n}\n\nvoid work() {\n    n = read(); int q = read();\n    rep(i, 1, n) {\n        int x = read(), y = read();\n        ps[i] = Vec(x, y);\n    }\n    init();\n    while(q--) {\n        int sx = read(), sy = read(), tx = read(), ty = read(), L = read();\n        Vec s(sx, sy), t(tx, ty);\n        LD ang = atan2(t.x - s.x, t.y - s.y);\n        BaseP = Vec(sx, sy);\n        sort(id + 1, id + n + 1, cmp2);\n        bool has = 0;\n        rep(I, 1, n) {\n            Vec i = ps[id[I]];\n            LD nang = atan2(i.x - s.x, i.y - s.y);\n            if(nang >= ang && L > i - s){ printf(\"%d\\n\", getAns(id[I], nang, L - (i - s)) + 1); has = 1; break; }\n        }\n        if(!has) {\n            ang = -1.0 / 0.0;\n            rep(I, 1, n) {\n                Vec i = ps[id[I]];\n                LD nang = atan2(i.x - s.x, i.y - s.y);\n                if(nang >= ang && L > i - s){ printf(\"%d\\n\", getAns(id[I], nang, L - (i - s)) + 1); has = 1; break; }\n            }\n        }\n        if(!has) puts(\"1\");\n    }\n    return ;\n}\n\nint main() {\n    int T = read();\n    while(T--) work();\n    \n    return 0;\n}\n```",
        "postTime": 1523166659,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4227 \u3010\u6211\u7684\u751f\u547d\u5df2\u5982\u98ce\u4e2d\u6b8b\u70db\u3011"
    }
]