[
    {
        "content": "### \u67d0\u8ba1\u6570\u9898\u9898\u89e3\n\n\u672c\u6587\u5185\u5bb9\u76ee\u5f55:\n- ~~\u626f\u6de1~~\n- \u6709\u6807\u53f7\u65e0\u6839\u6811\u8ba1\u6570\u7684\u91cd\u8981\u5de5\u5177:prufer\u5e8f\u5217\n- \u7b80\u5355\u7684\u9012\u63a8\u5f0f\n- \u77e5\u9053\u5565\u662f\u591a\u9879\u5f0f/\u5565\u662f\u7ec4\u5408\u6570\u7684\u670b\u53cb\u5c31\u80fd\u770b\u61c2\u7684\u63a8\u5bfc\n- \u4ee3\u7801\u5b9e\u73b0\n\n---\n\n\n~~qwq,\u9a6c\u4e0a\u7701\u9009\u6211\u624d\u505a\u4e86\u7b2c\u4e00\u4e2a\u591a\u9879\u5f0f\u8ba1\u6570\u9898~~\n\n~~\u8868\u793a\u840c\u65b0afoier spinach\u5728\u6b64\u5bf9\u4e00\u76f4\u5e26\u6211\u73a9\u7684\u5404\u4f4ddalao\u8868\u793a\u8877\u5fc3\u611f\u8c22.~~\n\n---\n\n\u9898\u76ee\u610f\u601d:  \n\u6c42n\u70b9,\u6709\u6807\u53f7,\u65e0\u6839\u6811,$max_{x\\in T}(deg_x)=m$\u7684\u56fe\u8ba1\u6570.  \n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e2a\u7528\u4e8e\u65e0\u6839\u6811\u8ba1\u6570\u7684\u5de5\u5177.[prufer sequence](https://en.wikipedia.org/wiki/Pr\u00fcfer_sequence).(\u4e0d\u4f1a\u6253\u90a3\u4e2a\u5b57\u7b26\u7528u\u4ee3\u66ff\u4e86...).  \n\u8fd9\u662f\u4e00\u4e2a\u5efa\u7acb\u5728 \u6709\u6807\u53f7\u65e0\u6839\u6811 \u548c \u6570\u5217 \u4e4b\u95f4\u7684\u4e00\u4e00\u6620\u5c04.  **\u5177\u4f53\u8bf4:\u4e00\u4e2an\u70b9\u6709\u6807\u53f7\u65e0\u6839\u6811,\u548c\u4e00\u4e2a\u957f\u5ea6\u4e3an-2,\u6240\u6709\u5143\u7d20\u90fd\u5728[1,n]\u5185\u7684\u6570\u5217\u6709\u552f\u4e00\u5bf9\u5e94\u5173\u7cfb**.  \n\n\n~~\u5f53\u7136\u8fd9\u4e9b\u90fd\u4e0d\u91cd\u8981~~\n\n\u901a\u8fc7\u5206\u6790\"\u6709\u6807\u53f7\u65e0\u6839\u6811 \u8f6c prufer sequence\u7684\u7b97\u6cd5\",\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u6709\u7528\u7684\u6027\u8d28:**x\u5728\u6811\u4e2d\u7684\u5ea6\u6570\u7b49\u4e8e\u5728prufer\u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570+1**,$deg(x)_{\\text{ tree}}=count(x)_{\\text{prufer sequence}}+1$\n\n\n-----\n\n\u56de\u5230\u672c\u9898,\u8fd9\u662f\u4e00\u4e2a\u94a6\u5b9a\u6700\u5927\u5ea6\u6570(\u5373\u51fa\u73b0\u6b21\u6570)\u7684\u5e8f\u5217\u8ba1\u6570\u95ee\u9898...\u4ecd\u7136\u4e0d\u592a\u597d\u505a,\u4f46\u662f\u6240\u6709\u5ea6\u6570(\u51fa\u73b0\u6b21\u6570)\u90fd\u4e0d\u8d85\u8fc7$m$\u7684\u5e8f\u5217\u8ba1\u6570\u662f\u597d\u505a\u7684. \u800c\u4e14$\\leq m$\u548c$\\leq m+1$\u76f8\u5dee\u7684\u90e8\u5206\u5373\u4e3a$max(deg_x)=m+1$\u7684\u6570\u91cf.  \n\n\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u8fd9\u6837**\u5143\u7d20\u90fd\u5728[1,n]\u4e2d,\u957f\u5ea6\u4e3an-2,\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7m\u7684\u5e8f\u5217\u8ba1\u6570**.\n\n\n\u6211\u4eec\u53ef\u4ee5\u4f9d\u9760 \u5957\u8def/\u76f4\u89c9/\u4e71\u641e \u5199\u51fa\u4e00\u4e2aDP\u7684\u8ba1\u6570\u73a9\u6cd5.\n\n$f_{x,len}$\u8868\u793a\u957f\u5ea6\u4e3a$len$,\u5143\u7d20\u90fd\u5728[1,x]\u5185,\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7$m$\u7684\u5e8f\u5217\u8ba1\u6570.  \u9012\u63a8\u5f0f\u7684\u8bdd\u679a\u4e3e$x$\u7684\u51fa\u73b0\u6b21\u6570\u5373\u53ef. \n$$f_{x,len}=\\sum_{i=0}^{min(len,m)}\\binom{len}{i}f_{x-1,len-i}$$\n\u8fd9\u4e2a\u5f0f\u5b50\u7684\u7ec4\u5408\u610f\u4e49\u662f.\u8003\u8651$x$\u51fa\u73b0\u6b21\u6570\u4e3a$i$,\u4e4b\u524d\u7684\u5143\u7d20\u6784\u6210\u4e86\u957f\u5ea6\u4e3a$len-i$\u7684\u5e8f\u5217,\u6211\u4eec\u5411\u5176\u4e2d\u63d2\u5165\u4e00\u79cd\u4ece\u672a\u51fa\u73b0\u8fc7\u7684\u5143\u7d20$x$,\u5171\u63d2\u5165$i$\u6b21,\u80fd\u5f97\u5230\u591a\u5c11\u4e0d\u540c\u7684\u5e8f\u5217.  \n$len-i$\u4e2a\u5143\u7d20,\u5c06\u4f1a\u6709$len-i+1$\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u63d2\u5165$x$(\u9996\u5c3e\u548c\u4e24\u4e24\u4e4b\u95f4).\u8003\u8651\u6bcf\u4e2a\u4f4d\u7f6e\u63d2\u5165\u7684$x$\u662f$x_i$\u4e2a.\u90a3\u4e48$\\sum_{j=1}^{len-i+1}x_j=i,(x_j\\geq0)$\u5373\u4e0d\u5b9a\u65b9\u7a0b\u975e\u8d1f\u6574\u6570\u89e3\u8ba1\u6570,\u505a\u4ee3\u6362$y_i=x_i+1$\u8f6c\u5316\u6210\u4e0d\u5b9a\u65b9\u7a0b\u6b63\u6574\u6570\u89e3.$\\sum_{j=1}^{len-i+1}y_j=i+len-i+1=len+1$.\u518d\u6b21\u8003\u8651\u7ec4\u5408\u610f\u4e49,\u5c06$len+1$\u4e2a\u5b8c\u5168\u4e00\u81f4\u7684\u7403\u6392\u6210\u4e00\u5217,\u63d2\u5165$len-i$\u4e2a\u9694\u677f(\u4e0d\u80fd\u63d2\u5165\u5934\u5c3e,\u5171len\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u63d2\u5165),\u4e24\u4e24\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u7403,\u5206\u6210$len-i+1$\u7ec4\u7684\u65b9\u6848\u8ba1\u6570.\u5373\u4e3a$\\binom{len}{len-i}=\\binom{len}{i}$\n\n\n---\n\n\n\u4e0a\u9762\u7684\u65b9\u7a0b,\u8ba9\u6211\u4eec\u5f97\u5230\u4e86$O(n^3)$\u7684\u505a\u6cd5,\u89c2\u5bdf\u65b9\u7a0b\u91cc\u9762\u4e00\u5806$len-i,i$\u611f\u89c9\u80af\u5b9a\u6709\u5377\u79ef.\u8fd9\u65f6\u8bb0\u4f4f\u5957\u8def**\u7ec4\u5408\u6570\u62c6\u6210\u9636\u4e58,\u770b\u4e0b\u6807\u5206\u914d\u7ed9\u4e0d\u540c\u9879**  \n\u5177\u4f53\u5730\n\n$$f_{x,len}=\\sum_{i=0}^{min(len,m)}\\binom{len}{i}f_{x-1,len-i}$$\n\n$$f_{x,len}=\\sum_{i=0}^{min(len,m)}\\frac{len!}{i!(len-i)!}f_{x-1,len-i}$$\n\n$$\\frac{f_{x,len}}{len!}=\\sum_{i=0}^{min(len,m)}\\frac{f_{x-1,len-i}}{(len-i)!}\\frac{1}{i!}$$\n\n\n$$let\\,F_x[len]=\\frac{f_{x,len}}{len!}\\quad G[i]=\\frac{1}{i!},H[i]=G[i][i\\leq m]$$\n\n$$F_x[len]=\\sum_{i=0}^{min(len,m)}F_{x-1}[len-i]G[i]=\\sum_{i=0}^{len}F_{x-1}[len-i]H[i]$$\n\n\n$$F_x=F_{x-1}*H$$\n\n\u6211\u4eec\u53d1\u73b0\u5377\u4e00\u6b21$H$\u5c31\u662f\u6279\u91cf\u8f6c\u79fb\u4e00\u6b21,\u6bcf\u6b21\u4f7f\u7528\u7684$H$\u90fd\u4e00\u6837,\u5377\u79ef\u5373\u4e3a\u591a\u9879\u5f0f\u4e58\u6cd5,\u5177\u6709\u7ed3\u5408\u5f8b,\u4f7f\u7528\u7c7b\u4f3c\u5feb\u901f\u5e42\u7684\u500d\u589e\u7b97\u6cd5,\u53ef\u4ee5\u5728$O(log\\,n)$\u6b21\u5377\u79ef\u5185\u8ba1\u7b97\u51fa\u7b54\u6848,\u6bcf\u6b21\u5377\u79ef\u6211\u4eec\u4f7f\u7528NTT,\u5373\u53ef\u5f97\u5230$O(nlog^2\\,n)$\u7684\u89e3\u6cd5.  \n\n---\n\n\u4ee3\u7801\u5982\u56fe\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cctype>\n#include <cassert>\n#include <ctime>\nusing namespace std;\ntypedef long long Int;\nconst int N=(1<<19);\nconst Int mod=998244353LL;\nconst Int G=3LL;\nInt qpow(Int a,Int p){\n\tif(p==0) return 1;\n\tInt r=qpow(a,p>>1); r=r*r%mod;\n\treturn (p&1)?(r*a%mod):r;\n}\ninline Int inv(Int a){ return qpow(a,mod-2); }\nnamespace Poly{\n\tconst int CUTOFF=30;\n\tInt buf[CUTOFF];\n    // \u5c0f\u6280\u5de7,\u5373\u4f7f\u4f60\u7528\u7684\u662f\u9012\u5f52\u7684FFT,\u4e5f\u80fd\u8dd1\u5f97\u8fc7\u53bb.\n    // \u5c0f\u8303\u56f4\u66b4\u529b\u4ee3\u66ff\u5206\u6cbb,\u51cf\u5c11\u4e86push/pop stack\u7684\u5f00\u9500\n    // \u662f\u4e00\u4e2a\u590d\u6742\u5ea6\u4e0e\u5e38\u6570\u4e4b\u95f4\u7684\u5e73\u8861.\n    // \u5177\u4f53\u6765\u8bf4,dft\u5373\u4e3a\u5e26\u5165\u6c42\u503c...\u6211\u4eec\u66b4\u529b\u5e73\u65b9\u590d\u6742\u5ea6\u5e26\u5165\u5373\u53ef.\n\tvoid fft(Int *A,int n,int f){\n\t\tInt base=qpow(G,(mod-1)/n),w=1,t=0;\n\t\tif(f<0) base=inv(base);\n\t\tif(n<CUTOFF){\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=n-1;j>=0;j--) t=(t*w%mod+A[j])%mod;\n\t\t\t\tbuf[i]=t; t=0; w=w*base%mod;\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) A[i]=buf[i];\n\t\t\treturn ;\n\t\t}\n\t\tint m=n>>1,p=0;\n\t\tInt *A0=new Int[m],*A1=new Int[m];\n\t\tfor(int i=0;i<m;i++){ A0[i]=A[p++]; A1[i]=A[p++]; }\n\t\tfft(A0,m,f); fft(A1,m,f);\n\t\tfor(int i=0;i<m;i++){\n\t\t\tt=w*A1[i]%mod;\n\t\t\tA[i]=(A0[i]+t)%mod;\n\t\t\tA[i+m]=(A0[i]-t+mod)%mod;\n\t\t\tw=w*base%mod;\n\t\t}\n\t\tdelete[] A0; delete[] A1;\n\t}\n\tinline void trans(Int *A,int n,int f){\n\t\tfft(A,n,f);\n\t\tif(f<0){\n\t\t\tInt x=inv(n);\n\t\t\tfor(int i=0;i<n;i++) A[i]=A[i]*x%mod;\n\t\t}\n\t}\n}using Poly::trans;\n\n// \u591a\u9879\u5f0f\u5feb\u901f\u5e42.modlen\u8868\u793a\u6a21x^p\u8fdb\u884c\u8ba1\u7b97\n// \u663e\u7136\u4e0d\u80fd\u4fdd\u7559\u6574\u4e2a\u591a\u9879\u5f0f,\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u6bcf\u6b21\u4fdd\u7559\u4e00\u90e8\u5206,\u540e\u9762\u7684\u90e8\u5206\u662f\u4e0d\u4f1a\u5f71\u54cd\u8f6c\u79fb\u7684\n// \u5f62\u5f0f\u5316\u7684\u8bf4,\u6211\u4eec\u5728\u6a21x^p\u610f\u4e49\u4e0b\u8fdb\u884c\u591a\u9879\u5f0f\u8fd0\u7b97.\nInt poly_qpow(Int *Poly,int modlen,int n,int at){\n// \u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97Poly \u7684n\u6b21\u65b9,\u6a21x^modlen\u610f\u4e49\u4e0b,x^at\u9879\u7684\u7cfb\u6570.\n\tint k=1; while(k<=modlen*2) k<<=1;\n\tfor(int i=0;i<modlen;i++) base[i]=Poly[i];\n\tfor(int i=modlen;i<k;i++) base[i]=0;\n\tfor(int i=0;i<k;i++) ret[i]=0; ret[0]=1;\n\n\twhile(n){\n\t\tif(n&1){\n\t\t\ttrans(base,k,1); trans(ret,k,1);\n\t\t\tfor(int i=0;i<k;i++) ret[i]=ret[i]*base[i]%mod;\n\t\t\ttrans(base,k,-1); trans(ret,k,-1);\n\t\t\tfor(int i=modlen;i<k;i++) ret[i]=0;\n\t\t}\n\t\ttrans(base,k,1);\n\t\tfor(int i=0;i<k;i++) base[i]=base[i]*base[i]%mod;\n\t\ttrans(base,k,-1);\n\t\tfor(int i=modlen;i<k;i++) base[i]=0;\n\t\tn>>=1;\n\t}\n\treturn ret[at];\n}\n// \u8ba1\u7b97\u957f\u5ea6\u4e3alen,\u5143\u7d20\u4e3a[1,n],\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7m\u7684\u5e8f\u5217\u8ba1\u6570.\ninline Int count(int len,int n,int m){\n\tif(m<=0) return 0;\n    // \u8fd9\u4e2a\u591a\u9879\u5f0fB\u5373\u4e3a\u63a8\u5bfc\u4e2d\u7684H\n\tfor(int i=0;i<=m;i++) B[i]=ifac[i];\n\tfor(int i=m+1;i<N;i++) B[i]=0;\n    // \u8bb0\u5f97\u628a\u9636\u4e58\u8865\u5145\u56de\u6765.\n\treturn poly_qpow(B,len+1,n,len)*fac[len]%mod;\n}\nint n,m;\nint read(){\n\tint x=0;char c;\n\tdo{c=getchar();}while(!isdigit(c));\n\tdo{x=x*10+c-'0';c=getchar();}while(isdigit(c));\n\treturn x;\n}\nint main(){\n\tn=read();m=read();\n\tifac[0]=fac[0]=1;\n\tfor(int i=1;i<N;i++) ifac[i]=inv(fac[i]=fac[i-1]*i%mod);\n\n\tInt ans=(count(n-2,n,m-1)-count(n-2,n,m-2)+mod)%mod;\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n---\n\n\u540e\u8bb0\n\n~~\u5373\u4f7f\u4f60\u4e0d\u4f1aEGF,\u4e0d\u77e5\u9053\u5404\u79cd\u56fe\u8ba1\u6570\u7684\u64cd\u4f5c.\u4e0d\u61c2\u591a\u9879\u5f0f\u79d1\u6280\u53ea\u4f1a\u5199\u4e00\u4e2afft\u677f\u5b50\u4e5f\u80fd\u8f7b\u677e\u5207\u9898.~~\n\n\u5982\u679c\u4f60\u4f1a\u591a\u9879\u5f0fexp,\u4e86\u89e3EGF\u548c\u6709\u6807\u53f7\u56fe\u8ba1\u6570\u7684\u5404\u79cd\u73a9\u6cd5,\u8fd9\u4e2a\u5c31\u662f\u677f\u5b50\u4e86...~~\u663e\u7136\u4f5c\u4e3a\u4e00\u4e2a\u61d2\u4eba,\u6211\u662f\u53ea\u4f1afft\u677f\u5b50\u548c\u6c42\u9006\u7684~~ \u66f4\u591a\u73a9\u6cd5\u8bf7\u81ea\u884c\u67e5\u627eNOI WC2019\u4e0a\"\u751f\u6210\u51fd\u6570 \u591a\u9879\u5f0f \u56fe\u8ba1\u6570\"\u7684\u8bfe\u4ef6\u548c\u7b56\u7237\u7684\u96c6\u8bad\u961f\u8bba\u6587.\n\n\n\n\n~~BJOI2019 RP++~~\u7701\u9009\u72060\u7a33\u4e86.\n",
        "postTime": 1552551819,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7~~\u6c11\u79d1\u7684~~\u76f4\u63a5\u4ece\u751f\u6210\u51fd\u6570\u89d2\u5ea6\u8fdb\u884c\u63a8\u5bfc\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\uff0c\u6839\u636e Prufer \u5e8f\u5217\uff0c\u6613\u77e5\u76f8\u5f53\u4e8e\u8ba1\u6570\u957f\u5ea6\u4e3a $n-2$ \u7684\uff0c\u5143\u7d20\u5728 $[1,n]$ \u5185\u4e14\u6240\u6709\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u7684\u6700\u5927\u503c\u6070\u4e3a $m-1$ \u7684\u5e8f\u5217\u4e2a\u6570\u3002  \n\u4f46\u662f\u6700\u5927\u503c\u6070\u4e3a $m-1$ \u5e76\u4e0d\u597d\u6c42\uff0c\u8003\u8651\u5dee\u5206\u8f6c\u5316\u4e3a\u51fa\u73b0\u6b21\u6570\u5168\u90fd\u4e0d\u8d85\u8fc7 $m-1$ \u7684\uff0c\u51cf\u53bb\u51fa\u73b0\u6b21\u6570\u5168\u90fd\u4e0d\u8d85\u8fc7 $m-2$ \u7684\u3002\n\n\u4e8e\u662f\u8003\u8651\u5982\u4f55\u8ba1\u6570\u957f\u5ea6\u4e3a $n-2$\uff0c\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $m-1$ \u7684\u5e8f\u5217\u4e2a\u6570\u3002  \n\u5e8f\u5217\u5f53\u7136\u662f\u7528 EGF\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u987a\u5e8f\u3002\u7531\u4e8e\u6bcf\u79cd\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u90fd\u4e0d\u80fd\u8d85\u8fc7 $m-1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u79cd\u5143\u7d20\u6784\u9020 EGF\u3002  \n\u5219\u8bbe\n$$F(x) = \\sum\\limits_{i=0}^{m-1} \\frac{x^i}{i!}$$\n\n\u56e0\u4e3a\u540c\u5143\u7d20\u4e4b\u95f4\u6362\u987a\u5e8f\u4e5f\u53ea\u7b97\u4e00\u79cd\u65b9\u6848\u3002\n\n\u7531\u4e8e\u6709 $[1,n]$ \u7684\u5143\u7d20\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f\n$$(n-2)![x^{n-2}]F^n(x)$$\n\u591a\u9879\u5f0f\u500d\u589e\u5feb\u901f\u5e42\u6216\u8005 ln exp \u5feb\u901f\u5e42\u89e3\u51b3\u3002  \n\u590d\u6742\u5ea6 $O(n \\log^2 n)$ \u6216 $O(n \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <utility>\n#include <algorithm>\n#define add(a,b) (a + b >= mod ? a + b - mod : a + b)\n#define dec(a,b) (a < b ? a - b + mod : a - b)\nusing namespace std;\nconst int N = 1 << 18;\nconst int mod = 998244353;\nconst int G = 3;\ninline int fpow(int a,int b)\n{\n\tint ret = 1;\n\tfor(;b;b >>= 1)\n\t\t(b & 1) && (ret = (long long)ret * a % mod),a = (long long)a * a % mod;\n\treturn ret;\n}\nstruct poly\n{\n\tint a[N + 5];\n\tinline const int &operator[](int x) const\n\t{\n\t\treturn a[x];\n\t}\n\tinline int &operator[](int x)\n\t{\n\t\treturn a[x];\n\t}\n\tinline void clear(int x = 0)\n\t{\n\t\tmemset(a + x,0,(N - x + 1) << 2);\n\t}\n} f;\nint m,len,k,n,lg2[N + 5];\nint cnt[N + 5];\nint rev[N + 5],fac[N + 5],ifac[N + 5],inv[N + 5];\nint rt[N + 5],irt[N + 5];\ninline void init(int len)\n{\n\tfor(n = 1;n < len;n <<= 1);\n\tfor(register int i = 2;i <= n;++i)\n\t\tlg2[i] = lg2[i >> 1] + 1;\n\tint w = fpow(G,(mod - 1) / n);\n\trt[n >> 1] = 1;\n\tfor(register int i = (n >> 1) + 1;i <= n;++i)\n\t\trt[i] = (long long)rt[i - 1] * w % mod;\n\tfor(register int i = (n >> 1) - 1;i;--i)\n\t\trt[i] = rt[i << 1];\n\tfac[0] = 1;\n\tfor(register int i = 1;i <= n;++i)\n\t\tfac[i] = (long long)fac[i - 1] * i % mod;\n\tifac[n] = fpow(fac[n],mod - 2);\n\tfor(register int i = n;i;--i)\n\t\tifac[i - 1] = (long long)ifac[i] * i % mod;\n\tfor(register int i = 1;i <= n;++i)\n\t\tinv[i] = (long long)ifac[i] * fac[i - 1] % mod;\n}\ninline void ntt(poly &a,int type,int n)\n{\n\ttype == -1 && (reverse(a.a + 1,a.a + n),1);\n\tint lg = lg2[n] - 1;\n    for(register int i = 0;i < n;++i)\n    \trev[i] = (rev[i >> 1] >> 1) | ((i & 1) << lg),\n\t\ti < rev[i] && (swap(a[i],a[rev[i]]),1);\n    for(register int w = 2,m = 1;w <= n;w <<= 1,m <<= 1)\n        for(register int i = 0;i < n;i += w)\n            for(register int j = 0;j < m;++j)\n            {\n                int t = (long long)rt[m | j] * a[i | j | m] % mod;\n                a[i | j | m] = dec(a[i | j],t),a[i | j] = add(a[i | j],t);\n            }\n    if(type == -1)\n    \tfor(register int i = 0;i < n;++i)\n    \t\ta[i] = (long long)a[i] * inv[n] % mod;\n}\ninline void mul(poly &a,const poly &b,int n)\n{\n\tstatic poly x,y;\n\tint lim = 1;\n    x.clear(),y.clear();\n\tfor(;lim < (n << 1);lim <<= 1);\n\tx = a,y = b;\n\tx.clear(n),y.clear(n);\n    ntt(x,1,lim),ntt(y,1,lim);\n    for(register int i = 0;i < lim;++i)\n        x[i] = (long long)x[i] * y[i] % mod;\n    ntt(x,-1,lim);\n    x.clear(n),a = x;\n}\ninline poly inverse(const poly &f,int n)\n{\n\tstatic int s[30];\n\tstatic poly g,h,q;\n\tint lim = 1,top = 0;\n\tg.clear();\n\tfor(;n > 1;s[++top] = n,n = (n + 1) >> 1);\n\tg[0] = fpow(f[0],mod - 2);\n\tfor(;top;--top)\n\t{\n\t\tn = s[top];\n\t\tfor(;lim < (n << 1);lim <<= 1);\n\t\tq = g,h = f,h.clear(n);\n\t\tntt(g,1,lim),ntt(h,1,lim);\n\t\tfor(register int i = 0;i < lim;++i)\n\t\t\tg[i] = (long long)g[i] * g[i] % mod * h[i] % mod;\n\t\tntt(g,-1,lim);\n\t\tfor(register int i = 0;i < n;++i)\n\t\t\tg[i] = dec(add(q[i],q[i]),g[i]);\n\t\tg.clear(n);\n\t}\n\treturn g;\n}\ninline void derivative(poly &f,int n)\n{\n\tfor(register int i = 1;i < n;++i)\n\t\tf[i - 1] = (long long)f[i] * i % mod;\n\tf[n - 1] = 0;\n}\ninline void integral(poly &f,int n)\n{\n\tfor(register int i = n - 1;~i;--i)\n\t\tf[i + 1] = (long long)f[i] * inv[i + 1] % mod;\n\tf[0] = 0;\n}\ninline poly ln(const poly &f,int n)\n{\n\tstatic poly g;\n    g = f,derivative(g,n),mul(g,inverse(f,n),n),integral(g,n);\n\treturn g;\n}\ninline poly exp(const poly &f,int n)\n{\n\tstatic int s[30];\n\tstatic poly g,h;\n\tint lim = 1,top = 0;\n    g.clear();\n\tfor(;n > 1;s[++top] = n,n = (n + 1) >> 1);\n\tg[0] = 1;\n\tfor(;top;--top)\n\t{\n\t\tn = s[top];\n\t\tfor(;lim < (n << 1);lim <<= 1);\n\t\th = g,g = ln(g,n);\n\t\tfor(register int i = 0;i < n;++i)\n\t\t\tg[i] = dec(f[i],g[i]);\n\t\tg[0] = add(g[0],1);\n\t\tntt(g,1,lim),ntt(h,1,lim);\n\t\tfor(register int i = 0;i < lim;++i) \n\t\t\tg[i] = (long long)g[i] * h[i] % mod;\n\t\tntt(g,-1,lim);\n\t\tg.clear(n);\n\t}\n\treturn g;\n}\ninline poly power(const poly &f,int k,int n)\n{\n    static poly g;\n    g = ln(f,n);\n    for(register int i = 0;i < n;++i)\n        g[i] = (long long)g[i] * k % mod;\n    g = exp(g,n);\n    return g;\n}\nnamespace Mod_sqrt\n{\n    typedef pair<int,int> cp;\n    int w;\n    inline cp operator*(const cp &a,const cp &b)\n    {\n        return cp(((long long)a.first * b.first % mod + (long long)a.second * b.second % mod * w % mod) % mod,((long long)a.first * b.second % mod + (long long)a.second * b.first % mod) % mod);\n    }\n    inline cp pow(cp a,int b)\n    {\n        cp ret(1,0);\n        for(;b;b >>= 1)\n            (b & 1) && (ret = ret * a,1),a = a * a;\n        return ret;\n    }\n    inline int mod_sqrt(int x)\n    {\n        int y = rand() % mod;\n        for(;fpow(w = ((long long)y * y % mod - x + mod) % mod,mod - 1 >> 1) <= 1;y = rand() % mod);\n        cp ret = pow(cp(y,1),mod + 1 >> 1);\n        return min(ret.first,mod - ret.first);\n    }\n}\nusing Mod_sqrt::mod_sqrt;\ninline poly sqrt(const poly &f,int n)\n{\n\tstatic int s[30];\n\tstatic poly g,h;\n\tint top = 0;\n\tg.clear();\n\tfor(;n > 1;s[++top] = n,n = (n + 1) >> 1);\n\tg[0] = mod_sqrt(f[0]);\n    for(;top;--top)\n    {\n        n = s[top];\n        for(register int i = 0;i < n;++i)\n            h[i] = add(g[i],g[i]);\n        h = inverse(h,n),mul(g,g,n);\n        for(register int i = 0;i < n;++i)\n            g[i] = add(g[i],f[i]);\n        mul(g,h,n);\n    }\n    return g;\n}\ninline int calc(int n,int m)\n{\n\tif(m <= 0)\n\t\treturn 0;\n\tstatic poly f;\n\tfor(register int i = 0;i <= m;++i)\n\t\tf[i] = ifac[i];\n\tf.clear(m + 1),f = power(f,n,n - 1);\n\treturn (long long)f[n - 2] * fac[n - 2] % mod;\n}\nint main()\n{\n    scanf(\"%d%d\",&len,&m),init((len - 1) << 1);\n    printf(\"%d\\n\",(calc(len,m - 1) - calc(len,m - 2) + mod) % mod);\n}\n```",
        "postTime": 1578874499,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    },
    {
        "content": "\u53d1\u73b0\u597d\u591a\u540c\u5b66\u76f4\u63a5\u4e00\u7b14\u5e26\u8fc7\u4e86\u751f\u6210\u51fd\u6570\u90e8\u5206\uff0c\u6211\u6765\u8865\u5168\u4e00\u4e0b\u3002\n\n### \u8f6c\u5316\u95ee\u9898\n\n\u663e\u7136\u6070\u597d\u4e0d\u597d\u6c42\uff0c\u6211\u4eec\u8f6c\u5316\u4e00\u4e0b\u3002\n\n\u53d1\u73b0\u53ef\u4ee5\u8f6c\u5316\u6210\u81f3\u591a\u3002\n\n\u9996\u5148\u7528$\\texttt{prufer\u7f16\u7801}$\u628a\u6570\u65e0\u6839\u6811\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u5e8f\u5217\u95ee\u9898\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u662f\n\n#### \u6c42\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n-2$\u7684\u5e8f\u5217\u586b\u4e0a$n$\u4e2a\u6570\uff0c\u4e14\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u6700\u5927\u503c\u4e3a$m-1$\u6b21\u7684\u65b9\u6848\u6570\u3002\n\n\u8bbe$f_{m,i,j}$\u8868\u793a\u524d$j$\u4e2a\u70b9\uff0c\u5e8f\u5217\u957f\u5ea6\u4e3a$i$\uff0c\u6bcf\u4e00\u4e2a\u6570\u81f3\u591a\u51fa\u73b0$m$\u6b21\u7684\u65b9\u6848\u6570\u3002\n\n\u53d1\u73b0\u7b54\u6848\u5c31\u662f$f_{m-1,n-2,n}-f_{m-2,n-2,n}$\n\n### \u5f00\u59cb$dp$\n\n\u600e\u4e48$dp$\u5462\uff1f\u6709\u4e00\u4e2a$naive$\u7684\u60f3\u6cd5\n\n\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\uff0c\u6211\u4eec\u679a\u4e3e\u7b2c$j$\u4e2a\u70b9\u7684\u51fa\u73b0\u6b21\u6570$k(k\\geq m)$\u3002\n\n\u90a3\u4e48\u5c31\u6709\u8f6c\u79fb\u65b9\u7a0b\u5f0f\uff1a\n\n$$f_{m,i,j}=\\sum_{k=0}^{\\min(m,i)}C_{i}^{k}f_{m,i-k,j-1}$$\n\n\u5c31\u662f\u94a6\u5b9a$k$\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a$j$\uff0c\u5176\u4ed6\u7684\u586b$1\\sim (j-1)$\u5185\u7684\u6570\u3002\n\n### \u4f18\u5316\n\n\u663e\u7136\u8fc7\u4e0d\u53bb\u5427...\n\n\u7b49\u7b49\uff0c\u8fd9\u4e0d\u662f**\u6307\u6570\u578b\u751f\u6210\u51fd\u6570**\u7684\u5377\u79ef\uff1f\n\n\u8bbe\n\n$$F_{m,j}=\\sum_{k=0}^{\\infty}\\frac {f_{m,k,j}}{k!}$$\n\n\u5219\u6709\n\n$$F_{m,j}=F_{m,j-1}\\times \\sum_{i=0}^{m}\\frac{1}{i!}x^i$$\n\n\u6709\u4e9b\u9898\u89e3\u6709\u95ee\u9898\uff0c\u540e\u9762\u8fd9\u4e2a\u751f\u6210\u51fd\u6570\u4e0d\u662f$e^x$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u591a\u9879\u5f0f\u5feb\u901f\u5e42\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5$O(n\\log_2n)$\u901a\u8fc7\u6b64\u9898\uff1f\uff1f\uff1f\n\n\u7531\u4e8e\u6211\u61d2\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u500d\u589e\u5feb\u901f\u5e42...\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log_2^2n)$\n\n\u6ce8\u610f\u7279\u5224$n=1,2,m=1,2$\u7684\u60c5\u51b5\uff01\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define ljc 998244353\nusing namespace std;\n#ifdef Fading\n#define gc getchar\n#endif\n#ifndef Fading\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\n#endif\ninline ll read(){\n    register ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)){if(ch=='-')f=-1;ch=gc();}\n    while (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=gc();}\n    return (f==1)?x:-x;\n}\nll n,w[2200001],inv[2200001],fac[2200001],r[2200001],m,f[2200001],g[2200001];\ninline ll fast_pow(ll a,ll b,ll p){\n    ll t=1;a%=p;\n    while (b){\n        if (b&1LL) t=t*a%p;\n        b>>=1LL;a=a*a%p;\n    }\n    return t;\n}\ninline void NTT(ll *f,ll lim,int id){\n    w[0]=1;\n    for (int i=0;i<lim;i++){\n        if (i>r[i]) swap(f[i],f[r[i]]);\n    }\n    for (int len=1;len<lim;len<<=1){\n        ll gen=fast_pow(3,(ljc-1)/(len<<1)*id+ljc-1,ljc);\n        for (int i=1;i<len;i++) w[i]=w[i-1]*gen%ljc;\n        for (int i=0;i<lim;i+=len<<1){\n            ll *f1=f+i,*f2=f1+len;\n            for (int j=0;j<len;j++){\n                ll x=f1[j],y=f2[j]*w[j]%ljc;\n                f1[j]=(x+y)%ljc;\n                f2[j]=(x-y+ljc)%ljc;\n            }\n        }\n    }\n    if (id==1) return;\n    ll INV=fast_pow(lim,ljc-2,ljc);\n    for (int i=0;i<lim;i++) f[i]=f[i]*INV%ljc;\n}\nll caca[2000001],cacb[2000001];\ninline void Mul(ll *a,ll *b,ll *c,ll n,ll m,ll Len){\n    ll lim=1,len=0;\n    while (lim<=(n+m)) lim<<=1,len++;\n    for (int i=0;i<lim;i++) caca[i]=cacb[i]=0,r[i]=(r[i>>1]>>1)|((i&1)<<(len-1));\n    for (int i=0;i<n;i++) caca[i]=a[i];\n    for (int i=0;i<m;i++) cacb[i]=b[i];\n    NTT(caca,lim,1);NTT(cacb,lim,1);\n    for (int i=0;i<lim;i++) c[i]=caca[i]*cacb[i]%ljc;\n    NTT(c,lim,-1);\n    for (int i=Len;i<lim;i++) c[i]=0;\n}\ninline int getans(int n,int m){\n    if (m==-1) return 0;\n    memset(g,0,sizeof g);memset(f,0,sizeof f);\n    for (int i=0;i<=m;i++) g[i]=inv[i]; \n    f[0]=1;\n    ll tmp=n;\n    while (tmp){\n        if (tmp&1LL) Mul(f,g,f,n,n,n);\n        tmp>>=1LL;Mul(g,g,g,n,n,n);\n    } \n    return (n-2<0?0:fac[n-2]*f[n-2]%ljc);\n}\nsigned main(){\n    n=read(),m=read();\n    fac[0]=inv[0]=inv[1]=1;\n    for (ll i=1;i<=max(n,m)+1;i++) fac[i]=fac[i-1]*i%ljc;\n    for (ll i=2;i<=max(n,m)+1;i++) inv[i]=(ljc-(ljc/i)*inv[ljc%i]%ljc)%ljc;\n    for (ll i=1;i<=max(n,m)+1;i++) inv[i]=inv[i-1]*inv[i]%ljc;\n    printf(\"%lld\\n\",(getans(n,m-1)-getans(n,m-2)+ljc)%ljc);\n}\n\n\n```\n",
        "postTime": 1563161491,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    },
    {
        "content": "\u6811\u7684\u5e38\u7528\u8ba1\u6570\u5de5\u5177\u662f\u77e9\u9635\u6811\u548cpurfer\u5e8f\uff0c\u8fd9\u9898\u4e0e\u5ea6\u6570\u76f8\u5173\u660e\u663e\u4f7f\u7528purfer\u5e8f\u3002\n\n\u9898\u76ee\u4e3a\u201c\u6070\u597d\u6700\u5927\u5ea6\u6570\u4e3aM\u201d\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u201c\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8eM\u201d-\u201c\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8eM-1\u201d\n\n\u8f6c\u5316\u5230Purfer\u4e0a\u5c31\u662f\uff1a\u5b58\u5728\u591a\u5c11\u79cd\u957f\u5ea6\u4e3an-2\u3001\u503c\u57df\u5927\u5c0f\u4e3an\u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u6b21\u6570<=m\n\n\u8003\u8651dp\uff0c\u8bbef[i][j]\u4e3a\u8003\u8651\u5230\u53d6\u503c\u4e3a1~i\u3001\u586b\u4e86j\u4e2a\u6570\u7684\u65b9\u6848\u6570\uff0c\u5219\u7b54\u6848\u4e3af[n][n-2]\uff0c\u6613\u5f97f[i][j]=f[i-1][j-k]*C(n-2-(j-k),k)\uff0c\u5176\u4e2dk\u662f\u679a\u4e3e\u7b2ci\u4e2a\u6570\u4f7f\u7528\u591a\u5c11\u6b21\uff0c\u663e\u7136k<=m\n\n\u628a\u7ec4\u5408\u6570\u8f6c\u9636\u4e58\u53ef\u5f97f[i][j]=f[i-1][j-k]*fac[n-2-(j-k)]/fac[k]*fac[(n-2)-j]\n\n\u5373f[i][j]*fac[n-2-j]=f[i-1][j-k]*fac[n-2-(j-k)]*invfac[k]\n\n\u8bbeF[j]=f[i][j]*fac[n-2-j],G[j]=f[i-1][j]*fac[n-2-j]\n\n\u5219F[j]=G[j-k]*invfac[k]\n\n\u53ef\u4ee5\u660e\u663e\u770b\u51fa\u662f\u4e00\u4e2a\u5377\u79ef\u5f62\u5f0f\uff0c\u4e14\u603b\u5171\u8f6c\u79fbn\u6b21\uff0c\u5219\u76f4\u63a5\u591a\u9879\u5f0f\u5feb\u901f\u5e42\uff0c\u590d\u6742\u5ea6O(nlog^2 n)\uff0c\u4e5f\u53ef\u4ee5\u7528\u591a\u9879\u5f0fexp/ln\u505a\u5230O(nlogn)\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=1.5e5+2,p=998244353;\nint ifac[N],fac[N],inv[N],f[N],g[N],x[N],yg[N],ig[N],r[N];\nint n,m,i,j,l,limit=1,ans;\ninline int ksm(int x,int y)\n{\n    int r=1;\n    while (y)\n    {\n        if (y&1) r=(ll)r*x%p;\n        x=(ll)x*x%p;\n        y>>=1;\n    }\n    return r;\n}\nvoid dft(int *a,int xs)\n{\n    int i,j,k,l,w,wn,b,c;\n    for (i=1;i<limit;i++) if (i<r[i]) swap(a[i],a[r[i]]);\n    for (i=1;i<limit;i=l)\n    {\n        l=i<<1;\n        if (xs) wn=yg[l]; else wn=ig[l];\n        for (j=0;j<limit;j+=l)\n        {\n            w=1;\n            for (k=0;k<i;k++,w=(ll)w*wn%p)\n            {\n                b=a[j|k];c=(ll)a[j|k|i]*w%p;\n                a[j|k]=(b+c)%p;\n                a[j|k|i]=(b-c+p)%p;\n            }\n        }\n    }\n    if (!xs)\n    {\n        xs=ksm(limit,p-2);\n        for (i=0;i<limit;i++) a[i]=(ll)a[i]*xs%p;\n    }\n}\nvoid sol(int m)\n{\n    memset(g,0,limit<<2);\n    l=n;\n    for (i=0;i<=m;i++) g[i]=ifac[i];\n    memset(f,0,limit<<2);\n    f[0]=fac[n-2];\n    l=n;\n    while (l)\n    {\n        if (l&1)\n        {\n            memcpy(x,g,limit<<2);\n            dft(f,1);dft(x,1);\n            for (i=0;i<limit;i++) f[i]=(ll)f[i]*x[i]%p;\n            dft(f,0);\n            memset(f+n,0,limit-n<<2);\n        }\n        l>>=1;\n        dft(g,1);\n        for (i=0;i<limit;i++) g[i]=(ll)g[i]*g[i]%p;\n        dft(g,0);\n        memset(g+n,0,limit-n<<2);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    --m;\n    inv[1]=ifac[1]=ifac[0]=fac[0]=fac[1]=1;\n    for (i=2;i<=n;i++)\n    {\n        fac[i]=(ll)fac[i-1]*i%p;\n        ifac[i]=(ll)ifac[i-1]*(inv[i]=p-(ll)p/i*inv[p%i]%p)%p;\n    }\n    while (limit<=n)\n    {\n        limit<<=1;++l;\n    }\n    limit<<=1;\n    for (i=1;i<limit;i++) r[i]=r[i>>1]>>1|(i&1)<<l;\n    ig[limit]=ksm(yg[limit]=ksm(3,(p-1)/limit),p-2);\n    for (i=limit>>1;i;i>>=1)\n    {\n        yg[i]=(ll)yg[i<<1]*yg[i<<1]%p;\n        ig[i]=(ll)ig[i<<1]*ig[i<<1]%p;\n    }\n    sol(m);\n    ans=f[n-2];\n    sol(m-1);\n    ans=(ans-f[n-2]+p)%p;\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1549708947,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    },
    {
        "content": "\u8003\u8651\u8fd9\u68f5\u6811\u7684 Prufer \u5e8f\u5217\n\n\u4ee4 $a_i$ \u4e3a $i$ \u5728 Prufer \u5e8f\u5217\u4e2d\u51fa\u73b0\u6b21\u6570\n\n\u90a3\u4e48 $d_i=a_i+1, \\sum a_i=n-2$\uff0c$d_i$ \u4e3a $i$ \u7684\u5ea6\u6570\n\n\u786e\u5b9a\u4e86\u6bcf\u4e2a\u70b9\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u8fd9\u6837\u7684\u5e8f\u5217\u6570\u5c31\u662f\u4e00\u4e2a\u91cd\u6392\u5217\uff0c\u5373 $\\dfrac{(n-2)!}{\\prod a_i!}$\n\n\u800c\u9898\u76ee\u8981\u6c42\u6700\u5927\u5ea6\u6570\u7b49\u4e8e $M$, \u5c31\u7b49\u4e8e\u6700\u5927\u5ea6\u6570 $\\leq M$ \u65b9\u6848\u6570\u51cf\u53bb\u6700\u5927\u5ea6\u6570 $\\leq M-1$ \u65b9\u6848\u6570\n\n\u73b0\u5728\u8003\u8651\u6700\u5927\u5ea6\u6570 $\\leq M$ \u65b9\u6848\u6570\n\n\u4ee4\u751f\u6210\u51fd\u6570 $F(x)=\\displaystyle\\sum_{i=0}^{m-1}\\dfrac{x^i}{i!}$\n\n\u7b54\u6848\u5c31\u662f $(n-2)![x^{n-2}]F^n(x)$\n\n\u53ef\u4ee5\u4f7f\u7528\u591a\u9879\u5f0f\u5bf9\u6570/\u6307\u6570\u51fd\u6570\uff0c\u505a\u5230 $O(n\\log n)$\n\n\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5feb\u901f\u5e42 $O(n\\log^2n)$\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nconst int mod = 998244353;\nconst int N = 131072;\nusing LL = long long;\nvoid reduce(int &x) {\n\tx += x >> 31 & mod;\n}\nint pow(int x, int y, int ans = 1) {\n\tfor (; y; y >>= 1, x = (LL) x * x % mod)\n\t\tif (y & 1) ans = (LL) ans * x % mod;\n\treturn ans;\n}\nint lim, s, rev[N], wn[N], w[N];\nvoid fftinit(int len) {\n\twn[0] = lim = 1, s = -1; while (lim < len) lim <<= 1, ++s;\n\tfor (int i = 0; i < lim; ++i) rev[i] = rev[i >> 1] >> 1 | (i & 1) << s;\n\tconst int g = pow(3, (mod - 1) / lim);\n\tfor (int i = 1; i < lim; ++i) wn[i] = (LL) wn[i - 1] * g % mod;\n}\nvoid fft(int *A, int typ) {\n\tfor (int i = 0; i < lim; ++i) if (i < rev[i]) std::swap(A[i], A[rev[i]]);\n\tfor (int i = 1; i < lim; i <<= 1) {\n\t\tfor (int j = 0, t = lim / i / 2; j < i; ++j) w[j] = wn[j * t];\n\t\tfor (int j = 0; j < lim; j += i << 1)\n\t\t\tfor (int k = 0; k < i; ++k) {\n\t\t\t\tconst int x = A[k + j], y = (LL) A[k + j + i] * w[k] % mod;\n\t\t\t\treduce(A[k + j] += y - mod), reduce(A[k + j + i] = x - y);\n\t\t\t}\n\t}\n\tif (!typ) {\n\t\tconst int il = pow(lim, mod - 2);\n\t\tfor (int i = 0; i < lim; ++i) A[i] = (LL) A[i] * il % mod;\n\t\tstd::reverse(A + 1, A + lim);\n\t}\n}\nvoid inv(int *A, int *B, int n) {\n\tstatic int C[N], D[N];\n\tif (n == 1) { B[0] = pow(A[0], mod - 2); return; }\n\tint n_ = n + 1 >> 1; inv(A, B, n_), fftinit(n + n_ + 1);\n\tstd::memcpy(C, A, n << 2), std::memset(C + n, 0, lim - n << 2);\n\tstd::memcpy(D, B, n_ << 2), std::memset(D + n_, 0, lim - n_ << 2);\n\tfft(C, 1), fft(D, 1);\n\tfor (int i = 0; i < lim; ++i)\n\t\tC[i] = (mod + 2 - (LL) C[i] * D[i] % mod) * D[i] % mod;\n\tfft(C, 0);\n\tstd::memcpy(B + n_, C + n_, n - n_ << 2);\n}\nvoid differential(int *A, int *B, int n) {\n\tfor (int i = 0; i < n - 1; ++i)\n\t\tB[i] = (LL) A[i + 1] * (i + 1) % mod;\n\tB[n - 1] = 0;\n}\nvoid integrate(int *A, int *B, int n) {\n\tfor (int i = n - 1; ~i; --i)\n\t\tB[i + 1] = (LL) A[i] * pow(i + 1, mod - 2) % mod;\n\tB[0] = 0;\n}\nvoid ln(int *A, int *B, int n) {\n\tstatic int C[N], D[N];\n\tinv(A, C, n), differential(A, D, n);\n\tfftinit(n + n - 1);\n\tstd::memset(C + n, 0, lim - n << 2), std::memset(D + n, 0, lim - n << 2);\n\tfft(C, 1), fft(D, 1);\n\tfor (int i = 0; i < lim; ++i)\n\t\tC[i] = (LL) C[i] * D[i] % mod;\n\tfft(C, 0);\n\tintegrate(C, B, n);\n}\nvoid exp(int *A, int *B, int n) {\n\tstatic int C[N], D[N];\n\tif (n == 1) { B[0] = 1; return; }\n\tint n_ = n + 1 >> 1; exp(A, B, n_);\n\tln(B, C, n), fftinit(n + 1);\n\tfor (int i = 0; i < n; ++i) reduce(C[i] = A[i] - C[i]);\n\tstd::memset(C + n, 0, lim - n << 2);\n\tstd::memcpy(D, B, n_ << 2), std::memset(D + n_, 0, lim - n_ << 2);\n\tfft(C, 1), fft(D, 1);\n\tfor (int i = 0; i < lim; ++i)\n\t\tC[i] = (LL) C[i] * D[i] % mod;\n\tfft(C, 0);\n\tstd::memcpy(B + n_, C + n_, n - n_ << 2);\n}\nint n, m, f[N], g[N], factor[N], ifactor[N];\n\nint get_ans(int m) {\n\tstd::memset(f, 0, sizeof f), std::memset(g, 0, sizeof g);\n\tfor (int i = 0; i < m; ++i) f[i] = ifactor[i];\n\tln(f, g, n - 1);\n\tfor (int i = 0; i < n - 1; ++i)\n\t\tf[i] = 0, g[i] = (LL) g[i] * n % mod;\n\texp(g, f, n - 1);\n\treturn (LL) f[n - 2] * factor[n - 2] % mod;\n}\nint main() {\n\tstd::ios::sync_with_stdio(0), std::cin.tie(0);\n\tstd::cin >> n >> m;\n\tfactor[0] = 1;\n\tfor (int i = 1; i < n - 1; ++i)\n\t\tfactor[i] = (LL) factor[i - 1] * i % mod;\n\tifactor[n - 2] = pow(factor[n - 2], mod - 2);\n\tfor (int i = n - 3; ~i; --i)\n\t\tifactor[i] = (LL) ifactor[i + 1] * (i + 1) % mod;\n\tint ans = get_ans(m) - get_ans(m - 1); reduce(ans);\n\tstd::cout << ans << '\\n';\n\treturn 0;\n}\n\n```",
        "postTime": 1549526243,
        "uid": 26127,
        "name": "Weng_Weijie",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    },
    {
        "content": "\u76f4\u63a5\u5feb\u8fdb\u5230 Prufer \u5e8f\u5217\u3002\u7b49\u4ef7\u4e8e\u957f\u4e3a $n-2$ \u7684\u5e8f\u5217\uff0c\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\u6070\u4e3a $m-1$\u3002\n\n\u9996\u5148\u5c06\u6070\u597d $m-1$ \u5dee\u5206\u4e3a\u81f3\u591a $m-1$ \u51cf\u53bb\u81f3\u591a $m-2$\u3002\u8bbe\u7b2c $i$ \u4e2a\u6570\u51fa\u73b0 $a_i$ \u6b21\uff0c\u5219\u6709 $\\binom{n-2}{a_1\\ a_2\\ a_3\\cdots a_n}$ \u79cd\u4e0d\u540c\u7684\u653e\u6cd5\u3002\u5c06\u5176\u62c6\u5f00\uff0c\u5373 $\\frac{(n-2)!}{a_1!a_2!\\cdots a_n!}$\u3002\u5bb9\u6613\u53d1\u73b0\u5982\u679c\u8bbe $F(x)=\\sum_{i=0}^{m-1}\\frac{x^i}{i!}$\uff0c\u5219\u7b54\u6848\u4e3a $[x^{n-2}]F(x)^n$\u3002\u4f7f\u7528\u591a\u9879\u5f0f\u5feb\u901f\u5e42\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1677570770,
        "uid": 314991,
        "name": "zhouyuhang",
        "ccfLevel": 7,
        "title": "GF \u9898"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P5219)\n\n>\u9898\u610f\uff1a\u6c42 $n$ \u4e2a\u70b9\u7684\uff0c\u6700\u5927\u5ea6\u6570\u4e3a $m$ \u7684\u6709\u6807\u53f7\u65e0\u6839\u6811\uff0c$n\\leq 5\\times 10^4$\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u4e0d\u9700\u8981\u6d89\u53ca $\\text{prufer}$ \u5e8f\u7684\u65b9\u6cd5\u3002\n\n\u7531\u4e8e\u8981\u6c42\u6700\u5927\u5ea6\u6570\u4e3a $m$\uff0c\u53ea\u9700\u7528\u5ea6\u6570 $\\leq m$ \u7684\u65b9\u6848\u51cf\u53bb\u5ea6\u6570 $\\leq m\\!-\\!1$ \u7684\u65b9\u6848\u3002\n\n\u8bbe $a_n$ \u4e3a $n$ \u4e2a\u70b9\u7684\u6240\u6709\u70b9\u5ea6\u6570 $\\leq m$ \u7684\u65b9\u6848\u3002\n\n\u7531\u4e8e\u4e00\u9897**\u6709\u6839\u6811**\u53ef\u4ee5\u901a\u8fc7\u9009\u51fa\u4e00\u4e2a\u6839\uff0c\u4e0e\u51e0\u4e2a**\u6709\u6839\u6811\u7684\u6839**\u76f8\u8fde\u7ec4\u6210\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u4e2d\u4f1a\u5c06\u539f\u5148\u6709\u6839\u6811\u7684**\u6839\u7684\u5ea6\u6570** $+1$\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8bbe $f_n$ \u4e3a $n$ \u4e2a\u70b9\u7684\u6709\u6839\u6811\uff0c\u6ee1\u8db3\u6839\u8282\u70b9\u7684\u5ea6\u6570 $<m$\uff0c\u5176\u4ed6\u70b9\u5ea6\u6570 $\\leq m$\u3002\n\n\u6240\u4ee5 $\\displaystyle f_{n+1}=(n\\!+\\!1)\\sum_{k<m}\\dfrac{1}{k!}\\sum_{\\sum\\limits_{i=1}^kn_i=n}\\binom{n}{n_1,n_2\\cdots n_k}\\prod_{i=1}^{k}f_{n_i}$\n\n\u5f0f\u5b50\u4e2d $n\\!+\\!1$ \u662f\u9009\u51fa\u6839\u7684\u65b9\u6848\uff0c$\\dfrac{1}{k!}$ \u662f\u4e3a\u4e86\u53bb\u91cd $n_i$ \u7684\u679a\u4e3e\u987a\u5e8f\u3002\n\n\u5bf9\u4e24\u8fb9\u53d6 $\\text{EGF}$ \u5f97\u5230 $\\displaystyle \\dfrac{F(x)}{x}=\\sum_{k<m}\\dfrac{F(x)^k}{k!}$\uff0c\u8fd9\u5f88\u6709\u62c9\u683c\u6717\u65e5\u53cd\u6f14\u7684\u5f62\u5f0f\uff0c\u5148\u786e\u5b9a\u6211\u4eec\u8981\u6c42\u4ec0\u4e48\u3002\n\n\u7531\u4e8e\u6839\u8282\u70b9\u5ea6\u6570 $<m$\uff0c\u53ea\u9700\u9009\u51fa\u4e24\u90e8\u5206\uff0c\u5c06\u8fd9\u4e24\u90e8\u5206\u7684\u6839\u76f8\u8fde\uff0c\u5c31\u80fd\u4f7f\u6240\u6709\u70b9\u5ea6\u6570 $\\leq m$\u3002\n\n\u8fd9\u6837\u6bcf\u4e2a\u6811\u4f1a\u88ab\u8ba1\u5165 $n-1$ \u6b21\uff0c\u5373\u8fb9\u7684\u4e2a\u6570\u3002\n\n\u4e8e\u662f\u6709 $a_n=\\dfrac{1}{n\\!-\\!1}\\left[\\dfrac{x^n}{n!}\\right]\\dfrac{F(x)^2}{2}=(n\\!-\\!2)!n\\left[x^n\\right]\\dfrac{F(x)^2}{2}$\n\n\u901a\u8fc7(\u6269\u5c55)\u62c9\u683c\u6717\u65e5\u53cd\u6f14\uff0c\u6709 $\\displaystyle \\left[x^n\\right]\\dfrac{F(x)^2}{2}=\\dfrac{1}{n}\\left[x^{n-1}\\right]x\\left(\\sum_{k<m}\\dfrac{x^k}{k!}\\right)^n$\n\n\u6700\u7ec8\u5f97\u51fa $\\displaystyle a_n=(n\\!-\\!2)!\\left[x^{n-2}\\right]\\left(\\sum_{k<m}\\dfrac{x^k}{k!}\\right)^n$\n\n\u4e3b\u8981\u4ee3\u7801\uff1a\n\n```cpp\nint work(int m){\n\tregister int i;\n\tfor(i=0;i^m;++i)a[i]=ifac[i];\n\tpolyln(n,a,b);\n\tfor(i=0;i^n;++i)b[i]=1ll*b[i]*(n+1)%mod,a[i]=0;\n\tpolyexp(n,b,a);i=n-1;ans=1ll*a[i]*fac[i]%mod;\n\tfor(i=0;i^n;++i)a[i]=b[i]=0;\n\treturn ans;\n}\nint main(){\n\tread(n);read(m);--n;\n\tregister int i;prepare();\n\twrite(sub(work(m),work(m-1)));\n}\n```",
        "postTime": 1642234558,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P5219 \u65e0\u804a\u7684\u6c34\u9898 I]"
    },
    {
        "content": "## Tag\n\n\u751f\u6210\u51fd\u6570\uff0c\u591a\u9879\u5f0f\u3002\n\n## Description\n\n\u6c42\u4e00\u9897\u5927\u5c0f\u4e3a $n$ \u7684\u6709\u6807\u53f7\u65e0\u6839\u6811\u4e2d\uff0c\u6700\u5927\u7684\u70b9\u5ea6\u6570\u6070\u4e3a $m$ \u7684\u65b9\u6848\u6570\u3002\n\n$\\texttt{data range:} n\\leq 5\\times 10^4$.\n\n## Solution\n\n\u6070\u4e3a\u8fd9\u4e2a\u6761\u4ef6\u975e\u5e38\u4e0d\u7f8e\u89c2\uff0c\u8003\u8651\u53d8\u6210**\u6700\u591a\u4e3a** $m$ \u7136\u540e\u51cf\u53bb\u6700\u591a\u4e3a $m-1$ \u7684\u65b9\u6848\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u6709\u6807\u53f7\u65e0\u6839\u6811\u6211\u4eec\u6709 prufer \u5e8f\u5217\u53ef\u4ee5\u5f88\u597d\u7684\u63cf\u8ff0\u6709\u6807\u53f7\u65e0\u6839\u6811\u95ee\u9898\u3002\n\n\u4e00\u4e2a prufer \u5e8f\u5217\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a $n-2$ \u7684\u5e8f\u5217\uff0c\u5176\u53ef\u4ee5\u552f\u4e00\u7684\u786e\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u6709\u6807\u53f7\u65e0\u6839\u6811\u3002\n\n\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u53d1\u73b0\u5728\u4e00\u68f5\u6709\u6807\u53f7\u65e0\u6839\u6811\u4e0a\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a $k$\uff0c\u90a3\u4e48\u5176\u5728 prufer \u5e8f\u5217\u4e0a\u4f1a\u51fa\u73b0 $k-1$ \u6b21\uff0c\u6839\u636e prufer \u5e8f\u5217\u7684\u6784\u9020\u6613\u8bc1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u8f6c\u5316\u5230\u4e86\u6c42\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u6b63\u6574\u6570\u5e8f\u5217\u4e2d\u4e00\u4e2a\u6570\u6700\u591a\u51fa\u73b0 $m-1$ \u6b21\u7684\u65b9\u6848\u6570\u3002\n\n\u4e0d\u96be\u523b\u753b\u4e00\u4e2a EGF \u6765\u8868\u793a\u67d0\u4e00\u4e2a\u6570\u7684\u751f\u6210\u51fd\u6570\uff0c\u6211\u4eec\u8bbe\u8fd9\u4e2a\u751f\u6210\u51fd\u6570\u4e3a $F(x)$\uff0c\u663e\u7136\u6709\uff1a\n\n$$\nF(x) = \\sum_{i=0}^{m-1} \\dfrac{x^i}{i!}\n$$\n\n\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u8f6c\u5316\u540e\u7684\u95ee\u9898\u7684\u7b54\u6848\u5c31\u662f $n$ \u4e2a\u751f\u6210\u51fd\u6570\u7684\u5377\u79ef\u5176\u4e2d\u7684\u7b2c $n-2$ \u6b21\u9879\uff0c\u4e5f\u5c31\u662f $\\left[\\dfrac{x^{n-2}}{(n-2)!}\\right]F(x)^n$\u3002\n\n\u4e00\u4e2a EGF \u7ec4\u5408\u610f\u4e49\u7684\u89e3\u91ca\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u96c6\u5408\u800c\u8a00\uff0c\u666e\u901a\u7684 OGF \u5377\u79ef\u8868\u793a\u7684\u662f\u8fd9\u4e24\u4e2a\u96c6\u5408\u65e0\u6807\u53f7\u610f\u4e49\u4e0b\u7684\u5e76\u96c6\u3002\u5177\u4f53\u4e00\u70b9\uff0c\u5c31\u662f\u4e00\u4e2a\u96c6\u5408\u76f4\u63a5\u585e\u5230\u53e6\u4e00\u4e2a\u96c6\u5408\u540e\u9762\u3002\n\n\u4f46\u662f EGF \u6240\u8868\u793a\u7684\u662f\u4e24\u4e2a\u96c6\u5408\u6709\u6807\u53f7\u610f\u4e49\u4e0b\u7684\u5e76\u96c6\uff0c\u53ef\u4ee5\u4f53\u73b0\u987a\u5e8f\u3002\n\n\u66f4\u5177\u4f53\u4e00\u70b9\uff0c\u5047\u8bbe `aa` \u4e3a\u7b2c\u4e00\u4e2a\u96c6\u5408\uff0c`bb` \u4e3a\u7b2c\u4e8c\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48 OGF \u7684\u5e76\u4e3a `aabb`\uff0cEGF \u7684\u5e76\u4e3a `aabb`,`abab`,`abba`,`baab`,`baba`,`bbaa` \u516d\u79cd\u60c5\u51b5\u3002\n\n\u53ef\u4ee5\u5f88\u6e05\u6670\u7684\u770b\u6e05\u695a\u5dee\u522b\u4e86\u5427\u2026\u2026\n\n\u672c\u9898\u53ef\u4ee5\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\lg k \\lg n)$ \u7684\u76f4\u63a5\u5feb\u901f\u5e42\uff0c\u4e5f\u53ef\u4ee5\u7528 $O(n\\lg n)$ \u7684\u591a\u9879\u5f0f $\\exp$ \u578b\u5feb\u901f\u5e42\u3002\n\n\u7b14\u8005\u7528\u7684\u662f\u540e\u8005\u3002\n\n## Code\n\n```cpp\nusing ll = long long;\nusing poly = vector<int>;\n\nconst int N = 2e5 + 10;\nconst int mod = 998244353, g = 3;\n\ninline void chk(int &x) {x -= mod; x += x >> 31 & mod;}\ninline int mll(int x, int y) {return (ll) x * y % mod;}\ninline int add(int x, int y) {chk(x += y); return x;}\ninline int del(int x, int y) {return add(x, mod - y);}\n\ninline int ksm(int x, int y) {\n    int ret = 1;\n    for(; y; y >>= 1, x = mll(x, x))\n        if(y & 1) ret = mll(ret, x);\n    return ret;\n}\n\nint fc[N], fv[N], inv[N];\ninline void pref(const int lim) {\n    fc[0] = 1;\n    FOR(i, 1, lim) fc[i] = mll(fc[i - 1], i);\n    fv[lim] = ksm(fc[lim], mod - 2);\n    ROF(i, lim, 1) fv[i - 1] = mll(fv[i], i);\n    FOR(i, 1, lim) inv[i] = mll(fv[i], fc[i - 1]);\n    return ;\n}\n\nint rev[N << 1];\ninline int getrev(const int n) {\n    int len = 1, tim = 0;\n    while(len < n) len <<= 1, tim++;\n    FOR(i, 0, len) rev[i] = rev[i >> 1] >> 1 | ((i & 1) << (tim - 1));\n    return len;\n}\n\nvoid NTT(poly &F, int n, bool typ) {\n    F.resize(n);\n    FOR(i, 0, n - 1) if(i < rev[i]) swap(F[i], F[rev[i]]);\n    for(int i = 1; i < n; i <<= 1) {\n        int gn = ksm(g, (mod - 1) / (i << 1));\n        for(int j = 0, g0 = 1, x, y; j < n; j += (i << 1), g0 = 1)\n        for(int k = 0; k < i; k++, g0 = mll(gn, g0)) {\n            x = F[j + k], y = mll(F[i + j + k], g0);\n            F[j + k] = add(x, y);\n            F[i + j + k] = del(x, y);\n        }\n    }\n    if(typ) return ;\n    reverse(F.begin() + 1, F.end()); int iv = ksm(n, mod - 2);\n    FOR(i, 0, n - 1) F[i] = mll(F[i], iv);\n    return ;\n}\n\npoly operator + (const poly a, const poly b) {\n    poly C(max(a.size(), b.size()));\n    for(int i = 0; i < C.size(); i++)\n        C[i] = add(i < a.size() ? a[i] : 0, i < b.size() ? b[i] : 0);\n    return C;\n}\n\npoly operator - (const poly a, const poly b) {\n    poly C(max(a.size(), b.size()));\n    for(int i = 0; i < C.size(); i++)\n        C[i] = del(i < a.size() ? a[i] : 0, i < b.size() ? b[i] : 0);\n    return C;\n}\n\npoly operator * (const poly a, const poly b) {\n    int n = a.size() + b.size() - 1, len = getrev(n);\n    poly A = a, B = b;\n    A.resize(len), B.resize(len);\n    NTT(A, len, 1), NTT(B, len, 1);\n    FOR(i, 0, len - 1) A[i] = mll(A[i], B[i]);\n    NTT(A, len, 0), A.resize(n);\n    return A;\n}\n\npoly operator * (const poly a, const int x) {\n    poly A = a;\n    FOR(i, 0, a.size() - 1) A[i] = mll(A[i], x);\n    return A;\n}\n\npoly DI(const poly a) {\n    poly C(a.size() - 1);\n    FOR(i, 0, C.size() - 1) C[i] = mll(i + 1, a[i + 1]);\n    return C;\n}\n\npoly IG(const poly a) {\n    poly C(a.size() + 1);\n    FOR(i, 1, C.size() - 1) C[i] = mll(inv[i], a[i - 1]);\n    return C;\n}\n\npoly INV(const poly a) {\n    poly B; B.push_back(ksm(a[0], mod - 2));\n    int n = a.size() << 1;\n    for(int mx = 2; mx < n; mx <<= 1) {\n        poly C = a; C.resize(mx);\n        int len = getrev(mx << 1);\n        NTT(B, len, 1), NTT(C, len, 1);\n        FOR(i, 0, len - 1) B[i] = mll(B[i], del(2, mll(B[i], C[i])));\n        NTT(B, len, 0); B.resize(mx);\n    }\n    return B.resize(a.size()), B;\n}\n\npoly LN(const poly A) {\n    poly C = IG(DI(A) * INV(A));\n    return C.resize(A.size()), C;\n}\n\npoly EXP(const poly A) {\n    poly B; B.push_back(1);\n    int n = A.size() << 1;\n    for(int mx = 2; mx < n; mx <<= 1) {\n        poly C = A; \n        C.resize(mx), B.resize(mx);\n        B = B * (poly(1, 1) - LN(B) + C);\n    }\n    return B.resize(A.size()), B;\n}\n\npoly Mulx(poly A) {\n    A.push_back(0);\n    ROF(i, A.size() - 1, 1) A[i] = A[i - 1];\n    return A;\n}\n\npoly Divx(poly A) {\n    FOR(i, 0, A.size() - 2) A[i] = A[i + 1];\n    A.pop_back();\n    return A;\n}\n\nvoid print(poly A) {FOR(i, 0, A.size() - 1) cout << A[i] << \" \\n\"[i == ii];}\n\ninline void solve() {\n    int n = rd, m = rd;\n    pref(n << 2);\n    poly F, G;\n    FOR(i, 0, m - 1) F.push_back(fv[i]);\n    F.resize(n + 1), F = EXP(LN(F) * n);\n    FOR(i, 0, m - 2) G.push_back(fv[i]);\n    G.resize(n + 1), G = EXP(LN(G) * n);\n    cout << mll(del(F[n - 2], G[n - 2]), fc[n - 2]) << '\\n';\n    return ;\n}\n```",
        "postTime": 1639789223,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P5219 \u65e0\u804a\u7684\u6c34\u9898 I \u9898\u89e3"
    },
    {
        "content": "[My blog](https://ctz45562.github.io/2020/01/13/\u6d1b\u8c37-P5219-\u65e0\u804a\u7684\u6c34\u9898-I/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5218)\n\n\u8f6c\u6362\u4e00\u4e0b\uff0c\u6700\u5927\u5ea6\u6570\u6070\u597d\u4e3a$m$\u7684\u65b9\u6848\u6570\u5373\u4e3a\u6700\u5927\u5ea6\u6570\u4e0d\u8d85\u8fc7$m$\u7684\u65b9\u6848\u6570\u51cf\u53bb\u4e0d\u8d85\u8fc7$m-1$\u7684\u65b9\u6848\u6570\u3002\n\n\u65e0\u6839\u6811\uff1f\u6709\u6807\u53f7\uff1f\u5ea6\u6570\uff1f\u6570\u6570\uff1f$prufer$\u5e8f\u5217\uff01\n\n\u6700\u5927\u5ea6\u6570\u4e0d\u8d85\u8fc7$m$\u7684\u65b9\u6848\u6570\u5c31\u662f\u503c\u57df\u4e3a$[1,n]\\bigcap \\mathbb{Z}$\u3001\u957f\u5ea6\u4e3a$n-2$\u3001\u4efb\u610f\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7$m-1$\u7684\u5e8f\u5217\u4e2a\u6570\u3002\n\n\u5982\u679c\u6bcf\u4e2a\u70b9\u5ea6\u6570\u662f\u786e\u5b9a\u7684\uff0c\u5176\u65b9\u6848\u6570\u4e3a\uff1a$\\dfrac{(n-2)!}{\\prod\\limits_{i=1}^n(d_i-1)!}$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a$EGF$\uff1a$F(x)=\\sum\\limits_{i=0}^{m-1}\\dfrac{x^i}{i!}$\uff0c$i$\u8868\u793a\u4e00\u4e2a\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u8003\u8651$F\\times F$\u7684\u610f\u4e49\uff1a\u4e00\u4e2a$\\dfrac{x^i}{i!}$\u548c$\\dfrac{x^j}{j!}$\u76f8\u4e58\uff0c\u5bf9$x^{i+j}$\u6709$\\dfrac{1}{i!j!}$\u7684\u8d21\u732e\u3002\n\n\u8fd9\u548c\u524d\u9762\u786e\u5b9a\u5ea6\u6570\u7684\u5f0f\u5b50\u5f88\u543b\u5408\u3002\u4e8e\u662f\u7b54\u6848\u4e3a$(n-2)![x^{n-2}]F^n(x)$\u3002\n\n\u591a\u9879\u5f0f\u5feb\u901f\u5e42\u5373\u53ef\u3002\u61d2\u5f97\u5199$\\ln$\u548c$\\exp$\uff0c\u76f4\u63a5$O(n\\log^2n)$\u66b4\u529b\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 140005\t\n#define inf 0x3f3f3f3f\n\nconst int mod = 998244353;\nconst int g = 3;\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ninline int quickpow(int x,int y=mod-2){\n\tint ans=1;\n\twhile(y){\n\t\tif(y&1)ans=1ll*ans*x%mod;\n\t\tx=1ll*x*x%mod,y>>=1;\n\t}\n\treturn ans;\n}\nconst int ig = quickpow(g);\nint tr[maxn];\ninline int qm(int x){return x>=mod?x-mod:x;}\nvoid NTT(int *f,int n,bool t){\n\tfor(register int i=0;i<n;++i)if(i<tr[i])swap(f[i],f[tr[i]]);\n\tfor(register int p=2;p<=n;p<<=1){\n\t\tint len=p>>1,o=quickpow(t?ig:g,(mod-1)/p);\n\t\tfor(register int i=0;i<n;i+=p){\n\t\t\tint gen=1,cop;\n\t\t\tfor(register int j=i;j<i+len;++j){\n\t\t\t\tcop=1ll*f[j+len]*gen%mod,gen=1ll*gen*o%mod;\n\t\t\t\tf[j+len]=qm(f[j]+mod-cop),f[j]=qm(f[j]+cop);\n\t\t\t}\n\t\t}\n\t}\n\tif(t){\n\t\tint inv=quickpow(n);\n\t\tfor(register int i=0;i<n;++i)f[i]=1ll*f[i]*inv%mod;\n\t}\n}\nint F[maxn];\nvoid Pow(int *g,int n,int y){\n\tint lim=1;\n\twhile(lim<n<<1)lim<<=1;\n\tfor(register int i=0;i<lim;++i)tr[i]=(tr[i>>1]>>1)|(i&1?lim>>1:0);\n\tNTT(g,lim,0),--y;\n\tfor(register int i=0;i<lim;++i)F[i]=g[i];\n\twhile(y){\n\t\tif(y&1){\n\t\t\tfor(register int i=0;i<lim;++i)F[i]=1ll*F[i]*g[i]%mod;\n\t\t\tNTT(F,lim,1);\n\t\t\tfor(register int i=n;i<lim;++i)F[i]=0;\n\t\t\tNTT(F,lim,0);\n\t\t}\n\t\tfor(register int i=0;i<lim;++i)g[i]=1ll*g[i]*g[i]%mod;\n\t\tNTT(g,lim,1);\n\t\tfor(register int i=n;i<lim;++i)g[i]=0;\n\t\tNTT(g,lim,0);\n\t\ty>>=1;\n\t}\n\tNTT(F,lim,1);\n\tfor(register int i=0;i<n;++i)g[i]=F[i],F[i]=0;\n\tfor(register int i=n;i<lim;++i)g[i]=F[i]=0;\n}\nint fac[maxn]={1},inv[maxn],f[maxn];\ninline int calc(int n,int m){\n\tmemset(f,0,sizeof f);\n\tfor(register int i=0;i<m;++i)f[i]=inv[i];\n\tPow(f,n-1,n);\n\treturn 1ll*fac[n-2]*f[n-2]%mod;\n}\nint main(){\n\tint n=read(),m=read(),t=max(n,m);\n\tfor(register int i=1;i<=t;++i)fac[i]=1ll*fac[i-1]*i%mod;\n\tinv[t]=quickpow(fac[t]);\n\tfor(register int i=t-1;~i;--i)inv[i]=1ll*inv[i+1]*(i+1)%mod;\n\tprintf(\"%d\\n\",qm(calc(n,m)+mod-calc(n,m-1)));\n}\n```",
        "postTime": 1578883590,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5219 \u3010\u65e0\u804a\u7684\u6c34\u9898 I\u3011"
    }
]