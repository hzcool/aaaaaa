[
    {
        "content": "# Description\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u4ee5\u53ca\u6a21\u6570 $mod$\u3002\u5bf9\u6811\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u8981\u6c42\u51fa\u4ee5\u8be5\u70b9\u4e3a\u7aef\u70b9\uff0c\u4e14\u6743\u503c\u548c\u6a21 $mod$ \u7684\u4f59\u6570\u6700\u5927\u7684\u8def\u5f84\u3002\n\n$$\n1 \\le n \\le 10 ^5, mod \\in \\{2, 32, 65536\\}\n$$\n\n# Solution\n\n\u70b9\u5206\u6cbb\u3002\u5bf9\u5f53\u524d\u4ee5 $rt$ \u4e3a\u6839\u7684\u6811\u4e2d\u6240\u6709\u8282\u70b9\u5148\u5f97\u51fa\u4ed6\u4eec\u5230\u6839\u7684\u8ddd\u79bb $dis _i$\uff08\u5f53\u7136\u662f\u5728\u6a21\u610f\u4e49\u4e0b\u7684\uff09\uff0c\u7136\u540e\u626b\u4e00\u68f5\u5b50\u6811\u5185\u7684\u70b9\u770b\u5982\u4f55\u6c42\u7b54\u6848\u3002\u53d1\u73b0\u628a\u4e24\u6761\u8def\u5f84\u7ec4\u5408\u8d77\u6765\u6700\u591a\u53ea\u4f1a\u8d85\u51fa\u6a21\u6570\u4e00\u6b21\uff0c\u6240\u4ee5\u5bf9\u8d85\u51fa\u6a21\u6570\u548c\u4e0d\u8d85\u51fa\u6a21\u6570\u5206\u522b\u8ba8\u8bba\uff0c\u7528 `std::multiset` \u7ef4\u62a4\u5373\u53ef\u3002\uff08\u6c42\u7b54\u6848\u524d\uff0c\u5148\u5c06\u5b50\u6811\u5185\u4ece `std::multiset` \u91cc\u9762\u5168\u90e8\u5220\u9664\uff09\n\n\u4e0d\u8981\u6f0f\u4e86\u6839\u7684\u7b54\u6848\uff0c\u5373\u6b64\u65f6 `std::multiset` \u91cc\u7684\u6700\u5927\u503c\u3002\n\n$O(n \\log ^2 n)$\u3002\n\n# Code\n\n\u7adf\u7136\u53ea\u6709 116 \u884c...\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <bitset>\n#include <set>\n\n#define fir first\n#define sec second\n\nusing namespace std;\nusing pii = pair<int, int>;\n\nconst int maxN = 1e5 + 5;\n\nint n, mod, rt, minp, all;\nint size[maxN], dis[maxN], ans[maxN];\nvector<pii> G[maxN];\nbitset<maxN> vis;\nmultiset<int> S;\n\ninline bool Chkmin(auto& x, const auto& y)\n{ return x > y ? x = y, true : false; }\n\ninline bool Chkmax(auto& x, const auto& y)\n{ return x < y ? x = y, true : false; }\n\ninline void Mod(int& x)\n{ x >= mod ? x -= mod : 0; }\n\nvoid Getroot(int u, int fa)\n{\n    int maxp = 0;\n    size[u] = 1;\n    for (auto& v : G[u]) if (v.fir != fa and !vis[v.fir])\n    {\n        Getroot(v.fir, u);\n        size[u] += size[v.fir];\n        Chkmax(maxp, size[v.fir]);\n    }\n    Chkmax(maxp, all - size[u]);\n    if (Chkmin(minp, maxp))\n        rt = u;\n}\n\nvoid DFS(int u, int fa)\n{\n    S.insert(dis[u]);\n    for (auto& v : G[u]) if (v.fir != fa and !vis[v.fir])\n    {\n        Mod(dis[v.fir] = dis[u] + v.sec);\n        DFS(v.fir, u);\n    }\n}\n\nint flag;\n// Insert and Erase\nvoid InEr(int u, int fa)\n{\n    if (flag)\n        S.insert(dis[u]);\n    else\n        S.erase(S.find(dis[u]));\n    for (auto& v : G[u]) if (v.fir != fa and !vis[v.fir])\n        InEr(v.fir, u);\n}\n\nvoid Getans(int u, int fa)\n{\n    Chkmax(ans[u], dis[u] + *--S.upper_bound(mod - dis[u] - 1));\n    Chkmax(ans[u], (dis[u] + *S.rbegin()) % mod);\n    for (auto& v : G[u]) if (v.fir != fa and !vis[v.fir])\n        Getans(v.fir, u);\n}\n\nvoid Div(int u)\n{\n    minp = 1e9, Getroot(u, 0);\n    Getroot(rt, 0);\n    dis[rt] = 0, DFS(rt, 0);\n    for (auto& v : G[rt]) if (!vis[v.fir])\n    {\n        flag = 0, InEr(v.fir, rt);\n        Getans(v.fir, rt);\n        flag = 1, InEr(v.fir, rt);\n    }\n    Chkmax(ans[rt], *S.rbegin());\n    flag = 0, InEr(rt, 0);\n    vis.set(rt);\n    // printf(\"Now Divide %d:\\n\", rt);\n    // for (int i = 1; i <= n; ++i)\n    //     printf(\"ans[%d] is: %d\\n\", i, ans[i]);\n    // for (int i = 1; i <= n; ++i)\n    //     printf(\"dis[%d] is: %d\\n\", i, dis[i]);\n    for (auto& v : G[rt]) if (!vis[v.fir])\n        all = size[v.fir], Div(v.fir);\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"wib.in\", \"r\", stdin);\n    freopen(\"wib.out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr), cout.tie(nullptr);\n    cin >> n >> mod;\n    for (int i = n - 1; i; --i)\n    {\n        int u, v, w;\n        cin >> u >> v >> w;\n        G[u].emplace_back(v, w), G[v].emplace_back(u, w);\n    }\n    all = n, Div(1);\n    for (int i = 1; i <= n; ++i)\n        cout << ans[i] << endl;\n    return 0;\n}\n```",
        "postTime": 1568949004,
        "uid": 91252,
        "name": "EndSaH",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5563 \u3010[Celeste-B]No More Running\u3011"
    },
    {
        "content": "Celeste \u7684\u9898/se\n\n----------------\n\n\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u8bbe $\\text{Dist}(u)$ \u8868\u793a $u$ \u5230\u6839\u7684\u8def\u5f84\u957f $\\bmod\\ m$ \u7684\u503c\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u300c\u5bf9\u4e8e\u6240\u6709\u5728\u4e0d\u540c\u5b50\u6811\u5185\u7684 $u,v$\uff0c $\\text{Dist}(u)+\\text{Dist}(v)$ \u6a21 $m$ \u7684\u6700\u5927\u503c\u300d\u3002\n\n\u5148\u5c06\u6240\u6709 $\\text{Dist}$ \u503c\u5bf9 $m$ \u53d6\u6a21\u3002\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u4e24\u4e2a\u6570\u52a0\u8d77\u6765\u8981\u4e48\u5c0f\u4e8e $m$\uff0c\u8981\u4e48\u5728 $[m,2m)$ \u4e4b\u95f4\u3002\n\n\u679a\u4e3e $u$\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u51fa $<m-\\text{Dist}(u)$ \u7684\u6700\u5927\u7684 $\\text{Dist}$ \u503c\uff0c\u4e8c\u5206\u5373\u53ef\uff1b\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u663e\u7136\u76f4\u63a5\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u6c42\u51fa\u6765\u4ee5\u5b83\u4e3a\u7aef\u70b9\u7684\u6700\u4f18\u8def\u5f84\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5728\u679a\u4e3e\u7aef\u70b9\u65f6\u987a\u4fbf\u7edf\u8ba1\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    for(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\n    for(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\n    return x*f;\n}\n\nint n,mod;\n\nstruct Edge{\n\tint to,cost;\n\tEdge(int T,int C):to(T),cost(C){}\n\tEdge(){}\n};\n\nconst int MN=1e5+5;\nvector<Edge>G[MN];\nint sz[MN],mx[MN],rt,num;\nbool vis[MN];\n\nvoid calcsiz(int u,int fa){\n\tsz[u]=1,mx[u]=0;\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tcalcsiz(v,u);\n\t\tsz[u]+=sz[v],mx[u]=max(mx[u],sz[v]);\n\t}\n\tmx[u]=max(mx[u],num-sz[u]);\n\tif(mx[u]<mx[rt]||rt==0)rt=u;\n}\n\nint dis[MN],cnt;\n\nstruct Node{\n\tint id,val;\n\tNode(int I,int V):id(I),val(V){}\n\tNode(){}\n\tinline bool operator<(const Node &rhs)const{\n\t\treturn val<rhs.val;\n\t}\n};\n\nmultiset<Node>S;\nNode d[MN];\n\n#define Sit multiset<Node>::iterator\n\nvoid calcdis(int u,int fa){\n\td[++cnt]=Node(u,dis[u]%mod);\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i].to,w=G[u][i].cost;\n\t\tif(v==fa||vis[v])continue;\n\t\tdis[v]=(dis[u]+w)%mod,calcdis(v,u);\n\t}\n}\n\nint ans[MN];\n\nvoid dfz(int u,int fa){\n\tS.insert(Node(u,0)),vis[u]=1;\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i].to,w=G[u][i].cost;\n\t\tif(v==fa||vis[v])continue;\n\t\tdis[v]=w%mod,calcdis(v,u);\n\t\tfor(int j=1;j<=cnt;j++)S.insert(d[j]);cnt=0;\n\t}\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i].to,w=G[u][i].cost;\n\t\tif(v==fa||vis[v])continue;\n\t\tdis[v]=w%mod,calcdis(v,u);\n\t\tfor(int j=1;j<=cnt;j++)S.erase(S.find(d[j]));\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tSit it=S.lower_bound(Node(d[j].id,mod-d[j].val%mod));\n\t\t\tassert(it!=S.begin());it--;assert(it->val+d[j].val<mod);\n\t\t\tans[d[j].id]=max(ans[d[j].id],d[j].val+it->val);\n\t\t\tit=S.end();it--;\n\t\t\tans[d[j].id]=max(ans[d[j].id],(d[j].val+it->val)%mod);\n\t\t}\n\t\tfor(int j=1;j<=cnt;j++)S.insert(d[j]);cnt=0;\n\t}\n\tSit it=S.end();it--;\n\tans[u]=max(ans[u],it->val);S.clear();\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tnum=sz[v],rt=0;\n\t\tcalcsiz(v,u),calcsiz(rt,0);\n\t\tdfz(rt,u);\n\t}\n}\n\nsigned main(void){\n\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\",\"r\",stdin);\n#endif\n\t\n\tn=read();mod=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read(),w=read();\n\t\tG[u].push_back(Edge(v,w)),G[v].push_back(Edge(u,w));\n\t}\n\t\n\tnum=n;calcsiz(1,0),calcsiz(rt,0);\n\tdfz(rt,0);\n\t\n\tfor(int i=1;i<=n;i++)cout<<ans[i]<<endl;\n\n    return 0;\n}\n```",
        "postTime": 1636982480,
        "uid": 307453,
        "name": "\u4e91\u6d45\u77e5\u5904",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5563 [Celeste-B]No More Running"
    }
]