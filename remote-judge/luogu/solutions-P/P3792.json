[
    {
        "content": " ![](https://cdn.luogu.com.cn/upload/pic/5779.png) \n\n\u5176\u5b9eFlip Flappers\u8fd9\u4e2a\u756a\n\n\u8bb2\u7684\u5c31\u662f\u7cd6\u679c\u5c4b\u7684\u6545\u4e8b\uff0c\u8fd9\u70b9\u4eceED\u4e0a\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\n\n\u73b0\u5b9e\u751f\u6d3b\u548c\u5e7b\u60f3\u4e16\u754c\u76f8\u90bb\uff0ccocona\u53ef\u4ee5\u5230\u8fbe\u5e7b\u60f3\u4e16\u754c\n\n ![](https://cdn.luogu.com.cn/upload/pic/5780.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/5781.png) \n\n\u7136\u800ccocona\u53ef\u4ee5\u5230\u8fbe\u5e7b\u60f3\u4e16\u754c\u662f\u56e0\u4e3a\u5979\u5988\u662f\u552f\u4e00\u4e00\u4e2a\u53ef\u4ee5\u8054\u901a\u5e7b\u60f3\u4e16\u754c\u548c\u73b0\u5b9e\u4e16\u754c\u7684\u4eba\n\n\u4ece\u6700\u5f00\u59cb\u5c31\u53ef\u4ee5\u53d1\u73b0cocona\u5728\u5947\u602a\u7684\u4e16\u754c\u91cc\u9762\uff0c\u6bd4\u5982\u5979\u7684\u5154\u5b50\u554a\uff0c\u5979\u4f4f\u7684\u5730\u65b9\u554a\u3002\u3002\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/5782.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/5783.png) \n\n\u56e0\u4e3a\u5979\u5988\u4e00\u76f4\u6f5c\u4f0f\u5728\u5979\u8eab\u4f53\u91cc\u9762\u7684\u90a3\u4e2a\u788e\u7247\u4e0a\u3002\u3002\u3002\n\ncocona\u548cpapika\u4e00\u5bf9\u767e\u5408\u7ecf\u8fc7\u8270\u82e6\u6218\u6597\uff0c\u7ec8\u4e8e\u6253\u8d25\u4e86\u5927\u6bcd\u795e\n\n\u8fd9\u4e2a\u5927\u6bcd\u795e\u5c31\u662fmimi\uff0ccocona\u7684\u6bcd\u4eb2\n\n\u7136\u540epapika\u5176\u5b9e\u662f\u4e2a20\u5c81\u7684\u4eba\u4e86\u3002\u3002\u3002\u4e4b\u524d\u7ecf\u8fc7\u4e86\u7384\u5b66\u8fd4\u8001\u8fd8\u7ae5\u4e86\u3002\u3002\u3002\n\n\u6240\u4ee5\u8bf4\u8fd9\u4e2a\u756a\u8bb2\u7684\u662f\u4e24\u4e2a\u4eba\u6740\u4e86\u5176\u4e2d\u4e00\u4e2a\u4eba\u7684\u6bcd\u4eb2\u3002\u3002\u3002\n\n\u6709\u6bd2\u3002\u3002\u3002\n\n\u7136\u540e\u3002\u3002\u3002\n\n\u8fd9\u4e4b\u540e\u5979\u7684\u4e16\u754c\u53d8\u6b63\u5e38\u4e86\u3002\u3002\u3002\n\n\u53d8\u7684\u3002\u3002\u3002\u6b63\u5e38\u4e86\u3002\u3002\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/5784.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/5785.png) \n\n\u90fd\u4ee5\u4e3a\u73b0\u5b9e\u4e16\u754c\u548c\u5e7b\u60f3\u4e16\u754c\u7684\u8054\u7cfb\u5207\u65ad\u4e86\n\n\u4f46\u662f\u6700\u540ecocona\u91cd\u65b0\u89c1\u5230\u4e86papika\u3002\u3002\u3002\n\n\u7136\u540e\u3002\u3002\u3002\u53c8\u56de\u5230\u4e86pure illusion\uff1f\n\n\u6b22\u8fce\u5927\u5bb6\u6765\u7814\u7a76\u8f7b\u62cd\u5b66\n\n\n\u592a\u3002\u3002\u3002\u5389\u5bb3\u4e86\n\n\n\u54e6\u5bf9\u4e86\u5fd8\u4e86\u8bf4\u9898\u89e3\u4e86\n\n\u4e24\u4e2a\u505a\u6cd5\n\n\u7b2c\u4e00\u4e2a\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4min\u533a\u95f4max\u533a\u95f4\u548c\u533a\u95f4\u5e73\u65b9\u548c\n\n\u7136\u540e\u901a\u8fc7min\u548cmax\u7b97\u51fa\u5982\u679c\u8fd9\u4e2a\u662f\u8fde\u7eed\u6bb5\uff0c\u5176\u548c\u548c\u5e73\u65b9\u548c\u5e94\u8be5\u662f\u591a\u5c11\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\n\n\u5927\u6982\u662fhash\u7684\u601d\u60f3\n\n\u8fd8\u6709\u4e00\u4e2a\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4min\u533a\u95f4max\uff0c\u533a\u95f4\u6bcf\u4e2a\u6570\u503c\u524d\u9a71\u4f4d\u7f6e\u7684max\n\n\u4e0d\u8fc7\u8981\u9ebb\u70e6\u4e00\u70b9\n",
        "postTime": 1496152558,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u968f\u673a\u6620\u5c04+\u5f02\u6216\u548c\u5224\u65ad\u8fde\u7eed\uff0c\u7531\u4e8e\u53ef\u4ee5\u65b9\u4fbf\u5730\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u6df7\u4e86\u4e2a\u6700\u4f18\u89e3..\n\n# \u6574\u4f53\u601d\u8def\n\n1. \u628a\u6bcf\u4e2a\u6570\u90fd\u6620\u5c04\u5230\u4e00\u4e2a\u968f\u673a\u6570\u4e0a\u3002\n\n2. \u901a\u8fc7\u6c42\u533a\u95f4\u5185\u539f\u6570\u7684\u548c\u6765\u5224\u65ad\uff0c\u8fd9\u4e2a\u533a\u95f4\u5982\u679c\u8fde\u7eed\uff0c\u503c\u57df\u5e94\u8be5\u5728\u54ea\u4e2a\u533a\u95f4\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u533a\u95f4\u957f\u5ea6\u4e3a $3$\uff0c\u533a\u95f4\u548c\u4e3a $9$\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u8fde\u7eed\uff0c\u503c\u57df\u5c31\u5e94\u8be5\u662f $2$ ~ $4$\u3002\n\n3. \u9884\u5904\u7406\u51fa\u968f\u673a\u5e8f\u5217\u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\uff0c\u8fd9\u4e2a\u533a\u95f4\u5982\u679c\u8fde\u7eed\uff0c\u6620\u5c04\u5230\u7684\u968f\u673a\u6570\u5f02\u6216\u548c\u5e94\u8be5\u662f\u591a\u5c11\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u503c\u57df\u5e94\u8be5\u662f $2$ ~ $4$\uff0c\u6620\u5c04\u5230\u7684\u968f\u673a\u6570\u5206\u522b\u4e3a $p_2,\\,p_3,\\,p_4$\uff0c\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u5f02\u6216\u548c\u7b97\u51fa $p_2\\oplus p_3\\oplus p_4$\uff08$\\oplus$\u8868\u793a\u5f02\u6216\uff09\uff0c\u5982\u679c\u533a\u95f4\u5185\u8fd9\u4e09\u4e2a\u6570\u6620\u5c04\u5230\u7684\u968f\u673a\u6570\u7684\u5f02\u6216\u548c\u7b49\u4e8e $p_2\\oplus p_3\\oplus p_4$\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u533a\u95f4\u662f\u8fde\u7eed\u7684\u3002\n\n\u5e8f\u5217\u7684\u524d\u7f00\u548c\u3001\u5e8f\u5217\u6620\u5c04\u5230\u7684\u968f\u673a\u6570\u7684\u524d\u7f00\u5f02\u6216\u548c\u90fd\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n# \u5177\u4f53\u5b9e\u73b0\u4e0e\u7ec6\u8282\n\n## \u968f\u673a\u6570\u751f\u6210\n\n\u8fd9\u4e2a\u968f\u4fbf\u751f\u6210\u5c31\u597d\u4e86..\u6015\u88ab\u5361\u7684\u8bdd\u53ef\u4ee5\u628a `time(0)` \u4f5c\u4e3a\u751f\u6210\u968f\u673a\u6570\u7684\u53c2\u6570\u4e4b\u4e00\u3002\u63a8\u8350\u7528 unsigned long long \u81ea\u7136\u6ea2\u51fa\uff0c\u4e5f\u53ef\u4ee5\u7528 int \u5bf9\u5927\u8d28\u6570\u53d6\u6a21\uff0cint \u81ea\u7136\u6ea2\u51fa\u8c8c\u4f3c\u8fc7\u4e0d\u4e86\u3002\n\n## \u79bb\u6563\u5316\n\n\u7531\u4e8e\u503c\u57df\u662f $10^9$\uff0c\u80af\u5b9a\u4e0d\u80fd\u751f\u6210 $10^9$ \u4e2a\u968f\u673a\u6570\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\u3002\n\n\u76f4\u63a5\u79bb\u6563\u5316\u7684\u8bdd\u53ef\u80fd\u4f1a\u5bfc\u81f4\u672c\u4e0d\u8fde\u7eed\u7684\u503c\u8fde\u7eed\uff0c\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6cd5\u3002\n\n### \u4e00\u3001\n\n\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u4f18\u7f8e\u81ea\u7136\u3002\u79bb\u6563\u5316\u7684\u65f6\u5019\u628a\u6bcf\u4e2a\u503c+1\u653e\u5230\u79bb\u6563\u5316\u6570\u7ec4\u91cc\uff0c\u8fd9\u6837\u539f\u672c\u4e0d\u8fde\u7eed\u7684\u6570\u79bb\u6563\u5316\u540e\u4e5f\u4e0d\u8fde\u7eed\u3002\n\n### \u4e8c\u3001\n\n\u8fd9\u79cd\u65b9\u6cd5\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\uff0c\u7136\u800c\u5e38\u6570\u4f1a\u5c0f\u4e00\u4e9b\u3002\u8bb0\u5f55\u4e00\u4e0b\u79bb\u6563\u5316\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u662f\u5426\u548c\u524d\u4e00\u4e2a\u6570\u4e00\u6837\uff0c\u5982\u679c\u79bb\u6563\u5316\u7528\u7684\u6570\u7ec4\u53eb\u505a $lsh$\uff08\u5df2\u7ecf\u6392\u597d\u5e8f\uff09\uff0c\u4ee4 $dif_i=[lsh_i=lsh_{i-1}]$\uff0c\u6c42\u51fa $dif$ \u7684\u524d\u7f00\u548c $blo_i$ \uff0c\u90a3\u4e48 $blo_i$ \u76f8\u540c\u7684\u6570\u5c31\u662f\u5728\u4e00\u4e2a\u8fde\u7eed\u5757\u91cc\u7684\u3002\u4ee4 $f_i=[blo_{a_i}=blo_{a_{i-1}}]$\uff08\u4e5f\u5c31\u662f\u8fd9\u4e00\u4f4d\u662f\u5426\u548c\u524d\u4e00\u4f4d\u5728\u4e00\u4e2a\u8fde\u7eed\u5757\u91cc\uff09\uff0c\u518d\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 $f$ \u7684\u524d\u7f00\u548c\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u503c\u662f\u5426\u90fd\u5728\u540c\u4e00\u4e2a\u8fde\u7eed\u5757\u91cc\u3002\n\n## \u4fee\u6539\n\n\u4fee\u6539\u7684\u65f6\u5019\u5982\u679c\u662f\u7528\u65b9\u6cd5\u4e00\u79bb\u6563\u5316\u7684\uff0c\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u66f4\u65b0\u548c\u8fd8\u6709\u5f02\u6216\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u662f\u7528\u65b9\u6cd5\u4e8c\u79bb\u6563\u5316\u7684\uff0c\u8fd8\u8981\u66f4\u65b0\u4fee\u6539\u7684\u4f4d\u7f6e\u4ee5\u53ca\u4fee\u6539\u7684\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684 $f$\u3002\n\n## \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u5f02\u6216\u548c\n\n\u8fd9\u4e2a\u8ddf\u7ef4\u62a4\u524d\u7f00\u548c\u662f\u4e00\u6837\u7684..\u628a+\u6362\u6210^\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u53c2\u8003\u4ee3\u7801\n\n\u7531\u4e8e\u6211\u65b9\u6cd5\u4e8c\u7684\u4ee3\u7801\u5199\u7684\u592a\u4e11\u4e86\uff0c\u8fd9\u91cc\u5c31\u53ea\u653e\u65b9\u6cd5\u4e00\u7684\u4ee3\u7801..\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cctype>\n#include <ctime>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N=500010;\n\ntypedef unsigned long long ull;\n\nint read()\n{\n\tint out=0;\n\tchar c;\n\twhile (!isdigit(c=getchar()));\n\tfor (;isdigit(c);c=getchar()) out=out*10+c-'0';\n\treturn out;\n}\n\nvoid asum(int p,int x); //\u7ef4\u62a4\u548c\u7684\u6811\u72b6\u6570\u7ec4\null qsum(int p);\nvoid axor(int p,ull x); //\u7ef4\u62a4\u5f02\u6216\u548c\u7684\u6811\u72b6\u6570\u7ec4\null qxor(int p);\n\nint n,m,a[N],lsh[N<<2],tot,op[N],x[N],y[N]; //op\u3001x\u3001y\u662f\u5148\u628a\u8be2\u95ee\u5b58\u4e0b\u6765\uff0c\u65b9\u4fbf\u79bb\u6563\u5316\null p[N<<2],pre[N<<2],sum[N],xsum[N]; //p\u662f\u968f\u673a\u6570\uff0cpre\u662f\u968f\u673a\u6570\u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u540e\u9762\u4e24\u4e2a\u662f\u6811\u72b6\u6570\u7ec4\n\nint main()\n{\n\tint i,l,r,mid;\n\t\n\tn=read();\n\tm=read();\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tlsh[++tot]=a[i]=read();\n\t\tlsh[++tot]=a[i]+1; //\u79bb\u6563\u5316\u7684\u65f6\u5019\u628a\u503c+1\u4e5f\u653e\u8fdb\u53bb\uff0c\u8fd9\u6837\u4e0d\u8fde\u7eed\u7684\u503c\u79bb\u6563\u5316\u540e\u4e5f\u4e0d\u8fde\u7eed\n\t}\n\t\n\tfor (i=1;i<=m;++i)\n\t{\n\t\top[i]=read();\n\t\tx[i]=read();\n\t\ty[i]=read();\n\t\tif (op[i]==1)\n\t\t{\n\t\t\tlsh[++tot]=y[i];\n\t\t\tlsh[++tot]=y[i]+1;\n\t\t}\n\t}\n\t\n\tsort(lsh+1,lsh+tot+1);\n\ttot=unique(lsh+1,lsh+tot+1)-lsh;\n\t\n    p[0]=time(0); //~~\u6b22\u8fce\u5927\u5bb6\u6765\u5361\u6211~~\u5982\u679c\u771f\u88ab\u5361\u4e86\u6211\u5c31\u6362\u6210\u6885\u68ee\u65cb\u8f6c\u597d\u4e86..\n\tfor (i=1;i<tot;++i)\n\t{\n\t\tp[i]=p[i-1]*1000000007+19260817; //\u751f\u6210\u968f\u673a\u6570\n\t\tpre[i]=pre[i-1]^p[i]; //\u6c42\u968f\u673a\u5e8f\u5217\u7684\u524d\u7f00\u5f02\u6216\u548c\n\t}\n\t\n\tfor (i=1;i<=n;++i)\n\t{\n\t\ta[i]=lower_bound(lsh+1,lsh+tot,a[i])-lsh; //\u79bb\u6563\u5316\n\t\tasum(i,a[i]); //\u521d\u59cb\u5316\u524d\u7f00\u548c\n\t\taxor(i,p[a[i]]); //\u521d\u59cb\u5316\u524d\u7f00\u5f02\u6216\u548c\n\t}\n\t\n\tfor (i=1;i<=m;++i)\n\t{\n\t\tif (op[i]==1)\n\t\t{\n\t\t\ty[i] = lower_bound(lsh + 1, lsh + tot, y[i]) - lsh;\n\t\t\tasum(x[i],y[i]-a[x[i]]); //\u66f4\u65b0\u524d\u7f00\u548c\n\t\t\taxor(x[i],p[y[i]]^p[a[x[i]]]); //\u66f4\u65b0\u524d\u7f00\u5f02\u6216\u548c\n\t\t\ta[x[i]]=y[i]; //\u66f4\u65b0\u5355\u70b9\u7684\u503c\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmid=(qsum(y[i])-qsum(x[i]-1))/(y[i]-x[i]+1); //\u7b97\u51fal\u3001r\uff0c\u4ee3\u8868\u5982\u679c\u533a\u95f4\u8fde\u7eed\uff0c\u503c\u57df\u7684\u8303\u56f4\n\t\t\tl=mid-(y[i]-x[i])/2;\n\t\t\tif ((y[i]-x[i])&1) r=mid+(y[i]-x[i])/2+1;\n\t\t\telse r=mid+(y[i]-x[i])/2;\n\t\t\tif (l<=0||r>=tot) puts(\"yuanxing\");\n\t\t\telse if ((qxor(y[i])^qxor(x[i]-1))==(pre[r]^pre[l-1])) puts(\"damushen\"); //\u5224\u65ad\u5b9e\u9645\u7684\u533a\u95f4\u5f02\u6216\u548c\u4e0e\u503c\u57df\u5185\u5f02\u6216\u548c\u662f\u5426\u76f8\u7b49\n\t\t\telse puts(\"yuanxing\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\nvoid asum(int p,int x)\n{\n\tfor (;p<=n;p+=(p&-p)) sum[p]+=x;\n}\null qsum(int p)\n{\n\tull out=0;\n\tfor (;p;p-=(p&-p)) out+=sum[p];\n\treturn out;\n}\n\nvoid axor(int p,ull x)\n{\n\tfor (;p<=n;p+=(p&-p)) xsum[p]^=x;\n}\null qxor(int p)\n{\n\tull out=0;\n\tfor (;p;p-=(p&-p)) out^=xsum[p];\n\treturn out;\n}\n```",
        "postTime": 1547549149,
        "uid": 49742,
        "name": "ouuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "**\u8fd9\u4e00\u9053\u9898\u7684\u4fdd\u8bc1\u6b63\u786e\u6027\u505a\u6cd5\u3002**\n\n\u6211\u4eec\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\uff0c\u82e5\u6700\u5927\u6700\u5c0f\u4e4b\u5dee\u7b49\u4e8e\u5e8f\u5217\u957f\u5ea6\u4e14\u5e8f\u5217\u4e2d\u65e0\u91cd\u590d\u5143\u7d20\uff0c\u5219\u4e00\u5b9a\u53ef\u884c\uff0c\u90a3\u4e48\uff0c\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u70b9\u524d\u9a71\uff08\u6307\u5728\u5b83\u4e4b\u524d\u548c\u5b83\u7684\u6743\u503c\u76f8\u540c\u7684\u5143\u7d20\uff09\u5373\u53ef\uff08~~\u60ef\u7528\u5957\u8def~~\uff09\uff0c\u67e5\u8be2\u533a\u95f4\u5185\u524d\u9a71\u6700\u5927\u503c\u662f\u5426\u518d\u533a\u95f4\u5de6\u7aef\u5373\u53ef\u3002\n\n\u7136\u540e\u6253\u4e86\u4e00\u4efd\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff0c\u53d1\u73b0MLE\u4e863\u4e2a\u70b9\uff0c\u53ea\u670970\u5206\uff0c\u5bf9\u4e8e\u79bb\u6563\u5316\u4e2d\u7684map\u548c\u8bb0\u5f55\u524d\u9a71\u7684set\uff0c\u505a\u4e00\u4e2a\u5185\u5b58\u56de\u6536\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <set>\n#include <map>\n#include <cstdio>\nusing namespace std;\nconst int Maxn=500000;\nint n,m;\nmap<int,int> id_buc;\nset<int> num[Maxn+5];\nint sta[Maxn+5],top;\nint a[Maxn+5],b[Maxn+5],pre[Maxn+5];\nint id_tot;\nint get_id(int x){\n\tif(id_buc.count(x)>0){\n\t\treturn id_buc[x];\n\t}\n\tif(top>0){\n\t\treturn id_buc[x]=sta[top--];\n\t}\n\tid_tot++;\n\tnum[id_tot].insert(0);\n\treturn id_buc[x]=id_tot;\n}\nstruct Segment_Node_Val{\n\tint minn,maxn;\n\tint pre_max;\n};\nSegment_Node_Val make_SNV(int val,int pre){\n\tstatic Segment_Node_Val ans;\n\tans.minn=ans.maxn=val;\n\tans.pre_max=pre;\n\treturn ans;\n}\nstruct Segment_Node{\n\tSegment_Node_Val val;\n}seg[1048577];\nint mn(int a,int b){\n\treturn a<b?a:b;\n}\nint mx(int a,int b){\n\treturn a>b?a:b;\n}\nSegment_Node_Val push_up(Segment_Node_Val p,Segment_Node_Val q){\n\tSegment_Node_Val ans;\n\tans.minn=mn(p.minn,q.minn);\n\tans.maxn=mx(p.maxn,q.maxn);\n\tans.pre_max=mx(p.pre_max,q.pre_max);\n\treturn ans;\n}\nvoid build(int root,int left,int right){\n\tif(left==right){\n\t\tseg[root].val=make_SNV(a[left],pre[left]);\n\t\treturn;\n\t}\n\tint mid=(left+right)>>1;\n\tbuild(root<<1,left,mid);\n\tbuild(root<<1|1,mid+1,right);\n\tseg[root].val=push_up(seg[root<<1].val,seg[root<<1|1].val);\n}\nvoid update(int root,int x,Segment_Node_Val v,int left=1,int right=n){\n\tif(left==right){\n\t\tseg[root].val=v;\n\t\treturn;\n\t}\n\tint mid=(left+right)>>1;\n\tif(x<=mid){\n\t\tupdate(root<<1,x,v,left,mid);\n\t}\n\telse{\n\t\tupdate(root<<1|1,x,v,mid+1,right);\n\t}\n\tseg[root].val=push_up(seg[root<<1].val,seg[root<<1|1].val);\n}\nSegment_Node_Val query(int root,int l,int r,int left=1,int right=n){\n\tif(l<=left&&r>=right){\n\t\treturn seg[root].val;\n\t}\n\tint mid=(left+right)>>1;\n\tif(r<=mid){\n\t\treturn query(root<<1,l,r,left,mid);\n\t}\n\tif(l>mid){\n\t\treturn query(root<<1|1,l,r,mid+1,right);\n\t}\n\treturn push_up(query(root<<1,l,r,left,mid),query(root<<1|1,l,r,mid+1,right));\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=get_id(a[i]);\n\t\tpre[i]=*(--num[b[i]].end());\n\t\tnum[b[i]].insert(i);\n\t}\n\tbuild(1,1,n);\n\tint op,l,r;\n\tset<int>::iterator it;\n\tSegment_Node_Val tmp;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1){\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tit=num[b[l]].find(l);\n\t\t\tit++;\n\t\t\tif(it!=num[b[l]].end()){\n\t\t\t\tpre[(*it)]=pre[l];\n\t\t\t\tupdate(1,(*it),make_SNV(a[*it],pre[*it]));\n\t\t\t}\n\t\t\tit--;\n\t\t\tnum[b[l]].erase(it);\n\t\t\tif(num[b[l]].size()==1){\n\t\t\t\tid_buc.erase(a[l]);\n\t\t\t\tsta[++top]=b[l];\n\t\t\t}\n\t\t\ta[l]=r;\n\t\t\tb[l]=get_id(a[l]);\n\t\t\tnum[b[l]].insert(l);\n\t\t\tit=num[b[l]].find(l);\n\t\t\tit--;\n\t\t\tpre[l]=(*it);\n\t\t\tit++;\n\t\t\tit++;\n\t\t\tif(it!=num[b[l]].end()){\n\t\t\t\tpre[*it]=l;\n\t\t\t\tupdate(1,*it,make_SNV(a[*it],pre[*it]));\n\t\t\t}\n\t\t\tupdate(1,l,make_SNV(a[l],pre[l]));\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\ttmp=query(1,l,r);\n\t\t\tif(tmp.maxn-tmp.minn+1==r-l+1&&tmp.pre_max<l){\n\t\t\t\tputs(\"damushen\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tputs(\"yuanxing\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1580308446,
        "uid": 33362,
        "name": "Suiseiseki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u6709\u4e00\u79cd\u7b80\u5355\u7684\u54c8\u5e0c\uff1a\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u548c\u533a\u95f4\u5e73\u65b9\u548c\u533a\u95f4\u5f02\u6216\u548c\n\n\u5e73\u65b9\u548c\u7528\u81ea\u7136\u6ea2\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\u67e5\u8be2\u65f6\u901a\u8fc7\u533a\u95f4\u548c\u6c42\u51fa\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u662f\u591a\u5c11\n\n\u5224\u65ad\u4e00\u4e0b\u5e73\u65b9\u548c\u5f02\u6216\u548c\u662f\u5426\u90fd\u6ee1\u8db3\u6761\u4ef6\n\n\u7136\u540e\u5c31\u8fc7\u4e86\n\n\u5e38\u6570\u5f88\u5c0f\n\n\u76ee\u524d\u8fd8\u6ca1\u6709\u88ab\u5361\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 500005;\nint n;\nint a[N];\nlong long tr1[N];\nint tr2[N];\nunsigned long long tr3[N]; \n\nint sm2(int x) {\n\tswitch(x&3) {\n\t\tcase 0: return x;\n\t\tcase 1: return 1;\n\t\tcase 2: return x+1;\n\t\tcase 3: return 0;\n\t\tdefault: return -1;\n\t}\n}\n\nunsigned long long sm3(int p) {\n\tunsigned long long a = (long long)p*(p+1);\n\tunsigned long long b = p*2+1;\n\tif (a%2 == 0) {\n\t\ta /= 2;\n\t}\n\telse {\n\t\tb /= 2;\n\t}\n\tif (a%3 == 0) {\n\t\ta /= 3;\n\t}\n\telse {\n\t\tb /= 3;\n\t}\n\treturn a*b;\n}\n\nsigned main() {\n\tint m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\",a+i);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tint p = i;\n\t\twhile (p <= n) {\n\t\t\ttr1[p] += a[i];\n\t\t\ttr2[p] ^= a[i];\n\t\t\ttr3[p] += (unsigned long long)a[i]*a[i];\n\t\t\tp += p&-p;\n\t\t}\n\t}\n\twhile (m--) {\n\t\tint op,l,r;\n\t\tscanf(\"%d%d%d\",&op,&l,&r);\n\t\tif (op == 1) {\n\t\t\tint p = l;\n\t\t\twhile (p <= n) {\n\t\t\t\ttr1[p] += r-a[l];\n\t\t\t\ttr2[p] ^= r^a[l];\n\t\t\t\ttr3[p] += (unsigned long long)r*r-(unsigned long long)a[l]*a[l];\n\t\t\t\tp += p&-p;\n\t\t\t}\n\t\t\ta[l] = r;\n\t\t}\n\t\telse {\n\t\t\tlong long as1 = 0;\n\t\t\tint as2 = 0;\n\t\t\tunsigned long long as3 = 0;\n\t\t\tint ll = l;\n\t\t\tint rr = r;\n\t\t\twhile (rr >= ll) {\n\t\t\t\tas1 += tr1[rr];\n\t\t\t\tas2 ^= tr2[rr];\n\t\t\t\tas3 += tr3[rr];\n\t\t\t\trr -= rr&-rr;\n\t\t\t}\n\t\t\tll--;\n\t\t\twhile (ll > rr) {\n\t\t\t\tas1 -= tr1[ll];\n\t\t\t\tas2 ^= tr2[ll];\n\t\t\t\tas3 -= tr3[ll];\n\t\t\t\tll -= ll&-ll;\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tas1 *= 2;\n\t\t\tif (as1%(r-l+1) == 0) {\n\t\t\t\tint fr = as1/(r-l+1)-(r-l);\n\t\t\t\tif (fr%2 == 0) {\n\t\t\t\t\tfr /= 2;\n\t\t\t\t\tif ((sm2(fr-1)^sm2(fr+r-l)) == as2 && sm3(fr+r-l)-sm3(fr-1) == as3) {\n\t\t\t\t\t\tans = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ans) {\n\t\t\t\tputs(\"damushen\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tputs(\"yuanxing\");\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1596185905,
        "uid": 120033,
        "name": "iuyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u7ebf\u6bb5\u6811+\u5e26\u4fee\u83ab\u961f\n\n\u8003\u8651\u5230\u53ea\u8981\u4f7f\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u7b49\u4e8e\u533a\u95f4\u5927\u5c0f\uff0c\u5e76\u4e14\u533a\u95f4\u5185\u65e0\u91cd\u590d\u6570\u5b57\u3002\n\n\u533a\u95f4\u6781\u503c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u65e0\u91cd\u590d\u6570\u5b57\u53ef\u4ee5\u7528\u5e26\u4fee\u83ab\u961f\u641e\u5b9a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n)$\n\n\u6ce8\u610f\uff1a\u7406\u8bba\u4e0a\u5757\u957f\u4e3a$n^{\\frac 23}$\u6700\u4f73\uff0c\u53ef\u662f\u8fd9\u91cc\u53ea\u6709$n^{\\frac 12}$\u80fd\u8fc7\uff08\u4e0d\u5438\u6c27\u90fd\u80fd\u8fc7\uff01\uff09\n\n```cpp\n#include<bits/stdc++.h>\nconst int maxn=5*1e5+10;\nstruct node{\n\tint mi,mx;\n}tr[maxn<<2];\nint n,m,a[maxn];\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\ninline void build(int h,int l,int r){\n\tif(l==r){\n\t\ttr[h].mi=tr[h].mx=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(h<<1,l,mid);\n\tbuild(h<<1|1,mid+1,r);\n\ttr[h].mi=std::min(tr[h<<1].mi,tr[h<<1|1].mi);\n\ttr[h].mx=std::max(tr[h<<1].mx,tr[h<<1|1].mx);\n}\nint ans[maxn],cnt1,cnt2;\nstruct change{\n\tint pos,col;\n}c[maxn];\nstruct quest{\n\tint l,r,id,bl,br,ti;\n}q[maxn];\nint cnt[maxn*50],now,len;\ninline void update(int h,int l,int r,int x,int y){\n\tif(l==r){\n\t\ttr[h].mi=tr[h].mx=y;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)update(h<<1,l,mid,x,y);\n\telse update(h<<1|1,mid+1,r,x,y);\n\ttr[h].mi=std::min(tr[h<<1].mi,tr[h<<1|1].mi);\n\ttr[h].mx=std::max(tr[h<<1].mx,tr[h<<1|1].mx);\n}\ninline int qmax(int h,int l,int r,int x,int y){\n\tif(l>y||r<x)return -1e9;\n\tif(l>=x&&r<=y)return tr[h].mx;\n\tint mid=(l+r)>>1;\n\treturn std::max(qmax(h<<1,l,mid,x,y),qmax(h<<1|1,mid+1,r,x,y));\n}\ninline int qmin(int h,int l,int r,int x,int y){\n\tif(l>y||r<x)return 1e9;\n\tif(l>=x&&r<=y)return tr[h].mi;\n\tint mid=(l+r)>>1;\n\treturn std::min(qmin(h<<1,l,mid,x,y),qmin(h<<1|1,mid+1,r,x,y));\n}\ninline int cmp(quest x,quest y){\n\treturn (x.bl^y.bl)?(x.bl<y.bl):((x.br^y.br)?(x.br<y.br):((x.br&1)?(x.ti<y.ti):(x.ti>y.ti)));\n}\nint main(){\n\tn=read(),m=read();\n\tlen=pow(n,0.5);\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tbuild(1,1,n);\n\tint opt,x,y;\n\tfor(int i=1;i<=m;i++){\n\t\topt=read(),x=read(),y=read();\n\t\tif(opt==1){\n\t\t\tcnt1++;\n\t\t\tc[cnt1].pos=x;\n\t\t\tc[cnt1].col=y;\n\t\t\tupdate(1,1,n,x,y);\n\t\t}else{\n\t\t\tcnt2++;\n\t\t\tq[cnt2].l=x;\n\t\t\tq[cnt2].r=y;\n\t\t\tq[cnt2].id=cnt2;\n\t\t\tq[cnt2].bl=x/len;\n\t\t\tq[cnt2].br=y/len;\n\t\t\tq[cnt2].ti=cnt1;\n\t\t\tans[cnt2]=(qmax(1,1,n,x,y)-qmin(1,1,n,x,y)==y-x);\n\t\t}\n\t}\n\tstd::sort(q+1,q+1+cnt2,cmp);\n\tint l=1,r=0,tim=0;\n\tfor(int i=1;i<=cnt2;i++){\n\t\tif(!ans[q[i].id])continue;\n\t\twhile(l<q[i].l)now-=!(--cnt[a[l++]]);\n\t\twhile(l>q[i].l)now+=!(cnt[a[--l]]++);\n\t\twhile(r<q[i].r)now+=!(cnt[a[++r]]++);\n\t\twhile(r>q[i].r)now-=!(--cnt[a[r--]]);\n\t\twhile(tim>q[i].ti){\n\t\t\tif(q[i].l<=c[tim].pos&&q[i].r>=c[tim].pos){\n\t\t\t\tnow-=!--cnt[a[c[tim].pos]];\n\t\t\t\tnow+=!cnt[c[tim].col]++;\n\t\t\t}\n\t\t\tstd::swap(c[tim].col,a[c[tim].pos]);\n\t\t\ttim--;\n\t\t}\n\t\twhile(tim<q[i].ti){\n\t\t\ttim++;\n\t\t\tif(l<=c[tim].pos&&r>=c[tim].pos){\n\t\t\t\tnow-=!--cnt[a[c[tim].pos]];\n\t\t\t\tnow+=!cnt[c[tim].col]++;\n\t\t\t}\n\t\t\tstd::swap(c[tim].col,a[c[tim].pos]);\n\t\t}\n\t\tans[q[i].id]=(now==q[i].r-q[i].l+1);\n\t}\n\tfor(int i=1;i<=cnt2;i++)\n\t\tif(ans[i])puts(\"damushen\");\n\t\telse puts(\"yuanxing\");\n\treturn 0;\n}\n```",
        "postTime": 1588916720,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u5148\u8f7b\u8f7b\u7684\u65a5\u8d23\u4e00\u4e0b\u8fd9\u9898\u5361\u4e00\u4e2a $nlog(n)$ \u7b97\u6cd5\u5e38\u6570\u7684\u66b4\u884c\u2026\u2026\n\n\n\u5bb9\u6613\u53d1\u73b0\u4e00\u6bb5\u533a\u95f4\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u4e00\u6bb5\u533a\u95f4\u7684 $Max$ \u51cf\u53bb\u4e00\u6bb5\u533a\u95f4\u7684 $Min$ \u7b49\u4e8e\u533a\u95f4\u7684\u957f\u5ea6\uff0c\u4f46\u662f\u53ea\u6ee1\u8db3\u8fd9\u4e2a\u6211\u4eec\u662f\u6ca1\u6cd5\u4fdd\u8bc1\u4ed6\u4e00\u5b9a\u662f\u5bf9\u7684\u2026\u2026\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u91cd\u590d\u7684\u6570\u5b57\n\n\n\u8003\u8651\u4e00\u6bb5\u533a\u95f4\u5982\u679c\u6bcf\u4e2a\u6570\u5b57\u7684 $next$ \u5373\u4e0b\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u90fd $>r$ \u5219\u4e00\u5b9a\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5b57\uff0c\u8fd9\u662f\u7ecf\u5178\u5957\u8def\u3010\u5212\u6389\n\n\n\u90a3\u4e48\u6211\u4eec\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684 $next$ \u7684\u6700\u5c0f\u503c\u5c31\u884c\u8fa3\n\n\n\u6ce8\u610f\u5230\u9700\u8981\u52a8\u6001\u4fee\u6539\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5927\u529b\u5bf9\u6bcf\u4e2a\u5143\u7d20\u5f00\u4e00\u4e2a\u5e73\u8861\u6811\u7ef4\u62a4\u51fa\u6240\u6709\u5143\u7d20\u4ed6\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u5c31\u80fd\u5feb\u901f\u67e5\u8be2\u524d\u9a71\u548c\u540e\u7ee7\u4e86\uff0c\u5f53\u7136\u9700\u8981\u79bb\u6563\u6743\u503c\u3002\n\n\n\u6211\u5f53\u65f6\u8003\u8bd5\u7684\u65f6\u5019\u5927\u529b\u5199\u4e86\u4e00\u53d1\u7136\u540e\u4ea4\u4e0a\u53bb $MLE$ \u4e86\uff0c\u975e\u5e38\u7edd\u671b\uff0c\u53ef\u80fd\u662f STL \u7684\u9505\u5427\u2026\u2026\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u4e2a\u7b97\u6cd5\u662f\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002\n\n\n\u867d\u7136\u6211\u540e\u6765\u4ea4\u7684\u4e5f\u662f hash \u8fc7\u6389\u7684\u672c\u9898\u4f46\u662f\u53ea\u7ef4\u62a4\u548c\uff0c\u5e73\u65b9\u548c\u662f\u80af\u5b9a\u4e0d\u884c\u7684\uff0c\u8fd9\u4e2a\u6982\u7387\u5176\u5b9e\u649e\u4e0a\u7684\u8fd8\u662f\u633a\u5927\u7684\uff0c\u6bd5\u7adf\u662f\u4e00\u5768\u6570\u5b57\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\u5176\u5b9e\u53ef\u4ee5\u7ef4\u62a4\u4e00\u5768\u6570\u5b57\u7684\u5f02\u6216\u548c\u7b49\u7b49\u7b49\u7b49\n\n\n\u653e\u4e00\u4e2a\u7b2c\u4e00\u4e2a\u505a\u6cd5\u7684\u4ee3\u7801\u4f9b\u5bf9\u6b64\u7b97\u6cd5\u611f\u5174\u8da3\u7684\u540c\u5b66\u5b66\u4e60\u501f\u9274,\u5f53\u7136\uff0c\u5e76\u4e0d\u80fd\u8fc7\uff0c\u53ea\u6709 70pts\n\n\n```cpp\n#include <set>\n#include <map>\n#include <stdio.h>\n#include <string.h>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int inf = 1e9+7;\nconst int N = 500000+5;\nconst int M = 1048576+5;\ninline int read() {\n    int x=0,f=1;char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-')f=-1;ch = getchar();}\n    while(ch >='0' && ch <='9'){x=(x<<1)+(x<<3)+ch-'0';ch = getchar();}\n    return x*f;\n}\n\nint Max[M], Min[M], tr[M], nxt[M], last[M];\nint a[N];\n\nmap <int,int> mp;\nset <int> s[M];\n\ninline void build(int k,int l,int r) {\n    if(l==r) {\n        Max[k] = Min[k] = a[l];\n        tr[k] = nxt[l];\n        return;\n    }\n    int mid = (l+r) >> 1;\n    build(k<<1,l,mid);\n    build(k<<1|1,mid+1,r);\n    Max[k] = max(Max[k<<1], Max[k<<1|1]);\n    Min[k] = min(Min[k<<1], Min[k<<1|1]);\n    tr[k] = min(tr[k<<1], tr[k<<1|1]);\n}\n\ninline void change(int k,int l,int r,int pos,int val,int _temp) {\n    if(l==r) {\n        Max[k] = Min[k] = val;\n        tr[k] = _temp;\n        return;\n    }\n    int mid = (l+r) >> 1;\n    if(pos <= mid) change(k<<1,l,mid,pos,val,_temp);\n    else change(k<<1|1,mid+1,r,pos,val,_temp);\n    Max[k] = max(Max[k<<1], Max[k<<1|1]);\n    Min[k] = min(Min[k<<1], Min[k<<1|1]);\n    tr[k] = min(tr[k<<1], tr[k<<1|1]);\n}\n\nvoid ask(int k,int l,int r,int x,int y,int &temp1,int &temp2,int &temp3) { // Max Min nxt_Min\n    if(x <= l && r <= y) {\n        if(temp1 < Max[k]) temp1 = Max[k];\n        if(temp2 > Min[k]) temp2 = Min[k];\n        if(temp3 > tr[k])  temp3 = tr[k];\n        return;\n    }\n    int mid = (l+r) >> 1;\n    if(x <= mid) ask(k<<1, l, mid, x, y, temp1, temp2, temp3);\n    if(y > mid) ask(k<<1|1, mid+1 , r, x, y, temp1, temp2, temp3);\n}\n\nint cnt;\n\nint main() {\n//    freopen(\"tt.in\",\"r\",stdin);\n    int n = read(), m = read();\n    for(int i=1;i<=n;++i) a[i] = read();\n    for(int i=n;i>=1;--i) {\n        if(!mp[a[i]]) {\n            mp[a[i]] = ++cnt;\n            last[cnt] = n + 1;\n            s[cnt].insert(0);\n            s[cnt].insert(n+1);\n        }\n        nxt[i] = last[mp[a[i]]];\n        last[mp[a[i]]] = i;\n    }\n    for(int i=1;i<=n;++i) s[mp[a[i]]].insert(i);\n    build(1,1,n);\n    set <int> :: iterator it;\n    for(int i=1;i<=m;++i) {\n        int opt = read();\n        if(opt == 1) {\n            int x = read(), y = read(), temp = mp[a[x]], temp2, temp3;\n            s[temp].erase(s[temp].find(x));\n            it = s[temp].upper_bound(x);\n            temp3 = (*it); it --;     temp2 = (*it); // temp2  x  temp3\n            if(temp2 > 0) change(1,1,n,temp2,a[temp2],temp3);\n            a[x] = y;\n            \n            if(!mp[y]) {\n                mp[y] = ++cnt;\n                s[cnt].insert(0);\n                s[cnt].insert(n+1);\n            }\n            \n            temp = mp[y];\n            it = s[temp].upper_bound(x); \n            temp3 = (*it); it --; temp2 = (*it); // temp2 x temp3\n            if(temp2 > 0) change(1,1,n,temp2,a[temp2],x);\n            s[temp].insert(x);\n            change(1,1,n,x,a[x], temp3);\n        }\n        else {\n            int temp1 = 0, temp2 = inf, temp3 = inf;\n            int x = read(), y = read();\n            ask(1,1,n,x,y,temp1,temp2,temp3);\n            if(temp1 - temp2 + 1 == y - x + 1 && temp3 > y) puts(\"damushen\");\n            else puts(\"yuanxing\");\n        }\n    }\n}\n```\n\n\n",
        "postTime": 1497277563,
        "uid": 31239,
        "name": "wyx150137",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "~~\u4e8b\u5b9e\u4e0a\u8fd9\u9053\u9898\u6ca1\u4ec0\u4e48\u96be\u7684~~\n\n\u56e0\u4e3a\u4e0d\u592a\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u4e00\u4e9b\u6b63\u786e\u7387\u9ad8\u7684\u5047\u505a\u6cd5\u3002\n\n\u8fd9\u662f lxl \u7ed9\u51fa\u7684\u5b98\u65b9\u9898\u89e3\uff1a\n\n>\u7b2c\u4e00\u4e2a\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4min\u533a\u95f4max\u533a\u95f4\u548c\u533a\u95f4\u5e73\u65b9\u548c\n\n>\u7136\u540e\u901a\u8fc7min\u548cmax\u7b97\u51fa\u5982\u679c\u8fd9\u4e2a\u662f\u8fde\u7eed\u6bb5\uff0c\u5176\u548c\u548c\u5e73\u65b9\u548c\u5e94\u8be5\u662f\u591a\u5c11\n\n\u7136\u540e\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u7528 `unsigned long long` \u81ea\u7136\u6ea2\u51fa\uff0c\u4f1a\u53d1\u73b0\u53ea\u62ff\u4e86 $73 \\ \\text{pts}$\u3002\n\n\u5e94\u8be5\u662f\u8981\u7528\u4e00\u4e2a\u4f18\u79c0\u4e00\u4e9b\u7684\u6a21\u6570\u3002\n\n\u4f46\u662f\u53d6\u6a21\u597d\u6162\u554a\uff01\n\n\u6240\u4ee5\u7ef4\u62a4 $3$ \u6b21\u65b9\u548c\u5c31\u884c\u4e86\u3002\u3002\u3002\n\n\u8bb2\u660e\u767d\u4e00\u70b9\uff0c\u901a\u8fc7\u6c42\u533a\u95f4\u7684 $\\max,\\min$ \u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u7528\u516c\u5f0f\u9a8c\u8bc1\u8fd9\u4e2a\u533a\u95f4\u7684\u548c\u662f\u5426\u7b26\u5408\u8fde\u7eed\u533a\u95f4\u7684\u6027\u8d28\u3002\n\n\u4e8c\u6b21\u65b9\u7684\u516c\u5f0f\uff1a$\\sum_{i=1}^n i^2=\\dfrac n 6 \\times (n+1) \\times (2\\times n+1)$\u3002\n\n\u4e09\u6b21\u65b9\u7684\u516c\u5f0f\uff1a$\\sum_{i=1}^n i^3=(\\sum_{i=1}^n i)^2$\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u62ec\u53f7\u91cc\u7684\u5c31\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u6c42\u548c\u3002\u3002\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u8fa3",
        "postTime": 1587017583,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u6211\u4eec\u4e0d\u7528 \u5e73\u65b9\u548c \u548c \u7acb\u65b9\u548c\uff0c\u6211\u4eec\u7528$2^i$\u6765\u5224\u65ad\u3002\n\n\u5f53\u7136\u5c31\u662f$hash$\u5566\uff01\u3002\n\n\u6211\u4eec\u53d6$4$\u4e2a\u6a21\u6570\uff1a$1000000007,1001100007,1001000107,1010010007\\ \\ $~~\u90fd\u662f\u8d28\u6570~~\u3002\n\n\u5f53\u4e00\u6bb5\u533a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u9664\u4e86**\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c**\u7684\u9650\u5236\u5916\uff0c\u8fd8\u6709$4$\u4e2a$hash$\u503c\u76f8\u540c\u3002\n\n\u6bd4\u5982$\\ x...y\\ $\u662f\u8fde\u7eed\u7684\uff0c\u5219\u6709$$\\sum_{i=x}^y2^i=\\sum_{i=Min}^{Max}2^i=2^{Max+1}-2^{Min}$$\n\n~~~\n#include<cstdio>\nusing namespace std; \ntypedef long long LL;\nconst int N=5e5+50;\nconst int mod[4]={1000000007,1001100007,1001000107,1010010007};\nint n,m,opt,x,y;\ninline int max(int u,int v){return u>v?u:v;}\ninline int min(int u,int v){return u<v?u:v;}\nint tre[N<<3][4],Max[N<<3],Min[N<<3];\nint max_val,min_val,mod_val[4];\nint ksm(int u,int op){\n    int res=1,v=2;\n    for(;u;u>>=1,v=1ll*v*v%mod[op])\n    if(u&1)res=1ll*res*v%mod[op];\n    return res;\n}\nvoid mktree(int now,int ls,int rs){\n    if(ls==rs){\n        scanf(\"%d\",&x);\n        Max[now]=Min[now]=x;\n        for(int i=0;i<4;i++)\n        tre[now][i]=ksm(x,i);\n        return;\n    }\n    int noww=now<<1,nrs=ls+rs>>1;\n    mktree(noww,ls,nrs);\n    mktree(noww|1,nrs+1,rs);\n    for(int i=0;i<4;i++)\n    tre[now][i]=(tre[noww][i]+tre[noww|1][i])%mod[i];\n    Max[now]=max(Max[noww],Max[noww|1]);\n    Min[now]=min(Min[noww],Min[noww|1]);\n}\nvoid change(int now,int ls,int rs,int mb,int val){\n    if(ls>mb||rs<mb)return;\n    if(ls==rs){\n        Max[now]=Min[now]=x;\n        for(int i=0;i<4;i++)\n        tre[now][i]=ksm(x,i);\n        return;\n    }\n    int noww=now<<1,nrs=ls+rs>>1;\n    change(noww,ls,nrs,mb,val);\n    change(noww|1,nrs+1,rs,mb,val);\n    for(int i=0;i<4;i++)\n    tre[now][i]=(tre[noww][i]+tre[noww|1][i])%mod[i];\n    Max[now]=max(Max[noww],Max[noww|1]);\n    Min[now]=min(Min[noww],Min[noww|1]);\n}\nvoid qsth(int now,int ls,int rs,int zuo,int you){\n    if(ls>you||rs<zuo)return;\n    if(ls>=zuo&&rs<=you){\n        max_val=max(max_val,Max[now]);\n        min_val=min(min_val,Min[now]);\n        for(int i=0;i<4;i++)\n        mod_val[i]=(mod_val[i]+tre[now][i])%mod[i];\n        return;\n    }\n    int noww=now<<1,nrs=ls+rs>>1;\n    qsth(noww,ls,nrs,zuo,you);\n    qsth(noww|1,nrs+1,rs,zuo,you);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    mktree(1,1,n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&opt,&x,&y);\n        if(opt==1)change(1,1,n,x,y);\n        else{\n            max_val=0;min_val=mod[3];\n            for(int j=0;j<4;j++)mod_val[j]=0;\n            qsth(1,1,n,x,y);\n            if(max_val-min_val!=y-x){\n                puts(\"yuanxing\");\n                continue;\n            }\n            //\u5224\u65ad\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u662f\u5426\u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\n            y=0;\n            for(int j=0;j<4;j++){\n                x=(ksm(max_val+1,j)-ksm(min_val,j)+mod[j])%mod[j];\n                if(x!=mod_val[j]){y=1;break;}\n                //\u5224\u65ad4\u4e2ahash\u503c\n            }\n            puts(y?\"yuanxing\":\"damushen\");\n        }\n    }\n}\n~~~\n\n~~\u6700\u5927\u70b91800ms\u3002~~\n\n\u6211\u4eec\u5192\u7740WA\u7684\u98ce\u9669\uff0c\u53ea\u7528\u4e86$10^9+7$\u8fd9\u4e00\u4e2a\u6a21\u6570\uff0c\u4e5f\u80fdAC\u3002\n\n~~\u6700\u5927\u70b9400ms\u3002~~\n\n\u6211\u4eec\u53d7\u5230[P5110 \u5757\u901f\u9012\u63a8](https://www.luogu.org/problemnew/show/P5110)\u7684\u542f\u53d1\uff0c\u5c06$2$\u7684\u5e42\u6b21\u5206\u5757\u6253\u8868\u3002\u505a\u5230\u5355\u6b21$O(1)$\u3002\n\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int N=5e5+50;\nconst int M=32767;\nconst int mod=1e9+7;\ntypedef long long LL;\nint n,m,opt,x,y;\nint _2[2][M+1];\n#define getchar() (S==T&&(T=(S=BB)+fread(BB,1,1<<15,stdin),S==T)?EOF:*S++)\nchar BB[1<<20],*S=BB,*T=BB;\ninline void rad(int &_){\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9');_=ch-48;\n    while(ch=getchar(),ch>='0'&&ch<='9')_=_*10+ch-48;\n}\n//inline int max(int u,int v){return u>v?u:v;}\n//inline int min(int u,int v){return u<v?u:v;}\nint tre[N<<3],Max[N<<3],Min[N<<3];\nint max_val,min_val;\nLL mod_val;\nvoid mktree(int now,int ls,int rs){\n    if(ls==rs){\n        rad(x);\n        Max[now]=Min[now]=x;\n        tre[now]=1ll*_2[0][x&M]*_2[1][x>>15]%mod;\n        return;\n    }\n    int noww=now<<1,nrs=(ls+rs)>>1;\n    mktree(noww,ls,nrs);\n    mktree(noww|1,nrs+1,rs);\n    tre[now]=(tre[noww]+tre[noww|1])%mod;\n    Max[now]=max(Max[noww],Max[noww|1]);\n    Min[now]=min(Min[noww],Min[noww|1]);\n}\nvoid change(int now,int ls,int rs,int mb,int val){\n    if(ls>mb||rs<mb)return;\n    if(ls==rs){\n        Max[now]=Min[now]=x;\n        tre[now]=1ll*_2[0][x&M]*_2[1][x>>15]%mod;\n        return;\n    }\n    int noww=now<<1,nrs=(ls+rs)>>1;\n    change(noww,ls,nrs,mb,val);\n    change(noww|1,nrs+1,rs,mb,val);\n    tre[now]=(tre[noww]+tre[noww|1])%mod;\n    Max[now]=max(Max[noww],Max[noww|1]);\n    Min[now]=min(Min[noww],Min[noww|1]);\n}\nvoid qsth(int now,int ls,int rs,int zuo,int you){\n    if(ls>you||rs<zuo)return;\n    if(ls>=zuo&&rs<=you){\n        max_val=max(max_val,Max[now]);\n        min_val=min(min_val,Min[now]);\n        mod_val+=tre[now];\n        return;\n    }\n    int noww=now<<1,nrs=(ls+rs)>>1;\n    qsth(noww,ls,nrs,zuo,you);\n    qsth(noww|1,nrs+1,rs,zuo,you);\n}\nint main(){\n    rad(n);rad(m);\n    _2[0][0]=1;\n    for(int i=1;i<=M;++i)_2[0][i]=(_2[0][i-1]<<1)%mod; \n    _2[1][0]=1;_2[1][1]=(_2[0][M]<<1)%mod;\n    for(int i=2;i<=M;++i)_2[1][i]=1ll*_2[1][i-1]*_2[1][1]%mod;\n    //\u5206\u5757\u6253\u8868\n    mktree(1,1,n);\n    for(int i=1;i<=m;++i){\n        rad(opt);rad(x);rad(y); \n        if(opt==1)change(1,1,n,x,y);\n        else{\n            max_val=mod_val=0;min_val=mod;\n            qsth(1,1,n,x,y);\n            if(max_val-min_val!=y-x){\n                puts(\"yuanxing\");\n                continue;\n            }\n            mod_val%=mod;++max_val;\n            x=(1ll*_2[0][max_val&M]*_2[1][max_val>>15]%mod-1ll*_2[0][min_val&M]*_2[1][min_val>>15]%mod+mod)%mod;\n            puts(x==mod_val?\"damushen\":\"yuanxing\");\n        }\n    }\n}\n```\n\n~~\u62ff\u5230\u4e86\u6700\u4f18\u89e3\u7b2c6(\u76ee\u524d)~~",
        "postTime": 1545560754,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u8003\u8651\u4e71\u641e\uff0c\u600e\u4e48\u4e71\u641e\u5462\uff1f\n\n\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 $f(a)$\uff0c\u628a\u4e00\u4e2a\u5e8f\u5217\u8f6c\u6362\u6210\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4f7f\u5f97\uff1a\n\n 1. \u5982\u679c $a$ \u662f $b$ \u7684\u4e00\u4e2a\u91cd\u6392\u5217\uff0c\u90a3\u4e48 $f(a) = f(b)$\uff1b\n 2. \u5982\u679c $a$ \u4e0d\u662f $b$ \u7684\u4e00\u4e2a\u91cd\u6392\u5217\uff0c\u5927\u6982\u7387\u7684 $f(a) \\neq f(b)$\uff1b\n 3. $f([i,i+1,i+2,\\dots,i+k])$ \u53ef\u4ee5\u5feb\u901f\u8ba1\u7b97\uff1b\n 4. \u5728\u4e00\u4e2a\u5e26\u4fee\u6539\u7684\u5e8f\u5217 $A$ \u4e0a\u9762 $f(A[i:i+k])$ \u53ef\u4ee5\u5feb\u901f\u8ba1\u7b97\uff1b\n\n\u8fd9\u6837\u5b50\u7684\u51fd\u6570\u5f88\u591a\uff0c\u6709\u4e00\u4e2a\u901a\u7528\u51fd\u6570\u7c7b\u578b\u5c31\u662f \n\n$$f_{(k,p)}(A)=\\sum k^{A_i}\\pmod p$$\n\n\u8fd9\u6837\u7684\u51fd\u6570\u5982\u679c\u60f3\u9632\u6b62\u5361\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u8fd9\u4e2a\u54c8\u5e0c\u51fd\u6570\u7136\u540e\u968f\u673a\u9009\u4e24\u4e2a $(k,p)$ \u4f7f\u5f97 $p$ \u662f\u8d28\u6570\uff0c\u4f46\u662f\u5e94\u4e3a\u8fd9\u91cc\u7684\u6570\u636e\u8fd8\u4e0d\u7b97\u6bd2\uff0c\u6240\u4ee5\u5c31\u56fa\u5b9a\u4e24\u4e2a $(k,p)$\uff1a$(37,10^9+7)$ \u548c $(41,10^9+7)$\u3002\n\n\u770b\u4e00\u770b\u4e3a\u4ec0\u4e48\u6ee1\u8db3\u4ee5\u4e0a\u7684\u56db\u4e2a\u6027\u8d28\uff1a\n\n 1. \u663e\u7136\uff0c\u5e94\u4e3a\u52a0\u6cd5\u4ea4\u6362\n 2. \u5e94\u4e3a $f(a) = a^b \\pmod{10^9+7}$ \u7684\u5468\u671f\u5f88\u5927\uff08\u5f53 $a\\neq 1$\uff09\uff0c\u5e76\u4e14 $|f(a)-f(a-1)|$ \u4e5f\u5f88\u5927\uff0c\u540c\u957f\u5ea6\u7684\u649e\u54c8\u5e0c\u5e8f\u5217\u5f88\u5c11\n 3. $k^{[i,i+1,i+2,\\dots,i+k]}$ \u5f62\u6210\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u4e58\u6cd5\u9006\u5143\u5957\u5165\u7b49\u6bd4\u6570\u5217\u548c\u65b9\u7a0b\u3002\n 4. \u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u6700\u540e\u8981\u7684\u4e1c\u897f\u5c31\u662f\u8ba1\u7b97\u5b50\u5e8f\u5217\u6392\u5e8f\u5b8c\u6210\u7684\u5e8f\u5217 $[i,i+1,i+2,\\dots,i+k]$ \u7684 $i$ \u662f\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nint aray[500005];\nint val[2000006];\nvoid segt_build(int idx, int l, int r) {\n\tif(l == r) { val[idx] = 0xFFFFFFF; return; }\n\tif(r-l == 1) { val[idx] = aray[l]; return; }\n\tsegt_build(2*idx, l, (l+r)/2);\n\tsegt_build(2*idx+1, (l+r)/2, r);\n\tval[idx] = min(val[2*idx], val[2*idx+1]);\n}\nvoid segt_upd(int idx, int l, int r, int i, int v) { // [l, r)\n\tif(i < l || r <= i) return;\n\tif(l == i && r == i+1) { val[idx] = v; return; }\n\tsegt_upd(2*idx, l, (l+r)/2, i, v);\n\tsegt_upd(2*idx+1, (l+r)/2, r, i, v);\n\tval[idx] = min(val[2*idx], val[2*idx+1]);\n}\nint segt_get(int idx, int l, int r, int il, int ir) { // [l, r), [il, ir)\n\tif(ir <= l || r <= il) return 0xFFFFFFF;\n\tif(il <= l && r <= ir) return val[idx];\n\treturn min(segt_get(2*idx, l, (l+r)/2, il, ir), segt_get(2*idx+1, (l+r)/2, r, il, ir));\n}\n\nint bit_N;\nint bit[500004][2];\n\ninline int lb(const int& x) { return x & (-x); }\nvoid bit_upd(int lc, int id, int v) { \n\tlc++;\n\twhile(lc <= bit_N) { \n\t\tbit[lc][id] += v; \n\t\tbit[lc][id] -= (bit[lc][id] >= MOD ? MOD : 0);\n\t\tlc += lb(lc); \n\t} \n}\nint bit_get(int lc, int id) { \n\tlc++;\n\tint ans = 0; \n\twhile(lc) { \n\t\tans += bit[lc][id]; \n\t\tans -= (ans >= MOD ? MOD : 0);\n\t\tlc -= lb(lc); \n\t} \n\treturn ans;\n}\n\nint gsm1[65536][2];\nint gsm2[65536][2];\nint inv[2];\n\nconstexpr int BASE1 = 37;\nconstexpr int BASE2 = 41;\n\ninline int ex(int b, int e) { return 1ll * gsm1[e&65535][b] * gsm2[e>>16][b] % MOD; }\n\nint qpow(int b, int e) {\n\tint ans = 1;\n\twhile(e) {\n\t\tif(e & 1) ans = 1ll * ans * b % MOD;\n\t\tb = 1ll * b * b % MOD;\n\t\te >>= 1;\n\t}\n\treturn ans;\n}\n\nvoid initex() {\n\tgsm1[0][0] = gsm1[0][1] = gsm2[0][0] = gsm2[0][1] = 1;\n\tgsm1[1][0] = BASE1; \n\tinv[0] = qpow(BASE1-1, MOD-2);\n\tgsm2[1][0] = qpow(BASE1, 65536);\n\tgsm1[1][1] = BASE2;\n\tinv[1] = qpow(BASE2-1, MOD-2);\n\tgsm2[1][1] = qpow(BASE2, 65536);\n\titer(i, 2, 65536) {\n\t\tgsm1[i][0] = 1ll * gsm1[i-1][0] * gsm1[1][0] % MOD;\n\t\tgsm1[i][1] = 1ll * gsm1[i-1][1] * gsm1[1][1] % MOD;\n\t\tgsm2[i][0] = 1ll * gsm2[i-1][0] * gsm2[1][0] % MOD;\n\t\tgsm2[i][1] = 1ll * gsm2[i-1][1] * gsm2[1][1] % MOD;\n\t}\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n\tinitex();\n\tint n, m; gi(n), gi(m);\n\tbit_N = n+2;\n\trep(i, n) {\n\t\tgi(aray[i]);\n\t\tbit_upd(i, 0, ex(0, aray[i]));\n\t\tbit_upd(i, 1, ex(1, aray[i]));\n\t}\n\tsegt_build(1, 0, n);\n\tint tmp, tmp2;\n\twhile(m--) {\n\t\tint o, a, b; gi(o), gi(a), gi(b);\n\t\tif(o == 1) {\n\t\t\ta--;\n\t\t\tsegt_upd(1, 0, n, a, b);\n\t\t\ttmp = ex(0, b) - ex(0, aray[a]);\n\t\t\ttmp += (tmp < 0 ? MOD : 0);\n\t\t\tbit_upd(a, 0, tmp);\n\t\t\ttmp = ex(1, b) - ex(1, aray[a]); \n\t\t\ttmp += (tmp < 0 ? MOD : 0);\n\t\t\tbit_upd(a, 1, tmp);\n\t\t\taray[a] = b;\n\t\t}\n\t\telse {\n\t\t\ta--;\n\t\t\tint mi = segt_get(1, 0, n, a, b), sz = b - a;\n\t\t\ttmp = 1ll * (MOD + ex(0, mi + sz) - ex(0, mi)) * inv[0] % MOD;\n\t\t\ttmp2 = bit_get(b-1, 0) - bit_get(a-1, 0);\n\t\t\ttmp2 += (tmp2 < 0 ? MOD : 0);\n\t\t\tif(tmp != tmp2) pstr(\"yuanxing\\n\");\n\t\t\telse {\n\t\t\t\ttmp = 1ll * (MOD + ex(1, mi + sz) - ex(1, mi)) * inv[1] % MOD;\n\t\t\t\ttmp2 = bit_get(b-1, 1) - bit_get(a-1, 1);\n\t\t\t\ttmp2 += (tmp2 < 0 ? MOD : 0);\n\t\t\t\tif(tmp != tmp2)\tpstr(\"yuanxing\\n\");\n\t\t\t\telse pstr(\"damushen\\n\");\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1589012433,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/09/14/%E3%80%8CLuogu%203792%E3%80%8D%E7%94%B1%E4%B9%83%E4%B8%8E%E5%A4%A7%E6%AF%8D%E7%A5%9E%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%81%B6%E5%83%8F%E5%B4%87%E6%8B%9C/)\n\n### Solution\n\n\u8fd9\u9898\u5f88\u660e\u663e\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f\u66f4\u65b0\u4e00\u4e2a\u70b9\uff0c\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u80fd\u591f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u6700\u5927\u503c\u4ee5\u53ca\u533a\u95f4\u5e73\u65b9\u548c\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\u6211\u4eec\u5148\u8be2\u95ee\u51fa\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\uff0c\u4e3a\u7b49\u5dee\u6570\u5217\u7684\u5934\u4e0e\u5c3e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u8fd9\u4e2a\u6570\u5217\u7684\u957f\u5ea6\uff0c\u4e0e\u9898\u76ee\u7ed9\u51fa\u7684\u662f\u5426\u4e00\u81f4\uff0c\u4e0d\u4e00\u81f4\u5c31\u53ef\u4ee5\u8f93\u51fa`yuanxing`\u3002\n\n\u7136\u540e\u8be2\u95ee\u7ebf\u6bb5\u6811\u7684\u5143\u7d20\u7684\u5e73\u65b9\u548c\uff0c\u4e0e\u8ba1\u7b97\u7684\u5934\u4e0e\u5c3e\u6784\u6210\u7684\u6570\u5217\u7684\u5e73\u65b9\u548c\u662f\u5426\u4e00\u81f4\u3002\n\n\u4f46\u7531\u4e8e`long long`\u81ea\u7136\u6ea2\u51fa\u95ee\u9898\uff0c\u8ba1\u7b97\u65f6\u7528\u66b4\u529b\u89e3\u51b3\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\ntypedef long long LL;\nconst int INF = 0x7f7f7f7f, MAXN = 2000005, MAXM = 500005;\nint n, m, l, r, opt, a[MAXM];\nnamespace Segtree {\n    #define lc rt << 1\n    #define rc rt << 1 | 1\n    struct node {\n        int Min, Max;\n        LL sum;\n    } tree[MAXN];\n    inline void pushup(int rt) {\n        tree[rt].sum = tree[lc].sum + tree[rc].sum;\n        tree[rt].Min = min(tree[lc].Min, tree[rc].Min);\n        tree[rt].Max = max(tree[lc].Max, tree[rc].Max);\n    }\n    inline void pushdown(int rt, int val) {\n        tree[rt].sum = val * val;\n        tree[rt].Min = val;\n        tree[rt].Max = val;\n    }\n    inline void build(int rt, int l, int r) {//\u5efa\u6811\n        if (l == r) {\n            pushdown(rt, a[l]);\n            return ;\n        }\n        int mid = l + r >> 1;\n        build(lc, l, mid);\n        build(rc, mid + 1, r);\n        pushup(rt);\n    }\n    inline void update(int rt, int l, int r, int pos, int val) {//\u7ebf\u6bb5\u6811\u66f4\u6539\n        if (l == r) {\n            pushdown(rt, val);\n            return ;\n        }\n        int mid = l + r >> 1;\n        if (pos <= mid) update(lc, l, mid, pos, val); else update(rc, mid + 1, r, pos, val);\n        pushup(rt);\n    }\n    inline int query_min(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u8be2\u95ee\u533a\u95f4\u6700\u5c0f\u503c\n        if (ansl <= l && r <= ansr) return tree[rt].Min;\n        int mid = l + r >> 1, ret = INF;\n        if (ansl <= mid) ret = min(ret, query_min(lc, l, mid, ansl, ansr));\n        if (mid < ansr) ret = min(ret, query_min(rc, mid + 1, r, ansl, ansr));\n        return ret;\n    }\n    inline int query_max(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u8be2\u95ee\u533a\u95f4\u6700\u5927\u503c\n        if (ansl <= l && r <= ansr) return tree[rt].Max;\n        int mid = l + r >> 1, ret = -INF;\n        if (ansl <= mid) ret = max(ret, query_max(lc, l, mid, ansl, ansr));\n        if (mid < ansr) ret = max(ret, query_max(rc, mid + 1, r, ansl, ansr));\n        return ret;\n    }\n    inline LL query_sum(int rt, int l, int r, int ansl, int ansr) {//\u7ebf\u6bb5\u6811\u8be2\u95ee\u533a\u95f4\u5e73\u65b9\u548c\n        if (ansl <= l && r <= ansr) return tree[rt].sum;\n        int mid = l + r >> 1;\n        LL ret = 0;\n        if (ansl <= mid) ret += query_sum(lc, l, mid, ansl, ansr);\n        if (mid < ansr) ret += query_sum(rc, mid + 1, r, ansl, ansr);\n        return ret;\n    }\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\", &a[i]);\n    Segtree :: build(1, 1, n);\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%d\", &opt);\n        if (opt == 1) {\n            scanf(\"%d%d\", &l, &r);\n            Segtree :: update(1, 1, n, l, r);\n        } else {\n            scanf(\"%d%d\", &l, &r);\n            int first = Segtree :: query_min(1, 1, n, l, r), last = Segtree :: query_max(1, 1, n, l, r);\n            if (r - l != last - first) {\n                printf(\"yuanxing\\n\");\n                continue;\n            }\n            LL ans = 0;\n            for (int i = first; i <= last; i++)\n                ans += (LL)(i * i);\n            if (ans == Segtree :: query_sum(1, 1, n, l, r)) printf(\"damushen\\n\"); else printf(\"yuanxing\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1568551710,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u8fde\u7eed\u4ea4\u4e867\u6b21\u7ec8\u4e8eA\u4e86\u3002\u3002\n\n\u55ef\u55ef\uff0c\u4e5f\u662f\u5e73\u65b9\u548c\uff0c\u4f46\u662f\u4e3a\u4e86\u89e3\u51b3\u6ea2\u51fa\u7684\u95ee\u9898\u901a\u8fc7\u4e86\u5f88\u591a\u6570\u5b66\u624b\u6bb5\u8fd8\u6709\u54c8\u5e0c\u7684\u601d\u60f3\u5c06\u6570\u636e\u7f29\u5c0f\u3002\u3002\n```\n1^2+2^2+3^2+\u2026+n^2=n(n+1)(2n+1)/6\n```\n\n\u5c31\u662f\u8fd9\u4e2a~~\u5c0f\u5b66\u8bb2\u8fc7~~\u7684\u516c\u5f0f\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\uff0c\u5e78\u597d\u6709\u4e24\u79d2\u4e0d\u7136600\u591ams\u770b\u7684\u6211\u771f\u662f\u865a\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n//\u4e3a\u4e86\u9632\u6b62\u6ea2\u51fa\u5927\u90e8\u5206\u5730\u65b9\u90fd\u901a\u8fc7\u5bf9p\u53d6\u6a21\u7684\u65b9\u5f0f\u7f29\u5c0f\nusing namespace std;\nconst int maxn = 5e5 + 5;\nconst int p = 1e9 + 7;\nstruct Node\n{\n\tint l, r;\n\tlong long mi, ma, sum;\n\tNode() {}\n\tNode(int l1, int r1, long long mi1, long long mi2, long long sum1)\n\t{\n\t\tl = l1, r = r1, mi = mi1, ma = mi2, sum = sum1;\n\t}\n}tree[maxn << 2];\nint n, m;\nlong long a[maxn];\n/*\u5c0f\u5b66\u5b66\u8fc7\u7684\u90a3\u79cd\u6c42\u8fde\u7eed\u5e73\u65b9\u548c\u529e\u6cd5\u7684\u53d6\u6a21\u6539\u8fdb\u7248\u672c\n\u5229\u7528\u4e86\u8d39\u9a6c\u5c0f\u5b9a\u7406\u548c\u4e58\u6cd5\u9006\u5143\uff0c\u5c06\u00f76\u6539\u4e3a\u00d7166666668  */\ninline long long getsum(long long m, long long n)\n{\n\tlong long x = m - 1;\n\treturn ((((((((n * (n + 1)) % p)*(2 * n + 1)) % p) * 166666668) % p - (((((x * (x + 1)) % p)*(2 * x + 1)) % p) * 166666668) % p) % p) + p) % p;\n}\nvoid build(int o, int l, int r)\n{\n\ttree[o].l = l, tree[o].r = r;\n\tif (l == r)\n\t{\n\t\ttree[o].sum = (a[l] * a[r]) % p;\n\t\ttree[o].ma = a[l];\n\t\ttree[o].mi = a[r];\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(o << 1, l, mid);\n\tbuild(o << 1 | 1, mid + 1, r);\n\ttree[o].sum = (tree[o << 1].sum + tree[o << 1 | 1].sum) % p;\n\ttree[o].mi = min(tree[o << 1].mi, tree[o << 1 | 1].mi);\n\ttree[o].ma = max(tree[o << 1].ma, tree[o << 1 | 1].ma);\n}\n//\u6a21\u677fpushup\ninline void pushup(int o)\n{\n\tif (tree[o].l == tree[o].r)\n\t\treturn;\n\ttree[o].sum = (tree[o << 1].sum + tree[o << 1 | 1].sum) % p;\n\ttree[o].mi = min(tree[o << 1].mi, tree[o << 1 | 1].mi);\n\ttree[o].ma = max(tree[o << 1].ma, tree[o << 1 | 1].ma);\n}\n//\u6a21\u677f\u5347\u7ea7\nvoid update(int o, int x, long long y)\n{\n\tif (tree[o].l == tree[o].r&&tree[o].l == x)\n\t{\n\t\ta[x] = y;\n\t\ttree[o].sum = (y * y) % p;\n\t\ttree[o].ma = y;\n\t\ttree[o].mi = y;\n\t\treturn;\n\t}\n\tint mid = (tree[o].l + tree[o].r) >> 1;\n\tif (x > mid)\n\t\tupdate(o << 1 | 1, x, y);\n\tif (x <= mid)\n\t\tupdate(o << 1, x, y);\n\tpushup(o);\n}\n//\u67e5\u8be2\u8be5\u533a\u95f4\u5185\u5e73\u65b9\u548c\nlong long query1(int o, int l, int r)\n{\n\tif (tree[o].l >= l && tree[o].r <= r)\n\t\treturn tree[o].sum;\n\tint mid = (tree[o].l + tree[o].r) >> 1;\n\tif (l > mid)\n\t\treturn query1(o << 1 | 1, l, r);\n\telse if (r <= mid)\n\t\treturn query1(o << 1, l, r);\n\telse\n\t\treturn ((query1(o << 1, l, mid)) + (query1(o << 1 | 1, mid + 1, r))) % p;\n}\n//\u67e5\u8be2\u8be5\u533a\u95f4\u5185\u6700\u5c0f\u503c\nlong long query2(int o, int l, int r)\n{\n\tif (tree[o].l >= l && tree[o].r <= r)\n\t\treturn tree[o].mi;\n\tint mid = (tree[o].l + tree[o].r) >> 1;\n\tif (l > mid)\n\t\treturn query2(o << 1 | 1, l, r);\n\telse if (r <= mid)\n\t\treturn query2(o << 1, l, r);\n\telse\n\t\treturn min((query2(o << 1, l, mid)), (query2(o << 1 | 1, mid + 1, r)));\n}\n//\u67e5\u8be2\u8be5\u533a\u95f4\u5185\u6700\u5927\u503c\nlong long query3(int o, int l, int r)\n{\n\tif (tree[o].l >= l && tree[o].r <= r)\n\t\treturn tree[o].ma;\n\tint mid = (tree[o].l + tree[o].r) >> 1;\n\tif (l > mid)\n\t\treturn query3(o << 1 | 1, l, r);\n\telse if (r <= mid)\n\t\treturn query3(o << 1, l, r);\n\telse\n\t\treturn max((query3(o << 1, l, mid)), (query3(o << 1 | 1, mid + 1, r)));\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%lld\", &a[i]);\n\tbuild(1, 1, n);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint opt;\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tint x;\n\t\t\tlong long y;\n\t\t\tscanf(\"%d%lld\", &x, &y);\n\t\t\tupdate(1, x, y);\n\t\t}\n\t\tif (opt == 2)\n\t\t{\n\t\t\tint l, r;\n\t\t\tscanf(\"%d%d\", &l, &r);\n\t\t\tlong long tmp = ((query3(1, l, r) - query2(1, l, r)) % p + p) % p;\n\t\t\t//\u521d\u7ea7\u5224\u5b9a\uff0c\u5982\u679c\u5e8f\u5217\u957f\u5ea6\u548c\u5e8f\u5217\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\u4e0d\u76f8\u7b49\u5219\u5fc5\u7136\u4e0d\u6210\u7acb\n\t\t\tbool a = (r - l) == tmp;\n\t\t\tif (a == false) {\n\t\t\t\tprintf(\"yuanxing\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//\u4e8c\u7ea7\u5224\u5b9a\uff0c\u5173\u4e8en\u7684\u516c\u5f0f\u7b97\u51fa\u6765\u7684\u5e73\u65b9\u548c\u4e0e\u8be5\u533a\u95f4\u5185\u771f\u6b63\u7684\u5e73\u65b9\u548c\u5bf9\u6bd4\n\t\t\ta = (query1(1, l, r) == getsum(query2(1, l, r), query3(1, l, r)));\n\t\t\tif (a == true)\n\t\t\t\tprintf(\"damushen\\n\");\n\t\t\telse\n\t\t\t\tprintf(\"yuanxing\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531318141,
        "uid": 98032,
        "name": "Teddy_Di",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u6307\u9488\u6bc1\u6211\u9752\u6625\n\n\u770b\u5230\u9898\u4ee5\u4e3a\u6b63\u89e3\u662f\u5206\u5757\u4e8e\u662f\u5f00\u59cb\u60f3\u4e0d\u6b63\u7ecf\u505a\u6cd5\u3002\u3002\u3002\u60f3\u5230\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e9b\u533a\u95f4\u4fe1\u606f\u518d\u548c\u5f53\u5b83\u662f\u8fde\u7eed\u533a\u95f4\u7684\u4fe1\u606f\u6bd4\u8f83\uff0c\u7c7b\u4f3c\u4e8e\u54c8\u5e0c\u7684\u601d\u60f3\u628a\u533a\u95f4\u8f6c\u6210\u6570\u5b57\uff0c\u540e\u6765\u53d1\u73b0\u8fd8\u771f\u662f\u3002\n\n\u8fd9\u9053\u9898\u65e2\u7136\u662f\u7c7b\u4f3c\u54c8\u5e0c\u601d\u60f3\uff0c\u4e0d\u59a8\u8bbe\u4e2a~~\u5047\u7684~~\u54c8\u5e0c\u51fd\u6570\uff1a\n\n$$h(l,r)=\\sum_{i=l}^r a_i^2$$\n\n\u533a\u95f4\u5e73\u65b9\u548c\u7ebf\u6bb5\u6811\u968f\u4fbf\u7ef4\u62a4\u3002\u3002\u3002\n\n\u4f46\u663e\u7136\u8fd8\u8981\u7ef4\u62a4\u533a\u95f4\u7684max\u548cmin\uff0c\u7531\u4e8e\u503c\u57df\u5c0f\uff0c$\\sum_{i=min}^{max}i^2$\u66b4\u529b\u7b97\u5c31\u597d\u3002\u540c\u65f6\u663e\u7136\u533a\u95f4\u957f\u5ea6\u4e0d\u7b49\u4e8e$max-min+1$\u4e5f\u4e0d\u662f\u503c\u57df\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u4e8e\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5e73\u65b9\u548c\uff0c\u533a\u95f4minmax\u3002\u533a\u95f4\u5e73\u65b9\u548cint\u81ea\u7136\u6ea2\u51fa\u5c31\u597d\u3002\n\n\u63d0\u9192\uff1a\u6307\u9488\u8d4b\u65b0\u5730\u5740\u539f\u6765\u7684\u5730\u5740\u8fd8\u4f1a\u4fdd\u7559\u5360\u7a7a\u95f4\uff0c\u6240\u4ee5\u8d4b\u65b0\u5730\u5740\u524d\u8981\u5148delete\u4e4b\u524d\u7684\u5730\u5740\n\n\u7a00\u6709\u6307\u9488\u515a\u4ee3\u7801\uff08~~\u7136\u9e45\u6307\u9488\u51fa\u83ab\u540d\u5176\u5999\u7684MLE\u8c03\u534a\u5929~~\uff09\uff1a\n\n```cpp\n#pragma GCC optimize(3)\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\ninline int read() {\n    char ch = getchar();\n    int s = 0, f = 1;\n    while (!isdigit(ch)) f = (ch == '-' ? -1 : 1), ch = getchar();\n    while (isdigit(ch)) s = (s << 1) + (s << 3) + (ch & 15), ch = getchar();\n    return s * f;\n}\n\nint n, m, opt, l, r;\n\nstruct node {\n\tint mn = 0x3f3f3f3f, mx = -0x3f3f3f3f, sum = 0;\n\tnode *left = NULL;\n\tnode *right = NULL;\n\t\n\tinline void update() {\n\t\tsum = left -> sum + right -> sum;\n\t\tmn = (left -> mn > right -> mn ? right -> mn : left -> mn);\n\t\tmx = (left -> mx > right -> mx ? left -> mx : right -> mx);\n\t}\n\t\n\tinline void build(int l, int r) {\n\t\tif (l >= r) { mn = mx = read(); sum = mn * mn; }\n\t\telse {\n\t\t\tleft = new node; left -> build(l, l + r >> 1);\n\t\t\tright = new node; right -> build((l + r >> 1) + 1, r);\n\t\t\tupdate();\n\t\t}\n\t}\n\t\n\tinline void modify(int ll, int rr, int l, int k) {\n\t\tif (ll >= rr) { mn = mx = k; sum = k * k; }\n\t\telse {\n\t\t\tif (l <= ll + rr >> 1) left -> modify(ll, ll + rr >> 1, l, k);\n\t\t\telse right -> modify((ll + rr >> 1) + 1, rr, l, k);\n\t\t\tupdate();\n\t\t}\n\t}\n\t\n\tinline node* query(int ll, int rr, int l, int r) {\n\t\tnode *rt = new node; rt -> sum = sum; rt -> mn = mn; rt -> mx = mx;\n\t\tif (ll >= l && rr <= r) return rt;\n\t\trt -> left = new node; rt -> right = new node;\n\t\tif (l <= ll + rr >> 1) {delete rt -> left; rt -> left = left -> query(ll, ll + rr >> 1, l, r); }\n\t\tif (r > ll + rr >> 1) {delete rt -> right; rt -> right = right -> query((ll + rr >> 1) + 1, rr, l, r); }\n\t\trt -> update(); delete rt -> left; delete rt -> right; return rt;\n\t}\n};\n\nint main() {\n\tn = read(); m = read();\n\tnode *root = new node; root -> build(1, n);\n\twhile (m--) {\n\t\topt = read(); l = read(); r = read();\n\t\tif (opt == 1) root -> modify(1, n, l, r);\n\t\telse {\n\t\t\tif (l > r) swap(l, r);\n\t\t\tnode *rr = root -> query(1, n, l, r);\n\t\t\tif (r - l + 1 != (rr -> mx - rr -> mn + 1)) { delete rr; puts(\"yuanxing\"); continue; }\n\t\t\tint s = 0;\n\t\t\tfor (int i = rr -> mn; i <= rr -> mx; ++i) s += i * i;\n\t\t\tif (rr -> sum != s) puts(\"yuanxing\");\n\t\t\telse puts(\"damushen\"); delete rr;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1579252859,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u60f3\u4e86\u4e00\u79cd\u795e\u5947\u7684\u505a\u6cd5\u3002\n\n\u628a\u5e8f\u5217\u7684\u6bcf\u4e2a\u6570 $a_i$ \u8868\u793a\u4e3a\u4e00\u4e2a\u9879 $x^{a_i}$\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4 $[l,r]$\uff0c\u5b83\u7684\u533a\u95f4\u548c $\\sum_{i=l}^rx^{a_i}$ \u662f\u4e00\u4e2a\u591a\u9879\u5f0f\u3002\n\n\u8bbe\u533a\u95f4 $[l,r]$ \u7684\u6700\u5c0f\u503c\u4e3a $v$\uff08\u5373 $v=\\min\\{a_i|l\\le i\\le r\\}$\uff09\uff0c\u5219\u533a\u95f4 $[l,r]$ \u6ee1\u8db3\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53\u533a\u95f4\u548c $\\sum_{i=l}^rx^{a_i}$ \u4e0e\u591a\u9879\u5f0f $x^m\\cdot\\sum_{i=0}^{r-l}x^i$ \u76f8\u7b49\u3002\n\n\u5224\u65ad\u4e24\u4e2a\u591a\u9879\u5f0f\u662f\u5426\u76f8\u7b49\u6709\u4e00\u79cd\u7ecf\u5178\u7684\u968f\u673a\u5316\u7b97\u6cd5\uff1a\u968f\u673a\u8d28\u6570 $x$ \u548c $p$\uff0c\u5728\u6a21 $p$ \u610f\u4e49\u4e0b\u628a $x$ \u4ee3\u5165\u7b97\u51fa\u591a\u9879\u5f0f\u7684\u503c\u6a21 $p$ \u7684\u7ed3\u679c\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u591a\u6b21\u968f\u673a\u63d0\u9ad8\u6b63\u786e\u7387\uff08\u4e00\u822c\u968f\u673a\u4e24\u6b21\u57fa\u672c\u4e0a\u6ca1\u95ee\u9898\u4e86\uff1f\uff09\u3002\n\n\u6211\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u5148\u968f\u673a\u4e24\u4e2a $10^8$ \u7ea7\u522b\u7684\u8d28\u6570 $x_1,x_2$ \u548c\u4e24\u4e2a $10^9$ \u7ea7\u522b\u7684\u8d28\u6570 $p_1,p_2$\uff0c$x_1<p_1$\uff0c$x_2<p_2$\uff0c\u9884\u5904\u7406 $x_1,x_2$ \u7684\u5e42\u4ee5\u53ca\u5e42\u7684\u524d\u7f00\u548c\uff08\u6a21 $p_1,p_2$ \u610f\u4e49\u4e0b\uff09\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3001$\\sum_{i=l}^rx_1^{a_i}\\bmod p_1$ \u548c $\\sum_{i=l}^rx_2^{a_i}\\bmod p_2$ \u7684\u503c\uff0c\u8be2\u95ee\u65f6\u67e5\u8be2\u533a\u95f4\u7684\u8fd9\u4e24\u4e2a\u548c\u5224\u65ad\u5bf9\u4e0d\u5bf9\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u590d\u6742\u5ea6 $O(\\log n)$\uff0c\u6b63\u786e\u6027\u7684\u8bdd\u2026\u2026\u611f\u89c9\u5f88\u9760\u8c31\uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u5361\u6389\u3002\n",
        "postTime": 1496461519,
        "uid": 8147,
        "name": "t0vd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u5148\u89c4\u5b9a\uff1a$max(l,r)$\u8868\u793a$l$\u5230$r$\u4e2d$a[i]$\u7684\u6700\u5927\u503c\uff0c$min,sum,sqr,cub$\u540c\u7406\uff0c\u5206\u522b\u8868\u793a\u6700\u5c0f\u503c\u3001\u533a\u95f4\u548c\u3001\u533a\u95f4\u5e73\u65b9\u548c\u3001\u533a\u95f4\u7acb\u65b9\u548c\u3002\n\n\u663e\u7136\u5982\u679c\u9898\u76ee\u80fd\u4fdd\u8bc1$a[i]$\u4efb\u610f\u65f6\u523b\u4e92\u4e0d\u76f8\u540c\u7684\u8bdd\uff0c\u90a3\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5982\u679c\u80fd\u91cd\u6392\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\u7684\u5316\uff0c\u5c31\u8981\u6ee1\u8db3$max(l,r)-min(l,r)=r-l+1$\n\n\u53ef\u60dc\u672c\u9898\u5e76\u6ca1\u6709\u89c4\u5b9a$a[i]$\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u5355\u7eaf\u8fd9\u6837\u7684\u5224\u65ad\u662f\u4e0d\u591f\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u52a0\u4e0a\u4e8c\u91cd\u4fdd\u9669\uff1a**\u533a\u95f4\u548c**\u3002\n\n\u5982\u679c$l$~$r$\u80fd\u91cd\u6392\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\u7684\u8bdd\uff0c\u90a3\u4e48$l$~$r$\u7684\u533a\u95f4\u548c\u5e94\u8be5\u4e3a$\\frac{(max+min)(max-min+1)}{2}$\u3002\n\n\u7136\u800c\u8fd9\u6837\u5f88\u5bb9\u6613\u5c31\u4f1a\u88ab\u5361\u3002\u6bd4\u5982$1,3,3,3,5$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u52a0\u4e0a\u4e09\u91cd\u4fdd\u9669\uff1a**\u533a\u95f4\u5e73\u65b9\u548c**\u3002\n\n\u5982\u679c$l$~$r$\u80fd\u91cd\u6392\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\u7684\u8bdd\uff0c\u90a3\u4e48$l$~$r$\u7684\u533a\u95f4\u548c\u5e94\u8be5\u4e3a$\\sum_{i=l}^ri^2$\u3002\n\n\u7136\u800c\u542c\u8bf4\u8fd9\u6837\u8fd8\u662f\u4f1a\u88ab\u5361\uff0c\u6240\u4ee5\u6211\u4eec\u52a0\u4e0a\u56db\u91cd\u4fdd\u9669\uff1a**\u533a\u95f4\u7acb\u65b9\u548c**\n\n\u5982\u679c$l$~$r$\u80fd\u91cd\u6392\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\u7684\u8bdd\uff0c\u90a3\u4e48$l$~$r$\u7684\u533a\u95f4\u548c\u5e94\u8be5\u4e3a$\\sum_{i=l}^ri^3$\u3002\n\n\u6709\u8fd9\u6837\u56db\u91cd\u4fdd\u9669\uff0c\u8981\u5361\u4e5f\u5f88\u96be\u5361\u4e86\u5427\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u6700\u5c0f\u503c\u3001\u533a\u95f4\u548c\u3001\u533a\u95f4\u5e73\u65b9\u548c\u3001\u533a\u95f4\u7acb\u65b9\u548c\u4e09\u6837\u4e1c\u897f\u3002\u8003\u8651\u5230\u533a\u95f4\u5e73\u65b9\u548c\u548c\u533a\u95f4\u7acb\u65b9\u548c\u4f1a\u5f88\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u4e00\u4e2a\u6a21\u6570\uff08\u6bd4\u5982$1e9+7$\uff09\uff0c\u6bd4\u8f83\u5b83\u4eec\u53d6\u6a21\u540e\u7684\u7ed3\u679c\u662f\u5426\u4e00\u6837\u5373\u53ef\u3002\n\n\u6700\u540e\u7ed9\u51fa\u4e00\u4e9b\u516c\u5f0f\uff1a\n\n$\\sum_{i=1}^ni^2=\\frac{1}{6}n(n+1)(2n+1)$\n\n$\\sum_{i=1}^ni^3=\\frac{n^2(n+1)^2}{4}$\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u5566\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int mo=1e9+7,N=500001;\n\nint n,m,a[N];\n\nvoid read(int &x)\n{\n\tx=0;char s=getchar();\n\twhile (!isdigit(s)) s=getchar();\n\twhile (isdigit(s)) {x=(x<<1)+(x<<3)+s-'0';s=getchar();}\n}\n\nstruct node\n{\n\tint min,max,sum,sqr,cub;\n} t[N*6];\n\nint ksm(int x,int y)\n{\n\tif (!y) return 1;\n\tll d=ksm(x,y/2);\n\tif (y&1) return (ll)d*d%mo*x%mo;\n\treturn (ll)d*d%mo;\n}\n\nint inv2=ksm(2,mo-2),inv6=ksm(6,mo-2);\n\nvoid build(int i,int l,int r)\n{\n\tif (l==r)\n\t{\n\t\tt[i].min=t[i].max=t[i].sum=a[l];\n\t\tt[i].sqr=(ll)a[l]*a[l]%mo;t[i].cub=(ll)a[l]*a[l]%mo*a[l]%mo;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,ls=i<<1,rs=ls|1;\n\tbuild(ls,l,mid);build(rs,mid+1,r);\n\tt[i].min=min(t[ls].min,t[rs].min);t[i].max=max(t[ls].max,t[rs].max);\n\tt[i].sum=(t[ls].sum+t[rs].sum)%mo;t[i].sqr=(t[ls].sqr+t[rs].sqr)%mo;t[i].cub=(t[ls].cub+t[rs].cub)%mo;\n}\n\nvoid update(int i,int l,int r,int x,int y)\n{\n\tif (l==r)\n\t{\n\t\tt[i].min=t[i].max=t[i].sum=y;\n\t\tt[i].sqr=(ll)y*y%mo;t[i].cub=(ll)y*y%mo*y%mo;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,ls=i<<1,rs=ls|1;\n\tif (mid>=x) update(ls,l,mid,x,y); else update(rs,mid+1,r,x,y);\n\tt[i].min=min(t[ls].min,t[rs].min);t[i].max=max(t[ls].max,t[rs].max);\n\tt[i].sum=(t[ls].sum+t[rs].sum)%mo;t[i].sqr=(t[ls].sqr+t[rs].sqr)%mo;t[i].cub=(t[ls].cub+t[rs].cub)%mo;\n}\n\nint sqqz(int x)\n{\n\treturn (ll)x*(x+1)%mo*(2*x+1)%mo*inv6%mo;\n}\n\nint sqr(int x) {return (ll)x*x%mo;}\n\nint cuqz(int x)\n{\n\treturn sqr((ll)x*(x+1)%mo*inv2%mo);\n}\n\nint getmax(int i,int l,int r,int x,int y)\n{\n\tif (l>=x&&r<=y) return t[i].max;\n\tint mid=(l+r)>>1;\n\tif (mid>=y) return getmax(i<<1,l,mid,x,y);\n\tif (mid<x) return getmax(i<<1|1,mid+1,r,x,y);\n\treturn max(getmax(i<<1,l,mid,x,y),getmax(i<<1|1,mid+1,r,x,y));\n}\n\nint getmin(int i,int l,int r,int x,int y)\n{\n\tif (l>=x&&r<=y) return t[i].min;\n\tint mid=(l+r)>>1;\n\tif (mid>=y) return getmin(i<<1,l,mid,x,y);\n\tif (mid<x) return getmin(i<<1|1,mid+1,r,x,y);\n\treturn min(getmin(i<<1,l,mid,x,y),getmin(i<<1|1,mid+1,r,x,y));\n}\n\nint getsum(int i,int l,int r,int x,int y)\n{\n\tif (l>=x&&r<=y) return t[i].sum;\n\tint mid=(l+r)>>1;\n\tif (mid>=y) return getsum(i<<1,l,mid,x,y);\n\tif (mid<x) return getsum(i<<1|1,mid+1,r,x,y);\n\treturn (getsum(i<<1,l,mid,x,y)+getsum(i<<1|1,mid+1,r,x,y))%mo;\n}\n\nint getsqr(int i,int l,int r,int x,int y)\n{\n\tif (l>=x&&r<=y) return t[i].sqr;\n\tint mid=(l+r)>>1;\n\tif (mid>=y) return getsqr(i<<1,l,mid,x,y);\n\tif (mid<x) return getsqr(i<<1|1,mid+1,r,x,y);\n\treturn (getsqr(i<<1,l,mid,x,y)+getsqr(i<<1|1,mid+1,r,x,y))%mo;\n}\n\nint getcub(int i,int l,int r,int x,int y)\n{\n\tif (l>=x&&r<=y) return t[i].cub;\n\tint mid=(l+r)>>1;\n\tif (mid>=y) return getcub(i<<1,l,mid,x,y);\n\tif (mid<x) return getcub(i<<1|1,mid+1,r,x,y);\n\treturn (getcub(i<<1,l,mid,x,y)+getcub(i<<1|1,mid+1,r,x,y))%mo;\n}\n\nint main()\n{\n\tread(n);read(m);\n\tfor (int i=1;i<=n;i++) read(a[i]);\n\tbuild(1,1,n);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint opt,x,y;read(opt),read(x),read(y);\n\t\tif (opt==1) update(1,1,n,x,y);\n\t\tif (opt==2) \n\t\t{\n\t\t\tint r=getmax(1,1,n,x,y),l=getmin(1,1,n,x,y),sm=getsum(1,1,n,x,y),sq=getsqr(1,1,n,x,y),cu=getcub(1,1,n,x,y);\n\t\t\tif (r-l!=y-x) {puts(\"yuanxing\");continue;}\n\t\t\tif (sm!=(ll)(l+r)*(r-l+1)%mo*inv2%mo) {puts(\"yuanxing\");continue;}\n\t\t\tif (sq!=(sqqz(r)-sqqz(l-1)+mo)%mo) {puts(\"yuanxing\");continue;}\n\t\t\tif (cu!=(cuqz(r)-cuqz(l-1)+mo)%mo) {puts(\"yuanxing\");continue;}\n\t\t\tputs(\"damushen\");\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1557216819,
        "uid": 29575,
        "name": "Holy_Push",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u6015\u88ab\u5404\u79cd\u6bd2\u7624\u6570\u636e\u5361\u4e8e\u662f\u540c\u65f6\u7ef4\u62a4\u4e86**\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u548c\uff0c\u533a\u95f4\u5e73\u65b9\u548c\u548c\u533a\u95f4\u7acb\u65b9\u548c**\n\n\u8bd5\u4e86\u4e0b\u8ba8\u8bba\u533a\u91cc\u7684\u51e0\u7ec4hack\u6570\u636e\u90fd\u6ca1\u95ee\u9898\uff0c~~\u5e0c\u671b\u4e0d\u4f1a\u88abhackqwq~~\n\n\u987a\u4fbf\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e24\u4e2a\u795e\u5947\u7684~~\uff08\u7f51\u4e0a\u641c\u7684\uff09~~\u516c\u5f0f\n\n## $\\sum_{i=1}^{n}i^{2}=\\frac{n(n+1)(2n+1)}{6}$\n\n## $\\sum_{i=1}^{n}i^{3}=[\\frac{n(n+1)}{2}]^{2}$\n\n## \u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define lt (o<<1)\n#define rt ((o<<1)|1)\n\ntypedef long long ll;\ntypedef struct node{\n    ll min,max,sum,sum2,sum3;\n    //sum\u4e3a\u533a\u95f4\u548c\uff0csum2\u4e3a\u533a\u95f4\u5e73\u65b9\u548c\uff0csum3\u4e3a\u533a\u95f4\u7acb\u65b9\u548c\n}node;\n\nconst ll mod=1000007,INF=100000000000000000;\nnode t[2000010];\nll n,m,a[500010],opt,k1,k2,kmin,kmax,ks,ks2,ks3;\n\ninline ll read(){\n    ll num=0,k=1; char c=getchar();\n    while(c>'9' || c<'0') k=(c=='-')?0:k,c=getchar();\n    while(c>='0' && c<='9') num=num*10+c-'0',c=getchar();\n    return k?num:-num;\n}\n\nvoid pushup(ll o){\n    t[o].sum=t[lt].sum+t[rt].sum; t[o].sum2=(t[lt].sum2+t[rt].sum2)%mod; t[o].sum3=(t[lt].sum3+t[rt].sum3)%mod;\n    t[o].min=min(t[lt].min,t[rt].min); t[o].max=max(t[lt].max,t[rt].max);\n}\n\nvoid build(ll o,ll l,ll r){\n    if(l==r){\n        t[o].min=t[o].max=t[o].sum=a[l];\n        t[o].sum2=a[l]*a[l]%mod; t[o].sum3=t[o].sum2*a[l]%mod;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    build(lt,l,mid); build(rt,mid+1,r);\n    pushup(o);\n}\n\nvoid update(ll o,ll l,ll r,ll q,ll x){\n    if(l==r){\n        t[o].min=t[o].max=t[o].sum=x;\n        t[o].sum2=x*x%mod; t[o].sum3=t[o].sum2*x%mod;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(q<=mid) update(lt,l,mid,q,x);\n    else update(rt,mid+1,r,q,x);\n    pushup(o);\n}\n\nvoid query(ll o,ll l,ll r,ll ql,ll qr){\n\tif(r<ql || l>qr) return;\n    if(ql<=l && qr>=r){\n        kmin=min(kmin,t[o].min); kmax=max(kmax,t[o].max);\n        ks+=t[o].sum; ks2=(ks2+t[o].sum2)%mod; ks3=(ks3+t[o].sum3)%mod;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(l<=mid) query(lt,l,mid,ql,qr);\n    if(r>=mid+1) query(rt,mid+1,r,ql,qr);\n}\n\nll qs2(ll x) {return x*(x+1)%mod*(2*x+1)%mod;} //1^2+2^2+..+n^2\u7684\u548c\uff0c\u56e0\u4e3a\u6a21\u610f\u4e49\u4e0b\u9664\u6cd5\u5f88\u9ebb\u70e6\u628a\u9664\u6cd5\u79fb\u5230\u4e86\u7b49\u5f0f\u7684\u53e6\u4e00\u8fb9\n\nll qs3(ll x) {return x*(x+1)%mod*x%mod*(x+1)%mod;} //1^3+2^3+..+n^3\u7684\u548c\n\nint main(){\n    n=read(); m=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    build(1,1,n);\n    while(m--){\n        opt=read(); k1=read(); k2=read();\n        if(opt==1) update(1,1,n,k1,k2);\n        if(opt==2){\n            kmin=INF; kmax=-INF; ks=ks2=ks3=0;\n            query(1,1,n,k1,k2);\n            if(kmax-kmin!=k2-k1) printf(\"yuanxing\\n\");\n            else if(ks!=(kmax+kmin)*(kmax-kmin+1)/2) printf(\"yuanxing\\n\");\n            else if(ks2*6%mod!=((qs2(kmax)-qs2(kmin-1))%mod+mod)%mod) printf(\"yuanxing\\n\");\n            else if(ks3*4%mod!=((qs3(kmax)-qs3(kmin-1))%mod+mod)%mod) printf(\"yuanxing\\n\");\n            else printf(\"damushen\\n\");\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1549200780,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    },
    {
        "content": "\u8fd9\u9898\uff0c\u4e3b\u8981\u662f\u7ef4\u62a4\u5e73\u65b9\u548c\u6765\u5224\u65ad\u533a\u95f4\u662f\u5426\u8fde\u7eed\uff0c\u4f46\u8fd9\u91cc\u4efb\u7136\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1.\u503c\u57df\u4e3a1e9\uff0c\u6781\u9650\u4e0b\uff0clong long\u662f\u4e00\u5b9a\u4f1a\u7206\u70b8\u7684\n\n2.\u6b63\u5982\u8ba8\u8bba\u533a\u7684\uff0c\u5e73\u65b9\u548c\u53ef\u4ee5\u88abhack\n\n\u90a3\u4e48\u8be5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u6211\u7684\u60f3\u6cd5\u662f\u2014\u2014\u79bb\u6563\u5316\uff01\n\n\u79bb\u6563\u5316\u540e\uff0c\u503c\u57df\u7684\u6781\u9650\u5c31\u57281e6\uff0c\u5047\u8bbe\u8fd95e5\u4e2a\u6570\uff0c\u6bcf\u4e2a\u90fd\u662f1e6\uff0c\u5e73\u65b9\u548c\u4e5f\u624d5e17\uff0clong long\u662f\u4e0d\u4f1a\u7206\u70b8\u7684\u3002\n\n\u79bb\u6563\u5316\u540e\uff0c\u867d\u8bf4hack\u7684\u51e0\u7387\u5c31\u51cf\u5c0f\u4e86\uff0c\u4f46\u662f\uff0c\u4e3a\u4e86\u51c6\u786e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u518d\u7ef4\u62a4\u4e2a\u548c(\u6211\u89c9\u5f97\uff0c\u8fd9\u6837\u5e94\u8be5\u5f88\u96be\u88abhack\u4e86\u5427\u3002\u3002\u3002)\n\n\u6240\u4ee5\u6211\u4eec\u5b8c\u6210\u8fd9\u9898\uff0c\u53ef\u4ee5\u5148\u5c06\u539f\u6570\uff0c\u4ee5\u53caopt==1\u65f6\u7684\u6570\u5b57\u79bb\u6563\u5316\u4e00\u6ce2\uff0c\u518d\u8fdb\u884c\u64cd\u4f5c\uff01\n\n\u5177\u4f53\u7684\u64cd\u4f5c\u8ddf\u5176\u4ed6\u9898\u89e3\u5dee\u4e0d\u591a\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\u4e86~(\u7531\u4e8e\u672c\u4eba\u6bd4\u8f83\u83dc\uff0c\u662f\u81ea\u5df1\u6a21\u62df\u7684\u79bb\u6563\u5316\uff0c\u52ff\u55b7...QwQ)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n    #include<bits/stdc++.h>\n    using namespace std;\n    const int N=5e5+1,M=1e3;\n    struct node{//\u7ebf\u6bb5\u6811\u7ef4\u62a4:\u548c\uff0c\u5e73\u65b9\u548c\uff0c\u533a\u95f4\u6781\u503c \n        long long s,w,ming,maxe;\n    }t[N<<2];\n    struct thing{//\u79bb\u6563\u5316\u6570\u7ec4 \n        int w,num;\n    }p[N<<1];\n    int a[N],opt[N],L[N],R[N];\n    long long mi,mx,S;\n    inline void build(int now,int l,int r){//\u5efa\u6811 \n        if(l==r){\n            t[now].s=a[l];\n            t[now].w=1LL*a[l]*a[l];\n            t[now].maxe=t[now].ming=a[l];\n            return;\n        }\n        int mid=(l+r)>>1;\n        build(now<<1,l,mid),build(now<<1|1,mid+1,r);\n        t[now].s=t[now<<1].s+t[now<<1|1].s;\n        t[now].w=t[now<<1].w+t[now<<1|1].w;\n        t[now].maxe=max(t[now<<1].maxe,t[now<<1|1].maxe);\n        t[now].ming=min(t[now<<1].ming,t[now<<1|1].ming);\n    }\n    inline void change(int now,int l,int r,int k,int x){//\u5355\u70b9\u4fee\u6539 \n        if(l==r){\n            t[now].s=x;\n            t[now].w=1LL*x*x;\n            t[now].ming=t[now].maxe=x;\n            return;\n        }\n        int mid=(l+r)>>1;\n        if(k<=mid){\n            change(now<<1,l,mid,k,x);\n        }\n        else{\n            change(now<<1|1,mid+1,r,k,x);\n        }\n        t[now].s=t[now<<1].s+t[now<<1|1].s;\n        t[now].w=t[now<<1].w+t[now<<1|1].w;\n        t[now].maxe=max(t[now<<1].maxe,t[now<<1|1].maxe);\n        t[now].ming=min(t[now<<1].ming,t[now<<1|1].ming);\n    }\n    inline long long find(int now,int l,int r,int lc,int rc){//\u533a\u95f4\u67e5\u8be2 \n        if(lc<=l&&r<=rc){\n            S+=t[now].s;\n            mx=max(mx,t[now].maxe);\n            mi=min(mi,t[now].ming);\n            return t[now].w;\n        }\n        int mid=(l+r)>>1;\n        long long sum=0;\n        if(lc<=mid){\n            sum+=find(now<<1,l,mid,lc,rc);\n        }\n        if(rc>mid){\n            sum+=find(now<<1|1,mid+1,r,lc,rc);\n        }\n        return sum;\n    }\n    inline long long suan(long long x){//\u8fd4\u56de1^2+...+x^2 \n        long long sut=(x*(x+1)/2)*(2*x+1)/3;\n        return sut;\n    }\n    inline bool kkk(thing x,thing y){\n        return x.w<y.w;\n    }\n    int main(){\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=n;++i){\n            scanf(\"%d\",&a[i]);\n            p[i].w=a[i],p[i].num=i;//\u79bb\u6563\u5316\u50a8\u5b58 \n        }\n        int e=n;\n        for(int i=1;i<=m;++i){\n            scanf(\"%d%d%d\",&opt[i],&L[i],&R[i]);\n            if(opt[i]==1){//\u79bb\u6563\u5316\u50a8\u5b58 \n                p[++e].w=R[i];\n                p[e].num=i+n;\n                continue;\n            }\n        }\n        sort(p+1,p+e+1,kkk);\n        int ran=1;\n        if(p[1].num<=n){//\u79bb\u6563\u5316 \n            a[p[1].num]=1;\n        }\n        else{\n            R[p[1].num-n]=1;\n        }\n        for(int i=2;i<=e;++i){//\u79bb\u6563\u5316 \n            if(p[i].w!=p[i-1].w){\n                ran++;\n            }\n            if(p[i].num<=n){\n                a[p[i].num]=ran;\n                continue;\n            }\n            R[p[i].num-n]=ran;\n        }\n        build(1,1,n);\n        for(int i=1;i<=m;++i){\n            if(opt[i]==1){\n                change(1,1,n,L[i],R[i]);//\u5355\u70b9\u4fee\u6539 \n                continue;\n            }\n            S=0,mi=2e9,mx=-2e9;//\u521d\u59cb\u5316 \n            long long sum=find(1,1,n,L[i],R[i]);//\u8fd9\u6837\u5199\u53ef\u4ee5\u53eafind\u4e00\u6b21\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u56db\u5143\u7ec4\u3002\u3002\u3002 \n            if(mx-mi!=R[i]-L[i]){//\u5982\u679c\u6781\u503c\u4e4b\u5dee\u4e0d\u7b49\u4e8e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u5219\u5fc5\u4e0d\u8fde\u7eed \n                puts(\"yuanxing\");\n                continue;\n            }\n            long long sut=suan(mx)-suan(mi-1);//\u83b7\u5f97\u5e73\u65b9\u548c \n            if(S!=(mx+mi)*(mx-mi+1)/2||sut!=sum){//\u6bd4\u8f83\uff0c\u82e5\u4e0d\u7b49\uff0c\u5219\u5fc5\u4e0d\u4e3a\u8fde\u7eed\u533a\u95f4 \n                puts(\"yuanxing\");\n                continue;\n            }\n            puts(\"damushen\");\n        }\n        return 0;\n    }",
        "postTime": 1545467321,
        "uid": 81847,
        "name": "ThinkofBlank",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3792 \u3010\u7531\u4e43\u4e0e\u5927\u6bcd\u795e\u539f\u578b\u548c\u5076\u50cf\u5d07\u62dc\u3011"
    }
]