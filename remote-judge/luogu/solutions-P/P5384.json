[
    {
        "content": "$\\rm upd:$ \u795e\u4ed9`\u4e00\u6276\u82cf\u4e00:uid65363`\u4e0d\u4ec5\u5e2e\u6211\u534a\u591c\u4ea4\u4ee3\u7801\uff0c\u8fd8\u987a\u4fbf\u5e2e\u6211\u4f18\u5316\u4e86\u4e00\u6ce2\uff0c\u4e8e\u662f\u6700\u7ec8\u8fc7\u6389\u4e86\u8fd9\u4e2a\u9898\uff0c\u6b64\u5904\u81f4\u4ee5\u656c\u610f\u3002\n\n\u53cb\u60c5\u63d0\u793a\uff0c\u672c\u7bc7`blog`\u4e0d\u540c\u4e8e\u5176\u4ed6\u7684\u9898\u89e3\uff0c\u5176\u6e10\u8fdb\u590d\u6742\u5ea6\u662f\u6700\u4f18\u7684\u3002\n___\n\n**\u6e29\u99a8\u63d0\u793a**\uff1a\u4ee5\u4e0b\u7b97\u6cd5\u601d\u8def\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u662f\u5b9e\u73b0\u6709\u4e0d\u540c\uff0c\u4ece$0x01$\u5230$0x04$,\u5171\u6709$4$\u79cd**\u5e38\u6570\u8d8a\u6765\u4f18\u79c0\u3001\u7a7a\u95f4\u8d8a\u6765\u8d8a\u4f18\u79c0\u7684\u5199\u6cd5**\u3002\n____\n\n\n\n## \u7b97\u6cd5$\\#\\bold {0x01}$ \u957f\u94fe\u5256\u5206 + vector\u79bb\u7ebf\u8be2\u95ee + \u5bf9dfn\u505a\u524d\u7f00\u548c\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u8bfb\u9898\n\n$n,q=1e6$\uff0c\u6211\u4f1a\u957f\u5256\uff01\u5927\u6982\u5c31\u662f\u53d1\u73b0\u6211\u4eec\u9996\u5148\u628a\u8be2\u95ee\u8f6c\u5316\u5230$u$\u7684$\\text {k-father}$\u4e0a\uff0c\u7136\u540e\u5176\u5b9e\u5c31\u662f\u8be2\u95ee\u4ee5\u67d0\u4e9b\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u91cc\u9762$dep=x$\u7684\u70b9\u6709\u591a\u5c11\uff0c\u8fd9\u4e1c\u897f\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u7ecf\u5178\u7684$dsu~on~tree$\u7684\u88f8\u9898\uff0c\u590d\u6742\u5ea6$n\\log n-n\\log n$\u3002\n\n\u4f46\u5b9e\u9645\u4e0a\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\uff0c\u7528\u957f\u5256\u53ef\u4ee5\u5b9e\u73b0$O(1)$\u6c42$k$\u7ea7\u7956\u5148\uff0c\u6545\u5176\u74f6\u9888\u5728\u4e8e$dsu~on~tree$\u592a\u6d6a\u8d39\u65f6\u95f4\u3002\u8003\u8651\u4e00\u79cd\u5728$dfn$\u4e0a\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u4e00\u68f5$u$\u800c\u8a00\uff0c$dfn_u$\u5230$dfn_u+size_u-1$\u53ef\u4ee5\u523b\u753b\u6574\u68f5\u5305\u542b$u$\u5728\u5185\u7684\u5b50\u6811\u3002\u6240\u4ee5\u8003\u8651\u79bb\u7ebf\u8be2\u95ee\uff0c\u76f4\u63a5\u8fdb\u884c\u524d\u7f00\u548c\uff0c\u62ff\u4e00\u4e2a\u6876\u626b\u4e00\u4e0b\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n \\log n)-O(m)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\log n)+O(?(n))$\u3002\u5176\u4e2d$?(n)$\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u5173\u4e8e$n$\u7684\u8d85\u7ebf\u6027\uff08\u4e0e\u4e9a\u7ebf\u6027\u76f8\u5bf9\uff09\u51fd\u6570\uff0c\u5373\u7ed9$vector$\u9884\u7559\u7684\u7a7a\u95f4\u3002\n\n\u7801\u7801\u7801\u2026\u7801\u5b8c\u4e86\uff01submit~~\u53d1\u73b0\u53ea\u6709$50pts$\uff1f\u4ee5\u4e0b\u662f\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\nstruct qsy{\n    int x, id ; bool sg ;\n    qsy(int v, int y, int z){ x = v, id = y, sg = z ; }\n} ;\nvoid dfs(int u){\n    sz[u] = 1, \n    dfn[++ tot] = u, Id[u] = tot ;\n    dep[u] = L[u] = dep[fa[u][0]] + 1 ;\n    for (int k = head[u] ; k ; k = next(k)){\n        dfs(to(k)) ; sz[u] += sz[to(k)] ;\n        if (L[to(k)] > L[son[u]]) son[u] = to(k), L[u] = L[to(k)] ;\n    }\n}\nvoid build(){\n    for (short int i = 1 ; i < 15 ; ++ i)\n        for (int j = 1 ; j <= N ; ++ j)\n            fa[j][i] = fa[fa[j][i - 1]][i - 1] ;\n}\nvoid dfs(int u, int tp){\n    top[u] = tp, L[u] = L[u] - dep[tp] + 1 ;\n    if (son[u]) dfs(son[u], tp) ;\n    for (int k = head[u] ; k ; k = next(k))\n        if (to(k) != son[u]) dfs(to(k), to(k)) ;\n}\nint query(int u, int k){\n    if (!k) return u ; if (k > dep[u]) return 0 ;\n    u = fa[u][hb[k]] ; k ^= 1 << hb[k] ; if (!k) return u ;\n    if (dep[u] - dep[top[u]] == k) return top[u] ;\n    int dif = dep[u] - dep[top[u]] ;\n    if (dep[u] - dep[top[u]] > k) return _down[top[u]][dif - k - 1] ;\n    return _up[top[u]][k - dif - 1] ;\n}\nfunction :main{\n    for (i = 2 ; i <= N ; ++ i) u = qr(), add(i, u) ;\n\tdfs(1, 0), dfs(1, 0, 1), build() ;\n    for (i = 1 ; i <= N ; ++ i) if (i >> hm & 1) hb[i] = hm ++ ; else hb[i] = hm - 1 ;\n    for (i = 1 ; i <= N ; ++ i){\n        if (top[i] != i) continue ;\n        l = 0, u = i ; while (l < L[i] && u) u = fa[u][0], ++ l, _up[i].pb(u) ;\n        l = 0, u = i ; while (l < L[i] && u) u = son[u], ++ l, _down[i].pb(u) ;\n    }\n\tfor (i = 1 ; i <= M ; ++ i){\n        u = qr(), k = qr(), v = query(u, k) ; if (!v) continue ;\n        q[Id[v]].pb(qsy(dep[v] + k, i, -1)), q[Id[v] + sz[v] - 1].pb(qsy(dep[v] + k, i, 1)) ;\n    }\n    for (i = 1 ; i <= N ; ++ i){\n        buc[dep[dfn[i]]] ++ ;\n        for (j = 0 ; j < q[i].size() ; ++ j)\n            ans[q[i][j].id] += buc[q[i][j].x] * q[i][j].sg ;\n    }\n}\n```\n\n\n\n\u662f\u7684\uff0c\u672c\u9898\u7a7a\u95f4$\\rm 128Mb$\uff0c$O(n\\log n)+O(?(n))$\u7684\u7a7a\u95f4**\u4e0d\u53ef\u627f\u53d7**\uff0c\u56e0\u4e3a\u5b9e\u8df5\u4e2d\u4f1a\u53d1\u73b0$O(n\\log n)\\leq O(?(n))$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5927\u5934\u5728vector\u2026\u2026\n\n\u4f46\u5176\u5b9evector\u5e76\u4e0d\u662f\u5f88\u597d\u4f18\u5316\uff0c\u56e0\u4e3a\u8be2\u95ee\u662f\u8981\u79bb\u7ebf\u7684\u3002\u4e8e\u662f\u8003\u8651\u6362\u4e2a\u7a7a\u95f4\u5f00\u9500\u5c0f\u7684\u4e0e\u9884\u5904\u7406\u65b9\u5f0f\u2014\u2014\n\n## \u7b97\u6cd5$\\#\\bold {0x02}$ \u6808 + vector\u79bb\u7ebf\u8be2\u95ee + \u5bf9dfn\u505a\u524d\u7f00\u548c\n\n\u7136\u540e\u53d1\u73b0\uff0c\u5176\u5b9e\u5982\u679c\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u76f4\u63a5\u7528\u6808\u505a$k$\u7ea7\u7956\u5148\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898~~nmd\u54ea\u6765\u90a3\u4e48\u591a\u7ecf\u5178\u95ee\u9898~~\u3002\u5c31\u662f\u7c7b\u4f3c\u7528\u6808\u6a21\u4eff\u9012\u5f52\u7684\u505a\u6cd5\uff1a\n\n```cpp\nint stk[MAXN], top ;\nvoid do_do(const int &u){\n\tstk[++ top] = u ;\n\tfor (register int i = 0 ; i < pq[u].size() ; ++ i){\n\t\tregister int op = pq[u][i].id ;\n\t\tv[op] = (top > kk[op]) ? stk[top - kk[op]] : 0 ; \n\t}\n\tfor (register int k = head[u] ; k ; k = next(k)) do_do(to(k)) ; -- top ; \n}\nfunction :main{\n    for (i = 1 ; i <= M ; ++ i) uu[i] = qr(), kk[i] = qr(), pq[uu[i]].pb(qsx(kk[i], i)) ;\n}\n```\n\n\u7136\u540e\u5c31\u6709\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6$O(n)-O(n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(?(n))$\u7684\u505a\u6cd5\uff0c\u9700\u8981\u591a\u7528\u5230\u4e00\u4e2avector\u3002\u4e4b\u540e\u5c31\u4f1a\u53d1\u73b0\u2026\u2026\u5b83\u559c\u63d0\u4e86$\\mathsf {MLE}$\uff0c\u4e0d\u8fc7\u5206\u6570\u53d8\u6210\u4e86$70pts$\u3002\u8003\u8651\u95ee\u9898\u6240\u5728\uff0c\u8fd8\u662fvector\u592a\u6162\u4e86\uff0c\u4e8e\u662f\u63d2\u64ad\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u4e2d\u9014\u6211\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u5b66\u4e60\u4e86\u4e00\u4e0b\u600e\u4e48\u6e05\u7a7avector\u7684\u5185\u5b58\uff0c\u5927\u6982\u662f\u8fd9\u6837\uff1a\n\n```cpp\ntemplate < class T >\nil void _clean( vector< T >& vt ) {\n    vector <T> vtTemp ; vtTemp.swap(vt) ;\n}\nfunction :main{\n     do_do(1) ; for (i = 1 ; i <= N ; ++ i) if (pq[i].size()) _clean(pq[i]) ;\n}\n```\n\n\u559c\u95fb\u4e50\u89c1\u7684\u662f\u7ec8\u4e8e\u4e0d\u5361\u7a7a\u95f4\u4e86\uff0c\u4f46\u662f\u5374\u6beb\u65e0\u5f81\u5146\u5730$\\mathscr{TLE}$\u4e86\u3002\u4e0d\u8fc7\u60f3\u60f3\u4e5f\u81ea\u7136\uff0c\u8fd9\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u58f0\u660e$1,000,000$\u4e2a$vector$\uff0c\u7b97\u5bfc\u4e0a\u5199\u8fc7\uff0c\u8fd9\u79cd\u52a8\u6001\u8868\u4e00\u822c\u90fd\u662f`\u4f4e\u4e8e1/4\u91cd\u6784`\u6216\u8005`\u500d\u589e\u5f0f\u91cd\u6784`\uff0c\u5e38\u6570\u53ef\u60f3\u800c\u77e5\u3002\n\n\u5e76\u4e14$vector$\u5177\u6709\u4e24\u79cd\u5c5e\u6027\uff0c$\\rm vec.capacity()$\u548c$\\rm vec.size()$\uff0c\u524d\u8005\u662f\u5411\u5185\u5b58\u7533\u8bf7\u7684\u7a7a\u95f4\uff0c\u540e\u8005\u662f\u5b9e\u9645\u4f7f\u7528\u7684\u7a7a\u95f4\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b$\\rm capacity$\u4f1a\u4e25\u683c\u5927\u4e8e$\\rm size$\u3002\u540c\u65f6\u6709\u4e09\u79cd\u6210\u5458\u51fd\u6570\u7528\u6765\u6e05\u96f6\uff0c`resize(n)`\u540c\u65f6\u91ca\u653e\u4e24\u8005\uff0c`reserve(n)`\u53ea\u4f1a\u91ca\u653e$\\rm capacity$\uff0c$\\rm clear()$\u53ea\u4f1a\u6e05\u7a7a$\\rm size$\u3002\n\n\u4f46\u6700\u540e\uff0cLuogu\u8bc4\u6d4b\u673a\u7684\u7279\u6027\u5bfc\u81f4\u5b9e\u9645\u5e94\u7528\u4e2d\u8fd9\u51e0\u4e2a\u6ca1\u6709\u4ec0\u4e48bird\u533a\u522b\uff0c\u4e8e\u662f\u8fd8\u662f\u9009\u4e86\u6700\u5feb\u7684$\\rm clear$\u3002\u559c\u63d0$70pts$.\n\n\u7136\u540e\u6700\u8ba9\u4eba\u5fc3\u7d2f\u7684\u6765\u4e86\uff1a\n\n## \u7b97\u6cd5$\\#\\bold {0x03}$ \u7b97\u6cd52 + \u5404\u79cd\u5947\u602a\u7684\u6280\u5de7 + \u5bf9\u8be2\u95ee\u76f4\u63a5\u5206\u914d\u5185\u5b58\n\n\u5206\u4e3a\u4e24\u4e2a$part$\uff0c$part\u00b71$\u6211$11.3$\u5199\u4e86\u4e00\u4e0b\u5348+\u534a\u665a\u4e0a\uff0c$part\u00b72$\u6211$11.4$\u53c8\u5199\u4e86\u4e00\u4e0b\u5348\u3002\n\n### $\\rm Part \u00b7 1$ \u5947\u602a\u7684\u6280\u5de7\n\n\u9996\u5148\u5c31\u662f\u8003\u8651\u5982\u4f55\u56de\u6536\u90a3\u4e9b\u4e0d\u9700\u8981\u7528\u7684\u6570\u7ec4\uff0c\u80fd\u5c11$1e6$\u662f$1e6$\u554a\uff0c\u5927\u6982\u601d\u60f3\u5c31\u662fvector\u56de\u6536+\u6570\u7ec4\u91cd\u590d\u4f7f\u7528\uff0c\u5e76\u4e14\u5c3d\u91cf\u4f7f\u7528\u4e0d\u9700\u8981`memset`\u5c31\u53ef\u4ee5\u6e05\u7a7a\u7684\u6570\u7ec4\uff0c\u6548\u679c\uff1a\u4f9d\u7136$70pts$\uff0c\u4f46\u662f\u7a7a\u95f4\u4e0b\u964d\u81f3$110 \u00b1 7$\u5de6\u53f3\u3002\n\n\u4e8e\u662f\u53d1\u73b0\u7a7a\u95f4\u53ef\u63a7\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u4e0a\u4e00\u4e2a\u6bd2\u7624\u4e1c\u897f\u2014\u2014$fread$.\n\n\u4e0d\u8fc7\u8fd9\u4e1c\u897f\u662f\u771f\u7684\u6709\u6548\uff08\u4f46\u4ec5\u9650\u4e8e\u672cOJ\u67d0\u4e9b\u65f6\u6bb5\uff0c\u6bd4\u5982\u4e0b\u53483\u70b9\u4ee5\u540e\u5230\u665a\u4e0a11\u70b9\u4e4b\u524d\uff09\uff0c\u5f88\u8f7b\u677e\u7684\u8ba9\u6211\u83b7\u5f97\u4e86$95pts$\u7684\u9ad8\u5206\u2026\u2026\u4f46\u662f\u95ee\u9898\u5c31\u5728\u4e8e\uff0c$fread$\u7684$\\rm ch\\_top$\u8fd9\u8fb9\u91cf\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u90fd\u662f$1e7$\u7ea7\u522b\uff0c\u5927\u4e86\u5c31$\\mathsf{MLE}$\uff0c\u5c0f\u4e86\u4f1a\u5bfc\u81f4$\\mathsf{WA}$\uff0c\u53ea\u80fd\u5728\u4e00\u5b9a\u533a\u95f4\u5185\u6ce2\u52a8\u2014\u2014\u800c\u6ce2\u52a8\u7684\u4e0d\u53ea\u662f\u81ea\u5df1\u6572\u4e0b\u7684\u6570\u5b57\uff0c\u8fd8\u6709\u8bc4\u6d4b\u673a\u3002\u3002\u3002\u4e8e\u662f\u5c31\u4f1a\u51fa\u73b0\u4ea4$50$\u4f59\u4efd\u53ea\u8c03\u6574\u4e86\u4e00\u4e9b\u53c2\u6570\u7684\u4ee3\u7801\uff0c\u4f1a\u51fa\u73b0\u5728$70pts$~$95pts$\u6fc0\u70c8\u6ce2\u52a8\u7684\u60c5\u51b5\u2026\u2026\n\n\u4e0d\u8bf4\u4e86\uff0cfread\u846c\u9001\u9752\u6625\u3002\u4e8e\u662f\u8fd9\u4e00\u4e2a$part$\u6700\u7ec8\u7684\u4ee3\u7801\u957f\u8fd9\u6837\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC target(\"avx\")\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\nconst int ch_top = 22000001 ;\nchar ch[ch_top],*now_r=ch-1,*now_w=ch-1;\n\nil int read(){\n    while (*++now_r < 48) ;\n    register int x = *now_r - 48 ;\n    while (*++now_r >= 48) x = (x << 1) + (x << 3) + *now_r - 48 ;\n    return x ;\n}\nil void write(int x){\n    static char st[7] ; static int top ;\n    while (st[++ top] = 48 + x % 10, x /= 10) ;\n    while (*++ now_w = st[top], -- top) ; *++ now_w = ' ' ;\n}\nil void add(const int &u, const int &v){\n    E[++ cnt].to = u, E[cnt].next = head[v], head[v] = cnt ;\n}\nfunction :main(){\n\tfread(ch, 1, ch_top, stdin) ;\n\tfwrite(ch,1,now_w-ch,stdout) ;  return 0 ;\n}\n```\n\nps\uff1a\u6ca1\u6709\u5c55\u73b0\u51fa\u6765\u6570\u7ec4\u6df7\u7528\uff0c\u5927\u6982\u5c31\u662f\u8fb9\u8868\u91cc\u9762\u7684$head$\u6570\u7ec4\u88ab\u6211\u7528\u6765\u5f53\u505aans\u6570\u7ec4\u4e86\u8fd9\u79cd\u611f\u89c9\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\n\n### $\\rm Part \u00b7 2$ \u624b\u52a8\u5206\u914d\u5185\u5b58\n\n\u8d77\u56e0\u5927\u6982\u662f\u8fd9\u6837\uff1a\n\n> uoj\u7fa4\n>\n> \u6211\uff1a\u6709\u6ca1\u6709\u4ec0\u4e48\u51cf\u5c11vector\u5360\u5185\u5b58\u7684\u65b9\u6cd5\uff1f\n>\n> \u795e\u4ed91\uff1a\u5f3a\u884cresize\uff1f\u6216\u8005\u5148\u7b97\u597d\u6bcf\u4e2avector\u8981\u591a\u5927\uff0c\u7136\u540eresize\u4e4b\u540e\u5f53\u6570\u7ec4\u7528\uff1f\n>\n> \u795e\u4ed92\uff1a \u5982\u679c\u6211\u77e5\u9053\u591a\u5927\u6211\u4e3a\u4ec0\u4e48\u4e0d\u5f00\u4e00\u4e2a\u5927\u6570\u7ec4\u7136\u540e\u5206\u914d\u6307\u9488\uff08 \n\n\u4e00\u8bed\u70b9\u9192\u68a6\u4e2d\u4eba.wtcl\n\n\u7136\u540e\u6211\u5c31~~\u5f00\u59cb\u5b66\u4e60\u5185\u5b58\u5206\u914d~~\u6362\u4e86\u4e2a\u5199\u6cd5\uff0c\u5927\u4f53\u5c31\u662f\u628a$vector$\u90fd\u6210\u4e86\u6307\u9488\uff0c\u6bcf\u6b21\u624b\u52a8`new`\u51fa\u9700\u8981\u591a\u5c11\u7a7a\u95f4\uff0c\u6211\u60f3\u8fd9\u6837\u600e\u4e48\u8bf4\u4e5f\u4e0d\u4f1a\u88ab\u5361\u4e86\u5427\u2026\u2026\u7ed3\u679cMLE\uff0c\u4e8e\u662f\u8fd8\u662f\u53ea\u80fd\u624b\u52a8`delete`.\u8fd9\u4e00\u90e8\u5206\u4ee3\u7801\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\nstruct qsy{ int x, id ; bool sg ; } ; int *p[MAXN] ; qsy *q[MAXN] ; \nint main(){\n    N = qr(), M = qr() ; \n\trg int u, op ; dep[1] = 1 ;\n    for (rg int i = 2, j ; i <= N ; ++ i)\n\t\tj = qr(), to(++ cnt) = i, next(cnt) = head[j], head[j] = cnt ;\n\tcnt = 0, dfs(1) ; \n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tv[i] = qr(), kk[i] = qr(), buc[v[i]] ++ ;\n    for (rg int i = 1 ; i <= N ; ++ i) \n\t\tp[i] = new int[buc[i] + 1], p[i][0] = buc[i] = 0 ;\n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tp[v[i]][++ p[v[i]][0]] = i, v[i] = 0 ;\n    cnt = 0, do_do(1) ;  \n    for (rg int i = 1 ; i <= N ; ++ i) delete p[i] ;\n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tbuc[Id[v[i]]] ++, buc[Id[v[i]] + sz[v[i]] - 1] ++ ;\n    for (rg int i = 0 ; i <= N ; ++ i) \n\t\tq[i] = new qsy[buc[i] + 1], q[i][0].x = buc[i] = 0 ; \n    for (rg int i = 1, j ; i <= M ; ++ i) {\n        if (!v[i]) continue ;\n\t\tu = Id[v[i]], j = dep[v[i]] + kk[i], op = u + sz[v[i]] - 1 ;\n        q[u][++ q[u][0].x] = (qsy){j, i, 0}, q[op][++ q[op][0].x] = (qsy){j, i, 1} ;\n    }\n    for (rg int i = 1 ; i <= N ; ++ i){\n        buc[dep[dfn[i]]] ++ ;\n        for (rg int j = 1 ; j <= q[i][0].x ; ++ j)\n            head[q[i][j].id] += q[i][j].sg ? buc[q[i][j].x] : -buc[q[i][j].x] ;\n\t}\n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tprintf(\"%d \", head[i] > 0 ? head[i] - 1 : head[i]) ;\n\treturn 0 ; \n}\n```\n\n\u8fd9\u6837\u6700\u7ec8\u7ec8\u4e8e\u662f\u53ef\u4ee5\u505a\u5230\u8f83\u4e3a\u7a33\u5b9a\u7684$80pts$~$95pts$\u2026\u2026\u4f46\u662f\u8fd8\u662f\u6ca1\u6709\u6551\u3002\n\n## \u7b97\u6cd5$\\#\\bold {0x04}$ \u7b97\u6cd52 + \u94fe\u8868\n\n\u51fa\u4e8e\u6b64\uff0c\u6211\u4fbf\u53bb\u627e`\u2014\u6276\u82cf\u2014`\u795e\u4ed9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/iecbb9h4.png)\n\n\u7136\u540e\u7b2c\u4e8c\u5929\u65e9\u4e0a\u53d1\u73b0\u6628\u665a\u4ed6\u7ecf\u5386\u8270\u96be\u7684\u594b\u6597\u2026\u611f\u52a8\u7684\u4e2a\u6211/dk\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zrsqs1h7.png)\n\n\u4f46\u662f..!\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ogxd0vfd.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dqv4ohb0.png)\n\n\u5f88\u6709\u9053\u7406\u7684\u4e9a\u5b50\uff01\u4e8e\u662f\u5c31\u662f\u6700\u540e\u4ee3\u7801:\n\n```cpp\n#include <bits/stdc++.h>\n\n#define il inline\n#define to(k) E[k].to\n#define next(k) E[k].next\n\n#define rg register \n#define MAXN 1000017\n\nusing namespace std ;\nstruct Edge{\n    int to, next ;\n}E[MAXN] ; int N, M, cnt ;\nint head[MAXN], Id[MAXN], kk[MAXN] ;\nint dep[MAXN], dfn[MAXN], sz[MAXN], buc[MAXN], v[MAXN] ;\nstruct qsy{ int x, id, next ; bool sg ; }; //; int *p[MAXN] ; qsy *q[MAXN] ;\nqsy pq[MAXN << 1]; int pd[MAXN] ; int pcnt ;\n\nil int qr(){\n\trg char c = getchar() ; \n\trg int res = 0 ; while (!isdigit(c)) c = getchar() ; \n\twhile (isdigit(c)) res = (res << 1) + (res << 3) + c - 48, c = getchar() ;\n\treturn res ;\n}\nvoid dfs(const int & u){\n    sz[u] = 1, dfn[++ cnt] = u, Id[u] = cnt ;\n    for (rg int k = head[u] ; k ; k = next(k)) \n\t\tdep[to(k)] = dep[u] + 1, dfs(to(k)), sz[u] += sz[to(k)] ;\n}\nvoid do_do(const int &u){\n\tbuc[++ cnt] = u ; \n\tfor (rg int i = pd[u]; i; i = pq[i].id) {\n\t\tint x = pq[i].x;\n\t\tv[x] = (cnt > kk[x]) ? buc[cnt - kk[x]] : 0;\n\t}\n//\tfor (rg int i = 1 ; i <= p[u][0]; ++ i)\n//\t\tv[p[u][i]] = (cnt > kk[p[u][i]]) ? buc[cnt - kk[p[u][i]]] : 0 ; \n\tfor (rg int k = head[u] ; k ; k = next(k)) do_do(to(k)) ; buc[cnt --] = head[u] = 0 ; \n}\nint main(){\n    N = qr(), M = qr() ; \n\trg int u, op ; dep[1] = 1 ;\n    for (rg int i = 2, j ; i <= N ; ++ i)\n\t\tj = qr(), to(++ cnt) = i, next(cnt) = head[j], head[j] = cnt ;\n\tcnt = 0, dfs(1) ; \n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tv[i] = qr(), kk[i] = qr(), buc[v[i]] ++ ;\n//    for (rg int i = 1 ; i <= N ; ++ i) \n//\t\tp[i] = new int[buc[i] + 1], p[i][0] = buc[i] = 0 ;\n\tmemset(buc, 0, sizeof buc);\n    for (rg int i = 1 ; i <= M ; ++ i)\n    \tpq[++ pcnt].x = i, pq[pcnt].id = pd[v[i]], pd[v[i]] = pcnt, v[i] = 0 ;\n//\t\tp[v[i]][++ p[v[i]][0]] = i, v[i] = 0 ;\n    cnt = 0, do_do(1) ;  \n//    for (rg int i = 1 ; i <= N ; ++ i) delete p[i] ;\n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tbuc[Id[v[i]]] ++, buc[Id[v[i]] + sz[v[i]] - 1] ++ ;\n\tpcnt = 0, memset(pd, 0, sizeof pd), memset(buc, 0, sizeof buc) ;\n//    for (rg int i = 0 ; i <= N ; ++ i) \n//\t\tq[i] = new qsy[buc[i] + 1], q[i][0].x = buc[i] = 0 ; \n    for (rg int i = 1, j ; i <= M ; ++ i) {\n        if (!v[i]) continue ;\n\t\tu = Id[v[i]], j = dep[v[i]] + kk[i], op = u + sz[v[i]] - 1 ;\n\t\tpq[++ pcnt] = (qsy){j, i, pd[u], 0}, pd[u] = pcnt ;\n\t\tpq[++ pcnt] = (qsy){j, i, pd[op], 1}, pd[op] = pcnt ;\n//        q[u][++ q[u][0].x] = (qsy){j, i, 0}, q[op][++ q[op][0].x] = (qsy){j, i, 1} ;\n    }\n    for (rg int i = 1 ; i <= N ; ++ i){\n        buc[dep[dfn[i]]] ++ ;\n        for (rg int j = pd[i]; j; j = pq[j].next)\n            head[pq[j].id] += pq[j].sg ? buc[pq[j].x] : -buc[pq[j].x];\n//        for (rg int j = 1 ; j <= q[i][0].x ; ++ j)\n//            head[q[i][j].id] += q[i][j].sg ? buc[q[i][j].x] : -buc[q[i][j].x] ;\n\t}\n    for (rg int i = 1 ; i <= M ; ++ i) \n\t\tprintf(\"%d \", head[i] > 0 ? head[i] - 1 : head[i]) ;\n\treturn 0 ; \n}\n```\n\n\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u540e\u8bb0\n\n* \u2467\u8bf4\u522b\u7684\u4e86\uff0czay\u5929\u4e0b\u7b2c\u4e00\uff01\n* fread\u662f\u771f\u7684\u6d6a\u8d39\u9752\u6625\u2026\u2026\u597d\u70e6\u554a\u3002\n* \u5982\u679c\u51fa\u9898\u4eba\u5f53\u65f6\u5c31\u628a\u7a7a\u95f4\u6216\u8005\u65f6\u95f4\u5f00\u5927\u4e00\u500d\u7684\u8bdd\uff0cLuogu\u8bf4\u4e0d\u5b9a\u53ef\u4ee5\u5c11\u6d6a\u8d39\u4e00\u5806\u8bc4\u6d4b\u8d44\u6e90\uff0c%\uffe5&@#\uffe5%&\u3002\n* \u795d\u81ea\u5df1csp rp++\uff0c\u795dzay csp rp++\uff01\n\n\u4e4b\u540e\u7684\u4e8b\u60c5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/d1e9vt19.png)",
        "postTime": 1572918909,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "## Update on 2020.5.6\n\n\u589e\u52a0\u4f18\u5316\uff0c\u4fdd\u8bc1\u4e86\u80fd\u8fc7\u76ee\u524d\u7684\u6240\u6709 Hack \u6570\u636e\u3002\n\n## \u7ebf\u6bb5\u6811\u5408\u5e76\u662f\u80fd\u8fc7\u8fd9\u4e2a\u9898\u7684\uff01\uff08\u5e76\u4e14\u8dd1\u5230\u4e86\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\uff09\n\n\u6ca1\u9519\u3002\n\n\u8bf6\u7ebf\u6bb5\u6811\u5408\u5e76 $O(n\\log n)$ \u7a7a\u95f4 $O(n\\log n)$ \u65f6\u95f4\u600e\u4e48\u53ef\u80fd\u8fc7\uff1f\n\n\u4e0b\u9762\u6211\u4eec\u4e00\u4e00\u4f18\u5316\u3002\n\n## Step 1\uff1a\u4f18\u5316\u7a7a\u95f4\n\n\u9996\u5148\u6c42 $k$ \u7ea7\u7956\u5148\u53ef\u4ee5\u79bb\u7ebf\u7136\u540e dfs\uff0c\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u7956\u5148\uff0c\u7136\u540e $O(n)$ \u5f97\u5230\u3002\u4f46\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u5462\uff1f\n\n~~\u5176\u5b9e\uff0c\u5047\u5982\u5408\u5e76\u5b8c\u4e00\u9897\u5b50\u6811\u540e**\u9a6c\u4e0a\u5220\u9664\u8fd9\u68f5\u5b50\u6811\u7684\u7ebf\u6bb5\u6811**\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n)$\uff01\u4f46\u662f\uff0c\u6761\u4ef6\u662f\uff1a\u6309\u7167 `size` \u4ece\u5927\u5230\u5c0f\u8bbf\u95ee\u6240\u6709\u513f\u5b50\u3002~~\n\n~~\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u771f\u6b63\u5b58\u5728\u7684\u81f3\u591a\u53ea\u6709\u4e24\u68f5\u7ebf\u6bb5\u6811\uff1a~~\n\n- ~~\u6b63\u5728\u88ab\u5408\u5e76\u7684\u8282\u70b9 $y$ \u7684\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u3002~~\n- ~~\u6b63\u5728\u5c06 $y$ \u5e76\u5165\u7684 $x$ \u7684 $y$ \u4e4b\u524d\u7684\u513f\u5b50\u5408\u5e76\u6210\u7684\u7ebf\u6bb5\u6811\u3002~~\n\n\u6ce8\u610f\u6211\u4eec\u6309\u7167 `size` \u6392\u5e8f\u4e86\u513f\u5b50\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51fa\u73b0\u8bb8\u591a\u5c0f\u70b9\u589e\u52a0\u65e0\u610f\u4e49\u7684\u7a7a\u95f4\u7684\u60c5\u51b5\u3002**\u73b0\u5728\u4f5c\u8005\u4e0d\u80fd\u8bc1\u660e\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u82e5\u6709\u80fd\u8bc1\u660e\u7684 / Hack \u7684\u8bf7\u79c1\u4fe1\u6211\u3002**\n\n~~\u6bcf\u68f5\u7ebf\u6bb5\u6811\u7a7a\u95f4\u90fd\u662f $O(n)$\uff0c\u56e0\u6b64\u603b\u7a7a\u95f4\u5c31\u662f $O(n)$\u3002~~\n\n## Step 2\uff1a\u6362\u6389 vector\n\n\u7531\u4e8e `vector` \u8fc7\u4e8e\u5360\u7a7a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u7528\u7c7b\u4f3c\u4e8e\u94fe\u8868\u7684\u65b9\u6cd5\u5c06\u8be2\u95ee\u4e32\u8d77\u6765\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\uff0c\u5b9e\u73b0\u5f88\u7b80\u5355\u3002\n\n## Step 3\uff1a\u5e38\u6570\u4f18\u5316\n\n\u9996\u5148\u5feb\u8bfb\u5feb\u8f93\u3002$10^6$ \u7684\u6570\u636e\uff0c\u8f93\u5165\u8f93\u51fa\u4f18\u5316\u4f1a\u6709\u5f88\u5927\u4f5c\u7528\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7684\u503c\u57df\u6700\u5927\u4e0d\u7528\u5230 $n$\uff0c\u800c\u662f\u6700\u5927\u7684\u6df1\u5ea6\u3002\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7a0d\u7a0d\u4f18\u5316\u4e00\u4e0b\u3002**\u540c\u65f6\u8fd9\u4e2a\u4f18\u5316\u4e5f\u4f7f\u5f97\u7a7a\u95f4\u5927\u5927\u51cf\u5c0f\uff0c\u56e0\u6b64\u6682\u65f6\u65e0\u6cd5\u627e\u5230 Hack \u6570\u636e\u3002**\n\n## Step 4\uff1a\u4ee3\u7801\n\nAC \u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\ninline char get_char() {\n\tstatic char buf[5000001],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,5000000,stdin),p1==p2)?EOF:*p1++;\n}\n//#define get_char getchar\ninline int read() {\n\tchar ch;\n\tint x=0,ff=1;\n\tdo {\n\t\tch=get_char();\n\t} while((ch<'0'||'9'<ch)&&ch!='-');\n\tif(ch=='-')ff=-1,ch=get_char();\n\twhile('0'<=ch&&ch<='9') {\n\t\tx=10*x+ch-'0';\n\t\tch=get_char();\n\t}\n\treturn x*ff;\n}\nchar buffer[7000005];\nint p1=-1;\nconst int p2=7000000;\ninline void flush() {\n\tfwrite(buffer,1,p1+1,stdout),p1=-1;\n}\ninline void putc(const char &x){\n\tif(p1==p2)flush();\n\tbuffer[++p1]=x;\n}\nvoid wrtn(int x) {\n\tif(!x){\n\t\tputc('0');\n\t\tputc(' ');\n\t\treturn ;\n\t} \n\tstatic char buf[15];\n\tstatic int len=-1;\n\tdo {\n\t\tbuf[++len]=x%10+48,x/=10;\n\t} while(x);\n\twhile(len>=0){\n\t\tputc(buf[len]),--len;\n\t}\n\tputc(' ');\n}\nint n,cnt,cntt,yyy,hh[1000005],hhh[1000005],yyyy,h[1000005],root[1000005],ans[1000005],d[1000005],q,st[4000005],top,sta[1000005],top2,size[1000005];\nstruct TreeNode{\n\tint ls,rs,sum;\n}t[4000005];\nstruct Edge{\n\tint to,next;\n}e[1000005];\nstruct Que{\n\tint k,id,next;\n}qq[1000005],qqq[1000005];\nint NewNode(){\n\tif(top)return st[top--];\n\treturn ++cntt;\n}\nvoid Add_Edge(int x,int y){\n\te[++cnt].to=y;\n\te[cnt].next=h[x];\n\th[x]=cnt;\n}\nvoid AddQ(int x,int k,int id){\n\tqq[++yyy]={k,id,hh[x]};\n\thh[x]=yyy;\n}\nvoid Addqq(int x,int k,int id){\n\tqqq[++yyyy]={k,id,hhh[x]};\n\thhh[x]=yyyy;\n}\nvoid Update(int &p,int l,int r,int x){\n\tif(!p)p=NewNode();\n\tif(l==r){\n\t\tt[p].sum++;\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid)Update(t[p].ls,l,mid,x);\n\telse Update(t[p].rs,mid+1,r,x);\n}\nvoid Merge(int &p,int q,int l,int r){\n\tif(!p||!q){\n\t\tp=p+q;\n\t\treturn ;\n\t}\n\tif(l==r){\n\t\tt[p].sum+=t[q].sum;\n\t\tt[q].ls=t[q].rs=t[q].sum=0;\n\t\tst[++top]=q;\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tMerge(t[p].ls,t[q].ls,l,mid);\n\tMerge(t[p].rs,t[q].rs,mid+1,r);\n\tt[q].ls=t[q].rs=t[q].sum=0;\n\tst[++top]=q;\n}\nint Query(int p,int l,int r,int x){\n\tif(l==r)return t[p].sum;\n\tint mid=(l+r)/2;\n\tif(x<=mid)return Query(t[p].ls,l,mid,x);\n\telse return Query(t[p].rs,mid+1,r,x);\n}\nint maxd=0;\nint aa[1000005]={0};\nvoid Solve(int now,int fa){\n\tsta[++top2]=now;\n\tfor(int i=hh[now];i;i=qq[i].next){\n\t\tQue y=qq[i];\n\t\tif(top2>y.k)Addqq(sta[top2-y.k],d[now],y.id);\n\t}\n\troot[now]=++cntt;\n\tint from=aa[0];\n\tfor(int i=h[now];i;i=e[i].next)aa[++aa[0]]=e[i].to;\n\tint to=aa[0];\n\tsort(aa+from+1,aa+to+1,[](int x,int y){return size[x]>size[y];});\n\tfor(int i=from+1;i<=to;i++){\n\t\tint y=aa[i];\n\t\t//cout<<now<<' '<<y<<endl;\n\t\tSolve(y,now);\n\t\tMerge(root[now],root[y],1,maxd);\n\t}\n\tUpdate(root[now],1,maxd,d[now]);\n\tfor(int i=hhh[now];i;i=qqq[i].next){\n\t\tQue y=qqq[i];\n\t\tans[y.id]=Query(root[now],1,maxd,y.k);\n\t}\n\ttop2--;\n}\nvoid DFS(int now,int dep){\n\tmaxd=max(maxd,dep);\n\td[now]=dep,size[now]=1;\n\tfor(int i=h[now];i;i=e[i].next){\n\t\tint y=e[i].to;\n\t\tDFS(y,dep+1);\n\t\tsize[now]+=size[y];\n\t}\n}\nint main(){\n\tn=read(),q=read();\n\tfor(int i=2,x;i<=n;i++){\n\t\tx=read();\n\t\tAdd_Edge(x,i);\n\t}\n\tDFS(1,1);\n\tfor(int i=1,x,k;i<=q;i++){\n\t\tx=read(),k=read();\n\t\tAddQ(x,k,i);\n\t}\n\tSolve(1,0);\n\tfor(int i=1;i<=q;i++)wrtn(max(ans[i]-1,0));\n\tflush();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584408117,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P5384)\n\n\u867d\u7136\u8fd9\u9898\u662f\u4e00\u9053\u4e8c\u5408\u4e00\uff0c\u4e5f\u4e0d\u7b97\u96be\uff0c\u4f46\u8fd8\u662f\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\u554a\uff0c$k$ \u7ea7\u513f\u5b50\u4e2a\u6570\u7684\u4e94\u79cd\u6c42\u6cd5\uff01\uff01\u6211\u8fd8\u662f\u89c9\u5f97\u56db\u79cd\u6bd4\u8f83\u597d\uff08\n\n$k$ \u7ea7\u513f\u5b50\u4e2a\u6570\u6709\u4e94\u79cd\u6c42\u6cd5\uff0c\u4f60\u77e5\u9053\u4e48\uff1f \u2014\u2014\u9c81\u8fc5\n\n\u9996\u5148 $k$ \u7ea7\u7956\u5148\u5f88\u597d\u6c42\uff0c\u79bb\u7ebf\u7684\u8bdddfs\u7684\u65f6\u5019\u5f00\u4e2a\u6808\u5c31\u597d\u4e86\u3002\u957f\u94fe\u5256\u5206\u4e5f\u53ef\u4ee5\u4f46\u6211\u4e0d\u4f1a\uff0c\u500d\u589e\u4ec0\u4e48\u7684\u5c31\u4e0d\u7528\u8bf4\u4e86\u3002\n\n### \u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\n\n\u5c31\u662f\u6c42\u4e00\u4e2a\u5b50\u6811\u91cc\u4e3a\u67d0\u4e00\u4e2a\u6df1\u5ea6\u7684\u70b9\u7684\u4e2a\u6570\u561b\uff0c\u8fd9\u4e2a\u660e\u663e\u53ef\u4ee5dsu on tree\u554a\uff0c\u5f00\u4e2a\u6876\u8bb0\u5f55\u4e0b\u5404\u79cd\u6df1\u5ea6\u7684\u6709\u51e0\u4e2a\u5c31\u597d\u4e86\u3002\n\n\u590d\u6742\u5ea6\uff1a$O(nlogn)$\uff0c\u5e94\u8be5\u4e0d\u80fd\u8fc70_0\n\n### \u6811\u72b6\u6570\u7ec4\n\n\u8f6c\u5316\u4e3adfs\u5e8f\uff0c\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u91cc\u7b49\u4e8e\u67d0\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u4e8c\u7ef4\u6570\u70b9\u5f31\u5316\u7248\uff0c\u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4\u3002\n\n\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n### \u4e8c\u5206\n\n\u7ed9\u6bcf\u4e2a\u6df1\u5ea6\u5f00\u4e00\u4e2avector\uff0c\u6309\u7167dfs\u5e8f\u628a\u70b9\u585e\u8fdb\u53bb\uff0c\u8be2\u95ee\u65f6\u53ea\u8981\u5728\u5bf9\u5e94\u6df1\u5ea6\u7684vector\u91cc\u4e8c\u5206\u51fa\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u867d\u7136\u4e5f\u662f $O(nlogn)$ \uff0c\u4f46\u5b83\u662f\u5728\u7ebf\u7684\uff0c\u5f88\u5999\u554a\uff01\uff01\n\n### \u957f\u94fe\u5256\u5206\n\n\u8fd9\u4e2a\u662f\u6a21\u677f\u4e86\u5427\uff0c\u7528\u4e00\u4e2a\u7b80\u5355\u7684DP\u7edf\u8ba1\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6 $O(n)$\n\n\u56e0\u4e3a\u6211\u4e4b\u524d\u5176\u5b9e\u4e0d\u4f1a\u957f\u94fe\u5256\u5206\u6240\u4ee5\u5c31\u5199\u4e86\u4e0b\u4ee3\u7801\u2026\u2026\n\n\u968f\u4fbf\u5361\u4e00\u5361\u7a7a\u95f4\u5c31\u80fd\u8fc7\u4e86\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define fr(i,x,y) for(int i=(x);i<=(y);i++)\n#define rf(i,x,y) for(int i=(x);i>=(y);i--)\n#define frl(i,x,y) for(int i=(x);i<(y);i++)\nusing namespace std;\nconst int N=1000003;\nconst int M=N<<1;\nint n,q;\nint cnt,head[N],Next[M],v[M];\nvector<int> id[N];\nint qk[N];\n\nvoid read(int &x){\n\tchar ch=getchar();x=0;\n\tfor(;ch<'0'||ch>'9';ch=getchar());\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n}\n\nvoid add(int x,int y){\n\tNext[++cnt]=head[x];\n\thead[x]=cnt;\n\tv[cnt]=y;\n}\n\nint st[N],L;\nint d[N],bc[N],ls[N],*f[N],*now=ls;\n//vector<int> qry[N];\nvoid predfs(int x,int fa,int dep){\n\tst[dep]=x;\n\t//int bc=0;\n\tfor(auto tmp:id[x])\n\t if (dep>qk[tmp])\n\t  id[st[dep-qk[tmp]]].push_back(tmp);\n\tid[x].resize(0);\n\tfor(int i=head[x];i;i=Next[i]){\n\t \tpredfs(v[i],x,dep+1);\n\t \tif (d[v[i]]>d[bc[x]]) bc[x]=v[i];\n\t}\n\td[x]=d[bc[x]]+1;\n}\n\nint ans[N];\nvoid dfs(int x,int fa){\n\tf[x][0]=1;\n\tif (bc[x]) f[bc[x]]=f[x]+1,dfs(bc[x],x);\n\tfor(int i=head[x];i;i=Next[i]){\n\t\tint tmp=v[i];\n\t\tif (tmp==bc[x]) continue;\n\t\tf[tmp]=now;now+=d[tmp];\n\t\tdfs(tmp,x);\n\t\tfr(j,1,d[tmp]) f[x][j]+=f[tmp][j-1];\n\t}\n\tfor(auto tmp:id[x])\n\t ans[tmp]=f[x][qk[tmp]]-1;\n}\n\nint main(){\n\tread(n);read(q);\n\tint x;\n\tfr(i,2,n){\n\t\tread(x);\n\t\tadd(x,i);\n\t}\n\tfr(i,1,q){\n\t\tread(x);read(qk[i]);\n\t\tid[x].push_back(i);\n\t}\n\tpredfs(1,0,1);\n\tf[1]=now;now+=d[1];\n\tfr(i,1,n) for(auto j:id[i]) printf(\"%d \",j);puts(\"---\");\n\tdfs(1,0);\n\tfr(i,1,q) printf(\"%d \",qk[i]==0?0:ans[i]);\n\treturn 0;\n}\n```\n\n### dfs+\u5dee\u5206\n\n\u8fd9\u662f\u6807\u7b97\uff0c\uff0c\u60f3\u4e0d\u5230\u2026\u2026\n\n\u524d\u9762\u90a3\u4e2a\u6811\u72b6\u6570\u7ec4\u672a\u514d\u592a\u5927\u6750\u5c0f\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u662f\u6c42\u533a\u95f4\u91cc\u7b49\u4e8e\u4e00\u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u5e76\u4e0d\u771f\u7684\u9700\u8981\u6811\u72b6\u6570\u7ec4\u6240\u7ef4\u62a4\u7684\u524d\u7f00\u548c\u3002\n\n\u6211\u4eecdfs\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a $cnt_i$ \u8868\u793adfs\u8fc7\u70b9\u7684\u91cc\u9762\u6df1\u5ea6\u4e3a $i$ \u7684\u6709\u591a\u5c11\u4e2a\uff0c\u7136\u540e\u6c42\u4e00\u4e2a\u5b50\u6811\u91cc\u6df1\u5ea6\u4e3a $d$ \u7684\u4e2a\u6570\u53ea\u8981\u628adfs\u8fd9\u4e2a\u5b50\u6811\u524d\u540e\u7684 $cnt_d$ \u51cf\u4e00\u51cf\u5c31\u597d\u4e86\u3002\n\n\u6700\u540e\uff0c\u4f8b\u884c\u5ba3\u4f20[\u535a\u5ba2](https://www.cnblogs.com/ymzqwq/p/11809162.html)",
        "postTime": 1573083122,
        "uid": 6174,
        "name": "\u591c\u732b\u5b50\u9a71\u868a\u5668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u7528\u500d\u589e\u8df3\u4e0a\u53bb\uff0c\u7136\u540e\u76f8\u5f53\u4e8e\u95ee\u4e00\u4e2a\u533a\u95f4\u5185\u7b49\u4e8e\u67d0\u4e2a\u6570\u7684\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u3002\n\n\u79bb\u7ebf\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n~~\u542c\u8bf4\u4f60\u5361\u500d\u589e~~\n\n**Update(2020.10.13):**\n\n\u542c\u8bf4\u52a0\u4e86\u7ec4 hack \u6570\u636e\uff0c\u90a3\u518d\u53bb\u6389\u4e24\u4e2a\u6570\u7ec4\u597d\u4e86\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\nconst int N=1e6+1;\ninline int readint(){\n\tint c=getchar(),d=0;\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())d=d*10+(c^'0');\n\treturn d;\n}\nint head[N],cnt,nxt[N],n,m,dep[N],F[20][N],siz[N],dfn[N],idx;\nint B[N];\ninline void add(int i){for(;i<=n;i+=i&-i)++B[i];}\ninline void del(int i){for(;i<=n;i+=i&-i)--B[i];}\ninline int ask(int i){int x=0;for(;i;i&=i-1)x+=B[i];return x;}\nvoid dfs(int now){\n\tdfn[now]=++idx;\n\tsiz[now]=1;\n\tfor(int i=head[now];i;i=nxt[i])dep[i]=dep[now]+1,dfs(i),siz[now]+=siz[i];\n}\ninline int jump(int u,int k){\n\tfor(int i=0;i<20;++i)if(k>>i&1)u=F[i][u];\n\treturn u;\n}\nstruct que{\n\tint l,r,id,nxt;\n}K[N];\nint hd[N],tt;\nint main(){\n\tn=readint(),m=readint();\n\tfor(int i=2;i<=n;++i)\n\tnxt[i]=head[F[0][i]=readint()],head[F[0][i]]=i;\n\tdfs(dep[1]=1);\n\tfor(int i=1;i<20;++i)\n\tfor(int j=1;j<=n;++j)\n\tF[i][j]=F[i-1][F[i-1][j]];\n\tfor(int i=1;i<=n;++i)head[i]=0;cnt=0;\n\tfor(int i=1;i<=n;++i)\n\tnxt[i]=head[dep[i]],head[dep[i]]=i;\n\tfor(int i=1;i<=m;++i){\n\t\tint u=readint(),k=readint();\n\t\tif(dep[u]>k){\n\t\t\tu=jump(u,k),k=dep[u]+k;\n\t\t\tint l=dfn[u],r=dfn[u]+siz[u]-1;\n\t\t\tK[++tt]=(que){l,r,i,hd[k]},hd[k]=tt;\n\t\t}\n\t}\n\tmemset(dep,0,sizeof dep);\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=head[i];j;j=nxt[j])add(dfn[j]);\n\t\tfor(int j=hd[i];j;j=K[j].nxt)\n\t\tdep[K[j].id]=ask(K[j].r)-ask(K[j].l-1)-1;\n\t\tfor(int j=head[i];j;j=nxt[j])del(dfn[j]);\n\t}\n\tfor(int i=1;i<=m;++i)\n\tprintf(\"%d \",dep[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1558414261,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u542c\u673a\u623f\u5927\u4f6c @CYJian \u8bf4\u8fd9\u9053\u9898\u76ee\u5361 \u500d\u589e+dsu on tree\uff0c\u60f3\u6765\u8bd5\u8bd5\u3002\n\n\u679c\u7136\u88ab\u5361\u4e86\uff0c\u4f46\u662f\u53bb\u6389\u500d\u589e\u4e4b\u540e\uff0cdsu on tree \u4e0d\u9700\u8981\u5361\u5e38\uff0c\u5c31\u538b\u7ebf\u8fc7\u4e86\u3002\u611f\u8c22\u826f\u5fc3\u6570\u636e\u4eba\u3002\n\n208E: Blood Cousins \u7684\u5361\u5e38\u7248\u3002\n\n\u5c06\u6bcf\u4e2a\u8be2\u95ee\u6302\u5230\u5176 k \u7ea7\u7956\u5148\u4e0a\uff0cdsu on tree \u6c42\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u5185\u6df1\u5ea6\u4fe1\u606f\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u4e0d\u80fd\u76f4\u63a5\u500d\u589e\u6302\u8be2\u95ee\uff0c\u9700\u8981\u7528\u5230\u79bb\u7ebf\u5feb\u901f\u8ba1\u7b97 k-fater \u7684\u6280\u5de7\u3002\n\n```cpp\n/* Header {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long readtype;\ntypedef long long var;\ntypedef long double let;\n\nreadtype read() {\n  readtype a = 0, c = getchar(), s = 0;\n  while (!isdigit(c)) s |= c == '-', c = getchar();\n  while (isdigit(c)) a = a * 10 + c - 48, c = getchar();\n  return s ? -a : a;\n}\n/* }}} */\n\nconst int N = 1e6 + 1;\n\nstruct Query {\n  int id, val;\n};\n\nint n, q;\nint top, fi[N], ne[N], to[N];\nint fa[N], size[N], deep[N], maxson[N];\nvector<Query> tquery[N], query[N];\nint cnt, sta[N];\nint have[N], res[N];\n\nvoid Add(int u, int v);\nvoid GetInfo(int t);\nvoid GetRes(int t);\nvoid GetTree(int rt, int t, int v);\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"P5384.in\", \"r\", stdin);\n  freopen(\"P5384.out\", \"w\", stdout);\n#endif\n  n = read(), q = read();\n  for (int i = 2; i <= n; ++i) Add(read(), i);\n  for (int i = 1; i <= q; ++i) {\n    int u = read(), k = read();\n    tquery[u].push_back((Query) {i, k});\n  }\n  GetInfo(1), GetRes(1);\n  for (int i = 1; i <= q; ++i) printf(\"%d \", res[i]);\n  puts(\"\");\n  return 0;\n}\n\nvoid Add(int u, int v) {\n  ne[++top] = fi[u], fi[u] = top, to[top] = v;\n}\n\nvoid GetInfo(int t) {\n  sta[++cnt] = t;\n  size[t] = 1, deep[t] = deep[fa[t]] + 1;\n  for (int i = fi[t]; i; i = ne[i]) {\n    fa[to[i]] = t;\n    GetInfo(to[i]);\n    size[t] += size[to[i]];\n    if (size[to[i]] > size[maxson[t]])\n      maxson[t] = to[i];\n  }\n  \n  for (size_t i = 0; i < tquery[t].size(); ++i) {\n    Query tq = tquery[t].at(i);\n    if (tq.val >= deep[t]) continue;\n    query[sta[cnt - tq.val]].push_back((Query) {tq.id, deep[t]} );\n  }\n\n  cnt--;\n}\n\nvoid GetRes(int t) {\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == maxson[t]) continue;\n    GetRes(to[i]);\n    GetTree(t, to[i], -1);\n  }\n\n  if (maxson[t]) GetRes(maxson[t]);\n\n  GetTree(t, t, 1);\n  \n  for (size_t i = 0; i < query[t].size(); ++i) {\n    Query tq = query[t].at(i);\n    res[tq.id] = have[tq.val] - 1;\n  }\n}\n\nvoid GetTree(int rt, int t, int v) {\n  have[deep[t]] += v;\n  for (int i = fi[t]; i; i = ne[i]) {\n    if (to[i] == maxson[rt]) continue;\n    GetTree(rt, to[i], v);\n  }\n}\n```\n\n!! \u4e00\u3001\u957f\u94fe\u5256\u5206\n\n\u5f85\u7eed",
        "postTime": 1591885930,
        "uid": 20522,
        "name": "ccviolett",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "~~\u5f88\u6210\u529f\u7684\u7528 dsu on tree \u88ab\u5361\u7a7a\u95f4\u88ab\u5361\u65f6\u95f4\u7684\u5361\u8fc7\u53bb\u4e86\u2026\u7136\u800c\u4e3a\u4ec0\u4e48\u6211\u4e0d\u662f\u6700\u52a3\u89e3\u554a~~\n\n~~\u6211\u6210\u529f\u5c1d\u8bd5\u4e86\u628a\u4e24\u4e2avector\u90fd\u6362\u6210\u94fe\u8868\uff0c\u539f\u56e0\u662f\u61d2\u5f97\u5199\u957f\u94fe\u5256\u5206~~\n\n\u542c\u8bf4\u4f60\u5361\u500d\u589e+dsu on tree\n\n\n```cpp\n// powered by c++11\n// by Isaunoya\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize( \\\n\t\"inline,-fgcse,-fgcse-lm,-fipa-sra,-ftree-pre,-ftree-vrp,-fpeephole2,-ffast-math,-fsched-spec,unroll-loops,-falign-jumps,-falign-loops,-falign-labels,-fdevirtualize,-fcaller-saves,-fcrossjumping,-fthread-jumps,-funroll-loops,-freorder-blocks,-fschedule-insns,inline-functions,-ftree-tail-merge,-fschedule-insns2,-fstrict-aliasing,-fstrict-overflow,-falign-functions,-fcse-follow-jumps,-fsched-interblock,-fpartial-inlining,no-stack-protector,-freorder-functions,-findirect-inlining,-fhoist-adjacent-loads,-frerun-cse-after-loop,inline-small-functions,-finline-small-functions,-ftree-switch-conversion,-foptimize-sibling-calls,-fexpensive-optimizations,inline-functions-called-once,-fdelete-null-pointer-checks\")\n\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\nusing namespace std;\nusing db = double;\nusing ll = long long;\nusing uint = unsigned int;\n#define Tp template\nusing pii = pair<int, int>;\n#define fir first\n#define sec second\nTp<class T> void cmax(T& x, const T& y) {if (x < y) x = y;} Tp<class T> void cmin(T& x, const T& y) {if (x > y) x = y;}\n#define all(v) v.begin(), v.end()\n#define sz(v) ((int)v.size())\n#define pb emplace_back\nTp<class T> void sort(vector<T>& v) { sort(all(v)); } Tp<class T> void reverse(vector<T>& v) { reverse(all(v)); }\nTp<class T> void unique(vector<T>& v) { sort(all(v)), v.erase(unique(all(v)), v.end()); }\nconst int SZ = 1 << 20 | 233;\nstruct FILEIN { char qwq[SZ], *S = qwq, *T = qwq, ch;\n#ifdef __WIN64\n#define GETC getchar\n#else\n  char GETC() { return (S == T) && (T = (S = qwq) + fread(qwq, 1, SZ, stdin), S == T) ? EOF : *S++; }\n#endif\n  FILEIN& operator>>(char& c) {while (isspace(c = GETC()));return *this;}\n  FILEIN& operator>>(string& s) {while (isspace(ch = GETC())); s = ch;while (!isspace(ch = GETC())) s += ch;return *this;}\n  Tp<class T> void read(T& x) { bool sign = 0;while ((ch = GETC()) < 48) sign ^= (ch == 45); x = (ch ^ 48);\n    while ((ch = GETC()) > 47) x = (x << 1) + (x << 3) + (ch ^ 48); x = sign ? -x : x;\n  }FILEIN& operator>>(int& x) { return read(x), *this; } FILEIN& operator>>(ll& x) { return read(x), *this; }\n} in;\nstruct FILEOUT {const static int LIMIT = 1 << 19 ;char quq[SZ], ST[233];int sz, O;\n  ~FILEOUT() { flush() ; }void flush() {fwrite(quq, 1, O, stdout); fflush(stdout);O = 0;}\n  FILEOUT& operator<<(char c) {return quq[O++] = c, *this;}\n  FILEOUT& operator<<(string str) {if (O > LIMIT) flush();for (char c : str) quq[O++] = c;return *this;}\n  Tp<class T> void write(T x) {if (O > LIMIT) flush();if (x < 0) {quq[O++] = 45;x = -x;}\n\t\tdo {ST[++sz] = x % 10 ^ 48;x /= 10;} while (x);while (sz) quq[O++] = ST[sz--];\n  }FILEOUT& operator<<(int x) { return write(x), *this; } FILEOUT& operator<<(ll x) { return write(x), *this; }\n} out;\nint n , _ ;\nconst int maxn = 1e6 + 1 ;\nint dep[maxn] ;\nint f[maxn][20] ;\nstruct edge {\n\tint v , nxt ;\n};\n\nedge e[maxn] ;\nint cnt = 0 , head[maxn] ;\nvoid add(int u , int v) {\n\te[++ cnt] = { v , head[u] } , head[u] = cnt ;\n}\nint sz[maxn] , son[maxn] ;\nvoid dfs(int u) {\n\tsz[u] = 1 ;\n\tfor(int i = 1 ; f[u][i - 1] ; i ++)\n\t\tf[u][i] = f[f[u][i - 1]][i - 1] ;\n\tfor(int i = head[u] , v ; i ; i = e[i].nxt) {\n\t\tdep[(v = e[i].v)] = dep[u] + 1 ;\n\t\tdfs(v) ;\n\t\tsz[u] += sz[v] ;\n\t\tif(sz[v] > sz[son[u]])\n\t\t\tson[u] = v ;\n\t}\n}\n\nbool vis[maxn] ;\nint Cnt[maxn] ;\n\nvoid calc(int u , int c) {\n\tCnt[dep[u]] += c ;\n\tfor(int i = head[u] , v ; i ; i = e[i].nxt)\n\t\tif(! vis[v = e[i].v])\n\t\t\tcalc(v , c) ;\n}\n\nint ans[maxn] ;\n\nstruct List {\n\tint v , id , nxt ;\n} qr[maxn] ;\n\nint qc = 0, hd[maxn];\nvoid makelist(int u , int v , int id) {\n\tqr[++ qc] = { v , id , hd[u] }, hd[u] = qc;\n}\n\nvoid dfs(int u , int kep) {\n\tfor(int i = head[u] , v ; i ; i = e[i].nxt)\n\t\tif((v = e[i].v) ^ son[u]) dfs(v , 0) ;\n\tif(son[u]) dfs(son[u] , 1) , vis[son[u]] = 1 ;\n\tcalc(u , 1) , vis[son[u]] = 0 ;\n\tfor(int i = hd[u] ; i ; i = qr[i].nxt)\n\t\tans[qr[i].id] = Cnt[qr[i].v] - 1 ;\n\tif(! kep) calc(u , -1) ;\n}\n\nint kth(int x , int k) {\n\tfor(int i = 0 ; k ; i ++)\n\t\tif(k & (1 << i)) {\n\t\t\tx = f[x][i] ;\n\t\t\tk ^= (1 << i) ;\n\t\t}\n\treturn x ;\n}\n\nsigned main() {\n  // code begin.\n\tin >> n >> _ ;\n\trep(i , 2 , n) in >> f[i][0] , add(f[i][0] , i);\n\tdfs(1) ; rep(i , 1 , _) {\n\t\tint u , k ;\n\t\tin >> u >> k ;\n\t\tif(dep[u] < k) continue ;\n\t\tint v = kth(u , k) ;\n\t\tmakelist(v , dep[u] , i) ;\n\t}\n\tdfs(1 , 0);\n\trep(i , 1 , _)\n\t\tout << ans[i] << ' ' ;\n\treturn 0;\n  // code end.\n}\n```",
        "postTime": 1584419761,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u5728\u7ebf\u7b97\u6cd5~~\u867d\u7136\u662f\u4e2aO(m log n)\u5361\u5e38~~\n\n\u5148\u500d\u589e\u8df3\u5230k-father\uff0c\u7136\u540e\u7edf\u8ba1\u5176\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u70b9\u7684dep=dep[u]\n\n\u5f53\u7136\u5982\u679c\u4e0d\u5b58\u5728k-father\u76f4\u63a5\u8f93\u51fa0\n\n\u6811\u4e0adfs\u5e8f\uff0c\u628a\u5b50\u6811\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4\u95ee\u9898\n\n\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a[l,r]\u4e2d\u6709\u591a\u5c11\u4e2a\u6570=x\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u6df1\u5ea6\u5f00\u4e2avector\uff0c\u9012\u589e\u5730pushback\u5176dfn\n\n\u7136\u540e\u8be2\u95ee\u7684\u65f6\u5019\u4e8c\u5206\u67e5\u627e[dfn[kfa],end[kfa]]\n\n\u7a7a\u95f4\u590d\u6742\u5ea6O(n log n) (\u500d\u589e\u6570\u7ec4)\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(max(n,m)log n)\n\n\u5f53\u7136\uff0c\u4e00\u767e\u4e07\u7684log\u662f20\uff0c~~\u4f46\u662f\u5f00*20\u4f1amle~~\n\n~~\u7531\u4e8e\u6811\u4e0d\u53ef\u80fd\u8fd9\u4e48\u9ad8\uff0c\u5f0015\u5c31\u8fc7\u4e86~~\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing std::sort;\nusing std::vector;\nusing std::lower_bound;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool fh=0;\n\twhile (ch<48||ch>57)fh=ch=='-'?1:fh,ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (fh)in=-in;\n}\nconst int N=1e6+5,LOG=15;\nint n,q;\nint to[N],next[N],cnt,head[N];\ninline const void addedge(int u,int v)\n{\n\tnext[++cnt]=head[u];to[head[u]=cnt]=v;\n}\nvector<int>v[N];\ninline const int query(int p,int l,int r)\n{\n\tvector<int>::iterator head=lower_bound(v[p].begin(),v[p].end(),l),tail=lower_bound(v[p].begin(),v[p].end(),r+1);\n\treturn tail-head;\n}\nint fa[N][LOG],dep[N],dfn[N],dot[N],end[N],dfc;\ninline const void dfs(int p)\n{\n\tdot[dfn[p]=++dfc]=p;\n\tfor (int i=head[p];i;i=next[i])dep[to[i]]=dep[p]+1,dfs(to[i]);\n\tend[p]=dfc;\n}\ninline const void getfa()\n{\n\tfor (int j=1;j<LOG;j++)\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n}\ninline const int jump(int x,int y)\n{\n\tfor (int i=0;i<LOG;i++)\n\t\tif (y>>i&1)\n\t\t\tx=fa[x][i];\n\treturn x;\n}\ninline const int query(int x,int y)\n{\n\tif (dep[x]-1<y)return 0;\n\tint fa=jump(x,y);\n\treturn query(dep[x],dfn[fa],end[fa])-1;\n}\nint main()\n{\n\tread(n);read(q);\n\tfor (int i=2;i<=n;i++)read(fa[i][0]),addedge(fa[i][0],i);\n\tdfs(dep[1]=1);getfa();\n\tfor (int i=1;i<=n;i++)v[dep[dot[i]]].push_back(i);\n\tfor (int x,y;q--;)read(x),read(y),printf(\"%d \",query(x,y));\n\treturn 0;\n}\n```",
        "postTime": 1566352351,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6b63\u89e3\u5c31\u4e0d\u662f $O(n\\log n)$ \u7684\u554a\u3002\u3002\u3002\n\n\u4e0d\u8fc7\u786e\u5b9e $BIT$ \u5e38\u6570\u5c0f\uff0c\u5361\u4e0d\u6389\u3002\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5408\u4e00\u7684\u9898\u76ee\uff0c\u6211\u4eec\u8981\u89e3\u51b3\u4e24\u4e2a\u6811\u4e0a\u7ecf\u5178\u95ee\u9898\uff1a\n\n1. \u6c42\u51fa\u67d0\u4e2a\u7ed3\u70b9\u7684 $k$ \u7ea7\u7956\u5148\n\n2. \u6c42\u51fa\u67d0\u4e2a\u7ed3\u70b9\u7684 $k$ \u7ea7\u5b50\u5b59\n\n**\u4e0d\u5f3a\u5236\u5728\u7ebf\u3002**\n\n### \u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u5728 $dfs$ \u7684\u8fc7\u7a0b\u4e2d\u5f00\u4e2a\u6808\u8bb0\u5f55\u4e00\u4e0b\u7956\u5148\u7ed3\u70b9\uff0c\u8be2\u95ee\u5c31\u79bb\u7ebf\u5728\u6808\u4e2d\u67e5\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u7b2c\u4e8c\u4e2a\u95ee\u9898\uff1a\n\n\u957f\u94fe\u5256\u5206\u5165\u95e8\u95ee\u9898\u3002\n\n\u5177\u4f53\u5c31\u5b66\u770b\u4e00\u770b\u957f\u5256\u7684\u535a\u5ba2\u5427\uff0c\u6211\u8fd8\u4e0d\u4f1a\u8bc1\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\n\n~~\u5176\u5b9e\u6ca1\u5feb\u591a\u5c11~~\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000000+10;\nint n,m,fa[maxn],len[maxn],son[maxn],u[maxn],k[maxn],anc[maxn],ans[maxn],tmp[maxn<<1],*f[maxn],*id=tmp,sta[maxn],top;\nint head[maxn],tot,fir[maxn],cnt;\n\nstruct node\n{\n\tint to,next,id;\n}e[maxn],q[maxn];\n\ninline int read()\n{\n\tregister int x=0,f=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n\treturn (f==1)?x:-x;\n}\nvoid print(int x)\n{\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) print(x/10);\n\tputchar(x%10+'0');\n}\ninline void addedge(int x,int y)\n{\n\te[++tot].to=y;\n\te[tot].next=head[x];\n\thead[x]=tot;\n}\ninline void addque(int x,int y,int z)\n{\n\tq[++cnt].to=y;\n\tq[cnt].id=z;\n\tq[cnt].next=fir[x];\n\tfir[x]=cnt;\n}\nvoid dfs1(int x)\n{\n\tsta[++top]=x;\n\tvector<pair<int,int> >::iterator it;\n\tfor(int i=fir[x];i;i=q[i].next)\n\t\tif(top>q[i].to) anc[q[i].id]=sta[top-q[i].to];\n\tfor(int i=head[x];i;i=e[i].next) dfs1(e[i].to);\n\ttop--;\n}\nvoid dfs2(int x)\n{\n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].to;dfs2(y);\n\t\tif(len[y]>len[son[x]]) son[x]=y;\n\t}\n\tlen[x]=len[son[x]]+1;\n}\nvoid dfs3(int x)\n{\n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==son[x]) continue;\n\t\tf[y]=id;id+=len[y];dfs3(y);\n\t}\n\tif(son[x]) f[son[x]]=f[x]+1,dfs3(son[x]);\n\tf[x][0]=1;\n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].to;\n\t\tif(y==son[x]) continue;\n\t\tfor(int j=1;j<=len[y];j++) f[x][j]+=f[y][j-1];\n\t}\n\tfor(int i=fir[x];i;i=q[i].next) ans[q[i].id]=f[x][q[i].to]-1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=2;i<=n;i++) fa[i]=read(),addedge(fa[i],i);\n\tfor(int i=1;i<=m;i++) u[i]=read(),k[i]=read(),addque(u[i],k[i],i);\n\tdfs1(1);\n\tmemset(fir,0,sizeof(fir));cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t\tif(anc[i]) addque(anc[i],k[i],i);\n\tdfs2(1);f[1]=id;id+=len[1]+1;dfs3(1);\n\tfor(int i=1;i<=m;i++) print(ans[i]),putchar(' '); putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1562141034,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "## \u5410\u69fd\n\n~~\u5173\u4e8e\u500d\u589e\uff0c\u5b83\u7ec8\u4e8e\u6b7b\u4e86\u3002~~\n\n\u8fd9\u597d\u50cf\u662f\u6211\u505a\u7684\u7b2c\u4e00\u9053\u653e\u8fc7\u6811\u5256\u5361\u6389\u500d\u589e\u7684\u9898\u2026\u2026\n\n## 50pts\u505a\u6cd5\n\n\u539f\u9898\u7b49\u4ef7\u4e8e\u8be2\u95ee$x$\u7684$k$\u7ea7\u7956\u5148\u7684\u5b50\u6811\u4e2d$dep=dep[x]$\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n\u4e00\u770b\u5230$k$\u7ea7\u7956\u5148\u663e\u7136\u4f1a\u60f3\u5230\u7528\u500d\u589e\u6c42\u3002\n\n\u518d\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d$dep=i$\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(nlogn)$\u8fd8\u591a\u597d\u51e0\u500d\u5e38\u6570\u3002\u663e\u7136\u4f1a$TLE+MLE$\u3002\u3002\u3002\n\n## 70pts\u505a\u6cd5\uff1f\n\n\u5148\u6c42\u51fa$DFS$\u5e8f\uff0c\u5219\u8be2\u95ee\u76f8\u5f53\u4e8e\u8be2\u95ee$DFS$\u5e8f\u4ece$dfn[x]$\u5230$dfn[x]+sz[x]-1$\u4e2d\u7684$dep=x$\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n\u79bb\u7ebf\u6240\u6709\u8be2\u95ee\uff0c\u628a\u6bcf\u4e2a\u8be2\u95ee\u62c6\u6210\u4e24\u4e2a\u4e8b\u4ef6\uff1a\u51cf\u53bb\u5c0f\u4e8e$dfn[x]$\u7684\u7b54\u6848\u548c\u52a0\u4e0a$dfn[x]+sz[x]-1$\u7684\u7b54\u6848\u3002\n\n\u6309$dfn$\u5e8f\u679a\u4e3e\uff0c\u7ef4\u62a4\u5f53\u524d$dep=i$\u7684\u8282\u70b9\u4e2a\u6570$sum$\u3002\u679a\u4e3e\u5230$i$\u7684\u65f6\u5019\u628a$dfn$\u5e8f\u4e3a$i$\u7684\u8282\u70b9\u7edf\u8ba1\u5230$sum$\u4e2d\u3002\u540c\u65f6\u5904\u7406\u6240\u6709$i$\u5904\u7684\u4e8b\u4ef6\u3002\n\n\u7531\u4e8e\u9700\u8981\u500d\u589e\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(nlogn)$\u3002\u672c\u6765\u7b97\u8d77\u6765\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u8db3\u591f\u7684\u3002\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u8fd8\u9700\u8981\u5f88\u591a$10^6$\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u7a7a\u95f4\u8fd8\u662f\u70b8\u4e86\uff08\u624b\u7b97\u5927\u7ea6\u9700\u8981$140$\u5230$150MB$\uff09\u3002\u800c\u4e14$10^6$\u7684\u6811\u7528\u500d\u589e\u2026\u2026\u65f6\u95f4\u4e5f\u4e0d\u592a\u884c\u3002\n\n\u968f\u673a\u6811\u7684\u70b9\u6216\u8bb8\u80fd\u8fc7\uff1f\n\n## 100pts\u505a\u6cd5\n\n\u73b0\u5728\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5c31\u5728\u4e8e\u500d\u589e\u4e86\u3002\u8003\u8651\u628a\u500d\u589e\u7684\u8fd9\u4e2a\u7a7a\u95f4\u4e0a\u7684$log$\u7ed9\u4f18\u5316\u6389\u3002\n\n$k$\u7ea7\u7956\u5148\uff0c\u4e0d\u7528\u500d\u589e\uff0c\u6211\u53ea\u80fd\u60f3\u5230\u6811\u5256\u4e86\u3002\u3002\u3002\n\n\u6cbf\u7740$x$\u5230\u6839\u7684\u91cd\u94fe\u4e0d\u65ad\u5411\u4e0a\u8df3\u3002\n\n\u5f53\u91cd\u94fe\u957f\u5ea6$>k$\u65f6\uff0c\u8bf4\u660e\u6240\u6c42\u7684$k$\u7ea7\u7956\u5148\u5c31\u5728\u8fd9\u6761\u91cd\u94fe\u4e0a\uff0c\u76f4\u63a5\u8fd4\u56de$dfn$\u5e8f\u4e3a$dfn[x]-k$\u7684\u70b9\u5373\u53ef\u3002\n\n\u5426\u5219\u8df3\u8fc7\u8fd9\u6761\u91cd\u94fe\uff0c\u6ce8\u610f\u540c\u65f6\u8981\u66f4\u65b0$k$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\u5fc5\u987b\u5f00$O2$\u624d\u80fd\u8fc7\u3002\u3002\u3002\n\n## \u7ec6\u8282\n\n$x$\u7684$k$\u7ea7\u7956\u5148\u53ef\u80fd\u4e0d\u5b58\u5728\uff0c\u6b64\u65f6\u8f93\u51fa$0$\u3002\n\n## \u4ee3\u7801\n\n\u7531\u4e8e\u522b\u7684\u90fd\u662f\u677f\u5b50\uff0c\u5c31\u4e0d\u7c98\u4e86\u3002\n\n\u53ea\u7c98\u4e3b\u7a0b\u5e8f\uff0c~~\u6284\u4ee3\u7801\u7684\u81ea\u5df1\u770b\u7740\u529e~~\n\n```cpp\nint main(){\n\tn=read(),m=read();\n\tfor(int i=2;i<=n;++i)fa[i]=read(),adde(fa[i],i);\n\tdep[1]=1,dfs1(1),dfs2(1,1);\n\tfor(int i=1;i<=m;++i){\n\t\tx=read(),k=read(),f=up(x,k);\n\t\tif(f){\n\t\t\tq[++tot].pos=dfn[f]      -1,q[tot].val=dep[x],q[tot].id=i,q[tot].op=-1;\n\t\t\tq[++tot].pos=dfn[f]+sz[f]-1,q[tot].val=dep[x],q[tot].id=i,q[tot].op=1;\n\t\t}else ans[i]=1;\n\t}\n\tsort(q+1,q+tot+1);\n\tfor(int i=0,j=1;i<=n&&j<=tot;++i){\n\t\t++sum[dep[num[i]]];\n\t\twhile(j<=tot&&q[j].pos==i)ans[q[j].id]+=q[j].op*sum[q[j].val],++j;\n\t}\n\tfor(int i=1;i<=m;++i)space(ans[i]-1);\n}\n\n```\n\n$UPD$\uff1a\n\n\u500d\u589e\u628a$fa$\u6570\u7ec4\u5f00\u6210$N*15$\u53ef\u8fc7\uff1f\uff1f\uff1f\n\n\u6570\u636e\u4e0d\u591f\u5f3a\u554a\u3002\u3002\u3002\u5982\u679c\u9020\u4e00\u4e2a\u94fe\u7684\u6216\u8005$\\frac n2$\u7684\u94fe\u6302\u4e00\u4e9b\u70b9\u7684\u6570\u636e\u500d\u589e\u5e94\u8be5\u5c31\u5f7b\u5e95\u51c9\u51c9\u4e86\uff1f",
        "postTime": 1558080311,
        "uid": 49260,
        "name": "fr200110217102",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5384 \u3010[CNOI2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u76ee\u524d\u7a7a\u95f4\u6700\u4f18\uff08\u9003  \n\u5176\u5b9e\u6211\u8fd9\u4e2a\u5e94\u8be5\u6539\u4e00\u6539\u5c31\u80fd\u6539\u6210 $O(n)$ \u7684\u4e86\u2026\u2026\u53ea\u662f\u6211\u592a\u61d2\u2026\u2026\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\u662f\u6309\u7167\u6df1\u5ea6\u5f00 vector\uff0c\u6bcf\u4e2a vector \u5185\u6309 DFS \u5e8f\u5b58\uff0c\u7136\u540e\u6bcf\u6b21\u4e8c\u5206\u627e\u7b54\u6848\u3002  \n\u4f46\u662f\u4f17\u6240\u5468\u77e5 vector \u7684\u5185\u5b58\u4f1a\u7206\u70b8\u3002  \n\u4e8e\u662f\u5148\u7b97\u51fa\u6bcf\u4e2a\u6df1\u5ea6\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u6700\u540e\u5b58\u5728\u4e00\u4e2a\u5927\u6570\u7ec4\u91cc\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u6ca1\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e6;\nconst int Q = 1e6;\nint n,q;\nint to[N + 5],pre[N + 5],first[N + 5];\ninline void add(int u,int v)\n{\n    static int tot = 0;\n    to[++tot] = v,pre[tot] = first[u],first[u] = tot;\n}\nstruct s_query\n{\n    int k,nxt,ans;\n} qry[Q + 5];\nint st[N + 5];\ninline void push(int u,int k)\n{\n    static int tot = 0;\n    qry[++tot] = (s_query){k,st[u],0},st[u] = tot;\n}\nint dep[N + 5],cnt[N + 5],a[N + 5],id[N + 5],rk[N + 5],sz[N + 5];\nvoid dfs1(int p)\n{\n    static int tot = 0;\n    rk[id[p] = ++tot] = p,sz[p] = 1;\n    for(register int i = first[p];i;i = pre[i])\n        dep[to[i]] = dep[p] + 1,dfs1(to[i]),sz[p] += sz[to[i]];\n}\nvoid dfs2(int p)\n{\n    static int s[N + 5],top = 0;\n    s[++top] = p;\n    for(register int i = st[p],x;i;i = qry[i].nxt)\n        if(qry[i].k >= top)\n            qry[i].k = 0;\n        else\n            x = s[top - qry[i].k],qry[i].k = upper_bound(a + cnt[dep[p] - 1] + 1,a + cnt[dep[p]] + 1,id[x] + sz[x] - 1) - lower_bound(a + cnt[dep[p] - 1] + 1,a + cnt[dep[p]] + 1,id[x]) - 1;\n    for(register int i = first[p];i;i = pre[i])\n        dfs2(to[i]);\n    --top;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    int u;\n    for(register int i = 2;i <= n;++i)\n        scanf(\"%d\",&u),add(u,i);\n    dfs1(1);\n    for(register int i = 1;i <= n;++i)\n        ++cnt[dep[i]];\n    for(register int i = 1;i <= n;++i)\n        cnt[i] += cnt[i - 1];\n    for(register int i = 1;i <= n;++i)\n        a[++cnt[dep[rk[i]] - 1]] = i;\n    for(register int i = 1;i <= n;++i)\n        --cnt[dep[i] - 1];\n    int k;\n    for(register int i = 1;i <= q;++i)\n        scanf(\"%d%d\",&u,&k),push(u,k);\n    dfs2(1);\n    for(register int i = 1;i <= q;++i)\n        printf(\"%d%c\",qry[i].k,\" \\n\"[i == q]);\n}\n```",
        "postTime": 1577767930,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5384 \u3010[Cnoi2019]\u96ea\u677e\u679c\u6811\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u51fa\u4ed6\u7684K-father\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u500d\u589e\u5b9e\u73b0\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u4e00\u4e2a\u8be2\u95ee\u8f6c\u5316\u6210\u8be2\u95ee\u4e00\u4e2a\u70b9\u7684K-son\u4e2a\u6570-1\uff0c\u5c06\u8be2\u95ee\u79bb\u7ebf\u6392\u5e8f\u540e\u53ef\u4ee5\u5728DFS\u5e8f\u4e0a\u67e5\u8be2\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6O(nlogn) \u4f46\u662f1e6\uff0c\u5361\u5f97\u5f88\u7d27\uff08\u5176\u5b9e\u6811\u9ad8\u5e76\u4e0d\u9ad8\uff0c\u6211\u500d\u589e\u53ea\u5f00\u4e8614n\u7684\u6570\u7ec4\u5c31\u8fc7\u4e86\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=1000001;\nint n,q,b[MAXN],ans[MAXN],ux[MAXN],kx[MAXN];\nint tot,front[MAXN],to[MAXN],nxt[MAXN];\ninline void init(int u,int v)\n{\n\tto[++tot]=v;\n\tnxt[tot]=front[u];\n\tfront[u]=tot;\n}\nint dep[MAXN],fa[MAXN][15],siz[MAXN],dfn[MAXN],dfn_clock,dq[MAXN];\nvoid dfs(int u)\n{\n\tfor(int i=1;i<=14;i++)\n\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\tdep[u]=dep[fa[u][0]]+1;\n\tsiz[u]=1;\n\tdfn[u]=++dfn_clock;\n\tdq[dfn_clock]=dep[u];\n\tfor(int i=front[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tdfs(v);\n\t\tsiz[u]+=siz[v];\n\t}\n}\nint cnt;\nstruct question{\n\tint x,id;\n}que[MAXN*2];\ninline int getkfa(int x,int k)\n{\n\tfor(int i=14;i>=0;i--)\n\t\tif((k>>i)&1)\n\t\t\tx=fa[x][i];\n\treturn x;\n}\nbool cmp(question x,question y)\n{\n\treturn x.x<y.x;\n}\nint main()\n{\n\tfreopen(\"test.in\",\"r\",stdin);\n\tfreopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&fa[i][0]);\n\t\tinit(fa[i][0],i);\n\t}\n\tdfs(1);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d%d\",&ux[i],&kx[i]);\n\t\tux[i]=getkfa(ux[i],kx[i]);\n\t\tque[++cnt]=(question){dfn[ux[i]]-1,-i};\n\t\tque[++cnt]=(question){dfn[ux[i]]+siz[ux[i]]-1,i};\n\t}\n\tsort(que+1,que+1+cnt,cmp);\n\tfor(int i=1,j=0;i<=cnt;i++)\n\t{\n\t\twhile(j<que[i].x&&j<n)b[dq[++j]]++;\n\t\tint id=abs(que[i].id),x=dep[ux[id]]+kx[id];\n\t\tif(que[i].id<0)\n\t\t\tans[id]-=b[x];\n\t\telse\n\t\t\tans[id]+=b[x];\n\t}\n\tfor(int i=1;i<=q;i++)\n\t\tprintf(\"%d \",max(ans[i]-1,0));\n\treturn 0;\n}\n```\n",
        "postTime": 1558061940,
        "uid": 27032,
        "name": "cyhzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5384 \u3010[CNOI2019]\u96ea\u677e\u679c\u6811\u3011"
    }
]