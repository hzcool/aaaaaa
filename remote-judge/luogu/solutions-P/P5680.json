[
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u7b80\u8981\u7248\u9898\u9762\uff1a\n>  \u9898\u76ee\u7684\u4e3b\u8981\u6982\u5ff5\uff1a\n>\n> - \u56de\u6536\u8def\u7ebf\uff1a\u4ece**\u4efb\u4f55\u4e00\u4e2a**\u533a\u57df $X$ \u5230 \u533a\u57df $K$ \u7684\u6700\u77ed\u8def\u5f84.\n> - \u56de\u6536\u8def\u7ebf\u6811\uff1a\u56de\u6536\u8def\u7ebf\u6784\u6210\u7684\u6811.\n> - \u6807\u8bb0\u533a\u57df\uff1a\u6240\u6709\u7684\u56de\u6536\u533a\u57df\u53ca\u56de\u6536\u533a\u57df\u4e24\u4e24\u7684 $LCA$\uff0c\u4ee5\u53ca\u533a\u57df $K$.\n> - \u963b\u788d\uff1a\u82e5\u4e24\u6807\u8bb0\u533a\u57df\u4e4b\u95f4\u7684\u8def\u5f84\u88ab\u5207\u65ad\uff0c\u5219\u6240\u6709\u5305\u542b\u8fd9\u6761\u8def\u5f84\u7684\u8def\u5f84\u88ab\u963b\u788d.\n> - \u5207\u65ad\uff1a\u5207\u65ad\u4e00\u6761\u8def\u5f84\u7684\u4ee3\u4ef7\u4e3a\u8be5\u8def\u5f84\u7684\u957f\u5ea6.\n> - \u6295\u653e\u533a\u57df\u88ab\u6807\u8bb0\u4ec5\u5f53\u8be5\u6295\u653e\u533a\u57df\u4e3a\u4e24\u4e2a\u56de\u6536\u533a\u57df\u7684 $LCA$.\n>\n> \u6c42\u6240\u6709\u4ece $K$ \u5230 $X$ \u7684\u8def\u5f84\u90fd\u88ab\u963b\u788d\u7684\u6700\u5c0f\u4ee3\u4ef7\uff08~~\u4f3c\u4e4e\u8bb2\u7684\u4ecd\u7136\u4e0d\u662f\u4eba\u8bdd~~\uff09\n\n> \u7b80\u8981\u7248\u9898\u9762\uff1a\n>\n> 1. \u7ed9\u51fa $num$ \u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a $num$ \u4e2a\u70b9\u7684\u989c\u8272\u53d6\u53cd.\n> 2. \u7ed9\u51fa $num$ \u4e2a\u70b9\uff0c\u5efa\u51fa\u4e00\u68f5\u865a\u6811\uff0c\u6c42\u865a\u6811\u4e0a\u989c\u8272\u4e3a $1$ \u7684\u70b9\u4e0e $K$ \u4e0d\u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7.\n> 3. \u521d\u59cb\u65f6\u6811\u4e0a\u6240\u6709\u70b9\u989c\u8272\u4e3a $0$.\n> 4. \u521d\u59cb\u65f6\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u81ea\u884c\u751f\u6210\u6574\u5f20\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u6811.\n\n\u5bf9\u4e8e\u7b2c $1$ \u70b9\uff0c\u989c\u8272\u53d6\u53cd\u53ef\u4ee5\u76f4\u63a5\u53d6\u53cd\uff0c\u5bf9\u4e8e\u7b2c $4$ \u70b9\uff0c**dijistra**\u53ef\u4ee5\u6beb\u65e0\u538b\u529b\u7684\u89e3\u51b3.\n\n\u8fd9\u4e48\u770b\u6765\u8fd9\u5c31\u662f\u4e00\u9053\u865a\u6811\u7684\u677f\u5b50\u9898\u4e86\uff0c\u53c8\u56de\u5230\u4e86\u7ecf\u5178\u95ee\u9898\uff0c**\u6c42\u6839\u4e0e\u5176\u4ed6\u989c\u8272\u4e3a $1$ \u7684\u70b9\u4e0d\u8fde\u901a\u6240\u9700\u5272\u53bb\u7684\u6700\u5c0f\u8fb9\u96c6**.\n\n- \u8bbe $f_x$\u4e3a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u989c\u8272\u4e3a $1$ \u7684\u8282\u70b9\u4e0d\u4e0e $1$ \u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7.\n- \u5f53 $color_y=1,y \\in son_x$ \u65f6\uff0c\u6709 $f_x=\\sum_{y \\in  son_x} w(x,y)$.\u5f88\u597d\u7406\u89e3\uff0c\u5f53 $y$ \u7684\u989c\u8272\u4e3a $1$ \u65f6\uff0c\u5fc5\u987b\u5c06 $y$ \u548c $x$ \u7684\u8fb9\u5207\u65ad\uff0c\u56e0\u4e3a\u5c31\u7b97 $y$ \u7684\u5b50\u6811\u90fd\u4e0d\u4e0e $x$ \u8fde\u901a\uff0c\u4f46 $y$ \u8fd8\u662f\u548c $x$ \u8fde\u901a\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u65ad\u6389 $w(x,y)$.\n- \u5f53 $color_y=0,y \\in son_x$ \u65f6\uff0c\u6709 $f_x=\\sum_{y \\in son_x} \\min(f_y,w(x,y))$.\u4e3a\u4ec0\u4e48\u73b0\u5728\u53c8\u53ef\u4ee5\u9009\u62e9\u4ee4 $y$ \u7684\u5b50\u6811\u4e0d\u8fde\u901a\u5462\uff1f\u56e0\u4e3a\u5f53 $y$ \u7684\u989c\u8272\u4e0d\u4e3a $1$ \u65f6\uff0c\u6211\u4eec\u4e0d\u518d\u5173\u5fc3 $y$ \u4e0e $x$ \u662f\u5426\u8fde\u901a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e24\u79cd\u51b3\u7b56\u4e2d\u53d6\u6700\u4f18\u89e3.\n\n\u76f4\u63a5\u5728\u865a\u6811\u4e0a\u8dd1DP\u5373\u53ef.\n\n**PS:\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u591a\u6709 $100000$ \u6761\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u90bb\u63a5\u8868\u6570\u7ec4\u7684\u5927\u5c0f\u8981\u5f00\u5230 $200005$ \u800c\u4e0d\u662f $100005$**.\n\n**Show the Code**\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#include<functional>\n#define pr(x,y) printf(\"%d->%d\\n\",x,y)\n#define min(a,b) ((a)<(b)? (a):(b))\nint n,m,k,T,cnt,ans,num,top;\nint f[50005][25];\nint h[50005],to[200005],ver[200005],w[200005];\nint b[50005],d[50005],dis[50005],pre[50005],v[50005],st[50005],dfn[50005];\nstd::vector<int> mp[50005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y,int z=0) {\n\tto[++cnt]=y;\n\tver[cnt]=h[x];\n\tw[cnt]=z;\n\th[x]=cnt;\n}\ninline bool cmp(int x,int y) {return dfn[x]<dfn[y];}\ninline void swap(int &x,int &y) {int tmp=x;x=y;y=tmp;}\ninline void dijistra(int u) {\n\tmemset(dis,0x3f,sizeof(dis));\n\tstd::priority_queue<std::pair<int,int> > Q;\n\tQ.push(std::make_pair(0,u));\n\tdis[u]=0;\n\twhile(Q.size()) {\n\t\tint x=Q.top().second,d=-Q.top().first;Q.pop();\n\t\tif(d!=dis[x]) continue;\n\t\tfor(register int i=h[x];i;i=ver[i]) {\n\t\t\tint y=to[i];\n\t\t\tif(dis[y]>dis[x]+w[i]) {pre[y]=x;dis[y]=dis[x]+w[i];Q.push(std::make_pair(-dis[y],y));} \n\t\t\telse if(dis[y]==dis[x]+w[i]&&pre[y]>x) {pre[y]=x;}\n\t\t}\n\t}\n\tmemset(h,0,sizeof(h));\n\tfor(register int x=1;x<=n;++x) {if(x!=k) mp[pre[x]].push_back(x);}\n}\nvoid prework(int x) {\n\tdfn[x]=++num;\n\tfor(register int i=1;i<=15;++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor(register int i=0;i<mp[x].size();++i) {\n\t\tint y=mp[x][i];\n\t\tf[y][0]=x;\n\t\td[y]=d[x]+1;\n\t\tprework(y);\n\t}\n}\ninline int LCA(int x,int y) {\n\tif(d[x]>d[y]) swap(x,y);//d[x]<=d[y]\n\tfor(register int i=15;i>=0;--i) {if(d[x]<=d[f[y][i]]) y=f[y][i];}\n\tif(x==y) return x;\n\tfor(register int i=15;i>=0;--i) {if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];}\t\n\treturn f[x][0];\n}\ninline void insert(int x) {\n\tif(top==0) {st[++top]=x;return;}\n\tint z=LCA(x,st[top]);\n\tif(z==st[top]) {st[++top]=x;return;}\n\twhile(top>1&&d[z]<d[st[top-1]]) {add(st[top-1],st[top]);--top;}\n\tif(d[z]<d[st[top]]) {add(z,st[top]);--top;}\n\tif(!top||st[top]!=z) {st[++top]=z;}\n\tst[++top]=x;\n}\nint dfs(int x) {\n\tint res=0;\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i],tmp=dfs(y);\n\t\tif(b[y]) res+=dis[y]-dis[x];//\u5168\u90e8\u5207\u8fb9\uff0c\u5982\u679c\u4e0d\u76f4\u63a5\u5207\u8fb9\u4ecd\u7136\u8fde\u901a.\n\t\telse res+=min(tmp,dis[y]-dis[x]);//\u5426\u5219\u53ef\u4ee5\u9009\u62e9\u5207\u6811\u8fd8\u662f\u5207\u8fb9\u3002.\n\t}\n\th[x]=0;\n\treturn res;\n}\nint main() {\n\tn=read(),m=read(),k=read(),T=read();\n\tfor(register int i=1;i<=m;++i) {\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tdijistra(k);\n\td[k]=1;prework(k);\n\twhile(T--) {\n\t\tint op=read(),tot=read();\n\t\tif(op==0) {for(register int i=1;i<=tot;++i) b[read()]^=1;}\n\t\telse {\n\t\t\tfor(register int i=1;i<=tot;++i) v[i]=read();\n\t\t\tstd::sort(v+1,v+1+tot,cmp);\n\t\t\tcnt=0;st[top=1]=k;\n\t\t\tfor(register int i=1;i<=tot;++i) {if(v[i]!=k) insert(v[i]);}\n\t\t\twhile(top>1) {add(st[top-1],st[top]);--top;}\n\t\t\tans=dfs(k);\n\t\t\tprintf(\"%d\\n\",ans==0? -1:ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1584943837,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5680 \u3010[GZOI2017]\u5171\u4eab\u5355\u8f66\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5680) [My Blog](https://www.cnblogs.com/LanrTabe/p/12173581.html)\n\n\u4e4b\u524d\u6ca1\u770b\u61c2\u9898\u610f\u5c31\u628a\u8fd9\u9898\u6254\u4e86\uff0c\u73b0\u5728\u4e00\u770b\u662f\u8bfb\u9519\u9898\u610f\u4e86\n\n### \u7b80\u5316\u7248\u9898\u610f\n\n>\u7ed9\u51fa\u4e00\u9897\u6811\uff08\u8fd9\u4e2a\u56fe\u7684\u6700\u77ed\u8def\u5f84\u751f\u6210\u6811\uff09\uff0c\u6bcf\u4e2a\u70b9\u521d\u59cb\u989c\u8272\u4e3a$0$\n>\n>\u4e24\u79cd\u64cd\u4f5c\uff1a\n>\n>1. \u5c06\u90e8\u5206\u70b9\u989c\u8272\u53d6\u53cd\n>\n>2. \u7ed9\u51fa\u4e00\u4e9b\u70b9\uff0c\u5efa\u51fa\u865a\u6811\uff08\u8fb9\u6743\u4e3a\u4e24\u70b9\u6811\u4e0a\u8ddd\u79bb\uff09\uff0c\u6c42\u6700\u5c0f\u5272\u8fb9\u4ee3\u4ef7\u4f7f\u5f97\u865a\u6811\u4e0a\u6ca1\u6709\u989c\u8272\u4e3a$1$\u7684\u70b9\u4e0e\u6839\u8054\u901a\n\n\u90a3\u8fd9\u5c31\u5f88\u6a21\u677f\u4e86\uff1a\n\n\u8bbe$f[x]$\u8868\u793a$x$\u5b50\u6811\u7684\u7b54\u6848\uff0c$c[x]$\u8868\u793a$x$\u7684\u989c\u8272\uff0c\u5219\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\uff08\u5f53$f[K]=0$\u65f6\u8f93\u51fa$-1$\uff09\n$$f[x]+=Val(x,y)\\quad (c[y]=1)$$\n\n$$f[x]+=\\min (Val(x,y),f[y])\\quad (c[y]=0)$$\n\n\n\uff08\u6ce8\u610f\u4ee5\u4e0a\u65b9\u6cd5\u6ca1\u6709\u8003\u8651\u8fb9\u6743\u5168\u4e3a$0$\u4f46\u662f\u7b54\u6848\u4e0d\u4e3a$-1$\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u597d\u50cf\u6ca1\u6709\u8fd9\u79cd\u6570\u636e\uff0c\u53cd\u6b63\u4e5f\u4e0d\u96be\u7279\u5224\u5c31\u6ca1\u7ba1\u4e86\uff09\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((N+M)\\log N+Qnum(\\log num+\\log N))$\n\n\uff08\u6570\u636e\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5c0f\uff09\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n\ninline char Getchar()\n{\n    static char In[1<<22],*p1=In,*p2=In;\n    return p1==p2&&(p2=(p1=In)+fread(In,1,1<<22,stdin),p1==p2)?EOF:*p1++;\n}\n\ninline int Getint()\n{\n    int x=0,c;\n    while(!isdigit(c=Getchar()));\n    for(;isdigit(c);c=Getchar())x=x*10+(c^48);\n    return x;\n}\n\nconst int N=50005,Inf=0x7f7f7f7f;\nint n,M,K,Q,Dis[N],Pre[N];\nint Dfn[N],Tim,Dep[N],f[N][16];\nint c[N],a[N],s[N],Top;\nstd::vector<int> G[N],Gv[N],T[N],V[N];\n//Graph|Graph Value|Tree|Virtual Tree\n\nvoid Dijkstra()\n{\n    struct Rec{int x,d;inline bool operator<(const Rec& o)const{return d>o.d;}};\n    std::priority_queue<Rec> q;\n    memset(Dis,0x7f,sizeof Dis);\n    q.push((Rec){K,Dis[K]=0});\n    while(!q.empty())\n    {\n        int x=q.top().x,d=q.top().d;\n        if(q.pop(),d!=Dis[x])continue;\n        for(int i=0,y,v;i<(int)G[x].size();++i)\n            if(Dis[y=G[x][i]]>Dis[x]+(v=Gv[x][i])||(Dis[y]==Dis[x]+v&&x<Pre[y]))\n                q.push((Rec){y,Dis[y]=Dis[x]+v}),Pre[y]=x;\n    }\n    for(int i=1;i<=n;++i)if(i!=K)T[Pre[i]].push_back(i);\n}\n\nvoid DFS(int x,int Fa)\n{\n    Dfn[x]=++Tim,Dep[x]=Dep[f[x][0]=Fa]+1;\n    for(int i=1;i<=15;++i)f[x][i]=f[f[x][i-1]][i-1];\n    for(auto y:T[x])if(y!=Fa)DFS(y,x);\n}\n\nint Lca(int x,int y)\n{\n    if(Dep[x]<Dep[y])std::swap(x,y);\n    for(int i=15;i>=0;--i)if(Dep[f[x][i]]>=Dep[y])x=f[x][i];\n    if(x==y)return y;\n    for(int i=15;i>=0;--i)if(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n    return f[y][0];\n}\n\nint DP(int x)\n{\n    int Res=0;\n    for(auto y:V[x])\n    {\n        int v=DP(y);\n        if(c[y])Res+=Dis[y]-Dis[x];\n        else Res+=std::min(v,Dis[y]-Dis[x]);\n    }\n    V[x].clear();\n    return Res;\n}\n\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    n=Getint(),M=Getint(),K=Getint(),Q=Getint();\n    for(int i=1,x,y,z;i<=M;++i)\n    {\n        x=Getint(),y=Getint(),z=Getint();\n        G[x].push_back(y),Gv[x].push_back(z);\n        G[y].push_back(x),Gv[y].push_back(z);\n    }\n    Dijkstra(),DFS(K,0);\n    for(int o,k;Q--;)\n        if(o=Getint(),k=Getint(),!o)while(k--)c[Getint()]^=1;\n        else\n        {\n            for(int i=1;i<=k;++i)a[i]=Getint();\n            s[Top=1]=K,std::sort(a+1,a+k+1,[](int x,int y){return Dfn[x]<Dfn[y];});\n            for(int i=1;i<=k;++i)\n            {\n                int Ls=Lca(s[Top],a[i]);\n                while(Top>1&&Dfn[s[Top-1]]>=Dfn[Ls])V[s[Top-1]].push_back(s[Top]),--Top;\n                if(s[Top]!=Ls)V[Ls].push_back(s[Top]),s[Top]=Ls;\n                s[++Top]=a[i];\n            }\n            while(Top>1)V[s[Top-1]].push_back(s[Top]),--Top;\n            int Ans=DP(K);\n            printf(\"%d\\n\",Ans?Ans:-1);\n        }\n    return 0;\n}\n\n```",
        "postTime": 1578575987,
        "uid": 56677,
        "name": "LanrTabe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5680 \u3010[GZOI2017]\u5171\u4eab\u5355\u8f66\u3011"
    },
    {
        "content": "~~\u3010\u6a21\u677f\u3011\u8bfb\u9898~~\n\n\u672c\u849f\u84bb\u7801\u91cf\u4e0a 3k \u7684\u7b2c\u4e8c\u9898\n\n> $B$ \u516c\u53f8\u4e3a\u4e86\u51cf\u5c11\u6210\u672c\uff0c\u56de\u6536\u65f6\u4ece\u533a\u57df $K$ \u5230\u4efb\u4f55\u4e00\u4e2a\u533a\u57df $X$ \u90fd\u9009\u62e9\u957f\u5ea6**\u6700\u77ed**\u7684\u8def\u5f84\uff0c\u5982\u679c\u6709\u591a\u6761\u5230\u67d0\u4e00\u4e2a\u533a\u57df\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5219\u9009\u62e9\u6240\u6709\u6700\u77ed\u8def\u5f84\u4e2d\u8be5\u533a\u57df\u7684\u524d\u4e00\u533a\u57df**\u7f16\u53f7\u6700\u5c0f**\u7684\u4e00\u6761\u8def\u5f84\uff0c\u79f0\u8fd9\u6761\u8def\u5f84\u4e3a $K$ \u5230 $X$ \u7684**\u56de\u6536\u8def\u7ebf**\u3002\u6240\u6709\u7684**\u56de\u6536\u8def\u7ebf**\u7ec4\u6210\u4e00\u68f5\u6811\u72b6\u7ed3\u6784\uff0c\u79f0\u4e4b\u4e3a**\u56de\u6536\u8def\u7ebf\u6811**\u3002\n\n\u6839\u636e\u9898\u610f\uff0c**\u56de\u6536\u8def\u7ebf\u6811**\u5c31\u662f\u6700\u77ed\u8def\u5f84\u6811 $T$\uff0c\u8dd1\u4e00\u904d\u8bb0\u5f55\u65b9\u6848\u7684 Dijkstra \u6c42\u51fa\u5373\u53ef\u3002\n\n> $B$ \u516c\u53f8\u6bcf\u6b21\u4f1a\u56de\u6536\u82e5\u5e72\u4e2a\u533a\u57df\u7684\u5355\u8f66\uff0c\u79f0\u8fd9\u4e9b\u533a\u57df\u4e3a**\u56de\u6536\u533a\u57df**\u3002$B$ \u516c\u53f8\u8fd8\u5c06\u67d0\u4e9b\u533a\u57df\u8bbe\u4e3a**\u6295\u653e\u533a\u57df**\uff0c\u79f0\u5176\u4f59\u533a\u57df\u4e3a**\u975e\u6295\u653e\u533a\u57df**\u3002\u5728**\u56de\u6536\u8def\u7ebf\u6811**\u4e0a\uff0c\u6807\u8bb0\u51fa\u533a\u57df $K$ \uff0c\u6807\u8bb0\u51fa\u6240\u6709\u7684**\u56de\u6536\u533a\u57df**\uff0c\u4ee5\u53ca\u6807\u8bb0\u51fa\u4efb\u610f\u4e24\u4e2a**\u56de\u6536\u533a\u57df**\u5728**\u56de\u6536\u8def\u7ebf\u6811**\u4e0a\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6807\u8bb0 $T$ \u4e0a\u4ee5**\u56de\u6536\u533a\u57df**\u4e3a\u5173\u952e\u70b9\u96c6\u7684\u865a\u6811 $V$\uff0c\u8be2\u95ee\u65f6\u5efa\u7acb\u865a\u6811\u5373\u53ef\u3002\n\n> $A$ \u516c\u53f8\u5bf9 $B$ \u516c\u53f8\u7684\u56de\u6536\u884c\u52a8\u9020\u6210\u4e86\u963b\u788d\uff0c**\u5f53\u4e14\u4ec5\u5f53**\u5bf9\u4efb\u610f\u4e00\u4e2a $K$ \u4ee5\u5916\u7684\u88ab\u6807\u8bb0\u7684**\u6295\u653e\u533a\u57df** $X$\uff0c\u4ece\u533a\u57df $K$ \u5230 $X$ \u7684**\u56de\u6536\u8def\u7ebf\u4e0a**\u90fd\u5b58\u5728\u4e24\u4e2a\u88ab\u6807\u8bb0\u7684\u533a\u57df\uff0c\u5b83\u4eec\u4e4b\u95f4**\u6240\u6709\u9053\u8def**(\u56de\u6536\u8def\u7ebf\u6811\u4e0a\u4e24\u70b9\u8def\u5f84)\u88ab\u963b\u788d\u3002\u963b\u788d\u4e00\u6761\u9053\u8def\u7684\u4ee3\u4ef7\u4e3a\u8be5\u9053\u8def\u7684\u957f\u5ea6\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6c42\u963b\u788d $V$ \u4e0a\u6240\u6709**\u6295\u653e\u533a\u57df**\u7684\u4ee3\u4ef7\uff0c\u8dd1\u865a\u6811\u4e0a DP \u5373\u53ef\u3002\n\n\u7ef4\u62a4 $t_x$ \u8868\u793a $x$ \u662f\u5426\u6295\u653e\u533a\u57df\uff0c\u64cd\u4f5c $0$ \u76f4\u63a5\u628a\u7ed9\u5b9a\u7684\u70b9\u7684 $t_x$ \u53d6\u53cd\u5373\u53ef\u3002\n\n\u4ee5\u64cd\u4f5c $1$ \u7ed9\u5b9a\u7684\u70b9\u96c6\u5efa\u7acb\u865a\u6811\uff0c\u8bbe $f_x$ \u8868\u793a\u963b\u788d $x$ \u5b50\u6811\u5185\u6240\u6709\u6295\u653e\u533a\u57df\u7684\u4ee3\u4ef7\u3002\n\n\u5219\u6709\n\n$$\nf_u=\\sum\\limits_{v\\in son_u}\\begin{cases}w(u,v)&t_v=1\\\\\\min(w(u,v),f_v)&t_v=0\\end{cases}\n$$\n\n\u6ce8\u610f\u6e05\u7a7a\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#define P pair<int, int>\nusing namespace std;\nstruct G\n{\n    struct E\n    {\n        int v, w, t;\n    } e[200050];\n    int c, h[50050];\n    void A(int u, int v, int w)\n    {\n        e[++c] = {v, w, h[u]};\n        h[u] = c;\n    }\n} A, T, V;\nbool t[50050], w[50050];\nP r[50050];\npriority_queue<P, vector<P>, greater<P>> q;\nint n, m, s, O, p, a[50050], z[50050], b[50050], d[50050], f[50050][25], o[50050], W[50050], g[50050];\nbool C(int x, int y) { return b[x] < b[y]; }\nvoid D(int u)\n{\n    b[u] = ++p;\n    for (int i = T.h[u], v; i; i = T.e[i].t)\n        if (!b[v = T.e[i].v])\n        {\n            d[v] = d[f[v][0] = u] + 1;\n            W[v] = W[u] + T.e[i].w;\n            for (int j = 1; f[v][j - 1]; ++j)\n                f[v][j] = f[f[v][j - 1]][j - 1];\n            D(v);\n        }\n}\nint L(int x, int y)\n{\n    if (d[x] < d[y])\n        swap(x, y);\n    while (d[x] > d[y])\n        x = f[x][__lg(d[x] - d[y])];\n    if (x == y)\n        return x;\n    for (int k = __lg(d[x]); k >= 0; --k)\n        if (f[x][k] != f[y][k])\n            x = f[x][k], y = f[y][k];\n    return f[x][0];\n}\nvoid F(int u)\n{\n    o[u] = 0;\n    for (int i = V.h[u], v; i; i = V.e[i].t)\n        F(v = V.e[i].v), o[u] += min(V.e[i].w, t[v] ? 1 << 30 : o[v]);\n}\nint main()\n{\n    scanf(\"%d%d%d%d\", &n, &m, &s, &O);\n    for (int i = 0, u, v, w; i < m; ++i)\n        scanf(\"%d%d%d\", &u, &v, &w), A.A(u, v, w), A.A(v, u, w);\n    memset(g, 0x3f, sizeof g);\n    q.push({g[s] = 0, s});\n    while (!q.empty())\n    {\n        int u = q.top().second;\n        q.pop();\n        if (!w[u])\n        {\n            w[u] = 1;\n            for (int i = A.h[u], v; i; i = A.e[i].t)\n                if (g[v = A.e[i].v] > g[u] + A.e[i].w || g[v] == g[u] + A.e[i].w && r[v].first > u)\n                    q.push({g[v] = g[r[v].first = u] + A.e[i].w, v}), r[v].second = A.e[i].w;\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n        if (r[i].first)\n            T.A(r[i].first, i, r[i].second);\n    D(s);\n    for (int i = 0, r, k, c = 0, w = 1; i < O; ++i)\n    {\n        scanf(\"%d%d\", &r, &k);\n        if (r)\n        {\n            for (int j = 0; j < c; ++j)\n                V.h[z[j]] = 0;\n            V.c = c = 0;\n            w = 1;\n            for (int j = 0; j < k; ++j)\n                scanf(\"%d\", a + j);\n            a[k++] = s;\n            sort(a, a + k, C);\n            z[c++] = a[0];\n            for (int j = 1; j < k; ++j)\n                z[c++] = L(a[j], a[j - 1]), z[c++] = a[j];\n            sort(z, z + c, C);\n            c = unique(z, z + c) - z;\n            for (int j = 1, l; j < c; ++j)\n                l = L(z[j], z[j - 1]), V.A(l, z[j], W[z[j]] - W[l]);\n            for (int j = 0; j < c; ++j)\n                if (t[z[j]])\n                {\n                    w = 0;\n                    break;\n                }\n            if (w)\n            {\n                puts(\"-1\");\n                continue;\n            }\n            F(z[0]);\n            printf(\"%d\\n\", o[z[0]]);\n        }\n        else\n            for (int j = 0, x; j < k; ++j)\n                scanf(\"%d\", &x), t[x] ^= 1;\n    }\n    return 0;\n}\n```\n\n~~\u987a\u4fbf\uff0c\u8fd9\u9898\u9898\u9762 $\\LaTeX$ \u548c\u6c49\u5b57\u4e4b\u95f4\u5c11\u7a7a\u683c\uff0c\u76f4\u63a5\u590d\u5236\u8fc7\u6765\u5ba1\u6838\u6ca1\u8fc7~~",
        "postTime": 1685150936,
        "uid": 388651,
        "name": "5k_sync_closer",
        "ccfLevel": 7,
        "title": "P5680 [GZOI2017]\u5171\u4eab\u5355\u8f66 \u9898\u89e3"
    },
    {
        "content": "~~\u611f\u89c9\u8fd9\u9898\u6700\u5927\u7684\u96be\u70b9\u5728\u8bfb\u9898\u4e0a\u3002~~\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a [\u865a\u6811](https://oi-wiki.org/graph/virtual-tree/)\u3002\n\n\u7b80\u5316\u4e00\u4e0b\u9898\u9762\uff1a\n\n\u7ed9\u5b9a\u4e00\u5f20\u56fe\u548c\u5b83\u7684\u6e90\u70b9 $k$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u5b83\u7684\u6700\u77ed\u8def\u5f84\u6811\uff0c\u82e5\u4e00\u4e2a\u70b9\u6709\u591a\u4e2a\u524d\u9a71\uff0c\u53d6\u7f16\u53f7\u6700\u5c0f\u7684\u4e3a\u524d\u9a71\u3002\u5728\u5f97\u5230\u7684\u6811\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u521d\u59cb\u4e3a\u767d\u8272\u3002\u64cd\u4f5c 0 \u4e3a\u628a\u7ed9\u5b9a\u7684\u8282\u70b9\u7684\u989c\u8272\u53d6\u53cd\uff0c\u64cd\u4f5c 1 \u4e3a\u628a\u7ed9\u5b9a\u7684\u8282\u70b9\u548c\u6839\u8282\u70b9\u5efa\u4e00\u68f5\u865a\u6811\uff0c\u6c42\u5220\u53bb\u4e00\u4e9b**\u865a\u6811\u8fb9**\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u539f\u6811\u8fb9\uff09\u4f7f\u6839\u8282\u70b9\u548c\u6240\u6709\u9ed1\u8272\u8282\u70b9\u4e0d\u8fde\u901a\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\uff08\u5220\u53bb\u4e00\u6761\u865a\u6811\u8fb9\u6240\u9700\u4ee3\u4ef7\u4e3a\u5b83\u5305\u542b\u7684\u6240\u6709\u539f\u6811\u8fb9\u7684\u957f\u5ea6\u603b\u548c\uff09\uff0c\u7279\u522b\u5730\uff0c\u82e5\u865a\u6811\u4e2d\u6ca1\u6709\u9ed1\u8272\u8282\u70b9\uff0c\u8f93\u51fa `-1`\u3002\n\n\u6c42\u6700\u77ed\u8def\u5f84\u6811\u53ea\u9700\u8981\u4e00\u4e2a dijkstra \u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\u5efa\u865a\u6811\u5de6\u8f6c\u4f60\u8c37\u6a21\u677f\u533a\uff0c\u9700\u8981\u8003\u8651\u7684\u53ea\u6709\u5efa\u51fa\u865a\u6811\u540e\u5982\u4f55DP\u51fa\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u4ee4 $dp_i$ \u8868\u793a\u4f7f $i$ \u7684\u5b50\u6811\u5185\u6240\u6709\u9ed1\u8272\u8282\u70b9\u4e0e\u5b83\u7684\u7236\u4eb2 $fa_i$ \u4e0d\u8fde\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n- \u5f53\u524d\u8282\u70b9\u4e3a\u9ed1\u8272\n\n\u90a3\u4e48 $fa_i$ \u548c $i$ \u7684\u8fd9\u6761\u8fb9\u5fc5\u987b\u8981\u5272\uff0c\u663e\u7136\u5272\u5b8c\u540e\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u90fd\u4e0d\u4f1a\u4e0e $fa_i$ \u8fde\u901a\uff0c$dp_i=\\text{dis}(i,fa_i)$\u3002\n\n- \u5f53\u524d\u8282\u70b9\u4e3a\u767d\u8272\n\n\u90a3\u4e48 $fa_i$ \u548c $i$ \u7684\u8fd9\u6761\u8fb9\u4e0d\u4e00\u5b9a\u8981\u5272\uff0c\u4f46\u5b50\u6811\u5185\u6240\u6709\u9ed1\u8272\u8282\u70b9\u90fd\u4e0d\u80fd\u4e0e $fa_i$ \u8fde\u901a\uff0c$dp_i=\\min(\\text{dis}(i,fa_i),\\sum\\limits_{j\\in son_i}dp_j)$\u3002\n\n\u6700\u7ec8\u7b54\u6848\u5373\u4e3a $dp_{k}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m+\\sum num)\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\ntypedef long long ll;\nconst int maxn=1e5+10;\ntemplate<class T>inline bool ckmin(T &x,const T &y){return x>y?x=y,1:0;}\ntemplate<class T>inline bool ckmax(T &x,const T &y){return x<y?x=y,1:0;}\nstruct edge{\n\tint v,to,nxt;\n}e[maxn<<1];\nint hd[maxn],len;\ninline void addedge(int fr,int to,int v=1){\n\te[++len]={v,to,hd[fr]};\n\thd[fr]=len;\n}\nstruct node{\n\tint d,pos;\n\tinline bool operator<(const node &k)const{\n\t\treturn d>k.d;\n\t}\n};\npriority_queue<node>q;\nint dis[maxn],ed[maxn],pre[maxn];\nbool vis[maxn];\nint m,n,ql,rt;\ninline void dijkstra(){\n\tmemset(dis,0x3f,sizeof dis);\n\tdis[rt]=0;\n\tq.push({0,rt});\n\twhile(q.size()){\n\t\tri p=q.top().pos;q.pop();\n\t\tif(vis[p])continue;\n\t\tvis[p]=true;\n\t\tfor(ri i=hd[p];i;i=e[i].nxt)\n\t\t\tif(dis[p]+e[i].v<dis[e[i].to]){\n\t\t\t\tdis[e[i].to]=dis[p]+e[i].v;\n\t\t\t\ted[e[i].to]=e[i].v;\n\t\t\t\tpre[e[i].to]=p;\n\t\t\t\tif(!vis[e[i].to])q.push({dis[e[i].to],e[i].to});\n\t\t\t}\n\t\t\telse if(dis[p]+e[i].v==dis[e[i].to]&&p<pre[e[i].to]){\n\t\t\t\ted[e[i].to]=e[i].v;\n\t\t\t\tpre[e[i].to]=p;\n\t\t\t}\n\t}\n}\nnamespace LCA{\n\tint cnt,dep[maxn],fir[maxn],lg,lg2[maxn<<1],st[(int)log2(maxn)+2][maxn<<1];\n\tvoid dfs(int p,int f){\n\t\tdep[p]=dep[f]+1;\n\t\tst[0][++cnt]=p;\n\t\tfir[p]=cnt;\n\t\tfor(ri i=hd[p];i;i=e[i].nxt)\n\t\t\tif(e[i].to!=f)\n\t\t\t\tdis[e[i].to]=dis[p]+e[i].v,dfs(e[i].to,p),st[0][++cnt]=p;\n\t}\n\tinline int ptmin(const int &x,const int &y){\n\t\treturn dep[x]<dep[y]?x:y;\n\t}\n\tinline void build_st(){\n\t\tfor(ri i=1;i<=cnt;++i)lg2[i]=lg2[i-1]+((2<<lg2[i-1])==i);\n\t\tlg=lg2[cnt];\n\t\tfor(ri i=1;i<=lg;++i)\n\t\t\tfor(ri j=1;j+(1<<i)-1<=cnt;++j)\n\t\t\t\tst[i][j]=ptmin(st[i-1][j],st[i-1][j+(1<<(i-1))]);\n\t}\n\tinline int lca(int x,int y){\n\t\tri l=fir[x],r=fir[y];\n\t\tif(l>r)swap(l,r);\n\t\tri k=lg2[r-l+1];\n\t\treturn ptmin(st[k][l],st[k][r-(1<<k)+1]);\n\t}\n\tinline void init(int rt){\n\t\tdfs(rt,0);\n\t\tbuild_st();\n\t}\n}\nusing LCA::dep;\nusing LCA::fir;\nusing LCA::lca;\nvector<int>g[maxn],sp;\n#define link(fr,to) g[fr].push_back(to)\nint st[maxn],tp;\ninline void insert(int p){\n\tif(tp){\n\t\tri anc=lca(p,st[tp]);\n\t\twhile(tp>1&&dep[anc]<dep[st[tp-1]]){\n\t\t\tlink(st[tp-1],st[tp]);\n\t\t\t--tp;\n\t\t}\n\t\tif(dep[anc]<dep[st[tp]])link(anc,st[tp]),--tp;\n\t\tif(!tp||anc!=st[tp])st[++tp]=anc;\n\t}\n\tst[++tp]=p;\n}\ninline void build_vt(){\n\tsort(sp.begin(),sp.end(),[&](const int &x,const int &y){return fir[x]<fir[y];});\n\tsp.erase(unique(sp.begin(),sp.end()),sp.end());\n\tfor(auto i:sp)insert(i);\n\twhile(--tp)link(st[tp],st[tp+1]);\n}\nint tot;\nint calc(int p){\n\tri sum=0;\n\ttot+=vis[p];\n\tfor(auto i:g[p]){\n\t\tri tmp=min(dis[i]-dis[p],calc(i));\n\t\tif(vis[i])sum+=dis[i]-dis[p];\n\t\telse sum+=tmp;\n\t}\n\tg[p].clear();\n\treturn sum;\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&rt,&ql);\n\twhile(m--){\n\t\tri x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\taddedge(x,y,z),addedge(y,x,z);\n\t}\n\tdijkstra();\n\tmemset(hd,0,sizeof hd);\n\tlen=0;\n\tfor(ri i=1;i<=n;++i)\n\t\tif(i!=rt)\n\t\t\taddedge(pre[i],i,ed[i]);\n\tLCA::init(rt);\n\tmemset(vis,0,sizeof vis);\n\twhile(ql--){\n\t\tri op,x,y;\n\t\tscanf(\"%d%d\",&op,&x);\n\t\tif(op){\n\t\t\tri sum=0;\n\t\t\tsp={rt};\n\t\t\twhile(x--){\n\t\t\t\tscanf(\"%d\",&y);\n\t\t\t\tsum+=vis[y];\n\t\t\t\tsp.push_back(y);\n\t\t\t}\n\t\t\tbuild_vt();\n\t\t\ttot=0;\n\t\t\tri ans=calc(rt);\n\t\t\tprintf(\"%d\\n\",tot?ans:-1);\n\t\t}\n\t\telse{\n\t\t\twhile(x--){\n\t\t\t\tscanf(\"%d\",&y);\n\t\t\t\tvis[y]^=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1631293659,
        "uid": 67942,
        "name": "meyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5680 \u3010[GZOI2017]\u5171\u4eab\u5355\u8f66\u3011"
    }
]