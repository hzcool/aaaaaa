[
    {
        "content": "\u9898\u89e3\u91cc\u4f3c\u4e4e\u90fd\u6ca1\u6709\u63d0\u5230\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u73af\u91cc\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u4e24\u6b21\uff08\u53bb\u4e00\u6b21\uff0c\u56de\u6765\u4e00\u6b21\uff09\uff0c\u70b9\u7684`fi`\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\uff0c\u4f46\u662f\u5982\u679c\u6309\u7167\u9898\u89e3\u91cc\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u7684`fi`\u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\u3002\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u8ba1\u7b97\u4e24\u6b21\u7684\u8bdd\uff0c\u5206\u5b50\u4e0a\u7684\u4e1c\u897f\u5c31\u6bd4\u5206\u6bcd\u4e0a\u7684\u4e1c\u897f\u5c11\uff0c\u4ee5\u4e0b\u63a8\u5bfc\u90fd\u6ca1\u6cd5\u8fdb\u884c\u3002\n\n\uff08\u8fd9\u4e2abug\u8ba9\u6211\u5728\u6a21\u62df\u8d5b\u91cc\u9762\u4e0d\u6562\u51990/1\u89c4\u5212\u7b97\u6cd5\uff0c\u6700\u540e\u6b64\u98980\u5206QwQ\n\n\u73b0\u5728\u5c31\u8981\u8bc1\u660e\uff0c\u5982\u679c\u73af\u4e0a\u7684\u6bd4\u7387\u6700\u4f18\uff0c\u5219\u5fc5\u7136\u4e0d\u4f1a\u6709\u4e00\u4e2a\u70b9\u88ab\u7ecf\u8fc7\u4e24\u6b21\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u73af\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u4e24\u6b21\uff0c\u5219\u5fc5\u7136\u53ef\u4ee5\u901a\u8fc7\u90a3\u4e2a\u70b9\uff08\u8bbe\u4e3a$P_x$\uff09\u5206\u6210\u4e24\u4e2a\u6ca1\u6709\u76f8\u4ea4\u70b9\u7684\u73af\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u8bbe\u4e24\u4e2a\u73af\u7684\u5feb\u4e50\u503c\u603b\u548c\u5206\u522b\u4e3a$F_1$\u548c$F_2$\uff0c\u7528\u65f6\u603b\u548c\u5206\u522b\u4e3a$T_1$\u548c$T_2$\uff0cx\u70b9\u7684\u5feb\u4e50\u503c\u4e3a$F_x$\n\n\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8bc1\u660e\uff1a\n\n$$\\frac{F_1}{T_1}\\geq\\frac{F_1+F_2-F_x}{T_1+T_2}\\space\\space\\space or\\space\\space\\space\\frac{F_2}{T_2}\\geq\\frac{F_1+F_2-F_x}{T_1+T_2}$$\n\n\u7531\u4e8e\u53f3\u5f0f\u542b\u6709`T1+T2`\u4f5c\u4e3a\u5206\u6bcd\uff0c\u56e0\u6b64\u5c31\u53ef\u4ee5\u8003\u8651\u5c06\u4e24\u73af\u6c42\u5e73\u5747\u6570\u3002\u5373\uff0c\u53ea\u9700\u8981\u8bc1\u660e\uff1a\n\n$$\\frac{F_1}{2\\times T_1}+\\frac{F_2}{2\\times T_2} \\geq \\frac{F_1+F_2-F_x}{T_1+T_2}$$\n\n$$\\frac{F_1T_2+F_2T_1}{2(T_1+T_2)}\\geq\\frac{F_1+F_2-F_x}{T_1+T_2}$$\n\n\u56e0\u4e3a\u6211\u4eec\u5206\u7684\u4e24\u4e2a\u90fd\u662f\u73af\uff0c\u81f3\u5c11\u8981\u7ecf\u8fc7\u4e24\u6761\u8fb9\uff0c\u540c\u65f6\u9898\u76ee\u4fdd\u8bc1$T_i\\geq1$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa$T_1\\geq2$\u4e14$T_2\\geq2$\u3002\n\n\u56e0\u6b64\uff0c\u53ef\u5f97\uff1a\n\n$$\\frac{F_1T_2+F_2T_1}{2(T_1+T_2)}\\geq\\frac{F_1+F_2}{T_1+T_2}> \\frac{F_1+F_2-F_x}{T_1+T_2}$$\n\nQ.E.D.\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c\u8be5\u7b97\u6cd5\u53ea\u9002\u7528\u4e8e$T_i\\geq1$\u7684\u9898\u76ee\uff0c\u5982\u679c\u5141\u8bb8\u8fb9\u6743\u7b49\u4e8e0\u6216\u8005\u4e3a\u5c0f\u4e8e1\u7684\u5c0f\u6570\u7684\u8bdd\uff0c\u5c31\u5f97\u53e6\u627e\u7b97\u6cd5\u3002\n\n\uff08\u5f88\u6709\u53ef\u80fd\u662f\u7206\u641c\u4e86QwQ\uff09\n\n\u5176\u4ed6\u90e8\u5206\u9898\u89e3\u7684\u5404\u4f4d\u795e\u4ed9\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u4e3a\u4e86\u5185\u5bb9\u7684\u5b8c\u6574\u6027\uff0c\u8fd8\u662f\u5199\u5b8c\u5427QwQ\u3002\n\n\u9996\u5148\uff0c\u539f\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff0c\u6c42\u4e00\u4e2a\u73af\uff0c\u4f7f\u5f97$\\frac{\\sum F_i}{\\sum T_i}$\u6700\u5c0f\u3002\u7531\u4e8e\u4e0a\u9762\u82b1\u4e86\u51e0\u884c\u8bc1\u660e\u4e0a\u4e0b\u9f50\u9879\uff0c\u53ef\u4ee5\u5e94\u75280/1\u5206\u6570\u89c4\u5212\u3002\n\n\u5bf9\u4e8e0/1\u5206\u6570\u89c4\u5212\uff0c\u8003\u8651\u4e8c\u5206\u3002\u4e8c\u5206\u53ef\u5c06\u4e00\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5224\u5b9a\u95ee\u9898\u3002\u5982\u679c\u4e8c\u5206\u51fa\u6765\u7684`mid`\u4e3a$L$\uff0c\u5219\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u662f\u5426\u5b58\u5728\u4e00\u4e2a$\\frac{\\sum F_i}{\\sum T_i}> L$\n\n\u5206\u6570\u4e58\u8fc7\u53bb\uff08\u4fdd\u8bc1$T_i>0$\uff09\uff0c\u51cf\u56de\u6765\uff0c\u5f97\uff1a\n\n$$\\sum(F_i-L\\times T_i) > 0$$\n\n\u7531\u4e8e\u5de6\u5f0f\u4e0d\u597d\u641e\uff0c\u8003\u8651\u53d8\u6362\u3002\u5982\u679c\u5c06\u5de6\u5f0f\u4e58\u4ee5-1\uff0c\u539f\u5f0f\u53d8\u4e3a\uff1a\n\n$$\\sum(L\\times T_i-F_i)>0$$\n\n\u65e2\u7136\u6240\u6709\u8fb9\u6210\u4e00\u4e2a\u73af\uff0c\u90a3\u4e0d\u5c31\u662f\u4e00\u4e2a\u8d1f\u73af\u7684\u65b9\u7a0b\u561b\uff1f\uff1f\n\n\u4e8e\u662f\u7b97\u6cd5\u5c31\u51fa\u6765\u4e86\uff0c\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a`mid`\uff0c\u5c06\u8fb9\u6743\u53d8\u4e3a\u8fb9\u6743\u4e58`mid`\u518d\u51cf\u53bb\u4e00\u4e2a\u7aef\u70b9\u7684`F[i]`\uff08\u968f\u4fbf\u5165\u7aef\u70b9\u8fd8\u662f\u51fa\u7aef\u70b9\uff0c\u53cd\u6b63\u662f\u4e2a\u73af\uff09\uff0c\u6700\u540e`stacked spfa`\u627e\u8d1f\u73af\u5224\u5b9a\u3002\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\n#include <stack>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\ninline double lfabs(double x)\n{\n\treturn x<0?-x:x;\n}\n\nint beg[1005];\nint ed[5005];\nint nxt[5005];\nint len[5005];\nint top;\n\nvoid addedge(int a,int b,int c)\n{\n\t++top;\n\ted[top] = b;\n\tlen[top] = c;\n\tnxt[top] = beg[a];\n\tbeg[a] = top;\n}\nint n;\nint fi[5005];\nint inq[5005];\nint inqn[5005];\ndouble dist[5005];\n\nbool spfa(int s,double delta)\n{\n\tdist[s] = 0;\n\tinq[s] = 0;\n\t\n\tstack<int> stk;\n\tstk.push(s);\n\t\n\twhile(!stk.empty())\n\t{\n\t\tint th = stk.top();\n\t\tstk.pop();\n\t\tinq[th] = 0;\n\t\t\n\t\tfor(int p=beg[th]; p; p=nxt[p])\n\t\t{\n\t\t\tif(dist[th] + (delta*len[p]-fi[th]) < dist[ed[p]])\n\t\t\t{\n\t\t\t\tdist[ed[p]] = dist[th] + (delta*len[p]-fi[th]);\n\t\t\t\t\n\t\t\t\tif(!inq[ed[p]])\n\t\t\t\t{\n\t\t\t\t\tstk.push(ed[p]);\n\t\t\t\t\t++inqn[ed[p]];\n\t\t\t\t\tinq[ed[p]] = 1;\n\t\t\t\t\t\n\t\t\t\t\tif(inqn[ed[p]] > n+10)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nint main()\n{\n\tint p;\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",fi+i);\n\t}\n\tfor(int i=1; i<=p; ++i)\n\t{\n\t\tint a,b,t;\n\t\tscanf(\"%d%d%d\",&a,&b,&t);\n\t\taddedge(a,b,t);\n\t}\n\t\n\tdouble l = 0;\n\tdouble r = 1005;\n\twhile(lfabs(r-l) >= 0.0001)\n\t{\n\t\tdouble mid = (l+r)/2;\n\t\t\n\t\tfor(int i=1; i<=n; ++i)\n\t\t{\n\t\t\tdist[i] = 99999999;\n\t\t\tinq[i] = inqn[i] = 0;\n\t\t}\n\t\t\n\t\tfor(int i=1; i<=n; ++i)\n\t\t{\n\t\t\tif(!inqn[i])\n\t\t\t{\n\t\t\t\tif(spfa(i,mid))\n\t\t\t\t{\n\t\t\t\t\tl = mid;\n\t\t\t\t\tgoto die;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tr = mid;\n\t\t\n\t\tdie:;\n\t}\n\t\n\tprintf(\"%.2lf\",l+0.00005);\n}\n```",
        "postTime": 1564313318,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "0/1\u5206\u6570\u89c4\u5212\u7ecf\u5178\u6a21\u578b\u3010\u6700\u4f18\u6bd4\u7387\u73af\u3011\n\n###[0/1\u5206\u6570\u89c4\u5212 \u8be6\u89e3](https://blog.csdn.net/niiick/article/details/80925267)\n\n\u4e3a\u65b9\u4fbf\u63cf\u8ff0\uff0c\u8bb0\u73af$S=(\\{v_i\\},\\{e_i\\})$\uff0c\n\u5176\u4e2d$\\{v_i\\}$\u4e3a\u73af\u4e0a\u7ed3\u70b9\u7684\u96c6\u5408\uff0c$\\{e_i\\}$\u4e3a\u73af\u4e0a\u7684\u8fb9\u7684\u96c6\u5408\n\n\u4eff\u71670/1\u5206\u6570\u89c4\u5212\u6a21\u578b\n\n\u4e0d\u96be\u60f3\u5230\u8981\u4e8c\u5206\u4e00\u4e2amid\u7136\u540e\u5224\u5b9a\u56fe\u4e0a**\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u73afS**\n\n\u4f7f\u5f97$\\frac{\\sum_{i=1}^tFun[v_i]}{\\sum_{i=1}^tTim[e_i]}>mid$\n\n\u5373\u8be5\u73af\u662f\u5426\u6ee1\u8db3$\\sum_{i=1}^t(Fun[v_i]-mid*Tim[e_i])>0$\n\n\u82e5\u662f\u5219$L=mid$\uff0c\u5426\u5219$R=mid$\n\n\u4f46\u662f\u8fd9\u6837\u5728\u56fe\u4e2d\u5224\u5b9a\u663e\u7136\u5f88\u9ebb\u70e6\uff0c\n\u6240\u4ee5\u6211\u4eec\u8bd5\u7740\u628a\u4e0a\u5f0f\u4e24\u8fb9**\u540c\u65f6\u4e58-1**\n\n\u53d8\u6210$\\sum_{i=1}^t(mid*Tim[e_i]-Fun[v_i])<0$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5224\u5b9a\u56fe\u4e2d**\u662f\u5426\u5b58\u5728\u8d1f\u73af**\n\n\u5230\u4e86\u8fd9\u91cc\u65b9\u6cd5\u5df2\u7ecf\u5f88\u663e\u7136\u4e86\n\n\u5bf9\u4e8e\u4e00\u6761\u5165\u70b9\u4e3a$u_i$\uff0c\u51fa\u70b9\u4e3a$v_i$\u7684\u8fb9$e_i$\uff0c\n\u6211\u4eec\u628a\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u770b\u4f5c$mid*Tim[e_i]-Fun[u_i]$\uff0c\n\u7136\u540e\u5728\u56fe\u4e0a\u5224\u8d1f\u73af\uff0c\u82e5\u6709\u8d1f\u73af\u5219$L=mid$\uff0c\u5426\u5219$R=mid$\uff0c\n\u76f4\u5230\u8fbe\u5230\u7cbe\u5ea6\u8981\u6c42\n*************************\n\n```\n#include<iostream>\n#include<map>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\ntypedef double dd;\n\nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nconst int maxn=1010;\nint n,m;\nint a[maxn];\nstruct node{int v,dis,nxt;}E[5010];\nint head[maxn],tot;\nint vis[maxn],num[maxn];\ndd d[maxn]; \n\nvoid add(int u,int v,int dis)\n{\n    E[++tot].nxt=head[u];\n    E[tot].v=v; E[tot].dis=dis;\n    head[u]=tot;\n}\n\nint check(dd x)\n{\n    queue<int> q; \n    for(int i=1;i<=n;++i)//\u56e0\u4e3a\u56fe\u4e0d\u4e00\u5b9a\u8fde\u901a\uff0c\u6240\u4ee5\u521d\u59cb\u6240\u6709\u7ed3\u70b9\u5165\u961f\n    {\n    \tq.push(i);\n    \td[i]=0; vis[i]=num[i]=1;\n    }\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop(); vis[u]=0;\n        for(int i=head[u];i;i=E[i].nxt)\n        {\n            int v=E[i].v; dd dis=(dd)E[i].dis;\n            if(d[v]>d[u]+x*dis-(dd)a[u])//\u8fb9\u6743\u4e3amid*Tim[e_i]-Fun[u_i]\n            {\n                d[v]=d[u]+x*dis-(dd)a[u];\n                if(!vis[v])\n                {\n                    q.push(v); vis[v]=1;\n                    if(++num[v]>=n) return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;++i)a[i]=read();\n    for(int i=1;i<=m;++i)\n    {\n        int u=read(),v=read(),dis=read();\n        add(u,v,dis);\n    }\n    dd L=0,R=1000010,mid;\n    while(R-L>1e-4)\n    {\n        mid=(L+R)/2;\n        if(check(mid))L=mid;\n        else R=mid;\n    }\n    printf(\"%.2lf\",L);\n    return 0;\n    //niiick\n}\n\n```",
        "postTime": 1530851995,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u66b4\u529b\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u4eca\u5929\u8003\u4e86\u8fd9\u9053\u9898\u76ee\uff0c\u7136\u540e\u6211\u4e00\u770b\u8fd9\u4e1c\u897f\u4e00\u526f\u4e0d\u53ef\u505a\u7684\u6837\u5b50\u3002\u7136\u540e\u5c31\u752830min\u6253\u4e86\u4e00\u4e2a\u66b4\u529b\uff0c\u7ed3\u679c\u670980\uff1f\n\n\u4e8e\u662f\u6211\u53c8\u52a0\u4e0a\u4e00\u4e9b\u7384\u5b66\u7684STL\u7684\u4f18\u5316\u8fc7\u6389\u4e86\u8003\u8bd5\u7684\u6570\u636e\uff0c\u5728\u6d1b\u8c37\u4e0a\u5f00O2\u4e5f\u53ef\u4ee5\u5361\u8fc7\u53bb\u3002\n\n\u601d\u8def\uff1a\n~~\u663e\u800c\u6613\u89c1~~\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u4ee5\u5b83\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u627e\u5230\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\u5feb\u4e50\u503c\u6700\u5927\u7684\u73af\uff0c\u5176\u53ef\u4ee5\u66f4\u65b0\u6700\u4f18\u89e3\u7684\u6761\u4ef6~~\u663e\u7136~~\u662f\u5f53\u524d\u5230\u8fd9\u4e2a\u70b9\u6700\u4f18\u7684\u8def\u5f84\u7684\u5355\u4f4d\u65f6\u95f4\u4e50\u8da3\u503c\u5c0f\u4e8e\u672c\u6761\u8def\u5f84\u7684\u5355\u4f4d\u65f6\u95f4\u4e50\u8da3\u503c\u3002\n\n~~\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u81ea\u5df1\u60f3\u60f3\u3002\u3002\u3002~~\n\n\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u76ee\u7684\u96be\u70b9\u53ea\u662f\u5728\u4e8e\u600e\u6837\u5224\u65ad\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u4e24\u6b21\u7684\u60c5\u51b5\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff1a\n\n```cpp\nstruct node{\n\tint u;//\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\n\tbool used[N];//\u7f16\u53f7\u4e3a i \u7684\u70b9\u662f\u5426\u7ecf\u8fc7\u4e86\u4e00\u6b21\n\tvoid init(int x)\n\t{\n\t\tu=x;\n\t\tmemset(used,false,sizeof(used));\n\t}\n}st;\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\u5f80\u961f\u5217\u91cc\u4e22\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u53d8\u91cf\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9644\u4e0a\u8003\u573a\u4ee3\u7801\uff1a\n\n```\nvoid bfs(int s)\n{\n\tmemset(Fsum,0,sizeof(Fsum));\n\tmemset(Tsum,0,sizeof(Tsum));\n\tmemset(vis,false,sizeof(vis));\n\tFsum[s]=F[s];\n\tst.init(s);\n\tst.used[s]=true;\n\tq.push(st),vis[s]=true;\n\twhile(!q.empty())\n\t{\n\t\tnode qq=q.front();\n\t\tint u=qq.u;\n\t\tq.pop(),vis[u]=false;\n\t\tfor(int e=head[u];e;e=r[e].next)\n\t\t{\n\t\t\tint v=r[e].to,w=r[e].w;\n\t\t\tif(Fsum[v]==0||Tsum[v]==0)//\u5982\u679c\u8fd8\u6ca1\u6709\u8d70\u5230\u8fd9\u91cc\n\t\t\t{\n\t\t\t\tnode c=qq;\n\t\t\t\tc.u=v;\n\t\t\t\tFsum[v]=Fsum[u];\n\t\t\t\tif(!c.used[v])Fsum[v]+=F[v],c.used[v]=true;\n\t\t\t\tTsum[v]=Tsum[u]+w,q.push(c);\n\t\t\t\tvis[v]=true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdouble x=Fsum[v]/Tsum[v],y;\n\t\t\t\tnode c=qq;\n\t\t\t\tint fs=Fsum[u],ts=Tsum[u]+w;\n\t\t\t\tif(!c.used[v])fs+=F[v];\n\t\t\t\ty=fs/ts;\n\t\t\t\tif(x<y)//\u8d70\u5230\u8fc7\u8fd9\u91cc\u4f46\u662f\u5f53\u524d\u89e3\u66f4\u4f18\n\t\t\t\t{\n\t\t\t\t\tc.used[v]=true;\n\t\t\t\t\tc.u=v;\n\t\t\t\t\tFsum[v]=fs,Tsum[v]=ts;\n\t\t\t\t\tif(!vis[v])q.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}//\u88ab\u5361\u4e86\u7cbe\u5ea6\u591aWA\u4e86\u4e00\u4e2a\u70b9TAT\n```\n\u4f46\u662f\u8fd9\u6837\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u5c24\u5176\u5728\u7ed3\u6784\u4f53\u7684\u9884\u5904\u7406\u548c\u72b6\u6001\u7ee7\u627f\u7684\u65f6\u5019\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\uff0cSTL\u91cc\u6709\u4e2a\u53eb\u505abitset\u7684\u4e1c\u897f\uff1a\n\n```\nbitset<N> b[N];\n```\n\u8fd9\u4e2a\u4e1c\u897f\u8868\u793a\u4e00\u4e2a N \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e03\u5076\u578b\u6570\u7ec4\uff0c\u4f46\u6709\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u5b83\u652f\u6301\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a\n\n```cpp\nb[v]=b[u];\n```\n\u4e8e\u662f\u5b83\u5c31\u53ef\u4ee5\u8dd1\u5f97~~\u98de\u5feb~~\n\n\u7136\u540e\u4ee3\u7801\u5199\u51fa\u6765\u5c31\u6210\u4e86\u8fd9\u6837\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<bitset>\nusing namespace std;\n\nconst int N = 1000 + 10;\nconst int M = 5000 + 10;\n\ninline int read()\n{\n \tint res=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9'){res=(res<<3)+(res<<1)+ch-'0';ch=getchar();}\n\treturn res;\n}\n\nint n,m;\n\nstruct edge{\n\tint next,to,w;\n}r[M];\n\nint head[N],tot;\n\nvoid add(int u,int v,int w)\n{\n\ttot++;\n\tr[tot].next=head[u];\n\thead[u]=tot;\n\tr[tot].to=v;\n\tr[tot].w=w;\n}\n\nint F[N],Fsum[N],Tsum[N];\n\nbool vis[N];\n\nbitset<N> b[N];\n\nqueue<int> q;\n\nvoid bfs(int s)\n{\n\tfor(int i=1;i<=n;i++)\n\t\tb[i]=Fsum[i]=Tsum[i]=0,vis[i]=false;\n\tFsum[s]=F[s];\n\tq.push(s),vis[s]=true;\n\tb[s][s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tfor(int e=head[u];e;e=r[e].next)\n\t\t{\n\t\t\tint v=r[e].to,w=r[e].w,fs=Fsum[u]+(!b[u][v]?F[v]:0),ts=Tsum[u]+w;\n\t\t\tdouble x=Fsum[v]*1.0/Tsum[v],y=fs*1.0/ts;\n\t\t\tif(!Tsum[v]||x<y)\n\t\t\t{\n\t\t\t\tFsum[v]=fs;\n\t\t\t\tb[v]=b[u],b[v][v]=1;\n\t\t\t\tTsum[v]=ts;\n\t\t\t\tif(!vis[v])q.push(v),vis[v]=true;\n\t\t\t}\n\t\t}\n\t\tq.pop(),vis[u]=false;\n\t}\n}\n\ndouble ans;\n\nint main()\n{\n\tfreopen(\"c.in\",\"r\",stdin);\n\tfreopen(\"c.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tF[i]=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tbfs(i);\n\t\tif(Tsum[i]!=0)ans=max(ans,Fsum[i]*1.0/Tsum[i]);\n//\t\tcout<<Fsum[i]<<\" \"<<Tsum[i]<<endl;\n\t}\n\tprintf(\"%.2f\\n\",ans);\n    return 0;\n}\n```\n\u4f46\u6bd5\u7adf\u662f\u4e2a\u66b4\u529b\uff0c\u5728\u6d1b\u8c37\u4e0a\u53ea\u80fd\u5438\u6c27\u8fc7\u4e86\uff0c\u6211\u597d\u83dc\u554aqwq",
        "postTime": 1571730573,
        "uid": 236021,
        "name": "C_\u65ed",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "#### 2020/11/7\uff1a\u4fee\u6b63\u4e86\u4e00\u4e2a\u7b14\u8bef\n\n#### \u9898\u610f  \n$\\ \\ \\ \\ $\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9 $m$ \u6761\u7684\u6709\u70b9\u6743\u4e0e\u8fb9\u6743\u7684\u6709\u5411\u56fe\uff0c\u6c42\u4e00\u4e2a\u73af\u4f7f\u5f97\u73af\u4e0a\u7684\u70b9\u6743\u548c\u9664\u4ee5\u8fb9\u6743\u548c\u6700\u5927\u3002  \n\n\n------------\n#### \u9898\u89e3  \n$\\ \\ \\ \\ $\u8bbe\u7b54\u6848\u4e3a $p$ ,\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u7684\u70b9\u6743\u4e3a $a_i$ \uff0c\u7b2c $i$ \u6761\u8fb9\u7684\u8fb9\u6743\u4e3a $b_i$\u3002  \n$\\ \\ \\ \\ $\u53ef\u5f97\uff1a  \n$$\\dfrac{{\\sum_{i=1}^n}a_i}{\\sum_{i=1}^{m}b_i}=p$$  \n$$\\sum_{i=1}^{n} a_i=\\sum_{i=1}^m (b_i\\times p)$$  \n$$\\sum_{i=1}^{n} a_i-\\sum_{i=1}^m (b_i\\times p)=0$$\n\n$\\ \\ \\ \\ $\uff08\u4ee4\u4e0a\u5f0f\u4e2d\u5de6\u5f0f\u4e3a$\\Delta$\uff09  \n$\\ \\ \\ \\ $\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6\uff0c\u56e0\u6b64\u8fd9\u4e5f\u4e0d\u80fd\u5f97\u5230\u7b54\u6848\u3002  \n$\\ \\ \\ \\ $\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a $p$ \u4e8c\u5206\u51fa\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u5b9a\uff0c\u6613\u77e5\uff1a  \n$\\ \\ \\ \\ $\u2460\u5f53 $\\Delta<0$ \u65f6\uff0c$p$ \u8fc7\u5927\uff0c\u5e94\u8be5\u7f29\u5c0f\u3002  \n$\\ \\ \\ \\ $\u2461\u5f53 $\\Delta \u22650$\u65f6\uff0c$p$ \u6ee1\u8db3\u9898\u610f\uff0c\u4f46\u4ecd\u53ef\u653e\u5927\u53bb\u5bfb\u627e\u6700\u5927\u503c\u3002  \n$\\ \\ \\ \\ $\u7ee7\u7eed\u5316\u5f0f\u5b50\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a  \n$$\\sum_{i=1}^{n}a_i-p\\times \\sum_{i=1}^m b_i=0$$  \n\n$\\ \\ \\ \\ $\u5f88\u5bb9\u6613\u89c2\u5bdf\u51fa\u8fd9\u4e2a\u5f0f\u5b50\u5f62\u4f3c\u6700\u77ed\u8def\u4e2d\u7684\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528 SPFA \u6c42\u89e3\uff0c\u521a\u597d\u6211\u4eec\u5224\u5b9a\u539f\u5f0f\u4e0e $0$ \u7684\u5173\u7cfb\u5c31\u76f8\u5f53\u4e8e\u5728\u56fe\u4e2d\u627e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684**\u6b63\u73af**\uff0c\u56e0\u6b64\u4f7f\u7528 DFS \u5b9e\u73b0\u7684 SPFA \u5373\u53ef\u3002  \n\n$\\ \\ \\ \\ $\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u4f1a\u53d1\u73b0\u628a\u5f0f\u5b50\u53d6\u53cd\u53d8\u6210\u5224\u65ad\u8d1f\u73af\u4f1a TLE \uff0c\u8fd9\u91cc\u8fd8\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\u4f46\u8ba8\u8bba\u533a\u91cc\u4f3c\u4e4e\u4e5f\u6709\u8dd1\u6b63\u73af\u4f1a TLE\uff0c\u8d1f\u73af\u5c31\u8fc7\u4e86\u7684\u4ee3\u7801\uff0c\u5177\u4f53\u539f\u56e0\u8fd8\u6709\u5f85\u8003\u8bc1\u3002  \n\n\n\n------------\n#### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint p[1005];\ndouble dis[1005];\nbool vis[1005];\nint n,m;\nvector < pair<int,int> > G[1005];\nbool SPFA(int u,double s)\n{\n\tvis[u]=1;\n\tfor(int i=0;i<G[u].size();i++)\n\t{\n\t\tint v=G[u][i].first,w=G[u][i].second;\n\t\tif(dis[v]<dis[u]-s*w+p[u])\n\t\t{\n\t\t\tdis[v]=dis[u]-s*w+p[u];\n\t\t\tif(vis[v]||SPFA(v,s)) return true;\n\t\t}\t\n\t} \n\tvis[u]=0;\n\treturn false;\n}\n\nbool check(double s)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(dis,128,sizeof(dis));\n\t\tdis[i]=0;\n\t\tif(SPFA(i,s)) return true;\n\t} \n\treturn false;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&p[i]);\n\tfor(int i=1,u,v,w;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&u,&v,&w);\n\t\tG[u].push_back(make_pair(v,w));\n\t}\n\tdouble l=0,r=1000005,mid,ans;\n\twhile(r-l>=0.00001)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(check(mid)) l=mid,ans=mid;//\u6709\u8d1f\u73af\n\t\telse r=mid; \n\t}\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```\n\n\n------------\n\u65e2\u7136\u9009\u62e9\u4e86\u8fdc\u65b9/\u4fbf\u53ea\u987e\u98ce\u96e8\u517c\u7a0b",
        "postTime": 1590765825,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]Sightseeing Cows G\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u8981\u73af\u4e0a\u5404\u70b9\u6743\u503c\u4e4b\u548c\u9664\u4ee5\u5404\u8fb9\u6743\u503c\u4e4b\u548c\u6700\u5927\u3002\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200701083925332.png)\n\u6c42\u6700\u5927\u7b54\u6848\uff0c\u5f88\u660e\u663e\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u3002\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u5f53\u524d\u7b54\u6848\u4e3a x\uff0c\u5982\u679c\u6709\u66f4\u5927\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u65b9\u7a0b\u5c31\u53ef\u4ee5\u6309\u4e0b\u5f0f\u8f6c\u6362\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200701083949492.png)\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6709\u66f4\u5927\u7684\u7b54\u6848\uff0c\u5219\u6709\u4e00\u4e2a\u73af\u662f\u8d1f\u73af\uff08\u73af\u8fb9\u6743\u603b\u548c\u4e3a\u8d1f\u6570\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u628a\u6c42\u6700\u5927\u7b54\u6848\u7684\u95ee\u9898\u8f6c\u6362\u4e3a\u4e86\u5224\u65ad\u5f53\u524d\u5efa\u7684\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u8d1f\u73af\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u8bbe\u4e3a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/202007010839572.png)\n\u7136\u540e\u4f7f\u7528 $spfa$ \u5224\u65ad\u662f\u5426\u6709\u8d1f\u73af\u3002\n\u4f7f\u7528spfa\u5224\u65ad\u662f\u5426\u6709\u8d1f\u73af\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u4e00\u4e2acnt\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e00\u4e2a\u70b9\u7684\u4ece\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5305\u542b\u7684\u8fb9\u6570\uff0c\u5728\u6bcf\u6b21\u66f4\u65b0dis[y]\u7684\u65f6\u5019,\u5224\u65ad$cnt[y] = cnt[x] + 1 ) > n$\uff0c\u82e5\u5927\u4e8en\u5219\u5b58\u5728\u8d1f\u73af\u3002\u8fd9\u662f\u4e00\u79cd\u6548\u7387\u8f83\u9ad8\u7684\u5224\u65ad\u8d1f\u73af\u7684\u65b9\u6cd5\u3002\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\n#include<algorithm>\n#include<queue>\n#include<map>\n\nusing namespace std;\n\nconst int N = 1e4+7;\nconst int M = 5e4+7;\nconst double eps = 1e-6;\nint f[N];\nint head[N],ver[M],nex[M],tot;\ndouble edge[M];\nint n,m;\nint a[N];\ndouble dis[N];\nbool vis[N];//\u5224\u65ad\u662f\u5426\u5728\u961f\u5217\u91cc\nint cnt[N];//\u8868\u793a\u7684\u662f\u4ece\u8d77\u70b9\u5230x\u7684\u6700\u77ed\u8def\u5f84\u5305\u542b\u7684\u8fb9\u6570\n\n\nvoid add(int x,int y,double z){\n    ver[++tot] = y;\n    nex[tot] = head[x];\n    edge[tot] = z;\n    head[x] = tot;\n}\n//\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\uff0ccnt[i]\u5927\u4e8en\u5219\u6709\u8d1f\u73af\uff08\u4e00\u5171n\u4e2a\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u8d1f\u73af\u5c31\u6700\u591a\u7b49\u4e8en\uff09\nbool spfa(){\n    queue<int>q;\n    //\u6ca1\u6709\u8d77\u70b9\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u8d77\u70b9\n    for(int i = 1;i <= n;++i){\n        q.push(i);\n        dis[i] = 0;\n        vis[i] = 1;\n    }\n    memset(cnt,0,sizeof cnt);\n    while(q.size()){\n        int x = q.front();\n        q.pop();\n        vis[x] = 0;\n        for(int i = head[x];i;i = nex[i]){\n            int y = ver[i];\n            if(dis[y] > dis[x] + edge[i]){\n                dis[y] = dis[x] + edge[i];\n                if((cnt[y] = cnt[x] + 1 ) > n)return 1;\n                if(!vis[y]){\n                    q.push(y);\n                    vis[y] = 1;\n                }\n            }\n        }\n        \n    }\n    return 0;\n}\nint x[N],y[N], z[N];\n\nbool check(double w){\n    tot = 0;\n    memset(head,0,sizeof head);\n    for(int i = 1;i <= m;++i)\n        add(x[i],y[i],w * z[i] - f[x[i]]);//\u51cf\u53bb\u51fa\u70b9\u6743\u503c\n    return spfa();\n}\n\nint main(){\n    cin>>n>>m;\n    for(int i = 1;i <= n;++i)\n        scanf(\"%d\",&f[i]);\n    for(int i = 1;i <= m;++i)\n        scanf(\"%d %d %d\",&x[i],&y[i],&z[i]);\n    double l = 0,r = 1000;\n    while(r - l > eps){\n        double mid = (l + r) / 2;\n        if(check(mid))l = mid;\n        else r = mid;\n    }\n    printf(\"%.2f\",l);\n    return 0;\n}\n```\n",
        "postTime": 1593566113,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]Sightseeing Cows G\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u5976\u725b\u4eec\u4ece\u8d77\u70b9\u51fa\u53d1\u7136\u540e\u5728\u56de\u5230\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5976\u725b\u8d70\u8fc7\u7684\u8def\u5f84\u4e3a\u4e00\u4e2a\u73af\uff0c\u5728\u5976\u725b\u8d70\u7684\u8fd9\u4e2a\u73af\u4e2dans=\u6240\u6709\u7684\u4e50\u8da3\u6570/\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u7684\u65f6\u95f4\u3002\n\n\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u5f0f\u5b50\u8fdb\u884c\u53d8\u5f62\uff0c\u53ef\u4ee5\u5f97\u5230\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u65f6\u95f4\\*ans=\u6240\u6709\u7684\u4e50\u8da3\u6570\u3002\u2014\u2014>\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u65f6\u95f4\\*ans-\u6240\u6709\u7684\u4e50\u8da3\u6570=0\uff1b\n\n\u7136\u540e\u6211\u4eec\u5728\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u5904\u7406\u51faans\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2aans\u8dd1n\u4e2aspfa\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\uff0c\u5982\u679c\u5b58\u5728\u8d1f\u73af\u5c31\u8bf4\u660e\u5f53\u524d\u65b9\u6848\u4e0d\u662f\u6700\u4f73\u7b54\u6848\uff08\u5b58\u5728\u8d1f\u73af\u6761\u4ef6\uff1a\u5f53\u524d\u70b9\u5165\u961f\u6b21\u6570\u5927\u4e8en\uff0c\u5f53\u7136\u8fd9\u79cd\u60c5\u51b5\u662f\u5f53\u6211\u4eec\u7528bfs\u7684spfa\u65f6\uff09\uff0c\u8ba9\u6211\u4eec\u7528dfs\u7684spfa\u65f6\uff0c\u6211\u4eec\u7528\u4e00\u4e2abool\u53d8\u91cf\u8868\u793a\u8fd9\u4e2a\u6570\u6709\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5982\u679c\u88ab\u8bbf\u95ee\u8fc7\uff0c\u8bf4\u660e\u4ed6\u51fa\u73b0\u4e86\u8d1f\u73af\u76f4\u63a5\u7ed3\u675f\u5faa\u73af\u3002\u6211\u4eec\u7684ans\u8fd8\u80fd\u6709\u66f4\u5927\u7684\u89e3\uff0c\u5373\u5f53\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u7684\u65f6\u95f4\\*ans-\u6240\u6709\u7684\u4e50\u8da3\u6570<0\u65f6\u6211\u4eec\u7684ans\u4e0d\u662f\u5f53\u524d\u6700\u4f18\u89e3\u7ee7\u7eed\u66f4\u65b0\u6700\u4f18\u89e3\n\n\u6ce8\u610f\uff1a\u4e8c\u5206\u7ed3\u675f\u7684\u6761\u4ef6\u4e3ar-l>0.000001\uff0c\u5426\u5219\u4f1a\u7206long long\n\n\n\u5f53\u7136\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4f1aTLE\u65e2\u7136\u8fd9\u6837\u6211\u4eec\u5c31\u5199dfs\u7684spfa\u5224\u8d1f\u73af\uff0c\u5728\u8fd9\u4e4b\u524d\u6211\u6709\u4e00\u7bc7\u535a\u5ba2\u8bb2\u8fc7\u8fd9\u79cd\u5199\u6cd5http://www.cnblogs.com/z360/p/6883351.html\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#define N 51000\nusing namespace std;\nbool vis[N];\nint n,m,x,y,z,tot;\nint c[N],num[N],head[N];\ndouble ans,mid,l,r,w[N],dis[N];\nstruct Edge\n{\n    int to,dis,from,next;\n}edge[N];\nint add(int x,int y,int z)\n{\n    tot++;\n    edge[tot].to=y;\n    edge[tot].dis=z;\n    edge[tot].next=head[x];\n    head[x]=tot;\n}\nint read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0'; ch=getchar();}\n    return x*f;\n}\nint spfa(int x)\n{\n    vis[x]=true;\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int t=edge[i].to;\n        if(dis[t]>dis[x]+w[i])\n        {\n            dis[t]=dis[x]+w[i];\n            if(vis[t]||spfa(t))\n            {\n                vis[x]=false;\n                return true;\n            }  \n        }\n    }\n    vis[x]=false;\n    return false;\n}\nint pd()\n{\n    for(int i=1;i<=n;i++)\n        if(spfa(i)) return true;\n    return false;\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) c[i]=read();\n    for(int i=1;i<=m;i++)\n    {\n        x=read(),y=read(),z=read();\n        add(x,y,z);\n    }\n    l=0,r=100005;\n    while(r-l>0.0000001)\n    {\n        mid=(l+r)/2;\n        for(int i=1;i<=tot;i++)\n        {\n            int t=edge[i].to;\n            w[i]=(double)mid*edge[i].dis-c[t];\n        }\n        if(pd())\n        {\n            ans=mid;\n            l=mid;\n        }\n        else r=mid;\n    }\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n```",
        "postTime": 1505469873,
        "uid": 43615,
        "name": "QwQ_operator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P2868)\n\n\u6211\u768401\u5206\u6570\u89c4\u5212\u5b66\u4e60\u7b14\u8bb0[>Here<](https://www.luogu.org/blog/PopulusEuphratica/post-xue-xi-bi-ji-01-fen-shuo-gui-hua)\n\n\u8fd9\u9053\u9898\u5f88\u663e\u7136\u662f\u4e00\u905301\u5206\u6570\u89c4\u5212\u95ee\u9898\uff0c\u8fd9\u7c7b\u578b\u7684\u95ee\u9898\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u540d\u79f0\u53eb\u505a\u6700\u4f18\u6bd4\u7387\u73af\u3002\n\n\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u8003\u8651\u4e8c\u5206$mid$\u65f6\u5c06\u6bcf\u6761\u8fb9$(u,v)$\u7684\u8fb9\u6743\u6539\u4e3a$mid*T-f_v$ ,\u56e0\u4e3a\u8981\u6c42\u53d6\u7684\u8fb9\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u5f88\u663e\u7136\u662f\u8981\u6c42\u5224\u4e00\u4e0b\u8d1f\u73af\uff0c\u4e8e\u662f\u6bcf\u6b21\u4e8c\u5206\u5224\u8d1f\u73af\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\ndouble f[1001],v[20001],val;\nint head[1001],nxt[20001],b[20001],k,n,m,s,t,count[1001],q[500001],h;\ndouble dis[1001];\nbool vis[1001];\ndouble l=0.0,r,mid,ans;\nvoid push(int s,int t,double val){\n\tnxt[++k]=head[s];\n\thead[s]=k;\n\tb[k]=t;\n\tv[k]=val;\n\tr+=val;\n}\nbool spfa(double u){\n\th=t=0;\n\tfor(int i=1;i<=n;i++)dis[i]=0.0,count[i]=1,vis[i]=1,q[++t]=i;\n\t/*memset(count,0,sizeof count);\n\tcount[x]=1;\n\th=t=0;\n\tq[++t]=x;\n\tvis[x]=1;*/\n\twhile(h<=t){\n\t\t++h;vis[q[h]]=0;\n\t\tfor(int i=head[q[h]];i;i=nxt[i])\n\t\t\tif(dis[b[i]]>dis[q[h]]-f[b[i]]+v[i]*u){\n\t\t\t\tif(++count[b[i]]>=n)return 1;\n\t\t\t\tdis[b[i]]=dis[q[h]]-f[b[i]]+v[i]*u;\n\t\t\t\tif(!vis[b[i]])vis[b[i]]=1,q[++t]=b[i];\n\t\t\t}\n\t}\n\treturn 0;\n}\nbool check(double x){\n\t//for(int i=1;i<=n;i++)\n\t\tif(spfa(x))return 1;\n\treturn 0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%lf\",f+i);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d%lf\",&s,&t,&val),push(s,t,val);\n\twhile(r-l>=0.000001){\n\t\tmid=(l+r)/2;\n\t\tif(check(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.2lf\",l);\n} \n```",
        "postTime": 1534001056,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP2868 [USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows"
    },
    {
        "content": "/\\*\n\u8fd9\u9053\u9898...\u7b97\u5206\u6570\u89c4\u5212\uff1f\n\n\u8bbe\u4e00\u6bb5\u8def\u7a0b\u7684\u6536\u76ca\u662fF\uff0c\u82b1\u8d39\u662fdis\uff0c\u5219\u6bd4\u7387\u4e3a \u03a3F/\u03a3dis=r\n\n\u8981\u627e\u51fa\u6700\u5927\u7684r\n\n\u4e8c\u5206\u51far\u8bbe\u4e3ax \uff0c\u5c06\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4fee\u6539\u4e3a \u201c\u76ee\u7684\u5730\u7684\u6536\u76caf - \u8fb9\u957f\u5ea6dis\\*x\u201d\n\n\u7136\u540eSPFA\u68c0\u67e5\u56fe\u4e0a\u662f\u5426\u6709\u8d1f\u73af\uff0c\u6709\u8d1f\u73af\u5219x\u53ef\u4ee5\u66f4\u4f18,\u7b54\u6848\u53ef\u4ee5\u589e\u5927\u3002\n\n\\*/\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define N 100010\nusing namespace std;\nconst double eps=1e-5;\nstruct edge\n{\n    int v,nxt,w;\n    double c;\n} e[N<<1];\nint head[N],f[N];\nbool vis[N];\ndouble dis[N];\nint n,m,mct,u,v,w;\ninline int read()\n{\n    int x=0,f=1;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nvoid add(int u,int v,int w)\n{\n    e[++mct].v=v;e[mct].nxt=head[u];e[mct].w=w;head[u]=mct;\n}\nbool SPFA(int u)\n{\n    vis[u]=1;\n    for(int i=head[u]; i; i=e[i].nxt)\n    {\n        int v=e[i].v;\n        if(dis[v]>dis[u]+e[i].c)\n        {\n            dis[v]=dis[u]+e[i].c;\n            if(vis[v] || SPFA(v))\n            {\n                vis[v]=0;\n                return 1;\n            }\n        }\n    }vis[u]=0;return 0;\n}\nvoid judge(double r)\n{\n    for(int i=1; i<=mct; i++)\n        e[i].c=(double)e[i].w*r-f[e[i].v];\n    return;\n}\nbool check()\n{\n    for(int i=1; i<=n; i++)\n        if(SPFA(i))return 1;\n    return 0;\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1; i<=n; i++) f[i]=read();\n    for(int i=1; i<=m; i++)\n    {\n        u=read();v=read();w=read();\n        add(u,v,w);\n    }\n    double l=0,r=100000,ans;\n    while(r-l>eps)\n    {\n        double mid=(l+r)/2;\n        judge(mid);\n        if(check())\n        {\n            ans=mid;l=mid;\n        }\n        else r=mid;\n    }\n    printf(\"%.2f\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1505461701,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u63cf\u8ff0\uff0c\u8d77\u70b9\u7684\u4f4d\u7f6e\u662f\u4e0d\u786e\u5b9a\u7684\u3002\u4f46\u662f\uff0c\u56e0\u4e3a\u5976\u725b\u4eec\u8fd8\u8981\u56de\u5230\u8d77\u70b9\uff0c\u6240\u4ee5\uff0c\u5976\u725b\u4eec\u6240\u8d70\u7684\u8def\u5f84\u662f\u4e00\u4e2a\u73af\uff0c\u8d77\u70b9\u5728\u54ea\u91cc\u662f\u4e0d\u91cd\u8981\u7684\u3002\n\n\u5728\u5976\u725b\u4eec\u6240\u8d70\u7684\u73af\u4e0a\uff1a\n\n\\_\\_ans=\u6240\u6709\u7684\u4e50\u8da3\u6570/\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u7684\u65f6\u95f4\u3002\n\n\\_\\_\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u65f6\u95f4\\*ans=\u6240\u6709\u7684\u4e50\u8da3\u6570\u3002\n\n\\_\\_\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u65f6\u95f4\\*ans-\u6240\u6709\u7684\u4e50\u8da3\u6570=0\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0cans\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8dd1n\u4e2aspfa\u3002\n\n\u5f53\u8def\u4e0a\u6d88\u8017\u7684\u6240\u6709\u7684\u65f6\u95f4\\*ans-\u6240\u6709\u7684\u4e50\u8da3\u6570<0\u3002\n\n\u90a3\u5c31\u8bf4\u660er\u8fd8\u80fd\u53d6\u66f4\u5927\u503c\uff0cr\u6709\u66f4\u5927\u7684\u89e3\u3002\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define MAXN 15001\nusing namespace std;\nint n,m,tot;\ndouble w[MAXN],dis[MAXN];\ndouble l=0,r=1000000,ans,mid;\nint val[MAXN],vis[MAXN],num[MAXN];\nint to[MAXN],net[MAXN],cap[MAXN],head[MAXN];\nvoid add(int u,int v,int w){\n    to[++tot]=v;net[tot]=head[u];cap[tot]=w;head[u]=tot;\n}\nbool spfa(int s){\n    queue<int>que;\n    memset(num,0,sizeof(num));\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x3f,sizeof(dis));\n    que.push(s);\n    dis[s]=0;vis[s]=1;num[s]++;\n    while(!que.empty()){\n        int now=que.front();\n        que.pop();\n        vis[now]=0;\n        for(int i=head[now];i;i=net[i]){\n            if(dis[to[i]]>dis[now]+w[i]){\n                dis[to[i]]=dis[now]+w[i];\n                if(!vis[to[i]]){\n                    vis[to[i]]=1;\n                    num[to[i]]++;\n                    que.push(to[i]);\n                    if(num[to[i]]>n)    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nvoid work(){\n    for(int i=1;i<=tot;i++)\n        w[i]=(double)cap[i]*mid-val[to[i]];\n}\nbool check(){\n    for(int i=1;i<=n;i++)\n        if(spfa(i))    return true;\n    return false;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)    scanf(\"%d\",&val[i]);\n    for(int i=1;i<=m;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w);\n    }\n    while(r-l>0.0000001){\n        mid=(l+r)/2;\n        work();\n        if(check()){\n            ans=mid;\n            l=mid;\n        }\n        else r=mid;\n    }\n    printf(\"%.2lf\",ans);\n}\n```",
        "postTime": 1505391154,
        "uid": 21719,
        "name": "\u6ca7\u6f9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "**\u6613\u9519\u70b9\uff1a**\n\n- \u4e8c\u5206\u65f6\uff0cl,r,mid\u7684\u7c7b\u578b\u90fd\u8981\u8bbe\u4e3adouble.\n- 0/1\u89c4\u5212\u95ee\u9898\u5728\u8be5\u7c7b\u56fe\u4e0a\u53ef\u8f6c\u5316\u4e3a\u4e58\u79ef\u7684\u5f62\u5f0f\u5e76\u4f7f\u7528spfa\u5224\u65ad\u5f53\u524d\u89e3\u662f\u5426\u5408\u7406.\n- \u6ce8\u610f\u533a\u5206i\u548ci\u6240\u4ee3\u8868\u7684\u70b9a[i].\n\n------------\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define eps 1e-3\nusing namespace std;\nconst int MAXN=2e3,MAXM=1e4;\nstruct Edge{\n\tint from,to,nxt;\n\tdouble w;\n}e[MAXM];\nint head[MAXN],edgeCnt=1;\nvoid addEdge(int u,int v,double w){\n\te[++edgeCnt].from=u;\n\te[edgeCnt].to=v;\n\te[edgeCnt].w=w;\n\te[edgeCnt].nxt=head[u];\n\thead[u]=edgeCnt;\n}\ndouble dis[MAXN];\nint n,enterNum[MAXN];\nbool inQueue[MAXN];\nbool spfa(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(enterNum,0,sizeof(enterNum));\n\tqueue<int> q;\n\tfor(int i=1;i<=n;i++){\n\t\tq.push(i);\n\t\tinQueue[i]=1;\n\t}\n\twhile(!q.empty()){\n\t\tif(dis[q.front()]>dis[q.back()])swap(q.front(),q.back());\n\t\tint nowPoint=q.front();q.pop();\n\t\tinQueue[nowPoint]=0;\n\t\tfor(int i=head[nowPoint];i;i=e[i].nxt){\n\t\t\tint nowV=e[i].to;\n\t\t\tif(dis[nowV]>dis[nowPoint]+e[i].w){\n\t\t\t\tdis[nowV]=dis[nowPoint]+e[i].w;\n\t\t\t\tenterNum[nowV]++;\n\t\t\t\tif(enterNum[nowV]>n)return 1;\n\t\t\t\tif(inQueue[nowV])continue;\n\t\t\t\tq.push(nowV);\n\t\t\t\tinQueue[nowV]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint a[MAXM],b[MAXM],t[MAXM],f[MAXN];\nint m;\nbool judge(double nowValue){\n\tmemset(head,0,sizeof(head));\n\tedgeCnt=1;\n\tfor(int i=1;i<=m;i++){\n\t\taddEdge(a[i],b[i],nowValue*t[i]-f[a[i]]);\n\t}\n\treturn spfa();\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&f[i]);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&a[i],&b[i],&t[i]);\n\t}\n\tdouble l=0,r=1e3;\n\twhile(r-l>eps){\n\t\tdouble mid=(l+r)/2;\n\t\tif(judge(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.2f\\n\",l);\n\treturn 0;\n}\n```\n",
        "postTime": 1568129392,
        "uid": 115758,
        "name": "Object_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    },
    {
        "content": "## \u65b9\u6cd5\u4e5f\u662f\u4e00\u6837\uff0c\u5206\u6570\u89c4\u5212  \n\u63d0\u4f9b\u4e00\u4e9b\u65b0\u65b9\u6cd5  \n1.  \u5bf9\u4e8e\u4e0d\u540c\u7684\u8054\u901a\u5757\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u90fd\u653e\u5165\u961f\u5217\u91cc\uff08~~\u672c\u8d28\u4e0a\u4e00\u6837~~\uff09 \n2.  \u5224\u8d1f\u73af\u65b9\u6cd5\uff1a   \n1.\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u8fb9\u6570\uff0c\u5bf9\u4e8e\u8fb9\uff08 x , y ) , cnt[ y ] =  cnt[ x ]+1 ,\u5f53cnt[ y ]>=n\u65f6\u6709\u8d1f\u73af  \n2.\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5165\u961f\u6b21\u6570\uff0cin_time[ i ]>=n\u65f6\u6709\u8d1f\u73af  \n\n\u4f7f\u7528\u4e24\u4e2a\u65b9\u6cd5+\u5361\u65f6  ~~\u4f60\u5c31\u53ef\u4ee5bfs\u8fc7spfa\u4e86~~  \n\u4e0a\u4ee3\u7801  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<cmath> \n#define N 7010\n#define M 20010 \nusing namespace std;\nint n,m,cnt[N],tot,head[N],ru[N],in_time[N],val[N];\ndouble l,r,d[N];\nbool vis[N],flag;\nstruct Edge{\n\tint v,next,z1,z2;\n}edge[M];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return x*f;\n}\ninline void add(int x,int y,int v){ru[y]++;edge[++tot].v=y;edge[tot].next=head[x];edge[tot].z1=v;head[x]=tot;}\ninline double cal(int x,int y,double mid){return mid*y-x;}\nvoid spfa(int s,double mid){\n\tfor(int i=1;i<=n;i++)d[i]=0x3f3f3f3f;\n\tfor(int i=1;i<=n;i++)vis[i]=0;\n\tfor(int i=1;i<=n;i++)cnt[i]=0;\n\tfor(int i=1;i<=n;i++)in_time[i]=0; \n\tqueue<int>q;\n\td[s]=0;vis[s]=1;q.push(s);cnt[s]=-1;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tif(cnt[u]>=n){flag=1;return;}\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,z1=edge[i].z1;\n\t\t\tif(d[v]>d[u]+cal(val[u],z1,mid))\n\t\t\t{\n\t\t\t\td[v]=d[u]+cal(val[u],z1,mid);\n\t\t\t\tcnt[v]=cnt[u]+1;\n\t\t\t\tif(cnt[v]>=n){flag=1;return;}          //\u8def\u5f84\u6761\u6570\u5224\u8d1f\u73af \n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);vis[v]=1;\n\t\t\t\t\tin_time[v]++;\n\t\t\t\t\tif(in_time[v]>=n){flag=1;return;}   //\u5165\u961f\u6b21\u6570\u5224\u8d1f\u73af\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} \nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tval[i]=read(),r+=val[i];\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z); \n\t} \n\tfor(int i=1;i<=n;i++)\n\t\tadd(0,i,0);                          //\u865a\u62df\u7ed3\u70b9 \n\tl=0.0;\n\twhile(fabs(r-l)>1e-4){\n\t\tdouble mid=(l+r)/2;\n\t\tflag=0;\n\t\tspfa(0,mid);\n\t\tif(flag)l=mid;else r=mid;\n\t}\n\tprintf(\"%.2f\",(l+r)/2);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1554391454,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2868 \u3010[USACO07DEC]\u89c2\u5149\u5976\u725bSightseeing Cows\u3011"
    }
]