[
    {
        "content": "\u89c2\u5bdf\u6837\u4f8b\u89e3\u91ca\uff0c\u53ef\u4ee5\u5f97\u5230\u7ed3\u8bba\uff1a\u5728\u5b8c\u6210\u7684\u524d\u4e00\u6b65\uff0c\u8001\u677f\u6765\u4e4b\u524d\uff0c\u5fc5\u987b\u6709\u81f3\u5c11 $2$ \u4e2a\u62e7\u597d\u81f3\u5c11 $n-k$ \u4e2a\u87ba\u4e1d\u7684\u6a21\u5757\u3002\u65e0\u8bba\u8001\u677f\u6536\u8d70\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u90fd\u53ef\u4ee5\u9a6c\u4e0a\u62e7\u597d\u53e6\u4e00\u4e2a\u3002\r\n\r\n\u4e3a\u4e86\u8ba8\u8bba\u65b9\u4fbf\uff0c\u4e0b\u9762\u7ee7\u7eed\u7528 $k=3$ \u4e3e\u4f8b\uff0c\u5e76\u5047\u8bbe $n$ \u662f\u5f88\u5927\u7684\u6570\u3002\r\n\r\n\u800c\u518d\u5f80\u524d\u4e00\u6b65\u5462\uff1f\u518d\u4e0a\u4e00\u6b65\u6536\u8d70\u540e\uff0c\u9700\u8981\u4e24\u4e2a\u5206\u522b\u81f3\u5c11\u62e7\u597d $n-3,n-6$ \u4e2a\u87ba\u4e1d\u7684\u6a21\u5757\uff0c\u6216\u8005 $n-4,n-5$\u3002\r\n\r\n\u8001\u677f\u7684\u6700\u4f18\u7b56\u7565\u663e\u7136\u662f\u6bcf\u6b21\u6536\u8d70\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u56e0\u6b64\uff0c\u518d\u4e0a\u4e00\u6b65\u6536\u8d70\u524d\uff0c\u9700\u8981\u4e09\u4e2a\u5206\u522b\u81f3\u5c11\u62e7\u597d $n-3,n-3,n-6$ \u6216 $n-4,n-4,n-5$ \u4e2a\u87ba\u4e1d\u7684\u6a21\u5757\u3002\r\n\r\n\u540e\u8005\u9700\u8981\u66f4\u5c11\u7684\u603b\u87ba\u4e1d\u8fbe\u6210\uff0c\u4e14\u6700\u5927\u503c\u66f4\u5c0f\uff0c\u56e0\u6b64\u9700\u8981\u51c6\u5907\u88ab\u8001\u677f\u6536\u8d70\u7684\u5176\u5b83\u6a21\u5757\u9700\u8981\u7684\u87ba\u4e1d\u4e5f\u66f4\u5c11\uff0c\u6240\u4ee5\u540e\u8005\u4f18\u4e8e\u524d\u8005\u3002\r\n\r\n\u518d\u5f80\u524d\u4e00\u6b65\uff0c\u7528\u7c7b\u4f3c\u7684\u9053\u7406\uff0c\u53ef\u4ee5\u8bc1\u660e\u9700\u8981\u56db\u4e2a\u5206\u522b\u81f3\u5c11\u62e7\u597d $n-5,n-5,n-5,n-6$ \u4e2a\u87ba\u4e1d\u7684\u6a21\u5757\uff1b\u518d\u5f80\u524d\u4e00\u6b65\u662f $n-6,n-6,n-6,n-6,n-6$\uff1b\u7b49\u7b49\u3002\r\n\r\n\u8fd9\u6837\u7684\u72b6\u6001\u53ef\u4ee5\u7528\u4e09\u5143\u7ec4 $(width,height,remain)$ \u8868\u793a\uff1a\u603b\u5171\u9700\u8981\u51c6\u5907 $width$ \u4e2a\u6a21\u5757\uff0c\u5176\u4e2d\u6bcf\u4e2a\u90fd\u9700\u8981\u62e7\u597d\u81f3\u5c11 $height$ \u4e2a\uff0c\u800c\u5176\u4e2d $remain$ \u4e2a\u9700\u8981\u518d\u591a\u4e00\u4e2a\u3002\r\n\r\n\u8fd9\u6837\u53d6\u540d\u662f\u56e0\u4e3a\uff0c\u72b6\u6001\u53ef\u4ee5\u7528\u6dfb\u52a0\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u884c\u7684\u77e9\u5f62\u6765\u8868\u793a\uff1a$height$ \u884c $width$ \u5217\u518d\u52a0\u4e0a\u4ec5\u6709 $remain$ \u4e2a\u7684\u4e0d\u5b8c\u6574\u7684\u4e00\u884c\u3002\r\n\r\n\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u53ef\u89c6\u5316\uff1a\r\n\r\n```plain\r\no\r\no\r\no\r\no  oo\r\no  oo  oo\r\no  oo  ooo  ooo\r\no  oo  ooo  oooo  ooooo  ooo\r\n```\r\n\r\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u6b21\u5012\u63a8\u4e00\u6b65\u76f8\u5f53\u4e8e\uff1a\r\n\r\n- \u8ba1\u7b97\u5f53\u524d\u603b\u4e2a\u6570\r\n- \u51cf\u53bb $k$ \u4e2a\r\n- \u5e73\u5747\u5730\u91cd\u6392\uff0c\u591a\u4e00\u4e2a\u7684\u5217\u653e\u5728\u5de6\u4fa7\r\n- \u5728\u5de6\u4fa7\u6dfb\u52a0\u4e00\u5217\uff0c\u9ad8\u5ea6\u4e0e\u5f53\u524d\u6700\u5de6\u5217\u76f8\u540c\r\n\r\n\u5f88\u5bb9\u6613\u5199\u51fa\u5012\u63a8\u4e00\u6b65\u7684\u7a0b\u5e8f\u3002\u5982\u679c\u5012\u63a8\u4e86 $x$ \u6b65\u540e\u53d1\u73b0\u72b6\u6001\u76f8\u5f53\u4e8e\u4e0d\u9700\u8981\u989d\u5916\u51c6\u5907\u6a21\u5757\uff0c\u6b64\u65f6 $width=x+1$\uff0c\u90a3\u4e48\u8f93\u51fa $width-1$ \u5373\u53ef\u3002\r\n\r\n\u6700\u540e\u518d\u7279\u5224 $k=1$\uff0c\u6b64\u65f6 $n=1$ \u65f6\u7b54\u6848\u4e3a $1$\uff0c\u5426\u5219\u4e3a\u4e0d\u53ef\u80fd\u3002\r\n\r\n\u90a3\u4e48\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\u2026\u2026\u5417\uff1f\r\n\r\n\u6bcf\u6b21\u53ea\u80fd\u5728\u6700\u4e0a\u9762\u4e00\u5217\u6d88\u9664 $k-1$ \u4e2a\uff0c\u6240\u4ee5 $width$ \u7684\u589e\u957f\u662f $\\left(\\dfrac{k}{k-1}\\right)^n$ \u7ea7\u522b\uff1b\u5728 $k$ \u5f88\u5c0f\u800c $n$ \u5f88\u5927\u65f6\uff0c\u7b54\u6848\u5c06\u4f1a\u65e0\u6bd4\u5de8\u5927\u3002\r\n\r\n\u56e0\u6b64\uff0c\u4e0d\u4ec5\u9700\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\uff0c\u800c\u4e14\u4e5f\u4e0d\u518d\u80fd\u4e00\u6b65\u4e00\u6b65\u6a21\u62df\u3002\r\n\r\n\u4e0d\u8fc7\uff0c\u5f53 $remain>k$ \u65f6\uff0c\u6bcf\u4e00\u6b65\u4ec5\u4ec5\u76f8\u5f53\u4e8e `remain-=k-1;width+=1;`\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e00\u6b21\u6027\u6a21\u62df\u591a\u6b65\uff1b\u800c $remain\\le k$ \u65f6\uff0c\u4e0b\u4e00\u6b65\u5c31\u4f1a\u8ba9 $height$ \u51cf\u5c11 $1$\uff0c$remain$ \u76f8\u5e94\u53d8\u5316\u3002\r\n\r\n\u5982\u6b64\u7279\u6b8a\u5904\u7406\u540e\u5c31\u5dee\u4e0d\u591a\u505a\u5b8c\u4e86\u2026\u2026\u5417\uff1f\r\n\r\n\u6765\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u9700\u8981 $O(n)$ \u6b21 $O(n)$ \u4f4d\u9ad8\u7cbe\u4e0e\u4f4e\u7cbe\u7684\u8fd0\u7b97\uff0c\u4e5f\u5c31\u662f $O(n^2)$ \u7684\u590d\u6742\u5ea6\uff1b\u518d\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c$n=10^5$\u3002\u770b\u8d77\u6765\u4f3c\u4e4e\u4e0d\u592a\u8fc7\u5f97\u4e86\u3002\r\n\r\n\u4e0d\u8fc7\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c$k=2$ \u65f6\uff0c\u7b54\u6848\u4e3a\u7b80\u5355\u7684 $2^{n-2}(n\\ge 2)$\uff0c\u53ef\u4ee5\u7b80\u5316\u8ba1\u7b97\uff1b\u800c $k=3$ \u65f6\uff0c\u5e95\u6570\u4ec5\u4ec5\u6709 $1.5$\uff0c\u518d\u538b\u4e00\u538b\u4f4d\u4f3c\u4e4e\u5e38\u6570\u53ef\u4ee5\u53d8\u5f97\u5f88\u5c0f\u3002\u6240\u4ee5\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\r\n\r\n\u53c2\u8003\u4ee3\u7801\uff08\u61d2\u5f97\u5b9e\u73b0\u9ad8\u7cbe\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86 python\uff09\uff1a\r\n\r\n```python\r\nn,k=map(int,input().split(' '))\r\nif k==1: # \u7279\u5224 k=1\r\n    if n==1:\r\n        print(1)\r\n    else:\r\n        print('Poor E.S.!')\r\nelse:\r\n    if k==2: # \u7279\u5224 k=2\r\n        if n<=2:\r\n            print(1)\r\n        else:\r\n            print(2**(n-2))\r\n    else:\r\n        width,height,remain=1,n,0\r\n        while width<2*k and (height>0 or (height==0 and remain>0)): # width \u5f88\u5c0f\u65f6\uff0c\u65e0\u9700\u4e00\u6b21\u6a21\u62df\u591a\u6b65\r\n            cnt=width*height+remain\r\n            cnt=cnt-k\r\n            height=cnt//width\r\n            remain=cnt-height*width\r\n            width+=1\r\n            if remain!=0:\r\n                remain+=1\r\n        while height>0 or (height==0 and remain>0): # width \u73b0\u5728\u5f88\u5927\uff0c\u5fc5\u987b\u4e00\u6b21\u6a21\u62df\u591a\u6b65\r\n            if remain>=2:\r\n                mult=(remain-2)//(k-1)\r\n                remain=remain-mult*(k-1)\r\n                width+=mult\r\n            height-=1\r\n            width+=1\r\n            remain=width-(k-remain)\r\n        print(width-1)\r\n```  \r\n",
        "postTime": 1678201604,
        "uid": 130151,
        "name": "WYXkk",
        "ccfLevel": 9,
        "title": "P9134 [THUPC 2023 \u521d\u8d5b] \u62e7\u87ba\u4e1d \u9898\u89e3"
    },
    {
        "content": "> [P9134 [THUPC 2023 \u521d\u8d5b] \u62e7\u87ba\u4e1d](https://www.luogu.com.cn/problem/P9134)\n\n\u8003\u8651\u5012\u63a8\uff0c\u6700\u7ec8\u6709\u4e00\u4e2a $n$\uff0c\u5219\u6700\u540e\u4e00\u6b21\u8001\u677f\u6765\u4e4b\u540e\u81f3\u5c11\u6709\u4e00\u4e2a $n - k$\uff0c\u5219\u8001\u677f\u6765\u4e4b\u524d\u81f3\u5c11\u6709\u4e24\u4e2a $n - k$\uff0c\u5219\u5012\u6570\u7b2c\u4e8c\u6b21\u8001\u677f\u6765\u4e4b\u540e\u5fc5\u987b\u6709\u4e00\u4e2a $n - k - a$ \u548c\u4e00\u4e2a $n - k - b$\uff0c\u5176\u4e2d $a + b = k$\u3002\u90a3\u4e48 $a, b$ \u5177\u4f53\u7b49\u4e8e\u591a\u5c11\u5462\uff1f\u56e0\u4e3a\u5012\u6570\u7b2c\u4e8c\u6b21\u8001\u677f\u6765\u7684\u65f6\u5019\u80af\u5b9a\u4f1a\u6536\u8d70 $\\max(n - k - a, n - k - b)$\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u6700\u5927\u503c\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5373\u5fc5\u987b\u6709\u4e00\u4e2a $n - k - \\lfloor \\frac k 2\\rfloor$ \u548c\u4e00\u4e2a $n - k - \\lceil \\frac k 2 \\rceil$\uff0c\u5219\u5012\u6570\u7b2c\u4e8c\u6b21\u8001\u677f\u6765\u4e4b\u524d\u5fc5\u987b\u6709\u4e24\u4e2a $n - k - \\lfloor \\frac k 2\\rfloor$ \u548c\u4e00\u4e2a $n - k - \\lceil \\frac k 2\\rceil$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e3a\u4e86\u8ba9\u8001\u677f\u6765\u7684\u65f6\u5019\u6536\u8d70\u7684\u6570\u5c3d\u91cf\u5c0f\uff0c\u5c0f E \u4f1a\u5c3d\u53ef\u80fd\u5e73\u5747\u5730\u5206\u914d\u6bcf\u4e2a\u6570\uff0c\u5373\u4e0d\u5b58\u5728 $p, q$ \u4f7f\u5f97 $p \\geq  q + 2$\u3002\u56e0\u6b64\uff0c\u8bbe $a, b$ \u8868\u793a\u5f53\u524d\u9700\u8981 $a$ \u4e2a $n$ \u548c $b$ \u4e2a $n - 1$\u3002\u5728\u4e24\u6b21\u8001\u677f\u6765\u7684\u95f4\u9694\u5f53\u4e2d\uff0c\u5c0f E \u4f1a\u4e0d\u65ad\u5c06\u5176\u4e2d\u6700\u5927\u7684\u6570\u51cf\u5c0f $1$ \u603b\u5171 $k$ \u6b21\uff0c\u800c\u6bcf\u6b21\u8001\u677f\u6765\u90fd\u76f8\u5f53\u4e8e\u5c06\u6700\u5927\u7684\u6570\u7684\u4e2a\u6570\u589e\u52a0 $1$\uff0c\u5373 $a$ \u589e\u52a0 $1$\u3002\u5f53\u6240\u6709\u6570\u5747\u4e3a $0$ \u65f6\u5012\u63a8\u505c\u6b62\u3002\n\n\u56e0\u4e3a $a, b$ \u5728 $k$ \u5c0f $n$ \u5927\u7684\u65f6\u5019\u975e\u5e38\u5927\uff08\u6839\u636e\u6a21\u62df\u8fc7\u7a0b\uff0c\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u662f $(\\frac k {k - 1}) ^ n$ \u7ea7\u522b\u7684\uff09\uff0c\u6240\u4ee5\u5f53 $a > k$ \u65f6\uff0c\u9700\u8981\u5c06\u82e5\u5e72\u6b21 $a$ \u51cf\u53bb $k - 1$ \u6279\u91cf\u6253\u5305\u5728\u4e00\u8d77\u7b97\u3002\n\n\u56e0\u6d89\u53ca $\\mathcal{O}(n)$ \u6b21 $\\mathcal{O}(n)$ \u4f4d\u6570\u7684\u52a0\u6cd5\u548c\u4e58\u9664\u4f4e\u7cbe\u5ea6\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2)$\uff0c\u7279\u5224 $k = 2$ \u540e\u538b\u4f4d\u9ad8\u7cbe\u52c9\u5f3a\u5361\u8fc7\u3002\n\n\u9ad8\u7cbe\u5ea6\u9898\uff0c\u8fd8\u662f Python \u597d\u554a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n\nbool Mbe;\nconstexpr int N = 4e3 + 5;\nconstexpr ll base = 1e13;\nstruct BigInt {\n  #define len a.size()\n  vector<ll> a;\n  void init(ll x) {\n    a.resize(1), a[0] = x;\n  }\n  void adjust() {\n    while(!a.empty() && !a.back()) a.pop_back();\n  }\n  ll eval() {\n    return len == 0 ? 0 : len == 1 ? a[0] : base;\n  }\n  void print() {\n    if(!len) return cout << \"0\\n\", void();\n    for(int i = len - 1; ~i; i--) {\n      if(i == len - 1) cout << a[i];\n      else for(ll p = base / 10; p; p /= 10) cout << a[i] / p % 10;\n    }\n    cout << \"\\n\";\n  }\n\n  void add(ll x) {\n    assert(0 <= x && x < base);\n    a.push_back(0), a[0] += x;\n    for(int i = 0; i + 1 < len; i++) {\n      if(a[i] >= base) a[i + 1]++, a[i] -= base;\n      else break;\n    }\n    adjust();\n  }\n  void sub(ll x) {\n    assert(0 <= x && x <= eval());\n    a.push_back(0), a[0] -= x;\n    for(int i = 0; i + 1 < len; i++) {\n      if(a[i] < 0) a[i + 1]--, a[i] += base;\n      else break;\n    }\n    adjust();\n  }\n  void add(const BigInt &x) {\n    a.resize(max(len, x.len) + 2);\n    for(int i = 0; i < x.len; i++) {\n      a[i] += x.a[i];\n      if(a[i] >= base) a[i + 1]++, a[i] -= base;\n    }\n    adjust();\n  }\n  void mul(ll x) {\n    assert(1 <= x && x < base);\n    a.push_back(0);\n    for(int i = 0; i + 1 < len; i++) a[i] *= x;\n    for(int i = 0; i + 1 < len; i++) a[i + 1] += a[i] / base, a[i] %= base;\n    adjust();\n  }\n  int div(int x) { // return remainder\n    assert(1 <= x && x < base);\n    ll remain = 0;\n    for(int i = len - 1; ~i; i--) {\n      remain = remain * base + a[i];\n      a[i] = remain / x, remain %= x;\n    }\n    adjust();\n    return remain;\n  }\n  #undef len\n} ans, a, b; // a * n + b * (n - 1)\n\nint n, k;\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin); \n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n\n  cin >> n >> k;\n  if(k >= n) puts(\"1\");\n  else if(k == 1) puts(\"Poor E.S.!\");\n  else if(k == 2) {\n    ans.init(1);\n    n -= 2;\n    while(n >= 15) ans.mul(1 << 15), n -= 15;\n    ans.mul(1 << n);\n    ans.print();\n  }\n  else {\n    a.init(1);\n    while(n) {\n      if(a.eval() > k) {\n        BigInt c = a;\n        c.sub(2);\n        int rem = c.div(k - 1);\n        ans.add(c);\n        a.init(rem + 2);\n        c.mul(k), b.add(c);\n      }\n      ans.add(1);\n      int cnt = k;\n      while(cnt && n) {\n        if(a.eval() > cnt) {\n          a.sub(cnt), b.add(cnt);\n          cnt = 0;\n        }\n        else {\n          b.add(a.eval());\n          cnt -= a.eval();\n          a = b, b.init(0);\n          n--;\n        }\n      }\n      a.add(1);\n    }\n    ans.print();\n  }\n  cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\n  return 0;\n}\n```",
        "postTime": 1678327487,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P9134 [THUPC 2023 \u521d\u8d5b] \u62e7\u87ba\u4e1d"
    }
]