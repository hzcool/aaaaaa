[
    {
        "content": "\u9996\u5148\u8003\u8651\u66b4\u529b\uff0c\u5224\u65ad\u6bcf\u4e2a\u683c\u5b50\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185\u90e8\uff0c\u627e\u5230\u5176\u7f16\u53f7\u6700\u5c0f\u548c\u7f16\u53f7\u6700\u5927\u7684\u683c\u5b50\uff0c\u8bbe\u5176\u7f16\u53f7\u4e3a $l,r$\u3002\n\n\u663e\u7136 $l \\sim r$ \u4e2d\u7684\u683c\u5b50\u4e0d\u4e00\u5b9a\u90fd\u662f\u591a\u8fb9\u5f62\u5185\u90e8\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u95f4\u9694\u3002\n\n\u5982\u679c\u67e5\u8be2 $1$\uff0c\u8fd4\u56de $r-l+1$\u3002\n\n\u67e5\u8be2 $k$\uff0c\u627e\u5230 $l \\sim r$ \u4e2d\u957f\u5ea6\u524d $k-1$ \u5927\u7684\u95f4\u9694\uff0c\u8bbe\u5176\u957f\u5ea6\u548c\u4e3a $len$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $r-l+1-len$\u3002\n\n\u56e0\u4e3a\u7528 $k$ \u4e2a\u533a\u95f4\u8868\u793a\uff0c\u6700\u4f18\u7b56\u7565\u5c31\u662f\u5c06\u5176\u524d $k-1$ \u5927\u7684\u95f4\u9694\u53bb\u6389\u3002\n\n\u5c06\u5176\u6240\u6709\u533a\u95f4\u6392\u5e8f\uff0c\u524d\u7f00\u548c\u9884\u5904\u7406\u5373\u53ef\u3002\n\n\u5c06\u5176\u4f18\u5316\uff0c\u9898\u76ee\u4e2d\u51fa\u73b0\u4e86 $2^n$\uff0c\u7528\u5206\u6cbb\u89e3\u51b3\u3002\n\n\u4f7f\u7528\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684\u5206\u6cbb\u601d\u60f3\u6c42\u51fa\u6240\u6709\u95f4\u9694\u3002\u8bbe\u5206\u6cbb\u5230\u533a\u95f4 $[l,r]$\uff0c\u5206\u6cbb\u7684\u4efb\u52a1\u662f\u627e\u51fa $[l,r]$ \u5185\u90e8\u7684\u95f4\u9694\uff0c\u8fd4\u56de $[l,r]$ \u4e2d\u6700\u5c0f/\u6700\u5927\u7684\u5185\u90e8\u683c\u5b50\u3002\n\n\u867d\u7136\u683c\u5b50\u6570\u91cf\u975e\u5e38\u591a\uff0c\u4f46\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u6570\u91cf\u662f\u6bd4\u8f83\u5c11\u7684\u3002\u5982\u679c\u4e00\u4e2a\u5206\u6cbb\u533a\u95f4\u5bf9\u5e94\u7684\u77e9\u5f62\u5185\u6709\u9876\u70b9\uff0c\u79f0\u4e3a\u7279\u6b8a\u533a\u95f4\u3002\u7279\u6b8a\u533a\u95f4\u7684\u6570\u91cf\u53ea\u6709 $O(nm)$ \u4e2a\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f80\u4e0b\u9012\u5f52\u5904\u7406\u3002\n\n\u975e\u7279\u6b8a\u533a\u95f4\u5bf9\u5e94\u7684\u77e9\u5f62\u5185\u6ca1\u6709\u9876\u70b9\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n- \u6ca1\u6709\u8fb9\u7ecf\u8fc7\u77e9\u5f62\uff0c\u5224\u65ad\u5176\u5728\u591a\u8fb9\u5f62\u5185\u90e8\u8fd8\u662f\u5916\u90e8\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\n- \u6709\u8fb9\u7ecf\u8fc7\u77e9\u5f62\uff0c\u8981\u4e48\u5168\u662f\u7ad6\u7ebf\uff0c\u8981\u4e48\u5168\u662f\u6a2a\u7ebf\u3002\u5982\u679c\u5168\u662f\u7ad6\u7ebf\u7684\u77e9\u5f62\u5206\u6210\u4e0a\u4e0b\u4e24\u90e8\u5206\uff0c\u90a3\u8fd9\u4e24\u90e8\u5206\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u53ea\u9700\u8981\u9012\u5f52\u4e0a\u534a\u8fb9\uff0c\u4e0a\u534a\u8fb9\u627e\u5230\u7684\u95f4\u9694\u90fd\u8981\u4e58\u4ee5 $2$\uff0c\u53ef\u4ee5\u5728\u9012\u5f52\u65f6\u4f20\u4e00\u4e2a\u7cfb\u6570\uff0c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7cfb\u6570\u4e58\u4e0a $2$\u3002\n\n\u5224\u65ad\u4e00\u4e2a\u683c\u5b50\u5728\u5185\u90e8\u8fd8\u662f\u5916\u90e8\u53ef\u4ee5\u770b\u4ece\u683c\u5b50\u4e2d\u5fc3\u51fa\u53d1\u7684\u5c04\u7ebf\u548c\u8fb9\u7684\u76f8\u4ea4\u6b21\u6570\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u5206\u6cbb\u4f1a\u6709\u4e00\u5806\u533a\u95f4\u4e0d\u4f1a\u8bbf\u95ee\uff0c\u5206\u6790\u4e0b\u590d\u6742\u5ea6\u3002\n\n\u975e\u7279\u6b8a\u533a\u95f4\u4e00\u5f00\u59cb\u90fd\u662f\u7531\u7279\u6b8a\u533a\u95f4\u5206\u88c2\u4ea7\u751f\u7684\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u6700\u591a\u53d1\u751f $O(nm)$ \u6b21\u3002\u7136\u540e\u7531\u7279\u6b8a\u533a\u95f4\u4ea7\u751f\u7684\u975e\u7279\u6b8a\u533a\u95f4\u7ee7\u7eed\u9012\u5f52\uff0c\u7ee7\u7eed\u4ea7\u751f\u6700\u591a $O(nm)$ \u4e2a\u975e\u7279\u6b8a\u533a\u95f4\uff0c\u6240\u4ee5\u603b\u72b6\u6001 $O(n^2m^2)$ \u4e2a\u3002\u6bcf\u4e2a\u533a\u95f4\u5728\u5904\u7406\u7684\u65f6\u5019\u679a\u4e3e\u591a\u8fb9\u5f62\u7684\u6bcf\u6761\u8fb9\uff0c\u5224\u65ad\u4e0b\u5185\u90e8\u662f\u5426\u6709\u9876\u70b9\uff0c\u662f\u5426\u5168\u662f\u7ad6\u7ebf/\u6a2a\u7ebf\uff0c\u4ee5\u53ca\u5982\u679c\u4e3a\u7a7a\uff0c\u662f\u5728\u591a\u8fb9\u5f62\u5185\u90e8\u8fd8\u662f\u5916\u90e8\u3002\u590d\u6742\u5ea6 $O(n^2m^3)$\u3002\n\n~~\u5927\u6982\u5427\u3002~~\n\n\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define int long long\nconst int M=205,N2M2=1e6+5;\nint n,m;\nint ax[M],ay[M];\n\nmap<ll,int> mp;\nint cnt;\nll sz[N2M2],val[N2M2];\nint p[N2M2],pre[N2M2];\nll valpre[N2M2];\nbool cmp(int x,int y) {return val[x]>val[y];}\n\nbool check(int x,int y) {\n    int fg=0;\n    for(int i=1;i<=m;i++) {\n        if(ay[i]==ay[i+1]) continue;\n        if(ax[i]>x) continue;\n        if((ay[i]<=y&&ay[i+1]>y)||(ay[i]>y&&ay[i+1]<=y)) fg^=1;\n    }\n    return fg;\n}\n\nint calc(int lx,int ly,int rx,int ry) {\n    int fg=0;\n    for(int i=1;i<=m;i++) {\n        if(ax[i]==ax[i+1]) { //\u7ad6\u7684\u8fb9\n            if(ax[i]<=lx||ax[i]>rx) continue;\n\n            if(ay[i]>ly&&ay[i]<=ry) fg=3;\n            else if(ay[i+1]>ly&&ay[i+1]<=ry) fg=3;\n            else if(ay[i]<=ly&&ay[i+1]<=ly) continue;\n            else if(ay[i]>ry&&ay[i+1]>ry) continue;\n            else fg|=1;\n        }\n        else {//\u6a2a\u7684\u8fb9\n            if(ay[i]<=ly||ay[i]>ry) continue;\n\n            if(ax[i]>lx&&ax[i]<=rx) fg=3;\n            else if(ax[i+1]>lx&&ax[i+1]<=rx) fg=3;\n            else if(ax[i]<=lx&&ax[i+1]<=lx) continue;\n            else if(ax[i]>rx&&ax[i+1]>rx) continue;\n            else fg|=2;\n        }\n    }\n    return fg;\n}\n\nvoid add(ll x,ll y) {\n    if(!x) return;\n    int t=mp[x];\n    if(!t) {\n        cnt++;\n        mp[x]=cnt;\n        val[cnt]=x;\n        t=cnt;\n    }\n    sz[t]+=y;\n    return;\n}\n\npair<ll,ll> solve(ll l,ll r,int lx,int ly,int rx,int ry,int cut,int len,int mul) {//cut 0  \u7ad6\u7740\u5207   1   \u6a2a\u7740\u5207\n    ll mid=(l+r)/2;\n    int qwq=calc(lx,ly,rx,ry);//0 \u6ca1\u6709\u5200  1  \u5168\u7ad6   2  \u5168\u6a2a   3 \u6709\u70b9\n    if(qwq==0) {\n        qwq=check(lx,ly);\n        if(qwq) return make_pair(l,r);\n        else return make_pair(-1,-1);\n    }\n    if(((qwq-1)^cut)==1) {\n        pair<int,int> x;\n        if(!cut) x=solve(l,mid,lx,ly,rx-(1<<len),ry,1,len,mul*2);\n        else x=solve(l,mid,lx,ly,rx,ry-(1<<len),0,len-1,mul*2);\n\n        if(x.first==-1) return x;\n        add(x.first+(mid-l+1)-x.second-1,mul);\n        return make_pair(x.first,x.second+(mid-l+1));\n    }\n    pair<ll,ll> x,y;\n    if(!cut) {\n        x=solve(l,mid,lx,ly,rx-(1<<len),ry,1,len,mul);\n        y=solve(mid+1,r,lx+(1<<len),ly,rx,ry,1,len,mul);\n    }\n    else {\n        x=solve(l,mid,lx,ly,rx,ry-(1<<len),0,len-1,mul);\n        y=solve(mid+1,r,lx,ly+(1<<len),rx,ry,0,len-1,mul);\n    }\n    \n    ll k=y.first-x.second-1;\n    if(k&&(y.first!=-1)&&(x.second!=-1)) add(k,mul);\n\n    if(x.first==-1) return y;\n    if(y.first==-1) return x;\n    return make_pair(x.first,y.second);\n}\nsigned main() {\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=m;i++) scanf(\"%lld%lld\",&ax[i],&ay[i]);\n    ax[m+1]=ax[1],ay[m+1]=ay[1];\n\n    pair<int,int> koishi=solve(0,(1ll<<(n*2))-1,0,0,(1<<n)-1,(1<<n)-1,0,n-1,1);\n    ll all=koishi.second-koishi.first+1;\n\n    for(int i=1;i<=cnt;i++) p[i]=i;\n    sort(p+1,p+cnt+1,cmp);\n    for(int i=1;i<=cnt;i++) {\n        int x=p[i];\n        pre[i]=pre[i-1]+sz[x];\n        valpre[i]=valpre[i-1]+sz[x]*1ll*val[x];\n    }\n\n    int T;\n    scanf(\"%lld\",&T);\n    while(T--) {\n        int x;\n        scanf(\"%lld\",&x);\n        x--;\n        if(x>pre[cnt]) {\n            printf(\"%lld\\n\",all-valpre[cnt]);\n            continue;\n        }\n\n        int l=0,r=cnt,mid,ans;\n        while(l<=r) {\n            mid=(l+r)>>1;\n            if(pre[mid]>=x) {\n                ans=mid;\n                r=mid-1;\n            }\n            else l=mid+1;\n        }\n\n        ll num=0;\n        if(ans) num=valpre[ans-1];\n        num+=(x-pre[ans-1])*1ll*val[p[ans]];\n        printf(\"%lld\\n\",all-num);\n    }\n    return 0;\n}\n```\n\n\u53e6\uff1a\u8fd9\u9898\u5c06\u591a\u8fb9\u5f62\u7684\u8fb9\u4e5f\u5206\u6cbb\u4e0b\u53bb\uff0c\u53ef\u4ee5\u628a\u590d\u6742\u5ea6\u964d\u81f3 $O(n^2m^2)$\u3002",
        "postTime": 1667567675,
        "uid": 105217,
        "name": "Pdw233",
        "ccfLevel": 0,
        "title": "P3683 \u9898\u89e3"
    }
]