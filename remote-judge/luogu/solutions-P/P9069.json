[
    {
        "content": "\u500d\u589e\u503c\u57df\u5206\u5757\u6a21\u677f\u9898\uff0c~~\u4f46\u56e0\u4e3a\u6211\u592a\u83dc\u4e86\uff0c\u8c03\u4e86\u597d\u957f\u65f6\u95f4~~\u3002\n\n\u5206\u6790\u9898\u610f\u53ef\u77e5\uff0c\u5f53 $a_i\\leq 0$ \u65f6\uff0c\u65e0\u8bba $x$ \u53d6\u4f55\u503c\uff0c\u5b83\u90fd\u5fc5\u5b9a\u4f1a\u51cf $x$\uff0c\u8fd9\u4e00\u70b9\u5f88\u597d\u5206\u6790\u3002\u6240\u4ee5\u6211\u4eec\u5355\u72ec\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u500d\u589e\u503c\u57df\u5206\u5757\u7684\u6838\u5fc3\u5c31\u5728\u4e8e\u5bf9\u4e8e\u503c\u57df\u5728 $[len^{i-1}+1,len^i]$ \u4e2d\u7684\u6570\u5206\u4e3a\u4e00\u4e2a\u5757\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u6211\u4eec\u4e00\u5171\u9700\u8981 $\\log_{len}n$ \u68f5\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad:\n\n- \u5f53\u5f53\u524d\u6700\u5927\u503c $<v$ \u65f6\uff0c\u5c06\u5176\u5168\u90e8\u5220\u53bb\uff0c\u63d2\u5165\u5230\u7ef4\u62a4\u8d1f\u6570\u7684\u7ebf\u6bb5\u6811\u4e2d\u3002\n\n- \u5f53\u5f53\u524d\u6700\u5c0f\u503c $>v$ \u65f6\uff0c\u66b4\u529b\u679a\u4e3e\u6240\u6709\u4f1a\u6389\u51fa\u5f53\u524d\u5757\u7684\u6570\uff0c\u8fdb\u884c\u66b4\u529b\u5220\u9664\u3002\n\n\u66f4\u591a\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n# code\n\n```cpp\n#include<bits/stdc++.h>\n#include<cstdio>\n#define N 555555\n#define M 8\n#define inf 1e12\n#define mod (1<<20)\n#define LL long long\n#define ULL unsigned long long\n#define len 22 \ninline LL read() {\n    LL x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\nusing namespace std;\nLL n,m,lastans=0;\nLL a[N],la[N];//\u8fd9\u662f\u521d\u59cb\u65f6\u7684\u503c\uff08\u4e4b\u540e\u5c31\u6ca1\u7528\u5230\u4e86\ninline void init(){\n    la[0]=1;\n    for(int i=1;i<M;i++)la[i]=la[i-1]*len;\n    return ;\n}\nstruct two {\n    LL smin;//\u6700\u5c0f\u503c\n    LL xw;//\u6700\u5c0f\u503c\u4f4d\u7f6e\n};\nstruct node {\n    LL sum,smax,tag;//\u5206\u522b\u662f\uff1a\u533a\u95f4\u6570\u5b57\u4e2a\u6570\uff0c\u533a\u95f4\u6700\u5927\u503c\uff0c\u61d2\u6807\u8bb0\n    LL ans,summin;//\u533a\u95f4\u548c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\u4e2a\u6570 \n    two in;\n} tree[M][N<<2]; //tree[s][now]s\u4e3a\u7b2c\u51e0\u9897\u7ebf\u6bb5\u6811\uff0cnow\u4e3a\u5f53\u524d\u8282\u70b9\ninline void sum(LL now,LL s) { //\u4e0a\u4f20\uff08\u5f88\u591a\u4eba\u628a\u8fd9\u4e2a\u5199\u6210pushup\n    tree[s][now].ans=tree[s][now<<1].ans+tree[s][now<<1|1].ans;//\u4e2a\u6570\u4e0a\u4f20\n    tree[s][now].sum=tree[s][now<<1].sum+tree[s][now<<1|1].sum;//\u603b\u548c\u4e0a\u4f20\n    tree[s][now].smax=max(tree[s][now<<1].smax,tree[s][now<<1|1].smax);//\u533a\u95f4\u6700\u5927\u503c\u4e0a\u4f20\n    if(tree[s][now<<1].in.smin<tree[s][now<<1|1].in.smin) {\n        tree[s][now].in=tree[s][now<<1].in;\n        tree[s][now].summin=tree[s][now<<1].summin;\n    } else if(tree[s][now<<1].in.smin>tree[s][now<<1|1].in.smin){\n        tree[s][now].in=tree[s][now<<1|1].in;\n        tree[s][now].summin=tree[s][now<<1|1].summin;\n    }\n    else {\n    \ttree[s][now].in=tree[s][now<<1].in;\n        tree[s][now].summin=tree[s][now<<1].summin+tree[s][now<<1|1].summin;\n\t}\n    return ;\n}\ninline void SW(LL now,LL s) {//\u8fd9\u4e2a\u662f\u5220\u9664\u5f53\u524d\u8282\u70b9 \n    tree[s][now].tag=0;\n    tree[s][now].sum=0;\n    tree[s][now].smax=-inf;\n    tree[s][now].in.smin=inf;\n    tree[s][now].ans=0;\n    tree[s][now].summin=0;\n    return ;\n}\ninline void build(LL l,LL r,LL now,LL s) { //\u5efa\u6811\uff0c\u8fd9\u91cc\u7684s\u53ca\u4e0b\u9762\u51fd\u6570\u7684s \u8868\u793a\u7b2c\u51e0\u68f5\u7ebf\u6bb5\u6811\n    if(l==r) {\n        //\u7279\u5224s=0\u7684\u60c5\u51b5\uff0c\u9632\u6b62\u51fa\u73b0\u7384\u5b66\u9519\u8bef\n        if((s==0&&a[l]==0)||(s!=0&&(la[s-1])<=a[l]&&a[l]<(la[s]))) {\n            tree[s][now].sum=1;\n            tree[s][now].smax=tree[s][now].ans=tree[s][now].in.smin=a[l];\n            tree[s][now].in.xw=l;\n            tree[s][now].summin=1;\n        } else \n           \tSW(now,s);\n        return ;\n    }\n    LL mid=l+r>>1;\n    build(l,mid,now<<1,s);\n    build(mid+1,r,now<<1|1,s);\n    sum(now,s);\n    return ;\n}//\u5bf9\u4e8e\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\uff0c\u6211\u53ea\u80fd\u8bf4\uff1a\u60a8\u771f\u52c7 \ninline void add(LL l,LL r,LL now,LL s,LL v) {//\u533a\u95f4\u52a0\uff08\u6211\u77e5\u9053\u64cd\u4f5c\u662f\u51cf\uff0c\u81ea\u5df1\u770b\u5176\u4ed6\u51fd\u6570\u3002 \n    if(tree[s][now].sum==0)return ;\n    tree[s][now].tag+=v;\n    tree[s][now].in.smin+=v;\n    tree[s][now].smax+=v;\n    tree[s][now].ans+=tree[s][now].sum*v;//\u8fd9\u91cc\u7528sum*v\uff0c\u4e0d\u662f(r-l+1)*v \n    return ;\n}\ninline void pushdown(LL l,LL r,LL now,LL s) {//\u4e0b\u4f20\u61d2\u6807\u8bb0 \n    if(tree[s][now].smax==-inf) {//\u7279\u5224\u70b9\u5df2\u7ecf\u88ab\u5220\u4e86\u7684\u60c5\u51b5 \n        SW(now<<1,s),SW(now<<1|1,s);\n        return ;\n    }\n    if(!tree[s][now].tag)return ;\n    LL mid=l+r>>1;\n    add(l,mid,now<<1,s,tree[s][now].tag);\n    add(mid+1,r,now<<1|1,s,tree[s][now].tag);\n    tree[s][now].tag=0;\n    return ;\n}\ninline void modify_j(LL l,LL r,LL now,LL s,LL x,LL y,LL v) {\n    if(tree[s][now].sum==0)return ;//\u9632\u6b62\u51fa\u73b0\u7384\u5b66\u9519\u8bef \n    if(l>=x&&r<=y)return add(l,r,now,s,-v);//\u7ec6\u8282\uff0c\u8fd9\u91cc\u662f-v \n    pushdown(l,r,now,s);\n    LL mid=l+r>>1;\n    if(x<=mid)modify_j(l,mid,now<<1,s,x,y,v);\n    if(y>mid)modify_j(mid+1,r,now<<1|1,s,x,y,v);\n    return sum(now,s);\n}\ninline two query_min(LL l,LL r,LL now,LL s,LL x,LL y) {\n    if(l>=x&&r<=y)return tree[s][now].in;//\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u4e1c\u4e1c\uff0c\u65b9\u4fbf\u6211\u4eec\u5220\u9664 \n    pushdown(l,r,now,s);\n    LL mid=l+r>>1;\n    two cnt;\n    cnt.smin=inf;\n    if(x<=mid) {\n        two linshi=query_min(l,mid,now<<1,s,x,y);\n        cnt=linshi;\n    }\n    if(y>mid) {\n        two linshi=query_min(mid+1,r,now<<1|1,s,x,y);\n        if(linshi.smin<cnt.smin)cnt=linshi;\n    }\n    return cnt;\n}\ninline LL query_max(LL l,LL r,LL now,LL s,LL x,LL y) {\n    if(tree[s][now].sum==0)return -inf;//\u6ce8\u610f\u7ec6\u8282 \n    if(l>=x&&r<=y)return tree[s][now].smax;\n    pushdown(l,r,now,s);\n    LL mid=l+r>>1,cnt=-inf;\n    if(x<=mid)cnt=query_max(l,mid,now<<1,s,x,y);\n    if(y>mid)cnt=max(cnt,query_max(mid+1,r,now<<1|1,s,x,y));\n    return cnt;\n}\ninline void tree_push(LL l,LL r,LL now,LL s,LL x,LL v) {//\u52a0\u5165\u65b0\u70b9 \n    if(l==r) {\n        tree[s][now].sum=1;\n        tree[s][now].smax=tree[s][now].ans=tree[s][now].in.smin=v;\n        tree[s][now].in.xw=l;tree[s][now].summin=1;\n        return ;\n    }\n    pushdown(l,r,now,s);\n    LL mid=l+r>>1;\n    if(x<=mid)tree_push(l,mid,now<<1,s,x,v);\n    else tree_push(mid+1,r,now<<1|1,s,x,v);\n    return sum(now,s);\n}\ninline void del_all(LL l,LL r,LL now,LL s,LL x,LL y,LL v) {//\u533a\u95f4\u5220\u9664\uff0c\u8fd9\u4e2a\u65f6\u5019\u5fc5\u5b9a\u662f\u51fa\u73b0\u4e86\u8d1f\u6570\uff0c\u8981\u63d2\u5165\u5230\u7ebf\u6bb5\u68110\u7684\u60c5\u51b5  \n    if(tree[s][now].sum==0)return ;//\u81f3\u4e8e\u6211\u4e3a\u4ec0\u4e48\u4e0d\u66b4\u529b\u679a\u4e3e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u7528del\u5220\u9664 \uff0c\u4e3b\u8981\u539f\u56e0\u662f\u6015\u88ab\u5361\u5e38 \n    if(l==r) {\n        tree_push(1,n,1,0,l,tree[s][now].smax-v);\n        SW(now,s);\n        return ;\n    }\n    LL mid=l+r>>1;\n    pushdown(l,r,now,s);\n    if(x<=mid)del_all(l,mid,now<<1,s,x,y,v);\n    if(y>mid)del_all(mid+1,r,now<<1|1,s,x,y,v);\n    return sum(now,s);\n}\ninline void del(LL l,LL r,LL now,LL s,LL x,LL v) {//\u5220\u9664\u5355\u70b9 \n    if(l==r) {\n        LL nowv=tree[s][now].smax-v;\n        SW(now,s);\n        if(nowv<0) {\n            tree_push(1,n,1,0,x,nowv);\n            return ;\n        }\n        for(LL i=1; i<s; i++)//\u67e5\u770b\u88ab\u51cf\u4e4b\u540e\u8c03\u5230\u4e86\u4ec0\u4e48\u5757\u4e2d \n            if((la[i-1])<=nowv&&nowv<(la[i])) {\n                tree_push(1,n,1,i,x,nowv);\n                break;\n            }\n        return ;\n    }\n    LL mid=l+r>>1;\n    pushdown(l,r,now,s);\n    if(x<=mid)del(l,mid,now<<1,s,x,v);\n    else del(mid+1,r,now<<1|1,s,x,v);\n    return sum(now,s);\n}\ninline void modify_all(LL l,LL r,LL now,LL s,LL x,LL y,LL v) {\n    if(tree[s][now].sum==0)return ;\n    if(l>=x&&r<=y) {\n        if(tree[s][now].smax<v)return del_all(1,n,1,s,l,r,v);\n        if(tree[s][now].in.smin>v) {\n            while(tree[s][now].in.smin-v<(la[s-1]))del(1,n,1,s,tree[s][now].in.xw,v);\n            add(l,r,now,s,-v);\n            return; \n        }\n        if(tree[s][now].in.smin==v&&tree[s][now].summin==tree[s][now].sum)return ;//\u4e0d\u5199\u8fd9\u53e5\u4f1a\u88ab\u5361 \n        if(l==r) {\n            if(tree[s][now].ans==v)return ;\n            if(tree[s][now].ans<v)return del_all(1,n,1,s,l,r,v);\n            if(tree[s][now].ans-v<(la[s-1]))return del(1,n,1,s,l,v);\n            return add(l,r,now,s,-v);\n        }\n        LL mid=l+r>>1;\n        pushdown(l,r,now,s);\n        modify_all(l,mid,now<<1,s,x,y,v);\n        modify_all(mid+1,r,now<<1|1,s,x,y,v);\n        return sum(now,s);\n    }\n    pushdown(l,r,now,s);\n    LL mid=l+r>>1;\n    if(x<=mid)modify_all(l,mid,now<<1,s,x,y,v);\n    if(y>mid)modify_all(mid+1,r,now<<1|1,s,x,y,v);\n    return sum(now,s);\n}\ninline ULL query_ans(LL l,LL r,LL now,LL s,LL x,LL y) {\n    if(tree[s][now].sum==0)return 0ll;\n    if(l>=x&&r<=y)return tree[s][now].ans;\n    pushdown(l,r,now,s);\n    LL mid=l+r>>1;\n    ULL aans=0;\n    if(x<=mid)aans=query_ans(l,mid,now<<1,s,x,y);\n    if(y>mid) aans+=query_ans(mid+1,r,now<<1|1,s,x,y);\n    return aans;\n}\nint main() {\n    n=read();m=read();\n    init();\n    for(LL i=1; i<=n; i++)\n        a[i]=read();\n    for(LL i=0; i<M; i++) //i=0\u65f6 \uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a40\u53ca\u8d1f\u6570\u3002 \u56e0\u4e3a\u4fee\u6539\u7684x>=0 ,\u800c\u7b49\u4e8e0\u65f6\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\n        build(1,n,1,i);//i!=0\u65f6\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u503c\u57df\u4e3a2^(i-1)\u2014\u2014(2^i)\n    while(m--) {\n        LL op=read();\n        if(op==1) {\n            LL l=read()^lastans,r=read()^lastans,x=read()^lastans;\n            if(!x)continue;\n            modify_j(1,n,1,0,l,r,x);\n            for(LL j=1; j<M; j++) \n                modify_all(1,n,1,j,l,r,x);\n                //\u592a\u6bd2\u7624\u4e86\uff01\n        }\n        if(op==2) {\n            LL l=read()^lastans,r=read()^lastans;\n            ULL ANS=0;\n            for(LL j=0; j<M; j++)\n                ANS+=query_ans(1,n,1,j,l,r);\n            lastans=(long long)(ANS%mod);\n            printf(\"%llu\\n\",ANS);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1682076614,
        "uid": 230825,
        "name": "\u8bb8\u591a",
        "ccfLevel": 4,
        "title": "P9069 [Ynoi Easy Round 2022] \u5815\u5929\u4f5c\u6218 \u9898\u89e3"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P9069)\n## \u9898\u610f\n\u533a\u95f4\u4e0d\u7b49\u4e8e $x$ \u7684\u51cf $x$\uff0c\u533a\u95f4\u6c42\u548c\u3002\u5f3a\u5236\u5728\u7ebf\u3002\n\n$n,q\\le5\\times10^5$\uff0c$0\\le x,a_i\\le 10^9$\uff0c\u65f6\u9650 6s\u3002\n## \u601d\u8def\n\u4e00\u4e2a\u4e0d\u7528\u500d\u589e\u5206\u5757\u505a\u5230\u540c\u590d\u6742\u5ea6\u7684\u505a\u6cd5\uff0c\u5f53\u7136\u500d\u589e\u5206\u5757\u662f\u66f4\u5177\u6709\u666e\u9002\u6027\u7684\u3002\n\n\u8003\u8651\u4e00\u4e0b\u95ee\u9898\uff0c\u5bf9\u4e8e\u533a\u95f4\u5185\u5c0f\u4e8e $x$ \u7684\u6570\uff0c\u56e0\u4e3a $x\\ge0$\uff0c\u5176\u51cf\u5b8c\u4e4b\u540e\u662f\u5c0f\u4e8e $0$ \u7684\uff0c\u4e4b\u540e\u6bcf\u6b21\u4e00\u5b9a\u90fd\u4f1a\u88ab\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u5168\u90e8\u53d6\u51fa\uff0c\u53e6\u5916\u7ef4\u62a4\uff0c\u53d6\u51fa\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u6700\u5c0f\u503c\u548c\u6700\u5c0f\u503c\u4f4d\u7f6e\uff08\u4efb\u610f\uff09\u5373\u53ef\u3002\n\n\u73b0\u5728\u6240\u6709\u6570\u90fd $\\ge x$\uff0c\u5982\u679c\u533a\u95f4\u6700\u5c0f\u503c\u5927\u4e8e $x$ \u5219\u76f4\u63a5\u533a\u95f4\u51cf\u3002\u5982\u679c\u533a\u95f4\u6700\u5c0f\u503c\u7b49\u4e8e $x$\uff0c\u6211\u4eec\u8003\u8651\u518d\u7ef4\u62a4\u533a\u95f4\u6b21\u5c0f\u503c\uff0c\u8bbe\u4e3a $\\text{sec}$\u3002\n\n\u5982\u679c $\\text{sec}-x>x$ \u5373 $\\text{sec}>2x$\uff0c\u5219\u5927\u5c0f\u5173\u7cfb\u4e0d\u4f1a\u53d8\u5316\uff0c\u76f4\u63a5\u6253\u4e0a\u533a\u95f4\u51cf tag\uff0c\u7ef4\u62a4\u4e24\u79cd tag\uff0c\u4e00\u4e2a\u662f\u533a\u95f4\u6240\u6709\u6570\u51cf\u7684 tag\uff0c\u4e00\u4e2a\u662f\u533a\u95f4\u5185\u975e\u6700\u5c0f\u503c\u88ab\u51cf\u4e86\u591a\u5c11\u7684 tag\uff0c\u518d\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u5185\u6700\u5c0f\u503c\u4e2a\u6570\u5373\u53ef\u7edf\u8ba1\u53d8\u5316\u91cf\u3002\n\n\u5982\u679c $\\text{sec}-x\\le x$ \u5373 $\\text{sec}\\le 2x$\uff0c\u51cf\u5b8c\u540e\u5927\u5c0f\u5173\u7cfb\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u6211\u4eec\u628a\u533a\u95f4\u5185\u5728 $(x,2x]$ \u5185\u7684\u6570\u53d6\u51fa\u6765\uff0c\u8fd9\u65f6\u8f6c\u5316\u4e3a\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u6253\u5b8c\u6807\u8bb0\u6211\u4eec\u628a\u88ab\u53d6\u51fa\u7684\u6570\u653e\u56de\u7ebf\u6bb5\u6811\u4e2d\u3002\u7ef4\u62a4\u6b21\u5c0f\u503c\u4f4d\u7f6e\uff08\u4efb\u610f\uff09\u5373\u53ef\u3002\n\n> upd\uff1a\u8fd9\u90e8\u5206\u5176\u5b9e\u76f4\u63a5\u5728 $\\text{sec}-x\\le x$ \u7684\u65f6\u5019\u7ee7\u7eed\u5411\u4e24\u8fb9\u9012\u5f52\u5373\u53ef\u3002\u4e0d\u7528\u7279\u610f\u53d6\u51fa\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u53d8\u7684\u3002\n\n\u4ee4 $v=\\max(a_i)$\u3002\u6bcf\u4e2a\u6570\u88ab\u53d6\u51fa\u5fc5\u5b9a\u4f1a\u51cf\u534a\uff0c\u5373\u6bcf\u4e2a\u6570\u53ea\u4f1a\u88ab\u53d6\u51fa $O(\\log v)$ \u6b21\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n\\log v)$\u3002\n\n\u9700\u8981\u4ee3\u7801\u8bf7\u79c1\u4fe1\u8054\u7cfb\u3002\n\n\u5b9e\u73b0\u7684\u4ee3\u7801\u540a\u6253\u500d\u589e\u5206\u5757\uff0c\u5355\u70b9\u4e0d\u8d85\u8fc7 1s\uff0c\u76f4\u63a5\u6700\u4f18\u89e3\u3002",
        "postTime": 1676675090,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P9069\u3010[Ynoi Easy Round 2022] \u5815\u5929\u4f5c\u6218\u3011"
    },
    {
        "content": "### Part1 \u95ee\u9898\u5f15\u5165\n\n\u7ed9\u5b9a\u5e8f\u5217 $a_i$\uff0c\u8981\u6c42\u533a\u95f4\u4e0d\u7b49\u4e8e $x$ \u7684\u6570\u51cf\u53bb $x$\uff0c\u6216\u533a\u95f4\u6c42\u548c\uff0c$n,m\\le5\\times10^5$\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u7528\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u65e0\u6cd5\u7ef4\u62a4\uff0c\u81ea\u7136\u5c31\u8981\u5f80\u5206\u5757\u65b9\u9762\u60f3\u3002\n\n\u8fd9\u9898\u7684\u601d\u8def\u662f\u5f88\u81ea\u7136\u7684\uff0c\u6ca1\u6709\u9700\u8981\u6784\u9020\u7684\u5730\u65b9\uff0c\u8ba9\u4eba\u611f\u89c9\u6bcf\u4e00\u6b65\u7684\u601d\u8003\u90fd\u5f88\u5408\u7406\u3002\n\n### Part2 \u975e\u66b4\u529b\u4e0d\u53ef\u8fc7\u89e3\n\n\u5bf9\u4e8e\u4e00\u4e2a\u64cd\u4f5c $1$\uff0c\u8003\u8651 $a_i$ \u7684\u53d8\u5316\uff1a\n\n1. $a_i<x$\uff0c\u5219 $a_i\\leftarrow a_i-x$\uff0c\u4e14\u53d8\u5316\u540e $a_i<0$\uff1b\n2. $a_i=x$\uff0c\u5219 $a_i$ \u4e0d\u53d8\uff1b\n3. $a_i>x$\uff0c\u5219 $a_i\\leftarrow a_i-x$\uff0c\u4e14\u53d8\u5316\u540e $a_i>0$\u3002\n\n\u5982\u679c\u67d0\u4e00\u65f6\u523b $a_i<0$\uff0c\u5219\u5bf9\u4e8e\u4e4b\u540e\u7684\u6bcf\u4e00\u4e2a\u64cd\u4f5c\uff08\u533a\u95f4\u5305\u542b $i$\uff09 $a_i$ \u90fd\u4f1a\u51cf\u5c11 $x$\uff0c\u5bf9\u4e8e\u8fd9\u4e9b $a_i$\uff0c\u6211\u4eec\u53ef\u4ee5\u6574\u4f53\u6253\u6807\u8bb0\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u5757\u5185\u53ea\u7ef4\u62a4\u5927\u4e8e $0$ \u7684\u6570\u503c\uff0c\u800c\u6bcf\u4e00\u4e2a $a_i$ \u4f1a\u5728\u7b2c\u4e00\u6b21\u7684 $a_i<x$ \u65f6\u5220\u9664\u3002\n\n\u800c $a_i>x$ \u4e5f\u662f\u5f88\u591a\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u6574\u4f53\u6807\u8bb0\uff08\u548c\u4e4b\u524d\u5171\u7528\u4e00\u4e2a\u6807\u8bb0\uff09\uff0c\u4e8e\u662f\u6bcf\u6b21\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e $a_i=x$\uff0c\u8ba9 $a_i\\leftarrow a_i+x$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u90e8\u5206\u8981\u6c42\u5c06\u540c\u4e00\u4e2a\u503c\u7684\u6570\u5b57\u4e00\u8d77\u7ef4\u62a4\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u94fe\u8868\u5c06\u503c\u76f8\u540c\u7684\u8fde\u5230\u4e00\u8d77\u6765\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6bcf\u4e00\u6b21\u64cd\u4f5c\u9700\u8981\u4e0d\u505c\u5730\u627e\u6700\u5c0f\u503c\uff0c\u5982\u679c\u5f53\u524d\u6700\u5c0f\u503c $v<x$\uff0c\u5219\u5f39\u51fa\uff0c$v>x$ \u76f4\u63a5\u9000\u51fa\uff0c\u5426\u5219 $v=x$\uff0c\u5c31 $v\\leftarrow2v$\uff0c\u540c\u65f6\u8ba9\u5757\u7684 $sum\\leftarrow sum+x\\times sz_v$\uff0c\u5373\u6709 $sz_v$ \u4e2a\u6570\u5b57\u4e0d\u4f1a\u53d8\u5316\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7528\u5806\u7ef4\u62a4\u3002\n\n\u91cd\u6784\u5757\u65f6\u8981\u5c06\u6240\u6709\u540c\u6570\u503c\u94fe\u8868\u5168\u90e8\u62c6\u6563\uff0c\u91cd\u65b0\u6392\u5e8f\u5efa\u5806\u3002\n\n\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u7a33\u5730\u843d\u5728\u4e86 $O(m\\sqrt n\\log_2n)$\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u5f53\u7136\u4f60\u53ef\u4ee5\u7528\u538b\u4f4d Trie \u548c\u54c8\u5e0c\u8868\u7ef4\u62a4\uff0c\u8fd9\u6837\u65f6\u95f4\u53d8\u6210\u4e86 $O(m\\sqrt n\\log_wV)$\uff0c\u4f46\u7531\u4e8e\u9700\u8981\u52a8\u6001\u5f00\u70b9\uff0c\u6240\u4ee5\u7a7a\u95f4\u662f $O(n\\log_wV)$ \u7684\u3002\n\n### Part3 \u503c\u57df\u5747\u644a\u4f18\u5316\n\n\u60f3\u5230\u4e0a\u9762\u7684\u505a\u6cd5\u6211\u5c31\u4e0d\u4f1a\u4f18\u5316\u4e86\uff0c\u751a\u81f3\u4e00\u518d\u8ba4\u4e3a\u81ea\u5df1\u7684\u60f3\u6cd5\u6709\u8bef\uff0c\u7136\u800c\u79bb\u901a\u8fc7\u53ea\u5dee\u4e00\u4e2a\u4f18\u5316\u3002\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u7684 $v\\leftarrow2v$\uff0c\u5373\u66f4\u6539\u6700\u5c0f\u503c\u662f\u590d\u6742\u5ea6\u74f6\u9888\uff0c\u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u5feb\u901f\u5730\u8c03\u6574\u6700\u5c0f\u503c\u3002\n\n\u53d1\u73b0\u8c03\u6574\u6700\u5c0f\u503c\u5c31\u662f\u5728 $v\\leftarrow2v$ \u540e\u8df3\u8fc7\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u5230\u540e\u9762\u53bb\uff0c$v'$ \u4f1a\u88ab $v$ \u8df3\u8fc7\u5f53\u4e14\u4ec5\u5f53 $v'\\in(v,2v)$\uff0c\u4f46\u662f\u5728\u8fd9\u6b21\u64cd\u4f5c\u5b9e\u9645\u610f\u4e49\u4e0a $v'\\leftarrow v'-v<\\dfrac v 2$\uff0c\u800c\u4e00\u4e2a\u6570\u5b57\u6700\u591a\u4f1a\u6709 $\\log_2V$ \u6b21\u9664\u4ee5 $2$\uff0c\u6240\u4ee5\u66b4\u529b\u8df3\u8fc7\u7684\u5747\u644a\u65f6\u95f4\u4e3a $O(n\\log_2V)$\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\u5c31\u662f\u5982\u679c\u5b58\u5728\u76f8\u7b49\u7684\uff0c\u5373 $v'=2v$\uff0c\u5219\u5fc5\u987b\u5c06\u4e24\u8005\u5408\u5e76\u800c\u975e\u7b80\u5355\u63a5\u5728\u540e\u9762\uff0c\u56e0\u4e3a\u53ea\u6709\u4fdd\u8bc1\u5757\u5185\u540c\u6570\u503c\u7684\u94fe\u8868\u53ea\u6709\u4e00\u4e2a\u624d\u80fd\u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u79fb\u52a8\u6700\u5c0f\u503c\uff08\u5373\u6700\u5c0f\u503c\u4e0d\u80fd\u6709\u591a\u4e2a\uff09\u3002\n\n\u7136\u540e\u6211\u5728\u8fd9\u91cc\u7528\u4e86 `vector::insert` \u5c31\u70b8\u4e86\uff0c\u5fc5\u987b\u8981\u4e00\u76f4 `pop_back` \u5e76\u5b58\u8d77\u6765\uff0c\u518d `push_back` \u56de\u53bb\uff0c\u4f60\u4e5f\u53ef\u4ee5\u624b\u5199\u94fe\u8868\uff0c\u4f46\u5343\u4e07\u4e0d\u8981\u7528 `std::list`\uff0c\u8fd9\u4e2a\u5b9e\u5728\u662f\u592a\u6162\u4e86\uff01\n\n### Part4 \u6563\u5757\u91cd\u6784\n\n\u8bba\u5982\u4f55 $O(\\sqrt n)$ \u91cd\u6784\u6563\u5757\uff1f\n\n\u9996\u5148\u904d\u5386\u540c\u6570\u503c\u7684\u94fe\u8868\uff0c\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\uff08\u9664\u53bb\u6574\u4f53\u6807\u8bb0\u7684\u90e8\u5206\uff09\u66f4\u65b0\uff0c\u7136\u540e\u4fee\u6539\u533a\u95f4 $[l,r]$\u3002\n\n\u53d1\u73b0\u8fd9\u65f6\u6211\u4eec\u5e76\u4e0d\u80fd\u66b4\u529b `sort`\uff0c\u9700\u8981\u5728\u904d\u5386\u94fe\u8868\u65f6\uff0c\u5c06\u9700\u8981\u51cf $x$\uff08$a_i>x\\land i\\in[l,r]$\uff09\u7684\u6570\u653e\u5728\u4e00\u8fb9\uff0c\u5176\u4ed6\u7684\u653e\u5728\u53e6\u4e00\u8fb9\u4fee\u6539\u4e4b\u540e\u5f52\u5e76\u5c31\u884c\u4e86\u3002\n\n### Part5 \u5176\u4ed6\u505a\u6cd5\n\n\u9996\u5148\u5206\u5757\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sqrt n+n\\log_2V)$\uff0c\u7a7a\u95f4 $O(n)$\u3002\n\n\u4e00\u4e2a\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u500d\u589e\u5206\u5757\uff0c$O((n+m)\\log n\\log V)$\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5229\u7528\u5230\u672c\u9898\u5c0f\u4e8e $x$ \u6570\u5b57\u66b4\u529b\u51cf\u7684\u6027\u8d28\u3002\n\n\u6240\u4ee5\u6700\u4f18\u79c0\u7684\u65b9\u6cd5\u8fd8\u662f\u8bb0\u5f55\u6b21\u5c0f\u503c\uff0c\u548c\u7ebf\u6bb5\u6811 3 \u7c7b\u4f3c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log V+m\\log n)$\uff0c\u5e38\u6570\u6781\u5c0f\u3002",
        "postTime": 1676334647,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u5e8f\u5217\u5206\u5757\uff0c\u94fe\u8868\u4ee5\u53ca\u503c\u57df\u5747\u644a"
    },
    {
        "content": "\u4e3a\u5565\u500d\u589e\u503c\u57df\u5206\u5757\u9898\u89e3\u90fd\u6ca1\u8bf4\u600e\u4e48\u5361\u5e38\u554a\uff0c\u600e\u4e48\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u4eba\u50bb\u5e38\u6570\u5927\u554a\u3002\n\nlxl \u8bb2\u7684\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n[Link](https://www.luogu.com.cn/problem/P9069)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c$m$ \u6b21\u64cd\u4f5c\uff0c\u4fee\u6539\u64cd\u4f5c\u662f\u5c06\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709 $\\neq x$ \u7684 $a_i \\leftarrow a_i-x$\uff0c\u67e5\u8be2\u64cd\u4f5c\u533a\u95f4\u6c42\u548c\u5e76\u5bf9 $2^{64}$ \u53d6\u6a21\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n$1\\leq n,m \\leq 5\\times 10^5,0\\leq a_i,x \\leq 10^9$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u4ed4\u7ec6\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0 $x\\geq 0$\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u4e00\u5b9a\u4f1a\u5c06\u8d1f\u6570\u51cf\u6389\uff0c\u6240\u4ee5\u8981\u5c06\u8d1f\u6570\u5206\u5f00\u5904\u7406\u3002\n\n\u5982\u4f55\u4ea7\u751f\u8d1f\u6570\u5462\uff1f\u5047\u8bbe\u5f53\u524d\u8981\u51cf\u53bb\u4e00\u4e2a $x$\uff0c\u90a3\u4e48\u5f53\u524d\u533a\u95f4\u5185 $<x$ \u7684\u4f4d\u7f6e\u90fd\u4f1a\u88ab\u51cf\u6210\u8d1f\u6570\uff0c\u540e\u7eed\u4e0d\u9700\u8981\u5355\u72ec\u8003\u8651\uff0c\u4e0d\u96be\u53d1\u73b0\u6bcf\u4e2a\u6570\u53ea\u4f1a\u53d8\u6210\u4e00\u6b21\u8d1f\u6570\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\u52a8\u6001\u63d2\u5165\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u76f4\u63a5\u9012\u5f52\u627e\u5230\u6240\u6709 $<x$ \u7684\u6570\u66b4\u529b\u5220\u9664\uff0c\u5e76\u6254\u5230\u8d1f\u6570\u7684\u7ebf\u6bb5\u6811\u4e0a\u5373\u53ef\uff0c\u8fd9\u90e8\u5206\u6bcf\u6b21\u5220\u9664\u9700\u8981 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u662f $O(n\\log n)$ \u7684\u3002\n\n\u6240\u4ee5\u4e0d\u96be\u53d1\u73b0\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u5c06\u4e00\u4e2a\u533a\u95f4 $>x$ \u7684\u6570\u51cf\u53bb $x$\uff0c\u8fd9\u91cc\u5c31\u8981\u5f15\u51fa\u4e00\u4e2a\u4e1c\u897f\u53eb\u505a\u500d\u589e\u503c\u57df\u5206\u5757\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5206\u7ec4\uff0c\u5177\u4f53\u7684\uff0c\u5c06\u503c\u57df\u5206\u6210 $[0,0],[1,1],[2,3),[4,7)\\dots$  \u4e5f\u5c31\u662f\u6309 $2^i$ \u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u8003\u8651\u5bf9\u8fd9\u6bcf\u4e00\u6bb5\u5206\u522b\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5728\u672c\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u8fd9\u4e1c\u897f\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u4f60\u8003\u8651 $>x$ \u7684\u6570\u5206\u5e03\u5728 $x$ \u6240\u5728\u5757\u4ee5\u53ca\u66f4\u5927\u7684\u5757\uff0c\u6211\u4eec\u5148\u8003\u8651\u66f4\u5927\u7684\u3002\n\n\u82e5\u4e00\u4e2a\u6570 $a_i$ \u51cf\u6389 $x$ \u540e\uff0c\u4e8c\u8fdb\u5236\u4f4d\u51cf\u5c11\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4fee\u6539\u5176\u6240\u5728\u7684\u5757\uff0c\u8fd9\u90e8\u5206\u600e\u4e48\u5904\u7406\u5462\uff1f\u6211\u4eec\u548c\u7ef4\u62a4\u8d1f\u6570\u4e00\u6837\uff0c\u76f4\u63a5\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u82e5\u6700\u5c0f\u503c\u51cf\u53bb $x$ \u540e\u4e0d\u5728\u5f53\u524d\u5757\uff0c\u5219\u9012\u5f52\u627e\u5230\u5e76\u5220\u53bb\u91cd\u6784\uff0c\u8fd9\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\u4f60\u8003\u8651\u4e00\u4e2a\u6570\u6700\u591a\u51cf\u5c11 $\\log V$ \u6b21\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5176\u4e2d $V$ \u662f\u503c\u57df\uff0c\u6bcf\u6b21\u4fee\u6539\u9700\u8981 $O(\\log n)$ \u7684\u590d\u6742\u5ea6\u5220\u9664\u5e76\u63d2\u5165\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u662f $O(n\\log n \\log V)$ \u7684\uff0c\u6240\u4ee5\u6b63\u786e\u3002\n\n\u800c\u5bf9\u4e8e\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u533a\u95f4\uff0c\u76f4\u63a5\u505a\u4e00\u4e2a\u533a\u95f4\u51cf\u5f97\u4fee\u6539\u6807\u8bb0\u5373\u53ef\uff0c\u56e0\u4e3a\u6700\u5c0f\u503c\u88ab\u4fee\u6539\u540e\u90fd\u6ca1\u53d8\uff0c\u6574\u4e2a\u533a\u95f4\u4e00\u5b9a\u90fd\u4e0d\u4f1a\u53d8\u3002\n\n\u7136\u540e\u73b0\u5728\u6765\u8003\u8651\u5982\u4f55\u4fee\u6539 $x$ \u6240\u5728\u7684\u5757\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e00\u5757\u53ef\u4ee5\u5206\u6210\u4e09\u90e8\u5206\uff0c$<x$ \u7684\u76f4\u63a5\u66b4\u529b\u627e\u6254\u5230\u8d1f\u6570\u4e0a\uff0c$=x$ \u7684\u533a\u95f4\u76f4\u63a5\u7279\u5224\u6389\u4e0d\u7ba1\uff0c$>x$ \u7684\u533a\u95f4\u53ea\u8981\u51cf\u53bb $x$ \u5c31\u4e00\u5b9a\u4f1a\u51cf\u5c11\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u6700\u5c0f\u503c\u9012\u5f52\u5373\u53ef\u3002\n\n\u6240\u4ee5\u8fd9\u4e24\u79cd\u60c5\u51b5\u662f\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\u53bb\u5199\u7684\u3002\n\n\u67e5\u8be2\u76f4\u63a5\u679a\u4e3e\u5757\u6c42\u548c\u5373\u53ef\u3002\n\n## Code\n\n\u8fd9\u90e8\u5206\u5176\u5b9e\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u5361\u5e38\uff0c\u600e\u4e48\u529e\u5462\uff1f\u9996\u5148\u52a0\u4e0a\u5feb\u8bfb\u662f\u5fc5\u8981\u7684\uff0c\u4f60\u5f97\u6709\u4e2a\u901f\u5ea6\u5feb\u7684\u5feb\u8bfb\u3002\n\n\u5176\u6b21\u662f\u4e00\u4e2a\u6bd4\u8f83\u62bd\u8c61\u7684\u4f18\u5316\uff0c\u4f60\u8003\u8651\u4fee\u6539\u500d\u589e\u503c\u57df\u5206\u5757\u7684\u5e95\u6570\uff0c\u5efa\u8bae\u627e $2$ \u7684\u6b63\u6574\u6570\u6b21\u5e42\uff0c\u56e0\u4e3a\u8fd9\u6837\u65b9\u4fbf\u6c42\u6700\u9ad8\u4f4d\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e2a\u5e95\u6570\u53bb\u505a\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u5e95\u6570\u662f $16$\uff0c\u5b9e\u6d4b\u6548\u679c\u4e0d\u9519\uff0c\u7136\u540e\u5bf9\u539f\u5e8f\u5217\u6309\u8fd9\u4e2a\u5e95\u6570\u5206\u5757\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u65f6\u5019\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u957f\u5ea6 $\\leq 16$\uff0c\u5219\u4e0d\u518d\u9012\u5f52\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\uff0c\u6309\u7167 lxl \u7684\u8bf4\u6cd5\u8fd9\u6837\u6709\u5229\u4e8e\u7f13\u5b58\uff0c\u5176\u4ed6\u9898\u89e3\u867d\u7136\u7528\u4e86\uff0c\u4f46\u90fd\u6ca1\u660e\u8bf4\u3002\n\n\u6700\u540e\u4e00\u5b9a\u8981\u6ce8\u610f\u5904\u7406\u597d\u5f53\u524d\u533a\u95f4 $=x$ \u7684\u7279\u5224\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\u6700\u5927\u503c\u5373\u53ef\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\u8c03\u597d\u4e45\u3002\n\n\u6211\u7684\u7ebf\u6bb5\u6811\u56e0\u4e3a\u5199\u6cd5\u7279\u6b8a\u5199\u7684\u5f88\u957f\uff0c\u51d1\u5408\u770b\u5427\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#define unll unsigned long long\nusing namespace std;\nnamespace io {\n#define SIZE (1 << 20)\nchar ibuf[SIZE], *iS, *iT, obuf[SIZE], *oS = obuf, *oT = oS + SIZE - 1, c, qu[55];\nint f, qr;\ninline void flush(void) { return fwrite(obuf, 1, oS - obuf, stdout), oS = obuf, void(); }\ninline char getch(void) {\n    return (iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++)) : *iS++);\n}\ninline void putch(char x) {\n    *oS++ = x;\n    if (oS == oT) flush();\n    return;\n}\nstring getstr(void) {\n    string s = \"\";\n    char c = getch();\n    while (c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF) c = getch();\n    while (!(c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF)) s.push_back(c), c = getch();\n    return s;\n}\nvoid putstr(string str, int begin = 0, int end = -1) {\n    if (end == -1) end = str.size();\n    for (register int i = begin; i < end; i++) putch(str[i]);\n    return;\n}\ntemplate <typename T>\ninline T read() {\n    register T x = 0;\n    for (f = 1, c = getch(); c < '0' || c > '9'; c = getch())\n        if (c == '-') f = -1;\n    for (x = 0; c <= '9' && c >= '0'; c = getch()) x = x * 10 + (c & 15);\n    return x * f;\n}\ntemplate <typename T>\ninline void write(const T& t) {\n    register T x = t;\n    if (!x) putch('0');\n    if (x < 0) putch('-'), x = -x;\n    while (x) qu[++qr] = x % 10 + '0', x /= 10;\n    while (qr) putch(qu[qr--]);\n    return;\n}\nstruct Flusher_ {\n    ~Flusher_() { flush(); }\n} io_flusher_;\n}  // namespace io\nusing io::getch;\nusing io::getstr;\nusing io::putch;\nusing io::putstr;\nusing io::read;\nusing io::write;\nconst int N = 5e5+5;\nint n,m;\nint rt[50];long long L[N],R[N],now;\nlong long a[N];\nint getbit(long long x){\n\tif(x<=0){\n\t\treturn 0;\n\t}else{\n\t\treturn __lg(x)/4+1;\n\t}\n}\nstruct aa{\n\tint lc,rc,siz;\n\tlong long mi,mx,tag;\n\tunll val;\n\tvoid clear(){\n\t\tlc = rc = siz = 0;\n\t\tmi = mx = tag = 0;\n\t\tval = 0;\n\t}\n}node[N*30];\nint sta[N*10],top,tot,B=16;\nstruct seg{\n\n\tvoid pushup(int u){\n\t\tif(!node[u].lc){\n\t\t\tnode[u].mi = node[node[u].rc].mi;node[u].mx = node[node[u].rc].mx;\n\t\t\tnode[u].val = node[node[u].rc].val;node[u].siz = node[node[u].rc].siz;\n\t\t}else if(!node[u].rc){\n\t\t\tnode[u].mi = node[node[u].lc].mi;node[u].mx = node[node[u].lc].mx;\n\t\t\tnode[u].val = node[node[u].lc].val;node[u].siz = node[node[u].lc].siz;\n\t\t}else{\n\t\t\tnode[u].mi = min(node[node[u].lc].mi,node[node[u].rc].mi);node[u].mx = max(node[node[u].lc].mx,node[node[u].rc].mx);\n\t\t\tnode[u].val = node[node[u].lc].val+node[node[u].rc].val;node[u].siz = node[node[u].lc].siz+node[node[u].rc].siz;\n\t\t}\n\t}\n\t\n\tint newnode(){\n\t\tif(!top){\n\t\t\treturn ++tot;\n\t\t}else{\n\t\t\tnode[sta[top]].clear();\n\t\t\treturn sta[top--];\n\t\t}\n\t}\n\tvoid lazy_tag(int u,long long x){\n\t\tif(!u){\n\t\t\treturn;\n\t\t} \n\t\tnode[u].tag+=x;\n\t\tnode[u].mi+=x;node[u].mx+=x;\n\t\tnode[u].val+=(1ull*node[u].siz*x);\n\t}\n\tvoid pushdown(int u){\n\t\tif(!node[u].tag){\n\t\t\treturn;\n\t\t}\n\t\tif(node[u].lc){\n\t\t\tlazy_tag(node[u].lc,node[u].tag);\n\t\t}\n\t\tif(node[u].rc){\n\t\t\tlazy_tag(node[u].rc,node[u].tag);\n\t\t}\n\t\tnode[u].tag = 0;\n\t}\n\tvoid gx(int u,int l,int r,int z){\n\t\tnode[u].mi = 2e9;node[u].mx=-2e9;\n\t\tnode[u].val = node[u].siz = node[u].tag = 0;\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tif(getbit(a[i])==z){\n\t\t\t\tnode[u].val=(node[u].val+a[i]);node[u].siz++;\n\t\t\t\tnode[u].mi = min(node[u].mi,a[i]);\n\t\t\t\tnode[u].mx = max(node[u].mx,a[i]);\n\t\t\t}\n\t\t}\n\t}\n\tvoid upd(int &u,int l,int r,int x,int y,int z){\n\t\tif(!u){\n\t\t\tu = newnode();\n\t\t}\n\t\tif(r-l+1<=B){\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\tif(getbit(a[i])==z){\n\t\t\t\t\ta[i]+=node[u].tag;\n\t\t\t\t}\n\t\t\t}\n\t\t\ta[x]-=node[u].tag;\n\t\t\tnode[u].tag = 0;\n\t\t\tgx(u,l,r,z);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = (l+r)/2;\n\t\tif(x<=mid){\n\t\t\tupd(node[u].lc,l,mid,x,y,z);\n\t\t}else{\n\t\t\tupd(node[u].rc,mid+1,r,x,y,z);\n\t\t}\n\t\tpushup(u);\n\t}\n\tvoid modf(int u,int l,int r,int ll,int rr,int x){\n\t\tif(!u){\n\t\t\treturn;\n\t\t}\n\t\tif(r-l+1<=B){\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\tif(getbit(a[i])==0){\n\t\t\t\t\ta[i]+=node[u].tag;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode[u].tag = 0;\n\t\t\tint xx = max(l,ll),yy = min(r,rr);\n\t\t\tfor(int i=xx;i<=yy;i++){\n\t\t\t\tif(getbit(a[i])==0){\n\t\t\t\t\ta[i]+=x;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgx(u,l,r,0);\n\t\t\treturn;\n\t\t}\n\t\tif(l==ll&&r==rr){\n\t\t\tlazy_tag(u,x);\n\t\t\treturn;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = (l+r)/2;\n\t\tif(rr<=mid){\n\t\t\tmodf(node[u].lc,l,mid,ll,rr,x);\n\t\t}else if(ll>mid){\n\t\t\tmodf(node[u].rc,mid+1,r,ll,rr,x);\n\t\t}else{\n\t\t\tmodf(node[u].lc,l,mid,ll,mid,x);\n\t\t\tmodf(node[u].rc,mid+1,r,mid+1,rr,x);\n\t\t}\n\t\tpushup(u);\n\t}\n\tvoid add(int x,int y){\n\t\tif(y<0){\n\t\t\tupd(rt[0],1,n,x,y,0);\n\t\t}else{\n\t\t\tupd(rt[getbit(y)],1,n,x,y,getbit(y));\n\t\t}\n\t}\n\tvoid del2(int &u,int l,int r,int ll,int rr,int x){\n\t\tif(!u||(node[u].mi==x&&node[u].mx==x)){\n\t\t\treturn;\n\t\t}\n\t\tif(r-l+1<=B){\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\tif(getbit(a[i])==now){\n\t\t\t\t\ta[i]+=node[u].tag;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode[u].tag = 0;\n\t\t\tint xx = max(l,ll),yy = min(r,rr);\n\t\t\tfor(int i=xx;i<=yy;i++){\n\t\t\t\tif(getbit(a[i])==now){\n\t\t\t\t\tif(a[i]==x){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ta[i]-=x;\n\t\t\t\t\tif(a[i]<L[now]){\n\t\t\t\t\t\tadd(i,a[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tgx(u,l,r,now);\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l+r)/2;\n\t\tpushdown(u);\n\t\tif(l==ll&&r==rr){\n\t\t\tif(node[u].mi-x>=L[now]){\n\t\t\t\tlazy_tag(u,-x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(node[u].lc){\n\t\t\t\tif(node[node[u].lc].mi-x>=L[now]){\n\t\t\t\t\tlazy_tag(node[u].lc,-x);\n\t\t\t\t}else{\n\t\t\t\t\tdel2(node[u].lc,l,mid,ll,mid,x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(node[u].rc){\n\t\t\t\tif(node[node[u].rc].mi-x>=L[now]){\n\t\t\t\t\tlazy_tag(node[u].rc,-x);\n\t\t\t\t}else{\n\t\t\t\t\tdel2(node[u].rc,mid+1,r,mid+1,rr,x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpushup(u);\n\t\t\tif(!node[u].siz){\n\t\t\t\tsta[++top] = u;\n\t\t\t\tu = 0;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(rr<=mid){\n\t\t\tif(node[u].lc){\n\t\t\t\tdel2(node[u].lc,l,mid,ll,rr,x);\n\t\t\t}\n\t\t}else if(ll>mid){\n\t\t\tif(node[u].rc){\n\t\t\t\tdel2(node[u].rc,mid+1,r,ll,rr,x);\n\t\t\t}\n\t\t}else{\n\t\t\tif(node[u].lc){\n\t\t\t\tdel2(node[u].lc,l,mid,ll,mid,x);\n\t\t\t}\n\t\t\tif(node[u].rc){\n\t\t\t\tdel2(node[u].rc,mid+1,r,mid+1,rr,x);\n\t\t\t}\n\t\t}\n\t\tpushup(u);\n\t\tif(!node[u].siz){\n\t\t\tsta[++top] = u;\n\t\t\tu = 0;\n\t\t}\n\t}\n\tunll query(int u,int l,int r,int ll,int rr){\n\t\tif(!u){\n\t\t\treturn 0;\n\t\t}\n\t\tif(r-l+1<=B){\n\t\t\tfor(int i=l;i<=r;i++){\n\t\t\t\tif(getbit(a[i])==now){\n\t\t\t\t\ta[i]+=node[u].tag;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode[u].tag = 0;\n\t\t\tint x = max(l,ll),y = min(r,rr);\n\t\t\tunll res = 0;\n\t\t\tfor(int i=x;i<=y;i++){\n\t\t\t\tif(getbit(a[i])==now){\n\t\t\t\t\tres+=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t} \n\t\tif(l==ll&&r==rr){\n\t\t\treturn node[u].val;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = (l+r)/2;\n\t\tif(rr<=mid){\n\t\t\tif(!node[u].lc){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn query(node[u].lc,l,mid,ll,rr);\n\t\t}else if(ll>mid){\n\t\t\tif(!node[u].rc){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn query(node[u].rc,mid+1,r,ll,rr);\n\t\t}else{\n\t\t\tunll res;\n\t\t\tif(node[u].lc){\n\t\t\t\tres = query(node[u].lc,l,mid,ll,mid);\n\t\t\t}else{\n\t\t\t\tres = 0;\n\t\t\t}\n\t\t\tif(node[u].rc){\n\t\t\t\tres += query(node[u].rc,mid+1,r,mid+1,rr);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t}\n}T;\nint Mod = (1<<20)-1;\nint ksm(int x,int y){\n\tint res = 1;\n\twhile(y){\n\t\tif(y&1){\n\t\t\tres = res*x;\n\t\t}\n\t\ty>>=1;\n\t\tx = x*x;\n\t}\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tn = read<int>();m = read<int>();\n\tint x;\n\tfor(int i=1;i<=n;i++){\n\t\tx = read<int>();\n\t\ta[i] = x;\n\t}\n\tfor(int i=1;i<=8;i++){\n\t\tL[i] = ksm(16,i-1);\n\t\tR[i] = ksm(16,i)-1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tT.upd(rt[getbit(a[i])],1,n,i,a[i],getbit(a[i]));\n\t}\n\tint op,l,r;unll ans = 0;\n\twhile(m--){\n\t\top = read<int>();l = read<int>();r = read<int>();\n\t\tl^=ans;r^=ans;\n\t\tif(op==1){\n\t\t\tx = read<int>();\n\t\t\tx^=ans;\n\t\t\tif(x==0){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tT.modf(rt[0],1,n,l,r,-x);\n\t\t\tfor(int i=1;i<=8;i++){\n\t\t\t\tif(!rt[i]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnow = i;\n\t\t\t\tT.del2(rt[i],1,n,l,r,x);\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\tans = 0;\n\t\t\tfor(int i=0;i<=8;i++){\n\t\t\t\tif(!rt[i]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnow = i;\n\t\t\t\tans = (ans+T.query(rt[i],1,n,l,r));\n\t\t\t}\n\t\t\tcout<<ans<<'\\n';\n\t\t\tans=ans&Mod;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1682077623,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P9069 [Ynoi Easy Round 2022] \u5815\u5929\u4f5c\u6218\u3011"
    },
    {
        "content": "**[\u3010\u539f\u9898\u94fe\u63a5\u3011](https://www.luogu.com.cn/problem/P9069)**\n\n\u5927\u8bc8\u9a97\u5927\u8bc8\u9a97\u5927\u8bc8\u9a97\u5927\u8bc8\u9a97\u3002\n\n\u8fd9\u4e2a sb \u4ee5\u4e3a $a_i$ \u4e5f\u8981\u5bf9 $2^{64}$ \u53d6\u6a21\uff0c\u7136\u540e\u6d41\u6c57\u9ec4\u8c46\u4e86\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6c42 $a_i\\neq 0$ \u7684 $a_i$ \u7684\u548c\u662f\u51fa\u9898\u4eba\u53d1\u766b\uff0c\u6216\u8005\u662f\u4e3a\u4e86\u8ba9\u9898\u9762\u66f4\u6574\u9f50\u3002\n\n\u5176\u6b21\uff0c$a_i\\neq x$ \u7684 $a_i\\gets a_i-x$ \u53ef\u4ee5\u8f6c\u5316\u6210 $a_i>x$ \u7684 $a_i\\gets a_i-x$\u3002\u81f3\u4e8e $a_i<x$ \u7684\uff0c\u64cd\u4f5c\u5b8c\u4e00\u6b21\u5c31\u53d8\u6210\u8d1f\u6570\u4e86\uff0c\u5982\u679c\u662f\u8d1f\u6570\u4ee5\u540e\u90fd\u4e0d\u53ef\u80fd\u4f1a $=x$ \u4e86\uff0c\u76f4\u63a5\u5f00\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e9b\u6570\u5c31\u884c\u4e86\u3002\u663e\u7136\u4e00\u4e2a\u6570\u53ea\u4f1a\u53d8\u6210\u8d1f\u6570\u4e00\u6b21\uff0c\u66b4\u529b\u627e\u51fa\u6bcf\u6b21\u65b0\u53d8\u6210\u8d1f\u6570\u7684\u6570\u4fee\u6539\u5c31\u884c\u4e86\u3002\n\n$a_i>x$ \u7684\u51cf\u53bb $x$ \u662f\u7ecf\u5178\u9898\uff1a[P7447 [Ynoi2007] rgxsxrs](https://www.luogu.com.cn/problem/P7447)\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n// \u5feb\u8bfb\n\nusing LL=long long;\nusing LD=long double;\nusing UI=unsigned int;\nusing ULL=unsigned long long;\nconstexpr int INF=2e9;\n\nint n,m,tn,a[500005];\n\nnamespace SegTree1\n{\n\nstruct TreeNode{ int len;ULL tag,sum; }t[2000005];\n#define LC (i<<1)\n#define RC (i<<1|1)\ninline void addTag(int i,ULL x)\n\t{ t[i].tag+=x,t[i].sum+=t[i].len*x; }\ninline void pushdown(int i)\n\t{ if(t[i].tag) addTag(LC,t[i].tag),addTag(RC,t[i].tag),t[i].tag=0; }\ninline void pushup(int i)\n\t{ t[i].sum=t[LC].sum+t[RC].sum; }\nvoid insert(int p,int x,int i=1,int l=1,int r=n)\n{\n\tif(l==r) return t[i].len=1,t[i].sum=x,void();\n\tint mid=(l+r)>>1;\n\tpushdown(i);\n\tif(mid>=p) insert(p,x,LC,l,mid);\n\telse insert(p,x,RC,mid+1,r);\n\tt[i].sum+=x,t[i].len++;\n}\nvoid modify(int lq,int rq,int x,int i=1,int l=1,int r=n)\n{\n\tif(l>=lq && r<=rq) return addTag(i,-x);\n\tint mid=(l+r)>>1;\n\tpushdown(i);\n\tif(mid>=lq) modify(lq,rq,x,LC,l,mid);\n\tif(mid<rq) modify(lq,rq,x,RC,mid+1,r);\n\tpushup(i);\n}\nULL query(int lq,int rq,int i=1,int l=1,int r=n)\n{\n\tif(l>=lq && r<=rq) return t[i].sum;\n\tint mid=(l+r)>>1;ULL res=0;\n\tpushdown(i);\n\tif(mid>=lq) res+=query(lq,rq,LC,l,mid);\n\tif(mid<rq) res+=query(lq,rq,RC,mid+1,r);\n\treturn res;\n}\n#undef LC\n#undef RC\n\n} // namespace SegTree1\n\nnamespace SegTree2\n{\n\nconstexpr int T=16,B=16;\n#define ID(x) ((int)(log(x)/log(T)))\n\nint V,tn,pw[30],pos[500005];\n\nstruct TreeNode{ int mn,mx,len,tag,lc,rc;ULL sum; }t[5000005];\nint cnt,rt[30];\n#define LC t[i].lc\n#define RC t[i].rc\ninline void addTag(int i,int x)\n{\n\tif(!t[i].len) return;\n\tt[i].tag+=x,t[i].mn+=x,t[i].mx+=x;\n\tt[i].sum+=(ULL)t[i].len*x;\n}\ninline void pushup(int i)\n{\n\tt[i].mn=min(t[LC].mn,t[RC].mn);\n\tt[i].mx=max(t[LC].mx,t[RC].mx);\n\tt[i].len=t[LC].len+t[RC].len;\n\tt[i].sum=t[LC].sum+t[RC].sum;\n}\ninline void rebuild(int id,int i,int l,int r)\n{\n\tt[i].mn=INF,t[i].mx=-INF,t[i].len=t[i].sum=0;\n\tfor(int j=l;j<=r;j++)\n\t{\n\t\tif(pos[j]!=id) continue;\n\t\tt[i].mn=min(t[i].mn,a[j]);\n\t\tt[i].mx=max(t[i].mx,a[j]);\n\t\tt[i].sum+=a[j],t[i].len++;\n\t}\n}\ninline void pushdown(int id,int i,int l,int r)\n{\n\tif(!t[i].tag) return;\n\tif(r-l>=B) addTag(LC,t[i].tag),addTag(RC,t[i].tag);\n\telse for(int j=l;j<=r;j++) if(pos[j]==id) a[j]+=t[i].tag;\n\tt[i].tag=0;\n}\nvoid build(int id,int l,int r,int &i)\n{\n\ti=++cnt;\n\tif(r-l<B) return rebuild(id,i,l,r);\n\tint mid=(l+r)>>1;\n\tbuild(id,l,mid,LC);\n\tbuild(id,mid+1,r,RC);\n\tpushup(i);\n}\nvoid insert(int id,int p,int x,int i,int l=1,int r=n)\n{\n\tif(r-l<B)\n\t{\n\t\tpushdown(id,i,l,r),pos[p]=id;\n\t\tt[i].mn=min(t[i].mn,x);\n\t\tt[i].mx=max(t[i].mx,x);\n\t\tt[i].sum+=x,t[i].len++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(id,i,l,r);\n\tif(mid>=p) insert(id,p,x,LC,l,mid);\n\telse insert(id,p,x,RC,mid+1,r);\n\tpushup(i);\n}\nvoid modify(int id,int lq,int rq,int x,int i,int l=1,int r=n)\n{\n\tif(t[i].mx<=x || !t[i].len) return;\n\telse if(l>=lq && r<=rq && t[i].mn-x>=pw[id]) return addTag(i,-x);\n\telse if(r-l<B)\n\t{\n\t\tpushdown(id,i,l,r),lq=max(lq,l),rq=min(rq,r);\n\t\tfor(int j=lq;j<=rq;j++)\n\t\t{\n\t\t\tif(pos[j]!=id || a[j]<=x) continue;\n\t\t\tif((a[j]-=x)>=pw[id]) continue;\n\t\t\tint at=ID(a[j]);\n\t\t\tinsert(at,j,a[j],rt[at]);\n\t\t}\n\t\treturn rebuild(id,i,l,r);\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(id,i,l,r);\n\tif(mid>=lq) modify(id,lq,rq,x,LC,l,mid);\n\tif(mid<rq) modify(id,lq,rq,x,RC,mid+1,r);\n\tpushup(i);\n}\nvoid check(int id,int lq,int rq,int x,int i,int l=1,int r=n)\n{\n\tif(t[i].mn>=x || !t[i].len) return;\n\telse if(r-l<B)\n\t{\n\t\tpushdown(id,i,l,r),lq=max(lq,l),rq=min(rq,r);\n\t\tfor(int j=lq;j<=rq;j++)\n\t\t{\n\t\t\tif(pos[j]!=id || a[j]>=x) continue;\n\t\t\tpos[j]=-1;\n\t\t\tSegTree1::insert(j,a[j]-=x);\n\t\t}\n\t\treturn rebuild(id,i,l,r);\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(id,i,l,r);\n\tif(mid>=lq) check(id,lq,rq,x,LC,l,mid);\n\tif(mid<rq) check(id,lq,rq,x,RC,mid+1,r);\n\tpushup(i);\n}\nULL query(int id,int lq,int rq,int i,int l=1,int r=n)\n{\n\tif((l>=lq && r<=rq) || !t[i].len) return t[i].sum;\n\telse if(r-l<B)\n\t{\n\t\tULL res=0;\n\t\tlq=max(lq,l),rq=min(rq,r);\n\t\tfor(int j=lq;j<=rq;j++)\n\t\t\tif(pos[j]==id) res+=a[j]+t[i].tag;\n\t\treturn res;\n\t}\n\tint mid=(l+r)>>1;ULL res=0;\n\tpushdown(id,i,l,r);\n\tif(mid>=lq) res+=query(id,lq,rq,LC,l,mid);\n\tif(mid<rq) res+=query(id,lq,rq,RC,mid+1,r);\n\treturn res;\n}\ninline void prework()\n{\n\tV=*max_element(a+1,a+n+1),tn=ID(V),pw[0]=1;\n\tfor(int i=1;i<=tn;i++) pw[i]=pw[i-1]*T;\n\tfor(int i=1;i<=n;i++) if(a[i]) pos[i]=ID(a[i]); else SegTree1::insert(i,0),pos[i]=-1;\n\tfor(int i=0;i<=tn;i++) build(i,1,n,rt[i]);\n}\ninline void modify(int l,int r,int x)\n{\n\tint y=min(tn,ID(x));\n\tfor(int i=0;i<=y;i++) check(i,l,r,x,rt[i]);\n\tfor(int i=y;i<=tn;i++) modify(i,l,r,x,rt[i]);\n}\ninline ULL query(int l,int r)\n{\n\tULL res=0;\n\tfor(int i=0;i<=tn;i++)\n\t\tres+=query(i,l,r,rt[i]);\n\treturn res;\n}\n#undef LC\n#undef RC\n\n} // namespace SegTree2\n\nint main()\n{\n\tqin>>n>>m;\n\tfor(int i=1;i<=n;i++) qin>>a[i];\n\tSegTree2::prework();\n\tULL ans=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint opt,l,r,x;\n\t\tqin>>opt;\n\t\tif(opt==1)\n\t\t{\n\t\t\tqin>>l>>r>>x,l^=ans,r^=ans,x^=ans;\n\t\t\tif(!x) continue;\n\t\t\tSegTree1::modify(l,r,x);\n\t\t\tSegTree2::modify(l,r,x);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tqin>>l>>r,l^=ans,r^=ans,ans=0;\n\t\t\tans+=SegTree1::query(l,r);\n\t\t\tans+=SegTree2::query(l,r);\n\t\t\tqout.writeln(ans),ans&=((1<<20)-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1676599563,
        "uid": 279800,
        "name": "ExplodingKonjac",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P9069 [Ynoi Easy Round 2022] \u5815\u5929\u4f5c\u6218"
    },
    {
        "content": "\u597d\u597d\u73a9\u7684\u4e00\u4e2a\u9898\u3002\n\n\u4e0a\u6765\u8bd5\u56fe\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4fee\u6539\u64cd\u4f5c\u3002\u5982\u679c\u533a\u95f4\u7684\u6700\u5c0f\u503c\u8d85\u8fc7\u4e86 $v$\uff0c\u90a3\u76f4\u63a5\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\u5426\u5219\uff0c\u5982\u679c\u533a\u95f4\u6700\u5c0f\u503c\u5c0f\u4e8e $v$\uff0c\u5219\u5411\u4e24\u8fb9\u9012\u5f52\u5373\u53ef\uff0c\u8fd9\u6837\u7684\u9012\u5f52\u5230\u6700\u540e\u4e00\u5b9a\u80fd\u628a\u67d0\u4e2a\u5c0f\u4e8e $v$ \u7684 $a_i$ \u51cf\u53bb $v$\uff0c\u8fd9\u6837\u7684 $a_i$ \u4ee5\u540e\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4e00\u5b9a\u4f1a\u53c2\u4e0e\u3002\u8fd9\u91cc\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u5c0f trick\uff0c\u5728\u6a21 $2^{64}$ \u610f\u4e49\u4e0b\uff0c\u6211\u4eec\u7684 $a_i$ \u76f4\u63a5\u51cf\u4f1a\u53d8\u6210\u4e00\u4e2a\u5de8\u5927\u65e0\u6bd4\u7684\u6570\uff0c\u800c\u5b83\u540c\u6837\u6ee1\u8db3\u201c\u53c2\u4e0e\u4ee5\u540e\u6bcf\u6b21\u64cd\u4f5c\u201d\u7684\u6027\u8d28\u3002\u52bf\u80fd\u4e0a\uff0c\u6bcf\u4e2a $a_i$ \u81f3\u591a\u51cf\u6cd5\u6ea2\u51fa\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f\u4e00\u4e2a $\\log$ \u7684\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u5c31\u53ea\u5269\u4e0b\u6700\u5c0f\u503c\u6070\u597d\u7b49\u4e8e $v$ \u7684\u60c5\u51b5\u4e86\u3002\u6309\u7167\u5957\u8def\uff0c\u6211\u4eec\u7ee7\u7eed\u8bd5\u56fe\u7ef4\u62a4\u533a\u95f4\u4e25\u683c\u6b21\u5c0f\u503c\uff08\u4e0d\u59a8\u5047\u8bbe\u6709\uff0c\u82e5\u65e0\u5219\u76f4\u63a5\u9000\u51fa\u5373\u53ef\uff09\u3002\u5982\u679c\u4e25\u683c\u6b21\u5c0f\u503c\u8d85\u8fc7\u4e24\u500d\u7684 $v$\uff0c\u90a3\u4e48\u6211\u4eec\u64cd\u4f5c\u540e\u4e25\u683c\u6b21\u5c0f\u503c\u4f9d\u7136\u4f1a\u5927\u4e8e\u6700\u5c0f\u503c\uff0c\u76f4\u63a5\u4fee\u6539\u5373\u53ef\uff08\u6253\u4e00\u4e2a\u201c\u6700\u5c0f\u503c\u4ee5\u5916\u7684\u6570\u7edf\u4e00\u51cf\u591a\u5c11\u201d\u7684\u6807\u8bb0\uff0c\u6ce8\u610f\u5982\u6b64\u4e00\u6765\u8fd8\u9700\u8981\u7ef4\u62a4\u6700\u5c0f\u503c\u51fa\u73b0\u6b21\u6570\u6765\u7b97\u8d21\u732e\uff09\u3002\u5426\u5219\uff0c\u4e25\u683c\u6b21\u5c0f\u503c\u5728\u4e24\u500d\u7684 $v$ \u4ee5\u5185\uff0c\u6ce8\u610f\u5230\u64cd\u4f5c\u4f1a\u4f7f\u6b21\u5c0f\u503c\u81f3\u5c11\u51cf\u534a\uff0c\u7ee7\u7eed\u66b4\u529b\u9012\u5f52\u5373\u53ef\u3002\u52bf\u80fd\u4e0a\uff0c\u6bcf\u4e2a $a_i$ \u81f3\u591a\u51cf\u534a $\\log$ \u6b21\uff08\u53e6\u5916\u5176\u5b9e\u51cf\u6cd5\u6ea2\u51fa\u540e\u4e0d\u53ef\u80fd\u518d\u6b21\u51cf\u534a\uff09\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f\u4e24\u4e2a $\\log$ \u7684\u3002\n\n\u4ee3\u7801\u5f88\u597d\u5199\uff0c\u4f46\u662f\u4f5c\u8005\u6bd4\u8f83\u83dc\u6240\u4ee5\u8c03\u4e86\u534a\u5929\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\nconstexpr int N = 5e5 + 9;\nstruct {\n  ull mn, mncnt, sc, tsub, tnmn, sum;\n} tr[1 << 20];\nint n, m;\nvoid pushup(int x) {\n  int l = x << 1, r = x << 1 | 1;\n  if (tr[l].mn > tr[r].mn) swap(l, r);\n  auto& [xmn, xmncnt, xsc, _x, __x, xsm] = tr[x];\n  auto [lmn, lmncnt, lsc, _l, __l, lsm] = tr[l];\n  auto [rmn, rmncnt, rsc, _r, __r, rsm] = tr[r];\n  xsm = lsm + rsm, xmncnt = lmncnt, xmn = lmn;\n  if (lmn == rmn) {\n    if (xmncnt += rmncnt, !(xsc = min(lsc, rsc))) xsc = lsc | rsc;\n  } else if (!(xsc = min(lsc, rmn)))\n    xsc = lsc | rmn;\n}\nvoid settsub(int x, ull t, int L, int R) {\n  tr[x].mn -= t, tr[x].tsub += t;\n  tr[x].sum -= t * (R - L + 1);\n  if (ull& v = tr[x].sc) v -= t;\n}\nvoid settnmn(int x, ull t, int L, int R) {\n  tr[x].tnmn += t;\n  tr[x].sum -= t * (R - L + 1 - tr[x].mncnt);\n  if (ull& v = tr[x].sc) v -= t;\n}\nvoid setnsub(int x, ull t, ull mn, int L, int R) {\n  (tr[x].mn == mn ? settnmn : settsub)(x, t, L, R);\n}\nint pushdown(int x, int L, int R) {\n  int mid = (L + R) >> 1;\n  if (ull& t = tr[x].tsub) {\n    settsub(x << 1, t, L, mid);\n    settsub(x << 1 | 1, t, mid + 1, R);\n    t = 0;\n  }\n  if (ull& t = tr[x].tnmn) {\n    if (tr[x].mn > tr[x << 1].mn || tr[x].mn > tr[x << 1 | 1].mn) exit(1);\n    setnsub(x << 1, t, tr[x].mn, L, mid);\n    setnsub(x << 1 | 1, t, tr[x].mn, mid + 1, R);\n    t = 0;\n  }\n  return mid;\n}\null query(int x, int l, int r, int L, int R) {\n  if (l == L && r == R) return tr[x].sum;\n  int mid = pushdown(x, L, R);\n  if (r <= mid)\n    return query(x << 1, l, r, L, mid);\n  else if (l > mid)\n    return query(x << 1 | 1, l, r, mid + 1, R);\n  else\n    return query(x << 1, l, mid, L, mid) +\n           query(x << 1 | 1, mid + 1, r, mid + 1, R);\n}\nvoid update(int x, ull v, int l, int r, int L, int R) {\n  if (l == L && r == R) {\n    if (!tr[x].sc || tr[x].mn > v) {\n      if (tr[x].mn != v) settsub(x, v, L, R);\n      return;\n    } else if (tr[x].mn == v && tr[x].sc > (v << 1))\n      return settnmn(x, v, L, R);\n  }\n  int mid = pushdown(x, L, R);\n  if (r <= mid)\n    update(x << 1, v, l, r, L, mid);\n  else if (l > mid)\n    update(x << 1 | 1, v, l, r, mid + 1, R);\n  else {\n    update(x << 1, v, l, mid, L, mid);\n    update(x << 1 | 1, v, mid + 1, r, mid + 1, R);\n  }\n  pushup(x);\n}\nvoid build(int x, int L, int R) {\n  if (L == R) {\n    ull a;\n    cin >> a;\n    tr[x] = {a, 1, 0, 0, 0, a};\n    return;\n  }\n  int mid = (L + R) >> 1;\n  build(x << 1, L, mid);\n  build(x << 1 | 1, mid + 1, R);\n  pushup(x);\n}\nint main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  cin >> n >> m, build(1, 1, n);\n  ull ans = 0;\n  for (int op, l, r, x; m; --m) {\n    cin >> op >> l >> r, l ^= ans, r ^= ans;\n    if (op == 1) {\n      cin >> x, x ^= ans;\n      update(1, x, l, r, 1, n);\n    } else {\n      ans = query(1, l, r, 1, n);\n      cout << ans << '\\n';\n      ans &= 0xfffff;\n    }\n  }\n  return cout << flush, 0;\n}\n```",
        "postTime": 1681894406,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u52bf\u80fd\u7ebf\u6bb5\u6811\uff01"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u9898\u76ee\u3002\n\n### \u601d\u8def\n\n\u53d1\u73b0\u5bf9\u4e8e\u8d1f\u6570\u65e0\u9700\u7ef4\u62a4\uff0c\u8003\u8651\u8fdb\u884c\u5206\u5757\u3002\n\n\u4f7f\u7528\u500d\u589e\u5206\u5757\u3002\n\n\u5c06\u6bcf\u4e00\u6bb5\u4f4d\u4e8e $[len^{i-1}+1,len^i]$ \u4e2d\u7684\u6570\u4f7f\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5728\u6bcf\u4e2a\u5757\u5185\u7ef4\u62a4\u4e00\u9897\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u4ee5\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u4e3a\u4e0b\u6807\uff0c\u5982\u679c\u5728\u51cf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u503c\u57df\u4e0d\u5728\u8fd9\u4e00\u5757\uff0c\u5219\u66b4\u529b\u5220\u9664\u4fee\u6539\u3002\n\n\u5982\u4f55\u8fdb\u884c\u4fee\u6539\u3002\n\n- \u82e5\u6b64\u65f6\u8282\u70b9\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8e $x$\uff0c\u5219\u53ef\u76f4\u63a5\u9000\u51fa\u3002\n\n- \u82e5\u6b64\u65f6\u8282\u70b9\u6700\u5c0f\u503c\u5927\u4e8e $x$\uff0c\u540c\u6837\u53ef\u4ee5\u76f4\u63a5\u6253\u4e0a\u6807\u8bb0\u7136\u540e\u9000\u51fa\u3002\n\n- \u82e5\u90fd\u6ca1\u6709\uff0c\u5219\u7ee7\u7eed\u9012\u5f52\u4e0d\u65ad\u5904\u7406\u3002\n\n\u67e5\u8be2\u5219\u53ef\u4ee5\u76f4\u63a5\u50cf\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\u67e5\u8be2\u3002\n\n\u53ef\u4ee5\u8bf4\u662f\u677f\u5b50\u9898\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u4e0b `unsigned long long` \u7684\u4f7f\u7528\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ull unsigned ll\n#define mid (l + r) / 2\n#define fro(i, x, y) for (int i = (x); i <= (y);i++)\n#define pre(i, x, y) for (int i = (x); i >= (y);i--)\n\nconst int N = 500010;\nconst int len = 20;\nconst int blo = 7;\n\nint n, m, tot, top, cnt, a[N], d[N * 32], rt[N], ls[N * 32], rs[N * 32];\nll mni[N * 32], mna[N * 32], tag[N * 32], siz[N * 32], bl[N];\null val[N * 32], lastans;\npair<ll, ll> stk[N];\n\ninline int new_node() { return (cnt ? d[cnt--] : ++tot); }\ninline void init() { bl[0] = 1; fro(i, 1, blo) bl[i] = bl[i - 1] * len; bl[0] = 0; }\ninline void pu(int p, ll x) { val[p] += 1ull * x * siz[p], tag[p] += x, mni[p] += x, mna[p] += x; }\ninline void add(int x, int y) { val[x] += val[y], mni[x] = min(mni[x], mni[y]), siz[x] += siz[y], mna[x] = max(mna[x], mna[y]); }\ninline void pup(int p) { val[p] = siz[p] = 0, mni[p] = 1e18, mna[p] = -1e18; if(ls[p]) add(p, ls[p]); if(rs[p]) add(p, rs[p]); }\ninline void pdo(int p) { if(ls[p]) pu(ls[p], tag[p]); if(rs[p]) pu(rs[p], tag[p]); tag[p] = 0; }\ninline void ins(int &p, int l, int r, int x, int k)\n{\n    if (!p) p = new_node(); pdo(p);\n    if (l == r) return val[p] = k, mni[p] = mna[p] = k, siz[p] = 1, void();\n    if (mid >= x) ins(ls[p], l, mid, x, k);\n    else ins(rs[p], mid + 1, r, x, k);\n    pup(p);\n}\ninline void del(int &p, int l, int r, int x)\n{\n    if (l == r) return d[++cnt] = p, p = 0, void(); pdo(p);\n    if (mid >= x) del(ls[p], l, mid, x);\n    else del(rs[p], mid + 1, r, x);\n    pup(p); if (siz[p] == 0) d[++cnt] = p, p = 0;\n}\ninline void change(int p, int l, int r, int L, int R, int x, int opt = 0)\n{\n    if (!p || (mna[p] <= x && !opt)) return;\n    if (L <= l && r <= R && (opt || mni[p] > x))\n        return pu(p, -x); pdo(p);\n    if (l == r) return;\n    if (mid >= L) change(ls[p], l, mid, L, R, x, opt);\n    if (mid <  R) change(rs[p], mid + 1, r, L, R, x, opt);\n    pup(p);\n}\ninline ull ask(int p, int l, int r, int L, int R)\n{\n    if (!p) return 0;\n    if (L <= l && r <= R)\n        return val[p];\n    ull ans = 0;\n    pdo(p);\n    if (mid >= L) ans += ask(ls[p], l, mid, L, R);\n    if (mid <  R) ans += ask(rs[p], mid + 1, r, L, R);\n    return ans;\n}\ninline void dfs(int p, int l, int r, int x, int L = 1, int R = n)\n{\n    if (!p) return; pdo(p);\n    if (l == r) return stk[++top] = {l, mni[p]}, void();\n    if (mid >= L && mni[ls[p]] < x) dfs(ls[p], l, mid, x, L, R);\n    if (mid <  R && mni[rs[p]] < x) dfs(rs[p], mid + 1, r, x, L, R);\n}\ninline int calc(int x)\n{\n    pre(k, blo, 1) if (bl[k - 1] + 1 <= x && x <= bl[k]) return k;\n    return blo + 1;\n}\ninline void del(int j, ll v)\n{\n    while(top)\n    {\n        ll x = stk[top].first, y = stk[top].second; y -= v, del(rt[j], 1, n, x), top--;\n        if (y < 0) ins(rt[blo + 1], 1, n, x, y); else ins(rt[calc(y)], 1, n, x, y);\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false), cin.tie(0);\n    cin >> n >> m, init(); int inv = (1 << 20);\n    fro(i, 1, n)\n    {\n        cin >> a[i]; if(a[i] == 0) { ins(rt[blo + 1], 1, n, i, a[i]); continue; }\n        fro(j, 1, blo) if (bl[j - 1] + 1 <= a[i] && a[i] <= bl[j]) ins(rt[j], 1, n, i, a[i]);\n    }\n    int op, l, r, x;\n    fro(i, 1, m)\n    {\n        cin >> op;\n        if (op == 1)\n        {\n            cin >> l >> r >> x;\n            l ^= lastans, r ^= lastans, x ^= lastans;\n            if (l >= r) swap(l, r);\n            if (x == 0) continue;\n            int y = calc(x);\n            change(rt[blo + 1], 1, n, l, r, x, 1);\n            fro(j, 1, y) dfs(rt[j], 1, n, x, l, r), del(j, x);\n            fro(j, y, blo) change(rt[j], 1, n, l, r, x), dfs(rt[j], 1, n, bl[j - 1] + 1), del(j, 0);;\n        }\n        else\n        {\n            cin >> l >> r; ull ans = 0;\n            l ^= lastans, r ^= lastans;\n            if (l >= r) swap(l, r);\n            fro(j, 1, blo + 1) ans += ask(rt[j], 1, n, l, r);\n            cout << (lastans = ans) << \"\\n\";\n            lastans &= ((1 << 20) - 1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1678524158,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P9069 [Ynoi Easy Round 2022] \u5815\u5929\u4f5c\u6218 \u9898\u89e3"
    }
]