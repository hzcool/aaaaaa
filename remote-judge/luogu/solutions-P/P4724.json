[
    {
        "content": "~~\u5efa\u8bae\u8fd8\u662f\u53ea\u5199\u4e2a\u589e\u91cf\u6cd5\u591f\u4e86~~\n\n## 0.\u57fa\u7840\u4ecb\u7ecd\n\n### \u5411\u91cf\u52a0\u51cf\n\n\u540c\u4e8c\u7ef4\u3002\n\n```cpp\nvect operator - (vect v){ return vect(x-v.x, y-v.y, z-v.z); }\n```\n\n### \u5411\u91cf\u70b9\u79ef\uff08\u6570\u503c\u79ef\uff09\n\n\u540c\u4e8c\u7ef4\u3002\n\n\u610f\u4e49\u4e5f\u548c\u4e8c\u7ef4\u4e00\u6837\u3002\n\n```cpp\ndouble operator * (vect v){ return x*v.x+y*v.y+z*v.z; }\n```\n\n### \u5411\u91cf\u53c9\u79ef\n\n```cpp\nvect operator / (vect v){ return vect(y*v.z-z*v.y, z*v.x-x*v.z, x*v.y-y*v.x); }\n```\n\n\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u7a7a\u95f4\u5411\u91cf\n\n\u5b83\u7684**\u9ed8\u8ba4**\u65b9\u5411\u548c\u4e24\u4e2a\u8f93\u5165\u5411\u91cf\u6ee1\u8db3\u53f3\u624b\u5b9a\u7406\uff08\u5f62\u5982\u4e09\u7ef4\u5750\u6807\u8f74\uff1a$x$ \u9006\u65f6\u9488\u5230 $y, z$\uff0c$y$ \u9006\u65f6\u9488\u5230 $z$\u3002\u8fd4\u56de\u7684\u5411\u91cf\u53ef\u4ee5\u770b\u505a $z$ \u8f74\uff09\uff0c\n\n\u957f\u5ea6\u662f\u8f93\u5165\u5411\u91cf\u6784\u6210\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u9762\u79ef\uff0c\n\n**\u6b63\u8d1f**\u7531\u7b2c\u4e00\u4e2a\u5411\u91cf\u5230\u7b2c\u4e8c\u4e2a\u5411\u91cf\u7684\u9006\u65f6\u9488\u5939\u89d2\u51b3\u5b9a\uff08\u540c\u4e8c\u7ef4\uff09\uff0c\n\n\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\n\n&nbsp;\n\n3b1b \u4e2d\u6709\u5bf9\u5176\u542b\u4e49\u7684\u4e00\u79cd\u89e3\u91ca\uff1a\n\u5c06\u8f93\u5165\u5411\u91cf\u7684\u8d77\u70b9\u7f6e\u4e8e\u539f\u70b9\uff0c\u5b9a\u4e49\u8fd0\u7b97 $*$ \u8868\u793a\u6c42\u4e00\u4e2a\u70b9\u548c\u8f93\u5165\u5411\u91cf\u6784\u6210\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u6784\u6210\u7684\u5e73\u884c\u516d\u9762\u4f53\u7684\u6709\u5411\u4f53\u79ef  $^1$\uff0c\n\n\u90a3\u4e48\u505a\u8fd9\u4e2a\u8fd0\u7b97 $*$ \u5c31\u76f8\u5f53\u4e8e\u548c\u8f93\u5165\u5411\u91cf\u7684**\u53c9\u79ef**\uff08\u53c9\u79ef\u65b9\u5411\u4e3a\u7b2c\u4e00\u4e2a\u53c9\u7b2c\u4e8c\u4e2a\uff09\u505a\u70b9\u79ef\u3002\n\n[1] \u6709\u5411\u4f53\u79ef\uff1a\u8bbe\u8f93\u5165\u5411\u91cf $u, v$\uff0c\u539f\u70b9 $O$\uff0c\u5219\u6709\u5e73\u9762\uff08\u5177\u4f53\u5b58\u50a8\u89c4\u5219\u89c1\u4e0b\uff09 $(O, O+u, O+v)$\u3002\u82e5\u70b9\u5728\u5e73\u9762\u4e0a\u65b9\u5219\u4f53\u79ef\u4e3a\u6b63\uff0c\u5426\u5219\u4e3a\u8d1f\u3002\n\n### \u5411\u91cf\u6a21\u957f\n\n```cpp\ndouble m(){ return sqrt(x*x+y*y+z*z); }\n```\n\n\u6295\u5f71\u5230\u5750\u6807\u9762\u5316\u7b80\u4e0b\u5f0f\u5b50\u5c31\u53ef\u4ee5\u3002\n\n### \u9762\u7684\u5b58\u50a8\n\n```cpp\nstruct plane{\n\tvect v[3];\n\tplane(){}\n\tplane(vect uu, vect vv, vect ww){ v[0] =uu, v[1] =vv, v[2] =ww; }\n\tvect normal(){ return (v[1]-v[0])/(v[2]-v[0]);}\n};\n```\n\n\u5b58\u50a8\u9762\u4e0a\u7684\u4e09\u4e2a\u70b9\u3002\n\n\u82e5\u5b9a\u4e49\u9762\u7684 \"\u4e0a\u65b9\" \u548c \"\u4e0b\u65b9\"\uff0c\u5219\u8fd9\u4e09\u4e2a\u70b9\u662f\u6309**\u4ece\u4e0a\u65b9\u770b\u5230**\u7684\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\u7684\n\n\u5176\u6cd5\u5411\u91cf\uff08`vect normal()`\uff09\u5373\u4e3a\u4ece\u4e00\u4e2a\u70b9\u987a\u6b21\u8fde\u5411\u540e\u4e24\u4e2a\u70b9\u7684\u5411\u91cf\u7684\u53c9\u79ef\uff08\u987a\u6b21\uff09\u3002\u8fd9\u4e2a\u5411\u91cf\u7ad6\u76f4\u6307\u5411\u9762\u7684**\u4e0a\u65b9**\u3002\n\n### \u5224\u65ad\u70b9\u4e0e\u9762\u5173\u7cfb\n\n```cpp\ninline bool isabove(vect v, plane p){ return gtr((v-p.u())*p.normal()/*\u8fd9\u662f\u6295\u5f71\u957f\u5ea6\u4e58\u6cd5\u5411\u91cf\u6a21\u957f\uff0c\u53ea\u662f\u56e0\u4e3a\u4e0d\u9700\u8981\u77e5\u9053\u6570\u503c\u53ea\u9700\u8981\u7b26\u53f7\uff0c\u6240\u4ee5\u6ca1\u505a\u5904\u7406*/, 0); }\n```\n\n\u53ea\u9700\u5224\u65ad\u6cd5\u5411\u91cf\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u8fd9\u4e2a\u5411\u91cf\u5728\u6cd5\u5411\u91cf\u4e0a\u7684\u6295\u5f71\u7b26\u53f7\u5373\u53ef\u3002\n\n### \u70b9\u4e0e\u9762\u7684\u8ddd\u79bb\n\n\uff08\u8fd9\u4e2a\u5728 quickhull \u4f1a\u7528\u5230\uff09\n\n```cpp\n/*\u5e26\u65b9\u5411\u8ddd\u79bb*/\ninline double dist(vect v, plane p){ return (v-p.u())*p.normal()/p.normal().m(); }\n```\n\n\u6cd5\u5411\u91cf\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u8fd9\u4e2a\u5411\u91cf\u5728\u6cd5\u5411\u91cf\u4e0a\u7684\u6295\u5f71\u957f\u3002\n\n### \u591a\u9762\u4f53\u7684\u50a8\u5b58\n\n\u901a\u5e38\u6211\u4eec\u901a\u8fc7\u50a8\u5b58**\u9762**\u6765\u50a8\u5b58\u591a\u9762\u4f53\u3002\n\n\u5bf9\u4e8e\u591a\u9762\u4f53\u6bcf\u4e2a\u9762\u7684\u9762\u79ef\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53c9\u79ef\u7684\u542b\u4e49\u8f7b\u6613\u7b97\u51fa\uff1a\n\n```cpp\nplane facet;\ndouble S =facet.normal().m()/2;/*\u5176\u9762\u79ef*/\n```\n\n---\n\n\uff08\u8fd9\u4e00\u8282\u4ece\u8fd9\u5f80\u4e0b\uff0c\u4ee5\u53ca\u4e0b\u4e00\u8282 \"\u5730\u5e73\u7ebf\" \u90fd\u662f\u548c quickhull \u6709\u5173\u7684\u4e86\uff0c\u4e0d\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u8df3\u8fc7\u3002\u672c\u6587\u4ecb\u7ecd\u7684\u524d\u4e24\u4e2a\u7b97\u6cd5\u53ea\u9700\u7528\u6570\u7ec4\u5355\u7eaf\u5730\u5b58\u4e0b\u5e73\u9762\u5373\u53ef\uff09\n\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5b58\u50a8\u6bcf\u4e2a\u9762\u7684**\u90bb\u63a5\u9762\u4fe1\u606f**\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u9876\u70b9**\u5927\u4e8e\u4e09\u4e2a**\u7684\u9762\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u4e09\u89d2\u5f62\u7684\u9762\uff1b\u89c6\u5177\u4f53\u60c5\u51b5\u53ef\u80fd\u5212\u5206\u540e\u7684\u9762\u7684\u9876\u70b9**\u4e0d\u5c5e\u4e8e\u539f\u6765\u9762\u7684\u9876\u70b9**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u4fdd\u5b58\u9762\uff1a\n\n```cpp\nstruct facet{\n\tint n[3];/*neighbor\uff0c\u548c\u70b9\u5bf9\u5e94 (u->v, v->w, w->u)*/\n\tplane p;\n};\n```\n\n\u5bf9\u4e8e\u4e00\u4e2a\u591a\u9762\u4f53\uff0c\u6211\u4eec\u4fdd\u5b58\u5176\u4e2d\u4e00\u4e2a\u9762\u4f5c\u4e3a**\u7d22\u5f15**\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u90bb\u63a5\u4fe1\u606f\u8bfb\u53d6\u591a\u9762\u4f53\u7684\u8868\u9762\u3002\n\n### \u5730\u5e73\u7ebf\n\n\uff08\u8c8c\u4f3c\u4e00\u822c\u90fd\u53eb \"Horizon\"...\u76f4\u8bd1\u8fc7\u6765\u5c31\u662f\u5730\u5e73\u7ebf...\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u591a\u9762\u4f53\uff0c\u4ece\u8be5\u70b9\u80fd \"\u770b\u5230\" \u7684\u6240\u6709\u9762\u4e00\u5b9a\u662f\u4e00\u7247\u8fde\u7eed\u7684\u9762\uff0c\u800c**\u8fd9\u7247\u9762\u7684\u8fb9\u7f18**\u5c31\u662f\u8fd9\u4e2a\u70b9\u5728\u8fd9\u4e2a\u591a\u9762\u4f53\u4e0a\u7684\u5730\u5e73\u7ebf\u3002\n\n![\u5730\u5e73\u7ebf](https://cdn.luogu.com.cn/upload/image_hosting/t418fykz.png)\n\n\uff08\u53ef\u60f3\u8c61\u7ad9\u5728\u9ad8\u5904\u671b\u5411\u8fdc\u5904\u7684\u573a\u666f...\uff09\n\n\u82e5\u8981\u6c42\u5f97\u5730\u5e73\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u67d0\u4e2a\u8be5\u70b9\u80fd\u770b\u5230\u7684\u9762\uff08\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u8fd9\u4e2a\u9762\u7684**\u5e73\u9762**\u5728\u8be5\u70b9\u4e0b\u9762\uff09\u5f00\u59cb dfs\uff08\u8fd9\u4e2a\u9762\u4e5f\u53ef\u4ee5\u4ece\u7d22\u5f15\u9762\u5f00\u59cb dfs \u6c42\u51fa\uff09\uff0c\u5e76\u5728\u56fe\u4e2d\u6807\u8bb0\u6240\u6709**\u8fb9\u7f18\u9762**\uff1b\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7f18\u9762\uff0c\u6211\u4eec\u5c06\u6bcf\u6761**\u8fb9\u7f18\u8fb9**\u7684\u4e24\u4e2a\u9876\u70b9**\u5efa\u56fe**\u8fde\u8fb9\u3002\n\n\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u6700\u540e\u6c42\u51fa\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a**\u73af**\u3002\n\n\u540c\u65f6\u4e3a\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 dfs \u987a\u4fbf\u8fd4\u56de\u4e00\u4e2a\u73af\u4e0a\u7684\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7d22\u5f15\u3002\n\n```cpp\nstruct vect{\n\tdouble x, y, z;\n\tint id;\n};\n\nstruct plane{\n\tvect vec[3];\n};\n\nstruct facet{\n\tint n[3];\n\tint id, vistime /*\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65f6\u95f4\u6233*/;\n\tplane p;\n};\n\nstruct edge{\n\tint netid /*\u8fde\u5411\u70b9\u7684 id*/, facetid /*\u5f53\u524d\u8fd9\u6761\u8fb9\u7f18\u8fb9\u90bb\u63a5\u7684\u4e0d\u53ef\u770b\u89c1\u7684\u9762\u7684 id*/;\n};\n\nbool isabove(vect v, plane p){ /*return (\u70b9\u662f\u5728\u9762\u4e0a\u65b9 );*/ }\n\nvector<facet> FAC;/*\u5b58\u50a8\u6240\u6709\u9762*/\n\nint TIME =0;/*\u5168\u5c40\u65f6\u95f4*/\n\n/*e1 e2 \u5b58\u50a8\u4e00\u4e2a\u70b9\u8fde\u7684\u4e24\u6761\u8fb9\uff0cresfdel \u5b58\u50a8\u6240\u6709\u770b\u5230\u7684\u9762\uff0cvistime \u662f\u6bcf\u4e2a\u70b9\u8bbf\u95ee\u7684\u65f6\u95f4\u6233*/\n/*\u8c03\u7528\u524d\u9700\u8981\u66f4\u65b0\u65f6\u95f4 (++TIME)\uff0c\u6e05\u7a7a resfdel(\u81f3\u4e8e e1 e2 \u4e0d\u6e05\u4e5f\u6ca1\u5173\u7cfb)*/\n/*\u6700\u540e\u4f1a\u8fd4\u56de\u8fb9\u754c\u7ebf\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u5e76\u4fdd\u5b58\u5730\u5e73\u7ebf\u4fe1\u606f\u548c\u6240\u6709\u80fd\u770b\u5230\u7684\u9762\u5230\u6307\u5b9a\u6570\u7ec4*/\nint getHorizon(int f, vect &p, int vistime[], edge e1[], edge e2[], vector<int> &resfdel){\n\tif(!isabove(p, FAC[f].p)) return 0;/*\u5982\u679c\u8fd4\u56de 0 \u5219\u4ee3\u8868\u8fd9\u4e2a\u9762\u65e0\u6cd5\u770b\u89c1*/\n\tif(FAC[f].vistime == TIME) return -1;/*\u5982\u679c\u8fd4\u56de -1 \u5219\u4ee3\u8868\u8fd9\u4e2a\u9762\u5df2\u7ecf\u89c1\u8fc7*/\n\tFAC[f].vistime =TIME;/*\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\u6233*/\n\tFAC[f].isdel =1;\n\tresfdel.push_back(FAC[f].id);\n\tint ret =-2;/*\u5982\u679c\u8fd4\u56de -2 \u5219\u4ee3\u8868\u8fd9\u4e2a\u9762\u7684 dfs \u6811\u65e0\u6cd5\u63a5\u89e6\u5230\u5730\u5e73\u7ebf*/\n\t/*--(\u601d\u8003\u4e0b dfs \u4e00\u4e2a\u88ab\u5939\u5728\u4e2d\u5fc3\u7684\u9762\uff0c\u5468\u56f4\u4e00\u5708\u7684\u9762\u90fd\u5df2\u641c\u7d22\u8fc7 )*/\n\tfor(int i =0; i < 3; ++i){\n\t\tint res =getHorizon(FAC[f].n[i], p, vistime, e1, e2, resfdel);\n\t\tif(res == 0){\n\t\t\tint pt[2];\n\t\t\tpt[0] =FAC[f].p.vec[i].id, pt[1] =FAC[f].p.vec[(i+1)%3].id;\n\t\t\tfor(int j =0; j < 2; ++j){\n\t\t\t\t/*\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u8fd9\u6761\u8fb9\u662f\u6cbf\u7f3a\u53e3\u9006\u65f6\u9488\u8fd8\u662f\u987a\u65f6\u9488\u7684*/\n\t\t\t\t/*\u6839\u636e\u88ab\u8bbf\u95ee\u7684\u6b21\u6570\u5224\u65ad\u8fd9\u662f\u8be5\u70b9\u8fde\u7684\u7b2c\u4e00\u6761\u8fd8\u662f\u7b2c\u4e8c\u6761\u8fb9*/\n\t\t\t\tif(vistime[pt[j]] != TIME){\n\t\t\t\t\tvistime[pt[j]] =TIME;\n\t\t\t\t\te1[pt[j]].netid =pt[(j+1)%2];\n\t\t\t\t\te1[pt[j]].facetid =FAC[f].n[i];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\te2[pt[j]].netid =pt[(j+1)%2];\n\t\t\t\t\te2[pt[j]].facetid =FAC[f].n[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tret =pt[0];\n\t\t}\n\t\telse if(res != -1 && res != -2) ret =res;/*\u4fdd\u5b58\u5730\u5e73\u7ebf\u4e0a\u7684\u70b9*/\n\t}\n\treturn ret;\n}\n```\n\n### \u591a\u9762\u4f53\u9762\u4e0e\u8fb9\u7684\u5173\u7cfb\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u4e00\u6761\u8fb9\u4f1a\u4e14\u4ec5\u4f1a\u88ab\u4e24\u4e2a\u9762\u4f7f\u7528\uff1b\u6309\u6211\u4eec\u50a8\u5b58\u9762\u7684\u65b9\u5f0f\uff0c\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u88ab \"\u9006\u65f6\u9488\u7528\u4e00\u6b21\"\uff0c\u518d \"\u987a\u65f6\u9488\u7528\u4e00\u6b21\"\u3002\n\n\u5c31\u50cf\u4e0b\u56fe\u4e2d\u90a3\u6837\uff1a\n\n![\u51f8\u5305\u8fb9](https://cdn.luogu.com.cn/upload/image_hosting/osuk8fe7.png)\n\n\u8fd9\u4e2a\u6027\u8d28\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec**\u901a\u8fc7\u7edf\u8ba1\u8fb9\u6765\u83b7\u5f97\u591a\u9762\u4f53\u9762\u7684\u4fe1\u606f**\u3002\n\n## 1.\u589e\u91cf\u6cd5\n\n### \u57fa\u672c\u601d\u8def\n\n\u6211\u4eec\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u70b9\u65f6\u5982\u4f55\u7ef4\u62a4\u51f8\u5305\n\n![\u589e\u91cf\u6cd51](https://cdn.luogu.com.cn/upload/image_hosting/s7032kh8.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709\u5b83\u80fd \"\u770b\u5230\" \u7684\u9762\uff0c\u6216\u8005\u8bf4**\u5728\u8be5\u70b9\u4e0b\u65b9**\u7684\u9762\uff08\u5bf9\u4e8e\u70b9**\u6070\u597d**\u5728\u9762\u4e0a\uff0c\u6211\u4eec**\u4e0d\u7b97**\u80fd \"\u770b\u5230\"\uff09\u4f1a\u88ab\u5220\u9664\u3002\n\n\u6240\u4ee5\u521d\u59cb\u5148\u6784\u9020\u4e00\u4e2a**\u4efb\u610f**\u5355\u7eaf\u5f62\uff08\u56db\u4e2a\u9876\u70b9\u7684\u591a\u9762\u4f53\uff09\u3002\u6211\u4eec\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u5c31\u904d\u5386\u6240\u6709\u9762\u627e\u51fa\u80fd\u770b\u5230\u7684\u9762\uff0c\u5c06\u5b83\u4eec\u5220\u9664\uff1b\u5e76\u5bf9 \"\u7f3a\u53e3\" \u7684\u8fb9\u7f18\u8fb9\u548c\u65b0\u70b9\u8fde\u9762\uff0c\u52a0\u5165\u51f8\u5305\u3002\n\n### \u6c42\u7f3a\u53e3\u8fb9\u7f18\uff08\u5730\u5e73\u7ebf\uff09\n\n\u5bf9\u4e8e\u8fb9\u7f18\u7684\u6807\u8bb0\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff1a\u4e00\u6761\u8fb9\u4f1a\u4e14\u4ec5\u4f1a\u88ab\u4e24\u4e2a\u9762\u4f7f\u7528\uff1b\u6309\u6211\u4eec\u50a8\u5b58\u9762\u7684\u65b9\u5f0f\uff0c\u8fd9\u6761\u8fb9\u4e00\u5b9a\u662f\u88ab \"\u9006\u65f6\u9488\u7528\u4e00\u6b21\"\uff0c\u518d \"\u987a\u65f6\u9488\u7528\u4e00\u6b21\"\u3002\uff08\u8fd9\u91cc copy \u81ea\u4e0a\u9762\uff09\n\n\u4e8e\u662f\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6807\u8bb0\uff0c\u53ea\u5bf9**\u53ea\u4f7f\u7528\u4e00\u6b21**\u7684\u8fb9\uff0c\u6309**\u4f7f\u7528\u8fc7\u7684\u65b9\u5411**\u548c\u65b0\u70b9\u8fde\u9762\u5373\u53ef\uff08\u53ef\u89c1\u4ee3\u7801\uff09\u3002\n\n### \u5bf9\u7279\u6b8a\u60c5\u51b5\u7684\u8003\u8651\n\n\u6709\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u51e0\u4e2a\u70b9\u5171\u9762\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8003\u8651\u589e\u91cf\u6cd5\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u5df2\u6709\u9762\u4e0a\u7684\u70b9\u662f\u65e0\u6548\u7684\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u4e0d\u8fc7\u7531\u4e8e\u6211\u4eec\u8fde\u7684\u9762\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u56e0\u6b64\u6700\u540e\u6c42\u5f97\u7684\u9762\u96c6\u5408\u53ef\u80fd\u4f1a\u628a\u539f\u6765\u4e00\u4e2a\u591a\u8fb9\u5f62\u9762\u5212\u5206\u6210**\u591a\u4e2a**\u4e09\u89d2\u5f62\u5c0f\u9762\uff08\u540c\u65f6\u4e5f\u4e0d\u4fdd\u8bc1\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u4e00\u5b9a\u5728**\u8fb9**\u4e0a\uff09\u3002\u6ce8\u610f\u540e\u7eed\u8fd0\u7b97\u9700\u8981\u8003\u8651**\u53bb\u91cd**\u7684\u95ee\u9898\u3002\n\n---\n\n\u53e6\u5916\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u901a\u8fc7\u6270\u52a8\u70b9\uff08\u7ed9\u70b9\u7684\u5750\u6807\u589e\u51cf\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u503c\uff09\u6765\u671f\u671b**\u6700\u591a\u4f7f\u4e09\u4e2a\u70b9\u5171\u9762**\uff0c\u6211\u4eec\u521d\u59cb\u53ef\u4ee5**\u53ea\u6784\u9020\u9762**\u3002\u8fd9\u6837\u53ef\u4ee5\u7565\u5fae\u7f29\u51cf\u4ee3\u7801\u91cf\u3002\n\n\u4e0d\u6270\u52a8\u7684\u8bdd\u8fd9\u6837\u53ef\u80fd\u51fa\u9519\u3002\u8003\u8651\u8fd9\u6837\u7684\u6570\u636e\uff1a\n\n![\u589e\u91cf\u6cd52](https://cdn.luogu.com.cn/upload/image_hosting/42c6isbg.png)\n\n\u7531\u4e8e\u6270\u52a8\u7684\u503c\u4e0d\u9700\u8981\u592a\u5927\uff0c\u56e0\u6b64\u4e00\u822c\u7684\u7cbe\u5ea6\u8981\u6c42\u7528\u8fd9\u79cd\u65b9\u6cd5\u90fd\u53ef\u4ee5\u6ee1\u8db3\u3002\n\n### CODE\n\n\u6270\u52a8\u70b9\uff08\u53ea\u6784\u9020\u9762\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n\nconst int MAXN =2500;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double eps =1e-8;\n\nstruct vect{\n\tdouble x, y, z;\n\tvect(){}\n\tvect(double xx, double yy, double zz):x(xx), y(yy), z(zz){}\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y, z-v.z); }\n\tvect operator / (vect v){ return vect(y*v.z-z*v.y, z*v.x-x*v.z, x*v.y-y*v.x); }\n\tdouble operator * (vect v){ return x*v.x+y*v.y+z*v.z; }\n\tdouble m(){ return sqrt(x*x+y*y+z*z); }\n\tdouble rd(){ return (rand()%2) ? eps : -eps; }\n\tvoid shake(){ x +=rd(), y +=rd(), z +=rd(); }\n}pts[MAXN];\n\nstruct plane{\n\tint v[3];/*\u8282\u7701\u7a7a\u95f4*/\n\tplane(){}\n\tplane(int uu, int vv, int ww){ v[0] =uu, v[1] =vv, v[2] =ww; }\n\tvect normal(){ return (pts[v[1]]-pts[v[0]])/(pts[v[2]]-pts[v[0]]); }\n};\n\ninline bool gtr(double a, double b){ return (a-b > eps); }\n\ninline bool eq(double a, double b){ return (a-b > -eps && a-b < eps); }\n\ninline double dist(vect x, vect y){ return (x-y).m(); }\n\ninline double dist(vect v, vect f1, vect f2){ return ((f2-f1)/(v-f1)).m()/(f2-f1).m(); }\n\ninline bool isabove(vect v, plane p){ return gtr((v-pts[p.v[0]])*p.normal(), 0); }\n\n/*------------------------------Convex Hulls------------------------------*/\n\nint vise[MAXN][MAXN];\nplane res[MAXN<<1], del[MAXN<<1];\n\ninline int getConvexHulls(int totp, plane facets[]){\n\tint s[3];\n\ts[0] =0, s[1] =1, s[2] =2;\n\tint totf =0;\n\tfacets[totf++] =plane(s[0], s[1], s[2]);\n\tfacets[totf++] =plane(s[0], s[2], s[1]);\n\tfor(int i =0; i < totp; ++i){\n\t\t/*\u91cd\u590d\u7684\u70b9\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e*/\n\t\tint totr =0, totd =0;\n\t\tfor(int j =0; j < totf; ++j){\n\t\t\tif(!isabove(pts[i], facets[j])) res[totr++] =facets[j];/*\u8fd9\u91cc\u4fdd\u5b58\u4e0d\u9700\u8981\u5220\u9664\u7684\u9762*/\n\t\t\telse{\n\t\t\t\tdel[totd++] =facets[j];\n\t\t\t\t/*\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u4f1a\u5faa\u73af\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u4e2a i+1 \u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65f6\u95f4\u6233*/\n\t\t\t\tfor(int k =0; k < 3; ++k)\n\t\t\t\t\tvise[facets[j].v[k]][facets[j].v[(k+1)%3]] =i+1;\n\t\t\t}\n\t\t}\n\t\tfor(int j =0; j < totd; ++j){\n\t\t\tplane f =del[j];\n\t\t\tfor(int k =0; k < 3; ++k)\n\t\t\t\tif(vise[f.v[k]][f.v[(k+1)%3]] == i+1 && vise[f.v[(k+1)%3]][f.v[k]] != i+1)\n\t\t\t\t\tres[totr++] =plane(f.v[k], f.v[(k+1)%3], i);\n\t\t}\n\t\ttotf =totr;\n\t\tfor(int j =0; j < totr; ++j) facets[j] =res[j];\n\t}\n\treturn totf;\n}\n\n/*------------------------------Main------------------------------*/\n\nplane facets[MAXN<<1];\n\nint main(){\n\tint n; scanf(\"%d\", &n);\n\tfor(int i =0; i < n; ++i) scanf(\"%lf%lf%lf\", &pts[i].x, &pts[i].y, &pts[i].z), pts[i].shake();/*\u6270\u52a8\u70b9*/\n\tint h =getConvexHulls(n, facets);\n\tdouble area =0;\n\tfor(int i =0; i < h; ++i) area +=facets[i].normal().m()/2;\n\tprintf(\"%.3lf\", area);\n}\n```\n\n&nbsp;\n\n---\n\n\u4e0d\u6270\u52a8\u70b9\uff08\u4ec5\u7ed9\u51fa\u4e0d\u540c\u90e8\u5206\uff09\uff1a\n\n```cpp\n/*------------------------------Convex Hulls------------------------------*/\n\ninline int getConvexHulls(int totp, plane facets[]){\n\tint s[4];\n\ts[0] =0, s[1] =1, s[2] =2, s[3] =0;\n\twhile(s[2] < totp-1 && eq(dist(pts[s[2]], pts[s[0]], pts[s[1]]), 0)) ++s[2];/*\u786e\u4fdd\u4e0d\u5171\u7ebf*/\n\twhile(s[3] < totp-1 && eq(dist(pts[s[3]], plane(s[0], s[1], s[2])), 0)) ++s[3];/*\u786e\u4fdd\u4e0d\u5171\u9762*/\n\tif(gtr(0, dist(pts[s[3]], plane(s[0], s[1], s[2])))) s[1] ^=s[2] ^=s[1] ^=s[2];/*\u4e3a\u4e86\u4fdd\u8bc1\u4e0b\u9762\u6784\u9020\u7684\u9762\u5411\u5916*/\n\tint totf =0;\n\tfacets[totf++] =plane(s[0], s[2], s[1]);\n\tfacets[totf++] =plane(s[0], s[1], s[3]);\n\tfacets[totf++] =plane(s[1], s[2], s[3]);\n\tfacets[totf++] =plane(s[2], s[0], s[3]);\n\t\n\t/*...*/\n\t\n\treturn totf;\n}\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tint n; scanf(\"%d\", &n);\n\tfor(int i =0; i < n; ++i) scanf(\"%lf%lf%lf\", &pts[i].x, &pts[i].y, &pts[i].z);/*\u6ca1\u6709\u6270\u52a8*/\n\t\n\t/*...*/\n\t\n\tprintf(\"%.3lf\", area);\n}\n```\n\n### \u590d\u6742\u5ea6\u53ca\u5176\u5b83\n\n\u53ef\u4ee5\u60f3\u5230\u662f $O(n^2)$ \u7684\u3002\u7531\u4e8e\u5185\u90e8\u6ca1\u6709\u592a\u591a\u5206\u652f\uff0c\u5e38\u6570\u5e94\u8be5\u4e0d\u4f1a\u592a\u5927\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u652f\u6301\u5728\u7ebf\n\n## 2.\u5377\u5305\u88f9\u6cd5\uff08gift warp\uff09\n\n### \u57fa\u672c\u601d\u8def\n\n\u6211\u4eec\u60f3\u8c61\u7528\u4e00\u5f20\u7eb8\u6162\u6162\u5730\u5305\u4f4f\u51f8\u5305\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u60f3\u8c61\u6709\u4e00\u4e2a\u5e73\u9762\u4ece\u51f8\u5305\u7684**\u4e00\u4e2a\u9762\u7684\u4e00\u6761\u8fb9**\u5f00\u59cb\u5411**\u5185**\u6298\uff0c\u5e76\u53d6**\u7b2c\u4e00\u4e2a**\u78b0\u5230\u7684\u70b9\u4f5c\u4e3a\u65b0\u7684\u9762\u7684\u9876\u70b9\uff0c\u6784\u9020\u65b0\u9762\uff1b\u8fd9\u662f\u4e00\u6b21\u6253\u5305\uff08warp\uff09\u3002\n\n\u6211\u4eec\u518d\u5c06\u65b0\u9762\u65b0\u4ea7\u751f\u7684\u4e24\u6761\u8fb9**\u5305\u542b\u5176\u9762\u7684\u4fe1\u606f**\uff08\u5177\u4f53\u6765\u8bf4\u662f\u8fb9\u7684\u65b9\u5411\uff0c\u53c2\u8003\u4e0a\u6587\u4ecb\u7ecd\u7684 \u9762\u4e0e\u8fb9\u7684\u5173\u7cfb\uff09\u653e\u5165\u961f\u5217\uff0c\u91cd\u590d\u540c\u6837\u7684\u5de5\u4f5c\uff0c\u76f4\u5230\u6ca1\u6709\u8fb9\u53ef\u4ee5\u518d\u6253\u5305\u5373\u53ef\u3002\n\n![\u5377\u5305\u88f91](https://cdn.luogu.com.cn/upload/image_hosting/f7824v61.png)\n\n### \u5982\u4f55\u627e\u5230\u5408\u9002\u7684\u70b9\n\n\u6bd4\u8f83\u76f4\u89c2\u7684\u601d\u8def\u662f\u6c42\u51fa\u6240\u6709\u70b9\u76f8\u5bf9\u5f53\u524d\u9762\u7684 \"\u5939\u89d2\"\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u96be\u4ee5\u5b9e\u73b0\u3002\n\n\u6211\u4eec\u518d\u8f6c\u5316\u5176\u542b\u4e49\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u6c42\u4e00\u4e2a\u65b0\u591a\u8fb9\u5f62\u9762\uff0c\u4f7f\u5269\u4e0b\u7684\u6240\u6709\u70b9\u90fd\u5728\u65b0\u9762**\u4e0b\u65b9**\uff08\u65b0\u9762\u4e0a\u65b9\u671d\u591a\u9762\u4f53\u5916\u4fa7\uff09\u3002\n\n```cpp\n/*\u5355\u6b21\u6253\u5305*/\n/*\u5927\u90e8\u5206\u53d8\u91cf\u540d\u5b9e\u4f8b\u540c\u4e0a\u6587*/\n/*ne \u662f\u6307\u5f53\u524d\u8fb9\uff0c\u8fb9\u7684\u65b9\u5411\u4fdd\u5b58\u4e86\u539f\u6765\u9762\u7684\u4fe1\u606f*/\npair<int, int> ne;/*\u5b58\u50a8\u4e24\u4e2a\u9876\u70b9\u7684 id*/\nint p =-1;\nfor(int i =0; i < totp; ++i){\n\tif(i == ne.first || i == ne.second) continue;/*\u907f\u514d\u4f5c\u4e3a p \u7684\u521d\u59cb\u503c (p == -1)*/\n\tif(p == -1 || isabove(pts[i], plane(ne.first, ne.second, p)))\n\t\tp =i;\n}\n```\n### \u6784\u5efa\u521d\u59cb\u8fb9\n\n\u5377\u5305\u88f9\u6cd5\u4e00\u5f00\u59cb\u9700\u8981\u4e00\u4e2a\u5c5e\u4e8e\u6700\u7ec8\u51f8\u5305\u7684\u8fb9\u4f5c\u4e3a\u7b97\u6cd5\u8d77\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u5c06\u51f8\u5305 \"**\u62cd\u5e73**\" \u5230\u4e00\u4e2a\u5e73\u9762\u4e0a\uff0c\u5176\u6620\u5c04\u5728\u5e73\u9762\u4e0a\u7684\u70b9\u96c6\u7684\u51f8\u5305\u7684\u8fb9\u4e00\u5b9a\u4e5f\u662f\u539f\u51f8\u5305\u7684\u8fb9\u3002\n\n![\u521d\u59cb\u8fb9](https://cdn.luogu.com.cn/upload/image_hosting/mj04avg6.png)\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u53d6\u67d0\u4e2a\u5750\u6807\u6700\u5927\u7684\u70b9\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u70b9\uff08\u5b83\u4e00\u5b9a\u662f\u51f8\u5305\u9876\u70b9\uff09\uff0c\u518d\u5c06\u6240\u6709\u70b9\u62cd\u5e73\u5230\u67d0\u4e2a\u9762\u4e0a\uff08\u4f8b\u5982\u5750\u6807\u9762\uff09\u6309\u4e8c\u7ef4\u5377\u5305\u88f9\u6cd5\u6c42\u4e00\u6761\u76f8\u90bb\u7684\u8fb9\u5373\u53ef\u3002\n\n```cpp\n/*\u5c06 z \u62cd\u5e73\u7684\u5411\u91cf\u53c9\u79ef*/\ndouble mul2(vect u, vect v){ return u.x*v.y-u.y*v.x; }\n\n/*\u5c06 z \u62cd\u5e73*/\ninline bool onright(vect v, vect f1, vect f2){ return gtr(mul2(v-f1, f2-f1), 0); }\n\n{/*\u6c42\u521d\u59cb\u8fb9*/\n\tint s[2];\n\ts[0] =0, s[1] =-1;\n\tfor(int i =1; i < totp; ++i)\n\t\tif(gtr(pts[i].x, pts[s[0]].x))/*\u53d6 x \u5750\u6807\u6700\u5927\u7684\u70b9*/\n\t\t\ts[0] =i;\n\tfor(int i =0; i < totp; ++i){\n\t\tif(i == s[0]) continue;\n\t\tif(s[1] == -1 || onright(pts[i], pts[s[0]], pts[s[1]])/*\u70b9\u662f\u5426\u5728\u76f4\u7ebf (\u62cd\u5e73 )\u53f3\u4fa7*/)\n\t\t\ts[1] =i;\n\t}\n}\n```\n\n### \u5377\u5305\u88f9\u7684\u5171\u9762\u96be\u9898\n\n\u6211\u4eec\u540c\u6837\u4e5f\u8003\u8651\u591a\u4e2a\u70b9\u5171\u9762\u7684\u7279\u6b8a\u60c5\u51b5\u3002\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4e00\u79cd\u6bd4\u8f83 \"\u53cb\u597d\" \u7684\u5171\u9762\u60c5\u51b5\uff1a\n\n![\u5171\u9762](https://cdn.luogu.com.cn/upload/image_hosting/8bd32cpb.png)\n\n\u53ef\u4ee5\u60f3\u5230\u6211\u4eec\u53ea\u9700\u53d6\u548c\u5f53\u524d\u8fb9\u6240\u505a\u4e09\u89d2\u5f62\u9762\u79ef\u6700\u5927\u7684\u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u63a5\u4e0b\u6765\u518d\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![\u5171\u9762F](https://cdn.luogu.com.cn/upload/image_hosting/bfscp3e0.png)\n\n\u867d\u7136\u6211\u4eec\u5bf9\u6c42\u5f97\u9762\u8981\u6c42\u5e76\u4e0d\u4e25\u683c\uff0c\u4f46\u8fd9\u79cd\u91cd\u53e0\u7684\u9762\u4e00\u5b9a\u662f**\u4e0d\u5408\u6cd5**\u7684\u3002\n\n&nbsp;\n\n\u6216\u8bb8\u53ef\u4ee5\u60f3\u5230\u5c06\u8fd9\u4e9b\u70b9\u6620\u5c04\u5230\u5b83\u4eec\u7684\u5e73\u9762\u4e0a\u5e76\u6c42\u4e00\u6b21\u4e8c\u7ef4\u51f8\u5305\uff0c\u518d**\u4e00\u6b21\u6027**\u505a\u5b83\u4eec\u9762\u3002\u7531\u4e8e\u6bcf\u4e2a\u70b9\u81f3\u591a\u53ea\u4f1a\u88ab\u5e26\u5165\u505a**\u4e00\u6b21**\u4e8c\u7ef4\u51f8\u5305\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u7684\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u4f46\u5176\u4ee3\u7801\u590d\u6742\u5ea6\u96be\u4ee5\u60f3\u8c61...\n\n\u76f8\u5bf9\u800c\u8a00\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u5bf9\u70b9\u6270\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5**\u4e0d\u8003\u8651\u5171\u9762\u7684\u95ee\u9898**\u3002\n\n\uff08\u5982\u679c\u6709\u6bd4\u6620\u5c04\u6c42\u4e8c\u7ef4\u51f8\u5305\u66f4\u7b80\u6d01\u7684\u65b9\u6cd5\u8bf7\u52a1\u5fc5\u8054\u7cfb\u6211 QAQ\uff09\n\n### CODE\n\n\uff08\u4ec5\u542b\u6709\u6270\u52a8\u5b9e\u73b0\u7684\u4ee3\u7801\uff09\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u4e86\u591a\u6b21\u6270\u52a8\u3002\n\n\u4e3b\u8981\u539f\u56e0\u662f\u589e\u91cf\u6cd5**\u53ea\u6709\u5728\u4e00\u5f00\u59cb**\u6709\u5171\u9762\u7684\u5371\u9669\uff08\u53ea\u7528\u4e00\u4e2a\u9762\u505a\u521d\u59cb\u6570\u636e\uff09\uff0c\u4f46\u5377\u5305\u88f9\u6cd5\u5728**\u6bcf\u4e00\u6b21\u5faa\u73af**\u4e2d\u90fd\u662f\u8981\u6c42\u4e0d\u80fd\u8d85\u8fc7\u4e09\u4e2a\u70b9\u5171\u9762\u7684\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <algorithm>\nusing std::pair;\ntypedef pair<int, int> pad;\n\nconst int MAXN =2500;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double eps =1e-9;\n\nstruct vect{\n\tdouble x, y, z;\n\tvect(){}\n\tvect(double xx, double yy, double zz):x(xx), y(yy), z(zz){}\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y, z-v.z); }\n\tvect operator / (vect v){ return vect(y*v.z-z*v.y, z*v.x-x*v.z, x*v.y-y*v.x); }\n\tdouble operator * (vect v){ return x*v.x+y*v.y+z*v.z; }\n\tdouble m(){ return sqrt(x*x+y*y+z*z); }\n}pts[MAXN];\n\nstruct plane{\n\tint v[3];\n\tplane(){}\n\tplane(int uu, int vv, int ww){ v[0] =uu, v[1] =vv, v[2] =ww; }\n\tvect normal(){ return (pts[v[1]]-pts[v[0]])/(pts[v[2]]-pts[v[0]]); }\n};\n\ninline bool gtr(double a, double b){ return (a-b > eps); }\n\ninline double dist(vect x, vect y){ return (x-y).m(); }\n\ninline bool isabove(vect v, plane p){ return gtr((v-pts[p.v[0]])*p.normal(), 0); }\n\ndouble mul2(vect u, vect v){ return u.x*v.y-u.y*v.x; }\n\n/*\u5c06 z \u62cd\u5e73*/\ninline bool onright(vect v, vect f1, vect f2){ return gtr(mul2(v-f1, f2-f1), 0); }\n\n/*------------------------------Convex Hulls------------------------------*/\n\nbool vise[MAXN][MAXN];\npad q[MAXN<<1]; int head, tail;\n\ninline int getConvexHulls(int totp, plane facets[]){\n\tint s[2];\n\ts[0] =0, s[1] =-1;\n\tfor(int i =1; i < totp; ++i)\n\t\tif(gtr(pts[i].x, pts[s[0]].x))\n\t\t\ts[0] =i;\n\tfor(int i =0; i < totp; ++i){\n\t\tif(i == s[0]) continue;\n\t\tif(s[1] == -1 || onright(pts[i], pts[s[0]], pts[s[1]]))\n\t\t\ts[1] =i;\n\t}\n\t\n\tint totf =0;\n\tq[tail++] =pad(s[0], s[1]);\n\tq[tail++] =pad(s[1], s[0]);\n\twhile(tail-head){\n\t\tpad ne =q[head++];\n\t\tif(vise[ne.first][ne.second]) continue;\n\t\tvise[ne.first][ne.second] =1;\n\t\tint p =-1;\n\t\tplane nf;\n\t\tfor(int i =0; i < totp; ++i){\n\t\t\t/*\u907f\u514d\u5f53\u524d\u8fb9\u9876\u70b9\u4f5c\u4e3a p \u7684\u521d\u59cb\u503c (p == -1)\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u9762\u7684\u4e09\u70b9\u5171\u7ebf*/\n\t\t\tif(i == ne.first || i == ne.second) continue;\n\t\t\tif(p == -1 || isabove(pts[i], nf))\n\t\t\t\tp =i, nf =plane(ne.first, ne.second, p);\n\t\t}\n\t\tfacets[totf++] =nf;\n\t\tvise[ne.second][p] =vise[p][ne.first] =1;\n\t\tq[tail++] =pad(p, ne.second); q[tail++] =pad(ne.first, p);\n\t}\n\treturn totf;\n}\n\n/*------------------------------Main------------------------------*/\n\nplane facets[MAXN<<1];\n\ndouble reps() {return (rand()/(double)RAND_MAX-0.5)*eps;}\n\nint main(){\n\tint n; scanf(\"%d\", &n);\n\tfor(int i =0; i < n; ++i) scanf(\"%lf%lf%lf\", &pts[i].x, &pts[i].y, &pts[i].z);\n\t/*\u5177\u4f53\u6270\u52a8\u6b21\u6570\u53ef\u4ee5\u53c2\u8003 :\u6570\u636e\u89c4\u6a21\u6bcf\u589e\u5927 10 \u7684\u6b21\u65b9\u6270\u52a8\u4e00\u6b21*/\n\tfor(int k =0; k < 3; ++k) for(int i =0; i < n; ++i) pts[i].x +=reps(), pts[i].y +=reps(), pts[i].z +=reps();\n\tint h =getConvexHulls(n, facets);\n\tdouble area =0;\n\tfor(int i =0; i < h; ++i) area +=facets[i].normal().m()/2;\n\tprintf(\"%.3lf\", area);\n}\n```\n\n### \u590d\u6742\u5ea6\u53ca\u5176\u5b83\n\n\u662f $O(nh)$ \u7684\uff0c\u5176\u4e2d $h$ \u662f\u51f8\u5305\u70b9\u6570\uff1b\u968f\u673a\u6570\u636e\u4e0b\u51cf\u5c11\u7684\u5faa\u73af\u6b21\u6570\u975e\u5e38\u53ef\u89c2\uff08\u81ea\u6d4b\u4e86\u51e0\u4e2a\u6570\u636e\uff0c\u5927\u6982\u662f $\\sqrt n$ \u7684\uff0c\u4ec5\u4f9b\u53c2\u8003\uff09\n\n\u4e0d\u8fc7\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u5199\u5b9e\u73b0\u5e38\u6570\u975e\u5e38\u5927\uff0c\u5b9e\u9645\u6548\u7387\u548c\u6211\u7684\u589e\u91cf\u6cd5\u4e00\u6837...\uff08\u53ef\u80fd\u662f\u56e0\u4e3a\u8fc7\u591a\u7684\u7ed3\u6784\u4f53\u6784\u9020\uff09\n\n\u8fd9\u79cd\u505a\u6cd5\u662f\u4e0d\u652f\u6301\u5728\u7ebf\u7684\u3002\n\n## 3. QuickHull\n\n\u8fd9\u79cd\u505a\u6cd5\u56e0\u4e3a\u5176\u548c \u5feb\u901f\u6392\u5e8f \u7c7b\u4f3c\u7684\u542f\u53d1\u5f0f\u5212\u5206\u800c\u5f97\u540d\u3002\n\n\uff08\u5982\u679c\u6709\u4eba\u77e5\u9053\u4e8c\u7ef4\u7684 quickhull \u7684\u8bdd\uff0c\u6ce8\u610f\u5176\u5b9e\u4e09\u7ef4\u7684 quickhull \u548c\u4e8c\u7ef4\u7684\u533a\u522b\u8fd8\u662f\u86ee\u5927\u7684...\uff09\n\n### \u57fa\u672c\u601d\u8def\n\n\u5bf9\u4e8e\u4e00\u4e2a\u7531**\u6700\u7ec8\u51f8\u5305\u9876\u70b9**\u7ec4\u6210\u7684\u9762\u548c\u53e6\u4e00\u4e2a\u70b9\u7ec4\u6210\u7684\u68f1\u9525\uff0c\u6240\u6709\u5728**\u5176\u5185\u90e8**\u7684\u70b9\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u6392\u9664\u7684\u3002\n\n&nbsp;\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5747\u7531\u6700\u7ec8\u51f8\u5305\u9876\u70b9\u7ec4\u6210\u7684\u591a\u9762\u4f53 $H'$\uff0c\u5176\u4e00\u4e2a\u9762\uff08\u6216\u9762\u7684\u5212\u5206\uff0c\u4fdd\u8bc1\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\uff09 $\\pi$\uff0c\u548c\u5b83\u88ab\u5206\u914d\u5230\u7684\u4e00\u4e2a\u70b9\u96c6 $P_\\pi$\u3002\n\n\u6211\u4eec\u53d6\u79bb\u8fd9\u4e2a\u9762**\u6700\u8fdc**\u7684\u70b9\uff0c\u548c**\u591a\u9762\u4f53\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u7684\u5730\u5e73\u7ebf**\u8fde\u9762**\u66f4\u65b0\u591a\u9762\u4f53**\uff0c\u53ef\u4ee5\u83b7\u5f97\u591a\u4e2a**\u65b0\u9762** $F$\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e9b\u9762\u7684\u9876\u70b9\u4e00\u5b9a\u662f\u6700\u7ec8\u51f8\u5305\u7684\u9876\u70b9\uff1b\n\n\u5c06 $P_\\pi$ \u5269\u4e0b\u7684\u70b9**\u52a0\u4e0a**\u88ab\u5220\u9664\u7684\u9762\u7684\u70b9\u96c6 $P$\uff0c\u5212\u5206\u7ed9 $F$\uff0c\u5e76\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u5728\u5212\u5206\u5230\u7684\u9762*\u7684*\u4e0a\u65b9**\uff08\u6ce8\u610f\u4e00\u4e2a\u70b9\u53ef\u80fd\u6ee1\u8db3\u5212\u5206\u7ed9\u591a\u4e2a\u9762\uff0c\u800c\u4e8c\u7ef4 quickhull \u5c31\u4e0d\u4f1a\u6709\u8fd9\u79cd\u60c5\u51b5\uff09\uff1b\n\n\u5bf9\u4e8e\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\uff0c\u5c31\u76f4\u63a5\u629b\u5f03\uff1b\n\n\u7136\u540e\u6211\u4eec\u518d\u5c06 $F$ \u52a0\u5165\u961f\u5217\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u9762\uff08\u6ce8\u610f\u6709\u65f6\u4f1a\u5904\u7406\u5230\u4e00\u4e2a\u5df2\u7ecf\u5220\u9664\u7684\u9762\uff09\u3002\n\n\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u6d41\u7a0b\u56fe\uff08\u4e0d\u592a\u597d\u7ffb\u8bd1\uff0c\u76f4\u63a5\u7528\u539f\u6587\u53ef\u80fd\u66f4\u6e05\u6670\uff09\uff1a\n\n![\u6d41\u7a0b\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/9rt4ro92.png)\n\n&nbsp;\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a quickhull \u7b97\u6cd5\u7684 demo\u3002\n\n\u622a\u56fe\uff1a\n\n\uff08\u53ef\u89c1\u9762\uff09\n\n![quickhull1](https://cdn.luogu.com.cn/upload/image_hosting/uprfz9kc.png)\n\n\uff08\u5730\u5e73\u7ebf\uff09\n\n![quickhull2](https://cdn.luogu.com.cn/upload/image_hosting/i4sokimf.png)\n\n\uff08\u65b0\u5efa\u9762\uff09\n\n![quickhull3](https://cdn.luogu.com.cn/upload/image_hosting/4wmwt2qx.png)\n\n\u5b8c\u6574 demo [\u5728\u8fd9](https://pan.baidu.com/s/194jOL5rhHxeE3eDQxhD7vg \n)\uff08baidu\u7f51\u76d8\uff0c\u63d0\u53d6\u7801\uff1a0eot\uff09\n\n### \u521d\u59cb\u5316\n\n\u4e3a\u4e86\u627e\u5230\u4e00\u4e2a\u7531\u6700\u7ec8\u51f8\u5305\u7684\u9876\u70b9\u7ec4\u6210\u7684\u5355\u7eaf\u5f62\u4f5c\u4e3a\u7b97\u6cd5\u7684\u5f00\u59cb\uff0c\u6211\u4eec\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\n1. \u6211\u4eec\u9996\u5148\u5206\u522b\u5728 $x, y, z$ \u4e09\u4e2a\u5750\u6807\u8f74\u65b9\u5411\u4e0a\u627e\u5230\u6700\u5927\u6700\u5c0f\u70b9\uff0c\u5171 $3$ \u5bf9 $6$ \u4e2a\u70b9\uff08\u8fd9 $6$ \u4e2a\u70b9\u5fc5\u5728\u51f8\u5305\u4e0a\uff09\uff1b\n2. \u5728\u8fd9 $6$ \u4e2a\u70b9\u5f53\u4e2d\uff0c\u9009\u53d6\u8ddd\u79bb\u6700\u5927\u7684\u4e24\u4e2a\u70b9\u4e3a\u521d\u59cb\u70b9\uff1b\n3. \u5728\u8fd9 $6$ \u4e2a\u70b9\u5f53\u4e2d\uff0c\u9009\u53d6\u8ddd\u79bb\u7b2c\u4e8c\u6b65\u6240\u9009 $2$ \u4e2a\u70b9\u8fde\u7ebf\u6700\u8fdc\u7684\u70b9\u4f5c\u4e3a\u7b2c $3$ \u4e2a\u70b9\uff1b\n4. \u904d\u5386\u70b9\u96c6\u5f53\u4e2d\u6240\u6709\u70b9\uff0c\u627e\u5230\u8ddd\u79bb\u8fd9 $3$ \u4e2a\u70b9\u6240\u786e\u5b9a\u7684\u5e73\u9762\u6700\u8fdc\u7684\u70b9\u4f5c\u4e3a\u7b2c $4$ \u4e2a\u70b9\uff1b\n\n\uff08[\u6765\u81ea](https://zhuanlan.zhihu.com/p/33950536)\uff09\n\n\u8fd9 $4$ \u4e2a\u70b9\u5373\u662f\u6700\u521d\u7684\u5355\u7eaf\u5f62\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u904d\u5386\u6240\u6709\u70b9\uff0c\u7ed9\u8fd9\u4e2a\u5355\u7eaf\u5f62\u7684\u56db\u4e2a\u9762\u5206\u914d\u70b9\u5373\u53ef\u3002\n\n### CODE\n\n\u4ee3\u7801\u662f\u4e0a\u9762\u8bb8\u591a\u4e1c\u897f\u7684\u7efc\u5408\uff08\u975e\u5e38**\u957f**\uff09\n\n\u601d\u7ef4\u96be\u5ea6\u548c\u524d\u4e24\u79cd\u65b9\u6cd5\u5dee\u4e0d\u591a\uff0c\u4f46\u8c03\u8bd5\u975e\u5e38\u9ebb\u70e6\u3002\n\n\u6211\u7684\u4ee3\u7801**\u7ed3\u6784**\u975e\u5e38\u96be\u770b...\u8fd8\u8bf7\u89c1\u8c05\uff08\u6682\u65f6\u6ca1\u5565\u65f6\u95f4\u6539\uff09\uff1b\u4ec5\u4f9b\u53c2\u8003\u601d\u8def\u3002\n\n\uff08\u53e6\u5916\u5b9e\u73b0\u4e2d\u5220\u9664\u9762\u548c\u6d41\u7a0b\u56fe\u6ca1\u4e25\u683c\u5bf9\u5e94\uff0c\u56e0\u4e3a\u5728\u67e5\u8be2\u5730\u5e73\u7ebf\u5df2\u7ecf\u6807\u8bb0\u4e86\u5220\u9664\u7684\u9762\uff0c\u7ef4\u62a4\u90bb\u63a5\u4fe1\u606f\u65f6\u4e5f\u629b\u5f03\u4e86\u5220\u9664\u7684\u9762\uff09\n\n```cpp\n//\u8f93\u5165\u9000\u5316\u4e3a\u9762\u6216\u70b9\u672a\u6d4b\u8bd5 \n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <list>\n#include <queue>\nusing std::vector;\nusing std::list;\nusing std::queue;\nusing std::pair;\nusing std::max;\ntypedef pair<int, int> pad;\n\nconst int MAXN =2500;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double eps =1e-8;\n\nstruct vect{\n\tdouble x, y, z;\n\tint id;\n\tvect(){}\n\tvect(double xx, double yy, double zz):x(xx), y(yy), z(zz){}\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y, z-v.z); }\n\tvect operator / (vect v){ return vect(y*v.z-z*v.y, z*v.x-x*v.z, x*v.y-y*v.x); }\n\tdouble operator * (vect v){ return x*v.x+y*v.y+z*v.z; }\n\tdouble m(){ return sqrt(x*x+y*y+z*z); }\n};\n\nstruct line{\n\tvect u, v;\n\tline(){}\n\tline(vect uu, vect vv):u(uu), v(vv){}\n};\n\nstruct plane{\n\tvect vec[3];\n\tplane(){}\n\tplane(vect uu, vect vv, vect ww){ vec[0] =uu, vec[1] =vv, vec[2] =ww; }\n\tvect normal(){ return (vec[1]-vec[0])/(vec[2]-vec[0]);}\n\tvect u(){ return vec[0]; }\n};\n\ninline bool gtr(double a, double b){ return a-b > eps; }\n\ninline bool eq(double a, double b){ return (a-b > -eps && a-b < eps); }\n\ninline bool eq(vect u, vect v){ return (eq(u.x, v.x) && eq(u.y, v.y) && eq(u.z, v.z)); }\n\ninline double Abs(double x){ return gtr(0, x) ? -x : x; }\n\n/*\u5e26\u7b26\u53f7\u8ddd\u79bb*/\ninline double dist(vect v, plane p){ return (v-p.u())*p.normal()/p.normal().m(); }\n\n/*\u4e0d\u5e26\u7b26\u53f7*/\ninline double dist(vect v, line f){ return ((f.v-f.u)/(v-f.u)).m()/(f.v-f.u).m(); }\n\ninline double dist(vect u, vect v){ return (u-v).m(); }\n\ninline bool isabove(vect v, plane p){ return gtr((v-p.u())*p.normal(), 0); }\n\n/*------------------------------Convex Hulls------------------------------*/\n\nint TIME =0;/*\u5168\u5c40\u65f6\u95f4\u6233*/\n\nstruct facet{\n\tint n[3];/*neighbor\uff0c\u548c\u70b9\u5bf9\u5e94 (u->v, v->w, w->u)*/\n\tint id, vistime/*\u8bbf\u95ee\u7684\u65f6\u95f4\u6233*/;\n\tbool isdel;\n\tplane p;\n\tfacet(){ vistime =isdel =0; }\n\tfacet(plane pp):p(pp){ vistime =isdel =0; }\n\tfacet(int idd, plane pp):id(idd), p(pp){ vistime =isdel =0; }\n\tvoid in(int n1, int n2, int n3){ n[0] =n1, n[1] =n2, n[2] =n3; }\n};\n\n/*\u5730\u5e73\u7ebf\u7684\u8fb9*/\nstruct edge{\n\tint netid, facetid;\n};\n\n/*\u5b58\u50a8\u6240\u6709\u9762*/\nvector<facet> FAC;\n\nstruct ConvexHulls3d{\n\tint index/*\u7d22\u5f15\u9762*/;\n\tdouble surfacearea;\n\tConvexHulls3d(int indd):index(indd){ surfacearea =0; }\n\t\n\tvoid dfsArea(int nf){\n\t\tif(FAC[nf].vistime == TIME) return;\n\t\tFAC[nf].vistime =TIME;\n\t\tsurfacearea +=FAC[nf].p.normal().m()/2;\n\t\tfor(int i =0; i < 3; ++i)\n\t\t\tdfsArea(FAC[nf].n[i]);\n\t}\n\t\n\tdouble getSurfaceArea(){\n\t\tif(gtr(surfacearea, 0)) return surfacearea;\n\t\t++TIME;\n\t\tdfsArea(index);\n\t\treturn surfacearea;\n\t}\n\t\n\tint getHorizon(int f, vect &p, int vistime[], edge e1[], edge e2[], vector<int> &resfdel){\n\t\tif(!isabove(p, FAC[f].p)) return 0;\n\t\tif(FAC[f].vistime == TIME) return -1;\n\t\tFAC[f].vistime =TIME;\n\t\tFAC[f].isdel =1;/*\u987a\u4fbf\u6807\u8bb0\u5220\u9664\u7684\u9762*/\n\t\tresfdel.push_back(FAC[f].id);\n\t\tint ret =-2;\n\t\tfor(int i =0; i < 3; ++i){\n\t\t\tint res =getHorizon(FAC[f].n[i], p, vistime, e1, e2, resfdel);\n\t\t\tif(res == 0){\n\t\t\t\tint pt[2];\n\t\t\t\tpt[0] =FAC[f].p.vec[i].id, pt[1] =FAC[f].p.vec[(i+1)%3].id;\n\t\t\t\tfor(int j =0; j < 2; ++j){\n\t\t\t\t\tif(vistime[pt[j]] != TIME){\n\t\t\t\t\t\tvistime[pt[j]] =TIME;\n\t\t\t\t\t\te1[pt[j]].netid =pt[(j+1)%2];\n\t\t\t\t\t\te1[pt[j]].facetid =FAC[f].n[i];\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\te2[pt[j]].netid =pt[(j+1)%2];\n\t\t\t\t\t\te2[pt[j]].facetid =FAC[f].n[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tret =pt[0];\n\t\t\t}\n\t\t\telse if(res != -1 && res != -2/*\u88ab\u56f4\u5728\u4e2d\u95f4\u7684\u9762*/) ret =res;\n\t\t}\n\t\treturn ret;\n\t}\n};\n\n/*----------------------------------------------------------------*/\n\n/*\u5168\u5c40\u70b9*/\nvector<vector<vect> > pts;\n\n/*\u6784\u9020\u521d\u59cb\u5355\u7eaf\u5f62*/\ninline ConvexHulls3d getStart(vect point[], int totp){\n\tvect pt[6], s[4];\n\tfor(int i =0; i < 6; ++i) pt[i] =point[1];\n\t/*\u53d6\u5750\u6807\u8f74\u6700\u5927\u70b9*/\n\tfor(int i =2; i <= totp; ++i){\n\t\tif(gtr(point[i].x, pt[0].x)) pt[0] =point[i];\n\t\tif(gtr(pt[1].x, point[i].x)) pt[1] =point[i];\n\t\tif(gtr(point[i].y, pt[2].y)) pt[2] =point[i];\n\t\tif(gtr(pt[3].y, point[i].y)) pt[3] =point[i];\n\t\tif(gtr(point[i].z, pt[4].z)) pt[4] =point[i];\n\t\tif(gtr(pt[5].z, point[i].z)) pt[5] =point[i];\n\t}\n\ts[0] =pt[0], s[1] =pt[0], s[2] =pt[0], s[3] =pt[0];\n\t/*\u53d6\u8ddd\u79bb\u6700\u5927\u7684\u4e24\u4e2a\u70b9*/\n\tfor(int i =0; i < 6; ++i) for(int j =i+1; j < 6; ++j)\n\t\tif(gtr(dist(pt[i], pt[j]), dist(s[0], s[1])))\n\t\t\ts[0] =pt[i], s[1] =pt[j];\n\t/*\u53d6\u8ddd\u79bb\u4e0a\u4e24\u4e2a\u70b9\u6240\u8fde\u76f4\u7ebf\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9*/\n\tfor(int i =0; i < 6; ++i)\n\t\tif(gtr(dist(pt[i], line(s[0], s[1])), dist(s[2], line(s[0], s[1]))))\n\t\t\ts[2] =pt[i];\n\t/*\u53d6\u6240\u6709\u70b9\u96c6\u4e2d\u8ddd\u79bb\u8be5\u9762\u6700\u8fdc\u7684\u70b9*/\n\tfor(int i =1; i <= totp; ++i)/*!!*/\n\t\tif(gtr(Abs(dist(point[i], plane(s[0], s[1], s[2]))), Abs(dist(s[3], plane(s[0], s[1], s[2])))))\n\t\t\ts[3] =point[i];\n\t/*\u786e\u4fdd\u63a5\u4e0b\u6765\u6784\u9020\u7684\u9762\u662f\u671d\u5355\u7eaf\u5f62\u5916\u7684*/\n\tif(gtr(0, dist(s[3], plane(s[0], s[1], s[2])))){\n\t\tvect tmp =s[1]; s[1] =s[2]; s[2] =tmp;\n\t}\n\t/*\u6784\u9020\u5355\u7eaf\u5f62*/\n\tint f[4];\n\tfor(int i =0; i < 4; ++i) FAC.push_back(facet()), f[i] =FAC.size()-1, FAC[f[i]].id =f[i];\n\tFAC[f[0]].p =plane(s[0], s[2], s[1]),/*\u5e95\u9762*/\n\tFAC[f[1]].p =plane(s[0], s[1], s[3]),\n\tFAC[f[2]].p =plane(s[1], s[2], s[3]),\n\tFAC[f[3]].p =plane(s[2], s[0], s[3]);\n\tFAC[f[0]].in(f[3], f[2], f[1]);\n\tFAC[f[1]].in(f[0], f[2], f[3]);\n\tFAC[f[2]].in(f[0], f[3], f[1]);\n\tFAC[f[3]].in(f[0], f[1], f[2]);\n\t/*\u7ed9\u56db\u4e2a\u9762\u5206\u914d\u70b9\u96c6\u7a7a\u95f4*/\n\tfor(int i =0; i < 4; ++i)\n\t\tpts.push_back(vector<vect>());\n\t/*\u7ed9\u56db\u4e2a\u9762\u5206\u914d\u70b9*/\n\tfor(int i =1; i <= totp; ++i){\n\t\tif(eq(point[i], s[0]) || eq(point[i], s[1]) || eq(point[i], s[2]) || eq(point[i], s[3])) continue;\n\t\tfor(int j =0; j < 4; ++j)\n\t\t\tif(isabove(point[i], FAC[f[j]].p)){\n\t\t\t\tpts[f[j]].push_back(point[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t/*\u8fd4\u56de\u521d\u59cb\u5355\u7eaf\u5f62\uff0c\u4ee5\u4e00\u4e2a\u9762\u4f5c\u4e3a\u7d22\u5f15*/\n\treturn ConvexHulls3d(f[0]);\n}\n\nedge e[2][MAXN] /*\u8fb9\u754c\u7ebf\u7684\u56fe\u4fe1\u606f*/;\nint vistime[MAXN] /*\u6bcf\u4e2a\u70b9\u8bbf\u95ee\u7684\u65f6\u95f4\u6233*/;\nqueue<int> que;\nvector<int> resfnew /*\u4fdd\u5b58\u65b0\u6784\u9020\u7684\u9762*/, resfdel /*\u4fdd\u5b58\u5220\u9664\u7684\u9762*/;\nvector<vect> respt /*\u4fdd\u5b58\u9700\u8981\u5206\u914d\u7684\u70b9*/;\ninline ConvexHulls3d quickHull3d(vect point[], int totp){\n\tConvexHulls3d hull =getStart(point, totp);\n\t/*\u5c06\u521d\u59cb\u5355\u7eaf\u5f62\u7684\u9762\u52a0\u5165\u961f\u5217*/\n\tque.push(hull.index);\n\tfor(int i =0; i < 3; ++i)\n\t\tque.push(FAC[hull.index].n[i]);\n\t/*snew \u4fdd\u5b58\u6700\u540e\u8fd4\u56de\u7684\u51f8\u5305\u7684\u7d22\u5f15\u9762*/\n\tint snew =0;\n\twhile(que.size()){\n\t\tint nf =que.front(); que.pop();\n\t\t/*\u5f53\u524d\u9762\u5df2\u88ab\u5220\u9664\uff0c\u8df3\u8fc7*/\n\t\tif(FAC[nf].isdel) continue;\n\t\t/*\u5f53\u524d\u9762\u6ca1\u6709\u5206\u914d\u5230\u9876\u70b9\uff0c\u8df3\u8fc7*/\n\t\tif(pts[nf].size() == 0){\n\t\t\tsnew =nf;/*\u786e\u4fdd\u9762\u6700\u540e\u5b58\u5728*/\n\t\t\tcontinue;\n\t\t}\n\t\t/*\u53d6\u8ddd\u79bb\u8be5\u9762\u6700\u8fdc\u7684\u70b9*/\n\t\tvect p =pts[nf][0];\n\t\tfor(int i =1; i < (int)pts[nf].size(); ++i)\n\t\t\tif(gtr(dist(pts[nf][i], FAC[nf].p), dist(p, FAC[nf].p)))\n\t\t\t\tp =pts[nf][i];\n\t\t/*\u6c42\u5730\u5e73\u7ebf\uff0c\u53ef\u4ee5\u77e5\u9053\u5f97\u5230\u7684\u5730\u5e73\u7ebf\u81f3\u5c11\u6709\u4e09\u4e2a\u70b9*/\n\t\t++TIME;\n\t\tresfdel.clear();\n\t\t/*\u5f53\u524d\u9762\u4e00\u5b9a\u4f1a\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u76f4\u63a5\u4ece\u5f53\u524d\u9762 dfs*/\n\t\tint s =hull.getHorizon(nf, p, vistime, e[0], e[1], resfdel);\n\t\t/*\u904d\u5386\u5730\u5e73\u7ebf\uff08\u7ed5\u4e00\u5708\uff09\uff0c\u6784\u9020\u65b0\u9762*/\n\t\t/*\u5728\u6c42\u5730\u5e73\u7ebf\u65f6\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u67d0\u6761\u8fb9\u662f\u9006\u65f6\u9488\u8fd8\u662f\u987a\u65f6\u9488\u7684\uff0c\u56e0\u6b64\u9700\u8981\u8fd9\u91cc\u5224\u65ad*/\n\t\tresfnew.clear();\n\t\t++TIME;\n\t\tint from =0 /*\u4e0a\u4e00\u4e2a\u8bbf\u95ee\u7684\u70b9*/, lastf =0 /*\u4e0a\u4e00\u4e2a\u65b0\u5efa\u7684\u9762*/, fstf =0 /*\u7b2c\u4e00\u4e2a\u65b0\u5efa\u7684\u9762*/;\n\t\twhile(vistime[s] != TIME){\n\t\t\t/*\u7528\u65f6\u95f4\u6233\u8bb0\u5f55\u5f53\u524d\u70b9\u662f\u5426\u8bbf\u95ee*/\n\t\t\tvistime[s] =TIME;\n\t\t\tint net/*\u4e0b\u4e00\u4e2a\u70b9*/;\n\t\t\tint f /*\u5730\u5e73\u7ebf\u4e0a\u5f53\u524d\u8fb9\u6240\u63a5\u7684\u65e0\u6cd5\u770b\u89c1\u7684\u9762*/, fnew /*\u65b0\u9762*/;\n\t\t\t/*\u786e\u4fdd\u904d\u5386\u65b9\u5411\u6b63\u786e*/\n\t\t\tif(e[0][s].netid == from) net =e[1][s].netid, f =e[1][s].facetid;\n\t\t\telse net =e[0][s].netid, f =e[0][s].facetid;\n\t\t\t/*\u6c42\u51fa\u8fd9\u4e24\u4e2a\u70b9\u5728\u90bb\u63a5\u9762\u4e0a\u7684\u9006\u987a\u65f6\u9488\u4fe1\u606f*/\n\t\t\tint pt1 =-1, pt2 =-1;\n\t\t\tfor(int i =0; i < 3; ++i){\n\t\t\t\tif(eq(point[s], FAC[f].p.vec[i])) pt1 =i;\n\t\t\t\tif(eq(point[net], FAC[f].p.vec[i])) pt2 =i;\n\t\t\t}\n\t\t\t/*\u786e\u4fdd pt1->pt2 \u662f\u6309\u90bb\u63a5\u9762\u7684\u70b9\u7684\u9006\u65f6\u9488\u6392\u5217*/\n\t\t\tif((pt1+1)%3 != pt2) pt1 ^=pt2 ^=pt1 ^=pt2;/*\u4ea4\u6362*/\n\t\t\t/*\u8fd9\u6837\u6784\u9020\u7684\u9762\u662f\u671d\u51f8\u5305\u5916\u7684*/\n\t\t\tFAC.push_back(facet(plane(FAC[f].p.vec[pt2], FAC[f].p.vec[pt1], p)));\n\t\t\tfnew =FAC.size()-1, FAC[fnew].id =fnew;\n\t\t\tpts.push_back(vector<vect>());\n\t\t\tresfnew.push_back(fnew);\n\t\t\t/*\u7ef4\u62a4\u90bb\u63a5\u4fe1\u606f*/\n\t\t\tFAC[fnew].n[0] =f, FAC[f].n[pt1] =fnew;\n\t\t\tif(lastf){\n\t\t\t\t/*\u4e0d\u80fd\u9884\u5148\u786e\u5b9a\u662f\u987a\u65f6\u9488\u904d\u5386\u8fd8\u662f\u9006\u65f6\u9488\u904d\u5386*/\n\t\t\t\t/*\u7ef4\u62a4\u65b0\u5efa\u7684\u9762\u4e4b\u95f4\u7684\u90bb\u63a5\u4fe1\u606f*/\n\t\t\t\tif(eq(FAC[fnew].p.vec[1], FAC[lastf].p.vec[0])) FAC[fnew].n[1] =lastf, FAC[lastf].n[2] =fnew;\n\t\t\t\telse FAC[fnew].n[2] =lastf, FAC[lastf].n[1] =fnew;\n\t\t\t}\n\t\t\telse fstf =fnew;/*\u8fd8\u672a\u65b0\u5efa\u9762*/\n\t\t\tlastf =fnew;\n\t\t\tfrom =s;\n\t\t\ts =net;\n\t\t}\n\t\t/*\u7ed9\u65b0\u5efa\u7684\u9762\u5934\u5c3e\u7ef4\u62a4\u4e34\u754c\u4fe1\u606f*/\n\t\tif(eq(FAC[fstf].p.vec[1], FAC[lastf].p.vec[0])) FAC[fstf].n[1] =lastf, FAC[lastf].n[2] =fstf;\n\t\telse FAC[fstf].n[2] =lastf, FAC[lastf].n[1] =fstf;\n\t\t/*\u53d6\u5f97\u6240\u6709\u9700\u8981\u5206\u914d\u7684\u70b9*/\n\t\trespt.clear();\n\t\tfor(int i =0; i < (int)resfdel.size(); ++i){\n\t\t\tfor(int j =0; j < (int)pts[resfdel[i]].size(); ++j)\n\t\t\t\trespt.push_back(pts[resfdel[i]][j]);\n\t\t\tpts[resfdel[i]].clear();\n\t\t}\n\t\t/*\u5206\u914d\u70b9*/\n\t\tfor(int i =0; i < (int)respt.size(); ++i){\n\t\t\tif(eq(respt[i], p)) continue;/*\u8df3\u8fc7\u7528\u4e8e\u65b0\u5efa\u9762\u7684\u70b9*/\n\t\t\tfor(int j =0; j < (int)resfnew.size(); ++j)\n\t\t\t\tif(isabove(respt[i], FAC[resfnew[j]].p)){\n\t\t\t\t\tpts[resfnew[j]].push_back(respt[i]);\n\t\t\t\t\tbreak;/*\u786e\u4fdd\u70b9\u4e0d\u4f1a\u88ab\u91cd\u590d\u5206\u914d*/\n\t\t\t\t}\n\t\t}\n\t\t/*\u5c06\u65b0\u7684\u9762\u52a0\u5165\u961f\u5217*/\n\t\tfor(int i =0; i < (int)resfnew.size(); ++i)\n\t\t\tque.push(resfnew[i]);\n\t}\n\thull.index =snew;\n\treturn hull;\n}\n\ninline void preConvexHulls(){\n\t/*0 \u4f4d\u505a\u4fdd\u7559*/\n\tpts.push_back(vector<vect>());\n\tFAC.push_back(facet());\n}\n\n/*------------------------------Main------------------------------*/\n\nvect point[MAXN];\n\nint main(){\n\tpreConvexHulls();\n\tint n; scanf(\"%d\", &n);\n\tfor(int i =1; i <= n; ++i){\n\t\tdouble x, y, z; scanf(\"%lf%lf%lf\", &x, &y, &z);\n\t\tpoint[i] =vect(x, y, z);\n\t\tpoint[i].id =i;\n\t}\n\tConvexHulls3d hull =quickHull3d(point, n);\n\tprintf(\"%.3lf\", hull.getSurfaceArea());\n}\n```\n\n### \u590d\u6742\u5ea6\u53ca\u5176\u5b83\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u636e\u8bf4\u662f\u671f\u671b $O(nlogn)$ \u7684\uff0c\u6700\u574f\u53ef\u80fd\u88ab\u5361\u5230 $O(nh)$\u3002\u5e38\u6570\u53ef\u80fd\u8f83\u5927\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u6309\u6211\u4e0a\u9762\u7684\u5b9e\u73b0,\uff1b\u6211\u81ea\u5df1\u6d4b\u8bd5\u4e86\u4e0b\uff0c\u5f00 O2\uff0c$10^6$ \u7684\u968f\u673a\u70b9\u5927\u6982\u53ef\u4ee5\u8dd1\u5230 $5s$ \u5de6\u53f3\uff08\u4ec5\u4f9b\u53c2\u8003\uff09\u3002\n\n## 4. \u4e00\u4e9b\u95f2\u8bdd\n\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u771f\u7684\u957f...\n\n\u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55\u5230\u5904\u90fd\u662f\u5751\uff0c\u771f\u7684\u5efa\u8bae\u53ea\u5f53\u5174\u8da3\u5b66\u4e60\uff08\u8bdd\u8bf4\u8fd9\u4e1c\u897f\u53ea\u6709 ZJOI2018 \u8003\u5230\u8fc7\u4e00\u6b21\u5427\uff08**\u4e5d \u6761 \u53ef \u601c**\uff09\uff0c\u8fd8\u53ea\u7528\u589e\u91cf\u6cd5\u5c31\u884c\uff09\u3002\n\n\u5982\u679c\u5bf9\u4e09\u7ef4\u8ba1\u7b97\u51e0\u4f55\u611f\u5174\u8da3\u7684\u8bdd\u8fd8\u53ef\u4ee5\u518d\u53bb\u6211\u535a\u5ba2[\u770b\u770b](https://www.luogu.com.cn/blog/105254/ji-suan-ji-he-san-wei-ru-men)\u3002",
        "postTime": 1593951787,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4724 \u3010\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "\u7167\u7740lrj\u7684\u4e66\u5b66\u7684\u4e09\u7ef4\u51f8\u5305\n\n\u5927\u6982\u5148\u8bf4\u4e00\u4e0b\u6211\u7684\u53d8\u91cf\u4ee3\u7801\u4e60\u60ef\uff1a\n\nxl = \u5411\u91cf\n\ndian = \u70b9 \n\n\uff08\u8bf7\u7528\u62fc\u97f3\u7406\u89e3\uff09\n\ndb = double\uff08\u88abdefine\u4e86\uff09\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u6709\u5173\u4e09\u7ef4\u51e0\u4f55\u7684\u4e1c\u897f\n\n### \u4e09\u7ef4\u70b9\u79ef\n\n\u548c\u4e8c\u7ef4\u4e00\u6837\uff0c\u4e24\u4e2a\u5411\u91cf\u7684\u819c\u957f\u6210\u7ee9\u4e58\u4e0a\u5939\u89d2\u7684\u4f59\u5f26\u503c\n\n\u5728\u4e09\u7ef4\u5750\u6807\u7cfb\u4e0a\uff0c\u662f\u8fd9\u4e48\u6c42\u7684\n\n```\ndb dianji(xl a,xl b){return a.x*b.x + a.y * b.y + a.z*b.z; }\n```\n\n### \u4e09\u7ef4\u53c9\u79ef\n\n\u4e09\u7ef4\u53c9\u79ef\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u800c\u4e0d\u662f\u50cf\u4e8c\u7ef4\u4e00\u6837\u4e00\u4e2a\u6807\u91cf\uff08lrj\u8bf4\u4e25\u683c\u610f\u4e49\u4e0a\u8bf4\u662f\u4e00\u4e2a\u4f2a\u5411\u91cf\uff09\n\n\u5176\u4e2d\u53c9\u79ef\u7684\u65b9\u5411\u5782\u76f4\u4e8e\u4e24\u6761\u5411\u91cf\uff0c\u540c\u65f6\u9075\u5faa\u53f3\u624b\u5b9a\u5219\n\n\u53f3\u624b\u98df\u6307\u6307\u5411\u7b2c\u4e00\u4e2a\u5411\u91cf\uff0c\u4e2d\u6307\u6307\u5411\u7b2c\u4e8c\u4e2a\u5411\u91cf\uff0c\u5927\u62c7\u6307\u5c31\u662f\u53c9\u79ef\u7684\u65b9\u5411\uff08\u4e66\u4e0a\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\uff0c\u81ea\u5df1\u7406\u89e3\u7684\uff0c\u5982\u679c\u6709\u95ee\u9898\u73c2\u4ee5\u79c1\u4fe1\u6211\u6216\u8005\u8bc4\u8bba\u91cc\u7559\u8a00\uff09\n\n\u81f3\u4e8e\u7a7a\u95f4\u4e2d\u7684\u4e09\u89d2\u5f62\u6c42\u9762\u79ef\uff0c\u548c\u4e8c\u7ef4\u51e0\u4f55\u4e00\u6837\uff0c\u7528\u4e00\u4e2a\u70b9\u5230\u53e6\u5916\u4e24\u4e2a\u70b9\u7684\u5411\u91cf\u6c42\u53c9\u79ef\u4e58\u4e8c\u5206\u4e4b\u4e00\u540e\u53d6\u819c\u957f\u5c31\u884c\u4e86\n\n### \u591a\u9762\u4f53\n\n\u4e00\u822c\u662f\u7528\u70b9-\u9762\u5f0f\u8868\u793a\uff0c\u5b58\u50a8\u70b9\u7684\u5750\u6807\u548c\u9762\n\n\u4e3a\u4e86\u7b80\u5355\uff0c\u5916\u9762\u73c2\u4ee5\u8ba4\u4e3a\uff0c\u9762\u90fd\u662f\u4e2d\u6709\u4e09\u4e2a\u70b9 p0 p1 p2 \u5f62\u6210\u7684\n\n\u4f46\u4e09\u4e2a\u70b9\u987a\u5e8f\u4e0d\u662f\u4efb\u610f\u7684\n\n\u4e00\u822c\u6211\u4eec\u89c4\u5b9a\u6309\u7167\u4ece\u591a\u9762\u4f53\u5916\u9762\u770b\uff0c\u4e09\u4e2a\u70b9\u5448\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5217\n\n## \u4e09\u7ef4\u51f8\u5305\n\n\u8fd9\u91cc\u5c31\u8bb2\u589e\u91cf\u6cd5\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u4f1a\u5377\u5305\u88f9\u6cd5\uff09\n\n\u521d\u59cb\uff0c\u5148\u9009\u4e09\u4e2a\u4e0d\u5171\u7ebf\u7684\u70b9\uff0c\u7ec4\u6210\u4e00\u4e2a\u9762\uff08\u5176\u5b9e\u5e94\u8be5\u662f\u6b63\u53cd\u4e24\u9762\u7684\uff09\uff0c\u7136\u540e\u518d\u4e0d\u65ad\u52a0\u5165\u70b9\n\n\u5220\u9664\u5176\u4e2d\u8fd9\u4e2a\u70b9\u73c2\u4ee5\u770b\u5230\u7684\u9762\uff0c\u7136\u540e\u5c06\u8fb9\u754c\u4e0a\u6240\u6709\u7684\u70b9\u4e0e\u65b0\u52a0\u7684\u70b9\u8fde\u7ebf\uff0c\u5176\u4e2d\u8fde\u7eed\u4e24\u70b9\u548c\u8fd9\u4e2a\u70b9\u6784\u6210\u4e09\u89d2\u5f62\n\n\u653e\u4e00\u5f20\u8f6c\u81ea[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/-sunshine/archive/2012/08/25/2656794.html)\u7684\u56fe\uff0c\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\n\n![](https://pic002.cnblogs.com/images/2012/402333/2012121013094176.png)\n\n### \u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406\n\n\u4e00\u822c\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u4e09\u70b9\u5171\u7ebf\u6216\u56db\u70b9\u5171\u9762\u7684\u60c5\u51b5\uff0c\u5c06\u6bcf\u4e2a\u70b9\u8fdb\u884c\u5fae\u5c0f\u6270\u52a8\uff0c\u4e3a\u4e86\u9632\u6b62\u6270\u52a8\u51fa\u73b0\u8fc7\u5c0f\u7684\u9762\uff0c\u6240\u4ee5\u5efa\u8bae\u5224\u91cd\n\n\u5c06\u4e00\u4e2a\u6570\u6270\u52a8\u7684\u4ee3\u7801\n```\nvoid raodong(db &x){x = x+((db)rand()/(db)RAND_MAX - 0.5)*esp*10;}\n```\n\n\n\n\u4e4b\u540e\u5c31\u662f\u4ee3\u7801\u4e86\n\n\uff08\u987a\u4fbf\uff0c\u4e0d\u8981\u5410\u69fd\u6211\u7528\u62fc\u97f3\u4f5c\u4e3a\u53d8\u91cf\u7684\u7801\u98ce\uff09\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define db double\n#define MAXN 2005 \n#define xl dian\n#define esp 1e-9\n\nstruct dian\n{\n\tdb x,y,z;\n}a[MAXN];\n\n\n\nint n,m,nn;\n\ndian operator +(dian a,xl b)\n{\n\treturn  dian{a.x + b.x,a.y + b.y,a.z + b.z}; \n } \n \n xl operator -(dian a,dian b)\n {\n\treturn  xl{a.x - b.x,a.y - b.y,a.z - b.z}; \n } \n \nxl chaji(xl a,xl b)\n{\n\treturn xl{a.y*b.z - a.z*b.y,a.z * b.x - a.x * b.z,a.x*b.y - a.y*b.x};\n}\n\ndb dianji(xl a,xl b)\n{\n\treturn a.x*b.x + a.y * b.y + a.z*b.z; \n}\n\ndb chang(xl a)\n{\n\treturn sqrt(dianji(a,a));\n}\n\nstruct mian\n{\n\tint v[3];\n\txl mj()\n\t{\n\t\treturn chaji(a[v[1]]-a[v[0]],a[v[2]]-a[v[0]]);\n\t}\n\tbool kejian(dian as)\n\t{\n\t\treturn dianji(as-a[v[0]],mj()) > 0 ? 1:0;\n\t}\n};\n\nvoid raodong(db &x)\n{\n\tx = x+((db)rand()/(db)RAND_MAX - 0.5)*esp*10;\n}\n\nvoid rd()\n{\n\tscanf(\"%d\",&nn);\n\tfor(int i = 1; i <= nn; i ++)\n\t{\n\t\tdian p;\n\t\tcin >> p.x >> p.y >> p.z;\n\t\tbool fl = 0; \n\t\tfor(int j = 1; j <= n; j ++)\n\t\t\tif(fabs(p.x - a[j].x) <= esp && fabs(p.y - a[j].y) <= esp && fabs(p.z - a[j].z) <= esp)\n\t\t\t{\n\t\t\t\tfl = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(!fl)\n\t\t{\n\t\t\tn ++;\n\t\t\ta[n] = p;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\traodong(a[i].x);\n\t\traodong(a[i].y);\n\t\traodong(a[i].z);\n\t}\n}\n\nbool vis[MAXN][MAXN];\n\ndb CH3D()\n{\n\tvector<mian>c;\n\tc.push_back((mian){1,2,3});\n\tc.push_back((mian){3,2,1});\n\tfor(int i = 4; i <= n; i ++)\n\t{\t\n\t\tvector<mian>ne;\n\t\tfor(int j = 0; j < c.size(); j ++)\n\t\t{\n\t\t\tmian f = c[j];\n\t\t\tbool r = f.kejian(a[i]);\n\t\t\tif(!r) ne.push_back(f); \n\t\t\tfor(int k = 0;k < 3; k ++)\n\t\t\t\t vis[f.v[k]][f.v[(k+1)%3]] = r;\n\t\t}\n\t\tfor(int j = 0; j < c.size(); j ++)\n\t\t\tfor(int k = 0; k < 3; k ++) {\n\t\t\t\tint a = c[j].v[k],b = c[j].v[(k+1)%3];\n\t\t\t\tif(vis[a][b] != vis[b][a] && vis[a][b])\n\t\t\t\t\tne.push_back((mian){a,b,i}); \n\t\t\t}\n\t\tc = ne; \n\t}\n\tdb ans = 0;\n\tfor(int i = 0; i < c.size(); i ++)\n\t{\n\t\tans += chang(c[i].mj())/2;\n\t} \n\treturn ans;\n}\n\nint main()\n{\n\trd();\n\tprintf(\"%.3lf\",CH3D());\n\treturn 0;\n } \n```",
        "postTime": 1545661986,
        "uid": 124721,
        "name": "Ynoi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4724 \u3010\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "~~\u4f5c\u4e3a\u6700\u77ed\u4ee3\u7801\u6c34\u4e00\u7bc7\u9898\u89e3~~\n\n\u8ba1\u7b97\u51e0\u4f55\u9898\u76ee\u4ee3\u7801\u7684\u7b80\u6d01\u5f88\u91cd\u8981\uff0c\u65e2\u65b9\u4fbf\u9605\u8bfb\u53c8\u4fbf\u4e8e\u8c03\u8bd5\n\n\u63a5\u4e0b\u6765\u84af\u4e0a\u535a\u5ba2\u91cc\u7684[\u4e09\u7ef4\u51f8\u5305\u7b14\u8bb0](https://www.cnblogs.com/xzyxzy/p/10225804.html)\n\n\u8fd8\u6709[\u8ba1\u7b97\u51e0\u4f55\u7b14\u8bb0&\u9898\u5355](https://www.cnblogs.com/xzyxzy/p/10033130.html)\n\n---\n# \u4e09\u7ef4\u51f8\u5305\n\n##**\u5411\u91cf\u8fd0\u7b97**\n\n### **\u52a0\u51cf\u8fd0\u7b97**\n\u540c\u5e73\u9762\u5411\u91cf\uff0c\u5bf9\u5e94\u5750\u6807\u76f8\u52a0\u51cf\n\n### **\u6a21\u957f**\n$|a|=\\sqrt{x^2+y^2+z^2}$\n\n### **\u70b9\u79ef**\n\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u4ecd\u7136\u8868\u793a **a\u5230b\u7684\u6295\u5f71\u00d7b\u7684\u6a21\u957f**\n\u4ecd\u7136\u6ee1\u8db3$a\u00b7b=|a||b|cos<a,b>$\n\u5750\u6807\u4e0b\u6709$(x_1,y_1,z_1)\u00b7(x_2,y_2,z_2)=(x_1x_2,y_1y_2,z_1z_2)$\uff0c\u5bf9\u5e94\u5750\u6807\u76f8\u4e58\n\n### **\u53c9\u79ef**\n\u4e24\u4e2a\u4e09\u7ef4\u5411\u91cf\u53c9\u79ef\u4ecd\u7136\u662f\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\uff08\u4e0d\u540c\u4e8e\u5e73\u9762\u5411\u91cf\uff0c\u4e58\u79ef\u662f\u5b9e\u6570\uff09\n\u5176**\u6a21\u957f**\u4ecd\u7136\u8868\u793a\u4ee5\u8fd9\u4e24\u4e2a\u4e09\u7ef4\u5411\u91cf\u4f5c\u4e3a\u90bb\u8fb9\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u9762\u79ef\n**\u65b9\u5411**\u7b26\u5408\uff1a\u5bf9\u4e8e$a*b$\uff0c\u4f38\u51fa\u53f3\u624b\uff0c\u98df\u6307\u6307\u5411$a$\uff0c\u4e2d\u6307\u6307\u5411$b$\uff0c\u5927\u62c7\u6307\u6240\u5bf9\u7684\u65b9\u5411\u4e3a\u53c9\u79ef\u540e\u7684\u5411\u91cf\u65b9\u5411\n![](http://images.cnblogs.com/cnblogs_com/xzyxzy/1374475/o_%E5%8F%89%E7%A7%AF.png)\n\u5982\u4e0a\u56fe\uff0c$AC*AB=AD$\n\n### **\u5e73\u9762\u7684\u6cd5\u5411\u91cf**\n\u5728\u5e73\u9762\u4e0a\u4efb\u9009\u4e24\u4e2a\u5411\u91cf\u505a\u53c9\u79ef\u5373\u53ef\n\n### **\u70b9\u5230\u5e73\u9762\u7684\u8ddd\u79bb**\n\u8be5\u70b9\u5230\u5e73\u9762\u4e0a\u4efb\u610f\u4e00\u70b9\u7684\u5411\u91cf \u53c9\u79ef \u5e73\u9762\u7684\u6cd5\u5411\u91cf\n\u7136\u540e\u9664\u4ee5\u6cd5\u5411\u91cf\u7684\u6a21\u957f\n```cpp\ndouble Dis(Node a) {Node w=Normal();return fabs((w&(a-A[v[0]]))/w.len());}\n```\n##**\u6c42\u51f8\u5305**\n### **\u6270\u52a8**\n\u9996\u5148\u5bf9\u5176\u5fae\u5c0f\u6270\u52a8\uff0c\u907f\u514d\u51fa\u73b0\u56db\u70b9\u5171\u9762\u7684\u60c5\u51b5\n### **\u5e73\u9762\u7684\u8bb0\u5f55**\n\u6270\u52a8\u4e4b\u540e\u5404\u4e2a\u5e73\u9762\u4e00\u5b9a\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u9006\u65f6\u9488\u65b9\u5411\u8bb0\u5f55\u4e09\u4e2a\u9876\u70b9\u8868\u793a\u4e00\u4e2a\u9762\n### **\u589e\u91cf\u6784\u9020**\n\u501f\u7528\u7f51\u4e0a[\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/-sunshine/archive/2012/08/25/2656794.html)\u7684\u56fe\u7247\u65b9\u4fbf\u7406\u89e3\n\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u77e5\u51f8\u5305\uff0c\u65b0\u589e\u4e00\u4e2a\u70b9P\n\u5c06P\u89c6\u4f5c\u4e00\u4e2a\u70b9\u5149\u6e90\uff0c\u5411\u51f8\u5305\u505a\u5c04\u7ebf\n\u53ef\u4ee5\u77e5\u9053\uff0c\u5149\u7ebf\u7684\u53ef\u89c1\u9762\u548c\u4e0d\u53ef\u89c1\u9762\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u6761\u68f1\u9694\u5f00\u7684\n![](http://images.cnblogs.com/cnblogs_com/xzyxzy/1374475/o_%E5%87%B8%E5%8C%85%E5%9B%BE1.png)\n\u5c06\u5149\u7684\u53ef\u89c1\u9762\u5220\u53bb\uff0c\u5e76\u65b0\u589e\u7531\u5176\u5206\u5272\u68f1\u4e0eP\u6784\u6210\u7684\u5e73\u9762\n![](http://images.cnblogs.com/cnblogs_com/xzyxzy/1374475/o_%E5%87%B8%E5%8C%85%E5%9B%BE2.png)\n\u91cd\u590d\u6b64\u8fc7\u7a0b\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(n^2)$\n\n## **\u4ee3\u7801**\n[\u6d1b\u8c37\u6a21\u677f](https://www.luogu.org/problemnew/show/P4724)\uff1a\u6c42\u4e09\u7ef4\u51f8\u5305\u9762\u79ef\n\u5148\u653e\u4e0a\u6837\u4f8b\u7684\u4e24\u5f20\u9753\u7167\uff1a\n![](http://images.cnblogs.com/cnblogs_com/xzyxzy/1374475/o_%E6%A0%B7%E4%BE%8B1.png)\n**\u5f3a\u70c8\u63a8\u8350\u753b\u56fe\u8f6f\u4ef6Geogebra\uff01**\n![](http://images.cnblogs.com/cnblogs_com/xzyxzy/1374475/o_%E6%A0%B7%E4%BE%8B2.png)\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\nusing namespace std;\nconst int N=2010;\nconst double eps=1e-9;\nint n,cnt,vis[N][N];\ndouble ans;\ndouble Rand() {return rand()/(double)RAND_MAX;}\ndouble reps() {return (Rand()-0.5)*eps;}\nstruct Node\n{\n\tdouble x,y,z;\n\tvoid shake() {x+=reps();y+=reps();z+=reps();}\n\tdouble len() {return sqrt(x*x+y*y+z*z);}\n\tNode operator - (Node A) {return (Node){x-A.x,y-A.y,z-A.z};}\n\tNode operator * (Node A) {return (Node){y*A.z-z*A.y,z*A.x-x*A.z,x*A.y-y*A.x};}\n\tdouble operator & (Node A) {return x*A.x+y*A.y+z*A.z;}\n}A[N];\nstruct Face\n{\n\tint v[3];\n\tNode Normal() {return (A[v[1]]-A[v[0]])*(A[v[2]]-A[v[0]]);}\n\tdouble area() {return Normal().len()/2.0;}\n}f[N],C[N];\nint see(Face a,Node b) {return ((b-A[a.v[0]])&a.Normal())>0;}\nvoid Convex_3D()\n{\n\tf[++cnt]=(Face){1,2,3};\n\tf[++cnt]=(Face){3,2,1};\n\tfor(int i=4,cc=0;i<=n;i++)\n\t{\n\t\tfor(int j=1,v;j<=cnt;j++)\n\t\t{\n\t\t\tif(!(v=see(f[j],A[i]))) C[++cc]=f[j];\n\t\t\tfor(int k=0;k<3;k++) vis[f[j].v[k]][f[j].v[(k+1)%3]]=v;\n\t\t}\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tfor(int k=0;k<3;k++)\n\t\t\t{\n\t\t\t\tint x=f[j].v[k],y=f[j].v[(k+1)%3];\n\t\t\t\tif(vis[x][y]&&!vis[y][x]) C[++cc]=(Face){x,y,i};\n\t\t\t}\n\t\tfor(int j=1;j<=cc;j++) f[j]=C[j];\n\t\tcnt=cc;cc=0;\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>A[i].x>>A[i].y>>A[i].z,A[i].shake();\n\tConvex_3D();\n\tfor(int i=1;i<=cnt;i++) ans+=f[i].area();\n\tprintf(\"%.3f\\n\",ans);\n}\n```",
        "postTime": 1546689196,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4724 \u3010\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "\u53bb\u7115\u7136\u4e00\u65b0\u7684\u535a\u5ba2\u770b\u770b $\\Longrightarrow$ [${\\bf George1123's~blog}$](https://www.cnblogs.com/Wendigo/p/13288495.html)\u3002\n\n---\n> [\u6d1b\u8c37P4724 \u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P4724)\n\n> \u7ed9\u51fa\u7a7a\u95f4\u4e2d $n$ \u4e2a\u70b9 $p_i$\uff0c\u6c42\u51f8\u5305\u8868\u9762\u79ef\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 2000$\u3002\n---\n\u8fd9\u7bc7\u9898\u89e3\u56e0\u4e3a\u662f\u4e16\u754c\u4e0a\u6700\u900a\u7684\u4eba\u5199\u7684\uff0c\u6240\u4ee5\u4e5f\u4f1a\u6709\u6c42**\u51f8\u5305\u4f53\u79ef**\u7684\u8bb2\u89e3\u3002\n\n---\n## \u4e09\u4f4d\u5411\u91cf\u7684\u8fd0\u7b97\n\n- **\u6a21\u957f\uff1a** \u5373\u5411\u91cf\u957f\u5ea6\uff0c$|\\vec{a}|=\\sqrt{x_a^2+y_a^2+z_a^2}$\u3002\n\n- **\u70b9\u79ef\uff1a** \u6807\u91cf $\\vec{a}\\cdot\\vec{b}=|\\vec{a}||\\vec{b}|\\cos<\\vec{a},\\vec{b}>=x_ax_b+y_ay_b+z_az_b$\uff0c\u4e3a $\\vec{a}$ \u7684\u6a21\u957f\u4e58\u4ee5 $\\vec{b}$ \u5728 $\\vec{a}$ \u4e0a\u7684\u6295\u5f71\u7684\u6a21\u957f\u3002\n\n- **\u53c9\u79ef\uff1a** \u5411\u91cf $\\vec{a}*\\vec{b}=(y_az_b-z_ay_b,z_ax_b-x_az_b,x_ay_b-y_ax_b)$\uff0c\u6a21\u957f\u4e3a\u5e73\u56db\u9762\u79ef\u3002\n\n![image.png](https://i.loli.net/2020/07/12/AmDroY3aqGSIkH1.png)\n\n\u4e0a\u56fe $\\vec{AC}*\\vec{AB}=\\vec{AD}$\uff0c$\\vec{AD}$ \u5782\u76f4 $\\vec{AC}$ \u4e0e $\\vec{AB}$ \u7684\u5e73\u9762\uff0c\u6a21\u957f\u4e3a\u5e73\u56db\u9762\u79ef\u3002\n\n---\n## \u4f1a\u7528\u5230\u7684\u8ba1\u7b97\u4e0e\u5224\u5b9a\n\n- **\u5224\u65ad\u70b9 $E$ \u5728\u5e73\u9762 $ABC$ \u4e0a\u65b9\uff1a**\n\n![image.png](https://i.loli.net/2020/07/12/LjoDmWaCQqHf7Rk.png)\n\n\u4f5c $\\vec{AD}=\\vec{AC}*\\vec{AB}$\uff0c\u7528 $\\vec{AE}\\cdot \\vec{AD}>0$ \u6765\u5224\u65ad $\\angle DAE<\\frac{\\pi}{2}$\u3002\n\n- **\u6c42\u70b9 $E$ \u5230\u5e73\u9762 $ABC$ \u7684\u8ddd\u79bb\uff1a**\n\n![image.png](https://i.loli.net/2020/07/12/cKRmrzaILYGpZXj.png)\n\n\u8ddd\u79bb ${\\rm dist}(E,\\triangle ABC)=EG=AF=\\frac{\\vec{AD}\\cdot \\vec{AE}}{|\\vec{AD}|}=\\frac{\\vec{AD}\\cdot \\vec{AE}}{|\\vec{AC}*\\vec{AB}|}$\u3002\n\n---\n## \u5904\u7406\u51f8\u5305\n\n\u8bbe\u51f8\u5305\u4e3a $Con$\uff0c\u7528\u9006\u65f6\u9488\u987a\u5e8f\u4e09\u4e2a\u70b9\u8868\u793a\u4e00\u4e2a\u4e09\u89d2\u5f62\u9762\u3002\n\n\u6bcf\u52a0\u5165\u4e00\u4e2a\u65b0\u70b9 $p_{new}$ \u7684\u65f6\u5019\uff0c\u628a\u5b83\u5f53\u4f5c\u5149\u6e90\u7167\u5411\u4e4b\u524d\u7684\u51f8\u5305\uff0c\u5c06\u672a\u7167\u5230\u7684\u9762\u7559\u4e0b\uff0c\u52a0\u4e0a $p_{new}$ \u548c\u5149\u5f71\u8fb9\u7f18\u5f62\u6210\u7684\u65b0\u9762\u3002\n\n\u5f15\u7528[\u5de8\u4f6c](https://www.cnblogs.com/-sunshine/archive/2012/08/25/2656794.html)\u7684\u56fe\uff1a\n\n![image.png](https://i.loli.net/2020/07/12/S9cfUJTzWYqHdXa.png)\n\n\u5224\u65ad\u7167\u4e0d\u7167\u5f97\u5230\u7528\u5224\u5b9a\u201c\u70b9 $E$ \u5728\u5e73\u9762 $ABC$ \u4e0a\u65b9\u201d\u7684\u65b9\u6cd5\u3002\n\n\u5224\u65ad\u5149\u5f71\u8fb9\u7f18\u7528 $vis$ \u6570\u7ec4\u3002$vis_{i,j}$ \u8868\u793a $(i,j,k)$\uff08\u5373 $(i,j)$ \u9006\u65f6\u9488\u65b9\u5411\u4e0a\u7684\u9762\uff09\u8fd9\u4e2a\u9762\u662f\u5426\u7167\u5149\uff0c\u5982\u679c $[vis_{i,j}=1]\\&\\&[vis_{j,i}=0]$\uff0c\u8bf4\u660e $(i,j)$ \u662f\u5149\u5f71\u8fb9\u7f18\uff0c\u9700\u52a0\u9762 $(i,j,p_{new})$\u3002\n\n\u91cd\u590d\u52a0\u70b9\uff0c\u5f97\u5230 $m$ \u4e2a $Con$ \u4e0a\u7684\u9762 $f_i=(A,C,B)$\u3002\n\n$$\\sum_{i=1}^m S_i=\\sum\\frac{|\\vec{AC}*\\vec{AB}|}{2}$$\n\n$$V_{Con}=\\sum \\frac{\\frac{|\\vec{AC}*\\vec{AB}|}{2}\\cdot {\\rm dist}(D,f_i)}{3}$$\n\n\u5176\u4e2d $D$ \u662f\u4e00\u4e2a\u5b9a\u70b9\uff0c\u9700\u8981\u5728 $Con$ \u5185\u6216\u8868\u9762\u4e0a\uff0c\u53ef\u4ee5\u9009 $p_1$\uff0c\u4e0a\u9762\u662f\u4e09\u68f1\u9525\u4f53\u79ef\u8ba1\u7b97\u516c\u5f0f\u3002\n\n---\n**\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\Theta(n^2)$\u3002**\n\n\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u9762\u6700\u591a\u589e\u52a0 $2$ \u4e2a\u3002\n\n\u8bc1\u660e\uff1a\u8bbe\u5149\u5f71\u8fb9\u7f18\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u9762\u662f\u4e09\u89d2\u5f62\uff0c\u6240\u4ee5\u8981\u53bb\u6389\u7684\u9762 $\\ge n-2$\uff08\u4e2d\u95f4\u53ef\u80fd\u6709\u70b9\uff09\uff0c\u589e\u52a0\u7684\u9762\u6570\u4e3a $n$\uff0c\u6240\u4ee5\u589e\u52a0\u7684\u70b9\u6570 $\\le 2$\u3002\n\n---\n## \u4ee3\u7801\n\n- **\u6c42\u8868\u9762\u79ef**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define be(a) a.begin()\n#define en(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=2000;\nconst db eps=1e-9;\nint n,m;\ndb ans;\n\n//Convex\nmt19937 orz(time(0));\ndb reps(){return (1.*(orz()%98)/97-.5)*eps;}\nstruct point{\n\tdb x,y,z;\n\tvoid shake(){x+=reps(),y+=reps(),z+=reps();}\n\tdb len(){return sqrt(x*x+y*y+z*z);}\n\tpoint operator-(point p){return (point){x-p.x,y-p.y,z-p.z};}\n\tpoint operator*(point p){return (point){y*p.z-p.y*z,z*p.x-p.z*x,x*p.y-p.x*y};}\n\tdb operator^(point p){return x*p.x+y*p.y+z*p.z;} \n}a[N];\nstruct plane{\n\tint v[3];\n\tpoint flag(){return (a[v[1]]-a[v[0]])*(a[v[2]]-a[v[0]]);}\n\tdb area(){return flag().len()/2;}\n\tint see(point p){return ((p-a[v[0]])^flag())>0;}\n}f[N],g[N];\nint vis[N][N]; \nvoid Convex(){\n\t#define ft f[j].v[t]\n\t#define bk f[j].v[(t+1)%3]\n\tf[m++]=(plane){0,1,2},f[m++]=(plane){2,1,0};\n\tfor(int i=3;i<n;i++){\n\t\tint cnt=0,b;\n\t\tfor(int j=0;j<m;j++){\n\t\t\tif(!(b=f[j].see(a[i]))) g[cnt++]=f[j];\n\t\t\tfor(int t=0;t<3;t++) vis[ft][bk]=b;\n\t\t}\n\t\tfor(int j=0;j<m;j++)\n\t\t\tfor(int t=0;t<3;t++)\n\t\t\t\tif(vis[ft][bk]&&!vis[bk][ft]) g[cnt++]=(plane){ft,bk,i};\n\t\tm=cnt;\n\t\tfor(int j=0;j<m;j++) f[j]=g[j];\n\t}\n} \n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=0;i<n;i++) cin>>a[i].x>>a[i].y>>a[i].z,a[i].shake();\n\tConvex();\n\tfor(int i=0;i<m;i++) ans+=f[i].area();\n\tcout.precision(3);\n\tcout<<fixed<<ans<<'\\n';\n\treturn 0;\n} \n```\n\n- **\u6c42\u4f53\u79ef**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define be(a) a.begin()\n#define en(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=2000;\nconst db eps=1e-9;\nint n,m;\ndb ans;\n\n//Convex\nmt19937 orz(time(0));\ndb reps(){return (1.*(orz()%98)/97-.5)*eps;}\nstruct point{\n\tdb x,y,z;\n\tvoid shake(){x+=reps(),y+=reps(),z+=reps();}\n\tdb len(){return sqrt(x*x+y*y+z*z);}\n\tpoint operator-(point p){return (point){x-p.x,y-p.y,z-p.z};}\n\tpoint operator*(point p){return (point){y*p.z-p.y*z,z*p.x-p.z*x,x*p.y-p.x*y};}\n\tdb operator^(point p){return x*p.x+y*p.y+z*p.z;} \n}a[N];\nstruct plane{\n\tint v[3];\n\tpoint flag(){return (a[v[1]]-a[v[0]])*(a[v[2]]-a[v[0]]);}\n\tdb area(){return flag().len()/2;}\n\tdb dist(point p){return fabs(((p-a[v[0]])^flag())/flag().len());}\n\tint see(point p){return ((p-a[v[0]])^flag())>0;}\n}f[N],g[N];\nint vis[N][N]; \nvoid Convex(){\n\t#define ft f[j].v[t]\n\t#define bk f[j].v[(t+1)%3]\n\tf[m++]=(plane){0,1,2},f[m++]=(plane){2,1,0};\n\tfor(int i=3;i<n;i++){\n\t\tint cnt=0,b;\n\t\tfor(int j=0;j<m;j++){\n\t\t\tif(!(b=f[j].see(a[i]))) g[cnt++]=f[j];\n\t\t\tfor(int t=0;t<3;t++) vis[ft][bk]=b;\n\t\t}\n\t\tfor(int j=0;j<m;j++)\n\t\t\tfor(int t=0;t<3;t++)\n\t\t\t\tif(vis[ft][bk]&&!vis[bk][ft]) g[cnt++]=(plane){ft,bk,i};\n\t\tm=cnt;\n\t\tfor(int j=0;j<m;j++) f[j]=g[j];\n\t}\n} \n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=0;i<n;i++) cin>>a[i].x>>a[i].y>>a[i].z,a[i].shake();\n\tConvex();\n\tfor(int i=0;i<m;i++) ans+=f[i].area()*f[i].dist(a[0])/3;\n\tcout.precision(2);\n\tcout<<fixed<<ans<<'\\n';\n\treturn 0;\n} \n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1594546750,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4724 \u3010\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u62d3\u5c55\u9898\uff08\u597d\u50cf\u4e0d\u4f1a\u8003\uff09\uff0c\u800c\u4e14\u8fd9\u9898\u8fd8\u6ca1\u6709\u4e24\u70b9\u5171\u70b9\uff0c\u4e09\u70b9\u5171\u7ebf\uff0c\u56db\u70b9\u5171\u9762\u7684\u60c5\u51b5\uff0c\u5982\u679c\u52a0\u5f3a\u4e86\u5c31\u6270\u52a8\u4e00\u4e0b\u70b9\uff0c\u8c03\u4e00\u4e0b\u7cbe\u5ea6\u5c31\u884c\u4e86\u3002\n\n# \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n\u4e8c\u7ef4\u5411\u91cf\u7684\u4ebf\u4e9b\u4e1c\u897f\uff0c\u7a7a\u95f4\u51e0\u4f55\u7684\u4ebf\u4e9b\u57fa\u7840\uff0c\u6700\u597d\u8fd8\u505a\u8fc7[\u4e8c\u7ef4\u51f8\u5305\u6a21\u677f](https://www.luogu.com.cn/problem/P2742)\u3002\n\n# Solution\n\n**\u666e\u53ca\u4e09\u7ef4\u5411\u91cf**\n\n\u548c\u4e8c\u7ef4\u5dee\u4e0d\u591a\uff0c\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4 $(x,y,z)$ \u8868\u793a\uff08\u6211\u4eec\u5047\u8bbe\u57fa\u5e95\u662f $x,y,z$ \u8f74\u4e0a\u7684\u5355\u4f4d\u5411\u91cf\uff09\u3002\n\n\u70b9\u79ef\u548c\u4e8c\u7ef4\u7684\u5dee\u4e0d\u591a\uff1a$\\vec{a}\\cdot\\vec{b}=x_a\\cdot x_b+y_a\\cdot y_b+z_a\\cdot z_b$\n\n\u628a\u4e24\u4e2a\u4e09\u7ef4\u5411\u91cf\u6295\u5f71\u5230\u4e09\u4e2a\u5e73\u9762\u5f62\u6210\u516d\u4e2a\u4e8c\u7ef4\u5411\u91cf\uff0c\u5bf9\u5e94\u53c9\u4e58\u5728\u52a0\u8d77\u6765\u5c31 OK \u4e86\uff1a$\\vec{a}\\times\\vec{b}=(y_a\\cdot z_b-z_a\\cdot y_b,z_a\\cdot x_b-x_a\\cdot z_b,x_a\\cdot y_b-x_b\\cdot y_a)$\n\n\u7136\u540e\u5c31\u662f**\u6df7\u5408\u79ef**\uff08\u4e00\u4e2a\u9ad8\u7ea7\u7684\u5b9a\u4e49\uff09\uff1a$\\vec{a}\\times\\vec{b}\\cdot\\vec{c}$\uff0c\u51e0\u4f55\u610f\u4e49\u5c31\u662f\u4e09\u4e2a\u5411\u91cf\u6784\u6210\u7684\u5e73\u884c\u516d\u9762\u4f53\u7684**\u6709\u5411\u4f53\u79ef**\uff08\u53c8\u662f\u4e00\u4e2a\u9ad8\u7ea7\u7684\u73a9\u610f\u513f\uff09\uff0c\u901a\u4fd7\u7684\u8bf4\uff0c$\\vec{a}\\times\\vec{b}$ \u4e58\u51fa\u6765\u7684\u5411\u91cf\u548c $\\vec{c}$ \u5728\u4e0d\u5728\u5e73\u9762 $aob$ \u7684\u540c\u4e00\u8fb9\u3002\u5728\u5c31\u662f\u6b63\u7684\uff0c\u4e0d\u5728\u5c31\u662f\u8d1f\u7684\u3002\u5c06\u4e09\u4e2a\u5411\u91cf\u7684\u8d77\u70b9\u5806\u5728\u4e00\u8d77\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad $\\vec{c}$ \u7684\u7ec8\u70b9\u5728\u5e73\u9762 $aob$ \u7684\u54ea\u4e00\u8fb9\uff08\u540e\u9762\u6709\u5927\u7528\uff09\u3002\n\n**\u6b63\u6587**\n\n\u6574\u4f53\u601d\u8def\u5f88\u7b80\u5355\uff08\u5e94\u8be5\u662f\u53eb**\u589e\u91cf\u6cd5**\uff09\uff0c\u5148\u627e\u56db\u4e2a\u4e0d\u5171\u9762\u7684\u70b9\uff08\u597d\u50cf\u4e5f\u6ca1\u6709\uff09\u6784\u6210\u6700\u5f00\u59cb\u7684\u4e09\u7ef4\u51f8\u5305\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\uff0c\u63d2\u5165\u65f6\u627e\u5230\u5b83\u80fd\u770b\u89c1\u7684\u9762\uff08\u5b57\u9762\u610f\u601d\uff0c\u634f\u4e2a\u7eb8\u56e2\u653e\u4f60\u684c\u4e0a\u5c31\u80fd\u7406\u89e3\uff09\uff0c\u5220\u6389\u90a3\u4e9b\u9762\uff0c\u663e\u7136\u8fd9\u4e9b\u9762\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff0c\u628a\u8fb9\u7f18\u548c\u8fd9\u4e2a\u70b9\u8fde\u6210\u4e00\u4e9b\u9762\uff0c\u66f4\u65b0\u51f8\u5305\uff0c\u6700\u540e\u5c31\u662f\u679a\u4e3e\u6bcf\u4e2a\u9762\u53c9\u79ef\u7b97\u4f53\u79ef\u5c31\u884c\u4e86\u3002\n\n\u4ee5\u4e0a\u53ea\u662f\u5b9e\u73b0\u6b65\u9aa4\uff0c\u63a5\u4e0b\u6765\u662f\u7ec6\u8282\u7684\u5b9e\u73b0\uff1a\n\n\u4fdd\u5b58\u51f8\u5305\uff1a\u5b58\u4e09\u4e2a\u70b9\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u6ca1\u90a3\u4e48\u7b80\u5355\uff08\u770b\u4e0b\u9762\uff09\u3002\n\n\u627e\u63d2\u5165\u7684\u70b9\u80fd\u770b\u5230\u7684**\u4e00\u4e2a**\u9762\uff1a\u5728\u5b58\u9762\u7684\u65f6\u5019\u662f\u4e09\u4e2a\u70b9\uff1a$(A,B,C)$\uff0c\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u987a\u5e8f\uff0c\u4f7f\u5f97 $\\vec{AB}\\times\\vec{AC}$ \u7684\u65b9\u5411\u5bf9\u7740\u51f8\u5305\u5916\u9762\uff08\u5728\u63d2\u5165\u70b9\u548c\u521d\u59cb\u7684\u65f6\u5019\u62ff\u634f\u4e00\u4e0b\u987a\u5e8f\uff09\uff0c\u8fd9\u6837\u5bf9\u4e8e\u63d2\u5165\u7684 $D$ \u70b9 $\\vec{AB}\\times\\vec{AC}\\cdot\\vec{AD}$ \u5982\u679c\u662f\u6b63\u7684\uff0c\u8bf4\u660e\u770b\u5f97\u89c1\uff0c\u53cd\u4e4b\u5219\u770b\u4e0d\u89c1\u3002**\u4e00\u4e2a\u6027\u8d28**\uff1a\u5728\u8fd9\u4e2a\u6784\u9020\u4e0b\uff0c\u4ece**\u51f8\u5305\u5916\u9762**\u770b $A,B,C$ \u662f\u9006\u65f6\u9488\u6392\u5217\u7684\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5b83\u5bf9\u5e94\u6709\u4e24\u4e2a\u9762\uff0c\u663e\u7136\u4e24\u4e2a\u9762\u4e2d\u5b83\u7684**\u65b9\u5411\u662f\u76f8\u53cd**\u7684\uff0c\u6240\u4ee5\u6bcf\u6761\u8fb9\u7684\u6bcf\u4e2a\u65b9\u5411\u5bf9\u5e94\u7740\u552f\u4e00\u7684\u8fb9\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $g_{i,j}$ \u6765\u8bb0\u5f55\u4ece\u70b9 $i$ \u5230\u70b9 $j$ \u7684\u8def\u5f84\u5bf9\u5e94\u7684\u9762\uff08\u540e\u9762\u6709\u7528\uff09\u3002\n\n\u627e\u63d2\u5165\u7684\u70b9\u80fd\u770b\u89c1\u7684**\u6240\u6709**\u9762\uff1a\u4ece\u4e0a\u9762\u627e\u5230\u7684\u9762 $dfs$ \u4e00\u904d\uff0c\u5b83\u7684\u4e09\u6761\u8fb9\u7684\u65b9\u5411\u53cd\u8fc7\u6765\u5c31\u662f\u6328\u7740\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u4f1a\u5f88\u65b9\u4fbf qwq\u3002\u5b9e\u73b0\u5f88\u7b80\u5355\u3002\n\n\u63a5\u4e0a\u4e00\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u627e**\u8fb9\u754c**\uff1a\u5728\u80fd\u770b\u89c1\u7684\u8303\u56f4\u5185\u5224\u65ad\u8fb9\u754c\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u770b\u6bcf\u6761\u8fb9\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u8fb9\u4f1a\u4e0d\u4f1a\u88ab\u770b\u89c1\u5c31\u53ef\u4ee5\u4e86\uff1b\u4e5f\u53ef\u4ee5\u653e\u8086\u5730\u9012\u5f52\uff0c\u9012\u5f52\u5230\u770b\u4e0d\u89c1\u7684\u9762\u65f6\uff0c\u9012\u5f52\u8fc7\u6765\u7684\u8fb9\u5c31\u662f\u8fb9\u754c\u4e86\u3002\n\n**Code\uff1a**\n\n```cpp\n#include <bits/stdc++.h>\n#define eps 1e-6\nusing namespace std;\nconst int N=2005;\nstruct node {\n\tdouble a,b,c;\n\tnode operator+(const node &p) const {return (node){a+p.a,b+p.b,c+p.c};}\n\tnode operator-(const node &p) const {return (node){a-p.a,b-p.b,c-p.c};}\n}a[N];\nstruct pm {\n\tint a,b,c;  \n\tbool flag;\n}p[N<<3];int top=0;\ndouble dc(node a,node b) {return a.a*b.a+a.b*b.b+a.c*b.c;}\ndouble getlen(node a) {return sqrt(a.a*a.a+a.b*a.b+a.c*a.c);}\nnode cc(node a,node b) {return (node){a.b*b.c-a.c*b.b,a.c*b.a-a.a*b.c,a.a*b.b-a.b*b.a};}\ndouble V(node x,pm y) {return dc(cc(a[y.b]-a[y.a],a[y.c]-a[y.a]),x-a[y.a]);}\nint f[N][N],n;\nvoid dfs(int x,int y);\nvoid deal(int x,int y,int z) {\n\tif(p[f[y][z]].flag) {\n\t\tif(V(a[x],p[f[y][z]])>eps) dfs(x,f[y][z]);\n\t\telse p[f[z][y]=f[y][x]=f[x][z]=++top].a=z,p[top].b=y,p[top].c=x,p[top].flag=1;\n\t}\n}\nvoid dfs(int x,int y) {p[y].flag=0,deal(x,p[y].b,p[y].a),deal(x,p[y].c,p[y].b),deal(x,p[y].a,p[y].c);}\ndouble get_convex() {\n\tfor(int i=1;i<=4;i++) {\n\t\tp[++top].a=(i+1>4?i-3:i+1),p[top].b=(i+2>4?i-2:i+2),p[top].c=(i+3>4?i-1:i+3),p[top].flag=1;\n\t\tif(V(a[i],p[top])>eps) swap(p[top].b,p[top].c);\n\t\tf[p[top].a][p[top].b]=f[p[top].b][p[top].c]=f[p[top].c][p[top].a]=top; \n\t}\n\tfor(int i=5;i<=n;i++) for(int j=1;j<=top;j++) if(p[j].flag&&V(a[i],p[j])>eps) {dfs(i,j);break;}\n\tint tmp=top;top=0;double S=0;\n\tfor(int i=1;i<=tmp;i++) if(p[i].flag) p[++top]=p[i];\n\tfor(int i=1;i<=top;i++) S+=getlen(cc(a[p[i].a]-a[p[i].b],a[p[i].a]-a[p[i].c]))/2;\n\treturn S;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf%lf\",&a[i].a,&a[i].b,&a[i].c);\n\tprintf(\"%.3lf\\n\",get_convex());\n\treturn 0;\n}\n```",
        "postTime": 1652174835,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P4724 \u9898\u89e3"
    },
    {
        "content": "###  1.\u524d\u7f00\u77e5\u8bc6\uff1a\n**\u5411\u91cf**\uff0c[\u4e8c\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P2742)\u3002\n\n\n\n------------\n###  2.\u89e3\u9898\u65b9\u6cd5\uff1a\n\n   \u5f88\u5bb9\u6613\u60f3\u5230\u66b4\u529b\u679a\u4e3e\u4efb\u610f $3$ \u4e2a\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u5224\u65ad\u5176\u4ed6\u70b9\u662f\u5426\u90fd\u5728\u4e09\u89d2\u5f62\u6784\u6210\u7684\u5e73\u9762\u7684\u4e00\u4fa7\uff0c\u5982\u679c\u662f\uff0c\u5219\u8fd9\u4e2a\u4e09\u89d2\u5f62\u662f\u51f8\u5305\u7684\u4e00\u4e2a\u9762\u3002~~\uff08\u4f46\u663e\u7136\u8fd9\u6837\u505a\u662f\u4e0d\u884c\u7684\uff09~~\n  \n   \u4e8e\u662f\u6211\u4eec\u91c7\u7528\u589e\u91cf\u6cd5\u3002\n  \n   ***\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u589e\u91cf\u6cd5\u9898\u76ee\uff1a[\u6700\u5c0f\u5706\u8986\u76d6](https://www.luogu.com.cn/problem/P1742)\u3002**\n\n   \u6211\u4eec\u628a\u70b9\u4e00\u4e2a\u4e2a\u7684\u52a0\u5165\u5230\u51f8\u5305\u4e2d\u3002\u9996\u5148\u627e\u5230 $4$ \u4e2a\u4e0d\u5171\u7ebf\u3001\u4e0d\u5171\u9762\u7684\u70b9\uff0c\u4e00\u8d77\u6784\u6210\u4e00\u4e2a\u56db\u9762\u4f53\uff0c\u8fd9\u662f\u521d\u59cb\u51f8\u5305\uff0c\u7136\u540e\u4f9d\u6b21\u68c0\u67e5\u5176\u4ed6\u70b9\uff0c\u770b\u8fd9\u4e2a\u70b9\u662f\u5426\u80fd\u5728\u539f\u51f8\u5305\u7684\u57fa\u7840\u4e0a\u6784\u6210\u65b0\u7684\u51f8\u5305\u3002\u4f8b\u5982\uff0c\u5f53\u68c0\u6d4b\u5230\u70b9  $p$  \u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n  \n  \uff08 1 \uff09\u5982\u679c $p$ \u5728\u5f53\u524d\u51f8\u5305\u5185\uff0c\u5ffd\u7565\u5b83\u3002\n   \n  \uff08 2 \uff09\u5982\u679c $p$ \u4e0d\u5728\u5f53\u524d\u51f8\u5305\u5185\uff0c\u8bf4\u660e $p$ \u53ef\u4ee5\u66f4\u65b0\u51f8\u5305\uff0c\u5177\u4f53\u505a\u6cd5\u662f\u4ece $p$ \u70b9\u5411\u51f8\u5305\u770b\u53bb\uff0c\u5c06\u80fd\u770b\u5230\u7684\u9762\u5168\u90e8\u5220\u9664\uff0c\u5e76\u628a $p$ \u548c\u7559\u4e0b\u7684\u8f6e\u5ed3\u7ec4\u6210\u65b0\u7684\u9762\uff0c\u586b\u8865\u88ab\u5220\u9664\u7684\u9762\u3002\n   \n   \u6c42\u9762\u79ef\u53ef\u4ee5\u5148\u6c42\u51fa\u5411\u91cf\u53c9\u79ef\uff08\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5411\u91cf\uff09\uff0c\u5728\u6c42\u5411\u91cf\u7684\u957f\u5ea6\u5373\u53ef\uff0c\u8fd4\u56de\u7684\u9762\u79ef\u662f**\u6709\u65b9\u5411\u7684**\u3002\n   \n```\ninline double Len(Vector3 A){//\u5411\u91cf\u7684\u957f\u5ea6 \n\treturn sqrt(Dot(A,A));\n}inline double Area2(Point3 A,Point3 B,Point3 C){//\u4e09\u89d2\u5f62\u6709\u5411\u9762\u79ef*2 \n\treturn Len(Cross(B-A,C-A));\n}\n```\n\n  \u5224\u65ad\u70b9  $p$  \u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u5c31\u7528\u70b9  $p$  \u5bf9\u4e09\u89d2\u5f62\u8fdb\u884c\u4e09\u89d2\u5256\u5206\uff0c\u5f62\u6210\u7684\u4e09\u4e2a\u4e09\u89d2\u5f62\u548c\u5927\u4e09\u89d2\u5f62\u7684\u9762\u79ef\u5e94\u8be5\u76f8\u7b49\u3002\n\n\n------------\n\n   \n   \u4e09\u7ef4\u51f8\u5305\u9898\u76ee\u7684\u76f8\u5173\u95ee\u9898\u6709\u51f8\u5305\u6709\u51e0\u4e2a\u8868\u9762\u3001\u51f8\u5305\u7684\u8868\u9762\u79ef\u3001\u51f8\u5305\u7684\u4f53\u79ef\u4ec0\u4e48\u7684\u3002\u3002~~\uff08\u867d\u7136\u6d1b\u8c37\u6ca1\u6709\uff0c\u8fd9\u771f\u662f\u592a\u53ef\u60dc\u4e86\u8981\u4e0d\u7136\u5c31\u591a\u500d\u7ecf\u9a8c\u4e86qwq\uff09~~\n   \n###    3.Code:\n\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-8\nusing namespace std;\nconst int N=2e3+10;\nstruct Point3{//\u4e09\u7ef4\uff1a\u70b9 \n\tdouble x,y,z;\n\tPoint3(){}\n\tPoint3(double x,double y,double z):x(x),y(y),z(z){};\n\tPoint3 operator + (Point3 B){//\u91cd\u5b9a\u4e49\u7a7a\u95f4\u5411\u91cf\u8fd0\u7b97 \n\t\treturn Point3(x+B.x,y+B.y,z+B.z);\n\t}\n\tPoint3 operator - (Point3 B){\n\t\treturn Point3(x-B.x,y-B.y,z-B.z);\n\t}\n\tPoint3 operator * (double k){\n\t\treturn Point3(x*k,y*k,z*k);\n\t}\n\tPoint3 operator / (double k){\n\t\treturn Point3(x/k,y/k,z/k);\n\t}\n};\ntypedef Point3 Vector3;\ninline double Dot(Vector3 A,Vector3 B){\n\treturn A.x*B.x+A.y*B.y+A.z*B.z; \n}\ninline Point3 Cross(Vector3 A,Vector3 B){\n\treturn Point3(A.y*B.z-A.z*B.y,A.z*B.x-A.x*B.z,A.x*B.y-A.y*B.x);\n}\ninline double Len(Vector3 A){//\u5411\u91cf\u7684\u957f\u5ea6 \n\treturn sqrt(Dot(A,A));\n}\ninline double volume4(Point3 A,Point3 B,Point3 C,Point3 D){//\u56db\u9762\u4f53\u6709\u5411\u4f53\u79ef*6 \n\treturn Dot(Cross(B-A,C-A),D-A);\n}\ninline double Area2(Point3 A,Point3 B,Point3 C){//\u4e09\u89d2\u5f62\u6709\u5411\u9762\u79ef*2 \n\treturn Len(Cross(B-A,C-A));\n}\nstruct CH3D{//CH3D\u6a21\u677f\uff08\u5efa\u8bae\u80cc\u4e0b\u6765\uff09 \n\tstruct face{\n\t\tint a,b,c;//\u51f8\u5305\u4e00\u9762\u4e0a3\u4e2a\u70b9\u7684\u7f16\u53f7 \n\t\tbool ok;//\u8be5\u9762\u662f\u5426\u5728\u6700\u7ec8\u7684\u51f8\u5305\u4e0a \n\t};\n\tint n;//\u521d\u59cb\u9876\u70b9\u6570 \n\tint num;//\u51f8\u5305\u8868\u9762\u4e09\u89d2\u5f62\u4e2a\u6570 \n\tint g[N][N];//\u70b9i\u5230\u70b9j\u5c5e\u4e8e\u54ea\u4e2a\u9762 \n\tPoint3 P[N];//\u521d\u59cb\u9876\u70b9 \n\tface F[N<<3];//\u51f8\u5305\u8868\u9762\u4e09\u89d2\u5f62 \n\tinline double dblcmp(Point3 &p,face &f){//\u70b9\u5728\u9762\u7684\u540c\u5411 \n\t\tPoint3 m=P[f.b]-P[f.a],n=P[f.c]-P[f.a];\n\t\tPoint3 t=p-P[f.a];\n\t\treturn Dot(Cross(m,n),t);\n\t}\n\tinline void dfs(int p,int now){//\u7ef4\u62a4\u51f8\u5305\uff0c\u5982\u679c\u70b9p\u5728\u51f8\u5305\u5916\u4fa7\u5219\u66f4\u65b0\u51f8\u5305 \n\t\tF[now].ok=0;\n\t\tdeal(p,F[now].b,F[now].a);\n\t\tdeal(p,F[now].c,F[now].b);\n\t\tdeal(p,F[now].a,F[now].c);\n\t}\n\tinline void deal(int p,int a,int b){\n\t\tint f=g[a][b];//\u641c\u7d22\u4e0e\u8be5\u8fb9\u76f8\u90bb\u7684\u53e6\u4e00\u4e2a\u5e73\u9762 \n\t\tface add;\n\t\tif(F[f].ok){\n\t\t\tif(dblcmp(P[p],F[f])>eps) dfs(p,f);//\u5982\u679c\u4ece\u70b9p\u80fd\u770b\u5230\u9762f\uff0c\u5219\u7ee7\u7eed\u6df1\u5ea6\u641c\u7d22f\u76843\u6761\u8fb9\uff0c\u4ee5\u66f4\u65b0\u65b0\u7684\u51f8\u9762 \n\t\t\telse{//\u5982\u679c\u4ecep\u70b9\u770b\u4e0d\u5230f\u9762\uff0c\u5219\u70b9p\u4e0e\u70b9a,b\u7ec4\u6210\u4e00\u4e2a\u4e09\u89d2\u5f62 \n\t\t\t\tadd.a=b,add.b=a;\n\t\t\t\tadd.c=p,add.ok=true;\n\t\t\t\tg[p][b]=g[a][p]=g[b][a]=num;\n\t\t\t\tF[num++]=add;\n\t\t\t} \n\t\t}\n\t}\n\tinline bool same(int s,int t){//\u5224\u65ad\u4e24\u70b9\u662f\u5426\u662f\u540c\u4e00\u4e2a\u9762 \n\t\tPoint3 &a=P[F[s].a],&b=P[F[s].b],&c=P[F[s].c];\n\t\treturn fabs(volume4(a,b,c,P[F[t].a]))<eps&&fabs(volume4(a,b,c,P[F[t].b]))<eps&&fabs(volume4(a,b,c,P[F[t].c]))<eps;\n\t}\n\tinline void create(){//\u6784\u5efa\u4e09\u7ef4\u51f8\u5305 \n\t\tint tmp;num=0;\n\t\tface add;\n\t\tif(n<4) return;//\u524d4\u4e2a\u70b9\u4e0d\u5171\u9762 \n\t\tbool flag=true;\n\t\tfor(int i=1;i<n;i++){//\u4f7f\u524d\u4e24\u4e2a\u70b9\u4e0d\u5171\u70b9 \n\t\t\tif(Len(P[0]-P[i])>eps){\n\t\t\t\tswap(P[1],P[i]);\n\t\t\t\tflag=false;break;\n\t\t\t}\n\t\t}\n\t\tif(flag) return;\n\t\tflag=true;\n\t\tfor(int i=2;i<n;i++){//\u4f7f\u524d\u4e09\u4e2a\u70b9\u4e0d\u5171\u7ebf \n\t\t\tif(Len(Cross(P[0]-P[1],P[1]-P[i]))>eps){\n\t\t\t\tswap(P[2],P[i]);\n\t\t\t\tflag=false;break;\n\t\t\t}\n\t\t}\n\t\tif(flag) return;\n\t\tflag=true;\n\t\tfor(int i=3;i<n;i++){//\u4f7f\u524d\u56db\u4e2a\u70b9\u4e0d\u5171\u9762 \n\t\t\tif(fabs(Dot(Cross(P[0]-P[1],P[1]-P[2]),P[0]-P[i]))>eps){\n\t\t\t\tswap(P[3],P[i]);\n\t\t\t\tflag=false;break;\n\t\t\t}\n\t\t}\n\t\tif(flag) return;\n\t\tfor(int i=0;i<4;i++){//\u6784\u5efa\u521d\u59cb\u56db\u9762\u4f53\uff08\u56db\u4e2a\u70b9\u4e3ap[0],p[1],p[2],p[3]) \n\t\t\tadd.a=(i+1)%4,add.b=(i+2)%4;\n\t\t\tadd.c=(i+3)%4;add.ok=true;\n\t\t\tif(dblcmp(P[i],add)>0) swap(add.b,add.c);//\u4fdd\u8bc1\u9006\u65f6\u9488\uff0c\u5373\u6cd5\u5411\u91cf\u671d\u5916\uff0c\u8fd9\u6837\u65b0\u70b9\u624d\u80fd\u201c\u770b\u5230\u201d \n\t\t\tg[add.a][add.b]=g[add.b][add.c]=g[add.c][add.a]=num;//\u9006\u5411\u7684\u6709\u5411\u8fb9\u4fdd\u5b58 \n\t\t\tF[num++]=add;\n\t\t}\n\t\tfor(int i=4;i<n;i++){//\u6784\u5efa\u66f4\u65b0\u51f8\u5305 \n\t\t\tfor(int j=0;j<num;j++){//\u5224\u65ad\u70b9\u662f\u5426\u5728\u5f53\u524d\u51f8\u5305\u5185\uff0ci\u8868\u793a\u5f53\u524d\u70b9\uff0cj\u8868\u793a\u5f53\u524d\u9762 \n\t\t\t\tif(F[j].ok&&dblcmp(P[i],F[j])>eps){//\u5bf9\u5f53\u524d\u51f8\u5305\u9762\u8fdb\u884c\u5224\u65ad\uff0c\u770b\u70b9\u80fd\u5426\u770b\u5230\u5f53\u524d\u9762 \n\t\t\t\t\tdfs(i,j);break;//\u70b9\u80fd\u770b\u5230\u5f53\u524d\u9762\uff0c\u66f4\u65b0\u51f8\u5305\u7684\u9762 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttmp=num;\n\t\tfor(int i=num=0;i<tmp;i++) if(F[i].ok) F[num++]=F[i];\n\t}\n\tinline double area(){//\u51f8\u5305\u7684\u8868\u9762\u79ef \n\t\tdouble res=0;\n\t\tfor(int i=0;i<num;i++) \n\n------------\nres+=Area2(P[F[i].a],P[F[i].b],P[F[i].c]);\n\t\treturn res/2.000;\n\t}\n\t//\u8fd9\u4e9b\u64cd\u4f5c\u672c\u9898\u7528\u4e0d\u5230\u3002 \n//\tdouble volume(){//\u4f53\u79ef \n//\t\tdouble res=0;\n//\t\tPoint3 tmp(0,0,0);\n//\t\tfor(int i=0;i<num;i++) res+=volume4(tmp,P[F[i].a],P[F[i].b],P[F[i].c]);\n//\t\treturn fabs(res/6.00);\n//\t}\n//\tint triangle(){//\u8868\u9762\u4e09\u89d2\u5f62\u4e2a\u6570 \n//\t\treturn num;\n//\t}\n//\tint polygon(){//\u8868\u9762\u591a\u8fb9\u5f62\u4e2a\u6570 \n//\t\tint res,flag;\n//\t\tfor(int i=res=0;i<num;i++){\n//\t\t\tflag=1;\n//\t\t\tfor(int j=0;j<i;j++){\n//\t\t\t\tif(same(i,j)){\n//\t\t\t\t\tflag=0;break;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\tres+=flag;\n//\t\t}\n//\t\treturn res;\n//\t}\n};\nCH3D hull;\nint main(){\n\tscanf(\"%d\",&hull.n);\n\tfor(int i=0;i<hull.n;i++) scanf(\"%lf%lf%lf\",&hull.P[i].x,&hull.P[i].y,&hull.P[i].z);\n\thull.create();\n\tprintf(\"%.3lf\\n\",hull.area());//\u672c\u9898\u662f\u6c42\u51f8\u5305\u8868\u9762\u79ef \n\treturn 0;\n}\n```\n\n   ~~\u7248\u5b50\u5efa\u8bae\u7a0d\u52a0\u7406\u89e3\u540e\u76f4\u63a5\u80cc\uff0c\u8fd9\u73a9\u610f\u81ea\u5df1\u5199\u4f30\u8ba1\u8981\u6b7b\u3002\u3002~~\n   \n  ",
        "postTime": 1651415880,
        "uid": 467203,
        "name": "Kaenbyou_Rin",
        "ccfLevel": 0,
        "title": "P4724 \u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305  \u9898\u89e3"
    },
    {
        "content": "## \u4e09\u7ef4\u51f8\u5305 \u5b66\u4e60\u7b14\u8bb0\n\n[P4724 \u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305](https://www.luogu.com.cn/problem/P4724)\n\n### \u4e00\u4e9b\u8ba1\u7b97\u51e0\u4f55\u57fa\u7840\n\n\u4e09\u7ef4\u7a7a\u95f4\u5185\u7ed9\u4e00\u5806\u70b9\uff0c\u6c42\u5176\u4e09\u7ef4\u51f8\u5305\u7684\u8868\u9762\u79ef\u3002\n\n\u5176\u5b9e\u4f53\u79ef\u4e5f\u80fd\u6c42\uff0c\u6700\u540e\u4f1a\u5199\u3002\n\n\u9996\u5148\u8981\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cf\u6765\u8868\u793a\u70b9\uff0c\u65b9\u4fbf\u8ba1\u7b97\u3002\n\n```cpp\nconst double eps=1e-9;\ndouble randeps() {return (rand()/(double)RAND_MAX-0.5)*eps;}\nstruct vec {\n\tdouble x,y,z;\n\tvec(){x=y=z=0;}\n\tvec(double x_,double y_,double z_){x=x_,y=y_,z=z_;}\n\tvoid shake() {x+=randeps(),y+=randeps(),z+=randeps();}\n\tdouble len() {return sqrt(x*x+y*y+z*z);}\n\tvec operator + (const vec &t) {return vec(x+t.x,y+t.y,z+t.z);}\n\tvec operator - (const vec &t) {return vec(x-t.x,y-t.y,z-t.z);}\n}p[N];\ndouble dot(const vec &a,const vec &b) {return a.x*b.x+a.y*b.y+a.z*b.z;}\nvec crs(const vec &a,const vec &b) {return vec(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x);}\n```\n\n\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\n\n+ \u4e09\u7ef4\u5411\u91cf\u7684\u53c9\u79ef\u4e0d\u662f\u6570\uff0c\u8fd8\u662f\u5411\u91cf\uff0c\u65b9\u5411\u5782\u76f4\u4e8e\u53c9\u79ef\u7684\u4e24\u4e2a\u5411\u91cf\u6240\u5728\u7684\u5e73\u9762\uff0c\u6a21\u957f\u5c31\u662f\u6709\u5411\u9762\u79ef\u3002\n+ \u5927\u5bb6\u4f1a\u53d1\u73b0\u6709\u4e2ashake\u51fd\u6570\u3002\u90a3\u4e2a\u662f\u4e3a\u4e86\u9632\u6b62\u56db\u70b9\u5171\u9762\uff0c\u5426\u5219\u5728\u540e\u9762\u6c42\u51f8\u5305\u7684\u8fc7\u7a0b\u4f1a\u51fa\u9519\u3002\n\n\u5173\u4e8e\u5982\u4f55\u8bb0\u5f55\u51f8\u5305\uff1a\u8003\u8651\u5230\u51f8\u5305\u662f\u7531\u4e00\u5806\u5e73\u9762\uff0c\u76f4\u63a5**\u6309\u7167\u9006\u65f6\u9488\u65b9\u5411**\u8bb0\u5f55\u6bcf\u4e2a\u9762\u7684\u4e09\u4e2a\u70b9\uff08\u4e4b\u524d\u9632\u6b62\u56db\u70b9\u5171\u9762\u7684\u539f\u56e0\uff09\n\n```cpp\nstruct face {\n\tint v[3];\n\tface(){v[0]=v[1]=v[2]=0;}\n\tface(int a,int b,int c) {v[0]=a,v[1]=b,v[2]=c;}\n\tvec normal() {return crs(p[v[1]]-p[v[0]],p[v[2]]-p[v[0]]);}//\u53c9\u79ef\uff0c\u6a21\u957f\u662f\u9762\u79ef\u76842\u500d\n\tdouble area() {return normal().len()/2.0;}//\u9762\u79ef\n}cv[N],h[N];\n```\n\n### \u6784\u9020\u51f8\u5305\n\n![](https://i.loli.net/2020/07/12/S9cfUJTzWYqHdXa.png)\n\n(\u5f15\u81ea\u535a\u5ba2<https://www.cnblogs.com/-sunshine/archive/2012/08/25/2656794.html>)\n\n\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u5f20\u56fe\u3002\n\n\u589e\u91cf\u6cd5\u6784\u9020\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u628a\u5b83\u770b\u4e0d\u89c1\u7684\u70b9\u4fdd\u7559\u5728\u51f8\u5305\u5185\uff0c\u7136\u540e\u628a\u4e0a\u56fe\u52a0\u7c97\u7684\u68f1\u4e0e\u65b0\u589e\u7684\u70b9\u7ec4\u6210\u4e00\u4e2a\u9762\uff0c\u52a0\u5165\u51f8\u5305\u3002\n\n+ \u5224\u5b9a\u80fd\u5426\u770b\u5230\uff1a\u628a\u90a3\u4e2aface\u7684normal\uff08\u6cd5\u5411\u91cf\uff09\u4e0e\u65b0\u589e\u7684\u70b9\u70b9\u4e58\uff0c\u770b\u6b63\u8d1f\u3002\u770b\u5f97\u5230\u5219\u4e3a\u6b63\u3002\uff08\u5176\u5b9e\u5c31\u662f\u770b\u4e0e\u6cd5\u5411\u91cf\u7684\u5939\u89d2\uff0c\u5224\u65ad\u70b9\u662f\u5426\u5728\u5e73\u9762\u4e0a\u65b9\uff09\n+ \u5224\u65ad\u7c97\u8fb9\u3002\u4ee3\u7801\u4e2d\u4f53\u73b0\u4e3a $vis[x][y]\\&\\&!vis[y][x]$  \u3002\u90a3\u4e48xy\u5c31\u662f\u5206\u5272\u7ebf\u3002\n\n\u6a21\u62df\u4e0a\u8ff0\u8fc7\u7a0b\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n^2)$\uff1a\n\n```cpp\nint cansee(face A,vec b) {return dot(b-p[A.v[0]],A.normal())>0;}\nint n,th,cnt,vis[N][N];\ndouble ans;\nvoid convex() {\n\tcnt=th=0;\n\tcv[++cnt]=face(1,2,3);\n\tcv[++cnt]=face(3,2,1);\n\tfor(rint i=4;i<=n;++i) {\n\t\tfor(rint j=1,v;j<=cnt;++j) {\n\t\t\tif(!(v=cansee(cv[j],p[i])))h[++th]=cv[j];\n\t\t\tfor(rint k=0;k<3;++k) \n\t\t\t\tvis[cv[j].v[k]][cv[j].v[k>1?0:k+1]]=v;\n\t\t}\n\t\tfor(rint j=1;j<=cnt;++j)\n\t\t\tfor(rint k=0;k<3;++k) {\n\t\t\t\tint x=cv[j].v[k],y=cv[j].v[k>1?0:k+1];\n\t\t\t\tif(vis[x][y]&&!vis[y][x])h[++th]=face(x,y,i);\n\t\t\t}\n\t\tfor(rint j=1;j<=th;++j)cv[j]=h[j];\n\t\tcnt=th,th=0;\n\t}\n}\n```\n\n\u51f8\u5305\u6784\u9020\u5b8c\u6bd5\uff01\n\n\u8ba1\u7b97\u8868\u9762\u79ef\u7684\u8bdd\uff0c\u628a\u6bcf\u4e2a\u9762\u7684normal\u7684\u6a21\u957f\u52a0\u8d77\u6765\u9664\u4ee52.\n\n\u6a21\u677f\u9898\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned int uint;\n#define rint register int\n#define pb push_back\n//#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2) EOF:*p1++)\n//char buf[1<<21],*p1=buf,*p2=buf;\ninline int rd() {\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n    return x*f;\n}\nconst int N=2010;\nconst double eps=1e-9;\ndouble randeps() {return (rand()/(double)RAND_MAX-0.5)*eps;}\nstruct vec {\n\tdouble x,y,z;\n\tvec(){x=y=z=0;}\n\tvec(double x_,double y_,double z_){x=x_,y=y_,z=z_;}\n\tvoid shake() {x+=randeps(),y+=randeps(),z+=randeps();}\n\tdouble len() {return sqrt(x*x+y*y+z*z);}\n\tvec operator + (const vec &t) {return vec(x+t.x,y+t.y,z+t.z);}\n\tvec operator - (const vec &t) {return vec(x-t.x,y-t.y,z-t.z);}\n}p[N];\ndouble dot(const vec &a,const vec &b) {return a.x*b.x+a.y*b.y+a.z*b.z;}\nvec crs(const vec &a,const vec &b) {return vec(a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x);}\nstruct face {\n\tint v[3];\n\tface(){v[0]=v[1]=v[2]=0;}\n\tface(int a,int b,int c) {v[0]=a,v[1]=b,v[2]=c;}\n\tvec normal() {return crs(p[v[1]]-p[v[0]],p[v[2]]-p[v[0]]);}\n\tdouble area() {return normal().len()/2.0;}\n}cv[N],h[N];\nint cansee(face A,vec b) {return dot(b-p[A.v[0]],A.normal())>0;}\nint n,th,cnt,vis[N][N];\ndouble ans;\nvoid convex() {\n\tcnt=th=0;\n\tcv[++cnt]=face(1,2,3);\n\tcv[++cnt]=face(3,2,1);\n\tfor(rint i=4;i<=n;++i) {\n\t\tfor(rint j=1,v;j<=cnt;++j) {\n\t\t\tif(!(v=cansee(cv[j],p[i])))h[++th]=cv[j];\n\t\t\tfor(rint k=0;k<3;++k) \n\t\t\t\tvis[cv[j].v[k]][cv[j].v[k>1?0:k+1]]=v;\n\t\t}\n\t\tfor(rint j=1;j<=cnt;++j)\n\t\t\tfor(rint k=0;k<3;++k) {\n\t\t\t\tint x=cv[j].v[k],y=cv[j].v[k>1?0:k+1];\n\t\t\t\tif(vis[x][y]&&!vis[y][x])h[++th]=face(x,y,i);\n\t\t\t}\n\t\tfor(rint j=1;j<=th;++j)cv[j]=h[j];\n\t\tcnt=th,th=0;\n\t}\n}\nvoid calc() {for(rint i=1;i<=cnt;++i)ans+=cv[i].area();}\nsigned main() {\n\tsrand(time(0));\n\tn=rd();\n\tfor(rint i=1;i<=n;++i)\n\t\tscanf(\"%lf%lf%lf\",&p[i].x,&p[i].y,&p[i].z),p[i].shake();\n\tconvex();calc();\n\tprintf(\"%.3lf\\n\",ans);\n\treturn 0;\n}\n```\n\n\n\n\u8ba1\u7b97\u4f53\u79ef\uff1a[darkbzoj #1964. hull \u4e09\u7ef4\u51f8\u5305](https://darkbzoj.tk/problem/1964)\n\n\u53ea\u9700\u8981\u5728\u6784\u9020\u51fa\u51f8\u5305\u540e\u66f4\u6539calc\u51fd\u6570\uff0c\u6bcf\u6b21\u8ba1\u7b97 p[1] \u4e0e\u6bcf\u4e2a\u9762\u7ec4\u6210\u4e09\u68f1\u9525\u7684\u4f53\u79ef\uff0c\u76f8\u52a0\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u7528\u5411\u91cf\u5f88\u65b9\u4fbf\uff1a\n\n```cpp\ndouble vol6(vec a,vec b,vec c,vec d) {\n\treturn dot(crs(b-a,c-a),d-a);\n} //\u8ba1\u7b97\u4f53\u79ef\u76846\u500d\u3002\u7406\u89e3\uff1a\u5148\u7b97\u51fa\u5e95\u7684\u6709\u5411\u9762\u79ef\u76842\u500d\uff0c\u5411\u91cf\u7684\u65b9\u5411\u53d8\u4e3a\u9ad8\uff0c\u7136\u540e\u70b9\u4e58\u5c31\u662f\u53e6\u4e00\u6761\u8fb9\u5728\u9ad8\u65b9\u5411\u7684\u6295\u5f71\uff0c\u7531\u4f53\u79ef\u516c\u5f0f(V=1/3*Sh)\uff0c\u8fd9\u4e2a\u503c\u5c31\u662f\u4f53\u79ef\u76846\u500d\nvoid calc() {\n\tfor(rint i=1;i<=cnt;++i)\n\t\tans+=fabs(vol6(p[1],p[cv[i].v[0]],p[cv[i].v[1]],p[cv[i].v[2]]));\n\tans/=6;\n}\n```\n\n",
        "postTime": 1594644792,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4724 \u3010\u3010\u6a21\u677f\u3011\u4e09\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "```\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\nusing namespace std;\n#define PR 1e-8\n#define N 2100\n  \nstruct TPoint{\n\n      double x,y,z;\n      TPoint(){}\n      TPoint(double _x,double _y,double _z):x(_x),y(_y),z(_z){}\n      TPoint operator-(const TPoint p) {return TPoint(x-p.x,y-p.y,z-p.z);}\n      TPoint operator*(const TPoint p) {return TPoint(y*p.z-z*p.y,z*p.x-x*p.z,x*p.y-y*p.x);}//\u53c9\u79ef\n      double operator^(const TPoint p) {return x*p.x+y*p.y+z*p.z;}//\u70b9\u79ef\n  };\n\n  struct fac{\n\n\t  int a,b,c;\n      bool ok;\n  };\n\n  struct T3dhull{\n\n      int n;//\u521d\u59cb\u70b9\u6570\n      TPoint ply[N];//\u521d\u59cb\u70b9\n      int trianglecnt;//\u51f8\u5305\u4e0a\u4e09\u89d2\u5f62\u6570\n      fac tri[N];//\u51f8\u5305\u4e09\u89d2\u5f62\n      int vis[N][N];//\u70b9i\u5230\u70b9j\u662f\u5c5e\u4e8e\u54ea\u4e2a\u9762\n      double dist(TPoint a){return sqrt(a.x*a.x+a.y*a.y+a.z*a.z);}//\u4e24\u70b9\u957f\u5ea6\n      double area(TPoint a,TPoint b,TPoint c){return dist((b-a)*(c-a));}//\u4e09\u89d2\u5f62\u9762\u79ef*2\n      double volume(TPoint a,TPoint b,TPoint c,TPoint d){return (b-a)*(c-a)^(d-a);}//\u56db\u9762\u4f53\u6709\u5411\u4f53\u79ef*6\n      double ptoplane(TPoint &p,fac &f){\n          TPoint m=ply[f.b]-ply[f.a],n=ply[f.c]-ply[f.a],t=p-ply[f.a];\n          return (m*n)^t;\n      }\n      void deal(int p,int a,int b){\n          int f=vis[a][b];\n          fac add;\n          if(tri[f].ok){\n              if((ptoplane(ply[p],tri[f]))>PR) dfs(p,f);\n              else{\n                  add.a=b,add.b=a,add.c=p,add.ok=1;\n                  vis[p][b]=vis[a][p]=vis[b][a]=trianglecnt;\n                  tri[trianglecnt++]=add;\n              }\n          }\n      }\n      void dfs(int p,int cnt){//\u7ef4\u62a4\u51f8\u5305\n          tri[cnt].ok=0;\n          deal(p,tri[cnt].b,tri[cnt].a);\n          deal(p,tri[cnt].c,tri[cnt].b);\n          deal(p,tri[cnt].a,tri[cnt].c);\n      }\n      bool same(int s,int e){\n          TPoint a=ply[tri[s].a],b=ply[tri[s].b],c=ply[tri[s].c];\n          return fabs(volume(a,b,c,ply[tri[e].a]))<PR\n              &&fabs(volume(a,b,c,ply[tri[e].b]))<PR\n              &&fabs(volume(a,b,c,ply[tri[e].c]))<PR;\n      }\n      void construct(){//\u6784\u5efa\u51f8\u5305\n          int i,j;\n          trianglecnt=0;\n          if(n<4) return;\n          bool tmp=true;\n          for(i=1;i<n;i++){//\u524d\u4e24\u70b9\u4e0d\u5171\u70b9\n              if((dist(ply[0]-ply[i]))>PR){\n                  swap(ply[1],ply[i]);\n                  tmp=false;\n                  break;\n              }\n          }\n          if(tmp) return;\n          tmp=true;\n          for(i=2;i<n;i++){//\u524d\u4e09\u70b9\u4e0d\u5171\u7ebf\n              if((dist((ply[0]-ply[1])*(ply[1]-ply[i])))>PR){\n                  swap(ply[2],ply[i]);\n                  tmp=false;\n                  break;\n              }\n          }\n          if(tmp) return;\n          tmp=true;\n          for(i=3;i<n;i++){//\u524d\u56db\u70b9\u4e0d\u5171\u9762\n              if(fabs((ply[0]-ply[1])*(ply[1]-ply[2])^(ply[0]-ply[i]))>PR){\n                  swap(ply[3],ply[i]);\n                  tmp=false;\n                  break;\n              }\n          }\n          if(tmp) return;\n          fac add;\n          for(i=0;i<4;i++){\n              add.a=(i+1)%4,add.b=(i+2)%4,add.c=(i+3)%4,add.ok=1;\n              if((ptoplane(ply[i],add))>0) swap(add.b,add.c);//\u6cd5\u5411\u91cf\u671d\u5916\n              vis[add.a][add.b]=vis[add.b][add.c]=vis[add.c][add.a]=trianglecnt;//\u9006\u5411\u7684\u6709\u5411\u8fb9\u4fdd\u5b58\n              tri[trianglecnt++]=add;\n          }\n          for(i=4;i<n;i++){//\u6784\u5efa\u66f4\u65b0\u51f8\u5305\n              for(j=0;j<trianglecnt;j++){\n                  if(tri[j].ok&&(ptoplane(ply[i],tri[j]))>PR){\n                      dfs(i,j);\n                      break;\n                  }\n              }\n          }\n          int cnt=trianglecnt;\n          trianglecnt=0;\n          for(i=0;i<cnt;i++){\n              if(tri[i].ok)\n                  tri[trianglecnt++]=tri[i];\n          }\n      }\n      double area(){//\u8868\u9762\u79ef\n          double ret=0;\n          for(int i=0;i<trianglecnt;i++)\n              ret+=area(ply[tri[i].a],ply[tri[i].b],ply[tri[i].c]);\n          return ret/2;\n      }\n      double volume(){//\u4f53\u79ef\n          TPoint p(0,0,0);\n          double ret=0;\n          for(int i=0;i<trianglecnt;i++)\n              ret+=volume(p,ply[tri[i].a],ply[tri[i].b],ply[tri[i].c]);\n          return fabs(ret/6);\n      }\n      int facetri() {return trianglecnt;}//\u8868\u9762\u4e09\u89d2\u5f62\u6570\n      int facepolygon(){//\u8868\u9762\u591a\u8fb9\u5f62\u6570\n          int ans=0,i,j,k;\n          for(i=0;i<trianglecnt;i++){\n              for(j=0,k=1;j<i;j++)\n                  if(same(i,j)){\n                      k=0;\n                      break;\n                  }\n              ans+=k;\n          }\n          return ans;\n      }\n}hull;\n\nint main(){\n\n    \tscanf(\"%d\",&hull.n);\n    \tint i;\n    \tfor(i=0;i<hull.n;i++)\n        \tscanf(\"%lf%lf%lf\",&hull.ply[i].x,&hull.ply[i].y,&hull.ply[i].z);\n    \thull.construct();\n    \tprintf(\"%.3lf\\n\",hull.area());\n    \treturn 0;\n}\n```",
        "postTime": 1538727697,
        "uid": 90615,
        "name": "opened",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4724"
    }
]