[
    {
        "content": "### \u89e3\u6cd5\uff1a\u7ebf\u6bb5\u6811\u5206\u6cbb + LCT\u7ef4\u62a4MST\n\n~~\u597d\u4e86\u73b0\u5728\u8d76\u7d27\u81ea\u5df1\u8bd5\u7740\u5199\u4e00\u4e2a~~  \n\n\u7b97\u662f\u4e00\u9053\u6bd4\u8f83\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u5206\u6cbb\u6a21\u578b\uff1f(\u96fe)  \n\n\u9898\u76ee\u8bf4\u4e86\u6bcf\u6761\u8fb9\u53ea\u5728\u4e00\u4e2a\u65f6\u95f4\u6bb5\u4e2d\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u65f6\u95f4\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u628a\u8fd9\u4e9b\u8fb9\u653e\u5230\u7ebf\u6bb5\u6811\u4e2d\uff0c\u663e\u7136\u6700\u7ec8\u7ebf\u6bb5\u6811\u4e2d\u53ea\u4f1a\u6709 $\\text O (n \\log n)$ \u6761\u8fb9\u3002\n\n\u52a0\u5b8c\u8fb9\u4e4b\u540e\u5c31\u53ef\u4ee5\u5de6\u53f3\u9012\u5f52\u5206\u6cbb\u4e86\uff0c\u6bcf\u8d70\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u628a\u4e0a\u9762\u6807\u8bb0\u7684\u8fb9\u90fd\u52a0\u5230 LCT \u4e0a\uff0c\u6ce8\u610f\u56de\u6eaf\u7684\u65f6\u5019\u4e5f\u8981\u628a\u8fd9\u4e9b\u8fb9\u65ad\u6389\u3002\n\n\u6bcf\u6b21\u8d70\u5230\u53f6\u8282\u70b9\uff0c\u76f4\u63a5\u8f93\u51fa\u5f53\u524d LCT \u4e2d\u7684\u8fb9\u6743\u548c\u5c31\u662f\u7b54\u6848\u3002\n\n\u5176\u4e2d\uff0c\u52a0\u8fb9\u7684\u8fc7\u7a0b\u548c\u666e\u901a\u7684 LCT \u7ef4\u62a4 MST \u505a\u6cd5\u4e00\u6837\uff0c\u52a0\u8fb9\u65f6\u627e\u51fa\u8fde\u63a5\u8fd9\u4e24\u70b9\u8def\u5f84\u4e0a\u6743\u6700\u5927\u7684\u8fb9\uff0c\u628a\u5b83\u65ad\u6389\uff0c\u518d\u628a\u73b0\u5728\u8fd9\u6761\u8fb9\u8fde\u4e0a\u53bb\u3002  \n\n\u5f53\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u65ad\u6389\u7684\u8fb9\uff0c\u56de\u6eaf\u7684\u65f6\u5019\u4e5f\u8981\u518d\u8fde\u4e0a\u3002  \n\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u8fde/\u65ad\u8fb9\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\text O (n \\log^2 n)$\u3002  \n\nps\uff1a\u4e0d\u77e5\u9053\u8fd9\u4e2a\u80fd\u4e0d\u80fd\u53eb\u201c\u53ef\u56de\u9000\u5316 LCT\u201d\uff1f\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#define N 200003\n#define reg register\n#define ll long long\n#define ls son[u][0]\n#define rs son[u][1]\n#define mid ((l+r)>>1)\nusing namespace std;\n\nstruct edge{\n    int u,v,w;\n    inline edge(int u=0,int v=0,int w=0):u(u),v(v),w(w){}\n}ed[N];\n\nint a[N],st[N];\nvector<int> adj[N*3];\nint n,m;\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nstruct Link_Cut_Tree{ //\u677f\u5b50,\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n    int rev[N],pos[N],fa[N],son[N][2];\n\n    inline void pushup(int u){\n        pos[u] = u;\n        if(ls&&a[pos[ls]]>a[pos[u]]) pos[u] = pos[ls];\n        if(rs&&a[pos[rs]]>a[pos[u]]) pos[u] = pos[rs];\n    }   \n\n    inline void pushr(int u){\n        swap(ls,rs);\n        rev[u] ^= 1;\n    }\n\n    inline void pushdown(int u){\n        if(!rev[u]) return;\n        if(ls) pushr(ls);\n        if(rs) pushr(rs);\n        rev[u] = 0;\n    }\n\n    inline bool notrt(int u){\n        return son[fa[u]][0]==u||son[fa[u]][1]==u;\n    }\n\n    inline void rotate(int x){\n        int y = fa[x],z = fa[y];\n        int k = son[y][1]==x,w = son[x][k^1];\n        if(notrt(y)) son[z][son[z][1]==y] = x;\n        son[x][k^1] = y;\n        son[y][k] = w;\n        if(w) fa[w] = y;\n        fa[y] = x,fa[x] = z;\n        pushup(y);\n    }\n\n    inline void splay(int x){\n        reg int y = x,z = 0;\n        st[++z] = y;\n        while(notrt(y)) st[++z] = y = fa[y];\n        while(z) pushdown(st[z--]);\n        while(notrt(x)){\n            y = fa[x],z = fa[y];\n            if(notrt(y))\n                rotate((son[z][1]==y)==(son[y][1]==x)?y:x);\n            rotate(x);  \n        }\n        pushup(x);\n    }\n\n    inline void access(int u){\n        for(reg int v=0;u;u=fa[u]){\n            splay(u),rs = v;\n            pushup(u),v = u;\n        }\n    }\n\n    inline void makeroot(int u){\n        access(u),splay(u);\n        pushr(u);\n    }\n\n    inline void split(int u,int v){\n        makeroot(u);\n        access(v),splay(v);\n    }\n\n    inline void link(int u,int v){\n        makeroot(u);\n        fa[u] = v;\n    }\n\n    inline void cut(int u,int v){\n        split(u,v);\n        son[v][0] = fa[u] = 0;\n        pushup(v);\n    }\n\n    inline int query(int u,int v){\n        split(u,v);\n        return pos[v];\n    }\n\n    inline int findroot(int u){\n        access(u),splay(u);\n        pushdown(u);\n        while(ls){\n            u = ls;\n            pushdown(u);\n        }\n        splay(u);\n        return u;\n    }\n\n    inline bool linked(int u,int v){\n        makeroot(u);\n        return findroot(v)==u;\n    }\n}T;\n\nconst int lim = 32766;\nint s1[N],s2[N]; //\u8fd9\u662f\u4e24\u4e2a\u6808,\u8bb0\u5f55\u8fb9\u548c\u5b83\u7684\u72b6\u6001 \u5220\u9664/\u6dfb\u52a0\nint top,cnt;\nll ans = 1; //\u7b54\u6848\u8981 +1\n\nvoid insert(int nl,int nr,int l,int r,int u,int k){\n    if(nl<=l&&r<=nr){ //\u52a0\u5165\u4e00\u6761\u8fb9,\u6ce8\u610f\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u4e0d\u7528\u4e5f\u4e0d\u80fd\u4e0b\u4f20\u6807\u8bb0\n        adj[u].push_back(k);\n        return; \n    }\n    if(nl<=mid) insert(nl,nr,l,mid,u<<1,k);\n    if(nr>mid) insert(nl,nr,mid+1,r,u<<1|1,k);\n}\n\nvoid solve(int l,int r,int x){\n    int d,u,v,w,j,lst = top,ln = adj[x].size();\n    for(reg int i=0;i<ln;++i){\n        j = adj[x][i];\n        u = ed[j].u,v = ed[j].v;\n        w = ed[j].w;\n        if(T.linked(u,v)){\n            d = T.query(u,v)-n;\n            if(ed[d].w<=w) continue; //\u5f53\u524d\u8fb9\u6743\u6bd4\u8def\u5f84\u4e0a\u6700\u5927\u7684\u8fd8\u5927,\u5c31\u4e0d\u7528\u52a0\u8fdb\u53bb\n            ans -= ed[d].w;\n            T.cut(ed[d].u,d+n),T.cut(ed[d].v,d+n); \n\t\t\ts1[++top] = d; \n\t\t\ts2[top] = -1;\n        } \n        T.link(u,n+j),T.link(n+j,v);\n        s1[++top] = j;\n        s2[top] = 1;\n        ans += w;\n    }\n    if(l==r) printf(\"%lld\\n\",ans);\n\telse{\n\t\tsolve(l,mid,x<<1);\n\t\tsolve(mid+1,r,x<<1|1);\n\t}\n\twhile(top>lst){ //\u56de\u6eaf\n\t\td = s1[top];\n\t\tu = ed[d].u,v = ed[d].v;\n\t\tw = ed[d].w;\n\t\tif(s2[top]==-1){\n\t\t\tT.link(u,d+n),T.link(v,d+n);\n\t\t\tans += w;\n\t\t}else{\n\t\t\tT.cut(u,d+n),T.cut(v,d+n);\n\t\t\tans -= w;\n\t\t}\n\t\t--top;\n\t}\n}\n\t\nint main(){\n    int l,r,u,v,w;\n    read(n);\n    for(reg int i=1;i<n;++i){\n        read(u),read(v),read(w);\n        ed[++cnt] = edge(u,v,w);\n        a[n+cnt] = w;\n        insert(1,lim,1,lim,1,cnt);\n    }\n    read(m);\n    for(reg int i=1;i<=m;++i){\n        read(u),read(v),read(w),read(l),read(r);\n        ed[++cnt] = edge(u,v,w);\n        a[n+cnt] = w;\n        insert(l,r,1,lim,1,cnt);\n    }\n    solve(1,lim,1);\n    return 0;\n}\n```",
        "postTime": 1568967339,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4319 \u3010\u53d8\u5316\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/79800336)\n\n\u4e00\u5f00\u59cb\u7ed9\u4f60\u4e00\u68f5\u6811,\u518d\u7ed9\u4f60\u4e00\u4e9b\u8fb9,\u8fd9\u4e9b\u8fb9\u90fd\u6709\u4e00\u4e2a\u5b58\u5728\u65f6\u95f4\u6bb5\n\n$\\forall i\\in[1,32766]$\u6c42$i$\u65f6\u523b\u7684$MST$\u8fb9\u6743\u548c$+1$\n\n---\n\n## \u9898\u89e3\n\n\u52a8\u6001\u52a0\u8fb9\u5220\u8fb9\u7ef4\u62a4$MST$\n\n\u53ea\u6709\u52a0\u8fb9\u64cd\u4f5c\u6bd4\u8f83\u597d\u5199,\u5982[[WC2006]\u6c34\u7ba1\u5c40\u957f](https://www.luogu.org/problemnew/show/P4172)\n\n\u7ef4\u62a4\u6700\u5927\u8fb9\u7684\u4f4d\u7f6e\u5373\u53ef\n\n\u8003\u8651\u5220\u8fb9\u600e\u4e48\u505a$?$~~\u53ef\u6301\u4e45\u5316LCT?~~\n\n\u8003\u8651\u5bf9\u65f6\u95f4\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811,\u7136\u540e\u5bf9\u65f6\u95f4\u5206\u6cbb,\n\n\u90a3\u4e48\u4e00\u6761\u8fb9\u6700\u591a\u4f1a\u52a0\u5230$\\log n$\u4e2a\u533a\u95f4\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u6211\u4eec\u66b4\u529b\u628a\u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\u8fb9\u8fde\u4e0a\n\n\u7b49\u628a\u5b50\u6811\u9012\u5f52\u5b8c\u540e\u518d\u66b4\u529b\u5012\u5e8f\u5220\u9664\u521a\u521a\u8fde\u4e0a\u7684\u8fb9\n\n\u56e0\u4e3a\u4e00\u6761\u8fb9\u6700\u591a\u4f1a\u52a0\u5230$\\log n$\u4e2a\u533a\u95f4,\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u6709\u4fdd\u969c\u7684\n\n\u52a0\u8fb9\u5220\u8fb9\u53ef\u4ee5\u901a\u8fc7$LCT$\u5b9e\u73b0,\u590d\u6742\u5ea6$O(n\\log^2n)$\n\n\u5176\u5b9e\u8fd9\u4e2a\u4ee3\u7801\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u5361\u5e38\u7684~~\u7a9d\u61d2,\u6240\u4ee5\u5c31\u7b97\u4e86~~\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=2e5+5,M=32766;\ntypedef int arr[N];\ntypedef long long ll;\nstruct eg{int u,v,w;inline void in(){sd(u),sd(v),sd(w);}}e[N];\nint n,m,ce;ll ans=1;vector<int>G[N];\nstruct LCT{\n    int top,ch[N][2];arr w,mx,fa,rev,S;\n    #define lc(u)(ch[u][0])\n    #define rc(u)(ch[u][1])\n    inline bool gf(int u){return lc(fa[u])^u;}\n    inline bool ir(int u){return lc(fa[u])^u&&rc(fa[u])^u;}\n    inline int cmp(int a,int b){return w[a]>w[b]?a:b;}\n    inline void up(int u){mx[u]=u;mx[u]=cmp(mx[u],mx[lc(u)]),mx[u]=cmp(mx[u],mx[rc(u)]);}\n    inline void down(int u){\n        swap(lc(u),rc(u));rev[u]=0;\n        rev[lc(u)]^=1,rev[rc(u)]^=1;\n    }\n    inline void rot(int u){\n        int p=fa[u],k=gf(u);\n        if(!ir(p))ch[fa[p]][gf(p)]=u;\n        if(ch[u][!k])fa[ch[u][!k]]=p;\n        ch[p][k]=ch[u][!k],ch[u][!k]=p;\n        fa[u]=fa[p],fa[p]=u,up(p);\n    }\n    void splay(int u){\n        S[top=1]=u;\n        for(int i=u;!ir(i);i=fa[i])S[++top]=fa[i];\n        fd(i,top,1)if(rev[S[i]])down(S[i]);\n        for(int f=fa[u];!ir(u);rot(u),f=fa[u])\n            if(!ir(f))rot(gf(u)==gf(f)?f:u);\n        up(u);\n    }\n    inline void acc(int u){for(int v=0;u;u=fa[v=u])splay(u),ch[u][1]=v,up(u);}\n    inline void mkrt(int u){acc(u);splay(u);rev[u]^=1;}\n    inline void close(int u,int v){mkrt(u),acc(v),splay(v);}\n    inline void link(int u,int v){mkrt(u),fa[u]=v;}\n    inline void cut(int u,int v){close(u,v),fa[u]=ch[v][0]=0;}\n    inline int qry(int u,int v){return close(u,v),mx[v];}\n    #undef lc\n    #undef rc\n}t;\n#define lc p<<1,L,mid\n#define rc p<<1|1,mid+1,R\nvoid mdy(int p,int L,int R,int a,int b,int x){\n    if(a<=L&&R<=b)return G[p].push_back(x),void();\n    int mid=(L+R)>>1;\n    if(a<=mid)mdy(lc,a,b,x);\n    if(b>mid)mdy(rc,a,b,x);\n}\n#define mp make_pair\n#define pi pair<int,bool>\nvoid calc(int p,int L,int R){\n    stack<pi>s;\n    int u,v,w,x,mid=(L+R)>>1;\n    for(int i:G[p]){\n        u=e[i].u,v=e[i].v,w=e[i].w;x=t.qry(u,v);\n        if(w>=t.w[x])continue;ans-=t.w[x]-w;\n        t.cut(u,x),t.cut(v,x),s.push(mp(x,0));\n        t.link(u,i),t.link(v,i),s.push(mp(i,1));\n    }\n    if(L==R)we(ans);else calc(lc),calc(rc);\n    while(!s.empty()){\n        pi nw=s.top();s.pop();x=nw.first;\n        if(nw.second)t.cut(e[x].u,x),t.cut(e[x].v,x),ans-=e[x].w;\n        else t.link(e[x].u,x),t.link(e[x].v,x),ans+=e[x].w;\n    }\n}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n);ce=n;int l,r;\n    fp(i,2,n)e[++ce].in(),ans+=(t.w[ce]=e[ce].w),t.link(e[ce].u,ce),t.link(e[ce].v,ce);\t\n    sd(m);\n    while(m--)e[++ce].in(),sd(l),sd(r),mdy(1,1,M,l,r,ce),t.w[ce]=e[ce].w;\n    calc(1,1,M);\nreturn Ot(),0;\n}\n```",
        "postTime": 1522724679,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4319 \u3010\u53d8\u5316\u7684\u9053\u8def\u3011"
    },
    {
        "content": "[$\\large\\color{blue}\\text{Blog}$](https://www.luogu.org/blog/zi-o/#)\n\n\u52a8\u6001\u7ef4\u62a4\u52a0\u8fb9\u5220\u8fb9\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u8fd9\u79cd\u95ee\u9898\u6211\u4eec\u666e\u904d\u8003\u8651\u7528$LCT$\u89e3\u51b3\uff0c\u5f53\u5982\u679c\u53ea\u6709\u65f6\u95f4\u6216\u6743\u503c\u4e00\u4e2a\u7ef4\u5ea6\u65f6\uff0c\u53ef\u4ee5\u53ea\u7528$LCT$\uff0c\u4f46\u73b0\u5728\u4e24\u4e2a\u90fd\u8981\u7ef4\u62a4\uff0c\u5c31\u8981\u8003\u8651\u5957\u70b9\u4ec0\u4e48\u4e1c\u897f\u4e86\uff0c\u663e\u7136\u65f6\u95f4\u4e00\u7ef4\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u5206\u6cbb\u6765\u7ef4\u62a4\uff0c\u628a\u6bcf\u6761\u8fb9\u7684\u5b58\u5728\u65f6\u95f4\u770b\u505a\u533a\u95f4\uff08\u8fd9\u9898\u76f4\u63a5\u7ed9\u51fa\u6765\u4e86\uff09\u3002\n\n\u8fd9\u9898\u975e\u5e38\u65e0\u804a\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u8981\u8f93\u51fa$32766$\u884c\uff08\u4e00\u5f00\u59cb\u6ca1\u6709\u770b\u5230$wa$\u4e86\u5f88\u591a\u6b21\uff09\uff0c\u8fd8\u6709\u5c31\u662f\u7b54\u6848\u8981\u5f00$\\text{long long}$\uff0c\u522b\u7684\u5c31\u6ca1\u4ec0\u4e48\u4e86\u3002\n\n\u8fd9\u91cc\u4e3b\u8981\u8bb2\u4e00\u4e0b\u64a4\u9500\u6bcf\u6b21\u5206\u6cbb\u5b8c\u7684\u5f71\u54cd\uff0c\u7531\u4e8e\u7ebf\u6bb5\u6811\u5206\u6cbb\u53ef\u4ee5\u770b\u505a\u662f\u5e7f\u4e49\u7684$CDQ$\u5206\u6cbb\uff0c\u6240\u4ee5\u505a\u6cd5\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u6bcf\u6b21\u5230\u8fd9\u4e2a\u533a\u95f4\u5c31\u52a0\u5165\u5f53\u524d\u533a\u95f4\u7684\u8fb9\uff0c\u56de\u6eaf\u7684\u65f6\u5019\u518d\u64a4\u9500\u6389\uff0c\u7136\u800c\u91cd\u70b9\u5728\u8fd9\u4e2a\u64a4\u9500\u4e0a\uff0c\u52a0\u5165\u662f\u5e38\u89c4\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u7684\u53bb\u770b\u770b[\u8fd9\u9898](https://www.luogu.org/problemnew/show/P4172)\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6808\u8bb0\u5f55\u6bcf\u6b21\u64cd\u4f5c\u7684\u8fb9\uff0c\u4e0d\u7ba1\u662f\u88ab$link$\u7684\u8fd8\u662f\u88ab$cut$\u7684\uff0c\u7ed9\u4e0d\u540c\u64cd\u4f5c\u7684\u8fb9\u5728\u6808\u91cc\u8bb0\u5f55\u64cd\u4f5c\u7c7b\u578b\uff0c\u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u65f6\u8981\u8bb0\u5f55\u5f53\u524d\u7684$top$\uff0c\u64a4\u9500\u7684\u65f6\u5019\u64a4\u5230\u8fd9\u91cc\u5c31\u505c\u4e0b\uff0c\u7136\u540e\u64a4\u9500\u65f6\u505a\u76f8\u53cd\u7684\u64cd\u4f5c\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u53ea\u8981\u7a0d\u5fae\u6ce8\u610f\u5c31\u4e0d\u4f1a\u5199\u9519\u4e86\uff0c\u6709\uff08\u4f1a\uff09\u5174\uff08\u5361\uff09\u8da3\uff08\u5e38\uff09\u7684\u8bdd\u53ef\u4ee5\u770b\u770b[\u8fd9\u4e00\u9898](https://www.luogu.org/problemnew/show/P3206)\uff0c\u601d\u8def\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f\u7ed9\u8fb9\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u5e38\u6570\u5927\u7684\u53ea\u80fd\u5f97\u523080\u5206\u3002\n\n\u6700\u540e\u662f\u4ee3\u7801\n\nCode\uff1a\n\n```cpp\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <bitset>\n#include <cstdio>\n#include <vector>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n#define inl inline\n#define re register int\n#define fa(x) t[x].fa\n#define son(x,y) t[x].child[y]\n#define ls(x) t[x].child[0]\n#define rs(x) t[x].child[1]\n#define ll long long\nconst int inf = 0x3f3f3f3f;\n#define lowbit(x) ((x) & (-x))\nusing namespace std;\n#ifndef _DEBUG\n#define getchar() (*(IOB.in.p++))\n#define putchar(c) (*(IOB.out.p++)=(c))\n#define io_eof() (IOB.in.p>=IOB.in.pend)\nstruct IOBUF { struct { char buff[1 << 26], *p, *pend; }in; struct { char buff[1 << 26], *p; }out; IOBUF() { in.p = in.buff; out.p = out.buff; in.pend = in.buff + fread(in.buff, 1, 1 << 26, stdin); }~IOBUF() { fwrite(out.buff, 1, out.p - out.buff, stdout); } }IOB;\n#endif\ntemplate<typename IO>\ninl void write(IO x) {\n\tif (x == 0) return (void)putchar('0');\n\tif (x < 0)putchar('-'), x = -x;\n\tstatic char buf[30];\n\tchar* p = buf;\n\twhile (x) {\n\t\t*(p++) = x % 10 + '0';\n\t\tx /= 10;\n\t}\n\twhile (p > buf)putchar(*(--p));\n}\ninl void writestr(const char *s) { while (*s != 0)putchar(*(s++)); }\ntemplate<typename IO>inl void writeln(IO x) { write(x), putchar('\\n'); }\ntemplate<typename IO>inl void writesp(IO x) { write(x), putchar(' '); }\ninl int readstr(char *s) {\n\tchar *begin = s, c = getchar();\n\twhile (c < 33 || c>127) {\n\t\tc = getchar();\n\t}\n\twhile (c >= 33 && c <= 127) {\n\t\t*(s++) = c;\n\t\tc = getchar();\n\t}\n\t*s = 0;\n\treturn s - begin;\n}\ntemplate<typename IO>\ninl IO read() {\n\tIO x = 0;\n\tregister bool w = 0;\n\tregister char c = getchar();\n\twhile (c > '9' || c < '0') {\n\t\tif (c == '-') w = 1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\treturn w ? -x : x;\n}\nint n, m, tot;\nstruct node {\n\tint fa, child[2], max, w;\n\tbool filp;\n}t[500001];\ninl void maintain(int x) {\n\tt[x].max = 0;\n\tif (x > n)t[x].max = x;\n\tif (t[t[ls(x)].max].w > t[x].w)t[x].max = t[ls(x)].max;\n\tif (t[t[rs(x)].max].w > t[t[x].max].w)t[x].max = t[rs(x)].max;\n}\ninl bool poi(int x) {\n\treturn rs(fa(x)) == x;\n}\ninl bool nroot(int x) {\n\treturn ls(fa(x)) == x || rs(fa(x)) == x;\n}\ninl void rotate(int x) {\n\tre f = fa(x), gf = fa(f), fs = poi(x), gfs = poi(f), s = son(x, fs ^ 1);\n\tif (nroot(f))son(gf, gfs) = x;\n\tson(x, fs ^ 1) = f, son(f, fs) = s;\n\tif (s)fa(s) = f; fa(f) = x, fa(x) = gf, maintain(f);\n}\ninl void reverse(int x) {\n\tswap(ls(x), rs(x)), t[x].filp ^= 1;\n}\ninl void pushdown(int x) {\n\tif (t[x].filp) {\n\t\tif (ls(x))reverse(ls(x));\n\t\tif (rs(x))reverse(rs(x));\n\t\tt[x].filp = 0;\n\t}\n}\ninl void push(int x) {\n\tif (nroot(x))push(fa(x));\n\tpushdown(x);\n}\ninl void splay(int x) {\n\tpush(x);\n\twhile (nroot(x)) {\n\t\tif (nroot(fa(x)))poi(x) == poi(fa(x)) ? rotate(fa(x)) : rotate(x);\n\t\trotate(x);\n\t}\n\tmaintain(x);\n}\ninl void access(int x) {\n\tfor (re i = 0; x; x = fa(i = x)) {\n\t\tsplay(x), rs(x) = i, maintain(x);\n\t}\n}\ninl void makeroot(int x) {\n\taccess(x), splay(x), reverse(x);\n}\ninl void split(int x, int y) {\n\tmakeroot(y), access(x), splay(x);\n}\ninl void link(int x, int y) {\n\tsplit(x, y), fa(y) = x;\n}\ninl void cut(int x, int y) {\n\tsplit(x, y), fa(y) = ls(x) = 0, maintain(x);\n}\ninl int findroot(int x) {\n\taccess(x), splay(x), pushdown(x);\n\twhile (ls(x))pushdown(x = ls(x));\n\tsplay(x);\n\treturn x;\n}\nstruct edge {\n\tint u, v, w;\n}e[500001];\nvector<int>ve[400001];\nint st[1000001][2], top;\nll ans = 1, lastans;\ninl void insert(int k, int l, int r, int x, int y, int i) {\n\tif (l >= x && r <= y) {\n\t\tve[k].push_back(i);\n\t\treturn;\n\t}\n\tre mid = l + r >> 1;\n\tif (x <= mid)insert(k << 1, l, mid, x, y, i);\n\tif (y > mid)insert(k << 1 | 1, mid + 1, r, x, y, i);\n}\ninl void divide(int k, int l, int r) {\n\tre u, v, w, ltop = top;\n\tfor (auto i : ve[k]) {\n\t\tu = e[i].u, v = e[i].v, w = e[i].w;\n\t\tmakeroot(u);\n\t\tif (findroot(v) == u) {\n\t\t\tre now = t[u].max;\n\t\t\tll d = t[now].w;\n\t\t\tif (w >= d)continue;\n\t\t\tcut(e[now - n].u, now), cut(e[now - n].v, now);\n\t\t\tans -= d, st[++top][0] = now - n, st[top][1] = 1;\n\t\t}\n\t\tans += w, st[++top][0] = i, st[top][1] = -1;\n\t\tlink(u, i + n), link(v, i + n);\n\t}\n\tre mid = l + r >> 1;\n\tif (l == r) writeln(ans);\n\telse divide(k << 1, l, mid), divide(k << 1 | 1, mid + 1, r);\n\twhile (top > ltop) {\n\t\tre now = st[top][0];\n\t\tif (~st[top][1]) {\n\t\t\tlink(e[now].u, now + n), link(e[now].v, now + n), ans += e[now].w;\n\t\t}\n\t\telse {\n\t\t\tcut(e[now].u, now + n), cut(e[now].v, now + n), ans -= e[now].w;\n\t\t}\n\t\ttop--;\n\t}\n}\nsigned main() {\n\tn = read<int>();\n\tfor (re i = 1, x, y, w; i < n; i++) {\n\t\tx = read<int>(), y = read<int>(), w = read<int>();\n\t\te[++tot] = edge{ x,y,w }, t[n + tot].w = w;\n\t\tinsert(1, 1, 32766, 1, 32766, tot);\n\t}\n\tm = read<int>();\n\tfor (re i = 1, x, y, w, st, ed; i <= m; i++) {\n\t\tx = read<int>(), y = read<int>(), w = read<int>(), st = read<int>(), ed = read<int>();\n\t\te[++tot] = edge{ x,y,w };\n\t\tt[n + tot].w = w;\n\t\tinsert(1, 1, 32766, st, ed, tot);\n\t}\n\tdivide(1, 1, 32766);\n}\n```\n\n",
        "postTime": 1559373219,
        "uid": 110271,
        "name": "Genius_Z",
        "ccfLevel": 0,
        "title": "P4319 \u53d8\u5316\u7684\u9053\u8def"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u9876\u70b9\u7684\u5e26\u6743\u56fe\uff0c\u521d\u59cb\u65f6\u662f\u4e00\u4e2a\u6811\u3002\u6709 $32766$ \u4e2a\u65f6\u523b\uff0c\u6709 $m$ \u6b21\u66f4\u6539\uff0c\u6bcf\u6b21\u66f4\u6539\u7ed9\u51fa $u_i,v_i,w_i,l_i,r_i$\u3002\u8868\u793a\u6811\u4e0a\u65b0\u589e\u4e00\u6761\u65e0\u5411\u8fb9 $(u_i,v_i,w_i)$\uff0c\u4ec5\u51fa\u73b0\u5728\u4f4d\u4e8e $[l_i,r_i]$ \u7684\u65f6\u523b\u3002\u4f60\u9700\u8981\u6c42\u51fa\u6240\u6709\u66f4\u6539\u5b8c\u6210\u540e\u6bcf\u4e2a\u65f6\u523b\u7684\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u6743\u548c $+1$\u3002\n\n## \u601d\u8def\n\n\u6211\u672c\u6765\u7ed9\u51fa\u9898\u7ec4\u51fa\u4e86\u548c\u8fd9\u9053\u9898\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u9898\uff0c\u4f46\u662f\u53d1\u73b0\u91cd\u4e86\u2026\u2026\n\n\u770b\u5230\u7ef4\u62a4\u6bcf\u4e2a\u65f6\u523b\u7684\u52a8\u6001\u56fe\u95ee\u9898\uff0c\u6211\u4eec\u60f3\u5230\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u4e8e\u662f\u6211\u4eec\u8f6c\u6362\u4e3a\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n- \u63d2\u5165\u4e00\u6761\u8fb9\u3002\n- \u6c42\u5f53\u524d\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u8fb9\u6743\u548c\u3002\n- \u64a4\u9500\u4e0a\u4e00\u6b21\u64cd\u4f5c\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528 Link Cut Tree \u5728 $O(\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5b8c\u6210\uff08\u5982\u679c\u60a8\u4e0d\u4f1a\uff0c\u53ef\u4ee5\u770b [\u6211\u5199\u7684\u8fd9\u7bc7\u535a\u5ba2](https://www.cnblogs.com/zheyuanxie/p/mst-by-lct.html)\uff09\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u64a4\u9500\u3002\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u90a3\u6837\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6808\u3002\u4f46\u662f\u65e0\u6cd5\u5411\u5e76\u67e5\u96c6\u90a3\u6837\u7ef4\u62a4 `fa` \u6570\u7ec4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528 Link Cut Tree \u4e2d\u7684 Cut\u3002\u7ef4\u62a4\u6bcf\u4e00\u6b21\u8fde\u8fb9\u548c\u65ad\u8fb9\u7684\u8282\u70b9\u3002\u64a4\u9500\u65f6\u53cd\u7740\u64cd\u4f5c\u5373\u53ef\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5408\u6cd5\uff0c\u8fd9\u4e2a\u5176\u5b9e\u4e0d\u9700\u8981\u8bc1\u3002\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\u90fd\u6ee1\u8db3\u6811\u7684\u6027\u8d28\uff0c\u5012\u56de\u6765\u4e00\u5b9a\u4e5f\u6ee1\u8db3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u7b97\u3002\u4e0d\u8fc7\u53ef\u4ee5\u8fc7\u5c31\u5bf9\u4e86\u3002\n\n\u6700\u540e\u6ce8\u610f\uff1a\u5341\u5e74 OI \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 `long long` \u89c1\u7956\u5b97\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N = 2e5+5;\nint n,m,t;\n\nnamespace LCT{\n#define ls (son[i][0])\n#define rs (son[i][1])\n\tint son[N][2];\n\tint fa[N];\n\tbool tag[N];\n\tint maxt[N],maxid[N];\n\tint val[N];\n\t\n\tinline void pushup(int i){\n\t\tmaxt[i]=val[i],maxid[i]=i;\n\t\tif(maxt[ls]>maxt[i]){\n\t\t\tmaxt[i]=maxt[ls];maxid[i]=maxid[ls];\n\t\t}\n\t\tif(maxt[rs]>maxt[i]){\n\t\t\tmaxt[i]=maxt[rs];maxid[i]=maxid[rs];\n\t\t}\n\t}\n\t\n\tinline void reverse(int i){\n\t\tswap(ls,rs);tag[i]^=1;\n\t}\n\t\n\tinline void pushdown(int i){\n\t\tif(tag[i]){\n\t\t\tif(ls) reverse(ls);\n\t\t\tif(rs) reverse(rs);\n\t\t\ttag[i]=0;\n\t\t}\n\t}\n\t\n\tinline bool get(int i){\n\t\treturn son[fa[i]][1]==i;\n\t}\n\t\n\tinline bool is_root(int i){\n\t\treturn son[fa[i]][0]!=i && son[fa[i]][1]!=i;\n\t}\n\t\n\tvoid update(int i){\n\t\tif(!is_root(i)){\n\t\t\tupdate(fa[i]);\n\t\t}\n\t\tpushdown(i);\n\t}\n\t\n\tinline void rotate(int p){\n\t\tint q=fa[p],z=fa[q],k=get(p);\n\t\tif(!is_root(q)){\n\t\t\tson[z][son[z][1]==q]=p;\n\t\t}\n\t\tfa[p]=z;\n\t\tson[q][k]=son[p][!k];\n\t\tif(son[p][!k]) fa[son[p][!k]]=q;\n\t\tson[p][!k]=q;\n\t\tfa[q]=p;\n\t\tpushup(q);\n\t\tpushup(p);\n\t}\n\t\n\tinline void splay(int i){\n\t\tupdate(i);\n\t\tfor(int f;f=fa[i],!is_root(i);rotate(i)){\n\t\t\tif(!is_root(f)){\n\t\t\t\trotate(get(f)==get(i)?f:i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tinline void access(int i){\n\t\tint p;\n\t\tfor(p=0;i;p=i,i=fa[i]){\n\t\t\tsplay(i);\n\t\t\tson[i][1]=p;\n\t\t\tpushup(i);\n\t\t}\n\t}\n\t\n\tinline int find(int i){\n\t\taccess(i);\n\t\tsplay(i);\n\t\twhile(ls) pushdown(i),i=ls;\n\t\tsplay(i);\n\t\treturn i;\n\t}\n\t\n\tinline void make_root(int i){\n\t\taccess(i);\n\t\tsplay(i);\n\t\treverse(i);\n\t}\n\t\n\tinline void split(int u,int v){\n\t\tmake_root(u);\n\t\taccess(v);splay(v);\n\t}\n\t\n\tinline void link(int u,int v){\n\t\tmake_root(u);\n\t\tif(find(v)!=u){\n\t\t\tfa[u]=v;\n\t\t}\n\t}\n\t\n\tinline void cut(int u,int v){\n\t\tmake_root(u);\n\t\tif(find(v)==u&&fa[v]==u&&(!son[v][0])) son[u][1]=fa[v]=0;\n\t}\n}\n\nint ret=0,ec=0;\n\n#undef ls\n#undef rs\n#define ls (i<<1)\n#define rs (i<<1|1)\n#define mid ((l+r)>>1)\n\nstruct Edge{\n\tint u,v,w,id,l,r;\n};\n\nvector<Edge> tree[N<<2];\nEdge edges[N];\n\nstruct Undo{\n\tbool flag;\n\tint u,v;\n};\n\nstack<Undo> undo_lct;\n\nvoid update(int ql,int qr,Edge v,int i,int l,int r){\n\tif(ql<=l&&r<=qr){\n\t\ttree[i].push_back(v);\n\t\treturn;\n\t}\n\tif(ql<=mid) update(ql,qr,v,ls,l,mid);\n\tif(qr>mid) update(ql,qr,v,rs,mid+1,r);\n}\n\nvoid solve(int i,int l,int r,int ans){\n\tauto level=undo_lct.size();\n\tfor(Edge eg : tree[i]){\n\t\tint u=eg.u,v=eg.v,w=eg.w,gid=eg.id;\n\t\tif(LCT::find(u)!=LCT::find(v)){\n\t\t\tLCT::link(u,gid+n);LCT::link(gid+n,v);\n\t\t\tundo_lct.push({1,u,gid+n});\n\t\t\tundo_lct.push({1,gid+n,v});\n\t\t\tans += w;\n\t\t\tcontinue;\n\t\t}\n\t\tLCT::split(u,v);\n\t\tint mxid=LCT::maxid[v],mxv=LCT::maxt[v];\n\t\tif(mxv<=w) continue;\n\t\tans -= mxv;\n\t\tLCT::cut(edges[mxid-n].u,mxid);\n\t\tundo_lct.push({0,edges[mxid-n].u,mxid});\n\t\tLCT::cut(mxid,edges[mxid-n].v);\n\t\tundo_lct.push({0,mxid,edges[mxid-n].v});\n\t\tLCT::link(u,gid+n);LCT::link(gid+n,v);\n\t\tundo_lct.push({1,u,gid+n});\n\t\tundo_lct.push({1,gid+n,v});\n\t\tans += w;\n\t}\n\tif(l==r) cout<<ans<<'\\n';\n\telse{solve(ls,l,mid,ans);solve(rs,mid+1,r,ans);}\n\twhile(undo_lct.size()>level){\n\t\tUndo undo = undo_lct.top();\n\t\tundo_lct.pop();\n\t\tif(undo.flag==0) LCT::link(undo.u,undo.v);\n\t\telse LCT::cut(undo.u,undo.v);\n\t}\n}\n\nsigned main(){\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n;\n\tt=32766; \n\tfor(int i=1;i<n;i++){\n\t\tcin>>edges[i].u>>edges[i].v>>edges[i].w;\n\t\tedges[i].l=1,edges[i].r=t;\n\t\tedges[i].id=i;\n\t\tLCT::splay(i+n);\n\t\tLCT::val[i+n]=edges[i].w;\n\t\tupdate(edges[i].l,edges[i].r,edges[i],1,1,t);\n\t}\n\tcin>>m;\n\tfor(int i=n;i<n+m;i++){\n\t\tcin>>edges[i].u>>edges[i].v>>edges[i].w>>edges[i].l>>edges[i].r;\n\t\tedges[i].id=i;\n\t\tLCT::splay(i+n);\n\t\tLCT::val[i+n]=edges[i].w;\n\t\tupdate(edges[i].l,edges[i].r,edges[i],1,1,t);\n\t}\n\tsolve(1,1,t,1);\n\treturn 0;\n}\n\n```",
        "postTime": 1675918476,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "P4319 \u53d8\u5316\u7684\u9053\u8def"
    },
    {
        "content": "# P4319 \u53d8\u6362\u7684\u9053\u8def \u9898\u89e3\n\nby ctldragon\n\n\n\n\u5f88\u663e\u7136\uff0c\u9898\u76ee\u8981\u6c42\u6bcf\u4e00\u5929\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c +1\u3002\n\n\u5929\u6570\u5f88\u5c11\uff0c\u521a\u5f00\u59cb\u80af\u5b9a\u4f1a\u60f3\u5230\u76f4\u63a5\u6309\u65f6\u95f4\u987a\u7740\u63a8\uff0c\u4f46\u5176\u5b9e\u4ed4\u7ec6\u4e00\u60f3\u4f1a\u53d1\u73b0\u6709\u4e9b\u8fb9\u88ab\u5f03\u6389\u4e4b\u540e\u60f3\u518d\u627e\u56de\u6765\u7528\u662f\u5f88\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u987a\u7740\u63a8\u662f\u80af\u5b9a\u4e0d\u884c\u7684\u3002\n\n**\u6b63\u89e3\uff1a\u52a8\u6001\u6811+\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002**\n\n\u8fd9\u79cd\u9898\u4e00\u822c\u90fd\u662f\u53ef\u4ee5\u5bf9\u65f6\u95f4\uff08\u6216\u662f\u8be2\u95ee\u7b49\uff09\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u8bb0\u8fd9\u4e2a\u533a\u95f4\u5305\u542b\u7684\u8fb9\uff0c\u7136\u540e\u5229\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u601d\u60f3\u6765\u5904\u7406\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\u3002\u8fd9\u6837\u6700\u540e\u7ebf\u6bb5\u6811\u4e0a\u4f1a\u6709 $O(n\\log n)$ \u6761\u8fb9\u3002\n\n\u7136\u540e\u904d\u5386\u6574\u4e2a\u7ebf\u6bb5\u6811\u6765\u5f97\u5230\u7b54\u6848\u3002\n\n**\u5177\u4f53\u5b9e\u73b0\uff1a**\n\n\u6bcf\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5f53\u8fd9\u4e2a\u8282\u70b9\u4e0a\u7684\u8fb9\u6bd4\u73b0\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u66f4\u4f18\u65f6\uff0c\u5c31\u66ff\u6362\u6389\u5b83\uff0c\u5426\u5219\u4e0d\u6539\u53d8\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u8bb0\u5f55\u6bcf\u6b21\u64cd\u4f5c\u7684\u52a0\u8fb9\u548c\u5220\u8fb9\uff0c\u8fd9\u6837\u56de\u6eaf\u7684\u65f6\u5019\u53ef\u4ee5\u56de\u9000\u5230\u539f\u6765\u7684\u72b6\u6001\u3002\u56e0\u4e3a\u6709\u52a8\u6001\u52a0\u8fb9\u548c\u5220\u8fb9\u64cd\u4f5c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528 LCT \u6765\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u3002\u81f3\u4e8e\u5982\u4f55\u7528 LCT \u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\uff0c\u53ef\u4ee5\u53bb\u770b\u770b[[WC2006]\u6c34\u7ba1\u5c40\u957f](https://www.luogu.com.cn/problem/P4172)\u548c[[NOI2014]\u9b54\u6cd5\u68ee\u6797](https://www.luogu.com.cn/problem/P2387)\u8fd9\u4e24\u9898\uff0c\u90fd\u662f LCT \u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u7684\u597d\u9898\u3002\n\n\u6700\u540e\u672c\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<cstdio>\n#include<vector>\n#define pc(x) putchar(x)\n#define ll long long\n#define ls (pos<<1)\n#define rs (pos<<1|1)\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){f=ch=='-'?-1:f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nvoid write(ll x)\n{\n\tif(x<0){x=-x;putchar('-');}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nint n,m,top,cnt;ll ans[40000];\nstruct edge{int u,v;ll w;}e[200005];\nstruct STK{int id,op;}stk[200005];\nint fa[200005],rev[200005],ch[200005][2],mx[200005];ll val[200005];\n//LCT begin\ninline void swap(int &x,int &y){x^=y;y^=x;x^=y;}\ninline bool isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\ninline void pushrev(int x){swap(ch[x][0],ch[x][1]);rev[x]^=1;}\ninline void pushup(int x)\n{\n\tmx[x]=x;\n\tif(ch[x][0]&&val[mx[x]]<val[mx[ch[x][0]]])mx[x]=mx[ch[x][0]];\n\tif(ch[x][1]&&val[mx[x]]<val[mx[ch[x][1]]])mx[x]=mx[ch[x][1]];\n}\ninline void pushdown(int x)\n{\n\tif(rev[x])\n\t{\n\t\tif(ch[x][0])pushrev(ch[x][0]);\n\t\tif(ch[x][1])pushrev(ch[x][1]);\n\t}rev[x]=0;\n}\ninline void update(int x)\n{\n\tif(!isroot(x))update(fa[x]);\n\tpushdown(x);\n}\ninline void rotate(int x)\n{\n\tint y=fa[x],z=fa[y];\n\tint k=ch[y][1]==x,w=ch[x][k^1];\n\tif(!isroot(y))ch[z][ch[z][1]==y]=x;\n\tch[x][k^1]=y;ch[y][k]=w;\n\tif(w){fa[w]=y;}fa[y]=x;fa[x]=z;\n\tpushup(y);\n}\ninline void splay(int x)\n{\n\tupdate(x);\n\twhile(!isroot(x))\n\t{\n\t\tint y=fa[x],z=fa[y];\n\t\tif(!isroot(y))rotate((ch[y][0]==x)^(ch[z][0]==y)?x:y);\n\t\trotate(x);\n\t}pushup(x);\n}\ninline void access(int x)\n{\n\tfor(int y=0;x;x=fa[y=x])\n\t{splay(x);ch[x][1]=y;pushup(x);}\n}\ninline void makeroot(int x){access(x);splay(x);pushrev(x);}\ninline void split(int x,int y){makeroot(x);access(y);splay(y);}\ninline void link(int x,int y){makeroot(x);fa[x]=y;}\ninline int findroot(int x)\n{\n\taccess(x);splay(x);\n\twhile(ch[x][0])pushdown(x),x=ch[x][0];\n\tsplay(x);return x;\n}\ninline void cut(int x,int y)\n{\n\tmakeroot(x);access(y);splay(x);\n\tfa[y]=ch[x][1]=0;pushup(x);\n}\n//LCT end\nll sum;\nvector<int>tr[200005];\ninline void ret()\n{\n\tint op=stk[top].op,id=stk[top].id;\n\tint u=e[id].u,v=e[id].v;top--;\n\tif(op==0)cut(u,id),cut(v,id);\n\telse link(u,id),link(v,id);\n}\ninline void modify(int pos,int l,int r,int L,int R,int id)\n{\n\tif(L<=l&&r<=R){tr[pos].push_back(id);return;}\n\tint mid=(l+r)>>1;\n\tif(L<=mid)modify(ls,l,mid,L,R,id);\n\tif(R>mid)modify(rs,mid+1,r,L,R,id);\n}\ninline void solve(int pos,int l,int r)\n{\n\tint nowtop=top;ll nowsum=sum;\n\tfor(int i=0;i<(int)tr[pos].size();++i)\n\t{\n\t\tint id=tr[pos][i],u=e[id].u,v=e[id].v;\n\t\tsplit(u,v);int mxid=mx[v];\n\t\tif(val[mxid]<=val[id])continue;\n\t\tstk[++top]=(STK){mxid,1};stk[++top]=(STK){id,0};\n\t\tcut(e[mxid].u,mxid);cut(e[mxid].v,mxid);\n\t\tlink(u,id);link(v,id);sum=sum-val[mxid]+val[id];\n\t}int mid=(l+r)>>1;\n\tif(l==r)ans[l]=sum; else solve(ls,l,mid),solve(rs,mid+1,r);\n\tsum=nowsum;while(top>nowtop)ret();\n}\nint main()\n{\n\tn=read();cnt=n;\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=read(),v=read(),w=read();\n\t\te[++cnt]=(edge){u,v,w};val[cnt]=w;\n\t\tlink(u,cnt);link(v,cnt);sum+=w;\n\t}m=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=read(),v=read(),w=read(),l=read(),r=read();\n\t\te[++cnt]=(edge){u,v,w};val[cnt]=w;\n\t\tmodify(1,1,32766,l,r,cnt);\n\t}solve(1,1,32766);\n\tfor(int i=1;i<=32766;++i)write(ans[i]+1),pc('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1646904453,
        "uid": 532261,
        "name": "ctldragon",
        "ccfLevel": 6,
        "title": "P4319 \u53d8\u6362\u7684\u9053\u8def \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u4f60\u4e00\u68f5\u6709 $n$ \u4e2a\u8282\u70b9\u65e0\u6839\u6709\u8fb9\u6743\u7684\u6811 \uff0c\u548c $m$ \u6761\u5728\u4e00\u5b9a\u65f6\u95f4\u6bb5\u51fa\u73b0\u7684\u8fb9\u3002\u6c42\u95ee\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002[QWQ](https://www.luogu.com.cn/blog/xzc/solution-p4319) \u3002\n## \u5206\u6790\n- \u5bf9\u4e0e\u65f6\u95f4\u6bb5\u5206\u6790\n\n\u5bf9\u4e8e\u5728\u65f6\u95f4\u6bb5\u4e2d\u5904\u7406\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u7ebf\u6bb5\u6811\u5206\u6cbb\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u4e00\u6761\u8fb9\u62c6\u6210\u4e86\u591a\u6761\u8fb9\u3002\u800c\u6bcf\u6761\u8fb9\u6700\u591a\u4e5f\u53ea\u80fd\u88ab\u62c6\u6210 $\\log k$ \u6761\u3002\u90a3\u6211\u4eec\u73b0\u5728\u5c31\u6709\u4e86 $m\\times \\log k$ \u6761\u8fb9\u3002\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5bf9\u4e8e\u65f6\u95f4\u7684\u5206\u6790\u5c31\u7ed3\u675f\u4e86\u3002\n\n- \u6700\u5c0f\u751f\u6210\u6811\u5206\u6790\n\n\u6211\u4eec\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u56de\u60f3\u4e00\u4e0b\u6709\u54ea\u4e9b\u7b97\u6cd5\u3002 $kruskal$ \u548c $prim$ \u7b97\u6cd5\uff08\u4e0d\u4f1a\u7684\u5efa\u8bae\u518d\u53bb\u5eb7\u5eb7\uff09\u3002\u800c\u8fd9\u4e24\u79cd\u7b97\u6cd5\u5bf9\u4e8e\u6c42\u89e3\u6700\u5c0f\u751f\u6210\u6811\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u522b\u4e3a $O(n\\alpha(m))$ \u548c $O((n+m)\\log n)$ \u3002\u4f46\u662f\u5728\u7ebf\u6bb5\u6811\u5206\u6cbb\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u7684\u6b63\u786e\uff0c\u662f\u91c7\u7528\u7684\u64a4\u56de\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u66b4\u529b\u91cd\u5efa\u3002\u800c $prim$ \u7b97\u6cd5\u5982\u679c\u8981\u8003\u8651\u662f\u54ea\u6761\u8fb9\u8d21\u732e\uff0c\u53c8\u600e\u4e48\u64a4\u56de\u8fb9\u3002\u90fd\u662f\u975e\u5e38\u590d\u6742\u800c\u4e14\u590d\u6742\u5ea6\u4e5f\u6781\u5927\u7684\u3002\n\n- \u8003\u8651 $kruskal$ \u7b97\u6cd5\u8fc7\u7a0b\n\n$kruskal$ \u4e3a\u5565\u80fd\u7528\uff1f\u8fd9\u662f\u7531\u4e8e\u6709\u4e00\u6b65\u6392\u5e8f\u3002\u8fd9\u4e2a\u4f7f\u8fb9\u6743\u503c\u5c0f\u7684\u5148\u6210\u4e3a\u6811\u8fb9\u3002\u90a3\u4e48\u5982\u679c\u6ca1\u6709\u6392\u5e8f\u600e\u4e48\u529e\uff1f\u8fd9\u5c31\u8981\u5c06\u8fd9\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u4e2d\u7684\u6700\u5927\u503c\u63d0\u51fa\u6765\u3002\u5982\u679c\u5927\u4e8e\u4e86\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\uff0c\u8bc1\u660e\u8fd9\u6761\u8fb9\u6bd4\u53e6\u4e00\u6761\u8fb9\u66f4\u4f18\u3002\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u662f\u5982\u4f55\u67e5\u627e\uff0c\u5220\u9664\uff0c\u63d2\u5165\u3002\n\n- \u67e5\u627e\uff0c\u5220\u9664\uff0c\u63d2\u5165\u3002\n\n- \u67e5\u627e\uff1a\u6211\u4eec\u5bf9\u4e8e\u6811\u4e0a\u7684\u8def\u5f84\u67e5\u627e\u6700\u503c\u4e00\u822c\u91c7\u7528 $LCT$ \u548c\u6811\u8fde\u5256\u5206\u3002\n\n- \u5220\u9664\uff0c\u63d2\u5165\uff1a\u5982\u679c\u53ea\u6709\u5176\u4e2d\u4e00\u79cd\u64cd\u4f5c\uff0c\u5176\u5b9e\u6811\u94fe\u5256\u5206\u4e5f\u53ef\u505a\u3002\u5c31\u662f\u628a\u5220\u9664\u53cd\u5411\u53d8\u4e3a\u63d2\u5165\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u4e24\u79cd\u3002\u8fd9\u91cc\u660e\u663e $LCT$ \u5b9e\u73b0\u96be\u5ea6\uff0c\u548c\u601d\u7ef4\u91cf\u90fd\u66f4\u4f4e\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5 $\\text{\u7ebf\u6bb5\u6811\u5206\u6cbb+LCT}$ \u6765\u505a\uff0c\u7801\u91cf\u6709\u70b9\u5927\uff0c\u5982\u679c\u6311\u4e0d\u51fa\u6765\uff0c\u5176\u5b9e\u53ef\u4ee5\u628a $LCT$ \u4ee3\u7801\u627e\u4e2a\u9898\u63d0\u4ea4\u4e00\u4e0b\uff0c\u7ebf\u6bb5\u6811\u5206\u6cbb\u4e5f\u53ef\u4ee5\u63d0\u4ea4\u4e00\u4e0b\u6a21\u677f\u3002\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\log k \\log n)$ \u3002\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long \nint read(){\n\tint x = 0,f = 0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nconst int N = 1011000;\nint n,m;\nstruct LinkCutTree{\n\tint c[2],val,mx,fa;\n\tbool r;\n}t[N];\nbool nroot(int x)\n{\n\treturn t[t[x].fa].c[1] == x || t[t[x].fa].c[0] == x;\n}\nvoid pushr(int x)\n{\n\tswap(t[x].c[1],t[x].c[0]);\n\tt[x].r ^= 1;\n}\nvoid pushdown(int x)\n{\n\tif(t[x].r)\n\t{\n\t\tif(t[x].c[1]) pushr(t[x].c[1]);\n\t\tif(t[x].c[0]) pushr(t[x].c[0]);\n\t\tt[x].r = 0;\n\t}\n}\nvoid push(int x)\n{\n\tif(nroot(x)) push(t[x].fa);\n\tpushdown(x);\n}\nvoid pushup(int x)\n{\n\tif(x > n) t[x].mx = x;\n\telse t[x].mx = 0;\n\tif(t[t[t[x].c[1]].mx].val > t[t[x].mx].val) t[x].mx = t[t[x].c[1]].mx;  \n\tif(t[t[t[x].c[0]].mx].val > t[t[x].mx].val) t[x].mx = t[t[x].c[0]].mx; \n}\nvoid rotate(int x)\n{\n\tint y = t[x].fa,z = t[y].fa,k = (t[y].c[1] == x),w = t[x].c[!k];\n\tif(nroot(y)) t[z].c[t[z].c[1] == y] = x;\n\tt[x].c[!k] = y;t[y].c[k] = w;\n\tt[x].fa = z;if(w)t[w].fa = y;t[y].fa = x;\n\tpushup(y);pushup(x);\n}\n\nvoid splay(int x)\n{\n\tpush(x);\n\twhile(nroot(x))\n\t{\n//\t\tcout<<x<<endl;\n\t\tint y = t[x].fa,z = t[y].fa;\n\t\tif(nroot(y))\n\t\t{\n\t\t\trotate(((t[z].c[1] == y)^(t[y].c[1] == x))?x:y);\n\t\t}\n\t\trotate(x);\n\t\tpushup(x);\n\t}\n}\nvoid access(int x)\n{\n\tfor(int y = 0;x;x = t[y].fa)\n\t{\n\t\tsplay(x);t[x].c[1] = y;pushup(x);y = x;\n\t}\n}\nvoid makeroot(int x)\n{\n\taccess(x);splay(x);pushr(x);\n}\nvoid split(int x,int y)\n{\n\tmakeroot(x);access(y);splay(y);\n}\nvoid link(int x,int y)\n{\n\tsplit(x,y);\n\tt[x].fa = y;\n}\nvoid cut(int x,int y)\n{\n\tsplit(x,y);\n\tt[y].c[0] = t[x].fa = 0;\n\tpushup(y);\n}\nint find(int rt){\n    access(rt);\n\tsplay(rt);\n    while(t[rt].c[0]) rt = t[rt].c[0];\n    return rt;\n}\nstruct Edge{int x,y,w;}e[N];\nstruct Stack{int x,y;}st[N];\nint top = 0,tot = 0;\nvector<int> T[N<<2];\nvoid update(int u,int l,int r,int L,int R,int x)\n{\n\tif(r < L || l > R) return;\n\tif(L <= l && r <= R) {T[u].push_back(x);return;}\n\tint mid = l + r >> 1;\n\tupdate(u<<1,l,mid,L,R,x);\n\tupdate(u<<1|1,mid+1,r,L,R,x);\n}\nvoid debug()\n{\n\tprintf(\"\\nval:: \");\n\tfor(int i = 1;i < n+n+m;i++)\n\tprintf(\"%d \",t[i].val);\n\tprintf(\"\\nmx:: \");\n\tfor(int i = 1;i < n+n+m;i++)\n\tprintf(\"%d \",t[i].mx);\n\tprintf(\"\\n\");\n}\nvoid solve(int u,int l,int r)\n{\n//\tcout<<u<<endl;\n\t\n\tint lasttop = top;\n\tfor(int i = 0;i < T[u].size();i++)\n\t{\n\t\tint id = T[u].at(i);\n\t\tint a = e[id].x,b = e[id].y,w = e[id].w;\n\t\tsplit(a,b);\n\t\tint Emax;\n\t\tEmax = t[b].mx;\n//\t\tdebug();\n//\t\tcout<<e[id].w<<\" id:: \"<<t[Emax].val<<endl;\n\t\tif(t[Emax].val <= w) continue;\t\n\t\tEmax -= n;\n\t\tst[++top] = (Stack){id,Emax};\n\t\ttot -= e[Emax].w;\n\t\tcut(e[Emax].x,Emax+n);cut(e[Emax].y,Emax+n);\n\t\ttot += e[id].w;\n\t\tlink(a,id+n);link(b,id+n);\n\t}\n\tif(l == r)  \n\t{\n//\t\tif(r<=5)\n\t\tprintf(\"%lld\\n\",tot+1);\n\t}\n\telse{\n\t\tint mid = l + r >> 1;\n\t\tsolve(u<<1,l,mid);\n\t\tsolve(u<<1|1,mid+1,r);\n\t}\n\twhile(top > lasttop)\n\t{\n\t\tint a = st[top].x,b = st[top].y;\n\t\tcut(e[a].x,a+n);cut(e[a].y,a+n);\n\t\tlink(e[b].x,b+n);link(e[b].y,b+n);\n\t\ttot -= e[a].w;\n\t\ttot += e[b].w;\n\t\ttop--;\n\t}\n}\nsigned main()\n{\n\tn = read();\n\tfor(int i = 1;i < n;i++)\n\t{\n\t\te[i].x = read(),e[i].y = read(),e[i].w = read();\n\t\tlink(e[i].x,n+i);\n\t\tlink(e[i].y,n+i);\n\t\ttot += e[i].w;\n\t\tt[i+n].mx = i + n;\n\t\tt[i+n].val = e[i].w;\n\t}\n\tm = read();\n\tfor(int i = n;i < m+n;i++)\n\t{\n\t\te[i].x = read();e[i].y = read();e[i].w = read();\n\t\tt[i+n].mx = i+n;\n\t\tt[i+n].val = e[i].w;\n\t\tint l = read(),r = read();\n\t\tupdate(1,1,32766,l,r,i);\n\t}\n\tsolve(1,1,32766);\n\treturn 0;\n}\n```\n",
        "postTime": 1595895166,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4319 \u3010\u53d8\u5316\u7684\u9053\u8def\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u7136\u540e\u7ed9\u4e00\u4e9b\u4e0d\u5b9a\u8fb9\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u4e0d\u5b9a\u8fb9\u7684\u51fa\u73b0\u65f6\u95f4$l,r$\uff0c\u52a8\u6001\u7684\u6c42\u51fa\u7b2c$i$\u5929($i\\in[1,32766]$)\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n## \u9898\u89e3\n\u5efa\u8bae\u5148\u505a\u4e00\u4e0b\u52a8\u6001\u7ef4\u62a4\u53ea\u6709\u52a0\u8fb9\u7684$MST$\u7684\u9898\u3002\n[\u6c34\u7ba1\u5c40\u957f](https://www.lydsy.com/JudgeOnline/problem.php?id=2594)\n\n### \u9996\u5148\u8003\u8651\u52a0\u8fb9\u64cd\u4f5c\n\u6211\u4eec\u5047\u8bbe\u52a0\u5165\u4e00\u6761\u8fb9$(u,v)$\u4e4b\u540e\u53ef\u4ee5\u65f6\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u548c\u53d8\u5c0f\u3002\n\n\u6b64\u65f6\u80af\u5b9a\u8981\u628a\u8fd9\u6761\u8fb9\u52a0\u8fdb\u53bb\uff0c\u90a3\u4e48\u4e3a\u4e86\u7ef4\u62a4\u6700\u5c0f\u751f\u6210\u6811\u7684\u5f62\u6001\uff0c\u5e94\u8be5\u628a\u8fd9\u6761\u8fb9\u4e24\u7aef\u70b9\u539f\u6765\u6240\u5728\u7684\u94fe\u4e0a\u5220\u53bb\u67d0\u6761\u8fb9\u3002\n\n\u5bb9\u6613\u77e5\u9053\u8fd9\u6837\u64cd\u4f5c\u4e4b\u540e\u56fe\u4ecd\u7136\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8981\u5220\u6389\u54ea\u6761\u8fb9\uff0c\u7531\u4e8e\u6211\u4eec\u53ea\u9700\u8981\u548c\u6700\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u627e\u51fa\u539f\u94fe\u4e0a\u6743\u503c\u6700\u5927\u7684\u4e00\u6761\u8fb9\uff0c\u6bd4\u8f83\u5b83\u4e0e\u52a0\u5165\u7684\u8fb9\u7684\u6743\u503c\u5927\u5c0f\uff0c\u5982\u679c\u52a0\u5165\u7684\u8fb9\u6743\u503c\u6bd4\u94fe\u4e0a\u6700\u5927\u6743\u503c\u5927\uff0c\u5c31\u5c06\u5176\u52a0\u5165\uff0c\u5426\u5219\u4e0d\u52a0\u5165\u3002\n\n### \u4f46\u662f\u9898\u4e2d\u8fd8\u6709\u5220\u9664\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\n\u4e00\u6761\u8fb9\u5f71\u54cd\u7684\u80af\u5b9a\u662f\u4e00\u6bb5\u533a\u95f4\uff0c\u5047\u8bbe\u4e00\u6bb5\u65f6\u95f4\u4e3a$[L, R]$\uff0c\u5f53\u4e00\u6bb5\u65f6\u95f4$[l, r]$\u5185\u8fd9\u6761\u8fb9\u4e00\u76f4\u5b58\u5728\u65f6\u663e\u7136\u6709$L<=l, r <= R$\u8fd9\u4e2a\u548c\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u5305\u542b\u662f\u540c\u79cd\u5f62\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u5bf9\u65f6\u95f4\u8fdb\u884c\u5206\u6cbb\uff0c\u7ebf\u6bb5\u6811\u4e0a\u67d0\u4e00\u6bb5\u533a\u95f4\u82e5\u88ab\u67d0\u4e00\u6761\u8fb9\u5b8c\u5168\u5305\u542b\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u4ee3\u8868\u7684\u8282\u70b9\u6253\u4e0a\u6c38\u4e45\u6807\u8bb0\uff0c\u4e0d\u7528\u4e0b\u63a8\u3002\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u5728\u5206\u6cbb\u65f6\u8fdb\u5165\u67d0\u6bb5\u533a\u95f4\u5148\u628a\u5c06\u8fd9\u6bb5\u533a\u95f4\u5b8c\u5168\u8986\u76d6\u7684\u8fb9\u5224\u65ad\uff0c\u5bf9\u4e8e\u52a0\u5165\u7684\u8fb9\u8bb0\u5f55\u4e0b\u5220\u9664\u4e86\u54ea\u4e9b\u539f\u94fe\u4e0a\u7684\u8fb9\uff0c\u6700\u540e\u626b\u5b8c(\u7ebf\u6bb5\u6811\u4e0a\u7684)\u5b50\u6811\u540e\u66b4\u529b\u4fee\u6539\u56de\u6ca1\u6709\u6ca1\u6709\u52a0\u8fd9\u6bb5\u533a\u95f4\u7684\u72b6\u6001\u3002\n\n\u6211\u89c9\u5f97\u5176\u5b9e\u66b4\u529b\u626b$[1,32766]$\u7136\u540e\u5728\u7aef\u70b9\u5904\u7528lct\u52a0\u8fb9\u5220\u8fb9\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5427\u3002\u6c42dalao\u6307\u70b9\u3002\n\n## \u7a0b\u5e8f\n\u849f\u84bb\u4e71\u5f00\u7684\u6570\u7ec4\u5927\u5c0f\u6c42dalao\u52ffdui\u3002\n``` cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <stack>\n#define MAX_N 50007\n#define MAX_M 400007\n#define R 32766\n\ntypedef long long ll;\n\nnamespace lct {\n    int c[MAX_M * 2][3], fa[MAX_M * 2];\n    int mx[MAX_M * 2];\n    ll val[MAX_M * 2];\n    int q[MAX_M * 2], top;\n    bool rev[MAX_M * 2];\n\n    inline bool isroot (int x) {return c[fa[x]][0] != x && c[fa[x]][1] != x;}\n\n    inline void pushdown (int x) {\n        int ls = c[x][0], rs = c[x][1];\n        if (rev[x]) {\n            rev[x] ^= 1, rev[ls] ^= 1, rev[rs] ^= 1;\n            std::swap(c[x][0], c[x][1]);\n        }\n    }\n\n    inline void update (int x) {\n        int ls = c[x][0], rs = c[x][1];\n        mx[x] = x;\n        if (val[mx[x]] < val[mx[ls]]) mx[x] = mx[ls];\n        if (val[mx[x]] < val[mx[rs]]) mx[x] = mx[rs];\n    }\n\n    inline void rotate (int x) {\n        int y = fa[x], z = fa[y], l, r;\n        l = (c[y][1] == x), r = l ^ 1;\n        if (!isroot(y))\n            c[z][c[z][1] == y] = x;\n        fa[x] = z, fa[y] = x, fa[c[x][r]] = y;\n        c[y][l] = c[x][r], c[x][r] = y;\n        update(y), update(x);\n    }\n\n    inline void splay (int x) {\n        top = 0, q[++top] = x;\n        for (int i = x; !isroot(i); i = fa[i]) q[++top] = fa[i];\n        for (int i = top; i; --i) pushdown(q[i]);\n        while (!isroot(x)) {\n            int y = fa[x], z = fa[y];\n            if (!isroot(y))\n                if ((c[y][0] == x) ^ (c[z][0] == y)) rotate (x);\n                else rotate (y);\n            rotate (x);\n        }\n    }\n\n    inline void access (int x) {\n        for (int t = 0; x; t = x, x = fa[x]) \n            splay(x), c[x][1] = t, update(x);\n    }\n\n    inline void makeroot (int x) {\n        access(x), splay(x), rev[x] ^= 1;        \n    }\n\n    inline void link (int x, int f) {\n        makeroot(x), fa[x] = f;\n    }\n\n    inline void cut (int x, int y) {\n        makeroot(x);\n        access(y), splay(y);\n        c[y][0] = fa[x] = 0;\n    }\n\n    inline int query (int x, int y) {\n        makeroot(x);\n        access(y); splay(y);\n        return mx[y];\n    }\n};\nusing namespace lct;\n\nint N, M;\nll ans, res[R + 100];\n\nstruct edge {\n    int u, v, id;\n    ll w;\n}e[MAX_M * 2];\n\nstd::vector<int> tag[R * 6];\n\nvoid modify (int x, int l, int r, int totl, int totr, int id) {\n    if (l > r || l > totr || r < totl) return;\n    if (totl <= l && r <= totr) {tag[x].push_back(id);return;}\n    if (l == r) return;\n    int mid = l + r >> 1;\n    if (totl <= mid) modify (x * 2, l, mid, totl, totr, id);\n    if (mid < totr) modify (x * 2 + 1, mid + 1, r, totl, totr, id);\n}\n\nvoid calc (int x, int l, int r) {\n    std::stack<std::pair<int, int> > stk;\n    int m = tag[x].size();\n    for (int i = 0;i < m; ++i) {\n        int id = tag[x][i], u = e[id - N - M].u, v = e[id - N - M].v, t = query(u, v);\n        ll w = e[id - N - M].w;\n        if (val[t] <= w) continue;\n        stk.push(std::make_pair(t, 1));\n        stk.push(std::make_pair(id, 0));\n        cut(t, e[t - N - M].u), cut(t, e[t - N - M].v), ans -= e[t - N - M].w;\n        link(id, e[id - N - M].u), link(id, e[id - N - M].v), ans += w;\n    }\n    if (l == r) res[l] = ans;\n    else {\n        int mid = l + r >> 1;\n        calc(x * 2, l, mid), calc(x * 2 + 1, mid + 1, r);\n    }\n    while (!stk.empty()) {\n        std::pair<int, int> p = stk.top(); stk.pop();\n        int id = p.first;\n        if (p.second == 0) cut(id, e[id - N - M].u), cut(id, e[id - N - M].v), ans -= e[id - N - M].w;\n        else link(id, e[id - N - M].u), link(id, e[id - N - M].v), ans += e[id - N - M].w;\n    }\n}\n\nint main () {\n    scanf(\"%d\", &N);\n    for (int i = 1;i < N; ++i) {\n        scanf(\"%d%d%lld\", &e[i].u, &e[i].v, &e[i].w);\n    }\n    int l, r;\n    scanf(\"%d\", &M);\n    for (int i = 1;i < N; ++i) {\n        mx[N + M + i] = N + M + i;\n        val[N + M + i] = e[i].w;\n        ans += e[i].w;\n        link(e[i].u, N + M + i);\n        link(e[i].v, N + M + i);\n    }\n    for (int i = N;i < M + N; ++i) {\n        scanf(\"%d%d%lld%d%d\", &e[i].u, &e[i].v, &e[i].w, &l, &r);\n        mx[N + M + i] = N + M + i;\n        val[N + M + i] = e[i].w;\n        modify (1, 1, R, l, r, N + M + i);\n    }\n    calc(1, 1, R);\n    for (int i = 1;i <= R; ++i) printf(\"%lld\\n\", res[i] + 1);\n    return 0;\n}\n```",
        "postTime": 1530591526,
        "uid": 51361,
        "name": "hjsjhn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4319 \u3010\u53d8\u5316\u7684\u9053\u8def\u3011"
    }
]