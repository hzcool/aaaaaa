[
    {
        "content": "#\u8fd9\u4ee4\u4eba\u7a92\u606f~~[\u667a\u7184]~~\u7684\u64cd\u4f5c\uff01\uff01\n\n###\u9898\u89e3\uff1a\n\n\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\u4e86...\n\n\u7ed9\u4f60 **t** \u7ec4\u7b80\u5316\u4ee3\u7801\u3002\u6bcf\u7ec4 **l** \u884c\u3002\u5e76\u7ed9\u4f60\u4e00\u4e2a\u590d\u6742\u5ea6\u3002\n\n\u9898\u76ee\u8981\u6211\u4eec\u505a\uff1a\n\n- \u6a21\u62df\u5faa\u73af\uff0c\u540c\u65f6\u5224\u65ad\u8bed\u6cd5\u662f\u5426\u6709\u8bef\uff0c\u5e76\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u60f3\u5230\u7684\u5c31\u662f\uff1a\n\n####\u8bfb\u5165\uff1a\n\n\u5f88\u660e\u663e**\u5728\u7ebf\u68c0\u67e5\u4ee3\u7801**\u5728\u9700\u8981\u5224\u9519\u7684\u60c5\u51b5\u4e0b\u662f\u5f88\u4e0d\u660e\u667a\u7684\uff0c\u9700\u8981\u5f88\u591a\u7684\u590d\u6742\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9**\u4fdd\u5b58\u4ee3\u7801**\u3002\u5f53\u7136\uff0c**\u5b57\u7b26\u4e32**\u662f\u4fdd\u5b58\u4ee3\u7801\u6700\u597d\u7684\u9009\u62e9\u4e86\uff01\u6211\u4eec\u9009\u62e9\u4ee5\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u8bfb\u5165\u4ee3\u7801\u3002\n\n\u76f8\u5173\u7684\u8bfb\u5165\uff1a\n\n```cpp\n    string o;\n    string code[maxl];\n    \n    \n    scanf(\"%d\",&t);//\u8bfb\u5165t;\n    while(t--) {\n        //\u9009\u7528getline(cin,s)\u8bfb\u5165\u4e00\u6574\u884c\u4ee3\u7801;\n        scanf(\"%d \",&l); getline(cin,o);//\u6ce8\u610f%d\u540e\u7684\u7a7a\u683c\uff08\u8f93\u5165\u4e2dl\u540e\u6709\u4e00\u4e2a\u7a7a\u683c\uff09\n        for(int i=1;i<=l;i++) getline(cin,code[i]);\n    }\n```\n####\u83b7\u53d6\u4ee3\u7801\u4fe1\u606f\uff0c\u6a21\u62df\u5faa\u73af\uff1a\n\n\u6ce8\u610f\u5230\u4ee3\u7801\u4e2d\u6709\u5f88\u591a\u6b63\u6574\u6570\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u6765**\u83b7\u53d6\u4ee3\u7801\u4e2d\u7684\u6b63\u6574\u6570**\u3002\n\n\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n\n```cpp\n    int sread(int &x,string c) {\n    //\u7528\u4e8e\u83b7\u5f97c\u4e32\u4e0b\u6807\u4e3ax\u7684\u4e2d\u7684\u6b63\u6574\u6570\uff0c\u6211\u4eec\u5c06 F x 1 n \u4e2d\u7684n\u4e5f\u770b\u4f5c\u6574\u6570\uff0c\u6709\u5229\u4e8e\u540e\u7eed\u5bf9\u5faa\u73af\u7684\u5904\u7406\u3002\n    //n\u4e5f\u5c31\u662f\u7279\u5224\u4e00\u4e0b\uff0c\u5176\u4f59\u7684\u6a21\u62df\u5feb\u8bfb\u5c31\u597d\u4e86\u3002\n        int res=0;\n        int len=c.size();\n        while(c[x]<'0' || c[x]>'9'&&x<c.size()) {\n            if(c[x]=='n'){\n                ++x;//\u8fd9\u53e5\u4e00\u5b9a\u8981\u6709\uff01\uff01\uff01\u4e0d\u80fd\u76f4\u63a5return\uff1b\n                return 1000000;\n            }\n            ++x;\n        }\n        while(c[x]>='0' && c[x]<='9') {\n            res*=10;res+=c[x]-'0';\n            ++x;\n        }\n        return res;\n    }\n```\n\u9996\u5148\u83b7\u5f97\u5c0f\u660e\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u3002\n\n**\u5728o\uff08...\uff09\u4e2d\u5982\u679c\u6ca1\u6709n\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u4e3an^0\uff0c\u5982\u679c\u6709\uff0c\u5219\u4e3an^w\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cfw\u4fdd\u5b58\u590d\u6742\u5ea6**\n\n\u6211\u4eec\u5199\u4e00\u4e2a\u51fd\u6570\u4ee5\u83b7\u53d6\u590d\u6742\u5ea6:\n\n```cpp\n    int geto() {\n        int res=0,x=3;//\u4ece\u4e0b\u68073\u5904\u5f00\u59cb\uff0cO(1)\u6216O(n^w);\n        int len=o.size();\n        if(o[2]=='n') res=sread(x,o);//\u5982\u679c\u4e3aO(n^w)\uff0c\u83b7\u53d6w\uff0c\u5426\u5219w=0\uff1b\n        else res=0;\n        return res;\n    }\n    \n    w=geto();\n```\n\u7136\u540e\u5f00\u59cb\u6a21\u62df\u5faa\u73af\uff0c\u540c\u65f6\u5224\u65ad\u8bed\u6cd5\u662f\u5426\u6709\u8bef\uff0c\u5e76\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u6211\u4eec\u5199\u4e00\u4e2a**int check()**\u51fd\u6570\uff0c\u7ed3\u679c\u7528**res**\u4fdd\u5b58\uff0c**\u82e5\u8fd4\u56de\u503c\u4e3a-1\uff0c\u5219\u4ee3\u8868\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5426\u5219\u4ee3\u8868\u4ee3\u7801\u590d\u6742\u5ea6**\u3002\uff08\u5f53\u524d\u590d\u6742\u5ea6\u7528**now**\u4fdd\u5b58\uff09\u3002\n\n\n\u9996\u5148\u8003\u8651\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u60c5\u51b5\uff1a\n\n\u6211\u4eec\u5728\u6a21\u62df\u7684\u65f6\u5019\uff0c\u80af\u5b9a\u9700\u8981\u4e00\u4e2a\u6808**s**\u3002\n\n\u904d\u5386\u4e00\u904d\u4ee3\u7801:\n\n\n\u5982\u679c\u9047\u5230\u4e86**F**\uff0c\u90a3\u4e48\u83b7\u53d6\u53d8\u91cf\u540d\uff0c\u7528**k**\u4fdd\u5b58\uff0c\u83b7\u53d6 **F x i j** \u4e2d\u7684 **i j**\uff0c\u5206\u522b\u7528 **a b** \u4fdd\u5b58\u3002\u5c06 **k** \u8fdb\u6808\u3002\n\n- \u5982\u679c **b<a** ,\u90a3\u4e48\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u3002\u7528\u4e00\u4e2a **flag** \u6765\u4fdd\u5b58\u6700\u65e9\u7684\u6ca1\u6709\u6ca1\u6709\u8fdb\u5165\u7684 **k**\u3002\u5982\u679c\u90fd\u8fdb\u5165\u4e86\uff0c\u5219flag\u4e3a-1\u3002\n\n- \u5982\u679c **a<=b** ,\u4ee3\u8868\u8fdb\u5165\u5faa\u73af\uff0c\u6b64\u65f6\u82e5 **b-a>1000** \u5e76\u4e14 flag \u4e3a -1 ,\u5219\u672c\u5c42\u5faa\u73af\u5bf9\u590d\u6742\u5ea6\u6709\u8d21\u732e\uff0c\u6267\u884c **now++** \u64cd\u4f5c\u3002\u540c\u65f6\u6211\u4eec\u7528 **ef[26]** \u4fdd\u5b58 **now++** \u65f6 **k** \u7684\u4fe1\u606f**(ef[k]=true)**\u3002**\uff08\u5728k\u51fa\u6808\u65f6now - -,ef[k]=false\uff09**\u5e76\u66f4\u65b0**res\u3002\uff08res=max\uff08res\uff0cnow\uff09\uff09**\n\n\n\u5982\u679c\u9047\u5230\u4e86**E**\uff0c\u90a3\u4e48\u540c\u6837\u83b7\u53d6\u53d8\u91cf\u540d **k** \uff0c\u5c06**k**\u5f39\u51fa\uff08\u56e0\u4e3a\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u6808\u4e00\u5b9a\u4e0d\u7a7a\uff09\u3002\u540c\u65f6\u5224\u65ad **flag**\u662f\u5426\u4e3a **k** \uff0c\u82e5\u4e3a **k** \uff0c\u5219 **flag=-1** \u4ee3\u8868\u5df2\u7ecf\u51fa\u4e86\u6ca1\u6709\u8d21\u732e\u7684\u5faa\u73af\u3002\u5728\u5224\u65ad**k**\u662f\u5426\u5bf9\u590d\u6742\u5ea6\u6709\u8d21\u732e\uff0c\u82e5\u6709\uff0c\u5219**now-,ef[k]=false\uff1b**\n\n\n\u6700\u540e**return res**\uff1b\n\n\n\u518d\u6765\u5728\u6b64\u57fa\u7840\u4e0a\u8003\u8651\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u60c5\u51b5\uff1a\n\n- F \u548c E \u4e0d\u5339\u914d \uff08\u7c7b\u4f3c\u4e8e\u62ec\u53f7\u5339\u914d\uff09\uff1a\n\n\u2460 F\u6bd4E\u591a\uff0c\u53ea\u9700\u5728**k**\u51fa\u6808\u65f6\u5224\u65ad**\u6808\u662f\u5426\u4e3a\u7a7a**\uff0c\u82e5\u4e3a\u7a7a\u5219\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u63a5**return -1**\u3002\n\n\u2461 F\u6bd4E\u5c11\uff0c\u53ea\u9700\u5728\u904d\u5386\u5b8c\u4ee3\u7801\u540e\u5224\u65ad**\u6808\u662f\u5426\u4e0d\u4e3a\u7a7a**\uff0c\u82e5\u4e0d\u7a7a\u5219\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u63a5**return -1**\u3002\n\n- \u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d\uff1a\n\n\u7528\u4e00\u4e2a**bool\u6570\u7ec4 ins[26] **\u8868\u793a\u5f53\u524d\uff0c\u54ea\u4e9b\u53d8\u91cf\u88ab\u7528\u8fc7\u3002\u90a3\u4e48\u53ea\u9700\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\uff1a\n\n\u2460 \u5728**k\u5165\u6808\u65f6**\uff0c\u5224\u65ad**k**\u662f\u5426\u5df2\u7ecf\u88ab\u7528\u8fc7\uff08\u5373**k\u662f\u5426\u5728\u6808\u4e2d**\uff09\uff0c\u82e5\u7528\u8fc7\u5219\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u63a5**return -1**\u3002\n\n\u2461 \u5728**k\u51fa\u6808\u65f6**\uff0c\u5224\u65ad**\u6808\u662f\u5426\u4e3a\u7a7a**\uff0c\u82e5\u4e3a\u7a7a\u5219\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u63a5**return -1**\u3002\n\n\n**\u5206\u6790\u5230\u6b64\u7ed3\u675f\u3002**\n\n###**code**\uff1a\n\n**\u7531\u4e8e\u4e0a\u6587\u5c06\u7ec6\u8282\u5df2\u89e3\u91ca\u7684\u975e\u5e38\u6e05\u695a\uff0c\u4ee3\u7801\u4e0d\u5728\u6ce8\u91ca**\n\n\n```cpp\n    #include<cstdio>\n    #include<stack>\n    #include<string>\n    #include<iostream>\n    #include<algorithm>\n    using namespace std;\n    \n    const int maxl=105;\n    \n    int t,l,w;\n    string o;\n    string code[maxl];\n    \n    int sread(int &x,string c) {\n        int res=0;\n        int len=c.size();\n        while(c[x]<'0' || c[x]>'9'&&x<c.size()) {\n            if(c[x]=='n'){\n                ++x;\n                return 1000000;\n            }\n            ++x;\n        }\n        while(c[x]>='0' && c[x]<='9') {\n            res*=10;res+=c[x]-'0';\n            ++x;\n        }\n        return res;\n    }\n    \n    int geto() {\n        int res=0,x=3;\n        int len=o.size();\n        if(o[2]=='n') res=sread(x,o);\n        else res=0;\n        return res;\n    }\n    \n    int check() {\n        int res=0,now=0;\n        int a,b,x;\n        stack<int> s;\n        int flag=-1;\n        bool ins[26]={0};\n        bool ef[26]={0};\n        for(int i=1;i<=l;i++) {\n            if(code[i][0]=='F') {\n                int k=code[i][2]-'a';\n                if(ins[k]) return -1;\n                s.push(k);ins[k]=true;\n                x=4;\n                a=sread(x,code[i]);b=sread(x,code[i]);\n                //printf(\"a:%d  b:%d\\n\",a,b);\n                if(b-a>1000) {\n                    //cout<<\"##\"<<(char)(k+'a')<<\"##\"<<endl;\n                    if(flag==-1) {\n                        now++;\n                        res=max(res,now);\n                        ef[k]=true;\n                    }\n                }\n                if(a>b) {\n                    if(flag==-1) flag=k;\n                }\n            }\n            if(code[i][0]=='E') {\n                if(s.empty()) return -1;\n                int k=s.top();\n                s.pop();ins[k]=false;\n                if(flag==k) flag=-1;\n                if(ef[k]) {\n                    ef[k]=false;\n                    now--;\n                }\n            }\n        }\n        if(s.size()) return -1;\n        return res;\n    }\n    \n    int main() {\n        //freopen(\"s.txt\",\"w\",stdout);\n        scanf(\"%d\",&t);\n        while(t--) {\n            int ww;\n            scanf(\"%d \",&l); getline(cin,o);\n            w=geto();\n            //printf(\"w:%d\\n\",w);\n            for(int i=1;i<=l;i++) getline(cin,code[i]);\n            //for(int i=1;i<=l;i++) cout<<code[i]<<\"###\\n\";\n            ww=check();\n            //printf(\"ww:%d\\n\",ww);\n            //cout<<o<<\"##\\n\";\n            if(ww==-1) puts(\"ERR\");\n            else {\n                if(ww==w) puts(\"Yes\");\n                else puts(\"No\");\n            }\n        }\n    }\n```\n###\u611f\u8c22\u5404\u4f4d\u89c2\u4f17\u8001\u7237\uff01\n\n###~~\u5f31\u5f31\u7684\u95ee\u4e00\u53e5\uff1a\u6211\u80fd\u4e0d\u80fd\u65e0\u803b\u5730\u6c42\u4e00\u6ce2\u8d5e? OTZ QAQ~~\n",
        "postTime": 1516268907,
        "uid": 50966,
        "name": "YWY_wys",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u505a\u8fd9\u4e2a\u9898\u53ef\u4ee5\u5927\u4f53\u4f53\u73b0\u51fa\u4e00\u4e2a\u4eba\u7684\u8010\u5fc3\u548c\u6a21\u62df\u80fd\u529b\u3002\u3002\u3002\n\n\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u4e00\u5b9a\u8981\u5728\u7eb8\u4e0a\u5199\u5199\u753b\u753b\uff0c\u8003\u8651\u5230\u6240\u6709\u60c5\u51b5\u53ca\u5982\u4f55\u89e3\u51b3\u3002\n\n\u5982\uff1a\n-  ERR\u8df3\u51fa\u540e\u5982\u4f55\u8bfb\u4e0b\u4e00\u7ec4\u6570\u636e\uff1f\n- \u4e00\u76f4\u8bfb\uff0c\u76f4\u5230\u542b\u6709\u5927\u5199\u5b57\u6bcdO\n\n\n- \u82e5\u9047\u5230\u521d\u503c\u5927\u4e8e\u672b\u503c\u5e94\u5982\u4f55\u5904\u7406\uff1f\n- \u6807\u8bb0\u4e00\u4e0b\uff0c\u540e\u9762\u7684\u53ea\u5224\u65adERR\n\n\n- \u9000\u51fa\u5faa\u73af\u65f6\u66f4\u6539\u4ec0\u4e48\u5224\u65ad\u4ec0\u4e48\u53d6\u6d88\u4ec0\u4e48\uff1f\n- \u5faa\u73af\u6570\u53d6max\uff0c\u82e5\u4e4b\u524d\u6807\u8bb0\u8fc7\uff0c\u53d6\u6d88\u5373\u53ef\uff0c\u540c\u65f6\u53d8\u91cf\u4e5f\u8981\u53d6\u6d88\n\n\n\u4e0b\u9762\u662f~~\u7b80\u6d01\u7684~~\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstring a,b;     //a,b\u5faa\u73af\u4f7f\u7528 \nint c,d,e,f[27],g[27],h,k,l[100],m,n,o;\n//c\u662f\u6709\u51e0\u4e2a\u53e5\u5b50\uff0cd\u662f\u9898\u76ee\u7ed9\u7684\u590d\u6742\u5ea6\u662f\u591a\u5c11\n//e\u662f\u5f53\u524d\u5728\u51e0\u91cd\u5faa\u73af\uff0cf[]\u662f\u5224\u65ad\u53d8\u91cf\u662f\u5426\u4f7f\u7528\u8fc7\n//g[]\u662f\u5b58\u4e0b\u6bcf\u4e2a\u5faa\u73af\u7684\u53d8\u91cf\uff0ch\u662f\u5f53\u524d\u590d\u6742\u5ea6\u662f\u591a\u5c11(\u4e0ee\u4e0d\u540c)\n//k\u662f\u5224\u65ad\u4e0b\u9762\u7a0b\u5e8f\u662f\u5426\u8fdb\u884c\uff0cl[]\u662f\u5b58\u4e0b\u54ea\u51e0\u4e2a\u5faa\u73af\u52a0\u4e86\u590d\u6742\u5ea6\n//m\u662f\u5f53\u524d\u6700\u5927\u590d\u6742\u5ea6\uff0cn\u662f\u5b58\u4e0bk=1\u65f6\u7684\u5faa\u73af\u6570\n//o\u662f\u6570\u636e\u7ec4\u6570 \nint main()\n{\n    cin>>o;    //\u8bfb\u5165\u6570\u636e\u7ec4\u6570 \n    while(o>0)\n    {\n    \tc=0;d=0;m=0;n=0;e=0;h=0;k=0;o--;      //\u521d\u59cb\u5316\uff0c\u5269\u4f59\u6570\u636e\u7ec4\u6570-1 \n        memset(f,0,sizeof(f));memset(l,0,sizeof(l));   //\u521d\u59cb\u5316 \n        do{a=b;cin>>b;} while(b[0]!='O');     //\u8bfb\u5165\uff0c\u5f53b[0]='O'\u65f6\u505c\u4e0b\uff0c\u4fdd\u8bc1ERR\u65f6\u4e0b\u4e00\u4e2a\u7ee7\u7eed\u8fd0\u884c \n        for(int i=0;i<a.length();i++) c=c*10+a[i]-'0';   //\u53d6\u51fa\u9898\u76ee\u7ed9\u7684\u53e5\u5b50\u6570\u91cf \n        for(int i=4;i<b.length()-1;i++) d=d*10+b[i]-'0';  //\u53d6\u51fa\u9898\u76ee\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u4e0d\u5f71\u54cd \n        while(c>0)\n        {\n            c--;cin>>a;   //\u8bfb\u5165F \u6216 E ,\u53e5\u5b50\u6570-1\n            if(a[0]=='F')   //\u5982\u679c\u662fF \n            {\n                e++;cin>>a;   //\u5f53\u524d\u5faa\u73af\u6570+1\uff0c\u8bfb\u5165\u53d8\u91cf \n                if(f[a[0]-96]) e=-1;    //\u5982\u679c\u88ab\u7528\u8fc7\uff0c\u6807\u8bb0ERR \n                else f[a[0]-96]=1,g[e]=a[0]-96;    //\u6ca1\u7528\u8fc7\u5c31\u6807\u8bb0\u7528\u8fc7\uff0c\u5e76\u5b58\u8d77\u6765 \n                cin>>a>>b;      //\u8bfb\u5165\u53d8\u91cf\u521d\u503c\u548c\u672b\u503c \n                if(a[0]!='n'&&b[0]=='n'&&k==0) h++,l[e]=1;   //\u5982\u679ca\u662f\u6570\u5b57\uff0cb\u662fn\uff0c\u800c\u4e14\u53ef\u4ee5\u8fd0\u884c\uff0c\u90a3\u4e48\u5f53\u524d\u590d\u6742\u5ea6+1\uff0c\u8bb0\u4e0b\u5faa\u73af\u6570 \n\t\t\t\telse if(((a.length()==b.length()&&a>b)||(a.length()>b.length())||(a[0]=='n'&&b[0]!='n'))&&k==0) k=1,n=e;\n                //\u5982\u679ca>b(n 4,45 12,24 9),\u800c\u4e14\u53ef\u4ee5\u8fd0\u884c\uff0c\u90a3\u4e48\u6807\u8bb0\u4e0b\u9762\u7684\u90fd\u4e0d\u80fd\u8fd0\u884c\uff0c\u8bb0\u4e0b\u5f53\u524d\u5faa\u73af \n                //\u50cf5 8\uff0c76 78, n n \u4e4b\u7c7b\u7684\u4e0d\u5f71\u54cd\uff0c\u4e0d\u9700\u8981\u5904\u7406 \n            }else\n            {      //\u5982\u679c\u662fE \n                m=max(m,h);f[g[e]]=0;     //\u5c06\u6700\u5927\u590d\u6742\u5ea6\u66f4\u6539 \uff0c\u53d8\u91cf\u6807\u8bb0\u6ca1\u7528\u8fc7 \n                if(l[e]==1) h--,l[e]=0;    //\u5982\u679c\u5f53\u524d\u5faa\u73af\u52a0\u4e86\u590d\u6742\u5ea6\uff0c\u5f53\u524d\u590d\u6742\u5ea6-1\uff0c\u6807\u8bb0\u6e05\u7a7a \n                e--;    //\u5f53\u524d\u5faa\u73af\u6570-1 \n                if(n>0&&e<n) k=0,n=0;   //\u5982\u679c\u8df3\u51fa\u4e86n\u6807\u8bb0\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u5faa\u73af\u53ef\u4ee5\u8fd0\u884c\uff0c\u6807\u8bb0\u6e05\u7a7a \n            }\n            if(e==-1) printf(\"ERR\\n\"),c=-1;   //\u5982\u679ce<0(\u53d8\u91cf\u7528\u8fc7\u6216\u8005E\u8fc7\u591a)\uff0c\u90a3\u4e48\u8f93\u51faERR\uff0c\u8df3\u51fa\u5faa\u73af \n        }\n        if(e>0) printf(\"ERR\\n\");    //\u5982\u679ce>0(F\u8fc7\u91cf)\uff0c\u90a3\u4e48\u8f93\u51faERR\uff0c\u8df3\u51fa\u5faa\u73af \n        if(e==0&&m==d) printf(\"Yes\\n\");   //\u5982\u679cF,E\u76f8\u540c\u800c\u4e14\u6700\u5927\u590d\u6742\u5ea6\u7b49\u4e8e\u9898\u76ee\u7ed9\u7684\u590d\u6742\u5ea6\uff0c\u8f93\u51faYes \n        if(e==0&&m!=d) printf(\"No\\n\");    //\u5982\u679cF,E\u76f8\u540c\u800c\u4e14\u6700\u5927\u590d\u6742\u5ea6\u4e0d\u7b49\u4e8e\u9898\u76ee\u7ed9\u7684\u590d\u6742\u5ea6\uff0c\u8f93\u51faNo \n    }\n    return 0;\n}   //40\u884c\u4ee3\u7801 \n```",
        "postTime": 1519378015,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "#### [\u70b9*\u6211\u770b@\u9898\uffe5\u76ee(\u665a\u4e86^\u4f1a\u88ab&\u5220](https://www.luogu.org/problemnew/show/P3952)\n\n## \u89e3\u9898\u80cc\u666f\n\n~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u6709\u89e3\u9898\u80cc\u666f~~ \u8fd9\u9053\u9898\u5f88\u4e45\u4e4b\u524d\u5c31\u542c\u8bf4\u8fc7\u5e76\u4e14\u770b\u8fc7\u9898\u9762\uff0c\u4f46\u662f\u7531\u4e8e\u4e45\u8d1f\u76db\u540d\u7684**\u6bd2\u7624**\u6211\u4e00\u76f4\u61d2\u5f97\u5199\u3002\u8fd9\u4e24\u5929\u6211\u8ddf*jiang25262*\u641e\u5230\u4e00\u8d77\u7684\u65f6\u5019\u6211\u53d1\u73b0\u4ed6\u4e5f\u5728\u505a\u8fd9\u9053\u9898\uff0c\u800c\u4e14\u636e*FCL*\u8bf4\uff0cjiang\u4f6c\u5df2\u7ecf\u505a\u8fd9\u9898\u505a\u4e86\u4e00\u4e2a\u591a\u6708\u4e86\u2026\u2026\n\n\u4e8e\u662f\u672c\u7740~~\u8bd5\u8bd5\u770b~~\u7684\u5fc3\u6001\u5f00\u59cb\u7740\u624b\u89e3\u51b3\u8fd9\u9053\u9898\u3002\u8fd9\u9053\u9898\u4ece\u63a5\u624b\u5230AC\u65f6\u95f4\u8de8\u5ea6\u5927\u6982**27h**\uff08\u7b97\u4e0a\u5403\u996d\u7761\u89c9~~\u6253\u6e38\u620f~~\u7b49\u65f6\u95f4\uff09\uff0c\u65f6\u95f4\u4e0a\u53ef\u80fd\u6bd4jiang\u4f6c\u7a0d\u5fae\u5feb\u4e00\u70b9\u3002\u8bf4\u6765\u4e5f\u5de7\uff0c\u5c31\u5728\u6211\u521a\u63a5\u624b\u8fd9\u9053\u9898\u7684\u90a3\u5929\u665a\u4e0a\uff0cjiang\u4f6c\u5341\u5206\u795e\u7287\u5730**AC**\u4e86\u2026\u2026\n\n\u518d\u770b\u770b\u6211\u81ea\u5df1\u4fe9\u5c0f\u65f6\u5199\u51fa\u6765\u7684\u4e00\u4e2a\u7206\u96f6\u548c\u4e00\u4e2a28pts\uff0c\u66f4\u52a0\u575a\u5b9a\u4e86\u6211\u8981A\u6389\u8fd9\u9898\u7684\u60f3\u6cd5\n\n\u5f53\u665a\u5fc3\u6001\u7206\u70b8\n\n## \u89e3\u9898\u601d\u8def\n\n\u8fd9\u9053\u9898\u4e00\u773c\u770b\u4e0a\u53bb\u4f3c\u4e4e\u5f88\u597d\u529e\uff0c\u64cd\u4f5c\u603b\u7ed3\u8d77\u6765\u5c31\u4e24\u70b9\n- \u6c42\u6700\u5927\u5faa\u73af\u5d4c\u5957\u5c42\u6570\n- \u5224\u65ad\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef\n\n\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u672c\u9898\u6211\u91c7\u7528**\u5728\u7ebf\u505a\u6cd5**\u3002\u5373\u8fb9\u8bfb\u8fb9\u64cd\u4f5c\u8f93\u51fa\u3002\u8fd9\u79cd\u505a\u6cd5\u5bf9\u4e8e\u79bb\u7ebf\u505a\u6cd5\u6765\u8bf4\u6709\u5229\u6709\u5f0a\uff0c\u540e\u6587\u5c06\u4f1a\u8bb2\u5230 \uff08jiang25262\u91c7\u7528\u7684\u662f\u79bb\u7ebf\u505a\u6cd5\uff09\n\n### \u6c42\u6700\u5927\u5faa\u73af\u5d4c\u5957\u5c42\u6570\n\n\u5faa\u73af\u5d4c\u5957\u7684\u7ed3\u6784\u975e\u5e38\u7c7b\u4f3c\u4e00\u4e2a\u6808\u7684\u7ed3\u6784\uff0c\u90fd\u6ee1\u8db3**\u5148\u8fdb\u540e\u51fa\uff0c\u540e\u8fdb\u5148\u51fa**\u7684\u6027\u8d28\u3002\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\n\n\u65b0\u5b9a\u4e49\u4e00\u4e2a\u6808\uff0c\u59d1\u4e14\u547d\u540d\u4e3a`zhan`\u597d\u4e86\u2026\u2026\n- \u5bf9\u4e8e\u8bfb\u5230\u7684\u6bcf\u4e00\u4e2a`F`\uff0c\u5411\u6808\u4e2d\u538b\u5165\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u538b\u5165`1`\n- \u8be2\u95ee\u5f53\u524d\u6808\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u6bcf\u6b21\u4fdd\u5b58\u5176\u6700\u5927\u503c\n- \u5bf9\u4e8e\u8bfb\u5230\u7684\u6bcf\u4e00\u4e2a`E`\uff0c\u5f39\u51fa\u6808\u9876\u5143\u7d20\n- \u6808\u5143\u7d20\u4e2a\u6570\u7684\u6700\u5927\u503c\u5c31\u662f\u6700\u5927\u5faa\u73af\u5d4c\u5957\u5c42\u6570\n\n\u8fd9\u6837\u770b\u4e0a\u53bb\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u624b\u51fa\u4e00\u7ec4\u6570\u636e\u4e5f\u662f\u80fd\u8fc7\u7684\u3002\u8fd9\u4e2a\u5b50\u95ee\u9898\u5148\u544a\u4e00\u6bb5\u843d\n\n### \u5224\u65ad\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef\n\n\u6839\u636e\u9898\u9762\uff1a\n\n> \u5176\u4e2d\u8bed\u6cd5\u9519\u8bef\u53ea\u6709:1\u3001F\u548cE\u4e0d\u5339\u914d  2\u3001\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d\u4e24\u79cd\u60c5\u51b5\n\n\u6211\u4eec\u7740\u624b\u89e3\u51b3\u8fd9\u6837\u4e24\u4e2a\u5b50\u95ee\u9898\n- \u5339\u914d`F`\u548c`E`\n- \u5224\u65ad\u51b2\u7a81\u53d8\u91cf\u540d\n\n#### \u5339\u914d`F`\u548c`E`\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u51fa\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684`ERR`\u60c5\u51b5\uff1a**\u8f93\u5165\u6570\u636e\u7684\u884c\u6570\u4e3a\u5947\u6570**\uff0c\u8fd9\u6837\u5b83\u65e0\u8bba\u600e\u6837\u90fd\u4e0d\u4f1a\u5339\u914d\u6210\u529f\uff0c\u76f4\u63a5\u629b\u51fa`ERR`\n\n\u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u5bb9\u6613\u60f3\u7684`ERR`\u60c5\u51b5\uff1a**F\u548cE\u7684\u4e2a\u6570\u4e0d\u76f8\u7b49**\uff0c\u8fd9\u6837\u4e5f\u4e0d\u4f1a\u5339\u914d\u6210\u529f\uff0c\u629b\u51fa`ERR`\n\n\u5728\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5927\u81f4\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u53ea\u5269\u4e0b\u4e00\u79cd`ERR`\u60c5\u51b5\uff1a**\u4e00\u4e2a(\u4e0d\u662f\u4e00\u5c42)\u5faa\u73af\u5df2\u7ecf\u5b8c\u5168\u9000\u51fa\uff0c\u4f46\u8fd8\u6709\u591a\u4f59\u7684E\u8bd5\u56fe\u7ee7\u7eed\u9000\u51fa\u8be5\u5faa\u73af**\u3002\u8fd9\u79cd\u60c5\u51b5\u5b9e\u73b0\u8d77\u6765\u5176\u5b9e\u4e5f\u5bb9\u6613\uff0c\u56e0\u4e3a\u6211\u4eec\u4e8b\u5148\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u9047\u5230`E`\u7684\u65f6\u5019\u5148\u5224\u65ad\u4e00\u4e0b\u6808\u662f\u4e0d\u662f\u7a7a\u4e86\uff0c\u5982\u679c\u6808\u6ca1\u7a7a\uff0c\u5c31\u5f39\u51fa\u6808\u9876\u5143\u7d20\u3002\u5982\u679c\u6808\u7a7a\u4e86\uff0c\u76f4\u63a5\u629b\u51fa`ERR`\n\n#### \u5224\u65ad\u51b2\u7a81\u53d8\u91cf\u540d\n\n\u8fd9\u4e2a\u4e1c\u897f\u770b\u4e0a\u53bb\u4e0d\u592a\u597d\u641e\uff0c\u5b9e\u9645\u4e0a\u5b9e\u73b0\u8d77\u6765\u786e\u5b9e\u6709\u4e00\u5b9a\u96be\u5ea6\u3002\u53d8\u91cf\u540d\u7684\u5f00\u8f9f\u4e0e\u9500\u6bc1\u867d\u7136\u4e5f\u6ee1\u8db3**\u5148\u8fdb\u540e\u51fa\uff0c\u540e\u8fdb\u5148\u51fa**\u7684\u7ed3\u6784\uff0c\u4f46\u5374\u4e0d\u80fd\u7528\u6808\u6765\u7ef4\u62a4\uff0c\u56e0\u4e3a\u6808\u4e0d\u652f\u6301\u5143\u7d20\u7684\u67e5\u627e\u3002\u6240\u4ee5\u5728\u78b0\u5230\u4e00\u4e2a\u53d8\u91cf\u540d\u65f6\uff0c\u6808\u65e0\u6cd5\u786e\u8ba4\u5b83\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\uff0c\u6545\u800c\u65e0\u6cd5\u5224\u65ad\u53d8\u91cf\u540d\u51b2\u7a81\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u5206\u6790\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u7ed3\u6784\u6765\u540c\u65f6\u652f\u6301\u5982\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n- \u6709\u7c7b\u4f3c\u6808\u7684\u5148\u8fdb\u540e\u51fa\u540e\u8fdb\u5148\u51fa\u987a\u5e8f\n- \u652f\u6301\u5143\u7d20\u67e5\u627e\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u7d22\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528**\u5b57\u7b26\u4e32**\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\n- \u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5217\u8868\u5b57\u7b26\u4e32`sublist`\uff0c\u5e76\u8d4b\u521d\u503c\u4e3a\"0\"\n- \u6bcf\u6b21\u8bfb\u5165`F`\u83b7\u5f97\u4e00\u4e2a\u53d8\u91cf\u540dsub\u65f6\uff0c\u5c06\u5176\u6dfb\u52a0\u5230`sublist`\u672b\u7aef\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u76f4\u63a5`sublist+=sub`\u5373\u53ef\uff0c\u9700\u8981\u6ce8\u610f\uff0c`sub`\u4e5f\u5e94\u5f53\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u800c\u4e0d\u662f\u5b57\u7b26\u578b\u3002\n- \u4f7f\u7528\u5b57\u7b26\u4e32\u7c7b\u81ea\u5e26\u7684\u51fd\u6570find()\u5bfb\u627e\u521a\u8bfb\u5165\u7684`sub`\u5728`sublist`\u4e2d**\u7b2c\u4e00\u6b21**\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ee1\u8db3`sublist.find(sub)==sublist.length()-1`\u5219\u8be5\u53d8\u91cf\u540d\u672a\u88ab\u4f7f\u7528\u8fc7\u3002\n- \u6bcf\u6b21\u8bfb\u5165`E`\u9500\u6bc1\u4e00\u4e2a\u53d8\u91cf\u540d\u65f6\uff0c\u76f4\u63a5\u5220\u6389\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5373\u53ef\n\n\u5224\u65ad\u8bed\u6cd5\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\u5230\u6b64\u5df2\u7ecf\u89e3\u51b3\u5b8c\u6bd5\n\n\u6309\u7406\u8bf4\uff0c\u9898\u76ee\u8981\u6c42\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\u6211\u4eec\u90fd\u5df2\u7ecf\u89e3\u51b3\uff0c\u8fd9\u9898\u5e94\u8be5\u505a\u5b8c\u4e86\u3002\u4f46\u662f\u66f4\u52a0\u590d\u6742\u7684\u60c5\u51b5\u5176\u5b9e\u8fd8\u5728\u540e\u9762\u3002\n\n## \u7279\u6b8a\u60c5\u51b5\u5904\u7406\n\n\u6211\u4eec\u56de\u987e\u201c\u65f6\u95f4\u590d\u6742\u5ea6\u201d\u7684\u6027\u8d28\u60f3\u4e00\u60f3\uff0c\u4e00\u4e2a\u5faa\u73af\u5982\u679c\u60f3\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6307\u6570\u6709\u5f71\u54cd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5faa\u73af\u7684**\u672c\u8eab\u590d\u6742\u5ea6**\u5fc5\u987b\u662f\u4e00\u6b21\u6216\u66f4\u9ad8\u6b21\u9879\u3002\u5e38\u6570\u7ea7\u522b\u7684\u5faa\u73af\u4e0d\u4f1a\u5bf9\u590d\u6742\u5ea6\u7684\u6307\u6570\u6709\u5f71\u54cd\uff0c\u6bd4\u5982\u4e24\u4e2a\u4f8b\u5b50\uff08\u4ee5\u9898\u76ee\u6807\u51c6\u4e66\u5199\uff09\uff1a\n\n```cpp\n  F i 3 n\n  F j 2 n\n  F k 6 n\n```\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^3)$\u7684\n\n```cpp\n  F i 4 7\n  F j 2 9\n  F k 12 95\n```\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(1)$\u7684\uff0c\u56e0\u4e3a\u5faa\u73af\u53ea\u5230\u8fbe\u4e86\u5e38\u6570\u7ea7\u522b\n\n**\u6ce8\u610f\uff0c\u4ee5\u4e0a\u6211\u6240\u8bf4\u7684\u6027\u8d28\u4ec5\u4ec5\u9488\u5bf9\u672c\u9898\u800c\u8a00\uff08\u56e0\u4e3a\u672c\u9898\u7684n\u8d8b\u8fd1\u4e8e\u6b63\u65e0\u7a77\uff09\uff0c\u4e0d\u9002\u7528\u4e8e\u5176\u4ed6\u73af\u5883**\n\n\u6211\u4eec\u518d\u56de\u5f52\u201c\u5faa\u73af\u201d\u7684\u6027\u8d28\u60f3\u4e00\u60f3\uff0c\u8fdb\u5165\u4e00\u4e2a\u5faa\u73af\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\u3002\u90a3\u5f53\u7136\u662f\u6ee1\u8db3`\u521d\u59cb\u503c<=\u7ec8\u6b62\u503c`\u8fd9\u6837\u4e00\u4e2a\u6761\u4ef6\u3002\u90a3\u4e48\u6709\uff0c`F i 72 1`\u3001`F i n 23`\u663e\u7136\u662f\u4e24\u4e2a\u4e0d\u80fd\u8fdb\u5165\u7684\u5faa\u73af\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u80fd\u8fdb\u5165\u7684\u5faa\u73af\uff0c**\u5d4c\u5957\u5728\u5b83\u4e4b\u4e0b\u7684\u5faa\u73af\u4e5f\u4e0d\u80fd\u8fdb\u5165**\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5728\u4e24\u4e2a\u5b50\u95ee\u9898\u7684\u5904\u7406\u4e0a\u51fa\u4e86\u6f0f\u6d1e\uff0c\u6709\u8fd9\u6837\u4e09\u4e2a\uff1a\n- \u672a\u5224\u65ad\u5e38\u6570\u7ea7\u522b\u7684\u5faa\u73af\n- \u672a\u5224\u65ad\u662f\u5426\u80fd\u8fdb\u5165\u5faa\u73af\n- \u5faa\u73af\u5d4c\u5957\u7684\u6700\u5927\u5c42\u6570\u5224\u5b9a\u4e0d\u6b63\u786e\n\n\u6211\u4eec\u4e00\u4e00\u89e3\u51b3\n\n### \u5224\u65ad\u5e38\u6570\u7ea7\u522b\u7684\u5faa\u73af\n\n\u8fd9\u4e2a\u597d\u529e\uff0c\u53ea\u8981\u770b\u4e00\u770b\u8d77\u59cb\u503c\u548c\u7ec8\u6b62\u503c\u662f\u5426\u540c\u65f6\u4e0d\u662fn\u5c31\u597d\u4e86\u3002\u4f46\u662f\u5224\u65ad\u597d\u5224\u65ad\uff0c\u4e4b\u540e\u7684\u5904\u7406\u4e0d\u80fd\u5c11\u3002\u56e0\u4e3a\u8fd9\u4e2a\u5faa\u73af\u7684\u5f71\u54cd\u662f\u5e38\u6570\u7ea7\u7684\uff0c\u6240\u4ee5\u5d4c\u5957\u5c42\u6570\u53ef\u4ee5\u89c6\u4e3a\u4e0d\u5f71\u54cd\uff0c\u53ea\u8981\u5728\u5224\u51fa\u5e38\u6570\u7ea7\u5faa\u73af\u540e\u518d\u5f39\u51fa\u4e00\u4e2a\u6808\u9876\u5143\u7d20\u5c31\u597d\u4e86\n\n### \u5224\u65ad\u80fd\u5426\u8fdb\u5165\u5faa\u73af&\u6700\u5927\u5c42\u6570\u5224\u5b9a\n\n\u8fd9\u65e0\u7591\u662f\u8fd9\u9053\u9898\u76ee\u7684\u4e00\u4e2a\u91cd\u5927\u96be\u70b9\u3002\u5728\u8ba8\u8bba\u8fd9\u90e8\u5206\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u5c06\u4e4b\u524d\u6240\u505a\u7684\u4e00\u4e9b\u64cd\u4f5c\u5f7b\u5e95\u63a8\u7ffb\uff0c\u91cd\u65b0\u7ef4\u62a4\u65b0\u7684\u64cd\u4f5c\u6765\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u3002\n\n\u5224\u65ad\u80fd\u5426\u8fdb\u5165\u5faa\u73af\u4e5f\u597d\u529e\uff0c\u628an\u89c6\u4f5c`inf`\uff0c\u7136\u540e\u6bd4\u8f83\u4e00\u4e0b\u8d77\u59cb\u503c\u548c\u7ec8\u6b62\u503c\u5c31\u80fd\u5f88\u5feb\u5f97\u51fa\u7ed3\u679c\n\n\u91cd\u96be\u70b9\u5728\u4e8e\u6700\u5927\u5c42\u6570\u5224\u5b9a\u3002\u5f53\u6211\u4eec\u5224\u51fa\u4e0d\u80fd\u8fdb\u5165\u5faa\u73af\u7684\u65f6\u5019\uff0c\u4e0b\u9762\u7684\u5d4c\u5957\u5e94\u8be5\u5168\u90e8\u629b\u5f03\u4e0d\u770b\uff0c\u4f46\u662f\u6211\u4eec\u9762\u4e34\u4e00\u4e2a\u95ee\u9898\uff1a**\u6211\u4eec\u600e\u4e48\u77e5\u9053\u54ea\u4e9b\u5d4c\u5957\u5728\u5b83\u4e0b\u9762\uff1f**\u3002\u8ffd\u6839\u6eaf\u6e90\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u4ea7\u751f\u5c31\u5728\u4e8e\u6211\u4eec\u5bf9\u4e4b\u524d\u7ef4\u62a4\u7684\u5c42\u6570\u6808\u7684\u5904\u7406\u3002\u4e0a\u6587\u63d0\u5230\uff1a\n\n> \u5bf9\u4e8e\u8bfb\u5230\u7684\u6bcf\u4e00\u4e2a`F`\uff0c\u5411\u6808\u4e2d\u538b\u5165\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u538b\u5165'1'\n\n\u95ee\u9898\u5c31\u51fa\u5728\u201c\u6bcf\u6b21\u90fd\u538b\u5165'1'\u4e0a\u9762\u201d\uff0c\u8fd9\u76f4\u63a5\u5bfc\u81f4\u4e86\u6211\u4eec\u65e0\u6cd5\u83b7\u53d6\u5f53\u524d\u5d4c\u5957\u7684\u5c42\u6570\u3002\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\uff0c**\u5bf9\u4e8e\u8bfb\u5230\u7684\u6bcf\u4e00\u4e2a`F`\uff0c\u5411\u6808\u4e2d\u538b\u5165\u5f53\u524d\u5d4c\u5957\u6df1\u5ea6\u503ci**\u3002\u8fd9\u6837\u5904\u7406\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u6211\u4eec\u5728\u5224\u65ad\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\u540e\u5c31\u6709\u4e86\u4e00\u4e2a\u820d\u5f03\u54ea\u4e9b\u5faa\u73af\u7684\u8303\u56f4\u3002\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a\n- \u5b9a\u4e49\u4e00\u4e2a`runflag`\uff0c\u5e76\u8d4b\u521d\u503c\u4e3a-1\n- \u5f53\u6211\u4eec\u5224\u5b9a\u5230\u4e0d\u80fd\u8fdb\u5165\u5f53\u524d\u5faa\u73af\u65f6\uff0c\u628a`runflag`\u7684\u503c\u8d4b\u4e3a\u6808\u9876\u5143\u7d20\n- \u5982\u679c`runflag`\u662f-1\uff0c\u6b63\u5e38\u53d6\u6808\u5143\u7d20\u4e2a\u6570\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u7b54\u6848\u3002\u5426\u5219\u4e0d\u8bb0\u5f55\n- \u8bfb\u5230`F`\u3001`E`\u65f6\u6b63\u5e38\u538b\u5165\u5f39\u51fa\u5143\u7d20\n- \u6bcf\u6b21\u5f39\u51fa\u90fd\u8be2\u95ee\u6808\u9876\u5143\u7d20\uff0c\u5982\u679c\u6808\u9876\u5df2\u7ecf\u9000\u56de\u4e86`runflag`\u6df1\u5ea6\uff0c\u5219\u628a`runflag`\u8fd8\u539f\u6210-1\n\n\u7279\u6b8a\u60c5\u51b5\u5904\u7406\u5b8c\u6bd5\uff0c\u4f46\u5728\u771f\u6b63\u5b9e\u73b0\u7684\u65f6\u5019\u4e3a\u4e86\u4fdd\u9669\u6211\u8fd8\u8fdb\u884c\u4e86\u5176\u4ed6\u7684\u5b58\u50a8\u64cd\u4f5c\uff0c\u5177\u4f53\u89c1\u9644\u7684AC\u4ee3\u7801\n\n## \u6570\u636e\u5904\u7406\n\n\u771f\u7684\u4ee5\u4e3a\u8fd9\u9898\u505a\u5b8c\u4e86\u5417\uff1f\u5f53\u7136\u4e0d\u662f\u3002\u5982\u679c\u4e00\u4e0a\u6765\u5c31\u505a\u8fd9\u9053\u9898\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u8fde\u6570\u636e\u7684\u8bfb\u5165\u90fd\u4e0d\u4f1a\uff0c\u751a\u81f3\u4f60\u65e0\u6cd5\u83b7\u5f97\u5c0f\u660e\u7684\u7b54\u6848\uff08\u6211\u5728\u8fd9\u91cc\u5361\u4e8610min ~~\u771f\u4e22\u4eba~~\uff09\u3002\u4e0b\u9762\u6211\u4eec\u5bf9\u4e8e\u6570\u636e\u5904\u7406\u91cd\u70b9\u8ba8\u8bba\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u7684\u7075\u6d3b\u6027\uff0c\u6211\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\u5b8c\u6210\u3002\n\n### \u83b7\u5f97\u5c0f\u660e\u7684\u7b54\u6848\n\n\u5728\u8bfb\u5b8c\u884c\u6570\u4e4b\u540e\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32`tmp`\u5b58`O(xxx)`\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5224\u65ad`tmp[2]`\u662f\u4e0d\u662f\u6570\u5b57(\u5176\u5b9e\u5c31\u662f'1')\uff0c\u5982\u679c\u662f\uff0c\u5219\u5c0f\u660e\u7684\u7b54\u6848\u53ef\u4ee5\u8bb0\u4e3a'0'\uff08\u8868\u793a$O(1)$)\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u628a\u5b57\u7b26\u4e32\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\uff0c\u7528\u7c7b\u4f3c\u5feb\u8bfb\u7684\u65b9\u5f0f\u83b7\u53d6\u5c0f\u660e\u7684\u7b54\u6848\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nfor(rint i=0;i<tmp.length();++i)\n    if(tmp[i]>='0'&&tmp[i]<='9'){\n        hisans+=tmp[i]-'0';\n        hisans*=10;\n    }\nhisans/=10;\n```\n\n### \u83b7\u5f97\u5faa\u73af\u7684\u5404\u9879\u53c2\u6570\n\n\u5b9a\u4e49\u56db\u4e2a\u5b57\u7b26\u4e32`opt`\u3001`sub`\u3001`tmpsta`\u3001`tmpend`\uff0c\u7136\u540e\u8bfb\u5165\u3002\u5982\u679c`tmpsta[0]`\u662f'n'\uff0c\u4e14`tmpend[0]`\u548c`tmpsta[0]`\u548c`tmpend[0]`\u4e0d\u5168\u662f'n'\uff0c\u5219\u53ef\u4ee5\u8fdb\u5165\u5faa\u73af\u3002\n\n\u7136\u540e\u7528\u4e0a\u6587\u7c7b\u4f3c\u7684\u4ee3\u7801\uff0c\u83b7\u5f97\u771f\u6b63\u7684\u8d77\u59cb\u503c`sta`\u548c\u7ec8\u6b62\u503c`end`\uff0c\u5224\u65ad\u80fd\u5426\u6267\u884c\u5faa\u73af\u3002\n\n## \u6700\u540e\u7684\u8bdd\n\n\u8fd9\u4e00\u9898\u5230\u6b64\u5c31\u505a\u5b8c\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u7136\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u6027\u7684\u95ee\u9898\u3002\n\n\u56e0\u4e3a\u6211\u662f\u5728\u7ebf\u505a\u7684\uff0c\u5728\u7ebf\u505a\u7684\u4f18\u70b9\u5c31\u662f\u8fb9\u8bfb\u8fb9\u505a\uff0c\u7701\u65f6\u95f4\u7701\u7a7a\u95f4\u3002\u4f46\u662f\u5982\u679c\u67d0\u4e9b\u53d8\u91cf\u5fd8\u8bb0\u6e05\u96f6\u5c31\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u7384\u5e7b\u800c\u4f4e\u7ea7\u7684\u9519\u8bef\u3002jiang25262\u7684\u79bb\u7ebf\u505a\u6cd5\u636e\u8bf4\u5f00\u4e86\u4e09\u4e2a10w\u7ea7\u522b\u7684\u6570\u7ec4\u6765\u6a21\u62df\u6808\u2026\u2026\u4f46\u662f\u4ed6\u7684\u6e05\u96f6\u5c31\u662f10\u884c`memset`\u4e86\u4e8b\u3002\n\n\u9664\u4e86\u79bb\u7ebf\u548c\u5728\u7ebf\uff0c\u8fd8\u8981\u907f\u514d\u91cd\u590d\u8f93\u51fa\u7684\u60c5\u51b5\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u4e2a`flag`\u6765\u907f\u514d\u8f93\u51fa\u591a\u6b21\u3002\u5177\u4f53\u89c1\u6587\u672b\u9644\u4e0a\u7684AC\u4ee3\u7801\u3002\n\n## \u611f\u8c22\u9605\u8bfb\n\n### \u6b22\u8fce\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\uff01 &emsp; [\u56e2\u961f\u4f20\u9001\u95e8](https://www.luogu.org/team/show?teamid=10716)\n\n\u6301\u7eed\u6355\u6349\u6d1b\u8c37\u91ce\u751f\u5927\u4f6c\u4e2d\uff0814/1e9+7\uff09\uff0c\u4e5f\u6b22\u8fce\u840c\u65b0\u524d\u6765\u6295\u98df\u3002\u56e2\u961fQQ\u7fa4\u53f7\u53ef**\u79c1\u4fe1\u53f6\u5c0f\u67ab**\u83b7\u53d6\u3002\n\n## AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define rint register int\nusing namespace std;\nstack<int> zhan;\nint main(){\n    int t;scanf(\"%d\",&t);\n    while(t--){\n        int n;scanf(\"%d\",&n);\n    \tint nowline=0,pos=0;\n    \tint Fcnt=0,Ecnt=0,cnt=0;\n        int hisans=0,myans=0;\n        int runflag=-1;\n    \tbool endflag=false;\n        string tmp;cin>>tmp;\n        string sublist=\"0\";\n        for(rint i=0;i<tmp.length();++i)\n            if(tmp[i]>='0'&&tmp[i]<='9'){\n                hisans+=tmp[i]-'0';\n                hisans*=10;\n            }\n        hisans/=10;\n        if(tmp[2]=='1') hisans=0;\n        for(rint i=1;i<=n;++i){\n            string sub,opt,tmpsta,tmpend;\n            int sta=0,end=0;\n            cin>>opt;\n            if(opt==\"F\"){\n            \t++Fcnt;++pos;\n                zhan.push(pos);\n                cin>>sub>>tmpsta>>tmpend;\n                if(tmpend[0]=='n'&& (!(tmpsta[0]=='n'&&tmpend[0]=='n'))) ++cnt;\n                for(rint j=0;j<tmpsta.length();++j){\n                    sta+=tmpsta[j]-'0';\n                    sta*=10;\n                }\n                sta/=10;\n                if(tmpend[0]!='n'){//\u5982\u679cend\u662f\u6570\u5b57 \n                    for(rint i=0;i<tmpend.length();++i){\n                        end+=tmpend[i]-'0';\n                        end*=10;\n                    }\n                    end/=10;\n                    if(sta>end)//\u5982\u679c\u5faa\u73af\u4e0d\u80fd\u6267\u884c \n                        runflag=pos;\n                }\n                if(runflag==-1||pos<runflag) myans=max(myans,cnt);\n                sublist+=sub;\n                if(sublist.find(sub)!=sublist.length()-1){\n                \tprintf(\"ERR\\n\");cnt=0;nowline=i;endflag=true;break;\n                }\n                sta=0;end=0;\n            }\n            else if(opt==\"E\"){\n            \t--cnt;++Ecnt;\n                if(zhan.empty()&&!endflag){\n            \t\tprintf(\"ERR\\n\");cnt=0;nowline=i;endflag=true;break;\n                }\n                if(zhan.top()<=runflag){\n                \tpos=0;\n                \trunflag=-1;\n                }\n                if(!zhan.empty()) zhan.pop();\n                if(sublist.length()>0) sublist=sublist.substr(0,sublist.length()-1);\n            \tif(zhan.empty()) cnt=0;\n            }\n        }\n        if(endflag){\n        \tcnt=0;\n        \twhile(!zhan.empty())\n        \t\tzhan.pop();\n        \t\tstring cnm;\n        \tfor(rint i=1;i<=n-nowline+1;++i) getline(cin,cnm);\n        \tcontinue;\n        }\n        if(Fcnt!=Ecnt){\n        \tif(!endflag) printf(\"ERR\\n\");\n        \twhile(!zhan.empty()) zhan.pop();\n        \tcnt=0;\n        \tcontinue;\n        }\n        while(!zhan.empty()) zhan.pop(); \n        if(!endflag){\n        \tif(myans==hisans) printf(\"Yes\\n\");\n        \telse printf(\"No\\n\");\n        }\n        myans=hisans=0;\n    }\n    return 0;\n}\n```",
        "postTime": 1540620289,
        "uid": 72088,
        "name": "\u53f6\u5c0f\u67ab",
        "ccfLevel": 0,
        "title": "\u65f6\u95f4\u590d\u6742\u5ea6 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u6211 $A$ \u7684\u7b2c\u4e09\u767e\u4e2a\u2026\u2026\u90a3\u4e48\u9996\u5148\uff1a\n\n## $\\color{pink}AC300$\u796d\uff01\u0e51\u4e5b\u25e1\u4e5b\u0e51\n\n\u55ef\uff0c\u90a3\u4e48\u4e0b\u9762\u5f00\u59cb\u5e72\u6b63\u4e8b\uff1a\n\n## \u4e00\u3001\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u7684\u6982\u8ff0\n\n\u5148\u8bf4\u660e\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u9898\u867d\u7136\u6211\u82b1\u4e86\u5927\u7ea6\u4e24\u4e2a\u4e0a\u5348\u2014\u2014\u5927\u7ea6 $5h$ \u7684\u65f6\u95f4\u628a\u5b83\u8fde\u7801\u5e26\u8c03\u641e\u51fa\u6765\u4e86\uff0c\u597d\u50cf\u770b\u4e0a\u53bb\u5f88\u6bd2\u7624\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u4e2a\u9898\u6839\u672c\u4e0d\u6bd2\u7624\uff0c\u53ea\u662f\u6709\u4e9b\u7ec6\u8282\u503c\u5f97\u6ce8\u610f\u7f62\u4e86\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u662f\u9053\u5f88\u4e0d\u9519\u7684\u9898\uff0c\u56e0\u4e3a\u65e2\u6ca1\u6709\u591a\u4e48\u96be\uff0c\u89c4\u5219\u6d45\u663e\u6613\u61c2\uff0c\u4e5f\u4f1a\u6709\u5f88\u591a\u7684\u7ec6\u8282\u4e0d\u6ce8\u610f\u5bfc\u81f4 GG\uff08\u672c\u849f\u84bb\u5c31\u51e0\u4e4e\u628a\u6240\u6709\u8fd9\u4e2a\u9898\u80fd\u5f97\u7684\u5206\u6570\u904d\u5386\u4e86\u4e00\u904d ORZ,\u591a\u4e8f\u53ef\u4ee5\u4e0b\u8f7d\u6570\u636e\u2026\u2026\u4e0d\u8fc7\u8003\u8bd5\u7684\u65f6\u5019\u597d\u50cf\u80af\u5b9a\u4f1a GG)\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\u6211\u5728\u505a\u7684\u65f6\u5019\u5c31\u53d1\u73b0\uff0c\u51fa\u9898\u4eba\u771f\u7684\u662f\u592a\u826f\u5fc3\u4e86\uff0c\u56e0\u4e3a\u4ee5\u4e0b\u51e0\u70b9\u5b8c\u5168\u5c31\u662f\u6015 NOIP \u51fa\u7684\u592a\u96be\uff0c\u6765\u5747\u8861\u96be\u5ea6\u7684\uff1a\n\n### 1 \u5faa\u73af\u53d8\u91cf\u7684\u4e0a\u4e0b\u754c\u53ea\u6709\u4e00\u4e2a\u5b57\u6bcd\u4f1a\u51fa\u73b0\uff1a$n$\u3002\n\n\u4f46\u662f\u4ece\u6e10\u8fdb\u610f\u4e49\u4e0a\u6765\u8bb2\uff0c\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bcd\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u800c\u8fd9\u4e2a\u5730\u65b9\u53ea\u51fa\u73b0\u4e86 $n$\uff0c\u6240\u4ee5\u8fd9\u662f\u9001\u5206\u7684\u3002\n\n#### \u6bd2\u7624\u7248\u672c\uff1a\n\n\u5faa\u73af\u7684\u4e0a\u4e0b\u754c\u53ef\u4ee5\u6709\u522b\u7684\u5b57\u6bcd\uff0c\u90a3\u4e48\u4ee5\u4e0b\u8fd9\u79cd\u60c5\u51b5\u4e5f\u9700\u8981\u8003\u8651\u8fdb\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6309\u7167 $O(n)$ \u7b97\uff1a\n\n```cpp\nF i x y\nF j 1 i\nE\nE\n```\n\n\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u7275\u626f\u5230\u9664\u4e86 $n$ \u4ee5\u5916\u7684\u5176\u4ed6\u5b57\u6bcd\u5b9e\u73b0\u6709\u6ca1\u6709\u88ab\u5b9a\u4e49\uff08\u5982\u679c\u672a\u5b9a\u4e49\u8f93\u51fa `ERR`\uff09\u7b49\u8bf8\u591a\u95ee\u9898,\u6bd4\u5982\u53ef\u80fd\u8fd9\u6837\uff1a\n\n```cpp\nF i 3 66\nF j 1 i-1\nF k i j\nE\nE\nE\n```\n\n\u90a3\u4e48\u5b9e\u9645\u4e0a\uff0c\u5728\u4e0a\u9762\u8fd9\u7ec4\u6837\u4f8b\u4e2d\uff0c$k$\u8fd9\u5c42\u5faa\u73af\u662f\u8fdb\u4e0d\u53bb\u7684\u3002\n\n### 2 \u6240\u6709\u5e38\u6570\u90fd\u5c0f\u4e8e\u4e00\u767e\n\n\u8fd9\u4e00\u70b9\u4e5f\u5f88\u826f\u5fc3\uff0c\u7531\u4e8e\u90fd\u5c0f\u4e8e\u4e00\u767e\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8f93\u5165\u6216\u8005\u5176\u4ed6\u64cd\u4f5c\u91cc\uff0c\u53ea\u7528\u8003\u8651\u4e24\u4f4d\u5c31\u53ef\u4ee5\u3002\u4e0d\u8981\u5c0f\u77a7\u8fd9\u4e00\u70b9\u2026\u2026\u8fd9\u76f4\u63a5\u51b3\u5b9a\u4e86\u6a21\u62df\u7684\u96be\u5ea6\u3002\n\n#### \u6bd2\u7624\u7248\u672c\uff1a\n\n\u5728\u6bcf\u4e2a\u5faa\u73af\u4e2d\uff0c\u5faa\u73af\u53d8\u91cf\u7684\u7edd\u5bf9\u503c\u4fdd\u8bc1\u5728 `int` \u8303\u56f4\u91cc\u3002\n\n### 3\u3001\u65f6\u95f4\u590d\u6742\u5ea6\u65b9\u9762\uff0c\u4e0d\u4f1a\u51fa\u73b0$log$\u4ee5\u4e8c\u4e3a\u5e95\n\n\u55ef\uff0c\u4ee5\u4e0a\u5c31\u662f\u672c\u849f\u84bb yy \u51fa\u6765\u7684\u6bd2\u7624\u7248\u672c\uff0c\u90a3\u4e48\u770b\u8d77\u6765\u8fd9\u9053\u9898\u4e0d\u7b97\u662f\u4e2a\u6bd2\u7624\u9898\u2026\u2026\u4f46\u4e3a\u4ec0\u4e48\u4f1a\u505a\u9519\u5462\uff1f\u56e0\u4e3a\u7ec6\u8282\u4e0d\u6ce8\u610f\u554a ORZ\u3002\n\n## \u4e8c\u3001\u8fd9\u4e2a\u9898\u7684\u505a\u6cd5\n\n\u6211\u8fd8\u662f\u5012\u7740\u8bf4\u5427\uff1a\n\n### \u6ee1\u5206\u505a\u6cd5\uff1a\n\n**\u8bfb\u5165**\uff1a\n\n\u6211\u4eec\u5148\u7528 `while` \u6309\u5b57\u7b26\u8bfb\u5165\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u884c\uff0c\u62a0\u51fa\u9700\u8981\u68c0\u9a8c\u7684\u590d\u6742\u5ea6\uff0c $O(1)$ \u7528 $0$ \u6765\u5b58 $[n^0=1 (n\\neq 0)]$\u3002\n\n\u6ce8\u610f\uff0c\u6709\u53ef\u80fd\u6709\u4e24\u4f4d\u6570\uff0c\u9700\u8981\u591a\u6263\u4e00\u4f4d\u2026\u2026\n\n```cpp\n \t  while(o!=')'){\n         \tif(o=='1'&&!chk) \n\t\t\t   need_check=0;\n         \tif(o=='n'){\n         \t   cin>>o>>o;\n               need_check=o-48;\n\t\t\t   chk=1;\n\t\t\t}\n            o=getchar();\n            if(isdigit(o)&&chk)need_check*=10,need_check+=(o-48); \n       }\n       getchar();\n```\n\n\u81f3\u4e8e\u6700\u540e\u4e3a\u4ec0\u4e48\u8981\u518d `getchar()` \u4e00\u6b21\u2026\u2026\u81ea\u5df1\u8bd5\u8bd5\u5c31\u77e5\u9053\u4e86\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u8981\u6309\u884c\u8bfb\u5165\u5faa\u73af\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u3002\n\n**\u521d\u59cb\u5316**\n\n\u4e3a\u4e86\u4f7f\u7801\u98ce\u7b80\u6d01\uff0c\u6240\u4ee5\u5199\u5230\u51fd\u6570\u91cc\u4e86\u3002\u8fd9\u4e2a\u5730\u65b9\u6211\u7528\u5230\u4e86\u4e09\u4e2a\u6808\uff0c\u4e00\u4e2a\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5faa\u73af\u7684\u7b54\u6848\uff08\u56e0\u4e3a\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u5faa\u73af\uff09\uff0c\u4e00\u4e2a\u7528\u6765\u8bb0\u5f55\u6bcf\u6b21 `F` \u65f6\u8bfb\u5165\u7684\u5faa\u73af\u4e0a\u4e0b\u754c\u3002\u4ee5\u4e0a\u4e24\u4e2a\u90fd\u662f `int` \u6808,\u8fd8\u6709\u4e00\u4e2a `char` \u6808\uff0c\u5b58\u50a8\u6bcf\u6b21\u5b9a\u4e49\u7684\u5faa\u73af\u53d8\u91cf\uff0c\u800c\u8fd9\u4e2a\u5b57\u7b26\u6808\u642d\u914d\u4e00\u4e2a `bool` \u6027\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u8bb0\u5f55\u662f\u5426\u53ef\u7528\u3002\n  \n ```cpp\n#define MAX 1000000\nint i,x,y,t,tt,num,cntf,cnte,res,ans[MAX],T,l,now,need_checks,stk[MAX];\nbool check[150],flag,spj,chk;\nchar s[3010],o,stkk[MAX]; \ninline void init(){\n\tmemset(check,0,sizeof(check));\n    memset(stkk,0,sizeof(stkk));\n    memset(stk,0,sizeof(stk));\n    now=t=tt=cntf=cnte=res=flag=spj=chk=0;\n}\n ```\nps: \u867d\u7136\u4e0d\u77e5\u9053\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684$0$\u6765\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\u4f1a\u600e\u6837\u2026\u2026\u4e0d\u8fc7\u597d\u50cf\u6d77\u661f\u3002\n \n `cnte` \u548c `cntf` \u7528\u6765\u8bb0\u5f55 `F` \u548c `E` \u7684\u6570\u91cf\uff0c `num` \u3001 `t` \u3001 `tt` \u90fd\u662f\u6808\u7684\u6307\u9488\uff0c`spj` \u7528\u6765\u5224\u65ad\u4e00\u4e2a\u72ec\u7acb\u5faa\u73af\u662f\u5426\u7ed3\u675f\uff08\u5982\u679c\u7ed3\u675f\u5c31\u628a\u5f53\u524d\u7684\u5f97\u5230\u538b\u5165\u6808\uff09\uff0c`now` \u7528\u6765\u642d\u914d `spj` \u8bb0\u5f55\u5f53\u524d\u72ec\u7acb\u5faa\u73af\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c `chk` \u7528\u4e8e\u8bfb\u5165\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u884c\uff08\u5373\u542b\u6709\u9700\u8981\u5224\u65ad\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u90a3\u4e00\u884c\uff09\uff0c`flag` \u7528\u4e8e\u5224\u65ad\u8f93\u51fa\u3002\n \n**\u4e3b\u8981\u64cd\u4f5c**\n\n\u5bf9\u4e8e\u8bfb\u5165\u7684\u4e1c\u897f\uff0c\u5206\u7c7b\u8ba8\u8bba\uff0c\u7136\u540e `continue`\u2026\u2026\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\n```cpp\n\t   while(l--){\n          gets(s);\n          for(i=0;i<strlen(s);){\n           \t\twhile(s[i]==' ')i++;\n\t\t\t\tif(s[i]=='F'){\n\t\t\t\t\tif(cntf>cnte&&cnte){\n\t\t\t\t\t\tans[++num]=now;\n\t\t\t\t\t\tnow=0;\n\t\t\t\t\t}\n                \tcntf++,i++;\n                \tcontinue;\n            \t}\n            \tif(s[i]=='E'){\n            \t\ty=stk[t],t--;\n\t\t\t\t\tx=stk[t],t--;\n                \tcnte++;\n                \tif(cnte==cntf)spj=1;\n                \tif(x!=MAX){\n                \t\tif(y==MAX)now++;\n                \t\tif(y<x)now=0;\n                \t}\n                \telse{\n                \t\tif(y!=MAX)now=0;\n                \t}\n                \tcheck[stkk[tt]-'a']=0;\n                \ttt--,i++;\n                \tif(spj){\n                \t\tans[++num]=now;\n\t\t\t\t\t\tnow=0;\n\t\t\t\t\t\tspj=0;\n                \t}\n\t\t\t\t\tcontinue;\n            \t}\n                if(!isdigit(s[i])&&s[i]!='n'){\n                \tif(check[s[i]-'a']&&!flag){ \n                \tcout<<\"ERR\"<<endl;\n                \tflag=1;\n\t\t\t\t\t}\n                \tstkk[++tt]=s[i];\n                \tcheck[s[i]-'a']=1;\n                }\n            \telse {  \n                \tif(s[i]=='n'){\n            \t\tmy_push(s[i],s[i+1]);\n\t\t\t\t\ti+=2;\n                }               \n                my_push(s[i],s[i+1]);\n                }\n            \ti++;\n          }\n       }\n```\n\n\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u5165\u6808\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8981\u628a\u5b57\u7b26\u538b\u5165\u6574\u578b\uff0c\u6240\u4ee5\u6211\u53c8\u5199\u4e86\u4e2a\u51fd\u6570\u6765\u5165\u6808\u3002\u5165\u6808\u7684\u65f6\u5019\u5f53\u7136\u9700\u8981\u6ce8\u610f\u662f\u4e0d\u662f\u4e24\u4f4d\u6570\u2026\u2026\n\n\u54e6\uff0c\u8fd8\u6709\uff0c\u5982\u679c\u8fd9\u6b21\u8f6e\u5230 $n$ \u5165\u6808\u4e86\uff0c\u90a3\u4e48\u5c31\u968f\u4fbf\u5165\u6808\u4e00\u4e2a\u5927\u4e8e\u4e00\u767e\u7684\u6570\u5373\u53ef\u3002\n\n```cpp\ninline void my_push(char a,char b){\n\tif(isdigit(a)){\n\t\tif(isdigit(b)){\n\t\t\tstk[++t]=(a-48)*10+b-48;\n\t\t\ti++;\n\t\t}\n\t\telse stk[++t]=a-48; \n\t}\n\tif(a=='n')stk[++t]=MAX;\n}\n```\n\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u8f93\u5165\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n\t   if(!flag&&cntf!=cnte){\n          cout<<\"ERR\"<<endl;\n          flag=1;\n       }\n\t   while(num){\n       \t   res=max(res,ans[num]); \n       \t   num--;\n       }\n       if(!flag) if(res==need_check) cout<<\"Yes\"<<endl;\n       \t\t\t else \t\t\t\t cout<<\"No\"<<endl;\n```\n\n\u55ef~o(*\uffe3\u25bd\uffe3*)o\u8fd9\u5c31\u662f\u6ee1\u5206\u505a\u6cd5\u4e86\u3002\n\n### $72$ \u5206\u505a\u6cd5\n\n\u8fd9\u4e2a\u5f88\u5751\u7239\u2026\u2026\u8f93\u51fa\u5b8c\u76f4\u63a5 `break` \u4f1a\u5bfc\u81f4\u4f60\u867d\u7136\u5728\u4e3b\u89c2\u4e0a\u5df2\u7ecf\u4e0d\u7ba1\u8fd9\u4e2a\u8be2\u95ee\u63a5\u4e0b\u6765\u5982\u4f55\uff0c\u4f46\u662f\u5ba2\u89c2\u4e0a\uff0c\u4f60\u7684\u7a0b\u5e8f\u662f\u4e00\u8fb9\u8f93\u5165\u4e00\u8fb9\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5\u4f60\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u5c31\u4f1a GG\uff0c\u8fd9\u4e5f\u5c31\u662f\u5f15\u5165 `mark` \u7684\u539f\u56e0\u3002\n\n### $63$ \u5206\u505a\u6cd5\n\n\u5728 72 \u5206\u7684\u57fa\u7840\u4e0a\uff0c\u518d\u8f93\u5165 `need_check` \u5fd8\u8bb0\u5224\u65ad $O(n^{11})$ \u548c $O(1)$ \u4e86\u2026\u2026\u8fd9\u5c31\u5f88\u7206\u70b8\u3002\n\n### $45$ \u5206\u505a\u6cd5\n\n\u6ca1\u6709\u8003\u8651\u5d4c\u5957\u5728\u5faa\u73af\u4e2d\u7684\u5faa\u73af\u4f53\u7684\u72ec\u7acb\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u4f60\u5728\u8bfb\u5165\u4e00\u4e2a `F` \u65f6\uff0c\u5982\u679c\u73b0\u5728 `F` \u7684\u6570\u91cf\u5927\u4e8e `E` \u7684\u6570\u91cf\u5e76\u4e14 `cnte!=0`\uff0c\u5c31\u8bf4\u660e\u662f\u8fd9\u79cd\u60c5\u51b5\u90a3\u4e48\u5c31\u63d0\u524d\u5c06\u7ed3\u679c\u5165\u6808\u5373\u53ef\u3002\n```cpp\n\t\tif(s[i]=='F'){\n\t\t\tif(cntf>cnte&&cnte){\n\t\t\t\tans[++num]=now;//\u63d0\u524d\u5165\u6808\n\t\t\t\tnow=0;\n\t\t\t}\n            cntf++,i++;\n            continue;\n        }\n```\n\n### $27$ \u5206\u505a\u6cd5\n\n\u5fd8\u8bb0\u4e86\u81ea\u7136\u6570\u53ef\u4ee5\u662f\u4e24\u4f4d\u6570\u2026\u2026\u6240\u4ee5\u8d76\u7d27\u6253\u4e86\u4e2a\u5165\u6808\u3002\n\n### $0$ \u5206\u505a\u6cd5\n\n\u5168\u90e8\u7684\u7206\u96f6\u90fd\u662f\u56e0\u4e3a\u6211\u5fd8\u8bb0\u4e86\u628a\u8c03\u8bd5\u7528\u7684 `freopen` \u6ce8\u91ca\u6389 ORZ\u3002\n\n\u603b\u7ed3\uff1a\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u9898\u6211\u5728\u8003\u573a\u4e0a\u6302\u7684\u60c5\u6709\u53ef\u539f\u2026\u2026\u56e0\u4e3a\u6211\u65e2\u849f\u53c8\u4e0d\u7ec6\u5fc3 OTZ\u3002\n\n\u8fd8\u6709\uff0c\u5982\u679c\u90a3\u4f4d\u5927\u4f6c `hack` \u6389\u4e86\u6211\u7684\u7a0b\u5e8f\uff0c\u522b\u5fd8\u4e86\u901a\u77e5\u6211\u54c7\uff01\n\n\n```cpp\n#include<bits/stdc++.h>\n#define MAX 1000000\nusing namespace std;\nint i,x,y,t,tt,num,cntf,cnte,res,ans[MAX],T,l,now,need_check,stk[MAX];\nbool check[150],flag,spj,chk;\nchar s[3010],o,stkk[MAX]; \ninline void init(){\n    memset(check,0,sizeof(check));\n    memset(stkk,0,sizeof(stkk));\n    memset(stk,0,sizeof(stk));\n    now=t=tt=cntf=cnte=res=flag=spj=chk=0;\n}\ninline void my_push(char a,char b){\n    if(isdigit(a)){\n        if(isdigit(b)){\n            stk[++t]=(a-48)*10+b-48;\n            i++;\n        }\n        else stk[++t]=a-48; \n    }\n    if(a=='n')stk[++t]=MAX;\n}\nint main(){\n    cin>>T;\n    while(T--){\n       init();\n       cin>>l>>o;\n       while(o!=')'){\n         \tif(o=='1'&&!chk) \n               need_check=0;\n         \tif(o=='n'){\n         \t   cin>>o>>o;\n               need_check=o-48;//the same as above\n               chk=1;\n            }\n            o=getchar();\n            if(isdigit(o)&&chk)need_check*=10,need_check+=(o-48); \n       }\n       getchar();\n       while(l--){\n          gets(s);\n          for(i=0;i<strlen(s);){\n           \t\twhile(s[i]==' ')i++;\n                if(s[i]=='F'){\n                    if(cntf>cnte&&cnte){\n                        ans[++num]=now;\n                        now=0;\n                    }\n                \tcntf++,i++;\n                \tcontinue;\n            \t}\n            \tif(s[i]=='E'){\n            \t\ty=stk[t],t--;\n                    x=stk[t],t--;\n                \tcnte++;\n                \tif(cnte==cntf)spj=1;\n                \tif(x!=MAX){\n                \t\tif(y==MAX)now++;\n                \t\tif(y<x)now=0;\n                \t}\n                \telse{\n                \t\tif(y!=MAX)now=0;\n                \t}\n                \tcheck[stkk[tt]-'a']=0;\n                \ttt--,i++;\n                \tif(spj){\n                \t\tans[++num]=now;\n                        now=0;\n                        spj=0;\n                \t}\n                    continue;\n            \t}\n                if(!isdigit(s[i])&&s[i]!='n'){\n                \tif(check[s[i]-'a']&&!flag){ \n                \tcout<<\"ERR\"<<endl;\n                \tflag=1;\n                    }\n                \tstkk[++tt]=s[i];\n                \tcheck[s[i]-'a']=1;\n                }\n            \telse {  \n                \tif(s[i]=='n'){\n            \t\tmy_push(s[i],s[i+1]);\n                    i+=2;\n                }               \n                my_push(s[i],s[i+1]);\n                }\n            \ti++;\n          }\n       }\n       if(!flag&&cntf!=cnte){\n          cout<<\"ERR\"<<endl;\n          flag=1;\n       }\n       while(num){\n       \t   res=max(res,ans[num]);\n           num--; \n       }\n       if(!flag) if(res==need_check) cout<<\"Yes\"<<endl;\n                 else \t\t\t\t cout<<\"No\"<<endl;\n    }\n}\n```",
        "postTime": 1525236750,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "[NOIP2017]\u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "/\\*\nP3952 \u9898\u89e3\n\n\u4e00\u9053\u6a21\u62df\u9898\n\n\n\u601d\u8def\uff1a\n\n\u5148\u770b\u4e00\u4e0b$30$%\u7684\u6570\u636e\u8303\u56f4\uff1a\u5bf9\u4e8e$30$%\u7684\u6570\u636e\uff0c\u4e0d\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c\u6570\u636e\u4fdd\u8bc1\u5c0f\u660e\u7ed9\u51fa\u7684\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u524d$L/2$\u884c\u4e00\u5b9a\u4e3a\u4ee5$F$\u5f00\u5934\u7684\u8bed\u53e5\uff0c\u7b2c$L/2+1$\u884c\u81f3\u7b2c$L$\u884c\u4e00\u5b9a\u4e3a\u4ee5$E$\u5f00\u5934\u7684\u8bed\u53e5\uff0c$L$\u2264$10$\uff0c\u82e5$x$\u3001$y$\u5747\u4e3a\u6574\u6570\uff0c$x$\u4e00\u5b9a\u5c0f\u4e8e$y$\uff0c\u4e14\u53ea\u6709$y$\u6709\u53ef\u80fd\u4e3a $n$\u3002\u8bfb\u5b8c\u8fd9$30$%\u7684\u6570\u636e\u8303\u56f4\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9$30$\u5206\u5f88\u597d\u9a97\uff0c\u8bfb\u5165\u8fd9\u4e00\u6761\u7a0b\u5e8f\uff0c\u5224\u65ad\u91cc\u9762\u6709\u591a\u5c11\u4e2a\u5b57\u7b26$n$\uff08\u6211\u4eec\u5047\u8bbe\u8fd9\u6761\u7a0b\u5e8f\u91cc\u6709$d$\u4e2a\u5b57\u7b26$n$\uff09\uff0c\u7136\u540e\u518d\u5224\u65ad\u4e00\u4e0b\uff0c\u82e5\u6570\u636e\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\u0398(1)$\uff0c\u5c31\u5224\u65ad\u4e00\u4e0b$d$\u662f\u5426\u7b49\u4e8e$0$\uff0c\u82e5$d=0$\u5c31\u8f93\u51fa$Yes$\uff0c\u5426\u5219\u5c31\u8f93\u51fa$No$\u3002\u5426\u5219\u5982\u679c\u6570\u636e\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u7684\u5f62\u5f0f\u540c$\u0398(n^x)$\u7684\u8bdd\u5c31\u5224\u65ad\u4e00\u4e0b$d$\u662f\u5426\u7b49\u4e8e$x$\uff0c\u82e5$d=x$\u5c31\u8f93\u51fa$Yes$\uff0c\u5426\u5219\u5c31\u8f93\u51fa$No$\u3002\n\n\n\u63a5\u4e0b\u6765\uff0c\u5c31\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b$50$%\u7684\u6570\u636e\u8303\u56f4\u5427\uff1a\u5bf9\u4e8e$50$%\u7684\u6570\u636e\uff0c\u4e0d\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c$L$\u2264$100$\uff0c\u4e14\u82e5$x$\u3001$y$\u5747\u4e3a\u6574\u6570\uff0c$x$\u4e00\u5b9a\u5c0f\u4e8e$y$\uff0c\u4e14\u53ea\u6709$y$\u6709\u53ef\u80fd\u4e3a$n$\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5728$50$%\u7684\u6570\u636e\u8303\u56f4\u4e2d\uff0c\u6ca1\u6709\u4e86\u4fdd\u8bc1\u6bcf\u4e00\u6761\u7a0b\u5e8f\u5747\u4e3a\u4e00\u4e2a$L/2$\u5c42\u7684\u5faa\u73af\u4e86\u3002\u90a3\u4e48\u5982\u4f55\u62ff\u4e0b\u8fd9$50$%\u7684\u5206\u6570\u5462\uff1f\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf$xh$\u6765\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u5faa\u73af\u7684\u5c42\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u7565\u8fc7\u90a3\u4e9b$y$\u2260$n$\u7684\u5faa\u73af\uff0c\u90a3\u4e48\uff0c\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d$xh$\u7684\u6700\u5927\u503c\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\u7b54\u6848\u4e86\uff08\u5373$d$\uff09\uff0c\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u4e0e$30$%\u7684\u6570\u636e\u8303\u56f4\u7684\u65b9\u6cd5\u4e00\u81f4\u3002\n\n\n\u518d\u7136\u540e\uff0c\u5c31\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b$70$%\u7684\u6570\u636e\u8303\u56f4\u5427\uff1a\u5bf9\u4e8e$70$%\u7684\u6570\u636e\uff0c\u4e0d\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\uff0c$L$\u2264$100$\u3002\u90a3\u4e48\uff0c\u5982\u4f55\u62ff\u4e0b\u8fd9$70$%\u7684\u5206\u6570\u5462\uff1f\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u4e00\u4e0b$x>y$\u7684\u60c5\u51b5\uff0c\u82e5$x>y$\u5c31\u4e0d\u7528\u5904\u7406\u4e0b\u9762\u7684\u4e00\u90e8\u5206\u4e86\u3002\u5269\u4e0b\u7684\u5904\u7406\u65b9\u6cd5\u540c$50$%\u7684\u6570\u636e\u3002\n\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u83b7\u5f97\u672c\u9898\u5168\u90e8\u7684\u5206\u6570\u5462\uff1f\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u8fd9$100$%\u7684\u6570\u636e\u5427\uff1a\u5bf9\u4e8e$100$%\u7684\u6570\u636e\uff0c$L$\u2264$100$\u3002\u5f88\u663e\u7136\uff0c\u6211\u4eec\u5fc5\u987b\u5904\u7406\u8bed\u6cd5\u9519\u8bef\uff0c\u5bf9\u4e8e\u8bed\u6cd5\u9519\u8bef\u2460\uff0c$F$\u548c$E$\u4e0d\u5339\u914d\u7684\u60c5\u51b5\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u5faa\u73af\u65f6\u5224\u65ad\uff0c \u5bf9\u4e8e\u8bed\u6cd5\u9519\u8bef\u2461\uff0c\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6808\u6765\u5b58\u50a8\u53d8\u91cf\u5373\u53ef\u3002\n\n\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801\uff1a\n\n\\*/\n            \n            \n            \n            \n            \n                        \n```cpp\n#include <cstdio>\n#include <cstring>\nint f[201];\nint bc[10001];\nint max(int x,int y)\n{\n    return x>y?x:y;\n}\nint main()\n{\n    int t=0;\n    scanf(\"%d\\n\",&t);\n    while(t--)\n    {\n        int tou=0,wei=0;\n        char st[101];\n        int number=0,d=0;\n        scanf(\"%d %s\\n\",&d,st+1);\n        int lenst=strlen(st+1);\n        bool flag=false;\n        for(int i=1;i<=lenst;i++)\n        {\n            if(st[i]=='n')\n            {\n                flag=true;\n            }\n            if(st[i]>='0' && st[i]<='9')\n            {\n                number=number*10+st[i]-'0';\n            }\n        }\n        int maxx=0,fgs=0,egs=0,xh=0;\n        bool aft=false,sc=false;\n        memset(bc,-1,sizeof(bc));\n        memset(f,0,sizeof(f));\n        while(d--)\n        {\n            bool bef=false,ncx=false,nd=false;\n            char ad[1001];\n            gets(ad+1);\n            int lenad=strlen(ad+1);\n            for(int i=1;i<=lenad;i++)\n            {\n                if(ad[i]>='0' && ad[i]<='9')\n                {\n                    if(nd==true)\n                    {\n                        aft=true;\n                    }\n                    bef=true;\n                }\n                if(ad[i]=='n')\n                {\n                    nd=true;\n                    if(bef==true)\n                    {\n                        ncx=true;\n                    }\n                }\n            }\n            bool sg=false;\n            int numa=0,numb=0,wz=lenad+1;\n            for(int i=1;i<=lenad;i++)\n            {\n                if(ad[i]>='0' && ad[i]<='9')\n                {\n                    numa=numa*10+ad[i]-'0';\n                }\n                if(ad[i]==' ')\n                {\n                    if(numa!=0)\n                    {\n                        wz=i+1;\n                        break;\n                    }\n                }\n            }\n            for(int i=wz;i<=lenad;i++)\n            {\n                if(ad[i]>='0' && ad[i]<='9')\n                {\n                    numb=numb*10+ad[i]-'0';\n                }\n            }\n            if(numb!=0)\n            {\n                if(numa>numb)\n                {\n                    aft=true;\n                }\n            }\n            f[bc[tou]]=0;\n            for(int i=1;i<=lenad;i++)\n            {\n                if(ad[i]>='a' && ad[i]<='z')\n                {\n                    wei++;\n                    bc[wei]=ad[i];\n                    f[ad[i]]++;\n                    if(f[ad[i]]>1 && sc==false)\n                    {\n                        printf(\"ERR\\n\");\n                        sc=true;\n                    }\n                    break;\n                }\n            }\n            for(int i=1;i<=lenad;i++)\n            {\n                if(ad[i]=='F')\n                {\n                    fgs++;\n                    if(ncx==true)\n                    {\n                        xh++;\n                        if(aft==false)\n                        {\n                            maxx=max(maxx,xh);\n                        }\n                    }\n                }\n                if(ad[i]=='E')\n                {\n                    egs++;\n                    if(xh>0)\n                    {\n                        xh--;\n                        if(xh==0)\n                        {\n                            aft=false;\n                        }\n                    }\n                    f[bc[wei]]--;\n                    wei--;\n                }\n            }\n        }\n        if(sc==false)\n        {\n            if(fgs!=egs)\n            {\n                printf(\"ERR\\n\");\n            }\n            else\n            {\n                if(flag==false)\n                {\n                    if(maxx==0)\n                    {\n                        printf(\"Yes\\n\");\n                    }\n                    else\n                    {\n                        printf(\"No\\n\");\n                    }\n                }\n                else if(flag==true)\n                {\n                    if(maxx==number)\n                    {\n                        printf(\"Yes\\n\");\n                    }\n                    else\n                    {\n                        printf(\"No\\n\");\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1514078040,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010[NOIP2017]\u65f6\u95f4\u590d\u6742\u5ea6\u3011"
    },
    {
        "content": "\u7801\u4e86\u4e00\u5929\u7684\u4ee3\u7801\uff0c\u4fee\u8865\u5404\u79cdBUG\u5230\u54ed\u3002\u3002\n\n\u4e00\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u60f3\u5230\u7528\u6808\u7684\u65b9\u6cd5\u6765\u8bb0\u5f55\u6b64\u65f6\u5faa\u73af\u7684\u72b6\u6001\u3002\u3002~~\uff08\u53ef\u662f\u4f9d\u65e7\u7801\u4e86\u4e00\u5929\uff0c\u6709\u6728\u6709qwq\uff09~~\n\n\u672c\u4eba\u4e0d\u64c5\u957f\u5907\u6ce8\uff0c\u8bf7\u89c1\u8c05\u3002\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstack<pair<char,bool>> xun;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u8bb0\u5f55\u8be5\u5faa\u73af\u72b6\u6001\u4e0b\u6240\u5728\u7684\u5faa\u73af\u5957 \nint T, L, k, ans, maxx, on, cc, ll;\nbool fl, kg, bil[205]; \nint qiu (string s)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6c42\u5b57\u7b26\u4e32\u7684\u503c \n{\n\tif (s == \"n\") return 0x7fffffff;\n\tint num;\n\tfor (int i = 0; i < s.length(); i++)\n\t\tif (s[i] >= '0' && s[i] <= '9')\n\t\t\tnum = num * 10 + s[i] - '0';\n\treturn num;\n}                                      \nint main()\n{\n\tcin>>T;\n\twhile (T--)\n\t{\n\t\tll = ans =  k = maxx = cc = 0; fl = kg = 0;\t\t\t\t//fl\u4e3a\u662f\u5426\u4f1aERR\u7684\u6807\u8bb0  kg\u4e3a\u590d\u6742\u5ea6\u662f\u5426\u4e3aO(1)\u7684\u6807\u5fd7 \n\t\tmemset (bil, 0, sizeof(bil)); \n\t\twhile( !xun.empty() ) xun.pop();\t\t\t\t\t\t\t\t\t//\u521d\u59cb\u5316 \n\t\tchar m; string pro;\n\t\tcin>>L>>pro;\n\t\tif (pro[2] == '1') kg = 1;\n\t\telse cc = qiu (pro);\n\t\tfor (int I = 1; I <= L; I++)\n\t\t{\n\t\t\tcin>>m;\n\t\t\tif (m == 'F')\n\t\t\t{\n\t\t\t\tchar a; string b, c; int x = 0, y = 0; \n\t\t\t\tcin>>a>>b>>c; \n\t\t\t\tk++; \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5c31\u50cf\u62ec\u53f7\u5339\u914d\u90a3\u6837\uff0c\u8bb0\u5f55\u662f\u5426\u4f1aERR \n\t\t\t\tx = qiu (b); y = qiu (c);\n\t\t\t\tif (bil[a]) fl = 1; else bil[a] = 1;\t\t\t\t//\u5224\u65ad\u5b57\u6bcd\u662f\u5426\u6709\u51b2\u7a81 \n\t\t\t\tif (x > y) xun.push(make_pair(a,1)),ll++;\t\t//\u8bb0\u5f55\u72b6\u6001 \u5982\u679c\u5728\u4e4b\u524d\u7684\u5faa\u73af\u91cc\u6709 F i x > y \u5219\u5185\u90e8\u5faa\u73af\u5168\u90e8\u65e0\u6548  \n\t\t\t\telse xun.push(make_pair(a,0));\n\t\t\t\tif (b != \"n\" && c == \"n\" && !ll) ans++;\t\t\t//ll\u5224\u65ad\u662f\u5426\u5728\u65e0\u6548\u5faa\u73af\u5185\uff0c\u662f\uff0cans\u4e0d\u53d8 \uff0c\u5426 ans++ \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tk--;if (!ll && ans) ans--;\t\t\t\t\t\t\t\t\t//\u4e0d\u5728\u65e0\u6548\u5faa\u73af\u5185 \u5219\u9700\u8981\u5c06\u5faa\u73af\u5c42\u6570-- \n\t\t\t\tif (xun.empty()) fl = 1;\t\t\t\t\t\t\t\t\t\t//\u5982\u679c\u63d0\u524d\u7206\u6808 \u5219ERR \n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tif (xun.top().second) ll--; \t\t\t\t\t\t\t//\u5982\u679c\u8be5\u5faa\u73af\u65e0\u6548 \u5219\u65e0\u6548\u5faa\u73af\u6570-- \n\t\t\t\t\tbil[xun.top().first] = 0; \t\t\t\t\t\t\t\t//\u8be5\u5faa\u73af\u7684\u5b57\u6bcd\u6e05\u9664 \n\t\t\t\t\txun.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaxx = max (maxx, ans);\n\t\t\tif (k == -1) fl = 1;\n\t\t\tif (!k) memset (bil, 0, sizeof(bil)); \n\t\t}\n\t\tif (k) fl = 1;\n\t\tif (fl) cout<<\"ERR\"<<endl;\n\t\telse\n\t\t{\n\t\t\tif ((kg && !maxx) || cc == maxx) cout<<\"Yes\"<<endl;\n\t\t\telse cout<<\"No\"<<endl; \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u6211\u76f8\u4fe1\u8fd9\u4e2a\u4ee3\u7801\u5df2\u7ecf\u5f88\u77ed\u4e86\u3002\u3002\n\n~~\u867d\u7136\u53ea\u662f\u5728\u4e0d\u65ad\u5730\u4feeBUG~~\n\u53e6\u5916\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u7ed9\u70b9\u652f\u6301~~\uff08\u4e0d\u559c\u52ff\u55b7\uff09~~\n\nQ\u03c9Q~~\uff08\u6211\u89c9\u5f97\u8fd9\u4e2a\u03c9\u771f\u7684\u53ef\u7231\uff09~~",
        "postTime": 1541075090,
        "uid": 69235,
        "name": "rivestarky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u63d0\u9ad8D1\u4e2d\u5c5e\u8fd9\u9898\u6bd4\u8f83\u6ee1\u610f\uff0c\u4e2a\u4eba\u89c9\u5f97\u697c\u4e0b\u5927\u795e\u7684\u505a\u6cd5\u592a\u9ebb\u70e6\u4e86\uff0c\u6765\u6ce2\u7b80\u5355\u7684\u6a21\u62df\n\n\u4e24\u6808\u9f50\u53d1\uff0cxh\u7528\u4e8e\u8bb0\u5f55FE\u5faa\u73af\u7684\u51fa\u5165\uff0c\u82e5<0\u76f4\u63a5\u9000\u51fa\n\n\u9047\u89c1i>j\u65f6\uff0cbo\u8bb0\u5f55\uff0c\u5728\u672c\u5faa\u73af\u7ed3\u675f\u524d\u590d\u6742\u5ea6\u5747\u4e3a\u96f6\n\n\u5177\u4f53\u5b9e\u65bd\u4e2d\uff0c\u5148\u7528\u6574\u5f62cn\u8bb0\u5f55\u4e0b\u9898\u76ee\u6240\u7ed9\u590d\u6742\u5ea6\n\n\u7136\u540esum\u8bb0\u5f55n\u7684\u4e2a\u6570\uff0c\u5982\uff1asum=2\uff0cfzd=n^2\n\n\u6548\u9a8c\u65f6\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e0d\u4ec5\u8981\u5224\u5b9axh\u5339\u914d\u5426\uff0c\u8fd8\u8981\u00b7\u68c0\u9a8c\u4e4b\u524d\u8f93\u51fa\u8fc7err\u5426\n\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint t,l,xh,cn,ans,sum,f[505];//\u6ca1\u5b66\u8fc7\u6808\uff0ccn\u7a81\u53d1\u5947\u60f3\u4f5c\u4e3a\u5faa\u73af\u5339\u914d\u7684\u6307\u9488\uff0cxh\u662f\u8bb0\u5f55F\u548cE\u7684\u5339\u914d\u60c5\u51b5\nchar cx,i;\nstring fzd,x,y;//\u5206\u522b\u662f\u590d\u6742\u5ea6\uff0c\u4e24\u4e2a\u5faa\u73af\u53d8\u91cf\nbool z,bo;/*bo\u662f\u6bd4\u8f83\u5de7\u7684\u5904\u7406\uff1a\n```\nF 2 1 \u3002\u3002\u3002\n\n\u3002\u3002\u3002\n\n\nE \u8fd9\u6837\u5916\u5faa\u574f\u76f4\u63a5\u9000\u51fa\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u518d\u8ba1\u7b97\n\n\n\\*/\n\n```cpp\nint main() {\n    //freopen(\"complexity.in\",\"r\",stdin);\n    //freopen(\"complexity.out\",\"w\",stdout);\n    scanf(\"%d\",&t);\n    while(t--) {//while\u6807\u914d\n        scanf(\"%d\",&l);\n        cin>>fzd;\n        cn=0;\n        if(fzd==\"O(1)\") cn=0;\n        else {\n            for(int i=0; i<fzd.length()-1; i++) {\n                if(fzd[i]>='0'&&fzd[i]<='9') cn=cn*10+fzd[i]-'0';\n            }\n```\n}//\u6587\u4e2d\u590d\u6742\u5ea6\u5236\u9020\n\n```cpp\n        xh=sum=ans=0;\n        bo=1;\n        z=true;//\u521d\u59cb\u5316\n        memset(f,0,sizeof(f));\n        while(l--) {\n            cin>>cx;\n            if(cx=='F') {\n                xh++;\n                cin>>i>>x>>y;\n                f[i]++;\n                if(f[i]>1) {\n                    z=0;\n                    sum=0;\n                    memset(f,0,sizeof(f));\n                }\n                if(x==\"n\"&&y==\"n\") continue;//\u4e3a1\u7684\u60c5\u51b5\n                else if(x[0]<='9'&&x[0]>='0') {\n                    if(y[0]<='9'&&y[0]>='0') {\n                        if(x>y) bo=0;//\u524d\u6587\u63d0\u5230\u5faa\u73af\u76f4\u63a5\u9000\u51fa\u60c5\u51b5\n                        continue;\n                    } else if(y==\"n\"&&bo) sum++;//\u56db\u79cd\u60c5\u51b5\u5206\u522b\u8003\u8651\n                } else if(y[0]<='9'&&y[0]>='0'&&x==\"n\") bo=0;\n                else continue;\n            } else {\n                xh--;\n                if(xh<0) {\n                    z=0;\n                    sum=0;\n                    memset(f,0,sizeof(f));\n                }\n                bo=1;//\u6807\u8bb0\u6e05\u96f6\n                memset(f,0,sizeof(f));\n                ans=max(ans,sum);\n                sum=0;\n            }\n        }\n        if(!z) cout<<\"ERR\\n\";\n        if(xh>0&&z) cout<<\"ERR\\n\";\n        if(xh==0&&ans==cn&&z) cout<<\"Yes\\n\";\n        else if(xh==0&&z)cout<<\"No\\n\";//\u6ce8\u610f\u6bd4\u8f83\n    }\n    fclose(stdin);\n    fclose(stdout);\n    return 0;    \n}\n```",
        "postTime": 1511653783,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u4eba\u7528$sscanf$?\u8fd9\u4e48\u65b9\u4fbf\u7684\u4e1c\u897f\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5462\uff1f\n\n### \u9898\u76ee\u5206\u6790:\n\n\u5bf9\u4e8e\u8fd9\u79cd\u6a21\u62df\u9898\uff0c\u9009\u53d6\u597d\u7684\u4ee3\u7801\u7ed3\u6784\u5f88\u91cd\u8981\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5faa\u73af\u5d4c\u5957\u662f\u6807\u51c6\u7684**\u6808\u7ed3\u6784**\u3002\n\n#### \u9898\u9762\u544a\u8bc9\u6211\u4eec\u4e00\u5c42\u5faa\u73af\u6709\u4ee5\u4e0b\u51e0\u4e2a\u60c5\u51b5:\n\n1. \u4e0d\u4f1a\u6267\u884c\n2. \u5e38\u6570\u5faa\u73af\u6b21\u6570\n3. $O(n)$\u5faa\u73af\u6b21\u6570\n\n#### Error\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5:\n\n1. \u53d8\u91cf\u540d\u91cd\u540d\n2. $F$\u4e0e$E$\u4e0d\u5339\u914d\n\n\u56e0\u4e3a\u5728\u7a0b\u5e8f\u4e0d\u4f1a\u6267\u884c\u7684\u5faa\u73af\u4f53\u4e2d\u51fa\u73b0\u4e86\u8bed\u6cd5\u9519\u8bef\u4e5f\u4f1a\u7f16\u8bd1\u9519\u8bef\uff0c\u6240\u4ee5**\u9047\u5230\u8fd9\u79cd\u4e0d\u4f1a\u6267\u884c\u7684\u5faa\u73af\u4e5f\u4e0d\u8981\u8df3\u8fc7**\uff0c\u4f46\u5982\u679c\u51fa\u73b0\u4e86$Error$\u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e4b\u540e\u7684\u8bed\u53e5\u4e86\uff0c\u514d\u5f97$RE$\u3002\n\n\u6240\u4ee5\u6574\u4f53\u601d\u8def\u5c31\u51fa\u6765\u4e86:\n```\n\u6808\u9876\u6807\u53f7(\u5373\u5f53\u524d\u5faa\u73af\u6df1\u5ea6)int top;\n\u8bb0\u5f55\u53d8\u91cf\u540d\u7684\u6808char stk[N]\n\u8bb0\u5f55\u5f53\u524d\u5faa\u73af\u662f\u5426\u4f1a\u8fdb\u5165\u7684\u6808bool noin[N]\n\u8bb0\u5f55\u5f53\u524d\u5faa\u73af\u662f\u5426\u662fO(n)\u5faa\u73af\u7684\u6808bool nc[N]\n\u8bb0\u5f55\u5f53\u524d\u5c42\u65f6\u95f4\u590d\u6742\u5ea6int nd\n\u8bb0\u5f55\u6700\u5927\u590d\u6742\u5ea6int res\n\u8bb0\u5f55\u662f\u5426\u51fa\u73b0Error\u7684bool err\n```\n#### \u4e0a\u9762\u7684\u7ed3\u6784\u5f88\u91cd\u8981\u3002\n\n\u56e0\u4e3a\u4e0d\u4f1a\u8fdb\u5165\u7684\u5faa\u73af\u7684\u5b50\u5faa\u73af\u4e5f\u4e0d\u4f1a\u8fdb\u5165\uff0c\u6240\u4ee5\u5982\u4e0b\u5f97\u51fa$noin[top]$:\n\n```cpp\nscanf(\"\\n%[^\\n]\", line);\nint len = strlen(line);\nif(*line == 'F') {\n\tnoin[top] = noin[top - 1]\n\t\t|| (line[4] == 'n' && line[len - 1] != 'n');//\u5224F x n 1(\u4e0d\u4f1a\u6267\u884c)\u548cF x n n\u60c5\u51b5(\u4f1a\u6267\u884c)\n\tif(line[len - 1] != 'n' && line[4] != 'n') {\n\t\tint a, b;//\u8bfb\u51fa\u4e24\u4e2a\u6570\n\t\tsscanf(line, \"%*s%*s%d%d\", &a, &b);\n\t\tif(a > b) noin[top] = 1;\n\t}\n}\n```\n\n\u6700\u540e\u5982\u679c\u6ca1\u6709$Error$\uff0c\u5224\u65ad$res$\u662f\u5426\u7b49\u4e8e\u5c0f\u660e\u7ed9\u51fa\u7684\u6570\u503c\u5373\u53ef\u3002\n\n#### \u4ee3\u7801\u5b9e\u73b0:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, top;//\u5b9a\u4e49\u5982\u4e0a\nchar line[105], stk[105];\nbool noin[105], nc[105], err;\n//\u5c0f\u660e\u7ed9\u7684\u6570\uff0c\u6700\u5927n\u6b21\u65b9\uff0c\u5f53\u524dn\u6b21\u65b9\nint inc, res, nd;\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--) {\n\t\tscanf(\"%d%s\", &n, line);\n\t\tif(line[2] == '1') inc = 0;\n\t\telse sscanf(line, \"O(n^%d)\", &inc);//sscanf\u597d\u4e1c\u897f\n\t\t\n\t\tres = nd = top = 0;\n\t\terr = 0;\n\t\t\n\t\twhile(n--) {\n\t\t\tscanf(\"\\n%[^\\n]\", line);//scanf\u8bfb\u884c\uff08\u8fd8\u8981\u8bfb\u9664\u4e0a\u4e00\u884c\u7684\u6362\u884c\uff09\n\t\t\tif(err) continue;\n\t\t\tif(*line == 'E') {\n\t\t\t\tif(!top) err = 1;//\u6ca1\u6709F\u4e0e\u8fd9\u4e2aE\u5339\u914d\n\t\t\t\tif(nc[top--]) nd--;//\u9000\u51faO(n)\u5faa\u73af\uff08\u76f8\u5f53\u4e8e\u56de\u6eaf\uff09\n\t\t\t} else {\n\t\t\t\tint len = strlen(line);\n\t\t\t\ttop++;\n\t\t\t\tfor(int i = 1;i < top;i++)\n\t\t\t\t\tif(stk[i] == line[2]) err = 1;//\u53d8\u91cf\u540d\u91cd\u540d\n\t\t\t\tnoin[top] = noin[top - 1]\n\t\t\t\t\t|| (line[4] == 'n' && line[len - 1] != 'n');//\u6570\u5b57\u53ef\u80fd\u53601~3\u4f4d\u4e0d\u786e\u5b9a\uff0c\u6240\u4ee5\u8ba1\u7b97len\n\t\t\t\tif(line[len - 1] != 'n' && line[4] != 'n') {\n\t\t\t\t\tint a, b;\n\t\t\t\t\tsscanf(line, \"%*s%*s%d%d\", &a, &b);\n\t\t\t\t\tif(a > b) noin[top] = 1;\n\t\t\t\t}\n\t\t\t\tif(line[len - 1] == 'n' && line[4] != 'n')\n\t\t\t\t\tnc[top] = 1, nd++;//\u590d\u6742\u5ea6\u518d\u4e58n\n\t\t\t\telse nc[top] = 0;//\u907f\u514d\u521d\u59cb\u5316\n\t\t\t\tstk[top] = line[2];\n\t\t\t\tif(!noin[top] && res < nd) res = nd;//\u5982\u679c\u80fd\u8fdb\u5165\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u66f4\u65b0\u7b54\u6848\n\t\t\t}\n\t\t}\n\t\tif(top) err = 1;//\u8fd8\u6709F\u6ca1\u6709\u5339\u914dE\n\t\tif(err) puts(\"ERR\");\n\t\telse puts(res == inc ? \"Yes\" : \"No\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570157596,
        "uid": 133236,
        "name": "saxiy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\uff0c\u6240\u6709\u9898\u89e3\u4e2d\uff0c\u5927\u5bb6\u6ca1\u6709\u5199\u53cc\u7aef\u961f\u5217\u7684\uff0c\u90a3\u4e48\uff0c\u672c\u849f\u84bb\u5c31\u6765\u53d1\u4e00\u7bc7emmmmm\uff0c\u8ba9\u5927\u5bb6\u719f\u6089\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\uff0c\u9996\u5148\u5f00\u4e24\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\u6240\u6709\u7684\u5faa\u73af\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u5b58\u53c2\u52a0\u5faa\u73af\u7684\u5faa\u73af\u53d8\u91cf\u3002\u7136\u540e\u6839\u636e\u8f93\u5165\u8ba1\u7b97\u51fa\u662fn\u7684\u51e0\u6b21\u65b9\u7684\u590d\u6742\u5ea6(O(1))\u4e3an\u76840\u6b21\u65b9\uff0c\u7136\u540egetline\u8f93\u5165\u53ef\u4ee5\u8f93\u5165\u5e26\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5bf9\u6bcf\u884c\u5f00\u5934\u662fE\u6216F\u7684\u60c5\u51b5\u5206\u522b\u8ba8\u8bba\uff0c\u7528f\u53d8\u91cf\u5206\u7c7b\u8f93\u51fa\u5373\u53ef\u3002\n\n#### \u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#define maxn 100+1\nusing namespace std;\ninline int qread()                                //\u5feb\u8bfb\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u5427\u3002\u3002\n{\n\tchar c=getchar();int num=0,f=1;\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) num=num*10+c-'0';\n\treturn num*f;\n}\nint l,t,vis[maxn],in[maxn];                   //l\u548ct\u5206\u522b\u4e3a\u9898\u76ee\u4e2d\u7684l\u548ct\uff0cvis\u6570\u7ec4\u8868\u793a\u8fd9\u4e2a\u5faa\u73af\u53d8\u91cf\u662f\u5426\u5728\u7b2c\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u4e2d\uff0cin\u4e3a\u7b2c\u4e8c\u4e2a\u3002\nstring s;\nint main()\n{\n\tt=qread();\n\twhile(t--)\n\t{\n\t\tmemset(vis,0,sizeof(vis));                //\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0cvis\u548cin\u90fd\u8981\u6e05\u7a7a\u3002\n\t\tmemset(in,0,sizeof(in));\n\t\tdeque<int>q1,q2;\t                      //\u53cc\u7aef\u961f\u5217\u3002\n\t\tscanf(\"%d\",&l);\n\t\tgetline(cin,s);                        //getline\u53ef\u4ee5\u8bfb\u5165\u5e26\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\u3002\n\t\tint cf,sum=0,stop=0,f=0;              //cf\u8868\u793a\u5f53\u524d\u7a0b\u5e8f\u9898\u76ee\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0csum\u8868\u793a\u5f53\u524d\u7a0b\u5e8f\u5b9e\u9645\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cf\u7528\u6765\u5206\u7c7b\u8f93\u51fa\u3002\n\t\tif(s[3]=='1') cf=0;                     //O(1)\u5373O(n\u76840\u6b21\u65b9)\u3002\u3002\u3002\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u662fs[3]?\u56e0\u4e3a\u5148\u8f93\u5165\u7684\u4e00\u4e2al\uff0c\u7136\u540e\u6709\u4e2a\u7a7a\u683c\uff0c\u8fd9\u4e2a\u7a7a\u683c\u662f\u5360\u6570\u7ec4\u4f4d\u7f6e\u7684\uff0c\u6570\u7ec4\u4f4d\u7f6e\u4ece0\u5f00\u59cb\u3002\n\t\telse\n\t\t{\n\t\t\tint now=5;cf=0;                //\u540c\u7406\u3002\n\t\t\twhile(isdigit(s[now])) cf=cf*10+s[now++]-'0';          //\u8ddf\u5feb\u8bfb\u539f\u7406\u4e00\u6837\u3002\t\n\t\t}\n\t\twhile(l--)                               //\u5bf9\u4e8e\u6bcf\u4e2a\u5faa\u73af\u7684\u5f00\u5934\u8fdb\u884c\u8ba8\u8bba\u3002\n\t\t{\n\t\t\tgetline(cin,s);\n\t\t\tif(s[0]=='F')                      \n\t\t\t{\n\t\t\t\tint x=s[2]-'a'+1;                 //\u628a\u5faa\u73af\u53d8\u91cf\u8f6c\u5316\u4e3aint\u7c7b\u578b\u3002\n\t\t\t\tq1.push_front(x);              //\u52a0\u5165\u7b2c\u4e00\u4e2a\u961f\u5217\u3002\n\t\t\t\tif(!vis[x])                       //\u5982\u679cx\u672a\u88ab\u6807\u8bb0\u3002\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tvis[x]=1;                    //\u6807\u8bb0\u3002\n\t\t\t\t\tif(s[4]=='n') \n\t\t\t\t\t{\n\t\t\t\t\t\tif(isdigit(s[6]))\n\t\t\t\t\t  \t  stop=1;               //\u5982\u679c\u5faa\u73af\u4ecen\u5f00\u59cb\uff0c\u5e76\u4e14\u5faa\u73af\u53f3\u7aef\u70b9\u4e0d\u662fn\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bed\u53e5\u4e0d\u53c2\u4e0e\u5faa\u73af\u3002\n\t\t\t\t\t}\n\t\t\t\t\telse                     //\u5faa\u73af\u4e0d\u4ecen\u5f00\u59cb\u3002\n\t\t\t\t\t{\n\t\t\t\t\t\tint now=4,t1=0,t2=0;\n\t\t\t\t\t\twhile(isdigit(s[now])) t1=t1*10+s[now++]-'0';   //\u8c03\u51fa\u8d77\u70b9\u3002\n\t\t\t\t\t\tif(s[now+1]=='n'&&stop==0)            //\u5982\u679c\u5faa\u73af\u53f3\u7aef\u70b9\u662fn\u5e76\u4e14\u5f53\u524d\u8bed\u53e5\u53c2\u4e0e\u5faa\u73af\u3002\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tq2.push_front(x);              //\u53c2\u4e0e\u5faa\u73af\u52a0\u5165\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u3002\n\t\t\t\t\t\t\tin[x]=1;                      //\u6807\u8bb0\u3002\n\t\t\t\t\t\t\tint m=q2.size();              //\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u6709\u51e0\u4e2a\u5faa\u73af\u53d8\u91cf\u5e76\u4e14\u5faa\u73af\u53f3\u7aef\u70b9\u90fd\u662fn\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662fO(n\u7684\u51e0\u6b21\u65b9)\u3002\n\t\t\t\t\t\t\tsum=max(m,sum);        //\u66f4\u65b0\u5b9e\u9645\u590d\u6742\u5ea6\u3002\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(s[now+1]!='n')                 //\u82e5\u5faa\u73af\u53f3\u7aef\u70b9\u4e0d\u4e3an\uff0c\u90a3\u4e48\u8868\u660e\u5faa\u73af\u5de6\u53f3\u7aef\u70b9\u90fd\u662f\u5e38\u6570(\u5de6\u7aef\u70b9\u4e3an\u7684\u5df2\u7ecf\u5224\u5b8c\u4e86)\u3002\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnow++;                    \n\t\t\t\t\t\t\twhile(isdigit(s[now])) t2=t2*10+s[now++]-'0';    //\u8ba1\u7b97\u51fa\u5faa\u73af\u53f3\u7aef\u70b9\u3002\n\t\t\t\t\t\t\tif(t2<t1) stop=1;             //\u5982\u679c\u53f3\u7aef\u70b9\u5c0f\u4e8e\u5de6\u7aef\u70b9\uff0c\u4e0d\u53c2\u4e0e\u5faa\u73af\u3002\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse f=1;                     //\u5426\u5219\uff0c\u5c31\u6709\u8bed\u6cd5\u9519\u8bef\u3002\n\t\t\t}\n\t\t\tif(s[0]=='E')              //\u5982\u679c\u884c\u7684\u5f00\u5934\u4e3aE\u3002\n\t\t\t{\n\t\t\t\tif(!q1.empty())           //\u5f53\u7b2c\u4e00\u4e2a\u961f\u5217\u4e0d\u4e3a\u7a7a\u3002\n\t\t\t\t{\n\t\t\t\t\tint p=q1.front();\n\t\t\t\t\tq1.pop_front();         //\u5f39\u51fa\u961f\u9996\u3002\n\t\t\t\t\tif(in[p])               //\u5982\u679c\u961f\u9996\u5143\u7d20\u4e5f\u5728\u7b2c\u4e8c\u4e2a\u961f\u5217\u91cc\u3002\n\t\t\t\t\t{\n\t\t\t\t\t\tq2.pop_front();       //\u5f39\u51fa\u6765\u3002\n\t\t\t\t\t\tin[p]=0;              //\u91ca\u653e\u6807\u8bb0\u3002\n\t\t\t\t\t}\n\t\t\t\t\tvis[p]=0;              //\u91ca\u653e\u6807\u8bb0\u3002\n\t\t\t\t}\n\t\t\t\telse f=1;                    //\u4e0d\u7136\uff0c\u5c31\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\u3002\n\t\t\t\tif(q1.empty()) stop=0;        \t\t//\u5982\u679c\u7b2c\u4e00\u4e2a\u961f\u5217\u4e2d\u6ca1\u6709\u5143\u7d20\u4e86\uff0c\u8be5\u5faa\u73af\u4f53\u5c31\u6267\u884c\u5b8c\u4e86\u3002\t\n}\n\t\t\tif(s[0]!='F'&&s[0]!='E') f=1;          //\u5982\u679c\u884c\u9996\u51fa\u73b0\u5176\u4ed6\u5b57\u6bcd\uff0c\u5219\u662f\u8bed\u6cd5\u9519\u8bef\u3002\n\t\t}\n\t\tif(!q1.empty()) f=1;             //\u6700\u540e\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u961f\u5217\u8fd8\u6709\u5faa\u73af\u5143\u7d20(E\u90fd\u6ca1\u4e86\u8fd8\u6709\u5143\u7d20)\uff0c\u5219\u6709\u8bed\u6cd5\u9519\u8bef\u3002\n\n\t\tif(f==1)\n\t\t{\n\t\t\tcout<<\"ERR\"<<'\\n';            //\u5148\u628a\u8bed\u6cd5\u9519\u8bef\u5224\u6389\uff0c\u4ee5\u514d\u7ed9\u51fa\u590d\u6742\u5ea6\u548c\u5b9e\u9645\u590d\u6742\u5ea6\u4e0d\u7b26\u65f6\u628af=1\u8986\u76d6\u62102\u3002\n\t\t\tcontinue;\n\t\t}\n\t\tif(sum!=cf) f=2;               //\u5b9e\u9645\u590d\u6742\u5ea6\u8ddf\u7ed9\u51fa\u590d\u6742\u5ea6\u4e0d\u7edf\u4e00\u3002\n\t\tif(f==0) cout<<\"Yes\"<<'\\n';\n\t\tif(f==2) cout<<\"No\"<<'\\n';                  //\u5206\u7c7b\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\t}\n\treturn 0;\n}\n```\n\n\n\n### \u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u5927\u5bb6\u80fd\u6709\u6240\u5e2e\u52a9\u3002\n",
        "postTime": 1539348567,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "#### \u201c\u4e0d\u8981\u6015\u4e00\u9053\u9898\u4ee3\u7801\u5f88\u957f\u5f88\u590d\u6742\uff0c\u4e00\u6bb5\u5f88\u957f\u5f88\u590d\u6742\u7684\u4ee3\u7801\u4e00\u822c\u53ef\u4ee5\u8ba9\u4f60\u907f\u514dTLE\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u5e2e\u7535\u8111\u505a\u4e86\u592a\u591a\u4e8b\u60c5\u3002\u201d                                           \n\t\t\t\t\t\t\t\t\n#####  \u2014\u2014\u6c83\u5179\u00b7\u57fa\u00b7\u7855\u5fb7\u534e\n\n## 1.\u57fa\u7840\u6570\u636e\u8bfb\u5165\n\t\n   1.1.\u8bfb\u5165\u6570\u636e\u7ec4\u6570\n   \n   1.2.\u8bfb\u5165\u4ee3\u7801\u957f\u5ea6\n   \n   1.3.\u8bfb\u5165\u4ee3\u8868\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5b57\u7b26\u4e32\n\t   \n   *\u76f4\u63a5\u8bfb\u5165\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e\u7528 f(o) \u51fd\u6570\u8bfb\u53d6\u65f6\u95f4\u590d\u6742\u5ea6\n  \n  1.4.\u4f7f\u7528 gets() \u6574\u884c\u8bfb\u53d6\u7a0b\u5e8f\n## 2.\u6709\u6548\u6570\u636e\u62bd\u53d6\n\n2.1.\u8bfb\u53d6\u5c0f\u660e\u8ba1\u7b97\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n```cpp\nint i, ans = 0, base = 1;\n//base\u6bcf\u6b21\u4e5810\uff0c\u4ee3\u8868\u6b63\u5728\u8bfb\u53d6\u7684\u6570\u5b57\u6240\u5728\u7684\u4f4d\u6570\nif(o[3] != ')')\n    for(i = o.length() - 2; i > 0; i--){\n        if(o[i] >= '0' && o[i] <= '9'){\n            ans += base * (o[i] - '0');\n            base *= 10;\n        }\n        else break;\n    }\nelse if(o[3] == ')'){\n    if(o[2] == 'n') ans = 1;\n    else if(o[2] == '1') ans = 0;\n}\n```\n   *\u62bd\u53d6\u5b57\u7b26\u4e32\u4e2d\u7b2c3\u4f4d\u5b57\u7b26\uff0c\u5982\u679c\u7b49\u4e8e1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8bb0\u4e3a0\uff0c\u4ee3\u8868n^0\uff1b\u5982\u679c\u7b49\u4e8en\uff0c\u5411\u540e\u8bfb\u53d6\uff0c\u7b2c\u56db\u4f4d\u5b57\u7b26\u82e5\u662f\u62ec\u53f7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8bb0\u4e3a1\uff1b\u82e5\u662f'^',\u4ece\u5b57\u7b26\u4e32\u5012\u6570\u7b2c\u4e8c\u4f4d\u5f00\u59cb\u8bfb\u53d6\u6570\u5b57\uff0c\u7ec4\u5408\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n            \n   2.2.\u8bfb\u53d6\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n## 3.\u6838\u5fc3\u8bed\u53e5\n\t\t\n   3.1.\u53d8\u91cf\u7528\u9014\u8bf4\u660e\n```cpp\nint time_data[l] = {0};\t\n//time_data\u7528\u4e8e\u5b58\u50a8\u5404\u884c\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6ce8\u610f\u5168\u90e8\u521d\u59cb\u5316\u4e3a0\nint booke[l] = {0}, bookf[l] = {0};\n//booke\u7528\u4e8e\u5b58\u50a8\u67d0\u884c\u4e0aF\u5bf9\u5e94\u7684E\u6240\u5728\u7684\u884c\u6570\uff0cbookf\u89e3\u91ca\u76f8\u4f3c\nint num_f = 0, num_e = 0, num = 0, ans_num = 0;\n//num_f\u7528\u4e8e\u5b58\u50a8F\u7684\u4e2a\u6570\uff0cnum_e\u7528\u4e8e\u5b58\u50a8E\u7684\u4e2a\u6570\uff0cnum\u548cans_num\u6682\u65f6\u7528\u4e0d\u4e0a\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u7ed3\u679c\u65f6\u4f1a\u7528\u5230\nbool nowf = false, nowe = false, read = true;\n//nowf == true\u4ee3\u8868\u6b63\u5728\u8bfb\u53d6F\u8bed\u53e5\uff0cnowe == true\u4ee3\u8868\u6b63\u5728\u8bfb\u53d6E\uff0cread == true\u4ee3\u8868\u7ee7\u7eed\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0cread == false\u5219\u505c\u6b62\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ea\u68c0\u67e5\u9519\u8bef\nbool book[26] = {false};\n//\u6807\u8bb0\u53d8\u91cf\u540d\u662f\u5426\u7528\u8fc7\n```\n3.2.\u521d\u5224\u65ad\n```cpp\nif(a[l - 1][0] == 'F' || a[0][0] == 'E') return -1;\n//\u51fd\u6570\u7b2c\u4e00\u884c\u4e3aE\u6216\u8005\u6700\u540e\u4e00\u884c\u4e3aF\u5373\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u63a5\u8fd4\u56de-1\u4ee3\u8868\u9519\u8bef\n```\n\n\n3.3.\u4e3b\u5224\u65ad\uff08\u8be6\u89c1\u5b8c\u6574\u4ee3\u7801\uff09\n        \n   3.4.\u8ba1\u7b97\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\n```cpp\nfor(int tl = 0; tl < l; tl++){\n    num += time_data[tl];\n    if(num > ans_num) ans_num = num;\n}\n```\n*\u6309\u987a\u5e8f\u4ece\u5934\u5230\u5c3e\u5c06time_data\u91cc\u7684\u6570\u636e\u52a0\u8d77\u6765\uff0c\u76f8\u52a0\u8fc7\u7a0b\u4e2d\u6240\u83b7\u5f97\u7684\u6700\u5927\u503c\u5373\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\n        \n   3.5.\u8fd4\u56de\u590d\u6742\u5ea6\u5e76\u6bd4\u8f83\uff0c\u8f93\u51fa\u7ed3\u679c\u3002\n        \n## 4.\u4ee3\u7801\n        \n**\u4ee5\u4e0b\u662f\u5b8c\u6574\u4ee3\u7801\u3002*\n\n\u4ee3\u7801\u6bd4\u8f83\u4e71\uff0c\u6709\u5404\u79cd\u540d\u5b57\u7684\u53d8\u91cf\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u5feb\u5b50\u591c\u4e86\uff0c\u8ff7\u8ff7\u7cca\u7cca\u7684\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define fuck_this_question return 0\nusing namespace std;\nint ans(char a[][12], int l){\n\tint time_data[l] = {0};\n\tint booke[l] = {0}, bookf[l] = {0};\n\tint num_f = 0, num_e = 0, num = 0, ans_num = 0;\n\tbool nowf = false, nowe = false, read = true;\n\tbool book[26] = {false};\n\tif(a[l - 1][0] == 'F' || a[0][0] == 'E') return -1;\n//\u4ee5\u4e0b\u4e3a\u4e3b\u5224\u65ad\n\tfor(int i = 0; i < l; i++){\n    //i\u4ee3\u8868\u884c\u6570\n\t\tif(a[i][0] == 'F' && nowf == false){\n        //\u7531\u6b64\u5f00\u59cb\u8bfb\u53d6F\u8bed\u53e5\uff0c\u6ce8\u610f\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u91cd\u590d\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\n\t\t\tnowf = true;\n\t\t\tfor(int ti = i; nowf == true; ti++){\n\t\t\t\tnum_f++; i = ti; bookf[ti] = -1;\n                //\u6807\u8bb0bookf[ti]\u4e3a-1\uff0c\u8868\u793ati\u884c\u4e3aF\u8bed\u53e5\n                //ti\u8981\u56de\u4f20\u7ed9i\uff0c\u6807\u8bb0\u73b0\u5728\u6240\u8bfb\u53d6\u7684\u884c\u6570\n\t\t\t\tif(a[ti + 1][0] == 'E') nowf = false;\n                //\u4e0b\u4e00\u884c\u4e3aE\uff0c\u672c\u6b21\u8bfb\u53d6\u7ed3\u675f\u540e\u505c\u6b62\u8bfb\u53d6F\u8bed\u53e5\n                if(!book[a[ti][2] - 'a']) book[a[ti][2] - 'a'] = true;\n        \t\telse if(book[a[ti][2] - 'a']) return -1;\n                //\u5224\u65ad\u53d8\u91cf\u540d\u91cd\u590d\n                if(read){\n                    if(a[ti][4] >= '0' && a[ti][4] <= '9'){\n                    //a[ti][4]\u8868\u793a\u7b2cti\u884c\u4e0a\u7684F\u8bed\u53e5\u4e2d\uff0c\u53d8\u91cf\u88ab\u521d\u59cb\u5316\u7684\u503c\n                        int x = 0, base = 1;\n                        int j = 4;\n                        for(j = j; a[ti][j] != ' '; j++);\n                        //\u8fd9\u4e2a\u7a7a\u5faa\u73af\u7528\u4e8e\u8bfb\u53d6\u521d\u59cb\u5316\u503cx\u548c\u5224\u65ad\u503cy\u4e4b\u95f4\u7684\u7a7a\u683c\u4f4d\u7f6e\n                        int j1 = j;\n                        for(j = j - 1; a[ti][j] != ' '; j--){\n                            if(a[ti][j] >= '0' && a[ti][j] <= '9'){\n                                x += (a[ti][j] - '0') * base;\n                                base *= 10;\n                            }\n                        }\n                        //\u8bfb\u53d6x\u7684\u65b9\u6cd5\u548cf(o)\u4e2d\u8bfb\u53d6\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u76f8\u540c\n                        if(a[ti][j1 + 1] == 'n'){\n                        \ttime_data[ti]++;\n\t\t\t\t\t\t}\n                        //x\u4e3a\u5e38\u6570\uff0cy\u4e3an\uff0c\u6807\u8bb0\u672c\u884cF\u8bed\u53e5\u4e3a\u7a0b\u5e8f\u589e\u52a0\u7684\u590d\u6742\u5ea6\u4e3a1\n                        else if(a[ti][j1 + 1] >= '0' && a[ti][j1 + 1] <= '9'){\n                            int y = 0, base_y = 1; i = ti;\n                            for(j = j1 + 1; a[ti][j] >= '0' && a[ti][j] <= '9'; j++);\n\t\t\t\t\t\t\tfor(j = j - 1; a[ti][j] != ' '; j--){\n                                y += (a[ti][j] - '0') * base_y;\n                                base_y *= 10;\n                            }\n                        //\u8bfb\u53d6\u5e38\u6570y\u7684\u65b9\u6cd5\u548cf(o)\u4e2d\u8bfb\u53d6\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u76f8\u540c\n                        //\u82e5\u4e24\u5e38\u6570x < y\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5faa\u73af\uff0c\u4e14\u6b64F\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a0\n                            if(x > y) read = false;\n                            //\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u5d4c\u5957\u5728\u5176\u4e2d\u7684\u8bed\u53e5\u5168\u90e8\u4f5c\u5e9f\n                        }\n                    }\n                    else if(a[ti][4] == 'n'){\n                    \tif(!book[a[ti][2] - 'a']) book[a[ti][2] - 'a'] = true;\n                        if(a[ti][6] >= '0' && a[ti][6] <= '9') read = false;\n                        //x\u4e3an\uff0c\u53ea\u6709y\u4e3an\u624d\u80fd\u7ee7\u7eed\u5faa\u73af\uff0c\u4e14\u6b64F\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a0\n                    }\n                }\n                else if(!read) book[a[ti][2] - 'a'] = true;\n                //\u82e5\u5df2\u505c\u6b62\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ea\u5224\u65ad\u53d8\u91cf\u540d\u662f\u5426\u91cd\u590d\n\t\t\t}\n\t\t}\n\t\telse if(a[i][0] == 'E' && nowe == false){\n        //\u7531\u6b64\u5f00\u59cb\u8bfb\u53d6E\uff0c\u6ce8\u610f\u5fc5\u987b\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u4e0e\u4e0b\u65b9\u5faa\u73af\u91cd\u590d\n\t\t\tnowe = true;\n\t\t\tfor(int ti = i; nowe == true; ti++){\n\t\t\t\tbooke[ti] = -1;\n                //\u6807\u8bb0\u6b64\u884c\u4e3aE\n\t\t\t\tbool time_to_break = false;\n                //time_to_break\u7528\u4e8e\u9000\u51fa\u4e0b\u9762\u7684\u5faa\u73af\n\t\t\t\tfor(int tk = ti - 1; !time_to_break; tk--){\n\t\t\t\t\tif(a[tk][0] == 'F' && booke[tk] == 0 && tk > -1){\n\t\t\t\t\t\tbooke[tk] = ti; bookf[ti] = tk;\n                        //\u5c06E\u4e0eF\u8bed\u53e5\u914d\u5bf9\uff0c\u76f8\u4e92\u6807\u8bb0\u4f4d\u7f6e\n\t\t\t\t\t\ttime_to_break = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if(a[tk][0] == 'F' && booke[tk] != 0 && tk == 0){\n\t\t\t\t\t\treturn -1;\n                        //\u6709E\u65e0\u6cd5\u4e0eF\u8bed\u53e5\u914d\u5bf9\uff0c\u8bf4\u660e\u6709\u8bed\u6cd5\u9519\u8bef\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnum_e++; i = ti;\n\t\t\t\tbook[a[bookf[ti]][2] - 'a'] = false;\n                //\u4e4b\u524d\u7528\u8fc7\u7684\u53d8\u91cf\u540d\u88ab\u9500\u6bc1\uff0c\u540e\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\n\t\t\t\tif(time_data[bookf[ti]]) time_data[ti] = -1;\n                //\u5982\u679cE\u6240\u5bf9\u7684F\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a1\uff0c\u6807\u8bb0E\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a-1\n\t\t\t\tif(a[ti + 1][0] == 'F' && ti < l - 1){\n\t\t\t\t\tnowe = false;\n\t\t\t\t\tread = true;\n                    //\u505c\u6b62\u8bfb\u53d6E\u8bed\u53e5\uff0c\u65e0\u8bba\u524d\u65b9\u7684F\u8bed\u53e5\u662f\u5426\u53ef\u4ee5\u88ab\u8bfb\u53d6\uff0c\u8fd9\u91cc\u4f7fread\t\t\t\t\t\u91cd\u65b0\u53d8\u4e3atrue\uff0c\u5df2\u4f7f\u4e0b\u9762\u7684F\u8bed\u53e5\u80fd\u88ab\u8bfb\u53d6\n\t\t\t\t}\n\t\t\t\telse if(ti == l - 1){\n\t\t\t\t\tnowe = false;\n\t\t\t\t\tif(num_e != num_f) return -1;\n                    //E\u4e0eF\u8bed\u53e5\u6570\u76ee\u4e0d\u7b49\uff0c\u8bf4\u660e\u6709\u8bed\u6cd5\u9519\u8bef\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int tl = 0; tl < l; tl++){\n\t\tnum += time_data[tl];\n\t\tif(num > ans_num) ans_num = num;\n\t}\n    return ans_num;\n}\nint f(string o){\n\tint i, ans = 0, base = 1;\n\tif(o[3] != ')')\n\t\tfor(i = o.length() - 2; i > 0; i--){\n\t\t\tif(o[i] >= '0' && o[i] <= '9'){\n\t\t\t\tans += base * (o[i] - '0');\n\t\t\t\tbase *= 10;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\telse if(o[3] == ')'){\n\t\tif(o[2] == 'n') ans = 1;\n\t\telse if(o[2] == '1') ans = 0;\n\t}\n\treturn ans;\n}\nint main(){\n\t//freopen(\"in.txt\", \"r\", stdin);\n\t//freopen(\"out.txt\", \"w\", stdout);\n\tint t;\n\tscanf(\"%d\", &t);\n\tfor(int i = 0; i < t; i++){\n\t\tint l;\n\t\tcin >> l;\n\t\tstring o;\n\t\tcin >> o;\n        char code[l + 1][12];\n        gets(code[0]);\n\t\tfor(int j = 0; j < l; j++){\n\t\t\tgets(code[j]);\n\t\t}\n\t\tint judge = ans(code, l), time = f(o);\n\t\tif(judge == -1) cout << \"ERR\" << endl;\n\t\telse{\n\t\t\tif(time == judge) cout << \"Yes\" << endl;\n\t\t\telse if(time != judge) cout << \"No\" << endl;\n\t\t}\n\t}\n\tfuck_this_question;\n}\n\n```\n\n## 5.\u6709\u5173time_data\u7684\u89e3\u91ca\n\nQ1.\u4e3a\u4f55\u6807\u8bb0F\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a1\uff0c\u6240\u5bf9\u5e94\u7684E\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a-1\uff1f\n\nA1.E\u7528\u4e8e\u62b5\u6d88F\u8bed\u53e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6700\u540e\u7684\u8ba1\u7b97\u662f\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u9010\u6e10\u7d2f\u52a0\u5e76\u62b5\u6d88\u7684\u8fc7\u7a0b\u3002\u76f8\u5e94\u5730\uff0c\u5982\u679cF\u8bed\u53e5\u590d\u6742\u5ea6\u4e3a0\uff0c\u76f8\u5bf9\u7684E\u8bed\u53e5\u590d\u6742\u5ea6\u4e5f\u4e3a0\uff0c\u4e5f\u6ee1\u8db3\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u62b5\u6d88\u3002\n\nQ2.\u4e3a\u4f55\u8981\u62b5\u6d88\uff1f\n\nA2.\u62b5\u6d88\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u6e05\u9664\u4ee5\u524d\u5faa\u73af\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u5f71\u54cd\u7684\u8fc7\u7a0b\uff0c\u9632\u6b62\u51e0\u4e2a\u5d4c\u5957\u5faa\u73af\u5904\u7406\u5b8c\u4e86\uff0c\u540e\u9762\u8ba1\u7b97\u5176\u4ed6\u7684\u5d4c\u5957\u5faa\u73af\u590d\u6742\u5ea6\u65f6\u8fd8\u5728\u4e4b\u524d\u7684\u5d4c\u5957\u5faa\u73af\u590d\u6742\u5ea6\u4e0a\u5904\u7406\u3002\u6bd4\u5982\u8bf4\u4e00\u4e2a8\u884c\u7684\u5d4c\u5957\u5faa\u73af\u590d\u6742\u5ea6\u4e3a4(o(n^4),\u7b80\u8bb0),\u8fd9\u4e2a\u5faa\u73af\u5df2\u7ecf\u75314\u4e2aE\u7ed3\u675f\u4e86\uff0c\u540e\u9762\u8fd8\u6709\u4e00\u4e2a2\u884c\u7684\u5355\u72ec\u5faa\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1\uff0c\u82e5\u4e0d\u7531E\u62b5\u6d88\u590d\u6742\u5ea6\uff0c\u6700\u540e\u7d2f\u52a0\u5f97\u603b\u590d\u6742\u5ea6\u4e3a5\uff0c\u663e\u7136\u4e0d\u6210\u7acb\u3002\n\ne.g.\n\u4ee5\u4e0b\u662f\u4e00\u4e2a16\u884c\u7684\u5faa\u73af\u3002\n```cpp\nF a 1 n\nF b 2 n\nF c 36 37\nF d n 10\nE\nE\nF c 19 n\nF d 21 22\nE\nE\nE\nE\nF a n n\nF b 1 n\nE\nE\n```\ntime_data\u6570\u7ec4\u4e3a{1,1,0,0,0,0,1,0,0,-1,-1,-1,0,1,-1,0}\u3002\n\n\u5728\u7b2c7\u4f4d(time_data[6])\u8ba1\u7b97\u51fa\u6700\u5927\u590d\u6742\u5ea6\u4e3a3.\n\n\u521d\u59cb\u5316num = 0\uff0c ans_num = 0\uff0c\u4ece\u5de6\u5411\u53f3\u5c06\u6570\u7ec4\u5185\u7684\u6570\u636e\u76f8\u52a0\uff0c\u4f7f\u7528num\u5b58\u50a8\uff0c\u82e5num > ans_num\uff0c\u4ee4ans_num = num\uff0c\u7531\u6b64\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7a0b\u5e8f\u7684\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n## 6.\u603b\u7ed3\n\n\u5df2\u77e5\u7684bug\uff1aread\u6062\u590d\u4e3atrue\u65f6\uff0c\u82e5\u5faa\u73af\u5d4c\u5957\u65b9\u5f0f\u4e0e5\u4e2d\u793a\u4f8b\u7b2c3-10\u884c\u76f8\u540c\uff0c\u53ef\u80fd\u5bfc\u81f4time_data\u6570\u636e\u6709\u8bef\u3002\n\n\u6709\u76f8\u5173\u95ee\u9898\u6216\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u8bc4\u8bba\u3002\n\n\u65b0\u4eba\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u8fd8\u671b\u591a\u5305\u6db5\uff0c\u4e0d\u80dc\u611f\u6fc0\u3002\n\n## 7.\u65e5\u5e38\u8868\u767d\u5357\u5c0f\u9e1f\n\n\u5357\u5c0f\u9e1f\u6700\u53ef\u7231\u4e86\uff5e\n\n![\u5357\u5c0f\u9e1f\u6700\u53ef\u7231\u4e86\uff5e](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1533622101316&di=c2b1c7325fdcb31c9167abf377e835d9&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F17%2F34%2F01%2F39w58PIC9KD_1024.jpg)",
        "postTime": 1533612058,
        "uid": 98793,
        "name": "Apollorion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u4e00\u5e74\uff0c\u53d8\u79c3\u4e86\u4e5f\u53d8\u5f3a\u4e86qwq\n\n\u611f\u89c9\u81ea\u5df1\u601d\u8def\u6bd4\u8f83\u6e05\u6670\u6240\u4ee5\u5206\u4eab\u4e00\u4e0b(???\n\n\u5199\u5927\u6a21\u62df\uff0c\u6211\u662f\u6bd4\u8f83\u559c\u6b22**\u591a\u5199\u51fd\u6570**\u7684\uff0c\u8fd9\u6837\u4e3b\u51fd\u6570\u4f1a\u7b80\u6d01\u6e05\u6670\n\n\u5728\u8fd9\u9053\u9898\u91cc\u9762\uff0c\u63d0\u53d6\u590d\u6742\u5ea6\u53ef\u4ee5\u5199\u4e2a\u51fd\u6570\u2193\n\n```\nchar s[13];\nint getfz()//\u8fd4\u56de\u9898\u76ee\u7ed9\u7684\u590d\u6742\u5ea6\n{\n    cin>>s;//\u628aO()\u4e00\u8d77\u8bfb\u8fdb\u6765\n    if(s[2]=='1')return 0;//\u5e38\u6570\u590d\u6742\u5ea6O(1)\n    int len=strlen(s);\n    if(len==6)return s[4]-'0';//O(n^w)\u957f\u5ea6\u4e3a6\uff0c\u6240\u4ee5w\u662f\u4e00\u4f4d\u6570\n    return (s[4]-'0')*10+(s[5]-'0');\n}\n```\n\u7136\u540e\u6700\u9ebb\u70e6\u7684 $F$ $i$ $x$ $y$ \u5224$x$ $y$\u5927\u5c0f\u4ec0\u4e48\u7684\u4e5f\u53ef\u4ee5\u5199\u4e2a\u51fd\u6570\u63d0\u53d6x\u548cy\u2193\n```\nint getx()//x\u548cy\u683c\u5f0f\u4e00\u6837\uff0c\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u51fd\u6570\n{\n    cin>>s;//\u5148\u8bfb\u8fdb\u6765\n    if(s[0]=='n')return 100;//\u628an\u5f53\u505a100\n    int len=strlen(s);\n    if(len==1)return (s[0]-'0');//\u957f\u5ea6\u4e3a1\uff0c\u6240\u4ee5\u662f\u4e00\u4f4d\u6570\n    return (s[0]-'0')*10+(s[1]-'0');\n}\n```\n\u628a$n$\u53d8\u6210\u4e00\u4e2a\u5e38\u6570\uff0c\u8fd9\u6837\u5bf9\u6bd4\u5927\u5c0f\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u5199\u4e00\u5806$if$\u4e86\u3002\n\n\u4e8e\u662f\u5224\u662f\u5426\u8fdb\u5165\u5faa\u73af\uff0c\u548c\u662f\u5426\u52a0\u590d\u6742\u5ea6\u5c31\u5f88\u7b80\u5355\u4e86\u2193\n```\nint x=getx(),y=getx();\nif(x>y){\u8fdb\u4e0d\u53bb};\nif(x<100&&y==100){\u590d\u6742\u5ea6\u591a\u5957\u4e00\u5c42};\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u5269\u4e00\u4e2a\u5927\u9ebb\u70e6\u6ca1\u6709\u89e3\u51b3\u4e86\uff1a\u5728 $E$ \u7684\u65f6\u5019\uff0c\u6709\u4e00\u5806\u4e1c\u897f\u8981\u590d\u539f\u3002\n\n\u8fd9\u91cc\u53ef\u4ee5\u7528\u6808\u7ef4\u62a4\u2193\uff08\u4ee5\u4e0b\u5c06\u8fdb\u4e0d\u53bb\u5faa\u73af\u79f0\u4e3a\u9501\u4f4f\uff09\n```\nchar stac[101];//\u5148\u653e\u4e2a\u5b57\u6bcd\u6808\uff0c\u5b58\u53d8\u91cf\u540d\nbool loc[101];//\u8bb0\u6808\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u6ca1\u6709\u9501\u5b9a\nbool add[101];//\u8bb0\u6808\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u6709\u6ca1\u6709\u52a0\u590d\u6742\u5ea6\n```\n\u8fd9\u6837 $E$ \u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\u2193\n```\nint tos,lock,now;//tos:\u6808\u9876 lock:\u9501\u4f4f\u7684\u5c42\u6570 now:\u5f53\u524d\u590d\u6742\u5ea6\nif(loc[tos]){lock--;loc[tos]=0;}\nif(add[tos]){now--;add[tos]=0;}\nused[stac[tos]]=0;\ntos--;\n```\n\u8fd9\u6837\u5c31\u53ea\u5269\u4e00\u4e9b\u8fb9\u89d2\u6d3b\u513f\u4e86\u3002\n\n\u770b\u4ee3\u7801\u53ed\u3002\n\n```\n/*\n\tqwerta \n\tP3952 \u65f6\u95f4\u590d\u6742\u5ea6 Accepted \n\t100\n\t\u4ee3\u7801 C++\uff0c1.32KB\n\t\u63d0\u4ea4\u65f6\u95f4 2018-11-07 15:01:23\n\t\u8017\u65f6/\u5185\u5b58 30ms, 812KB\n*/\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nchar s[13];\nint getfz()//\u8fd4\u56de\u7ed9\u5b9a\u7684\u590d\u6742\u5ea6\n{\n    cin>>s;\n    if(s[2]=='1')return 0;\n    int len=strlen(s);\n    if(len==6)return s[4]-'0';\n    return (s[4]-'0')*10+(s[5]-'0');\n}\nint getx()//\u8fd4\u56dex\u6216y\u7684\u503c\n{\n    cin>>s;\n    if(s[0]=='n')return 100;\n    int len=strlen(s);\n    if(len==1)return (s[0]-'0');\n    return (s[0]-'0')*10+(s[1]-'0');\n}\nbool used[233];//\u6807\u8bb0\u53d8\u91cf\u540d\u662f\u5426\u88ab\u7528\u8fc7\nchar stac[101];//\u53d8\u91cf\u540d\u6808\nbool loc[101];//\u662f\u5426\u9501\u4e0a\u4e86\nbool add[101];//\u662f\u5426\u52a0\u590d\u6742\u5ea6\u4e86\nint main()\n{\n    //freopen(\"a.in\",\"r\",stdin);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        memset(used,0,sizeof(sf));\n        memset(stac,0,sizeof(stac));\n        memset(loc,0,sizeof(loc));\n        memset(add,0,sizeof(add));\n        //\u5148\u90fd\u6e05\u4e2a\u96f6\n        int l;\n        cin>>l;\n        int fz=getfz();\n        int tos=0,lock=0;//tos:\u6808\u9876 lock:\u9501\u5b9a\u5c42\u6570\n        int mac=0,now=0;//mac:\u6700\u5927\u590d\u6742\u5ea6 now:\u5f53\u524d\u590d\u6742\u5ea6\n        int err=0,F=0;//err:\u9519\u8bef F:F\u6bd4E\u591a\u7684\u4e2a\u6570\n        while(l--)\n        {\n            char opt;\n            cin>>opt;\n            if(opt=='F')\n            {\n                F++;\n                //\u5904\u7406i\n                char i;\n                cin>>i;\n                if(used[i])err++;//\u53d8\u91cf\u540d\u91cd\u590d\n                used[i]=1;\n                stac[++tos]=i;\n                //\u5904\u7406x,y\n                int x=getx(),y=getx();\n                if(x>y){loc[tos]=1;lock++;}//\u8fdb\u4e0d\u53bb\uff0c\u4e0a\u9501\n                if(lock)continue;//\u6709\u9501\u5c31\u4e0d\u80fd\u52a0\u590d\u6742\u5ea6\n                if(l<100&&r==100){add[tos]=1;now++;}\n                mac=max(mac,now);\n            }\n            else\n            {\n                F--;\n                if(F<0)err++;//E\u6bd4F\u591a\uff0c\u8bed\u6cd5\u9519\u8bef\n                if(loc[tos]){lock--;loc[tos]=0;}//\u6709\u9501\u62c6\u9501\n                if(add[tos]){now--;add[tos]=0;}//\u52a0\u4e86\u51cf\u6389\n                used[stac[tos]]=0;//\u91ca\u653e\u53d8\u91cf\u540d\n                tos--;\n                if(tos<0)tos=0;//\u9632\u6b62\u8bbf\u95ee\u8d1f\u5750\u6807\n            }\n        }\n        if(F!=0)err++;//F\u548cE\u4e0d\u5339\u914d\uff0c\u8bed\u6cd5\u9519\u8bef\n        if(err){cout<<\"ERR\"<<endl;continue;}\n        if(mac==fz){cout<<\"Yes\"<<endl;}\n        else cout<<\"No\"<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1541639104,
        "uid": 48681,
        "name": "qwerta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u66f4\u52a0\u4f18\u96c5\u7684\u505a\u6cd5\n# \u5efa\u6811\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6761\u5faa\u73af\u8bed\u53e5\u770b\u4f5c\u4e00\u4e2a\u8282\u70b9\n\n\u90a3\u4e48\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u5d4c\u5957\u7684\u5faa\u73af\u5c31\u662f\u4ed6\u7684\u5b50\u8282\u70b9\n\n\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a\u6811\u5f62\u7684\u7ed3\u6784\n\n\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u4fdd\u5b58\u6bcf\u4e2a\u5faa\u73af\u7684\u4fe1\u606f\n\n\u5373\u5b83\u7684\u5faa\u73af\u53d8\u91cf\u540d\uff0c\u4ee5\u53ca\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u503c\n\n\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u8bb0\u5f55\u65f6\u95f4\u590d\u6742\u5ea6O\n\n\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\n\n\u5982\u679c\u9047\u5230\u7684\u8282\u70b9\u7684\u7ed3\u675f\u503c\u5927\u4e8e\u5f00\u59cb\u503c\n\n\u90a3\u610f\u5473\u7740\u5b83\u662f\u4e00\u4e2a\u65e0\u6548\u5faa\u73af\n\n\u76f4\u63a5\u8fd4\u56de\n\n\u5982\u679c\u7ed3\u675f\u503c\u548c\u5f00\u59cb\u503c\u90fd\u662f\u5e38\u6570\n\nO\u4e0d\u53d8\n\n\u5426\u5219O+1\n\n\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f\u6700\u5927\u7684O\n\n\u5173\u4e8eERR\u7684\u60c5\u51b5\n\n\u9996\u5148\uff0c\u884c\u6570\u4e3a\u5947\u6570\uff0c\u663e\u7136ERR\n\n\u5176\u6b21\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u5728\u4e00\u6761\u94fe\u4e2d\u9047\u5230\u4e86\u76f8\u540c\u7684\u5faa\u73af\u53d8\u91cf\u540d\n\n\u4e5f\u662fERR\n\n\u81f3\u4e8e\u5efa\u6811\n\n\u6211\u4eec\u7528\u6808\u6765\u6a21\u62df\u5373\u53ef\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <string>\n#include <algorithm>\nusing namespace std;\nconst int maxn=225,inf=1000000000;\nint t,n;\nint cnt=-1,head[maxn],to[maxn],nex[maxn];\nvoid add(int x,int y)\n{\n\tcnt++;\n\tto[cnt]=y;\n\tnex[cnt]=head[x];\n\thead[x]=cnt;\n}\nstruct node{\n\tstring op;\n\tchar ch;\n\tint l,r;\n\tnode()\n\t{\n\t\tl=r=0;\n\t}\n}a[maxn];\nstring O;\nint stk[maxn],tp;\nbool book[256],flag;\nint dfs(int u,int p)\n{\n\tif(flag==1)\n\t\treturn 0;\n\tint res=0;\n\tfor(int i=head[u];i;i=nex[i])\n\t{\n\t\tbool k=0;\n\t\tint v=to[i];\n\t\tif(a[v].l>a[v].r)\n\t\t{\n\t\t\tk=1;\n\t\t\tp++;\n\t\t}\n\t\tif(book[a[v].ch])\n\t\t{\n\t\t\tflag=1;\n\t\t\treturn 0;\n\t\t}\n\t\tbook[a[v].ch]=1;\n\t\tint tmp=dfs(v,p);\n\t\tif(!p)\n\t\t\tres=max(res,tmp);\n\t\tbook[a[v].ch]=0;\n\t\tif(k)\n\t\t\tp--;\n\t}\n\tif(u!=0&&a[u].l<a[u].r&&a[u].r==inf)\n\t\tres++;\n\treturn res;\n}\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tflag=0;\n\t\tmemset(book,0,sizeof(book));\n\t\ttp=0;\n\t\tmemset(stk,0,sizeof(stk));\n\t\tcnt=0;\n\t\tmemset(head,0,sizeof(head));\n\t\tmemset(nex,0,sizeof(nex));\n\t\tcin>>n>>O;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tstring op,st,en;\n\t\t\tchar ch;\n\t\t\tcin>>op;\n\t\t\tif(op==\"F\")\n\t\t\t{\n\t\t\t\ta[i].l=a[i].r=0;\n\t\t\t\tcin>>ch>>st>>en;\n\t\t\t\tif(st==\"n\")\n\t\t\t\t\ta[i].l=inf;\n\t\t\t\telse\n\t\t\t\t\tfor(int j=0;j<st.size();j++)\n\t\t\t\t\t\ta[i].l=a[i].l*10+st[j]-'0';\n\t\t\t\tif(en==\"n\")\n\t\t\t\t\ta[i].r=inf;\n\t\t\t\telse\n\t\t\t\t\tfor(int j=0;j<en.size();j++)\n\t\t\t\t\t\ta[i].r=a[i].r*10+en[j]-'0';\n\t\t\t\ta[i].ch=ch;\n\t\t\t\ta[i].op=op;\n\t\t\t}\n\t\t\telse\n\t\t\t\ta[i].op=op;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(a[i].op==\"F\")\n\t\t\t{\n\t\t\t\tadd(stk[tp],i);\n\t\t\t\tstk[++tp]=i;\n\t\t\t}\n\t\t\telse\n\t\t\t\ttp--;\n\t\t}\n\t\tif(tp!=0)\n\t\t{\n\t\t\tcout<<\"ERR\"<<endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint ans=dfs(0,0);\n\t\t\tint num=0;\n\t\t\tif(flag==1)\n\t\t\t{\n\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(O==\"O(1)\")\n\t\t\t\tnum=0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int i=0;i<O.size();i++)\n\t\t\t\t{\n\t\t\t\t\tif(isdigit(O[i]))\n\t\t\t\t\t\tnum=num*10+O[i]-'0';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(num==ans)\n\t\t\t\tcout<<\"Yes\"<<endl;\n\t\t\telse\n\t\t\t\tcout<<\"No\"<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566352950,
        "uid": 99643,
        "name": "\u9648\u5200\u4ed4",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "### \u8fd9\u662f\u4e00\u9053\u5927\u6a21\u62df\u9898\uff0c\u5f88\u660e\u663e\uff0c\u5bf9\u5427\uff1fqwq\n\n\u6211\u4eec\u77e5\u9053\uff0c\u8981\u5224\u65ad$E$\u4e0e$F$\u662f\u5426\u5339\u914d\uff0c\u6211\u4eec\u77e5\u9053\u5faa\u73af\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u6240\u4ee5$F$\u5f88\u53ef\u80fd\u4e0d\u80fd\u7acb\u523b\u4e0e$E$\u8fdb\u884c\u5339\u914d\uff0c\u8fd9\u6837\u4f1a\u5f88\u9ebb\u70e6\u7684\u3002\u65e2\u7136\u5982\u6b64\uff0c\u5f88\u5bb9\u6613\u5c31\u8054\u60f3\u5230**\u6808**\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u4e86\u3002\u56e0\u4e3a$STL$\u5e93\u6bd4\u8f83\u65b9\u4fbf\uff0c\u6240\u4ee5\u672c\u7247\u9898\u89e3\u6709\u4e9b\u5730\u65b9\u76f4\u63a5\u8fd0\u7528\u4e86$STL$\u5e93\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3aheap\u7684**\u6808**\uff1a$stcak<int>heap;$\uff08\u9700\u8981\u7528\u5230\"<stcak>\"\u8fd9\u4e2a\u5e93\uff09\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5728\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a:$map<string,bool>xx;$\n\uff08\u9700\u8981\"<map>\"\u5e93\uff09\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u5efa\u4e00\u4e2a\u4e0b\u6807\u7c7b\u578b\u4e3a$string$\uff0c\u5b58\u50a8\u5185\u5bb9\u7c7b\u578b\u4e3a$bool$\u7684\u6570\u7ec4\u3002\u8fd9\u4e2a\u6570\u7ec4\u6211\u4eec\u7528\u5b83\u6765\u6807\u8bb0**\u201d\u5f53\u524d\u53d8\u91cf\u540d\u201c**\u6709\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\u3002\n  \n\u8be6\u7ec6\u89e3\u91ca\u770b\u4ee3\u7801\uff1a\n~~~cpp\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <stack>\n#include <iostream>\nusing namespace std;\nstring m;\nstruct node{\n    string a,b,c;\n}t[1000005];\nint n,deep,ans,xxx;\nvoid run()//\u5f88\u660e\u663e\u8fd9\u662f\u4e3b\u8981\u90e8\u5206\u3002 \n{\n    int cnt=0;//\u5f80\u4e0b\u770b\uff0c\u540e\u9762\u6709\u3002 \n    bool ya=false,biaoji=false;//ya\u8868\u793a\u5f53\u524d\u5faa\u73af\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u3002\u53ef\u4ee5\u8fdb\u884c\u4e3afalse\uff0c\u4e0d\u80fd\u8fdb\u5165\u8be5\u5faa\u73af\u5219\u7528true\u8868\u793a\u3002 \n    stack<int>heap;//\u6808\u3002 \n    map<string,bool>xx;//\u7528\u6765\u6253\u6807\u8bb0\u7684\u6570\u7ec4\u3002 \n    char ch;int sum=0;//sum\u8868\u793a\u5f53\u524d\u6808\u91cc\u6709\u591a\u5c11\u5c42\u5faa\u73af\uff08\u8fd9\u4e9b\u5faa\u73af\u662f\u5d4c\u5957\u7684\uff09\u3002 \n    for(int i=1;i<=xxx;i++)\n    {\n        if(heap.empty()) {ya=false;cnt=0;}//\u8be5\uff08\u5d4c\u5957\u7684\uff09\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u9700\u8981\u66f4\u65b0\u53d8\u91cf\u3002 \n        cin>>ch;\n        if(ch=='F')\n        {\n            cin>>t[i].a;cin>>t[i].b;cin>>t[i].c;//\u8bfb\u5165\u53d8\u91cf\u540d\u548c\u5faa\u73af\u7684\u8fb9\u754c\u3002 \n            heap.push(i);sum++;//\u5165\u6808\u3002 \n            if(xx[t[i].a]==true) {biaoji=true;}//\u5982\u679c\u8be5\u53d8\u91cf\u540d\u5728\u524d\u9762\u4f7f\u7528\u8fc7\u4e14\u6ca1\u6709\u91ca\u653e\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u662f\u6709\u8bed\u6cd5\u9519\u8bef\u7684\uff0c\u6807\u8bb0\u4e00\u4e0b\u3002 \n            xx[t[i].a]=true;//\u5426\u5219\uff0c\u6807\u8bb0\u8be5\u53d8\u91cf\u540d\u73b0\u5728\u6b63\u5728\u4f7f\u7528\u3002 \n            if(t[i].b!=\"n\"&&t[i].c!=\"n\"&&!ya||(t[i].b==\"n\"&&t[i].c==\"n\"&&!ya)) cnt++;\n\t\t\t//\u5982\u679c\u5f53\u524d\u5faa\u73af\u662fO(1)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u4e14\u8be5\u5c42\u5faa\u73af\u53ef\u4ee5\u5faa\u73af\uff0ccnt++\uff0c\u56e0\u4e3aO(1)\u7684\u590d\u6742\u5ea6\u4e0d\u5f71\u54cd\u5f53\u524d\u8fd9\u4e2a\u5faa\u73af\uff0c\u4f46\u7531\u4e8esum\u4e5f\u4f1a\u589e\u52a0\uff0c\u6240\u4ee5\u66f4\u65b0\u4e00\u4e0bcnt\u3002cnt\u7684\u4f5c\u7528\u5728\u66f4\u65b0\u7b54\u6848\u65f6\u53ef\u4ee5\u4f53\u73b0\u3002 \n            if(t[i].b!=\"n\"&&t[i].c==\"n\"&&!ya){ans=max(sum-cnt,ans);}//\u6307\u6570\u7ea7\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65f6\uff0c\u5c31\u8981\u66f4\u65b0\u7b54\u6848\u4e86\u3002 \n            int aa=0,bb=0;//aa\u548cbb\u5c31\u662f\u5faa\u73af\u8fb9\u754c\uff0c\u5f53\u524d\u5faa\u73af\u662f\u4eceaa\u5230bb\u7684\u3002\u5c06\u5faa\u73af\u8fb9\u754c\u7531\u5b57\u7b26\u4e32\u578b\u8f6c\u4e3a\u6574\u578b\uff0c\u4fbf\u4e8e\u540e\u9762\u6bd4\u8f83\u5927\u5c0f\u3002 \n            string xi=t[i].b,xj=t[i].c;\n            for(int ii=0;ii<xi.size();ii++) aa=aa*10+(xi[ii]-'0');\n            for(int ii=0;ii<xj.size();ii++) bb=bb*10+(xj[ii]-'0');\n            if((t[i].b==\"n\"&&t[i].c!=\"n\")||(t[i].b!=\"n\"&&t[i].c!=\"n\"&&aa>bb))\n\t\t\t//\u5982\u679c\u5f53\u524d\u5faa\u73af\u4e0d\u80fd\u8fdb\u884c\uff0c\u90a3\u4e48\u5b83\u4e0b\u9762\u6240\u5d4c\u5957\u7684\u5faa\u73af\u4e5f\u65e0\u6cd5\u8fdb\u884c\uff0c\u6240\u4ee5\u6253\u4e00\u4e0b\u6807\u8bb0\u3002 \n            ya=true;\n        }\n        if(ch=='E')\n        if(!heap.empty())//\u5982\u679c\u53ef\u4ee5\u5339\u914d\uff0c\u5c31\u628a\u6808\u9876\u5143\u7d20\u5f39\u51fa\uff0c\u7136\u540e\u66f4\u65b0\u76f8\u5173\u53d8\u91cf\u3002 \n            {\n                xx[t[heap.top()].a]=false;\n                heap.pop(); \n                sum--;\n            }\n            else {\n                biaoji=true;//\u5982\u679c\u5f53\u524d\u8fd9\u4e2aE\u65e0\u6cd5\u5339\u914d\u5230F\uff0c\u8bf4\u660e\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u6807\u8bb0\u4e00\u4e0b\u3002 \n            }\n    }\n\tif(biaoji){cout<<\"ERR\"<<endl;return ;}//\u4e0a\u9762\u6709\u63d0\u5230\u7684\u3002 \n    if(xxx%2==1||!heap.empty()) {cout<<\"ERR\"<<endl;return ;}\n\t//\u5982\u679c\u6709\u5947\u6570\u884c\u7a0b\u5e8f\u884c\uff0c\u5f88\u660e\u663eE\u3001F\u65e0\u6cd5\u5339\u914d\u7684\u3002\u5982\u679c\u5f53\u524d\u8fd9\u6bb5\u201c\u7a0b\u5e8f\u201d\u7ed3\u675f\u540e\uff0c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8bf4\u660eF\u6bd4E\u591a\uff0c\u4e5f\u662f\u65e0\u6cd5\u5339\u914d\uff0c\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u3002 \n    if(ans==deep) cout<<\"Yes\"<<endl;//\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5c31\u6bd4\u8f83\u4e00\u4e0b\uff0c\u5224\u65ad\u662f\u5426\u6b63\u786e\u3002 \n    else {cout<<\"No\"<<endl;}\n    return ;\n}\nvoid read()//\u8bfb\u5165\u6570\u636e\u3002 \n{\n    ans=0;\n    int x,y,z,num;\n    string s;\n    scanf(\"%d\",&num); //\u8bfb\u5165\u6709\u591a\u5c11\u884c\u7a0b\u5e8f\u3002 \n    cin>>s;//\u8bfb\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u3002 \n    xxx=num;//\u5c06num\u8f6c\u79fb\u5230run\u51fd\u6570\u7528\u7684\u3002 \n    if(s[2]=='1'&&s[3]==')') deep=0;//\u5982\u679c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1)\uff0c\u90a3\u4e48\u5c31\u662fn\u76840\u6b21\u5e42\u3002 \n    else {\n        deep=0;int j=4;\n        while(s[j]!=')') {deep=deep*10+(s[j]-'0');j++;}//\u5426\u5219\u8bfb\u5165n\u7684\u51e0\u6b21\u5e42\u3002 \n    }\n    run();\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    read();\n    return 0;\n}\n~~~",
        "postTime": 1540646555,
        "uid": 65873,
        "name": "Special_zyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3952)\n\n\u5199\u7684\u6211\u4e00\u53e3\u8001\u8840\n\n\u4f60\u5f97\u5148\u60f3\u597d\n\n\u4ec0\u4e48\u65f6\u5019\u4f1a$\\text{ERR}$\n\n - \u53d8\u91cf\u540d\u51b2\u7a81\uff08\u90a3\u4e48\u9700\u8981\u7684\u662f\u4e00\u4e2a\u53d8\u91cf\u540d\u7684\u6876$used$\uff09\n - E\u591a\u4e86\u6216F\u591a\u4e86\uff08\u9700\u8981\u4e00\u4e2a\u8bb0\u5f55\u76ee\u524d\u5b58\u5728\u51e0\u91cd\u5faa\u73af\u7684\u53d8\u91cf$tot$\uff09\n\n\u7136\u540e\u4f60\u5f97\u77e5\u9053\u5f53\u524d\u7684\u5faa\u73af\u5230\u5e95\u6709\u6ca1\u6709\u7528\n\n\u5177\u4f53\u6765\u8bf4\u662f\u8fd9\u4e2a\u5faa\u73af\u7684\u5916\u9762\u662f\u5426\u6709\u7c7b\u4f3c\n\n$\\text{F i 100 1 \u6216 F i n 100}$\u7684\u60c5\u51b5\n\n\u90a3\u4e48\u9700\u8981\u4e00\u4e2a\u8bb0\u5f55\u5916\u9762\u4f9d\u7136\u6709\u51e0\u4e2a\u8fd9\u6837\u7684\u5faa\u73af\u7684\u53d8\u91cf$cannot$\n\n\u63a5\u7740\u4f60\u8981\u660e\u786e\u5f53\u524d\u662f\u5426\u5d4c\u5957$n$\u4ee5\u53ca\u5df2\u7ecf\u5d4c\u5957\u4e86\u51e0\u5c42$n$\n\n\u90a3\u4e48\u6211\u53c8\u8981\u5904\u7406$x,y$\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8bb0\u5f55\u5d4c\u5957\u5c42\u6570\u7684\u53d8\u91cf$cyclenum$\uff0c\u8bb0\u5f55\u7b54\u6848$maxnum$\n\n\u6700\u540e\u4f60$E$\u7684\u65f6\u5019\u6839\u636e\u5f53\u524d\u662f\u5426\u5728\u65e0\u7528\u5faa\u73af\u91cc\u9762($cannot$\u8fd8\u4e0d\u4e3a0)\u6216\u8005\u5f53\u524d\u7ed3\u675f\u7684\u5faa\u73af\u5230\u5e95\u6709\u6ca1\u6709\u5d4c\u5957\u51fa\u4e00\u4e2an\u6765\u51b3\u5b9a\u662f\u5426```--cyclenum;--cannot```\n\n\u68b3\u7406\u4e86\u4e00\u4e0b\u611f\u89c9\u8fd9\u4e2a\u6a21\u62df\u9898\u76ee\u5c31\u5341\u5206\u6e05\u6670\u6709\u6ca1\u6709\n\n\u4f46\u662f\u8fd8\u662f\u5343\u4e07\u8bb0\u4f4f\u4e00\u70b9\uff0c\u522b\u518d\u4e2d\u9014$break$\uff0c\u5426\u5219\u4f60\u8bfb\u4e0d\u5b8c\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 10010\nusing namespace std;\nchar s[maxn];\nstruct node{\n\tchar x;\n\tint time;\n}a[maxn];\nint used[maxn], n;\n\nint main(){\n\tint T;\n\tscanf(\"%d\", &T);\n\twhile (T--){\n\t\tint goal = 0, cyclenum = 0, iferror = 0, cannot = 0, maxtime = 0, tot = 0;\n\t\tmemset(used, 0, sizeof(used));\n\t\tscanf(\"%d\", &n), scanf(\"%s\", s + 1);\n\t\tif (s[3] == 'n')\n\t\t\tfor (int i = 5; i <= strlen(s + 1) - 1; ++i) goal = (goal << 1) + (goal << 3) + (s[i] ^ 48);\n\t\twhile (n--){\n\t\t\tscanf(\"%s\", s + 1);\n\t\t\tif (s[1] == 'E'){\n\t\t\t\tif (!tot) iferror = 1;\n\t\t\t\tused[a[tot].x] = 0;\n\t\t\t\tif (!a[tot].time) --cannot; else\n\t\t\t\tif (!cannot && a[tot].time == 2) --cyclenum;\n\t\t\t\t--tot;\n\t\t\t} else{\n\t\t\t\tscanf(\"%s\", s + 1);\n\t\t\t\tchar x = s[1];\n\t\t\t\tif (used[x]) iferror = 1;\n\t\t\t\tused[x] = 1;\n\t\t\t\t\n\t\t\t\tscanf(\"%s\", s + 1);\n\t\t\t\tint pos = 1, l = 0, r = 0, time;\n\t\t\t\tif (s[pos] == 'n') l = 1e4; else while (pos <= strlen(s + 1)) l = (l << 1) + (l << 3) + (s[pos++] ^ 48);\n\t\t\t\tscanf(\"%s\", s + 1);\n\t\t\t\tpos = 1;\n\t\t\t\tif (s[pos] == 'n') r = 1e4; else while (pos <= strlen(s + 1)) r = (r << 1) + (r << 3) + (s[pos++] ^ 48);\n\t\t\t\tif (r < l) time = 0; else\n\t\t\t\tif (r - l > 1e3) time = 2; else time = 1;\n\t\t\t\t\n\t\t\t\tif (!time) ++cannot; else\n\t\t\t\tif (time == 2 && !cannot) maxtime = max(maxtime, ++cyclenum);\n\t\t\t\ta[++tot] = (node){x, time};\n\t\t\t}\n\t\t}\n\t\tif (tot || iferror) puts(\"ERR\"); else\n\t\tif (maxtime == goal) puts(\"Yes\"); else puts(\"No\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573736736,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6a21\u62df\uff0c\u6309\u7167\u6808\uff0c\u62ec\u53f7\u5339\u914d\u3002\n\u65b9\u5f0f\u8fdb\u884c\n\u6a21\u62df\n\u7ed3\u6784\u7c7b\u4f3c\u4e00\u68f5\u6811\uff0c\u7531\u5b50\u8282\u70b9\uff08\u66f4\u68ee\u5c42\u5faa\u73af\uff09\u5411\u4e0a\u5f52\u5e76\u3002\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<stack>\n#include<cstdlib>\nusing namespace std;\nint t,n;\nstring pg[128];\ninline void check()\n{\n\tstack <int> st,ot,ct;\n\tstack <bool> bt;\n\tint tlm=0;\n\tbool viab=false;\n\tbool vis[1<<16];\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=2;i<pg[0].length();i++)\t\t\t//\u67e5\u770b\u9884\u8ba1\u590d\u6742\u5ea6 \n\t{\n\t\tif(pg[0][i]>='0'&&pg[0][i]<='9')\n\t\t{\n\t\t\ttlm*=10;\n\t\t\ttlm+=(pg[0][i]-'0');\n\t\t}\n\t\t\n\t\tif(pg[0][i]=='n')\n\t\t{\n\t\t\tviab=true;\t\t\t\t\t\t\t//\u662f\u5426\u542bn \n\t\t}\n\t}\n\tint cnt=0;\n\tbt.push(0);\n\tct.push(0);\n\tot.push(1);\n\tfor(int i=1;i<=n;i++)\t\t\t\t\t\t//\u904d\u5386\u8bed\u53e5 \n\t{\n\t\tint x=0,y=0;\n\t\tif(pg[i][0]=='F')\t\t\t\t\t\t//\u8fd9\u4e00\u53e5\u662f\u5faa\u73af \n\t\t{\n\t\t\tif(vis[(int)pg[i][2]])\t\t\t\t//\u8be5\u5c42\u5faa\u73af\u4e0d\u5408\u6cd5 \n\t\t\t{\n\t\t\t\tprintf(\"ERR\\n\");\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tvis[(int)pg[i][2]]=true;\t\t\t//\u6807\u8bb0\u53d8\u91cf \n\t\t\tst.push((int)pg[i][2]);\t\t\t\t//\u6807\u8bb0\u53d8\u91cf \n\t\t\tint j=4;\t\t\t\t\t\t\t\n\t\t\tfor(;pg[i][j]!=' ';j++)\t\t\t\t//\u5ba1\u67e5\u8d77\u59cbx \n\t\t\t{\n\t\t\t\tif(pg[i][j]=='n')\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tx*=10;\n\t\t\t\tx+=(pg[i][j]-'0');\n\t\t\t}\n\t\t\t\n\t\t\tif(!x&&pg[i][j+1]!='n')\t\t\t\t\t\t\t\t\t\t\t\t//\u7b2c\u4e00\u4e2a\u662fn \n\t\t\t{\n\t\t\t\tot.push(0);\t++cnt\t;\t\t\t\t\t\t\t\t\t\t\t\t//\u8fd9\u4e2a\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165. \n\t\t\t\tct.push(cnt);\n\t\t\t\tbt.push(true);\n//\t\t\t\tprintf(\"otop=%d,ctop=%d,btop=%d\\n\",ot.top(),ct.top(),bt.top());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(j=j+1;j<pg[i].length()&&pg[i][j]>='0'&&pg[i][j]<='9';j++)\t\t\t\t\t\t\t\t\t//\u90fd\u662f\u5e38\u6570 \n\t\t\t\t{\n\t\t\t\t\ty*=10;\n\t\t\t\t\ty+=(pg[i][j]-'0');\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\tif(x&&(pg[i][j]=='n'))\t\t\t\t\t\t\t\t\t\t\t\t\t//\u540e\u8005\u662fn \n\t\t\t\t{\t\n\t\t\t\t\tot.push(1);\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u53ef\u4ee5\u8fdb\u5165 \n\t\t\t\t\tbt.push(true);\n\t\t\t\t\tct.push(++cnt);\n//\t\t\t\t\tprintf(\"otop=%d,ctop=%d,btop=%d\\n\",ot.top(),ct.top(),bt.top());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if(y<x)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u65e0\u6cd5\u8fdb\u5165 \n\t\t\t\t{\t\n\t\t\t\t\tot.push(0);\n\t\t\t\t\tct.push(++cnt);\n\t\t\t\t\tbt.push(false);\n//\t\t\t\t\tprintf(\"otop=%d,ctop=%d,btop=%d\\n\",ot.top(),ct.top(),bt.top());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tot.push(1);\n\t\t\t\tbt.push(false);\tct.push(++cnt);\t\t\t\t\t\t\t\t\t//\u5e38\u6570\u7ea7 \n//\t\t\t\tprintf(\"otop=%d,ctop=%d,btop=%d\\n\",ot.top(),ct.top(),bt.top());\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\telse if(pg[i][0]=='E')\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5faa\u73af\u7ed3\u675f \n\t\t{\n\t\t\tcnt--;\t\n\t\t\tif(!st.size())\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u63a8\u51fa\u76d6\u5c42 \n\t\t\t{\n\t\t\t\tprintf(\"ERR\\n\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvis[st.top()]=false;\t\t\t\t\t\t\t\t\t\t\t\t//\u64a4\u9500\u6807\u8bb0 \n\t\t\tst.pop();\n\t\t}\n\t}\n\tif(st.size())\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u8bed\u6cd5\u9519\u8bef \n\t{\n\t\tprintf(\"ERR\\n\");\n\t\treturn ;\n\t}\n\tint nxt,now=0,cxt,cow;\n\tbool bxt,bow;\n\tstack<int> od,cd;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5206\u522b\u8868\u793a\u7cfb\u6570(\u5e42\u6b21),\u5faa\u73af\u6df1\u5ea6,\u548cn\u7684\u5b58\u5728 \n\tstack<bool> bd;\t\t\n\twhile((!now)&&ot.size())\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u8fd9\u5c42\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165. \n\t\t{\n\t\t\tnow=ot.top();\n\t\t\tot.pop();\n\t\t\tcow=ct.top();\n\t\t\tct.pop();\n\t\t\tbow=bt.top();\n\t\t\tbt.pop(); \n\t\t}\n\t\tod.push(now);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5df2\u64cd\u4f5c\u653e\u5165\u53e6\u5916\u4e00\u533a\u5206 \n\t\tcd.push(cow);\n\t\tbd.push(bow);\n\n\t\twhile(ot.size()&&od.size())\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u539f\u5217\u6709\u5faa\u73af \n\t\t{\n\t\t\t\n\t\t\tnxt=ot.top();\n\t\t\tot.pop();\n\t\t\tcxt=ct.top();\n\t\t\tct.pop();\n\t\t\tbxt=bt.top();\n\t\t\tbt.pop();\n\t\t\tnow=od.top();\n\t\t\tod.pop();\n\t\t\tcow=cd.top();\n\t\t\tcd.pop();\n\t\t\tbow=bd.top();\n\t\t\tbd.pop();\n//\t\t\tprintf(\"nxt=%d,cxt=%d,bxt=%d\\n\",nxt,cxt,bow);\n//\t\t\tprintf(\"now=%d\\tcow=%d\\tbow=%d\\tcxt=%d\\n\",now,cow,bow,cxt);\n\t\t\t\n\t\t\tif(cxt==cow)\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6df1\u5ea6\u76f8\u540c \n\t\t\t{\n\t\t\t\tif(!nxt)\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u4e00\u8fb9\u4e3a0 \n\t\t\t\t{\n\t\t\t\t\tod.push(now);\t\t\t\t\t\t\t\t\t\t\t\t//\u4e0d\u7528\u7ba1\u4ed6 \n\t\t\t\t\tcd.push(cow);\n\t\t\t\t\tbd.push(bow);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(bxt&&bow)\t\t\t\t\t\t\t\t\t\t\t\t\t//\u4e24\u8fb9\u90fd\u662fn\u6b21\u7ea7\u522b \n\t\t\t\t{\t\n\t\t\t\t\tnow=max(nxt,now);\t\t\t\t\t\t\t\t\t\t\t//\u53d6\u5f97\u6700\u5927 \n\t\t\t\t\tcd.push(cxt);\t\t\t\t\t\t\t\t\t\t\t\t//\u540c\u7ea7\u4e0d\u53d8 \n\t\t\t\t\tod.push(now);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tbd.push(1);\n\t\t\t\t\tcontinue; \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if(bxt||bow)\n\t\t\t\t{\n\t\t\t\t\tnow=bxt*nxt+bow*now;\t\t\t\t\t\t\t\t\t\t//\u4e00\u8fb9\u662f\u5e38\u6570\u7ea7\u522b \n\t\t\t\t\tcd.push(cxt);\t\t\t\t\t\t\t\t\t\t\t\t//\u53d6n\u7ea7\u522b \n\t\t\t\t\tod.push(now);\n\t\t\t\t\tbd.push(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tcd.push(cxt);\t\t\t\t\t\t\t\t\t\t\t\t//\u540c\u7ea7\u5e38\u6570\u7ea7 \n\t\t\t\t\tod.push(1);\n\t\t\t\t\tbd.push(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telse if(cxt==cow-1)\t\t\t\t\t\t\t\t\t\t\t\t\t//\u7ea7\u522b\u4e0d\u540c \n\t\t\t{\n\t\t\t\tif(!nxt)\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u4e0d\u5b58\u5728 \n\t\t\t\t{\n\t\t\t\t\tod.push(1);\t\t\t\t\t\t\t\t\t\t\t\t\t//\u90fd\u4e0d\u5b58\u5728 \n\t\t\t\t\tcd.push(cxt);\n\t\t\t\t\tbd.push(0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse if(cd.size()&&cd.top()==cow)\t\t\t\t\t\t\t\t\t\t\t\t\t//\u79ef\u538b\u7740\u5176\u4ed6\u5b50\u5faa\u73af \n\t\t\t\t{\t\n\t\t\t\t\tct.push(cxt);\n\t\t\t\t\tot.push(nxt);\n\t\t\t\t\tbt.push(bxt);\n\t\t\t\t\tot.push(now);\n\t\t\t\t\tct.push(cow);\n\t\t\t\t\tbt.push(bow);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse if(bxt&&bow)\n\t\t\t\t{\n\t\t\t\t\tnow=nxt+now;\n//\t\t\t\t\tprintf(\"now?=%d\",now);\n\t\t\t\t\tcd.push(cxt);\n\t\t\t\t\tod.push(now);\n\t\t\t\t\tbd.push(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if(bxt||bow)\n\t\t\t\t{\n\t\t\t\t\tnow=bxt*nxt+bow*now;\n\t\t\t\t\tcd.push(cxt);\n\t\t\t\t\tbd.push(1);\n\t\t\t\t\tod.push(now);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnow=1;\n\t\t\t\t\tcd.push(cxt);\n\t\t\t\t\tbd.push(0);\n\t\t\t\t\tod.push(now);\n\t\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t\telse\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(!nxt)\n\t\t\t\t{\n\t\t\t\t\tod.push(now);\n\t\t\t\t\tcd.push(cow);\n\t\t\t\t\tbd.push(bow);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcd.push(cow);\n\t\t\t\tod.push(now);\n\t\t\t\tbd.push(bow);\n\t\t\t\tcd.push(cxt);\n\t\t\t\tod.push(nxt);\n\t\t\t\tbd.push(bxt);\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\n\t\tnow=od.top();\n\t\tod.pop();\n\t\tcow=cd.top();\n\t\tcd.pop();\n\t\tbow=bd.top();\n\t\tbd.pop();\n\t\tif(!now) \n\t\t{\n\t\t\tnow=1;\n\t\t\tbow=0;\n\t\t}\n//\tprintf(\"tlm=%d,now=%d\\n\",tlm,now);\n\tif(bow==viab&&now==tlm)\n\t{\n\t\tprintf(\"Yes\\n\");\n\t\treturn;\n\t}\n\tprintf(\"No\\n\");\n\t\n}\nint main ()\n{\n//\tfreopen(\"complexity.in\",\"r\",stdin);\n//\tfreopen(\"complexity.out\",\"w\",stdout);\n\tscanf(\"%d\",&t);\n\twhile(t)\n\t{\n\t\tt--;\n\t\tscanf(\"%d \",&n);getline(cin,pg[0]);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tgetline(cin,pg[i]);\n\t\t}\n\t\tif(n&1)\n\t\t{\n\t\t\tprintf(\"ERR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tcheck();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571138031,
        "uid": 144581,
        "name": "zhukoov",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6839\u636e F \u548c E \u60f3\u5230\u7528\u6808\uff08stack\uff09\u6765\u6a21\u62df\u3002\n\n------------\n\n\u6bcf\u4e00\u6b21\u5982\u679c\u4f1a\u52a0\u4e00\u4e2a\u6307\u6570\u7ea7\u522b\uff0c\u5c31\u5411\u6808\u91cc\u9762\u538b\u5165\u4e2a 1\uff1b\n\n\u5982\u679c\u53ea\u662f\u5e38\u6570\u7ea7\u522b\u7684\uff0c\u5c31\u538b\u5165\u4e00\u4e2a 0\uff1b\n\n\u5982\u679c\u76f4\u63a5\u6765\u4e00\u4e2a\u65e0\u6cd5\u7ee7\u7eed\u7684\uff08\u5982for (i = 1; i < 1; i++)\uff09\uff0c\u5c31\u538b\u5165\u4e00\u4e2a -1\u3002\n\n\u6bcf\u4e00\u6b21\u90fd\u628a\u6808\u91cc\u9762\u7684\u6240\u6709 0 \u548c 1 \u90fd\u52a0\u8d77\u6765\uff0c\u5c31\u662fo(n^m)\u4e2d\u7684\u90a3\u4e2a\u6307\u6570m\uff08m==0\u5373\u4e3ao(1)\uff09\uff0c\u4f46\u662f\u9047\u5230\u4e86 -1 \u5c31\u628a\u8ba1\u6570\u5668\u5f52\u96f6\uff0c\u56e0\u4e3a -1 \u540e\u9762\u7684\u90fd\u4e0d\u53ef\u80fd\u8d70\u5230\u4e86\u3002\u56e0\u4e3a\u6808\u662ffirst in last out\uff0c\u6240\u4ee5\u6bcf\u6b21\u52a0top\u662f\u5012\u7740\u52a0\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u5982\u4e0a\u6a21\u62df\u7684\u65b9\u6cd5\u3002\n\n------------\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstring>\n#include <string>\n#include <stack>\n\nusing namespace std;\n\nstack <int> s;\nint main()\n{\n\tint t, L, f1, f2, fs, es, lx, ly, ls, rf[10005], i, j, k;\n\tchar co, c1, cf, cp, c2, cfe, x1, y1;\n\tstring ij, x, y;\n\tbool errj;\n\tcin >> t;\n\tfor (k = 1; k <= t; k++)//\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e \n\t{\n\t\tfs = 0;//\u521d\u59cb\u5316\u9636\u6bb5 \n\t\tes = 0;\n\t\tf2 = 0;\n\t\tmemset(rf, 0, sizeof(rf));\n        x = \"\";\n        y = \"\";\n\t\tij = \"\";\n\t\terrj = false;\n\t\twhile (!s.empty())\n\t\t    s.pop();\n\t\tcin >> L >> co >> c1 >> cf;//\u5f00\u59cb\u8f93\u5165 \n\t\tif (cf == '1')//\u987a\u4fbf\u8ba1\u7b97\u590d\u6742\u5ea6 \n\t\t    f1 = 0;\n\t\telse\n\t\t    cin >> cp >> f1;//\u8f93\u5165 \n\t\tcin >> c2;\n\t\tfor (i = 1; i <= L; i++)//\u6bcf\u7ec4\u6d4b\u8bd5\u6570\u636e\u4e2d\u7684\u7a0b\u5e8f\u7684L \n\t\t{\n\t\t\tcin >> cfe;//\u8f93\u5165 \n\t\t\tif (cfe == 'E')\n\t\t\t{\n\t\t\t\tes++;\n                if (!s.empty())\n\t\t\t\t    s.pop();\n                else\n                    errj = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfs++;\n\t\t\tls = s.size();\n\t\t\tcin >> ij[ls];\n\t\t\tfor (j = 0; j < ls; j++)//\u5224\u65ad\u53d8\u91cf\u662f\u5426\u6709\u91cd\u590d \n\t\t\t    if (ls != 0 && ij[j] == ij[ls])\n\t\t\t    {\n\t\t\t    \terrj = true;\n                    break;\n\t\t\t\t}\n\t\t\tcin >> x >> y;//\u6700\u540e\u8f93\u5165 \n\t\t\tlx = x.size();\n\t\t\tly = y.size();\n\t\t\tif (x[0] != 'n' && y[0] != 'n' && (lx > ly || lx == ly && x > y) || x[0] == 'n' && y[0] != 'n')\n\t\t\t    s.push(-1);\n\t\t\telse\n\t\t\t{\n\t\t\t    if (x[0] != 'n' && y[0] == 'n')\n\t\t\t        s.push(1);\n\t\t\t    else\n\t\t\t        s.push(0);\n\t\t\t}\n\t\t\tls = s.size();\n            rf[0] = 0;\n\t\t\tfor (j = 1; j <= ls; j++)\n\t\t\t{\n\t\t\t\trf[j] = s.top();\n\t\t\t\trf[0] += rf[j];\n\t\t\t\tif (rf[j] == -1)\n\t\t\t\t    rf[0] = 0;\n\t\t\t\ts.pop();\n\t\t\t}\n\t\t\tfor (j = ls; j > 0; j--)\n\t\t\t\ts.push(rf[j]);\n\t\t\tf2=max(f2, rf[0]);\n\t\t}\n\t\tif (errj || fs != es)\n\t\t    cout << \"ERR\";\n\t\telse\n\t\t{\n\t\t\tif (f1 == f2)\n\t\t\t    cout << \"Yes\";\n\t\t\telse\n\t\t\t    cout << \"No\";\n\t\t}\n\t\tif (k < t)//\u6362\u884c \n\t\t    cout << endl;\n\t}\n\treturn 0;\n}\n```\n\n------------\n\n\u6210\u529f\u89e3\u51fa\u6b64\u9898\u7684\u5173\u952e\uff0c\u5c31\u662f\u60f3\u5230\u7528\u6808\uff0c\u8fd9\u5176\u5b9e\u4e5f\u5f88\u597d\u60f3\u3002\u7136\u540e\uff0c\u518d\u7ec6\u5fc3\u7684\u6a21\u62df\u5c31\u884c\u4e86\u3002\u6ce8\u610fstack\u7a7a\u7684\u65f6\u5019\u8bbf\u95ee\n\ns.size() , s.top()\n\n\u4f1aRE\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\uff01",
        "postTime": 1567000158,
        "uid": 134002,
        "name": "\u6768\u622c\u5927\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011"
    },
    {
        "content": "\t\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bed\u6cd5\u9519\u8bef\u5e94\u8be5\u662f\u5f88\u597d\u5224\u65ad\u51fa\u6765\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5148\u628a\u8bed\u6cd5\u9519\u8bef\u7684\u6570\u636e\u7ed9\u6dd8\u6c70\u6389\uff0c\u518d\u8003\u8651\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\t\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\u5462\uff1f\n\t\u9898\u76ee\u4e2d\u8bf4\u4e86\uff0c\u2019F\u2019\u548c\u2019E\u2019\u4e0d\u5339\u914d\u662f\u8bed\u6cd5\u9519\u8bef\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u66fe\u7ecf\u7528\u6808\u5224\u65ad\u62ec\u53f7\u5339\u914d\u4e00\u6837\u6765\u5224\u65ad\u2019F\u2019\u548c\u2019E\u2019\u662f\u5426\u5339\u914d\u3002\n\t\u9898\u76ee\u4e2d\u8fd8\u8bf4\u4e86\uff0c\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d\u4e5f\u662f\u8bed\u6cd5\u9519\u8bef\u3002\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\t\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\tF x 1 n\n\tF y 1 n\n\tE\n\tF x 1 n\n\tE\n\tE\n\t\u663e\u7136\u7b2c\u4e00\u91cd\u5faa\u73af\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u2019x\u2019\uff0c\u7b2c\u4e8c\u91cd\u5faa\u73af\u662f\u4e24\u4e2a\u5e76\u5217\u7684\uff0c\u4e24\u4e2a\u53d8\u91cf\u5206\u522b\u662f\u2019x\u2019\u548c\u2019y\u2019\uff0c\u8fd9\u6837\uff0c\u56e0\u4e3a\u7b2c\u4e00\u91cd\u5faa\u73af\u548c\u7b2c\u4e8c\u91cd\u5faa\u73af\u90fd\u6709\u53d8\u91cf\u2019x\u2019\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u91cd\u590d\u53d8\u91cf\u7684\u8bed\u6cd5\u9519\u8bef\u3002\n\t\u90a3\u4e48\u8be5\u5982\u4f55\u89e3\u51b3\u5462\uff1f\n\t\u6211\u4eec\u53ea\u9700\u8981\u5728\u626b\u63cf\u7a0b\u5e8f\u65f6\uff0c\u8bb0\u5f55\u6bcf\u4e00\u5c42\u7684\u53d8\u91cf\uff0c\u5b58\u5165\u5b57\u7b26\u6570\u7ec4bianliang[]\u4e2d\uff0c\u5e76\u5728\u5e03\u5c14\u6570\u7ec4book[]\u4e2d\u6807\u8bb0\u8be5\u53d8\u91cf\u3002\u6bcf\u4e00\u6b21\u5faa\u73af\u9000\u51fa\u65f6\uff0c\u518d\u53d6\u6d88\u6807\u8bb0\uff08\u8be6\u7ec6\u5b9e\u73b0\u8fc7\u7a0b\u89c1\u4ee3\u7801\uff09\u3002\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u8f7b\u800c\u6613\u4e3e\u7684\u89e3\u51b3\u4e86\u3002\n\n\n\t\u7136\u540e\u5c31\u662f\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u4e86\u3002\n\t\u9996\u5148\uff0c\u6211\u4eec\u8981\u628a\u6570\u636e\u9884\u5904\u7406\u4e00\u4e0b\u3002\u628a\u7a0b\u5e8f\u7b80\u5355\u5316\uff0c\u53ea\u4fdd\u7559\u5176\u4e2d\u7684\u5173\u952e\u90e8\u5206\u3002\u7136\u540e\uff0c\u626b\u63cf\u7a0b\u5e8f\uff0c\u5982\u679c\u662f\u2019F\u2019,\u5c31\u628a\u5faa\u73af\u4e2d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51fa\u6765\uff0c\u5b58\u5165\u6570\u7ec4cengshu[]\u4e2d\uff0c\u5982\u679c\u9047\u5230\u2019E\u2019\uff0c\u5c31\u7b97\u4e00\u8fb9\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u4e0e\u5f53\u524d\u7684\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u505a\u6bd4\u8f83\u3002\n\t\u90a3\u4e48\u5230\u5e95\u600e\u6837\u8ba1\u7b97\u65f6\u95f4\u8d1f\u6742\u5ea6\u5462\uff1f\n\t\u6211\u4eec\u5728\u9884\u5904\u7406\u65f6\u53ef\u4ee5\u8fd9\u6837\uff1a\u628a\u65f6\u95f4\u590d\u6742\u8bfb\u4e3aO\uff08n\uff09\u7684\u8bbe\u7f6e\u4e3a1\uff0c\u628aO\uff081\uff09\u7684\u8bbe\u7f6e\u4e3a0\uff0c\u628a\u53d8\u91cf\u7684\u521d\u59cb\u503c\u5927\u4e8e\u6700\u7ec8\u503c\uff08\u540e\u9762\u79f0\u6b64\u4e3a\u8fdb\u4e0d\u53bb\uff09\u7684\u60c5\u51b5\u8bbe\u7f6e\u4e3a-1\u3002\n\t\u8fd9\u6837\uff0c\u6839\u636e\u521d\u4e8c\u6570\u5b66\u77e5\u8bc6:(a^m)*(a^n) = a^(m+n)\u5c31\u53ef\u4ee5\u5427cengshu[]\u4e2d\u7684\u6240\u6709\u5728\u7b2c\u4e00\u4e2a-1\u4e4b\u524d\u7684\u65f6\u95f4\u590d\u6742\u8bfb\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u5230\u5f53\u524d\u5c42\u6570\u7684\u65f6\u95f4\u590d\u6742\u8bfb\uff08\u4e5f\u8bb8\u4f60\u4f1a\u89c9\u5f97\u8fd9\u6837\u4f1a\u5f88\u6162\uff0c\u653e\u5fc3\uff0c\u4e0d\u4f1aTLE\uff09\u3002\n\t\u4e24\u4e2a\u95ee\u9898\u90fd\u89e3\u51b3\u4e86\uff0c\u4ee3\u7801\u5c31\u8fd9\u6837\u751f\u6210\u4e86\u3002\n```cpp\n\n\n//\u6700\u957f\u6700\u6613\u61c2\u4ee3\u7801\u6765\u88ad\n\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <sstream>\n\nusing namespace std;\n\nint T,L;   //T\u662f\u6570\u636e\u7ec4\u6570\uff0cL\u662f\u6bcf\u7ec4\u6570\u636e\u7684\u884c\u6570\u3002\nstring pri[3]={\"Yes\",\"No\",\"ERR\"};  //\u7ed3\u679c\u3002\u8fd9\u91cc\u5343\u4e07\u8981\u6ce8\u610f\u533a\u5206\u5199\uff0c\u4e4b\u524d\u6211\u56e0\u4e3a\u5927\u5c0f\u5199\u95ee\u9898\uff0c\u7206\u96f6\u4e86\u5f88\u591a\u6b21\u3002\nint p;                   //\u7528\u6765\u8f93\u51fa\u7ed3\u679c\u3002\nbool book[26];               //\u6807\u5fd7\u6570\u7ec4 \uff0c\u7528\u6765\u5224\u65ad\u53d8\u91cf\u662f\u5426\u91cd\u590d\u3002\nchar bianliang[107];           //\u8bb0\u5f55\u6bcf\u4e00\u5c42\u7684\u53d8\u91cf\u3002\nint cengshu[107],fzd,deepness,sjfzd;   //cengshu\u662f\u5230\u5f53\u524d\u5c42\u6570\u7684\u590d\u6742\u5ea6\uff0c\u521d\u59cbcenhshu[0]=0\uff0c\u5176\u4f59\u4e3a-1\u3002\n                                         //sjfzd\u7528\u6765\u6700\u540e\u4e0e\u6570\u636e\u4e2d\u7684\u590d\u6742\u5ea6\u6bd4\u8f83\uff0c\u5224\u65adYES\u548cNO\u3002\n                                         //deepness\u662f\u6700\u6df1\u7684\u5c42\u6570\uff0c\u7528\u6765\u8ba1\u7b97\u6574\u4e2a\u590d\u6742\u5ea6\u3002\nstring complexity,chengxu,s0;   //complexity\u662f\u8f93\u5165\u7684  O\uff08\u672a\u77e5\uff09\uff0cchengxu\u662f\u6574\u4e2a L \u884c\u4ee3\u7801\uff0cs0\u4f5c\u4e3a\u8bfb\u5165\u7684\u6bcf\u4e00\u884c\u4ee3\u7801\u3002\nint lchengxu;         //\u7a0b\u5e8f\u7684\u957f\u5ea6\u3002\n\n//\u51fd\u6570\u5b9a\u4e49\u533a\nint yufa(string s);       //\u5224\u65ad F \u548c E \u662f\u5426\u5339\u914d\u3002\nint panchong();   //\u5224\u65ad\u53d8\u91cf\u662f\u5426\u91cd\u590d\u3002\nvoid scan();      //\u8bfb\u5165\u6bcf\u7ec4\u6570\u636e\u3002\nvoid ychl();      //\u9884\u5904\u7406\u3002\nvoid yuhepan();    //\u5224\u65ad\u6574\u4e2a\u8bed\u6cd5\u662f\u5426\u6b63\u786e\u3002 \nvoid chushihua();    //\u6bcf\u4e00\u6b21\u8ba1\u7b97\u5b8c\u90fd\u8981\u521d\u59cb\u5316\u3002\nvoid sovprobm();    //\u89e3\u51b3\u95ee\u9898\u3002\n\nint main(){            //main\u51fd\u6570\u5728\u8fd9\u91cc\u3002\n    //freopen (\"timcmplx1.txt\",\"r\",stdin);   //\u6587\u4ef6\u8f93\u5165\uff0c\u53ef\u4ee5\u5ffd\u89c6\n    //freopen (\"timcmplx2.txt\",\"r\",stdin);   //\u6587\u4ef6\u8f93\u5165\uff0c\u53ef\u4ee5\u5ffd\u89c6\n    //freopen (\"timcmplx3.txt\",\"r\",stdin);   //\u6587\u4ef6\u8f93\u5165\uff0c\u53ef\u4ee5\u5ffd\u89c6\n    scanf (\"%d\",&T);\n    for (int t = 1;t <= T;t ++){\n        chushihua();\n        scan();\n        lchengxu = chengxu.size();\n        yuhepan();\n        if (p == 2) continue;\n        sovprobm();\n        cout << pri[p] << endl;\n    }\n    return 0;\n}\n\n//\u51fd\u6570\u5b9e\u73b0\u533a\nint yufa(string s){   //\u7c7b\u4f3c\u4e8e\u5224\u65ad\u62ec\u53f7\u5339\u914d\u3002\n    int ls = s.size(),cou = 0;\n    for (int i = 0;i < ls;i ++){\n        if (s[i] == 'F') cou ++;\n        if (s[i] == 'E') cou --;\n        if (cou < 0) return 2;    //\u8fd9\u91cc\u76842\u548c0\u90fd\u662f\u7ed9\u8fd4\u56de\u7ed9p\u7684\u503c\u3002\n    }\n    if (cou != 0) return 2;\n    return 0;\n}\nint panchong(){     \n    int d = 0;   //\u5f53\u524d\u7684\u5c42\u6570\u3002\n    for (int i = 0;i < lchengxu;i ++){\n        if (chengxu[i] == 'F') d ++;\n        else if (chengxu[i] == 'E'){\n            book[bianliang[d--]-'a'] = false;   //\u9000\u51fa\u5faa\u73af\uff0c\u53d6\u6d88\u53d8\u91cf\u7684\u6807\u8bb0\u3002\n        }\n        else if (chengxu[i] >= 'a' && chengxu[i] <= 'z' && chengxu[i] != 'n'){\n            if (book[chengxu[i] - 'a'] == true){\n                return 2;\n            }\n            book[chengxu[i] - 'a'] = true;          //\u6807\u8bb0\u53d8\u91cf\u3002\n            bianliang[d] = chengxu[i];\n        }\n    }\n    return 0;\n} \nvoid scan(){\n    scanf (\"%d\",&L);\n    cin >> complexity;\n    complexity = complexity.substr(2,complexity.size() - 3);         //\u53d6\u51fa\u62ec\u53f7\u5185\u7684\u590d\u6742\u5ea6\u3002\n    getchar();       //\u5982\u679c\u4e0d\u52a0 getchar()\uff0c\u4f1a\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6362\u884c\u7b26\uff0c\u539f\u56e0\u6682\u65f6\u4e0d\u660e\u3002\n    \t\t\t\t//\u76f4\u5230\u539f\u56e0\u7684\u795e\u7287\u53ef\u4ee5\u5728\u8bc4\u8bba\u91cc\u9762\u8bf4\u3002 \n    for (int u = 1;u <= L;u ++){\n        getline(cin,s0);\n        ychl();\n        chengxu += s0;\n    }\n    return;\n}\nvoid ychl(){\n    if (s0[0] == 'F'){\n        string g1 = s0.substr(4,s0.size() - 3);      //\u53d6\u51fa\u53d8\u91cf\u540d\u540e\u7684\u4e00\u90e8\u5206\u3002\n        string g2;        //\u50a8\u5b58\u5904\u7406\u5b8c\u540e\u7684\u5185\u5bb9\u3002\n        for (int u = 0;u < g1.size();u ++){\n            if (g1[u] == ' '){\n                string s1,s2;\n                s1 = g1.substr(0,u);\n                s2 = g1.substr(u+1,g1.size()-u-1);  //\u53d6\u51fa\u53d8\u91cf\u7684\u8303\u56f4\u3002\n                int shu1,shu2;\n                shu1 = atoi(s1.c_str());  //\u4e0d\u61c2\u5f97\u51fd\u6570\u53ef\u4ee5\u53bb\u67e5\u3002 \n                shu2 = atoi(s2.c_str());  //\u628a s1 \u548c s2 \u8f6c\u6210\u6570\uff0c\u5982\u679c\u662fn\uff0c\u5c31\u4f1a\u8f6c\u6210\u96f6\u3002 \n                if (shu1 == 0) shu1 = 1000;\n                if (shu2 == 0) shu2 = 1000;\n                int shu = shu2 - shu1;\n                if (shu < 0) g2 = \"-\";      //\u8fdb\u4e0d\u53bb\u662f'-'\u3002\n                else if (shu <= 98 && shu >= 0) g2 =  \"0\";  //O(1)\u662f0\u3002\n                else if (shu >= 500) g2 = \"1\";   //O(n)\u662f1\u3002\n                s0 = s0.replace(4,g1.size(),g2);   //\u628a \"F \u53d8\u91cf shu1 shu2\" \u7684\u5f62\u5f0f  \u8f6c\u6362\u6210 \"F \u53d8\u91cf \u65f6\u95f4\u590d\u6742\u5ea6\" \u7684\u5f62\u5f0f\u3002\n            }\n        }\n    }\n    return;\n}\nvoid yuhepan(){   //\u4e0d\u9700\u8981\u591a\u89e3\u91ca\u4e86 \u3002 \n    p = yufa(chengxu);\n    if (p == 2){\n        cout << pri[p] << endl;\n        return;\n    }\n    p = panchong();\n    if (p == 2){\n        cout << pri[p] << endl;\n        return;\n    }\n    return;\n}\nvoid chushihua(){        //\u521d\u59cb\u5316\u771f\u7684\u5f88\u91cd\u8981\uff0c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u4f60\u4f1a\u8f7b\u800c\u6613\u4e3e\u7684\u7206\u96f6\u3002 \n    fill (cengshu,cengshu+107,-1);\n    cengshu[0] = 0; \n    fill (book,book+26,false);\n    chengxu = \"\";\n    deepness = 0;\n    sjfzd = 0;\n    fzd = 0;\n}\nvoid sovprobm(){\n    int deep=0;             //\u5f53\u524d\u7684\u5c42\u6570\u3002\n    string r;\n    for (int i = 0;i < lchengxu;i ++){\n        if (chengxu[i] == 'F'){\n            deep ++;\n            deepness = max(deep,deepness);\n        }\n        else if (chengxu[i] == 'E'){     //\u6bcf\u6b21\u9000\u51fa\u5faa\u73af\u5c31\u8ba1\u7b97\u4e00\u6b21\u65f6\u95f4\u590d\u6742\u8bfb\u3002 \n            for (int j = 1;j <= deep+1;j ++){\n                if (cengshu[j] == -1){\n                    break;\n                }\n                fzd += cengshu[j];\n            }\n            sjfzd = max(sjfzd,fzd);\n            cengshu[deep--] = -1;\n            fzd = 0;\n        }\n        else if (chengxu[i] == '-'){\n            cengshu[deep] = -1;\n        }\n        else if (chengxu[i] == '0' || chengxu[i] == '1'){\n            cengshu[deep] = chengxu[i]-'0';\n        }\n    }\n    stringstream ss;    //\u6570\u8f6c\u5b57\u7b26\u4e32 \u3002 \n    string str;\n    ss << sjfzd;\n    ss >> str;\n    if (sjfzd == -1 || sjfzd == 0){    //\u5e94\u8be5\u90fd\u80fd\u770b\u61c2\u5427\uff1f \n        r = \"1\";\n    }\n    else r = \"n^\" + str;\n    if (r == complexity) p = 0;\n    else p = 1;\n    return;\n}\n```\n\n",
        "postTime": 1553430251,
        "uid": 126394,
        "name": "Luviikun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "## \u5927\u6982\u5206\u6790\u4e00\u4e0b\u672c\u9898\u306e\u505a\u6cd5      \n\u9996\u5148\uff0c\u4e00\u8fb9\u5224\u7f16\u8bd1\u4e00\u8fb9\u7b97\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5148\u8003\u8651\u5224\u7f16\u8bd1        \n### \u7f16\u8bd1\u9519\u8bef\u7684\u4e24\u4e2a\u5b9a\u4e49\uff1a\n\u2460F\uff0cE\u4e0d\u5339\u914d\uff0c\u90a3\u4e48\u5148\u7edf\u8ba1\u4e2a\u6570\uff0c\u4e2a\u6570\u4e0d\u540c\u76f4\u63a5\u9000\u3002       \n\u5426\u5219\u5c31\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6bcf\u6b21\u78b0\u5230F\u5c31\u538b\u6808\uff0c\u78b0\u5230E\u5c31\u5f39\u6808\u9876\uff0c\u540c\u65f6\u628a\u6808\u9876F\u5bf9\u5e94\u7684\u4f4d\u7f6e\u548c\u5f53\u524dE\u7684\u4f4d\u7f6e\u5339\u914d\u4e00\u4e0b\u3002      \n\u5982\u679c\u5f39\u4e0d\u51fa\uff0c\u8bf4\u660eE\u591a\u4f59\uff0c\u62a5\u9519\uff1b\u5982\u679c\u4e0d\u62a5\u9519\uff0c\u6700\u540e\u6808\u4e00\u5b9a\u4e3a\u7a7a\uff08**\u601d\u8003\u4e00\u4e0b**\uff09    \n\u2461\u91cd\u540d\uff0c\u914d\u5408\u5224FE\u7684\u90a3\u4e2a\u6808\uff0c\u6bcf\u6b21\u538b\u6808\u7684\u65f6\u5019\u6807\u8bb0\u5f53\u524d\u8fd9\u4e2a\u53d8\u91cf\u540d\uff0c\u5982\u679c\u5f53\u524d\u8981\u538b\u8fdb\u6808\u7684\u53d8\u91cf\u540d\u5df2\u7ecf\u88ab\u6807\u8bb0\u8fc7\uff0c\u76f4\u63a5\u62a5\u9519\uff1b\u51fa\u6808\u6e05\u695a\u6807\u8bb0                  \n\u4e8e\u662f\u7f16\u8bd1\u9519\u8bef\u5c31\u5224\u5b8c\u4e86\uff0c\u4e0b\u9762\u5f00\u59cb\u8bb2\u89e3\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\u8ba1\u7b97                  \n### \u7a0b\u5e8f\u7684\u7ed3\u6784\u5927\u6982\u5982\u4e0b         \nF      \n\u2026\u2026     \nE         \n\u6216\u8005\u662f          \nF      \n\u2026\u2026      \nE      \nF      \n\u2026\u2026       \nE        \n\u2026\u2026       \nF      \n\u2026\u2026      \nE         \n**\u4e24\u4e2a\u60c5\u51b5\uff1a\u6574\u4e2a\u7a0b\u5e8f\u88ab\u4e00\u7ec4FE\u5305\u8d77\u6765\uff0c\u6216\u8005\u7531\u591a\u7ec4FE\u9996\u5c3e\u76f8\u63a5\u7ec4\u6210**         \n\u5bf9\u4e8e\u88abFE\u5305\u7684\u7a0b\u5e8f\uff0cO(1)\u7b97\u51fa\u6700\u5916\u5c42FE\u7684\u590d\u6742\u5ea6\uff0c\u5982\u679c\u521d\u503c\u5927\u4e8e\u7ec8\u503c\u76f4\u63a5\u8fd4\u56deO(1)\uff0c\u5982\u679c\u4e24\u5934\u90fd\u662f\u5e38\u6570\u6216\u90fd\u662fn\uff0c\u4e5f\u8fd4\u56deO(1)\uff0c\u5426\u5219\u8fd4\u56deO(n)            \n\u63a5\u4e0b\u6765\u628a\u8fd9\u5bf9FE\u53bb\u6389\uff0c\u7b97\u53bb\u6389\u4ee5\u540e\u7684\u7a0b\u5e8f\u590d\u6742\u5ea6\uff0c\u518d\u52a0\u4e0a\u521a\u521a\u7b97\u51fa\u6765\u7684\u6700\u5916\u5c42\u590d\u6742\u5ea6 \n\u5bf9\u4e8e\u591a\u7ec4FE\uff0c\u5404\u4e2a\u51fb\u7834\u53d6\u6700\u5927\u503c                  \n**\u4f46\u662f\u76ee\u524d\u6765\u8bf4\u9898\u89e3\u91cc\u6ca1\u6709\u4f7f\u7528\u9012\u5f52\u7684\u7a0b\u5e8f\uff0c\u4f7f\u7528\u9012\u5f52\u4ee5\u540e\u601d\u8def\u4f1a\u5f88\u6e05\u6670\uff0c\u800c\u4e14\u8fd9\u9898\u6ca1\u6709\u7206\u6808\u98ce\u9669**                 \n\u5b9a\u4e49```int pd(i)```\uff0c\u5224\u7b2ci\u884c\u7684F\u590d\u6742\u5ea6\uff0c\u8fd4\u56de0\u4ee3\u8868O(1)\uff0c\u8fd4\u56de1\u4ee3\u8868O(n)    \n\u8fd9\u4e2a\u5f88\u597d\u5b9e\u73b0      \n```int solve(l,r)```\uff0c\u5224\u4ece\u7b2cl\u5230\u7b2cr\u884c\u7684\u590d\u6742\u5ea6\uff0c\u8fd4\u56dek\u4ee3\u8868O(n^k)     \n\u5148\u770b\u8fb9\u754c\uff1a\u957f\u5ea6\u53ea\u67092\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u7684```pd(l)```           \n\u7136\u540e\u5206\u7c7b\u8ba8\u8bba        \n**\u4e00\u3001\u88ab\u4e00\u7ec4FE\u5305\u8d77\u6765\uff0c\u5148\u770b\u8fd9\u4e2a\u5faa\u73af\u7684\u521d\u503c\u662f\u5426\u5927\u4e8e\u7ec8\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de0**     \n\u5426\u5219\uff0c```ret=solve(l+1,r-1)+pd(l)```\uff0c\u5373\u5185\u90e8\u590d\u6742\u5ea6\u52a0\u81ea\u8eab\u590d\u6742\u5ea6        \n**\u4e8c\u3001\u591a\u7ec4FE\uff0c\u53d6\u6bcf\u7ec4FE\u7684\u6700\u5927\u503c**            \n```ret=max(solve(li,ri))```              \n\n\u4e0a\u4ee3\u7801\n\n------------\n```cpp\n#include<bits/stdc++.h>\n#define maxn (200+5)\nusing namespace std;\nint T,L;\nint op[maxn],x[maxn],y[maxn],p[maxn],vis[maxn];\nchar val[maxn];\n//op F=1\uff0cE=0\n//x,y \u521d\u503c\u4e0e\u7ec8\u503c\uff0cn=1001\n//p \u7b2ci\u884c\u7684F\u6240\u5bf9\u5e94\u7684E\u7684\u4f4d\u7f6e\n//vis \u5224\u7f16\u8bd1\u7684\u65f6\u5019\u6807\u8bb0\u6570\u7ec4\n//val \u7b2ci\u884cF\u5bf9\u5e94\u7684\u53d8\u91cf\u540d\nstack<int> s;\n//\u5224\u7f16\u8bd1\u7684\u6808\n\nint pd(int i)\n{\n    if (y[i]-x[i]>=100) return 1; //\u5dee\u5927\u4e8e\u4e00\u767e\uff0c\u5373x\u4e3a\u5e38\u6570\uff0cy=n\n    else return 0;\n}\n\nint solve(int l,int r)\n{\n    int ret=0;\n    if (l+1==r) return pd(l); //\u53ea\u6709\u4e24\u884c\uff0c\u76f4\u63a5\u8fd4\u56de\u8fd9\u884c\u5faa\u73af\u7684\u590d\u6742\u5ea6\n    int L=l,R=p[l]; //\u53d6\u51fa\u7b2c\u4e00\u7ec4\u5faa\u73af\n    if (R==r) //\u5982\u679c\u53ea\u6709\u4e00\u7ec4\u5373FE\u5305\u6574\u4e2a\u5faa\u73af\n        if (x[l]<=y[l]) return solve(l+1,r-1)+pd(l); //\u5982\u679c\u5916\u5c42\u4f1a\u6267\u884c\n        else return 0; //\u4e0d\u4f1a\u6267\u884c\u76f4\u63a5return\n    while (L<=r) //\u904d\u5386\u6bcf\u4e00\u7ec4FE\n    {\n        ret=max(ret,solve(L,R)); //\u53d6\u4e00\u4e2a\u8f83\u5927\u503c\n        L=R+1; R=p[L]; //\u53d6\u4e0b\u4e00\u7ec4\n    }\n    return ret;\n}\n\nint main()\n{\n    cin >> T;\n    while (T--)\n    {\n        string s1;\n        cin >> L >> s1; //\u957f\u5ea6\u548c\u67d0\u4eba\u7b97\u7684\n        int f=0,e=0,tar; //FE\u4e2a\u6570\uff0ctar\u8868\u793a\u67d0\u4eba\u7b97\u7684\u590d\u6742\u5ea6\u6307\u6570\n        s1.erase(0,2); s1.erase(s1.length()-1,1); //\u53bb\u6389O()\n        if (s1[0]=='1') tar=0; //O(1)\n        else if (s1.length()==3) tar=s1[2]-48; //\u6307\u6570\u4e3a\u4e00\u4f4d\u6570\n        else if (s1.length()==4) tar=(s1[2]-48)*10+s1[3]-48; //\u4e24\u4f4d\u6570\n        for (int i=1;i<=L;++i)\n        {\n            char ch;\n            cin >> ch; //\u5224\u662fF\u8fd8\u662fE\n            if (ch=='E') op[i]=0,e++;\n            else\n            {\n                op[i]=1;\n                f++;\n                string X,Y;\n                cin >> val[i] >> X >> Y; //\u53d8\u91cf\u540d\uff0c\u521d\u503c\u7ec8\u503c\n                if (X[0]=='n') x[i]=1001; //\u5982\u679c\u662fn\u8d4b\u4e3a1001\n                else if (X.length()==2) x[i]=(X[0]-48)*10+X[1]-48;\n                else x[i]=X[0]-48;\n                if (Y[0]=='n') y[i]=1001;\n                else if (Y.length()==2) y[i]=(Y[0]-48)*10+Y[1]-48;\n                else y[i]=Y[0]-48;\n            }\n        }\n        if (f!=e) //\u6570\u91cf\u4e0d\u7edf\u4e00\n        {\n            puts(\"ERR\");\n            continue;\n        }\n        int Err=0;\n        while (!s.empty()) s.pop(); //\u6e05\u7a7a\u6808\uff0c\u56e0\u4e3a\u4e0a\u6b21\u53ef\u80fd\u6ca1\u505a\u5b8c\u5c31break\n        memset(vis,0,sizeof(vis)); //\u6e05\u7a7a\u6807\u8bb0\uff0c\u540c\u7406\n        for (int i=1;i<=L;++i)\n            if (op[i])\n            {\n                if (vis[val[i]]) //\u53d8\u91cf\u91cd\u540d\n                {\n                    Err=1;\n                    break;\n                }\n                s.push(i); //\u538b\u6808\n                vis[val[i]]=1; //\u6253\u6807\u8bb0\n            }\n            else\n            {\n                if (s.empty()) //\u6808\u7a7a\u4e0d\u5339\u914d\n                {\n                    Err=1;\n                    break;\n                }\n                int l=s.top(); s.pop(); //\u5f39\u6389\n                vis[val[l]]=0; //\u6e05\u6807\u8bb0\n                p[l]=i; //\u5339\u914d\n            }\n        if (Err) //\u663e\u793a\u7f16\u8bd1\u9519\u8bef\n        {\n            puts(\"ERR\");\n            continue;\n        }\n        int ans=solve(1,L); //\u9012\u5f52\u8fc7\u7a0b\n        if (ans==tar) puts(\"Yes\");\n        else puts(\"No\");\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1546161357,
        "uid": 50818,
        "name": "\u66e6\u884c\u591c\u843d",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\n###  CCF\u5e74\u5ea6\u5de8\u4f5c\u2014\u2014EER\u7684\u6e38\u620f\n(\u4e3b\u8981\u8c08\u8c08\u672c\u849f\u84bb\u505a\u9898\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u2014\u2014\u5bf9ERR\u7684\u5904\u7406)\n\n\u5927\u578b\u6a21\u62df\u6c34\u9898\n\n\u5929\u9053\u597d\u8f6e\u56de\uff0c\u770b\u8c01\u9976\u8fc7\u8c01\uff01\n\n\u4e00\u5927\u6ce2\u5b57\u7b26\u4e32\u8bfb\u5165+\u5904\u7406\uff0c\u8fd8\u670930s\u5230\u8fbe\u6218\u573a\n\n\n------------\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\n\n\u5982\u679c\u9047\u5230ERR\u7684\u8bdd\n\n\u540e\u9762\u5c31\u4e0d\u7528\u5904\u7406\u4e86\n\n\u76f4\u63a5return\n\n**BUT**\n\n\u8fd9\u53ef\u662f\u5b57\u7b26\u4e32\u554a\n\n\u5c11\u8bfb\u4e00\u4e2a\u56de\u8f66\u90fd\u4f1a\u70b8\u7684\u5b57\u7b26\u4e32\u554a \n\n**SO**\n\n\u4e00\u9996\u300a\u51c9\u51c9\u300b\u9001\u7ed917\u5e74\u7684\u5b66\u957f\u5b66\u59d0\u4eec\uff08\u5f53\u7136\uff0c\u8fd8\u6709\u6211\u5bc4\u51e0\uff09\n\n\u9047\u5230ERR\u65f6\u8981\u5904\u7406\u7684\u4e24\u5757\u5185\u5bb9\uff1a\n\n**\uff081\uff09**\u6b64\u8f6e\u5faa\u73af\u64cd\u4f5c\u91cc\uff0c\u5269\u4e0b\u7684\u8bfb\u5165\n\n\t\u4f46\uff0c\u4e0d\u8981\u4ee5\u4e3a\u628a\u6240\u6709F\u548cE\u90fd\u8bfb\u5b8c\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\n    \n\t\u2014\u2014\u5982\u679c\u6700\u540e\u4e00\u884c\u662fF\u7684\u8bdd\u3010\u6cea\u76ee\u3011\n    \n\t\t\u4e00\u5b9a\u8981\u628aF\u540e\u9762\u7684\uff0c\u4e5f\u90fd\u8bfb\u5165\uff08\u76f4\u5230\u56de\u8f66\uff09\n\n**\uff082\uff09**s\u6808&vh\u6570\u7ec4\u7684\u6e05\u7a7a\u95ee\u9898\n\n\u6ca1\u6709\u4e86\u6700\u540e\u7684\n>```cpp\n>\twhile(!s.empty()) \n>\t\t\ts.pop();\n>```\n\t\t\n\u6211\u771f\u662f\u51c9\u7684\u5f7b\u5e95\u2026\u2026\n\n**SO**\uff0c\u6bcf\u6b21\u9700\u8981\u5728\u4e3b\u7a0b\u5e8f\u518d\u6e05\u4e00\u904d\n\n#### \u53c8\u53ca\u2014\u2014\u552f\u4e00\u6709\u4ef7\u503c\uff08\u5e76\u4e0d\uff09\u7684\u505a\u9898\u65b9\u6cd5\uff08\uff1f\u53ef\u80fd\u53ea\u7b97\u5c0f\u6280\u5de7\uff09\uff1a\n\u672c\u9898\u591a\u6b21\u4f7f\u7528\u5230ch=getchar();\n\n\u5728\u8c03\u8bd5\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5f88\u5bb9\u6613\u5fd8\u8bb0\u6bcf\u4e2ach\u5206\u522b\u662f\u7528\u6765\u8bfb\u5165\u4ec0\u4e48\u7684\n\nSO\uff0c\u53ef\u4ee5\u6807\u6ce8\u4e00\u4e0b\u6bcf\u4e2ach\u7684\u7528\u9014\uff08\u4f60\u7684\u7a0b\u5e8f\uff0c\u4f1a\u6e05\u6670\u767e\u500d\u3010\u5c0f\u578b\u4f20\u9500\u73b0\u573a\u3011\uff09\n\n\n\nFIN.\uff08\u5b8c\u7ed3\u6492\u82b1\uff01\uff09 \n#### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nint t,n,w;\nchar ch;\nint readp(){\n\tint sum=0;\n\twhile(ch>='0'&&ch<='9')\n\t\tsum=sum*10+ch-'0',ch=getchar();\n\treturn sum;\n}//\u8bfb\u5165\u6570\u5b57\nint cnt,ans,vh[26];//vh[ch]=1\uff1a\u4e34\u65f6\u53d8\u91cfch\uff0c\u6b63\u5728\u4f7f\u7528\uff1bcnt\uff1a\u5f53\u524d\u6709\u51e0\u7ef4\uff1bans\uff1acnt\u7684\u6700\u5927\u503c\u3002\nstack<pair<int,int> > s;//\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u6709\u51e0\u4e2aF\u2014\u2014\u5206\u522b\u5bf9\u5e94\u4ec0\u4e48\u5c40\u90e8\u53d8\u91cf\nvoid work(){\n\tcnt=0;ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tch=getchar();//E/F\n\t\tif(ch=='E'){\n\t\t\tif(s.empty()){//\u4e00\u5b9a\u8981\u8bb0\u5f97\u628a\u5269\u4e0b\u7684\u6570\u636e\u8bfb\u5165\u2014\u2014\u867d\u7136\u5b83\u4eec\u4ec0\u4e48\u7528\u90fd\u6ca1\u6709\uff08\u6709\u4e00\u79cd\u7528\u5904\u53ebWA\uff09\n\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\t\tint id=i;\n\t\t\t\twhile(id<n){\n\t\t\t\t\tch=getchar();\n\t\t\t\t\tif(ch=='E'||ch=='F')\n\t\t\t\t\t\tid++;\n\t\t\t\t}//cout<<ch<<endl;\n\t\t\t\tif(ch=='E')\n\t\t\t\t\tch=getchar();//\"\\n\"\n\t\t\t\telse//\u6700\u540e\u4e00\u4e2a\u5982\u679c\u662fF\uff0c\u4f1a\u66f4\u9ebb\u70e6\u4e00\u4e9b\n\t\t\t\t\twhile(ch!='\\n')\n\t\t\t\t\t\tch=getchar();\n\t\t\t\t//cout<<ch<<endl;\n\t\t\t\treturn ;\n\t\t\t}vh[s.top().first]=0;//\u6e05\u9664\u6807\u8bb0\n\t\t\tif(s.top().second==1)//\u51cf\u53bb\u4e00\u7ef4\n\t\t\t\tcnt--;//w--\n\t\t\ts.pop();\n\t\t\tch=getchar();//\"\\n\"\n\t\t\t//cout<<ch<<endl;\n\t\t}else{\n\t\t\tch=getchar();//\" \"\n\t\t\t//cout<<ch<<endl;\n\t\t\tchar c=getchar();//i\n\t\t\t//cout<<c<<endl<<vh[c-'a'];\n\t\t\tif(vh[c-'a']){//\u5f53\u524d\u53d8\u91cf\uff0c\u5df2\u88ab\u4f7f\u7528\u8fc7\n\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\t\tint id=i;\n                //\u5904\u7406\u540c\u4e0a\n\t\t\t\twhile(id<n){\n\t\t\t\t\tch=getchar();\n\t\t\t\t\tif(ch=='E'||ch=='F')\n\t\t\t\t\t\tid++;\n\t\t\t\t}//cout<<ch<<endl;\n\t\t\t\tif(ch=='E')\n\t\t\t\t\tch=getchar();//\"\\n\"\n\t\t\t\telse\n\t\t\t\t\twhile(ch!='\\n')\n\t\t\t\t\t\tch=getchar();\n\t\t\t\t//cout<<ch<<endl;\n\t\t\t\treturn ;\n\t\t\t}vh[c-'a']=1;\n\t\t\tch=getchar();//\" \"\n\t\t\tch=getchar();//n/num\n\t\t\t//cout<<ch<<endl;\n\t\t\tint x,y;//for(int i=x;i<=y;++i)\n\t\t\tif(ch!='n')\n\t\t\t\tx=readp();\n\t\t\telse\n\t\t\t\tx=100,ch=getchar();//\" \"\n\t\t\tch=getchar();//n/num\n\t\t\tif(ch!='n')\n\t\t\t\ty=readp();\n\t\t\telse\n\t\t\t\ty=100,ch=getchar();//\\n\n\t\t\t//cout<<ch<<endl;\n\t\t\tif(!s.empty())\n\t\t\t\tif(s.top().second==-1){\n\t\t\t\t\ts.push(make_pair(c-'a',-1));\n\t\t\t\t\tcontinue;\n\t\t\t\t}//\u5d4c\u5957\u5728\u201c\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\u201d\u4e2d\u7684\u5faa\u73af\uff0c\u65e0\u610f\u4e49\n\t\t\tif(x<=y){\n\t\t\t\tif(x<y&&y==100){\n\t\t\t\t\ts.push(make_pair(c-'a',1));//w++\n\t\t\t\t\tcnt++;\n\t\t\t\t\tans=max(cnt,ans);\n\t\t\t\t}else\n\t\t\t\t\ts.push(make_pair(c-'a',0));\n\t\t\t}\n\t\t\telse\n\t\t\t\ts.push(make_pair(c-'a',-1));//x>y\uff0c\u6545\u6b64\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\n\t\t}\n\t}if(!s.empty()){\n\t\tcout<<\"ERR\"<<endl;\n\t\treturn ;\n\t}if(ans==w)\n\t\tcout<<\"Yes\"<<endl;\n\telse\n\t\tcout<<\"No\"<<endl;\n\twhile(!s.empty())\n\t\ts.pop();\n\tfor(int i=0;i<26;i++)\n\t\tvh[i]=0;\n}\nint main(){\n\tfreopen(\"complexity.in\",\"r\",stdin);\n\tfreopen(\"complexity.out\",\"w\",stdout);\n\tcin>>t;\n\tch=getchar();//\"\\n\"\n\tfor(int i=1;i<=t;i++){\n\t\t//cout<<s.size()<<endl;\n\t\tch=getchar();//num\n\t\t//cout<<ch<<endl;\n\t\tn=readp();//\" \"\n\t\t//cout<<n<<endl;\n\t\tch=getchar();//\"O\"\n\t\tch=getchar();//\" \"\n\t\tch=getchar();//1/n\n\t\tif(ch=='1'){\n\t\t\tw=0;\n\t\t\tch=getchar();//\")\"\n\t\t}else{\n\t\t\tch=getchar();//\"^\"\n\t\t\tch=getchar();//num\n\t\t\twhile(!s.empty())\n\t\t\t\ts.pop();\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\tvh[i]=0;\n            //\u4e0d\u6e05\u7a7a\u4f1a\u5c111/11\u7684\u5206\u3010\u4fdd\u6301\u5fae\u7b11\u3011\n\t\t\tw=readp();\n\t\t\t//\")\"\n\t\t}//cout<<ch<<endl;\n\t\tch=getchar();//\"\\n\"\n\t\twork();\n\t}\n}\n```\n",
        "postTime": 1540610121,
        "uid": 28563,
        "name": "\u6797\u7a7a\u9e7f\u996e\u6eaa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u4ece6.21\u4e00\u76f4\u5230\u4eca\u5929(11.3),\u603b\u7b97\u628a\u8fd9\u9053\u6bd2\u7624\u9898\u8fc7\u4e86\n\n\u601d\u7ef4\u96be\u5ea6\u4e0d\u5927\u5c31\u662f\u7eaf\u6a21\u62df,\u4f46\u662f\u4ee3\u7801\u96be\u5ea6\u5f88\u5927\n\n\u5148\u8bb2\u4e00\u4e0b\u5927\u81f4\u601d\u8def:\n\n1.\u8bfb\u5230\u4e00\u4e2afor\u5c31\u628atop++(\u5b58\u7b2c\u51e0\u5c42for)\n\n2.\u8bfb\u5230\u4e00\u4e2a\u5b57\u6bcd\u5c31\u4e0e\u6808\u4e2d\u7684\u5b57\u6bcd\u6bd4\u8f83\u5224\u91cd,\u6ca1\u6709\u5c31\u538b\u5165\u6808\u4e2d,\u5426\u5219ERR\n\n3.for x a b \u53ea\u6709a\u4e3a\u5e38\u6570,b\u4e3an\u65f6\u590d\u6742\u5ea6\u624d\u4f1a++,a>b\u65f6,\u4ed6\u4ee5\u4e0b\u7684\u5faa\u73af\u90fd\u4e0d\u4f1a\u7f6e\u5165\u590d\u6742\u5ea6\u5185,\u6211\u628an\u9644\u4e3a1e5,\u7528\u7c7b\u4f3c\u5feb\u8bfb\u7684\u65b9\u6cd5\u7b97\u51faa,b,\u76f4\u63a5\u6bd4\u8f83.\u5982\u679ca>b,\u5219\u7528\u4e00\u4e2a\u6807\u8bb0sf=top,\u53ea\u6709\u5f53top\u9000\u56desf\u4ee5\u4e0b\u4e4b\u540e\u624d\u53ef\u4ee5\u6d88\u9664\n\n### \u518d\u8bb2\u4ee5\u4e0b\u6211\u88ab\u5751\u4e86\u51e0\u4e2a\u6708\u7684\u5730\u65b9:\n\n\u5e76\u4e0d\u662f\u6bcf\u4e00\u5c42for\u90fd\u4f1a\u4f7f\u590d\u6742\u5ea6\u589e\u52a0,\u6240\u4ee5\u4e5f\u4e0d\u662f\u6bcf\u7ed3\u675f\u4e00\u5c42for\u5c31\u8981\u590d\u6742\u5ea6--,\u6211\u7528b[top]\u5b58\u4f7f\u590d\u6742\u5ea6\u589e\u52a0\u7684for,\u53ea\u6709b[top]=1\u624d--\u590d\u6742\u5ea6\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,l,o,k,top;\nchar c,sta[11111];\nstring s;\nbool b[11111];\nint main()\n{\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tint tm=0;\n\t\tc='\\0';\n\t\tk=0;\n\t\ttop=0;\n\t\tbool bl=0,fg=0;\n\t\tscanf(\"%d\",&l);\n\t\twhile(c<48||c>57) //\u8bfb\u5165,\u5728\u8fd9\u91cc\u6211\u4eec\u7edf\u4e00\u4ee5n^x\u8ba1,o(1)\u4e3an^0 \n\t\t{\n\t\t\tc=getchar();\n\t\t\tif(c=='n') bl=1;\n\t\t}\n\t\tif(bl)\n\t\t{\n\t\t\to=c-48;\n\t\t\tc=getchar();\n\t\t\tif(c>47&&c<58) o=10*o+c-48;\n\t\t}\n\t\telse o=0;\n\t\tint ax=0;\n\t\tgetline(cin,s);\n\t\tint sf=0;\n\t\tmemset(b,0,sizeof(b));\n\t\tfor(int i=1; i<=l; i++)\n\t\t{\n\t\t\tgetline(cin,s);\n\t\t\tint s1=0,s2=0;\n\t\t\tif(fg) continue;\n\t\t\tint cs=0;\n\t\t\tbool fl=0,fr=0;\n\t\t\tfor(int j=0; j<s.size(); j++)\n\t\t\t{\n\t\t\t\tif(s[j]=='F')\n\t\t\t\t{\n\t\t\t\t\ttop++;\n\t\t\t\t}\n\t\t\t\tif(s[j]>='a'&&s[j]<='z'&&s[j]!='n')\n\t\t\t\t{\n\t\t\t\t\tbool bx=0;\n\t\t\t\t\tfor(int x=1; x<=k; x++)\n\t\t\t\t\t\tif(sta[x]==s[j]) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbx=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(bx) //\u53d8\u91cf\u91cd\u540d \n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"ERR\");\n\t\t\t\t\t\tfg=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse sta[++k]=s[j]; //\u653e\u5165\u6808\u4e2d \n\t\t\t\t}\n\t\t\t\tif(fg) break;\n\t\t\t\tif(s[j]>47&&s[j]<58) //\u5904\u7406s1,s2 \n\t\t\t\t\tif(!cs)\n\t\t\t\t\t{\n\t\t\t\t\t\tcs=1;\n\t\t\t\t\t\ts1=s[j]-48;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tif(47<s[j]&&s[j]<58) s1=s1*10+s[j]-48;\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\ts2=s[j]-48;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t\tif(47<s[j]&&s[j]<58) s2=s2*10+s[j]-48;\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\tif(s[j]=='n')\n\t\t\t\t\tif(!cs) s1=1e5,cs=1;\n\t\t\t\t\telse s2=1e5;\n\t\t\t\tif(s[j]=='E')\n\t\t\t\t\tif(top)\n\t\t\t\t\t{\n\t\t\t\t\t\tax=max(ax,tm);\n\t\t\t\t\t\tif(b[top]) b[top]=0,tm--;\n\t\t\t\t\t\ttop--;\n\t\t\t\t\t\tk--;\t\t\t\t\t\t\n\t\t\t\t\t\tif(sf>top) sf=0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"ERR\"); //\u591a\u4f59\u7684E \n\t\t\t\t\t\tfg=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(s2<s1) sf=top; //\u8bb0\u5f55 a>b \u7684\u65f6\u523b \n\t\t\tif(s2-s1>1e3) fl=1;\n\t\t\tif(fg) continue;\n\t\t\tif(fl&&!sf) b[top]=1,tm++; //\u6b64\u4f4d\u7f6e\u4f1a\u8ba9\u590d\u6742\u5ea6++ \n\t\t}\n\t\tif(fg) continue;\n\t\tif(top) puts(\"ERR\"); //\u591a\u4f59\u7684F \n\t\telse if(ax==o) puts(\"Yes\");\n\t\telse puts(\"No\");\n\t}\n}\n```\n",
        "postTime": 1572781926,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u770b\u4e86\u4e00\u4e0b\u6570\u636e\u91cf\uff0c\u7eaf\u6a21\u62df\u53ef\u4ee5\u8fc7\uff0c\u6309\u9898\u610f\u6765\u770b\uff1a\n\nERR\u7684\u60c5\u51b5\uff1aF\u4e0eE\u4e0d\u5339\u914d\u548c\u53d8\u91cf\u540d\u51b2\u7a81\u7684\n\nNo\u7684\u60c5\u51b5\uff1a\u53ea\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u9519\u8bef\u7684\n\nYes\u7684\u60c5\u51b5\uff1a\u9664\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u5916\u7684\n\n\u5176\u5b9e\u8fd8\u6709\u9690\u85cf\u7684\u6761\u4ef6\uff1a\n\n- 1.F x 1 1 \u4e3aO(1)\n\n- 2.F x 1 n \u4e3aO(n)\n\n- 3.F x 32 n \u4e3aO(n)\n\n- 4.F x n 1 \u4e3aO(1) \u4e14\u6b64\u8bed\u53e5\u4e0d\u6267\u884c\uff0c\u56e0\u4e3an\u8fdc\u5927\u4e8e100\n\n- 5.\u5e76\u5217\u7684For\u8bed\u53e5\u590d\u6742\u5ea6\u53d6\u6700\u9ad8\u6b21\u9879\u503c\n\n- 6.F x n n \u4e3aO(1)\n\n- 5.F x 8 2 \u4e3aO(1) \u4e14\u6b64\u8bed\u53e5\u4e0d\u6267\u884c\uff0c\u56e0\u4e3a8\u5927\u4e8e2\n\n- 6.\u4e0d\u6267\u884c\u7684\u8bed\u53e5\u82e5\u4e0b\u9762\u5d4c\u5957\u4e86\u65b0\u7684For\u8bed\u53e5\u4e5f\u8981\u626b\u63cf\u4e0b\u53bb\uff0c\u4ee5\u9632\u51fa\u73b0ERR\u7684\u60c5\u51b5\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nchar o[1000]={0};//\u5b58\u5f53\u524d\u8bfb\u5165\u7684\u590d\u6742\u5ea6\nint n,nowl,data[500],ans=0;//data\u5b58\u7528\u4e86\u7684\u53d8\u91cf\u53ca\u5176\u503c\nbool erk=false,erp=false;//erk\u5224\u65ad\u662f\u5426\u5c11\u4e86E\uff0cerp\u5224\u65ad\u53d8\u91cf\u91cd\u590d\n\nvoid read(int r)\n{\n    int nd=0,rd=0,pdlt=0;//nd \u76ee\u524dn\u7684\u6b21\u6570\uff0crd\u76ee\u524d\u5faa\u73af\u6570\n    bool pdl=false,pdk[1000];//pdl\u540e\u9762\u5d4c\u5957\u7684for\u8bed\u53e5\u662f\u5426\u65e0\u6548\uff0cpdk\u8bb0\u5f55\u7b2c\u51e0\u6b21\u5faa\u73afn\u7684\u6b21\u6570+1\n    memset(pdk,false,sizeof(pdk));\n    char bl[1000]={0};//\u5b58\u53d8\u91cf\u540d\n    for(int b=1;b<=r;b++)\n    {\n        char g;\n        string x,y;\n        cin>>g;\n        if(g=='F')\n        {\n        \tint j=0,k=0,m=0,n=0;\n        \trd++;\n            cin>>bl[rd];\n            if(data[(int)bl[rd]]!=0)\n            {\n                erp=true;\n            }\n            cin>>x>>y;\n            if(pdl==true)\n            {\n                continue;\n            }\n            if(x[0]>='0'&&x[0]<='9')\n            {\n                while(x[0+j]>='0'&&x[0+j]<='9')\n                {\n                    k=k*10+x[0+j]-48;\n                    j++;\n                }\n                data[(int)bl[rd]]=k;\n            }\n            else\n            {\n                if(x[0]==n)\n                {\n                    data[(int)bl[rd]]=100;\n                }\n                else\n                {\n                    data[(int)bl[rd]]=data[(int)x[0]];\n                }\n            }\n            if(y[0]>='0'&&y[0]<='9')\n            {\n                while(y[0+m]>='0'&&y[0+m]<='9')\n                {\n                    n=n*10+y[0+m]-48;\n                    m++;\n                }\n                if(data[(int)bl[rd]]>n)\n                {\n                    if(pdl==false)\n                    {\n                        pdlt=rd;\n                    }\n                    pdl=true;\n                }\n            }\n            else\n            {\n                if(data[(int)bl[rd]]>data[(int)y[0]])\n                {\n                    if(pdl==false)\n                    {\n                        pdlt=rd;\n                    }\n                    pdl=true;\n                }\n            }\n            if(y[0]=='n'&&x[0]!='n')\n            {\n                nd++;\n                ans=max(nd,ans);\n                pdk[rd]=true;\n            }\n        }\n        if(g=='E')\n        {\n            if(rd<0)\n            {     \n                erp=true;\n            }\n            else\n            {\n            \tdata[(int)bl[rd]]=0;\n                if(pdlt==rd)\n                {\n                    pdl=false;\n                    pdlt=0;\n                }\n                if(pdk[rd]==true)\n                {\n                    nd--;\n                    pdk[rd]=false;\n                }\n                rd--;\n            }\n        }\n    }\n    if(rd!=0)\n    {\n        erk=true;\n    }\n    else\n    {\n        erk=false;\n    }\n}\n\nint main()\n{\n    cin>>n;\n    for(int a=1;a<=n;a++)\n    {\n    \terp=false;\n    \tbool er=false;\n        memset(data,0,sizeof(data));\n        ans=0;\n        erk=false;\n        data[(int)'n']=100;\n        bool pd=false;//\u5224\u65ad\u8bfb\u5165\u590d\u6742\u5ea6\u662f\u5426\u4e3aO(n^m)\u7c7b\u578b\n        int fzd=0,ld=0;///fzd\u8bfb\u5165\u7684\u590d\u6742\u5ea6\u7684\u6570\u5b57\u90e8\u5206\n        scanf(\"%d\",&nowl);\n        if(nowl%2!=0)\n        {           \n            er=true;\n        }\n        scanf(\"%c\",&o[0]);\n        while(o[ld]!='\\n')\n        {\n        \tld++;\n        \tscanf(\"%c\",&o[ld]);\n        }\n        if(o[3]=='n')\n        {\n            int t=0;\n            pd=true;\n            while(o[5+t]>='0'&&o[5+t]<='9')\n            {\n                fzd=fzd*10+o[5+t]-48;\n                t++;\n            }\n        }\n        else\n        {\n            fzd=1;\n        }\n        read(nowl);\n        if(er==true||erk==true||erp==true)\n        {\n        \tcout<<\"ERR\"<<endl;\n        \tcontinue;\n        }\n        if(ans==0)\n        {\n            if(fzd==1)\n            {\n            \tif(pd==true)\n            \t{\n            \t\tcout<<\"No\"<<endl;\n            \t}\n                else\n                {\n                \tcout<<\"Yes\"<<endl;\n                }\n            }\n            else\n            {\n                cout<<\"No\"<<endl;\n            }\n            continue;\n        }\n        if(ans>0)\n        {\n            if(fzd==ans)\n            {\n                cout<<\"Yes\"<<endl;\n            }\n            else\n            {\n                cout<<\"No\"<<endl;\n            }\n            continue;\n        }\n    }\n}\n\n```\n\n",
        "postTime": 1563584167,
        "uid": 89910,
        "name": "C_Cong",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u663e\u7136\u662f\u4e00\u9053\u6a21\u62df\n\n\u5728\u6211\u5386\u7ecf2\u4e2a\u5c0f\u65f6\u7684\u8c03\u8bd5\u4e2d\n\n\u7ec8\u4e8e\u5199\u5b8c\u4e86\u8fd9\u7bc7AC\u4ee3\u7801\n\n\u8bb2\u4e0b\u5177\u4f53\u505a\u6cd5\u5427\n\n\u5c31\u662f\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u4f60\u7684\u5b57\u7b26\u548c\u4f60\u8981\u7b97\u51fa\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u5224\u65ad\u4e00\u4e9b\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\n\n\u518d\u6253\u6807\u8bb0\u5e76\u4e14\u5904\u7406\u6389\u5c31OK\u5566\uff01\n\n\u6a21\u62df\u662f\u4e00\u4e2anoip\u5e38\u8003\u8003\u70b9\n\n\u5e0c\u671b\u5927\u5bb6\u80fd\u591a\u7ec3\u4e60\n\n\u8c22\u8c22\u89c2\u770b\uff01\n```\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint t,n,flag,top,duan,tong[1004],fz[105],biaoji,ans,tot,shangdibiaoji;\nchar s[3000005];\n\ninline void bian(int &flag,string a){\n\tif(isdigit(a[4])&&isdigit(a[5])) flag=(a[4]-'0')*10+(a[5]-'0');\n\telse flag=a[4]-'0';\n}\n\ninline void init(string a){\n\tif(a[2]=='n'){\n\t\tbian(flag,a);\n\t}\n\telse flag=0;\n}\n\nvoid zhuanhua(int &aa,string a){\n\tint len=a.length();\n\tif(len==1){\n\t\taa=(a[0]-'0');\n\t\treturn;\n\t}\n\tif(len==2){\n\t\taa=(a[0]-'0')*10+(a[1]-'0');\n\t\treturn;\n\t}\n}\n\ninline void check(){\n\ttop=0;tot=0;ans=0;duan=0;shangdibiaoji=0;\n\twhile(n--){\n\t\tchar opt;\n\t\tcin>>opt;\n\t\tif(opt=='F'){\n\t\t\tchar buf;\n\t\t\tcin>>buf;\n\t\t\tif(tong[buf]){\n\t\t\t\tshangdibiaoji=1;\n\t\t\t\ttop+=10000;\n\t\t\t}\n\t\t\ttong[buf]=1;\n\t\t\ts[++top]=buf;\n\t\t\tstring a,b;\n\t\t\tint aa,bb;\n\t\t\tcin>>a>>b;\n\t\t\tif(duan){\n\t\t\t\tfz[top]=fz[top-1];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a==\"n\"&&b==\"n\"){\n\t\t\t\tfz[top]=fz[top-1];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a==\"n\"){\n\t\t\t\tfz[top]=fz[top-1];\n\t\t\t\tduan=1;\n\t\t\t\tbiaoji=top-1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(b==\"n\"){\n\t\t\t\tfz[top]=fz[top-1]+1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(a!=\"n\"&&b!=\"n\"){\n\t\t\t\tzhuanhua(aa,a);zhuanhua(bb,b);\n\t\t\t\tif(aa>bb){\n\t\t\t\t\tduan=1;\n\t\t\t\t\tbiaoji=top-1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfz[top]=fz[top-1];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(top==0){\n\t\t\t\tshangdibiaoji=1;\n\t\t\t\ttop+=10000;\n\t\t\t}\n\t\t\tans=max(ans,fz[top]);\n\t\t\tif(!duan) fz[top]=0;\n\t\t\ttong[s[top--]]=0;\n\t\t\tif(biaoji==top) duan=0;\n\t\t}\n\t}\n\tif(shangdibiaoji){\n\t\tcout<<\"ERR\\n\";\n\t\treturn;\n\t}\n\tif(top){\n\t\tcout<<\"ERR\\n\";\n\t\treturn;\n\t}\n\tif(ans==flag){\n\t\tcout<<\"Yes\\n\";\n\t\treturn;\n\t}\n\telse cout<<\"No\\n\";\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>t;\n\twhile(t--){\n\t\tmemset(tong,0,sizeof(tong));\n\t\tcin>>n;string a;\n\t\tcin>>a;\n\t\tinit(a);\n\t\tcheck();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1561863809,
        "uid": 118918,
        "name": "whyl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# \u849f\u84bb\u7684\u9898\u89e3\n\u4ece2109.5.1\u52302019.6.9\u7684\u957f\u9014\u8dcb\u6d89  \n\u5728\u8fd9\u91cc\u5c06\u81ea\u5df1\u7684\u4e00\u4e9b\u611f\u60f3\u8bf4\u4e00\u4e0b  \n\n------------\n## 1.\u5206\u6790\n\u5176\u5b9e\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u4e86  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e94\u79cd\u60c5\u51b5~~\u4f46\u597d\u50cf2\u548c3\u90fd\u6ca1\u7528~~\n1. \u4ece\u5e38\u6570\u5230n\uff0c\u5355\u5c42\u590d\u6742\u5ea6\u4e3an\n1. \u4ecen\u5230\u5e38\u6570\uff0c\u6b64\u65f6\u5728\u8fd9\u4e00\u5c42\u4e4b\u540e\u76f4\u5230\u8df3\u51fa\uff0c\u91cc\u9762\u7684\u7a0b\u5e8f\u90fd\u4e0d\u4f1a\u8fd0\u884c\n1. \u4ecen\u5230n\uff0c\u5355\u5c42\u590d\u6742\u5ea6\u4e3a1\n1. \u4ece\u5e38\u6570a\u5230\u5e38\u6570b\uff0ca<=b\uff0c\u5355\u5c42\u590d\u6742\u5ea6\u4e3a1\n1. \u4ece\u5e38\u6570a\u5230\u5e38\u6570b\uff0ca>b\uff0c\u6b64\u65f6\u5728\u8fd9\u4e00\u5c42\u4e4b\u540e\u76f4\u5230\u8df3\u51fa\uff0c\u91cc\u9762\u7684\u7a0b\u5e8f\u90fd\u4e0d\u4f1a\u8fd0\u884c\n------------\n\u5982\u679c\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u8fd9\u4e2a\u8bbe\u5b9a\uff0c\u5728\u78b0\u52302\u548c5\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4e0d\u8bfb\u5165\u4e4b\u540e\u7684\u4ee3\u7801\u5230\u8be5\u5faa\u73af\u8df3\u51fa\u4e86\uff0c\u4f46\u662f\u5373\u4f7f\u5728\u7a0b\u5e8f\u4e0d\u4f1a\u6267\u884c\u7684\u5faa\u73af\u4f53\u4e2d\u51fa\u73b0\u4e86\u8bed\u6cd5\u9519\u8bef\u4e5f\u4f1a\u7f16\u8bd1\u9519\u8bef\uff0c\u8981\u8f93\u51fa ERR\uff0cso\u3002\u3002\u3002  \n\u5982\u679c\u6ca1\u6709\u591a\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u4e0a\u9762\u7684\u60c5\u51b5\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u65e0\u6cd5\u8bfb\u5165\u4e0b\u4e00\u7ec4\u6570\u636e\uff0cso\u3002\u3002\u3002  \n\n------------\n\u7efc\u5408\u4e0a\u8ff0\u5206\u6790\uff0c\u6211\u4eec\u5f97\u51fa\u4e86\u4e00\u79cd\u505a\u6cd5\uff1a  \n  \u4fdd\u5b58\u6240\u6709\u4ee3\u7801\uff0c\u4ece\u5934\u5230\u5c3e\u5206\u6790\uff0c\u5728\u8fc7\u7a0b\u4e2d\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\u3002\n\n------------\n## 2.\u5b58\u50a8\n\u6839\u636e\u521a\u521a\u7684\u5206\u6790\uff0c\u6211\u4eec\u8981\u628a\u4ee3\u7801\u4fdd\u5b58\u8d77\u6765\u5904\u7406\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u600e\u4e48\u8bfb\u5165\u600e\u4e48\u4fdd\u5b58\uff0c\u4fdd\u5b58\u5c31\u5931\u53bb\u4e86\u610f\u4e49\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4fdd\u5b58\u7684\u662f\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002  \n### \u4f46\u662f\uff0c\u8fd9\u91cc\u9762\u4ec0\u4e48\u4fe1\u606f\u6709\u4ef7\u503c\u5462\uff1f\n\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u6709\uff1a\n- \u4ee3\u7801\u884c\u6570\n- \u5f53\u884c\u64cd\u4f5c\n- \u8be5\u5c42\u590d\u6742\u5ea6\n- \u53d8\u91cf\u540d\n- \u8be5\u5c42\u662f\u5426\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\n- \u9898\u76ee\u6240\u7ed9\u7684\u590d\u6742\u5ea6\n\n------------\n\u60f3\u4e00\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\uff08\u6216\u7ed3\u6784\uff09\u4fdd\u5b58\u8fd9\u4e9b\u5185\u5bb9\u3002  \n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nclass cx\n{\npublic:\n    cx()\n    {\n        num = 0;\n        line = 0;\n        complax_rate = 0;\n        real_complax_rate = 0;\n        name.clear();\n        nest.clear();\n        tier = 0;\n        memset(con, 0, sizeof(con));\n    } //\u6784\u9020\u51fd\u6570\nprivate:\n    int num;                             //num\u8868\u793a\u8fd9\u662f\u7b2c\u51e0\u4e2a\u7a0b\u5e8f\n    int line;                            //line\u8868\u793a\u884c\u6570\n    int complax_rate, real_complax_rate; //complax:\u590d\u6742\u7684\uff0crate:\u5ea6\u6570\uff0c\u8868\u793a\u8f93\u5165\u590d\u6742\u5ea6\u4e0e\u5b9e\u9645\u590d\u6742\u5ea6\n    vector<string> name;                 //\u7528\u4e8e\u8bb0\u5f55\u53d8\u91cf\u540d\n    vector<int> nest;                    //\u8bb0\u5f55\u8be5\u5c42\u590d\u6742\u5ea6\n    int con[105];                        //\u8bb0\u5f55\u6bcf\u5c42\u7684\u64cd\u4f5c\uff0c1\u4e3a\u63d2\u5165\uff0c2\u4e3a\u5220\u9664\n};\n```\n\u4e0d\u61c2\u7c7b\u7684\u53ef\u4ee5\u628aclass\u6539\u6210struct\uff0c\u5e76\u4e14\u5220\u6389public\u548cprivate\u3002\n\n------------\n## 3. \u8bfb\u5165\n\u5bf9\u4e8e\u8bfb\u5165\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u7528string\u8bfb\u5165\u5f53\u524d\u4ee3\u7801\u3002  \n\u4f46\u662fstring\u7684\u8f93\u5165\u51fd\u6570\u6709\u4e24\u79cd\uff0ccin\u548cgetline\u3002\u4f46\u662f\u8be5\u7528\u54ea\u4e2a\u5462\uff1f\n\u9996\u5148\u770b\u4e24\u4e2a\u51fd\u6570\u7684\u533a\u522b\uff1a\n- cin\u662f\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9047\u5230\u7a7a\u683c\uff0c\u6362\u884c\u7b26\u5c31\u505c\u6b62\n- getline\u662f\u8bfb\u5165\u4e00\u6574\u884c\uff0c\u5305\u62ec\u6362\u884c\u7b26\n\n------------\n\u770b\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528cin\u8bfb\u5165\u524d\u9762\u7684\u5b57\u7b26\u4e32\uff0c\u7528getline\u8bfb\u5165\u6700\u540e\u4e00\u7ec4\u5b57\u7b26\u4e32\u3002  \n# \u6ce8\u610f\uff01\uff01\uff01cin\u4e0d\u4f1a\u8bfb\u5165\u90a3\u4e2a\u7a7a\u683c\uff01\n\u6240\u4ee5\u5728getline\u4e4b\u524d\uff0c\u6700\u597d\u52a0\u4e00\u4e2agetchar\u628a\u90a3\u4e2a\u7a7a\u683c\u5e72\u6389\u3002  \n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid read(int n)\n    {\n    \tn=num;\n        cin >> line; //\u8bfb\u5165\u884c\u6570\n        string rate;\n        getline(cin,rate);\n        int num=0;\n        for(int i=0;i<rate.length();++i){\n            if(rate[i]=='^'){\n                for(int j=i;j<rate.length();++j){\n                    if(rate[j]>='0'&&rate[j]<='9') {\n                        num*=10;\n                        num+=rate[j]-'0';\n                    }\n                }\n                break;\n            }\n        }\n        complax_rate=num;\n        for (int i = 1; i <= line; ++i)\n        {\n            char ch;\n                scanf(\"%c\", &ch);\n            if (ch == 'F')\n            { //\u8bfb\u5165\u4e3aF\n                con[i] = 1;\n                string Name;\n                cin >> Name;\n                name.push_back(Name);\n                string x, y;\n                cin >> x;\n                char pxx=getchar();//\u5212\u91cd\u70b9\n                getline(cin,y);\n                if (x[0] == 'n' && y[0] == 'n')\n                    nest.push_back(0); //\u4ecen\u5230n,\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\n                else if (x[0] == 'n' && y[0] != 'n')\n                    nest.push_back(-1); //\u4ecen\u52301,\u4e0d\u4f1a\u8fdb\u5165\n                else if (x[0] != 'n' && y[0] == 'n')\n                    nest.push_back(1); //\u4ece1\u5230n,\u590d\u6742\u5ea6\u4e3an\n                else\n                { //\u4ece\u5e38\u6570\u5230\u5e38\u6570\n                    int _x=0, _y=0;\n                    for (int i = 0; i < x.length(); ++i)\n                    {\n                        _x *= 10;\n                        _x += x[i] - '0';\n                    } //\u628ax\u53d8\u6210\u6574\u6570\n                    for (int i = 0; i < y.length(); ++i)\n                    {\n                        _y *= 10;\n                        _y += y[i] - '0';\n                    } //\u628ay\u53d8\u6210\u6574\u6570\n                    if (_x > _y)\n                        nest.push_back(-1); //\u4ece\u5927\u5230\u5c0f\uff0c\u4e0d\u4f1a\u8fdb\u5165\n                    else\n                        nest.push_back(0); //\u4ece\u5c0f\u5230\u5927\uff0c\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\n                }\n                tier++;\n            }\n            else if(ch=='E')\n            { //\u8bfb\u5165\u4e3aE\n            string fz;\n            getline(cin,fz);\n                con[i] = 2;\n            }\n             \n        }\n    }\n```\n\u6b64\u65f6  \n- \u5728\u6570\u7ec4con\u4e2d\u4fdd\u5b58\u64cd\u4f5c\uff0c1\u4e3aF\uff0c0\u4e3aE  \n-    \u5728\u6570\u7ec4name\u4e2d\u4fdd\u5b58\u53d8\u91cf\u540d\n- \u5728\u6570\u7ec4nest\u4e2d\u4fdd\u5b58\u8be5\u5c42\u590d\u6742\u5ea6\u548c\u8be5\u5c42\u662f\u5426\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff0c1\u4e3an\uff0c0\u4e3a1\uff0c-1\u4e3a\u4e0d\u8fdb\u5165\n\n\n------------\n## 4.\u590d\u6742\u5ea6\u5206\u6790\n\u601d\u8003\u5982\u4f55\u5206\u6790  \n\u9996\u5148\uff0c\u4e3a\u4e86\u5224\u65ad\u53d8\u91cf\u540d\u662f\u5426\u91cd\u590d\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2aset\u3002  \n\u4f46\u662f\uff0c\u4e3a\u4e86\u7ef4\u62a4\u53d8\u91cf\u7684\u8fdb\u51fa\u987a\u5e8f\uff0c\u6211\u4eec\u9700\u8981\u50cf\u771f\u6b63\u7684\u7535\u8111\u4e00\u6837\uff0c\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u6808\u3002  \n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e24\u4e2astl\uff0c\u4e00\u4e2aset\uff0c\u4e00\u4e2astack\u3002  \n\u6545\u5b58\u50a8\u5e94\u8be5\u53d8\u6210\u8fd9\u6837\uff1a\n```cpp\nclass cx\n{\npublic:\n    cx()\n    {\n        num = 0;\n        line = 0;\n        complax_rate = 0;\n        real_complax_rate = 0;\n        name.clear();\n        nest.clear();\n        tier = 0;\n        exist_name.clear();\n        memset(con, 0, sizeof(con));\n    } //\u6784\u9020\u51fd\u6570\nprivate:\n    int num;                                //num\u8868\u793a\u8fd9\u662f\u7b2c\u51e0\u4e2a\u7a0b\u5e8f\n    int line;                               //line\u8868\u793a\u884c\u6570\n    int complax_rate, real_complax_rate;    //complax:\u590d\u6742\u7684\uff0crate:\u5ea6\u6570\uff0c\u8868\u793a\u8f93\u5165\u590d\u6742\u5ea6\u4e0e\u5b9e\u9645\u590d\u6742\u5ea6\n    vector<string> name;                    //\u7528\u4e8e\u8bb0\u5f55\u53d8\u91cf\u540d\n    vector<int> nest;            //\u8bb0\u5f55\u8be5\u5c42\u590d\u6742\u5ea6\n    int con[105];                           //\u8bb0\u5f55\u6bcf\u5c42\u7684\u64cd\u4f5c\uff0c1\u4e3a\u63d2\u5165\uff0c2\u4e3a\u5220\u9664\n    set<string> exist_name;                 //\u5206\u6790\u590d\u6742\u5ea6\u65f6\uff0c\u8bb0\u5f55\u5df2\u7ecf\u5b58\u5728\u7684\u53d8\u91cf,\n    stack<pair<string, int> > xl_exist_name; //\u540c\u4e0a\uff0c\u4e3a\u4e86\u7ef4\u62a4\u53d8\u91cf\u7684\u987a\u5e8f,\u7b2c\u4e8c\u7ef4\u4fdd\u5b58\u5728\u6b64\u53d8\u91cf\u63d2\u5165\u4e4b\u524d\u7684\u590d\u6742\u5ea6\n} ;\n```\n\n------------\n\u4e0a\u4ee3\u7801\uff1a  \n\uff08\u5173\u4e8e\u5982\u4f55\u5206\u6790\uff0c\u4e2d\u95f4\u7684\u4e00\u4e9b\u7ec6\u8282\u5728\u6ce8\u91ca\u91cc\uff09\n```cpp\n    int analyze()\n    {                                                        //\u5206\u6790\u590d\u6742\u5ea6\n        int top_complax_rate = 0;                            //\u8bb0\u5f55\u76ee\u524d\u6700\u9ad8\u7684\u590d\u6742\u5ea6\n        int now_complax_rate = 0;                            //\u8bb0\u5f55\u5f53\u524d\u590d\u6742\u5ea6\n        bool flag = true;                                    //\u6807\u8bb0\u4e0d\u4f1a\u8fdb\u5165\u7684\u5faa\u73af\n        string flag1 = \"\";                                   //\u540c\u4e0a,\u7b2c\u4e00\u7ef4\u4e3a\u4e0d\u4f1a\u8fdb\u5165\u7684\u53d8\u91cf\u540d,//\u7b2c\u4e8c\u7ef4\u4e3a\u8be5\u53d8\u91cf\u540d\u6240\u5728\u7684\u4f4d\u7f6e\n        vector<string> ::iterator it1 = name.begin();        //\u8fed\u4ee3\u56681\n        vector<int>::iterator it2 = nest.begin();            //\u8fed\u4ee3\u56682\n        vector<string>::iterator it3 = name.begin();         //\u8fed\u4ee3\u56683\n        for (int i = 1; i <= line; ++i)\n        {\n            if (con[i] == 1)\n            {\n                if (exist_name.count(*it1))\n                    return 3;                                          //\u6b64\u65f6\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef2\n                exist_name.insert(*it1);                               //\u5c06\u53d8\u91cf\u5b58\u5165\u96c6\u5408\n                xl_exist_name.push(make_pair(*it1, now_complax_rate)); //\u4fdd\u5b58\n                int y = *it2; //\u65b9\u4fbf\u64cd\u4f5c\n                if (y == -1)\n                {\n                    flag = false;\n                    flag1 = *it1;\n                } //\u5728\u8fd9\u4e2a\u53d8\u91cf\u5f39\u51fa\u4e4b\u524d\uff0c\u5176\u4e2d\u6240\u6709\u8fd0\u884c\u590d\u6742\u5ea6\u5747\u4e3a0\n                if (y == 1)\n                {\n                    if (flag != false)\n                    {\n                        now_complax_rate++;                                         //\u66f4\u65b0\u53d8\u91cf\u7684\u503c\n                        top_complax_rate = max(top_complax_rate, now_complax_rate); //\u66f4\u65b0\u5f53\u524d\u6700\u9ad8\u590d\u6742\u5ea6\n                    }\n                }\n                it1++;\n                it2++;\n                it3++; //\u79fb\u52a8\u8fed\u4ee3\u5668\n            }\n            else\n            {\n                if (exist_name.empty())\n                    return 3; //\u6b64\u65f6\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef1\n                else\n                {\n                    string on = xl_exist_name.top().first; //\u8bb0\u5f55\u8981\u5220\u53bb\u7684\u53d8\u91cf\n                    int ons = xl_exist_name.top().second;  //ons\u8bb0\u5f55\u53bb\u9664\u53d8\u91cf\u540e\u7684\u5f53\u524d\u590d\u6742\u5ea6\n                    exist_name.erase(on);\n                    xl_exist_name.pop(); //\u53bb\u9664\u53d8\u91cf\n                    if (flag == false)\n                    {                    //\u5982\u679c\u53d8\u91cf\u5904\u5728\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\u4e2d\n                        if (on == flag1) //\u5982\u679c\u8fd9\u5c31\u662f\u95ee\u9898\u53d8\u91cf\n                            flag1 = \"\";\n                        flag = true; //\u6e05\u7a7a\u6807\u8bb0\n                    }\n                    now_complax_rate = ons; //\u66f4\u65b0\u590d\u6742\u5ea6\n                }\n            }\n        }\n        if(!xl_exist_name.empty()) return 3;\n        real_complax_rate = top_complax_rate;\n        return real_complax_rate == complax_rate ? 1 : 2;\n    }\n```\n\u7ed3\u679c\u662f1\uff0cYes\uff1b2.No\uff1b3.ERR\u3002\n\n\n------------\n## 5.\u8f93\u51fa\n\u5df2\u7ecf\u8d70\u5230\u8fd9\u4e00\u6b65\u4e86\uff0c\u6700\u96be\u7684\u5173\u5361\u90fd\u8fc7\u53bb\u4e86\uff0c\u4e4b\u540e\u5c31\u662f\u5584\u540e\u5de5\u4f5c\u4e86  \n\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\uff1f\n```cpp\nvoid print(int x)\n    {\n        if (x == 1)\n            printf(\"Yes\\n\");\n        else if (x == 2)\n            printf(\"No\\n\");\n        else\n            printf(\"ERR\\n\");\n    }\n```\n\u8fd9\u4e2a\u5c31\u662f\u7528analyze\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u8f93\u51fa\u6700\u540e\u7684\u7ed3\u679c\n\n------------\n## \u6700\u540e\u2014\u2014\u4e0a\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nclass cx\n{\npublic:\n    cx()\n    {\n        num = 0;\n        line = 0;\n        complax_rate = 0;\n        real_complax_rate = 0;\n        name.clear();\n        nest.clear();\n        exist_name.clear();\n        memset(con, 0, sizeof(con));\n    } //\u6784\u9020\u51fd\u6570\n        void read(int n)\n    {\n    \tn=num;\n        cin >> line; //\u8bfb\u5165\u884c\u6570\n        string rate;\n        getline(cin,rate);\n        int num=0;\n        for(int i=0;i<rate.length();++i){\n            if(rate[i]=='^'){\n                for(int j=i;j<rate.length();++j){\n                    if(rate[j]>='0'&&rate[j]<='9') {\n                        num*=10;\n                        num+=rate[j]-'0';\n                    }\n                }\n                break;\n            }\n        }\n        complax_rate=num;\n        for (int i = 1; i <= line; ++i)\n        {\n            char ch;\n                scanf(\"%c\", &ch);\n            if (ch == 'F')\n            { //\u8bfb\u5165\u4e3aF\n                con[i] = 1;\n                string Name;\n                cin >> Name;\n                name.push_back(Name);\n                string x, y;\n                cin >> x;\n                char pxx=getchar();\n                getline(cin,y);\n                if (x[0] == 'n' && y[0] == 'n')\n                    nest.push_back(0); //\u4ecen\u5230n,\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\n                else if (x[0] == 'n' && y[0] != 'n')\n                    nest.push_back(-1); //\u4ecen\u52301,\u4e0d\u4f1a\u8fdb\u5165\n                else if (x[0] != 'n' && y[0] == 'n')\n                    nest.push_back(1); //\u4ece1\u5230n,\u590d\u6742\u5ea6\u4e3an\n                else\n                { //\u4ece\u5e38\u6570\u5230\u5e38\u6570\n                    int _x=0, _y=0;\n                    for (int i = 0; i < x.length(); ++i)\n                    {\n                        _x *= 10;\n                        _x += x[i] - '0';\n                    } //\u628ax\u53d8\u6210\u6574\u6570\n                    for (int i = 0; i < y.length(); ++i)\n                    {\n                        _y *= 10;\n                        _y += y[i] - '0';\n                    } //\u628ay\u53d8\u6210\u6574\u6570\n                    if (_x > _y)\n                        nest.push_back(-1); //\u4ece\u5927\u5230\u5c0f\uff0c\u4e0d\u4f1a\u8fdb\u5165\n                    else\n                        nest.push_back(0); //\u4ece\u5c0f\u5230\u5927\uff0c\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\n                }\n            }\n            else if(ch=='E')\n            { //\u8bfb\u5165\u4e3aE\n            string fz;\n            getline(cin,fz);\n                con[i] = 2;\n            }\n             \n        }\n    }\n    int analyze()\n    {                                                        //\u5206\u6790\u590d\u6742\u5ea6\n        int top_complax_rate = 0;                            //\u8bb0\u5f55\u76ee\u524d\u6700\u9ad8\u7684\u590d\u6742\u5ea6\n        int now_complax_rate = 0;                            //\u8bb0\u5f55\u5f53\u524d\u590d\u6742\u5ea6\n        bool flag = true;                                    //\u6807\u8bb0\u4e0d\u4f1a\u8fdb\u5165\u7684\u5faa\u73af\n        string flag1 = \"\";                                   //\u540c\u4e0a,\u7b2c\u4e00\u7ef4\u4e3a\u4e0d\u4f1a\u8fdb\u5165\u7684\u53d8\u91cf\u540d,//\u7b2c\u4e8c\u7ef4\u4e3a\u8be5\u53d8\u91cf\u540d\u6240\u5728\u7684\u4f4d\u7f6e\n        vector<string> ::iterator it1 = name.begin();         //\u8fed\u4ee3\u56681\n        vector<int>::iterator it2 = nest.begin(); //\u8fed\u4ee3\u56682\n        vector<string>::iterator it3 = name.begin();         //\u8fed\u4ee3\u56683\n        for (int i = 1; i <= line; ++i)\n        {\n            if (con[i] == 1)\n            {\n                if (exist_name.count(*it1))\n                    return 3;                                          //\u6b64\u65f6\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef2\n                exist_name.insert(*it1);                               //\u5c06\u53d8\u91cf\u5b58\u5165\u96c6\u5408\n                xl_exist_name.push(make_pair(*it1, now_complax_rate)); //\u4fdd\u5b58\n                int y = *it2; //\u65b9\u4fbf\u64cd\u4f5c\n                if (y == -1)\n                {\n                    flag = false;\n                    flag1 = *it1;\n                } //\u5728\u8fd9\u4e2a\u53d8\u91cf\u5f39\u51fa\u4e4b\u524d\uff0c\u5176\u4e2d\u6240\u6709\u8fd0\u884c\u590d\u6742\u5ea6\u5747\u4e3a0\n                if (y == 1)\n                {\n                    if (flag != false)\n                    {\n                        now_complax_rate++;                                         //\u66f4\u65b0\u53d8\u91cf\u7684\u503c\n                        top_complax_rate = max(top_complax_rate, now_complax_rate); //\u66f4\u65b0\u5f53\u524d\u6700\u9ad8\u590d\u6742\u5ea6\n                    }\n                }\n                it1++;\n                it2++;\n                it3++; //\u79fb\u52a8\u8fed\u4ee3\u5668\n            }\n            else\n            {\n                if (exist_name.empty())\n                    return 3; //\u6b64\u65f6\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef1\n                else\n                {\n                    string on = xl_exist_name.top().first; //\u8bb0\u5f55\u8981\u5220\u53bb\u7684\u53d8\u91cf\n                    int ons = xl_exist_name.top().second;  //ons\u8bb0\u5f55\u53bb\u9664\u53d8\u91cf\u540e\u7684\u5f53\u524d\u590d\u6742\u5ea6\n                    exist_name.erase(on);\n                    xl_exist_name.pop(); //\u53bb\u9664\u53d8\u91cf\n                    if (flag == false)\n                    {                    //\u5982\u679c\u53d8\u91cf\u5904\u5728\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\u4e2d\n                        if (on == flag1) //\u5982\u679c\u8fd9\u5c31\u662f\u95ee\u9898\u53d8\u91cf\n                            flag1 = \"\";\n                        flag = true; //\u6e05\u7a7a\u6807\u8bb0\n                    }\n                    now_complax_rate = ons; //\u66f4\u65b0\u590d\u6742\u5ea6\n                }\n            }\n        }\n        if(!xl_exist_name.empty()) return 3;\n        real_complax_rate = top_complax_rate;\n        return real_complax_rate == complax_rate ? 1 : 2;\n    }\n    void print(int x)\n    {\n        if (x == 1)\n            printf(\"Yes\\n\");\n        else if (x == 2)\n            printf(\"No\\n\");\n        else\n            printf(\"ERR\\n\");\n    }\n    void run(int n)\n    {\n        read(n);\n        int op = analyze();\n        print(op);\n    }\n\nprivate:\n    int num;                                //num\u8868\u793a\u8fd9\u662f\u7b2c\u51e0\u4e2a\u7a0b\u5e8f\n    int line;                               //line\u8868\u793a\u884c\u6570\n    int complax_rate, real_complax_rate;    //complax:\u590d\u6742\u7684\uff0crate:\u5ea6\u6570\uff0c\u8868\u793a\u8f93\u5165\u590d\u6742\u5ea6\u4e0e\u5b9e\u9645\u590d\u6742\u5ea6\n    vector<string> name;                    //\u7528\u4e8e\u8bb0\u5f55\u53d8\u91cf\u540d\n    vector<int> nest;            //\u8bb0\u5f55\u8be5\u5c42\u590d\u6742\u5ea6\n    //int tier;                               //\u8bb0\u5f55\u5f53\u524d\u5c42\u6570\n    int con[105];                           //\u8bb0\u5f55\u6bcf\u5c42\u7684\u64cd\u4f5c\uff0c1\u4e3a\u63d2\u5165\uff0c2\u4e3a\u5220\u9664\n    set<string> exist_name;                 //\u5206\u6790\u590d\u6742\u5ea6\u65f6\uff0c\u8bb0\u5f55\u5df2\u7ecf\u5b58\u5728\u7684\u53d8\u91cf,\n    stack<pair<string, int> > xl_exist_name; //\u540c\u4e0a\uff0c\u4e3a\u4e86\u7ef4\u62a4\u53d8\u91cf\u7684\u987a\u5e8f,\u7b2c\u4e8c\u7ef4\u4fdd\u5b58\u5728\u6b64\u53d8\u91cf\u63d2\u5165\u4e4b\u524d\u7684\u590d\u6742\u5ea6\n} ;\nint main()\n{\n    int t;\n    cin >> t;\n    for (int i = 1; i <= t; ++i)\n    {\n        cx f1;\n        f1.run(i);\n    }\n    return 0;\n}\n```\n~~\u6700\u540e\u65e0\u803b\u7684\u6c42\u6ce2\u8d5e~~  \n# END\n# 2019.6.15\n",
        "postTime": 1560605091,
        "uid": 149168,
        "name": "\u8def\u4eba\u75322003",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u672c\u6765\u662f\u4e0d\u6253\u7b97\u5199\u9898\u89e3\u7684\n\n\u4f46\u662f\u611f\u89c9\u8fd9\u9898\u597d\u9ebb\u70e6\n\n\u5c31\u5728\u4ee3\u7801\u91cc\u5199\u4e86\u4e00\u4e0b\u601d\u8def\n\n\u6539\u4e86\u4e00\u70b9\u5c31\u6210\u9898\u89e3\u4e86..\n\n\n------------\n```python\n#\u770b\u5230\u9898\u76ee\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u5c06\u8f93\u5165\u50a8\u5b58\u4e0b\u6765\u79bb\u7ebf\u5904\u7406,\u7136\u540e\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\u518d\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6.\n\n#\u83b7\u53d6\u8f93\u5165\u6211\u9009\u62e9\u7528\u4e09\u7ef4\u5217\u8868\u50a8\u5b58string,\u867d\u7136\u5360\u7528\u7a7a\u95f4\u53ef\u80fd\u66f4\u5927,\u4f46\u662f\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6bcf\u4e2a\u7a0b\u5e8f\u83b7\u53d6\u4e0d\u5b8c\u5168\u7684\u95ee\u9898.\u8fd9\n#\u4e2a\u5199\u4e00\u4e2a\u51fd\u6570getInput()\u6765\u5b9e\u73b0.\n\n#\u7136\u540e\u6574\u4e2a\u8fc7\u7a0b\u5e94\u8be5\u662f\u7528\u6808\u6765\u6a21\u62df,\u6240\u4ee5\u5199\u4e00\u4e2a\u7c7bStack\u7528list\u6765\u6a21\u62df\u4e00\u4e0b\u6808.\n\n#\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6808,\u7528\u6765\u5224\u65ad\u5faa\u73af\u662f\u5426\u95ed\u5408,\u82e5\u5426,\u5219\u76f4\u63a5\u8fd4\u56deERR,\u8fd9\u4e2a\u7528\u51fd\u6570isERROR()\u6765\u5b9e\u73b0.\n\n#\u7136\u540e\u6211\u4eec\u518d\u4e00\u4e2a\u6808\u7528\u6765\u50a8\u5b58\u53d8\u91cf\u540d,\u5faa\u73af\u5f00\u59cb\u65f6\u538b\u5165,\u5faa\u73af\u7ed3\u675f\u65f6\u5f39\u51fa,\u538b\u5165\u540e\u68c0\u67e5\u6709\u6ca1\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20,\u5982\u679c\u6709\u5219\n#\u8fd4\u56deERR.\u8fd9\u4e2a\u5c31\u4e0d\u5355\u72ec\u6784\u9020\u51fd\u6570,\u800c\u662f\u76f4\u63a5\u653e\u5728isERROR()\u91cc,\u67e5\u91cd\u7684\u64cd\u4f5c\u5728Stack\u7c7b\u91cc\u9762\u7528\u5199\u4e00\u4e2a\u51fd\u6570isDuplicate()\n#\u6765\u5b9e\u73b0.\n\n#\u53e6\u4e00\u4e2a\u6808,\u7528\u6765\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6,\u8fd9\u4e2a\u90e8\u5206\u7528\u51fd\u6570timeComplexity()\u6765\u5b9e\u73b0.\n\n#\u6211\u4eec\u628a\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u5faa\u73af\u5d4c\u5957\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b.\n\n#x\u4e3a\u5e38\u6570\n#   y\u4e3a\u5e38\u6570    \n#       x <= y      \u2460\u7ee7\u7eed\u5faa\u73af \u4e0d\u589e\u52a0\u65f6\u95f4\u590d\u6742\u5ea6\n#       x > y       \u2461\u8df3\u8fc7\u5faa\u73af\n#   y\u4e3an            \u2462\u7ee7\u7eed\u5faa\u73af \u65f6\u95f4\u590d\u6742\u5ea6 + 1\n#x\u4e3an\n#   y\u4e3a\u5e38\u6570         \u2461\u8df3\u8fc7\u5faa\u73af\n#   y\u4e3an            \u2460\u7ee7\u7eed\u5faa\u73af \u4e0d\u589e\u52a0\u65f6\u95f4\u590d\u6742\u5ea6\n\n#\u8fd8\u6709\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u6709\u591a\u4e2a\u5faa\u73af\u5e76\u5217\u7684\u60c5\u51b5.\n\n#\u56e0\u4e3a\u591a\u4e2a\u5e76\u5217\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7531\u5176\u4e2d\u590d\u6742\u5ea6\u6700\u5927\u7684\u5faa\u73af\u51b3\u5b9a\u7684,\u56e0\u6b64\u53ef\u4ee5\u5206\u522b\u7b97\u51fa\u591a\u4e2a\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6,\u7136\u540e\n#\u53d6\u5176\u4e2d\u6700\u5927\u503c,\u4e5f\u5c31\u662f\u5f53\u4e00\u4e2a\u5faa\u73af\u7ed3\u675f\u65f6\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u5b58\u8d77\u6765\u518d\u8fdb\u884c\u6bd4\u8f83,\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u5c06\u5143\u7d20\u5165\u6808\u4e4b\u540e\u8bb0\u5f55\n#\u5f53\u524d\u6808\u4e2d\u5143\u7d20\u7684\u6570\u91cf,\u5c31\u53ef\u4ee5\u627e\u5230\u5165\u6808\u6b21\u6570\u6700\u591a\u7684\u5206\u652f.\n\n#\u7136\u800c\u6211\u5199\u5b8c\u624d\u53d1\u73b0\u4e0a\u9762\u7684\u601d\u8def\u9519\u4e86,\u6211\u4eec\u8003\u8651\u4e00\u79cd\u8f83\u590d\u6742\u7684\u60c5\u51b5,\u5c06\u5176\u7528\u5b57\u6bcd\u8868\u793a\u51fa\u6765\u518d\u5206\u6790\u4e00\u4e0b.\n\n#             |-->c\u2461--->e\u2462\n#a\u2460---->b\u2462--|\n#             |-->d\u2462--->f\u2460\n\n#\u53ef\u4ee5\u770b\u5230,\u5f53\u7a0b\u5e8f\u8fd0\u884c\u5230c\u65f6,\u4e0d\u80fd\u8fdb\u5165\u5faa\u73af,\u800c\u4e14\u8fd8\u8981\u8df3\u8fc7\u53ef\u4ee5\u8fdb\u5165\u5faa\u73af\u7684e,\u8fdb\u5165\u5faa\u73afd,\u5982\u679c\u76f4\u63a5break\u8df3\u51fa\u6574\u4e2a\u5faa\u73af\n#\u5c31\u65e0\u6cd5\u89e3\u6790d,\u5982\u679c\u60f3\u8981continue\u8df3\u8fc7\u8fd9\u4e2a\u5faa\u73af,\u53c8\u4e0d\u80fd\u786e\u5b9ac\u8fd9\u4e2a\u5206\u652f\u7684\u4ee3\u7801\u6709\u591a\u5c11\u884c,\u6240\u4ee5\u6211\u6700\u5f00\u59cb\u60f3\u7684\u5165\u6808\u4e00\u6b21\u5c31\n#\u65f6\u95f4\u590d\u6742\u5ea6 + 1\u662f\u4e0d\u53ef\u884c\u7684.\u800c\u4e14\u5982\u679c\u90a3\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528int\u6765\u50a8\u5b58\u4e86.\u56e0\u6b64\u5bf9\u4e8e\u2460\u2461\u2462\u8fd9\u4e09\u79cd\u60c5\u51b5\u6211\u4eec\u90fd\u9700\u8981\u7528\u6808\u8bb0\n#\u5f55,\u4e5f\u66f4\u65b9\u4fbf\u4e0e\u5faa\u73af\u7ed3\u675f\u6807\u5fd7\u5339\u914d.\n\n#\u4e3a\u4e86\u7406\u6e05\u601d\u8def,\u6211\u4eec\u5c06\u4e0a\u9762\u8fd9\u4e2a\u5faa\u73af\u7684A++\u4ee3\u7801\u81ea\u5df1\u5199\u4e00\u904d,\u7136\u540e\u4eba\u8111\u8fd0\u884c\n\n#1\n#10 O(n^2)\n#F a 3 5\n#F b 3 n\n#F c n 8\n#F e n n\n#E\n#E\n#F d 7 n\n#F f 7 7 \n#E\n#E\n#E\n#E\n\n#\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u60c5\u51b5\u2460\u65f6\u5c060\u538b\u5165\u6808,\u5728\u60c5\u51b5\u2461\u65f6\u5c06-1\u538b\u5165\u6808,\u5728\u60c5\u51b53\u65f6\u5c061\u538b\u5165\u6808,\u5728\u6bcf\u6b21\u5165\u6808\u524d\u7528Stack\u7c7b\u7684peek()\n#\u51fd\u6570\u6765\u67e5\u770b\u6808\u9876\u7684\u5143\u7d20\u503c\u662f\u5426\u4e3a-1,\u82e5\u662f\u5219\u4ee3\u8868\u8fd9\u4e2a\u5faa\u73af\u9700\u8981\u88ab\u8df3\u8fc7,\u4e5f\u5c06-1\u538b\u5165\u6808,\u8fd9\u4e2a\u5224\u65ad\u53ef\u4ee5\u5199\u5728push()\u91cc.\n\n#\u8981\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684,\u5c31\u5c06\u6808\u4e2d\u7684\u5143\u7d20\u5728\u6bcf\u4e00\u6b21\u538b\u5165\u6216\u5f39\u51fa\u65f6\u76f8\u52a0\u8fd9\u4e2a\u548c\u7684\u6700\u5927\u503c\u5c31\u662f\u65f6\u95f4\u590d\u6742\u5ea6,\u56e0\u4e3a\u6808\u4e2d\u6240\u6709\u7684\n#-1\u90fd\u88ab\u79fb\u9664(\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u6211\u5c31\u76f4\u63a5\u7528\u5217\u8868\u8ba1\u7b97\u548c\u7684\u65b9\u6cd5\u4e86,\u6bd5\u7adfpython\u91cc\u6ca1\u6709\u680823333.\n\n#\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u624b\u52a8\u5206\u6790\u4e00\u4e0b \u6808\u548c\u6808\u5143\u7d20\u4e4b\u548c\u7684\u53d8\u5316\u5c31\u662f\n\n#\u6808                               \u6808\u5143\u7d20\u4e4b\u548c\n#[0]                              0\n#[0, 1]                           1\n#[0, 1, -1]                       0\n#[0, 1, -1, -1]                   -1\n#[0, 1, -1]                       0\n#[0, 1]                           1\n#[0, 1, 1]                        2\n#[0, 1, 1, 0]                     2\n#[0, 1, 1]                        2\n#[0, 1]                           1\n#[0]                              0\n#[]                               0\n\n\n#\u6240\u4ee5\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u662fgetInput()\u83b7\u53d6\u8f93\u5165,\u7136\u540eisERROR()\u5224\u65ad\u662f\u5426\u95ed\u5408(\u8bed\u6cd5\u9519\u8bef1)\u548c\u5224\u65ad\u53d8\u91cf\u540d(\u8bed\u6cd5\u9519\u8bef2), \u518d\n#\u7528timeComplexity()\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6,\u4e0e\u5c0f\u660e\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f5c\u6bd4\u8f83,\u6700\u540e\u8f93\u51fa\u7ed3\u679c.\n\n#Stack()        \u5efa\u7acb\u4e00\u4e2a\u7a7a\u7684\u6808\u5bf9\u8c61\n#push()         \u628a\u4e00\u4e2a\u5143\u7d20\u538b\u5165\u5230\u6808\u7684\u6700\u9876\u5c42\n#pop()          \u5f39\u51fa\u6808\u6700\u9876\u5c42\u7684\u5143\u7d20,\u5e76\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\n#peek()         \u8fd4\u56de\u6700\u9876\u5c42\u7684\u5143\u7d20,\u5e76\u4e0d\u5220\u9664\u5b83\n#isEmpty()      \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n#size()         \u8fd4\u56de\u6808\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\n#clear()        \u6e05\u7a7a\u6808\u4e2d\u7684\u5143\u7d20\n#isDuplicate    \u68c0\u67e5\u6808\u4e2d\u6709\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\nclass Stack(object):\n    def __init__(self):\n        self.items = []\n    def push(self, item):\n        if self.peek() == -1:\n            self.items.append(-1)\n        else:\n            self.items.append(item)\n    def pop(self):\n        return self.items.pop(-1)\n    def peek(self):\n        if self.isEmpty() == False:\n            return self.items[-1]\n        else:\n            return None \n    def isEmpty(self):\n        if len(self.items) == 0:\n            return True\n        else:\n            return False\n    def size(self):\n        return len(self.items)\n    def clear(self):\n        self.items.clear()\n    def isDuplicate(self, item):\n        if self.items.count(item) > 1:\n            return True\n        else:\n            return False\n\ndef getInput():\n    n = int(input())\n    codes = [x * [] for x in range(n)]#\u521d\u59cb\u5316\u4e00\u4e0bn\u4e2a\u7b2c\u4e8c\u7ef4\u7684list\n    for x in range(n):#\u603b\u5171n\u6bb5\u4ee3\u7801\n        codes[x].append(input().split())#\u5148\u8bfb\u53d6\u6bcf\u6bb5\u4ee3\u7801\u7684\u7b2c\u4e00\u884c\n        for a in range(int(codes[x][0][0])):#\u518d\u6839\u636e\u8bfb\u53d6\u5230\u7684\u884c\u6570\u8bfb\u53d6\u5269\u4f59\u4ee3\u7801\n            codes[x].append(input().split())\n    return n, codes\n\ndef isERROR(code):\n    ic = Stack()\n    nc = Stack()\n    for a in code:\n        if a[0] == 'F':\n            ic.push('F')\n            nc.push(a[1])\n            if nc.isDuplicate(a[1]):\n                return True#True\u8868\u793a\u6709\u5f02\u5e38\n        if a[0] == 'E':\n            if ic.isEmpty():\n                return True\n            else:\n                ic.pop()\n                nc.pop()\n    if ic.isEmpty():\n        return False\n    else:\n        return True\n\ndef timeComplexity(code):\n    tc = Stack()\n    sum_list = [0]\n    for a in code:\n        if a[0] == 'F':\n            if a[2] != 'n':\n                a[2] = int(a[2])\n                if a[3] != 'n':\n                    a[3] = int(a[3])\n                    if a[2] <= a[3]:\n                        tc.push(0)\n                        sum_list.append(sum(tc.items))\n                    else:\n                        tc.push(-1)\n                        sum_list.append(sum(tc.items))\n                else:\n                    tc.push(1)\n                    sum_list.append(sum(tc.items))\n            else:\n                if a[3] != 'n':\n                    tc.push(-1)\n                    sum_list.append(sum(tc.items))\n                else:\n                    tc.push(0)\n                    sum_list.append(sum(tc.items))\n        if a[0] == 'E':\n            tc.pop()\n            sum_list.append(sum(tc.items))\n            max_sum = max(sum_list)\n    if max_sum == 0:\n        return 'O(1)'\n    else:\n        return 'O(n^' + str(max_sum) + ')'\n\nresult = []#\u8fd9\u662f\u6700\u7ec8\u8981\u8f93\u51fa\u7684\u7ed3\u679c\nn, codes =  getInput()\nfor x in range(n):\n    isErr = isERROR(codes[x])\n    if isErr == False:\n        tc = timeComplexity(codes[x])\n        if codes[x][0][1] == tc:\n            result.append('Yes')\n        else:\n            result.append('No')\n    else:\n        result.append('ERR')\nfor a in result:\n    print(a)\n```",
        "postTime": 1549202857,
        "uid": 177822,
        "name": "unlsycn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "~~\u8fd9\u7bc7\u9898\u89e3\u6765\u81ea\u4e00\u4e2a\u8c03\u4e86\u4e00\u4e0b\u5348\u6bd2\u7624\u9898\u7684\u849f\u84bb~~\n\n### \u8fd9\u662f\u4e00\u9053\u5927\u6a21\u62df\uff0c\u65e0\u8111\u4f46\u662f\u7ec6\u8282\u5f88\u591a\n\n\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u6761\u4ef6\uff1a\n\n\uff08$x$\uff0c$y$\u5206\u522b\u8868\u793a\u5faa\u73af\u5f00\u59cb\u7684\u53c2\u6570\u548c\u7ed3\u675f\u7684\u53c2\u6570\uff09\n1. $F$\u548c$E$\u4e92\u76f8\u5bf9\u5e94\uff0c\u53ef\u4ee5\u88ab\u770b\u4f5c\u62ec\u53f7\uff0c\u5982\u679c\u201c\u62ec\u53f7\u201d\u4e0d\u5339\u914d\uff0c\u8f93\u51fa$ERR$\uff08\u53ef\u4ee5\u53c2\u8003[P1739\u8868\u8fbe\u5f0f\u62ec\u53f7\u5339\u914d](https://www.luogu.org/problemnew/show/P1739)\uff09\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6a21\u62df\u8fc7\u7a0b\u4e2d\u6709\u7a7a\u6808\u51fa\u73b0\uff0c\u6216\u7ed3\u675f\u65f6\u6808\u4e0d\u4e3a\u7a7a\u3002\n2. \u5982\u679c\u5df2\u7ecf\u6709\u5b57\u6bcd\u88ab\u5360\u7528\uff0c\u8f93\u51fa$ERR$\u3002\n3. \u5982\u679c$x>y$\uff0c\u4e5f\u5c31\u662f\u5faa\u73af\u5f00\u59cb\u7684\u53c2\u6570\u5927\u4e8e\u7ed3\u675f\u53c2\u6570\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u65e0\u6548\u7684\uff0c\u4f46\u662f\u8003\u8651\u5230\u5224\u65ad$ERR$\u7684\u53ef\u80fd\uff0c\u8fd8\u8981\u5f80\u6808\u91cc\u5b58\u6570\u636e\u3002\n4. \u5982\u679c$x=y=\"n\"$\uff0c\u5c06\u5176\u89c6\u4e3a\u5e38\u6570\u3002\n5. \u82e5$(4)$\u4e0d\u6210\u7acb\uff0c\u4e14$x=\"n\"$\uff0c\u5219y\u4e00\u5b9a\u662f\u5e38\u6570\u9879\uff0c\u5219\u6709$x>y$\uff0c\u7b26\u5408$(3)$\u7684\u6761\u4ef6\uff0c\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u5747\u65e0\u6548\u3002\n6. \u82e5$(4)(5)$\u5747\u4e0d\u6210\u7acb\uff0c\u4e14$y=\"n\"$\uff0c\u5219$x$\u4e00\u5b9a\u4e3a\u5e38\u6570\u9879\uff0c\u5faa\u73af\u4ece\u5c0f\u5230\u5927\uff0c\u4e14\u662f\u4e00\u6b21$O(n)$\u5faa\u73af\uff0c\u80fd\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u3002\n7. \u82e5$(4)(5)(6)$\u5747\u4e0d\u6210\u7acb\uff0c\u5219$x$\u548c$y$\u90fd\u662f\u5e38\u6570\uff0c\u82e5\u6ca1\u6709\u51fa\u73b0$(3)$\u7684\u60c5\u51b5\uff0c\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u6709\u6548\uff0c\u4e14\u8be5\u64cd\u4f5c\u4e0d\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u3002\n8. \u53ef\u80fd\u6709\u591a\u4e2a\u5faa\u73af\uff0c\u56e0\u6b64\u6bcf\u6b21\u6709\u8d21\u732e\u7b54\u6848\u51fa\u6808\u65f6\uff0c\u4e5f\u5c31\u662f\u590d\u6742\u5ea6\u53d8\u5c0f\u65f6\uff0c\u8981\u548c\u6700\u7ec8\u7b54\u6848\u53d6$max$\u3002\n9. \u7531\u4e8e\u662f\u591a\u7ec4\u6570\u636e\uff0c\u4e14\u6700\u540e\u7684\u7ed3\u679c\u4e0d\u4e00\u5b9a\u5b8c\u5168\u56de\u6eaf\uff08$ERR$\u60c5\u51b5\uff09\uff0c\u52a1\u5fc5\u8981\u628a\u6240\u6709\u6570\u636e\u521d\u59cb\u5316\uff0c\u7279\u522b\u662f$STL$\u7684\u6808\uff0c~~\u6211\u5c31\u88ab\u5751\u4e86~~\u3002\n\n$AC$\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint T,l,ans,goal,fin,wuxiao;\n//ans\u4e3a\u5f53\u524d\u7684\u590d\u6742\u5ea6\uff0cfin\u4e3a\u6700\u7ec8\u7b54\u6848\uff0cgoal\u4e3a\u76ee\u6807\u8fbe\u6210\u7684\u590d\u6742\u5ea6\n//wuxiao\u7528\u6765\u8ba1\u7b97\u65e0\u6548\u7684\u5c42\u6570\uff0c\u53ea\u6709\u5c42\u6570\u4e3a0\u624d\u53ef\u4ee5\u7ee7\u7eed\u5224\u65ad\u6709\u65e0\u8d21\u732e \nstring o;//\u8f93\u5165\u7684\u590d\u6742\u5ea6 \nchar c;//\u5f53\u524d\u7684\u64cd\u4f5c(F/E) \nbool vis[30],flag;//vis\u8868\u793a\u5b57\u6bcd\u662f\u5426\u88ab\u8bbf\u95ee\uff0cflag\u8868\u793a\u662f\u5426\u7f16\u8bd1\u9519\u8bef \ninline int getnum(string tmp,int s,int e)\n{\n\tint ret=0;\n\tfor(int i=s;i<e;i++)\n\t{\n\t\tret*=10;\n\t\tret+=tmp[i]-'0';\n\t}\n\treturn ret;\n}//getnum\u51fd\u6570\u7528\u6765\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57 \nstruct node\n{\n\tchar c;//\u5f53\u524d\u5b57\u6bcd \n\tstring s,e;//\u5f00\u59cb/\u7ed3\u675f\u53c2\u6570\uff0c\u5373x\u4e0ey \n\tbool wuxiao,youxiao;//\u65e0\u6548\u548c\u6709\u6548\uff0c\u5373\u6807\u8bb0 \u5faa\u73af\u65e0\u6548 \u548c \u5bf9\u7b54\u6848\u6709\u8d21\u732e \u7684\u60c5\u51b5 \n}t,tmp;\nstack<node>q;//\u5148\u8fdb\u540e\u51fa\u7528\u6808\u5b58\u50a8\uff08STL\u5927\u6cd5\u597d\uff09 \nint main()\n{\n\tcin>>T;\n\twhile(T--)\n\t{\n\t\tcin>>l>>o;\n\t\tif(o==\"O(1)\")goal=0;//\u7279\u5224O(1)\u60c5\u51b5 \n\t\telse goal=getnum(o,4,o.size()-1);//getnum\u6d3e\u4e0a\u7528\u573a \n\t\tans=fin=wuxiao=0;\n\t\tflag=false; \n\t\tmemset(vis,false,sizeof(vis));\n\t\twhile(!q.empty())q.pop();\n\t\t//\u521d\u59cb\u5316\n\t\twhile(l--)\n\t\t{\n\t\t\tcin>>c;\n\t\t\tif(c=='F')\n\t\t\t{\n\t\t\t\tcin>>t.c>>t.s>>t.e;\n\t\t\t\tt.wuxiao=t.youxiao=false;//\u521d\u59cb\u5316 \n\t\t\t\tif(flag)continue;//\u5982\u679c\u5df2\u7ecf\u7f16\u8bd1\u9519\u8bef\u76f4\u63a5\u8df3\u8fc7 \n\t\t\t\telse if(vis[t.c-'a'])//\u5224\u65ad(2) \n\t\t\t\t\tflag=true;\n\t\t\t\tif(t.s==\"n\"&&t.e==\"n\")//\u5224\u65ad(4) \n\t\t\t\t\tq.push(t),vis[t.c-'a']=true;\n\t\t\t\telse if(t.s==\"n\")//\u5224\u65ad(5) \n\t\t\t\t\twuxiao++,t.wuxiao=true,q.push(t);\n\t\t\t\telse if(t.e==\"n\")//\u5224\u65ad(6) \n\t\t\t\t{\n\t\t\t\t\tvis[t.c-'a']=true;\n\t\t\t\t\tif(wuxiao==0)\n\t\t\t\t\t\tt.youxiao=true,ans++;\n\t\t\t\t\tq.push(t);\n\t\t\t\t}\n\t\t\t\telse if(getnum(t.s,0,t.s.size())<=getnum(t.e,0,t.e.size()))//\u5224\u65ad(7)true \n\t\t\t\t\tq.push(t),vis[t.c-'a']=true;\n\t\t\t\telse//\u5224\u65ad(7)false\n\t\t\t\t\twuxiao++,t.wuxiao=true,q.push(t);\n\t\t\t}\n\t\t\telse if(c=='E')\n\t\t\t{\n\t\t\t\tif(flag)continue;//\u5982\u679c\u5df2\u7ecf\u7f16\u8bd1\u9519\u8bef\u76f4\u63a5\u8df3\u8fc7 \n\t\t\t\tif(q.empty())\n\t\t\t\t{\n\t\t\t\t\tflag=true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttmp=q.top();\n\t\t\t\tq.pop();\n\t\t\t\tif(tmp.wuxiao)//\u5224\u65ad(3)\t \n\t\t\t\t{\n\t\t\t\t\twuxiao--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(tmp.youxiao)//\u5224\u65ad(8) \n\t\t\t\t{\n\t\t\t\t\tfin=max(fin,ans);\n\t\t\t\t\tans--;\n\t\t\t\t}\n\t\t\t\tvis[tmp.c-'a']=false;\n\t\t\t}\n\t\t\telse flag=true;//\u6beb\u65e0\u7528\u5904\u7684\u9519\u8bef\u5224\u65adqwq \n\t\t}\n\t\tif(!q.empty())flag=true;//\u6700\u540e\u5224\u65ad\u5faa\u73af\u662f\u5426\u5168\u90e8\u6267\u884c\u5b8c\u6bd5 \n\t\tif(flag)\n\t\t\tputs(\"ERR\");\n\t\telse if(fin==goal)\n\t\t\tputs(\"Yes\");\n\t\telse puts(\"No\");//\u8f93\u51fa \n\t}\n\treturn 0;\n}qwq\n```\n~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7f29\u8fdb\u6709\u4e9b\u9505\uff0c\u5927\u5bb6\u5c31\u5f53\u65e0\u4e8b\u53d1\u751f~~",
        "postTime": 1549198889,
        "uid": 80299,
        "name": "crpboy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6bd2\u7624\u7684\u6a21\u62df\n\n\u6ca1\u4e86\u2026\u2026\n\n```\n//3952\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<string>\n#include<stack>\n#include<iostream>\nusing namespace std;\nstruct num{\n    bool is_char;\n    int n;\n};\n//\u4e0b\u9762\u7684\u6570\u636e\u8fd4\u56de\u7c7b\u578b\uff0c\u5206\u522b\u8868\u793a\u662f\u4e0d\u662f\u5b57\u7b26\u548c\u4ee3\u8868\u6570\u5b57\nstruct line{\n    bool f;\n    int x,y;\n};\n//f\u8868\u662f\u5426\u4e3aFor,x,y\u5206\u522b\u4e3aFor\u7684\u4e24\u4e2a\u6570\nline code[101];//\u4ee3\u7801\nint N,now,E,T;\nmap<string , bool> used;//\u8fd9\u91cc\u6211\u50bb\u4e86\uff0c\u6ca1\u770b\u5230\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\nint max(int a,int b){\n    return a>b?a:b;\n}\nchar gc(bool is){\n    char a;\n    if(is) scanf(\" %c\",&a);\n    else scanf(\"%c\",&a);\n    return a;\n}//getchar\nnum rn(){\n    char a;\n    num ans;\n    scanf(\" %c\",&a);\n    if(a=='n')  ans.is_char=true;\n    else{\n        ans.is_char=false;\n        ans.n=a-'0';\n        while(scanf(\"%c\",&a)!=EOF && a!=' ' && a!='\\n' && a!=')') ans.n=ans.n*10+a-'0';\n    }\n    return ans;\n}//\u83b7\u53d6For\u53c2\u6570\uff0c\u8fd4\u56denum\u578b\nvoid co(){\n    gc(true),gc(true);\n    if(gc(true)=='1')   E=0;\n    else    gc(true),E=rn().n;\n    gc(false);\n}//\u83b7\u53d6\u590d\u6742\u5ea6\uff0c\u5b58\u5728E\u4e2d\uff0c\u81ea\u5df1\u4f53\u4f1a\uff08\u6a21\u62df\uff09\nint gt(int a){//\u5728\u975eERR\u65f6\u5224\u65ad\u6b63\u8bef\n    int now=a,pp=1;\n    while(pp){\n        ++now;\n        if(code[now].f)   ++pp;\n        else    --pp;\n    }\n    return now;\n}//\u7b97\u51fa\u5f53\u524da\u884c\u7684\u5339\u914d\u884c\uff08F\u914dE\uff09\nvoid cr(){\n    int o=0,now=0,oo=0;\n    //o\u4e3a\u76ee\u524d\u590d\u6742\u5ea6\uff0cnow\u4e3a\u76ee\u524d\u904d\u5386\u884c,oo\u4e3a\u6700\u5927\u590d\u6742\u5ea6\n    stack<bool> nn;//\u590d\u6742\u5ea6\u6808\uff0c\u8868\u793a\u6240\u6709For\u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u91cc\u5e38\u6570\u590d\u6742\u5ea6\u548c\u4e0d\u53ef\u80fd\u8bbe\u4e3afalse\uff0c\u5176\u4f59\u8bbe\u4e3atrue\n    /*\u4e3a\u4f55\u7528\u6808\n    \u7531\u4e8e\u5728\u5e38\u6570\u590d\u6742\u5ea6\u4e2d\uff0c\u590d\u6742\u5ea6\u4e3a0\u4f46\u8fd8\u9700\u904d\u5386\uff0c\n    \u800c\u4e00\u6b21\u590d\u6742\u5ea6\u4e2d\u590d\u6742\u5ea6\u4e3a1\n    \u4e3a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5176\u8f6c\u6362\u4e3a\u62ec\u53f7\u5339\u914d\u95ee\u9898\uff0c\n    \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u78b0\u5230E\u65f6\uff0cstack\u9876\u7aef\u5bf9\u5e94\u7684\u5c31\u662f\u5b83\u5bf9\u5e94\u7684F\u7684\u590d\u6742\u5ea6\n    */\n    while(now<N){\n        if(code[now].f){\n            if(code[now].x>code[now].y)  now=gt(now)-1,nn.push(0);//\u4e0d\u884c\uff0c\u76f4\u63a5\u8df3\u884c\n            else if(code[now].y==101 && code[now].x!=101)    ++o,nn.push(1);//y\u662fn\uff08n\u7528101\u8868\u793a\uff09\u800cx\u4e0d\u662f\uff0c\u52a0\u4e0a\u590d\u6742\u5ea6\n            else    nn.push(0);//\u586b\u51650\u5e76\u7ee7\u7eed\n            ++now;\n        }\n        else{\n            o-=nn.top();//\u4e0a\u9762\u8bf4\u5230\n            nn.pop();\n            ++now;\n        }\n        oo=max(oo,o);\n        if(oo>E){//\u5df2\u7ecf\u8d85\u8fc7\n            printf(\"No\\n\");\n            return;\n        }\n    }\n    if(oo==E)   printf(\"Yes\\n\");\n    else    printf(\"No\\n\");\n    return;\n}\nvoid rc(){\n    scanf(\"%d\",&N);\n    co();//E\u7684\u5904\u7406\n    memset(code,0,sizeof(code));\n    used.clear();//\u53d8\u91cf\n    stack<string> now;//\u5728\u78b0\u5230E\u65f6\u77e5\u9053\u54ea\u4e00\u4e2a\u53d8\u91cf\u8981\u5e9f\u9664\uff0c\u9053\u7406\u548c\u5339\u914d\u4e00\u6837\n    int pd=0;//F\u7684\u6570\u91cf-E\u7684\u6570\u91cf\n    bool is=true;//\u6b63\u786e\u4e0e\u5426\n    for(int i=0;i<N;i++){\n        char a;\n        a=gc(true);\n        if(a=='F'){//\u5faa\u73af\u5f00\u59cb\n            code[i].f=true;//\u662f\u5faa\u73af\n            string q;\n            cin >> q;//\u53d8\u91cf\n            num qwq;\n            qwq=rn();\n            if(qwq.is_char)    code[i].x=101;//\u662fN\uff0c\u8bbe\u4e3a101\n            else    code[i].x=qwq.n;\n            qwq=rn();\n            if(qwq.is_char)    code[i].y=101;/\u540c\u7406\n            else    code[i].y=qwq.n;\n            if(!is)  goto Br;//\u4e0d\u884c\uff0c\u76f4\u63a5\u8df3\u8fc7\n            if(used[q]){//\u53d8\u91cf\u7528\u8fc7\n                printf(\"ERR\\n\");\n                is=false;\n            }\n            else{//\u52a0\u5165\u53d8\u91cf\n                used[q]=true;\n                now.push(q);\n            }\n            ++pd;//F\u591a\u4e861\n        }\n        else{\n            code[i].f=false;//\u975eF\n            if(!is)  goto Br;//\u8df3\u8fc7\n            if(!pd){//\u518d\u51cf\u5c31\u6210-1\u4e86\uff0cE\u591a\u4e8eF\u2026\u2026\n                printf(\"ERR\\n\");\n                is=false;\n            }\n            else{\n                --pd;\n                used[now.top()]=false;//\u6e05\u9664\n                now.pop();\n            }\n        }\n        Br:;\n    }\n    if(pd && is){//F\u591a\u4f46\u6ca1\u5224\u65ad\u8f93\u51fa\n        is=false;\n        printf(\"ERR\\n\");\n    }\n    if(!is) return;//ERR\u4e86\n    cr();//\u5224\u65ad\n}\nint main(){\n\t//IO\n    scanf(\"%d\",&T);\n    while(T--)  rc();\n}\n```",
        "postTime": 1541259978,
        "uid": 60864,
        "name": "tiger2005",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# \u65f6\u95f4\u590d\u6742\u5ea6\nSTO @LuoGu\u7ba1\u7406\u5458(dalao) ORZ\n\n------------\n## \u5927\u4f53\u6846\u67b6\n### \uff08\u4e00\uff09\u8f93\u5165\u3001\u521d\u59cb\u5316\u5904\u7406\u4e0e\u8f93\u51fa\n\u9898\u76ee\u7684\u8f93\u5165\u6570\u636e\u683c\u5f0f\u53d9\u8ff0\u5982\u4e0b\uff1a\n```cpp\nL  O(n^k)\nF a * *\n\tF b * *\n    \t...\n    E\nE\n```\n\u7279\u6b8a\u5730\uff0c\u53ef\u80fd\u4f1a\u6709 $O(1)$ \u7684\u6570\u636e\u51fa\u73b0\u3002\n\u56e0\u6b64\uff0c\u5e94\u5f53\u9996\u5148\u5bf9\u6240\u8bfb\u5165\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u51fd\u6570 $int$$ $cutStr()$ \u8fdb\u884c\u5904\u7406\uff1a\n```cpp\nint cutStr(string T)\n{\n    if(T == \"O(1)\")\n        return 0;\n\n    char *ch = new char[MAXN];\n\n    int top = 0;\n    for(int i=4;i<=(int) T.length()-2;i++) // O(n^abc)\n    {\n        ch[top++] = T[i];\n    }\n\n    int r = atoi(ch);\n\n    delete[] ch;\n    \n    return r;\n}\n\n```\n\u8be5\u51fd\u6570\u5c06\u4f20\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u5272\u4e0e\u5408\u6210\uff0c\u7559\u4e0b $O(n^k)$ \u4e2d\u7684\u6570\u5b57 $k$ \u540e\uff0c\u5229\u7528 $atoi()$ \u51fd\u6570\u5b9e\u73b0 $char*$ -> $int$ \u8f6c\u6362\uff0c\u5e76\u8fd4\u56de\u3002\n### \uff08\u4e8c\uff09$main()$ \u51fd\u6570\u5927\u4f53\u601d\u8def\n\u8bfb\u5165\u3002\n\n\u5982\u679c\u662f\u5b57\u7b26 $F$ \uff0c\u7ee7\u7eed\u8bfb\u5165 $a$ $b$ $c$ \uff0c\u68c0\u67e5\uff1a\u5982\u679c\u5f53\u524d\u6240\u8bfb\u53d8\u91cf $a$ \u5df2\u7ecf\u88ab\u5b9a\u4e49\u8fc7\uff0c\u90a3\u4e48\u7a0b\u5e8f\u51fa\u73b0\u9519\u8bef\uff08$ERR$\uff09\u3002**\u6ce8\u610f\uff0c\u5f53\u4f60\u5224\u65ad\u51fa\u73b0 $ERR$ \u65f6\u3002\u5e94\u5f53\u7ee7\u7eed\u8bfb\u5230\u8be5\u7ec4\u6570\u636e\u672b\u5c3e\uff0c\u4e00\u65e6\u4f60\u5728\u8fd9\u91cc\u505c\u6b62\u4e86\u5faa\u73af\uff0c\u5269\u4f59\u90e8\u5206\u5c06\u7559\u7ed9\u4e0b\u4e00\u7ec4\u6570\u636e\u8bfb\u5165\uff0c\u9020\u6210\u9519\u8bef\u3002**\u5982\u679c\u5f53\u524d\u53d8\u91cf\u672a\u88ab\u5b9a\u4e49\u8fc7\uff0c\u90a3\u4e48\u8be5\u5faa\u73af\u5408\u6cd5\uff0c\u8fdb\u5165 $void$ __ $update$() \u51fd\u6570\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u5982\u679c\u662f\u5b57\u7b26 $E$ \uff0c\u6e05\u9664\u4e0a\u4e00\u4e2a\u5faa\u73af\u53d8\u91cf\u3002\n\n\u5f53\u5168\u90e8\u5904\u7406\u5b8c\u6210\u65f6\uff0c\u5c06\u83b7\u5f97\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u6d4b\u8bd5\u6570\u636e\u6240\u7ed9\u51fa\u7684\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u3002\n\n### \uff08\u4e09\uff09\u5982\u4f55\u5728\u4e0d\u65ad\u66f4\u65b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e2d\u9009\u503c\n\n$main()$ \u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49 $int$ $T=0$ \u4ee3\u8868\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^k)$ \u4e2d\u7684\u6307\u6570\u9879\uff0c\u5e76\u5728\u66f4\u65b0\u51fd\u6570\u4e2d\u52a8\u6001\u5730\u8ba1\u7b97\u5f53\u524d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u6bcf\u5f53 $T$ \u589e\u52a0\u5373 $T = T + 1$ \u65f6\uff0c\u4f7f $ans = max ( ans , T ) $ \uff0c\u5219\u5f53\u5faa\u73af\u5168\u90e8\u7ed3\u675f\u65f6\uff0c $ans$ \u5fc5\u4e3a\u8be5\u7a0b\u5e8f\u771f\u5b9e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u66f4\u65b0\u51fd\u6570\u4e2d $T$ \u7684\u66f4\u65b0\u6761\u4ef6\u4e3a\uff1a\u5f53\u5faa\u73af\u6761\u4ef6\u5408\u6cd5\u3001\u5faa\u73af\u4e0a\u754c\u4e3a $n$ \u65f6\uff0c $T = T + 1$\uff1b**\u7279\u6b8a\u7684\uff0c\u5f53\u5faa\u73af\u4e0b\u754c\u4e0e\u4e0a\u754c\u5747\u4e3a $n$ \u65f6\uff0c\u8be5\u5faa\u73af\u6548\u7387\u4e3a $O(1)$ \uff0c\u6b64\u65f6 $T$ \u4e0d\u66f4\u65b0**\u3002\n\n\u6e05\u9664\u51fd\u6570\u4e2d $T$ \u7684\u66f4\u65b0\u6761\u4ef6\u4e3a\uff1a\u5982\u679c\u5f53\u524d\u6808\u9876\u7684\u5faa\u73af\u5408\u6cd5\u3001\u5faa\u73af\u4e0a\u754c\u4e3a $n$ \u65f6\uff0c $T = T - 1$ \uff0c\u5176\u4ed6\u60c5\u51b5\u5747\u4e0d\u5bf9 $T$ \u4f5c\u66f4\u6539\u3002\u539f\u56e0\u662f\uff0c**\u672c\u9898\u4e2d\u6240\u6709\u5faa\u73af\u4e0a\u754c\u4e3a\u5e38\u6570\u7684\u5faa\u73af\u7684\u590d\u6742\u5ea6\u5747\u88ab\u5ffd\u7565**\u3002\n\n\u5f53\u8be5\u6bb5\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5982\u679c $ans = 0$ \uff0c\u8868\u660e\u8be5\u7a0b\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(1)$ \u3002**\u5982\u679c\u4f60\u91c7\u53d6\u7684\u662f\u5c06 $ans$ \u4e0e\u6d4b\u8bd5\u6570\u636e\u6240\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u8fdb\u884c\u6bd4\u8f83\u7684\u65b9\u6cd5\uff0c\u6b64\u65f6\u5e94\u5f53\u4f7f $ans = 1$\u3002**\n\n### \uff08\u56db\uff09\u66f4\u65b0\u51fd\u6570 \u2014 $void$ __ $update()$\n\n\u4f20\u5165\u76f8\u5173\u53c2\u6570\u540e\uff0c\u5c06 $char*$ \u7c7b\u578b\u7684\u5faa\u73af\u754c\u9650\u8f6c\u6362\u6210 $int$ \u578b\u5c06\u4f1a\u66f4\u52a0\u65b9\u4fbf\uff0c\u4e0d\u59a8\u4f7f $n = 101$\u3002\n\n\u5982\u679c\u5f53\u524d\u66f4\u65b0\u5bf9\u8c61\u5408\u6cd5\uff0c\u5c06\u5176\u5165\u6808\u3002\u5224\u65ad\uff1a\u5982\u679c\u5904\u7406\u5bf9\u8c61\u662f\u5185\u90e8\u5faa\u73af\uff0c\u5bf9 $T$ \u4f5c\u66f4\u65b0\uff1b\u5982\u679c\u5904\u7406\u5bf9\u8c61\u662f\u6700\u5916\u90e8\u7684\u7b2c\u4e00\u5c42\u5faa\u73af\uff0c\u5bf9 $T$ \u521d\u59cb\u5316\u3002\n\n\u5982\u679c\u5f53\u524d\u66f4\u65b0\u5bf9\u8c61\u4e0d\u5408\u6cd5\uff0c\u4ecd\u7136\u5c06\u5176\u5165\u6808\uff0c\u4f46\u4e0d\u5bf9 $T$ \u505a\u51fa\u4efb\u4f55\u66f4\u65b0\uff0c\u5c06\u975e\u6cd5\u5faa\u73af\u7684\u8ba1\u6570\u5668\u589e\u4e00\uff0c\u5373 $isLegal = isLegal + 1$\u3002\n\n### \uff08\u4e94\uff09\u6e05\u9664\u51fd\u6570 \u2014 $void$ __ $clean()$\n\n\u8fdb\u5165\u8be5\u51fd\u6570\u65f6\u7acb\u5373\u5224\u65ad\uff1a\u5982\u679c\u5f53\u524d\u6808\u4e2d\u5df2\u65e0\u5faa\u73af\uff0c\u4f46\u4ecd\u7136\u8bf7\u6c42\u6e05\u9664\u6808\u9876\u5faa\u73af\uff0c\u5219\u7a0b\u5e8f\u51fa\u73b0 $ERR$\u3002\n\n\u5bf9\u6808\u9876\u5faa\u73af\u8fdb\u884c\u6e05\u7406\u3002\u5982\u679c\u6e05\u7406\u4e4b\u540e\u6808\u4e3a\u7a7a\uff0c\u5c06\u533a\u5206\u5185\u5916\u5faa\u73af\u7684\u6807\u8bb0\u4f5c\u51fa\u66f4\u6539\uff0c\u5373\u5bf9\u4e0b\u4e00\u4e2a\u5faa\u73af\u7684\u5d4c\u5957\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5373 $ifAdd = false$\u3002\u5982\u679c\u6e05\u7406\u4e4b\u540e\u6808\u4e2d\u4ecd\u7559\u6709\u5faa\u73af\uff0c\u5219\u5224\u65ad\uff1a\u5f53\u6240\u5904\u7406\u7684\u5faa\u73af\u5408\u6cd5\u5e76\u4e14\u5faa\u73af\u4e0a\u754c\u4e3a $n$ \u65f6\uff0c $T = T - 1$\u3002**\u6ce8\u610f\uff0c\u5f53\u5faa\u73af\u4e0a\u754c\u4e3a\u5e38\u6570\u65f6\uff0c\u4e0d\u5bf9 $T$ \u4f5c\u4efb\u4f55\u66f4\u6539\uff0c\u56e0\u4e3a\u5728\u66f4\u65b0\u51fd\u6570\u4e2d\uff0c\u5faa\u73af\u4e0a\u754c\u4e3a\u5e38\u6570\u65f6\uff0c\u5e76\u6ca1\u6709\u5bf9\u53d8\u91cf $T$ \u4f5c\u51fa\u66f4\u65b0**\u3002\n\n\u4e0a\u8ff0\u884c\u4e3a\u5904\u7406\u5b8c\u6210\u540e\uff0c\u5982\u679c\u975e\u6cd5\u5faa\u73af\u8ba1\u6570\u5668\u4e0d\u4e3a $0$ \uff0c\u5219\u8bc1\u660e\u8be5\u6b21\u5904\u7406\u7684\u5faa\u73af\u5fc5\u4e3a\u975e\u6cd5\u5faa\u73af\uff0c\u5219\u4f7f $isLegal = isLegal - 1$\u3002\n\n### \uff08\u516d\uff09\u4ee3\u7801\u53ca\u53d8\u91cf\u8bf4\u660e\n\n$int$ $T = 0$\n\n\u7528\u4e8e\u5728\u66f4\u65b0\u51fd\u6570\u53ca\u6e05\u9664\u51fd\u6570\u4e2d\u52a8\u6001\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u53d8\u91cf\n\n$int$ $ans = 0$\n\n\u7528\u4e8e\u66f4\u65b0\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u53d8\u91cf\n\n$int$ $Tm$ \n\n\u7528\u4e8e\u627f\u63a5\u5bf9\u6570\u636e\u4e2d\u6240\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5904\u7406\u8fc7\u540e\u8fd4\u56de\u7684\u6574\u6570\u503c\n\n$bool$ $ifAdd = true$ \n\n\u5185\u5916\u5faa\u73af\u6807\u8bb0\u7b26\u3002 $true$ \u4ee3\u8868\u201c\u53ef\u4ee5\u5c06 $T$ \u7ee7\u7eed\u52a0\u201d\uff0c\u5373\u5185\u5faa\u73af\uff1b\u540c\u7406 $false$ \u4ee3\u8868\u6700\u5916\u5c42\u5faa\u73af\n\n$bool$ $isError = false$\n\n\u662f\u5426\u51fa\u73b0\u9519\u8bef $ERR$ \u3002\u5982\u679c\u503c\u4e3a $true$ \u4ee3\u8868\u8be5\u7a0b\u5e8f\u6bb5\u51fa\u73b0\u4e86\u81f4\u547d\u9519\u8bef\uff0c\u4e0d\u5fc5\u518d\u8fdb\u884c\u201c\u66f4\u65b0 \u2014 \u6e05\u9664\u201d\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u5c06\u8be5\u7a0b\u5e8f\u6bb5\u7684\u6570\u636e\u8bfb\u5b8c\u5373\u53ef\n\n$int$ $isLegal = 0$\n\n\u975e\u6cd5\u5faa\u73af\u8ba1\u6570\u5668\n\n$stack<pair<char,bool>$ $>$ $S$\n\n\u5b58\u50a8\u5faa\u73af\u4f53\u7684\u6808\u3002\u6808\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a $pair<char,bool>$ \u7c7b\u578b\uff0c\u5206\u522b\u7528\u4e8e\u5b58\u50a8\u5faa\u73af\u53d8\u91cf\u3001\u5224\u65ad\u8be5\u5faa\u73af\u4e0a\u754c\u662f\u5426\u4e3a $n$\n\n$static$ $int$ $V[MAXN]$\n\n\u7528\u4e8e\u5224\u65ad\u53d8\u91cf\u662f\u5426\u91cd\u590d\uff0c\u5e76\u7edf\u8ba1\u91cd\u590d\u7684\u6b21\u6570\u3002\u8be5\u6570\u7ec4\u4e0b\u6807\u4e3a $char$ \u7c7b\u578b\u53d8\u91cf\u5bf9\u5e94\u7684 ASCII \u7801\n\n------------\n## \u7a0b\u5e8f\u5c55\u793a\n\u6211\u597d\u83dc\u554a555555555\n\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <stack>\n#include <cstdlib>\n#define __mst(X,Y) memset(X,Y,sizeof(X))\nusing namespace std;\nconst int MAXN = 10010;\nint timet = 0;\nint cutStr(string T)\n{\n    if(T == \"O(1)\")\n        return 0;\n\n    char *ch = new char[MAXN];\n\n    int top = 0;\n    for(int i=4;i<=(int) T.length()-2;i++) // O(n^abc)\n    {\n        ch[top++] = T[i];\n    }\n\n    int r = atoi(ch);\n\n    delete[] ch;\n    \n    return r;\n}\nint ASCII(char c)\n{\n    return (int) c;\n}\nbool __check(char opr,int *V)\n{\n    int __ascii = ASCII(opr);\n    return (V[__ascii] != 0) ? false : true;\n}\ninline void __update(int *V,stack<pair<char,bool> > &S,char a,char *chb,char *chc,int &T,int &ans,bool &ifAdd,int &isLegal)\n{\n\tint b,c;\n\tb = atoi(chb);\n\tc = atoi(chc);\n\tif(chb[0] == 'n') b = 101;\n\tif(chc[0] == 'n') c = 101;\n\t\n\tif(b <= c and isLegal == 0)\n\t{\n\t    S.push(make_pair( a, (chc[0] == 'n' ? true : false) ));\n\t    V[ ASCII(a) ] += 1;\n\t\n\t    if(ifAdd == true)\n\t    {\n\t    \tif( c == 101 and b != c )\n\t    \t{\n\t        \tT += 1;\n\t        \tans = max(ans , T);\n\t        }\n\t    }\n\t    else if(ifAdd == false)\n\t    {\n\t        if( c == 101 ) \n\t\t\t\tT = 1;\n\t\t\telse\n\t\t\t\tT = 0;\n\t        ifAdd = true;\n\t    }\n\t}\n\telse // No para 'a' before , and this can't be used legally \n\t{\n\t\tisLegal += 1;\n\t\tS.push(make_pair(a,false));\n\t\tV[ ASCII(a) ] += 1;\n\t\t// this loop can't survive\n\t}\n}\ninline void __clean(int *V,stack<pair<char,bool> > &S,int &T,bool &ifAdd,bool &isError,int &isLegal)\n{\n\tif( S.empty() == true )\n\t{\n\t\tisError = true;\n\t\treturn;\n\t}\n\t\n    char c = S.top().first;\n    bool bl = S.top().second;\n    S.pop();\n\n\tint __ascii = ASCII(c);\n\tV[ __ascii ] -= 1;\n\t\n\tif(S.empty() == true)\n\t{\n\t    ifAdd = false;\n\t}\n\telse \n\t{\n\t    if( isLegal == 0 and bl == true ) T -= 1;\n\t}\n\n\tif( isLegal > 0 ) isLegal -= 1;\n}\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin);\n    //freopen(\"out.txt\",\"w\",stdout);\n\n    int t;\n    cin>>t;\n    for(int _i=1; _i<=t; _i++)\n    {\n        int ans = 0 , T = 0; // O(n^T)\n        stack<pair<char,bool> > S;\n\n        static int V[MAXN];\n        __mst(V,0);\n\n        int L;\n        string Tm;\n        cin>>L>>Tm;\n        int intTm = cutStr(Tm);\n\n        bool ifAdd = true , isError = false;\n        int isLegal = 0;\n        for(int i=1;i<=L;i++)\n        {\n            char opr;\n            cin>>opr;\n            if(opr == 'F')\n            {\n                char a; // i\n\t\t\t\tchar *b = new char[MAXN]; // x\n\t\t\t\tchar *c = new char[MAXN]; // y\n\t\t\t\t\n                cin>>a>>b>>c;\n\n                if(__check(a,V) == false or isError == true)\n                {\n                    isError = true;\n                    continue;\n                }\n\n                __update(V,S,a,b,c,T,ans,ifAdd,isLegal);\n            }\n            else \n            {\n                __clean(V,S,T,ifAdd,isError,isLegal);\n            }\n        }\n\t\t\n        if( S.empty() == false or isError == true)\n            cout<<\"ERR\"<<endl;\n        else if( intTm != ans )\n        \tcout<<\"No\"<<endl;\n        else if( S.empty() == true and intTm == ans )\n            cout<<\"Yes\"<<endl;\n        else\n        {\n            cout<<\"Unknown Error.Please check the program again.\"<<endl;\n        }\n        //cout<<\"Input Time = \"<<intTm<<\"\\nOutput Time = \"<<ans<<endl;\n\n    }\n\n    return 0;\n}\n\n```\n\n\n------------\n\n",
        "postTime": 1541150576,
        "uid": 29396,
        "name": "SingleTicket",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "pascal\u9898\u89e3\u597d\u5c11\u2026\u2026\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u8f83\u590d\u6742\u7684\u6a21\u62df\u9898\uff08NOIP\u4ee5\u524d\u597d\u50cf\u8fd8\u6ca1\u51fa\u8fc7\u8fd9\u4e48\u590d\u6742\u7684\uff09\u3002\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u7c7b\u4f3c\u4e8e\u6a21\u62df\u7f16\u8bd1\u5668\uff0c\u6211\u4eec\u9700\u8981\u7528\u6808\u6765\u5b58\u50a8\u6bcf\u4e00\u6761\u5faa\u73af\u8bed\u53e5\uff0c\u8bfb\u4e00\u4e2a\u5c31\u8981\u628a\u5b83\u538b\u5165\u6808\uff0c\u8bfb\u5230\u4e00\u4e2a\u201cE\u201d\u5c31\u8981\u628a\u6808\u9876\u7684\u90a3\u4e2a\u8bed\u53e5\u53bb\u6389\uff08\u5f53\u7136\uff0c\u8fd9\u90fd\u662f\u5728\u6ca1\u6709\u9519\u8bef\u7684\u524d\u63d0\u4e0b\uff09\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u7279\u522b\u8003\u9a8c\u6211\u4eec\u7684\u7ec6\u5fc3\u7a0b\u5ea6\uff0c\u50cf\u6211\u8fd9\u79cd\u7c97\u5fc3\u5927\u610f\u7684\u4eba\u8c03\u4e86\u51e0\u4e2a\u6708\u624d\u901a\u8fc7\uff08\u8fd9\u5728NOIP\u8003\u573a\u4e0a\u5f97\u591a\u4e48\u4e0d\u73b0\u5b9e\uff09\u3002\n\n\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1\u3001\u4e0d\u80fd\u53ea\u662f\u5355\u7eaf\u5730\u5c06\u5faa\u73af\u8bed\u53e5\u538b\u5165\u6808\u548c\u51fa\u6808\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8003\u8651\u5b83\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8d21\u732e\uff0c\u5426\u5219\u5c31\u4f1aWA\u5f97\u5f88\u60e8\u3002\n\n2\u3001\u5904\u7406\u6570\u5b57\u7684\u65f6\u5019\uff0c\u5207\u5fcc\u5c06\u5b83\u8f6c\u5316\u4e3a\u5b57\u7b26\u7c7b\u578b\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u5b57\u6709\u53ef\u80fd\u6709\u5f88\u591a\u4f4d\uff0c\u6240\u4ee5\u5f97\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u3002\n\n\u89c1\u4ee3\u7801\uff1a\n\n```pascal\nvar hash:array['a'..'z'] of boolean; //\u54c8\u5e0c\u8868\u5224\u65ad\u662f\u5426\u6709\u91cd\u5b9a\u4e49\u53d8\u91cf\n    ju:array[-1..1000] of boolean; //ju\u6570\u7ec4\u662f\u4e00\u4e2a\u6808\uff0c\u8868\u793a\u8be5\u6761\u8bed\u53e5\u662f\u5426\u80fd\u591f\u8fdb\u5165\n    k1,k2:array[1..100] of longint; //k1\uff0ck2\u5206\u522b\u8868\u793a\u6bcf\u4e00\u4e2a\u5faa\u73af\u7684\u8d77\u59cb\u4e0e\u7ec8\u70b9\uff0c\u56e0\u4e3a\u6240\u6709\u5e38\u6570\u5c0f\u4e8e\u7b49\u4e8e100\uff0c\u5c06n\u8bbe\u4e3a101\u3002\n    s,s1:array[1..10] of string; //s\u7528\u6765\u5b58\u50a8\u7b54\u6848\uff0cs1\u7528\u6765\u5b58\u50a8\u6bcf\u4e00\u7ec4\u6570\u636e\u7684\u7ed3\u679c\n    s2,sk,sk1,sk2,ss:string;\n    ch1,ch:array[1..100] of char; //\u7528\u4e8e\u8bfb\u5165\n    chx1,chx2:char; //\u7528\u4e8e\u8bfb\u5165\u7a7a\u683c\uff0cpascal\u5c31\u662f\u8fd9\u4e2a\u9ebb\u70e6\uff0c\u50cfC++\u90fd\u4e0d\u7528\u7684\n    tot1,tot2,tot,max,t,i,j,n,c,k,p,pp,err:longint;\n    f,f1:boolean;\nbegin\n  readln(t);\n  for i:=1 to t do\n  begin\n    tot:=0;tot1:=0;tot2:=0;max:=0;f:=true;fillchar(hash,sizeof(hash),true);s2:='';f1:=true;p:=0;pp:=0;fillchar(ju,sizeof(ju),false);err:=0;\n    fillchar(k1,sizeof(k1),0);fillchar(k2,sizeof(k2),0); //\u5148\u662f\u4e00\u6ce2\u521d\u59cb\u5316\n    readln(n,s1[i]);\n    for j:=1 to n do\n    begin\n      read(ch[j]); //\u8bfb\u5165\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0ctot1\uff0ctot2\u8868\u793aF\u8bed\u53e5\u4e0eE\u8bed\u53e5\u7684\u4e2a\u6570\uff0c\u5224\u9519\n      if ch[j]='E' then begin inc(tot2);fillchar(hash,sizeof(hash),true);readln;continue;end;\n      read(chx1,ch1[j],chx2);\n      readln(sk);\n      for k:=1 to length(sk) do\n        if sk[k]=' ' then\n        begin\n          sk1:=copy(sk,1,k-1);\n          sk2:=copy(sk,k+1,length(sk));\n        end; //\u5b58\u4e0b\u521d\u59cb\u4e0e\u7ec8\u70b9\n      if sk1='n' then k1[j]:=101\n      else val(sk1,k1[j]); //\u521d\u59cb\u6539\u4e3a\u6570\u5b57\u7c7b\u578b\n      if sk2='n' then k2[j]:=101\n      else val(sk2,k2[j]); //\u7ec8\u70b9\u6539\u4e3a\u6570\u5b57\u7c7b\u578b\n      inc(tot1);\n      if not(hash[ch1[j]]) then begin f:=false;continue;end; //\u4e00\u65e6\u6709\u91cd\u590d\u5b57\u7b26\uff0c\u5c31\u5224\u5b9a\u7f16\u8bd1\u9519\u8bef\n      hash[ch1[j]]:=false; //\u5426\u5219\u5c31\u8868\u793a\u8be5\u5b57\u7b26\u7528\u8fc7\n    end;\n    if not f then begin s[i]:='ERR';continue;end;\n    if tot1<>tot2 then begin s[i]:='ERR';continue;end; //\u5224\u9519\n    //\u63a5\u4e0b\u6765\u90fd\u6ca1\u6709\u9519\u4e86\uff0c\u6bcf\u4e00\u6761\u5faa\u73af\u8bed\u53e5\u90fd\u4e0e\u4e00\u4e2aE\u76f8\u5339\u914d\uff0c\u653e\u5fc3\u5904\u7406\n    for j:=1 to n do\n    begin\n      //p\u4e0epp\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u53d8\u91cf\uff08\u6808\u6307\u9488\uff09\uff0c\u53ea\u4e0d\u8fc7\u6307\u5411\u7684\u4e1c\u897f\u4e0d\u540c\uff0c\u4fbf\u5206\u5f00\n      //f1\u8868\u793a\u63a5\u4e0b\u6765\u662f\u5426\u8fd8\u80fd\u591f\u8fdb\u5165\u66f4\u6df1\u5c42\u7684\u5faa\u73af\n      //tot\u8bb0\u5f55\u7a0b\u5e8f\u8fd0\u884c\u5230\u5f53\u524d\u8bed\u53e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cmax\u8868\u793a\u8fd9\u4e9btot\u91cc\u6700\u5927\u7684\n      if ch[j]='E' then begin dec(p);dec(pp);if tot>max then max:=tot;if p=err-1 then f1:=true;if ju[pp+1] then begin ju[pp+1]:=false;dec(tot);end;end //\u51fa\u6808\u5904\u7406\n      else\n      if f1 then //\u5982\u679c\u80fd\u8fdb\u5165\uff0c\u5c31\u628a\u8be5\u6761\u8bed\u53e5\u538b\u5165\u6808\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5224\u65ad\n      begin\n        inc(p);inc(pp);\n        if k1[j]>k2[j] then begin f1:=false;err:=p;end; //err\u8bb0\u5f55\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\u7684\u90a3\u6761\u8bed\u53e5\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u63a5\u4e0b\u6765\u5982\u679c\u6709\u4e00\u4e2aE\u5c06\u5176\u9000\u51fa\uff0c\u53c8\u53ef\u4ee5\u8fdb\u5165\u5faa\u73af\u4e86\n        if k1[j]<k2[j] then\n          if k2[j]=101 then begin inc(tot);ju[pp]:=true;end;\n      end;\n      if tot>max then max:=tot;\n    end;\n    str(max,ss); //\u5c06max\u53d8\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u65b9\u4fbf\u6bd4\u8f83\n    if max=0 then s2:=' O(1)' //\u7279\u5224\n    else s2:=' O(n^'+ss+')';\n    if s1[i]=s2 then s[i]:='Yes' else s[i]:='No'; //\u6bd4\u8f83\n  end;\n  for i:=1 to t do writeln(s[i]); //\u8f93\u51fa\u7b54\u6848\nend.\n```",
        "postTime": 1541076673,
        "uid": 43697,
        "name": "chenyewei_1234",
        "ccfLevel": 7,
        "title": "P3952 \u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "# \u65f6\u95f4\u590d\u6742\u5ea6\n>  \u8fd9\u9053\u9898\u4ece\u4e24\u4e2a\u6708\u524d\u5f00\u59cb\u505a\uff0c\u4e00\u76f4\u6ca1\u505a\u51fa\u6765\uff0c\u6700\u540e\u4eca\u665a\u51b3\u5fc3\u4e00\u5b9a\u8981\u505a\u51fa\u6765\u3002\u4e8e\u662f\u5f00\u59cb\u8ba4\u771f\u7684\u5728\u6253\u8349\u7eb8\u4e0a\u5199\u601d\u8def\uff0c\u6700\u540e\u5728AC\u7684\u90a3\u4e00\u523b\uff0c\u5dee\u70b9\u54ed\u4e86\u51fa\u6765\uff01\uff01\n\n## \u9898\u76ee\u5927\u610f\n\u8fd9\u4e2a\u81ea\u5df1\u770b\u5427\uff0cnoip2017\u7684D1T2\n\n## solution\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u9053\u9898\u6211\u4eec\u7528\u5230\u7684\u6bcf\u4e2a\u53d8\u91cf\u4ed6\u4eec\u7684\u7528\u5904\n\n1. stack[]\u8bb0\u5f55\u53d8\u91cf\u7684\u5faa\u73af\u5c42\n2. vis[]\u8bb0\u5f55\u53d8\u91cf\u5728\u6808\u4e2d\u662f\u5426\u51fa\u73b0\u8fc7\n3. cmp\u51fd\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4f5c\u6bd4\u8f83\u5faa\u73af\u4e2da\u548cb\u7684\u5927\u5c0f\n$$\\begin{cases}a<b -> \\text{\u8fdb\u5165\u65b0\u7684\u4e00\u5c42\u5faa\u73af}\\\\a>b ->\\text{\u65e0\u6cd5\u8fdb\u5165\u65b0\u7684\u5faa\u73af\uff0c\u5faa\u73af\u7ec8\u6b62}\\\\a=b -> \\text{\u6b64\u5faa\u73af\u4e3ao1}\\\\\\end{cases}$$\n4. stop \u5982\u679c\u5faa\u73af\u5df2\u7ecf\u65e0\u6cd5\u8fdb\u5165\uff0c\u90a3\u4e48\u5c31\u7528stop\u8ba1\u6570\n5. ans\u8868\u793a\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u5c42\u6570\uff0cmaxn\u8868\u793a\u5f53\u524d\u4e00\u5c42\u5faa\u73af\u7684\u590d\u6742\u5ea6\u5c42\u6570\n\u63a5\u4e0b\u6765\u662f\u4e09\u79cd\u72b6\u6001\u7684\n1.  ERR \u6761\u4ef6\n$$\\begin{cases}F,E \\text{\u4e0d\u5339\u914d}\\\\\\text{\u53d8\u91cf\u540d\u91cd\u590d}\\end{cases}$$\n2.  No\uff0cYes\u5747\u4e3a\u9898\u76ee\u5b9a\u4e49\n\n\u547c\u3002\u7136\u540e\u5c31\u662f\u4ee3\u7801\u4e86\n\u9996\u5148\u4f60\u5f97\u4f1a\u5b57\u7b26\u4e32\u5904\u7406\u4e00\u7cfb\u5217\u95ee\u9898\uff0c\u5982w\uff0ca\uff0cb\u4e4b\u7c7b\u7684\u6570\u5b57\u503c\uff0c\u7136\u540e\u4f60\u5f97\u4f1a\u666e\u901a\u7684\u6808\u601d\u60f3\u3002\n\n\u63a5\u4e0b\u6765\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5982\u4f55\u5904\u7406\u590d\u6742\u5ea6\u95ee\u9898\u3002\u6211\u7684\u601d\u8def\u662f\u5206o1\u548con\u65b9\u7684\no1\u4f60\u5f97\u5224\u65ad\u4ed6\u7684\u5faa\u73af\u5c42\u6570\u4e0d\u5f97\u4e3a\u6b63\u6574\u6570\uff0c\u7136\u540e\u5224\u4e00\u4e0bERR\u5c31\u53ef\u4ee5\u4e86\u3002\non\u65b9\u7684\u8bdd\uff0c\u4f60\u8981\u51c6\u786e\u5224\u65ad\u4ed6\u7684\u5faa\u73af\u5c42\u6570\n\n\u7136\u540e\u5c31\u662fcmp\u51fd\u6570\uff0c\u6211\u7684\u6574\u6bb5\u4ee3\u7801\u7684\u7cbe\u5999\u5c31\u5168\u5728cmp\u51fd\u6570\u91cc\u4e86\u3002\ncmp\u51fd\u6570\u5224\u65ad\u7684\u662fa\u548cb\u7684\u503c\u3002\n\u9996\u5148\u5982\u679cb\u4e0d\u662fn\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u5c42\n\u5176\u6b21\u5982\u679c\u6570\u4e3an\uff0c\u90a3\u4e48\u5c31\u8d4b\u4e3ainf\n\u7136\u540e\u5982\u679c\u4e24\u4e2a\u6570\u5982\u679c\u90fd\u662f\u6570\u5b57\uff0c\u90a3\u4e48\u5c31\u4e3ao1\uff0c\u76f4\u63a5\u6309\u7167\u76f8\u7b49\u5904\u7406\nAC\u4ee3\u7801\uff01\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int inf = 2147483647;\nchar s[200],a[200],b[200];\nchar stack[200];\nchar F,id;\nint top;\nbool vis[200],ERR;\nint cmp(char *a,char *b) {\n\tint an=0,bn=0;\n\tif(a[0]=='n') an=inf;\n\telse {\n\t\tfor(int i=0; i<strlen(a); i++)\n\t\t\tan=an*10+a[i]-'0';\n\t}\n\tif(b[0]=='n') bn=inf;\n\telse {\n\t\tfor(int i=0; i<strlen(b); i++)\n\t\t\tbn=bn*10+b[i]-'0';\n\t}\n\tif(an>bn) return -1;\n\tif(an<bn && bn==inf) return 1;\n\tif(an==bn) return 0;\n}\nint main() {\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--) {\n\t\tint n;\n\t\tmemset(s,0,sizeof(s));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(stack,0,sizeof(stack));\n\t\ttop=0;\n\t\tscanf(\"%d\",&n);\n\t\tcin >> s;\n\t\tint maxn=0,ans=0;\n\t\tint stop=0;\n\t\tERR=false;\n\t\tmemset(a,0,sizeof(a));\n\t\tmemset(b,0,sizeof(b));\n\t\tif(s[2]=='1') {\n\t\t\tfor(int i=1; i<=n; i++) {\n\t\t\t\tcin >> F;\n\t\t\t\tif(F=='E') {\n\t\t\t\t\tif(stop)stop--;\n\t\t\t\t\tvis[stack[top--]]=false;\n\t\t\t\t\tif(top==0) {\n\t\t\t\t\t\tans=max(ans,maxn);\n\t\t\t\t\t\tmaxn=0;\n\t\t\t\t\t}\n\t\t\t\t\tif(top<0)ERR=true;\n\t\t\t\t} else if(F=='F') {\n\t\t\t\t\tcin >> id;\n\t\t\t\t\tif(vis[id]) ERR=true;\n\t\t\t\t\telse vis[id]=1;\n\t\t\t\t\tstack[++top]=id;\n\t\t\t\t\tmemset(a,0,sizeof(a));\n\t\t\t\t\tmemset(b,0,sizeof(b));\n\t\t\t\t\tcin >> a >> b;\n\t\t\t\t\tif(stop) {\n\t\t\t\t\t\tstop++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tint flag=cmp(a,b);\n\t\t\t\t\tif(flag==1) if(top>maxn)maxn++;\n\t\t\t\t\tif(flag==-1) stop++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(top || ERR) {\n\t\t\t\tprintf(\"ERR\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ans!=0) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t\tif(s[2]=='n') {\n\t\t\tint num=0;\n\t\t\tfor(int i=0; i<strlen(s); i++)\n\t\t\t\tif(s[i]>='0'&&s[i]<='9')num=num*10+s[i]-'0';\n\t\t\tfor(int i=1; i<=n; i++) {\n\t\t\t\tcin >> F;\n\t\t\t\tif(F=='E') {\n\t\t\t\t\tif(stop)stop--;\n\t\t\t\t\tvis[stack[top--]]=false;\n\t\t\t\t\tif(top==0) {\n\t\t\t\t\t\tans=max(ans,maxn);\n\t\t\t\t\t\tmaxn=0;\n\t\t\t\t\t}\n\t\t\t\t\tif(top<0)ERR=true;\n\t\t\t\t} else if(F=='F') {\n\t\t\t\t\tcin >> id;\n\t\t\t\t\tif(vis[id]) ERR=true;\n\t\t\t\t\telse vis[id]=1;\n\t\t\t\t\tstack[++top]=id;\n\t\t\t\t\tmemset(a,0,sizeof(a));\n\t\t\t\t\tmemset(b,0,sizeof(b));\n\t\t\t\t\tcin >> a >> b;\n\t\t\t\t\tif(stop) {\n\t\t\t\t\t\tstop++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tint flag=cmp(a,b);\n\t\t\t\t\tif(flag==1) if(top>=maxn+1)maxn++;\n\t\t\t\t\tif(flag==-1) stop++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(top || ERR) {\n\t\t\t\tprintf(\"ERR\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ans!=num) {\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\ntips:\u8fd8\u6709\u4e00\u4ef6\u4e8b\u8bf7\u975e\u5e38\u7684\u91cd\u8981\uff0c\u505a\u6a21\u62df\u9898\u4e4b\u524d\uff0c\u4e00\u5b9a\u8981\u7406\u6e05\u601d\u8def\uff0c\u6700\u597d\u5199\u5728\u7eb8\u4e0a\uff0c\u56e0\u4e3a\u7801\u91cf\u5927\u7684\u9898\u76ee\u5f88\u5bb9\u6613\u4f1a\u5065\u5fd8\uff0c\u8fd9\u6837\u4f1a\u6709\u4ee5\u601d\u7ef4\u65f6\u95f4\u6362\u4ee3\u7801\u65f6\u95f4\uff0c\u5783\u573e\u601d\u7ef4\u5927\u5e45\u5ea6\u7f29\u77ed\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u6211\u66fe\u7ecfwa\u4e86\u65e0\u6570\u53d1\uff0c\u90fd\u662f\u6ca1\u6709\u8ba4\u771f\u601d\u8003\u7684\u7ed3\u679c\uff01\n\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7",
        "postTime": 1539610506,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "#### [\u539f\u9898\u76ee](https://www.luogu.org/problemnew/show/P3952)\n### ~~\u591a\u4e48\u5b8c\u7f8e\u7684\u4e00\u9053\u5b57\u7b26\u4e32\u6a21\u62df\u9898\u554a~~\n\u89c2\u770b\u591a\u4f4d\u5927\u4f6c\u9898\u89e3\uff0c\u611f\u89c9\u548c\u9119\u4eba\u505a\u6cd5\u6709\u522b\uff08\u53ef\u80fd\u6211\u66f4\u591a\u7684\u4f7f\u7528\u4e86STL\u6765\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\uff09\uff0c\u6545\u6765\u8bf4\u4e00\u4e0b\u6211\u5bf9\u672c\u9898\u7684\u89c1\u89e3\uff1b\n\n-----------------\n\n### \u8a00\u5f52\u6b63\u4f20\n\u8ba4\u771f\u8bfb\u5b8c\u9898\u76ee\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u6211\u4eec\u5bf9\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\u8fdb\u884c\u5224\u65ad\uff1a\n\n**1.** \u5927 $O$ \u548c\u771f\u6b63\u7684\u5b9e\u9645\u590d\u6742\u5ea6\u4e0d\u5339\u914d\n\n**2.** \u4e0d\u80fd\u6709\u76f8\u540c\u7684\u53d8\u91cf\u88ab\u540c\u65f6\u5b9a\u4e49\n\n**3.** \u4e0d\u80fd\u51fa\u73b0 $F$ \u4e0e $E$ \u4e0d\u5339\u914d\u7684\u73b0\u8c61,\u5373\u5bf9\u4e8e\u6bcf\u4e2a$E$ ,\u90fd\u6709\u4e00\u4e2a$F$\u4e0e\u4e4b\u5bf9\u5e94\n\n**4.** \u5f53\u521d\u59cb\u503c\u5927\u4e8e\u7ed3\u675f\u503c\u65f6\uff0c\u5305\u542b\u5728\u672c\u5c42\u5faa\u73af\u4e0b\u7684\u4efb\u4f55\u5faa\u73af\u90fd\u5c06\u4e0d\u88ab\u8ba1\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\uff08\u4f46\u662f\u4ecd\u7136\u8981\u5224\u65ad\u95ee\u9898**2\u548c3**\uff09\n\n# \u4ee3\u7801\u89e3\u91ca\u7684\u975e\u5e38\u8be6\u7ec6\uff0c\u6211\u76f8\u4fe1\u5404\u4f4d\u662f\u53ef\u4ee5\u770b\u61c2\u7684\n## \u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define make(a,b) make_pair(a,b)\nusing namespace std;\nconst int maxn = 110000;\ntypedef pair<char,int> pa;\n//\u6211\u4eec\u7528pair\u7684\u7b2c\u4e00\u4e2a\u91cf\u8868\u793aF\uff0c\u7b2c\u4e8c\u4e2a\u91cf\u8868\u793a\u662f\u5426\u5904\u4e8e\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u72b6\u6001\uff0c0\u8868\u793a\u5904\u5728\uff0c1\u8868\u793a\u4e0d\u8ba1\u7b97\u590d\u6742\u5ea6\nint t,len,ans,ti,now,cnt,q[maxn],w[maxn];\nstack <pa> s;//\u7528\u6765\u5224\u65adF\u4e0eE\u7684\u5173\u7cfb\nvector <char> x;//\u7528\u6765\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u7684\u53d8\u91cf\nstring o;\nchar a,b[maxn],c[maxn],d[maxn];\nvoid clean()\n{//\u521d\u59cb\u5316\n\tx.clear();\n\twhile(!s.empty()) s.pop();\n\tlen=0,ti=0,now=0,ans=0;\n\tmemset(q,0,sizeof(q));\n\tmemset(w,0,sizeof(w));\n\tmemset(c,'\\0',sizeof(c));\n\tmemset(d,'\\0',sizeof(d));\n}\nvoid cl(int &len)\n{//\u5982\u679cERR\u7a7a\u8bfb\u5269\u4f59\u7684\u7a0b\u5e8f\n\tchar y;\n\tif(len==-1||len==0) return ;\n\twhile(len>-1)//\u8fd9\u4e2a\u5730\u65b9\u662f\u6211\u8c03\u8bd5\u51fa\u6765\u7684\uff0c\u4ece\u95ee\u9898\u51fa\u73b0\u7684len\u884c\u5230\u6700\u540e\uff0c\u4e00\u5171\u8981\u8f93len\u4e2a\u2018\\n\u2019,\u7531\u4e8e\u4e3b\u51fd\u6570while(len--)\uff0clen\u7684\u503c\u8981\u6bd4\u5f53\u524d\u884c\u7684\u503c\u5c111\n\t{\n\t\ty=getchar();\n\t\tif(y=='\\n') len--;//\u56e0\u4e3a\u6bcf\u884c\u8f93\u5165\u4e00\u4e2a\u56de\u8f66\u7b26\uff0c\u6240\u4ee5\u7528\u5b83\u6765\u8ba1\u884c\u6570\n\t}\n}\nvoid read(int &a,char &b)\n{\n\tchar r;\n\tr=getchar();\n\ta=0;\n\tif(r>='0'&&r<='9')//\u5982\u679c\u8bfb\u5165\u7684\u662f\u6570\u5b57\n\t\twhile(r>='0'&&r<='9')\n\t\t{\t\t\t\n\t\t\ta=a*10+r-'0';\n\t\t\tr=getchar();\n\t\t}\n\telse //\u5426\u5219\u4e3a\u5b57\u7b26\uff0c\u4fdd\u8bc1\u4f20\u8fdb\u6765\u7684\u4e24\u4e2a\u5730\u5740\u53ea\u6709\u4e00\u4e2a\u7684\u503c\u88ab\u6539\u53d8\n\t\twhile(r<'0'||r>'9')\n\t\t{\n\t\t    b=r;r=getchar();return ;\n\t\t}\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tcl(len);//\u5982\u679c\u4e0a\u6b21\u4e3aERR,\u7a7a\u8f93\u5165\u76f4\u5230\u8f93\u5165\u4e0b\u4e2a\u7a0b\u5e8f\n\t\tclean();//\u521d\u59cb\u5316\n\t\tscanf(\"%d\",&len);//\u8f93\u5165'n O(x)'\u4e2d\u7684n\n\t\tcin>>o;//\u8f93\u5165O(x);\n\t\tstring :: iterator it;//\u8fd9\u91cc\u6211\u672c\u5730\u7f16\u8bd1\u5668\u5982\u679c\u7528\u4e0b\u6807\u62a5\u9519\uff08\u96fe\uff09\n\t\tint p=o.size();\n\t\tif(p==4) ti=1;//\u957f\u5ea6\u4e3a4\u8bc1\u660e\u8f93\u5165\u7684\u662fO(1)  \n\t\telse //\u5426\u5219\u5c06n\u7684\u6307\u6570\u53d6\u51fa\u6765\n\t\tfor(it=o.begin();it!=o.end();it++)\n\t\t{//\u4e00\u79cd\u7c7b\u4f3c\u5feb\u8bfb\u7684\u505a\u6cd5\n\t\t    if(*it>='0'&&*it<='9') ti=ti*10+*it-'0';\n\t\t}\n\t\twhile(len--)\n\t\t{\n\t\t    cin>>a;//\u8f93\u5165E\u6216\u8005R \n\t\t\tif(a=='F')\n\t\t\t{//\u5982\u679c\u4e3aF\n\t\t\t\tcin>>b[++cnt];//\u8f93\u5165\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e5f\u5c31\u662f\u53d8\u91cf\n\t\t\t\tif(count(x.begin(),x.end(),b[cnt]))\n\t\t\t\t{//count \u7528\u6765\u8ba1\u6570\uff0c\u5982\u679c\u6709\u4e86\uff0c\u5c31\u8bc1\u660e\u662fERR\n\t\t\t\t\tprintf(\"ERR\\n\");\n\t\t\t\t\tgoto end;//\u5f3a\u5236\u8df3\u51fa\u81f3\u5916\u5c42\u5faa\u73af\u6700\u540e\n\t\t\t\t}\n\t\t\t\telse x.push_back(b[cnt]);\n                //\u5982\u679c\u6ca1\u6709\u5c31\u5b58\u8fdb\u53bb\n\t\t\t\tif(!s.empty()&&s.top().second==1)\n\t\t\t\t{//\u5982\u679c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5e76\u4e14\u4e0d\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\n\t\t\t\t\td[cnt]=getchar();//\u5904\u7406\u7b2c\u4e09\u53d8\u91cf\u4e4b\u524d\u7684\u7a7a\u683c\n\t\t\t\t\tread(q[cnt],c[cnt]);\n                    read(w[cnt],d[cnt]);\n                    /*\u8fd9\u91cc\u7528\u5feb\u8bfb\u7684\u65b9\u6cd5\u8bfb\u5165\u5269\u4e0b\u4e24\u4e2a\u53d8\u91cf\uff0c\u8fd9\u91cc\u8bfb\u5165\u662f\u4e3a\u4e86\u540e\u8fb9\u51fa\u6808\u65b9\u4fbf\n                    */\n\t\t\t\t\ts.push(make(a,1));//\u5165\u6808\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{//\u6808\u7a7a\u6216\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u65f6\n\t\t\t\t\td[cnt]=getchar();\n\t\t\t\t\tread(q[cnt],c[cnt]);\n            \t\tread(w[cnt],d[cnt]);\n\t\t\t\t\tif(q[cnt]!=0)\n\t\t\t\t\t{//\u7b2c\u4e00\u4e2a\u4e3a\u6570\u5b57\n\t\t\t\t\t\tif(w[cnt]!=0)\n\t\t\t\t\t\t{//\u7b2c\u4e8c\u4e2a\u4e3a\u6570\u5b57\n\t\t\t\t\t\t\tif(q[cnt]>w[cnt])\n\t\t\t\t\t\t\t{//\u521d\u59cb\u503c\u5927\u4e8e\u7ed3\u675f\u503c\uff0c\u8fdb\u5165\u4e0d\u8ba1\u7b97\u590d\u6742\u5ea6\u72b6\u6001\n\t\t\t\t\t\t\t\ts.push(make(a,1));continue; \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse s.push(make(a,0)); \n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(d[cnt]=='n')\n\t\t\t\t\t\t{//\u7b2c\u4e8c\u4e2a\u4e3an\n\t\t\t\t\t\t\t++now;//\u53ea\u6709\u5f53\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u590d\u6742\u5ea6\u7684\u6307\u6570\u624d\u4f1a\u4e0a\u5347\n\t\t\t\t\t\t\tans=max(ans,now);//\u66f4\u65b0\u6700\u5927\u503c\n\t\t\t\t\t\t\ts.push(make(a,0));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(c[cnt]=='n')\n\t\t\t\t\t{//\u7b2c\u4e00\u4e2a\u4e3a\u5b57\u6bcd\n\t\t\t\t\t\tif(w[cnt]!=0)\n\t\t\t\t\t\t{//\u7b2c\u4e8c\u4e2a\u4e3a\u6570\u5b57\uff0c\u8fdb\u5165\u4e0d\u8ba1\u7b97\u590d\u6742\u5ea6\u72b6\u6001\n\t\t\t\t\t\t\ts.push(make(a,1));continue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse s.push(make(a,0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{//\u4e3aE\n\t\t\t\tif(s.empty())\n\t\t\t    {//\u6ca1\u6709F\u4e0e\u4e4b\u5bf9\u5e94\n\t\t\t        printf(\"ERR\\n\");goto end;\n\t\t\t    }\n\t\t\t\tif(s.top().second==0)\n\t\t\t\t{//\u5982\u679c\u5904\u4e8e\u8ba1\u7b97\u590d\u6742\u5ea6\u72b6\u6001\u5219\u5f53\u524d\u590d\u6742\u5ea6\u8981\u53d8\u5316\uff0c\u6ce8\u610f\uff0c\u6700\u5927\u590d\u6742\u5ea6\u4e0d\u53d8\n\t\t\t\t\tif(d[cnt]=='n'&&q[cnt]) now--;\n\t\t\t\t}\n\t\t\t\tx.erase(find(x.begin(),x.end(),b[cnt]));//find()\u548cerase()\u914d\u5408\u6e05\u9664\u4e0e\u4e4b\u5bf9\u5e94\u7684\u53d8\u91cf\n\t\t\t\ts.pop();cnt--;//\u51fa\u6808\n\t\t\t}\n\t\t}\n\t\tif(!s.empty())\tprintf(\"ERR\\n\");\n\t\telse if(!ans) \n\t\t{//\u5982\u679c\u6700\u5927\u590d\u6742\u5ea6\u4e3a0\uff0c\u8bc1\u660e\u6211\u4eec\u6ca1\u6709\u8bfb\u5165\u8fc7'n'\uff0c\u8bc1\u660e\u662fO(1)\u590d\u6742\u5ea6\n\t\t\tif(o.size()!=4) printf(\"No\\n\");\n\t\t\telse printf(\"Yes\\n\");\t\n\t\t}\n\t\telse\n\t\t{//\u4e0d\u4e3a\u96f6\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u7279\u5224\u4e00\u4e0bO(1)\u7684\u60c5\u51b5\n\t\t\tif(o.size()==4) printf(\"No\\n\");\n\t\t\telse if(ans!=ti) printf(\"No\\n\");\n\t\t\telse printf(\"Yes\\n\");\n\t\t}\n\t\tend:; \n\t}\n}\n```\n\n## \u6700\u540e\uff0c\u5e0c\u671b\u5927\u5bb6\u4e00\u904dAC\uff01\uff01\n\n\n\n\n",
        "postTime": 1539437859,
        "uid": 74833,
        "name": "iMiku",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053~~\u6bd2\u7624~~\u6a21\u62df\u9898\n\n\u8fd9\u79cd\u9898\u6700\u91cd\u8981\u7684\u662f\uff1a\n\n### \u6ce8\u610f\u7ec6\u8282\n\n~~\u4e3b\u8981\u8003\u5bdf\u7684\u5c31\u662f\u5b57\u7b26\u4e32\u7684\u8bfb\u5165\u95ee\u9898\u5566~~\n\n\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86**string\u7c7b\u578b**\u8bfb\u5165\uff1b\n\n\uff08\u7531\u4e8e\u5bb9\u6613\u4e0eint\u53d1\u751f\u51b2\u7a81\uff0c\u6211\u4eec\u6700\u597d\u90fd\u7528string\u7c7b\u578b\u8bfb\u5165\uff0c\u5fc5\u8981\u65f6\u518d\u8f6c\u6210int\u7c7b\u578b\uff09\n\nstring\u7c7b\u578b\u5bb9\u6613\u8bfb\u5165\uff0c\u76f4\u63a5\u7528cin\u8bfb\u5165\uff0c**\u9047\u5230\u7a7a\u683c\u7ed3\u675f**\u3002\n\n\u4e00\u4e9b**\u5c0f\u7ec6\u8282**\uff1a\n\n    1.\u6ce8\u610f\u5faa\u73af\u7ed3\u675f\u7684\u95ee\u9898\uff0c\u6709\u51e0\u5c42\u5faa\u73af\uff08F\uff09\u5c31\u8981\u6709\u51e0\u4e2a\u9000\u51fa\uff08E\uff09\uff1b\n\t2.\u4ece\u5e38\u6570a\u5230\u5e38\u6570b\u7684\u590d\u6742\u5ea6\u662fO(1)\uff1b\n\t3.\u5982\u679c\u521d\u503c\u5927\u4e8e\u7ec8\u503c\uff0c\u8be5\u5c42\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u65e0\u6cd5\u8fdb\u5165\u7684\u590d\u6742\u5ea6\u4e3aO(n)\uff1b\n\t4.\u5982\u679c\u6b64\u5c42\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u540e\u9762\u7684\u5faa\u73af\u90fd\u65e0\u6cd5\u8fdb\u5165\uff1b\n\t5.\u5faa\u73af\u53d8\u91cf\u4e0d\u80fd\u51b2\u7a81\uff1b\n\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1a\n\n\t1.\u53ef\u4ee5\u76f4\u63a5\u7528cnt\u8bb0\u5f55\u5faa\u73af\uff0c\u8fdb\u5165\u5faa\u73afcnt++\uff0c\u9000\u51fa\u5faa\u73afcnt--\uff0c\u6700\u540ecnt\u7b49\u4e8e\u96f6\u5373\u5408\u6cd5\uff1b\n\t2.\u5224\u65ad\u82e5\u4e24\u4e2a\u6570\u90fd\u662f\u5e38\u6570\uff0c\u6b64\u5c42\u5faa\u73af\u8ba1\u4e3a\u590d\u6742\u5ea6O(1)\uff1b\n\t3.\u5224\u65ad\u82e5\u7b2c\u4e00\u4e2a\u6570\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u6570\uff0c\u6b64\u5c42\u5faa\u73af**\u8ba1\u4e3a**\u590d\u6742\u5ea60\uff08\u53ea\u662f**\u8ba1**\u4e3a0\uff09\uff1b\n\t4.\u7edf\u8ba1\u590d\u6742\u5ea6\u7684\u65f6\u5019\u9047\u52300\u5c31\u9000\u51fa\uff08break\uff09\uff1b\n\t5.\u8bb0\u5f55\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5faa\u73af\u53d8\u91cf\u662f\u5426\u88ab\u7528\u8fc7\uff0c\u9000\u51fa\u5faa\u73af\u65f6\u628a\u6b64\u5faa\u73af\u7684\u53d8\u91cf\u91ca\u653e\uff1b\n\n\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u95ee\u9898\uff1a\n\n### \u600e\u4e48\u7edf\u8ba1\u590d\u6742\u5ea6\n\n\u6211\u4eec\u7528ans1\u8868\u793a\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\uff0cans2\u8868\u793a\u7b97\u51fa\u7684\u590d\u6742\u5ea6\uff1b\n\n\u663e\u7136\u5982\u679c**ans1=ans2**\uff0c\u8f93\u51faYes\uff1b\n\nans1\u5728\u5b57\u7b26\u4e32\u8bfb\u5165\u662f\u5c31\u53ef\u4ee5\u5904\u7406\u51fa\u6765\uff0c\u82e5\u662f**O(1)\u8bb0\u4e3a0\uff0cO(n^m)\u8bb0\u4e3am**\uff1b\n\nans2\u7684\u5904\u7406\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\uff1a\n\n\t1.\u7528ans\u6570\u7ec4\u7ef4\u62a4\u6bcf\u5c42\u5faa\u73af\u7684\u590d\u6742\u5ea6\uff0c\u4ece\u5e38\u6570\u5230n\u8bb0\u4e3a2\uff0c\u4ece\u5e38\u6570\u5230\u5e38\u6570\u8bb0\u4e3a1\uff0c\u4ecen\u5230\u5e38\u6570\u6216\u4ece\u5927\u5e38\u6570\u5230\u5c0f\u5e38\u6570\u8bb0\u4e3a0\uff1b\n    2.\u6bcf\u6b21\u9000\u51fa\u5faa\u73af\u65f6\uff0c\u4ece1\u5230cnt\u7edf\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5982\u679cans[i]=2\uff0ctmp++; \u5982\u679cans[i]=0\uff0c\u540e\u9762\u7684\u5c31\u4e0d\u7edf\u8ba1\u4e86\uff0c\u6700\u540e\u7528tmp\u66f4\u65b0ans2\uff1b\n    \n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff0c\u5207\u8bb0\uff1a\u8fd9\u7c7b\u6a21\u62df\u9898\u6700\u91cd\u8981\u7684\u662f**\u7ec6\u5fc3**\uff0c\u4e00\u5b9a\u8981\u628a\u6240\u6709\u7684\u60c5\u51b5**\u8003\u8651\u5168\u9762**\uff0c\u901a**\u5408\u9002\u7684\u65b9\u6cd5**\u50a8\u5b58**\u6709\u7528**\u7684\u4fe1\u606f\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint T,ans[310],name[310];\nbool f[150];\nstring s_n,pre,opt,x,a,b;\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tmemset(f,0,sizeof f);\n\t\tmemset(ans,0,sizeof ans);\n\t\tmemset(name,0,sizeof name);\n\t\tbool error=0;\n\t\tint ans1=0,ans2=0,cnt=0,n=0;\n\t\tcin>>s_n>>pre;//n\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\n\t\tfor(int i=0;i<s_n.length();i++)  n=n*10+s_n[i]-'0';//\u7528\u628an\u8f6c\u6362\u6210int\u7c7b\u578b\n\t\tif(pre[2]==1) ans1=0;//O(1)\u8bb0\u4f5c0\n\t\tif(pre[2]=='n')//O(n^m)\u8bb0\u4e3am\n\t\t\tfor(int i=4;i<pre.length()-1;i++) \n\t\t\t    ans1=ans1*10+pre[i]-'0';\n\t\tfor(int k=1;k<=n;k++)\n\t\t{\n\t\t\tbool judge_a=0,judge_b=0;\n\t\t\tcin>>opt;\n\t\t\tif(opt[0]=='F')//\u8fdb\u5165\u5faa\u73af\u64cd\u4f5c\n\t\t\t{\n\t\t\t\tcnt++;//\u5faa\u73af\u5c42\u6570\u589e\u52a0\n\t\t\t\tcin>>x>>a>>b;//\u8f93\u5165\u53d8\u91cf\u540d\uff0c\u521d\u503c\uff0c\u7ec8\u503c\n\t\t\t\tif(f[x[0]]==1) error=1;//\u53d8\u91cf\u540d\u51b2\u7a81 ERR\n\t\t\t\tname[cnt]=x[0];//\u8bb0\u5f55\u53d8\u91cf\u540d\n\t\t\t\tf[(int)name[cnt]]=1;//\u6807\u8bb0\u6b21\u53d8\u91cf\u540d\u5df2\u4f7f\u7528\n\t\t\t\tint aa=0,bb=0;//\n                //judge_a\u548cjudge_b\u5224\u65ad\u521d\u503c\u548c\u7ec8\u503c\u662f\u5426\u662fn\n\t\t\t\tif(a[0]=='n') aa=999,judge_a=1;//\u82e5\u662fn\u5c31\u7ed9\u5b83\u968f\u4fbf\u9644\u4e00\u4e2a\u6bd4\u5e38\u6570\u5927\u7684\u503c\uff0c\u4e4b\u540e\u65b9\u4fbf\u6bd4\u8f83\n\t\t\t\tif(b[0]=='n') bb=999,judge_b=1;\n                //\u82e5\u662f\u5e38\u6570\uff0c\u628a\u5b83\u8f6c\u6362\u6210int\u7c7b\u578b\u65b9\u4fbf\u6bd4\u8f83\u5927\u5c0f\n\t\t\t\tif(!judge_a) for(int i=0;i<a.length();i++) aa=aa*10+a[i]-'0';\n\t\t\t\tif(!judge_b) for(int i=0;i<b.length();i++) bb=bb*10+b[i]-'0';\n\t\t\t\tif(judge_a&&judge_b) ans[cnt]=1;//\u4e24\u4e2a\u6570\u90fd\u662fn:O(1)\n\t\t\t    if(aa>bb) ans[cnt]=0;//\u521d\u503c\u6bd4\u7ec8\u503c\u5927\uff1a0\n\t\t\t    if(aa<=bb&&(!judge_b)) ans[cnt]=1;//\u4e24\u4e2a\u6570\u90fd\u662f\u5e38\u6570\uff1aO(1)\n\t\t\t    if(aa<bb&&judge_b) ans[cnt]=2;//\u4ece\u5e38\u6570\u5230n\uff1aO(n)\n\t\t\t}\n\t\t\telse//\u9000\u51fa\u5faa\u73af\u64cd\u4f5c\n\t\t\t{\n\t\t\t\tint tmp=0;\n\t\t\t\tfor(int i=1;i<=cnt;i++)\n\t\t\t\t{\n\t\t\t\t\tif(ans[i]==0) break; \n\t\t\t\t\tif(ans[i]==2) tmp++; \n\t\t\t\t}\n\t\t\t\tans2=max(ans2,tmp);\n\t\t\t\tf[name[cnt]]=0;//\u91ca\u653e\u53d8\u91cf\u540d\n\t\t\t\tcnt--;//\u5faa\u73af\u5c42\u6570\u51cf\u5c11\n\t\t\t}\n\t\t}\n\t\tif(cnt!=0||error==1) printf(\"ERR\\n\");\n\t\tif((!error)&&cnt==0&&ans1==ans2) printf(\"Yes\\n\");\n\t\tif((!error)&&cnt==0&&ans1!=ans2) printf(\"No\\n\"); \n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1537531913,
        "uid": 74896,
        "name": "Mathison",
        "ccfLevel": 0,
        "title": "P3952 \u65f6\u95f4\u590d\u6742\u5ea6 \u3010\u6a21\u62df\u3011"
    },
    {
        "content": "# **Analysis**\n\u9694\u4e86\u4e5d\u4e2a\u6708\u53c8\u9047\u89c1\u8fd9\u9053\u9898\u554a\u3002\u5f88\u6709\u611f\u6168\u3002\u73b0\u5728\u6211\u7ec8\u4e8e\u7c97\u7565\u77e5\u9053\u4ec0\u4e48\u662f\u6a21\u62df\uff0c\u4ec0\u4e48\u662f\u7ebf\u6027\u8868\u4e86\u3002\n\n\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u6808\u7684\u9898\u76ee\uff0c\u56e0\u4e3a\u5faa\u73af\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u663e\u7136\u662f\u4e2a\u62ec\u53f7\u5339\u914d\uff0c\u800c\u5faa\u73af\u53d8\u91cf\u7684\u4f7f\u7528\u548c\u62ec\u53f7\u7ed1\u5728\u4e00\u8d77\uff0c\u4e5f\u662f\u4e2a\u6808\uff0c\u51fa\u4e86\u5bf9\u5e94\u7684\u2019E\u2019\u4e4b\u540e\u5c31\u9500\u6bc1\uff0c\u5b8c\u5168\u7b26\u5408\u540e\u8fdb\u5148\u51fa\u3002\n\n\u7136\u540e\u7ecf\u8fc7\u4ed4\u7ec6\u9605\u8bfb\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5faa\u73af\u5206\u9996\u5148\u5206\u4e24\u79cd\uff0c\u80fd\u88ab\u8fdb\u5165\u7684\u548c\u4e0d\u80fd\u88ab\u8fdb\u5165\u7684(\u6211\u7b80\u79f0\u201c\u5047\u5faa\u73af\u201d\uff0c\u5475\u5475)\u3002\u80fd\u88ab\u8fdb\u5165\u7684\u8981\u8fdb\u5165\u5faa\u73af\u5e76\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e0d\u80fd\u88ab\u8fdb\u5165\u7684\u53ea\u9700\u8981\u67e5\u662f\u5426\u6709ERR\u5373\u53ef\u3002\n\n\u7136\u540e\u6839\u636eF x to y \u6765\u5206\u7684\u8bdd\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u56db\u79cd\u3002\n\n(1) F c to c\n\n(2) F c to n\n\n(3) F n to c\n\n(4) F n to n\n\n\u5176\u4e2dc\u8868\u793a\u5e38\u6570\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u56db\u79cd\u4e2d\uff0c(1)\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u5e38\u6570\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u524d\u8005\u5927\u4e8e\u540e\u8005\uff0c\u5219\u662f\u5047\u5faa\u73af\uff0c\u5426\u5219\u662f\u4e3a\u5e38\u6570\u590d\u6742\u5ea6\u7684\u771f\u5faa\u73af\u3002(2)\u4e0d\u7528\u5224\u65ad\uff0c\u4e00\u5b9a\u662f\u771f\u5faa\u73af\u800c\u4e14\u590d\u6742\u5ea6\u8981\u4e58n\u3002(3)\u4e00\u5b9a\u662f\u4e2a\u5047\u5faa\u73af\uff0c(4)\u4e00\u5b9a\u662f\u4e2a\u5e38\u6570\u5faa\u73af\u3002\n\n\u7136\u540e\u4ed4\u7ec6\u8003\u8651\u600e\u4e48\u5b9e\u73b0\u7684\u95ee\u9898\u3002\n\n\u8bfb\u5165\u65b9\u9762\u3002\u9996\u5148\u662f\u8bfb\u5165\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u53d6\u51faO(n^w)\u4e2d\u7684w\uff0c\u90a3\u4e48\u8fdb\u4e00\u6b65\uff0cO(1)\u5b8c\u5168\u53ef\u4ee5\u89c6\u4e3aO(n^0)\u6765\u907f\u514d\u7279\u5224\u3002\n\n\u7136\u540e\u662f\u8bfb\u5165\u7a0b\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u4e00\u884c\u4e00\u884c\u5730\u7528getline\u8bfb\u5165\u3002\u6211\u4eec\u9700\u8981\u5f97\u5230F i x y\u4e2d\u7684x,y\u7136\u540e\u8fdb\u884c\u6bd4\u8f83\u5927\u5c0f\u7b49\u7b49\u64cd\u4f5c\uff0c\u5c06\u5b57\u7b26\u8f6c\u5316\u6210\u6570\u5b57\u5f88\u7b80\u5355\uff0c\u7531\u4e8e\u9898\u76ee\u9650\u5236\u6570\u5b57\u5c0f\u4e8e100,\u90a3\u4e48\u591a\u51e0\u4e2aif\u8bed\u53e5\u4e5f\u5c31\u53ef\u4ee5\u4e86\uff08\u6570\u5b57\u5927\u4e86\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u7528\u5feb\u8bfb\u7684\u65b9\u6cd5\uff09\u3002\n\n\u6210\u529f\u53d6\u51fax,y\u4e4b\u540e\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u5faa\u73af\u662f\u771f\u5faa\u73af\u8fd8\u662f\u5047\u5faa\u73af\uff0c\u5982\u679c\u662f\u771f\u5faa\u73af\u90a3\u4e48\u5c31\u628a\u8bb0\u5f55\u590d\u6742\u5ea6\u7684\u6570\u503c+1\u3002(\u7531\u4e8e\u5faa\u73af\u7684\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u662f\u770b\u5faa\u73af\u6709\u591a\u5c11\u201d\u5c42\u201d\uff0c\u627e\u6700\u6df1\u7684\u90a3\u5c42\u5373\u53ef\uff0c\u6240\u4ee5\u8981\u53d6max\u3002)\u5f53\u7136\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u5047\u5faa\u73af\u5185\u4e86\u90a3\u4e48\u5c31\u522b\u7ba1\u8fd9\u4e9b\uff0c\u76f4\u63a5\u8bfb\u5165\u7136\u540e\u8df3\u8fc7\u5904\u7406\u8fc7\u7a0b\u5373\u53ef\u3002\n\n\u5982\u679c\u5728\u8fd9\u5c42\u521a\u521a\u8fdb\u5165\u5047\u5faa\u73af\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2abool\u578b\u7684\u6807\u8bb0\u3002\n\n\u7136\u540e\u5982\u679c\u662f\u8df3\u51fa\u5faa\u73af\uff0c\u90a3\u5c31\u51fa\u6808\u5c31\u53ef\u4ee5\u4e86\u3002\u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u4e2aE\u5bf9\u5e94\u7684F\u662f\u4e2a\u8fdb\u5165\u5047\u5faa\u73af\u7684\u5730\u65b9\uff0c\u8fd8\u6709\u628a\u6807\u8bb0\u6539\u56de\u6765\u3002\n\n\u7136\u540e\u6211\u5c31\u60f3\u4e86\u5f88\u4e45\u600e\u4e48\u907f\u514d\u7528\u6808\uff0c\u53ea\u7528\u51e0\u4e2a\u53d8\u91cf\u6807\u8bb0\u5b8c\u6210\u8fd9\u6240\u6709\u64cd\u4f5c\u3002\n\n\u7ed3\u679c\u5931\u8d25\u4e86\uff0c\u8fdb\u5165\u5047\u5faa\u73af\u8fd9\u4e2a\u64cd\u4f5c\u96be\u4ee5\u5b8c\u6210\u3002\n\n\u6240\u4ee5\u8fd8\u662f\u4e56\u4e56\u5730\u7528\u4e86\u6808\u3002\n\n\u590d\u6742\u5ea6\u662fO(l)\uff0c\u4f46\u662f\u5e38\u6570\u5f88\u5927\uff0c\u4e0d\u8fc7\u80af\u5b9a\u80fd\u8fc7\u3002\n# **Code**\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nstruct node{\n\tint fu,z;\n\tchar c;\n};\n\nint t,l;\nbool hash[200];\nstack<node> S;\n\nint time(string scom){//\u6ce8\u610f\uff0c\u8fd9\u73a9\u610f\u5f00\u5934\u662f\u4e2a\u7a7a\u683c\n\tint st=scom.length();\n\tif (st==5)\n\t\treturn 0;//\u5e38\u6570\u590d\u6742\u5ea6\u88ab\u8ba4\u4e3a\u662f0\n\tif (st==7)\n\t\treturn scom[5]-'0';\n\tif (st==8)\n\t\treturn (scom[5]-'0')*10+scom[6]-'0';\n}\n\nint main(){\n\tfreopen(\"complexity.in\",\"r\",stdin);\n\tfreopen(\"complexity.out\",\"w\",stdout);\n\tcin>>t;\n\twhile(t){\n\t\t--t;\n\t\t//\u6e05\u9664\u4e0a\u4e00\u7ec4\u6570\u636e\n\t\tbool solve=false,flag=false;//\u521d\u59cb\u5316\u4e24\u4e2a\u6807\u8bb0\n\t\tmemset(hash,0,sizeof(hash));\n\t\t//\u54ce\u54df,stack\u6ca1\u6709clear\n\t\twhile(!S.empty())\n\t\t\tS.pop();\n\t\tstring scom;\n\t\tcin>>l;\n\t\tgetline(cin,scom);//\u8bfb\u5165\u65f6\u95f4\u590d\u6742\u5ea6\n\t\tint comp=0,w=0;//\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u6c42\u51fa\u7684\n\t\tcomp=time(scom);\n\t\tif (l%2){//\u5947\u6570\u884c\u7a0b\u5e8f,\u7edd\u5bf9\u9519\n\t\t\tsolve=true;\n\t\t\tputs(\"ERR\");\n\t\t}\n\t\tfor (int i=1;i<=l;++i){\n\t\t\tstring s;\n\t\t\tgetline(cin,s);\n\t\t\tif (solve)//\u5df2\u7ecf\u53d1\u73b0\u6709\u9519\uff0c\u90a3\u4e48\u53ea\u8bfb\u5165\u4e0d\u5904\u7406\n\t\t\t\tcontinue;\n\t\t\tnode temp;\n\t\t\tint x,y;\n\t\t\tif (s[0]=='F'){//\u5982\u679c\u662f\u8fdb\u5165\u5faa\u73af\n\t\t\t\tif (hash[s[2]]){\n\t\t\t\t\tputs(\"ERR\");\n\t\t\t\t\tsolve=true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttemp.c=s[2];//\u8bb0\u5f55\u8fd9\u4e2a\u5faa\u73af\u7684\u5faa\u73af\u53d8\u91cf\n\t\t\t\t\thash[s[2]]=1;//\u6807\u8bb0\u5faa\u73af\u53d8\u91cf\uff0c\u7b49\u4f1a\u7edf\u4e00\u8fdb\u6808\n\t\t\t\t}\n\t\t\t\t//\u7136\u540e\u662f\u5f97\u5230x\u548cy\n\t\t\t\tif (s[4]=='n')\n\t\t\t\t\tx=0;\n\t\t\t\telse{\n\t\t\t\t\tx=s[4]-'0';\n\t\t\t\t\tif (s[5]!=' '){\n\t\t\t\t\t\tx=x*10+s[5]-'0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (x>=10){\n\t\t\t\t\tif (s[7]=='n')\n\t\t\t\t\t\ty=0;\n\t\t\t\t\telse{\n\t\t\t\t\t\ty=s[7]-'0';\n\t\t\t\t\t\tif (s.length()==9)\n\t\t\t\t\t\t\ty=y*10+s[8]-'0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (s[6]=='n')\n\t\t\t\t\t\ty=0;\n\t\t\t\t\telse{\n\t\t\t\t\t\ty=s[6]-'0';\n\t\t\t\t\t\tif (s.length()==8)\n\t\t\t\t\t\t\ty=y*10+s[7]-'0';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (flag){//\u73b0\u5728\u8fd8\u5728\u5047\u5faa\u73af\u5185,\u90a3\u5c31\u4ec0\u4e48\u90fd\u522b\u7ba1\n\t\t\t\t\ttemp.fu=0;//fu\u8d4b\u503c\u591a\u5c11\u90fd\u53ef\u4ee5,\u56e0\u4e3a\u4e0d\u4f1a\u8fdb\u5165\u8ba1\u7b97\n\t\t\t\t\ttemp.z=0;//\u4e0d\u68071\u53ca\u53ef\n\t\t\t\t\tS.push(temp);\n\t\t\t\t\tcontinue;//\u4ec0\u4e48\u90fd\u522b\u7ba1\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u53e5\n\t\t\t\t}\n\t\t\t\tif (!flag){//\u73b0\u5728\u6b63\u5728\u771f\u5faa\u73af\u5185,\u5206\u60c5\u51b5\u8ba8\u8bba\n\t\t\t\t\tif (x==0){//n to ...\n\t\t\t\t\t\tif (y==0){//n to n\n\t\t\t\t\t\t\tif (!S.empty())\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttemp.fu=S.top().fu;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttemp.fu=0;\n\t\t\t\t\t\t\ttemp.z=2;\n\t\t\t\t\t\t\tS.push(temp);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{//n to c\n\t\t\t\t\t\t\tif (!S.empty())\n\t\t\t\t\t\t\t\ttemp.fu=S.top().fu;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttemp.fu=0;\n\t\t\t\t\t\t\ttemp.z=1;//\u8868\u793a\u521a\u8fdb\u5165\u5047\u5faa\u73af\n\t\t\t\t\t\t\tflag=true;//\u6807\u8bb0\u4e00\u4e0b\u4e4b\u540e\u5728\u5047\u5faa\u73af\u5185\n\t\t\t\t\t\t\tS.push(temp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{//c to ...\n\t\t\t\t\t\tif (y==0){//c to n O(n)\u5faa\u73af \u9700\u8981\u590d\u6742\u5ea6+1\n\t\t\t\t\t\t\tif (!S.empty())\n\t\t\t\t\t\t\t\ttemp.fu=S.top().fu+1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttemp.fu=1;\n\t\t\t\t\t\t\tw=max(w,temp.fu);\n\t\t\t\t\t\t\ttemp.z=3;\n\t\t\t\t\t\t\tS.push(temp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{//c to c \u53c8\u6709\u4e24\u79cd\u60c5\u51b5\n\t\t\t\t\t\t\tif (y>=x){//\u771f\u5faa\u73af\n\t\t\t\t\t\t\t\tif (!S.empty())\n\t\t\t\t\t\t\t\t\ttemp.fu=S.top().fu;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\ttemp.fu=0;\n\t\t\t\t\t\t\t\ttemp.z=2;\n\t\t\t\t\t\t\t\tS.push(temp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{//\u5047\u5faa\u73af\n\t\t\t\t\t\t\t\tif (!S.empty())\n\t\t\t\t\t\t\t\t\ttemp.fu=S.top().fu;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\ttemp.fu=0;\n\t\t\t\t\t\t\t\ttemp.z=1;\n\t\t\t\t\t\t\t\tflag=true;\n\t\t\t\t\t\t\t\tS.push(temp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (s[0]=='E'){//\u7ec8\u6b62\u4e00\u4e2a\u5faa\u73af\n\t\t\t\tif (S.empty()){//\u6ca1\u6709\u53ef\u4ee5\u51fa\u6808\u7684,\u7edd\u5bf9\u9519\n\t\t\t\t\tsolve=true;\n\t\t\t\t\tputs(\"ERR\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse{//\u53ea\u662f\u4e00\u4e2aend\n\t\t\t\t\thash[S.top().c]=0;//\u9500\u6bc1\u5faa\u73af\u53d8\u91cf\n\t\t\t\t\tif (S.top().z==1)//\u8fd9\u6b21\u9000\u51fa\u7684\u662f\u5047\u5faa\u73af\n\t\t\t\t\t\tflag=false;//\u91cd\u65b0\u6807\u8bb0\u4e3a\u5728\u771f\u5faa\u73af\u5185\n\t\t\t\t\tS.pop();//\u51fa\u6808\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!solve){//\u5982\u679c\u5230\u73b0\u5728\u6ca1\u5224\u65ad\u5176\u9519\n\t\t\tif (!S.empty()){//\u8fd8\u662f\u9519\n\t\t\t\tputs(\"ERR\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (w==comp)\n\t\t\t\t\tputs(\"Yes\");\n\t\t\t\telse\n\t\t\t\t\tputs(\"No\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536681810,
        "uid": 36399,
        "name": "blackjack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "~~\u53d7\u5230\u4e86**\u667a\u7184**\u7684\u51b2\u51fb~~\n\n\u7ed9\u5404\u4f4d\u4f7f\u7528cin/cout\u5e76\u4e3a\u5728\u7ebf\u64cd\u4f5c\u7684OIer\u4eec\u63d0\u4f9b\u5c0f\u5c0f\u7684\u5e2e\u52a9$:)$\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cctype>\nusing namespace std;\n//\u53d8\u91cf\u540d\u53ef\u80fd\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u89c1\u8c05\u89c1\u8c05\u3002\nint t, l, flr, stp, gvn, rlt, mrlt;\n/*\nT, l\u5982\u9898\nflr\u4e3a\u5f53\u524d\u5faa\u73af\u5c42\u6570\uff0cstp\u4e3a\u5f53\u524d\u6570\u636e\u7ec4\u6570\uff08\u4ee5\u4fbf\u8fdb\u884c\u5224\u91cd\u7b49\uff09\ngvn\u662f\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\uff0crlt\u662f\u5f53\u524d\u5faa\u73af\u7684\u590d\u6742\u5ea6\uff0c\n\u800cmrlt\u4e3a\u8be5\u7a0b\u5e8f\u6700\u5927\u590d\u6742\u5ea6\uff08\u4ee5\u4fbf\u4e0egvn\u8fdb\u884c\u6bd4\u8f83\uff09\u3002\n*/\nint vis[26], noin[101], inc[101];\n/*\nvis\u4e3a\u53d8\u91cf\u540d\u7684\u5224\u91cd\uff0cnoin\u4e3a\u5f53\u524d\u5faa\u73af\u662f\u5426\u5408\u6cd5\uff08\u5373\u662f\u5426x<y\uff09\uff0c\ninc\u4e3a\u5f53\u524d\u5c42\u662f\u5426\u8fdb\u884c\u4e86\u590d\u6742\u5ea6\u7684\u589e\u52a0\u3002\n*/\nchar var[101];//var\u4e3a\u5f53\u524d\u5c42\u7684\u53d8\u91cf\u540d\u3002\nstring s, ss;\ninline int get_int(string ss) {\n\tif(ss[0] == 'n') return (0x7f);\n\tint x = 0, lent = ss.size();\n\tfor (int i = 0; i < lent; ++i)\n\t\tif(isdigit(ss[i])) x = x * 10 + ss[i] - '0';\n\treturn x;\n}//\u5728\u5b57\u7b26\u4e32\u4e2d\u8bfb\u53d6\u6570\u5b57\u3002\ninline void rest(int now, bool fl) {\n\tif(fl) {\n\t\tcin >> s >> ss;\n\t}\n\tfor (int i = now; i <= l; ++i) {\n\t\tcin >> s;\n\t\tif(s == \"F\") {\n\t\t\tcin >> s; cin >> s >> ss;\n\t\t}\n\t}\n\treturn ;\n}//\u5904\u7406\u9519\u8bef\u8df3\u51fa\u540e\u4ea7\u751f\u7684\u5269\u4f59\u3002\nvoid solve() {\n\tflr = rlt = mrlt = nodone = 0;\n\tcin >> l >> s;\n\tif(s.find(\"n^\") != -1) gvn = get_int(s);\n\telse gvn = 0;\n/*\n\u5982\u679c\u5728\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e2d\uff08s\u4e2d\uff09\u627e\u5230\u4e86\u201cn^\u201d\u7684\u6a21\u5f0f\u7684\u8bdd\uff0c\n\u5219\u5c06s\u4e2d\u7684\u6570\u5b57\u8bfb\u51fa\u4f5c\u4e3a\u590d\u6742\u5ea6\uff0c\u82e5\u6ca1\u6709\u5219\u4ee50\u4ee3\u8868\u5e38\u6570\u590d\u6742\u5ea6\u3002\n*/\n\tfor (int i = 1; i <= l; ++i) {\n\t\tcin >> s;//\u8bfb\u8fdb\u7b2c\u4e00\u4e2a\u5b57\u7b26\n\t\tif(s == \"F\") {\n\t\t\tflr++;//\u82e5\u4e3aF\uff0c\u5219\u5c42\u6570\u52a0\u4e00\u3002\n\t\t\tcin >> s; //\u8f93\u5165\u53d8\u91cf\u540d\u3002\n\t\t\tif(vis[s[0] - 'a'] == stp) {\n\t\t\t\tcout << \"ERR\\n\"; rest(i + 1, true); return ;\n                //\u5224\u91cd\u3002\n\t\t\t}\n\t\t\tvis[s[0] - 'a'] = stp;\n\t\t\tvar[flr] = s[0];\n            //\u5c06\u53d8\u91cf\u8bbe\u4e3a\u5df2\u8bbf\u95ee\uff0c\u8bb0\u5f55\u8be5\u5c42\u53d8\u91cf\u540d\u3002\n\t\t\tif(noin[flr - 1] == stp) noin[flr] = stp;\n            //\u82e5\u4e0a\u5c42\u4e0d\u5408\u6cd5\uff0c\u8be5\u5c42\u968f\u4e4b\u4f20\u9012\u72b6\u6001\u3002\n\t\t\tcin >> s >> ss;\n\t\t\tif(s != ss && !isdigit(ss[0]) && flr > rlt && noin[flr] != stp) {\n\t\t\t\trlt++; inc[flr] = stp; mrlt = mrlt < rlt ? rlt : mrlt;\n                //\u82e5\u7b26\u5408\u72b6\u6001\uff0c\u5219\u66f4\u65b0\u590d\u6742\u5ea6\u3002\n\t\t\t}\n\t\t\tif(s != ss && ((!isdigit(s[0]) && isdigit(ss[0])) || get_int(s) > get_int(ss))) noin[flr] = stp;\n            //\u82e5\u4e0d\u5408\u6cd5\uff0c\u66f4\u65b0\u72b6\u6001\u3002\n\t\t}\n\t\tif(s == \"E\") {\n\t\t\tif(flr - 1 < 0) {\n\t\t\t\tcout << \"ERR\\n\"; rest(i + 1, false); return ;\n                //\u6709\u8bed\u6cd5\u9519\u8bef\uff08E\u591a\u4e8eF\uff09\uff0c\u8df3\u51fa\uff0c\u5904\u7406\u5269\u4f59\u3002\n\t\t\t}\n\t\t\tvis[var[flr] - 'a']--;\n\t\t\tnoin[flr]--;\n\t\t\tif(inc[flr] == stp) {\n\t\t\t\tinc[flr]--;\n\t\t\t\trlt--;\n\t\t\t}\n\t\t\tflr--;\n            //\u5012\u56de\u72b6\u6001\u3002\n\t\t}\n\t}\n    //\u6700\u7ec8\u5224\u65ad\u3002\n\tif(flr != 0) {\n\t\tcout << \"ERR\\n\"; return ;\n\t}\n\tif(gvn == mrlt) cout << \"Yes\\n\";\n\telse cout << \"No\\n\";\n\treturn ;\n}\nint main() {\n\tcin >> t;//\u8f93\u5165\u6570\u636e\n\twhile(t--) {\n\t\tstp++;\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n\u8c28\u4ee5\u6b64\u4f5c\u4e3aNOIP2017\u7eaa\u5ff5($QwQ$)\u3002\n~~\u5176\u5b9e\u6ca1\u90a3\u4e48\u4e25\u8083\u5566~~",
        "postTime": 1519378147,
        "uid": 17381,
        "name": "mzq667",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u63d0\u9ad8D1T2\n\n\u601d\u8def: ~~\u7b80\u5355\u7684~~ \u6a21\u62df,\u7528stack\u6765\u5339\u914d\u5faa\u73af,\u6ce8\u610f\u5404\u79cd\u7ec6\u8282.\u4e3b\u8981\u601d\u8def\u89c1\u4ee3\u7801.\n\n(\u4ee5\u4e0b\u662f\u6bd4\u8d5b\u6e90\u4ee3\u7801,\u4e0d\u4e00\u5b9a\u4fdd\u8bc1AC\u2026\u2026)\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <stack>\nusing namespace std;\nstruct xlxs{ //\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u8981\u53d6\u8fd9\u4e2a\u540d\u5b57.\n    char ch; //\u5faa\u73af\u53d8\u91cf\u540d(\u4e5f\u4e0d\u8981\u95ee\u6211\u6709\u4ec0\u4e48\u7528).\n    int x, y, w; //\u521d\u503c,\u7ec8\u503c,\u8be5\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\n    bool bx, by; //\u5206\u522b\u8868\u793ax,y\u662f\u5426\u4e0d\u662f\u5e38\u6570.\n    xlxs(char ch = ' ', int x = 0, int y = 0) : ch(ch), x(x), y(y) //\u6784\u9020\u51fd\u6570(\u4e3a\u4e86\u65b9\u4fbf)\n    {\n        w = bx = by = 0;\n    }\n    int xyxh() const;\n    void xy(const xlxs& a);\n};\nint xlxs::xyxh() const //\u8ba1\u7b97\u5f53\u524d\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6(\u9700\u4fdd\u8bc1\u8be5\u5faa\u73af\u7684\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6700\u5927\u503c\u5df2\u7ecf\u4fdd\u5b58\u5728\u4e86this -> w)\n{\n    if (!bx && !by) return w * (x <= y); //\u5982\u679c\u90fd\u662f\u5e38\u6570\u4e14x<=y,\u8fd4\u56de\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6700\u5927\u503c,\u5426\u5219\u8fd4\u56de0(\u8868\u793an^0,\u5373\u5e38\u6570\u590d\u6742\u5ea6)\n    if (bx && !by) return 0; //\u5982\u679cx\u4e0d\u662f\u5e38\u6570\u4f46y\u662f\u5e38\u6570,\u8fd4\u56de\u5e38\u6570\u590d\u6742\u5ea6(\u5faa\u73af\u4e0d\u6267\u884c)\n    if (bx && by) return w; //\u5982\u679c\u90fd\u4e0d\u662f\u5e38\u6570,\u53ea\u6709\u4e00\u79cd\u53ef\u80fd,\u5373\u4ecen\u5faa\u73af\u5230n,\u590d\u6742\u5ea6\u5c31\u662f\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6700\u5927\u503c.\n    //if (!bx && by) return w + 1; //\u5982\u679cx\u662f\u5e38\u6570\u4f46y\u4e0d\u662f\u5e38\u6570,\u590d\u6742\u5ea6\u662f\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6700\u5927\u503c\u7684\u6307\u6570+1\n    return w + 1; //\u540c\u4e0a,\u56e0\u4e3a\u53ea\u6709\u8fd9\u56db\u79cd\u60c5\u51b5,\u4e3a\u4e86\u4fdd\u9669\u8fd8\u662f\u628a\u4e0a\u9762\u90a3\u4e2a\u6ce8\u91ca\u6389\u4e86\n}\nvoid xlxs::xy(const xlxs& a) //\u5c06\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5e76\u5230\"\u592b\u5faa\u73af\"\u4e2d.\n{\n    int w2 = a.xyxh(); //\"\u5b50\u5faa\u73af\"\u7684\u65f6\u95f4\u590d\u6742\u7684\n    //printf(\"debug:w2 = %d\\n\", w2);\n    if (w2 > this -> w) //\u53d6\u6700\u5927\u503c\n    {\n        //printf(\"debug:%d > %d\\n\", w2, this -> w);\n        this -> w = w2;\n    }\n}\nint t, l, w, w1;\nchar st[10001];\nbool b[26], err;\nstack < xlxs > s; //STL\u6808\nxlxs a, tt;\nint main()\n{\n    scanf(\"%d\", &t);\n    while (t--)\n    {\n        memset(b, 0, sizeof(b)); //\u5faa\u73af\u53d8\u91cf\u5224\u91cd\u6570\u7ec4\u521d\u59cb\u5316(\u7b2c\u4e00\u6b21\u5fd8\u8bb0\u4e86\u7136\u540egg)\n        scanf(\"%d %s\", &l, st);\n        //printf(\"debug:st = \\\"%s\\\"\\n\", st);\n        if (strcmp(st, \"O(1)\")) sscanf(st, \"O(n^%d)\", &w); //\u5982\u679c\u4e0d\u662f\u5e38\u6570\u7528sscanf\u8bfb\u5165w\n        else w = 0; //\u5426\u5219\u662f\u5e38\u6570\n        //printf(\"debug:l = %d, w = %d\\n\", l, w);\n        err = l & 1; //\u5982\u679c\u6709\u5947\u6570\u884c\u5219\u4e00\u5b9a\u662f\u9519\u8bef\u7684\n        tt.w = 0; //\u865a\u62df\u7684\u6700\u5916\u5c42\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        for (register int i = l + 1; --i; )\n        {\n            //printf(\"debug:i = %d\\n\", i);\n            scanf(\"%s\", st);\n            //printf(\"debug:st = \\\"%s\\\"\\n\", st);\n            if (st[0] == 'F') //\u65b0\u5efa\u5faa\u73af\n            {\n                if (err) //\u5982\u679c\u5df2\u6709\u9519\u8bef,\u8bfb\u5b8c\u5c31\u8df3\u8fc7\n                {\n                    scanf(\"%s\", st);\n                    //a.ch = st[0];\n                    scanf(\"%s\", st);\n                    /*if (st[0] == 'n') a.x = 0, a.bx = 1;\n                    else sscanf(st, \"%d\", &a.x), a.bx = 0;*/\n                    scanf(\"%s\", st);\n                    /*if (st[0] == 'n') a.y = 0, a.by = 1;\n                    else sscanf(st, \"%d\", &a.y), a.by = 0;*/\n                    continue;\n                }\n                scanf(\"%s\", st);\n                a.ch = st[0]; //\u8bfb%c\u4f3c\u4e4e\u4f1a\u70b8\n                scanf(\"%s\", st);\n                if (st[0] == 'n') a.x = 0, a.bx = 1;\n                else sscanf(st, \"%d\", &a.x), a.bx = 0;\n                scanf(\"%s\", st);\n                if (st[0] == 'n') a.y = 0, a.by = 1;\n                else sscanf(st, \"%d\", &a.y), a.by = 0; //\u5224\u65ad\u5e38\u6570/\u975e\u5e38\u6570\u548c\u5e38\u6570\u7684\u6570\u5b57\n                a.w = 0;\n                //printf(\"debug:a.ch = \\'%c\\', a.x = %d, a.y = %d\\n\", a.ch, a.x, a.y);\n                if (b[a.ch - 'a']) err = 1; //\u5faa\u73af\u53d8\u91cf\u91cd\u540d\n                else\n                {\n                    b[a.ch - 'a'] = 1;\n                    s.push(a); //\u8be5\u5faa\u73af\u5165\u6808\n                }\n            }\n            else\n            {\n                if (err) continue; //\u5982\u679c\u9519\u8bef\u5c31continue\n                if (s.empty()) err = 1; //\u5982\u679cstack\u4e3a\u7a7a,\u8bf4\u660e\u4e0d\u5339\u914d,\u9519\u8bef\n                else\n                {\n                    a = s.top();\n                    s.pop(); //\u51fa\u6808\n                    if (!s.empty()) s.top().xy(a); //\u5982\u679c\u6808\u975e\u7a7a,\u5f53\u524d\u5faa\u73af\u65f6\u95f4\u590d\u6742\u5ea6\u5408\u5e76\u5230\u5f53\u524d\u6808\u9876\u5faa\u73af\n                    else tt.xy(a); //\u5426\u5219\u5408\u5e76\u5230\u865a\u62df\u6700\u5916\u5c42\u5faa\u73af\n                    b[a.ch - 'a'] = 0; //\u5faa\u73af\u53d8\u91cf\u9500\u6bc1\n                }\n            }\n        }\n        if (!s.empty()) //\u5982\u679c\u6700\u540e\u6808\u975e\u7a7a,\u8bf4\u660e\u4e0d\u5339\u914d,\u8bed\u6cd5\u9519\u8bef\n        {\n            err = 1;\n            while (!s.empty()) s.pop(); //\u6e05\u7a7a\u6808\n        }\n        if (err) puts(\"ERR\");\n        else if (w == tt.w) puts(\"Yes\");\n        else puts(\"No\"); //\u5224\u65ad&\u8f93\u51fa\n    }\n}\n```",
        "postTime": 1510835401,
        "uid": 22132,
        "name": "little_gift",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "## \u5206\u6790\n\n\u9996\u5148\uff0c\u9898\u76ee\u5927\u610f\u5206\u6790\u4e00\u4e0b\uff1a\n\n\t1.\u4e3a EER \u7684\u60c5\u51b5\uff1a\n    \n    \t\uff081\uff09\u53d8\u91cf\u540d\u91cd\u590d\u5b9a\u4e49-->\u7528\u4e00\u4e2a map \u51fd\u6570\n    \n    \t\uff082\uff09 F \u4e0e E \u4e0d\u5339\u914d-->\u7528\u6808\u505a\uff0c\u6808\u4e0d\u4e3a\u7a7a\u7684\u65f6\u5019\n            \n    2.O(1) :\u8fd9\u4e2a O(1) \u53ea\u6709\u56db\u4e2a\u5b57\u7b26\uff0c\u53ef\u7528\u957f\u5ea6\u5224\u65ad\uff0c\u518d\u4e0e\u7edf\u8ba1\u7684\u6700\u5927 O(N^M) \u7684 M \u8fdb\u884c\u6bd4\u8f83,\u82e5M==0\uff0c\u5219\u4e3a Yes \uff0c\u53cd\u4e4b\u4e3a No\n    \n\t3.O(N^M) :\u9898\u76ee\u91cc\u7ed9\u7684\u7b54\u6848\u53ea\u6709 M \u662f\u5173\u952e\u7684\u800c\u4ed6\u6070\u597d\u57284\u53ca\u4e4b\u540e\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u7528\u5f97\u51fa\u7684\u6570\u5b57\u4e0e\u7edf\u8ba1\u7684 M \u8fdb\u884c\u6bd4\u8f83\uff0c\u76f8\u540c\u4e3a Yes \uff0c\u53cd\u4e4b\u4e3a No\n\n\t4.\u5728\u4e0d\u80fd\u8fdb\u5165\u7684\u5faa\u73af\u4e4b\u540e\u5faa\u73af\u4e0d\u80fd\u52a0\u5165\u6700\u5927O(N^M) \u7684\u8ba1\u6570\n    \n    5.F i n n \u7684\u60c5\u51b5\u8981\u7279\u5224\uff0c\u8fd9\u6837\u662f\u7b97 O(1) \u7684\uff0c\u800c\u4e14\u4e4b\u540e\u7684\u53ef\u4ee5\u7ee7\u7eed\u505a\n    \n    6.\u6709 O(1)\u548c O(N^M) \u540c\u65f6\u5b58\u5728\u7684\u60c5\u51b5\u53ea\u8ba1\u6570 O(N^M)\n    \n    \n\u518d\u7528\u6808\u505a\uff0c\u8bb0\u5f55\u5b57\u7b26\uff0c\u6570\u5b57\uff0c\u8f93\u5165\u6709\u70b9\u6076\u5fc3\uff0c\u4e0d\u8fc7\u89c4\u907f\u4e00\u4e0b\u5c31\u597d\n\n f / fm \u4e3a\u5f00\u59cb\u4f4d\u7f6e\u7684\u6570\u5b57\u6216\u5b57\u7b26\n \n e / en  \u7ed3\u675f\n\nflag \u5224\u65ad\u662f\u5426\u8fdb\u5165\u4e86\u4e0d\u53ef\u80fd\u8fdb\u5165\u7684\u5faa\u73af\n\nsum \uff1a~~dp\u601d\u60f3\uff0c\u989d\uff0c\u6211\u89c9\u5f97\u5566\uff0c~~\uff0c\u5f53\u524d\u5c42\u7684\u6700\u5927 M \n\n\u6bcf\u6b21\u51fa\u6808\u8bb0\u5f97\u7ed9\u6808\u6e05\u7a7a\n\n\u6bcf\u6b21\u505a\u65b0\u7684\u5faa\u73af\u8981\u628a map \u6e05\u7a7a\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint T,top,ans;\nbool un=1;//\u5224\u65ad\u662f\u5426\u6709\u5df2\u7ecf\u7528\u8fc7\u7684\u53d8\u91cf \nchar s[105];//\u7ed9\u7684\u7b54\u6848 \nstruct zhan{\n\tchar fm,en,bl;\n\tint f,e,sum,flag;\n}z[1003];//\u5faa\u73af\u5165\u6808 \nmap<char,int>book;\nvoid push()\n{//\u5165\u6808 \n\ttop++; z[top].flag=0; z[top].f=0, z[top].e=0;\n\tchar ch; ch=getchar();\n\twhile(ch<'a'||ch>'z') ch=getchar();\n\tz[top].bl=ch;\n\tif(book[ch]) un=0;\n\telse book[ch]=1;\n\twhile(ch!='n'&&(ch<'0'||ch>'9')) ch=getchar();\n//\tcout<<ch;\n\tif(ch=='n') z[top].fm='n',z[top].f=-1000,ch=getchar();\n\telse \n\t{\n\t\twhile(ch>='0'&&ch<='9') \n\t\t{\n\t\t\tz[top].f=z[top].f*10+ch-'0';\n\t\t\tch=getchar();\n//\t\t\tcout<<ch;\n\t\t}\n\t\tz[top].fm=' ';\n\t}\n\twhile(ch!='n'&&(ch<'0'||ch>'9')) ch=getchar();\n//\tcout<<\"BBB    \"<<z[top].f<<endl;\n\tif(ch=='n') z[top].en='n',z[top].e=-1000;\n\telse \n\t{\n\t\twhile(ch>='0'&&ch<='9') \n\t\t{\n\t\t\tz[top].e=z[top].e*10+ch-'0';\n\t\t\tch=getchar();\n//\t\t\tcout<<ch<<\" \";\n\t\t}\n\t\tz[top].en=' ';\n\t}\n//\tcout<<endl;\n\tif(z[top-1].flag==0&&z[top].f!=-1000&&z[top].en=='n') \n\t\t z[top].sum=z[top-1].sum+1;\n\telse if(z[top-1].flag==0&&z[top].f!=-1000&&z[top].e!=-1000&&z[top].e-z[top].f>=0)\n\t\t z[top].sum=z[top-1].sum;\n\telse if(z[top-1].flag==0&&z[top].fm=='n'&&z[top].en=='n')\n\t\t z[top].sum=z[top-1].sum;\n\telse z[top].sum=z[top-1].sum,z[top].flag=1;\n//\tcout<<\"AA  \"<<z[top-1].flag<<\" \"<<z[top].sum<<\" \"<<z[top].f<<\" \"<<z[top].fm<<\" \"<<z[top].e<<\" \"<<z[top].en<<\" \"<<z[top].flag<<\" GG\"<<endl;\n}\nvoid pop()\n{//\u51fa\u6808 \n\tif(z[top].en=='n')\n\t\tans=max(ans,z[top].sum);\n//\t\tcout<<\"CCCC   \"<<ans<<endl;\n\tbook[z[top].bl]=0; z[top].flag=0; \n\tz[top].bl=' '; z[top].e=0, z[top].en=' '; \n\tz[top].f=0, z[top].fm=' ';  z[top].sum=0;\n\ttop--;\n}\nbool pd(int x)\n{\n//\tcout<<x<<\" \"<<ans<<\" \";\n\tif(x==4&&ans==0) return 1;\n\tint ss=0,len=4;\n\twhile(s[len]>='0'&&s[len]<='9') ss=ss*10+s[len]-'0',len++;\n//\tcout<<ss<<endl;\n\tif(ss==ans) return 1;\n\treturn 0;\n}\nint main()\n{\n//\tfreopen(\"complexit.in\",\"r\",stdin);\n//\tfreopen(\"complexit.out\",\"w\",stdout);\n\tscanf(\"%d\",&T);\n\tfor(int u=1;u<=T;u++)\n\t{\n\t\tans=0,un=1; top=0; book.clear();\n\t\tint l; scanf(\"%d\",&l);\n\t\tcin>>s; int len=strlen(s);\n\t\tfor(int i=1;i<=l;i++)\n\t\t{\n\t\t\tchar ch; ch=getchar();\n\t\t\twhile(ch!='E'&&ch!='F') ch=getchar();\n//\t\t\tcout<<ch<<\" \";\n\t\t\tif(ch=='F') push();\n\t\t\telse if(ch=='E') pop();\n\t\t}\n//\t\tcout<<endl<<top<<\" \"<<un<<endl;\n\t\tif(top||un==0) { printf(\"ERR\\n\"); continue; }\n\t\telse if(pd(len)) { printf(\"Yes\\n\"); continue; }\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572306579,
        "uid": 203827,
        "name": "\u6c5fyyyz1911",
        "ccfLevel": 0,
        "title": "P3952 \u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "## \u770b\u4e86\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u601d\u8def\u548c\u5176\u4ed6\u9898\u89e3\u5927\u4f6c\u4eec\u7684\u90fd\u4e0d\u4e00\u6837\u554a\n\n\u672c\u9898\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u62df\u9898\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u51e0\u4e2a\u95ee\u9898\uff1a\n\n### 1.for \u5faa\u73af\u91cc\u9762 n\u5728\u53f3\u8fb9\u624d\u80fd\u7b97\n\n\u662f\u4e0d\u662f\u611f\u89c9\u5f88\u7384\u5b66\u554a\uff0c\u7136\u800c\u7684\u786e\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679cn\u5728\u5de6\u8fb9\u7684\u8bdd\u5c31\u8bf4\u660en\u5c0f\u4e8e\u8fd9\u4e2a\u5e38\u6570\u4e8e\u662f\u8005\u5c31\u53d8\u6210\u4e86\u5e38\u6570\u7ea7\u522b\u7684\u7b97\u6cd5\u3002\n\n\u4f46\u662f\u641e\u4e0d\u6e05\u695a\u8fd9\u6837\u8fd9\u4e48\u5904\u7406\uff0c\u4e0d\u8fc7CCF\u4e5f\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e8e\u662f\u6570\u636e\u6ca1\u6709\u592a\u6bd2\u7624\uff0c\u6bd4\u5982\u4ee5\u4e0b\u8fd9\u79cd\n\n>1\n\n>4 O(n^1) \n\n>F i n 3\n\n>F j 4 n\n\n>E\n\n>E\n\n\u6309\u9053\u7406\u7b54\u6848\u65e2\u53ef\u4ee5\u662fO\uff081\uff09\u4e5f\u53ef\u4ee5\u662fO\uff08n^1\uff09,\u5f88\u5947\u602a\u7684\u662f\uff0c\u6211\u7684\u4ee3\u7801\u5982\u679c\u662fO\uff081\uff09\u4e5f\u80fd\u8f93\u51faYes\uff0cO\uff08n^1\uff09\u4e5f\u80fd\u8f93\u51faYes\uff0c\u7b2c\u4e00\u7bc7\u9898\u89e3\u662fO\uff081\uff09\u624d\u80fd\u8f93\u51fayes\n\n\u8fd9\u4e2a\u4e1c\u897f\u592a\u7384\u5b66\u4e86\uff0c\u8fd9\u4e2aO(1),O(N)\u4e5f\u662f\u8981\u770bN\u7684\n\n### 2.\u5faa\u73af\u53d8\u91cf\u540d\u600e\u4e48\u5224\u65ad\u91cd\u590d\u3002\n\n\u76ee\u524d\u770b\u8d77\u6765\u5faa\u73af\u53d8\u91cf\u540d\u53ea\u6709\u4e00\u4f4d\uff0c\u672c\u4eba\u5728\u505a\u9898\u7684\u65f6\u5019\u611f\u89c9\u6709\u53ef\u80fd\u51fa\u73b0\u597d\u51e0\u4f4d\u7684\u53d8\u91cf\u540d\uff08\u6bd5\u7adf\u957f\u5ea6\u4e0d\u8d85\u8fc7100\uff09\uff0c\u4e8e\u662f\u5199\u4e86\u4e2a\u54c8\u5e0c\u3002\n\n\u5176\u5b9e\u53ea\u9700\u8981\u52a0\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\u6807\u8bb0\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n### 3.\u5faa\u73af\u7ed3\u675f\u540e\u600e\u6837\u53d6\u6d88\u88ab\u6807\u8bb0\u7684\u53d8\u91cf\n\n\u5f00\u4e00\u4e2a\u6808\uff0c\u968f\u7740\u5faa\u73afF\u52a0\u5230\u6808\u9876E\u5f39\u51fa\u6808\u7684\u65f6\u5019\u540c\u65f6\u53d6\u6d88\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5176\u5b9e\u8fd9\u5757\u5730\u65b9\u6211\u7528\u4e86\u4e24\u4e2a\u6808\uff0c\u7b2c\u4e00\u4e2a\uff08st\uff09\u5b58\u53d8\u91cf\u540d\uff0c\u7b2c\u4e8c\u4e2a\uff08looker\uff09\u5b58\u8fd9\u4e2a\u53d8\u91cf\u662f\u5426\u5bf9\u8fd9\u4e2a\u5faa\u73af\u590d\u6742\u5ea6\u6709\u5f71\u54cd\uff08\u6709\u7684\u8bdd\u662f1\uff0c\u6ca1\u6709\u7684\u8bdd\u662f0\uff09\n\n### 4.\u90a3\u4e48\u4e00\u4e2a\u5faa\u73afF a x y \u5f53x>y\u7684\u65f6\u5019\u4ee5\u4e0b\u5faa\u73af\u600e\u4e48\u529e\n\n\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\uff08\u6211\u8fd9\u6bb5\u4ee3\u7801\u662fniup\uff09\uff0c\u5f53\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u65f6\u5019niup++\n\n\u518d\u5f00\u4e00\u4e2a\u6808\uff0c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u65f6\u5019\u5411\u6808\u5185\u538b\u4e00\u4e2a1\uff0c\u4e0d\u662f\u8fd9\u79cd\u60c5\u51b5\u7684\u65f6\u5019\u538b\u4e00\u4e2a0\uff0c\u6bcf\u6b21E\u5f39\u6808\u7684\u65f6\u5019\uff0c\u5982\u679c\u6808\u9876\u662f1,niup--\n\n\u6700\u5927\u5faa\u73af\u7684\u590d\u6742\u5ea6\u53ea\u6709\u5728niup==0\u7684\u65f6\u5019\u624d\u80fd\u6bd4\u8f83\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f++\u800c\u4e0d\u662f\u76f4\u63a5\u8bbe\u4e3a1\uff0c\u662f\u56e0\u4e3a\u8fd9\u6837\u7684\u60c5\u51b5\u5728\u4e00\u4e2aF\u5faa\u73af\u91cc\u9762\u53ef\u80fd\u5d4c\u5957\u4e86\u597d\u51e0\u4e2a\u3002\u6240\u4ee5\u4e0d\u80fd\u8fd9\u6837\u641e\u3002\n\n### 5.\u4f60\u7684\u4ee3\u7801\u600e\u4e48\u8fc7\u4e0d\u53bb\uff1f\n\n\u6211\u4e5f\u4e0d\u77e5\u9053\u554a\uff0c\u6211\u5f00\u4e86O2\u5c31\uff08WA->AC\uff09\u4e86\n\n### 6.\u4f60\u7684\u4ee3\u7801\u600e\u4e48\u8fd8\u8fc7\u4e0d\u53bb\uff1f\n\n\u6211\u5bf9\u4ee3\u7801\u505a\u4e86\u70b9\u624b\u811a\uff0c\u4f60\u5e94\u8be5\u770b\u5f97\u51fa\u6765\uff0c\u800c\u4e14\u6211\u5e0c\u671b\u4f60\u4eec\u91cd\u6e29\u4e00\u4e0b\u6211\u7684\u60e8\u75db\u7ecf\u5386\u3002\uff08\u4f60\u76f4\u63a5\u8df3\u5230\u6700\u4e0b\u9762\u5c31\u5e94\u8be5\u77e5\u9053\u6211\u600e\u4e48\u4e86\uff09\n\n### \u90a3\u4e48\u6211\u4eec\u6765\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nint n;\nstring s,fors;\n\ninline int getdight(int nowi)\n{\n\tint x=0;\n\tfor(register int i=nowi;i<s.size();i++)\n\t{\n\t\tif(s[i]>'9'||s[i]<'0') return x;\n\t\tx=x*10+s[i]-'0';\n\t}\n\treturn x;\n}\n\ninline int getdig(string s1)\n{\n\tint x=0;\n\tfor(register int i=0;i<s1.size();i++)\n\t{\n\t\tx=x*10+s1[i]-'0';\n\t}\n\treturn x;\n}\n\ninline int getlen()\n{\n\tregister int i,j;\n\tj=s.size();\n\tfor(i=0;i<j;i++)\n\tif(s[i]=='(')\n\t{\n\t\tif(s[i+1]=='1') return 0; //\u53ea\u6709O\uff081\uff09 \u624d\u4f1a\u662f'('\u53f3\u8fb9\u4e3a1\n\t\tif(s[i+1]=='n') \n\t\t{\n\t\t\ti+=3;  //\u76f4\u63a5\u8df3\u5230\u6570\u5b57\u90e8\u5206\n\t\t\treturn getdight(i);\n\t\t}\n\t}\n}\n\ninline int gethash(string t)\n{\n\tunsigned int x=0;\n\tfor(register int i=0;i<t.size();i++) x=x*19260817+int(t[i]-'a');\n\treturn x%457+1;\n}\n\ninline void slove(int m,int mutif)\n{\n\tstack <int> st;\n\tstack <int> looker;\n\tstack <int> looker2;\n\tregister int i,j;\n\tint bj[500];  //\u4e0a\u9762\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u8bb0\u5f97\u6bcf\u6b21\u6e05\u7a7abj\u6570\u7ec4\n\tmemset(bj,0,sizeof(bj));\n\tstring f,l,r,x;\n\tint ce=0,realf=0,mmxf=0;\n\tint numf=0,nume=0;\n\tint niup=0;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>f;\n\t\tif(f==\"F\") numf++,cin>>x>>l>>r;\n\t\tif(ce) continue;\n\t\tif(f==\"E\") \n\t\t{\n\t\t\tif(nume+1>numf) \n\t\t\t{\n\t\t\t\tce=1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbj[st.top()]=0;\n\t\t\tst.pop();\n\t\t\tif(looker.top()) realf--;\n\t\t\tlooker.pop();\n\t\t\tif(looker2.top()) niup--;\n\t\t\tlooker2.pop();\n\t\t\tnume++;  //\u8fd9\u91cc\u5c31\u662f\u5bf9\u5e94\u7684\u5904\u7406\u65b9\u6cd5nume\u662fE\u7684S\n\t\t\tcontinue;\n\t\t}\n\t\tint hx=gethash(x);\n\t\tif(bj[hx]) ce=1,st.push(hx);\n\t\telse \n\t\t{\n\t\t\tbj[hx]=1;\n\t\t\tint nl,nr;\n\t\t\tif(l!=\"n\") nl=getdig(l);\n\t\t\tif(r!=\"n\") nr=getdig(r); \n\t\t\tif(r==\"n\"&&l!=\"n\") looker2.push(0),looker.push(1),st.push(hx),realf++;\n\t\t\telse \n\t\t\t{\n\t\t\t\tst.push(hx),looker.push(0);\n\t\t\t\tif(nr<nl) niup++,looker2.push(1);\n\t\t\t\telse looker2.push(0);\n\t\t\t}\n\t\t\tif(!niup) mmxf=max(realf,mmxf);\n\t\t}\n\t}\n\tif(ce||numf!=nume) cout<<\"Err\"<<endl;  //E \u4e0e F \u5fc5\u987b\u8981\u6570\u91cf\u76f8\u7b49\n\telse if(mmxf==mutif) cout<<\"Yes\"<<endl;\n\telse if(mmxf!=mutif) cout<<\"No\"<<endl;\n\treturn ;\n\n}\n\nint main()\n{\n\tios::sync_with_stdio(false); \n\tregister int i,j,t;\n\tcin>>n;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>t;\n\t\tcin>>s;\n\t\tint mutilen=getlen();\n\t\tslove(t,mutilen);\n\t}\n\treturn 0;\n}\n```\n\n### \u7b54\u6848\u63ed\u79d8\n\nERR\u8981\u5927\u5199\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qr7pwze1.png)",
        "postTime": 1571386681,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "### \u7ecf\u5178\u6bd2\u7624\u6a21\u62df\u9898\n\u9996\u5148\u5148\u6765\u770b\u5b83\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u663e\u7136O(1)\u662f\u53ef\u4ee5\u8868\u793a\u6210O(n^0)\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\u5b83\u8ba4\u4e3a\u7684\u6b21\u6570\u6c42\u51fa\u6765  \n#### \u4f17\u6240\u5468\u77e5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u53d6\u590d\u6742\u5ea6\u6700\u9ad8\u7684\u4f5c\u4e3a\u8f93\u51fa\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2aans\u6765\u7edf\u8ba1\u6700\u9ad8\u7684\u6b21\u6570  \n\u6211\u4eec\u770b\u5230F\u5f00\u59cbE\u7ed3\u675f\u9996\u5148\u5c31\u4f1a\u60f3\u5230\u5b66\u4e60\u6808\u7684\u65f6\u5019\u7684\u62ec\u53f7\u5339\u914d\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u6211\u4eec\u4e5f\u8981\u4f7f\u7528\u6808\u6765\u8bb0\u5f55\u5f53\u524d\u5d4c\u5957\u7684\u5faa\u73af  \n\n------------\n\n\u8fd9\u9053\u9898\u7684\u8f93\u51fa\u6709\u4e09\u79cd\uff1a  \n1.ERR\u8bed\u6cd5\u9519\u8bef  \n2.Yes\u8ddf\u4ed6\u6240\u8bf4\u7684\u590d\u6742\u5ea6\u4e00\u6837  \n3.No\u8ddf\u4ed6\u6240\u8bf4\u7684\u590d\u6742\u5ea6\u4e0d\u4e00\u6837  \n\n------------\n\n\u5148\u8ba8\u8bba\u6bd4\u8f83\u7b80\u5355\u7684\u8bed\u6cd5\u9519\u8bef  \n1.E\u7684\u6570\u91cf\u5927\u4e8eR\u7684\u6570\u91cf\uff1a\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u5f53\u524d\u884c\u4e3aE\u7684\u65f6\u5019\u6808\u4e2d\u662f\u4e0d\u662f\u6709\u5143\u7d20\u5373\u6709\u6ca1\u6709\u672a\u7ed3\u675f\u7684\u5faa\u73af\u5373\u53ef  \n2.R\u7684\u6570\u91cf\u5927\u4e8eE\u7684\u6570\u91cf\uff1a\u5224\u65ad\u6240\u6709\u4ee3\u7801\u8bfb\u5165\u5b8c\u540e\u662f\u5426\u6709\u4ecd\u672a\u51fa\u6808\u7684\u5143\u7d20\u5373\u6ca1\u6709\u7ed3\u675f\u7684\u5faa\u73af  \n3.\u5faa\u73af\u53d8\u91cf\u91cd\u540d\uff1a\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2avst\u6570\u7ec4\u6765\u8bb0\u5f55\u5df2\u7ecf\u4f7f\u7528\u4e86\u54ea\u4e9b\u5b57\u6bcd\uff0c\u518d\u5728\u5faa\u73af\u7ed3\u675f\u65f6\u6d88\u9664\u6807\u8bb0\u5373\u53ef  \n\n\n------------\n### \u5bf9\u4e8e\u6bcf\u4e00\u884c\u4ee3\u7801\u7684\u5904\u7406\n1.\u5224\u65ad\u662f\u5426\u91cd\u540d   \n2.\u5c06\u5f53\u524d\u5faa\u73af\u5165\u6808\uff0c\u5e76\u66f4\u65b0\u6807\u8bb0  \n3.\u83b7\u53d6l\uff0cr\u5e76\u5bf9\u5176\u8fdb\u884c\u5224\u65ad\uff0c\u53ea\u6709\u5f53l\u4e3a\u5e38\u6570r\u4e3an\u65f6\u624d\u80fd\u66f4\u65b0\u590d\u6742\u5ea6\uff0c\n#### \u82e5l>r\u90a3\u4e48\u5faa\u73af\u6839\u672c\u6ca1\u6709\u8fd0\u884c\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5faa\u73af\u4e5f\u6ca1\u6709\u8fd0\u884c\uff0c\u9700\u8981\u5224\u65ad\uff0c\n\u5728\u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u6ce8\u89e3  \n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define LL long long\nusing namespace std;\nint read()\n{\n   int s=0,bj=0;\n   char ch=getchar();\n   while(ch<'0'||ch>'9')bj|=(ch=='-'),ch=getchar();\n   while(ch>='0'&&ch<='9')s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n   return bj?-s:s;\n}\nvoid printnum(int x)\n{\n\tif(x>9)printnum(x/10);\n\tputchar(x%10^48);\n}\nvoid print(int x,char ch)\n{\n\tif(x<0){putchar('-');x=-x;}\n\tprintnum(x);putchar(ch);\n}\nint T,n;\nint top;\nchar q[100005];\nbool vst[27],in[27];\nchar ch[105],tmp[5];\nint num,sum,ans,las;\nint flag,name;\nstring rabbish;\nint get_num()\n{\n\tint ret=0;\n\tscanf(\"%s\",tmp+1);\n\tif(tmp[1]=='n')ret=101;else {ret=0;for(int j=1;j<=strlen(tmp+1);j++)ret=(ret<<1)+(ret<<3)+tmp[j]-'0';}//<<1+<<3\u7b49\u4ef7\u4e8e*10\uff08\u636e\u8bf4\u66f4\u5feb\uff1f\uff09 \n\treturn ret;\n}\nint main()\n{\n\tT=read();\n\twhile(T--)\n\t{\n\t\tmemset(vst,0,sizeof(vst));memset(in,0,sizeof(in));\n\t\ttop=num=flag=sum=ans=0;las=-1;//las\u8868\u793a\u4e0a\u4e00\u4e2a\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u7684\u53d8\u91cf \n\t\tn=read();scanf(\"%s\",ch+1);\n\t\tif(ch[3]=='1')num=0;\n\t\telse for(int i=5;ch[i]!=')';i++)num=(num<<1)+(num<<3)+ch[i]-'0';//\u8bfb\u6b21\u6570 \n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(flag==1){getline(cin,rabbish);continue;}//\u6b64\u65f6\u53ea\u662f\u4e3a\u4e86\u628a\u4e1c\u897f\u8bfb\u5b8c\u9632\u6b62\u5f71\u54cd\u540e\u9762\u7684\u5176\u4ed6\u7ec4\u6570\u636e \n\t\t\tscanf(\"%s\",tmp+1);//\u8bfbF/E\n\t\t\tif(tmp[1]=='F')\n\t\t\t{\n\t\t\t\tscanf(\"%s\",tmp+1);\n\t\t\t\tname=tmp[1]-'a';\n\t\t\t\tif(vst[name]){flag=1;getline(cin,rabbish);continue;}//\u91cd\u540d \n\t\t\t\tq[++top]=name;vst[name]=1;//\u8bfb\u53d8\u91cf\u540d \n\t\t\t\tint l=get_num(),r=get_num();\n\t\t\t\tif(l^101&&r==101&&las==-1){sum++;ans=max(ans,sum);in[name]=1;}//\u5faa\u73af\u4e3aO(n) \n\t\t\t\telse if(l>r&&las==-1)las=name;//\u6ca1\u8fdb\u5165\u5faa\u73af\uff0c \n\t\t\t}\n\t\t\telse if(!top)flag=1;//E\u6570\u91cf\u5927\u4e8eR\u6570\u91cf \n\t\t\telse \n\t\t\t{\n\t\t\t\tif(las==q[top])las=-1;//\u5982\u679c\u4e0a\u4e00\u4e2a\u6ca1\u6709\u8fdb\u5165\u5faa\u73af\u7684\u53d8\u91cf\u51fa\u6808\u4e86\uff0c\u90a3\u4e48\u5f53\u524d\u72b6\u6001\u5c31\u53d8\u4e3a\u6ca1\u6709\u672a\u8fdb\u5165\u5faa\u73af\u7684\u53d8\u91cf \n\t\t\t\tif(in[q[top]]){sum--;in[q[top]]=0;}//\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u5165\u4e86\u5faa\u73af\uff0c\u66f4\u65b0\u5f53\u524d\u590d\u6742\u5ea6 \n\t\t\t\tvst[q[top--]]=0;//\u6e05\u6389\u8be5\u5b57\u6bcd\u7684\u4f7f\u7528\u6807\u8bb0 \n\t\t\t}\n\t\t}\n\t\tif(flag||top)puts(\"ERR\");//R\u6570\u91cf\u5927\u4e8eE\u6570\u91cf \n\t\telse if(ans==num)puts(\"Yes\");//\u4e0e\u4ed6\u8f93\u5165\u7684\u4e00\u6837 \n\t\telse puts(\"No\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1571151118,
        "uid": 42019,
        "name": "wubaiting2020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "**\u9898\u610f**: \u7ed9\u4f60\u4e00\u4e2a$L$\u884c\u7684\u5faa\u73af\u4ee3\u7801,&ensp;\u5224\u65ad\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef\u6216\u8005\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u4e0d\u6b63\u786e\n\n\u63a5\u4e0b\u6309\u7740\u4ee3\u7801\u987a\u5e8f\u6765\u8bb2\u8bb2\u601d\u8def.&ensp; \u672c\u4eba\u7684\u505a\u6cd5\u662f\u6a21\u62df\u7a0b\u5e8f\u7684\u5927\u81f4\u8fd0\u884c\u8fc7\u7a0b.&ensp;\n\n* \u5b8f\u5b9a\u4e49\u58f0\u660e:\n\n  $read()$ $print():$ \u8bfb\u5165$/$\u8f93\u51fa\u4f18\u5316\n\n  __ $space$ __ $endl:$ \u8f93\u51fa\u7a7a\u683c$/$\u6362\u884c\n\n  $rg:$ $register$, ~~\u7528\u6765\u5361\u5e38~~\n\n* **\u8bfb\u5165**:\n\n   * \u8003\u8651\u5230\u4ee3\u7801\u4e3a\u5b57\u7b26\u4e32,&ensp; \u6211\u4eec\u9009\u62e9\u7528\u4e8c\u7ef4\u6570\u7ec4\u8bfb\u5165.&ensp; \u7531\u4e8e\u6bcf\u4e2a$F$\u5faa\u73af\u5185\u6709\u8bf8\u591a\u7a7a\u683c,&ensp; \u6545$scanf()$\u5728\u672c\u9898\u4e2d\u6548\u679c\u5e76\u4e0d\u7406\u60f3.&ensp; \u6211\u4eec\u91c7\u7528$gets()$\u8bfb\u5165.&ensp; \u503c\u5f97\u6ce8\u610f\u7684\u662f,&ensp; $gets()$\u4f1a\u5c06\u7f13\u51b2\u533a\u7684\u6362\u884c\u7b26\u91ca\u653e$($\u4e5f\u5c31\u662f\u8bf4\u4f60\u8fd9\u4e00\u6b21$gets()$\u7684\u6570\u7ec4\u672b\u5c3e\u662f\u6ca1\u6709\u6362\u884c\u7b26\u7684,&ensp; \u800c\u4e14\u4e0b\u4e00\u6b21$gets()$\u4e4b\u524d\u4e5f\u4e0d\u9700\u8981$getchar()$\u5403\u6362\u884c\u7b26,&ensp; \u56e0\u4e3a\u8fd9\u4e2a\u6362\u884c\u5df2\u7ecf\u88ab\u91ca\u653e\u4e86$)$,&ensp; \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u7b2c\u4e00\u6b21$gets()$\u4e4b\u524d\u4f7f\u7528$getchar()$\u5c06\u6362\u884c\u7b26\u5403\u6389\u5373\u53ef.&ensp;\n   \n   * \u4ee3\u7801\u5b9e\u73b0\n    ```cpp\n    read(line), scanf(\"%s\", O + 1);\n    rg char c = getchar();\n    for (rg int i = 1; i <= line; ++i) gets(cpp[i] + 1);\n    ```\n\n\n* **\u629b\u51fa\u9519\u8bef**\n\n   \n   * \u82e5$F$\u4e0e$E$\u4e0d\u5339\u914d\u5219\u629b\u51fa\u9519\u8bef\n   \n      * \u82e5\u8bfb\u5165\u7684\u4ee3\u7801\u4e3a\u5947\u6570\u884c,&ensp; \u7531\u4e8e$A++$\u8bed\u8a00\u7684\u7279\u6027,&ensp; \u53ef\u4ee5\u77e5\u9053\u81f3\u5c11\u6709\u4e00\u4e2a$F$\u6216\u8005\u4e00\u4e2a$E$\u672a\u6210\u529f\u5339\u914d,&ensp; \u76f4\u63a5\u629b\u51fa\u9519\u8bef\u5373\u53ef.&ensp;\n      \n      * \u82e5\u8bfb\u5165\u7684\u4ee3\u7801\u4e3a\u5076\u6570\u884c\u5219\u9700\u8981\u624b\u52a8\u5224\u65ad\u5339\u914d.&ensp; \u6211\u4eec\u8003\u8651\u91c7\u7528\u7c7b\u4f3c`\u62ec\u53f7\u5339\u914d`\u7684\u505a\u6cd5\u6765\u5b8c\u6210$FE$\u5339\u914d.&ensp; \u5927\u81f4\u505a\u6cd5\u662f\u5faa\u73af\u904d\u5386\u6bcf\u4e00\u884c\u4ee3\u7801,&ensp; \u5e76\u4f7f\u7528\u7b26\u53f7\u6808\u7ef4\u62a4.&ensp; \n      \n         * \u82e5\u9996\u5b57\u6bcd\u4e3a$F$,&ensp; \u5219\u5c06\u5176\u653e\u5165\u7b26\u53f7\u6808.&ensp;\n         \n         * \u82e5\u9996\u5b57\u6bcd\u4e3a$E$\n         \n            * \u82e5\u7b26\u53f7\u6808\u4e3a\u7a7a,&ensp; \u5219\u6ca1\u6709$F$\u80fd\u548c\u8fd9\u4e2a$E$\u5339\u914d,&ensp; \u629b\u51fa\u9519\u8bef.&ensp;\n            \n            * \u5426\u5219\u5c06\u7b26\u53f7\u6808\u5f39\u51fa\u4e00\u4f4d\n         * \u82e5\u7b26\u53f7\u6808\u4e3a\u7a7a,&ensp; \u5339\u914d\u6210\u529f,&ensp; \u5426\u5219\u5339\u914d\u5931\u8d25,&ensp; \u629b\u51fa\u9519\u8bef.&ensp;\n         \n     * \u82e5\u53d8\u91cf\u540d\u91cd\u590d,&ensp; \u5219\u9700\u8981\u629b\u51fa\u9519\u8bef.&ensp; \u5224\u65ad\u65b9\u6cd5\u4f9d\u65e7\u662f\u904d\u5386\u4ee3\u7801.&ensp; \u53ef\u4ee5\u548c$FE$\u5339\u914d\u4e00\u8d77\u5b8c\u6210.&ensp; \u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u53d8\u91cf\u540d\u662f\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd,&ensp; \u6240\u4ee5\u53d8\u91cf\u4e00\u5b9a\u5728\u4e0b\u6807\u4e3a$3$\u7684\u4f4d\u7f6e.&ensp; \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u6808\u548c$vis$\u6570\u7ec4\u6765\u7ef4\u62a4,&ensp; $vis$\u7684\u4e0b\u6807\u76f4\u63a5\u7528$char$\u5373\u53ef,&ensp; \u4e0d\u9700\u8981\u8f6c\u6362\u4e3a\u6570\u5b57.&ensp;\n     \n        * \u82e5\u9996\u5b57\u6bcd\u4e3a$F$,&ensp; \u53d6\u51fa\u5f53\u524d\u53d8\u91cf$x$\n        \n           * \u82e5\u8be5\u53d8\u91cf\u5df2\u7ecf\u4f7f\u7528$(vis[x] == true)$,&ensp; \u5219\u629b\u51fa\u9519\u8bef.&ensp;\n           \n           * \u5426\u5219\u5c06\u8be5\u53d8\u91cf\u6807\u8bb0\u4e3a\u5df2\u4f7f\u7528$(vis[x] = true)$\n           \n        * \u82e5\u9996\u5b57\u6bcd\u4e3a$E$,&ensp; \u53d6\u51fa\u5f53\u524d\u53d8\u91cf$x$\u5e76\u9500\u6bc1$(vis[x] = false)$\n     * \u5224\u65ad\u5b8c\u6bd5\u540e,&ensp; \u8bf4\u660e\u6ca1\u6709\u9519\u8bef\u53ef\u4ee5\u629b\u51fa.&ensp;\n     \n  * \u4ee3\u7801\u5b9e\u73b0\n  ```cpp\n  inline bool Error_Occur()\n  {\n      memset(used_inter, false, sizeof used_inter);\n      while (!s.empty()) s.pop();\n      if (line & 1) return true;\n      for (rg int i = 1; i <= line; ++i)\n      {\n          if (cpp[i][1] == 'F')\n          {\n              s.push('F');\n              if (used_inter[cpp[i][3]]) return true;\n              inter.push(cpp[i][3]);\n              used_inter[cpp[i][3]] = true;\n          }\n          else if (cpp[i][1] == 'E')\n          {\n              if (s.empty()) return true;\n              s.pop();\n              used_inter[inter.top()] = false;\n              inter.pop();\n          }\n      }\n      if (!s.empty()) return true;\n      return false;\n  }\n  ```\n\n* **\u8ba1\u7b97\u7a0b\u5e8f\u771f\u5b9e\u590d\u6742\u5ea6**\n\n   * \u9996\u5148,&ensp; \u7a0b\u5e8f\u662f\u4e00\u4e2a\u5faa\u73af\u4e00\u4e2a\u5faa\u73af\u8fdb\u5165,&ensp; \u4e00\u4e2a\u5faa\u73af\u4e00\u4e2a\u5faa\u73af\u9000\u51fa\u7684.&ensp; \u6211\u4eec\u5e94\u8be5\u80fd\u60f3\u5230\u7528\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u65f6\u95f4\u590d\u6742\u5ea6.&ensp; \u5177\u4f53\u505a\u6cd5\u662f: \u8fdb\u5165\u4e00\u4e2a\u5faa\u73af.&ensp; \u8ba1\u7b97\u5176\u65f6\u95f4\u590d\u6742\u5ea6.&ensp; \u82e5\u590d\u6742\u5ea6\u662f$O(n)$\u7684,&ensp; \u5219\u5c06$1$\u52a0\u5165\u6808,&ensp; \u82e5\u590d\u6742\u5ea6\u662fO$(1)$\u7684,&ensp; \u5219\u5c06$0$\u52a0\u5165\u6808.&ensp; \u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5730\u65b9\u5728\u4e8e: \u82e5\u9898\u76ee\u4e2d\u7684$x$\u662f\u5927\u4e8e$y$\u7684,&ensp; \u5219\u4e0d\u4f1a\u8fdb\u5165\u8fd9\u4e2a\u5faa\u73af,&ensp; \u90a3\u4e48**\u8be5\u5faa\u73af\u6240\u5d4c\u5957\u7684\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u4f1a\u88ab\u8ba1\u7b97\u7684**,&ensp; ~~\u56e0\u4e3a\u6839\u672c\u8fdb\u4e0d\u53bb\u554a~~,&ensp; \u6b64\u65f6\u6211\u4eec\u5c06\u4e00\u4e2a\u6781\u5c0f\u503c\u653e\u5165\u6808\u4e2d.&ensp; \u6700\u540e,&ensp; \u5f53\u53d1\u73b0\u4e00\u4e2a\u5faa\u73af\u7ed3\u675f\u540e,&ensp; \u6211\u4eec\u628a\u6808\u4e2d\u5143\u7d20\u6c42\u548c,&ensp; \u82e5\u8fd9\u4e2a\u548c\u5c0f\u4e8e\u7b49\u4e8e$0$,&ensp; \u5219\u5f53\u524d\u590d\u6742\u5ea6\u662f$O(1)$\u7684,&ensp; \u5426\u5219\u662f$O(sum)$\u7684.&ensp; \u6211\u4eec\u77e5\u9053\u7a0b\u5e8f\u7684\u6e10\u8fdb\u590d\u6742\u5ea6\u662f\u76f4\u63a5\u53d6\u5230\u6700\u5927\u7684\u4e00\u4e2a\u590d\u6742\u5ea6,&ensp; \u6240\u4ee5\u8be5\u7a0b\u5e8f\u7684\u6574\u4f53\u590d\u6742\u5ea6\u5c31\u662f\u8fd9\u4e2a\u548c\u7684\u6700\u5927\u503c$($\u5f53\u7136\u5c0f\u4e8e$0$\u7684\u8bdd\u5c31\u662f$O(1)$\u7684$)$.&ensp;\n   \n   * \u82e5\u9996\u5b57\u6bcd\u4e3a$F$\n   \n      * \u53d6\u51fa\u9898\u76ee\u6240\u8bf4\u7684$x$\u548c$y$.&ensp;\n      \n         * \u82e5\u9047\u5230$n$,&ensp; \u5219\u5c06$x$\u6807\u8bb0\u4e3a\u6781\u5927\u503c.&ensp;\u5426\u5219\u5b58\u50a8$x$\u7684\u503c$($\u5982\u679c\u4f60\u4f1a\u5199\u8bfb\u5165\u4f18\u5316\u4f60\u5c31\u5e94\u8be5\u60f3\u5230\u7528\u7c7b\u4f3c\u8bfb\u5165\u4f18\u5316\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2a\u5e38\u6570,&ensp; \u7c7b\u4f3c\u6211\u7684\u4ee3\u7801: `num[id] = (num[id] << 1) + (num[id] << 3) + (cpp[i][j] ^ 48)`$)$\n         \n         * \u82e5\u9047\u5230\u7a7a\u683c,&ensp; \u5219\u8be5\u8bfb\u5165$y$\u4e86.&ensp;\n         \n         * $y$\u7684\u5904\u7406\u65b9\u5f0f\u540c$x$.&ensp;\n         \n     * \u82e5$x$\u5927\u4e8e$y$,&ensp; \u5219\u5728\u6808\u4e2d\u653e\u5165\u6781\u5c0f\u503c.&ensp;\n     \n     * \u82e5$x$\u5c0f\u4e8e$y$\u4e14\u5dee\u503c\u6781\u5927$($\u5927\u4e8e100$)$,&ensp; \u5219\u5728\u6808\u4e2d\u653e\u5165$1$\n     \n     * \u82e5$x$\u7b49\u4e8e$y$\u6216\u8005$x$\u5c0f\u4e8e$y$\u4e14\u5dee\u503c\u975e\u6781\u5927\u503c$($\u5c0f\u4e8e100$)$,&ensp; \u5219\u5728\u6808\u4e2d\u653e\u5165$0$.&ensp;\n     \n  * \u82e5\u9996\u5b57\u6bcd\u4e3a$E$,&ensp; \u5219\u8fdb\u884c\u4e0a\u8ff0\u8ba1\u7b97\u5e76\u66f4\u65b0\u7a0b\u5e8f\u6e10\u8fdb\u590d\u6742\u5ea6.&ensp;\n  \n  * \u4ee3\u7801\u5b9e\u73b0\n  \n  ```cpp\n  inline void Calc_O()\n  {\n      while (!s.empty()) s.pop();\n      O1 = On = false;\n      total_cnt = 0;\n      for (rg int i = 1; i <= line; ++i)\n      {\n          if (cpp[i][1] == 'F')\n          {\n              s.push('F');\n              rg int len = strlen(cpp[i] + 1);\n              rg int id = 1;\n              num[1] = num[2] = 0;\n              for (rg int j = 5; j <= len; ++j)\n              {\n                  if (cpp[i][j] >= '0' && cpp[i][j] <= '9') num[id] = (num[id] << 1) + (num[id] << 3) + (cpp[i][j] ^ 48);\n                  else if (cpp[i][j] == 'n') num[id] = 0x7f7f7f7f;\n                  else if (cpp[i][j] == ' ' && id == 1) ++id;\n                  else if (id == 2) break;\n              }\n                  if (num[1] > num[2]) O_cnt.push(-233);\n                  else if (num[1] < num[2] && num[2] - num[1] > 200) O_cnt.push(1);\n                  else O_cnt.push(0);\n          }\n          else\n          {\n              now_cnt = 0;\n              while (!O_cnt.empty())\n              {\n                  rg int x = O_cnt.top();\n                  O_cnt.pop();\n                  tmp.push(x);\n                  now_cnt += x;\n              }\n              while (!tmp.empty()) O_cnt.push(tmp.top()), tmp.pop();\n              O_cnt.pop();\n              total_cnt = max(total_cnt, now_cnt);\n          }\n      }\n      if (total_cnt <= 0) O1 = true;\n      else On = true;\n  }\n  ```\n\n* **\u53d6\u51fa\u5c0f\u660e\u6240\u8bf4\u7684\u590d\u6742\u5ea6**\n\n   * \u904d\u5386$O(...)$,&ensp; \u82e5\u6ca1\u6709\u9047\u5230$n$\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u6570\u5b57,&ensp; \u5219\u5c0f\u660e\u6240\u8bf4\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$.&ensp;\n   * \u5426\u5219\u8fd8\u662f\u6309\u7167\u8bfb\u5165\u4f18\u5316\u7684\u65b9\u5f0f\u8ba1\u7b97\u6307\u6570,&ensp; \u7c7b\u4f3c\u6211\u7684\u4ee3\u7801`Ming_cnt = (Ming_cnt << 1) + (Ming_cnt << 3) + (O[i] ^ 48)`\n   \n   * \u4ee3\u7801\u5b9e\u73b0\n  ```cpp\n  inline void Div_XiaoMing_On()\n  {\n      Ming_O1 = Ming_On = false;\n      Ming_cnt = 0;\n      rg int len = strlen(O + 1);\n      rg bool n_occur = false;\n      for (rg int i = 1; i <= len; ++i)\n      {\n          if (O[i] == 'n') n_occur = true;\n          else if (O[i] >= '0' && O[i] <= '9')\n          {\n              if (!n_occur)\n              {\n                  Ming_O1 = true;\n                  return;\n              }\n              Ming_cnt = (Ming_cnt << 1) + (Ming_cnt << 3) + (O[i] ^ 48);\n          }\n      }\n      Ming_On = true;\n      return;\n  }\n  ```\n\n* **\u8f93\u51fa**\n\n   * \u82e5\u6700\u5f00\u59cb\u7a0b\u5e8f\u5c31\u629b\u51fa\u9519\u8bef,&ensp; \u8f93\u51fa$ERR$\n   \n   * \u82e5\u5c0f\u660e\u590d\u6742\u5ea6\u548c\u771f\u5b9e\u590d\u6742\u5ea6\u4e00\u6837,&ensp; \u8f93\u51fa$Yes$\n   \n   * \u82e5\u5c0f\u660e\u590d\u6742\u5ea6\u548c\u771f\u5b9e\u590d\u6742\u5ea6\u4e0d\u4e00\u6837,&ensp; \u8f93\u51fa$No$\n   \n   * \u4ee3\u7801\u5b9e\u73b0\n   \n  ```cpp\n  if (Error_Occur())\n  {\n      puts(\"ERR\");\n      continue;\n  }\n  Calc_O();\n  Div_XiaoMing_On();\n  if (Ming_O1 != O1)\n  {\n      puts(\"No\");\n      continue;\n  }\n  else if (Ming_O1)\n  {\n      puts(\"Yes\");\n      continue;\n  }\n  else\n  {\n      if (total_cnt == Ming_cnt) puts(\"Yes\");\n      else puts(\"No\");\n  }\n  ```\n\n \n\n## \u603b\u7ed3\n\n\u5bf9\u4e8e\u8fd9\u79cd\u5927\u6a21\u62df\u8fd8\u662f\u5206\u51fd\u6570\u5904\u7406\u6bd4\u8f83\u7a33,&ensp; \u5584\u7528\u5206\u7c7b\u8ba8\u8bba~~\u90a3\u4e48\u5927\u6a21\u62df\u5c31\u662f\u9001\u5206\u7684qwq~~\n",
        "postTime": 1568191043,
        "uid": 118272,
        "name": "\u304f\u308d\u306d\u3053",
        "ccfLevel": 0,
        "title": "[P3952] \u65f6\u95f4\u590d\u6742\u5ea6 \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u770b\u8d77\u6765\u592a\u6050\u6016\u4e86\uff0c\u849f\u84bb\u5c31\u53ea\u7528\u4e86\u6a21\u62df\uff0c\u5ffd\u7565\u672c\u849f\u84bb\u5947\u602a\u7684\u53d8\u91cf\u540d~~\n\n\u5224ERR\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55F\u548cE\uff0c\u5c31\u548c\u6808\u4e00\u6837\uff1b\n```cpp\nvoid geti()\n{\n    char ch=getchar();\n    int Lop=0;\n    while(ch!='\\n')\n    {\n        Fower[Lop]=ch;\n        ch=getchar();\n        ++Lop;\n    }\n}\nbool Get_string()\n{\n    memset(Fower,0,sizeof(Fower));\n    geti();\n    if(Fower[0]=='F')\n        ++Top;\n    else\n    {\n        if(Top==0)\n            return 1;\n        else\n            --Top;\n    }\n    return 0;\n}\n```\n\n\u52a0\u540d\u5b57\uff0c\u6bcf\u6b21\u626b\u4e00\u904d\uff0c~~\u5f88\u66b4\u529b\uff0c\u4f46\u4e0d\u4f1a\u8d85\u65f6~~\n```cpp\nbool check_N(char had_got)\n{\n    Names[++Name_number]=had_got;\n    for(int i=1;i<Name_number;++i)\n        if(Names[i]==had_got)\n            return 1;\n    return 0;\n}\nbool find_name()\n{\n    char Now_name=Fower[2];\n    return check_N(Now_name);\n}\n```\n\n\u91cd\u70b9\u5c31\u5728\u4e8e\u5224No\u548cYes\n\n\u8f93\u5165\uff0c\u8bfb\u53d6x\uff0cy\n```cpp\nint find_from()\n{\n    int FRom=0;\n    for(For_i=4;;++For_i)\n    {\n        if(Fower[For_i]>='0'&&Fower[For_i]<='9')\n            FRom=FRom*10+Fower[For_i]-'0';\n        else\n        {\n            if(Fower[For_i]=='n')\n            {\n                FRom=InF;\n                ++For_i;\n            }\n            break;\n        }\n    }\n    return FRom;\n}\nint find_to()\n{\n    int TO=0;\n    for(For_i=For_i+1;;++For_i)\n    {\n        if(Fower[For_i]>='0'&&Fower[For_i]<='9')\n            TO=TO*10+Fower[For_i]-'0';\n        else\n        {\n            if(Fower[For_i]=='n')\n            {\n                TO=InF;\n                ++For_i;\n            }\n            break;\n        }\n    }\n    return TO;\n}\n```\n\u82e5\u4e00\u4e2a\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u90a3\u4e48\u540e\u9762\u53ea\u5224ERR\uff1b\n\u82e5y\u4e0d\u4e3an\uff0c\u90a3\u8fd9\u5c42\u5faa\u73af\u5c31\u662f\u5e38\u6570\u7ea7\uff0c\u5426\u5219\u6b21\u6570++\uff1b\n\n\u5f53\u4e00\u6574\u5c42\u5faa\u73af\u7ed3\u675f\u65f6\uff0c\u4e8e\u5f53\u524d\u65f6\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u6bd4\u5bf9\uff0c\u82e5\u66f4\u5927\u5c31\u53d6\u4ee3\n```cpp\nIn_fact.Power=max(In_fact.Power,solving.Power);\n```\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u6709\u8bf4\u6ca1\u6709\u7cfb\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8bb0\u5f55\u6307\u6570\uff1b\n\n\u5f53\u672c\u6bb5\u4ee3\u7801\u7ed3\u675f\u65f6\uff0c\u5224\u65ad\u6307\u6570\u662f\u5426\u76f8\u540c\uff0c\u76f8\u540c\u8f93\u51fa\u201cYes\u201d\uff0c\u4e0d\u540c\u8f93\u51fa\u201cNo\u201d\n\n/////////////////////////////////\n\n\u65e0\u8bba\u5982\u4f55\u4e0d\u80fd\u5728\u8fc7\u7a0b\u4e2dbreak\uff01\uff01\uff01\n\n\u8f93\u51fa\u7684\u662f\u201cYes\u201d\u3001\u201cNo\u201d\u3001\u201cERR\u201d\uff01\uff01\uff01\n\n\u771f\u662f\u4e00\u9053\u5927\u6a21\u62df\u9898\uff08\u4e2d\u9014print\u5f88\u5fc5\u8981\uff09\n\n\u4e0a\u4ee3\u7801\uff0c\u4e0d\u8981\u55b7\u849f\u84bb\u7684\u8fd1200\u884c\u4ee3\u7801\uff01\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<fstream>\nusing namespace std;\nconst int InF=9999999;\nint t,l;\nstruct stu\n{\n    int Power;\n}In_fact,scan,solving;\nint From[101],To[101];\nchar Names[101],Fower[1001];\nint Top,Name_number;\nint For_i;\nint Read()\n{\n    char ch=getchar();\n    int return_number=0;\n    while(ch>='0'&&ch<='9')\n    {\n        return_number=return_number*10+ch-'0';\n        ch=getchar();\n    }\n    return return_number;\n}\nvoid Init_O()\n{\n    char Pass=getchar();\n    Pass=getchar();\n    Pass=getchar();\n    Pass=getchar();\n    if(Pass=='n')\n    {\n        Pass=getchar();\n        scan.Power=Read();\n    }\n    if(Pass=='1')\n    {\n        scan.Power=0;\n        Pass=getchar();\n    }\n    Pass=getchar();\n}\nvoid geti()\n{\n    char ch=getchar();\n    int Lop=0;\n    while(ch!='\\n')\n    {\n        Fower[Lop]=ch;\n        ch=getchar();\n        ++Lop;\n    }\n}\nbool Get_string()\n{\n    memset(Fower,0,sizeof(Fower));\n    geti();\n    if(Fower[0]=='F')\n        ++Top;\n    else\n    {\n        if(Top==0)\n            return 1;\n        else\n            --Top;\n    }\n    return 0;\n}\nbool check_N(char had_got)\n{\n    Names[++Name_number]=had_got;\n    for(int i=1;i<Name_number;++i)\n        if(Names[i]==had_got)\n            return 1;\n    return 0;\n}\nbool find_name()\n{\n    char Now_name=Fower[2];\n    return check_N(Now_name);\n}\nint find_from()\n{\n    int FRom=0;\n    for(For_i=4;;++For_i)\n    {\n        if(Fower[For_i]>='0'&&Fower[For_i]<='9')\n            FRom=FRom*10+Fower[For_i]-'0';\n        else\n        {\n            if(Fower[For_i]=='n')\n            {\n                FRom=InF;\n                ++For_i;\n            }\n            break;\n        }\n    }\n    return FRom;\n}\nint find_to()\n{\n    int TO=0;\n    for(For_i=For_i+1;;++For_i)\n    {\n        if(Fower[For_i]>='0'&&Fower[For_i]<='9')\n            TO=TO*10+Fower[For_i]-'0';\n        else\n        {\n            if(Fower[For_i]=='n')\n            {\n                TO=InF;\n                ++For_i;\n            }\n            break;\n        }\n    }\n    return TO;\n}\nvoid this_difficult()\n{\n    if(From[Top]==InF) return;\n    if(To[Top]!=InF) return;\n    ++solving.Power;\n}\nvoid Print()\n{\n    printf(\"%d %d %d\\n\",scan.Power,In_fact.Power,solving.Power);\n    printf(\"%d %d\\n\",From[Top],To[Top]);\n}\nint Check_Over()\n{\n    if(scan.Power==In_fact.Power) return 1;\n    else return 0;\n}\nint solve_one()\n{\n    int yes_no_err=1,BC_Top;\n    Init_O();\n    bool This_break=0;\n    while(l--)\n    {\n        //Print();\n        bool Gettf=Get_string();\n        if(Gettf)\n            yes_no_err=-1;\n        if(Fower[0]=='F')\n        {\n            Gettf=find_name();\n            if(Gettf)\n                yes_no_err=-1;\n            From[Top]=find_from();\n            To[Top]=find_to();\n            if(From[Top]>To[Top])\n            {\n                This_break=1;\n                BC_Top=Top-1;\n                continue;\n            }\n            this_difficult();\n        }\n        if(Fower[0]=='E')\n        {\n            --Name_number;\n            if(From[Top+1]!=InF&&To[Top+1]==InF) --solving.Power;\n        }\n        if(BC_Top==Top)\n            This_break=0;\n        if(This_break)\n            continue;\n        In_fact.Power=max(In_fact.Power,solving.Power);\n    }\n    if(yes_no_err==-1||Top) return -1;\n    return Check_Over();\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        Top=Name_number=0;\n        In_fact.Power=solving.Power=0;\n        scanf(\"%d\",&l);\n        int Ans_to=solve_one();\n        if(Ans_to==1)\n            printf(\"Yes\\n\");\n        else if(Ans_to==0)\n            printf(\"No\\n\");\n        else\n            printf(\"ERR\\n\");\n    }\n    return 0;\n}\n```\n195\u884c\u3002\u3002\u3002\n\n\u672c\u849f\u84bb\u505a\u4e863\u5929\u7684\u9898\u3002\u3002\u3002",
        "postTime": 1542876659,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# \u7b2c\u4e00\u7bc7\u9898\u89e3\n\n## \u7528\u9012\u5f52\n\n\u672c\u9898\u5751\u70b9\u8f83\u591a\uff0c\u6709\u5f88\u591a\u7ec6\u8282\u9700\u5904\u7406\uff08\u53ef\u80fd\u53ea\u6709\u6211\u8fd9\u4e48\u8ba4\u4e3a\uff09\n\n\u5728\u7ebf\u5904\u7406\u8f83\u9ebb\u70e6\uff0c\u5148\u5c06\u8f93\u5165\u5b58\u8d77\u6765\u3002\n\n\u5faa\u73af\u65f6\u9047\u5230n\uff0c\u5c31\u628a\u5b83\u5f53\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff08\u6211\u7528200\uff09\uff0c\u7b80\u5316\u4ee3\u7801\u3002\n\n\u7528\u6808\u5b58\u5faa\u73af\u53d8\u91cf\uff0c\u518d\u7528\u4e00\u4e2abool\u6570\u7ec4\u5224\u91cd\n\n\u7528err\u50a8\u5b58\u662f\u5426\u6709\u9519\uff08\u4fdd\u9669\u8d77\u89c1\uff0c\u5224\u65ad\u7684\u5730\u65b9\u8f83\u591a\uff09\n\n\u4e0a~~\u957f\u5ea6\u4e3aunsigned long long\u7684~~\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<stack>\n#include<string>\nusing namespace std;\n\nbool use[30];//\u5224\u91cd\nstring in[105];//\u5b58\u8f93\u5165\nstack<char> ch;\nbool err=0;\n\nbool isnum(char c){return (c>='0' && c<='9') || c=='n';}//\u662f\u5426\u662f\u6570\u5b57\nint read(int l,int s,int &a)//\u8bfb\u5165\uff0c\u8fd4\u56de\u6700\u540e\u7684\u4f4d\u7f6e\n//l:\u884c\ts:\u5f00\u59cb\u4f4d\u7f6e\n{\n\ta=0;\n\tint cnt=s;\n\tfor(;!isnum(in[l][cnt]);cnt++);\n\tfor(;isnum(in[l][cnt]);cnt++)\n\t{\n\t\tif(in[l][cnt]=='n')\n\t\t{\n\t\t\ta=200;\n\t\t\treturn cnt+1;\n\t\t}\n\t\ta=a*10+in[l][cnt]-'0';\n\t}\n\treturn cnt;\n}\n\nint f(int &l)//\u8fd4\u56de\u590d\u6742\u5ea6\uff0c\u5c06l\u8bbe\u4e3a \u6700\u540e\u7684\u884c\u6570+1\n{\n\tif(err)return 0;\n\tchar ii=in[l][2];\n\tif(use[ii-'a']){err=1;return 0;}\n\tuse[ii-'a']=1;\n\tch.push(ii);\n\t\n\tint w=0,maxw=0;\n\tbool pass=0;\n\tint a,b;\n\tint cnt=read(l,4,a);\n\tread(l,cnt,b);\n\tif(a>b)pass=1;\n\telse if(b-a>=100)w++;\n\t\n\tfor(l++;in[l][0]!='E';)\n\t{\n\t\tif(in[l][0]==0){err=1;return 0;}\n\t\tmaxw=max(maxw,f(l));\n\t\tif(err)return 0;\n\t}\n\tl++;\n\t\n\tuse[ii-'a']=0;\n\tif(ch.empty() || ch.top()!=ii){err=1;return 0;}\n\tch.pop();\n\tif(pass)return 0;\n\treturn maxw+w;\n}\n\nvoid solve(void)//\u5f53\u4e3b\u51fd\u6570\u7528\n{\n\tmemset(use,0,sizeof(use));\n\twhile(!ch.empty())ch.pop();\n\terr=0;\n\t\n\tint l,pan=0;//pan\u4e3a\u9700\u5224\u65ad\u7684\u590d\u6742\u5ea6\uff08\u8f93\u5165\uff09\n\tstring o;\n\tscanf(\"%d \",&l);\n\tgetline(cin,o);\n\tif(o[2]!='1')\n\t\tfor(int i=4;isnum(o[i]);i++)\n\t\t\tpan=pan*10+o[i]-'0';\n\tfor(int i=0;i<l;i++)getline(cin,in[i]);\n\tin[l]=\"\";\n\t\n\tint w=0;\n\tfor(int i=0;i<l;)\n\t{\n\t\tw=max(w,f(i));\n\t\tif(in[i][0]=='E' || err){err=1;break;}\n\t}\n\tif(!ch.empty() || err)printf(\"ERR\\n\");\n\telse if(w==pan)printf(\"Yes\\n\");\n\telse printf(\"No\\n\");\n}\n\nint main(void)\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--)solve();\n\treturn 0;\n}\n```\n~~\uff08\u53d8\u91cf\u540d\u795e\u5947\uff09~~\n\ndalao\u52ff\u55b7",
        "postTime": 1532322949,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6765\u4e2a\u9012\u5f52\u505a\u6cd5\\_(:\u0437\u300d\u2220)\\_\n\n\u53ef\u4ee5\u628a\u4ee3\u7801\u770b\u6210\u4e00\u68f5\u6811\uff0c\u5d4c\u5957\u5173\u7cfb\u7528\u53f3\u5b50\u6811\u8868\u793a\uff0c\u5e76\u5217\u5173\u7cfb\u7528\u5de6\u5b50\u6811\u8868\u793a\uff0c\u4f8b\u5982:\n\n![](https://cdn.luogu.com.cn/upload/pic/11835.png)\n\n\u5408\u5e76\u7ed3\u679c\u7684\u65b9\u5f0f\u662f\u7236\u4eb2\u8282\u70b9\u52a0\u4e0a\u5de6\u5b50\u6811\u7684\u7ed3\u679c\u540e\u4e0e\u53f3\u5b50\u6811\u6bd4\u8f83\u53d6\u6700\u5927\u503c\n\n\n### \u5f02\u5e38\u5904\u7406\n\n1.\u53d8\u91cf\u91cd\u590d:\u4f7f\u7528set\u5224\u91cd\uff0c\u62d3\u5c55\u5de6\u5b50\u6811\u65f6\u5c06\u53d8\u91cf\u52a0\u5165set\uff0c\n\n\u62d3\u5c55\u53f3\u5b50\u6811\u4e4b\u524d\u5c06\u53d8\u91cf\u4eceset\u5220\u9664\n\n2.F\u591a\u4e8eE:\u90a3\u4e48\u4f1a\u6709\u4e00\u5c42\u8bfb\u53d6\u4e0d\u5230\u5bf9\u5e94\u7684E\uff0c\u8fd4\u56de\u9519\u8bef\u5373\u53ef\n\n3.E\u591a\u4e8eF:\u90a3\u4e48\u4f1a\u63d0\u524d\u7ed3\u675f\uff0c\u5c06\u5df2\u8bfb\u53d6\u7684\u884c\u6570\u4e0e\u8f93\u5165\u884c\u6570\u6bd4\u8f83\u5373\u53ef\n\n\u4ee5\u4e0b\u662f\u5177\u4f53\u5b9e\u73b0\\_(:\u0437\u300d\u2220)\\_\n\n    \n    \n```cpp\n    #include<iostream>\n    #include<cstdio>\n    #include<set>\n    #define ERR -1\n    using namespace std;\n    int line,lines;\n    set<char> vars;\n    char code[110][20]; //\u5b58\u50a8\u8f93\u5165\u65b9\u4fbf\u5904\u7406\n    int exec(){\n        char var,result,x[3],y[3];\n        bool enter; \n        //\u5904\u7406\u5f53\u524d\u884c\n        sscanf(code[line],\"F %c %s %s\",&var,x,y);\n        if(vars.count(var)) return ERR;\n        vars.insert(var);\n        //\u7e41\u7410\u7684\u5224\u65ad...\n        if(x[0]!='n'&&y[0]!='n'){\n            int n1,n2;\n            sscanf(x,\"%d\",&n1);\n            sscanf(y,\"%d\",&n2);\n            result=0,enter=(n1<=n2);\n        }\n        else if(x[0]!='n'&&y[0]=='n') result=1,enter=true;\n        else if(x[0]=='n'&y[0]!='n') result=0,enter=false;\n        else if(x[0]=='n'&&y[0]=='n') result=0,enter=true;\n        //\u5224\u65ad\u4e0b\u4e00\u884c\u662f\u5426\u4e3a\u5b50\u5faa\u73af\n        line+=1;\n        if(line>lines)return ERR; //\u8d85\u51fa\u5219\u8bf4\u660e\u6ca1\u6709\u8db3\u591fE\u4e0eF\u5339\u914d\uff0c\u4ee5\u4e0b\u540c\u7406\n        int r=0;\n        if(code[line][0]!='E'){ //\u82e5\u6709\u5b50\u5faa\u73af\n            r=exec();\n            if(r==ERR)return ERR;\n            //\u5b50\u5faa\u73af\u5904\u7406\u540e\u505c\u7559\u5728\u4e0e\u5b50\u5faa\u73af\u5339\u914d\u7684E\u884c\u4e0a\uff0c\u6240\u4ee5\u8981\u8df3\u5230\u4e0e\u5f53\u524d\u5faa\u73af\u5339\u914d\u7684E\u884c\n            line+=1; \n            if(line>lines) return ERR;\n        }\n        result+=enter?r:0; //\u5f53\u524d\u5faa\u73af\u4e0d\u80fd\u8fdb\u5165\u5219\u5b50\u5faa\u73af\u590d\u6742\u5ea6\u5c31\u4e0d\u7528\u52a0\u4e86\n        vars.erase(var); //\u8131\u79bb\u5f53\u524d\u5faa\u73af\u4f5c\u7528\u57df\uff0c\u5220\u9664\u5f53\u524d\u53d8\u91cf\n        if(line<lines&&code[line+1][0]!='E') {//\u82e5\u6709\u5e76\u5217\u5faa\u73af\n            line+=1;\n            r=exec();\n            if(r==ERR) return ERR;\n            if(r>result) result=r; //\u53d6\u6700\u5927\u503c\n        }\n        return result;\n    }\n    int main(){\n        int t;\n        cin>>t;\n        getchar();\n        for(int i=1;i<=t;i++){\n            char str[20],fzd[20];\n            int limit,result;\n            gets(str);\n            sscanf(str,\"%d O(%s)\",&lines,fzd);\n            if(fzd[0]=='n') sscanf(fzd,\"n^%d\",&limit);\n            else limit=0;\n            vars.clear();\n            line=1;\n            for(int i=1;i<=lines;i++) gets(code[i]);\n            result=exec();\n            if(result==ERR || line!=lines) cout<<\"ERR\"<<endl;\n            else if(result!=limit) cout<<\"No\"<<endl;\n            else cout<<\"Yes\"<<endl;\n        }\n        return 0;\n}\n```",
        "postTime": 1513007877,
        "uid": 51786,
        "name": "ZIXT",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u590d\u6742\u7684\u6a21\u62df\u9898\u3002\n\n\u601d\u8def\uff1a\u9996\u5148\u6574\u4f53\u80af\u5b9a\u662f\u7edf\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5927\u7684\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u518d\u4e0e\u7ed9\u5b9a\u6bd4\u8f83\u3002\u6211\u4eec\u5f00\u4e00\u4e2a\u6808\u6765\u7ef4\u62a4\u5f53\u524d\u5faa\u73af\uff0c\u9047\u5230E\u5c31\u5f39\u51fa\u6808\u9876\u5e76\u76f8\u5e94\u7edf\u8ba1\u7b54\u6848\u3002\u81f3\u4e8eERR\u7684\u5224\u5b9a\u5176\u5b9e\u4e5f\u4e0d\u662f\u96be\u70b9\uff0c\u9898\u76ee\u91cc\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5206\u4e863\u79cd\u60c5\u51b5\u5904\u7406\uff08\u89c1\u4ee3\u7801\uff09\u3002\u96be\u70b9\u662f\u5728\u4e8e\u5f53\u524d\u5faa\u73af\u4e0d\u8fdb\u5165\u90a3\u4e48\u4ed6\u5d4c\u5957\u7684\u5faa\u73af\u4e5f\u4e0d\u4f1a\u8fdb\u5165\u7684\u95ee\u9898\u3002\u8003\u8651\u5f53\u524d\u5faa\u73af\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u4e0d\u7b26\u5408\u7684\uff0c\u90a3\u4e48\u76f4\u5230\u8fd9\u4e2a\u5faa\u73af\u51fa\u6808\u5269\u4f59\u6240\u6709\u7684\u5faa\u73af\u80af\u5b9a\u90fd\u662f\u65e0\u6548\u7684\u3002\u8bb0\u5f55\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u4e0d\u7b26\u5408\u7684\u5faa\u73af\u7684id\u7136\u540e\u6309\u4ee5\u4e0a\u5904\u7406\u5373\u53ef\uff0c\n\n\u9664\u6b64\u4ee5\u5916\u8fd9\u9898\u7684\u7ec6\u8282\u8fd8\u662f\u5f88\u591a\u7684\u2026\u2026\uff0c\u4e0b\u9762\u7ed9\u51fa\u6211\u8003\u573a\u4ee3\u7801\uff0c\u6ca1\u6709\u8fc7\u591a\u4fee\u6539\u3002\u5199\u5f97\u6bd4\u8f83\u590d\u6742\u5927\u5bb6\u81ea\u5df1\u7406\u4f1a\u5427\uff0c\u6bd5\u7adf\u8fd9\u6837\u7684\u9898\u76ee\u4e5f\u662f\u51e0\u53e5\u8bdd\u8bf4\u4e0d\u6e05\u695a\u7684\u2026\u2026\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<string>\n#include<stack>\n#include<algorithm>\nusing namespace std;\nconst int INF=1<<30;\nbool in[30],baga[30]; //\u5ffd\u7565\u8fd9\u4e2abaga\u6570\u7ec4\uff0c\u5e76\u6ca1\u6709\u7528\u5230\u2026\u2026\ninline int tonum(string s)\n{\n    if(s[0]=='n') return INF;\n    int kkk=0;\n    for(unsigned i=0;i<s.size();i++)\n        if('0'<=s[i]&&s[i]<='9') kkk=kkk*10+s[i]-'0';\n    return kkk;\n}\nstruct Node\n{\n    char c; bool x;\n};\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        string s1,s2;\n        cin>>s1>>s2;\n        memset(in,false,sizeof(in));\n        memset(baga,false,sizeof(baga));\n        int t=tonum(s1),t2=tonum(s2);\n        int mxn=-1,tmp=0;\n        stack<Node> S;\n        bool F=false; int unable=-1;\n        while(t--)\n        {\n            string sf; cin>>sf;\n            if(sf[0]=='F')\n            {\n                string ss1,ss2,ss3;\n                cin>>ss1>>ss2>>ss3;\n                if(F) continue;\n                if(in[ss1[0]-'a'])\n                {\n                    puts(\"ERR\");\n                    F=true; continue;\n                }\n                in[ss1[0]-'a']=true;\n                if(tonum(ss3)==INF&&tonum(ss2)==INF)\n                    S.push((Node){ss1[0],false});\n                else if(tonum(ss3)==INF)\n                {\n                    if(unable==-1) ++tmp,S.push((Node){ss1[0],true});\n                    else S.push((Node){ss1[0],false});\n                }\n                else if(tonum(ss2)==INF)\n                    S.push((Node){ss1[0],false});\n                else S.push((Node){ss1[0],false});\n                if(tonum(ss2)>tonum(ss3)&&unable==-1) unable=ss1[0];\n            }\n            else if(sf[0]=='E')\n            {\n                if(F) continue;\n                if(S.empty())\n                {\n                    puts(\"ERR\");\n                    F=true; continue;\n                }\n                else if(unable!=-1)\n                {\n                    if(S.top().c==unable) unable=-1;\n                    in[S.top().c-'a']=false;\n                    S.pop(); continue;\n                }\n                in[S.top().c-'a']=false;\n                if(S.top().x) mxn=max(mxn,tmp), --tmp;\n                S.pop();\n            }\n        }\n        if(F) continue;\n        if(!S.empty())\n        {\n            puts(\"ERR\");\n            continue;\n        }\n        if(mxn==-1&&s2[2]=='1') puts(\"Yes\");\n        else if(mxn==t2&&s2[2]!='1') puts(\"Yes\");\n        else puts(\"No\");\n    }\n}\n```",
        "postTime": 1511269124,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u5c31\u5fc3\u75bc\uff0cNOIP\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u5199\u51fa\u6765\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5e76\u6ca1\u6709\u5b66\u6808\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u5f53\u65f6\u6ca1\u6709\u5199\u51fa\u6765\uff0c\u4eca\u5929\u5b66\u957f\u4eec\u8bb2\u4e86\u6808\uff0c\u6211\u5c31\u6765\u628a\u8fd9\u9053\u9898A\u4e86\n\n\u5b66\u957f\u4eec\u8fd8\u8bf4\u9012\u5f52\u53ef\u4ee5A\u6765\u7740\uff0c~\u597d\u50cf\u8fd8\u5f88\u7b80\u5355~\n\n**\u601d\u8def**\uff1a\n\n\u597d\u50cf\u5e76\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\uff0c\u5c31\u662f\u9047\u5230$F$\u5c31\u5c31\u538b\u6808\uff0c\u9047\u5230$E$\u5c31\u628a\u6700\u4e0a\u5c42\u7684\u6808\u5f39\u51fa\uff0c\u5927\u6982\u50cf\u5faa\u73af\u5d4c\u5957\uff0c\u62ec\u53f7\u5339\u914d\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\u90fd\u53ef\u4ee5\u7528\u6808\u5b9e\u73b0\u5427\uff01\n\n**\u4f20\u9001\u95e8**\uff1a[NOIP2013\u666e\u53ca\u7ec4 \u8868\u8fbe\u5f0f\u6c42\u503c](https://www.luogu.org/problemnew/show/1981),[NOIP2005\u63d0\u9ad8\u7ec4T4 \u7b49\u4ef7\u8868\u8fbe\u5f0f](https://www.luogu.org/problemnew/show/1054)(\u6bd2\u7624\u9898\uff0c\u6570\u636e\u5f88\u9b3c\u755c)\n\n**\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nchar ans[11][20],e[11][110][110];\nint T,judge[1<<9],deepth,is[1<<9],top,maxdeepth,fff,ff;\n//ff\u662f\u4e00\u4e2a\u6807\u8bb0\uff0c\u6765\u8bb0\u5f55\u662f\u5426\u6709\u91cd\u8bfb\u7684\u53d8\u91cf\n//fff\u4e5f\u662f\u4e00\u4e2a\u6807\u8bb0\uff0c\u7528\u4e8e\u8bb0\u5f55\u4e00\u4e2a\u5faa\u73af\u7684\u521d\u59cb\u503c\u5927\u4e8e\u7ed3\u675f\u503c\u7684\u8bf7\u51b5\n//top\u8868\u793a\u5f53\u524d\u6808\u6307\u5411\u54ea\u4e00\u5c42\n//maxdeepth\u7528\u6765\u8bb0\u5f55\u6b64\u7a0b\u5e8f\u7684\u5faa\u73af\u5d4c\u5957\u7684\u6700\u5927\u5c42\u6570\n//deepth\u7528\u4e8e\u66f4\u65b0\nlong long num[11][110][5],x;\nint L,a,b,len,lennum,realdeepth;\n//realdeepth\u5c31\u662f\u8f93\u5165\u6240\u7ed9\u7684\u590d\u6742\u5ea6\nstruct node{int is,isdi,deep;}st[11][110];\n//\u4e00\u4e2a\u624b\u5199\u7ed3\u6784\u4f53\u7684\u6808\uff0c\u7528\u6765\u8bb0\u5f55\u72b6\u6001\nint main(){\n    //freopen(\"complexity.in\",\"r\",stdin);\n    //freopen(\"complexity.out\",\"w\",stdout);\n    scanf(\"%d\",&T);\n    for(int i=1;i<=T;i++){\n        scanf(\"%d\",&L);getchar();len=0;realdeepth=0;\n        while(true){\n            char s=getchar();\n            if(s=='\\n')break;\n            if(s>='0'&&s<='9')realdeepth=realdeepth*10+s-'0';//\u7b97realdeepth\n            ans[i][++len]=s;\n        }\n        //memset(st,0,sizeof(st));\n        memset(judge,0,sizeof(judge));\n        memset(is,0,sizeof(is));\n        ff=0;top=0;maxdeepth=0;deepth=0;fff=1;a=0;b=0;//\u6bcf\u4e00\u7ec4\u6570\u636e\u90fd\u8981\u521d\u59cb\u5316\u6240\u6709\u7684\u6807\u8bb0\uff0c\u4e0d\u8981\u5fd8\n        for(int j=1;j<=L;j++){\n            len=0;x=0;lennum=0;\n            while(true){\n                char s=getchar();\n                if(s!='\\n'){\n                    if(s>='0'&&s<='9')e[i][j][++len]=s,x=x*10+s-'0';\n                    else if((s>='a'&&s<='z'&&s!='n')||(s<='Z'&&s>='A'))e[i][j][++len]=s;\n                    else if(s=='n')e[i][j][++len]=s,x=1<<30;//n\u5c31\u6807\u8bb0\u4e3a\uff081<<30\uff09\n                    else if(s==' '){\n                        e[i][j][++len]=s;\n                        if(x)num[i][j][++lennum]=x,x=0;//\u6211\u662f\u76f4\u63a5\u628a\u5faa\u73af\u4e2d\u7684\u4e24\u4e2a\u503c\u63d0\u53d6\u51fa\u6765\u4e86\uff0c\u7528\u6574\u5f62\u6765\u5b58\u6bd4\u8f83\u597d\u7528\n                    }\n                }\n                else if(s=='\\n'){\n                    if(x)num[i][j][++lennum]=x,x=0;\n                    break;\n                }\n            }\n            if(e[i][j][1]=='E')a++;//\u9884\u5224ERR\n            else if(e[i][j][1]=='F')b++;\n        }\n        if(a!=b){printf(\"ERR\\n\");continue;}\n        for(int j=1;j<=L;j++){\n            if(e[i][j][1]=='F'){\n                st[i][++top].isdi=e[i][j][3];\n                st[i][top].deep=deepth;//\u8bb0\u5f55\u5165\u6808\u65f6\u7684deepth\n                if(judge[e[i][j][3]])ff=1;//\u91cd\u590d\u5c31\u8bb0\u5f55\n                else judge[e[i][j][3]]=1;//\u6807\u8bb0\u53d8\u91cf\n                if(ff)break;//\u9000\u51fa\u5faa\u73af\n                if(num[i][j][1]!=(1<<30)){//\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u7684\u521d\u59cb\u503c\u548c\u672b\u72b6\u6001\u503c\n                    if(num[i][j][2]>=num[i][j][1]&&num[i][j][2]!=(1<<30))st[i][top].is=1;\n                    else if(num[i][j][2]<num[i][j][1]&&num[i][j][2]!=(1<<30))st[i][top].is=-1;\n                    //\u8bb0\u5f55\u4e00\u4e2a\u5faa\u73af\u7684\u521d\u59cb\u503c\u5927\u4e8e\u7ed3\u675f\u503c\u7684\u8bf7\u51b5\uff0c\u4e14is=-1\n                    else if(num[i][j][2]==(1<<30))st[i][top].is=2;//\u4e0d\u662f\u5e38\u6570\u7684\u8bddis\u4e3a2\n                }\n                else if(num[i][j][1]==(1<<30)){\n                    if(num[i][j][2]!=(1<<30))st[i][top].is=-1;//\u540c\u7406\n                    else if(num[i][j][2]==(1<<30))st[i][top].is=1;\n                }\n                if(st[i][top].is==-1)fff--;\n                //\u628a\u6807\u8bb0--\uff0c\u5e94\u4e3a\u6709\u53ef\u80fd\u591a\u5c42\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u5faa\u73af\uff08\u6211\u4e00\u5f00\u59cb\u5c31\u662f\u88ab\u8fd9\u4e2a\u5751\u4e86\uff0c\u7ed3\u679cdebug\u4e86\u597d\u957f\u65f6\u95f4\uff09\n                if(st[i][top].is==2&&fff==1)deepth++;//\u5408\u6cd5\u5c31\u66f4\u65b0deepth\n                maxdeepth=max(maxdeepth,deepth);//\u770b\u662f\u5426\u53ef\u4ee5\u66f4\u65b0maxdeepth\n            }\n            else if(e[i][j][1]=='E'){\n                if(st[i][top].is==-1)fff++;\n                judge[st[i][top].isdi]=0;\n                deepth=st[i][top].deep;\n                top--;\n                //\u8fd8\u539f\u6240\u6709\u7684\u6807\u8bb0\uff0c\u6709\u70b9\u50cf\u9012\u5f52\u56de\u6eaf\n            }\n        }\n        if(ff){printf(\"ERR\\n\");continue;}\n        if(ans[i][3]=='n'){\n            if(realdeepth==maxdeepth)printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n        else if(ans[i][3]>='0'&&ans[i][3]<='9'){\n            if(maxdeepth==0)printf(\"Yes\\n\");\n            else printf(\"No\\n\");\n        }\n        //\u6700\u540e\u5224\u65ad\u8f93\u51fa\u5c31\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\n    }\n    return 0;\n}\n```",
        "postTime": 1511011703,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u4f5c\u4e3anoip\u53c2\u8d5b\u9009\u624b\uff0c\u8868\u793a\u88ab\u8fd9\u9898\u5751\u6389\u4e86\u4e24\u4e2a\u5c0f\u65f6\n\n\u8fd9\u9898\u6700\u5927\u7684\u96be\u70b9\u5c31\u662f\u4ee3\u7801\u80fd\u529b\uff0c\u53ea\u8981\u6a21\u62df\u5c31\u80fda\n\n\u7136\u800c\u8c03\u8bd5\u5f88\u70e6\u2026\u2026\n\n\u4e0b\u9762\u5f00\u59cb\u9898\u89e3\u2026\u2026\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5148\u770b\u7ed9\u5b9a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5982\u679c\u662fO\uff081\uff09\uff0c\u90a3\u4e48\u5c31\u68c0\u67e5\u6709\u6ca1\u6709\u590d\u6742\u5ea6\u4e3an\u7684\n\n\u8fd9\u4e2a\u5730\u65b9\u6ce8\u610f\u4e00\u4e0bx>y\u65f6\u5373\u4f7f\u91cc\u9762\u5d4c\u5957\u4e86\u590d\u6742\u5ea6\u4e3an\u7684\u5faa\u73af\uff0c\u4e5f\u662f\u6b63\u786e\u7684\n\n\u7136\u540e\u5bf9\u4e8eO(n^w) \u7528ans\u8bb0\u5f55\u6700\u5927\u5faa\u73afn\u7684\u5d4c\u5957\u7684\u5c42\u6570\uff0c\u6bd4\u8f83n\u4e0ew\u4e00\u4e0d\u4e00\u6837\u5c31\u591f\u4e86\n\n\u8fd9\u91cc\u4e5f\u8981\u6ce8\u610f\u4e00\u4e0bx>y\u7684\u60c5\u51b5\u548cx=n\u7684\u60c5\u51b5\n\n\u6700\u540e\u5c31\u662f\u5bf9\u4e8e\u51fa\u9519\u7684\u5224\u5b9a\n\n\u5bf9\u4e8e\u6837\u4f8b\u7684\u89c2\u5bdf\uff0c\u53d1\u73b0\u5982\u679c\u51fa\u9519\u7684\u8bdd\u4f18\u5148\u8f93\u51faERR\u800c\u4e0d\u662fNo\n\n\u6240\u4ee5Yes\u548cNo\u90fd\u8981\u6ca1\u9519\u624d\u8f93\u51fa\n\n\u5bf9\u4e8e\u53d8\u91cf\u540d\u91cd\u590d\u7684\u9519\u8bef\uff0c\u672c\u6765\u4ee5\u4e3a\u8981\u7528\u54c8\u5e0c\u7684\uff0c\u7136\u800c\u53d1\u73b0i\u662f\u5b57\u7b26\uff0c\u6240\u4ee5\u7528\u4e2a27\u7684\u6570\u7ec4\u5b58\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u8fc7\u6ca1\u6709\u5c31\u53ef\u4ee5\u4e86\n\n\u5bf9\u4e8eF\u548cE\u4e0d\u5339\u914d\u7684\u60c5\u51b5\uff0c\u548c\u62ec\u53f7\u5339\u914d\u4e00\u4e2a\u505a\u6cd5\uff0c\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u8bb0\u5f55F\u7684\u4e2a\u6570\uff0c\u6bcf\u4e2aE\u770b\u524d\u9762F\u591f\u4e0d\u591f\n\n\u7136\u540e\u5c31\u53ef\u4ee5a\u4e86\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint l;\nstring s;\nint hash[27];//\u5224\u5b9a\u53d8\u91cf\u540d\u6709\u6ca1\u6709\u91cd\u590d\nint q;\nint ans,ok;\nint f[1101];//\u7279\u6b8a\u5904\u7406x>y\u7684\u60c5\u51b5\nint g[1101];//\u8bb0\u5f55\u54ea\u4e00\u5c42\u4fee\u6539\u8fc7\u90a3\u4e00\u4e2ahash\u5b57\u7b26\uff0c\u7528\u4e8e\u56de\u6eaf\nint t;\nbool cmp(string x,string y){\n    if(x.size()!=y.size()) return x.size()>y.size();\n    int si=x.size();\n    for(int i=0;i<=si;i++)\n        if(x[i]!=y[i]) return x[i]>y[i];\n    return false;\n}\nint main(){\n    freopen(\"complexity.in\",\"r\",stdin);\n    freopen(\"complexity.out\",\"w\",stdout);\n    cin>>t;\n    while(t--){\n        for(int i=0;i<=26;i++)\n            hash[i]=0;\n        for(int i=0;i<=101;i++){\n            f[i]=0;\n            g[i]=0;\n        }\n        ans=0;\n        f[0]=1;\n        ok=1;\n        int cnt=0;\n        int now=0;\n        q=0;//\u4ee5\u4e0a\u521d\u59cb\u5316\n        cin>>l;\n        cin>>s;\n        int p=4;\n        if(s[2]=='1') q=-1;//\u4ee3\u8868\u590d\u6742\u5ea6O\uff081\uff09\n        else while(s[p]>='0'&&s[p]<='9'){\n            q*=10;\n            q+=s[p]-'0';\n            p++;\n```\n}//\u5426\u5219\u8bfb\u5165w\n```cpp\n        if(q==-1)\n        {\n            int xxx=1;\n            for(int i=1;i<=l;i++){\n                char ch;\n                cin>>ch;\n                if(ch=='F'){\n                    cnt++;\n                    char i;\n                    string x,y;//\u6ce8\u610fx\u548cy\u53ef\u80fd\u662fn\uff0c\u4e5f\u53ef\u80fd\u662f\u51e0\u5341\uff0c\u6240\u4ee5\u7528\u5b57\u7b26\u4e32\n                    cin>>i>>x>>y;\n                     if(!ok){\n                        continue;//\u5982\u679c\u5df2\u7ecf\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u5c31\u4e0d\u8fdb\u884c\u4e0b\u9762\u7684\n                    }\n                    if(hash[i-'a']){\n                        ok=0;\n                        cout<<\"ERR\"<<endl;\n                        continue;//\u53d8\u91cf\u540d\u91cd\u590d\n                    }\n                    hash[i-'a']=1;\n                    g[cnt]=i-'a';//\u8bb0\u5f55\u4e0b\uff0c\u7528\u4e8e\u56de\u6eaf\n                    if(f[cnt-1]==0)//\u5982\u679c\u5916\u5c42\u6709x>y\u7684\u60c5\u51b5\n                        continue;\n                    if(x==\"n\"&&y!=\"n\"){\n                        continue;\n                    }\n                    if(x!=\"n\"&&y==\"n\"){\n                        xxx=0;//\u5224\u5b9a\u8f93\u51faNo\n                        continue;\n                    }\n                    if(cmp(x,y))\n                        continue;\n                    f[cnt]=1;\n                }\n                if(ch=='E'){//\u5982\u679c\u7ed3\u675f\u5faa\u73af\uff0c\u8981\u628a\u6240\u6709\u5faa\u73af\u4e2d\u4fee\u6539\u8fc7\u7684\u56de\u6eaf\u56de\u6765\n                    if(!ok) continue;\n                    if(cnt==0){\n                        ok=0;\n                        cout<<\"ERR\"<<endl;\n                        continue;\n                    }\n                    if(f[cnt]==19240817) now--;\n                    hash[g[cnt]]=0;\n                    f[cnt]=0;\n                    g[cnt]=0;\n                    cnt--;//\u4ee5\u4e0a\u4e3a\u56de\u6eaf\n                }\n            }\n            if(!ok) continue;\n            if(cnt>0) {\n                cout<<\"ERR\"<<endl;\n                continue;\n            }\n            if(xxx)\n                cout<<\"Yes\"<<endl;\n            else \n                cout<<\"No\"<<endl;\n        }\n        else{//\u4ee5\u4e0b\u4e3aO\uff08n^w\uff09\u65f6\u7684\u5904\u7406\n            for(int i=1;i<=l;i++){\n                char ch;\n                cin>>ch;\n                if(ch=='F'){\n                    cnt++;\n                    char i;\n                    string x,y;\n                    cin>>i>>x>>y;\n                    if(!ok){\n                        continue;\n                    }\n                    if(hash[i-'a']){\n                        ok=0;\n                        cout<<\"ERR\"<<endl;\n                        continue;\n                    }\n                    hash[i-'a']=1;\n                    g[cnt]=i-'a';\n                    if(f[cnt-1]==0)\n                        continue;\n                    if(x==\"n\"&&y!=\"n\"){\n                        continue;//x>y\u7684\u60c5\u51b5\n                    }\n                    if(x!=\"n\"&&y==\"n\"){\n                        f[cnt]=19240817;\n                        now++;//now\u8bb0\u5f55\u5f53\u524d\u5faa\u73af\u5c42\u6570\uff0c\u5f53\u7136\uff0c\u53ea\u6709\u4e0en\u76f8\u5173\u7684\u624d\u52a0\n                        ans=max(ans,now);//ans\u4e3a\u6700\u5927\u5faa\u73af\u5c42\u6570\n                        continue;\n                    }\n                    if(cmp(x,y))\n                        continue;\n                    f[cnt]=1;\n                }\n                if(ch=='E'){\n                    if(!ok) continue;\n                    if(cnt==0){\n                        ok=0;\n                        cout<<\"ERR\"<<endl;\n                        continue;\n                    }\n                    if(f[cnt]==19240817) now--;\n                    hash[g[cnt]]=0;\n                    f[cnt]=0;\n                    g[cnt]=0;\n                    cnt--;//\u8fd9\u5757\u4e0eO\uff081\uff09\u5b8c\u5168\u76f8\u540c\n                }\n            }\n            if(!ok){\n                continue;\n            }\n            if(cnt>0){\n                cout<<\"ERR\"<<endl;\n                continue;\n            }\n            if(q==ans){//\u5982\u679cw\u548cans\u76f8\u7b49\n                cout<<\"Yes\"<<endl;\n            }\n            else \n                cout<<\"No\"<<endl;\n        }\n    }\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```\n\u603b\u7ed3\uff1a\u672c\u4f53\u4e3b\u8981\u8003\u5bdf\u4ee3\u7801\u80fd\u529b\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u7ec6\u5fc3\u4e0e\u8010\u5fc3\uff0c\u505a\u51fa\u6765\u662f\u6ca1\u95ee\u9898\u7684\n\u5410\u69fd\uff1anoip\u54ea\u6709\u65f6\u95f4\u554a\uff01- -\n",
        "postTime": 1510824040,
        "uid": 36457,
        "name": "jlx77777",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u7531\u4e8e\u5148\u51fa\u73b0\u7684for\u7684\u8bed\u53e5\u6240\u5bf9\u5e94\u7684end\u5e94\u51fa\u73b0\u5728\u540e\u9762\uff0c\u663e\u7136\u8fd9\u91cc\u6709\u4e00\u4e2aFILO\u7684\u7279\u70b9\uff08\u5373\u5148\u8fdb\u540e\u51fa\uff09\uff0c\u4e0d\u96be\u60f3\u5230\u6808\u8fd9\u79cd\u4e1c\u897f\u3002\u4f46\u662f\u6211\u4eec\u5982\u679c\u628a\u6bcf\u4e2a\u8bed\u53e5\u90fd\u538b\u8fdb\u6808\u7684\u8bdd\u3002\u3002\u53ef\u80fd\u4f1a\u5199\u7684\u6765GG\u6389\u554a\uff08\u849f\u84bb\u4ee3\u7801\u80fd\u529b\u5f31\u6c42\u4e0dD\uff09\u6240\u4ee5\u6211\u4eec\u5148\u9884\u5904\u7406\u4e00\u53d1\u8fd9\u4e9b\u8bed\u53e5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8bed\u53e5\uff0c\u6211\u4eec\u8bb0\u5f55\u5176\u4e2d\u7684\u4e09\u4e2a\u503c\uff0c\u53d8\u91cf\u540d\uff0c\u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\uff0c\u662f\u5426\u4e3a\u7ed3\u675f\u3002\uff08\u53d8\u91cf\u540d\u548c\u662f\u5426\u4e3a\u7ed3\u675f\u6211\u5c31\u4e0d\u8bb2\u4e86\u5427QAQ\uff09 \u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\u8fd9\u4e2a\u4e1c\u897f\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b50\u5904\u7406\u3002\u7531\u4e8e\u590d\u6742\u5ea6\u6211\u4eec\u53ea\u8003\u8651\u6307\u6570\u7ea7\uff0c\u90a3\u5982\u679c\u5355\u4e2a\u5faa\u73af\u590d\u6742\u5ea6\u4e3an\uff0c\u5219\u5bf9\u6307\u6570\u7684\u8d21\u732e\u4e3a1.\u5982\u679c\u5355\u4e2a\u5faa\u73af\u7684\u590d\u6742\u5ea6\u4e3a\u5e38\u6570\uff0c\u5219\u5bf9\u6307\u6570\u7684\u8d21\u732e\u4e3a0.\u5982\u679c\u5355\u4e2a\u5faa\u73af\u4e2d\uff0c\u521d\u59cb\u503c\u5927\u4e8e\u6700\u7ec8\u503c\uff0c\uff08\u4e5f\u5c31\u662f\u8bf4\u8fd9\u662f\u4e00\u4e2a\u5047\u7684\u5faa\u73af\uff09\u90a3\u4e48\uff0c\u5728\u4ed6\u4e4b\u540e\u7684\u6240\u6709\u7684\u5faa\u73af\u4e3a\u6307\u6570\u7684\u590d\u6742\u5ea6\u90fd\u5f52\u96f6\u3002\uff08\u4f46\u662f\u5f52\u96f6\u597d\u9ebb\u70e6\u600e\u4e48\u529e\u3002\u4e0d\u60f3\u5199\u600e\u4e48\u529e\u3002\uff09\u6211\u4eec\u5c31\u9884\u7ea6\u5730\u628a\u8fd9\u79cd\u4e0d\u4f1a\u88ab\u8fdb\u884c\u7684\u5faa\u73af\u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\u5904\u7406\u4e3a-123123\uff0c\u7531\u4e8e\u8fd9\u4e2a\u5faa\u73af\u4e4b\u540e\u7684\u590d\u6742\u5ea6\u4e0d\u518d\u589e\u957f\uff0c\u5219-123123\u5e76\u4e0d\u4f1a\u5bf9\u7b54\u6848\u7684\u6b63\u786e\u6027\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6211\u4eec\u5728\u8bfb\u53d6\u6bcf\u4e00\u4e2a\u5faa\u73af\u7684\u65f6\u5019\u5c06\u6bcf\u4e00\u4e2a\u5faa\u73af\u7684\u4fe1\u606f\u4f9d\u6b21\u5b58\u8fdb\u4e00\u4e2a\u961f\u5217\uff0c\u7136\u540e\u5c06\u961f\u5217\u4e2d\u7684\u4fe1\u606f\u4f9d\u6b21\u5904\u7406\u8fdb\u4e00\u4e2a\u6808\u3002\u5982\u679c\u961f\u5217\u4e2d\u7684\u4fe1\u606f\u662f\u4e00\u4e2afor\u5faa\u73af\uff0c\u5219\u5c06\u8fd9\u4e2afor\u5faa\u73af\u7684\u4fe1\u606f\u538b\u8fdb\u6808\u91cc\uff0c\u5f53\u524d\u590d\u6742\u5ea6\u52a0\u4e0a\u8fd9\u4e2a\u5faa\u73af\u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\uff0c\u603b\u590d\u6742\u5ea6\u4e3a\u5f53\u524d\u590d\u6742\u5ea6\u548c\u603b\u590d\u6742\u5ea6\u53d6max\uff08\u8fd9\u91cc\u53ef\u4ee5\u89c4\u907f\u6389-123123\u7684\u5f71\u54cd\uff09\uff0c\u5f53\u524d\u53d8\u91cf\u540d\u7684vis\u503c\u6253\u6210true\u3002\u5982\u679c\u5f53\u524d\u4fe1\u606f\u662fEnd\uff0c\u5219\u5c06\u6808\u9876\u7684for\u5faa\u73af\u5f39\u51fa\u3002\u5c06\u5f53\u524d\u590d\u6742\u5ea6\u51cf\u53bb\u88ab\u5f39\u51fa\u7684\u5faa\u73af\u5bf9\u590d\u6742\u5ea6\u7684\u8d21\u732e\uff0c\u5c06\u88ab\u5f39\u51fafor\u5faa\u73af\u7684\u53d8\u91cf\u540d\u7684vis\u503c\u6253\u6210false\u3002\n\n\u5bf9\u4e8e\u5047\u7a0b\u5e8f\u8fd9\u79cd\u4e1c\u897f\u5462\u3002\u6211\u4eec\u662f\u8fd9\u6837\u5b50\u5224\u65ad\u7684\u3002\u5982\u679c\u67d0\u4e2afor\u5faa\u73af\u7684\u590d\u6742\u5ea6\u5728\u6b64\u4e4b\u524d\u88ab\u5360\u7528\u4e14\u6ca1\u6709\u88ab\u5f39\u51fa\u3002\u90a3\u4e48GG\u3002\u5982\u679c\u6808\u88ab\u5f39\u7a7a\u4e86\u7684\u540c\u65f6\u8fd8\u6536\u5230\u4e86\u4e00\u4e2aEnd\u3002\u90a3\u4e48GG\u3002\u5982\u679c\u6700\u540e\u7a0b\u5e8f\u7ed3\u675f\u6808\u8fd8\u6ca1\u7a7a\uff0c\u90a3\u4e48\u8fd8\u662fGG\u3002\u3002\u3002\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\uff08\u8003\u8bd5\u5f53\u573a\u6253\u7684\u3002\u3002\u3002\u5927\u4f6c\u6c42\u8f7bD\uff09\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct xh{\n    bool kin;\n    char nam;\n    int st;\n    int ed;\n    int com;\n};\nbool vis[123000];\nchar com[1230];\nchar mark;\nint lin;\nint comp;\nint getcon() {\n    int lim=strlen(com);\n    if(lim==4)\n        return 0;\n    char c;\n    int ret=0;\n    for(int i=4;i<lim;++i) {\n        c=com[i];\n        if(c>'9'||c<'0')\n            break;\n        ret*=10;\n        ret+=c-'0';\n    }\n    return ret;\n}\nint Read() {\n    int ret=0;\n    char c=getchar();\n    while((c>'9'||c<'0')&&c!='n') {\n        c=getchar();\n    }\n    if(c=='n')\n        return 1231231;\n    while(c<='9'&&c>='0') {\n        ret*=10;\n        ret+=c-'0';\n        c=getchar();\n    }\n    return ret;\n}\nvoid getans() {\n        memset(vis,0,sizeof(vis));\n        cin>>lin;\n        scanf(\"%s\",com);\n        comp=getcon();\n        queue<xh>sth;\n        for(int as=0;as<lin;++as) {\n            cin>>mark;\n            xh jcq;\n            if(mark=='E') {\n                jcq.kin=0;\n                sth.push(jcq);\n            }\n            if(mark=='F') {\n                jcq.kin=1;\n                cin>>jcq.nam;\n                jcq.st=Read();\n                jcq.ed=Read();\n                int ch=jcq.ed-jcq.st;\n                if(ch>1000)\n                    jcq.com=1;\n                else if(ch<0)\n                    jcq.com=-123123;\n                else\n                    jcq.com=0;\n                sth.push(jcq);\n            }\n        }\n        stack<xh>kk;\n        int ans=0;\n        int ncom=0;\n        int lef=0;\n        bool err=0;\n        while(!sth.empty()){\n            xh nw=sth.front();\n            sth.pop();\n            int mark=nw.kin;\n            if(mark==0) {\n                if(lef!=0) {\n                    xh bp=kk.top();\n                    vis[bp.nam]=0;\n                    ncom-=bp.com;\n                    kk.pop();\n                    lef--;\n                }\n                else if(lef==0)\n                    err=1;\n            }\n            if(mark==1) {\n                if(vis[nw.nam]==0) {\n                    ncom+=nw.com;\n                    ans=max(ans,ncom);\n                    lef++;\n                    vis[nw.nam]=1;\n                    kk.push(nw);\n                }\n                else if(vis[nw.nam]==1) {\n                    err=1;\n                }\n            }\n        }\n        if(lef!=0)\n            err=1;\n        if(err==1)\n            printf(\"ERR\\n\");\n        else {\n            if(ans==comp)\n                printf(\"Yes\\n\");\n            if(ans!=comp)\n                printf(\"No\\n\");\n        }\n}\nint main() {\n    freopen(\"complexity.in\",\"r\",stdin);\n    freopen(\"complexity.out\",\"w\",stdout);\n    int T;\n    cin>>T;\n    while(T>0) {\n        T--;\n        getans();\n    }\n    return 0;\n    fclose(stdin);\n    fclose(stdout);\n}\n\n```",
        "postTime": 1510734559,
        "uid": 47981,
        "name": "liangs333",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\uff03\u770b\u89c1\u8fd9\u91cc\u6ca1\u6709\u9898\u89e3  \u6211\u5c31\u5148\u6765\u53d1\u4e00\u7bc7\n\n\u8bf4\u767d\u4e86 \u8fd9\u9898\u5c31\u662f\u4e00\u9053\u5927\u6a21\u62df\u9898\u76ee\n\n\u5c31\u662f\u5b57\u7b26\u4e32\u6709\u70b9\u9ebb\u70e6\uff0c\u53ef\u80fd\u4e5f\u6709\u5f88\u591a\u4eba\u5c31\u8d25\u5728\u8fd9\u91cc\u5427\n\n(\u2299o\u2299)\u2026  \u601d\u8def\u4e5f\u5f88\u7b80\u5355\n\n\u8bfb\u6570 \u5904\u7406  \u9996\u5148\u7528getline\u8bfb\u6570  \u628an^w \u548c1\u5224\u65ad\u51fa\u6765\n\n\u518d\u8bfb  \u5206\u51faF\u548cE\u4e24\u79cd\u60c5\u51b5  \u5e76\u4e14\u6bcf\u4e00\u5c42\u90fd\u8981\u50a8\u5b58\u8fd9\u4e00\u7ec4\u7684\u6570\u636e\n\nF\u5c31\u52a0\uff0cE\u5c31\u51cf  \u7ec6\u8282\u5904\u7406\u6709\u70b9\u7e41\u7410\n\n\n\u989d\u6211\u7a0b\u5e8f\u5199\u5f97\u5f88\u6e23\uff0c  \u5f53\u65f6\u4e5f\u6ca1\u7ba1\u90a3\u4e48\u591a\uff0c\u4e00\u4e2a\u4e00\u4e2a\u70b9\u5730\u5199\u7684\u3002\u3002\u3002\u3002\u3002\n\n\u5927\u4f6c\u522b\u55b7\u3002\u3002\u3002\n\n```cpp \n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint t,l,way1,ret1=0,k1,z1,q1,w1,e1,ans1,r1,last1,left1,right1;\nstring a,b,c;\nbool d[200];//\u8bb0\u5f55\u8fd9\u5c42\u5faa\u73af\u7684\u53d8\u91cf\u662f\u5426\u8fd8\u4f1a\u9500\u6bc1\u5c31\u518d\u6b21\u4f7f\u7528\u4e86\nint f[200];//\u8bb0\u5f55\u8fd9\u5c42\u5faa\u73af\u5230\u5e95\u589e\u4e0d\u589e\u52a0\nchar g[200];//\u50a8\u5b58\u5faa\u73af\u53d8\u91cf\u7684\u503c\uff0c\u4e0ed\u6570\u7ec4\u8054\u5408\u4f7f\u7528\nint main(){\n//    freopen(\"complexity.in\",\"r\",stdin);\n//    freopen(\"complexity.out\",\"w\",stdout);\n    char s;\n    scanf(\"%d\",&t);\n    for(int i=1;i<=t;i++){\n        memset(d,false,sizeof(d));\n        memset(f,0,sizeof(f));\n        w1=0;ans1=0;r1=0;last1=0;left1=right1=0;a=b=c=\"\";ret1=0;//\u521d\u59cb\u5316\n        scanf(\"%d\",&l);\n        getline(cin,b);\n        if(b[3]=='1')way1=1;\n        else if(b[3]=='n'){\n            k1=5;\n            way1=2;\n            while(b[k1]>='0'&&b[k1]<='9')ret1=ret1*10+b[k1]-'0',k1++;\n        }\n        for(int j=1;j<=l;j++){\n            cin>>s;\n            if(s=='F'){\n                right1++;\n                z1=q1=0;\n                last1++;\n                f[last1]=0;\n                k1=0;\n                cin>>s;\n                g[last1]=s;\n                if(d[(int)s]){r1=1;}\n                d[(int)s]=1;\n                cin>>a>>b;\n                if(e1==-1)continue;\n                while(a[k1]>='0'&&a[k1]<='9')z1=z1*10+a[k1]-'0',k1++;\n                k1=0;\n                if(b[0]=='n'&&a[0]!='n'){\n                    w1++;f[last1]=1;\n                }\n                else{\n                    while(b[k1]>='0'&&b[k1]<='9')q1=q1*10+b[k1]-'0',k1++;\n                    e1=1;if(z1>q1||(a[0]=='n'&&b[0]!='n'))e1=-1,f[last1]=2;\n                }\n                if(ans1<w1)ans1=w1; \n            }\n            else if(s=='E'){\n                left1++;\n                d[(int)g[last1]]=0;\n                if(f[last1]==1)w1--;\n                if(f[last1]==2)e1=1;\n                last1--;\n            }\n        }\n         if(left1>right1||left1<right1)printf(\"ERR\\n\");\n        else if(l%2||r1)printf(\"ERR\\n\");\n        else if(ans1==ret1)printf(\"Yes\\n\");\n        else if(ans1==0&&way1==1)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    \n//    fclose(stdin);\n//    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1510726037,
        "uid": 18063,
        "name": "XiaQiang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u6808\u6765\u7ef4\u62a4\u5faa\u73af\u5d4c\u5957\u7684\u5173\u7cfb\uff0c\u800c\u4e14\u4e0d\u7528\u8ba1\u7b97\u662f\u5426\u914d\u5bf9\n\n\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u9047\u5230F\u5c31\u538b\u6808\uff0c\u9047\u5230E\u5c31\u5f39\u6808\u5373\u53ef\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u662f\u7ec6\u8282\u975e\u5e38\u70e6\uff0cERR\u5176\u5b9e\u6709\u4e09\u79cd\u60c5\u51b5\n\n1.\u538b\u5165\u91cd\u590d\u5143\u7d20\u3002\n\n2.\u7ed3\u675f\u65f6\u6808\u4e0d\u4e3a\u7a7a\u3002\n\n3.\u5bf9\u7a7a\u6808pop\n\n\u53e6\u4e00\u5904\u7ec6\u8282\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97\uff0c\n\n\u53d1\u73b0\u53ea\u6709\u5e38\u6570\u5230n\u7684\u5faa\u73af\u624d\u662f\u5bf9\u590d\u6742\u5ea6\u6709\u8d21\u732e\u7684\uff0c\n\n\u6240\u4ee5\u9700\u8981\u7ef4\u62a4\u6808\u4e2d\u6709\u6548\u5faa\u73af\u6570\u76ee\u7684\u6700\u5927\u503c\uff0c\u5373\u53ef\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\n\n\u4f46\u662f\u5728\u4e0d\u53ef\u6267\u884c\u5faa\u73af\u4e2d\u7684\u5e38\u6570\u5230n\u5faa\u73af\u662f\u610f\u4e49\u7684\n\n\u6240\u4ee5\u8fd8\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u6808\u4e2d\u4e0d\u53ef\u6267\u884c\u5faa\u73af\u7684\u6570\u76ee\uff0c\n\n\u5982\u679c\u4e0d\u4e3a\u96f6\u5c31\u4e0d\u8fdb\u884c\u6709\u6548\u5faa\u73af\u6280\u672f\n\n\u53e6\u5916\u5c31\u662f\u8981\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\uff0c\u81ea\u5df1\u5c0f\u5fc3\u4e00\u70b9\u5c31\u597d\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int inf=0x3f3f3f3f;//\u5c06n\u5904\u7406\u4e3ainf\nstruct data//\u63cf\u8ff0\u5faa\u73af\u7684\u7ed3\u6784\u4f53\n{\n    char var;int st;int ed;\n}stk[110];int top;bool ins[200];\nchar opt[15];int cpx;\nint t;int res;int rep;int l;int flag;\nint chan()//\u5f3a\u5236\u8f6c\u6362\u5b57\u7b26\u4e32\u4e3a\u6570\u5b57\n{\n    if(opt[0]=='n')\n    {\n        return inf;\n    }\n    int q;\n    for(int i=0;opt[i]!='\\0';i++)\n    {\n        q++;\n    }\n    if(q==1)\n    {\n        return (int)opt[0]-48;\n    }\n    else if(q==2)\n    {\n        return ((int)opt[0]-48)*10+(int)opt[1]-48;\n    }\n    return 0;\n}\nvoid pop()//\u5f39\u6808\u51fd\u6570\n{\n    ins[stk[top].var]=false;//\u89e3\u9664\u6808\u5185\u9650\u5236\n    if(stk[top].st>stk[top].ed)//\u89e3\u9664\u4e00\u5c42\u65e0\u6548\u5faa\u73af\n    {\n        flag--;\n    }\n    if(stk[top].ed==inf&&stk[top].st!=inf&&flag==0)//\u89e3\u9664\u4e00\u5c42\u6709\u6548\u5faa\u73af\n    {\n        rep--;\n    }\n    top--;//\u5f39\u51fa\n    //printf(\"flag=%d,rep=%d,res=%d\\n\",flag,rep,res);\n    return;\n}\nvoid clear()//\u5904\u7406\u591a\u7ec4\u8be2\u95ee\u4e00\u5b9a\u8981\u6e05\u7a7a\n{\n    while(top>0)//\u6e05\u6808\n    {\n        pop();\n    }\n    res=0;l=0;cpx=0;//\u91cd\u7f6eres,l,cpx\n    return;\n}\nvoid push(data x)//\u538b\u6808\u51fd\u6570\n{\n    ins[x.var]=true;//\u7ef4\u62a4ins\n    if(x.st>x.ed)//\u5982\u679c\u5faa\u73af\u65e0\u6548\uff0c\u65e0\u6548\u6807\u8bb0++\n    {\n        flag++;\n    }\n    else if(x.ed==inf&&x.st!=inf&&flag==0) //\u5982\u679c\u5faa\u73af\u6709\u6548\uff0c\u6709\u6548\u6807\u8bb0++\n    {\n        rep++;res=max(res,rep);\n    }\n    stk[++top]=x;//\u538b\u6808\n    //printf(\"flag=%d,rep=%d,res=%d\\n\",flag,rep,res);\n    return;\n}\nvoid reset(int j,int up)//ERR\u4e4b\u540e\u7684\u5783\u573e\u5904\u7406\u51fd\u6570\uff0cscanf\u6389\u591a\u4f59\u7684\u4ee3\u7801\n{\n    for(int i=j;i<up;i++)\n    {\n        scanf(\"%s\",opt);\n        if(opt[0]=='F')\n        {\n            scanf(\"%s\",opt);\n            scanf(\"%s\",opt);\n            scanf(\"%s\",opt);\n        }\n    }\n    return;\n}\nvoid work()//\u8be2\u95ee\u5904\u7406\u51fd\u6570\n{\n    clear();\n    scanf(\"%d\",&l);\n    scanf(\"%s\",opt);\n    if(opt[2]=='n')\n    {\n        int q=0;\n        for(int i=4;opt[i]!=')';i++)//\u7c97\u66b4\u5730\u626b\u51facpx\n        {\n            q++;\n        }\n        if(q==1)\n        {\n            cpx=(int)opt[4]-48;\n        }\n        else if(q==2)\n        {\n            cpx=((int)opt[4]-48)*10+(int)opt[5]-48;\n        }\n    }\n    else\n    {\n        cpx=0;\n    }\n    for(int i=0;i<l;i++)//\u626b\u63cf\u7a0b\u5e8f\u4ee3\u7801\n    {\n        scanf(\"%s\",opt);\n        if(opt[0]=='F')//F\u538b\u6808\n        {\n            data x;//\u65b0\u5efa\u5faa\u73af\n            scanf(\"%s\",opt);\n            x.var=opt[0];\n            scanf(\"%s\",opt);x.st=chan();//\u8bfb\u53d6st\n            scanf(\"%s\",opt);x.ed=chan();//\u8bfb\u53d6ed\n            if(ins[x.var])//\u5982\u679c\u538b\u4e86\u91cd\u590d\u5143\u7d20\uff0cERR\n            {\n                reset(i+1,l);//\u56de\u6536\u5783\u573e\n                printf(\"ERR\\n\");\n                return;\n            }\n            push(x);\n        }\n        else\n        {\n            if(top==0)\n```\n.\n```cpp\n            {\n                reset(i+1,l);\n                printf(\"ERR\\n\");\n                return;\n            }\n            pop();\n        }\n    }\n    if(top>0)//\u6808\u975e\u7a7aERR\n    {\n        printf(\"ERR\\n\");\n    }\n    else if(res==cpx)\n    {\n        printf(\"Yes\\n\");\n    }\n    else\n    {\n        printf(\"No\\n\");\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    for(int i=0;i<t;i++)\n    {\n        work();\n    }\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```",
        "postTime": 1510664371,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7b80\u76f4\u662f\u547c\u5e94\u4e86\u6211\u5bf9for\u5faa\u73af\u7684\u6df1\u5ea6\u4e86\u89e3\uff0c\u76f8\u4fe1\u5199\u8fc7\u8fd9\u9053\u9898\u7684\u540c\u5b66\u5e94\u8be5\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u600e\u4e48\u8ba1\u7b97\u591a\u5c11\u90fd\u6709\u4e00\u4e9b\u4e86\u89e3\u4e86~~\uff08\u53ef\u80fd\u53c8\u662fCCF\u5237\u5b58\u5728\u611f\u4e86\uff09~~\u3002\n\n\u540c\u5b66\u4eec\u5e94\u8be5\u77e5\u9053\u9012\u5f52\u53ef\u4ee5\u770b\u6210\u662ffor\u5faa\u73af\u5728\u6808\u91cc\u5d4c\u5957\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u9012\u5f52\u6a21\u62dffor\u5faa\u73af\u7684\u5d4c\u5957\u3002\n\n\u601d\u60f3\u5c31\u662f\u6765\u4e00\u4e2afor\u5faa\u73af\u5c31\u7ee7\u7eed\u9012\u5f52\uff0c\u9047\u5230E\u5c31return\uff0c\u6240\u4ee5\u8fd9\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff1afor\u548cE\n\u4e0d\u5bf9\u5e94\u600e\u4e48\u529e\u3002\u6211\u4eec\u53ef\u4ee5\u4e00\u8fb9\u9012\u5f52\u4e00\u8fb9\u7edf\u8ba1\u4e24\u4e2a\u7684\u6570\u91cf\uff0c\u7b49\u8df3\u51fa\u9012\u5f52\u540e\u518d\u5bf9\u6bd4\u3002\n\n\u90a3\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u540d\u662f\u5426\u91cd\u65b0\u51fa\u73b0\uff1f\u56e0\u4e3a\u4ed6\u4eec\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u6876\u6765\u5b58\uff0c\u5199\u4e00\u4e2a\u56de\u6eaf\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u4e0d\u8981\u5fd8\u4e86\u5982\u679c\u53d8\u91cf\u7684\u521d\u59cb\u503c\u6bd4\u672b\u5c3e\u503c\u8981\u5927\u7684\u8bdd\uff0c\u7ee7\u7eed\u4e0d\u4e86for\u5faa\u73af\u4e86\u600e\u4e48\u529e\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u4e24\u505a\u6bd4\u8f83\uff0c\u5982\u679c\u524d\u9762\u5927\u7684\u8bdd\uff0c\u540e\u9762\u7edf\u8ba1\u7684\u65f6\u5019\u5c31\u4e0d\u8981++\u4e86\u3002\u6211\u6700\u5f00\u59cb\u505a\u8fd9\u9898\u7684\u65f6\u5019\u5c31\u662f\u6302\u5728\u4e86\u8fd9\u91cc\u3002\u5927\u5bb6\u8981\u5c0f\u5fc3\u4e86\uff01\uff01\n\n\u6838\u5fc3\u6a21\u62df\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nvoid solve(int ans)\n{\n\tif(num>=n)\n\t{\n\t\terro=1;\n\t\treturn;\n\t}\n\tchar S;\n\tstring fi,se,ch;\n\twhile(num<n)\n\t{\n\t\tnum++;\n\t\tcin>>S;\n\t\tif(S=='F')\n\t\t{\n\t\t\tF++;\n\t\t    cin>>ch>>fi>>se;\n\t\t    if(mp[ch])\n\t\t    {\n\t\t    \terro=1;\n\t\t    \treturn;\n\t\t\t}\n\t\t    mp[ch]=1;\n\t\t    if(fi==\"n\"&&se!=\"n\") flag=1;\n\t\t    else if(fi!=\"n\"&&se!=\"n\")\n\t\t    {\n\t\t    \tint lenf=fi.length(),lens=se.length();\n\t\t    \tint ffi=0,sse=0;\n\t\t    \tfor(int i=0;i<lenf;i++) ffi=ffi*10+fi[i]-'0';\n\t\t    \tfor(int i=0;i<lens;i++) sse=sse*10+se[i]-'0';\n\t\t    \tif(ffi>sse) flag=1;\n\t\t\t}\n\t\t\tif(fi!=\"n\"&&se==\"n\"&&!flag) solve(ans+1);\n\t\t\telse solve(ans);\n\t\t\tflag=0;\n\t\t\tmp[ch]=0;\n\t\t}\n\t\telse if(S=='E')\n\t\t{\n\t\t\tE++;\n\t\t\tif(F==0) erro=1;\n\t\t\tma=max(ma,ans);\n\t\t\treturn;\n\t\t}\n\t}\n}\n```\n\n\n\u56e0\u4e3afor\u5faa\u73af\u53ef\u4ee5\u4e0d\u5d4c\u5957\uff0c\u6240\u4ee5\u8981\u591a\u6b21\u9012\u5f52\uff1a\n```\n\n\t    ma=0,num=0,erro=0;\n\t    while(num<n)\n\t    {\n\t\t    flag=0;\n\t\t    F=0;\n\t\t    E=0;\n\t\t    solve(0);\n\t\t    if(F!=E) erro=1;\n\t    }\n```\n\nerro\u662f\u6765\u6807\u8bb0\u662f\u5426\u6709\u9519\u7684\uff0c\u5343\u4e07\u4e0d\u80fd\u5224\u65ad\u5230\u9519\u8bef\u5c31\u8df3\u51fa\uff0c\u96be\u9053\u4f60\u540e\u9762\u7684\u4e0d\u8981\u4e86\u5417\uff1f\n\n\u6bcf\u6b21\u7b2c\u5f52\u8bb0\u5f97\u6e05\u96f6\u3002\u603b\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<map>\nusing namespace std;\nint t,n,num,ma,flag,erro,F,E;\nstring O;\nmap<string,int> mp;\nvoid solve(int ans)\n{\n\tif(num>=n)\n\t{\n\t\terro=1;\n\t\treturn;\n\t}\n\tchar S;\n\tstring fi,se,ch;\n\twhile(num<n)\n\t{\n\t\tnum++;\n\t\tcin>>S;\n\t\tif(S=='F')\n\t\t{\n\t\t\tF++;\n\t\t    cin>>ch>>fi>>se;\n\t\t    if(mp[ch])\n\t\t    {\n\t\t    \terro=1;\n\t\t    \treturn;\n\t\t\t}\n\t\t    mp[ch]=1;\n\t\t    if(fi==\"n\"&&se!=\"n\") flag=1;\n\t\t    else if(fi!=\"n\"&&se!=\"n\")\n\t\t    {\n\t\t    \tint lenf=fi.length(),lens=se.length();\n\t\t    \tint ffi=0,sse=0;\n\t\t    \tfor(int i=0;i<lenf;i++) ffi=ffi*10+fi[i]-'0';\n\t\t    \tfor(int i=0;i<lens;i++) sse=sse*10+se[i]-'0';\n\t\t    \tif(ffi>sse) flag=1;\n\t\t\t}\n\t\t\tif(fi!=\"n\"&&se==\"n\"&&!flag) solve(ans+1);\n\t\t\telse solve(ans);\n\t\t\tflag=0;\n\t\t\tmp[ch]=0;\n\t\t}\n\t\telse if(S=='E')\n\t\t{\n\t\t\tE++;\n\t\t\tif(F==0) erro=1;\n\t\t\tma=max(ma,ans);\n\t\t\treturn;\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"complexity.in\",\"r\",stdin);\n//\tfreopen(\"complexity.out\",\"w\",stdout);\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t    scanf(\"%d\",&n);\n\t    cin>>O;\n\t    ma=0,num=0,erro=0;\n\t    while(num<n)\n\t    {\n\t\t    flag=0;\n\t\t    F=0;\n\t\t    E=0;\n\t\t    solve(0);\n\t\t    if(F!=E) erro=1;\n\t    }\n\t    int len=O.length(),tt=0;\n\t    for(int i=0;i<len;i++)\n\t    {\n\t\t    if(O[i]=='n'&&O[i+1]=='^')\n\t\t    {\n\t\t\t    int j=i+2;\n\t\t\t    while(O[j]<='9'&&O[j]>='0') tt=tt*10+O[j]-'0',j++;\n\t\t\t    break;\n\t\t    }\n\t    }\n\t    if(!erro)\n\t    {\n\t        if(tt==ma)  printf(\"Yes\\n\");\n\t        else printf(\"No\\n\");\n\t\t}\n\t\telse printf(\"ERR\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1573536016,
        "uid": 172628,
        "name": "\u9ec4\u57ce\u7131",
        "ccfLevel": 6,
        "title": "\u65f6\u95f4\u597d\u590d\u6742\u554a"
    },
    {
        "content": "\u5e76\u4e0d\u7b80\u5355\u7684\u4e00\u9053\u6a21\u62df\u3002\n\n\u4f46\u662f\u5176\u5b9e\u4e5f\u4e0d\u592a\u56f0\u96be\uff0c\u8bfb\u9898\u5230AC\u4e00\u5c0f\u65f6\u5de6\u53f3\u3002\n\n\u6211\u4eec\u9996\u5148\u5148\u6765\u770b\u5982\u4f55\u5224\u65ad`ERR`\n\n\u663e\u7136\uff0c\u9898\u76ee\u4e2d\u5df2\u7ecf\u7ea6\u5b9a\u4e86\uff0c`ERR`\u7684\u60c5\u51b5\u53ea\u6709\u4e24\u70b9:\n\n- F\u4e0eE\u4e0d\u5339\u914d\u3002\n\n\u8fd9\u4e2a\u7528\u4e00\u4e2a\u6808\u5224\u65ad\u5373\u53ef\u3002\n\n- \u53d8\u91cf\u91cd\u540d\n\n\u6bcf\u6b21\u538b\u5165\u4e00\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u904d\u5386\u6574\u4e2a\u6808\u770b\u662f\u5426\u6709\u91cd\u590d\u53d8\u91cf\u5373\u53ef\u3002\n\n\u6ca1\u4e86\uff1f\n\n\u771f\u6ca1\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u770b\u5728\u5df2\u7ecf\u5224\u65ad\u7a0b\u5e8f\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u8ba1\u7b97\u8be5\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u6bcf\u4e2a\u5faa\u73af\u4f53\u65e0\u975e\u6709\u4e0b\u9762\u4e09\u79cd\u60c5\u51b5\uff1a\n\n- $O(n)$\u7ea7\u522b\u7684\u5faa\u73af\n\n- $O(1)$\u7ea7\u522b\u7684\u5faa\u73af\n\n- \u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\n\n\u4e0a\u9762\u4e24\u4e2a\u597d\u8bf4\uff0c\u5982\u679c\u662f$O(n)$\u7ea7\u522b\u7684\uff0c\u5bf9\u7b54\u6848\u8d21\u732e\u4e00\u4e0b\u5373\u53ef\uff0c$O(1)$\u7684\u4e0d\u7528\u7ba1\u4ed6\u3002\n\n\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a\u53d8\u91cf`flag`\u8bb0\u5f55\u5f53\u524d\u5faa\u73af\u4e4b\u524d\uff0c\u662f\u5426\u6709\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\uff0c\u82e5\u5b58\u5728\u7684\u8bdd\uff0c\u6211\u4eec\u5f53\u524d\u7684\u6240\u6709\u5faa\u73af\u90fd\u662f\u65e0\u6cd5\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\uff0c\u76f4\u5230\u5f39\u6808\uff0c\u5f39\u51fa\u6240\u6709\u7684\u4e0d\u5408\u6cd5\u5faa\u73af\u5230`flag=0`\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u7ee7\u7eed\u7684\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4ee3\u7801\u4e0d\u662f\u5f88\u957f\uff0c88\u884c\uff0c\u6bd4\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u9898\u77ed\u591a\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 500;\nstring s[N];\nbool vis[N];\nint n;\n\nint getnum(string x) {\n\tint l = 0;\n\tif(x.size() == 4) return 0;\n\tfor(int i = 4 ; i <= x.size() - 2 ; i ++) l = l * 10 + (x[i] - '0'); return l;\n}\n\nbool error() {\n\tint st[N] = {0} , top = 0;\n\tint cnt = 0;\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tif(s[i][0] == 'F') cnt ++;\n\t\tif(s[i][0] == 'E') cnt --;\n\t\tif(cnt < 0) return true; \n\t}\n\tif(cnt != 0) return true;\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tif(s[i][0] == 'F') {\n\t\t\tint now = s[i][2] - 'a';\n\t\t\tfor(int j = 1 ; j <= top ; j ++) if(st[j] == now) return true;\n\t\t\tst[++ top] = now;\n\t\t}\n\t\tif(s[i][0] == 'E') top --;\n\t}\n\treturn false;\n}\n\nint judge(string x) { //0 ->\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af 1-> \u5e38\u6570\u5faa\u73af 2->\u6b63\u5e38\u5faa\u73af \n\tint len = x.size(); \n\tif(x[4] >= '0' && x[4] <= '9' && x[len - 1] == 'n') return 2;\n\tif(x[4] == 'n' && x[len - 1] == 'n') return 1;\n\tif(x[4] >= '0' && x[4] <= '9' && x[len - 1] >= '0' && x[len - 1] <= '9') {\n\t\tint start = 0 , end = 0;\n\t\tint p1 = 4;\n\t\twhile(x[p1] >= '0' && x[p1] <= '9') {start = start * 10 + (x[p1] - '0'); p1 ++;}\n\t\twhile(x[p1] <'0' || x[p1] > '9') p1 ++;\n\t\twhile(x[p1] >= '0' && x[p1] <= '9') {end = end * 10 + (x[p1] - '0'); p1 ++;}\n\t\tif(start <= end) return 1;\n\t\telse return 0;\n\t}\n\treturn 0; \n}\n\nint check() {\n\tint ans = 0 , flag = 0 , now = 0;\n\tint st[N] = {0}, top = 0;\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tans = max(ans , now);\n\t\tif(s[i][0] == 'F') {\n\t\t\tint level = judge(s[i]);\n\t\t\tst[++ top] = level;\n\t\t\tif(level == 2 && flag == 0) now ++; \n\t\t\tif(level == 0) flag ++;\n\t\t} else if(s[i][0] == 'E') {\n\t\t\tif(st[top] == 2 && flag == 0) now --;\n\t\t\tif(st[top] == 0) flag --; \n\t\t\ttop --;\n\t\t}\n\t}\n\treturn ans;\n}\n\nvoid Solve() {\t\n\tcin >> n; getchar();\n\tstring O; \n\tgetline(cin , O);\n\tint p = getnum(O);\n\tfor(int i = 1 ; i <= n  ;i ++) getline(cin , s[i]);\n\tif(error()) {puts(\"ERR\");return;}\n\tint w = check();\n\tif(w == p) {puts(\"Yes\"); return;}\n\telse {puts(\"No\"); return;} \n}\n\nint main () {\n\tint T;\n\tcin >> T;\n\twhile(T --) Solve();\n\treturn 0;\n}\n\n```",
        "postTime": 1573028279,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u662f2017\u5e74\u7684\u4e00\u9053$\\color{blue}\\text{\u63d0\u9ad8+/\u7701\u9009-}$\u96be\u5ea6\u7684NOIP2017\u5e74\u7684\u9898\u3002\n\n\u601d\u7ef4\u96be\u5ea6\u4e0d\u5927\uff0c\u6a21\u62df\u2026\u2026\n\n\u4f46\u662f\u4ee3\u7801\u96be\u5ea6\u6709\u70b9\u5927\uff01\uff01\uff01\n\n\u8fd9\u662f\u672c\u4eba~~\u901a\u8fc7\u6d4b\u8bd5\u6570\u636e~~\u7684**\u63d0\u4ea4\u8bb0\u5f55** ~~\uff08\u6211\u7edd\u5bf9\u6ca1\u6709\u4e0b\u6570\u636e~~\n\n![](https://i.loli.net/2019/11/04/LQh1diTyDVwJ5KS.png)\n\n\u9996\u5148\u8fd9\u9053\u9898\u4e00\u5171\u4e09\u79cd\u7b54\u6848\uff1aYes,No,ERR **(\u8fd9\u91cc\u8981\u6ce8\u610f\u5927\u5c0f\u5199)**\n\nans[i]=0,No;\n\nans[i]=1,Yes;\n\nans[i]=2,ERR;\n\n## \u90a3\u6211\u4eec\u4e00\u4e00\u6765\u5904\u7406\u2026\u2026\u2026\u2026\uff08orz\n\n\n\n------------\n\u9996\u5148\u662f$\\color{red}\\text{ERR}$\n\n\u4e24\u79cd\u60c5\u51b5\uff1a\n\u2460 F \u548c E \u4e0d\u5339\u914d \u2461\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d\u4e24\u79cd\u60c5\u51b5\n\n**F\u548cE\u4e0d\u5339\u914d\uff1a** \n\n```cpp\n\"\u51fa\u73b0\u4e00\u4e2aF\uff0c\u5c31\u628at++,\u51fa\u73b0\u4e00\u4e2aE\uff0c\u5c31\u628at--.\n\n\u6240\u4ee5\u6309\u9053\u7406\uff0cE\u51fa\u73b0\u7684\u4e2a\u6570\u80af\u5b9a\u6bd4F\u51fa\u73b0\u7684\u4e2a\u6570\u5c11\uff0c\u6240\u4ee5t\u5e94\u8be5>=0\n\n\u82e5t<0\uff0c\u5219ERR\n\"\n```\n\u4ee3\u7801\n```\nt++;\n\n\nif(t<0)\n{\n    ans[now]=2;//ERR\n    goon=1;//\u8bb0\u5f55\u7a0b\u5e8f\u6709\u9519\n}\n```\n\n**\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d:**\n\n```cpp\n\"\n\u5728\uff01\u6bcf\u7ec4\u5faa\u73af\uff01\u4e2d\u4e0d\u80fd\u5b58\u5728\u91cd\u590d\u7684\u3002\n\n\u51fa\u73b0\u5c31map[s]=1;\n\n\u82e5map[s]==1,\u5219\u91cd\u590d\uff0cERR\n\n\u6ce8\u610f\uff1a\u5728\u9047\u5230E\u540e\uff08\u8fdb\u5165\u4e0b\u4e00\u7ec4\u5faa\u73af\u4e86\uff09\uff0cmap\u6570\u7ec4\u8981\u6e05\u96f6\u3002\n\"\n```\n\u4ee3\u7801\uff1a\n```cpp\nif(!goon)  //\u7a0b\u5e8f\u65e0\u9519\n{\n    if(map[sb]==0) //sb:\u53d8\u91cf\u540d\n    map[sb]=1; \n    else if(map[sb]==1)\n    {\n    \t ans[now]=2; //\u8bb0\u5f55ERR\n    \t goon=1;  //\u7a0b\u5e8f\u6709\u9519\n\t}\t\n}\n\n\nif(lf=='E')\n{\n\tt--;\t\n\tmemset(map,0,sizeof(map));\n}\n\n```\n\nERR\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u5224\u65ad$\\color{red}\\text{no}$\u6216\u8005$\\color{red}\\text{yes}$\n\n\n![](https://i.loli.net/2019/11/04/BfAT5PLulew86YW.png)\n\n![](https://i.loli.net/2019/11/04/T5AZ6EzVqLf3WJU.png)\n\n```cpp\n\"\n1. \u5982\u679cx==n,\u4f46\u662fy<100.\u5c31\u5c5e\u4e8e\u8bed\u6cd5\u9519\u8bef\u3002\n\n2. \u5982\u679cx>y\uff0c\u4e5f\u5c5e\u4e8e\u8bed\u6cd5\u9519\u8bef\u3002\n\uff08\u6211\u4e00\u5f00\u59cb\u76f4\u63a5\u7528x>y\u5224\u65ad\uff0c\u4f46\u5b57\u7b26\u4e32\u662f\u4ece\u9ad8\u4f4d\u6bd4\u8f83\uff0c\u4e5f\u5c31\u662f3>21.)\n\u4e8e\u662f\uff0c\u518d\u6b21\u5229\u7528\u5b57\u7b26\u4e32\uff0c\u82e5x.size()>y.size(),\n\u5219\u76f4\u63a5\u5c5e\u4e8e\u8bed\u6cd5\u9519\u8bef\u3002\u6216\u8005x.size()==y.size(),\n\u518d\u540c\u4f4d\u6bd4\u8f83x>y\uff0c\u5373\u53ef\u3002\uff08\u8bed\u6cd5\u9519\u8bef\u540c1.\uff09\n\n3. \u5982\u679cx==y==n\u6216\u8005\u90fd\u4f4d\u6570\u5b57\u4f46\u662f\u6ca1\u8fdd\u53cd2.\uff0c\u5219\u76f8\u5f53\u4e8e\u6ca1\u5b58\u5728\u8fc7\u3002\n\n4. \u5982\u679cy==n\uff0c\u4f46\u662f\u6ca1\u8fdd\u53cd3.\u5faa\u73af\u6b21\u6570\u52a0\u4e00\u65b9\uff0c\n\"\n```\n$\\color{red}\\text{\u5224\u65ad\u65b9\u5f0f}$\n\n```cpp\n\u6700\u540e\u518d\u6bcf\u7ec4\u5faa\u73af\u4e2d\u9009\u53d6\u5faa\u73af\u6b21\u6570\u6700\u591a\u7684\u3002maxans=max(maxans,ans);\n\n\u82e5\u6700\u591a\u662f0\uff0c\u5219\u662f\u5e38\u6570\u590d\u6742\u5ea6\uff0c\u5373O(1).\n\nif(maxans==0)\n{\n    if(s==\"O(1)\")\n    ans[now]=1; //Yes\n    else ans[now]=0; //No\n}\n\n\u82e5\u4e0d\u4e3a0\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\nelse \n{\n\tif(s==\"O(1)\")\n\tans[now]=0; //No\n\telse if(s[s.size()-2]-'0'==maxans||(s[s.size()-2]-'0'==maxans%10&&s[s.size()-3]-'0'==maxans/10))//\u5224\u65ad\u6570\u5b57\u662f\u5426\u76f8\u7b49,\u56e0\u4e3a\u4f4d\u6570\u6700\u591a\u4e3a2,\u5c31\u9010\u4f4d\u5224\u65ad\u3002\n\tans[now]=1; //Yes\n\telse ans[now]=0; //No\n}\t\n```\n\n\u6700\u540e\u518d\u5224\u65adans[now]\u5c31\u884c\u4e86\u3002\n\n$\\color{green}\\text{\u4ee3\u7801}$\n\n```cpp\n#include<cstdio> \n#include<string>\n#include<iostream>\n#include<cstring>\n#include<stdlib.h> //\u4e00\u5806\u5934\u6587\u4ef6\uff0c\uff08\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e07\u80fd\uff1f\nusing namespace std;\n\nconst int maxn=105;\nint n;\nint l;\nchar lf;\nbool goon;\nstring s;\nint t;\nint ans[12];\nchar sb;\nstring x,y;\nbool map[3005];\nint cord;\nint anss,he;  //anss\u5faa\u73af\u6b21\u65b9\uff0che\u80fd\u5426\u7ee7\u7eed\u5faa\u73af\nint maxans;   //\u6700\u5927\u6b21\u65b9\n\nint read(){int x=0,f=1;char c=getchar();while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}while(isdigit(c)){x=x*10+c-'0';c=getchar();}return x*f;}//\u5feb\u8bfb\uff08\u538b\u884c\u4e86\uff09\n\nvoid work(int now)\n{\n\tanss=0,maxans=0,he=0;\n\tt=0,goon=0;\n\tmemset(map,0,sizeof(map));\n\tint l;\n\tl=read();\n\tcin>>s;\n    for(int j=1;j<=l;j++)\n    {\n    \tcin>>lf; //lf,F\u6216E\n    \tif(lf=='F') //for\u5faa\u73af\u6a21\u62df\n    \t{\n    \t\tt++;\t//\u51fa\u73b0F\uff0ct++\n    \t\tcin>>sb>>x>>y;\n\t\t\tif(!goon)\n    \t\t{\n    \t\t\tif(map[sb]==0)\n    \t    \tmap[sb]=1;\n    \t    \telse if(map[sb]==1)\n    \t    \t{\n    \t    \t  ans[now]=2;\n    \t\t \t  goon=1;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif(ans[now]!=2)\n\t\t\t{\n\t\t\t\tif(!he) //\u80fd\u7ee7\u7eed\u5faa\u73af\n\t\t\t\t{\n\t\t\t\t    if(x==\"n\"&&y==\"n\") //\u90fd\u4e3an\uff0c\u4e0d\u7ba1\n\t\t\t\t    {\n\t\t\t\t\t}\n\t\t\t\t    else if(x==\"n\")\n\t\t\t\t\t{\n\t\t\t\t\t\the=1;\n\t\t\t\t\t}\n\t\t\t\t\telse if(y==\"n\")\n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\t\tanss++;\n\t\t\t\t\t}\t\t\t\n\t\t\t\t\telse if(x.size()>y.size()||(x.size()==y.size()&&x>y))\n\t\t\t\t\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\the=1;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n        }\n\t\telse if(lf=='E')\n\t\t{\n\t\tt--;\t\n\t\tmemset(map,0,sizeof(map));\n\t\tmaxans=max(maxans,anss);\n\t\tanss--;he=0;\n\t\tif(anss<0)\n\t\tanss=0;\n\t\t}\n    \tif(t<0)\n    \t{\n    \t\tans[now]=2;\n    \t\tgoon=1;\n\t\t}\n    }\n    \n    if(ans[now]!=2)\n    {\n    \t\n    if(maxans==0)\n    {\n    \tif(s==\"O(1)\")\n    \tans[now]=1;\n    \telse ans[now]=0;\n\t}\n\telse \n\t{\n\t\tif(s==\"O(1)\")\n\t\tans[now]=0;\n\t\telse if(s[s.size()-2]-'0'==maxans||(s[s.size()-2]-'0'==maxans%10&&s[s.size()-3]-'0'==maxans/10))\n\t\tans[now]=1;\n\t\telse ans[now]=0;\n\t}\t\n\t\n\t}\n    \n\tif(t) //\u6700\u540et\u5e94\u8be5\u662f0,\u82e5\u4e0d\u4e3a0,\u5c31\u662fERR\n\t{\n    \tans[now]=2;\n\t}\n}\n\nvoid readdata()\n{\n\tn=read();\n}\n\nvoid out()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ans[i]==0)\n\t\tprintf(\"No\\n\");\n\t\telse if(ans[i]==1)\n\t\tprintf(\"Yes\\n\");\n\t\telse printf(\"ERR\\n\");\n\t}\n}\n\nint main()\n{\n\treaddata(); //\u8f93\u5165\n    for(int i=1;i<=n;i++) //\u5faa\u73af\u8f93\u5165\n\twork(i);\n\tout(); //\u8f93\u51fa\n\treturn 0;\n}\n```\n\n~~\u9003orz~~\n\n\n\n\n\n\n\n",
        "postTime": 1572871197,
        "uid": 91720,
        "name": "Anonymous\u533f\u540d\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "### \u9898\u76ee\n\u5c0f\u660e\u6b63\u5728\u5b66\u4e60\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00 A++\uff0c\u521a\u5b66\u4f1a\u5faa\u73af\u8bed\u53e5\u7684\u4ed6\u6fc0\u52a8\u5730\u5199\u4e86\u597d\u591a\u7a0b\u5e8f\u5e76 \u7ed9\u51fa\u4e86\u4ed6\u81ea\u5df1\u7b97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u4ed6\u7684\u7f16\u7a0b\u8001\u5e08\u5b9e\u5728\u4e0d\u60f3\u4e00\u4e2a\u4e00\u4e2a\u68c0\u67e5\u5c0f\u660e\u7684\u7a0b\u5e8f\uff0c \u4e8e\u662f\u4f60\u7684\u673a\u4f1a\u6765\u5566\uff01\u4e0b\u9762\u8bf7\u4f60\u7f16\u5199\u7a0b\u5e8f\u6765\u5224\u65ad\u5c0f\u660e\u5bf9\u4ed6\u7684\u6bcf\u4e2a\u7a0b\u5e8f\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5426\u6b63\u786e\u3002\n\nA++\u8bed\u8a00\u7684\u5faa\u73af\u7ed3\u6784\u5982\u4e0b\uff1a\n\nF i x y\n    \u5faa\u73af\u4f53\nE\n\u5176\u4e2dF i x y\u8868\u793a\u65b0\u5efa\u53d8\u91cf ii\uff08\u53d8\u91cf ii \u4e0d\u53ef\u4e0e\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u540d\uff09\u5e76\u521d\u59cb\u5316\u4e3a xx\uff0c \u7136\u540e\u5224\u65ad ii \u548c yy \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u82e5 ii \u5c0f\u4e8e\u7b49\u4e8e yy \u5219\u8fdb\u5165\u5faa\u73af\uff0c\u5426\u5219\u4e0d\u8fdb\u5165\u3002\u6bcf\u6b21\u5faa\u73af\u7ed3\u675f\u540e ii \u90fd\u4f1a\u88ab\u4fee\u6539\u6210 i +1i+1\uff0c\u4e00\u65e6 ii \u5927\u4e8e yy \u7ec8\u6b62\u5faa\u73af\u3002\n\nxx \u548c yy \u53ef\u4ee5\u662f\u6b63\u6574\u6570\uff08xx \u548c yy \u7684\u5927\u5c0f\u5173\u7cfb\u4e0d\u5b9a\uff09\u6216\u53d8\u91cf nn\u3002nn \u662f\u4e00\u4e2a\u8868\u793a\u6570\u636e\u89c4\u6a21\u7684\u53d8\u91cf\uff0c\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u4e2d\u9700\u4fdd\u7559\u8be5\u53d8\u91cf\u800c\u4e0d\u80fd\u5c06\u5176\u89c6\u4e3a\u5e38\u6570\uff0c\u8be5\u6570\u8fdc\u5927\u4e8e 100100\u3002\n\n\u201cE\u201d\u8868\u793a\u5faa\u73af\u4f53\u7ed3\u675f\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u65f6\uff0c\u8fd9\u4e2a\u5faa\u73af\u4f53\u65b0\u5efa\u7684\u53d8\u91cf\u4e5f\u88ab\u9500\u6bc1\u3002\n\n\u6ce8\uff1a\u672c\u9898\u4e2d\u4e3a\u4e86\u4e66\u5199\u65b9\u4fbf\uff0c\u5728\u63cf\u8ff0\u590d\u6742\u5ea6\u65f6\uff0c\u4f7f\u7528\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u201cO\u201d\u8868\u793a\u901a\u5e38\u610f\u4e49\u4e0b\u201c\u0398\u201d\u7684\u6982\u5ff5\u3002\n\n\n### \u5206\u6790\n\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5bf9\u4e00\u7ec4for\u5faa\u73af\u8fdb\u884c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97\uff0c\n\u8fd9\u4e9bfor\u5faa\u73af\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u90a3\u4e48for\u5faa\u73af\u7684\u5d4c\u5957\u4e0d\u5c31\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a**\u591a\u53c9\u6811**\u561b\u3002\n\n\u90a3\u4e48\u6c42\u65f6\u95f4\u590d\u6742\u5ea6 => \u6c42\u591a\u53c9\u6811\u7684**\u6700\u5927\u6df1\u5ea6**\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u6811\u7684\u904d\u5386\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u4f46\u662f\u9898\u76ee\u8f93\u5165\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u60f3\u8981\u7684\u6811\uff0c\u6240\u4ee5\u5148\u6839\u636e\u9898\u76ee\u8f93\u5165\u7684\u5b57\u7b26\u4e32**\u6784\u9020\u4e00\u9897\u6811**\uff0c\u4e0e\u6b64\u540c\u65f6\u8fdb\u884c\u8bed\u6cd5\u5224\u65ad\u3002\n\n\u6784\u9020\u6811\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a**\u6808**\u6765\u8f85\u52a9\uff0c\u5927\u81f4\u601d\u8def\u5c31\u662f\u904d\u5386\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u6839\u636e\u662fF \u8fd8\u662f E \u6765\u538b\u6808\uff0c\u5f39\u6808\uff0c\u6784\u9020\u6811\u3002\n\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u4ee5\u8bc6\u522b\uff0c**\u65b0\u5efa\u7684\u53d8\u91cf\u4e0e\u5df2\u7ecf\u5b58\u5728\u4f46\u672a\u88ab\u9500\u6bc1\u7684\u53d8\u91cf\u91cd\u590d** \u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u6811\u7684\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408\uff0c\u6765\u4fdd\u7559\u5f53\u524d\u4f5c\u7528\u57df\u4e0b\u51fa\u73b0\u7684\u53d8\u91cf\uff0c\u540c\u65f6\u6709\u4e00\u4e2a\u6307\u5411\u7236\u8282\u70b9\u7684\u6307\u9488\uff0c\u6765\u9012\u5f52\u7684\u5224\u65ad\u5f53\u524d\u8fd9\u4e2a\u53d8\u91cf\u662f\u5426\u5728\u5f53\u524d\u8282\u70b9\u4e4b\u524d\u51fa\u73b0\u8fc7\u3002\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\n\n### \u4ee3\u7801\n\n\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <set>\n\nusing namespace std;\n\nstruct line {\n    string F, i, x, y;\n    vector<line*> next; // \u6240\u6709\u7684\u5b50\u8282\u70b9\n    line * fa; // \u6307\u5411\u7236\u8282\u70b9\u7684\u6307\u9488\n    set<string> sympols; // \u5f53\u524d\u51fa\u73b0\u7684\u53d8\u91cf\n\n    line() : fa(this) {}\n    line(line * fa) : fa(fa) {}\n\n\t// \u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u51fa\u73b0\u8fc7\n    bool exist(const string& str) {\n    \t// \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u6839\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u4e0d\u5b58\u5728\n        if (this->fa == this) return false;\n\n\t\t// \u5982\u679c\u5728\u5f53\u524d\u7684\u53d8\u91cf\u96c6\u5408\u91cc\n        if (sympols.find(str) != sympols.end()) \n            return true;\n            \n        // \u4e0d\u5728\u5c31\u9012\u5f52\u7684\u5224\u65ad\n        return fa->exist(str);\n    }\n\n\t// \u8fdb\u884c\u63d2\u5165\u4e00\u4e2a\u5b50\u8282\u70b9\n    bool insert(line* l) {\n        if (exist(l->i)) return false;\n        l->fa = this;\n        l->sympols.insert(l->i);\n        next.push_back(l);\n        return true;\n    }\n\n\t// \u8c03\u8bd5\u7528\u7684\n    friend ostream & operator<< (ostream&out, const line& l){\n       return  out << l.F << \" \" << l.i << \" \" \n           << l.x << \" \" << l.y ;\n    }\n};\n\n// \u8f93\u51fa\u6811\u7684\u7ed3\u6784\uff0c\u8c03\u8bd5\u7528\u7684\u3002\nvoid output(line* l, int cnt) {\n    for (int i = 0; i < cnt; i++) {\n        cout << \"-\";\n    }\n    cout << *l << endl;\n    for (line* ll : l->next) {\n        output(ll, cnt + 1);\n    }\n}\n\n// \u627e\u5230\u6811\u7684\u6700\u5927\u6df1\u5ea6\nint dfs(line* root) {\n    int sum = 0;\n    for (line* l : root->next) {\n        int tmp = 0;\n        if (l->x == \"n\" && l->y == \"n\") tmp = 0;\n        else if (l->x == \"n\" && l->y != \"n\") return 0;\n        else if (l->x != \"n\" && l->y != \"n\") {\n            if (atoi(l->x.c_str()) > atoi(l->y.c_str()))\n                return 0;\n            else\n                tmp = 0;\n        } else {\n            tmp = 1;\n        }\n        sum = max(sum, tmp + dfs(l));\n    }\n    return sum;\n}\n\n// \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6811\u578b\u7ed3\u6784\uff0c\u5e76\u8fd4\u56de\u65f6\u95f4\u590d\u6742\u5ea6\nstring judge(line&root, vector<line>&program) {\n    // \u8fdb\u884c\u7f16\u8bd1\n    int deep = 0;\n    stack<line*> op;\n    op.push(&root);\n    for (size_t i= 0; i < program.size(); i++) {\n        line*tmp = &program[i];\n        if (tmp->F == \"E\") {\n            if (op.size() == 1) {\n                deep = -1;\n                break;\n            }\n            op.pop();\n        } else {\n            if (op.top()->insert(tmp)) {\n                op.push(tmp);\n            } else {\n                deep = -1;\n                break;\n            }\n        }\n    }\n\n    if (deep == -1 || op.size() != 1) return \"ERR\";\n\n    // output(&root, 0);\n\n    deep = dfs(&root);\n    if (deep == 0) return \"O(1)\";\n    else return \"O(n^\" + to_string(deep) + \")\";\n}\n\nint main() {\n    int t, n;\n    cin >> t;\n    string result;\n    for (int i = 0; i < t; i++) {\n        line root;\n        root.F = \"root\";\n        cin >> n >> result;\n        vector<line> program(n);\n        for (int i = 0; i < n; i++) {\n            cin >> program[i].F;\n            if (program[i].F == \"E\") continue;\n            cin >> program[i].i >> program[i].x >> program[i].y;\n        }\n        string res = judge(root, program);\n        // cout << res << endl;\n        if (res == \"ERR\") cout << res << endl;\n        else if (res == result) cout << \"Yes\" << endl;\n        else cout << \"No\" << endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1570686921,
        "uid": 169521,
        "name": "gin_tama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# \u4fe1\u7ade\u5feb\u4e50\u9898\uff0c\u795e\u4ed9\u590d\u6742\u5ea6\u3002\n## \u514d\u8d23\u58f0\u660e\uff0c\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\n\u6700\u8fd1\u7801\u529b\u4e25\u91cd\u4e0b\u6ed1\uff0c\u903c\u81ea\u5df1\u5237\u51e0\u9053\u6296m\u5927\u6a21\u62df\u3002\n\n\u9898\u5e72\u5c31\u662f\u8ba9\u4f60\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff08feihua\uff09\u3002\n---\n\n**\u4ed4\u7ec6\u8bfb\u9898\uff0c\u5bfb\u627e\u6761\u4ef6**\n\n1.\u53ea\u6709\u4ee5F\u548cE\u5f00\u5934\u7684\u8bed\u53e5\u662f\u6709\u7528\u7684\uff0c\u9700\u8981\u6ee4\u6389\u5176\u4ed6\u7684\u53e5\u5b50\n\n2.F\u5f00\u5934\u7684\u8bed\u53e5\u662f\n\nfor(int (\u53d8\u91cf) = (\u7b2c\u4e00\u4e2a\u6570\u5b57);(\u53d8\u91cf)<=(\u7b2c\u4e8c\u4e2a\u6570\u5b57);(\u53d8\u91cf)++)\n\n3.\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97\uff0c$x>y$\u7b97\u4f5c\u4e0d\u8fdb\u5165\uff0c$x<=y$\u4e14$x$\u548c$y$\u5747\u4e3a\u5e38\u6570\u65f6\u7b97\u4f5c$O(1)$\uff0c\u5728$x<y$\u4e14$y==n$\u65f6\u7b97\u4f5c$O(n)$\n\n4.\u5faa\u73af\u7ed3\u675f\u9500\u6bc1\u53d8\u91cf\uff0c\n\n\u8bed\u6cd5\u9519\u8bef\n\n1.\u4e0d\u80fd\u5339\u914d\uff08\u5c11/\u591a\u62ec\u53f7\uff09\n\n2.\u53d8\u91cf\u540d\u91cd\u590d\uff08\u53ca\u65f6\u5faa\u73af\u4e0d\u8fdb\u5165\u4e5f\u8981\u7b97CE\uff09\n\n\u5224\u65ad\u6761\u4ef6\uff0c\u6a21\u62df\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u9898\u76ee\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u76f8\u7b49\u4e3a$Yes$\u3002\u4e0d\u76f8\u7b49\u4e3a$No$\uff0cCE\u4e3a$ERR$\n\n\u9996\u5148\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u8bfb\u5165\uff0c$getline$\uff0c\u539f\u578b\u662f istream& getline( istream& is, string& str, char delim)\uff0c\u610f\u4e3a\u628a\u8f93\u5165\u6d41\u6254\u5230\u4e00\u4e2astring\u7c7b\u4e2d\uff0c\u9ed8\u8ba4\u7684\u5b9a\u754c\u7b26\u662f\u6362\u884c\u7b26\uff0c\u9519\u8bef\uff0c\u548cEOF\u3002\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5199\u5b9a\u754c\u7b26\uff0c\u8bfb\u5230\u5b9a\u754c\u7b26\u4e4b\u540e\u505c\u6b62\uff0c\u6ce8\u610fwhile(getline(cin,str))\u662f\u4f1a\u6b7b\u5071\u7684\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u8bfb\u4e00\u884c\uff0c\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u8bfb\uff0c\u6211\u4eec\u5f88\u96be\u53bb\u5904\u7406\u63d0\u51fa\u8bed\u53e5\u4e2d\u6211\u4eec\u60f3\u8981\u7684\u6570\u5b57\u3002\u3001\n\n---\n**\u603b\u4f53\u601d\u8def**\n\n\u6211\u4eec\u77e5\u9053\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u6700\u9ad8\u5faa\u73af\uff0c\u90a3\u6211\u4eec\u5c31\u60f3\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u6709\u6548\u7684\u8bed\u53e5\u8fdb\u884c\u8d4b\u503c\uff0c\u5c06\u524d\u62ec\u53f7\u548c\u540e\u62ec\u53f7\u8d4b\u6210\u76f8\u53cd\u7684\u6743\u503c\uff0c\u7136\u540e\u626b\u4e00\u904d\u76f8\u52a0\uff0c\u8fb9\u52a0\u8fb9\u53d6Max\u5c31\u53ef\u4ee5\u7b97\u51fa\u7ed3\u679c\u4e86\n\n---\n**\u5904\u7406\u7ed9\u5b9a\u590d\u6742\u5ea6**\n\n\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u6765\u5904\u7406\uff0c\u9996\u5148\u662f\u9898\u76ee\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5751\u70b9\uff0c\u4e0d\u80fd\u53ea\u8bfb\u6570\u5b57\uff0c\u5426\u5219$O(n)$\u548c$O(1)$\u4f1a\u6df7\u6dc6\u9700\u8981\u591a\u52a0\u4e2a\u53d8\u91cf\u5224\u65ad\u3002\n\n```cpp\ninline void SolveO(string s) {\n\tint length = s.size(),i=0,res = 0;\n\tfor(; (s[i]<'0'||s[i]>'9')&&i<length; i++)if(s[i]=='n')cher = 1;\n\tfor(; (s[i]>='0'&&s[i]<='9')&&i<length; i++)res = res*10+s[i]-'0';\n\tchecker = res;\n\treturn;\n}\n```\n\u4e4b\u540e\u6211\u4eec\u5c31\u5f00\u59cb\u8bfb\u6bcf\u4e2a\u53e5\u5b50\uff0c\u9996\u5148\u5e72\u6389\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u5f00\u5934\u4e0d\u662f$F$\u6216$E$\u662f\u76f4\u63a5$continue$\n\n---\n**\u9884\u5904\u7406\u6240\u6709\u5408\u6cd5\u7684\u8bed\u53e5**\n\n\u4e4b\u540e\u8003\u8651\u7b2c\u4e8c\u4e2a\uff0c\u5982\u679c\u662f$F$\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u5206\u79bb\u51fa\u6765$2$\u4e2a\u5e38\u6570\u3002\u4f46\u662f\u5176\u4e2d\u53ef\u80fd\u4f1a\u662f\u4e00\u4e2a$n$\u548c\u4e00\u4e2a\u6570\u5b57\uff0c\u6216\u8005\u662f$2$\u4e2a$n$\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u53d6\uff0c\u5206\u6bb5\u8bfb\u5165\u6570\u5b57\uff0c\u5982\u679c\u5728\u4e4b\u524d\u8bfb\u5230\u4e86$n$\u6211\u4eec\u5c31\u4e0d\u8bfb\u53d6\u8fd9\u4e2a\u9636\u6bb5\u7684\u6570\u5b57\u3002\n\n```cpp\n\npair<int,int> Solvel(string a) {\n\tint length = a.size(),i = 0,res = 0,x = 0,y = 0;\n\tfor(; (a[i]<'0'||a[i]>'9')&&i<length; i++)if(a[i]=='n') {\n\t\t\ti++;\n\t\t\tx = INF;\n\t\t\tbreak;\n\t\t}\n\tif(!x)\n\t\tfor(; (a[i]>='0'&&a[i]<='9')&&i<length; i++)x = x*10+a[i]-'0';\n\tfor(; (a[i]<'0'||a[i]>'9')&&i<length; i++)if(a[i]=='n') {\n\t\t\ti++;\n\t\t\ty = INF;\n\t\t\tbreak;\n\t\t}\n\tif(!y)\n\t\tfor(; (a[i]>='0'&&a[i]<='9')&&i<length; i++)y = y*10+a[i]-'0';\n\treturn make_pair(x,y);\n}\n```\n\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e86$pair<int,int>$\u53bb\u5b58\u50a8\u4e24\u4e2a\u6570\u503c\uff0c\u8bfb\u5230$n$\u5b58\u4e3aINF\u3002\n\n\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u7167$3$\u89c4\u5219\u8ba1\u7b97\u7cfb\u6570\u4e86\n```cpp\ninline int Solvexs(int x,int y) {\n\tif(x==INF&&y==INF)return 0;\n\tif(x>y)return -INF;\n\tif(x<y) {\n\t\tif(y==INF)return 1;\n\t\telse return 0;\n\t}\n\tif(x==y)return 0;\n}\n```\n\u6211\u4eec\u5c06\u4e0d\u80fd\u8fdb\u5165\u7684\u5faa\u73af\u7684\u6743\u503c\u53d8\u6210-INF\uff0c\u65b9\u4fbf\u6211\u4eec\u4e4b\u540e\u8fdb\u884c\u8ba1\u7b97\u3002\n\n---\n\n**\u540e\u62ec\u53f7\u8bed\u53e5\u7684\u8d4b\u503c**\n\n\u5728\u5b8c\u6210\u4e00\u7cfb\u5217\u9884\u5904\u7406\u4e4b\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u540e\u62ec\u53f7\u7684\u8d4b\u503c\uff0c\u6211\u4eec\u5bf9$F$\u7684\u8054\u7cfb\u7528\u7c7b\u4f3c\u94fe\u8868\u7684\u65b9\u5f0f\u5904\u7406\u4e00\u4e0b\uff0c\u8bbe$pre$\u4e3a\u6700\u8fd1\u7684\u524d\u62ec\u53f7,\u8bbe$last_i$\u4e3a\u524d\u62ec\u53f7$i$\u7684\u4e0a\u4e00\u4e2a\u524d\u62ec\u53f7\u65f6\u8c01\uff0c\u8bbe$us$\u4e3a\u5224\u91cd\u6570\u7ec4\uff0c\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u5904\u7406CE\u7684\u60c5\u51b5.\n\n1.\u62ec\u53f7\u7684\u4e0d\u5339\u914d\uff0c\u53c8\u6709\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\uff0c\u6700\u7b80\u5355\u65f6\u5728\u4f1a\u540e\u524d\u540e\u62ec\u53f7\u662f\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u4e24\u4e2a\u53d8\u91cf\u641e\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u7b2c\u4e8c\u79cd\u6211\u4eec\u5728\u626b\u7684\u65f6\u5019\u53d1\u73b0\u524d\u62ec\u53f7\u7684\u6570\u91cf$<$\u540e\u62ec\u53f7\u7684\u6570\u91cf\u8fd9\u4e2a\u65f6\u5019\u662f\u5fc5\u6b7b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u591a\u51fa\u6765\u7684\u540e\u62ec\u53f7\u65e0\u6cd5\u88ab\u540e\u9762\u7684\u524d\u62ec\u53f7\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u8bed\u53e5\n\n***F*** \u5148\u5224\u91cd\u590d\uff0c\u4e4b\u540e\u66f4\u65b0$last$\u548c$pre$\uff0c$now++$ \uff08now\u4e3a\u524d\u62ec\u53f7\u7684\u6570\u91cf\uff09\n\n***E*** \u5148\u628a\u6700\u8fd1\u7684\u62ec\u53f7\u53d8\u91cf\u9500\u6bc1\uff0c\u5e76\u4e14\u628a\u81ea\u5df1\u8d4b\u6210\u8be5\u524d\u62ec\u53f7\u7684\u6743\u503c\u7684\u76f8\u53cd\u6570\u3002\u4e4b\u540e\u5206\u60c5\u51b5\u66f4\u65b0$pre$\n\n\u5982\u679cnow==ed\uff0c\u4e0b\u6b21\u8981\u5f00\u59cb\u4e8e\u8be5\u5faa\u73af\u5e76\u5217\u7684\u5faa\u73af\uff0c\u8fd9\u662f\u6211\u4eec\u628apre\u8d4b\u62100\n\nelse \u6211\u4eec\u628apre\u8d4b\u6210$last_{pre}$\n```cpp\ninline bool Solveval() {\n\tnoww=edd=0;\n\tint pre = 0;\n\tmemset(last,0,sizeof(last));\n\tmemset(us,0,sizeof(us));\n\tfor(int i=0; i<ln.size(); i++) {\n\t\tif(ln[i].ch!='E'){\n\t\t\tif(us[ln[i].ch]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlast[i] = pre;\n\t\t\tpre = i;\n\t\t\tus[ln[i].ch] = true;\n\t\t\tnoww ++;\n\t\t}\n\t\telse {\n\t\t\tus[ln[pre].ch] = false;\n\t\t\tln[i].val = -ln[pre].val;\n\t\t\tedd++;\n\t\t\tif(noww==edd)pre = 0;\n\t\t\tpre = last[pre];\n\t\t}\n\t\tif(edd>noww){\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(noww!=edd)return false;\n\treturn true;\n}\n```\n\u6211\u4eec\u6109\u5feb\u7684\u5b8c\u6210\u4e86\u6240\u6709\u62ec\u53f7\u7684\u8d4b\u503c\u3002\n\n---\n**\u590d\u6742\u5ea6\u7684\u8ba1\u7b97\u548c\u5224\u6b63\u8bef**\n\n\u5728\u8d4b\u503c\u540e\u6211\u4eec\u76f4\u63a5\u5f00\u626b\u5c31\u884c\u4e86\uff0c\u8fb9\u52a0\u8fb9\u53d6$max$.\u4e4b\u540e\u6211\u4eec\u5904\u7406ans\u4e8e\u7ed9\u5b9a\u590d\u6742\u5ea6\u7684\u5173\u7cfb\u3002\n\n\u4e4b\u524d\u8bf4\u5230\u7684\u6211\u4eec\u533a\u5206$O(1)$\u548c$O(n)$\u591a\u52a0\u4e86\u4e00\u4e2a\u53d8\u91cf\u3002\n\n\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\n\n\u5982\u679c\u6709\u8fd9\u4e2a\u53d8\u91cf\u5fc5\u662f$O(1)$\n\nelse \u6211\u4eec\u5224\u7b49\u5373\u53ef\n\n\u6700\u540eCode\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nint read() {\n\tint w=1,x=0,ch=getchar();\n\tfor(; ch<'0'||ch>'9'; ch=getchar())if(ch=='-')w=-1;\n\tfor(; ch>='0'&&ch<='9'; ch=getchar())x=x*10+ch-'0';\n\treturn x*w;\n}\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1000;\nint n,cher,checker;\ninline void SolveO(string s) {\n\tint length = s.size(),i=0,res = 0;\n\tfor(; (s[i]<'0'||s[i]>'9')&&i<length; i++)if(s[i]=='n')cher = 1;\n\tfor(; (s[i]>='0'&&s[i]<='9')&&i<length; i++)res = res*10+s[i]-'0';\n\tchecker = res;\n\treturn;\n}\npair<int,int> Solvel(string a) {\n\tint length = a.size(),i = 0,res = 0,x = 0,y = 0;\n\tfor(; (a[i]<'0'||a[i]>'9')&&i<length; i++)if(a[i]=='n') {\n\t\t\ti++;\n\t\t\tx = INF;\n\t\t\tbreak;\n\t\t}\n//\tcout<<x<<endl;\n\tif(!x)\n\t\tfor(; (a[i]>='0'&&a[i]<='9')&&i<length; i++)x = x*10+a[i]-'0';\n\tfor(; (a[i]<'0'||a[i]>'9')&&i<length; i++)if(a[i]=='n') {\n\t\t\ti++;\n\t\t\ty = INF;\n\t\t\tbreak;\n\t\t}\n//\tcout<<y<<endl;\n\tif(!y)\n\t\tfor(; (a[i]>='0'&&a[i]<='9')&&i<length; i++)y = y*10+a[i]-'0';\n//\tcout<<\"xs==\"<<x<<\" \"<<y<<endl;\n\treturn make_pair(x,y);\n}\nstruct sen {\n\tchar ch;\n\tint val;\n\tsen(char ch,int val) {\n\t\tthis->ch = ch;\n\t\tthis->val = val;\n\t}\n};\nvector<sen>ln;\ninline int Solvexs(int x,int y) {\n\tif(x==INF&&y==INF)return 0;\n\tif(x>y)return -INF;\n\tif(x<y) {\n\t\tif(y==INF)return 1;\n\t\telse return 0;\n\t}\n\tif(x==y)return 0;\n}\ninline void Init() {\n\tln.clear();\n\tcher = checker = 0;\n\tn = read();\n\tstring s;\n\tcin>>s;\n\tSolveO(s);\n\tgetchar();\n\tfor(int i=1; i<=n; i++) {\n\t\tstring a;\n\t\tgetline(cin,a);\n\t\tif(a[0]!='E'&&a[0]!='F')continue;\n\t\tpair<int,int>x = Solvel(a);\n\t\tint val = INF;\n\t\tif(a[0]=='F')\n\t\t\tval = Solvexs(x.first,x.second);\t\t\n\t\tln.push_back(sen(a[0]=='E'?'E':a[2],val));\n\t}\n\t\n//\tfor(int i=0; i<ln.size(); i++)cout<<ln[i].ch<<\" \"<<ln[i].val<<endl;\n}\nint last[MAXN],us[MAXN],noww,edd;\ninline bool Solveval() {\n\tnoww=edd=0;\n\tint pre = 0;\n\tmemset(last,0,sizeof(last));\n\tmemset(us,0,sizeof(us));\n\tfor(int i=0; i<ln.size(); i++) {\n\t\tif(ln[i].ch!='E'){\n\t\t\tif(us[ln[i].ch]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlast[i] = pre;\n\t\t\tpre = i;\n\t\t\tus[ln[i].ch] = true;\n\t\t\tnoww ++;\n\t\t}\n\t\telse {\n\t\t\tus[ln[pre].ch] = false;\n\t\t\tln[i].val = -ln[pre].val;\n\t\t\tedd++;\n\t\t\tif(noww==edd)pre = 0;\n\t\t\tpre = last[pre];\n\t\t}\n\t\tif(edd>noww){\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(noww!=edd)return false;\n\treturn true;\n}\nvoid Solve() {\n//\tfor(int i=0;i<ln.size();i++)cout<<ln[i].ch<<\" \"<<ln[i].val<<endl;\n\tint now = 0,ans = 0;\n\tfor(int i=0; i<ln.size(); i++) {\n\t\tnow += ln[i].val;\n\t\tans = max(ans,now);\n\t}\n//\tcout<<ans<<endl;\n\tif(cher==0) {\n\t\tif(ans!=0)printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t} else {\n\t\tif(ans==checker)printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n}\nint main() {\n// \tfreopen(\"sjfzd.in\",\"r\",stdin);\n// \tfreopen(\"sjfzd.out\",\"w\",stdout);\n\tint T = read();\n\twhile(T--) {\n\t\tInit();\n\t\tif(Solveval())\n\t\t\tSolve();\n\t\telse printf(\"ERR\\n\");\n//\t\tcout<<endl<<endl<<endl;\n\t}\n\treturn 0;\n}\n```\n\u6700\u540e\u4e2a\u4eba\u7684\u5efa\u8bae\uff0c\u5199\u5927\u6a21\u62df\u662f\u6211\u4eec\u5c3d\u91cf\u628a\u5404\u4e2a\u529f\u80fd\u5206\u5f00\u591a\u5199\u51fd\u6570\uff0c\u8fd9\u6837\u4e0d\u5bb9\u6613\u6df7\u6dc6\u529f\u80fd\u800c\u4e14\u80fd\u4fdd\u6301\u4f60\u7684\u601d\u8def\u662f\u6e05\u6670\u7684\uff0c\u5728\u8c03\u8bd5\u65f6\u6211\u4eec\u6539\u6389\u4e00\u4e2a\u70b9\u4e4b\u540e\u8981\u601d\u8003\u4e00\u4e0b\u4ed6\u5bf9\u5176\u4ed6\u7684\u70b9\u8fd8\u6709\u6ca1\u6709\u5f71\u54cd\uff0c\u65ad\u70b9\u8f93\u51fa\u4e5f\u662f\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u3002\n\n**\u8bf7\u5728\u8111\u5b50\u6e05\u9192\u65f6\u5199\u8fd9\u79cd\u9898\uff0c\u4ee3\u7801\u53ea\u4f9b\u501f\u9274\u4e0d\u5efa\u8bae\u8fd9\u79cd\u7ec3\u7801\u529b\u7684\u9898\u6284\u9898\u89e3**",
        "postTime": 1570664556,
        "uid": 165030,
        "name": "Sweetie_Liu",
        "ccfLevel": 6,
        "title": "P3952 \u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "\u6a21\u62df\u9898\u9996\u5148\u5e94\u8be5\u5148\u7406\u6e05\u601d\u8def\uff0c\u770b\u770b\u9700\u8981\u505a\u54ea\u4e9b\u4e8b\u60c5\u3002\n\n1\u3001\u9996\u5148\u63d0\u9ad8\u7ec4\u9009\u624b\u5e94\u8be5\u6709\u80fd\u529b\u63d0\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u4fe1\u606f\uff0c\u8fd9\u4e00\u9898\u53ef\u80fd\u6709\u4e9b\u9ebb\u70e6\uff0c\u9700\u8981\u63d0\u53d6\u590d\u6742\u5ea6\u7684\u6b21\u65b9\uff0c\u5faa\u73af\u521d\u59cb\u53d8\u91cf\u548c\u7ed3\u675f\u53d8\u91cf\uff0c\u7279\u522b\u5730\uff0c\u5982\u679c\u53d8\u91cf\u662f$n$\uff0c\u8fd4\u56de\u4e00\u4e2a\u5927\u4e8e100\u7684\u6570\u5373\u53ef\u3002\n\n2\u3001\u6211\u4eec\u5148\u628a\u9519\u8bef\u7684\u60c5\u51b5\u7ed9\u5224\u65ad\u4e86\uff1a\n\n(1)\u5176\u5b9e\u56de\u5934\u6765\u60f3\u60f3\uff0c\u5982\u679c\u6570\u636e\u51fa\u73b0\u5728\u67d0\u4e00\u6bb5\u7a0b\u5e8fE\u6bd4F\u591a\uff0c\u8fd9\u662f\u9519\u8bef\u60c5\u51b5\uff0c\u6211\u5e76\u6ca1\u6709\u8003\u8651\uff0c\u5de7\u7684\u662f\uff0c\u5e76\u6ca1\u6709\u8fd9\u6837\u7684\u6570\u636e\u3002\u3002\u3002\u751a\u81f3\u6d1b\u8c37\u7684hack\u6570\u636e\u4e5f\u6ca1\u6709\u3002\u3002\u3002\n\n(2)\u5982\u679cF\u548cE\u7684\u4e2a\u6570\u4e0d\u7b49\u662f\u9519\u7684\uff0c\u8fd9\u4e2a\u4e0d\u7528\u591a\u8bf4\u600e\u4e48\u505a\u4e86\u5427\u3002\u3002\n\n(3)\u5982\u679c\u91cd\u590d\u8c03\u7528\u53d8\u91cf\u5219\u9519\u8bef\uff0c\u8fd9\u4e2a\u600e\u4e48\u529e\uff1f\u65e2\u7136\u53d8\u91cf\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a$vis$\u6570\u7ec4\u8bb0\u5f55\u8be5\u53d8\u91cf\u662f\u5426\u7528\u8fc7\u3002\u90a3\u600e\u6837\u5224\u65ad\u9500\u6bc1\u7684\u53d8\u91cf\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u5f00\u4e00\u4e2a\u6808\u5c31\u53ef\u4ee5\u4e86\uff0c\u9047\u5230F\u5c06\u53d8\u91cf\u5165\u6808\uff0c\u9047\u5230E\u5219\u5c06\u6808\u9876\u53d8\u91cf\u51fa\u6808\uff0c\u518d\u5c06$vis$\u6539\u6210\u4e3a\u4f7f\u7528\u5373\u53ef\u3002\n\n3\u3001\u6211\u4eec\u600e\u6837\u8bb0\u5f55$n$\u7684\u4e2a\u6570\uff1f\u9996\u5148\uff0c\u8bf7\u6ce8\u610f\u5982\u679c\u521d\u59cb\u548c\u7ed3\u675f\u53d8\u91cf\u90fd\u662f$n$\uff0c\u8fd9\u662f$\\Theta(1)$\u7684\u590d\u6742\u5ea6\u3002\u90a3\u4e48\u6392\u9664\u8fd9\u79cd\u60c5\u51b5\uff0c\u9047\u5230$n$\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u6570\u3002\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u65f6\u9047\u5230E\uff0c\u6211\u4eec\u600e\u4e48\u77e5\u9053\u7ed3\u675f\u7684\u662f\u5e26$n$\u7684\u5faa\u73af\u8fd8\u662f\u4e0d\u5e26\u7684\u5462\uff1f\u6211\u4eec\u518d\u5f00\u4e00\u4e2a\u6808\uff0c\u5982\u679c\u662f\u6ee1\u8db3\u53ef\u4ee5\u8ba1\u6570\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u538b\u4e00\u4e2a\u4e1c\u897f\u8fdb\u53bb\uff08\u968f\u4fbf\u4f60\uff0c\u7231\u538b\u5565\u538b\u5565\uff09\uff0c\u4e0d\u53ef\u4ee5\u5c31\u538b\u53e6\u4e00\u4e2a\u4e1c\u897f\u8fdb\u53bb\u3002\u8fd9\u4e2a\u6808\u7684\u6808\u6307\u9488\u548c\u524d\u4e00\u4e2a\u6808\u603b\u662f\u5904\u4e8e\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\uff0c\u6b64\u65f6\u53ef\u4ee5\u8ba1\u6570\u7684\u5faa\u73af\u662f\u5426\u5df2\u7ecf\u7ed3\u675f\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u8981\u628a\u6b21\u6570\u590d\u6742\u5ea6\u51cf\u53bb1\u3002\n\n4\u3001\u521d\u59cb\u53d8\u91cf\u5927\u4e8e\u7ed3\u675f\u53d8\u91cf\u8be5\u600e\u4e48\u529e\uff1f\u8fd9\u79cd\u60c5\u51b5\u663e\u7136\u8fd9\u4e2a\u5faa\u73af\u4e0b\u9762\u5d4c\u5957\u7684\u6240\u6709\u5faa\u73af\u90fd\u4e0d\u80fd\u8d70\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u62ff\u4e00\u4e2a\u53d8\u91cf\uff0c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u52a0\u4e00\uff0c\u7ed3\u675f\u8fd9\u79cd\u60c5\u51b5\u5c31\u51cf\u4e00\uff0c\u7b49\u4e8e0\u6211\u4eec\u518d\u7ee7\u7eed\u3002\u4f46\u662f\u4ec0\u4e48\u65f6\u5019\u51cf1\u5462\uff1f\u8fd9\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u4f60\u4e0b\u9762\u8fd8\u5199\u4e86\u5f88\u591a\u5faa\u73af\uff0c\u4f60\u5f97\u77e5\u9053\u54ea\u4e2aE\u662f\u7ed3\u675f\u8fd9\u4e2a\u73a9\u610f\u7684\u554a\u3002\u6211\u4eec\u5de7\u5999\u7684\u628a\u524d\u9762\u7684\u6808\u548c\u8fd9\u4e2a\u53d8\u91cf\u7ed3\u5408\u4e00\u4e0b\uff0c\u5f53\u524d\u9762\u6808\u6307\u9488\uff0c\u5047\u8bbe\u662f$tot$\uff0c\u548c\u8fd9\u4e2a\u53d8\u91cf\u76f8\u7b49\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf1\u4e86\u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u53ef\u4ee5\u81ea\u5df1\u4e3e\u4e2a\u4f8b\u5b50\u73a9\u4e00\u73a9\u3002\n\n\u8fd94\u70b9\u60f3\u6e05\u695a\uff0c\u4ee3\u7801\u5e94\u8be5\u5c31\u53ef\u4ee5\u51fa\u6765\u4e86\uff0c\u518d\u591a\u6ce8\u610f\u7ec6\u8282\u5373\u53ef\u3002\n\n## Code\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <cstring>\n#include <algorithm>\n#include <map>\n\nusing namespace std;\n\nint sta[105] , t = 0;\n\nbool vis[30];\n\nint read(){\n\tint w = 0 , x = 1;\n\tchar c = getchar();\n\tif(c == 'n') return 200;\n\twhile(c < '0' || c > '9') {if(c == '-') x = -1; c = getchar();}\n\twhile(c >= '0' && c <= '9') {w = w * 10 + (c - '0'); c = getchar();}\n\treturn w * x;\n}\n\nvoid work(){\n\tchar Theta[105] , stack[105][2] , tot = 0;\n\tint err = 0;\n\tmemset(vis , 0 , sizeof(vis));\n\ttot = t = 0;\n\tint L , fsum = 0 , esum = 0 , maxsum = 0 , sum = 0;\n\tscanf(\"%d %s\\n\" , &L , Theta);\n\twhile(L--){\n\t\tchar sen[105];\n\t\tgets(sen);\n\t\tif(sen[0] == 'E'){\n\t\t\tesum++;\n\t\t\tvis[stack[tot][0] - 'a'] = 0;\n\t\t\tif(stack[tot][1] == 'A') if(sum > 0) maxsum = max(maxsum , sum) , sum--;\n\t\t\tif(tot > 0) tot--; if(tot + 1 == t && t > 0) t--;\n\t\t}\n\t\telse{\n\t\t\tfsum++;\n\t\t\tif(vis[sen[2] - 'a']) { err = 1; }\n\t\t\tint a = 0 , b = 0 ,flag = 0;\n\t\t\tfor(int i = 4; i < strlen(sen); i++){\n\t\t\t\tif(flag == 0){\n\t\t\t\t\tif(sen[i] == 'n') { a = 200; flag = 2;}\n\t\t\t\t\telse\n\t\t\t\t\tif(sen[i] < '0' || sen[i] > '9') { flag = 1;}\n\t\t\t\t\telse\n\t\t\t\t\ta = a * 10 + (sen[i] - '0');\n\t\t\t\t\tif(flag == 2) i++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(sen[i] == 'n') { b = 200; }\n\t\t\t\t\telse\n\t\t\t\t\tb = b * 10 + (sen[i] - '0');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(a == 200 && b == 200) a = 1 , b = 1;\n\t\t\tif(a > b) { sta[++t] = 2; continue; }\n\t\t\tif(sta[t] == 2) continue;\n\t\t\tif(b == 200) sum++;\n\t\t\tstack[++tot][0] = sen[2];\n\t\t\tvis[sen[2] - 'a'] = 1;\n\t\t\tif(b == 200) stack[tot][1] = 'A'; else stack[tot][2] = 'B';\n\t\t}\n\t}\n\tif(err == 1 || esum != fsum) {printf(\"ERR\\n\"); return;}\n\tif(Theta[2] == '1' && maxsum == 0) {printf(\"Yes\\n\"); return;}\n\telse{\n\t\tint res = 0;\n\t\tfor(int i = 4; i < strlen(Theta) - 1; i++) res = res * 10 + (Theta[i] - '0');\n\t\tif(res == maxsum) {printf(\"Yes\\n\"); return;}\n\t}\n\tprintf(\"No\\n\");\n\t\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\\n\" , &T);\n\twhile(T--) work();\n\treturn 0;\n}\n\n\n\n```",
        "postTime": 1570200732,
        "uid": 35584,
        "name": "KillerXu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u5148\u4e0a\u63d0\u4ea4\u8bb0\u5f55  \n[32ms 796B](https://www.luogu.org/record/23689785)  \n\u9996\u5148\u6211\u4eec\u77e5\u9053\u6b63\u5e38\u7684\u8ba1\u7b97\u673a\u7684\u7a0b\u5e8f\u8fd0\u884c\u662f\u4e00\u4e2a\u6808\uff08\u4e0d\u77e5\u9053\u7684\u8bf7\u51fa\u95e8\u5de6\u8f6c\u62a5\u4e2a\u73ed\u5b66\u4e60\u8ba1\u7b97\u673a\u57fa\u672c\u539f\u7406\uff09  \n\u7136\u540e\u6211\u4eec\u53ea\u8981\u5f00\u4e00\u4e2a\u6808\uff0c\u5e38\u6570\u7ea7\u5faa\u73af\u538b\u51651,\u6709n\u7684\u5faa\u73af\u538b\u51652\uff08\u4e0d\u5305\u62ec\u4e24\u4e2a\u90fd\u662fn\u7684\uff09\uff0c\u4e0d\u6267\u884c\u7684\u5faa\u73af\u538b\u51650\uff0c\u6808\u9876\u67090\u5c31\u4e0d\u538b  \n\u9047\u5230\u4e00\u4e2aE\u5c31\u5f39\u6808  \n\u538b\u5165\u4e00\u4e2a2\u65f6\u5f53\u524d\u590d\u6742\u5ea6+1\uff0c\u5f39\u52302\u5f53\u524d\u590d\u6742\u5ea6-1  \n\u540d\u5b57\u4e5f\u7528\u76f8\u540c\u65b9\u6cd5\u5904\u7406\uff0c\u53ea\u662f\u6362\u6210vector\uff0c\u65b9\u4fbf\u67e5\u627e  \n\n\n------------\n#### \u63a5\u4e0b\u6765\u9686\u91cd\u4ecb\u7ecd\u7f29\u4ee3\u7801\u795e\u5668\uff0c\u672c\u9898\u89e3\u4e3b\u89d2  \n### \u5b57\u7b26\u4e32\u6d41\uff08stringstream\uff09  \n###### \u9700\u8981sstream\u5e93  \n\u6211\u4eec\u53ea\u8981\u5c06\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u6570\u503c\u6216\u53d8\u91cf\u7528\u6d41\u7684\u5f62\u5f0f\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u6d41\uff0c\u7136\u540e\u518d\u4ee5\u6d41\u7684\u5f62\u5f0f\u8f93\u51fa\u81f3\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u53cd\u8fc7\u6765\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u8fdb\u884c\u5b57\u7b26\u4e32\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u8f6c\u6362  \n\n- \u5b57\u7b26\u4e32\u6d41\u4f7f\u7528\u4e4b\u524d\u9700\u8981.clear()\u6e05\u7a7a  \n```\n#include<bits/stdc++.h>\nusing namespace std;\nstringstream ss;\nvector<int> name;\nint cint(string s)\n{\n\tif(s==\"n\")\n\t\treturn 105;\n\tss.clear();\n\tint ans;\n\tss<<s;\n\tss>>ans;\n\treturn ans;\n}\nint main()\n{\n\tint cas,x,y,l,o,loop,mloop;\n\tstack<int> st;\n\tstring s1,s2;\n\tcin>>cas;\n\twhile(cas--)\n\t{\n\t\to=0;\n\t\tloop=0;\n\t\tmloop=0;\n\t\twhile(!st.empty())\n\t\t\tst.pop();\n\t\tname.clear();\n\t\tdo\n\t\t{\n\t\t\ts1=s2;\n\t\t\tcin>>s2;\n\t\t}while(s2[0]!='O');\n\t\tl=cint(s1);\n\t\tfor(int i=4;i<s2.size()-1;i++)\n\t\t\to=o*10+s2[i]-'0';\n\t\tif(l%2!=0)\n\t\t{\n\t\t\tcout<<\"ERR\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\twhile(l--)\n\t\t{\n\t\t\tcin>>s1;\n\t\t\tif(s1==\"F\")\n\t\t\t{\n\t\t\t\tcin>>s1;\n\t\t\t\tfor(int i=0;i<name.size();i++)\n\t\t\t\t\tif(name[i]==s1[0])\n\t\t\t\t\t{\n\t\t\t\t\t\tmloop=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tname.push_back(s1[0]);\n\t\t\t\tcin>>s1>>s2;\n\t\t\t\tif(mloop==-1)\n\t\t\t\t\tbreak;\n\t\t\t\tx=cint(s1);\n\t\t\t\ty=cint(s2);\n\t\t\t\tif(x<=y&&(st.empty()||st.top()>0))\n\t\t\t\t{\n\t\t\t\t\tif(y==105&&x!=105)\n\t\t\t\t\t{\n\t\t\t\t\t\tst.push(2);\n\t\t\t\t\t\tloop++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tst.push(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tst.push(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!st.empty())\n\t\t\t\t{\n\t\t\t\t\tif(st.top()==2)\n\t\t\t\t\t\tloop--;\n\t\t\t\t\tst.pop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmloop=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!name.empty())\n\t\t\t\t\tname.pop_back();\n\t\t\t}\n\t\t\tmloop=max(mloop,loop);\n\t\t}\n\t\tif(loop!=0||mloop==-1)\n\t\t\tcout<<\"ERR\"<<endl;\n\t\telse if(mloop==o)\n\t\t\tcout<<\"Yes\"<<endl;\n\t\telse\n\t\t\tcout<<\"No\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1567777785,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u540d\u849f\u84bb\uff0c\u7adf\u7136\u6709\u80c6\u91cf\u6253\u5f00[\u8fd9\u9053\u84dd\u9898](https://www.luogu.org/problem/P3952)\uff08\u4e3b\u8981\u662f\u6559\u7ec3\u8ba9\u505a\u7684qwq\uff09  \n\u4e0d\u8fc7\u770b\u9898\u770b\u4e0b\u6765\u6ca1\u6709\u7279\u522b\u96be\u7684\u8bed\u6cd5/\u7b97\u6cd5\u70b9\uff0c\u4e3b\u8981\u662f\u8981\u7ec6\u5fc3\u5730\u6a21\u62df\uff0c\u8003\u8651\u5230\u6bcf\u4e00\u79cd\u60c5\u51b5\u3002  \n\u8f93\u5165\u600e\u4e48\u5904\u7406\u5462\uff1f\u0398$_0$ \u600e\u4e48\u5f97\u5230\u5462\uff1f  \n\u5728\u8f93\u5165\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53ea\u50a8\u5b58string\u7c7b\u578b\u7684\u590d\u6742\u5ea6\u6570\u503c  \n\u4e00\u5c42\u4e00\u5c42\u7684\u5faa\u73af\u5d4c\u5957\u5c31\u53ef\u4ee5\u7528\u6808\u6765\u6a21\u62df\u2014\u2014\u9047\u5230\u201cF\u201d\u5373\u8fdb\u6808\uff0c\u4f46\u662f\u540c\u65f6\u8981\u8bb0\u5f55\u6b64\u65f6\u7684\u8fd9\u4e00\u5c42\u590d\u6742\u5ea6\u589e\u4e0d\u589e\u52a0\uff0c\u8fd9\u4e00\u5c42\u80fd\u4e0d\u80fd\u8fdb\u53bb\uff0c\u7b49\u7b49\u7b49\u7b49\u3002  \n\uff08\u5177\u4f53\u6ce8\u91ca\u4e2d\u6709\u8be6\u7ec6\u89e3\u91ca\uff0c\u5305\u62ec\u6211\u8c03\u8bd5\u65f6\u7684\u8f93\u51fa\u6d4b\u8bd5\u7b49\u7b49\uff09  \n\u6211\u6700\u540e\u7528stringstream\u5c06\u6211\u6c42\u5f97\u5f97int\u7c7b\u578b\u7684\u590d\u6742\u5ea6\u8f6c\u6210\u4e86string\uff0c\u901a\u8fc7\u4ed6\u4e0e\u6700\u521d\u8f93\u5165\u622a\u53d6\u83b7\u5f97\u7684\u5c0f\u660e\u7b97\u7684\u590d\u6742\u5ea6\u8fdb\u884c\u5bf9\u6bd4\uff08\u8fd9\u91cc\u597d\u50cf\u4e0d\u5199\u51fd\u6570\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6211\u6b63\u597d\u6709\u5199\u597d\u7684\u5c31\u590d\u5236\u8fc7\u6765\u4e86\uff09  \n\n\uff08\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u2014\u2014\u5c06\u6700\u521d\u83b7\u5f97\u7684string\u7c7b\u578b\u7684\u590d\u6742\u5ea6\u7528atof\u51fd\u6570\u8f6c\u6210float\u7c7b\u578b\u518d\u6bd4\u8f83\uff09  \natof\u51fd\u6570\u5c06string\u7c7b\u578b\u8f6c\u4e3afloat\u7c7b\u578b\u7684\u683c\u5f0f\uff1a\n```cpp\nstring s = \"12345\";\natof(s.c_str()); //\u5982\u679c\u662f\u4e00\u4e2achar\u7c7b\u578b\u6570\u7ec4\u76f4\u63a5\u653e\u4e0a\u6570\u7ec4\u540d\u5c31\u53ef\u4ee5\u4e86\n```\n\u9898\u76ee\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<string>\n#include<stack>\n#include<map>\n#include<sstream>\n\nusing namespace std;\n\n\n\nstruct state\n{\n    bool k; //\u80fd\u4e0d\u80fd\u8fdb\u53bb \n    bool cs; //\u662f\u4e0d\u662f\u5e38\u6570\u9879 \n    int o;\n    map <char, bool> mi;\n    void ini()\n    {\n        k = true;\n        o = 0;\n        mi.clear();\n        cs = true;\n    }\n};\n\nstack <state> st;\n\nint cmps(string a, string b)\n{\n    if(a.size()>b.size()||(a.size()==b.size()&&a>b)) return 1;\n    if(a.size()==b.size()&&a==b) return 0;\n    return -1;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    for(int di = 0; di < n; di++)\n    {\n        int l;\n        string o0s;\n        cin >> l >> o0s;\n        if(o0s.size() > 4) o0s = o0s.substr(4, o0s.size() - 5);\n        else o0s = \"0\";\n        char s1, s2;\n        string s3, s4;\n        int maxo = 0;\n        bool err = false; //\u5224\u65ad\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef \n        //bool t = true; //\u662f\u5426\u8fdb\u5165F\n        while(!st.empty()) st.pop();\n        for(int i = 0; i < l; i++)\n        {\n            cin >> s1;\n\t\t\tstate F;\n            if(s1 == 'F') //F\u5f00\u59cb \n            {\n                F.ini();\n                if(!st.empty()){\n\t\t\t\t\tF.o = st.top().o;\n\t\t\t\t\tF.mi = st.top().mi;\n\t\t\t\t\tF.k = st.top().k;\n\t\t\t\t}\n                cin >> s2 >> s3 >> s4;\n                if(s3 == \"n\" && s4 != \"n\") //F\u5faa\u73af\u53c2\u6570x\u4e3an \n                {\n                    F.k = false; //x=n>>y \u5faa\u73af\u4e0d\u8fdb\u5165 \n                }\n                if(F.mi[s2] == true) //\u5982\u679ci\u88ab\u4e0a\u5c42F\u5faa\u73af\u7528\u8fc7 \n                {\n                    err = true;\n                    //cout << \"i\u88ab\u4e0a\u5c42F\u5faa\u73af\u7528\u8fc7 \";\n                }\n                F.mi[s2] = true; //\u6807\u8bb0i\u5df2\u7528\u8fc7 \n                if(s4 == \"n\") //y\u4e3an \n                {\t\n\t\t\t\t\tif(s3 != \"n\")\n                    if(F.k != false) //F\u5faa\u73af\u53ef\u8fdb\u5165 \n                    F.o++; //\u8fdb\u5165F\u5faa\u73af\uff0c\u590d\u6742\u5ea6\u589e\u52a0\u4e00\u6b21 \n                }\n                if(s3 != \"n\" && s4 != \"n\" && cmps(s3,s4) == 1) //\u5982\u679cx\u6bd4y\u5927 \n                {\n                    F.k = false; //\u63a5\u4e0b\u6765\u7684F\u5faa\u73af\u4e0d\u8fdb\u5165\n                }\n                st.push(F);\n                //cout << \"PUSH\" << endl;\n            }\n            if(s1 == 'E') //\u7ed3\u675f\u4e0a\u5c42F\u5faa\u73af \n            {\n                if(st.empty()) //\u5982\u679c\u4e0a\u9762\u6ca1\u6709\u5bf9\u5e94\u7684E \n                {\n                    err = true; //\u8bed\u6cd5\u5fc5\u5b9a\u9519\u8bef \n                    //cout << \"\u4e0a\u9762\u6ca1\u6709\u5bf9\u5e94\u7684E \";\n                }\n                else\n                {\n\t\t\t\t\t\n\t\t\t\t\tmaxo = max(maxo, F.o);\n                \tst.pop();\n                \t//cout << \"POP\" << endl;\n            \t}\n            }\n            //cout << \"for end\"  << endl;\n        }\n        if(!st.empty()) //\u5982\u679c\u5728\u6240\u6709\u5faa\u73af\u7ed3\u675f\u540e\u8fd8\u6709\u5269\u4f59\u7684E \n        {\n            err = true;\n            //cout << \"\u5728\u6240\u6709\u5faa\u73af\u7ed3\u675f\u540e\u8fd8\u6709\u5269\u4f59\u7684E\";\n        }\n        if(!err)\n        {\n            stringstream ss;\n            ss << maxo;\n            string os;\n            ss >> os;\n            if(cmps(os, o0s) == 0) cout << \"Yes\";\n            else cout << \"No\";\n        }\n        else cout << \"ERR\"; \n        //cout << endl << \"*********\" << maxo <<  \" \" << o0s << \"*********\";\n        cout<< endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1567689298,
        "uid": 128032,
        "name": "\u706b\u82b1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# **\u6211\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\uff08\u771f\u7684\uff09**\n## \u5176\u5b9ePython3\u505a\u597d\u50cf\u5df2\u7ecf\u5f88\u65b9\u4fbf\u4e86\u53ef\u662f\u8fd8\u662f\u505a\u4e86\u5f88\u4e45\n\u8fd9\u4e2a\u9898\u76ee\u771f\u7684\u770b\u8d77\u6765\u5de8\u7b80\u5355\u5de8\u8f7b\u677e\uff08bushi\uff09\uff0c\u5bf9\u4e8e\u4f7f\u7528python3\u6765\u5199\u7684\u672c\u849f\u84bb\u7adf\u7136\u89c9\u5f97\u53ef\u4ee5\u5b8c\u5168\u65e0\u963b\u788d\u5730\u5c06\u4e4b\u89e3\u51b3\uff08\u662f\u6211\u5929\u771f\u4e86\uff09\u3002\u3002\u3002\n\n\u5728\u5feb\u4e50\u5730\u5199\u5b8c\u4e86\u4e00\u6253\u8f93\u5165\u8f93\u51fa\u7a0b\u5e8f\u4ee5\u540e\u559c\u60a6\u4e4b\u60c5\u6ea2\u4e8e\u8a00\u8868\n\n\u7136\u800c\uff0c\u4e00\u7fa4RE\u548cWA\u544a\u8bc9\u4e86\u6211\uff0c\u771f\u6b63\u81f4\u547d\u7684\u95ee\u9898\u5728\u4e8e\uff1a\n\n\u6211\u6839\u672c\u5c31\u6ca1\u6709\u641e\u61c2**\u65f6\u95f4\u590d\u6742\u5ea6**\u662f\u4ec0\u4e48\u4e1c\u897f\uff08T. T\uff09\n\n------------\n\n\u73b0\u5728\u6765\u603b\u7ed3\u4e00\u4e0b\u672c\u9898\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5230\u5e95\u662f\u6307\u4ec0\u4e48\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u6709O(1)\u548cO(n^w)\u4e24\u79cd\u7c7b\u578b\n\n- \u4e24\u79cd\u590d\u6742\u5ea6\u7531\u5d4c\u5957\u5faa\u73af\u4e2d\uff0c\u6700\u5927\u53ef\u5faa\u73af\u5c42\u6570\u4e2d\u5e26\u6709n\u89c4\u6a21\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u5c42\u6570\u51b3\u5b9a\n\n\u5192\u51fa\u6765\u8bf4\u660e\u4e00\u4e0b\u7b2c\u4e8c\u70b9\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f\uff1a\n\n- \u590d\u6742\u5ea6\u7531**\u53ef\u901a\u8fc7\u7684**\u5d4c\u5957\u5faa\u73af\u5c42\u6570\u51b3\u5b9a\n\n- \u5bf9\u590d\u6742\u5ea6\u6709\u8d21\u732e\u7684\u5faa\u73af\u5177\u6709**n\u89c4\u6a21\u7684**\u5faa\u73af\u6b21\u6570\n\n\u518d\u8ffd\u52a0\u89e3\u91ca\u4e00\u4e0b\u5c31\u662f\uff1a\n\n- \u6709\u591a\u5c11\u5c42\u8fd9\u6837\u7684\u5d4c\u5957\u5faa\u73af\uff0c\u6307\u6570w\u5c31\u662f\u591a\u5c11\n\n- \u6ca1\u6709\u8fd9\u6837\u7684\u5d4c\u5957\u5faa\u73af\uff0c\u6307\u6570\u4e3a0\u5373\u590d\u6742\u5ea6\u4e3aO(n^0)\u5373O(1)\n\n\u4e8e\u662f\u6211\u4eec\u8981\u641e\u6e05\u695a\u7684\u95ee\u9898\u662f\uff1a\u4ec0\u4e48\u6837\u7684\u5faa\u73af\u53ef\u901a\u8fc7\u5e76\u5177\u6709n\u89c4\u6a21\uff1f\n\n------------\n\n### \u53ef\u901a\u8fc7\u6761\u4ef6\u548cn\u89c4\u6a21\u95ee\u9898\n\n\u56de\u987e\u9898\u610f\u5176\u5b9e\u53ef\u901a\u8fc7\u6761\u4ef6\u5f88\u7b80\u5355\u3002\u9898\u76ee\u4e2d\u660e\u786e\u6307\u51fa\uff1a\n\n- n\u662f\u4e00\u4e2a\u8868\u793a\u6570\u636e\u89c4\u6a21\u7684\u53d8\u91cf\uff0c\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u4e2d\u9700\u4fdd\u7559\u8be5\u53d8\u91cf\u800c\u4e0d\u80fd\u5c06\u5176\u89c6\u4e3a\u5e38\u6570\uff0c\u8be5\u6570**\u8fdc\u5927\u4e8e100**\n\n- x,y\u82e5\u4e3a\u6574\u6570\uff0c\u5219**\u5fc5\u5b9a\u5c0f\u4e8e100**\n\n\u4e8e\u662fx,y\u7684\u5206\u5e03\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n- x,y\u5747\u4e3a\u6574\u6570\n\n- x,y\u6709\u4e00\u4e2a\u4e3an\n\n- x,y\u5747\u4e3an\n\n\u7531\u4e8en\u662f\u4e00\u4e2a\u89c4\u6a21\u6570\u503c\uff0cx,y\u5747\u4e3an\u5373x==y\u3002\u90a3\u4e48\u53ef\u901a\u8fc7\u6761\u4ef6\u4fbf\u53ef\u5f52\u7ed3\u4e3a\uff1a\n\n- x,y\u5747\u4e3a\u6574\u6570\u4e14x<=y\n\n- x\u4e3a\u6574\u6570\u4e14y\u4e3an\n\n- x,y\u5747\u4e3an\n\n\u5177\u6709n\u89c4\u6a21\u7684\u5faa\u73af\u5219\u662f\uff1a\n\n- **x\u4e3a\u6574\u6570\u4e14y\u4e3an**\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e09\u79cd\u53ef\u901a\u8fc7\u6761\u4ef6\u4ee5\u53ca\u4e00\u79cdn\u89c4\u6a21\u6761\u4ef6\u505a\u6807\u8bb0\u5373\u53ef\n\n------------\n\n### \u6700\u5927\u5d4c\u5957\u5c42\u6570\u95ee\u9898\n\n\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u88ab\u5404\u4e2a\u5927\u4f6c\u548c\u795e\u7287\u89e3\u91ca\u5f97\u6e05\u6670\u660e\u4e86\u4e86\u3002\u3002\u3002\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5165\u6808\u51fa\u6808\u7684\u95ee\u9898\n\n\u5728python3\u91cc\u9762\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528append\u548cpop\u5b9e\u73b0\u51fa\u5165\u6808\n\n\u90a3\u4e48\u7efc\u5408\u4e0a\u9762\u89e3\u51b3\u7684n\u89c4\u6a21\u95ee\u9898\uff0c\u5c31\u53ef\u4ee5\u5229\u7528**\u4e09\u79cd\u6807\u8bb0**\u6765\u6807\u8bb0**\u4e09\u79cd\u60c5\u51b5**\uff1a\n\n- \u7528\u201cY\u201d\u8868\u793a**\u53ef\u901a\u8fc7\u5e76\u5177\u6709n\u89c4\u6a21\u7684\u5faa\u73af**\n\n- \u7528\u201cV\u201d\u8868\u793a**\u53ef\u901a\u8fc7\u4f46\u4e0d\u5177\u6709n\u89c4\u6a21\u7684\u5faa\u73af**\n\n- \u7528\u201cN\u201d\u8868\u793a**\u4e0d\u53ef\u901a\u8fc7\u7684\u5faa\u73af**\n\np.s.\u201cY\u201d\u201cV\u201d\u201cN\u201d\u4e09\u4e2a\u53ea\u662f\u968f\u4fbf\u7528\u6765\u4f5c\u4e3a\u6807\u8bb0\u7684\u5b57\u6bcd\n\n\u63a5\u4e0b\u6765\u662f\u4e00\u4e9b\u64cd\u4f5c\u6b65\u9aa4\uff1a\n\n1. \u8bfb\u5165\u6570\u636e\n```python\nmatchTimes=int(input()) #\u4ee3\u7801\u7ec4\u6570\nfor i in range(0, matchTimes):\n    line=input().split() #\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\n    lineNum=int(line[0]) #\u8be5\u7ec4\u6570\u636e\u884c\u6570\n    LineList=[] #\u8be5\u7ec4\u6570\u636e\u5217\u8868\n    varList=[] #\u8be5\u7ec4\u6570\u636e\u7684\u53d8\u91cf\u5217\u8868\n    timeComplex=0 #\u590d\u6742\u5ea6\n```\n\n\n2. \u5224\u65ad\u6700\u5927\u5d4c\u5957\u5c42\u6570\n```python\n    for j in range(0,lineNum):\n        newLine=input().split()\n        if newLine[0]==\"F\":\n            if newLine[2].isdigit() and newLine[3]==\"n\":\n                newLine.append(\"Y\") #\u53ef\u901a\u8fc7\u5e76\u5177\u6709n\u89c4\u6a21\u7684\u5faa\u73af\n            elif newLine[2].isdigit() and newLine[3].isdigit():\n                if int(newLine[2])<=int(newLine[3]):\n                    newLine.append(\"V\") #\u53ef\u901a\u8fc7\u4f46\u4e0d\u5177\u6709n\u89c4\u6a21\u7684\u5faa\u73af\n                else:\n                    newLine.append(\"N\") #\u4e0d\u53ef\u901a\u8fc7\u7684\u5faa\u73af\n            elif newLine[2]==\"n\" and newLine[3]==\"n\":\n                newLine.append(\"V\")\n            else:newLine.append(\"N\")\n        LineList.append(newLine) #\u628a\u6dfb\u52a0\u8fc7\u6807\u8bc6\u7684\u6570\u636e\u5b58\u8fdb\u5217\u8868\n```\n\n3. \u5224\u65ad\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef\n```python\n    if lineNum%2!=0:\n        print(\"ERR\") #\u5947\u6570\u884c\u6570\u5fc5\u5b9a\u65e0\u6cd5\u6ee1\u8db3\u6bcf\u4e2aF\u90fd\u6709E\u5339\u914d\n        continue\n\n    FEList=[] #\u5faa\u73af\u6808\n    loopNum=0 #\u50a8\u5b58\u6700\u5927\u7684\u590d\u6742\u5ea6\n    flag=False #\u8bed\u6cd5\u9519\u8bef\u8df3\u51fa\u5faa\u73af\u7684\u6807\u5fd7\n    for k in LineList:\n        if k[0]==\"F\":\n            FEList.append(k[4])\n            if k[1] in varList:\n                flag=True #\u91cd\u590d\u53d8\u91cf\u5224\u5b9a\n                break\n            varList.append(k[1])\n            if \"N\" in FEList:\n                num=FEList[0:FEList.index(\"N\")].count(\"Y\")\n            elif \"Y\" in FEList:\n                num=FEList.count(\"Y\")\n            else:num=0\n            if num > loopNum:\n                loopNum = num\n        elif k[0]==\"E\":\n            if FEList==[]:\n                flag=True\n                break\n            FEList.pop()\n            varList.pop()\n    if FEList!=[] or flag==True:\n        print(\"ERR\") #FE\u4e0d\u914d\u5bf9\u6216\u6709\u91cd\u590d\u53d8\u91cf\u5219\u8df3\u51fa\n        continue\n    else:\n        timeComplex=loopNum #\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u8fdb\u5165\u4e0b\u4e00\u6b65\n```\n4. \u5224\u65ad\u590d\u6742\u5ea6\u662f\u5426\u548c\u9898\u610f\u76f8\u5408\n```python\npredictComplex=0\n    if \"n\" in line[1]:\n        once=re.findall(\"[0-9]\",line[1]) #\u62bd\u51faO(n^w)\u4e2d\u7684\u6570\u5b57\n        once=\"\".join(once) #\u5217\u8868\u8f6c\u5b57\u7b26\u4e32\n        predictComplex=int(once)\n    if predictComplex==timeComplex:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n```\n\n------------\n\n### \u5230\u8fd9\u91cc\u95ee\u9898\u5c31\u5b8c\u7f8e\u89e3\u51b3\u5566\uff01AC\uff01\uff01\n\n\u540e\u7eed\u518d\u63d0\u4e00\u4e9b\u6211\u81ea\u5df1\u72af\u7684\u9519\u8bef\uff1a\n\n- \u5947\u6570\u7279\u5224\u76f4\u63a5\u653e\u5728\u4e86\u7b2c\u4e00\u884c\u8bfb\u53d6\u5b8c\u4e4b\u540e\uff08\u5bfc\u81f4\u51fa\u73b0\u4e86\u4e00\u7ec4\u5197\u4f59\u6570\u636e\uff09\n\n- x,y\u540c\u4e3an\u7684\u60c5\u51b5\u5224\u5b9a\u4e3a\u4e0d\u901a\u8fc7\uff08\u5176\u5b9e\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662fx<y\uff09\n\n- \u4e0d\u5177\u6709n\u89c4\u6a21\u4f46\u53ef\u901a\u8fc7\u7684\u5faa\u73af\u6ca1\u6709\u505a\u51fa\u6807\u8bb0\uff08\u4e5f\u5c31\u662f\u4e00\u5b9a\u8981\u7528\u4e09\u79cd\u6807\u8bb0\uff09\n\n\u6700\u540e\u795d\u5404\u4f4d\u5c0f\u4f19\u4f34\u65e9\u65e5\u6210\u4e3a\u795e\u7287\u554a\uff01\uff01\uff01\uff01\uff01",
        "postTime": 1566134265,
        "uid": 205803,
        "name": "\u9752\u5c9a_\u67ab\u5170\u5c71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011\u6765\u81ea\u51e0\u4e4e\u6ca1\u6709\u641e\u6e05\u695a\u601d\u8def\u7684\u849f\u84bb"
    },
    {
        "content": "### \u6700\u6613\u8bfb\u61c2\u7684\u4ee3\u7801\uff01\n\n\u8fd9\u9053\u9898\u786e\u5b9e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e00\u65e6\u4ee3\u7801\u6574\u7406\u4e0d\u597d\u5c31\u4f1a\u53ef\u8bfb\u6027\u6781\u5dee\uff0c\u975e\u5e38\u5bb9\u6613\u628a\u81ea\u5df1\u7ed5\u8fdb\u53bb\uff01\n\n#### \u5206\u6790\u95ee\u9898\n\n\u8fd9\u9053\u9898\u672c\u8d28\u8fd8\u662f\u5206\u6790\u5faa\u73af\u7684\u590d\u6742\u5ea6\u7ed3\u6784\u5427\uff0c\n\n\u9488\u5bf9\u6bcf\u91cd\u5faa\u73af\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55`\u53d8\u91cf\u540d`,`\u672c\u5c42\u5faa\u73af\u590d\u6742\u5ea6`,`\u5b50\u5faa\u73af\u4e2d\u6700\u5927\u590d\u6742\u5ea6`,`\u672c\u5c42\u5faa\u73af\u662f\u5426\u6267\u884c`\n\n\u4e8e\u662f\u6211\u4eec\u521b\u5efa`Loop`\u7c7b\n\n```cpp\nclass Loop {\npublic:\n    string name;\n    int cpx;\n    int maxSubCpx;\n    bool conduct;\n    Loop() {\n        maxSubCpx = 0;\n    }\n};\n```\n\n\u7136\u540e\uff0c\u5206\u6790\u65f6\u4e3a\u4e86\u6a21\u62df\u89e3\u6790\u8fc7\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u5806\u6808\u6765\u6a21\u62df\uff0c\u901a\u8fc7\u5806\u6808\u6765\u6ce8\u518c\u53d8\u91cf\u540d\uff0c\u68c0\u67e5\u662f\u5426\u91cd\u590d\n\n\u4e8e\u662f\u6211\u4eec\u521b\u5efa`LoopManager`\u7c7b\uff0c\u5305\u542b`\u589e\u52a0\u5faa\u73af`,`\u5220\u9664\u5faa\u73af`\u548c`\u68c0\u67e5\u662f\u5426\u4e3a\u7a7a\u5806\u6808`\u4f9b\u8c03\u7528\n\n\u6bcf\u6b21\u5220\u9664\u5faa\u73af\u65f6\u66f4\u65b0\u4e0b\u4e00\u5c42\u5faa\u73af\u7684\u5b50\u5faa\u73af\u6700\u5927\u590d\u6742\u5ea6\u3002\n\n\u5bf9\u4e86\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\u554a\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf`SYNTAX_ERROR`\u6765\u8bb0\u5f55\uff0c\u4f46\u56e0\u4e3a\u6bcf\u7ec4\u6570\u636e\u8981\u68c0\u67e5\u591a\u4e2a\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u5c06\u5176\u653e\u5728`RunTime`\u7c7b\u4e2d\uff0c\u901a\u8fc7\u6307\u9488\u65b9\u5f0f\u4f9b`LoopManager`\u8c03\u7528\u3002\n\n\u53e6\u5916\u8fd8\u9700\u8981\u6ce8\u610f\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5168\u5c40\u7684\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u624b\u52a8\u6dfb\u52a0\u4e00\u5c42`main`\u5faa\u73af\u538b\u4ed3\u5e95\uff0c\u4fbf\u4e8e\u67e5\u8be2\u5168\u5c40\u590d\u6742\u5ea6\uff08\u5176\u5b50\u5faa\u73af\u6700\u5927\u590d\u6742\u5ea6\u5373\u4e3a\u5168\u5c40\u590d\u6742\u5ea6\uff09\u3002\n\n```cpp\nclass LoopManager {\n    stack<Loop *> loop;\n    set<string> nameManager;\npublic:\n    Loop *main;\n    bool *SYNTAX_ERROR;\n    LoopManager() {\n        main = new Loop();\n        main->name = \"main\";\n        AddLoop(main);\n    }\n    ~LoopManager() {\n        while(!loop.empty()) {\n            delete loop.top();\n            loop.pop();\n        }\n    }\n    void AddLoop(Loop *l) {\n        int f = nameManager.count(l->name);\n        if (f) {\n            *SYNTAX_ERROR = true;\n        } else {\n            nameManager.insert(l->name);\n            loop.push(l);\n        }\n    }\n    void DeleteLoop() {\n        if (Empty()) {\n            //\u9700\u8981\u51fa\u6808\u65f6\u5df2\u7ecf\u4e3a\u7a7a\u5219\u62a5\u9519\n            *SYNTAX_ERROR = true;\n        } else {\n            Loop *l;\n            l = loop.top();\n            int cpx;\n            if (l->conduct) {\n                cpx = l->maxSubCpx + l->cpx;\n            } else {\n                cpx = 0;\n            }\n            nameManager.erase(l->name);\n            loop.pop();\n            delete l;\n\n            //\u7528\u5df2\u5220\u9664\u5faa\u73af\u7684\u590d\u6742\u5ea6\u66f4\u65b0\u4e0b\u5c42\u5faa\u73af\n            l = loop.top();\n            if (cpx > l->maxSubCpx) l->maxSubCpx = cpx;\n        }\n    }\n    bool Empty() {\n        return loop.size() == 1;\n    }\n};\n```\n\n\u6700\u540e\u5462\uff0c\u56e0\u4e3a\u6709\u591a\u4e2a\u7a0b\u5e8f\u9700\u8981\u89e3\u6790\uff0c\u82e5\u662f\u6bcf\u6b21\u7684\u91cd\u7f6e\u5168\u5c40\u53d8\u91cf\u65e2\u5bb9\u6613\u72af\u9519\u4e5f\u4e0d\u4f18\u96c5\uff0c\u4e8e\u662f\u4fbf\u5bf9\u4e8e\u6bcf\u4e2a\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a`RunTime`\u7c7b\uff0c\u8bbe\u7f6e\u597d\u53c2\u6570\u540e\u8c03\u7528\u5176`Parse`\u51fd\u6570\u8fdb\u884c\u89e3\u6790\u3002\n\n\u5bf9\u4e8e\u89e3\u6790`For`\u8bed\u53e5\u65f6\u8fd9\u91cc\u7528\u5230\u4e86\u4e00\u4e2a\u6280\u5de7\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4$n$\u8fdc\u5927\u4e8e$100$\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6781\u5927\u7684\u6570\uff08\u6bd4\u5982$9999$\uff09\u6765\u548c\u6570\u5b57\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5373\u53ef\u5224\u5b9a\u662f\u5426\u4f1a\u6267\u884c\u8be5\u5c42\u5faa\u73af\u3002\n\n```cpp\nclass RunTime {\npublic:\n    //line \u7a0b\u5e8f\u603b\u884c\u6570\n    int line;\n    //cur \u5f53\u524d\u89e3\u6790\u884c\n    int cur;\n    //ctx \u7a0b\u5e8f\u4ee3\u7801\n    vector<string> ctx;\n    bool SYNTAX_ERROR;\n    LoopManager lm;\n    Runtime() {\n        lm.SYNTAX_ERROR = &SYNTAX_ERROR;\n        SYNTAX_ERROR = false;\n        cur = 0;\n    }\n    int ParseCpx() {\n        while (cur < line && !SYNTAX_ERROR) {\n            string s = ctx[cur++];\n            stringstream ss(s);\n            string key;\n            ss >> key;\n            if (key == \"E\") {\n                lm.DeleteLoop();\n            } else if (key == \"F\") {\n                Loop *l = new Loop();\n                string var, a, b;\n                ss >> var >> a >> b;\n                l->name = var;\n                int x = 9999, y = 9999;\n                //tips: std::stoi()\u53ea\u6709c++11\u624d\u80fd\u7528\u54e6\uff0coi\u6807\u51c6\u4e0b\u5e94\u8be5\u53ea\u80fd\u7528atoi\n                if (a != \"n\") x = atoi(a.c_str());\n                if (b != \"n\") y = atoi(b.c_str());\n                l->conduct = x <= y;\n                l->cpx = (a != \"n\") && (b == \"n\");\n                lm.AddLoop(l);\n            }\n        }\n        if (SYNTAX_ERROR || !lm.Empty()) {\n            return -1;\n        } else {\n            return lm.main->maxSubCpx;\n        }\n    }\n\n};\n```\n\u6700\u540e\u5bf9\u4e8e\u6570\u636e\u4e2d\u6240\u7ed9\u590d\u6742\u5ea6\uff08\u5c31\u662f\u90a3\u884c`7 O(n^3)`\uff09\u7684\u89e3\u6790\uff0c\u5f88\u591a\u5c0f\u4f19\u4f34\u4eec\u66b4\u529b\u624b\u6253oi\u98ce\u4ee3\u7801\uff0c\u771f\u7684\u770b\u8d77\u6765\u60e8\u4e0d\u5fcd\u7779\uff0c\u8fd9\u91cc\u4e5f\u4ecb\u7ecd\u4e00\u4e2a\u4f18\u96c5\u7684\u65b9\u6cd5\u54e6XD\u3002\n\nscanf\u7cfb\u5217\uff08`scanf`,`sscanf`,`fscanf`\uff09\u5176\u5b9e\u662f\u53ef\u4ee5\u5e94\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7b80\u5355\u5339\u914d\u7684\uff0c\u4e0b\u9762`%[^0-9]`\u8868\u793a\u8bfb\u53d6\u4e0d\u542b\u6709`0-9`\u5b57\u7b26\u7684\u4e32\u76f4\u5230\u770b\u5230`0-9`\u4e3a\u6b62\u3002\n\n```cpp\nvoid parseInfo(int &n, int &cpx, string s) {\n    char ch[3];\n    sscanf(s.c_str(), \"%d O(%[^0-9]%d)\", &n, ch, &cpx);\n    if (strlen(ch) == 0) {\n        cpx = 0;\n    }\n}\n```\n\n\n\n\u6700\u540e\u9644\u4e0a\u5b8c\u6574\u7684\u4ee3\u7801\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nclass Loop {\npublic:\n    string name;\n    int cpx;\n    int maxSubCpx;\n    bool conduct;\n    Loop() {\n        maxSubCpx = 0;\n    }\n};\nclass LoopManager {\n    stack<Loop *> loop;\n    set<string> nameManager;\npublic:\n    Loop *main;\n    bool *SYNTAX_ERROR;\n    LoopManager() {\n        main = new Loop();\n        main->name = \"main\";\n        AddLoop(main);\n    }\n    ~LoopManager() {\n        while(!loop.empty()) {\n            delete loop.top();\n            loop.pop();\n        }\n    }\n    void AddLoop(Loop *l) {\n        int f = nameManager.count(l->name);\n        if (f) {\n            *SYNTAX_ERROR = true;\n        } else {\n            nameManager.insert(l->name);\n            loop.push(l);\n        }\n    }\n    void DeleteLoop() {\n        if (Empty()) {\n            *SYNTAX_ERROR = true;\n        } else {\n            Loop *l;\n            l = loop.top();\n            int cpx;\n            if (l->conduct) {\n                cpx = l->maxSubCpx + l->cpx;\n            } else {\n                cpx = 0;\n            }\n            nameManager.erase(l->name);\n            loop.pop();\n            delete l;\n\n            l = loop.top();\n            if (cpx > l->maxSubCpx) l->maxSubCpx = cpx;\n        }\n    }\n    bool Empty() {\n        return loop.size() == 1;\n    }\n};\nclass Runtime {\npublic:\n    int line;\n    int cur;\n    vector<string> ctx;\n    bool SYNTAX_ERROR;\n    LoopManager lm;\n    Runtime() {\n        lm.SYNTAX_ERROR = &SYNTAX_ERROR;\n        SYNTAX_ERROR = false;\n        cur = 0;\n    }\n    int ParseCpx() {\n        while (cur < line && !SYNTAX_ERROR) {\n            string s = ctx[cur++];\n            stringstream ss(s);\n            string key;\n            ss >> key;\n            if (key == \"E\") {\n                lm.DeleteLoop();\n            } else if (key == \"F\") {\n                Loop *l = new Loop();\n                string var, a, b;\n                ss >> var >> a >> b;\n                l->name = var;\n                int x = 9999, y = 9999;\n                if (a != \"n\") x = atoi(a.c_str());\n                if (b != \"n\") y = atoi(b.c_str());\n                l->conduct = x <= y;\n                l->cpx = (a != \"n\") && (b == \"n\");\n                lm.AddLoop(l);\n            }\n        }\n        if (SYNTAX_ERROR || !lm.Empty()) {\n            return -1;\n        } else {\n            return lm.main->maxSubCpx;\n        }\n    }\n\n};\n\nvoid parseInfo(int &n, int &cpx, string s) {\n    char ch[3];\n    sscanf(s.c_str(), \"%d O(%[^0-9]%d)\", &n, ch, &cpx);\n    if (strlen(ch) == 0) {\n        cpx = 0;\n    }\n}\n\nint main() {\n    int t;\n    scanf(\"%d\\n\", &t);\n    for (int i = 0; i < t; i++) {\n        Runtime *rt = new Runtime();\n\n        string info;\n        getline(cin, info);\n        int n, cpx;\n        parseInfo(n, cpx, info);\n        \n        rt->line = n;\n        for (int i = 0; i < n; i++) {\n            string s;\n            getline(cin, s);\n            rt->ctx.push_back(s);\n        }\n\n        int res = rt->ParseCpx();\n        if (res < 0) {\n            puts(\"ERR\");\n        } else if (res == cpx) {\n            puts(\"Yes\");\n        } else {\n            puts(\"No\");\n        }\n        delete rt;\n    }\n    return 0;\n}\n```",
        "postTime": 1565924276,
        "uid": 28642,
        "name": "C2H6O",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "~~\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u59cb\u5e72\u6b63\u4e8b\uff1a~~\n\n>emmm...\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u4e2a\u9898\u89e3\uff0c\u7ed9\u70b9\u8d5e\u5457\n\n# P3952\u9898\u89e3\n---\n## \u539f\u521b\uff01\n---\n~~\u6240\u4ee5\u6211\u7279\u610f\u628a\u539f\u521b\u7ed9\u7a81\u51fa\u663e\u793a\u4e86~~\n\n**\u5c0f\u660e\uff1a\u8d76\u7d27\u7ed9\u6211\u95ed\u5634\uff01\uff01\uff01**\n### \u90a3\u54b1\u5c31\u5f00\u59cb\u5427\n---\n>\u9996\u5148\uff0c\u6211\u4eec\u5e94\u5f53\u8bfb\u5165\uff0c\u8fd8\u662f\u5f88\u7b80\u5355\u7684\u3002\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u4f46\u662f\u5982\u4f55\u628a _\u5b57\u7b26\u4e32\u8f6c\u6210\u6574\u6570_ \u8fd8\u662f\u6bd4\u8f83~~\u96be~~\u7b80\u5355\u7684\uff0c\u4f46\u662f\u6211\u6709\u4e00\u79cd\u4e0d\u7528`while`\u5faa\u73af\u7684\u529e\u6cd5\uff0c[\u70b9\u6211](https://www.luogu.org/paste/z84sy5gn)\u5373\u53ef\u3002\n\n>\u63a5\u7740\u662f\u5904\u7406\u5faa\u73af(\u4e0d\u7528\u591a\u8bb2\u4e86\u5427...)\n\n>>\u6ce8:\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u524d\u540e\u52a0\u4e0a\u4e00\u4e2a`O(1)`\u7684\u5faa\u73af\uff0c\u8fd9\u6837\u4e0d\u5f71\u54cd\u5224\u65ad\uff0c\u800c\u4e14\u66f4\u65b9\u4fbf ~~\uff08\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7b2c\u4e00\u6b21\u53ea\u505a\u4e8673\u5206\uff09~~\n\n>\u5faa\u73af\u52064\u79cd\uff1a\uff08\u4e0d\u77e5\u9053x\u548cy\u4ee3\u8868\u4ec0\u4e48\u8bf7\u70b9[\u8fd9\u91cc](https://www.luogu.org/problem/P3952)\uff09\n\n>>`x`\u4e3a\u6570\u5b57\u4e14`y`\u4e3a`n`\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a`O(n)`\n\n>>`x`\u4e3a`n`\u4e14`y`\u4e3a\u6570\u5b57\uff1a\u5faa\u73af\u8fdb\u4e0d\u53bb\n\n>>`x`\u4e3a`n`\u4e14`y`\u4e3a`n`\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a`O(1)`\n\n>>`x`\u4e3a\u6570\u5b57\u4e14`y`\u4e3a\u6570\u5b57\uff1a\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n>>>`x>y`\uff1a\u5faa\u73af\u8fdb\u4e0d\u53bb\n\n>>>`x<=y`\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a`O(1)`\n\n### \u5206\u6790\u5b8c\u6bd5\uff0c\u4e0a\u4ee3\u7801\uff1a\uff08\u7531\u4e8e\u4e0a\u9762\u5206\u6790\u7684~~\u5341\u5206\u900f\u5f7b~~\u4e0d\u591f\u5b8c\u6574\uff0c\u4ee3\u7801\u6ce8\u91ca\u5c31~~\u4e0d~~\u5199\u4e86\uff09\n```cpp\n#include<bits/stdc++.h>\n#define nnpos string::npos\nusing namespace std;\nenum __STATUS    //\u72b6\u6001\n{\n\tYES = 1, NO = 0, ERR = -1\n}\tSTATUS;\nint __T, l, n, w, c[111], d[111], tot;    //tot\u914d\u5408d\u6570\u7ec4\u4f7f\u7528\uff0c\u89c1\u4ee3\u7801\n//c[i]\u662f\u7b2ci\u884c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cd[i]\u662f\u7b2ci\u884c\u5d4c\u5957\u4e86\u51e0\u5c42\nstring t, p[111];    //t\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\uff0cp\u4e3a\u7a0b\u5e8f\nstack<int> s;    //\u6808\uff0c\u5b58\u653eF\u7684\u4e0b\u6807\nbool m[128];    //\u53d8\u91cf\u540d\u6709\u6ca1\u6709\u88ab\u7528\u8fc7\ntemplate<typename TB_, typename TA_>\nTB_ ab(TA_ TA)    //\u8f6c\u6362\u51fd\u6570\n{\n\tstringstream T;\n\tT << TA;\n\tTB_ TB;\n\tT >> TB;\n\treturn TB;\n}\n__STATUS work()    //\u505a\u4e00\u6b21\n{\n\tmemset(c, 0, sizeof(c));\n\tmemset(d, 0, sizeof(d));\n\tmemset(m, 0, sizeof(m));\n\ttot = 1;\n\tp[1] = \"F ? 1 1\";    //\u52a0\u5165\u4e00\u5c42\u5faa\u73af\u65b9\u4fbf\u5904\u7406\n\twhile ( !s.empty() ) s.pop();\n\tscanf(\"%d\", &l);\n\tl += 2;\n\tgetline(cin, t);\n\tif ( t == \"O(1)\" ) w = 0;    //\u8ba1\u7b97w\uff08 O(1)=O(n^0) \uff09\n\telse\n\t{\n\t\tint tmp = t.find(\"^\") + 1;\n\t\tw = ab<int, string>(t.substr(tmp, t.find(\")\") - tmp));\n\t}\n\tfor ( int i = 2 ; i < l ; i++ )\n\t\tgetline(cin, p[i]);\n\tp[l] = \"E\";\n\tfor ( int i = 1 ; i <= l ; i++ )\n\t{\n\t\tif ( p[i][0] == 'E' )\n\t\t{\n\t\t\tif ( s.empty() ) return ERR;    //\u6ca1\u6709\u5faa\u73af\u5339\u914d\u4e86\n\t\t\tint j = s.top(), maxn = 0;\n\t\t\ts.pop();\n\t\t\ttot--;\n\t\t\tm[p[j][2]] = false;\n\t\t\tint tmp = p[j].rfind(\" \");\n\t\t\tstring xx = p[j].substr(4, tmp - 4);\n\t\t\tstring yy = p[j].substr(tmp + 1, nnpos);\n\t\t\tfor ( int k = j + 1 ; k < i ; k++ )    //\u8ba1\u7b97\u5faa\u73af\u4e2d\u7684\u6700\u5927\u503c\n\t\t\t{\n\t\t\t\tif ( d[k] != d[j] + 1 ) continue;\n\t\t\t\tmaxn = maxn > c[k] ? maxn : c[k];\n\t\t\t}\n\t\t\tif ( xx == \"n\" )    //\u6839\u636e\u4e0a\u9762\u7684\u8bf4\u660e\u5904\u7406\u5faa\u73af\n\t\t\t\tif ( yy == \"n\" ) c[j] = maxn;\n\t\t\t\telse c[j] = 0;\n\t\t\telse\n\t\t\t\tif ( yy == \"n\" ) c[j] = maxn + 1;\n\t\t\t\telse\n\t\t\t\t\tif ( ( ab<int, string>(xx) ) > ( ab<int, string>(yy) ) ) c[j] = 0;\n\t\t\t\t\telse c[j] = maxn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( m[p[i][2]] ) return ERR;    //\u7528\u8fc7\u53d8\u91cf\uff08\u672a\u88ab\u9500\u6bc1\uff09\n\t\t\tm[p[i][2]] = true;\n\t\t\ts.push(i);\n\t\t\ttot++;\n\t\t\td[i] = tot;\n\t\t}\n\t}\n\tif ( !s.empty() ) return ERR;    //\u591a\u4f59\u5faa\u73af\u5f00\u5934\n\tif ( c[1] != w ) return NO;    //\u6700\u540e\u7edf\u8ba1\u65f6\uff0c\u53ea\u9700\u7edf\u8ba1\u6700\u5916\u5c42\u5faa\u73af\u5373\u53ef\n\treturn YES;\n}\nint main()\n{\n\tscanf(\"%d\", &__T);\n\tfor ( int _T_ = 1 ; _T_ <= __T ; _T_++ )\n\t{\n\t\tSTATUS = work();\n\t\tswitch (STATUS)\n\t\t{\n\t\t\tcase YES: printf(\"Yes\\n\"); break;\n\t\t\tcase NO : printf(\"No\\n\") ; break;\n\t\t\tcase ERR: printf(\"ERR\\n\"); break;\n\t\t}\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1565877855,
        "uid": 127949,
        "name": "cmk666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952\u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011\u2014\u2014\u539f\u521b"
    },
    {
        "content": "## \u8fd9\u4e2a\u4e1c\u897f\u6709\u70b9\u50cf\u4e00\u4e2a\u7f16\u8bd1\u5668\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u6210\u4e00\u4e2aGCC\uff08\u6ed1\u7a3d\uff09\n\n### \u8fd9\u91cc\u6709\u4e00\u4e2a\u539f\u7406\u56fe\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u4e00\u770b\n\n![](https://s2.ax1x.com/2019/08/10/eLGcM8.jpg)\n\n# \u6ce8\u91ca\u8bb2\u7684\u975e\u5e38\u6e05\u695a\u4e86\uff01\uff01\uff01\n\n```cpp\n//getchar printf scanf putchar\u7b49\u7684\u5934\u6587\u4ef6 \n#include<stdio.h>\n//cin\u4e0ecout\u7684\u5934\u6587\u4ef6 \n#include<iostream>\n//STL\u5bb9\u5668\u5934\u6587\u4ef6 \n#include<vector>\n//string\u7c7b\u5934\u6587\u4ef6 \n#include<string.h>\n//STL\u7b97\u6cd5\u5934\u6587\u4ef6 \n#include<algorithm>\n//C++\u7c7b\u578b\u5224\u65ad\u5934\u6587\u4ef6\uff08isdigit\uff09 \n#include<ctype.h>\nusing namespace std;\n//\u5feb\u8bfb \ninline int read(){    //inline\u5361\u5e38\u6570\u4f18\u5316 \n    register int s=0,f=1;    //register\u5361\u5e38\u6570\u4f18\u5316 \uff0cs\u4e3a\u6570\uff0cf\u4e3a\u6b63\u8d1f\u8bc6\u522b\u7801 \n    register char ch=getchar();    //\u83b7\u53d6\u4e00\u4f4d \n    while(ch<'0'||ch>'9'){    //\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57 \n        if(ch=='-')f=-1;    //\u5982\u679c\u662f\u7b26\u53f7\uff0c\u5219f\u7f6e\u4e3a-1 \n        ch=getchar();    //\u83b7\u53d6\u4e0b\u4e00\u4f4d \n    }\n    while(ch>='0'&&ch<='9'){    //\u5faa\u73af\u83b7\u53d6\u6570\u5b57 \n        s=s*10+ch-'0';    //\u52a0\u5165s\u53d8\u91cf\u4e2d  \u4f8b\u5982\uff1as=15 ch='6' \u7b2c\u4e00\u6b65s=150\uff0c\u7b2c\u4e8c\u6b65s=156 \n        ch=getchar();    //\u83b7\u53d6\u4e0b\u4e00\u4f4d \n    }\n    return s*f;    //\u8fd4\u56de\u65f6\u4e58\u4e0a\u8bc6\u522b\u7801 \n}\n//\u5feb\u5199 \ninline void write(register int x){\n    if(x<0){    //\u5982\u679c\u4e3a\u8d1f\u6570\n        putchar('-');    //\u5219\u8f93\u51fa\u4e00\u4e2a\u8d1f\u53f7 \n        x=-x;    //\u5e76\u5bf9x\u53d6\u53cd\uff0c\u4f7f\u5176\u53ef\u4ee5\u53c2\u4e0e\u4e0b\u9762\u7684\u8fd0\u7b97 \n    }\n    if(x>9)write(x/10);    //\u82e5x\u4e0d\u662f\u4e00\u4f4d\u6570\uff0c\u5219\u9012\u5f52\u8f93\u51fa\u6570\u4f4d \uff08\u524d\u5e8f\u9012\u5f52\uff09 \n    putchar(x%10+'0');   //\u8f93\u51fa \n}\n//\u5b57\u7b26\u4e32\u5206\u5272 \ninline vector<string> split(register string str,register char sgm){\n\t//\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u7ed3\u679c \n\tvector<string> strlst;\n\t//\u4e00\u4e2a\u7f13\u5b58\uff0c\u4e0b\u9762\u7528\u6765\u5b58\u5f53\u524d\u533a\u6bb5\u7684\u5b57\u7b26\u4e32 \n\tregister string tmp;\n\t//\u904d\u5386\u5b57\u7b26\u4e32 \n\tfor(register int i=0;i<str.size();++i){\n\t\tif(str[i]!=sgm){    //\u5982\u679c\u6b64\u5b57\u7b26\u4e0d\u662f\u5206\u9694\u7b26 \n\t\t\ttmp+=str[i];    //\u52a0\u5165\u7f13\u5b58 \n\t\t}else{\n\t\t\tstrlst.push_back(tmp);    //\u628a\u7f13\u5b58\u52a0\u5165\u7b54\u6848 \n\t\t\ttmp=\"\";    //\u7f13\u5b58\u6e05\u7a7a \n\t\t}\n\t}\n\tstrlst.push_back(tmp);    //\u6700\u540e\u4e00\u6bb5\u5728\u5faa\u73af\u7ed3\u675f\u540e\u52a0\u5165 \n\treturn strlst;    //\u8fd4\u56de\u7b54\u6848 \n}\n//\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6570\ninline bool isnum(register string str){\n\tfor(register int i=0;i<str.size();++i){\n\t\t//\u6b64\u5b57\u7b26\u662f\u5426\u662f\u4e00\u4e2a\u6570\u5b57 \n\t\tif(!isdigit(str[i])){\n\t\t\treturn false;    //\u4e0d\u662f\u5219\u8fd4\u56de\u5047 \n\t\t}\n\t}\n\treturn true;    //\u8fd4\u56de\u771f \n}\n//\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57 \ninline int cnvnum(register string str){\n\t//\u7b54\u6848 \n\tregister int num=0;\n\t//\u904d\u5386\u5b57\u7b26\u4e32 \n\tfor(register int i=0;i<str.size();++i){\n\t\t//\u8ddf\u5feb\u8bfb\u4e00\u6837\uff0c\u79fb\u4f4d\u7b97\u7ed3\u679c \n\t\tnum*=10;\n\t\tnum+=str[i]-48;\n\t}\n\t//\u8fd4\u56de\u7b54\u6848 \n\treturn num;\n}\n//\u6570\u5b57\u8f6c\u5b57\u7b26\u4e32 \ninline string cnvstr(register int num){\n\t//\u7b54\u6848 \n\tregister string str;\n\t//\u987a\u5e8f\u5316\u5bb9\u5668 \u5f53queue\uff08\u961f\u5217\uff09\u6765\u7528 \n\tvector<char> format;\n\t//\u62c6\u5206\u6570\u5b57 \n\twhile(num){\n\t\tformat.push_back((num%10)+48);\n\t\tnum/=10;\n\t}\n\t//\u987a\u5e8f\u5316\u6570\u5b57 \n\tfor(register int i=format.size()-1;i>=0;--i){\n\t\t//\u52a0\u5165\u7b54\u6848 \n\t\tstr+=format[i];\n\t}\n\t//\u8fd4\u56de\u7b54\u6848 \n\treturn str;\n}\n//\u4e3b\u51fd\u6570 \nint main(){\n\t//\u8bfb t \n\tint t=read();\n\twhile(t--){\n\t\t//\u8bfb L \n\t\tint L=read();\n\t\tstring predict;\n\t\t//\u8bfb\u9884\u8ba1\u7684\u590d\u6742\u5ea6 \n\t\tcin>>predict;\n\t\t//\u51b3\u65ad\u70b9\u6df1\u5ea6\u7684\u6700\u5927\u503c\uff08\u5faa\u73af\u4e0d\u6267\u884c\u7684\u6700\u5927\u53ef\u7528\u6df1\u5ea6\uff09 \n\t\tconst int INFBF=100;\n\t\t//\u5f00\u5185\u5b58\u6c60 \n\t\tvector<string> mempool;\n\t\t//\u5f00\u903b\u8f91\u6808\uff08\u5b58\u50a8\u52a0\u5165\u6307\u6570\u8fd0\u7b97\u7684\u6df1\u5ea6\uff09 \n\t\tvector<int> plusf;\n\t\t//\u6df1\u5ea6\u8ba1\u7b97\u53d8\u91cf\uff0crmnf\u8868\u793a\u5269\u4f59\u6df1\u5ea6\uff0cbreakf\u8868\u793a\u51b3\u65ad\u70b9\u6df1\u5ea6 \n\t\tint rmnf=0,breakf=INFBF;\n\t\t//\u662f\u5426ERR \n\t\tbool err=0;\n\t\t//\u6307\u6570\u8ba1\u7b97\uff0cindex\u4e3a\u6700\u5927\u6307\u6570\uff0c\u5373Function Proceeds Gradually Time Complexity \u7b80\u79f0FPGTC\n\t\t//ndxtmp\u4e3a\u5f53\u524d\u6307\u6570 \n\t\tint index=0,ndxtmp=0;\n\t\t//\u628apredict\u53d8\u91cf\u8f93\u5165\u540e\u7684\u6b8b\u4f59\u56de\u8f66\u8f93\u5165\u8fdb\u6765\uff0c\u9632\u6b62getline\u53d1\u751fRuntime Error\n\t\tgetchar();\n\t\t//\u5faa\u73afL\u6b21 \n\t\twhile(L--){\n\t\t\t//\u7528\u4e8e\u5b58\u50a8\u4ee3\u7801 \n\t\t\tstring code;\n\t\t\t//\u8f93\u5165\u4e00\u884c\u4ee3\u7801 \uff0c\u5305\u542b\u7a7a\u683c \n\t\t\tgetline(cin,code);\n\t\t\t//\u5982\u679c\u5df2\u7ecf\u53d1\u751f\u9519\u8bef\uff0c\u76f4\u63a5\u7ed3\u675f\u7f16\u8bd1 \n\t\t\tif(err){\n\t\t\t\tcontinue;\n\t\t\t}else if(code.size()==1){    //\u5982\u679ccode\u957f\u5ea6\u7b49\u4e8e1\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4e3a\u5b57\u6bcd'E' \n\t\t\t\tif(rmnf==0){    //\u5982\u679c\u5f53\u524d\u6ca1\u6709\u6df1\u5ea6\uff0c\u5373\u6709\u6548F\u5faa\u73af \n\t\t\t\t\terr=1;    //\u5219\u51fa\u73b0\u9519\u8bef \n\t\t\t\t\tcontinue;    //\u7ed3\u675f\u7f16\u8bd1 \n\t\t\t\t}\n\t\t\t\t//\u5982\u679c\u5f53\u524d\u6df1\u5ea6\u5728\u903b\u8f91\u6808\u4e2d\uff0c\u90a3\u4e48\u51cf\u53bb\u6df1\u5ea6\uff0c\u5f39\u51fa\u6808 \n\t\t\t\tif(count(plusf.begin(),plusf.end(),rmnf)){\n\t\t\t\t\t--ndxtmp;\n\t\t\t\t\tplusf.erase(find(plusf.begin(),plusf.end(),rmnf));\n\t\t\t\t}\n\t\t\t\t//\u6df1\u5ea6\u51cf1 \n\t\t\t\t--rmnf;\n\t\t\t\t//\u4ece\u5185\u5b58\u6c60\u4e2d\u5f39\u51fa\u6700\u540e\u4e00\u4e2a\u5185\u5b58 \n\t\t\t\tmempool.erase(mempool.end()-1);\n\t\t\t}else{    //\u5982\u679c\u957f\u5ea6\u4e0d\u4e3a1\uff0c\u5219\u5fc5\u5b9a\u4e3a\u4ee3\u7801'F' \n\t\t\t\t//\u5206\u5272\u4ee3\u7801\uff0c\u6309\u7a7a\u683c\u5206\u5272 \n\t\t\t\tregister vector<string> cdlst=split(code,' ');\n\t\t\t\t//\u5982\u679c\u6b64\u53d8\u91cf\u540d\u5df2\u7ecf\u5728\u5185\u5b58\u6c60\u4e2d\u5b58\u5728 \n\t\t\t\tif(count(mempool.begin(),mempool.end(),cdlst[1])){ \n\t\t\t\t\terr=1;    //\u53d1\u751f\u9519\u8bef \n\t\t\t\t\tcontinue;    //\u7f16\u8bd1\u7ed3\u675f \n\t\t\t\t}\n\t\t\t\t//\u6df1\u5ea6\u52a01 \n\t\t\t\t++rmnf;\n\t\t\t\t//\u5f80\u5185\u5b58\u6c60\u4e2d\u63a8\u5165\u5185\u5b58 \n\t\t\t\tmempool.push_back(cdlst[1]);\n\t\t\t\t//\u8d77\u59cb\u5b57\u7b26\u4e32x\n\t\t\t\tstring bgn=cdlst[2];\n\t\t\t\t//\u7ed3\u675f\u5b57\u7b26\u4e32y\n\t\t\t\tstring nd=cdlst[3];\n\t\t\t\tbool bgnIs,ndIs;\n\t\t\t\t//\u8ba1\u7b97x\u548cy\u662f\u5426\u662f\u6570\u5b57 \n\t\t\t\tbgnIs=isnum(bgn);\n\t\t\t\tndIs=isnum(nd);\n\t\t\t\t//\u5982\u679c\u6df1\u5ea6\u5927\u4e8e\u51b3\u65ad\u70b9\uff0c\u5219\u5ffd\u7565\u6b64\u5c42\u5faa\u73af \n\t\t\t\tif(rmnf>breakf){\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tbreakf=INFBF;    //\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e\u51b3\u65ad\u70b9\uff0c\u5219\u7ef4\u62a4\u51b3\u65ad\u70b9\u4e3aINF \n\t\t\t\t}\n\t\t\t\tif(bgnIs&&ndIs){    //\u5982\u679cx\u4e0ey\u5747\u4e3a\u6570\u5b57 \n\t\t\t\t\tif(cnvnum(bgn)>cnvnum(nd)){    //\u5982\u679cx>y\uff0c\u5219\u6b64\u5faa\u73af\u4e0d\u6267\u884c \n\t\t\t\t\t\tbreakf=rmnf;    //\u51b3\u65ad\u70b9\u8bbe\u4e3a\u6b64\u5904 \n\t\t\t\t\t}\n\t\t\t\t}else if(bgnIs&&(!ndIs)){//\u5982\u679cx\u4e3a\u6570\u5b57\uff0cy\u4e3a\u53d8\u91cf \n\t\t\t\t\t++ndxtmp;    //\u6307\u6570\u7f13\u5b58\u52a01 \n\t\t\t\t\tindex=max(index,ndxtmp);    //\u5c1d\u8bd5\u66f4\u65b0\u6307\u6570\u6700\u5927\u503c \n\t\t\t\t\tplusf.push_back(rmnf);    //\u628a\u6df1\u5ea6\u4fe1\u606f\u8bb0\u5f55\u8fdb\u903b\u8f91\u6808 \n\t\t\t\t}else if((!bgnIs)&&ndIs){    //\u5982\u679cx\u4e3a\u5b57\u6bcd\uff0cy\u4e3a\u6570\u5b57 \n\t\t\t\t\tbreakf=rmnf;    //\u5219x\u5fc5\u5b9a\u5927\u4e8ey\uff0c\u5219\u6b64\u5faa\u73af\u4e0d\u6267\u884c\uff0c\u5e76\u5c06\u51b3\u65ad\u70b9\u8bbe\u4e3a\u6b64\u5904 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//\u5982\u679c\u4ee3\u7801\u7ed3\u675f\u540e\u6df1\u5ea6\u6ca1\u6709\u6e05\u96f6\uff0c\u90a3\u4e48\u8868\u793aF\u7684\u6570\u91cf>E \n\t\tif(rmnf!=0){\n\t\t\t//\u5f15\u53d1err \n\t\t\terr=1;\n\t\t}\n\t\t//\u5982\u679c\u9519\u8bef\uff0c\u8f93\u51faERR \n\t\tif(err){\n\t\t\tprintf(\"ERR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\t//\u5982\u679c\u662f\u5e38\u6570\u7ea7\uff0c\u5373\u6307\u6570\u4e3a0 \n\t\tif(index==0){\n\t\t\t//\u5224\u65ad\u9884\u6d4b\u662f\u5426\u6b63\u786e \n\t\t\tif(predict==\"O(1)\"){\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t}else{    //\u5982\u679c\u662f\u6307\u6570\u7ea7\n\t\t\t//\u5224\u65ad\u9884\u6d4b\u662f\u5426\u6b63\u786e \n\t\t\tif(predict==\"O(n^\"+cnvstr(index)+\")\"){\n\t\t\t\tprintf(\"Yes\\n\");\n\t\t\t}else{\n\t\t\t\tprintf(\"No\\n\");\n\t\t\t}\n\t\t}\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1565406999,
        "uid": 113852,
        "name": "daqirui",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u5728\u7ebf\u6c42\u89e3\u3002 \u5229\u7528stack\u8bb0\u5f55\u5d4c\u5957\u5173\u7cfb\u3002\u6bcf\u8bfb\u5230E\u5f39\u51fa\u3002\n\nmap<char,vector<int> > Count\u8bb0\u5f55\u5d4c\u5957\u5173\u7cfb\u4e2d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002Count['x'][0]\u662f\u5f53\u524d\u7684\uff0cCount['x'][1]...\u662f\u5176\u5d4c\u5957\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u6700\u540e\u8bfb\u5230E\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u4f1a\u904d\u5386\u5d4c\u5957\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5f97\u5230max,\u7136\u540e\u6839\u636e\u5f53\u524d\u590d\u6742\u5ea6\u60c5\u51b5\u9009\u62e9\u4e0eCount[][0]\u76f8\u52a0\u6216\u76f4\u63a5\u7f6e0\uff08\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff09\u7136\u540e\u8fd4\u56de\u5230\u7236\u4eb2\u8282\u70b9\uff08\u6808\u4e2d\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff09\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\n\n\u521d\u59cb\u7684\u65f6\u5019\u6808\u548cmap\u90fd\u538b\u5165'n'\uff0c\u4e3a\u4e86\u6700\u540e\u6536\u96c6\u7ed3\u679c\uff0c\u56e0\u4e3a\u53d8\u91cf\u4e0d\u53ef\u80fd\u662f'n'\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n\u9047\u5230\u7684\u5751\uff1a\n\n\u8bfbchar\u578b\u8bfb\u5230\u7a7a\u683c\n\n\u5bf9\u4e8e\u5faa\u73af\u7684\u5224\u65ad\uff1a\u90fd\u4e3an\u6216\u8005x < y\u65f6\uff08\u5e94\u89c6\u4e3a\u5e38\u6570\uff09\uff1bx > y \u6216 x = n\u65f6\uff08\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff09\uff1b\n\nERR:\u9700\u8981\u8003\u8651\u5230E\u5c11\u548cE\u591a\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6808\u7684\u60c5\u51b5\u5224\u65ad\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n  \n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdio>\n#include<stack>\n#include<map>\nusing namespace std;\n\nint main(){\n    int n;\n    scanf(\"%d\",&n); //\u9898\u76ee\u6570\n    while(n--){\n        bool flag = true;\n        int num = 0;\n        char comp[20];\n        scanf(\"%d O(%s)\",&num,comp);\n        //num\u884c\u6570\n        //comp\u4ee3\u7801\n        for(int i=0;i<sizeof(comp);i++){\n            if(comp[i]==')'){\n                comp[i] = '\\0';\n                break;\n            }\n        }\n        // printf(\"num: %d string:%s\\n\",num,comp);\n\n        stack<char> Sta;\n        Sta.push('n');\n\n        map<char,vector<int> > Count;\n\n        Count['n'].push_back(0);\n\n        for(int line=0;line<num;line++){\n            char Token;\n            Token = getchar();\n            while(Token==' ' || Token == '\\n') Token=getchar();\n            // printf(\"Token char:%c\\n\",Token);\n\n            if(Token=='F') {\n                //printf(\"This!\");\n                char ch;\n                getchar();\n                char x1[10],x2[10];\n                scanf(\"%c %s %s\",&ch,x1,x2);\n                // cout << \"ch \" << ch << \" \" << string(x1) << \" \" << string(x2) << endl;\n                if(Count.find(ch)!=Count.end()) {\n                    //printf(\"flag:%d\",flag==true);\n                    flag = false;\n                }\n                Sta.push(ch);\n                Count[ch].push_back(0);\n                //\u5982\u4f55\u8ba1\u7b97\n                if(x1[0]=='n' && x2[0]=='n') Count[ch][0] = 0;\n                else if(x1[0]=='n' && x2[0]!='n') Count[ch][0] = -1;\n                else if(x2[0] =='n') Count[ch][0] += 1;\n                else if(x2[0]!='n'){\n                    int sum1 = 0;\n                    int sum2 = 0;\n                    for(int k = 0; x1[k]!='\\0';k++) sum1 = 10 * sum1 + x1[k]-'0';\n                    for(int k = 0; x2[k]!='\\0';k++) sum2 = 10 * sum2 + x2[k]-'0';\n                    // printf(\"sum1:%d sum2:%d\\n\",sum1,sum2);\n                    if(sum1<sum2) Count[ch][0] = 0;\n                    else Count[ch][0] = -1; \n                } \n\n                //printf(\"Exit!\\n\");\n\n            }else if(flag){\n\n                char temp = Sta.top();\n                if(temp=='n') {\n                    flag = false;\n                    continue;\n                }\n                // printf(\"Enter E:temp:%c\\n\",temp);\n                int maxchild = 0;\n                //printf(\"maxchild:%d\\n\",maxchild);\n                for(int j = 1; j < Count[temp].size();j++){\n                    if(maxchild < Count[temp][j]) maxchild = Count[temp][j];\n                }\n                if(Count[temp][0]==-1) maxchild = 0;\n                else maxchild += Count[temp][0];\n                Sta.pop();                \n                Count.erase(temp);\n                char temp1 = Sta.top();\n                Count[temp1].push_back(maxchild);\n                // printf(\"Char temp:%c Char temp1:%c maxchild:%d\\n\",temp,temp1,maxchild);\n            }\n\n        }\n        // printf(\"E\\n\");\n        if(!flag) printf(\"ERR\\n\");\n        else if(Count.size()!=1) printf(\"ERR\\n\");\n        else{\n            int max = 0;\n            for(int j = 1; j < Count['n'].size();j++){\n                if(max<Count['n'][j]) max = Count['n'][j];\n            }\n            // printf(\"max:%d\\n\",max);\n            if(max==0 && comp[0]=='1') printf(\"Yes\\n\");\n            else if(max==0 && comp[0]!='1' || comp[0]=='1') printf(\"No\\n\");\n            else{\n                int sum = 0;\n                for(int j = 2;j<sizeof(comp) && comp[j]!='\\0';j++){\n\n                    sum = 10 * sum + comp[j]-'0';\n                }\n                // printf(\"sum:%d\\n\",sum);\n                if(sum != max) printf(\"No\\n\");\n                else printf(\"Yes\\n\");\n            }\n        }\n\n    }\n    return 0;\n}\n                                             \n```",
        "postTime": 1565345052,
        "uid": 216013,
        "name": "\u6768\u65f6\u591c",
        "ccfLevel": 0,
        "title": "\u4ea4\u53c9\u6a21\u62df-P3952 \u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "# [P3952 \u65f6\u95f4\u590d\u6742\u5ea6](https://www.luogu.org/problemnew/show/P3952)\n\u8fd9\u9898\u8c03\u4e86\u6211\u597d\u4e45\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\n\n1. \u4e3b\u8981\u662f\u7528\u4e00\u4e2a\u6808(stack)\u5b9e\u73b0\uff0c\u9047\u5230 F \u5c31\u5c06\u5faa\u73af\u7684\u53c2\u6570\u8fdb\u6808\uff0c\u9047\u5230 E \u5c31\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808  \n2. \u5faa\u73af\u53d8\u91cf\u7528stl\u4e2d\u7684\u96c6\u5408(set)\u8bb0\u5f55\uff0c\u5229\u7528set\u7684\u5143\u7d20\u552f\u4e00\u6027  ~~STL\u5927\u6cd5\u597d~~  \n3. \u5982\u4f55\u8ba1\u7b97\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1f  \n   \u56e0\u4e3a\u8f93\u5165\u4fdd\u8bc1\u590d\u6742\u5ea6\u53ea\u6709O(1)\u548cO(n^w) \u4e24\u79cd\u7c7b\u578b\uff0c\u6240\u4ee5\u53ea\u8981\u8bb0\u4e0b\u6307\u6570\u5c31\u884c\u4e86\uff08\u6307\u6570\u4e3a0\u5373\u662fO(1)\uff09  \n   \u4e3a\u4e86\u7b97\u51fa\u6b64\u7c7b\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\uff1a  \n   - \u7528\u4e00\u4e2abool\u6570\u7ec4\u8bb0\u4e0b\u7b2c\u51e0\u5c42\u5faa\u73af\u662f\u5426\u8d21\u732e\u590d\u6742\u5ea6  \n   - \u5982\u679c\u4e00\u5c42\u5faa\u73af\u8d21\u732e\u590d\u6742\u5ea6\uff0c\u90a3\u4e48index_tmp++\uff0ccontribution[\u5f53\u524d\u5faa\u73af\u5c42\u6570]=true  \n   - \u9047\u5230 E \u65f6,\u5c06\u5f53\u524d\u6307\u6570\u4e0e\u6700\u5927\u6307\u6570\u53d6\u6700\u5927\u503c\uff0c\u5982\u679c\u6b64\u5c42\u5faa\u73af\u8d21\u732e\u590d\u6742\u5ea6\uff0c\u5219\u5c06index_tmp--  \n\u53ef\u4ee5\u62ff\u8fd9\u4e2a\u4f8b\u5b50\u6a21\u62df\u4e00\u4e0b\n```\nF x 1 n\nF y 1 n\nE\nF i 1 n\nF j 1 n\nE \nE\nE\n```  \n\u663e\u7136\u590d\u6742\u5ea6\u4e3aO\uff08n^3\uff09  \n4. \u5982\u679c\u9047\u5230\u4e0d\u8fd0\u884c\u7684\u5faa\u73af\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\uff08notdo\uff09\u8bb0\u4e0b\u8be5\u5faa\u73af\u5c42\u6570\uff0c\u8fdb\u5165\u5185\u5c42\u5faa\u73af\u65f6\u53ea\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\uff0c\u76f4\u5230\u518d\u6b21\u56de\u5230\u8fd9\u5c42\u5c06notdo\u56de\u96f6\n  \n5. \u5982\u679c\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef\uff0c\u7528\u4e00\u4e2abool\u53d8\u91cf\uff08flag\uff09\u8bb0\u4e3afalse\uff0c\u4e4b\u540e\u5c31\u53ea\u8bfb\u5165\u4e0d\u8fdb\u884c\u64cd\u4f5c\u4e86  \n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{               //\u5faa\u73af\u53c2\u6570\u7684\u7ed3\u6784\u4f53\uff0c\u5373\u662f\u6808\u7684\u5143\u7d20\n\tstring var,st,ed;\n};\nstack<node> s;             //STL\u5927\u6cd5\u597d\uff01\nset<string> var_set;\t   //\u5faa\u73af\u53d8\u91cf\u7684\u96c6\u5408\nint t,line,index_tmp,index_max,index_que,notdo;\n//\u95ee\u9898\u6570\uff0c\u884c\u6570\uff0c\u5f53\u524d\u6307\u6570\uff0c\u6700\u5927\u6307\u6570\uff0c\u95ee\u9898\u6240\u7ed9\u6307\u6570,\nbool flag,contribution[200];\nstring timeo,tmp1,tmp2,tmp3,tmp4;//\u8f93\u5165\u4e34\u65f6\u53d8\u91cf\ninline int max(int x,int y){ return x>y?x:y;}\nint get_index(string x);   //\u53d6\u51fa\u95ee\u9898\u4e2d\u7684\u6307\u6570\nint string_to_int(string x);//\u5c06string\u8f6c\u5316\u6210int\nint main(){\n\tios::sync_with_stdio(false);//\u52a0\u5febcin\uff0ccout\n\tcin>>t;\n\twhile(t--){\n        //\u521d\u59cb\u5316\n\t\tnotdo=0;\n\t\tindex_max=0;\n\t\tindex_tmp=0;\n\t\tflag=true;\n        memset(contribution,false,sizeof(contribution));\n\t\twhile(!s.empty()) s.pop();\n\t\tvar_set.clear();\n\t\tcin>>line>>timeo;\n        \n\t\twhile(line--){\n\t\t\tcin>>tmp1;\n\t\t\tif(tmp1==\"F\"){\n\t\t\t\tcin>>tmp2>>tmp3>>tmp4;\n\t\t\t\tif(flag){\n\t\t\t\t\ts.push((node){tmp2,tmp3,tmp4});\n\t\t\t\t\tif(var_set.count(tmp2)==1){  //\u5982\u679c\u67d0\u53d8\u91cf\u5df2\u7ecf\u7528\u8fc7\n\t\t\t\t\t\tflag=false;\n                        continue;      \n\t\t\t\t\t}\n\t\t\t\t\telse var_set.insert(tmp2);  //\u5426\u5219\u52a0\u5165set\n\t\t\t\t\tif(notdo==0){\n\t\t\t\t\t\tif(tmp3==\"n\"){\n\t\t\t\t\t\t\tif(tmp4!=\"n\"){      //\u5982\u679cstart>end\n\t\t\t\t\t\t\t\tnotdo=s.size(); //\u6808\u7684\u5143\u7d20\u4e2a\u6570\u5373\u4e3a\u5faa\u73af\u5c42\u6570\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(tmp4==\"n\"){\n\t\t\t\t\t\t\t++index_tmp;\n\t\t\t\t\t\t\tcontribution[s.size()]=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(string_to_int(tmp3)>string_to_int(tmp4)){   //\u5982\u679cstart>end\n\t\t\t\t\t\t\tnotdo=s.size();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(tmp1==\"E\" && flag){\n\t\t\t\tif(s.empty()){\n\t\t\t\t\tflag=false;\n                    continue;        //\u8fd9\u91cc\u4e00\u5b9a\u8981\u7ee7\u7eed\u5faa\u73af\uff0c\u9632\u6b62\u5bf9\u7a7a\u6808\u8fdb\u884c\u64cd\u4f5c\n\t\t\t\t}\n\t\t\t\tindex_max=max(index_max,index_tmp);\n\t\t\t\tif(contribution[s.size()]){\n\t\t\t\t\t--index_tmp;\n\t\t\t\t\tcontribution[s.size()]=false;\n\t\t\t\t} \n\t\t\t\tif(s.size()==notdo) notdo=0;\n\t\t\t\tvar_set.erase(s.top().var);    //\u9500\u6bc1\u5faa\u73af\u53d8\u91cf\n\t\t\t\ts.pop();\n\t\t\t}\n\t\t}\n\t\tif(!s.empty() || !flag) cout<<\"ERR\"<<endl;//\u5982\u679c\u4e0d\u662f\u7a7a\u6808\u4ee3\u8868E\u591a\u4e86\n\t\telse{\n\t\t\tindex_que=get_index(timeo);\n\t\t\tif(index_max==index_que) cout<<\"Yes\"<<endl;\n\t\t\telse cout<<\"No\"<<endl;\n\t\t}\n\t}\t\n\treturn 0;\n}\nint get_index(string x){     //\u5229\u7528\u590d\u6742\u5ea6\u8868\u793a\u5f62\u5f0f\u662f\u56fa\u5b9a\u7684\n\tstring tmp=\"\";\n\tif(x[2]=='1') return 0;\n\telse{\n\t\tfor(int i=4;i<x.length()-1;++i){\n\t\t\ttmp+=x[i];\n\t\t}\n\t\treturn string_to_int(tmp);;\n\t}\n}\nint string_to_int(string x){  //string\u8f6cint\n\tstringstream ss;\n\tss<<x;\n\tint ret;\n\tss>>ret;\n\treturn ret;\n}\n```",
        "postTime": 1563969006,
        "uid": 111121,
        "name": "innerway",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "**\u524d\u8bb0**\uff1a\u8fd9\u9053\u9898\u5199\u5b8c\u6211\u6df1\u6709\u611f\u89e6\uff0c\u8c03\u4e86\u6211\u5f88\u957f\u65f6\u95f4\uff0c\u597d\u6709\u6210\u5c31\u611f\u554aqwq\n\n**1.\u8bfb\u5165** \n\n\u8fd9\u9898\u8bfb\u5165\u5341\u5206\u5173\u952e\uff0c\u4f46\u4e5f\u4e0d\u662f\u5341\u5206\u7e41\u7410\n\n\u6211\u4eec\u7528```char[]```\u8bfb\u5165\u5b57\u7b26\u4e32\n\n\u5148\u5904\u7406\u5c0f\u660e\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\n\n\u7528```ti```\u8bb0\u5f55\u5c0f\u660e\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^{ti})$\n\n```ans```\u8bb0\u5f55\u8ba1\u7b97\u5f97\u5230\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^{ans})$\n\n\u5982\u679c\u8bfb\u5165\u4e3a```O(1)    ti=0```\n\n\u5426\u5219\u6211\u4eec\u627e\u5230```^```\u548c```)```\n\n\u5904\u7406\u51fa\u5728\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e4b\u95f4\u7684\u6570\n\ncode:\n\n```\nrd(n);scanf(\"%s\",T);\nint p1,p2;\nif(!strcmp(T,\"O(1)\"))ti=0;//\u5224\u65ad\u662f\u5426\u4e3aO(1)\nelse \n{\n    int l=strlen(T);\n    for(int i=0;i<l;i++)\n        if(T[i]=='^')p1=i;\n\telse if(T[i]==')')p2=i;//\u627e\u51fa\u90a3\u4e24\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\n    ti=get_num(p1+1,p2-1);//\u6c42\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\n}\n```\n\n\u5904\u7406\u5b8c\u590d\u6742\u5ea6\u540e\uff0c\u6211\u4eec\u628a\u6240\u6709\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5168\u5b58\u4e0b\u6765\n\n\u4e00\u5f00\u59cb\u6211\u60f3\u5728\u7ebf\u5904\u7406\uff0c\u4f46\u6709\u53ef\u80fd\u5728\u4e2d\u9014\u9000\u51fa\n\ncode:\n\n```\nfor(int i=1;i<=n;i++)\n{\n    scanf(\"%s\",opt[i]);\n    if(opt[i][0]=='F')scanf(\"%s%s%s\",c[i],x[i],y[i]);\n}\n```\n\n**2.\u8ba1\u7b97**\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u6808\u53bb\u7ef4\u62a4\u6240\u6709\u7684\u5faa\u73af\u64cd\u4f5c\n\n\u5f53\u538b\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u6211\u4eec\u8ba1\u7b97\u5f53\u524d\u7684\u4ef7\u503c\n\n\u6211\u4eec\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u8bb0\u4f5c$x$\u548c$y$\n\n\u5206\u51e0\u7c7b\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n$1.x=n$ $y=n$  $O(1)$\n\n$2.x=n$ $y$\u4e3a\u5e38\u6570  $O(-1)$\n\n$3.x$\u4e3a\u5e38\u6570 $y=n$ $O(n)$\n\n$4.x$\u4e3a\u5e38\u6570 $y$\u4e5f\u4e3a\u5e38\u6570\n\n\u5982\u679c$x>y$ $O(-1)$\n\n\u5426\u5219 $O(1)$\n\n\u5728\u538b\u5165\u65f6\uff0c\u6211\u4eec\u628a\u5f53\u524d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u4e4b\u524d\u7684$mix$\u4e00\u4e0b\n\ncode:\n\n```\nfor(int i=1;i<=n;i++)\n\tif(opt[i][0]=='F')\n\t{\n\t\tif(vis[c[i][0]-'a']){cout<<\"ERR\"<<endl;return ;}\n\t\tvis[c[i][0]-'a']++;\n\t\tint xx=to_num(x[i]),yy=to_num(y[i]);\n\t\tif(s.top().x==-1){s.push(node{c[i][0],-1});continue;}\n\t\tif(xx==-1)\n\t\tif(yy==-1)s.push(node{c[i][0],s.top().x});\n\t\telse s.push(node{c[i][0],-1});\n\t\telse if(yy==-1)s.push(node{c[i][0],s.top().x+1});\n\t\telse if(xx>yy)s.push(node{c[i][0],-1});\n\t\telse s.push(node{c[i][0],s.top().x});\n\t}\n```\n\n\u5f39\u51fa\u65f6\u5904\u7406\u4e00\u4e0b\u4e3a$-1$\u7684\u60c5\u51b5(\u4e0d\u66f4\u65b0\u7b54\u6848\uff09\n\n```\nelse\n{\n\tif(s.size()==1){cout<<\"ERR\"<<endl;return ;}\n\tif(s.top().x!=-1)ans=max(ans,s.top().x);\n\tvis[s.top().c-'a']--,s.pop();\n}\n```\n\n\u5728$solve$\u51fd\u6570\u5f00\u5934\uff0c\u6211\u4eec\u5728\u6808\u91cc\u52a0\u5165\u4e00\u4e2a\u7a7a\u53d8\u91cf\uff0c\u9632\u6b62RE\n\ncode:\n```\nwhile(!s.empty())s.pop();\ns.push(node{'a',0});\nint ans=0;\n```\n\n\u5904\u7406\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u5f00\u4e2a$vis$\u6570\u7ec4\u7edf\u8ba1\u4e00\u4e0b\n\n\u6ce8\u610f\u51fa\u961f\u65f6\u8981\u66f4\u65b0$vis$\u6570\u7ec4\n\n\u6700\u540e\u8fd4\u56de\u7b54\u6848\n\ncode:\n\n```\ns.pop();\nint f=1;if(!s.empty())f=0;\nif(!f){cout<<\"ERR\"<<endl;return ;}\nif(ti==ans)cout<<\"Yes\"<<endl;\nelse cout<<\"No\"<<endl;\n```\n\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\n```\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define N 105 \n\nusing namespace std;\n\nint t,n,ti;\nchar T[5],opt[N][5],c[N][5],x[N][5],y[N][5];\n\nstruct node{char c;int x;};\n\nstack<node>s;\n\nint vis[30];\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\nint get_num(int l,int r)\n{\n\tint ans=0;\n\tfor(int i=l;i<=r;i++)ans=ans*10+T[i]-'0';\n\treturn ans;\n}\n\nint to_num(char x[])\n{\n\tif(x[0]=='n')return -1;\n\tint l=strlen(x),ans=0;\n\tfor(int i=0;i<l;i++)ans=ans*10+x[i]-'0';\n\treturn ans;\n}\n\nvoid init()\n{\n\tmemset(vis,0,sizeof(vis));\n\trd(n);scanf(\"%s\",T);\n\tint p1,p2;\n\tif(!strcmp(T,\"O(1)\"))ti=0;\n\telse \n\t{\n\t\tint l=strlen(T);\n\t\tfor(int i=0;i<l;i++)\n\t\t\tif(T[i]=='^')p1=i;\n\t\t\telse if(T[i]==')')p2=i;\n\t\tti=get_num(p1+1,p2-1);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",opt[i]);\n\t\tif(opt[i][0]=='F')scanf(\"%s%s%s\",c[i],x[i],y[i]);\n\t}\n}\n\nvoid solve()\n{\n\twhile(!s.empty())s.pop();\n\ts.push(node{'a',0});\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(opt[i][0]=='F')\n\t\t{\n\t\t\tif(vis[c[i][0]-'a']){cout<<\"ERR\"<<endl;return ;}\n\t\t\tvis[c[i][0]-'a']++;\n\t\t\tint xx=to_num(x[i]),yy=to_num(y[i]);\n\t\t\tif(s.top().x==-1){s.push(node{c[i][0],-1});continue;}\n\t\t\tif(xx==-1)\n\t\t\t\tif(yy==-1)s.push(node{c[i][0],s.top().x});\n\t\t\t\telse s.push(node{c[i][0],-1});\n\t\t\telse if(yy==-1)s.push(node{c[i][0],s.top().x+1});\n\t\t\telse if(xx>yy)s.push(node{c[i][0],-1});\n\t\t\telse s.push(node{c[i][0],s.top().x});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(s.size()==1){cout<<\"ERR\"<<endl;return ;}\n\t\t\tif(s.top().x!=-1)ans=max(ans,s.top().x);\n\t\t\tvis[s.top().c-'a']--,s.pop();\n\t\t}\n\ts.pop();\n\tint f=1;if(!s.empty())f=0;\n\tif(!f){cout<<\"ERR\"<<endl;return ;}\n\tif(ti==ans)cout<<\"Yes\"<<endl;\n\telse cout<<\"No\"<<endl;\n}\n\nint main()\n{\n\trd(t);\n\twhile(t--)init(),solve();\n\t\n    return 0;\n}\n```",
        "postTime": 1563882773,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6709\u4ee5\u4e0b\u51e0\u70b9\u8981\u6ce8\u610f\uff1a\n\n1 \u5373\u4fbf\u5f62\u5982F i 1 3\u8fd9\u79cd\u5bf9\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u5f71\u54cd\u7684\u8bed\u53e5\uff0ci\u8fd8\u662f\u4f1a\u5360\u7528\u4e00\u4e2a\u53d8\u91cf\u8d44\u6e90\uff0c\u8981\u8bb0\u5f97\u6253\u6807\u8bb0\uff0c\u4e0d\u7136\u4f1awa\u6389\u4e00\u4e2a\u70b9 \n\n2 \u56e0\u4e3a\u5f62\u5982F i 1 3\u8fd9\u79cd\u8bed\u53e5\uff0c\u5bf9\u4e8e\u540e\u7eed\u5904\u7406\u7684\u5f71\u54cd\u4ec5\u4ec5\u5728\u4e8e\u5bf9\u53d8\u91cf\u7684\u5360\u7528\uff0c\u4ee5\u53ca\u5bf9\u540e\u7eedE\u8bed\u53e5\u7684\u914d\u5bf9\u3002\u6240\u4ee5\u53ea\u9700\u7528\u4e00\u4e2aint st\u6765\u5b58\u50a8\u6570\u91cf\u5c31\u53ef\u4ee5\u4e86\uff0c\u81f3\u4e8e\u6808\u5185\u5143\u7d20\u7684\u51fa\u6808\u987a\u5e8f~~\uff08\u5148\u5f39\u51fa\u6808\u5185\u5143\u7d20\u5c31\u597d\uff0c\u8fd9\u79cd\u5e38\u6570\u590d\u6742\u5ea6\u7684\u53d8\u91cf\u5bf9\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u5f71\u54cd\uff09~~\n\n3 \u8981\u8bbe\u7f6e\u4e00\u4e2a\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\u7684\u6807\u5fd7\uff0c\u663e\u7136\uff0c\u5f53\u4e00\u4e2a\u5faa\u73af\u4e0d\u5408\u6cd5\u65f6\uff0c\u5b83\u540e\u7eed\u7684\u5faa\u73af\u4e5f\u5c06\u5835\u585e\uff0c\u65e0\u6cd5\u8fdb\u884c\u3002\u6240\u4ee5\u4e0d\u59a8\u628a\u5b57\u7b260\u5f53\u505a\u5835\u585e\u7684\u6807\u5fd7\n\n\u7ecf\u5386\u4e86n\u53d1wa\u4e4b\u540e\uff0c\u7ec8\u4e8ea\u4e86\u8fd9\u9053\u9898\uff0c\u5177\u4f53\u7684\u7ec6\u8282\u90fd\u5728\u4e0b\u8fb9\u7684\u4ee3\u7801\u6ce8\u91ca\u4e2d\u4e86\uff08\u6211\u81ea\u5df1\u5176\u5b9e\u662f\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u88ab\u67d0\u79cd\u60c5\u51b5hack\u7684\uff0c\u4f46\u662f\u60f3\u4e86\u4e00\u4f1a\u4e5f\u6ca1\u63a8\u51fa\u6765\uff08\u5176\u5b9e\u662fwa\u660f\u4e86\u5934\uff0c\u5565\u4e5f\u60f3\u4e0d\u660e\u767d\u4e86\uff09\uff0c\u6b22\u8fce\u5927\u4f6c\u63d0\u4f9bhack\u6570\u636e\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e9; \ninline int read(){\n    int w=1,q=0;char ch=' ';\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')w=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')q=q*10+ch-'0', ch=getchar();\n    return w*q;\n}//\u5feb\u8bfb\u7684\u677f\u5b50\uff0c\u76f4\u63a5\u62ff\u6765\u8bfb\u9898\u76ee\u91cc\u7684n\u4e86 \nstring s;//\u7528\u6765\u5b58\u50a8\u6309\u884c\u8bfb\u7684\u5b57\u7b26\u4e32\uff0c\u65b9\u4fbf\u5904\u7406 \nstack<char> sta;//\u4ec5\u4ec5\u7528\u6765\u5b58\u50a8\u53ef\u4ee5\u8bb0\u5165\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5faa\u73af\u53d8\u91cf\u5373\uff1aF i 1 n\u8fd9\u79cd \nint t;//\u5171t\u7ec4\u6570\u636e \nbool check[30];//\u5224\u65ad\u662f\u5426\u91cd\u590d\u7533\u8bf7\u5faa\u73af\u53d8\u91cf\u800c\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\uff0c\u5224\u91cd\u6570\u7ec4 \nint judge(string s){//\u5224\u65ad\u6bcf\u4e00\u884cF\u8bed\u53e5\u5bf9\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u4ea7\u751f\u7684\u5f71\u54cd ,0\u8868\u793a\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff0c1\u8868\u793a\u8be5\u53d8\u91cf\u5bf9\u4e8e\u7a0b\u5e8f\u590d\u6742\u5ea6\u6709\u8d21\u732e\uff0c-1\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5e38\u6570\u590d\u6742\u5ea6\u7684\u53d8\u91cf\u5373F i x y\u4e2d\u7684xy\u90fd\u662f\u5b9e\u9645\u6570\u5b57 \n\tint l=0,r=0;//l r\u5206\u522b\u4e3aF i x y \u4e2d\uff58 y \u7684\u503c \n\tif(s[4] == 'n')// \u4f8b\u5982\u6570\u636eF i 1 n \u5faa\u73af\u53d8\u91cf\u521d\u59cb\u503c\u5bf9\u5e94\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0b\u6807\u662f4\uff0c\u5373\u5224\u65ad\u7b2c\u4e00\u4e2a\u6570\u662f\u4e0d\u662fn \n\t\tl = inf;//\u5982\u679c\u662f\uff0c\u5219\u8d4b\u503c\u4e3a\u65e0\u9650\u5927 \n\telse{//\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u8bfb\u5165\u8fd9\u4e2a\u6570\u5b57\uff0c\u4e0b\u8fb9\u7684\u8bed\u53e5\u662f\u8bfb\u53d6\u6570\u5b57 \n\t\tint j = 4;\n\t\twhile(s[j]>='0' && s[j]<='9')\n\t\t\tl=l*10+s[j++]-'0';\n\t}\n\tint k = s.find_last_of(\" \");//\u7b2c\u4e8c\u4e2a\u6570\u5b57\u4e4b\u524d\u7684\u7a7a\u683c\u4e00\u5b9a\u662f\u8be5\u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u7a7a\u683c\uff0c\u7528find\u51fd\u6570\u627e\u5230\u8be5\u884c\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7a7a\u683c \n\tk++;//k+1\u5c31\u662f\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0b\u6807 \n\tif(s[k] == 'n') r = inf;//\u5982\u679c\u8be5\u4f4d\u7f6e\u4e3an\uff0c\u5219\u8d4b\u503c\u4e3a\u65e0\u9650\u5927 \n\telse{//\u5982\u679c\u4e0d\u662f\uff0c\u8bfb\u5165\u6570\u5b57 \n\t\tint j = k;\n\t\twhile(s[j]>='0' && s[j]<='9')\n\t\t\tr=r*10+s[j++]-'0';\n\t}\n\tif(s[4]=='n' && s[k]=='n') return -1;// \u7279\u5224\uff0c lr\u90fd\u662fn\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u662f\u5e38\u6570\u590d\u6742\u5ea6 \n\tif(s[k]=='n')\n\t\treturn (r>l);//\u53ea\u6709y\u7b49\u4e8en\u4e14x\u4e3a\u5e38\u6570\u65f6\uff0c\u8be5\u5faa\u73af\u53d8\u91cf\u624d\u53ef\u4ee5\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u4ea7\u751f\u8d21\u732e \n\telse{//x\u4e0ey\u90fd\u662f\u5e38\u6570\u65f6 \n\t\tif(r>=l) return -1;//r>=l\u65f6\uff0c\u5faa\u73af\u53d8\u91cf\u53ea\u662f\u5360\u6709\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u58f0\u660e\u7a7a\u95f4\uff0c\u53ea\u662f\u5e38\u6570\u590d\u6742\u5ea6 \n\t\telse return 0;//r<l\u65f6\uff0c\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af \n\t}\n}\nint main(){\n\t//freopen(\"test.txt\",\"r\",stdin);\n\t//freopen(\"ans.txt\",\"w\",stdout);\n\tt=read();\n\twhile(t--){\n\t\twhile(!sta.empty()) sta.pop();//\u521d\u59cb\u5316\u6808 \n\t\tmemset(check,0,sizeof(check));//\u521d\u59cb\u5316\u5224\u91cd\u6570\u7ec4 \n\t\tint n = read();\n\t\tgetline(cin,s);//\u6309\u884c\u8bfb \n\t\tint op = 0,ans=0, st = 0;//op\u5b58\u7684\u662f\u5c0f\u5224\u65ad\u7684\u7a0b\u5e8f\u590d\u6742\u5ea6\uff0cans\u662f\u5f53\u524d\u7ec4\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cst\u5b58\u53d6\u7684\u662fjudge\u51fd\u6570\u4e2d\u8fd4\u56de\u503c\u4e3a-1\u7684\u5faa\u73af\u53d8\u91cf\u7684\u4e2a\u6570\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u5c31\u662f\u4e00\u4e2a\u6808\uff09 \n\t\tfor(int i = 0; i < s.size(); i++)\n\t\t\tif(s[i]=='n'){\n\t\t\t\ti+=2;\n\t\t\t\twhile(s[i]>='0' && s[i]<='9')\n\t\t\t\t\top = op*10 + s[i++] - '0';\n\t\t\t\tbreak;\n\t\t\t}//\u8bfb\u53d6op \n\t\tbool flag = 0;//\u6807\u5fd7\u662f\u5426\u6709\u8bed\u6cd5\u9519\u8bef \n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tgetline(cin, s);\n\t\t\tif(flag) continue;//\u4e4b\u524d\u5904\u7406\u7684\u6570\u636e\u4e2d\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u6240\u4ee5\u53ea\u8bfb\u6570\u636e \n\t\t\tif(s[0]=='F'){\n\t\t\t\tif(flag) continue;\n\t\t\t\tif(check[s[2]-'a']){\n\t\t\t\t\tputs(\"ERR\");\n\t\t\t\t\tflag = 1;\n\t\t\t\t}//\u91cd\u590d\u7533\u8bf7\u53d8\u91cf\uff0c\u6709\u8bed\u6cd5\u9519\u8bef\uff0cflag\u7f6e1\uff0c\u8f93\u51faERR \n\t\t\t\tif(judge(s)==-1){ \n\t\t\t\t\tst++;\n\t\t\t\t\tcheck[s[2]-'a'] = 1;//\u6807\u8bb0s[2]\u8fd9\u4e2a\u5faa\u73af\u53d8\u91cf\u88ab\u5360\u7528 \n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(sta.empty()){\n\t\t\t\t\tif(judge(s)==1){\n\t\t\t\t\t\tcheck[s[2]-'a'] = 1;\n\t\t\t\t\t\tsta.push(s[2]);\n\t\t\t\t\t}\n\t\t\t\t\telse sta.push('0');\n\t\t\t\t}//\u7279\u5224\u961f\u5217\u4e3a\u7a7a\u7684\u60c5\u51b5 \n\t\t\t\telse{\n\t\t\t\t\tif(sta.top() != '0' && judge(s)==1){\n\t\t\t\t\t\tcheck[s[2]-'a'] = 1;\n\t\t\t\t\t\tsta.push(s[2]);\n\t\t\t\t\t}\n\t\t\t\t\telse sta.push('0');\n\t\t\t\t}//\u5165\u6808 \n\t\t\t}\n\t\t\telse{\n\t\t\t\t//cout << sta.top() << \"**\" << endl;\n\t\t\t\tif(sta.empty()){//\u5bf9\u5b9e\u9645\u590d\u6742\u5ea6\u6709\u8d21\u732e\u7684\u53d8\u91cf\u90fd\u5df2\u7ecf\u5f39\u51fa \n\t\t\t\t\tif(st > 0){\n\t\t\t\t\t\tst--;//\u5f39\u51fa\u5e38\u6570\u590d\u6742\u5ea6\u7684\u53d8\u91cf \n\t\t\t\t\t\tmemset(check,0,sizeof(check));//\u76f4\u63a5\u5c06\u5224\u91cd\u6807\u8bb0\u7f6e0 \n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tputs(\"ERR\");//E\u7684\u6570\u91cf\u5927\u4e8eF\u7684\u6570\u91cf\uff0c\u51fa\u9519 \n\t\t\t\t\tflag = 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(sta.top() == '0'){//\u5f39\u51fa\u53d8\u91cf \n\t\t\t\t\tsta.pop();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheck[sta.top()-'a'] = 0;//\u91ca\u653e\u5224\u91cd\u6807\u8bb0 \n\t\t\t\tint cnt = sta.size();\n\t\t\t\tans = max(ans,cnt);//\u6c42\u6700\u5927\u590d\u6742\u5ea6 \n\t\t\t\tsta.pop();\n\t\t\t}\n\t\t}\n\t\tif(flag) continue;\n\t\tif(!sta.empty()||st){//F\u8bed\u53e5\u6570\u91cf\u5927\u4e8eE\u8bed\u53e5\uff0c\u8bed\u6cd5\u9519\u8bef \n\t\t\tputs(\"ERR\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(ans==op)\n\t\t\tputs(\"Yes\");\n\t\telse\n\t\t\tputs(\"No\");\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1560742247,
        "uid": 12346,
        "name": "\u5fd8\u5c18\u6f2a",
        "ccfLevel": 0,
        "title": "P3952 \u6a21\u62df"
    },
    {
        "content": "\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\u521a\u5f00\u59cb\u662f\u6570\u636e\u8bfb\u5165\u5361\u4e86\u6211\u534a\u5929\u3002\n\u7136\u540e\u4e00\u5171\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u90fd\u662fn \u6216 \u90fd\u4e0d\u662fn\u4e14\u4ee5\u4e00\u4e2a\u5927\u4e8e\u7b2c\u4e8c\u4e2a\n\tf++ \u8fd9\u79cd\u60c5\u51b5\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u53ea\u6709b\u662fn \n\tf++ \u8fd9\u79cd\u60c5\u51b5\u8ba9ans++\u5373\u53ef\uff0c\u5e76\u4e14\u5c06\u5f53\u524d\u8fd9\u4e2a\u53c2\u6570\u653e\u5230rr\u4e2d\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff1aa\u662fn \u6216\u8005  \u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a  \n\tf++ \u8fd9\u79cd\u60c5\u51b5\u8ba9fla=3 \uff0c\u5e76\u628a\u5f53\u524d\u8fd9\u4e2a\u53c2\u6570\u653e\u5165wr\u4e2d\uff0c \u8868\u793a\u4e00\u65e6fla=3\u65f6\uff0c\u65e0\u8bba\u5982\u4f55ans\u90fd\u4e0d\u4f1a\u53d8\u5316\uff0c\u76f4\u5230fla=0\n\u7b2c\u56db\u79cd\u60c5\u51b5\uff1aERR\u60c5\u51b5\uff0c\u8bbe\u7f6eflag=2, =2\u65f6\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u4ec5\u4ec5\u662f\u8bfb\u53d6\u6570\u636e\u800c\u5df2\u3002\n\n\u53e6\u5916\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u5faa\u73af\u90fd\u8981\u68c0\u67e5st\u4e2d\u662f\u5426\u6709\u58f0\u660e\u7684\u8fd9\u4e2a\u53c2\u6570\uff0c\u6ca1\u6709\u7684\u8bdd\u653e\u5165st\u4e2d\uff0c\u5e76\u5c06\u8be5\u53c2\u6570\u538b\u8fdb\u6808\u3002\u5982\u679c\u6709\u90a3\u5fc5\u7136ERR\uff0c\u8bbeflag=2\uff0c\u4e4b\u540e\u53ea\u9700\u8fdb\u884c\u8bfb\u64cd\u4f5c\u5373\u53ef\u3002\n\nf\u8868\u793a\u5f53\u524d\u5c42\u6570, \u4e00\u65e6\u8bfb\u5230E\u5c31--\uff0c\u5e76\u4e14\u5f39\u51fa\u4e00\u4e2a\u6808\u9876\u5143\u7d20\uff0c\u5e76\u4ecest\u4e2d\u5220\u53bb\u6808\u9876\u5143\u7d20\uff0c\u8868\u793a\u5faa\u73af\u7ed3\u675f\uff0c\u5f53\u524d\u53c2\u6570\u5df2\u88ab\u9500\u6bc1\u3002\nans\u8868\u793a\u5f53\u524d\u7684\u590d\u6742\u5ea6\uff0c\u8bfb\u5230E\uff0c\u5982\u679c\u6808\u9876\u5143\u7d20\u5728rr\u4e2d\uff0c\u8bf4\u660e\u51c6\u5907\u8df3\u51farr\u4e2d\u7684\u4e00\u5c42\u5faa\u73af\uff0c\u9700\u8981\u8bb0\u5f55\u6700\u5927\u7684\u590d\u6742\u5ea6maxans\uff0c\u5e76\u4f7fans--\uff1b\nfla\u8868\u793a\u5f53\u524d\u5faa\u73af\u662f\u5426\u5305\u542b\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5\u4e4b\u4e2d\uff0c\u4e00\u65e6\u5305\u542b\u5728\u7b2c\u4e09\u79cd\u60c5\u51b5\u4e2d\u65f6\uff0c\u65e0\u8bba\u5982\u4f55ans\u90fd\u4e0d\u4f1a\u53d8\u5316\uff0c\u76f4\u5230fla=0\uff0c\u90a3\u4ec0\u4e48\u65f6\u5019fla\u4f1a\u53d8\u56de0\u5462\uff0c\u8fd9\u91cc\u662f\u5f53\u6808\u9876\u5143\u7d20\u5728wr\u4e2d\u80fd\u627e\u5230\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u6808\u9876\u5143\u7d20\u4ecewr\u4e2d\u5220\u6389\u3002\u7136\u540e\u5224\u65adwr\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u4e86\uff0c\u8bf4\u660e\u5df2\u7ecf\u5b8c\u5168\u8df3\u51fa\u4e86\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u5faa\u73af\u3002\u90a3\u4e48\u6211\u4eec\u4f7ffla=0,\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ee7\u7eed\u6b63\u5e38\u8ba1\u7b97ans\u4e86\u3002\n\n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define NOS ios_base::sync_with_stdio(false);cin.tie(NULL);\n\nset<char> st;\nset<char> wr;\nset<char> rr;\nstack<char> ss;\n\nbool cmps(char *a, char *b)\n{\n    if(strlen(a) > strlen(b))\n    {\n        return true;\n    }\n    else if(strlen(a) < strlen(b))\n    {\n        return false;\n    }\n    else\n        return strcmp(a, b) > 0;\n}\n\nint main()\n{\n    //NOS\n    int cases;\n    scanf(\"%d\", &cases);\n    while(cases--)\n    {\n        st.clear();\n        wr.clear();\n        rr.clear();\n        while(!ss.empty())\n            ss.pop();\n        int lines;\n        char s[80];\n        scanf(\"%d %s\", &lines, s);\n        getchar();\n        int xh = 0;\n        if(s[2] == '1')\n            xh = 0;\n        else\n        {\n            if(isdigit(s[4]))\n                xh = s[4] - '0';\n            if(isdigit(s[5]))\n                xh = xh * 10 + (s[5] - '0');\n        }\n        int ans = 0;\n        int maxans = 0;\n        int f = 0;\n        int flag = 0;\n        int fla = 0;\n        while(lines--)\n        {\n            char c;\n            c = getchar();\n            getchar();\n            if(c == 'F')\n            {\n                char x;\n                char a[50], b[50];\n                x = getchar();\n                scanf(\"%s %s\",a, b);\n                getchar();\n                if(flag != 2)\n                {\n                    if(st.find(x) == st.end())\n                    {\n                        st.insert(x);\n                        ss.push(x);\n                    }\n                    else\n                        flag = 2;\n                    if(b[0] == 'n' && a[0] != 'n')\n                    {\n                        if(fla != 3)\n                        {\n                            rr.insert(x);\n                            ans++;\n                        }\n                    }\n                    else if(a[0] == 'n' && b[0] != 'n')\n                    {\n                        fla = 3;\n                        wr.insert(x);\n                    }\n                    else if(cmps(a, b))\n                    {\n                        fla = 3;\n                        wr.insert(x);\n                    }\n                    f++;\n                }\n            }\n            if(c == 'E')\n            {\n\n                if(flag == 2)\n                    continue;\n                f--;\n                if(f < 0)\n                    flag = 2;\n                if(f >= 0)\n                {\n                    if(wr.find(ss.top()) != wr.end())\n                    {\n                        wr.erase(ss.top());\n                        if(wr.empty())\n                            fla = 0;\n                    }\n                    else if(rr.find(ss.top()) != rr.end())\n                    {\n                        rr.erase(ss.top());\n                        if(ans > maxans)\n                            maxans = ans;\n                        ans--;\n                    }\n                    st.erase(ss.top());\n                    ss.pop();\n                }\n            }\n        }\n        if(f != 0 || flag == 2)\n            printf(\"ERR\\n\");\n        else if(maxans != xh)\n            printf(\"No\\n\");\n        else if(maxans == xh)\n            printf(\"Yes\\n\");\n    }\n\n}\n\n\n```\n",
        "postTime": 1556068120,
        "uid": 101500,
        "name": "Jexer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u521d\u89c1\u5f88\u552c\u4eba\uff0c\u4f46\u4ed4\u7ec6\u770b\u4e00\u4e0b\u9898\u610f\u5c31\u89c9\u5f97\u76f8\u5bf9\u96be\u5ea6\u5e76\u4e0d\u5927\uff0c\u4f46\u5199\u4ee3\u7801\u7684\u65f6\u5019\u53c8\u611f\u53d7\u5230\u4e86\u6ee1\u6ee1\u7684\u6076\u610f~~\uff08\u592a\u83dc\uff09~~  \n\u7eaf\u6b63\u6a21\u62df\uff0c\u8fb9\u8bfb\u5165\u8fb9\u5904\u7406\uff0c\u5176\u5b9e\u4e00\u4e2a\u5c0f\u65f6\u5de6\u53f3\u5c31\u80fd\u5199\u51fa\u5927\u81f4\u6b63\u786e\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u7ec6\u8282\u4e0a\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u6bd4\u5982\u6808\u9876\u5143\u7d20\u8bbf\u95ee\u65f6\u5148\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u4f55\u8bb0\u5f55\u6700\u5927\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5982\u4f55\u5224\u65ad\u8bed\u53e5\u4e2d\u7684n\u548c\u6570\u5b57\uff0c\u4ee5\u53ca\u4e0d\u8ba1\u7b97\u4e0d\u88ab\u6267\u884c\u7684\u8bed\u53e5\u5f53\u4e2d\u7684\u590d\u6742\u5ea6\u7b49\u3002  \n\u6211\u7684\u601d\u8def\u662f\u628a\u4ee5\u4e0a\u6d89\u53ca\u5230\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u6808\u5f53\u4e2d\uff0c\u7136\u540e\u4e0b\u4e00\u6b21\u8bfb\u5165\u5faa\u73af\u7684\u65f6\u5019\u548c\u4e0a\u4e00\u6b21\u7684\u4fe1\u606f\uff08\u4e5f\u5c31\u662f\u6808\u9876\u5143\u7d20\uff09\u76f8\u5bf9\u6bd4\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8ba1\u7b97\u5e94\u5f53\u8ba1\u7b97\u7684\u90e8\u5206\u3002  \n\u5f88\u660e\u663e\uff0c\u5f53\u6211\u4eec\u8bfb\u53d6\u5230E\u7684\u65f6\u5019\u5e94\u5f53\u51fa\u6808\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u6267\u884c\u9500\u6bc1\u53d8\u91cf\u3001\u8bb0\u5f55\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u4ee5\u53ca\u5224\u65ad E\u7684\u4e2a\u6570>F \u7684\u60c5\u51b5\u3002  \n\u5177\u4f53\u5224\u65ad\u65b9\u5f0f\u5728\u6ce8\u91ca\u5f53\u4e2d\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u770b\u4e00\u770bjudge\u548ccnt\u4e24\u4e2a\u51fd\u6570\u3002  \njudge\uff1a\u8fd9\u4e2a\u51fd\u6570\u662f\u6211\u5224\u65ad\u8fd9\u4e00\u5c42\u662f\u5426\u80fd\u591f\u6267\u884c\u5faa\u73af\u7684\uff0c\u5982\u679c\u8be5\u5c42\u5faa\u73af\u53ef\u4ee5\u88ab\u6267\u884c\uff0c\u5c31\u8fd4\u56defalse \u5426\u5219\u8fd4\u56detrue\u3002  \n\u5177\u4f53\u5224\u65ad\u65b9\u6cd5\uff1a\u6ce8\u610f\u987a\u5e8f  \n1.\u5982\u679cx y\u90fd\u662fn\u5219\u53ef\u4ee5\u6267\u884c  \n2.\u5982\u679cy\u662fn\u5219\u53ef\u4ee5\u6267\u884c  \n3.\u5982\u679cx\u662fn\u5219\u65e0\u6cd5\u6267\u884c\uff08\u6b64\u65f6\u5224\u65ad\u8fc7\u7b2c\u4e00\u6761\uff0c\u4e0d\u77db\u76fe\uff09  \n4.\u5982\u679cx y\u90fd\u662f\u6570\u5b57 \u82e5x<=y\u5219\u53ef\u4ee5\u6267\u884c \u5426\u5219\u65e0\u6cd5\u6267\u884c\u3002  \n\u524d\u4e09\u6761\u6211\u4eec\u5224\u65adx[0]\u548cy[0]\u5373\u53ef\u89e3\u51b3\uff0c\u800c\u7b2c\u56db\u6761\u6211\u4eec\u9010\u4f4d\u5bf9\u6bd4\u5373\u53ef\u3002  \n\ncnt\uff1a\u8fd9\u4e2a\u51fd\u6570\u662f\u8bb0\u5f55\u5230\u5f53\u524d\u5faa\u73af\u5c42\u65f6\u6709\u591a\u5c11\u5c42\u662f\u5e38\u6570\u590d\u6742\u5ea6\uff08\u542b\u8be5\u5c42\uff09\u7684\u3002  \n\u5177\u4f53\u5224\u65ad\u65b9\u6cd5\uff1a  \n1.\u5982\u679cx y\u90fd\u662fn\u5219\u5e38\u6570\u590d\u6742\u5ea6  \n2.\u5982\u679cx y\u90fd\u662f\u6570\u5b57\u5219\u5e38\u6570\u590d\u6742\u5ea6  \n3.\u5426\u5219\u5c31\u662fn\u7684\u590d\u6742\u5ea6  \n\u524d\u4e24\u6761\u6211\u4eec\u4f9d\u7136\u4f7f\u7528x[0]\u548cy[0]\u5224\u65ad\u3002\u7b2c\u4e09\u6761\u5c31\u662f\u9664\u4e86\u524d\u4e24\u6761\u4ee5\u5916\u7684\u60c5\u51b5\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u4ec5\u5728\u4e0a\u4e00\u5c42\u80fd\u591f\u6267\u884c\u7684\u65f6\u5019\u6216\u8005\u7b2c\u4e00\u5c42\u4e0a\u8c03\u7528\u8be5\u51fd\u6570\u3002  \n\u8fd9\u4e24\u6761\u662f\u6838\u5fc3\u4ee3\u7801\uff0c\u63a5\u4e0b\u6765\u662f\u6076\u5fc3\u7684\u5b57\u7b26\u4e32\u8bfb\u5165\u95ee\u9898\uff1a  \n\u6211\u4f7f\u7528\u4e86cin\u8bfb\u5165\uff0c~~\u629b\u5f03\u4e86\u5728\u8fd9\u65b9\u9762\u76f8\u5bf9\u96be\u7528\u7684scanf~~\uff0c\u4f46\u6ce8\u610f\u5728\u8bfb\u5165\u5b57\u7b26\u4e32\u6216\u8005\u5b57\u7b26\u4e4b\u540e\u9700\u8981\u4e00\u4e2agetchar\u8bfb\u6389\u6362\u884c\u7b26\u3002  \n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5728\u5224\u65adERR\u4e4b\u540e\u4e0d\u8981\u76f4\u63a5\u8df3\u8fc7\u63a5\u4e0b\u6765\u7684\u8f93\u5165\uff0c\u9700\u8981\u7528getchar\u8bfb\u6389\u7a0b\u5e8f\u5269\u4e0b\u7684\u8bed\u53e5\u4e4b\u540e\u518d\u5f00\u59cb\u65b0\u7684\u7a0b\u5e8f\u3002\u5177\u4f53\u5b9e\u73b0\u662fgetchar\u3002  \n```cpp\n#include<stack>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nstruct node//\u8bb0\u5f55\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff0c\u4fe1\u606f\u653e\u5728\u6808s\u4e2d\n{\n\tchar rep;//\u8bb0\u5f55\u5faa\u73af\u53d8\u91cf\n\tbool opr;//\u8bb0\u5f55\u662f\u5426\u80fd\u591f\u6267\u884c\n\tint nope;//\u8bb0\u5f55\u5e38\u6570\u590d\u6742\u5ea6\u4e2a\u6570\n};\nstack<node> s;\nint t, n, maxc, comp;//t\u7a0b\u5e8f\u4e2a\u6570 n\u7a0b\u5e8f\u884c\u6570 maxc\u6bcf\u4e2a\u7a0b\u5e8f\u7684\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6 comp\u8bfb\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\nchar tim[10], f, k, x[10], y[10];//tim\u8bfb\u53d6\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6570\u7ec4 \n//\u63a5\u4e0b\u6765\u7684f k x y\u662ff i x y\u7684\u8bfb\u5165 \u56e0\u4e3ax y\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u5b57\u7b26 \u6240\u4ee5\u5f00\u6570\u7ec4\u8bb0\u5f55\nbool passit, vis[1000];//passit\u9632\u6b62\u91cd\u590d\u8f93\u51fa vis\u5224\u65ad\u53d8\u91cf\u662f\u5426\u9500\u6bc1\ninline bool judge(char a[], char b[])\n{//can/can't\u4ee3\u8868\u8be5\u5c42\u5faa\u73af\u80fd/\u4e0d\u80fd\u6267\u884c\u3002\n\tif(!isdigit(a[0]) && !isdigit(b[0])) return false;//can\n\tif(!isdigit(a[0])) return true;//can't\n\tif(!isdigit(b[0])) return false;//can\n\tint ta = strlen(a), tb = strlen(b);\n\tif(ta < tb) return false;//can\n\tif(ta > tb) return true;\n\tfor(int i = 0; i < ta; ++i)\n\t{\n\t\tif(a[i] < b[i]) return false;//can\n\t\telse if(a[i] > b[i]) return true;//can't\n\t}\n\treturn false;//can\n}\ninline int cnt(char a[], char b[])\n{//nope\u662f\u8bb0\u5f55\u6709\u51e0\u4e2a\u5e38\u6570\u590d\u6742\u5ea6\u7684\n\tif(isdigit(a[0]) && isdigit(b[0])) return 1;//+1 nope\n\tif(!isdigit(a[0]) && !isdigit(b[0])) return 1;\n\treturn 0;\n}\nint main()\n{\n\tcin >> t;\n\twhile(t--)\n\t{\n\t\tmemset(vis, false, sizeof(vis));//\u521d\u59cb\u5316\n\t\tmaxc = 0, passit = false;\n\t\twhile(!s.empty()) s.pop();\n\t\tcin >> n >> tim;\n\t\tgetchar();\n\t\tif(isdigit(tim[2])) comp = 0;//O(1)\n\t\telse\n\t\t{\n\t\t\tcomp = (tim[4] ^ 48);//O(n^w)\n\t\t\tint j = 5;\n\t\t\twhile(isdigit(tim[j])) comp = (comp << 3) + (comp << 1) + (tim[j++] ^ 48);//\u6807\u51c6\u8bfb\u5165\u4f18\u5316\n\t\t}\n\t\tif(n & 1)//\u5982\u679c\u7a0b\u5e8f\u884c\u6570\u662f\u5947\u6570 \u80af\u5b9a\u7f16\u8bd1\u9519\u8bef\n\t\t{\n\t\t\tfor(int i = 1; i <= n; ++i) while(getchar() != '\\n');\n\t\t\tcout << \"ERR\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i = 1; i <= n; ++i)//n\u884c\n\t\t{\n\t\t\tcin >> f;\n\t\t\tif(f == 'F')//F\u7684\u60c5\u51b5\n\t\t\t{\n\t\t\t\tcin >> k >> x >> y;\n\t\t\t\tif(!vis[k]) vis[k] = true;//\u8bb0\u5f55\u5faa\u73af\u53d8\u91cf\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(int ii = i; ii <= n; ++ii) while(getchar() != '\\n');\n\t\t\t\t\tpassit = true;\n\t\t\t\t\tcout << \"ERR\\n\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(s.empty()) s.push((node){k, judge(x, y), cnt(x, y)});//\u7279\u5224\u7a7a\u7684\u6808\n\t\t\t\telse if(!s.top().opr) s.push((node){k, judge(x, y), s.top().nope + cnt(x, y)});//\u522b\u5fd8\u4e86else if \u8fd9\u662f\u4e0a\u4e00\u5c42\u53ef\u4ee5\u6267\u884c\u7684\u60c5\u51b5 \u4e0a\u4e00\u5c42\u7684nope\u5143\u7d20+=cnt\n\t\t\t\telse s.push((node){k, true, 0});//\u4e0a\u4e00\u5c42\u65e0\u6cd5\u6267\u884c nope\u968f\u4fbf\u8d4b\u503c\u5373\u53ef\n\t\t\t}\n\t\t\telse//E\u7684\u60c5\u51b5\n\t\t\t{\n\t\t\t\tif(s.empty())//\u8bf4\u660eE\u4e2a\u6570>F \n\t\t\t\t{\n\t\t\t\t\tfor(int ii = i; ii <= n; ++ii) while(getchar() != '\\n');//\u8bfb\u6389\u540e\u9762\u7684\u6570\u636e\n\t\t\t\t\tpassit = true;//\u6807\u8bb0\n\t\t\t\t\tcout << \"ERR\\n\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!s.top().opr) maxc = max(maxc, (int)s.size() - s.top().nope);//\u5982\u679c\u8be5\u5c42\u5faa\u73af\u53ef\u4ee5\u6267\u884c \u66f4\u65b0\u6700\u5927\u590d\u6742\u5ea6\n\t\t\t\tvis[s.top().rep] = false;//\u9500\u6bc1\u53d8\u91cf\n\t\t\t\ts.pop();//\u5f39\u51fa\n\t\t\t}\n            getchar();\n\t\t}\n\t\tif(passit) continue;//\u5982\u679c\u4e4b\u524d\u5904\u7406\u8fc7\n\t\tif(!s.empty()) cout << \"ERR\\n\";//F>E\u7684\u60c5\u51b5\n\t\telse if(comp == maxc) cout << \"Yes\\n\";//\u590d\u6742\u5ea6\u76f8\u7b26\n\t\telse cout << \"No\\n\";//\u590d\u6742\u5ea6\u4e0d\u7b26\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541486969,
        "uid": 55683,
        "name": "QianhanOfficial",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "###  ~~\u4e00\u5e74\u4e86\uff0c\u4e3a\u4ec0\u4e48\u6211\u6253oi\u4f9d\u7136\u6253\u5f97\u8fd9\u4e48\u51c9\uff0cQAQ ...~~\n\n\u9996\u5148\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c~~\u7136\u540e\u5c31\u51c9\u4e86~~\uff0c\u5927\u4f53\u601d\u8def\u5c31\u662f\u7528\u6808\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u7684\u6709\u6548\u5b57\u7b26\u548c\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5b57\u7b26\u53ef\u4ee5\u5f00\u4e00\u4e2avis[]\u8bb0\u5f55\u5f53\u524d\u90a3\u4e9b\u5b57\u7b26\u6709\u6548\uff0c\u8fdb\u6808vis[x]=1,stk[++top]=x,\u9000\u6808vis[stk[top--]]=0\u3002 \u590d\u6742\u5ea6\u53ea\u8981\u7ef4\u62a4\u4e00\u4e0b\u73b0\u5728\u662fn\u7684\u51e0\u6b21\u65b9\u5c31\u597d\u4e86\u3002\n\n\u5f53\u7136\uff0cday1T2\u600e\u4e48\u53ef\u80fd\u90a3\u4e48\u597d\u5199\uff0c\u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n\n------------\n\n1. F  i n n \u7684\u590d\u6742\u5ea6\u662fO(1)\u7684 \u3002~~\u7adf\u7136\u5361\u4e86\u6211\u4e00\u4e0a\u5348~~\n2. \u78b0\u5230F i 58 49 \u8fd9\u79cd\u524d\u9762\u6bd4\u540e\u9762\u5927\u7684\u60c5\u51b5 \u5faa\u73af\u6839\u672c\u4e0d\u6267\u884c\uff0c\u867d\u7136\u4f60\u8fd8\u662f\u5f97\u5224\u65ad\u8bed\u6cd5\u9519\u8bef\u3002\n3. \u63a8\u8350\u628a\u8bfb\u5165\u2018n\u2019\u653e\u5728read()/rd()/...\u8fd9\u4e9b\u51fd\u6570\u91cc\u9762\uff0c\u78b0\u5230\u5b83\u76f4\u63a5\u8fd4\u56deinf/1e9/\u67d0\u4eba\u7684\u751f\u65e5...\u8fd9\u6837\u8c8c\u4f3c\u597d\u5199\u4e00\u4e9b\u3002\n4. \u7531\u4e8e\u6211\u7684\u5b57\u7b26\u6808\u548c\u590d\u6742\u5ea6\u6808\u7528\u4e86\u540c\u4e00\u4e2a\u6808\u9876\u6307\u9488~~\uff08\u81ea\u4f5c\u6b7b\uff0c\u4e0d\u53ef\u6d3b\uff09~~\uff0c\u6240\u4ee5\u8fdb\u6808\u7684\u65f6\u5019\u9700\u8981\u4ed4\u7ec6\u60f3\u60f3\u6307\u9488\u600e\u4e48\u52a8\u3002\n5. \u5bf9\u4e86\uff0c\u4e00\u5f00\u59cb\u76f4\u63a5getline()\u4f1a\u8bfb\u5165T\u90a3\u4e00\u884c\u7136\u540e\u76f4\u63a5\u51c9\u6389\uff0c\u6240\u4ee5\u5efa\u8bae\u8bfb\u5165T\u4e4b\u540e\u518dgetchar()\u4e00\u4e0b\u3002~~\u6ca1\u9519\u8e29\u8fd9\u96f7\u7684\u4eba\u5c31\u662f\u6211~~\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=105,inf=1e9;\nstruct io{//\u628a\u8bfb\u5165\u5168\u5199\u5728\u4e00\u8d77~~\n\tstring s;int p,siz;\n\tvoid newl(){getline(cin,s);p=0;siz=s.size();}\n\tint rd(){\n\t\tint ans=0;\n\t\tfor(;(s[p]<'0'||s[p]>'9')&&p<siz;++p)if(s[p]=='n'){++p;return inf;}//if\uff08\uff09\u91cc\u9762\u4e0d\u52a0'++p'\u4f1a\u51c9\n\t\tfor(;s[p]>='0'&&s[p]<='9'&&p<siz;++p)ans=ans*10+(s[p]-'0');//\u4e00\u5f00\u59cb\u5199\u6210\u2018p-'0'\u2019\u7136\u540e\u628a\u81ea\u5df1\u8822\u54ed\u4e86\n\t\treturn ans;\n\t}\n\tchar gc(){\n\t\twhile(s[p]==' '&&p<siz)++p; return s[p++];//\u9632\u6b62\u628a\u5b57\u7b26\u8bfb\u6210\u2018 \u2019\n\t}\n}io;\nint bet[maxn],o[maxn],tp,cnt,oz;bool vis[200];\n/*bet:\u5b57\u7b26\u6808  o:\u590d\u6742\u5ea6\u6808 tp:\u90a3\u4e2a\u8be1\u5f02\u7684\u6307\u9488\n  oz: \u5c0f\u660e\u7684\u590d\u6742\u5ea6 cnt:\u7a0b\u5e8f\u603b\u884c\u6570 vis:\u5f00\u5230200\u603b\u591f\u4e86\u5427~*/\nvoid O(){\n\tio.newl();\n\tcnt=io.rd();\n\toz=io.rd();\n\tif(oz==inf)oz=io.rd();//\u8bfb\u5230O(n...\n\telse oz=0;// 1==n^0\n}\nint work(){bool f=0;//f==1 : \u51fa\u9519\u4e86\n\tchar t,x;int l,r;int mx=0;\n\twhile(cnt--){\n\t\tio.newl();if(f)continue;//\u5c0f\u660e\u5199\u7684\u4ee3\u7801\uff0c\u9519\u4e86\u4e5f\u8981\u8bfb\u5b8c\u3002\u5426\u5219Wa\u5728\u9762\u4e0a\uff0c\u51c9\u5728\u5fc3\u91cc\u3002\n\t\tif(io.gc()=='F'){\n\t\t\tx=io.gc();l=io.rd();r=io.rd();\n\t\t\tif(vis[x]){f=1;continue;}\n\t\t\tvis[x]=1;bet[++tp]=x;\n\t\t\tif(r-l>100 && o[tp-1]!=-1){o[tp]=o[tp-1]+1;mx=max(mx,o[tp]);}\n\t\t\telse if(r>l||(r==l&&r==inf))o[tp]=o[tp-1];\n\t\t\telse o[tp]=-1;//-1\uff1a \u5e76\u4e0d\u6267\u884c\u7684\u8bed\u53e5\n\t\t}else{\n\t\t\tif(tp==0){f=1;continue;\t}\n\t\t\tvis[bet[tp--]]=0;\n\t\t}\n\t}\n\tif(f||tp)return -1;//ERR \uff1a\u8981\u4e48\u662f\u91cd\u590d\u53d8\u91cf\uff0c\u8981\u4e48\u662f\u6808\u88ab\u5f39\u7206\u4e86\uff0c\u8fd8\u53ef\u4ee5\u662f\u6808\u6ca1\u5f39\u5e72\u51c0\n\treturn mx;\n}\nvoid init(){\n\tmemset(vis,0,sizeof vis);\n\ttp=0;o[tp]=0;\n}\nint main(){\n\tint T;cin>>T;getchar();\n\twhile(T--){\n\t\tinit();//\u81ea\u4ece\u53bb\u5e74\u88ab\u591a\u7ec4\u6570\u636e\u5361\u6b7b\uff0c\u6211\u5c31\u518d\u4e5f\u4e0d\u6562\u4e0d\u5199init()\u4e86\n\t\tO();\n\t\tint ans=work();\n\t\tif(ans==-1)cout<<\"ERR\"<<endl;\n\t\telse{\n\t\t\tif(ans==oz)cout<<\"Yes\\n\";\n\t\t\telse cout<<\"No\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541320260,
        "uid": 89809,
        "name": "fallqs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u5bf9\u4e8eFE\u914d\u5bf9\uff0c\u53ef\u4ee5\u7528\u6808\u5904\u7406\uff0c\u9047F\u5c31\u5165\u6808\uff0c\u9047E\u5c31\u51fa\u6808\uff0c\u5982\u679c\u53d1\u73b0\u4e2d\u95f4\u6709\u7a7a\u6808\u9700\u8981\u88ab\u5f39\u51fa\u6216\u8005\u8d70\u5230\u6700\u540e\u53d1\u73b0\u6808\u4e0d\u7a7a\u5c31\u662f\u4e0d\u914d\u5bf9\n\n\u5bf9\u4e8e\u590d\u6742\u5ea6\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u68f5\u6811\uff0c\u8282\u70b9\u4e3a\u5faa\u73af\u8bed\u53e5\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f\u8fd9\u4e2a\u8282\u70b9\u4e0b\u76f4\u63a5\u5d4c\u5957\u7684\u5faa\u73af\u8bed\u53e5\n\n\u7136\u540e\u5148\u641c\u4e00\u904d\u6570\u68c0\u67e5\u4e00\u904d\u6709\u6ca1\u6709\u91cd\u590d\uff0c\u7136\u540e\u518d\u641c\u4e00\u904d\u6811\u7b97\u603b\u5171\u79ef\u7d2f\u7684\u590d\u6742\u5ea6\u5c31\u597d\u4e86\n\n\u6700\u540e\u4ee3\u7801\u3010\u542b\u6ce8\u91ca\u3011\n\n```cpp\n#include<cstdio>\n#include<stack>\n#include<cstring>\n#include<vector>\nint T,l,vsd[33],idx,dph[111];\n//T,l\u4e3a\u9898\u76ee\u7684T,l,vsd\u8868\u793a\u53d8\u91cf\u662f\u5426\u7528\u8fc7\u4e14\u6ca1\u9500\u6bc1\n//idx\u8868\u793a\u5faa\u73af\u5e8f\u53f7\uff0cdph[i]\u8868\u793a\u5faa\u73af\u5230\u6807\u53f7\u4e3ai\u7684\u5faa\u73af\u65f6\u79ef\u7d2f\u4e86O(n^dph[i])\u4e2a\u590d\u6742\u5ea6 \nchar req[22],ch[1],val[1],be[5],en[5];\n//req:\u9898\u76ee\u7ed9\u7684\u590d\u6742\u5ea6,ch:F\u6216E,val:\u53d8\u91cf\u540d,be,en:\u5f00\u59cb\u548c\u7ed3\u675f\u6570\u5b57 \nstruct loops//\u5faa\u73af\u4eec \n{\n\tchar val[1];//\u5faa\u73af\u7528\u5230\u7684\u53d8\u91cf \n\tint be,en;//\u5f00\u59cb\u6570\u5b57\uff0c\u7ec8\u6b62\u6570\u5b57 \n}loop[111];\nstd::stack<int>lp;//\u6808\u5b58\u5faa\u73af\u5e8f\u53f7 \nstd::vector<int>chil[111];//\u8fd9\u4e2a\u5faa\u73af\u4e0b\u4e00\u5c42\u7684\u6240\u6709\u5faa\u73af \nint tnum(char*arr)//\u5c06\u5168\u662f\u6570\u5b57\u7684\u5b57\u7b26\u4e32\u53d8\u6570\u5b57\n{\n\tint ret=0;\n\tfor(int i=0;arr[i];i++)ret=ret*10+arr[i]-'0';\n\treturn ret;\n}\nint dfschk(int nod)//\u68c0\u67e5\u53d8\u91cf\u662f\u5426\u91cd\u590d \n{\n\tif(nod!=0)vsd[loop[nod].val[0]-'a']=1;//\u5360\u7528\u53d8\u91cf \n\tfor(std::vector<int>::iterator it=chil[nod].begin();it!=chil[nod].end();it++)\n\t{\n\t\tif(vsd[loop[*it].val[0]-'a'])return 0;//\u53d1\u73b0\u91cd\u590d\u58f0\u660e\uff0c\u8fd4\u56de\u4e0d\u884c \n\t\tif(!dfschk(*it))return 0;//\u540c\u4e0a \n\t}\n\tif(nod!=0)vsd[loop[nod].val[0]-'a']=0;//\u89e3\u9664\u5360\u7528\u53d8\u91cf \n\treturn 1;\n}\nint dfs(int nod)//\u8ba1\u7b97\u5b9e\u9645\u590d\u6742\u5ea6 \n{\n\tif(nod!=0)vsd[loop[nod].val[0]-'a']=1;//\u5176\u5b9e\u548c\u68c0\u67e5\u53d8\u91cf\u91cd\u590d\u76f8\u5173\u7684\u8bed\u53e5\u53ef\u4ee5\u4e0d\u8981\u7684...\u4f46\u662f\u61d2\u5f97\u6539\u4e86 \n\tfor(std::vector<int>::iterator it=chil[nod].begin();it!=chil[nod].end();it++)\n\t{\n\t\tif(vsd[loop[*it].val[0]-'a'])return 0;\n\t\tif(loop[*it].be>loop[*it].en)continue;//\u5faa\u73af\u8fdb\u4e0d\u53bb\u5c31\u8df3\u8fc7 \n\t\tdph[*it]=dph[nod]+((loop[*it].en-loop[*it].be)>110);//\u79ef\u7d2f\u590d\u6742\u5ea6\u3010\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u597d\u5751\u554a\u3011 \n\t\tif(!dfs(*it))return 0;\n\t}\n\tif(nod!=0)vsd[loop[nod].val[0]-'a']=0;\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tint err=0,re=0,qep=0;//err:\u662f\u5426\u6709\u9519\uff0cre:\u5b9e\u9645\u590d\u6742\u5ea6\uff0cqep:\u7ed9\u51fa\u7684\u590d\u6742\u5ea6 \n\t\tidx=0;\n\t\tmemset(dph,0,sizeof dph);\n\t\tmemset(req,0,sizeof req);\n\t\tmemset(vsd,0,sizeof vsd);//\u4ee5\u4e0a\u662f\u4ee4\u4eba\u70e6\u8e81\u7684\u521d\u59cb\u5316 \n\t\tscanf(\"%d%s\",&l,req);\n\t\tfor(int i=1;i<=l;i++)\n\t\t{\n\t\t\tscanf(\"%s\",ch);//\u8f93\u5165%c\u65f6\u5904\u7406\u7a7a\u683c\u56de\u8f66\u5de8\u70e6\u8e81\u3002\u3002 \n\t\t\tif(ch[0]=='F')\n\t\t\t{\n\t\t\t\tidx++;\n\t\t\t\tmemset(val,0,sizeof val);\n\t\t\t\tmemset(be,0,sizeof be);\n\t\t\t\tmemset(en,0,sizeof en);\n\t\t\t\tscanf(\"%s%s%s\",val,be,en);\n\t\t\t\tif(err)continue;//\u53d1\u73b0\u9519\u8bef\u5c31\u4e0d\u518d\u5904\u7406 \n\t\t\t\tloop[idx].val[0]=val[0];\n\t\t\t\tif(be[0]!='n')loop[idx].be=tnum(be);//\u786e\u5b9a\u8d77\u59cb\u6570\u5b57 \n\t\t\t\telse loop[idx].be=333;\n\t\t\t\tif(en[0]!='n')loop[idx].en=tnum(en);//\u786e\u5b9a\u7ec8\u6b62\u6570\u5b57 \n\t\t\t\telse loop[idx].en=333;\n\t\t\t\tlp.push(idx);//\u5165\u6808 \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(err)continue;//\u53d1\u73b0\u9519\u8bef\u5c31\u4e0d\u518d\u5904\u7406 \n\t\t\t\tif(lp.empty())err=1;//F\u548cE\u4e0d\u914d\u5bf9\u5c31\u6709\u9519 \n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint chi=lp.top();\n\t\t\t\t\tlp.pop();\n\t\t\t\t\tif(lp.empty())chil[0].push_back(chi);//\u5efa\u6811 \n\t\t\t\t\telse chil[lp.top()].push_back(chi);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!lp.empty())printf(\"ERR\\n\");//\u4e0d\u914d\u5bf9 \n\t\telse if(err)printf(\"ERR\\n\");//\u4e0d\u914d\u5bf9 \n\t\telse if(!dfschk(0))printf(\"ERR\\n\");//\u91cd\u53d8\u91cf\u540d \n\t\telse\n\t\t{\n\t\t\tdfs(0);//\u8ba1\u7b97\u5404\u5faa\u73af\u79ef\u7d2f\u7684\u590d\u6742\u5ea6\n\t\t\tfor(int i=0;i<=idx;i++)re=re>dph[i]?re:dph[i];//\u4ee5\u590d\u6742\u5ea6\u79ef\u7d2f\u6700\u591a\u7684\u5faa\u73af\u4e3a\u51c6 \n\t\t\tif(req[2]=='1')qep=0;//\u63d0\u53d6\u7ed9\u51fa\u7684\u590d\u6742\u5ea6 \n\t\t\telse for(int i=4;'0'<=req[i]&&req[i]<='9';i++)qep=qep*10+req[i]-'0';//\u63d0\u53d6\u7ed9\u51fa\u7684\u590d\u6742\u5ea6 \n\t\t\tprintf(qep==re?\"Yes\\n\":\"No\\n\");//\u8f93\u51fa \n\t\t}\n\t\tfor(int i=0;i<=idx;i++)chil[i].clear();//\u4ee5\u4e0b\u662f\u4ee4\u4eba\u70e6\u8e81\u7684\u521d\u59cb\u5316 \n\t\twhile(!lp.empty())lp.pop();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541077646,
        "uid": 53998,
        "name": "ejfbdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "```pascal\nuses math;\nvar\n  t,ss,l,exc,cpx,tot,x,now,i,j:longint;\n  left,right:longint;\n  ch:char;\n  flag:boolean;\n  st,s1,s2:ansistring;\n  ha:array['a'..'z'] of longint;\n  stac:array[0..10000] of char;\n  flag2,flag3:array[0..10000] of longint;\nfunction check:boolean;\n  begin\n    for j:=1 to tot-1 do if flag2[j]=1 then exit(false);\n    exit(true);\n  end;\nprocedure Judge;\n  begin\n    if st[3]<>'n'\n      then Exc:=0\n      else begin s1:=copy(st,5,length(st)-5);val(s1,Exc); end;\n  end;\nprocedure loop;\n  begin\n    read(ch,ch);if ha[ch]=1 then begin flag:=false;exit; end;\n    inc(tot);stac[tot]:=ch;ha[ch]:=1;\n    read(ch,st);\n\n    if st[1]='n' then begin if st[length(st)]<>'n' then flag2[tot]:=1;exit; end;\n    if st[length(st)]='n' then begin if check then begin inc(now);flag3[tot]:=1;end;cpx:=max(cpx,now);exit; end;\n    x:=pos(' ',st);s1:=copy(st,1,x-1);s2:=copy(st,x+1,length(st)-x+1);\n    val(s1,left);val(s2,right);\n    if left>right then flag2[tot]:=1;\n  end;\n\nprocedure release;\n  begin\n    if tot=0 then begin flag:=false;exit; end;\n    ha[stac[tot]]:=0;flag2[tot]:=0;\n    if flag3[tot]=1 then dec(now);flag3[tot]:=0;\n    dec(tot);\n  end;\nbegin\n  readln(t);\n  for ss:=1 to t do\n    begin\n      read(L,ch,st);readln;\n      Judge;\n      fillchar(ha,sizeof(ha),0);cpx:=0;tot:=0;now:=0;\n      fillchar(flag2,sizeof(flag2),0);fillchar(flag3,sizeof(flag3),0);\n      flag:=true;\n      for i:=1 to L do\n        begin\n          read(ch);\n          if (ch='F')\n            then loop\n            else release;\n          readln;\n        end;\n      if (not(flag)) or (tot>0)\n        then writeln('ERR')\n        else\n          begin\n            if (cpx=Exc) then writeln('Yes') else writeln('No');\n          end;\n    end;\nend.\n\n\n```\n   \u5728c++\u7684\u4e16\u754c\u4e2d\u6323\u624e\u7684Pascal\u9009\u624b\u7684\u9898\u89e3\uff0c\u8bf7\u591a\u591a\u5305\u6db5\n   \n   \u6b63\u5982\u5404\u4f4ddalao\u6240\u8bf4\uff0c\u8fd9\u662f\u4e00\u9053\u4ee4\u4eba\u7a92\u606f\u7684\u6a21\u62df\u9898 \n   \n   \u4e5f\u6b63\u662f\u8fd9\u9053\u9898\u8ba9\u6211noip2017\u9519\u5931\u56fd\u4e00\n   \n   \u5e0c\u671b\u5927\u5bb6noip2018\u52a0\u6cb9\uff0c\u4e0d\u8981\u62cd\u9519\u66b4\u529bQAQ\n   \n",
        "postTime": 1540651833,
        "uid": 55895,
        "name": "wwwwxb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u9898\u76ee:[\u65f6\u95f4\u590d\u6742\u5ea6](https://www.luogu.org/problemnew/show/P3952)\n\n\u8fd9\u4e2a\u9898\u5c31\u662f\u8003\u9a8c\u4e00\u4e2a\u4eba\u7684\u8010\u5fc3\u548c\u6a21\u62df\u80fd\u529b...\u4e3b\u8981\u662f\u80fd\u5426\u8003\u8651\u5230\u6240\u6709\u7684\u53ef\u80fd\u60c5\u51b5...\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u5148\u8fdb\u884c\u4e00\u6b21\u5224\u65ad:\n```cpp\nif (l % 2 != 0) {\n\t\t\tscanf(\"O(%s)\", tim);\n\t\t\tgetchar();\n\t\t\tfor (int j = 1; j <= l; j++) {\n\t\t\t\tscanf(\"%c\", &a);\n\t\t\t\tgetchar();\n\t\t\t\tif (a == 'F') {\n\t\t\t\t\tscanf(\"%c %s %s\", &b, c, d);\n\t\t\t\t\tgetchar();\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"ERR\\n\");\n\t\t\tcontinue;\n\t\t}\n```\n\u7531\u9898\u76ee\u53ef\u77e5\uff0c'F'\u548c'E'\u90fd\u662f\u5404\u5360\u4e00\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u884c\u4e0d'F'\u5c31\u662f'E'\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u5947\u5076\u5224\u65ad\uff0c\u5982\u679c\u662f\u5947\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\"ERR\"\uff0c\u8bb0\u4f4f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u4e0d\u6b62\u8981\u8f93\u51fa\u8fd8\u8981\u7ee7\u7eed\u628a\u540e\u9762\u7684\u8f93\u5165\u6570\u636e\u7ed9\u5b58\u8d77\u6765...~~\u8840\u7684\u6559\u8bad~~\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5904\u7406\u6570\u636e\u4e86\uff0c\u8bb2\u4e00\u4e0b\u7b97\u6cd5\u601d\u60f3\uff0cq\u6808\u7528\u6765\u5b58'F'\u7684\u4e2a\u6570\uff0c\u9047\u5230'F'\u5373\u5165\u6808\uff0c\u9047\u5230E\u5219\u5224\u65ad\uff0c\u5f53q\u6808\u4e0d\u4e3a\u7a7a\u65f6\u79fb\u9664\u6808\u9876\u5143\u7d20\uff0c\u5f53\u6808\u4e3a\u7a7a\u65f6\u8bf4\u660eE\u591a\u4e86\uff0c\u5219\u8f93\u51fa\"ERR\"...p\u6808\u7528\u6765\u5b58n^w\u7684w\uff0c\u5f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1\u65f6\uff0c\u5b580\uff0c\u5f53\u4e3an^w\u65f6\uff0c\u5b58w\uff0c\u6700\u540e\u7528\u4e2asum\u628ap\u6808\u5185\u7684\u5143\u7d20\u5168\u52a0\u8d77\u6765\u5c31\u662f\u6700\u540e\u7684w\u4e86...\u8fd9\u91cc\u53c8\u6709\u4e00\u4e2a\u5751\uff0c\u6572\u91cd\u70b9\uff0c\u8fd8\u9700\u8981\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55q\u6808\u4e2d\u79fb\u9664\u6808\u9876\u5143\u7d20\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u624d\u80fd\u77e5\u9053\u6c42\u548c\u7684\u6b21\u6570...\u5982sss\u8d77\u5230\u8ba1\u6570\u7684\u4f5c\u7528\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u5c42\u5927\u5faa\u73af\u4e2d\u5305\u542b\u5c0f\u5faa\u73af\uff0c\u6240\u4ee5\u8981\u8fd9\u6837\u6bcf\u6b21\u7ec8\u6b62\u4e00\u6b21\u5185\u90e8\u5faa\u73af\u5c31\u6c42\u548c\u4e00\u6b21\uff0c\u6700\u540e\u53d6\u6700\u5927\u503c\uff0c\u4f8b:\nF a 1 2\nF b 2 3\nF c 3 4\nF d 4 5\nE\nE\nF c 5 6\nF d 6 7\nE\nE\nE\nE\n```cpp\nwhile (sss--) {\n\t\t\t\t\t\tttt += p.top();\n\t\t\t\t\t\tp.pop();\n\t\t\t  }\n\t\t\t\t\tsum = max(ttt, sum);\n\n```\n```cpp\nif (a == 'E') {\n\t\t\t\tmykey = true;\n\t\t\t\tsss++;\n\t\t\t\tif (!q.empty()) {\n\t\t\t\t\te = q.top();\n\t\t\t\t\tif (e == 'F') q.pop();\n\t\t\t\t} else {\n\t\t\t\t\tif (!key) printf(\"ERR\\n\");\n\t\t\t\t\tkey = true;\n\t\t\t\t}\n\t\t\t  }\n\n```\n\u8fd8\u6709\u8981\u8bb0\u5f97\u7279\u5224\uff0c\u5982\u679c\u5916\u5c42\u5faa\u73af\u8fdb\u4e0d\u53bb\uff0c\u590d\u6742\u5ea6\u4e3a1\uff0c\u5185\u5c42\u5faa\u73af\u4e5f\u8fdb\u4e0d\u53bb\uff0c\u6545\u9700\u8981bool\u53d8\u91cf\u4f5c\u4e3a\u5f00\u5173\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5751\n\n\u5176\u5b9e\u8f93\u5165\u7684\u4e5f\u662f\u4e00\u4e2a\u5751\uff0c\u8bb0\u5f97\u8981\u628a\u8f93\u5165\u5b8c\u540e\u7684\u6362\u884c\u7b26\u7ed9\u5438\u8d70\u5426\u5219\u5c31\u7b49\u7740re\u5427~~(\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u6211\u77e5\u9053)~~\n\n\u8bb0\u4f4f\uff0c\u4e24\u4e2a\u6570\u53ef\u80fd\u662f\u4e24\u4f4d\u6570\uff0c\u8981*10\u52a0\u4e0a\u540e\u5728\u5224\u65ad...\n\n\u6bd4\u8f83\u65f6\uff0c\u8981\u8c28\u8bb0\u5b57\u7b26\u6570\u7ec4\u5b58\u7684\u662fASCLL\u7801\uff0c\u8bb0\u5f97-'0'\n\n\u57fa\u672c\u4e0a\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u4e3b\u8981\u662f\u8981\u4ed4\u7ec6\u7ec6\u5fc3\uff0c\u57fa\u672c\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\n\u6700\u540e\u4e0a\u4ee3\u7801:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <stack>\n#include <cstring>\nusing namespace std;\nint t, l, temp, sum, ttt, sss;\nchar a, b, e;\nstack <char> q; \nstack <int> p;\nchar tim[5000], c[5000], d[5000];//c\u548cd\u6570\u7ec4\u5b58\u8f93\u5165\u6570\u636e,tim\u6570\u7ec4\u5b58\u65f6\u95f4\u590d\u6742\u5ea6 \nint pan[5000];\nbool key = false, kai = true, mykey = false, mykai = false;\nint shu() {\n\tint num = 0;\n\tint i = 2;\n\twhile(tim[i] >= '0' && tim[i] <= '9') {\n\t\tnum = num * 10 + tim[i] - '0';\n\t\ti++;\n\t}\n\treturn num;\n}//\u53d6\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6574\u6570\u90e8\u5206\uff0c\u5373O^71\u768471... \nint zhuan(char *hehe) {\n\tint num = 0;\n\tint i = 0;\n\twhile (hehe[i] >= '0' && hehe[i] <= '9') {\n\t\tnum = num * 10 + hehe[i] - '0';\n\t\ti++;\n\t}\n\treturn num;\n}//\u53d6c\u548cd\u6570\u7ec4\u5b58\u7684\u6574\u6570 \nint main() {\n\tscanf(\"%d\", &t);\n\tfor (int i = 1; i <= t; i++) {\n\t\tscanf(\"%d\", &l);\n\t\tgetchar();\n\t\tsum = 0;\n\t\tmemset(tim, 0, sizeof(tim));\n\t\tmemset(pan, 0, sizeof(pan));\n\t\twhile (!p.empty()) p.pop();\n\t\twhile (!q.empty()) q.pop();\n\t\tkey = false;\n\t\tkai = true;\n\t\tmykey = false;\n\t\tmykai = false;//\u4e00\u5927\u5768\u521d\u59cb\u5316 \n\t\tif (l % 2 != 0) {\n\t\t\tscanf(\"O(%s)\", tim);\n\t\t\tgetchar();\n\t\t\tfor (int j = 1; j <= l; j++) {\n\t\t\t\tscanf(\"%c\", &a);\n\t\t\t\tgetchar();\n\t\t\t\tif (a == 'F') {\n\t\t\t\t\tscanf(\"%c %s %s\", &b, c, d);\n\t\t\t\t\tgetchar();\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"ERR\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tscanf(\"O(%s)\", tim);\n\t\tgetchar();\n\t\tfor (int j = 1; j <= l; j++) {\n\t\t\tscanf(\"%c\", &a);\n\t\t\tgetchar();\n\t\t\tif (a == 'F') {\n\t\t\t\tif (!key && mykey) {\n\t\t\t\t\tmykey = false;\n\t\t\t\t\twhile (sss--) {\n\t\t\t\t\t\tttt += p.top();\n\t\t\t\t\t\tp.pop();\n\t\t\t\t\t}\n\t\t\t\t\tsum = max(ttt, sum);\n\t\t\t\t\tttt = 0;\n\t\t\t\t\tmemset(pan, 0, sizeof(pan));\n\t\t\t\t}\n\t\t\t\tq.push(a);\n\t\t\t\tscanf(\"%c %s %s\", &b, c, d);\n\t\t\t\tgetchar();\n\t\t\t\tif (pan[b - 'a']) {\n\t\t\t\t\tif (!key) printf(\"ERR\\n\");\n\t\t\t\t\tkey = true;\n\t\t\t\t}\n\t\t\t\tpan[b - 'a'] = 1;\n\t\t\t\tif (!key && kai && c[0] != 'n' && d[0] != 'n') {\n\t\t\t\t\tif (zhuan(c) > zhuan(d)) kai = false;\n\t\t\t\t\tp.push(0);\n\t\t\t\t} \n\t\t\t\telse if (!key && kai && c[0] != 'n' && d[0] == 'n') p.push(1);\n\t\t\t\telse if (!key && kai && c[0] == 'n' && d[0] != 'n') {\n\t\t\t\t\tkai = false;\n\t\t\t\t\tp.push(0);\n\t\t\t\t}\n\t\t\t\telse if (!key && kai && c[0] == 'n' && d[0] == 'n') p.push(0);\n\t\t\t}\n\t\t\tif (a == 'E') {\n\t\t\t\tmykey = true;\n\t\t\t\tsss++;\n\t\t\t\tif (!q.empty()) {\n\t\t\t\t\te = q.top();\n\t\t\t\t\tif (e == 'F') q.pop();\n\t\t\t\t} else {\n\t\t\t\t\tif (!key) printf(\"ERR\\n\");\n\t\t\t\t\tkey = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!key && q.empty()) {\n\t\t\t\tkai = true;\n\t\t\t\twhile (!p.empty()) {\n\t\t\t\t\tttt += p.top();\n\t\t\t\t\tp.pop();\n\t\t\t\t}\n\t\t\t\tsum = max(ttt, sum);\n\t\t\t\tttt = 0;\n\t\t\t\tmemset(pan, 0, sizeof(pan));\n\t\t\t\tsss = 0;\n\t\t\t}\n\t\t}\n\t\tif (!q.empty()) {\n\t\t\tmykai = true;\n\t\t\tprintf(\"ERR\\n\");\n\t\t}\n\t\tif (!mykai && !key) {\n\t\t\tif (sum == 0) {\n\t\t\t\tif (tim[0] - '0' == 1) printf(\"Yes\\n\");\n\t\t\t\telse printf(\"No\\n\");\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (sum == shu()) printf(\"Yes\\n\");\n\t\t\t\telse printf(\"No\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540050346,
        "uid": 98358,
        "name": "lsilencej",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u849f\u84bb\u9996\u7bc7\u9898\u89e3\uff0c\u6709\u70b9\u5bb3\u6015\u3002\n\n\u6d41\u8f93\u5165\u8f93\u51fa\u5728\u7ebf\u64cd\u4f5c\n\n\u8f93\u5165\u7684\u5c0f\u7ec6\u8282\u591a\u7684\u4ee4\u4eba\u7a92\u606f\uff0c\u53c8\u611f\u5230\u4e86\u51e0\u5e74\u524d\u88ab\u547d\u4ee4\u884c\u8d2a\u5403\u86c7\u7684\u8f93\u51fa\u652f\u914d\u7684\u6050\u60e7\n\n~~\u7136\u800c\u6211\u8fd8\u662f\u611f\u89c9\u5728\u7ebf\u7248\u672c\u66f4\u597d\u5199~~\n\n\u57fa\u672c\u4e0a\u5c31\u662f\u4e24\u4e2a\u5806\u6808\u4fdd\u5b58\u5355\u4e2a\u5faa\u73af\u7684\u4fe1\u606f\uff0c\u51e0\u4e2a\u53d8\u91cf\u7edf\u8ba1\u5d4c\u5957\u6570\u7b49\u4fe1\u606f\u3002\u7136\u540e\u75af\u72c2\u5339\u914d\u683c\u5f0f\u3002\n\n\u7ec6\u8282\u6ce8\u91ca\u91cc\u8bf4\u7684\u5e94\u8be5\u633a\u6e05\u695a\u4e86\u3002\n```cpp\n#include <iostream>\n#include <stack>\n#include <string>\nusing namespace std;\nstack<char> s;\nstack<int> s2;\n//0:\u6b63\u5e38o\uff08n\uff09 1:o\uff081\uff09 2:\u8fdb\u4e0d\u53bb \nbool myhash[150];\nbool boot=false;\nint t,n;\nint deepth,data,ans,rundeepth;\nint stopwork;\nchar c;\nint x,y;\nstring ml;\nvoid reboot()\n{\n\tfor(char i='a';i<='z';++i)\n\t{\n\t\tmyhash[i]=false;\n\t}\n\tboot=deepth=data=ans=rundeepth=stopwork=c=x=y=0;//boot\u7f6e0\u907f\u514d\u540e\u6765\u7684yes/no\u8f93\u51fa \n\tn++;//\u8fd9\u4e2a++\u4e0b\u9762\u6709\u89e3\u91ca\n\twhile(n)//\u6e05\u7a7a\u5269\u4f59\u8f93\u5165\n\t{\n\t\t//c=cin.get();\n\t\t//if(c=='\\n')\n\t\tif(cin.get()=='\\n')//\u51e0\u4e2a\\n\u5c31\u662f\u51e0\u884c\uff0c\u56e0\u4e3a\u5f53\u524d\u884c\u8c03\u7528reboot\u51fd\u6570\u524d\u5df2\u7ecf\u51cf\u53bb\u4e86\uff0c\u4f46\u662f\u6362\u884c\u7b26\u8fd8\u5728\uff0c\u6240\u4ee5\u7ed9\u5269\u4f59\u884c\u6570\uff08\u6362\u884c\u7b26\u6570\uff09+1 \n\t\t\t--n;\n\t\t//cout<<c<<flush;\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>t;\n\twhile(t--)\n\t{\n\t\tcin>>n;\n\t\tcin.get();\n\t\tcin.get();\n\t\tcin.get();\n\t\tif(cin.peek()=='n')//peek\u51fd\u6570\u53ef\u4ee5\u5077\u7aa5\u7f13\u51b2\u533a\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\u8fd8\u5728\u7f13\u51b2\u533a\u91cc\u4fdd\u7559\u5b83 \n\t\t{\n\t\t\tcin.get();\n\t\t\tcin.get();\n\t\t\tcin>>data;\n\t\t\tcin.get();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdata=0;\n\t\t\tcin>>ml;//\u5176\u5b9e\u8ddf\u4e0b\u9762\u51fa\u73b0\u7684while(cin.get()!='\\n');\u5e94\u8be5\u662f\u7b49\u4ef7\u7684 \n\t\t}\n\t\twhile(n--)\n\t\t{\n\t\t\tboot=true;\n\t\t\tcin>>c;\n\t\t\tif(c=='F')\n\t\t\t{\n\t\t\t\tdeepth++;\n\t\t\t\tcin>>c;\n\t\t\t\tif(myhash[c]==true)//\u53d8\u91cf\u5224\u91cd \n\t\t\t\t{\n\t\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\t\t\treboot();//\u91cd\u7f6e\u5404\u79cd\u72b6\u6001 \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmyhash[c]=true;//\u6807\u8bb0\u4e00\u4e0b\u53d8\u91cf\u4f7f\u7528\u60c5\u51b5 \n\t\t\t\ts.push(c);//\u5806\u6808\u4fdd\u5b58\u53d8\u91cf \n\t\t\t\tcin.get();\n\t\t\t\tif(cin.peek()=='n')\n\t\t\t\t{\n\t\t\t\t\tcin.get();\n\t\t\t\t\tcin>>c;\n\t\t\t\t\tif(c!='n')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!stopwork)//\u6807\u8bb0\u4e00\u4e0b\u7b2c\u51e0\u5c42\u5faa\u73af\u5f00\u59cb\u8fdb\u4e0d\u53bb\u4e86\uff0c\u5982\u679c\u76ee\u524d\u8fd9\u4e2a\u5faa\u73af\u65e9\u5c31\u8fdb\u4e0d\u53bb\u4e86\u5c31\u4e0d\u66f4\u65b0 \n\t\t\t\t\t\t\tstopwork=deepth;\n\t\t\t\t\t\ts2.push(2);\n\t\t\t\t\t\twhile(cin.get()!='\\n');//\u628a\u76ee\u524d\u884c\u53ef\u80fd\u7684 \u5269\u4f59\u5b57\u7b26\u5403\u6389\uff0c\u4e0d\u71366,7\u70b9\u4f1a\u70b8 \n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\ts2.push(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcin>>x;\n\t\t\t\t\tcin.get();\n\t\t\t\t\tif(cin.peek()!='n')\n\t\t\t\t\t{\n\t\t\t\t\t\tcin>>y;\n\t\t\t\t\t\tif(x>y)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ts2.push(2);\n\t\t\t\t\t\t\tif(!stopwork)//\u540c\u4e0a \n\t\t\t\t\t\t\t\tstopwork=deepth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ts2.push(1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcin.get();\n\t\t\t\t\t\tif(!stopwork)//\u5982\u679c\u8fd9\u4e2a\u5faa\u73af\u662fo\uff08n\uff09\u7684\uff0c\u8fd8\u80fd\u88ab\u8fd0\u884c\uff0c\u5c31\u66f4\u65b0\u76ee\u524do\uff08n\uff09\u5faa\u73af\u6df1\u5ea6\uff0c\u66f4\u65b0\u7b54\u6848 \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trundeepth++;\n\t\t\t\t\t\t\tans=max(rundeepth,ans);\n\t\t\t\t\t\t\ts2.push(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ts2.push(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//deepth--;\n\t\t\t\tif(stopwork==deepth)//\u65e2\u7136\u76ee\u524d\u8fd9\u4e2a\u6b63\u5728\u9000\u51fa\u7684\u5faa\u73af\u662f\u6700\u65e9\u7684\u4e0d\u53ef\u8fdb\u5165\u5faa\u73af\uff0c\u90a3\u4e48\u524d\u9762\u7684\u90fd\u53ef\u4ee5\u8fdb\u5165\uff0c\u6240\u4ee5 \u628a\u6807\u5fd7\u4f4d\u7f6e0 \n\t\t\t\t{\n\t\t\t\t\tstopwork=0;\n\t\t\t\t}\n\t\t\t\tif(s.empty())//E\u6bd4\u524d\u9762\u7684F\u8fd8\u591a \n\t\t\t\t{\n\t\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\t\t\treboot();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tc=s.top();\n\t\t\t\ts.pop();\n\t\t\t\tmyhash[c]=false;//\u53d8\u91cf\u540d\u51fa\u6808\u5e76\u4e14 \u5220\u9664\u4f7f\u7528\u8bb0\u5f55 \n\t\t\t\tx=s2.top();\n\t\t\t\ts2.pop();//\u770b\u770b\u73b0\u5728\u6b63\u5728\u9000\u51fa\u7684\u5faa\u73af\u7684\u7c7b\u578b \n\t\t\t\tif(!x)//\u73b0\u5728\u9000\u51fa\u4e00\u4e2a o\uff08n\uff09\u5faa\u73af\uff0c\u6240\u4ee5o\uff08n\uff09\u5faa\u73af\u7684\u6df1\u5ea6\u8981-1\uff0c\u65e2\u7136\u662f\u53d8\u5c0f\uff0c\u5c31\u4e0d\u9700\u8981\u66f4\u65b0\u7b54\u6848\u4e86 \n\t\t\t\t\trundeepth--;\n\t\t\t\tdeepth--;//\u603b\u5faa\u73af\u6df1\u5ea6-1 \n\t\t\t}\n\t\t}\n\t\tif(boot)//\u5982\u679c\u90fderr\u4e86\uff0c\u5c31\u6ca1\u6709yes/no\u4ec0\u4e48\u4e8b\u4e86 \n\t\t{\n\t\t\tif(deepth!=0)//\u6709\u5faa\u73af\u6ca1\u6709\u88abE\u7ed3\u675f\uff08\u5176\u5b9es2.empty\u4e5f\u80fd\u7528\u6765\u5224\u65ad\u8fd9\u4e2a\uff09 \n\t\t\t\tcout<<\"ERR\"<<endl;\n\t\t\telse \n\t\t\t\tcout<<(ans==data?\"Yes\":\"No\")<<endl;//\u5224\u65ad\u7b54\u6848\u5bf9\u9519 \n\t\t\treboot();//\u91cd\u7f6e\u5404\u79cd\u72b6\u6001 \n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536500671,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u975eC/C++\u7684pascal\u9898\u89e3\n\n\u65b9\u6cd5\u662f\u6808~~\uff08\u8ddf\u6211\u8bfb\uff1a\u53ea\u5b89zhan\uff09~~\n\n### \u9884\u70ed\uff1a\n\n\u5728\u505a\u4e4b\u524d\u8981\u5148\u77e5\u9053\u8fd9\u4e2aso eazy \u7684\u516c\u5f0f\uff1a(n^x)*(n^y)=n^(x+y)   \n\n\u6211\u4eec\u4ee5\u6b64\u4e3a\u57fa\u7840\u6765\u505a\u8fd9\u9053\u9898\n\n//////////////////////////////////////\n\n### \u601d\u8def\uff1a\n\n\u6211\u4eec\u7528\u4e00\u4e2astack\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5faa\u73af\u7684\u53d8\u91cf\u540d\u548c\u590d\u6742\u5ea6\uff081,0,-1\uff09\uff0c1\u8868\u793a\u8be5\u8bed\u53e5\u7684\u590d\u6742\u5ea6\u4e3aO(n)\uff0c0\u8868\u793a\u8be5\u8bed\u53e5\u7684\u590d\u6742\u5ea6\u4e3aO(1)\uff0c-1\u8868\u793a\u8be5\u8bed\u53e5\u8bed\u6cd5\u9519\u8bef\uff0c\u4e4b\u540e\u7684\u5faa\u73af\u90fd\u4e0d\u4f1a\u6267\u884c\uff0c\u90a3\u4e48\u5728\u6700\u540eE\u53e5\u8ba1\u7b97\u590d\u6742\u5ea6\u65f6\uff0c\u53ea\u8981\u5c06\u6808\u4e2d\u6bcf\u4e2a\u8bed\u53e5\u7684\u590d\u6742\u5ea6\u7d2f\u52a0\u8d77\u6765\u5c31\u662f\u5f53\u524d\u8bed\u53e5\u7ed3\u675f\u65f6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u5148\u5206\u89e3\u51faO(n^w)\uff0c\u5c06\u6307\u6570\u8bb0\u4e3aw\n\n\u518d\u8bfb\u5165\u5faa\u73af\u4f53\uff0c\u5206\u4e3aF\u53e5\u548cE\u53e5\uff0c\u7528maxt\u8bb0\u5f55\u6700\u5927\u7684\u590d\u6742\u5ea6\n\n\u6700\u540e\u6bd4\u8f83w\u548cmaxt\uff08\u522b\u5fd8\u4e86\u5224\u7f16\u8bd1\u9519\u8bef\u54e6\uff09\u8f93\u51fa\u7ed3\u679c\n\n///////////////////////////////////////\n\n### F\u53e5\u5904\u7406\uff1a\n\n\u4e00.\u7528\u4e00\u4e2a\u6570\u7ec4used\u8bb0\u5f55\u53d8\u91cf\u540d\u662f\u5426\u88ab\u4f7f\u7528\uff0c\u5982\u679c\u591a\u6b21\u88ab\u4f7f\u7528\uff0c\u5219\u5728\u6700\u540e\u76f4\u63a5\u8f93\u51faERR\uff1b\n\n\u4e8c.\u5206\u79bb\u51fa\u5faa\u73af\u7684\u5f00\u59cb\u53d8\u91cfx\u548c\u7ed3\u675f\u53d8\u91cfy\n\n   \u8fd9\u91cc\u5206\u4e94\u79cd\u60c5\u51b5(\u8fd9\u91cc\u5c06\u5e38\u6570\u8bbe\u4e3aa\u3001b)\n   \n   1.x=n,y=a\uff1astack[i]=-1;\n   \n   2.x=n,y=n:stack[i]=0;\n   \n   3.x=a,y=n:stack[i]=1\n   \n   4.x=a,y=b, \u4e14 x<=y : stack[i]=0\n   \n   5.x=a,y=b, \u4e14 x>y \uff1astack[i]=-1\n\n/////////////////////////////////////\n   \n### E\u53e5\u5904\u7406\uff1a\n   \n   1.\u8ba1\u7b97\u7d2f\u52a0\u590d\u6742\u5ea6\uff0c\u9047\u5230-1\u76f4\u63a5\u7ed3\u675f\uff0c\u56e0\u4e3a\u8bed\u6cd5\u9519\u8bef\u4e4b\u540e\u7684\u8bed\u53e5\u90fd\u4e0d\u4f1a\u6267\u884c\uff1b\n   \n   2.\u6bd4\u8f83\u66f4\u65b0max\uff1b\n   \n   3.\u53d8\u91cf\u4f7f\u7528\u8fd8\u539f\uff1b\n   \n   4.tail-1  \u6b64\u5904\u82e5\u5728\u4efb\u610f\u65f6\u523btail<0\u6216\u6700\u540e\u65f6\u523btail>0,\u5219\u6700\u540e\u76f4\u63a5\u8f93\u51faERR\n   \n/////////////////////////////////////\n   \n   \u6700\u540e\u6bd4\u8f83max\u4e0ew\uff0c\u82e5\u76f8\u7b49\uff0c\u5219\u8f93\u51faYes,\u53cd\u4e4b\u8f93\u51faNo\n   \n### \u5177\u4f53\u89e3\u91ca\u8be6\u89c1\u4ee3\u7801\n\n```pascal  \n\nvar stack:array[-100..100] of longint;//\u590d\u6742\u5ea6\n    stack1:array[-100..100] of char;//\u53d8\u91cf\u540d\n    used:array['a'..'z'] of longint;      s,x1,y1:string;\n    i,j,z,n,l,w,po,t,maxt,tail,x,y:longint; f:boolean;\nbegin\n  assign(input,'1.in'); reset(input);\n  assign(output,'1.out'); rewrite(output);\n  readln(n);\n  for z:=1 to n do\n  begin\n    fillchar(used,sizeof(used),false);//\u6ce8\u610f\u6bcf\u6b21\u5224\u65ad\u90fd\u8981\u8d4b\u521d\u503c\n    readln(s);\n    po:=pos(' ',s);\n    val(copy(s,1,po-1),l);//\u5206\u79bb\u51fal\n    po:=pos('^',s);\n    if po=0 then w:=0\n            else val(copy(s,po+1,length(s)-po-1),w);//\u5206\u79bb\u51fa\u590d\u6742\u5ea6\n    maxt:=0; f:=true; tail:=0;\n    for i:=1 to l do\n    begin\n      readln(s);//\u8f93\u5165\u8bed\u53e5\n      if s[1]='F' then//F\u53e5\u5904\u7406\n      begin\n        delete(s,1,2);\n        if not(used[s[1]]) then used[s[1]]:=true\n                           else f:=false;//\u5224\u65ad\u53d8\u91cf\u540d\u662f\u5426\u91cd\u590d\n        inc(tail);\n        stack1[tail]:=s[1];//\u5165\u6808\n        delete(s,1,2);\n        po:=pos(' ',s);\n        x1:=copy(s,1,po-1);//\u5206\u79bbx\n        y1:=copy(s,po+1,length(s)-po);//\u5206\u79bby\n        if x1='n' then begin\n                       if y1='n' then stack[tail]:=0\n                                 else stack[tail]:=-1;\n                       end\n                else if y1='n' then stack[tail]:=1\n                               else begin\n                                    val(x1,x); val(y1,y);\n                                    if x<=y then stack[tail]:=0\n                                            else stack[tail]:=-1;\n                                    end;//\u5224\u65ad\u672c\u8bed\u53e5\u7684\u590d\u6742\u5ea6\uff0c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\n      end;\n      if s[1]='E' then//E\u53e5\u5904\u7406\n      begin\n        t:=0;  j:=1;\n        while (j<=tail)and(stack[j]<>-1) do\n        begin\n          t:=t+stack[j];\n          j:=j+1;\n        end;//\u8ba1\u7b97\u590d\u6742\u5ea6\n        used[stack1[tail]]:=false;//\u53d8\u91cf\u540d\u91cd\u7f6e\n        if t>maxt then maxt:=t;//\u6bd4\u8f83\u5f97\u51fa\u66f4\u201c\u5927\u201d\u7684\u590d\u6742\u5ea6\n        if tail<=0 then f:=false;//\u5224\u65ad\u662f\u5426\u9519\u8bef\n        dec(tail);\n      end;\n    end;\n    if (tail=0)and(f) then\n    begin\n      if maxt=w then writeln('Yes')\n                else writeln('No');\n    end\n    else writeln('ERR');\n  end;\n  close(input); close(output);\nend.\n\n```\n\n### \u8fd9\u9053\u9898\u76ee\u5751\u70b9\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u8bf7\u8c28\u614e\u8003\u8651\u6240\u6709\u60c5\u51b5\uff01",
        "postTime": 1535792101,
        "uid": 38384,
        "name": "I_promise",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "~~\u8fd9\u662f\u4e00\u9053\u5feb\u8bfb\u9898~~\n\u4e3b\u8981\u8003\u5bdf\u5bf9\u86c7\u76ae\u5feb\u8bfb\u7684\u5e94\u7528\n\u8fd9\u9898\u7684\u6570\u636e\u5904\u7406\u663e\u7136\u4e0d\u96be\uff0c\u5173\u952e\u5c31\u662f\u8bfb\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u86c7\u76ae\u5feb\u8bfb\u89e3\u51b3\u6389\n\n\u5feb\u8bfb1:\u53ea\u8bfb\u6570\u5b57\uff0c\u5ffd\u7565\u5176\u4ed6\n```c++\nI LL read()\n{\n\tR LL x;R bool f;R char c;\n\tfor (f=0; (c=getchar())<'0'||c>'9'; f=c=='-');\n\tfor (x=c-'0'; (c=getchar())>='0'&&c<='9'; x=(x<<3)+(x<<1)+c-'0');\n\treturn f?-x:x;\n}\n```\n\u5b8f\u5b9a\u4e49\u770b\u5b8c\u6574\u4ee3\u7801\uff0c\u8c22\u8c22\n\n\u5feb\u8bfb2:\u53ea\u8bfb\u5b57\u6bcd\uff0c\u5ffd\u7565\u5176\u4ed6\n```c++\nI char readc()\n{\n\tchar c;\n\tfor (;((c=getchar())<'A'||c>'Z')&&(c<'a'||c>'z'););\n\treturn c;\n}\n```\n\n\u5feb\u8bfb2:\u53ea\u8bfb\u6570\u5b57\u548c\u5b57\u6bcd\uff0c\u5ffd\u7565\u5176\u4ed6\n```c++\nI LL readcd()\n{\n\tR LL x;R bool f;R char c;\n\tfor (f=0; ((c=getchar())<'0'||c>'9')&&(c<'A'||c>'Z')&&(c<'a'||c>'z'); f=c=='-');\t\n\tif(c>='0'&&c<='9')\n\t\tfor (x=c-'0'; (c=getchar())>='0'&&c<='9'; x=(x<<3)+(x<<1)+c-'0');\n\telse\n\t\tx=c;\n\treturn f?-x:x;\n}\n```\n\u8bf7\u4ed4\u7ec6\u7406\u89e3\u8fd93\u4e2a\u5feb\u8bfb\n\n\u4e0b\u9762\u5c31\u662f\u86c7\u76ae\u4ee3\u7801\u4e86\n```c++\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include<cstring>\n#include<string>\n#include<cctype>\n#include<cstdlib>\n#include<map>\n#define debug(x) cerr<<\"\\tdebug:\"<<#x<<\"=\"<<x<<endl\n#define debugg(x,y) cerr<<\"\\tdebug;\"<<x<<\":\"<<#y<<\"=\"<<y<<endl\n#define debugzu(x,a,b) \tcerr<<\"\\tdebug:\"<<#x<<\"=\\n\\t\";for(int i=a;i<b;i++)cerr<<x[i]<<\" \";fprintf(stderr,\"\\n\");\n#define debugerzu(x,a,b,c,d) \tcerr<<\"\\tdebug:\"<<#x<<\"=\\n\\t\";for(int i=a;i<b;i++,fprintf(stderr,\"\\n\\t\"))for(int j=c;j<d;j++)cerr<<x[i][j]<<\" \";fprintf(stderr,\"\\n\");\n#define R register\n#define LL long long\n#define I inline\nusing namespace std;\nI LL read()\n{\n\tR LL x;R bool f;R char c;\n\tfor (f=0; (c=getchar())<'0'||c>'9'; f=c=='-');\n\tfor (x=c-'0'; (c=getchar())>='0'&&c<='9'; x=(x<<3)+(x<<1)+c-'0');\n\treturn f?-x:x;\n}\nI char readc()\n{\n\tchar c;\n\tfor (;((c=getchar())<'A'||c>'Z')&&(c<'a'||c>'z'););\n\treturn c;\n}\nI LL readcd()\n{\n\tR LL x;R bool f;R char c;\n\tfor (f=0; ((c=getchar())<'0'||c>'9')&&(c<'A'||c>'Z')&&(c<'a'||c>'z'); f=c=='-');\t\n\tif(c>='0'&&c<='9')\n\t\tfor (x=c-'0'; (c=getchar())>='0'&&c<='9'; x=(x<<3)+(x<<1)+c-'0');\n\telse\n\t\tx=c;\n\treturn f?-x:x;\n}\nbool used[300];\nchar cengused[300];\nbool cengplas[300];\nbool setjump[300];\nbool hadsetjump[300];\nint main()\n{\n \tfreopen(\"3952.in\",\"r\",stdin);\n// \tfreopen(\"3952.out\",\"w\",stdout);\n\tint n=read(); //\u8bfb\u5165n\uff0c\u4e0d\u4e0d\u89e3\u91ca\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<300;j++)\n\t\t\tcengused[j]=0,used[j]=hadsetjump[j]=cengplas[j]=setjump[j]=false;\t\t\n\t\tint m=read();//\u7a0b\u5e8f\u884c\u6570\u8bfb\u5165\n\t\treadc();//\u8bfb\u6389O\n\t\tint on=readcd();//\u8bfb\u5165\u6570\u5b57\u6216\u5b57\u7b26\n\t\ton=on==1?0:read();//\u5982\u679c\u662f1\u8bc1\u660e\u662fO(1)\u7684\u60c5\u51b5\u7b49\u4ef7\u4e8en^0\u5982\u679c\u4e0d\u662f1\u5219\u518d\u8bfb\u4e00\u4e2a\u6570\u5b57\u53caO(n^k)\u7684k\n\t\t\t\t\n\t\tint ceng=0,ans=0,ansmax=0;\n\t\tbool errflag=false,jump=false;\n\t\tfor(int j=0;j<m;j++)\n\t\t{\n\t\t\tif(readc()=='F')//\u5224\u65adF\n\t\t\t{\n\t\t\t\tchar c=readc();//\u8bfb\u5165\u5faa\u73af\u53d8\u91cf\n//\t\t\t\tdebug(c);debug(used[c]);\n\t\t\t\tif(used[c])//\u5224\u91cd\n\t\t\t\t\terrflag=true;\n\t\t\t\tused[c]=true;\n\t\t\t\tcengused[ceng]=c;\n\t\t\t\tint from=readcd(),to=readcd();//\u7136\u540e\u8fd9\u91cc\u5c31\u6bd4\u8f83\u7384\u5b66\u4e86\u53ef\u80fd\u662f\u5b57\u7b26\u4ea6\u53ef\u80fd\u662f\u6570\u5b57\uff0c\u521a\u597d\u7528readcd()\u89e3\u51b3\u6389\n//\t\t\t\tdebug(from);debug(to);\n\t\t\t\tif((!jump)&&(from!='n'&&to=='n'))//\u5bf9n\u8fdb\u884c\u5904\u7406\n\t\t\t\t\tansmax=max(++ans,ansmax),cengplas[ceng]=true;//\u5e38\u6570-n\u7684\u60c5\u51b5\uff0c\u7b54\u6848\u8981\u52a0\n\t\t\t\telse if((from=='n'&&to!='n')||(from>to))//n-\u5e38\u6570\u6216\u524d\u4e00\u4e2a\u5e38\u6570\u6bd4\u8f83\u5927\u5c31\u4e0d\u7ee7\u7eed\u5faa\u73af\u4e86\n\t//\u7279\u522b\u7684\u5982\u679c\u90fd\u662f\u5e38\u6570\u5207\u524d\u4e00\u4e2a\u8f83\u5c0f\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u4e0d\u5904\u7406\n    setjump[ceng]=true,hadsetjump[ceng]=jump,jump=true;\n//\t\t\t\tdebug(jump);debug(ans);debug(ansmax);\n\t\t\t\tceng++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tceng--;\n\t\t\t\tif(!hadsetjump[ceng])//\u86c7\u76ae\u7279\u5224\u5904\u7406\u5faa\u73af\u9000\u51fa\u7684\u60c5\u51b5\n\t\t\t\t\tjump=false;\n\t\t\t\tsetjump[ceng]=false;\n\t\t\t\tif(cengplas[ceng])\n\t\t\t\t\tans--,cengplas[ceng]=false;\n\t\t\t\tused[cengused[ceng]]=false;\n\t\t\t}\n\t\t}\n\t\terrflag=ceng==0?errflag:true;//\u5982\u679c\u5c42\u6570\u5f520\u5219\u8bc1\u660e\u5339\u914d\uff0c\u5426\u5219\u5931\u966a\uff0c\u5bf9errflag\u5904\u7406\n\t\tif(errflag)//\u8f93\u51fa\u7b54\u6848\uff0c\u5b8c\u7ed3\u6492\u82b1\n\t\t\tprintf(\"ERR\\n\");\n\t\telse if(ansmax==on)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\t\n\t}\n\n\n\tfclose(stdin);\n\tfclose(stdout);\n \treturn 0;\n}\n\n\n```",
        "postTime": 1534603245,
        "uid": 22926,
        "name": "\u706b\u661f\u5927\u738b",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\n    \u6211\u7684\u4ee3\u7801\u53ef\u80fd\u4e0e\u4e0a\u9762\u7684\u5927\u4f6c\u6709\u70b9\u50cf \u4f46\u662f\u4e0a\u9762\u5927\u4f6c\u7684\u4ee3\u7801\u88ab\n    hack\u4e86\uff0c\u662f\u6709\u95ee\u9898\u76843\u4e2a\u70b9\u5426\u8fc7\u4e0d\u4e86 \u6240\u4ee5\u6211\u53d1\u4e00\u7bc7\n    AC\u4e86\u7684\u6211\u4fee\u6539\u91cd\u65b0\u5199\u7684\u7684\u4ee3\u7801\u51fa\u6765\n    \n    \u8fd9\u9053\u9898\u4e00\u770b\u5f88\u590d\u6742\uff0c\u6a21\u62df\u9898\u6211\u505a\u7684\u4e0d\u591a\uff0c\u590d\u6742\u7684\u5f88\u5c11\uff0c\u6211\u4e5f\u4e0d\u592a\u4ed4\u7ec6\uff0c\u6bd4\u8f83\u7c97\u5fc3\uff1b\u5c31\u6539\u4e86\u5f88\u4e45\u8fd8\u662f\u9519\u7684\uff1b\n    \n     \u65b9\u6cd5\uff1a\u6808\u6a21\u62df\uff0c\u6216\u8005\u9012\u5f52\u51fd\u6570\u89e3\u51b3\n     \u6ce8\u610f\uff1a\u4ed4\u7ec6\u770b\u5b8c\u9898\u610f\uff0c\u4ed4\u7ec6\u9605\u8bfb\uff0c\u7406\u89e3\u9898\u610f\uff0c\u4e0d\u8981\u614c,\u4ed4\u7ec6\u6a21\u62df\uff1b\n     \n     1.\u5faa\u73af int i=x,i<=y;i++ x>y\u80af\u5b9a\u662f\u9519\u8bef\u7684\uff1b\n     \u5b57\u7b26\u4e32\u8bfb\u5165\u7684\u65f6\u5019x\u4e0ey\u6bd4\u8f83\u5927\u5c0f\u7684\u8bdd\uff0c\u4e0d\u4ec5\u8981\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\u8fd8\u8981\u6bd4\u8f83\u957f\u5ea6\uff0c\u59827\u4e0e44 7\u7684\u5b57\u5178\u5e8f\u5927\u4e8e44\u56e0\u4e3a\u662f\u4e00\u4f4d\u4e00\u4f4d\u6bd4\u8f83\u7684.\n    2.\u5faa\u73af x==y \u8df3\u8fc7\n    3.X\u57280-9\u4e4b\u5185 y==n\u5e76\u4e14 x!>y\uff1bsum++\u8868\u793a\u590d\u6742\u5ea6n^(sum++);\n     4.X==n&&y\u57280-9\uff1b\u6807\u8bb0 \u4e0d\u6267\u884c sum++\uff1b\n    5.\u6211\u8bbe\u7f6e\u4e86\u4e00\u4e2axh\u8868\u793a\u8fdb\u5165\u4e86\u591a\u5c11\u4e2aF\u8fdb\u884c\u4e86\u591a\u5c11\u6b21\u5faa\u73af \u6ca1\u6709\u9000\u51fa\u7684E\u4e5f\u662f\u9519\u8bef\uff1b\n\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstring>\n#define N 600\nusing namespace std;\nint main()\n{   //freopen(\"complexity.in\",\"r\",stdin);\n    //freopen(\"complexity.out\",\"w\",stdout);\n    int cz=0,sum=0,ans=0,cnt=0,xh=0;\n    int vis[N];\n    bool flag,z;//flag\u6807\u8bb0\n    char ysx,j;\n    string F,x,y;\n    int T;\n    cin>>T;//t\u8868\u793a\u591a\u5c11\u7ec4\u7a0b\u5e8f\n    while(T--)\n    {\n       int l;//l\u6bcf\u7ec4\u7a0b\u5e8f\u8868\u793a\u591a\u5c11\u884c\u7a0b\u5e8f\n       cin>>l;\n       cin>>F;//F\u8bfb\u5165\u7684\u662f\u6240\u7ed9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n       cz=0;\n if(F==\"O(1)\")cz=0;//\u5982\u679c\u8bfb\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff081\uff09cz\u6807\u8bb0\u4e3a0\u65b9\u4fbf\u4e0e\u4e0b\u9762\u6bd4\u8f83\u5bf9\u5e94\n       else\n       {\n        for(int i=0;i<F.size();i++)\n         if(F[i]>='0'&&F[i]<='9')\n          cz=cz*10+F[i]-'0';//\u5982\u679c\u4e0d\u662f \u63d0\u53d6\u51fa\u590d\u6742\u5ea6n^m\u91cc\u9762\u7684\u6570\u5b57\n      }\n       sum=ans=xh=0;\n       flag=true;//\u521d\u59cb\u72b6\u6001\u7a0b\u5e8f\u6b63\u786e\n       z=true;//\u521d\u59cb\u72b6\u6001\n       memset(vis,0,sizeof(vis));\n       while(l--)\n       {\n         cin>>ysx;\n         if(ysx=='F'){//\u5982\u679c\u662fF\u5faa\u73af\u5c42\u6570+1\uff0cxh++\uff1b\n           xh++;\n         cin>>j>>x>>y; //\u8f93\u5165\u53d8\u91cf\u540d\uff1b\n          vis[j]++;//\u6253\u4e0a\u6807\u8bb0\n          if(vis[j]>1)//\u5982\u679c\u5927\u4e8e1\u8868\u793a\u91cd\u590d\u53d8\u91cf\u540d\u6240\u4ee5\u56e0\u8be5\u662f\u9519\u7684\n          {\n           flag=false;//\u6253\u4e0a\u6807\u8bb0\u7a0b\u5e8f\u9519\u8bef\n           sum=0;//\u590d\u6742\u5ea6\u6e05\u96f6\n           memset(vis,0,sizeof(vis));//\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\n          }\n          if(x==\"n\"&&y==\"n\")continue;\n          else if(x[0]>='0'&&x[0]<='9')\n          {\n          \tif(y[0]>='0'&&y[0]<='9')\n          \t{\n          \t    if(x>y&&x.size()>=y.size())\n                  z=false;\t\n                  continue;\n            }\n            else if(y==\"n\"&&z)\n                sum++;\n          }\n          else if(x==\"n\"&&y[0]>='0'&&y[0]<='9')\n          \tz=false;\n          else \n            continue;\n        }\n        else \n        {//\uff01\uff01\uff01\u5173\u952e\u5982\u679csum\u548cx\u76f8\u7b49\u8868\u793a\u590d\u6742\u6ca1\u9519\uff0cxh-1>1\u8868\u793a\u6709\u5faa\u73af\u53ef\u4ee5\u9000\u51fa\n        //\u56e0\u9047\u89c1E\u53ea\u662f\u9000\u51fa\u4e00\u91cd\u5faa\u73af\u590d\u6742\u5ea6\u8fd8\u8981\u7d2f\u52a0\u6240\u4ee5\u5148\u8ba9sum\u4e0d\u6e05\u96f6\n         if(sum==xh&&ysx=='E'&&xh-1>=0) \n         {  ans=max(ans,sum);//\u5148\u66f4\u65b0\u7b54\u6848\n         \txh--;//\u9000\u51fa\u4e00\u5c42\u5faa\u73af\n         \tsum=xh;//\u590d\u6742\u5ea6-1\uff1b\n//\u6ca1\u9000\u5b8c\u662f\u8981\u7d2f\u52a0\u7684\u76f8\u5f53\u7b2c\u4e09\u5c42\u6709\u4e00\u4e2a\u4e00\u91cd\u5faa\u73af\u548cn\u91cd\u5faa\u73af,\u590d\u6742\u5ea6\u56e0\u8be5\u662fn+3\n             memset(vis,0,sizeof(vis));//\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\u8fd9\u4e2a\u7b2c\u4e5d\u4e2a\u70b9\u6709\u70b9\u6bd2\u7624\n         \t//cout<<sum<<\"----------------\"<<endl;\n         \tcontinue;\n         }\n         xh--;//\u4e0esum\u4e0d\u5339\u914d\u53ef\u80fd\u662f\u6709\u5e38\u6570\u5faa\u73af\u4e5f\u9000\u51fa\u4e00\u91cd\u5faa\u73af\n         if(xh<0)\n         {\n         \tflag=false;//\u6807\u8bb0\u4e0a\u9519\u8bef\n         \tsum=0;//\u6e05\u96f6\u590d\u6742\u5ea6\n         \tmemset(vis,0,sizeof(vis));//\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\u8868\u793a\u5faa\u73af\u9000\u5b8c\u4e86\n         }\n         z=true;//\u6062\u590d\u521d\u59cb\u72b6\u6001\n         memset(vis,0,sizeof(vis));\n         ans=max(ans,sum);//\u6700\u5927\u7684\u4e3a\u603b\u65f6\u95f4\u590d\u6742\u5ea6\n         sum=0;\n        }\n      }\n      if(!flag)cout<<\"ERR\\n\";//\u5982\u679c\u6807\u8bb0\u4e0d\u4e3a\u771f\u8bf4\u660e\u8fd0\u884c\u65f6\u4f1a\u53d1\u751f\u9519\u8bef\uff1b\n      if(flag&&xh>0)cout<<\"ERR\\n\";//\u6807\u8bb0\u4e3a\u771f\u4f46\u662f\u5faa\u73af\u6ca1\u9000\u5b8c\u4e5f\u662f\u8fd0\u884c\u9519\u8bef\n      if(xh==0&&ans==cz&&flag)cout<<\"Yes\\n\";\n//\u6807\u8bb0\u9000\u5b8c\u5e76\u4e14\u590d\u6742\u5ea6\u548c\u6240\u8bf4\u4e00\u6837\u6807\u8bb0\u4e3a\u771f\uff0c\u53ef\u4ee5\u8fd0\u884c\n//\u8bf4\u660e\u662f\u5bf9\u7684\n      else if(xh==0&&flag)//\u5982\u679c\u590d\u6742\u5ea6\u4e0d\u662f\u6240\u8bf4\u4f46\u662f\u53ef\u4ee5\u8fd0\u884c\u5c31\u8bf4\u660e\u6240\u8bf4\u590d\u6742\u5ea6\u9519\u8bef\n       cout<<\"No\\n\";\n    }\n    return 0;\n}\n```\n  \u6700\u540e%%%\u5927\u4f6c\u6768\u795e\u4ed9 YYZ \u5927\u4f6c",
        "postTime": 1533316783,
        "uid": 59704,
        "name": "FakeZGR",
        "ccfLevel": 0,
        "title": "\u65f6\u95f4\u590d\u6742\u5ea6 NOIP2017"
    },
    {
        "content": "\u91cd\u505aNOIp2017\u3002\u3002\u3002\u770b\u81ea\u5df1\u53c8\u5b66\u4e86\u5927\u534a\u5e74\u80fd\u505a\u591a\u5c11\u5206\u3002\u3002\u3002\n\n\u5927\u6a21\u62df\u9898\uff0c\u5bf9F\u6307\u4ee4\u9700\u8981\u5f88\u591a\u5206\u7c7b\u3002\u6211\u7528\u4e86\u4e24\u4e2a\u6808\u5206\u522b\u5b58\u50a8\u8fdb\u884c\u5230\u67d0\u4e00\u91cdF\u5faa\u73af\u65f6\u7684\u53d8\u91cf\u4f7f\u7528\u60c5\u51b5\uff08\u914d\u5408vis\u6570\u7ec4\uff09\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u8fd9\u4e2aF\u5faa\u73af\u800c\u8a00\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u6bcf\u4e2aF\u76f8\u5f53\u4e8e\u538b\u6808\uff0c\u6bcf\u4e2aE\u76f8\u5f53\u4e8e\u5f39\u6808\u3002\n\n\u8fd9\u91cc\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u5c31\u662f\u5224ERR\u4e86\uff0c\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u4e2a\u662f\u5224\u65ad\u662f\u4e0d\u662f\u5f39\u4e86\u4e00\u4e2a\u7a7a\u6808\uff0c\u8fd8\u6709\u4e00\u4e2a\u76f4\u63a5\u67e5\u8be2vis\u6570\u7ec4\u3002\n\n\u601d\u7ef4\u96be\u5ea6\u548c\u7f16\u7a0b\u96be\u5ea6\u90fd\u4e0d\u662f\u592a\u5927\uff0c\u4e0d\u8fc7\u7f16\u7a0b\u65f6\u8981\u601d\u8003\u5f88\u591a\u7ec6\u8282\uff0c\u5904\u7406\u4e0d\u5f53\u5c31\u4f1aWA...\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint ttt,l;\nint ogiven;\nint val(char *s)\n{\n\tint pos=0,ans=0;\n\twhile(s[pos])\n\t{\n\t\tans=ans*10+s[pos++]-'0';\n\t}\n\treturn ans;\n}\nint stk[1001];//\u5b58\u653e\u6808\u9876\u5b57\u6bcd\uff080~25\uff09 \nint stkk[1001];//\u5b58\u653e\u6700\u6df1\u5c42\u7684\u65f6\u95f4\u590d\u6742\u5ea6\nbool vis[26];//\u5b58\u653e\u5b57\u6bcd\u662f\u5426\u5df2\u7ecf\u88ab\u4f7f\u7528 \nint tp=0; \nvoid in1()\n{\n\tchar c;\n\tscanf(\"%d O(\",&l);\n\tcin>>c;\n\tif(c=='n')\n\t\tscanf(\"^%d)\",&ogiven);\n\telse\n\t{\n\t\tscanf(\")\");\n\t\togiven=0;\n\t}\n\tmemset(stk,0,sizeof(stk));\n\tmemset(stkk,0,sizeof(stkk));\n\tmemset(vis,0,sizeof(vis));\n\ttp=0;\n\treturn;\n}bool err;\nchar I,fr[6],to[6];\nint omax;\nvoid in2()\n{\n\tomax=-1;\n\tchar c;\n\terr=false;\n\twhile(l--)\n\t{\n\t\tcin>>c;\n\t\tif(c=='E')if(!err)\n\t\t{\n\t\t\tif(tp==0)err=true;\n\t\t\telse\n\t\t\t{\n\t\t\t\tomax=max(stkk[tp],omax);\n\t\t\t\tvis[stk[tp]]=false;\n\t\t\t\tstk[tp]=0;\n\t\t\t\tstkk[tp--]=0;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\telse continue;\n\t\tcin>>I>>fr>>to;\n\t\tif(err)\n\t\t\tcontinue;\n\t\tI-='a';\n\t\tif(vis[I])\n\t\t{\n\t\t\terr=true;\n\t\t\tcontinue;\n\t\t}\n\t\tstk[++tp]=I;\n\t\tvis[I]=true;\n\t\tif(stkk[tp-1]==-1)\n\t\t\tstkk[tp]=-1;\n\t\telse if(fr[0]=='n'&&to[0]=='n')\n\t\t\tstkk[tp]=stkk[tp-1];\n\t\telse if(fr[0]=='n')\n\t\t\tstkk[tp]=-1;\n\t\telse if(to[0]=='n')\n\t\t\tstkk[tp]=stkk[tp-1]+1;\n\t\telse if(val(fr)>val(to))\n\t\t\tstkk[tp]=-1;\n\t\telse\n\t\t\tstkk[tp]=stkk[tp-1];\n\t}\n\tif(tp)err=true;\n\tif(err)\n\t\tprintf(\"ERR\\n\");\n\telse\n\t{\n\t\tif(ogiven==omax)\n\t\t{\n\t\t\tprintf(\"Yes\\n\");\n//\t\t\tprintf(\"%d %d\",ogiven,omax);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"No\\n\");\n//\t\t\tprintf(\"%d %d\",ogiven,omax);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&ttt);while(ttt--){\n\tin1();\n\tin2();\n}\nreturn 0;\n}\n```",
        "postTime": 1531210417,
        "uid": 61819,
        "name": "asdfghjkl123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\n\u83ab\u540d\u60f3\u5230\u4e00\u79cd**\u524d\u7f00\u548c**\u7684\u65b9\u6cd5\uff0c\u5982\u679cF\u8d21\u732e\u4e00\u5c42n\uff0c\u4ed6\u5bf9\u5e94\u7684E\u5c31-1\uff0c\u5426\u5219\u4e3a0\n\u8fd9\u6837\u53ef\u4ee5\u514d\u9664\u90e8\u5206\u7684\u5e72\u6270\uff0c\u6700\u540e\u76f4\u63a5\u7edf\u8ba1\u5c31\u53ef\u4ee5\u4e86 \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring a,c[105];\nint t,l,sum[105],k[105];\nbool bo[50];\nint main(){\n    cin>>t;\n    while(t--){\n        int i = 1,lxe = 0,ze = 0,biaoji = 0,zf = 0,df = 0,changshu = 0,num = 0,bre = 0,zuo = 0,you = 0,shin = 0;\n        cin>>l;\n        getline(cin,a);//\u5343\u4e07\u4e0d\u8981\u7528gets,\u8840\u4e00\u822c\u7684\u6559\u8bad \n        if(a[3] == '1') changshu = 1;\n\t\t/*\u5e38\u6570\u7684\u8bdd\uff0c\u53ea\u6709\u4e0dERR\u5e76\u4e14\u7b2c\u4e00\u884c\u8981\u4e48\u4e0d\u80fd\u8fdb\u8981\u4e48\u5168\u5e38\u6570*/ \n        else for(int j = 5;j<a.size()-1;++j) num = num*10+a[j]-'0';//\u4e0d\u89e3\u91ca \n        for(int j = 0;j <= 25;++j) bo[j] = 0;//\u5224\u65ad\u662f\u5426\u51fa\u73b0\u8fc7\u5df2\u88ab\u5b9a\u4e49\u7684\u53d8\u91cf \n        for(int j = 1;j <= l;++j){\n            getline(cin,c[j]);\n            if(c[j][0] == 'F'){\n                ze = 0;\n                if(bo[c[j][2]-'a']) bre = 1;//\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u76f4\u63a5ERR \n                bo[c[j][2]-'a'] = 1;//\u6807\u8bb0 \n                zf++;//\u8fd9\u91cc\u7684zf\u5224\u65adF E\u4e2a\u6570\u662f\u5426\u5339\u914d \n            }\n            if(c[j][0] == 'E'){\n                zf--;\n                ze++;\n                for(int k = j-2*ze+1;k <= j-ze;++k){\n                    bo[c[k][2]-'a'] = 0;\n                    //\u5f53\u4e00\u7ec4\u5faa\u73af\u7ed3\u675f\u65f6\uff0c\u6539\u7ec4\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u53d8\u91cf\u90fd\u88ab\u91ca\u653e\n                }\n            }\n            if(zf<0) bre = 1;//\u5982\u679cE\u592a\u591a\u4e86\uff0cERR \n            if(zf == 0) for(int k = 0;k <= 25;++k) bo[k] = 0;//F E\u5339\u914d\u5b8c\uff0c\u91ca\u653e\u53d8\u91cf \n        }\n        if(zf) bre = 1;//\u5982\u679c\u8fd8\u6709\u5269\u4f59\u7684F\uff0cERR \n        if(l&1||c[1][0] != 'F'||bre){//l\u662f\u5947\u6570\u663e\u7136\u4e0d\u53ef\u80fd\uff1bc[1][0]\uff0c\u7b2c\u4e00\u884c\u90fd\u9519\uff0c\u4e0b\u8fb9\u4e0d\u7528\u770b \n            printf(\"ERR\\n\");\n            continue;\n        }\n        for(int j = 0;j <= 25;++j) bo[j] = 0;\n        for(i = 1;i <= l;++i){\n            if(c[i][0] == 'F'){\n                lxe = 0,biaoji = 0;\n                int j = 4,zuo = 0,you = 0;\n                /*\n                1.F \u53d8\u91cf n,\u6570\u5b57               \u8fdb\u4e0d\u53bb\u554a \n\t\t\t\t2.F \u53d8\u91cf \u6570\u5b57,n               \u6b21\u6570++ \n\t\t\t\t3.F \u53d8\u91cf n,n                  \u5e38\u6570 \n\t\t\t\t4.F \u53d8\u91cf \u6570\u5b57,\u6570\u5b57\uff0c\u5de6\u5927\u4e8e\u53f3  \u8fdb\u4e0d\u53bb\u554a \n\t\t\t\t5.F \u53d8\u91cf \u6570\u5b57,\u6570\u5b57\uff0c\u53f3\u5927\u4e8e\u5de6  \u5e38\u6570 \n\t\t\t\t\u65e0\u975e\u5c31\u8fd9\u4e94\u79cd \n\t\t\t\t*/\n                if(isdigit(c[i][j])){\n                    for(j = 4;isdigit(c[i][j]);++j) zuo = zuo*10+c[i][j]-'0';\n                    for(j = j+1;isdigit(c[i][j]);++j) you = you*10+c[i][j]-'0';\n                }\n                else{\n                    for(j = j+2;isdigit(c[i][j]);++j) you = you*10+c[i][j]-'0';\n                }\n                if(i == 1&&changshu == 1){\n                    if((!zuo&&!you)||(zuo&&you)||(!zuo&&you)) printf(\"Yes\\n\");\n                    else printf(\"No\\n\");\n                    bre = 1;\n                    break;\n                }\n                if(!zuo){\n                    if(you){//1. \n                        int j = i,cf = 1;\n                        while(cf){\n                            ++j;\n                            if(c[j][0] == 'F') cf++;\n                            if(c[j][0] == 'E'){\n                                cf--;\n                                lxe++;\n                                biaoji = 1;\n                            }\n                        }\n                        i = j;\n                    }\n                }\n                else{\n                    if(!you){//2. \n                        shin++;\n                        k[i] = 1;\n                    }\n                    else if(zuo>you){//4. \n                        int j = i,cf = 1;\n                        while(cf){\n                            ++j;\n                            if(c[j][0] == 'F') cf++;\n                            if(c[j][0] == 'E'){\n                                cf--;\n                                lxe++;\n                                biaoji = 1;\n                            }\n                        }\n                        i = j;\n                    }\n                }\n            }\n            if(c[i][0] == 'E'){\n                if(!biaoji) lxe++;//\u540c\u4e00\u4e2aE\uff0c\u4e2a\u6570\u4e0d\u80fd\u7b97\u4e24\u6b21 \n                biaoji = 0;\n                int sf = i-lxe*2+1;//\u627e\u5f53\u524dE\u5bf9\u5e94\u7684F \n                if(k[sf]) k[i] = -1;//F\u662fn\uff0cE\u5c31\u51cf\u53bb \n                else k[i] = 0;//\u5426\u5219\u4e0d\u51cf\uff0cF\u6ca1\u6709\u8d21\u732e\uff0cE\u5c31\u4e0d\u9700\u4ed8\u51fa \n            }\n        }\n        if(bre) continue;\n        int ans = k[1];\n        for(int i = 1;i <= l;++i){\n\t\t\tsum[i] = sum[i-1]+k[i];//\u524d\u7f00\u548c \n\t\t\tans = max(ans,sum[i]);\n        }\n        if(ans == num||(!ans&&changshu)) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n        memset(sum,0,sizeof(sum));\n        memset(k,0,sizeof(k));\n    }\n    return 0;\n}\n```",
        "postTime": 1530070492,
        "uid": 54211,
        "name": "\u5bd2\u9165",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u9898\u561b\uff0c\u5f88\u5947\u602a\uff0c\u6709\u70b9\u50cf\u4fa6\u63a2\u63a8\u7406\u548c\u8db3\u7403\uff0c\u601d\u8def\u975e\u5e38\u597d\u60f3\uff0c\u4f46\u662f\u4ee3\u7801\u975e\u5e38\u957f\uff0c\u6709\u8bb8\u591a\u5751\u70b9\uff0c\u8981\u6ce8\u610f\u3002\n\n\u9996\u5148\u662f\u8f93\u5165\uff0c\n### \u65e2\u7136\u6709t\u7ec4\u6570\u636e\uff0c\u90a3\u4e48\u6211\u5c31\u7528\u4e00\u4e2a\u60ef\u7528\u4f0e\u4fe9\n\n```\nint main(){\n    cin>>t;\n    while(t--){\n        work();\n    }\n}\n```\n\n\u6bcf\u4e00\u7ec4\u6570\u636e\u4e2d\u8f93\u5165\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\n```\ncin>>n>>o;\n    if(o[3]==')'){\n        a=0;\n        b=1;\n    }else{\n        a=1;\n        int q=3;int r;\n        while(o[++q]!=')'){\n            r=o[q]-'0';\n            b=b*10+r;\n        }\n    }\n```\n\u63a5\u4e0b\u6765\u8fdb\u5165\u4e3b\u7a0b\u5e8f\uff0c\u6211\u7684\u601d\u8def\u662f\u4e00\u8fb9\u8ba1\u7b97\u590d\u6742\u5ea6\u4e00\u8fb9\u5224\u65ad\u5408\u4e0d\u5408\u6cd5\uff0c\u5177\u4f53\u5185\u5bb9\u770b\u7a0b\u5e8f\u5427\u2026\u2026\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint t,n,num1,num2,a,b,sum;//t\u662f\u6570\u636e\u7ec4\u6570\uff0cn\u662f\u8f93\u5165\u884c\u6570\n                          //num1\u548cnum2\u662f\u6253\u9171\u6cb9\u7684\n                          //a\u662f\u5224\u65ad\u662fo(1)\uff0c\u8fd8\u662fo(n^k)\n                          //b\u662f\u51e0\u6b21\u65b9,sum\u662f\u73b0\u5728\u8fd8\u6709\u591a\u5c11\u7ec4\u5faa\u73af\nbool d,flag;\nchar o[50000],p,w[99999],x[500],y[500];\nbool s[50000],dd[50000];\nint check(int t){\n    int cnt=0;//\u628achar\u8f6c\u5316\u6210int\n    if(t==1){\n        for(int i=0;i<=499;i++)\n           if(x[i]>='0'&&x[i]<='9'){\n               int k=x[i]-'0';\n               cnt=cnt*10+k; \n           }\n    }\n    if(t==2){\n        for(int i=0;i<=499;i++)\n           if(y[i]>='0'&&y[i]<='9'){\n               int k=y[i]-'0';\n               cnt=cnt*10+k; \n           }\n    }\n    return cnt;\n}\nint work(){\n    memset(s,false,sizeof(s));\n    memset(dd,false,sizeof(dd));\n    for(int i=0;i<=499;i++){\n        w[i]=' ';\n        o[i]=' ';\n    }\n    flag=false;\n    int e=0,f=0,u=0;//\u8fd9\u79cd\u91cd\u7f6e\u591a\u5199\u70b9\n    sum=0;a=b=0;\n    bool v=false;//v\u5224\u65ad\u662f\u5426\u8fdd\u89c4\n    cin>>n>>o;\n    if(o[3]==')'){\n        a=0;\n        b=1;\n    }else{\n        a=1;\n        int q=3;int r;\n        while(o[++q]!=')'){\n            r=o[q]-'0';\n            b=b*10+r;\n        }\n    }\n    for(int i=1;i<=n;i++){\n    for(int j=0;j<=499;j++){\n        x[i]=' ';\n        y[i]=' ';//\u7ee7\u7eed\u91cd\u7f6e\n    }\n    flag=false;\n    cin>>p;//'F'\u6216'E'\n    if(p=='F'){//F\n        sum++;//\u52a0\u52a0\n        cin>>w[sum]>>x>>y;//w\u8981\u7528\u6570\u7ec4\u662f\u7528\u6765\u5224\u91cd\n        for(int j=0;j<sum;j++)\n        if(w[sum]==w[j]){//\u5224\u91cd\n            v=true;\n        }\n        if(x[0]!='n'&&y[0]=='n'){//y\u6bd4x\u5927\n           for(int j=0;j<=sum;j++)if(dd[j]){flag=true;break;}\n           if(flag==true)continue;\n           u++;\n           s[sum]=true;\n           f=max(f,u);\n           e=1;\n        }\n        if(x[0]=='n'&&y[0]!='n'){//x>y\n            dd[sum]=true;//\u65e0\u6548\u5faa\u73af\n        }\n        if(x[0]!='n'&&y[0]!='n'){x>y\n            int g=check(1);\n            int h=check(2);\n            if(g>h)dd[sum]=true;\n        }\n        \n    }else if(p=='E'){\n        if(s[sum]==true){\n            s[sum]=false;\n            u--;\n        }\n        if(dd[sum]==true){\n            dd[sum]=false;\n        }\n        sum--;\n        if(sum<0){\n            v=true;\n        }\n    }\n    }\n    if(sum>0){\n        cout<<\"ERR\"<<endl;//\u5c11E\n        return 0;\n    }\n    if(v==true){\n        cout<<\"ERR\"<<endl;//v\n        return 0;\n    }\n    if((a==1&&e==1)&&(f==b)||a==0&&e==0)\n        cout<<\"Yes\"<<endl;//\u543b\u5408\n    else cout<<\"No\"<<endl;\n}\nint main(){\n    cin>>t;\n    while(t--){\n        work();\n    }\n}\n```",
        "postTime": 1527423353,
        "uid": 48142,
        "name": "Ousmane_Dembele",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "### \u65f6\u95f4\u590d\u6742\u5ea6\n\u3000\u3000\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u76ee\u867d\u7136\u662f\u9053\u7ec6\u8282\u5f88\u591a\u7684\u5927\u6a21\u62df, \u4f46\u662f\u5982\u679c**\u601d\u8def\u6e05\u6670**, \u52a0\u4e0a**\u7ec6\u5fc3\u4e25\u8c28\u7684\u6001\u5ea6**, \u8fd8\u662f\u80fd\u505a\u51fa\u6765\u7684.\n\n\u3000\u3000\u53ea\u662f\u6211\u5199\u7684**\u6781\u5176\u9ebb\u70e6**\u6216\u8bb8\u6709\u66f4**\u7b80\u6d01**\u7684\u505a\u6cd5.\n\n- \u5927\u6982\u82b1\u4e86\u4e0d\u523020\u5206\u949f\u5c31\u7801\u5b8c\u4e86, \u7136\u540e\u8fc7\u4e86\u6837\u4f8b, \u7136\u540e\u4ea4\u4e0a\u53bb(cogs)70\u5206.\n- \u7136\u540e\u53d1\u73b0\u4e86\u4e00\u4e2a\u6781\u5176sb\u7684\u9519\u8bef: \u6ca1\u6709\u5224\u65ad\u5faa\u73af\u80fd\u5426\u8fdb\u5165\u2026\u2026**\u6570\u636e\u771f\u6c34**,\u8fd9\u6837\u90fd\u80fd\u5f9770\u5206\n- \u7136\u540e\u5c3180\u5206\u4e86, \u800c\u4e14\u8fd9\u4e2a\u9519\u8bef\u6781\u5176\u8be1\u5f02:**\u5f53\u628a\u8fd9\u4e2a\u6d4b\u8bd5\u70b9\u7684\u7b2c3\u4e2a\u90e8\u5206\u653e\u5230\u7b2c\u4e00\u4e2a\u90e8\u5206\u65f6**, \u5c31\u6ca1\u6709\u9519\u8bef\u4e86.\u7136\u540e\u75af\u72c2debug.\n- \u6700\u540e\u7ec8\u4e8e\u660e\u767d\u4e86, \u539f\u6765\u662f\u5f53\u8f93\u51fa$\\text{ERR}$**\u76f4\u63a5\u7ed3\u675f\u5224\u65ad**\u65f6**\u6ca1\u8bfb\u5b8c\u7684\u51e0\u884c\u5b57\u7b26\u4e32**\u5c31\u5f71\u54cd\u4e86**\u4e0b\u4e00\u7ec4\u6570\u636e**\u7684\u8bfb\u5165\u2026\u2026\u7136\u540e\u8349\u7387\u4e00\u6539, \u7ec8\u4e8e\u597d\u4e86.\n\ndebug\u4e00\u5171\u82b1\u4e8675min.\u6709\u70b9\u6162\u5462\u2026\u2026\u5982\u679c\u662f\u8003\u8bd5\u600e\u4e48\u529e\u5462?\n\n#### Solution\n\u3000\u3000\u9996\u5148\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u5904\u7406\u6bcf\u4e00\u7ec4\u6570\u636e, \u8fd9\u6837\u7a0b\u5e8f\u5c31\u6709\u6bd4\u8f83\u6e05\u6670\u7684\u7ed3\u6784\u4e86.\n\u3000\u3000\u7136\u540e\u7528\u4e0b\u9762\u8fd9\u4e2a\u4e1c\u4e1c\u6765\u65b9\u4fbf**\u9047\u5230\u9519\u8bef\u76f4\u63a5\u9000\u51fa**.\n```\nvoid exit(){printf(\"ERR\\n\");}\n#define quit() {exit();break;}\n```\n\u3000\u3000\u4e0b\u9762\u4e09\u4e2a\u51fd\u6570\u662f\u4e3a\u4e86\u7b80\u5316\u5224\u65ad\u7684\u51fd\u6570.\n- \u7b2c\u4e00\u4e2a\u662f\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32(**\u5faa\u73af\u53d8\u91cf**\u6216\u8005\u662f**\u5faa\u73af\u53d8\u91cf\u7684\u8d77\u59cb\u503c\u6216\u7ec8\u6b62\u503c**)\n- \u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32(\u5168\u662f\u6570\u5b57)\u8f6c\u5316\u4e3a\u6574\u6570.\n- \u5224\u65ad\u5f53`F i a b`\u65f6\u7684\u590d\u6742\u5ea6:O(n),O(1)\u6216**\u4e0d\u8fdb\u5165\u5faa\u73af.**\n\n```c++\nstring getstr(string &str,int n){\n\tstring oth;\n\twhile(isalnum(str[n]))oth+=str[n],++n;\n\treturn oth;\n}\n\nint toint(string &s){\n\tint ans=0,i=0;\n\twhile(isdigit(s[i]))ans=ans*10+s[i]-'0',++i;\n\treturn ans;\n}\n\nint forall(int a,int b){\n\tif(a==inf&&b==inf)return 0;\n\tif(a!=inf&&b==inf)return 1;\n\tif(a==inf&&b!=inf)return -1;\n\tif(a>b)return -1;\n\treturn false;\n}\n```\n\u3000\u3000\u56e0\u4e3a\u5faa\u73af\u53d8\u91cf\u4e0d\u80fd\u91cd\u590d, \u6240\u4ee5\u7528\u4e00\u4e2a`set`\u5b58\u653e\u6240\u6709\u5faa\u73af\u53d8\u91cf; \u7528\u4e00\u4e2a\u6808\u5b58\u6bcf(\u5c42)\u5faa\u73af\u7684\u5faa\u73af\u53d8\u91cf, \u65b9\u4fbf**\u5faa\u73af\u9000\u51fa\u65f6\u5220\u9664**; \u8fd8\u6709\u4e00\u4e2a\u6808\u8bb0\u5f55**\u8fd9\u5c42\u5faa\u73af\u80fd\u5426\u8fdb\u5165**;\u7528\u4e00\u4e2a\u6574\u6570\u8bb0\u5f55\u5f53\u524d\u5d4c\u5957O(n)\u5faa\u73af\u7684\u4e2a\u6570(\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848), \u8bb0\u5f55\u6ca1\u6709\u88ab\u7ed3\u675f\u7684\u5faa\u73af\u4e2a\u6570(\u5224\u65ad\u662f\u5426ERR).\n\n\u3000\u3000\u6bcf\u6b21\u9047\u5230\"E\"\u65f6\u8bb0\u5f97\u5728`set`\u4e2d**\u5220\u9664\u5faa\u73af\u53d8\u91cf**, \u5c06**\u5d4c\u5957\u5faa\u73af\u4e2a\u6570**\u51cf\u4e00.\n  \n\u3000\u3000\u5982\u679c\u8fd9\u5c42\u5faa\u73af\u88ab\u5d4c\u5957\u5728\u4e00\u4e2a\u65e0\u6cd5\u8fdb\u5165\u7684\u5faa\u73af\u91cc\u9762, \u90a3\u4e48\u5b83\u7684\u590d\u6742\u5ea6\u4e0d\u8003\u8651, \u8fd9\u5c31\u662f\u6211\u90a3\u4e2a**\u5b58\u6574\u6570\u7684\u6808**\u7684\u529f\u80fd.\u76f4\u5230\u6240\u4ee5**\u4e0d\u80fd\u88ab\u8fdb\u5165\u7684\u5faa\u73af**\u5168\u90e8\u9000\u51fa.\n  \n\u3000\u3000\u6700\u540e\u8bb0\u5f97\u8981\u628a**\u5f53\u524d\u7ec4\u6570\u636e\u7684\u6240\u6709\u5b57\u7b26\u4e32\u8bfb\u5b8c\u5728\u8fdb\u884c\u4e0b\u4e00\u7ec4\u6570\u636e**.\n#### Code\n```c++\n#include<set>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<iostream>\n#define inf 0x3f3f3f3f\nusing namespace std;\nvoid exit(){printf(\"ERR\\n\");}\n#define quit() {exit();break;}\n\nint read(){\n\tchar ch=getchar();int s=0;\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);s=s*10+ch-'0',ch=getchar());\n\treturn s;\n}\n\nstring getstr(string &str,int n){\n\tstring oth;\n\twhile(isalnum(str[n]))oth+=str[n],++n;\n\treturn oth;\n}\n\nint toint(string &s){\n\tint ans=0,i=0;\n\twhile(isdigit(s[i]))ans=ans*10+s[i]-'0',++i;\n\treturn ans;\n}\n\nint forall(int a,int b){//\u5224\u65ad\u590d\u6742\u5ea6\u548c\u80fd\u5426\u8fdb\u5165(!=-1)\n\tif(a==inf&&b==inf)return 0;\n\tif(a!=inf&&b==inf)return 1;\n\tif(a==inf&&b!=inf)return -1;\n\tif(a>b)return -1;\n\treturn false;\n}\n\nvoid judge(int n,int m){\n\tstack<int>impro;//\u8bb0\u5f55\u6bcf\u5c42\u662f\u5426\u80fd\u8fdb\u5165\n\tset<string>S;stack<string>sta;//\u5faa\u73af\u53d8\u91cf\u540d\n\tstring str,oth;int forsum=0,fornum=0,a,b,pos,ans=0,i;\n\tfor(i=1;i<=n;++i){\n\t\tpos=2,a=b=1;\n\t\tgetline(cin,str);\n\t\tif(str[0]=='E'){//\u5faa\u73af\u9000\u51fa\u4e00\u5c42\n\t\t\tif(fornum--<0){print(1);quit();}\n\t\t\tif(impro.top()==1)--forsum;impro.pop();\n\t\t\toth=sta.top();sta.pop();S.erase(oth);\n\t\t\tcontinue;\n\t\t}\n\t\tfornum++;//F\u7684\u4e2a\u6570\u52a0\u4e00\n\t\t\n\t\tif(str[0]=='F')oth=getstr(str,pos);//\u83b7\u53d6\u5faa\u73af\u53d8\u91cf\n\t\tif(S.find(oth)!=S.end()){quit();}//\u53d8\u91cf\u4e0d\u91cd\u590d\n\t\tsta.push(oth);S.insert(oth);\n\t\tif(impro.size()&&impro.top()==-1){impro.push(-1);continue;}//\u4e0a\u4e00\u5c42\u5faa\u73af\u4e0d\u80fd\u8fdb\u5165\n\t\t\n\t\tpos=pos+oth.size()+1;oth=getstr(str,pos);//\u83b7\u53d6a\n\t\tif(oth==\"n\")a=inf;else a=toint(oth);\n\n\t\tpos=pos+oth.size()+1;oth=getstr(str,pos);//\u83b7\u53d6b\n\t\tif(oth==\"n\")b=inf;else b=toint(oth);\n\t\t\n\t\tforsum+=forall(a,b)!=-1?forall(a,b):0;//\u4e3a\u590d\u6742\u5ea6\n\t\timpro.push(forall(a,b));ans=max(forsum,ans);//\u7edf\u8ba1\u7b54\u6848\n\t}\n\tfor(int j=i+1;j<=n;++j){//\u5c06\u6ca1\u8bfb\u5b8c\u7684\u5b57\u7b26\u4e32\u8bfb\u5b8c\n\t\tgetline(cin,str);\n\t\tif(j==n)return ;\n\t}\n\tif(fornum){exit();return ;}\n\tif(ans==m)printf(\"Yes\\n\");\n\telse printf(\"No\\n\");\n}\n\nint main(){\n\tint T,n,m,p;\n\tstring str,oth;\n\tscanf(\"%d\",&T);//\u6570\u636e\u7ec4\u6570\n\twhile(T--){\n\t\tn=m=0;\n\t\tn=read();cin>>str;\n\t\tgetline(cin,oth);\n\t\tif(str[2]=='1')judge(n,0);//\u5e38\u6570\u7684\u590d\u6742\u5ea6\n\t\tif(str[2]=='n'){//n^b\u7684\u590d\u6742\u5ea6\n\t\t\tp=4,m=0;\n\t\t\twhile(isdigit(str[p]))m=m*10+str[p]-'0',++p;\n\t\t\tjudge(n,m);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1525227943,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u6211\u89c9\u5f97\u8fd9\u9898\u6700\u5751\u7684\u5c31\u662f\u5224\u65adx\u548cy\u7684\u5927\u5c0f\u5173\u7cfb\u4e86\u5427\u2026\u2026\n\n\u5386\u7a0b\uff1a\n1. 45\u5206 - \u5fd8\u4e86x=y=n\u65f6\u5e38\u6570\u7ea7\u522b\n\n1. 95\u5206 - \u5fd8\u4e86\u4e0d\u80fd\u8fdb\u5165\u5faa\u73af\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff08\u5f15\u5165\u4e0b\u9762\u7684fuyi\u53d8\u91cf...\uff09\n\n\n\n\u4e00\u70b9\u60f3\u6539\u8fdb\u4f46\u662f\u73b0\u5728\u8fd8\u5f88\u61d2\u7684\u800c\u5e76\u4e0d\u60f3\u6539\u7684\u5730\u65b9\uff1a\n1. \u5199\u4e00\u4e2astruct STATE\uff0c\u5305\u542b\u53d8\u91cf\u540d\u548c\u5faa\u73af\u7c7b\u578b\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u4e00\u4e2a\u6808\u5c31OK\u4e86\uff0c\u770b\u8d77\u6765\u8212\u670d\u4e00\u70b9\u3002\n\n1. \u4e0d\u592a\u61c2\u6211\u7684getnum\u548cgetnum2\u51fd\u6570\u662f\u4e0d\u662f\u6b63\u5e38\u7684\u51fd\u6570\uff0c\u603b\u89c9\u5f97\u5f88\u602a\u2026\u2026\n\n\u8d34\u4e2a\u4ee3\u7801\u7ed9\u81ea\u5df1\u770b\u2193\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint cur;\ninline int getnum(string s, int begin, char finish){\n\tint res=0;\n\tcur=begin;\n\twhile (s[cur]!=finish){\n\t\tres=(res<<3)+(res<<1)+s[cur]-'0';\n\t\tcur++;\n\t}\n\treturn res;\n}\n\ninline int getnum2(string s, int begin, int finish){\n\tint res=0;\n\tcur=begin;\n\twhile (cur!=finish){\n\t\tres=(res<<3)+(res<<1)+s[cur]-'0';\n\t\tcur++;\n\t}\n\treturn res;\n}\n\n\nint main(){\n\n\tint T;\n\tcin>>T;\n\twhile (T--){\n\t\t//\u8f93\u5165 \n\t\tint est, line;\n\t\tbool error=false;\n\t\tstring s;\n\t\tcin>>line;\n\t\tcin>>s;\n\t\tif(s[2]=='1') est=0;\n\t\telse est=getnum(s, 4, ')');\n\t\tgetchar();//\u5403\u6389\u6362\u884c\u7b26\n\n        int now, best, loop, from, to;\n        int fuyi=0;\n        bool used[30];\n        memset(used, false, sizeof(used));\n        stack<char> vs;\n        stack<int> loops;\n        best=0;\n        now=0;\n\t\tfor (int i=0; i<line; i++){\n\t\t\tgetline(cin,s);\n\t\t\tif (error) continue;\n\t\t\tif (s[0]=='F'){\n\t\t\t\t//\u53d8\u91cf\u540d\u95ee\u9898 \n\t\t\t\tchar v=s[2];\n\t\t\t\tif (used[v-'a']==true){\n\t\t\t\t\terror=true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tused[v-'a']=true;\n\t\t\t\tvs.push(v);\n\t\t\t\t\n\t\t\t\t//from \u548c to \n\t\t\t\tif (s[4]=='n') {from=200;cur=5;}\n\t\t\t\telse from=getnum(s,4,32);\n\t\t\t\tif (s[++cur]=='n') to=200;\n\t\t\t\telse to=getnum2(s,cur,s.size());\n\t\t\t\t\n\t\t\t\t//loop \n\t\t\t\tif (from<200 && to<200) {if (from<=to) loop=0; if (from>to)  loop=-1;} \n\t\t\t\tif (from==200 && to==200) loop=0;\n\t\t\t\tif (from<200 && to==200) loop=1;\n\t\t\t\tif (from==200 && to<200) loop=-1;\n\t\t\t\tif (loop==-1) fuyi++;\n\t\t\t\t//now\n\t\t\t\tloops.push(loop);\n\t\t\t\tif (fuyi==0) {\n\t\t\t\t\tnow=now+loop;\n\t\t\t\t\tbest=max(best, now);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (s[0]=='E'){\n\t\t\t\tif (loops.empty()) {\n\t\t\t\t\terror=true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tchar v=vs.top(); vs.pop();\n\t\t\t\tused[v-'a']=false;\n\t\t\t\tloop=loops.top(); loops.pop();\n\t\t\t\tif (loop>=0 && fuyi==0){\n\t\t\t\t\tnow-=loop;\n\t\t\t\t} \n\t\t\t\tif (loop==-1) fuyi--;\n\t\t\t}\n\t\t\t//printf(\"%d %d %d\\n\", i, now, fuyi);\n\t\t}\n\t\tif (!loops.empty() || error ){\n\t\t\tcout<<\"ERR\"<<endl;\n\t\t\tcontinue;\n\t\t}\n\t\t//cout<<best<<endl;\n\t\tcout<<(best==est? \"Yes\" : \"No\")<<endl;\n\t}\n} \n```",
        "postTime": 1525189972,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u611f\u89c9\u539f\u6765\u7684\u9898\u89e3\u4ee3\u7801\u5199\u7684\u5b9e\u5728\u662f\u592a\u4e11\u4e86~~\u81ea\u5df1\u770b\u4e86\u5fcd\u4e0d\u4f4f\u62bd\u81ea\u5df1\u4e24\u5df4\u638c~~\uff0c\u6240\u4ee5\uff0c\u5728\u548c\u540c\u5b66\u4e00\u8d77\u9650\u65f6\uff08$1h$\uff0c\u5e76\u6ca1\u6709\u5199\u5b8c\uff09\u540e\u51b3\u5b9a\u91cd\u65b0\u5199\u4e00\u4e0b\u8fd9\u7bc7\u9898\u89e3\u3002  \n\u6ca1\u4ec0\u4e48\u601d\u7ef4\u96be\u5ea6\uff0c\u5c31\u662f\u6a21\u62df\u3002\u5999\u7528\u9012\u5f52\uff08\u6bcf\u4e00\u5c42\u8c03\u7528\u6808\u5bf9\u5e94\u4e00\u5c42\u5faa\u73af\uff09\u53ef\u4ee5\u5927\u5e45\u964d\u4f4e\u7f16\u7a0b\u96be\u5ea6\u3002\u540c\u65f6\uff0c\u5229\u7528\u597d\u6807\u51c6\u5e93\u8fd9\u4e2a\u795e\u5668\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002\u5177\u4f53\u7684\u7ec6\u8282\u5df2\u7ecf\u653e\u5728\u6ce8\u91ca\u91cc\u4e86\u3002  \n```cpp\n#include <cstring>  // memset\n#include <string>   // \u5b57\u7b26\u4e32\n#include <sstream>  // \u5b57\u7b26\u4e32\u6d41\uff0c\u5feb\u6377\u5730\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\n#include <iostream> // \u8f93\u5165\u8f93\u51fa\n\nstd::string s[105]; // \u4fdd\u5b58\u201c\u4ee3\u7801\u201d\nbool vis[133];      // \u68c0\u67e5\u53d8\u91cf\u662f\u5426\u88ab\u4f7f\u7528\u8fc7\n\nint solve(int &pos) { // pos \u8868\u793a\u201c\u6267\u884c\u201d\u5230\u54ea\u91cc\u4e86\n// \u5982\u679c\u6709\u8bed\u6cd5\u9519\u8bef\u8fd4\u56de -1\uff0c\u5426\u5219\u8fd4\u56de 0\n    if (s[pos][0] != 'F') // \u5faa\u73af\u4e0d\u4ee5\u201cF\u201d\u5f00\u5934\uff0c\u4e00\u5b9a\u6709\u95ee\u9898\n        return -1;\n    char ch = s[pos][2]; // \u672c\u5c42\u5faa\u73af\u7684\u53d8\u91cf\u540d\n    if (vis[s[pos][2]]) // \u7528\u8fc7\u7684\u53d8\u91cf\u540d\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\n        return -1;\n    vis[s[pos][2]] = true; // \u6807\u8bb0\u4e3a\u7528\u8fc7\n    std::stringstream ss(s[pos].substr(4)); // \u5b57\u7b26\u4e32\u6d41\uff0c\u7528\u6765\u5206\u5272\u5faa\u73af\u7684\u672b\u5c3e\u4e24\u4e2a\u53c2\u6570\n    std::string s1, s2;\n    int v1, v2, ans = 0, temp = 0;\n    ss >> s1 >> s2; // \u5206\u5272\u672b\u5c3e\u53c2\u6570\n    if (s1 != \"n\" && s2 == \"n\") ans = 1; // \u4ece\u5e38\u6570\u5faa\u73af\u5230 n\uff0c\u8bf4\u660e\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n    if (s1 == \"n\") s1 = \"1000\"; // \u628a n \u53d8\u6210\u6b63\u65e0\u7a77\n    if (s2 == \"n\") s2 = \"1000\";\n    std::stringstream(s1) >> v1; // \u5206\u5272\u597d\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u53c2\u6570\u53d8\u6210\u6574\u6570\n    std::stringstream(s2) >> v2;\n    while (s[++pos].size() && s[pos][0] == 'F') { // \u68c0\u67e5\u662f\u5426\u6709\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u6ce8\u610f\u53ef\u80fd\u6709\u591a\u4e2a\u5e76\u5217\u7684\u5faa\u73af\n        int res = solve(pos); // \u9012\u5f52\u8ba1\u7b97\n        if (res == -1) return -1; // \u5982\u679c\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef\u76f4\u63a5\u4e0d\u518d\u68c0\u67e5\u4e0b\u9762\u5185\u5bb9\n        temp = std::max(temp, res); // \u66f4\u65b0\u7b54\u6848\n    }\n    vis[ch] = false; // \u8c03\u7528\u5faa\u73af\u53d8\u91cf\u7684\u201c\u6790\u6784\u51fd\u6570\u201d\uff0c\u5373\u5c06\u5176\u6807\u8bb0\u4e3a\u672a\u4f7f\u7528\u8fc7\n    if (v1 <= v2) ans += temp; // \u8fd9\u5c42\u5faa\u73af\u88ab\u6267\u884c\u8fc7\uff0c\u91cc\u9762\u7684\u5185\u5bb9\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n    if (s[pos] != \"E\") return -1; // \u627e\u4e0d\u5230\u914d\u5bf9\u7684\u201cE\u201d\u7ed3\u675f\u5faa\u73af\uff0c\u8bf4\u660e\u8bed\u6cd5\u9519\u8bef\n    else return ans;\n}\n\nint main() {\n    int t;\n    std::cin >> t;\n    while(t--) {\n        int len, tcomplexity; // len \u662f\u201c\u4ee3\u7801\u201d\u957f\u5ea6\uff0ctcomplexity \u662f\u8f93\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        std::string complexity; // \u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        memset(vis, 0, sizeof(vis)); // \u521d\u59cb\u65f6\u6240\u6709\u53d8\u91cf\u540d\u90fd\u5408\u6cd5\n        std::cin >> len >> complexity;\n        if (complexity.at(2) == '1') { // \u201cO(1)\u201d\n            tcomplexity = 0;\n        } else {\n            std::stringstream s2(complexity.substr(4)); // \u518d\u6b21\u7528\u5230\u5b57\u7b26\u4e32\u6d41\u8bfb\u53d6\u8f93\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n            s2 >> tcomplexity;\n        }\n        for (int i = 0; i <= len; ++i)\n            std::getline(std::cin, s[i]); // \u8bfb\u5165\u201c\u4ee3\u7801\u201d\uff0c\u6ce8\u610f\u5148\u8bfb\u6389\u521a\u521a\u8f93\u5165\u5176\u4ed6\u5185\u5bb9\u7559\u4e0b\u7684\u7a7a\u884c\n        s[len + 1].clear(); // \u6e05\u9664\u6700\u540e\u4e00\u884c\u540e\u7684\u4e00\u884c\uff0c\u7701\u7565\u8fb9\u754c\u5224\u65ad\n        int pos = 0, ans = 0; // pos \u662f\u5904\u7406\u5b8c\u4e86\u7684\u6700\u540e\u4e00\u884c\u7684\u884c\u53f7\uff0cans \u662f\u8ba1\u7b97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        do {\n            int temp = solve(++pos); // \u5904\u7406\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u4e0b\u4e00\u884c\n            if (temp == -1) {\n                ans = -1;\n                break;\n            } else {\n                ans = std::max(ans, temp);\n            }\n        } while (pos < len); // \u5904\u7406\u5b8c\u6210\u5219\u9000\u51fa\n        if (ans == -1) // \u8bed\u6cd5\u9519\u8bef\n            std::cout << \"ERR\" << std::endl;\n        else\n            std::cout << ((ans == tcomplexity) ? \"Yes\" : \"No\") << std::endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1523520385,
        "uid": 67387,
        "name": "Mosklia",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "## \u5148\u4f5c\u6b7b\u5199\u4e86\u4e2a\u7eaf\u5b57\u7b26\u4e32\u7684\u5224\u65ad~~\uff0c0\u5206~~\n\n## \u7136\u540e\u5fc3\u6001\u7206\u70b8\u8f6c\u4e86struct\u6570\u7ec4\n\n## ~~\u7136\u800c\u8fd8\u662f\u8c03\u4e86\u4e00\u4e2a\u661f\u671f~~\n\n## ~~\u8bdd\u8bf4\u6211\u8fd9\u4e2a\u666e\u53ca\u849f\u84bb\u9009\u62e9\u505a\u8fd9\u9898\u5c31\u662f\u5728\u4f5c\u6b7b\u3002\u3002\u3002~~\n\u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u6211\u53ef\u4ee5\u8bf4\u662f\u4e00\u7a8d\u4e0d\u901a\u3002\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\u5728\u505a\u8fd9\u9898\u65f6\u5728\u7ebf\u5224\u65ad\u662f\u4e0d\u53ef\u80fd\u7684\u2026\u2026\n\n\u6240\u4ee5\u8fd9\u9898\u6211\u7b97\u662f\u800d\u4e86\u4e2a\u6ed1\u7a3d\n\n\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a\n\n\u672c\u7a0b\u5e8f\u91c7\u7528\u5148\u8bfb\u5165\u5b57\u7b26\u4e32\u4ee3\u7801\uff0c\u540e\u8f6c\u5316\u4e3astruct\u5f62\u5f0f\uff0c\u518d\u5224\u65ad\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u5f53\u7136\u5c11\u4e0d\u4e86\u4e00\u4e2a\u8f6c\u5316\u51fd\u6570\uff0c\u7136\u540e\u53c8\u8981\u4e00\u4e2a\u5c06\u8bfb\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f6c\u5316\u4e3a\u5faa\u73af\u5c42\u6570\u7684\u51fd\u6570\uff0c\u58f0\u660e\u5982\u4e0b\n```cpp\nint turn(int);//\u5c06\u4ee3\u7801\u8f6c\u4e3a\u7ed3\u6784\u4f53\u6570\u7ec4\u5b58\u50a8\uff0ci\u8868\u793a\u7b2ci\u884c \nint turn2(string);//\u5c06\u4ee3\u8868\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5b57\u7b26\u4e32\u8f6c\u4e3a\u6570\u503c \u5373\u975e\u5e38\u6570\u590d\u6742\u5ea6\u5faa\u73af\u6700\u6df1\u5c42\u6570\n```\n\u7d27\u63a5\u7740\u6211\u4eec\u8981\u6839\u636e\u4ee3\u7801\u6765\u5224\u65ad\u5c0f\u660e\u7ed9\u51fa\u7684\u590d\u6742\u5ea6\u662f\u5426\u6b63\u786e\uff0c\u6240\u4ee5\u58f0\u660e\u4e00\u4e2a\u5224\u65ad\u51fd\u6570\n```cpp\nint checko(int l,int o);//l\u8868\u793a\u4ee3\u7801\u603b\u884c\u6570\uff0co\u8868\u793a\u8f6c\u6362\u540e\u7684\u590d\u6742\u5ea6 \n```\n\u4e3a\u4e86\u4fbf\u4e8e\u8f93\u51fa\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e2d**-1\u8868\u793a\u8bed\u6cd5\u9519\u8bef**\uff0c0\u8868\u793a\u9519\u8bef\uff0c1\u8868\u793a\u6b63\u786e\n\n\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u4e24\u4e2a\u8f6c\u6362\u51fd\u6570\n```cpp\nint turn(int i){\n\tc[i].order=' ';\n\tc[i].var=' ';\n\tc[i].b=0;c[i].e=0;\n\tistringstream iss(str[i]);\n\tchar a[10],b[10];\n\tif(str[i][0]=='F'){\n\t\tiss>>c[i].order>>c[i].var>>a>>b;\n\t\tint p=0;\n\t\tif(a[0]=='n')c[i].b=0x7fffffff;//\u5982\u679c\u521d\u59cb\u503c\u4e3an \n\t\telse while(a[p]>='0'&&a[p]<='9'){\n\t\t\tc[i].b*=10;\n\t\t\tc[i].b+=a[p]-'0';\n\t\t\t++p;\n\t\t}\n\t\tp=0;\n\t\tif(b[0]=='n')c[i].e=0x7fffffff;//\u5982\u679c\u7ec8\u503c\u4e3an \n\t\telse while(b[p]>='0'&&b[p]<='9'){\n\t\t\tc[i].e*=10;\n\t\t\tc[i].e+=b[p]-'0';\n\t\t\t++p;\n\t\t}\n\t}\n\telse if(str[i][0]=='E')c[i].order='E';\n}\n\nint turn2(string o){\n\tint ii=0,a=0;\n\tfor(int i=0;i<o.size();i++)\n\t\tif(o[i]=='^')ii=i;\n\tif(ii){\n\t\t++ii;\n\t\twhile(ii&&o[ii]!=')'){//\u76f4\u5230\u8bfb\u5230\u56de\u62ec\u53f7\n\t\t\ta*=10;\n\t\t\ta+=o[ii]-'0';\n\t\t\t++ii;\t\n\t\t}\n\t\treturn a;//\u8fd4\u56de\u5faa\u73af\u5c42\u6570\uff08\u5f53\u7136\u4e0d\u5305\u62ec\u5e38\u6570\u5faa\u73af\u6b21\u6570\uff09\n\t}\n\treturn 0;//\u5982\u679c\u662f\u5e38\u6570\u590d\u6742\u5ea6\uff0c\u8fd4\u56de0\u5c42\n}\n```\n\n------------\n\u6700\u7ec8\u7a0b\u5e8f\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<iostream>\nusing namespace std;\n//\u5b58\u50a8\u4e00\u884c\u4ee3\u7801\u7684\u6838\u5fc3\u90e8\u5206 \nstruct code{\n\t//order\u7528\u4e8e\u5b58\u50a8F\u6216\u8005E var\u5b58\u50a8\u5faa\u73af\u53d8\u91cf \n\tchar order,var;\n\t//\u8bb0\u5f55\u5faa\u73af\u7684\u8d77\u59cb\u503c\u548c\u7ec8\u503c \n\tint b,e;\n}c[100];//\u5171\u6709100\u884c\n//\u5b58\u50a8\u5faa\u73af\u53d8\u91cf\u662f\u5426\u88ab\u5360\u7528 \u4ee5\u53ca\u672c\u5c42\u5faa\u73af\u662f\u5426\u80fd\u589e\u52a0\u590d\u6742\u5ea6 \nint v['z'+1],h['z'+1];\n//\u5b58\u50a8\u5c1a\u672a\u7528\u7ed3\u6784\u4f53\u6570\u7ec4\u5b58\u50a8\u7684\u4ee3\u7801 \nstring str[100]; \nstack<char> st;\nint turn(int i);//\u5c06\u4ee3\u7801\u8f6c\u4e3a\u7ed3\u6784\u4f53\u6570\u7ec4\u5b58\u50a8\uff0ci\u8868\u793a\u7b2ci\u884c \nint turn2(string o);//\u5c06\u4ee3\u8868\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5b57\u7b26\u4e32\u8f6c\u4e3a\u6570\u503c \u5373\u975e\u5e38\u6570\u590d\u6742\u5ea6\u5faa\u73af\u6700\u6df1\u5c42\u6570 \nint checko(int l,int o);//l\u8868\u793a\u4ee3\u7801\u603b\u884c\u6570\uff0co\u8868\u793a\u8f6c\u6362\u540e\u7684\u590d\u6742\u5ea6 \n\nint main()\n{\n\tfreopen(\"\u9632\u6284\u9898\u89e3.txt\",\"r\",stdin);\n\tint t,l,b;\n\tscanf(\"%d\",&t);\n\tstring a;\n\tfor(int i=0;i<t;i++){\n\t\tscanf(\"%d\",&l);\n\t\twhile(!st.empty())st.pop();\n\t\tgetline(cin,a);\n\t\tfor(int j=0;j<l;j++)getline(cin,str[j]),turn(j);\n\t\tif(!(b=checko(l,turn2(a))))printf(\"No\\n\");\n\t\telse if(b>0)printf(\"Yes\\n\");\n\t\telse printf(\"ERR\\n\");\n\t}\n\treturn 0;\n}\nint checko(int l,int o){\n\t//zs-\u662f\u5426\u4ee5\u53ca\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af max-\u5f53\u524d\u65f6\u95f4\u590d\u6742\u5ea6 maxx-\u6700\u7ec8\u590d\u6742\u5ea6 \n\tint zs=0,max=0,maxx=0;\n\tmemset(v,0,sizeof(v));\n\tmemset(h,0,sizeof(h));\n\tfor(int i=0;i<l;i++){\n\t\tif(c[i].order=='F'){\n\t\t\t//\u5982\u679c\u5faa\u73af\u53d8\u91cf\u5df2\u88ab\u5360\u7528\uff0c\u6709\u8bed\u6cd5\u9519\u8bef \n\t\t\tif(v[c[i].var])return -1;\n\t\t\telse{\n\t\t\t\t//\u5c06\u5faa\u73af\u53d8\u91cf\u538b\u6808 \n\t\t\t\tst.push(c[i].var);\n\t\t\t\tv[c[i].var]=1;//\u6807\u8bb0\u8bbf\u95ee\n\t\t\t\t//\u5982\u679c\u5df2\u7ecf\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff0c\u5219\u6807\u8bb0\u8be5\u5c42\u5faa\u73af\u53d8\u91cf \n\t\t\t\tif(c[i].e<c[i].b)zs=c[i].var;\n\t\t\t\telse if(c[i].e>c[i].b&&c[i].e==0x7fffffff){//\u5982\u679c\u5faa\u73af\u7ec8\u503c\u662fn \n\t\t\t\t\th[c[i].var]=1;//\u6807\u8bb0\u589e\u52a0\u4e86\u590d\u6742\u5ea6 \n\t\t\t\t\t++max;\n\t\t\t\t\tif(max>maxx&&!zs)maxx=max;\n\t\t\t\t}\n\t\t\t\telse if(c[i].b==c[i].e||c[i].e<=100)h[c[i].var]=0;//\u5426\u5219\u5e38\u6570\u590d\u6742\u5ea6 \n\t\t\t}\n\t\t}else if(c[i].order=='E'){\n\t\t\tif(st.empty())return -1;//\u5982\u679cE\u592a\u591a\uff0c\u6709\u8bed\u6cd5\u9519\u8bef \n\t\t\telse{\n\t\t\t\tif(h[st.top()])--max;//\u5982\u679c\u76ee\u524d\u5faa\u73af\u589e\u52a0\u4e86\u590d\u6742\u5ea6\uff0c\u5faa\u73af\u7ed3\u675f\u65f6\u8981\u5c06\u590d\u6742\u5ea6\u51cf1 \n\t\t\t\tv[st.top()]=0;\n\t\t\t\tif(zs==st.top())zs=0;//\u5982\u679c\u672c\u5c42\u5faa\u73af\u65e0\u6cd5\u8fdb\u5165\uff0c\u5219\u9000\u51fa\u65f6\u8981\u6807\u8bb0\u4ee5\u540e\u7684\u5faa\u73af\u53ef\u4ee5\u8fdb\u5165 \n\t\t\t\tst.pop();//\u6808\u9876\u9000\u6808 \n\t\t\t}\n\t\t}\n\t}\n\tif(!st.empty())return -1;//\u5982\u679cF\u592a\u591a \n\tif(maxx==o)return 1;//\u590d\u6742\u5ea6\u6b63\u786e \n\telse return 0;//\u590d\u6742\u5ea6\u9519\u8bef \n}\n\nint turn(int i){\n\tc[i].order=' ';\n\tc[i].var=' ';\n\tc[i].b=0;c[i].e=0;\n\tistringstream iss(str[i]);\n\tchar a[10],b[10];\n\tif(str[i][0]=='F'){\n\t\tiss>>c[i].order>>c[i].var>>a>>b;\n\t\tint p=0;\n\t\tif(a[0]=='n')c[i].b=0x7fffffff;//\u5982\u679c\u521d\u59cb\u503c\u4e3an \n\t\telse while(a[p]>='0'&&a[p]<='9'){\n\t\t\tc[i].b*=10;\n\t\t\tc[i].b+=a[p]-'0';\n\t\t\t++p;\n\t\t}\n\t\tp=0;\n\t\tif(b[0]=='n')c[i].e=0x7fffffff;//\u5982\u679c\u7ec8\u503c\u4e3an \n\t\telse while(b[p]>='0'&&b[p]<='9'){\n\t\t\tc[i].e*=10;\n\t\t\tc[i].e+=b[p]-'0';\n\t\t\t++p;\n\t\t}\n\t}\n\telse if(str[i][0]=='E')c[i].order='E';\n}\n\nint turn2(string o){\n\tint ii=0,a=0;\n\tfor(int i=0;i<o.size();i++)\n\t\tif(o[i]=='^')ii=i;\n\tif(ii){\n\t\t++ii;\n\t\twhile(ii&&o[ii]!=')'){\n\t\t\ta*=10;\n\t\t\ta+=o[ii]-'0';\n\t\t\t++ii;\t\n\t\t}\n\t\treturn a;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1522848233,
        "uid": 73574,
        "name": "WAMonster",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u4e00\u4e2a\u95ee\u9898\uff0c\u8981\u7b80\u5316\u518d\u7b80\u5316\uff0c\u624d\u53ef\u4ee5\u5229\u7528\u6700\u5c11\u7684\u4ee3\u7801\u5b8c\u6210\u95ee\u9898\u3002\u5c24\u5176\u662f\u6a21\u62df\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u51fa\u73b0tle\u7684\u95ee\u9898\uff0c\u5c31\u8981\u62fc\u5c3d\u5168\u529b\u8282\u7701\u65f6\u95f4\u7ed9\u540e\u9762\u7684\u9898\u3002\n\n\u8fd9\u9898\u662f\u6211\u5728\u8003\u573a\u4e0a\u901a\u8fc7\u4e86\u6837\u4f8b\u7136\u800c0\u5206\u544a\u7ec8\u7684\u9898\uff0c\u5f53\u65f6\u8003\u573a\u4e0a\u4e5f\u662f\u7d27\u5f20\uff0c\u6240\u4ee5\u601d\u8def\u4e0d\u660e\u6670\uff0c\u4ee3\u7801\u8fd8\u5199\u4e86\u5de8\u957f\uff0c\u6700\u540e\u90fd\u7ed9\u81ea\u5df1\u641e\u6655\u4e86\uff0c\u66f4\u52a0\u7126\u8651\uff0c\u5728\u8003\u573a\u4e0a\u5982\u540c\u706b\u4e0a\u6d47\u6cb9\u3002\n\n\u6628\u5929\u665a\u4e0a\u5341\u4e00\u70b9\u5fc3\u8840\u6765\u6f6e\u590d\u73b0\u6b64\u9898\uff0c\u4f9d\u7136\u82b1\u4e86\u4e24\u4e2a\u591a\u5c0f\u65f6\u624dAC\u3002\u8fd9\u4e2a\u6a21\u62df\u4e0d\u5f97\u4e0d\u8bf4\u771f\u662f\u6076\u5fc3\uff0c\u8981\u8003\u8651\u7684\u4e1c\u897f\u786e\u5b9e\u592a\u591a\u3002\n\n\u6700\u540e\uff1a\u601d\u8def\u4e00\u5b9a\u8981\u660e\u6670\uff01\n\nTalk is cheap, show me the code.\n\u9664\u6389\u7a7a\u884c\u6ce8\u91ca\uff0c40\u884cAC\u4ee3\u7801\u5949\u4e0a.\n\n\u53d8\u91cf\u8bf4\u660e\uff1amaxpow\u4fdd\u5b58\u6700\u5927\u590d\u6742\u5ea6\uff0c\u7528pow\uff08\u5f53\u524d\u590d\u6742\u5ea6\uff09\u8fdb\u884c\u66f4\u65b0\u3002flag\u662ferr\u72b6\u6001\u6807\u5fd7\uff0c1\u4e3a\u6b63\u5e38\uff0c0\n\u4e3aerr\u3002stopcount\u8bb0\u5f55\u8fdb\u5165\u4e0d\u6267\u884c\u5faa\u73af\u5c42\u7684\u6df1\u5ea6\uff0c\u4e3a0\u662f\u672a\u8fdb\u5165\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmain() {\n\tint n;\n\tcin >> n;\n\twhile(n--) {\n\t\tint l, ans = 0, maxpow = 0, pow = 0, flag = 1, stopcount = 0, alpha[26] = {0};\n\t\tstring complex, str;\n\t\tchar c;\n\t\tstack<pair<int, int> > stk; //pow,alpha:\u8bb0\u5f55\u8be5\u5c42\u5faa\u73af\u662f\u5426\u8ba1\u7b97\u590d\u6742\u5ea6\u548c\u4f7f\u7528\u4e86\u4ec0\u4e48\u53d8\u91cf,\u4ee5\u4fbf\u5f39\u6808\u65f6\u8fd8\u539f\u72b6\u6001.\n\t\t\n\t\tcin >> l >> complex;\n\t\tif(complex[2] == 'n') sscanf(complex.c_str(), \"O(n^%d)\", &ans);//\u5904\u7406\u7ed9\u51fa\u7684\u590d\u6742\u5ea6.\u5e38\u6570\u590d\u6742\u5ea6\u8bb0\u4e3a0,\u56e0\u4e3a1=n^0\n\t\t\n\t\tfor(int i = 0; i < l; i++) {\n\t\t\tcin >> str;\n\t\t\tif(str == \"F\") {\n\t\t\t\tint x, y;//\u50a8\u5b58x,y\u7684\u503c\n\t\t\t\tcin >> c;//\u50a8\u5b58\u65b0\u5efa\u7684\u53d8\u91cf\n\t\t\t\tif(alpha[c - 'a'] != 0) flag = 0; else alpha[c - 'a'] = 1;\n\t\t\t\t//\u5224\u65ad\u662f\u5426\u7528\u8fc7\u8be5\u53d8\u91cf \u6ca1\u7528\u8fc7\u5219\u6253\u4e0a\u6807\u8bb0.\n\t\t\t\t\n\t\t\t\tcin >> str; str == \"n\" ? x = -1 : x = atoi(str.c_str());\n\t\t\t\tcin >> str; str == \"n\" ? y = -1 : y = atoi(str.c_str());\n\t\t\t\t//\u8f93\u5165x,y\u5e76\u628a'n'\u5904\u7406\u6210-1\n\t\t\t\t\n\t\t\t\tif(!flag) continue;\n\t\t\t\t//\u8fd9\u65f6\u5019\u68c0\u6d4bflag\uff0c\u5224\u65ad\u8981\u4e0d\u8981\u7ee7\u7eed\u5904\u7406:\u8fd9\u662f\u4e3a\u4e86\u53ef\u4ee5\u8bfb\u53d6\u5b8c\u6574\u7684\u4e00\u884c,\u4e0d\u4e32\u884c.\n\t\t\t\t\n\t\t\t\tif(stopcount > 0 || (x > y && y != -1) || (x == -1 && y != -1)) stopcount++, stk.push(make_pair(0, c - 'a'));\n\t\t\t\t//\u4e09\u79cd\u60c5\u51b5:\u73b0\u5728\u7684\u7a0b\u5e8f\u6bb5\u5df2\u7ecf\u4e0d\u4f1a\u6267\u884c;x>y\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u7a0b\u5e8f\u6bb5\u4e0d\u4f1a\u6267\u884c;x='n'\u800cy\u4e3a\u5e38\u6570\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u7a0b\u5e8f\u4e0d\u9700\u8981\u6267\u884c\n\t\t\t\telse if(x == y || (x != -1 && y != -1)) stk.push(make_pair(0, c - 'a'));\n\t\t\t\t//x,y\u4e3a\u5e38\u6570 \u4e0d\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6.\n\t\t\t\telse pow++, stk.push(make_pair(1, c - 'a'));//\u5176\u4ed6\u60c5\u51b5,\u65f6\u95f4\u590d\u6742\u5ea6+1\n\t\t\t\t\n\t\t\t\tmaxpow = max(maxpow, pow);//\u66f4\u65b0\u6700\u5927\u590d\u6742\u5ea6\n\t\t\t} else if(str == \"E\") {\n\t\t\t\tif(stk.empty()) flag = 0;//\u6808\u4e3a\u7a7a,\u8bf4\u660eE\u4e0d\u5bf9\u5e94.\n\t\t\t\telse {\n\t\t\t\t\tpow -= stk.top().first;\n\t\t\t\t\talpha[stk.top().second] = 0;\n\t\t\t\t\tstk.pop();\n\t\t\t\t\t//\u5f39\u6808\uff0c\u8fd8\u539f\u72b6\u6001.\n\t\t\t\t}\n\t\t\t\tif(stopcount > 0) stopcount--;//\u6e05\u9664\u4e00\u4e2a\u505c\u6b62\u8ba1\u6570(\u65f6\u95f4\u590d\u6742\u5ea6)\u7684\u6807\u8bb0.\n\t\t\t}\n\t\t}\n\t\tif(!flag || !stk.empty()) cout << \"ERR\" << endl;//\u7ed3\u675f\u65f6\u6808\u5fc5\u987b\u4e3a\u7a7a\n\t\telse if(maxpow == ans) cout << \"Yes\" << endl;\n\t\telse cout << \"No\" << endl;\n\t}\n}\n```",
        "postTime": 1520052226,
        "uid": 65707,
        "name": "Chardo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u505a\u7684\u4e0d\u597d\u671b\u5404\u4f4d\u5927\u7287\u52ff\u55b7\n\n\n\n\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u9898\u5e76\u4e0d\u96be\uff0c\u66b4\u529b\u5c31\u80fd\u8fc7\uff0c\u4e00\u884c\u4e00\u884c\u8bfb\uff0c\u6bcf\u6b65\u4e00\u5224\n\n\uff08\u62b1\u6b49\u6211\u4e0d\u4e60\u60ef\u7528\u51fd\u6570\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF 0x7fffffff\n#define FO(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout)\n#define fui(i,a,b,c) for(int i=a;i<=b;i+=c)\n#define fdi(i,a,b,c) for(int i=a;i>=b;i-=c)\n#define ll long long\n#define MEM(a,b) memset(a,b,sizeof(a))\nint t0;\nvector<char>v;\n//\u7528\u4e8e\u5b58\u653e\u5df2\u4f7f\u7528\u7684\u53d8\u91cf\u540d \ntemplate<class T>\ninline T read(T &n)\n//\u8bfb\u5165\u4f18\u5316 \n{\n    n=0;\n    int t=1;\n    double x=10;\n    char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-'&&ch!='n') ch=getchar();\n    if(ch=='n')\n    //\u5982\u679c\u8bfb\u5230\u5b57\u7b26'n'\u4f20\u56de110\uff08'n'\u7684ASCII\u7801\uff09 \n    {\n        n=110;\n        return n;\n    }\n    if(ch=='-') t=-1;\n    else n=n*10+ch-'0';\n    ch=getchar();\n    while(ch>='0'&&ch<='9'&&ch!='.')\n    {\n        n=n*10+ch-'0';\n        ch=getchar();\n    }\n    if(ch=='.')\n    {\n        ch=getchar();\n        while(ch>='0'&&ch<='9')\n        {\n            n+=(ch-'0')/x;\n            x*=10;\n        }\n    }\n    n*=t;\n    return n;\n}\nint main()\n{\n    read(t0);\n    while(t0--)\n    {\n        bool t[27],tt[27];\n        //t\u7528\u6765\u5b58\u653e\u5df2\u4f7f\u7528\u7684\u53d8\u91cf\u540d\uff0ctt\u7528\u6765\u5b58\u653e\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u589e\u52a0\u7684\u53d8\u91cf\u540d\n        int l=0,w=0,now=0,nowF=0,ma=0;\n        //l\u4e3a\u884c\u6570\uff0cw\u4e3a\u5c0f\u660e\u7ed9\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cnow\u4e3a\u5f53\u524d\u5faa\u73af\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cnowF\u4e3a\u5f53\u524dF\u4e2a\u6570\uff0cma\u4e3a\u5f53\u524d\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6 \n        MEM(t,false);\n        MEM(tt,false);\n        v.clear();\n        read(l);\n        {\n            char ch=getchar();\n            while(ch!='n'&&(ch<'1'||ch>'9')) ch=getchar();\n            if(ch=='n') read(w);\n            //\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1\u5373\u662fn^0\n        }\n        if(l%2!=0)\n        //\u7279\u5224\uff0c\u5947\u6570\u884c\u5fc5\u7136\u4e3aERR \n        {\n            l++;\n            while(l)\n            {\n                char ch=getchar();\n                if(ch=='\\n') l--;\n            }\n            goto Next;\n        }\n        while(l)\n        {\n            l--;\n            char ch=getchar();\n            while(ch!='E'&&ch!='F') ch=getchar();\n            switch(ch)\n            {\n                case 'F':\n                {\n                    nowF++;\n                    ch=getchar();\n                    while(ch<'a'||ch>'z') ch=getchar();\n                    int i1,i2;\n                    if(t[ch-'a'+1])\n                    {\n                        l++;\n                        //\u53d8\u91cf\u540d\u91cd\u590d\uff0cERR \n                        while(l)\n                        {\n                            ch=getchar();\n                            if(ch=='\\n') l--;\n                        }\n                        goto Next;\n                    }\n                    t[ch-'a'+1]=true;\n                    //\u6807\u8bb0 \n                    v.push_back(ch);\n                    read(i1);\n                    read(i2);\n                    if(i2>=i1)\n                    {\n                    //\u63a5\u4e0b\u6765\u7684\u5faa\u73af\u53ef\u6267\u884c\u5230 \n                    if(i2==110&&i1!=110)\n                    //\u6ce8\u610fn\u5230n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1 \n                        {\n                            tt[ch-'a'+1]=true;\n                            now++;\n                            ma=max(ma,now);\n                        }\n                        break;\n                    }\n                    if(i1>i2)\n                    //\u63a5\u4e0b\u6765\u7684\u5faa\u73af\u4e0d\u53ef\u6267\u884c\u5230 \n                    {\n                        int nn=0;\n                        //F\u548cE\u5339\u914d \n                        bool nnn=true;\n                        while(nn||nnn)\n                        {\n                            l--;\n                            nnn=false;\n                            ch=getchar();\n                            while(ch!='E'&&ch!='F') ch=getchar();\n                            switch(ch)\n                            {\n                                case 'F':\n                                {\n                                    nowF++;\n                                    ch=getchar();\n                                    while(ch<'a'||ch>'z') ch=getchar();\n                                    if(t[ch-'a'+1])\n                                    {\n                                    //\u53d8\u91cf\u540d\u91cd\u590d\uff0cERR \n                                        l++;\n                                        while(l)\n                                        {\n                                            ch=getchar();\n                                            if(ch=='\\n') l--;\n                                        }\n                                        goto Next;\n                                    }\n                                    t[ch-'a'+1]=true;\n                                    //\u6807\u8bb0 \n                                    v.push_back(ch);\n                                    nn++;\n                                }break;\n                                case 'E':nowF--;if(nn) nn--;t[*(v.end()-1)-'a'+1]=false;v.pop_back();\n                                //\u5f39\u6808 \n                            }\n                        }\n                    }\n                }break;\n                case 'E':nowF--;if(tt[*(v.end()-1)-'a'+1]) now--,tt[*(v.end()-1)-'a'+1]=false;t[*(v.end()-1)-'a'+1]=false;v.pop_back();\n                //\u5f39\u6808 \n            }\n            if(nowF<0)\n            {\n            //\u5f53\u524dE\u6570\u91cf\u591a\u4e8eF\u6570\u91cf\uff0cERR \n                l++;\n                while(l)\n                {\n                    ch=getchar();\n                    if(ch=='\\n') l--;\n                }\n                goto Next;\n            }\n        }\n        if(nowF>0)\n        {\n        //F\u603b\u6570\u591a\u4e8eE\u603b\u6570\uff0cERR\uff08\u4e0d\u5fc5\u6bcf\u6b65\u4e00\u5224\uff09 \n            l++;\n            while(l)\n            {\n                char ch=getchar();\n                if(ch=='\\n') l--;\n            }\n            goto Next;\n        }\n        if(w==ma) cout<<\"Yes\"<<endl;\n        else cout<<\"No\"<<endl;\n        if(0)\n        //\u4e00\u4e2a\u5de7\u5999\u7684\u8bbe\u7f6e\uff0c\u53ea\u6709goto\u8fdb\u7684\u6765 \n        {\n            Next:;\n            cout<<\"ERR\"<<endl;\n        }\n    }\n    for(;;);\n    //\u9632\u6284\u9898\u89e3 \n    return 0;\n}\n```",
        "postTime": 1514001869,
        "uid": 62138,
        "name": "A\u661f\u9645\u7a7f\u8d8a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5\n\n\n[NoipDay1T2\u65f6\u95f4\u590d\u6742\u5ea6](https://www.luogu.org/problemnew/show/P3952)\n\n\n### \u9898\u89e3\n\n\n~~\u8003\u5b8c\u6539\u9898\u611f\u89c9\u8ddf\u5403\u7fd4\u4e00\u6837~~\n\n\n\u6211\\\\(NOIp\\\\)\u6210\u4e5f\u8fd9\u9053\u9898,\u8d25\u4e5f\u8fd9\u9053\u9898...\n\n\n\u6211\u662f\u5954\u7740\u573a\u5207\u8fd9\u9053\u9898\u53bb\u7684.\n\n\n\u7136\u800c\u5e76\u4e0d\u5b58\u5728....\n\n\n\u5177\u4f53\u601d\u8def\u5c31\u662f\u6a21\u62df\u4e00\u4e2a\u6808.\u8be5\u52a0\u7684\u52a0,\u8be5\u51cf\u7684\u51cf,\u6570\u636e\u7ed9\u4e2a\u5f88\u5f31.\u5f88\u597d\u62ff\u5206.\n\n\n\u6211\u7684\u7a0b\u5e8f\u601d\u8def\u6b63\u786e\u5c0f\u7ec6\u8282\u53ef\u4ee5\u628a\u6211\u5361\u62100\u5206,\u6700\u540e\u62ff\u4e8670,\n\n\n\u611f\u8c22\\\\(CCF\\\\)...\n\n\n~~\u4e0d\u5b58\u5728\u7684~~\n\n\n---\n\n\u5b9e\u73b0\u7565\u6709\u590d\u6742.\u4f46\u662f\u601d\u8def\u5f88\u6e05\u6670\u7684..\n\n\n\u5927\u6982\u8bb2\u4e00\u4e0b.\n\n\n\\\\(lenew\\\\)\u8868\u793a\u8fd9\u4e2a\u9700\u8981\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7a0b\u5e8f\u6709\u591a\u957f\n\n\n\n\n\n\\\\(tott\\\\)\u8868\u793a\u7ed9\u5b9a\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\n\n\\\\(ttot\\\\)\u662f\u5b9e\u9645\u7b97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\n\n\\\\(cnt\\\\)\u8868\u793a\u5f53\u524d\u6808\u4e2d\u6709\u7684\u5faa\u73af\u7ed3\u6784.\n\n\u5176\u5b9e\u5c31\u662f\u8fd8\u6709\u591a\u5c11\u5faa\u73af\u7ed3\u6784\u6ca1\u6709\u5224\u65ad\u8fc7.\n\n\n**\u5982\u679ccnt\u4e3a0\u8bf4\u660e\u5d4c\u5957\u7684\u5faa\u73af\u5df2\u7ecf\u5168\u90e8\u89e3\u51b3\u4e86**~~\u6211\u7684\u7a0b\u5e8f\u52a0\u4e0a\u8fd9\u53e5\u7279\u5224\u5c31\u80fdA\u554a.\u96be\u53d7\u5624\u5624\u5624.\u767d\u4e2230\u5206~~\n\n\n\\\\(trr\\\\)\u8868\u793a\u5faa\u73af\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bcd.\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6876\u7684\u601d\u60f3.\n\n\n\\\\(woc\\\\)\u662f\u6211\\\\(WA\\\\)\u7684\u6838\u5fc3,\\\\(woc\\\\)\u4e3a-1\u7684\u65f6\u5019\u8868\u793a\u8ba1\u7b97\u8fc7\u7a0b\u6b63\u5e38,\u4e3a0\u8868\u793a\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u51fa\u73b0\u4e86,\u4e3a1\u8868\u793a\u5faa\u73af\u7ed3\u6784\u662f\u6570\u5b57\u5230\u6570\u5b57,\u5373\u590d\u6742\u5ea6\u5e94\u8be5\u8ba1\u7b97\u4e3a\u5e38\u6570,\u800c\u5e76\u975e\u4e00\u4e2a\\\\(n\\\\)\n\n\n\\\\(maxx\\\\)\u8868\u793a\u5f53\u524d\u7a0b\u5e8f\u8ba1\u7b97\u51fa\u7684\u6700\u5927\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\n\n\n\\\\(ti\\\\)\u8868\u793a\u8bfb\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\u9700\u8981\\\\(workt\\\\)\u51fd\u6570\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u65f6\u95f4(\u5373\\\\(tott\\\\))\n\n\n\n\n\\\\(s\\\\)\u8868\u793a\u6309\u8981\u6c42\u8bfb\u5165\u7a0b\u5e8f.\u6a21\u62df\u89e3\u51b3\u5373\u53ef.\n\n\\\\(ff,spj\\\\)\u8fd9\u4e24\u4e2a\u90fd\u662f\u7528\u6765\u7279\u5224\u7684.\n\n---\n\n\\\\(workt\\\\)\u51fd\u6570\u662f\u6a21\u62df\u628a\u5b83\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u6570\u5b57\u7684.\n\n\n\n\n\n\n```cpp\n\\\\(init\\\\)\u5c31\u662f\u9884\u5904\u7406\n\\\\(rread\\\\)\u662f\u7528\u6765\u8bfb\u5165\u7ed9\u5b9a\u7684\u7a0b\u5e8f\u5185\u5bb9\u7684\n\\\\(solc\\\\)\u548c\\\\(myx\\\\)\u51fd\u6570\u4f7f\u7528\u6765\u5904\u7406\u7a0b\u5e8f\u7684\u5185\u5bb9\n\\\\(iinit\\\\)\u662f\u9884\u5904\u7406\n```\n---\n\n\\\\[workt\\\\]\n\n\n\u5904\u7406\u597d\u7ed9\u5b9a\u7684\u7a0b\u5e8f\u590d\u6742\u5ea6,\u4ee5\u53ca\u662f\u5426\u5b58\u5728\u7ed9\u5b9a\u7684\u7a0b\u5e8f\u662f\\\\(O(1)\\\\)\u7684\u7279\u6b8a\u60c5\u51b5.\n\n\n---\n\n\\\\[solc\\\\]\n\n\n\u5bf9\u4e8e\\\\(F\\ x\\ a\\ b\\\\)\u7684\u5f62\u5f0f\u5224\u65ad\n\n\n- \\\\(a < b\\\\),\\\\(a,b\\\\)\u5747\u4e3a\u6570\u5b57,\u5373\u8be5\u884c\u590d\u6742\u5ea6\u5e94\u8be5\u88ab\u5224\u65ad\u4e3a\\\\(O(1)\\\\)\u7684\u60c5\u51b5\n\n- \\\\(a\\\\)\u662f\u5b57\u6bcd.\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5faa\u73af\u4e0d\u4e3a\u9006\u5e8f.\u6240\u4ee5\\\\(a\\\\)\u4e00\u65e6\u662f\\\\(n\\\\),\u76f4\u63a5\u5ffd\u7565\u540e\u9762\u7684\u7a0b\u5e8f.\u4e0d\u8fdb\u5165\u540e\u9762\u7684\u5faa\u73af.\u989d\u5916\u5904\u7406.\n\n\n - \\\\(b\\\\)\u662f\u5b57\u6bcd,\\\\(a > 0\\\\)\u6b63\u5e38\u5faa\u73af.\n\n - \\\\(a>b\\\\)\u4e00\u6837\u5faa\u73af\u4e0d\u4e3a\u9006\u5e8f,\u4e0d\u8fdb\u5165\u540e\u9762\u7684\u7a0b\u5e8f.\u7528\\\\(spj\\\\)\u7279\u5224\n\n---\n\n\\\\[myx\\\\]\n\n\n\u4e00\u6b21\u5904\u7406\u7a0b\u5e8f\u7684\u6bcf\u4e00\u884c.\n\n\n\u6709\\\\(F\\\\)\u7684\u64cd\u4f5c\u5c31\u52a0\u5230\u6808\u4e2d.\u540c\u65f6\u7528\u6876\u8bb0\u5f55\u4e00\u4e0b\u5b57\u6bcd\u7684\u4f7f\u7528\u60c5\u51b5.\n\n\n\u989d\u5916\u9700\u8981\u6ce8\u610f\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u7684\u5904\u7406.\n\n\n\u6709\\\\(E\\\\)\u7684\u64cd\u4f5c\u5c31\u4ece\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a.\u7edf\u8ba1\u4e00\u4e2a\u6700\u5927\u7684\u65f6\u95f4\u590d\u6742\u5ea6.\n\n\n\u4ee5\u53ca\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u65f6\u5019\u8fd8\u9700\u8981\u5c06\u4e4b\u524d\u6876\u4e2d\u8bb0\u5f55\u7684\u5b57\u6bcd\u4f7f\u7528\u60c5\u51b5\u548c\u8fd9\u4e00\u6bb5\u7a0b\u5e8f\u7b97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6e05\u7a7a.\n\n\n\u5982\u679c\u6808\u4e2d\u4e3a\u7a7a.\u5c31\u91cd\u65b0\u5904\u7406\\\\(woc\\\\)\u6570\u7ec4.\n\n\n\u56e0\u4e3a\u4f1a\u6709\u5faa\u73af\u5e76\u5217\u7684\u60c5\u51b5...\u621130\u5206\u5c31\u4e22\u5728\u8fd9\u91cc\u4e86....\n\n\n~~\u96be\u53d7~~\n\n\n---\n\n\\\\[main\\\\]\n\n\n\u591a\u7ec4\u6570\u636e.\u5bf9\u5b57\u7b26\u4e32\u7684\u5904\u7406.\n\n\n\u5224\u65ad\u65f6\u5019,\u5982\u679c\u6709\u7a0b\u5e8f\u4ec5\u4e00\u884c\u7684\u76f4\u63a5\u4e0d\u7528\u7ba1\u8fd9\u4e2a\u7a0b\u5e8f,\u7a0b\u5e8f\u4ec5\u4e00\u884c\u53ea\u80fd\u4e3a\\\\(F\\\\)\u6216\u662f\\\\(E\\\\)\u90fd\u662f\u4e0d\u5408\u9898\u610f\u7684.\u76f4\u63a5\\\\(ERR\\\\)\n\n\n\u7ed3\u675f\u8fc7\u591a.\u6808\u4e2d\u5143\u7d20\u53ef\u80fd\u4e3a\u8d1f\u7684\u65f6\u5019.\u6216\u8005\u662f\u5143\u7d20\u91cd\u590d\u5b9a\u4e49\u7684\u65f6\u5019.\u90fd\u662f\\\\(ERR\\\\)\n\n\n\u6240\u6709\u884c\u90fd\u5904\u7406\u5b8c\u4e86.\u4f46\u662f\u6808\u4e2d\u8fd8\u6709\u5143\u7d20\u7684\u65f6\u5019.\u4e00\u6837\u662f\\\\(ERR\\\\)\n\n\n\u7b97\u51fa\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7ed9\u5b9a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u540c.\\\\(No\\\\)\n\n\n\u5269\u4e0b\u7684\u5c31\u662f\\\\(Yes\\\\)\u4e86...\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\nusing namespace std ;\ntemplate<class T>void read(T &x){\n    x=0;int f=0;char ch=getchar();\n    while(ch<'0'||ch>'9'){f|=(ch=='-');ch=getchar();}\n    while(ch<='9'&&ch>='0'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    x=f?-x:x;\n    return ;\n}\n\nint lenew,tott,ttot,cnt,trr[30],turr[105],maxx,woc[1002];\nchar ti[10],s[105][105];\nbool f,ff,spj;\n\nvoid workt(char *s){\n    int lens=strlen(s);tott=0;f=0;\n    if(s[2]=='1') f=1;\n    if(s[2]=='n'&&s[3]=='^'){\n        int i=4;\n        while(s[i]<='9'&&s[i]>='0'){tott=tott*10+s[i]-'0';i++;}\n    }\n}\n\nvoid init(){\n    ff=0;f=0;spj=0;maxx=0;\n    memset(s,0,sizeof(s));\n    memset(ti,0,sizeof(ti));\n    memset(trr,0,sizeof(trr));\n    tott=ttot=lenew=cnt=0;\n    for(int i=1;i<=1000;i++) woc[i]=-1;\n}\n\nvoid rread(int x){\n    char ch;int tot=0;\n    while(scanf(\"%c\",&ch)&&ch!='\\n') s[x][++tot]=ch;\n}\n\nvoid solc(char *t,int tun){\n    int i=5;char ch=t[i];int ss=0,en=0;bool cc=0;\n    if(ch=='n') ch=t[++i],cc=1;\n    if(!cc) while(ch<='9'&&ch>='0'){ss=(ss<<1)+(ss<<3)+(ch^48);ch=t[++i];}\n    if(ch==' ') ch=t[++i];\n    if(ch<='9'&&ch>='0') while(ch<='9'&&ch>='0'){en=(en<<1)+(en<<3)+(ch^48);ch=t[++i];}\n    if(ch=='n'&&!ss) return ;\n    if(en&&!ss||(en<ss&&ss>0&&en>0)) spj=1;\n    if(ch=='n'&&!spj) ttot++;\n    if(spj||cc) woc[tun]=0;\n    if(en&&ss) woc[tun]=1;\n    return ;\n}\n\nvoid iinit(){\n    for(int i=1;i<=1000;i++) woc[i]=-1;\n    spj=0;\n}\n\nvoid myx(){\n    cnt=0;\n    for(int i=1;i<=lenew;i++){\n        if(s[i][1]=='F') {\n            cnt++;\n            for(int j=3;j<=5;j++){\n                if(j==5) {solc(s[i],cnt);continue;}\n                if(s[i][j]<='z'&&s[i][j]>='a') {\n                    if(!trr[s[i][j]-'a'+1]) \n                        trr[s[i][j]-'a'+1]=1,turr[cnt]=s[i][j]-'a'+1;\n                    else { ff=1;break; }\n                }\n            }\n        }\n        if(s[i][1]=='E'){\n            if(cnt<0) {ff=1;break;}\n            trr[turr[cnt]]=0;\n            maxx=max(maxx,ttot);\n            if(woc[cnt]==-1) ttot--;\n            cnt--;\n        }\n        if(!cnt) iinit();\n    }\n    if(cnt>0) ff=1;\n}\n\nint main()\n{\n    int t;read(t);\n    while(t--){\n        init();\n        read(lenew);scanf(\" %s\",ti);char ch=getchar();\n        workt(ti);\n        for(int i=1;i<=lenew;i++)\n            rread(i);\n        if(lenew==1) {puts(\"ERR\");continue;}\n        myx(); \n        if(ff) puts(\"ERR\");\n        else if(cnt!=0) puts(\"ERR\");\n        else if(maxx!=tott) puts(\"No\");\n        else puts(\"Yes\");\n    }\n    return 0;\n}\n```\n\n---\n\nBy:Wahacer\n\n\n2017.12.22\n\n\n11:03\n",
        "postTime": 1513912572,
        "uid": 41749,
        "name": "Wahacer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "# \u4e3a\u4ec0\u4e48\u8fd9\u4e48\u7b80\u5355\u7684\u9898\u8003\u573a\u4e0a\u6ca1\u5199\u51fa\u6765\uff01\uff01\uff01\uff01\uff01\uff01\n\n###### \u597d\u4e86\u5165\u6b63\u6587\uff1a\u8fd9\u9898\u9996\u5148\uff0c\u5f88\u660e\u663e\u662f\u4e00\u9053\u6a21\u62df\u662f\u5427\n\n\n######\u6211\u662f\u8fd9\u4e48\u505a\u7684\uff1a\u5982\u4e0b\u4ee3\u7801\uff0csta\u4e3a\u4e00\u4e2a\u624b\u52a8\u6808\uff0c\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u4e0d\u7ba1\u5982\u4f55\u90fd\u4e22\u8fdb\u53bb\uff0c\u7136\u540e\u7528\u4e00\u4e2ab\u6570\u7ec4\u5224\u65ad\u662f\u5426\u91cd\u590d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5982\u679c\u91cd\u590d\u5c31\u662f\u8981\u8f93\u51faERR\u662f\u5427\u3002\u4f46\u662f\u4e0d\u6025\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u8f93\u51fa\u4e4b\u540e\u591a\u4f59\u8bfb\u5165\u5f88\u96be\u641e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f53\u4f5c\u4ec0\u4e48\u6ca1\u53d1\u751f\uff0c\u5b9a\u4e49\u4e2asp\u6765\u8bb0\u5f55\u662f\u5426\u51fa\u9519\u3002\u7136\u540e\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u4eec\u5982\u4f55\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u4e86\uff0c\u6211\u4eec\u5728\u5f00\u4e00\u4e2adeep\u6570\u7ec4\uff0c\u8868\u793a\u8fd9\u91cd\u5faa\u73af\u6240\u8fbe\u5230\u7684\u6df1\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4f4d\u5faa\u73af\u67094\u79cd\u60c5\u51b5\uff08\u4e0d\u591a\u8bf4\u4e86\u5427\u5f88\u663e\u7136\uff09\uff08\u5177\u4f53\u8fd9\u90e8\u5206\u89c1\u4ee3\u7801\u6ce8\u91ca\u3002\u8fd9\u5c31\u662f\u5982\u679c\u9047\u5230\u201cF\u201d\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5982\u679c\u9047\u5230\u201cE\u201d\u66f4\u597d\u529e\uff0c\u5c31\u662f\u76f4\u63a5b\u6570\u7ec4\u6e050\uff0c\u7136\u540e\u6808\u5c3e\u641e\u51fa\u53bb\u5c31\u597d\u4e86\u3002\n\n\n\n```cpp\ninclude<iostream>\nusing namespace std;\nvoid _solve();\nint _read()\n{\n```\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u8bfb\u5165\u7f62\u4e86\u3002\n\n```cpp\n    char ch;\n    cin>>ch>>ch;\n    cin>>ch;\n    if (ch=='1') \n       {\n           cin>>ch;\n           return 0;\n       }\n    cin>>ch;\n    int sum=0;\n    cin>>ch;\n    while (ch!=')')\n        {\n            int temp=int(ch)-48;\n            sum=sum*10+temp;\n            cin>>ch;\n        }\n    return sum;\n}\nint z(string st)\n{\n```\n\u8fd9\u4e5f\u662f\u8bfb\u5165\u9884\u5904\u7406\uff0c\u5f88\u7b80\u5355\u561b\u8fd9\u90e8\u5206\u770b\u770b\u5c31\u597d\n\n```cpp\n    if (st==\"n\") return 1000;\n    int sum=0;\n    for (int i=0;i<=st.length()-1;i++) sum=sum*10+int(st[i])-48;\n    return sum;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    for (int i=1;i<=t;i++) _solve();\n    //t\u7ec4\u6570\u636e\n}\nvoid _solve()\n{\n    int sp=0;\n    int n;\n    cin>>n;\n    int p=_read();\n    int Max=0;\n    int deep[300]={0};\n    char sta[205]={0};\n    int l=0;\n    int b[300]={0};\n```\n\u6570\u7ec4\u5b9a\u4e49\u5982\u4e0a\n```cpp\n    for (int i=1;i<=n;i++)\n        {\n            char F,I;\n            string X,Y;\n            cin>>F;\n            if (F=='F') \n                {\n                    cin>>I>>X>>Y; \n                    sta[++l]=I;\n                    if (b[int(I)]==1) sp=1;\n                    b[int(I)]=1;\n                    int x,y;\n                    x=z(X);y=z(Y);\n                    if (x>y) {deep[l]=-9999;}\n                    //\u60c5\u51b51\uff1a\u8fd9\u91cd\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\u63a5\u4e0b\u6765\u90fd\u4e0d\u6267\u884c\uff0c\u5219\u641e\u4e00\u4e2a\u6781\u5c0f\u503c\uff1b\n                    if (x==y) {deep[l]=deep[l-1];}\n                    if (x<y && y<=100) {deep[l]=deep[l-1];}\n                    //\u60c5\u51b52\uff0c3\uff1a\u5982\u679c\u9047\u5230\u5e38\u719f\u5faa\u73af\u5219deep\u4e0d\u53d8\uff0c\u8d4b\u503c\u4e3a\u524d\u4e00\u6b21\u503c\n                    if (x<y && y>100) {deep[l]=deep[l-1]+1;}\n                    //\u60c5\u51b54\uff1a\u600e\u4e48\u8bf4\u5462\u53cd\u6b63\u5c31\u662f\u8981\u589e\u52a0deep\u90a3\u4e2a\uff0c\u5c31\u662f\u9047\u5230\u50cf\u201c1 n\u201d\u8fd9\u6837\u5b50\u7684\u8981\u6b21\u65b9+1\u7684\n                    Max=max(Max,deep[l]);\n                }\n            if (F=='E')\n               {\n               //\u5982\u679c\u4e3a\u201cE\u201d\u5219\u51fa\u6808\n                       if (l==0) sp=1;\n                       else\n                         {\n                             b[int(sta[l])]=0;\n                             l--;\n                      }\n               }\n        }\n    if (l!=0) sp=1;\n```\n\u7279\u5224\u201cF\u201d\u201cE\u201d\u5339\u914d\n\n\n\n```cpp\n    if (sp==1) cout<<\"ERR\"<<endl;\n      else \n        {\n            if (Max==p) cout<<\"Yes\"<<endl; else cout<<\"No\"<<endl;\n        }\n}\n\n```",
        "postTime": 1513409919,
        "uid": 14904,
        "name": "smzzl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "\u65e0\u5fc3\u6765\u5237\u4ee4\u4eba\u53d1\u6307\u7684\u7f51\u7edc\u6d41\u7684\u6211\u4eca\u5929\u7ec8\u4e8e\u586b\u597d\u4e86\u8fd9\u4e2a\u4e07\u4eba\u5751\u2026\u2026\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\u3002\n\u7136\u540e\u5462\uff0c\u8fd9\u662f\u4e00\u9053\u8981\u5224\u9519\u7684\u6a21\u62df\u9898\u3002\n\u6700\u540e\uff0c\u8fd9\u8fd8\u662f\u4e00\u9053\u6570\u636e\u591a\u6837\u5316\u7684\u6a21\u62df\u9898\u3002\n```cpp\n    #include<cstdio>\n    #include<cstdlib>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    #define ADT class\n    #define elif else if\n    #define reg register int\n    #define lop(c,m) for(int c=1;c<=m;c++)\n    #define loop(c,m) for(int c=0;c<m;c++)\n    #define getspace(n) (n*)memset(malloc(sizeof(n)),0,sizeof(n))\n    using namespace std;\n    //\u7f3a\u7701\u6e90\u7cfb\u5217\n```\n\u7528\u6807\u51c6\u8f93\u5165\u8fb9\u8f93\u5165\u8fb9\u5224\u9519\u7684\u4ee3\u7801\u91cf\u662f\u5f88\u6050\u6016\u7684\u3002\u6211\u8f9b\u8f9b\u82e6\u82e6\u5730\u5c1d\u8bd5\u4e86\u63a5\u8fd11.5h\u7136\u540e\u7206\u96f6\u3002\uff08Noip\u5f53\u5929\u7684\u60c5\u51b5\uff09\n\u4eca\u5929\u6700\u540e\u51b3\u5b9a\u91c7\u7528\u5b57\u7b26\u4e32\u5927\u6cd5\u3002\u628a\u7a0b\u5e8f\u5b58\u4e0b\u6765\u5148\u4e00\u904d\u5224\u9519\u7136\u540e\u624d\u5f00\u59cb\u8ba1\u7b97\u3002\u540c\u6837\u4e5f\u53ef\u4ee5\u7701\u6389\u7a0b\u5e8f\u9519\u8bef\u65f6\u8df3\u8fc7\u4e00\u5806\u8f93\u5165\u7684\u5224\u65ad\u3002\n```cpp\n    #include<stack>\n\n    char prog[101][100];//\u5b58\u653e\u6bd4\u5bf9\u7b54\u6848\u548c\u7a0b\u5e8f\n\n    stack<bool> hascomp;//\u5faa\u73af\u662f\u5426\u4f7f\u590d\u6742\u5ea6\u722c\u5347\uff08\u5224\u65ad\u9000\u51fa\u5faa\u73af\u65f6\u662f\u5426\u9700\u8981\u51cf\u5f53\u524d\u590d\u6742\u5ea6\uff09\n```\n\u5224\u9519\uff1a\u53ea\u6709\u4e24\u79cd\u9519\u8bef\u60c5\u51b5\uff0c\u53ef\u4ee5\u9488\u5bf9\u6027\u5730\u5199\u3002\n```cpp\n    bool errordeal(int &l){\n        stack<char> varin;\n        bool chuse[26];//\u53d8\u91cf\u5224\u91cd\n        memset(chuse,0,sizeof(chuse));\n        char ch;\n        lop(i,l){//\u4ece1\u5f00\u59cb\u5faa\u73af\uff0c\u56e0\u4e3aprog[0]\u653e\u4e86\u6bd4\u5bf9\u7528\u7684\u7b54\u6848\n            switch(prog[i][0]){\n                case'F':\n                    sscanf(prog[i],\"%*c %c\",&ch);//\uff08\u9898\u9762\u4e0a\u8bf4\u662f\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff09\u8bfb\u53d8\u91cf\n                    if(chuse[ch-'a']){//\u53d8\u91cf\u91cd\u590d\n                        printf(\"ERR\\n\");\n                        return 1;\n                    }\n                    else{\n                        varin.push(ch);\n                        chuse[ch-'a']=1;//\u6807\u8bb0\n                    }\n                    break;\n                case'E':\n                    if(varin.size()==0){//F\u548cE\u4e0d\u5339\u914d\n                        printf(\"ERR\\n\");\n                        return 1;\n                    }\n                    else{\n                        chuse[varin.top()-'a']=0;\n                        varin.pop();//\u6e05\u9664\u6807\u8bb0\n                    }\n            }\n        }\n        if(varin.size()){//\u5982\u679c\u8fd8\u6709\u5faa\u73af\u6ca1\u6e05\u5b8c\u5c31\u8bf4\u660e\u5c11\u4e86E\uff0c\u4ecd\u7136\u9519\u8bef\n            printf(\"ERR\\n\");\n            return 1;\n        }\n        return 0;\n    }\n    //\u6709\u9519\u8fd4\u56de1\uff0c\u65e0\u9519\u8fd4\u56de0\n```\n\u5224\u9519\u5b8c\u4e86\u4e4b\u540e\u5c31\u5168\u662f\u5408\u6cd5\u7a0b\u5e8f\u4e86\u3002\n\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff08\u521d\u503c\u6bd4\u4e0a\u754c\u5927\uff09\u5faa\u73af\u7684\u5904\u7406\n```cpp\n    int unloopdeal(int now){//\u63a5\u53d7\u5f53\u524d\u884c\u53f7\n        int need=1;//\u9700\u8981\u591a\u5c11\u4e2aE\u6765\u7ed3\u675f\u5f53\u524d\u5faa\u73af\u5757\n        for(int i=now+1;;++i){\n            switch(prog[i][0]){\n                case'F':\n                    ++need; \n                    break;\n                case'E':\n                    --need;\n            }\n            if(!need) return i;//\u4e3a0\u5c31\u8bf4\u660e\u5230\u4e86\u8fd9\u4e2a\u5faa\u73af\u5757\u7684\u7ed3\u675f\uff0c\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u675f\u7684\u884c\u53f7\n        }\n    }\n```\n\u4e3b\u7a0b\u5e8f\uff1a\u505a\u8f93\u5165\u53ca\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7edf\u8ba1\u3002\n\n```cpp\n    int main(){\n        int t,l,lvalue,rvalue,comp,maxcomp;\n        //t-\u7ec4\u6570\uff0cl-\u884c\u6570\uff0clv-\u5faa\u73af\u7684\u521d\u503c\uff0crv-\u5faa\u73af\u7684\u4e0a\u754c\uff0ccomp-\u5f53\u524d\u590d\u6742\u5ea6\uff0cmc-\u6574\u4f53\u590d\u6742\u5ea6\n        //\u90fd\u5199\u5728\u8fd9\u91cc\u662f\u56e0\u4e3a\u5904\u7406\u91cc\u9762\u7b80\u76f4\u6709\u591f\u4e71\u4e86\n        char ch,vari;\n        char ans[100];\n        //ch-\u53d8\u91cf\u540d\uff0cvari-\u5224\u65ad\u4e0a\u754c\u548c\u5faa\u73af\u662fn\u8fd8\u662f\u6570\u5b57\n        scanf(\"%d\",&t);\n        while(t--){\n            comp=maxcomp=0;\n            scanf(\"%d \",&l);\n            memset(prog,0,sizeof(prog));\n            loop(i,l+1) while((ch=getchar())!='\\n') prog[i][strlen(prog[i])]=ch;//\u8bfb\u5165\u7a0b\u5e8f\uff0c\u987a\u4fbf\u4e5f\u8bfb\u4e86O(balabala)\n            if(errordeal(l)) continue;//\u6709\u9519\u76f4\u63a5\u8bfb\u4e0b\u4e00\u7ec4\u6570\u636e\uff1b\u8fd9\u7ec4\u6570\u636e\u5df2\u7ecf\u8bfb\u5b8c\n            lop(i,l){\n                switch(prog[i][0]){\n                    case'F':\n                        sscanf(prog[i],\"%*c %c \",&ch);//\u8bfb\u53d8\u91cf\u540d\n                        sscanf(prog[i],\"%*c %*c %c\",&vari);//\u68c0\u67e5\u521d\u503c\n                        if(isdigit(vari)) sscanf(prog[i],\"%*c %*c%d\",&lvalue);\n                        else lvalue=-1;//\u662f\u6570\u5b57\u5c31\u8bfb\uff0c\u5982\u679c\u4e0d\u662f\u6570\u5b57\uff08\u5c31\u662fn\uff09\u505a\u6807\u8bb0-1\n                        if(lvalue!=-1) sscanf(prog[i],\"%*c %*c %*d %c\",&vari);\n                        else sscanf(prog[i],\"%*c %*c %*c %c\",&vari);\n                        if(isdigit(vari)){\n                            if(lvalue!=-1) sscanf(prog[i],\"%*c %*c%*d%d\",&rvalue);\n                            else sscanf(prog[i],\"%*c %*c %*c%d\",&rvalue);\n                        } \n                        else rvalue=-1;//\u548c\u4e0a\u9762\u4e00\u4e2a\u539f\u7406\uff0c\u4f46\u8981\u5224\u65ad\u521d\u503c\u662f\u5426\u4e3an\uff0c\u4e0d\u7136\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6ca1\u6cd5\u5199\n                        //\u5176\u5b9e\u8bfb\u5165\u4e0d\u7528\u628a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5fe0\u5b9e\u5730\u5199\u51fa\u6765\uff0c\u4f46\u662f\u7406\u89e3\u65b9\u4fbf\n                        if(lvalue==-1){\n                            if(rvalue!=-1) i=unloopdeal(i);//\u5904\u74061\uff1a\u521d\u503c\u4e3an\uff0c\u4e0a\u754c\u4e3a\u5e38\u6570\uff0c\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\n                            else hascomp.push(0);//\u5904\u74062\uff1a\u521d\u503c\u4e3an\uff0c\u4e0a\u754c\u4e3an\uff0c\u5e38\u6570\u590d\u6742\u5ea6\n                        }\n                        else if(rvalue==-1){\n                            maxcomp=max(maxcomp,++comp);\n                            hascomp.push(1);//\u5904\u74063\uff1a\u521d\u503c\u4e3a\u5e38\u6570\uff0c\u4e0a\u754c\u4e3an\uff0c\u590d\u6742\u5ea6\u722c\u5347\n                        }\n                        else if(lvalue<=rvalue) hascomp.push(0);//\u5904\u74064\uff1a\u521d\u503c\u4e3a\u5e38\u6570\uff0c\u4e0a\u754c\u4e3a\u5e38\u6570\uff0c\u4e14\u521d\u503c\u5c0f\u4e8e\u4e0a\u754c\uff0c\u5e38\u6570\u590d\u6742\u5ea6\n                        else i=unloopdeal(i);//\u5904\u74064\uff1a\u521d\u503c\u4e3a\u5e38\u6570\uff0c\u4e0a\u754c\u4e3a\u5e38\u6570\uff0c\u4e14\u521d\u503c\u5927\u4e8e\u4e0a\u754c\uff0c\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\n                        //\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff0c\u5c31\u8df3\u884c\u53f7\n                        break;\n                    case'E':\n                        if(hascomp.top()) --comp;\n                        hascomp.pop();//\u51fa\u4e4e\u610f\u6599\u7684\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u662f\u5e38\u6570\u590d\u6742\u5ea6\uff0c\u4ee5\u786e\u5b9a\u51cf\u4e0d\u51cf\u5f53\u524d\u590d\u6742\u5ea6\n                }\n            }\n            if(!maxcomp) sprintf(ans,\"O(1)\");\n            else sprintf(ans,\"O(n^%d)\",maxcomp);\n            if(!strcmp(ans,prog[0])) printf(\"Yes\\n\");\n            else printf(\"No\\n\");//\u5b57\u7b26\u4e32\u6bd4\u5bf9\uff0c\u5224\u65ad\u7b54\u6848\u5bf9\u9519\n        }\n        exit(0);\n}\n```",
        "postTime": 1513330593,
        "uid": 49234,
        "name": "Zarinopl",
        "ccfLevel": 7,
        "title": "P3952 \u65f6\u95f4\u590d\u6742\u5ea6"
    },
    {
        "content": "\u8fd9\u9898\u4e3b\u8981\u662f\u5904\u7406for\u8bed\u53e5\u7684\u5d4c\u5957\uff0c\u548c\u62ec\u53f7\u5d4c\u5957\u76f8\u4f3c\uff0c\u6709\u5173\u5d4c\u5957\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u60f3\u5230\u7528\u5806\u6808\u5b9e\u73b0\uff0c\u8fd9\u91cc\u75283\u4e2a\u5806\u6808\uff0c\u4e00\u4e2a\u5904\u7406\u5d4c\u5957\uff0c\u4e3b\u8981\u5904\u7406F\u548cE\u662f\u5426\u5bf9\u5e94\u3002\u4e00\u4e2a\u5904\u7406\u8981\u589e\u52a0\u590d\u6742\u5ea6\uff08\u6700\u540e\u4e00\u4e2a\u8f93\u5165\u662fn\uff09\u7684\u5d4c\u5957\uff0c\u8be5\u5806\u6808\u8fbe\u5230\u7684\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u3002\u6700\u540e\u4e00\u4e2a\u5806\u6808\u5904\u7406\u4e0d\u4f1a\u8fdb\u5165\u5faa\u73af\u7684\u5d4c\u5957(for i = n to 1\u4e4b\u7c7b\u7684\uff09\uff0c\u5f53\u8fd9\u4e2a\u5806\u6808\u5927\u5c0f\u4e3a0\u65f6\u5019\u3002\u7b2c\u4e8c\u4e2a\u5806\u6808\u624d\u6709\u7528\u3002\u5177\u4f53\u770b\u6ce8\u91ca\n\n```cpp\n\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <stack>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nint t,l;\n//\u5224\u65ad\u662f\u5426\u6709\u6548\u5faa\u73af\uff0c\u80fd\u4e0d\u80fd\u8fdb\u5165\nbool nengxunhuan(string a,string b) {\n  if (b==\"n\")\n    return true;\n  if (a==\"n\")\n    return false;\n  if (a.size()==b.size())\n    return a<=b;\n  else\n    return a.size()<b.size();\n}\nint main() {\n  scanf(\"%d\", &t);\n  for (int j=1;j<=t;j++) {\n    int ans=0;\n    bool err=false,zimu[200];//err\u6807\u8bb0\u662f\u5426\u8bed\u6cd5\u9519\u8bef\uff0czimu\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u53d8\u91cf\u662f\u5426\u7528\u8fc7\n    stack<char> st,sn,wuxiao;//st\u5904\u7406\u5d4c\u5957\uff0csn\u5904\u7406\u590d\u6742\u5ea6\uff0cwuxiao\u5904\u7406\u5faa\u73af\u662f\u5426\u6709\u6548\n    memset(zimu,0,sizeof(zimu));\n    char c,i;string fzd,x,y;\n    scanf(\"%d\",&l);\n    cin>>fzd;\n    for (int k=1;k<=l;k++) {\n      cin>>c;\n      if (c=='E') {\n        if (err) continue;\n        if (st.empty()) {err=true;}//\u5806\u6808\u7a7a\u4e86\u8bfb\u5165E\uff0c\u8bed\u6cd5\u9519\u8bef\n        else {\n          if (!sn.empty() && st.top()==sn.top())//sn\u540c\u6b65\u51fa\u6808\n            sn.pop();\n          if (!wuxiao.empty() && st.top()==wuxiao.top())//wuxiao\u540c\u6b65\u51fa\u6808\n            wuxiao.pop();\n          zimu[st.top()]=false;\n          st.pop();\n        }\n      }\n      if (c=='F') {\n        cin>>i>>x>>y;\n        if (err) continue;\n        if (zimu[i]) {err=true;}\n        else if (nengxunhuan(x, y)) {\n          st.push(i);\n          zimu[i]=true;\n          if (x!=\"n\" && y==\"n\" && wuxiao.empty()) {//\u5f53\u6709\u6548\u4e14\u53f3\u8fb9\u662fn\uff0c\u5de6\u8fb9\u4e0d\u540c\u65f6\u4e3an\uff0c\u9700\u8981\u589e\u52a0\u590d\u6742\u5ea6\n            sn.push(i);\n            if (sn.size()>ans) ans=sn.size();\n          }\n        }\n        else {//\u65e0\u6548\u5faa\u73af\uff0c\u8fdb\u5165\u6807\u8bb0\u7684\u5806\u6808\n          st.push(i);\n          zimu[i]=true;\n          wuxiao.push(i);\n        }\n      }\n    }\n    if (!st.empty()) err=true;//\u7f3a\u5c11E\n    if (err) cout<<\"ERR\"<<endl;\n    else {\n      if (ans==0 && fzd==\"O(1)\")\n        cout<<\"Yes\"<<endl;\n      else {//\u5904\u7406\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\uff0c\u4e3b\u8981\u662f\u6570\u5b57\u8f6c\u5b57\u7b26\uff0c\u548c\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u611f\u89c9\u8fd9\u6837\u5199\u6bd4\u8f83\u7b80\u6d01\u3002\u5904\u7406\u540e\u548c\u8f93\u5165\u7684\u590d\u6742\u5ea6\u5b57\u8282\u5b57\u7b26\u4e32\u6bd4\u8f83\u5c31\u53ef\u4ee5\u4e86\n        string ss=\"\";\n        while(ans>0) {\n          ss+=ans%10+'0';\n          ans/=10;\n        }\n        reverse(ss.begin(),ss.end());\n        ss=\"O(n^\"+ss+\")\";\n        if (ss==fzd)\n          cout<<\"Yes\"<<endl;\n        else\n          cout<<\"No\"<<endl;\n      }\n    }\n\n  }\n}\n```",
        "postTime": 1513149596,
        "uid": 6262,
        "name": "lieee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    },
    {
        "content": "D1T2\u7740\u5b9e\u662f\u9053\u5927\u6a21\u62df\uff0c\u53ef\u60dc\u6211\u7206\u70b8\u4e86\u3002\u5410\u69fd\u4e00\u4e0b\u6700\u8fd1\u51e0\u5e74\u9898\u76ee\u8d8a\u6765\u8d8a\u957f\uff0c\u6ca1\u6709\u51e0\u5206\u949f\u9898\u90fd\u8bfb\u4e0d\u5b8c\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u6a21\u62df\uff0c\u953b\u70bc\u4ee3\u7801\u80fd\u529b,\u7ec6\u5fc3\u548c\u8010\u5fc3\u3002\u9898\u76ee\u7528\u5806\u6808\u548c\u9012\u5f52\u90fd\u80fd\u5b9e\u73b0\uff0c\u6211\u7528\u4e86\u9012\u5f52\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u548c\u7a0b\u5e8f\u4e2d\u6700\u5927\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u5173\uff0c\u7ef4\u62a4\u5806\u6808\u65f6\u6ce8\u610f\u7a7a\u6808\u65f6\u5f39\u51fa\u64cd\u4f5c\u8c28\u9632RE\u3002\u72e1\u733e\u7684\u51fa\u9898\u4eba\u53c8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u53eb\u505a\u6d4b\u8bd5\u70b9\u591a\u7ec4\u6570\u636e\u7684\u4e1c\u897f\u5bfc\u81f4\u4f60\u4e0d\u80fd\u5224\u5230ERR\u540e\u76f4\u63a5\u4e00\u4e2aexit(0)\u4e86\u4e4b\uff0c\u53c8\u589e\u52a0\u4e86\u9898\u76ee\u590d\u6742\u5ea6\u3002\u6b64\u5916\u9898\u76ee\u5bf9\u5b57\u7b26\u4e32\u5904\u7406\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u63a8\u8350\u6309\u884c\u8bfb\u53d6\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u8fd9\u6837\u7ebf\u6027\u5904\u7406\u5199\u8d77\u6765\u6bd4\u8f83\u70e6\u3002\n\nc++\u4e2dstring\u7c7b\u7528\u8d77\u6765\u5f88\u6162\uff0cstringstream\u7528\u8d77\u6765\u66f4\u6162\uff0c\u4e0d\u8fc7\u597d\u5728\u8fd9\u9898\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u90fd\u80fd0msAC\uff0c\u5c31\u91c7\u7528\u4e86\u5f88\u987a\u624b\u7684\u5b57\u7b26\u4e32\u6d41\u6765\u5904\u7406\uff0c\u5982\u679c\u54ea\u5929\u6570\u636e\u89c4\u6a21\u5927\u4e86\u8fd9\u5f88\u6709\u53ef\u80fd\u6210\u4e3a\u4f60\u7a0b\u5e8f\u7684\u51b3\u901f\u6b65\uff08stringstream\u771f\u7684\u5f88\u6162\uff09\n\n\u53e6\u5916\u5982\u679c\u771f\u7684\u8003\u8bd5\u65f6\uff0c\u5de8\u578b\u6a21\u62df\u9898\u505a\u8d77\u6765\u6bd4\u8f83\u7d2f\u7684\u8bdd\uff08\u660e\u660e\u662f\u6c34\u5e73\u4e0d\u591f\uff09\uff0c\u63a8\u8350\u679c\u65ad70\u5206\u7b97\u6cd5\uff0c70\u5206\u7b97\u6cd5\u534a\u4e2a\u5c0f\u65f6\u80af\u5b9a\u80fd\u641e\u5b9a\u3002\n\n\n\n    \n    \n    \n    \n    \n```cpp\n    #include<iostream>\n    #include<cstdio>\n    #include<vector>\n    #include<algorithm>\n    #include<string>\n    #include<cstring>\n    #include<sstream>\n    #include<set>\n    #define open(s) freopen(s\".in\",\"r\",stdin); freopen(s\".out\",\"w\",stdout);\n    #define close fclose(stdin); fclose(stdout);\n    using namespace std;\n    int t;\n    set<string> rec;//\u4f7f\u7528\u96c6\u5408\u7c7b\u578b\u6ce8\u518c\u53d8\u91cf\n    int StringtoInt(string s) {//\u5176\u5b9e\u53ef\u4ee5\u50cf\u5feb\u8bfb\u90a3\u6837\u5199\uff0c\u800c\u4e14\u4f1a\u5feb\u5f88\u591a\uff0c\u4f46\u662f\u6211\u61d2\n        stringstream ss(s);\n        int x;\n        ss >> x;\n        return x;\n    }\n    int check(int &line, int n,string prevname) {//\u4e3b\u8981\u9012\u5f52\u5904\u7406\u51fd\u6570 line\u8868\u793a\u8bfb\u5230\u672c\u7a0b\u5e8f\u884c\u53f7 n\u8868\u793a\u603b\u884c\u6570 prevname\u8868\u793a\u5f53\u524d\u5c42\u5faa\u73af\u53d8\u91cf\n        if (line > n) return -1000;    //\u663e\u7136E\u5c11\u4e86\uff0c\u8fd4\u56de\u4e00\u4e2a\u7206\u70b8\u503c\n        int f = 1, o = 0;//f\u8bb0\u5f55\u7206\u70b8\u5426 o\u8868\u793a\u672c\u5c42\u5faa\u73af\u6700\u5927\u590d\u6742\u5ea6\n        while (f && line <= n) {\n            string s, ch, name, sfrom, sto;\n            int from = 100000, to = 100000, onow = 0;//nowo\u8868\u793a\u5f53\u524d\u5faa\u73af\u8bed\u53e5\u590d\u6742\u5ea6\n            getline(cin, s);\n            stringstream ss(s);//\u6309\u884c\u8bfb\u53d6\uff0cstringstream\u7528\u8d77\u6765\u723d\n            ss >> ch;\n            line++;\n            if (ch == \"F\") {\n                ss >> name >> sfrom >> sto;\n                if (rec.count(name)) return -1000;\n                rec.insert(name);\n                if (sfrom != \"n\") from = StringtoInt(sfrom);\n                if (sto != \"n\") to = StringtoInt(sto);//\u8bfb\u53d6\u5faa\u73af\u53d8\u91cf\u521d\u59cb\u503cfrom\u548c\u7ed3\u675f\u503cto\uff0c\u5982\u679c\u662fn\u5c31\u8bbe\u5b83\u4e3a100000\n                if (from > to) {//from>to\u6b64\u65f6\u5185\u5c42\u4e0d\u505a\u5faa\u73af \u4f46\u9700\u5224\u5b9a\u662f\u5426\u7206\u70b8\n                    int tmp = check(line, n, name);\n                    if (tmp < 0) onow = -1000;//\u5224\u5b9a\u662f\u5426\u7206\u70b8\n                }\n                else if ((from < 110 && to < 110) || (from == 100000 && to == 100000)) onow = check(line, n, name);//n->n\u548c\u5e38\u6570->\u5e38\u6570\u7684\u60c5\u51b5\u672c\u5c42\u5faa\u73af\u590d\u6742\u5ea6\u4e0d\u589e\u52a0\uff0c\u9012\u5f52\u8ba1\u7b97\u4e0b\u4e00\u5c42\n                else onow = 1 + check(line, n, name);//\u5e38\u6570->n\u672c\u5c42\u590d\u6742\u5ea6\u4e3an^1,\u9012\u5f52\u8ba1\u7b97\u4e0b\u5c42\n                if (onow < 0) f = 0;//f\u6807\u8bb0\u7206\u70b8\n                o = max(o, onow);//\u66f4\u65b0\u6700\u5927\u590d\u6742\u5ea6\n            }\n            else {//\u51fa\u6808\u64cd\u4f5c\n                if (!rec.empty()) {\n                    rec.erase(prevname);\n                    return o;\n                }\n                return -1000;//\u7a7a\u6808\u65f6\u51fa\u6808\u8bf4\u660e\u7f16\u8bd1\u7206\u70b8\n            }\n        }\n        if (!f) return -1000;\n        return o;\n    }\n    void n_o(int& n, int& on, string s) {//\u4e00\u4e2a\u5f88\u8822\u7684\u8bfb\u53d6\u201cN O(n^k)\u201d\u4e2dN\u548ck\u7684\u51fd\u6570\n        int x = 0, k = 0;\n        while (s[k] <= '9'&&s[k] >= '0') x = (x << 3) + (x << 1) + (s[k] ^ 48), k++;\n        n = x;\n        if (s[k + 3] == n) on = 0;\n        else {\n            k += 5;\n            x = 0;\n            while (s[k] <= '9'&&s[k] >= '0') x = (x << 3) + (x << 1) + (s[k] ^ 48), k++;\n            on = x;\n        }\n    }\n    void program() {//\u6bcf\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\n        rec.clear();\n        string inf;\n        int n, o, realo, line = 1;\n        getline(cin, inf);\n        n_o(n, o, inf);\n        rec.insert(\"main\");//\u6700\u5916\u5c42\u5faa\u73af\u4e3amain()\uff0c\u5e26\u6709\u4e00\u5b9a\u5a31\u4e50\u6027\u8d28233\n        realo = check(line, n, \"main\");\n        if (realo < 0 || rec.size()!=1) {//\u5982\u679c\u7206\u70b8\u6216\u662f\u5269\u4f59\u5faa\u73af\u4e0d\u4e3amain\uff0c\u5219ERR\n            cout <<\"ERR\"<< endl;\n            while (line <= n) line++,getline(cin, inf);\n        }\n        else if (realo == o) cout << \"Yes\" << endl;\n        else cout << \"No\" << endl;\n    }\n    int main() {\n        ios::sync_with_stdio(false);//\u52a0\u901f\u9ed1\u79d1\u6280\n        //open(\"complexity\");\n        string st;\n        getline(cin, st);\n        stringstream ss(st);\n        ss >> t;\n        while (t--) {\n            program();\n        }\n        //close;\n        return 0;\n}\n```",
        "postTime": 1512881881,
        "uid": 28642,
        "name": "C2H6O",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6\u3011NOIP2017 D1T2"
    },
    {
        "content": "\u8fc7\u6765\u6c34\u4e00\u53d1\u9898\u89e3\u3002\n\n\u8fd9\u9898\u662f\u4e00\u4e2a\u714e\u86cb\u7684\u6a21\u62df\u9898~~\u7136\u800c\u6211\u8fd8\u662f\u70b8\u4e86~~\n\n\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u8981\u6ce8\u610f\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1.\u6709\u7684\u5faa\u73af\u8fdb\u4e0d\u53bb\uff0c\u6b64\u65f6\u540e\u9762\u7684\u5faa\u73af\u65e0\u6cd5\u66f4\u65b0\u7b54\u6848\uff08\u4f46\u662f\u4ecd\u7136\u8981\u5904\u7406CE\u7684\u60c5\u51b5\uff09\u3002\n\n2.\u4eceN\u5230N\u7684\u5faa\u73af\u662fO\uff081\uff09\u7684\u7b54\u6848\u8d21\u732e\uff0c\u5e76\u4e0d\u662f1\u7684\u60c5\u51b5\u3002\n\n3.\u627e\u5c0f\u660e\u6240\u8bf4\u7684\u590d\u6742\u5ea6\u65f6\u5f97\u7279\u5224O\uff081\uff09\u7684\u60c5\u51b5\u3002\n\n4.\u5982\u679c\u5728\u5904\u74061\u7684\u60c5\u51b5\u65f6\u628a\u6808\u9876\u5143\u7d20\u9000\u6808\uff0c\u8981\u770b\u4e00\u4e0b\u540e\u9762\u7684F\u8bed\u53e5\u80fd\u4e0d\u80fd\u91cd\u65b0\u66f4\u65b0\u7b54\u6848\u3002\n\n5.\u7b54\u6848\u662f\u5168\u7a0b\u7b54\u6848\u8d21\u732e\u91cf\u7684**\u6700\u5927\u503c**\u800c\u975e**\u603b\u548c**\u3002\u56e0\u4e3aF\u53ef\u80fd\u88abE\u9000\u6808\u3002\n\n6.\u5982\u679c\u8fb9\u8bfb\u8fb9\u5904\u7406\uff0c\u53d1\u73b0ERR\u7684\u60c5\u51b5\u540e\u8981\u628a\u8fd9\u4e00\u7ec4\u6570\u636e\u8bfb\u5b8c\u3002\u6211\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u5751\u4e86\u2026\u2026\n\n\u6ce8\u610f\u4e0b\u8fd9\u51e0\u79cd\u60c5\u51b5\uff0c\u7528\u4e00\u4e2a\u6808\u6a21\u62df\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define KILL {printf(\"ERR\\n\");return;}\nusing namespace std;\nstruct command{\n    char oper,var;\n    int ll,rr,gong;\n    bool l,r;\n}com[101];\nbool used[256];\nint L,T,sta[101],top,ans,res,Oone;\nvoid read(int now){\n    cin>>com[now].oper;\n    if(com[now].oper=='F'){\n        cin>>com[now].var;\n        getchar();\n        char ch='\\0';\n        while(ch!=' '){\n            ch=getchar();\n            if('0'<=ch && '9'>=ch)com[now].ll=com[now].ll*10+ch-'0';\n        }\n        if(!com[now].ll)com[now].l=true;\n        else com[now].l=false;\n        ch='\\0';\n        while(ch!='\\n'){\n            ch=getchar();\n            if('0'<=ch && '9'>=ch)com[now].rr=com[now].rr*10+ch-'0';\n        }\n        if(!com[now].rr)com[now].r=true;\n        else com[now].r=false;\n        if(!com[now].l && com[now].r)com[now].gong=1;\n        else com[now].gong=0;\n    }\n    //printf(\"%c %c %d %d %d %d %d\\n\",com[now].oper,com[now].var,com[now].ll,com[now].rr,com[now].gong,com[now].l,com[now].r);\n}\nint found(char msg[]){\n    int ans=0;\n    for(int i=0;msg[i]!=')';i++){\n        if('0'<=msg[i] && '9'>=msg[i])ans=ans*10+msg[i]-'0';\n    }\n    return ans;\n}\nvoid solve(){\n    scanf(\"%d\",&L);top=ans=res=Oone=0;memset(used,0,sizeof(used));\n    memset(com,0,sizeof(com));memset(sta,0,sizeof(sta));\n    char msg[233];cin>>msg;\n    int q=found(msg);\n    if(msg[4]=='\\0')q=!q;\n    for(int i=1;i<=L;i++){\n        read(i);\n        if(com[i].oper=='E'){\n            if(!top)KILL\n            if((com[sta[top]].l && !com[sta[top]].r) || (!com[sta[top]].l && !com[sta[top]].r && com[sta[top]].ll>com[sta[top]].rr))--Oone;\n            if(!Oone)ans-=com[sta[top]].gong;\n            used[com[sta[top--]].var]=false;\n        }\n        else{\n            if(used[com[i].var])KILL\n            used[com[i].var]=true;\n            sta[++top]=i;\n            if((com[sta[top]].l && !com[sta[top]].r) || (!com[sta[top]].l && !com[sta[top]].r && com[sta[top]].ll>com[sta[top]].rr))++Oone;\n            if(!Oone)ans+=com[i].gong;\n            res=max(ans,res);\n        }\n    }\n    if(top)KILL\n    if(res==q)printf(\"Yes\\n\");\n    else printf(\"No\\n\");\n}\nint main()\n{\n    //freopen(\"complexity.in\",\"r\",stdin);\n    //freopen(\"complexity.ans\",\"w\",stdout);\n    scanf(\"%d\",&T);\n    while(T--)solve();\n    return 0;\n}\n```",
        "postTime": 1511581280,
        "uid": 30261,
        "name": "Mr_QwQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3952 \u3010\u65f6\u95f4\u590d\u6742\u5ea6 \u3011"
    }
]