[
    {
        "content": "\u5173\u4e8eKDT\u6700\u8fd1\u90bb\u67e5\u8be2\u65b9\u9762\uff0c\u524d\u51e0\u4e2a\u661f\u671f\u88ab@[Tweetuski](https://www.luogu.com.cn/user/48843)\u548c@[142857cs](https://www.luogu.com.cn/user/35760)\u4e24\u4f4d\u5de8\u4f6c\u7ed9D\u5f97\u4f53\u65e0\u5b8c\u80a4\uff08~~\u5bfc\u81f4\u73b0\u5728\u6211\u770b\u5230\u6700\u8fd1\u90bb\u5c31\u5934\u75bc~~\uff09\n\n\u5177\u4f53\u53ef\u89c1\n\n[https://www.luogu.com.cn/discuss/show/214220](https://www.luogu.com.cn/discuss/show/214220) \n\n[https://www.luogu.com.cn/discuss/show/214426](https://www.luogu.com.cn/discuss/show/214426)\n\n\u57fa\u4e8e\u5bf9\u6700\u8fd1\u90bb\u67e5\u8be2\u6df1\u6df1\u7684\u6050\u60e7\u611f\uff0c\u8fd9\u9898\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u7528\u6700\u8fd1\u90bb\n\n\u9996\u5148\u6709\n\n$$\\max_i\\{|x_i-x|+|y_i-y|\\}$$\n$$=\\max_i\\{\\max(x_i-x,x-x_i),\\max(y_i-y,y-y_i)\\}$$\n$$=\\max_i\\{x_i-x+y_i-y,x_i-x+y-y_i,x-x_i+y_i-y,x-x_i+y-y_i\\}$$\n\n\u90a3\u7ef4\u62a4$\\max\\{x_i+y_i\\},\\max\\{x_i-y_i\\},\\max\\{-x_i+y_i\\},\\max\\{-x_i-y_i\\},$\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\n\n$$\\min_i\\{|x_i-x|+|y_i-y|\\}$$\n\n\u8fd9\u628a$x$\u4e0e$x_i$\uff0c$y$\u4e0e$y_i$\u7684\u5927\u5c0f\u5173\u7cfb\u52064\u90e8\u5206\u5206\u522b\u67e5\u8be2\u5373\u53ef\n\n\u5728\u7c7b\u4f3c\u66ff\u7f6a\u7f8a\u6811\u7684\u91cd\u6784\u65b9\u9762\uff0c\u6211\u4e5f\u88ab@[142857cs](https://www.luogu.com.cn/user/35760)\u7ed9D\u4e86\uff0c\u6240\u4ee5\u6211\u9884\u5148\u628a\u6240\u6709\u70b9\u90fd\u8bb0\u4e0b\u6765\uff0c\u63d0\u524d\u5efa\u597d\u6811\u5f62\uff0c\u907f\u514d\u4e86\u91cd\u6784\u7684\u64cd\u4f5c\n\n\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u6ca1\u7528\u6700\u8fd1\u90bb\u67e5\u8be2\uff0c\u590d\u6742\u5ea6\u662f\u6807\u51c6\u7684$O(n\\sqrt{n})$\uff0c\u5e26$4$\u500d\u5e38\u6570\uff08~~\u4f46\u662f\u51fa\u9898\u4eba\u5f88\u5584\u826f\u7684\u628a\u6839\u53f7\u5361\u6389\u4e86~~\uff09\n\n\u8fd9\u662f\u6839\u53f7\u7684\u4ee3\u7801\uff0c\u4e5f\u8bb8\u6709\u5927\u4f6c\u53ef\u4ee5\u5e2e\u6211\u5361\u5361\uff1f\n\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> Pair;\nconst int N=4e5+5;\nconst Pair Em=make_pair(-1e9,-1e9);\n#define F first\n#define S second\nint L[N],R[N],U[N],D[N],ls[N],rs[N],loc[N],fa[N];\nint n,q,treesize,rt,cnt,maxx,maxy,Dir,l,r,d,u,k;\nPair poi[N];\nbool exi[N];\nstruct Point{ int x,y,loc; bool E; } p[N];\nstruct Ques{ int op,x,y,loc; } que[N];\nstruct Data{ int a[4]; } Da,dat[N];\nData operator + (const Data& a, const Data& b){\n\tData c;\n\tc.a[0]=min(a.a[0],b.a[0]); c.a[1]=min(a.a[1],b.a[1]);\n\tc.a[2]=min(a.a[2],b.a[2]); c.a[3]=min(a.a[3],b.a[3]);\n\treturn c;\n}\nbool operator < (const Point& a, const Point& b){ return Dir?a.y<b.y:a.x<b.x; }\ninline void Mix(Data& D, Pair P){\n\tif (P.F==Em.F && P.S==Em.S) D.a[0]=D.a[1]=D.a[2]=D.a[3]=2e9;\n\telse {\n\t\tint x=P.F,y=P.S;\n\t\tD.a[0]=-x-y; D.a[1]=-x+y;\n\t\tD.a[2]= x-y; D.a[3]= x+y;\n\t}\n}\ninline void Newnode(int now){\n\tif (!exi[now]) L[now]=U[now]=1e9,R[now]=D[now]=0,Mix(dat[now],Em); else\n\tL[now]=R[now]=poi[now].F,U[now]=D[now]=poi[now].S,Mix(dat[now],poi[now]);\n}\ninline void pushup(int now){\n\tNewnode(now);\n\tL[now]=min(L[now],min(L[ls[now]],L[rs[now]]));\n\tU[now]=min(U[now],min(U[ls[now]],U[rs[now]]));\n\tR[now]=max(R[now],max(R[ls[now]],R[rs[now]]));\n\tD[now]=max(D[now],max(D[ls[now]],D[rs[now]]));\n\tdat[now]=dat[now]+dat[ls[now]]+dat[rs[now]];\n}\nvoid build(int& now, int l, int r, int tag){\n\tif (l>r) return;\n\tint mid=(l+r)>>1; now=++treesize; Dir=tag;\n\tnth_element(p+l,p+mid,p+r+1);\n\tpoi[now]=make_pair(p[mid].x,p[mid].y); exi[now]=p[mid].E;\n\tNewnode(now);\n\tif (p[mid].loc) loc[p[mid].loc]=now;\n\tbuild(ls[now],l,mid-1,tag^1); build(rs[now],mid+1,r,tag^1);\n\tif (ls[now]) fa[ls[now]]=now;\n\tif (rs[now]) fa[rs[now]]=now;\n\tpushup(now);\n}\nint query(int now){\n\tif (!now) return 2e9;\n\tif (l<=L[now] && R[now]<=r && u<=U[now] && D[now]<=d) return dat[now].a[k];\n\tif (l>R[now] || r<L[now] || u>D[now] || d<U[now]) return 2e9;\n\tint x=poi[now].F,y=poi[now].S,c=2e9;\n\tif (l<=x && x<=r && u<=y && y<=d && exi[now]){\n\t\tif (k==0) c=-x-y;\n\t\telse if (k==1) c=-x+y;\n\t\telse if (k==2) c= x-y;\n\t\telse c=x+y;\n\t}\n\treturn min(c,min(query(ls[now]),query(rs[now])));\n}\ninline int read(){\n\tint num=0,fu=1; char ch=getchar();\n\twhile (ch<'0' || ch>'9') fu&=(ch!='-'),ch=getchar();\n\twhile (ch>='0' && ch<='9') num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n\treturn fu?num:-num;\n}\nint main(){\n\tn=read(); Newnode(0); Da.a[0]=Da.a[1]=Da.a[2]=Da.a[3]=-2e9;\n\tfor (int i=1; i<=n; i++){\n\t\tp[i].x=read(),p[i].y=read(),p[i].E=1;\n\t\tDa.a[0]=max(Da.a[0],-p[i].x-p[i].y); Da.a[1]=max(Da.a[1],-p[i].x+p[i].y);\n\t\tDa.a[2]=max(Da.a[2], p[i].x-p[i].y); Da.a[3]=max(Da.a[3], p[i].x+p[i].y);\n\t\tmaxx=max(maxx,p[i].x); maxy=max(maxy,p[i].y);\n\t}\n\tq=read(); cnt=n;\n\tfor (int i=1; i<=q; i++){\n\t\tque[i].op=read(); que[i].x=read(); que[i].y=read();\n\t\tif (!que[i].op){\n\t\t\tcnt++,p[cnt].x=que[i].x,p[cnt].y=que[i].y,p[cnt].loc=que[i].loc=cnt;\n\t\t\tmaxx=max(maxx,p[cnt].x); maxy=max(maxy,p[cnt].y);\n\t\t}\n\t}\n\tbuild(rt,1,cnt,0);\n\tfor (int i=1; i<=q; i++){\n\t\tint x=que[i].x,y=que[i].y;\n\t\tif (que[i].op==0){\n\t\t\tint u=loc[que[i].loc]; exi[u]=1; Newnode(u);\n\t\t\tDa.a[0]=max(Da.a[0],-x-y); Da.a[1]=max(Da.a[1],-x+y);\n\t\t\tDa.a[2]=max(Da.a[2], x-y); Da.a[3]=max(Da.a[3], x+y);\n\t\t\tfor (; u; u=fa[u]) pushup(u);\n\t\t} else\n\t\tif (que[i].op==1){\n\t\t\tint ans=2e9,r1,r2,r3,r4;\n\t\t\tl=0,r=x,u=0,d=y,k=0; r1=query(rt);\n\t\t\tl=0,r=x,u=y,d=maxy,k=1; r2=query(rt);\n\t\t\tl=x,r=maxx,u=0,d=y,k=2; r3=query(rt);\n\t\t\tl=x,r=maxx,u=y,d=maxy,k=3; r4=query(rt);\n\t\t\tif (r1!=2e9) ans=min(ans,r1+x+y);\n\t\t\tif (r2!=2e9) ans=min(ans,r2+x-y);\n\t\t\tif (r3!=2e9) ans=min(ans,r3-x+y);\n\t\t\tif (r4!=2e9) ans=min(ans,r4-x-y);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t} else printf(\"%d\\n\",max(max(x+y+Da.a[0],x-y+Da.a[1]),max(-x+y+Da.a[2],-x-y+Da.a[3])));\n\t}\n\treturn 0;\n}\n```\n\n\u65e0\u5948\uff0c\u4e0a\u9762\u8fd9\u4efd\u4ee3\u7801\u5361\u4e0d\u8fc7\u53bb\uff0c\u6240\u4ee5\u6211\u53c8\u5199\u4e86\u4e00\u4efd\u6700\u8fd1\u90bb\u67e5\u8be2\u7684\u7248\u672c\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e5+5;\n#define F first\n#define S second\nint L[N],R[N],U[N],D[N],ls[N],rs[N],loc[N],fa[N],Px[N],Py[N];\nint n,q,treesize,rt,cnt,maxx,maxy,Dir,l,r,d,u,k,x,y,ans;\nbool exi[N];\nstruct Point{ int x,y,loc; bool E; } p[N];\nstruct Ques{ int op,x,y,loc; } que[N];\nstruct Data{ int a[4]; } Da;\nbool operator < (const Point& a, const Point& b){ return Dir?a.y<b.y:a.x<b.x; }\ninline void Newnode(int now){\n\tif (!exi[now]) L[now]=U[now]=1e9,R[now]=D[now]=0; else\n\tL[now]=R[now]=Px[now],U[now]=D[now]=Py[now];\n}\ninline void pushup(int now){\n\tNewnode(now);\n\tL[now]=min(L[now],min(L[ls[now]],L[rs[now]]));\n\tU[now]=min(U[now],min(U[ls[now]],U[rs[now]]));\n\tR[now]=max(R[now],max(R[ls[now]],R[rs[now]]));\n\tD[now]=max(D[now],max(D[ls[now]],D[rs[now]]));\n}\nvoid build(int& now, int l, int r, int tag){\n\tif (l>r) return;\n\tint mid=(l+r)>>1; now=++treesize; Dir=tag;\n\tnth_element(p+l,p+mid,p+r+1);\n\tPx[now]=p[mid].x; Py[now]=p[mid].y; exi[now]=p[mid].E;\n\tNewnode(now);\n\tif (p[mid].loc) loc[p[mid].loc]=now;\n\tbuild(ls[now],l,mid-1,tag^1); build(rs[now],mid+1,r,tag^1);\n\tif (ls[now]) fa[ls[now]]=now;\n\tif (rs[now]) fa[rs[now]]=now;\n\tpushup(now);\n}\ninline int read(){\n\tint num=0,fu=1; char ch=getchar();\n\twhile (ch<'0' || ch>'9') fu&=(ch!='-'),ch=getchar();\n\twhile (ch>='0' && ch<='9') num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n\treturn fu?num:-num;\n}\ninline int Get_dis(int now){\n\tif (!now) return 2e9;\n\tint ans=0;\n\tif (x<L[now]) ans+=L[now]-x;\n\tif (y<U[now]) ans+=U[now]-y;\n\tif (x>R[now]) ans+=x-R[now];\n\tif (y>D[now]) ans+=y-D[now];\n\treturn ans;\n}\nvoid query(int now){\n\tif (!now) return;\n\tif (exi[now]) ans=min(ans,abs(Px[now]-x)+abs(Py[now]-y));\n\tint dl=Get_dis(ls[now]),dr=Get_dis(rs[now]);\n\tif (dl<dr){\n\t\tif (dl<ans) query(ls[now]);\n\t\tif (dr<ans) query(rs[now]);\n\t} else {\n\t\tif (dr<ans) query(rs[now]);\n\t\tif (dl<ans) query(ls[now]);\n\t}\n}\nint main(){\n\tn=read(); Newnode(0); Da.a[0]=Da.a[1]=Da.a[2]=Da.a[3]=-2e9;\n\tfor (int i=1; i<=n; i++){\n\t\tp[i].x=read(),p[i].y=read(),p[i].E=1;\n\t\tDa.a[0]=max(Da.a[0],-p[i].x-p[i].y); Da.a[1]=max(Da.a[1],-p[i].x+p[i].y);\n\t\tDa.a[2]=max(Da.a[2], p[i].x-p[i].y); Da.a[3]=max(Da.a[3], p[i].x+p[i].y);\n\t\tmaxx=max(maxx,p[i].x); maxy=max(maxy,p[i].y);\n\t}\n\tq=read(); cnt=n;\n\tfor (int i=1; i<=q; i++){\n\t\tque[i].op=read(); que[i].x=read(); que[i].y=read();\n\t\tif (!que[i].op){\n\t\t\tcnt++,p[cnt].x=que[i].x,p[cnt].y=que[i].y,p[cnt].loc=que[i].loc=cnt;\n\t\t\tmaxx=max(maxx,p[cnt].x); maxy=max(maxy,p[cnt].y);\n\t\t}\n\t}\n\tbuild(rt,1,cnt,0);\n\tfor (int i=1; i<=q; i++){\n\t\tx=que[i].x,y=que[i].y;\n\t\tif (que[i].op==0){\n\t\t\tint u=loc[que[i].loc]; exi[u]=1; Newnode(u);\n\t\t\tDa.a[0]=max(Da.a[0],-x-y); Da.a[1]=max(Da.a[1],-x+y);\n\t\t\tDa.a[2]=max(Da.a[2], x-y); Da.a[3]=max(Da.a[3], x+y);\n\t\t\tfor (; u; u=fa[u]) pushup(u);\n\t\t} else\n\t\tif (que[i].op==1){\n\t\t\tans=2e9; query(rt);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t} else printf(\"%d\\n\",max(max(x+y+Da.a[0],x-y+Da.a[1]),max(-x+y+Da.a[2],-x-y+Da.a[3])));\n\t}\n\treturn 0;\n}\n```\n\n\u6700\u540e\uff0c\u6211\u8fd8\u662f\u8981\u95ee\uff1aKDT\u6700\u8fd1\u90bb\u67e5\u8be2\u6700\u574f\u5230\u5e95\u662f\u591a\u5c11\u7684\uff1f\u6709\u6ca1\u6709\u5361\u5230\u6781\u9650\u7684\u65b9\u6cd5\uff1f\u5404\u4f4d\u5de8\u4f6c\u53ef\u4ee5\u79c1\u4fe1\u6211\uff08\u6211\u5230\u73b0\u5728\u90fd\u6ca1\u5f04\u660e\u767d\uff09",
        "postTime": 1588573375,
        "uid": 44599,
        "name": "wishapig",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6224 \u3010[BJWC2014]\u6570\u636e\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9898\u662f\u53ef\u4ee5\u4f7f\u7528cdq\u5206\u6cbb\u89e3\u51b3\uff0c\u7c7b\u4f3c\u5929\u4f7f\u73a9\u5076\u90a3\u9053\u9898\uff0c\u4e0d\u8fc7\u7ffb\u8f6c\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86KD-Tree\n\n\u4e2a\u4eba\u8ba4\u4e3aKD-Tree\u7684\u6838\u5fc3\u5728\u4e8e\u4f30\u4ef7\u51fd\u6570\u548c\u91cd\u6784\uff0c\u4e0d\u7136\u5c31\u548c\u66b4\u529b\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u4e86\u3002\n\n\u5bf9\u4e8e\u91cd\u6784\uff0c\u5176\u5b9e\u548c\u66ff\u7f6a\u7f8a\u7684\u91cd\u6784\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\u5bf9\u4e8e\u4f30\u4ef7\u51fd\u6570\uff0c\u8981\u77e5\u9053\u5f97\u5230\u7684\u4f30\u4ef7\u5e76\u4e0d\u662f\u5b9e\u9645\u8ddd\u79bb\u7684\u6700\u5927\u503c/\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u4e24\u68f5\u5b50\u6811\u90fd\u8981\u8bd5\u7740\u53bb\u641c\u4e00\u4e0b\uff0c\u4e0d\u8fc7\u9700\u8981\u5148\u641c\u7d22\u66f4\u5bb9\u6613\u66f4\u65b0\u7b54\u6848\u7684\u90a3\u4e2a\u3002\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e6+10;\nint typ,rt;\nstruct Node{\n\tint x[2];\n\tbool operator < (const Node &A)const{\n\t\treturn x[typ]<A.x[typ];\n\t}\n}a[N];\nstruct Tree{\n\tint ls,rs,siz,Mx[2],Mi[2],x[2];\n}T[N];\n#define ls T[rt].ls\n#define rs T[rt].rs\nint stk[N],tp,cnt;\nint New(){\n\tif(tp)return stk[tp--];\n\treturn ++cnt;\n}\nvoid up(int rt){\n\tT[rt].siz=T[ls].siz+T[rs].siz+1;\n\tfor(int i=0;i<2;i++){\n\t\tT[rt].Mx[i]=T[rt].Mi[i]=T[rt].x[i];\n\t\tif(ls){\n\t\t\tT[rt].Mx[i]=max(T[rt].Mx[i],T[ls].Mx[i]);\n\t\t\tT[rt].Mi[i]=min(T[rt].Mi[i],T[ls].Mi[i]);\n\t\t}\n\t\tif(rs){\n\t\t\tT[rt].Mx[i]=max(T[rt].Mx[i],T[rs].Mx[i]);\n\t\t\tT[rt].Mi[i]=min(T[rt].Mi[i],T[rs].Mi[i]);\n\t\t}\n\t}\n}\nvoid Build(int &rt,int l,int r,int d){\n\trt=0;\n\tif(l>r)return;\n\trt=New();\n\tint mid=l+r>>1;\n\ttyp=d;\n\tnth_element(a+l,a+mid,a+r+1);\n\tT[rt].x[0]=a[mid].x[0];T[rt].x[1]=a[mid].x[1];\n\tBuild(ls,l,mid-1,d^1);\n\tBuild(rs,mid+1,r,d^1);\n\tup(rt);\n}\nint tt;\nvoid get(int rt){\n\ta[++tt].x[0]=T[rt].x[0];\n\ta[tt].x[1]=T[rt].x[1];\n\tstk[++tp]=rt;\n\tif(ls)get(ls);\n\tif(rs)get(rs);\n}\nvoid ck(int &rt,int d){\n\tint Max=max(T[ls].siz,T[rs].siz);\n\tif(Max>T[rt].siz*0.75)tt=0,get(rt),Build(rt,1,tt,d);\n}\nvoid insert(int &rt,int x[2],int d){\n\tif(!rt){\n\t\trt=New();\n\t\tls=rs=0;\n\t\tT[rt].x[0]=x[0];T[rt].x[1]=x[1];\n\t\tup(rt);\n\t\treturn;\n\t}\n\tif(x[d]<=T[rt].x[d])insert(ls,x,d^1);\n\telse insert(rs,x,d^1);\n\tup(rt);ck(rt,d);\n}\nint ans;\nint getmi(int rt,int x[]){\n\tint res=0;\n\tfor(int i=0;i<2;i++)\n\t\tres+=max(x[i]-T[rt].Mx[i],0)+max(T[rt].Mi[i]-x[i],0);\n\treturn res;\n}\nint getmx(int rt,int x[]){\n\tint res=0;\n\tfor(int i=0;i<2;i++)\n\t\tres+=max(T[rt].Mx[i]-x[i],0)+max(x[i]-T[rt].Mi[i],0);\n\treturn res;\n}\n#define dis(x,y,xx,yy) (abs(x-xx)+abs(y-yy))\nconst int INF=0x7fffffff;\nvoid qmx(int rt,int x[2]){\n\tans=max(ans,dis(T[rt].x[0],T[rt].x[1],x[0],x[1]));\t\n\tint l=-INF,r=-INF;\n\tif(ls)l=getmx(ls,x);\n\tif(rs)r=getmx(rs,x);\n\tif(l<r){\n\t\tif(r>ans)qmx(rs,x);\n\t\tif(l>ans)qmx(ls,x);\n\t}else{\n\t\tif(l>ans)qmx(ls,x);\n\t\tif(r>ans)qmx(rs,x);\n\t}\n}\nvoid qmi(int rt,int x[2]){\n\tans=min(ans,dis(T[rt].x[0],T[rt].x[1],x[0],x[1]));\t\n\tint l=INF,r=INF;\n\tif(ls)l=getmi(ls,x);\n\tif(rs)r=getmi(rs,x);\n\tif(l<r){\n\t\tif(l<ans)qmi(ls,x);\n\t\tif(r<ans)qmi(rs,x);\n\t}else{\n\t\tif(r<ans)qmi(rs,x);\n\t\tif(l<ans)qmi(ls,x);\n\t}\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<2;j++)\n\t\t\tscanf(\"%d\",&a[i].x[j]);\n\t}\n\tBuild(rt,1,n,0);\n\tint q;\n\tscanf(\"%d\",&q);\n\twhile(q--){\n\t\tint op,x[2];\n\t\tscanf(\"%d%d%d\",&op,&x[0],&x[1]);\n\t\tif(op==0)insert(rt,x,0);\n\t\telse if(op==1)ans=INF,qmi(rt,x),printf(\"%d\\n\",ans);\n\t\telse ans=-INF,qmx(rt,x),printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1605705502,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6224 \u3010[BJWC2014]\u6570\u636e\u3011"
    },
    {
        "content": "K-D Tree\u677f\u5b50\u9898 \u5b66\u4e60\u89c1[\u6211\u7684kd\u6811\u6559\u7a0b](https://www.luogu.com.cn/blog/van/qian-tan-pian-xu-wen-ti-yu-k-d-tree)\n\n\u8bbe\u7f6e\u4f30\u4ef7\u51fd\u6570\uff0c\u7c7b\u4f3c\u6811\u4e0aA*\uff0c\u5224\u65ad\u7b54\u6848\u662f\u5426\u6709\u53ef\u80fd\u5728\u5b50\u6811\u4e2d\u8fbe\u5230\u526a\u679d\n\n\u8003\u8651\u5982\u4f55\u652f\u6301\u52a8\u6001\u63d2\u5165\n\nkdtree\u4e0d\u597d\u65cb\u8f6c\uff0c\u6bcf\u4e00\u5c42\u7684\u6392\u5e8f\u65b9\u5f0f\u4e0d\u592a\u4e00\u6837\n\n\u505a\u6cd5\u5c31\u662f\u5229\u7528\u66ff\u7f6a\u7f8a\u601d\u60f3 \u8bbe\u7f6e\u5e73\u8861\u56e0\u5b50$\\alpha$ \u5982\u679c\u5de6\u53f3\u5b50\u6811\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u5927\u5c0f>\u5b50\u6811\u5927\u5c0f*$alpha$\uff0c\u5c31\u5931\u8861\u4e86\uff0c\u62cd\u6241\u91cd\u5efa\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::nth_element;\nconst int k(2),N(2.5e5+5),inf(2e9+5);\ntemplate<class type>inline const type max(const type &a,const type &b){return a>b?a:b;}\ntemplate<class type>inline const type min(const type &a,const type &b){return a<b?a:b;}\ntemplate<class type>inline const type abs(const type &a){return a<0?-a:a;}\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch(getchar());\n\twhile (ch<48||ch>57)ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n}\nbool f,flag;\nstruct point\n{\n\tint d[k];\n\tinline point(){}\n\tinline point(const int &x,const int &y){d[0]=x;d[1]=y;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\tif (d[f]!=p.d[f])return d[f]<p.d[f];\n\t\tfor (int i(0);i<k;i++)if (d[i]!=p.d[i])return d[i]<p.d[i];\n\t\treturn 0;\n\t}\n\tinline const friend int distance(const point &x,const point &y) //\u66fc\u54c8\u987f\u8ddd\u79bb\n\t{\n\t\tint dis(0);\n\t\tfor (int i(0);i<k;i++)dis+=abs(x.d[i]-y.d[i]);\n\t\treturn dis;\n\t}\n\tinline const void readin()\n\t{\n\t\tfor (int i(0);i<k;i++)read(d[i]);\n\t}\n}a[N<<1]; //\u6ce8\u610f\u70b9\u6570O(n+m)\nint ans,cnt,n,m;\nconst double alpha(0.75);\nstruct tree\n{\n\tpoint range,mn,mx;\n\ttree *son[2];\n\tint size;\n\tstatic tree *null;\n\tvoid *operator new(size_t size);\n\tvoid operator delete(void *ptr);\n\tinline tree():size(0)\n\t{\n\t\tson[0]=son[1]=null;\n\t}\n\tinline tree(const point &p):range(p),mn(p),mx(p),size(1)\n\t{\n\t\tstatic bool init(0);\n\t\tif (!init)\n\t\t\tinit=1,\n\t\t\tnull=new tree,\n\t\t\tnull->son[0]=null->son[1]=null,\n\t\t\tnull->mn.d[0]=null->mn.d[1]=inf;\n\t\tson[0]=son[1]=null;\n\t}\n\tinline const bool unbalanced()\n\t{\n\t\treturn son[0]->size>size*alpha||son[1]->size>size*alpha;\n\t}\n\tinline const void pushup()\n\t{\n\t\tsize=son[0]->size+1+son[1]->size;\n\t\tfor (int i(0);i<k;i++)\n\t\t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i])),\n\t\t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i]));\n\t}\n\tinline const int evalue_min(const point &p)\n\t{\n\t\tif (this==null)return inf;\n\t\tint f(0);\n\t\tfor (int i(0);i<k;i++)f+=max(mn.d[i]-p.d[i],0)+max(p.d[i]-mx.d[i],0);\n\t\treturn f;\n\t}\n\tinline const int evalue_max(const point &p)\n\t{\n\t\tif (this==null)return 0;\n\t\tint f(0);\n\t\tfor (int i(0);i<k;i++)f+=max(abs(mn.d[i]-p.d[i]),abs(mx.d[i]-p.d[i]));\n\t\treturn f;\n\t}\n\tinline const void query_min(const point &p)\n\t{\n\t\tif (this==null)return;\n\t\tans=min(ans,distance(range,p));\n\t\tconst int f[k]={son[0]->evalue_min(p),son[1]->evalue_min(p)};\n\t\tconst bool t(f[0]>=f[1]);\n\t\tif (f[t]<ans)son[t]->query_min(p);\n\t\tif (f[!t]<ans)son[!t]->query_min(p);\n\t}\n\tinline const void query_max(const point &p)\n\t{\n\t\tif (this==null)return;\n\t\tans=max(ans,distance(range,p));\n\t\tconst int f[k]={son[0]->evalue_max(p),son[1]->evalue_max(p)};\n\t\tconst bool t(f[0]<=f[1]);\n\t\tif (f[t]>ans)son[t]->query_max(p);\n\t\tif (f[!t]>ans)son[!t]->query_max(p);\n\t}\n}*root,*tree::null;\n#define null tree::null\nchar memory_pool[N*sizeof(tree)],*tail(memory_pool+sizeof memory_pool);\nvoid *recycle[N],**top(recycle);\ninline void *tree::operator new(size_t size){return top!=recycle?*--top:tail-=size;}\ninline void tree::operator delete(void *ptr){*top++=ptr;}\ninline const void travel(tree *&p) //\u63d0\u53d6\u5b50\u6811\u5185\u6240\u6709\u7684\u70b9\n{\n\tif (p==null)return;\n\ttravel(p->son[0]);\n\ta[++cnt]=p->range;delete p;\n\ttravel(p->son[1]);\n}\ninline tree *build(const int &l,const int &r,const bool &d) //\u62cd\u6241\u91cd\u5efa\n{\n\tif (l>r)return null;\n\tconst int mid(l+r>>1);f=d;\n\tnth_element(a+l,a+mid,a+r+1);\n\ttree *p(new tree(a[mid]));\n\tif (l==r)return p;\n\tp->son[0]=build(l,mid-1,!d);\n\tp->son[1]=build(mid+1,r,!d);\n\tp->pushup();\n\treturn p;\n}\ninline const void rebuild(tree *&p,const bool &d)\n{\n\tcnt=0;\n\ttravel(p);\n\tp=build(1,cnt,d);\n}\ninline tree **insert(tree *&p,const point &x,const bool &d) //\u63d2\u5165\uff0c\u8fd4\u56de\u5931\u8861\u4f4d\u7f6e\n{\n\tif (p==null)return p=new tree(x),&null;\n\tf=d;tree **bad(insert(p->son[p->range<x],x,!d));\n\tp->pushup();\n\tif (p->unbalanced())bad=&p,flag=d;\n\treturn bad;\n}\ninline const void insert(const point &x)\n{\n\ttree **bad(insert(root,x,flag=0));\n\tif (*bad==null)return;\n\trebuild(*bad,flag);\n}\nint main()\n{\n\tread(n);\n\tfor (int i(1);i<=n;i++)a[i].readin();\n\troot=build(1,n,0);\n\tread(m);\n\tfor (int opt,x,y;m--;)\n\t\tswitch (read(opt),read(x),read(y),opt)\n\t\t{\n\t\t\tcase 0:insert(point(x,y));break;\n\t\t\tcase 1:ans=inf;root->query_min(point(x,y));printf(\"%d\\n\",ans);break;\n\t\t\tcase 2:ans=0;root->query_max(point(x,y));printf(\"%d\\n\",ans);break;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1585659056,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6224 \u3010[BJWC2014]\u6570\u636e\u3011"
    },
    {
        "content": "\u4e00\u4e2a CDQ \u505a\u6cd5\u3002\n\n\u8003\u8651\u9759\u6001\u95ee\u9898\u600e\u4e48\u505a\uff08\u7ed9\u5b9a $n$ \u4e2a\u70b9\uff0c\u540e $m$ \u6b21\u8be2\u95ee\uff09\u3002\u4e3a\u4e86\u53bb\u6389\u7edd\u5bf9\u503c\uff0c\u5206\u5173\u4e8e $x,y$ \u5927\u5c0f\u5206\u56db\u7c7b\u8ba8\u8bba\uff0c\u6700\u540e\u53d6 $\\min  \\max$\u3002\u8fd9\u91cc\u53ef\u4ee5\u6309 $x$ \u6392\u5e8f\uff0c\u7136\u540e\u901a\u8fc7\u7ef4\u62a4\u524d\u7f00 $\\min \\max$ \u7684\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u90a3\u4e48\u901a\u8fc7 CDQ \u8fd9\u4e2a\u52a8\u6001\u8f6c\u9759\u6001\u7684\u5de5\u5177\u5373\u53ef\u3002\n\n\u4e00\u4e9b\u6ce8\u610f\u70b9\uff1a\n\n* \u6309 $x,y,op$ \u7684\u987a\u5e8f\u6392\u5e8f\uff08CDQ \u57fa\u64cd\uff09\uff0c\u5426\u7ec4\u4f1a\u5bfc\u81f4\u67e5\u8be2\u6ca1\u6709\u88ab\u53ef\u4ee5\u6709\u8d21\u732e\u7684\u64cd\u4f5c\u8d21\u732e\u3002\n\n* \u79bb\u6563\u5316\uff0c\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u5c31\u662f\u5728\u6811\u72b6\u6570\u7ec4\u91cc\u641e\u7684\u65f6\u5019\u8981\u7528\u539f\u6570\u3002\n\n* \u6211\u5168\u90e8\u5f00\u4e86 `long long` \u624d\u8fc7\u3002\u3002$\\inf -\\inf$ \u4e5f\u53d6\u4e86 $10^{18} -10^{18}$ \u624d\u8fc7\uff08\u5e94\u8be5\u662f\u6211\u5199\u4e11\u4e86\uff09\u3002\n\n\u56e0\u4e3a\u6709\u4e9b\u96be\u5199\uff0c\u6240\u4ee5\u6211\u653e\u4e2a\u4ee3\u7801\u4ee5\u4f9b\u5404\u4f4d\u53c2\u8003\u5427\n\n```cpp\n#include<bits/stdc++.h>\n#define lowbit(x) (x&-x)\n#define int long long\nusing namespace std;\nint read()\n{\n\tint s=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s;\n}\nstruct node\n{\n\tint opt,x,y,w,y2;\n\tfriend bool operator<(const node &x,const node &y)\n\t{\n\t\tif(x.x==y.x) \n\t\t{\n\t\t\tif(x.y==y.y)\n\t\t\t\treturn x.opt<y.opt;\n\t\t\treturn x.y<y.y;\n\t\t}\n\t\treturn x.x<y.x;\n\t}\n}a[200005],q[200005];\nint h[200005];\nint all,cnt;\nint mx;\nint ans[100005];\nconst int mxv=200005;\nint t[200010],t2[200010];\nvoid add_bit(int x,int y)\n{\n\tfor(;x<=mxv;x+=lowbit(x))\n\t\tt[x]=min(t[x],y),t2[x]=max(t2[x],y);\n}\nvoid clear(int x)\n{\n\tfor(;x<=mxv;x+=lowbit(x))\n\t\tt[x]=1e18,t2[x]=-1e18;\n}\nint ask_min(int x)\n{\n\tint s=1e18;\n\tfor(;x;x-=lowbit(x))\n\t\ts=min(s,t[x]);\n\treturn s;\n}\nint ask_max(int x)\n{\n\tint s=-1e18;\n\tfor(;x;x-=lowbit(x))\n\t\ts=max(s,t2[x]);\n\treturn s;\n}\nvoid solve(int cnt)\n{\n\tint i,j;\n\tbool fl;\n\tsort(q,q+cnt);\n\tfor(i=0;i<cnt;i++)\n\t{\n\t\tif(q[i].opt==1)\n\t\t\tadd_bit(q[i].y2,-q[i].x-q[i].y);\n\t\tif(q[i].opt==2)\t\n\t\t\tans[q[i].w]=min(1ll*ans[q[i].w],1ll*q[i].x+q[i].y+ask_min(q[i].y2));\n\t\tif(q[i].opt==3)\t\n\t\t\tans[q[i].w]=max(1ll*ans[q[i].w],1ll*q[i].x+q[i].y+ask_max(q[i].y2));\t\n\t}\n\tfor(i=0;i<cnt;i++)\n\t\tif(q[i].opt==1)\n\t\t\tclear(q[i].y2);\n\tfor(i=cnt-1;i>=0;i--)\n\t{\n\t\tif(q[i].opt==1)\n\t\t\tadd_bit(q[i].y2,q[i].x-q[i].y);\n\t\tif(q[i].opt==2)\n\t\t\tans[q[i].w]=min(1ll*ans[q[i].w],-1ll*q[i].x+q[i].y+ask_min(q[i].y2));\n\t\tif(q[i].opt==3)\n\t\t\tans[q[i].w]=max(1ll*ans[q[i].w],-1ll*q[i].x+q[i].y+ask_max(q[i].y2));\n\t}\n\tfor(i=0;i<cnt;i++)\n\t\tif(q[i].opt==1)\n\t\t\tclear(q[i].y2);\t\t\n\tfor(i=0;i<cnt;i++)\n\t{\n\t\tif(q[i].opt==1)\n\t\t\tadd_bit(mxv-q[i].y2,-q[i].x+q[i].y);\n\t\tif(q[i].opt==2)\n\t\t\tans[q[i].w]=min(1ll*ans[q[i].w],1ll*q[i].x-q[i].y+ask_min(mxv-q[i].y2));\n\t\tif(q[i].opt==3)\n\t\t\tans[q[i].w]=max(1ll*ans[q[i].w],1ll*q[i].x-q[i].y+ask_max(mxv-q[i].y2));\t\n\t}\t\t\n\tfor(i=0;i<cnt;i++)\n\t\tif(q[i].opt==1)\n\t\t\tclear(mxv-q[i].y2);\t\n\tfor(i=cnt-1;i>=0;i--)\n\t{\n\t\tif(q[i].opt==1)\n\t\t\tadd_bit(mxv-q[i].y2,q[i].x+q[i].y);\n\t\tif(q[i].opt==2)\n\t\t\tans[q[i].w]=min(1ll*ans[q[i].w],-1ll*q[i].x-q[i].y+ask_min(mxv-q[i].y2));\n\t\tif(q[i].opt==3)\n\t\t\tans[q[i].w]=max(1ll*ans[q[i].w],-1ll*q[i].x-q[i].y+ask_max(mxv-q[i].y2));\n\t}\n\tfor(i=0;i<cnt;i++)\n\t\tif(q[i].opt==1)\n\t\t\tclear(mxv-q[i].y2);\n}\nvoid CDQ(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=l+r>>1,i,w=0;\n\tCDQ(l,mid),CDQ(mid+1,r);\n\tfor(i=l;i<=mid;i++)\n\t\tif(a[i].opt==1)\n\t\t\tq[w++]=a[i];\n\tfor(;i<=r;i++)\n\t\tif(a[i].opt>1)\n\t\t\tq[w++]=a[i];\n\tsolve(w);\n}\nsigned main()\n{\n\tint n,m,i,cnt=0,q=0,le;\n\tn=read();\n\tfor(i=1;i<=n;i++)\n\t\ta[++cnt].opt=1,a[cnt].x=read(),a[cnt].y=read();\n\tm=read();\n\twhile(m--)\n\t{\n\t\ta[++cnt].opt=read()+1,a[cnt].x=read(),a[cnt].y=read();\n\t\tif(a[cnt].opt>1) a[cnt].w=++q;\n\t\tif(a[cnt].opt==2) ans[q]=2e9;\n\t}\n\tfor(i=1;i<=cnt;i++)\n\t\th[i]=a[i].y;\n\tsort(h+1,h+1+cnt);\n\tle=unique(h+1,h+1+cnt)-h;\n\tfor(i=1;i<=cnt;i++)\n\t\ta[i].y2=lower_bound(h+1,h+le,a[i].y)-h;\n\tfor(i=1;i<=mxv;i++)\n\t\tt[i]=1e18,t2[i]=-1e18;\n\tCDQ(1,cnt);\n\tfor(i=1;i<=q;i++)\n\t\tprintf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1617688320,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6224 [BJWC2014]\u6570\u636e"
    },
    {
        "content": "[$\\text{\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c}$](https://www.cnblogs.com/mfeitveer/p/16034987.html)\n\n\u660e\u660e\u662f\u4e00\u9053 $\\text{k-d tree}$ \u6a21\u677f\u9898\uff0c\u4e3a\u4ec0\u4e48\u5199\u7684\u4eba\u8fd9\u4e48\u5c11\u5462\u3002\n\n### \u601d\u8def\n\n\u770b\u5230\u5e73\u9762\u4e0a\u7684\u64cd\u4f5c\uff0c\u5c31\u5fc5\u4e0d\u53ef\u514d\u7684\u60f3\u5230 $\\text{k-d tree}$\u3002\n\n$\\text{k-d tree}$ \u677f\u5b50\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u5199\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u6700\u8fd1\u6700\u8fdc\u7684\u67e5\u8be2\u3002\n\n**1.\u6700\u8fdc**\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u77e9\u9635\u7684\u6700\u8fdc\u8ddd\u79bb\u4e00\u5b9a\u662f\u5230\u5176\u56db\u4e2a\u89d2\u7684\u6700\u5927\u8ddd\u79bb\uff0c$\\text{k-d tree}$ \u7ef4\u62a4\u7684\u77e9\u9635\u867d\u7136\u4e0d\u662f\u4e00\u4e2a\u5b9e\u9645\u7684\u77e9\u9635\uff0c\u4f46\u7b97\u51fa\u8fd9\u4e2a\u7b54\u6848\u4e0e\u539f\u6765\u7684\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e5f\u80fd\u526a\u679d\u6389\u4e0d\u5c11\u60c5\u51b5\u3002\n\n**2.\u6700\u8fd1**\n\n\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u77e9\u9635\u7684\u6700\u8fd1\u8ddd\u79bb\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u70b9\u5728\u77e9\u9635\u5185\uff0c\u90a3\u4e48\u5c31\u662f\u96f6\uff0c\u4e0d\u7136\u5c31\u662f\u76f4\u63a5\u5230\u8fb9\u6216\u8005\u5230\u56db\u4e2a\u89d2\u3002\n\n\u4e3a\u4e86\u7b80\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n```cpp\ninline int ask(int x , int y , int id)\n{\n\tint res = 0;\n\tres += max(0ll , y - t[id].u) + max(0ll , x - t[id].r);\n\tres += max(0ll , t[id].d - y) + max(0ll , t[id].l - x);\n\treturn res;\n}\n\n```\n\n\u672c\u9898\u5b9e\u6d4b\u662f\u4e0d\u9700\u8981\u65b9\u5dee\u5efa\u6811\u548c\u91cd\u6784\u6811\u7684\uff0c\u76f4\u63a5\u4ea4\u66ff\u5efa\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N = 200020;\nconst int inf = 1e10;\n\nint n , m , rt , cnt , top , ans , stk[N];\n\nstruct Node\n{\n\tint l , r , u , d , siz , a[2] , son[2];\n}t[N];\n\ninline int read()\n{\n    int asd = 0 , qwe = 1; char zxc;\n    while(!isdigit(zxc = getchar())) if(zxc == '-') qwe = -1;\n    while(isdigit(zxc)) asd = asd * 10 + zxc - '0' , zxc = getchar();\n    return asd * qwe;\n}\n\ninline void push_up(int p)\n{\n\tt[p].l = t[p].r = t[p].a[0] , t[p].u = t[p].d = t[p].a[1] , t[p].siz = 1;\n\tfor(int i = 0;i <= 1;i++) if(t[p].son[i])\n\t\tt[p].siz += t[t[p].son[i]].siz,\n   \t\tt[p].l = min(t[p].l , t[t[p].son[i]].l) , t[p].r = max(t[p].r , t[t[p].son[i]].r),\n   \t\tt[p].d = min(t[p].d , t[t[p].son[i]].d) , t[p].u = max(t[p].u , t[t[p].son[i]].u);\n}\n\ninline void insert(int &p , int id , int opt)\n{\n\tif(!p) { p = id , push_up(p); return; }\n\tif(t[id].a[opt] < t[p].a[opt]) insert(t[p].son[0] , id , opt ^ 1);\n\telse insert(t[p].son[1] , id , opt ^ 1); push_up(p);\n}\n\ninline void ask1(int p , int x , int y)\n{\n\tans = max(ans , abs(x - t[p].a[0]) + abs(y - t[p].a[1]));\n\tfor(int i = 0;i <= 1;i++)\n\t\tif(t[p].son[i])\n\t\t{\n\t\t\tint l = t[p].l , r = t[p].r , u = t[p].u , d = t[p].d;\n\t\t\tint res = max({abs(l - x) + abs(u - y) , abs(r - x) + abs(u - y) , abs(r - x) + abs(d - y) , abs(l - x) + abs(d - y)});\n\t\t\tif(res > ans) ask1(t[p].son[i] , x , y);\n\t\t}\n}\n\ninline int ask(int x , int y , int id)\n{\n\tint res = 0;\n\tres += max(0ll , y - t[id].u) + max(0ll , x - t[id].r);\n\tres += max(0ll , t[id].d - y) + max(0ll , t[id].l - x);\n\treturn res;\n}\n\ninline void ask2(int p , int x , int y)\n{\n\tans = min(ans , abs(x - t[p].a[0]) + abs(y - t[p].a[1]));\n\tfor(int i = 0;i <= 1;i++)\n\t\tif(t[p].son[i])\n\t\t{\n\t\t\tint res = ask(x , y , t[p].son[i]);\n\t\t\tif(res < ans) ask2(t[p].son[i] , x , y);\n\t\t}\n}\n\nsigned main()\n{\n    n = read();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tint x = read() , y = read(); ++cnt;\n\t\tt[cnt].a[0] = x , t[cnt].a[1] = y;\n\t\tinsert(rt , cnt , 1);\n\t}\n\tm = read();\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint opt = read() , x = read() , y = read();\n\t\tif(opt == 0)\n\t\t{\n\t\t\tt[++cnt].a[0] = x , t[cnt].a[1] = y;\n\t\t\tinsert(rt , cnt , 1);\n\t\t}\n\t\tif(opt == 1) ans =  inf , ask2(rt , x , y) , printf(\"%lld\\n\" , ans);\n\t\tif(opt == 2) ans = -inf , ask1(rt , x , y) , printf(\"%lld\\n\" , ans);\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1647848365,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P6224 [BJWC2014]\u6570\u636e \u9898\u89e3"
    }
]