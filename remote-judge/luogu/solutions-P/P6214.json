[
    {
        "content": "$$\\mathsf{Preface}$$\n\n[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6214)\u3002\n\n\u611f\u8c22 @[$\\color{black}\\sf{c\\color{red}henxia25}$](https://www.luogu.com.cn/user/138400) \u5728\u9a8c\u9898\u65f6\u7684\u9519\u8bef idea \u5e2e\u52a9\u6211\u60f3\u5230\u4e86\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u89e3\u6cd5\u3002\n\n---\n\n$$\\mathsf{Solution}$$\n\n$\\sf{Subtask}\\ 1$\uff1a$n\\leq 5\\times 10^2$\uff0c$q\\leq 10^3$\u3002\n\n\u6838\u5fc3\u601d\u60f3\uff1a\u201c\u5207\u5272\u201d\u3002\u5207\u5272\u65f6\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u5185\u5c0f A \u548c\u5c0f Y \u90fd\u5728\u505a\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\uff08\u4e0d\u6539\u53d8\u65b9\u5411\u548c\u901f\u5ea6\uff09\u3002\u4f8b\u5982\u6837\u4f8b\u5c31\u53ef\u4ee5\u5207\u5272\u6210 $0.00\\sim0.20$\uff0c$0.20\\sim0.40$\uff0c$0.40\\sim0.41$\uff0c$0.41\\sim1.00$ \u56db\u4e2a\u65f6\u95f4\u6bb5\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u5185\uff0c\u5c0f A \u548c\u5c0f Y \u7684\u8ddd\u79bb\u53ef\u80fd\u4f1a\uff1a$(1)$ \u4e0d\u53d8\u3002 $(2)$ \u53d8\u5c0f\u3002 $(3)$ \u53d8\u5927\u3002 $(4)$ \u5148\u53d8\u5c0f\u518d\u53d8\u5927\u3002\n\n\u5bf9\u4e8e $(1)$\uff0c\u6211\u4eec\u7279\u5224\u4e00\u4e0b\u3002\n\n\u5bf9\u4e8e $(2,3)$\uff0c\u6211\u4eec\u5c06\u5176\u770b\u505a\u4e00\u4e2a\u533a\u95f4\uff0c\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a\u8ddd\u79bb $[dl,dr]$ \u548c\u65f6\u95f4 $[tl,tr]$\u3002\n\n\u5bf9\u4e8e $(4)$\uff0c\u6211\u4eec\u53ef\u4ee5\u4e09\u5206\u627e\u51fa\u5176\u6700\u5c0f\u503c\uff0c\u7136\u540e\u62c6\u6210\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u6700\u591a\u4f1a\u6709 $n+m$ \u4e2a\u65f6\u95f4\u6bb5\uff0c\u6240\u4ee5\u6700\u591a\u53ef\u80fd\u6709 $2n+2m$ \u4e2a\u533a\u95f4\u3002\u8ba1\u7b97\u533a\u95f4\u53ef\u4ee5\u8bbe\u7f6e $eps$\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e09\u5206\u6b21\u6570\uff0c**\u65f6\u95f4\u590d\u6742\u5ea6\u7528 $\\log D$ \u4ee3\u66ff\u3002**\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u7279\u5224\u540e\u66b4\u529b\u7b97\uff0c\u627e\u5230\u533a\u95f4\u540e\u518d\u4e8c\u5206 $[tl,tr]$ \u627e\u5230\u65f6\u95f4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log D+nq\\log D)$**\uff08\u4e0b\u6587\u4e2d\uff0c\u5047\u8bbe $n$ \u7684\u89c4\u6a21\u4e0d\u5c0f\u4e8e $m$\uff09** \u5b9e\u73b0\u8d77\u6765\u7b80\u5355\uff0c\u4ee3\u7801\u91cf\u7ea6\u4e3a $\\sf{2\\sim2.5k}$\u3002\n\n\u4ee3\u7801\uff08\u4e3a\u4e86\u9a8c\u9898\u5199\u7684\u66b4\u529b\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ld long double\nconst int N=5e2+5;\nconst ld eps=1e-9;\nbool Equal(ld x,ld y){return abs(x-y)<=eps;}\nstruct move{\n\tld x,y,t;\n}A[N],B[N];\nstruct query{\n\tld c; int f;\n}Q[N<<1];\nint n,m,q,cnt;\nvector <ld> inf,dis;\nvoid Read(){\n\tcin>>n>>m>>q;\n\tcin>>A[0].x>>A[0].y>>B[0].x>>B[0].y;\n\tfor(int i=1;i<=n;i++)cin>>A[i].x>>A[i].y>>A[i].t;\n\tfor(int i=1;i<=m;i++)cin>>B[i].x>>B[i].y>>B[i].t;\n\tfor(int i=1;i<=q;i++)cin>>Q[i].c>>Q[i].f,dis.push_back(Q[i].c);\n}\nstruct seg{\n\tint pa,pb;\n\tld l,r,Dl,Dr;\n}S[N<<2];\nvoid add(int pa,int pb,ld l,ld r,ld Dl,ld Dr){\n\tdis.push_back(Dl);\n\tdis.push_back(Dr);\n\tS[++cnt]=(seg){pa,pb,l,r,Dl,Dr};\n}\nld cal(int pa,int pb,ld t){\n\tld ra=(t-A[pa].t)/(A[pa+1].t-A[pa].t),rb=(t-B[pb].t)/(B[pb+1].t-B[pb].t);\n\tld xa=A[pa].x+ra*(A[pa+1].x-A[pa].x),xb=B[pb].x+rb*(B[pb+1].x-B[pb].x);\n\tld ya=A[pa].y+ra*(A[pa+1].y-A[pa].y),yb=B[pb].y+rb*(B[pb+1].y-B[pb].y);\n\treturn sqrt((xa-xb)*(xa-xb)+(ya-yb)*(ya-yb));\n}\nvoid Break(){\n\tint pa=0,pb=0;\n\twhile(pa<n){\n\t\tld l=max(A[pa].t,B[pb].t),r=min(A[pa+1].t,B[pb+1].t);\n\t\tint Pa=pa,Pb=pb;\n\t\tif(r==A[pa+1].t)Pa++;\n\t\tif(r==B[pb+1].t)Pb++;\n\t\tld Dl=cal(pa,pb,l),Dr=cal(pa,pb,r),Dm=cal(pa,pb,(l+r)/2);\n\t\tif(Equal(Dl,Dr)&&Equal(Dm,Dr)){\n\t\t\tinf.push_back(Dl);\n\t\t\tpa=Pa,pb=Pb;\n\t\t\tcontinue;\n\t\t}\n\t\tld L=l,R=r;\n\t\twhile(R-L>eps*3){\n\t\t\tld ll=(L+R)/2,rr=ll+eps;\n\t\t\tld Dll=cal(pa,pb,ll),Drr=cal(pa,pb,rr);\n\t\t\tif(Dll<Drr)R=rr;\n\t\t\telse L=ll;\n\t\t}\n\t\tif(Equal(l,L)||Equal(r,R))add(pa,pb,l,r,Dl,Dr);\n\t\telse{\n\t\t\tld m=(L+R)/2; Dm=cal(pa,pb,m);\n\t\t\tadd(pa,pb,l,m,Dl,Dm),add(pa,pb,m,r,Dm,Dr);\n\t\t}\n\t\tpa=Pa,pb=Pb;\n\t}\n}\nmap <ld,int> mp;\nvoid Discretize(){\n\tsort(dis.begin(),dis.end());\n\tint siz=unique(dis.begin(),dis.end())-dis.begin();\n\tfor(int i=0;i<siz;i++)mp[dis[i]]=i;\n}\nvoid Answer(){\n\tfor(int i=1;i<=q;i++){\n\t\tbool Inf=0;\n\t\tfor(auto it:inf)if(Equal(it,Q[i].c))Inf=1;\n\t\tif(Inf){\n\t\t\tputs(\"-2.33\");\n\t\t\tcontinue;\n\t\t}\n\t\tint ind=mp[Q[i].c];\n\t\tvector <ld> ans;\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tint L=mp[S[i].Dl],R=mp[S[i].Dr];\n\t\t\tif(i!=1)if(L>R)L--; else L++;\n\t\t\tif(L>R)swap(L,R);\n\t\t\tif(L<=ind&&ind<=R)ans.push_back(i);\n\t\t}\n\t\tif(ans.size()<Q[i].f){\n\t\t\tputs(\"-4.66\");\n\t\t\tcontinue;\n\t\t}\n\t\tint pos=ans[Q[i].f-1],pa=S[pos].pa,pb=S[pos].pb,inc=S[pos].Dl<S[pos].Dr;\n\t\tld L=S[pos].l,R=S[pos].r;\n\t\twhile(R-L>eps*2){\n\t\t\tld m=(L+R)/2,Dm=cal(pa,pb,m);\n\t\t\tif(inc&&Q[i].c<Dm||!inc&&Q[i].c>Dm)R=m;\n\t\t\telse L=m;\n\t\t}\n\t\tprintf(\"%.8LF\\n\",L);\n\t}\n}\nint main(){\n\tRead();\n\tBreak();\n\tDiscretize();\n\tAnswer();\n\treturn 0;\n}\n```\n\n---\n\n$\\sf{Subtask}\\ 2$\uff1a$n\\leq 2\\times 10^4$\uff0c$q\\leq 2\\times 10^4$\u3002\n\n\u5c06\u6240\u6709\u533a\u95f4\u7684\u7aef\u70b9 $dl,dr$ \u548c\u8be2\u95ee\u8ddd\u79bb\u79bb\u6563\u5316\u3002\u8be2\u95ee\u65f6\u4e8c\u5206\u533a\u95f4 $tl$\uff0c\u7528\u6811\u5957\u6811\u6c42\u51fa\u5f00\u59cb\u65f6\u95f4\u4e0d\u5927\u4e8e\u4e8c\u5206\u7684\u503c\u4e14 $dl\\leq c\\leq dr$ \u7684\u533a\u95f4\u4e2a\u6570\u5e76\u4e0e $f$ \u6bd4\u5bf9\uff0c\u627e\u5230\u533a\u95f4\u540e\u50cf $\\sf{Subtask}\\ 1$ \u4e00\u6837\u4e8c\u5206 $[tl,tr]$ \u5373\u53ef\u3002\u9700\u8981\u6ce8\u610f\u533a\u95f4\u8fb9\u754c\u7684\u7ec6\u8282\u3002\n\n\u5355\u6b21\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log n^3+\\log D)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log D+q\\log^3n)$\uff0c\u5e38\u6570\u8f83\u5927\uff0c\u5b9e\u73b0\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u4ee3\u7801\u91cf\u7ea6\u4e3a $\\sf{5\\sim6k}$\u3002\n\n\u5176\u5b9e\u4e00\u5f00\u59cb\u7684 $\\sf{std}$ \u5c31\u662f\u8fd9\u4e2a\uff0c\u4f46\u662f [$\\color{black}\\sf{c\\color{red}henxia25}$](https://www.luogu.com.cn/user/138400) \u7684\u9519\u8bef $\\sf{idea}$ \u8ba9\u6211\u63a2\u7d22\u5230\u4e86\u66f4\u7b80\u5355\uff0c\u4e5f\u66f4\u5feb\u7684\u7b97\u6cd5\uff0c\u90a3\u5c31\u662f $\\sf{Subtask}\\ 3$\u3002\n\n---\n\n$\\sf{Subtask}\\ 3$\uff1a$n\\leq 4\\times 10^4$\uff0c$q\\leq 5\\times 10^4$\u3002\n\n\u5c06\u6240\u6709\u8ddd\u79bb\u79bb\u6563\u5316\uff0c\u7136\u540e\u6211\u4eec\u9700\u8981\u6c42\u51fa\u7684\u5c31\u662f\uff1a\u6bcf\u6b21\u7ed9\u4e0b\u6807\u843d\u5728 $[l,r]$ \u7684\u6570 $+1$\uff0c\u591a\u6b21\u8be2\u95ee\u4e0b\u6807\u4e3a $c$\uff08\u79bb\u6563\u5316\u540e\uff09 \u7684\u503c\u5728\u7b2c\u51e0\u6b21\u64cd\u4f5c\u540e\u7b49\u4e8e $f$\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u540e\u66f4\u65b0\u663e\u7136\u65e0\u6cd5\u627f\u53d7\uff0c\u4f46\u662f\u6211\u4eec\u6709\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u3002\n\n\u533a\u95f4\u52a0\u6cd5\u663e\u7136\u65e0\u6cd5\u627f\u53d7\uff0c\u4f46\u662f\u6211\u4eec\u6709\u6807\u8bb0\u6c38\u4e45\u5316\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811 + \u6807\u8bb0\u6c38\u4e45\u5316~~\u8f7b\u677e~~\u5b9e\u73b0\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u64cd\u4f5c\u7f16\u53f7\uff0c\u6c42\u51fa\u533a\u95f4\u540e\u4e8c\u5206\u65f6\u95f4\u5373\u53ef\u3002\u540c $\\sf{Subtask}\\ 2$ \u4e00\u6837\uff0c\u9700\u8981\u6ce8\u610f\u533a\u95f4\u8fb9\u754c\u7684\u7ec6\u8282\u3002\n\n\u5355\u6b21\u8be2\u95ee $O(\\log n^2+\\log D)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log D+q\\log^2n)$\u3002\u5e38\u6570\u5927\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(q\\log n)$\uff0c\u4ee3\u7801\u91cf\u7ea6\u4e3a $\\sf{3.5\\sim 4k}$\u3002\n\n- \u53e6\u5916\uff0c\u6d6e\u70b9\u6570\u7684\u8bfb\u5165\u5f88\u6162\uff0c\u5efa\u8bae\u624b\u5199 $\\sf{read}$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace IO{//\u624b\u5199 read \n\tchar buf[1<<23],*p1=buf,*p2=buf;\n\t#define gc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n\tinline void read(int &x){\n\t\tbool sign=0; char s=gc(); x=0;\n\t\twhile(!isdigit(s))sign|=s=='-',s=gc();\n\t\twhile(isdigit(s))x=(x<<1)+(x<<3)+s-'0',s=gc();\n\t\tif(sign)x=-x;\n\t}\n\tinline void read(double &x){\n\t\tbool sign=0; char s=gc(); x=0;\n\t\twhile(!isdigit(s))sign|=s=='-',s=gc();\n\t\twhile(isdigit(s))x=x*10+s-'0',s=gc();\n\t\tx+=(gc()-'0')*0.1,x+=(gc()-'0')*0.01;\n\t\tif(sign)x=-x;\n\t}\n}\nusing namespace IO;\nconst int N=1e5+5; const double eps=1e-9;\nstruct move {double x,y,t; bool operator < (const move &v) const {return t<v.t;} } a[N],b[N];\nstruct query {double c; int f;} c[N<<2];\nstruct section {double l,r,tl,tr; int pa,pb;} s[N<<2];\nint n,m,q,cs,cnt,cinf;\ndouble p[N<<4],inf[N<<1];\nvoid Init(){\n\tread(n),read(m),read(q),read(a[0].x),read(a[0].y),read(b[0].x),read(b[0].y);\n\tfor(int i=1;i<=n;i++)read(a[i].x),read(a[i].y),read(a[i].t);\n\tfor(int i=1;i<=m;i++)read(b[i].x),read(b[i].y),read(b[i].t);\n\tfor(int i=1;i<=q;i++)read(c[i].c),read(c[i].f),p[++cnt]=c[i].c;\n}\nbool Equal(double x,double y) {return abs(x-y)<=eps;}//\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u7b49 \ndouble Gap(double a,double b,double c,double d) {return sqrt((a-c)*(a-c)+(b-d)*(b-d));}//\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u516c\u5f0f\ndouble Calc(int pa,int pb,double t){//\u6c42\u51fa\u67d0\u4e00\u65f6\u523b\u7684\u8ddd\u79bb\n\tdouble ra=(t-a[pa-1].t)/(a[pa].t-a[pa-1].t),rb=(t-b[pb-1].t)/(b[pb].t-b[pb-1].t);\n\tdouble xa=a[pa-1].x+(a[pa].x-a[pa-1].x)*ra,ya=a[pa-1].y+(a[pa].y-a[pa-1].y)*ra;\n\tdouble xb=b[pb-1].x+(b[pb].x-b[pb-1].x)*rb,yb=b[pb-1].y+(b[pb].y-b[pb-1].y)*rb;\n\treturn Gap(xa,ya,xb,yb);\n}\nvoid Add(double x,double y,double l,double r,int pa,int pb) {s[++cs]={x,y,l,r,pa,pb},p[++cnt]=x,p[++cnt]=y;}//\u6dfb\u52a0\u533a\u95f4\nvoid Breakmove(){//\u987e\u540d\u601d\u4e49\uff0c\u6253\u7834\u8fd0\u52a8\uff08\u6c42\u533a\u95f4\uff09\n\tsort(a+1,a+n+1),sort(b+1,b+m+1);\n\tint pa=1,pb=1;\n\twhile(pa<=n&&pb<=m){\n\t\tdouble l=max(a[pa-1].t,b[pb-1].t),r=min(a[pa].t,b[pb].t),dl=Calc(pa,pb,l),dr=Calc(pa,pb,r);\n\t\tdouble m,d1,d2,ll=l,rr=r;\n\t\tint npa=pa+(r==a[pa].t),npb=pb+(r==b[pb].t);\n\t\tif(Equal(dl,dr)&&Equal(Calc(pa,pb,(l+r)/2),dr)) {inf[++cinf]=dl,pa=npa,pb=npb; continue;}//(1)\uff0c\u8ddd\u79bb\u4e0d\u53d8\uff0cinfinity\n\t\twhile(r-l>eps) {m=(l+r)/2,d1=Calc(pa,pb,m),d2=Calc(pa,pb,m+eps/3); d1<d2?r=m+eps/3:l=m;}//\u4e09\u5206\u6c42\u6700\u5c0f\u503c\n\t\tif(dl<d1||Equal(dl,d1)||Equal(d2,dr)||d2>dr)Add(dl,dr,ll,rr,pa,pb);//(2)(3) \n\t\telse {m=(l+r)/2,d1=Calc(pa,pb,m); Add(dl,d1,ll,m,pa,pb),Add(d1,dr,m,rr,pa,pb);}//(4)\n\t\tpa=npa,pb=npb;\n\t}\n}\nint node,R[N<<2],laz[N<<8],ls[N<<8],rs[N<<8];\nint Modify(int pre,int l,int r,int ql,int qr){//\u533a\u95f4\u52a0+\u6807\u8bb0\u6c38\u4e45\u5316 \n\tint id=++node,m=l+r>>1; laz[id]=laz[pre],ls[id]=ls[pre],rs[id]=rs[pre];\n\tif(ql<=l&&r<=qr) {laz[id]++; return id;}\n\tif(ql<=m)ls[id]=Modify(ls[pre],l,m,ql,qr);\n\tif(m<qr)rs[id]=Modify(rs[pre],m+1,r,ql,qr);\n\treturn id;\n}\nint Query(int l,int r,int pos,int x){//\u67e5\u8be2\u67d0\u4e2a\u7248\u672c\u7684\u503c\n\tif(l==r)return laz[x];\n\tint m=l+r>>1;\n\treturn laz[x]+(pos<=m?Query(l,m,pos,ls[x]):Query(m+1,r,pos,rs[x]));\n}\nmap <double,int> mp;\nvoid Construct(){\n\tsort(p+1,p+cnt+1),sort(inf+1,inf+cinf+1); cnt=unique(p+1,p+cnt+1)-p-1;\n\tfor(int i=1;i<=cnt;i++)mp[p[i]]=i;//\u79bb\u6563\u5316\n\tfor(int i=1;i<=cs;i++){\n\t\tint l=mp[s[i].l],r=mp[s[i].r];\n\t\tif(i!=1) if(l<r)l++; else l--; if(l>r) swap(l,r);//\u6ce8\u610f\u533a\u95f4\u8fb9\u754c \n\t\tR[i]=Modify(R[i-1],1,cnt,l,r);\n\t}\n}\nint Binary_pos(query d){//\u4e8c\u5206\u533a\u95f4\u4f4d\u7f6e\n\tint l=1,r=cs,dis=mp[d.c];\n\twhile(l<r) {int m=l+r>>1,t=Query(1,cnt,dis,R[m]); if(t<d.f)l=m+1; else r=m;}\n\treturn l;\n}\ndouble Binary_time(int pos,double dis){//\u4e8c\u5206\u65f6\u95f4\n\tsection d=s[pos]; int pa=d.pa,pb=d.pb; bool down=d.l>d.r; double l=d.tl,r=d.tr;\n\twhile(r-l>eps) {double m=(l+r)/2,dm=Calc(pa,pb,m); if(dm<dis&&down||dm>=dis&&!down)r=m; else l=m;}\n\treturn (l+r)/2;\n}\nvoid Answer(){\n\tfor(int i=1;i<=q;i++){\n\t\tint pos=lower_bound(inf+1,inf+cinf+1,c[i].c)-inf;\n\t\tif(pos<=cinf&&Equal(inf[pos],c[i].c)||pos>1&&Equal(inf[pos-1],c[i].c)) {puts(\"-2.33\"); continue;}\n\t\tint tot=Query(1,cnt,mp[c[i].c],R[cs]);\n\t\tif(c[i].f>tot)puts(\"-4.66\");//\u7279\u5224f>\u6b21\u6570 \n\t\telse printf(\"%.8lf\\n\",Binary_time(Binary_pos(c[i]),c[i].c));\n\t}\n}\nint main() {Init(); Breakmove(); Construct(); Answer();}//\u540e\u9762\u4e09\u4e2a\u4e3b\u8981\u51fd\u6570\u7684\u9996\u5b57\u6bcd\u91cd\u65b0\u6392\u5e8f\u540e\u4e3a ABC\uff08\u9003 \n```\n\n\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u662f\u5199\u597d\u9898\u89e3 $\\sf{1\\ Day}$ \u540e\u624d\u6709\u7684\u3002\u51fa\u9898\u4eba\u7ecf\u8fc7\u4e00\u665a\u4e0a\u7684\u82e6\u601d\u51a5\u60f3\uff0c\u53d1\u73b0\u4e86\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u89e3\u6cd5\u3002\n\n---\n\n$\\sf{Subtask\\ 4}$\uff1a$n\\leq 8\\times 10^4,q\\leq 3\\times 10^5$\u3002\n\n\u7528\u4e24\u53ea $\\log$ \u6c34\u8fc7\u53bb\u7684\u795e\u4ed9\uff0c\u6211\u8bf7\u60a8\u62bd\u70df\u3002~~\u4e24\u53ea $\\log$\uff0c\u4e24\u53ea $\\log$\uff0c\u8dd1\u5f97\u5feb\uff0c\u8dd1\u5f97\u5feb\u3002~~\n\n\u540c $\\sf{Subtask\\ 3}$ \u4e00\u6837\uff0c\u6211\u4eec\u5c06\u533a\u95f4\u79bb\u6563\u5316\u540e\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\uff0c\u7136\u540e\u7528\u524d\u7f00\u548c $\\sf{plus}$ \u4f18\u5316\u67e5\u627e\uff0c\u5c31\u53ef\u4ee5\u5c06\u67e5\u627e\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230\u5355\u6b21 $\\log n$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+q\\log n+q\\log D)$\uff0c\u522b\u770b $n$ \u53ea\u6709 $8\\times 10^4$\uff0c\u5b9e\u9645\u4e0a\u533a\u95f4\u7684\u4e2a\u6570\u4e3a $4n=3.2\\times 10^5$\uff0c\u70b9\u7684\u4e2a\u6570\u53ef\u4ee5\u8fbe\u5230\u60ca\u4eba\u7684 $8n+q=9.4\\times 10^5$\uff0c\u6240\u4ee5\u5e38\u6570\u8fd8\u662f\u5f88\u5927\u7684\u3002\u5b9e\u73b0\u8d77\u6765\u4e5f\u8f83\u9ebb\u70e6\uff0c\u4ee3\u7801\u91cf\u7ea6\u4e3a $\\sf{4\\sim 5k}$\u3002\n\n\u6ce8\u610f\u4e8b\u9879 & \u5361\u5e38\u6280\u5de7\uff1a\n\n- \u6ce8\u610f\u7a7a\u95f4\u9650\u5236\u3002\n\n- \u6d6e\u70b9\u6570\u7684\u8bfb\u5165/\u8f93\u51fa\u5f88\u6162\uff0c\u5efa\u8bae\u624b\u5199 $\\sf{IO}$\u3002\n\n- \u79bb\u6563\u5316\u5c3d\u91cf\u4e0d\u8981\u7528 $\\sf{map}$\uff0c\u5f88\u6162\u3002\n\n~~\u5343\u75ae\u767e\u5b54\u7684~~\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define ll long long\n#define pii pair <int,int>\nnamespace IO{//\u624b\u5199 IO\n\tchar buf[1<<23],*p1=buf,*p2=buf,obuf[1<<23],*O=obuf;\n\t#define gc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n\t#define pc(x) (*O++=x)\n\t#define flush() fwrite(obuf,O-obuf,1,stdout)\n\tinline void read(int &x){\n\t\tbool sign=0; char s=gc(); x=0;\n\t\twhile(!isdigit(s))sign|=s=='-',s=gc();\n\t\twhile(isdigit(s))x=(x<<1)+(x<<3)+s-'0',s=gc();\n\t\tif(sign)x=-x;\n\t}\n\tinline void read(double &x){\n\t\tbool sign=0; char s=gc(); x=0;\n\t\twhile(!isdigit(s))sign|=s=='-',s=gc();\n\t\twhile(isdigit(s))x=x*10+s-'0',s=gc();\n\t\tx+=(gc()-'0')*0.1,x+=(gc()-'0')*0.01;\n\t\tif(sign)x=-x;\n\t}\n\tinline void print(int x){\n\t\tif(x<10)pc(x+'0');\n\t\telse print(x/10),pc(x%10+'0');\n\t}\n\tinline void print(double x){\n\t\tif(x<0)pc('-'),x=-x;\n\t\tint d=x; print(d),x-=d;\n\t\tpc('.');\n\t\tfor(int i=0;i<8;i++)x*=10.0,d=(int)x,pc(d+'0'),x-=d;\n\t\tpc('\\n');\n\t}\n\tinline void print(string x){\n\t\tfor(int i=0;i<x.size();i++)pc(x[i]);\n\t\tpc('\\n');\n\t}\n}\nusing namespace IO;\nconst int N=8e4+5,Q=3e5+5,P=1e6+5; const double eps=1e-9;\nstruct move {double x,y,t; bool operator < (const move &v) const {return t<v.t;} } a[N],b[N];\nstruct query {double c; int f;} c[Q];\nstruct section {double l,r,tl,tr; int pa,pb;} s[N<<2];\nint n,m,q,cs,cnt,cinf;\ndouble p[P],inf[P];\nvoid Init(){\n\tread(n),read(m),read(q),read(a[0].x),read(a[0].y),read(b[0].x),read(b[0].y);\n\tfor(int i=1;i<=n;i++)read(a[i].x),read(a[i].y),read(a[i].t);\n\tfor(int i=1;i<=m;i++)read(b[i].x),read(b[i].y),read(b[i].t);\n\tfor(int i=1;i<=q;i++)read(c[i].c),read(c[i].f),p[++cnt]=c[i].c;\n}\nbool Equal(double x,double y) {return abs(x-y)<=eps;}//\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u76f8\u7b49 \ndouble Gap(double a,double b,double c,double d) {return sqrt((a-c)*(a-c)+(b-d)*(b-d));}//\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u516c\u5f0f\ndouble Calc(int pa,int pb,double t){//\u6c42\u51fa\u67d0\u4e00\u65f6\u523b\u7684\u8ddd\u79bb\n\tdouble ra=(t-a[pa-1].t)/(a[pa].t-a[pa-1].t),rb=(t-b[pb-1].t)/(b[pb].t-b[pb-1].t);\n\tdouble xa=a[pa-1].x+(a[pa].x-a[pa-1].x)*ra,ya=a[pa-1].y+(a[pa].y-a[pa-1].y)*ra;\n\tdouble xb=b[pb-1].x+(b[pb].x-b[pb-1].x)*rb,yb=b[pb-1].y+(b[pb].y-b[pb-1].y)*rb;\n\treturn Gap(xa,ya,xb,yb);\n}\nvoid Add(double x,double y,double l,double r,int pa,int pb) {s[++cs]={x,y,l,r,pa,pb},p[++cnt]=x,p[++cnt]=y;}//\u6dfb\u52a0\u533a\u95f4\nvoid Breakmove(){//\u987e\u540d\u601d\u4e49\uff0c\u6253\u7834\u8fd0\u52a8\uff08\u6c42\u533a\u95f4\uff09\n\tint pa=1,pb=1;\n\twhile(pa<=n&&pb<=m){\n\t\tdouble l=max(a[pa-1].t,b[pb-1].t),r=min(a[pa].t,b[pb].t),dl=Calc(pa,pb,l),dr=Calc(pa,pb,r);\n\t\tdouble m,d1,d2,L=l,R=r;\n\t\tint npa=pa+(r==a[pa].t),npb=pb+(r==b[pb].t);\n\t\tif(Equal(dl,dr)&&Equal(Calc(pa,pb,(l+r)/2),dr)) {inf[++cinf]=dl,pa=npa,pb=npb; continue;}//(1)\uff0c\u8ddd\u79bb\u4e0d\u53d8\uff0cinfinity\n\t\twhile(r-l>eps) {m=(l+r)/2,d1=Calc(pa,pb,m),d2=Calc(pa,pb,m+eps/3); d1<d2?r=m+eps/3:l=m;}//\u4e09\u5206\u6c42\u6700\u5c0f\u503c\n\t\tif(dl<d1||Equal(dl,d1)||Equal(d2,dr)||d2>dr)Add(dl,dr,L,R,pa,pb);//(2)(3)\n\t\telse {m=(l+r)/2,d1=Calc(pa,pb,m); Add(dl,d1,L,m,pa,pb),Add(d1,dr,m,R,pa,pb);}//(4)\n\t\tpa=npa,pb=npb;\n\t}\n}\nint node,R[N<<3];\nstruct data {int ls,rs,num;}d[P<<5];\nint Modify(int pre,int l,int r,int pos,int v){\n\tint id=++node; d[id]=d[pre],d[id].num+=v;\n\tif(l==r)return id;\n\tint m=l+r>>1;\n\tif(pos<=m)d[id].ls=Modify(d[pre].ls,l,m,pos,v);\n\telse d[id].rs=Modify(d[pre].rs,m+1,r,pos,v);\n\treturn id;\n}\nint Getpos(double x) {return lower_bound(p+1,p+cnt+1,x)-p;}\nvoid Construct(){\n\tsort(p+1,p+cnt+1),sort(inf+1,inf+cinf+1); cnt=unique(p+1,p+cnt+1)-p-1;\n\tpii op[N<<3]; int cop=0,pos=1;\n\tfor(int i=1;i<=cs;i++){\n\t\tint l=Getpos(s[i].l),r=Getpos(s[i].r);\n\t\tif(i!=1) if(l<r)l++; else l--; if(l>r) swap(l,r);//\u6ce8\u610f\u533a\u95f4\u8fb9\u754c \n\t\top[++cop]={l,i},op[++cop]={r+1,-i};\n\t}\n\tsort(op+1,op+cop+1);\n\tfor(int i=1;i<=cop;i++){\n\t\twhile(pos<op[i].fi)R[pos+1]=R[pos],pos++;\n\t\tif(pos==cnt+1)break;\n\t\tR[pos]=Modify(R[pos],1,cs,abs(op[i].se),op[i].se>0?1:-1);\n\t}\n}\nint Query(int l,int r,int x,int k){//\u67e5\u627e\n\tif(l==r)return l;\n\tint m=l+r>>1;\n\treturn k<=d[d[x].ls].num?Query(l,m,d[x].ls,k):Query(m+1,r,d[x].rs,k-d[d[x].ls].num);\n}\ndouble Binary_time(int pos,double dis){//\u4e8c\u5206\u65f6\u95f4\n\tsection d=s[pos]; int pa=d.pa,pb=d.pb; bool down=d.l>d.r; double l=d.tl,r=d.tr;\n\twhile(r-l>eps) {double m=(l+r)/2,dm=Calc(pa,pb,m); if(dm<dis&&down||dm>=dis&&!down)r=m; else l=m;}\n\treturn (l+r)/2;\n}\nvoid Answer(){\n\tfor(int i=1;i<=q;i++){\n\t\tint pos=lower_bound(inf+1,inf+cinf+1,c[i].c)-inf;\n\t\tif(pos<=cinf&&Equal(inf[pos],c[i].c)||pos>1&&Equal(inf[pos-1],c[i].c)) {print(\"-2.33\"); continue;}//\u7279\u5224infinity\n\t\tint p=Getpos(c[i].c);\n\t\tif(c[i].f>d[R[p]].num)print(\"-4.66\");//\u7279\u5224f>\u6b21\u6570\n\t\telse print(Binary_time(Query(1,cs,R[p],c[i].f),c[i].c));\n\t}\n}\nint main() {Init(); Breakmove(); Construct(); Answer(); flush();}//\u540e\u9762\u4e09\u4e2a\u4e3b\u8981\u51fd\u6570\u7684\u9996\u5b57\u6bcd\u91cd\u65b0\u6392\u5e8f\u540e\u4e3a ABC\uff08\u9003 \n```\n\n\n---\n\n$$\\sf{Conclusion}$$\n\n\u672c\u6587\u4e2d\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4e0d\u592a\u4e25\u8c28\u7684\u5730\u65b9\uff0c\u8bf7\u89c1\u8c05\u3002\n\n**\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u901a\u8fc7\u8fd9\u9053\u9898\u76ee\u5bf9\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff0c\u6807\u8bb0\u6c38\u4e45\u5316\u548c\u524d\u7f00\u548c\u4f18\u5316\u6709\u66f4\u8fdb\u4e00\u6b65\u7684\u7406\u89e3\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u51fa\u9898\u7684\u672c\u610f\u3002**\n\n\u518d\u6b21\u611f\u8c22 [$\\sf{\\color{black}c\\color{red}henxia25}$](https://www.luogu.com.cn/user/138400)\uff08$\\sf{STO}$\uff0c\u4ed6\u771f\u7684\u5f88\u5f3a\uff09\uff01\n\n$\\sf{Upd\\ on\\ 2020.2.29:}$ \u53e6\u5916\uff0c\u611f\u8c22 [$\\color{gray}\\sf{Alex\\_Wei}$](https://www.luogu.com.cn/user/123294)\uff08\u6211\u81ea\u5df1\uff09\u53ca\u65f6\u53d1\u73b0\u4e86\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u89e3\u6cd5\uff0c\u624d\u4f7f\u5f97 $\\sf{std}$ \u4e0d\u88ab\u540a\u6253\u3002\n\n\n\u7801\u5b57\u4e0d\u6613\uff0c\u70b9\u4e2a\u8d5e\u5457 awa\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u4e86\u6587\u7ae0\u6709\u9519\uff0c\u53ca\u65f6\u544a\u8bc9\u6211\u54c8\uff0cbye ~",
        "postTime": 1582804066,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u300cSWTR-04\u300dF Taking a Walk"
    },
    {
        "content": "\u5e94\u51fa\u9898\u4eba\u8981\u6c42\uff0c\u524d\u6765\u7814\u7a76\u672c\u9898\uff0c\u7136\u540e\u53d1\u73b0\u51fa\u9898\u4eba\u7684\u5199\u6cd5\u4e00\u70b9\u4e5f\u4e0d\u7f8e\u89c2\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v472k3bh.png)\n\n------------\n\n\u6211\u4eec\u8003\u8651\u4efb\u610f\u65f6\u523b\u4e24\u4eba\u4e4b\u95f4\u7684\u5411\u91cf $\\vec{s}$\u3002\u5728\u67d0\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u4e24\u4eba\u4e4b\u95f4\u5411\u91cf\u7684\u53d8\u5316\u7387\u4f1a\u4e00\u76f4\u662f $\\vec{v}$\u3002\u4e8e\u662f\uff0c\u6309\u7167\u6b64\u79cd\u65b9\u5f0f\u8fdb\u884c $t$ \u79d2\u540e\uff0c\u4e8c\u4eba\u4e4b\u95f4\u7684\u5411\u91cf\u4f1a\u662f $\\vec{s}+t\\vec{v}$\u3002\n\n\u8003\u8651\u4e24\u4eba\u95f4\u7684\u8ddd\u79bb\uff0c\u5b83\u4e3a $|\\vec{s}+t\\vec{v}|$\u3002\u6211\u4eec\u5982\u679c\u753b\u51fa\u56fe\u6765\uff0c\u5c31\u4f1a\u53d1\u73b0\u5b83\u7684\u51e0\u4f55\u610f\u4e49\u662f\u539f\u70b9\u5230\u76f4\u7ebf\u4e0a\u4e00\u70b9\u7684\u8ddd\u79bb\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vcpcwadx.png)\n\n\u660e\u663e\uff0c\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u662f\u4e8c\u6b21\u51fd\u6570\uff08\u8003\u8651\u70b9\u5230\u76f4\u7ebf\u8ddd\u79bb\u516c\u5f0f\uff09\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u6211\u4eec\u5982\u679c\u628a\u6bcf\u4e00\u65f6\u523b\u4e8c\u4eba\u95f4\u8ddd\u79bb\u753b\u51fa\u6765\uff0c\u5b83\u53ef\u80fd\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lj9y035c.png)\n\n\u5982\u56fe\uff0c\u8ddd\u79bb\u53ef\u80fd\u66f2\u91cc\u62d0\u5f2f\uff0c\u53ef\u80fd\u4e0a\u4e0b\u4e71\u52a8\uff0c\u4f46\u662f\u552f\u4e00\u4e0d\u53d8\u7684\u662f\uff0c\u5728\u6bcf\u4e2a\u533a\u95f4\u5185\uff0c\u8ddd\u79bb\u8981\u4e48\u662f\u5355\u8c03\u4e0a\u5347/\u4e0b\u964d\u7684\uff0c\u8981\u4e48\u662f\u5355\u5cf0\u7684\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u628a\u6bcf\u4e2a\u5355\u5cf0\u51fd\u6570\u5728\u5cf0\u503c\u5904\u5207\u4e00\u5200\uff0c\u5c06\u5176\u5207\u6210\u4e24\u534a\u5355\u8c03\u7684\u51fd\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5ihxxfuk.png)\n\n\u4e8e\u662f\u73b0\u5728\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u4f17\u591a\u5355\u8c03\u7684\u8fde\u7eed\u51fd\u6570\u3002\n\n\u6211\u4eec\u73b0\u5728\u518d\u8003\u8651\u8be2\u95ee\u8ddd\u79bb\u4e3a $x$\uff0c\u5219\u5176\u5c31\u76f8\u5f53\u4e8e\u7528\u4e00\u6761\u6c34\u5e73\u7684\u76f4\u7ebf\u53bb\u622a\u4e0a\u8ff0\u56fe\u50cf\uff0c\u6c42\u51fa\u5176\u67d0\u4e2a\u4ea4\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o4jo7f0c.png)\n\n\u660e\u663e\uff0c\u4f9d\u636e\u4e2d\u503c\u5b9a\u7406\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u51fd\u6570 $(t_i,t_{i+1})$\uff0c\u5982\u679c\u5176\u4e00\u7aef\u5728\u8be5\u6c34\u5e73\u76f4\u7ebf\u4e0a\uff0c\u4e00\u7aef\u5728\u8be5\u6c34\u5e73\u76f4\u7ebf\u4e0b\uff0c\u5219\u4e8c\u8005\u5fc5\u5728\u6b64\u6bb5\u533a\u95f4\u5185\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4ea4\u70b9\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4fbf\u53ef\u4ee5\u79bb\u7ebf\u4e0b\u6240\u6709\u8be2\u95ee\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u6bb5 $(t_i,t_{i+1})$\uff0c\u66f4\u65b0\u90a3\u4e9b\u4e0e\u5176\u6709\u4ea4\u70b9\u7684\u8be2\u95ee\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be2\u95ee\u6309\u7167\u952e\u503c\u6392\u5e8f\uff0c\u5173\u4e8e\u8be2\u95ee\u5efa\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u533a\u95f4 $\\min$\uff0c\u8868\u793a\u6b64\u6bb5\u533a\u95f4\u91cc\u5269\u4f59\u51fa\u73b0\u6b21\u6570\u6700\u5c11\u7684\u90a3\u4e2a\u8be2\u95ee\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5f53\u6211\u4eec\u6709\u4e00\u6bb5\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5c31\u628a\u5b83\u6267\u884c\u533a\u95f4 $-1$ \u7684\u64cd\u4f5c\u3002\u5047\u5982\u4f55\u65f6\u53d1\u73b0\u51fa\u73b0\u4e86 $0$\uff0c\u5c31\u8bc1\u660e\u51fa\u73b0 $0$ \u7684\u8be2\u95ee\u4e0e\u6b64\u6bb5\u51fd\u6570\u7684\u4ea4\u70b9\u662f\u8be5\u8be2\u95ee\u9700\u8981\u7684\u4ea4\u70b9\uff0c\u627e\u51fa\u8be5\u4ea4\u70b9\u5373\u662f\u6b64\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u8bf4\u8d77\u6765\u5f88\u8f7b\u5de7\uff0c\u4f46\u662f\u5199\u8d77\u4ee3\u7801\u6765\u5374\u5f02\u5e38\u6076\u5fc3\u3002\n\n\u9996\u5148\uff0c\u521d\u59cb\u7684\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4e24\u4e2a\u4eba\u8fdb\u884c\u5f52\u5e76\u5f97\u5230\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u4fbf\u77e5\u9053\u4e86\u6bcf\u4e00\u6bb5\u51fd\u6570\u7684\u5206\u754c\u70b9\u3001\u51fd\u6570\u5728\u5206\u754c\u70b9\u5904\u7684\u53d6\u503c\uff0c\u4ee5\u53ca\u6bcf\u6bb5\u533a\u95f4\u5185\u90e8\u7684\u901f\u5ea6\uff08\u5373\u4e0a\u8ff0\u7684 $v$\uff09\u3002\n\n\u7136\u540e\uff0c\u5173\u4e8e\u5c06\u4e8c\u6b21\u51fd\u6570\u5207\u5f00\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u5206\u2014\u2014\u4f46\u6211\u8ba4\u4e3a\u90a3\u662f\u5f02\u7aef\u884c\u4e3a\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u91c7\u7528\u8ba1\u7b97\u51e0\u4f55\u6c42\u51fa\u539f\u70b9\u5230\u4e0a\u8ff0\u76f4\u7ebf\u7684\u5782\u7ebf\uff0c\u7136\u540e\u5728\u5782\u8db3\u5904\u5c06\u4e8c\u6b21\u51fd\u6570\u5206\u5f00\u3002\n\n\u7136\u540e\u5efa\u6811\u4ec0\u4e48\u7684\u5c31\u4e0d\u63d0\u4e86\u3002\u6ce8\u610f\uff0c\u533a\u95f4\u7684\u7aef\u70b9\u8981\u5355\u72ec\u8003\u8651\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u5947\u602a\u7684\u9519\u8bef\uff08\u56e0\u4e3a\u7aef\u70b9\u4f1a\u88ab\u5de6\u53f3\u4e24\u7aef\u7684\u533a\u95f4\u5404\u8ba1\u7b97\u4e00\u6b21\uff09\u3002\n\n\u7136\u540e\u5c31\u662f\u6c42\u8be2\u95ee\u4e0e\u67d0\u6bb5\u51fd\u6570\u7684\u4ea4\u70b9\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u2014\u2014\u4f46\u90a3\u8fd8\u662f\u5f02\u7aef\u884c\u4e3a\u3002\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4e0a\u8ba1\u7b97\u51e0\u4f55\uff0c\u8ba1\u7b97\u51fa\u5f53\u76f4\u7ebf\u4e0a\u7684\u67d0\u4e2a\u70b9\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u662f\u8be2\u95ee\u7684\u503c\u65f6\uff0c\u5176\u4e0e\u5782\u8db3\u95f4\u7684\u8ddd\u79bb\uff08\u53ef\u4ee5\u76f4\u63a5\u4e0a\u52fe\u80a1\u5b9a\u7406\u7b97\u5f97\uff09\uff0c\u7136\u540e\u5224\u65ad\u5782\u8db3\u4e24\u7aef\u8ddd\u79bb\u5b83\u4e3a\u4e0a\u8ff0\u8ddd\u79bb\u7684\u70b9\u4e2d\u54ea\u4e00\u4e2a\u5728\u533a\u95f4\u5185\u5373\u53ef\u3002\n\n\u6700\u540e\u662f\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a$-2.33$\uff0c\u5f53\u4e14\u4ec5\u5f53\u51fd\u6570\u4e2d\u67d0\u4e00\u6bb5\u662f\u6c34\u5e73\u76f4\u7ebf\uff08\u8fd9\u662f\u6709\u53ef\u80fd\u53d1\u751f\u7684\uff0c\u6b64\u65f6 $\\vec{v}=0$\uff09\uff0c\u4e14\u8be5\u76f4\u7ebf\u4e0e\u8be2\u95ee\u76f4\u7ebf\u91cd\u5408\uff1b$-4.66$\uff0c\u5f53\u4e14\u4ec5\u5f53\u6240\u6709\u533a\u95f4\u90fd\u52a0\u5165\u7ebf\u6bb5\u6811\u540e\uff0c\u67d0\u4e9b\u8be2\u95ee\u8fd8\u6709\u5269\u4f59\u7684\u6b21\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\log q)$\u3002\n\n\uff08\u6240\u4ee5\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u7528\u4e3b\u5e2d\u6811\u5462\uff1f\uff09\n\n\uff08\u867d\u7136\u6b64\u4ee3\u7801\u4e00\u70b9\u90fd\u4e0d\u6bd4\u4e3b\u5e2d\u6811\u77ed\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst double eps=1e-10;\nstruct Vector{\n\tdouble x,y;\n\tVector(){x=y=0;}\n\tVector(double X,double Y){x=X,y=Y;}\n\tfriend Vector operator +(const Vector &u,const Vector &v){return Vector(u.x+v.x,u.y+v.y);}\n\tfriend Vector operator -(const Vector &u,const Vector &v){return Vector(u.x-v.x,u.y-v.y);}\n\tfriend Vector operator *(const Vector &u,const double &v){return Vector(u.x*v,u.y*v);}\n\tfriend Vector operator /(const Vector &u,const double &v){return Vector(u.x/v,u.y/v);}\n\tfriend double operator &(const Vector &u,const Vector &v){return u.x*v.y-u.y*v.x;}//cross times\n\tfriend double operator |(const Vector &u,const Vector &v){return u.x*v.x+u.y*v.y;}//point times\n\tdouble operator ~()const{return sqrt(x*x+y*y);}//the modulo of a vector\n\tdouble operator !()const{return atan2(y,x);}//the angle of a vector\n\tvoid read(){scanf(\"%lf%lf\",&x,&y);}\n\tvoid print(){printf(\"(%lf,%lf)\",x,y);}\n};\ntypedef Vector Point;\nstruct Line{\n\tPoint x,y;\n\tVector z;\n\tLine(){}\n\tLine(Point X,Point Y){x=X,y=Y,z=Y-X;}\n\tfriend Point operator &(const Line &u,const Line &v){return u.x+u.z*((v.z&(u.x-v.x))/(u.z&v.z));}\n};\ntypedef Line Segment;\nnamespace ini{//initialization part.\n\tint n,m,lim;\n\tVector A[80100],B[80100],v[160100];\n\tdouble aa[80100],bb[80100],tim[160100];\n\tPoint p[160100],tange[160100];\n\tdouble FindTangent(int i){\n\t\tif(~v[i+1]<eps||~p[i]<eps){tange[i]=p[i];return 0;}\n\t\tLine U=Line(p[i],p[i]+v[i+1]);\n\t\tLine V=Line(Point(),Point(v[i+1].y,-v[i+1].x));\n\t\tPoint W=U&V;\n\t\ttange[i+1]=W;\n\t\tW=W-p[i];\n\t\tif((W|v[i+1])<0)return 0;//the inflection point is <0.\n\t\treturn ~W/~v[i+1];\n\t}\n}\nnamespace nin{//function part.\n\tint q,lim; \n\tVector v[320100];\n\tdouble tim[320100];\n\tPoint p[320100],tange[320100];\n\tdouble FindConcide(int i,double req){\n\t\tdouble mini=~tange[i+1];\n\t\tdouble nedi=sqrt(req*req-mini*mini)/~v[i+1];\n\t\tPoint W=tange[i+1]-p[i];\n\t\tdouble nowi=~W/~v[i+1];\n\t\tif((W|v[i+1])<0)nowi=-nowi;\n\t\tif(nowi+nedi>eps&&nowi+nedi<=tim[i+1]-tim[i])return nowi+nedi+tim[i];\n\t\treturn nowi-nedi+tim[i];\n\t}\n\tstruct Query{\n\t\tint num,id;\n\t\tdouble inq;\n\t\tfriend bool operator <(const Query &x,const Query &y){return x.inq<y.inq;}\n\t}qq[301000];\n\tdouble qwq[301000];\n\tdouble res[301000];\n\tset<double>sp;\n\tbool findsp(double inq){\n\t\tauto it=sp.lower_bound(inq);\n\t\tif(it!=sp.end()&&fabs(*it-inq)<eps)return true;\n\t\tif(it==sp.begin())return false;\n\t\tit--;\n\t\treturn fabs(*it-inq)<eps;\n\t}\n\t#define lson x<<1\n\t#define rson x<<1|1\n\t#define mid ((l+r)>>1)\n\tstruct Segtree{\n\t\tint tag,mn;\n\t}seg[1201000];\n\tvoid ADD(int x,int y=1){seg[x].tag+=y,seg[x].mn-=y;}\n\tvoid pushdown(int x){ADD(lson,seg[x].tag),ADD(rson,seg[x].tag),seg[x].tag=0;}\n\tvoid pushup(int x){seg[x].mn=min(seg[lson].mn,seg[rson].mn);}\n\tvoid build(int x,int l,int r){\n\t\tif(l==r){\n\t\t\tif(findsp(qq[l].inq))res[qq[l].id]=-2.33,seg[x].mn=0x3f3f3f3f;\n\t\t\telse seg[x].mn=qq[l].num;\n\t\t\treturn;\n\t\t}\n\t\tbuild(lson,l,mid),build(rson,mid+1,r),pushup(x);\n\t}\n\tvoid modify(int x,int l,int r,int L,int R){\n\t\tif(l>R||r<L)return;\n\t\tif(L<=l&&r<=R){ADD(x);return;}\n\t\tpushdown(x),modify(lson,l,mid,L,R),modify(rson,mid+1,r,L,R),pushup(x);\n\t}\n\tvoid getans(int x,int l,int r,int i){\n\t\tif(l==r){\n\t\t\tres[qq[l].id]=FindConcide(i,qq[l].inq);\n\t\t\tseg[x].mn=0x3f3f3f3f;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(x);\n\t\tif(seg[lson].mn==0)getans(lson,l,mid,i);\n\t\tif(seg[rson].mn==0)getans(rson,mid+1,r,i);\n\t\tpushup(x);\n\t}\n\tvoid setans(int x,int l,int r,double i){\n\t\tif(l==r){\n\t\t\tres[qq[l].id]=i;\n\t\t\tseg[x].mn=0x3f3f3f3f;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(x);\n\t\tif(seg[lson].mn==0)setans(lson,l,mid,i);\n\t\tif(seg[rson].mn==0)setans(rson,mid+1,r,i);\n\t\tpushup(x);\n\t}\n}\nnamespace ini{\n\tvoid initialize(){\n\t\tscanf(\"%d%d%d\",&n,&m,&nin::q);\n\t\tA[0].read(),B[0].read();\n\t\tfor(int i=1;i<=n;i++)A[i].read(),scanf(\"%lf\",&aa[i]);\n\t\tfor(int i=n;i;i--)A[i]=(A[i]-A[i-1])/(aa[i]-aa[i-1]);\n\t\tfor(int i=1;i<=m;i++)B[i].read(),scanf(\"%lf\",&bb[i]);\n\t\tfor(int i=m;i;i--)B[i]=(B[i]-B[i-1])/(bb[i]-bb[i-1]);\n\t\tfor(int i=1,j=1;i<=n&&j<=m;){\n\t\t\ttim[++lim]=min(aa[i],bb[j]);\n\t\t\tv[lim]=A[i]-B[j];\n\t\t\tif(fabs(aa[i]-tim[lim])<eps)i++;\n\t\t\tif(fabs(bb[j]-tim[lim])<eps)j++;\n\t\t}\n\t\tp[0]=A[0]-B[0];\n\t\tfor(int i=1;i<=lim;i++)p[i]=p[i-1]+v[i]*(tim[i]-tim[i-1]);\n\t}\n}\nnamespace nin{\n\tvoid solution(){\n//\t\tp[0].print(),puts(\"\");for(int i=1;i<=lim;i++)v[i].print(),printf(\"%lf\\n\",tim[i]),p[i].print(),puts(\"\");\n\t\tfor(int i=0;i<lim;i++)if(~v[i+1]<eps)sp.insert(~p[i]);\n\t\tfor(int i=1;i<=q;i++)scanf(\"%lf%d\",&qq[i].inq,&qq[i].num),qq[i].id=i;\n\t\tsort(qq+1,qq+q+1);\n//\t\tfor(int i=1;i<=q;i++)printf(\"%lf %d %d\\n\",qq[i].inq,qq[i].num,qq[i].id);\n\t\tfor(int i=1;i<=q;i++)qwq[i]=qq[i].inq;\n\t\tbuild(1,1,q);\n\t\tfor(int i=0;i<lim;i++){\n\t\t\tif(~v[i+1]<eps)continue;\n\t\t\tdouble l=~p[i],r=~p[i+1];\n\t\t\tif(l>r)swap(l,r);\n\t\t\tl+=eps,r-=eps; \n//\t\t\tprintf(\"%lf %lf\\n\",l,r);\n\t\t\tint L=upper_bound(qwq+1,qwq+q+1,l)-qwq;\n\t\t\tint R=upper_bound(qwq+1,qwq+q+1,r)-qwq-1;\n//\t\t\tprintf(\"%d %d\\n\",L,R);\n\t\t\tif(L<=R)modify(1,1,q,L,R);\n//\t\t\tprintf(\"BEF:%d\\n\",seg[1].mn);\n\t\t\tif(seg[1].mn==0)getans(1,1,q,i);\n//\t\t\tprintf(\"AFT:%d\\n\",seg[1].mn);\n\t\t\tdouble w=~p[i+1];\n\t\t\tL=lower_bound(qwq+1,qwq+q+1,w)-qwq;\n\t\t\tR=upper_bound(qwq+1,qwq+q+1,w)-qwq-1;\n\t\t\tif(L<=R)modify(1,1,q,L,R),printf(\"%d %d\\n\",L,R);\n\t\t\tif(seg[1].mn==0)setans(1,1,q,tim[i+1]);\n\t\t}\n\t\tfor(int i=1;i<=q;i++)if(fabs(res[i])<eps)res[i]=-4.66;\n\t\tfor(int i=1;i<=q;i++)printf(\"%.9lf\\n\",res[i]);\n\t}\n}\nint main(){\n\tini::initialize();\n\tnin::p[0]=ini::p[0];\n\tfor(int i=0;i<ini::lim;i++){\n\t\tdouble pos=ini::FindTangent(i);\n\t\tif(pos>eps&&(ini::tim[i+1]-ini::tim[i])-pos>eps){\n\t\t\tnin::lim++;\n\t\t\tnin::p[nin::lim]=ini::p[i]+ini::v[i+1]*pos;\n\t\t\tnin::v[nin::lim]=ini::v[i+1];\n\t\t\tnin::tim[nin::lim]=ini::tim[i]+pos;\n\t\t\tnin::tange[nin::lim]=ini::tange[i+1];\n\t\t}\n\t\tnin::lim++;\n\t\tnin::p[nin::lim]=ini::p[i+1];\n\t\tnin::v[nin::lim]=ini::v[i+1];\n\t\tnin::tim[nin::lim]=ini::tim[i+1];\n\t\tnin::tange[nin::lim]=ini::tange[i+1];\n\t}\n\tnin::solution();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1606734505,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6214 \u3010\u300cSWTR-04\u300dTaking a Walk\u3011"
    }
]