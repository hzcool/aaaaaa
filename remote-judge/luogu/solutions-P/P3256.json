[
    {
        "content": "# \u5355\u8c03\u6808\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn)\uff0c\u6bd4\u534a\u5e73\u9762\u4ea4\u5e38\u6570\u5c0f\u3002\n\n~~\u6211\u624d\u4e0d\u4f1a\u8bf4\u662f\u56e0\u4e3a\u6211\u61d2\u5f97\u5199\u534a\u5e73\u9762\u4ea4~~\n\n## \u9898\u89e3\n\n~~\u5982\u679c\u4e00\u4e2a\u4eba\u6bd4\u4f60\u5c0f\uff0c\u8fd8\u6bd4\u4f60\u5f3a\uff0c\u4f60\u5c31\u80af\u5b9a\u6253\u4e0d\u8fc7\u4ed6\u4e86~~\n\n- \u5982\u679c\u4e00\u8f86\u8f66\u6bd4\u4f60\u5feb(\u8ddf\u4f60\u4e00\u6837\u5feb)\uff0c\u8fd8\u6bd4\u4f60\u51fa\u53d1\u70b9\u524d\uff0c\u4f60\u5c31\u80af\u5b9a\u8ffd\u4e0d\u4e0a\u5b83\u4e86\u3002\n\n  \u5373\u5982\u679ca.k>b.k&&a.v>=b.v\uff0c\u5219a\u8ffd\u4e0d\u4e0ab\uff0c\u62ff\u4e0d\u5230\u7b2c\u4e00\u3002\n  \n  **\u82e5\u6709a\u4e3a\u65b0\u52a0\u5165\u7684\u8f66\uff0cb\u4e3astk[top]\uff0cc\u4e3astk[top-1]\uff0ca\u8ffd\u4e0ab\u7684\u65f6\u95f4\u5c0f\u4e8eb\u8ffd\u4e0ac\u7684\u65f6\u95f4\uff0c\u5219b\u4e0d\u53ef\u80fd\u62ff\u5230\u7b2c\u4e00\uff0c\u53ef\u4ee5\u51fa\u6808**(\u81ea\u884c\u601d\u8003\u539f\u56e0)\u3002\n  \n- \u5982\u679c\u4e00\u8f86\u8f66\u8ddf\u4f60\u4e00\u6837\u5feb\uff0c\u8fd8\u8ddf\u4f60\u51fa\u53d1\u70b9\u4e00\u6837\uff0c\u4f60\u5c31\u8ddf\u5b83\u5e76\u9a7e\u9f50\u9a71\u4e86(~~\u5e9f\u8bdd~~)\u3002\n\n  **\u8fd9\u4f7f\u5f97a\u548cb\u53ef\u80fd\u5e76\u5217\u7b2c\u4e00**\u3002\n\n- \u5982\u679c\u4e00\u8f86\u8f66\u6bd4\u4f60\u6162\uff0c\u6bd4\u4f60\u51fa\u53d1\u70b9\u524d\uff0c\u4f60\u5c31\u6709\u53ef\u80fd\u8ffd\u4e0a\u5b83\u4e86\u3002\n\n  \u4f46\u8fd9\u5e76\u4e0d\u4ee3\u8868\u4f60\u5c31\u53ef\u4ee5\u62ff\u5230\u7b2c\u4e00\uff0c\u53ef\u80fd\u6709\u6bd4\u4f60\u901f\u5ea6\u5feb\u7684\u5728\u4f60\u524d\u9762\u6216\u4f60\u540e\u9762\u7684\u6bd4\u4f60\u901f\u5ea6\u5feb\u7684\u5728\u4f60\u8ffd\u4e0a\u4e4b\u524d\u8d85\u4f60\u8f66\u3002\n\n- \u5982\u679c\u4e00\u8f86\u8f66\u6bd4\u4f60\u5feb\uff0c\u6bd4\u4f60\u51fa\u53d1\u70b9\u540e\uff0c\u4f60\u5c31\u6709\u53ef\u80fd\u88ab\u5b83\u8ffd\u4e0a\u4e86\u3002\n\n  \u8fd9\u5bfc\u81f4\u4f60\u53ef\u80fd\u5728\u62ff\u5230\u7b2c\u4e00\u4e4b\u524d\u88ab\u8d85\u8f66\u3002\n\n\u8003\u8651\u8fd9\u56db\u79cd\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4f7f\u7528\u5355\u8c03\u6808\u89e3\u9898\u4e86\u3002\n\n\u628a\u6240\u6709\u7684\u8f66\u6309v\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0cv\u76f8\u540c\u7684\u6309k\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u7136\u540e\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u8f66\uff0c\u518d\u5c06\u6808\u4e2d\u4e0d\u53ef\u80fd\u62ff\u7b2c\u4e00\u7684\u8f66\u51fa\u6808\uff0c\u6700\u540e\u8be5\u8f66\u5165\u6808\u3002\n\n\u7b97\u5b8c\u8f93\u51fa\u4e00\u4e0b\u6808\u91cc\u8f66\u7684\u7f16\u53f7\u5c31\u597d\u5566qwq~\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint stk[10010],top,n;\nstruct data{\n    int k,v,id;\n}a[10010];\nbool cmp(data x,data y){\n    if(x.v==y.v) return x.k<y.k;\n    return x.v<y.v;\n}\nbool cmp1(int x,int y){\n    return a[x].id<a[y].id;\n}\ndouble tim(data a,data b){//\u8ba1\u7b97\u8ffd\u53ca\u65f6\u95f4\n\tif(a.v==b.v) return 2e9;//\u9632\u6b62\u96640 \u867d\u7136\u4f3c\u4e4e\u6ca1\u6709\u8fd9\u6837\u7684\u6570\u636e\n\treturn double(a.k-b.k)/(b.v-a.v);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) a[i].id=i;\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i].k);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i].v);\n    sort(a+1,a+n+1,cmp);\n    stk[++top]=1;\n    for(int i=2;i<=n;i++){\n        while(top&&((a[i].k>a[stk[top]].k)||(top>1&&tim(a[stk[top]],a[i])<tim(a[stk[top-1]],a[stk[top]]))/*||(a[i].v==a[stk[top]].v&&a[i].k>a[stk[top]].k)*/)) top--;//\u6ce8\u91ca\u90e8\u5206\u7136\u5e76\u5375\n        stk[++top]=i;\n    }\n    printf(\"%d\\n\",top);\n    sort(stk+1,stk+top+1,cmp1);\n    for(int i=1;i<=top;i++)\n    printf(\"%d \",a[stk[i]].id);\n}\n```\n",
        "postTime": 1562407787,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5c31\u662f\u4e2a\u7b80\u5355\u7684\u534a\u5e73\u9762\u4ea4\u3002\u3002\n\n\u5f3a\u5236\u53ea\u80fd\u5728\u7b2c\u4e00\u8c61\u9650\n\n\u505a\u9898\u7684\u65f6\u5019\u7a81\u7136\u50bb\u6389\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,d,z[1000000];\nbool flag[1000000];\nstruct lsg{int x,y,z;}a[1000000];\nbool cmp(lsg x,lsg y){return x.x<y.x||x.x==y.x&&x.y<y.y;}\nbool cmp1(int x,int y){return a[x].z<a[y].z;}\ndouble pd1(int x,int y){//\u4e24\u76f4\u7ebf\u4ea4\u70b9\n        double xx=double(a[x].y-a[y].y)/(a[y].x-a[x].x);\n        return xx;\n    }\nbool pd(int x,int y,int z){//\u5224\u65ady\u662f\u5426\u5b8c\u5168\u88abx\u548cz\u8986\u76d6\n        double xx=pd1(x,y);\n        double yy=pd1(x,z);\n        return xx>yy;\n    }\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n;for (int i=1;i<=n;i++)cin>>a[i].y,a[i].z=i;\n    for (int i=1;i<=n;i++)cin>>a[i].x;\n    sort(a+1,a+1+n,cmp);for (int i=1;i<=n;i++){\n        while(d>=1&&pd1(z[d],i)<0)d--;\n        while(d>=2&&pd(z[d-1],z[d],i))d--;\n        z[++d]=i;\n    }sort(z+1,z+1+d,cmp1);cout<<d<<endl;\n    for (int i=1;i<=d;i++)cout<<a[z[i]].z<<' ';\n}\n```",
        "postTime": 1506586508,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "## [JLOI2013]\u8d5b\u8f66  \n\n\u6298\u78e8\u6c34\u7684\u9898\u5c45\u7136\u662f\u7d2b\u9898\u3002  \n\n\u9898\u89e3\u91cc\u9762\u7684\u534a\u5e73\u9762\u4ea4\u548c\u5355\u8c03\u6808\u6211\u90fd\u6ca1\u6709\u60f3\u5230\uff08\u867d\u7136\u6211\u597d\u50cf\u90fd\u4f1a\uff09\uff0c\u4f46\u662f\u89c2\u5bdf\u5230\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u662f\u4e00\u4e2a\u975e\u5e38\u5c34\u5c2c\u7684 $1e4$\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u8003\u8651 $n^2$ \u66b4\u529b\u89e3\u51b3\u6389\u3002  \n\n\u8fd9\u91cc\u60f3\u7ed9\u51fa $n^2$ \u66b4\u529b\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5206\u60c5\u51b5\u8003\u8651\uff0c\u5148\u8ba1\u7b97\u51fa\u5b83\u8d85\u8d8a\u521d\u59cb\u4f4d\u7f6e\u5728\u5b83\u524d\u9762\u7684\u6240\u6709\u8f66\u6240\u7528\u7684\u6700\u957f\u65f6\u95f4 $T_1$\uff0c\u7136\u540e\u6211\u4eec\u5224\u65ad\u5b83\u540e\u9762\u7684\u8f66\u8d85\u8d8a\u5b83\u7684\u6700\u77ed\u65f6\u95f4 $T_2$\uff0c\u5f88\u663e\u7136\u5427\uff0c\u53ea\u6709\u5f53 $T_1 >= T_2$ \u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u8f66\u662f\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684\uff0c\u6211\u4eec\u628a\u5b83\u52a0\u5165\u5230\u7b54\u6848\u91cc\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002 \n\n\u4f46\u662f $1e4 * 1e4$ \u7684\u590d\u6742\u5ea6\u518d\u52a0\u4e0a\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e5f\u5c31\u662fluogu\u8fd9\u79cd\u6bd4\u8f83\u5feb\u7684\u8bc4\u6d4b\u673a\u53ef\u4ee5\u8fc7\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u518d\u4f18\u5316\u4e00\u4e0b\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u7528\u6bcf\u6b21\u8ba1\u7b97\u53ea\u5728\u8fd9\u4e2a\u8f66\u524d\u9762\u7684\u8f66\uff0c\u800c\u4e0d\u7528\u53bb\u8ba1\u7b97\u5b83\u540e\u9762\u7684\u8f66\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u88ab\u4f18\u5316\u4e86\u4e00\u500d\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002 \n\n\u7136\u540e\u5148\u7ed9\u51fa\u4ee3\u7801\uff1a  \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e4 + 5;\ninline int read(int s = 0, char ch = getchar()) {\n\twhile(!isdigit(ch)) { ch = getchar(); }\n\twhile(isdigit(ch)) { s = s*10 + ch - '0', ch = getchar(); }\n\treturn s;\n}\nstruct node { double d, v, ti; int id; } a[N];\ninline bool cmp(node a, node b) { return a.d > b.d; }\nint n, vis[N], tot;\nint main() {\n\tn = read(); double mx = 0;\n\tfor(register int i = 1; i <= n; ++i) a[i].d = read(), a[i].id = i, mx = max(mx, a[i].d);\n\tfor(register int i = 1; i <= n; ++i) a[i].v = read();\n\tsort(a + 1, a + n + 1, cmp);\n\tfor(register int i = 1; i <= n; ++i) {\n\t\tfor(register int j = 1; j < i; ++j) {\n\t\t\tif(a[j].v >= a[i].v) { \n\t\t\t\tif(a[j].v == a[i].v && a[i].d == a[j].d) continue;\n\t\t\t\tif(a[i].d == mx && a[i].d == a[j].d) continue;\n\t\t\t\tvis[a[i].id] = 1, a[i].ti = 99999999999999; \n\t\t\t}\n\t\t\telse {\n\t\t\t\tdouble now = (a[j].d - a[i].d) / (a[i].v - a[j].v);\n\t\t\t\ta[i].ti = max(a[i].ti, now);\n\t\t\t\tif(now < a[j].ti) { vis[a[j].id] = 1; } \n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 1; i <= n; ++i) \n\t\tif(!vis[i]) ++tot;\n\tprintf(\"%d\\n\", tot);\n\tfor(register int i = 1; i <= n; ++i) \n\t\tif(!vis[i]) printf(\"%d \", i);\n\treturn 0;\n}\n```  \n\n\u867d\u7136\u7528\u66b4\u529b\u5199\u8fc7\u4e00\u9053\u9898\u611f\u89c9\u786e\u5b9e\u5f88\u723d\uff0c\u4f46\u662f\u6211\u4eec\u81f3\u5c11\u4e5f\u8981\u5b66\u4f1a\u6b63\u89e3\u7684\u601d\u8def\u3002\n\n\u5176\u5b9e\u4e0a\u9762\u7684\u66b4\u529b\u5c31\u76f8\u5f53\u4e8e $n^2$ \u6c42\u534a\u5e73\u9762\u4ea4\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a \u65f6\u95f4\u2014\u4f4d\u79fb \u7684\u51fd\u6570\u56fe\u50cf\uff0c\u53d1\u73b0\u53ea\u6709\u5728\u67d0\u4e00\u4e2a\u65f6\u523b\u5728\u6700\u4e0a\u9762\u7684\u8f66\u662f\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u534a\u5e73\u9762\u4ea4\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\uff08\u5176\u5b9e\u5173\u952e\u5728\u4e8e\u6b63\u786e\u7684\u627e\u5230\u6a2a\u7eb5\u5750\u6807\u7684\u610f\u4e49\uff09\u3002 \n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u88ab\u4f60\u6109\u5feb\u7684\u7528 $n^2$ \u66b4\u529b\u6c34\u8fc7\u4e86\u3002 ",
        "postTime": 1609809573,
        "uid": 330886,
        "name": "longdie",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "\u8fd9 1e9 \u7684\u503c\u57df\u771f\u7684\u641e\u70b8\u6211\u4e86\uff08\uff08\uff08\n\n## \u89e3\u6790\n\n\u8bbe $x$ \u4e3a\u6bd4\u8d5b\u5f00\u59cb\u7684\u65f6\u95f4\uff0c\u53ef\u4ee5\u7528\u4e00\u6761\u5e73\u9762\u76f4\u7ebf\u8868\u793a\u8d5b\u8f66\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u53ea\u6709\u5728**\u7b2c\u4e00\u8c61\u9650**\u4e2d\u66fe\u6709\u7684\u4e00\u6bb5\u7ebf\u6bb5\uff08\u70b9\u4e5f\u7b97\uff09\u5728 \u201c\u6700\u4e0a\u9762\u201d \u7684\u76f4\u7ebf\u624d\u6709\u53ef\u80fd\u62ff\u5956\uff08\u5982\u679c\u6709\u591a\u6761\u76f4\u7ebf\u7684\u7ebf\u6bb5**\u91cd\u53e0**\uff0c\u5168\u90fd\u7b97\u505a\u7b54\u6848\uff09\uff0c\u4f5c\u4e00\u4e0b\u56fe\uff1a\n\n![\u8d5b\u8f66](https://cdn.luogu.com.cn/upload/image_hosting/s3wr7w5i.png)\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f88\u50cf\u6c42\u4e00\u4e2a\u534a\u5e73\u9762\u4ea4\uff08~~\u786e\u5207\u7684\u5b9a\u4e49\u6211\u4e5f\u4e0d\u77e5...~~ \u8bdd\u8bf4\u597d\u591a\u534a\u5e73\u9762\u4ea4\u9898\u76ee\u90fd\u662f\u770b\u8d77\u6765\u5f62\u4f3c\u5c31\u53ef\u4ee5\u505a\u4e86\uff09\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u62c9\u8fdb\u53bb\u8dd1\u4e00\u8dd1\u5de6\u534a\u5e73\u9762\u4ea4\uff0c\u6700\u540e\u7edf\u8ba1\u5269\u4e0b\u7684\u76f4\u7ebf\uff1b\u7b2c\u4e00\u8c61\u9650\u7684\u9650\u5236\u53ef\u4ee5\u6254\u51e0\u6761\u76f4\u7ebf**\u5145\u5f53\u5750\u6807\u8f74**\u8fdb\u53bb\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6240\u6709\u76f4\u7ebf\u7684\u6781\u89d2\u90fd\u81f3\u5c11\u5927\u4e8e\u7b49\u4e8e $x$ \u8f74\u7684\u76f4\u7ebf\uff0c\u56e0\u6b64\u53ea\u9700\u52a0 $y$ \u8f74\u7684\u76f4\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u53e6\u5916\u9898\u76ee\u4e0d\u4fdd\u8bc1\u76f4\u7ebf\u4e0d\u91cd\u590d\uff0c\u505a\u4e4b\u524d\u9700\u8981\u5224\u65ad\u8bb0\u5f55\u4e0b\uff08\u8fd9\u91cc\u6211\u7528\u4e86 `stl::map`\uff09\u3002\n\n\u6700\u540e\u5c31\u662f\u6700\u5927\u7684\u7cbe\u5ea6\u95ee\u9898\u4e86\u3002\u770b\u4e00\u4e0b\u9898\u76ee\u7684\u503c\u57df\uff0c\u53d1\u73b0\u8fbe\u5230\u4e86**\u53ef\u6015\u7684** 1e9\uff0c\u8fd9\u610f\u5473\u7740\u5355\u5355\u662f\u6c42\u4ea4\u70b9\u5750\u6807\u5c31\u6709\u53ef\u80fd**\u8de8\u5ea6\u8d85\u8fc7 1e18**\uff1b\u52a0\u4e0a\u5b9e\u73b0\u65f6\u751a\u81f3\u9700\u8981\u5224\u65ad\u5224\u65ad\u4e24\u4e2a\u70b9\u5750\u6807\u662f\u5426**\u76f8\u7b49**\uff08\u4e0d\u5355\u5355\u662f\u5224\u5927\u5c0f\u5173\u7cfb\uff09\uff0c\u56e0\u6b64 `eps` \uff08~~\u5e94\u8be5\u90fd\u53eb\u540c\u4e00\u4e2a\u540d\u5b57\u5427...~~ \u6700\u5c0f\u7cbe\u5ea6\u5dee\uff09\u9700\u8981\u5f00\u5f97\u975e\u5e38\u5c0f\uff0c\u4f8b\u5982 1e-18\u3002\n\n\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u73b0\u65b9\u5f0f\u7684\u5dee\u5f02\uff0c\u8fd9\u6837\u4e5f\u8fd8\u662f\u6709\u53ef\u80fd\u88ab\u5361\uff08\u6bd4\u5982\u6211\uff09\uff1b\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u628a `eps` \u76f4\u63a5\u5e72\u8106\u5f00\u5230 $0$\u3002\u4f46\u6ce8\u610f**\u6392\u5e8f\u76f4\u7ebf\u65f6\u7684\u6781\u89d2\u7684 \u201c\u7cbe\u5ea6\u8de8\u5ea6\u201d \u662f\u6bd4 \u5224\u65ad\u4ea4\u70b9\u662f\u5426\u76f8\u540c\u7684 \u201c\u7cbe\u5ea6\u8de8\u5ea6\u201d \u8981\u5c0f\u7684**\u3002\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u7528\u89e3\u6790\u5f0f\u5bf9\u76f4\u7ebf\u6392\u5e8f\uff0c\u6216\u8005\u9009\u7528\u66f4\u5bbd\u677e\u7684 `eps`\u3002\uff08\u5982\u679c\u7a0b\u5e8f\u67d0\u51e0\u4e2a\u90e8\u5206\u7684 \u201c\u7cbe\u5ea6\u8de8\u5ea6\u201d \u76f8\u5dee\u975e\u5e38\u5927\u7684\u8bdd\uff0c\u4e00\u4e2a\u529e\u6cd5\u662f\u53ef\u4ee5\u8003\u8651\u9009\u7528\u6ca1\u6709\u7cbe\u5ea6\u8bef\u5dee\u7684\u65b9\u6cd5\u5904\u7406\u4e00\u90e8\u5206\uff0c\u53e6\u4e00\u4e2a\u529e\u6cd5\u5c31\u662f\u9009\u7528\u4e0d\u540c\u7684 `eps`\uff09\n\n## CODE\n\n\uff08\u5173\u4e8e\u7cbe\u5ea6\u7684\u51e0\u5904\u95ee\u9898\u6211\u90fd\u7528\u6ce8\u8bd1\u6807\u8bc6\u4e86\uff09\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <map>\n#include <vector>\n#include <cstring>\nusing std::sort;\nusing std::pair;\nusing std::map;\nusing std::vector;\nusing std::max;\ntypedef pair<int, int> pad;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double pi =acos(-1);\ndouble eps =0;\n\nstruct vect{\n\tdouble x, y;\n\tvect(){}\n\tvect(double xx, double yy):x(xx), y(yy){}\n\tvect operator + (vect v){ return vect(x+v.x, y+v.y); }\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y); }\n\tvect operator * (double mu){ return vect(mu*x, mu*y); }\n\tdouble operator / (vect v){ return x*v.y-y*v.x; }/*\u53c9\u79ef*/\n};\n\nstruct line{\n\tvect u, v;\n\tdouble angle;\n\tint id, k, vvv;\n\tline(){}\n\tline(vect uu, vect vv, int idd):u(uu), v(vv), id(idd){ angle =atan2(vv.y-uu.y, vv.x-uu.x); }\n};\n\ninline bool gtr(double a, double b){ return (a-b > eps); }\n\n/*\u6ce8\u610f\u8fd9\u4e24\u79cd\u5224\u65ad\u76f8\u7b49\u7684\u529e\u6cd5\u662f\u4e0d\u540c\u7684\uff1a\u6ce8\u8bd1\u7684\u90a3\u79cd\u672c\u8d28\u662f\u5728\u6bd4\u8f83\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8fc7\u4e8e\u4e25\u683c*/\ninline bool eq(double a, double b){ return (a-b < eps && a-b > -eps); }\n\n//inline bool eq(double a, double b){ return a == b; }\n\ninline bool onright(line f, vect w){ return (gtr((w-f.u)/(f.v-f.u), 0)); }\n\nvect getIntersection(line f, line g){\n\tdouble w =((g.u-f.u)/(f.u-f.v))/((f.u-f.v)/(g.u-g.v));\n\treturn g.u+(g.u-g.v)*w;\n}\n\n//int cmp(line A, line B){\n//\tif(eq(A.angle, B.angle)) return onright(B, A.u);/*\u6709\u5411\u76f4\u7ebf\u6700\u5de6\u7684\u5728\u6700\u540e\u9762\uff0c\u4f1a\u88ab\u4fdd\u7559*/\n//\telse return (gtr(B.angle, A.angle));\n//}\n\n/*\u6539\u7528\u89e3\u6790\u5f0f\u6bd4\u8f83\uff0c\u5b9e\u73b0\u7684\u529f\u80fd\u548c\u4e0a\u9762\u6ce8\u8bd1\u7684\u90a3\u4e2a\u4e00\u81f4*/\nbool cmp(line A, line B){\n\tif(A.vvv != B.vvv) return A.vvv < B.vvv;\n\telse return A.k < B.k;\n}\n\n/*\u7531\u4e8e\u8fd9\u4e9b\u76f4\u7ebf\u7684\u6781\u89d2\u90fd\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u4e14\u4fdd\u8bc1\u6709\u4ea4\uff0c\u56e0\u6b64\u4e00\u4e9b\u4ee3\u7801\u5757\u53ef\u4ee5\u7701\u7565*/\ninline pad getHPI(line ls[], int totl, line hull[]){\n\tsort(ls, ls+totl, cmp);\n\tint l =0, r =0;\n\tfor(int i =0; i < totl; ++i){\n\t\twhile(i < totl-1 && eq(ls[i].angle, ls[i+1].angle)) ++i;\n\t\twhile(r-l > 1 && onright(ls[i], getIntersection(hull[r-1], hull[r-2]))) --r;\n//\t\tif(r > 0 && eq(ls[i].angle-hull[r-1].angle, pi)) return pad(0, 0);/*\u5224\u65b9\u5411\u76f8\u53cd\u7684\u5e73\u884c*/\n\t\thull[r++] =ls[i];\n\t}\n//\twhile(r-l > 1){\n//\t\tif(onright(hull[r-1], getIntersection(hull[l], hull[l+1]))) ++l;\n//\t\telse if(onright(hull[l], getIntersection(hull[r-1], hull[r-2]))) --r;\n//\t\telse break;\n//\t}\n//\tif(r-l < 3) return pad(0, 0);/*\u65e0\u4ea4*/ \n//\telse return pad(l, r);\n\treturn pad(l, r);\n}\n\n/*------------------------------Main------------------------------*/\n\nconst int MAXN =1e4+50;\n\nline ls[MAXN], hull[MAXN];\nint k[MAXN], v[MAXN], ans[MAXN], tota, tot, id[MAXN];\nbool isans[MAXN], unused[MAXN];\nvector<int> car[MAXN];\nmap<pad, int> Cars;\n\ninline int read(){\n\tint x =0; bool f =0; char c =getchar();\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nint main(){\n\tint n =read();\n\tfor(int i =0; i < n; ++i) k[i] =read();\n\tfor(int i =0; i < n; ++i) v[i] =read();\n\tfor(int i =0; i < n; ++i){\n\t\t/*\u7528 map \u5224\u91cd*/\n\t\tif(Cars.count(pad(k[i], v[i]))){\n\t\t\tmap<pad, int>::iterator it =Cars.find(pad(k[i], v[i]));\n\t\t\tcar[it->second].push_back(i);/*\u628a\u76f8\u540c\u7684\u76f4\u7ebf\u585e\u5230\u540c\u4e00\u4e2a\u5e8f\u53f7\u7684\u7a7a\u95f4\u91cc*/\n\t\t\tunused[i] =1;\n\t\t}\n\t\telse{\n\t\t\tCars.insert(pair<pad, int>(pad(k[i], v[i]), tot));\n\t\t\tcar[tot].push_back(i);\n\t\t\tid[i] =tot;/*\u91cd\u5206\u914d\u5e8f\u53f7*/\n\t\t\ttot++;\n\t\t}\n\t}\n\tint totl =0;\n\tfor(int i =0; i < n; ++i)\n\t\tif(!unused[i])\n\t\t\tls[totl++] =line(vect(0, k[i]), vect(1, v[i]+k[i]), id[i]),\n\t\t\tls[totl-1].k =k[i], ls[totl-1].vvv =v[i];\n\tls[totl++] =line(vect(0, 1), vect(0, 0), -1),\n\tls[totl-1].k =0, ls[totl-1].vvv =0;\n\tpad h =getHPI(ls, totl, hull);\n\tfor(int i =h.first; i < h.second; ++i) if(hull[i].id != -1) isans[hull[i].id] =1;\n\tfor(int i =0; i < tot; ++i){\n\t\tif(isans[i])\n\t\t\tfor(int j =0; j < (int)car[i].size(); ++j) ans[tota++] =car[i][j]+1;\n\t}\n\tsort(ans, ans+tota);\n\tprintf(\"%d\\n\", tota);\n\tfor(int i =0; i < tota; ++i) printf(\"%d \", ans[i]);\n}\n```\n",
        "postTime": 1592874570,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "### \u770b\u6807\u7b7e\u53ef\u4ee5\u5f97\u77e5\u8fd9\u662f\u4e00\u9053\u534a\u5e73\u9762\u4ea4\u7684\u9898\u3002\n\n\n------------\n   \u6211\u4eec\u5148\u8003\u8651\u5982\u4f55\u5efa\u6a21\u3002\n  \n  \u4ee5\u65f6\u95f4 $t$ \u4e3a\u6a2a\u8f74\uff0c\u8ddd\u79bb $s$ \u4e3a\u7eb5\u8f74\uff0c\u8bbe\u67d0\u4eba\u7684\u521d\u59cb\u4f4d\u7f6e\u5728 $A$ \u70b9\uff0c\u4ece $A$ \u70b9\u51fa\u53d1\u753b\u4e00\u6761\u76f4\u7ebf\u3002\u4ed6\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5 $\u0394t$ \u5185\u7ecf\u8fc7\u8ddd\u79bb $\u0394s$ \uff0c\u4e24\u8005\u7684\u6bd4\u503c\u662f\u76f4\u7ebf\u7684\u659c\u7387\uff0c\u5176\u7269\u7406\u610f\u4e49\u6b63\u597d\u662f\u901f\u5ea6\uff0c\u4ed6\u5728\u67d0\u65f6\u523b $t$ \u7684\u4f4d\u7f6e\u5c31\u662f\u4ed6\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\u7684\u7eb5\u5750\u6807 $s$ \u3002\u8fd9\u6761\u76f4\u7ebf\u4ee3\u8868\u4e86\u4ed6\u7684\u8fd0\u52a8\u8f68\u8ff9\u3002\u8fd0\u52a8\u8f68\u8ff9\u59cb\u7ec8\u4f4d\u4e8e\u7b2c\u4e00\u8c61\u9650\u3002\n  \n\u56fe $(a)$ \u4e2d\u7684\u4e24\u6761\u76f4\u7ebf\u662f\u4e24\u4e2a\u4eba $A$ \u548c $B$ \u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u4ea4\u53c9\u70b9 $k$ \u662f $b$ \u8ffd\u4e0a $A$ \u7684\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zuu8zhox.png)\n\n\u5982\u679c\u6709 $n$ \u4e2a\u4eba\uff0c\u90a3\u4e48\u5c31\u6709 $n$ \u6761\u76f4\u7ebf\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u89c1\u56fe $(b)$ \u3002\u76f8\u4ea4\u7684\u70b9\u5c31\u662f\u8ffd\u4e0a\u7684\u70b9\uff0c\u4f46\u8ffd\u4e0a\u540e\u4e0d\u4e00\u5b9a\u6392\u7b2c\u4e00\u3002\u53ea\u6709\u51f8\u9762\u4e0a\u7684\u70b9\u624d\u662f\u9898\u76ee\u8981\u6c42\u7684\u6392\u540d\u7b2c\u4e00\u7684\u70b9\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u8fd9\u4e9b\u76f4\u7ebf\u7684\u534a\u5e73\u9762\u4ea4\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u591a\u8fb9\u5f62\uff0c\u53ef\u4ee5\u52a0\u4e0a\u4e24\u4e2a\u534a\u5e73\u9762  $E$ \u548c $F$ \uff0c\u5f62\u6210\u95ed\u5408\u7684\u51f8\u591a\u8fb9\u5f62\uff0c\u5176\u4e2d $E$ \u662f $y$ \u503c\u65e0\u7a77\u5927\u7684\u5411\u5de6\u7684\u6c34\u5e73\u7ebf\uff0c $F$ \u662f\u53cd\u5411\u7684 $y$ \u8f74\uff0c\u56fe\u4e2d\u84dd\u8272\u7684\u90e8\u5206\u662f\u534a\u5e73\u9762\u4ea4\u5f62\u6210\u7684\u51f8\u591a\u8fb9\u5f62\uff0c\u51f8\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u6570\u91cf\u53bb\u6389\u4e24\u4e2a\u70b9\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\uff0c\u5c31\u662f\u9898\u76ee\u6c42\u7684\u83b7\u5956\u8d5b\u8f66\u4e2a\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hpoqi4t0.png)\n\n\u90e8\u5206\u4ee3\u7801:\n```\nvector<Point> HPI(vector<Line>L){//\u6c42\u534a\u5e73\u9762\u4ea4\uff0c\u8fd4\u56de\u51f8\u591a\u8fb9\u5f62\n\tint n=L.size();\n\tsort(L.begin(),L.end());//\u5c06\u6240\u6709\u534a\u5e73\u9762\u6309\u7167\u6781\u89d2\u6392\u5e8f\n\tint first,last;//\u6307\u5411\u53cc\u7aef\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\tvector<Point> p(n);//\u4e24\u4e2a\u76f8\u90bb\u534a\u5e73\u9762\u7684\u4ea4\u70b9\n\tvector<Line> q(n);//\u53cc\u7aef\u961f\u5217\n\tvector<Point> ans;//\u534a\u5e73\u9762\u4ea4\u5f62\u6210\u7684\u51f8\u5305\n\tq[first=last=0]=L[0];\n\tfor(int i=1;i<n;i++){\n\t\twhile(first<last&&!OnLeft(L[i],p[last-1])) last--;//\u60c5\u51b5\u4e00\uff1a\u5220\u9664\u5c3e\u90e8\u7684\u534a\u5e73\u9762\n\t\twhile(first<last&&!OnLeft(L[i],p[first])) first++;//\u60c5\u51b5\u4e8c\uff1a\u5220\u9664\u9996\u90e8\u7684\u534a\u5e73\u9762\n\t\tq[++last]=L[i];//\u5c06\u5f53\u524d\u534a\u5e73\u9762\u52a0\u5165\u53cc\u7aef\u961f\u5217\u7684\u5c3e\u90e8\n\t\tif(fabs(Cross(q[last].v,q[last-1].v))<eps){\n\t\t\tlast--;\n\t\t\tif(OnLeft(q[last],L[i].p)) q[last]=L[i];\n\t\t}//\u6781\u89d2\u76f8\u540c\u7684\u4fdd\u7559\u5de6\u8fb9\uff08\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff09\n\t\tif(first<last) p[last-1]=Cross_point(q[last-1],q[last]);//\u8ba1\u7b97\u961f\u5217\u5c3e\u90e8\u7684\u534a\u5e73\u9762\u4ea4\u70b9\n\t} \n\twhile(first<last&&!OnLeft(q[first],p[last-1])) last--;\n\tif(last-first<=1) return ans;//\u7a7a\u96c6\n\tp[last]=Cross_point(q[last],q[first]);//\u8ba1\u7b97\u961f\u5217\u9996\u5c3e\u90e8\u7684\u534a\u5e73\u9762\u4ea4\u70b9\n\tfor(int i=first;i<=last;i++) ans.push_back(p[i]);//\u590d\u5236\n\treturn ans;//\u8fd4\u56de\u51f8\u591a\u8fb9\u5f62\n}\n```\n\n\n\n------------\n\u4f46\u662f\uff0c\u771f\u7684\u8981\u8fd9\u4e48\u9ebb\u70e6\u5417\uff1f\n\n#### \u6211\u4eec\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c $1e4$ \u7684\u6570\u636e\u5b8c\u5168\u53ef\u4ee5\u8003\u8651\u66b4\u529b\u3002\n\n\u5c06\u521d\u59cb\u4f4d\u7f6e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7528\u7ed3\u6784\u4f53\u5b58\u88ab\u8ffd\u4e0a\u7684\u65f6\u95f4\uff0c\u8003\u8651\u5728\u540e\u9762\u7684\u8d5b\u8f66\u6709\u6ca1\u6709\u53ef\u80fd\u8ffd\u4e0a\u4ed6\u5373\u53ef\uff0c\u5982\u679c\u6709\uff0c\u5c06\u8fd9\u90e8\u8f66\u7684 $vis$ \u6570\u7ec4\u6807\u8bb0\u4e3a $true$ \uff0c\u6700\u540e\u7edf\u8ba1 &true& \u7684\u4e2a\u6570\u5e76\u8f93\u51fa\u5373\u53ef\u3002\uff08\u8bb0\u5f97\u7a0d\u5fae\u5361\u4e0b\u5e38\uff0c\u52a0\u4e2a\u5feb\u8bfb\u4ec0\u4e48\u7684\u3002\uff09\n\n### The end~\n",
        "postTime": 1650265294,
        "uid": 467203,
        "name": "Kaenbyou_Rin",
        "ccfLevel": 0,
        "title": "P3256 [JLOI2013]\u8d5b\u8f66 \u9898\u89e3"
    },
    {
        "content": "### \u534a\u5e73\u9762\u4ea4\n\n\u6211\u4eec\u6839\u636e\u6bcf\u4e2a\u4eba\u7684\u901f\u5ea6\u548c\u8d77\u59cb\u4f4d\u7f6e\uff0c\u80fd\u591f\u753b\u51fa\u5176 $S \\text{-}t$ \u56fe\u8c61\uff0c\u5bb9\u6613\u60f3\u5230\uff0c\u82e5\u5c06\u6240\u6709\u76f4\u7ebf\u653e\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u8f6e\u5ed3\u4e2d\u6709\u54ea\u4e9b\u76f4\u7ebf\uff0c\u8fd9\u4e9b\u76f4\u7ebf\u6240\u5bf9\u5e94\u7684\u4eba\u5c31\u80fd\u6210\u4e3a\u6700\u7ec8\u7b54\u6848\u3002\u5728\u8349\u7a3f\u7eb8\u4e0a\u753b\u4e00\u4e0b\u5c31\u7406\u89e3\u4e86\u3002\n\n\u8fd9\u4e9b\u76f4\u7ebf\u52a0\u4e0a $x$ \u8f74\u548c $y$ \u8f74\uff0c\u6c42\u4e00\u904d\u534a\u5e73\u9762\u4ea4\uff0c\u7136\u540e\u5904\u7406\u51fa\u6240\u6709\u5728\u534a\u5e73\u9762\u4ea4\u8f6e\u5ed3\u4e0a\u7684\u76f4\u7ebf\uff0c\u8fd9\u4e9b\u76f4\u7ebf\u5bf9\u5e94\u7684\u4eba\u5c31\u662f\u7b54\u6848\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define LD long double\n#define x first\n#define y second\n\nusing namespace std;\n\ntypedef pair<int,int> PII;\ntypedef pair<LD,LD> PDD;//\u70b9\nconst int amou=1e4+90;\nconst LD eps=1e-18;\n\nstruct Line{\n\tPDD st,ed;//\u8d77\u70b9\u548c\u7ec8\u70b9\n\tvector<int> id;//\u8fd9\u6761\u76f4\u7ebf\u6240\u5bf9\u5e94\u7684\u6240\u6709\u8fd0\u52a8\u5458\n}line[amou];\nint cnt;//\u76f4\u7ebf\u6761\u6570\nint q[amou],ans[amou],ki[amou],vi[amou];\n\nPDD operator-(PDD a,PDD b){\n\treturn {a.x-b.x,a.y-b.y};\n}\n\nint dcmp(LD a,LD b){\n\tif(fabs(a-b)<eps) return 0;\n\tif(a<b) return -1;\n\treturn 1;\n}\n\nLD get_angle(Line a){//\u6c42\u89d2\u5ea6\n\treturn atan2(a.ed.y-a.st.y,a.ed.x-a.st.x);\n}\n\nLD cross(PDD a,PDD b){//\u53c9\u4e58\uff0c\u5373\u6c42\u9762\u79ef\n\treturn a.x*b.y-a.y*b.x;\n}\n\nLD area(PDD a,PDD b,PDD c){//\u9762\u79ef\n\treturn cross(b-a,c-a);\n}\n\nbool cmp(Line a,Line b){//\u5982\u679c\u89d2\u5ea6\u4e00\u6837\uff0c\u4fdd\u7559\u5de6\u8fb9\u90a3\u6761\u3002\u6309\u89d2\u5ea6\u5927\u5c0f\u5c06\u76f4\u7ebf\u6392\u5e8f\n\tLD A=get_angle(a),B=get_angle(b);\n\tif(!dcmp(A,B)) return area(a.st,a.ed,b.ed)<0;\n\treturn A<B;\n}\n\nPDD get_line_intersection_point(PDD s1,PDD t1,PDD s2,PDD t2){//\u6c42\u4e24\u76f4\u7ebf\u4ea4\u70b9\n\tPDD u=s1-s2;\n\tLD t=cross(t2,u)/cross(t1,t2);\n\treturn {s1.x+t1.x*t,s1.y+t1.y*t};\n}\n\nPDD get_line_intersection_line(Line a,Line b){//\u6c42\u4e24\u76f4\u7ebf\u4ea4\u70b9\n\treturn get_line_intersection_point(a.st,a.ed-a.st,b.st,b.ed-b.st);\n}\n\nbool on_right(Line a,Line b,Line c){//a\u662f\u5426\u5728bc\u4ea4\u70b9\u7684\u53f3\u8fb9\n\tPDD p=get_line_intersection_line(b,c);\n\treturn area(a.st,a.ed,p)<0;\n}\n\nvoid half_plane_intersection(){\n\tsort(line+1,line+cnt+1,cmp);\n\tint head=0,tail=-1;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tif(i>1&&!dcmp(get_angle(line[i]),get_angle(line[i-1]))) continue;//\u5982\u679c\u89d2\u5ea6\u4e00\u6837\u5c31\u4e0d\u7528\u5904\u7406\u4e86\n\t\twhile(head+1<=tail&&on_right(line[i],line[q[tail]],line[q[tail-1]])) tail--;//\u5982\u679c\u4ea4\u70b9\u5728i\u53f3\u8fb9\uff0c\u90a3\u8be5\u88ab\u820d\u53bb\uff0c\u5efa\u8bae\u753b\u56fe\n\t\twhile(head+1<=tail&&on_right(line[i],line[q[head]],line[q[head+1]])) head++;\n\t\tq[++tail]=i;\n\t}\n\twhile(head+1<=tail&&on_right(line[q[head]],line[q[tail]],line[q[tail-1]])) tail--;//\u4e00\u5b9a\u66f4\u65b0\u961f\u5934\u961f\u5c3e\n\twhile(head+1<=tail&&on_right(line[q[tail]],line[q[head]],line[q[head+1]])) head++;\n\n\tint t=0;\n\tfor(int i=head;i<=tail;i++)\n\t\tfor(int j=0;j<line[q[i]].id.size();j++)\n\t\t\tans[++t]=line[q[i]].id[j];\n\tsort(ans+1,ans+t+1);\n\tprintf(\"%d\\n\",t);\n\tfor(int i=1;i<=t;i++) printf(\"%d \",ans[i]);\n}\n\nint main(){\n\tmap<PII,vector<int> > tp;\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&ki[i]);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&vi[i]);\n\tfor(int i=1;i<=n;i++)\n\t\ttp[{ki[i],vi[i]}].push_back(i);//\u5c06\u91cd\u5408\u7684\u90fd\u52a0\u5230\u90a3\u6761\u76f4\u7ebf\u6240\u5bf9\u5e94\u7684\u4eba\u7684\u96c6\u5408\u91cc\n\t\t\n\tline[++cnt]={{0,10000},{0,0}};//\u56e0\u4e3a\u662f\u4fdd\u7559\u5de6\u8fb9\u90e8\u5206\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5728\u7b2c\u4e00\u8c61\u9650\uff0c\u52a0\u4e00\u6761\u8fd9\u6837\u7684\u76f4\u7ebf\n\tline[++cnt]={{0,0},{10000,0}};//\u540c\u4e0a\n\tfor(map<PII,vector<int> >::iterator it=tp.begin();it!=tp.end();it++)\n\t{\n\t\tPII temp=it->first;\n\t\tvector<int> V=it->second;\n\t\tline[++cnt]={{0,temp.x},{1,temp.x+temp.y},V};//\u53ef\u4ee5\u4efb\u53d6\u8fd9\u6761\u76f4\u7ebf\u7684\u4e24\u4e2a\u70b9\n\t}\n\n\thalf_plane_intersection();\n\treturn 0;\n}\n```\n",
        "postTime": 1618190803,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "### \u9898\u610f\u63cf\u8ff0\uff1a\n\n\u6709 $n$ \u8f86\u6c7d\u8f66\uff0c\u6bcf\u8f86\u6c7d\u8f66\u6709\u521d\u59cb\u4f4d\u7f6e $k$ \u548c\u901f\u5ea6 $v$ \u3002\u95ee\u4f60\u6709\u591a\u5c11\u8f66\u80fd\u5728\u67d0\u4e00\u65f6\u523b\u8dd1\u5728\u6240\u6709\u8f66\u7684\u524d\u9762\u3002\n\n### solution\n\n\u6211\u4eec\u628a\u6bcf\u8f86\u8f66\u7684\u4f4d\u7f6e\u5173\u4e8e\u65f6\u95f4\u7684\u51fd\u6570\u76f4\u7ebf\u753b\u51fa\u6765\uff0c\u53d1\u73b0\u4e00\u8f86\u8f66\u67d0\u4e00\u65f6\u523b\u80fd\u8dd1\u5728\u6240\u6709\u8f66\u7684\u524d\u9762\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ed6\u7684\u51fd\u6570\u76f4\u7ebf\u662f\u8fd9\u51e0\u4e2a\u4e00\u6b21\u51fd\u6570\u4ea4\u533a\u57df\u7684\u4e00\u6761\u8fb9\u3002\n\n\u5177\u4f53\u7684\u8bc1\u660e\uff0c\u6211\u4e0d\u592a\u4f1a\uff0c\u53cd\u6b63\u7ed3\u8bba\u731c\u5bf9\u5c31ok\u4e86\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a\u6bcf\u6761\u76f4\u7ebf\u7684\u5b9a\u4e49\u57df\u662f $(0,\\infty)$, \u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u5728\u7b2c\u4e00\u8c61\u9650\u5185\u505a\u534a\u5e73\u9762\u4ea4\uff0c\u4e00\u5f00\u59cb\u628a\u56db\u6761\u8fb9\u754c\u76f4\u7ebf\u52a0\u8fdb\u53bb\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5957\u534a\u5e73\u9762\u4ea4\u7684\u677f\u5b50\u4e86\u3002\n\n\u5c31\u8fd9\u6837\u4e86\uff0c\u4e00\u9053\u7d2b\u9898\u5c31\u88ab\u6211\u4eec\u6c34\u8fc7\u53bb\u4e86\uff1f\uff1f\uff1f\n\n\u4f60\u592a naive \u4e86\uff01\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u7684\u503c\u57df\u4e3a $(0,1e9)$ \u8fd9\u610f\u5473\u7740\u6211\u4eec\u6c42\u76f4\u7ebf\u4ea4\u70b9\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u7206 $10^{18}$, \u6240\u4ee5 $lim$ \u7684\u4e0a\u9650\u8981\u8bbe\u5927\u4e00\u70b9\u3002\n\n\u7b2c\u4e8c\u70b9\uff1a\u4e3a\u4e86\u907f\u514d\u88ab\u5361\u7cbe\u5ea6\uff0c\u6211\u4eec\u7684 $eps$ \u8981\u8bbe\u7684\u5c3d\u91cf\u5c0f\u4e00\u4e9b\uff0c\u5c3d\u91cf\u4f7f\u7528 $long$ $double$\u3002\n\n\u7b2c\u4e09\u70b9\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff1a\u6709\u7684\u8f66\u7684\u51fd\u6570\u76f4\u7ebf\u53ef\u80fd\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u6211\u4eec\u505a\u534a\u5e73\u9762\u4ea4\u53ea\u4f1a\u53d6\u4e00\u6761\u76f4\u7ebf\uff0c\u5bfc\u81f4\u6211\u4eec\u7684\u7b54\u6848\u51fa\u9519\uff08\u4e0d\u5c11\u540c\u5b66 WA 90 \u5206\u53ef\u80fd\u5c31\u662f\u8fd9\u4e2a\u539f\u56e0\uff09\u3002\n\n\u4f46\u597d\u5728\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u53ea\u6709 $1e4$, \u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5230\u6700\u540e\u5728\u626b\u4e00\u904d\uff0c\u770b\u6709\u6ca1\u6709\u5c11\u7b97\u7684\u3002\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4ec0\u4e48\u6ce8\u610f\u7684\u4e86\uff0c\u4fdd\u8bc1\u81ea\u5df1\u7684\u677f\u5b50\u6ca1\u95ee\u9898\u5c31\u884c\uff08\u81ea\u5df1\u4e00\u5f00\u59cb\u677f\u5b50\u5199\u9519\u4e86\uff0c\u4ea4\u4e86\u597d\u51e0\u6b21\u624d\u53d1\u73b0\uff0c\u6de6\uff09.\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n#define double long double\nconst int N = 1e5+10;\nconst long long lim = 1e18+10;//lim\u8bbe\u5927\u70b9\uff0ceps\u8bbe\u5c0f\u70b9\nconst double eps = 1e-18;\nint n,m,cnt,num,l,r,ans[N];\ndouble k[N],w[N];\nstruct point\n{\n\tdouble x,y;\n\tpoint(){}\n\tpoint(double a,double b){x = a, y = b;}\n}sta[N];\ntypedef point Vector;\nstruct line\n{\n\tint id;\n\tpoint x,y;\n\tdouble ang;\n\tline(){}\n\tline(point a,point b,int i)\n\t{\n\t\tx = a; y = b; id = i;\n\t\tang = atan2(b.x-a.x,b.y-a.y);\n\t}\n}q[N],L[N];\nint dcmp(double x)\n{\n\tif(fabs(x) < eps) return 0;\n\treturn x > 0 ? 1 : -1;\n}\npoint operator + (point a,point b){return point(a.x+b.x,a.y+b.y);}\npoint operator - (point a,point b){return point(a.x-b.x,a.y-b.y);}\npoint operator * (point a,double k){return point(a.x*k,a.y*k);}\ndouble Dot(point a,point b){return a.x*b.x+a.y*b.y;}\ndouble Cro(point a,point b){return a.x*b.y-a.y*b.x;}\ndouble dis(point a,point b){return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}\nbool OnRight(point p,line a){return dcmp(Cro(p-a.x,a.y-a.x)-eps) >= 0;}\npoint Root_LL(line a,line b)//\u4e24\u76f4\u7ebf\u7684\u4ea4\u70b9\n{\n\tVector v = a.y-a.x, u = b.y-b.x, w = a.x-b.x;\n\tdouble t = Cro(w,u)/Cro(u,v);\n\treturn a.x + v * t;\n}\nbool comp(line a,line b)\n{\n\tif(dcmp(a.ang-b.ang) == 0) return OnRight(b.x,a);\n\treturn a.ang < b.ang;\n}\nint HPI()//\u534a\u5e73\u9762\u4ea4\u677f\u5b50\n{\n\tl = 1, r = 1; q[1] = L[1];\n\tfor(int i = 2; i <= cnt; i++)\n\t{\n\t\tif(dcmp(L[i].ang-L[i-1].ang) == 0) continue;\n\t\twhile(l < r && OnRight(sta[r-1],L[i])) r--;\n\t\twhile(l < r && OnRight(sta[l],L[i])) l++;\n\t\tq[++r] = L[i];\n\t\tif(l < r) sta[r-1] = Root_LL(q[r],q[r-1]);\n\t}\n\twhile(l < r && OnRight(sta[r-1],q[l])) r--;\n\twhile(l < r && OnRight(sta[l],q[r])) l++;\n\tsta[r] = Root_LL(q[l],q[r]);\n\tif(r-l+1 == 2) return 0;\n\treturn r-l+1;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1; i <= n; i++) cin>>w[i];\n\tfor(int i = 1; i <= n; i++) cin>>k[i];\n\tpoint a = point(0,0); point b = point(lim,0);\n\tpoint c = point(lim,lim); point d = point(0,lim);\n\tL[++cnt] = line(a,b,0); L[++cnt] = line(b,c,0);//\u56db\u6761\u8fb9\u754c\u76f4\u7ebf\n\tL[++cnt] = line(c,d,0); L[++cnt] = line(d,a,0);\n\tfor(int i = 1; i <= n; i++) \n\t{\n\t\tpoint a = point(0,w[i]); point b = point(1,k[i]+w[i]); \n\t\tL[++cnt] = line(a,b,i);\n\t}\n\tsort(L+1,L+cnt+1,comp);\n\tm = HPI();\n\tfor(int i = 1; i <= m; i++)//\u6700\u540e\u626b\u4e00\u904d\uff0c\u770b\u6709\u6ca1\u6709\u6f0f\u7b97\u7684\n\t{\n\t\tfor(int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif(w[j] == w[q[i].id] && k[j] == k[q[i].id]) ans[++num] = j;\n\t\t}\n\t}\n\tsort(ans+1,ans+num+1);\n\tprintf(\"%d\\n\",num);\n\tfor(int i = 1; i <= num; i++) printf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1610886222,
        "uid": 248896,
        "name": "genshy",
        "ccfLevel": 4,
        "title": "P3256 [JLOI2013]\u8d5b\u8f66"
    },
    {
        "content": "**\u7c97\u4f53\u90e8\u5206\u662f\u9700\u8981\u6ce8\u610f\u7684\u5751\u70b9**\n\n\u8fd9\u4e00\u9898\u9664\u4e86\u534a\u5e73\u9762\u4ea4\uff0c\u8fd8\u6709\u4e00\u79cd\uff08\u66f4\u52a0\u66b4\u529b\uff09\u7684\u65b9\u6cd5\uff1a\u89e3\u4e0d\u7b49\u5f0f\u3002\n\n\u5047\u8bbe\u4e00\u8f86\u8f66\u521d\u59cb\u4f4d\u7f6e\u4e3a$a$\uff0c\u901f\u5ea6\u4e3a$v$\uff0c\u5219\u8fd9\u8f86\u8f66\u7b2c$k$\u65f6\u95f4\u6240\u5728\u7684\u4f4d\u7f6e\u4e3a$kv+a$\uff0c\u662f\u4e00\u4e2a\u6574\u5f0f\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u7528\u4e0d\u7b49\u5f0f\uff0c\u5224\u65ad\u67d0\u4e2a\u8f66\uff08$g_i$\uff09\u5728\u90a3\u4e2a\u65f6\u95f4\u6bb5\u7684\u4f4d\u7f6e**\u5927\u4e8e\u7b49\u4e8e**\uff08\u6ce8\u610f\u9898\u9762\uff09\u53e6\u5916\u4e00\u8f86\u8f66\uff08$g_j$\uff09\u7684\u65f6\u95f4\u6bb5\u3002\u5373$kv_j+a_j \\leq kv_i+a_i$\u3002**\u6ce8\u610f**$\\bold i$**\u4e0d\u7b49\u4e8e**$\\bold j$**\u3002**\n\n\u90a3\u4e48\uff0c\u628a\u6240\u6709$j$\u5bf9\u5e94\u7684\u4e0d\u7b49\u5f0f\u7684\u89e3\u53d6\u4ea4\u96c6\uff0c**\u5f97\u5230\u7684\u7ed3\u679c\u518d\u548c\u533a\u95f4**$[0, INF)$**\u53d6\u4ea4\u96c6\uff08\u65f6\u95f4\u4e0d\u80fd\u4e3a\u8d1f\uff09\u3002**\uff08\u4e0d\u5c31\u662f\u4e0d\u7b49\u5f0f\u7ec4\u5417\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/62588.png)\n\n\u5982\u679c\u6700\u540e\u7684\u7ed3\u679c\u975e\u7a7a\u96c6\uff0c\u90a3\u4e48\u8fd9\u8f86\u8f66\u62ff\u5956\u7a33\u4e86\u3002\n\n\u7528$pair$\u5b58\u50a8\u95ed\u533a\u95f4\u3002\n\n### \u53d8\u91cf\u90e8\u5206\n\n```cpp\nconst int MAXN = 10010; //\u8d5b\u8f66\u4e2a\u6570\nconst double INF=1e+60; //\u65e0\u7a77\u5927\n\nstruct node { //\u5b9a\u4e49\u4e00\u4e2a\u6574\u5f0f\n    double x, a;\n} p[MAXN];\nbool flag[MAXN]; //\u6807\u8bb0\u5f97\u5956\u7684\u8d5b\u8f66\n```\n\n\u6ca1\u5565\u5751\u70b9\uff08\u9664\u4e86\u4e0d\u770b\u6570\u636e\u8303\u56f4\u7684\uff09\u3002\n\n### \u89e3\u4e0d\u7b49\u5f0f\u4e0e\u4ea4\u96c6\u90e8\u5206\n\n```cpp\npair<double,double> solve(node a, node b) { //[first,second]\n    double x1=a.x, x2=b.x, a1=a.a, a2=b.a; //k*x1+a1>=k*x2+a2\n    double xx=x1-x2, aa=a2-a1; //k*xx>=aa\uff08\u79fb\u9879\uff09\n    //printf(\"$%lfk+%lf,%lfk+%lf $%lfk>=%lf\\n\", a.x, a.a, b.x, b.a, xx, aa);\n    /*\u7cfb\u6570\u5316\u4e3a1*/\n    if (xx==0.0) { //aa<=0\uff08xx=0\uff0c\u8f6c\u5316\uff09\n        if (aa<=0.0) return make_pair(-INF,INF); //(\u5168\u4f53\u5b9e\u6570)\n        else return make_pair(1.0,0.0); //(\u65e0\u89e3)\n    }\n    else if (xx>0.0) return make_pair(aa/xx,INF); //k>=aa/xx\uff08xx>0\uff0c\u4e0d\u53d8\u53f7\uff09\n    else return make_pair(-INF, aa/xx); //k<=aa/xx \uff08xx<0\uff0c\u53d8\u53f7\uff09\n}\npair<double,double> calc(pair<double,double> a, pair<double,double> b) { // \u53d6\u4ea4\u96c6\n    return make_pair(max(a.first,b.first),min(a.second,b.second));\n}\n```\n\n**\u89e3\u4e0d\u7b49\u5f0f\u7cfb\u6570\u5316\u4e3a1\u65f6\u6ce8\u610f\u7cfb\u6570$=0$,$>0$,$<0$\u7684\u60c5\u51b5\uff0c\u521d\u4e2d\u6570\u5b66\u7ecf\u5e38\u9519\u7684\u53d8\u7b26\u53f7\u3002**\n\n### \u4e3b\u51fd\u6570\n\n```cpp\nint main() {\n    int n; scanf(\"%d\", &n);\n    for (int i=1; i<=n; ++i) scanf(\"%lf\", &p[i].a); //\u8f93\u5165(\u6ca1\u5565\u597d\u8bf4\u7684)\n    for (int i=1; i<=n; ++i) scanf(\"%lf\", &p[i].x);\n    int cnt = 0;\n    for (int i=1; i<=n; ++i) {\n        pair<double,double> res = make_pair(0.0,INF); //\u4e0d\u7b49\u5f0f\u7ec4\u89e3\u96c6\n        for (int j=1; j<=n; ++j) { //\u679a\u4e3e\u5176\u5b83\u7684\u8f66\n            if (i==j) continue;\n            res = calc(res,solve(p[i],p[j])); //\u89e3\u4e0d\u7b49\u5f0f,\u53d6\u4ea4\u96c6\n            if (res.first>res.second) break; //\u65e0\u89e3\u76f4\u63a5\u9000\u51fa\n        }\n        if (res.first<=res.second) { //\u6709\u89e3,\u6807\u8bb0\n            ++cnt; flag[i]=true;\n        }\n    }\n    printf(\"%d\\n\", cnt);\n    for (int i=1; i<=n; ++i) {\n        if (flag[i]) printf(\"%d \", i);\n    }\n    return 0;\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\uff08624ms, 900KB\uff09\n\n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\nconst int MAXN = 10010;\nconst double INF=1e+60;\n\nstruct node {\n    double x, a;\n} p[MAXN];\nbool flag[MAXN];\n\npair<double,double> solve(node a, node b) { //[first,second]\n    double x1=a.x, x2=b.x, a1=a.a, a2=b.a; //k*x1+a1>=k*x2+a2\n    double xx=x1-x2, aa=a2-a1; //k*xx>=aa\n    //printf(\"$%lfk+%lf,%lfk+%lf $%lfk>=%lf\\n\", a.x, a.a, b.x, b.a, xx, aa);\n    if (xx==0.0) { //aa<=0\n        if (aa<=0.0) return make_pair(-INF,INF);\n        else return make_pair(1.0,0.0);\n    }\n    else if (xx>0.0) return make_pair(aa/xx,INF); //k>=aa/xx\n    else return make_pair(-INF, aa/xx); //k<=aa/xx\n}\npair<double,double> calc(pair<double,double> a, pair<double,double> b) {\n    return make_pair(max(a.first,b.first),min(a.second,b.second));\n}\nint main() {\n    int n; scanf(\"%d\", &n);\n    for (int i=1; i<=n; ++i) scanf(\"%lf\", &p[i].a);\n    for (int i=1; i<=n; ++i) scanf(\"%lf\", &p[i].x);\n    int cnt = 0;\n    for (int i=1; i<=n; ++i) {\n        pair<double,double> res = make_pair(0.0,INF);\n        for (int j=1; j<=n; ++j) {\n            if (i==j) continue;\n            res = calc(res,solve(p[i],p[j]));\n            if (res.first>res.second) break;\n        }\n        if (res.first<=res.second) {\n            ++cnt; flag[i]=true;\n        }\n    }\n    printf(\"%d\\n\", cnt);\n    for (int i=1; i<=n; ++i) {\n        if (flag[i]) printf(\"%d \", i);\n    }\n    return 0;\n}\n```",
        "postTime": 1562546154,
        "uid": 120250,
        "name": "2017gdgzoi999",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "\u5176\u5b9e\u3002\u3002\u3002\u8fd9\u9053\u9898n\u65b9\u66b4\u529b\u5c31\u53ef\u4ee5\u4e86\u554a\u3002\u3002\u3002\u3002\u3002\u5148\u679a\u4e3e\u7b2c\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u70b9\u3002\u7ef4\u62a4\u4e00\u4e2al\u548cr\u5206\u522b\u4ee3\u8868\u80fd\u5728\u90a3\u4e2a\u65f6\u95f4\u6bb5\u9886\u5148\u3002\u7136\u540e\u52a8\u6001\u5237\u65b0\u5373\u53ef\u3002\u5f53r<l\u65f6\u90a3\u8fd9\u8f86\u8f66\u5c31\u4e0d\u8ba1\u5165\u7b54\u6848\u3002\u53cd\u4e4b\u5219\u8ba1\u5165\u7b54\u6848\u3002\n```cpp\n/**************************************************************\n    Problem: 3190\n    User: GavinZheng\n    Language: C++\n    Result: Accepted\n    Time:3340 ms\n    Memory:2776 kb\n****************************************************************/\n \n#include<cstdio>\n#include<algorithm>\n#define maxn 100005\nusing namespace std;\ndouble v[maxn];\ndouble lo[maxn];\nint ans[maxn];\nint tot=0;\nint main(){\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lf\",&lo[i]);\n    for(int i=1;i<=n;i++) scanf(\"%lf\",&v[i]);\n    for(register int i=1;i<=n;i++){\n        double l=0,r=1000005000;bool win=1;\n        for(register int h=1;h<=n;h++){\n            if(v[h]>v[i]) r=min(r,((lo[i]-lo[h])/(v[h]-v[i])));\n            if(v[h]==v[i]&&lo[h]>lo[i]){\n                win=0;\n                break;\n            }\n            //v[h]<v[i]\n            if((v[h]<v[i])&&(lo[h]>lo[i])) l=max(l,((lo[h]-lo[i])/(v[i]-v[h])));\n            if(r<l) {win=0;break;}\n        }\n        if(win) ans[++tot]=i; \n    }\n    printf(\"%d\\n\",tot);\n    for(int i=1;i<=tot;i++){\n        printf(\"%d \",ans[i]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1533210963,
        "uid": 43420,
        "name": "GavinZheng",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7 **\u5355\u8c03\u6808** \u7684\u9898\u89e3\u3002~~\u534a\u5e73\u9762\u4ea4\u662f\u5565\uff0c\u4e0d\u4f1a\u3002~~\n\n\u9996\u5148\u628a\u6240\u6709\u7684\u8f66\u6309\u7167 $v$ \u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u4e0d\u5b58\u5728\u540e\u9762\u8f66\u8ffd\u4e0d\u4e0a\u524d\u9762\u8f66\u7684\u60c5\u51b5\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u5b58\u50a8\u6240\u6709\u53ef\u80fd\u7684\u9886\u8dd1\u8005\u3002\u8ba8\u8bba\u6bcf\u4e00\u8f86\u8f66\uff0c\u5982\u679c\u6808\u9876\u8f66\u7684 $v$ \u548c $k$ \u90fd\u5c0f\u4e8e\u5f53\u524d\u8f66\uff0c\u76f4\u63a5\u5c06\u6808\u9876\u8f66\u5f39\u51fa\u3002\n\n\u5982\u679c\u5f53\u524d\u8f66\u5728\u67d0\u4e2a\u65f6\u95f4\u8d85\u8fc7\u6808\u9876\u8f66\uff0c\u4e14\u8fd9\u4e2a\u65f6\u95f4\u5c0f\u4e8e\u6808\u9876\u8f66\u8d85\u8fc7\u6808\u4e2d\u7b2c\u4e8c\u8f86\u8f66\u7684\u65f6\u95f4\uff0c\u8bf4\u660e\u6808\u9876\u8f66\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u9886\u8dd1\u8005\uff0c\u5f39\u51fa\u3002\n\n\u6700\u7ec8\u6808\u4e2d\u8f66\u8f86\u5c31\u662f\u6240\u6709\u7684\u9886\u8dd1\u8005\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N=1e4+10;\nstruct Node{int k,v,id;}a[N];\nint n,top,stk[N];\nbool cmp1(Node a,Node b) {return a.v==b.v?a.k<b.k:a.v<b.v;}\nbool cmp2(int x,int y)   {return a[x].id<a[y].id;}\ndouble  t(Node a,Node b) {return double(a.k-b.k)/(b.v-a.v);}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) a[i].id=i,scanf(\"%d\",&a[i].k);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i].v);\n\tsort(a+1,a+n+1,cmp1);\n\tstk[++top]=1;\n \tfor(int i=2;i<=n;i++)\n\t{\n    \twhile(top&&((a[i].k>a[stk[top]].k)||\n\t\t\t (t(a[stk[top]],a[i])<t(a[stk[top-1]],a[stk[top]]))))\n\t\t\t top--;\n    \tstk[++top]=i;\n \t}\n\tprintf(\"%d\\n\",top);\n \tsort(stk+1,stk+top+1,cmp2);\n \tfor(int i=1;i<=top;i++)\n \t\tprintf(\"%d \",a[stk[i]].id);\n\treturn 0;\n}\n```\n",
        "postTime": 1636122697,
        "uid": 240165,
        "name": "\u897f\u5361\u6d1b\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3256 [JLOI2013]\u8d5b\u8f66"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u51fan\u4e2a\u76f4\u7ebf\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u80fd\u591f\u5728\u67d0\u4e2a\u65f6\u523b\u6700\u9ad8\u3002\n\n\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u5355\u8c03\u6808\u7684\u9898\u76ee\u2026\u2026\u4e0d\u5e94\u8be5\u8bc4\u5230\u7d2b\u7684\u3002\n\n## \u601d\u8def\n\n\u8fd9\u9053\u9898\u672c\u610f\u663e\u7136\u4e0d\u662f\u8ba9\u4f60\u5199\u5e73\u65b9\u66b4\u529b\u7684\u2026\u2026\u4f46\u662f\u8fd9\u4e2a\u9898\u7684\u7684\u6570\u636e\u8fc7\u4e8e\u6c34\u4e86\uff0c\u5f88\u591a\u6709\u4e00\u4e9b\u95ee\u9898\u7684\u4ee3\u7801\u90fd\u80fd\u901a\u8fc7\u3002\u636e\u6211\u65c1\u8fb9\u7684\u540c\u5b66\u8bf4\uff0c\u4ed6\u628a\u5927\u90e8\u5206\u9898\u89e3\u6d4b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u6709\u5f88\u591a\u95ee\u9898\u3002\n\n[\u7a0d\u5fae\u5f3a\u4e00\u70b9\u7684](https://www.luogu.com.cn/problem/U185429)\n\n\u6211\u4eec\u6309\u7167\u8ddd\u79bb\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6328\u4e2a\u5165\u6808\uff0c\u663e\u7136\u8ddd\u79bb\u548c\u901f\u5ea6\u90fd\u6bd4\u6808\u9876\u5c0f\u7684\u6ca1\u6709\u7528\u4e86\u3002\n\n\u5176\u6b21\u6211\u4eec\u770b\u5f53\u524d\u6808\u9876\u5143\u7d20\u8d85\u8fc7\u6808\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u3002\n\n\u5982\u679c\u8bf4\u5f53\u524d\u8981\u63d2\u5165\u7684\u8fd9\u4e2a\u5143\u7d20\u548c\u6808\u9876\u76f8\u9047\uff08\u6216\u8005\u7406\u89e3\u4e3a\u8d85\u8fc7\u6808\u9876\uff09\u8981\u65e9\u4e8e\u8fd9\u4e2a\u65f6\u95f4\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u6808\u9876\u5143\u7d20\u662f\u6c38\u65e0\u51fa\u5934\u4e4b\u65e5\u7684\uff0c\u53ef\u4ee5\u51fa\u6808\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5199\u5206\u6570\u6765\u907f\u514d\u7cbe\u5ea6\u95ee\u9898\uff08\u5f53\u7136\u597d\u50cf\u4e0d\u5199\u95ee\u9898\u4e5f\u4e0d\u5927\uff09\n\n\u8fd8\u8981\u6ce8\u610f\u7279\u5224\u6389\u4e24\u4e2a\u5143\u7d20\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u628a\u521a\u624d\u7684\u5143\u7d20\u518d\u5165\u6808\u5c31\u884c\u4e86\u3002\n\n\u6709\u4e9b\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint n;\nstruct frac{//\u5206\u6570\n    int x,y;\n    void yf(){\n        if(x==0||y==0) return;\n        int p=__gcd(x,y);\n        x/=p;y/=p;\n    }\n    frac(int a,int b){x=a;y=b;yf();}\n    frac(){x=0;y=1;}\n    bool operator<(const frac &b)const{\n        return x*b.y<y*b.x;\n    }\n};\nstruct node{\n    int id,x,y;\n    frac t;\n    bool operator<(const node &b)const{\n        if(x==b.x) return y<b.y;\n        return x>b.x;\n    }\n};\nnode a[1000005];\ndeque<node> v;\nsigned main(){\n    ios::sync_with_stdio(0);\n    cin>>n;\n    for(int i=0;i<n;i++){cin>>a[i].x;a[i].id=i;}\n    for(int i=0;i<n;i++){cin>>a[i].y;}\n    sort(a,a+n);\n    a[0].t=frac(0,1);\n    v.push_back(a[0]);\n    for(int i=1;i<n;i++){\n        if(!v.empty()&&a[i].x==v.back().x&&a[i].y==v.back().y){//\u5224\u6389\u5b8c\u5168\u76f8\u540c\n            v.push_back((node){a[i].id,a[i].x,a[i].y,v.back().t});\n            continue;\n        }\n        if(!v.empty()&&a[i].y<=v.back().y) continue;//\u5224\u6389\u6253\u4e0d\u8fc7\n        while(!v.empty()&&frac(v.back().x-a[i].x,a[i].y-v.back().y)<v.back().t){//\u628a\u6c38\u65e0\u51fa\u5934\u4e4b\u65e5\u7684\u6808\u9876\u5220\u6389\n            v.pop_back();\n        }\n        v.push_back((node){a[i].id,a[i].x,a[i].y,frac(v.back().x-a[i].x,a[i].y-v.back().y)});//\u5165\u6808\uff0c\u8bb0\u5f55\u4e0b\u4e0e\u6808\u9876\u7684\u5143\u7d20\u76f8\u9047\u65f6\u95f4\u7528\u4e8e\u6bd4\u8f83\n    }\n    cout<<v.size()<<endl;\n    vector<int> ans;\n    while(!v.empty()){\n        ans.push_back(v.front().id+1);\n        v.pop_front();\n    }\n    sort(ans.begin(),ans.end());\n    for(int i=0;i<ans.size();i++) cout<<ans[i]<<' ';\n    return 0;\n}\n```",
        "postTime": 1634695824,
        "uid": 149872,
        "name": "\u5c0f\u5c0f\u5c0f\u670b\u53cb",
        "ccfLevel": 5,
        "title": "P3256 [JLOI2013]\u8d5b\u8f66"
    },
    {
        "content": "# \u534a\u5e73\u9762\u4ea4 + \u679a\u4e3e\u8fb9\u754c\u62d0\u70b9\n\n\u601d\u8def\u548c\u73b0\u6709\u7684\u9898\u89e3\u90fd\u6709\u4e9b\u5dee\u522b\uff0c\u6240\u4ee5\u7a0d\u5fae\u5199\u4e00\u4e0b\u3002\n\n\u7b2c$i$\u8f86\u8d5b\u8f66\u5728$t$\u65f6\u7684\u8def\u7a0b\u662f$x_i(t)=v_i t + x_{0i}$\uff0c\u6bcf\u8f86\u8d5b\u8f66\u7684$x-t$\u56fe\u662f\u4e00\u6761\u76f4\u7ebf\u3002\u5728\u540c\u4e00\u5750\u6807\u7cfb\u753b\u51fa\u6240\u6709\u8d5b\u8f66\u7684$x-t$\u56fe\uff0c\u5219\u5728\u4efb\u610f\u65f6\u523b$t$\uff0c\u9886\u5148\u7684\u8d5b\u8f66\u5c31\u662f\u9ad8\u5ea6\u6700\u9ad8\u7684\u90a3\u6761\u76f4\u7ebf\u3002\u5bf9\u4e8e\u6240\u6709$t$\uff0c$\\max_{i} x_i(t)$\u6784\u6210\u4e00\u6761\u6298\u7ebf\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u6761\u6298\u7ebf\u5c31\u662f$x_i(t) \\ge v_i t + x_{0i}$\u7684\u534a\u5e73\u9762\u4ea4\u7684\u8fb9\u754c\u3002\n\n\u89c2\u5bdf\u5230\u8fd9\u91cc\u5c31\u610f\u8bc6\u5230\u534a\u5e73\u9762\u4ea4\u662f\u53ef\u4ee5\u505a\u7684\u4e86\u3002\u6211\u4eec\u9700\u8981\u6c42\u7684\u662f\u5728\u6240\u6709\u5728\u67d0\u4e2a\u65f6\u523b\u9886\u5148\u7684\u8d5b\u8f66\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u8fd9\u6761\u6298\u7ebf\u7684\u5f62\u72b6\u4f5c\u51fa\u4e86\u8d21\u732e\u7684\u6240\u6709\u7684\u76f4\u7ebf\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd9\u81ea\u7136\u5305\u62ec\u5728\u67d0\u4e2a\u533a\u95f4\u4e0a\u6210\u4e3a\u4e86\u6298\u7ebf\u7684\u76f4\u7ebf\uff0c\u8fd9\u5bf9\u5e94\u7684\u662f\u67d0\u8f86\u8d5b\u8f66\u5728\u67d0\u4e2a\u65f6\u95f4\u6bb5\u4fdd\u6301\u9886\u5148\u3002\u4f46\u8fd8\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u80fd\u67d0\u8f86\u8d5b\u8f66\u53ea\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\uff08\u65e0\u9650\u77ed\u6682\u5730\uff09\u4fdd\u6301\u9886\u5148\uff0c\u6211\u4eec\u4e5f\u8ba4\u4e3a\u5b83\u7b26\u5408\u6761\u4ef6\uff08\u6b63\u5982\u6837\u4f8b\u63d0\u4f9b\u7684\uff09\u3002\u4e8b\u5b9e\u4e0a\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5305\u542b\u4e86\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd9\u4fc3\u4f7f\u6211\u4eec\u8003\u8651\u6298\u7ebf\u4e0a\u7684\u6240\u6709\u62d0\u70b9\u3002**\u5bf9\u4e8e\u6240\u6709\u76f4\u7ebf\uff0c\u5982\u679c\u6298\u7ebf\u7684\u67d0\u4e2a\u62d0\u70b9\u51fa\u73b0\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\uff0c\u90a3\u4e48\u8fd9\u6761\u76f4\u7ebf\u5bf9\u5e94\u7684\u8d5b\u8f66\u5c31\u7b26\u5408\u83b7\u5956\u6761\u4ef6\u3002**\n\n\u8003\u8651\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5c3d\u7ba1\u6700\u574f\u60c5\u51b5\u62d0\u70b9\u6570\u91cf\u4f1a\u51e0\u4e4e\u7b49\u4e8e\u76f4\u7ebf\u6570\u91cf\uff0c\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\u3002\u4f46\u9664\u975e\u662f\u975e\u5e38\u7279\u6b8a\u7684\u6570\u636e\uff0c\u62d0\u70b9\u6570\u91cf\u90fd\u8fdc\u5c0f\u4e8e\u76f4\u7ebf\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u8fd9\u79cd\u505a\u6cd5\u5b9e\u6d4b\u6bd4\u7eaf$O(n^2)$\u7b97\u6cd5\u5feb\u4e0d\u5c11\u3002\n\n\u7cbe\u5ea6\u95ee\u9898\uff1a\u65e0\u8111\u5f00`long double`\uff0c`inf`\u53d6`1e50`\uff0c`eps`\u53d6`1e-10`\u53ef\u8fc7\u3002\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,from,to) for(register int i=(int)(from);i<=(int)(to);++i)\n#define rev(i,from,to) for(register int i=(int)(from);i>=(int)(to);--i)\n#define For(i,to) for(register int i=0;i<(int)(to);++i)\ntypedef long long ll;\n#define double long double\ninline ll read(){\n    ll x=0; ll sign=1; char c=getchar();\n    while(c>'9' || c<'0') {if (c=='-') sign=-1;c=getchar();}\n    while(c>='0' && c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n    return x*sign;\n}\n\nconst double eps=1e-10;\n#define inf 1e50 \n#define N 11234\n\nint dcmp(double x) {\n    if (fabs(x) < eps) return 0;\n    else return x < 0 ? -1 : 1;\n}\nstruct Point {\n    double x, y;\n    Point(double x=0, double y=0):x(x), y(y) { }\n};\ntypedef Point Vector;\nVector operator+ (Vector A, Vector B) { return Vector(A.x+B.x, A.y+B.y); }\nVector operator- (Vector A, Vector B) { return Vector(A.x-B.x, A.y-B.y); }\nVector operator* (Vector A, double p) { return Vector(A.x*p, A.y*p); }\nVector operator/ (Vector A, double p) { return Vector(A.x/p, A.y/p); }\nbool operator< (const Point &a, const Point &b) {\n    return a.x<b.x || (a.x==b.x && a.y<b.y);\n}\nbool operator== (const Point &a, const Point &b) {\n    return a.x==b.x && a.y==b.y;\n}\ndouble Cross(const Vector &A, const Vector &B) {\n    return A.x*B.y - A.y*B.x;\n}\ndouble Dot(const Vector &A, const Vector &B){\n    return A.x*B.x+A.y*B.y;\n}\ndouble Length(const Vector &A) {\n    return sqrt(Dot(A, A));\n}\n\nstruct Line {\n    Point P;\n    Vector v;\n    double ang;\n    int index;\n    Line() {}\n    Line(Point P, Vector v, int index):P(P), v(v), index(index) { ang = atan2(v.y, v.x); }\n    bool operator< (const Line &L) const  {\n        return ang < L.ang;\n    }\n    double value(double x) {\n        return P.y + (x - P.x) * v.y / v.x;\n    }\n};\nbool OnLeft(Line L, Point p) {\n    return Cross(L.v, p-L.P) > 0;\n}\nPoint GetIntersection(Line a, Line b) {\n    Vector u = a.P-b.P;\n    double t = Cross(b.v, u) / Cross(a.v, b.v);\n    return a.P+(a.v*t);\n}\n\nvoid HalfplaneIntersection(vector<Line> &L, vector<Point> &ret) {\n    sort(L.begin(), L.end());\n    Point *p = new Point[N];\n    Line *q = new Line[N];\n    int first, last;\n    q[first=last=0] = L[0];\n    for(int i = 1; i < L.size(); i++) {\n        while(first < last && !OnLeft(L[i], p[last-1])) --last;\n        while(first < last && !OnLeft(L[i], p[first])) ++first;\n        q[++last] = L[i];\n        if (!dcmp(Cross(q[last].v, q[last-1].v))) {\n            --last;\n            if(OnLeft(q[last], L[i].P)) q[last] = L[i];\n        }\n        if (first < last) p[last-1] = GetIntersection(q[last-1], q[last]);\n    }\n    while(first < last && !OnLeft(q[first], p[last-1])) --last;\n    if (last - first <= 1) return;\n    p[last] = GetIntersection(q[last], q[first]);\n    for(int i = first; i <= last; i++) {\n        if (p[i].y >= inf) continue;\n        ret.push_back(p[i]);\n    }\n}\n\ndouble b[N], k[N];\nvector<Point> ret;\nvector<int> ans;\nvector<Line> L;\n\nint main() {\n    int n = read();\n    rep(i, 1, n) cin >> b[i];\n    rep(i, 1, n) {\n        cin >> k[i];\n        Line l = Line(Point(0, b[i]), Vector(1, k[i]), i);\n        L.push_back(l);\n    }\n    L.push_back(Line(Point(0, 0), Vector(0, -1), 0));\n    L.push_back(Line(Point(0, 0), Vector(1, 0), 0));\n    L.push_back(Line(Point(inf, 0), Vector(0, 1), 0));\n    L.push_back(Line(Point(0, inf), Vector(-1, 0), 0));\n\n    HalfplaneIntersection(L, ret);\n\n    for(auto l : L) {\n        if (l.index == 0) continue;\n        for(auto p : ret) {\n            if (!dcmp(l.value(p.x) - p.y)) {\n                ans.push_back(l.index);\n                break;\n            }\n        }\n    }\n    sort(ans.begin(), ans.end());\n    cout << ans.size() << endl;\n    For(i, ans.size()) {\n        if (i) cout << \" \";\n        cout << ans[i];\n    }\n    cout << endl;\n\n    return 0;\n}\n```",
        "postTime": 1610305464,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3256 \u3010[JLOI2013]\u8d5b\u8f66\u3011"
    }
]