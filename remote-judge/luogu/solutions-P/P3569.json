[
    {
        "content": "**\u5982\u679c\u770b\u5230\u8fd9\u9898\u6ca1\u6709\u601d\u8def\uff0c\u4e0d\u59a8\u5148\u60f3\u60f3\u5982\u679c\u5361\u724c\u53ea\u6709\u4e00\u9762\u7684\u60c5\u51b5\uff1a**\n\n\u9996\u5148\uff0c\u65e2\u7136\u6709\u4fee\u6539\uff0c\u4e0d\u59a8\u7528\u7ebf\u6bb5\u6811\u6765\u505a\uff1b\n\n\u90a3\u4e48\u5bf9\u4e8e\u5361\u724c\u53ea\u6709\u4e00\u9762\u7684\u7ebf\u6bb5\u6811\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\n\n\u73b0\u5728\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u7ef4\u62a4\u597d$tr[l,mid]$\u4e0e$tr[mid+1,r]$,\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5408\u5e76\uff0c\u5176\u5b9e\u5230\u6b64\uff0c\u5bf9\u4e8e$tr[l,mid]$\u4e0e$tr[mid+1,r]$\uff0c\u53ea\u8981$a[mid]$\u5c0f\u4e8e\u7b49\u4e8e$a[mid+1]$\u5373\u53ef\u5b8c\u6210\u8f6c\u79fb\uff0c\u6211\u4eec\u4e5f\u4e0d\u7528\u8003\u8651\u4e2d\u95f4\u7684\u60c5\u51b5\uff1b\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u9012\u5f52\u6c42\u89e3\u5373\u53ef\uff1b\n\n**\u8fdb\u9636\uff1a\u5361\u724c\u53ef\u7ffb\u8f6c**\n\n\u5bf9\u4e0a\u9762\u7684\u95ee\u9898\u6269\u5145\u5230\u4e8c\u7ef4\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u4e0a\u9762\u7684\u601d\u8def\u6765\u89e3\u51b3\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4ecd\u53ef\u7ef4\u62a4$tr[l,mid]$\u4e0e$tr[mid+1,r]$\u4ee5\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6765\u5224\u5b9a\u662f\u5426\u53ef\u4ee5\u66f4\u65b0\u533a\u95f4$[l,r]$\n\n\u6362\u6210\u4eba\u8bdd\u5c31\u662f\uff1a**\u591a\u5f00\u4e00\u7ef4(\u624b\u52a8\u6ed1\u7a3d)**\n\n\u54b3\u54b3\uff0c\u5176\u5b9e\u662f\u5728\u591a\u7ef4\u62a4\u4e00\u4e2a$2 * 2$\u7684\u6570\u7ec4\uff1a$res[2][2]$\n\n**\u5177\u4f53\u600e\u4e48\u98df\u7528\u5462\uff1a**\n\n\u4e0d\u59a8\u8bbe\u533a\u95f4$[l,r]$\u7684\u5de6\u7aef\u70b9\u4e3a$l[0/1]$,\u53f3\u7aef\u70b9\u4e3a$r[0/1]$\uff0c\u8868\u5de6\u7aef\u70b9\u6211\u9009\u4e0a\u9762\u8fd8\u662f\u4e0b\u9762\uff0c\u53f3\u7aef\u70b9\u9009\u4e0a\u9762\u6216\u4e0b\u9762\uff1b\n\n\u90a3\u4e48$res[i][j]$\u5c31\u8868\u793a\u5f53\u6211\u9009$l[i]$\u548c$r[j]$\u65f6\uff0c\u662f$_1$\u6216\u5426$_0$\n\n\u90a3\u4e48\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u533a\u95f4\u90fd\u7ef4\u62a4\u8fd9\u6837\u7684\u4e00\u4e2a\u503c\uff0c\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u8f6c\u79fb\u5566\uff1a\n```cpp\ninline void Update(int k) {\n    tr[k].l[0] = tr[k << 1].l[0]; tr[k].r[0] = tr[k << 1 | 1].r[0];\n    tr[k].l[1] = tr[k << 1].l[1]; tr[k].r[1] = tr[k << 1 | 1].r[1];\n    tr[k].res[0][0] = tr[k].res[1][1] = tr[k].res[0][1] = tr[k].res[1][0] = 0;\n    if(tr[k << 1].r[0] <= tr[k << 1 | 1].l[0]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[0][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[0][0]);\n    }\n    if(tr[k << 1].r[1] <= tr[k << 1 | 1].l[0]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[0][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[0][0]);\n    }\n    if(tr[k << 1].r[0] <= tr[k << 1 | 1].l[1]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[1][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[1][0]);\n    }\n    if(tr[k << 1].r[1] <= tr[k << 1 | 1].l[1]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[1][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[1][0]);\n    }\n}\n```\n\n\u5e94\u8be5\u5f88\u597d\u61c2\uff0c\u5176\u5b9e\u53ef\u4ee5\u5199\u6210for\u5faa\u73af\uff0c\u4f46\u6211\u89c9\u5f97\u7684\u76f4\u63a5\u7c98\u6bd4\u8f83\u5feb\u2026\u2026\n\n**\u5bf9\u4e8e\u4fee\u6539\u4e0e\u67e5\u8be2\uff1a**\n\n\u4fee\u6539\u7684\u8bdd\u5c31\u662f\u4e24\u6b21\u5355\u70b9\u4fee\u6539\uff0c\u8bb2\u53cc\u65b9\u7684\u503c\u4ea4\u6362\u540e\u5728\u8d4b\u503c\u5373\u53ef\uff1b\n\n\u67e5\u8be2\u54a7\uff0c\u5c31\u662f\u770b\u6839\u8282\u70b9$tr[1]$\u7684$res[2][2]$\u6570\u7ec4\u4e2d\u662f\u5426\u4e3a\u4e00\uff0c\u53ea\u8981\u5728$[0][0],[0][1],[1][0],[1][1]$\u4e2d\u6709\u4e00\u4e2a\u4e3a\u771f\uff0c\u5219\u8868\u793a\u53ef\u4ee5\u6784\u6210\uff0c\u5426\u5219GG\n\n\u5177\u4f53\u5b9e\u73b0\u662f\u9171\uff1a\n```cpp\ninline void Change(int k,int l,int r,int a,int b,int c) {\n    if(l == r) {\n        tr[k].l[0] = tr[k].r[0] = b;\n        tr[k].l[1] = tr[k].r[1] = c;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if(a <= mid) Change(k << 1,l,mid,a,b,c);\n    if(a > mid) Change(k << 1 | 1,mid + 1,r,a,b,c);\n    Update(k);\n}\n\n//\u4e3b\u51fd\u6570\u8fd9\u6837\uff1a\nfor(int i = 1;i <= m;i ++) {\n        int u = read(),v = read();\n        swap(a[u][0],a[v][0]),swap(a[u][1],a[v][1]);\n        Change(1,1,n,u,a[u][0],a[u][1]); Change(1,1,n,v,a[v][0],a[v][1]);\n        if(tr[1].res[1][1] || tr[1].res[1][0] || tr[1].res[0][1] || tr[1].res[0][0])\n            printf(\"TAK\\n\");\n        else \n            printf(\"NIE\\n\");\n    }\n    \n```\n\n**\u989d\uff0c\u518d\u653e\u5b8c\u6574\u4ee3\u7801\u4e4b\u524d\uff0c\u56e0\u4e3a\u6b64\u9898\u65f6\u9650\u8fc7\u4e25\uff0c\u5bfc\u81f4\u53ea\u670990\uff08\u5f00O2\u8f7b\u677e\u8dd1\u8fc7\uff0c\u6216\u8005\u4f60\u4f1a\u5927\u529b\u5361\u5e38\uff09**\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define N 200500\nusing namespace std;\n\ninline int read() {\n    int x = 0,f = 1; char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-') f = -1; s = getchar();}\n    while(s >= '0' && s <= '9') {x = x * 10 + s - '0'; s = getchar();}\n    return x * f;\n}\n\nint n,m;\nint a[N][2];\nstruct node {\n    int l[2],r[2];\n    int res[2][2];\n}tr[N * 4];\n\ninline void Update(int k) {\n    tr[k].l[0] = tr[k << 1].l[0]; tr[k].r[0] = tr[k << 1 | 1].r[0];\n    tr[k].l[1] = tr[k << 1].l[1]; tr[k].r[1] = tr[k << 1 | 1].r[1];\n    tr[k].res[0][0] = tr[k].res[1][1] = tr[k].res[0][1] = tr[k].res[1][0] = 0;\n    if(tr[k << 1].r[0] <= tr[k << 1 | 1].l[0]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[0][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[0][0]);\n    }\n    if(tr[k << 1].r[1] <= tr[k << 1 | 1].l[0]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[0][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[0][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[0][0]);\n    }\n    if(tr[k << 1].r[0] <= tr[k << 1 | 1].l[1]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][0] & tr[k << 1 | 1].res[1][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][0] & tr[k << 1 | 1].res[1][0]);\n    }\n    if(tr[k << 1].r[1] <= tr[k << 1 | 1].l[1]) {\n        tr[k].res[1][1] = tr[k].res[1][1] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[1][0] = tr[k].res[1][0] | (tr[k << 1].res[1][1] & tr[k << 1 | 1].res[1][0]);\n        tr[k].res[0][1] = tr[k].res[0][1] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[1][1]);\n        tr[k].res[0][0] = tr[k].res[0][0] | (tr[k << 1].res[0][1] & tr[k << 1 | 1].res[1][0]);\n    }\n}\n\ninline void Built(int k,int l,int r) {\n    if(l == r) {\n        tr[k].l[0] = tr[k].r[0] = a[l][0];\n        tr[k].l[1] = tr[k].r[1] = a[l][1];\n        tr[k].res[0][0] = tr[k].res[1][1] = 1;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    Built(k << 1,l,mid); \n    Built(k << 1 | 1,mid + 1,r);\n    Update(k);\n}\n\ninline void Change(int k,int l,int r,int a,int b,int c) {\n    if(l == r) {\n        tr[k].l[0] = tr[k].r[0] = b;\n        tr[k].l[1] = tr[k].r[1] = c;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if(a <= mid) Change(k << 1,l,mid,a,b,c);\n    if(a > mid) Change(k << 1 | 1,mid + 1,r,a,b,c);\n    Update(k);\n}\n\nint main() {\n    n = read();\n    for(int i = 1;i <= n;i ++) a[i][0] = read(),a[i][1] = read();\n    Built(1,1,n); m = read();\n    for(int i = 1;i <= m;i ++) {\n        int u = read(),v = read();\n        swap(a[u][0],a[v][0]),swap(a[u][1],a[v][1]);\n        Change(1,1,n,u,a[u][0],a[u][1]); Change(1,1,n,v,a[v][0],a[v][1]);\n        if(tr[1].res[1][1] || tr[1].res[1][0] || tr[1].res[0][1] || tr[1].res[0][0])\n            printf(\"TAK\\n\");\n        else \n            printf(\"NIE\\n\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1570102381,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3569 \u3010[POI2014]KAR-Cards\u3011"
    },
    {
        "content": "## 1.\u524d\u7f6e\u77e5\u8bc6\n[\u7ebf\u6bb5\u6811](https://oi-wiki.org/ds/seg/)\n## 2.\u89e3\u6cd5\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u8fde\u901a\u6027\u95ee\u9898\u3002\u800c\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u5219\u4e5f\u8ddf\u8fde\u901a\u6027\u6709\u5173\u2014\u2014$l$ \u5206\u522b\u53d6\u6b63\u80cc\u9762\uff0c$r$ \u80fd\u53d6\u5230\u6b63\u9762\u8fd8\u662f\u80cc\u9762\u3002\n\n\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u628a\u6570\u5b57\u8f83\u5c0f\u7684\u4e00\u9762\u8bb0\u4e3a $a$\uff0c\u8f83\u5927\u7684\u4e00\u9762\u8bb0\u4e3a $b$\u3002\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u7684\u4fe1\u606f\u5373\u4e3a $va$\uff1a$l$ \u53d6 $a$ \u51fa\u53d1\u65f6 $r$ \u7684\u6700\u5c0f\u503c\uff08\u663e\u800c\u6613\u89c1\u7684\u8d2a\u5fc3\u601d\u60f3\uff09\u4e0e $vb$\uff1a$l$ \u53d6 $b$ \u51fa\u53d1\u65f6 $r$ \u7684\u6700\u5c0f\u503c\u3002\u90a3\u4e48\u96be\u70b9\u5c31\u5728\u4e8e\u7ef4\u62a4 $va$ \u4e0e $vb$\u3002\u8fd9\u91cc\u653e\u51fa $va$ \u4f5c\u4e3a\u53c2\u8003\u3002\n\n```cpp\nint mid=(l+r)>>1;\nif(a[mid+1]>=node[p<<1].va)node[p].va=node[p<<1|1].va;\nelse if(b[mid+1]>=node[p<<1].va)node[p].va=node[p<<1|1].vb;\nelse node[p].va=inf;\n```\n![ahhh](https://cdn.luogu.com.cn/upload/image_hosting/opwam6qa.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u9996\u5148\u6211\u4eec\u90fd\u8ba8\u8bba\u4e86```node[p<<1].va```\u662f\u56e0\u4e3a $p$ \u4e0e $p$ \u7684\u5de6\u513f\u5b50\u8d77\u70b9 $a$ \u76f8\u540c\u3002\n\n\u7136\u540e\u6211\u4eec\u8ba8\u8bba```a[mid+1]```\u4e0e```b[mid+1]```\u662f\u56e0\u4e3a\u8981\u6ee1\u8db3\u4e0d\u4e0b\u964d\u7684\u6761\u4ef6\uff0c\u6ce8\u610f\u5148\u8ba8\u8bba\u8f83\u5c0f\u7684\u4e00\u9879\u662f\u56e0\u4e3a\u8981\u6ee1\u8db3\u8d2a\u5fc3\u539f\u5219\uff08\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5408\u6cd5\u65f6\u8d8a\u5c0f\u8d8a\u6709\u53ef\u80fd\u6210\u529f\uff09\uff0c\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u884c\u5219\u7528\u6781\u5927\u503c\u6807\u8bb0\u4e3a\u6b64\u8def\u4e0d\u901a\u3002\n\n\u6700\u540e\u7684 change \u64cd\u4f5c\u5c31\u5c06\u6709\u6539\u53d8\u7684\u5730\u65b9\u4ea4\u6362\u91cd\u65b0\u5efa\u6811\u5373\u53ef\u3002\n\n## 3.\u4ee3\u7801\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nint n,m;\nint a[200005],b[200005];\nstruct seg\n{\n\tint l,r,va,vb;\n\tseg()\n\t{\n\t\tva=vb=inf;\n\t}\n};\nseg node[1000005];\nvoid merge(int p,int l,int r)//\u7cbe\u534e\u6240\u5728\n{\n\tint mid=(l+r)>>1;\n\tif(a[mid+1]>=node[p<<1].va)node[p].va=node[p<<1|1].va;\n\telse if(b[mid+1]>=node[p<<1].va)node[p].va=node[p<<1|1].vb;\n\telse node[p].va=inf;\n\tif(a[mid+1]>=node[p<<1].vb)node[p].vb=node[p<<1|1].va;\n\telse if(b[mid+1]>=node[p<<1].vb)node[p].vb=node[p<<1|1].vb;\n\telse node[p].vb=inf;\n   \t//vb\u64cd\u4f5c\u4e0eva\u540c\u7406\u3002\n}\nvoid build(int p,int l,int r)//\u5e38\u89c4\u64cd\u4f5c\n{\n\tnode[p].l=l;\n\tnode[p].r=r;\n\tif(l==r)\n\t{\n\t\tnode[p].va=a[l];\n\t\tnode[p].vb=b[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\tmerge(p,l,r);\n}\nvoid change(int p,int l,int r,int x)//\u76f8\u6bd4\u4e8ebuild\uff0c\u53ea\u662f\u6ca1\u6709\u8d4bl\u4e0er\u7684\u503c\uff0c\u518d\u52a0\u4e86\u4e2a\u8303\u56f4\u5224\u65ad\u3002\n{\n\tif(l==r)\n\t{\n\t\tnode[p].va=a[l];\n\t\tnode[p].vb=b[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)change(p<<1,l,mid,x);\n\telse change(p<<1|1,mid+1,r,x);\n\tmerge(p,l,r);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\ta[i]=min(x,y);\n\t\tb[i]=max(x,y);\n\t}\n\tbuild(1,1,n);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tswap(a[x],a[y]);\n\t\tswap(b[x],b[y]);\n\t\tchange(1,1,n,x);\n\t\tchange(1,1,n,y);\n\t\tif(node[1].va==inf&&node[1].vb==inf)printf(\"NIE\\n\");\n\t\telse printf(\"TAK\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1614609592,
        "uid": 313249,
        "name": "Energy_Making",
        "ccfLevel": 0,
        "title": "[POI2014]KAR-Cards\u9898\u89e3"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n# \u7ebf\u6bb5\u6811\n\u6b63\u89e3\u662f\u7ebf\u6bb5\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ur0ocnuo.png)\n\n\u4ec0\u4e48\uff1f\u7ebf\u6bb5\u6811\uff1f\u4e00\u8138\u61f5\u903c\u3002\n\n\u5176\u5b9e\u4ed4\u7ec6\u89c2\u5bdf\u8fd8\u662f\u53ef\u4ee5\u53d1\u73b0\u7aef\u502a\u7684~~\u62b1\u6b49\uff0c\u6211\u6ca1\u770b\u51fa\u6765~~\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u80fd\u5426\u6784\u6210\u5355\u8c03\u4e0d\u51cf\u7684\u5e8f\u5217\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u662f\u80cc\u9762\u8fd8\u662f\u6b63\u9762\uff0c$tr[0/1][0/1]$\uff0c\u8868\u793a\u5de6\u7aef\u70b9\u662f\u6b63\u9762\u6216\u80cc\u9762\uff0c\u53f3\u7aef\u70b9\u662f\u6b63\u9762\u6216\u80cc\u9762\u80fd\u5426\u6784\u6210\u5355\u8c03\u4e0d\u51cf\u7684\u5e8f\u5217\u3002\u520616\u79cd\u60c5\u51b5\u8f6c\u79fb\n\n```cpp\ninline void up() {tr[0][0] = tr[1][0] = tr[0][1] = tr[1][1] = 0; for(R int i = 0;i < 2;++ i) for(R int j = 0;j < 2;++ j) for(R int k = 0;k < 2;++ k) for(R int l = 0;l < 2;++ l) tr[i][j] = tr[i][j] | (ls -> tr[i][k] && rs -> tr[l][j] && a[ls -> r][k] <= a[rs -> l][l]);}\n```\n~~\u7801\u98ce\u6e05\u65b0\u9753\u4e3d~~\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#define R register\nconst int N = 200002;\ninline int read()\n{\n    int x = 0 , f = 1;  char ch = getchar();\n    while(ch < '0' || ch > '9') {if(ch == '-')  f = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n    return x * f;\n}\nint n , m , t;\nint a[N][2];\ninline void swap(R int &a,R int &b) {t = a; a = b; b = t;}\nstruct Segment_Tree\n{\n\t#define mid ((p -> l + p -> r) >> 1)\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r , tr[2][2];\n\t\tnode(R int l = 0,R int r = 0) : l(l) , r(r) {ls = rs = NULL;tr[0][0] = tr[0][1] = tr[1][0] = tr[1][1] = 0;}\n\t\tinline bool ok() {return tr[0][0] || tr[0][1] || tr[1][0] || tr[1][1];}\n\t\tinline void up() {tr[0][0] = tr[1][0] = tr[0][1] = tr[1][1] = 0; for(R int i = 0;i < 2;++ i) for(R int j = 0;j < 2;++ j) for(R int k = 0;k < 2;++ k) for(R int l = 0;l < 2;++ l) tr[i][j] = tr[i][j] | (ls -> tr[i][k] && rs -> tr[l][j] && a[ls -> r][k] <= a[rs -> l][l]);}\n\t}*root , *tail , pool[N << 2];\n\tSegment_Tree() {tail = pool;}\n\tvoid build(R node *&p,R int l,R int r)\n\t{\n\t\tp = new (tail ++)node(l,r);\n\t\tif(l == r) return (void)(p -> tr[0][0] = p -> tr[1][1] = 1);\n\t\tbuild(p -> ls,l,mid); build(p -> rs,mid + 1,r);\n\t\tp -> up();\n\t}\n\tvoid chenge(R node *p,R int x)\n\t{\n\t\tif(p -> l == p -> r) return;\n\t\tif(x <= mid) chenge(p -> ls,x);\n\t\telse chenge(p -> rs,x);\n\t\tp -> up();\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read();\n\t\tfor(R int i = 1;i <= n;++ i) a[i][0] = read() , a[i][1] = read();\n\t\tbuild(root,1,n);\n\t\tm = read();\n\t\tfor(R int i = 1 , x , y;i <= m;++ i)\n\t\t{\n\t\t\tx = read(); y = read();\n\t\t\tswap(a[x][0],a[y][0]); swap(a[x][1],a[y][1]);\n\t\t\tchenge(root,x); chenge(root,y);\n\t\t\tputs(root -> ok() ? \"TAK\" : \"NIE\");\n\t\t}\n\t}\n}CF;\nint main()\n{\n\tCF.LOL();\n\treturn 0;\n}\n```\n",
        "postTime": 1570231164,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3569 \u3010[POI2014]KAR-Cards\u3011"
    },
    {
        "content": "\u4eca\u5929\u6a21\u62df\u8d5bt2\uff0c\u66b4\u529b\u53ef\u4ee5\u6c34\u8fc760\u5206\uff08\u5f00\u5fc3\uff09\n\n\u7136\u800c\u5f53\u8001\u5e08\u8bf4\u8fd9\u9898\u6b63\u89e3\u662f\u7ebf\u6bb5\u6811\u65f6\u4e00\u8138\u61f5\u903c\uff08\u601d\u7ef4\u50f5\u5316\u7684\u592a\u72e0\u4e86\uff09\n\n\u4e0d\u8fc7\u5728\u8bb2\u5b8c\u4e4b\u540e\u8fd9\u9898\u8fd8\u662f\u5f88\u597d\u5199\u7684\n\n\u601d\u8def\uff1a\n\n\u5148\u8003\u8651\u6bcf\u4e2a\u4f4d\u7f6e\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u4f60\u4f1a\u4e0d\u4f1a\u505a\uff0c\u5f88\u7b80\u5355\u5427\uff0c\u53ea\u8981\u770b\u770b\u4ea4\u6362\u5b8c\u7684\u4e24\u4e2a\n\n\u503c\u662f\u5426\u4f1a\u5bf9\u524d\u540e\u4e24\u4e2a\u9020\u6210\u5f71\u54cd\uff0c\u90a3\u4e48\u7ebf\u6bb5\u6811\u76f4\u63a5\u7ef4\u62a4\u51fa\u533a\u95f4\u662f\u5426\u80fd\u6784\u6210\u4e0d\u4e0b\u964d\n\n\u7684\u5e8f\u5217\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u53ea\u9700\u8981\u5224\u65ad \u53ef\u4e0d\u53ef\u4ee5\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u4e09\u8005\u5982\n\n\u679c\u540c\u65f6\u6ee1\u8db3\u5c31OK\u4e86\u90a3\u4e48\u73b0\u5728\u4e00\u4e2a\u4f4d\u7f6e\u6709\u4e24\u4e2a\u6570\u5b57\uff0c\u4e00\u4e2a\u975e\u5e38\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u76f4\n\n\u63a5\u7ef4\u62a4\u4e00\u4e0b\u5de6\u7aef\u70b9\u53d6\u54ea\u4e2a\u6570\u5b57\uff0c\u53f3\u7aef\u70b9\u53d6\u90a3\u4e2a\u6570\u5b57\u5c31\u884c\u7684\u65f6\u5019\u662f\u5426\u53ef\u884c\u3002\u8f6c\u79fb\n\n\u57fa\u672c\u540c\u4e0a\uff0c\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e24\u79cd\u53d6\u503c\uff0c$a[0],a[1]$\uff0c\u90a3\u5c31\u628a\u7ebf\u6bb5\u6811\u5f00\u6210$[0/1]$\n\n\u7c7b\u578b\u7684\uff0c0\u4ee3\u8868\u9009\u4e86\u53cd\u9762\uff0c1\u4ee3\u8868\u9009\u4e86\u6b63\u9762\u5373$T[i][0/1][0/1]$\uff0c\u56e0\u4e3a\u8981\u7ef4\u62a4\u5de6\n\n\u53f3\u7aef\u70b9\u7684\u6240\u4ee5\u662f\u4e24\u4e2a$[0/1]$\uff0c\u90a3$update$\u65f6\u5019\u5927\u529b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u5b8c\u4e86\n\n\u5177\u4f53\u64cd\u4f5c\u8bf7\u89c1\u4ee3\u7801\uff1a\n\n## code\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define R register\n#define LL k<<1\n#define RR k<<1|1\n\nusing namespace std;\nconst int N = 2e5+5;\nint n, m, a[N][2];\nint T[N<<2][2][2];\n\ninline void update(int k, int l, int r) {//\u6bd4\u8f83\u6076\u5fc3\u7684update\n\tR int mid = (l + r) >> 1;\n\tT[k][1][1] = T[k][0][0] = T[k][1][0] = T[k][0][1] = 0;\n\tfor(R int i = 0;i < 2;++ i)\n\t\tfor(R int j = 0;j < 2;++ j) {//\u8ba8\u8bbal\u53f3\u7aef\u70b9\u4e0er\u5de6\u7aef\u70b9\u7684\u5927\u5c0f\u60c5\u51b5\n\t\t\tif(a[mid][0] <= a[mid + 1][0])\n\t\t\t\tT[k][i][j] |= T[LL][i][0] & T[RR][0][j];\n\t\t\tif(a[mid][1] <= a[mid + 1][0])\n\t\t\t\tT[k][i][j] |= T[LL][i][1] & T[RR][0][j];\n\t\t\tif(a[mid][0] <= a[mid + 1][1])\n\t\t\t\tT[k][i][j] |= T[LL][i][0] & T[RR][1][j];\n\t\t\tif(a[mid][1] <= a[mid + 1][1])\n\t\t\t\tT[k][i][j] |= T[LL][i][1] & T[RR][1][j];\n\t\t}\n}\n\ninline void build(int k, int l, int r) {\n\twhile(l == r) {//\u53f6\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\uff0c[1][0]\uff0c[0][1]\u662f\u4e0d\u4f1a\u51fa\u73b0\u7684\n\t\tT[k][1][1] = T[k][0][0] = 1;//\u80fd\u591f\u6210\u5408\u6cd5\u5e8f\u5217\u5c06\u5176\u8d4b\u62101\n\t\treturn;\n\t}\n\tR int mid = (l + r) >> 1;\n\tbuild(LL, l, mid);\n\tbuild(RR, mid + 1, r);\n\tupdate(k, l, r);\n}\n\nvoid change(int k, int l, int r, int pos, int vi, int vc) {\n\tif(l == r) {\n\t\ta[l][0] = vi, a[l][1] = vc;//\u7b80\u5355\u7684\u4ea4\u6362\n\t\treturn;\n\t}\n\tR int mid = (l + r) >> 1;\n\tif(pos <= mid) change(LL, l, mid, pos, vi, vc);\n\telse change(RR, mid + 1, r, pos, vi, vc);\n\tupdate(k, l, r);\n}\n\nint main() {\n//\tfreopen(\"b.in\",\"r\",stdin);\n//\tfreopen(\"b.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(R int i = 1;i <= n;++ i) scanf(\"%d%d\",&a[i][0], &a[i][1]);\n\tscanf(\"%d\",&m);\n\tbuild(1, 1, n);\n\tfor(R int i = 1, c ,d;i <= m;++ i) {\n\t\tscanf(\"%d%d\",&c, &d);\n\t\tR int x = a[c][0], y = a[c][1], xx = a[d][0], yy = a[d][1];\n\t\tchange(1, 1, n, c, xx, yy), change(1, 1, n, d, x, y);\n        //\u6700\u7ec8\u7b54\u6848\u5f52\u7ed3\u5230T[1]\u4e0a\uff0c\u56db\u79cd\u60c5\u51b5\u4e2d\u53ea\u8981\u6709\u4e00\u79cd\u5408\u6cd5\u5373\u53ef\n\t\tif(T[1][1][1] + T[1][0][0] + T[1][1][0] + T[1][0][1] >= 1) puts(\"TAK\");\n\t\telse puts(\"NIE\");\n\t}\n\tfclose(stdin);fclose(stdout);\n\treturn 0;\n}\n```\n2",
        "postTime": 1570094707,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3569 \u3010[POI2014]KAR-Cards\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u7bc7\u7ebf\u6bb5\u6811\uff0c\u4f46\u53c8\u4e0d\u5b8c\u5168\u662f\u7ebf\u6bb5\u6811\u3002\n\n\u5728\u8fd9\u91cc\u5148\u63a8\u8350\u4e2a\u677f\u5b50\u9898\u76ee\uff0c\u7b97\u6cd5\u4e0e\u672c\u9898\u7c7b\u4f3c\u3002\n\n[$Maze \\space 2D$](https://www.luogu.com.cn/problem/CF413E)\n\n## \u9898\u610f\n\n~~\u611f\u89c9\u7ffb\u8bd1\u4e0d\u662f\u5f88\u8d1f\u8d23\uff0c\u6700\u540e\u53e5\u53f7\u90fd\u6ca1\u6253\u3002~~\n\n\u6709 $n$ \u5f20\u5361\u724c\uff0c\u6bcf\u5f20\u90fd\u6709\u4e24\u4e2a\u9762\uff0c\u6bcf\u9762\u6709\u4e00\u4e2a\u6570\u3002\n\n\u6709 $m$ \u6b64\u64cd\u4f5c\uff0c\u7ed9\u5b9a $x,y$\uff0c\u4ea4\u6362\u7b2c $x$ \u5f20\u5361\u724c\u548c\u7b2c $y$ \u5f20\u5361\u724c\u3002\u6bcf\u6b21**\u6309\u64cd\u4f5c\u540e\u5f53\u524d\u5361\u724c\u987a\u5e8f**\uff0c\u968f\u610f\u7ffb\u724c\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u4e00\u79cd\u7ffb\u724c\u7b56\u7565\u80fd\u4f7f**\u6240\u6709\u5361\u724c\u6b63\u9762\u671d\u4e0a\u7684\u6570\u5b57**\u7ec4\u6210\u4e00\u4e2a**\u4e0d\u4e0b\u964d\u5e8f\u5217**\u3002\n\n## $Solution$\n\n\n\u867d\u7136\u4e00\u4e2a\u5361\u724c\u5e8f\u5217\u4e2d\u95f4\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u6709\u5f88\u591a\u79cd\uff0c\u5177\u4f53\u4e00\u70b9\u5c31\u662f $2^n$ \u79cd\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u53ea\u9700\u8981**\u5224\u65ad**\u80fd\u4e0d\u80fd\u7ec4\u6210\u4e0d\u4e0b\u964d\u5e8f\u5217\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d6**\u6700\u4f18**\u65b9\u6848\uff0c\u6bcf\u5f20\u5361\u724c\u5c3d\u91cf\u53d6\u6570\u5b57\u6bd4\u8f83\u5c0f\u7684\u4e00\u9762\uff0c\u5b9e\u5728\u4e0d\u884c\u53d6\u5927\u7684\u4e00\u9762\uff0c\u5eb7\u5eb7\u80fd\u5426\u201c\u575a\u6301\u5230\u6700\u540e\u201d\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal{O(nm)}$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define re register\nusing namespace std;\n\nconst int N=2e5+10;\n\nint n,a[N],b[N],m;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(re int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\t\n\t\tif(a[i]>b[i]) swap(a[i],b[i]);\n\t}\n\tscanf(\"%d\",&m);\t\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tre int x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tswap(a[x],a[y]); swap(b[x],b[y]);\n\t\tbool f=true;\n\t\tint last=a[1];\n\t\tfor(re int j=2;j<=n;j++)\n\t\t{\n\t\t\tif(a[j]>=last) last=a[j];\n\t\t\telse if(b[j]>=last) last=b[j];\n\t\t\telse {\n\t\t\t\tf=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tputs(f?\"TAK\":\"NIE\");\n\t}\n\treturn 0;\n} \n```\n\n\n~~\u7d2b\u9898\u4f1a\u5c31\u8fd9~~ \u4f46\u662f\u5bf9\u4e8e $n\\le2\\times10^5,m\\le 10^6$ \u6765\u8bf4\u80af\u5b9a\u4e0d\u884c\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n### \u6b63\u89e3\n\n> $Maze\\space 2D$ \u7b97\u6cd5\uff0c\u7b80\u79f0\u201c\u59b9\u5b50\u201d\u7b97\u6cd5\uff0c\u662f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u56db\u4e2a\u70b9\u7684\u8fde\u901a\u7684\u7b97\u6cd5\u3002\n\n\u6709\u70b9\u62bd\u8c61\uff0c\u6211\u4eec\u9700\u8981**\u611f\u6027\u7684\u7406\u89e3**\u3002\n\n\u4e0d\u540c\u7684\u5e8f\u5217\u6709\u5f88\u591a\u79cd\uff0c\u4f46\u5bf9\u4e8e\u5b50\u5e8f\u5217 $[l,r]$\uff0c**\u7b2c $l$ \u5f20\u5361\u724c\u548c\u7b2c $r$ \u5f20\u5361\u724c\u7684\u4e0d\u540c\u6392\u5217\u81f3\u591a\u6709\u56db\u79cd**\uff1a\u6b63\u6b63\uff0c\u6b63\u53cd\uff0c\u53cd\u6b63\uff0c\u53cd\u53cd\u3002\u5224\u65ad\u6bcf\u79cd\u80fd\u4e0d\u80fd\u7ec4\u6210\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n\u53ea\u8981\u6bcf\u6b21\u7ef4\u62a4\u8fd9\u56db\u4e2a\u503c\uff08\u5224\u65ad\uff09\uff0c\u518d\u7528\u7ebf\u6bb5\u6811 $pushup$ \u5373\u53ef\u3002\n\n\u7ef4\u62a4\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u91cd\u70b9\u8bb2\u600e\u4e48 $pushup$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b2vidy0r.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n\n\u5982\u56fe\uff0c\u5bf9\u4e8e\u533a\u95f4 $[L,R]$\uff0c\u8981\u7531 $[l_1,r_1],[l_2,r_2]$ \u8f6c\u79fb\u5f97\u6765\u3002\n\n\u5e26\u7ea2\u8272\u7684\u70b9\u7684\u5361\u7247\u662f\u4f5c\u4e3a\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u5361\u7247\uff0c\u5de6\u8fb9\u7684 $2$ \u5f20\u7ea2\u5361\u8981\u5411\u53f3\u8fb9\u7684 $2$ \u5f20\u7ea2\u5361\u8fde\u7ebf\uff0c\u5171 $4$ \u6761\u3002\u84dd\u8272\u7ebf\u4e3a\u5df2\u77e5 $[l_1,r_1],[l_2,r_2]$ \u5206\u522b\u7ef4\u62a4\u7684\u56db\u4e2a\u503c\u3002\n\n\u6211\u4eec\u53d1\u73b0\u56fe\u597d\u50cf\u4e0d\u8fde\u901a\uff0c\u4e2d\u95f4\u6ca1\u6709\u201c\u5173\u8282\u201d\u3002\u4e8e\u662f\u8f6c\u79fb\u65f6\u9700\u8981**\u52a0\u201c\u5173\u8282\u201d\u5e76\u4e14\u5224\u65ad\u662f\u5426\u80fd\u884c**\u3002\u201c\u5173\u8282\u201d\u6307 $r_1,l_2$ \u4e24\u5361\u4e4b\u95f4\u7684\u8fde\u7ebf\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u8f6c\u79fb\u7684\u4f8b\u5b50\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2za1q4v2.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n\n\u56fe\u4e2d\u7684\u7eff\u7ebf\u5c31\u662f\u4e00\u4e2a\u201c\u5173\u8282\u201d\uff0c\u4f46\u662f\u6210\u7acb\u7684\u6761\u4ef6\u662f $r_{1_\\text\u6b63}\\le l_{2_\\text \u53cd}$\u3002\u8fd9\u6837\u624d\u53ef\u80fd\u662f\u4e0d\u4e0b\u964d\u7684\u3002\u8fd9\u6837\u7ea2\u5361 $L_\\text \u6b63,R_\\text\u53cd$ \u5c31\u8fde\u901a\u4e86\u3002\u5224\u65ad\u8f6c\u79fb\u5982\u4e0b\u3002\n\n$$up_L\\rightarrow down_R=up_{l_1}\\rightarrow up_{r_1}\\And up_{r_1}\\le up_{l_2} \\And up_{l_2}\\rightarrow up_{r_2}$$\n\n\u6ce8\uff1a$up$ \u6307\u6b63\u9762\uff0c$down$ \u6307\u53cd\u9762\uff0c\u5982\u56fe\u4e0a\u4f4d\u7f6e\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u8f6c\u79fb\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\u6ce8\u610f\u4ee3\u7801\u4e2d\u5bf9\u53d8\u91cf\u540d\u4e49\u7684\u6ce8\u91ca\uff0c\u5e2e\u52a9\u7406\u89e3\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define re register\nusing namespace std;\n\nconst int N=2e5+10;\n\nint n,a[N],b[N],m;\n\nstruct path { bool p1,p2,p3,p4; };\n// up->up; up->down; down->up; down->down\n// up \u6b63 ; down \u53cd \n\nstruct Tree{ int l,r; path S; } t[N<<2];\n\nil void print(re path p){ cerr<<p.p1<<\" \"<<p.p2<<\" \"<<p.p3<<\" \"<<p.p4<<endl; }\n\nil void pushup(re int p)\n{\n\tre int mid=(t[p].l+t[p].r)>>1,ls=p<<1,rs=p<<1|1;\n\t// mid \u5173\u8282\u5904 ; ls,rs \u5de6\u3001\u53f3\u513f\u5b50 \n\t\n\t// \u8f6c\u79fb\uff0c\u53ef\u4ee5\u81ea\u5df1\u63a8\u4e00\u63a8 \n\t\n\tt[p].S.p1 \t\n\t=  t[ls].S.p1 && a[mid]<=a[mid+1] && t[rs].S.p1 \n\t|| t[ls].S.p1 && a[mid]<=b[mid+1] && t[rs].S.p3\n\t|| t[ls].S.p2 && b[mid]<=a[mid+1] && t[rs].S.p1 \n\t|| t[ls].S.p2 && b[mid]<=b[mid+1] && t[rs].S.p3 ;\n\t\t\n\tt[p].S.p2\n\t=  t[ls].S.p1 && a[mid]<=a[mid+1] && t[rs].S.p2 \n\t|| t[ls].S.p1 && a[mid]<=b[mid+1] && t[rs].S.p4\n\t|| t[ls].S.p2 && b[mid]<=a[mid+1] && t[rs].S.p2\n\t|| t[ls].S.p2 && b[mid]<=b[mid+1] && t[rs].S.p4 ;\n\t\n\t\n\tt[p].S.p3\n\t=  t[ls].S.p3 && a[mid]<=a[mid+1] && t[rs].S.p1\n\t|| t[ls].S.p3 && a[mid]<=b[mid+1] && t[rs].S.p3\n\t|| t[ls].S.p4 && b[mid]<=a[mid+1] && t[rs].S.p1\n\t|| t[ls].S.p4 && b[mid]<=b[mid+1] && t[rs].S.p3 ;\n\t\t\n\tt[p].S.p4\n\t=  t[ls].S.p3 && a[mid]<=a[mid+1] && t[rs].S.p2 \n\t|| t[ls].S.p3 && a[mid]<=b[mid+1] && t[rs].S.p4 \n\t|| t[ls].S.p4 && b[mid]<=a[mid+1] && t[rs].S.p2\n\t|| t[ls].S.p4 && b[mid]<=b[mid+1] && t[rs].S.p4 ;\n\t\n\t// \u4ee5\u4e0a\u4f7f\u7528\u53d8\u91cf\u540d\u662f\u9ad8\u9891\u9519\u5904\uff0c\u6ce8\u610f\u68c0\u67e5  \n\t\t\t\n}\n\nil void build(re int p,re int l,re int r)\n{\n\tt[p].l=l,t[p].r=r;\n\tif(l==r)\n\t\treturn t[p].S=(path){true,true,false,true},void();\n\tre int mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\tpushup(p);\n}\n\nil void modify(re int p,re int x)\n{\n\tif(t[p].l==t[p].r) return ;\n\tre int mid=(t[p].l+t[p].r)>>1;\n\tif(x<=mid) modify(p<<1,x);\n\telse modify(p<<1|1,x);\n\tpushup(p); \n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(re int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d%d\",&a[i],&b[i]);\t\n\t\tif(a[i]>b[i]) swap(a[i],b[i]); \n\t\t// \u6b63\u53cd\u7b49\u7ea7\u4e00\u6837\uff0c\u6309\u987a\u5e8f\u5bf9\u4e8e\u64cd\u4f5c\u6bd4\u8f83\u65b9\u4fbf \n\t}\n\tbuild(1,1,n);\n\tscanf(\"%d\",&m);\t\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tre int x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tswap(a[x],a[y]); swap(b[x],b[y]);\n\t\t// \u8bb0\u5f97\u6362 \n\t\tmodify(1,x); modify(1,y);\n\t\tputs(t[1].S.p1||t[1].S.p2||t[1].S.p3||t[1].S.p4?\"TAK\":\"NIE\");\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1673316999,
        "uid": 576934,
        "name": "Kevin_Mamba",
        "ccfLevel": 5,
        "title": "P3569 KAR-Cards \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1ahttps://www.luogu.org/problemnew/show/P3569\n\n\u8fd9\u9053\u9898\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9,\u6211\u4eec\u7ef4\u62a4w0\u548cw1,\u8868\u793a\u533a\u95f4\u5f00\u5934\u9009\u8f83\u5927\u7684(1)/\u8f83\u5c0f\u7684(0)/\u65e0\u89e3(-1),\u5728\u53f3\u7aef\u70b9\u4ece\u54ea\u91cc\u51fa\u6765\u3002\n\n\u8f6c\u79fb\u65f6\u8d2a\u5fc3\u8f6c\u79fb\u3002\n\n\u89c1\u4ee3\u7801\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls(p) (p<<1)\n#define rs(p) (p<<1|1)\n#define w0(p) (tree[p].w0)\n#define w1(p) (tree[p].w1)\nconst int maxn=3*1e5+10;\nint n,m;\nint a[maxn][2];//0->\u8f83\u5c0f\u7684,1->\u8f83\u5927\u7684 \nstruct seg\n{\n    int w0,w1;\n}tree[maxn<<2];\nvoid up(int p,int l,int r)\n{\n    int mid=(l+r)>>1,t;\n    if((t=w0(ls(p)))==-1) w0(p)=-1;//\u5982\u679c\u5de6\u513f\u5b50\u5c31\u5230\u4e0d\u4e86\u53f3\u8282\u70b9,\u90a3\u4e48\u76f4\u63a5-1 \n    else\n    {\n        t=a[mid][t];\n        if(t<=a[mid+1][0]) w0(p)=w0(rs(p));//\u8d2a\u5fc3\u63a5\u53f3\u513f\u5b50\u5de6\u7aef\u6700\u5c0f\u503c \n        else if(t<=a[mid+1][1]) w0(p)=w1(rs(p));//\u5426\u5219\u5c31\u63a5\u6700\u5927\u503c \n        else w0(p)=-1;//-1\n    }\n    //\u540c\u7406 \n    if((t=w1(ls(p)))==-1) w1(p)=-1;\n    else\n    {\n        t=a[mid][t];\n        if(t<=a[mid+1][0]) w1(p)=w0(rs(p));\n        else if(t<=a[mid+1][1]) w1(p)=w1(rs(p));\n        else w1(p)=-1;\n    }\n}\nvoid build(int p,int l,int r)\n{\n    if(l==r)\n    {\n        w0(p)=0;w1(p)=1;return;\n    }\n    int mid=(l+r)>>1;\n    build(ls(p),l,mid);build(rs(p),mid+1,r);\n    up(p,l,r);\n}\nvoid change(int p,int l,int r,int pos)\n{\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(pos<=mid) change(ls(p),l,mid,pos);\n    else change(rs(p),mid+1,r,pos);\n    up(p,l,r);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i][0],&a[i][1]);\n        if(a[i][0]>a[i][1]) swap(a[i][0],a[i][1]);\n    }\n    build(1,1,n);\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;scanf(\"%d%d\",&x,&y);\n        swap(a[x][0],a[y][0]);swap(a[x][1],a[y][1]);//\u4ea4\u6362\u4e24\u70b9 \n        change(1,1,n,x);change(1,1,n,y);//\u66f4\u65b0 \n        puts(w0(1)==-1?\"NIE\":\"TAK\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1560434331,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3569 [POI2014]KAR-Cards(\u7ebf\u6bb5\u6811)"
    },
    {
        "content": "## \u601d\u8def\n\n\u8003\u8651\u5982\u679c\u4e0d\u5e26\u4fee\u6539\u600e\u4e48\u529e\u3002\u663e\u7136\u53ef\u4ee5\u4ee4 $dp_{i,j,0/1,0/1}$ \u8868\u793a $[i,j]$ \u533a\u95f4\uff0c\u5de6\u7aef\u70b9\u53cd/\u4e0d\u53cd\u8fc7\u6765\uff0c\u53f3\u7aef\u70b9\u53cd/\u4e0d\u53cd\u8fc7\u6765\uff0c\u80fd\u4e0d\u80fd\u6784\u6210\u4e0a\u5347\u5e8f\u5217\u3002\n\n\u53d1\u73b0\u590d\u6742\u5ea6\u592a\u9ad8\u3002\u6240\u4ee5\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811~~\u7b80\u5355\u7c97\u66b4\u7684~~\u7ef4\u62a4\u4e00\u4e0b\u3002\u4ee4 $tr_{p,0/1,0/1}$ \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u7f16\u53f7\u4e3a $p$ \u7684\u8282\u70b9\uff0c\u5de6\u7aef\u70b9\u53cd/\u4e0d\u53cd\u8fc7\u6765\u3001\u53f3\u7aef\u70b9\u53cd/\u4e0d\u53cd\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u80fd\u4e0d\u80fd\u6784\u6210\u5355\u8c03\u4e0a\u5347\u7684\u5e8f\u5217\u3002\n\n\u8f6c\u79fb\u5c31\u6bcf\u6b21\u4ece\u4e2d\u95f4\u8f6c\u79fb\uff0c\u679a\u4e3e 16 \u79cd\u60c5\u51b5\u3002\n\n\u9759\u6001\u7684\u8003\u8651\u5b8c\u4e86\uff0c\u6211\u4eec\u8003\u8651\u52a8\u6001\u7684\u3002\u7ed3\u679c\u53d1\u73b0\u4ea4\u6362\u64cd\u4f5c\u663e\u7136\u5bf9\u7ebf\u6bb5\u6811\u6765\u8bf4\u76f4\u63a5\u53d8\u6210\u4e24\u4e2a\u4fee\u6539\u64cd\u4f5c\u5373\u53ef\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\n\n\u7ebf\u6bb5\u6811\u4e0a\u9700\u8981\u8bb0\u5f55\uff1a\n\n1. $tr_{p,0/1,0/1}$ \u8868\u793a $p$ \u8282\u70b9\uff0c\u5de6\u53f3\u7aef\u70b9\u5206\u522b\u662f $4$ \u79cd\u7ec4\u5408\u7684\u65f6\u5019\u80fd\u4e0d\u80fd\u6784\u6210\u5355\u8c03\u4e0a\u5347\u3002\n\n2. $z_p$ \u548c $f_p$\uff0c\u8868\u793a\u5f53\u524d\u6b63\u9762\u548c\u53cd\u9762\u4e0a\u7684\u6570\u5b57\u3002\u7531\u4e8e\u53ea\u6709\u5355\u70b9\u4fee\u6539\uff0c\u4e3a\u4e86\u65b9\u4fbf `push_up` \u6211\u4eec\u8fd9\u91cc\u4f7f\u7528 $a_{i,0/1}$ \u76f4\u63a5\u8bb0\u5f55\u3002\n\n\u81f3\u6b64\u672c\u9898\u5f97\u89e3\u3002\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u5e26 $2^4=16$ \u7684\u5e38\u6570\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN=200005;\n\nint a[MAXN][2];\n\nbool tr[MAXN<<2][2][2];\n\ninline void push(int p,int l,int r){ // \u4e0a\u4f20\n\tmemset(tr[p],0,sizeof(tr[p])); // \u4e00\u5b9a\u8981 memset\n\tint mid=(l+r)>>1;\n\tfor(int i=0;i<2;i++)\n\tfor(int j=0;j<2;j++)\n\tfor(int k=0;k<2;k++)\n\tfor(int q=0;q<2;q++){\n\t\tif(a[mid][j]>a[mid+1][k]) continue; // \u5982\u679c\u8fb9\u754c\u7b26\u5408\u6761\u4ef6\u624d\u8fdb\u884c\u8f6c\u79fb\n\t\ttr[p][i][q]|=(tr[p<<1][i][j]&tr[p<<1|1][k][q]);\n\t}\n}\nvoid build(int p,int l,int r){ // \u5efa\u6811\u9884\u5904\u7406 \n\tif(l==r){\n\t\tfor(int i=0;i<2;i++) tr[p][i][i]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(p<<1,l,mid);\n\tbuild(p<<1|1,mid+1,r);\n\tpush(p,l,r);\n}\nvoid upd(int p,int l,int r,int t){ // \u4fee\u6539 \n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(t<=mid) upd(p<<1,l,mid,t);\n\telse upd(p<<1|1,mid+1,r,t);\n\tpush(p,l,r);\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\tint n; cin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i][0]>>a[i][1];\n\tbuild(1,1,n);\n\tint q; cin>>q;\n\twhile(q--){\n\t\tint x,y; cin>>x>>y;\n\t\tswap(a[x][0],a[y][0]);\n\t\tswap(a[x][1],a[y][1]);\n\t\tupd(1,1,n,x),upd(1,1,n,y);\n\t\t\n\t\tbool flag=0;\n\t\tfor(int i=0;i<2;i++)\n\t\t\tfor(int j=0;j<2;j++)\n\t\t\t\tflag|=tr[1][i][j]; // \u5168\u5c40\u67e5\u8be2\n\t\tif(flag) puts(\"TAK\");\n\t\telse puts(\"NIE\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1665566573,
        "uid": 195198,
        "name": "E1_de5truct0r",
        "ccfLevel": 7,
        "title": "P3569 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4e0d\u5e26\u4fee\uff0c\u4e00\u4e2a\u8d2a\u5fc3\u5c31\u597d\u4e86\u5bf9\u5427\u3002\n\n\u90a3\u4e48\u5e26\u4fee\u5462\uff1f\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u6bcf\u6b21\u90fd\u91cd\u65b0\u8d2a\u5fc3\uff0c\u6240\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u8d2a\u5fc3\u51fa\u6765\u7684\u7ed3\u679c\uff0c\u6bcf\u6b21\u53ea\u4fee\u6539\u82e5\u5e72\u533a\u95f4\uff0c\u7528\u51e0\u4e2a\u5b50\u533a\u95f4\u7684\u503c\u7ec4\u5408\u6210\u4e00\u4e2a\u5927\u533a\u95f4\u7684\u503c\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u3002\u56e0\u4e3a\u4e00\u4e2a\u533a\u95f4\u7684\u8d2a\u5fc3\u51fa\u6765\u7684\u503c\u53ea\u4e0e\u5f00\u5934\u5143\u7d20\u7684\u53d6\u503c\u6709\u5173\uff0c\u6240\u4ee5\u7ef4\u62a4\u7b2c\u4e00\u4e2a\u5143\u7d20\u53d6a/b\u65f6\u6b64\u533a\u95f4\u6700\u540e\u5143\u7d20\u7684\u6700\u5c0f\u53d6\u503c\u5373\u53ef\u3002\n\n\u7136\u540e\u5408\u5e76\u7684\u65f6\u5019\u987a\u4fbf\u8003\u8651\u4e00\u4e0b\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u56de\u7b54\u8be2\u95ee\u65f6\u53ea\u8981\u770b\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u662f\u5426\u65e0\u89e3\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\n(\u6ce8\u610f\u5e38\u6570\u4f18\u5316\uff0c\u6211\u4e00\u5f00\u59cb\u5e38\u6570\u6709\u70b9\u5927\uff0cTLE\u4e86\u4e00\u4e2a\u70b9....)\n```cpp\n#include <cstdio>\n#include <algorithm>\n\ninline void read(int &x) {\n\t x = 0;\n\t char c = getchar();\n\t while(c < '0' || c > '9') {\n\t\tc = getchar();\n\t }\n\t while(c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t }\n\t return;\n}\n\nconst int N = 200010, INF = 0x3f3f3f3f;\n\nint high_l[N << 2], a[N], b[N], high_s[N << 2];\n\ninline void pushup(int l, int r, int o) {\n\tint ls = o << 1;\n\tint rs = ls | 1;\n\tint mid = (l + r) >> 1;\n\t// high_small[o] \n\tif(high_s[ls] == -1) {\n\t\thigh_s[o] = -1;\n\t}\n\telse {\n\t\tif(a[mid + 1] >= high_s[ls]) {\n\t\t\thigh_s[o] = high_s[rs];\n\t\t}\n\t\telse if(b[mid + 1] >= high_s[ls]) {\n\t\t\thigh_s[o] = high_l[rs];\n\t\t}\n\t\telse {\n\t\t\thigh_s[o] = -1;\n\t\t}\n\t}\n\t// high_large[o]\n\tif(high_l[ls] == -1) {\n\t\thigh_l[o] = -1;\n\t}\n\telse {\n\t\tif(a[mid + 1] >= high_l[ls]) {\n\t\t\thigh_l[o] = high_s[rs];\n\t\t}\n\t\telse if(b[mid + 1] >= high_l[ls]) {\n\t\t\thigh_l[o] = high_l[rs];\n\t\t}\n\t\telse {\n\t\t\thigh_l[o] = -1;\n\t\t}\n\t}\n\t\n\treturn;\n}\n\ninline void build(int l, int r, int o) {\n\tif(l == r) {\n\t\thigh_s[o] = small(r);\n\t\thigh_l[o] = large(r);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(l, mid, o << 1);\n\tbuild(mid + 1, r, o << 1 | 1);\n\tpushup(l, r, o);\n\treturn;\n}\n\ninline void update(int p, int l, int r, int o) {\n\tif(l == r) {\n\t\thigh_s[o] = small(r);\n\t\thigh_l[o] = large(r);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(p <= mid) {\n\t\tupdate(p, l, mid, o << 1);\n\t}\n\telse {\n\t\tupdate(p, mid + 1, r, o << 1 | 1);\n\t}\n\tpushup(l, r, o);\n\treturn;\n}\n\nint main() {\n\tint n;\n\tread(n);\n\tfor(int i = 1; i <= n; i++) {\n\t\tread(a[i]);\n\t\tread(b[i]);\n\t\tif(a[i] > b[i]) {\n\t\t\tstd::swap(a[i], b[i]);\n\t\t}\n\t}\n\tbuild(1, n, 1);\n\tint m;\n\tread(m);\n\tfor(int i = 1, x, y; i <= m; i++) {\n\t\tread(x);\n\t\tread(y);\n\t\tif(x > y) {\n\t\t\tstd::swap(x, y);\n\t\t}\n\t\tstd::swap(a[x], a[y]);\n\t\tstd::swap(b[x], b[y]);\n\t\tupdate(x, 1, n, 1);\n\t\tupdate(y, 1, n, 1);\n\t\tif(high_l[1] != -1 || high_s[1] != -1) {\n\t\t\tprintf(\"TAK\\n\");\n\t\t}\n\t\telse {\n\t\t\tprintf(\"NIE\\n\");\n\t\t}\n\t}\n\t\u3000\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1540649562,
        "uid": 55600,
        "name": "huyufeifei",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3569 \u3010[POI2014]KAR-Cards\u3011"
    }
]