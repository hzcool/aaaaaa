[
    {
        "content": "\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cdC++11\u7279\u6709\u7684\u65b9\u6cd5\uff1a\u6784\u9020\u51fd\u6570\u3002\n\n\u6784\u9020\u51fd\u6570\uff0c\u5c31\u662f\u5728\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528node name(data)\u7684\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\u867d\u7136\u6709\u91cd\u8f7d=\u8fd0\u7b97\u7b26\u5927\u6cd5\uff0c\u4f46\u662f\u672c\u4eba\u66f4\u52a0\u504f\u5411\u4e8e\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u6837\u4fbf\u4e8e\u7f16\u5199\u548c\u7406\u89e3\u3002\n\n\u6784\u9020\u4e00\u4e2anode\u7ed3\u6784\u4f53\u5b58\u50a8B\u8fdb\u5236\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7f16\u5199node\u7684\u6784\u9020\u51fd\u6570\uff08\u5c31\u662f\u5c0610\u8fdb\u5236\u6574\u6570\u8f6c\u5316\u4e3aB\u8fdb\u5236\u6570\u5b57\u7684\u51fd\u6570\uff09\uff0c\u4e00\u4e2a\u8f93\u51fa\u51fd\u6570\uff0c\u8fd8\u6709\u5224\u65ad\u8fd9\u4e2a\u8fdb\u5236\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u7684\u51fd\u6570\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u8bf7\u7559\u610f\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint b;\ninline char c(int x){if(x>=0&&x<=9)return x+'0';return x-10+'A';}\nstruct node\n{\n    int l,a[20];//\u8fdb\u5236\u6570\u6700\u5927\u957f\u5ea6\u4e3a17\n    node(int x){for(l=0;x;l++)a[l]=x%b,x/=b;}//\u8f6c\u6362\u8fdb\u5236\u6570\uff0c\u5176\u4e2da[l-1]\u662f\u6700\u9ad8\u4f4d\uff0ca[0]\u662f\u6700\u4f4e\u4f4d\n    void out(){for(int i=l-1;i>=0;i--)printf(\"%c\",c(a[i]));}//\u4ece\u9ad8\u5230\u4f4e\u4f9d\u6b21\u8f93\u51fa\n    bool tf(){for(int i=0;i<l;i++)if(a[i]!=a[l-i-1])return false;return true;}//\u5224\u65ad\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u662f\u56de\u6587\u6570\uff0c\u6ce8\u610f\u53ef\u4ee5\u901a\u8fc7i<=l/2\u6765\u52a0\u901f\uff0c\u51cf\u5c11\u5197\u4f59\u8fd0\u7b97\n};\nint main()\n{\n    scanf(\"%d\",&b);\n    for(int i=1;i<=300;i++)//\u4ece1\u5230300\u66b4\u529b\u679a\u4e3e\n    {\n        node n(i*i);//\u5c06i*i\u8f6c\u5316\u4e3a\u8fdb\u5236\u4e3ab\u7684\u6574\u6570\n        if(n.tf()){node m(i);m.out();putchar(' ');n.out();putchar('\\n');}//\u5982\u679cn\u662f\u4e00\u4e2ab\u8fdb\u5236\u4e0b\u7684\u56de\u6587\u6570\uff0c\u8f93\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n```",
        "postTime": 1507809886,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "## \u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u8d34\u4ee3\u7801\uff0c\u5982\u4e0b\u3002\u3002\n\n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar a1[10000000],a[10000000];\nint jz(int b,int a) {\n    int j=0;\n    while(a!=0) {\n        j++;\n        a1[j]=a%b+'0';\n        if(a1[j]>'9')a1[j]=a1[j]-'10'+'A';\n        a/=b;\n    }\n    int l=1,r=j;\n    while(l<r) {\n        if(a1[l]!=a1[r]) {\n            return false;\n        }\n        l++;\n        r--;\n    }\n    return true;\n}\nint jzz(int b,int a) {\n    int j=0;\n    while(a!=0) {\n        j++;\n        a1[j]=a%b+'0';\n        if(a1[j]>'9'||a1[j]<'0')a1[j]=a1[j]-'9'+'A'-1;\n        a/=b;\n    }\n    for(int i=j;i>=1;i--)cout<<a1[i];\n}\nint main() {\n    int a;\n    cin>>a;\n    for(int i=1; i<=300; i++) {\n        if(jz(a,i*i)==true){\n        jzz(a,i);\n        cout<<\" \";\n        jzz(a,i*i);\n        cout<<endl;\n        }\n    }\n    return 0;\n}\n```\n### \u9996\u5148\uff0c\u51fd\u6570jz\u662f\u7528\u6765\u5224\u65ad\u6570a\u8f6c\u6362\u4e3ab\u8fdb\u5236\u4e0b\u662f\u5426\u4e3a\u56de\u6587\u6570\u7684\uff0c\u8fd9\u53ef\u4ee5\u7528while\u5faa\u73af\u6765\u89e3\u51b3\n```cpp\nint jz(int b,int a) {\n    int j=0;\n    while(a!=0) {\n        j++;\n        a1[j]=a%b+'0';\n        if(a1[j]>'9')a1[j]=a1[j]-'10'+'A';\n        a/=b;\n    }\n    int l=1,r=j;\n    while(l<r) {\n        if(a1[l]!=a1[r]) {\n            return false;\n        }\n        l++;\n        r--;\n    }\n    return true;\n}\n```\n### \u5176\u6b21jzz\u662f\u7528\u6765\u8f93\u51fa\u7684\uff0c\u628a\u5341\u8fdb\u5236\u6570\u8f6c\u6362\u4e3aa\u8fdb\u5236\u6570\u8f93\u51fa\u7684\uff1b\n```cpp\nint jzz(int b,int a) {\n    int j=0;\n    while(a!=0) {\n        j++;\n        a1[j]=a%b+'0';\n        if(a1[j]>'9'||a1[j]<'0')a1[j]=a1[j]-'9'+'A'-1;\n        a/=b;\n    }\n    for(int i=j;i>=1;i--)cout<<a1[i];\n}\n```\n## \u6700\u540e\u81ea\u7136\u662f\u4ece1-300\u8fdb\u884c\u679a\u4e3e\u4e86qwq...",
        "postTime": 1540981802,
        "uid": 137284,
        "name": "dsjkafdsaf",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "## \u9996\u5148\uff0c\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cd\u65b9\u6cd5\uff1a\u8f6c\u6362\u8fdb\u5236\n\n\u628aa\u8f6c\u5316\u4e3ab\u8fdb\u5236\uff1a\n\n\u628aa\u4e0d\u65ad\u53bb\u6a21b\uff0c\u76f4\u5230a=0\uff0c\u6bcf\u6b21\u6a21\u5b8c\u4ee5\u540ea\u9664\u4ee5b\u3002\n\n\u6700\u540e\uff0c\u628a\u6240\u6709\u7b97\u51fa\u7684\u4f59\u6570\u5012\u8fc7\u6765\u5199\uff0c\u5c31\u662fa\u7684b\u8fdb\u5236\u3002\n\n#### \u5982\u679cb>10\uff0c\u5219\u7528A\u8868\u793a10\uff0cB\u8868\u793a11\u7b49\u7b49\u3002\n\n\u7136\u540e\u518d\u770b\u8fd9\u9053\u9898\u76ee\uff0c\u5927\u4f53\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u7f16\u5199\u4e09\u4e2a\u51fd\u6570\uff08\u8ba9\u4e3b\u7a0b\u5e8f\u5c3d\u53ef\u80fd\u77ed\uff09\uff0c\u5206\u522b\u8f6c\u6362\u8fdb\u5236\u5e76\u5b58\u50a8\u957f\u5ea6\u3001\n\n\u5224\u65ad\u56de\u6587\u6570\uff1a\u5224\u65ad\u6570\u7ec4\u4ee5i\u4e3a\u4e0b\u6807\u7684\u6570\u662f\u5426\u7b49\u4e8e\u5b83\u6240\u5bf9\u5e94\u6570\u3001\n\n\u5224\u65ads[i]\u4e0es[s[0]+1-i]\u662f\u5426\u76f8\u7b49\u4ee5\u53ca\u63a7\u5236\u6253\u5370\u7684\u51fd\u6570print\uff1a\n\n\u5982\u679c\u6b64\u6570\u5c0f\u4e8e\u7b49\u4e8e9\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\u3002\n\n\u5426\u5219\u8f93\u51fa\u5b83\u6240\u5bf9\u5e94\u7684\u5b57\u6bcd\uff08\u51cf\u53bb10\uff0c\u518d\u52a0\u4e0a\u5b57\u7b26A\uff09\u3002\n\n\u4e3b\u51fd\u6570\u4e2d\uff0c\u4ece1-300\u8fdb\u884c\u5faa\u73af\uff0c\u8c03\u7528\u4e09\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u8f93\u51fai\u548ci\n\n\u4e58i\u3002\n\n\u6700\u540e\uff0c\u8d34\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934 \nusing namespace std;\nint n;\nint s[301];\nvoid jz(int a,int b)//\u8f6c\u6362\u8fdb\u5236 \n{\n    int r=0;\n    while(a){\n        s[++r]=a%b;\n        a/=b;\n    }\n    s[0]=r;\n}\nbool change(){//\u5224\u65ads[i]\u4e0es[s[0]+1-i]\u662f\u5426\u76f8\u7b49\n    for(int i=1;i<=s[0];i++)\n\t{\n    \tif(s[i]!=s[s[0]+1-i]) return false;\n    }\n    return true;\n}\nvoid print(){//\u6253\u5370 \n    for(int i=s[0];i>=1;i--)\n\t{\n        if(s[i]<=9) cout<<s[i];\n        else cout<<(char)(s[i]-10+'A');\n    }\n} \nint main() \n\t{\n\tcin>>n;\n\tfor(int i=1;i<=300;i++)\n\t{//\u4ece1-300\u8fdb\u884c\u5faa\u73af \n    \tjz(i*i,n);//\u8c03\u7528\u51fd\u6570 \n    \tif(change()){\n        \tjz(i,n);\n\t        print();\n\t        cout<<' ';\n\t        jz(i*i,n);\n\t        print();\n\t        puts(\"\");\n\t\t}\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1555830275,
        "uid": 146179,
        "name": "Violette",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "# \u82e5\u4e0d\u662f\u4f60\u6709\u7740\u56de\u6587\u7684\u5e73\u65b9\uff0c\u6211\u600e\u4f1a\u628a\u6b7b\u5b88\u7684AC\u653e\u4efb\u4e86~\n\u4e0d\u60f3AC\u90fd\u662f\u5047\u7684\uff0c\u6bd5\u7adf\u6211\u7684\u5fc3\u4e5f\u662f\u8089\u505a\u7684   \n\n**\u8f6c\u8fdb\u5236**\u65f6\u6211\u5fc3\u91cc\u7684for\uff0c\u5c31\u53d8\u6210**while**  \n\n\u4e0d\u60f3AC\u90fd\u662f\u5047\u7684\uff0c\u5982\u679c\u6211\u6709\u5b66\u8fc7**case**\u8bed\u53e5  \n\n\u7528\u7740**while\u548ccase**\u7684\u4eba\uff0c**\u8f6c\u8fdb\u5236**\u6760\u6760\u7684  \n\n\u82e5\u4e0d\u662f\u4f60\u6709\u7740\u56de\u6587\u7684\u5e73\u65b9\uff0c\u6211\u600e\u4f1a\u628a\u6b7b\u5b88\u7684\u7684AC\u653e\u4efb\u4e86~  \n\nWA\u7684\u8bdd\u4f60\u90fd\u8bf4\uff0cAC\u7684\u8bdd\u4f60\u4e0d\u8bf4  \n\n\u6211\u5374\u628a**for\u5230300**\u5f53\u4f5c\u4f60\u8f6c\u8fdb\u5236\u7684\u8eaf\u58f3   \n\n\u2014\u2014\u2014\u2014(\u8fdb\u5236\u8272)by.\u672a\u6765\n## \u6b63\u7ecf\u53d1\u9898\u89e3\n\u6ca1\u9519\u5c31\u662f\u8fd9\u6837\u7f16    \n\n\u7528for\u8bed\u53e5\u63a7\u5236\u8981\u5224\u65ad\u662f\u5426\u56de\u6587\u7684$\\color{red}\\text{\u539f\u6570}$  \n\n\u6ce8\u610f\uff01\uff01\uff01\uff01\uff01\u7136\u540e\u7528\u4e00\u4e2a\u53d8\u91cf\u4fdd\u5b58$\\color{red}\\text{i\u7684\u5e73\u65b9}$       \n\n\u4e00\u5c42while\u8f6c\u8fdb\u5236\u653e\u8fdb\u4e00\u4e2a\u5b57\u7b26\u4e32s\u91cc      \n\n\u5224\u65ad\u56de\u6587\u540e\uff0c\u8f93\u51fa\u56de\u6587\u6570\u548c\u539f\u6570        \n\n\u6ce8\u610f\uff01\uff01\uff01\uff01\uff01$\\color{red}\\text{\u539f\u6570\u5012\u5e8f\u8f93\u51fa}$      \n\n\u4e0a\u4ee3\u7801(\u4ee3\u7801\u5f88\u4e11\uff0c\u522b\u5acc\u5f03)\uff1a\n```pascal\nvar n,m,i,l,x,a,j:longint;\ns,t,st:string;\nb:boolean;\nbegin\n  read(n);\n  for i:=1 to 300 do\n    begin\n      b:=true;\n      s:='';\n      m:=i*i;\n      while m<>0 do\n        begin\n          a:=m mod n;\n          m:=m div n;\n          case a of\n            0,1,2,3,4,5,6,7,8,9:str(a,t);\n            10:t:='A';\n            11:t:='B';\n            12:t:='C';\n            13:t:='D';\n            14:t:='E';\n            15:t:='F';\n            16:t:='G';\n            17:t:='H';\n            18:t:='I';\n            19:t:='J';\n            20:t:='K';\n          end;\n          s:=s+t;\n        end;\n      for j:=1 to length(s) div 2 do\n        if s[j]<>s[length(s)-j+1] then b:=false;\n      if not b then continue;\n      x:=i;\n      t:='';\n      st:='';\n      while x<>0 do\n        begin\n          a:=x mod n;\n          x:=x div n;\n          case a of\n            0,1,2,3,4,5,6,7,8,9:str(a,t);\n            10:t:='A';\n            11:t:='B';\n            12:t:='C';\n            13:t:='D';\n            14:t:='E';\n            15:t:='F';\n            16:t:='G';\n            17:t:='H';\n            18:t:='I';\n            19:t:='J';\n            20:t:='K';\n          end; \n          st:=st+t;\n        end;\n      for j:=length(st) downto 1 do\n        write(st[j]);\n      writeln(' ',s);\n    end;\nend.\n\n```\n",
        "postTime": 1556755238,
        "uid": 108353,
        "name": "\u672a\u6765miss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint a[100],w;//a\u5b58\u50a8\u4f59\u6570\uff0cw\u8ba1\u7b97\u6570\u4f4d \nint b[26]={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};//\u66b4\u529b\u7684\u8f6c\u6362 \nbool change(int n,int k){//\u9664k\u53d6\u4f59\u6cd5 \n    int flag=1;\n    while(n!=0){\n        a[++w]=n%k;\n        n/=k;\n    }\n    for(int u=1;u<=w/2+1;u++)//\u68c0\u9a8c\u56de\u6587 \n        if(a[u]!=a[w-u+1]){\n            flag=0;break;\n}\n    return flag;\n}\nint main(){\n    int i,j,k,m,n;\n    scanf(\"%d\",&n);\n    for(i=1;i<=300;i++){ \n        j=i*i;w=0; //w\u8981\u968f\u65f6\u6e05\u7a7a\uff0c\u6570\u4f4d\u4f1a\u65f6\u523b\u53d8\u5316 \n    if(change(j,n)==1){\n        w=0;change(i,n);\n        for(int u=w;u>=1;u--){        //\u6ce8\u610fu\u8981\u4ece w\u679a\u4e3e\u5230 1\uff0c\u9664k\u53d6\u4f59\u6cd5\u8981\u5012\u7740\u6570 \n        if(a[u]<10)printf(\"%d\",a[u]);\n        else printf(\"%c\",b[a[u]-10]);\n    }\n        printf(\" \");\n        //\u8f93\u51fa\u539f\u6570\n        w=0;change(j,n);\n        for(int u=1;u<=w;u++){        //\u56de\u6587\u6570\u4ece1\u679a\u4e3e\u5230w\u8f93\u51fa\u90fd\u65e0\u6240\u8c13 \n        if(a[u]<10)printf(\"%d\",a[u]);\n        else printf(\"%c\",b[a[u]-10]);\n        }\n        printf(\"\\n\");\n    }    \n}\n    return 0;\n}\n```",
        "postTime": 1488079152,
        "uid": 19622,
        "name": "\u7f57\u65c5\u6d32",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u6ef4\uff0c\u9996\u5148\uff0c\u6211\u4eec\u4ece\u4e00\u81f3\u4e09\u767e\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\uff0c\u901a\u8fc7judge\u51fd\u6570\u5224\u65ad\u3002\u5148\u7528a\u6570\u7ec4\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\uff0ctail\u662f\u6807\u8bb0\u4f4d\u7f6e\u7528\u7684\u3002\u8fdb\u5236\u8f6c\u6362\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u4e24\u7aef\u8fdb\u884c\u6bd4\u8f83\uff0c\u53d6\u4e00\u7ec8\u70b9(tail+1)/2\uff0c\u4e24\u7aef\u5411\u4e2d\u95f4\u9760\u62e2\uff0c\u5982\u679c\u8bf4\u53d1\u73b0\u4e0d\u4e00\u6837\u5219stop=0\u5f39\u51fa\u3002\n\n\n------------\n\n\u5bf9\u4e8eprint\u9636\u6bb5\u4e5f\u662f\u4e00\u6837\u7684\u5148\u8fdb\u5236\u8f6c\u6362\uff0c\u7136\u540e\u5728\u5012\u5e8f\u8f93\u51fa\uff0c\u56e0\u4e3a\u8fdb\u5236\u8f6c\u6362\u7684\u65f6\u5019\u5b83\u662f\u53cd\u7684\uff01\u5f53\u5b83\u8981\u8f93\u51fa10\u4ee5\u4e0a\u7684\u6570\u65f6\u7528char\u7c7b\u578b\u7684g\u6570\u7ec4\u5373\u53ef\n\n\u8fd9\u662f\u672c\u4eba\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c~~\u8bf7\u5927\u4f6c\u89c1\u8c05~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint b;\nint a[1000];\nchar g[12]={'A','B','C','D','E','F','G','H','I','J','K','L'};//\u6807\u51fa\u8fd9\u4e9b\u5b57\u6bcd\nbool judge(int x)\n{\n   int stop=1,tail=1;\n   while(x!=0)//\u8fdb\u5236\u8f6c\u6362\n   {\n   \t  a[tail]=x%b;\n   \t  x=x/b;\n   \t  tail++;\n   }\n   tail--;\n   for(int i=1;i<=(tail+1)/2;i++)\n   \t  if(a[i]!=a[tail+1-i])\n   \t  {\n   \t     stop=0;//\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\n\t\t break;\t\n\t  }\n\tif(stop==1)\n\t  return 1;\n\telse \n\t  return 0;\n}\nvoid print(int x)\n{\n   int tail=1;\n   while(x!=0)//\u7167\u4f8b\u8fdb\u5236\u8f6c\u6362\n   {\n   \t  a[tail]=x%b;\n   \t  x=x/b;\n   \t  tail++;\n   }\n   tail--;\n   for(int i=tail;i>=1;i--)//\u5012\u53d9\u8f93\u51fa\n   {\n   \t  if(a[i]<=9)\n   \t    printf(\"%d\",a[i]);\n   \t  else\n   \t    printf(\"%c\",g[a[i]-10]);\n   \t  \n   }\n} \nint main() \n{\n\tscanf(\"%d\",&b);\n\tfor(int i=1;i<=300;i++)\n\t{\n\t\tif(judge(i*i)==1)\n\t\t{\n\t\t  \tprint(i);//\u6253\u5370\u8fd9\u4e2a\u6570\n\t\t    printf(\" \");\n\t\t\tprint(i*i);//\u6253\u5370\u8fd9\u4e2a\u6570\u7684\u5e73\u65b9\n\t\t\tprintf(\"\\n\");  \t\n\t\t}\n\t}/**/\n\treturn 0;\n}\n```",
        "postTime": 1528357627,
        "uid": 55818,
        "name": "DrMao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "P\u515a\u7684\u9898\u89e3\u6765\u54af\n\n\u975e\u5e38\u6c34\u7684\u4e00\u9053\u6a21\u62df\u9898 \u679a\u4e3e1\u5230300 \u5148\u5224\u65ad\u5e73\u65b9\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570\u5373\u53ef\n\n\u4e0b\u9762\u4eae\u4ee3\u7801\n\n```cpp\nvar\n  bi:boolean;\n  a1:longint;\n  i,j,m,n,k,p,tot:longint;\n  a,b:array[0..10]of char;\n  s:string;\nbegin\n  readln(n);\n  for i:=1 to 300 do  //\u679a\u4e3e\n    begin\n      a1:=i*i; tot:=0; s:=''; //\u5148\u628a\u5e73\u65b9\u6570\u6362\u6210B\u8fdb\u5236\n      while a1<>0 do\n        begin\n          k:=a1 mod n; inc(tot);\n          if (k>=0)and(k<=9) then\n            a[tot]:=chr(k+48) //\u5982\u679c\u662f0\u52309\u5c31\u662f\u6570\u5b57 \u53cd\u4e4b\u662f\u5b57\u6bcd\n          else\n            a[tot]:=chr(k-10+65);\n          a1:=a1 div n;  s:=s+a[tot];//\u7528\u6765\u8bb0\u5f55\u987a\u5e8f\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\n        end;\n      bi:=true;\n      for j:=1 to tot do\n        if s[j]<>a[tot-j+1] then\n          begin\n            bi:=false; break;\n          end;\n      if bi=true then//\u5982\u679c\u5e73\u65b9\u6570\u662f\u56de\u6587\u6570\u7684\u8bdd\n        begin\n          a1:=i; p:=0;\n          while a1<>0 do  //\u518d\u628a\u539f\u6570\u6362\u6210B\u8fdb\u5236\n            begin\n              k:=a1 mod n; inc(p);\n              if (k>=0)and(k<=9) then\n                b[p]:=chr(k+48)\n              else\n                b[p]:=chr(k-10+65);\n              a1:=a1 div n;\n            end;\n          for j:=p downto 1 do write(b[j]); write(' ');\n          for j:=tot downto 1 do write(a[j]); writeln; \n        end;\n    end;\nend.//\u662f\u4e0d\u662f\u975e\u5e38\u7684\u7b80\u5355\uff1f\n\n```",
        "postTime": 1512038928,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint i,m,n,k,t,j,len,l,ll,sum,cl,kkk;char ans[20]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J'},answer[100]={'l'},c[100]={'l'};\nvoid change(int a)\n{\n    int k;\n    k=a%m;\n    a=a/m;\n    if (a>0)\n        change(a);\n    answer[t]=ans[k],t++;    \n}\nint  main()\n{\n    cin>>m;\n    for(i=1;i<=300;i++)\n    {    \n        kkk=0;\n        t=1;\n        sum=i*i;\n        change(sum);//\u5c06\u8fd9\u4e2a\u6570\u7684\u5e73\u65b9\u8f6c\u6362\u4e3a\u6307\u5b9a\u8fdb\u5236 \n        len=strlen(answer)-1;\n    //    cout<<endl;    \n        for(j=1,l=len;j<=len,l>0;j++,l--)\n            if(answer[l]!=answer[j]) kkk=1;//\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570 \n        //cout<<kkk;    \n            if(kkk==0)//\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u5e73\u65b9\u662f\u56de\u6587\u6570 \n            {\n                for(ll=1;ll<=len;ll++)\n                    c[ll]=answer[ll];//\u5c06\u8fd9\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u6307\u5b9a\u8fdb\u5236\u8f6c\u5b58\u8fdbc\u6570\u7ec4 \n                t=1;    \n                for(ll=1;ll<=100;ll++)\n                    answer[ll]='\\0';//\u521d\u59cb\u5316answer\u6570\u7ec4\uff08\u524d\u9762\u56e0\u4e3ai\u5728\u4e0d\u65ad\u589e\u5927\uff0c\u6240\u4ee5\u540e\u9762\u7684\u6570\u7684\u5e73\u65b9\u7684\u4f4d\u6570\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u524d\u9762\u7684\u6570\uff0c\u6240\u4ee5\u4e4b\u524d\u7684\u7ed3\u679c\u4f1a\u88ab\u8986\u76d6\uff0c\u56e0\u6b64\u4e0d\u7528\u521d\u59cb\u5316\uff09 \n                change(i);//\u5c06i\u8f6c\u6362\u4e3a\u6307\u5b9a\u8fdb\u5236 \n                cl=strlen(answer)-1;//\u56e0\u4e3aanswer[0]\u8d4b\u4e86\u503c\uff0c\u6240\u4ee5\u957f\u5ea6\u8981\u51cf\u53bb1\u624d\u662f\u771f\u5b9e\u7684\u957f\u5ea6 \n                //cout<<i<<' ';\n                for(ll=1;ll<=cl;ll++)    \n                    printf(\"%c\",answer[ll]);//\u8f93\u51fai \uff08B\u8fdb\u5236\uff09 \n                cout<<' ';    \n                for(ll=1;ll<=len;ll++)    \n                    printf(\"%c\",c[ll]);//\u8f93\u51fa i\u7684\u5e73\u65b9\uff08B\u8fdb\u5236\uff09 \n                cout<<endl;    \n            }\n    }\n    change(n);\n    return 0;    \n}\n```",
        "postTime": 1498799389,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u867d\u7136\u9898\u76ee\u4e2d\u770b\u4e0d\u51fa\u6765\n## \u4f46\u8fd9\u4e2a\u9898\u8003\u7684\u662f\u8fdb\u5236\u8f6c\u6362\u5427\n\u5224\u65ad\u56de\u6587\u6570\u8c01\u4e0d\u4f1a\n\n(\u849f\u84bb\u7684\u81ea\u5df1\u89c1\u89e3,\u89c9\u5f97\u4e0d\u5bf9\u7684\u8bdd\u53ef\u4ee5\u5f53\u505a\u653ep)\n\n**\u597d\u50cf**\u56de\u6587\u6570\u7684\u5e73\u65b9\u90fd\u662f\u56de\u6587\u6570\n(\u778e\u8bf4\u7684)\n\n\u6211\u6765\u8bb2\u4e00\u4e0b\u8fdb\u5236\u8f6c\u6362\u5427,\n\n\u5982\u679c\u6570\u4e0d\u662f\u5f88\u5927,\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\n\n\u5982\u679c\u662f\u4efb\u610f\u8fdb\u5236\u8f6c\u6362\u5c31\u5148\u8f6c\u621010\u8fdb\u5236,\u8fd9\u4e2a\u521d\u4e2d\u5c31\u5b66\u4e86\u4e86\u5427\n\u6211\u5c31\u4e0d\u8bf4\u4e86,\u4e3b\u8981\u8bf410\u8fdb\u5236\u8f6c\u6210n\u8fdb\u5236\n\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4a[1001];\n\n\u5c06a[1]\u8bbe\u6210\u5f85\u8f6c\u6362\u7684\u6570\u5b57\n\n\u7136\u540en\u8fdb\u4e00,\u6162\u6162\u5f04\u5c31\u597d\u4e86,\n\n\u5177\u4f53\u5c31\u662f\u4e0b\u9762\u7684\u4ee3\u7801\n```cpp\n\t\tint ss = 1;\n\t\twhile(a[ss] >= n){//jk\u4e5f\u662f\n\t\t\ta[ss + 1] += a[ss] / n;\n\t\t\ta[ss] %= n;\n\t\t\tss ++;\n\t\t}\n```\n\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4e86,\u6709\u5b57\u6bcd\u600e\u4e48\u529e\u5462?\n\n\u6211\u4eec\u53c8\u4e0d\u9700\u8981\u5b57\u6bcd\u6bd4\u8f83,\u8f93\u51fa\u7684\u65f6\u5019\u5728\u8f6c\u6362\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1001],b[1001];//a\u50a8\u5b58\u56de\u6587\u6570\u7684\u5e73\u65b9,b\u50a8\u5b58\u5b83\u672c\u8eab\nint main() {\n\tint n,ss,s;//ss\u662f\u56de\u6587\u6570\u5e73\u65b9\u7684\u957f\u5ea6,s\u662f\u5b83\u672c\u8eab\u7684\u957f\u5ea6\n\tcin>>n;\n\tfor (int i = 1; i < 301; ++i)\n\t{\n\t\tint jk = i * i;\t//jk\u662fi\u7684\u5e73\u65b9,\u662f\u5f85\u5224\u65ad\u7684\u56de\u6587\u6570\n\t\tss = 1;//\u521d\u59cb\u5316\n\t\tb[1] = i;\n\t\ts = 1;\n\t\ta[1] = jk;\n\t\twhile(b[s] >= n){//\u5c06i\u53d8\u6210\u5b57\u7b26\u4e32,\n\t\t\tb[s + 1] += b[s] / n;\n\t\t\tb[s] %= n;\n\t\t\ts ++;\n\t\t}\n\t\twhile(a[ss] >= n){//jk\u4e5f\u662f\n\t\t\ta[ss + 1] += a[ss] / n;\n\t\t\ta[ss] %= n;\n\t\t\tss ++;\n\t\t}\n\t\tfor (int j = 1; j <= ss / 2; ++j)//\u5224\u65adjk\u662f\u5426\u662f\u56de\u6587\u6570,\u5faa\u73af\u5230ss / 2\u5373\u53ef\n\t\t\tif (a[j] != a[ss - j + 1])//\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u5bf9\u79f0,\u76f4\u63a5\u8bd5\u4e0b\u4e00\u4e2a\n\t\t\t\tgoto aa;\n\t\t\tfor (int j = s; j >= 1; --j){//\u5982\u679c\u662f10\u8fdb\u5236\u4ee5\u4e0a\u9700\u8981\u8f6c\u5316\u6210\u5b57\u6bcd\n\t\t\t\tif(b[j] < 10)\n\t\t\t\t\tcout<<b[j];\n\t\t\t\telse\n\t\t\t\t\tcout<<char(55 + b[j]);\n\t\t\t}\n\t\t\tcout<<\" \";\n\t\t\tfor (int j = 1; j <= ss; ++j){//\u56de\u6587\u6570\u4e5f\u662f\n\t\t\t\tif(a[j] < 10)\n\t\t\t\t\tcout<<a[j];\n\t\t\t\telse\n\t\t\t\t\tcout<<char(55 + a[j]);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t\taa:;\n\t\t\tmemset(a,0,sizeof a);//\u4e00\u5b9a\u8981\u6e05\u7a7a\n\t\t\tmemset(b,0,sizeof b);\n\t\t}\n\t\treturn 0;\n\t}\n\n```\n",
        "postTime": 1561259555,
        "uid": 192006,
        "name": "liuzitong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u5565\u4e5f\u4e0d\u8bf4\uff0c\u4e00\u4e2a\u8f6c\u6362\u8fdb\u5236\u4f4d\u7684\u9898\u76ee\u800c\u5df2\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint i,j,k,n,m[310],m1[310],a0[310][30],a[310],ak[310],a1[310][30],o[310],pp;\nchar hb;\n\nint main(){\n\tcin>>n;\n\tfor(i=1;i<=300;i++)\n\t{\n\t\ta[i]=i;\n\t\tak[i]=i*i;\n\t}\n\tfor(j=1;j<=300;j++)\n\t{\n\t\twhile(ak[j]>=1)\n\t\t{\n\t\t\tm[j]++;\n\t\t\ta0[j][m[j]]=ak[j]%n;\n\t\t\tak[j]/=n;\n\t\t}\n\t}\n\n\tfor(j=1;j<=300;j++)\n\t{\n\t\twhile(a[j]>=1)\n\t\t{\n\t\t\tm1[j]++;\n\n\t\t\ta1[j][m1[j]]=a[j]%n;\n\n\t\t\ta[j]=a[j]/n;\n\t\t}\n\t}\n\t\n\tfor(i=1;i<=300;i++)\n\t{\n\t\tpp=0;\n\t\tfor(j=1;j<=m[i];j++)\n\t\t{\n\t\t\tif(a0[i][j]!=a0[i][m[i]-j+1])\n\t\t\t{pp=1;break;}\n\t\t}\n\t\tif(pp==0) o[i]=1;\n\t}\n\t\n\tfor(i=1;i<=300;i++)\n\t{\n\t\tif(o[i]==1)\n\t\t{\n\t\tif(n<=10)\n\t\t{\n\t\t\tfor(j=m1[i];j>=1;j--)\n\t\t\tcout<<a1[i][j];\n\t\t\t\n\t\t\tcout<<\" \";\n\t\t\tfor(j=m[i];j>=1;j--)\n\t\t\tcout<<a0[i][j];\n\t\t\tcout<<\"\\n\";\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\tfor(j=m1[i];j>=1;j--)\n\t\t\t{\n\t\t\t\tif(a1[i][j]<10)\n\t\t\t\tcout<<a1[i][j];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\thb=a1[i][j]-10+'A';\n\t\t\t\tcout<<hb;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tcout<<\" \";\n\n\t\t\tfor(j=m[i];j>=1;j--)\n\t\t\t{\n\t\t\t\tif(a0[i][j]<10)\n\t\t\t\tcout<<a0[i][j];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\thb=a0[i][j]-10+'A';\n\t\t\t\t\tcout<<hb;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout<<\"\\n\";\n\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u54e6\uff0c\u5bf9\u4e86\uff0c\u8fd8\u8981\u6362\u884c",
        "postTime": 1551443874,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u57fa\u672c\u601d\u8def\u5206\u4e09\u6b65\u3002\u4e00\u662fi\u4ece1\u5230300\u679a\u4e3e\uff0c\u5c06i\u7684\u5e73\u65b9\u8f6c\u6362\u4e3ab\u8fdb\u5236\u5b57\u7b26\u4e32s\uff1b\u4e8c\u662f\u5224\u65ads\u662f\u5426\u4e3a\u56de\u6587\u3002\u4e09\u662f\u6839\u636e\u7b2c\u4e8c\u6b65\u7ed3\u679c\uff0c\u8f93\u51fai\u7684b\u8fdb\u5236\u5b57\u7b26\u4e32\u548ci*i\u7684b\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\n\n\u56e0\u6b64\uff0c\u8981\u8bbe\u8ba1\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u7684\u51fd\u6570\uff0c\u4ee5\u53ca\u5c0610\u8fdb\u5236int\u578b\u8f6c\u4e3ab\u8fdb\u5236\u4e0bstring\u578b\u7684\u51fd\u6570\u3002\n\n\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u56de\u6587\uff0c\u53ea\u8981\u4ece\u4e24\u5934\u5411\u4e2d\u95f4\u4f9d\u6b21\u6bd4\u8f83\uff0c\u53d1\u73b0\u5de6\u53f3\u4e24\u8fb9\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0d\u540c\uff0c\u5c31\u8fd4\u56defalse\uff0c\u7136\u540e\u6700\u7ec8\u51fd\u6570\u8fd4\u56de\u4e3atrue\uff0c\u610f\u5473\u7740\u5faa\u73af\u7ed3\u675f\u4e5f\u6ca1\u6709\u4e0d\u540c\u3002\u6bd4\u8f83\u7684\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u662fstring\u91cc\u4eces[0]\u4e0es[len-1]\u3001s[1]\u4e0es[len-1-1]\uff0c\u5373s[i]\u4e0es[len-1-i]\uff0c\u603b\u7684\u6bd4\u8f83\u6b21\u6570\u662flen/2\u6b21\uff0c\u4ece0\u8ba1\u8d77\u5c31\u662flen/2-1\u6b21\u3002\n\n\u4ece10\u8fdb\u5236\u8f6cb\u8fdb\u5236\uff0c\u65b9\u6cd5\u662f\u77ed\u9664\u6cd5\u8fde\u7eed\u53d6\u4f59\uff0c\u6bd4\u598242\u8f6c\u4e3a2\u8fdb\u5236\uff0c\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u77ed\u9664\u6cd5\uff0c\u4f9d\u6b21\u5f97\u4f59\u6570010101\uff0c\u76f4\u5230\u88ab\u9664\u6570\u4e3a0\u6b62\uff0c\u518d\u4ece\u4e0b\u5f80\u4e0a\u6392\u51fa\uff0c\u5f97101010\u3002\u518d\u5728\u6362\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6bcf\u6b21\u6c42\u5f97\u7684\u4f59\u6570\uff0c\u4f9d\u6b21\u6392\u5728\u6700\u524d\u9762\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u6700\u540e\u7684\u7ed3\u679c\u3002\u5982\u679c\u662f16\u8fdb\u5236\u4e0b\u4f59\u6570\u662f10\uff0c\u5c31\u8981\u5c06\u4f59\u6570\u8d4b\u4e3aA\uff0c\u8fd9\u6837\u53ef\u9884\u5148\u505a\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u5178\uff0c\u4f59\u6570\u6c42\u51fa\u662f\u591a\u5c11\uff0c\u76f4\u63a5\u5bf9\u5e94\u4e0b\u680710\u627e\u5230\u8fd9\u4e2aA\u3002\u627e\u5230\u540e\uff0c\u76f4\u63a5\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u524d\u9762\u3002\n\n\u672c\u9898\u67093\u5904\u4f18\u5316\u4ee3\u7801\u4e4b\u5904\u3002\u4e00\u662fx=dic[n%b]+x\u8fdb\u884c\u67e5\u8868\u8f6c\u8fdb\u5236\uff0c\u7701\u53bb\u5927\u91cfif\u2026else\u6216switch\u2026case\u3002\u4e8c\u662f\u7531\u4e8e\u8981\u53cd\u590d\u8fdb\u884c10\u8fdb\u5236\u8f6cb\u8fdb\u5236\uff0c\u8bbe\u8ba1\u5b50\u51fd\u6570\uff0c\u65b9\u4fbf\u91cd\u590d\u8c03\u7528\u3002\u4e09\u662f\u7531\u4e8e\u9700\u8981\u5224\u65ad\u7684\u6570\u662f\u4ece1\u5230300\u975e\u5e38\u89c4\u5f8b\uff0c\u76f4\u63a5\u5c06\u751f\u621010\u8fdb\u5236\u5e73\u65b9\u6570\u3001\u5e73\u65b9\u6570\u8f6cb\u8fdb\u5236\u5b57\u7b26\u4e32\u3001\u5224\u65ad\u56de\u6587\u5e76\u8f93\u51fab\u8fdb\u5236\u4e0b\u7684\u6570\u53ca\u5e73\u65b9\u6570\uff0c\u8fd9\u4e09\u6b65\u90fd\u53ef\u5728\u4e00\u6b21\u5faa\u73af\u4e2d\u5b8c\u6210\u3002\n\n\u672c\u9898\u6570\u636e\u662f[1,300]\u533a\u95f4\uff0cint\u5373\u53ef\uff0c\u65e0\u6570\u636e\u5751\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool hw(string s)//\u5224\u65ad\u5b57\u7b26\u4e32\u56de\u6587 \n{\n\tint i,len=s.size();//\u5047\u8bbelen=4 \n\tfor(i=0;i<len/2;++i)//\u5947\u6570\u957f\u5ea6\u6700\u4e2d\u95f4\u5b57\u7b26\u4e0d\u53c2\u52a0\u6bd4\u8f83\n\t{//\u5076\u6570\u957f\u5ea6\u53ea\u6bd4\u8f831-len/2\u6b21\uff0c\u6b21\u6570\u4ece0\u8ba1\u8d77\u5c31\u8981\u51cf1 \n\t\tif(s[i]!=s[len-1-i])//s[1]!=s[4-1-1]\n\t\t\treturn false;\n\t}\t\n\treturn true;\n}\nstring ten2b(int n,int b)//10\u8fdb\u5236\u6574\u578bn\u8f6cb\u8fdb\u5236\u5b57\u7b26\u4e32x \n{\t\n\tstring x,dic=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\twhile(n)\n\t{\n\t\tx=dic[n%b]+x;\n\t\tn/=b;\n\t}\n\treturn x;\n}\nint main()\n{\n    int i,m,b;\n    string s;\n    cin>>b;\n    for(i=1;i<=300;++i)\n    {\n    \tm=i*i;//\u751f\u621010\u8fdb\u5236\u5e73\u65b9\u6570\n    \ts=ten2b(m,b);\n    \tif(hw(s)) \n\t\t\tcout<<ten2b(i,b)<<\" \"<<s<<endl;\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1547038555,
        "uid": 62715,
        "name": "buickboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u80a5\u80a0\u6e05\u6670\u7684\u4ee3\u7801\uff0c\u9001\u7ed9\u73cd\u8d35\u7684P\u515a\u4eec\n```pascal\nvar\n  i,n:longint;  k:string;\n  function huiwen(s:string):boolean;//\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570\n  var\n    i:longint;\n  begin\n    for i:=1 to length(s) div 2 do\n      if s[i]<>s[length(s)-i+1] then\n        exit(false);\n    exit(true);\n  end;\n  function jinzhi(x,k:int64):string;//\u5c06x\u8f6c\u6362\u6210k\u8fdb\u5236\n  var s:string; c:int64;\n  begin\n    s:='';//\u5207\u8bb0\u522b\u5fd8\u8d4b\u521d\u503c\uff0c\u5728\u51fd\u6570\u4e0e\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e0d\u4f1a\u81ea\u52a8\u5f520\u6216\u8005\u5f52\u4e3a\u7a7a\u4e32\n    while x>0 do begin\n      c:=x mod k;\n      if c>9 then\n        s:=chr(x mod k +55)+s//\u5904\u7406\u5b57\u6bcd\n      else\n        s:=chr(x mod k +48)+s;//\u5904\u7406\u6570\u5b57\n      x:=x div k;\n    end;\n    exit(s);\n  end;\nbegin\n  readln(n);//n\u76f8\u5f53\u4e8eb\n  for i:=1 to 300 do begin\n    k:=jinzhi(i*i,n);//\u4fdd\u5b58\u5e73\u65b9\u540e\u7684\u6570\n    if huiwen(k) then//\u5224\u65ad\u56de\u6587\n      writeln(jinzhi(i,n),' ',k);//\u6ce8\u610f\uff1a\u8f93\u51fa\u7684\u662fb\u8fdb\u5236\u540e\u7684\u6570\uff0c\u4e0d\u662f\u539f\u6570\n  end;\n  readln\nend.\n\n```",
        "postTime": 1534837903,
        "uid": 89644,
        "name": "Harry_hcx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u6574\u4f53\u601d\u8def\uff1a\u7a77\u4e3e1-300\u6570\uff0c\u4f9d\u6b21\u6309\u4f4d\u8f6c\u6362\u5230\u76ee\u6807\u8fdb\u5236\uff0c\u8f93\u51fa\u65f6\u518d\u4ee5\u5b57\u7b26\u578b\u8f93\u51fa\u4e3aA-K\u7684\u4f4d\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#include <map>\nusing namespace std;\nint n,ans,change[20],jinzhi,base[20];\nvoid** display**(int x,int y)//\u8f93\u51fa\u627e\u5230\u7684\u56de\u6587\u6570\n{\n    for(int i=x;i>=1;i--)\n    {\n        if(base[i]>=10)printf(\"%c\",base[i]+55);\n        else printf(\"%d\",base[i]);\n    }printf(\" \");\n    for(int i=1;i<=y;i++)\n    {\n        if(change[i]>=10)printf(\"%c\",change[i]+55);\n        else printf(\"%d\",change[i]);\n    }\n    printf(\"\\n\");\n}\nvoid** judge**(int x)//\u5224\u65ad\u662f\u5426\u662fn\u8fdb\u5236\u4e0b\u56de\u6587\u6570\n{\n    int i=0;\n    while(x>0)//\u8fdb\u5236\u8f6c\u6362\u901a\u7528\u7ed3\u6784\n    {\n        change[++i]=x%n;\n        x=x/n;\n    }\n    for(int j=1;j<=i;j++)\n        if(change[j]!=change[i+1-j])return;\n    int j=0;\n    while(ans>0)//\u5982\u679c\u662f\u56de\u6587\u6570\uff0c\u518d\u5c06\u539f\u6570\u8f6c\u6362\n    {\n        base[++j]=ans%n;\n        ans=ans/n;\n    }\n    display(j,i);\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=300;i++)\n        {ans=i;judge(ans*ans);}\n    return 0;\n}\n\n```",
        "postTime": 1507452916,
        "uid": 55459,
        "name": "ZhYic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "###\u4e00\u5f00\u59cb\u4e0d\u77e5\u9053\u5904\u7406A\u3001B\u3001C\uff0c\u7136\u540e\u53c8\u770b\u4e86\u770b\u9898...\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;//\u8981\u6c42\u7528ABCD\u6765\u8868\u793a10\u300111\u300112.\u3002\u3002\u3002\u3002\u3002\u3002\ninline string change(int decs){//\u8f93\u5165\u5341\u8fdb\u5236\u6570\n    string x;\n    x.clear();\n    stack<short> ns;//\u7ffb\u8f6c\u4e00\u4e0b\u7ed3\u679c\n    while(decs){\n        ns.push(decs%n);\n        decs/=n;\n    }\n    short ws=ns.size();\n    for(short i=1;i<=ws;i++){\n        short y=ns.top();\n        ns.pop();\n        if(y<10) x+=(y+'0');\n        else x+=(y-10+'A');//\u65b9\u4fbf\u76f4\u63a5\u8f93\u51fa\n    }\n    return x;\n}\ninline bool check(const string &x){//\u52a0\u4e0aconst\u548c&\u66f4\u4fdd\u9669\n    short i=0,j=x.size()-1;\n    while(i<j)\n        if(x[i++]!=x[j--])\n                       return false;//\u5224\u65ad\u56de\u6587\n    return true;\n}\nint main (){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=300;i++){\n        int inp=i*i;//\u76f4\u63a5\u7b97\u5e73\u65b9\n        string outp=change(inp);//\u8f6c\u6362\n        if(check(outp))//\u68c0\u67e5\n            cout<<change(i)<<\" \"<<outp<<endl;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1499064810,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "/\\*\n\u8bf7\u52ff\u590d\u5236,\u521b\u5efa\u7f8e\u597d\u9898\u89e3\n\n\\*/\n```cpp\n#include<bits/stdc++.h>\nint n,a[1000010],b[100010],i,l1,l2;  \nusing namespace std;  \nint hw(void)//\u5224\u65ad\u56de\u6587 \n{\n    for (int i=1;i<=l1/2;i++)//\u56e0\u4e3a\u7528\u7684\u4e0d\u662f\u5b57\u7b26\u4e32,\u6240\u4ee5\u53ef\u4ee5\u4ece\u4e00\u5f00\u59cb \n        if (a[i]!=a[l1-i+1])//\u6570\u7ec4\u662f\u6574\u578b\u7684,\u5373\u4f7f\u662fA,B\u5728\u5224\u65ad\u56de\u6587\u7684\u65f6\u5019\u53ef\u4ee5\u7701\u7565,\u53ea\u9700\u8981\u6bd4\u8f83\u662f\u5426\u76f8\u7b49 \n            return 0;\n    return 1;\n}\nint pd(int k)\n{\n    l1=0;\n    do\n    {\n        a[++l1]=k%n;//\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362,\u5373\u4f7f\u662fA,B,C,\u53ea\u8981\u5728\u6700\u540e\u9762\u8f93\u51fa\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86 \n        k/=n;\n    } while (k!=0);\n    return 0;\n}\nint pd2(int k)\n{\n    l2=0;\n    do\n    {\n        b[++l2]=k%n;//\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362,\u5373\u4f7f\u662fA,B,C,\u53ea\u8981\u5728\u6700\u540e\u9762\u8f93\u51fa\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86 \n        k/=n;\n    } while (k!=0);\n    return 0;\n}\nint main()  \n{  \n    scanf(\"%d\",&n);  \n    for (i=1;i<=300;i++)//\u9898\u76ee\u8bf4\u4e86\u53ea\u89811~300\u4ee5\u5185 \n    {   \n        int k=i*i;//\u5e73\u65b9 \n        pd(k);//\u5224\u65ad\u5728B\u8fdb\u5236\u4e0b\u662f\u5426\u6ee1\u8db3 \n        if (hw())  \n        {  \n            k=i;\n            pd2(k);\n            for (int l=l2;l>0;l--) \n                if (b[l]>=10) //\u8f93\u51fa\u5224\u5b9a\u662f\u5426\u9700\u8981\u8f6c\u6362\u6210\u5b57\u6bcd \n                    printf(\"%c\",b[l]+'A'-10);\n                else \n                    printf(\"%d\",b[l]);  \n            printf(\" \");  \n            for (int l=l1;l>0;l--) \n                if (a[l]>=10) //\u8f93\u51fa\u5224\u5b9a\u662f\u5426\u9700\u8981\u8f6c\u6362\u6210\u5b57\u6bcd \n                    printf(\"%c\",a[l]+'A'-10);\n                else \n                    printf(\"%d\",a[l]);  \n            printf(\"\\n\"); //\u683c\u5f0f\u9700\u8981  \n        }  \n    }     \n    return 0;   \n}\n```",
        "postTime": 1488697517,
        "uid": 33365,
        "name": "hutao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u5b8c\u5168\u679a\u4e3e\u3002turn\u8f6c\u8fdb\u5236\uff0cjudge\u5224\u56de\u6587\uff0csearch\u679a\u4e3e\uff0cprint\u8f93\u51fa\u6bcf\u884c\u7684\u7b2c\u4e00\u4e2a\u6570\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint w,a[20];\nint turn(int n)\n{\n    memset(a,0,sizeof(a)); \n    int i=0,j;\n    while(n>0)\n    {\n        a[++i]=n%w;\n        n/=w;\n    }\n    return i;    \n}\nbool judge(int x)\n{\n    int i=1,j=x;\n    while(i<j)\n    {\n        if(a[i++]!=a[j--]) return false;\n    }\n    return true;\n}\nvoid print(int n)\n{\n    int b[20],i=0,j;\n    while(n>0)\n    {\n        b[++i]=n%w;\n        n/=w;\n    }\n    for(j=i;j>=1;j--)\n    {\n        if(b[j]>=10) printf(\"%c\",'A'+b[j]-10);\n        else printf(\"%d\",b[j]);\n    }\n    printf(\" \");\n}\nvoid search()\n{\n    int i,j;\n    for(i=1;i<=300;i++)\n    {\n        int x=turn(pow(i,2));\n        //printf(\"%d %d \",i,pow(i,2));\n        //for(j=x;j>=1;j--)\n        //    printf(\"%d\",a[j]);\n        //printf(\"\\n\");\n        if(judge(x))\n        {\n            print(i);\n            for(j=x;j>=1;j--)\n            {\n                if(a[j]>=10) printf(\"%c\",'A'+a[j]-10);\n                else printf(\"%d\",a[j]);\n            }\n            printf(\"\\n\");\n        }\n    }    \n}\nint main()\n{\n    int i,j;\n    scanf(\"%d\",&w);\n    search();\n    return 0;\n}\n```",
        "postTime": 1475543396,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u4ec0\u4e48\u96be\u7684\uff0c\u4e3b\u8981\u5c31\u662f\u8003\u8fdb\u5236\u8f6c\u6362,\u4ee5\u53ca\u56de\u6587\u6570\u7684\u5224\u65ad\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u6700\u5927\u768420\u8fdb\u5236\u4e2d20\u8868\u793a\u4e3aJ\uff0c\u4e0d\u8981\u53eaCASE\u523015\u54e6\uff01\n\n\u7a77\u4e3e1\u2014\u2014300\u7684\u6240\u6709\u5e73\u65b9\u6570\uff0c\u8f6c\u8fdb\u5236\uff0c\u6bd4\u8f83\uff0cOK\u4e86~\u9664\u975e\u4f60\u4e0d\u4f1a\u600e\u4e48\u8f6c\u8fdb\u5236\u3002\u77ed\u9664\uff0c\u7136\u540e\u9006\u5e8f\u8f93\u51fa\u3002\n\n\u53c2\u8003\u8fdb\u5236\u8f6c\u6362\u4f2a\u4ee3\u7801\n\nC/C++\n[/color]```cpp\n\n      int \u4f4d\u6570=0;\n      while(j != 0)\n        {\n          b[\u4f4d\u6570]=j % \u8fdb\u5236 ;\n          j = j / \u8fdb\u5236;\n         \u4f4d\u6570=\u4f4d\u6570+1;\n        }\n\n```\nPASCAL\n[/color]```delphi\n\n      \u4f4d\u6570:integer;\n      while j<>0 do begin\n         b[\u4f4d\u6570]:=j mod \u8fdb\u5236;\n         j:=j/\u8fdb\u5236;\n         \u4f4d\u6570:=\u4f4d\u6570+1;\n      end;\n\n```\n\n\u53c2\u8003\u4ee3\u7801\n\n[/color]```cpp\n\n#include<iostream>\nusing namespace std;\nint B;\nconst\n  int MAX=300;\n  char CH[20]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J'};\n\u00a0\nvoid printdata(int x)\n{\n  int a[30],i=0;\n  while (x>0) a[++i]=x%B,x/=B;\n  for (;i;cout<<CH[ a[i--] ]);\n}\n\u00a0\nvoid handle( int x )\n{\n  int a[30],n=0,xx=x*x;\n  while (xx>0)  a[++n]=xx%B,xx/=B;\n  int t=n;\n  for (;(n>0)&&(a[n]==a[t-n+1]);--n);\n  if (n==0) printdata(x),cout<<' ',printdata(x*x),cout<<endl;\n}\n\u00a0\nint main()\n{ \n  cin>>B;\n  for (int i=1;i<=MAX;i++) handle(i);\n  return 0;\n}\n\n```",
        "postTime": 1461825596,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u77ed\u5c0f\u7cbe\u608d\n\n```cpp\nvar\n    i,n:longint;\nfunction tentok(n,m:longint):string;\n    var\n        i:longint;\n    function nts(n:longint):string;\n        begin\n            *********         //\u81ea\u884c\u8111\u8865\uff0c\u8fc7\u4e8e\u7b80\u5355\n        end;\n    begin\n        tentok:='';\n        repeat\n            if (m>10) and (n mod m>9) then tentok:=chr((n mod m)+55)+tentok\n            else tentok:=nts(n mod m)+tentok;\n            n:=n div m;\n        until n=0;\n    end;\nfunction ispalind(s:string):boolean;\n    var\n        i:longint;\n    begin\n        ispalind:=true;\n        for i:=1 to length(s) div 2 do\n            if s[i]<>s[length(s)-i+1] then begin ispalind:=false; break; end;\n    end;\nbegin\n    readln(n);\n    for i:=1 to 300 do    //\u8fd8\u7528\u8bf4\uff0c\u6b7b\u679a\u4e3e\n        if ispalind(tentok(sqr(i),n)) then writeln(tentok(i,n),' ',tentok(sqr(i),n)); //\u5b66\u70b9\u82f1\u8bed~~tentok\uff08\u5341\u8fdb\u5236\u8f6cK\u8fdb\u5236\uff09\uff1bispalind\uff08\u662f\u4e0d\u662f\u56de\u6587\uff09\nend.   //By-LYP\n```",
        "postTime": 1457478181,
        "uid": 12825,
        "name": "YczSS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u672c\u9898\u4e3a\u4e00\u9053\u8f83\u4e3a\u5bb9\u6613\u7684\u57fa\u7840\u9898\uff0c\u552f\u4e00\u8f83\u96be\u70b9\u5c31\u662f\u8fdb\u5236\u7684\u8f6c\u5316\n\n\u9996\u5148\u901a\u8fc7\u8bfb\u9898\u53ef\u77e5\uff0c\u6240\u6c42\u7684\u5bf9\u8c61\u4e3a1~300\u5185\u7684\u6240\u6709\u6570\uff0c\u540c\u65f6\u8f6c\u5316\u9700\u8981\u7684\u65f6\u95f4\u4e3alog i(1\u2264i\u2264300)\uff0c\u56e0\u6b64\u6240\u7528\u65f6\u95f4\u4e3aO\uff08300\\*log2i(1\u2264i\u2264300)\uff09\uff0c\u4e5f\u5c31\u662fO(1)\uff1b\n\n\u63a5\u4e0b\u6765\u8bb2\u8ff0\u7b97\u6cd5\uff1a\n\n\u9996\u5148\u5927\u5faa\u73afi\u63a7\u5236\u6240\u6c42\u5bf9\u8c611-300\n\n\u63a5\u4e0b\u6765\u5c06i^2\u8f6c\u5316\u4e3ab\u8fdb\u5236\uff0c\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u6ca1\u6709\u8981\u6c42\u5bf9\u8c61\u987b\u8981\u662f\u56de\u6587\u6570\uff0c\u6240\u4ee5\u4e5f\u5c31\u7701\u4e86\u4e00\u6b65\uff0c\u53ea\u9700\u8981\u5224\u65adi^2\u662f\n\n\u5426\u662f\u56de\u6587\u6570\u5373\u53ef\n\n\u8fd8\u6709\u5c31\u662f\u8f93\u51fa\uff0c\u5982\u679c<9\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u5426\u5219\u987b\u8981\u8f6c\u5316\n\n\u63a5\u4e0b\u6765\u7ed9\u51fa\u6807\u7a0b\uff1a\n\n```cpp\nvar\n  f:array[0..100000] of longint;\n  n,i,j,k,s:longint;\nfunction huiwen:boolean;\nvar i:longint;\nbegin\n  for i:=1 to k div 2 do\n    if f[i]<>f[k-i+1] then exit(false);\n  exit(true);\nend;//\u56de\u6587\u6570\u7684\u5224\u65ad\uff0c\u7528\u51fd\u6570\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u4e0d\u8981\u5fd8\u4e86\u5982\u679c\u7b26\u5408\u9700\u8981\u8fd4\u56detrue\nprocedure njinzhi(ss:longint);\nbegin\n  if ss=0 then exit;\n  njinzhi(ss div n);\n  if ss mod n<10 then write(ss mod n) else write(chr(ss mod n+55));{\u4e5f\u53ef\u4ee5\u4f7f\u7528+ord\uff08'A')-10}\nend;//\u5bf910\u8fdb\u5236\u7684\u6570s\u7684\u8f6c\u5316n\u8fdb\u5236\uff0c\u5e76\u8f93\u51fa\uff0c\u6ce8\u610f\u5927\u4e8e10\u7684\u8fdb\u5236\uff0c\u8fd8\u6709\u5c31\u662f\u56e0\u4e3a\u8f93\u51fa\u662f\u4ece\u540e\u5f80\u524d\u7684\u6240\u4ee5\u9700\u8981\u5148\u9012\u5f52\u518d\u8f93\u51fa\nprocedure print(x:longint);\nvar i:longint;\nbegin\n  njinzhi(x);\n  write(' ');\n  for i:=k downto 1 do//\u4ece\u540e\u5f80\u524d\u8f93\u51fa\n    if f[i]<10 then write(f[i]) else write(chr(f[i]+55));\n  writeln;\nend;//\u6253\u5370\u8f93\u51fa\uff0c\u4e0d\u591a\u89e3\u91ca\nprocedure work;\nbegin\n  for i:=1 to 300 do\n    begin\n      k:=0;\n      fillchar(f,sizeof(f),0);\n      s:=sqr(i);//\u6c42\u5e73\u65b9\n      while s>0 do\n        begin\n          inc(k);\n          f[k]:=s mod n;\n          s:=s div n;\n        end;//\u8f6c\u5316\u4e3an\u8fdb\u5236\uff0c\u5e76\u4fdd\u5b58\u6570\u7ec4\n      if huiwen then print(i);//\u5982\u679c\u7b26\u5408\uff0c\u8f93\u51fa\n    end;\nend;\nbegin\n  read(n);\n  work;//\u5f00\u59cb\u5de5\u4f5c\nend.\n```",
        "postTime": 1379503819,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    },
    {
        "content": "\u9898\u89e3 by\uff1aredbag\n\n\u597d\u50cf\u6ca1\u6709\u6b63\u5e38\u7684c++\u9898\u89e3\uff1f\u6765\u4e00\u53d1\u3002\n\nAC\u8bb0\u5f55\uff1ahttp://www.luogu.org/record/show?rid=683927\n\n/\\*\nID: ylx14274\n\nPROG: palsquare\n\nLANG: C++\n\n\\*/\n```cpp\n#include<set>\n#include<map>\n#include<list>\n#include<queue>\n#include<stack>\n#include<string>\n#include<math.h>\n#include<time.h>\n#include<vector>\n#include<bitset>\n#include<memory>\n#include<utility>\n#include<stdio.h>\n#include<sstream>\n#include<iostream>\n#include<stdlib.h>\n#include<string.h>\n#include<algorithm>\n#define LL unsigned long long\nusing namespace std;\nint a[30];//\u5b58n\u8fdb\u5236\u6570\u8f6c\u7684\u7ed3\u679c\uff0c \nint b[30];//\u5404\u79cd\u7528\u9014 \nint i,j,n,k,kk;//n\u5b58\u8fdb\u5236 \nint nf,ny;\nvoid he(int nn)//\u8f6c\u6210n\u8fdb\u5236 \n{\n```\n\u3002\u3002\u3002\u3002int ha,yu,shang;\n\u3002\u3002\u3002\u3002for(j=1;j<=29;j++)\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002a[j]=0;\n\n\u3002\u3002\u3002\u3002k=0;\n\n\u3002\u3002\u3002\u3002shang=nn;\n\n\u3002\u3002\u3002\u3002while (true)\n\n\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002yu=shang%n;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002shang=shang/n;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002++k;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002a[k]=yu;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002if (shang==0) break;\n\n\u3002\u3002\u3002\u3002}\n\n} \nvoid haa(int nn)//\u8f6c\u6210n\u8fdb\u5236 \n\n{\n\u3002\u3002\u3002\u3002int ha,yu,shang;\n\n\u3002\u3002\u3002\u3002for(j=1;j<=29;j++)\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002b[j]=0;\n\n\u3002\u3002\u3002\u3002kk=0;\n\n\u3002\u3002\u3002\u3002shang=nn;\n\n\u3002\u3002\u3002\u3002while (true)\n\n\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002yu=shang%n;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002shang=shang/n;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002++kk;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002b[kk]=yu;\n\n\u3002\u3002\u3002\u3002    if (shang==0) break;\n\n\u3002\u3002\u3002\u3002}\n\n} \nint main() \n\n{\n\u3002\u3002\u3002\u3002freopen(\"palsquare.in\",\"r\",stdin);//\u53cb\u60c5\u63d0\u793a\uff1a\u6284\u9898\u89e3\u7684\u5c0f\u670b\u53cb\n\n\u3002\u3002\u3002\u3002freopen(\"palsquare.out\",\"w\",stdout); //\u8bb0\u5f97\u53bb\u6389\u6587\u4ef6\u54e6\uff0c\u8fd9\u53ef\u4e0d\u662f\u672aAC\u7684\u4ee3\u7801\n\n\u3002\u3002\u3002\u3002cin>>n;\n\n\u3002\u3002\u3002\u3002for (i=1;i<=300;i++)//\u679a\u4e3e\n\n\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002int biaoji=1;//\u6807\u8bb0\u7528\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002he(i);//\u8fd8\u662f\u8981\u8f6c\u6210n\u8fdb\u5236\uff0c\u56e0\u4e3a\u9700\u8981\u8f93\u51fa\u3002\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002nf=i\\*i;//\u6c42\u51fa\u5e73\u65b9\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002haa(nf);//\u8f6c\u6210n\u8fdb\u5236\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002for (j=1;j<=kk;j++)//\u5224\u65adi\u7684\u5e73\u65b9\u662f\u5426\u4e3a\u56de\u6587\u6570\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002if (b[j]!=b[kk-j+1])//\u5982\u679c\u5176\u4e2d\u4e00\u4f4d\u4e0d\u6ee1\u8db3\u5c31\u6807\u8bb0\u3002\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002biaoji=0;//\u6807\u8bb0\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002break;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002if (biaoji==1)\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002for (j=k;j>=1;j--)\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002if (a[j]<10) printf(\"%d\",a[j]);//\u5927\u4e8e10\u7684\u8bdd\u5c31\u8981\u8f93\u51fa\u5b57\u6bcd\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002else{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002    char cha=char(a[j]-10+65);//10\u5bf9\u5e94A\uff0cA\u7684askii\u7801\u662f65\uff0c\u627e\u89c4\u5f8b\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002printf(\"%c\",cha);\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002cout<<\" \";//\u5206\u5272\n\n//\u56e0\u4e3a\u662f\u56de\u6587\u6570\uff0c\u5c31\u7b97\u662f\u5012\u7740\u5b58\u7684\u4f46\u662f\u8f93\u51fa\u4e5f\u4e0d\u5f71\u54cd\uff0c\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002for (j=1;j<=kk;j++)\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002if (b[j]<10) printf(\"%d\",b[j]);\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002else{\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002    char cha=char(b[j]-10+65);\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002printf(\"%c\",cha);\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002cout<<endl;\n\n\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002}\n\n\u3002\u3002\u3002\u3002}\n\n\n    return 0;\n\n}\n\u4e00\u5806\u53e5\u53f7\u662f\u9632\u6b62\u7f29\u8fdb\u88ab\u541e\u7684\n",
        "postTime": 1463549897,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1206 \u3010[USACO1.2]\u56de\u6587\u5e73\u65b9\u6570 Palindromic Squares\u3011"
    }
]