[
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/liuchanglc/p/12701293.html)\n## \u5206\u6790\n \u4e00\u770b\u5230\u662f\u65b9\u683c\u4e2d\u7684\u95ee\u9898\uff0c\u6570\u636e\u8303\u56f4\u53c8\u572810\u4ee5\u4e0b\uff0c\u663e\u7136\u662f\u72b6\u6001\u538b\u7f29DP\u4e86\n\n\u8fd9\u9053\u9898\u7684\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u800c\u4e14\u7528\u5230\u4e86\u4f4d\u8fd0\u7b97\uff0c\u6240\u4ee5\u6709\u4e9b\u4ee3\u7801\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u56e0\u6b64\u6211\u611f\u89c9\u5206\u5757\u8bb2\u4f1a\u6bd4\u8f83\u597d\u7406\u89e3\n\n### \u95ee\u9898\u4e00\u3001\u6570\u7ec4\u7684\u5b9a\u4e49\n\u5982\u679c\u4f60\u8981\u8fdb\u884c\u52a8\u6001\u89c4\u5212\uff0c\u80af\u5b9a\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5b58\u50a8\u7ed3\u679c\n\n\u8fd9\u9053\u9898\u5f00\u4e8c\u7ef4\u6570\u7ec4\u663e\u7136\u662f\u4e0d\u591f\u7528\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u65e2\u8981\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\uff0c\u53c8\u8981\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u7eb5\u5750\u6807\n\n\u6211\u4eec\u8bbef[x][y][s]\u4e3a\u8d70\u5230\u5750\u6807\u4e3a\uff08x,y\uff09\u7684\u70b9\uff0c\u4e14\u72b6\u6001\u4e3aS\u65f6\u6240\u8d70\u8fc7\u7684\u8def\u7a0b\u957f\u5ea6\n\nx,y\u7684\u542b\u4e49\u5927\u5bb6\u5e94\u8be5\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u7406\u89e3\uff0c\u5173\u952e\u662f\u72b6\u6001S\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\u5728\u65b9\u683c\u4e2d\u6700\u591a\u67099\u4e2a\u8c46\u8c46\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a9\u7684\u4e8c\u8fdb\u5236\u6570\u6765\u5b58\u50a8\u72b6\u6001\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u8fd8\u662f\u6765\u4e3e\u4e00\u4e2a\u4f8b\u5b50\n\n\u6bd4\u5982\u8bf4\u65b9\u683c\u4e2d\u67094\u4e2a\u8c46\u5b50\uff0c\u90a3\u4e48\n\n0 0 0 0 \u8868\u793a\u4f60\u4e00\u4e2a\u8c46\u5b50\u4e5f\u6ca1\u6709\u56f4\u4e0a\n\n0 0 1 0 \u8868\u793a\u4f60\u628a\u7b2c\u4e8c\u4e2a\u8c46\u5b50\u56f4\u4e0a\n\n0 1 1 1 \u8868\u793a\u4f60\u628a\u7b2c1\u30012\u30013\u4e2a\u8c46\u5b50\u5168\u90e8\u56f4\u4e0a\n\n\u8fd9\u6837\u7684\u8bdd\u5927\u5bb6\u5e94\u8be5\u5c31\u53ef\u4ee5\u7406\u89e3\u4e86\n\n\u8fd9\u91cc\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e00\u6b21\u5f00\u59cb\u904d\u5386\u7684\u8d77\u70b9\u4e0d\u540c\uff0c\u6240\u4ee5\u6700\u7ec8\u5f97\u5230\u7684\u7b54\u6848\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u6bcf\u9009\u62e9\u4e00\u4e2a\u8d77\u70b9\uff0c\u5c31\u8981\u91cd\u65b0\u5c06f\u6570\u7ec4\u521d\u59cb\u5316\n\n### \u95ee\u9898\u4e8c\u3001\u56f4\u4f4f\u7684\u5224\u65ad\n\u53ea\u6709\u67d0\u4e00\u9897\u8c46\u5728\u8def\u5f84\u6240\u5f62\u6210\u7684\u591a\u8fb9\u5f62\uff08\u53ef\u80fd\u662f\u542b\u81ea\u4ea4\u7684\u590d\u6742\u591a\u8fb9\u5f62\uff09\u7684\u5185\u90e8\u65f6\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u8c46\u5b50\u7684\u4ef7\u503c\n\n\u6211\u4eec\u6765\u4e3e\u51e0\u4e2a\u4f8b\u5b50\n![](https://cdn.luogu.com.cn/upload/image_hosting/15iyuy2j.png)\n \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5de6\u8fb9\u7684\u8fd9\u4e24\u5e45\u56fe\u4e2d\u8c46\u8c46\u662f\u53ef\u4ee5\u88ab\u56f4\u4f4f\u7684\uff0c\u800c\u53f3\u8fb9\u7684\u8fd9\u4e24\u5e45\u56fe\u4e2d\uff0c\u8c46\u8c46\u662f\u65e0\u6cd5\u88ab\u56f4\u4f4f\u7684\n\n\u90a3\u4e48\u5b83\u4eec\u5206\u522b\u6709\u4ec0\u4e48\u7279\u70b9\u5462\uff1f\n\n\u6211\u4eec\u4ece\u8c46\u8c46\u5f00\u59cb\u5411\u53f3\u5f15\u4e00\u6761\u5c04\u7ebf\uff08\u5176\u5b9e\u5411\u54ea\u4e00\u4e2a\u65b9\u5411\u90fd\u53ef\u4ee5\uff09\uff0c\u5982\u679c\u5c04\u7ebf\u4e0e\u8def\u5f84\u7684\u4ea4\u70b9\u4e3a\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u8c46\u8c46\u80fd\u88ab\u56f4\u4f4f\uff0c\u53cd\u4e4b\u5219\u4e0d\u80fd\n\n \uff08\u8fd9\u5176\u5b9e\u5c31\u662f\u5c04\u7ebf\u5b9a\u7406\uff0c\u5927\u5bb6\u6709\u5174\u8da3\u7684\u8bdd\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\u8bc1\u660e\uff09\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ea\u8981\u5224\u65ad\u8def\u5f84\u4e0e\u5c04\u7ebf\u7684\u4ea4\u70b9\u4e2a\u6570\u662f\u4e0d\u662f\u5c31\u53ef\u4ee5\u4e86\u5462\n\n\u5176\u5b9e\u8fd8\u662f\u4e0d\u884c\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u5e45\u56fe\n![](https://cdn.luogu.com.cn/upload/image_hosting/d7zab315.png)\n \u5c04\u7ebf\u4e0e\u8def\u5f84\u7684\u4ea4\u70b9\u6709\u4e09\u4e2a\uff08\u7eff\u8272\u7684\u5708\u5708\u4f4f\u7684\u90e8\u5206\uff09\uff0c\u4f46\u662f\u8c46\u8c46\u6ca1\u6709\u88ab\u5305\u542b\u5728\u91cc\u9762\n\n\u6240\u4ee5\u53ea\u6709\u5f53\u4e0a\u4e0b\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u7ed9\u8def\u5f84\u8ba1\u6570\uff0c\u5982\u679c\u662f\u5de6\u53f3\u6c34\u5e73\u79fb\u52a8\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u7b97\u8fdb\u53bb\n![](https://cdn.luogu.com.cn/upload/image_hosting/oiqtrb6d.png)\n\u8fd9\u662f\u5bf9\u4e8e\u4e0a\u4e0b\u79fb\u52a8\u7684\u5224\u65ad\uff0cmx\u3001my\u5206\u522b\u662f\u79fb\u52a8\u4e4b\u524d\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0cnx\u3001ny\u5206\u522b\u662f\u79fb\u52a8\u4e4b\u540e\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\n\nax\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6240\u6709\u8c46\u8c46\u7684\u6a2a\u5750\u6807\uff0cay\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6240\u6709\u8c46\u8c46\u7684\u7eb5\u5750\u6807\n\n\u524d\u9762\u7684\u56db\u4e2a\u5224\u65ad\u662f\u5bf9\u4e8e\u4e0a\u4e0b\u79fb\u52a8\u7684\u5224\u65ad\uff0c\u53ea\u6709\u4e0a\u4e0b\u79fb\u52a8\u624d\u53ef\u4ee5\u8ba1\u6570\n\n\u6700\u540e\u4e00\u4e2a\u5224\u65ad\u662f\u5224\u65ad\u8be5\u8def\u5f84\u662f\u5426\u5728\u8c46\u8c46\u7684\u53f3\u8fb9\uff08\u56e0\u4e3a\u6211\u662f\u5411\u53f3\u5f15\u7684\u5c04\u7ebf\uff09\n\n\u5f53\u7136\u4f60\u628a\u91cc\u9762\u7684==\u90fd\u6539\u6210>=\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u4f60\u4e00\u6b21\u53ea\u80fd\u8d70\u4e00\u4e2a\u683c\u5b50\n\n### \u95ee\u9898\u4e09\u3001\u600e\u4e48\u7531\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u72b6\u6001ms\u63a8\u51fa\u4e0b\u4e00\u4e2a\u683c\u5b50\u7684\u72b6\u6001ns\n\u5148\u4e0a\u4ee3\u7801\n```cpp\nint solve(int mx,int my,int nx,int ny,int ms){\n    int ns=ms;\n    for(int i=1;i<=d;i++){\n        if(((mx==ax[i] && nx<ax[i]) || (mx<ax[i] && nx==ax[i])) && ny>ay[i]){\n            ns^=(1<<(i-1));\n        }\n    }\n    return ns;\n}\n```\nmx\u3001my\u5206\u522b\u662f\u79fb\u52a8\u4e4b\u524d\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0cnx\u3001ny\u5206\u522b\u662f\u79fb\u52a8\u4e4b\u540e\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\n\nms\u662f\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u72b6\u6001\uff0cns\u662f\u4e0b\u4e00\u4e2a\u683c\u5b50\u7684\u72b6\u6001\uff08\u4ec0\u4e48\u662f\u72b6\u6001\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\u4e86\uff09\n\nax\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6240\u6709\u8c46\u8c46\u7684\u6a2a\u5750\u6807\uff0cay\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u6240\u6709\u8c46\u8c46\u7684\u7eb5\u5750\u6807\n\n\u5728\u7b2c\u4e09\u884c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8c46\u8c46\uff0c\u5728\u7b2c\u56db\u884c\u6211\u4eec\u5224\u65ad\u5f53\u524d\u79fb\u52a8\u80fd\u5426\u8ba1\u6570\uff08\u95ee\u9898\u4e8c\u4e2d\u5df2\u7ecf\u8bf4\u8fc7\uff09\n\n\u6700\u5173\u952e\u7684\u5c31\u662f\u7b2c\u4e94\u884c  ns^=(1<<(i-1))\n\n\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\n\nns\u5fc5\u5b9a\u8981\u7531ms\u63a8\u5bfc\u51fa\u6765\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8c46\u8c46\uff0c\u5982\u679c\u5f53\u524d\u8d70\u7684\u8def\u5f84\u53ef\u4ee5\u4e0e\u5c04\u7ebf\u76f8\u4ea4\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u6539\u53d8\u4ea4\u70b9\u4e2a\u6570\u7684\u5947\u5076\u6027\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8c46\u8c46\u672c\u6765\u5728\u56db\u8fb9\u5f62\u5185\uff0c\u8d70\u4e86\u8fd9\u4e00\u6b65\uff0c\u5c31\u5230\u4e86\u56db\u8fb9\u5f62\u5916\uff1b\u6216\u8005\u8c46\u8c46\u672c\u6765\u5728\u56db\u8fb9\u5f62\u5916\uff0c\u8d70\u4e86\u8fd9\u4e00\u6b65\uff0c\u5c31\u5230\u4e86\u56db\u8fb9\u5f62\u5185\n\n\u6211\u4eec\u77e5\u9053\u72b6\u6001S\u5982\u679c\u4ece\u53f3\u5f80\u5de6\u6570\u7b2ci\u4f4d\u4e3a1\uff0c\u5219\u8bf4\u660e\u7b2ci\u4e2a\u8c46\u8c46\u5728\u683c\u5b50\u5185\uff0c\u53cd\u4e4b\u4ea6\u7136\n\n\u90a3\u4e48\u5982\u679c\u4ece\u53f3\u5f80\u5de6\u6570\u7b2ci\u4f4d\u72b6\u6001\u53d8\u5316\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5f53\u524d\u7684\u72b6\u6001\u548c\uff081<<(i-1)\uff09\u53d6\u5f02\u6216\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u7b2ci\u4e3a\u53d6\u53cd\uff0c\u5176\u4ed6\u4f4d\u4e0d\u53d8\n\n\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u7684\u76ee\u7684\n\n\uff08\u6211\u611f\u89c9\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5982\u679c\u518d\u4e0d\u7406\u89e3\uff0c\u6211\u4e5f\u6ca1\u6709\u529e\u6cd5\u4e86\uff09\n## \u95ee\u9898\u56db\u3001\u901a\u8fc7\u4ec0\u4e48\u6765\u7b97\u51faf\u6570\u7ec4\u5462\n\u6211\u4eec\u53ef\u4ee5\u7528SPFA\uff0c\u4e5f\u53ef\u4ee5\u7528bfs\n\n\u4e0d\u540c\u7684\u662fbfs\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u8fdb\u6808\u4e00\u6b21\uff0c\u800cSPFA\u53ef\u4ee5\u8fdb\u5f88\u591a\u6b21 \n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u4f60\u5373\u4f7f\u7528SPFA\u6bcf\u4e2a\u70b9\u4e5f\u53ea\u4f1a\u677e\u5f1b\u4e00\u6b21\uff0c\u56e0\u4e3a\u4f60\u7684\u8def\u5f84\u53ea\u4f1a\u8d8a\u8d70\u8d8a\u957f\u7528bfs\u548c\u7528SPFA\u6ca1\u4ec0\u4e48\u533a\u522b\n\n\u4f46\u662f\u8981\u6ce8\u610fvis\u6570\u7ec4\u7684\u521d\u59cb\u5316\uff0c\u7528bfs\u7684\u8bddvis\u6570\u7ec4\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4f46\u662f\u7528SPFA\u5219\u4e0d\u7528\n\n\u56e0\u4e3aSPFAvis\u6570\u7ec4\u6700\u540e\u7684\u72b6\u6001\u5fc5\u5b9a\u90fd0\n\n\u6700\u7ec8\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1aans=max(ans,val[i]-f[ii][jj][i])\nval[i]\u662f\u6211\u4eec\u9884\u5904\u7406\u51fa\u6765\u7684\u72b6\u6001\u4e3ai\u65f6\u8c46\u5b50\u7684\u603b\u4ef7\u503c\uff0c\u9884\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b:\n```cpp\n  for(int i=0;i<mmax;i++){\n        for(int j=1;j<=d;j++){\n            if(i&(1<<(j-1))) val[i]+=da[j];\n        }\n    }\n```\nda[j]\u662f\u7b2cj\u4e2a\u8c46\u5b50\u7684\u4ef7\u503c\uff0cans\u4f7f\u6211\u4eec\u6700\u7ec8\u8981\u7684\u7ed3\u679c\n\n\u8c46\u5b50\u7684\u603b\u4ef7\u503c\u51cf\u53bb\u8def\u7a0b\u4e0a\u7684\u82b1\u8d39\u5f97\u51fa\u6765\u7684\u7ed3\u679c\uff0c\u6700\u540e\u518d\u53d6\u4e00\u4e2a\u6700\u5927\u503c\u663e\u7136\u662f\u6211\u4eec\u60f3\u8981\u7684ans\n## \u4ee3\u7801\uff08\u524d\u9762\u8be5\u8bf4\u7684\u90fd\u8bf4\u4e86\uff0c\u6ce8\u91ca\u6211\u5c31\u5c11\u52a0\u70b9\uff09\nbfs\u7248\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint n,m,d;\nint mmax,f[11][11][1<<11],da[11],val[1<<11];\nstruct asd{\n    int x,y,s;\n    asd(int aa=0,int bb=0,int cc=0){\n        x=aa,y=bb,s=cc;\n    }\n};//\u8dd1bfs\u7684\u7ed3\u6784\u4f53\nchar c[11][11];\nint xx[4]={0,-1,0,1},yy[4]={-1,0,1,0},ax[11],ay[11];\n//xx,yy\u679a\u4e3e\u8d70\u7684\u65b9\u5411\uff0cax,ay\u8bb0\u5f55\u8c46\u8c46\u7684\u6a2a\u7eb5\u5750\u6807\nint ans=-0x3f3f3f3f;//\u8bb0\u5f55\u6700\u7ec8\u4ef7\u503c\nint vis[11][11][1<<11];//\u5224\u65ad\u8be5\u70b9\u662f\u5426\u5df2\u7ecf\u904d\u5386\u8fc7\nint solve(int mx,int my,int nx,int ny,int ms){\n    int ns=ms;\n    for(int i=1;i<=d;i++){\n        if(((mx==ax[i] && nx<ax[i]) || (mx<ax[i] && nx==ax[i])) && ny>ay[i]){\n            ns^=(1<<(i-1));\n        }\n    }\n    return ns;\n}\nvoid bfs(int ii,int jj){\n    queue<asd> q;\n    q.push(asd(ii,jj,0));\n    memset(f,0x3f,sizeof(f));\n    memset(vis,0,sizeof(vis));\n    f[ii][jj][0]=0;\n    while(!q.empty()){\n        asd aa=q.front();\n        q.pop();\n        int mx=aa.x,my=aa.y,ms=aa.s;\n        vis[mx][my][ms]=1;\n        for(int i=0;i<4;i++){\n            int nx=mx+xx[i],ny=my+yy[i];\n            if(nx<1 || ny<1 || nx>n || ny>m || (c[nx][ny]>='1' && c[nx][ny]<='9') || c[nx][ny]=='#') continue;\n             //\u5224\u65ad\u8be5\u70b9\u662f\u5426\u80fd\u8d70\n            //\u6ce8\u610f\u8c46\u8c46\u6240\u5728\u7684\u65b9\u683c\u4e5f\u4e0d\u80fd\u8d70\n            int ns=ms;\n            if(i&1) ns=solve(mx,my,nx,ny,ms);\n            //\u53ea\u6709\u5728\u4e0a\u4e0b\u8d70\u7684\u65f6\u5019\u624d\u6539\u53d8\u72b6\u6001\uff0c\u5426\u5219\u72b6\u6001\u4e0d\u53d8\n            //\u5982\u679c\u4e0d\u80fd\u7406\u89e3\u4e5f\u53ef\u4ee5\u5199\u6210i==1 || i==3\n            if(vis[nx][ny][ns]==1) continue;    \n            //\u5982\u679c\u5df2\u7ecf\u66f4\u65b0\u8fc7\uff0c\u5c31\u4e0d\u518d\u66f4\u65b0\n            if(f[mx][my][ms]<f[nx][ny][ns]){\n                f[nx][ny][ns]=f[mx][my][ms]+1;\n                vis[nx][ny][ns]=1;\n                q.push(asd(nx,ny,ns));\n            }\n        }\n    }\n    for(int i=0;i<mmax;i++){\n        ans=max(ans,val[i]-f[ii][jj][i]);\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&d);\n    for(int i=1;i<=d;i++){\n        scanf(\"%d\",&da[i]);\n    }\n    mmax=1<<d;\n    for(int i=0;i<mmax;i++){\n        for(int j=1;j<=d;j++){\n            if(i&(1<<(j-1))) val[i]+=da[j];\n        }\n    }\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",c[i]+1);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]>'0' && c[i][j]<='9'){\n                int now=c[i][j]-'0';\n                ax[now]=i,ay[now]=j;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]=='0'){\n                bfs(i,j);\n                //\u5982\u679c\u8be5\u70b9\u4e3a0\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\nSPFA\u7248\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint n,m,d;\nint mmax,f[11][11][1<<11],da[11],val[1<<11];\nstruct asd{\n    int x,y,s;\n    asd(int aa=0,int bb=0,int cc=0){\n        x=aa,y=bb,s=cc;\n    }\n}b[11*11];\nchar c[11][11];\nint xx[4]={0,-1,0,1},yy[4]={-1,0,1,0},ax[12],ay[12];\nint ans=-0x3f3f3f3f;\nint vis[12][12][1<<12];\ninline int solve(int mx,int my,int nx,int ny,int ms){\n    int ns=ms;\n    for(int i=1;i<=d;i++){\n        if(((mx==ax[i] && nx<ax[i]) || (mx<ax[i] && nx==ax[i])) && ny>ay[i]){\n            ns^=(1<<(i-1));\n        }\n    }\n    return ns;\n}\ninline void SPFA(int ii,int jj){\n    queue<asd> q;\n    q.push(asd(ii,jj,0));\n    memset(f,0x3f,sizeof(f));\n    f[ii][jj][0]=0;\n    //memset(vis,0,sizeof(vis));\n    while(!q.empty()){\n        asd aa=q.front();\n        q.pop();\n        int mx=aa.x,my=aa.y,ms=aa.s;\n        vis[mx][my][ms]=0;\n        for(int i=0;i<4;i++){\n            int nx=mx+xx[i],ny=my+yy[i];\n            if(nx<1 || ny<1 || nx>n || ny>m || (c[nx][ny]>='1' && c[nx][ny]<='9') || c[nx][ny]=='#') continue;\n            int ns=ms;\n            if(i&1) ns=solve(mx,my,nx,ny,ms);\n            if(f[mx][my][ms]<f[nx][ny][ns]){\n                f[nx][ny][ns]=f[mx][my][ms]+1;\n                if(vis[nx][ny][ns]==0){\n                    vis[nx][ny][ns]=1;\n                    q.push(asd(nx,ny,ns));\n                }\n            }\n        }\n    }\n    for(int i=0;i<mmax;i++){\n        ans=max(ans,val[i]-f[ii][jj][i]);\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&d);\n    for(int i=1;i<=d;i++){\n        scanf(\"%d\",&da[i]);\n    }\n    mmax=1<<d;\n    for(int i=0;i<mmax;i++){\n        for(int j=1;j<=d;j++){\n            if(i&(1<<(j-1))) val[i]+=da[j];\n        }\n    }\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",c[i]+1);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]>'0' && c[i][j]<='9'){\n                int now=c[i][j]-'0';\n                ax[now]=i,ay[now]=j;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]=='0'){\n                SPFA(i,j);\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\u5927\u5bb6\u4e00\u5b9a\u8981\u6ce8\u610fvis\u6570\u7ec4\u7684\u521d\u59cb\u5316\n\n\u800c\u4e14\u6570\u7ec4\u4e0d\u8981\u5f00\u592a\u5927\uff0c\u5426\u5219\u4f1aT\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u9519\u89e3\uff0c\u4e5f\u5c31\u662fbfs\u7684vis\u6570\u7ec4\u6ca1\u6709\u521d\u59cb\u5316\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint n,m,d;\nint mmax,f[11][11][1<<11],da[11],val[1<<11];\nstruct asd{\n    int x,y,s;\n    asd(int aa=0,int bb=0,int cc=0){\n        x=aa,y=bb,s=cc;\n    }\n};//\u8dd1bfs\u7684\u7ed3\u6784\u4f53\nchar c[11][11];\nint xx[4]={0,-1,0,1},yy[4]={-1,0,1,0},ax[11],ay[11];\n//xx,yy\u679a\u4e3e\u8d70\u7684\u65b9\u5411\uff0cax,ay\u8bb0\u5f55\u8c46\u8c46\u7684\u6a2a\u7eb5\u5750\u6807\nint ans=-0x3f3f3f3f;//\u8bb0\u5f55\u6700\u7ec8\u4ef7\u503c\nint vis[11][11][1<<11];//\u5224\u65ad\u8be5\u70b9\u662f\u5426\u5df2\u7ecf\u904d\u5386\u8fc7\nint solve(int mx,int my,int nx,int ny,int ms){\n    int ns=ms;\n    for(int i=1;i<=d;i++){\n        if(((mx==ax[i] && nx<ax[i]) || (mx<ax[i] && nx==ax[i])) && ny>ay[i]){\n            ns^=(1<<(i-1));\n        }\n    }\n    return ns;\n}\nvoid bfs(int ii,int jj){\n    queue<asd> q;\n    q.push(asd(ii,jj,0));\n    memset(f,0x3f,sizeof(f));\n    f[ii][jj][0]=0;\n    while(!q.empty()){\n        asd aa=q.front();\n        q.pop();\n        int mx=aa.x,my=aa.y,ms=aa.s;\n        vis[mx][my][ms]=1;\n        for(int i=0;i<4;i++){\n            int nx=mx+xx[i],ny=my+yy[i];\n            if(nx<1 || ny<1 || nx>n || ny>m || (c[nx][ny]>='1' && c[nx][ny]<='9') || c[nx][ny]=='#') continue;\n             //\u5224\u65ad\u8be5\u70b9\u662f\u5426\u80fd\u8d70\n            //\u6ce8\u610f\u8c46\u8c46\u6240\u5728\u7684\u65b9\u683c\u4e5f\u4e0d\u80fd\u8d70\n            int ns=ms;\n            if(i&1) ns=solve(mx,my,nx,ny,ms);\n            //\u53ea\u6709\u5728\u4e0a\u4e0b\u8d70\u7684\u65f6\u5019\u624d\u6539\u53d8\u72b6\u6001\uff0c\u5426\u5219\u72b6\u6001\u4e0d\u53d8\n            //\u5982\u679c\u4e0d\u80fd\u7406\u89e3\u4e5f\u53ef\u4ee5\u5199\u6210i==1 || i==3\n            if(vis[nx][ny][ns]==1) continue;    \n            //\u5982\u679c\u5df2\u7ecf\u66f4\u65b0\u8fc7\uff0c\u5c31\u4e0d\u518d\u66f4\u65b0\n            if(f[mx][my][ms]<f[nx][ny][ns]){\n                f[nx][ny][ns]=f[mx][my][ms]+1;\n                if(vis[nx][ny][ns]==0){\n                    vis[nx][ny][ns]=1;\n                    q.push(asd(nx,ny,ns));\n                }\n            }\n        }\n    }\n    for(int i=0;i<mmax;i++){\n        ans=max(ans,val[i]-f[ii][jj][i]);\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&d);\n    for(int i=1;i<=d;i++){\n        scanf(\"%d\",&da[i]);\n    }\n    mmax=1<<d;\n    for(int i=0;i<mmax;i++){\n        for(int j=1;j<=d;j++){\n            if(i&(1<<(j-1))) val[i]+=da[j];\n        }\n    }\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",c[i]+1);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]>'0' && c[i][j]<='9'){\n                int now=c[i][j]-'0';\n                ax[now]=i,ay[now]=j;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(c[i][j]=='0'){\n                bfs(i,j);\n                //\u5982\u679c\u8be5\u70b9\u4e3a0\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u8d77\u70b9\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\u4f46\u662f\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u5b83\u7adf\u7136\u80fd\u8fc7\uff0c\u800c\u4e14\u6bd4\u6b63\u89e3\u5feb10\u500d\uff0c\u53ea\u752870ms\n\n\u5f15\u7528pl.er()\u5927\u4f6c\u7684\u601d\u8def\n\n\u5b83\u4e4b\u6240\u4ee5\u5feb\u662f\u56e0\u4e3a\u7b2c\u4e00\u6b21\u904d\u5386\u4e4b\u540evis\u6570\u7ec4\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u4e8e\u662f\u5728\u4e4b\u540e\u7684\u904d\u5386\u4e2d\u5b83\u4eec\u5c31\u4e0d\u4f1a\u518d\u8fdb\u6808\n\n\u4f46\u662f\u8fd9\u6837\u505a\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\n\n```\n5 5\n1\n1000\n00000\n00000\n01000\n00000\n00000\n```\n\u6b63\u89e3\u662f992\uff0c\u4f46\u662f\u9519\u89e3\u5374\u8f93\u51fa990\n\n\u56e0\u6b64\u5927\u5bb6\u4e00\u5b9a\u8981\u6ce8\u610f",
        "postTime": 1586922046,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2566 \u3010[SCOI2009]\u56f4\u8c46\u8c46\u3011"
    },
    {
        "content": "[P2566 [SCOI2009]\u56f4\u8c46\u8c46](https://www.luogu.com.cn/problem/P2566)\n\n### \u9898\u610f\n\u5728 $N\\times M$ \u7684\u7f51\u683c\u4e2d\u6709 $D$ \u9897\u8c46\u5b50\uff0c\u7b2c $i$ \u9897\u8c46\u4ef7\u503c $V_i$\u3002\u56fe\u4e2d\u6709\u4e9b\u683c\u5b50\u4e0a\u6709\u969c\u788d\u7269\u3002\u4ece\u4efb\u610f\u4e00\u683c\u5f00\u59cb\uff0c\u7528\u4e00\u6761\u56de\u8def\u56f4\u4f4f\u8c46\u5b50\uff0c\u5f97\u5206\u4e3a\u56f4\u4f4f\u8c46\u5b50\u7684\u4ef7\u503c\u548c\u51cf\u53bb\u56de\u8def\u7684\u957f\u5ea6\uff0c\u6c42\u6700\u9ad8\u5f97\u5206\u3002\n\n##### \u6ce8\uff1a\n1. \u56de\u8def\u4e0d\u80fd\u7ecf\u8fc7\u8c46\u5b50/\u969c\u788d\u7269\u6240\u5728\u683c\u3002\n1. \u6700\u4f4e\u5f97\u5206\u4e3a $0$\uff08\u4e0d\u79fb\u52a8\uff09\u3002\n\n##### \u6570\u636e\u8303\u56f4\uff1a\n$1\\leq N,M \\leq 10,1\\leq D\\leq 9, |V_i|\\leq10000$\u3002\n\n###### \u5173\u952e\u8bcd\uff1a\u72b6\u6001\u538b\u7f29\uff0c\u52a8\u6001\u89c4\u5212\uff0cDijkstra \u7b97\u6cd5\n\n------------\n### \u89e3\u9898\u601d\u8def\n\u9996\u5148\u8003\u8651\u641c\u7d22\u3002\u641c\u7d22\u7684\u57fa\u672c\u601d\u8def\u5c31\u662f\u627e\u51fa\u4e00\u6761\u56de\u8def\uff0c\u7edf\u8ba1\u51fa\u5f97\u5206\u5e76\u66f4\u65b0\u7b54\u6848\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u641c\u7d22\u7684\u6846\u67b6\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\uff0c\u4ece\u4e00\u683c\u51fa\u53d1\u5411\u56db\u4e2a\u65b9\u5411\u641c\u7d22\uff0c\u5982\u679c\u56de\u5230\u8d77\u70b9\u5c31\u66f4\u65b0\u7b54\u6848\u3002\n\n\u641c\u7d22\u7684\u72b6\u6001\u53ef\u4ee5\u8bb0\u4e3a\n$$dfs(x, y)\\to \\begin{cases}\ndfs(x+1,y) ,& \\text{if}\\ x < N\\\\\ndfs(x-1,y) ,& \\text{if}\\ x > 1\\\\\ndfs(x,y+1) ,& \\text{if}\\ y < M\\\\\ndfs(x,y-1) ,& \\text{if}\\ y > 1\\\\\n\\end{cases}$$\n\u5176\u4e2d\uff0c$dfs(x,y)$ \u8868\u793a\u5f53\u524d\u8d70\u5230 $(x,y)$ \u683c\u7684\u60c5\u51b5\u3002\n\n\u4e3a\u4e86\u66f4\u65b0\u7b54\u6848\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u56f4\u4f4f\u7684\u8c46\u5b50\u60c5\u51b5\uff0c\u4ee5\u53ca\u8fd9\u6761\u56de\u8def\u7684\u957f\u5ea6\u3002\u56de\u8def\u7684\u957f\u5ea6\u53ef\u4ee5\u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\uff0c\u4f46\u662f\u7531\u4e8e\u65e0\u6cd5\u8bb0\u5f55\u6574\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u53ea\u80fd\u5728\u641c\u7d22\u65f6\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u65b9\u6cd5\u8bb0\u5f55\u56f4\u4f4f\u8c46\u5b50\u7684\u60c5\u51b5 $sta$\uff0c\u72b6\u6001\u53d8\u6210\u4e86 $dfs(x,y,l,sta)$\u3002\n\n\u5728\u66f4\u65b0\u7b54\u6848\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63d0\u524d\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a $sta$ \u5bf9\u5e94\u7684\u5f97\u5206\u6765\u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u8ba1\u7b97\uff0c\u4f46\u662f\u5982\u4f55\u5728\u641c\u7d22\u65f6\u8bb0\u5f55 $sta$ \u5462\uff1f\u5176\u672c\u8d28\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u4e00\u9897\u8c46\u662f\u5426\u5728\u56f4\u6210\u7684\u591a\u8fb9\u5f62\u5185\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u5e73\u9762\u8ba1\u7b97\u51e0\u4f55\u4e2d\u6709\u4e0d\u540c\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u8fd9\u91cc\u91c7\u7528\u5c04\u7ebf\u6cd5\u3002\u5177\u4f53\u505a\u6cd5\u4e3a\uff1a\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u5f15\u4e00\u6761\u4efb\u610f\u65b9\u5411\u7684\u5c04\u7ebf\u3002\u5982\u679c\u8fd9\u6761\u5c04\u7ebf\u4e0e\u591a\u8fb9\u5f62\u8fb9\u7684\u4ea4\u70b9\u4e2a\u6570\u4e3a\u5947\u6570\uff0c\u8bf4\u660e\u8be5\u70b9\u5728\u591a\u8fb9\u5f62\u5185\u90e8\u3002\u53cd\u4e4b\u5219\u5728\u5916\u90e8\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u65b9\u4fbf\u5730\u5224\u65ad\u51fa\u4e00\u9897\u8c46\u662f\u5426\u5728\u56f4\u51fa\u7684\u591a\u8fb9\u5f62\u5185\u90e8\u3002\u4f46\u5177\u4f53\u5b9e\u73b0\u8d77\u6765\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u8981\u6ce8\u610f\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u6211\u4eec\u53d6\u5c04\u7ebf\u65b9\u5411\u4e3a\u6b63\u53f3\u65b9\u3002\u6bcf\u4e00\u6b21\u641c\u7d22\u5230\u4e00\u9897\u8c46\u7684\u53f3\u65b9\u65f6\uff0c\u6211\u4eec\u5c31\u6539\u53d8\u8fd9\u9897\u8c46\u88ab\u5305\u56f4\u7684\u60c5\u51b5\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u8981\u5224\u65ad\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u6539\u53d8\u4e00\u9897\u8c46\u7684\u5305\u56f4\u60c5\u51b5\u3002\n\n\u9996\u5148\uff0c\u5f53\u4e00\u6b21\u641c\u7d22\u5230\u4e00\u9897\u8c46\u53f3\u65b9\u7684\u683c\u5b50\u65f6\uff0c\u5c31\u4f1a\u4f7f\u8fd9\u9897\u8c46\u5b50\u7684\u60c5\u51b5\u6539\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u641c\u7d22\u5230 $(x,y)$ \u65f6\u5c06\u8fd9\u4e2a\u683c\u5b50\u5de6\u8fb9\u7684\u6240\u6709\u8c46\u7684\u5305\u56f4\u60c5\u51b5\u6539\u53d8\u3002\u4f46\u662f\u8003\u8651\u51e0\u79cd\u60c5\u51b5\uff1a\u641c\u7d22\u65f6\u5982\u679c\u5728 $(x,y)$ \u6298\u8fd4\uff0c\u90a3 $(x,y)$ \u4f1a\u88ab\u7ecf\u8fc7\u4e00\u6b21\uff0c\u4f46\u8c46\u7684\u5305\u56f4\u60c5\u51b5\u4e0d\u4f1a\u88ab\u6539\u53d8\uff1b\u641c\u7d22\u65f6\u5982\u679c\u6709\u4e00\u6761\u8fb9\u5e73\u884c\u4e8e\u5c04\u7ebf\uff0c\u90a3\u8fd9\u9897\u8c46\u7684\u5305\u56f4\u60c5\u51b5\u5c31\u4e0d\u80fd\u5f88\u597d\u5730\u8ba1\u7b97\u3002\u5982\u56fe\u6240\u793a\uff08\u5706\u5f62\u8868\u793a\u4e00\u9897\u8c46\u5b50\uff0c\u7070\u8272\u65b9\u683c\u8868\u793a\u7ecf\u8fc7\u5c04\u7ebf\u7684\u683c\u5b50\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/d5mv3tu5.png)\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5730\u5224\u65ad $(x,y)$ \u662f\u5426\u5728\u8c46\u7684\u53f3\u8fb9\u6765\u51b3\u5b9a\u8c46\u7684\u5305\u56f4\u60c5\u51b5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53ea\u6709\u5728\u7279\u5b9a\u7684\u65b9\u5411\u4e0a\u8ba1\u7b97\u7ecf\u8fc7\u6b21\u6570\u624d\u6709\u6548\u3002\u5bf9\u4e8e\u6c34\u5e73\u65b9\u5411\u7684\u79fb\u52a8\uff0c\u4e0d\u8ba1\u7b97\u5305\u56f4\u60c5\u51b5\u3002\u800c\u5bf9\u4e8e\u7ad6\u76f4\u65b9\u5411\u7684\u79fb\u52a8\uff0c\u5728\u4ece\u4e0a\u65b9\u8d70\u5230\u672c\u683c\u6216\u4ece\u672c\u683c\u8d70\u5230\u4e0a\u65b9\u4e00\u683c\u65f6\u8ba1\u7b97\u5305\u56f4\u60c5\u51b5\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u5404\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u6b63\u786e\u5730\u8ba1\u7b97\u51fa\u6bcf\u4e00\u6761\u56de\u8def\u5305\u56f4\u4e86\u54ea\u51e0\u9897\u8c46\u5b50\u3002\n\n\u6709\u4e86\u641c\u7d22\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u5176\u8f6c\u5316\u4e3a\u52a8\u6001\u89c4\u5212\u3002\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u8bb0\u4e3a $f(x,y,sta)$\uff0c\u8868\u793a\u8d70\u5230 $(x,y)$\uff0c\u56f4\u4f4f\u8c46\u5b50\u7684\u60c5\u51b5\u4e3a $sta$ \u65f6\u8d70\u8fc7\u7684\u6700\u5c0f\u8ddd\u79bb\u3002\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$f(x,y,sta')=\\min\\{f(x\\pm1,y,sta),f(x,y\\pm1,sta)\\}+1$$\n\u5176\u4e2d\uff0c$sta'$ \u8868\u793a\u8ba1\u7b97\u51fa\u7684\u65b0\u5305\u56f4\u60c5\u51b5\u3002\u7531\u4e8e\u8ba1\u7b97 $sta'$ \u65f6\u9700\u8981\u5224\u65ad\u6bcf\u4e00\u9897\u8c46\u5b50\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(D)$\u3002\n\n\u5bf9\u4e8e\u679a\u4e3e\u7684\u6bcf\u4e00\u4e2a\u8d77\u70b9 $(sx,sy)$\uff0c\u6709\u521d\u59cb\u5316\u6570\u7ec4\u4e3a\u6b63\u65e0\u7a77\u5927\uff0c\u521d\u503c\u4e3a $f(sx,sy,0)=0$\u3002\u6700\u7ec8\u7b54\u6848\u4e3a $\\min\\limits_{sta}\\{score[sta] - f(sx,sy,sta)\\}$\uff0c$score[sta]$ \u8868\u793a\u9884\u5904\u7406\u51fa\u7684\u5305\u56f4\u60c5\u51b5\u4e3a $sta$ \u65f6\u7684\u5206\u6570\u3002\n\n\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u548c\u65b9\u7a0b\u6709\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u65b9\u7a0b\u66f4\u65b0\u987a\u5e8f\u4e0d\u786e\u5b9a\uff0c\u4e0d\u80fd\u76f4\u63a5\u9012\u63a8\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u9012\u63a8\u65b9\u7a0b\u6539\u5199\u4e3a $f(x,y,sta') = \\min(f(x,y,sta'),f(lx,ly,sta)+1)$\u3002$lx,ly$ \u8868\u793a\u4e0a\u4e00\u683c\u7684\u5750\u6807\u3002\u8fd9\u4e2a\u65b9\u7a0b\u7684\u5f62\u5f0f\u4e0e\u56fe\u8bba\u4e2d\u7684\u6700\u77ed\u8def\u677e\u5f1b\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\u7531\u4e8e\u4ee3\u8868\u8fb9\u6743\u7684\u4e00\u9879\u603b\u662f $1$\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u8d1f\u6743\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5806\u4f18\u5316 Dijkstra \u7b97\u6cd5\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u9012\u63a8\u3002\n\n\u672c\u9898\u7684\u7b97\u6cd5\u6d41\u7a0b\uff1a\n- \u8f93\u5165\uff0c\u904d\u5386\u7f51\u683c\uff0c\u8bb0\u5f55\u6bcf\u4e00\u9897\u8c46\u5b50\u7684\u5750\u6807\uff1b\n- \u9884\u5904\u7406\u51fa $score$ \u6570\u7ec4\uff1b\n- \u679a\u4e3e\u8d77\u70b9 $(sx,sy)$\uff1a\n\t- Dijkstra \u9012\u63a8\u65b9\u7a0b\uff1b\n    - \u66f4\u65b0\u7b54\u6848\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(D\\cdot2^D+(Dnm)^2\\log(Dnm))$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\nusing namespace std;\n\nconst int maxN = 15;\nint N, M, D, V[maxN];\nint dx[maxN], dy[maxN], score[1 << 10];\t\t//dx\uff0cdy \u8bb0\u5f55\u6bcf\u4e00\u9897\u8c46\u7684\u5750\u6807\nchar c[maxN][maxN];\nint f[maxN][maxN][1 << 10];\nbool vis[maxN][maxN][1 << 10];\nint ans = 0;\n\nstruct status{\t//\u8bb0\u5f55\u72b6\u6001\uff0c\u65b9\u4fbf Dijkstra \u7b97\u6cd5\u7684\u5806\u4f18\u5316\n    int x, y, sta;\n    bool operator< (const status &b) const {\n        return f[x][y][sta] > f[b.x][b.y][b.sta];\n    }\n};\npriority_queue <status> Q;\ninline void dp(int lx, int ly, int x, int y, int laststa) {\t\t//\u76f8\u5f53\u4e8e\u56fe\u8bba\u4e2d\u7684 relax \u64cd\u4f5c\n    int sta = laststa;\n    if (x != lx) {\n        for (int i = 1; i <= D; i++) {\n            if (((x == dx[i] && lx < dx[i]) || (x < dx[i] && lx == dx[i])) && y > dy[i]) sta ^= (1 << (i - 1));\n        }\n    }\n    if (f[x][y][sta] > f[lx][ly][laststa] + 1) {\n        f[x][y][sta] = f[lx][ly][laststa] + 1;\n        Q.push({x, y, sta});\n    }\n}\ninline void Dijkstra(int sx, int sy) {\t\t//\u8ba1\u7b97 f \u6570\u7ec4\n    memset(f, 0x7f, sizeof(f));\n    memset(vis, 0, sizeof(vis));\n    f[sx][sy][0] = 0;\n    Q.push({sx, sy, 0});\n    while (!Q.empty()) {\n        status cur = Q.top();\n        Q.pop();\n        int x = cur.x, y = cur.y, sta = cur.sta;\n        vis[x][y][sta] = true;\n        if (x < N && c[x + 1][y] == '0' && !vis[x + 1][y][sta]) dp(x, y, x + 1, y, sta);\n        if (x > 1 && c[x - 1][y] == '0' && !vis[x - 1][y][sta]) dp(x, y, x - 1, y, sta);\n        if (y < M && c[x][y + 1] == '0' && !vis[x][y + 1][sta]) dp(x, y, x, y + 1, sta);\n        if (y > 1 && c[x][y - 1] == '0' && !vis[x][y - 1][sta]) dp(x, y, x, y - 1, sta);\n    }\n}\n\n\nint main() {\n    cin >> N >> M;\n    cin >> D;\n    for (int i = 1; i <= D; i++) {\n        cin >> V[i];\n    }\n    for (int i = 1; i <= N; i++) {\n        for (int j = 1; j <= M; j++) {\n            cin >> c[i][j];\n            if (c[i][j] - '0' <= 9 && c[i][j] - '0' >= 1) {\n                dx[c[i][j] - '0'] = i;\n                dy[c[i][j] - '0'] = j;\n            }\n        }\n    }\n    for (int sta = 0; sta < (1 << D); sta++) {\n        for (int i = 1; i <= D; i++) {\n            if ((sta & (1 << (i - 1))) != 0) score[sta] += V[i];\t//\u9884\u5904\u7406 score \u6570\u7ec4\n        }\n    }\n    for (int sx = 1; sx <= N; sx++) {\n        for (int sy = 1; sy <= M; sy++) {\n            if (c[sx][sy] != '0') continue;\t\t//\u5f53 (sx,sy) \u4e0d\u80fd\u4f5c\u4e3a\u8d77\u70b9\u65f6\u526a\u679d\n            Dijkstra(sx, sy);\n            for (int sta = 0; sta < (1 << D); sta++) {\n                ans = max(ans, score[sta] - f[sx][sy][sta]);\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\n",
        "postTime": 1627980216,
        "uid": 362761,
        "name": "Mr_HY43205",
        "ccfLevel": 6,
        "title": "P2566 \u56f4\u8c46\u8c46"
    },
    {
        "content": "\u8fd9\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u8c46\u5b50\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185\u3002\n\n\u5b9e\u9645\u4e0a\u6709\u4e00\u4e2a\u5f88\u597d\u5224\u65ad\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u53ef\u4ee5\u5f15\u4e00\u6761\u6c34\u5e73\u7ebf\uff0c\u770b\u548c\u591a\u8fb9\u5f62\u6709\u51e0\u4e2a\u4ea4\u70b9\uff0c\u6709\u5947\u6570\u4e2a\u4ea4\u70b9\u5c31\u5728\u591a\u8fb9\u5f62\u5185\uff0c\u5426\u5219\u5728\u591a\u8fb9\u5f62\u5916\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u60c5\u51b5\u3002\u5c31\u662f\u5982\u679c\u8def\u5f84\u4ece\u4e0a\u5f80\u4e0b\uff0c\u7a81\u7136\u5f80\u6c34\u5e73\u62d0\uff0c\u518d\u5f80\u4e0b\u62d0\uff0c\u90a3\u4e48\u8fd9\u662f\u6709\u5076\u6570\u4e2a\u4ea4\u70b9\u7684\uff0c\u4f46\u662f\u8c46\u5b50\u8fd8\u662f\u5728\u591a\u8fb9\u5f62\u5185\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8fb9\u5f53\u6210\u4e0a\u5f00\u4e0b\u95ed\u7684\u8fb9\uff0c\u53ea\u6709\u5f53\u6c34\u5e73\u7ebf\u4e0e\u4e00\u6761\u8fb9\u7684\u4e0b\u7aef\u70b9\u76f8\u4ea4\u624d\u7b97\u8fdb\u53bb\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5199\u4e00\u4e2a\u72b6\u538b+$spfa$\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define il inline\n#define RG register\n#define ll long long\n#define inf (1<<29)\n\nusing namespace std;\n\nstruct data{ int x,y,bin; }p[15];\n\nconst int d1[4]={0,0,-1,1};\nconst int d2[4]={-1,1,0,0};\n\nint f[15][15][1<<12],vis[15][15][1<<12],g[15][15],val[15],S,n,m,all,ans;\n\nqueue<data> Q;\n\nil int gi(){\n  RG int x=0,q=1; RG char ch=getchar();\n  while ((ch<'0' || ch>'9') && ch!='-') ch=getchar();\n  if (ch=='-') q=-1,ch=getchar();\n  while (ch>='0' && ch<='9') x=x*10+ch-48,ch=getchar();\n  return q*x;\n}\n\nil char gc(){\n  RG char ch=getchar();\n  while ((ch<'0' || ch>'9') && ch!='#') ch=getchar();\n  return ch;\n}\n\nil void spfa(RG int sx,RG int sy){\n  for (RG int i=1;i<=n;++i)\n    for (RG int j=1;j<=m;++j)\n      for (RG int k=0;k<all;++k) f[i][j][k]=-inf;\n  Q.push((data){sx,sy,0}),f[sx][sy][0]=0,vis[sx][sy][0]=1;\n  while (!Q.empty()){\n    RG data now=Q.front(); Q.pop();\n    if (now.x==sx && now.y==sy)\n      ans=max(ans,f[now.x][now.y][now.bin]);\n    for (RG int k=0,x,y,yy,bin,del;k<4;++k){\n      x=now.x+d1[k],y=now.y+d2[k];\n      if (x<=0 || x>n || y<=0 || y>m || g[x][y]) continue;\n      bin=now.bin,yy=max(y,now.y),del=0;\n      if (k<=1){\n    for (RG int i=1;i<=S;++i)\n      if (p[i].y==yy && p[i].x<x){\n        bin^=1<<(i-1);\n        if (bin>>(i-1)&1) del+=val[i]; else del-=val[i];\n      }\n      }\n      if (f[x][y][bin]<f[now.x][now.y][now.bin]+del-1){\n    f[x][y][bin]=f[now.x][now.y][now.bin]+del-1;\n    if (!vis[x][y][bin]) vis[x][y][bin]=1,Q.push((data){x,y,bin});\n      }\n    }\n    vis[now.x][now.y][now.bin]=0;\n  }\n  return;\n}\n\nint main(){\n#ifndef ONLINE_JUDGE\n  freopen(\"bean.in\",\"r\",stdin);\n  freopen(\"bean.out\",\"w\",stdout);\n#endif\n  n=gi(),m=gi(),S=gi(),all=1<<S;\n  for (RG int i=1;i<=S;++i) val[i]=gi();\n  for (RG int i=1;i<=n;++i)\n    for (RG int j=1;j<=m;++j){\n      RG char ch=gc();\n      if (ch=='#') g[i][j]=-1; else g[i][j]=ch-'0';\n      if (g[i][j]>=1 && g[i][j]<=9) p[g[i][j]]=(data){i,j};\n    }\n  for (RG int i=1;i<=n;++i)\n    for (RG int j=1;j<=m;++j) if (!g[i][j]) spfa(i,j);\n  cout<<ans; return 0;\n}\n```",
        "postTime": 1507951997,
        "uid": 25087,
        "name": "Mambason",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2566 \u3010[SCOI2009]\u56f4\u8c46\u8c46\u3011"
    },
    {
        "content": "\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u6709dp\u7684\u6807\u7b7e,\u8fd9\u9898\u4e2a\u4eba\u66f4\u503e\u5411\u4e8e\u72b6\u538bspfa\n\n\u5224\u65ad\u70b9\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185\uff1a\u4ece\u8fd9\u4e2a\u70b9\u5411\u5916\u5f15\u4e00\u6761\u5c04\u7ebf\uff0c\u82e5\u4e0e\u591a\u8fb9\u5f62\u76f8\u4ea4\u4e86\u5947\u6570\u6b21\uff0c\u5c31\u5728\u5b83\u7684\u5185\u90e8\uff0c\u5426\u5219\u5728\u5916\u90e8\u3002\n\n\u4e3a\u4e86\u9632\u6b62\u5404\u79cd\u8be1\u5f02\u60c5\u51b5\uff08\u6bd4\u5982\u591a\u8fb9\u5f62\u7c7b\u4f3c\u201c\u51f9\u201d\u5b57\uff0c\u7136\u540e\u8fc7\u4ed6\u7684\u9876\u70b9\uff1b\u5c04\u7ebf\u4e0e\u8fb9\u91cd\u5408\u4e0d\u7b97\u76f8\u4ea4\uff09\uff0c\u8fd9\u9898\u7684\u5c04\u7ebf\u91c7\u7528\u5411\u6b63\u53f3\u65b9\u7684\u5c04\u7ebf\n\n\u5148\u6765\u8bbe\u8ba1\u6700\u77ed\u8def\u7684\u72b6\u6001\n\n\u7528$f_{x,y,S}$\u8868\u793a\u5f53\u524d\u5728\u70b9$(x,y)$,\u72b6\u6001\u4e3aS\u8981\u8d70\u7684\u6700\u77ed\u6b65\u6570\n\n$1 \\leq D \\leq 9$\uff0c\u663e\u7136\u72b6\u538b\uff0cS\u7684\u7b2ci\u4f4d\u8868\u793a\u6570\u5b57i\u662f\u5426\u5728\u591a\u8fb9\u5f62\u5185\n\n\u7136\u540e\u8bbe\u8ba1\u72b6\u6001\u8f6c\u79fb\n\n\u5982\u679c\u5f53\u524d\u72b6\u6001\u4e3aS\uff0c\u4e0b\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\u4e3aT\uff0c\u600e\u4e48\u4eceS\u63a8\u51faT\n1. \u6a2a\u7740\u8d70\uff1aT=S\n2. \u7ad6\u7740\u8d70\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u6570\u5b57\u5728\u5f53\u524d\u70b9\u7684\u6b63\u5de6\u4fa7\u6216\u8005\u4e0b\u4e00\u4e2a\u70b9\u7684\u6b63\u5de6\u4fa7\uff08\u4f60\u4e0d\u80fd\u786e\u5b9a\u4e0b\u4e00\u6b65\u4f1a\u4e0d\u4f1a\u8f6c\u5f2f\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u91cd\u5408\uff0c\u6240\u4ee5\u8981\u7b97\u4e0a\u5f53\u524d\u70b9\uff09\uff0c\u90a3\u4e48\u6539\u53d8\u5b83\u7684\u72b6\u6001\uff08\u539f\u6765\u4e0d\u5728\u56fe\u5f62\u5185\u7684\u53d8\u6210\u5728\u5185\uff0c\u5728\u5185\u7684\u53d8\u6210\u5728\u5916\uff09\n\n\u641c\u7d22\u9898\u7684\u7279\u70b9\u662f\u601d\u8def\u7b80\u5355\u4ee3\u7801\u957f\uff0c\u8fd9\u9898\u5c31\u8bf4\u5230\u8fd9\u91cc\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nconst ll N=15,D=10;\nconst ll dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\nll n,m,k,ans,a[N],g[1<<D],f[N][N][1<<D],v[N][N][1<<D];\nchar s[N][N];\nstruct{\n    ll x,y;\n}place[N];\nstruct node{\n    ll x,y,S;\n};\nqueue<node> q;\n\ninline bool check(ll x,ll y){\n    return x>=1&&x<=n&&y>=1&&y<=m&&s[x][y]=='0';\n}\n\ninline ll getT(ll x,ll y,ll X,ll Y,ll S){\n    ll T=S;\n    for(ll i=1; i<=k; i++){\n        if(((x==place[i].x&&X<place[i].x)||(x<place[i].x&&X==place[i].x))&&Y>place[i].y) T^=1<<(i-1);\n    }\n    return T;\n}\n\ninline void spfa(node S){\n    while(!q.empty()) q.pop();\n    memset(v,0,sizeof(v));\n    memset(f,0x3f,sizeof(f));\n    q.push(S); v[S.x][S.y][S.S]=1;\n    f[S.x][S.y][S.S]=0;\n    while(!q.empty()){\n        ll x=q.front().x,y=q.front().y,S=q.front().S; q.pop();\n        v[x][y][S]=0;\n        for(ll i=0; i<4; i++){\n            ll X=x+dx[i],Y=y+dy[i];\n            if(check(X,Y)){\n                ll T=S;\n                if(i==0||i==2) T=getT(x,y,X,Y,S);\n                if(f[x][y][S]+1<f[X][Y][T]){\n                    f[X][Y][T]=f[x][y][S]+1;\n                    if(!v[X][Y][T]){\n                        q.push(node{X,Y,T});\n                        v[X][Y][T]=1;\n                    }\n                }\n            }\n        }\n    }\n    for(ll i=0; i<(1<<k); i++) ans=max(ans,g[i]-f[S.x][S.y][i]);\n}\n\nint main(){\n    cin>>n>>m>>k;\n    for(ll i=1; i<=k; i++) scanf(\"%lld\",&a[i]);\n    for(ll i=1; i<=n; i++){\n        scanf(\"%s\",s[i]+1);\n        for(ll j=1; j<=m; j++){\n            if(s[i][j]>='1'&&s[i][j]<='9'){\n                ll now=s[i][j]-48;\n                place[now].x=i;\n                place[now].y=j;\n            }\n        }\n    }\n    for(ll i=0; i<(1<<k); i++){\n        for(ll j=1; j<=k; j++){\n            if(i&(1<<(j-1))) g[i]+=a[j];\n        }\n    }\n    for(ll i=1; i<=n; i++){\n        for(ll j=1; j<=m; j++){\n            if(s[i][j]=='0') spfa(node{i,j,0});\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1603944135,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2566 \u3010[SCOI2009]\u56f4\u8c46\u8c46\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u8fd9\u9053\u9898\u770b\u7740\u524d\u8fb9\u7684\u53d9\u8ff0\u597d\u50cf\u4e0d\u662f\u5f88\u96be\uff0c\u4e0d\u5c31\u662f\u628a\u8c46\u5b50\u56f4\u8d77\u6765\u5417\uff0c\u4e00\u770b\u6570\u636e\uff0c$\u72b6\u538bDP$\u80af\u5b9a\u662f\u4e86\uff0c\u72b6\u538b$DP$\u7684\u672c\u8d28\u5176\u5b9e\u8fd8\u662f\u66b4\u529b\uff0c\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u9009\u62e9\u4e86\u4e00\u4e2a\u66b4\u529b\uff0c\u4e0d\u5982\u66b4\u529b\u5230\u5e95\uff0c\u4e8e\u662f\u6211\u5f00\u59cb\u679a\u4e3e\u56f4\u6210\u7684\u8def\u5f84\uff0c\u6253\u4e86\u4e00\u5806\u5199\u597d\u540e\u53d1\u73b0\u597d\u50cf\u4e0d\u5bf9\uff0c\uff08\u6211\u6700\u5f00\u59cb\u4ee5\u4e3a\u8def\u5f84\u4e00\u5b9a\u662f\u77e9\u5f62\uff09\uff0c\u7136\u540e.....**\u8def\u5f84\u6240\u5f62\u6210\u7684\u591a\u8fb9\u5f62\uff08\u53ef\u80fd\u662f\u542b\u81ea\u4ea4\u7684\u590d\u6742\u591a\u8fb9\u5f62\uff09**\uff0c\u6240\u4ee5\u679a\u4e3e\u662f\u4e0d\u73b0\u5b9e\u7684\u4e86\uff0c\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u529e\u6cd5\uff0c\u5c04\u7ebf\u6cd5\u5224\u65ad\u70b9\u662f\u4e0d\u662f\u5728\u591a\u8fb9\u5f62\u5185\uff0c\u4e00\u53e5\u8bdd\u603b\u7ed3\u5c31\u662f\u5f15\u4e00\u6761\u5207\u7ebf\uff0c\u5982\u679c\u4e0e\u591a\u8fb9\u5f62\u6709\u5076\u6570\u4e2a\u4ea4\u70b9\uff0c\u5219\u5728\u5916\u90e8\uff0c\u5947\u6570\u4e2a\u5219\u5728\u5185\u90e8\uff0c\u4f46\u4f60\u4f1a\u53d1\u73b0\u5f53\u70b9\u5728\u591a\u8fb9\u5f62\u7684\u8fb9\u4e0a\u65f6\u8fd9\u4e2a\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u505a\u70b9\u4e8b\u60c5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u8fd9\u6761\u8fb9\u4e0a\u5f00\u4e0b\u95ed\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u95ee\u9898\u4e86\u3002\u8f6c\u79fb\u7684\u65f6\u5019\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u56e0\u4e3a\u6d89\u53ca\u5230\u6bcf\u4e2a\u8c46\u5b50\uff0c\u5e76\u4e14\u8c46\u5b50\u548c\u8c46\u5b50\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u5750\u6807\u5c31\u76f4\u63a5\u4f1a\u5360\u4e8c\u7ef4\u3002\u72b6\u538b$DP$\u7684\u8bdd\u8fd8\u8981\u989d\u5916\u518d\u52a0\u4e00\u5c42\u72b6\u6001\uff0c\u5c31\u662f\u6bcf\u4e2a\u8c46\u5b50\u653e\u4e0e\u4e0d\u653e\uff0c\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u4f4d\u4e3a1\u5219\u653e\u5426\u5219\u4e0d\u653e\u3002\u8fd9\u6837\u5c31\u786e\u5b9a\u597d\u4e86\u72b6\u6001\uff0c\u4e0b\u9762\u6211\u4eec\u9700\u8981\u8dd1\u4e00\u6761\u56de\u8def\u51fa\u6765\uff0c\u6211\u611f\u89c9\u6ca1\u6709\u6bd4$SPFA$\u66f4\u5408\u9002\u7684\u4e86\uff0c\u4ece\u6bcf\u4e00\u4e2a\u53ef\u4ee5\u88ab\u56f4\u8d77\u6765\u7684\u70b9\u5f00\u59cb\u8dd1\uff0c\u4e00\u76f4\u8dd1\u5230\u961f\u5217\u4e3a\u7a7a\uff0c\u90a3\u53ef\u80fd\u4f1a\u6b7b\u5faa\u73af\u5417\uff1f**\u663e\u7136\u4e0d\u4f1a**\uff0c\u56e0\u4e3a\u8dd1\u7740\u8dd1\u7740\u6b65\u6570\u5c31\u53d8\u591a\u4e86\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u8f6c\u79fb\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u5165\u961f\u5217\u4e86\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6b7b\u5faa\u73af\u3002\n\n\u5927\u6982\u601d\u8def\u662f\u6709\u4e86\uff0c\u4e0b\u9762\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\u7684\u4e1c\u897f\u3002\n\n\u600e\u4e48\u5224\u65ad\u662f\u4ea4\u4e86\u5947\u6570\u6b21\u8fd8\u662f\u5076\u6570\u6b21\u5462\uff1f\u6709\u4e00\u4e2a\u4e1c\u897f\u53eb\u5f02\u6216\uff0c\u5f88\u597d\u7528\uff0c\u4e4b\u524d\u5199NOI ONLINE\u7684\u4e00\u9053\u9898\u65f6\u4e5f\u7528\u8fc7\uff0c\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u5047\u5982\u8be5\u8def\u5f84\u7ecf\u8fc7\u4e86\u8c46\u5b50\u5f15\u51fa\u7684\u5c04\u7ebf\uff0c\u5c31\u628a\u8be5\u4e8c\u8fdb\u5236\u4f4d\u5f02\u62161\uff0c\u5982\u679c\u5b83\u539f\u6765\u662f1\uff0c\u5c31\u662f\u66fe\u7ecf\u7ecf\u8fc7\uff0c\u90a3\u4e48\u518d\u6b21\u7ecf\u8fc7\u5c31\u5e94\u8be5\u662f\u5076\u6570\u6b21\u4e86\uff0c\u5f02\u62161\u540e\u662f0\uff0c\u8003\u8651\u56f4\u4f4f\u7684\u8c46\u5b50\u65f6\u5c31\u5e94\u8be5\u628a\u8fd9\u4e2a\u51cf\u53bb\uff0cemm\u597d\u50cf\u8fd8\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u5c31\u662f\u6211\u5f53\u524d\u7684$DP$\u6570\u7ec4\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u8c46\u5b50\uff0c\u4f46\u662f\u6211\u5f53\u524d\u7684\u72b6\u6001\u5e76\u6ca1\u6709\uff0c\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u628a\u8fd9\u9897\u8c46\u5b50\u51cf\u53bb\uff0c\u53cd\u4e4b\u5219\u52a0\u4e0a\uff0c\u6211\u611f\u89c9\u8fd9\u4e48\u505a\u597d\u50cf\u5199\u8d77\u6765\u4f1a\u7b80\u5355\u4e00\u4e9b\u3002\n",
        "postTime": 1586908351,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2566 \u3010[SCOI2009]\u56f4\u8c46\u8c46\u3011"
    },
    {
        "content": "## [P2566 [SCOI2009]\u56f4\u8c46\u8c46](https://www.luogu.com.cn/problem/P2566)\n\n>\u4f60\u7684 DP\uff0c\u53c8\u4f55\u5fc5\u662f DP\uff1f\n\n\u672c\u9898\u662f\u4e00\u4e2a\u7ec6\u8282\u8f83\u591a\u7684 DP\u3002\n\nDP \u7684\u72b6\u6001\u8bbe\u7f6e\u548c\u5927\u5bb6\u7684\u5dee\u4e0d\u591a\uff0c\u8bbe $f_{S,x,y}$ \u8868\u793a\u5305\u542b\u72b6\u6001\u4e3a $S$ \u7684\u6240\u6709\u8282\u70b9\uff0c\u73b0\u5728\u8d70\u5230\u4e86 $(x,y)$ \u683c\u70b9\u3002\n\n\u81f3\u4e8e $S$ \u7684\u5904\u7406\u6211\u662f\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u8c46\u5b50**\u5411\u4e0a\u7684\u5c04\u7ebf**\u7a7f\u8fc7**\u8d70\u8fc7\u7684\u8def\u5f84**\u6b21\u6570\u7684\u5947\u5076\u6027\uff0c\u5177\u4f53\u7684\u5904\u7406\u5176\u5b83\u9898\u89e3\u5df2\u7ecf\u8bf4\u660e\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u4f46\u662f\u5728\u8fd9\u7bc7\u9898\u89e3\u91cc\u9762\u4ecb\u7ecd\u4e00\u79cd\u795e\u5947\u7684 DP \u6846\u67b6\uff0c\u5f88\u65b9\u4fbf\u8f93\u51fa\u8def\u5f84\u3001\u7ef4\u62a4\u6700\u4f18\u89e3\u4e2a\u6570\uff0c\u4ee5\u53ca\u7ef4\u62a4 $k$ \u4f18\u89e3\u7b49\u7b49\u3002\n\n---\n\n\u5b83\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684\u8001\u4f19\u4f34\uff1aDAG \u4e0a\u9762\u7684 DP\u3002\n\nDAG \u6709\u8bb8\u591a\u4f18\u79c0\u7684\u6027\u8d28\uff0c\u6bd4\u5982\u6c42\u51fa\u62d3\u6251\u5e8f\uff0c\u5728\u62d3\u6251\u5e8f\u4e0a\u9762\u5373\u53ef\u7ebf\u6027\u5730\u505a DP\u3002\n\n\u540c\u65f6\uff0c\u56e0\u4e3a\u538b\u7f29\u6210\u4e3a\u4e86\u56fe\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e00\u7ef4\u7684 DP \u6570\u7ec4\uff0c\u5728\u5176\u6240\u6709\u8f6c\u79fb\u70b9\u7684\u7b54\u6848\u6839\u636e\u8f6c\u79fb\u8fb9\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u6211\u4eec\u5728\u5229\u7528\u62d3\u6251\u6392\u5e8f\u505a DP \u7684\u65f6\u5019\u5f80\u5f80\u9700\u8981\u6839\u636e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5efa\u70b9\u3001\u5efa\u8fb9\u3002\n\n\u7b97\u6cd5\u7279\u6027\uff1a\n\n+ \u65f6\u95f4\u7a7a\u95f4\u90fd\u662f $O(n+m)$ \u7684\uff0c\u5373\u72b6\u6001\u52a0\u8f6c\u79fb\u6570\u3002\n+ \u9700\u8981\u72b6\u6001\u5bf9\u56fe\u4e2d\u8282\u70b9\u7f16\u53f7\u4e00\u4e00\u6620\u5c04\uff08\u6709\u4e9b\u65f6\u5019\u8fd8\u9700\u53cc\u5c04\uff09\u3002\n+ \u53ef\u4ee5\u5148\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u5c31\u987a\u5e8f/\u5012\u5e8f\u505a\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7ebf\u6027\u3002\n\n\u7b97\u6cd5\u7684\u597d\u5904\uff1a\n\n+ \u65e0\u9700\u786e\u5b9a\u679a\u4e3e\u987a\u5e8f\u3002\n+ \u53ea\u9700\u8981\u7f16\u7801\u6bcf\u4e2a\u72b6\u6001\u53ca\u5176\u8f6c\u79fb\u72b6\u6001\uff0c\u5bf9\u4e8e\u521d\u59cb\u503c\u548c\u6700\u7ec8\u7b54\u6848\u9002\u5f53\u8bbe\u7f6e\u8d77\u70b9\u7ec8\u70b9\u5373\u53ef\u3002\n+ \u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u8f6c\u79fb\u6f0f\u7684\u95ee\u9898\u4e86\u3002\n+ \u4e3b\u8981\u53bb\u8ba1\u7b97\u7684\u8fc7\u7a0b\u5168\u7a0b\u4ea4\u7ed9\u62d3\u6251\u5e8f\u4e0a\u9762\u7684 DP\u3002\u6309\u7167\u4ee5\u5f80\u7ecf\u9a8c\uff0c\u8fd9\u79cd DP \u975e\u5e38\u7b80\u5355\u3002\n+ \u5bf9\u4e8e\u8f93\u51fa\u6700\u4f18\u89e3\u7684\u65b9\u6848\u6570\uff0c\u53ea\u9700\u8981\u5728\u539f\u56fe\u4e0a\u4fdd\u7559\u6bcf\u4e2a\u70b9\u7684\u6700\u4f18\u51b3\u7b56\u8fb9\uff0c\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6570\u8def\u5f84\u6570\u91cf\u5373\u53ef\u3002\u5bf9\u4e8e\u8f93\u51fa\uff08\u6700\u4f18\u5b57\u5178\u5e8f\uff09\u8def\u5f84\uff0c\u662f\u540c\u7406\u7684\u3002\n+ \u5bf9\u4e8e\u8f93\u51fa\u524d $k$ \u4f18\u89e3\uff0c\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u81f3\u591a\u5927\u5c0f\u4e3a $k$ \u7684\u5806\uff0c\u8fd9\u6837\u7f16\u7801\u5341\u5206\u7b80\u6613\u3002\n\n\u4e0d\u8db3\u4e4b\u5904\uff1a\n\n+ \u9700\u8981\u7ef4\u62a4\u6bcf\u4e2a\u72b6\u6001\u5bf9\u8282\u70b9\u7f16\u53f7\u7684\u53cc\u5c04\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u7f16\u7801\u7684\u4e00\u4e9b\u4e0d\u4fbf\u3002\n+ \u7a7a\u95f4\u5403\u7d27\u5c31\u4e0d\u80fd\u7528\u4e86\u3002\n+ \u589e\u52a0\u4e86\u4e00\u5b9a\u7801\u91cf\uff0c\u5982\u679c\u78b0\u5230\u6bd4\u8f83\u7b80\u6d01\u7684 DP \u751a\u81f3\u4e0d\u5982\u76f4\u63a5\u7528\u6570\u7ec4\u7ef4\u62a4\u5f97\u65b9\u4fbf\u6613\u61c2\u3002\n+ \u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u56fe\u5f62\uff08\u6bd4\u5982 1d/1d \u52a8\u6001\u89c4\u5212\u7684\u65f6\u5019\uff09\u4e0d\u5982\u4f7f\u7528\u5176\u4ed6\u7279\u6b8a\u7ed3\u6784\u3002\n+ \u5bf9\u4e8e\u56fe\u5206\u5c42\u7684\u60c5\u51b5\uff0c\u65e0\u6cd5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316 DP\u3002\n\n\u8fd9\u6837\u7684\u7b97\u6cd5\u6846\u67b6\u8fd8\u662f\u8981\u7ed3\u5408\u5177\u4f53\u9898\u76ee\u5177\u4f53\u5206\u6790\uff0c\u9002\u5f53\u65f6\u5019\u91c7\u7528\uff0c\u53ef\u4ee5\u4f18\u5316\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u51cf\u5c11\u7801\u91cf\u3002\n\n---\n\n\u8fd9\u9053\u9898\u76ee\u5929\u751f\u5c31\u652f\u6301\u4f7f\u7528 `bfs` \u6846\u67b6\u62d3\u5c55\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6bcf\u4e2a\u72b6\u6001\u89c6\u4e3a**\u4e00\u4e2a\u8282\u70b9**\uff0c\u628a\u72b6\u6001\u8f6c\u79fb\u89c6\u4e3a**\u6709\u5411\u8fb9**\u3002\n\n\u5728\u672c\u9898\u4e4b\u4e2d\u6211\u4eec\u628a\u6bcf\u4e2a\u72b6\u6001 $(S,x,y)$ **\u518d\u6b21\u538b\u7f29**\u6210\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u53d8\u4e3a\u8282\u70b9\u7f16\u53f7\u3002\n\n\u9996\u5148\u679a\u4e3e\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8fd9\u91cc\u7684\u72b6\u6001\u53ef\u4ee5\u968f\u4fbf\u679a\u4e3e\uff0c\u53cd\u6b63\u662f\u5efa\u8fb9\u3002\n\n```cpp\nfor(I i=n-1;~i;--i)\n\tfor(I j=m-1,T;~j;--j)\n\t\tif(a[i][j]=='0')\n\t\t\tfor(I di=3;~di;--di){\n\t\t\t\tI x=i+dx[di],y=j+dy[di];\n\t\t\t\tif(0<=x&&x<n&&0<=y&&y<m&&a[x][y]=='0'){\n\t\t\t\t\tT=0;\n\t\t\t\t\tfor(I k=n,ay;k;--k){\n\t\t\t\t\t\tay=ps[k].second;\n\t\t\t\t\t\tif(((j==ay&&y==ay+1)||(y==ay&&j==ay+1))&&x<ps[k].first)\n\t\t\t\t\t\t\tT^=(1<<k-1);}\n\t\t\t\t\tfor(I S=(1<<d)-1;~S;--S)\n\t\t\t\t\t\tconn(id(S,i,j),id(S^T,x,y));}}\n```\n\n\u7136\u540e\u679a\u4e3e\u8d77\u70b9\u7ec8\u70b9\u8fdb\u884c DP\u3002\n\n\u78b0\u5230\u8fd9\u91cc\u5927\u5bb6\u53ef\u80fd\u4f1a\u5199\u4e00\u4e2a\u5f88\u957f\u7684 BFS\uff0c\u4f46\u662f\u8fd9\u91cc\u7684 bfs \u53ea\u6709\u5be5\u5be5\u51e0\u884c\uff1a\n\n```cpp\nI calc(I x,I y){\n\tI ans=-inf,st;\n\tfor(I i=n*m*(1<<d);~i;--i)dis[i]=inf;\n\tdis[st=id(0,x,y)]=0;\n\tfor(q[ql=qr=1]=st;ql<=qr;++ql){\n\t\tI x=q[ql];\n\t\tfor(auto y:e[x]){\n\t\t\tif(dis[y]!=inf)continue;\n\t\t\tdis[y]=dis[x]+1;\n\t\t\tfr[y]=x;\n\t\t\tq[++qr]=y;}}\n\tfor(I S=(1<<d)-1;~S;--S){\n\t\tans=max(ans,anrs[S]-dis[id(S,x,y)]);}\n\treturn ans;}\n```\n\n\u7b80\u4e0d\u7b80\u5355\uff01\u56e0\u4e3a\u628a\u6574\u4e2a DP \u7684\u6240\u6709\u72b6\u6001\u6d53\u7f29\u5230\u4e86\u8fd9\u4e9b\u8282\u70b9\u91cc\u9762\uff0c\u628a\u6240\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6d53\u7f29\u5230\u4e86\u8fb9\u91cc\u9762\u3002\n\n\u6309\u7167\u8fb9\u65e0\u8111\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u6240\u4ee5\u5c31\u5199\u51fa\u4e86\u672c\u9898\u4e0d\u662f\u5f88\u957f\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;typedef int I;typedef long long LL;const I inf=0x3f3f3f3f;\n#define mp make_pair\nconst I N=11,dx[4]={0,0,-1,1},dy[4]={-1,1,0,0};\nI n,m,d;\nchar a[N][N];\nI v[N],anrs[513];\npair<I,I>ps[N];\nI id(I S,I x,I y){\n\treturn S*n*m+x*m+y;}\nconst I SN=51210;\nvector<I>e[SN];\nvoid conn(I x,I y){e[x].push_back(y);}\nI dis[SN],q[SN],ql,qr,fr[SN];\nI calc(I x,I y){\n\tI ans=-inf,st;\n\tfor(I i=n*m*(1<<d);~i;--i)dis[i]=inf;\n\tdis[st=id(0,x,y)]=0;\n\tfor(q[ql=qr=1]=st;ql<=qr;++ql){\n\t\tI x=q[ql];\n\t\tfor(auto y:e[x]){\n\t\t\tif(dis[y]!=inf)continue;\n\t\t\tdis[y]=dis[x]+1;\n\t\t\tfr[y]=x;\n\t\t\tq[++qr]=y;}}\n\tfor(I S=(1<<d)-1;~S;--S){\n\t\tans=max(ans,anrs[S]-dis[id(S,x,y)]);}\n\treturn ans;}\nI main(){\n\tscanf(\"%d%d%d\",&n,&m,&d);\n\tfor(I i=1;i<=d;++i)scanf(\"%d\",v+i);\n\tfor(I S=(1<<d)-1;~S;--S){\n\t\tfor(I i=1;i<=d;++i)if(S&(1<<i-1))anrs[S]+=v[i];}\n\tfor(I i=0;i<n;++i){\n\t\tscanf(\"%s\",a[i]);\n\t\tfor(I j=0;j<m;++j){\n\t\t\tif('1'<=a[i][j]\t&& a[i][j]<='9')\n\t\t\t\tps[a[i][j]-'0']=mp(i,j);}}\n\tfor(I i=n-1;~i;--i)\n\t\tfor(I j=m-1,T;~j;--j)\n\t\t\tif(a[i][j]=='0')\n\t\t\t\tfor(I di=3;~di;--di){\n\t\t\t\t\tI x=i+dx[di],y=j+dy[di];\n\t\t\t\t\tif(0<=x&&x<n&&0<=y&&y<m&&a[x][y]=='0'){\n\t\t\t\t\t\tT=0;\n\t\t\t\t\t\tfor(I k=n,ay;k;--k){\n\t\t\t\t\t\t\tay=ps[k].second;\n\t\t\t\t\t\t\tif(((j==ay&&y==ay+1)||(y==ay&&j==ay+1))&&x<ps[k].first)\n\t\t\t\t\t\t\t\tT^=(1<<k-1);}\n\t\t\t\t\t\tfor(I S=(1<<d)-1;~S;--S)\n\t\t\t\t\t\t\tconn(id(S,i,j),id(S^T,x,y));}}\n\tI ans=-inf;\n\tfor(I i=n-1;~i;--i)\n\t\tfor(I j=m-1;~j;--j)\n\t\t\tif(a[i][j]=='0')\n\t\t\t\tans=max(calc(i,j),ans);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u4ee5\u540e\u53ef\u80fd\u8fd8\u6709\u8fd9\u79cd\u72b6\u6001\u5f88\u590d\u6742\u7684 DP\uff0c\u7f16\u7801\u548c\u8c03\u8bd5\u90fd\u662f\u4e00\u4ef6\u96be\u4e8b\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u8fd8\u662f\u80fd\u591f\u7a0d\u7a0d\u7b80\u5316\u8c03\u8bd5\u7684\u590d\u6742\u5ea6\u7684\u3002\n\n\u53ea\u9700\u8981\u8c03\u8bd5\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5373\u53ef\u3002",
        "postTime": 1684417653,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "P2566 [SCOI2009]\u56f4\u8c46\u8c46"
    },
    {
        "content": "# P2566 [SCOI2009]\u56f4\u8c46\u8c46 \u9898\u89e3\n\n\u55ef\uff0c\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u72b6\u538b\u3002\n\n\u6839\u636e\u52a8\u6001\u89c4\u5212\u7684\u6b65\u9aa4\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u8bbe\u8ba1\u51fa\u72b6\u6001\uff0c\u76f4\u89c9\u544a\u8bc9\u6211\u4eec\u5e94\u8be5\u6709\u4e00\u4e2a\u7ef4\u5ea6\u5b58\u653e\u72b6\u6001 $S$\uff0c$S$ \u7684\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d\u4ee3\u8868\u4e86\u662f\u5426\u5708\u4e0a\u4e86\u90a3\u4e2a\u8c46\u5b50\u3002\n\n\u800c\u7ee7\u7eed\u89c2\u5bdf\uff0c\u9700\u8981\u523b\u753b\u51fa\u8fd9\u4e2a\u72b6\u6001\uff0c\u4ec5\u4ec5\u6709\u8fd9\u6837\u4e00\u4e2a\u5e76\u4e0d\u80fd\u591f\u552f\u4e00\u786e\u5b9a\uff0c\u6545\u9700\u8981\u552f\u4e00\u786e\u5b9a\u8fd9\u4e2a\u72b6\u6001\uff0c\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u52a0\u4e24\u4e2a\u7ef4\u5ea6\u8868\u793a\u5750\u6807\uff0c\u5f53\u7136\uff0c\u8fd9\u6837\u523b\u753b\u72b6\u6001\u867d\u7136\u4e00\u4e2a\u72b6\u6001\u8fd8\u662f\u4f1a\u8868\u793a\u5f88\u591a\u79cd\u53ef\u80fd\uff0c\u4f46\u6b64\u65f6\u8fd9\u4e9b\u53ef\u80fd\u6027\u90fd\u53ef\u4ee5\u88ab\u5316\u6210\u4e00\u4e2a\u6700\u4f18\u89e3\u8fdb\u800c\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u8fd9\u91cc\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa\u72b6\u6001\u538b\u7f29\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u8bbe\u8ba1\u5c31\u5728\u4e8e\u8bbe\u8ba1\u51fa\u6765\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u591a\u4e2a\u53ef\u80fd\u6027\u7684\u96c6\u5408\uff0c\u53d6\u6700\u4f18\u89e3\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe $f[x,y,S]$ \u8868\u793a\u7ec8\u70b9\u5728 $(x,y)$ \u72b6\u6001\u4e3a $S$ \u7684\u6700\u5927\u5f97\u5206\uff0c\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u5728\u4ee3\u7801\u4e2d\u6211\u6539\u4e86\u4e00\u4e0b\uff0c\u6539\u6210\u4e86 $f[x,y,S]$ \u8868\u793a\u7ec8\u70b9\u5728 $(x,y)$ \u72b6\u6001\u4e3a $S$ \u7684\u6700\u5c0f\u6b65\u6570\uff0c\u56e0\u4e3a\u77e5\u9053\u4e86 $S$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u603b\u7684\u8c46\u8c46\u63d0\u4f9b\u7684\u8d21\u732e\uff0c\u90a3\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u56fe\u4e0a\u7684\u72b6\u538b\uff1f\uff01\n\n\u90a3\u4e48\u6a21\u578b\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u5c31\u662f\u501f\u52a9\u6700\u77ed\u8def\u7b97\u6cd5\u8fdb\u884c\u72b6\u538b DP \uff0c\u6211\u4eec\u5c31\u9700\u8981\u601d\u8003\u5982\u4f55\u8f6c\u79fb\u4e86\uff0c\u6bd4\u5982\u4e00\u4e2a\u72b6\u6001 $S$ \u5728\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8f6c\u5230\u72b6\u6001 $S'$\u3002\n\n\u5f88\u660e\u663e\uff0c\u72b6\u6001\u53d1\u751f\u53d8\u5316\u80af\u5b9a\u662f\u548c\u8def\u7ebf\u6709\u5173\u7cfb\u7684\uff0c\u73b0\u5728\u9700\u8981\u601d\u8003\u5728\u600e\u6837\u7684\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u8c46\u8c46\u4f1a\u88ab\u56f4\u4f4f\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7684\u8def\u5f84\u6700\u7ec8\u662f\u4e00\u6761\u56de\u8def\uff0c\u6240\u4ee5\u5176\u5b9e\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5305\u56f4\u8fd9\u4e2a\u8c46\u8c46\u7684\u591a\u8fb9\u5f62\u7684\u4e00\u534a\u5373\u53ef\uff0c\u53ef\u4ee5\u662f\u8c46\u8c46\u5de6\u8fb9\u7684\u4e00\u534a\uff0c\u4e5f\u53ef\u4ee5\u662f\u53f3\u8fb9\u7684\u4e00\u534a\uff0c\u751a\u81f3\u662f\u4e0a\u4e0b\u7684\u4e00\u534a\u90fd\u884c\uff0c\u7136\u540e\u5c31\u662f[\u5c04\u7ebf\u5b9a\u7406](https://www.pianshen.com/article/4349562259/)\u4e86\uff0c**\u5224\u5b9a\u4e00\u4e2a\u70b9\u662f\u5426\u4f4d\u4e8e\u4e00\u4e2a\u591a\u8fb9\u5f62\u4e2d\uff0c\u53ea\u9700\u8981\u5224\u5b9a\u8fd9\u4e2a\u70b9\u5f15\u51fa\u4e00\u6761\u5c04\u7ebf\u4e0e\u6574\u4e2a\u591a\u8fb9\u5f62\u7684\u4ea4\u70b9\u6570\u91cf\u7684\u5947\u5076\u6027\u5373\u53ef**\u3002\u8fd9\u4e2a\u73a9\u610f\u513f\u5c31\u53ef\u4ee5\u60f3\u5230\u5982\u4f55\u8f6c\u79fb\u4e86\uff0c\u5728\u4ee3\u7801\u4e2d\u4e3a\u4e86\u65b9\u4fbf\u6211\u9009\u62e9\u4e86\u5411\u53f3\u5f15\u51fa\u4e00\u6761\u5c04\u7ebf\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8c46\u8c46\uff0c\u770b\u8fd9\u4e00\u4e2a\u65b0\u7684\u6b65\u4f10\u4f1a\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u8c46\u8c46\u7684\u5305\u56f4\u4ea7\u751f\u5f71\u54cd\uff0c\u5f53\u7136\uff0c\u6211\u4eec\u5411\u53f3\u5f15\u51fa\u7684\u5c04\u7ebf\uff0c\u4ea4\u70b9\u6570\u91cf\u53ea\u4f1a\u5728\u8fd9\u4e2a\u6b65\u4f10\u662f\u4e0a\u4e0b\u79fb\u52a8\u7684\u65f6\u5019\u624d\u4f1a\u6539\u53d8\uff0c\u5177\u4f53\u5448\u73b0\u51fa\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4e35tugw.png)\n\n\n\u800c\u5bf9\u4e8e\u5947\u5076\u6027\uff0c\u7528\u5f02\u6216\u8fd0\u7b97\u8fdb\u884c\u66f4\u6539\u5373\u53ef\uff0c\u4e8e\u662f\u66f4\u6539\u72b6\u6001\u7684\u4ee3\u7801\u53ef\u4ee5\u5199\u6210\u8fd9\u4e2a\u9e2d\u5b50\n\n```cpp\nint find(int x1,int y1,int x2,int y2,int lst){//(x1,y1)->(x2,y2)\n\tint now=lst;\n\tif(x1==x2)return now;\n\tfor(int i=1;i<=cnt;i++){\n\t\tif((x1==ax[i]&&x2>ax[i]||x2==ax[i]&&x1>ax[i])&&ay[i]<y2)now=now^(1<<(i-1));\n\t}\n\treturn now;\n}\n\n```\n\n\u90a3\u4e48\u6709\u4e86\u72b6\u6001\u8fd9\u4e9b\uff0c\u8f6c\u79fb\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,ans=0xcfcfcfcf,cnt,dx[4]={0,0,1,-1},dy[4]={1,-1,0,0},ax[11],ay[11],val[11],a[11][11],f[11][11][1<<10],vis[11][11][1<<10],point[1<<10];\nint find(int x1,int y1,int x2,int y2,int lst){\n\tint now=lst;\n\tif(x1==x2)return now;\n\tfor(int i=1;i<=cnt;i++){\n\t\tif((x1==ax[i]&&x2>ax[i]||x2==ax[i]&&x1>ax[i])&&ay[i]<y2)now=now^(1<<(i-1));\n\t}\n\treturn now;\n}\nstruct node{\n\tint x,y,now,step;\n};\nqueue<node>q;\nvoid update(node a,node b){\n\tif(f[a.x][a.y][a.now]+1<f[b.x][b.y][b.now]){\n\t\tf[b.x][b.y][b.now]=f[a.x][a.y][a.now]+1;\n\t\tq.push(b);\n\t}\n}\nint SPFA(node x){\n\tq.push(x);\n\tmemset(vis,0,sizeof vis);\n\tmemset(f,0x3f,sizeof f);\n\tf[x.x][x.y][0]=0;\n\twhile(q.size()){\n\t\tnode u=q.front();q.pop();\n\t\tvis[u.x][u.y][u.now]=1;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tnode v={u.x+dx[i],u.y+dy[i],find(u.x,u.y,u.x+dx[i],u.y+dy[i],u.now),u.step+1};\n\t\t\tif(v.x<1||v.x>n||v.y<1||v.y>m||vis[v.x][v.y][v.now]||a[v.x][v.y])continue;\n\t\t\tupdate(u,v);\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&cnt);\n\tfor(int i=1;i<=cnt;i++)scanf(\"%d\",&val[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tchar x;\n\t\t\tcin>>x;\n\t\t\tif(x=='#')a[i][j]=1;\n\t\t\tif('1'<=x&&x<='9')a[i][j]=1,ax[x-'0']=i,ay[x-'0']=j;\n\t\t}\n\t}\n\tfor(int i=1;i<1<<cnt;i++){\n\t\tfor(int j=1;j<=cnt;j++){\n\t\t\tif((i>>(j-1))&1)point[i]+=val[j];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(a[i][j])continue;\n\t\t\tSPFA({i,j,0,0});\n\t\t\tfor(int i1=0;i1<(1<<cnt);i1++){\n\t\t\t\tans=max(ans,point[i1]-f[i][j][i1]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```cpp",
        "postTime": 1668092775,
        "uid": 507718,
        "name": "weakpyt",
        "ccfLevel": 5,
        "title": "P2566 [SCOI2009]\u56f4\u8c46\u8c46 \u9898\u89e3"
    },
    {
        "content": "\u5206\u6790\uff1a\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5c04\u7ebf\u6cd5\u7684\u77e5\u8bc6\uff0c\u8be5\u77e5\u8bc6\u4e3a\u8ba1\u7b97\u7ec4\u5408\u5185\u5bb9\uff0c**\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u591a\u8fb9\u5f62\u5185\u3002**\n\n\u5b83\u7684\u4e3b\u8981\u601d\u60f3\u662f\u4ece\u8fd9\u4e2a\u70b9\u5411\u53f3\u505a\u4e00\u6761\u5c04\u7ebf\uff0c\u6570\u6570\u8fd9\u6761\u5c04\u7ebf\u4e0e\u56db\u8fb9\u5f62\u7684\u4ea4\u70b9\u6709\u51e0\u4e2a\u3002\u5982\u679c\u6709\u5947\u6570\u4e2a\u4ea4\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5728\u56fe\u5f62\u5185\u90e8\uff1b\u82e5\u6709\u5076\u6570\u4e2a\u4ea4\u70b9\uff0c\u90a3\u4e48\u5b83\u5728\u591a\u8fb9\u5f62\u5916\u90e8\uff08\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u8fd9\u6837\u7684\uff0c\u56e0\u4e3a\u8fd8\u6709\u8003\u8651\u8fd9\u6761\u5c04\u7ebf\u7ecf\u8fc7\u4e86\u591a\u8fb9\u5f62\u7684\u4e00\u4e2a\u5185\u89d2\u5927\u4e8e 180\u00b0 \u7684\u60c5\u51b5\u3002\u4f46\u5728\u6b64\u9898\u4e2d\u663e\u7136\u4e0d\u7528\u8003\u8651\uff09\u3002\u5229\u7528\u8fd9\u4e2a\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8def\u5f84\u7ecf\u8fc7\u67d0\u4e2a\u8c46\u8c46\u53f3\u4fa7\u5c04\u7ebf\u6b21\u6570\u7684\u5947\u5076\u6570\u6765\u5224\u65ad\u662f\u5426\u56f4\u5728\u8def\u5f84\u91cc\u3002\n\n\u4e0b\u9762\u6765\u5206\u6790\u672c\u9898\u3002\n\n\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u8d77\u70b9\u3002\u72b6\u6001\u7684\u8bbe\u8ba1\u53d7\u4ee5\u4e0a\u542f\u53d1\uff0c\u4e0d\u4ec5\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u8fd8\u8981\u8bb0\u5f55\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u8c46\u8c46\u53f3\u5c04\u7ebf\u7684\u5947\u5076\u6027\u60c5\u51b5\u3002\u89c2\u5bdf\u5230\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u8c46\u5b50\u53f3\u5c04\u7ebf\u7684\u5947\u5076\u6027\u60c5\u51b5\u662f\u4e00\u4e2a $D$ \u4f4d 01 \u4e32\uff0c\u4e0d\u59a8\u5c06\u5176\u89c6\u4e3a $D$ \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u4ee5\u65b9\u4fbf\u8bb0\u5f55\u3002\u5373\u72b6\u6001 ```f[i][j][k]```  \u8868\u793a\u5f53\u524d\u5750\u6807 $(i,j)$\uff0c\u5e76\u4e14\u7ecf\u8fc7\u7b2c $t$ \u4e2a\u8c46\u8c46\u53f3\u5c04\u7ebf\u7684\u5947\u5076\u6027\u4e3a ```k>>t&1``` \uff081 \u4e3a\u5947\u6570\uff0c0 \u4e3a\u5076\u6570\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint in[11][11][1050],dp[11][11][1050],f[11][11],x[11],y[11],v[11],ans=0,n,m,d,dx[]={1,-1,0,0},dy[]={0,0,1,-1};\nstruct Node{\n  int x,y,z;\n}tem;\nint gc(int a,int b){\n  for(char t=getchar();;t=getchar()){\n    if(t=='#') return -1;\n    if(t>='0'&&t<='9'){\n      x[t-'0']=a,y[t-'0']=b;\n      return t-'0';\n    }\n  }\n}\nqueue<Node>q;\nvoid doit(int stx,int sty){\n  memset(dp,0,sizeof(dp));\n  memset(in,0,sizeof(in));\n  dp[stx][sty][0]=0;\n  q.push({stx,sty,0});\n  int tx,ty,tz,tq,cross;\n  while(!q.empty()){\n    tem=q.front();\n    q.pop();\n    for(int dir=0;dir<4;dir++){\n      tx=tem.x+dx[dir];ty=tem.y+dy[dir];tz=tem.z;\n      if(tx<=0||ty<=0||tx>n||ty>m||f[tx][ty]!=0) continue;\n      tq=dp[tem.x][tem.y][tem.z]-1;\n      if(dir<2){\n        cross=min(tx,tem.x);\n        for(int i=1;i<=d;i++){\n          if(x[i]!=cross||y[i]>ty) continue;\n          if(tz>>i-1&1) tq-=v[i];\n          else tq+=v[i];\n          tz=tz^(1<<(i-1));\n        }\n      }\n      if(!in[tx][ty][tz]++){\n        dp[tx][ty][tz]=tq;\n        q.push((Node){tx,ty,tz});\n      }\n    }\n  }\n  for(int i=0;i<1<<d;i++) if(in[stx][sty][i])ans=max(ans,dp[stx][sty][i]);\n}\nint main(){\n  cin>>n>>m>>d;\n  for(int i=1;i<=d;i++) cin>>v[i];\n  for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n      f[i][j]=gc(i,j);\n  for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++) if(!f[i][j]) doit(i,j);\n  cout<<ans<<endl;\n  return 0;\n}\n```\n",
        "postTime": 1647992001,
        "uid": 577670,
        "name": "KevinSHW007",
        "ccfLevel": 0,
        "title": "P2566 [SCOI2009]\u56f4\u8c46\u8c46"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\uff1a\u72b6\u538bdp\n\u53ea\u8981\u56de\u8def\u7ecf\u8fc7\u67d0\u8c46\u8c46\u7684\u6b21\u6570\u662f\u5947\u6570\u6b21\uff0c\u5c31\u610f\u5473\u7740\u56f4\u4f4f\u4e86\u8c46\u8c46\u3002\u3002\u8def\u7ebf\u7ecf\u8fc7\u8c46\u8c46\u7684\u6b63\u53f3\u65b9\u7684\u5224\u65ad\u8981\u5c0f\u5fc3\u3002\n#### \u5177\u4f53\u89c1\u4ee3\u7801\uff1a\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint q[11][11][1050],f[11][11],x[11],y[11],v[11],ans=0;\nint n,m,d,dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};\n\nstruct haha{\n\tint a,b,c;\n}tem;\n\nint gc(int a,int b)\n{\n\tchar t=' ';\n\twhile (1) \n\t{\n\t\tscanf(\"%c\",&t);\t\n\t\tif (t=='#') return -1;\n\t\tif (t>='0'&&t<='9')\n\t\t{\n\t\t\tx[t-'0']=a;y[t-'0']=b;\n\t\t\treturn t-'0';\t\n\t\t} \n\t}\n}\n\nqueue<haha>p;\nint in[11][11][1050];\nvoid doit(int stx,int sty)\n{\n//printf(\"\\n%d %d:\\n\",stx,sty);\n\tmemset(q ,0,sizeof(q ));\n    memset(in,0,sizeof(in));\n    q[stx][sty][0]=0;\n    p.push({stx,sty,0});\n    int tx,ty,tz,tq,cross;\n    while (!p.empty())\n    {\n    \ttem=p.front();p.pop();\n    \tfor (int dir=0;dir<4;dir++)\n    \t{// tem.a tem.b tem.c -> tx,ty,tz\n    \t\ttx=tem.a+dx[dir];ty=tem.b+dy[dir];\n    \t\tif (tx<=0||ty<=0||tx>n||ty>m||f[tx][ty]!=0) continue;\n    \t\ttz=tem.c;tq=q[tem.a][tem.b][tem.c]-1;\n    \t\tif (dir<2)\n    \t\t{\n    \t\t\tcross=min(tx,tem.a);\n    \t\t\tfor (int i=1;i<=d;i++)\n    \t\t\t{\n    \t\t\t\tif (x[i]!=cross||y[i]>ty) continue;\n    \t\t\t\tif (tz&(1<<(i-1)))\n    \t\t\t\t\ttq-=v[i];\n    \t\t\t\telse\n    \t\t\t\t\ttq+=v[i];\n    \t\t\t\ttz=tz^(1<<(i-1));\n    \t\t\t}\n    \t\t}\n    \t\tif (!in[tx][ty][tz])\n    \t\t{\n    \t\t\tq[tx][ty][tz]=tq;\n    \t\t\tp.push({tx,ty,tz});\n    \t\t\tin[tx][ty][tz]=1;\n//printf(\" %d %d %d (%d) -> %d %d %d (%d)\\n\",tem.a,tem.b,tem.c,q[tem.a][tem.b][tem.c],tx,ty,tz,tq);\n    \t\t}\n    \t}\n    }\n    for (int i=0;i<(1<<d);i++)\n    \tif (in[stx][sty][i])\n    \t\tans=max(ans,q[stx][sty][i]);\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%d\",&d);\n\tfor (int i=1;i<=d;i++)\n\tscanf(\"%d\",&v[i]);\n\t\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tf[i][j]=gc(i,j);\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tif (f[i][j]==0)\n\t\t\t\tdoit(i,j);\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1532434189,
        "uid": 25006,
        "name": "zhangjiacheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2566 \u3010[SCOI2009]\u56f4\u8c46\u8c46\u3011"
    }
]