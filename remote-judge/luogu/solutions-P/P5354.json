[
    {
        "content": "\u9996\u5148\u53d1\u73b0\u6bcf\u4e00\u4f4d\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e00\u4f4d\u5206\u5f00\u8003\u8651\uff0c\u7136\u540e\u7528\u6811\u94fe\u5256\u5206\u6216\u8005LCT\u7ef4\u62a4\u8fd9\u4e2a\u6811\n\n\u4fee\u6539\u76f4\u63a5\u4fee\u6539\uff0c\u8be2\u95ee\u7684\u65f6\u5019\u7b97\u51fa\u6765\u6bcf\u4e00\u4f4d\u586b0\uff0c1\u7ecf\u8fc7\u8fd9\u6761\u94fe\u7684\u53d8\u6362\u4e4b\u540e\u5f97\u5230\u7684\u503c\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u4ece\u9ad8\u5f80\u4f4e\uff0c\u5982\u679c\u8fd9\u4e00\u4f4d\u586b0\u53ef\u4ee5\u5f97\u52301\uff0c\u90a3\u4e48\u586b0\u4e00\u5b9a\u662f\u6700\u4f18\u7684\n\n\u5426\u5219\u5982\u679c\u53ef\u4ee5\u586b1\uff0c\u5c31\u628a\u8fd9\u4e00\u4f4d\u586b\u4e3a1\n\n\u590d\u6742\u5ea6\u662fnklog^2n\u6216\u8005nklogn\uff0c\u53ea\u80fd\u901a\u8fc750%\u7684\u6570\u636e\n\n\u53d1\u73b0\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u8fd9k\u4f4d\uff0c\u590d\u6742\u5ea6\u964d\u4e3anlog^2n\u7684\u6811\u94fe\u5256\u5206\u6216\u8005nlogn\u7684LCT\uff0c\u53ef\u4ee5\u901a\u8fc7100%\u7684\u6570\u636e\n\n\u8fd9\u4e2a\u9898\u6ca1\u6709\u5361\u5e38\uff0c\u5408\u5e76\u4fe1\u606f\u4e0d\u662fO( 1 )\u7684\u7b97\u6cd5\u6ca1\u6709\u901a\u8fc7\u662f\u5f88\u6b63\u5e38\u7684\u5427\u3002\u3002\u3002\n\n\u8fd8\u6709\u6811\u94fe\u5256\u5206\u6ca1\u6cd5\u505a\u5230logn\uff0c\u6bcf\u6761\u94fe\u5efa\u7ebf\u6bb5\u6811\u4e5f\u662flog^2n\u7684\uff0c\u8fd8\u4e0d\u80fd\u641e\u5b50\u6811\uff0c\u4f3c\u4e4e\u5e38\u6570\u4e5f\u4e00\u822c\u3002\u3002\u3002\n\n\u6700\u4f18\u590d\u6742\u5ea6\u662flog^2n\uff0c\u4e0d\u8fc7\u671f\u671b\u4e0b\u5927\u6982\u662flognloglogn\u7684\u611f\u89c9\n\n\u8fd9\u4e2a\u9898\u7684\u6700\u4f18\u590d\u6742\u5ea6\u4e3aO( n + q( logn + k ) )\uff0c\u81f3\u5c11\u76ee\u524d\u6765\u8bf4\u662f\u8fd9\u6837\u7684\n\n![](https://cdn.luogu.com.cn/upload/pic/4163.png)\n",
        "postTime": 1488121855,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u306eblog](https://www.cnblogs.com/dedicatus545/p/9404081.html)\n\n# \u601d\u8def\n\n### \u539f\u9898\u76ee\n\n\u6211\u4eec\u5148\u770b\u8fd9\u9053\u9898\u7684\u539f\u9898\u76ee[NOI2014\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7](https://www.luogu.org/problemnew/show/P2114)\n\n\u7684\u786e\u5c31\u662f\u4e0a\u6811\u7684\u5e26\u4fee\u6539\u7248\u672c\n\n\u90a3\u4e48\u6211\u4eec\u5148\u6765\u89e3\u51b3\u8fd9\u4e2a\u539f\u7248\u7684\u5e8f\u5217\u4e0a\u5355\u6b21\u8be2\u95ee\n\n\u4e8c\u8fdb\u5236\u7684\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u6211\u4eec\u628a\u64cd\u4f5c\u6570\u548c\u7b26\u53f7\u4e00\u8d77\uff08\u6bd4\u5982xor 7,and 31\uff09\u632a\u52a8\u7684\u8bdd\uff0c\u7b54\u6848\u662f\u4f1a\u6539\u53d8\u7684\uff0c\u4e0d\u540c\u7b26\u53f7\u4e4b\u95f4\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u65e0\u6cd5\u628a\u8fd9\u4e9b\u64cd\u4f5c\u7684\u987a\u5e8f\u968f\u610f\u53d8\u6362\u4e3a\u6bd4\u8f83\u597d\u7b97\u7684\u65b9\u5f0f\u4e86\n\n\u8003\u8651\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u8fd9\u4e09\u79cd\u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u540c\u7684\u4e8c\u8fdb\u5236\u4f4d\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4e92\u76f8\u5f71\u54cd\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u62c6\u51fa\u6765\u5904\u7406\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6211\u4eec\u8bb0\u5f55\u4e24\u4e2a\u503ca0,a1\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e00\u4f4d\u4e0a\u662f0\u62161\u7684\u60c5\u51b5\u4e0b\uff0c\u8d70\u8fc7\u6240\u6709\u8fd0\u7b97\u4e4b\u540e\u5f97\u5230\u7684\u662f0\u8fd8\u662f1\n\n\u7136\u540e\uff0c\u6211\u4eec\u4ece\u9ad8\u7684\u4e8c\u8fdb\u5236\u4f4d\u5f80\u4f4e\u7684\u8d70\uff0c\u8d2a\u5fc3\u5730\u5728\u9ad8\u4f4d\u53ef\u4ee5\u8fbe\u62101\u4e14\u4e0d\u4f1a\u8d85\u8fc7m\u7684\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u4ee4\u9ad8\u4f4d\u4e3a1\n\n\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff08\u7684\u786e\u4f5c\u4e3aNOI\u9898\u6765\u8bf4\u7b80\u5355\u4e86\u4e00\u4e9b\uff0c\u679c\u7136\u7b7e\u5230\u9898\u554a\uff09\n\n\u90a3\u4e48\u5f53\u672c\u9898\u4e0a\u6811+\u4fee\u6539\u4e4b\u540e\u4e86\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n### \u6811\u5256+\u7ebf\u6bb5\u6811\n\n\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u60f3\u6cd5\u5c31\u662f\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u8fd9\u79cd\u53ef\u4ee5\u8f7b\u677e\u7ef4\u62a4\u94fe\u4e0a\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u6765\u4fee\u6539+\u8be2\u95ee\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u7ef4\u62a4\u533a\u95f4\u4e2d\u4ece\u5de6\u5230\u53f3\u8dd1\u548c\u4ece\u53f3\u5230\u5de6\u8dd1\u5f97\u5230\u7684\u662f0\u8fd8\u662f1\uff0c\u8be2\u95ee\u7684\u65f6\u5019\u628a\u94fe\u62c6\u5f00\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u4e0d\u540c\u7684\u94fe\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a501\u5bf9\u5e94\u5408\u5e76\n\n\u518d\u548c\u4e0a\u9762\u4e00\u6837\u8d2a\u5fc3\u5c31\u597d\u4e86......\u5417\uff1f\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u662f$O(nklog^2n)$\u7684\uff0c\u867d\u7136\u90a3\u4e2a$log^2$\u5e38\u6570\u5f88\u5c0f\uff0c\u4f46\u662f\u8fd9\u4e2a\u73a9\u610f\u513f\u6ee1\u6253\u6ee1\u7b97\u4e5f\u662f\u4e2a$O(nklogn)$\u7684\uff0c\u672c\u9898\u6570\u636e\u8303\u56f4\u4e0b\u80af\u5b9a\u8fc7\u4e0d\u4e86\n\n### \u4f18\u5316\n\n\u8fd9\u600e\u4e48\u89e3\u51b3\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u590d\u6742\u5ea6\u4e2d\uff0c\u6700\u6709\u5e0c\u671b\u4f18\u5316\u6389\u7684\u5c31\u662f\u90a3\u4e2a$k$\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u90fd\u662f\u6811\u5256\u7684\u56fa\u6709\u590d\u6742\u5ea6\u4e86\n\n\u600e\u4e48\u4f18\u5316\u6389$k$\u5462\uff1f\u6211\u4eec\u8003\u8651\u518d\u628a\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u538b\u56de\u540c\u4e00\u4e2a long long \u91cc\u9762\n\n\u4f46\u662f\u8fd9\u6837\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u5408\u5e76\u4e86\n\n\u539f\u6765\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u62c6\u5f00\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u4e4b\u95f4\u7684\u5408\u5e76\u5c31\u662f0\u51fa\u6765\u7684\u5bf9\u5e940\u8fdb\u53bb\u7684\uff0c1\u51fa\u6765\u7684\u5bf9\u5e941\u8fdb\u53bb\u7684\uff0c\u4f46\u662f\u538b\u4f4d\u8d77\u6765\u4ee5\u540e\uff0c\u96be\u9053\u6211\u4eec\u8981\u679a\u4e3e$2^k$\u79cd\u72b6\u6001\u5206\u522b\u5bf9\u5e94\u8f6c\u79fb\u5417\uff1f\n\n\u975e\u4e5f\n\n### \u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u5408\u5e76\n\n**\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97\u662f\u6bcf\u4e00\u4f4d\u72ec\u7acb\u7684**\n\n\u6211\u4eec\u73b0\u5728\u8981\u518d\u4e00\u6b21\u8ba9\u8fd9\u4e2a\u7ed3\u8bba\u53d1\u6325\u4f5c\u7528\uff1a\u6211\u4eec\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u6765\u89e3\u51b3\u8fd9\u4e9b\u72ec\u7acb\u7684\u3001\u4f46\u662f\u88ab\u538b\u5230\u4e00\u8d77\u4e86\u7684\u4e8c\u8fdb\u5236\u4f4d\n\n\u5047\u8bbe\u5f53\u524d\u8981\u5408\u5e76\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u662f$l$\u548c$r$\uff0c$f_0[l]$\u7684\u7b2c$i$\u4f4d\u4ee3\u8868\u8fd9\u4e00\u4f4d\u8fdb\u53bb\u662f0\u65f6\u51fa\u6765\u7684\u503c\uff0c$f_1[l]$\u540c\u7406\n\n\u90a3\u4e48\u663e\u7136\uff0c\u5bf9\u4e8e\u65b0\u7684\u5408\u5e76\u540e\u8282\u70b9$u$\u800c\u8a00\uff0c\u5982\u679c$f_0[u]$\u7684\u7b2c$i$\u4f4d\uff08\u540e\u6587\u4e2d\u7528$f_0[u][i]$\u8868\u793a\uff09\u662f1\uff0c\u90a3\u4e48\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u60c5\u51b5\u4e00\uff1a$f_0[l][i]==1$\u4e14$f_1[r][i]==1$\n\n\u60c5\u51b5\u4e8c\uff1a$f_0[l][i]==0$\u4e14$f_0[r][i]==1$\n\n\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\uff1a$f_0[u][i]=(f_0[l][i]\\;bitand\\;f_1[r][i])\\;bitor\\;(!f_0[l][i]\\;bitand\\;f_0[r][i])$\n\n\u90a3\u4e48\u628a\u8fd9\u4e2a\u5f0f\u5b50\u653e\u5230\u6574\u4e2a$f_0[u]$\u7684\u89d2\u5ea6\u4e0a\uff0c\u5c31\u662f$f_0[u]=((f_0[l]\\;bitand\\;f_1[r])\\;bitor\\;((bitnot\\;f_0[l])\\;bitand\\;f_1[r]))$\n\n\u5176\u4e2d$bitand,bitor,bitnot$\u5206\u522b\u662f\u6309\u4f4d\u4e0e\uff0c\u6216\uff0c\u53d6\u53cd\n\n\u5bf9\u4e8e$f_1[u]$\uff0c\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\uff0c$f_1[u]=((f_1[l]\\;bitand\\;f_1[r])\\;bitor\\;((bitnot\\;f_1[l])\\;bitand\\;f_0[r]))$\n\n\uff08\u6ce8\u610f\u8fd8\u6709\u53cd\u8fc7\u6765\u8dd1\u7684\u8981\u5904\u7406\uff09\n\n### \u95ee\u9898\u89e3\u51b3\n\n\u8fd9\u6837\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4fee\u6539\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u7136\u540e\u6811\u94fe\u5256\u5206+\u533a\u95f4\u8be2\u95ee\uff0c\u5f97\u5230\u6bcf\u4e00\u4f4d\u7684\u8f93\u516501\u5bf9\u5e94\u8f93\u51fa01\u3002\u6811\u5256\u4e2d\u7684\u5e8f\u5217\u5408\u5e76\u4e5f\u53ef\u4ee5\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5408\u5e76\u8d77\u6765\n\n\u6700\u540e\u6211\u4eec\u505a\u4e00\u6b21\u539f\u9898\u4e2d\u7684\u8d2a\u5fc3\u5373\u53ef\n\n### \u5751\u70b9\n\n\u8981\u7528unsigned long long\n\n\u9700\u8981\u7ef4\u62a44\u4e2a\u503c\uff0c\u4e0d\u8981\u5199\u6df7\u4e86\n\n\u6811\u5256\u5f97\u5230\u4e24\u4e2a\u5e8f\u5217\uff1ax->lca\u548cy->lca\uff0c\u4f46\u662f\u6ce8\u610f\u5176\u4e2d\u4e00\u4e2a\u8981\u628a\u8dd1\u7684\u987a\u5e8f\u53cd\u8fc7\u6765\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cassert>\n#include<cmath>\n#define ll unsigned long long\nusing namespace std;\ninline ll read(){\n\tll re=0,flag=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){\n\t\tif(ch=='-') flag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n\treturn re*flag;\n}\nconst ll LIM=0-1;\nint n,Q,K,first[200010],dep[200010],son[200010],siz[200010],top[200010],pos[200010],back[200010];\nint op[200010],cnte,cntn,fa[200010];ll val[200010];\nstruct data{\n\tll f0,f1,inv0,inv1;\n    //f0:\u4ece\u5de6\u5230\u53f3\uff0c0\u8fdb\n    //f1:\u4ece\u5de6\u5230\u53f3\uff0c1\u8fdb\n    //inv0:\u4ece\u53f3\u5230\u5de6\uff0c0\u8fdb\n    //inv1:\u4ece\u53f3\u5230\u5de6\uff0c1\u8fdb\n\tdata(){f0=f1=inv0=inv1=0;}\n}a[800010];\nstruct edge{\n\tint to,next;\n}e[200010];\ninline void add(int u,int v){\n\te[++cnte]=(edge){v,first[u]};first[u]=cnte;\n\te[++cnte]=(edge){u,first[v]};first[v]=cnte;\n}\nvoid dfs1(int u,int f){\n\tint i,v;dep[u]=dep[f]+1;siz[u]=1;son[u]=0;fa[u]=f;\n\tfor(i=first[u];~i;i=e[i].next){\n\t\tv=e[i].to;if(v==f) continue;\n\t\tdfs1(v,u);siz[u]+=siz[v];\n\t\tif(siz[v]>siz[son[u]]) son[u]=v;\n\t}\n}\nvoid dfs2(int u,int t){\n\tint i,v;top[u]=t;pos[u]=++cntn;back[cntn]=u;\n\tif(son[u]) dfs2(son[u],t);\n\tfor(i=first[u];~i;i=e[i].next){\n\t\tv=e[i].to;if(pos[v]) continue;\n\t\tdfs2(v,v);\n\t}\n}\nll calc(ll num,int x){\n\tif(op[x]==1) return num&val[x];\n\tif(op[x]==2) return num|val[x];\n\tif(op[x]==3) return num^val[x];\n}\ndata update(data l,data r){\n\tdata re;//\u6838\u5fc3\u5408\u5e76\u8fc7\u7a0b\uff0c\u53c2\u8003\u4e0a\u65b9\u9898\u89e3\n\tre.f0=((l.f0&r.f1)|((~l.f0)&r.f0));\n\tre.f1=((l.f1&r.f1)|((~l.f1)&r.f0));\n\tre.inv0=((r.inv0&l.inv1)|((~r.inv0)&l.inv0));\n\tre.inv1=((r.inv1&l.inv1)|((~r.inv1)&l.inv0));\n\treturn re;\n}\nvoid build(int l,int r,int num){\n\tif(l==r){\n\t\ta[num].f0=a[num].inv0=calc(0,back[l]);\n\t\ta[num].f1=a[num].inv1=calc(LIM,back[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,num<<1);build(mid+1,r,(num<<1)+1);\n\ta[num]=update(a[num<<1],a[(num<<1)+1]);\n}\nvoid change(int l,int r,int num,int pos){\n\tif(l==r){\n\t\ta[num].f0=a[num].inv0=calc(0,back[l]);\n\t\ta[num].f1=a[num].inv1=calc(LIM,back[l]);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=pos) change(l,mid,num<<1,pos);\n\telse change(mid+1,r,(num<<1)+1,pos);\n\ta[num]=update(a[num<<1],a[(num<<1)+1]);\n}\ndata query(int l,int r,int ql,int qr,int num){\n\tif(l==ql&&r==qr) return a[num];\n\tint mid=(l+r)>>1;data re;\n\tif(mid>=qr) re=query(l,mid,ql,qr,num<<1);\n\telse{\n\t\tif(mid<ql) re=query(mid+1,r,ql,qr,(num<<1)+1);\n\t\telse re=update(query(l,mid,ql,mid,num<<1),query(mid+1,r,mid+1,qr,(num<<1)+1));//\u8be2\u95ee\u65f6\u4e5f\u662f\u540c\u6837\u7684\u5408\u5e76\n\t}\n\treturn re;\n}\ndata ans1[100010],ans2[100010];int cnt1,cnt2;\ndata solve(int x,int y){\n\tcnt1=cnt2=0;\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]>=dep[top[y]]){\n\t\t\tans1[++cnt1]=query(1,n,pos[top[x]],pos[x],1);\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\telse{\n\t\t\tans2[++cnt2]=query(1,n,pos[top[y]],pos[y],1);\n\t\t\ty=fa[top[y]];\n\t\t}\n\t}\n\tif(dep[x]>dep[y]) ans1[++cnt1]=query(1,n,pos[y],pos[x],1);\n\telse ans2[++cnt2]=query(1,n,pos[x],pos[y],1);\n\tdata re;int i;\n\tfor(i=1;i<=cnt1;i++) swap(ans1[i].f0,ans1[i].inv0),swap(ans1[i].f1,ans1[i].inv1);//\u53cd\u8fc7\u6765\n\tif(cnt1){\n\t\tre=ans1[1];\n\t\tfor(i=2;i<=cnt1;i++) re=update(re,ans1[i]);\n\t\tif(cnt2) re=update(re,ans2[cnt2]);\n\t}\n\telse re=ans2[cnt2];\n\tfor(i=cnt2-1;i>=1;i--) re=update(re,ans2[i]);\n\treturn re;\n}\nint main(){\n\tmemset(first,-1,sizeof(first));\n\tn=read();Q=read();K=read();int i,t1,t2,opt;ll t3,ans,tmp0,tmp1;\n\tfor(i=1;i<=n;i++) op[i]=read(),val[i]=read();\n\tfor(i=1;i<n;i++){\n\t\tt1=read();t2=read();\n\t\tadd(t1,t2);\n\t}\n\tdfs1(1,0);dfs2(1,1);\n\tbuild(1,n,1);\n\twhile(Q--){\n\t\topt=read();t1=read();t2=read();t3=read();\n\t\tif(opt==2){\n\t\t\top[t1]=t2;val[t1]=t3;\n\t\t\tchange(1,n,1,pos[t1]);\n\t\t}\n\t\telse{\n\t\t\tdata re=solve(t1,t2);ans=0;\n\t\t\tfor(i=63;i>=0;i--){//\u8d2a\u5fc3\n\t\t\t\ttmp0=(re.f0>>i)&1ull;\n\t\t\t\ttmp1=(re.f1>>i)&1ull;\n\t\t\t\tif(tmp0>=tmp1||(1ull<<i)>t3) ans|=(tmp0?(1ull<<i):0);\n\t\t\t\telse ans|=(tmp1?(1ull<<i):0),t3-=(1ull<<i);\n\t\t\t}\n\t\t\tprintf(\"%llu\\n\",ans);\n\t\t}\n\t}\n}\n```",
        "postTime": 1533130839,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "[\u5728\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\u4e2d\u9605\u8bfb\u4ee5\u83b7\u5f97\u66f4\u4f73\u9605\u8bfb\u4f53\u9a8c](https://www.macesuted.cn/article/lg5354/)\n\n---\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P5354)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5747\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8fd0\u7b97\u7b26\uff08`&`\u3001`|` \u6216 `^`\uff09\u548c\u4e00\u4e2a\u5728 $[0,~2^k-1]$ \u4e4b\u95f4\u7684\u6570\u503c\u3002\n\n\u63a5\u4e0b\u6765\u7ed9\u5b9a $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u5206\u4e3a\u4e24\u7c7b\uff1a\n\n1. \u4fee\u6539\u67d0\u4e2a\u7ed3\u70b9\u4e0a\u7684\u8fd0\u7b97\u7b26\u4e0e\u6570\u503c\u3002\n2. \u7ed9\u5b9a $x,~y,~z$\uff0c\u4f60\u53ef\u4ee5\u5148\u4efb\u610f\u6307\u5b9a\u4e00\u4e2a\u503c $val \\in [0,~z]$\uff0c\u7136\u540e\u5728\u6811\u4e0a\u6cbf $x$ \u4e0e $y$ \u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u4ece $x$ \u5411 $y$ \u79fb\u52a8\uff0c\u6bcf\u6b21\u5230\u8fbe\u4e00\u4e2a\u7ed3\u70b9\u540e\u5c06 $val$ \u53d8\u4e3a $val~op[i]~a[i]$\uff0c$op[i]$ \u4e3a\u8be5\u8282\u70b9\u4e0a\u8fd0\u7b97\u7b26\uff0c$a[i]$ \u4e3a\u8be5\u8282\u70b9\u4e0a\u6570\u503c\u3002\u6700\u5927\u5316\u5230\u8fbe $y$ \u7ed3\u70b9\u65f6\u7684 $val$ \u503c\u5e76\u8f93\u51fa\u3002\n\n$n,~m \\le 10^5,~0 \\le k \\le 64$\n\n## \u5206\u6790\n\n\u7531\u4e8e\u8be2\u95ee\u65f6\u8be2\u95ee\u7684\u662f\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u4fe1\u606f\uff0c\u4e0d\u96be\u60f3\u5230\u901a\u8fc7\u6811\u94fe\u5256\u5206\u5c06\u6bcf\u6761\u8def\u5f84\u8f6c\u5316\u4e3a $\\log n$ \u4e2a\u533a\u95f4\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u7684\u8fd0\u7b97\u7b26\u5747\u4e3a\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97\u7b26\uff0c\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4e0d\u540c\u4e8c\u8fdb\u5236\u4f4d\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5206\u5f00\u6765\u8003\u8651\u5176\u8fd0\u7b97\u7ed3\u679c\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u90fd\u6c42\u51fa\u5176\u4e3a $0/1$ \u65f6\u7ecf\u8fc7\u8def\u5f84\u540e\u7684\u7ed3\u679c\uff0c\u6700\u540e\u901a\u8fc7\u7c7b\u4f3c\u6570\u4f4d DP \u7684\u8ba1\u7b97\u65b9\u6cd5\u5373\u53ef\u6c42\u51fa $[0,~z]$ \u533a\u95f4\u5185\u7684\u521d\u503c\u53ef\u4ea7\u751f\u7684\u6700\u5927\u8fd0\u7b97\u7ed3\u679c\u3002\n\n\u800c\u7531\u4e8e\u8be2\u95ee\u65f6\u4e24\u70b9\u95f4\u7684\u8def\u5f84\u662f\u6709\u5411\u7684\uff0c\u4ece $x \\to lca$ \u7684\u8def\u5f84\u662f\u5411\u4e0a\u7684\uff0c\u4ece $lca \\to y$ \u7684\u8def\u5f84\u662f\u5411\u4e0b\u7684\u3002\u5c06\u6811\u4e0a\u79fb\u52a8\u7684\u987a\u5e8f\u5bf9\u5e94\u5230\u533a\u95f4\u4e0a\u79fb\u52a8\u7684\u987a\u5e8f\uff0c\u4e0d\u96be\u53d1\u73b0 $x \\to lca$ \u7684\u8def\u5f84\u5bf9\u5e94\u7684\u533a\u95f4\u90fd\u662f\u4ece\u53f3\u5411\u5de6\u7ecf\u8fc7\u7684\uff0c$lca \\to y$ \u7684\u8def\u5f84\u5bf9\u5e94\u7684\u533a\u95f4\u90fd\u662f\u4ece\u5de6\u5411\u53f3\u7ecf\u8fc7\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\u90fd\u6c42\u51fa\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u521d\u59cb\u4e3a $0/1$ \u65f6\u4ece\u5de6\u5411\u53f3\u6216\u662f\u4ece\u53f3\u5411\u5de6\u7ecf\u8fc7\u8be5\u533a\u95f4\u4e4b\u540e\u7684\u503c\u3002\n\n\u8003\u8651\u5982\u4f55\u7ef4\u62a4\uff0c\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7ed3\u70b9\u90fd\u8bb0\u5f55 $l0[i],~l1[i],~r0[i],~r1[i]$ \u5206\u522b\u8868\u793a\uff1a\n\n1. \u4e8c\u8fdb\u5236\u7b2c $i$ \u4f4d\u4e3a $0$ \u65f6\u4ece\u5de6\u5411\u53f3\u7ecf\u8fc7\u8be5\u533a\u95f4\u540e\u8be5\u4f4d\u7684\u503c\u3002\n2. \u4e8c\u8fdb\u5236\u7b2c $i$ \u4f4d\u4e3a $1$ \u65f6\u4ece\u5de6\u5411\u53f3\u7ecf\u8fc7\u8be5\u533a\u95f4\u540e\u8be5\u4f4d\u7684\u503c\u3002\n3. \u4e8c\u8fdb\u5236\u7b2c $i$ \u4f4d\u4e3a $0$ \u65f6\u4ece\u53f3\u5411\u5de6\u7ecf\u8fc7\u8be5\u533a\u95f4\u540e\u8be5\u4f4d\u7684\u503c\u3002\n4. \u4e8c\u8fdb\u5236\u7b2c $i$ \u4f4d\u4e3a $1$ \u65f6\u4ece\u53f3\u5411\u5de6\u7ecf\u8fc7\u8be5\u533a\u95f4\u540e\u8be5\u4f4d\u7684\u503c\u3002\n\n\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u7ed3\u70b9 $a,~b$ \u7684\u4fe1\u606f\u65f6\u4ee4\uff1a\n\n1. `ans.l0[i] = a.l0[i] && b.l1[i] || !a.l0[i] && b.l0[i]`\n2. `ans.l1[i] = a.l1[i] && b.l1[i] || !a.l1[i] && b.l0[i]`\n3. `ans.r0[i] = b.r0[i] && a.r1[i] || !b.r0[i] && a.r0[i]`\n4. `ans.r1[i] = b.r1[i] && a.r1[i] || !b.r1[i] && a.r0[i]`\n\n\u5373\u679a\u4e3e\u67d0\u4e00\u4f4d\u5728\u7ecf\u8fc7\u7b2c\u4e00\u4e2a\u533a\u95f4\u540e\u7684\u503c\uff0c\u5c06\u5176\u4ee5\u521d\u503c\u4ee3\u5165\u7b2c\u4e8c\u4e2a\u533a\u95f4\u5f97\u5230\u7ed3\u679c\u3002\n\n\u6b64\u65f6\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u6211\u4eec\u5c06\u8def\u5f84\u62c6\u4e3a $\\log n$ \u4e2a\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u5bf9\u5e94 $\\log n$ \u4e2a\u7ebf\u6bb5\u6811\u7ed3\u70b9\uff0c\u6bcf\u6b21\u5408\u5e76\u7ed3\u70b9\u9700\u8981\u82b1\u8d39 $O(k)$ \u7684\u65f6\u95f4\uff0c\u56e0\u6b64\u6b64\u65f6\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m \\times k \\times \\log ^2n)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4f18\u5316\n\n\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e0a\u9762\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53d1\u73b0\u4e24\u4e2a $\\log n$ \u5728\u8be5\u7b97\u6cd5\u4e2d\u90fd\u96be\u4ee5\u53bb\u9664\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4f18\u5316\u6389 $O(k)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5bb9\u6613\u53d1\u73b0 $O(k)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u81ea\u7ebf\u6bb5\u6570\u7ed3\u70b9\u5408\u5e76\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $k$ \u4f4d\u5206\u522b\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u662f\u975e\u5e38\u6d6a\u8d39\u7684\uff0c\u6211\u4eec\u8003\u8651\u5c06\u56db\u4e2a\u5927\u5c0f\u4e3a $k$ \u7684\u6570\u7ec4\u538b\u4e3a\u56db\u4e2a\u5927\u5c0f\u4e3a $2^k$ \u7684\u6570\u5b57\uff0c\u5c06\u903b\u8f91\u8fd0\u7b97\u8f6c\u53d8\u4e3a\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97\u5373\u53ef\u3002\u5bf9\u5e94\u7684\u56db\u4e2a\u8f6c\u79fb\u53d8\u4e3a\uff1a\n\n1. `ans.l0 = (a.l0 & b.l1[i]) | (~a.l0[i] & b.l0[i])`\n2. `ans.l1 = (a.l1 & b.l1[i]) | (~a.l1[i] & b.l0[i])`\n3. `ans.r0 = (b.r0 & a.r1[i]) | (~b.r0[i] & a.r0[i])`\n4. `ans.r1 = (b.r1 & a.r1[i]) | (~b.r1[i] & a.r0[i])`\n\n\u56e0\u6b64\u5408\u5e76\u7ed3\u70b9\u4fe1\u606f\u7684\u590d\u6742\u5ea6\u4f18\u5316\u5230 $O(1)$\uff0c\u603b\u590d\u6742\u5ea6\u8fbe\u5230 $O(m \\times \\log ^2n)$\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n## \u4ee3\u7801\n\n[View on GitHub](https://github.com/Macesuted/Code/blob/main/Luogu/5354.cpp)",
        "postTime": 1626660645,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "LG5354"
    },
    {
        "content": "\u6b64\u9898\u4e3a[[NOI2014]\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7](https://www.luogu.com.cn/problem/P2114)\u6269\u5c55\u5230\u6811\u4e0a\u5e26\u4fee\u6539\u3002\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u5f31\u5316\u7248\u8fd9\u4e2a\u9898\u600e\u4e48\u505a\u3002\u5148\u6c42\u51fa\u4e8c\u8fdb\u5236\u5168 0 \u548c\u5168 1 \u7ecf\u8fc7\u95e8\u540e\u7684\u72b6\u6001\uff0c\u7136\u540e\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u53bb\u8d2a\u5fc3\u3002\u5982\u679c\u53ef\u4ee5\u7528 0 \u6362 1 \u5fc5\u6362\uff0c\u5982\u679c\u53ef\u4ee5\u7528 1 \u6362 1 \u5c31\u5c3d\u53ef\u80fd\u6362\uff08\u6bcf\u6b21\u6362\u5b8c\u628a m \u51cf\u6389\u8fd9\u4e00\u4f4d\u7684\u8d21\u732e\uff0c\u5982\u679c\u4e0d\u591f\u5c31\u4e0d\u6362\u3002\uff09\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u7136\u540e\u770b\u5230\u6811\u4e0a\u64cd\u4f5c\uff0c\u5e76\u4e14\u5e26\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u7528 LCT \u7ef4\u62a4\u3002\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u5148\u62c6\u4f4d\uff0c\u7136\u540e\u6bcf\u4e00\u4f4d\u7528\u4e00\u9897 LCT \u7ef4\u62a4\uff0c\u6bcf\u4e00\u6b21\u5408\u5e76\u662f $O(k)$ \u7684\uff0c\u603b\u590d\u6742\u5ea6$O(knlogn)$\uff0c\u5dee\u4e0d\u591a $1e8$ \u5de6\u53f3\uff0c\u8fd8\u8981\u8003\u8651\u5e38\u6570\uff0c\u975e\u5e38\u4e0d\u7a33\u3002\n\n\u4e8e\u662f\u5c31\u8003\u8651 $O(1)$ \u5408\u5e76\u5de6\u53f3\u5b50\u6811\u7684\u4fe1\u606f\u3002\u6bcf\u4e2a\u8282\u70b9\u5b58\u4e2d\u5e8f\u904d\u5386\u548c\u53cd\u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u5168 0 \u548c\u5168 1 \u7ecf\u8fc7\u95e8\u540e\u7684\u72b6\u6001\u3002ans0 \u4ee3\u8868\u521d\u59cb\u5168\u4e3a 0 \u7684\u7b54\u6848\uff0cans1 \u4ee3\u8868\u521d\u59cb\u5168\u4e3a 1 \u7684\u7b54\u6848\u3002\n\n\u8003\u8651\u5408\u5e76 2 \u4e2a\u533a\u95f4 a \u548c b \u3002\u8bbe\u5408\u5e76\u51fa\u6765\u7684\u533a\u95f4\u53eb c\u3002  \n\u5219 c.ans0 \u7684\u7b2c k \u4f4d\u4e3a 1 \u7684\u6761\u4ef6\u662f\uff1aa.ans0 \u7684 \u7b2c k \u4f4d\u4e3a 0\uff0c\u5e76\u4e14 b.ans0 \u7684\u7b2c k \u4f4d\u4e3a 1\uff1b\u6216\u8005\u662f a.ans0 \u7684\u7b2c k \u4f4d\u4e3a 1 \u800c\u4e14 b.ans1 \u7684\u7b2c k \u4f4d\u4e3a 1\u3002\n\n\u7136\u540e\u628a\u6240\u6709\u4f4d\u5408\u8d77\u6765\u8003\u8651\uff0c\u5c31\u6709\u8fd9\u6837\u7684\u5f0f\u5b50:  \n```\nz.ans0 = (~x.ans0 & y.ans0) | (x.ans0 & y.ans1);\nz.ans1 = (~x.ans1 & y.ans0) | (x.ans1 & y.ans1);\n```\n\n\u7136\u540e\u6bcf\u6b21\u8be2\u95ee\u5c31\u628a x \u548c y split \u51fa\u6765\uff0c\u8dd1\u5f31\u5316\u7248\u7684\u90a3\u4e2a\u7b97\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n- \u7ffb\u8f6c\u64cd\u4f5c\u7684\u65f6\u5019\u8981\u5c06\u4e2d\u5e8f\u904d\u5386\u548c\u53cd\u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u7684\u7b54\u6848\u4ea4\u6362\u4e00\u4e0b\u3002\n\n- \u5982\u679c\u4f60 `define int unsigned long long` \u4e86\uff0c\u6309\u4f4d\u8d2a\u5fc3\u679a\u4e3e\u4f4d\u6570\u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5`for(int kk = 63; kk >= 0; --kk)` \u9700\u8981\u5728\u7edf\u8ba1\u5b8c\u540e\u7279\u5224 kk=0 \u7684\u60c5\u51b5\u53bb break\uff08\u56e0\u4e3a 0ull-1 \u4e0d\u7b49\u4e8e -1\uff0c\u6240\u4ee5\u5c31\u4f1a\u6b7b\u5faa\u73af\uff09\n\n- \u4f4d\u79fb\u8981 1ull \uff0c\u8fd9\u4e0d\u7528\u591a\u8bf4\u4e86\u5427\u3002\n\n\u5982\u679c\u4f60\u6b64\u9898 TLE \u4e86\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u4f60\u590d\u6742\u5ea6\u9519\u4e86\uff0c\u4eb2\u6d4b\u6b64\u9898\u4e0d\u5361\u5e38\uff08\uff08\n\n~~\u5173\u4e8e LCT \u5c31\u4e0d\u7528\u591a\u8bf4\u4e86\u5427\uff0c\u4e0d\u4f1a\u5c31\u5148\u5b66\u4e00\u4e0b\u6216\u7528\u6811\u5256\u505a~~\n\n```\n#include <bits/stdc++.h>\n#define int unsigned long long\nusing namespace std;\nconst int maxn = 1e6 + 10;\nint n, m, k;\nint read()\n{\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\nstruct node\n{\n    int ans0, ans1;\n} val[maxn], head[maxn], tail[maxn];\nint fa[maxn], ch[maxn][2], sta[maxn], rev[maxn];\nnode merge(node x, node y)\n{\n    node z;\n    z.ans0 = (~x.ans0 & y.ans0) | (x.ans0 & y.ans1);\n    z.ans1 = (~x.ans1 & y.ans0) | (x.ans1 & y.ans1);\n    return z;\n}\nbool notroot(int x)\n{\n    return ch[fa[x]][0] == x || ch[fa[x]][1] == x;\n}\nvoid pushup(int x)\n{\n    head[x] = tail[x] = val[x];\n    if (ch[x][0])\n    {\n        head[x] = merge(head[ch[x][0]], head[x]);\n        tail[x] = merge(tail[x], tail[ch[x][0]]);\n    }\n    if (ch[x][1])\n    {\n        head[x] = merge(head[x], head[ch[x][1]]);\n        tail[x] = merge(tail[ch[x][1]], tail[x]);\n    }\n    return;\n}\n\nvoid turn(int x)\n{\n    swap(head[x], tail[x]);\n    swap(ch[x][0], ch[x][1]);\n    rev[x] ^= 1;\n}\nvoid pushdown(int x)\n{\n    if (rev[x])\n    {\n        if (ch[x][0])\n            turn(ch[x][0]);\n        if (ch[x][1])\n            turn(ch[x][1]);\n        rev[x] = 0;\n    }\n    return;\n}\nvoid rotate(int x)\n{\n    int y = fa[x], z = fa[y];\n    int k1 = (ch[y][1] == x);\n    int v = ch[x][!k1];\n    if (notroot(y))\n    {\n        ch[z][ch[z][1] == y] = x;\n    }\n    ch[x][!k1] = y;\n    ch[y][k1] = v;\n    if (v)\n    {\n        fa[v] = y;\n    }\n    fa[y] = x;\n    fa[x] = z;\n    pushup(y);\n    pushup(x);\n}\nvoid splay(int x)\n{\n    int top = 0;\n    int y = x, z;\n    sta[++top] = y;\n    while (notroot(y))\n        sta[++top] = y = fa[y];\n    while (top)\n        pushdown(sta[top--]);\n    while (notroot(x))\n    {\n        y = fa[x], z = fa[y];\n        if (notroot(y))\n        {\n            rotate((ch[y][0] == x) ^ (ch[z][0] == y) ? x : y);\n        }\n        rotate(x);\n    }\n    pushup(x);\n    return;\n}\nvoid access(int x)\n{\n    for (int y = 0; x; x = fa[y = x])\n    {\n        splay(x);\n        ch[x][1] = y;\n        pushup(x);\n    }\n}\nvoid makeroot(int x)\n{\n    access(x);\n    splay(x);\n    turn(x);\n}\nvoid split(int x, int y)\n{\n    makeroot(x);\n    access(y);\n    splay(y);\n}\nvoid link(int x, int y)\n{\n    makeroot(x);\n    fa[x] = y;\n}\nsigned main()\n{\n    int mn = 0;\n    int mx = ~mn;\n    cin >> n >> m >> k;\n    for (int i = 1; i <= n; ++i)\n    {\n        int x, y;\n        cin >> x >> y;\n        if (x == 1)\n            val[i] = (node){mn, y};\n        if (x == 2)\n            val[i] = (node){y, mx};\n        if (x == 3)\n            val[i] = (node){y, ~y};\n    }\n    for (int i = 1; i < n; ++i)\n    {\n        int x, y;\n        cin >> x >> y;\n        link(x, y);\n    }\n    for (int i = 1; i <= m; ++i)\n    {\n        int opt, x, y, z;\n        cin >> opt >> x >> y >> z;\n        //opt = read(), x = read(), y = read(), z = read();\n        if (opt == 1)\n        {\n            split(x, y);\n            node nw = head[y];\n            int ans = 0;\n            for (long long kk = 63; kk >= 0; --kk)\n            {\n                if (nw.ans0 & (1ull << kk))\n                {\n                    ans += (1ull << kk);\n                }\n                else if (nw.ans1 & (1ull << kk) && z >= (1ull << kk))\n                {\n                    ans += (1ull << kk);\n                    z -= (1ull << kk);\n                }\n            }\n            cout << ans << endl;\n        }\n        if (opt == 2)\n        {\n            if (y == 1)\n                val[x] = (node){mn, z};\n            if (y == 2)\n                val[x] = (node){z, mx};\n            if (y == 3)\n                val[x] = (node){z, ~z};\n            splay(x);\n        }\n    }\n}\n```\n",
        "postTime": 1608114180,
        "uid": 154101,
        "name": "fily",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5354 \u3010[Ynoi2017]\u7531\u4e43\u7684OJ\u3011"
    },
    {
        "content": "\u6253\u4e2a\u5e7f\u544a\uff1a[blog](https://www.cnblogs.com/bztMinamoto/p/9430957.html)\n\n\u4eba\u751f\u7b2c\u4e00\u9053\u7531\u4e43\u2026\u2026\n\n\u505a\u8fd9\u9898\u4e4b\u524d\u5e94\u8be5\u5148\u53bb\u628a\u8fd9\u4e00\u9898\u7ed9\u5207\u6389->[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P2114)\n\n\u6211\u7684\u9898\u89e3->[\u8fd9\u91cc](https://www.cnblogs.com/bztMinamoto/p/9429072.html)\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f\u5148\u5427\u51680\u548c\u51681\u7684\u90fd\u8dd1\u7b54\u6848\uff0c\u7136\u540e\u6309\u4f4d\u8d2a\u5fc3\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f\u6bcf\u4e00\u6b21split\uff0c\u7136\u540e\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u8dd1\n\n\u540e\u6765\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u7206\u70b8\u2026\u2026\n\n\u8dd1\u6765\u770b\u770b\u9898\u89e3\u2026\u2026\u53d1\u73b0\u697c\u4e0b\u7684\u5927\u4f6c\u4eec\u90fd\u592a\u5f3a\u4e86\u6839\u672c\u770b\u4e0d\u61c2\u4ed6\u4eec\u5728\u8bf4\u4ec0\u4e48\u2026\u2026\u7279\u522b\u662f\u90a3\u4e2a\u516c\u5f0f\u4e3a\u4ec0\u4e48\u90fd\u4e0d\u89e3\u91ca\u4e00\u4e0b\u76f4\u63a5\u201c\u4e0d\u96be\u770b\u51fa\u201d\u201c\u7b80\u5355\u63a8\u5bfc\u201d\u201c\u5bb9\u6613\u6c42\u5f97\u201d\u2026\u2026\n\n\u5148\u8003\u8651\u4e00\u4e0bLCT\u7ef4\u62a4\u4ec0\u4e48\n\n\u5b9a\u4e49$f0$\u4e3a\u51680\u8d70\u8fc7\u4e00\u6761\u8def\u5f84\u4e4b\u540e\u7684\u7b54\u6848\uff0c$f1$\u8868\u793a\u51681\u8d70\u8fc7\u4e00\u6761\u8def\u5f84\u4e4b\u540e\u7684\u7b54\u6848\n\nLCT\u9700\u8981\u7ef4\u62a4\u7684\u662fsplay\u4e2d\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u91cc\uff0c\u4ece\u524d\u5f80\u540e\u904d\u5386\uff08\u5373\u4e2d\u5e8f\u904d\u5386\uff09\u7684$f0$\u548c$f1$\u4ee5\u53ca\u4ece\u540e\u5f80\u524d\uff08\u5373\u4e0e\u524d\u9762\u5b8c\u5168\u76f8\u53cd\u7684\u987a\u5e8f\uff09\u7684$f0$\u548c$f1$\n\n\u6bd4\u5982\u6709\u4e00\u68f5splay\uff0cx\u662f\u5176\u4e2d\u4e00\u4e2a\u70b9\uff0c\u5b83\u5728splay\u4e2d\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u5de6\u513f\u5b50y\u548c\u53f3\u513f\u5b50z\uff0c\u90a3\u4e48\u4ece\u524d\u5f80\u540e\u904d\u5386\u5c31\u662f\u8def\u5f84y->x->z\uff0c\u4ece\u540e\u5f80\u524d\u5c31\u662f\u8def\u5f84z->x->y\n\n\u7136\u540e\u601d\u8003\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u533a\u95f4\uff0c\u8be5\u5982\u4f55\u5408\u5e76\u4ed6\u4eec\n\n\u5047\u5982\u8bf4\u6211\u4eec\u6709\u4e24\u6bb5\u8ba1\u7b97\u51fa\u7b54\u6848\u7684\u533a\u95f4\uff0c\u5206\u522b\u5bf9\u5e94f0,f1\u548cg0,g1\u3002\u6211\u4eec\u8bbe\u5408\u5e76\u540e\u7684\u7b54\u6848\u662fh0,h1\uff0c\u90a3\u4e48\u6709\u5982\u4e0b\u5f0f\u5b50\uff1a\n\nh0=(~f0&g0)+(f0&g1)\n\nh1=(~f1&g0)+(f1&g1)\n\n\u4e3a\u5565\uff1f\n\n\u51680\u8d70\u5230\u6700\u540e\u7684\u8bdd\uff0c\u5148\u8003\u8651\u4e24\u79cd\u60c5\u51b5\n\n\u51680\u8d70\u5230\u4e2d\u95f4\u7b49\u4e8e1\u7684\u90a3\u51e0\u4f4d\uff0c\u8d70\u540e\u4e00\u534a\u7684\u7b54\u6848\u7b49\u540c\u4e8e\u51681\u8d70\u540e\u4e00\u534a\u7684\u8fd9\u51e0\u4f4d\u7684\u7b54\u6848\n\n\u51680\u8d70\u5230\u4e2d\u95f4\u7b49\u4e8e0\u7684\u90a3\u51e0\u4f4d\uff0c\u8d70\u540e\u4e00\u534a\u7684\u7b54\u6848\u7b49\u540c\u4e8e\u51680\u8d70\u540e\u4e00\u534a\u7684\u8fd9\u51e0\u4f4d\u7684\u7b54\u6848\n\n\u53ea\u9700\u8981\u628a\u8fd9\u4e24\u4e2a\u7b54\u6848\u52a0\u8d77\u6765\u5373\u53ef\n\n\uff08ps\uff1a\u8fd9\u91cc\u9ed8\u8ba4f\u4e3a\u524d\u4e00\u534a\u7684\u7b54\u6848\uff0cg\u4e3a\u540e\u4e00\u534a\u7684\u7b54\u6848\uff09\n\n\u51681\u8d70\u5230\u6700\u540e\u540c\u7406\n\n\u7136\u540e\u5c31\u662f\u51e0\u4e2a\u7ec6\u8282\n\n1.pushdown\u7684\u65f6\u5019\u56e0\u4e3a\u6709\u7ffb\u8f6c\u6807\u8bb0\uff0c\u4ece\u524d\u5f80\u540e\u8d70\u548c\u4ece\u540e\u5f80\u524d\u8d70\u7684\u7b54\u6848\u4e5f\u8981\u4ea4\u6362\n\n2.\u6309\u4f4d\u8d2a\u5fc3\u75281\u505a\u4f4d\u8fd0\u7b97\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u628a1\u8bbe\u6210unsigned long long\uff08\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8bbe\u4e00\u4e2aull\u53d8\u91cf\u8ba9\u5b83\u7b49\u4e8e1\uff09\uff08\u6211\u5c31\u662f\u56e0\u4e3a\u4e00\u5f00\u59cb\u76f4\u63a5\u75281\u505a\u4f4d\u8fd0\u7b97\u7ed3\u679c\u6b7b\u90fd\u8c03\u4e0d\u51fa\u6765\u2026\u2026\uff09\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#define ll unsigned long long\nusing std::swap;\nusing std::cout;\nusing std::endl;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline ll read(){\n    #define num ch-'0'\n    char ch;bool flag=0;ll res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar obuf[1<<24],*o=obuf;\nvoid print(ll x){\n    if(x>9) print(x/10);\n    *o++=x%10+48;\n}\nconst int N=100005;\nstruct node{\n    ll f0,f1;\n    inline node operator +(const node &b)const\n    {\n        node a;\n        a.f0=(~f0&b.f0)|(f0&b.f1);\n        a.f1=(~f1&b.f0)|(f1&b.f1);\n        return a;\n    }\n}f[N],l[N],r[N];\nint fa[N],ch[N][2],s[N],rev[N],top,tot;\nint ver[N<<1],head[N],Next[N<<1];\ninline void add(int u,int v){\n    ver[++tot]=v,Next[tot]=head[u],head[u]=tot;\n    ver[++tot]=u,Next[tot]=head[v],head[v]=tot;\n}\ninline bool isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\n#define ls ch[x][0]\n#define rs ch[x][1]\ninline void pushup(int x){\n    l[x]=r[x]=f[x];\n    if(ls) l[x]=l[ls]+l[x],r[x]=r[x]+r[ls];\n    if(rs) l[x]=l[x]+l[rs],r[x]=r[rs]+r[x];\n}\ninline void pushr(int x){\n    swap(ls,rs),swap(l[x],r[x]),rev[x]^=1;\n}\ninline void pushdown(int x){\n    if(rev[x]&&x){\n        pushr(ls),pushr(rs),rev[x]=0;\n    }\n}\nvoid rotate(int x){\n    int y=fa[x],z=fa[y],d=ch[y][1]==x;\n    if(!isroot(y)) ch[z][ch[z][1]==y]=x;\n    fa[x]=z,fa[y]=x,fa[ch[x][d^1]]=y,ch[y][d]=ch[x][d^1],ch[x][d^1]=y,pushup(y);\n}\nvoid splay(int x){\n    s[top=1]=x;for(int i=x;!isroot(i);i=fa[i]) s[++top]=fa[i];\n    while(top) pushdown(s[top--]);\n    for(int y=fa[x],z=fa[y];!isroot(x);y=fa[x],z=fa[y]){\n        if(!isroot(y))\n        ((ch[y][1]==x)^(ch[z][1]==y))?rotate(x):rotate(y);\n        rotate(x);\n    }\n    pushup(x);\n}\nvoid access(int x){\n    for(int y=0;x;x=fa[y=x]){\n        splay(x),rs=y,pushup(x);\n    }\n}\nvoid makeroot(int x){\n    access(x),splay(x),pushr(x);\n}\nvoid split(int x,int y){\n    makeroot(x),access(y),splay(y);\n}\nvoid dfs(int u){\n    for(int i=head[u];i;i=Next[i]){\n        int v=ver[i];\n        if(v==fa[u]) continue;\n        fa[v]=u,dfs(v);\n    }\n    pushup(u);\n}\nint main(){\n    //freopen(\"testdata.in\",\"r\",stdin);\n    int n=read(),m=read(),k=read();\n    for(int i=1;i<=n;++i){\n        int x=read();ll y=read();\n        switch(x){\n            case 1:f[i]=(node){0,y};break;\n            case 2:f[i]=(node){y,~0};break;\n            case 3:f[i]=(node){y,~y};break;\n        }\n    }\n    for(int i=1;i<n;++i){\n        int u=read(),v=read();add(u,v);\n    }\n    dfs(1);\n    while(m--){\n        int opt=read(),x=read(),y=read();ll z=read();\n        if(opt&1){\n            split(x,y);ll ans=0,e=1;\n            for(int i=k-1;i>=0;--i){\n                if(l[y].f0&(e<<i)) ans|=e<<i;\n                else if((l[y].f1&(e<<i))&&z>=(e<<i)) ans|=e<<i,z^=e<<i;\n            }\n            print(ans),*o++='\\n';\n        }\n        else{\n            switch(y){\n                case 1:f[x]=(node){0,z};break;\n                case 2:f[x]=(node){z,~0};break;\n                case 3:f[x]=(node){z,~z};break;\n            }\n            splay(x);\n        }\n    }\n    fwrite(obuf,o-obuf,1,stdout);\n    return 0;\n}\n```",
        "postTime": 1533544282,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "#  **\u6b63\u9898**\n\n      \u4e00\u770b\u5230\u8fd9\u9898\u5c31\u5fc3\u788eemm\uff0c\u597d\u597d\u7761\u89c9\u4e0d\u884c\u5417\u3002\u3002\u3002\n\n      \u5173\u952e\u770b\u5b8c\u8fd9\u9053\u9898\uff0c\u4f60\u5c31\u8981\u60f3\u5230\uff0c\u7528\u6811\u94fe\u5256\u5206+\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\uff0c\u56e0\u4e3a\u5728\u8fd9\u65b9\u9762\u7ebf\u6bb5\u6811\u662f\u6700\u7075\u6d3b\u800c\u4e14\u662f\u6700\u4e07\u80fd\u7684\u3002\u6211\u4eec\u5c31\u8981\u60f3\uff0c\u600e\u4e48\u53bb\u8fdb\u884c\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n      \u9996\u5148\uff0c\u60a8\u4e0d\u53ef\u80fd\u5efa2^64\u4e2a\u7ebf\u6bb5\u6811\u3002\u7136\u540e\u7b2ci\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4i\u7ecf\u8fc7\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u7684\u67d0\u4e2a\u533a\u95f4\u6240\u7559\u4e0b\u6765\u7684\u503c\u3002\n\n      \u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u7684\u867d\u7136\u6bd4\u8d77\u66b4\u529b\u6765\u597d\u50cf\u5feb\u5f88\u591a\uff0c\u4f46\u662f\u7ec6\u60f3\u8fd8\u662f\u4e0d\u884c\u3002\n\n      \u60f3\u7740\u62c6\u4f4d\u4f18\u5316\u3002\n\n      \u6bd4\u5982\u8bf4\u5f53\u524d\u7684z\u662f00101001.\n\n      \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u53d600000000~00101001.\n\n      \u4f4d\u8fd0\u7b97\u5c31\u662f\u6bcf\u4e00\u4f4d\u4e4b\u95f4\u7684\u64cd\u4f5c\u90fd\u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u62c6\u6210\u4e00\u4f4d\u4e00\u4f4d\u8fdb\u53bb\u8dd1\u3002\n\n      \u5982\u679c\u7b2c\u4e00\u4f4d\uff08\u6700\u9ad8\u4f4d\uff09\u653e\u5165\u4e00\u4e2a0\uff0c\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f0.\n\n      \u653e\u5165\u4e00\u4e2a1\uff0c\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f1.\n\n      \u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f1a\u4f18\u5148\u9009\u62e9\u6709\u4ef7\u503c\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u9ad8\u4f4d\u5f80\u5e95\u4f4d\u505a\uff0c\u6240\u4ee5\u5c31\u7b97\u540e\u9762\u76841\u5168\u90e8\u53d6\uff0c\u4e5f\u6ca1\u6709\u5f53\u524d\u53d61\u5927\uff0c\u6240\u4ee5\u5f53\u524d\u4f18\u5148\u53d6\u5927\u3002\n\n      \u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u8fdb\u884c\u7ef4\u62a4\u3002\u8dd1\u4e00\u904d\u5408\u5e76\u4e4b\u540e\u53d1\u73b0\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\n\n      m logn logn 64*2\n\n     \u6240\u4ee5\u662f\u63a5\u8fd11\u4ebf\u7684\u3002\n\n     \u90a3\u4e48\u6211\u4eec\u90fd\u8bf4\u4e86\uff0c\u4e0d\u540c\u4e24\u4f4d\u4e4b\u95f4\u4e0d\u4f1a\u5f71\u54cd\uff0c\u4f55\u5c1d\u4e0d\u628a\u5b83\u4eec\u540c\u65f6\u505a\uff0c\u7528unsigned long long \u6765\u5b58\u50a8\u5462?\n\n     \u90a3\u4e48\u6211\u4eec\u4e4b\u524d\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u653e0\u548c\u653e1\u8dd1\uff0c\u73b0\u5728\u6211\u4eec\u4e0d\u5982\u653e000000...\u548c111111...\u6765\u8dd1\u3002\n\n    \u6240\u4ee5\u7ebf\u6bb5\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ea\u9700\u8981\u5b58\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f000000...\u653e\u8fdb\u8be5\u533a\u95f4\u8dd1\u51fa\u6765\u7684\u6743\u503c\uff0c\u53e6\u4e00\u4e2a\u662f111111...\u653e\u8fdb\u8be5\u533a\u95f4\u8dd1\u51fa\u6765\u7684\u6743\u503c\u3002\n\n     \u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0\uff0c\u5728\u5411\u4e0a\u7ef4\u62a4\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u9ebb\u70e6\u3002\n\n     \u6bd4\u5982\u8bf400000000\u653e\u5165\u5de6\u5b50\u6811\u8dd1\u51fa\u6765\u7684\u7b54\u6848\u662f01001011.\n\n     \u4f46\u662f\u53f3\u5b50\u6811\u7684\u8282\u70b9\u53ea\u5b58\u50a8\u4e86\u4e24\u4e2a\u503c00000000\u653e\u8fdb\u53bb\u8dd1\u548c11111111\u653e\u8fdb\u53bb\u8dd1\u3002\n\n     \u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5411\u4e0a\u7ef4\u62a4\u5462\uff1f\n\n     \u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u4e0d\u662f\u5c06\u5de6\u5b50\u6811\u4e2d\u76841\uff0c\u6539\u6210\u8fd9\u4e00\u4f4d\u4e3a1\u65f6\u653e\u5165\u53f3\u5b50\u6811\u540e\u7684\u5f97\u51fa\u6765\u7684\u503c\u3002\n\n     \u90a3\u4e48\u5f97\u51fa\u6765\u7684\u4e00\u4e2aunsigned long long \u6211\u4eec\u628a\u5b83\u8bbe\u4e3aans\n\n     ans\u4e2d\u4e3a1\u7684\u6761\u4ef6\u662f\u4ec0\u4e48?\n\n     \u5de6\u5b50\u6811\u7684\u7b54\u6848\u4e2d\u4e3a1\u7684\u90a3\u4f4d\uff0c\u5728\u53f3\u5b50\u6811\u628a1\u653e\u8fdb\u53bb\u65f6\u4e5f\u4e3a1.\n\n     \u5de6\u5b50\u6811\u7684\u7b54\u6848\u4e2d\u4e3a0\u7684\u90a3\u4f4d\uff0c\u5728\u53f3\u5b50\u6811\u628a0\u653e\u8fdb\u53bb\u65f6\u4e5f\u4e3a1\n\n     \u6240\u4ee5\u601d\u8003\u4e00\u4e0b\u4f4d\u8fd0\u7b97\uff0c\u5c31\u53ef\u4ee5\u4f5c\u51faO\uff081\uff09\u7684\u5411\u4e0a\u7ef4\u62a4\n```cpp\n    ans[now][0]=(ans[rs[now]][1]&ans[ls[now]][0])|(ans[rs[now]][0]&(~ans[ls[now]][0]));\n    ans[now][1]=(ans[rs[now]][1]&ans[ls[now]][1])|(ans[rs[now]][0]&(~ans[ls[now]][1]));\n```\n\n      \u7136\u540e\u4f9d\u636e\u8fd9\u4e2a\u6765\u66f4\u65b0\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u90e8\u5206\u662f\u5173\u952e\u54e6~\n\n     \u53e6\u5916\u8fd8\u8981\u8bf4\u7684\uff0c\u56e0\u4e3a\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u4e0d\u80fd\u98a0\u5012\uff0c\u6240\u4ee5\u5fc5\u987b\u4ecex\u5f80y\u505a\u3002\n\n     \u6240\u4ee5\u6211\u4eec\u505a\u7684\u987a\u5e8f\u53ef\u80fd\u662f(7->1) (8->11)\n\n     \u987a\u5e8f\u5c31\u4f1a\u6709\u6b63\u548c\u5012\u7684\u533a\u5206\uff0c\u6240\u4ee5\u8981\u5efa\u4e24\u68f5\u7ebf\u6bb5\u6811\u3002\n\n     \u6700\u540e\u628a\u5f97\u51fa\u6765\u7684\u4e24\u4e2a\u503c\uff08\u5206\u522b\u662f\u628a000...\u653e\u8fdb\u53bb\u548c\u628a111...\u653e\u8fdb\u53bb\u7684\u6743\u503c\uff09\n\n     \u505a\u4e00\u904d\u8d2a\u5fc3\uff08\u4e0a\u9762\uff09\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u6700\u5927\u7684v\u3002\n\n    \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n\nint ls[1000010],rs[1000010];//0\u4e3a\u4ece\u5de6\u5f80\u53f3\u653e\uff0c1\u4e3a\u4ece\u53f3\u5f80\u5de6\u653e \nunsigned long long ans[1000010][2][2];\nint root;\nint n,m,k;\nunsigned long long t[100010];\nint op[200010];\nstruct edge{\n    int y,next;\n}u[200010];\nint first[200010];\nint tot[200010],son[200010],top[200010],image[200010],fa[200010],dep[200010];\nint len=0;\nint v,opt;\nunsigned long long tt;\nunsigned long long piece=0-1;\n\nvoid ins(int x,int y){\n    len++;\n    u[len].y=y;u[len].next=first[x];first[x]=len;\n}\n\nvoid dfs_1(int x){\n    tot[x]=1;\n    for(int i=first[x];i!=0;i=u[i].next){\n        int y=u[i].y;\n        if(y!=fa[x]){\n            fa[y]=x;\n            dep[y]=dep[x]+1;\n            dfs_1(y);\n            if(tot[y]>tot[son[x]]) son[x]=y;\n            tot[x]+=tot[y];\n        }\n    }\n}\n\nvoid dfs_2(int x,int tp){\n    top[x]=tp;image[x]=++len;\n    if(son[x]!=0) dfs_2(son[x],tp);\n    for(int i=first[x];i!=0;i=u[i].next){\n        int y=u[i].y;\n        if(y!=fa[x] && y!=son[x]) dfs_2(y,y);\n    }\n}\n\nvoid update(int&now,int x,int y){\n    if(now==0) now=++len;\n    int mid=(x+y)/2;\n    if(x==y){\n        if(opt==1){\n            ans[now][0][0]=ans[now][0][1]=(0&tt);\n            ans[now][1][0]=ans[now][1][1]=(piece&tt);\n        }\n        else if(opt==2){\n            ans[now][0][0]=ans[now][0][1]=(0|tt);\n            ans[now][1][0]=ans[now][1][1]=(piece|tt);\n        }\n        else if(opt==3){\n            ans[now][0][0]=ans[now][0][1]=(0^tt);\n            ans[now][1][0]=ans[now][1][1]=(piece^tt);\n        }\n        return ;\n    }\n    if(v<=mid) update(ls[now],x,mid);\n    else update(rs[now],mid+1,y);\n    ans[now][0][0]=(ans[rs[now]][1][0]&ans[ls[now]][0][0])|(ans[rs[now]][0][0]&(~ans[ls[now]][0][0]));\n    ans[now][1][0]=(ans[rs[now]][1][0]&ans[ls[now]][1][0])|(ans[rs[now]][0][0]&(~ans[ls[now]][1][0]));\n    ans[now][0][1]=(ans[ls[now]][1][1]&ans[rs[now]][0][1])|(ans[ls[now]][0][1]&(~ans[rs[now]][0][1]));\n    ans[now][1][1]=(ans[ls[now]][1][1]&ans[rs[now]][1][1])|(ans[ls[now]][0][1]&(~ans[rs[now]][1][1]));\n}\n\nunsigned long long get_change(int now,int l,int r,int x,int y,bool w,bool wh){\n    if(l==x && r==y) return ans[now][w][wh];\n    int mid=(x+y)/2;\n    if(r<=mid) return get_change(ls[now],l,r,x,mid,w,wh);\n    else if(mid<l) return get_change(rs[now],l,r,mid+1,y,w,wh);\n    else{\n    \tunsigned long long temp;\n        if(wh==false){\n        \ttemp=get_change(ls[now],l,mid,x,mid,w,wh);\n        \ttemp=(get_change(rs[now],mid+1,r,mid+1,y,true,wh)&temp)|(get_change(rs[now],mid+1,r,mid+1,y,false,wh)&(~temp));\n        }\n        else {\n        \ttemp=get_change(rs[now],mid+1,r,mid+1,y,w,wh);\n        \ttemp=(get_change(ls[now],l,mid,x,mid,true,wh)&temp)|(get_change(ls[now],l,mid,x,mid,false,wh)&(~temp));\n        }\n        return temp;\n    }\n}\n\nint l[2][30],r[2][30];\nint tota[2],total;\n\nunsigned long long solve(){\n    int x,y;\n    unsigned long long z;\n    scanf(\"%d %d %llu\",&x,&y,&z);\n    int tx=top[x],ty=top[y];\n    bool tf=true;\n    tota[0]=tota[1]=0;\n    while(tx!=ty){\n        if(dep[tx]>dep[ty]){\n            swap(x,y);\n            swap(tx,ty);\n            tf^=true;\n        }\n        l[tf][++tota[tf]]=image[ty];\n        r[tf][tota[tf]]=image[y];\n        y=fa[ty];ty=top[y];\n    }\n    if(dep[x]>dep[y]){\n        swap(x,y);\n        tf^=true;\n    }\n    l[tf][++tota[tf]]=image[x];\n    r[tf][tota[tf]]=image[y];\n    unsigned long long op1=0,op2=0-1;\n    for(int i=1;i<=tota[0];i++){\n        op1=(get_change(root,l[0][i],r[0][i],1,n,true,true)&op1)|(get_change(root,l[0][i],r[0][i],1,n,false,true)&(~op1));\n    \top2=(get_change(root,l[0][i],r[0][i],1,n,true,true)&op2)|(get_change(root,l[0][i],r[0][i],1,n,false,true)&(~op2));\n    }\n    for(int i=tota[1];i>=1;i--){\n        op1=(get_change(root,l[1][i],r[1][i],1,n,true,false)&op1)|(get_change(root,l[1][i],r[1][i],1,n,false,false)&(~op1));\n    \top2=(get_change(root,l[1][i],r[1][i],1,n,true,false)&op2)|(get_change(root,l[1][i],r[1][i],1,n,false,false)&(~op2));\n    }\n    unsigned long long temp=((unsigned long long)1<<63);\n    unsigned long long vv=0;\n    for(int i=63;i>=0;i--){\n        if(op1&temp) vv+=temp;\n        else if((op2&temp) && temp<=z){\n            vv+=temp;\n            z-=temp;\n        }\n    \ttemp>>=1;\n    }\n    return vv;\n}\n\nvoid change(){\n    int x,y;\n    unsigned long long z;\n    scanf(\"%d %d %llu\",&x,&y,&z);\n    v=image[x];opt=y;\n    tt=z;\n    update(root,1,n);\n}\n\nint main(){\n    scanf(\"%d %d %d\",&n,&m,&k);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d %llu\",&op[i],&t[i]);\n    for(int i=1;i<=n-1;i++){\n        int x,y;\n        scanf(\"%d %d\",&x,&y);\n        ins(x,y);\n        ins(y,x);\n    }\n    dep[1]=1;dfs_1(1);\n    len=0;dfs_2(1,1);\n    len=0;\n    for(int i=1;i<=n;i++){\n        v=image[i];opt=op[i];\n        tt=t[i];\n        update(root,1,n);\n    }\n    int type;\n    while(m--){\n        scanf(\"%d\",&type);\n        if(type==1) printf(\"%llu\\n\",solve());\n        else change();\n    }\n}\n```",
        "postTime": 1528892971,
        "uid": 29093,
        "name": "Deep_Kevin",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "\u4e00\u9053\u8fd8\u884c\u7684\u9898\u76ee\u5427\uff0c\u611f\u89c9 trick \u6bd4\u8f83\u7b80\u5355\u3002          \n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f[\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u5f81](https://www.luogu.com.cn/problem/P2114)\u7684\u52a0\u5f3a\u7248\uff0c\u5176\u5b9e\u6ca1\u505a\u8fc7\u4e5f\u6ca1\u5173\u7cfb\u5927\u6982\u63cf\u8ff0\u4e00\u4e0b\uff1a\u5047\u5982\u8981\u66b4\u529b\u8dd1\u94fe\uff0c\u6211\u4eec\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8003\u8651\uff0c\u679a\u4e3e\u6bcf\u4e00\u4f4d\u662f 0 \u8fd8\u662f 1 \u53bb\u8dd1\uff0c\u5982\u679c 0 \u8dd1\u51fa\u6765\u5c31\u662f 1 \u6216\u8005\u5f53\u524d\u5df2\u7ecf\u4e0d\u80fd\u9009 1 \u90a3\u4e48\u6211\u4eec\u5c31\u586b 0 \u5426\u5219\u586b 1 \uff0c\u8fd9\u6837\u8d2a\u5fc3\u5730\u505a\u5f88\u660e\u663e\u53ef\u4ee5\u4fdd\u8bc1\u7b54\u6848\u7684\u6b63\u786e\u6027\u3002          \n\n\u63a5\u7740\u6211\u4eec\u5c31\u8003\u8651\u600e\u4e48\u628a\u8fd9\u4e2a\u95ee\u9898\u7ed9\u8fdb\u884c\u62d3\u5c55\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u5982\u679c\u62ff\u5230\u4e86 64 \u4f4d\u91cc\u6bcf\u4e00\u4f4d\u586b 0 \u548c 1 \u662f\u4e2a\u4ec0\u4e48\u60c5\u51b5\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c $O(qk)$ \u7684\u5224\u65ad\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002          \n\n\u6211\u6700\u5f00\u59cb\u7684\u65f6\u5019\u662f\u60f3\u505a\u4e2a\u6811\u5206\u5757\uff0c\u6bd5\u7adf\u8fd9\u4e1c\u897f\u6211\u89c9\u5f97\u6709\u70b9\u4e0d\u4f1a\u7ef4\u62a4\uff0c\u4e0d\u8fc7 $O(n \\sqrt n \\log_n)$ \u76f4\u63a5\u529d\u9000\u597d\u5417\uff1f\u4e8e\u662f\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u4e0d\u59a8\u6811\u5256\u4e00\u4e0b\uff0c\u7136\u540e\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u533a\u95f4\u8bb0\u5f55\u4e00\u4e0b\u4e00\u4e2a\u5168\u662f 1 \u7684\u6570\u548c\u5168\u662f 0 \u7684\u6570\u901a\u8fc7\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u60c5\u51b5\u5f88\u660e\u663e\u53ef\u4ee5\u538b\u7f29\u6210\u4e00\u4e2a\u6570\uff0c\u63a5\u4e0b\u6765\u89e3\u51b3\u4e86\u5408\u5e76\u7684\u95ee\u9898\u8fd9\u9053\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff01            \n\n\u9996\u5148\u5982\u679c\u4f60\u76f4\u63a5\u5408\u7684\u8bdd\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u96be\u8bc1\u660e\u662f\u4e00\u4e2a $O(n\\log_n^3)$ \u7684\u60f3\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u8003\u8651 $O(1)$ \u5408\u5e76\uff0c\u8fd9\u91cc\u53ef\u80fd\u4e0d\u662f\u5f88\u597d\u60f3\uff0c\u867d\u7136\u4f60\u53ef\u4ee5\u5f88\u7b80\u5355\u6ef4\u731c\u5230\u80af\u5b9a\u662f\u4e00\u5806\u4f4d\u8fd0\u7b97\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f46\u662f\u76f4\u63a5\u51d1\u8fd9\u4e2a\u5f0f\u5b50\u8c8c\u4f3c\u4e0d\u592a\u597d\u60f3\uff0c\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u4e2a\u89d2\u5ea6\u3002               \n\n- \u6211\u4eec\u4e00\u4e2a\u4f4d\u4e00\u4e2a\u4f4d\u5730\u8003\u8651\uff0c\u5b83\u80af\u5b9a\u5728\u4f4d\u8fd0\u7b97\u4e0b\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5355\u72ec\u5bf9\u6bcf\u4e2a\u4f4d\u8003\u8651\u3002         \n\n- \u5148\u8003\u8651\u8ba9 1 \u4ece\u5de6\u5230\u53f3\u3002\u8fc7\u5982\u679c\u5f53\u524d\u5de6\u8fb9\u8ba9 1 \u8fc7\u662f 1 \u5e76\u4e14\u53f3\u8fb9\u4ece 1 \u8fc7\u662f 1 \u7684\u8bdd\u7b54\u6848\u5c31\u662f 1 \uff1b \u5982\u679c\u5f53\u524d\u5de6\u8fb9\u8ba9 1 \u8fc7\u662f 0 \u5e76\u4e14\u53f3\u8fb9\u4ece 0 \u8fc7\u662f 1 \u7684\u8bdd\u7b54\u6848\u4e5f\u662f 1 \u3002\u5176\u4f59\u60c5\u51b5 1 \u8fc7\u7b54\u6848\u90fd\u662f 0 \uff0c\u8ba9 0 \u4ece\u5de6\u5230\u53f3\u8fc7\u7684\u60c5\u51b5\u7c7b\u4f3c\uff0c\u4ece\u53f3\u5230\u5de6\u7684\u60c5\u51b5\u53cd\u8fc7\u6765\u5c31\u53ef\u4ee5\u4e86\u3002         \n          \n\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u653e\u4e00\u4e0b\u4ece\u5de6\u5230\u53f3\u8ba9 1 \u8fc7\u7684\u4f2a\u4ee3\u7801\uff1a         \n\n```res.ly = ((x.ly & y.ly) | ((~x.ly) & y.lx));//x,y\u662f\u5de6\u53f3\u533a\u95f4\u7684\u60c5\u51b5\uff0cly\u8868\u793a\u4ece\u5de6\u5230\u53f31\u8fc7\u7684\u60c5\u51b5\uff0clx\u8868\u793a\u4ece\u5de6\u5230\u53f30\u8fc7\u7684\u60c5\u51b5 ```\n\n\n\u63a5\u7740\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u4e00\u6bb5\u533a\u95f4\u4ece\u524d\u5230\u540e\u548c\u4ece\u540e\u5230\u524d 1 \u8fc7 \u548c 0 \u8fc7\u7684\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\log_n^2)$ \u4e86 \u3002         \n\n\u611f\u89c9\u5f88\u5e73\u6de1\u7684\u4e00\u9053 $Ynoi$ \uff0c\u552f\u4e00\u4eae\u70b9\u53ef\u80fd\u5c31\u662f\u8fd9\u4e2a $O(1)$ \u8f6c\u79fb\u3002     \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define ll unsigned long long\nconst int Len = 2e5 + 5;\ninline ll read() {\n    char ch = getchar();\n    ll x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\nll Maxn = 0 - 1,Minn,a[Len],val[Len]; \nint n,m,k,son[Len],siz[Len],dep[Len],fa[Len],id[Len],top[Len],opt[Len],head[Len],cnt,tot,aopt[Len];\nstruct Node\n{\n\tll lx,ly;\n\tll rx,ry;\n\tNode(ll xx = 0 , ll yy = 0,ll xxx = 0,ll yyy = 0){lx = xx , ly = yy , rx = xxx , ry = yyy;}\n}Forever_Pursuit , Used[Len][3] , ans[Len << 2];\nint Cnt[5];\nstruct node\n{\n\tint next,to;\n}edge[Len << 2];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs1(int x,int f)\n{\n\tfa[x] = f;\n\tdep[x] = dep[f] + 1;\n\tsiz[x] = 1;\n\tint maxson = -1;\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == f) continue;\n\t\tdfs1(to , x);\n\t\tsiz[x] += siz[to];\n\t\tif(siz[to] > maxson) maxson = siz[to] , son[x] = to;\n\t}\n}\nvoid dfs2(int x,int topf)\n{\n\ttop[x] = topf;\n\tid[x] = ++ tot;\n\tval[tot] = a[x];\n\topt[tot] = aopt[x];\n\tif(!son[x]) return;\n\tdfs2(son[x] , topf);\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tif(to == fa[x] || to == son[x]) continue;\n\t\tdfs2(to , to);\t\n\t} \n}\nll Calc(ll x,ll y,int z)\n{\n\tif(z == 1) return x & y;\n\tif(z == 2) return x | y;\n\tif(z == 3) return x ^ y;\n}\nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}\nNode Caalc(Node x,Node y)\n{\n\tNode res;\n\tres.lx = ((x.lx & y.ly) | ((~x.lx) & y.lx));\n\tres.ly = ((x.ly & y.ly) | ((~x.ly) & y.lx));//x,y\u662f\u5de6\u53f3\u533a\u95f4\u7684\u60c5\u51b5\uff0cly\u8868\u793a\u4ece\u5de6\u5230\u53f31\u8fc7\u7684\u60c5\u51b5\uff0clx\u8868\u793a\u4ece\u5de6\u5230\u53f30\u8fc7\u7684\u60c5\u51b5 \n\tres.rx = ((y.rx & x.ry) | ((~y.rx) & x.rx));\n\tres.ry = ((y.ry & x.ry) | ((~y.ry) & x.rx));\n\treturn res;\n}\nvoid build(int p,int l,int r)\n{\n\tans[p].lx = ans[p].rx = ans[p].ly = ans[p].ry = 0;\n\tif(l == r)\n\t{\n\t\tans[p].lx = ans[p].rx = Calc(Minn , val[l] , opt[l]);\n\t\tans[p].ly = ans[p].ry = Calc(Maxn , val[l] , opt[l]);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n\tans[p] = Caalc(ans[ls(p)] , ans[rs(p)]);\n}\nvoid update(int p,int l,int r,int idx,int Opt,ll num)\n{\n\tif(l == r)\n\t{\n\t\tval[l] = num , opt[l] = Opt;\n\t\tans[p].lx = ans[p].rx = Calc(Minn , val[l] , opt[l]);\n\t\tans[p].ly = ans[p].ry = Calc(Maxn , val[l] , opt[l]);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx , Opt , num);\n\telse update(rs(p) , mid + 1 , r , idx , Opt , num);\n\tans[p] = Caalc(ans[ls(p)] , ans[rs(p)]);\n}\nNode query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r) return ans[p];\n\tint mid = (l + r) >> 1;\n\tif(nr <= mid) return query(ls(p) , l , mid , nl , nr);\n\tif(nl >= mid + 1) return query(rs(p) , mid + 1 , r , nl , nr);\n\treturn Caalc(query(ls(p) , l , mid , nl , nr) , query(rs(p) , mid + 1 , r , nl , nr));\n}\nvoid Updpoint(int x,int y,ll z){update(1 , 1 , n , id[x] , y , z);}\nvoid Qrange(int x,int y)\n{\n\tForever_Pursuit.lx = Forever_Pursuit.ly = Forever_Pursuit.rx = Forever_Pursuit.ry = 0;\n\tCnt[1] = Cnt[2] = 0;\n\twhile(top[x] != top[y])\n\t{\n\t\tif(dep[top[x]] >= dep[top[y]]) \n\t\t{\n\t\t\tUsed[++ Cnt[1]][1] = query(1 , 1 , n , id[top[x]] , id[x]);\n\t\t\tx = fa[top[x]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tUsed[++ Cnt[2]][2] = query(1 , 1 , n , id[top[y]] , id[y]);\n\t\t\ty = fa[top[y]];\n\t\t}\n\t}\n\tif(dep[x] > dep[y]) Used[++ Cnt[1]][1] = query(1 , 1 , n , id[y] , id[x]);\n\telse Used[++ Cnt[2]][2] = query(1 , 1 , n , id[x] , id[y]);\n\tfor(int i = 1 ; i <= Cnt[1] ; i ++) swap(Used[i][1].lx , Used[i][1].rx) , swap(Used[i][1].ly , Used[i][1].ry);\n\tif(Cnt[1])\n\t{\n\t\tForever_Pursuit = Used[1][1];\n\t\tfor(int i = 2 ; i <= Cnt[1] ; i ++) Forever_Pursuit = Caalc(Forever_Pursuit , Used[i][1]);\n\t\tif(Cnt[2]) Forever_Pursuit = Caalc(Forever_Pursuit , Used[Cnt[2]][2]);\n\t}\n\telse Forever_Pursuit = Used[Cnt[2]][2];\n\tfor(int i = Cnt[2] - 1 ; i >= 1 ; i --) Forever_Pursuit = Caalc(Forever_Pursuit , Used[i][2]);\n}\nsigned main()\n{\n\tn = read() , m = read() , k = read();\n\tfor(int i = 1 ; i <= n ; i ++) aopt[i] = read() , a[i] = read();\n\tfor(int i = 1 ; i < n ; i ++) \n\t{\n\t\tint x,y;x = read() , y = read();\n\t\tadd(x , y) , add(y , x);\n\t}\n\tdfs1(1 , 0);\n\tdfs2(1 , 1);\n\tbuild(1 , 1 , n);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tll OPT , x , y , z;\n\t\tOPT = read() , x = read() , y = read() , z = read();\n\t\tif(OPT == 1) \n\t\t{\n\t\t\tQrange(x , y);\n\t\t\tll res = 0 , val = 0;\n\t\t\tfor(int bit = 63 ; bit >= 0 ; bit --)\n\t\t\t{\n\t\t\t\tint res0 = (Forever_Pursuit.lx >> bit) & 1llu;\n\t\t\t\tint res1 = (Forever_Pursuit.ly >> bit) & 1llu;\n\t\t\t\tif(val + (1llu << bit) <= z && res0 < res1) val += (1llu << bit) , res += (1llu << bit);\n\t\t\t\telse res += (1LL * res0 << bit);\n\t\t\t}\n\t\t\tprintf(\"%llu\\n\",res);\n\t\t}\n\t\telse Updpoint(x , y , z);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615964837,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5354 [Ynoi2017] \u7531\u4e43\u7684 OJ"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u4e00\u4e2a\u5408\u5e76\u8fc7\u7a0b\u9700\u8981\u8bf4\u5427\u3002\u3002\n\n\u8003\u8651\u6700 $naive$ \u7684\u505a\u6cd5\u3002\n\n\u7ef4\u62a4 $64$ \u7ebf\u6bb5\u6811\uff0c\u8868\u793a\u76f8\u5bf9 $bit$ \u3002\n\n\u521d\u59cb\u8fd9\u4f4d\u4e3a$1$\u5e94\u8be5\u53d8\u6210\u591a\u5c11\u7528 $s_{p,1}$\u8868\u793a\u3002\n\n\u521d\u59cb\u8fd9\u4f4d\u4e3a$0$\u5e94\u8be5\u53d8\u6210\u591a\u5c11\u7528 $s_{p,0}$\u8868\u793a\u3002\n\n\u8fd9\u4e2a\u60f3\u6cd5\u662f $\\log^2 / \\log^3$\u7684\uff0c\u663e\u7136\u8fc7\u4e0d\u53bb\u3002\n\n\u8003\u8651\u4e00\u8d77\u7ef4\u62a4\u3002\n\n$s_{ls,0}=1 \\& s_{rs,1}=1$ \u5c31\u662f $s_{p,0}=1$\u3002\n\n$s_{ls,1}=0 \\& s_{rs,0}=1$ \u5c31\u662f $s_{p,1}=1$\u3002\n\n\u6240\u4ee5\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u7531\u4e8e\u4e0a\u6811\uff0c\u8981\u8003\u8651\u6b63\u53cd\u95ee\u9898\u6240\u4ee5\u5c31\u53d8\u5f97\u975e\u5e38\u957f\uff08\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(int i=x;i<=y;i++)\n#define per(i,x,y) for(int i=x;i>=y;i--)\nusing namespace std;\nusing u=unsigned long long;\nint n,m,k;\nconst int N=1e5+1;\nvector<int>adj[N];\nint sz[N];\nint fa[N];\nint son[N];\nint d[N];\nvoid dfs(int u,int p){\n\td[u]=d[p]+1;\n\tsz[u]=1;\n\tfa[u]=p;\n\tfor(auto v:adj[u])\n\t\tif(v^p){\n\t\t\tdfs(v,u);\n\t\t\tsz[u]+=sz[v];\n\t\t\tif(sz[v]>sz[son[u]])son[u]=v;\n\t\t}\n}\nint dfn[N],idx=0;\nint top[N];\nint rev[N];\nvoid dfs2(int u,int t){\n\tdfn[u]=++idx;\n\trev[idx]=u;\n\ttop[u]=t;\n\tif(son[u])dfs2(son[u],t);\n\tfor(auto v:adj[u])\n\t\tif(!top[v])dfs2(v,v);\n}\nint op[N];\nu val[N];\nu calc(u x,int pos){\n\tif(op[pos]==1)\n\t\treturn x&val[pos];\n\tif(op[pos]==2)\n\t\treturn x|val[pos];\n\tif(op[pos]==3)\n\t\treturn x^val[pos];\n}\nstruct data{\n\tu s,g;\n\tu revs,revg;\n}tr[N<<2];\ndata merge(const data&x,const data&y){\n\tu s0=x.s;u g0=x.g;\n\tu s1=y.s;u g1=y.g;\n\tdata res;\n\tres.s=(~s0&s1)|(s0&g1);\n\tres.g=(~g0&s1)|(g0&g1);\n\ts0=x.revs;\n\ts1=y.revs;\n\tg0=x.revg;\n\tg1=y.revg;\n\tswap(s0,s1);\n\tswap(g0,g1);\n\tres.revs=(~s0&s1)|(s0&g1);\n\tres.revg=(~g0&s1)|(g0&g1);\n\treturn res;\n}\nvoid up(int p){tr[p]=merge(tr[p<<1],tr[p<<1|1]);}\nvoid build(int l,int r,int p){\n\tif(l==r){\n\t\ttr[p].s=tr[p].revs=calc(0,rev[l]);\n\t\ttr[p].g=tr[p].revg=calc(-1,rev[l]);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,p<<1);\n\tbuild(mid+1,r,p<<1|1);\n\tup(p);\n}\nvoid upd(int l,int r,int p,int x){\n\tif(l==r){\n\t\ttr[p].s=tr[p].revs=calc(0,rev[l]);\n\t\ttr[p].g=tr[p].revg=calc(-1,rev[l]);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)upd(l,mid,p<<1,x);\n\telse upd(mid+1,r,p<<1|1,x);\n\tup(p);\n}\ndata query(int ql,int qr,int l,int r,int p){\n\tif(ql<=l&&r<=qr)return tr[p];\n\tint mid=l+r>>1;\n\tif(qr<=mid)return query(ql,qr,l,mid,p<<1);\n\telse if(ql>mid)return query(ql,qr,mid+1,r,p<<1|1);\n\telse return merge(query(ql,qr,l,mid,p<<1),query(ql,qr,mid+1,r,p<<1|1));\n}\ndata query(int x,int y){\n\tvector<data>p[2];\n\twhile(top[x]!=top[y]){\n\t\tif(d[top[x]]>=d[top[y]]){\n\t\t\tp[0].push_back(query(dfn[top[x]],dfn[x],1,n,1));\n\t\t\tx=fa[top[x]];\n\t\t}else{\n\t\t\tp[1].push_back(query(dfn[top[y]],dfn[y],1,n,1));\n\t\t\ty=fa[top[y]];\n\t\t}\n\t}\n\tif(d[x]>=d[y])p[0].push_back(query(dfn[y],dfn[x],1,n,1));\n\telse p[1].push_back(query(dfn[x],dfn[y],1,n,1));\n\tdata res;\n\tbool flag=0;\n\tfor(auto&i:p[0])swap(i.s,i.revs),swap(i.g,i.revg);\n\tfor(auto i:p[0]){\n\t\tif(!flag)res=i,flag=1;\n\t\telse res=merge(res,i);\n\t}\n\treverse(p[1].begin(),p[1].end());\n\tfor(auto i:p[1]){\n\t\tif(!flag)res=i,flag=1;\n\t\telse res=merge(res,i);\n\t}\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcin>>n>>m>>k;\n\trep(i,1,n){\n\t\tint x;\n\t\tu y;\n\t\tcin>>x>>y;\n\t\top[i]=x;\n\t\tval[i]=y;\n\t}\n\trep(i,2,n){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tadj[x].push_back(y);\n\t\tadj[y].push_back(x);\n\t}\n\tdfs(1,0);\n\tdfs2(1,1);\n\tbuild(1,n,1);\n\twhile(m--){\n\t\tint o,x,y;\n\t\tu z;\n\t\tcin>>o>>x>>y>>z;\n\t\tif(o==2){\n\t\t\top[x]=y;\n\t\t\tval[x]=z;\n\t\t\tupd(1,n,1,dfn[x]);\n\t\t}else{\n\t\t\tdata res=query(x,y);\n\t\t\tu ans=0;\n\t\t\tper(i,k-1,0){\n\t\t\t\tif(res.s>>i&1)ans|=1ull<<i;\n\t\t\t\telse if(res.g>>i&1&&(1ull<<i)<=z){ans|=1ull<<i;z-=1ull<<i;}\n\t\t\t}\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1600091633,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5354 \u3010[Ynoi2017]\u7531\u4e43\u7684OJ\u3011"
    },
    {
        "content": "\u9898\u76ee\u91cc\u8bb2\u5f97\u975e\u5e38\u6e05\u695a\uff0c\u5c31\u662f\u628a \u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81 \u642c\u5230\u6811\u4e0a\u4e86\u3002\n\n\u90a3\u6211\u4eec\u5148\u56de\u60f3\u4e00\u4e0b \u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81 \u662f\u600e\u4e48\u505a\u7684\uff1a\n\n\u9996\u5148\u6211\u4eec\u8bbe\u4e86\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u5728\u4e8c\u8fdb\u5236\u4e0b\u5168\u662f $1$ \uff08\u4e0b\u6587\u4e2d\u4e3a $mx$ \uff09\uff0c\u4e00\u4e2a\u5168\u662f $0$ \uff08\u4e0b\u6587\u4e2d\u4e3a $mn$ \uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5\u5bf9\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u7528\u8fd9\u4e24\u4e2a\u503c\u8fdb\u884c\u6a21\u62df\u3002\n\n\u56e0\u4e3a\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6bcf\u4e2a\u4f4d\u72ec\u7acb\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u6bcf\u4e2a\u4f4d\u9009  $0$ \u6216 $1$ \u65f6\u6700\u540e\u80fd\u591f\u5f97\u5230 $0$ \u8fd8\u662f $1$ \u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u8d2a\u5fc3\u8fdb\u884c\u9009\u53d6 $0/1$ \u5c31\u597d\u4e86\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u5e8f\u5217\u5982\u4f55\u52a8\u6001\u7ef4\u62a4\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u5185\u4e00\u5f00\u59cb\u662f $mx$ \u548c $mn$ \uff0c\u4e00\u76f4\u628a\u8fd9\u4e2a\u533a\u95f4\u6a21\u62df\u5b8c\u4e4b\u540e\u7684\u7ed3\u679c\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u5462\uff1f\n\n\u6211\u4eec\u5148\u6309\u4f4d\u5206\u6790\uff1a\u73b0\u5728\u77e5\u9053\u8fd9\u4f4d\u9009 $1$ \u548c $0$ \u5206\u522b\u5728\u4e24\u8fb9\u4f1a\u5f97\u5230\u4ec0\u4e48\u7ed3\u679c\uff0c\u90a3\u6211\u4eec\u5148\u6a21\u62df\u8fd9\u4f4d\u9009\u4ec0\u4e48\uff0c\u7528\u5728\u5de6\u8fb9\u7684\u7ed3\u679c\u518d\u62ff\u5230\u53f3\u8fb9\u53bb\u770b\u653e\u8fdb\u53bb\u4f1a\u5f97\u5230\u4ec0\u4e48\u7ed3\u679c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u533a\u95f4\u8fd9\u4f4d\u9009 $1$ \u6216 $0$ \u7684\u7ed3\u679c\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e00\u5171\u679a\u4e3e\u6700\u591a $64$ \u4f4d\uff0c $64$ \u7684\u5e38\u6570\u77ac\u95f4\u7206\u70b8\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u80fd\u6309\u4f4d\u679a\u4e3e\u3002\n\n\u60f3\u4e00\u60f3\u5982\u679c\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5f97\u5230\u5de6\u8fb9\u5168\u9009 $1$ \u6216 $0$ \u65f6\u4f1a\u5f97\u5230\u7684\u7ed3\u679c\u4e0a\u54ea\u4e9b\u4f4d\u662f $1$ \uff0c\u54ea\u4e9b\u4f4d\u662f $0$ \u3002\u7136\u540e\u53bb\u53f3\u8fb9\u533a\u95f4\u770b\u4e0b\u8fd9\u4e9b\u662f $1$ \u7684\u4f4d\u4e0a\u54ea\u4e9b\u53c8\u4f1a\u53d8\u6210  $0$ \u6216 $1$ \uff0c\u662f $0$ \u7684\u4f4d\u4e0a\u54ea\u4e9b\u53c8\u662f $1$ \u6216 $0$ \u3002\n\n\u9996\u5148\u8bbe $tmp1$ \u8868\u793a\u7ecf\u8fc7\u5de6\u8fb9\u4e4b\u540e\u662f $1$ \u7684\u4f4d\u7f6e\uff0c $tmp0$ \u8868\u793a\u7ecf\u8fc7\u5de6\u8fb9\u4e4b\u540e\u662f $0$ \u7684\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48 `tmp1=now,tmp0=~now;`\uff08 $now$ \u8868\u793a\u5f53\u524d\u5de6\u8fb9\u5168\u9009 $0$ \u6216 $1$ \u7684\u7ed3\u679c\uff09\n\n\u7136\u540e\u5f97\u5230\u7b54\u6848 `ans=(tmp1&right1)|(tmp0&right0)`\u3002\uff08 $right0/1$ \u8868\u793a\u53f3\u8fb9\u5168\u9009 $0/1$ \u7684\u7ed3\u679c\uff09\n\n\u5c31\u76f8\u5f53\u4e8e\u628a\u5de6\u8fb9\u7ed3\u679c\u7684 $0$ \u548c $1$ \u5206\u522b\u5904\u7406\uff0c\u628a\u662f$0$\u6216$1$\u7684\u4f4d\u4e0a\u7684\u53f3\u8fb9\u7684\u7ed3\u679c\u76f4\u63a5\u642c\u8fc7\u6765\u3002\n\n\u56e0\u4e3a\u8fd9\u4e00\u4f4d\u7ecf\u8fc7\u5de6\u8fb9\u540e\u53d8\u6210\u4e86 $0/1$\uff0c\u6240\u4ee5\u8fd9\u4e00\u4f4d\u7ecf\u8fc7\u53f3\u8fb9\u4e4b\u540e\u5c31\u5e94\u8be5\u662f\u53f3\u8fb9\u4e00\u5f00\u59cb\u8fd9\u4f4d\u9009 $0/1$ \u7684\u7ed3\u679c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u505a\u5230\u4e86 $\\operatorname{O}(1)$ \u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u7ed3\u679c\u3002\n\n\u6700\u540e\u518d\u7528\u6811\u94fe\u5256\u5206\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u642c\u5230\u6811\u4e0a\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u9053\u9898\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u987a\u5e8f\u662f\u6709\u5f71\u54cd\u7684\u3002\u6240\u4ee5\u8981\u5728\u6811\u5256\u91cc\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd8\u8981\u7ef4\u62a4\u533a\u95f4\u5012\u7740\u6765\u7684\u7ed3\u679c\u3002\n\n~~\u7ec6\u8282\u5f88\u591aWA\u4e86\u5f88\u4e45\uff0c\u4e0d\u6127\u662fYnoi~~\n\n\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<vector>\nusing namespace std;\nvector<unsigned long long> e[100010];\nstruct node\n{\n\tunsigned long long one,zero;\n}nodes[400010],exnodes[400010],emp,ret,exret;//nodes\u662f\u6b63\u7740\u6765\uff0cexnodes\u662f\u53cd\u7740\u6765 \nconst unsigned long long cone=1;//1\u5e38\u91cf\uff0c\u514d\u5f971<<i\u7206\u6389 \nunsigned long long mx,mn;//\u5168\u4e3a1\u548c\u5168\u4e3a0\u7684\u91cf \nunsigned long long n,m,k,opx[100010],op[100010],u,v,opt,opa,opb,opc;\nunsigned long long siz[100010],son[100010],dep[100010],fa[100010],hb[100010],dfn[100010],ton[100010],cnt;\nbool flag,exflag;\nvoid dfs1(unsigned long long x,unsigned long long las)\n{\n\tfa[x]=las;\n\tdep[x]=dep[las]+cone;\n\tsiz[x]=cone;\n\tfor(unsigned long long i=0;i<e[x].size();++i)\n\t{\n\t\tunsigned long long y=e[x][i];\n\t\tif(y^las)\n\t\t{\n\t\t\tdfs1(y,x);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[son[x]]<siz[y])\tson[x]=y;\n\t\t}\n\t}\n}\nvoid dfs2(unsigned long long x,unsigned long long las,bool heavy)\n{\n\tdfn[x]=++cnt;\n\tton[cnt]=x;\n\tif(heavy)\thb[x]=hb[las];\n\telse\thb[x]=x;\n\tif(son[x])\tdfs2(son[x],x,1);\n\tfor(unsigned long long i=0;i<e[x].size();++i)\n\t{\n\t\tunsigned long long y=e[x][i];\n\t\tif((y^las)&&(y^son[x]))\tdfs2(y,x,0);\n\t}\n}\nnode merge(node one,node ano)\n{\n\tnode res=emp;\n\tunsigned long long tmp1=one.one;\n\tunsigned long long tmp0=~tmp1;\n\tres.one=(tmp1&ano.one)|(tmp0&ano.zero);\n\ttmp1=one.zero;\n\ttmp0=~tmp1;\n\tres.zero=(tmp1&ano.one)|(tmp0&ano.zero);//\u5168\u90090/1\u5206\u522b\u7ef4\u62a4 \n\treturn res;\n}\nvoid build(unsigned long long l,unsigned long long r,unsigned long long x)\n{\n\tif(l^r)\n\t{\n\t\tunsigned long long mid=(l+r)>>cone;\n\t\tbuild(l,mid,x<<cone);\n\t\tbuild(mid+cone,r,x<<cone|cone);\n\t\tnodes[x]=merge(nodes[x<<cone],nodes[x<<cone|cone]);\n\t\texnodes[x]=merge(exnodes[x<<cone|cone],exnodes[x<<cone]);//\u53cd\u7740\u6765\u7684\u80af\u5b9a\u4e5f\u8981\u53cd\u7740\u5408\u5e76 \n\t}\n\telse\n\t{\n\t\tnodes[x]=exnodes[x]=emp;\n\t\tif(op[ton[l]]==cone)//\u521d\u503c\u76f4\u63a5\u6a21\u62df\u5c31\u597d \n\t\t{\n\t\t\tnodes[x].one&=opx[ton[l]];\n\t\t\texnodes[x].one&=opx[ton[l]];\n\t\t\tnodes[x].zero&=opx[ton[l]];\n\t\t\texnodes[x].zero&=opx[ton[l]];\n\t\t}\n\t\telse if(op[ton[l]]==2)\n\t\t{\n\t\t\tnodes[x].one|=opx[ton[l]];\n\t\t\texnodes[x].one|=opx[ton[l]];\n\t\t\tnodes[x].zero|=opx[ton[l]];\n\t\t\texnodes[x].zero|=opx[ton[l]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnodes[x].one^=opx[ton[l]];\n\t\t\texnodes[x].one^=opx[ton[l]];\n\t\t\tnodes[x].zero^=opx[ton[l]];\n\t\t\texnodes[x].zero^=opx[ton[l]];\n\t\t}\n\t}\n}\nvoid update(unsigned long long l,unsigned long long r,unsigned long long x,unsigned long long pos,unsigned long long oper,unsigned long long val)\n{\n\tif(l^r)\n\t{\n\t\tunsigned long long mid=(l+r)>>cone;\n\t\tif(pos<=mid)\tupdate(l,mid,x<<cone,pos,oper,val);\n\t\telse\tupdate(mid+cone,r,x<<cone|cone,pos,oper,val);\n\t\tnodes[x]=merge(nodes[x<<cone],nodes[x<<cone|cone]);\n\t\texnodes[x]=merge(exnodes[x<<cone|cone],exnodes[x<<cone]);\n\t}\n\telse\n\t{\n\t\top[ton[l]]=oper;\n\t\topx[ton[l]]=val;\n\t\tnodes[x]=exnodes[x]=emp;\n\t\tif(op[ton[l]]==cone)\n\t\t{\n\t\t\tnodes[x].one&=opx[ton[l]];\n\t\t\texnodes[x].one&=opx[ton[l]];\n\t\t\tnodes[x].zero&=opx[ton[l]];\n\t\t\texnodes[x].zero&=opx[ton[l]];\n\t\t}\n\t\telse if(op[ton[l]]==2)\n\t\t{\n\t\t\tnodes[x].one|=opx[ton[l]];\n\t\t\texnodes[x].one|=opx[ton[l]];\n\t\t\tnodes[x].zero|=opx[ton[l]];\n\t\t\texnodes[x].zero|=opx[ton[l]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnodes[x].one^=opx[ton[l]];\n\t\t\texnodes[x].one^=opx[ton[l]];\n\t\t\tnodes[x].zero^=opx[ton[l]];\n\t\t\texnodes[x].zero^=opx[ton[l]];\n\t\t}\n\t}\n}\nvoid find(unsigned long long l,unsigned long long r,unsigned long long x,unsigned long long fr,unsigned long long ba)//y\u7528\u7684find \n{\n\tif(l>ba||r<fr)\treturn;\n\tif(l>=fr&&r<=ba)\n\t{\n\t\tif(!flag)\n\t\t{\n\t\t\tret=nodes[x];\n\t\t\tflag=cone;\n\t\t}\n\t\telse\tret=merge(nodes[x],ret);//LCA\u5230y\u4e2d\u662fdfs\u5e8f\u4ece\u5c0f\u5230\u5927\uff0cy\u7684dfs\u5e8f\u5927\uff0c\u6240\u4ee5\u8981\u653e\u5230\u540e\u9762\uff0c\u5e76\u548c\u6b63\u5e8f\u7684\u7ed3\u679c\u5408\u5e76\n\t}\n\telse\n\t{\n\t\tunsigned long long mid=(l+r)>>cone;\n\t\tfind(mid+cone,r,x<<cone|cone,fr,ba);//y\u653e\u5230\u540e\u9762 \n\t\tfind(l,mid,x<<cone,fr,ba);\n\t}\n}\nvoid exfind(unsigned long long l,unsigned long long r,unsigned long long x,unsigned long long fr,unsigned long long ba)//x\u7528\u7684exfind \n{\n\tif(l>ba||r<fr)\treturn;\n\tif(l>=fr&&r<=ba)\n\t{\n\t\tif(!exflag)\n\t\t{\n\t\t\texret=exnodes[x];\n\t\t\texflag=cone;\n\t\t}\n\t\telse\texret=merge(exret,exnodes[x]);//x\u5230LCA\u4e2d\u662fdfs\u5e8f\u4ece\u5927\u5230\u5c0f\uff0cx\u7684dfs\u5e8f\u5927\uff0c\u6240\u4ee5\u8981\u653e\u5230\u540e\u9762\uff0c\u5e76\u548c\u5012\u5e8f\u7684\u7ed3\u679c\u5408\u5e76\n\t}\n\telse\n\t{\n\t\tunsigned long long mid=(l+r)>>cone;\n\t\texfind(mid+cone,r,x<<cone|cone,fr,ba);//x\u653e\u5230\u540e\u9762 \n\t\texfind(l,mid,x<<cone,fr,ba);\n\t}\n}\nnode LCA(unsigned long long x,unsigned long long y)\n{\n\tunsigned long long fx=hb[x],fy=hb[y];\n\tflag=exflag=0;//\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u503c\uff0c\u5c31\u76f4\u63a5\u628a\u503c\u8d4b\u7ed9ret/exret \n\tret=exret=emp;\n\twhile(fx^fy)\n\t{\n\t\tif(dep[fx]>dep[fy])//\u5206\u7c7b\u8ba8\u8bba \n\t\t{\n\t\t\texfind(cone,n,cone,dfn[fx],dfn[x]);//x\u8fd9\u8fb9\u662f\u4ecex\u5230LCA\u5f80\u4e0a\uff0c\u4f46x\u7684dfs\u5e8f\u66f4\u5927 \n\t\t\tx=fa[fx];\n\t\t\tfx=hb[x];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfind(cone,n,cone,dfn[fy],dfn[y]);//y\u8fd9\u8fb9\u662f\u4eceLCA\u5230y\u5f80\u4e0b\uff0c\u4f46y\u7684dfs\u5e8f\u66f4\u5927\n\t\t\ty=fa[fy];\n\t\t\tfy=hb[y];\n\t\t}\n\t}\n\tif(dep[x]<dep[y])\tfind(cone,n,cone,dfn[x],dfn[y]);\n\telse\texfind(cone,n,cone,dfn[y],dfn[x]);\n\treturn merge(exret,ret);//x\u8fd9\u8fb9\u5728\u524d\u9762 \n}\nunsigned long long solve(node how,unsigned long long lim)//\u8d2a\u5fc3\u9009\u53d6 \n{\n\tunsigned long long res=0,used=0;\n\tfor(unsigned long long i=k-1;i>=0;--i)\n\t{\n\t\tif(how.zero&(cone<<i))\tres+=(cone<<i);\n\t\telse if((how.one&(cone<<i))&&used+(cone<<i)<=lim)\n\t\t{\n\t\t\tres+=(cone<<i);\n\t\t\tused+=(cone<<i);\n\t\t}\n\t\tif(i==0)\tbreak;\n\t}\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%llu %llu %llu\",&n,&m,&k);\n\tmx=-cone;\n\tmn=0;\n\temp.one=mx;\n\temp.zero=mn;\n\tfor(unsigned long long i=cone;i<=n;++i)\tscanf(\"%llu %llu\",&op[i],&opx[i]);\n\tfor(unsigned long long i=cone;i<n;++i)\n\t{\n\t\tscanf(\"%llu %llu\",&u,&v);\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t} \n\tdfs1(cone,cone);\n\tdfs2(cone,cone,0);\n\tbuild(cone,n,cone);\n\tfor(unsigned long long i=cone;i<=m;++i)\n\t{\n\t\tscanf(\"%llu %llu %llu %llu\",&opt,&opa,&opb,&opc);\n\t\tif(opt==2)\tupdate(cone,n,cone,dfn[opa],opb,opc);\n\t\telse\tprintf(\"%llu\\n\",k?solve(LCA(opa,opb),opc):0);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1598173075,
        "uid": 174555,
        "name": "CyanSineSin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5354 \u3010[Ynoi2017]\u7531\u4e43\u7684OJ\u3011"
    },
    {
        "content": "\u819c\u62dc\u795e\u7287\u51fa\u9898\u4eba\u7ba1\u7406\u5458\uff01\uff01\u819c\u62dcyler\u548cZSY\uff01\uff01\n\n\u6ca1\u9519yler\u8fde\u7eed\u6559\u6211\u8fd9\u4e2a\u849f\u84bb\u5199\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7\u548c\u7761\u89c9\u56f0\u96be\u7efc\u5408\u75c7%%%Orz\uff0c\u6240\u4ee5\u6309\u4f4d\u8d2a\u5fc3\u7684\u601d\u8def\u53ef\u4ee5\u7ee7\u627f\u4e0b\u6765\n\n\u8fd9\u91cc\u6700\u597d\u8fd8\u662f\u5199\u6811\u5256\u5427\uff0c\u4e0d\u8fc7\u6211\u6839\u672c\u4e0d\u4f1a\uff0c\u4e8e\u662f\u53ea\u597d\u6765\u4e2aLCT\uff0c\u7528unsigned long long\u7ef4\u62a4\u94fe\u4e0a\u53cc\u5411\u7684\u6309\u4f4d\u64cd\u4f5c\u3002\u5177\u4f53\u65b9\u6cd5yler\u5df2\u7ecf\u8bb2\u5f97\u5f88\u597d\u5566\n\n\u6ce8\u610f\u56e0\u4e3a\u4fe1\u606f\u7684\u7ef4\u62a4\u662f\u6709\u65b9\u5411\u6027\u7684\uff0c\u6240\u4ee5pushdown\u8981\u5199\u89c4\u8303\u3002\u3002\u3002\u3002\u3002\u3002\n```cpp\n#include<cstdio>\n#define RG register\n#define R RG int\n#define I inline void\n#define TP template<typename T>\n#define lc c[x][0]\n#define rc c[x][1]\n#define G ch=getchar()\n#define upd switch(y){\\\n\tcase 1:v[x]=(B){_0,z};break;\\\n\tcase 2:v[x]=(B){z,_I};break;\\\n\tcase 3:v[x]=(B){z,~z};\\\n}\ntypedef unsigned long long L;\nconst L _0=0ull,_1=1ull,_I=~_0;\nconst int N=100009;\nstruct B{\n\tL f0,f1;\n\tI merge(RG B x,RG B y){\n\t\tf0=(~x.f0&y.f0)|(x.f0&y.f1);\n\t\tf1=(~x.f1&y.f0)|(x.f1&y.f1);\n\t}\n}v[N],b[N],e[N];\nbool r[N];\nint f[N],c[N][2];\nTP I swap(RG T&x,RG T&y){\n\tRG T z=x;x=y;y=z;\n}\nTP I in(RG T&x){\n\tRG char G;\n\twhile(ch<'-')G;\n\tx=ch&15;G;\n\twhile(ch>'-')x*=10,x+=ch&15,G;\n}\ninline bool nroot(R x){\n\treturn c[f[x]][0]==x||c[f[x]][1]==x;\n}\nI up(R x){//\u4e4b\u524d\u8bd5\u7740\u5199\u6570\u7ec4\u53d1\u73b0WA\u4e86\uff0c\u539f\u56e0\u662f\u672c\u6765\u9700\u8981\u7ee7\u7eed\u8fd0\u7b97\u7684\u4fe1\u606f\u53c8\u88ab\u8986\u76d6\u6389\uff0c\u7528\u7ed3\u6784\u4f53\u5f04\u4e00\u4e0b\u5c31\u597d\u4e86\n\tb[x]=e[x]=v[x];\n\tif(lc)b[x].merge(b[lc],b[x]),e[x].merge(e[x],e[lc]);\n\tif(rc)b[x].merge(b[x],b[rc]),e[x].merge(e[rc],e[x]);\n}\nI rev(R x){\n\tswap(b[x],e[x]);swap(lc,rc);r[x]^=1;\n}\nI down(R x){\n\tif(r[x])rev(lc),rev(rc),r[x]=0;\n}\nI all(R x){\n\tif(nroot(x))all(f[x]);down(x);\n}\nI rot(R x){\n\tR y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n\tif(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n\tup(f[w]=y);f[y]=x;f[x]=z;\n}\nI splay(R x){\n\tall(x);R y;\n\twhile(nroot(x)){\n\t\tif(nroot(y=f[x]))\n\t\t\trot((c[f[y]][0]==y)^(c[y][0]==x)?x:y);\n\t\trot(x);\n\t}\n\tup(x);\n}\nI access(R x){\n\tfor(R y=0;x;y=x,x=f[x])\n\t\tsplay(x),rc=y,up(x);\n}\nI mroot(R x){\n\taccess(x);splay(x);rev(x);\n}\nint main(){\n\tR n,m,k,q,x,y;\n\tRG L i,z,g0,g1,w,ans;\n\tin(n);in(m);in(k);--k;\n\tfor(x=1;x<=n;++x){\n\t\tin(y);in(z);upd;up(x);\n\t}\n\tfor(i=1;i<n;++i){\n\t\tin(x);in(y);\n\t\tmroot(x);f[x]=y;\n\t}\n\twhile(m--){\n\t\tin(q);in(x);in(y);in(z);\n\t\tif(q&1){\n\t\t\tmroot(x);access(y);splay(y);\n\t\t\tg0=b[y].f0;g1=b[y].f1;w=ans=_0;\n\t\t\tfor(i=_1<<k;i;i>>=1)//\u548c\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7\u4e00\u6837\u8d2a\u5fc3\u4e0b\u53bb\n\t\t\t\tif(g0&i)ans|=i;\n\t\t\t\telse if((g1&i)&&(w|i)<=z)ans|=i,w|=i;\n\t\t\tprintf(\"%llu\\n\",ans);\n\t\t}\n\t\telse{upd;splay(x);}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1522657475,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f**NOI\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7**\u6539\u7f16\u800c\u6765\u7684\n\n\u601d\u8def\u662f\u4e00\u6837\u7684\n\n\u8fd9\u9053\u9898\u6211\u4eec\u8003\u8651\u7528LCT\u7ef4\u62a4\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e24\u4e2a\u503c\n\n\u4e00\u4e2a\u4e3a\u4e2d\u5e8f\u904d\u5386\u8fd9\u68f5\u5b50\u6811\u7684ans0\uff0cans1\uff08\u5206\u522b\u8868\u793a0\u548cINF(\u4e8c\u8fdb\u5236\u4e0b\u5168\u4e3a1)\u8dd1\u7684\u7b54\u6848\uff09\n\n\u53e6\u4e00\u4e2a\u4e3a\u4e2d\u5e8f\u904d\u5386\u7684\u53cd\u5411\u904d\u5386\u8fd9\u68f5\u5b50\u6811\u7684ans0\uff0cans1\n\n\u8fd8\u8981\u8bb0\u5f97\u4fdd\u5b58\u8fd9\u4e2a\u70b9\u7684\u521d\u59cb\u64cd\u4f5c\n\n\n\u8003\u8651\u5408\u5e76\uff0c\u82e5\u77e5\u9053\u7684\u5de6\u8fb9\u7684f0\uff0cf1\uff0c\u53f3\u8fb9\u7684g0\uff0cg1\uff0c\u5408\u5e76\u540e\u7684h0\uff0ch1  \u6709\n\n    h0 = (~f0 & g0) | (f0 & g1)\n\n    h1 = (~f1 & g0) | (f1 & g1)\n\n\u542b\u4e49\u5c31\u662f\u8d70\u5b8c\u524d\u9762\uff0c\u662f0\u7684\u7ee7\u7eed\u8d700\uff0c\u4e0d\u662f\u7684\u8d701\n\n\n\u6ce8\u610fLCT\u4e2dSplay\u533a\u95f4\u7ffb\u8f6c\u65f6\u4ea4\u6362\u5de6\u53f3\n\n\n\u6700\u540e\u6309\u9ad8\u4f4d\u8d2a\u5fc3\u8dd1\u4e00\u904d\n\n\n---\n\n```cpp\n# include <bits/stdc++.h>\n# define RG register\n# define IL inline\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ul;\nconst int _(1e5 + 10);\n\nIL ul Read(){\n    char c = '%'; ul x = 0, z = 1;\n    for(; c > '9' || c < '0'; c = getchar()) if(c == '-') z = -1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = x * 10 + c - '0';\n    return x * z;\n}\n\nint n, m, fa[_], ch[2][_], rev[_], S[_];\nstruct Value{  ul f0, f1;  } G, val[_], lr[_], rl[_];\n\nIL Value Merge(RG Value X, RG Value Y){\n    G.f0 = (~X.f0 & Y.f0) | (X.f0 & Y.f1);\n    G.f1 = (~X.f1 & Y.f0) | (X.f1 & Y.f1);\n    return G;\n}\n\nIL bool Son(RG int x){  return ch[1][fa[x]] == x;  }\n\nIL bool Isroot(RG int x){  return ch[0][fa[x]] != x && ch[1][fa[x]] != x;  }\n\nIL void Update(RG int x){\n    lr[x] = rl[x] = val[x];\n    if(ch[0][x]) lr[x] = Merge(lr[ch[0][x]], lr[x]), rl[x] = Merge(rl[x], rl[ch[0][x]]);\n    if(ch[1][x]) lr[x] = Merge(lr[x], lr[ch[1][x]]), rl[x] = Merge(rl[ch[1][x]], rl[x]);\n}\n\nIL void Reverse(RG int x){  swap(lr[x], rl[x]); swap(ch[0][x], ch[1][x]); rev[x] ^= 1;  }\n\nIL void Pushdown(RG int x){  if(!rev[x]) return; Reverse(ch[0][x]); Reverse(ch[1][x]); rev[x] = 0;  }\n\nIL void Rotate(RG int x){\n    RG int y = fa[x], z = fa[y], c = Son(x);\n    if(!Isroot(y)) ch[Son(y)][z] = x; fa[x] = z;\n    ch[c][y] = ch[!c][x]; fa[ch[c][y]] = y;\n    ch[!c][x] = y; fa[y] = x;\n    Update(y);\n}\n\nIL void Splay(RG int x){\n    S[++S[0]] = x;\n    for(RG int y = x; !Isroot(y); y = fa[y]) S[++S[0]] = fa[y];\n    while(S[0]) Pushdown(S[S[0]--]);\n    for(RG int y = fa[x]; !Isroot(x); Rotate(x), y = fa[x])\n        if(!Isroot(y)) Son(x) ^ Son(y) ? Rotate(x) : Rotate(y);\n    Update(x);\n}\n\nIL void Access(RG int x){  for(RG int y = 0; x; y = x, x = fa[x]) Splay(x), ch[1][x] = y, Update(x);  }\n\nIL void Makeroot(RG int x){  Access(x); Splay(x); Reverse(x);  }\n\nIL void Split(RG int x, RG int y){  Makeroot(x); Access(y); Splay(y);  }\n\nIL void Link(RG int x, RG int y){  Makeroot(x); fa[x] = y;  }\n\nIL ul Query(RG int x, RG int y, RG ul z){\n    RG ul ans = 0, t = 1; Split(x, y);\n    for(RG int k = 63; k >= 0; k--)\n        if(lr[y].f0 & (t << k)) ans += (t << k);\n        else if(lr[y].f1 & (t << k) && z >= (t << k)) z -= (t << k), ans += (t << k);\n    return ans;\n}\n\nint main(RG int argc, RG char *argv[]){\n    n = Read(); m = Read(); Read(); RG ul e = 0;\n    for(RG int i = 1; i <= n; i++){\n        RG int x = Read(); RG ul y = Read();\n        if(x == 1) val[i] = (Value){e, y};\n        if(x == 2) val[i] = (Value){y, ~e};\n        if(x == 3) val[i] = (Value){y, ~y};\n    }\n    for(RG int i = 1, x, y; i < n; i++) x = Read(), y = Read(), Link(x, y);\n    while(m--){\n        RG ul op = Read(), i = Read(), x = Read(), y = Read();\n        if(op == 1) printf(\"%llu\\n\", Query(i, x, y));\n        else{\n            if(x == 1) val[i] = (Value){e, y};\n            if(x == 2) val[i] = (Value){y, ~e};\n            if(x == 3) val[i] = (Value){y, ~y};\n            Splay(i);\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1515028493,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u7528\u6811\u94fe\u5256\u5206\u6216LCT\u505a(\u7136\u800c\u6211\u592a\u5f31\u4e86\u4e0d\u4f1aLCT)\n\n\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e8c\u8fdb\u5236\u5206\u79bb\uff0c\u5206\u90e8\u8ba1\u7b97\uff0c\u6309\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7\u7684\u8d2a\u5fc3\u601d\u8def\u6765\u5c31\u884c\u4e86\uff0c\u7136\u800c\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6O(nklog^2n)\uff0c\u518d\u770b\u65f6\u95f4\u5c311s\uff0c\u80af\u5b9a\u8d85\u65f6\n\n\u6811\u94fe\u5256\u5206\u80af\u5b9a\u662f\u65e0\u6cd5\u907f\u514d\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u628ak\u6d88\u53bb\n\n\u6211\u4eec\u5148\u5bf9\u4f4d\u8fd0\u7b97\u8fdb\u884c\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u67d0\u4e00\u4f4d\u8981&0\u6216|1\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u80af\u5b9a\u56fa\u5b9a\u4e0b\u6765\u4e86\uff0c\u800c\u5982\u679c\u662f&1\u6216|0\uff0c\u5219\u76f8\u5f53\u4e8e\u6ca1\u64cd\u4f5c\u8fc7\uff0c\u6240\u4ee5\u5bf9\u4e8e\u521d\u59cb\u503c\uff0c\u67d0\u4e00\u4f4d\u4e0a\u6ca1\u6709\u7ecf\u8fc7&0\u6216|1\u64cd\u4f5c\uff0c\u8fd9\u4e00\u4f4d\u624d\u53d7\u521d\u59cb\u503c\u5f71\u54cd\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u8fde\u4e32\u64cd\u4f5c\uff0c\u6211\u4eec\u628a\u5b83\u538b\u7f29\u6210\u7b49\u6548\u7684&\u4e0e|\u4e0a\u4e00\u4e2a\u6570\uff0c\u8bbe\u6211&x,\u5982\u679cx\u67d0\u4e00\u4f4d\u4e0a\u4e3a0\uff0c\u8868\u793a\u65e0\u8bba\u4ec0\u4e48\u6570\u7ecf\u8fc7\u8fd9\u4e00\u4e32\u64cd\u4f5c\u8fd9\u4e00\u4f4d\u90fd\u8981\u53d8\u62100\uff0c\u53cd\u4e4b\u5219\u662f\u4e0d\u786e\u5b9a\uff0c|\n\u7684\u6570\u67d0\u4e00\u4f4d\u4e3a1\uff0c \u8868\u793a\u65e0\u8bba\u4ec0\u4e48\u6570\u7ecf\u8fc7\u8fd9\u4e00\u4e32\u64cd\u4f5c\u8fd9\u4e00\u4f4d\u90fd\u8981\u53d8\u62101\uff0c\u53cd\u4e4b\u5219\u662f\u4e0d\u786e\u5b9a\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4f4d\u8fd0\u7b97\uff0c\u5feb\u901f\u6c42\u51fax~y\u4e0a\u7b49\u6548\u7684&\u4e0e|\u7136\u540e\u518d\u8003\u8651\u4e0d\u786e\u5b9a\u7684\u4f4d\u7f6e\u4e0a\u4e3a0\u8fd8\u662f1\uff0c\u65f6\u95f4O(nk+nlong^2n)\n\n\u538b\u7f29\u65f6\u7ebf\u6bb5\u6811\u7684\u8fc7\u7a0bpushup\u5e76\u4e0d\u597d\u5199\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86\u5de6\u5b50\u6811\u5e94\u4e3a&x1\uff0c|y1\uff0c\u53f3\u5b50\u6811\u4e3a&x2\uff0c|y2\uff0c\u53f3\u5b50\u6811\u4e0a\u7684\u5f02\u6216\u548c\u4e3an\n\n\u7531\u4e8e|1\u7684\u4f4d\u4e0a\u5982\u679c^1\u5c31\u4f1a\u8f6c\u5316\u4e3a&0,&0\u4e5f\u540c\u7406\uff0c\u6240\u4ee5&x1\uff0c|y1\u53ea\u7ecf\u8fc7\u5f02\u6216\u64cd\u4f5c\u540e\u4f1a\u53d8\u4e3a\n\nx1'=(x1|n)&(~(y1&n))\ny1'=(y1&(~n))|((~x1)&n)\n\n\u4e3a\u4ec0\u4e48\u5462\uff0c\u6211\u4eec\u4ee5\u67d0\u4e00\u4f4d\u4e3a\u4f8b(\u4ee5\u4e0b\u7b49\u53f7\u8868\u793a\u7b49\u6548\uff0c\u800c\u4e0d\u662f\u76f8\u7b49)\n\n```\n&0^0=&0\n&0^1=&1\n&1^0=&1\n&1^1=&1\n```\n\n\u5b83\u7b49\u6548\u4e8ex1|n\n\n```\n|0^0=&1\n|0^1=&1\n|1^0=&1\n|1^1=&0\n```\n\n\u5b83\u7b49\u6548\u4e8e~(y1|n)\n\n\u6216\u8fd0\u7b97\u4e5f\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff0c\u8fd9\u6837pushup\u5c31\u5199\u597d\u4e86\uff0c\u6700\u540e\u628a\u7b49\u6548\u8fd0\u7b97\u6446\u5728\u4e00\u5757\u65f6\u7edf\u8ba1\u7684\u539f\u7406\u4e5f\u662f\u8fd9\u6837\n\n\u8fd8\u6709\u5bf9\u4e8e\u94fe\u4e0a\u64cd\u4f5c\uff0c\u53ef\u80fd\u6709\u65f6\u8981\u6c42\u7f16\u53f7\u4ece\u5927\u5230\u5c0f\u7684\u7b49\u6548\u8fd0\u7b97\uff0c\u6240\u4ee5\u6b63\u53cd\u90fd\u8981\u5b58\u4e00\u4e0b(\u987a\u5e8f\u4e00\u5b9a\u8981\u8003\u8651\u597d\uff0c\u6211\u5728\u8fd9\u4e0a\u9762\u6302\u4e86n\u6b21)\n\n```cpp\n#include <iostream>\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <queue>\n#include <algorithm>\nusing namespace std;\ntypedef unsigned long long ull;\nconst int N=100005;\nint n,m,mk,u,v,ch[N],i,c,tot[2];\nint head[N],Next[N*2],adj[N*2],k,dfn[N],siz[N],fa[N],son[N],p[N],top[N],dep[N];\null treeand[2][N*5],treeor[2][N*5],treexor[N*5],ulmx,num[N],w;\null staand[2][N],staor[2][N],ansxor,ansand,ansor,ans,x,staxor[2][N],s[N];\nvoid Push(int u,int v)\n{\n    Next[++k]=head[u];\n    head[u]=k;\n    adj[k]=v;\n}\nvoid dfs(int i,int f)\n{\n    int j;\n    fa[i]=f;\n    siz[i]=1;\n    for(j=head[i];j!=0;j=Next[j])\n        if(adj[j]!=f)\n        {\n            dep[adj[j]]=dep[i]+1;\n            dfs(adj[j],i);\n            siz[i]+=siz[adj[j]];\n            if(siz[son[i]]<siz[adj[j]])\n                son[i]=adj[j];\n        }\n}\nvoid dfs2(int i,int t)\n{\n    int j;\n    top[i]=t;\n    dfn[i]=++k;\n    if(son[i]!=0)\n        dfs2(son[i],t);\n    for(j=head[i];j!=0;j=Next[j])\n        if(adj[j]!=fa[i]&&adj[j]!=son[i])\n            dfs2(adj[j],adj[j]);\n}\nvoid pushup(int i)\n{\n    treeand[0][i]=treeand[0][i*2+1]&(((treeand[0][i*2]|treexor[i*2+1])&(~(treeor[0][i*2]&treexor[i*2+1])))|treeor[0][i*2+1]);\n    treeor[0][i]=treeor[0][i*2+1]|(((treeor[0][i*2]&(~treexor[i*2+1]))|((~treeand[0][i*2])&treexor[i*2+1]))&treeand[0][i*2+1]);\n    treeand[1][i]=treeand[1][i*2]&(((treeand[1][i*2+1]|treexor[i*2])&(~(treeor[1][i*2+1]&treexor[i*2])))|treeor[1][i*2]);\n    treeor[1][i]=treeor[1][i*2]|(((treeor[1][i*2+1]&(~treexor[i*2]))|((~treeand[1][i*2+1])&treexor[i*2]))&treeand[1][i*2]);\n    treexor[i]=treexor[i*2]^treexor[i*2+1];\n}\nvoid Pushand(int i,int l,int r,int x,ull y)\n{\n    if(l==r)\n    {\n        treeand[0][i]=treeand[1][i]=y;\n        return;\n    }\n    int mid=(l+r)/2;\n    if(mid>=x)\n        Pushand(i*2,l,mid,x,y);\n    else\n        Pushand(i*2+1,mid+1,r,x,y);\n    pushup(i);\n}\nvoid Pushor(int i,int l,int r,int x,ull y)\n{\n    if(l==r)\n    {\n        treeor[0][i]=treeor[1][i]=y;\n        return;\n    }\n    int mid=(l+r)/2;\n    if(mid>=x)\n        Pushor(i*2,l,mid,x,y);\n    else\n        Pushor(i*2+1,mid+1,r,x,y);\n    pushup(i);\n}\nvoid Pushxor(int i,int l,int r,int x,ull y)\n{\n    if(l==r)\n    {\n        treexor[i]=y;\n        return;\n    }\n    int mid=(l+r)/2;\n    if(mid>=x)\n        Pushxor(i*2,l,mid,x,y);\n    else\n        Pushxor(i*2+1,mid+1,r,x,y);\n    pushup(i);\n}\nvoid Queryandor(int i,int l,int r,int ll,int rr,int f)\n{\n    if(l>=ll&&r<=rr)\n    {\n        staand[f][++tot[f]]=treeand[f][i];\n        staor[f][tot[f]]=treeor[f][i];\n        staxor[f][tot[f]]=treexor[i];\n        ansxor^=treexor[i];\n        return;\n    }\n    int mid=(l+r)/2;\n\tif(mid<rr)\n\t\tQueryandor(i*2+1,mid+1,r,ll,rr,f);\n\tif(mid>=ll)\n\t\tQueryandor(i*2,l,mid,ll,rr,f);\n}\nvoid Query(int u,int v)\n{\n    int f=1;\n    while(top[u]!=top[v])\n    {\n        if(dep[top[u]]<dep[top[v]])\n        {\n            u^=v^=u^=v;\n            f^=1;\n        }\n        Queryandor(1,1,n,dfn[top[u]],dfn[u],f);\n        u=top[u];\n        u=fa[u];\n    }\n    if(dep[u]<dep[v])\n    {\n        u^=v^=u^=v;\n        f^=1;\n    }\n    Queryandor(1,1,n,dfn[v],dfn[u],f);\n}\nint main(){\n    scanf(\"%d %d %d\",&n,&m,&mk);\n    ulmx--;\n    for(i=1;i<=n;i++)\n\t\tscanf(\"%d %llu\",&ch[i],&num[i]);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d %d\",&u,&v);\n        Push(u,v);\n        Push(v,u);\n    }\n    k=0;\n    dfs(1,0);\n    dfs2(1,1);\n    for(i=1;i<=n;i++)\n        Pushand(1,1,n,i,ulmx);\n    for(i=1;i<=n;i++)\n    {\n        if(ch[i]==1)\n            Pushand(1,1,n,dfn[i],num[i]);\n        if(ch[i]==2)\n            Pushor(1,1,n,dfn[i],num[i]);\n        if(ch[i]==3)\n            Pushxor(1,1,n,dfn[i],num[i]);\n    }\n    while(m--)\n    {\n        scanf(\"%d %d %d %llu\",&c,&u,&v,&w);\n        if(c==2)\n        {\n            if(ch[u]==1)\n                Pushand(1,1,n,dfn[u],ulmx);\n            if(ch[u]==2)\n                Pushor(1,1,n,dfn[u],0);\n            if(ch[u]==3)\n                Pushxor(1,1,n,dfn[u],0);\n            ch[u]=v;\n            if(ch[u]==1)\n                Pushand(1,1,n,dfn[u],w);\n            if(ch[u]==2)\n                Pushor(1,1,n,dfn[u],w);\n            if(ch[u]==3)\n                Pushxor(1,1,n,dfn[u],w);\n        }\n        else\n        {\n            tot[0]=tot[1]=0;\n            ansxor=0;\n            Query(u,v);\n            ansand=ulmx;\n            ansor=0;\n            s[tot[1]+tot[0]+1]=0;\n            for(i=1;i<=tot[0];i++)\n\t\t\t\ts[tot[1]+tot[0]-i+1]=s[tot[1]+tot[0]-i+2]^staxor[0][i];\n            for(i=tot[1];i>=1;i--)\n\t\t\t\ts[i]=s[i+1]^staxor[1][i];\n            for(i=1;i<=tot[1];i++)\n            {\n                ansand|=(staor[1][i]&(~s[i+1]))|((~staand[1][i])&s[i+1]);\n                ansor&=(staand[1][i]|s[i+1])&(~(staor[1][i]&s[i+1]));\n                ansor|=(staor[1][i]&(~s[i+1]))|((~staand[1][i])&s[i+1]);\n                ansand&=(staand[1][i]|s[i+1])&(~(staor[1][i]&s[i+1]));\n            }\n            for(i=tot[0];i>=1;i--)\n            {\n                ansand|=(staor[0][i]&(~s[tot[0]+tot[1]-i+2]))|((~staand[0][i])&s[tot[0]+tot[1]-i+2]);\n                ansor&=(staand[0][i]|s[tot[0]+tot[1]-i+2])&(~(staor[0][i]&s[tot[0]+tot[1]-i+2]));\n                ansor|=(staor[0][i]&(~s[tot[0]+tot[1]-i+2]))|((~staand[0][i])&s[tot[0]+tot[1]-i+2]);\n                ansand&=(staand[0][i]|s[tot[0]+tot[1]-i+2])&(~(staor[0][i]&s[tot[0]+tot[1]-i+2]));\n            }\n            x=0;\n            ans=0;\n            for(i=mk-1;i>=0;i--)\n                if(((ansand>>i)&1)==0||((ansor>>i)&1)==1)\n                    ans|=(((ansand>>i)&1)&((ansor>>i)&1))<<i;\n                else\n                    if(((ansxor>>i)&1)==1)\n                        ans|=1ull<<i;\n                    else\n                        if((x|(1ull<<i))<=w)\n                        {\n                            x|=1ull<<i;\n                            ans|=1ull<<i;\n                        }\n            printf(\"%llu\\n\",ans);\n        }\n    }\n}\n\n```\nPS:\u5176\u4ed6dalao\u7684\u4ee3\u7801\u600e\u4e48\u8fd9\u4e48\u77ed\uff0c\u597d\u50cf\u5c31\u6211\u5199\u5f97\u6700\u957f\u4e86...",
        "postTime": 1539950378,
        "uid": 26800,
        "name": "Sshenyyyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "\u9898\u9762\u63cf\u8ff0[https://www.luogu.org/problemnew/show/3613](https://www.luogu.org/problemnew/show/3613)\n\n\u539f\u9898NOI2014\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7[https://www.luogu.org/problemnew/show/2114](https://www.luogu.org/problemnew/show/2114)\u505a\u5b8c\u539f\u9898\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u4e86\n\n\n\u9898\u610f\uff1a\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u64cd\u4f5c\u7b26(\u4e0e\u3001\u6216\u3001\u5f02\u6216)\u548c\u4e00\u4e2a\u6570\u5b57\uff0c\u8d70\u8fc7\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5f53\u524d\u503c\u5c31\u4f1a\u548c\u8fd9\u4e2a\u6570\u5b57\u505a\u76f8\u5e94\u8fd0\u7b97\u3002\u73b0\u5728\u7ed9\u5b9ax,y,z\uff0c\u8981\u6c42\u5728[0,z]\u4e2d\u9009\u533a\u4e00\u4e2a\u521d\u503c\u4f7f\u4ecex\u70b9\u8d70\u5230y\u70b9\u7684\u6700\u7ec8\u7ed3\u679c\u6700\u5927\u3002\u652f\u6301\u52a8\u6001\u4fee\u6539\u70b9\u4e0a\u7684\u64cd\u4f5c\u7b26\u4e0e\u6570\u5b57\u3002\n\n\n~~\u6211\u592a\u83dc\u4e86\u5b8c\u5168\u4e0d\u77e5\u9053\u6811\u94fe\u5256\u5206\u53bb\u7ef4\u62a4\u4ec0\u4e48\u53ea\u77e5\u9053LCT\u4e00\u987f\u4e71\u641e\u3002\u3002\u3002~~\n\n\u54b3\u54b3\uff0c\u9996\u5148\u539f\u9898[\u8d77\u5e8a\u56f0\u96be\u7efc\u5408\u75c7]\u5f97\u8981\u5207\u6389\uff0c\u7136\u540e\u4f60\u5c31\u77e5\u9053\u8fd9\u9898\u7684\u5927\u81f4\u505a\u6cd5\u4e86\u4e86\uff1a\u8bb0\u5f55\u521d\u59cb\u4ee5\u51680\u548c\u51681\u8d70\u5b8c\u540e\u5f97\u5230\u7684\u7b54\u6848\uff0c\u7136\u540e\u6309\u4f4d\u8d2a\u5fc3\u5373\u53ef\uff08\u9009\u9ad8\u4f4d\u4e00\u5b9a\u6bd4\u9009\u4f4e\u4f4d\u4f18\uff0c\u5c31\u7b97\u4f4e\u4f4d\u5168\u90fd\u53ef\u4ee5\u9009\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e8c\u8fdb\u5236\u5440\uff09\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u4e0b\u6587\u4e2d\u6240\u6709\u7684\u201c\u7b54\u6848\u201d\u6307\u4ee5\u51680\u51681\u8d70\u5b8c\u540e\u5f97\u5230\u7684\u4e24\u4e2a\u503c\uff0c\u4ee50\u4e3a\u4e0b\u6807\u8868\u793a\u662f\u4ee5\u51680\u5f00\u59cb\u7684\uff0c1\u4e3a\u4e0b\u6807\u8868\u793a\u662f\u4ee5\u51681\u5f00\u59cb\u7684\u3002\n\n\n####LCT\u7ef4\u62a4\u5565\uff1f\n\n\nLCT\u7ef4\u62a4\u7684\u4e1c\u897f\u662f\uff1a\u5728\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684splay\u4e2d\uff08\u6211\u6ca1\u6709\u8bf4\u8fd9\u4e2a\u70b9\u5c31\u662fsplay\u7684\u6839\uff0c\u662f\u6307\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff09\uff0c\u4ece\u524d\u5f80\u540e\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u4ee5\u53ca\u4ece\u540e\u5f80\u524d\u8d70\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u3002\n\n\u6bd4\u5982\u8bf4\uff0c\u6709\u4e00\u4e2a\u53eb\u505a1\u53f7\u8282\u70b9\u7684\u70b9\uff0c\u5728\u4ee5\u5979\u4e3a\u6839\u7684splay\u4e2d\u8fd8\u6709\u70b92,3\uff0c\u5176\u4e2d2\u662f\u5979\u7684\u5de6\u513f\u5b50\uff0c3\u662f\u5979\u7684\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u57281\u53f7\u70b9\u4e0a\u7ef4\u62a4\u7684\u4e1c\u897f\u5c31\u5e94\u8be5\u662f\uff1a\u4f9d\u6b21\u7ecf\u8fc72-1-3\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u4ee5\u53ca\u4f9d\u6b21\u7ecf\u8fc73-1-2\u7684\u6700\u7ec8\u7ed3\u679c\u3002\n\n\n####\u90a3\u4e48\u4e24\u4e2a\u7ed3\u679c\u600e\u4e48\u5408\u5e76\u5462\uff1f\n\n\n\u5047\u5982\u8bf4\u6211\u4eec\u6709\u4e24\u6bb5\u5e26\u5408\u5e76\u7684\u5df2\u7ecf\u8ba1\u7b97\u51fa\u7b54\u6848\u7684\u533a\u95f4\uff0c\u5206\u522b\u5bf9\u5e94f0,f1\u548cg0,g1\u3002\u6211\u4eec\u8bbe\u5408\u5e76\u540e\u7684\u7b54\u6848\u662fh0,h1\uff0c\u90a3\u4e48\u6709\u5982\u4e0b\u5f0f\u5b50\uff1a\n\nh0=(~f0&g0)+(f0&g1)\n\nh1=(~f1&g0)+(f1&g1)\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u8bf7\u81ea\u5df1YY~\n\n\n####\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n\u4ee5\u5f80\u7684LCT\u7ef4\u62a4\u7684\u90fd\u662f\u5b50\u6811\u4fe1\u606f\uff08\u5e9f\u8bdd\uff0c\u8fd9\u9898\u4e0d\u4e5f\u662f\uff09\uff0c\u4f46\u540c\u65f6\u4e5f\u662f\u65e0\u5e8f\u7684\u3002\u8fd9\u9898\u7ef4\u62a4\u7684\u5b50\u6811\u4fe1\u606f\u548c\u5de6\u53f3\u5b50\u6811\u7684\u5faa\u5e8f\u662f\u6709\u5173\u7cfb\u7684\uff0c\u6240\u4ee5\u539f\u6765\u7684\u7ffb\u8f6c\u64cd\u4f5c\u5c31\u9700\u8981\u7565\u4e3a\u4fee\u6539\u3002\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\u3002\n\n\n####code\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define ll unsigned long long\nconst int N = 100005;\nstruct data\n{\n    ll f0,f1;\n    data operator + (const data &b) const\n        {\n            data ans;\n            ans.f0=(~f0&b.f0)|(f0&b.f1);\n            ans.f1=(~f1&b.f0)|(f1&b.f1);\n            return ans;\n        }\n}f[N],lo[N],ro[N];\nint n,m,fa[N],ls[N],rs[N],rev[N],Stack[N],top;\nll gi()\n{\n    ll x=0,w=1;char ch=getchar();\n    while ((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if (ch=='-') w=0,ch=getchar();\n    while (ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return w?x:-x;\n}\nbool isroot(int x){return ls[fa[x]]!=x&&rs[fa[x]]!=x;}\nvoid reverse(int x){swap(ls[x],rs[x]);swap(lo[x],ro[x]);rev[x]^=1;}\nvoid pushdown(int x){if (rev[x]) reverse(ls[x]),reverse(rs[x]),rev[x]=0;}\nvoid pushup(int x)\n{\n    lo[x]=ro[x]=f[x];\n    if (ls[x]) lo[x]=lo[ls[x]]+lo[x],ro[x]=ro[x]+ro[ls[x]];\n    if (rs[x]) lo[x]=lo[x]+lo[rs[x]],ro[x]=ro[rs[x]]+ro[x];\n}\nvoid R_rotate(int x)\n{\n    int y=fa[x],z=fa[y];\n    ls[y]=rs[x];\n    if (rs[x]) fa[rs[x]]=y;\n    fa[x]=z;\n    if (!isroot(y)) if (y==ls[z]) ls[z]=x;else rs[z]=x;\n    rs[x]=y;fa[y]=x;\n    pushup(y);\n}\nvoid L_rotate(int x)\n{\n    int y=fa[x],z=fa[y];\n    rs[y]=ls[x];\n    if (ls[x]) fa[ls[x]]=y;\n    fa[x]=z;\n    if (!isroot(y)) if (y==ls[z]) ls[z]=x;else rs[z]=x;\n    ls[x]=y;fa[y]=x;\n    pushup(y);\n}\nvoid splay(int x)\n{\n    Stack[top=1]=x;\n    for (int i=x;!isroot(i);i=fa[i])\n        Stack[++top]=fa[i];\n    while (top) pushdown(Stack[top--]);\n    while (!isroot(x))\n    {\n        int y=fa[x],z=fa[y];\n        if (isroot(y))\n            if (x==ls[y]) R_rotate(x);\n            else L_rotate(x);\n        else\n            if (y==ls[z])\n                if (x==ls[y]) R_rotate(y),R_rotate(x);\n                else L_rotate(x),R_rotate(x);\n            else\n                if (x==ls[y]) R_rotate(x),L_rotate(x);\n                else L_rotate(y),L_rotate(x);\n    }\n    pushup(x);\n}\nvoid access(int x){for (int y=0;x;y=x,x=fa[x]) splay(x),rs[x]=y,pushup(x);}\nvoid makeroot(int x){access(x);splay(x);reverse(x);}\nvoid split(int x,int y){makeroot(x);access(y);splay(y);}\nvoid link(int x,int y){makeroot(x);fa[x]=y;}\nint main()\n{\n    n=gi();m=gi();gi();\n    for (int i=1;i<=n;i++)\n    {\n        int x=gi();ll y=gi();\n        if (x==1) f[i]=(data){0,y};\n        if (x==2) f[i]=(data){y,~0};\n        if (x==3) f[i]=(data){y,~y};\n    }\n    for (int i=1;i<n;i++)\n    {\n        int x=gi(),y=gi();\n        link(x,y);\n    }\n    while (m--)\n    {\n        int opt=gi(),x=gi(),y=gi();ll z=gi();\n        if (opt==1)\n        {\n            split(x,y);ll e=1,ans=0;\n            for (int k=63;k>=0;k--)\n                if (lo[y].f0&(e<<k))\n                    ans+=e<<k;\n                else if (lo[y].f1&(e<<k)&&z>=(e<<k))\n                    z-=e<<k,ans+=e<<k;\n            printf(\"%llu\\n\",ans);\n        }\n        if (opt==2)\n        {\n            makeroot(x);\n            if (y==1) f[x]=(data){0,z};\n            if (y==2) f[x]=(data){z,~0};\n            if (y==3) f[x]=(data){z,~z};\n            pushup(x);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1514365135,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "Luogu3613 \u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81"
    },
    {
        "content": "\u6ca1\u6709\u5b50\u6811\u548c\uff0c\u4e8b\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u5f88\u597d\u7684\u7ec3\u4e60\u9898\u3002\n\n\u9996\u5148\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u51fd\u6570 $f_{a,o,x}(n)=((n\\ \\text{and}\\ a)\\ \\text{or}\\ o)\\ \\text{xor}\\ x$\u3002\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u652f\u6301\u590d\u5408\u7684\u3002\u6240\u4ee5\u5176\u5177\u6709\u7ed3\u5408\u5f8b\uff0c\u4e0a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n$O(n\\log^2 n)$ \u7684\u505a\u6cd5\u6bd4\u8f83 naive\uff0c\u8fd9\u662f\u56e0\u4e3a\u6811\u5256\u4e0e\u7ebf\u6bb5\u6811\u6ca1\u6709\u4ee5\u6b63\u786e\u7684\u59ff\u52bf\u7ed3\u5408\u8d77\u6765\u3002\n\n\u4e3a\u4e86\u644a\u5e73\u7ebf\u6bb5\u6811\u7684 $\\log$\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u8f7b\u5b50\u6811\u5927\u5c0f $sz(u)-sz(\\text{hson}(u))$\u3002\u5bf9\u6bcf\u6761\u91cd\u94fe\u5efa\u7acb\u7ebf\u6bb5\u6811\u3002\u7ebf\u6bb5\u6811\u5904\u7406\u533a\u95f4 $[l,r]$ \u65f6\uff0c\u9009\u53d6 $\\text{mid}$ \u4e3a $[l,r]$ \u4e2d\u8f7b\u5b50\u6811\u5927\u5c0f\u524d\u7f00\u548c\u7684\u5e26\u6743\u4e2d\u70b9\u3002\n\n\u8fd9\u6837\uff0c\u6811\u5256\u6bcf\u8df3\u4e00\u6b21\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6df1\u5ea6\u4e5f\u76f8\u5e94\u51cf\u5c0f\u3002\u6bcf\u6b21\u8df3\u8f7b\u8fb9\uff0c\u5f53\u6b21\u67e5\u8be2\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6df1\u5ea6\u4e00\u5b9a\u5df2\u7ecf\u8df3\u5230\u4e86 $O(1)$\u3002\u5176\u5b9e\uff0c\u7b49\u4ef7\u4e8e\u628a\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u4e8c\u53c9\u6811\u6362\u6210 WBLT. \u56e0\u6b64\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\u4f18\u52bf\u662f Leafy \u4e14\u6bd4\u8f83\u597d\u5199\u3002\n\n\u4ee3\u7801\uff08\u4e11\u89c1\u8c05\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ms(x, v) memset(x, v, sizeof(x))\n#define il __attribute__((always_inline)) static\n#define U(i,l,r) for(int i(l),END##i(r);i<=END##i;++i)\n#define D(i,r,l) for(int i(r),END##i(l);i>=END##i;--i)\nusing namespace std;\n\ntypedef unsigned long long ll;\ntemplate <class T> using BS = basic_string<T>;\n\ntemplate <class T> void rd(T& s) {\n\tint c = getchar(); T f = 1; s = 0;\n\twhile (!isdigit(c)) { if (c == '-') f = -1; c = getchar(); }\n\twhile (isdigit(c)) { s = s * 10 + (c ^ 48); c = getchar(); }\n\ts *= f;\n}\ntemplate <class T, class... Y> void rd(T& x, Y&... y) { rd(x), rd(y...); }\n#define meow(...) fprintf(stderr, __VA_ARGS__)\n\nconst int N = 100005;\nconst ll INF = 0xFFFFFFFFFFFFFFFF;\n\nint n, Q, K;\n\nBS<int> g[N];\nint dep[N], fa[N], siz[N], hson[N];\nvoid df1(int u, int f) {\n\tdep[u] = dep[f] + 1; fa[u] = f; siz[u] = 1;\n\tfor (int v : g[u]) if (v != f) {\n\t\tdf1(v, u);\n\t\tsiz[u] += siz[v];\n\t\tif (siz[v] > siz[hson[u]])\n\t\t\thson[u] = v;\n\t}\n}\nint top[N], lz[N], len[N], dfn[N];\nvoid df2(int u, int f, int t) {\n\tstatic int pt; dfn[u] = ++pt; top[u] = t; len[u] = 1;\n\tif (hson[u]) df2(hson[u], u, t), len[u] = len[hson[u]] + 1;\n\tlz[dfn[u]] = siz[u] - siz[hson[u]];\n\tfor (int v : g[u]) if (v != f && v != hson[u])\n\t\tdf2(v, u, v);\n}\n\nstruct T {\n\tll a, o, x;\n\tT() : a(INF), o(0), x(0) {}\n\tT(int op, ll v) : a(INF), o(0), x(0) {\n\t\tif (op == 1) a = v;\n\t\telse if (op == 2) o = v;\n\t\telse x = v;\n\t}\n} in[N];\nT operator + (T l, T r) {\n\tl.a &= r.a; l.o &= r.a; l.x &= r.a;\n\tl.o |= r.o; l.x &= ~r.o;\n\tl.x ^= r.x;\n\treturn l;\n}\n\nstruct ST {\n\tstruct Node {\n\t\tint ls, rs, mid;\n\t\tT up, dn;\n\t}; vector<Node> tr;\n\tint L, R;\n\t\n\tint build(int l, int r) {\n\t\tassert(l <= r);\n\t\tint p = tr.size(), ls, rs, mid; T up, dn; tr.push_back(Node());\n\t\tif (l == r) { tr[p].up = tr[p].dn = in[l]; return p; }\n\t\t\n\t\tint w = 0, h = 0; U (i, l, r) w += lz[i];\n\t\tfor (int i = l; h += lz[i], i <= r; ++i)\n\t\t\tif (h * 2 >= w) {\n\t\t\t\tmid = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (mid == r) --mid;\n\t\tassert(mid >= l && mid < r);\n\t\tls = build(l, mid); rs = build(mid + 1, r);\n\t\t\n\t\tup = tr[rs].up + tr[ls].up;\n\t\tdn = tr[ls].dn + tr[rs].dn;\n\t\ttr[p] = {ls, rs, mid, up, dn};\n\t\treturn p;\n\t}\n\tvoid modify(int x, T &v, int p, int l, int r) {\n\t\tauto &[ls, rs, mid, up, dn] = tr[p];\n\t\tif (l == r) { up = dn = v; return; }\n\t\t\n\t\tif (x <= mid) modify(x, v, ls, l, mid);\n\t\telse modify(x, v, rs, mid + 1, r);\n\t\t\n\t\tup = tr[rs].up + tr[ls].up;\n\t\tdn = tr[ls].dn + tr[rs].dn;\n\t} void modify(int x, T &v) { modify(x, v, 0, L, R); }\n\t\n\tT v;\n\tvoid qU(int b, int e, int p, int l, int r) {\n\t\tauto &[ls, rs, mid, up, dn] = tr[p];\n\t\tif (b <= l && e >= r) { v = v + up; return; }\n\t\t\n\t\tif (e > mid) qU(b, e, rs, mid + 1, r);\n\t\tif (b <= mid) qU(b, e, ls, l, mid);\n\t} T qU(int b, int e) { v = T(); qU(b, e, 0, L, R); return v; }\n\t\n\tvoid qD(int b, int e, int p, int l, int r) {\n\t\tauto &[ls, rs, mid, up, dn] = tr[p];\n\t\tif (b <= l && e >= r) { v = v + dn; return; }\n\t\t\n\t\tif (b <= mid) qD(b, e, ls, l, mid);\n\t\tif (e > mid) qD(b, e, rs, mid + 1, r);\n\t} T qD(int b, int e) { v = T(); qD(b, e, 0, L, R); return v; }\n} tr[N];\n\nT query(int u, int v) {\n\tT a, b, r;\n\twhile (top[u] != top[v]) {\n\t\tif (dep[top[u]] > dep[top[v]]) {\n\t\t\ta = a + tr[top[u]].qU(dfn[top[u]], dfn[u]);\n\t\t\tu = fa[top[u]];\n\t\t} else {\n\t\t\tb = tr[top[v]].qD(dfn[top[v]], dfn[v]) + b;\n\t\t\tv = fa[top[v]];\n\t\t}\n\t}\n\tif (dep[u] < dep[v])\n\t\tr = tr[top[u]].qD(dfn[u], dfn[v]);\n\telse\n\t\tr = tr[top[u]].qU(dfn[v], dfn[u]);\n\treturn a + r + b;\n}\nll greedy(T &t, ll m) {\n\tll v = 0, w = 0;\n\tD (i, K - 1, 0) {\n#define B(s) (((s) >> (i)) & 1)\n\t\tll d = (B(t.a) | B(t.o)) ^ B(t.x),\n\t\t\te = B(t.o) ^ B(t.x);\n\t\tif (e) {\n\t\t\tw |= 1ull << i;\n\t\t} else if (d && (v | (1ull << i)) <= m) {\n\t\t\tw |= 1ull << i; v |= 1ull << i;\n\t\t}\n\t}\n\treturn w;\n}\nint main() {\n\trd(n, Q, K);\n\tint io[N]; ll iv[N]; U (i, 1, n) rd(io[i], iv[i]);\n\tU (i, 2, n) { int u, v; rd(u, v); g[u] += v; g[v] += u; }\n\tdf1(1, 1);\n\tdf2(1, 1, 1);\n\tU (i, 1, n) in[dfn[i]] = T(io[i], iv[i]);\n\t\n\tU (i, 1, n) if (i == top[i]) {\n\t\ttr[i].L = dfn[i], tr[i].R = dfn[i] + len[i] - 1;\n\t\ttr[i].tr.reserve((tr[i].R - tr[i].L) * 2 + 5);\n\t\ttr[i].build(tr[i].L, tr[i].R);\n\t}\n\t\n\twhile (Q--) {\n\t\tll op, x, y, z; rd(op, x, y, z);\n\t\tif (op == 1) {\n\t\t\tT t = query(x, y);\n\t\t\tll ans = greedy(t, z);\n\t\t\tprintf(\"%llu\\n\", ans);\n\t\t} else {\n\t\t\tT v(y, z);\n\t\t\ttr[top[x]].modify(dfn[x], v);\n\t\t}\n\t}\n}\n```\n\n~~\u5728\u672c\u9898\u4e2d\u7531\u4e8e[\u5e38\u6570\u8f83\u5927](https://www.luogu.com.cn/record/103851897)\u8dd1\u4e0d\u8fc7[\u6811\u5256](https://www.luogu.com.cn/record/103850937)\u3002\u5e76\u4e14\u56e0\u4e3a\u8fc7\u5927\u7684\u5e38\u6570\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u80fd\u901a\u8fc7 DDP \u52a0\u5f3a\u7248\u3002~~",
        "postTime": 1678087968,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "\u5168\u5c40\u5e73\u8861 WBLT"
    },
    {
        "content": "# P5354 [Ynoi2017]\u7531\u4e43\u7684OJ\n\n## Preface\n\n\u81ea\u5df1\u7684\u7531\u4e43\u9898\u4e00\u8840\uff0c\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u7ed3\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u6743\u503c $a_i$ \u548c\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u7b26 $\\mathrm{op}_i$\u3002\n\n\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u5305\u542b\u4ee5\u4e0b\u4e24\u79cd\uff1a\n\n- \u7ed9\u5b9a $x$\uff0c\u4fee\u6539 $a_x$ \u4e0e $\\mathrm{op}_x$\uff1b\n- \u7ed9\u5b9a $x,y,z$\uff0c\u6c42 $v\\in [0..z]$ \u4f7f\u5f97 $v$ \u6cbf\u70b9 $x$ \u5230\u70b9 $y$ \u7684\u8def\u5f84\u79fb\u52a8\uff0c\u79fb\u52a8\u5230\u70b9 $i$ \u5c31\u4f1a\u8fdb\u884c\u64cd\u4f5c $v \\ \\mathrm{op}_i \\ a_i \\to v$\uff0c\u5728\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u4e4b\u540e $v$ \u6700\u5927\uff0c\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\n$n,m \\le 10^5,\\mathrm{op} \\in \\{\\mathrm{and,or,xor}\\}$\uff0c\u4efb\u610f\u65f6\u523b $a_i,z < 2^k$\uff0c$k \\le 64$\u3002\n\n## Sol\n\n\u601d\u8def\u4e0d\u662f\u90a3\u4e48\u597d\u60f3\u7684\u6811\u5256+\u7ebf\u6bb5\u6811\u3002\n\n\u76f4\u63a5\u8003\u8651\u7528\u6811\u5256\u8f6c\u6362\u4e3a\u533a\u95f4\u95ee\u9898\u3002\n\n\u7531\u4e8e\u672c\u9898\u4e2d\u7684\u8fd0\u7b97\u90fd\u662f\u4f4d\u8fd0\u7b97\uff0c\u56e0\u6b64\u6bcf\u4e00\u4f4d\u662f\u72ec\u7acb\u7684\uff0c\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u67d0\u4e2a\u533a\u95f4\u5185\u6bcf\u4e00\u4f4d\u5728 $v$ \u7684\u5bf9\u5e94\u4f4d\u53d6 $0/1$ \u65f6\u8fd9\u4e00\u4f4d\u7684\u6700\u7ec8\u8fd0\u7b97\u7ed3\u679c\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u533a\u95f4\u4e3a $(1,\\mathrm{and}),(3,\\mathrm {xor}),(2,\\mathrm{or})$\uff0c\u6570\u503c\u8f6c\u5199\u4e3a\u4e8c\u8fdb\u5236\u540e\u4e3a $01,11,10$\uff0c\u90a3\u4e48 $v$ \u4ece\u5de6\u5f80\u53f3\u4f4e\u5230\u9ad8\u7b2c $i$ \u4f4d\u7684\u53d6\u503c\u4e3a $j$ \u65f6\u7684\u8fd0\u7b97\u7ed3\u679c\u5982\u4e0b\uff1a\n\n|       | $j=0$ | $j=1$ |\n| ----- | ----- | ----- |\n| $i=1$ | $1$   | $0$   |\n| $i=2$ | $1$   | $1$   |\n\n\u8fd9\u4e2a\u4fe1\u606f\u662f\u53ef\u4ee5 $O(k)$ \u5408\u5e76\u7684\uff0c\u53ea\u8981\u628a\u628a\u5de6\u8fb9\u7684\u503c\u4ee3\u5165\u5230\u53f3\u8fb9\u8fdb\u884c\u6c42\u503c\u5373\u53ef\u3002\n\n\u7531\u4e8e\u4ece\u5de6\u5f80\u53f3\u7684\u7b54\u6848\u548c\u4ece\u53f3\u5f80\u5de6\u7684\u7b54\u6848\u4e0d\u4e00\u5b9a\u4e00\u6837\uff0c\u5e76\u4e14\u6811\u5256\u4e2d\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u533a\u95f4\u662f\u5728\u94fe\u4e0a\u4ece\u4e0a\u5230\u4e0b\u7f16\u53f7\u7684\uff0c\u6545\u5728\u94fe\u5408\u5e76\u7684\u65f6\u5019\u9700\u8981\u4e24\u4e2a\u65b9\u5411\u7684\u4fe1\u606f\uff08$u$ \u5230 $\\mathrm{LCA}(u,v)$ \u4e3a\u5411\u4e0a\uff0c$\\mathrm{LCA(u,v)}$ \u5230 $v$ \u4e3a\u5411\u4e0b\uff09\uff0c\u56e0\u6b64\u4e24\u4e2a\u65b9\u5411\u7684\u4fe1\u606f\u90fd\u8981\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u56de\u5230\u539f\u95ee\u9898\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u6211\u4eec\u91c7\u7528\u8d2a\u5fc3\u7b56\u7565\uff0c\u4ece $z$ \u8303\u56f4\u5185\u7684\u6700\u9ad8\u4f4d\u5f00\u59cb\u8d2a\u3002\u8003\u8651\u5230 $2^x > \\sum_{i=1}^{x-1}2^i$\uff0c\u56e0\u6b64\u5982\u679c\u5728\u7b2c $x$ \u4f4d\u4e0a\u5b58\u5728\u4e00\u79cd\u53d6\u503c\u4f7f\u5f97\u5728\u8fdb\u884c\u4e86\u64cd\u4f5c\u4e4b\u540e\u7ed3\u679c\u7684\u8fd9\u4e00\u4f4d\u4e0a\u80fd\u53d6\u5230 $1$ \u5e76\u4e14\u7b26\u5408\u503c\u57df\u8981\u6c42\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e00\u5b9a\u80fd\u8981\u8fd9\u4e00\u4f4d\u8d2a\u4e0b\u6765\uff0c\u5728\u7b54\u6848\u4e0a\u52a0\u4e0a $2^x$\u3002\n\n~~\u5230\u6b64\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(mk\\log^2 n)$\u3002~~\n\n\u7136\u540e\u60a8\u770b\u5230\u8fd9\u9053\u9898250ms\u7684\u65f6\u9650\u548c $k=64$ \u9677\u5165\u4e86\u6c89\u601d\u3002\n\n\u8fd9\u590d\u6742\u5ea6\u663e\u7136\u8dd1\u4e0d\u8fc7\u597d\u5427\u3002\u60f3\u529e\u6cd5\u4f18\u5316\u3002\n\n\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff1a\u6211\u4eec\u5145\u5206\u5229\u7528\u4f4d\u8fd0\u7b97\u6027\u8d28\uff0c\u628a\u4e0a\u8ff0\u7684\u4fe1\u606f\u538b\u8fdb `unsigned long long`\uff0c\u5c31\u628a $k$ \u6210\u529f\u4f18\u5316\u6389\u4e86\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6 $O(m \\log^2 n)$\u3002\n\n\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n## Tips\n\n- \u94fe\u5408\u5e76\u7684\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n## Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nconst int M=1e5+5;\ntypedef unsigned long long ull;\ninline int read(){int x(0),op(0);char ch=getchar();while(ch<'0'||ch>'9')op|=(ch==45),ch=getchar();while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();return op?-x:x;}\ninline int ssread(){int x;scanf(\"%d\",&x);return x;}\ninline ull uread(){ull x;scanf(\"%llu\",&x);return x;}\n#ifndef ONLINE_JUDGE\n#define read ssread\n#endif\nint n,m,K;\nstruct edge{\n\tint v,nxt;\n}e[M<<1];\nint etot,h[M];\nint fa[M],dep[M],top[M],dfn[M],siz[M],son[M],rev[M],DFN;\null a[M];\nint OP[M];\nvoid dfs1(int u,int f){//\u6811\u5256\u7b2c\u4e00\u6b21dfs\n\tfa[u]=f;dep[u]=dep[f]+1;siz[u]=1;\n\tfor(int i=h[u],v;v=e[i].v,i;i=e[i].nxt)if(v!=f){\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>siz[son[u]])son[u]=v;\n\t}\n}\nvoid dfs2(int u,int tp){//\u6811\u5256\u7b2c\u4e8c\u6b21dfs\n\tdfn[u]=++DFN;rev[DFN]=u;top[u]=tp;\n\tif(!son[u])return;\n\tdfs2(son[u],tp);\n\tfor(int i=h[u],v;v=e[i].v,i;i=e[i].nxt)if(v!=son[u]&&v!=fa[u])dfs2(v,v);\n}\nstruct node{//\u7528\u4e8e\u8bb0\u5f55\u533a\u95f4\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\n\tull lef0,lef1,rig0,rig1;\n\t/*\n\tlef0\uff1a\u4ece\u5de6\u5f00\u59cb\u8d70\uff0c\u53d60\u5f97\u5230\u7684\u503c\n\tlef1\uff1a\u4ece\u5de6\u5f00\u59cb\u8d70\uff0c\u53d61\u5f97\u5230\u7684\u503c\n\trig0\uff1a\u4ece\u53f3\u5f00\u59cb\u8d70\uff0c\u53d60\u5f97\u5230\u7684\u503c\n\trig1\uff1a\u4ece\u53f3\u5f00\u59cb\u8d70\uff0c\u53d61\u5f97\u5230\u7684\u503c\n\t*/\n\tnode(ull x=0,ull y=-1,ull z=0,ull w=-1){lef0=x,lef1=y,rig0=z,rig1=w;}\n};\nnode merge(node x,node y){\n\treturn (node){\n\t\t//\u8fd9\u91cc\u7684\u903b\u8f91\u662f\uff1a\u679a\u4e3e\u9760\u524d\u533a\u95f4\u7684\u503c\uff0c\u4ee5\u6b64\u8ba1\u7b97\u9760\u540e\u533a\u95f4\u7684\u503c\n\t\t(~x.lef0&y.lef0)|(x.lef0&y.lef1),\n\t\t(x.lef1&y.lef1)|(~x.lef1&y.lef0),\n\t\t(~y.rig0&x.rig0)|(y.rig0&x.rig1),\n\t\t(y.rig1&x.rig1)|(~y.rig1&x.rig0)\n\t};\n}\nnamespace segtree{//\u7ebf\u6bb5\u6811\n\t#define ls (p<<1)\n\t#define rs ((p<<1)|1)\n\t#define mid ((s+t)>>1)\n\tnode T[M<<2];\n\tvoid pushup(int p){\n\t\tT[p]=merge(T[ls],T[rs]);\n\t}\n\tvoid setp(int p,ull x,int op){//\u8bbe\u7f6e\u67d0\u4e2a\u70b9\u7684\u72b6\u6001\n\t\tif(op==1)T[p].lef0=T[p].rig0=0,T[p].lef1=T[p].rig1=x;\n\t\telse if(op==2)T[p].lef0=T[p].rig0=x,T[p].lef1=T[p].rig1=-1;\n\t\telse T[p].lef0=T[p].rig0=x,T[p].lef1=T[p].rig1=~x;\n\t}\n\tvoid build(int p=1,int s=1,int t=n){\n\t\tif(s==t){\n\t\t\tsetp(p,a[rev[s]],OP[rev[s]]);\n\t\t\treturn;\n\t\t}\n\t\tbuild(ls,s,mid);build(rs,mid+1,t);\n\t\tpushup(p);\n\t}\n\tvoid modify(int pos,ull x,int op,int p=1,int s=1,int t=n){\n\t\tif(s==t){\n\t\t\tsetp(p,x,op);\n\t\t\treturn;\n\t\t}\n\t\tif(pos<=mid)modify(pos,x,op,ls,s,mid);\n\t\telse modify(pos,x,op,rs,mid+1,t);\n\t\tpushup(p);\n\t}\n\tnode query(int l,int r,int p=1,int s=1,int t=n){\n\t\tif(l<=s&&t<=r)return T[p];\n\t\tif(l<=mid){\n\t\t\tif(r>mid)return merge(query(l,r,ls,s,mid),query(l,r,rs,mid+1,t));\n\t\t\telse return query(l,r,ls,s,mid);\n\t\t}\n\t\telse return query(l,r,rs,mid+1,t);\n\t//\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u95f4\u7684\u5408\u5e76\u95ee\u9898\uff01\n\t}\n}\nvoid mdf(int pos,ull x,int op){\n\tsegtree::modify(dfn[pos],x,op);\n}\null qry(int u,int v,ull w){//\u6838\u5fc3\u90e8\u5206\uff1a\u94fe\u7684\u5408\u5e76\n\tnode lc,rc;\n\twhile(top[u]!=top[v]){\n\t\tif(dep[top[u]]>dep[top[v]]){\n\t\t\tlc=merge(segtree::query(dfn[top[u]],dfn[u]),lc);\n\t\t\t//\u7ec6\u82821\uff1a\u6811\u5256\u662f\u4ece\u4e0b\u5230\u4e0a\u8df3\u7684\uff0c\u6545\u65b0\u7684\u94fe\u662f\u4e0d\u65ad\u5730\u5e76\u5728\u524d\u9762\u5f97\u5230\u7684\u94fe\u7684\u524d\u7aef\n\t\t\tu=fa[top[u]];\n\t\t}\n\t\telse{\n\t\t\trc=merge(segtree::query(dfn[top[v]],dfn[v]),rc);\n\t\t\tv=fa[top[v]];\n\t\t}\n\t}\n\tbool flg=1;\n\tif(dep[u]<dep[v])std::swap(u,v),std::swap(lc,rc),flg=0;\n\tstd::swap(rc.lef0,rc.rig0),std::swap(rc.lef1,rc.rig1);\n\t//\u7ec6\u82822\uff1a\u4e3a\u4e86\u94fe\u7684\u65b9\u5411\u7684\u7edf\u4e00\u65b9\u4fbf\u5408\u6210\u6700\u7ec8\u94fe\uff0c\u9700\u8981\u628a\u9760\u4e0a\uff08\u9ed8\u8ba4\u4e3av\uff09\u7684\u94fe\u5de6\u53f3\u98a0\u5012\n\tnode ans=merge(rc,merge(segtree::query(dfn[v],dfn[u]),lc));\n\tif(flg)std::swap(ans.lef0,ans.rig0),std::swap(ans.lef1,ans.rig1);\n\t//\u7ec6\u82823\uff1a\u6b64\u65f6\u7684\u94fe\u5de6\u7aef\u662fv\u53f3\u7aef\u662fu\uff0c\u6545\u9700\u8981\u5c06\u7b54\u6848\u94fe\u5de6\u53f3\u98a0\u5012\uff1b\u4f46\u662f\u5982\u679cu,v\u5df2\u7ecf\u4ea4\u6362\u4e86\u5c31\u4e0d\u7528\u98a0\u5012\n\tull res=0;\n\tfor(int i=K-1;~i;--i){\n\t\tull l0=ans.lef0>>i&1,l1=ans.lef1>>i&1;\n\t\tif(l0)res|=1ull<<i;//\u53ef\u4ee5\u90a3\u5c31\u5c3d\u91cf\u767d\u5ad6\n\t\telse if(l1&&(1ull<<i)<=w)res|=1ull<<i,w-=1ull<<i;//\u524d\u6587\u63d0\u5230\u7684\u8d2a\u5fc3\u7ed3\u8bba\uff1a\u80fd\u62ff\u9ad8\u4f4d\u4e00\u5b9a\u8981\u62ff\n\t}\n\treturn res;\n}\nvoid adde(int u,int v){\n\te[++etot]=(edge){v,h[u]};\n\th[u]=etot;\n}\nsigned main(){\n\tn=read();m=read();K=read();\n\tfor(int i=1;i<=n;++i)OP[i]=read(),a[i]=uread();\n\tfor(int i=1;i<n;++i){\n\t\tint u=read(),v=read();\n\t\tadde(u,v);adde(v,u);\n\t}\n\tdfs1(1,1);\n\tdfs2(1,1);\n\tsegtree::build();\n\twhile(m--){\n\t\tint op=read(),u=read(),v=read();\n\t\tull w=uread();\n\t\tif(op==1)printf(\"%llu\\n\",qry(u,v,w));\n\t\telse mdf(u,w,v);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1676869942,
        "uid": 188716,
        "name": "pokefunc",
        "ccfLevel": 6,
        "title": "P5354"
    },
    {
        "content": "\u600e\u4e48\u8bf4...\u6216\u8bb8\u662f LCT \u5e38\u6570\u95ee\u9898\uff0c\u6216\u8bb8\u662f\u6d1b\u8c37\u56db\u8d1f\u4f18\u5316\u95ee\u9898\uff0c\u603b\u4e4b\u8dd1\u5f97\u6bd4\u8f83\u6162...\n\n# noteskey\n\n\u8fd9\u9053\u9898\u5173\u952e\u53ea\u5728\u5982\u679c\u5408\u5e76\u4e24\u7aef\u533a\u95f4\uff0c\u81f3\u4e8e\u7ef4\u62a4\u65e0\u8bba\u662f \u6811\u5256\u52a0\u7ebf\u6bb5\u6811 \u6216\u662f LCT \u90fd\u662f ojbk \u7684\n\n## build\n\n\u6211\u4eec\u5148\u5904\u7406\u4e24\u4e2a\u4fe1\u606f\uff0c\u4e00\u4e2a\u662f\u6240\u6709\u4f4d\u4e0a\u4e3a 0 \u7684\u6570\u7ecf\u8fc7\u5f53\u524d\u70b9\u4f1a\u53d8\u6210\u4ec0\u4e48 (x0) \uff0c\u4ee5\u53ca\u6240\u6709\u4f4d\u4e0a\u4e3a 1 \u7684\u6570\u7ecf\u8fc7\u5f53\u524d\u70b9\u4f1a\u53d8\u6210\u4ec0\u4e48(x1)\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u73b0\u5728\u5904\u7406\u51fa\u4e86\u4e24\u4e2a\u533a\u95f4\u7684\u66f4\u53d8\u4fe1\u606f\uff0c\u7136\u540e\u6211\u4eec\u8981\u628a\u4e24\u6bb5\u4fe1\u606f\u5408\u5e76\uff0c\u90a3\u4e48\u6211\u4eec\u8bbe\u524d\u9762\u4e00\u6bb5\u4e3a $(f0,f1)$ \uff0c\u540e\u4e00\u6bb5\u4e3a $(g0,g1)$ \uff0c\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u6c42\u51fa $(h0,h1)$\n\n\u6211\u4eec\u9996\u5148\u8003\u8651 h0 \uff0c\u90a3\u4e48\u6709\uff1a\u5168\u4e3a 0 \u7684\u6570\u7ecf\u8fc7 f0 \u4e4b\u540e\u6709\u4e9b\u4f4d\u4e0a\u53d8\u6210\u4e86 0 \uff0c\u7136\u540e\u7ecf\u8fc7 g0 \uff0c\u5373 ~$f0\\&g0$\uff0c \u5168\u4e3a 0 \u7684\u6570\u7ecf\u8fc7 f0 \u4e4b\u540e\u6709\u4e9b\u4f4d\u4e0a\u53d8\u6210\u4e86 1 \uff0c\u7136\u540e\u7ecf\u8fc7 g1 \uff0c\u5373 $f0\\&g1$\n\n\u6240\u4ee5\uff0c $h0=$~$f0\\&g0+f0\\&g1$ \n\n\u540c\u7406\uff0c $h1=$~$f1\\&g0+f1\\&g1$\n\n\n## update\n\n\u8003\u8651\u66f4\u65b0\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5f53\u7136\u70b9\u4fe1\u606f\u4fee\u6539\u5e76 splay \uff0c\u6cbf\u8def\u4fee\u6539\u8282\u70b9\u4fe1\u606f\n\n## query\n\n\u8003\u8651\u67e5\u8be2\u65f6\u8d2a\u5fc3\u7684\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8ba1\u7b97\u6700\u5927\u8d21\u732e\uff0c\u9274\u4e8e\u6709 \u6700\u5927\u503c \u7684\u9650\u5236\uff0c\u6211\u4eec\u6bcf\u6b21\u52a0\u4e0a\u4e00\u4e2a\u8d21\u732e\u4e4b\u524d\u8981\u6bd4\u8f83\u8be5\u8d21\u732e\u662f\u5426\u5c0f\u4e8e\u5f53\u524d\u9650\u5236\uff0c\u5c0f\u4e8e\u5219\u7d2f\u52a0\u8d21\u732e\uff0c\u5e76\u5c06\u9650\u5236\u51cf\u53bb\u8be5\u8d21\u732e\n\n# code \n\n\u81ea\u5e26\u5927\u5e38\u6570\u7684 LCT \uff0c\u8bf7\u653e\u5fc3\u98df\u7528\n  \n```\n//by Judge\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define go(G,u) for(Rg int i=G.head[u],v=G.e[i].to;i;v=G.e[i=G.e[i].nxt].to)\n#define ll unsigned long long\nusing namespace std;\nconst int inf=1e9+7;\nconst int M=1e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline ll read(){ ll x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(CCF>1<<20)Ot(); while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,k;\nstruct node{ ll f0,f1;\n\tinline node operator +(const node& b)const{\n\t\treturn (node){(~f0&b.f0)|(f0&b.f1),(~f1&b.f0)|(f1&b.f1)};\n\t}\n}f[M],l[M],r[M];\nnamespace LCT{ arr fa,s,rev; int ch[M][2],top,tot;\n\tinline bool isroot(int x){\n\t\treturn ch[fa[x]][0]^x&&ch[fa[x]][1]^x;\n\t}\n\t#define ls ch[x][0]\n\t#define rs ch[x][1]\n\tinline void pushup(int x){ l[x]=r[x]=f[x];\n\t\tif(ls) l[x]=l[ls]+l[x],r[x]=r[x]+r[ls];\n\t\tif(rs) l[x]=l[x]+l[rs],r[x]=r[rs]+r[x];\n\t}\n\tinline void pushr(int x){\n\t\tswap(ls,rs),swap(l[x],r[x]),rev[x]^=1;\n\t}\n\tinline void pushdown(int x){\n\t\tif(rev[x]&&x) pushr(ls),pushr(rs),rev[x]=0;\n\t}\n\tinline void rotate(int x){\n\t\tint y=fa[x],z=fa[y],d=ch[y][1]==x;\n\t\tif(!isroot(y)) ch[z][ch[z][1]==y]=x;\n\t\tfa[x]=z,fa[y]=x,fa[ch[x][d^1]]=y;\n\t\tch[y][d]=ch[x][d^1],ch[x][d^1]=y,pushup(y);\n\t}\n\tinline void splay(int x){\n\t\ts[top=1]=x; for(Rg int i=x;!isroot(i);i=fa[i]) s[++top]=fa[i];\n\t\twhile(top) pushdown(s[top--]);\n\t\tfor(int y=fa[x],z=fa[y];!isroot(x);rotate(x),y=fa[x],z=fa[y])\n\t\t\tif(!isroot(y)) rotate((ch[y][1]==x)^(ch[z][1]==y)?x:y);\n\t\tpushup(x);\n\t}\n\tinline void access(int x){\n\t\tfor(Rg int y=0;x;x=fa[y=x])\n\t\t\tsplay(x),rs=y,pushup(x);\n\t}\n\tinline void makeroot(int x){\n\t\taccess(x),splay(x),pushr(x);\n\t}\n\tinline void split(int x,int y){\n\t\tmakeroot(x),access(y),splay(y);\n\t}\n} using namespace LCT;\nstruct Gr{ int pat,head[M];\n\tstruct Edge{ int to,nxt; }e[M<<1];\n\tinline void add(int u,int v){\n\t\te[++pat]={v,head[u]},head[u]=pat;\n\t\te[++pat]={u,head[v]},head[v]=pat;\n\t}\n}G;\nvoid dfs(int u){\n\tgo(G,u) if(v^fa[u])\n\t\tfa[v]=u,dfs(v); pushup(u);\n}\nint main(){ int op,x,y;\n\tn=read(),m=read(),k=read();\n\tfp(i,1,n){ int x=read(); ll y=read();\n\t\tswitch(x){\n\t\t\tcase 1: f[i]=(node){0,y}; break;\n\t\t\tcase 2: f[i]=(node){y,~0}; break;\n\t\t\tcase 3: f[i]=(node){y,~y}; break;\n\t\t}\n\t}\n\tfp(i,2,n) x=read(),y=read(),G.add(x,y);\n\tfor(dfs(1);m;--m){\n\t\top=read(),x=read(),y=read(); ll z=read();\n\t\tif(op&1){ split(x,y); ll ans=0,e=1;\n\t\t\tfd(i,k-1,0) if(l[y].f0&(e<<i)) ans|=e<<i;\n\t\t\t\telse if(l[y].f1&(e<<i)&&z>=(e<<i)) ans|=e<<i,z^=e<<i;\n\t\t\tprint(ans);\n\t\t} else{\n\t\t\tswitch(y){\n\t\t\t\tcase 1: f[x]=(node){0,z}; break;\n\t\t\t\tcase 2: f[x]=(node){z,~0}; break;\n\t\t\t\tcase 3: f[x]=(node){z,~z}; break;\n\t\t\t} splay(x);\n\t\t}\n\t} return Ot(),0;\n}\n```\n\n",
        "postTime": 1555223592,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528LCT\u7ef4\u62a4\uff0c\u5f53\u7136\u4e5f\u80fd\u591f\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u7ef4\u62a4\u4e86\u3002\n\n\u505a\u6cd5\u548cLCT\u5dee\u4e0d\u591a\uff0c\u9700\u8981\u5224\u65ad\u4e00\u4e9b\u4e1c\u897f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u6bd4\u76ee\u524d\u6240\u6709LCT\u90fd\u5feb\uff0c\u4f46\u662f\u88abZKW\u7684$log^2n$\u5927\u4f6c\u811a\u8e29\u3002\n\n\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<23;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n    {\n        return((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n    }\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n    {\n        x=0;static char ch;T f=1;\n        for(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n        for(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n        x*=f;\n    }\n\n    template<typename T>inline void write(T x,char ch='\\n')\n    {\n        if(!x)*nowps++='0';\n        if(x<0)*nowps++='-',x=-x;\n        static uint32 sta[111],tp;\n        for(tp=0;x;x/=10)sta[++tp]=x%10;\n        for(;tp;*nowps++=sta[tp--]^48);\n        *nowps++=ch;\n    }\n}\nusing namespace IO;\n\nvoid file(void)\n{\n    FILE*DSD=freopen(\"water.in\",\"r\",stdin);\n    FILE*CSC=freopen(\"water.out\",\"w\",stdout);\n}\n\nconst int MAXN=1e5+7;\n\nstatic int n,m,k;\n\nstatic struct edge\n{\n    int v,nxt;\n}p[MAXN<<1];\n\nstatic int head[MAXN],e;\n\ninline void add(int u,int v)\n{p[++e]=(edge){v,head[u]},head[u]=e;}\n\nstatic int X[MAXN];\n\nstatic uint64 Y[MAXN];\n\nstatic uint64 mx;\n\ninline void init()\n{\n    read(n),read(m),read(k);\n    mx=k==64?ULLONG_MAX:(1llu<<k)-1;\n    \n    Rep(i,1,n)read(X[i]),read(Y[i]);\n    static int u,v;\n    Rep(i,1,n-1)read(u),read(v),add(u,v),add(v,u);\n}\n\nnamespace GBST\n{\n    static uint64 L[MAXN][2],R[MAXN][2];\n\n    static int fa[MAXN],son[MAXN],sz[MAXN],ls[MAXN],rs[MAXN],dep[MAXN];\n\n    void dfs(int u)\n    {\n        sz[u]=1,dep[u]=dep[fa[u]]+1;\n        for(register int i=head[u];i;i=p[i].nxt)\n        {\n            int v=p[i].v;\n            if(v^fa[u])\n            {\n                fa[v]=u,dfs(v),sz[u]+=sz[v];\n                if(sz[v]>sz[son[u]])son[u]=v;\n            }\n        }\n    }\n\n    static int sta[MAXN],tp,ssz[MAXN],bel[MAXN];\n\n    inline uint64 op(uint64 a,uint64 b,int c)\n    {\n        if(c==1)return a&b;\n        if(c==2)return a|b;\n        return a^b;\n    }\n\n    inline void pushup(int u)\n    {\n        register uint64 \n            l0=ls[u]?op(L[ls[u]][0],Y[u],X[u]):op(0,Y[u],X[u]),\n            l1=ls[u]?op(L[ls[u]][1],Y[u],X[u]):op(mx,Y[u],X[u]),\n            r0=rs[u]?op(R[rs[u]][0],Y[u],X[u]):op(0,Y[u],X[u]),\n            r1=rs[u]?op(R[rs[u]][1],Y[u],X[u]):op(mx,Y[u],X[u]);\n        if(ls[u])\n        {\n            R[u][0]=(~r0&R[ls[u]][0])|(r0&R[ls[u]][1]);\n            R[u][1]=(~r1&R[ls[u]][0])|(r1&R[ls[u]][1]);\n        }else R[u][0]=r0,R[u][1]=r1;\n        if(rs[u])\n        {\n            L[u][0]=(~l0&L[rs[u]][0])|(l0&L[rs[u]][1]);\n            L[u][1]=(~l1&L[rs[u]][0])|(l1&L[rs[u]][1]);\n        }else L[u][0]=l0,L[u][1]=l1;\n    }\n\n    inline int build_tree(int l,int r)\n    {\n        if(l>r)return 0;\n        int tot=0;Rep(i,l,r)tot+=ssz[sta[i]];\n        for(register int i=l,cnt=ssz[sta[i]];i<=r;++i,cnt+=ssz[sta[i]])\n            if(cnt<<1>=tot)\n            {\n                ls[sta[i]]=build_tree(l,i-1);\n                rs[sta[i]]=build_tree(i+1,r);\n                fa[ls[sta[i]]]=fa[rs[sta[i]]]=sta[i];\n                pushup(sta[i]);\n                return sta[i];\n            }\n    }\n\n    bitset<MAXN>isr;\n\n    int build(int u,int fr)\n    {\n        bel[u]=++e;\n        for(int t=u;t;fr=t,t=son[t])\n        {\n            bel[t]=bel[u];\n            for(register int i=head[t];i;i=p[i].nxt)\n            {\n                int v=p[i].v;\n                if(v^son[t]&&v^fr)fa[build(v,t)]=t;\n            }\n        }\n        tp=0;\n        for(int t=u;t;t=son[t])sta[++tp]=t,ssz[t]=sz[t]-sz[son[t]];\n        int rt=build_tree(1,tp);\n        isr.set(rt);\n        return rt;\n    }\n\n    static int vis[MAXN];\n\n    inline uint64 quer(int x,int y,uint64 z)\n    {\n        register uint64 ans=0llu,l0=0llu,l1=mx,r0=0llu,r1=mx,zer,on,n0,n1,lasx,lasy;\n        e=0;\n        register int t,lca;\n        for(t=x;t;t=fa[t])vis[t]=++e;\n        for(t=y;t;t=fa[t])if(vis[t]){lca=t;break;}\n        for(t=x;t;t=fa[t])vis[t]=0;\n        for(t=0;bel[x]^bel[lca];t=x,x=fa[x])if(ls[x]&&t^ls[x])\n        {\n            zer=op(l0,Y[x],X[x]),on=op(l1,Y[x],X[x]);\n            n0=(~zer&R[ls[x]][0])|(zer&R[ls[x]][1]);\n            n1=(~on&R[ls[x]][0])|(on&R[ls[x]][1]);\n            l0=n0,l1=n1;\n        }else if(!ls[x]||t^ls[x])\n        {\n            l0=op(l0,Y[x],X[x]),l1=op(l1,Y[x],X[x]);\n        }\n        lasx=t;\n\n        for(t=0;bel[y]^bel[lca];t=y,y=fa[y])if(ls[y]&&t^ls[y])\n        {\n            zer=op(L[ls[y]][0],Y[y],X[y]),on=op(L[ls[y]][1],Y[y],X[y]);\n            n0=(~zer&r0)|(zer&r1);\n            n1=(~on&r0)|(on&r1);\n            r0=n0,r1=n1;\n        }else if(!ls[y]||t^ls[y])\n        {\n            zer=op(0llu,Y[y],X[y]),on=op(mx,Y[y],X[y]);\n            n0=(~zer&r0)|(zer&r1);\n            n1=(~on&r0)|(on&r1);\n            r0=n0,r1=n1;\n        }\n        lasy=t;\n        if(dep[x]<=dep[y])\n        {\n            for(t=lasx;x^lca;t=x,x=fa[x])if(rs[x]&&t^rs[x])\n            {\n                zer=op(l0,Y[x],X[x]),on=op(l1,Y[x],X[x]);\n                n0=(~zer&L[rs[x]][0])|(zer&L[rs[x]][1]);\n                n1=(~on&L[rs[x]][0])|(on&L[rs[x]][1]);\n                l0=n0,l1=n1;\n            }else if(!rs[x]||t^rs[x])\n                l0=op(l0,Y[x],X[x]),l1=op(l1,Y[x],X[x]);\n        \n            for(t=lasy;y^lca;t=y,y=fa[y])if(ls[y]&&t^ls[y])\n            {\n                zer=op(L[ls[y]][0],Y[y],X[y]),on=op(L[ls[y]][1],Y[y],X[y]);\n                n0=(~zer&r0)|(zer&r1);\n                n1=(~on&r0)|(on&r1);\n                r0=n0,r1=n1;\n            }else if(!ls[y]||t^ls[y])\n            {\n                zer=op(0llu,Y[y],X[y]),on=op(mx,Y[y],X[y]);\n                n0=(~zer&r0)|(zer&r1);\n                n1=(~on&r0)|(on&r1);\n                r0=n0,r1=n1;\n            }\n        }\n        else\n        {\n            for(t=lasx;x^lca;t=x,x=fa[x])if(ls[x]&&t^ls[x])\n            {\n                zer=op(l0,Y[x],X[x]),on=op(l1,Y[x],X[x]);\n                n0=(~zer&R[ls[x]][0])|(zer&R[ls[x]][1]);\n                n1=(~on&R[ls[x]][0])|(on&R[ls[x]][1]);\n                l0=n0,l1=n1;\n            }else if(!ls[x]||t^ls[x])\n                l0=op(l0,Y[x],X[x]),l1=op(l1,Y[x],X[x]);\n        \n            for(t=lasy;y^lca;t=y,y=fa[y])if(rs[y]&&t^rs[y])\n            {\n                zer=op(R[rs[y]][0],Y[y],X[y]),on=op(R[rs[y]][1],Y[y],X[y]);\n                n0=(~zer&r0)|(zer&r1);\n                n1=(~on&r0)|(on&r1);\n                r0=n0,r1=n1;\n            }else if(!rs[y]||t^rs[y])\n            {\n                zer=op(0llu,Y[y],X[y]),on=op(mx,Y[y],X[y]);\n                n0=(~zer&r0)|(zer&r1);\n                n1=(~on&r0)|(on&r1);\n                r0=n0,r1=n1;\n            }\n        }\n        l0=op(l0,Y[lca],X[lca]),l1=op(l1,Y[lca],X[lca]);\n        n0=(~l0&r0)|(l0&r1);\n        n1=(~l1&r0)|(l1&r1);\n        register uint64 now=0llu;\n        Repe(i,k-1,0)\n        {\n            if(z-now>=1llu<<i&&((n1>>i&1)>(n0>>i&1)))now|=1llu<<i,ans|=1llu<<i;\n            else ans|=n0&(1llu<<i);\n        }\n        return ans;\n    }\n\n    inline void modify(int x,int y,ll z)\n    {\n        X[x]=y,Y[x]=z,pushup(x);\n        while(x&&!isr.test(x))pushup(fa[x]),x=fa[x];\n    }\n}\nusing namespace GBST;\n\nstatic int rt;\n\ninline void solve()\n{\n    dfs(1),e=0;\n    fa[rt=build(1,0)]=0,isr.set(rt);\n    static int opt,x,y;\n    static uint64 z;\n    Rep(i,1,m)\n    {\n        read(opt),read(x),read(y),read(z);\n        if(opt==1)write(quer(x,y,z));\n        else modify(x,y,z);\n    }\n    flush();\n}\n\nint main()\n{\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1545914759,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "http://blog.csdn.net/tswdfop/article/details/77753725\n",
        "postTime": 1506773351,
        "uid": 16975,
        "name": "tswdfop233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3613 \u3010\u7761\u89c9\u56f0\u96be\u7efc\u5408\u5f81\u3011"
    },
    {
        "content": "\u663e\u7136\u7528LCT\u7ef4\u62a4\u4e00\u4e0b\u7ecf\u8fc7\u4e00\u6761\u94fe\u4e4b\u540e\u6bcf\u4e00\u4f4d\u539f\u6765\u662f1\u4f1a\u53d8\u6210\u4ec0\u4e48\u539f\u6765\u662f0\u4f1a\u53d8\u6210\u4ec0\u4e48\u5373\u53ef\n\n\u8fd9\u6837\u7684\u8bddLCT\u590d\u6742\u5ea6\u662fn log n * k\u7684\uff0c\u94fe\u5256\u662fn log^2 n * k\u7684\uff0c\u90fd\u8fc7\u4e0d\u4e86\n\n\u8003\u8651\u628a\u8fd9\u4e2ak\u7ed9\u53bb\u6389\uff0c\u6211\u4eec\u76f4\u63a5\u5f00\u4e24\u4e2aunsigned long long\uff0cv0\u548cv1\uff0cv0\u7684\u6bcf\u4e00\u4f4d\u4ee3\u8868\u8fd9\u4e00\u4f4d\u539f\u6765\u662f0\u7684\u8bdd\u7ecf\u8fc7\u8fd9\u6761\u94fe\u4f1a\u53d8\u6210\u4ec0\u4e48\uff0cv1\u7684\u6bcf\u4e00\u4f4d\u4ee3\u8868\u8fd9\u4e00\u4f4d\u539f\u6765\u662f1\u7684\u8bdd\u7ecf\u8fc7\u8fd9\u6761\u94fe\u4f1a\u53d8\u6210\u4ec0\u4e48\n\n\u90a3\u4e48\u8003\u8651\u4fe1\u606f\u7684\u5408\u5e76\uff0c\u5047\u5982\u4f60\u73b0\u5728\u77e5\u9053\u4e86v0[x],v1[x],v0[y],v1[y]\uff0c\u5148\u7ecf\u8fc7x\u540e\u7ecf\u8fc7y\uff0c\u90a3\u4e48\u5408\u5e76\u4e4b\u540e\u65b0\u7684v0=(v0[x]&v1[y])|(~v0[x]&v0[y])\uff0cv1=(v1[x]&v1[y])|(~v1[x]&v0[y])\n\n\u6bd4\u8f83\u597d\u7406\u89e3\u5427\u2026\u2026\u5c31\u662f\u6bd4\u5982v0\uff0c\u539f\u6765\u76840\u53d8\u62101\u90a3\u4e9b\u4f4d\u5c31\u4f1a\u53d8\u6210v1[y]\u4e2d\u5bf9\u5e94\u7684\u4f4d\uff0c\u53d8\u62100\u7684\u90a3\u4e9b\u4f4d\u4f1a\u53d8\u6210v0[y]\u4e2d\u5bf9\u5e94\u7684\u4f4d\uff0c\u90a3\u4e48\u4e0e\u4e00\u4e0b\uff0c\u7136\u540e\u5408\u8d77\u6765\u5c31\u597d\u4e86\n\n\u94fe\u5256\u548cLCT\u6211\u90fd\u5199\u4e86\uff0c\u7ed3\u679cLCT TLE\u4e86\uff0c\u94fe\u52563s\u8fc7\u4e86\n\u4e0d\u4f1aLCT\uff0c\u819c\u62dc\u4e00\u4e0b\u4f1a\u7684\u5927\u4f6c\u3002\n```\n#include<iostream>\n#include<cstring>\n#include<ctime>\n#include<cmath>\n#include<algorithm>\n#include<iomanip>\n#include<cstdlib>\n#include<cstdio>\n#include<map>\n#include<bitset>\n#include<set>\n#include<stack>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define MAXN 100010\n#define MAXM 1010\n#define ull unsigned long long\n#define eps 1e-8\n#define MOD 1000000007\n#define INF 1000000000\nchar xB[1<<15],*xS=xB,*xTT=xB;\n#define getc() (xS==xTT&&(xTT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xTT)?0:*xS++)\n#define isd(c) (c>='0'&&c<='9')\null read(){\n\tchar xchh;\n\tull xaa;\n    while(xchh=getc(),!isd(xchh));(xaa=xchh-'0');\n    while(xchh=getc(),isd(xchh))xaa=xaa*10+xchh-'0';return xaa;\n}\nstruct vec{\n\tint to;\n\tint fro;\n};\nstruct data{\n\tull v0;\n\tull v1;\n\tdata(){\n\t\t\n\t}\n\tdata(int o,ull x){\n\t\tif(o==1){\n\t\t\tv0=0&x;\n\t\t\tv1=(~0)&x;\n\t\t}\n\t\tif(o==2){\n\t\t\tv0=0|x;\n\t\t\tv1=(~0)|x;\n\t\t}\n\t\tif(o==3){\n\t\t\tv0=0^x;\n\t\t\tv1=(~0)^x;\n\t\t}\n\t}\n\tfriend data operator +(data x,data y){\n\t\tdata z;\n\t\tz.v0=(x.v0&y.v1)|((~x.v0)&y.v0);\n\t\tz.v1=(x.v1&y.v1)|((~x.v1)&y.v0);\n\t\treturn z;\n\t}\n};\nvec mp[MAXN*2];\nint tai[MAXN],cnt;\nint dfn[MAXN],fa[MAXN],son[MAXN],siz[MAXN],dep[MAXN],ndf[MAXN],tp[MAXN],tim;\nint op[MAXN];\null a[MAXN];\ndata vl[MAXN<<2],vr[MAXN<<2];\nint n,m,k;\ninline void be(int x,int y){\n\tmp[++cnt].to=y;\n\tmp[cnt].fro=tai[x];\n\ttai[x]=cnt;\n}\ninline void bde(int x,int y){\n\tbe(x,y);\n\tbe(y,x);\n}\ninline void ud(int x){\n\tvl[x]=vl[x<<1]+vl[x<<1|1];\n\tvr[x]=vr[x<<1|1]+vr[x<<1];\n}\nvoid dfs(int x){\n\tint i,y;\n\tsiz[x]=1;\n\tdep[x]=dep[fa[x]]+1;\n\tfor(i=tai[x];i;i=mp[i].fro){\n\t\ty=mp[i].to;\n\t\tif(!siz[y]){\n\t\t\tfa[y]=x;\n\t\t\tdfs(y);\n\t\t\tsiz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]]){\n\t\t\t\tson[x]=y;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs2(int x,int z){\n\tint i,y;\n\tndf[dfn[x]=++tim]=x;\n\ttp[x]=z;\n\tif(son[x]){\n\t\tdfs2(son[x],z);\n\t\tfor(i=tai[x];i;i=mp[i].fro){\n\t\t\ty=mp[i].to;\n\t\t\tif(!dfn[y]){\n\t\t\t\tdfs2(y,y);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid build(int x,int y,int z){\n\tif(y==z){\n\t\tvl[x]=vr[x]=data(op[ndf[y]],a[ndf[y]]);\n\t\treturn ;\n\t}\n\tint mid=y+z>>1;\n\tbuild(x<<1,y,mid);\n\tbuild(x<<1|1,mid+1,z);\n\tud(x);\n}\nvoid change(int x,int y,int z,int p){\n\tif(y==z){\n\t\tvl[x]=vr[x]=data(op[ndf[y]],a[ndf[y]]);\n\t\treturn ;\n\t}\n\tint mid=y+z>>1;\n\tif(p<=mid){\n\t\tchange(x<<1,y,mid,p);\n\t}else{\n\t\tchange(x<<1|1,mid+1,z,p);\n\t}\n\tud(x);\n}\ndata askl(int x,int y,int z,int l,int r){\n\tif(y==l&&z==r){\n\t\treturn vl[x];\n\t}\n\tint mid=y+z>>1;\n\tif(r<=mid){\n\t\treturn askl(x<<1,y,mid,l,r);\n\t}else if(l>mid){\n\t\treturn askl(x<<1|1,mid+1,z,l,r);\n\t}else{\n\t\treturn askl(x<<1,y,mid,l,mid)+askl(x<<1|1,mid+1,z,mid+1,r);\n\t}\n}\ndata askr(int x,int y,int z,int l,int r){\n\tif(y==l&&z==r){\n\t\treturn vr[x];\n\t}\n\tint mid=y+z>>1;\n\tif(r<=mid){\n\t\treturn askr(x<<1,y,mid,l,r);\n\t}else if(l>mid){\n\t\treturn askr(x<<1|1,mid+1,z,l,r);\n\t}else{\n\t\treturn askr(x<<1|1,mid+1,z,mid+1,r)+askr(x<<1,y,mid,l,mid);\n\t}\n}\ndata toask(int x,int y){\n\tdata vx(3,0),vy(3,0);\n\twhile(tp[x]!=tp[y]){\n\t\tif(dep[tp[x]]>=dep[tp[y]]){\n\t\t\tvx=vx+askr(1,1,n,dfn[tp[x]],dfn[x]);\n\t\t\tx=fa[tp[x]];\n\t\t}else{\n\t\t\tvy=askl(1,1,n,dfn[tp[y]],dfn[y])+vy;\n\t\t\ty=fa[tp[y]];\n\t\t}\n\t}\n\tif(dep[x]>dep[y]){\n\t\treturn vx+askr(1,1,n,dfn[y],dfn[x])+vy;\n\t}else{\n\t\treturn vx+askl(1,1,n,dfn[x],dfn[y])+vy;\n\t}\n}\nint main(){\n\tint i,o,x,y;\n\tull z;\n\tn=read();\n\tm=read();\n\tk=read();\n\tfor(i=1;i<=n;i++){\n\t\top[i]=read();\n\t\ta[i]=read();\n\t}\n\tfor(i=1;i<n;i++){\n\t\tx=read();\n\t\ty=read();\n\t\tbde(x,y);\n\t}\n\tdfs(1);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\to=read();\n\t\tx=read();\n\t\ty=read();\n\t\tz=read();\n\t\tif(o==2){\n\t\t\top[x]=y;\n\t\t\ta[x]=z;\n\t\t\tchange(1,1,n,dfn[x]);\n\t\t}\n\t\tif(o==1){\n\t\t\tdata t=toask(x,y);\n\t\t\tull ans=0,now=0;\n\t\t\tfor(i=k-1;~i;i--){\n\t\t\t\tif(t.v0&(1ull<<i)){\n\t\t\t\t\tans+=1ull<<i;\n\t\t\t\t}else if((t.v1&(1ull<<i))&&now+(1ull<<i)<=z){\n\t\t\t\t\tans+=1ull<<i;\n\t\t\t\t\tnow+=1ull<<i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%llu\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n \n\n```\n",
        "postTime": 1560336552,
        "uid": 189492,
        "name": "songyihang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5354 \u3010[Ynoi2017]\u7531\u4e43\u7684OJ\u3011"
    }
]