[
    {
        "content": "\u5927\u5bb6\u5e94\u8be5\u90fd\u53ef\u4ee5\u60f3\u5230\uff0c\u4e00\u4e2a\u70b9\u5bf9\u53e6\u4e00\u4e2a\u70b9\u4f20\u9012\u4fe1\u606f\u7684\u4ef7\u503c\u4e3a\u5b83\u5230\u603b\u90e8\u7684\u6700\u77ed\u8def\u52a0\u4e0a\u603b\u90e8\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5728\u4e0b\u6587\uff0c\u6211\u4eec\u8bbe\u4e00\u4e2a\u70b9\u5230\u603b\u90e8\u7684\u6700\u77ed\u8def\u52a0\u4e0a\u603b\u90e8\u5230\u5b83\u7684\u6700\u77ed\u8def\u4e3a$d_i$\u3002\n\n\n\n\u5bf9\u4e8e\u5206\u5230\u4e00\u4e2a\u5b50\u96c6\u7684\u70b9\uff0c\u82e5\u5b50\u96c6\u7684\u5927\u5c0f\u4e3am\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u96c6\u7684\u603b\u4ee3\u4ef7\u662f\uff1a\n\n\n\n$(m-1)\\sum_{i=1}^md_i$\n\n\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u660e\u663e\u7684\u8d2a\u5fc3\u601d\u60f3\uff0c\u90a3\u5c31\u662f\uff0cd\u8d8a\u5927\u7684\u503c\uff0c\u5b83\u6240\u5728\u7684\u5b50\u96c6\u5c31\u5e94\u8be5\u8d8a\u5c0f\u3002\u7136\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u628a\u90a3\u4e9b\u5c0f\u7684\u653e\u4e00\u4e2a\u5927\u4e00\u70b9\u7684\u5b50\u96c6\uff0c\u5927\u7684\u653e\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684\u5b50\u96c6\u3002\n\n\n\n\u6211\u4eec\u628a\u8fd9\u4e9b\u70b9\u6309\u7167$d$\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u660e\u663e\u7684\u8f6c\u79fb\u65b9\u7a0b\u5f0f\uff1a\n\n\n\n\u8bbe $f_{i,j}$ \u4e3a\u5f53\u524d\u662f\u7b2ci\u4e2a\u70b9\uff0c\u653e\u4e86j\u4e2a\u5b50\u96c6\u3002\n\n\u8ba1 $(r-l-1)\\sum_{i=l}^rd_i$ \u8fd9\u4e2a\u4e3a $cost_{l,r}$\n\n\n\n$f_{i,j}=min_{k=0}^{i-1}(f_{k,j-1}+cost_{k,i})$\n\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u65b9\u7a0b\u5f0f\u660e\u663e\u662f $O(n^3)$ \u7684\uff0c\u901a\u4e0d\u8fc7\u6b64\u9898\u3002\n\n\n\n### \u80fd\u4e0d\u80fd\u5feb\u4e00\u70b9\uff1f\n\n\n\n\u53ef\u4ee5\uff0c\u6211\u4eec\u53d1\u73b0\u540e\u9762\u7684 $cost$ \u6ee1\u8db3\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4f18\u5316dp\n\n\n\n\u6309\u7406\u6765\u8bf4\uff0c\u8fd9\u5c31\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\uff0c\u6211\u5728https://www.luogu.com.cn/problem/UVA1737\u770b\u5230\u4e86\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\n\n\n\n**\u6709 $nlog^2$ \u7ea7\u7684\u7b97\u6cd5**\n\n\n\n### \u80fd\u4e0d\u80fd\u518d\u5feb\u4e00\u70b9\uff1f\n\n\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u6ce8\u610f\u5230 **\u6b63\u597d\u5efa\u7acbs\u4e2a\u96c6\u5408**\n\n\n\n\u60f3\u5230\u5e26\u6743\u4e8c\u5206\uff0c\u6211\u4eec\u901a~~\u6253\u8868~~\u8bc1\u660e\u53d1\u73b0\u82e5\u6211\u4eec\u7ed9\u9009\u7684\u96c6\u5408\u6570\u5e26\u4e0a\u4ee3\u4ef7\uff0c\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\u3002\n\n\n\n\u7136\u540e\u6211\u4eec\u5e72\u6389dp\u7684\u4e00\u7ef4\uff0c\u4e0d\u7ba1\u96c6\u5408\u6570\u90a3\u4e00\u7ef4\uff0c\u5217\u51fa\u65b9\u7a0b\u5f0f\uff1a\n\n\n\n$f_{i}=min_{k=0}^{i-1}(f_{k}+cost_{k,i})$\n\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#define maxn 50005\n#define maxr 200005\n#define eps 1e-8\n\nusing namespace std;\n\nstruct node {\n\tlong long val;\n\tint c;\n\tnode operator + (node x) {\n\t\treturn (node){val + x.val,c + x.c};\n\t}\n}f[maxn];\n\nstruct dot{\n\tint c,l,r;\n}qu[maxn];\n\nnode mins(node q,node p) {\n\tif (q.val < p.val) return q;\n\telse return p;\n}\n\nint n,b,s,r,nex[maxr],to[maxr],head[maxr],tot = 0,front,tail;\nlong long edge[maxr],dis[maxn],vis[maxn],sum[maxn],from[maxn],go[maxn],len[maxn],sum1[maxn],d[maxn];\n\nstd::priority_queue <std::pair<long long ,long long > > q;\n\nvoid add(long long x,long long y,long long z) {\n\tto[++tot] = y; nex[tot] = head[x]; edge[tot] = z; head[x] = tot;\n}\n\nvoid dijkstra(long long st) {\n\tfor (int i = 1;i <= n;i++) dis[i] = 9999999999999999;\n\tmemset(vis,0,sizeof(vis));\n\tdis[st] = 0;\n\tq.push(std::make_pair(0,st));\n\twhile (!q.empty()) {\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif (vis[x]) continue;\n\t\tvis[x] = 1;\n\t\tfor (int i = head[x];i;i = nex[i]) {\n\t\t\tint y = to[i],z = edge[i];\n\t\t\tif (dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z;\n\t\t\t\tq.push(std::make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nlong long cost(int i,int j,long long num) {\n\treturn f[j].val + (long long)(sum[i] - sum[j]) * (long long)(i - j - 1) + num;\n}\n\nvoid run(long long num) {\n\tqu[front = tail = 1] = {0,1,b};\n\tfor (int i = 1;i <= b;i++) {\n\t\tf[i] = {999999999999,0};\n\t\tfor (int j = 0;j < i;j++) {\n\t\t\tf[i] = mins(f[i],(node){cost(i,j,num),f[j].c + 1});\n\t\t}\n\t}\n}\n\nvoid half() {\n\tlong long l = 0,r = 9999999999999999,ans = 0;\n\twhile (r >= l) {\n\t\tlong long  mid = (r + l) / 2;\n\t\trun(mid);\n\t\tif (f[b].c > s) l = mid + 1;\n\t\telse if (f[b].c < s) r = (ans = mid) - 1;\n\t\telse {printf(\"%lld\\n\",f[b].val - mid * s);return;}\n\t}\n\tl--;\n\trun(l);\n\tprintf(\"%lld\\n\",f[b].val - l * s);\n}\n\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&b,&s,&r);\n\tfor (int i = 1;i <= r;i++) {\n\t\tint x,y;\n\t\tlong long z;\n\t\tscanf(\"%lld%lld%lld\",&from[i],&go[i],&len[i]);\n\t\tadd(from[i],go[i],len[i]);\n\t}\n\tdijkstra(b + 1);\n\tfor (int i = 1;i <= b;i++) d[i] = dis[i];\n\tmemset(head,0,sizeof(head)); tot = 0;\n\tfor (int i = 1;i <= r;i++) add(go[i],from[i],len[i]);\n\tdijkstra(b + 1);\n\tfor (int i = 1;i <= b;i++) d[i] += dis[i];\n\tstd::sort(d + 1,d + b + 1);\n\tfor (int i = 1;i <= b;i++) sum[i] = sum[i - 1] + d[i];\n\tfor (int i = 1;i <= b;i++) sum[i] += sum1[i];\n\thalf();\n\treturn 0;\n}\n```\n\n\n\n\u590d\u6742\u5ea6\uff1a$O(n^2logn)$\n\n\n\n\u590d\u6742\u5ea6\u4e0d\u51cf\u53cd\u589e\u3002\u3002\u3002\n\n\n\n### \u80fd\u4e0d\u80fd\u518d\u5feb\u4e00\u70b9\uff1f\n\n\n\n\n\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u7684d\u6570\u7ec4\u6392\u5e8f\u540e\u662f\u4e0d\u65ad\u9012\u589e\u7684\uff0c\u5e76\u4e14\uff0c\u8d8a\u5927\u7684\u6570\u6240\u5728\u7684\u96c6\u5408\u5e94\u8be5\u8d8a\u5c0f\u3002\n\n\n\n\u90a3\u4e48\u6211\u4eec\u5728dp\u8fc7\u7a0b\u4e2d\uff0c\u8d8a\u9760\u540e\u7684\u7684 $d_i$ \u4f1a\u9009\u53d6\u7684\u51b3\u7b56\u70b9\u79bb\u5b83\u5c31\u8d8a\u8fd1\uff0c\u540c\u65f6\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u8fd9\u4e2adp\u6ee1\u8db3**\u51b3\u7b56\u5355\u8c03\u6027**\n\n\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u679c\u65ad\u5730\u4f7f\u7528\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316dp\uff0c\u6765\u628a\u53c8\u4e00\u4e2an\u5316\u6210 $logn$\n\n\n\n\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#define maxn 50005\n#define maxr 200005\n#define eps 1e-8\n\nusing namespace std;\n\nstruct node {\n\tlong long val;\n\tint c;\n\tnode operator + (node x) {\n\t\treturn (node){val + x.val,c + x.c};\n\t}\n}f[maxn];\n\nstruct dot{\n\tint c,l,r;\n}qu[maxn];\n\nnode mins(node q,node p) {\n\tif (q.val < p.val) return q;\n\telse return p;\n}\n\nint n,b,s,r,nex[maxr],to[maxr],head[maxr],tot = 0,front,tail;\nlong long edge[maxr],dis[maxn],vis[maxn],sum[maxn],from[maxn],go[maxn],len[maxn],sum1[maxn],d[maxn];\n\nstd::priority_queue <std::pair<long long ,long long > > q;\n\nvoid add(long long x,long long y,long long z) {\n\tto[++tot] = y; nex[tot] = head[x]; edge[tot] = z; head[x] = tot;\n}\n\nvoid dijkstra(long long st) {\n\tfor (int i = 1;i <= n;i++) dis[i] = 9999999999999999;\n\tmemset(vis,0,sizeof(vis));\n\tdis[st] = 0;\n\tq.push(std::make_pair(0,st));\n\twhile (!q.empty()) {\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif (vis[x]) continue;\n\t\tvis[x] = 1;\n\t\tfor (int i = head[x];i;i = nex[i]) {\n\t\t\tint y = to[i],z = edge[i];\n\t\t\tif (dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z;\n\t\t\t\tq.push(std::make_pair(-dis[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nlong long cost(int i,int j,long long num) {\n\treturn f[j].val + (long long)(sum[i] - sum[j]) * (long long)(i - j - 1) + num;\n}\n\nvoid search(int i,long long num){\n    int now = qu[tail].c,ll = qu[tail].l,rr = qu[tail].r;\n    int ret = qu[tail].r + 1;\n    while(ll <= rr){\n        int mid = (ll + rr) / 2;\n        if(cost(mid,i,num) <= cost(mid,now,num)) rr = mid - 1,ret = mid;\n        else ll = mid + 1;\n    }\n    if(ret != qu[tail].l) qu[tail].r = ret - 1;\n    else tail--;\n    if(ret <= b) qu[++tail] = (dot){i,ret,b};\n}\n\nvoid run(long long num) {\n\tqu[front = tail = 1] = {0,1,b};\n\tmemset(f,0,sizeof(f));\n\tfor (int i = 1;i <= b;i++) {\n\t\twhile (front < tail && qu[front].r < i) front++;\n\t\tqu[front].l++;\n\t\tint j = qu[front].c;\n\t\tf[i] = node{cost(i,j,num),f[j].c + 1};\n\t\twhile (front < tail && cost(qu[tail].l,qu[tail].c,num) >= cost(qu[tail].l,i,num)) tail--;\n\t\tsearch(i,num); \n\t}\n}\n\nvoid half() {\n\tlong long l = 0,r = 9999999999999999,ans = 0;\n\twhile (r >= l) {\n\t\tlong long  mid = (r + l) / 2;\n\t\trun(mid);\n\t\tif (f[b].c > s) l = mid + 1;\n\t\telse if (f[b].c < s) r = (ans = mid) - 1;\n\t\telse {printf(\"%lld\\n\",f[b].val - mid * s);return;}\n\t}\n\tl--;\n\trun(l);\n\tprintf(\"%lld\\n\",f[b].val - l * s);\n}\n\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&b,&s,&r);\n\tfor (int i = 1;i <= r;i++) {\n\t\tint x,y;\n\t\tlong long z;\n\t\tscanf(\"%lld%lld%lld\",&from[i],&go[i],&len[i]);\n\t\tadd(from[i],go[i],len[i]);\n\t}\n\tdijkstra(b + 1);\n\tfor (int i = 1;i <= b;i++) d[i] = dis[i];\n\tmemset(head,0,sizeof(head)); tot = 0;\n\tfor (int i = 1;i <= r;i++) add(go[i],from[i],len[i]);\n\tdijkstra(b + 1);\n\tfor (int i = 1;i <= b;i++) d[i] += dis[i];\n\tstd::sort(d + 1,d + b + 1);\n\tfor (int i = 1;i <= b;i++) sum[i] = sum[i - 1] + d[i];\n\tfor (int i = 1;i <= b;i++) sum[i] += sum1[i];\n\thalf();\n\treturn 0;\n}\n```\n",
        "postTime": 1614173288,
        "uid": 47994,
        "name": "5u0i5n11i",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011p6918"
    },
    {
        "content": "\u5176\u5b9e\u53d1\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u90a3\u4f4d\u8001\u54e5\u7684\u51b3\u7b56\u5355\u8c03\u6027\u5e94\u8be5\u662f\u9519\u7684\uff0c\u4ed6\u53ea\u8003\u8651\u4e86\u4e0b\u754c\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n^3)$ \u7684\u3002\n\n---\n\n\u901a\u8fc7\u5728\u539f\u56fe\u548c\u53cd\u56fe\u4e0a\u5206\u522b\u8dd1\u4e00\u6b21 $\\rm dijkstra$ \u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9 $u$ \u4e00\u6765\u4e00\u53bb\u7684\u4ee3\u4ef7\uff0c\u4e0d\u59a8\u5206\u522b\u8bb0\u5176\u4e3a $dis_1(u)$ \u4e0e $dis_2(u)$ \u3002\u82e5 $u$ \u88ab\u5206\u914d\u5728\u4e00\u4e2a\u5927\u5c0f\u4e3a $s$ \u7684\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u77e5\u9053 $dis_1(u)$ \u4e0e $dis_2(u)$ \u5206\u522b\u4f1a\u88ab\u8ba1\u7b97 $s-1$ \u6b21\uff0c\u4ee4 $dis_u=dis_1(u)+dis_2(u)$ \uff0c\u4e5f\u5c31\u662f\u8bf4\u6b64\u65f6\u70b9 $u$ \u7684\u4ee3\u4ef7\u662f $(s-1)dis_u$ \u3002\n\n\u79f0 $dis_u$ \u4e3a\u70b9 $u$ \u7684\u6743\uff0c\u90a3\u4e48\u663e\u7136\u6bcf\u4e2a\u96c6\u5408\u4e2d\u70b9\u7684\u6743\u90fd\u5e94\u8be5\u662f\u8fde\u7eed\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u8981\u5904\u7406\u7684\u70b9\u6309\u6743\u6392\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u7684\u9009\u62e9\u5fc5\u7136\u90fd\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u3002\u8bbe $f_{i,j}$ \u4e3a\u5f53\u524d\u5212\u5206\u51fa $i$ \u4e2a\u533a\u95f4\uff0c\u8003\u8651\u5230\u7b2c $j$ \u4e2a\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5e76\u5bf9\u6392\u5e8f\u540e\u7684\u70b9\u6743\u505a\u524d\u7f00\u548c\uff0c\u8bb0\u5176\u4e3a $sm$ \uff0c\u90a3\u4e48\u663e\u7136\uff1a\n$$\nf_{i,j}=\\min_{k\\in[i,j]} f_{i-1,k-1}+(j-k)(sm_j-sm_{k-1})\n$$\n\u73b0\u5728\u76f4\u63a5\u505a\u662f $O(n^3)$ \u7684\u3002\u4e0d\u59a8\u8003\u8651\u4e00\u4e9b\u7b80\u660e\u7684\u6027\u8d28\uff0c\u53bb\u6389 $\\min$ \uff0c\u5e76\u5bf9\u4e0a\u5f0f\u79fb\u9879\uff1a\n$$\nf_{i,j}-j\\times sm_j=(f_{i-1,k-1}+k\\times sm_{k-1})-k\\times sm_j-j\\times sm_{k-1}\n$$\n\u9274\u4e8e $k$ \u548c $sm_k$ \u90fd\u5177\u6709\u5355\u8c03\u6027\uff0c\u5bf9\u4e8e\u786e\u5b9a $i$ \u7684 $f_{i,j}$ \uff0c\u8f6c\u79fb\u70b9\u663e\u7136\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\u5e76\u4e14\u53ef\u4ee5\u6ce8\u610f\u5230 $f_{i,j}$ \u7684\u8f6c\u79fb\u70b9\u5fc5\u7136\u8981\u5c0f\u4e8e $f_{i+1,j}$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u51b3\u7b56\u5355\u8c03\u6027\u6765\u505a\u5230 $O(n^2)$ \u3002\n\n\u4f46\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u505a\u5230\u66f4\u5927\u3002\u65e2\u7136\u662f\u8981\u5212\u5206\u51fa\u6070\u597d $s$ \u4e2a\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e26\u6743\u4e8c\u5206\u6765\u53bb\u6389\u8fd9\u4e2a\u9650\u5236\uff0c\u6b64\u65f6\u76f4\u63a5\u6309\u4e00\u5f00\u59cb\u7684\u5f0f\u5b50\u8f6c\u79fb\u662f $O(n^2\\log w)$ \u7684\uff0c$w$ \u662f\u659c\u7387\u7684\u8303\u56f4\u3002\u4e0d\u59a8\u7ee7\u7eed\u4f7f\u7528\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316\uff0c\u901a\u8fc7\u5355\u8c03\u6808\u548c\u4e8c\u5206\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u5355\u6b21 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u6765\u5b8c\u6210 DP \u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230 $O(n\\log n\\log w)$ \u4e86\u3002\n\n$O(n\\log n\\log w)$ \u7684\u505a\u6cd5\u5e76\u4e0d\u96be\u5b9e\u73b0\uff0c\u800c\u4e14\u5df2\u7ecf\u6709\u4eba\u653e\u8fc7\u4ee3\u7801\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u4ec5\u7ed9\u51fa $O(n^2)$ \u7684\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define endl putchar('\\n')\nconst int N=5005,M=50005;\nconst long long inf=0x3f3f3f3f3f3f3f3f;\n#define int long long\nusing namespace std;\n\nint n,m,s,b,ct,head[N],cnt,dis[2][N],vis[N],val[N],sm[N],ans,f[N][N],g[N][N];\nstruct edge { int a,b,next,v; } e[M],E[M];\nvoid add(int a,int b,int v) {\n\te[++cnt]={a,b,head[a],v};\n\thead[a]=cnt;\n}\ntypedef pair<int,int> pii;\n#define fi first\n#define se second\npriority_queue<pii,vector<pii>,greater<pii> > q;\n\nvoid dijk(int S,int* dis) {\n\trep(i,1,n) dis[i]=inf,vis[i]=0;\n\tdis[S]=0,q.push({dis[S],S});\n\twhile(!q.empty()) {\n\t\tint x=q.top().se; q.pop();\n\t\tif(vis[x]) continue;\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=e[i].next) {\n\t\t\tif(dis[e[i].b]>dis[x]+e[i].v) {\n\t\t\t\tdis[e[i].b]=dis[x]+e[i].v;\n\t\t\t\tq.push({dis[e[i].b],e[i].b});\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid init() {\n\trep(i,1,m) add(E[i].a,E[i].b,E[i].v);\n\tdijk(ct,dis[1]);\n\trep(i,1,n) head[i]=0; cnt=0;\n\trep(i,1,m) add(E[i].b,E[i].a,E[i].v);\n\tdijk(ct,dis[0]);\n\trep(i,1,b) val[i]=dis[0][i]+dis[1][i];\n\tsort(val+1,val+b+1);\n\trep(i,1,b) sm[i]=val[i]+sm[i-1];\n}\n\nvoid solve() {\n\trep(i,0,b) rep(j,0,b) f[i][j]=inf;\n\trep(i,0,b) g[i][i]=i,f[i][i]=0;//count now\n\trep(d,1,b-s) {\n\t\trep(i,1,b-d) {\n\t\t\tint j=i+d;\n\t\t\trep(k,g[i][j-1],g[i+1][j]) {\n\t\t\t\tint nw=(j-k)*(sm[j]-sm[k-1])+f[i-1][k-1];\n\t\t\t\tif(f[i][j]>nw) f[i][j]=nw,g[i][j]=k;\n\t\t\t}\n\t\t}\n\t}\n\tans=f[s][b];\n}\n\nsigned main() {\n\tscanf(\"%lld%lld%lld%lld\",&n,&b,&s,&m),ct=b+1;\n\trep(i,1,m) scanf(\"%lld%lld%lld\",&E[i].a,&E[i].b,&E[i].v);\n\tinit();\n\tsolve();\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1643024375,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6918 [ICPC2016 WF]Branch Assignment"
    },
    {
        "content": "\u4ece $i$ \u5230 $j$ \u7684\u8ddd\u79bb\u59cb\u7ec8\u662f $dis_{i\\to b+1}+dis_{b+1\\to j}$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u70b9\u5bf9 $(i,j)$ \u4ed6\u4eec\u7684\u8d21\u732e\u5c31\u662f $dis_{i\\to b+1}+dis_{b+1 \\to j}+dis_{j \\to b+1}+dis_{b+1\\to i}$\u3002  \n\u5982\u679c\u6211\u4eec\u8bb0 $dist_i=dis_{i\\to b+1}+dis_{b+1 \\to i}$\uff0c\u5219 $(i,j)$ \u7684\u8d21\u732e\u5c31\u662f $dist_i+dist_j$\uff0c\u4ed6\u4eec\u6240\u5728\u7684\u90a3\u4e00\u5b50\u96c6 $S_i$ \u7684\u8d21\u732e\u5c31\u662f $(|S_i|-1)\\sum\\limits_{x\\in S_i}dist_x$\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u5f0f\u5b50\u8d2a\u5fc3\u5730\u5212\u5206\u96c6\u5408\u65f6\u4e0d\u96be\u60f3\u5230\u8981\u8ba9 $dist$ \u503c\u5927\u7684 $|S_i|$ \u5c0f\uff0c$dist$ \u503c\u5c0f\u7684 $|S_i|$ \u5927\u3002  \n\u81ea\u7136\u731c\u5230\uff1a\u82e5\u5c06 $dist$ \u5347\u5e8f\u6392\u5e8f\uff0c\u5219\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u4ed6\u91cc\u9762\u7684\u6570\u4e00\u5b9a\u662f\u5728 $dist$ \u5e8f\u5217\u4e2d\u8fde\u7eed\u7684\u4e00\u6bb5\u3002  \n\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u5bf9\u7684\u3002\n\n\u90a3\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a DP\uff1a\u8bb0 $f_{i,j}$ \u4e3a\u524d $i$ \u4e2a\u5206\u6210 $j$ \u7ec4\u7684\u6700\u5c0f\u503c\u3002  \n\u8f6c\u79fb\u81ea\u7136\u5c31\u662f\uff1a$f_{i,j}=\\min\\limits_{1\\le k <i}\\{f_{k,j-1}+(i-k-1)\\sum\\limits_{x=k+1}^idist_x\\}$\u3002\n\n\u76f4\u63a5 DP \u590d\u6742\u5ea6\u662f $\\mathcal{O(n^3)}$\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5f88\u81ea\u7136\u5730\u60f3\u5230\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\uff0c\u4e00\u7b97\u53d1\u73b0\u771f\u662f\u5bf9\u7684\u3002\n\n\u76f4\u63a5\u56db\u8fb9\u5f62\u4e0d\u7b49\u5f0f\u4f18\u5316\u4e00\u4e0b\u5c31\u662f $\\mathcal{O(n^2\\ln n)}$ \u7684\u4e86\u3002\n\n\n$Code:$\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<assert.h>\n#define re register\n#define il inline\n#define int long long\n#define ast(x) assert(x)\n#define rd(yx) scanf(\"%lld\",&yx)\n#define prt(w,t) printf(\"%lld%c\",w,t)\nconst int N=5e3+3,M=5e4+3;\nint n,b,s,m,dist[N],f[N][N],pre[N];\nstruct wt\n{\n\tint ind=1,hd[N],to[M],nxt[M],val[M],t[N<<2],dis[N];\n\til void add(int u,int v,int w){return ++ind,to[ind]=v,nxt[ind]=hd[u],val[ind]=w,hd[u]=ind,void();}\n\til int Merge(int x,int y){return dis[x]<dis[y]?x:y;}\n\t#define ls (o<<1)\n\t#define rs (o<<1|1)\n\t#define mid (l+r>>1)\n\til void Modify(int o,int l,int r,int x,int y)\n\t{\n\t\tif(l==r) return t[o]=y,void();\n\t\treturn x>mid?Modify(rs,mid+1,r,x,y):Modify(ls,l,mid,x,y),t[o]=Merge(t[ls],t[rs]),void();\n\t}\n\t#undef ls\n\t#undef rs\n\t#undef mid\n\til void Dijkstra(re int s)\n\t{\n\t\tstd::memset(dis,0x3f,sizeof(dis)),dis[s]=0,Modify(1,1,n,s,s);\n\t\tfor(re int j=1,u;j<n;++j)\n\t\t{\n\t\t\tu=t[1],Modify(1,1,n,u,0);\n\t\t\tfor(re int i=hd[u],v,w;w=val[i],v=to[i];i=nxt[i])\n\t\t\t\tdis[u]+w<dis[v]&&(dis[v]=dis[u]+w,Modify(1,1,n,v,v),7);\n\t\t}\n\t\treturn;\n\t}\n}G[2];\nvoid Solve()\n{\n\trd(n),rd(b),rd(s),rd(m);\n\tfor(re int i=1,u,v,w;i<=m;++i) rd(u),rd(v),rd(w),G[0].add(u,v,w),G[1].add(v,u,w);\n\tG[0].Dijkstra(b+1),G[1].Dijkstra(b+1),std::memset(f,0x3f,sizeof(f));\n\tfor(re int i=1;i<=b;++i) dist[i]=G[0].dis[i]+G[1].dis[i];\n\tstd::sort(dist+1,dist+b+1);\n\tfor(re int i=1;i<=b;++i) pre[i]=pre[i-1]+dist[i];\n\tfor(re int i=0;i<=s;++i) f[0][i]=0;\n\tfor(re int i=0;i<=b;++i)\n\t\tfor(re int j=1;j<=s;++j)\n\t\t\tfor(re int k=i-i/j;k<i;++k)\n\t\t\t\tf[i][j]=std::min(f[i][j],f[k][j-1]+(pre[i]-pre[k])*(i-k-1));\n\tprt(f[b][s],' ');\n\treturn;\n}\nmain()\n{\n\treturn Solve(),0;\n}\n```",
        "postTime": 1679203305,
        "uid": 359113,
        "name": "elbissoPtImaerD",
        "ccfLevel": 0,
        "title": "P6918 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u62a2\u5230\u7b2c\u4e00\u7bc7\u9898\u89e3\u54e9\uff01\n\n#### \u9898\u76ee\u5206\u6790\uff1a\n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\uff0c\u80af\u5b9a\u5f97\u5148\u6b63\u7740\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u518d\u5efa\u53cd\u56fe\u8dd1\u4e00\u904d\u6700\u77ed\u8def,\u8fd9\u6837\u53ef\u4ee5\u5bf9\u4e8e\u6240\u6709\u7684 $i$ \u6c42\u51fa $dis(b + 1, i)$ \u4ee5\u53ca $dis(i, b + 1)$ \u3002\n\n\u7136\u540e\u6211\u4eec\u7ee7\u7eed\u89c2\u5bdf\uff0c\u9898\u76ee\u91cc\u9762\u6709\u4e00\u4e2a\u6761\u4ef6\u662f\uff1a \u540c\u4e00\u4e2a\u5b50\u96c6\u5185\u7684\u70b9**\u4e24\u4e24\u4e4b\u95f4**\u4f1a**\u4e92\u76f8**\u53d1\u9001\u4fe1\u606f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\n\n**\u6027\u8d28\u4e00**\uff1a\n+ **\u6bcf\u4e00\u4e2a\u70b9\u7684\u8d21\u732e**\u5b9e\u9645\u4e0a\u53ea\u8ddf\u81ea\u5df1\u6240\u5904\u5728\u7684\u5b50\u96c6\u7684\u5927\u5c0f\u6709\u5173\uff0c\u8ddf\u54ea\u4e00\u4e9b\u5143\u7d20\u5728\u4e00\u8d77\u5176\u5b9e\u5e76\u4e0d\u91cd\u8981\u3002\u5047\u8bbe\u70b9 $i$ \u6240\u5904\u7684\u96c6\u5408\u5927\u5c0f\u4e3a $siz$ ,\u90a3\u4e48\u5b83\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5c31\u4f1a\u662f $(dis(i, b + 1) + dis(b + 1, i)) * (siz - 1)$\u3002\n\n\u4e0b\u9762\u6211\u4eec\u628a $(dis(i, b + 1) + dis(b + 1, i))$ \u53eb\u505a $w_i$\n\n**\u6027\u8d28\u4e8c**:\n+ \u6839\u636e\u6027\u8d28\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e $w_i$ \u76f8\u8fd1\u7684\u4e00\u4e9b\u6570\u6211\u4eec\u603b\u662f\u5c06\u5b83\u4eec\u5206\u5230\u4e00\u7ec4\u66f4\u4f18\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u611f\u6027\u7684\u7528\u8d2a\u5fc3\u6765\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u5982\u679c\u5b83\u4eec\u7684 $w_i$ \u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u603b\u662f\u5e0c\u671b\u5b83\u4eec\u80fd\u591f\u4e0e**\u76f8\u5bf9\u8f83\u591a** \u7684\u5143\u7d20\u5728\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u6beb\u65e0\u7591\u95ee\u7684\uff0c\u76f8\u8fd1\u7684\u4e00\u4e9b\u642d\u914d\u5728\u4e00\u8d77\u66f4\u597d\uff0c\u5982\u679c $w_i$ \u6bd4\u8f83\u5927\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u901a\u8fc7\u6027\u8d28\u4e8c\u7684\u5206\u6790\uff0c\u6211\u4eec\u5c06 $[1,b]$ \u6240\u6709\u7684\u70b9\u6309\u7167 $w_i$ \u6392\u5e8f\u3002\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5c06\u4e00\u4e2a\u957f\u5ea6\u4e3a $b$ \u7684 **\u5355\u8c03\u4e0d\u51cf\u5e8f\u5217** \u5212\u5206\u6210 $s$ \u6bb5\uff0c\u6bcf\u4e00\u6bb5\u7684\u82b1\u8d39\u4e3a\u8fd9\u4e00\u6bb5\u7684\u6570\u7684\u548c * (\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6 $-$ $1$)\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u8f7b\u677e\u5199\u51fa\u4e00\u4e2a $n^3$ \u7684 $dp$:\n\n\u8bbe $dp[i][j]$ \u8868\u793a\u5c06\u524d $i$ \u4e2a\u6570\u5206\u6210 $j$ \u6bb5\u7684\u6700\u5c0f\u8d39\u7528\u3002\n\n\u90a3\u4e48 $dp[i][j] = Min(dp[k][j - 1] + (sum[i] - sum[k]) * (i - k - 1)); (0 <= k < i)$\n\n\u8fd9\u6837\u7684\u8bdd\u662f\u80af\u5b9a\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u8003\u8651\u4f18\u5316\uff1a\n\n\u9996\u5148\u4e0a\u9762 $dp[i][j]$ \u53ef\u4ee5\u901a\u8fc7\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e3a\u4e00\u7ef4\uff0c\u8fd9\u6837\u5b50\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 O$(n)$\u3002\n\n\u5728\u505a\u5212\u5206\u7b2c $j$ \u6bb5\u7684\u65f6\u5019\uff0c~~\u6253\u8868\u77e5\u9053~~ \u968f\u7740 $i$ \u5f80\u53f3\u8fb9\u79fb\u52a8\uff0c\u5bf9\u5e94\u7684\u6700\u4f18\u51b3\u7b56\u70b9\u662f\u4e0d\u65ad\u53f3\u79fb\u7684\u3002\n\n\u8bc1\u660e\uff1a\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u6211\u4eec\u8fdb\u884c\u5212\u5206\u7684\u5e8f\u5217\u662f **\u5355\u8c03\u4e0d\u51cf** \u7684\u3002\u4e0b\u9762\u79f0\u8fd9\u4e2a\u5e8f\u5217\u4e3a $A$ \u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u7b2c $i$ \u9879\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a $A_i$\u3002\n\n\u6211\u4eec\u5047\u8bbe\u73b0\u5728\u5728\u5bf9 $dp[i]$ \u8fdb\u884c\u51b3\u7b56\uff0c$dp[i - 1]$ \u7684\u6700\u4f73\u51b3\u7b56\u70b9\u662f $k (0 <= k < i)$\u3002\n\n\u90a3\u4e48\u5018\u82e5 $dp[i]$ \u7684\u6700\u4f18\u51b3\u7b56\u70b9\u4e3a $j$ \u5e76\u4e14 $j < k$\u3002\n\n\u90a3\u4e48\u610f\u5473\u7740 :\n\n$dp[k] + (sum[i] - sum[k]) * (i - k - 1) > dp[j] + (sum[i] - sum[j]) * (i - j - 1)$\n\n\u4f46\u662f\u53c8\u540c\u65f6\u6709\uff1a\n\n$dp[k] + (sum[i - 1] - sum[k]) * (i - k - 2) < dp[j] + (sum[i - 1] - sum[j]) * (i - j - 2)$\n\n\u4e0a\u4e0b\u4e24\u5f0f\u4f5c\u5dee\u5219\u6709(\u4e2d\u95f4\u7684\u5316\u7b80\u8fc7\u7a0b\u5c31\u7565\u4e86\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5316\u7b80\uff0c\u5176\u4e2d\u91cd\u8981\u7684\u4e00\u6b65\u5c31\u662f\u8981\u5c06 $sum[i]$ \u8f6c\u5316\u4e3a $sum[i - 1] + A[i]$)\uff1a\n\n$(i - k - 2)A_i + sum[i] - sum[k] > (i - j - 2)A_i + sum[i] - sum[j]$\n\n\u8fd9\u4e2a\u5f0f\u5b50\u663e\u7136\u5c31\u77db\u76fe\u4e86\u3002\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\uff0c\u65e0\u8bba\u5982\u4f55\u6700\u4f73\u51b3\u7b56\u70b9\u90fd\u662f **\u5355\u8c03\u4e0d\u51cf** \u7684\u3002\n\n\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O($n^2$) , \u7a7a\u95f4\u590d\u6742\u5ea6: O($n$) \u5c31\u6c34\u8fc7\u53bb\u4e86\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\ninline int read() {\n    int x = 0 , flag = 1;\n    char ch = getchar();\n    for( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n    for( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n    return x * flag;\n}\nconst int MAXN = 5e4 + 50;\nint n,r,b,s;\nint disA[MAXN], disB[MAXN],start[MAXN],tot = 0,book[MAXN];\nint sum[MAXN], dp[MAXN][2];\nstruct Edge {\n    int next, to, w;\n} edge[MAXN << 1];\n\nstruct Dijk {\n    int id, dis;\n    bool operator <(const Dijk& A) const {return A.dis < dis;}\n} ;\n\nstruct Point {\n    int val,id;\n} P[MAXN];\n\npriority_queue <Dijk> q;\n\nvoid add(int from, int to, int w) {\n    edge[++tot].next = start[from];\n    edge[tot].to = to;\n    edge[tot].w = w;\n    start[from] = tot;\n    return ;\n}\n\nvoid Dijkstra(int *dis,int op) {\n    memset(book,0,sizeof(book));\n    for(int i = 1 ; i <= n ; i ++) dis[i] = 1e9 + 7;\n    dis[b + 1] = 0;\n    q.push({b + 1, 0});\n    while(!q.empty()) {\n        int x = q.top().id, d = q.top().dis; q.pop();\n        if(dis[x] != d) continue; \n        book[x] = 1;\n        for(int i = start[x] ; i ; i = edge[i].next) {\n            int to = edge[i].to, w = edge[i].w;\n            if(i % 2 == op) continue;\n            if(dis[x] + w < dis[to]) {\n                dis[to] = dis[x] + w;\n                if(!book[to]) q.push({to, dis[to]});\n            }\n        }\n    }\n    return ;\n}\n\nbool cmp(Point a, Point b) {return a.val < b.val;}\nint Q[5005];\n\nsigned main() {\n    n = read(), b = read(), s = read(), r = read();\n    for(int i = 1 ; i <= r ; i ++) {\n        int u = read(), v = read(), w = read();\n        add(u, v, w); add(v, u, w);\n    }\n    Dijkstra(disA, 0); Dijkstra(disB, 1);\n    for(int i = 1 ; i <= n ; i ++) {\n        P[i].val = disA[i] + disB[i];\n        P[i].id = i;\n    }\n    sort(P + 1, P + 1 + b , cmp);\n    for(int i = 1 ; i <= b ; i ++) sum[i] = sum[i - 1] + P[i].val;\n    int now = 1;\n    for(int i = 1 ; i <= b ; i ++) dp[i][1] = sum[i] * (i - 1);\n    for(int j = 2 ; j <= s ; j ++) {\n        now ^= 1;\n        memset(Q, 0, sizeof(Q));\n        for(int i = 1 ; i <= b ; i ++) dp[i][now] = 1e18 + 7;\n        for(int i = j ; i <= b ; i ++) {\n            for(int k = i - 1 ; k >= Q[i - 1] ; k --) {\n                if(dp[k][now ^ 1] + (sum[i] - sum[k]) * (i - k - 1) < dp[i][now]) Q[i] = k;\n                dp[i][now] = min(dp[i][now], dp[k][now ^ 1] + (sum[i] - sum[k]) * (i - k - 1));\n            }\n        }\n    }\n    cout << dp[b][now];\n    return 0;\n}\n```",
        "postTime": 1614163824,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 [WF2016] Branch Assignment"
    }
]