[
    {
        "content": "## \u5173\u4e8e\u6b64\u9898\u7684\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff1a\n\n\n\n\n\u6b64\u9898\u5176\u5b9e\u4e0d\u9700\u8981\u5176\u4ed6\u9898\u89e3\u7684 $ last$ \u6570\u7ec4\u6765\u8bb0\u5f55\u4ec0\u4e48\u7684\uff0c\u6574\u4f53\u4ee3\u7801\u957f\u5ea6\u4e5f\u6bd4\u8f83\u77ed\u3002\n\n\n\u5173\u952e\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\n  for (int i = 1; i <= n; i++) {\n    int val = ask(num[i]) - ask(num[i] - 1);\n    add(num[i], ask(num[i] - 1));\n    if (val) add(num[i], -val + 1);\n    else add(num[i], 1);\n  }\n```\n\n\u89e3\u91ca\u5982\u4e0b\uff1a\n\n$num[i] $ \u50a8\u5b58\u7684\u662f\u539f\u6765\u5e8f\u5217\u7684\u6570\uff0c\n\n$add()$\uff0c$ask()$  \u5bf9\u5e94\u7684\u662f\u6811\u72b6\u6570\u7ec4\u7684\u57fa\u64cd\uff0c\n\n\u5bf9\u4e8e\u5982\u4f55\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6765\u8003\u8651\uff1a\n\n\u5efa\u7acb\u6570\u7ec4 $c[i]$ \u4fdd\u5b58**\u5f53\u524d\u4ee5 $i$ \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570**\u3002\n\n\n------------\n\n\n\u5982\u4f55\u7ef4\u62a4 $c[i]$\uff1f\uff1a\n\n1.\u904d\u5386 $num[]$\u3002\n\n2.\u5982\u679c\u5f53\u524d\u7684\u6570\u5bf9\u5e94\u7684\u96c6\u5408\u4e3a\u7a7a\uff0c\u5219\u8981\u5c06 $ c[i] $ \u52a0\u4e00\uff0c\u8ba9\u5b83\u53d8\u6210 $ \\{i\\}$ \u53ea\u6709\u4e00\u4e2a $i$ \u5143\u7d20\uff0c\u65b9\u4fbf\u540e\u7eed\u8f6c\u79fb\u3002\n \n3.\u904d\u5386\u5230 $i$ \u65f6\uff0c\u6211\u4eec\u5c06\u5b83\u52a0\u4e0a $c[1]$ \u5230 $c[num[i]-1]$ \u7684\u548c\uff0c\u8fd9\u5e94\u8be5\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\uff0c\n\u4f46\u662f\u82e5 $c[i]$ \u672c\u8eab\u6709\u503c\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u51fa\u73b0\u4e86\u91cd\u590d\uff0c\u6b64\u65f6\u628a $c[i]$ \u5bf9\u5e94\u96c6\u5408\u7684\u5143\u7d20\u5168\u91cd\u65b0\u8ba1\u7b97\u4e86\u4e00\u904d\uff0c\u6240\u4ee5\u8981**\u51cf\u53bb $c[i]$ \u539f\u672c\u7684\u503c**\u3002\n\n4.\u6ce8\u610f $\\{i\\}$ \u6ca1\u6709\u88ab\u91cd\u590d\u8ba1\u7b97\uff0c\u6240\u4ee5\u8fd8\u8981 $+1$\u3002\n\n\n------------\n\n\n\u6240\u4ee5\u7b54\u6848\u5c31\u662f\uff1a\n\n`\ncout << ask(m) - m;\n`\n\n\u56e0\u4e3a $\\{i\\}$ \u4e0d\u7b97\u505a\u4e0a\u5347\u5e8f\u5217\u3002\n\nCODE\uff1a\n```cpp\n#include <bits/stdc++\u3002h>\n#define int long long\n#define mod 1000000000 + 7\n#define N 100007\nusing namespace std;\n\nint n, m;\nint num[N], c[N], ls[N];\n\nvoid add(int x, int v) {\n  for (; x <= m; x += x & -x) { c[x] += v; c[x] %= mod; }\n}\n\nint ask(int x) {\n  int ret = 0;\n  for (; x; x -= x & -x) { ret += c[x]; ret %= mod; }\n  return ret;\n}\n\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> num[i];\n    ls[i] = num[i];\n  }\n\n  sort(ls + 1, ls + n + 1);\n  m = unique(ls + 1, ls + n + 1) - (ls + 1);\n  for (int i = 1; i <= n; i++)\n    num[i] = lower_bound(ls + 1, ls + 1 + m, num[i]) - ls;\n\n  for (int i = 1; i <= n; i++) {\n    int val = ask(num[i]) - ask(num[i] - 1);\n    add(num[i], ask(num[i] - 1));\n    if (val) add(num[i], -val + 1);\n    else add(num[i], 1);\n  }\n  cout << ask(m) - m;\n\n  return 0;\n}\n```\n\n",
        "postTime": 1637897775,
        "uid": 615719,
        "name": "Deu5ExMach1na",
        "ccfLevel": 0,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217"
    },
    {
        "content": "\u8fd9\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a$dp$\n\n\u5982\u679c\u6ca1\u6709\"\u4e24\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u76f8\u540c,\u90a3\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\"\u8fd9\u4e00\u4e2a\u6027\u8d28\uff0c\u90a3\u4e48\u5c31\u5f88\u597d\u505a\u4e86\uff0c\u6211\u4eec\u7528$dp[i]$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u6709$dp[i]=\\sum_{j=1}^{i-1}dp[j]$\n\n\u8fd9\u4e2a\u66b4\u529b\u8f6c\u79fb\u662f$O(n^2)$\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u4f18\u5316\uff0c\u4e8e\u662f\u5c31\u53d8\u6210\u4e86$O(nlogn)$\n\n\u540c\u65f6\u7531\u4e8e\u6570\u5b57\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\n\n\u4e4b\u540e\u518d\u6765\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u53bb\u91cd\n\n\u9996\u5148\u91cd\u590d\u7684\u60c5\u51b5\u80af\u5b9a\u662f\u6765\u81ea\u4e8e\u4e00\u4e2a\u4e4b\u524d\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u800c\u8fd9\u4e2a\u51fa\u73b0\u7684\u6570\u53c8\u5c06\u6240\u6709\u4e4b\u524d\u90a3\u4e2a\u70b9\u7b97\u51fa\u6765\u7684\u7b54\u6848\u53c8\u90fd\u52a0\u4e86\u4e00\u904d\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u91cd\u590d\u7684\u4e86\n\n\u90a3\u6211\u4eec\u600e\u4e48\u53bb\u6389\u8fd9\u4e9b\u91cd\u590d\u7684\u60c5\u51b5\u5462\n\n\u9996\u5148\u76f4\u63a5\u4e0d\u8003\u8651\u8fd9\u4e2a\u518d\u6b21\u51fa\u73b0\u7684\u6570\u662f\u80af\u5b9a\u4e0d\u5bf9\u7684\uff0c**\u5982\u679c\u8fd9\u4e2a\u6570\u548c\u5b83\u4e4b\u524d\u51fa\u73b0\u7684\u90a3\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u6709\u4e00\u4e9b\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u7684\u6570\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5c31\u5c31\u6ca1\u6709\u88ab\u8ba1\u5165\u7b54\u6848\uff0c\u4e8e\u662f\u5c31\u9519\u4e86**\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u6570\u7ef4\u62a4\u4e00\u4e2a$lastans[i]$\uff0c\u8868\u793a$i$\u8fd9\u4e2a\u6570\u4e0a\u6b21\u88ab\u8ba1\u5165\u7b54\u6848\u7684\u65f6\u5019$\\sum_{j=1}^{i-1}dp[j]$\u662f\u591a\u5c11\uff0c\u4e4b\u540e\u6211\u4eec\u8fd8\u662f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u67e5\u8be2\u524d\u7f00\u548c\uff0c\u4e4b\u540e\u6211\u4eec\u8ba1\u5165\u7b54\u6848\u7684\u5e94\u8be5\u5c31\u662f\u8fd9\u6b21\u67e5\u8be2\u51fa\u6765\u7684\u7b54\u6848\u51cf\u53bb$lastans$\uff0c\u4e5f\u5c31\u662f\u8868\u793a\u65b0\u589e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u662f\u591a\u5c11\uff0c\u4e4b\u540e\u6211\u4eec\u518d\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<map>\n#include<algorithm>\n#define re register\n#define lowbit(x) ((x)&(-(x)))\n#define maxn 100005\n#define LL long long\n#define int long long\nconst LL mod=1e9+7;\nstd::map<LL,LL> ma;\nLL c[maxn];\nint n;\nLL a[maxn],b[maxn];\nLL lastans[maxn];\nint f[maxn];\ninline LL read()\n{\n\tchar c=getchar();\n\tLL x=0,r=1;\n\twhile(c<'0'||c>'9') \n\t{\n\t\tif(c=='-') r=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t  x=(x<<3)+(x<<1)+c-48,c=getchar();\n\treturn x*r;\n}\ninline void add(int x,LL v)\n{\n\tfor(re LL i=x;i<=n;i+=lowbit(i))\n\t\tc[i]=(c[i]+v)%mod;\n}\ninline LL query(LL x)\n{\n\tLL ans=0;\n\tfor(re LL i=x;i;i-=lowbit(i))\n\t\tans=(ans+c[i])%mod;\n\treturn ans;\n}\nsigned main()\n{\n\tn=read();\n\tfor(re int i=1;i<=n;i++) a[i]=b[i]=read();\n\tstd::sort(b+1,b+n+1);\n\tint tot=std::unique(b+1,b+1+n)-b-1;\n\tfor(re int i=1;i<=tot;i++)\n\t\tma[b[i]]=i;\n\tLL cnt=0;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tint j=ma[a[i]];\n\t\tif(!f[j])\n\t\t{\n\t\t\tLL mid=query(j-1);\n\t\t\tcnt=(cnt+mid)%mod;\n\t\t\tadd(j,mid+1);\n\t\t\tlastans[j]=mid;\n\t\t\tf[j]=1;\n\t\t\tcontinue;\n\t\t}\n\t\tLL mid=query(j-1);\n\t\tcnt=(cnt+mid-lastans[j]+mod)%mod;\n\t\tadd(j,(mid-lastans[j]+2*mod)%mod);\n\t\tlastans[j]=mid;\n\t}\n\tstd::cout<<cnt;\n\treturn 0;\n}\n```",
        "postTime": 1536906648,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3970)\n## \u601d\u8def\n\u677f\u5b50\u9898\uff0c\u5e94\u8be5\u662f\u5c5e\u4e8e\u7701\u9009\u9898\u4e2d\u6bd4\u8f83\u6c34\u7684\u9898\u3002\n\n\u9898\u76ee\u8981\u6c42\u5404\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u4e92\u4e0d\u76f8\u540c\uff0c\u5982\u679c\u5ffd\u7565\u8fd9\u4e2a\u9650\u5236\uff0c\u90a3\u4e48\u662f\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u677f\u5b50\uff0c\u5982\u679c\u52a0\u4e0a\u8fd9\u4e2a\u9650\u5236\uff0c\u4f3c\u4e4e\u4e5f\u6ca1\u6709\u96be\u505a\u5f88\u591a\u3002\n\n\u6211\u4eec\u8bbe $did_i$ \u8868\u793a\u503c\u4e3a $i$ \u7684\u6570\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u6ce8\u610f\u7531\u4e8e\u503c\u57df\u8f83\u5927\uff0c\u9700\u8981\u79bb\u6563\u5316\u3002\n\n+ \u82e5 $did_i=1$\uff0c\u6211\u4eec\u518d\u8bb0\u4e00\u4e2a $lastans_i$ \u8868\u793a\u4e0a\u4e00\u4e2a\u503c\u4e3a $i$ \u7684\u6570\u7684 $f_i$ \u7684\u503c\u662f\u591a\u5c11\uff0c\u6b64\u65f6\u6811\u72b6\u6570\u7ec4 $\\verb!update!$ \u5c31\u53ea\u80fd $\\verb!update!$ $f_i-lastans_i$\uff0c\u66f4\u65b0\u4e00\u4e0b $lastans_i$\u3002\n\n+ \u82e5 $did_i=0$\uff0c\u66f4\u52a0\u597d\u505a\uff0c\u76f4\u63a5 $\\verb!update!$ $f_i+1$\uff0c\u7136\u540e\u8bb0\u4e00\u4e0b $did_i$ \u548c $lastans_i$ \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint const N=1e6+10;\nint const mod=1e9+7;\nint a[N],b[N],f[N],n,lastans[N],did[N];\nstruct Tree_Array{\n    int c[N];\n    inline int lowbit(int x){return x&-x;}\n    inline void update(int x,int v){while (x<=n) c[x]+=v,c[x]%=mod,x+=lowbit(x);}\n    inline int query(int x){int res=0;while (x) res+=c[x],res%=mod,x-=lowbit(x);return res;}\n}T;//\u6811\u72b6\u6570\u7ec4\u677f\u5b50\uff0c\u4e0d\u518d\u8d58\u8ff0\nsigned main(){\n    ios::sync_with_stdio(false);\n    cout.tie(0),cout.tie(0);\n    cin>>n;int ans=0;\n    for (int i=1;i<=n;++i) cin>>a[i],b[i]=a[i];\n    sort(b+1,b+n+1);int l=unique(b+1,b+n+1)-b-1;\n    for (int i=1;i<=n;++i) a[i]=lower_bound(b+1,b+l+1,a[i])-b;\n    for (int i=1;i<=n;++i){\n        f[i]=T.query(a[i]-1);\n        if (did[a[i]]) T.update(a[i],(f[i]-lastans[a[i]]+mod+mod)%mod);\n        else T.update(a[i],(f[i]+1)%mod),did[a[i]]=1;\n        f[i]%=mod;\n        ans+=((f[i]-lastans[a[i]])%mod+mod)%mod;\n        ans%=mod;\n        lastans[a[i]]=f[i];\n    }\n    cout<<ans<<'\\n';\n    return 0;\n}\n```\n",
        "postTime": 1664854752,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217"
    },
    {
        "content": "## $\\texttt{Description}$\n\n\u6c42\u5e8f\u5217\u4e2d\u957f\u5ea6 $>1$ \u7684\u672c\u8d28\u4e0d\u540c\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u6570\u91cf\u3002\n\n$\\texttt{Data Range:}1\\le n\\le10^5$\n\n## $\\texttt{Solution}$\n\n\u5148\u770b\u5982\u679c\u4e0d\u7ba1\u7b97\u91cd\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u6734\u7d20 dp\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u4ee5\u5e8f\u5217\u7b2c $i$ \u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u6570\u91cf\u3002\n\n\u4e0d\u96be\u5f97\u5230\u8f6c\u79fb\uff1a\n\n$$f_i=\\sum\\limits_{j=1}^{i-1}f_j(a_j<a_i)$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n^2)$\n\n\u4e8c\u7ef4\u504f\u5e8f\u5bb9\u6613\u60f3\u5230\u7528\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u4f18\u5316\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u53bb\u91cd\u3002\n\n\u5bb9\u6613\u60f3\u5230\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u5143\u7d20\u503c\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u4ee5\u6700\u540e\u4e00\u4e2a\u8be5\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e00\u5b9a\u5305\u542b\u4e86\u4ee5\u524d\u9762\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u8fd9\u975e\u5e38\u7684\u76f4\u89c2\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a $\\mathrm{vector}$ \u6765\u7ef4\u62a4\u6bcf\u79cd\u5143\u7d20\u503c\u5bf9\u5e94\u7684\u6240\u6709 dp \u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u7b97\u6700\u7ec8\u7b54\u6848\u65f6\uff0c\u76f4\u63a5\u679a\u4e3e\u7ed3\u5c3e\u7684\u6570\uff0c\u7136\u540e\u5728\u5176\u5bf9\u5e94\u7684 $\\mathrm{vector}$ \u4e2d\u53d6\u51fa\u6700\u540e\u4e00\u4e2a\u7684 dp \u503c\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u4e5f\u4f1a\u7b97\u91cd\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u4ee5\u540c\u4e00\u4e2a\u503c\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u52a0\u4e86\u591a\u6b21\uff0c\u6240\u4ee5\u5bfc\u81f4\u91cd\u590d\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f88\u81ea\u7136\u5730\u60f3\u5230\u6bcf\u6b21\u65b0\u52a0\u5165\u4e00\u4e2a dp \u503c\u5230\u6811\u72b6\u6570\u7ec4\u4e2d\u65f6\uff0c\u5148\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u51cf\u53bb\u4e0a\u4e00\u4e2a\u4ee5\u76f8\u540c\u7684\u503c\u7ed3\u5c3e\u7684 dp \u503c\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u6c38\u8fdc\u662f\u5f53\u524d $\\mathrm{vector}$ \u4e2d\u7684\u6700\u540e\u4e00\u4e2a dp \u503c\uff0c\u5c31\u4e0d\u4f1a\u7b97\u91cd\u4e86\u3002\n\n## $\\texttt{Code}$\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\ninline ll mymod(ll x, ll y) {return ((x % y) + y) % y;}\n\nint a[100005], b[100005];\nll dp[100005];\nvector<ll> vec[100005];\n\nstruct BIT {\n\tll c[100005];\n\t\n\tinline void update(int x, ll d) {\n\t\tfor (int i = x; i <= 1e5; i += i & -i) c[i] = mymod(c[i] + d, mod);\n\t}\n\t\n\tinline ll query(int x) {\n\t\tll res = 0;\n\t\tfor (int i = x; i; i -= i & -i) res = mymod(res + c[i], mod);\n\t\treturn res;\n\t}\n} bit;\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), b[i] = a[i];\n\tsort(b + 1, b + 1 + n);\n\tfor (int i = 1; i <= n; i++) a[i] = lower_bound(b + 1, b + 1 + n, a[i]) - b, dp[i] = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (vec[a[i]].size()) bit.update(a[i], -vec[a[i]][vec[a[i]].size() - 1]);\n\t\tdp[i] = (dp[i] + bit.query(a[i] - 1)) % mod;\n\t\tbit.update(a[i], dp[i]);\n\t\tvec[a[i]].push_back(dp[i]);\n\t}\n\tll ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vec[i].size()) continue;\n\t\tans = (ans + vec[i][vec[i].size() - 1]) % mod;\n\t\tans = mymod(ans - 1, mod);\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1644670859,
        "uid": 365542,
        "name": "SDqwq",
        "ccfLevel": 7,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217"
    },
    {
        "content": "\u9898\u76ee\u662f\u5bf9\u539f\u6570\u5217\u7684\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u8ba1\u6570\u3002\n\n\u6734\u7d20 dp \u7684\u590d\u6742\u5ea6\u662f $ \\mathcal{O}(n^2) $ \u7684\uff0c\u96be\u4ee5\u63a5\u53d7\uff0c\u4f46\u6ce8\u610f\u5230 dp \u65b9\u7a0b\u53ef\u4ee5\u7b80\u5316\u4e3a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7b80\u5355\u7ef4\u62a4\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n \\log{n}) $\u3002\n\n\u4f46\u662f\u6570\u636e\u7684\u503c\u57df\u592a\u5927\uff0c\u9700\u8981\u5148\u79bb\u6563\u5316\u4e4b\u540e\u518d\u7528\u6811\u72b6\u6570\u7ec4\u5904\u7406\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5b58\u5728\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u5e8f\u5217\u91cc\u7684\u6570\u5b57\u53ef\u80fd\u4f1a\u91cd\u590d\u3002\n\n\u8003\u8651\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u7684\u91cd\u590d\u6570\u5b57\u4e00\u5b9a\u5305\u542b\u4e86\u4ee5\u524d\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u53ef\u4ee5\u5728\u6240\u6709\u7684\u91cd\u590d\u6570\u5b57\u4e2d\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u5373\u53ef\uff0c\u5305\u542b\u4e86\u5f53\u524d\u7684\u6240\u6709\u7b54\u6848\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u6b63\u786e\u6027\u3002\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u65f6\u53bb\u6389\u957f\u5ea6\u4e3a $ 1 $ \u7684\u60c5\u51b5\uff0c\u5373\u4e3a\u6570\u5217\u4e2d\u6570\u5b57\u7684\u79cd\u7c7b\u6570\u91cf\u3002\n\n\u5176\u4e2d\u66f4\u65b0\u7b54\u6848\u65f6\u9700\u8981\u4e00\u4e2a\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u8be2\u95ee\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u8fd9\u91cc\u4f7f\u7528\u4e86 LCT \u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal{O}(n \\log{n}) $\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u56e0\u4e3a LCT \u7279\u6709\u7684\u81ea\u5e26\u5927\u5e38\u6570\uff0c\u672c\u4efd\u4ee3\u7801\u559c\u63d0\u672c\u9898\u6700\u52a3\u89e3\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long//\u4fdd\u9669\nconst int maxn=2e5+10;\nconst int mod=1e9+7;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n    while (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint c[2000020],tag[2000020],n;\nstruct Splay\n{\n    int ch[maxn][2],fa[maxn],siz[maxn],val[maxn],sum[maxn],add[maxn],mul[maxn],rev[maxn];\n    void clear(int x)\n    {\n        ch[x][0]=ch[x][1]=fa[x]=siz[x]=val[x]=sum[x]=add[x]=rev[x]=0;\n        mul[x]=1;\n    }\n    int getch(int x)\n    {\n        return (ch[fa[x]][1]==x);\n    }\n    int isroot(int x)\n    {\n        clear(0);\n        return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n    }\n    void maintain(int x)\n    {\n        clear(0);\n        siz[x]=(siz[ch[x][0]]+1+siz[ch[x][1]]);\n        sum[x]=(sum[ch[x][0]]+val[x]+sum[ch[x][1]])%mod;\n    }\n    void pushdown(int x)\n    {\n        clear(0);\n        if(mul[x]!=1)\n        {\n            if(ch[x][0])\n            mul[ch[x][0]]=(mul[x]*mul[ch[x][0]])%mod,val[ch[x][0]]=(val[ch[x][0]]*mul[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]*mul[x])%mod,add[ch[x][0]]=(add[ch[x][0]]*mul[x])%mod;\n            if(ch[x][1])\n            mul[ch[x][1]]=(mul[x]*mul[ch[x][1]])%mod,val[ch[x][1]]=(val[ch[x][1]]*mul[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]*mul[x])%mod,add[ch[x][1]]=(add[ch[x][1]]*mul[x])%mod;\n            mul[x]=1;\n        }\n        if(add[x])\n        {\n            if(ch[x][0])\n            add[ch[x][0]]=(add[ch[x][0]]+add[x])%mod,val[ch[x][0]]=(val[ch[x][0]]+add[x])%mod,sum[ch[x][0]]=(sum[ch[x][0]]+add[x]*siz[ch[x][0]])%mod;\n            if(ch[x][1])\n            add[ch[x][1]]=(add[ch[x][1]]+add[x])%mod,val[ch[x][1]]=(val[ch[x][1]]+add[x])%mod,sum[ch[x][1]]=(sum[ch[x][1]]+add[x]*siz[ch[x][1]])%mod;\n            add[x]=0;\n        }\n        if(rev[x])\n        {\n            if(ch[x][0])\n            rev[ch[x][0]]^=1,swap(ch[ch[x][0]][0],ch[ch[x][0]][1]);\n            if(ch[x][1])\n            rev[ch[x][1]]^=1,swap(ch[ch[x][1]][0],ch[ch[x][1]][1]);\n            rev[x]=0;\n        }\n    }\n    void update(int x)\n    {\n        if(!isroot(x))\n        update(fa[x]);\n        pushdown(x);\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],chx=getch(x),chy=getch(y);\n        fa[x]=z;\n        if(!isroot(y))\n        ch[z][chy]=x;\n        ch[y][chx]=ch[x][chx^1];\n        fa[ch[x][chx^1]]=y;\n        ch[x][chx^1]=y;\n        fa[y]=x;\n        maintain(y);\n        maintain(x);\n        maintain(z);\n    }\n    void splay(int x)\n    {\n        update(x);\n        for(int f=fa[x];f=fa[x],!isroot(x);rotate(x))\n        if(!isroot(f))\n        rotate(getch(x)==getch(f)?f:x);\n    }\n    void access(int x)\n    {\n        for(int f=0;x;f=x,x=fa[x])\n        splay(x),ch[x][1]=f,maintain(x);\n    }\n    void makeroot(int x)\n    {\n        access(x);\n        splay(x);\n        swap(ch[x][0],ch[x][1]);\n        rev[x]^=1;\n    }\n    int find(int x)\n    {\n        access(x);\n        splay(x);\n        while(ch[x][0])\n        x=ch[x][0];\n        splay(x);\n        return x;\n    }//\u524d\u9762\u90fd\u662fLCT\u677f\u5b50\u90e8\u5206\n    void added(int u,int c)\n    {\n        int v=u;\n        makeroot(u), access(v), splay(v);\n      val[u] = (val[v] + c) ;\n      sum[v] = (sum[v] + siz[v] * c ) ;\n      add[v] = (add[v] + c) ;\n        return;\n    }//\u5355\u70b9\u52a0\uff08\u76f8\u5f53\u4e8e\u5bf9\u533a\u95f4[u,u]\u52a0\uff09\n    int query(int u)\n    {\n        if(u==0)\n            return 0;\n        int v=1;\n        makeroot(u), access(v), splay(v);\n        return sum[v];\n    }//\u533a\u95f4\u67e5\u8be2\uff08\u6ce8\u610f\u7279\u5224u=0\u7684\u60c5\u51b5\uff0c\u5728\u8f6c\u5316\u524d\u7f00\u548c\u65f61-1=0\u4f1a\u51fa\u95ee\u9898\uff09\n    void link(int u,int v)\n    {\n    if (find(u) != find(v)) \n    makeroot(u), fa[u] = v;\n    }\n}st;\nint c1[maxn],d1[maxn],c2[maxn],d2[maxn],a[maxn],b[maxn],lst[maxn];\nsigned main()\n{\n        int n;\n        cin>>n;\n        for(int i=1;i<=n;i++)\n            a[i]=read(),b[i]=a[i];\n            sort(b+1,b+n+1);\n            int len=unique(b+1,b+n+1)-b-1;\n        for(int i=1;i<=maxn/2;i++)\n        st.clear(i),st.val[i]=0,st.maintain(i),st.splay(i);\n        for(int i=0;i<=100000;++i)\n        st.sum[i]=0;\n        for(int i=1;i<100000;i++)\n            st.link(i,i+1);\n            for(int i=1;i<=n;i++)\n            {\n            a[i]=lower_bound(b+1,b+len+1,a[i])-b;\n            int delta=st.query(a[i]-1)+1-lst[a[i]];\n            st.added(a[i],delta);\n\t\t    lst[a[i]]+=delta;\n            }\n        cout<<st.query(len)-len<<'\\n';\n}\n```\n",
        "postTime": 1658246518,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "P3970\u9898\u89e3"
    },
    {
        "content": "\u4e4b\u524d\u83ab\u540d\u5176\u5999\u4e00\u76f4 $80$ \u5206\uff0c\u4eca\u5929\u7a81\u7136\u770b\u5230\u8fd9\u9898\uff0c\u5c31\u987a\u624b\u628a\u5b83\u8fc7\u4e86\u3002\n\n\u9996\u5148\u4e0d\u8003\u8651\u53bb\u91cd\u548c\u957f\u5ea6\u5927\u4e8e $1$\uff0c\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\u8fd8\u662f\u5f88\u597d\u6c42\u7684\uff0c\u5927\u6982\u662f DP \u8bbe $dp_i$ \u8868\u793a\u4ee5 $a_i$ \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\u8f6c\u79fb\u65b9\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a\n\n$$dp_i=1+\\sum_{j=1}^{i-1}dp_j[a_j<a_i]$$\n\n\u5bb9\u6613\u7528\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\u4f18\u5316\u81f3 $O(n\\log n)$\u3002\u63a5\u4e0b\u6765\u4e3b\u8981\u53bb\u91cd\u7684\u95ee\u9898\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u7684\u662f\uff0c\u5982\u679c\u5b58\u5728 $i,j(i<j)$ \u6ee1\u8db3 $a_i=a_j$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u9762\u4e00\u4e2a\u70b9 $k(j<k)$ \u7684\u8d21\u732e\u5e94\u5f53\u53ea\u8ba1\u7b97 $j$ \u63d0\u4f9b\u7684\u800c\u4e0d\u8ba1\u7b97 $i$ \u7684\u3002\u6240\u4ee5\u5728\u8ba1\u7b97\u5b8c $j$ \u7684 $dp_j$ \u540e\uff0c\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u8981\u628a $dp_i$ \u7ed9\u51cf\u6389\u3002\u8fd9\u6837\u5c31\u4e0d\u4f1a\u7b97\u91cd\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a $a_j$ \u524d\u9762\u7b2c\u4e00\u4e2a\u548c\u5b83\u76f8\u7b49\u7684\u4f4d\u7f6e $a_j$\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u4e86\u3002\n\n\u6700\u540e\u5728\u51cf\u53bb\u957f\u5ea6\u4e3a $1$ \u7684\u60c5\u51b5\u3002\u6ce8\u610f\u8981\u79bb\u6563\u5316\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u5947\u602a\uff08\u79bb\u6563\u5316\u7528\u7684 map\uff09\uff0c\u8bf7\u7406\u6027\u53c2\u8003\u3002\n\n```cpp\n// By: Little09\n// Problem: P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P3970\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint n;\nconst ll mod=1000000007;\nconst int N=500005;\nll tree[N];\nll a[N],b[N],dp[N];\nint used[N],pre[N];\nint cnt;\nmap<int,int>q;\ninline int lowbit(int x)\n{\n\treturn x&(-x);\n}\ninline void add(int x,ll k)\n{\n\tfor (;x<=n;x+=lowbit(x)) tree[x]=(k+tree[x])%mod;\n}\ninline ll ask(int x)\n{\n\tll ans=0;\n\tfor (;x;x-=lowbit(x)) ans=(tree[x]+ans)%mod;\n\treturn ans;\n}\ninline int read()\n{\n    int F=1,ANS=0;\n\tchar C=getchar();\n    while (C<'0'||C>'9')\n\t{\n\t\tif (C=='-') F=-1;\n\t\tC=getchar();\n\t}\n    while (C>='0'&&C<='9')\n\t{\n\t\tANS=ANS*10+C-'0';\n\t\tC=getchar();\n\t}\n    return F*ANS;\n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) b[i]=a[i]=read();\n\tsort(b+1,b+n+1);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (i==1||b[i]!=b[i-1]) q[b[i]]=++cnt;\n\t}\n\tfor (int i=1;i<=n;i++) \n\t{\n\t\tint u=q[a[i]];\n\t\tpre[i]=used[u];\n\t\ta[i]=u;\n\t\tused[u]=i;\n\t}\n\tdp[1]=1;\n\tadd(a[1],1);\n\tfor (int i=2;i<=n;i++)\n\t{\n\t\tif (pre[i]==0) \n\t\t{\n\t\t\tdp[i]=(ask(a[i]-1)+1)%mod;\n\t\t\tadd(a[i],dp[i]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdp[i]=(ask(a[i]-1)+1)%mod;\n\t\t\tadd(a[i],dp[i]-dp[pre[i]]);\n\t\t}\n\t}\n\tll ans=ask(n);\n\tfor (int i=1;i<=n;i++) ans=(ans-(pre[i]==0));\n\tcout << ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1631715136,
        "uid": 151475,
        "name": "Little09",
        "ccfLevel": 8,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3970)\n\n\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u8ba1\u6570\u95ee\u9898\uff0c\u6b63\u597d\u8fd9\u51e0\u5929\u603b\u7ed3\u4e86\u4e00\u4e0b[LIS\u5404\u7c7b\u95ee\u9898\u7684\u89e3\u6cd5](https://www.luogu.com.cn/blog/zhouyuhang/qian-tan-zui-zhang-shang-sheng-zi-xu-lie-wen-ti-zong-piao-su-dp-dao-l)\uff0c\u5c31\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u5206\u6790\u5b8c\u9898\u76ee\uff0c\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5 dp\u3002$dp[i]$ \u8868\u793a **\u5f53\u524d\u4ee5 \u6570\u5b57 $i$ \u4e3a\u7ed3\u5c3e\u7684\u4e0d\u91cd\u590d\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570**\u3002\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$dp[i]=\\sum_{j=1}^{i-1}dp[j]+1$\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u518d\u52a0\u4e0a\u539f\u5e8f\u5217\u7684\u6570\u636e\u8303\u56f4\u540c\u6837\u5f88\u5927\uff0c\u65f6\u95f4\u7a7a\u95f4\u90fd\u4f1a\u7206\u3002\u6ce8\u610f\u5230\u4e0a\u5347\u5b50\u5e8f\u5217\u53ea\u5173\u5fc3\u6570\u5b57\u7684\u76f8\u5bf9\u5173\u7cfb\uff0c\u56e0\u6b64\u5148\u5bf9\u539f\u6570\u7ec4\u505a\u79bb\u6563\u5316\uff0c\u518d\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4 $dp[]$\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u52a0\u548c\u64cd\u4f5c\u5373\u53ef\u3002\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $2$\uff0c\u6545\u6700\u7ec8\u7684\u8f93\u51fa\u5e94\u5f53\u51cf\u53bb\u5e8f\u5217\u4e2d\u4e0d\u540c\u6570\u5b57\u7684\u4e2a\u6570\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n$Code$:\n\n```cpp\n#include<iostream>\n#include<cstdio> \n#include<algorithm>\nusing namespace std;\nconst int MAXN=1e5+10,Mod=1e9+7; \nstruct seg_tr{\n\tint l,r,v;\n}tr[4*MAXN];\nstruct arr{\n\tint v,loc;\n}a[MAXN];\nint n,b[MAXN],cnt=1;\nvoid build(int k,int l,int r){\n\ttr[k].l=l;\n\ttr[k].r=r;\n    if(l==r) return;\n    int mid=l+r>>1;\n    build(k<<1,l,mid);\n    build(k<<1|1,mid+1,r);\n} \nvoid change(int k,int x,int v){\n\tif(tr[k].l==tr[k].r){\n\t\ttr[k].v=v%Mod;\n\t\treturn;\n\t}\n\tif(tr[k<<1].r>=x) change(k<<1,x,v);\n\telse change(k<<1|1,x,v);\n\ttr[k].v=(tr[k<<1].v+tr[k<<1|1].v)%Mod;\n}\nint query(int k,int l,int r){\n\tif(tr[k].l>=l&&tr[k].r<=r) return tr[k].v;\n\tif(tr[k].l>r||tr[k].r<l) return 0;\n\treturn (query(k<<1,l,r)+query(k<<1|1,l,r))%Mod;\n}\nbool cmp(arr x,arr y){return x.v<y.v;}\nint mian(){\n\tios::sync_with_stdio(0);\n    cin>>n;\n    for(int i=1;i<=n;i++){\n    \tcin>>a[i].v;\n    \ta[i].loc=i;\n\t}\n\tsort(a+1,a+1+n,cmp);\n    b[a[1].loc]=1;\n\tfor(int i=2;i<=n;i++){\n\t\tif(a[i].v==a[i-1].v) b[a[i].loc]=b[a[i-1].loc];\n\t\telse b[a[i].loc]=++cnt;\n\t}\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint x=query(1,1,b[i]-1)+1;\n\t\tchange(1,b[i],x);\n\t}\n\tcout<<(tr[1].v-cnt+Mod)%Mod<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1627813813,
        "uid": 314991,
        "name": "zhouyuhang",
        "ccfLevel": 7,
        "title": "[TJOI] \u4e0a\u5347\u5b50\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684$DP$\n\n\u4e0d\u59a8\u8bbe\uff1a\n\n$\\large f_i:$\u4ee5\u7b2c$i$\u4e2a\u6570\u4e3a\u7ed3\u5c3e\u7684\u9012\u589e\u5e8f\u5217\u6570\n\n\u5982\u679c\u6ca1\u6709\u90a3\u4e2a\u53bb\u91cd\u7684\u9650\u5236\u7684\u8bdd\uff0c\u90a3\u4e48$f_i$\u975e\u5e38\u597d\u6c42\uff1a\n\n$\\large f_i=\\sum\\limits_{j=1}^i f_j(a_j<a_i)$\n\n\u76f4\u63a5\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u6216\u8005\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5c31\u597d\u4e86\n\n\u8003\u8651\u52a0\u4e0a\u53bb\u91cd\u7684\u9650\u5236\n\n\u5f88\u660e\u663e\uff0c\u5982\u679c$k_1<k_2$\uff0c\u90a3\u4e48$f_{k_1}\\leq f_{k_2}$\u4e14\u6240\u6709\u4ee5$k_1$\u4e3a\u7ed3\u5c3e\u7684\u5e8f\u5217\u90fd\u53ef\u4ee5\u4ee5$k_2$\u7ed3\u5c3e\uff0c\u5373$f_{k_1}$\u53ef\u4ee5\u820d\u5f03\uff0c\u4fdd\u7559$f_{k_2}$\u5c31\u597d\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u4e00\u679a\u4e3e\u5230$n$\uff0c\u51fa\u73b0\u91cd\u590d\u7684\u6570\u5c31\u628a\u4e4b\u524d\u90a3\u4e2a\u6570\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u7684\u503c\u8986\u76d6\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 100005\n#define ll long long\nusing namespace std;\nconst ll TT=1e9+7;\nint n,A[maxn],x,tot,c[maxn],L,R;\nll Ans,f[maxn];\nbool vis[maxn];\nstruct lc{\n\tint x,id;\n\tbool operator <(const lc b)const{return x<b.x;}\n}a[maxn];\nstruct Lc{\n\tint L,R;\n\tll x;\n}tree[maxn<<2];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\ninline int get(int x){int sum=0;for (;x;x-=x&-x) sum+=c[x];return sum;}\ninline void change(int x){for (;x<=n;x+=x&-x) c[x]++;}\ninline void build(int k,int L,int R){\n\ttree[k].L=L,tree[k].R=R;\n\tif (L==R) return;\n\tint mid=L+R>>1;\n\tbuild(k<<1,L,mid);build(k<<1|1,mid+1,R);\n}\ninline ll Get(int k){\n\tif (L<=tree[k].L&&tree[k].R<=R) return tree[k].x;\n\tint mid=tree[k].L+tree[k].R>>1;ll sum=0;\n\tif (L<=mid) sum=Get(k<<1);\n\tif (R>mid) sum+=Get(k<<1|1);\n\treturn sum%TT;\n}\ninline void Change(int k,int x,ll y){\n\tif (tree[k].L==tree[k].R){tree[k].x=y;return;}\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (x<=mid) Change(k<<1,x,y);\n\telse Change(k<<1|1,x,y);\n\ttree[k].x=(tree[k<<1].x+tree[k<<1|1].x)%TT;\n}\nint main(){\n\tn=read();\n\tfor (int i=1;i<=n;i++) x=read(),a[i]=(lc){x,i};\n\tsort(a+1,a+n+1);\n\tfor (int i=1;i<=n;i++){\n\t\tif (a[i].x!=a[i-1].x||i==1) tot++;\n\t\tA[a[i].id]=tot;\n\t}\n\tbuild(1,1,tot);\n\tfor (int i=1;i<=n;i++){\n\t\tf[i]=get(A[i]-1);\n\t\tif (!vis[A[i]]) change(A[i]),vis[A[i]]=1;\n\t\tL=1,R=A[i]-1;f[i]=(f[i]+Get(1))%TT;Change(1,A[i],f[i]);\n\t}\n\tL=1,R=tot;\n\tprintf(\"%lld\",Get(1));\n\treturn 0;\n}\n```\n",
        "postTime": 1594726163,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5e8f\u5217 $a[1] \\sim a[n] (n \\le 10^5)$\uff0c\u8ba1\u7b97\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u76f8\u540c\u7684\u5b50\u5e8f\u5217\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002\n## Solution\n\u8003\u8651\u4f7f\u7528 DP \u8ba1\u7b97\uff0c\u8bbe $f[i]$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff0c\u4e0d\u96be\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$f[i]=\\sum f[j](a[j] \\lt a[i])$\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u8f6c\u79fb\u662f $O(n^2)$ \u7684\uff0c\u663e\u7136\u901a\u8fc7\u4e0d\u4e86\u6781\u9650\u6570\u636e\uff0c\u9700\u8981\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4f18\u5316\uff0c\u53c8\u6ce8\u610f\u5230\u9898\u76ee\u8bf4\u76f8\u540c\u7684\u5b50\u5e8f\u5217\u53ea\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u5bf9\u4e8e\u76f8\u540c\u7684 $a[i]$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d6\u6700\u9760\u540e\u7684\u90a3\u4e2a $f[i]$ \u7684\u503c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u4f18\u5316\uff0c\u9996\u5148\u8981\u79bb\u6563\u5316\u4e00\u4e0b $a[i]$ \u5230\u6570\u7ec4\u7a7a\u95f4\u53ef\u4ee5\u627f\u53d7\u4f4f\u7684\u8303\u56f4\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u79bb\u6563\u5316\u4e4b\u540e\u7684 $a[i]$\uff0c\u6211\u4eec\u5bf9\u8868\u793a $1 \\sim a[i]-1$ \u7684\u533a\u95f4\u8fdb\u884c\u6c42\u548c\u7136\u540e\u5355\u70b9\u4fee\u6539\u5b58\u5230\u8868\u793a $a[i]$ \u7684\u8282\u70b9\u4e0a\uff0c\u6700\u540e\u8f93\u51fa\u533a\u95f4\u7684\u603b\u548c\u5373\u53ef\u3002\n## CODE\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define MO 1000000007\n#define ll long long\nusing namespace std;\nstruct arr {\n\tll x; int id;\n} a[N];\nstruct segment {\n\tll val, num;\n} tree[N << 2];\nint b[N], n;\nbool cmp(arr x, arr y) {\n\treturn x.x < y.x;\n}\nvoid change(int u, int l, int r, int x, ll k) {\n\tif (l == r) {\n\t\ttree[u].val = k; tree[u].num = 1; return;\n\t} int mid = l + r >> 1;\n\tif (x <= mid) change(u << 1, l, mid, x, k); else change(u << 1 | 1, mid + 1, r, x, k);\n\ttree[u].val = (tree[u << 1].val + tree[u << 1 | 1].val) % MO; tree[u].num = (tree[u << 1].num + tree[u << 1 | 1].num) % MO;\n}\nll find(int u, int l, int r, int x, int y) {\n\tif (l > r || x > y || l > y || x > r) return 0;\n\tif (l >= x && r <= y) return (tree[u].val + tree[u].num) % MO;\n\tint mid = l + r >> 1; ll res = 0;\n\tif (x <= mid) res = (res + find(u << 1, l, mid, x, y)) % MO;\n\tif (y > mid) res = (res + find(u << 1 | 1, mid + 1, r, x, y)) % MO; return res;\n}\nint main() {\n\tfreopen(\"subsequence.in\", \"r\", stdin); freopen(\"subsequence.out\", \"w\", stdout);\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%lld\", &a[i].x); a[i].id = i; \n\t} sort(a + 1, a + 1 + n, cmp); int cnt = 0; a[0].x = -1e9 - 1;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (a[i].x != a[i - 1].x) ++cnt; b[a[i].id] = cnt;\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tll sum = find(1, 1, cnt, 1, b[i] - 1); change(1, 1, cnt, b[i], sum);\n\t} printf(\"%lld\\n\", tree[1].val);\n\treturn 0;\n} \n```",
        "postTime": 1642300281,
        "uid": 37885,
        "name": "\u51b7\u7b11\u53f9\u79cb\u8427",
        "ccfLevel": 0,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "_\u63a8\u9500\u535a\u5ba2\uff1ahttps://www.cnblogs.com/syc233/p/13693730.html_\n\n---\n\n\u5148\u4e0d\u8003\u8651\u5e8f\u5217\u957f\u5ea6\u81f3\u5c11\u4e3a $2$ \u7684\u9650\u5236\u548c\u53bb\u91cd\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684DP\uff1a\n\n\u4ee4 $f_i$ \u8868\u793a\u4ee5 $a_i$ \u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf_i=\\sum_{j=1}^{i-1}f_j[a_j<a_i]\n$$\n\u76f4\u63a5\u8f6c\u79fb $O(n^2)$ \uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5230 $O(n \\ {\\rm{\\log}} \\ n)$ \u3002\n\n\u8003\u8651\u5982\u4f55\u53bb\u91cd\u3002\u53d1\u73b0\u82e5\u5bf9\u4e8e\u5f53\u524d\u6570 $a_i$ \uff0c\u5b58\u5728 $a_j=a_i,1\\leq j<i$ \uff0c\u90a3\u4e48 $a_i$ \u5bf9\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u8d21\u732e\u4f1a\u4e0e $a_j$ \u7684\u8d21\u732e\u91cd\u590d\u3002\n\n\u663e\u7136\uff0c\u80fd\u8f6c\u79fb\u5230 $j$ \u7684\u72b6\u6001\u4e00\u5b9a\u80fd\u8f6c\u79fb\u5230 $i$ \uff0c\u80fd\u8f6c\u79fb\u5230 $i$ \u7684\u72b6\u6001\u4e0d\u4e00\u5b9a\u80fd\u8f6c\u79fb\u5230 $j$ \uff0c\u5373\u91cd\u5408\u90e8\u5206\u5c31\u662f $f_j$ \u3002\n\n\u8f6c\u79fb\u65f6\uff0c\u5bf9\u4e8e\u503c\u57df\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570 $x$\uff0c\u8bb0\u5f55\u4e0a\u4e00\u6b21\u8ba1\u7b97\u51fa\u7684 $f_i,a_i=x$ \u3002\u8f6c\u79fb\u65f6\u5c06\u91cd\u590d\u90e8\u5206\u51cf\u53bb\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5e8f\u5217\u957f\u5ea6\u81f3\u5c11\u4e3a $2$ \uff0c\u6700\u540e\u518d\u51cf\u53bb\u957f\u5ea6\u4e3a $1$ \u7684\u60c5\u51b5\u3002\n\n---\n\n$\\text{Code}:$\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#define maxn 100005\n#define Rint register int\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long lxl;\nconst lxl mod=1e9+7;\n\ntemplate <typename T>\ninline void read(T &x)\n{\n\tx=0;T f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\tx*=f;\n}\n\nint n,a[maxn],b[maxn],m;\n\nlxl sum[maxn],las[maxn];\n\ninline int lowbit(int x) {return x&-x;}\n\ninline void add(int x,lxl d)\n{\n\tfor(int i=x;i<=m;i+=lowbit(i))\n\t\t(sum[i]+=d)%=mod;\n}\n\ninline lxl query(int x)\n{\n\tlxl res=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\t(res+=sum[i])%=mod;\n\treturn res;\n}\n\nint main()\n{\n\t// freopen(\"P3970.in\",\"r\",stdin);\n\tread(n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tread(a[i]);\n\t\tb[i]=a[i];\n\t}\n\tsort(b+1,b+n+1);\n\tm=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i]=lower_bound(b+1,b+m+1,a[i])-b;\n\t\tlxl val=query(a[i]-1)+1-las[a[i]];\n\t\tadd(a[i],val);\n\t\tlas[a[i]]+=val;\n\t}\n\tprintf(\"%lld\\n\",query(m)-m);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1600437668,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u4e0a\u5347\u5b50\u5e8f\u5217 \u5c31\u662f\u6ee1\u8db3\u4e25\u683c\u9012\u589e\n\n\u5148\u8003\u8651\u5927\u4f53\u601d\u8def\uff1a\n\n\u5982\u679c\u9898\u76ee\u6ca1\u6709\u8981\u6c42\u201c\u5982\u679c\u4e24\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\u76f8\u540c,\u90a3\u4e48\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\u201d\uff0c\u90a3\u4e48\u5c31\u975e\u5e38\u53cb\u597d\u4e86\n\ndp\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u7b80\u5355 \n\ndp[i]=\u03a3dp[j] (0<j<i)\n\n\u4f46\u662f\u73b0\u5728\u8981\u6c42\u76f8\u540c\u7684\u53ea\u80fd\u8bb0\u4e00\u6b21\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u6570\u7ec4la\uff08lastans\uff09[]\u8bb0\u5f55\n\n\u90a3\u4e48\u8fd9\u4e2a\u6570\u7ec4\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u5728a[i]\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6 \u6211\u4eec\u8bb0\u5f55\u4e0b\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\u4e0a\u5347\u5b50\u5e8f\u5217\n\n\u5373la[i]=\u5b50\u5e8f\u5217\u4e2a\u6570\n\n\u5728a[i]\u7b2c\u4e8c\u6b21\u51fa\u73b0\u65f6 \u4ecd\u7136\u5148\u8ba1\u7b97\u5b83\u524d\u9762\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff08\u5047\u8bbe\u4e3aans1\uff09 \n\n\u4f46\u56e0\u4e3a\u5176\u4e2d\u6709\u4e00\u90e8\u5206\u5df2\u7ecf\u5728\u7b2c\u4e00\u6b21\u9047\u5230a[i]\u65f6\u6c42\u89e3\u8fc7\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u7528ans1-la[a[i]] \n\n\u8fd9\u5c31\u662f\u7b2c\u4e00\u4e2aa[i]\u4e0e\u7b2c\u4e8c\u4e2aa[i]\u4e4b\u95f4\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\n\n \n\n\u5177\u4f53\u7ec6\u8282\uff1a\n\n\u5982\u679c\u7528\u4e00\u822cdp\u7684\u65b9\u6cd5\u6c42\u89e3 \u5927\u6982\u53ea\u80fd\u8fc7\u524d30%\n\n\u5bf9\u4e8e100% \u7684\u6570\u636e \u6211\u4eec\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\uff08\u5b89\u5229\uff09\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u53ef\u4ee5\u4eceO(n^2)\u964d\u5230O(nlogn)\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u79bb\u6563\u5316\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5566\n```\nusing namespace std;\nconst int mod=1e9+7;\nconst int mxn=1e5+5;\ntypedef long long ll;\nll a[mxn],b[mxn],ans;\nint n,sz;\nbool v[mxn];\nll ld[mxn],f[mxn];\nll lowbit(ll x){\n    return x&(-x);\n}\nvoid motify(ll x,ll w){\n    for(;x<=n;x+=lowbit(x)){\n        f[x]=(f[x]+w)%mod;\n    }\n}\nll get(ll x){\n    ll temp=0;\n    for(;x;x-=lowbit(x)){\n        temp=(temp+f[x])%mod;\n    }\n    return temp;\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);\n    sz=unique(b+1,b+n+1)-(b+1);\n    for(int i=1;i<=n;i++){\n        a[i]=lower_bound(b+1,b+sz+1,a[i])-b;\n    }\n    ans=0;\n    for(int i=1;i<=n;i++){\n        if(!v[a[i]]){\n            v[a[i]]=1;\n            ll t=get(a[i]-1);\n            ans=(ans+t)%mod;\n            ld[a[i]]=t;\n            motify(a[i],t+1);\n            continue;\n        }\n        v[a[i]]=1;\n        ll t=get(a[i]-1);\n        ans=(ans+t-ld[a[i]]+mod)%mod;\n        motify(a[i],(t-ld[a[i]]+2*mod)%mod);\n        ld[a[i]]=t;\n    }\n    std::cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1571057568,
        "uid": 180336,
        "name": "DUO_JIaMInG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\n\u8fd9\u9898\u6ca1\u6709\u53bb\u91cd\u5c31\u662f\u88f8\u7684 LIS \u65b9\u6848\u6570\n\n\u8003\u8651\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4ee5\u67d0\u4e2a\u6743\u503c\u7ed3\u5c3e\u7684\u65b9\u6848\u6570\n\n\u4ece\u5de6\u5230\u53f3\u626b\u63cf\uff0c\u6bcf\u6b21\u627e\u5de6\u8fb9\u6bd4\u8fd9\u4e2a\u6570\u6743\u5c0f\u7684\u65b9\u6848\u6570\uff0c\u7136\u540e**\u76f4\u63a5\u8986\u76d6\u5f53\u524d\u6743\u7684\u65b9\u6848**\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u53bb\u9664\u548c\u524d\u9762\u4e00\u4e2a\u76f8\u540c\u6743\u503c\u7684\u91cd\u590d\u7684\u90e8\u5206\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u5c06\u957f\u5ea6\u4e3a 1 \u7684 LIS \u5148\u7b97\u4f5c\u5176\u5185\uff0c\u4e4b\u540e\u518d\u51cf\u6389\u5373\u53ef\u3002\n\n~~\u6211\u6ca1\u53d6\u6a21\u7206\u621020\u5206\u4ee5\u4e3a\u81ea\u5df1\u5199\u6302\u4e86\u4e22\u4eba~~\n\n```c++\n#include<cstdio> \n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#define ms(i, j) memset(i, j, sizeof i)\n#define LL long long\n#define db long double\n#define fir first\n#define sec second\n#define mp make_pair\nusing namespace std;\n\nnamespace flyinthesky {\n\n    const LL MAXN = 100000 + 5, MO = 1e9 + 7;\n    \n    LL n, a[MAXN], tax[MAXN], tot_tax, c[MAXN], lst[MAXN];\n    LL lowbit(LL x) {return x & (-x);}\n    void add(LL x, LL v) {while (x <= n) c[x] = (c[x] + v) % MO, x += lowbit(x);}\n    LL query(LL x) {LL ret = 0; while (x > 0) ret = (ret + c[x]) % MO, x -= lowbit(x); return ret;}\n \n    void clean() {\n    }\n    int solve() {\n\n    \tclean();\n    \tcin >> n;\n    \tfor (LL i = 1; i <= n; ++i) scanf(\"%lld\", &a[i]), tax[i] = a[i];\n    \tsort(tax + 1, tax + 1 + n), tot_tax = unique(tax + 1, tax + 1 + n) - tax - 1;\n    \tfor (LL i = 1; i <= n; ++i) a[i] = lower_bound(tax + 1, tax + 1 + tot_tax, a[i]) - tax;\n\n        for (LL i = 1; i <= n; ++i) {\n            LL tmp = query(a[i] - 1);\n            add(a[i], -lst[a[i]]), add(a[i], lst[a[i]] = (tmp + 1) % MO);\n        }\n        printf(\"%lld\\n\", (query(tot_tax) - tot_tax + MO) % MO);\n\n        return 0;\n    }\n}\nint main() { \n    flyinthesky::solve();\n    return 0;\n}\n```",
        "postTime": 1552908391,
        "uid": 12943,
        "name": "FlyInTheSky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\n\n## LIS\uff08Longest Increasing Subsequence\uff09\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217 \u6216\u8005 \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n#### \u5f88\u57fa\u7840\u7684\u9898\u76ee\uff0c\u6709\u4e24\u79cd\u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u5206\u522b\u4e3aO(n*logn)\u548cO(n^2) \u3002\n\n### \u5b89\u5229\u539f\u5730\u5740[https://blog.csdn.net/zhangyx_xyz/article/details/50949957](https://blog.csdn.net/zhangyx_xyz/article/details/50949957)\n\n*********************************************************************************\n\u5148\u56de\u987e\u7ecf\u5178\u7684\n#### O(n^2)\n\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5:\n\n\u8bbea[t]\u8868\u793a\u5e8f\u5217\u4e2d\u7684\u7b2ct\u4e2a\u6570\uff0cdp[t]\u8868\u793a\u4ece1\u5230t\u8fd9\u4e00\u6bb5\u4e2d\u4ee5t\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u521d\u59cb\u65f6\u8bbedp[t] = 0(t = 1, 2, ..., len(A))\u3002\u5219\u6709\u52a8\u6001\u89c4\u5212\u65b9\u7a0b\uff1adp[t] = max{1, dp[j] + 1} (j = 1, 2, ..., t - 1, \u4e14a[j] < a[t])\u3002\n\n\u4e00\u822c\u82e5\u4ecea[t]\u5f00\u59cb\uff0c\u6b64\u65f6\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5e94\u8be5\u662f\u6309\u4e0b\u5217\u65b9\u6cd5\u6c42\u51fa\u7684\uff1a \n  \u5728a[t+1],a[t+2],...a[n]\u4e2d\uff0c\u627e\u51fa\u4e00\u4e2a\u6bd4a[t]\u5927\u7684\u4e14\u6700\u957f\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u4f5c\u4e3a\u5b83\u7684\u540e\u7ee7\u3002 \n\n \n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n \n\n ```\n\n#include<iostream>\nusing namespace std;\n#define max(a,b) a>b?a:b\nint main()\n{\n    int n, i, j, dp[101], x[101], max_len;\n    while (cin >> n)\n    {\n        for (i = 0; i < n; i++)\n            cin >> x[i];\n        dp[0] = 1;//\u8868\u793a\u4ee5x[0]\u4e3a\u5b50\u5e8f\u5217\u6700\u53f3\u8fb9\u7684\u957f\u5ea6\u4f4d1\n        for (i = 1; i < n; i++)\n        {\n            dp[i] = 1;//\u521d\u59cb\u5316\u6bcf\u79cd\u60c5\u51b5\u6700\u5c0f\u503c\u4e3a1\n            for (j = 0; j < i; j++)\n            {\n                if (x[i]>x[j] && dp[j] + 1>dp[i])//\u4ece0-i\u8fdb\u884c\u626b\u63cf,\u67e5\u627e\u8fb9\u754c\u5c0f\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\u957f\u5ea6\u76f8\u7b49\u7684\u89e3\u4f18\u5316\u6700\u4f18\u89e3\n                    dp[i] = dp[j] + 1;//\u5982\u679c\u5141\u8bb8\u5b50\u5e8f\u5217\u76f8\u90bb\u5143\u7d20\u76f8\u540c  x[i]>=x[j]&&dp[j]+1>dp[i];\n            }\n        }\n        for (i = max_len = 0; i < n; i++)\n            max_len = max(max_len, dp[i]);//\u7b49\u5230\u6700\u5927\u5b50\u5e8f\u5217\u957f\u5ea6\n        cout << max_len << endl;\n    }\n    return 0;\n}\n\n \n\n ```\n\n \n\n \n\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n#### O(nlogn)\n\u89e3\u6cd5\n\n \n\n\u5728\u4e00\u5217\u6570\u4e2d\u5bfb\u627e\u4e00\u4e9b\u6570\uff0c\u8fd9\u4e9b\u6570\u6ee1\u8db3\uff1a\u4efb\u610f\u4e24\u4e2a\u6570a[i]\u548ca[j]\uff0c\u82e5i<j\uff0c\u5fc5\u6709a[i]<a[j]\uff0c\u8fd9\u6837\u6700\u957f\u7684\u5b50\u5e8f\u5217\u79f0\u4e3a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u3002\n\n\u8bbedp[i]\u8868\u793a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\ndp[i] = max{dp[j]+1}, 1<=j<i,a[j]<a[i].\n\n\u8003\u8651\u4e24\u4e2a\u6570a[x]\u548ca[y]\uff0cx<y\u4e14a[x]<a[y],\u4e14dp[x]=dp[y]\uff0c\u5f53a[t]\u8981\u9009\u62e9\u65f6\uff0c\u5230\u5e95\u53d6\u54ea\u4e00\u4e2a\u6784\u6210\u6700\u4f18\u7684\u5462\uff1f\u663e\u7136\u9009\u53d6a[x]\u66f4\u6709\u6f5c\u529b\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728a[x]<a[z]<a[y]\uff0c\u8fd9\u6837a[t]\u53ef\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u503c\u3002\u5728\u8fd9\u91cc\u7ed9\u6211\u4eec\u4e00\u4e2a\u542f\u793a\uff0c\u5f53dp[t]\u4e00\u6837\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u66f4\u5c0f\u7684a[x].\n\n\u6309dp[t]=k\u6765\u5206\u7c7b\uff0c\u53ea\u9700\u4fdd\u7559dp[t]=k\u7684\u6240\u6709a[t]\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8bbeg[k]\u8bb0\u5f55\u8fd9\u4e2a\u503c\uff0cg[k]=min{a[t],dp[t]=k}\u3002\n\n \u8fd9\u65f6\u6ce8\u610f\u5230g\u7684\u4e24\u4e2a\u7279\u70b9\uff08\u91cd\u70b9\uff09\uff1a\n\n1. g[k]\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u5355\u8c03\u4e0d\u5347\uff1b           \n\n2. g\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff0cg[1]<g[2]<..g[n]\u3002\n\n\u5229\u7528\u8fd9\u4e24\u4e2a\u6027\u8d28\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6c42\u89e3\uff1a\n\n(1).\u8bbe\u5f53\u524d\u5df2\u6c42\u51fa\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e3alen\uff08\u521d\u59cb\u65f6\u4e3a1\uff09\uff0c\u6bcf\u6b21\u8bfb\u5165\u4e00\u4e2a\u65b0\u5143\u7d20x\uff1a\n\n(2).\u82e5x>g[len]\uff0c\u5219\u76f4\u63a5\u52a0\u5165\u5230d\u7684\u672b\u5c3e\uff0c\u4e14len++\uff1b\uff08\u5229\u7528\u6027\u8d282\uff09\n\n   \u5426\u5219\uff0c\u5728g\u4e2d\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4x\u5c0f\u7684\u6570g[k]\uff0c\u5e76g[k+1]=x\uff0c\u5728\u8fd9\u91ccx<=g[k+1]\u4e00\u5b9a\u6210\u7acb\uff08\u6027\u8d281,2\uff09\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n \n```\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int maxn = 50001;\nint binary_search(int key, int *g, int low, int high)\n{\n    while (low < high)\n    {\n        int mid = (low + high) >> 1;\n        if (key >= g[mid])\n            low = mid + 1;\n        else\n            high = mid;\n    }\n    return low;\n}\nint main()\n{\n    int i, j, a[maxn], g[maxn], n, len;\n    while (cin >> n)\n    {\n        memset(g, 0, sizeof(g));\n        for (i = 0; i < n; i++)\n            cin >> a[i];\n        g[1] = a[0], len = 1;//\u521d\u59cb\u5316\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a1\uff0c\u6700\u5c0f\u53f3\u8fb9\u754c\n        for (i = 1; i < n; i++)\n        {\n            if (g[len] < a[i])//(\u5982\u679c\u5141\u8bb8\u5b50\u5e8f\u5217\u76f8\u90bb\u5143\u7d20\u76f8\u540c g[len]<=a[i],\u9ed8\u8ba4\u4e3a\u4e0d\u7b49\uff09\n                j = ++len; //a[i]>g[len],\u76f4\u63a5\u52a0\u5165\u5230g\u7684\u672b\u5c3e,\u4e14len++\n            else\n                j = binary_search(a[i], g, 1, len + 1);\n            g[j] = a[i];//\u4e8c\u5206\u67e5\u627e,\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4a[i]\u5c0f\u7684\u6570g[k],\u5e76g[k+1]=a[i]\n        }\n        cout << len << endl;\n    }\n    return 0;\n}\n```\n \n\n \n \n\n\u4f8b\u9898[https://www.luogu.org/problemnew/show/P1108](https://www.luogu.org/problemnew/show/P1108)\n",
        "postTime": 1551523682,
        "uid": 54465,
        "name": "JackcreaM",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6211\u6765\u63d0\u4f9b\u4e00\u79cdzkw\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\n\n\u7ec6\u8282\uff1a\u8981\u6ce8\u610f\u8fd0\u7528\u5dee\u5206\u601d\u60f3\uff0c\u5047\u8bbe\u6709\u4e24\u4e2a\u6570\u7684\u503c\u76f8\u540c\uff0c\u540e\u9762\u90a3\u4e2a\u6570\u7684f\u5c31\u5305\u542b\u4e86\u524d\u9762\u4e00\u4e2a\u6570\u7684f\uff0c\u8981\u4f5c\u5dee\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=1<<18;\nconst int MOD=1e9+7;\n\nint n;\nlong long ans;\nlong long tree[MAXN<<1],a[MAXN],f[MAXN];\nstruct rpg{\n\tint num,id,ren;\n}b[MAXN],c[MAXN];\n\nbool cmp(rpg a,rpg b){return a.num<b.num;}\nvoid shel()\n{\n\tfor(int i=1;i<=n;++i) c[b[i].id]=b[i];\n\tfor(int i=1;i<=n;++i) b[i]=c[i];\n}\n\nvoid init()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&b[i].num),b[i].id=i;\n\tsort(b+1,b+n+1,cmp);b[1].ren=1;\n\tfor(int i=2;i<=n;++i){\n\t\tif(b[i].num==b[i-1].num) b[i].ren=b[i-1].ren;\n\t\telse b[i].ren=b[i-1].ren+1;\n\t}shel();\n\tfor(int i=1;i<=n;++i){\n\t\tif(b[i].ren==b[i-1].ren) continue;\n\t\ta[++a[0]]=b[i].ren;\n\t}return;\n}\n\nvoid solve()\n{\n\tfor(int i=1;i<=a[0];++i){\n\t\tint l=a[0],r=a[0]+a[i];\n\t\tlong long sum=0;\n\t\twhile(l^r^1){\n\t\t\tif(~l&1) sum+=tree[l^1];\n\t\t\tif(r&1) sum+=tree[r^1];\n\t\t\tl>>=1,r>>=1;\n\t\t}ans=(ans+sum-tree[a[0]+a[i]])%MOD;\n\t\tif(tree[a[0]+a[i]]) ++ans;\n\t\ttree[a[0]+a[i]]=(sum+1)%MOD;\n\t\tfor(int j=a[0]+a[i]>>1;j;j>>=1) tree[j]=(tree[j<<1]+tree[j<<1|1])%MOD;\n\t}printf(\"%lld\\n\",ans);\n\treturn;\n}\n\nint main()\n{\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1527292008,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "50\u5206\u89e3\u6cd5\uff1a\u7b80\u5355DP\n\n\u5047\u8bbe\u4e00\u4e2a\u5df2\u7ecf\u53bb\u8fc7\u91cd\u7684\u6570\u5217a[1],a[2],...,a[m]\n\n\u5b9a\u4e49f[i]\u4e3a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\uff08\u5305\u62ec\u957f\u5ea6\u4e3a1\u7684\uff09\uff0c\u90a3\u4e48\u521d\u59cb\u503c\u4e3af[i]=1\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\nf[i]=(f[i]+f[j])%mod  i>j&&a[i]>a[j]\n\n\u8f6c\u79fb\u65b9\u6cd5\uff1ai\u4ece1...m\uff0cj\u4ece1...n-1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N^2)\uff0c\u671f\u671b\u5f97\u520650\u5206\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=5010;\nconst int mod=1000000007;\nint n,m=1,a[maxn],f[maxn],ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++,m++)\n    {\n        scanf(\"%d\",a+m);\n        if(m!=1&&a[m]==a[m-1])m--;\n    }\n    for(int i=1;i<m;i++)\n    {\n        f[i]=1;\n        for(int j=1;j<i;j++)if(a[j]<a[i])f[i]=(f[i]+f[j])%mod;\n        ans=(ans+f[i]-1)%mod;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n100\u5206\u89e3\u6cd5\uff1a\u6392\u5e8f\u53bb\u91cd\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u503cf[i]\uff0c\u4ee3\u8868\u4ee5a[i]\u4e3a\u7ed3\u5c3e\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u628a\u957f\u5ea6\u4e3a1\u7684\u4e5f\u7edf\u8ba1\u8fdb\u53bb\u3002\n\n\u90a3\u4e48f[a[i]]\u7684\u503c\u53ef\u4ee5\u7531f[a[1]]...f[a[i]-1]\u63a8\u51fa\uff0c\u90a3\u4e48\n\nf[a[i]]=sigma{f[a[j]]}j:1...i-1\n\n\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u503c\u4e3a[1,a[i]-1]\u7684\u548c\u5373\u53ef\uff0c\u6700\u540e\u7528\u5355\u70b9\u4fee\u6539\u628a\u7ed3\u679c\u8d4b\u503c\u4e3aa[i]\n\n\u6700\u540e\u6211\u4eec\u4f9d\u6b21\u67e5\u8be2a[i]\u5e76\u7d2f\u52a0\uff0c\u6ce8\u610f\u7528\u5b8c\u4e4b\u540ea[i]\u6e05\u96f6\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\n\n\u6700\u540e\u7d2f\u52a0\u7684\u548c\u5373\u4e3a\u7b54\u6848\n\n\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff1a\n\n1\uff0c\u5feb\u8bfb\uff0cinline\uff0cregister\n\n2\uff0c\u7ebf\u6bb5\u6811\u7684\u67e5\u8be2\u64cd\u4f5c\u4e0d\u8981\u5199\u6210\u4f20\u503c\uff08\u8fd4\u56de\u503c\u4e3aint\u7684\uff09\uff0c\u8fd9\u6837\u592a\u6162\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=100010;\nconst int mod=1000000007;\nstruct node{int x,y;bool operator<(node a)const{return x<a.x;}}s[maxn];\nint n,tot=1,ans,sum,f[maxn<<2],b[maxn];\ninline void query(int o,int l,int r,int x,int y)//\u7ebf\u6bb5\u6811\u67e5\u8be2\u64cd\u4f5c\uff0cx,y\u4e3a\u67e5\u8be2\u8fb9\u754c\uff0cl,r\u4e3a\u5f53\u524d\u8fb9\u754c\n{\n    int lc=o<<1,rc=o<<1|1;//\u4f4d\u8fd0\u7b97\u8ba1\u7b97\u5de6\u53f3\u5b50\u8282\u70b9\u503c\n    if(l==x&&r==y)//\u843d\u5728\u4e00\u70b9\u4e0a\n    {\n        ans=(ans+f[o])%mod;\n        return;\n    }\n    int mid=(l+r)>>1;//\u8ba8\u8bba\u5de6\u53f3\u5b50\n    if(y<=mid)query(lc,l,mid,x,y);\n    else if(x>mid)query(rc,mid+1,r,x,y);\n    else\n    {\n        query(lc,l,mid,x,mid);\n        query(rc,mid+1,r,mid+1,y);\n    }\n}\ninline void update(int o,int l,int r,int x,int y)//\u7ebf\u6bb5\u6811\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u540c\u4e0a\n{\n    int lc=o<<1,rc=o<<1|1;\n    if(l==r)\n    {\n        f[o]=y;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid)update(lc,l,mid,x,y);\n    else update(rc,mid+1,r,x,y);\n    f[o]=(f[lc]+f[rc])%mod;\n}\ninline int read()//\u5feb\u8bfb\n{\n    int data=0,w=1;\n    char ch=0;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')ch=getchar(),w=-1;\n    while(ch>='0'&&ch<='9')data=data*10+ch-'0',ch=getchar();\n    return data*w;\n}\nint main()\n{\n    int n=read();\n    for(int i=1;i<=n;i++)s[i].y=i,s[i].x=read();//\u8bfb\u5165\uff0c\u7f16\u7801\uff0c\u65b9\u4fbf\u6392\u5e8f\n    sort(s+1,s+1+n);//\u6309x\u7684\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    for(int i=1;i<=n;i++)//\u53bb\u91cd\n    {\n        if(s[i].x!=s[i-1].x)tot++;\n        b[s[i].y]=tot;//b\u4ee3\u8868\u66f4\u65b0\u540e\u7684\u987a\u5e8f\u503c\n    }\n    for(int i=1;i<=n;i++)//\u8ba1\u7b97f[a[i]]\n    {\n        ans=0;\n        if(b[i]>1)query(1,1,tot,1,b[i]-1);\n        update(1,1,tot,b[i],ans+1);\n    }\n    for(int i=1;i<=n;i++)//\u7edf\u8ba1\u7b54\u6848\n    {\n        ans=0;\n        query(1,1,tot,b[i],b[i]);\n        if(ans)//\u5fc5\u987b\u8981\u6709\u624d\u7edf\u8ba1\u548c\u66f4\u65b0\n        {\n            sum=(sum+ans-1)%mod;//\u53bb\u6389\u91cd\u590d\n            update(1,1,tot,b[i],0);\n        }\n    }\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n```\n\u6b64\u9898\u540c\u6837\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\uff0c\u5e38\u6570\u66f4\u5c0f\uff0c\u518d\u6b21\u4e0d\u591a\u505a\u8d58\u8ff0\u3002\n",
        "postTime": 1511077214,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3970 \u3010[TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217\u3011"
    },
    {
        "content": "\u76f8\u5bf9\u4e8e\u5176\u4ed6\u9898\u89e3\u6765\u8bf4\u601d\u7ef4\u66f4\u52a0\u7b80\u5355\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u4e5f\u662f\u4e00\u79cd\u53ef\u4ee5\u5ffd\u7565\u53bb\u91cd\u6761\u4ef6\u7684\u505a\u6cd5\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u6c42\u51fa\u8be5\u5e8f\u5217\u957f\u5ea6\u5927\u4e8e $1$ \u7684\u672c\u8d28\u4e0d\u540c\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2a\u6570\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u6839\u636e\u5957\u8def\u5f88\u5bb9\u6613\u60f3\u51fa\u6734\u7d20\u7b97\u6cd5\uff0c~~$30$ \u5206\u5230\u624b~~\u3002\n\n\u60f3\u60f3\u6734\u7d20\u7684 $dp$\u3002\u4ee4 $dp_i$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\uff0c\u8f6c\u79fb\u65b9\u7a0b\uff1a$dp_i=1+\\sum\\limits_{j=1}^{i-1}dp_j\\times [a_i\\gt a_j]$\u3002\u4f46\u662f\u8fd9\u6837\u5b50\u662f $\\mathcal{O(n^2)}$ \u7684\u4f1a\u8d85\u65f6\uff0c\u60f3\u60f3\u4f18\u5316\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\uff0c\u867d\u8bf4\u6811\u72b6\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u4ece\u7801\u91cf\u3001\u5e38\u6570\u3001\u601d\u7ef4\u7406\u89e3\u96be\u5ea6\u548c\u7a7a\u95f4\u7b49\u65b9\u9762\u6bd4\u8d77\u6765\u5c31\u76f8\u5f62\u89c1\u7ecc $(ch\u00f9)$ \u4e86\u3002\n\n\u6211\u4eec\u5148\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u6570\u7684\u5177\u4f53\u503c\uff0c\u6211\u4eec\u53ea\u5728\u4e4e\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u5b58 $dp$ \u503c\uff0c\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c06\u4e0b\u6807\u5728 $1\\sim a_i-1$ \u8303\u56f4\u5185\u7684\u6240\u6709 $dp$ \u503c\u4e4b\u548c\u52a0\u4e00\uff0c\u518d\u5c06\u5f53\u524d\u4f4d\u7f6e $a_i$ \u8d4b\u4e0a\u8fd9\u4e2a\u503c\u5373\u53ef\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u5c31\u662f\u6734\u7d20\u7684 $dp$ \u6362\u4e86\u4e00\u4e0b\u800c\u5df2\u3002\n\n\u65e0\u8111 $dp$\uff0c\u65e0\u9700\u8003\u8651\u53bb\u91cd\u6761\u4ef6\u3002\n\n# \u4ee3\u7801\n\n```cpp\n//2022/2/11\n//2022/2/19\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <algorithm>\n#define enter() putchar(10)\n#define debug(c,que) cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) cout << arr[i] << w;\n#define speed_up() cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : (-x))\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\twhile (x < 0) x += mod;\n\twhile (x >= mod) x -= mod;\n\treturn x;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\nusing namespace std;\n\nconst int ma = 1e5 + 5;\nint a[ma],b[ma];\nint n;\nstruct Segment_Tree {\n\tstruct Node {\n\t\tint l,r;\n\t\tint sum;\n\t} node[ma << 2];\n\t#define lson (p << 1)\n\t#define rson (p << 1 | 1)\n\tinline void pushup(int p) {\n\t\tnode[p].sum = MOD(node[lson].sum + node[rson].sum);\n\t}\n\tinline void build(int p,int l,int r) {\n\t\tnode[p].l = l,node[p].r = r;\n\t\tif (l == r) {\n\t\t\tnode[p].sum = 0;\n\t\t\treturn;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tbuild(lson,l,mid),build(rson,mid + 1,r);\n\t\tpushup(p);\n\t}\n\tinline void update(int x,int y,int p,int k) {\n\t\tif (x <= node[p].l && node[p].r <= y) {\n\t\t\tnode[p].sum = k * (node[p].r - node[p].l + 1),node[p].sum = MOD(node[p].sum);\n\t\t\treturn;\n\t\t}\n\t\tint mid = node[p].l + node[p].r >> 1;\n\t\tif (x <= mid) update(x,y,lson,k);\n\t\tif (y > mid) update(x,y,rson,k);\n\t\tpushup(p);\n\t}\n\tinline int query(int x,int y,int p) {\n\t\tif (x <= node[p].l && node[p].r <= y) {\n\t\t\treturn MOD(node[p].sum);\n\t\t}\n\t\tint mid = node[p].l + node[p].r >> 1,res = 0;\n\t\tif (x <= mid) res = MOD(res + query(x,y,lson));\n\t\tif (y > mid) res = MOD(res + query(x,y,rson));\n\t\treturn res;\n\t}\n\t#undef lson\n\t#undef rson\n} seg;\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read();\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\ta[i] = b[i] = read();\n\t}\n\tsort(b + 1,b + n + 1);\n\tint num = unique(b + 1,b + n + 1) - b - 1;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\ta[i] = lower_bound(b + 1,b + num + 1,a[i]) - b;\n\t}\n\tseg.build(1,1,num);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tint val = seg.query(1,a[i] - 1,1) + 1;\n\t\tseg.update(a[i],a[i],1,val);\n\t}\n\tprintf(\"%d\\n\",seg.query(1,num,1) - num);\n\n\treturn 0;\n}\n```",
        "postTime": 1645272895,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P3970 [TJOI2014]\u4e0a\u5347\u5b50\u5e8f\u5217"
    }
]