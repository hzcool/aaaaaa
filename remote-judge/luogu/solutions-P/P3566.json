[
    {
        "content": "# \u5168\u7f51\u552f\u4e00 \u4e00\u7bc7O(n)\u9898\u89e3+bzoj/luogu\u6700\u4f18\u89e3\n\n(\u622a\u6b622018.10.31)\n\n\u8fd9\u4e2a\u9898\u770b\u5927\u5bb6\u90fd\u662f\u4f18\u5148\u961f\u5217\uff0c\u7136\u540e\u76f4\u63a5\u8d2a\u5fc3\u653e\u7f6e\u3002\n\n\u8fd8\u6709\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u6a21\u62df\u5806\u8fc7\u7684%%%\u3002\n\n\u5176\u5b9e\u4e0d\u7528\u5e26logn\u4e5f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n \n\n\u5927\u5bb6\u7684\u65b9\u6cd5\u662f\u4ece\u5de6\u5f80\u53f3\u626b\u8fc7\u53bb\u7684\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u63d2\u7a7a\u6392\u5e8f\u7684\u95ee\u9898\uff0c\u8fd8\u6709\u4e00\u79cd\u8003\u8651\u65b9\u6cd5\u5c31\u662f\u6bcf\u4e2a\u79cd\u7c7b\u6bcf\u4e2a\u79cd\u7c7b\u6765\u8003\u8651\u3002\n\n\u597d\u5904\u662f\uff0c\u524d\u9762\u653e\u8fc7\u7684\u79cd\u7c7b\u653e\u5b8c\u4e86\uff0c\u548c\u5f53\u524d\u7b2ci\u79cd\u6c38\u8fdc\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\n\n\u8fd9\u5c31\u662f\u6211\u7684\u5927\u65b9\u5411\u601d\u8def\u3002\n\n \n\n### \u4e00\u3001\u5148\u4e0d\u8003\u8651\u7aef\u70b9\u56fa\u5b9a\u7684\u60c5\u51b5\u3002\n\n\u5176\u5b9e\uff0c\u4e0d\u4e00\u5b9a\u8981\u5148\u653e\u6700\u591a\u7684\u3002\n\n\u987a\u5e8f\u53ef\u4ee5\u968f\u4fbf\u3002\n\n\u5047\u8bbe\u653e\u5230\u5b8c\u4e86\u524di\u79cd\uff0c\u90a3\u4e48\uff0c\u4e00\u5171\u6709sum[i]\u4e2a\u3002\n\n\u5bf9\u4e8e\u540e\u9762\u7684n-i\u79cd\u6765\u8bf4\uff0c\u524di\u79cd\u7684\u65b9\u6cd5\u5bf9\u540e\u9762\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u6240\u4ee5\uff0c\u80af\u5b9a\u524di\u79cd\u653e\u6cd5\u4e2d\uff0c\u9009\u62e9\u76f8\u90bb\u7684\u60c5\u51b5\u6700\u5c11\u7684\u65b9\u6848\u54af\uff01\n\n\u600e\u6837\u51d1\u51fa\u8fd9\u4e2a\u65b9\u6848\uff1f\n\n\u653e\u5b8c\u4e86\u524di\u79cd\uff0c\u8bbe\u8fd8\u5269\u4e0bk\u4e2a\u76f8\u90bb\u4f4d\u7f6e\u3002\n\n1.\u5bf9\u4e8e\u7b2ci\u79cd\uff0c\u80af\u5b9a\u5148\u63d2\u90a3k\u4e2a\u4f4d\u7f6e\u4e2d\u3002\u8fd9\u6837\u6bcf\u6b21\u76f8\u90bb\u7684-1,\u5df2\u7ecf\u6700\u4f18\u3002\n\n2.\u5982\u679ci\u79cd\u8fd8\u5269\u4e0b\uff0c\u90a3\u5c31\u4ece\u524d\u9762\u5f00\u59cb\u63d2\u7a7a\uff08\u4e0d\u80fd\u548c1\u4e2d\u653e\u7684\u76f8\u90bb\uff09\u3002\u8fd9\u6837\u76f8\u90bb\u7684\u6570\u91cf\u4e0d\u589e\u4e0d\u51cf\u3002\u5df2\u7ecf\u6700\u4f18\u3002\n\n3.\u5982\u679c\u8fd8\u5269\u4e0b\uff0c\u90a3\u6ca1\u6709\u529e\u6cd5\u4e86\u3002\u4e3a\u4e86\u4e4b\u540e\u597d\u5904\u7406\uff0c\u6211\u4eec\u90fd\u628a\u8fd9\u4e9b\u5269\u4e0b\u7684\u90fd\u653e\u5728\u672b\u5c3e\u3002\n\n\u8fd9\u6837\uff0c\u4e0d\u7ba1\u4f60\u662f\u6570\u91cf\u8f83\u591a\u7684\uff0c\u8fd8\u662f\u6570\u91cf\u8f83\u5c11\u7684\uff0c\n\n\u8f83\u591a\u7684\uff0c\u53ef\u4ee5\u653e\u5728\u4e00\u8d77\uff0c\u7531\u540e\u9762\u7684\u518d\u63d2\u7a7a\u9694\u5f00\u3002\n\n\u8f83\u5c11\u7684\uff0c\u5c31\u9694\u5f00\u4e4b\u524d\u76f8\u90bb\u7684\u3002\n\n \n\n\u81f3\u4e8e\u600e\u4e48\u63d2\u7a7a\uff1f\n\n\u7528\u4e00\u4e2a\u6700\u666e\u901a\u7684\u94fe\u8868\u5c31\u53ef\u4ee5\u7ef4\u62a4\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u6bcf\u6b21\u8981\u7ef4\u62a43\u4e2d\uff0c\u5f00\u59cb\u8fde\u7eed\u7684\u90a3\u4e00\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u65b9\u4fbf\u4e0b\u6b21\u76f4\u63a5\u8bbf\u95ee\u3002\n\n \n\n \n\n \n\n### \u4e8c\u3001\u6709\u56fa\u5b9a\u70b9\u5462\uff1f\n\n\u4e24\u4e2a\u7aef\u70b9\u6bd4\u8f83\u9ebb\u70e6\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5148\u653e\u7aef\u70b9\u597d\u4e86\u3002\n\n\u653e\u7684\u65b9\u6cd5\u548c\u4e0a\u9762\u5dee\u4e0d\u591a\u3002\n\n\u5148\u653ep\uff0c\u518d\u653eq\n\n\u5982\u679cp\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8eq\u3002\n\n\u90a3\u4e48\u653eq\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u63d2\u7a7a\uff0c\u7136\u540e\u65e0\u8bba\u5982\u4f55\u7559\u4e0b\u4e00\u4e2a\u653e\u672b\u5c3e\u3002\n\n\u5982\u679cp\u7684\u6570\u91cf\u5c0f\u4e8eq\u3002\n\n\u90a3\u4e48\u653eq\u7684\u65f6\u5019\uff0c\u63d2\u5b8c\u7a7a\uff0c\u76f4\u63a5\u5f80\u540e\u653e\u5b8c\u5373\u53ef\u3002\n\n\uff08\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u6837\u7684\u8bdd\u6709\u4e00\u4e2a\u60c5\u51b5\uff0c\u5c31\u662f\u5728\u6700\u540e\u4e00\u4e2a\u548c\u5012\u6570\u7b2c\u4e8c\u4e2a\u4e4b\u95f4\u8fd8\u8981\u63d2\u4e00\u4e2a\uff0c\u540e\u9762\u653e\u7684\u65f6\u5019\u7279\u5224\u4e00\u4e0b\uff09\n\n \n\n\u7136\u540e\u653e\u5269\u4e0bk-2\u79cd\u3002\n\n\u6309\u7167\u521a\u624d\u7684\u7b56\u7565\u5373\u53ef\u3002\u6ce8\u610f\u4e0d\u80fd\u653e\u57281\u524d\u9762\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u4e2a\u540e\u9762\u3002\n\n \n\n\u7531\u4e8e\u7b56\u7565\u4e00\u76f4\u662f\u6700\u4f18\u7684\u3002\n\n\u6240\u4ee5\u653e\u5b8c\u4e86\u4e4b\u540e\uff0c\u8fd8\u6709\u76f8\u90bb\u5143\u7d20\uff0c\u90a3\u5c31\u65e0\u89e3\u4e86\u3002\n\n \n\n### \u4e09\u3001\u4e00\u4e9b\u7ec6\u8282\n\n1.\u53ef\u80fd\u6709\u4e24\u4e2a\u7aef\u70b9\u989c\u8272\u76f8\u540c\u7684\u60c5\u51b5\u3002\u7279\u5224\u5373\u53ef\u3002bzoj\u4e0a\u8fd8\u6709\u7aef\u70b9\u76f8\u540c\uff0c\u4e14\u8fd9\u4e2a\u989c\u8272\u53ea\u6709\u4e00\u4e2a\u7684\u6570\u636e\u3002\u3002\u3002\u3002\n\n2.\u521a\u624d\u201c\u4e8c\u201d\u4e2d\u8bf4\u7684\u90a3\u4e2a\u6ce8\u610f\u4e8b\u9879\u3002\n\n3.\u4e71\u4e03\u516b\u7cdf\u7684\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\u548c+1-1\u7b49\u7b49\u3002\n\n\u753b\u4e2a\u793a\u610f\u56fe\u5c31\u597d\u7406\u89e3\u4e86\u3002\n\n \n\n\u4ee3\u7801\uff1a\n\n\u5168\u7a0b\u94fe\u8868\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n\uff08\u5176\u5b9e\u5e94\u8be5\u8fd8\u6709\u5f88\u591a\u5e38\u6570\u4f18\u5316\u7a7a\u95f42333\uff09\n\n\uff08\u8fd9\u4e2a\u9898\u8f93\u5165\u8f93\u51fa\u4f18\u5316\u90fd\u5f88\u6709\u7528\uff0c\u8f93\u51fa\u4f18\u5316\u5feb\u4e86400ms\uff1f\uff1f\uff1f\uff09\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#define reg register int\n#define il inline\n#define numb (ch^'0')\nusing namespace std;\ntypedef long long ll;\nconst int N=1000000+5;\nint nxt[N],id[N];//nxt\u540e\u7ee7\uff0cid\u989c\u8272\u7f16\u53f7 \nint tot;\nint k,p,q;\nint a[N];\nil void rd(int &x){\n\tchar ch;x=0;\n\twhile(!isdigit(ch=getchar()));\n\tfor(x=numb;isdigit(ch=getchar());x=x*10+numb);\n}\nil void prin(int x){\n\tif(x/10) prin(x/10);\n\tputchar(x%10+'0');\n}\nil void upda(int o,int to,int d){//\u521d\u59cb\u5316\u94fe\u8868\u5143\u7d20 \n\tnxt[o]=to;id[o]=d;\n} \nint main(){\n\trd(k);rd(p);rd(q);\n\tfor(reg i=1;i<=k;++i)rd(a[i]);\n\tif(p==q&&a[p]==1){//\u7279\u5224\u4e00\u4e2a\u70b9 \n\t\tif(k>1) printf(\"0\");\n\t\telse printf(\"%d\",p);\n\t\treturn 0;\n\t}\n\tint las=0;\n\tfor(reg i=1;i<=a[p];++i){//\u653ep \n\t\tupda(++tot,0,p);\n\t\tif(las) nxt[las]=tot;las=tot;\n\t}\n\tlas=1;\n\tint pos=0;//pos\u662f\u6bcf\u4e00\u6b21\u6700\u540e\u7684\u8fde\u7eed\u4e00\u90e8\u5206\u540c\u79cd\u76f8\u90bb\u989c\u8272\u7684\u8d77\u59cb\u4f4d\u7f6e \n\tif(p!=q){//\u653eq \n\t\tint i;\n\t\tfor(i=1;i<=a[q]-1&&las<=a[p];++i){\n\t\t\tupda(++tot,nxt[las],q);\n\t\t\tnxt[las]=tot;++las;\t\n\t\t}\n\t\tif(a[p]>=a[q]){\n\t\t\tnxt[a[p]]=++tot;\n\t\t\tupda(tot,0,q);\n\t\t\tpos=a[q];\n\t\t}\n\t\telse{\n\t\t\tpos=tot;\n\t\t\twhile(i<=a[q]){\n\t\t\t\tnxt[tot]=tot+1;\n\t\t\t\tupda(++tot,0,q);\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tpos=1;\n\t}\n\tint nd=tot;//\u672b\u5c3e\u7684\u7f16\u53f7 \n\tfor(reg i=1;i<=k;++i){//\u653e\u5176\u4ed6\u7684 \n\t\tif(i==p||i==q) continue;\n\t\tint tmp=a[i];\n\t\twhile(a[i]&&nxt[pos]!=nd){//\u63d2\u540e\u9762\u7684\u7a7a \n\t\t\tupda(++tot,nxt[pos],i);\n\t\t\tnxt[pos]=tot;\n\t\t\ta[i]--;++pos;\n\t\t}\n\t\tif(a[i]&&nxt[pos]==nd&&id[pos]==q){//\u7ec6\u82822 \n\t\t\tupda(++tot,nxt[pos],i);\n\t\t\tnxt[pos]=tot;\n\t\t\tpos=tot;//warning!!!\n\t\t\ta[i]--;\n\t\t}\n\t\tif(a[i]){//\u4ece\u524d\u9762\u63d2\u7a7a \n\t\t\tint now=1;//start from a[p]\n\t\t\twhile(a[i]&&id[nxt[now]]!=i&&nxt[now]!=nd){\n\t\t\t\tupda(++tot,nxt[now],i);\n\t\t\t\tint to=nxt[now];\n\t\t\t\tnxt[now]=tot;\n\t\t\t\tnow=to;\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t\tif(a[i]){//\u5982\u679c\u8fd8\u6709\u5269\u4f59 \n\t\t\t\tint las=pos;\n\t\t\t\tif(id[pos]!=i) pos=tot+1;//warning!!! tot+1\n\t\t\t\twhile(a[i]){\n\t\t\t\t\tupda(++tot,nxt[las],i);\n\t\t\t\t\tnxt[las]=tot;\n\t\t\t\t\tlas=tot;\n\t\t\t\t\ta[i]--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(reg i=1;i!=nd;i=nxt[i]){//\u5224\u65ad\u4e0d\u5408\u6cd5 \n\t\tif(id[i]==id[nxt[i]]){\n\t\t\tprintf(\"0\");return 0;\n\t\t}\n\t}\n\tfor(reg i=1;i!=nd;i=nxt[i]){\n\t\tprin(id[i]);putchar(' ');\n\t}prin(id[nd]);\n\treturn 0;\n}\n\n```\n\n\u603b\u7ed3\uff1a\n\n\u6ce8\u610f\u5904\u7406\u6392\u5e8f\u63d2\u7a7a\u95ee\u9898\u7684\u4e24\u4e2a\u5927\u65b9\u6cd5\uff1a\n\n1.\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u3002\u671f\u95f4\u5f80\u5f80\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n\n2.\u5206\u7c7b\u522b\uff0c\u540c\u4e00\u4e2a\u7c7b\u522b\u4e00\u8d77\u8003\u8651\u3002\u5f80\u5f80\u7528\u5230\u5bf9\u63d2\u5165\u7684\u7269\u54c1\u6392\u5e8f\uff08\u5f53\u7136\u672c\u9898\u4e0d\u7528\uff09",
        "postTime": 1540992040,
        "uid": 56672,
        "name": "\u67ab\u6797\u665a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3566 \u3010[POI2014]KLO-Bricks\u3011"
    },
    {
        "content": "[\u9898\u9762]( https://www.luogu.org/paste/ov7unuup)\n\n\u9898\u5916\u8bdd1\uff1a\u6d1b\u8c37\u4e0aPOI\u7684\u7ffb\u8bd1\u600e\u4e48\u8001\u51fa\u9505\u3002\u3002\u3002\u65e0\u89e3\u8981\u8f93\u51fa$0$\u3002\u3002\u3002\n\n\u9898\u5916\u8bdd2\uff1a\u5148%\u4e00\u53d1\u4e0b\u9762\u989c\u795e\u7684\u5e26\u6743\u7ebf\u6bb5\u6811233\n\n$1->n$\u4e00\u904d\u626b\u8fc7\u53bb\uff0c\u8d2a\u5fc3\u5730\u5c06\u6570\u91cf\u6700\u591a\u7684\u7816\u5757\u5148\u653e\u4e0b\u53bb\uff0c\u7136\u540e\u7528\u6570\u91cf\u5c11\u7684\u7816\u5757\u6765\u201c\u5207\u201d\u5b83\u4eec(\u611f\u6027\u7406\u89e3\u4e00\u4e0b233)\uff0c\u53ef\u4ee5\u7ed3\u6784\u4f53\u91cd\u8f7d\u8fd0\u7b97\u7b26+\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u3002\u6bcf\u6b21\u653e\u7f6e\u65f6\u66f4\u65b0\u4e00\u4e2a$noww$\u8bb0\u5f55\u4e0a\u4e00\u5757\u7816\u7684\u989c\u8272\uff0c\u5982\u679c\u4f1a\u653e\u91cd\u5c31\u518d\u53d6\u4e00\u79cd\u6765\u653e(\u8fd9\u91cc\u6ce8\u610f\u5224\u961f\u5217\u662f\u5426\u4e3a\u7a7a)\u3002\u4f46\u662f\u5982\u679c\u597d\u51e0\u79cd\u7816\u6570\u76ee\u4e00\u6837\u5148\u653e\u90a3\u79cd\u5462\uff1f\u5148\u653e\u4e0e\u7ed3\u5c3e\u989c\u8272\u76f8\u540c\u7684\uff0c\u8fd8\u662f\u90a3\u4e2a\u601d\u8def\uff0c\u7528\u4e0e\u7ed3\u5c3e\u989c\u8272\u4e0d\u540c\u7684\u6765\u201c\u5207\u201d\u5b83\u4eec\u3002\n\n\u6ce8\u610f\u7ec6\u8282quq\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint outp[1000009];\nint n,b,e,rd,tot,noww;\nstruct a{int col,num;};\nbool operator <(a x,a y)\n{\n    return (x.num==y.num)?x.col!=e:x.num<y.num;\n}\npriority_queue<a> qs;\nint main ()\n{\n    scanf(\"%d%d%d\",&n,&b,&e);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&rd);\n        tot+=rd;\n        if(i==b) rd--;\n        if(i==e) rd--;\n        if(rd>0) qs.push((a){i,rd});\n        else if(rd<0) {printf(\"0\");return 0;}\n    }\n    outp[1]=b,noww=b;\n    for(int i=2;i<tot;i++)\n    {\n        a tn=qs.top();qs.pop();\n        int ttp=tn.col,tmp=tn.num;\n        if(ttp==noww)\n            if(!qs.empty())\n            {\n                a tm=qs.top();qs.pop();\n                int tpp=tm.col,tep=tm.num;\n                outp[i]=tpp;\n                noww=tpp;\n                if(tep>1)\n                    qs.push((a){tpp,tep-1});\n                qs.push(tn);\n                continue ;\n            }\n            else\n            {\n                printf(\"0\");\n                return 0;\n            }\n        noww=ttp;\n        outp[i]=ttp;\n        if(tmp>1)\n            qs.push((a){ttp,tmp-1});\n    }\n    outp[tot]=e;\n    for(int i=1;i<tot;i++)\n        if(outp[i]==outp[i+1]||!outp[i])\n        {\n            printf(\"0\");\n            return 0;\n        }\n    for(int i=1;i<=tot;i++)\n    {\n        printf(\"%d\",outp[i]);\n        if(i!=tot)\n            printf(\" \");\n    }\n    return 0;\n}\n```",
        "postTime": 1527220804,
        "uid": 56967,
        "name": "ydnhaha",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\uff1aPOI 2014 Bricks----\u8d2a\u5fc3"
    },
    {
        "content": "\u5feb$CPS$\u4e86\uff0c \u4e00\u4e2a\u4e00\u822c\u5b66\u6821\u7684\u4e00\u822c$Oier$\u5f88\u865a\uff0c\u611f\u89c9\u81ea\u5df1\u5f88\u83dc\uff0c \u597d\u4e0d\u5bb9\u6613\u5199\u62c9\u4e00\u9053\u597d\u7684\u8d2a\u5fc3\u9898\uff08\u5199\u4e86\u597d\u957f\u65f6\u95f4\u554a\uff09\uff0c\u8981\u53d1\u4e2a\u9898\u89e3\u3002\n\n\u8fd9\u9898\u89c1\u8fc7\u597d\u591a\u904d\u4e86\uff0c\u4e5f\u6709\u597d\u591a\u4eba\u8bb2\u8fc7\uff0c \u81ea\u5df1\u8ba4\u4e3a\u5f88\u597d\u5199\uff0c\u7136\u540e\u4e00\u76f4\u6ca1\u5199\uff0c\u4e00\u4e9b\u624d\u53d1\u73b0\u539f\u6765\u6709\u4e00\u70b9\u4e0d\u597d\u5199\uff08\u662f\u6211\u7684\u4ee3\u7801\u80fd\u529b\u592a\u5dee\u4e86\u3002\u3002\uff09\n\n\u672c\u9898\u662f\u4e00\u4e2a\u7ec3\u4e60\u4ee3\u7801\u80fd\u529b\u548c\u7ec6\u8282\u5904\u7406\u7684\u597d\u9898\n\n\u8fdb\u5165\u6b63\u9898\n\n1.\u8d2a\u5fc3\u7b56\u7565 \uff1a\u5728\u4fdd\u8bc1\u76f8\u90bb\u4e24\u4e2a\u989c\u8272\u4e0d\u540c\u65f6\uff0c\u5148\u653e\u591a\u7684\uff0c\u82e5\u4e00\u6837\u591a\uff0c\u5219\u653e\u4e0e\u672b\u5c3e\u989c\u8272\u76f8\u540c\u7684\u3002\uff08\u6b63\u786e\u6027\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\n\n\u53d8\u91cf\n```cpp\nint k, s, t, n, pre;//k\u4e3a\u989c\u8272\u6570\uff0cs\u4e3a\u7b2c\u4e00\u4e2a\u5757\u989c\u8272\uff0ct\u4e3a\u6700\u540e\u4e00\u4e2a\u5757\u7684\u989c\u8272\uff0c n\u4e3a\u603b\u5757\u6570\uff0c pre\u4e3a\u524d\u4e00\u4e2a\u5feb\u7684\u989c\u8272;\nint ans[maxn];//\u8bb0\u5f55\u7b54\u6848;\nbool flag;//\u4ee3\u7801\u4e2d\u4f1a\u89e3\u91ca\u7528\u9014;\n\nstruct Node{\n\tint col, id;//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u6ca1\u5565\u7528\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u4ee3\u66ff\u3002\u3002;\n}a[maxn];\n```\n\n\n\u5904\u7406 \u4e00\u6837\u591a\u7684 \u4e14 \u4e00\u6837\u591a\u7684\u4e2d\u6709\u4e0e\u672b\u5c3e\u989c\u8272\u4e00\u6837\u7684 \n```cpp\nstruct note{\n\tint now, w;//now\u989c\u8272\uff0c w\u4e2a\u6570;\n\tfriend bool operator < (note a, note b){\n\t\tif (a.w != b.w) return a.w < b.w; //\u5927\u6839\u5806\u5e94\u4e3a\u5c0f\u4e8e\u53f7\n\t\tif (a.now == t) return false;//t\u4e3a\u672b\u5c3e\u989c\u8272\n\t\treturn true;\n\t}\n};\n\npriority_queue<note>Q;\n\n```\n\n\u5feb\u8bfb\n```cpp\nint f_;\nchar ch_;\ntemplate <class T>\n\tinline T read (T &x_){\n\t\tx_ = 0, f_ = 1, ch_ = getchar();\n\t\twhile (ch_ > '9' || ch_ < '0'){if (ch_ == '-') f_ = -1; ch_ = getchar();}\n\t\twhile (ch_ >= '0' && ch_ <= '9') x_ = (x_ << 3) + (x_ << 1) + ch_ - 48, ch_ = getchar();\n\t\treturn x_*f_;\n\t}\n```\n\n\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u5019\uff08\u8fd9\u4e48\u957f\u65f6\u95f4\uff0c\u7ec8\u4e8e\u6709\u4ee3\u7801\u5566\uff09\n\n$code$\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\n\nconst int maxn = 1e6 + 10;\n\nint k, s, t, n, cnt, pre;\nint ans[maxn];\nbool flag;\n\nstruct Node{\n\tint col, id;\n}a[maxn];\n\nstruct note{\n\tint now, w;\n\tfriend bool operator < (note a, note b){\n\t\tif (a.w != b.w) return a.w < b.w;\n\t\tif (a.now == t) return false;\n\t\treturn true;\n\t}\n};\n\npriority_queue<note>Q;\n\nint f_;\nchar ch_;\ntemplate <class T>\n\tinline T read (T &x_){\n\t\tx_ = 0, f_ = 1, ch_ = getchar();\n\t\twhile (ch_ > '9' || ch_ < '0'){if (ch_ == '-') f_ = -1; ch_ = getchar();}\n\t\twhile (ch_ >= '0' && ch_ <= '9') x_ = (x_ << 3) + (x_ << 1) + ch_ - 48, ch_ = getchar();\n\t\treturn x_*f_;\n\t}\n\nint main(){\n\tread(k);\n\tread(s);\n\tread(t);\n\tfor (register int i = 1;i <= k; ++i){\n\t\tread(a[i].col);\n\t\ta[i].id = i;\n\t\tn += a[i].col;\n\t\tif (a[i].id == s) a[i].col--;\n\t\tif (a[i].id == t) a[i].col--;\n\t\tif (a[i].col < 0) {printf(\"0\"); return 0;}//\u9898\u610f\u8981\u6c42\uff0c\u56e0\u4e3aBitie could have made a mistake\uff0c\u6240\u4ee5\u4ed6\u4f1a\u5f53\u5757\u6570\u6ca1\u6709\u4ed6\u8bb0\u5fc6\u4e2d\u7684\u591a\uff0c \u5219\u8df3\u51fa;\n\t\tQ.push((note){i, a[i].col}); \n\t}\n\tpre = s;//\u4ece\u7b2c\u4e8c\u4e2a\u5757\u5f00\u59cb\uff0c\u524d\u4e00\u4e2a\u5757\u4e3as;\n\tans[1] = s;\n\tans[n] = t;\t\n\tnote top, tmp;\n\tfor (register int i = 2;i < n; ++i){\n\t\ttop = Q.top();\n\t\tQ.pop();\n\t\tflag = false;\n\t\tif (top.now == pre){//\u8fd9\u91cc\u662f\u91cd\u70b9\uff0c\u82e5\u4e0e\u524d\u4e00\u4e2a\u989c\u8272\u76f8\u540c\u5219\u7528tmp\u8bb0\u5f55\u5806\u9876\n\t\t\tflag = true;\n\t\t\ttmp = top;\n\t\t\tif (!Q.empty()) \n\t\t\t\ttop = Q.top();//\u82e5\u7b2c\u4e8c\u5806\u9876\u6709\u5219\u653e\u5b83\uff0c\u5426\u5219\u5c31\u4f1a\u628a\u4e24\u4e2a\u4e00\u6837\u7684\u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u8df3\u51fa\u5373\u53ef\n\t\t\telse {\n\t\t\t\tprintf(\"0\"); \n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tQ.pop();\n\t\t}\n\t\tpre = ans[i] = top.now;\n\t\tif (top.w > 1) \n\t\t\tQ.push((note){top.now, top.w - 1});\n\t\tif (flag) \n\t\t\tQ.push(tmp);//\u82e5flag\u4e3a\u4e00\uff0c\u5219\u628a\u539f\u6765\u5806\u9876\u653e\u56de\u53bb\n\t}\n\tif (ans[n-1] == ans[n]) {\n\t\tprintf(\"0\"); \n\t\treturn 0;\n\t}\n\tfor (register int i = 1;i <= n; ++i){\n\t\tif (i != n)\n\t\t\tprintf(\"%d \",ans[i]);\n\t\telse printf(\"%d\", ans[i]);\n\t}\n\treturn 0;\n}\n\n\u6700\u540e\u8bb0\u4f4fpus(\"0\")\u4e0d\u884c\uff0c\u56e0\u4e3a\u5b83\u81ea\u5e26\u6362\u884c\uff0c\u56e0\u4e3a\u5fd8\u8bb0\u5566\uff0c \u6240\u4ee5\u63d0\u4ea4\u65f660pt\u597d\u51e0\u6b21\n\n```\n\u6700\u540e\u795d\u5927\u5bb6$oi$\u8def\u4e0a\u8d8a\u8d70\u8d8a\u987a\n\n$AK ioi$\n\n\n\u65e5\u62f1\u4e00\u5352\uff0c\u529f\u4e0d\u5510\u6350\uff01\uff01\uff01\n",
        "postTime": 1570707343,
        "uid": 168317,
        "name": "Last_Reincarnation",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3566 \u3010[POI2014]KLO-Bricks\u3011"
    },
    {
        "content": "## **\u7b80\u5355\u8bf4\u4e24\u53e5**\n\n\u591a\u4e45\u6ca1\u5199\u8fc7\u9898\u89e3\u4e86\u5462...    \n\nblog\u8fd8\u8981\u8fb9\u4e0a\u7684**h^ovny**\u6307\u70b9\u5462\u3002\n\n## \u9898\u76ee\n\n[???](<https://www.luogu.org/problem/P3566>)\n\n## \u601d\u8def\n\n\u7b80\u5355\u60f3\u5230\u8fd9\u662f\u4e00\u4e2a**\u8d2a\u5fc3**\u3002    \n\n\u6bcf\u6b21\u53d6\u5f53\u524d\u6570\u76ee**\u6700\u591a**\u7684\u90a3\u4e2a\u6570\uff0c\u5c06\u5b83\u653e\u5728\u5f53\u524d\u4f4d\u4e0a\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\u6570\u76ee\u76f8\u540c\u7684\u6570\uff0c\u90a3\u4f18\u5148\u53d6\u6700\u540e\u4e00\u4e2a\u6570\u3002\uff08\u5f88\u660e\u663e\uff0c\u907f\u514d\u91cd\u590d\uff09\n\n\u90a3\u8fd9\u5c31\u597d\u505a\u4e86\u3002\u6570\u76ee\u53ef\u4ee5\u7528**\u5806**\u6765\u7ef4\u62a4\u3002\n\n \uff08\u7ed3\u6784\u4f53\u8fd8\u771f\u662f\u4e2a\u6076\u5fc3\u7684\u4e1c\u897f\u5462\u3002\u83ab\u540dRE...\uff09\n\n\u65e0\u89e3\u7684\u60c5\u51b5\u6709\u597d\u591a\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e6+7;\ninline int read(){\n\tint x=0,f=1;char C=getchar();\n\twhile(!isdigit(C)) {if(C=='-') f=-1;C=getchar();}\n\twhile(isdigit(C)) x=(x<<1)+(x<<3)+C-'0',C=getchar();\n\treturn x*f;\n}\nint ans[maxn],n,S,T,tot,a[maxn],last;\nstruct node{\n\tint id,x;\n\tbool operator < (const node &t) const {\n\t\treturn x<(t.x)||((x==t.x)&&t.id==T);\n\t}\n}A;\npriority_queue<node>que;\nint main(){\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn=read(),last=ans[1]=S=read(),T=read();\n\tfor(int i=1;i<=n;i++) tot+=(a[i]=read());\n\ta[S]--,a[T]--; ans[tot]=T;\n\tfor(int i=1;i<=n;i++) que.push((node){i,a[i]});\n\tfor(int i=2;i<tot;i++){\n\t\tbool F=0;\n\t\tnode u=que.top(); que.pop();\n\t\tif(u.id==last) F=1,A=u,u=que.top(),que.pop();\n//\t\tprintf(\"%d %d\\n\",u.id,u.x);\n\t\tif(F){\n\t\t\tif(u.id==A.id) {cout<<0;return 0;}\n\t\t\telse que.push(A);\n\t\t}\n\t\tans[i]=u.id; u.x--;if(u.x>0) que.push(u); last=u.id;\n\t}\n\tint F=1;\n\tfor(int i=2;i<=tot;i++) if(ans[i]==ans[i-1]) F=0;\n\tif(F){\n\t\tprintf(\"%d\",ans[1]);\n\t\tfor(int i=2;i<=tot;i++) printf(\" %d\",ans[i]);\n\t} else cout<<F;\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u4e00\u4e45\u4e86\uff0c\u7801\u98ce\u90fd\u53d8\u4e86\u5462\u3002\n\n\u5e0c\u671b\u80fd\u8fc7\uff0c\u518d%\u4e00\u4e0bVenus\u5927\u4f6c\u3002\n\n\u8c22\u8c22\u89c2\u770b\u3002\n\n",
        "postTime": 1569475850,
        "uid": 47757,
        "name": "dunko",
        "ccfLevel": 6,
        "title": "P3566 [POI2014]KLO-Bricks"
    },
    {
        "content": "\u9996\u5148\u4e0d\u8003\u8651\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u7684\u8bdd\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u601d\u8def\u5c31\u662f\uff0c\u6bcf\u6b21\u53d6\u9664\u4e86\u4e0a\u6b21\u53d6\u7684\u4e4b\u5916\u5269\u4e0b\u6700\u591a\u7684\uff0c\u8fd9\u6837\u4f1a\u8ba9\u53d6\u5f97\u66f4\u5747\u5300\uff0c\u5728\u6709\u89e3\u7684\u60c5\u51b5\u4e0b\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u76f8\u90bb\u91cd\u590d\u7684\u73b0\u8c61\uff0c\u5982\u679c\u4e2d\u9014\u53d1\u73b0\u6ca1\u6cd5\u53d6\u4e86\u90a3\u5c31\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u4f46\u662f\u8981\u662f\u6709\u4e86\u5de6\u53f3\u7aef\u70b9\u548b\u529e\uff1f\u6211\u4eec\u5148\u5728\u6700\u5de6\u8fb9\u628a\u5de6\u7aef\u70b9\u586b\u4e0a\uff0c\u7136\u540e\u5728\u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u8d2a\u5fc3\u3002\u4f46\u662f\u8fd9\u5c31\u4f1a\u9020\u6210\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u586b\u5230\u6700\u53f3\u9762\u7684\u65f6\u5019\uff0c\u548c\u53f3\u7aef\u70b9\u4ea7\u751f\u51b2\u7a81\u4e86\uff0c\u8fd9\u6837\u5c31\u4f1a\u5f88\u5c34\u5c2c\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5e94\u8be5\u8d2a\u5fc3\u7684\u628a\u5269\u4e0b\u7684\u53f3\u7aef\u70b9\u7816\u5757\u5c3d\u91cf\u586b\u5728\u6700\u5de6\u8fb9\uff08\u5148\u7528\u5b8c\uff09\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51b2\u7a81\u4e86\u3002\n\n\u8fd9\u4e2a\u6a21\u62df\u6211\u662f\u62ff\u6743\u503c\u7ebf\u6bb5\u6811\u5b9e\u73b0\u7684\uff0c\u5f53\u7136\u5927\u6982\u4e5f\u53ef\u4ee5\u62ff\u5806\u4ec0\u4e48\u7684\u7ef4\u62a4\uff08\u4e0d\u8fc7\u611f\u89c9\u5806\u4e0d\u592a\u597d\u4fee\u6539\uff0c\u56e0\u4e3a\u6211\u4eec\u4e3a\u4e86\u907f\u514d\u53d6\u5230\u4e0a\u4e00\u4e2a\u586b\u7684\uff0c\u5c31\u6682\u65f6\u628a\u4e0a\u4e00\u4e2a\u7684\u4e2a\u6570\u8bbe\u4e3a-inf\uff0c\u800c\u4e14\u8fd8\u8981\u4fee\u6539\u586b\u5b8c\u4e86\u7684\u4e2a\u6570~~\u53cd\u6b63\u4e00\u76f4\u4ee5\u6765\u6211\u7684\u5806\u90fd\u662f\u62ff\u7ebf\u6bb5\u6811\u5199\u7684\u7ebf\u6bb5\u6811\u5927\u6cd5\u597d~~\uff09\n\n\u54e6\uff0c\u5bf9\u4e86\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u8c8c\u4f3c\u8fd9\u989810\u4e2a\u6d4b\u8bd5\u70b9\u4e2d\u67096\u4e2a\u90fd\u662f\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\u7684\uff0c\u88ab\u8fd9\u4e2a\u5751\u4e86\u534a\u5929\u2026\u2026\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define inf -1234567890\nusing namespace std;\nchar buf[100000000];int ptr=0;\ninline char get_char(){\n\tptr++;return(buf[ptr-1]);\n}\n#define getchar get_char\ninline int get(){\n\tint n;char c;while((c=getchar())||1)if(c>='0'&&c<='9')break;\n\tn=c-'0';while((c=getchar())||1){\n\t\tif(c>='0'&&c<='9')n=n*10+c-'0';\n\t\telse return(n);\n\t}\n}\ntypedef struct _n{//\u7ebf\u6bb5\u6811\n\tint left;int right;int maxn;int pos;\n}node;node memchi[3000001];int gn=1;\nint ints[1000001];\ninline void up(int tree){\n\tint ls=memchi[tree].left,rs=memchi[tree].right;\n\tif(memchi[ls].maxn>memchi[rs].maxn){\n\t\tmemchi[tree].maxn=memchi[ls].maxn;memchi[tree].pos=memchi[ls].pos;\n\t}else{\n\t\tmemchi[tree].maxn=memchi[rs].maxn;memchi[tree].pos=memchi[rs].pos;\n\t}\n}\nint build(int l,int r){//\u5efa\u6811\n\tint tree=gn;gn++;\n\tif(l==r){\n\t\tmemchi[tree].maxn=ints[l];memchi[tree].pos=l;\n\t}else{\n\t\tint mid=(l+r)>>1;memchi[tree].left=build(l,mid);\n\t\tmemchi[tree].right=build(mid+1,r);up(tree);\n\t}return(tree);\n}\nint pt,num;\nvoid setpt(int l,int r,int tree){//\u70b9\u4fee\u6539\n\tif(l==r){\n\t\tmemchi[tree].maxn=num;return;\n\t}int mid=(l+r)>>1;\n\tif(pt<=mid)setpt(l,mid,memchi[tree].left);\n\telse setpt(mid+1,r,memchi[tree].right);up(tree);\n}\nint ans[1000001];//\u7b54\u6848\nvoid print(int num){\n\tif(num>=10)print(num/10);putchar(num%10+'0');\n}\nint main(){\n\tfread(buf,1,100000000,stdin);\n\tint n=get(),l=get(),r=get();int sum=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tints[i]=get();sum+=ints[i];if(!ints[i])ints[i]=inf;\n\t}\n\tif(l==r){//\u7279\u5224\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\u53ef\u80fd\u9020\u6210\u7684\u65e0\u89e3\u60c5\u51b5\n\t\tif(ints[l]<2){\n\t\t\tcout<<0;return(0);\n\t\t}\n\t\tif(sum==2){\n\t\t\tcout<<0;return(0);\n\t\t}\n\t}sum--;\n\tints[r]--;if(!ints[r])ints[r]=inf;int ptr=0;\n\tint root=build(1,n);int lst=l,lbd=ints[l];\n\tans[ptr]=l;ptr++;sum--;\n\tif(l==r){//\u5982\u679c\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\u7684\u8bdd\uff0c\u56e0\u4e3a\u6211\u662f\u7528ints[r]\u76f4\u63a5\u770b\u53f3\u7aef\u70b9\u8fd8\u5269\u4e86\u591a\u5c11\u4e2a\uff0c\u6240\u4ee5\u5de6\u8fb9\u586b\u4e86\u4e00\u4e2a\u540e\u5e94\u8be5\u628a\u8fd9\u4e2a\u518d\u51cf1\uff0c\u4e0d\u52a0\u8fd9\u4e2a\u7684\u8bdd\u53ea\u80fd\u5f9740\u5206\n    \n\t\tints[l]--;if(ints[l]==0)ints[l]=inf;\n\t}\n\twhile(sum){\n\t\tif(ints[r]>0&&lst!=r){//\u5982\u679c\u53f3\u7aef\u70b9\u6ca1\u7528\u5b8c\u7684\u8bdd\u4e14\u80fd\u586b\u4e0a\uff0c\u5c31\u586b\u53f3\u7aef\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5c3d\u91cf\u7684\u5148\u7528\u5b8c\u53f3\u7aef\u70b9\n        \n\t\t\tans[ptr]=r;ptr++;\n\t\t\tpt=lst,num=lbd-1;if(num==0)num=inf;setpt(1,n,root);\n\t\t\tlst=r;lbd=ints[r];sum--;ints[r]--;if(ints[r]==0)ints[r]=inf;\n\t\t}else{\n\t\t\tpt=lst;num=inf;setpt(1,n,root);\n\t\t\tint me=memchi[root].pos,dat=memchi[root].maxn;\n\t\t\tif(dat==inf){//\u586b\u4e0d\u4e86\u4e86\u5c31\u65e0\u89e3\n\t\t\t\tcout<<0;return(0);\n\t\t\t}\n\t\t\tans[ptr]=me;ptr++;sum--;\n\t\t\tpt=lst;num=lbd-1;if(num==0)num=inf;setpt(1,n,root);\n\t\t\tlst=me;lbd=dat; \n\t\t}\n\t}\n\tfor(register int i=0;i<ptr;i++){\n\t\tprint(ans[i]);putchar(' ');\n\t}print(r);\n\treturn(0);\n}\n```",
        "postTime": 1527405773,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3566 \u3010[POI2014]KLO-Bricks\u3011"
    }
]