[
    {
        "content": "\u9898\u76ee\u5f88\u6c34  \n\u4ee3\u7801\u7b80\u5355\u6613\u61c2  \n~~\u5077\u770b\u4e86\u4e00\u4e0b\u6807\u7b7e~~  \n## \u6ca1\u9519\u5c31\u662f\u751f\u6210\u6811\uff01\uff01\uff01  \n# \u601d\u8def\uff1a\n\u628a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\uff0c\u4e00\u8fb9Kruskal\uff0c\u8bb0\u5f55\u4e0b\u6700\u5927\u7684\u8fb9\uff0c\u548c\u6bcf\u53ea\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u8f83\u4e00\u4e0b\uff0c\u5982\u679c\u8df3\u8dc3\u8ddd\u79bb\u5927\u5c31ans++\u3002    \n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801    \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,ans=0;\ndouble sum=-1;\nint a[1000005][3],b[1000005],pre[1000005];//\t\u524d\u9762\u4e00\u76f4RE\uff0c\u5f00\u5927\u4e00\u70b9\uff1b\n\nstruct zzz {\n\tint x,y;\n\tdouble p;\n} z[1000005];\n\nint cmp(zzz k,zzz d) {\n\treturn k.p<d.p;\n}\n\nint find(int x) {\n\tif(pre[x]==x)\n\t\treturn x;\n\treturn pre[x]=find(pre[x]);\n}\n\nint main() {\n\tcin>>m;\n\tfor(int i=1; i<=m; i++) {\n\t\tcin>>b[i];\n\t}\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>a[i][1]>>a[i][2];\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tif(i!=j) {\n\t\t\t\tk++;\n\t\t\t\tz[k].x=i;\n\t\t\t\tz[k].y=j;\n\t\t\t\tz[k].p=sqrt((a[i][1]-a[j][1])*(a[i][1]-a[j][1])+(a[i][2]-a[j][2])*(a[i][2]-a[j][2]));\n\t\t\t}\n\t\t}\n\t}\t\n\tint cnt=n;//Kruskal\uff01\uff01\uff01\n\tsort(z+1,z+k+1,cmp);\n\tfor(int i=1; i<=n; i++) {\n\t\tpre[i]=i;\n\t}\n\tfor(int i=1; i<=k; i++) {\n\t\tif(cnt==1)\n\t\t\tbreak;\n\t\tint s1=find(z[i].x),s2=find(z[i].y);\n\t\tif(s1!=s2) {\n\t\t\tpre[s1]=s2;\n\t\t\tcnt--;\n\t\t\tsum=z[i].p;\n\t\t}\n\t}\n\tfor(int i=1; i<=m; i++) {//\u6bd4\u8f83\n\t\tif(sum<=b[i])\n\t\t\tans++;\n\t}\n\tcout<<ans<<endl;//\u5b8c\u7f8e\u8f93\u51fa\n\treturn 0;\n}\n```\n## \u7b2c\u4e09\u6b21\u53d1\u9898\u89e3\uff0c\u6709\u9519\u8bef\u8bf7\u5404\u4f4d\u795e\u7287\u6307\u70b9  \n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b\u6211\u7684[\u535a\u5ba2](https://www.luogu.org/blog/zhaozizhuo/)\n",
        "postTime": 1551962235,
        "uid": 110766,
        "name": "\u54e5\u5c31\u662f\u62fd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 [HAOI2006]\u806a\u660e\u7684\u7334\u5b50"
    },
    {
        "content": "# P2504\n[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P2504)\n\u5f53\u7136\u662f\u751f\u6210\u6811....\n\n## \u9898\u610f:\n\u7ed9\u51fa\u6240\u6709\u7334\u5b50\u7684\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\uff0c\u7136\u540e\u7ed9\u4f60\u5f88\u591a\u6811\uff0c\u663e\u7136\u662f\u8ba9\u4f60\u641e\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811.\n\n\u7136\u540e\u8ba9\u4f60\u770b\u770b\u6709\u51e0\u53ea\u7334\u5b50\u6bd4\u8fd9\u68f5\u751f\u6210\u6811\u4e0a\u7684\u6240\u6709\u8fb9\u7684\u957f\u5ea6\u90fd\u957f.\n\n## \u601d\u8def:\n\u6bd4\u6240\u6709\u8fb9\u90fd\u957f\u7684\u8bdd\uff0c\u90a3\u5c31\u662f\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u6700\u957f\u7684\u8fb9\u90fd\u5927\u7684\u8bdd\uff0c\u90a3\u5c31\u6bd4\u6240\u6709\u7684\u90fd\u5927\u4e86\uff0c\u7136\u540e\u90a3\u53ea\u7334\u5b50\u5c31\u53ef\u4ee5\u8df3\u5230\u6240\u6709\u7684\u6811\u4e0a\u4e86.\n\n\u5148\u770b\u770b\u600e\u4e48\u5efa\u8fb9\u5427,\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a..\n\n\u5148\u8bb0\u5f55\u4e00\u4e0b\u6240\u6709\u8fb9\u7684\u5750\u6807\uff0c\u7136\u540e\u5bf9\u6bcf\u4e24\u4e2a\u70b9\u90fd\u5efa\u4e00\u6761\u8fb9.\n\u957f\u8fd9\u6837\uff1a\n\n```cpp\n\tfor (int i = 1; i <= m; i++) px[i] = read(), py[i] = read();//\u5148\u628a\u8fb9\u8bfb\u8fdb\u53bb\n\tint cnt = 0;//\u8bb0\u5f55\u8fb9\u7684\u6570\u91cf.sort\u7528\u5230\n\tfor (int i = 1; i <= m; i++) \n\t\tfor (int j = i + 1; j <= m; j++) {\n\t\t\tedge[++cnt].x = i;//\u8bb0\u5f55\u8fd9\u6761\u8fb9\u8fde\u5f97\u4e24\u4e2a\u70b9\n\t\t\tedge[cnt].y = j;\n\t\t\tedge[cnt].dis = sqrt((px[i] - px[j]) * (px[i] - px[j]) + (py[i] - py[j]) * (py[i] - py[j]));//\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb.\n\t\t}\n```\n\n\u751f\u6210\u6811\u677f\u5b50\u7684\u8bdd\u6211\u5c31\u4e0d\u653e\u4e86.\u76f4\u63a5\u770b\u4ee3\u7801\u5427.\n\n### code:\n```cpp\n#include <bits/stdc++.h>\n#define N 1000010\n#define M 1010\n\nusing namespace std;\ndouble px[M], py[M]; int fath[M];\nint n, m, monkey[501];\nstruct node {\n\tint x, y;\n\tdouble dis;\n}edge[N];\n\nint read() {\n    int s = 0, f = 0; char ch = getchar();\n    while (!isdigit(ch)) f |= (ch == '-'), ch = getchar();\n    while (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n    return f ? -s : s;\n}\n\nbool cmp (node a, node b) { //sort\u7528\n\treturn a.dis < b.dis;\n}\n\nint father(int x) {\n\tif (fath[x] != x) fath[x] = father(fath[x]);//kruskal\u5e76\u67e5\u96c6\u7528\n\treturn fath[x];\n}\n\nvoid unionn(int x, int y) {\n\tint fx = father(x), fy = father(y);//kruskal\u5e76\u67e5\u96c6\u7528\n\tfath[fx] = fy;\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i <= n; i++) monkey[i] = read();\n\tm = read();\n\tfor (int i = 1; i <= m; i++) px[i] = read(), py[i] = read();\n\tint cnt = 0;\n\tfor (int i = 1; i <= m; i++) \n\t\tfor (int j = i + 1; j <= m; j++) {\n\t\t\tedge[++cnt].x = i;\n\t\t\tedge[cnt].y = j;\n\t\t\tedge[cnt].dis = sqrt((px[i] - px[j]) * (px[i] - px[j]) + (py[i] - py[j]) * (py[i] - py[j]));\n\t\t}\n\tsort(edge + 1, edge + cnt + 1, cmp);\n\tfor (int i = 1; i <= m; i++) fath[i] = i;\n\tdouble maxn = -1; int po = 0;\n\tfor (int i = 1; i <= cnt; i++) {\n\t\tif (father(edge[i].x) != father(edge[i].y)) {\n\t\t\tunionn(edge[i].x, edge[i].y);\n\t\t\tpo++;\n\t\t\tmaxn = max(maxn, edge[i].dis);//\u8bb0\u5f55\u4e00\u4e0b\u957f\u8fb9\u7684\u957f\u5ea6.\n\t\t}\n\t\tif (po == m - 1) break;\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; i++) if (monkey[i] >= maxn) ans++;\n//\u5982\u679c\u4e00\u53ea\u7334\u5b50\u7684\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u6700\u957f\u8fb9\u90fd\u957f\uff0c\u90a3\u4e48\u4ed6\u5c31\u53ef\u4ee5\u5728\u8fd9\u68f5\u751f\u6210\u6811\u4e0a\u968f\u4fbf\u8df3\u4e86\uff08\u4e3a\u6240\u6b32\u4e3a\uff09\n\tcout << ans;\n}\n```",
        "postTime": 1571530705,
        "uid": 188155,
        "name": "K2sen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ea\u8981\u7406\u6e05\u4e86\u601d\u8def\uff0c\u5c31\u4f1a\u53d1\u73b0\u662fMST\u88f8\u9898\u3002MST\u5177\u6709\u7684\u4e00\u4e2a\u6027\u8d28\uff1a\u201cMST\u7684\u6700\u5927\u8fb9\u6743\u662f\u8fd9\u4e2a\u56fe\u6240\u6709\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743\u4e2d\u6700\u5c0f\u7684\u3002\u201d\u5bf9\u4e8e\u4e00\u53ea\u7334\u5b50\uff0c\u5b83\u80fd\u5426\u8df3\u5230\u6bcf\u68f5\u6811\u4e0a\uff0c\u53d6\u51b3\u4e8e\u5b83\u8df3\u8dc3\u7684\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9\u6743\u662f\u5426\u4f1a\u8d85\u8fc7\u5b83\u7684\u8df3\u8dc3\u9650\u5ea6\uff0c\u800cMST\u53ef\u4ee5\u505a\u5230\u201c\u6700\u5927\u8fb9\u6743\u6700\u5c0f\u201d\uff0c\u5982\u679c\u67d0\u53ea\u7334\u5b50\u6309\u7167MST\u6765\u8df3\u8dc3\uff0c\u5c31\u53ef\u4ee5\u5c3d\u91cf\u7684\u628a\u8df3\u8dc3\u7684\u6700\u5927\u8fb9\u6743\u63a7\u5236\u5230\u6700\u5c0f\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7684\u5212\u5206\u51fa\u6765\u4e86\u3002\u5148\u7528prim\u6c42\u51faMST\uff08\u4e0d\u7528kruskal\u7684\u539f\u56e0\u662fkruskal\u662f\u628a\u6240\u6709\u7684\u8fb9\u5168\u90e8\u5f04\u51fa\u6765\u518d\u505a\uff0c\u800cprim\u662f\u8fb9\u505a\u8fb9\u6c42\uff0c\u4e0d\u4f1a\u6d6a\u8d39\u5140\u4f59\u7684\u7684\u7a7a\u95f4\uff09\uff0c\u8fb9\u505a\u8fb9\u627e\u5230\u6700\u5927\u8fb9\u6743\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u53ea\u7334\u5b50\u6bd4\u8f83\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u4ee3\u7801\u89c1\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n#define db double\nusing namespace std;\nconst int INF=0x3f3f3f3f;db MST_max,dis[1005],vis[1005];int n,jump[505];\nstruct STR1{db x,y;}pos[1005];struct STR2{int ind;db num;};\nSTR2 pack(int ind,db num){STR2 a;a.ind=ind;a.num=num;return a;}\nstruct HEAP{\n\tint tail;STR2 tree[5000005];HEAP(){tail=0;}\n\tSTR2 _top(){return tail?tree[1]:pack(-1,INF);}\n\tvoid _insert(STR2 q){\n\t\ttree[++tail]=q;int p=tail;\n\t\twhile(p>1&&tree[p].num<tree[p>>1].num){swap(tree[p],tree[p>>1]);p>>=1;}\n\t}\n\tvoid _delete(){\n\t\ttree[1]=tree[tail--];int p=1;\n\t\twhile(p<<1<=tail){\n\t\t\tint son=p<<1;if(son<tail&&tree[son].num>tree[son+1].num)son++;\n\t\t\tif(tree[son].num>=tree[p].num)break;\n\t\t\tswap(tree[son],tree[p]);p=son;\n\t\t}\n\t}\n}heap;\ndb solve(int a,int b){return sqrt((pos[a].x-pos[b].x)*(pos[a].x-pos[b].x)+(pos[a].y-pos[b].y)*(pos[a].y-pos[b].y));}\nvoid prim(){\n\theap._insert(pack(1,0));for(int i=2;i<=n;i++)dis[i]=INF;\n\tfor(int i=1;i<=n;i++){\n\t\twhile(vis[heap._top().ind])heap._delete();\n\t\tSTR2 q;q=heap._top();MST_max=max(MST_max,dis[q.ind]);dis[q.ind]=0;vis[q.ind]=1;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(solve(q.ind,j)<dis[j])heap._insert(pack(j,dis[j]=solve(q.ind,j)));\n\t}\n}\nint main(){\n\tint m,cnt=0;scanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d\",&jump[i]);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%lf%lf\",&pos[i].x,&pos[i].y);\n\tprim();\n\tfor(int i=1;i<=m;i++)if(MST_max<=jump[i])cnt++;\n\tprintf(\"%d\",cnt);\n\treturn 0;\n}\n```\n",
        "postTime": 1587909455,
        "uid": 313892,
        "name": "sukimo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "# \u6700\u5c0f\u751f\u6210\u6811\u677f\u5b50\u9898\n\n\u770b\u5230\u6ca1\u4eba\u53d1 $Prim$ \u7684\u4f18\u5148\u961f\u5217\u4f18\u5316\uff0c\u8fd9\u91cc\u53d1\u4e00\u4e2a\u3002\u6211\u731c\u6ca1\u6709 $Prim$ \u9898\u89e3\u662f\u56e0\u4e3a\u4e0d\u52a0\u4f18\u5148\u961f\u5217\u4f1a\u8d85\u65f6\uff1f\uff08~~\u4ec5\u4ec5\u662f\u731c\u6d4b~~\uff09\n\n\u5982\u679c\u4e00\u53ea\u7334\u5b50\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u6700\u5927\u8fb9\u90fd\u957f\u7684\u8bdd\uff0c\u7334\u5b50\u5c31\u53ef\u4ee5\u8df3\u5230\u6240\u6709\u7684\u6811\u4e0a\u4e86\u3002\n\n\u7b97\u51fa\u4efb\u610f\u4e24\u68f5\u6811\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e76\u5efa\u8fb9\uff0c\u8dd1\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u518d\u4f9d\u6b21\u770b\u7334\u5b50\u8df3\u4e0d\u8df3\u5f97\u8fc7\u5c31\u884c\u4e86\u3002\u5177\u4f53\u770b\u4ee3\u7801\n# \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<cmath>\n#include<queue>\nusing namespace std;\nlong long n,jump[600],x[1200],y[1200],cnt,head[1200],dis[1200],max_dis=0;\nbool vis[1200];\nstruct{\n\tlong long v,nxt,w;\n}e[2001000];//\u94fe\u5f0f\u524d\u5411\u661f\nvoid adde(long long u,long long v,long long w){\n\te[++cnt].v=v;\n\te[cnt].w=w,e[cnt].nxt=head[u];\n\thead[u]=cnt;\n}//\u5efa\u8fb9\nvoid prim(){\n\ttypedef pair<long long,long long>p;\n\tpriority_queue<p,vector<p>,greater<p> >q;//\u4f18\u5148\u961f\u5217\u6309\u6811\u95f4\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0cnlogn\u590d\u6742\u5ea6\n\tlong long chosen_point_num=1,u=1;//chosen_point_num\u8868\u793a\u5df2\u7ecf\u5b8c\u6210\u5efa\u6811\u7684\u70b9\u7684\u6570\u91cf\u3002\u7b49\u4e8en\u65f6\u8bf4\u660e\u6574\u68f5\u6811\u5efa\u5b8c\u4e86\n\tmemset(dis,0x3f,sizeof(dis));//\u521d\u59cb\u6811\u95f4\u8ddd\u79bb\u4e3a\u65e0\u7a77\u5927\n\tfor(long long i=head[u];i;i=e[i].nxt){\n\t\tlong long v=e[i].v;dis[v]=min(dis[v],e[i].w);\n\t\tq.push(make_pair(dis[v],v));\n\t}//\u521d\u59cb\u5316\uff0c\u628a1\u53f7\u70b9\u5468\u56f4\u7684\u70b9\u52a0\u5165\u4f18\u5148\u961f\u5217\u4f5c\u4e3a\u5f85\u52a0\u5165\u70b9\n\twhile(++chosen_point_num<=n){\n\t\tvis[u]=1;//\u5df2\u7ecf\u9009\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u4ee5\u540e\u4e0d\u518d\u91cd\u590d\u9009\n\t\twhile(vis[q.top().second])q.pop();//\u5ffd\u7565\u5df2\u7ecf\u9009\u7684\u70b9\n\t\tmax_dis=max(max_dis,q.top().first);//\u8fd9\u5c31\u662f\u957f\u5ea6\u6700\u5c0f\u7684\u8fb9\u4e86\uff0c\u66f4\u65b0\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u957f\u8fb9\u957f\u5ea6\uff0c\u5373\u66f4\u65b0max_dis\n\t\tu=q.top().second;q.pop();\n\t\tfor(long long i=head[u];i;i=e[i].nxt){//\u7ee7\u7eed\u6269\u5c55\n\t\t\tlong long v=e[i].v;\n\t\t\tif(vis[v]==0&&dis[v]>e[i].w){//\u9009\u8fc7\u7684\u70b9\u8df3\u8fc7\n\t\t\t\tdis[v]=e[i].w;\n\t\t\t\tq.push(make_pair(dis[v],v));//\u65b0\u66f4\u65b0\u7684\u53ef\u9009\u70b9\u52a0\u5165\u4f18\u5148\u961f\u5217\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tlong long m,ans=0;cin>>m;\n\tfor(long long i=1;i<=m;i++){\n\t\tscanf(\"%lld\",&jump[i]);\n\t\tjump[i]*=jump[i];//\u5b58\u7334\u5b50\u8df3\u8dc3\u8ddd\u79bb\uff0c\u8fd9\u91cc\u5e73\u65b9\u4e00\u4e0b\u540e\u9762\u5efa\u8fb9\u65f6\u5c31\u4e0d\u7528\u5f00\u65b9\u4e86\n\t}\n\tcin>>n;\n\tfor(long long i=1;i<=n;i++)\n\t\tscanf(\"%lld%lld\",&x[i],&y[i]);\n\tfor(long long i=1;i<=n;i++)\n\t\tfor(long long j=i+1;j<=n;j++){\n\t\t\tlong long tmp=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);//\u5efa\u8fb9\u65f6\u5efa\u6b27\u62c9\u8ddd\u79bb\uff0c\u524d\u9762\u7334\u5b50\u8df3\u8dc3\u8ddd\u79bb\u5df2\u5e73\u65b9\uff0c\u4e0d\u7528\u5f00\u65b9\u4e86\n\t\t\tadde(i,j,tmp),adde(j,i,tmp);//\u4e24\u4e24\u5efa\u53cc\u5411\u8fb9\n\t\t}\n\tprim();\n\tfor(int i=1;i<=m;i++)if(jump[i]>=max_dis)ans++;\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1573028080,
        "uid": 19811,
        "name": "\u66ae\u5149\u95ea\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "# \u751f\u6210\u6811 AC\n### \u7167\u6837\u6392\u5751\n- \u5176\u5b9e\u6ca1\u5565\u5751\uff0c\uff0c\u6ce8\u610f\u6570\u7ec4\u8303\u56f4\u5c31\u597d\n- \u8fb9\u7684\u6761\u6570\u4e0d\u662f\u70b9\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6c42\u8fb9\u7684\u6570\u7ec4\u8981\u5f00\u5230\n\n[\u6570\u7ec4\u5f00\u5c0f\u4e86\u5c31\u8fd9\u6837\u4e86(\u6211\u4e00\u5f00\u59cb\u8fb9\u7684\u6761\u6570\u662f\u70b9\u7684\u4e2a\u6570)](https://www.luogu.org/recordnew/show/16243026)\n\n### \u65b9\u6cd5\n\n\n------------\n\t\n#### \u5c0f\u4f18\u5316\uff1a\n\u6c42\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u662f\n```cpp\nsqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))\n```\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u8fdb\u884c\u5f00\u6839\u5904\u7406\uff0c\u53cd\u800c\u5c06\u7334\u5b50\u8df3\u8dc3\u7684\u8ddd\u79bb\u5e73\u65b9\uff0c\u5176\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u76f4\u63a5\u53bb\u6389\u5f00\u6839\uff0c\u4f7f\u8fb9\u7684\u957f\u5ea6\u4fbf\u4e8e\u5b58\u50a8\u548c\u8ba1\u7b97\n\n------------\n\n#### \u7136\u540e\u6b63\u5f0f\u8bb2\u8bf4\u4e00\u4e0b\u600e\u4e48\u505a\u7684\n- \u5148\u8f93\u5165\u7334\u5b50\u6570\u91cf\u4ee5\u53ca\u6bcf\u53ea\u7334\u5b50\u80fd\u8df3\u591a\u8fdc\n- \u5bf9\u6bcf\u53ea\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u8fdb\u884c\u5e73\u65b9\u5904\u7406\n- \u8f93\u5165\u6bcf\u4e2a\u70b9\n- \u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9(\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u662f\u4e24\u70b9\u7684\u8ddd\u79bb\u7684\u5e73\u65b9)(\u56e0\u4e3a\u53ea\u662f\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898\uff0c\u6240\u4ee5[i][j]\u4e0e[j][i]\u662f\u4e00\u6837\u7684\uff0c\u53ea\u5efa\u7acb\u4e00\u6761\u8fb9\u5c31\u591f\u4e86)\n- \u5c06\u6240\u6709\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n- \u5224\u65ad\u6bcf\u6761\u8fb9\u4e24\u70b9\u662f\u5426\u5728\u4e00\u68f5\u6811\u4e0a\uff0c\u5982\u679c\u4e0d\u5728\u5c31\u5c06\u4e24\u4e2a\u70b9\u5408\u5e76\uff0c\u5982\u679c\u5728\u5c31\u4e0d\u7528\u7ba1\n- \u5982\u679c\u6240\u6709\u70b9\u90fd\u5df2\u7ecf\u5728\u6811\u4e0a\u4e86\u5c31\u9000\u51fa\u8f93\u51fa\u6811\u4e2d\u6700\u5927\u7684\u8fb9(\u56e0\u4e3a\u6392\u8fc7\u5e8f\u6240\u4ee5\u6700\u5927\u7684\u8fb9\u5c31\u662f\u6700\u540e\u8fdb\u5165\u6811\u7684\u8fb9)\n- \u5bf9\u6240\u6709\u7684\u7334\u5b50\u8df3\u8fc7\u7684\u8ddd\u79bb\u8fdb\u884c\u6bd4\u8f83\n- \u8f93\u51fa\n### \u5177\u4f53AC\u4ee3\u7801\n[\u5177\u4f53AC\u60c5\u51b5](https://www.luogu.org/recordnew/show/16243288)\n```cpp\n#include<bits/stdc++.h>//\u5934\u6587\u4ef6\nusing namespace std;\nint n,m,q=0;\nint o[501];\nint f[1001];\nint d[1001][1001];\nstruct point{//\u8bb0\u5f55\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\n    int x,y;\n} h[1001];\nstruct edge{//\u8bb0\u5f55\u8fb9\u7684\u5f00\u59cb(s)\u7ed3\u675f(e)\u957f\u5ea6(w)\n    int s,e,w;\n} g[1001000];\nint cmd(edge a,edge b){return a.w<b.w;}//\u6309\u8fb9\u7684\u957f\u77ed\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nint find(int s){if(f[s]==s||f[s]==0)return f[s]=s;//\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u52a0\u5165\u4efb\u4f55\u4e00\u68f5\u6811(f[s]==0)\u6216\u8005\u8fd9\u4e2a\u70b9\u7684\u6811\u662f\u81ea\u5df1(f[s]==s)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u6811\u662f\u5b83\u81ea\u5df1\nelse return f[s]=find(f[s]);}//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u52a0\u5165\u4e00\u4e2a\u6811\u4e86\uff0c\u90a3\u4e48\u8f93\u51fa\u8fd9\u4e2a\u6811\u7684\u6811\u6839\nint k(){//\u6700\u5c0f\u751f\u6210\u6811\u51fd\u6570\n    int cnt=0;//\u8bb0\u5f55\u6811\u4e0a\u5df2\u7ecf\u6709\u51e0\u6761\u8fb9\n    for(int i=1;i<=q;i++){//\u6bcf\u6761\u8fb9\u90fd\u8fdb\u884c\u5224\u65ad\n        int x=find(g[i].s);//\u770b\u770b\u8d77\u70b9\u5728\u54ea\u68f5\u6811\u4e0a\n        int y=find(g[i].e);//\u770b\u770b\u7ec8\u70b9\u5728\u54ea\u68f5\u6811\u4e0a\n        if(x!=y){//\u5982\u679c\u8d77\u70b9\u7ec8\u70b9\u4e0d\u5728\u540c\u4e00\u68f5\u6811\u4e0a\n            f[x]=y;//\u5408\u5e76\u6210\u4e3a\u4e00\u68f5\u6811\n            if(++cnt>=m-1)return g[i].w;//\u5982\u679c\u5408\u5e76\u540e\u8fb9\u7684\u4e2a\u6570\u662f\u70b9\u7684\u4e2a\u6570\u51cf\u4e00\u90a3\u4e48\u4ee3\u8868\u6240\u6709\u70b9\u90fd\u5728\u6811\u4e0a\u4e86\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u6761\u52a0\u5165\u7684\u8fb9\u7684\u957f\u5ea6(\u56e0\u4e3a\u6392\u8fc7\u5e8f\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u6700\u957f\u7684)\n        }\n    }\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>o[i];\n        o[i]=o[i]*o[i];//\u5bf9\u6bcf\u4e2a\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u8fdb\u884c\u5e73\u65b9\u5904\u7406\n    }\n    cin>>m;\n    for(int i=1;i<=m;i++){//\u8f93\u5165\u70b9\u7684\u5750\u6807\n        cin>>h[i].x>>h[i].y;\n    }\n    for(int i=1;i<=m;i++){//\u6bcf\u4e24\u4e2a\u70b9\u884c\u7a0b\u4e00\u6761\u8fb9\n        for(int j=1;j<=m;j++){\n            if(i>=j)continue;//\u56e0\u4e3a\u662f\u751f\u6210\u6811\u6240\u4ee5\u70b9\u7684\u987a\u5e8f\u65b9\u5411\u6ca1\u6709\u8981\u6c42(\u4f8b\uff1a[1][2]\u548c[2][1]\u6ca1\u6709\u533a\u522b\u6240\u4ee5\u53ef\u4ee5\u53bb\u6389\u4e00\u6761\u8fb9)\n            int u=(h[i].x-h[j].x)*(h[i].x-h[j].x)+(h[i].y-h[j].y)*(h[i].y-h[j].y);//\u4e24\u70b9\u8ddd\u79bb\u7684\u5e73\u65b9\u65b9\u4fbf\u8fd0\u7b97\u4e0d\u5f00\u6839\n            if(u!=0)g[++q]=(edge){i,j,u};//\u8bb0\u5f55\u8fb9\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u4ee5\u53ca\u8ddd\u79bb\n        }\n    }\n    sort(g+1,g+1+q,cmd);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    int p=k();//\u8fdb\u5165\u6700\u5c0f\u751f\u6210\u6811\u51fd\u6570\n    int t=0;\n    for(int i=1;i<=n;i++){\n        if(o[i]>=p)t++;\n    }\n    cout<<t;\n    return 0;\n}\n```\n\u611f\u8c22\u5927\u5bb6\u80fd\u770b\u6211\u7684\u9898\u89e3\uff01",
        "postTime": 1550070344,
        "uid": 125071,
        "name": "Blue_wonders",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u539f\u8c05\u6211\u592a\u6c34\u4e86\u3002\u3002\u3002\u3002\u7adf\u7136\u60f3\u5230\u4e86\u6bcf\u4e2a\u7334\u5b50\u8dd1\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u662f\u5728\u52a0\u4e0aans=m-i+1\u548cbreak\u540e\u7adf\u7136\u8fc7\u4e86\u3002\u3002\u3002\u3002\u3002233  \u4e8e\u662f\u6765\u5199\u4e00\u4e0b\u9898\u89e3\uff08\u5f88\u66b4\u529b\u76f4\u63a5\u7684\u65b9\u6cd5,\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u7ed9\u6211\u8fc7\u3002\u3002\u3002\u3002\u3002\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntemplate <class T> void read (T &x)\n{\n    int f=0; x=0; char ch=getchar();\n    while(ch<'0'||ch>'9')  \n    {\n        f|=(ch=='-');\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        f=(x>>1)+(x>>3)+(ch^48);\n        ch=getchar();\n    }\n    x=f?-x:x;\n    return;\n}\nint father[2001],x[2001],y[2001];\ndouble jump[2001];\nint m,n;\nint find(int x)\n{\n    if(father[x]==x)  return x;\n    else {\n        int ff=find(father[x]);\n        return father[x]=ff;\n    }\n}\n\nint main(){\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%lf\",&jump[i]);\n    \n    }\n    scanf(\"%d\",&n);\n    sort(jump+1,jump+1+m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);\n    }\n    int ans=0;\n    for(int i=1;i<=m;i++)\n    {\n        for(int q=1;q<=n;q++)\n           {\n             father[q]=q;\n         }\n        int sum=0;\n        for(int j=1;j<n;j++)\n        {\n            for(int k=j+1;k<=n;k++)\n            {\n                int temp1=find(j);\n                int temp2=find(k);\n                if(temp1==temp2)  continue;\n                double lenth=sqrt((x[j]-x[k])*(x[j]-x[k])+(y[j]-y[k])*(y[j]-y[k]));\n                if(lenth<=jump[i] )\n                {\n                    father[temp1]=temp2;\n                    sum++;\n                    if(sum==n-1)  break;\n                }\n                if(sum==n-1)  break;\n            }\n            if(sum==n-1)   break;\n        }\n        if(sum==n-1)\n            {\n             ans=m-i+1;\n            break;\n        }\n            \n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1522321506,
        "uid": 55412,
        "name": "\u65e0\u7fa1qwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "> # [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/qf-breeze/p/10585519.html)\n\n> # [$problem$](https://www.luogu.org/problemnew/show/P2504)\n\n>\u9996\u5148\u5462\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f \u522b\u683d\u5728\u81ea\u5df1\u7684\u6570\u7ec4\u624b\u91cc\n\n>\u6c42\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u662f\n\n$sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))$\n\n>\u6839\u636e\u8fd9\u4e2a \u6765\u8dd1$kruskal$\n>\u4e0d\u8fc7\u7279\u522b\u6ce8\u610f\u7684\u662f $kruskal$ \u4e5f\u662f\u8981\u7528\u5e76\u67e5\u96c6\u7684\u3002\u3002\n>\u6240\u4ee5\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316 \u5343\u4e07\u522b\u7701\u53bb\uff08\u4e0d\u7136\u6574\u4e2a\u5e76\u67e5\u96c6\u7684\u7956\u5148\u90fd\u662f0\uff09\n\n~~~\nfor(register int i=1;i<=n;i++) fa[i] = i ;\n~~~\n\n>\u5b8c\u6574\u4ee3\u7801\n\n\n~~~\n#ifdef Dubug\n\n#endif\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL ;\ninline LL In() {\n    LL res(0),f(1);\n    register char c ;\n    while(isspace(c=getchar())) ;\n    c == '-'? f = -1 , c = getchar() : 0 ;\n    while(res = (res << 1) + (res << 3) + (c & 15) , isdigit(c=getchar())) ;\n    return res * f ;\n}\nint n , m ;\nstruct node {\n    int u,v;\n    double w;\n};\nconst int N = 1000005;\nnode edge[N] ;\nint fa[N] ;\nint a[N][3] , b[N] ;\nbool cmp (node x,node y) {\n    return x.w < y.w ;\n}\nint cnt (0) ;\ninline void Add(int u,int v,double w) {\n    cnt ++ ;\n    edge[cnt] = node {u,v,w};\n    return ;\n}\ninline int find(int x) {\n    return fa[x] == x ? fa[x] : fa[x] = find(fa[x]) ;\n}\ninline void merge(int x,int y) {\n    fa[x] = fa[y];\n}\ninline void kruskal() {\n    double ans ;\n    int v (0) ;\n    sort(edge+1,edge+cnt+1,cmp) ;\n    for(register int i=1; i<=cnt; i++) {\n        int x = find(edge[i].u) , y = find(edge[i].v) ;\n        if(x == y) continue ;\n        merge(x,y) ;\n        ans = edge[i].w ;\n        if(++ v == n - 1) break ;\n    }\n    int count = 0 ;\n    for(register int i=1; i<=m; i++) ans<=b[i]?count ++:0 ;\n    cout << count << endl ;\n    return ;\n}\nsigned main() {\n    \n    m = In() ;\n    for(register int i=1; i<=m; i++) b[i] = In() ;\n    n = In() ;\n    for(register int i=1; i<=n; i++) a[i][1] = In() , a[i][2] = In() ;\n    for(register int i=1; i<=n; i++)\n        for(register int j=1; j<=n ; j++)\n            if(i!=j) Add(i,j,sqrt((a[i][1]-a[j][1])*(a[i][1]-a[j][1])+(a[i][2]-a[j][2])*(a[i][2]-a[j][2]))) ;\n    for(register int i=1;i<=n;i++) fa[i] = i ;\n    return kruskal() , 0 ;\n}\n~~~",
        "postTime": 1553345772,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u673a\u623f\u8003\u8bd5\u8003\u4e86\u8fd9\u4e2a\u9898\uff0c\u6211\u7b2c\u4e00\u773c\u5c45\u7136\u6ca1\u770b\u51fa\u6765\u662fprim\uff0c\u8003\u8bd5\u4e4b\u540e\u624d\u53d1\u73b0\u7684\u3002\n\u6211\u7528\u7684\u662f\u4e8c\u5206+bfs\u5224\u65ad\u80fd\u4e0d\u80fd\u8d70\u5b8c\u6bcf\u4e00\u4e2a\u5c31\u53ef\u4ee5\u8fc7\n```\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<deque>\n#include<set>\n#include<map>\n#define N 100005\nusing namespace std;\nconst int INF=1<<29;\nstruct Node{\n\tint x,y;\n}a[N];\nint s[N],v[N];\nint l=INF,r=-INF;\nint n,m;\ndouble jl(int x,int y){\n\treturn sqrt((a[x].x-a[y].x)*(a[x].x-a[y].x)+(a[x].y-a[y].y)*(a[x].y-a[y].y));\n}\nbool check(int s){\n\tint xx=1;\n\tmemset(v,0,sizeof(v));\n\tqueue<int>q;q.push(1);v[1]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!v[i]&&jl(i,x)<=s){\n\t\t\t\tq.push(i);v[i]=1;\n\t\t\t\txx++;\n\t\t\t}\n\t\t}\n\t}\n\treturn xx==n;\n}\nint main(){\n//\tfreopen(\"monkey.in\",\"r\",stdin);\n//\tfreopen(\"monkey.out\",\"w\",stdout);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&s[i]);\n\t\tl=min(s[i],l);\n\t\tr=max(s[i],r);\n\t}\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].x,&a[i].y);\n\tl-=3,r+=3;\n\twhile(l<r){\t\t\n\t\tint mid=l+r>>1;\n\t\tif(check(mid))r=mid;\n\t\telse l=mid+1;\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(s[i]>=l)\n\t\t\tans++;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1531962231,
        "uid": 75982,
        "name": "jiangby",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u4e3b\u8981\u601d\u8def\uff1a\u751f\u6210\u6570\u3010~~\u5e9f\u8bdd~~\u3011~~\uff08\u51e0\u4e4e\u662f\u88f8\u7684\uff09~~\n\u8be6\u60c5\u89c1\u4e0b\u9762\u4ee3\u7801\u91cc\u9762\u7684\u6ce8\u91ca\n\nP.S. \u8fd9\u9898\u60c5\u5883\u4e0bprim\u66f4\u5feb\uff0c\u4f46\u3002\u3002\u3002\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct P\n{\n\tint x,y,z;\n}a[2500005];//\u7ed3\u6784\u4f53\nint fa[1005],n,m,p=0,ans=0,x[1005],y[1005];\nint j[1005];//j->\u6bcf\u53ea\u7334\u5b50jump\u7684\u8303\u56f4\nint fx,fy;\n\nint find(int x)//\u627e\u7238\u7238\n{\n\tif(fa[x]==x) return x;\n\telse return fa[x]=find(fa[x]);\n}\n\nbool cmp(P q,P w)\n{\n\treturn q.z<w.z;\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>j[i];\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfa[i]=i;\n\t\tcin>>x[i]>>y[i];\n\t\tfx=x[i],fy=y[i];\n\t\tfor(int j=1;j<i;j++)\n\t\t{\n\t\t\tp++;//\u8bb0\u5f55\u8fb9\u7684\u603b\u6570\n\t\t\tint fxx=fx-x[j],fyy=fy-y[j];\n\t\t\tint s=fxx*fxx+fyy*fyy;//\u6765\u4e00\u4e2a\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\n\t\t\ta[p].x=i;\n\t\t\ta[p].y=j;\n\t\t\ta[p].z=s;\n\t\t}\n\t}\n\tsort(a+1,a+p+1,cmp);\n\t\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tfx=find(a[i].x),\n\t\tfy=find(a[i].y);\n\t\tif(fx==fy) continue;\n\t\tfa[fx]=fy;\n\t\tans=a[i].z;//\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528max\u4e86\uff0c\u6700\u540e\u53d6\u5230\u7684\u5c31\u662f\u6700\u5927\u7684\n\t}\n\tdouble q=sqrt(ans);\u521a\u5f00\u59cb\u5fd8\u4e86\uff0c\u540e\u6765\u5728**no_one_cm_Fe_in_hand**\u7684\u5e2e\u52a9\u4e0b\u53d1\u73b0\uff1b\n\tint rans=0;//\u6700\u540e\u7b54\u6848\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(q<=j[i]) rans++;\n\t}\n\tcout<<rans;\n\treturn 0;\n}\n```",
        "postTime": 1527427265,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u663e\u7136\u662f\u751f\u6210\u6811\uff0c~~\u60ca\u4e86\uff0c\u8fd8\u6709\u8fd9\u4e48\u6c34\u7684\u7701\u9009\u9898~~\n\n\u5982\u679c\u4e00\u4e2a\u7334\u5b50\u80fd\u8df3\u5230\u6240\u6709\u6811\u4e0a\uff0c\u90a3\u4e48\u5b83\u7684\u6700\u5927\u8df3\u8dc3\u8ddd\u79bb\u8981\u5927\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u7684\u6700\u5927\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u5c31\u7b80\u5355\u4e86\uff0c\u628a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\uff0c\u4e00\u8fb9Kruskal\uff0c\u8bb0\u5f55\u4e0b\u6700\u5927\u7684\u8fb9\uff0c\u548c\u6bcf\u53ea\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u6bd4\u8f83\u4e00\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,m,z,x[1000005],y[1000005],f[1000005],t,ans,jump[1000005]; \ndouble sum;  //sum\u8bb0\u5f55\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u6700\u5927\u7684\u8fb9\nstruct node{\n\tint a,b;\n\tdouble c;\n}s[1000005]; //s\u8bb0\u5f55\u8fb9\uff0c\u70b9a\u5230\u70b9b\u4e4b\u95f4\u8ddd\u79bb\u4e3ac\nint find(int u){   //\u5e76\u67e5\u96c6\u627e\u7238\u7238\n\tif(f[u]==u) return u;\n\telse return f[u]=find(f[u]);\n}\nbool comp(node a,node b){\n\treturn a.c<b.c; \n}\nint main(){\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n        scanf(\"%d\",&jump[i]);  //\u8df3\u8dc3\u8ddd\u79bb\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);   //\u6811\u7684\u4f4d\u7f6e\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)     //\u628a\u4e0d\u540c\u7684\u4e24\u4e2a\u70b9\u8fde\u4e0a\u8fb9\n        if(i!=j){\n            t++;\n            s[t].a=i,s[t].b=j,s[t].c=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));\n        }\n    for(int i=1;i<=t;i++)    \n        f[i]=i;\n    sort(s+1,s+t+1,comp);  //\u7ed9\u8fb9\u6392\u5e8f\n    for(int i=1;i<=t;i++)  //Kruskal\n    {\n        int u=find(s[i].a);\n        int v=find(s[i].b);\n        if(f[u]!=f[v])\n        {\n            f[u]=v;\n            k++;\n            sum=s[i].c;  //\u66f4\u65b0sum,\u8d8a\u540e\u53d6\u7684\u8fb9\u8d8a\u5927\n        }\n        if(k==n-1) break; //\u6570\u636e\u6c34\u554a\uff0c\u4e4b\u524d\u5199\u6210t-1\u90fd\u8fc7\u4e86\n    }\n    for(int i=1;i<=m;i++)  \n        if(jump[i]>=sum) ans++;  \n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1532683865,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u806a\u660e\u7684\u7334\u5b50"
    },
    {
        "content": "\n#### Solution\n\u3000\u3000\u5728\u6240\u6709\u70b9\u5bf9$(u,v)$\u4e4b\u95f4\u8fde\u8fb9, \u8fb9\u7684\u6743\u503c\u4e3a\u5176**\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb**.\u6c42\u4e00\u68f5**\u6700\u5c0f\u751f\u6210\u6811**, \u56e0\u4e3a**\u4e24\u70b9\u4e4b\u95f4\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9**\u4e00\u5b9a\u4f4d\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u4e0a.\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u6765\u540e\u5c31\u77e5\u9053\u4e86**\u6811\u4e0a\u8fb9\u6743\u7684\u6700\u5927\u503c**.\u5982\u679c\u7334\u5b50\u8df3\u8dc3\u8ddd\u79bb\u5927\u4e8e\u8fd9\u4e2a, \u5c31\u8bf4\u660e\u80fd\u5728\u6811\u4e0a\u81ea\u7531\u6d3b\u52a8.\n\n\u3000\u3000\u4e00\u4e2a\u5c0f\u4f18\u5316: \u5f53\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u5927\u4e8e$1000$\u65f6, \u8fd9\u6761\u8fb9\u662f\u65e0\u7528\u7684. \u4f46\u662f\u8fd9\u6837\u505a\u8fd8\u9700\u8981\u6ce8\u610f\u6700\u540e\u80fd\u5426\u5f62\u6210\u4e00\u68f5\u6811.$\\text{Test 2}$\u5c31\u662f\u8fd9\u6837\u7684.\n\n#### Code\n```c++\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define M 1005\n#define eps 1e-9\n#define N 1000005\nusing namespace std;\nint f[N];\nint find(int u){\n\treturn u==f[u]?u:find(f[u]);\n}\n\nstruct Point{\n\tint x,y;\n\tvoid input(){\n\t\tscanf(\"%d%d\",&x,&y);\n\t}\n}p[N];\n\nstruct edge{\n\tint u,v;double c;\n\tbool operator<(const edge& s)const{\n\t\treturn c<s.c;\n\t}\n}e[N];int edge_num;\n\nvoid Addedge(int a,int b){\n\tif(a==b)return ;\n\tPoint i=p[a],j=p[b];\n\tdouble distan=sqrt((i.x-j.x)*(i.x-j.x)+(i.y-j.y)*(i.y-j.y));//\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\n\tif(distan>1000.0+eps)return ;//\u65e0\u7528\u8fb9\n\te[++edge_num]=(edge){a,b,distan};//\u8fde\u8fb9\n}\n\nint n,m;\nint monkey[M];\n\nint main(){\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;++i)scanf(\"%d\",&monkey[i]);\n\tsort(monkey+1,monkey+m+1);//\u7ed9\u7334\u5b50\u6392\u5e8f\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)f[i]=i;\n\tfor(int i=1;i<=n;++i)p[i].input();\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tAddedge(i,j);//\u8fde\u63a5\u6240\u6709\u8fb9\n\tdouble ans=0.0,tot=0;//ans\u4e3a\u6811\u4e0a\u6700\u5927\u8fb9\u6743\n\tsort(e+1,e+edge_num+1);\n\tfor(int i=1;i<=edge_num;++i){\n\t\tint f1=find(e[i].u),f2=find(e[i].v);\n\t\tif(f1!=f2)f[f2]=f1,++tot,ans=max(ans,e[i].c);\n\t\tif(tot==n-1)break;\n\t}\n\tif(tot<n-1){printf(\"0\");return 0;}//\u4e0d\u80fd\u5f62\u6210\u4e00\u68f5\u6811\n\tfor(int i=m;i;--i)\n\t\tif((double)monkey[i]<ans){\n\t\t\tprintf(\"%d\",m-i);//\u7334\u5b50\u4e0d\u80fd\u81ea\u7531\u6d3b\u52a8\n\t\t\treturn 0;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1525938249,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u4e0d\u8981\u5149\u770b\u6807\u7b7e\u7684krukal\uff0c\u5176\u5b9e\u8fd9\u4e2a\u9898\u7528prim\u8dd1\u8981\u5feb\u5f88\u591a\uff08\u7531\u4e8e\u67091000\u4e2a\u70b9\u7684\u6781\u7aef\u6570\u636e\uff0ckrukal\u4f1a\u51fa\u73b01000000\\*log1000000\u7684\u65f6\u95f4\u6548\u7387\uff0c\u6709\u70b9\u70b9\u5927\uff09\u3002\u7528prim\u8dd1\u5176\u5b9e\u4e5f\u5c31\u662f\u4e00\u4e2a\u88f8\u7684prim\u6a21\u677f\uff0c\u53ea\u8981\u628a\u6700\u540e\u7684\u7b97\u548c\u7684\u5faa\u73af\u6539\u6210\u627e\u51fa\u6700\u5927\u7684\u8fb9\u6743\u5c31\u53ef\u4ee5\u4e86\u3002\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm> \nusing namespace std;\nint x[1001],y[1001],sum,num,k,houzi[501],m,n,b[10101],tot;\ndouble a[1001][1001],d[1501],maxx;\ndouble js(int x1,int x2,int y1,int y2)\n{\n    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\nint main()\n{\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    cin>>houzi[i];\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x[i]>>y[i];\n    }\n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=n;j++)\n     if(j!=i)\n     a[i][j]=0x7fffffff;\n     else\n     a[i][j]=0;\n    for(int i=1;i<=n-1;i++)\n     for(int j=1;j<=n;j++)\n     {\n         a[i][j]=a[j][i]=js(x[i],x[j],y[i],y[j]);\n     }\n    memset(d,0x7f,sizeof(d));\n    for(int i=1;i<=n;i++)\n    d[i]=a[1][i];\n    d[1]=0;\n    b[1]=1;\n    for(int i=1;i<=n-1;i++)\n     {\n         k=0;\n         for(int j=1;j<=n;j++)\n          if(!b[j]&&d[j]<d[k])\n          k=j;\n          b[k]=1;\n          for(int j=1;j<=n;j++)\n          if(!b[j]&&d[j]>a[k][j])\n          d[j]=a[k][j];\n     }\n     for(int i=1;i<=n;i++)\n     if(d[i]!=0)\n     maxx=max(maxx,d[i]);\n     for(int i=1;i<=m;i++)\n     if(houzi[i]>=maxx)\n     tot++;\n     cout<<tot;\n}\n\u4ee3\u7801\u5b9e\u5728\u592a\u6c34\uff0c\u5c31\u6ca1\u6709\u6ce8\u91ca\u4e86\u3002\n```",
        "postTime": 1503750763,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e00\u770b\u5c31\u77e5\u9053\u662f\u8003\u6700\u5c0f\u751f\u6210\u6811\n\n\u7528Kruskal \uff0cKruskal\u4e0d\u591a\u8bb2\u4e86 \uff0c\u76f4\u63a5\u770b\u4ee3\u7801\n\nAC code\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1000010;\n\nint n ,m;\ndouble sum;//\u8bb0\u5f55\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u6700\u5927\u7684\u8fb9\nint k ,ans ,road;//road\u4ee3\u8868\u5df2\u7ecf\u5efa\u4e86\u51e0\u6761\u8fb9\nint a[MAXN][3] ,monkey[MAXN] ,fa[MAXN];//a\u7528\u6765\u8f93\u5165\u5750\u6807 \uff0cmonkey\u5b58\u6bcf\u53ea\u7334\u7684\u8df3\u8dc3\u80fd\u529b\n\ninline int read()//\u5feb\u8bfb\n{\n    int x = 0 ,y = 1;\n    char c = getchar();\n    while(c > '9' || c < '0')\n    {\n        if(c == '-')y = -1;\n        c = getchar();\n    }\n    while(c <= '9' && c >= '0')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * y;\n}\n\nstruct node\n{\n    int x ,y;\n    double p;\n}tree[MAXN];\n\nint cmp(node x ,node y)\n{\n    return x.p < y.p;\n}\n\nint find(int x)//\u5e76\u67e5\u96c6\u67e5\u627e\n{\n    if(x == fa[x]) return x;\n    else find(fa[x]);\n}\n\nvoid Union(int x ,int y)//\u5e76\u67e5\u96c6\u5408\u5e76\n{\n    fa[find(x)] = find(y);\n}\n\nvoid Kruskal()\n{\n    sort(tree + 1 ,tree + 1 + k ,cmp);//\u6392\u5e8f\n    for(int i = 1;i <= n;i++) fa[i] = i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    for(int i = 1;road < n - 1;i++)\n    {\n        if(find(tree[i].x) != find(tree[i].y))\n        {\n            Union(tree[i].x ,tree[i].y);//\u5408\u5e76\n            road++;//\u8fb9\u6570++\n            sum = tree[i].p;//\u8bb0\u5f55\n        }\n    }\n}\n\nint main()\n{\n    m = read();\n    for(int i = 1;i <= m;i++) monkey[i] = read();\n\n    n = read();\n    for(int i = 1;i <= n;i++)\n    {\n       a[i][1] = read();\n       a[i][2] = read();\n    }\n\n    for(int i = 1;i <= n;i++)\n    {\n        for(int j = 1;j <= n;j++)\n        {\n            if(i != j)//\u5efa\u56fe\n            {\n                tree[++k].x = i;\n                tree[k].y = j;\n                tree[k].p = sqrt((a[i][1] - a[j][1]) * (a[i][1] - a[j][1]) + (a[i][2] - a[j][2]) * (a[i][2] - a[j][2]));\n            }\n        }\n    }   \n    \n    Kruskal();\n\n    for(int i = 1;i <= m;i++) if(sum <= monkey[i]) ans++;//\u8ba1\u6570\n    cout << ans;\n\n    return 0;//\u597d\u4e60\u60ef\n}\n```\n",
        "postTime": 1572937809,
        "uid": 113900,
        "name": "jbc392",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u8bb0\u5f55\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5927\u8fb9 \u7136\u540e\u5224\u65ad\u6bcf\u53ea\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u662f\u5426\u5927\u4e8e\u6700\u5927\u8fb9\u7684\u6743\u503c\n\n\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\u5373$ans++$\n\n\u7136\u540e\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\n\n~~\u770b\u4e86\u4e00\u4e0b\u81ea\u5df1\u4e24\u4e2a\u6708\u524d\u7684\u4ee3\u7801 dis\u7684\u8fd4\u56de\u503c\u641e\u9519\u4e86\u2026\u2026~~\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,h[505],f[1005],cnt,px,py,ans;\ndouble flag;\nstruct p1{\n\tint x,y;\n}a[1005];\nstruct p2{\n\tint x,y;\n\tdouble z;\n}b[1000005];\nbool cmp(p2 a,p2 b){\n\treturn a.z<b.z;\n}\nint find(int x){\n\tif (x==f[x]) return x;\n\treturn f[x]=find(f[x]);\n}\ndouble dis(int x1,int y1,int x2,int y2){\n\treturn sqrt(double(x1-x2)*(x1-x2)+double(y1-y2)*(y1-y2));\n}\nint main(){\n\tscanf(\"%d\",&m);\n\tfor (int i=1;i<=m;i++) scanf(\"%d\",&h[i]);\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) f[i]=i;\n\tfor (int i=1;i<=n;i++) scanf(\"%d%d\",&a[i].x,&a[i].y);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=i+1;j<=n;j++){\n\t\t\tcnt++;\n\t\t\tb[cnt].x=i;\n\t\t\tb[cnt].y=j;\n\t\t\tb[cnt].z=dis(a[i].x,a[i].y,a[j].x,a[j].y);\n\t\t}\n\tsort(b+1,b+cnt+1,cmp);\n\tfor (int i=1;i<=cnt;i++){\n\t\tpx=find(b[i].x);\n\t\tpy=find(b[i].y);\n\t\tif (px==py) continue;\n\t\tf[px]=py;\n\t\tflag=b[i].z;\n\t}\n\tfor (int i=1;i<=m;i++) \n\t\tif (h[i]*1.0>=flag) ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1554865995,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "## \u770b\u6e05\u9898\u76ee\u672c\u8d28\u662f\u5173\u952e\n\n\u601d\u8def\uff1a\n\n\u3010\u9898\u76ee~~\u672c\u8d28~~\u5206\u6790\u3011\u65e2\u7136\u8981\u6c42\u7334\u5b50\u80fd\u8dd1\u904d\u5168\u90e8\u6811\u6728\u7684\u6570\u91cf\uff0c\u663e\u7136\u662f\u80fd**\u8054\u901a\u5168\u90e8**\u6811\u6728\u7684**\u8fb9\u6743\u8d8a\u5c0f**\u8d8a\u597d\u3002\n\n\u8fd9\u79cd\u8d2a\u5fc3\u601d\u60f3\u81ea\u7136\u4f1a\u60f3\u5230\u8fd9\u9053\u9898\u76ee\u7684\u672c\u8d28\u95ee\u9898\uff1a\n\n> \u6c42\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u6700\u5927\u8fb9\u6743\u3002\n\n\u5206\u6790\u51fa\u6765\u4e86\u9898\u76ee\u672c\u8d28\uff0c\u90a3\u4e48\u505a\u6cd5\u4e5f\u5f88\u597d\u505a\u4e86\u3002$Prim$\u548c$Kruskal$\u90fd\u53ef\u4ee5\uff0c\u6570\u636e\u6bd4\u8f83\u5f31\u3002\n\n\n------------\n\u5751\u7239\u7684\u7ec6\u8282\uff1a\n\n$(1)$\u5728\u6c42\u4e24\u68f5\u6811\u7684\u8ddd\u79bb\u65f6\uff0c\u53ef\u4ee5\u4e0d`sqrt`\uff0c\u76f4\u63a5\u53d6\u5e73\u65b9\uff0c\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002**\u4f46\u662f\u8981\u6ce8\u610f\u7334\u5b50\u7684\u8df3\u8dc3\u80fd\u529b\u4e5f\u53d8\u6210\u4e86\u5e73\u65b9\uff01**\n\n$(2)$\u5982\u679c\u7528$Kruskal$\uff0c\u5b58\u8fb9\u76ee\u5f55\u7684\u6570\u7ec4\u522b\u5f00\u5c0f\u4e86\u3002\u5177\u4f53\u5f00\u591a\u5927\u5927\u7ea6\u4e5f\u5c31$10^6$\u3002\n\n$(3)$\u5728\u5b58\u8fb9\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6570\u636e\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e00\u68f5\u6811\u90fd\u4e0e\u53e6\u4e00\u68f5\u6811\u4e24\u4e24\u76f8\u8fde\u8fb9\u3002\u4e0d\u4f1a\u7206\u5185\u5b58\u3002\n\n$(4)$\u5982\u679c\u7528$Kruskal$\uff0c\u5728\u627e\u6700\u5927\u8fb9\u6743\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528$\\max$\uff0c\u56e0\u4e3a\u8fb9\u5df2\u7ecf\u6309\u4ece\u5c0f\u5230\u5927\u6392\u8fc7\u5e8f\u4e86\u3002\u540e\u9762\u7684\u4e00\u5b9a\u662f\u66f4\u5927\u7684\u8fb9\u3002\u5f53\u7136\u4f60$\\max$\u4e5f\u6ca1\u95ee\u9898\u3002\n\n$(5)$\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u522b\u641e\u9519\u4e86\uff01\n\n\u5176\u5b83\u7684\u5c0f\u7ec6\u8282\uff0c\u5c31\u770b\u4e2a\u4eba\u7ec6\u4e0d\u7ec6\u5fc3\u4e86\u3002\u672c\u849f\u84bb\u5c31\u53ea\u60f3\u5230\u8fd9\u4e48\u591a\u5751\u70b9\u3002\n\n\n\n------------\n\n\u9001\u4e0a\u7801\u98ce\u6e05\u5947\u7684\u4ee3\u7801\uff1a**\u672c\u4eba\u4f7f\u7528$Kruskal$\u3002**\n\n~~\u6ce8\u91ca\u7b80\u5355\u522b\u54ac\u6211\u2026\u2026~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN=1005;\nint n,m,cnt,cmp,ans;\nstruct node\n{\n\tint from,to,v;\n\tbool operator<(const node& a)const\n\t{\n\t\treturn v<a.v;\n\t}//\u76f8\u5f53\u4e8esort\u7684cmp()\n}edge[MAXN*MAXN];//\u5f00\u5927\u70b9\nstruct point\n{\n\tint x,y;\n\tint operator+(const point& a)const\n\t{\n\t\treturn (x-a.x)*(x-a.x)+(y-a.y)*(y-a.y);\n\t}//\u7b97\u4e24\u70b9\u8ddd\u79bb\n}tree[MAXN];\nint f[MAXN],monkey[MAXN];\n\nint find(const int& x)\n{\n\treturn f[x]==x?x:f[x]=find(f[x]);\n}\n\nvoid build(void)//\u5b58\u8fb9\uff0c\u5efa\u56fe\n{\n\tfor(int i=1;i<=n;i++)//\u522b\u5fd8\u521d\u59cb\u5316\n\t f[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t for(int j=1;j<=n;j++)\n\t  if(i!=j)//\u4e24\u4e24\u76f8\u8fde\u8fb9\uff0c\u5f88\u7b80\u5355\n\t   edge[++cnt]=node{i,j,tree[i]+tree[j]};\n}\n\nvoid input(void)\n{\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t cin>>monkey[i];\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t cin>>tree[i].x>>tree[i].y;\n}\n\nvoid kruskal(void)//\u51e0\u4e4e\u662f\u6a21\u677f\n{\n\tbuild();\n\tsort(edge+1,edge+1+cnt);\n\tint stop=0;\n\tfor(int i=1;i<=cnt && stop<n;i++)\n\t{\n\t\tconst int u=find(edge[i].from);\n\t\tconst int v=find(edge[i].to);\n\t\tif(u==v)\n\t\t continue;\n\t\tf[u]=v;\n\t\tcmp=edge[i].v;//\u53ef\u4ee5\u4e0d\u53d6max\uff0c\u7406\u7531\u4e0a\u9762\u63d0\u8fc7\n\t\tstop++;\n\t}\n}\n\nvoid output(void)\n{\n\tfor(int i=1;i<=m;i++)\n\t if(monkey[i]*monkey[i]>=cmp)//\u8bb0\u4f4f\u4e24\u70b9\u8ddd\u79bb\u6ca1\u6709sqrt\uff0c\u7334\u5b50\u7684\u8df3\u8dc3\u8ddd\u79bb\u4e5f\u5c31\u5e73\u65b9\u4e86\n\t  ans++;\n\tcout<<ans<<endl;\n}\n\nint main()//\u534e\u4e3d\u4e3d\u7684\u4e3b\u7a0b\u5e8f\n{\n\tinput();\n\tkruskal();\n\toutput();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1554567274,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u672c\u6587\u5df2\u53d1\u5e03\u4e8e[Handwer's Blog](https://blog.handwer-std.top/)\n\n---\n\n\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811\uff1a\u56fe\u4e2d\u8fb9\u6743\u6700\u5927\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811\n\n---\n\n\u628a\u6bcf\u4e2a\u7334\u5b50\u770b\u6210\u70b9\uff0c\u6784\u9020\u5b8c\u5168\u56fe\n\n\u627e\u51fa\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811\n\n\u300c\u4e00\u68f5\u6700\u5c0f\u751f\u6210\u6811\u5c31\u662f\u4e00\u68f5\u6700\u5c0f\u74f6\u9888\u751f\u6210\u6811\uff0c**\u53cd\u4e4b\u4e0d\u4e00\u5b9a**\uff0c\u6240\u4ee5\u76f4\u63a5\u8dd1\u4e00\u904dKruskal\u5c31\u884c\u300d\n\n\u8bb0\u4e00\u4e0b\u6811\u4e0a\u7684\u6700\u5927\u8fb9\u6743\n\n\u679a\u4e3e\u6240\u6709\u7334\u5b50\uff0c\u5224\u4e00\u4e0b\u5b83\u80fd\u8df3\u7684\u957f\u5ea6\u662f\u5426\u5927\u4e8e\u6811\u7684\u6700\u5927\u8fb9\u6743\u5373\u53ef\n\n---\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n\n#define FILE_IN(__fname) freopen(__fname, \"r\", stdin)\n#define FILE_OUT(__fname) freopen(__fname, \"w\", stdout)\n#define IMPROVE_IO() std::ios::sync_with_stdio(false)\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nconst int MAXN = 1000                  + 10;\nconst int MAXM = 500                   + 10;\nconst int MAXE = (MAXN - 1) * MAXN / 2 + 10;\n\nstruct Node {\n    int x, y;\n    \n    Node() { x = y = 0; }\n} node[MAXN];\n\nstruct Edge {\n    int previd, nextid;\n    double weight;\n    \n    Edge() { previd = nextid = 0; weight = 0; }\n    bool operator < (const Edge &that) const {\n        return weight < that.weight;\n    }\n} edge[MAXE];\n\nstruct UnionFind {\n    int seq[MAXN];\n    \n    UnionFind() { memset(seq, 0, sizeof seq); }\n    int Find(int x) { return !seq[x] ? x : (seq[x] = Find(seq[x])); }\n    bool Union(int x, int y) {\n        x = Find(x); y = Find(y);\n        if (x == y) return false;\n        seq[x] = y;\n        return true;\n    }\n} U;\n\ndouble GetDist(int idx, int idy) {\n    // \u771f\u00b7\u521d\u4e2d\u6570\u5b66\uff0c\u5229\u7528\u52fe\u80a1\u5b9a\u7406\u8ba1\u7b97\u5750\u6807\u7cfb\u4e2d\u4e24\u70b9\u7684\u76f4\u7ebf\u8ddd\u79bb\n    double ret = 0;\n    int absx = std::abs(node[idx].x - node[idy].x);\n    int absy = std::abs(node[idx].y - node[idy].y);\n    ret = sqrt(absx * absx + absy * absy);\n    return ret;\n}\n\nint n, m, cnt;\nint monkey[MAXM];\n\ndouble Kruskal() {\n    std::sort(edge + 1, edge + 1 + cnt);\n    int tot = 0;\n    double maxWeight = 0;\n    for (int i = 1; i <= cnt; ++i) {\n        // \u4e00\u4e2a\u6bd4\u8f83\u65b0\u9896\u7684\u6700\u5c0f\u751f\u6210\u6811\u5199\u6cd5\n        // \u76f4\u63a5\u5229\u7528\u5e76\u67e5\u96c6\u7684\u5408\u5e76\u6765\u5224\u65ad\n        if (U.Union(edge[i].previd, edge[i].nextid)) {\n            ++tot;\n            maxWeight = std::max(maxWeight, edge[i].weight);\n            // \u627e\u4e00\u4e0b\u6700\u5927\u8fb9\u6743\n            // \u8c8c\u4f3c\u662f\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\uff0c\u56e0\u4e3a\u8fb9\u6743\u662f\u7ecf\u8fc7\u6392\u5e8f\u7684\n            // \u4f46\u662f\u8fd9\u4e48\u5199\u6bd4\u8f83\u4fdd\u9669\uff08\u96fe\n        }\n        if (tot == n - 1) break;\n    }\n    return maxWeight;\n}\n\nint main() {\n    IMPROVE_IO();\n    cin >> m;\n    for (int i = 1; i <= m; ++i) cin >> monkey[i];\n    cin >> n;\n    for (int i = 1; i <= n; ++i) cin >> node[i].x >> node[i].y;\n    // \u521d\u59cb\u5316\u4e00\u5f20\u5b8c\u5168\u56fe\u51fa\u6765\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j < i; ++j) {\n            edge[++cnt].previd = i;\n            edge[cnt].nextid = j;\n            edge[cnt].weight = GetDist(i, j);\n        }\n    }\n    double maxW = Kruskal();\n    int ans = 0;\n    for (int i = 1; i <= m; ++i) {\n        if (monkey[i] >= maxW) ++ans;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n\n```",
        "postTime": 1550200878,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa\u5e73\u9762\u5750\u6807\u7cfb\u4e0a\u7684$n$\u4e2a\u70b9\uff0c\u95ee\u80fd\u7528\u6700\u5927\u8ddd\u79bb$a[i]$\u904d\u5386\u6240\u6709\u70b9\u7684$a[i]$\u6570\u91cf\u3002\n\n\u601d\u8def\uff1a$kruskal$\u7b97\u6cd5\uff0c\u628a\u6240\u6709\u8fb9\u90fd\u8fde\u8d77\u6765\u518d\u8dd1\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\u7136\u540e\u4e00\u53d1\u6837\u4f8b\uff1a\u6302\u4e86\n\n\uff1f\uff1f\uff1f\n\n\u53d1\u73b0\u81ea\u5df1\u8822\u5230\u4e0d\u4f1a\u7528floor\u51fd\u6570\uff0c\u5bfc\u81f4\u7cbe\u5ea6\u51fa\u9519\u3002\n\n\u7b2c\u4e8c\u6b21\u52a0\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u5224\u65ad\uff1a\n\n```cpp\nint cal(int ii,int jj)\n{\n    int d1=floor(sqrt((x[ii]-x[jj])*(x[ii]-x[jj])+(y[ii]-y[jj])*(y[ii]-y[jj]))*10);\n    int d2=floor(sqrt((x[ii]-x[jj])*(x[ii]-x[jj])+(y[ii]-y[jj])*(y[ii]-y[jj])));\n    if (d2*10==d1) return d2;\n    else return d2+1;\n}\n```\n\n\u8fc7\u4e86\u6837\u4f8b\uff0c\u4ea4\u4e00\u53d1\uff1a20\u5206\n\n\u7136\u540e\u8001\u8001\u5b9e\u5b9e\u6539\u6210double\u2026\u2026\n\n\u518d\u4ea4\u4e00\u53d1\uff1a20\u5206\n\n\uff1f\uff1f\uff1f\n\n\u53d1\u73b0\u81ea\u5df1\u7684e\uff08\u5b58\u8fb9\uff09\u6570\u7ec4\u624d\u5f00\u4e862000\u2026\u2026\n\n\u6539\u62102000010\u540e\u518d\u4ea4\u4e00\u53d1:50\u5206\n\n\u81ea\u5df1\u53c8\u624b\u8d31\u4e86\uff0c\u7334\u5b50\u7684\u6700\u5927\u8ddd\u79bb$a[i]$\u4e5f\u8981\u6539\u6210double\n\n\u518d\u4ea4\u4e00\u53d1\uff0c\u8fc7\u4e86\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct Edge\n{\n\tint u,v;\n\tdouble val;\n}e[2000010];\nint m,n,cnt,ans,num;\ndouble maxans;\ndouble a[510];\nint x[1010],y[1010],fa[1010];\nint find(int x)\n{\n\tif (fa[x]!=x) fa[x]=find(fa[x]);\n\treturn fa[x];\n}\nvoid unnion(int x,int y)\n{\n\tx=find(x);y=find(y);\n\tif (x!=y) fa[x]=y;\n}\nbool judge(int x,int y)\n{\n\tx=find(x);y=find(y);\n\tif (x==y) return 1;\n\telse return 0;\n}\nvoid add(int u,int v,double w)\n{\n\te[++cnt].u=u;e[cnt].v=v;e[cnt].val=w;\n}\nvoid kruskal()\n{\n\tint u,v;\n\tfor(int i=1;i<=cnt;i++)\n\t{\n\t\tu=e[i].u;v=e[i].v;\n\t\tif (!judge(u,v)) maxans=e[i].val,num++,unnion(u,v);\n\t\tif (num>n-1) break;\n\t}\n}\nbool cmp(Edge a,Edge b)\n{\n\treturn a.val<b.val;\n}\nint main()\n{\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++) scanf(\"%lf\",&a[i]);\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&x[i],&y[i]);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tif (i!=j) add(i,j,sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])));\n\tsort(e,e+cnt+1,cmp);kruskal();\n\tfor(int i=1;i<=n;i++) if (a[i]>=maxans) ans++;\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1539996207,
        "uid": 32942,
        "name": "kkkk0369",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "[P2504](https://www.luogu.org/problemnew/show/P2504)\n\n\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u4e2a\u7701\u9009\u9898\u771f\u7684\u597d\u5f31\u554a,\u4f46\u6211\u8fd8\u662f\u83dc\uff0c\u4ea4\u4e865\u6b21\u624dA...\n\n\u521a\u770b\u5230\u9898\u9762\uff0c\u5c31\u89c9\u5f97\u50cf\u8d2a\u5fc3\uff0c\u679c\u7136\u6b63\u89e3\u662f\u6700\u5c0f\u751f\u6210\u6811~~\uff08\u8d2a\u5fc3\u561b\uff0c\u5f53\u6211\u6ca1\u8bf4\uff09~~\u3002\u663e\u7136\u4e00\u53ea\u7334\u5b50\u82e5\u80fd\u5728\u6240\u6709\u6811\u51a0\u4e0a\u89c5\u98df\uff0c\u5176\u8df3\u8dc3\u8ddd\u79bb\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e\u4ee5\u6240\u6709\u6811\u51a0\u4e3a\u8282\u70b9\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u957f\u7684\u8fb9\uff08\u6700\u5c0f\u751f\u6210\u6811\u4fdd\u8bc1\u4e86\u6240\u6709\u8282\u70b9\u90fd\u5728\u6811\u4e2d\uff0c\u5373\u6240\u6709\u70b9\u5fc5\u5b9a\u662f\u8054\u901a\u7684\uff09\u3002\u60f3\u901a\u4e86\u8fd9\u4e00\u70b9\uff0c\u5176\u4ed6\u90fd\u597d\u529e\uff01\n\n\u6700\u540e\u6211\u518d\u591a\u8bf4\u4e00\u53e5\uff1a\u6700\u597d\u4e0d\u8981\u7528sqrt\uff0c\u6bd5\u7adf\u7cbe\u5ea6\u6709\u9650\uff0c\uff08\u6709\u4e9b\u53d8\u6001\u9898\u4f1a\u5361\u7cbe\u5ea6\uff09\u800c\u4e14\u5e73\u65b9\u7684\u8bdd\u6700\u591a8000000\uff0c\u8fdeint\u90fd\u4e0d\u8d85\u3002\n\n\u6700\u540e\u7528\u4e86lower_bound\uff0c\u61d2\u5f97\u8dd1\u5faa\u73af\u4e86\uff08\u4e0d\u8fc7\u6700\u540e\u7528\u5faa\u73af\u627e\u7b54\u6848\u5feb\u4e00\u70b9\uff09\uff0c\u6574\u4f53\u590d\u6742\u5ea6\u662f _O(n^2)_ ~~(\u5177\u4f53\u7684\u5927\u6982\u662f _O(n^2+2mlog2 m+nlog2 n+m-n)_ )~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define dis(x1,x2,y1,y2) (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)\nusing namespace std;\nconst int MAXN=1000,MAXM=500;\nint n,m,l[MAXM+2],x[MAXN+2],y[MAXN+2],tot;\nint par[MAXN+2],rank[MAXN+2];\n\nstruct edge { int u,v,w; };\nedge es[MAXN*MAXN+2];\n\ninline int read(){\n\tint num=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) f=ch=='-'?-1:1,ch=getchar();\n\twhile(isdigit(ch)) num=(num<<1)+(num<<3)+ch-'0',ch=getchar();\n\treturn num*f;\n}\n\nint find(int x){\n\tif(par[x]==x) return x;\n\telse return par[x]=find(par[x]);\n}\n\nvoid unite(int x,int y){\n\tx=find(x),y=find(y);\n\tif(rank[x]<rank[y]) par[x]=y;\n\telse par[y]=x,rank[x]+=rank[x]==rank[y]?1:0;\n}\n\nint same(int x,int y) { return find(x)==find(y); }\n\nbool cmp(edge a,edge b) { return a.w<b.w; }\n\nint kruscal(){\n\tint res=0;\n\tsort(es,es+tot,cmp);\n\tfor(int i=0;i<tot;++i){\n\t\tedge e=es[i];\n\t\tif(same(e.u,e.v)) continue;\n\t\tres=e.w;\n\t\tunite(e.u,e.v);\n\t}\n\treturn res;\n}\n\nint main(){\n\tm=read();\n\tfor(int i=0;i<m;++i) l[i]=read(),l[i]*=l[i];\n\tsort(l,l+m);\n\tn=read();\n\tfor(int i=0;i<n;++i){\n\t\tpar[i]=i,rank[i]=0;\n\t\tx[i]=read(),y[i]=read();\n\t\tfor(int j=0;j<i;++j)\n\t\t\tes[tot++]=edge{i,j,dis(x[i],x[j],y[i],y[j])};\n\t}\n\tint now1=kruscal(),now2=lower_bound(l,l+m,now1)-l;\n\tcout<<m-now2<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1535454012,
        "uid": 51308,
        "name": "Jith_2004",
        "ccfLevel": 7,
        "title": "20180828"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u5751\u6b7b\u4eba\u554a\u3002\u3002\u3002\n\n\u7b2c\u4e00\u6b21\u505a40\u5206\uff0c\u5176\u4ed6RE\uff0c\u6539\u4e86\u4e00\u6b21\u4e4b\u540e\u5c31\u53d8\u621020\u5206\u4e86\u3002\u3002\u3002\n\n\u7a76\u5176\u539f\u56e0\uff0c\u662f\u6709\u4e00\u4e2a\u6570\u7ec4\uff08dis\uff09\u5f00\u7684\u592a\u5c0f\u4e86\uff0c\u4e8e\u662f\u6700\u540e\u672c\u849f\u84bb\u5c31\u968f\u624b\u5f00\u4e86\u4e2a\u4e94\u767e\u4e07\uff0c**\u7136\u540e\uff0c\u5c31AC\u4e86**\u3002\n\n\u770b\u5230\u6709\u4e00\u7bc7\u9898\u89e3\u8bf4\u6c42\u8ddd\u79bb\u6700\u597d\u4e0d\u5f00\u6839\uff0c\u7ecf\u672c\u849f\u84bb\u5b9e\u9a8c\uff0c\u5f00\u4e0d\u5f00\u6839\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u5168\u770b\u4e2a\u4eba\u559c\u597d\u3002\n\n\u672c\u849f\u84bb\u8fd8\u52a0\u4e86\u4e00\u4e2a\u5feb\u8bfb\uff0c\u5176\u5b9e\u4e5f\u6ca1\u6709\u5fc5\u8981\uff0c\u53ea\u662f\u7b2c\u4e00\u6b21RE\u7684\u65f6\u5019\u4e0d\u5c0f\u5fc3\u770b\u6210\u4e86TLE\uff0c\u4e3a\u4e86\u7f29\u77ed\u65f6\u95f4\u624d\u5199\u7684\u3002\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u9053Kruskal\u7684\u9898~~\uff08\u5e9f\u8bdd\uff09~~\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u70b9\u5728\u4e8e\u9898\u76ee\u6240\u6c42\u7684\u4e0e\u88f8\u9898\u6709\u5dee\u5f02\u3002\n\n\u5176\u4f59\u7684\u597d\u50cf\u95ee\u9898\u4e5f\u4e0d\u5927\uff0c\u53ea\u8981\u4e0d\u50cf\u672c\u849f\u84bb\u4e00\u6837\u89c6\u529b\u4e0d\u597d\u5c31\u4e0d\u4f1a\u9519\u5f97\u592a\u79bb\u8c31\u3002\n\n\u603b\u800c\u8a00\u4e4b\uff0cAC\u4ee3\u7801\u5982\u4e0b\uff08\u5e76\u67e5\u96c6find\u51fd\u6570\u5e26\u4f18\u5316\uff09\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ninline int qread() {\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tx = x * 10 + (c - '0');\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\nconst int maxn = 1010;\n\nint m, n, ans = 0, cnt = 0;\nint f[maxn], leap[maxn], x[maxn], y[maxn];\n\nstruct node {\n    int x, y;\n    int val;\n}dis[5000005];\n\nbool cmp(node a, node b) {\n    return a.val < b.val;\n}\n\nint find(int x) {\n    int r = x;\n    while(r != f[r]) r = f[r];\n    int i = x, j;\n    while(f[i] != r) {  \n        j = f[i];  \n        f[i] = r;  \n        i = j;  \n    }\n    return r;  \n}\n\nvoid merge(int x, int y) {\n\tx = find(x);\n\ty = find(y);\n\tif(x != y) f[y] = x;\n}\n\ndouble dt(int x1,int x2,int y1,int y2) {\n    return sqrt(pow(double(x1 - x2), 2) + pow(double(y1 - y2), 2));\n}\n\nint main() {\n    cin >> m;\n    for(int i = 1; i <= m; i++) cin >> leap[i];\n\tcin >> n;\n    for(int i = 1; i <= n; i++) cin >> x[i] >> y[i];\n    for(int i = 1; i <= maxn - 1; i++) f[i] = i;\n    \n    for(int i = 1; i <= n; i++) \n\t\tfor(int j = i + 1; j <= n; j++) {\n\t\t\tdis[++cnt].x = i;\n\t\t\tdis[cnt].y = j;\n\t\t\tdis[cnt].val = dt(x[i], x[j], y[i], y[j]);\n\t\t}\n\t\t\t\n\t\t\t\n    sort(dis + 1, dis + cnt + 1, cmp);\n    for(int i = 1; i <= cnt; i++)\n\t\tif(find(dis[i].x) != find(dis[i].y)) {\n\t\t\tans = dis[i].val;\n\t\t\tmerge(dis[i].x, dis[i].y);\n\t\t}\n\t\t\n\tint sum = 0;\n    for(int i = 1; i <= m; i++) if(leap[i] >= ans) sum++;\n    \n    cout << sum;\n}\n```",
        "postTime": 1523692823,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\n\n\u76f8\u5f53\u4e8e\u6c42\u5927\u4e8e\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u6700\u957f\u8fb9\u7684h[i]\u4e2a\u6570\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<cstdio>\n#define N 620505\nusing namespace std;\nint a[N];\nint x[N];\nint y[N];\nint h[N];\nint d[N];\nint x2[N];\nint y2[N];\nint find(int x)\n{\n    if (x==a[x]){\n        return x;\n    }\n    else {\n        a[x]=find(a[x]);\n        x=a[x];\n    }\n} \nvoid make(int x,int y)\n{\n    a[find(x)]=find(y);\n}\n/*int jisuan(int x,int y,int x1,int y1)\n{\n    int x2=abs(x-x1);\n    int y2=abs(y-y1);\n    int k=floor(sqrt(x2*x2+y2*y2));\n    if (k*k==x2*x2+y2*y2){\n        return k;\n    }\n    else {\n        return k+1;\n    }\n    //return floor(sqrt(x2*x2+y2*y2));\n}*/\nvoid qsort(int l,int r)\n{\n    int i=l;\n    int j=r;\n    int mid=d[(l+r)/2];\n    while (i<=j){\n        while (d[i]<mid) i++;\n        while (d[j]>mid) j--;\n        if (i<=j){\n            int p;\n            p=x[i]; x[i]=x[j]; x[j]=p;\n            p=y[i]; y[i]=y[j]; y[j]=p;\n            p=d[i]; d[i]=d[j]; d[j]=p;\n            i++;\n            j--;\n        }\n    }\n    if (l<j) qsort(l,j);\n    if (i<r) qsort(i,r);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++){\n        scanf(\"%d\",&h[i]);\n    }\n    int m;\n    scanf(\"%d\",&m);\n    for (int i=1;i<=m;i++){\n        a[i]=i;\n        scanf(\"%d%d\",&x2[i],&y2[i]);\n    }\n    int ckr=0;\n    for (int i=1;i<=m;i++){\n        for (int j=i+1;j<=m;j++){\n                ckr++;\n                x[ckr]=i;\n                y[ckr]=j;\n                d[ckr]=(x2[i]-x2[j])*(x2[i]-x2[j])+(y2[i]-y2[j])*(y2[i]-y2[j]);\n        }\n    }\n    qsort(1,ckr);\n    int max1=0;\n    int k=0;\n    for (int i=1;i<=ckr;i++){\n        if (find(x[i])!=find(y[i])){\n            k++;\n            a[find(x[i])]=a[find(y[i])];\n            //make(x[i],y[i]);\n            max1=max(max1,d[i]);\n        }\n        if (k==m-1) break; \n    }\n    int tot=0;\n    for (int i=1;i<=n;i++){\n        if (h[i]*h[i]>=max1) tot++;\n    }\n    printf(\"%d\",tot);\n    return 0;\n}\n```",
        "postTime": 1492863587,
        "uid": 15726,
        "name": "Samsam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2504 \u3010[HAOI2006]\u806a\u660e\u7684\u7334\u5b50\u3011"
    }
]