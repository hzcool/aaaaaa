[
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u77ed\u5c0f\u7cbe\u608d\u7684 $O(n)$ \u89e3\u6cd5  \r\nP.S. \u4e0b\u6587\u4e2d $r$ \u4f1a\u8868\u793a\u7b54\u6848\u533a\u95f4\uff0c\u539f\u9898\u7684\u7206\u70b8\u534a\u5f84 $r$ \u6211\u8fd9\u91cc\u53eb $range$  \r\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u65e0\u8bba\u5982\u4f55\u5f15\u7206\uff0c\u5982\u679c\u70b8\u5f39 $l$ \u548c $r$ \u88ab\u5f15\u7206\u4e86 $(l \\leq r)$\uff0c\u90a3\u4e48\u4efb\u4f55\u70b8\u5f39 $p \\in [l, r]$ \u90fd\u4f1a\u88ab\u5f15\u7206\u3002\u90a3\u4e48\u8003\u8651\u7ef4\u62a4\u6700\u5f00\u59cb\u5f15\u7206\u70b8\u5f39 $i$ \u540e\uff0c\u6240\u6709\u6700\u540e\u88ab\u5f15\u7206\u7684\u70b8\u5f39\u533a\u95f4 $[l_i, r_i]$\u3002  \r\n\u5148\u628a\u6240\u6709 $[l_i, r_i]$ \u521d\u59cb\u5316\u4e3a $[i, i]$\uff0c\u7136\u540e\u4ee4 $i$ \u4ece $2$ \u5f00\u59cb\uff0c\u5230 $n$ \u7ed3\u675f\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\r\n* \u5224\u65ad\u81ea\u5df1\u80fd\u5426\u5f15\u7206\u70b8\u5f39 $l_i - 1$\uff0c\u5982\u679c\u4e0d\u80fd\u6216\u8005 $l_i = 1$\uff0c\u7ec8\u6b62\u64cd\u4f5c  \r\n* \u6bd4\u8f83\u81ea\u5df1\u7684\u7206\u70b8\u53f3\u8fb9\u754c $(x_i + range_i)$ \u4e0e $l_i - 1$ \u7684\u7206\u70b8\u53f3\u8fb9\u754c $(x_{l_i - 1} + range_{l_i - 1})$\uff0c\u5982\u679c\u540e\u8005\u66f4\u5927\u90a3\u4e48\u7528\u540e\u8005\u51cf\u53bb $x_i$ \u7684\u503c\u6765\u66f4\u65b0 $range_i$\r\n* \u5c06 $l_i$ \u66f4\u65b0\u4e3a $l_{l_i - 1}$\uff0c\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u64cd\u4f5c  \r\n\r\n\u8fd9\u6837\u4e00\u8f6e\u7b97\u4e0b\u6765\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa**\u53ea\u5f80\u5de6\u7206\u70b8**\u80fd\u591f\u5230\u8fbe\u7684\u8fb9\u754c $l_i$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684  \r\n```cpp\r\nfor (int i = 2; i <= n; i++) {\r\n    while (l[i] > 1 && a[i] - a[l[i] - 1] <= range[i]) {\r\n        range[i] = std::max(range[i], range[l[i] - 1] - (a[i] - a[l[i] - 1]));\r\n        l[i] = l[l[i] - 1];\r\n    }\r\n}\r\n```\r\n\u7b80\u5355\u8bc1\u4e00\u4e0b\u590d\u6742\u5ea6\uff0c\u5916\u5c42\u5faa\u73af\u663e\u7136\u662f\u7ebf\u6027\u7684\uff1b\u5185\u5c42\u5faa\u73af\u4e2d\uff0c\u4f1a\u5b58\u5728\u67d0\u4e00\u4e2a\u70b8\u5f39 $p$ \u5b83\u5f80\u524d\u70b8\u5230\u4e86\u5f88\u591a\u4ee5\u524d\u5e76\u4e0d\u5173\u8054\u7684\u70b8\u5f39\u7684\u60c5\u51b5\u3002\u770b\u8d77\u6765\u8fd9\u4e2a\u5faa\u73af\u7684\u6781\u9650\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u4f46\u662f\u4e00\u65e6\u8fd9\u4e9b\u70b8\u5f39\u7eb3\u5165\u4e86\u5f53\u524d\u70b8\u5f39 $p$ \u7684\u5f71\u54cd\u8303\u56f4\u5185\u540e\uff0c\u540e\u7eed\u70b8\u5f39\u4e0e\u8fd9\u6bb5\u70b8\u5f39\u7684\u5173\u8054\u65e0\u975e\u5c31\u662f\u90fd\u80fd\u70b8\u5230\uff0c\u6216\u8005\u90fd\u4e0d\u80fd\u70b8\u5230\u3002\u4e0d\u53ef\u80fd\u53ea\u70b8\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u8fd9\u6bb5\u70b8\u5f39\u7684\u6700\u53f3\u4fa7\u662f $p$\uff0c\u70b8\u5230\u4e00\u90e8\u5206\u5c31\u70b8\u5230\u4e86 $p$\uff0c\u70b8\u5230\u4e86 $p$ \u5c31\u80fd\u70b8\u5b8c\u8fd9\u4e00\u6574\u6bb5\u3002\u6240\u4ee5\u8fd9\u6bb5\u70b8\u5f39\u4ee5\u540e\u7684\u590d\u6742\u5ea6\u8d21\u732e\u5c31\u51e0\u4e4e\u6ca1\u6709\u4e86\u3002\u66f4\u4f55\u51b5\u5982\u679c\u540e\u7eed\u6709\u70b8\u5f39\u80fd\u70b8\u5b8c\u8fd9\u4e00\u6bb5\u70b8\u5f39\uff0c\u90a3\u8fd9\u6bb5\u70b8\u5f39\u5c31\u88ab\u5212\u8fdb\u4e00\u4e2a\u66f4\u5927\u7684\u70b8\u5f39\u7206\u70b8\u6bb5\u4e86\u3002\u6240\u4ee5\u8fd9\u4e24\u4e2a\u5faa\u73af\u7684\u603b\u590d\u6742\u5ea6\u662f $O(n)$\u3002  \r\n\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53f3\u5f80\u5de6\u626b\u4e00\u904d\u6765\u8ba1\u7b97\u7b54\u6848\u53f3\u7aef\u70b9 $r_i$\u3002\u6ce8\u610f\uff0c\u521a\u624d\u6211\u53ea\u8bf4\u4e86\u6c42\u51fa\u6765\u7684 $l_i$ \u662f**\u53ea\u5f80\u5de6\u7206\u70b8**\u7684\u7b54\u6848\uff0c\u8fd9\u65f6\u6211\u4eec\u4e5f\u9700\u8981\u987a\u5e26\u628a\u5148\u5f80\u53f3\u70b8\u5230\u4e00\u4e2a\u5927\u70b8\u5f39\u518d\u5f80\u5de6\u70b8\u7684\u7b54\u6848\u66f4\u65b0\u4e86\u3002\u6d41\u7a0b\u662f\u8fd9\u6837\uff1a\r\n* \u5224\u65ad\u81ea\u5df1\u80fd\u5426\u5f15\u7206\u70b8\u5f39 $r_i + 1$\uff0c\u5982\u679c\u4e0d\u80fd\u6216\u8005 $r_i = n$\uff0c\u7ec8\u6b62\u64cd\u4f5c\r\n* \u6bd4\u8f83\u81ea\u5df1\u7684\u7206\u70b8\u5de6\u7aef\u70b9 $l_i$ \u4e0e\u5148\u5f80\u53f3\u70b8\u518d\u5f80\u5de6\u70b8\u7684\u7b54\u6848 $l_{r_i + 1}$\uff0c\u5982\u679c\u540e\u8005\u66f4\u5c0f\u5219\u7528\u540e\u8005\u66f4\u65b0\u524d\u8005\r\n* \u5c06 $r_i$ \u66f4\u65b0\u4e3a $r_{r_i + 1}$\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u64cd\u4f5c  \r\n\r\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u5b8c\u6574\u4e2a\u7b54\u6848\u4e86\u3002\u590d\u6742\u5ea6\u4e0e\u4e0a\u9762\u4e00\u81f4\uff0c\u4e3a\u7ebf\u6027\u3002  \r\n```cpp\r\nfor (int i = n - 1; i >= 1; i--) {\r\n    while (r[i] < n && a[r[i] + 1] - a[i] <= range[i]) {\r\n        l[i] = std::min(l[i], l[r[i] + 1]);\r\n        r[i] = r[r[i] + 1];\r\n    }\r\n}\r\n```\r\n\u8fd9\u91cc\u7684 $range$ \u5df2\u7ecf\u662f\u66f4\u65b0\u8fc7\u7684 $range$ \u4e86\uff0c\u6211\u4eec\u5728\u6700\u5f00\u59cb\u4ece\u5de6\u5f80\u53f3\u626b\u7684\u65f6\u5019\u5df2\u7ecf\u628a $range$ \u8bbe\u6210\u4e86\u5141\u8bb8\u5148\u70b8\u5de6\u8fb9\u518d\u70b8\u53f3\u8fb9\u80fd\u8fbe\u5230\u7684\u8fb9\u754c\uff0c\u6240\u4ee5\u5148\u5f80\u5de6\u70b8\u518d\u5f80\u53f3\u70b8\u7684\u7b54\u6848\u662f\u5df2\u7ecf\u8003\u8651\u4e86\u7684\u3002\u81f3\u4e8e\u66f4\u65b0 $l_i$ \u7684\u64cd\u4f5c\u5c31\u662f\u53bb\u770b\u53f3\u8fb9\u81ea\u5df1\u80fd\u70b8\u5230\u7684\u70b8\u5f39\u80fd\u4e0d\u80fd\u5f80\u5de6\u518d\u70b8\u4e86\u3002  \r\n\u6700\u540e\u5f15\u7206\u70b8\u5f39 $i$ \u7684\u7b54\u6848\u5c31\u662f $r_i - l_i + 1$ \u4e86\u3002\u56e0\u4e3a\u6700\u540e\u7206\u6389\u7684\u80af\u5b9a\u662f\u8fde\u7eed\u4e00\u6bb5\u3002  \r\n\u5b8c\u6574\u4ee3\u7801\uff1a\r\n```cpp\r\n#include <cstdio>\r\n#include <iostream>\r\nconst int nn = 5e5 + 5, mod = 1e9 + 7;\r\nint n, l[nn], r[nn];\r\nlong long ans, a[nn], range[nn];\r\nint main() {\r\n    scanf(\"%d\", &n);\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%lld %lld\", a + i, range + i);\r\n        l[i] = r[i] = i;\r\n    }\r\n    for (int i = 2; i <= n; i++) {\r\n        while (l[i] > 1 && a[i] - a[l[i] - 1] <= range[i]) {\r\n            range[i] = std::max(range[i], range[l[i] - 1] - (a[i] - a[l[i] - 1]));\r\n            l[i] = l[l[i] - 1];\r\n        }\r\n    }\r\n    for (int i = n - 1; i >= 1; i--) {\r\n        while (r[i] < n && a[r[i] + 1] - a[i] <= range[i]) {\r\n            l[i] = std::min(l[i], l[r[i] + 1]);\r\n            r[i] = r[r[i] + 1];\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n        ans = (ans + 1ll * i * (r[i] - l[i] + 1)) % mod;\r\n    printf(\"%lld\\n\", ans);\r\n    return 0;\r\n}\r\n```\r\n\u6548\u7387\u6ca1\u7684\u8bf4\uff0c\u6700\u4f18\u89e3\u699c\u4e00\u5c31\u662f\u8fd9\u4e2a\u4ee3\u7801  \r\n\u6216\u8005\u8bf4\u5176\u5b9e\u8fd9\u73a9\u610f\u7684\u6b63\u786e\u6027\u548c\u6548\u7387\u662f\u5047\u7684\uff1f\uff08\u6b22\u8fce\u6765 Hack",
        "postTime": 1605621495,
        "uid": 124683,
        "name": "Krystallos",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5025\u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "update\uff1a\u73b0\u5728\u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u7684\u505a\u6cd5  \nupdate2\uff1a\u540e\u6765\u53d1\u73b0\u4ee3\u7801\u6709\u9505\uff0c\u73b0\u5df2\u4fee\u590d\u3002\n\n\u849f\u84bb\u521a\u770b\u5230\u6709\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u8fd9\u79cd\u4e1c\u897f\uff0c\u4e8e\u662f\u60f3\u8bd5\u7740\u81ea\u5df1\u5199\u4e00\u53d1\uff0c\u8c03\u4e86\u597d\u4e45\u7ec8\u4e8e\u8fc7\u4e86\u3002\u3002   \n\u6536\u83b7\u4e0d\u5c11\uff0c\u5199\u7bc7\u9898\u89e3~~\u62a5\u590d~~\u9020\u798f\u793e\u4f1aqwq\n***\n\u8fd9\u9898\u8981\u6211\u4eec\u7b97\u6bcf\u4e2a\u70b8\u5f39\u80fd\u5f15\u7206\u7684\u70b8\u5f39\u4e2a\u6570\u3002  \n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4ece\u6bcf\u4e2a\u70b8\u5f39\u5411\u5b83\u7206\u70b8\u8303\u56f4\u5185\u7684\u70b8\u5f39\u8fde\u8fb9\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u70b9\u641c\u7d22\uff0c\u80fd\u62b5\u8fbe\u7684\u8282\u70b9\u6570\u91cf\u5373\u662f\u7b54\u6848\u3002  \n\n\u8fd9\u6837\u505a\u662f\u5f88\u4e0d\u4f18\u7684\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u8fbe\u5230\u4e86 $\\text{O}(n^2)$ \u7684\u7ea7\u522b\uff0c\u90a3\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\u6211\u4eec\u6765\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a  \n\u5982\u56fe\uff0c\u6709\u4e00\u4e2a\u70b9\u8981\u5411\u53e6\u5916 $7$ \u4e2a\u70b9\u8fde\u8fb9  \n![](https://cdn.luogu.com.cn/upload/pic/53229.png)  \n\u6ce8\u610f\u5230\u6bcf\u4e2a\u70b9\u8fde\u5411\u7684\u70b9\u4e00\u5b9a\u90fd\u662f\u5728\u4e00\u6bb5\u533a\u95f4\u91cc\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/53230.png)  \n\u6700\u4e0b\u9762\u4e00\u6392\u662f\u539f\u6765\u7684\u70b9\uff0c\u8fd9\u6837\u8fde\u8fb9\uff0c\u548c\u539f\u56fe\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002   \n\u4f60\u8bf4\u8fd9\u6837\u53cd\u800c\u590d\u6742\u4e86\uff1f    \n\n\u539f\u6765\u8981\u4ece\u90a3\u4e2a\u70b9\u8fde\u51fa\u53bb $7$ \u6761\u8fb9\uff0c\u73b0\u5728\u53ea\u9700\u8981\u8fde\u51fa\u53bb $3$ \u6761\uff0c\u4e5f\u5c31\u662f $\\lceil\\log_2 7\\rceil$ \u6761\u8fb9\u4e86\u3002  \n\u63a8\u800c\u5e7f\u4e4b\uff0c\u7528\u8fd9\u79cd\u65b9\u6cd5\u7ed9 $n$ \u4e2a\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\uff0c\u5c31\u53ea\u9700\u8981 $\\text O(n \\log n)$ \u6761\u8fb9\uff01  \n\n\u5982\u6b64\uff0c\u6211\u4eec\u5c31\u628a\u5efa\u8fb9\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u964d\u4e0b\u6765\u4e86\u3002\n\n\u5173\u4e8e\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u8fd9\u91cc\u518d\u8bf4\u4e00\u4e0b\uff1a  \n\u9996\u5148\u6211\u4eec\u8981\u5efa\u6811\uff0c\u8fd9\u91cc\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6ca1\u4ec0\u4e48\u4e24\u6837\uff1a  \n```cpp\nvoid build(int l,int r,int u){\n    if(l==r){\n    \tid[l] = u //id[x]\u8868\u793ax\u8282\u70b9\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6807\u53f7\n    \treturn;\n        //\u5de6\u53f3\u7aef\u70b9\u76f8\u7b49,\u5219\u8868\u793a\u9012\u5f52\u5230\u5e95\u5c42\n    }\n    int mid = (l+r)>>1;\n    build(l,mid,u<<1); //\u5efa\u5de6\u534a\u8fb9\n    build(mid+1,r,u<<1|1); //\u5efa\u53f3\u534a\u8fb9\n    add_edge(u,u<<1);\n    add_edge(u,u<<1|1); //u\u5411\u81ea\u5df1\u5de6\u53f3\u513f\u5b50\u8fde\u8fb9\n}\n```\n\u7136\u540e\u5c31\u662f\u8981\u5b9e\u73b0\u70b9\u5411\u533a\u95f4\u8fde\u8fb9\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\nvoid link(int v,int nl,int nr,int l,int r,int u){\n    //v\u5411\u533a\u95f4[nl,nr]\u8fde\u8fb9  \n    if(nl<=l&&r<=nr){\n    \tif(v==u) return; //\u5224\u81ea\u73af\n    \tadd_edge(v,u);\n        return;\n    }\n    int mid = (l+r)>>1;\n    if(nl<=mid) link(v,nl,nr,l,mid,u<<1);\n    if(nr>mid) link(v,nl,nr,mid+1,r,u<<1|1);\n}\n```\n\u5efa\u56fe\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u8981\u7edf\u8ba1\u7b54\u6848\u3002   \n\u4e3a\u4e86\u65b9\u4fbf\u540e\u9762\u505a\uff0c\u9700\u8981\u5148\u8dd1\u4e2a $\\texttt{tarjan}$ \u7f29\u70b9\uff0c\u6ce8\u610f\u7f29\u70b9\u540e\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u4e3a \u5bf9\u5e94\u7684\u5f3a\u8fde\u901a\u5206\u91cf \u4e2d\u8282\u70b9\u4e2a\u6570\u3002\n\n\u7f29\u70b9\u4e4b\u540e\uff0c\u539f\u56fe\u5c31\u53d8\u6210 $\\text{DAG}$ \u4e86\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u80fd\u62b5\u8fbe\u7684\u8282\u70b9 **\u6743\u503c** \u548c\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u5728\u4e00\u822c\u7684 $\\text{DAG}$ \u4e0a\u662f\u4e2a\u4e16\u7eaa\u96be\u9898\u3002\n\n\u4e0d\u8fc7\u73b0\u5728\u5b83\u5230\u4e86\u533a\u95f4\u4e0a\uff0c\u53ef\u4ee5\u5728 $\\texttt{tarjan}$ \u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6bcf\u4e2a\u65b0\u70b9\uff08\u5373\u5f3a\u8fde\u901a\u5206\u91cf \uff09\u80fd\u5230\u8fbe\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u6700\u540e\u5bf9\u6bcf\u4e2a\u70b9\u76f4\u63a5\u53d6\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\u8dd1\u5b8c\u7f29\u70b9\u8fd8\u8981\u518d $\\text{dfs}$ \u4e00\u904d\uff0c\u7528 $u$ \u80fd\u5230\u7684\u6240\u6709\u8282\u70b9 $v$ \u6765\u66f4\u65b0\u5b83\u80fd\u5230\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define ll long long\n#define N 500003\n#define M 2000003\n#define reg register\n#define p 1000000007\n#define mid ((l+r)>>1)\n#define ls (u<<1)\n#define rs (u<<1|1)\nusing namespace std;\n\nstruct node{ \n    int l,r;\n    inline node(int l=0,int r=0):l(l),r(r){}\n}a[M];\n\nvector<int> adj[M],G[M];\nll x[N],r[N];\nint clr[M],low[M],dfn[M],stk[M];\nint id[M],left[M],right[M];\nbool vis[M];\nint n,cnt,scc,tp,nd,ans;\n\nvoid tarjan(int u){\n    dfn[u] = low[u] = ++cnt;\n    stk[++tp] = u;\n    vis[u] = true;\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u] = min(low[u],low[v]);\n        }else if(vis[v])\n            low[u] = min(low[u],dfn[v]);\n    }\n    if(low[u]!=dfn[u]) return;\n    ++scc;\n    do{\n        v = stk[tp];\n        clr[v] = scc; \n        vis[v] = false;\n        left[scc] = min(left[scc],a[v].l);  //\u66f4\u65b0\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u80fd\u5230\u7684\u5de6\u53f3\u7aef\u70b9\n        right[scc] = max(right[scc],a[v].r);\n        --tp;\n    }while(stk[tp+1]!=u);\n}\n\nvoid connect(int v,int nl,int nr,int l,int r,int u){ //\u7ebf\u6bb5\u6811\u4e0a\u8fde\u8fb9\n    if(nl<=l&&r<=nr){\n        if(v==u) return;\n        adj[v].push_back(u);\n        return;\n    }\n    if(nl<=mid) connect(v,nl,nr,l,mid,ls);\n    if(nr>mid) connect(v,nl,nr,mid+1,r,rs);\n}\n\nvoid build(int l,int r,int u){\n    a[u] = node(l,r);\n    nd = max(nd,u);\n    if(l==r){\n        id[l] = u; \n        return;\n    }\n    build(l,mid,ls);\n    build(mid+1,r,rs);\n    adj[u].push_back(ls);\n    adj[u].push_back(rs);\n}\n\ninline int query(int x){ \n    int u = clr[id[x]];\n    return right[u]-left[u]+1;\n}\n\nvoid dfs(int u){ //\u6700\u540e\u4e00\u904d dfs \u66f4\u65b0\n\tvis[u] = true;\n\tint v,l = G[u].size();\n\tfor(int i=0;i!=l;++i){\n\t\tv = G[u][i];\n\t\tif(vis[v]){\n\t\t\tleft[u] = min(left[u],left[v]);\n\t\t\tright[u] = max(right[u],right[v]);\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(v);\n\t\tleft[u] = min(left[u],left[v]);\n\t\tright[u] = max(right[u],right[v]);\n\t}\n}\n\nint main(){\n    int L,R,ln,u;\n    scanf(\"%d\",&n);\n    for(reg int i=1;i<=n;++i)\n        scanf(\"%lld%lld\",&x[i],&r[i]);\n    memset(left,0x3f,sizeof(left));    \n    x[n+1] = 0x3f3f3f3f3f3f3f3fll;\n    build(1,n,1); \n    for(reg int i=1;i<=n;++i){\n        if(!r[i]) continue;\n        L = lower_bound(x+1,x+1+n,x[i]-r[i])-x;\n        R = upper_bound(x+1,x+1+n,x[i]+r[i])-x-1;\n        connect(id[i],L,R,1,n,1);\n        a[id[i]] = node(L,R);\n    }    \n    tarjan(1);  \n    for(reg int i=1;i<=nd;++i){\n    \tln = adj[i].size();\n    \tfor(reg int j=0;j!=ln;++j){\n    \t\tu = adj[i][j];\n    \t\tif(clr[u]==clr[i]) continue;\n    \t\tG[clr[i]].push_back(clr[u]);\n\t\t}\n\t}\n\tfor(reg int i=1;i<=scc;++i){ //\u628a\u91cd\u590d\u8fde\u7684\u8fb9\u53bb\u6389\n\t\tsort(G[i].begin(),G[i].end());\n\t\tunique(G[i].begin(),G[i].end());\n\t}\n\tmemset(vis,0,sizeof(vis));\n\tfor(reg int i=1;i<=scc;++i)\n\t\tif(!vis[i]) dfs(i);\n    for(reg int i=1;i<=n;++i)\n        ans = (ans+(ll)query(i)*i)%p;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1551781971,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "[SNOI2017]\u70b8\u5f39\uff1a\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe"
    },
    {
        "content": "**\u56db\u500d\u7a7a\u95f4\u56db\u500d\u7a7a\u95f4\u56db\u500d\u7a7a\u95f4\uff01**\n(\u6211\u597d\u5f31\u554a\u56e0\u4e3a\u8fd9\u4e2a\u591a\u4ea4\u4e24\u904d\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9~~\uff08\u6076\u5fc3\u4e4b\u5904\uff09~~\u5728\u4e8e\u4e00\u4e2a\u5c0f\u70b8\u5f39\u7684\u7206\u70b8\u53ef\u80fd\u4f1a\u5f15\u53d1\u4e00\u4e2a\u5927\u70b8\u5f39\u7684\u7206\u70b8\u5c31\u4f1a\u76f4\u63a5\u5bf9\u7b54\u6848\u4ea7\u751f\u5f88\u5927\u7684\u5f71\u54cd\n\n\uff08\u849f\u84bb\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9898\u76f4\u63a5\u6389\u5230\u4e86\u5751\u91ccqwq\n\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u5411\u6574\u6bb5\u533a\u95f4\u90fd\u6709\u8fb9\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\n\n\u8fb9\u6570\u53ef\u4ee5\u4ece$n^{2}$\u7ea7\u522b\u964d\u81f3$nlogn$\u7684\u7ea7\u522b\n\n\u7b97\u662f\u5f88\u5927\u7684\u4f18\u5316\u4e86qwq\n\n\u8fd9\u9053\u9898\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u5176\u4ed6\u9898\u89e3\u91cc\u7684\u5927\u4f6c\u4eec\u8bb2\u5f97\u5f88\u6e05\u695a\uff0c\u5c31\u4e0d\u8bf4\u592a\u591a\u4e86qwq\n\n------------\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540e\u5462qwqwq\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/psie01qe.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n~~\u8fd9\u4e9b\u8fb9\u8fd9\u4e48\u9b3c\u755c\uff0c\u76f4\u63a5\u4e71\u641e\u6574\u6765\u6574\u53bb\u7684\u6211\u8fd9\u6837\u7684\u849f\u84bb\u4e00\u5b9a\u4f1a\u5199\u6302\u7684\u53edqwq~~\n\n\u76f4\u63a5\u4e71\u641e\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u592a\u4f18\u79c0\u7684\u590d\u6742\u5ea6~~\uff08\u5047\u88c5\u6b63\u7ecf~~\n\n\u7f29\u4e2a\u70b9~~\u8bd5\u8bd5\u53ed~~\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/y36e0v25.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n~~\u53d7\u4e0d\u4e86\u4e86\uff0c\u592a\u6e05\u65b0\u4e86\uff0cwsl~~\n\n\u7136\u540e\u8fd9\u9898\u5c31\u4e0d\u96be\u4e86\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u4e2a**DAG** \uff0c\u6211\u4eec\u9614\u4ee5\u7ef4\u62a4**\u6bcf\u4e2a\u70b9\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5de6\u8fb9\u7684\u7aef\u70b9\u548c\u6700\u53f3\u8fb9\u7684\u7aef\u70b9**\n\n\u90a3\u4e48\u76f4\u63a5**\u53cd\u5411\u5efa\u8fb9**\u7136\u540e\u8dd1\u4e00\u4e2a**\u62d3\u6251\u6392\u5e8f**\u5373\u53ef\u5904\u7406\u51fa\u8fd9\u4e2a\u4e1c\u897f\n\n$\\text{\u4e8e\u662f\u4e00\u4e2a\u70b9\u80fd\u5f15\u7206\u7684\u7684\u70b8\u5f39\u7684\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5c31\u5206\u522b\u4e3a}$\n\n$\\text{\u8fd9\u4e2a\u70b9\u5728\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u7684\u90a3\u4e2a\u70b9\u5728\u7f29\u5b8c\u70b9\u4e4b\u540e\u5bf9\u5e94\u7684\u65b0\u7684\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u4e4b\u4e2d}$\n\n$\\text{\u6700\u9760\u5de6\u7684\u5de6\u7aef\u70b9\u548c\u6700\u9760\u53f3\u7684\u53f3\u7aef\u70b9}$\n\n\uff08\u8fd9\u53e5\u8bdd\u6709\u70b9\u7ed5\uff0c\u4ee3\u7801\u91cc\u7684\u4e00\u5806\u6570\u7ec4\u5d4c\u5957\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e2aqwq\n\n\n\u5230\u8fd9\u91cc\u8fd9\u9898\u601d\u8def\u5c31\u5dee\u4e0d\u591a\u4e86qwq\n\n\u8be6\u7ec6\u7684\u4ee3\u7801\u5b9e\u73b0\u5c31\u5728\u4ee3\u7801\u91cc\u52a0\u6ce8\u91ca\u5427qwq\n\n\u4e0b\u9762\u8d34\u51fa\u6765\u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define int long long\n// \u624d\u4e0d\u662f\u4ec0\u4e48\u731b\u7537\u5199\u6cd5qwqwq\nusing namespace std;\n\ninline int read() {\n    int op = 1, a = 0; char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar()) if (c == '-') op = -1;\n    for (; c >= '0' && c <= '9'; c = getchar()) a = a * 10 + c - '0';\n    return op * a;\n}\n\nconst int mod = 1e9 + 7;\nconst int maxn = 500003;\n\nint n;\nint X[maxn], R[maxn];\n\nint cnt;\nint head[maxn << 2];\nstruct Edge {\n    int fr, to, nxt;\n    Edge(int _fr, int _to, int _nxt) {\n        this -> fr = _fr;\n        this -> to = _to;\n        this -> nxt = _nxt;\n    } Edge() {}\n} e[maxn << 3];\ninline void add_edge(int u, int v) {e[++cnt] = Edge(u, v, head[u]); head[u] = cnt;}\n\n#define lc (u << 1)\n#define rc (u << 1 | 1)\n\nstruct Seg {\n    int l, r, id; //id\u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u70b8\u5f39\u7684\u7f16\u53f7\n        // id\u4e3a0\u5c31\u4ee3\u8868\u662f\u4e00\u6bb5\u533a\u95f4\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u70b8\u5f39\n    void init(int x) {l = r = x; id = l;}\n    Seg operator + (const Seg& rhs) const {\n        Seg u; u.l = l, u.r = rhs.r;\n        u.id = 0; return u;\n    }\n} tr[maxn << 2];\nint ind[maxn];// \u4e00\u4e2a\u70b9\u5728\u7ebf\u6bb5\u6811\u4e2d\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7\n\ninline void update(int u) {tr[u] = tr[lc] + tr[rc];}\n\n// \u5148\u628a\u6734\u7d20\u7684\u7ebf\u6bb5\u6811\u5efa\u51fa\u6765\nvoid build(int u, int l, int r) {\n    if (l == r) {tr[u].init(l); ind[l] = u; return;}\n    int mid = l + r >> 1;\n    build(lc, l, mid), build(rc, mid + 1, r);\n    add_edge(u, lc), add_edge(u, rc);\n    update(u);\n}\n\n// \u7136\u540e\u628a\u6bcf\u4e2a\u70b8\u5f39\u7ed9\u5b83\u7ba1\u8f96\u7684\u533a\u95f4\u8fde\u8fb9\nvoid modify(int u, int l, int r, int x) {\n    if (l <= tr[u].l && r >= tr[u].r) {\n        if (x != u) add_edge(x, u);\n        return;\n    }\n    int mid = tr[u].l + tr[u].r >> 1;\n    if (l <= mid) modify(lc, l, r, x);\n    if (r > mid) modify(rc, l, r, x);\n}\n\n// \u518d\u6b21\u5f3a\u8c03\u56db\u500d\u7a7a\u95f4\uff08\u5e76\u611f\u53f9\u4e00\u4e0b\u6211\u7684\u5f31qwqwq\nint siz[maxn << 2]; //siz\u5b58\u4e00\u4e2a\u70b9\u4e2d\u6709\u51e0\u4e2a\u70b8\u5f39\nbool vis[maxn << 2];\nint r, s[maxn << 2];\nint num, belong[maxn << 2];\nint Time, dfn[maxn << 2], low[maxn << 2];\nint leftest[maxn << 2], rightest[maxn << 2];\n    // \u8868\u793a\u7f29\u70b9\u540e\u7684\u6bcf\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n\nvoid Tarjan(int u) {\n    dfn[u] = low[u] = ++Time;\n    s[++r] = u, vis[u] = 1; int R = r;\n    for (int i = head[u]; i; i = e[i].nxt) {\n        int v = e[i].to;\n        if (!dfn[v]) {\n            Tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if (vis[v]) low[u] = min(low[u], dfn[v]);\n    }\n    if (dfn[u] == low[u]) {\n        num++;\n        leftest[num] = 0x3f3f3f3f, rightest[num] = 0;\n        for (int i = R; i <= r; i++) {\n            vis[s[i]] = 0;\n            belong[s[i]] = num;\n            if (tr[s[i]].id) siz[num]++;\n            leftest[num] = min(leftest[num], tr[s[i]].l);\n            rightest[num] = max(rightest[num], tr[s[i]].r);\n        }\n        r = R - 1;\n    }\n}\n\nint in[maxn << 2];\n\nvoid rebuild() {\n    int tmp = cnt;\n    cnt = 0;\n    memset(head, 0, sizeof head);\n    for (int i = 1; i <= tmp; i++) {\n        int u = belong[e[i].fr], v = belong[e[i].to];\n        if (u == v) continue;\n        add_edge(v, u); in[u]++;\n    }\n}\n\n// \u5176\u5b9e\u5c31\u662f\u5b8c\u5584leftest\u6570\u7ec4\u548crightest\u6570\u7ec4\nvoid Topo() {\n    queue<int> q;\n    for (int i = 1; i <= num; i++)\n        if (in[i] == 0) q.push(i);\n    for (; q.size(); ) {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = e[i].nxt) {\n            int v = e[i].to;\n            leftest[v] = min(leftest[v], leftest[u]);\n            rightest[v] = max(rightest[v], rightest[u]);\n            in[v]--; if (!in[v]) q.push(v);\n        }\n    }\n}\n\nint ans;\n\nsigned main() {\n    n = read();\n    for (int i = 1; i <= n; i++) X[i] = read(), R[i] = read();\n    build(1, 1, n);\n    for (int i = 1; i <= n; i++) {\n        int l = lower_bound(X + 1, X + n + 1, X[i] - R[i]) - X;\n        int r = upper_bound(X + 1, X + n + 1, X[i] + R[i]) - X - 1;\n        if (l <= r) modify(1, l, r, ind[i]);\n    }\n    Tarjan(1); rebuild(); Topo();\n        // \u56e0\u4e3a\u662f\u7ebf\u6bb5\u6811\u6240\u4ee5\u4e0d\u4f1a\u5b58\u5728\u4e00\u4e9b\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\n        // \u76f4\u63a5 Tarjan(1) \u5373\u53ef\n    for (int i = 1; i <= n; i++) {\n        ans += i * (rightest[belong[ind[i]]] - leftest[belong[ind[i]]] + 1);\n        ans %= mod;\n    }\n    cout << ans << '\\n';\n    return 0;\n}\n```\n\n## 2020.2.17 UPD\n\n**\u5173\u4e8e\u590d\u6742\u5ea6\uff1a** \u7531\u4e8e\u5efa\u56fe\u662f$O(NlogN)$\uff0c\u800c\u5efa\u56fe\u4e4b\u540e\u7684\u64cd\u4f5c\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(NlogN)$",
        "postTime": 1568722794,
        "uid": 162865,
        "name": "NxtEcho",
        "ccfLevel": 0,
        "title": "P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u501f\u9274\u4e86\u4e00\u4e0b\u5176\u4ed6\u5de8\u4f6c\u7684\u601d\u8def\uff0c\u5199\u4e86\u4e00\u4e2a$O(n)$\u7684\uff08\u770b\u8d77\u6765\u6b63\u786e\u7684\uff09\u505a\u6cd5\u3002\n\n\u9996\u5148\u5f88\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e2a\u70b8\u5f39\u80fd\u5f15\u7206\u7684\u662f\u4e00\u4e2a\u533a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u601d\u8def\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b8\u5f39$i$\uff0c\u6211\u4eec\u627e\u5230$i$\u80fd\u70b8\u5230\uff08\u5305\u62ec\u8fde\u9501\u53cd\u5e94\u7684\u60c5\u51b5\uff09\u7684\u8fd9\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u4ece$i$\u7ed9\u8fd9\u4e9b\u70b9\u8fde\u8fb9\u3002\n\n\u7531\u4e8e\u662f\u7ed9\u4e00\u6bb5\u533a\u95f4\u8fde\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\u3002\u4f46\u662f\u4f17\u6240\u5468\u77e5\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\u5341\u5206\u70e6\u7410\uff0c\u7a0d\u4e0d\u8c28\u614e\u5c31\u5bb9\u6613\u6253\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u4e00\u4e9b\u5176\u4ed6\u7b80\u5355\u4e00\u70b9\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u5c06\u8fde\u8fb9\u7684\u65b9\u5f0f\u6539\u4e00\u6539\u3002\u6211\u4eec\u6539\u6210\uff1a**\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$i$\uff0c\u6211\u4eec\u627e\u5230\u6240\u6709\u80fd\u70b8\u5230$i$\u7684\u70b9$j$\uff0c\u4ece$j$\u5411$i$\u8fde\u4e00\u6761\u8fb9**\u3002\n\n\u53ef\u662f\u8fd9\u6837\u8c8c\u4f3c\u6ca1\u6709\u4ec0\u4e48\u672c\u8d28\u533a\u522b\u2026\u2026\n\n\u4f46\u662f\u6211\u4eec\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f18\u5316\u4e86\uff01\u6211\u4eec\u53ea\u8981\u5206\u522b\u5728\u5de6\u53f3\u627e\u5230\u79bb$i$\u70b9\u6700\u8fd1\u5e76\u4e14\u80fd\u70b8\u5230\u70b9$i$\u7684$j$,\u4ece$j$\u5411$i$\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u5982\u679c\u5b58\u5728$k<j<i$\uff0c\u4e14$k,j$\u90fd\u80fd\u70b8\u5230$i$\uff0c\u90a3\u4e48$k$\u5fc5\u7136\u53ef\u4ee5\u70b8\u5230$j$\u3002\u6240\u4ee5$k$\u70b8\u5230$i$\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u662f$k$\u70b8\u5230$j$\uff0c$j$\u518d\u70b8\u5230$i$\u3002$k>j>i$\u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u8fd9\u6837\u6211\u4eec\u6bcf\u4e2a\u70b9\u90fd\u53ea\u9700\u8981\u8fde\u4e24\u6761\u8fb9\u5566\uff01\n\n**Q\uff1a\u5982\u4f55\u5728$i$\u5de6\u8fb9\u627e\u5230\u79bb$i$\u6700\u8fd1\u7684\u4e14\u80fd\u70b8\u5230$i$\u7684\u70b9$j$\uff1f**\n\n**A\uff1a\u6211\u4eec\u53ef\u4ee5\u4ece\u5de6\u5f80\u53f3\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u8bbe\u6808\u9876\u7684\u70b8\u5f39\u7f16\u53f7\u4e3a$top$\uff0c\u5f53\u524d\u8981\u6c42\u7684\u70b8\u5f39\u4e3a$i$\u3002\u5982\u679c$X[top]+R[top]<X[i]$\uff0c\u5373\u7b2c$top$\u4e2a\u70b8\u5f39\u70b8\u4e0d\u5230$i$\uff0c\u5c31\u5f39\u51fa\u6808\u9876\u5143\u7d20\uff0c\u76f4\u5230\u6808\u7a7a\u6216\u6808\u9876\u5408\u6cd5\u4e3a\u6b62\u3002\u5c06$i$\u5f39\u5165\u65f6\uff0c\u82e5$R[top]<R[i]$\uff0c\u663e\u7136\u53ef\u4ee5\u5c06\u6808\u9876\u5f39\u51fa\uff0c\u6700\u540e\u518d\u5c06$i$\u70b9\u6254\u5230\u6808\u91cc\u3002\u53f3\u8fb9\u7684\u540c\u7406\u3002**\n\n**$P.S.$\u7531\u4e8e\u672c\u849f\u84bb\u7528$L[i],R[i]$\u6765\u8bb0\u5f55\uff0c\u4e0e\u9898\u76ee\u8f93\u5165\u7684$R$\u91cd\u590d\u4e86\uff0c\u6240\u4ee5\u70b8\u5f39\u534a\u5f84\u7528$Rad$\u6765\u4ee3\u66ff$Q\\mu Q$**\n\n```cpp\nL[1]=0;stk[top=1].pos=X[1];stk[1].rad=Rad[1];stk[1].id=1;\n    for (int i=2;i<=n;i++)\n    {\n        while (top&&stk[top].pos+stk[top].rad<X[i]) --top;L[i]=stk[top].id;\n        while (top&&R[i]>stk[top].rad) --top;\n        stk[++top].pos=X[i];stk[top].rad=Rad[i];stk[top].id=i;\n    }\n    R[n]=0;stk[top=1].pos=X[n];stk[1].rad=Rad[n];stk[1].id=n;\n    for (int i=n-1;i;i--)\n    {\n        while (top&&stk[top].pos-stk[top].rad>X[i]) --top;R[i]=stk[top].id;\n        while (top&&R[i]>stk[top].rad) --top;\n        stk[++top].pos=X[i];stk[top].rad=Rad[i];stk[top].id=i;\n    }\n```\n\n\u7136\u540e\u6211\u4eec\u5c31\u6109\u5feb\u5730\u8fde\u597d\u8fb9\u5566\uff01\u4f46\u8fde\u5b8c\u8fb9\u4e4b\u540e\u600e\u4e48\u529e\u5462$?QnQ$\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$i$\u80fd\u8d70\u5230\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u81ea\u7136\u5730\u8fdb\u884c\u7f29\u70b9\uff0c\u7136\u540e\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a$DAG$\u3002\u4e8e\u662f\u6211\u4eec\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u7ed9\u5b9a\u4e00\u4e2a$DAG$\uff0c\u6c42\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u636e\u673a\u623f\u5927\u4f6c\u8bf4\uff0c\u8fd9\u6837\u7684\u9898\u8c8c\u4f3c\u6700\u597d\u7684\u505a\u6cd5\u662f$bitset$\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5f97\u4e0d\u518d\u627e\u5176\u4ed6\u6027\u8d28$QnQ$\u3002\n\n\u6211\u4eec\u7a81\u7136\u60f3\u8d77\u6765\u6bcf\u4e2a\u70b8\u5f39\u80fd\u70b8\u5230\u7684\u70b9\u90fd\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\uff0c\u90a3\u6211\u4eec\u53ea\u8981\u77e5\u9053\u77e5\u9053\u8fd9\u4e2a\u70b8\u5f39\u80fd\u70b8\u5230\u7684\u70b8\u5f39\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u7b54\u6848\u4e86\u3002\u8fd9\u6837$dp$\u5c31\u975e\u5e38\u597d\u5199\u4e86\u3002\u53ea\u8981\u4e0a\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\u5373\u53ef\u3002$!Q\\omega Q!$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int N=1000000;\n\nint n,top,L[N],R[N],first[N],w,stk2[N],belong[N],low[N],dfn[N];\nint q[N],Max[N],Min[N],cnt,Node,A[N],deg[N];\nll X[N],Rad[N],ans;\nbool instk[N];\nvector<int>V[N];\n\nstruct Edge\n{\n\tint to,nxt;\n} edge[N<<1];\n\nstruct Stack\n{\n\tll pos,rad,id;\n} stk[N];\n\nvoid add(int x,int y)\n{\n    edge[++w].to=y;edge[w].nxt=first[x];first[x]=w;\n}\n\nvoid tarjan(int u,int fa)\n{\n\tdfn[u]=low[u]=++cnt;\n\tstk2[++top]=u;instk[u]=true;\n\tfor (int i=first[u];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif (!dfn[v]) {tarjan(v,u);low[u]=min(low[u],low[v]);}\n\t\t\telse if (instk[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif (dfn[u]==low[u])\n\t{\n\t\tint sum=0;++Node;Min[Node]=1000000007;\n\t\twhile (stk2[top+1]!=u)\n\t\t{\n\t\t\tint v=stk2[top];--top;instk[v]=false;\n\t\t\tMin[Node]=min(Min[Node],v);Max[Node]=max(Max[Node],v);\n\t\t\tA[++sum]=v;belong[v]=Node;\n\t\t}\n\t\tfor (int i=1;i<=sum;i++)\n\t\t\tfor (int j=first[A[i]];j;j=edge[j].nxt)\n\t\t\t{\n\t\t\t\tint v=edge[j].to;\n\t\t\t\tif (belong[v]!=Node) V[Node].push_back(belong[v]),deg[belong[v]]++;\n\t\t\t}\n\t}\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%lld%lld\",&X[i],&Rad[i]);\n    L[1]=0;stk[top=1].pos=X[1];stk[1].rad=Rad[1];stk[1].id=1;\n    for (int i=2;i<=n;i++)\n    {\n        while (top&&stk[top].pos+stk[top].rad<X[i]) --top;L[i]=stk[top].id;\n        while (top&&R[i]>stk[top].rad) --top;\n        stk[++top].pos=X[i];stk[top].rad=Rad[i];stk[top].id=i;\n    }\n    R[n]=0;stk[top=1].pos=X[n];stk[1].rad=Rad[n];stk[1].id=n;\n    for (int i=n-1;i;i--)\n    {\n        while (top&&stk[top].pos-stk[top].rad>X[i]) --top;R[i]=stk[top].id;\n        while (top&&R[i]>stk[top].rad) --top;\n        stk[++top].pos=X[i];stk[top].rad=Rad[i];stk[top].id=i;\n    }\n    for (int i=1;i<=n;i++)\n    {\n    \tif (L[i]) add(L[i],i);\n    \tif (R[i]) add(R[i],i);\n\t}\n\ttop=0;\n\tfor (int i=1;i<=n;i++)\n\t\tif (!dfn[i]) tarjan(i,0);\n\tint t=0,w=0;\n\tfor (int i=1;i<=Node;i++)\n\t\tif (!deg[i]) q[++w]=i;\n\twhile (t<=w)\n\t{\n\t\tint x=q[++t];\n\t\tfor (int i=0,s=V[x].size();i<s;i++)\n\t\t{\n\t\t\tint y=V[x][i];--deg[y];\n\t\t\tif (!deg[y]) q[++w]=y;\n\t\t}\n\t}\n\tfor (int i=w;i;i--)\n\t\tfor (int j=0,s=V[q[i]].size();j<s;j++)\n\t\t{\n\t\t\tint u=q[i],v=V[u][j];\n\t\t\tMin[u]=min(Min[u],Min[v]);Max[u]=max(Max[u],Max[v]);\n\t\t}\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint x=belong[i];\n\t\tans=(ans+(ll)i*(Max[x]-Min[x]+1))%1000000007;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\uff08\u7801\u98ce\u7565\u4e11\u52ff\u55b7\uff09\n",
        "postTime": 1564727478,
        "uid": 29575,
        "name": "Holy_Push",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "update\uff1a2020.9.25 \u4fee\u590d\u4e86\u539f\u601d\u8def\u7684\u9505\u5e76\u4e14\u66f4\u65b0\u4e86\u4ee3\u7801\n\n---\n\n## \u7b2c\u4e00\u7bc7\u9ed1\u9898\u9898\u89e3qwq\n\n~~\u7136\u800c\u5728\u9898\u89e3\u66f4\u65b0\u7684\u65f6\u5019\u5df2\u7ecf\u6389\u7d2b\u4e86~~\n\n\u7531\u4e8e\u7a9d\u5728\u505a\u6a21\u62df\u9898\u65f6\u88ab 2-SAT \u52a0\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\u641e\u70b8\u4e86\uff0c\u6240\u4ee5\u4e00\u6c14\u4e4b\u4e0b\u6765\u5b66\u4e86\u8fd9\u4e24\u4e2a\u4e1c\u897fww\n\n\u8fd9\u7bc7\u5c31\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\n\n\u76f4\u63a5\u6b65\u5165\u6b63\u9898\uff0c\u5148\u6765\u770b\u9898\u76ee\n\n\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u6709 $N$ \u4e2a\u70b8\u5f39\uff0c\u6bcf\u4e2a\u70b8\u5f39\u7684\u5750\u6807\u662f $X_i$\uff0c\u7206\u70b8\u534a\u5f84\u662f $R_i$\uff0c\u5f53\u4e00\u4e2a\u70b8\u5f39\u7206\u70b8\u65f6\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u70b8\u5f39\u6240\u5728\u4f4d\u7f6e $X_j$ \u6ee1\u8db3\uff1a $X_i-R_i\\leq X_j \\leq X_i+R_i$ \uff0c\u90a3\u4e48\uff0c\u8be5\u70b8\u5f39\u4e5f\u4f1a\u88ab\u5f15\u7206\u3002 \u73b0\u5728\uff0c\u8bf7\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u4e00\u4e0b\uff0c\u5148\u628a\u7b2c$i$\u4e2a\u70b8\u5f39\u5f15\u7206\uff0c\u5c06\u5f15\u7206\u591a\u5c11\u4e2a\u70b8\u5f39\u5462\uff1f\n\n\u7b54\u6848\u5bf9 $1000000007$ \u53d6\u6a21\n\n## \u9898\u89e3\n\n\u8fd9\u9053\u9898\u8981\u6c42\u7684\u5176\u5b9e\u5c31\u662f\u5f15\u7206\u6bcf\u4e00\u4e2a\u70b8\u5f39\u6240\u9644\u52a0\u7684\u5f15\u7206\u70b8\u5f39\u7684\u6570\u91cf\n\n\u5148\u60f3\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u663e\u7136\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884c\u641c\u7d22\uff0c\u7b97\u51fa\u4ed6\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u6570\u91cf\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\u7684\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u76f4\u63a5\u8fdb\u884c DFS\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n^2)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\n\n\u6211\u4eec\u5c1d\u8bd5\u627e\u4e00\u4e0b\u8fd9\u4e2a\u9898\u76ee\u7279\u6b8a\u7684\u6027\u8d28\uff1a\u6bcf\u4e00\u4e2a\u70b9\u6240\u80fd\u8986\u76d6\u5230\u7684\u70b9\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u70b9\u6240\u80fd\u8fde\u5230\u7684\u70b9\u90fd\u8981\u5728\u8fd9\u4e2a\u533a\u95f4\u91cc\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u533a\u95f4\u91cc\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8981\u8fde\u4e00\u6761\u8fb9\u3002\u800c\u5b58\u8d2e\u8fd9\u4e9b\u8fb9\u662f\u5bfc\u81f4\u7a7a\u95f4\u7206\u70b8\u7684\u539f\u56e0\uff0c\u904d\u5386\u8fd9\u4e9b\u8fb9\u5219\u662f\u5bfc\u81f4\u65f6\u95f4\u7206\u70b8\u7684\u539f\u56e0\u3002\u90a3\u4e48\u8981\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u663e\u7136\u8981\u4f18\u5316\u5b58\u50a8\u8fb9\u7684\u65b9\u5f0f\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u4f18\u5316\uff1f\n\n\u5148\u6765\u770b\u56fe\n\n![11](https://cdn.luogu.com.cn/upload/image_hosting/pa4r3jsu.png)\n\n\u6211\u4eec\u73b0\u5728\u8981\u628a\u70b9 0 \u5411 1~5 \u8fd9\u4e9b\u70b9\u8fde\u8fb9\uff0c\u4e00\u5171\u8fde\u4e86 5 \u6761\u8fb9\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e9b\u70b9\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\uff1a\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/eyzbp4m6.png)\n\n\u53d1\u73b0\u53ea\u9700\u8981\u628a 0 \u70b9\u5411\u533a\u95f4 1~5 \u8fde\u4e00\u6761\u8fb9\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u5927\u5927\u51cf\u5c11\u4e86\u8fde\u8fb9\u7684\u6570\u91cf\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u7ed9n\u4e2a\u70b9\u8fde\u8fb9\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u4f18\u5316\u7684\u65b9\u5f0f\uff0c\u590d\u6742\u5ea6\u7531 $O(n^2)$ \u4f18\u5316\u5230\u4e86 $O(nlogn)$ ~~\uff08\u8bc1\u660e\u7565\uff09~~\n\n\u8fde\u5b8c\u8fb9\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u80fd\u591f\u76f8\u4e92\u5230\u8fbe\u7684\u70b9\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\uff0c\u4e8e\u662f\u76f4\u63a5\u8dd1 tarjan \u7f29\u70b9\u3002\n\n### \u539f\u601d\u8def\uff1a\n\n\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u91cc\u9762\u7684\u8282\u70b9\u6570\u91cf\uff0c\u4ee3\u8868\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\u7684\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n```cpp\nll id[N<<4],w[N<<4];\nll dfn[N<<4],low[N<<4],ind,scc[N<<4],cnt,in[N<<4],s[N<<4],top,W[N<<4];\nvoid tarjan(int x)\n{\n\tlow[x]=dfn[x]=++ind;\n\ts[top++]=x;\n\tin[x]=1;\n\tfor(int i=head[x];i;i=edg[i].nxt)\n\t{\n\t\tint v=edg[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(in[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcnt++;\n\t\twhile(s[top]!=x)\n\t\t{\n\t\t\ttop--;\n\t\t\tin[s[top]]=0;\n\t\t\tscc[s[top]]=cnt;\n\t\t\tW[cnt]+=w[s[top]];//\u8fd9\u91cc\u662f\u7edf\u8ba1\u7b54\u6848\n\t\t}\n\t}\n}\n\nvoid rebuild()\n{\n\tfor(int u=1;u<=node;u++)\n\t{\n\t\tfor(int i=head[u];i;i=edg[i].nxt)\n\t\t{\n\t\t\tint v=edg[i].to;\n\t\t\tif(scc[u]==scc[v]) continue;\n\t\t\tAdd_edge(scc[u],scc[v]);\n\t\t}\n\t}\n}\n\nqueue<int> Q;\nll f[N<<4],vis[N<<4];\n\nvoid dfs(int u)\n{\n\tif(f[u]) return;\n\tvector<int> a;\n\tf[u]=W[u];\n\tfor(int i=Head[u];i;i=Edg[i].nxt)\n\t{\n\t\tint v=Edg[i].to;\n\t\tdfs(v);a.push_back(v);\n\t}\n\tfor(int i=0;i<a.size();i++)\n\t{\n\t\tif(vis[a[i]]==u)continue;\n\t\tvis[a[i]]=u;f[u]+=f[a[i]];\n\t}\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u505a\u5176\u5b9e\u662f\u8003\u8651\u4e0d\u5468\u5168\u7684\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\u6709\u53ef\u80fd\u4f1a\u88ab\u7b97\u591a\u6b21\uff08~~\u54b1\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u539f\u6570\u636e\u53ef\u4ee5\u8fc7~~\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\uff1a\n\n```\n5\n1 1\n2 0\n3 1\n4 0\n5 5\n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/132qkj8n.png)\n\n\u7f29\u70b9\u4ee5\u540e\u662f\u8fd9\u6837\uff08\u8fde\u901a\u5757\u4ee3\u8868\u5143\u7d20\u76f4\u63a5\u4ee5\u6700\u4e0a\u9762\u7684\u4ee3\u66ff\u4e86\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wmq9xvjw.png)\n\nDFS\u7684\u8fc7\u7a0b\u5219\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ijk99yml.png)\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8282\u70b9 1-5 \u5728\u8ba1\u7b97\u7b54\u6848\u65f6\u56e0\u4e3a\u91cd\u590d\u8ba1\u7b97\u4e86\u8282\u70b9 2 \u548c\u8282\u70b9 3 \u5404\u4e00\u6b21\uff0c\u5bfc\u81f4\u6700\u540e\u7b54\u6848\u6bd4\u6b63\u786e\u7b54\u6848\u591a\u4e862\u3002\n\n\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u8fd9\u91cc\u91c7\u7528\u4e86\u8bb0\u5f55\u6bcf\u4e2a\u8fde\u901a\u5757\u5de6\u53f3\u533a\u95f4\u7684\u65b9\u6cd5\u3002\u56fe\u793a\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mtev7bi8.png)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ninline ll read()\n{\n\tll ans=0;char last=' ',c=getchar();\n\twhile(c<'0'||c>'9') last=c,c=getchar();\n\twhile(c>='0'&&c<='9') ans=(ans<<3)+(ans<<1)+c-'0',c=getchar();\n\tif(last=='-') ans=-ans;\n\treturn ans;\n}\nconst ll N=500050,mod=1e9+7,inf=0x7ffffffffffffff;\nll head[N<<4],Head[N<<4],ecnt,Ecnt;\nstruct edge{ll to,nxt;}edg[N<<5],Edg[N<<5];\ninline void add_edge(int u,int v)\n{\n\tedg[++ecnt].to=v;\n\tedg[ecnt].nxt=head[u];\n\thead[u]=ecnt;\n}\n\ninline void Add_edge(int u,int v)\n{\n\tEdg[++Ecnt].to=v;\n\tEdg[Ecnt].nxt=Head[u];\n\tHead[u]=Ecnt;\n}\n\nll n,node;\nll X[N],R[N];\nll id[N<<4];\nstruct node\n{\n\tll l, r;\n}nod[N << 4];\nll le[N << 4], ri[N << 4];\nvoid build(int cnt,int l,int r)\n{\n\tif(l==r) \n\t{\n\t\tid[l]=cnt;node=max(node,ll(cnt));\n\t\tnod[cnt].l=nod[cnt].r=l;\n\t\treturn;\n\t}\n\tnod[cnt].l=l, nod[cnt].r=r;\n\tll mid=l+r>>1;\n\tbuild(cnt<<1,l,mid);build(cnt<<1|1,mid+1,r);\n\tadd_edge(cnt,cnt<<1),add_edge(cnt,cnt<<1|1);\n}\n\nvoid add(int cnt,int l,int r,int nl,int nr,int x)\n{\n\tif(nl<=l&&nr>=r)\n\t{\n\t\tadd_edge(x,cnt);\n\t\treturn;\n\t}\n\tll mid=l+r>>1;\n\tif(nl<=mid) add(cnt<<1,l,mid,nl,nr,x);\n\tif(nr>mid) add(cnt<<1|1,mid+1,r,nl,nr,x);\n}\n\nll dfn[N<<4],low[N<<4],ind,scc[N<<4],cnt,in[N<<4],s[N<<4],top,W[N<<4];\n\nvoid tarjan(int x)\n{\n\tlow[x]=dfn[x]=++ind;\n\ts[top++]=x;\n\tin[x]=1;\n\tfor(int i=head[x];i;i=edg[i].nxt)\n\t{\n\t\tint v=edg[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(in[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcnt++;\n\t\twhile(s[top]!=x)\n\t\t{\n\t\t\ttop--;\n\t\t\tin[s[top]]=0;\n\t\t\tscc[s[top]]=cnt;\n\t\t\tle[cnt]=min(le[cnt],nod[s[top]].l); \n\t\t\tri[cnt]=max(ri[cnt],nod[s[top]].r); \n\t\t}\n\t}\n}\n\nvoid rebuild()\n{\n\tfor(int u=1;u<=node;u++)\n\t{\n\t\tfor(int i=head[u];i;i=edg[i].nxt)\n\t\t{\n\t\t\tint v=edg[i].to;\n\t\t\tif(scc[u]==scc[v]) continue;\n\t\t\tAdd_edge(scc[u],scc[v]);\n\t\t}\n\t}\n}\nqueue<int> Q;\nll vis[N<<4];\n\nvoid dfs(int u)\n{\n\tvis[u] = 1;\n\tfor(int i=Head[u];i;i=Edg[i].nxt)\n\t{\n\t\tint v=Edg[i].to;\n\t\tif(vis[v]) \n\t\t{\n\t\t\tle[u] = min(le[u], le[v]);\n\t\t\tri[u] = max(ri[u], ri[v]);\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(v);\n\t\tle[u] = min(le[u], le[v]);\n\t\tri[u] = max(ri[u], ri[v]);\n\t}\n\n}\n\nll ans=0;\n\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++) X[i]=read(),R[i]=read();\n\tmemset(le, 0x3f, sizeof(le));\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tll l,r;\n\t\tl=lower_bound(X+1,X+1+n,X[i]-R[i])-X;\n\t\tr=upper_bound(X+1,X+1+n,X[i]+R[i])-X-1;\n\t\tadd(1,1,n,l,r,id[i]);\n\t}\n\tfor(int i=1;i<=node;i++) if(!dfn[i]) tarjan(i);\n\trebuild();\n\tfor(int i=1;i<=cnt;i++) dfs(i);\n\tfor(int i=1;i<=n;i++) ans=(ans+i*(ri[scc[id[i]]]-le[scc[id[i]]]+1))%mod;\n\tprintf(\"%lld\",ans);\n}\n```\n\n",
        "postTime": 1571831114,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": " **update** \u611f\u8c22@[Nacly_Fish](https://www.luogu.org/user/115864)\u6307\u51fa\u9519\u8bef\uff0c\u5df2\u7ecf\u4fee\u590d\u3002\n\n\n\u697c\u4e0a\u7684[memset0](https://www.luogu.org/space/show?uid=53495)\u5de8\u4f6c\u63d0\u5230\u4e86\u4e00\u79cd\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f\u7ebf\u6027\u7684\u505a\u6cd5\uff0c\u770b\u89c1\u6ca1\u6709\u4eba\u53d1\u6211\u5c31\u6765\u4e86\u3002\n\n\u6bcf\u4e2a\u70b8\u5f39\u5411\u6bcf\u4e2a\u4f1a\u88ab\u81ea\u5df1\u5f15\u7206\u7684\u70b8\u5f39\u8fde\u8fb9\uff0c\u4e4b\u540e\u5f88\u5bb9\u6613\u60f3\u5230\u662ftarjan\u7f29\u70b9\u540e\u91cd\u65b0\u5efa\u56fe\uff0c\u5728\u65b0\u7684dag\u4e0a\u8dd1dp\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7b2c\u4e00\u6b65\u4f1a\u5efa\u51faO(n^2)\u6761\u8fb9\uff0c\u7a7a\u95f4\u4e0a\u9996\u5148\u65e0\u6cd5\u63a5\u53d7\uff0c\u5bf9\u8fb9\u6570\u6210\u7ebf\u6027\u5173\u7cfb\u7684tarjan\u7b97\u6cd5\u4e5f\u4f1a\u6302\u5728\u8fd9\u4e00\u6b65\u4e0a\u3002\n\n\u6b63\u89e3\u7684\u601d\u8def\u5c31\u662f\u53bb\u51cf\u5c11\u8fb9\u6570\u3002\n\n\u7b2c\u4e00\u79cd\u505a\u6cd5\u662f\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230 O(nlogn)\u7684\u4f18\u79c0\u590d\u6742\u5ea6\uff0c\u8fd9\u79cd\u505a\u6cd5\u5728\u5176\u4ed6\u9898\u89e3\u4e2d\u5df2\u7ecf\u8ba8\u8bba\u7684\u975e\u5e38\u5145\u5206\u4e86\uff0c\u518d\u6b21\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\u7b2c\u4e8c\u79cd\u505a\u6cd5\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\u7684\u601d\u8def\uff1a\u4e0d\u6dfb\u52a0\u6ca1\u6709\u5fc5\u8981\u6dfb\u52a0\u7684\u8fb9\u3002\n\n\u5728\u5206\u6790\u9898\u76ee\u65f6\uff0c\u6709\u4e00\u4e2a\u4e00\u4e2a\u542f\u53d1\u6027\u7684\u601d\u8def\uff1a\u4e00\u4e2a\u8282\u70b9u\u5de6\u8fb9(\u6216\u53f3\u8fb9)\u7684\u8282\u70b9\u80fd\u8bbf\u95ee\u5230u\u7684\u8282\u70b9\u96c6\u5408\u4e4b\u95f4\u662f\u53ef\u4ee5\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8bbf\u95ee\u5230\u7684\u3002\u56e0\u4e3a\u5982\u679c\u5de6\u8fb9\u7684\u67d0\u8282\u70b9v\u80fd\u8986\u76d6\u5230u,\u5219v\u7684\u8bbf\u95ee\u533a\u95f4\u4e5f\u4e00\u5b9a\u80fd\u8986\u76d6\u5230v\u548cu\u4e4b\u95f4\u7684\u6240\u6709\u8282\u70b9\u3002\n\n\u4e8e\u662f\uff0c\u4e00\u4e2a\u8d2a\u5fc3\u7684\u505a\u6cd5\u5c31\u51fa\u73b0\u4e86\uff1a\u6bcf\u4e2a\u7684\u5165\u8fb9\u53ea\u6709\u4e24\u4fa7\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u5982\u679c\u5b58\u5728\u6bd4\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230\u8282\u70b9u\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9v\u66f4\u9760\u8fd1\u8fb9\u7f18\u7684\u8282\u70b9w\uff0c\u5982\u679cw\u80fd\u76f4\u63a5\u8bbf\u95eeu\uff0c\u90a3\u4e48w\u4e5f\u80fd\u76f4\u63a5\u8bbf\u95eev\uff0c\u53ea\u8981v\u548cu\u4e4b\u95f4\u5b58\u5728\u8fde\u8fb9\uff0cw\u5c31\u53ef\u4ee5\u901a\u8fc7v\u8282\u70b9\u8bbf\u95ee\u5230u\u3002\u8fd9\u4e2a\u8c03\u6574\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u800c\u5bfb\u627e\u6bcf\u4e2a\u8282\u70b9\u5de6\u8fb9\uff08\u6216\u53f3\u8fb9\uff09\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u8fc7\u7a0b\u80fd\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u7ef4\u62a4\uff1a\u6309\u8282\u70b9\u7f16\u53f7\u987a\u5e8f\u538b\u5165\u6808\u4e2d\uff0c\u5f53\u6808\u9876\u5143\u7d20\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5230\u81ea\u5df1\u65f6\u4e00\u76f4\u5f39\u51fa\uff0c\u5982\u679c\u6808\u4e0d\u4e3a\u7a7a\u6808\u9876\u5c31\u5411\u81ea\u5df1\u8fde\u8fb9\uff0c\u8be5\u8282\u70b9\u518d\u538b\u5165\u6808\u4e2d\u3002\n\n\u8fd9\u6837\u505a\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f18\u5148\u8003\u8651\u66f4\u63a5\u8fd1\u81ea\u5df1\u7684\u8282\u70b9\uff0c\u5982\u679c\u6808\u9876\uff08\u5f53\u524d\u6700\u63a5\u8fd1\u81ea\u5df1\u7684\uff09\u8282\u70b9\u65e0\u6cd5\u8bbf\u95ee\u5230\u81ea\u5df1\u5c31\u4e0d\u518d\u8003\u8651\u8fd9\u4e2a\u8282\u70b9\uff08\u5f39\u51fa\uff09\uff0c\u6309\u7f16\u53f7\u987a\u5e8f\u5165\u6808\u4fdd\u8bc1\u4e86\u6808\u5185\u8282\u70b9\u7f16\u53f7\u7684\u5355\u8c03\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n\u5982\u679c\u4f60\u60f3\u8981\u8ffd\u6c42\u7ebf\u6027\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u5728\u7f29\u5b8c\u70b9\u540e\u518d\u6b21\u5efa\u56fe\u7684\u65f6\u5019\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u53bb\u91cd\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u6ca1\u6709\u89e3\u51b3\uff08\u8fd9\u4e5f\u662f\u5f88\u591a\u4eba\u7684$O(n)$\u7b97\u6cd5\u88abhack\u7684\u539f\u56e0\uff09\uff0c\u5efa\u51fa\u56fe\u4e4b\u540e\u7684\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u96c6\u5927\u5c0f\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6211\u6682\u4e14\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fd9\u9053\u9898\u800c\u8a00\u56fe\u4e0a\u5374\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u6027\u8d28\u53ef\u4ee5\u5feb\u901f\u7edf\u8ba1\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\u662f\u6bcf\u4e2a\u70b9\u80fd\u591f\u70b8\u5230\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u5728DAG\u4e0a\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8f6c\u79fb\u4e0d\u76f4\u63a5\u52a0\u4e0a\u70b9\u6570\u800c\u662f\u53bb\u66f4\u65b0\u80fd\u5230\u8fbe\u7684\u70b9\u96c6\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u8fd9\u6837\u7684\u6b63\u786e\u6027\u5c31\u6709\u4fdd\u8bc1\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define rnt re int\n#define re register\n#define top sta[tp]\n#define LL inline ll\n#define I inline int\n#define V inline void\n#define B inline bool\n#define ll long long int\n#define isnum(ch) ('0'<=ch&&ch<='9')\n#define FOR(i,a,b) for(rnt i=a;i<=b;i++)\n#define ROF(i,a,b) for(rnt i=a;i>=b;i--)\n#define rep(u) for(rnt _=h[u],v;v=e[_].t,_;_=e[_].n)\n#define REP(u) for(rnt _=H[u],v;v=E[_].t,_;_=E[_].n)\n#define gc (_op==_ed&&(_ed=(_op=_buf)+fread(_buf,1,100000,stdin),_op==_ed)?EOF:*_op++)\nchar _buf[100000],*_op(_buf),*_ed(_buf);\nLL getint(){\n\tstatic const int _flag[2]={1,-1};\n\tre ll _s=0,_f=1;re char _ch=gc;\n\twhile(!isnum(_ch))_f=_flag[_ch=='-'],_ch=gc;\n\twhile(isnum(_ch))_s=_s*10+_ch-48,_ch=gc;\n\treturn _s*_f;\n}\nconst int N=5e5+1,mod=1e9+7;\nV check(int&x){x-=mod,x+=x>>31&mod;}\nint n,m,tot,TOT,qwq,tp,ans;\nint sta[N],dfn[N],low[N],co[N],ins[N],h[N],H[N],dp[N],L[N],R[N];\nll a[N],r[N];\nstruct edge{int t,n;}e[N<<1],E[N<<1];\nV input(){n=getint();FOR(i,1,n)a[i]=getint(),r[i]=getint();}\nV add_edge(rnt x,rnt y){e[++tot]=(edge){y,h[x]},h[x]=tot;}\nV ADD_EDGE(rnt x,rnt y){E[++TOT]=(edge){y,H[x]},H[x]=TOT;}\nV init(){\n\tFOR(i,1,n){\n\t\twhile(tp&&a[top]+r[top]<a[i])tp--;\n\t\tif(tp)add_edge(sta[tp],i);\n\t\twhile(tp&&a[top]+r[top]<=a[i]+r[i])tp--;\n\t\tsta[++tp]=i;\n\t}\n\ttp=0;\n\tROF(i,n,1){\n\t\twhile(tp&&a[top]-r[top]>a[i])tp--;\n\t\tif(tp)add_edge(top,i);\n\t\twhile(tp&&a[top]-r[top]>=a[i]-r[i])tp--;\n\t\tsta[++tp]=i;\n\t}\n}\nI min(const int&x,const int&y){return x<y?x:y;}\nI max(const int&x,const int&y){return x>y?x:y;}\nV tarjan(rnt u){\n\tsta[++tp]=u,dfn[u]=low[u]=++tot,ins[u]=1;\n\trep(u)\n\t\tif(!dfn[v])tarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if(ins[v])low[u]=min(low[u],dfn[v]);\n\tif(low[u]==dfn[u]){\n\t\tdp[co[u]=++qwq]=1,L[qwq]=R[qwq]=u;\n\t\twhile(top^u){\n\t\t\tL[qwq]=min(L[qwq],top),R[qwq]=max(R[qwq],top);\n\t\t\tins[top]=0,co[top]=qwq,dp[qwq]++,tp--;\n\t\t}\n\t\ttp--,ins[u]=0;\n\t}\n}\nstruct bian{\n\tint x,y;\n\tB operator==(const bian&u)const{return x==u.x&&y==u.y;}\n\tB operator<(const bian&u)const{return x==u.x?y<u.y:x<u.x;}\n}t[N<<1];\nV dfs(rnt u){\n\tif(dfn[u])return;\n\tdfn[u]=1;\n\tREP(u)dfs(v),L[u]=min(L[u],L[v]),R[u]=max(R[u],R[v]);\n}\nV work(){\n\ttp=tot=0;FOR(i,1,n)if(!dfn[i])tarjan(i);\n\ttot=0;FOR(i,1,qwq)dfn[i]=0;\n\tFOR(i,1,n)rep(i)if(co[v]^co[i])t[++tot]=(bian){co[i],co[v]};\n\tsort(t+1,t+1+tot),tot=unique(t+1,t+1+tot)-t-1;\n\tFOR(i,1,tot)ADD_EDGE(t[i].x,t[i].y);\n\tFOR(i,1,n)dfs(co[i]),check(ans+=1ll*i*(R[co[i]]-L[co[i]]+1)%mod);\n\tcout<<ans;\n}\nint main(){\n\tinput();\n\tinit();\n\twork();\n\treturn 0;\n}\n```\n\n\u9644\uff1a\n\n\u4e00\u7ec4hack\u6570\u636e\n\n```plain\n5\n1 1\n2 0\n3 1\n4 0\n5 5\n```\n\n\u6b63\u786e\u7b54\u6848\u4e3a42\uff0c\u800c\u67d0\u4e9b\u9519\u8bef\u7684\u7b97\u6cd5\u4f1a\u5f97\u523052\u7684\u7ed3\u679c\uff085\u80fd\u591f\u70b8\u5230\u7684\u70b9\u96c6\u5927\u5c0f\u4f1a\u5f97\u5230\u53ef\u7b11\u76847\uff09\u3002\n",
        "postTime": 1548256108,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "P5025\u9898\u89e3"
    },
    {
        "content": "~~\u554a\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8~\u6211\u5c31\u8fd9\u4e48\u5361\u8fc7\u53bb\u4e86\u554a\u54c8\u54c8\u54c8\u54c8\u3002\u3002\u3002\u3002~~\n\n#### \uff08\u6ce8\uff1a\u672c\u9898\u89e3\u975e\u6b63\u89e3\uff0c\u662f\u5361\u8fc7\u53bb\u7684\uff0c\u53ea\u53ef\u7528\u4e8e\u62d3\u5c55\u8003\u573a\u4e0a\u5f97\u9ad8\u5206\u7684\u65b9\u6cd5\uff0c\u771f\u6b63\u638c\u63e1\u672c\u9898\u8fd8\u9700\u770b\u522b\u7684\u9898\u89e3\u3002\u672c\u9898\u89e3\u53ea\u505a\u8111\u6d1e\u7684\u62d3\u5c55\u3002\uff09\n\n\u54b3\u54b3\u3002\u6b63\u7ecf\u4e00\u70b9\u3002\n\n\u55ef\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9898\u7684\u6b63\u89e3\u597d\u6076\u5fc3\uff0ctarjan\u554a\uff0c\u7ebf\u6bb5\u6811\u554a\uff0c\u5efa\u56fe\u554a\uff0c~~\u867d\u7136\u90fd\u662f\u4f1a\u7684\u77e5\u8bc6\u70b9\uff0c\u4f46\u662f~~\u7ec4\u5408\u5230\u4e00\u8d77\u5c31\u5f88\u590d\u6742\u4e86\uff0c\u5728\u8003\u573a\u4e0a\u6ca1\u505a\u8fc7\u539f\u9898\u7684\u8bdd\uff0c\u601d\u7ef4\u96be\u5ea6\u548c\u4ee3\u7801\u96be\u5ea6\u90fd\u5341\u5206\u7684\u5927\uff0c\u6700\u540e\u641e\u51fa\u6765\u4e0d\u5982\u66b4\u529b\u5206\u9ad8\u5c31\u5f88\u5c34\u5c2c\u4e86\u3002\n\n**~~\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u6253\u66b4\u529b\u5427\u3002~~**\n\n\u66b4\u529b\u8fd8\u662f\u5f88\u597d\u5199\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u53bbdfs\u627e\u5230\u6240\u6709\u53ef\u4ee5\u70b8\u7684\u70b9\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u50cf\u6211\u8fd9\u4e2a\u4e00\u6837\uff0c\u53bb\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5411\u5de6\u5411\u53f3\u62d3\u5c55\uff0c\u540c\u65f6\u66f4\u65b0\u5f53\u524d\u771f\u6b63\u53ef\u7528\u7684$R$\u534a\u5f84\uff0c$code$:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=1000000007;\nconst int maxn=500010;\nint n;\nlong long x[maxn],r[maxn];\nint vis[maxn],R[maxn],L[maxn];\nvoid find(int k,long long x1,long long r1,long long l1){\n\tint i=k+1,j=k-1;\n\twhile(i<=n || j>=1){\n\t\tif(x1+r1>=x[i] && i!=n+1){\n\t\t\tr1=max(r1,r[i]+x[i]-x1);\n\t\t\tR[k]=i;\n\t\t\tl1=max(l1,r[i]-x[i]+x1);\n\t\t}\n\t\tif(x1-l1<=x[j] && j!=0){\n\t\t\tl1=max(l1,r[j]+x1-x[j]);\n\t\t\tL[k]=j;\n\t\t\tr1=max(r1,r[j]-x1+x[j]);\n\t\t}\n\t\tif(i<n+1) i++;\n\t\tif(j>0) j--;\n\t}\n\tif(!R[k]) R[k]=k;\n\tif(!L[k]) L[k]=k;\t\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld %lld\",&x[i],&r[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfind(i,x[i],r[i],r[i]);\n\t}\n\tlong long ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\t(ans+=1ll*i*(R[i]-L[i]+1))%=mod;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n### $55pts$ $get!$\n\n\u6765\u505a\u8fd9\u9053\u9898\u7684\u4eba\u53ef\u80fd\u90fd\u89c1\u8fc7\u6709\u4e2a$O(n)$\u7684\u9519\u89e3\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4f60\u70b8\u5230\u7684\u5de6\u8fb9\u7684\u70b9\u53ef\u80fd\u70b8\u7684\u6bd4\u4f60\u8fd8\u53f3\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u8fb9\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\n\n\u800c\u6b64\u7b97\u6cd5\u901a\u8fc7\u626b\u4e24\u904d\u7684\u65b9\u5f0f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\u904d\u7ef4\u62a4\u4e86\u5411\u5de6\u62d3\u5c55\u5bf9\u5411\u53f3\u62d3\u5c55\u7684\u8d21\u732e\uff0c\u7b2c\u4e8c\u904d\u7b97\u51fa\u5411\u53f3\u7684\u6700\u8fdc\u503c\u5e76\u66f4\u65b0\u53f3\u5bf9\u5de6\u7684\u5f71\u54cd\u3002\uff08\u5bf9\u4e8e\u4e0a\u9762\u7684\u66b4\u529b\uff0c\u5c31\u662f\u628a\u90a3\u4e2a\u66b4\u529b\u7684\u6bcf\u6b21\u7528\u4e00\u6b21O(n)\u6765\u7b97\uff0c\u53ef\u60dc\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u8ba1\u7b97\u7684\u65f6\u5019\u53ea\u7528\u5230\u62d3\u5c55\u6700\u8fdc\u7684\u70b9\uff0c\u6240\u4ee5\uff0c\u66f4\u65b0\u51fa\u7684$R$\u534a\u5f84\u53ef\u80fd\u662f\u9519\u7684\u3002\uff09\n\n\u5bf9\u4e8e\u590d\u6742\u5ea6\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5728\u6bcf\u4e2awhile\u5faa\u73af\u4e2d\u6700\u591a\u5faa\u73af2\u6b21\uff0c\u7b2c\u4e00\u6b21\u662f\u7528\u5230\u81ea\u5df1\u539f\u6709\u7684\u6570\u636e\uff0c\u7b2c\u4e8c\u6b21\u662f\u8ddf\u7740\u62d3\u5c55\u51fa\u53bb\u7684\u70b9\u66f4\u65b0\u4fe1\u606f\uff0c\u5bb9\u6613\u53d1\u73b0\u66f4\u65b0\u51fa\u53bb\u540e\u5df2\u7ecf\u4e3a\u6700\u4f18\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u662f$O(n)$.\n\n$code:$\n```\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n,x[500005],R[500005],l[500005],r[500005],A;\nmain()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lld%lld\",&x[i],&R[i]),l[i]=r[i]=i;\n    for(int i=1;i<=n;i++) \n        while(l[i]>1&&x[i]-x[l[i]-1]<=R[i])\n            l[i]=l[l[i]-1],R[i]=max(R[i],R[l[i]]-(x[i]-x[l[i]]));\n    for(int i=n;i>=1;i--) \n        while(r[i]<n&&x[r[i]+1]-x[i]<=R[i])\n            r[i]=r[r[i]+1],l[i]=min(l[i],l[r[i]]);\n    for(int i=1;i<=n;i++) A=(A+i*(r[i]-l[i]+1))%1000000007;\n    printf(\"%lld\",A);\n}   \n```\n~~\uff08\u4ec0\u4e48\u6bd2\u7624\u4ee3\u7801\uff09~~\n\n\u4f46\u662f\uff0c\u7531\u4e8e\u662f\u968f\u673a\u6570\u636e\uff0c\u6c11\u95f4\u6570\u636e\u5f3a\u5ea6\u5b8c\u5168\u4e0d\u80fd\u591f\u5f3a\uff0cbzoj\u90fd\u53ef\u4ee5AC\uff0c\u800cluogu\u52a0\u4e86\u4e00\u7ec4hack\u6570\u636e\uff0c\u53ea\u670990\u3002\u5373\u4f7f\u662f\u5b98\u65b9\u6570\u636e\uff0c\u4e5f\u636e\u8bf4\u53ef\u4ee5\u653e\u8fc7\u53bb\u5f88\u591a\u3002\n\n\u6240\u4ee5\u8fd9\u4e48\u4f18\u79c0\u7684\u5927\u6982\u7387\u6b63\u786e\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u5982\u4f55\u8ba9\u5b83\u53d1\u6325\u6700\u5927\u7684\u4f5c\u7528\uff0c\u5728\u6211\u4eec\u5199\u4e0d\u51fa\u6b63\u89e3\u7684\u65f6\u5019\u5e2e\u52a9\u6211\u4eec\u5c3d\u53ef\u80fd\u591a\u7684\u62ff\u5206\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u51fa\u9898\u4eba\u9020\u7684\u4e13\u95e8\u5361\u7684\u6570\u636e\uff0c\u6211\u4eec\u8dd1\u66b4\u529b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u800c\u90a3\u4e9b\u5927\u6570\u636e\u968f\u673a\u751f\u6210\uff0c\u4e0d\u597d\u610f\u601d\u5361\u4e0d\u4f4f\u3002\n\n#### $code:$\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=500010;\nlong long x[500005],R[500005],l[500005],r[500005],A;\nconst int mod=1000000007;\nint n;\nlong long ans=0;\nint vis[maxn],R1[maxn],L[maxn];\nvoid find(int k,long long x1,long long r1,long long l1){\n\tint i=k+1,j=k-1;\n\twhile(i<=n || j>=1){\n\t\tif(x1+r1>=x[i] && i!=n+1){\n\t\t\tr1=max(r1,R[i]+x[i]-x1);\n\t\t\tR1[k]=i;\n\t\t\tl1=max(l1,R[i]-x[i]+x1);\n\t\t}\n\t\tif(x1-l1<=x[j] && j!=0){\n\t\t\tl1=max(l1,R[j]+x1-x[j]);\n\t\t\tL[k]=j;\n\t\t\tr1=max(r1,R[j]-x1+x[j]);\n\t\t}\n\t\tif(i<n+1) i++;\n\t\tif(j>0) j--;\n\t}\n\tif(!R1[k]) R1[k]=k;\n\tif(!L[k]) L[k]=k;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lld%lld\",&x[i],&R[i]),l[i]=r[i]=i;\n    if(n<10000){\n    \tfor(int i=1;i<=n;i++){\n\t\t\tfind(i,x[i],R[i],R[i]);\n\t\t}\n\t\tlong long ans=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\t(ans+=1ll*i*(R1[i]-L[i]+1))%=mod;\n\t\t}\n\t\tcout<<ans;\n\t\treturn 0;\n\t}\n    for(int i=1;i<=n;i++) \n        while(l[i]>1&&x[i]-x[l[i]-1]<=R[i])\n            l[i]=l[l[i]-1],R[i]=max(R[i],R[l[i]]-(x[i]-x[l[i]]));\n    for(int i=n;i>=1;i--) \n        while(r[i]<n&&x[r[i]+1]-x[i]<=R[i])\n            r[i]=r[r[i]+1],l[i]=min(l[i],l[r[i]]);\n    for(int i=1;i<=n;i++) A=(A+i*(r[i]-l[i]+1))%1000000007;\n    printf(\"%lld\",A);\n    return 0;\n}   \n```\n\n\u4f46\u662f\u7406\u8bba\u4e0a\u8bb2\uff0c\u51fa\u9898\u4eba\u5b8c\u5168\u4e5f\u53ef\u4ee5\u9020\u51fa\u5927\u6570\u636e\u800c\u53ef\u4ee5\u5361\u6389\u7684\u3002\u6240\u4ee5\u672c\u9898\u89e3\u53ea\u505a\u4e00\u4e2a\u5728\u8003\u573a\u4e0a\u5bf9\u6b63\u89e3\u83ab\u5f97\u529e\u6cd5\u7684\u65f6\u5019\uff0c\u9a97\u5206\u7684\u529e\u6cd5\u3002~~\uff08\u4e0d\u5c0f\u5fc3AC\u4e86\u600e\u4e48\u529e\uff09~~",
        "postTime": 1546942967,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21AC\u9ed1\u9898\uff0c\u6765\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u7eaa\u5ff5\u4e00\u4e0b\n\n\u5c31\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\n\n1.\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff08\u5c31\u662f\u771f\u6b63\u7684\u70b8\u5f39\uff09\u5728\u7ebf\u6bb5\u6811\u4e0a\u53ef\u4ee5\u70b8\u5230\u8303\u56f4\u7684\u533a\u95f4\uff08\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\uff09\u8fde\u4e00\u6761\u8fb9\u3002\n\n2.tarjan\u7f29\u70b9\uff0c\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6743\u503c\u8bb0\u4e3a\u5f53\u524d\u5f3a\u8054\u901a\u5206\u91cf\u5305\u542b\u7684\u70b8\u5f39\u6570\u3002\n\n3.\u8fde\u8fb9\uff0c\u6ce8\u610f\u8fb9\u8981\u89c1\u53cd\u5411\uff08\u4e3a\u4e86topsort\uff09\uff0c\u5e76\u4e14\u4e0d\u80fd\u6709\u91cd\u8fb9\u3002\n\n4.topsort\uff0c\u5c06\u81ea\u5df1\u7684\u6743\u503c\u4f20\u7ed9\u81ea\u5df1\u7684\u540e\u7ee7\n\n5.\u8f93\u51fa\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6nlogn\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6nlogn\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\n#define mid ((l+r)>>1)\n#define lson k<<1,l,mid\n#define rson k<<1|1,mid+1,r\n\ninline int read(){\n\tint x=0,f=1;\n\tchar p=getchar();\n\twhile(!isdigit(p)){\n\t\tif(p=='-') f=-1;\n\t\tp=getchar();\n\t}\n\twhile(isdigit(p)) x=(x<<3)+(x<<1)+p-48,p=getchar();\n\treturn x*f;\n}\n\nlong long ans;\n\nconst int maxn=5e5+5,mod=1e9+7;\n\nint s[maxn<<2],low[maxn<<2],dfn[maxn<<2],n,b[maxn],a[maxn],tot;\nint x[maxn],tree[maxn<<2],headedge[maxn<<2],veredge[maxn<<2];\nint head[maxn<<2],nxt[maxn*25],ver[maxn*25],scc,col[maxn<<2];\nint v[maxn<<2],id[maxn],cnt,top,nxtedge[maxn<<2],cntedge;\nint w[maxn<<2],nod,rd[maxn<<2],f[maxn<<2];\nmap<pair<int,int>,int> Map;\n\ninline void add(int x,int y){\n\tnxt[++cnt]=head[x];\n\thead[x]=cnt;\n\tver[cnt]=y;\n}\n\ninline void addedge(int x,int y){\n\tnxtedge[++cntedge]=headedge[x];\n\theadedge[x]=cntedge;\n\tveredge[cntedge]=y;\n}\n\ninline void build(int k,int l,int r){\n\tif(l==r){\n\t\tnod=max(nod,k);\n\t\tid[l]=k;\n\t\treturn;\n\t}\n\tbuild(lson);\n\tbuild(rson);\n\tadd(k,k<<1);\n\tadd(k,k<<1|1);\n}\n\ninline void connect(int k,int l,int r,int L,int R,int pos){\n\tif(L<=l&&r<=R){\n\t\tif(id[pos]==k) return;\n\t\tadd(id[pos],k);\n\t\treturn;\n\t}\n\tif(L<=mid) connect(lson,L,R,pos);\n\tif(R>mid) connect(rson,L,R,pos);\n\treturn;\n}\n\ninline void tarjan(int x){\n\tdfn[x]=low[x]=++tot;\n\ts[++top]=x;\n\tv[x]=1;\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(v[y]) low[x]=min(low[x],dfn[y]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tint tmp;\n\t\tscc++;\n\t\tdo{\n\t\t\ttmp=s[top--];\n\t\t\tcol[tmp]=scc;\n\t\t\tv[tmp]=0;\n\t\t\t\n\t\t}while(x!=tmp);\n\t}\n}\n\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++) b[i]=a[i]=read(),x[i]=read();\n\t//\u7ebf\u6bb5\u6811 \n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint l=lower_bound(b+1,b+1+n,a[i]-x[i])-b;\n\t\tint r=(upper_bound(b+1,b+1+n,a[i]+x[i])-b)-1;\n\t\tconnect(1,1,n,l,r,i);\n\t}\n\t//tarjan \n\tfor(int i=1;i<=nod;i++) if(!dfn[i]) tarjan(i);\n\tfor(int i=1;i<=n;i++) w[col[id[i]]]++;\n\t//\u8fde\u8fb9 \n\tfor(int x=1;x<=nod;x++){\n\t\tfor(int i=head[x];i;i=nxt[i]){\n\t\t\tint y=ver[i];\n\t\t\tif(col[x]==col[y]) continue;\n\t\t\tpair<int,int> t;\n\t\t\tt.first=col[y],t.second=col[x];\n\t\t\tif(Map[t]==1) continue;\n\t\t\taddedge(col[y],col[x]);\n\t\t\tMap[t]=1;\n\t\t\t++rd[col[x]];\n\t\t}\n\t}\n\t//topsort \n\tqueue<int> q;\n\tfor(int i=1;i<=scc;i++) if(rd[i]==0) q.push(i);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tf[x]+=w[x];\n\t\tfor(int i=headedge[x];i;i=nxtedge[i]){\n\t\t\tint y=veredge[i];\n\t\t\tf[y]+=f[x];\n\t\t\trd[y]--;\n\t\t\tif(rd[y]==0) q.push(y);\n\t\t}\n\t}\n\t//\u7edf\u8ba1\u7b54\u6848 \n\tfor(int i=1;i<=n;i++) ans=(ans+i*f[col[id[i]]]%mod)%mod;\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n6.\u7b49\u5f85AC\u3002\n\n\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9ed1\u9898\u9898\u89e3\uff0c\u6c42\u7ba1\u7406\u653e\u8fc7\uff0c\u8c22\u8c22\u3002",
        "postTime": 1566998158,
        "uid": 118918,
        "name": "whyl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u539f\u9898\u94fe\u63a5[\u3010[SNOI2017]\u70b8\u5f39\u3011](https://www.luogu.org/problem/P5025)\n\n\u9996\u5148\uff0c\u672c\u9898\u89e3\u662f\u975e\u6b63\u89e3\uff0c\u53ea\u662f\u4e00\u79cd\u66b4\u529b\u7684\u4f18\u5316\n\n\u6ca1\u6709\u7528\u5230\u4ec0\u4e48\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\uff0c\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u521a\u5165\u95e8\u4e00\u70b9\u7684\u77e5\u8bc6\n\n\u524d\u7f6e\u77e5\u8bc6\n\n\t\tSTL\u4e8c\u5206\uff0clower_bound \u4e0e upper_bound\n\n\t\tST \u8868\uff0c\u6216\u8005\u7ebf\u6bb5\u6811\uff0c\u53cd\u6b63\u662f\u652f\u6301\u67e5\u8be2\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\u7684\u6570\u636e\u7ed3\u6784\n\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\uff1a\u7206\u70b8\u7684\u8303\u56f4\n\n\u53ef\u4ee5\u5728 n \u65b9\u7684\u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u6765\n\n\u4f46\u4e0d\u53ef\u53d6\uff0c\u8003\u8651\u4f18\u5316\uff0c\u4e8c\u5206\uff0c\u662f\u4e86\uff0c\u4e8c\u5206\u5c31\u597d\u4e86\n\n\uff08\u5584\u7528 STL \u662f\u4e00\u79cd\u6280\u80fd\uff09\n\n\u7ed9\u51fa\u6211\u9884\u5904\u7406\u8303\u56f4\u7684\u4ee3\u7801\n\n```cpp\n\tfor (register int i = 1; i <= n; i ++)\n\t\tll[i] = lower_bound (x + 1, x + i, x[i] - r[i]) - x;\n\tfor (register int i = 1; i <= n; i ++)\n\t\trr[i] = upper_bound (x + i + 1, x + n + 1, x[i] + r[i]) - x - 1;\n```\n\n\u7136\u540e\uff0c\u66b4\u529b\u641c\u7d20\u7684\u601d\u8def\u975e\u5e38\u597d\u60f3\n\n\t\t\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5728\u5b83\u80fd\u70b8\u5230\u533a\u57df\u5185\u66b4\u529b\u641c\u7d22\u4e00\u904d\uff0c\u9012\u5f52\n\n\t\t\u7136\u540e\uff0c\u5f53\u5b83\u4e0d\u80fd\u518d\u4f7f\u5f53\u524d\u533a\u57df\u6269\u5927\u65f6\uff0c\u7ed3\u675f\u641c\u7d22\n\n\u8003\u8651\u4f18\u5316\n\n\u6211\u4eec\u7684\u66b4\u529b\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u54ea\u91cc\u5462\uff1f\n\n\t\t\u6bcf\u56de\u627e\u5230\u5f53\u524d\u533a\u57df\u4e2d\u6240\u6709\u70b9\u7684\u80fd\u5230\u8fbe\u7684\u6700\u9760\u5de6\u548c\u6700\u9760\u53f3\u7684\u4e24\u4e2a\u4f4d\u7f6e\n\n\t\t\u5982\u679c\u66b4\u529b\u626b\u4e00\u904d\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u9000\u5316\u5230 n \u65b9\u4e86\uff0c\n\n\t\t\u663e\u7136\u4e0d\u53ef\u53d6\u3002\n\n\u5728\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u4e3b\u7a0b\u5e8f\n\n```cpp\nfor (register int i = 1; i <= n; i ++) {\n        xx = yy = ansl = ansr = i;\n        t.query (ll[i], rr[i]);\n        while (xx != ansl && yy != ansr) {\n            xx = ansl, yy = ansr;\n            t.query (ansl, ansr);//\u5373\u7206\u641c\n        }\n        ans = (ans + i * (ansr - ansl + 1) % mod) % mod;\n    }\n    printf (\"%lld\\n\", ans % mod);\n```\n\n\n\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\u518d\u8bfb\u4e00\u904d\n\n\t\t\u201c\u6bcf\u56de\u627e\u5230\u5f53\u524d\u533a\u57df\u4e2d\u6240\u6709\u70b9\u7684\u80fd\u5230\u8fbe\u7684\u6700\u9760\u5de6\u548c\u6700\u9760\u53f3\u7684\u4e24\u4e2a\u4f4d\u7f6e\u201d\n\n\t\t\u8fd9\u662f\u4ec0\u4e48\uff1f\uff01\uff01\n\n\t\t\u533a\u95f4\u67e5\u8be2\u6700\u5927\u6700\u5c0f\u503c\uff0c\u65e0\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u677f\u5b50\u554a\n\n\t\t\u5f53\u7136\u8fd9\u9700\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u9760\u5de6\u548c\u6700\u9760\u53f3\u7684\u70b9\u3002\n\n\u7136\u540e\u8fd9\u6837\u4f18\u5316\u540e\uff0c\u76f4\u63a5\u5c31 AC \u4e86\n\n\u7ed9\u51fa\u6211\u7684\u9884\u5904\u7406\u4ee3\u7801\n\n```cpp\nn = read();\n    for (register int i = 1; i <= n; i ++)\n        x[i] = read(), r[i] = read();\n    for (register int i = 1; i <= n; i ++)\n        ll[i] = lower_bound (x + 1, x + i, x[i] - r[i]) - x;\n    for (register int i = 1; i <= n; i ++)\n        rr[i] = upper_bound (x + i + 1, x + n + 1, x[i] + r[i]) - x - 1;\n    t.init ();\n```\n\n\u7ebf\u6bb5\u6811\u4ee3\u7801\n\n```cpp\nstruct djj_lxy_Tree {\n    struct node {\n        int l, r;\n    } z[maxn << 2];\n\n    void build (int l, int r, int x) {\n        if (l == r) {\n            z[x].l = ll[l];\n            z[x].r = rr[l];\n            return ;\n        }\n        int mid = l + r >> 1;\n        build (l, mid, x << 1);\n        build (mid + 1, r, x << 1 | 1);\n        z[x].l = min (z[x << 1].l, z[x << 1 | 1].l);\n        z[x].r = max (z[x << 1].r, z[x << 1 | 1].r);\n    }\n\n    void query (int l, int r, int x, int nowl, int nowr) {\n        if (nowl <= l && r <= nowr) {\n            ansl = min (z[x].l, ansl);\n            ansr = max (z[x].r, ansr);\n            return ;\n        }\n        int mid = l + r >> 1;\n        if (nowl <= mid)\n            query (l, mid, x << 1, nowl, nowr);\n        if (mid < nowr)\n            query (mid + 1, r, x << 1 | 1, nowl, nowr);\n        return ;\n    }\n} t;\n```\n[AC\u8bb0\u5f55](https://www.luogu.org/record/24031602)\n\n\u8dd1\u7684\u633a\u6162\u7684\uff0c\u5982\u679c\u4f60\u53ea\u8ffd\u6c42\u8fc7\u6389\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u8d70\u5f00\u4e86\n\n\u4ed4\u7ec6\u5730\u518d\u60f3\u4e00\u60f3\uff0c\u8fd8\u80fd\u600e\u6837\n\n\t\t\u7ebf\u6bb5\u6811\u67e5\u8be2\u4e00\u6b21 O\uff08log\uff08n\uff09\uff09\n\n\t\t\u65e0\u4fee\u6539\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u7528 ST \u8868\u554a\n\n\t\t\u6539\u4e86\u4e4b\u540e\uff0c\u6211\u53c8\u8bd5\u4e86\u8bd5\n\n\t\t\u5728\u8fd9\u91cc\u4e5f\u7b97\u662f\u591a\u63d0\u4f9b\u4e00\u79cd\u601d\u8def\n\n\u7ed9\u51fa\u6211\u7684 ST \u8868\u4ee3\u7801\n\n```cpp\nstruct djj_lxy_ST {\n    int djj[maxn][19], lxy[maxn][19];\n\n    void init () {\n        for (register int i = 1; i <= n; i ++)\n            djj[i][0] = ll[i], lxy[i][0] = rr[i];\n        for (register int j = 1; j <= 19; j ++)\n            for (register int i = 1; i + (1 << j) - 1 <= n; i ++)\n                djj[i][j] = min (djj[i][j - 1], djj[i + (1 << (j - 1))][j - 1]);\n        for (register int j = 1; j <= 19; j ++)\n            for (register int i = 1; i + (1 << j) - 1 <= n; i ++)\n                lxy[i][j] = max (lxy[i][j - 1], lxy[i + (1 << (j - 1))][j - 1]);\n    }\n\n    void query (int l, int r) {\n        int k = log2 (r - l + 1);\n        ansl = min (ansl, min (djj[l][k], djj[r - (1 << k) + 1][k]));\n        ansr = max (ansr, max (lxy[l][k], lxy[r - (1 << k) + 1][k]));\n    }\n} t;\n```\n\n[AC\u8bb0\u5f55](https://www.luogu.org/record/24031910)\n\n\u6162\u4e86\u4e00\u500d\uff0c\u771f\u7684\n\n\t\t\u7136\u540e\u6211\u61f5\u4e86\uff0c\u4e0d\u77e5\u4e3a\u4f55\uff0c\u4f46\u6162\u4e86\u662f\u4e0d\u4e89\u7684\u4e8b\u5b9e\n\n\t\t\u6211\u60f3\u4e86\u60f3\uff0c\u53ef\u80fd\u662f log2 \u7684\u7384\u5b66\u590d\u6742\u5ea6\n\n\t\t\u4e8e\u662f\u6211\u52a0\u4e0a log2 \u7684\u9012\u63a8\n\n\u4ee3\u7801\n\n```cpp\n\tfor (register int i = 1; i <= 19; i ++)\n\t\tlogg[1 << i] = 1;\n\tfor (register int i = 1; i <= n; i ++)\n\t\tlogg[i] += logg[i - 1];\n```\n\n\u5b83\u8fd8\u6162\uff0c[AC\u8bb0\u5f55](https://www.luogu.org/record/24031992)\n\n\u6ca1\u6cd5\u513f\u4e86 QwQ~~\n\n\u90a3\u4e48\u8fd9\u4e2a\u5c31\u7559\u4f5c\u4e00\u4e2a\u7f8e\u4e3d\u7684\u95ee\u53f7\u5427\uff0c\u5e0c\u671b\u81ea\u5df1\u5728\u4ee5\u540e\u80fd\u53d8\u5f97\u66f4\u5f3a\uff0c\u7136\u540e\u56de\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u90a3\u672c\u9898\u89e3\u5c31\u8fd9\u6837\u5427\uff0c\u5b8c\u7ed3\u6492\u82b1~~\n\n\uff08\u54e6\u5bf9\u4e86\uff0c\u8bb0\u5f97\u5f00 long long \uff09\n\n\u8ddd\u79bb\u65b0 Noip \u8fd8\u6709\u4e0d\u5230 2 \u4e2a\u6708\uff0c\u795d\u5927\u5bb6 rp ++\n\n\u4e5f\u5e0c\u671b\u81ea\u5df1\u53ef\u4ee5\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c\u52a0\u6cb9\uff01\uff01\n\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u5341\u6708\u4e8c\u65e5\u66f4\u65b0\uff0c\u52a0\u5165\u4e86\u6811\u72b6\u6570\u7ec4\u4f18\u5316 log \u7684\u5c1d\u8bd5\n\n\u6ca1\u600e\u4e48\u6253\u7b97\u586b\u8fd9\u4e2a\u5751\uff0c\u8349\u8349\u7684\u7c98\u4e0a\u4ee3\u7801\u4e86\u4e8b\n\n\u65f6\u95f4 3.99 s\uff0c\u6ca1\u5f00 O2\uff0c\u4f46\u8fd8\u662f\u597d\u6162~~\n\n```cpp\nstruct djj_lxy_Log {\n\tint log_[maxn];\n\n\tvoid add (int i, int x) {\n\t\tfor (; i <= n; i += i & -i)\n\t\t\tlog_[i] += x;\n\t}\n\n\tint ask (int i) {\n\t\tint ans = 0;\n\t\tfor (; i; i -= i & -i)\n\t\t\tans += log_[i];\n\t\treturn ans;\n\t}\n\n\tvoid init () {\n\t\tfor (register int i = 1; i <= 19; i ++)\n\t\t\tadd (1 << i, 1);\n\t}\n} log_;\n```\n\n\u5e0c\u671b\u5728\u63a5\u4e0b\u6765\u7684\u65e5\u5b50\u91cc\uff0c\u81ea\u5df1\u80fd\u591f\u7ee7\u7eed\u52aa\u529b\uff0c\u52a0\u6cb9\u54e6",
        "postTime": 1568700971,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u8fd9\u7edd\u5bf9\u4e0d\u662f\u9ed1\u9898\uff01\uff01\uff01\u8fd9\u4e00\u5b9a\u662f\u6076\u610f\u8bc4\u5206(\u867d\u7136\u5927\u591a\u6570\u4eba\u5199\u7684\u90fd\u662f\u957f\u7684\u8981\u6b7b\u7684\u7ebf\u6bb5\u6811\u5efa\u56fe+tarjan)\n\n\u8fd9\u53ea\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\uff01\uff01\uff01( \u867d\u7136\u6bd4\u5927\u90e8\u5206\u4eba\u90fd\u6162\uff0c\u5176\u4ed6\u9898\u89e3\u90fd\u662f$O(n)$\u6216\u8005$O(n \\ log \\ n)$\uff0c\u6211\u7684\u662f\u7406\u60f3\u60c5\u51b5$O(n \\ log^2 \\ n)$\uff0c\u4f46\u5176\u5b9e\u4f1a\u88ab\u90a3\u79cd\u6bcf\u9897\u70b8\u5f39\u53ea\u80fd\u70b8\u5230\u65c1\u8fb9\u90a3\u4e00\u9897\u7684\u6570\u636e\u5361\u6210$O(n^2 \\ log \\ n)$\uff0c~~\u53ef\u89c1\u6570\u636e\u6709\u597d\u6c34~~)\n\n\u7528lft\u8868\u793a\u5f53\u524d\u70b9\u80fd\u76f4\u63a5\u70b8\u5230\u7684\u6700\u5de6\u70b9\uff0crht\u8868\u793a\u80fd\u76f4\u63a5\u70b8\u5230\u7684\u6700\u53f3\u70b9\n\n\u9996\u5148\u9884\u5904\u7406\u51falft\u548crht\n\n```cpp\nread(n);\nfor(register unsigned i=1 ; i<=n ; ++i) {\n\tread(x[i]),read(r[i]);\n}\nfor(register unsigned i=1 ; i<=n ; ++i) {\n\tlft[i]=lower_bound(x+1,x+i,x[i]-r[i])-x;\n\trht[i]=upper_bound(x+i+1,x+n+1,x[i]+r[i])-x-1;\n}\n```\n\n\u7136\u540e\u901a\u8fc7\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u80fd\u76f4\u63a5\u70b8\u5230\u7684\u6700\u5de6\u70b9\u548c\u6700\u53f3\u70b9\uff0c\u7528ll\u548crr\u8868\u793a\n\n```cpp\ninline void build(int k,int l,int r) {\n\tif(l==r) {\n\t\tll[k]=lft[l];\n\t\trr[k]=rht[l];\n\t\treturn ;\n\t}\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tll[k]=min(ll[lson],ll[rson]);\n\trr[k]=max(rr[lson],rr[rson]);\n}\n```\n\u7136\u540e\u67e5\u8be2\u70b9x\u80fd\u70b8\u5230\u7684\u5de6\u53f3\u7aef\u70b9(\u4e0d\u662f\u76f4\u63a5)\n\n```cpp\nxx=yy=L=R=i;\ndo {\n\txx=L,yy=R;\n\tL=0x7fffffff,R=-0x7fffffff;\n\tquery(1,1,n,xx,yy);//\u67e5\u8be2\u533a\u95f4xx~yy\u80fd\u70b8\u5230\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n} while(L!=xx||R!=yy);//xx~yy\u8868\u793a\u5f53\u524d\u533a\u95f4,L~R\u8868\u793a\u5f53\u524d\u533a\u95f4\u80fd\u70b8\u5230\u7684\u533a\u95f4\uff0c\u5982\u679c\u4e24\u4e2a\u533a\u95f4\u76f8\u540c\u5c31\u8df3\u51fa\u5faa\u73af\n```\n~~\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u770b\u8fd9\u4e2a~~\n\n```cpp\n#include<bits/stdc++.h>\n#define lson (k<<1)\n#define rson (k<<1|1)\n#define mid (l+r>>1)\n#define int long long\nusing namespace std;\n\nconst int mod=1e9+7;\n\ninline void read(int &res) {\n    res=0;\n    char ch;\n    int flag=1;\n    while(isspace(ch=getchar()));\n    if(ch=='-') ch=getchar(),flag=-1;\n    do {\n        res=res*10+ch-'0';\n    }while(isdigit(ch=getchar()));\n    res*=flag;\n}\n\ninline void print(long long res) {\n    if(res<0) putchar('-'),res=-res;\n    if(res>9) print(res/10);\n    putchar(res%10+'0');\n}\n\nconst int N=500001;\n\nint x[N],r[N],lft[N],rht[N],n;\n\nint ll[N<<2],rr[N<<2],L,R;\n\nlong long ans;\n\ninline void build(int k,int l,int r) {\n    if(l==r) {\n        ll[k]=lft[l];\n        rr[k]=rht[l];\n        return ;\n    }\n    build(lson,l,mid);\n    build(rson,mid+1,r);\n    ll[k]=min(ll[lson],ll[rson]);\n    rr[k]=max(rr[lson],rr[rson]);\n}\n\ninline void query(int k,int l,int r,int x,int y) {\n    if(l>y||r<x||l>r) return ;\n    if(l>=x&&r<=y) {\n        L=min(L,ll[k]);R=max(R,rr[k]);\n        return ;\n    }\n    query(lson,l,mid,x,y);\n    query(rson,mid+1,r,x,y);\n}\n\nsigned main() {\n    read(n);\n    for(register unsigned i=1 ; i<=n ; ++i) {\n        read(x[i]),read(r[i]);\n    }\n    for(register unsigned i=1 ; i<=n ; ++i) {\n        lft[i]=lower_bound(x+1,x+i,x[i]-r[i])-x;\n        rht[i]=upper_bound(x+i+1,x+n+1,x[i]+r[i])-x-1;\n    }\n    build(1,1,n);\n    int xx,yy;\n    for(register unsigned i=1 ; i<=n ; ++i) {\n        xx=yy=L=R=i;\n        do {\n            xx=L,yy=R;\n            L=0x7fffffff,R=-0x7fffffff;\n            query(1,1,n,xx,yy);\n        } while(L!=xx||R!=yy);\n        ans=(ans+i*(yy-xx+1)%mod)%mod;\n    }\n    print(ans);\n    return 0;\n}\n```\n\n\n(\u5199\u5b8c\u540e\u53d1\u73b0\u6709\u9898\u89e3\u548c\u81ea\u5df1\u5199\u7684\u4e00\u6837\u600e\u4e48\u529e\u554a)",
        "postTime": 1554527004,
        "uid": 79075,
        "name": "mzgwty",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u66b4\u529b\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b8\u5f39\uff0c\u679a\u4e3e\u6240\u6709\u7684\u70b8\u5f39\uff0c\u770b\u5b83\u7206\u70b8\u80fd\u4e0d\u80fd\u5f15\u7206\u90a3\u4e2a\u70b8\u5f39\n\n\u5982\u679c\u80fd\uff0c\u7531\u8fd9\u4e2a\u70b8\u5f39\u5411\u5f15\u7206\u7684\u70b8\u5f39\u8fde\u5355\u5411\u8fb9\n\ntarjan\u6240\u70b9\u540e\u62d3\u6251\u6392\u5e8f\n\n\u5728\u62d3\u6251\u56fe\u4e0a\u5012\u7740\u7edf\u8ba1\u7b54\u6848\n\n\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u70b8\u5f39\u80fd\u5f15\u7206\u7684\u7f16\u53f7\u6700\u5c0fmi\u548c\u6700\u5927\u7684\u70b8\u5f39mx\uff0cmx-mi+1\u5c31\u662f\u5148\u5f15\u7206\u8fd9\u4e2a\u70b8\u5f39\u4e00\u5171\u80fd\u5f15\u7206\u7684\u70b8\u5f39\u6570\n\n\u4f18\u5316\uff1a\n\n\u4e00\u4e2a\u70b8\u5f39\u4e00\u5b9a\u662f\u5411\u4e00\u6bb5\u533a\u95f4\u8fde\u8fb9\n\n\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u8fd9\u6837\u5411\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\u5c31\u53d8\u6210\u4e86\u5411\u4e00\u4e2a\u70b9\u8fde\u8fb9\n\n \n\n\u6ce8\u610f\u5b58\u8fb9\u7684\u7a7a\u95f4\u4e00\u5b9a\u8981\u5f00\u7684\u8db3\u591f\u5927\n\n\u8fd8\u6709tarjan\u7f29\u5b8c\u70b9\u540e\u4e0d\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\u662f\u6709\u5411\u56fe\u7f29\u70b9\n\nCODE\uff1a\n\n```\n#include<cstdio>\n#include<vector>\n#include<iostream>\n#include<algorithm>\n \nusing namespace std;\n \nconst int mod=1e9+7;\n \n#define N 500001 \n \ntypedef long long LL;\n \nint n;\n \nint id[N*3],num;\nint front[N*3],to[N*21],nxt[N*21],from[N*21],tot;\n \nLL pos[N],rad[N];\n \nint dfn[N*3],low[N*3],tim;\nint st[N*3],top;\nbool vis[N*3];\n \nint cnt;\nint bl[N*3],mi[N*3],mx[N*3];\n \nvector<int>V[N*3];\nint in[N*3];\n \nint q[N*3];\n \ntemplate<typename T>\nvoid read(T &x)\n{\n    x=0; int f=1; char c=getchar();\n    while(!isdigit(c)) { if(c=='-') f=-1; c=getchar(); }\n    while(isdigit(c)) { x=x*10+c-'0'; c=getchar(); }\n    x*=f;\n}\n \nvoid add(int u,int v)\n{\n    to[++tot]=v; nxt[tot]=front[u]; front[u]=tot; from[tot]=u; \n    //printf(\"%d %d\\n\",u,v);\n}\n \n/*void add2(int u,int v)\n{\n    to2[++tot2]=v; nxt2[tot2]=front2[u]; front2[u]=tot2;\n}*/\n \nvoid build(int k,int l,int r)\n{\n    id[k]=++num;\n    if(l==r)\n    {\n        add(id[k],l);\n        return;\n    }\n    int mid=l+r>>1;\n    build(k<<1,l,mid);\n    build(k<<1|1,mid+1,r);\n    add(id[k],id[k<<1]);\n    add(id[k],id[k<<1|1]);\n}\n \nvoid burst(int k,int l,int r,int opl,int opr,int who)\n{\n    if(l>=opl && r<=opr)\n    {\n        add(who,id[k]);\n        return;\n    }\n    int mid=l+r>>1;\n    if(opl<=mid) burst(k<<1,l,mid,opl,opr,who);\n    if(opr>mid) burst(k<<1|1,mid+1,r,opl,opr,who);\n}\n \nvoid init()\n{\n    read(n);\n    num=n;\n    build(1,1,n);\n    for(int i=1;i<=n;++i) read(pos[i]),read(rad[i]);\n    for(int i=1;i<=n;++i) burst(1,1,n,lower_bound(pos+1,pos+n+1,pos[i]-rad[i])-pos,upper_bound(pos+1,pos+n+1,pos[i]+rad[i])-pos-1,i);\n}\n \nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++tim;\n    st[++top]=x;\n    vis[x]=true;\n    for(int i=front[x];i;i=nxt[i])\n        if(!dfn[to[i]])\n        {\n            tarjan(to[i]);\n            low[x]=min(low[x],low[to[i]]);\n        }\n        else if(vis[to[i]]) low[x]=min(low[x],dfn[to[i]]);\n    int y;\n    if(low[x]==dfn[x])\n    {\n        cnt++;\n        mi[cnt]=n+1;\n        mx[cnt]=0;  \n        while(x!=y)\n        {\n            y=st[top--];\n            vis[y]=false;\n            bl[y]=cnt;\n            if(y<=n) \n            {\n                mi[cnt]=min(mi[cnt],y);\n                mx[cnt]=max(mx[cnt],y);\n            }\n        }\n    }\n}\n \nvoid rebuild()\n{\n    for(int i=1;i<=tot;++i)\n        if(bl[from[i]]!=bl[to[i]]) \n        {\n            //add2(bl[from[i]],bl[to[i]]);\n            V[bl[from[i]]].push_back(bl[to[i]]);\n            in[bl[to[i]]]++;\n        }\n}\n \nvoid topsort()\n{\n    int head=1,tail=1;\n    for(int i=1;i<=cnt;++i) \n        if(!in[i]) q[tail++]=i;\n    int now,siz,t;\n    while(head<tail)\n    {\n        now=q[head++];\n        siz=V[now].size();\n        for(int i=0;i<siz;++i)\n        {\n            t=V[now][i];\n            in[t]--;\n            if(!in[t]) q[tail++]=t;\n        }\n    }\n    for(int i=tail-1;i;--i)\n    {\n        now=q[i];\n        siz=V[now].size();\n        for(int i=0;i<siz;++i)\n        {\n            t=V[now][i];\n            mi[now]=min(mi[now],mi[t]);\n            mx[now]=max(mx[now],mx[t]);\n        }\n    }\n}\n \n \nvoid work()\n{\n//  printf(\"%d %d\\n\",num,tot);\n    for(int i=1;i<=num;++i)\n        if(!dfn[i]) tarjan(i);\n    rebuild();\n    topsort();\n    int ans=0;\n    for(int i=1;i<=n;++i) \n    {\n        ans+=1LL*i*(mx[bl[i]]-mi[bl[i]]+1)%mod;\n        ans-=ans>=mod ? mod : 0;\n    }\n    printf(\"%d\",ans);\n}\n \nint main()\n{\n    init();\n    work();\n}\n```\n",
        "postTime": 1571053094,
        "uid": 111289,
        "name": "Ryan_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "\u6709\u4e2a\u9898\u89e3\u4f7f\u7528\u4e86\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u540e\u7f29\u70b9\n\n\u8fd9\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u89e3\u6cd5\n\n\u53ef\u662f\u540e\u9762\u8dd1dfs\u662f\u4ec0\u4e48xx\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7f29\u70b9\u540e\u7684\u6b63\u786e\u6253\u5f00\u65b9\u5f0f\u2014\u2014\u62d3\u6251\u6392\u5e8f\n\n\u8003\u8651\u6211\u4eec\u7f29\u70b9\u5b8c\u7684\u8fd9\u5f20DAG\uff0c\u4e00\u4e2a\u7f29\u70b9\u80fd\u70b8\u5230\u7684\u8303\u56f4\u662f\u5b83\u6240\u80fd\u904d\u5386\u5230\u7684\u6240\u6709\u7f29\u70b9~~(\u6240\u4ee5\u60f3\u5230dfs\u4e5f\u6b63\u5e38)~~\n\n\u5b9a\u4e49\u4e00\u4e2a\u7f29\u70b9\u7684size\u662f\u5b83\u5305\u542b\u7684\u4ee3\u8868\u7740\u70b8\u5f39\u7684\u539f\u70b9\u7684\u70b9\u6570\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2aDAG \u4e00\u4e2a\u7f29\u70b9\u80fd\u904d\u5386\u5230\u7684\u533a\u57df\uff0c\u53ef\u4ee5\u770b\u4f5c\u4e00\u68f5\u4ee5\u8be5\u7f29\u70b9\u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u9012\u63a8\uff0c\u628a\u5b83\u7684\u7236\u4eb2\u7684size\u52a0\u4e0a\u81ea\u5df1\u7684size\uff0c\u6700\u7ec8\u8be5\u7f29\u70b9\u7684size\u5c31\u662f\u80fd\u70b8\u5230\u7684\u70b8\u5f39\u603b\u6570(\u6bd4\u5982\u8bb0\u4f5cans)\uff0c\u4e3a\u4e86\u4f7f\u5b9e\u73b0\u66f4\u7b80\u5355\uff0c\u5728\u7f29\u70b9\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u53cd\u5411\u5efa\u56fe\uff0c\u62d3\u6251\u65f6\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u76f4\u63a5\u5bf9\u5b83\u7684\u6240\u6709\u51fa\u8fb9\u7684\u70b9size\u52a0\u4e0a\u81ea\u5df1\u7684size\uff0c\u9012\u63a8\u5373\u53ef\n\n\u9898\u76ee\u6c42\u03a3i*ans(i)\uff0c\u7531\u4e8e\u540c\u4e2a\u7f29\u70b9\u5185\u7684\u6240\u6709\u70b8\u5f39\u70b8\u5230\u7684\u4e2a\u6570\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u8be5\u7f29\u70b9\u5185\u542b\u6709\u70b8\u5f39a1,a2,\u2026,ak\uff0c\u8be5\u7f29\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662fa1*ans(a1)+a2*ans(a2)+\u2026+ak*ans(ak)\uff0c\u7f29\u70b9\u5185ans\u76f8\u7b49\uff0c\u6240\u4ee5\u8f6c\u5316\u4e3aans*(a1+a2+\u2026+ak)\uff0cans\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7size\u9012\u63a8\u5f97\u51fa\uff0c\u90a3a1+a2+\u2026+ak\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u62d3\u6251\u524d\u76f4\u63a5\u9884\u5904\u7406\n\n\u603b\u7ed3\u4e00\u4e0b\u601d\u8def\uff1a\u4e8c\u5206\u67e5\u627e\u6bcf\u4e2a\u70b8\u5f39\u80fd\u70b8\u5230\u7684\u8303\u56f4(lower/upper_bound)\u5373\u53ef\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u628a\u8be5\u70b8\u5f39\u548c\u8303\u56f4\u8fde\u8fb9\uff0c\u7136\u540e\u8fdb\u884cTarjan\u7f29\u70b9\uff0c\u53cd\u5411\u8fde\u8fb9\uff0c\u62d3\u6251\u65f6\u6bcf\u5230\u4e00\u4e2a\u70b9x\u5c31ans+=sum[x]*size[x]  (\u522b\u5fd8\u4e86%1e9+7)\uff0c\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u51fa\u8fb9\u5bf9\u5e94\u7684\u70b9y,size[y]+=size[x]\n\n```cpp\n#include<set>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define lson p<<1\n#define rson p<<1|1\nusing std::min;\nusing std::set;\nusing std::pair;\nusing std::stack;\nusing std::queue;\nusing std::vector;\nusing std::make_pair;\nusing std::lower_bound;\nusing std::upper_bound;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool fh=0;\n\twhile (ch<48||ch>57)fh=ch=='-'?1:fh,ch=getchar();\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (fh)in=-in;\n}\ntypedef long long ll;\ntypedef vector<int>::iterator vit;\nconst int N=5e5+10,MOD=1e9+7;\nint n,id[N],tot;\nll x[N],r[N];\nvector<int>org[N<<2],dag[N<<2];\ninline const void build(int p,int l,int r)\n{\n\ttot++;\n\tif (l==r)return (void)(id[l]=p);\n\tint mid=l+r>>1;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\torg[p].push_back(lson);\n\torg[p].push_back(rson);\n}\ninline const void connect(int p,int l,int r,int L,int R,int u)\n{\n\tif (l>R||r<L)return;\n\tif (l>=L&&r<=R){if (u^p)org[u].push_back(p);return;}\n\tint mid=l+r>>1;\n\tconnect(lson,l,mid,L,R,u);\n\tconnect(rson,mid+1,r,L,R,u);\n}\nstack<int>s;\nbool ins[N<<2];\nint dfn[N<<2],low[N<<2],scc[N<<2],cnt,col;\ninline const void tarjan(int u)\n{\n\ts.push(u);ins[u]=1;dfn[u]=low[u]=++cnt;int v;\n\tfor (vit it=org[u].begin();it!=org[u].end();it++)\n\t\tif (!dfn[v=*it])tarjan(v),low[u]=min(low[u],low[v]); \n\t\telse if (ins[v])low[u]=min(low[u],dfn[v]);\n\tif (dfn[u]^low[u])return;col++;\n\tdo v=s.top(),s.pop(),ins[v]=0,scc[v]=col;while (u^v);\n}\nll sum[N<<2];\nset<pair<int,int> >connected;\nint ind[N<<2],size[N<<2];\ninline const void tarjan()\n{\n\tfor (int i=1;i<=tot;i++)if (!dfn[i])tarjan(i);\n\tfor (int u,v,i=1;i<=tot;i++)\n\t\tfor (vit j=org[i].begin();j!=org[i].end();j++)\n\t\t\tif ((u=scc[i])^(v=scc[*j])&&connected.find(make_pair(v,u))==connected.end())\n\t\t\t\tdag[v].push_back(u),ind[u]++,connected.insert(make_pair(v,u));\n\tfor (int i=1;i<=n;i++)sum[scc[id[i]]]+=i,size[scc[id[i]]]++;\n}\ninline const ll toposort()\n{\n\tqueue<int>q;\n\tfor (int i=1;i<=col;i++)if (!ind[i])q.push(i);\n\tll ans=0ll;\n\twhile (!q.empty())\n\t{\n\t\tint u=q.front(),v;q.pop();\n\t\tans=(ans+sum[u]*size[u])%MOD;\n\t\tfor (vit i=dag[u].begin();i!=dag[u].end();i++)\n\t\t\tif (size[v=*i]+=size[u],!--ind[v])q.push(v);\n\t}\n\treturn ans;\n}\nint main()\n{\n\tread(n);\n\tfor (int i=1;i<=n;i++)read(x[i]),read(r[i]);\n\tbuild(1,1,n);\n\tfor (int i=1;i<=n;i++)connect(1,1,n,lower_bound(x+1,x+n+1,x[i]-r[i])-x,upper_bound(x+1,x+n+1,x[i]+r[i])-x-1,id[i]);\n\ttarjan();printf(\"%lld\\n\",toposort());\n\treturn 0;\n}\n```",
        "postTime": 1563808348,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "# \u7528\u5f97\u7740\u90a3\u4e48\u9ebb\u70e6\uff1f\uff1f\uff1f\n## tarjan+\u62d3\u6251\u6392\u5e8f+bfs~~\u800c\u5df2~~\n\n**\u7b80\u5355**\u5730\u5728\u5e8f\u5217\u4e0a\u9762\u5efa\u56fe\u7136\u540eDAG DP\u5373\u53ef\uff0c\u6ce8\u610f\u8981\u5148**\u7f29\u70b9**\u3002 \n\n\u4f46\u662f\u53d1\u73b0\u8fb9\u6570\u53ef\u80fd\u4f1a\u6709$n^2$\uff0c\u4e8e\u662f\u5229\u7528**\u7ebf\u6bb5\u6811**\u6765\u7531\u5efa\u56fe\u3002\n\n\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8fde\u5411\u7684\u70b9\u96c6\u5fc5\u5b9a\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6574\u4e2a\u5e8f\u5217\u5efa\u4e00\u9897**\u7ebf\u6bb5\u6570**\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u8fde\u5411\u7684\u4e00\u6bb5\u56fa\u5b9a\u7684\u533a\u95f4\uff0c\u5229\u7528\u7ebf\u6bb5\u6811\u533a\u95f4\u5206\u6cbb\u7684\u65b9\u6cd5\u8fde\u8fb9\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u7684\u8fb9\u6570\u5c31\u53ea\u6709$log(n)$\u7ea7\u522b\u4e86\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u4e0a\u7236\u4eb2\u513f\u5b50\u4e4b\u95f4\u8fde\u8fb9\uff0c\u76f4\u63a5\u8fde\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u6ce8\u610f\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u8ba1\u7b97\u8d21\u732e\u3002\n\n\u5f53\u7136\u8fd8\u6709\u65f6\u9650\u3002\u3002\u3002\u3002\n\n# code\n```\n#include<bits/stdc++.h>\n#define REP(i,a,b) for(int i=a,i##_end_=b;i<=i##_end_;++i)\ntypedef long long ll;\nusing namespace std;\ntemplate<typename T>void read(T &_){\n    T __=0,mul=1; char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')mul=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))__=(__<<1)+(__<<3)+(ch^'0'),ch=getchar();\n    _=__*mul;\n}\nconst int maxn=5e5+10;\nconst int maxm=2e7+10;\nconst ll mod=1e9+7;\nint n,lp[maxn],rp[maxn],tot,num[maxn];\nll x[maxn],y[maxn],ans;\nvector<int>G[maxn<<2]; \nint beg[maxn<<2],to[maxm],las[maxm],cnte=1;\nint val[maxn<<2],dp[maxn<<2];\nint low[maxn<<2],dfn[maxn<<2],cnt_dfn,cnt_scc,bel[maxn<<2];\nbool in[maxn<<2],isleaf[maxn<<2];\nstack<int>stk;\nvoid add(int u,int v){las[++cnte]=beg[u]; beg[u]=cnte; to[cnte]=v;}\nstruct Segment_Tree{\n#define mid ((l+r)>>1)\n#define lc rt<<1\n#define rc rt<<1|1\n#define lson lc,l,mid\n#define rson rc,mid+1,r\n    void build(int rt,int l,int r){\n        tot=max(tot,rt);\n        if(l==r){isleaf[rt]=1;num[l]=rt;return;}\n        add(rt,lc); add(rt,rc);\n        build(lson); build(rson);\n    }\n    void link(int rt,int l,int r,int L,int R,int id){\n        if(L<=l && r<=R)add(id,rt);\n        else{\n            if(L<=mid)link(lson,L,R,id);\n            if(R>=mid+1)link(rson,L,R,id);\n        }\n    }\n}T;\nvoid tarjan(int u){\n    stk.push(u); in[u]=1;\n    low[u]=dfn[u]=++cnt_dfn;\n    for(int i=beg[u];i;i=las[i]){\n        if(!dfn[to[i]]){\n            tarjan(to[i]);\n            low[u]=min(low[u],low[to[i]]);\n        }\n        else if(in[to[i]])low[u]=min(low[u],dfn[to[i]]);\n    }\n    if(low[u]==dfn[u]){\n        ++cnt_scc;\n        for(int p=0;p!=u;stk.pop()){\n            p=stk.top();\n            val[cnt_scc]+=isleaf[p];\n            in[p]=0;\n            bel[p]=cnt_scc;\n        }\n    }\n}//tarjan\nint dfs(int u){\n    if(dp[u])return dp[u];\n    dp[u]=val[u];\n    REP(i,0,G[u].size()-1){\n        int v=G[u][i];\n        dp[u]+=dfs(v);\n    }\n    return dp[u];\n}//dfs\n\nvoid solve(){\n    read(n);//\u8bfb\u5165you\u5316\n    REP(i,1,n)read(x[i]),read(y[i]);\n    REP(i,1,n){\n        lp[i]=lower_bound(x+1,x+n+1,x[i]-y[i])-x;\n        rp[i]=upper_bound(x+1,x+n+1,x[i]+y[i])-x-1;\n        //cout<<lp[i]<<\" \"<<rp[i]<<endl;\n    }\n    T.build(1,1,n);\n    REP(i,1,n)T.link(1,1,n,lp[i],rp[i],num[i]);\n    REP(i,1,tot)if(!dfn[i])tarjan(i);\n    REP(i,1,tot)for(int j=beg[i];j;j=las[j])\n        if(bel[i]!=bel[to[j]])G[bel[i]].push_back(bel[to[j]]);\n    REP(i,1,cnt_scc){\n        sort(G[i].begin(),G[i].end());\n        G[i].erase(unique(G[i].begin(),G[i].end()),G[i].end());\n    }\n    REP(i,1,cnt_scc)if(!dp[i])dfs(i);\n    REP(i,1,n)ans=(ans+1ll*i*dp[bel[num[i]]])%mod;\n    printf(\"%lld\\n\",ans);\n}\n\nint main(){\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1542205963,
        "uid": 100151,
        "name": "yazzkl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "Li \u8868\u793a\u70b8\u5f39i\u53ef\u4ee5\u70b8\u5230\u7684\u6700\u5de6\u70b8\u5f39  \nRi \u8868\u793a\u70b8\u5f39i\u53ef\u4ee5\u70b8\u5230\u7684\u6700\u53f3\u70b8\u5f39  \nLpi \u8868\u793a\u70b8\u5f39i\u53ef\u4ee5\u5f80\u5de6\u8fde\u70b8\u5230\u7684\u6700\u5de6\u70b8\u5f39  \nRpi \u8868\u793a\u70b8\u5f39i\u53ef\u4ee5\u5f80\u53f3\u8fde\u70b8\u5230\u7684\u6700\u53f3\u70b8\u5f39  \n\n\u4ee5Rpi\u4e3a\u4f8b  \n[L,R]\u4e3a\u5f53\u524d\u533a\u95f4  \nRpMax\u4e3a[L,R]\u4e2d\u6700\u5927\u7684Rpi  \n\u5728[R+1 RpMax]\u4e2d\u53ef\u80fd\u4f1a\u6709\u8db3\u4ee5\u6269\u5c55\u5de6\u8fb9\u754c\u7684\u70b8\u5f39  \n\u90a3\u4e48\u70b8\u5f39\u6700\u5927\u534a\u5f84\u5fc5\u7136\u53d8\u4e3a\u539f\u6765\u7684\u81f3\u5c11\u4e24\u500d  \n\u90a3\u4e48\u662flog\u6b21  \n\u53ef\u4ee5ST\u8868\u7ef4\u62a4   \nps:\u5c31\u6d1b\u8c37\u7684\u6570\u636e\u6765\u8bf4,\u597d\u50cf\u76f4\u63a5\u7528\u4e0d\u7740Lp\u548cRp\u5c31\u80fd\u8fc7  \n\u800c\u4e14\u5728\u67d0\u4e9b\u6570\u636e\u4e0a,\u597d\u50cf\u6211\u8fd9\u4e2a\u8ddf\u8bf8\u4f4d\u7684\u4ee3\u7801\u7b54\u6848\u4f1a\u6709\u4e0d\u540c\n\n\u4ee3\u7801\u5f88\u4e11\uff0c\u4f46\u8fd8\u662f\u8d34\u4e2a\u5427\n\n```\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#define file(KSCN) freopen(KSCN\".in\",\"r\",stdin),freopen(KSCN\".out\",\"w\",stdout)\nusing namespace std;\ntypedef long long ll;\nnamespace IO{\n\tconst int ios=1<<17;\n\tchar R[ios],*Rc=R,*RB=R;int pass;\n\tinline int gec(){return(Rc==RB&&(RB=(Rc=R)+fread(R,1,ios,stdin),Rc==RB))?EOF:*Rc++;}\n\ttemplate<typename Tp>inline int read(Tp&A){\n\t\tstatic int c,sg;c=gec();sg=0;A=0;\n\t\twhile(!isdigit(c)&&c!=EOF)sg|=(c=='-'),c=gec();\n\t\t\tif(c==EOF)return EOF;\n\t\twhile(isdigit(c))A=(A<<3)+(A<<1)+(c^'0'),c=gec();\n\t\treturn A=sg?-A:A,0;\n\t}\n\tinline int read(){return read(pass),pass;}\n}\nusing IO::gec;using IO::read;\nconst int N=5e5+5,G=20,inf=0x3f3f3f3f,mds=1e9+7;\nint n;\nstruct Min{int operator()(int a,int b)const{return a<b?a:b;}};\nstruct Max{int operator()(int a,int b)const{return a>b?a:b;}};\nnamespace ST{\n\tint lg[N];\n\tvoid predLog(int n){\n\t\tfor(int i=1;(1<<i)<=n;i++)lg[(1<<i)]=i;\n\t\tfor(int i=1;i<=n;i++)if(!lg[i])lg[i]=lg[i-1];\n\t}\n\ttemplate<typename shuper>struct stTable{\n\t\tint f[G][N];\n\t\tshuper cmp;\n\t\tvoid pred(int*a){\n\t\t\tmemcpy(f[0],a,sizeof(f[0]));\n\t\t\tfor(int k=1;k<G;k++){\n\t\t\t\tint*QwQ=f[k],*QAQ=f[k-1],ig=(1<<(k-1));\n\t\t\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\t\t\tQwQ[i]=cmp(QAQ[i],QAQ[i+ig]);\n\t\t\t}\n\t\t}\n\t\tint Querys(int L,int R){\n\t\t\tint t=lg[R-L+1];\n\t\t\treturn cmp(f[t][L],f[t][R-(1<<t)+1]);\n\t\t}  \n\t\n\t};\n\tstTable<Min>lua,lub;\n\tstTable<Max>rua,rub;\n};\nnamespace seg{\n\ttemplate<typename shuper>struct segT{\n\t\tint t[N<<2],sgt,ift;\n\t\tshuper cmp;\n\t\tvoid built(int n){\n\t\t\tsgt=1;\n\t\t\twhile(sgt<=n)sgt<<=1;\n\t\t\tift=(cmp(inf,-inf)==inf)?-inf:inf;\n\t\t\tfor(int i=1;i<(sgt<<1);i++)t[i]=ift;\n\t\t}\n\t\tvoid upd(int x){t[x]=cmp(t[x<<1],t[x<<1|1]);}\n\t\tvoid Update(int x){\n\t\t\twhile(x>>=1)upd(x);\n\t\t}\n\t\tvoid Modify(int x,int v){\n\t\t\tx+=sgt-1;\n\t\t\tt[x]=v;\n\t\t\tUpdate(x);\n\t\t}\n\t\tint Querys(int L,int R){\n\t\t\tint ret=ift;\n\t\t\tfor(int l=L+sgt-1,r=R+sgt-1;l<=r;l>>=1,r>>=1){\n\t\t\t\tif(l&1)ret=cmp(ret,t[l++]);\n\t\t\t\tif(~r&1)ret=cmp(ret,t[r--]);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n\tsegT<Min>lua; \n\tsegT<Max>rua;\n};\nlong long po[N],rip[N];\nint l[N],r[N],lp[N],rp[N];\nint solve(int i){\n\tint L=i,R=i;\n\twhile(1){\n\t\tint l0=ST::lub.Querys(L,R),r0=ST::rub.Querys(L,R);\n\t\tL=l0,R=r0;\n\t\tint l1=ST::lua.Querys(L,R),r1=ST::rua.Querys(L,R);\n\t\tif(l1==L&&R==r1)break;\n\t\tL=l1,R=r1;\n\t}\n\treturn R-L+1;\n}\nint main(){\n\tread(n);\n\tST::predLog(n); \n\tseg::lua.built(n);\n\tseg::rua.built(n);\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)read(po[i]),read(rip[i]);\n\tfor(int i=1;i<=n;i++)l[i]=lower_bound(po+1,po+n+1,po[i]-rip[i])-po,r[i]=upper_bound(po+1,po+n+1,po[i]+rip[i])-po-1;\n\tST::lua.pred(l);ST::rua.pred(r);\n\tfor(int i=1;i<=n;i++)seg::lua.Modify(i,lp[i]=min(l[i],seg::lua.Querys(l[i],i-1)));\n\tfor(int i=n;i>=1;i--)seg::rua.Modify(i,rp[i]=max(r[i],seg::rua.Querys(i+1,r[i])));\n\tST::lub.pred(lp);ST::rub.pred(rp);\n\tfor(int i=1;i<=n;i++)\n\tans=(ans+1ll*i*solve(i))%mds; \n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1572853253,
        "uid": 16975,
        "name": "tswdfop233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "[\u539f\u535a\u5ba2](https://www.cnblogs.com/hjmmm/p/10473164.html)\n\n\u672c\u6587\u4e3a\u7ebf\u6bb5\u6811\u505a\u6cd5 ~~\u7801\u91cf\u6781\u5c0f~~\n\n\uff08\u542c\u8bf4\u53ef\u4ee5tarjan\u7f29\u70b9+\u62d3\u6251\uff1f\n\u611f\u89c9\u5dee\u4e0d\u591a\u3002\u3002\u800c\u4e14\u8fd9\u6837\u770b\u8d77\u6765\u65b9\u4fbf\u5f88\u591a\n\n\u627e\u5230\u5de6\u7aef\u70b9\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\n\u70b9 -> \u533a\u95f4\u5185lowerbound\u6700\u5c0f\u7684\u70b9 -> lowerbound -> \u533a\u95f4\u5185lowerbound\u6700\u5c0f\u7684\u70b9  -> lowerbound -> ......\n\n\u6240\u4ee5\u76f4\u63a5\u7ef4\u62a4\u6bcf\u4e2a\u70b9lowerbound\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0b\u5c31\u597d\u5566\n\n\u53f3\u7aef\u70b9\u540c\u7406\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nconst int N = 5e5 + 5;\nconst long long P = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\nint n, m;\nlong long pos[N], rad[N];\nint L[N], R[N];\nlong long ans;\n\nstruct Seg{\n\tint lm[N << 2], rm[N << 2];\n\tvoid update(int rt){\n\t\tlm[rt] = min(lm[rt << 1], lm[rt << 1 | 1]);\n\t\trm[rt] = max(rm[rt << 1], rm[rt << 1 | 1]);\n\t}\n\tvoid build(int l, int r, int rt){\n\t\tif(l == r){\n\t\t\tlm[rt] = L[l], rm[rt] = R[l]; \n\t\t\treturn ;\n\t\t}\n\t\tint mid = l + ((r - l) >> 1);\n\t\tbuild(l, mid, rt << 1);\n\t\tbuild(mid + 1, r, rt << 1 | 1);\n\t\tupdate(rt);\n\t}\n\tvoid qry(int l, int r, int x, int y, int& nx, int& ny, int rt){\n\t\tif(l == x && r == y){\n\t\t\tnx = min(lm[rt], nx); ny = max(rm[rt], ny); return ;\n\t\t}\n\t\tint mid = l + ((r - l) >> 1);\n\t\tif(x <= mid) qry(l, mid, x, min(y, mid), nx, ny, rt << 1);\n\t        if(y > mid) qry(mid + 1, r, max(x, mid + 1), y, nx, ny, rt << 1 | 1);\n\t}\n}seg;\n\ninline int l_lim(int x){\n\treturn lower_bound(pos + 1, pos + x, pos[x] - rad[x]) - pos;\n}\n\ninline int r_lim(int x){\n\treturn upper_bound(pos + x + 1, pos + n + 1, pos[x] + rad[x]) - pos - 1;\n}\n\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i){\n\t\tscanf(\"%lld%lld\", &pos[i], &rad[i]);\n\t}\n\tfor(int i = 1; i <= n; ++i){\n\t\tL[i] = l_lim(i);\n\t\tR[i] = r_lim(i);\n\t}\n\tseg.build(1, n, 1);\n\t\n\tans = 0;\n\tint x, y, nx, ny;\n\tfor(int i = 1; i <= n; ++i){\n\t    x = y = nx = ny = i;\n\t    do{\n\t    \tx = nx, y = ny;\n\t        nx = inf, ny = -inf; seg.qry(1, n, x, y, nx, ny, 1);  \n\t    }while((nx ^ x) | (ny ^ y));\n\t    ans = (ans + 1ll * i * (y - x + 1) % P) % P;\n\t    //\u8fd9\u91cc\u539f\u6765\u5fd8\u4e581ll\u4e86\u7206\u4e86long long\n\t}\n\tprintf(\"%lld\\n\", ans);\n    return 0;\t\n}\n/*\n\u5355\u7eaf\u7ef4\u62a4\u4e24\u8fb9\u5e76\u66f4\u65b0\u4e0d\u53ef\u884c \u53ef\u80fd\u4f1a\u6709\u6298\u5411\u5f15\u7206 \n*/\n```",
        "postTime": 1551704666,
        "uid": 46739,
        "name": "hjmmm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    },
    {
        "content": "trajan\u662f\u4e0d\u53ef\u80fd\u5199\u4ed6tarjan\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd.\n\n\u76f4\u63a5\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u505a\u8fd9\u9898\u4e86\uff0c\u4e3a\u4f55\u8981tarjan.\u76f4\u63a5\u79bb\u6563\u4e00\u6ce2\uff0c\u7136\u540e\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u5de6\u53f3\u80fd\u70b8\u5230\u7684\u8303\u56f4\uff0c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u533a\u95f4\u7684\u70b8\u5f39\u80fd\u70b8\u5230\u7684\u5de6\u53f3\u8303\u56f4\uff0c\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u540e\u8fed\u4ee3\u5230\u4e0d\u80fd\u8fed\u4ee3\u3002\u5f53\u7136\u4e5f\u8981\u5b9e\u65f6\u66f4\u65b0\u4e00\u4e0b\u8be5\u533a\u95f4\u7684\u6700\u8fdc\u5de6\u53f3\u5230\u8fbe\u7684\u8ddd\u79bb,\u7136\u540e\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u7684\u601d\u8def\u5927\u6982\u8bc1\u660e\u53ea\u4f1a\u8fed\u4ee3O(n)\u6b21\uff0c\u4e58\u4e0a\u7ebf\u6bb5\u6811\u7684O(lnn)\u548c\u79bb\u6563\u5316\u7684O(nlnn),\u6700\u7ec8\u590d\u6742\u5ea6\u4e3aO(nlnn).\n\n\u4ee3\u7801\u5982\u4e0b.\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n \nnamespace SGT{\n    #define Lson ( now << 1 )\n    #define Rson ( Lson | 1 )\n    #define Ason ( P <= mid ? Lson : Rson )\n    #define mid ( (l[now] + r[now]) >> 1 )\n    #define Lrange Lson,L,min(mid,R)\n    #define Rrange Rson,max(L,mid + 1),R\n     \n    struct node{ \n        int x,y;\n        node() : x(5000000),y(-1) {}\n        node(int _x,int _y) : x(_x),y(_y) {}\n        void print(){ cout << \"<\" << x << \",\" << y << \">\\n\"; }\n        bool operator !=(const node& From) const { return x != From.x or y != From.y; }\n        node const operator +(const node& From){ return node( min(x,From.x),max(y,From.y) ); }\n    }   v[2000005],line[500005];\n    int l[2000005];\n    int r[2000005];\n     \n    void updata(int now){ v[now] = v[Lson] + v[Rson]; }\n    void build (int now,int L,int R){\n        l[now] = L,r[now] = R;\n        if( L == R )return void( v[now] = line[L] );\n        build( Lrange );build( Rrange );updata(now);\n    }\n    void modify(int now,int P,node val){\n        if( l[now] == r[now] )return void( v[now] = val );\n        modify( Ason,P,val );updata(now);\n    }\n    node query(int now,int L,int R){\n        if( l[now] == L and r[now] == R )return v[now];\n        node ansL = node(),ansR = node();\n        if( mid >= L )ansL = query( Lrange );\n        if( mid <  R )ansR = query( Rrange );\n        return ansL + ansR;\n    }\n}\n \nvector<long long>que;\nlong long range[500005];\nconst int mod = 1e9 + 7;\n \nint main(){\n    int n;cin >> n;\n    for(int i = 1;i <= n;i ++){ long long k;cin >> k >> range[i];que.push_back(k); }\n    for(int i = 1;i <= n;i ++){\n        int L = lower_bound( que.begin(),que.end(),que[i - 1] - range[i] ) - que.begin() + 1;\n        int R = upper_bound( que.begin(),que.end(),que[i - 1] + range[i] ) - que.begin() + 1;\n        SGT::line[i] = SGT::node( L,R - 1 );\n    }\n    SGT::build( 1,1,n );\n    //return 0;\n    static int arrange[500005];long long ans = 0;\n    for(int i = 1;i <= n;i ++)arrange[i] = i;\n    //for(int i = 1;i <= n;i ++)swap( arrange[ rand() % n + 1 ],arrange[ rand() % n + 1 ] );\n    for(int i = 1;i <= n;i ++){\n        int now = arrange[i];\n        SGT::node lst = SGT::node(0,0);\n        SGT::node ths = SGT::query(1,now,now);\n        while( lst != ths ){\n            lst = ths;\n            ths = SGT::query( 1,ths.x,ths.y );\n        }\n        SGT::modify( 1,now,ths );\n        ( ans += 1ll * i * (ths.y - ths.x + 1) % mod ) %= mod;\n    }\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1542432587,
        "uid": 47240,
        "name": "bzy369258147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5025 \u3010[SNOI2017]\u70b8\u5f39\u3011"
    }
]