[
    {
        "content": "2019.7.28\n\nupd:\u4eca\u5929\u7a81\u7136\u53d1\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef...\u771f\u7684\u975e\u5e38\u62b1\u6b49\uff0c\u672c\u4eba\u5f53\u65f6\u5f88\u83dc\uff08\u73b0\u5728\u4e5f\u662f\uff09\uff0c\u8bf7\u5404\u4f4d\u89c1\u8c05\n\n\u8fd9\u9053\u9898\u4e2d\uff0cst\u8868\u5e94\u8be5\u662f\u7528$f[i][j]$**\u8868\u793a**\u533a\u95f4$[i....i-(2^j)+1]$\u7684\u6700\u503c\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u652f\u6301\u63d2\u5165\u4e00\u4e2a\u6570\u8fd9\u6837\u7684\u4fee\u6539\u4e86\u3002\n\n\u5bf9\u6b64\u611f\u5230\u5f88\u62b1\u6b49\n\n---------------------------------------------------\n\n\u770b\u4e86\u5f88\u591aAC\u7684OIer\u57fa\u672c\u662f\u7528**\u7ebf\u6bb5\u6811**\u7684\u3002\n\n\u8fd9\u91cc\u5c31\u611f\u89c9\u7528\u7ebf\u6bb5\u6811\u6709\u70b9**\u5927\u6750\u5c0f\u7528**\u4e86\u3002\n\n\u8fd9\u91cc\u6211\u5c31\u8bb2\u4e00\u4e0b**ST\u8868**\u7684\u65b9\u6cd5\u3002\n\n\u9898\u76ee\u6709**\u63d2\u5165**\u548c**\u8be2\u95ee**\u4e24\u4e2a\u64cd\u4f5c\u3002\n\n\u6ce8\u610f\u770b\u9898\u9762\uff0c\u6bcf\u6b21\u7684\u63d2\u5165\u662f**\u65e0\u8111\u5728\u5e8f\u5217\u7684\u5c3e\u7aef\u63d2\u5165**\u7684\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528ST\u8868\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u5148\u770bST\u8868\u7684**\u5b9a\u4e49**\uff1a\n\nST\u7b97\u6cd5\u662f\u7528\u6765\u6c42\u89e3**\u7ed9\u5b9a\u533a\u95f4RMQ\u7684\u6700\u503c**\uff0c\u7528**f[i][j]**\u8868\u793a**\u533a\u95f4[i....i+(2^j)-1]**\u7684\u6700\u503c\u3002\n\n\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u5728\u5c3e\u7aef\u63d2\u5165\u4e00\u4e2a\u65b0\u6570\u65f6\uff0c\u5e76\u4e0d\u4f1a**\u5f71\u54cd\u4e4b\u524d\u6240\u5efa\u7acb\u7684ST\u8868**\u3002\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528**log(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6**\u6765\u4fee\u6539ST\u8868\u4e86\u3002\n\n\u9644\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#define ll long long\nusing namespace std;\nll a[200001],f[200001][21],t,D;\nint n,m;\nbool flag;\nvoid change(int u){  //\u7528change\u51fd\u6570\u6765\u8fdb\u884c\u4fee\u6539\n    f[u][0]=a[u];\n    for(int i=1;u-(1<<i)>=0;i++) f[u][i]=max(f[u][i-1],f[u-(1<<(i-1))][i-1]);\n}\nll find(int x,int y){\n    double t=log(y-x+1)/log(2);\n    int K=t;\n    return max(f[y][K],f[x+(1<<K)-1][K]);\n}\nint main(){\n    memset(f,0,sizeof(f));\n    scanf(\"%d%lld\",&m,&D);\n    for (int i=1;i<=m;i++){\n        char c;\n        cin>>c;\n        ll x;\n        if (c=='A'){  //\u6839\u636e\u9898\u9762\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f\u7ec6\u8282\u3002\n            scanf(\"%lld\",&x);\n            a[++n]=(x+t)%D;\n            change(n);\n        }else{\n            int L; scanf(\"%d\",&L);\n            ll ans;\n            if (L==1){\n                printf(\"%lld\\n\",a[n]);\n                t=a[n]; continue;\n            }\n            ans=find(n-L+1,n);\n            printf(\"%lld\\n\",ans); t=ans;\n        }\n    }\n    return 0;\n}\n```\n\u5b8c\u7ed3\u6563\u82b1",
        "postTime": 1519280964,
        "uid": 23090,
        "name": "SaoFish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8c01\u8bf4\u6ca1\u6709\u7ebf\u6bb5\u6811\u505a\u6cd5\u7684\uff1f\u867d\u7136\u8bf4\u65f6\u95f4\u4e0a\u4e0d\u5927\u884c\uff0c\u4f46\u662fAC\u8fd8\u662f\u53ef\u4ee5\u7684\u3002\n\n\u4e3b\u8981\u662f\u6709\u4e2a\u5751\u70b9\uff0c\u90a3\u5c31\u662f\u67e5\u8be2\u4e00\u4e2a\u957f\u5ea6\u4e3a0\u7684\u533a\u95f4\u3002\u3002\u3002\n\n\u56e0\u4e3a\u4e00\u5f00\u59cb\u6570\u5217\u4e2d\u6ca1\u6709\u6570\u5b57\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u751a\u81f3\u4e0d\u9700\u8981\u5efa\u6811\uff0c\u6574\u4e2a\u9898\u53ea\u9700\u8981\u67e5\u8be2\u548c\u4fee\u6539\u4e24\u4e2a\u64cd\u4f5c\u5373\u53ef\u5b8c\u7f8e\u89e3\u51b3\n\n\u6bcf\u4e2a\u70b9\u53ea\u4fee\u6539\u4e00\u6b21\uff0c\u800c\u4e14\u662f\u5355\u70b9\u4fee\u6539\uff0c\u6807\u8bb0\u4ec0\u4e48\u7684\u4e5f\u4e0d\u9700\u8981\u3002\u4f46\u662f\u67e5\u8be2\u7684\u65f6\u5019\u8981\u5148\u628aa,b\u8d4b\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u503c\uff0c\u6765\u5e94\u5bf9\u8d1f\u6570\u7684\u60c5\u51b5\u3002\n\n\u533a\u95f4\u957f\u5ea6\u7684\u8bdd\uff0c\u5047\u8bbe\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u4fee\u6539\uff0c\u8fd9\u6837\u533a\u95f4\u957f\u5ea6\u5c31\u662f\u64cd\u4f5c\u6570\u3002\n\n\u5176\u4ed6\u7ec6\u8282\u89c1\u4ee3\u7801\u5427\uff08\u8bb2\u771f\u8fd9\u662f\u6211\u5199\u8fc7\u7684\u6700\u77ed\u7684\u7ebf\u6bb5\u6811\u9898\u76ee\uff09\n\n```cpp\n    #include<cstdio>\n    const long long inf=-(1<<62);\n    int m,cnt;\n    char op[2];\n    long long data[800005],x,t,p;\n    long long max(long long a,long long b)\n    {\n        return a>b?a:b;\n    }\n    void add(int s,int k,int o,int l,int r)\n    {\n        if(l==r)\n        {\n            data[o]=k;\n            return;\n        }\n        int mid=(l+r)>>1;\n        if(mid>=s) add(s,k,o<<1,l,mid);\n        if(mid<s) add(s,k,o<<1|1,mid+1,r);\n        data[o]=max(data[o<<1],data[o<<1|1])%p;\n    }\n    long long ask(int ll,int rr,int o,int l,int r)\n    {\n        if(ll<=l&&rr>=r) return data[o];\n        int mid=(l+r)>>1;\n        long long a=inf,b=inf;\n        if(mid>=ll) a=ask(ll,rr,o<<1,l,mid);\n        if(mid<rr) b=ask(ll,rr,o<<1|1,mid+1,r);\n        return max(a,b);\n    }\n    int main()\n    {\n        scanf(\"%d %lld\",&m,&p);\n        for(int i=0;i<m;i++)\n        {\n            scanf(\"%s %lld\",op,&x);\n            if(op[0]=='A')\n            {\n                add(cnt+1,(x+t)%p,1,1,m);\n                cnt++;\n            }\n            if(op[0]=='Q')\n            {\n                if(x==0) t=0;\n                else t=ask(cnt-x+1,cnt,1,1,m)%p;\n                printf(\"%lld\\n\",t);\n            }\n        }\n        return 0;\n    }\n\n```",
        "postTime": 1516419806,
        "uid": 25426,
        "name": "Excim",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "## \u7b97\u6cd5\uff1a\u5355\u8c03\u6808\uff0c\u5e76\u67e5\u96c6\u3002\n\u5355\u8c03\u6808\u7684\u90e8\u5206\u5c31\u4e0d\u7528\u8bb2\u4e86\uff0c\u697c\u4e0b\u7684dalao\u4eec\u4f7f\u7528\u7684\u5355\u8c03\u6808\u52a0\u4e8c\u5206\u67e5\u627e\uff0c\u5df2\u7ecf\u8bb2\u7684\u591f\u6e05\u695a\u7684\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8bb2\u5e76\u67e5\u96c6\u90e8\u5206\u3002\n\n------------\n\n### \u5e76\u67e5\u96c6\n\u5728\u5c06\u4e00\u4e2a\u6570\u63d2\u5165\u5355\u8c03\u961f\u5217\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u88ab\u5220\u9664\u7684\u6570\u7684\u7236\u4eb2\u6807\u8bb0\u4e3a\u63d2\u5165\u7684\u6570\uff0c\u5728\u67e5\u627e\u65f6\u53ea\u9700\u8981\u627e\u5230\u67e5\u627e\u7684\u6570\u7684\u6839\uff0c\u6839\u4e0a\u7684\u6570\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u8bc1\u660e\uff1a\u7565~~\uff08\u770b\u4e2a\u56fe\u5c31\u660e\u767d\u4e86\uff09~~\n\n\n![](https://cdn.luogu.com.cn/upload/pic/15273.png)\n![](https://cdn.luogu.com.cn/upload/pic/15274.png)\n\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO\uff08n\uff09\n\n------------\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int Maxn=200010;\nstruct node\n{\n\tlong long x;\n\tint y;\n}a[Maxn];\nint m,tot,cnt,f[Maxn];\nlong long d,t,x,num[Maxn];\nchar ch[3];\nint find(int x)\n{\n\tif(x!=f[x])f[x]=find(f[x]);\n\treturn f[x];\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&m,&d);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tgetchar();\n\t\tscanf(\"%s\",ch);\n\t\tscanf(\"%lld\",&x);\n\t\tif(ch[0]=='A')\n\t\t{\n\t\t\tx+=t;\n\t\t\tx%=d;\n\t\t\ttot++;\n\t\t\tnum[tot]=x;\n\t\t\tf[tot]=tot;\n\t\t\twhile(x>a[cnt].x&&cnt)\n\t\t\t{\n\t\t\t\tf[a[cnt].y]=tot;\n\t\t\t\tcnt--;\n\t\t\t}\n\t\t\ta[++cnt].x=x;\n\t\t\ta[cnt].y=tot;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=tot-x+1;\n\t\t\tint y=find(x);\n\t\t\tt=num[y];\n\t\t\tprintf(\"%lld\\n\",t);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1520423061,
        "uid": 53250,
        "name": "\u5355\u66e6\u589e",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u771f\u7684\u4e0d\u559c\u6b22\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u3002\u627e\u4e86\u4e2a\u597d\u65b9\u6cd5\u3002\n\n\n\u6709\u4e2a\u5199\u9898\u89e3\u7684\u4eba\u53f7\u79f0\u8fd9\u4e2a\u505a\u6cd5\u53eb\u201c\u5355\u8c03\u6808\u201d\u2026\u2026.\uff1f\n\n\u53cd\u6b63\u7b2c\u4e00\u6b21\u6284\u7684\u65f6\u5019\u662f\u56e0\u4e3a\u5b83\u77ed\u2026\u2026\u2026emm\u2026\u2026.\n\n\u73b0\u5728\u5199\u535a\u5ba2\u662f\u56e0\u4e3a\u53d1\u73b0\u7528\u8fd9\u4e2a\u65b9\u6cd5\u624d\u5e94\u8be5\u662f\u6211\u4eec\u5e94\u8be5\u5b66\u7684\u3002\n\n\u800c\u6211\u60f3\u628a\u8fd9\u4e2a\u505a\u6cd5\u5e94\u8be5\u662f\u2026\u2026.\u7528\u5355\u8c03\u6808\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e00\u4e2a\u4e8c\u5206\u7b54\u6848\u9898\u256e(\u256f\u25bd\u2570)\u256d\n\n\n\u7b80\u89e3\uff1a\u3010\u5176\u5b9e\u81ea\u5df1\u60f3\u6216\u8005\u76f4\u63a5\u770b\u4ee3\u7801\u53ef\u80fd\u66f4\u6709\u52a9\u4e8e\u601d\u7ef4emmm\u3011\n\n\u5148\u5f00\u4e24\u4e2a\u6808\u3002\u7b2c\u4e00\u4e2a\u6808\u5b58\u50a8\u5728\u961f\u5217\u91cc\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u6808\u5b58\u50a8\u8fd9\u4e2a\u6570\u5b57\u7684\u5927\u5c0f\n\n\n\u6bcf\u5f53\u6709\u65b0\u5143\u7d20\u8981\u5165\u961f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6392\u5728\u8fd9\u4e2a\u5143\u7d20\u524d\u7684\u6bd4\u5b83\u5c0f\u7684\u6570\u76f4\u63a5\u5ffd\u7565\u4e86\uff08\u56e0\u4e3a\u67e5\u8be2\u7684\u533a\u95f4\u6c38\u8fdc\u90fd\u662f\u540eL\u4e2a\u6570\uff0c\u6240\u4ee5\u2026\u2026.\uff09\u7136\u540e\u66f4\u65b0\u4e00\u4e0b\u4e24\u4e2a\u6808\u3002\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u6808\u7684\u4e0b\u6807\uff0c\u76f4\u5230\u4e8c\u5206\u5230\u4e00\u4e2a\u4e0b\u6807i\uff0c\u4f7fstack[2][i]\u8868\u793a\u7684\u961f\u5217\u4f4d\u7f6e\u5728\u6240\u6c42\u7684\u533a\u95f4\u91cc\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u6709\u4e86\u3002\n\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#if 0\n```\nWriters: Goes && G.S.M.\nHave falled in love\n\n```cpp\n#endif\n#define ll long long \ninline ll read(){\n    char ch=getchar();ll sum=0,f=1;\n    while(ch<'0'||ch>'9'){\n        ch=getchar();\n        if(ch=='-') f=-1;}\n    while(ch>='0'&&ch<='9')\n        sum*=10,sum+=ch-'0',ch=getchar();\n    return sum*f;\n}\nconst int N=200005;\nll m,MO,t;\nll stack[2][N],top,cnt;\nvoid add(int k){//\u6dfb\u52a0\u5143\u7d20\n    cnt++;\n    while(k>stack[1][top]&&top>0) top--;\n    stack[0][++top]=cnt;\n    stack[1][top]=k;\n}\nvoid query(int emm,int l,int r){//\u67e5\u8be2\n    while(l<r){\n        int mid=(l+r)/2;\n        if(stack[0][mid]<emm) l=mid+1;\n        else r=mid;\n    }t=stack[1][r];\n    printf(\"%lld\\n\",t);\n}\nint main()\n{\n    m=read(),MO=read();\n    while(m--){\n        char ch=getchar();\n        while(ch!='A'&&ch!='Q') ch=getchar();\n        if(ch=='A') add((t+read())%MO);\n        else query(cnt-read()+1,1,top);\n    }\n}\n```",
        "postTime": 1510975847,
        "uid": 38348,
        "name": "Goes",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "### \u4e3a\u5565\u6ca1\u6709\u7ebf\u6027\u505a\u6cd5 \u90a3\u6211\u5c31\u8865\u5145\u4e00\u4e0b\u5427\n\u89c2\u5bdf\u5230\u67e5\u8be2\u7b49\u90fd\u5728\u672b\u5c3e\u8fdb\u884c,\u6240\u4ee5\u91c7\u7528\u7279\u6b8a\u505a\u6cd5\n\n\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217q,\u610f\u4e49\u662f**\u4ee5\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u7ed3\u675f\u7684\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u6570\u7ec4\u6781\u5927\u503c**\n\n\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u70b9:\u5c06\u5355\u8c03\u961f\u5217\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u5168\u90e8\u6263\u9664,\u7136\u540e\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u6570\n\n\u67e5\u8be2[l,size]:\u4ecel\u5f80\u540e\u627e\u7b2c\u4e00\u4e2a\u5728\u5355\u8c03\u961f\u5217\u91cc\u7684\u6570\u5c31\u662f\u7ed3\u679c\n\n\u603b\u4e0d\u80fd\u4e00\u4e2a\u4e00\u4e2a\u627e\u5427,\u4e8e\u662f\u91c7\u7528\u4e8c\u5206\u67e5\u627e,\u590d\u6742\u5ea6O(nlogn),\u4ee3\u7801\u8d3c\u77ed~\n```cpp\n#include<bits/stdc++.h>\n#define M 200005\nusing namespace std;\nint m,p,t,x,sz,r,a[M],q[M];\nchar ch;\nint main() {\n\tscanf(\"%d%d\",&m,&p);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%s%d\",&ch,&x);\n\t\tif(ch=='A') {\n\t\t\ta[++sz]=(x+t)%p;\n\t\t\twhile(r&&a[q[r-1]]<a[sz])r--;\n\t\t\tq[r++]=sz;\n\t\t} else if(ch=='Q')printf(\"%d\\n\",t=a[*lower_bound(q,q+r,sz-x+1)]);\n\t}\n\treturn 0;\n}\n```\n\u4f46\u8fd9\u4e2a\u662fO(nlogn)\u7684,\u79bb\u7ebf\u6027\u8fd8\u5dee\u4e00\u6b65\n\n\u4e8e\u662f\u518d\u6b21\u5f00\u8111\u6d1e......\n\n**\u5c06i\u4e0e\u4ecei\u5f80\u540e\u627e\u7b2c\u4e00\u4e2a\u5728\u5355\u8c03\u961f\u5217\u91cc\u7684\u6570\u7684\u4e0b\u6807\u5408\u5e76\u5728\u4e00\u4e2a\u96c6\u5408,\u5e76\u4f7f\u8fd9\u4e2a\u96c6\u5408\u7684\u6839\u4e3a\u540e\u8005**\n\n\u4e8e\u662f\u67e5\u8be2\u65f6\u53ea\u9700\u627e\u5b83\u6240\u5728\u96c6\u5408\u7684\u6839\u5c31\u884c\u4e86\n\n\u5bb9\u6613\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\n\n\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u5e76\u64cd\u4f5c\u65f6\u5462?\u5f88\u7b80\u5355,\u53ea\u8981\u5728\u51fa\u961f\u65f6\u5408\u5e76\u5c31\u884c\u4e86\n\n\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u6570\u90fd\u4f1a\u8fdb\u961f\u4e00\u6b21,\u5728\u51fa\u961f\u65f6\u5b83\u4e00\u5b9a\u662f\u961f\u5217\u7684\u5c3e\u90e8,\u6240\u4ee5\u76f4\u63a5\u5411i\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662fO(nalpha(n))\u53ef\u4ee5\u89c6\u4e3aO(n),\u56e0\u4e3aalpha(n)<=4,\u53ea\u662f\u4e00\u4e2a\u8f83\u5c0f\u5e38\u6570\n\n\u4ee3\u7801\u4e5f\u5c31\u957f\u4e86\u4e00\u884c,\u800c\u4e14\u662f\u7ebf\u6027\u7684\n```cpp\n#include<bits/stdc++.h>\n#define M 200005\nusing namespace std;\nint m,p,t,x,sz,r,a[M],q[M],id[M];\ninline int getr(int i){return i==id[i]?i:id[i]=getr(id[i]);}\ninline void unite(int u,int v){id[getr(u)]=getr(v);}\nchar ch;\nint main() {\n\tscanf(\"%d%d\",&m,&p);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%s%d\",&ch,&x);\n\t\tif(ch=='A') {\n\t\t\ta[++sz]=(x+t)%p;id[sz]=sz;\n\t\t\twhile(r&&a[q[r-1]]<a[sz])unite(q[r-1],sz),r--;\n\t\t\tq[r++]=sz;\n\t\t} else if(ch=='Q')printf(\"%d\\n\",t=a[getr(sz-x+1)]);\n\t}\n\treturn 0;\n}\n```\n\u4e0d\u8fc7\u5982\u679c\u662f\u4efb\u610f\u533a\u95f4\u67e5\u8be2\u7684\u8bdd,\u90a3\u5c31\u4e0d\u884c\u4e86,\u56e0\u4e3a\u7b54\u6848\u53ef\u80fd\u4e0d\u5728\u5355\u8c03\u961f\u5217\u91cc\u9762,\u4f8b\u5982a={1,2,3,4,5},\u5219q={5},\u8981\u67e5max[1,1],\u90a3\u5c31\u6302\u4e86\n\n\u4e0d\u8fc7\u5982\u679c\u8981\u6c42\u7684\u662f\u548c,\u90a3\u600e\u4e48\u529e\u5462?\n\n\u8fd9\u5c31\u5f88\u7b80\u5355\u5566,\u6839\u672c\u4e0d\u9700\u8981\u7528\u8fd9\u79cd\u65b9\u6cd5,\u76f4\u63a5\u524d\u7f00\u548c\u5c31\u884c\u4e86,\u5343\u4e07\u522b\u53bb\u5199\u7ebf\u6bb5\u6811\u54e6!",
        "postTime": 1547366201,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "## \u6211\u771f\u7684\u6ca1\u60f3\u5230\uff0c\u5206\u5757\u5c45\u7136\u8fc7\u4e86\u8fd9\u9898\u800c\u4e14\u8dd1\u5f97\u6bd4\u7ebf\u6bb5\u6811\u5feb\u5f97\u591a233333\n\n\u7531\u4e8e\u672c\u9898\u8be2\u95ee\u6709m\u4e2a\uff0c\u5219\u6211\u4eec\u5047\u5b9a\u4f1a\u589e\u52a0m/2\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5757\u7684\u957f\u5ea6\u5c31\u53ef\u4ee5\u5047\u5b9a\u4e3asqrt(m/2)\uff08\u4f46\u6211\u7684\u4ee3\u7801\u597d\u50cf\u5206\u7684\u662fsqrt(m)/2\uff0c\u4e0d\u8fc7\u8dd1\u7684\u4e5f\u633a\u5feb\u6211\u5c31\u6ca1\u6539\u4e86\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u6bd4\u5bf9\u6548\u7387\uff0c\u672c\u4eba\u6570\u5b66\u4e0d\u597d\u4e0d\u4f1a\u8bc1\u660eORZ\uff09\n\n\u66f4\u65b0\u7684\u65f6\u5019\u76f4\u63a5\u5efa\u5757\u548cMax\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u67e5\u8be2\u5219\u662f\u88f8\u7684\u5206\u5757\uff0c\u6309\u5757\u67e5\u8be2\u5373\u53ef\u3002\u6ce8\u610f\u5904\u7406\u8fb9\u89d2\u5757\u4e0e\u8d1f\u6570\u95ee\u9898\u3002\n\n\u8fd8\u6709\uff0c\u9700\u8981\u6ce8\u610fcin\uff0c\u6d1b\u8c37\u8f93\u5165\u683c\u5f0f\u4f9d\u7136\u5751\u7239\u3002\n\n\u5728\u5757\u5927\u5c0fsqrt(m)/2\u7684\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(x\\*sqrt(m))\uff0c\u5176\u4e2dx\u4e3a\u52a0\u5165\u7684\u6570\u7684\u4e2a\u6570\u3002~~\u8bf4\u4e0d\u5b9a\u6bd4mlogx\u5feb\u5462~~\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath> \n#define neko 200010\n#define chkmin(a,b) ((a)<(b)?(a):(b))\n#define chkmax(a,b) ((a)>(b)?(a):(b))\n#define f(i,a,b) for(register int i=(a);i<=(b);i=-(~(i)))\nusing std::cin;\ntypedef long long ll;\nint p,blk,m,bl[neko];\nll mod,t,a[neko],Max[neko];\ntemplate<typename T>\nvoid read(T &x)\n{\n    char c=getchar();x=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))\n    {\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n}\nvoid update(ll x)\n{\n    if(x>=mod)x%=mod;\n    if(x<0)x+=mod;\n    bl[++p]=(p-1)/blk+1,a[p]=x;\n    Max[bl[p]]=chkmax(Max[bl[p]],x);\n}\nll query(int l,int r)\n{\n    ll tmp=-3e9;\n    f(i,l,chkmin(bl[l]*blk,r))tmp=chkmax(tmp,a[i]);\n    f(i,bl[l]+1,bl[r]-1)tmp=chkmax(tmp,Max[i]);\n    f(i,chkmax((bl[r]-1)*blk+1,l),r)tmp=chkmax(tmp,a[i]);\n    return t=tmp;\n}\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    char c;\n    int x;\n    ll y;\n    cin>>m>>mod;blk=sqrt(m)/2;\n    f(i,1,m)\n    {        \n        cin>>c; \n        if(c=='A')cin>>x,update(x+t);\n        if(c=='Q')cin>>y,printf(\"%lld\\n\",query(p-y+1,p));\n    }return 0;\n}\n```",
        "postTime": 1509680198,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "##\u770b\u5230\u4e86\u6bcf\u6b21\u90fd\u5728\u533a\u95f4\u6700\u540e\u52a0\u5165\u4e00\u4e2a\u503c,\u6211\u60f3\u5230\u4e86\u6811\u72b6\u6570\u7ec4!  \n\n~~\u770b\u4e86\u5f88\u591a\u8ba8\u8bba\u548c\u9898\u89e3,\u53d1\u73b0\u90fd\u662f\u7528 *\u7ebf\u6bb5\u6811* \u6216\u8005 *\u5355\u8c03\u6808* \u6216\u8005 *\u5206\u5757*\u505a\u7684~~  \n\u4f46\u662f\u6211\u5374\u60f3\u5230\u7684\u662f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6700\u5927\u503c,\u770b\u770b\u9898\u89e3,\u7adf\u7136\u6ca1\u6709!!!  \n\u90a3\u6211\u6765~~\u6c34~~\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u5427  \n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u786e\u7684\u662f,\u6811\u72b6\u6570\u7ec4\u662f\u652f\u6301\u533a\u95f4\u51cf\u6cd5\u64cd\u4f5c\u7684  \n\u533a\u95f4\u51cf\u6cd5\u7684\u542b\u4e49\u5c31\u662f\u5728\u5df2\u77e5 `[1,l-1]`\u548c`[1,r]`\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u6c42\u89e3\u51fa`[l,r]`\u7684\u533a\u95f4\u503c  \n\u4f46\u662f\u53d6max\u548c\u6c42\u548c\u64cd\u4f5c\u662f\u4e0d\u4e00\u6837\u7684,\u6c42\u548c\u652f\u6301\u533a\u95f4\u51cf\u6cd5,\u4f46\u662f\u53d6max\u4e0d\u652f\u6301.  \n\n~~**\u8fd9\u4e2a\u65f6\u5019\u5c31\u662f\u5c55\u73b0\u4eba\u7c7b\u667a\u6167\u7684\u65f6\u5019\u4e86**~~  \n\n\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b:  \n\u5f53`max[1,r]` $\\gt$ `max[1,l-1]` \u65f6,\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa `max[l,r] == max[1,r]`,\u56e0\u4e3a`max[1,l-1]`\u4e0d\u8d21\u732e\u6700\u5927\u503c  \n\u5f53`max[1,l-1] == max[1,r]` \u65f6,\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5f97\u5230`max[l,r] == max[1,r]`,\u56e0\u4e3a`max[1,l-1]`\u53c2\u4e0e\u8d21\u732e\u6700\u5927\u503c\u4e86,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a `i `$\\in$ ` [l,r]` \u4ece\u4e2d\u5bfb\u627e\u6700\u5927\u503c,\u800c\u6811\u72b6\u6570\u7ec4\u7684\u4f18\u52bf\u5c31\u5728\u4e8e\u53ef\u4ee5\u5728`i - l `$\\ge$` lowbit(i) `\u76f4\u63a5\u83b7\u53d6`max[i+1-lowbit(i) , i]`\n\n\u4e8e\u662f\u95ee\u9898\u8fce\u5203\u800c\u89e3!!!  \n\n\u56e0\u4e3a\u4e0a\u9762\u8bf4\u7684\u5f88\u660e\u767d,\u4ee3\u7801\u4e2d\u5c31\u662f\u4e0a\u9762\u5206\u7c7b\u8ba8\u8bba\u7684\u5b9e\u73b0,\u5c31\u6ca1\u6709\u518d\u591a\u8d39\u65f6\u95f4\u7801\u5b57\u4e86~~(\u5c31\u662f\u61d2,\u6ca1\u522b\u7684)~~  \n###Code:\n```\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\nconst int maxn = 2e5+7 ;\n#define lowbit(x) (x & (-x))\nusing namespace std ;\n\nint n,mod;\nint T,tot;\nint num[maxn];\n//num[i]\u8868\u793a\u5728i\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570 \nint t[maxn] ;\n//t[]\u662f\u6811\u72b6\u6570\u7ec4,\u4e5f\u5c31\u662f\u50a8\u5b58max[1,i] \n\ninline int query(int l , int r)\n{\n\tint ans = 0;\n\twhile(l <= r)\n\t{\n\t\tans = max(ans , num[r]) ;\n\t\tfor(--r ; r-l >= lowbit(r) ; r-=lowbit(r))\n\t\t//\u679a\u4e3ei\u7684\u8fc7\u7a0b \n\t\t\tans = max(ans,t[r]);\n\t}\n\treturn ans ;\n}\ninline void add(int x)\n{\n\tnum[++tot] = (x+T)%mod;\n\tt[tot] = max(num[tot],query(tot+1-lowbit(tot) , tot-1));\n\t//\u66f4\u65b0\u6570\u72b6\u6570\u7ec4 \n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&mod);\n\twhile(n--)\n\t{\n\t\tchar in;\n\t\tint x;\n\t\tcin >> in;\n\t\tscanf(\"%d\",&x);\n\t\tif(in == 'A') add(x);\n\t\telse printf(\"%d\\n\",T=query(tot+1-x,tot));\n\t}\n\t\u6ca1\u4ec0\u4e48\u8bf4\u7684\u4e86 \n}\n```",
        "postTime": 1572166281,
        "uid": 149537,
        "name": "Atlicd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u626b\u4e00\u773c\u9898\u9762\uff1a\u8fd9\u4e0d\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u677f\u5b50\u9898\u5417\uff1f\n\n~~\u7136\u800c\u6570\u636e\u8fc7\u6c34\u5bfc\u81f4\u66b4\u529bn\u65b9\u80fd\u8fc7\uff1f~~ \u8bf7\u6c42\u7ba1\u7406\u52a0\u5f3a\u6570\u636eQAQ\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u8981\u7528\u6b63\u89e3\u6765\u505a\u8fd9\u4e00\u9053\u9898\u5566\uff08\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u6700\u5927\u503c\uff09\uff01\n\n\u4e3b\u8981\u5185\u5bb9\u662f\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u5c24\u5176\u8981\u4e3b\u8981L==0\u7684\u60c5\u51b5\uff0c\u4e0d\u7136\u4f1aRE\n\n[\u8fd9\u662f\u7528\u7ebf\u6bb5\u6811\u505a\u8fd9\u9053\u9898\u7684\u7ed3\u679c](https://www.luogu.org/record/25572848)\n\n\u8fd9\u9053\u9898\u548c\u7ebf\u6bb5\u6811\u6a21\u677f\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u7684\u5e95\u90e8\u6bcf\u6b21\u90fd\u9700\u8981\u65b0\u63d2\u5165\u4e00\u4e2a\u503c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u4e00\u4e2a\u503c\u4e3a0\u7684\u5730\u65b9\u4f5c\u51fa\u5355\u70b9\u4fee\u6539\u3002\u4e5f\u5c31\u662f\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvoid pplus(long long p,long long l,long long r,long long w,long long v){//\u52a0\u5165\u51fd\u6570\n\tif(l==r){t[p]=v;return;}//\u5982\u679c\u5230\u4e86\u5e95\u90e8\uff0c\u76f4\u63a5\u8d4b\u503c\n\tlong long mid=(l+r)/2;//\u53d6\u4e2d\u70b9\n\tif(w<=mid)pplus(p*2,l,mid,w,v);//\u5982\u679c\u5728\u5de6\u8fb9\u67e5\u8be2\u5de6\u8282\u70b9\n\telse pplus(p*2+1,mid+1,r,w,v);//\u540c\u4e0a\n\tt[p]=max(t[p*2],t[p*2+1]);//\u5f53\u524d\u70b9\u7684\u503c\u7b49\u4e8e\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\u4e2d\u8f83\u5927\u7684\u503c\n}\n```\n\u5982\u56fe\uff08\u6211\u76f8\u4fe1\u5173\u4e8e\u8fd9\u4e00\u70b9\u8bb8\u591a\u7ebf\u6bb5\u6811\u9898\u89e3\u90fd\u6ca1\u6709\u5199\u5230\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/chlh57oq.png)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long modd,m,tt,line;//modd:\u6a21\u6570 m:\u64cd\u4f5c\u6570 line:\u957f\u5ea6 tt\uff1a\u9898\u4e2dt\nlong long t[2000001];//\u7ebf\u6bb5\u6811\uff0c\u5b58\u6700\u5927\u503c\n//\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u2026\u2026\ninline long long read(){//\u5feb\u8bfb\u4f18\u5316\u6570\u636e\u8bfb\u5165\uff08\u6570\u636e\u5927\u4e0d\u80fd\u5fd8\u8bb0\uff09\n\tlong long f=1,outt=0;char a=getchar();\n\twhile(a>'9'||a<'0'){if(a=='-')f=-1;a=getchar();}\n\twhile(a<='9'&&a>='0'){outt*=10;outt+=a-'0';a=getchar();}\n\treturn f*outt;\n}\nvoid js(long long p,long long l,long long r){//\u521d\u59cb\u5316\u5efa\u6811\n\tt[p]=-0x3ffffffff;//\u8d4b\u6781\u5c0f\u503c\n\tif(l==r)return;\n\tlong long mid=(l+r)/2;\n\tjs(p*2,l,mid);//\u5411\u5de6\u8282\u70b9\u4fee\u6539\n\tjs(p*2+1,mid+1,r); //\u5411\u53f3\u8282\u70b9\u4fee\u6539\n}\nlong long ask(long long p,long long l,long long r,long long nl,long long nr){//\u67e5\u8be2\u51fd\u6570\n\tif (nl<=l&&r<=nr)return t[p];//\u5982\u679c\u533a\u95f4\u88ab\u5305\u542b\uff0c\u8fd4\u56de\u6700\u5927\u503c\n    long long mid=(l+r)/2;//\u53d6\u4e2d\u70b9\n    long long minn=-0x3ffffffff;//\u8d4b\u6781\u5c0f\u503c\n    if (nl<=mid)minn=ask(p*2,l,mid,nl,nr);//\u5982\u679c\u67e5\u8be2\u533a\u95f4\u5de6\u8282\u70b9\u5927\u4e8e\u7b49\u4e8emid\uff0c\u67e5\u8be2\u5de6\u533a\u95f4\n    if (nr>mid)minn=max(minn,ask(p*2+1,mid+1,r,nl,nr));//\u540c\u4e0a\n    return minn;//\u8fd4\u56de\u6700\u5c0f\u503c\n}\nvoid pplus(long long p,long long l,long long r,long long w,long long v){//\u52a0\u5165\u51fd\u6570\n\tif(l==r){t[p]=v;return;}\n\tlong long mid=(l+r)/2;\n\tif(w<=mid)pplus(p*2,l,mid,w,v);\n\telse pplus(p*2+1,mid+1,r,w,v);\n\tt[p]=max(t[p*2],t[p*2+1]);\n}\nint main(){\n\tm=read(),modd=read();//\u8bfb\u5165\u64cd\u4f5c\u6570\u548c\u6a21\u6570\n\tfor(int i=1;i<=m;i++){\n\t\tchar s;//\u8bfb\u53d6\u64cd\u4f5c\n\t\tcin>>s;\n\t\tif(s=='A'){\n\t\t\tlong long ls=read();\n\t\t\tline++;//\u957f\u5ea6++\uff0c\u8bb0\u5f55\u5f53\u524d\u503c\u662f\u7b2c\u51e0\u4e2a\n\t\t\tpplus(1,1,m,line,(tt+ls)%modd);//\u5c06\u65b0\u7684\u503c\u52a0\u5165\u7ebf\u6bb5\u6811\n\t\t}\n\t\telse {\n\t\t\tlong long ls=read();\n\t\t\tif(!ls)tt=0;//\u5982\u679c\u67e5\u8be2\u4e3a\u7a7a\uff0c\u76f4\u63a5\u5f97\u5230\u7b54\u6848\n\t\t\telse\n\t\t\ttt=ask(1,1,m,line-ls+1,m);//\u8fdb\u5165\u67e5\u627e\n\t\t\tprintf(\"%lld\\n\",tt);\n\t\t}\n\t}\n\treturn 0;//\u6210\u529fAC\uff01\n}\n```\n\n",
        "postTime": 1571802127,
        "uid": 138650,
        "name": "\u964c\u5c0f\u90fd\u6070\u8089\u8089",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u4eba\u5199\u5e73\u8861\u6811\n\u90a3\u6211\u5c31\u6765\u4e00\u53d1splay\u5427~~\n\n\u64cd\u4f5cQ\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c;\n\n\u64cd\u4f5cA\u52a0\u70b9;\n\nsplay\u7684\u57fa\u7840\u64cd\u4f5c\n\n\u521a\u5f00\u59cb\u7b2c\u4e5d\u4e2a\u70b9\u53cd\u590dTLE o(\u2565\ufe4f\u2565)o\n\n\u540e\u6765\u53d1\u73b0\u968f\u4fbfsplay\u4e00\u4e0b\u5c31\u597d\u4e86.\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=200020;\nstruct splay_node\n{\n\tint son[2],fa;\n\tlong long maxl,v;\n}tree[maxn];\nint n,tot=1,root;//tot\u603b\u7ed3\u70b9\u6570+1 \nlong long t=0;\nlong long mod;\nvoid update(int now)\n{\n\tint lc=tree[now].son[0],rc=tree[now].son[1];\n\ttree[now].maxl=tree[now].v;\n\tif(lc)tree[now].maxl=max(tree[now].maxl,tree[lc].maxl);\n\tif(rc)tree[now].maxl=max(tree[now].maxl,tree[rc].maxl);\n}\nvoid rotate(int now)\n{\n\tint f=tree[now].fa,g=tree[f].fa;\n\tint flag=tree[f].son[1]==now;\n\ttree[now].fa=g;\n\ttree[g].son[tree[g].son[1]==f]=now;\n\ttree[f].son[flag]=tree[now].son[flag^1];\n\ttree[tree[now].son[flag^1]].fa=f;\n\ttree[now].son[flag^1]=f;\n\ttree[f].fa=now;\n\tupdate(f);update(now);\n}\nvoid splay(int now,int goal)\n{\n\twhile(tree[now].fa!=goal)\n\t{\n\t\tint f=tree[now].fa,g=tree[f].fa;\n\t\tif(g!=goal)\n\t\t(tree[f].son[0]==now)^(tree[g].son[0]==f)?rotate(now):rotate(f);\n\t\trotate(now);\n\t}\n\tif(!goal)root=now;\n}\nvoid insert(long long value,int number)\n{\n\tint now=root,f=0;\n\twhile(now)\n\t{\n\t\tf=now;\n\t\tnow=tree[now].son[now<number];\n\t}\n\ttot++;\n\tnow=number;\n\ttree[now].fa=f;\n\ttree[f].son[f<number]=now;\n\ttree[now].v=value;update(now);\n\tsplay(now,0);\n}\nlong long query(int l)\n{\n\tif(l==tot-1)\n\t{\n\t\tsplay(1,0);\n\t\tlong long ans=tree[1].maxl;\n\t\tsplay(tot-1,0);\\\\\u968f\u4fbfsplay\u4e00\u4e0b\uff0c\u56e0\u4e3a1\u7ed3\u70b9\u6ca1\u6709\u5de6\u5b50\u6811\uff0c\u4ee51\u7ed3\u70b9\u4e3a\u6839\uff0c\u4f1a\u5bfc\u81f4\u6574\u9897\u6811\u6781\u4e0d\u5e73\u8861 \n\t\treturn ans;\n\t}\n\tsplay(tot-l-1,0);\\\\\u5c06\u7b2ctot-l-1\u4e2a\u70b9\u65cb\u8f6c\u5230\u6839,\u6839\u7684\u53f3\u5b50\u6811\u5373\u4e3atot-l\u2014\u2014tot-1\u533a\u95f4; \n\treturn tree[tree[root].son[1]].maxl;\n}\nint main()\n{\n\tchar op;\n\tlong long x;\n\tscanf(\"%d%lld\",&n,&mod);\n\twhile(n--)\n\t{\n\t\tscanf(\"\\n%c%lld\",&op,&x);\n\t\tif(op=='Q')printf(\"%lld\\n\",t=query(x));\n\t\tif(op=='A')insert((x+t)%mod,tot);\n\t}\t\n\treturn 0;\n}\n```",
        "postTime": 1519308971,
        "uid": 19951,
        "name": "Reaepita",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "**\u5c0f\u5e7f\u544a: \u5728[\u6b64\u5904](https://linhk1606.github.io/2020/01/15/solution-luogu-1198/)\u98df\u7528\u6700\u4f73**\n\n# \u80cc\u666f\n\n\u521d\u4e8c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3...\n\n# \u89e3\u9898\u601d\u8def\n\n* ST\u8868\n\n\u4ee4 $st[ i ][ j ]$ \u4e3a $\\max \\limits_{1 \\leq t \\leq (i + 2^j - 1)} arr[t]$\n\n\u6bcf\u5728\u5e8f\u5217 $arr$ \u7684\u540e\u9762\u52a0\u5165\u4e00\u4e2a\u65b0\u503c(\u5047\u8bbe\u662f $arr[ n ]$)\u65f6\n\n\u5b83\u53ea\u4f1a\u5f71\u54cd\u5230\u4e00\u7c7b $st[ i ][ j ]$ \u5f53\u4e14\u4ec5\u5f53\n\n$$i + 2^j - 1 = n$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u4f1a\u5f71\u54cd\u5230\u6240\u6709**\u7ec8\u70b9\u4e3a$n$\u7684\u533a\u95f4**\n\n\u5c06\u4e0a\u8ff0\u5f0f\u5b50\u53d8\u5f62\u5f97:\n\n$$i = n - 2^j + 1$$\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7a77\u4e3e\u8fd9\u4e2a$j$\uff0c\u4f7f\u5f97 $1 \\leq 2^j \\leq n$\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5b9a\u51fa\u8fd9\u4e2a\u957f\u4e3a$j$\uff0c\u7ec8\u70b9\u4e3a$n$\u7684\u533a\u95f4:\n\n$$st[ i ][ j ] = st[ n - 2^j + 1 ][j]$$\n\n# Talk is cheap, show me the code.\n## Insert \u51fd\u6570 (\u533a\u95f4\u4fee\u6539)\n\n```cpp\nvoid insert(ll num) {\n    n++;\n    st[n][0] = num; //\u521d\u59cb\u5316\n    for (int i = 1; (1 << i) <= n; i++) {\n        int tmp = n - (1 << i) + 1;\n        st[tmp][i] = max(st[tmp][i - 1], st[tmp + (1 << (i - 1))][i - 1]); //\u8fd9\u91cc\u7684tmp\u5176\u5b9e\u5c31\u662f\u539f\u6587\u4e2d\u7684i, \u540c\u7406\uff0c\u8fd9\u91cc\u7684i\u662f\u539f\u6587\u4e2d\u7684j\n    }\n}\n```\n## Solve \u51fd\u6570 (\u533a\u95f4\u6c42\u6700\u503c)\n\n```cpp\n// \u53c2\u6570l\u4ee3\u8868\u8fd4\u56de\u7684\u662f\u957f\u5ea6\u4e3a l \uff0c\u7ec8\u70b9\u4e3a n \u7684\u533a\u95f4\u6700\u5927\u503c\nll solve(int l) {\n    int k = (int)(log(double(l)) / log(2.0)); // \u4e0d\u61c2log\u6362\u5e95\u516c\u5f0f\u7684\u8bf7\u81ea\u884c\u7ffb\u9605\u9ad8\u4e2d\u5fc5\u4fee\u56db\n    return max(st[n - l + 1][k], st[n - (1 << k) + 1][k]);\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801:\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\ntypedef long long ll;\nconst int ASK_SZ = 200001, LOG = 50;\n\nint m;\nll d, last_ans;\nint n;\nll st[ASK_SZ][LOG];\n\nll solve(int l);\nvoid insert(ll num);\n\nint main() {\n    char op;\n    ll num;\n    cin >> m >> d;\n    for (int i = 1; i <= m; i++) {\n        cin >> op >> num;\n        if (op == 'Q') {\n            cout << (last_ans = solve(num)) << '\\n';\n        }\n        else {\n            insert((num + last_ans) % d);\n        }\n    }\n    return 0;\n}\n\nll solve(int l) {\n    int k = (int)(log(double(l)) / log(2.0));\n    return max(st[n - l + 1][k], st[n - (1 << k) + 1][k]);\n}\n\nvoid insert(ll num) {\n    n++;\n    st[n][0] = num;\n    for (int i = 1; (1 << i) <= n; i++) {\n        int tmp = n - (1 << i) + 1;\n        st[tmp][i] = max(st[tmp][i - 1], st[tmp + (1 << (i - 1))][i - 1]);\n    }\n}\n\n```",
        "postTime": 1567607426,
        "uid": 106887,
        "name": "Reqwey",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u534e\u4e3d\u4e3d\u7684\u767b\u573a\u4e86\uff01\n\n\u3010\u9898\u76ee\u5927\u610f\u3011\n\n1\u3001\u67e5\u8be2\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aQ L\u529f\u80fd\uff1a\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\n\n2\u3001 \u63d2\u5165\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aA n\u529f\u80fd\uff1a\u5c06n\u52a0\u4e0at\uff0c\u5176\u4e2dt\u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u8fd8\u672a\u6267\u884c\u8fc7\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219t=0)\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570D\u53d6\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\n\n\u3010\u7b97\u6cd5\u8ba8\u8bba\u3011\n\n\u8fd0\u7528\u7ebf\u6bb5\u6811\u7684\u7b97\u6cd5\u3002\u9996\u5148\u5efa\u6811\uff0c\u628a\u6240\u6709\u7684\u8282\u70b9\u7684\u503c\u8d4b\u6210min\\_int\u3002\u7528[i,j]\u8868\u793a\u8be5\u533a\u95f4\u7684\u6700\u5927\u503c\u3002\n\n1\uff09\u8bfb\u5165Q L\u64cd\u4f5c\u3002\u7528len\u8868\u793a\u533a\u95f4\u7684\u5927\u5c0f\uff0c\u5728len+1\u7684\u4f4d\u7f6e\u653e\u5165\uff08L+T)%D\u7684\u503c\u3002\n\n2\uff09\u8bfb\u5165A n\u64cd\u4f5c\u3002\u8f93\u51fa\u533a\u95f4[len-n+1,len]\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5e76\u628at\u7684\u503c\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u5f97\u5206\uff1a100\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(4\\*n)\n\n\u3010C++\u4ee3\u7801\u3011\n\n```cpp\n\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#define maxn 200001\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\nusing namespace std;\nconst int n=maxn-1;\nint ma[maxn<<2],t,d,m,len;\nvoid build(int l,int r,int rt)\n{\n    ma[rt]=-2147283647;\n    if (l==r)return;\n    int mid=(l+r)>>1;\n    build(lson);build(rson);\n}\nvoid update(int l,int r,int rt,int i,int j)\n{\n    if (l==r){ma[rt]=j;return;}\n    int mid=(l+r)>>1;\n    if (i<=mid)update(lson,i,j);\n    else update(rson,i,j);\n    ma[rt]=max(ma[rt<<1],ma[rt<<1|1]);\n}\nint query(int l,int r,int rt,int i,int j)\n{\n    \n    if (i<=l && r<=j)return ma[rt];\n    int mid=(l+r)>>1,o=-2147483647;\n    if (i<=mid)o=query(lson,i,j);\n    if (j>mid)o=max(o,query(rson,i,j));\n    return o;\n}\nint main ()\n{\n    scanf (\"%d%d\",&m,&d);\n    build(1,n,1);\n    for (int b=1;b<=m;++b)\n    {\n        char c;int i;\n        cin >>c;scanf (\"%d\",&i);\n        if (c=='A'){len++;update(1,n,1,len,(i+t)%d);}\n        else {t=query(1,n,1,len-i+1,len);printf (\"%d\\n\",t);}\n    }\n    return 0;\n}\n\n```",
        "postTime": 1438528866,
        "uid": 171,
        "name": "Timothy",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n**\u7ebf\u6bb5\u6811**\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u503c + \u5355\u70b9\u4fee\u6539\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u5341\u5206\u4f18\u79c0~~\u6bd2\u7624~~\u7684\u4fee\u6539\u65b9\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u90fd\u8bb0\u4e0b\u5f53\u524d\u8be2\u95ee\u7684\u503c\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u4fee\u6539\u53c8\u4f1a\u7528\u5230\u3002\u540c\u65f6\u6211\u4eec\u53c8\u8981\u8bb0\u5f55\u4fee\u6539\u6b21\u6570\uff08\u5f53\u524d\u70b9\uff09\uff0c\u540c\u6837\u4fee\u6539\u5bf9\u4e8e\u8be2\u95ee\u4e5f\u662f\u6709\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728`cnt`\u548c`pr`\u4e4b\u95f4\u6765\u56de\u64cd\u4f5c\uff0c\u90a3\u4e48\u4e3b\u51fd\u6570\u4e2d\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u5904\u7406\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nif (c == 'A') {\n\tint x = rd();\n\tcnt ++ ;\n\tx = (x + pr) % mod;\n\tfix(1, 1, m, cnt, x);\n}\nelse {\n\tint x = rd();\n\tpr = query(1, 1, m, cnt - x + 1, cnt);\n\tprintf(\"%d\\n\", pr);\n}\n```\n\n\u5176\u4ed6\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u4fee\u6539\u3001\u67e5\u8be2\u6a21\u677f\uff0c\u76f4\u63a5\u5957\u7528\u5373\u53ef\u3002\u8fd9\u91cc\u624b\u5199\u4e86\u4e00\u4e0b\u5b8f\u5b9a\u4e49\u7684`Max`\u636e\u8bf4\u4f1a\u5feb\uff01\uff01\uff01\n\n\u4fee\u6539\uff1a\n\n```cpp\nvoid fix(int pos, int l, int r, int id, int val) {\n\tint mid = (l + r) >> 1;\n\tif (l == r) {\n\t\ttree[pos] = val;\n\t\treturn ;\n    }\n\tif (id <= mid) {\n\t\tfix(lson, l, mid, id, val);\n\t}\n\telse {\n\t\tfix(rson, mid + 1, r, id, val);\n\t}\n\ttree[pos] = Max(tree[lson], tree[rson]);\n}\n```\n\n\u67e5\u8be2\uff1a\n\n```cpp\nint query(int pos, int l, int r, int x, int y) {\n\tif (x <= l && r <= y) {\n\t\treturn tree[pos];\n    }\n\tint mid = (l + r) >> 1;\n\tint ans = 0;\n\tif (x <= mid) {\n\t\tans = max(ans, query(lson, l, mid, x, y));\n\t}\n\tif (mid < y) {\n\t\tans = max(ans, query(rson, mid + 1, r, x, y));\n\t}\n\treturn ans;\n}\n```\n\n\n\n\u5bf9\u4e86\u4e0d\u8981\u5fd8\u8bb0\u6700\u5f00\u59cb\u9700\u8981\u628a`tree[]`\u6570\u7ec4\u8d4b\u4e00\u4e2a\u6781\u5c0f\u503c\uff01\uff01\uff01\uff01\n\n## AC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\n#define lson pos << 1\n\n#define rson pos << 1 | 1\n\n#define Max(x, y) ((x) > (y) ? (x) : (y))\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int inf = 0x3f3f3f3f;\n\nconst int N = 200020;\n\nchar s[10];\n\nll tree[N * 4], mod;\n\nint m, cnt, pr;\n\nchar *p1, *p2, buf[100000];\n\n#define nc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1 ++ )\n\nint rd() {\n\tint x = 0, f = 1;\n\tchar c = nc();\n\twhile (c < 48) {\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = nc();\n\t}\n\twhile (c > 47) {\n\t\tx = (((x << 2) + x) << 1) + (c ^ 48), c = nc();\n\t}\n\treturn x * f;\n}\n\nll rd2() {\n\tll x = 0;\n\tchar c = nc();\n\twhile (c < 48) {\n\t\tc = nc();\n\t}\n\twhile (c > 47) {\n\t\tx = (((x << 2) + x) << 1) + (c ^ 48), c = nc();\n\t}\n\treturn x;\n}\n\nvoid fix(int pos, int l, int r, int id, int val) {\n    int mid = (l + r) >> 1;\n    if (l == r) {\n        tree[pos] = val;\n        return ;\n    }\n    if (id <= mid) {\n        fix(lson, l, mid, id, val);\n    }\n    else {\n        fix(rson, mid + 1, r, id, val);\n    }\n    tree[pos] = Max(tree[lson], tree[rson]);\n}\n\nint query(int pos, int l, int r, int x, int y) {\n    if (x <= l && r <= y) {\n        return  tree[pos];\n    }\n    int mid = (l + r) >> 1;\n\tint ans = 0;\n\tif (x <= mid) {\n\t\tans = max(ans, query(lson, l, mid, x, y));\n\t}\n\tif (mid < y) {\n\t\tans = max(ans, query(rson, mid + 1, r, x, y));\n\t}\n\treturn ans;\n}\n\nint main() {\n    memset(tree, -inf, sizeof tree);\n\tm = rd(), mod = rd2();\n    for (int i = 1; i <= m; i ++ ) {\n\t\tchar c = nc();\n\t\twhile (c != 'A' && c != 'Q') {\n\t\t\tc = nc();\n\t\t}\n        if (c == 'A') {\n            int x = rd();\n            cnt ++ ;\n            x = (x + pr) % mod;\n            fix(1, 1, m, cnt, x);\n        }\n        else {\n            int x = rd();\n            pr = query(1, 1, m, cnt - x + 1, cnt);\n            printf(\"%d\\n\", pr);\n        }\n    }\n    return 0;\n}\n```\n\n ",
        "postTime": 1568724072,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# What\uff0c\u9898\u89e3\u91cc\u6ca1\u6709\u6811\u72b6\u6570\u7ec4\u7684\u505a\u6cd5\uff1f\uff1f\n\n\u7ebf\u6bb5\u6811\u591a\u96be\u5199\u554a\u2026\u2026~~\u4e00\u770b\u5c31\u4e0d\u60f3\u5199~~\uff0c\u4e8e\u662f\u6211\u5c31\u5199\u4e86\u4e00\u4e2aBIT\u2026\u2026\n\n\u8fdb\u5165\u6b63\u9898\uff1a\u7528BIT\u7ef4\u62a4\u6574\u4e2a\u6570\u5217\uff0cA\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5728BIT\u7684\u7b2c$n+1$\u4e2a\u4f4d\u7f6e\u6267\u884c\u66f4\u65b0\uff0cQ\u64cd\u4f5c\u76f8\u5f53\u4e8e\u67e5\u8be2\u540e$L$\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002\u6ce8\u610f\u8fd9\u91cc\u8981\u5b9e\u73b0\u7684\u662f\u540e\u7f00BIT\u800c\u4e0d\u662f\u524d\u7f00BIT\u3002BIT\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\uff0c~~\u5728P3688\u91cc\u5df2\u7ecf\u5199\u660e\u4e86\uff0c\u81ea\u5df1\u770b\u53bb\u5c31\u597d\u4e86\u3002~~\n\n\u6ce8\u610f\u70b9\uff1a\n1.\u8981\u5f00long long\u3002\u9898\u76ee\u4e2d\u8bf4\u4e86$n+t$\u5728\u957f\u6574\u578b\u8303\u56f4\u5185\u3002\n2.BIT\u6570\u7ec4\u521d\u59cb\u5316\u8981\u521d\u59cb\u5316\u4e3a$-INF$\u3002\n\nmy code:\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\nlong long a[200005], n;\n\ninline long long LowBit(long long x) {\n\treturn x & -x;\n}\n\ninline void Update(int i, long long x) {\n\tfor (int j = i;j >= 1;j -= LowBit(j)) {\n\t\ta[j] = max(a[j], x);\n\t}\n}\n\ninline long long Query(int i) {\n\tlong long ans = 0xcfcfcfcfcfcfcfcf;\n\tfor (int j = i;j <= n;j += LowBit(j)) {\n\t\tans = max(ans, a[j]);\n\t}\n\treturn ans;\n}\n\nvoid Solve() {\n\tint m;\n\tlong long d, t = 0;\n\tscanf(\"%d%lld\", &m, &d);\n\tmemset(a, 0xcf, sizeof(a));\n\tfor (int i = 1;i <= m;i++) {\n\t\tchar op;\n\t\tlong long x;\n\t\tcin >> op >> x;\n\t\tif (op == 'A') {\n\t\t\tUpdate(++n, (x + t) % d);\n\t\t} else {\n\t\t\tprintf(\"%lld\\n\", t = Query(n - x + 1));\n\t\t}\n\t}\n}\n\nint main() {\n\tSolve();\n\treturn 0;\n}\n```",
        "postTime": 1550581650,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011P1198 [JSOI2008]\u6700\u5927\u6570"
    },
    {
        "content": "~~**NOIP\u4e00\u65e5\u796d**~~\n\n\u9996\u5148\u770b\u9898\u76ee..\u55ef\uff0c\u533a\u95f4\u6700\u5927\u6570\n\n\u5728\u770b\u4e00\u773c\uff0cn=2e5\uff0c~~\u7ebf\u6bb5\u6811\u6a21\u677f~~\n\n\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u7528\u975e\u9012\u5f52\u7248\u7ebf\u6bb5\u6811\uff08zkw\u7ebf\u6bb5\u6811\uff09\n\n~~\u4e8b\u5b9e\u8bc1\u660e\u5b8c\u7206\u9012\u5f52\u7ebf\u6bb5\u6811~~\n\nQ\uff1a\u4ec0\u4e48\u662fzkw\u7ebf\u6bb5\u6811\n\nA\uff1a\u5c31\u662f\u5f20\u6606\u73ae\u7ebf\u6bb5\u6811\uff08\u9003\n\nQ\uff1a\u5b83\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u6709\u4ec0\u4e48\u5dee\uff1f\n\nA: ~~\u5b83\u4e0d\u9012\u5f52~~ ~~\u5b83\u77ed~~ ~~\u5b83\u597d\u8c03~~\n\n   **\u6700\u91cd\u8981\u7684\u662f\u5e38\u6570\u5c0f\uff08\u53ef\u4ee5\u5ab2\u7f8e\u6811\u72b6\u6570\u7ec4\uff09**\n   \n   \u90a3\u600e\u4e48\u5199\u5462\uff1f\n   \n   \u9996\u5148\u4f1a\u53d1\u73b0\u5806\u5b58\u50a8\u6709\u4e2a\u7279\u70b9\n   \n   \u5c31\u662f\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u7f16\u53f7\u7b49\u4e8e\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\n   \n  **EX\uff1a\u8be2\u95ee[L,R]? **\n   \n   \u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u77e5\u9053L\u548cR\u6700\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u9010\u5c42\u5411\u4e0a\u5bfb\u627e/\u67e5\u8be2\n   \n   **\u8fd9\u91cc\u628a\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u8bb0\u4f5cM**\n\n**\uff08\u7b2c\u4e8c\u4e2a\u53f6\u5b50\u8282\u70b9\u624d\u662f\u771f\u6b63\u5b58\u503c\u7684\uff0c\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u90fd\u662f\u865a\u70b9\uff09**\n   \n   \u600e\u4e48\u5b9e\u73b0\uff1f\n   \n```cpp\nLL z[4*N],M;\nvoid Build()\n{\n\tfor(M=1;M<m+2;M<<=1);\n}\n```\n\n\u597d\u4e86\u6211\u4eec\u5df2\u7ecf\u5efa\u5b8c\u4e86\u4e00\u9897\u7a7a\u6811\n\n**\u7136\u540e\uff1f\u6dfb\u52a0\u4e00\u4e2a\u6570\uff01\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u539f\u672c\u4e3a0\u7684\u5730\u65b9\u52a0\u4e0a\u4e00\u4e2a\u6570\uff09\n**\n\n**PS\uff1a\u8fd9\u9898\u4e8b\u5b9e\u4e0a\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4e0d\u8fc7\u6211\u7528\u7684\u662f\u533a\u95f4\u4fee\u6539\u7684\u5199\u6cd5**\n\n```cpp\nvoid update(int l,int r,LL x)\n{\n\tLL temp;\n\tfor(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n\t{\n\t\tif (~l&1) z[l^1]+=x;\n\t\tif (r&1) z[r^1]+=x;\n\t\ttemp=max(z[l],z[l^1]);z[l]-=temp;z[l^1]-=temp;z[l>>1]+=temp;\n\t\ttemp=max(z[r],z[r^1]);z[r]-=temp;z[r^1]-=temp;z[r>>1]+=temp;\n\t}\n\tfor(l;l!=1;l>>=1)\n\t{\n\t\ttemp=max(z[l],z[l^1]);z[l]-=temp;z[l^1]-=temp;z[l>>1]+=temp;\n\t}\n\treturn ;\n}\n```\n\n\u8fd9\u91cc\u7528\u5230\u4e86\u5dee\u5206\uff0c\u628a\u8282\u70b9\u548c\u4ed6\u7236\u8282\u70b9\u5dee\u5206\n\n\u5e76\u4e14\u7528\u5230\u4e86\u4e00\u4e2a\u5c0f\u6280\u5de7 \u5c06[L,R]\u53d8\u4e3a(L-1,R+1)\n\n\u8fd9\u6837\u4f60\u4f1a\u53d1\u73b0\u53ea\u6709\u5f53L\u4e3a\u5de6\u5b69\u5b50\u65f6\uff0c\u5176\u53f3\u5144\u5f1f\u5728\u88ab[L,R]\u5305\u542b\uff08R\u540c\u7406\uff09\n\n\u4fee\u6539\u5b9e\u9645\u4e0a\u5c31\u662f\u5148\u4fee\u6539\u53f6\u5b50\uff0c\u7136\u540e\u518d\u9010\u5c42\u5411\u4e0a\u7ef4\u62a4\u5dee\u5206\u7684\u8fc7\u7a0b\n\n**\u518d\u7136\u540e\uff1f\u533a\u95f4\u67e5\u8be2\uff01**\n```cpp\nLL query(int l,int r)\n{\n\tLL L=-INF,R=-INF,ans;\n\tfor(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n\t{\n\t\tL+=z[l];R+=z[r];\n\t\tif (~l&1) L=max(L,z[l^1]);\n\t\tif (r&1) R=max(R,z[r^1]);\n\t}\n\tans=max(L+z[l],R+z[r]);\n\tfor(l>>=1;l;l>>=1)\n\t{\n\t\tans+=z[l];\n\t}\n\treturn ans;\n}\n```\n\n\u8fd9\u91cc\u6bcf\u6b21\u8ba9L+=z[l],R+=z[r]\u5b9e\u9645\u4e0a\u5c31\u662f\u8ba9\u8ba9\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u4e0e\u7236\u8282\u70b9\u7684\u5dee\u503c \u7136\u540e\u5728\u548c\u5144\u5f1f\u6bd4\u8f83\u2026\n\n\n\u5b9e\u9645\u4e0a\u548c\u4fee\u6539\u662f\u4e00\u4e2a\u9053\u7406\n\nCode \uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define LL long long\n#define N 201000\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\nvoid read(LL &x)\n{\n\tLL t=0,opt=1;\n\tchar c=getchar();\n\twhile (c<'0'||c>'9') (c=='-'?opt=-1:0),c=getchar();\n\twhile ('0'<=c&&c<='9')\n\t{\n\t\tt=t*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx=t*opt;return ;\t\n} \nvoid print(LL x)\n{\n\tif (x<0) putchar('-'),print(-x);\n\telse\n\t{\n\t\tif (x>9) print(x/10);\n\t\tputchar('0'+x%10);\n\t}\n}\nLL m,mod,last_ans=0,cnt=0,temp,len,z[N*4],M;\nchar opt;\nvoid Build()\n{\n\tfor(M=1;M<m+2;M<<=1);\n}\nLL query(int l,int r)\n{\n\tLL L=-INF,R=-INF,ans;\n\tfor(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n\t{\n\t\tL+=z[l];R+=z[r];\n\t\tif (~l&1) L=max(L,z[l^1]);\n\t\tif (r&1) R=max(R,z[r^1]);\n\t}\n\tans=max(L+z[l],R+z[r]);\n\tfor(l>>=1;l;l>>=1)\n\t{\n\t\tans+=z[l];\n\t}\n\treturn ans;\n}\nvoid update(int l,int r,LL x)\n{\n\tLL temp;\n\tfor(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n\t{\n\t\tif (~l&1) z[l^1]+=x;\n\t\tif (r&1) z[r^1]+=x;\n\t\ttemp=max(z[l],z[l^1]);z[l]-=temp;z[l^1]-=temp;z[l>>1]+=temp;\n\t\ttemp=max(z[r],z[r^1]);z[r]-=temp;z[r^1]-=temp;z[r>>1]+=temp;\n\t}\n\tfor(l;l!=1;l>>=1)\n\t{\n\t\ttemp=max(z[l],z[l^1]);z[l]-=temp;z[l^1]-=temp;z[l>>1]+=temp;\n\t}\n\treturn ;\n}\nint main()\n{\n\tread(m);read(mod);\n\tBuild();\n\tFor(i,1,m)\n\t{\n\t\tscanf(\" %c\",&opt);\n\t\tif (opt=='Q')\n\t\t{\n\t\t\tread(len);\n\t\t\tlast_ans=query(cnt-len+1,cnt);\n\t\t\tprint(last_ans),putchar('\\n');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(temp);\n\t\t\ttemp=((temp+last_ans)%mod)%mod;\n\t\t\t++cnt;update(cnt,cnt,temp);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1541669179,
        "uid": 87510,
        "name": "\u54af\u54af\u54af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "### \u6811\u72b6\u6570\u7ec4\u5199\u6cd5\n\u770b\u89c1\u90a3\u4e48\u591a\u7684dalao\u7528\u5355\u8c03\u6808\uff0c\u7ebf\u6bb5\u6811\uff0c\u672c\u849f\u84bb\u89c9\u5f97\u90a3\u4e9b\u4ee3\u7801\u592a\u957f\uff0c\u4e8e\u662f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u89e3\u8fd9\u9053\u9898\u3002~~\u7b97\u662f\u4e00\u79cd\u5de7\u5999\u7684\u89e3\u6cd5\u5427~~\uff0c\u53ef\u5948\u4f55\u672c\u849f\u84bb\u4ee3\u7801\u80fd\u529b\u5dee\uff0c\u5199\u989810\u5206\u949f\uff0cdebug\u4e00\u5c0f\u65f6\u3002\u4e0d\u61c2\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2https://www.cnblogs.com/KyleDeng/p/9368201.html\n\n#### \u4e3a\u4ec0\u4e48\u4f1a\u60f3\u5230\u7528\u6811\u72b6\u6570\u7ec4\u5462\uff1f\n\u8bfb\u9898\u540e\u53d1\u73b0\u9898\u76ee\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u67e5\u8be2\u52a0\u4e0a\u5355\u70b9\u63d2\u5165\u64cd\u4f5c\u3002\u6240\u4ee5\u5f88\u81ea\u7136\u60f3\u5230\u4e86\u6811\u72b6\u6570\u7ec4\uff0c\n\n### \u601d\u8def\n\n**1\uff09\u5efa\u6811\u72b6\u6570\u7ec4  **\n\u62ff\u5230\u9898\u5c31\u53d1\u73b0\u8fd9\u9053\u9898\u662f\u67e5\u8be2\u65b9\u5411\u662f\u53cd\u7740\u6765\u7684\u201c\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\u201d\u6240\u4ee5\u5efa\u6570\u7ec4\u7684\u65f6\u5019\u6211\u4eec\u5c31\u628ak\uff08k\u662f\u52a0\u7684\u70b9\u7684\u4e2a\u6570\uff09\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c1\u4f5c\u4e3a\u7ec8\u70b9\uff0c\u7136\u540e\u66f4\u65b0\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\n\u5177\u4f53\u65b9\u5f0f\u5982\u4e0b\n```cpp\nvoid change(int x,long long c)\n{\n\twhile(x>0)//\u53ea\u8981x\u5927\u4e8e0(\u6ca1\u5230\u7ec8\u70b9\uff09\u5c31\u4e00\u76f4\u5f80\u540e\u66f4 ,x\u662f\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e,\u6bcf\u63d2\u4e00\u6b21\u66f4\u65b0\u4e00\u6b21 \n\t{\n\t\tc_tree[x]=max(c_tree[x],c);//\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c \n\t\tx=x-lowbit(x);//\u7ee7\u7eed\u5f80\u540e\u66f4\u65b0 \n\t}\n}\n```\n**2\uff09\u67e5\u8be2 **   \n\u67e5\u8be2\u4e5f\u662f\u4e00\u4e2a\u5751\u70b9\uff0c\u6b64\u65f6\u672b\u5c3el\u4e2a\u6570\u5b9e\u9645\u4e0a\u662f\u5f00\u5934l\u4e2a\u6570\uff0c\u5982\u679c\u6211\u4eec\u4ecel\u5f00\u59cb\u67e5\u8be2\u7684\u8bdd\u610f\u5473\u8fd91\u5c31\u662f\u8d77\u70b9\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u5012\u7740\u6765\u7528k-l+1\u626b\u5230k\n```cpp\nint getsum(int x)\n{\n\tlong long MAXN=-9999;\n\twhile(x<=k)//k\u4e3a\u8d77\u70b9,\u53ea\u8981\u6ca1\u6709\u5230k,\u90a3\u5c31\u7ee7\u7eed\u641e\u6700\u5927\u503c \n\t{\n\t\t//cout<<\"1: \"<<x<<endl;debug\u7528 \n\t\tMAXN=max(c_tree[x],MAXN);//c_tree[x]\u53ea\u80fd\u4ee3\u8868\u533a\u95f4\u6700\u5927\u503c,\u6240\u4ee5\u8981\u591a\u6b21\u6bd4\u8f83 \n\t\tx=x+lowbit(x);//\u7ee7\u7eed\u5411\u4e0a \n\t}\n\treturn MAXN;\n} \n\n//\u4f20\u5165\u8fc7\u7a0b\nflag=getsum(k-l+1);//\u7384\u5b66\u53cd\u5411\u64cd\u4f5c\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6570\u662fk,\u6700\u540e\u4e00\u4e2a\u6570\u662f1\n```\n### \u5b8c\u6574ac\u4ee3\u7801\n\u8bf7\u52ff\u6284\u88ad\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nlong long c_tree[200005];\nlong long m,d;//m\u6b21\u64cd\u4f5c\uff0c%d \nint k=0;\n\nint lowbit(int x)\n{\n\treturn x&-x;\n}\n\nint getsum(int x)\n{\n\tlong long MAXN=-9999;\n\twhile(x<=k)//k\u4e3a\u8d77\u70b9,\u53ea\u8981\u6ca1\u6709\u5230k,\u90a3\u5c31\u7ee7\u7eed\u641e\u6700\u5927\u503c \n\t{\n\t\t//cout<<\"1: \"<<x<<endl;debug\u7528 \n\t\tMAXN=max(c_tree[x],MAXN);//c_tree[x]\u53ea\u80fd\u4ee3\u8868\u533a\u95f4\u6700\u5927\u503c,\u6240\u4ee5\u8981\u591a\u6b21\u6bd4\u8f83 \n\t\tx=x+lowbit(x);//\u7ee7\u7eed\u5411\u4e0a \n\t}\n\treturn MAXN;\n} \n\nvoid change(int x,long long c)\n{\n\twhile(x>0)//\u53ea\u8981x\u5927\u4e8e0(\u6ca1\u5230\u7ec8\u70b9\uff09\u5c31\u4e00\u76f4\u5f80\u540e\u66f4 ,x\u662f\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e,\u6bcf\u63d2\u4e00\u6b21\u66f4\u65b0\u4e00\u6b21 \n\t{\n\t\tc_tree[x]=max(c_tree[x],c);//\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c \n\t\tx=x-lowbit(x);//\u7ee7\u7eed\u5f80\u540e\u66f4\u65b0 \n\t}\n}\n\nlong long flag;\nint main()\n{\n\tcin>>m>>d; \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar cz;\n\t\tint l;\n\t\tcin>>cz\n\t\t>>l;\n\t\tif(cz=='A')\n\t\t{\n\t\t\tk++;\n\t\t\tchange(k,(l+flag)%d);\n\t\t}\n\t\tif(cz=='Q')\n\t\t{\n\t\t\tflag=getsum(k-l+1);//\u7384\u5b66\u53cd\u5411\u64cd\u4f5c\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6570\u662fk,\u6700\u540e\u4e00\u4e2a\u6570\u662f1 \n\t\t\tcout<<flag<<endl;\n\t\t}\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1532530201,
        "uid": 33698,
        "name": "\u524d\u6392\u5403\u74dc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u88f8\u9898\uff0c\u63a8\u8350\u521a\u5b66\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u6765\u7ec3\u4e00\u7ec3\n\n**\u601d\u8def\uff08\u9898\u610f\uff09\uff1a**\n\n1\uff0cA\u64cd\u4f5c\uff1a\u6539\uff08\u52a0\uff09\u70b9\n\n2\uff0cQ\u64cd\u4f5c\uff1a\u627e\uff08len2-x\uff09\u5230\uff08len2)\u4e2d\u7684\u6700\u5927\u503c \n(Q 0\u662f\u4e00\u4e2a\u5f88\u5751\u7684\u6570\u636e\u70b9\uff0c\u8981\u7279\u5224\uff0c\u8f93\u51fa0)\n\uff08\u5751\u4e86\u6211\u4e09\u6b21\u63d0\u4ea4QAQ\uff09\n```cpp\n#include<cstdio>\n#include<cstring>\n\nstruct nod{int l,r,ll,rr;long long c;}a[400010];\n//\u56e0\u4e3a\u6700\u591a\u6709n\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u591a\u52a0n\u4e2a\u70b9\uff0c\u8981\u5f002*n\u5de6\u53f3\u7684\u6570\u7ec4 \nint len,len2=0;long long t=0,m;int n;\n//len\u8868\u793a\u6811\u6709\u591a\u5c11\u4e2a\u70b9\uff0clen2\u8868\u793a\u4e00\u5171\u6709\u591a\u5c11\u52a0\u4e2a\u70b9\uff0ct\u5982\u9898\u610f \nlong long max(long long x,long long y){return x>y?x:y;}\n\nvoid bt(int l,int r)//\u5efa\u6811 \n{\n    len++;int now=len;\n    a[len].l=l;a[len].r=r;a[len].ll=a[len].rr=a[len].c=-2147483647;\n    if(l<r)\n    {\n        int mid=(l+r)/2;\n        a[now].ll=len+1;bt(l,mid);\n        a[now].rr=len+1;bt(mid+1,r);\n        a[now].c=max(a[a[now].ll].c,a[a[now].rr].c);\n    }\n}\n\nvoid change(int now,int x,long long k)//\u52a0\u70b9\uff08\u76f8\u5f53\u4e8e\u628a\u8fd9\u4e2a\u70b9\u6539\u6210k\uff09 \n{\n    if(a[now].l==a[now].r)//\u5de6\u513f\u5b50\u7b49\u4e8e\u53f3\u513f\u5b50\u8868\u793a\u63d2\u5165\u7684\u7b2cl\uff08r\uff09\u4e2a\u6570 \n    {\n        a[now].c=k;//printf(\"%d %d\\n\",now,k);\n        return;\n    }\n    int ll=a[now].ll,rr=a[now].rr,mid=(a[now].l+a[now].r)/2;\n    if(x<=mid) change(ll,x,k);\n    else if(x>mid) change(rr,x,k);\n    a[now].c=max(a[ll].c,a[rr].c);//\u7ef4\u62a4\u6700\u5927\u503c \n}\n\nlong long findsum(int now,int l,int r)//\u627e\u6700\u5927\u503c \n{\n    if(a[now].l==l&&a[now].r==r) return a[now].c;\n    int ll=a[now].ll,rr=a[now].rr,mid=(a[now].l+a[now].r)/2;\n    if(r<=mid) return findsum(ll,l,r);\n    else if(l>mid) return findsum(rr,l,r);\n    else return max(findsum(ll,l,mid),findsum(rr,mid+1,r));\n}\n\nint main()\n{\n    scanf(\"%d %lld\",&n,&m);\n    len=0;bt(1,n);//\u56e0\u4e3a\u6700\u591a\u6709n\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u591a\u52a0n\u4e2a\u70b9\uff0c\u8981\u5efa2*n\u5de6\u53f3\u4e2a\u70b9\u7684\u6811 \n    for(int i=1;i<=n;i++)\n    {\n        char v[10];scanf(\"%s\",v);//scanf\u53ea\u80fd\u7528%s\u8f93\u5165\uff0c\u56e0\u4e3a%c\u4f1a\u8bfb\u56de\u8f66\n        if(v[0]=='A')//\u8f93\u5165\u7528v+1\u7684\u540c\u5b66\u8981\u7528v[1] \n        {\n            long long c;scanf(\"%lld\",&c);\n            ++len2;change(1,len2,(c+t)%m);\n        }\n        else//\u627e\uff08len2-x\uff09\u5230\uff08len2)\u4e2d\u7684\u6700\u5927\u503c \n        {\n            int x;scanf(\"%d\",&x);if(x==0){printf(\"0\\n\");continue;}\n            t=findsum(1,len2-x+1,len2);t%=m;printf(\"%lld\\n\",t);\n        }\n        \n    }\n    return 0;\n}\n```",
        "postTime": 1524203724,
        "uid": 35290,
        "name": "royzhu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8ba9\u6211\u4eec\u6765\u6311\u6218\u4e00\u4e0b\u7ebf\u6bb5\u6811\u6700\u77ed\u4ee3\u7801\uff01\n\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/29704756)\n\n\u8d77\u521d\uff0c\u6211\u6253\u4e86\u4e00\u4e2a\u5927\u66b4\u529b\uff0c\u601d\u8def\u5c31\u662f\u6bcf\u4e00\u6b21\u66f4\u65b0\u91cd\u65b0\u5efa\u4e00\u6b21\u7ebf\u6bb5\u6811\uff0c\u5c31\u50cf\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 10000100\ninline int read ()\n{\n\tint ans=0;\n\tint flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')flag=-1;\n\t\tch=getchar ();\n\t}\n\twhile(ch>='0'&&ch<='9')ans=(ans<<1)+(ans<<3)+(ch^48),ch=getchar ();\n\treturn ans*flag;\n}\nint mx[N*3];int a[N];\ninline void Build( int k , int l , int r )\n{\n\tif(l==r)\n\t{\n\t\tmx[k]=a[l];\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tBuild(k*2,l,mid);\n\tBuild(k*2+1,mid+1,r);\n\tmx[k]=max(mx[k*2],mx[k*2+1]);\n\treturn ;\n}\ninline int ask_max( int k , int l , int r , int x, int y )\n{\n\tif(l==x&&r==y)return mx[k];\n\tint mid=l+r>>1;\n\tif(y<=mid)return ask_max(k*2,l,mid,x,y);\n\tif(x>mid)return ask_max(k*2+1,mid+1,r,x,y);\n\treturn max( ask_max(k*2,l,mid,x,mid), ask_max(k*2+1,mid+1,r,mid+1,y) );\n}\nint m,d,x,n,now;\nchar op;\nint main ()\n{\n\tm=read();d=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>op;\n\t\tif(op=='A')\n\t\t{\n\t\t\tx=read();\n\t\t\tx+=now;\n\t\t\tx%=d;\n\t\t\ta[++n]=x;\n\t\t\tBuild(1,1,n);\n\t\t\tcontinue;\n\t\t}\n\t\t//if(op=='Q')\n\t\tx=read();\n\t\tnow=ask_max(1,1,n,n-x+1,n);\n\t\tprintf(\"%d\\n\",now);\n\t}\n\treturn 0;\n}\n```\nemmm\uff0c\u53ea\u8fc7\u4e86\u4e24\u4e2a\u70b9\uff0c\u5176\u4f59\u7684TLE\u3002\n\n\u5728\u5c1d\u8bd5\u66b4\u529b\u5931\u8d25\u540e\uff0c\u5f00\u59cb\u6253\u6b63\u89e3\uff0c\u6807\u51c6\u7684\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7ebf\u6bb5\u6811\u3002\n\n\u5148\u8bf4\u8bf4\u5728\u6b64\u9898\u4e2d\u7ebf\u6bb5\u6811\u7684\u51e0\u79cd\u64cd\u4f5c\uff1a\n\n\u533a\u95f4\u67e5\u8be2\uff1a\n\n```cpp\ninline int ask_max( int k , int l , int r , int x, int y )\n{\n\tif(l==x&&r==y)return mx[k];\n\tint mid=l+r>>1;\n\tif(y<=mid)return ask_max(k<<1,l,mid,x,y);\n\tif(x>mid)return ask_max(k<<1|1,mid+1,r,x,y);\n\treturn max( ask_max(k<<1,l,mid,x,mid), \t ask_max(k<<1|1,mid+1,r,mid+1,y) );\n}\n```\n\u5355\u70b9\u4fee\u6539\uff1a\n\n```cpp\nvoid Build(int k,int l,int r,int x)\n{\n\tif(l==r&&l==x)\n\t{\n\tmx[k]=a[l];return;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) Build(k*2,l,mid,x);\n\telse Build (k*2+1,mid+1,r,x);\n\tmx[k]=max(mx[k*2],mx[k*2+1]);\n}\n```\n\n\u7136\u540e\uff0c\u8bb0\u5f55\u4e00\u4e0b\u67e5\u8be2\u5f97\u5230\u7684\u7b54\u6848\uff0c\u65b9\u4fbf\u5728\u4e0b\u4e00\u6b21\u7528\uff0c\u67e5\u8be2\u7684\u8303\u56f4\u53ef\u4ee5\u4ece1\u5230m\uff0cAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint mx[10000100*3],a[10000100],m,d,x,n,now;char op;\ninline void Build(int k,int l,int r,int x)\n{\n\tif(l==r&&l==x)\n\t{\n\tmx[k]=a[l];return;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid) Build(k<<1,l,mid,x);\n\telse Build (k<<1|1,mid+1,r,x);\n\tmx[k]=max(mx[k<<1],mx[k<<1|1]);\n}\ninline int ask_max( int k , int l , int r , int x, int y )\n{\n\tif(l==x&&r==y)return mx[k];\n\tint mid=l+r>>1;\n\tif(y<=mid)return ask_max(k<<1,l,mid,x,y);\n\tif(x>mid)return ask_max(k<<1|1,mid+1,r,x,y);\n\treturn max( ask_max(k<<1,l,mid,x,mid), ask_max(k<<1|1,mid+1,r,mid+1,y) );\n}\nint main ()\n{\n\tcin>>m>>d;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>op;\n\t\tif(op=='A')\n\t\t{\n\t\t\tcin>>x,x+=now,x%=d,a[++n]=x;\n\t\t\tBuild(1,1,m,n);\n\t\t\tcontinue;\n\t\t}\n\t\tcin>>x;\n\t\tnow=ask_max(1,1,m,n-x+1,n);\n\t\tprintf(\"%d\\n\",now);\n\t}\n}\n```\n\n\u8fd9\u6837\u5c31AC\u4e86\uff0c\u671b\u91c7\u7eb3~",
        "postTime": 1580013615,
        "uid": 189181,
        "name": "exit0",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# \u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011\n[$\\mathfrak{View\\space it\\space on\\space my\\space Blog}$](https://blog.seniorious.cc/2020/luogu-5395/)\n## \u601d\u8def\n\u663e\u800c\u6613\u89c1\uff0c\u540e\u5165\u961f\u7684\u7ed3\u70b9\u5982\u679c\u6bd4\u524d\u9762\u7684\u5927\uff0c\u90a3\u4e48\u524d\u9762\u7684\u4e00\u5b9a\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e(\u5982\u679c\u67e5\u8be2\u7684\u533a\u95f4\u5305\u62ec\u524d\u9762\u7684\uff0c\u5219\u4e00\u5b9a\u5305\u62ec\u540e\u9762\u7684)\n\n\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u5355\u8c03\u6027\n\n### \u7b97\u6cd51\n\u7ef4\u62a4\u4e00\u4e2a\u9012\u589e\u7684\u5355\u8c03\u6808\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5728\u8be2\u95ee\u8303\u56f4\u5185\u7684\n\n#### \u590d\u6742\u5ea6\u5206\u6790\n1. \u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u5165\u6808\u4e00\u6b21\n2. \u6bcf\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f$O(log_2n)$\u7684\n3. \u603b\u590d\u6742\u5ea6$O(n+qlog_2n)$\n\n\u671f\u671b\u5f97\u5206100\u5206\n\n### \u7b97\u6cd52\n\u8003\u8651\u5bf9\u7b97\u6cd51\u8fdb\u884c\u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u7b97\u6cd51\u7684\u67e5\u8be2\u8f83\u6162\uff0c\u8003\u8651\u662f\u5426\u80fd$O(1)$\u67e5\u8be2\uff0c\u8003\u8651\u4e0d\u5c06\u5bf9\u7b54\u6848\u65e0\u8d21\u732e\u7684\u70b9\u5220\u53bb\uff0c\u800c\u662f\u7ef4\u62a4\u6bd4\u4ed6\u5927\u7684\u70b9\u4e2d\u6700\u65b0\u63d2\u5165\u8fdb\u5e8f\u5217\u7684\n\n\u53d1\u73b0\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u6bcf\u6b21\u63d2\u5165\u5c06\u548c\u5b83\u76f8\u90bb\u5e76\u6bd4\u5b83\u5c0f\u7684\u5408\u5e76\n\n\u6bcf\u4e2a\u96c6\u5408\u7684\u96c6\u5408\u4ee3\u8868\u8bbe\u4e3a\u6700\u5de6\u8fb9\u7684\uff0c\u96c6\u5408\u6743\u503c\u4e3a\u6700\u53f3\u8fb9\u7684\u503c\uff0c\u8fd9\u6837\u4e0b\u6b21\u7ef4\u62a4\u65f6\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230\u5b83\u7684\u5de6\u8fb9\uff0c\u800c\u67e5\u8be2\u672b\u5c3e$k$\u4e2a\u6570\u7684\u503c\u5c31\u662f\u4ece\u53f3\u5f80\u5de6\u7b2c$k$\u4e2a\u6570\u6240\u5c5e\u96c6\u5408\u4ee3\u8868\u7684\u6743\u503c\n\n#### \u590d\u6742\u5ea6\u5206\u6790\n1. \u6bcf\u4e2a\u5143\u7d20\u4f5c\u4e3a\u53f3\u7aef\u70b9\u53ea\u4f1a\u88ab\u5408\u5e76\u4e00\u6b21\uff0c\u6240\u4ee5\u4e00\u6b21\u63d2\u5165\u7684\u590d\u6742\u5ea6\u5747\u644a\u4e3a$O(\\alpha(n))$\n2. \u67e5\u8be2\u64cd\u4f5c\u53ea\u9700\u67e5\u8be2\u5b83\u6240\u5bf9\u5e94\u7684\u96c6\u5408\u7684\u6743\u503c\uff0c\u6240\u4ee5\u4e00\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a$O(\\alpha(n))$\n3. \u603b\u590d\u6742\u5ea6$O(\\alpha(n)\\cdot(n+q))$\n\n\u671f\u671b\u5f97\u5206100\u5206\n\n## \u53c2\u8003\u4ee3\u7801\n\n\u6b64\u5904\u53ea\u63d0\u4f9b\u7b97\u6cd52\u7684\u4ee3\u7801(\u7701\u7565\u9884\u5904\u7406\u548c\u5feb\u8bfb\u5feb\u8f93)\n```cpp\nconst int N = 200005;\n\nint find(int);\nvoid uni(int, int);\n\nint fa[N], maxi[N]; // \u96c6\u5408\u4ee3\u8868\u548c\u6743\u503c\nint id; // \u6570\u5217\u7684\u5927\u5c0f\n\nint main () {\n\tint n, m;\n\tread(n), read(m);\n  int lastans = 0;\n  for (int i = 1; i <= n; ++i) {\n    char ch = getchar();\n    if (ch != 'A' && ch != 'Q') {\n      ch = getchar();\n    }\n    ll a;\n    read(a);\n    if (ch == 'A') {\n      ++id;\n      fa[id] = id;\n      maxi[id] = (a + lastans) % m;\n      int fi = id; // \u76ee\u524d\u96c6\u5408\u7684\u6700\u5de6\u7aef\uff0cfi - 1\u5c31\u662f\u4e0b\u6b21\u8003\u8651\u662f\u5426\u5408\u5e76\u7684\u96c6\u5408\u7684\u6700\u53f3\u7aef\n      while (fi > 1 && maxi[fi] > maxi[find(fi - 1)]) {\n        uni(fi - 1, fi);\n        fi = find(id);\n      }\n    } else {\n      lastans = maxi[find(id - a + 1)];\n      write(lastans), EL;\n    }\n  }\n  return 0;\n}\n\nint find(int x) {\n    return fa[x] == x ? x : fa[x] = find(fa[x]);\n}\nvoid uni(int x, int y) {\n    int fx = find(x), fy = find(y);\n    fa[fy] = fx; // \u5c06\u96c6\u5408\u4ee3\u8868\u8bbe\u4e3a\u5de6\u8fb9\u7684\n    maxi[fx] = maxi[fy]; // \u5c06\u96c6\u5408\u6743\u503c\u8bbe\u4e3a\u53f3\u8fb9\u7684\u503c\n}\n```",
        "postTime": 1567155183,
        "uid": 25251,
        "name": "moongazer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u5404\u79cd\u4f5b\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u8bf8\u5982\u7ebf\u6bb5\u6811\u3001\u5206\u5757\u4e4b\u7c7b\u7684\u3002\n\n**\u4f46\u662f\uff0c**\u7531\u4e8e\u672c\u9898\u6570\u636e\u4f3c\u4e4e\u6709\u70b9\u6c34\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u8f7b\u677e\u6c34\u8fc7\u53bb\u3002\n\n~~\uff08\u697c\u4e0b\u6709\u4eba\u5199\u4e86\u4e00\u4e2a\u53f7\u79f0\u5355\u8c03\u6808\u7684\u65b9\u6cd5\uff0c\u6211\u89c9\u5f97\u601d\u8def\u6709\u90e8\u5206\u76f8\u540c\u5462\uff09~~\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4mx\uff0c\u5176\u4e2dmx[i]\u8868\u793a\u4ece\u7b2ci\u4e2a\u6570\u5230\u6700\u540e\u4e00\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u6570\u65f6\uff0c\u4ece\u540e\u5411\u524d\u66f4\u65b0mx\u5373\u53ef\uff0c\u5f53\u9047\u89c1\u7b2c\u4e00\u4e2a\u4e0d\u53ef\u4ee5\u88ab\u66f4\u65b0\u7684\u4f4d\u7f6e\u65f6break\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5O(1)\u56de\u7b54\u3002\n\n\u4e4b\u6240\u8bf4\u548c\u201c\u5355\u8c03\u6808\u201d\u505a\u6cd5\u601d\u8def\u7c7b\u4f3c\uff0c\u539f\u56e0\u5728\u4e8e\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u53d1\u73b0mx\u6570\u7ec4**\u5355\u8c03\u4e0d\u589e**\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5break\u7684\u539f\u56e0\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5f88\u663e\u7136\u5728\u9047\u5230\u4e00\u4e9b\u6781\u7aef\u6570\u636e\u65f6\u4f1aT\u3002\n\n\u867d\u7136\u6211\u8f7b\u677e\u6c34\u8fc7\u53bb\uff0c\u4f46\u8fd8\u662f\u5efa\u8bae\u90a3\u4e9b\u60f3\u8981\u7ec3\u4e60\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\u7684\u540c\u5b66\u4e0d\u8981\u50cf\u6211\u4e00\u6837\u6c34\uff0c~~\u4e0d\u7136\u4f1a\u53d8\u6210\u548c\u6211\u4e00\u6837\u7684\u849f\u84bb~~\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801~~\uff08Ugly\uff09~~\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint num[200003],mx[200003],len=0;\n\nint main() {\n    ios::sync_with_stdio(0);\n    int m,d; cin>>m>>d;\n    int t=0; \n    for (int i=1;i<=m;i++) {\n        char ch; cin>>ch;\n        int x; cin>>x;\n        if (ch=='Q') {\n            cout<<mx[len+1-x]<<endl;\n            t=mx[len+1-x]%d;\n        }\n        else {\n            num[++len]=((long long)t+x)%d;\n            mx[len]=num[len];\n            for (int i=len-1;i>=1;i--) \n                if (mx[i]<num[len]) mx[i]=num[len];\n                else break;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1534141988,
        "uid": 72520,
        "name": "\u5170\u4ead\u6155\u96e8",
        "ccfLevel": 0,
        "title": "P1198 \u89e3\u9898\u62a5\u544a By Dean"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u505a\u6cd5\u5c31\u4e0d\u8bb2\u4e86...ST\u8868\u4e5f\u61d2\u5f97\u8bb2...\u5355\u8c03\u6808\u4ec0\u4e48\u795e\u4ed9\u505a\u6cd5\u6211\u4e0d\u4f1a\u4e5f\u4e0d\u8bb2\u4e86...\n\n\u4eca\u5929\u6211\u4eec\u8981\u8bb2\u7684\u662f\uff1a\n\n## \u5355\u8c03\u961f\u5217\n\n\u6ce8\u610f\uff1a\u6b64\u9898\u5e76\u4e0d\u80fd\u8bf4\u5176\u662f\u771f\u6b63\u7684\u5355\u8c03\u961f\u5217\uff0c\u53ea\u662f\u601d\u60f3\u6709\u4e9b\u7c7b\u4f3c\n\n\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\n#include<iostream>\nusing std::cin;\nint m,d,a[200001],t,mx[200001],l=0,p;//a\u4e3a\u8f93\u5165\u6570\u7ec4\uff0ct\u8868\u793a\u5143\u7d20\u4e2a\u6570\uff0cl\u8868\u793a\u4e0a\u4e00\u6b21\u8be2\u95ee\u7ed3\u679c\nchar q;//mx\u6570\u7ec4\u5373\u6240\u8c13\u7684\u201c\u5355\u8c03\u961f\u5217\u201d\uff0c\u8868\u793a\u4ee5i\u5f00\u59cb\uff0c\u5230\u6700\u540e\u7684\u6700\u5927\u503c\nint main(){\n\tscanf(\"%d%d\", &m, &d);\n\twhile(m--){\n\t\tcin>>q; \n\t\tscanf(\"%d\",&p);\n\t\tif(q=='A'){\n\t\t\ta[++t]=(l+p)%d;\n\t\t\tfor(int i=t;i;i--)\n\t\t\t\tif(mx[i]<a[t])mx[i]=a[t];//\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u503c\u540e\uff0c\u5f80\u524d\u8986\u76d6\n\t\t\t\telse break;\n\t\t}\n\t\telse printf(\"%d\\n\",l=mx[t-p+1]);//\u67e5\u8be2\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7406\u8bba\u4e0a\u662f\u80fd\u88ab\u5361\u5230O\uff08n^2)\u7684\uff08\u5f53\u7ed9\u51fa\u7684\u5e8f\u5217\u662f\u5355\u8c03\u9012\u589e\u65f6\uff09\uff0c\u4f46\u662f\u8dd1\u5f97\u6bd4\u6211\u7684\u7ebf\u6bb5\u6811\u8fd8\u5feb...\n\n\u5355\u8c03\u961f\u5217\uff0c\u5373\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\u7684\u5355\u8c03\u6027\u6765\u83b7\u53d6\u4fe1\u606f\uff0c\u4e00\u822c\u4e3a\u56fa\u5b9a\u7a97\u53e3\u6700\u5927/\u6700\u5c0f\u503c\u3002\u51fa\u961f\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4ece\u524d\u51fa\uff0c\u6b64\u65f6\u662f\u5f53\u7a97\u53e3\u5927\u5c0f\u5927\u4e8e\u7ed9\u5b9a\u7a97\u53e3\u65f6\uff1b\u4ece\u540e\u51fa\uff0c\u6b64\u65f6\u662f\u5f53\u4e0d\u6ee1\u8db3\u4f60\u7ef4\u62a4\u7684\u5355\u8c03\u6027\u65f6\u3002\n\n\u8fd9\u9898\u88ab\u8986\u76d6\u6389\u5c31\u76f8\u5f53\u4e8e\u4ece\u540e\u51fa\u961f\uff0c\u6ca1\u6709\u7a97\u53e3\u5927\u5c0f\u4e5f\u5c31\u6ca1\u6709\u4ece\u524d\u51fa\u961f\u7684\u64cd\u4f5c\uff1b\u4e14mx\u6570\u7ec4\u4e00\u5b9a\u6ee1\u8db3\u5355\u8c03\u9012\u51cf\uff08\u81ea\u5df1\u60f3\u60f3\u4e3a\u5565\uff09\n\n\u5b8c\u7ed3\u6492\u82b1~~",
        "postTime": 1569860472,
        "uid": 153307,
        "name": "\u849f\u84bb365",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0d\u96be\u5427\n\n\u89e3\u6cd5\u548c[\u6700\u5927\u5f02\u6216\u548c](https://www.luogu.org/problemnew/show/P4735)\u5dee\u4e0d\u591a\n\n### \u89e3\u6cd5\uff1a\n1. \u5148\u4e0d\u7ba1\u63d2\u5165\uff0c\u53ea\u6709\u67e5\u8be2\n\n\t\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8dd1ST\u8868\uff0c\u7ebf\u6bb5\u6811\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n    \n    \u4f46\u662f\u6211\u7528\u4e86Trie\n    \n    \u5c06$int$\u4ee5$32$\u4f4d01\u4e32\u63d2\u5165(\u4ee5\u4e0b\u5c06$Trie$\u4e2d\u6570\u5b57\u79f0\u4e3a\"\u4e32\")\n    \n    \u8bbe$latest[x]$\u4e3a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u7684$latest[]$\u7684\u6700\u5927\u503c\n    $$ latest[x]=max\\{latest[trie[x][0],latest[trie[x][1]\\}$$\n    \n    \u7136\u540e\u6211\u4eec\u5bf9\u6240\u6709\u4e32\u5efa\u7acb\u53ef\u6301\u4e45\u5316$Trie$\uff0c$root[n]$\u5c31\u662f\u7b2cn\u6b21\u63d2\u5165\u4e32\u540e\u7684$Trie$\u7684\u6839\uff0c\u67e5\u8be2\u65f6\u4ece$root[n]$\u51fa\u53d1\u5c31\u597d\u4e86\n    \n    \u67e5\u8be2\u65f6\uff0c\u8981\u4f7f\u7b54\u6848\u66f4\u5927\uff0c\u5c31\u8981\u5c3d\u91cf\u8d70$trie[x][1]$,(\u5728$Trie$\u4e2d\u5373\u5411\u53f3\u8d70)\uff0c\u540c\u65f6\u4e0d\u80fd\u8d85\u8fc7$[N-L+1,N]$\u7684\u533a\u95f4\n    \n    \u8fd9\u65f6\u5019$latest[]$\u5c31\u6709\u7528\u4e86\n    \n    \u5f53\u6211\u4eec\u8d70\u5230\u8282\u70b9$x$\u65f6(\u8bbe$latest[x]>N-L+1$)\uff0c\u5982\u679c$latest[trie[x][1]]>N-L+1$\uff0c\u90a3\u4e48$x=trie[x][1]$(\u5411\u53f3\u8d70)\n    \n    \u5426\u5219\u53ea\u80fd\u653e\u5f03\u8fd9\u4e00\u4f4d\uff0c$x=trie[x][0]$(\u5411\u5de6\u8d70)\n    \n    \u8d70\u5230\u53f6\u5b50\u8282\u70b9\u540e\uff0c\u4ece\u6839\u5230\u5f53\u524d\u8282\u70b9\u5f62\u6210\u7684\u4e32\u5c31\u662f\u7b54\u6848\n2. \u67e5\u8be2&\u63d2\u5165\n\t\n    \u67e5\u8be2\u90fd\u89e3\u51b3\u4e86\uff0c\u63d2\u5165\u8fd8\u96be\u5417\n    \n    \u56de\u5230\u4e0a\u9762\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u662f\u5c06\u6bcf\u4e2a\u6570\u5b57\u6309\u987a\u5e8f\u63d2\u5165\u7684\n    \n    \u6211\u4eec\u628a\u63d2\u5165\u6307\u4ee4\u548c\u521d\u59cb\u5316\u4e00\u6837\u5904\u7406\uff0c\u4e0d\u5c31\u597d\u4e86\u5417\n    \n\u81f3\u6b64\uff0c\u95ee\u9898\u5c31~~\u7384\u5b66~~\u89e3\u51b3\u5566\n\n---\n\n$$Talk\\ is\\ cheap\\ ,show\\ you\\ the\\ code.$$\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cctype>\n#define N 200010\nusing namespace std;\nint trie[N*32][2],latest[N*32];\nint s[N],root[N],n,m,mod,tot;\ninline int cread()\n{char c=getchar();while(!isupper(c))c=getchar();return c=='A';}\nvoid insert(int k,int p,int q)//\u53ef\u6301\u4e45\u5316Trie\n{\n\tif(k<0){latest[q]=n;return;}\n\tint c=s[n]>>k&1;\n\tif(p)trie[q][c^1]=trie[p][c^1];\n\ttrie[q][c]=++tot;\n\tinsert(k-1,trie[p][c],trie[q][c]);\n\tlatest[q]=max(latest[trie[q][0]],latest[trie[q][1]]);//\u8ba1\u7b97latest[]\n}\nint ask(int p,int k,int limit)\n{\n\tif(k<0)return s[latest[p]];\n\tif(latest[trie[p][1]]>=limit)return ask(trie[p][1],k-1,limit);//\u8d2a\u5fc3\n\telse return ask(trie[p][0],k-1,limit);\n}\nint main()\n{\n\tint x,t=0;\n\tlatest[0]=-1;root[n=0]=++tot;\n\tscanf(\"%d%d\",&m,&mod);\n\twhile(m--)\n\t{\n\t\tif(cread())\n\t\t{\n\t\t\tscanf(\"%d\\n\",&x);root[++n]=++tot;s[n]=(x+t)%mod;//\u4e0d\u6253\u62ec\u53f7\u51fa\u4eba\u547d\n\t\t\tinsert(31,root[n-1],root[n]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tt=ask(root[n],31,n-x+1);printf(\"%d\\n\",t);\n\t\t}\n\t}\n    return 0;//\u517b\u6210\u597d\u4e60\u60ef\n}\n```\n## \u601d\u8def\u6539\u8fdb\uff1a\n\u901a\u8fc7\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\uff0c\u56e0\u4e3a\u67e5\u8be2\u7684\u53f3\u8fb9\u754c\u59cb\u7ec8\u662f\u5f53\u65f6\u72b6\u6001\u4e0b\u7684$n$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528$Trie$\u4ee3\u66ff\u53ef\u6301\u4e45\u5316$Trie$.\n\n\u4ee3\u7801\u7565.",
        "postTime": 1539995265,
        "uid": 84836,
        "name": "a999999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# \u6811\u72b6\u6570\u7ec4\u5927\u6cd5\u597d\n\u6bd4\u7ebf\u6bb5\u6811\u5e38\u6570\u8981\u5c0f\u591a\u4e86\uff0c\u800c\u4e14\u4ee3\u7801\u91cf\u77ed\uff0c\u5f88\u5bb9\u6613\u5199\u3002\n\n\u5728\u7ed3\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6811\u72b6\u6570\u7ec4\u7684\u5355\u70b9\u66f4\u65b0\u3002\n\n\u4e00\u822c\u6811\u72b6\u6570\u7ec4\u662f\u65e0\u6cd5\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u7684\uff0c\u56e0\u4e3a\u6700\u5927\u503c\u4e0d\u6ee1\u8db3\u533a\u95f4\u51cf\u6cd5\u3002\u4f46\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u7684\u67e5\u8be2\u64cd\u4f5c\u662f\u672b\u5c3eL\u4e2a\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u67e5\u8be2\uff1a\n```cpp\ninline int query(int x){\n    reg int res=0;\n    for(;x;x-=lowbit(x))res=max(res,tr[x]);\n    return res;\n}\n```\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff08111ms\uff0c\u76ee\u524d2019\u5e74Rank1\uff09\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define IOSIZE 10000000\nstatic char in[IOSIZE],*p=in,out[IOSIZE],*q=out,ch[20],*t=ch;\ninline char gc(){\n    while(isspace(*p))++p;\n    return *p++;\n}\ninline int read(){\n    reg int x=0;reg char f=0;\n    while(*p<48)f|=*p=='-',++p;\n    while(*p>47)x=(x<<1)+(x<<3)+(*p++^48);\n    return f?-x:x;\n}\ninline void write(int x){\n    x<0&&(*q++='-',x=-x);\n    !x&&(*q++=48,0);\n    while(x)*t++=x%10+48,x/=10;\n    while(t!=ch)*q++=*--t;\n}\n#define lowbit(x) (x&-x)\nstatic int a[200001],tr[200001],n;\ninline int query(int x){\n    reg int res=0;\n    for(;x;x-=lowbit(x))res=max(res,tr[x]);\n    return res;\n}\ninline void upd(int l,int x){\n    for(;l<200001;l+=lowbit(l))tr[l]=max(tr[l],x);\n}\nint main(){\n    fread(in,1,IOSIZE,stdin);\n    for(reg int M=read(),D=read(),t=0,tmp;M;--M){\n        char c=gc();tmp=read();\n        switch(c){\n            case 'A':upd(200000-n,(tmp+t)%D);++n;break;\n            case 'Q':t=query(200000-(n-tmp)),write(t),*q++='\\n';\n        }\n    }fwrite(out,1,q-out,stdout);\n    return 0;\n}\n```",
        "postTime": 1551362608,
        "uid": 75765,
        "name": "Starlight237",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "## \u4e2a\u4eba\u89c9\u5f97\uff0c\u6211\u7684\u8fd9\u4e2a\u505a\u6cd5\u8fd8\u662f\u5f88\u6709\u8da3\u7684\n#### \u770b\u4e86\u522b\u4eba\u7684\u505a\u6cd5\uff0c\u597d\u50cf\u6ca1\u6709\u8ddf\u6211\u4e00\u6837\u7684\n\u867d\u8bf4\u6211\u662f\u7528\u7ebf\u6bb5\u6811\uff0c\u4f46\u662f\u5927\u5bb6\u4f1a\u53d1\u73b0\uff0c\u5efa\u6811\u662f\u4e00\u4ef6\u7279\u522b\u9ebb\u70e6\u7684\u4e8b\u60c5\uff08\u672c\u849f\u84bb\u662f\u8fd9\u4e48\u89c9\u5f97\u7684\uff09\uff0c\u6240\u4ee5\uff0c\u6211\u5e72\u4e86\u4e00\u4e9b\u795e\u5947\u7684\u4e8b\u60c5\uff1a\u6211\u628a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u8bb0\u5f55\u4e86\u4e0b\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u6700\u540e\u603b\u5171\u4f1a\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u7279\u522b\u6109\u5feb\u7684\u5957\u7528\u6a21\u677f\n\n#### \u770b\u770b\u6211\u7684\u4ee3\u7801\u5427\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define pushup(o) tree[o]=max(tree[o<<1],tree[o<<1|1])//\u5b8f\u5b9a\u4e49\u56de\u6eaf \nchar c[200001];//\u8bb0\u5f55\u64cd\u4f5c \nint len=0,m,t=0,q[200001],a[200001]/*\u5b58\u50a8\u6bcf\u6b21\u64cd\u4f5c\u7684\u503c*/,tree[800001]/*\u6811*/,p1=0,p2=0/*\u8fd9\u662f\u4e24\u4e2a\u6307\u9488\uff0c\u4e0b\u9762\u89e3\u91ca*/,d;\nint query(int o,int l,int r,int x,int y){//(x,y)\u4e3a \u67e5\u8be2\u533a\u95f4\n    if(x<=l&&r<=y)return tree[o];\n    int mid=l+r>>1,ans=INT_MIN;//\u56e0\u4e3a\u6709\u8d1f\u6570\uff0c\u8fd4\u56de\u503c\u8d4b\u6210\u6700\u5c0f \n    if(x<=mid)ans=query(o<<1,l,mid,x,y);\n    if(mid<y)ans=max(ans,query(o<<1|1,mid+1,r,x,y));\n    return ans;\n}\nvoid update(int o,int l,int r,int x,int y){//x\u4e3a\u4fee\u6539\u7684\u70b9\uff0cy\u4e3a\u8981\u6dfb\u52a0\u7684\u503c \n    if(l==r)tree[o]=y;//\u4fee\u6539 \n    else{\n        int mid=l+r>>1;\n        if(x<=mid)update(o<<1,l,mid,x,y);//\u4e8c\u5206\u601d\u60f3 \n        else update(o<<1|1,mid+1,r,x,y);\n        pushup(o);\n    }\n}\nint main(){\n    memset(tree,-0x7f,sizeof(tree));//\u628a\u6240\u6709\u7684\u8282\u70b9\u5168\u90e8\u8d4b\u6210\u6781\u5c0f\u7684\u503c\uff0c\u65b9\u4fbf max \u64cd\u4f5c \n    scanf(\"%d%d\",&m,&d);\n    for(int i=1;i<=m;i++){\n        cin>>c[i];//\u8bb0\u5f55\u4e0b\u7b2ci\u6b21\u7684\u64cd\u4f5c \n        if(c[i]=='Q')scanf(\"%d\",&q[++p1]);//q[++p1]\u8868\u793a\u7b2cp1\u6b21\u67e5\u8be2\u8f93\u5165\u7684L\n        else scanf(\"%d\",&a[++p2]);//a[++p2]\u8868\u793a\u7b2cp2\u6b21\u6dfb\u52a0\u8f93\u5165\u7684n \n    }\n    len=p2;//\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6709\u591a\u5c11\u6b21\u6dfb\u52a0\uff0c\u6570\u5217\u4e2d\u6700\u540e\u5c31\u4f1a\u6709\u591a\u5c11\u4e2a\u6570\uff0c\u6211\u4eec\u7528len\u6765\u8bb0\u5f55\u6700\u7ec8\u7684\u6570\u5217\u957f\u5ea6\u3002 \n    p1=0,p2=0;//\u8d4b\u62100\uff0c\u4e3a\u4e86\u63a5\u4e0b\u6765\u7684\u67e5\u8be2\u4e0e\u66f4\u65b0 \n    for(int i=1;i<=m;i++){\n        if(c[i]=='Q'){//\u5982\u679c\u8fd9\u6b21\u64cd\u4f5c\u662f\u67e5\u8be2 \n            p1++;//\u8fd9\u662f\u7b2cp1\u6b21\u67e5\u8be2 \n            t=query(1,1,len,p2-q[p1]+1,p2);//p2\u4e3a\u6b64\u65f6\u5171\u64cd\u4f5c\u8fc7p2\u6b21\u6dfb\u52a0\uff0c\u4e5f\u5c31\u662f\u6570\u5217\u4e2d\u6709p2\u4e2a\u6570\uff0cq[p1]\u8868\u793a\u6b64\u6b21\u67e5\u8be2\u672b\u5c3eq[p1]\u4e2a\u6570 \n            printf(\"%d\\n\",t);//t\u8868\u793a\u8fd9\u6b21\u67e5\u8be2\u7684\u7b54\u6848 \n        }\n        else{//\u5426\u5219\u6b64\u6b21\u64cd\u4f5c\u4e3a\u6dfb\u52a0 \n            p2++;//\u8fd9\u662f\u7b2cp2\u6b21\u6dfb\u52a0\uff0c\u5373\u6b64\u6b21\u66f4\u65b0\u7684\u662f\u6570\u5217\u4e2d\u7b2cp2\u4e2a\u6570 \n            update(1,1,len,p2,(a[p2]+t)%d);//a[p2]\u662f\u8fd9\u6b21\u6dfb\u52a0\u64cd\u4f5c\u7684\u8f93\u5165\u503cn \n        }\n    }\n}\n```\n\n\u849f\u84bb\u628a\u6ce8\u91ca\u90fd\u5199\u5728\u91cc\u9762\u4e86\u5462\uff0c\u6211\u89c9\u5f97\u6211\u89e3\u91ca\u7684\u633a\u6e05\u695a\u4e86QwQ\n\n\u8c22\u8c22\u5927\u4f6c\u4eec\u9605\u8bfb",
        "postTime": 1543903251,
        "uid": 79711,
        "name": "Sunqi666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "WA\u70b9\u63d0\u793a\uff1a\u5f88\u591a\u4eba\u8bf4\u6700\u540e\u4e24\u4e2a\u70b9\u8981\u7528C++\u7684int\u624d\u80fd\u8fc7= =\u6211\u53ea\u662f\u4e2a\u642c\u8fd0\u5de5\n\n[delete]\u53cd\u6b63\u62113\u6b21\u7206\u86cb\u4e4b\u540e\u5c31\u76f4\u63a5A\u4e86[/delete]\n\n\n**\n\u56e0\u4e3a\u6570\u7ec4\u4e0d\u5b9a\u957f\u6211\u8fd8\u771f\u6ca1\u770b\u51fa\u6765\u7528\u7ebf\u6bb5\u6811\u600e\u4e48\u73a9\u3002\u3002\n\n\u6211\u9009\u62e9  [color=red]\u5355\u8c03\u6808[/color]\n\n\u597d\u50cf\u8fd9\u4e00\u7c7b\u9898\u5355\u8c03\u6808\u90fd\u53ef\u4ee5\u641e\u5b9a\n\n\u7b5b\u9009\uff1a\u5047\u5982\u4e24x,y x\u5148\u8fdb\u6808\uff0cy\u540e\u8fdb\u6808\uff0c\u90a3\u4e48\u5982\u679cx\u53ef\u4ee5\u9009\u62e9\u7684\u8bdd\uff0cy\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u9009\u62e9\u3002\n\n\u90a3\u4e48\u5982\u679cy>x\u7684\u8bdd \uff0cx\u5c31\u6ca1\u7528\u4e86\uff0c\u5c31\u53ef\u4ee5\u5f39\u51fa\u4e86\n\n\u4e8e\u662f\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5355\u8c03\u6808\n\n\u56e0\u4e3a\u67e5\u627e\u662f\u67e5\u627e\u540eL\u4e2a\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u6808\u4e2d\u5c3d\u91cf\u9760\u5de6\u7684\u6570\uff0c\u4f7f\u5f97\u5b83\u5728\u6700\u540eL\u4e2a\u8fdb\u6808\u7684\u6570\u4e2d\uff0c\u6211\u4eec\u4ec5\u9760\u6570\u5b57\u5e76\u4e0d\u77e5\u9053\u5b83\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\n\n\u6240\u4ee5\u8fd9\u8981\u6c42\u6211\u4eec\u6bcf\u4e2a\u6570\u7ed9\u4e00\u4e2a\u8fdb\u6808\u65f6\u95f4\u70b9id\uff0c\u518d\u8bbe\u4e00\u4e2a\u4e00\u5171\u8fdb\u4e86\u591a\u5c11\u4e2a\u6570\uff08\u4e0d\u662f\u6808\u4e2d\u6570\u7684\u4e2a\u6570\uff09\u53d8\u91cfid\\_cnt\uff0c\u6bcf\u6b21\u8fdb\u6808\u64cd\u4f5c\u65f6++\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u80fd\u9009\u62e9\u7684\u6570\u7684id>=id\\_cnt-L+1\n\n(\u8fd9\u6837\u641e\u4e3b\u8981\u662f\u56e0\u4e3a\u6709\u9000\u6808\u73b0\u8c61\u53d1\u751f)\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21Q\u64cd\u4f5c \u5728\u6808\u4e2d\u4e8c\u5206\u67e5\u627e\n\n\uff08\u5efa\u8bae\u753b\u4e2a\u56fe\u7406\u89e3\u8d77\u6765\u65b9\u4fbf\u4e00\u4e9b\uff0c\u6211\u5f53\u65f6\u5c31\u6ca1\u6709\u8349\u7a3f\u672c\u6240\u4ee5\u7279\u522b\u70e7\u8111\u5b50\uff09\n\n**\n\u6211\u5199\u7684\u4e11\u52ff\u55b7\n\n```cpp\n\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=200000+10;\nstruct Node{\n    int id,x;\n    Node(){}\n    Node(int id,int x):id(id),x(x){}\n};\n\nNode stack[maxn];\nint MOD,Q,x,p=1;\n\n#define mid ((l+r)>>1)\nint search(const int &k,int l,int r)\n{\n    int ret=0;\n    while(l<=r)\n    {\n        if(stack[mid].id>=k) ret=stack[mid].x,r=mid-1;\n        else l=mid+1;\n    }\n    return ret;\n}\n\nchar ins[5];\nint main()\n{\n    cin>>Q>>MOD;\n    int last_ans=0,id_cnt=0;\n    while(Q--)\n    {\n        scanf(\"%s%d\",ins,&x);\n        if(ins[0]=='A')\n        {\n            x=(x+last_ans)%MOD;\n            if(p==1){stack[p++]=Node(++id_cnt,x);continue;}\n            else\n            {\n                while(p!=1&&x>stack[p-1].x) p--;\n                stack[p++]=Node(++id_cnt,x);\n            }\n        }\n        else\n        {\n            last_ans=search(id_cnt-x+1,1,p);\n            printf(\"%d\\n\",last_ans);\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1456199231,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u62ff\u5230\u8fd9\u9053\u9898\uff0c\u5148\u5ba1\u9898\uff0c\u603b\u5171\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\u67e5\u8be2\u4e0e\u63d2\u5165\u3002\n\n\u67e5\u8be2\u662f\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\n\n\u63d2\u5165\u5219\u662f\u5c06n\u52a0\u4e0at\uff0c\u5176\u4e2dt\u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38DD\u53d6\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\n\n\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u660e\u663e\u7b26\u5408\u6808\u7684\u5148\u8fdb\u540e\u51fa\u7684\u7279\u70b9\uff1a\u628a\u6570\u5b57\u5f80\u6808\u5e95\u5806\uff0c\u665a\u5806\u5165\u7684\u5148\u88ab\u67e5\u8be2\u3002\n\n\u800c\u53ef\u4ee5\u652f\u6301\u67e5\u8be2\u4e0e\u653e\u5165\u7684\u6570\u636e\u7ed3\u6784\u6709\u5f88\u591a\uff1a\u8fd9\u91cc\u6211\u9009\u62e9\u8f83\u4e3a\u7b80\u5355\u4e0d\u6613\u51fa\u9519\u7684\u6811\u72b6\u6570\u7ec4\n\n\u6811\u72b6\u6570\u7ec4\u90e8\u5206 code\uff1a\n```cpp\ninline void adds(int x,int y)\n{\n\tfor(fint i=x;i<=m;i+=lowbit(i))\n\ttree[i]=max(tree[i],y);\n}\ninline int ask(int x)\n{\n\tint tot=0;\n\tfor(fint i=x;i;i-=lowbit(i))\n\ttot=max(tot,tree[i]);\n\treturn tot;\n}\ninline int lowbit(int x)\n{\n\treturn x&(-x);\n}\n```\n\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u7684\u670b\u53cb[\u8bf7\u6233\u8fd9\u513f](https://www.luogu.com.cn/blog/kingxbz/solution-p3368)\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5904\u7406\u67e5\u8be2\u4e0e\u63d2\u5165\u7684\u51fd\u6570\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8be5\u5229\u7528\u6808\u5148\u8fdb\u540e\u51fa\u7684\u7279\u6027\u6765\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n\u56e0\u4e3a\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u505a\u5230\u533a\u95f4\u67e5\u8be2\uff0c\u800cSTL\u4e2d\u7684\u6808\u53ea\u652f\u6301\u8bfb\u53d6\u6808\u9876\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u624b\u5199\u6808\n\n\u521d\u59cb\u6808\u9876\u4e3a1\uff0c\u8fdb\u6808\u7684\u5143\u7d20\u548c\u4e3am\uff0c\n\n\u6211\u4eec\u6bcf\u6b21\u63d2\u5165\u5c06\u6808\u9876\u5143\u7d20\u51cf\u4e00\uff0c\u7136\u540e\u5728\u67e5\u8be2\u65f6\u8bfb\u5165\u6808\u9876\u5411\u4e0bb\u4e2a\u4f4d\u7f6e\u7684\u5143\u7d20\u6700\u5927\u503c\n\n\u7ed3\u5408\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u4ee3\u7801\uff1a\n```cpp\nint top=1;\n\ntop+=m;\n\nfor(fint i=1;i<=m;i++)\n\t{\n\t\tcin>>a;\n\t\tb=read();\n\t\tif(a=='A')\n\t\tadds(--top,(b+t)%d);\n\t\telse\n\t\tif(a=='Q')\n\t\t{\n\t\tt=ask(top+b-1);\n\t\tcout<<t<<endl;\n\t\t}\n\t}\n```\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u8fd9\u9053\u9898\u3002\u8fd9\u9053\u9898\u6570\u636e\u5e76\u4e0d\u6bd2\u7624\uff0c\u591a\u79cd\u65b9\u6cd5\u5747\u53ef\uff0cac\u96be\u5ea6\u4e0d\u5927\uff0c\u795d\u5927\u5bb6ac\u6109\u5feb",
        "postTime": 1579006178,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "[JSOI2008]\u6700\u5927\u6570\u7684\u6808+\u6811\u72b6\u6570\u7ec4\u5199\u6cd5"
    },
    {
        "content": "# \u5355\u8c03\u6808 + \u4e8c\u5206\u67e5\u627e\n\n\n\u9898\u610f\u5927\u81f4\u4e3a\uff1a\n\n$\\texttt{\u5f80\u4e00\u4e2a\u7a7a\u7684\u961f\u5217\u7684\u4e00\u7aef\u4e0d\u65ad\u52a0\u6570}$\n\n$\\texttt{\u7ef4\u62a4\u6700\u8fd1\u52a0\u7684 L \u4e2a\u6570\u7684\u6700\u5927\u503c}$\n\n\n------------\n\n _\u6ce8\u610f\uff1a**\u4e0b\u6587\u4e2d\u7684\u201c\u4e0b\u6807\u201d\u5747\u6307\u539f\u6570\u7ec4\u7684\u4e0b\u6807\uff0c \u540c\u65f6\u6307\u6808\u4e2d\u5143\u7d20**_\n\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u4fdd\u5b58\u539f\u6570\u7ec4\u4e2d\u6570\u7684**\u4e0b\u6807**\u7684\u6808\n\n\u4f7f\u5f97\u8fd9\u4e2a\u6808\u4e2d\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u4e0b\u6807\u6240\u5bf9\u5e94\u7684\u539f\u6570\u7ec4\u4e2d\u7684\u6570\u5355\u8c03\u9012\u51cf\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6808\n\n\u8fd9\u4e2a\u6808\u6709\u4ec0\u4e48~~\u4f18\u7f8e\u7684~~\u6027\u8d28\u5462\uff1f\n\n\u8bbe\u8fd9\u4e2a\u6808\u4e2d\u6709\u4e24\u4e2a\u5143\u7d20`i`\u548c`j`\uff0c\u539f\u6570\u7ec4\u4e3a`a[]`\n\n__\u5982\u679c`i < j`\u5219\u4e00\u5b9a\u6709`a[i] > a[j]`__\n\n\n\n\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u65f6\u627e\u5230\u6808\u4e2d\u6700\u5c0f\u7684\u6bd4\u67e5\u8be2\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u7684\u7684\u4e0b\u6807\uff0c\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u4e0b\u6807\u6240\u5bf9\u5e94\u7684\u6570\n\n\u53c8\u56e0\u4e3a\u4e0b\u6807\u662f\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u6808\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u65f6\u53ef\u4ee5\u4e8c\u5206\n\n\n------------\n\n\n\u6ce8\u610f\u4f7f\u7528`scanf`\u8f93\u5165\u5355\u4e2a\u5b57\u7b26\u65f6\u4e0d\u4f1a\u8df3\u8fc7\u7a7a\u683c\n\n\u53ef\u4ee5\u76f4\u63a5\u628a\u5b57\u7b26\u5f53\u6210\u5b57\u7b26\u4e32\u8f93\u5165\n\n------------\ncode\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\nusing namespace std;\n\ninline int read() {\n    int op = 1, a = 0; char c = getchar();\n    for (; c < '0' || c > '9'; c = getchar()) if (c == '-') op = -1;\n    for (; c >= '0' && c <= '9'; c = getchar()) a = a * 10 + c - '0';\n    return op * a;\n}\n\nconst int maxn = 2e5 + 5;\nint m, mod;\nint a[maxn], cnt;\n\nstruct HumdrumStack {\n    int s[maxn], tail = 0;\n    void insert(int x) { for (; tail && a[s[tail]] < a[x]; tail--); s[++tail] = x; }\n    int query(int pos) { return *lower_bound(s + 1, s + tail + 1, pos); }\n} sta;\n\nint main() {\n    m = read(), mod = read();\n    int pre_ans = 0;\n    for (; m; m--) {\n        char opt[10]; scanf(\"%s\", &opt);\n        int x = read();\n        if (opt[0] == 'A') { a[++cnt] = (1ll * x + pre_ans) % mod; sta.insert(cnt); }\n        else if (opt[0] == 'Q') { pre_ans = a[sta.query(cnt - x + 1)]; cout << pre_ans << '\\n'; }\n    }\n    return 0;\n}\n```\n\n_by subarude_",
        "postTime": 1571801077,
        "uid": 162865,
        "name": "NxtEcho",
        "ccfLevel": 0,
        "title": "P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5199\u7684\u7ebf\u6bb5\u6811\u603b\u662f\u8d85\u65f6\uff0csplay\u53c8\u4e0d\u4f1a\u5199\u3002\u6811\u72b6\u6570\u7ec4\u867d\u7136\u4e5f\u53ef\u4ee5\u624b\u52a8\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u4f46\u662f\u6811\u72b6\u6570\u7ec4\u53ea\u80fd\u4ece\u5de6\u5230\u53f3\u7684\u66f4\u65b0\uff0c\u6240\u4ee5\u53ea\u597d\u7528\u697c\u4e0b\u5927\u4f6c\u7684\u60f3\u6cd5\uff0c\u7528RMQ\u5904\u7406\u4e86\u3002\u4ece\u53f3\u5230\u5de6\u66f4\u65b0\uff0c\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5c31\u4ee5\u8fd9\u4e2a\u6570\u4e3a\u8d77\u70b9\u5411\u5de6\u66f4\u65b0\u3002\u6bcf\u6b21\u5176\u5b9e\u53ea\u66f4\u65b0\u4e00\u4e2a\u70b9\u3002\u4e0d\u518d\u662fRMQ\u7684\u4e24\u5c42\u5faa\u73af\u3002dp[i][j]\u8868\u793a\u4ecei\u70b9\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a(1<<j)\u7684\u533a\u95f4\u6700\u5927\u503c\u3002\u5f97\u8bb0\u4f4f\u662f\u4ecei\u5f00\u59cb\u5411\u5de6\u6570(1<<j)\u4e2a\u54e6\u3002\n```c\n#include<stdio.h>\n#include<iostream>\n#include<algorithm>\n#define MAXN  200005\nusing namespace std;\n\nint n,M,D,t;\nint dp[MAXN][20];\n\nvoid add(int u,int tt)        //\u5728u\u4f4d\u7f6e\u63d2\u5165\u5927\u5c0f\u4e3att\u7684\u6570\n{\n    dp[u][0]=tt;\n    for(int i=1;(1<<i)<=n;i++)\n    {\n        dp[u][i]=max(dp[u][i-1],dp[u-(1<<(i-1))][i-1]);\n    }\n}\n\nint query(int L,int R)            //\u67e5\u8be2\u533a\u95f4\uff0c\u533a\u95f4\u957f\u5ea6(1<<j)\u4e00\u5b9a\u8981\u4ece\u5de6\u53f3\u5168\u90e8\u8986\u76d6\n{\n    int log=0;\n    while((R-L+1)>=(1<<(log+1)))       //\u63d0\u524dlog+1\u5b8c\u4e86\u76f4\u63a5\u4f7f\u7528\n        log++;\n    return max(dp[R][log],dp[L+(1<<log)-1][log]);      //\u4e00\u5b9a\u8981\u5b8c\u5168\u8986\u76d6\u67e5\u8be2\u7684\u533a\u95f4\u54e6\n}\n\nint main()\n{\n    scanf(\"%d %d\",&M,&D);\n    char ch;\n    int pp;\n    t=0;\n    n=0;\n    while(M--)\n    {\n        cin>>ch;\n        cin>>pp;\n        if(ch=='A')\n        {\n            pp+=t;\n            pp%=D;\n            n++;\n            add(n,pp);\n        }\n        else if(ch=='Q')\n        {\n            if(n==0)\n            {\n                printf(\"0\\n\");\n               continue;\n            }\n            t=query(n-pp+1,n);\n            printf(\"%d\\n\",t);\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1569569832,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\uff0c\u5927\u4f6c\u4eec\u6709\u7528\u7ebf\u6bb5\u6811\u7684\uff0cST\u8868\u7684\uff0c\u5206\u5757\u7684\u2026\u2026\n\n\u849f\u84bb\u611f\u89c9\u5927\u4f6c\u4eec\u7684\u6570\u636e\u7ed3\u6784\u6709\u4e9b\u5927\u6750\u5c0f\u7528\u4e86\u2026\u2026\n\n\u533a\u95f4\u67e5\u8be2\uff0c\u5355\u70b9\u4fee\u6539\u2026\u2026\n\n\u7cdf\u4e86\uff0c\u662f\u6811\u72b6\u6570\u7ec4\uff01\uff01\uff01\n\n\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5c31\u662f\u628a\u539f\u6765\u4e3a0\u7684\u5730\u65b9\u6539\u6210\u8fd9\u4e2a\u6570\u5457\u3002\u4f46\u662f\uff0c\u95ee\u9898\u6765\u4e86\uff0c\u4eba\u5bb6\u662f\u4ece\u540e\u5f80\u524d\u533a\u95f4\u67e5\u8be2\u2026\u2026\u90a3\u597d\u529e\uff01\u6211\u4eec\u4e5f\u4ece\u540e\u5f80\u524d\u52a0\u6570\u3002\u8bb0\u4e00\u4e2a\u961f\u5c3e\u6307\u9488tail\uff0c\u6bcf\u6b21\u67e5\u8be2\u533a\u95f4\u957f\u5ea6\u4e3al\u7684\u4e0d\u5c31\u662f\u67e5\u8be2\u524dit+l-1\u5417\u3002\n\n\u4eba\u751f\u82e6\u77ed\uff0c\u76f4\u63a5\u653e\u4ee3\u7801\u3002\n\n```cpp\n#include<iostream>\n#define lowbit(x) (x&(-x))\n#define int long long // \u6211\u4e3a\u4f55\u5982\u6b64\u6020\u60f0 \nusing namespace std;\nconst int N=200010;\nint n,mod,it,la,t[N]; // \u8fd9\u91cc\u7684it\u76f8\u5f53\u4e8e\u4e0a\u9762\u7684tail-1 (\u8981\u5f80\u54ea\u91cc\u586b\u6570)\n\ninline void update(int x,int k)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tt[i]=max(t[i],k);\n}\n\ninline int query(int x)\n{\n\tint ans=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tans=max(ans,t[i]);\n\treturn ans;\n}\n\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>mod; it=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar c[2]; int k;\n\t\tcin>>c>>k;\n\t\tif(c[0]=='A') update(it,(k+la)%mod), it--;\n\t\telse la=query(it+k), cout<<la<<'\\n';\n\t}\n\treturn ~~ (0 - 0) ;\n}\n```\n",
        "postTime": 1565927676,
        "uid": 130422,
        "name": "_\u849f\u84bb__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u4e0d\u884c\u56f0\u6b7b\u4e86\u6211\u5148\u53bb\u7761\u89c9\u8d77\u5e8a\u4e86\u518d\u628a\u9898\u89e3\u8865\u4e0a~~\uff08\u7136\u540e\u5c31\u5fd8\u4e86\uff09~~\n\n\u6211\u4e22\u4e2a\u4ee3\u7801\u5728\u8fd9\u5148**\uff08\u6bd2\u7624\u6570\u636e\u5bb3\u6b7b\u4eba B\u7ad9\u4e00\u904d\u8fc7 \u6d1b\u8c37\u536110\u56de\uff09**\n\n\n------------\n\u597d\u6211\u56de\u6765\u4e86\u3002\u6211\u4eec\u6765\u53e3\u80e1\u4e00\u4e0b\u8fd9\u9053\u96be\uff08luo\uff09\u9898\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u9762\uff1a\n```cpp\n\u73b0\u5728\u8bf7\u6c42\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1\u3001 \u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u8bed\u6cd5\uff1aQ L\n\n\u529f\u80fd\uff1a\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\n\n\u9650\u5236\uff1a L \u4e0d\u8d85\u8fc7\u5f53\u524d\u6570\u5217\u7684\u957f\u5ea6\u3002 (L > 0)\n\n2\u3001 \u63d2\u5165\u64cd\u4f5c\u3002\n\n\u8bed\u6cd5\uff1aA n\n\n\u529f\u80fd\uff1a\u5c06 n \u52a0\u4e0a t \uff0c\u5176\u4e2d t \u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u8fd8\u672a\u6267\u884c\u8fc7\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219 t=0 )\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570 D \u53d6\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\n\n\u9650\u5236\uff1a n \u662f\u6574\u6570\uff08\u53ef\u80fd\u4e3a\u8d1f\u6570\uff09\u5e76\u4e14\u5728\u957f\u6574\u8303\u56f4\u5185\u3002\n\n\u6ce8\u610f\uff1a\u521d\u59cb\u65f6\u6570\u5217\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4e00\u4e2a\u6570\u3002\n```\n\u6ce8\u610f\u5230\u67e5\u8be2\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a**\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u6700\u5927\u7684\u6570**\uff0c\u5f88\u81ea\u7136\u8054\u60f3\u5230\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u548c\u6a21\u677f\u597d\u50cf\u5dee\u4e0d\u591a\uff0c\u8f93\u51faquery(1,\u603b\u6570-L+1\uff0c\u603b\u6570)\u8d70\u4eba\uff0c\u8fd9\u9053\u9898\u4e3b\u8981\u662f\u9700\u8981\u641e\u5b9a\u63d2\u5165\u64cd\u4f5c\u3002\n\n\u770b\u4e86\u770b\u697c\u4e0a\u7684\u9898\u89e3\u597d\u50cf\u90fd\u662f\u7528\u6734\u7d20\u7684\u6570\u7ec4\u5b58\u50a8\u7ebf\u6bb5\u6811\uff1f\n\n\u6211\u6765\u5439\u4e00\u6ce2\u7ed3\u6784\u4f53\u5927\u6cd5\u597d\uff08\u5927\u96fe\uff09\n\n\u4e5f\u5c31\u662f\u8fd9\u4e48\u4e2a\u4e1c\u897f\uff1a\n```cpp\nstruct segmentree{int l;int r;long long dat;}tree[800005];\n```\n\u5176\u4e2dl\u548cr\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u8986\u76d6\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\uff0cdat\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5b58\u50a8\u7684\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u8fd9\u6837\u5728\u5efa\u6811\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u67e5\u8be2\u6570\u636e\u7684\u65f6\u5019\u5c31\u80fd\u7528\u4e00\u4e2a\u53d8\u91cfp\u8868\u793a\u8282\u70b9\u7f16\u53f7\uff0c\u6765\u56ca\u62ec\u8282\u70b9\u7f16\u53f7\u3001\u8282\u70b9\u8986\u76d6\u533a\u95f4\u5de6\u8fb9\u754c\u3001\u8282\u70b9\u8986\u76d6\u533a\u95f4\u53f3\u8fb9\u754c\u4e86\u3002\uff08\u53cd\u6b63\u6211\u662f\u89c9\u5f97\u8fd9\u4e48\u5199\u6bd4\u8f83\u7b80\u6d01\u8212\u670d\uff09\n\n\u6dfb\u52a0\u64cd\u4f5c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5927\u4f53\u601d\u60f3\u5c31\u662f\u4ece\u9876\u5411\u4e0b\u9012\u5f52\u5230\u53f6\u8282\u70b9\u66f4\u65b0\u53f6\u8282\u70b9\u7684\u503c\uff0c\u518d\u4e00\u5c42\u4e00\u5c42\u5730\u628a\u6700\u5927\u503c\u4f20\u4e0a\u6765\u5373\u53ef\u3002\u5177\u4f53\u7684\u89e3\u91ca\u653e\u5728\u4ee3\u7801\u91cc\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct segmentree{int l;int r;long long dat;}tree[800005];\nlong long a[800005],cnt=0;\nint mod,m;\nlong long x,ans=0;\nchar operation;\nvoid build_tree(int p,int l,int r){\n\ttree[p].l=l;tree[p].r=r;\n\tif(l==r){tree[p].dat=a[l];return;}\n\tint mid=l+r>>1;\n\tbuild_tree(p<<1,l,mid);\n\tbuild_tree(p<<1|1,mid+1,r);\n\ttree[p].dat=max(tree[p<<1].dat,tree[p<<1|1].dat);\n}\nvoid update(int val,int p,int cnt){\n\tif(tree[p].l==tree[p].r){tree[p].dat=val;return;}//\u5982\u679c\u5230\u4e86\u53f6\u8282\u70b9\uff0c\u5219\u66f4\u65b0\u53f6\u8282\u70b9\u7684\u503c\uff0c\u7136\u540e\u8fd4\u56de\n\tint mid=tree[p].l+tree[p].r>>1;\n\tif(cnt<=mid)update(val,p<<1,cnt);//\u5982\u679c\u8981\u6dfb\u52a0\u7684\u503c\u7684\u4f4d\u7f6e\uff08\u5373\u6570\u5217\u6dfb\u52a0\u540e\u7684\u957f\u5ea6\uff09\u5728\u5de6\u5b50\u6811\uff0c\u5219\u5728\u5de6\u5b50\u6811\u4e0a\u9012\u5f52\u67e5\u627e\n\tif(cnt>mid)update(val,p<<1|1,cnt);//\u53f3\u5b50\u6811\u540c\u7406\n\ttree[p].dat=max(tree[p<<1].dat,tree[p<<1|1].dat);//\u4ece\u5b50\u8282\u70b9\u5411\u7236\u8282\u70b9\u4f20\u9012\u6700\u5927\u503c\u4fe1\u606f\n}\nint query(int p,int l,int r){\n\tif(l<=tree[p].l&&r>=tree[p].r) return tree[p].dat;\n\tint mid=tree[p].l+tree[p].r>>1;\n\tint val=-(1<<30);\n\tif(l<=mid)val=max(val,query(p<<1,l,r));\n\tif(r>mid)val=max(val,query(p<<1|1,l,r));\n\treturn val;\n}\nint main(){\n\tmemset(tree,0,sizeof(tree));\n\tscanf(\"%d%d\",&m,&mod);\n\tfor(int i=1;i<=m;i++)a[i]=-(1<<60);\n\tbuild_tree(1,1,m);\n\twhile(m--){\n\t\tcin>>operation>>x;\n\t\tif(operation=='Q'){\n\t\t\tif(x==0){printf(\"0\");}\n\t\t\telse{\n\t\t\tans=query(1,cnt-x+1,cnt);\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\t}\n\t\t}\n\t\tif(operation=='A'){\n\t\t\tx%=mod;ans%=mod;x=(x+ans)%mod;\n\t\t\tupdate(x,1,++cnt);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1533065612,
        "uid": 43515,
        "name": "kma_093",
        "ccfLevel": 0,
        "title": "[JSOI2008]\u6700\u5927\u6570"
    },
    {
        "content": "# \u672c\u9898\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\u4f1a\u5f88\u597d\u60f3\n## \u76f4\u63a5\u5c06\u7ebf\u6bb5\u6811\u4e2d\u533a\u95f4\u548c\u53d8\u6210\u533a\u95f4\u6700\u5927\u503c\u5c31\u597d\u4e86\n### \u4f46\u662f\u672c\u9898\u5751\u6bd4\u8f83\u591a\uff0c\u81ea\u5df1\u60f3\u5b8c\u53d1\u73b0\u5f88\u591a\u95ee\u9898\u90fd\u6ca1\u4e86\n\n\u9996\u5148\u56de\u987e\u4e00\u4e0b\u9898\u76ee\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1\u3001\u6dfb\u52a0\uff1a\u524d\u4e00\u6b21\u67e5\u8be2\u7ed3\u679c\uff08\u521d\u59cb\u4e3a\u96f6\uff09\u52a0\u4e0a\u4e00\u4e2a\u6570n\u518d\u6a21D\uff0c\u7136\u540e\u52a0\u5230\u5e8f\u5217\u6700\u540e\u9762\n\n2\u3001\u67e5\u8be2\uff1a\u8f93\u5165\u4e00\u4e2a\u6570L\uff0c\u67e5\u8be2\u5e8f\u5217\u540eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff1b\n\n### \u601d\u8def\n\u56e0\u4e3a\u672c\u6765\u5c31\u662f\u7ec3\u7ebf\u6bb5\u6811\u7684\uff0c\u6240\u4ee5\u770b\u5b8c\u9898\u76f4\u63a5\u5f80\u7ebf\u6bb5\u6811\u4e0a\u60f3\n\n\u7ed3\u679c\u65c1\u8fb9\u4e00\u4e2a*\u8fb9\u7f18ob\u4e00\u624b\uff0c\u5f53\u7136\u7528\u6811\u72b6\u6570\u7ec4\u554a\uff0c\u7ed3\u679c\u60f3\u4e86\u5feb\u534a\u5c0f\u65f6\u4e00\u76f4\u5728\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u95f4\u6447\u6446\uff0c\u6700\u540e\u7384\u5b66bp\u4e00\u624b\uff0c\u53d1\u73b0\u7ebf\u6bb5\u6570\u8d3c\u7b80\u5355\n\n### \u6b63\u9898\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6700\u7ec8\u7684\u7ebf\u6bb5\u6811\n\n\u610f\u601d\u5c31\u662f\u5c06\u6240\u6709\u7684\u67e5\u8be2\u548c\u6dfb\u52a0\u64cd\u4f5c\u7528\u4e24\u4e2a\u6570\u7ec4\u8bb0\u4e0b\uff0c\u7136\u540e\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u7528tot\u8868\u793a\uff09\n\n\u7136\u540e\u5f00\u59cb\u7ebf\u6bb5\u6811\u6a21\u677f\u7684\u6dfb\u52a0\u64cd\u4f5c\uff0c\u6211\u4eec\u6309\u7167\u65f6\u95f4\u7ebf\u5f00\u59cb\u6dfb\u52a0\u67e5\u8be2\u5c31o**k\u4e86\n\n\u56e0\u4e3a\u6ca1\u6709lazytag\uff0c\u6240\u4ee5\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u53ea\u662f\u4e00\u4e2a\u8f83\u7b80\u5355\u7684\u4e8c\u53c9\u6811\u7684\u5e94\u7528\n\n\u8fd9\u662f\u7b2c\u4e00\u6b21\u7684\u4ee3\u7801\uff0880\u5206\u52a0\u4e24\u4e2aMLE\uff09\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nconst int maxn=200010;\ntypedef long long ll;\nusing namespace std;\nll m,D,c[maxn<<2],a[maxn],bef,ans,tot,al[maxn],num[maxn];\ninline ll read(){\n    char c=getchar();\n    ll x=0,f=1;\n    while(c<'0'||c>'9'){\n        if(c=='-') f=-1;\n        if(c=='A') return 65;\n        if(c=='Q') return 81;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x*f;\n}\ninline int ls(int k){\n    return k<<1;\n}\ninline int rs(int k){\n    return k<<1|1;\n}\ninline ll ma(ll x,ll y){\n    return x>y?x:y;\n}\ninline void add(ll k,ll p,ll l,ll r){\n    if(l==r&&l==p){\n        c[k]=a[p];\n        return;\n    }\n    c[k]=ma(c[k],a[p]);\n    ll mid=(l+r)>>1;\n    if(p<=mid) add(ls(k),p,l,mid);\n    else add(rs(k),p,mid+1,r);\n    return;\n}\ninline void qes(ll k,ll ql,ll qr,ll l,ll r){\n    if(ql<=l&&qr>=r){\n        ans=ma(ans,c[k]);\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(ql<=mid) qes(ls(k),ql,qr,l,mid);\n    if(qr>mid) qes(rs(k),ql,qr,mid+1,r);\n    return;\n}\nint main(){\n    m=read();\n    D=read();\n    tot=0;\n    bef=0;\n    int sum=0;\n    for(int i=1;i<=m;i++){\n        ll s=read(),y=read();\n        al[i]=s;\n        num[i]=y;\n        if(al[i]==65) tot++;\n    }\n    for(int i=1;i<=m;i++){\n        ans=0;\n        if(al[i]==65){\n            a[++sum]=(num[i]+bef)%D;\n            add(1,sum,1,tot);\n        }\n        if(al[i]==81){\n            ll j=sum-num[i]+1;\n            qes(1,j,sum,1,tot);\n            bef=ans;\n            printf(\"%lld\\n\",ans);\n        }\n    }\n//\tfor(int i=1;i<=15;i++) printf(\"%lld \",c[i]);\n    return 0;\n}\n```\n\u7136\u800c\u6211\u610f\u8bc6\u5230\u4e09\u4e2a\u4e8c\u5341\u4e07\u4e00\u4e2a\u516b\u5341\u4e07\u7684\u6570\u7ec4\u786e\u5b9e\u5927\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u5efa\u4e00\u4e2a\u5b8c\u5168\u6807\u51c6\u7684\u7ebf\u6bb5\u6811\n\n\u6211\u4eec\u9000\u800c\u6c42\u5176\u6b21\uff0c\u56e0\u4e3am\u4ee3\u8868\u4e86\u64cd\u4f5c\u4e2a\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u4f1a<=m\n\n\u6240\u4ee5\u6211\u4eec\u8d2a\u5fc3\u4e00\u624b\uff0c\u7528[1,m]\u7684\u533a\u95f4\u6765\u5efa\u6811\uff0c\u8fd9\u6837\u5c31\u76f4\u63a5\u53ef\u4ee5\u8fb9\u8f93\u5165\u8fb9\u5efa\u6811\n\u4ee3\u7801\u5982\u4e0b\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nconst int maxn=200010;\ntypedef long long ll;\nusing namespace std;\nll m,D,c[maxn<<2],a[maxn],bef,ans,tot;\ninline ll read(){\n    char c=getchar();\n    ll x=0,f=1;\n    while(c<'0'||c>'9'){\n        if(c=='-') f=-1;\n        if(c=='A') return 65;\n        if(c=='Q') return 81;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    return x*f;\n}\ninline int ls(int k){\n    return k<<1;\n}\ninline int rs(int k){\n    return k<<1|1;\n}\ninline ll ma(ll x,ll y){\n    return x>y?x:y;\n}\ninline void add(ll k,ll p,ll l,ll r,ll t){\n    if(l==r&&l==p){\n        c[k]=t;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(p<=mid) add(ls(k),p,l,mid,t);\n    else add(rs(k),p,mid+1,r,t);\n    c[k]=ma(c[ls(k)],c[rs(k)]);\n    return;\n}\ninline void qes(ll k,ll ql,ll qr,ll l,ll r){\n    if(ql<=l&&qr>=r){\n        ans=ma(ans,c[k]);\n//\t\tprintf(\"%lld %lld %lld\\n\",l,r,c[k]);\n//\t\tprintf(\"%lld \",ans);\n        return;\n    }\n    ll mid=(l+r)>>1;\n    \n    if(ql<=mid) qes(ls(k),ql,qr,l,mid);\n    if(qr>mid) qes(rs(k),ql,qr,mid+1,r);\n    return;\n}\nint main(){\n    m=read();\n    D=read();\n    tot=0;\n    bef=0;\n    for(int i=1;i<=m;i++){\n        ll s=read(),y=read();\n        if(s==65){\n            tot++;\n            add(1,tot,1,m,(y+bef)%D);\n        }\n        if(s==81){\n            ans=0;\n            if(y==0){\n                bef=0;\n                printf(\"%lld\\n\",bef);\n            }\n            else{\n            ll j=tot-y+1;\n//\t\t\tprintf(\"%lld\\n\",j);\n            qes(1,j,tot,1,m);\n//\t\t\tprintf(\"\\n\");\n            bef=ans;\n            printf(\"%lld\\n\",ans);\n            }\n        }\n    }\n//\tfor(int i=1;i<=15;i++) printf(\"%lld \",c[i]);\n    return 0;\n}\n```\n\u4f1a\u53d1\u73b0\u5176\u5b9e\u6ca1\u6709\u4ec0\u4e48\u6539\u53d8\u7684\uff0890\u5206\uff09\u6700\u540e\u4e00\u4e2a\u70b9TLE\n\n\u53ea\u662f\u5237\u9898\u7684\u540c\u5b66\u53ef\u4ee5\u8d70\u4e86\uff0c\u8bb0\u5f97\u628a\u5feb\u8bfb\u6539\u6210cin scanf\u968f\u4f60\n\n\u5f00\u59cbbb\uff08\u6d1b\u8c37||\u51fa\u9898\u4eba\uff09\n\n\u6700\u540e\u4e00\u4e2a\u70b9\u53d8\u6210\u4e86TLE\uff0c\u8fd9\u65f6\u6211\u610f\u8bc6\u5230\u53ef\u80fd\u8fd9\u4e48\u7b80\u6734\u7684\u7b97\u6cd5\u65e0\u6cd5\u89e3\u51b3\u975e\u5e38\u5927\u7684\u6570\u636e\n\n\u6240\u4ee5\u5c1d\u8bd5\u53bb\u5199\u4e86\u4e00\u624b\u6811\u72b6\u6570\u7ec4\uff0c\u989d\uff0c\u8001\u5b9e\u8bf4\u5199\u5230\u4e00\u534a\u5fc3\u6001\u5d29\u9e1f\n\n\u8001\u8001\u5b9e\u5b9e\u7684\u56de\u53bb\u6539\u7ebf\u6bb5\u6811\uff0c\u5c06\u7b2c\u4e00\u4e2a\u6570\u636e\u70b9\u5237\u5230100ms\u540e\uff0c\u5fc3\u6001\u518d\u6b21\u5d29\u584c\n\n\u7136\u540e\u4e0d\u8bda\u5b9e\u7684\u6211\u7528\u9898\u89e3\u4ea4\u4e86\u4e00\u904d\u3002\u3002\u3002\n\n\u8fc7\u4e86\u662f\u8fc7\u4e86\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\u70b9\u6709\u4e09\u767e\u591ams\uff01\uff01\uff01\n\n\u56de\u5934\u770b\u4e86\u770b\u53ea\u6709100ms\u7684\u6211\uff0c\u679c\u65ad\u628a\u5feb\u8bfb\u6539\u6210scanf\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\nconst int maxn=200010;\ntypedef long long ll;\nusing namespace std;\nll m,D,c[maxn<<2],a[maxn],bef,ans,tot;\ninline ll ma(ll x,ll y){\n    return x>y?x:y;\n}\ninline void add(ll k,ll p,ll l,ll r,ll t){\n    if(l==r&&l==p){\n        c[k]=t;\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(p<=mid) add((k<<1),p,l,mid,t);\n    else add(k<<1|1,p,mid+1,r,t);\n    c[k]=ma(c[k<<1],c[k<<1|1]);\n    return;\n}\ninline void qes(ll k,ll ql,ll qr,ll l,ll r){\n    if(ql<=l&&qr>=r){\n        ans=ma(ans,c[k]);\n//\t\tprintf(\"%lld %lld %lld\\n\",l,r,c[k]);\n//\t\tprintf(\"%lld \",ans);\n        return;\n    }\n    ll mid=(l+r)>>1;\n    if(ql<=mid) qes(k<<1,ql,qr,l,mid);\n    if(qr>mid) qes(k<<1|1,ql,qr,mid+1,r);\n    return;\n}\nint main(){\n    scanf(\"%lld%lld\",&m,&D);\n    tot=0;\n    bef=0;\n    for(int i=1;i<=m;i++){\n        ll y;\n        char s;\n        cin>>s;\n        scanf(\"%lld\",&y);\n        if(s=='A'){\n            tot++;\n            add(1,tot,1,m,(y+bef)%D);\n        }\n        if(s=='Q'){\n            ans=0;\n            if(y==0){\n                bef=0;\n                printf(\"%lld\\n\",bef);\n            }\n            else{\n            ll j=tot-y+1;\n//\t\t\tprintf(\"%lld\\n\",j);\n            qes(1,j,tot,1,m);\n//\t\t\tprintf(\"\\n\");\n            bef=ans;\n            printf(\"%lld\\n\",ans);\n            }\n        }\n    }\n//\tfor(int i=1;i<=15;i++) printf(\"%lld \",c[i]);\n    return 0;\n}\n```\n\u6069 \u8fc7\u4e86\u3002\u3002\u3002\n\nwoc\u8fc7\u4e86\uff0c\u8fd9\u91cc\u5410\u69fd\u4e00\u624blg\uff08\u53ef\u4ee5\u8ba4\u4e3a\u662flog\uff0c\u4e0d\u9488\u5bf9\u4efb\u4f55\u4eba\uff0c\u5355\u7eaf\u5728\u8ba8\u8bba\u6570\u5b66\uff09\uff0c\u660e\u660e\u6700\u540e\u4e00\u70b9\u5361\u4e86\u8bfb\u5165\uff0c\u7ed3\u679c\u8fd8\u56e0\u4e3a\u7248\u6743\u95ee\u9898\u4e0d\u7ed9\u6570\u636e\uff01\uff01\uff01\n\n\u602a\u4e0d\u5f97\u90a3\u4e48\u591aoIers\u65e0\u6545\u731d\u6b7b",
        "postTime": 1526556261,
        "uid": 56011,
        "name": "jokers",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u73b0\u5728\u8bf7\u6c42\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1\u3001 \u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u8bed\u6cd5\uff1a``Q L``\n\n\u529f\u80fd\uff1a\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\n\n\u9650\u5236\uff1a$L$\u4e0d\u8d85\u8fc7\u5f53\u524d\u6570\u5217\u7684\u957f\u5ea6$(L \\geq 0)$\u3002\n\n2\u3001 \u63d2\u5165\u64cd\u4f5c\u3002\n\n\u8bed\u6cd5\uff1a``A n``\n\n\u529f\u80fd\uff1a\u5c06$n$\u52a0\u4e0a$t$\uff0c\u5176\u4e2d$t$\u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u8fd8\u672a\u6267\u884c\u8fc7\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219$t=0$\uff09\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570D\u53d6\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\n\n\u9650\u5236\uff1a$n$\u662f\u6574\u6570\uff08\u53ef\u80fd\u4e3a\u8d1f\u6570\uff09\u5e76\u4e14\u5728\u957f\u6574\u8303\u56f4\u5185\u3002\n\n\u6ce8\u610f\uff1a\u521d\u59cb\u65f6\u6570\u5217\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4e00\u4e2a\u6570\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0c$m$\u548c$d$\uff0c\u5176\u4e2d$m$\u8868\u793a\u64cd\u4f5c\u7684\u4e2a\u6570$(d \\leq 200,000)$\uff0c$d$\u5982\u4e0a\u6587\u4e2d\u6240\u8ff0\uff0c\u6ee1\u8db3$(0<d<2,000,000,000)$\n\n\u63a5\u4e0b\u6765\u7684$m$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u4e00\u4e2a\u5177\u4f53\u7684\u64cd\u4f5c\u3002\u8bed\u6cd5\u5982\u4e0a\u6587\u6240\u8ff0\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u4f60\u5e94\u8be5\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u8f93\u51fa\u7ed3\u679c\uff0c\u6bcf\u4e2a\u7ed3\u679c\u5360\u4e00\u884c\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u6837\u4f8b\u8f93\u5165\n```\n5 100\nA 96\nQ 1\nA 97\nQ 1\nQ 2\n```\n- \u6837\u4f8b\u8f93\u51fa\n```\n96\n93\n96\n```\n\n\u3010\u8bf4\u660e\u3011\n\n[JSOI2008]\n\n\u672c\u9898\u6570\u636e\u5df2\u52a0\u5f3a\u3002\n\n\u3010\u9898\u89e3\u3011\n\n\u6211\u4f1a\u66b4\u529b\uff01\n\n\u8003\u8651\u66b4\u529b\u52a0\u5165\u6570\u5b57\u4ee5\u53ca\u67e5\u8be2\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(x+y \\times \\sum_{i=1}^{y}i),x+y=m$\uff0c\u5176\u4e2d$x$\u4e3a\u52a0\u5165\u64cd\u4f5c\u7684\u6b21\u6570\uff0c$y$\u4e3a\u67e5\u8be2\u64cd\u4f5c\u7684\u6b21\u6570\uff0c$m$\u4e3a\u603b\u64cd\u4f5c\u7684\u6b21\u6570\u3002\u671f\u671b\u5f97\u5206$0$~$50$\u5206\u3002\n\n\u6211\u4f1a\u7ebf\u6bb5\u6811\uff01\n\n\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u5b8c\u6210\u6b64\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u4e00\u9897\u975e\u5e38\u5927\u7684\u6811\uff0c\u7136\u540e\u52a0\u5165\u7684\u65f6\u5019\u5c31\u65b9\u4fbf\u591a\u4e86\u3002\u7531\u4e8e\u7ebf\u6bb5\u6811\u5355\u70b9\u52a0\u5165\u7684\u590d\u6742\u5ea6\u662f$\\Theta(log_2\\;n)$\uff0c\u5176\u4e2d$n$\u4e3a\u5f53\u524d\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u533a\u95f4\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e5f\u4e3a$\\Theta(log_2\\;n)$\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\u5f53$L=0$\u65f6\u8f93\u51fa$0$\u5e76\u8bb0\u5f55\u5f53\u524d\u7684\u7b54\u6848\uff08\u53ef\u80fd\u8fd8\u8981\u7528\u5230\uff09\u6240\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u89e3\u51b3\u672c\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta(log_2\\;x+y \\times log_2\\;y),x+y=m$\uff0c\u5176\u4e2d$x$\u4e3a\u52a0\u5165\u64cd\u4f5c\u7684\u6b21\u6570\uff0c$y$\u4e3a\u67e5\u8be2\u64cd\u4f5c\u7684\u6b21\u6570\uff0c$m$\u4e3a\u603b\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\u671f\u671b\u5f97\u5206$0$~$100$\u5206\uff0c\u5b9e\u9645\u5f97\u5206$100$\u5206\u3002\n\n\u4e0b\u9762\u9001\u4e0a\u4e00\u7ec4\u5168\u8d1f\u7684\u6570\u636e\uff08\u8bc4\u6d4b\u6570\u636e\u91cc\u6ca1\u6709\uff09\uff0c\u6570\u636e\u6e90\u81ea\u6d1b\u8c37\u7684@[tour1st](https://www.luogu.org/space/show?uid=53793)\uff0c\u6570\u636e\u5982\u4e0b\u3002\n\n\u3010\u6570\u636e\u8f93\u5165\u8f93\u51fa\u3011\n\n- \u6570\u636e\u8f93\u5165\n```\n3 10000\nA -123\nA -456\nQ 2\n```\n\n- \u6570\u636e\u8f93\u51fa\n```\n-123\n```\n\n\u3010\u4ee3\u7801\u3011\n\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801~\n```\n#include <cstdio>\nstruct node{ int l,r,lc,rc,c; } a[1000001];\nint len=0;\nint max(int x,int y)\n{\n\treturn x>y?x:y;\n}\nvoid bt(int l,int r)\n{\n\tlen++;\n\ta[len].l=l;\n\ta[len].r=r;\n\ta[len].lc=-1;\n\ta[len].rc=-1;\n\ta[len].c=0;\n\tint now=len;\n\tif(l<r)\n\t{\n\t\tint mid=(l+r)/2;\n\t\ta[len].lc=len+1;\n\t\tbt(l,mid);\n\t\ta[now].rc=len+1;\n\t\tbt(mid+1,r);\n\t}\n}\nint query(int now,int l,int r)\n{\n\tif(a[now].l==l && a[now].r==r)\n\t{\n\t\treturn a[now].c;\n\t}\n\tint mid=(a[now].l+a[now].r)/2;\n\tif(r<=mid)\n\t{\n\t\treturn query(a[now].lc,l,r);\n\t}\n\telse if(mid+1<=l)\n\t{\n\t\treturn query(a[now].rc,l,r);\n\t}\n\telse\n\t{\n\t\treturn max(query(a[now].lc,l,mid),query(a[now].rc,mid+1,r));\n\t}\n}\nvoid change(int now,int x,int t)\n{\n\tif(a[now].l==a[now].r)\n\t{\n\t\ta[now].c+=t;\n\t\treturn ;\n\t}\n\tint mid=(a[now].l+a[now].r)/2;\n\tif(x<=mid)\n\t{\n\t\tchange(a[now].lc,x,t);\n\t}\n\telse\n\t{\n\t\tchange(a[now].rc,x,t);\n\t}\n\ta[now].c=max(a[a[now].lc].c,a[a[now].rc].c);\n}\nint main()\n{\n\tint n=200001,m=0,d=0;\n\tscanf(\"%d %d\",&m,&d);\n\tbt(1,n);\n\tint pt=0;\n\tlen=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tchar t[5];\n\t\tint x=0;\n\t\tscanf(\"%s %d\",t+1,&x);\n\t\tif(t[1]=='Q')\n\t\t{\n\t\t    if(x==0)\n\t\t    {\n\t\t        pt=0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t    pt=query(1,len-x+1,len);\n\t\t    }\n\t\t\tprintf(\"%d\\n\",pt);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlen++;\n\t\t\tchange(1,len,(x+pt)%d);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524111478,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u6240\u6709\u9898\u89e3\uff0c\u8c8c\u4f3c\u53ea\u6709\u4e00\u7bc7\u8bb2\u4e86\u500d\u589e\u7684\u601d\u8def\n\n\u8fd9\u9898\u500d\u589e\u597d\u50cf\u6bd4\u7ebf\u6bb5\u6811\u7b80\u5355\u70b9\n\n---\n\n\u3010\u601d\u8def\u3011\n\nf[i][j]\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3a2^j\u7684\u533a\u95f4\u6700\u5927\u503c\uff08\u8ddfST\u8868\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff09\n\n\u63d2\u5165\uff1a\u6570\u5217\u957f\u5ea6++\uff0c\u5faa\u73afj\uff0c\u66f4\u65b0f\u6570\u7ec4\n\nf[l][i] = max(f[l][i-1], f[l-(1<<i-1)][i-1]) % D;\n\n\u8be2\u95ee\uff1a\u50cfST\u8868\u4e00\u6837\uff0c\u628a\u533a\u95f4\u62c6\u6210\u53ef\u4ee5\u91cd\u53e0\u7684\u4e24\u6bb5\uff0c\u8fd4\u56de\u8fd9\u4e24\u6bb5\u7684\u6700\u5c0f\u503c\n\nj = log2(k);  return max(f[l][j], f[l-k+(1<<j)][j]) % D;\n\n.\n\n---\n\n\u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n\n```cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\ntypedef long long LL;\n\nLL N, D;\nLL f[200010][18], l; //l\u662f\u5f53\u524d\u6570\u5217\u957f\u5ea6 \n\nvoid Add(LL k) { //\u6570\u5217\u5c3e\u52a0\u4e0a\u4e00\u4e2a\u6570 \n\tLL j = log2(++l);\n\tf[l][0] = k % D;\n\tfor(LL i=1; i<=j; i++) //\u66f4\u65b0f[l][i]\n\t\tf[l][i] = max(f[l][i-1], f[l-(1<<i-1)][i-1]) % D;\n}\n\nLL Query(LL k) { //\u8be2\u95ee\u540ek\u4e2a\u6570\u7684\u6700\u5927\u503c\n\tif(k == 0) return 0; //\u6ce8\u610f\u8fd9\u4e2a\u7279\u5224 \n\tLL j = (LL)log2(k); \n\treturn max(f[l][j], f[l-k+(1<<j)][j]) % D; //\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u503c \n}\n\nint main() {\n\tchar opt;\n\tLL k, t = 0;\n\tcin >> N >> D;\n\tfor(LL i=1; i<=N; i++) {\n\t\tcin >> opt >> k;\n\t\tif(opt == 'A') Add((t+k) % D); \n\t\telse if(opt == 'Q') cout << (t = Query(k)) << endl;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1518184122,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u5b58\u653e\u6570\u636e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6700\u5927\u503c\uff0c\n\n\u8bb0\u5f55\u5b83\u662f\u4ece\u5f00\u5934\u7b2cx\u4e2a\u6570\u5230\u672b\u5c3e(\u5373\u672b\u5c3e\u7b2cL-X+1\u5f00\u59cb)\u7684\u6700\u5927\u503c\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b0\u52a0\u5165\u7684\u6570\uff0c\u5c06\u5176\u5165\u6808\uff0c\u5e76\u6807\u8bb0\u5b83\u4e3a\u7b2cL\u4e2a\uff08\u5373\u5f53\u524d\u6700\u5927\u957f\u5ea6\uff09\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u4e0d\u65ad\u4e0e\u524d\u9762\u7684\u6570\u6bd4\u8f83\uff0c\u53ea\u8981\u5927\u4e8e\u524d\u9762\u7684\u6570\u5c31\u5c06\u524d\u9762\u7684\u6570\u51fa\u6808\uff0c\n\n\u5e76\u5c06x--\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#define MAX 200000\nusing namespace std;\nstruct node{\n    int va,x;\n};\nnode stack[MAX+10];\nint found(int x,int y,int k){\n    int m=(x+y)/2;\n    if (x>=y) return x ;else{\n        if (stack[m].x==k) return m;\n            else if (stack[m].x>k) return found(x,m-1,k);\n            else return (found(m+1,y,k));\n    }\n}\nint m,d;\nint top;\nchar op[1];\nint t=0;\nint tt;\nint cnt=0;\nint main(){\n    //cin>>m>>d;\n    scanf(\"%d%d\",&m,&d);\n    for (int i=1;i<=m;i++){\n        //cin>>op;\n        scanf(\"%s%d\",&op,&tt);\n        if (op[0]=='A'){\n            //cin>>tt;\n            top++;\n            cnt++;\n            stack[top].va=(t+tt)%d;\n            stack[top].x=cnt;\n            while((stack[top].va>stack[top-1].va)&&top>1){\n                stack[top].x=stack[top-1].x;\n                swap(stack[top],stack[top-1]);\n                top--;\n            }\n        } else {\n            //cin>>tt;\n            int pos=found(1,top,cnt-tt+1);\n            //cout<<stack[stack[pos].x<=cnt-tt+1?pos:pos-1].va<<endl;\n            printf(\"%d\\n\",stack[stack[pos].x<=cnt-tt+1?pos:pos-1].va);\n            t=stack[stack[pos].x<=cnt-tt+1?pos:pos-1].va; \n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1510146823,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u5199\u4e86\u90a3\u4e48\u591aXX\u6811\u548c\u5355\u8c03\u961f\u5217\u540e\uff0c\u4e0d\u5982\u8bd5\u8bd5\u723d\u7ffb\u5929\u7684\u500d(R)\u589e(M)\u5427(Q)\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7ef4\u62a4\u4ece\u5b83\u4e3a\u8d77\u70b9\u5411\u5de62^j\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\u4ece\u5927\u5f80\u5c0f\u679a\u4e3e2^j\u66f4\u65b0\u6700\u5927\u503c\u5c31\u884c\u3002\n\n\uff08\u8fd9\u4e0d\u5c31\u662fRMQ\u4e48\u4e3a\u4ec0\u4e48\u53c8\u590d\u8ff0\u4e86\u4e00\u904d\u554a\u5582\uff09\uff08\u5212\u6389\uff09\n\n\u4ee3\u7801\uff1fhttp://www.cnblogs.com/KingSann/articles/7296397.html\n",
        "postTime": 1502031875,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u6709\u70b9\u79bb\u7ebf\u7684\u60f3\u6cd5\uff1a\u5982\u679c\u6267\u884c\u4e86m\u6b21\u52a0\u5165\u64cd\u4f5c\uff0c\u90a3\u4e48\u6574\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u4e5f\u5c31\u662fm\u5457\n\n\u6240\u4ee5\uff0c\u4e00\u5f00\u59cb\u5148\u5efa\u597d\u957f\u5ea6\u4e3am\u7684\u7ebf\u6bb5\u6811\uff0c\u521d\u59cb\u5316min=-INT\\_MAX,\u5269\u4e0b\u7684\u5c31\u662f\u6dfb\u52a0\u548c\u67e5\u8be2\u4e86\u3002\n\n\u62d9\u52a3\u7684\u4ee3\u7801\u732e\u4e0a\uff1a\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<climits>\nusing namespace std;\nint m,d;\nstruct node{\n    int l,r,num;\n    int umax;\n}tree[8*200000+16];\nchar c;\nint num,t,p;\nvoid build(int l,int r,int id){\n    int mid=(l+r)/2;\n    tree[id].l=l;\n    tree[id].r=r;\n    tree[id].umax=-INT_MAX;\n    tree[id].num=-INT_MAX;\n    if(l+1==r) return;\n    else{\n        build(l,mid,id*2);\n        build(mid,r,id*2+1);\n    }\n}\nint change(int l,int r,int id,int n){\n    if(tree[id].l==l&&tree[id].r==r){\n        tree[id].num=n;\n        tree[id].umax=n;\n        return n;\n    }else{\n        int temp,mid=(tree[id].l+tree[id].r)/2;\n        if(r<=mid) temp=change(l,r,id*2,n);\n        else if(l>=mid) temp=change(l,r,id*2+1,n);\n        else temp=max(change(l,mid,id*2+1,n),change(mid,r,id*2+1,n));\n        tree[id].umax=max(temp,tree[id].umax);\n        return tree[id].umax;\n    }\n}\nint query(int l,int r,int id){\n    if(tree[id].l==l&&tree[id].r==r) return tree[id].umax;\n    else{\n        int mid=(tree[id].l+tree[id].r)/2;\n        if(r<=mid) return query(l,r,id*2);\n        else if(l>=mid) return query(l,r,id*2+1);\n        else return max(query(l,mid,id*2),query(mid,r,id*2+1));\n    }\n}\nint main(){\n    #ifdef     ONLINE_JUDGE\n    #else\n        freopen(\"in.txt\",\"r\",stdin);\n    #endif\n    scanf(\"%d %d\\n\",&m,&d);\n    build(1,m+1,1);    \n    t=0;\n    p=1;\n    for(int i=0;i<m;i++){\n        scanf(\"%c %d\\n\",&c,&num);\n        if(c=='A'){\n            num+=t;\n            num%=d;\n            change(p,p+1,1,num);\n            p++;\n        }else if(c=='Q'){\n            t=query(p-num,p,1);\n            printf(\"%d\\n\",t);\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1475416377,
        "uid": 7789,
        "name": "\u51b0\u7ffcACE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u5176\u5b9e \u672c\u9898\u9664\u4e86\u5355\u8c03\u6808+\u4e8c\u5206/\u7ebf\u6bb5\u6811\n\n\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\n\n\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u662f\u6b8a\u9014\u540c\u5f52\u7684 \u5747\u4e3a O(nlogn)\n\n\u76f8\u4fe1\u5404\u4f4d\u540c\u5b66\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\u662f\u719f\u6089\u7684\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u4fee\u6539\u4e00\u4e0b\u6c42\u548c\u5373\u53ef\n\n\u4e0d\u8fc7\u5bf9\u4e8ePascal\u83ab\u540d\u5176\u5999\u7684\u53d6\u6a21\u548cSTD\u662fC++\u7684\u65e0\u5948\n\n\u5efa\u8bae\u8fdb\u884c\u5982\u4e0b\u5904\u7406[\u56e0\u6b64WA\u4e86\u6570\u6b2180]\n\n```delphi\nif p<=maxlongint then a[m]:=p mod k else a[m]:=(-(not p+1)) mod k; \n```",
        "postTime": 1386423380,
        "uid": 69,
        "name": "usqwedf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u7b80\u5355\u5e94\u7528\u5566~\n\n\u56e0\u4e3a\u4e00\u5f00\u59cb\u6570\u7ec4\u91cc\u4e00\u4e2a\u6570\u90fd\u6ca1\u6709\uff0c\u6240\u4ee5\u4e0d\u7528\u5efa\u6811\n\n\u6807\u8bb0\u4e5f\u4e0d\u7528\u6253qwq\n\n\u6ce8\u610f\u533a\u95f4\u957f\u5ea6\u4e3a$0$\u7684\u60c5\u51b5\u5c31AC\u5566qwq\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nint n,m;\nlong long d,t;\nlong long s[8*N];\nvoid pluss(int l,int r,int x,int a,long long pl){\n\tif(l==r){\n\t\ts[x]+=pl;\n\t\treturn;\n\t}\n\tint midd=(l+r)/2;\n\tif(a<=midd)pluss(l,midd,x*2,a,pl);\n\tif(a>midd)pluss(midd+1,r,x*2+1,a,pl);\n\ts[x]=max(s[x*2],s[x*2+1]);\n}\nlong long ask(int l,int r,int x,int a,int b){\n\tif((a<=l)&&(b>=r))return s[x];\n\tlong long summ=-2147483647;\n\tint midd=(l+r)/2;\n\tif (a<=midd)summ=max(summ,ask(l,midd,x*2,a,b));\n\tif (b>midd)summ=max(summ,ask(midd+1,r,x*2+1,a,b));\n\treturn summ;\n}\nint main(){\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%d %lld\\n\",&m,&d);\n\tfor(int i=1;i<=m;i++){\n\t\tchar kkk;\n\t\tscanf(\"%c \",&kkk);\n\t\tif(kkk=='A'){\n\t\t\tn++;\n\t\t\tlong long x;\n\t\t\tscanf(\"%lld\\n\",&x);\n\t\t\tpluss(1,m,1,n,(x+t)%d);\n\t\t}\n\t\tif(kkk=='Q'){\n\t\t\tint x;\n\t\t\tscanf(\"%d\\n\",&x);\n\t\t\tif(x==0){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tt=ask(1,m,1,n-x+1,n);\n\t\t\tprintf(\"%lld\\n\",t);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542621893,
        "uid": 76156,
        "name": "henrytb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# \u5b66\u5206\u5757\u540e\u5207\u7684\u7b2c\u4e00\u9898\n### \u8fd9\u9898\u7adf\u7136\u662f\u84dd\u9898\n#### \u8003\u8651\u5230\u9898\u89e3\u4e2d\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u7684\u7ebf\u6bb5\u6811\uff0c\u5355\u8c03\u6808\uff0c\u5206\u5757\u7684\u9898\u89e3\u3002\u4f46\u8349\u8349\u770b\u4e86\u4e00\u904d\u8c8c\u4f3c\u5e76\u6ca1\u6709\u5bf9\u64cd\u4f5c\u8fdb\u884c\u5206\u5757\u7684\u5199\u6cd5\uff0c\u4e8e\u662f\u6c34\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u8be5\u89e3\u6cd5\uff0c\u7801\u91cf\u8f83\u4f4e\uff0c\u601d\u8def\u7b80\u5355\uff0c\u89e3\u6cd5\u81ea\u7136\uff0c\u901f\u5ea6\u8fd8\u884c\u3002\n\n\u672c\u89e3\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a**\u540e\u7f00\u6700\u5927\u503c**\uff0c\u5229\u7528$maxv[l]$\u8868\u793a\u4ece$l$\u5230\u6570\u5217\u7684\u672b\u5c3e\uff0c\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u663e\u7136\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\u662f$O(m)$\u7684(\u56e0\u4e3a\u662f\u540e\u7f00\u6240\u4ee5\u6bcf\u4e00\u6b21\u6dfb\u52a0\u4e00\u4e2a\u6570\u90fd\u8981\u4ece\u540e\u5f80\u524d\u91cd\u65b0\u7ef4\u62a4\u4e00\u904d)\uff0c\u6211\u4eec\u53c8\u6709$m$\u6b21\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(m^2)$\n\n\u8003\u8651\u5206\u5757\uff08\u6bd5\u7adf\u6211\u4eca\u5929\u521a\u5b66\u5206\u5757\uff09\uff0c\u5982\u4f55\u4f7f\u8fd9\u4e2a\u7ef4\u62a4\u53d8\u5f97\u66f4\u5bb9\u6613\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06**\u64cd\u4f5c\u6682\u5b58**\u5f53\u6682\u5b58\u6570\u8fbe\u5230\u4e00\u4e2a\u91cf\u7ea7$S$\u4e86\u5c31\u628amaxv\u8fd9\u4e2a\u6570\u7ec4\u91cd\u6784\uff0c\n\n\u542c\u7740\u597d\u50cf\u8fd9\u4e2a\u505a\u6cd5\u5f88\u6df7\u86cb\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u590d\u6742\u5ea6\u8c8c\u4f3c\u8fd8\u662f\u5f88\u5927\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u6765\u63a8\u5bfc\u4e00\u4e0b\uff0c\u7531\u4e8eA\u548cQ\u7684\u64cd\u4f5c\u603b\u6570\u52a0\u8d77\u6765\u662fM\u90a3\u53ef\u4ee5\u8ba4\u4e3aA\u548cQ\u7684\u64cd\u4f5c\u6570\u7684\u671f\u671b\u90fd\u662f$M/2$\n\n\u5f88\u5bb9\u6613\u53ef\u4ee5\u7b97\u51fa\u8be5\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u7684\u6e10\u8fdb\u4e0a\u754c\u7ea6\u4e3a$$O(M*{M\\over S}+MS)\\ge O({M\\sqrt{M}})$$\u5747\u503c\u4e00\u4e0b\uff0c\u518d\u7701\u7565\u4e2a\u5e38\u6570\u5c31\u5dee\u4e0d\u591a\u4e86\uff08\u5982\u679c\u6709\u7b97\u9519\u7684\u5730\u65b9\u8bf7\u79c1\u4fe1\u6211QQ965296197\uff09\u6839\u636e\u5747\u503c\u4e0d\u7b49\u5f0f\u6613\u77e5\uff0c\u5f53\u8fd9\u4e24\u9879\u76f8\u7b49\u65f6\uff0c\u53ef\u53d6\u5230\u7b49\u53f7\u3002\u6b64\u65f6$$S={\\sqrt{M}}$$\uff08\u53ef\u4ee5\u901a\u8fc7\u6c42\u6839\u516c\u5f0f\u63a8\u51fa\uff09\u7c97\u7565\u8ba4\u4e3a\u8fd9\u662f\u6700\u4f18\u7684~~\u867d\u7136\u5c31\u662f\u5757\u5927\u5c0f\u53d6\u5176\u4ed6\u6709\u53ef\u80fd\u4f1a\u5feb\u4e00\u70b9~~\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u88ab\u6211\u4eec$O(M^2)$\u6253\u5230\u4e86$O(M\\sqrt{M})$ yeah\uff01\u8fd9\u4e2a\u590d\u6742\u5ea6\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u4e00\u9898\u5c31\u8db3\u591f\u4e86\uff01\n\n\u7136\u540e\u6ca1\u5f53\u5b58\u50a8\u7684\u64cd\u4f5c\u6570\u8fbe\u5230S\u5c31\u91cd\u6784\u4e00\u4e0bmaxv\u6570\u7ec4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u5c31\u5148\u5728\u6682\u5b58\u6570\u7ec4\u4e2d\u66b4\u529b\u626b\uff0c\u7136\u540e\u591a\u4f59\u7684\u518d\u5728maxv\u4e2d\u67e5\u8be2\uff0c\u8fd9\u79cd\u5206\u5757\u8fd8\u662f\u5f88\u597d\u5199\u7684\uff0c\u800c\u4e14\u7801\u91cf\u975e\u5e38\u5c0f\u3002\uff08\u5bf9\u4e86\u5355\u8c03\u6808\u6211\u662f\u771f\u7684\u6ca1\u60f3\u5230\uff09\n\nstd:1092ms 2.14MB \u6bd4\u5927\u90e8\u5206\u7684\u7ebf\u6bb5\u6811\u8fd8\u662f\u8981\u597d\u4e00\u4e9b\u7684\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nconst int maxn = 2e5 + 20;\nconst long long minINF = (1<<64);\nint m, d, m_size, top;\nlong long temp, n, maxv[maxn];//maxv\u662f\u4e00\u4e2a\u540e\u7f00\u6700\u5927\u503c maxv[l]\u8868\u793a\u533a\u95f4[l,top]\u4e2d\u7684\u6700\u5927\u503c\nvector<long long> val;\nchar opt[3];\n\nvoid reverse(){//\u6bcfS\u4e2aA\u64cd\u4f5c\u8fdb\u884c\u4e00\u6b21\u7ea6\u4e3aO(M/2S)\n    for(int i = 0; i < val.size(); i++)//O(S)\n        maxv[++top] = val[i];\n    for(int i = top-1; i >= 1; i--)\n        maxv[i] = max(maxv[i], maxv[i+1]);;//O(M/2)\n    val.clear();\n}\n\nlong long query(int len){//\u53ef\u7b97\u4f5cM/2\u6b21\u64cd\u4f5cO(M/2)\n    long long ans = minINF;\n    for(int i = val.size() - 1; i >= 0 && len >= 0; len--,i--)\n        ans = max(ans, val[i]);//\u5148\u5728\u5f53\u524d\u5b58\u50a8\u7684\u64cd\u4f5c\u4e2d\u67e5\u627eO(S)\n    if(len > 0)//\u5982\u679clen\u5f88\u5927\u7ee7\u7eed\u5728maxv\u4e2dO(1)\u67e5\u627e\n        ans = max(ans, maxv[top-len+1]);//maxv[top-(len-1)]\u8868\u793a\u5012\u6570len\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\n    return ans;\n}\n\nint main(){\n    scanf(\"%d%d\", &m, &d);\n    m_size = (1+(int)sqrt(1+2*m));\n    while(m--){\n        scanf(\"%s%lld\", opt, &n);\n        if(opt[0] == 'A'){\n            val.push_back((n+temp)%d);\n            if(val.size() > m_size)\n                reverse();\n        }else{\n            scanf(\"%lld\", &n);\n            temp = query(n);\n            cout << temp <<endl;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1540996427,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u79bb\u7ebf\u505a\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u5728\u63d2\u5165\u7b2cii\u4e2a\u6570\u4e4b\u524d\u8fdb\u884c\u4e8611\u6b21\u67e5\u8be2\uff0c\u5728\u63d2\u5165\u7b2cjj\u4e2a\u6570\u4e4b\u524d\u53c8\u8981\u8fdb\u884c\u67e5\u8be2\uff0c\u90a3\u4e48\u9898\u4e2d\u7684+t+t\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u7ed9\u533a\u95f4[i,j\u22121][i,j\u22121]\u52a0\u4e0a\u63d2\u5165\u7b2cii\u4e2a\u6570\u4e4b\u524d\u8fdb\u884c\u7684\u67e5\u8be2\u7684\u7ed3\u679c \n\n\u8fd9\u6837\u4e00\u6765\u601d\u8def\u5c31\u6bd4\u8f83\u660e\u6670\u4e86\n\n\u7528q1\u8bb0\u5f55\u63d2\u5165\u7684\u4e0d\u7ecf\u8fc7+t\u5904\u7406\u7684\u539f\u6570 \n\n\u7528q2\u8bb0\u5f55\u67e5\u8be2\u7684L \n\n\u7528duan[i]\u6765\u8bb0\u5f55\u8fd9\u4e2a\u63d2\u5165\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u4e4b\u524d\u8981\u67e5\u8be2\u51e0\u6b21 \n\n\u7136\u540e\u76f4\u63a5\u6309q1\u6765\u5efa\u6811\uff0c\u7136\u540e\u4ece\u524d\u5411\u540e\u626b\u4e00\u904d\uff0c\u7528pre\u6765\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u63d2\u5165\u4e4b\u524d\u8fdb\u884c\u67e5\u8be2\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u4e0a\u9762\u8bf4\u7684\u6765\u5373\u53ef \n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define For(i,l,r) for(int i=l;i<=r;++i)\n#define ls (x<<1)\n#define rs ((x<<1)|1)\n#define mid ((l+r)>>1)\n#define lo long long\n#define MAXN 200010\nusing namespace std;\nlo int read()\n{\n    char c;bool t=0;lo int a=0;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-'){t=1;c=getchar();}\n    while(isdigit(c)){a*=10;a+=(c-'0');c=getchar();}\n    return a*(t?-1:1);\n}\nlo maxx[MAXN*4],ans=-2147483647;\nint q1[MAXN],q2[MAXN],D,l1=1,l2=1,m,duan[MAXN];\nvoid build(int l,int r,int x)\n{\n    if(l==r)maxx[x]=q1[l];\n    else\n    {\n        build(l,mid,ls);\n        build(mid+1,r,rs);\n        maxx[x]=max(maxx[ls],maxx[rs]);\n    }\n}\nvoid modify(int l,int r,int x,int ll,int rr,int k)\n{\n    if(l==r)maxx[x]=(maxx[x]+k)%D;\n    else\n    {\n        if(ll<=mid)\n         modify(l,mid,ls,ll,rr,k);\n        if(mid<rr)\n         modify(mid+1,r,rs,ll,rr,k);\n        maxx[x]=max(maxx[ls],maxx[rs]);\n    }\n}\nvoid ask(int l,int r,int x,int ll,int rr)\n{\n    if(ll<=l&&r<=rr)ans=max(ans,maxx[x]);\n    else\n    {\n        if(ll<=mid)\n         ask(l,mid,ls,ll,rr);\n        if(mid<rr)\n         ask(mid+1,r,rs,ll,rr);\n    }\n}\nint main()\n{\n    int pre=1,t2=1;\n    char c;\n    m=read();D=read();\n    For(i,1,m)\n    {\n        while((c=getchar())==' '||c=='\\n'||c=='\\r');\n        if(c=='A')//\u63d2\u5165 \n        {\n            q1[l1]=read();++l1;\n        }\n        else//\u67e5\u8be2 \n        {\n            duan[l1]++;q2[l2]=read();++l2;//modify(pre,l1-1,ans)\n        }\n    }\n    build(1,l1-1,1);\n    For(i,1,l1)\n    {\n        if(duan[i])\n        {\n            if(ans!=-2147483647)//\u4e4b\u524d\u6ca1\u6709\u67e5\u8be2\n             modify(1,l1-1,1,pre,i-1,ans);\n            pre=i;\n        }\n        while(duan[i])\n        {\n            ans=-2147483647;\n            ask(1,l1-1,1,i-q2[t2],i-1);\n            printf(\"%lld\\n\",ans);\n            ++t2;\n            --duan[i];\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1534756364,
        "uid": 36194,
        "name": "EightSixSun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "**\u7ffb\u4e86\u597d\u51e0\u9875\u9898\u89e3\uff0c\u6ca1\u6709\u51e0\u4e2a\u5199splay\u7684\uff0c\u90a3\u6211\u5c31\u53d1\u4e00\u7bc7splay\u7684\u9898\u89e3\u5427\uff1a**\n\n\n**A:**\n\u628a\u6811\u7684\u6700\u540e\u4e00\u4f4d\u65cb\u5230\u6839\uff0c\u628a\u65b0\u70b9\u63a5\u5230\u6839\u7684\u53f3\u5b69\u5b50\u5904\uff1b\n\n**Q\uff1a**\n\u8f93\u51fa\u7ef4\u62a4\u7684ma\u3010\u3011\u6570\u7ec4\uff0c\u4e5f\u5c31\u662fsplay\u7ef4\u62a4\u7684\u533a\u95f4\u6700\u5927\u503c\n\u6709\u4e00\u4e2a\u5730\u65b9\u8981\u6ce8\u610f\uff0c\u5047\u8bbe\u5f53\u524d\u6570\u7ec4\u957f\u5ea6len=2\uff0c\u8fdb\u884c\u64cd\u4f5cQ 2\n\u6b64\u65f6\u65e0\u6cd5\u5c06\u7b2c0\u4f4d\u65cb\u8f6c\u5230\u6839\uff0c\u6240\u4ee5\u6b64\u65f6\u7279\u5224\uff0c\u51fa\u73b0\u8fd9\u4e2a\u60c5\u51b5\u7684\u65f6\u5019\u76f4\u63a5\u8f93\u51fama\u3010root\u3011\u5c31\u53ef\u4ee5\u4e86\n\n**\n\u5f53\u7136\u901f\u5ea6\u4e0d\u5982\u7ebf\u6bb5\u6811 = =** \n\n```cpp\n#include\"bits/stdc++.h\"\nusing namespace std;\n\n\nconst int maxn = 200010;\nint num[maxn];\n\nint temp,len;\nint size[maxn];\nint val[maxn],ma[maxn],tr[800000];\nint ch[maxn][2];\nint f[maxn];\nint root,tot,t;\n\nvoid pushup(int x)\n{\n\tint l=ch[x][0],r=ch[x][1];\n\tsize[x]=size[l]+size[r]+1;\n\tma[x]=max(val[x],max(ma[l],ma[r])); \n}\nint isr(int x)\n{\n\treturn ch[f[x]][1]==x;\n\t\n}\nvoid rotate(int x,int d)\n{\n\tint y=f[x],z=f[y];\n\t\n\tch[y][!d]=ch[x][d];\n\tf[ch[x][d]]=y;\n\tpushup(y);\n\t\n\tint t=isr(y);\n\tch[x][d]=y;\n\tf[y]=x;\n\tpushup(x);\n\t\n\tif (z) ch[z][t]=x;\n    f[x]=z;\n    if (z) pushup(z);\n    \n\t\n\t\n}\nvoid splay(int x,int goal)\n{\n\twhile (f[x]!=goal)\n\t{\n\t\tint y=f[x],z=f[y];\n        if (z==goal) \n         {\n         \trotate(x,!isr(x));\n         \tbreak;\n\t\t }\n        if (ch[z][0]==y)\n         {\n         \tif (ch[y][0]==x) rotate(y,1),rotate(x,1);\n         \telse rotate(x,0),rotate(x,1);\n\t\t }\n\t\telse \n\t\t {\n\t\t \tif (ch[y][1]==x) rotate(y,0),rotate(x,0);\n\t\t \telse rotate(x,1),rotate(x,0); \n\t\t }\n\t\t\n\t\t\n\t}\n\t\n\tif (!goal) root = x;\n } \nint find(int k,int rt)\n{  \n    if (k==size[ch[rt][0]]+1) return rt;\n\telse if (k<=size[ch[rt][0]]) return find(k,ch[rt][0]);\n\telse return find(k-size[ch[rt][0]]-1,ch[rt][1]);\n}\nvoid insert(int k)\n{\n\tif (!root) \n\t {  ++len;\n\t \troot=++tot;\n\t \tval[tot]=k;\n\t \tma[tot]=k;\n\t \tsize[tot]=1;\n\t \treturn ;\n\t }\n\tint aa=find(len,root);\n\t++len;\n\n\tsplay(aa,0);\n\t++tot;\n\tval[tot]=k;\n\tsize[tot]=1;\n\tma[tot]=k;\n\tch[aa][1]=tot;\n\tf[tot]=aa;\n\tpushup(aa);\n\t\n\t\n\t\n\t\n}\n\nvoid print(int rt)\n{\n\tint l=ch[rt][0],r=ch[rt][1];\n\tprintf(\"%d %d %d %d %d %d\\n\",rt,val[rt],l,r,ma[rt],size[rt]);\n\tif (l) print(l);\n\tif (r) print(r);\n}\nint main()\n{\n\tint T,D;\n   cin>>T>>D;\n   while (T--)\n    {\n    \tchar ss;int pos;\n    \tcin>>ss>>pos;\n    \t\n    \tif (ss=='A')\n    \t { \n  \t        insert((pos+t)%D);\n\t\t\n    \t \t\n\t\t }\n\t\t else\n\t\t  {   int tt=len-pos;\n\t\t      if (!tt) \n\t\t\t   {\n\t\t\t   \tcout<<(t=ma[root])<<endl;\n\t\t\t   \tcontinue;\n\t\t\t   }\n\t\t\tint aa = find(tt,root);\n\t\t  \t  splay(aa,0);\n\t\t  \t  t=ma[ch[root][1]];\n\t\t  \t  cout<<(t)<<endl;\n\t\t  \t\n\t\t  }\n\t\t\n\t}\n\t \n\t\t\n}\n```",
        "postTime": 1534732970,
        "uid": 50852,
        "name": "zhangbubu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# [\u63a8\u8350\u4f7f\u7528\u535a\u5ba2\u9605\u8bfb](https://www.cnblogs.com/henry-1202/p/9090699.html)\n\n\u9898\u9762\n\nDescription\n\n\u3000\u3000\u73b0\u5728\u8bf7\u6c42\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217\uff0c\u8981\u6c42\u63d0\u4f9b\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n  \n  1\u3001 \u67e5\u8be2\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aQ L \u529f\u80fd\uff1a\u67e5\u8be2\u5f53\u524d\u6570\u5217\u4e2d\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6570\u7684\u503c\u3002\u9650\u5236\uff1aL\u4e0d\u8d85\u8fc7\u5f53\u524d\u6570\u5217\u7684\u957f\u5ea6\u3002\n  \n  2\u3001 \u63d2\u5165\u64cd\u4f5c\u3002\u8bed\u6cd5\uff1aA n \u529f\u80fd\uff1a\u5c06n\u52a0\u4e0at\uff0c\u5176\u4e2dt\u662f\u6700\u8fd1\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\uff08\u5982\u679c\u8fd8\u672a\u6267\u884c\u8fc7\u67e5\u8be2\u64cd\u4f5c\uff0c\u5219t=0)\uff0c\u5e76\u5c06\u6240\u5f97\u7ed3\u679c\u5bf9\u4e00\u4e2a\u56fa\u5b9a\u7684\u5e38\u6570D\u53d6\n\u6a21\uff0c\u5c06\u6240\u5f97\u7b54\u6848\u63d2\u5165\u5230\u6570\u5217\u7684\u672b\u5c3e\u3002\n\n\u9650\u5236\uff1an\u662f\u975e\u8d1f\u6574\u6570\u5e76\u4e14\u5728\u957f\u6574\u8303\u56f4\u5185\u3002\u6ce8\u610f\uff1a\u521d\u59cb\u65f6\u6570\u5217\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4e00\u4e2a\n\u6570\u3002\n\nInput\n\n\u3000\u3000\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0cM\u548cD\uff0c\u5176\u4e2dM\u8868\u793a\u64cd\u4f5c\u7684\u4e2a\u6570(M <= 200,000)\uff0cD\u5982\u4e0a\u6587\u4e2d\u6240\u8ff0\uff0c\u6ee1\u8db3D\u5728longint\u5185\u3002\u63a5\u4e0b\u6765\nM\u884c\uff0c\u67e5\u8be2\u64cd\u4f5c\u6216\u8005\u63d2\u5165\u64cd\u4f5c\u3002\n\nOutput\n\n\u3000\u3000\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u8f93\u51fa\u4e00\u884c\u3002\u8be5\u884c\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u5373\u5e8f\u5217\u4e2d\u6700\u540eL\u4e2a\u6570\u7684\u6700\u5927\u6570\u3002\n\nSample Input\n\n5 100\n\nA 96\n\nQ 1\n\nA 97\n\nQ 1\n\nQ 2\n\nSample Output\n\n96\n\n93\n\n96\n\n\u9898\u89e3\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u505a\u6cd5\uff0c\u5355\u8c03\u961f\u5217\u548c\u7ebf\u6bb5\u6811\n\n\u5148\u8bf4\u4e00\u4e0b\u7ebf\u6bb5\u6811\u89e3\u6cd5\n\n\u4e00.\u7ebf\u6bb5\u6811\u89e3\u6cd5\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u5c31\u80fd\u60f3\u5230\u7ebf\u6bb5\u6811\u5427\n\n\u8fd9\u9053\u9898\u7684\u7ebf\u6bb5\u6811\u4ee3\u7801\u4e5f\u5f88\u5bb9\u6613\u6253\uff0c\u6bd5\u7adf\u90fd\u6ca1\u6709lazy\u6807\u8bb0\uff0c\u5c31\u662f\u5355\u7eaf\u7684\u70b9\u4fee\u6539\n\n\u7136\u540e\u5efa\u6811\u51fd\u6570\u4e5f\u53ef\u4ee5\u4e0d\u6253\u7684..\u8fd9\u9053\u9898\u7684\u63d2\u5165\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5efa\u6811\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u4e0d\u6253\u5efa\u6811\u51fd\u6570\u7684\u8bdd\u4ee3\u7801\u524d\u9762memset\u4e00\u4e0b-inf\u5c31\u597d\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\n#define ll long long\n#define inf 0x7fffffff\n#define il inline \nil ll max(ll x,ll y){return x>y?x:y;}\nil ll min(ll x,ll y){return x<y?x:y;}\nil ll abs(ll x){return x>0?x:-x;}\nil void swap(ll &x,ll &y){ll t=x;x=y;y=t;}\nil void read(ll &x){\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nusing namespace std;\n/*===================Header Template=====================*/\n#define N 200010\nll t[N<<2],n,mod,len=0,T=0;\nvoid update(ll L,ll c,ll l,ll r,ll rt){\n    if(l==r){t[rt]=c;return;}\n    ll mid=(l+r)>>1;\n    if(L<=mid)update(L,c,l,mid,rt<<1);\n    else update(L,c,mid+1,r,rt<<1|1);\n    t[rt]=max(t[rt<<1],t[rt<<1|1]);\n}\nll query(ll L,ll R,ll l,ll r,ll rt){\n    if(L<=l&&R>=r)return t[rt];\n    ll mid=(l+r)>>1,ans=-inf;\n    if(L<=mid)ans=max(ans,query(L,R,l,mid,rt<<1));\n    if(R>mid)ans=max(ans,query(L,R,mid+1,r,rt<<1|1));\n    return ans;\n}\nint main(){\n    memset(t,128,sizeof(t));\n    read(n);read(mod);\n    for(ll i=1;i<=n;i++){\n        char c=getchar();\n        ll num;read(num);\n        if(c=='A'){\n            len++;\n            update(len,(num+T)%mod,1,n,1);\n        }else {\n            if(num){\n                T=query(len-num+1,len,1,n,1)%mod;\n                printf(\"%lld\\n\",T);\n            }else {\n                printf(\"0\\n\");\n                T=0;\n            }\n        }\n    }\n    return 0;\n}\n \n```\n\u3000\u3000\n\n \n\n\u7136\u800c\u8fd9\u9053\u9898\u662f\u5f88\u7384\u5b66\u7684\uff0c\u4f60\u628a\u8fd9\u4e2a\u4ee3\u7801\u6254\u5230\u6d1b\u8c37\u4e0a\u9762\u4f1a\u53d1\u73b0\u5168\u90e8\u70b9MLE\uff0c\u7136\u540e\u5728bzoj\u662f\u80fdac\u7684...\n\n\u5982\u679c\u8981\u5728\u6d1b\u8c37\u63d0\u4ea4\u5c31\u770b\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u601d\u8def\u81ea\u5df1\u8bd5\u7740\u6253\u4e00\u4e2a\uff0c\u6216\u8005\u8bf4\u770b\u770b\u4e0b\u9762\u7684\u5355\u8c03\u961f\u5217\u5199\u6cd5\n\n\u4e8c.\u5355\u8c03\u961f\u5217\u89e3\u6cd5\n \u5355\u8c03\u961f\u5217\u7684\u5199\u6cd5\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4f46\u662f\u5f88\u96be\u60f3\u5230\u8fd9\u4e2a\u505a\u6cd5\uff0c\u6bd5\u7adf\u5982\u679c\u5b66\u8fc7\u7ebf\u6bb5\u6811\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7684\u4e5f\u4f1a\u662f\u7ebf\u6bb5\u6811\u5427\n\n\u8fd9\u91cc\u7ef4\u62a4\u4e00\u4e0b\u6700\u5927\u503c\u5c31\u597d\n\n ```\n\n#include <cstdio>\n#include <cstring>\n#define ll int\n#define inf 1<<30\n#define il inline \nil ll max(ll x,ll y){return x>y?x:y;}\nil ll min(ll x,ll y){return x<y?x:y;}\nil ll abs(ll x){return x>0?x:-x;}\nil void swap(ll &x,ll &y){ll t=x;x=y;y=t;}\nil void read(ll &x){\n    x=0;ll f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    x*=f;\n}\nusing namespace std;\n/*===================Header Template=====================*/\n#define N 200010\nll mx[N],a[N],p,m,mod,t,l=0;\nchar c[1];\nint main(){\n\tread(m);read(mod);\n\twhile(m--){\n\t\tscanf(\"%s%d\",c,&p);\n\t\tif(c[0]=='A'){\n\t\t\ta[++t]=(l+p)%mod;\n\t\t\tfor(ll i=t;i;i--){\n\t\t\t\tif(mx[i]<a[t])mx[i]=a[t];\n\t\t\t\telse break;\n\t\t\t}\n\t\t}else printf(\"%d\\n\",l=mx[t-p+1]);\n\t}\n\treturn 0;\n}\n ```",
        "postTime": 1527262368,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8bf4\u8d77\u6765\u8fd9\u8fd8\u662f\u849f\u84bbAC\u7684\u7b2c\u4e00\u9053\u7701\u9009\u7ebf\u6bb5\u6811\u5462\u3002\n\n\u8fd9\u9053\u9898\u548c\u5176\u4ed6\u7ebf\u6bb5\u6811\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\u5728\u4e8e\u672c\u9898\u6570\u7ec4\u4e00\u76f4\u5728\u589e\u5927\u3002\n\n\u5bfb\u5e38\u7684\u7ebf\u6bb5\u6811\u849f\u84bb\u4e60\u60ef\u7528\u5982\u4e0b\u7684\u7ed3\u6784\u4f53\u50a8\u5b58\uff0c\u7136\u800c\u5bf9\u4e8e\u6b64\u9898\u5c31\u4e0d\u884c\u4e86\uff1a\n\n```cpp\nstruct node{\n\tint l, r;\n\tint val;\n} tree[maxn << 2];\n```\n\n\u8fd9\u662f\u56e0\u4e3a\u8fd9\u9053\u9898\u6ca1\u6709\u7528\u5efa\u6811\uff0c\u56e0\u6b64l, r\u5c31\u4e0d\u5b58\u5728\u554a\uff01\n\n\u90a3\u4e48\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u7528\u6734\u5b9e\u7684tree\u6570\u7ec4\u50a8\u5b58val, l\u548cr\u5219\u624b\u52a8\u4f20\u5165\u51fd\u6570\uff01\uff01\n\n\u6240\u4ee5\u6839\u636e\u8fd9\u4e2a\u539f\u7406\uff0c\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u6a21\u677f\u5c31\u53ef\u4ee5\u5f97\u51fa\u5168\u65b0\u7684\u4e24\u4e2a\u51fd\u6570\uff01\uff01\n\n```cpp\nvoid Update(ll l, ll r, ll index, ll value, ll pos) {\n    if(l == r) {\n    \ttree[pos] = value;\n    \treturn ;\n\t}\n    ll mid = (l + r) >> 1;\n\tif(mid >= index) Update(l, mid, index, value, pos << 1);\n    if(mid < index) Update(mid + 1, r, index, value, pos << 1 | 1);\n    tree[pos] = max(tree[pos << 1], tree[pos << 1 | 1]);\n}\n\nll Query(ll L, ll R, ll l, ll r, ll pos) {\n    if(L >= l && R <= r) return tree[pos];\n    ll mid = (L + R) >> 1;\n    ll ans = 0;\n    if(mid >= l) ans = max(ans, Query(L, mid, l, r, pos << 1));\n    if(mid < r) ans = max(ans, Query(mid + 1, R, l, r, pos << 1 | 1));\n    return ans;\n}\n```\n\n\u6ce8\u660e\uff1a\u7b2c\u4e8c\u4e2a\u51fd\u6570\u4e2d\uff0cL,R\u8868\u793a\u5f53\u524d\u533a\u95f4\uff0cl,r\u8868\u793a\u5bfb\u627e\u7684\u533a\u95f4\u3002\n\n\u5b8c\u6574AC\u4ee3\u7801\u732e\u4e0a\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int maxn = 200200;\n\nll tree[maxn << 2];\n\nll m, d, t = 0, len = 0, x;\nchar op;\n\nvoid Update(ll l, ll r, ll index, ll value, ll pos) {\n    if(l == r) {\n    \ttree[pos] = value;\n    \treturn ;\n\t}\n    ll mid = (l + r) >> 1;\n\tif(mid >= index) Update(l, mid, index, value, pos << 1);\n    if(mid < index) Update(mid + 1, r, index, value, pos << 1 | 1);\n    tree[pos] = max(tree[pos << 1], tree[pos << 1 | 1]);\n}\n\nll Query(ll L, ll R, ll l, ll r, ll pos) {\n    if(L >= l && R <= r) return tree[pos];\n    ll mid = (L + R) >> 1;\n    ll ans = 0;\n    if(mid >= l) ans = max(ans, Query(L, mid, l, r, pos << 1));\n    if(mid < r) ans = max(ans, Query(mid + 1, R, l, r, pos << 1 | 1));\n    return ans;\n}\n\nint main() {\n    cin >> m >> d;\n    for(ll i = 0; i < m; i++){\n        cin >> op >> x;\n        if(op == 'Q') {\n        \tif(x == 0) {\n        \t\tt = 0;\n        \t\tcout << t << endl;\n\t\t\t} else {\n\t\t\t\tt = Query(1, m, len - x + 1, len, 1);\n\t\t\t\tcout << t << endl;\n\t\t\t}\n\t\t} else {\n            len++;\n            Update(1, m, len, (x + t) % d, 1);\n        }\n    }\n}\n```\n\n------------\n\n\u672c\u4ee3\u78011776ms\uff0c \u6c27\u5316\u540e1276ms\u3002\n\n\u6bd4\u8f83\u7384\u5b66\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f\u7528cin\u8fc7\u4e86\uff0c\u7528scanf\u548c\u5feb\u8bfb\u5374TLE\u4e86\u3002\u3010\u6ed1\u7a3d\u3011",
        "postTime": 1526028470,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u849f\u84bb\u5199\u7684\u7ebf\u6bb5\u6811\u9898\u89e3\n\n-------------\n\n### \u7ebf\u6bb5\u6811\u505a\u7684\u592a\u8270\u96be\u4e86QAQ\n\n##### ~~\u5176\u5b9e\u56e0\u4e3a\u6211\u592a\u83dc\u4e86\u5176\u4ed6\u7b97\u6cd5\u90fd\u4e0d\u4f1a~~\n\n##### [\u849f\u84bb\u8270\u96be\u7684AC\u8def\u7a0b](https://www.luogu.org/recordnew/lists?uid=62308&pid=P1198&status=&sort=0)\n\n-------------\n\n#### \u8fd9\u9898\u8981\u6ce8\u610f\u7684\u70b9\u5f88\u591a\uff0c\u56e0\u4e3a\u6570\u636e\u7684\u52a0\u5f3a\uff0c\u5f88\u591a\u7ebf\u6bb5\u6811\u7684\u4ee3\u7801\u90fd\u6302\u4e86\n\n- \u7ebf\u6bb5\u6811\u4e2d\u7684\u4e8c\u5206\u64cd\u4f5c\u8981\u4f4d\u8fd0\u7b97~~\u53ef\u80fd\u53ea\u6709\u6211\u8fd9\u4e2a\u849f\u84bb\u6ca1\u6709\u8fd9\u4e2a\u4e60\u60ef\u5427~~\n\n- \u6700\u540e\u4e00\u4e2a\u70b9\u5361\u5feb\u8bfb(fread**\u597d\u50cf**\u6ca1\u4e8b)\uff0c\u8981\u7528cin+\u53d6\u6d88\u4e0escanf\u540c\u6b65\u4f18\u5316(ios::sync_with_stdio(false);)\n\n- \u53d8\u91cf\u7c7b\u578bint\u5c31\u884c\u4e86\uff0c~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0d\u8981\u95ee\u6211~~\n\n------------\n\n#### \u9996\u5148\u6765\u7814\u7a76\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\n\n\u5f00\u4e00\u4e2a\u53d8\u91cflen\u8868\u793a\u6570\u5217\u5927\u5c0f\uff0c\u4e00\u5f00\u59cb\u4e3a0\n\n\u6dfb\u52a0\u7684\u65f6\u5019len++,\u7136\u540e\u5728len\u4f4d\u7f6e\u5355\u70b9\u4fee\u6539(n+t)%d\n\n\u67e5\u8be2\u7684\u65f6\u5019\u533a\u95f4\u67e5\u8be2len-l+1\u5230len\u6700\u5927\u503c\n\n- Q : \u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48\uff1f\n\n- A : ...\u6211\u6ca1\u529e\u6cd5\u4e86\uff0c\u4e0a\u7f51\u67e5\u5427\n\n----------\n\n#### \u7136\u540e\u5c31\u662f\u849f\u84bb\u5199\u7684\u4ee3\u7801\u4e86qaq\n\n#### Code :\n\n```cpp\n//[JSOI2008]\u6700\u5927\u6570\n//2364ms / 4085KB\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n\nconst int MAXN = 200005;\nint m,MOD,len;\nint tree[MAXN * 8];\n#define mymax(x,y) (x > y ? x : y)\n\nchar mygetchar()\n{\n    char ch;\n    while (true)\n    {\n        ch = getchar();\n        if (ch != ' ' && ch != '\\r' && ch != '\\n') return ch;\n    }\n}\n\nint readint()\n{\n    int ret = mygetchar() - '0';\n    char ch;\n    while (true)\n    {\n        ch = getchar();\n        if (ch != ' ' && ch != '\\r' && ch != '\\n') ret = ret * 10 + ch - '0';\n        else return ret;\n    }\n}\n\nvoid insert(int o,int l,int r,int pos,int k)\n{\n    if (l >= r) tree[o] = k;\n    else\n    {\n        int mid = (l + r) >> 1;\n        if (pos <= mid) insert(o << 1, l, mid, pos, k);\n        else insert(o << 1 | 1, mid + 1, r, pos, k);\n        tree[o] = mymax(tree[o << 1], tree[o << 1 | 1]);\n    }\n}\n\nint getmax(int o,int l,int r,int L,int R)\n{\n    if (l == L && r == R) return tree[o];\n    else\n    {\n        int mid = (l + r) >> 1;\n        if (R <= mid) return getmax(o << 1, l, mid, L, R);\n        else if (L >= mid + 1) return getmax(o << 1 | 1, mid + 1, r, L, R);\n        else return mymax( getmax(o << 1, l, mid, L, mid), getmax(o << 1 | 1, mid + 1, r, mid + 1, R));\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    char p1;\n    int p2,i;\n    int t = 0;\n    cin >> m >> MOD;\n    for (i = 1;i <= MAXN;i++) tree[i] = -99999999;\n    while (m--)\n    {\n        cin >> p1 >> p2;\n        if (p1 == 'A')\n        {\n            insert(1, 1, MAXN, ++len, (p2 + t) % MOD);\n        }\n        else\n        {\n            if (!p2) printf(\"0\\n\");\n            else \n            {\n                t = getmax(1, 1, MAXN, len - p2 + 1, len);\n                printf(\"%d\\n\",t);\n            }\n        }\n    }\n    return 0;\n}\n```\n\n-------\n\nQWQ",
        "postTime": 1520935500,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# $splay$\u677f\u5b50\u9898\u5440\u3002\u3002\u3002\n## \u697c\u4e0b\u5c45\u7136\u6ca1\u6709\u4eba\u5199\uff1f\uff1f\uff1f\n\n------------\n\n### $splay$\u53ea\u8981\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\u5c31\u884c\u4e86\uff1a\n#### 1\u3001\u63d2\u5165\n#### 2\u3001\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\n### \u5982\u679c\u4e0d\u4f1a$splay$\u53ef\u4ee5\u770b\u4e0b[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P2042)\u548c[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3391)\n#### \u4e0d\u591a\u8bf4\u4e86\uff0c\u63d2\u5165\u7b2c\u4e00\u4e2a\u503c\u65f6\u6ce8\u610f\u4e00\u4e0b\u5c31\u884c\u4e86\n## \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<map>\n#include<set>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<algorithm>\n#include<ctime>\n#define RG register\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\n#define ll long long \ninline ll gl(){\n    RG ll data=0,w=1;\n    RG char ch=0;\n    while(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n    if(ch=='-') w=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') data=(data<<1)+(data<<3)+(ch^48),ch=getchar();\n    return w*data;\n}\n\n#define INF 999999999999999\n#define N 200010\nll _t=0,MOD;\nstruct Node{int fa,ch[2],size;ll val,maxv;}t[N];\nint root=0,total=2;\ninline void update(RG int x){\n\tt[x].size=t[t[x].ch[0]].size+t[t[x].ch[1]].size+1;\n    t[x].maxv=t[x].val;\n    if(t[x].ch[0]) t[x].maxv=max(t[t[x].ch[0]].maxv,t[x].maxv);\n    if(t[x].ch[1]) t[x].maxv=max(t[t[x].ch[1]].maxv,t[x].maxv);\n}\ninline int get(int x){return t[t[x].fa].ch[1]==x;}\nvoid rotate(int x){\n\tint y=t[x].fa,z=t[y].fa,k=get(x);\n\tt[z].ch[get(y)]=x,t[x].fa=z;\n\tt[t[x].ch[k^1]].fa=y,t[y].ch[k]=t[x].ch[k^1];\n\tt[x].ch[k^1]=y,t[y].fa=x;\n\tupdate(y),update(x);\n}\nvoid splay(int x,int goal){\n\twhile(t[x].fa!=goal){\n\t\tint y=t[x].fa,z=t[y].fa;\n\t\tif(z!=goal) (get(x)^get(y))?rotate(x):rotate(y);\n\t\trotate(x);\n\t}\n\tif(!goal) root=x;\n}\nint k_th(int k){\n\tint x=root;\n\twhile(1){\n\t\tif(t[t[x].ch[0]].size+1==k) return x;\n\t\telse if(t[t[x].ch[0]].size+1<k) k-=(t[t[x].ch[0]].size+1),x=t[x].ch[1];\n\t\telse if(t[t[x].ch[0]].size+1>k) x=t[x].ch[0];\n\t}\n}\nvoid insert(int k,ll v){\n\ttotal++;\n\tif(k==1){\n\t\troot=3;\n\t\tt[1].fa=t[2].fa=3;\n\t\tt[3].ch[0]=1,t[3].ch[1]=2;\n\t\tt[3].val=t[3].maxv=v;\n\t\tt[1].ch[0]=t[1].ch[1]=t[2].ch[0]=t[2].ch[1]=0;\n\t\tupdate(1),update(2),update(3);\n\t}\n\telse{\n\t    int nx0=k_th(k),nx1=k_th(k+1);\n\t    splay(nx0,0);splay(nx1,root);\n\t    t[t[root].ch[1]].ch[0]=total;\n\t    t[total].size=1,t[total].val=t[total].maxv=v;\n\t    t[total].fa=nx1;\n    }\n}\nll query(int l,int r){\n\tl=k_th(l);r=k_th(r+2);\n\tsplay(l,0);splay(r,root);\n\treturn t[t[r].ch[0]].maxv;\n}\nint main(){\n\tint T=gl();MOD=gl();\n\tt[1].val=t[2].val=t[1].maxv=t[2].maxv=-INF;\n\tt[1].size=1,t[1].fa=2;\n\tt[2].ch[0]=1,t[2].size=2;root=2;\n\twhile(T--){\n\t\tchar ch[10];\n\t\tscanf(\"%s\",ch);\n\t\tif(ch[0]=='A') {\n\t\t\tll v=(gl()+_t)%MOD;\n\t\t\tinsert(total-1,v);\n\t\t}\n\t\tif(ch[0]=='Q'){\n\t\t\tint L=gl();\n\t\t\t_t=query(total-L-1,total-2);\n\t\t\tprintf(\"%lld\\n\",_t);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n~~\u5e38\u6570\u6709\u70b9\u5927\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u8fc7\u4e0d\u53bb~~",
        "postTime": 1519009999,
        "uid": 42506,
        "name": "\u4f55\u4fde\u5747",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u5e76\u4e0d\u9700\u8981\u63d0\u524d\u5efa\u6811\uff0c\u53ea\u8981\u6309\u7167\u8f93\u5165\u7684\u987a\u5e8f\u6328\u4e2a\u6dfb\u52a0\u5c31\u597d\u5566\n\n### \u8981\u662f\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u53bb\u770b\u4e00\u4e0b\u7ebf\u6bb5\u6811\u6a21\u677f1\n\n\u6211\u89c9\u5f97\u81ea\u5df1\u7684\u8fd9\u4e2a\u5199\u6cd5\u8fd8\u662f\u633a\u7b80\u5355\u7684\u5440\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string.h>\n#include<math.h>\n#include<queue>\n#include<cstdio>\n#define MAXN 200000\n#define LL long long\n#define INF 20000010\nusing namespace std;\nint last,m,d,t;\nint tree[MAXN*4];//\u4e0d\u8981\u5fd8\u4e86\uff0c\u7ebf\u6bb5\u6811\u8981\u5f00\u52304\u500d\u7684\u5927\u5c0f\nint query(int now,int l,int r,int check_l,int check_r)//\u67e5\u8be2\u64cd\u4f5c\uff0cnow\u4ee3\u8868\u5f53\u524d\u641c\u7d22\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\uff0cl\u548cr\u662f\u5f53\u524d\u7ebf\u6bb5\u7684\u5de6\u53f3\u7aef\u70b9\uff0ccheck_l\u548ccheck_r\u662f\u5de6\u53f3\u8fb9\u754c\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u9898\u76ee\u8f93\u5165\u4e2d\u7ed9\u5b9a\u7684\u8303\u56f4 \n{\n    if ((l>=check_l)&&(r<=check_r)) return tree[now];//\u5982\u679c\u5f53\u524d\u7ebf\u6bb5\u5168\u90e8\u5728\u8303\u56f4\u5185\u76f4\u63a5return\n    int ans=-1*INF,mid;//ans\u8981\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5927\u8d1f\u6570\uff0c\u56e0\u4e3a\u6709\u7684\u8fb9\u53ef\u80fd\u662f\u8d1f\u6570\n    mid=(l+r)>>1;//\u53d6\u4e2d\u70b9\n    if (mid>=check_l) ans=max(ans,query(now<<1,l,mid,check_l,check_r));\n    if (mid<check_r) ans=max(ans,query(now<<1|1,mid+1,r,check_l,check_r));//\u548c\u7ebf\u6bb5\u6811\u6a21\u677f\u67e5\u8be2\u90e8\u5206\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u53ea\u4e0d\u8fc7\u662f\u7531\u6c42\u548c\u53d8\u6210\u6c42\u6700\u5927\u503c\n    return ans;//\u8fd4\u56deans\n}\nvoid pushup(int now,int l,int r,int position,int num)//\u63d2\u5165\u64cd\u4f5c\uff0cnow\u4e5f\u662f\u5f53\u524d\u7ebf\u6bb5\u7684\u7f16\u53f7\uff0cl\u548cr\u662f\u5f53\u524d\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\uff0cposition\u662f\u8981\u63d2\u5165\u7684\u503c\u5728\u6570\u5217\u4e2d\u7684\u7f16\u53f7\uff0cnum\u662f\u8981\u63d2\u5165\u7684\u503c\u7684\u5927\u5c0f\n{\n    if ((l==position)&&(r==position)) //\u5982\u679c\u627e\u5230\u4e86\u8981\u63d2\u5165\u7684\u70b9\u7684\u4f4d\u7f6e\n    {\n        tree[now]=num;\n        return;//\u8d4b\u503c\u4e00\u4e0b\u5e76\u4e14return\n    }\n    int mid;\n    mid=(l+r)>>1;//\u53d6\u4e2d\u70b9\n    if (position<=mid) pushup(now<<1,l,mid,position,num);\n    if (position>mid) pushup(now<<1|1,mid+1,r,position,num);//\u4f9d\u65e7\u662f\u4e0e\u6a21\u677f\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u5f80\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\u641c\u7d22\n    tree[now]=max(tree[now<<1],tree[now<<1|1]);//\u4e0d\u8981\u5fd8\u8bb0\u66f4\u65b0\u4e00\u4e0b\u6700\u5927\u503c\n}\nint main()\n{\n    char c;\n    int i,j;\n    LL n;\n    scanf(\"%d%d\",&m,&d);\n    for (i=1;i<=m;i++) tree[i]=-1*INF;\n    for (i=1;i<=m;i++)\n    {\n        cin>>c;\n        scanf(\"%lld\",&n);\n        if (c=='Q')\n        { \n            int ans;\n            ans=query(1,1,m,last-n+1,last);//\u540en\u4e2a\u6570\u7684\u8303\u56f4\u5e94\u8be5\u662f  \u603b\u4e2a\u6570-n+1   ->   \u6570\u5217\u672b\u5c3e\n            printf(\"%d\\n\",ans);\n            t=ans;//\u66f4\u65b0\u4e00\u4e0bt\u503c\uff0c\u4e0b\u4e00\u6b21\u64cd\u4f5c\u53ef\u80fd\u4f1a\u7528\u5230\n        }\n        if (c=='A')\n        {\n            last++;//last\u8bb0\u5f55\u7684\u662f\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u7ebf\u6bb5\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u4e2a\u65b0\u63d2\u5165\u7684\u7ebf\u6bb5\u5728\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e\n            int num;\n            num=(n+t)%d;\n            pushup(1,1,m,last,num);\n        }\n    }\n    return 0;\n} \n```\n\u8ba4\u771f\u4ed4\u7ec6\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u4e0d\u662f\u592a\u96be\u5427\n",
        "postTime": 1510010110,
        "uid": 20611,
        "name": "\u738b\u5c0f\u5b87",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u662f\u4e00\u9053**\u7ebf\u6bb5\u6811**\u88f8\u9898\uff0c\u4f46\u662f\u7ebf\u6bb5\u6811\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u6811\u7684\u65f6\u5019\uff0c\u5c06\u6bcf\u4e00\u4e2a\u8282\u70b9\u521d\u59cb\u5316\u4e3a-INF\uff0c\u6bcf\u6b21\u5f80\u961f\u5c3e\u52a0\u4e00\u4e2a\u5143\u7d20\u5373\u4e00\u6b21\u5355\u8282\u70b9\u66f4\u65b0\uff0c\u6ce8\u610f\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\uff0c\u5176\u5b9e\u5e76\u4e0d\u7528\u5f00 long long\uff0c\u5177\u4f53\u8bf7\u770b\u6ce8\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\nusing namespace std;\nconst int MAXN=200005;\nint read(){\n    int rv=0,fh=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') fh=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        rv=(rv<<1)+(rv<<3)+c-'0';\n        c=getchar();\n    }\n    return rv*fh;\n}\nint MOD,m,t,ma[MAXN<<2],n;\nvoid PushUp(int rt){\n    ma[rt]=max(ma[rt<<1],ma[rt<<1|1]);\n}\nvoid build(int l,int r,int rt){\n    if(l==r){\n        ma[rt]=-0x7fffffff;\n        return;\n    }\n    int mid=l+((r-l)>>1);\n    build(lson);\n    build(rson);\n    PushUp(rt);\n}\nvoid Update(int add,int loc,int l,int r,int rt){\n    if(r==loc&&l==loc){\n        ma[rt]=add;\n        return;\n    }\n    int mid=l+((r-l)>>1); //\u8fd9\u6837\u53d6\u5e73\u5747\u6570\u53ef\u4ee5\u9632\u6ea2\u51fa\n    if(loc<=mid) Update(add,loc,lson);\n    else Update(add,loc,rson);\n    PushUp(rt);\n}\nint query(int L,int R,int l,int r,int rt){\n    if(L<=l&&r<=R){\n        return ma[rt];\n    }\n    int mid=l+((r-l)>>1);\n    int q=-0x7fffffff;\n    if(L<=mid){\n        q=max(q,query(L,R,lson));\n    }\n    if(mid<R) q=max(q,query(L,R,rson));\n    return q;\n}\nint main(){\n    freopen(\"in.txt\",\"r\",stdin);\n    m=read();MOD=read();\n    build(1,m,1);\n    for(int i=1;i<=m;i++){\n        char c;\n        scanf(\" %c \",&c);\n        int k=read();\n        if(c=='A'){\n            n++;\n            k=((long long)k+t)%MOD;//\u6ce8\u610f\u9632\u6b62\u6ea2\u51fa\n            Update(k,n,1,m,1);\n        }else {\n            t=query(n-k+1,n,1,m,1);\n            printf(\"%d\\n\",t);\n        }\n    }\n    fclose(stdin);\n    return 0;\n}\n```\n\u7b49\u7b49\u3002\u3002\u672c\u9898\u53ea\u8981\u6c42\u5728\u961f\u5c3e\u52a0\u5165\u5143\u7d20\uff0c\u800c\u4e14\u8981\u6c42\u7684\u662f\u961f\u5c3e\u51e0\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u6808+\u4e8c\u5206\u6765\u505a\uff0c\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int MAXN=200005;\nint read(){\n    int rv=0,fh=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') fh=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        rv=(rv<<1)+(rv<<3)+c-'0';\n        c=getchar();\n    }\n    return rv*fh;\n}\nint m,MOD,t,stack[MAXN],head,num[MAXN],cnt;\nint main(){\n    freopen(\"in.txt\",\"r\",stdin);\n    m=read();MOD=read();\n    for(int i=1;i<=m;i++){\n        char c;\n        scanf(\" %c \",&c);\n        int k=read();\n        if(c=='A'){\n            k=((long long)k+t)%MOD;\n            cnt++;\n            while(stack[head]<=k&&head) head--;\n            head++;\n            stack[head]=k;\n            num[head]=cnt;\n        }else {\n            int l=1,r=head,mid;\n            k=cnt-k+1;\n            while(l<=r){\n                mid=(l+r)>>1;\n                if(num[mid]<k){\n                    l=mid+1;\n                }else {\n                    r=mid-1;\n                }\n            }\n            t=stack[l];\n            printf(\"%d\\n\",t);\n        }\n    }\n\n    fclose(stdin);\n    return 0;\n}\n```",
        "postTime": 1509362540,
        "uid": 45753,
        "name": "Mr_Wolfram",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "/\\*\nZKW\u7ebf\u6bb5\u6811\u771f\u5fc3\u597d\u7528\u554a~\n\n\u521a\u521a\u5b66ZKW\n\n\u5c31\u4e00\u904d\u8fc7\u4e86\u8fd9\u9053\u9898\n\n\u5168\u7a0b\u96f6\u9012\u5f52\n\n\u624b\u52a8\u6a21\u62df\u5f88\u65b9\u4fbf\n\n\\*/\n```cpp\n#include<cstdio>\nusing namespace std;\ninline int intin(){register char c=getchar();while(c!=45&&(c<48||c>57))c=getchar();register int a=0;register bool b=0;if(c==45){c=getchar();b=1;}while(c>47&&c<58){a=(a<<1)+(a<<3)+c-48;c=getchar();}if(b)a*=(-1);return a;}\ninline void intot(int a){if(a<0){putchar(45);a*=(-1);}if(a>9)intot(a/10);putchar(a%10+48);}\ninline bool xin(){register char c=getchar();while(c!='A'&&c!='Q')c=getchar();if(c=='A')return 1;return 0;}\ninline int mmx(int a,int b){if(a>b)return a;return b;}\nint    mx[524288];//\u6811 \nint main()\n{\n    int q=intin(),md=intin(),t=0,n=262144,m=262143;\n    for(int i=n;i<=n<<1;i++)mx[i]=-2147483644;//\u521d\u59cb\u5316 \n    while(q--)\n    {\n        if(xin())\n        {\n            mx[++m]=(intin()+t)%md;//\u66f4\u65b0\u70b9 \n            int r=m>>1;\n            while(r){mx[r]=mmx(mx[r<<1],mx[r<<1|1]);r=r>>1;}//\u4ece\u6b64\u70b9\u5411\u4e0a\u66f4\u65b0 \n        }else{\n            int l=m-intin(),r=m+1;t=-2147483645;//ZKW\u7ebf\u6bb5\u6811\u67e5\u8be2\u5f00\u533a\u95f4(l-1,r+1)\u6bd4\u95ed\u533a\u95f4[l,r]\u65b9\u4fbf\n            while(l^r^1)//ZKW\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\u6807\u51c6\u5199\u6cd5 \n            {\n                if(~l&1)if(t<mx[l^1])t=mx[l^1];\n                if(r&1)if(t<mx[r^1])t=mx[r^1];\n                l=l>>1;r=r>>1;\n            }\n            intot(t);putchar('\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1509026458,
        "uid": 31890,
        "name": "\u516b\u91cd\u6a31",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "##\u6700\u5927\u6570maxnumber\n\n\n####\u9898\u89e3\n\n\n\u663e\u7136\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u9898\u3002\n\n\u9898\u610f\u4e3a\u6709\u4e24\u79cd\u64cd\u4f5c\u3002\u7b2c\u4e00\u79cd\u662f\u8be2\u95ee\u533a\u95f4\u540en\u4e2a\u5143\u7d20\u4e2d\u6700\u5927\u503c\uff0c\u7b2c\u4e8c\u79cd\u662f\u5728\u533a\u95f4\u540e\u6dfb\u52a0\u4e00\u4e2a\u503c\u4e3an\u7684\u6570\u3002\n\n\u90a3\u4e48\u600e\u4e48\u5728\u7ebf\u6bb5\u6811\u7684\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u5462\uff0c\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u5728\u5efa\u6811\u7684\u65f6\u5019\u628a\u7ebf\u6bb5\u6811\u7684\u672b\u5c3e\u6dfb\u52a0\u82e5\u5e72\u76840,\u7136\u540e\u66f4\u65b0\u5355\u4e2a\u8282\u70b9\u7684\u503c\u3002\u4e4b\u540e\u7684\u95ee\u9898\u5c31\u5f88\u663e\u7136\u4e86\u3002\n\n\u5207\u8bb0\u5f00long long!!!\n\n\u8fd8\u6709\uff0c\u8f93\u5165\u6570\u636e\u884c\u672b\u6709\u82e5\u5e72\u7684\u7a7a\u683c\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff08\u8c03\u4e86\u597d\u4e45\u3002\u3002\u3002\u3002\uff09\n\n\n####\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\nLL n,m,num,mod,last_ans;\nchar kg,opt;\nstruct Point{\n    LL l,r,maxx;\n    Point *son1,*son2;\n    Point(){l=0,r=0,maxx=0,son1=NULL,son2=NULL;}\n    void init(LL l,LL r,Point *p){\n        if(l>=r) return;\n        p->son1=new Point();\n        p->son2=new Point();\n        LL m=(l+r)>>1;\n        p->son1->l=l;p->son1->r=m;\n        p->son2->l=m+1;p->son2->r=r;\n        init(l,m,p->son1);\n        init(m+1,r,p->son2);\n    }\n    void add(Point *p,LL x,LL num){\n        if(p->l==p->r){ p->maxx=num;return;}\n        LL m=(p->l+p->r)>>1;\n        if(x<=m) add(p->son1,x,num);\n        else add(p->son2,x,num);\n        p->maxx=max(p->son1->maxx,p->son2->maxx);\n    }\n    LL ask(LL l,LL r,Point *p){\n        if(l<=p->l&&r>=p->r){\n            return p->maxx;\n        }\n        LL m=(p->l+p->r)>>1;\n        LL x1=0,x2=0;\n        if(l<=m) x1=ask(l,r,p->son1);\n        if(r>m) x2=ask(l,r,p->son2);\n        return max(x1,x2);\n    }\n}*point;\nint main(){\n    scanf(\"%lld%lld\",&m,&mod);\n    point=new Point();\n    point->l=1;point->r=m;\n    point->init(1,m,point);\n    for(LL i=1;i<=m;i++){\n        scanf(\"%c%c%lld\",&kg,&opt,&num);\n        if(opt=='A'){\n            num+=last_ans;\n            num%=mod;\n            n++;\n            point->add(point,n,num);\n        }\n        else{\n            last_ans=point->ask(n-num+1,n,point);\n            printf(\"%lld\\n\",last_ans);\n        }\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1507814208,
        "uid": 58489,
        "name": "\u4e1c\u5bfa\u4e36\u95f2\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u7b2c\u4e00\u9053\u7ebf\u6bb5\u6811\u9898\u76ee\uff0c\u521a\u5f00\u59cb\u628at\u5f53\u6210\u4e0a\u4e00\u6b21\u6dfb\u52a0\u7684\u6570\u4e86\uff0c\u7136\u540ewa\u4e86\u4e24\u6b21\u3002\u3002\u3002\u3002\u624b\u52a8\u6ed1\u7a3d\u3002\n\n\u9898\u6bd4\u8f83\u88f8\uff0c\u542c\u8bf4\u7ebf\u6bb5\u6811\u7b97\u66b4\u529b\u3002\u3002\u3002\u597d\u5427\u53ef\u80fd\u662f\uff0c\u6211\u6ca1\u6709\u50cf\u697c\u4e0b\u4e00\u6837\u5b58\u4e0b\u6765\u95ee\u9898\uff0c\u6211\u89c9\u5f97\u76f4\u63a5\u5904\u7406\u6bd4\u8f83\u7b80\u5355\u3002\u5176\u5b9e\u548c\u6a21\u62df\u5dee\u4e0d\u591a\u3002\u5f31\u5f31\u7684\u6211\u4e0d\u4f1a\u52a8\u6001\u6dfb\u52a0\u6811\uff0c\u6240\u4ee5\u76f4\u63a5\u5efa\u6210\u6700\u5927\u72b6\u6001\uff0c\u6240\u6709\u70b9\u521d\u59cb\u503c\u4e3a0.\u7528tot\u8bb0\u5f55\u73b0\u5728\u4e3a\u6b62\u6709\u591a\u5c11\u4e2a\u6570\u3002\u5982\u679c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\u8bdd\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a\u535a\u5ba2http://blog.csdn.net/metalseed/article/details/8039326\uff0c\u6211\u611f\u89c9\u8fd8\u662f\u5199\u7684\u5f88\u8be6\u7ec6\u7684\u3002\u56e0\u4e3a\u76f4\u63a5\u6700\u5927\u72b6\u6001\uff0c\u6240\u4ee5\u4ee3\u7801\u91cc\u6ca1\u6709\u5efa\u6811\u7684\u64cd\u4f5c\uff0c\u76f4\u63a5\u8bfb\u5165\uff0c\u52a0\u70b9\uff0c\u8be2\u95ee\uff0c\u81ea\u5df1\u5199\u4e86max\u4f7f\u7528\u4e86\u4e00\u4e9b\u4f4d\u8fd0\u7b97\uff0c\uff08\u770b\u8ba8\u8bba\u91cc\u8bf4\u7ebf\u6bb5\u6811\u4f1atle\u6240\u4ee5\u5c31\u591a\u6b64\u4e00\u4e3e\u4e86\uff0c\u5176\u5b9e\u6ca1\u6bd5\u8981\uff09\u4ee3\u7801\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nchar s;\nint n,d,tot;\nlong long x,t,tree[800010];\nint  Max(int a,int b){//\u624b\u5199max\u5176\u5b9e\u597d\u50cf\u6ca1\u4ec0\u4e48\u5f71\u54cd\n    if(a<=b)\n    return b;\n    else\n    return a;\n}\nvoid add(int id,int be,int en,int pos,int ad){//\u52a0\u6570\u7684\u51fd\u6570\uff0cbe\u548cen\u4ee3\u8868\u6bcf\u4e2atree[id]\u6240\u7ba1\u7684\u533a\u95f4\uff0cpos\u662f\u65b0\u52a0\u5165\u70b9\u6240\u5728\u7684\u4f4d\u7f6e\u3002ad\u4e3a\u5b83\u7684\u503c\n    if(be==en){\n        tree[id]=ad;\u56e0\u4e3a\u521d\u59cb\u4e3a0\uff0c\u6240\u4ee5\u76f4\u63a5\u76f4\u63a5\u8d4b\u503c\n        return ;\n    }\n    int m=(be+en)/2;\n    if(pos<=m){\n        add(id<<1,be,m,pos,ad);//\u8fd9\u91cc\u662f\u770bpos\u5728\u5de6\u8fd8\u662f\u53f3\n    }\n    else\n        add((id<<1)+1,m+1,en,pos,ad);\n    tree[id]=Max(tree[id<<1],tree[(id<<1)+1]);//\u56de\u6eaf\u4fee\u6539\u7236\u4eb2\n}\nint qu(int id,int be,int en,int l,int r){//\u8be2\u95ee\u51fd\u6570\uff0cl\u548cr\u8868\u793a\u8be2\u95ee\u533a\u95f4\n    int p1,p2;\n    if(l>en||r<be)return -1;//\u4e0d\u7b26\u5408\u8981\u6c42\u76f4\u63a5\u8fd4\u56de\n    if(be>=l&&r>=en)//\u7ebf\u6bb5\u6570\u7684\u8fd9\u4e2a\u8282\u70b9\u5728\u533a\u95f4\u5185\uff0c\u8fd4\u56de\u7b54\u6848\n        return tree[id];\n    int m=(be+en)/2;\n    p1=qu(id<<1,be,m,l,r);\n    p2=qu((id<<1)+1,m+1,en,l,r);\n    if(p1==-1)return p2;//\u5bf9\u8fd4\u56de\u7684\u7b54\u6848\u8fdb\u884c\u6bd4\u8f83\n    if(p2==-1)return p1;\n    if(p1>p2)return p1;\n    else return p2;\n}\nint main(){\n    cin>>n>>d;\n    for(int i=1;i<=n;i++){\n        cin>>s>>x;\n        if(s=='A'){\n            x=(x+t)%d;\n            add(1,1,200000,++tot,x);\n        }\n        else{\n            x=tot-x+1;\n            x=qu(1,1,200000,x,tot);\n            t=x;\n            cout<<x<<endl;\n        }\n    }\n    return 0;\n}\n```\n\u81ea\u8ba4\u4e3a\u4ee3\u7801\u5199\u5f97\u6bd4\u8f83\u7f8e\u89c2\u3002\u3002\u3002\u3002\u3002\u3002\n//\u7b2c\u4e00\u4efd\u9898\u89e3\u3002\u3002\u3002\u3002\n",
        "postTime": 1506065083,
        "uid": 36036,
        "name": "cacfov",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\uff0c\u5148\u8bfb\u5165\u6307\u4ee4\uff0cadd[],que[]\u5206\u522b\u8868\u793aA\u548cQ\u7684\u6307\u4ee4\uff1b\u5e76\u4e14\u8003\u8651\u5230\u6307\u4ee4\u7684\u5148\u540e\u987a\u5e8f\uff0c\u8bb0\u5f55\u7f16\u53f7\uff0c\u5b9a\u4e49cmd\u7ed3\u6784\uff0c\u7528\u4e8e\u8bb0\u5f55\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u8fb9\u8bfb\u8fb9\u5904\u7406\u5462\uff1f\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u662f\u53ef\u4ee5\u8fb9\u8bfb\u8fb9\u5904\u7406\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u628a\u6839\u8282\u70b9\u5b9a\u4e49\u4e3a1..,MAXN\u7684\u8303\u56f4\u4e86\uff0c\u6709\u70b9\u3002\u3002\u3002\n\n\u6240\u4ee5\u8003\u8651\u5230\u8fd9\u91cc\uff0c\u5c31\u7528\u8fd9\u79cd\u9ebb\u70e6\u4e00\u70b9\u7684\u7b97\u6cd5\u4e86\u3002\u8fd9\u6837\u80fd\u591f\u5148\u5f97\u5230\u6700\u540e\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\n\u4ecb\u7ecd\u4e09\u4e2a\u6838\u5fc3\u51fd\u6570\uff08\u76f4\u63a5\u4ece\u6211Luogu2068\u7684\u9898\u89e3\u91cc\u590d\u5236\u4fee\u6539\u7684\uff0c\u4e24\u9898\u6709\u70b9\u50cf\uff0c\u53ef\u4ee5\u53c2\u8003\uff09\n\n# up(int p)\n\n\u7528\u4e8e\u66f4\u65b0p\u8282\u70b9\u7684\u503c\u3002\u56e0\u4e3a\u8fd9\u662f\u4e8c\u53c9\u6811\uff0cp\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e3a2p,2p+1.\n\n\nmax\\_arr[]\u7528\u4e8e\u5b58\u50a8tree.\n\n\n\u66f4\u65b0\u64cd\u4f5c\uff1amax\\_arr[p]=max(max\\_arr[2p],max\\_arr[2p+1]);\n\n\n# update(int p, int l, int r, int x, int v)\n\n\u7528\u4e8e\u66f4\u65b0\u7b2cx\u4e2a\u6570\uff0c\u4f7f\u7b2cx\u4e2a\u6570+v\n\n\n\u56e0\u4e3a\u66f4\u65b0\u7b2cx\u4e2a\u6570\u540e\uff0c\u5b58\u50a8\u7b2cx\u4e2a\u6570\u503c\u8282\u70b9\u7684\u7236\u8282\u70b9\uff08\u4e0a\u53f8\uff09\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u4e8e\u662f\u4f20\u9012\u8282\u70b9p\uff0c\u8282\u70b9p\u7684\u503c\u4e3a\uff1amax\\_arr[p]=max(a[l],a[l+1],..,a[r]);\n\n\nl,r\u662fp\u7684\u201c\u8303\u56f4\u201d\n\n\n\u82e5l=r\u8868\u793a\u5df2\u7ecf\u627e\u5230\u5b58\u50a8a[x]\u7684\u8282\u70b9\uff0c+v.\n\n\n\u7136\u540e\u518d\u4e8c\u5206\uff0c\u66f4\u65b0\u8282\u70b9\u3002\n\n\n# query(int p, int l, int r, int x, int y);\n\np,l,r\u7684\u5b9a\u4e49\u89c12.\n\n\n\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u83b7\u5f97[x,y]\u533a\u95f4\u7684\u548c\u3002\n\n\n\u5206\u6790\u53ef\u77e5\uff1a\u5982\u679c[l,r]\u5305\u542b\u4e8e[x,y]\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5c06s[p]\u7684\u503c\u52a0\u5165\u6700\u540e\u7684\u7b54\u6848\u4e2d\u3002\n\n\n\uff08max\\_arr[p]=max(a[l], ... ,a[r]; max(a[x], ... , a[y])=max(max(a[x], ... ,a[l-1]). max\\_arr[p], max(a[r+!], ... , a[y])\uff09\n\n\n\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u3002\n\n\n\nif (x<=l && y<=r) then return max\\_arr[p];\n\n\u5982\u679c[l,r]\u4e0d\u662f[x,y]\u7684\u5b50\u96c6\uff0c\u90a3\u4e48\u53d6m=(l+r) div 2;\n\n\n\u5206\u4e24\u8fb9\u8ba8\u8bba\u3002\n\n\n\u5982\u679cx<=m,\u5219\u8ba8\u8bba\u5de6\u8fb9\uff1b\n\n\n\u5982\u679cm<y,\u8ba8\u8bba\u53f3\u8fb9\u3002\n\n\n\u6ce8\u610f\uff1a\n\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u662f\u5e76\u5217\u7684\uff0c\u4e0d\u5b58\u5728else\u7684\u60c5\u51b5\u3002\n\n\n\u6240\u4ee5\u8fd9\u4e00\u6bb5\u7684\u4f2a\u4ee3\u7801\u5c31\u662f\uff1a\n\n\n```cpp\nm=(l+r)/2;\nint ret=-INF;\nif x<=m ret=max(query\u5de6\u8fb9,ret)\nif m<y ret=max(query\u53f3\u8fb9,ret)\nreturn ret;\n```\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4e0b\u3002\n\n\u6240\u4ee5\u4e0a\u9762\u5c31\u662f\u4e3b\u8981\u4ecb\u7ecd\u4e86\u3002\n\n\n# \u6700\u540e\uff1a\u4e3b\u7a0b\u5e8f\n\n## \u8bfb\u5165\n\naddcnt, quecnt\u662f\u4e24\u4e2a\u6570\u7ec4\u7684\u6307\u9488\uff0c\u50a8\u5b58\u6307\u4ee4\n\n\n## \u5904\u7406\n\n\u6309\u7167\u5b9e\u73b0\u50a8\u5b58\u7684\u6570\u503c\u5224\u65ad\u6307\u4ee4\u5148\u540e\uff0c\u8c03\u7528update,query\u5373\u53ef\u3002\n\n\n```cpp\n//Luogu 1198 _ RMQ-Method Solve\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\nconst int MAXN=200000;\nconst int INF=10000000;\n\nstruct cmd{\n    int x, num;\n}add[MAXN+1], que[MAXN+1];\n\nint max_arr[4*MAXN+1];\nint Q, mod, previous=0;\nint n=0, addcnt=0, quecnt=0;\n\nvoid up(int p)\n{\n    max_arr[p]=max(max_arr[2*p], max_arr[2*p+1]);\n    return;\n}\n\nvoid update(int p, int l, int r, int x, int v)\n{\n    if (l==r) {\n        max_arr[p]=v;\n        return;\n    }\n\n    int m=(l+r)/2;\n    if (x<=m) update(2*p, l, m, x, v);\n    else update(2*p+1, m+1, r, x, v);\n    up(p);\n    return;\n}\n\nint query(int p, int l, int r, int x, int y)\n{\n    if (x<=l && r<=y) {\n        return max_arr[p];\n    }\n\n    int m=(l+r)/2;\n    int ret=-INF;\n    if (x<=m) ret=max(ret, query(2*p, l, m, x, y));\n    if (m<y) ret=max(ret, query(2*p+1, m+1, r, x, y));\n    return ret;\n}\n\nint main()\n{\n    cin >> Q >> mod;\n    for (int i=1; i<=Q; i++) {\n        char c[3];\n        scanf(\"%s\", c);\n        if (c[0]=='A') {\n            addcnt++;\n            scanf(\"%d\", &add[addcnt].x);\n            n++;\n            add[addcnt].num=i;\n        }\n        else {\n            quecnt++;\n            scanf(\"%d\", &que[quecnt].x);\n            que[quecnt].num=i;\n        }\n    }\n\n    fill(max_arr, max_arr+4*n, -INF);\n    addcnt=1;\n    quecnt=1;\n    for (int i=1; i<=Q; i++) {\n        if (add[addcnt].num==i) {\n            update(1, 1, n, addcnt, (add[addcnt].x+previous)%mod);\n            addcnt++;\n        }\n        else if (que[quecnt].num==i) {\n            previous=query(1, 1, n, addcnt-que[quecnt].x, addcnt-1);\n            printf(\"%d\\n\", previous);\n            quecnt++;\n        }\n    }\n\n    return 0;\n}\n```",
        "postTime": 1504670931,
        "uid": 31136,
        "name": "\u5408451518",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u6b64\u9898\u7275\u626f\u5230\u533a\u95f4\u6700\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u89e3\u51b3\u3002\n\n\u4f46\u662fQ\u64cd\u4f5c\u7531\u4e8e\u9700\u8981\u63d2\u5165\u5143\u7d20\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u5316\u4e3a\u80fd\u591f\u5229\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\n\u8fd9\u4e2a\u5e8f\u5217\u662f\u201c\u52a8\u6001\u201d\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u5176\u53d8\u6210\u201d\u9759\u6001\u201c\u7684\u3002\n\n\u6a21\u62df\u6dfb\u6570\u7684\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u5b58\u4e0b\u6bcf\u6b21\u67e5\u8be2\u7684\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u63d2\u5165\uff0c\u8bb0\u4e0b\u63d2\u5165\u7684\u6570\u4ee5\u53ca\u5b83\u6240\u5bf9\u5e94\u7684\u524d\u4e00\u6b21\u67e5\u8be2\u7684\u7f16\u53f7\uff0c\u4fbf\u4e8e\u540e\u9762\u627e\u5230\u4e0a\u4e00\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\uff0c\u5bf9\u8bb0\u4e0b\u7684\u63d2\u5165\u7684\u6570\u5b57\u5148\u5efa\u7ebf\u6bb5\u6811\u3002\n\n\u6700\u540e\uff0c\u5faa\u73af\u679a\u4e3e\u6bcf\u6b21\u8be2\u95ee\uff0c\u5728\u8be2\u95ee\u4e2d\u7ee7\u7eed\u679a\u4e3e\u5b83\u6240\u5bf9\u5e94\u7684\u63d2\u5165\uff0c\u66f4\u65b0\u6bcf\u6b21\u63d2\u5165\u7684\u503c\uff0c\u4ee5\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u7684\u529f\u80fd\u6765\u5b9e\u73b0\u3002\n\n\u770b\u4f3c\u5148\u679a\u4e3e\u8be2\u95ee\uff0c\u518d\u679a\u4e3e\u63d2\u5165\uff0c\u662f\u4e24\u91cd\u5faa\u73af\uff0c\u4f46\u662f\u7531\u4e8e\u5728\u6b64\u5faa\u73af\u4e2d\u679a\u4e3e\u63d2\u5165\u7684j\u53ea\u589e\u4e0d\u51cf(\u8be6\u89c1\u4ee3\u7801)\uff0c\u56e0\u6b64\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n\u6ce8\u610f\u7b2c0\u6b21\u8be2\u95ee\uff08\u5373\u524d\u9762\u6ca1\u6709\u8be2\u95ee\uff09\u7684\u60c5\u51b5\u8981\u5355\u5217\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN = 2e5;\nint MODN;\nstruct Node\n{\n    int left,right;\n    int maxi;\n};\nstruct SegmentTree\n{\n    Node nd[MAXN*4+2];\n    \n    void init()\n    {\n        for(int i=1; i<=MAXN*4; i++)\n        {\n            nd[i].left = nd[i].right = nd[i].maxi = 0;\n        }\n    }\n    \n    void build(int lbound,int rbound,int pos,int a[])\n    {\n        nd[pos].left = lbound;\n        nd[pos].right = rbound;\n        if(lbound==rbound)\n        {\n            nd[pos].maxi = a[lbound];\n            return;\n        }\n        int mid = (lbound+rbound)/2;\n        build(lbound,mid,2*pos,a);\n        build(mid+1,rbound,2*pos+1,a);\n        nd[pos].maxi = max(nd[2*pos].maxi,nd[2*pos+1].maxi);\n    }\n    \n    void modify(int bound,int val,int pos)\n    {\n        int mid = (nd[pos].left+nd[pos].right)/2;\n        if(nd[pos].left==nd[pos].right)\n        {\n            nd[pos].maxi = val;\n            return;\n        }\n        if(bound<=mid) modify(bound,val,2*pos);\n        else modify(bound,val,2*pos+1); \n        nd[pos].maxi = max(nd[2*pos].maxi,nd[2*pos+1].maxi);\n    }\n     \n    int query(int lbound,int rbound,int pos)\n    {\n        int mid = (nd[pos].left+nd[pos].right)/2;\n        if(lbound==nd[pos].left && rbound==nd[pos].right) return nd[pos].maxi;   \n        int ans;\n        if(rbound<=mid) ans = query(lbound,rbound,2*pos);\n        else if(lbound>mid) ans = query(lbound,rbound,2*pos+1);\n        else ans = max(query(lbound,mid,2*pos),query(mid+1,rbound,2*pos+1));\n        return ans;\n    }\n};\nSegmentTree st;\nint a[MAXN+2];\nint p[MAXN+2];\nint ql[MAXN+2];\nint qr[MAXN+2];\nint n,m,q;\n\nint main()\n{\n    char ch[5];\n    int x;\n    n = q = 0;\n    scanf(\"%d%d\",&m,&MODN);\n    for(int i=1; i<=m; i++)\n    {\n        scanf(\"%s\",ch);\n        switch(ch[0])\n        {\n            case 'A':\n            {\n                scanf(\"%d\",&x);\n                a[++n] = x;\n                p[n] = q;\n                break;\n            }\n            case 'Q':\n            {\n                scanf(\"%d\",&x);\n                ql[++q] = n-x+1;\n                qr[q] = n;\n                break;\n            }\n        }\n    }\n    st.init();\n    st.build(1,n,1,a);\n    int j = 1;\n    while(j<=n && !p[j])\n    {\n        j++;\n    }\n    for(int i=1; i<=q; i++)\n    {\n        int ans = st.query(ql[i],qr[i],1);\n        printf(\"%d\\n\",ans);\n        while(j<=n && p[j]==i)\n        {\n            st.modify(j,(int)((long long)a[j]+ans)%MODN,1);\n            j++;\n        }\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1503298589,
        "uid": 50980,
        "name": "suncongbo2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u505a\u5b8c\u4e4b\u540e\u770b\u4e86\u90a3\u4e48\u591a\u9898\u89e3\u3002\u3002\u3002\n\n\u53ea\u6709\u6211\u7528\u7ebf\u6bb5\u6811\u6ca1\u6253\u6210\u529f\u7136\u540e\u7528\u7684\u5355\u8c03\u6808\uff1f\uff01\n\n\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff0c\u53cd\u6b63\u67e5\u8be2\u7684\u662f\u540e\u9762\u7684\uff0c\u5c31\u5728\u540e\u9762\u52a0\u5143\u7d20\u561b\n\n\u90a3\u4e48\u5047\u8bbe\u52a0\u5165\u5143\u7d20\u5230top\u4f4d\u7f6e\uff0c\u4f46\u662ftop-1\u6bd4\u52a0\u5165\u7684\u5143\u7d20\u8981\u5c0f\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u628atop-1\u90a3\u4e2a\u4f4d\u7f6e\u5220\u6389\u4e86\n\n\u4e3a\u4ec0\u4e48\u5462\uff0c\uff0c\u81ea\u5df1\u60f3\n\n\u7136\u540e\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9012\u51cf\u7684\u5355\u8c03\u6808\u67e5\u627e\u7528\u4e8c\u5206\u4f1a\u5feb\u4e00\u4e9b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#define ll long long\nusing namespace std;\nll m,mod;\nll zhan[2][200001];//[0]\u5b58\u6807\u53f7[1]\u5b58\u6570\u503c\nll top=0;\nll cnt=0;//\u6807\u53f7\nll x,k,t;\nint main()\n{\n    scanf(\"%lld%lld\\n\",&m,&mod);\n    for(register int Q=1;Q<=m;Q++)\n    {\n        //cout<<\"Q=\"<<Q<<endl;\n        register char sort1[10];\n        scanf(\"%s%lld\\n\",sort1,&x);\n        if(sort1[0]=='A')\n        {\n            k=((x+t)%mod+mod)%mod;\n            cnt++;\n            while(k>=zhan[1][top]&&top>0)top--;\n            zhan[0][++top]=cnt;\n            zhan[1][top]=k;            \n        }\n        else\n        {\n            if(x==0){printf(\"0\\n\");t=0;continue;}\n            register int l=1,r=top,res;\n            while(l<=r)\n            {\n                register int mid=(l+r)>>1;\n                if(zhan[0][mid]<cnt-x+1)l=mid+1;\n                else r=mid-1,res=mid;\n            }\n            t=zhan[1][res];\n            printf(\"%lld\\n\",t);\n        }\n        //for(int i=1;i<=top;i++)printf(\"zhan[%d]:[0]=%d,[1]=%d\\n\",i,zhan[0][i],zhan[1][i]);\n    }\n    return 0;\n}\n\n```\n\u597d\u5427\u5982\u679ck\u5728top\u4f4d\u7f6e\u90a3\u4e48\u6bd4k\u5c0f\u7684\u5728top-1\uff0c\u5f53\u8981\u7edf\u8ba1top-1\u5230cnt\u7684\u6700\u5927\u503c\u7684\u65f6\u5019\n\n\u4e00\u5b9a\u4f1a\u7b97\u5230top\u4f4d\u7f6e\uff0c\u4e8e\u662fk\u6bd4\u524d\u4e00\u4e2a\u6570\u5927\u90a3\u4e48\u524d\u4e00\u4e2a\u6570\u5c31\u6ca1\u5375\u7528\u4e86\n\n\n\u73b0\u5728\u6570\u636e\u52a0\u5f3a\u4e86\uff0c\u5927\u5bb6\u4e3b\u610f\u6709L=0\u7684\u60c5\u51b5\u53e6\u5916\u5b57\u7b26\u4e32\u8bfb\u5165\u8981\u7528scanf\uff0c\u975e\u5e38\u611f\u8c22@milkfilling\u7684\u63d0\u9192\uff01\n",
        "postTime": 1503152501,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a \u88f8\u7684\u7ebf\u6bb5\u6811\uff0c\u4f46 \u7ebf\u6bb5\u6811 \u6bcf\u4e2a\u8282\u70b9\u5b58 \u4e00\u6bb5\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\uff0c\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21\u8be2\u95ee\u90fd\u4e0d\u7528\u518d\u626b\u4e00\u904d\u6570\u636e\uff0c\u5426\u5219\u9664\u4e86 TLE \u5c31\u662f 30%AC \u3002\u3002\u3002\n\n\u8bdd\u8bf4 \u7ebf\u6bb5\u6811 \u9664\u4e86\u5e38\u6570\u5927\u4e86\u4e4b\u5916\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u7f3a\u70b9\u3002\u3002\u3002\uff08\u56e0\u4e3a\u6211\u53ea\u4f1a\u5199\u7ebf\u6bb5\u6811\uff0c\u5403\u67a3\u836f\u4e38\uff09\n\n**\u4e0d\u8981\u590d\u5236\u4ee3\u7801\uff01\u4e0d\u8981\u590d\u5236\u4ee3\u7801\uff01\uff01\u4e0d\u8981\u590d\u5236\u4ee3\u7801\uff01\uff01\uff01\u91cd\u8981\u7684\u4e8b\u60c5\u8bf43\u904d\uff01**\n\n\u9644\u4ee3\u7801\uff08\u7f29\u8fdb\u4e0d\u559c\u52ff\u55b7\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#define LSON rt<<1\n#define RSON rt<<1|1//\u65b9\u4fbf\u5b9e\u7528\u7684\u5b8f\u3002\u3002\u3002\n#define max(a,b) a>b?a:b//STL\u7684\u51fd\u6570\u6bd4\u624b\u5199\u7684\u6162\uff0c\u6240\u4ee5\u4e3a\u4e86\u51cf\u5c0f\u88ab\u5361\u5e38\u6570\u7684\u51e0\u7387\uff0c\u624b\u5199\u3002\u3002\u3002\n#define MAXN 200005\nusing namespace std;\nint m,d;\nlong long t=0,a[MAXN<<2];//\u7ebf\u6bb5\u6811 \u7684\u7a7a\u95f4\u662f \u539f\u6570\u636e \u7684 4 \u500d\uff0c\u8fd9\u662f\u4e00\u5b9a\u7684\ninline long long read(){//\u5f31\u5f31\u7684\u8bfb\u5165\u4f18\u5316\uff0c\u4f46\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u7528\u3002\u3002\u3002\u9632\u6b62\u88ab\u5361\u5e38\u5427\n       long long date=0,w=1;char c=0;\n       while(c!='-'&&(c<'0'||c>'9'))c=getchar();\n       if(c=='-'){w=-1;c=getchar();}\n       while(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n       return date*w;\n}\nvoid pushup(int rt){\n     a[rt]=max(a[LSON],a[RSON]);//\u6bcf\u4e2a\u8282\u70b9\u5b58 \u533a\u95f4\u6700\u5927\u503c\n}\nvoid update(int l,int r,int rt,int x,long long y){//\u9488\u5bf9\u9898\u76ee\u7684\u8f93\u5165\uff0c\u5efa\u6811\u4e0e\u63d2\u5165\u7684\u5408\u4f53\u3002\u3002\u3002\n     int mid;\n     if(l==r){\n              a[rt]=y;//\u53f6\u5b50\u7ed3\u70b9\u65f6\u8d4b \u533a\u95f4\u6700\u5927\u503c\n              return;\n              }\n     mid=l+r>>1;//\u4f4d\u8fd0\u7b97\uff0c\u7ecf\u9a8c\u9760\u8bc9\u6211\u4eec >>1 \u6bd4 /2 \u5feb\u5f88\u591a\u3002\u3002\u3002\n     if(x<=mid)update(l,mid,LSON,x,y);\n     else update(mid+1,r,RSON,x,y);//\u5206 \u5de6\u5b50\u6811 \u4e0e \u53f3\u5b50\u6811 \u5efa\u7acb\n     pushup(rt);//\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u8fd9\u53e5\u8bdd\uff01\uff01\uff01\u5f88\u91cd\u8981\uff01\uff01\uff01\n}\nlong long query(int l,int r,int rt,int x,int y){\n     int mid;\n     long long ans=-2147483647;//\u6ce8\u610f\uff0c\u5343\u4e07\u4e0d\u8981\u8bbe\u6210 0 \uff0c\u5f53\u521d\u6211\u63d0\u4ea43\u6b21\uff0c2\u6b21\u88ab\u5361\n     if(x<=l&&y>=r)//\u51fa\u4e86\u8303\u56f4\u5c31\u8fd4\u56de\u533a\u95f4\u6700\u5927\u503c\n     return a[rt];\n     mid=l+r>>1;\n     if(x<=mid)ans=max(ans,query(l,mid,LSON,x,y));\n     if(mid<y)ans=max(ans,query(mid+1,r,RSON,x,y));//\u8fd8\u662f \u5de6\u5b50\u6811 \u4e0e \u53f3\u5b50\u6811 \u5904\u7406\n     return ans;//\u4e0d\u540c\u4e0a\uff01\uff01\uff01\u4e00\u5b9a\u8981\u8fd4\u56de\u7b54\u6848\uff01\uff01\uff01\n}\nint main(){\n    int x,s=0;\n    char c[2];\n    m=read();d=read();\n    for(int i=1;i<=m;i++){\n            scanf(\"%s\",c);//\u6bcf\u884c\u9996\u5b57\u4e3a \u5b57\u7b26\uff0c\u4e3a\u907f\u514d\u8bfb\u5165 \u56de\u8f66\u7b26 \u2018\\n\u2019 \u6216\u8005 \"\\r\\n\"\uff0c\u7528 %s \uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5b9e\u7528\u7684\u4e1c\u4e1c\u3002\u3002\u3002\n            if(c[0]=='A'){//\u5206\u60c5\u51b5\u5904\u7406\u3002\u3002\u3002\n                          x=read();\n                          s++;\n                          x=(x+t)%d;\n                          update(1,m,1,s,x);//\u8be2\u95ee\u8303\u56f4\u662f 1 \u5230 m\n                          }\n            if(c[0]=='Q'){\n                          x=read();\n                          t=query(1,m,1,s-x+1,s);//\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86 t \u80fd\u5728\u4e0b\u4e00\u6b21\u8be2\u95ee\u65f6\u4f7f\u7528\n                          printf(\"%lld\\n\",t);//\u6ce8\u610f\uff0ct \u4e3a long long\uff0c\u4e0d\u7136\u4f1a\u70b8\u3002\u3002\u3002\n                          }\n            }\n    return 0;//\u6536\u5c3e\u3002\u3002\u3002\n}\n\n```",
        "postTime": 1503118793,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "# \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u6700\u5927\u503c\n\n\u770b\u5230\u8fd9\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5927\u6218\u9898\uff0c\u6211\u4e5f\u6765\u53d1\u4e00\u6ce2\u9898\u89e3\n\n\u8003\u8651\u5230\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u524d\u7f00\u7684\u5173\u7cfb\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e00\u9898\uff0c\u4e5f\u662f\u53ef\u4ee5\u7ef4\u62a4\u524d\u7f00\u7684\u6700\u5927\u503c\u7684\n\n```cpp\nLL sz[300100];\nint lowbit(int x){return x&(-x);}\n```\n\u4ee5\u4e0b\u662f\u7ef4\u62a4\u524d\u7f00\u6700\u5927\u503c\u7684\u67e5\u8be2\u4e0e\u6dfb\u52a0\u4ee3\u7801\uff0c\u76f8\u5bf9\u4e8e\u4e4b\u524d\u7684\u6811\u72b6\u6570\u7ec4\uff0c\n\n\u6211\u4eec\u53ea\u9700\u8981\u5c06\u52a0\u503c\u6539\u4e3a\u53d6max\u5373\u53ef\n\n```cpp\nLL query(int x){//\u67e5\u8be2\u64cd\u4f5c\n    LL rtn=0;\n    for(int i=x;i;i-=lowbit(i))\n        rtn=max(rtn,sz[i]);\n    return rtn;\n}\nLL updata(int x,LL v){\n    for(int i=x;i<=m;i+=lowbit(i))\n        sz[i]=max(sz[i],v);\n}\n```\n\u5f53\u7136\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e0d\u652f\u6301\u503c\u7684\u4fee\u6539\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u8fd9\u9053\u53ea\u5728\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\u7684\u9898\u76ee\u6765\u8bf4\u5df2\u7ecf\u591f\u7528\u4e86\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define LL long long\nusing namespace std;\nint m,size;LL d;\nLL sz[300100];\nint lowbit(int x){\n    return x&(-x);\n}\nLL query(int x){\n    LL rtn=0;\n    for(int i=x;i;i-=lowbit(i))\n        rtn=max(rtn,sz[i]);\n    return rtn;\n}\nLL updata(int x,LL v){\n    for(int i=x;i<=m;i+=lowbit(i))\n        sz[i]=max(sz[i],v);\n}\nint main(){\n    scanf(\"%d%lld\",&m,&d);\n    LL t=0; size=m;\n    for(int i=1;i<=m;i++){\n        char ch[2];scanf(\"%s\",ch);\n        if(ch[0]=='A'){\n            LL n;scanf(\"%lld\",&n);\n            n=(n+t)%d;\n            updata(size,n);\n            size--;\n        }\n        else {\n            int L;scanf(\"%d\",&L);\n            printf(\"%lld\\n\",t=query(size+L));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502855070,
        "uid": 29674,
        "name": "Anoxiacxy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u4ee5\u524d\u7684\u7ebf\u6bb5\u6811\u6253\u4e00\u6b21\u9519\u4e00\u6b21\uff0c\u8bf7\u6c42\u4e00\u4e0b\u6211\u7684\u5fc3\u7406\u9634\u5f71\u9762\u79efQAQ\n\n\u53d1\u4e2a\u9898\u89e3\u5e86\u795d\u7b2c\u4e00\u6b21\u7ebf\u6bb5\u6811\u76841A^\\_^\n\n\n\u4e00\u4e2a\u88f8\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\u3002\n\n\n\u4e0a\u4ee3\u7801\uff08\u653e\u5fc3copy\uff0c\u6ca1\u6709bug\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint T,Mod;\nconst int N=410000;\nint tree[N];\nint cnt=0;\nvoid add(int p,int l,int r,int ql,int qr,int x){\n    if (l+1==r){\n        tree[p]=x;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if (ql<mid)add(2*p,l,mid,ql,qr,x);\n    if (mid<qr)add(2*p+1,mid,r,ql,qr,x);\n    tree[p]=max(tree[2*p],tree[2*p+1]);\n}\nint query(int p,int l,int r,int ql,int qr){\n    if (ql<=l && r<=qr)return tree[p];\n    int mid=(l+r)>>1;\n    int t=0;\n    if (ql<mid)t=max(t,query(2*p,l,mid,ql,qr));\n    if (mid<qr)t=max(t,query(2*p+1,mid,r,ql,qr));\n    return t;\n}\nint main(){\n    scanf(\"%d%d\",&T,&Mod);\n    int last=0;\n    while (T--){\n        char opt;int xx;\n        scanf(\"\\n%c%d\",&opt,&xx);\n        if (opt=='A'){\n            cnt++;\n            xx+=last;xx%=Mod;\n            add(1,1,200000,cnt,cnt+1,xx);\n        }else{\n            last=query(1,1,200000,cnt-xx+1,cnt+1);\n            printf(\"%d\\n\",last);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502110925,
        "uid": 48966,
        "name": "707001933K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217+\u4e8c\u5206\u67e5\u627elower\\_bound\u3002\u3002\u3002\n\n\n\n```cpp\n#include<iostream>  \n#include<cstring>  \n#include<cstdio>   \nusing namespace std;  \nint M,D,t=0; \nint size;  \nint a[200500];  \nint num[200500];  \nint main()  \n{  \n    int Ln,len=0;  \n    char QA[5];  \n    scanf(\"%d%d\", &M, &D);  \n    while(M--)  \n    {  \n        scanf(\"%s %d\", QA, &Ln); \n        if(QA[0] == 'A')//\u67e5\u8be2\u64cd\u4f5c \n        {  \n            Ln=(Ln+t)%D;  \n            num[++len]=Ln;//\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2aLn,num\u6570\u7ec4\u957f\u5ea6++ \n            while(size&&num[a[size]]<=Ln) \n                size--;//\u5355\u8c03\u6808\u64cd\u4f5c \n            a[++size]=len;  \n        }  \n        else //\u63d2\u5165\u64cd\u4f5c \n        {  \n            int pos=lower_bound(a+1,a+size+1,len-Ln+1)-a; //\u4e8c\u5206\u67e5\u627e \n            t=num[a[pos]]; \n            cout<<t<<endl;  \n        }  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1493812956,
        "uid": 33266,
        "name": "Ash1mar",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "### \u601d\u8def\n\n###### \u7ebf\u6bb5\u6811\u5c0f\u8bd5\u725b\u5200\uff01qwq\n\n\n[\u9a97\u8bbf\u95ee\u91cf233](http://www.cnblogs.com/tonylim/p/6596186.html)\n\n\n> \u5148\u5efa\u4e00\u9897\u7a7a\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6bcf\u6b21\u628a\u503c\u63d2\u5165\uff0c\n> \u7528num\u7edf\u8ba1\u4e2a\u6570\n> \u7136\u540e\u6bcf\u6b21\u67e5\u8be2num-n+1\u5230num\u8fd9\u4e2a\u533a\u95f4\u7684\n> \u6700\u5927\u503c\u8f93\u51fa\u5c31\u662f\u5566\n\n### \u4ee3\u7801\n\n\n``` pascal \n\nprogram maxnumber;\nconst\n  inf='maxnumber.in';\n  outf='maxnumber.out';\ntype\n  tree=^node;\n  node=record\n          lc,rc:tree;\n          l,r,val:longint;\n       end;\n\nvar\n  i,m,n,d,ctot,num,l:longint;\n  ch:char;\n  t:tree;\n  s,e,a:array[1..200000] of longint;\n\nfunction max(aa,bb:longint):longint;\nbegin\n  if aa>bb then exit(aa)\n    else exit(bb);\nend;\n\nfunction min(aa,bb:longint):longint;\nbegin\n  if aa>bb then exit(bb)\n    else exit(aa);\nend;\n\nprocedure add(apple:longint);\nbegin\n    inc(num);\n    a[num]:=apple mod d;\nend;\n\nprocedure add(var t:tree; seat:longint; data:longint);\nbegin\n    if t^.l=t^.r then begin\n                        t^.val:=max(t^.val,data);\n                        exit;\n                      end;\n    if seat<=t^.lc^.r then add(t^.lc,seat,data)\n    else add(t^.rc,seat,data);\n    t^.val:=max(t^.val,data);\nend;\n\nprocedure build(var t:tree; l,r:longint);\nvar\n  mid:longint;\nbegin\n    new(t);\n    t^.l:=l;    t^.r:=r;\n    if l=r then begin\n                  t^.val:=a[l];\n                  exit;\n                end;\n    mid:=(l+r) div 2;\n    build(t^.lc,l,mid);\n    build(t^.rc,mid+1,r);\n    t^.val:=max(t^.lc^.val,t^.rc^.val);\nend;\n\nfunction query(var t:tree; l,r:longint):longint;\nvar\n  mm:longint;\nbegin\n   if (t^.l=t^.r) or ((t^.l>=l) and (t^.r<=r)) then exit(t^.val);\n   mm:=-maxlongint;\n   if l<=t^.lc^.r then mm:=query(t^.lc,l,min(t^.lc^.r,r));\n   if r>=t^.rc^.l then mm:=max(mm,query(t^.rc,max(t^.rc^.l,l),r));\n   exit(mm);\nend;\n\nbegin\n // assign(input,inf);    assign(output,outf);\n  reset(input);     rewrite(output);\n\n  readln(m,d);\n  build(t,1,m);\n  l:=0;\n  for i:= 1 to m do\n   begin\n     readln(ch,n);\n     if ch='A' then begin num:=num+1;   add(t,num,(n+l) mod d);   end\n       else begin\n              l:=query(t,num-n+1,num);\n              writeln(l);\n            end;\n   end;\n\n  close(input);\n  close(output);\nend.\n\n\n```",
        "postTime": 1490095392,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4\n\n\u8bbe\u539f\u6570\u5217\u4e3ac,\u6811\u72b6\u6570\u7ec4\u4e3aa.\n\n(\u5b9e\u9645\u7f16\u7a0b\u65f6c\u662f\u7528\u4e0d\u5230\u7684)\n\na\u4e2d\u5b58\u6700\u5927\u503c\n\n\u5148\u7b97\u51fa\u6570\u5217\u603b\u957flen\u3002\n\n\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\u7684\u65f6\u5019\u53cd\u5411\u5efa\u7acb\u3002\n\nnum\u5b58\u6570\u5217\u4e3a\u7a7a\u7684\u957f\u5ea6\uff0c\n\n\u5373a[1]\u5230a[num]\u4e3a-maxlongint\uff0ca[num+1]\u5230a[len]\u5b58\u6709\u6570\u636e\u3002\n\n\u5bf9\u4e8eQ\u64cd\u4f5c\uff0c\u5373\u6c42c[1]\u5230c[num+L]\u7684\u6700\u5927\u503c\n\n\u5bf9\u4e8eA\u64cd\u4f5c\uff0c\u5728c[num]\u5904\u66f4\u65b0\u3002\n\n\u9644\u4e0apascal\u4ee3\u7801\n\n```cpp\nconst\n  oo=-maxlongint;\nvar\n  a:array[1..200000] of longint;\n  s:char;\n  d,i,j,m,t,len,num:longint;\n  b:array[1..200000,1..2] of longint;\nfunction max(x,y:longint):longint;\n  begin\n    if x>y then exit(x)\n    else exit(y);\n  end;\nfunction lowbit(x:longint):longint;\n  begin\n    lowbit:=x and -x;\n  end;\nprocedure update(n,x:longint);//\u66f4\u65b0\u64cd\u4f5c\uff08\u64cd\u4f5cA\uff09\n  begin\n    while n<=len do\n    begin\n      a[n]:=max(a[n],x);\n      n:=n+lowbit(n);\n    end;\n  end;\nfunction ask(x:longint):longint;//\u8be2\u95ee\u64cd\u4f5c\uff08\u64cd\u4f5cQ\uff09\n  begin\n    ask:=oo;\n    while x>0 do\n    begin\n      ask:=max(ask,a[x]);\n      x:=x-lowbit(x);\n    end;\n  end;\nbegin\n  readln(m,d);\n  len:=0;\n  for i:=1 to m do\n  begin\n    read(s);\n    readln(b[i,2]);\n    if s='Q' then  b[i,1]:=1\n    else if s='A' then\n    begin\n      b[i,1]:=2;\n      b[i,2]:=b[i,2] mod d;\n      inc(len);  //\u6709\u4e00\u4e2aA\u957f\u5ea6\u5c31+1\n    end;\n  end;\n  t:=0;\n  for i:=1 to len do\n    a[i]:=oo;\n  num:=len;//\u521a\u5f00\u59cb\u6240\u6709\u6570\u90fd\u662f-maxlongint\n  for i:=1 to m do\n  begin\n    if b[i,1]=1 then//Q\u64cd\u4f5c\n    begin\n      t:=ask(num+b[i,2]);\n      writeln(t);\n    end\n    else if b[i,1]=2 then//A\u64cd\u4f5c\n    begin\n      update(num,(b[i,2]+t) mod d);\n      dec(num);//\u66f4\u65b0\u4e00\u4e2a\u6570\uff0cnum\u5c31\u51cf\u4e00\n    end;\n  end;\nend.\n```",
        "postTime": 1482973499,
        "uid": 34088,
        "name": "\u817e\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5c0f\u5c0f\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5AC\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct tree\n{\n    int l,r,_max;\n}a[800000];\nint n,m,d,x,t,next[200001];\nvoid make_tree(int x,int l,int r)\n{\n    a[x].l=l;\n    a[x].r=r;\n    if(l==r)\n    {\n        next[l]=x;\n        return;\n    }\n    int mid=(l+r)/2;\n    make_tree(x*2,l,mid);\n    make_tree(x*2+1,mid+1,r);\n}\nvoid add(int x)\n{\n    a[next[++n]]._max=(x+t)%d;\n    int temp=next[n];\n    while(a[temp]._max>a[temp/2]._max)\n    {\n        a[temp/2]._max=a[temp]._max;\n        temp=temp/2;\n    }\n}\nint q(int x,int y)\n{\n    if(a[x].l>=y) return a[x]._max;\n    if(a[x].r<y) return 0;\n    return max(q(x*2,y),q(x*2+1,y));\n}\nint main()\n{\n    cin>>m>>d;\n    a[1].l=1;\n    a[1].r=m;\n    make_tree(2,1,(m+1)/2);\n    make_tree(3,(m+1)/2+1,m);\n    for(int i=1;i<=m;i++)\n    {\n        char ch;\n        cin>>ch;\n        cin>>x;\n        if(ch=='A') add(x);\n        if(ch=='Q')\n        {\n            t=q(1,n-x+1);\n            cout<<t<<endl;\n        }\n    }\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1482653039,
        "uid": 20503,
        "name": "bianyaoyang0419",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u7ed9\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u505a\u6cd5\uff0c\u7531\u4e8e\u5148\u5165\u961f\u7684\u8f83\u5c0f\u6570\uff0c\u5728\u6709\u540e\u5165\u961f\u7684\u5927\u6570\u7684\u60c5\u51b5\u4e0b\u4e0d\u53ef\u80fd\u4e3a\u7b54\u6848\uff0c\u6240\u4ee5\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u3002\u7531\u4e8e\u5355\u8c03\u961f\u5217\u4e2d\u5165\u961f\u5148\u540e\uff0c\u4e0e\u6570\u7684\u5927\u5c0f\u7686\u662f\u6709\u5e8f\u7684\uff0c\u6545\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230\u5355\u8c03\u961f\u5217\u4e2d\uff0c\u5728\u540el\u4e2a\u6570\u91cc\uff0c\u6700\u9760\u8fd1\u961f\u9996(\u6700\u5927)\u7684\u6570\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n\nps\uff1a\uff081\uff09\u7ebf\u6bb5\u6811\u5e38\u6570\u5927\u6545\u6b64\u505a\u6cd5\u8981\u5feb\u5f97\u591a \uff082\uff09c++\u4e2d\u53ef\u7528\u51fd\u6570lower\\_bound\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\u529f\u80fd\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n\n \n\n```cpp\n#include<cstdio>  \n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint f[200010],a[200010];\nint main(){\n    int t=0,j=0,m,d,x,i,k,l=0;\n    char ch[2];\n    scanf(\"%d%d\",&m,&d);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%s%d\",ch,&x);\n        if (ch[0]=='A')\n        {\n            k=(x+t)%d;\n            while(j>0 && f[j]<k)j--;j++;\n            f[j]=k;\n            l++;a[j]=l;\n        }\n        else \n           printf(\"%d\\n\",t=f[lower_bound(a+1,a+j+1,l-x+1)-a]);\n    }\n    return 0;\n}\n```",
        "postTime": 1479225757,
        "uid": 19038,
        "name": "Xyasummer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "      \n\n\n\n```cpp\n    #include \"stdio.h\"  \n    #include \"string.h\"  \n    int f[200010];  \n    int main()  \n    {  \n        int t,now,m,d,x,i;  \n        char ch[2];  \n        while (scanf(\"%d%d\",&m,&d)!=EOF)  \n        {  \n            t=0;  \n            now=0;  \n            while (m--)  \n            {  \n                scanf(\"%s%d\",ch,&x);  \n                if (ch[0]=='A')  \n                {  \n                    f[++now]=(x+t)%d;  \n                    for (i=now-1;i>=1;i--)  \n                    if (f[i]<f[now]) f[i]=f[now];  \n                    else break;  \n                }  \n                else  \n                    printf(\"%d\\n\",t=f[now-x+1]);  \n            }  \n        }  \n        return 0;  \n    }  \n```\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5728\u961f\u5217\u4e2d\u65e2\u6ca1\u6709\u65f6\u95f4\u4f18\u52bf\uff08\u65e9\u70b9\u5165\u961f\uff09\u4e5f\u6ca1\u6709\u503c\u4f18\u52bf\uff08\u503c\u66f4\u5927\uff09\uff0c\u90a3\u4e48\u663e\u7136\u65e0\u8bba\u5728\u600e\u6837\u7684\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u88ab\u9009\u4e3a\u6700\u5927\u503c\u3002\n\n\u65e2\u7136\u5b83\u53ea\u5728\u672b\u5c3e\u9009\uff0c\u90a3\u4e48\u81ea\u7136\u53ef\u4ee5\u6ee1\u8db3\u4ee5\u4e0a\u7684\u6761\u4ef6\u3002\n",
        "postTime": 1455105780,
        "uid": 13599,
        "name": "wuliang1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7528\u7ebf\u6bb5\u6811\u4e5f\u80fdAC\uff0c\u4f46\u662f\u7528\u7ebf\u6bb5\u6811\u505a\u8fd9\u9898\u4f3c\u4e4e\u6709\u70b9\u6740\u9e21\u7528\u725b\u5200\u7684\u611f\u89c9\u2014\u2014\u56e0\u4e3a\u8be2\u95ee\u7684\u662f\u672b\u5c3eL\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u6570\u3002\n\n\n\u7531\u4e8eL\u4e0d\u56fa\u5b9a\uff0c\u6240\u4ee5\u7528\u5355\u8c03\u6808\u800c\u4e0d\u662f\u5355\u8c03\u961f\u5217\u3002\n\n\n\u4e8e\u662f\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u6808\u3002\u63d2\u5165\u64cd\u4f5c\u548c\u5355\u8c03\u961f\u5217\u4e00\u6837\uff0c\u5f53\u5f53\u524d\u6570\u5927\u4e8e\u6808\u9876\u65f6\u6808\u9876\u51fa\u6808\uff0c\u7136\u540e\u5f53\u524d\u6570\u8fdb\u6808\u3002\u7531\u4e8e\u6808\u5e95\u4e0d\u80fd\u50cf\u961f\u9996\u4e00\u6837\u88ab\u5f39\u51fa\uff08\u4e0d\u5b58\u5728\u201c\u8fc7\u671f\u5143\u7d20\u201d\uff09\uff0c\u67e5\u8be2\u64cd\u4f5c\u4e0d\u53ef\u80fd\u505a\u5230O(1)\u4e86\u3002\u663e\u713620W\u7684\u89c4\u6a21\u4e0d\u53ef\u80fd\u7528O(n)\u7684\u7b97\u6cd5\u8fdb\u884c\u5355\u6b21\u64cd\u4f5c\u3002\u8003\u8651\u5230\u6808\u4e2d\u65b0\u8fdb\u7684\u5143\u7d20\u7684\u7f16\u53f7\u5fc5\u7136\u6bd4\u8001\u5143\u7d20\u7684\u7f16\u53f7\u5927\uff0c\u5373\u5355\u8c03\u6808\u5143\u7d20\u7684\u7f16\u53f7\u4e5f\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u67e5\u8be2\u64cd\u4f5c\u53ef\u4ee5\u4f18\u5316\u4e3a\uff1a\u4e8c\u5206\u641c\u7d22\u6808\uff0c\u627e\u5230\u7f16\u53f7\u7b26\u5408\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u590d\u6742\u5ea6\u4e3aO(logn)\uff0c\u603b\u590d\u6742\u5ea6**[color=red]O(nlogn)[/color]**\uff0c\u8fd9\u6837\u5c31\u80fdAC\u4e86\u3002\n\n\nPS:\u5355\u8c03\u6808\u4e0d\u4ec5\u4ee3\u7801\u77ed\uff0c\u4e0d\u5bb9\u6613\u5199\u9519\uff0c\u800c\u4e14\u901f\u5ea6\u6bd4\u7ebf\u6bb5\u6811\u5feb\n\n\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<cstdio>\nint a[200010],b[200010],k,p,n,x,y,d;\nchar s[3];\nint search(int l,int r,int k){\n    int m=(l+r)>>1;\n    while (l!=r){\n        if (b[m]<k) l=m+1;\n        if (b[m]==k) return m;\n        if (b[m]>k) r=m;\n        m=(l+r)>>1;\n    }\n    return m;\n}\nint main(){\n    scanf(\"%d%d\",&n,&d);\n    x=k=0;\n    p=0;\n    for (int i=1;i<=n;i++){\n        scanf(\"%s%d\",s,&y);\n        if (s[0]=='A'){\n            y=(x+y)%d;\n            k++;\n            a[k]=y;\n            while (p>0 && a[b[p]]<=y) p--;\n            p++;\n            b[p]=k;\n        }\n        if (s[0]=='Q'){\n            x=a[b[search(1,p,k-y+1)]];\n            printf(\"%d\\n\",x);\n        }\n    }\n}\n\n```",
        "postTime": 1377090157,
        "uid": 206,
        "name": "courage",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1198 \u3010[JSOI2008]\u6700\u5927\u6570\u3011"
    }
]