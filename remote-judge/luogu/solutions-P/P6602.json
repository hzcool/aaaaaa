[
    {
        "content": "\u5148\u8bb2\u4e00\u4e0b\u8fd9\u9898\u5404\u79cd\u90e8\u5206\u5206\u7684\u590d\u6742\u5ea6\u3002\n\n------------\n\n\u82b1\u5f0f\u66b4\u529b\uff1a\n\n- 8\u5206\uff0c$O(nm^3)$\n\n- 16\u5206\uff0c$O(nm^2)$\n\n- 24\u5206\uff0c$O(n^4)$\n\n- 32\u5206\uff0c$O(n^3)$\n\n- 40\u5206\uff0c$O(n^2logn)$\n\n- 48\u5206\uff0c$O(n^2)$\n\n\u9001\u5206\u7ed3\u675f\u3002\n\n------------\n\n\u8ba4\u771f\u9a97\u5206\uff1a\n\n- 64\u5206\uff0c\u5728 $O(n^2)$ \u505a\u6cd5\u4e0a\u52a0\u4e2a\u5c0f\u4f18\u5316\u3002\n\n- 84\u5206\uff0c\u6570\u636e\u7ed3\u6784\uff1a$O(nklog^2 n)$ \u6216 $O(nk^2logn)$\n\n------------\n\n\u7b80\u5355\u6b63\u89e3\uff1a\n\n- 100\u5206\uff0c$O(n(k+logn))$\n\n\n\n------------\n\n### 48\u5206\uff1a $O(n^2)$ \u7684\u66b4\u529b\u3002\n\n\u5f88\u663e\u7136\uff0c\u6700\u4f18\u89e3\u4e00\u5b9a\u662f\u67d0\u4e24\u4e2a\u6709\u6807\u8bb0\u7684\u70b9\uff08\u5305\u62ec $-1$ \u548c $m+1$\uff09\u4e4b\u95f4\u7684\u8ddd\u79bb $-1$ \uff0c\u8fd9\u4e24\u4e2a\u70b9\u53ea\u9700\u8981\u6ee1\u8db3\u4ed6\u4eec\u4e4b\u95f4\uff08\u4e0d\u5305\u62ec\u8fd9\u4e24\u4e2a\u70b9\uff09\u7684\u6807\u8bb0\u6570 $\\le k$ \u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700**\u679a\u4e3e\u6709\u6807\u8bb0\u7684\u70b9**\u4f5c\u4e3a\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5373\u53ef\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528 set \u548c map \uff0c~~\u4f46\u662f\u6211\u4e0d\u592a\u4f1a\u7528~~\u3002\n\n\u5982\u679c\u7528\u6570\u7ec4\u5b58\uff0c\u53ea\u9700\u5148\u79bb\u7ebf\u8bb0\u5f55\u5404\u4e2a\u8f93\u5165\uff0c\u7136\u540e\u5f00\u4e2a\u7ed3\u6784\u4f53\u6392\u4e2a\u5e8f\u518d map \u778e\u641e\u641e\u5c31\u597d\u4e86\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5c06\u53f3\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u632a\u5c31\u597d\u4e86\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint ans;\nint num[10005], pos[10005], cnt;\nstruct node{\n\tint x, a;\n} e[10005];\nint x[10005], a[10005];\nmap<int,int>mp;\n\nbool comp(node x,node y){\n\treturn x.x < y.x;\n}\n\nint main(){\n    cin>>n>>m>>k;\n    for(int i = 1; i <= n; i++){\n    \tcin>>e[i].x>>e[i].a;\n    \tx[i] = e[i].x, a[i] = e[i].a;\n\t}\n\te[n+1].x = -1;\n\tsort(e+1,e+2+n,comp);\n\tfor(int i = 1; i <= n + 1; i++){\n\t\tif(e[i].x != pos[cnt]) pos[++cnt] = e[i].x;\n\t\tmp[e[i].x] = cnt;\n\t}\n\tpos[cnt+1] = m + 1;\n\tfor(int i = 1; i <= n; i++){\n\t\tnum[mp[x[i]]] += a[i];\n\t\tint t = 1, s = 0;\n\t\tans = -1;\n\t\tfor(int j = 1; j <= cnt; j++){\n\t\t\ts -= num[j];\n\t\t\twhile(s + num[t+1] <= k && t < cnt) t++, s += num[t];\n\t\t\tans = max(ans,pos[t+1] - pos[j] - 2);\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}\n```\n\n\n------------\n\n### 64\u5206\uff1a $O(n^2)$ \u7684\u66b4\u529b + \u4f18\u5316\u3002\n\n- \u4fdd\u8bc1\u6d4b\u8bd5\u70b9 $13\\sim 16$ \u7684 $x_i$ \u4e3a\u968f\u673a\u6784\u9020\u3002\n\n\u5f88\u663e\u7136\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7684\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8e\u4e0a\u6b21\u7684\u7b54\u6848\u3002\n\n\u5176\u5b9e\u5728\u968f\u673a\u6570\u636e\u4e0b\uff0c\u662f\u4f1a\u6709\u5f88\u591a\u76f8\u540c\u7684\u7b54\u6848\u7684\u3002\n\n\u56e0\u4e3a\u968f\u7740\u64cd\u4f5c\u7684\u589e\u591a\uff0c\u7b54\u6848\u533a\u95f4\u4e5f\u8d8a\u6765\u8d8a\u5c0f\uff0c\u9700\u8981\u66f4\u65b0\u7b54\u6848\u7684\u6982\u7387\u4e5f\u5c31\u8d8a\u4f4e\u3002\n\n\u6240\u4ee5\u5982\u679c\u67d0\u6b21\u64cd\u4f5c\u7684\u7b54\u6848\u4e0e\u4e0a\u6b21\u7684\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u518d\u66f4\u65b0\u7b54\u6848\u3002\n\n\u600e\u4e48\u5224\u65ad\u67d0\u6b21\u7684\u7b54\u6848\u662f\u4e0d\u662f\u4e0e\u4e0a\u6b21\u7684\u76f8\u540c\u5462\uff1f\n\n\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u540e\u8bb0\u5f55\u4e0b\u5f53\u524d\u7b54\u6848\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\uff0c\u5f88\u663e\u7136\u5982\u679c\u67d0\u6b21\u64cd\u4f5c\u7684 $x_i$ \u4e0d\u5728\u4e0a\u6b21\u7684\u7b54\u6848\u533a\u95f4\u5185\uff0c\u5c31\u4e0d\u7528\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAX_N 1000005\nint n, m, k;\nint ll, rr;\nint ans;\nint num[MAX_N], pos[MAX_N], cnt;\nstruct node{\n\tint x, a;\n}e[MAX_N];\nint x[MAX_N], a[MAX_N];\nmap<int,int>mp;\n\nbool comp(node x,node y){\n\treturn x.x < y.x;\n}\n\nint main(){\n    cin>>n>>m>>k;\n    for(int i = 1; i <= n; i++){\n    \tcin>>e[i].x>>e[i].a;\n    \tx[i] = e[i].x, a[i] = e[i].a;\n\t}\n\te[n+1].x = -1;\n\tsort(e+1,e+2+n,comp);\n\tfor(int i = 1;i <= n + 1; i++){\n\t\tif(e[i].x != pos[cnt]) pos[++cnt] = e[i].x;\n\t\tmp[e[i].x]= c nt;\n\t}\n\tpos[cnt+1] = m+1;\n\trr = m;\n\tfor(int i = 1; i <= n; i++){\n\t\tnum[mp[x[i]]] += a[i];\n\t\tif(x[i] >= ll && x[i] <= rr){\n\t\t\tint t = 1, s = 0;\n\t\t\tans = -1;\n\t\t\tfor(int j = 1; j <= cnt; j++){\n\t\t\t\ts -= num[j];\n\t\t\t\twhile(s + num[t+1] <= k && t < cnt) t++, s += num[t];\n\t\t\t\tif(pos[t+1] - pos[j] - 2 > ans) ans = pos[t+1] - pos[j] - 2, ll = pos[j] + 1, rr = pos[t+1] - 1;\n\t\t\t}\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n}\n```\n\n\n------------\n\n### 84\u5206\uff1a\u6570\u636e\u7ed3\u6784\u3002\n\n- #### \u65b9\u6cd5\u4e00\uff1a\u4e07\u80fd\u7684\u7ebf\u6bb5\u6811 $O(nk^2logn)$\n\n\u6ce8\u610f\u5230 $m\\le 10^6$ \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f00\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u53ea\u9700\u7ef4\u62a4\u7b26\u5408\u8981\u6c42\u7684\u6700\u5927\u533a\u95f4\uff0c\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u533a\u95f4\uff0c\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u533a\u95f4\u3002\n\n\u8003\u8651\u5230 $k\\le 3$ \uff0c\u6211\u4eec\u53ea\u9700\u5f00\u4e8c\u7ef4\uff0c\u6bcf\u4e2a\u8282\u70b9 $k^2$ \u66b4\u529b\u66f4\u65b0\u3002\n\n\u7531\u4e8e\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4e0d\u9700\u8981\u4e0b\u4f20\u6807\u8bb0\u3002\n\n\u8be2\u95ee\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8f93\u51fa\u8282\u70b9 $1$ \u7684\u6700\u5927\u533a\u95f4\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u4e0a\u4f20\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u5c31\u7ef4\u62a4\u4e0b\u8be5\u533a\u95f4\u5185\u6709 $j$ \u4e2a\u6807\u8bb0\u65f6\u7684\u6700\u5927\u533a\u95f4\uff0c\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u533a\u95f4\uff0c\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u533a\u95f4\u5373\u53ef\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u8fde\u61d2\u60f0\u6807\u8bb0\u90fd\u4e0d\u7528\u7684\u7ebf\u6bb5\u6811\u5c31\u5f88\u597d\u6253\u4e86\u3002\n\n\nCode\uff1a\n\n------------\n```cpp\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define G() Cr=getchar()\n#define sum(i,j) tr[i].sum[j]\n#define lst(i,j) tr[i].lst[j]\n#define rst(i,j) tr[i].rst[j]\nint Xr;char Cr;\ninline int rd(){\n\tXr=0, G();\n\twhile(Cr<'0' || Cr>'9') G();\n\twhile(Cr>='0' && Cr<='9') Xr=(Xr<<3) + (Xr<<1) + (Cr & 15), G();\n\treturn Xr;\n}\n#define MAX_N 1000005\nint n, m, k;\nint ans;\nint num[MAX_N];\nint pos, a;\n\nstruct Node {\n\tint sum[5], lst[5], rst[5];\n} tr[MAX_N<<2];\n\nvoid Push_up(int i,int l,int r) {\n\tint mid = l + r >> 1;\n\tfor(int j = 0; j <= k; j++)\n\t\tsum(i,j) = max(sum(i<<1,j),sum(i<<1|1,j)),\n\t\tlst(i,j) = lst(i<<1,j),\n\t\trst(i,j) = rst(i<<1|1,j);\n\tfor(int j = 0; j <= k; j++)\n\t\tfor(int p = 0; p <= j; p++) {\n\t\t\tif(rst(i<<1,p) && lst(i<<1|1,j-p))sum(i,j) = max(sum(i,j), rst(i<<1,p) + lst(i<<1|1,j-p));\n\t\t\tif(lst(i<<1,p) == mid-l+1 && lst(i<<1|1,j-p)) lst(i,j) = max(lst(i,j), lst(i<<1,p) + lst(i<<1|1,j-p));\n\t\t\tif(rst(i<<1|1,p) == r-mid && rst(i<<1,j-p)) rst(i,j) = max(rst(i,j), rst(i<<1|1,p) + rst(i<<1,j-p));\n\t\t}\n}\n\nvoid Build(int i,int l,int r) {\n\tif(l == r) {\n\t\tsum(i,0) = lst(i,0) = rst(i,0) = 1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tBuild(i<<1,l,mid);\n\tBuild(i<<1|1,mid+1,r);\n\tPush_up(i,l,r);\n}\n\nvoid Change(int i,int l,int r,int P) {\n\tif(l>=P && r<=P) {\n\t\tfor(int j=0;j<=k;j++) sum(i,j) = lst(i,j) = rst(i,j) = 0;\n\t\tif(num[l] <= k) sum(i,num[l]) = lst(i,num[l]) = rst(i,num[l]) = 1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tif(mid >= P) Change(i<<1,l,mid,P);\n\telse Change(i<<1|1,mid+1,r,P);\n\tPush_up(i,l,r);\n}\n\nint main() {\n    n=rd(), m=rd(), k=rd();\n    Build(1,0,m);\n    for(int i = 1;i <= n;i++) {\n    \tpos=rd(), a=rd();\n    \tnum[pos] += a;\n    \tChange(1,0,m,pos);\n    \tans = -1;\n    \tfor(int j = 0;j <= k; j++) ans = max(ans,sum(1,j) - 1);\n    \tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n\n\n------------\n\n- #### \u65b9\u6cd5\u4e8c\uff1a\u6811\u72b6\u6570\u7ec4 + \u4e8c\u5206 $O(nklog^2n)$ \n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u7531\u4e8e\u6bcf\u6b21\u7684\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u6700\u5927\u533a\u95f4\u3002\n\n\u4f46\u5982\u679c**\u5c06\u8be2\u95ee\u5012\u5e8f\u5904\u7406**\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u7b54\u6848\u53d8\u4e3a\u5927\u4e8e\u7b49\u4e8e\u4e0a\u4e00\u6b21\u7684\u7b54\u6848\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6bcf\u6b21\u5220\u9664\u82e5\u5e72\u6807\u8bb0\u3002\n\n\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u5982\u679c\u66f4\u65b0\u7b54\u6848\uff0c\u90a3\u4e48\u65b0\u7684\u7b54\u6848\u533a\u95f4\u4e00\u5b9a\u5305\u542b\u6b64\u5904\u64cd\u4f5c\u5220\u9664\u6807\u8bb0\u7684\u90a3\u4e2a\u70b9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u679a\u4e3e\u6700\u591a $k$ \u4e2a\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5728\u67d0\u4e2a**\u6700\u7ec8\u6709\u6807\u8bb0**\u7684\u70b9\u7684\u6807\u8bb0\u6570\u524d\u7f00\u548c\uff0c\u7136\u540e\u5229\u7528\u4e8c\u5206\u67e5\u627e\u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\u5373\u53ef\u3002\n\nCode\uff1a\n\n------------\n```cpp\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define G() Cr=getchar()\nint Xr;char Cr;\ninline int rd(){\n    Xr = 0, G();\n    while(Cr < '0' || Cr > '9') G();\n    while(Cr >= '0' && Cr <= '9')Xr = (Xr<<3) + (Xr<<1) + (Cr & 15), G();\n    return Xr;\n}\n#define LL long long\n#define MAX_N 1000005\nint n, m, k;\nint ans[MAX_N];\nint num[MAX_N], pos[MAX_N], cnt;\nint ma = -1, s, t;\nint sum[MAX_N];\nstruct node{\n\tint x, a;\n} e[MAX_N];\nint x[MAX_N], a[MAX_N];\nmap<int,int>mp;\n\nbool comp(node x,node y){\n\treturn x.x < y.x;\n}\n\nvoid add(int p,int x){\n\twhile(p <= cnt) sum[p] += x, p += p & -p;\n}\n\nint gsum(int p){\n\tint ss=0;\n\twhile(p) ss += sum[p], p -= p & -p;\n\treturn ss;\n}\n\nint find_l(int p){\n\tint ss = gsum(p);\n\tint l=1, r=p, sss=p;\n\twhile(l <= r){\n\t\tint mid = (l + r)>>1;\n\t\tif(ss - gsum(mid) <= k) sss = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\treturn sss;\n}\n\nint find_r_j(int p){\n\tint ss = gsum(p);\n\tint l = p + 1, r = cnt, sss = p + 1;\n\twhile(l <= r){\n\t\tint mid = (l + r)>>1;\n\t\tif(ss < gsum(mid)) sss = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\treturn sss;\n}\n\nint find_r_t(int p){\n\tint ss = gsum(p);\n\tint l = p, r = cnt, sss = p;\n\twhile(l <= r){\n\t\tint mid = (l + r)>>1;\n\t\tif(gsum(mid) - ss <= k) sss = mid, l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\treturn sss;\n}\n\nint main(){\n    n = rd(), m = rd(), k = rd();\n    for(int i = 1; i <= n; i++) {\n    \te[i].x = rd(), e[i].a = rd();\n    \tx[i] = e[i].x, a[i] = e[i].a;\n\t}\n\te[n+1].x = -1;\n\tsort(e+1,e+2+n,comp);\n\tfor(int i = 1; i <= n + 1; i++) {\n\t\tif(e[i].x != pos[cnt]) pos[++cnt] = e[i].x;\n\t\tmp[e[i].x] = cnt;\n\t}\n\tpos[cnt+1] = m + 1;\n\tfor(int i = 1; i <= n; i++) num[mp[x[i]]] += a[i], add(mp[x[i]],a[i]);\n\tfor(int i = 1; i <= cnt; i++) {\n\t\ts -= num[i];\n\t\twhile(s + num[t+1] <= k && t < cnt) t++, s += num[t];\n\t\tma=max(ma,pos[t+1] - pos[i] - 2);\n\t}\n\tans[n] = ma;\n\tfor(int i = n; i >= 2; i--) {\n\t\tint p = mp[x[i]];\n\t\tadd(p,-a[i]);\n\t\tint j = find_l(p), t;\n\t\twhile(j < p){\n\t\t\tt = find_r_t(j);\n\t\t\tma = max(ma,pos[t+1] - pos[j] - 2);\n\t\t\tj = find_r_j(j);\n\t\t}\n\t\tans[i-1] = ma;\n\t}\n\tfor(int i = 1; i <= n; i++) printf(\"%d\\n\",ans[i]);\n}\n```\n\n\n------------\n\n### 100\u5206\uff1a$O(n(k+logn))$ \u53ea\u9700\u5f00\u51e0\u4e2a\u6570\u7ec4\u76f4\u63a5\u7ef4\u62a4\u5373\u53ef \u3002\n\n\u8003\u8651\u53cd\u6b63\u6bcf\u6b21\u4e5f\u662f\u6700\u591a\u679a\u4e3e $k$ \u6b21\u5de6\u7aef\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e24\u4e2a\u6570\u7ec4 $l_i,r_i$\uff0c\u8868\u793a\u7b2c $i$ \u4e2a\u6700\u7ec8\u6709\u6807\u8bb0\u70b9\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u6709\u6807\u8bb0\u7684\u70b9\u7684\u4e0b\u6807\u3002\n\n\u521d\u59cb\u5316\uff1a\n```cpp\nl[i] = i - 1, r[i] = i + 1;\n```\n\n\n\u7136\u540e\u6bcf\u6b21\u5012\u5e8f\u64cd\u4f5c\u65f6\uff0c\u82e5\u6b64\u70b9\u7684\u6807\u8bb0\u51cf\u4e3a $0$\uff0c \u66f4\u65b0 \uff1a\n\n```\nif(!num[p]) r[l[p]] = r[p], l[r[p]] = l[p];\n```\n\n\u5176\u4e2d $p$ \u4e3a\u6b64\u6b21\u64cd\u4f5c\u5220\u53bb\u6807\u8bb0\u7684\u70b9\u3002\n\n\u7136\u540e\u67e5\u8be2\u4e5f\u5c31\u53ea\u9700\u6bcf\u6b21\u79fb\u52a8\u5230 $l_j,r_j$ \u5373\u53ef\uff0c\u5f88\u663e\u7136\u6bcf\u6b21\u64cd\u4f5c\u79fb\u52a8\u590d\u6742\u5ea6\u4e3a $O(k)$\n\nCode:\n\n\n------------\n```cpp\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define G() Cr=getchar()\nint Xr;char Cr;\ninline int rd(){\n    Xr = 0, G();\n    while(Cr < '0' || Cr > '9') G();\n    while(Cr >= '0' && Cr <= '9') Xr = (Xr<<3) + (Xr<<1) + (Cr & 15), G();\n    return Xr;\n}\n#define MAX_N 1000005\nint n, m, k;\nint ans[MAX_N];\nint num[MAX_N], pos[MAX_N], cnt;\nint l[MAX_N], r[MAX_N];\nint ma = -1, s, t;\nstruct node{\n\tint x, a;\n} e[MAX_N];\nint x[MAX_N], a[MAX_N];\nmap<int,int>mp;\n\nbool comp(node x,node y){\n\treturn x.x < y.x;\n}\n\nint main(){\n    n = rd(), m = rd(), k = rd();\n    for(int i = 1; i <= n; i++) {\n    \te[i].x = rd(), e[i].a = rd();\n    \tx[i] = e[i].x, a[i] = e[i].a;\n\t}\n\te[n+1].x = -1;\n\tsort(e+1,e+2+n,comp);\n\tfor(int i = 1; i <= n + 1; i++) {\n\t\tif(e[i].x != pos[cnt]) pos[++cnt] = e[i].x;\n\t\tmp[e[i].x] = cnt;\n\t}\n\tpos[cnt+1] = m + 1;\n\tfor(int i = 1; i <= n; i++) num[mp[x[i]]] += a[i];\n\tfor(int i = 1; i <= cnt; i++) {\n\t\ts -= num[i];\n\t\twhile(s + num[t+1] <= k && t < cnt) t++, s += num[t];\n\t\tma = max(ma, pos[t+1] - pos[i] - 2);\n\t\tl[i] = i - 1, r[i] = i + 1;\n\t}\n\tans[n] = ma;\n\tfor(int i = n; i >= 2; i--) {\n\t\tint p = mp[x[i]];\n\t\tnum[p] -= a[i];\n\t\tif(!num[p]) r[l[p]] = r[p], l[r[p]] = l[p];\n\t\tt = p;\n\t\tint j = p;\n\t\ts = num[t];\n\t\twhile(j > 1 && s <= k) j = l[j], s += num[j];\n\t\tfor(j; j < p; j = r[j]) {\n\t\t\ts -= num[j];\t\t\n\t\t\twhile(s + num[r[t]] <= k && r[t] <= cnt) t = r[t], s += num[t];\n\t\t\tma = max(ma, pos[r[t]] - pos[j] - 2);\n\t\t}\n\t\tans[i-1] = ma;\n\t}\n\tfor(int i = 1; i <= n; i++) printf(\"%d\\n\",ans[i]);\n}\n```\n\n\n------------\n\n\u603b\u7ed3\uff1a\u8fd9\u662f\u4e00\u9053\u601d\u7ef4\u9898\uff0c\u7ec6\u8282\u4e5f\u4e0d\u5c11\uff0c\u4e0d\u8fc7\u90e8\u5206\u5206\u975e\u5e38\u8db3\u3002\n\n\u53e6\uff1a\u6211\u662f\u7528 map \u7684\uff0c\u6240\u4ee5\u4f1a\u6bd4\u8f83\u6162\uff0c std \u88ab\u540a\u6253\u5f88\u6b63\u5e38/kk",
        "postTime": 1587531610,
        "uid": 250469,
        "name": "\u541b\u306eNOIP\u3002",
        "ccfLevel": 6,
        "title": "\u300cEZEC-2\u300d\u6570\u8f74"
    },
    {
        "content": "## \u3010two pointers\u3011\u3010P6602\u3011 \u300cEZEC-2\u300d\u6570\u8f74\r\n\r\n### Description\r\n\r\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5e8f\u5217\uff0c\u6709 $n$ \u6b21\u64cd\u4f5c\uff0c\u5bf9\u5e8f\u5217\u5355\u70b9\u52a0 $a$\u3002\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u8981\u6c42\u51fa\u5e8f\u5217\u4e2d\u6700\u957f\u7684\u533a\u95f4\uff0c\u6ee1\u8db3\u533a\u95f4\u548c\u4e0d\u5927\u4e8e $k$\u3002\r\n\r\n$1 \\leq n \\leq 10^6$\uff0c$1 \\leq m \\leq 10^9$\uff0c$1 \\leq k \\leq 100$\uff0c$1 \\leq a \\leq 100$\u3002\r\n\r\n### Analysis\r\n\r\n\u9996\u5148\u6ce8\u610f\u5230\u7b54\u6848\u533a\u95f4\u4e00\u5b9a\u662f\u5f62\u5982\u5f00\u533a\u95f4 $(l, r)$ \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d $l$ \u8981\u4e48\u662f $-1$\uff0c\u8981\u4e48\u662f\u88ab\u4fee\u6539\u8fc7\u7684\u4f4d\u7f6e\uff1b$r$ \u8981\u4e48\u662f $m + 1$\uff0c\u8981\u4e48\u662f\u88ab\u4fee\u6539\u8fc7\u7684\u4f4d\u7f6e\u3002\u8fd9\u662f\u56e0\u4e3a\u5982\u679c $l$ \u6ca1\u6709\u88ab\u4fee\u6539\u7684\u8bdd\uff0c\u5c06 $l$ \u51cf\u6389 $1$\uff0c\u533a\u95f4\u548c\u4e0d\u53d8\uff0c\u533a\u95f4\u53d8\u957f\uff0c\u7b54\u6848\u66f4\u4f18\u3002$r$ \u540c\u7406\u3002\u6211\u4eec\u628a\u6240\u6709**\u76ee\u524d**\u88ab\u4fee\u6539\u8fc7\u7684\u4f4d\u7f6e\u548c $-1$ \u4ee5\u53ca $m + 1$ \u90fd\u79f0\u4e3a\u5173\u952e\u70b9\u3002\r\n\r\n\u8003\u8651\u5bf9\u4e8e\u5173\u952e\u70b9\u4f5c\u4e3a $r$\uff0c\u90fd\u7ef4\u62a4\u51fa\u5176\u5bf9\u5e94\u7684 $l$ \u6700\u5c0f\u7684\u4f4d\u7f6e\u3002\u5f53\u8fdb\u884c\u4e00\u6b21\u5355\u8c03\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u56e0\u4e3a\u5173\u952e\u70b9\u5904\u7684\u503c\u81f3\u5c11\u662f $1$\uff08\u9664\u4e86 $-1$ \u548c $m + 1$\uff09\uff0c\u6240\u4ee5\u88ab\u4fee\u6539\u7684\u4f4d\u7f6e\u81f3\u591a\u4f1a\u5f71\u54cd\u5b83\u540e\u9762 $k$ \u4e2a\u5173\u952e\u70b9\u7684\u7b54\u6848\u3002\u7531\u4e8e $k$ \u5f88\u5c0f\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u8fd9\u4e9b\u4f4d\u7f6e\u5bf9\u5e94\u7684 $l$ \u5373\u53ef\u3002\u6ce8\u610f\u5230\u5f53 $r$ \u589e\u52a0\u65f6\uff0c$l$ \u5355\u8c03\u4e0d\u964d\u3002\u6240\u4ee5\u53ef\u4ee5 two pointers \u626b\u4e00\u904d\u3002\u4fee\u6539\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(k)$\u3002\r\n\r\n\u8003\u8651\u7ef4\u62a4\u7b54\u6848\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u5173\u952e\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u957f\u5ea6\u90fd\u6254\u5230 `std::set` \u91cc\uff0c\u6bcf\u6b21\u4fee\u6539\u90fd\u4fee\u6539 `std::set` \u91cc\u7684\u503c\u3002\u67e5\u8be2\u65f6\u67e5\u8be2\u6700\u5927\u503c\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk \\log n)$\uff0c\u53ef\u4ee5\u83b7\u5f97 84 \u5206\u7684\u597d\u6210\u7ee9\u3002\r\n\r\n\u8003\u8651\u4f18\u5316\u3002\u6ce8\u610f\u5230\u4e4b\u6240\u4ee5\u9700\u8981\u7528 `std::set` \u6765\u7ef4\u62a4\u7b54\u6848\uff0c\u662f\u56e0\u4e3a\u968f\u7740\u64cd\u4f5c\u8fdb\u884c\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7b54\u6848\u90fd\u4f1a\u4e0d\u65ad\u51cf\u5c0f\uff0c\u5bfc\u81f4\u6700\u5927\u503c\u51cf\u5c0f\u3002\u6211\u4eec\u65e0\u6cd5\u5feb\u901f\u7ef4\u62a4\u539f\u6765\u7684\u6700\u5927\u503c\u88ab\u51cf\u5c0f\u4ee5\u540e\u65b0\u7684\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\r\n\r\n\u4f46\u662f\u5982\u679c\u6700\u5927\u503c\u662f\u4e0d\u65ad\u589e\u52a0\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u6b21\u53d6 max \u5c31\u53ef\u4ee5 $O(1)$ \u7ef4\u62a4\u5f53\u524d\u6700\u5927\u503c\u4e86\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u628a\u64cd\u4f5c\u90fd\u53cd\u8fc7\u6765\uff0c\u4e00\u5f00\u59cb\u5c31\u7ef4\u62a4\u51fa\u5e8f\u5217\u7684\u6700\u7ec8\u72b6\u6001\uff0c\u7136\u540e\u628a\u5355\u70b9\u52a0\u53d8\u6210\u5355\u70b9\u51cf\uff0c\u968f\u7740\u64cd\u4f5c\u8fdb\u884c\u4e0d\u65ad\u5730\u53bb\u6389\u5173\u952e\u70b9\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u5173\u952e\u70b9\uff0c\u5176\u5bf9\u5e94\u7684\u533a\u95f4\u957f\u5ea6\u90fd\u662f\u968f\u7740\u64cd\u4f5c\u8fdb\u884c\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u56e0\u6b64\u6700\u5927\u503c\u5355\u8c03\u4e0d\u964d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $O(1)$ \u53bb\u7ef4\u62a4\u6700\u5927\u503c\u800c\u4e0d\u9700\u8981 `std::set` \u4e86\u3002\u5904\u7406\u5e8f\u5217\u7684\u6700\u7ec8\u72b6\u6001\u7684\u5173\u952e\u70b9\u5bf9\u5e94\u7684\u957f\u5ea6\u53ef\u4ee5 two pointers \u6765\u6c42\uff0c\u5220\u9664\u5173\u952e\u70b9\u53ef\u4ee5\u7528\u94fe\u8868\u6765\u7ef4\u62a4\u3002\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nk)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\r\n\r\n### Code\r\n\r\n\u5199\u4e86\u4e2a $O(n^2)$ \u7684\u5047\u4ee3\u7801\u6c34\u8fc7\u4e86\u8fd9\u4e2a\u9898\uff0c\u5df2\u7ecf\u8054\u7cfb\u51fa\u9898\u4eba\u52a0\u5f3a\u6570\u636e\uff0c\u7b49\u6211\u660e\u5929\u5199\u4e00\u4efd\u771f\u7684\u4ee3\u7801\u518d\u8865\u5427\u3002\r\n\r\nupd\uff1a\u4ee3\u7801\u5df2\u6dfb\u52a0\u3002\r\n\r\n```cpp\r\nnamespace Fusu {\r\n\r\nconst int maxn = 1000006;\r\n\r\nint n, m, t, ma = -1;\r\nint a[maxn], b[maxn], c[maxn], ans[maxn], w[maxn], lp[maxn], rp[maxn];\r\n\r\nvoid Init();\r\nvoid Solve();\r\n\r\nvoid Main() {\r\n  Init();\r\n  Solve();\r\n}\r\n\r\nvoid Init() {\r\n  qr(n); qr(m); qr(t);\r\n  for (int i = 1; i <= n; ++i) {\r\n    qr(a[i]); qr(b[i]);\r\n    c[i] = a[i];\r\n  }\r\n  std::sort(c + 1, c + 1 + n);\r\n  auto bg = c + 1, ed = std::unique(bg, c + 1 + n);\r\n  *ed = m + 1;\r\n  m = ed - bg + 1;\r\n  w[m + 1] = 1;\r\n  c[0] = -1;\r\n  for (int i = 1; i <= n; ++i) {\r\n    w[a[i] = std::lower_bound(bg, ed, a[i]) - c] += b[i];\r\n  }\r\n  for (int i = 0; i <= m; ++i) {\r\n    lp[i] = i - 1;\r\n    rp[i] = i + 1;\r\n  }\r\n  for (int l = 0, r = 1, sum = 0; r <= m; sum += w[r], r = rp[r]) {\r\n    while (sum > t) sum -= w[l = rp[l]];\r\n    ma = std::max(ma, c[r] - c[l]);\r\n  }\r\n}\r\n\r\nvoid Solve() {\r\n  for (int i = n; i; --i) {\r\n    ans[i] = ma - 2;\r\n    w[a[i]] -= b[i];\r\n    int l = a[i] - 1, sum = 0;\r\n    while (l && ((sum += w[l]) <= t)) l = lp[l];\r\n    sum -= w[l];\r\n    ma = std::max(ma, c[a[i]] - c[l]);\r\n    sum += w[a[i]];\r\n    for (int r = a[i] + 1; r <= m; sum += w[r], r = rp[r]) {\r\n      while (sum > t) sum -= w[l = rp[l]];\r\n      ma = std::max(ma, c[r] - c[l]);\r\n      if (l > a[i]) break;\r\n    }\r\n    if (w[a[i]] == 0) {\r\n      lp[a[i] + 1] = lp[a[i]];\r\n      rp[a[i] - 1] = rp[a[i]];\r\n    }\r\n  }\r\n  qwa(ans + 1, n, '\\n', '\\n');\r\n}\r\n\r\n} // namespace Fusu\r\n```",
        "postTime": 1591536814,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6602 \u3010\u300cEZEC-2\u300d\u6570\u8f74\u3011"
    },
    {
        "content": "## \u65f6\u5149\u5012\u6d41+\u66b4\u529b+\u5c3a\u53d6\n\n\n\n------------\n\n\n\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u9898\uff0c\u662f\u5728\u795e\u5b50\u674f\u7684\u8bfe\u5802\u4e0a\n\n>  \u8fd9\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u53cc\u6307\u9488\uff0c\u6d1b\u5495\u4e0a\u591a\u500d\u7ecf\u9a8c\u7684\u9898\u592a\u591a\u4e86\u3002 \u2014\u2014\u795e\u5b50\u674f\n\n\u90a3\u597d\uff0c\u6211\u4eec\u5c31\u7528\u53cc\u6307\u9488\u6765\u8003\u8651\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\n\n- \u7b54\u6848\u533a\u95f4$ (l,r) $ \u4e00\u5b9a\u5728\u67d0\u4e24\u4e2a\u6807\u8bb0\u70b9\u4e4b\u95f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$l-1 $ \u5e94\u5f53\u662f\u4e00\u4e2a\u6709\u6807\u8bb0\u70b9\uff0c$r+1$ \u4e5f\u5e94\u662f\u4e00\u4e2a\u6709\u6807\u8bb0\u7684\u70b9\u3002\n\n\u8bc1\u660e\u5f88\u663e\u7136\uff0c\u5047\u5982\u53f3\u7aef\u70b9\u7684\u53f3\u4fa7\u6ca1\u6709\u6807\u8bb0\uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u4e00\u5b9a\u53ef\u4ee5\u7ee7\u7eed\u5411\u53f3\u5ef6\u4f38\u3002\u5de6\u7aef\u70b9\u540c\u7406\u3002\n\n\u5f80\u6570\u8f74\u4e0a\u589e\u52a0\u6807\u8bb0\u4e0d\u597d\u505a\uff0c\u8003\u8651\u4ece\u6570\u8f74\u4e0a\u62ff\u8d70\u6807\u8bb0\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u6807\u8bb0\u70b9\u90fd\u5728\u6570\u8f74\u4e0a\u65f6\u7684\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa\u7b54\u6848\u7684\u6700\u540e\u4e00\u884c\u3002\u5173\u4e8e\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u533a\u95f4$(l,r)$\u7684\u590d\u6742\u5ea6\u4e3a$O(n^2)$\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u80fd\u63a5\u53d7\u7684\u3002\u53d1\u73b0\u6bcf\u5f53\u6211\u4eec\u786e\u5b9a\u4e00\u4e2a\u5de6\u7aef\u70b9l\uff0c\u5219\u968f\u7740l\u7684\u589e\u5927\uff0cr\u662f\u5355\u8c03\u4e0d\u964d\u7684\u3002\u57fa\u4e8e\u8fd9\u4e00\u6027\u8d28\uff0c\u8003\u8651\u7528\u53cc\u6307\u9488\u626b\u4e00\u904d\uff0c$O(n)$\u7f8e\u6ecb\u6ecb\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4f9d\u6b21\u5220\u53bb\u6bcf\u4e00\u4e2a\u6807\u8bb0\uff0c\u5373\u5c06\u8fd9\u4e00\u6807\u8bb0\u7684\u6743\u503c\u8bbe\u4e3a$0$\uff0c\u540c\u65f6\u7edf\u8ba1\u5bf9\u5e94\u7684\u7b54\u6848\u3002\u7edf\u8ba1\u7b54\u6848\u7684\u65b9\u6cd5\u540c\u4e0a\u3002\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u5355\u6b21\u590d\u6742\u5ea6\u6700\u574f\u662f$O(n)$,\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u6807\u8bb0\u4e2a\u6570\u4e0d\u5927\u4e8ek\uff0c\u53d1\u73b0k\u5f88\u5c0f\uff0c\u8003\u8651\u66b4\u529b\u505a\u3002\u53ef\u4ee5\u53d1\u73b0\n\n- \u5220\u9664\u4e00\u4e2a\u6807\u8bb0\u70b9\u65f6\uff0c\u81f3\u591a\u53ea\u4f1a\u5f71\u54cd\u8fd9\u4e2a\u70b9\u5de6\u4fa7k\u4e2a\u548c\u53f3\u4fa7k\u4e2a\u70b9\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u5220\u9664\u65f6\uff0c\u4ee5$O(k)$\u7684\u590d\u6742\u5ea6\u7528\u53cc\u6307\u9488\u6765\u627e\u8fd9\u4e2a\u6807\u8bb0\u70b9\u7684\u5de6\u53f3\u80fd\u4e0d\u80fd\u4f5c\u4e3a\u7b54\u6848\u5373\u53ef\u3002\n\n\u7ee7\u7eed\u8003\u8651\u4f18\u5316\u3002\u5220\u9664\u4e00\u4e2a\u6807\u8bb0\uff0c\u6211\u4eec\u4e0d\u4ec5\u5220\u9664\u5b83\u7684\u6743\u503c\uff0c\u800c\u4e14\u5220\u9664\u8fd9\u4e2a\u6807\u8bb0\u7684\u5728\u6570\u7ec4\u5b58\u50a8\u4e2d\u7684\u4e0b\u6807\uff0c\u679a\u4e3e\u7aef\u70b9\u7684\u65f6\u5019\u76f4\u63a5\u8df3\u8fc7\u5b83\u3002\u6ca1\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u7aef\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\u3002\u5728\u5220\u9664\u6807\u8bb0\u65f6\uff0c\u53ea\u9700\u4fee\u6539\u5176\u524d\u9a71\u540e\u7ee7\u7684\u5173\u7cfb\u5373\u53ef\u3002\n\n\u6700\u540e\u9700\u8981\u7279\u5224\u4e00\u79cd\u60c5\u51b5\uff1a\u5220\u9664\u4e0a\u4e00\u4e2a\u6807\u8bb0\u70b9\u65f6\u7684\u7b54\u6848\u533a\u95f4\u4e3a$(l0,r0)$\uff0c\u5220\u9664\u5f53\u524d\u6807\u8bb0\u70b9\u7684\u7b54\u6848\u533a\u95f4\u4e3a$(l,r)$\uff0c\u4e24\u4e2a\u533a\u95f4\u4e0d\u662f\u5305\u542b\u5173\u7cfb\u3002\u8fd9\u65f6\u9700\u8981\u5c06\u5f53\u524d\u7684\u7b54\u6848\u53d6\u4e24\u8005\u4e2d\u8f83\u5927\u7684\u5373\u53ef\u3002\n\n\u5219\u603b\u590d\u6742\u5ea6\u4e3a$O(nk)$\n\n\nCode\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e+6+100;\nconst int inf = 0x7f7f7f7f;\nstruct Data{\n\tint x,a,tim;\n};\nint n,m,k;\nData opt[maxn];\nint tim[maxn];\nint ans[maxn];\nint pre[maxn],suc[maxn];\ninline int read(){\n\tint v=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-f; ch = getchar();}\n\twhile(ch>='0'&&ch<='9'){v=(v<<3)+(v<<1)+ch-'0';ch=getchar();}\n\treturn v*f;\n}\ninline bool cmp(Data x,Data y){\n\treturn x.x<y.x;\n}\nint main(){\n\tn=read();m=read();k=read();\n\tfor(register int i=1;i<=n;++i){\n\t\topt[i].x=read();opt[i].a=read();opt[i].tim = i;\n\t\tans[i] = -1;\n\t}\n\topt[n+1]=Data{-1,inf,0};\n\topt[n+2]=Data{m+1,inf,0};\n\tsort(opt+1,opt+n+3,cmp);\n\tfor(register int i=1;i<=n+2;++i) tim[opt[i].tim] = i;\n\tfor(register int l=1,r=1,cnt=0;r<=n+2;++r){\n\t\tcnt+=opt[r].a;\n\t\twhile(cnt>k){\n\t\t\tcnt-=opt[l++].a;\n\t\t\tif(l>r) break;;\n\t\t}\n\t\tif(k==0) ans[n] = max(ans[n],opt[r].x-opt[r-1].x-2);\n\t\telse ans[n]=max(ans[n],opt[r+1].x-opt[l-1].x-2);\n\t}\n\tfor(register int i=1;i<=n+2;++i){\n\t\tif(i!=1)pre[i] = i-1;\n\t\tsuc[i] = i+1;\n\t}\n\tfor(register int i=n-1;i>=1;--i){\n\t\tint t=tim[i+1];\n\t\topt[t].a=0;\n\t\tpre[suc[t]] = pre[t];\n\t\tsuc[pre[t]] = suc[t];\n\t\tint r=t,lim=t;\n\t\tfor(int p=0;p<=k+10;++p){\n\t\t\tr=max(pre[r],2);\n\t\t\tlim=min(suc[lim],n+2);\n\t\t}\n\t\tfor(register int l=r,cnt=0;r<=lim;r=suc[r]){\n\t\t\tcnt+=opt[r].a;\n\t\t\twhile(cnt>k){\n\t\t\t\tcnt-=opt[l].a;\n\t\t\t\tl=suc[l];\n\t\t\t}\n\t\t\tif(k==0) ans[i] = max(ans[i],opt[r].x-opt[pre[r]].x-2);\n\t\t\telse ans[i] = max(ans[i],opt[suc[r]].x-opt[pre[l]].x-2);\n\t\t}\n\t\tans[i]=max(ans[i+1],ans[i]);\n\t}\n\tfor(register int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1603001820,
        "uid": 218405,
        "name": "_CHO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6602 \u3010\u300cEZEC-2\u300d\u6570\u8f74\u3011"
    }
]