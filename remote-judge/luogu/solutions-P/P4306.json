[
    {
        "content": "\u611f\u8c22zjq\u5927\u4f6c\uff08\u6700\u697c\u4e0b\u90a3\u4f4d\uff09\u7ed9\u849f\u84bb\u8010\u5fc3\u7684\u8bb2\u89e3~~\uff08\u56e0\u4e3a\u6570\u7ec4\u5f00\u5c0f\uff0c\u6ee1\u5c4f\u7684\u82b1\u82b1\u7eff\u7eff\u8fd8\u6709TLE\uff09~~\n\n\u4e24\u79cd\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\uff0c\u5c31\u50cf\u662f\u697c\u4e0b\u6240\u8bf4\uff0c\u5148tarjan+\u7f29\u70b9\uff0c\u7136\u540e\u5728\u65b0\u7684\u56fe\u4e0a\u5efa\u4e00\u4e2a\u53cd\u5411\u56fe\uff0c\u540c\u65f6\u7528\u62d3\u6251\u6392\u5e8f\u4e0d\u65ad\u66f4\u65b0\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u591f\u5230\u8fbe\u7684\u5176\u4ed6\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u6700\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u82e5h[i][j]\u4e3a1\u5219ans\u52a0\u4e0a\u4e24\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6570\u4e4b\u79ef\n\n\n\u4e0a\u4ee3\u7801,\u5177\u4f53\u770b\u6ce8\u89e3\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<bitset>\n#include<string>\n#define fu(a,b,c) for(int a=b;a<=c;a++)\n#define fd(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\nconst int N=2050,M=4000500;\nint ver[M],Next[M],head[N];\nint vc[M],nc[M],hc[N],low[N],dfn[N],stack[N],c[N],k[N],t[N];\nbitset<N> h[N];\nbool v[N];\nint n,m,tot,num,cnt,tc,top,ans;\ninline void add(int x,int y)\n{\n    ver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\ninline void add_c(int x,int y)\n{\n    vc[++tc]=y,nc[tc]=hc[x],hc[x]=tc;\n}\nvoid tarjan(int x)//\u8dd1\u4e00\u8fb9tarjan\n{\n    low[x]=dfn[x]=++num;\n    stack[++top]=x,v[x]=1;\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(!dfn[y])\n        {\n            tarjan(y);\n            low[x]=min(low[x],low[y]);\n        }\n        else if(v[y]) low[x]=min(low[x],dfn[y]);\n    }\n    if(low[x]==dfn[x])\n    {\n        int y;\n        cnt++;\n        do{\n            y=stack[top--];v[y]=0;\n            c[y]=cnt;\n            k[cnt]++;\n        }while(x!=y);\n        h[cnt][cnt]=1;\n        //\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e00\u5b9a\u80fd\u591f\u5230\u8fbe\u81ea\u5df1\n    }\n}\nvoid solve()\n{\n//\u8dd1\u4e00\u8fb9\u62d3\u6251\u6392\u5e8f\n    queue<int> q;\n    fu(i,1,cnt)\n    if(!t[i]) q.push(i);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=hc[x];i;i=nc[i])\n        {\n            int y=vc[i];\n            h[y]|=h[x];\n            t[y]--;\n            if(!t[y]) q.push(y);\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    fu(i,1,n)\n    {\n        string s;\n        cin>>s;\n        fu(j,0,s.size()-1)\n        if(s[j]=='1') add(i,j+1);\n    }\n    fu(i,1,n)\n    if(!dfn[i]) tarjan(i);\n    fu(x,1,n)\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(c[x]!=c[y]) add_c(c[y],c[x]),t[c[x]]++;\n        //\u7f29\u70b9\uff0c\u8bb0\u5f97\u8981\u5efa\u7684\u662f\u53cd\u5411\u56fe\uff0c\u540c\u65f6\u8bb0\u5f55\u70b9\u7684\u5165\u5ea6\n    }\n    solve();\n    fu(i,1,cnt)\n    fu(j,1,cnt)\n    if(h[i][j]) ans+=k[i]*k[j];\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6574\u6570\u670932\u4f4d\uff0c\u6211\u4eec\u8bbeT=30\uff0c\u53ef\u4ee5\u628an\u4e2a\u70b9\u5206\u4e3an/T\u7ec4\uff0c\u6bcf\u4e00\u7ec4\u6709\u81f3\u591a30\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4f4d\u4e8e\u7b2ci/30\u7ec4\u7684\u7b2ci%30\u4f4d\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u53ef\u4ee5\u8868\u793a\u4e3a\u4e8c\u8fdb\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6b64\u65b9\u6cd5\u6765\u8868\u793a\u4e00\u4e2a\u70b9\u80fd\u5426\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\u3002\u6bd4\u65b9\u8bf4h[i]=100110\uff08\u4e8c\u8fdb\u5236\uff09\uff0c\u8868\u793a\u8fd9\u4e00\u4e2a\u70b9\u80fd\u591f\u5230\u8fbe\u70b91,2,4\n\n\u6211\u4eec\u7528h[i][j/30]\u8868\u793a\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u5426\u5230\u8fbe\u6bcf\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\u3002\n```\nif(h[i][j/30]&1<<(j%30)) ans+=k[i];\n```\n\u5176\u4e2di\u4ee3\u8868\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7f16\u53f7\uff0cj\u4ee3\u8868\u70b9\u7684\u7f16\u53f7\uff0ck[i]\u4ee3\u8868\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u5171\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u80fd\u591f\u5230\u8fbe\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u7d2f\u52a0\u4e0a\u5b83\u7684\u70b9\u6570\n\n\u5269\u4e0b\u7684\uff0c\u5c31\u662ftarjan\u7f29\u70b9\u518d\u5efa\u53cd\u56fe\u62d3\u6251\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u4e2d\u5df2\u8bf4\u660e\uff0c\u4e0d\u518d\u8d58\u8ff0\n\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define fu(a,b,c) for(int a=b;a<=c;a++)\n#define fd(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\nconst int N=2050,M=4000500,T=30;\nint ver[M],Next[M],head[N];\nint vc[M],nc[M],hc[N],low[N],dfn[N],stack[N],c[N],k[N],t[N];\nint h[N][N/T];\nbool v[N];\nint n,m,tot,num,cnt,tc,top,ans;\ninline void add(int x,int y)\n{\n    ver[++tot]=y,Next[tot]=head[x],head[x]=tot;\n}\ninline void add_c(int x,int y)\n{\n    vc[++tc]=y,nc[tc]=hc[x],hc[x]=tc;\n}\nvoid tarjan(int x)\n{\n    low[x]=dfn[x]=++num;\n    stack[++top]=x,v[x]=1;\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(!dfn[y])\n        {\n            tarjan(y);\n            low[x]=min(low[x],low[y]);\n        }\n        else if(v[y]) low[x]=min(low[x],dfn[y]);\n    }\n    if(low[x]==dfn[x])\n    {\n        int y;\n        cnt++;\n        do{\n            y=stack[top--];v[y]=0;\n            c[y]=cnt;\n            k[cnt]++;\n            h[cnt][y/T]|=1<<(y%T);\n            //\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u591f\u5230\u8fbe\u54ea\u4e9b\u70b9\uff0c\u8bb0\u5f55\n        }while(x!=y);\n    }\n}\nvoid solve()\n{\n    queue<int> q;\n    fu(i,1,cnt)\n    if(!t[i]) q.push(i);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=hc[x];i;i=nc[i])\n        {\n            int y=vc[i];\n            fu(j,0,n/T)\n            h[y][j]|=h[x][j];\n            t[y]--;\n            if(!t[y]) q.push(y);\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    fu(i,1,n)\n    {\n    \tstring s;\n    \tcin>>s;\n    \tfu(j,0,n-1)\n    \tif(s[j]=='1') add(i,j+1);\n    }\n    fu(i,1,n)\n    if(!dfn[i]) tarjan(i);\n    fu(x,1,n)\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(c[x]!=c[y]) add_c(c[y],c[x]),t[c[x]]++;\n    }\n    solve();\n    fu(i,1,n)\n    {\n        int l=i/T,r=1<<(i%T);\n        fu(j,1,cnt)\n        if(h[j][l]&r) ans+=k[j];\n        //\u5224\u65ad\u6bcf\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u5426\u5230\u8fbe\u67d0\u4e2a\u70b9\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1528513750,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4306 \u3010[JSOI2010]\u8fde\u901a\u6570\u3011"
    },
    {
        "content": "\n## Solution\n\n\u9898\u89e3\u5728\u535a\u5ba2[\u98df\u7528](https://www.cnblogs.com/YoungNeal/p/9127102.html)\u6548\u679c\u66f4\u4f73\u54e6~\n\n~~\u4e0b\u9762\u9898\u89e3\u90fd\u4e0d\u662f\u6b63\u89e3\u8bf6\u3002\u3002\u4ea4\u5230BZOJ\u4e0a\u4f1aWA\u5230\u6b7b~~\n\n $Tarjan$ \u7f29\u70b9 $+$ \u62d3\u6251\u6392\u5e8f $+$ $bitset$ \u4f18\u5316\u72b6\u538b\n\n\u663e\u7136\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u6211\u4eec\u90fd\u8981\u6c42\u51fa\u5728\u65b0\u56fe\u4e0a\u5b83\u80fd\u5230\u8fbe\u54ea\u4e9b\u70b9\u3002\n\n\u5982\u4f55\u6c42\u5462\uff1f\n\n\u6cd5\u4e00\uff1a $dfs$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u627e\u4e00\u4e0b\u5b83\u8fde\u51fa\u53bb\u7684\u8fb9\u80fd\u5230\u8fbe\u54ea\u4e9b\u8054\u901a\u5757\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002~~(\u53ea\u662f\u53e3\u80e1\u4e00\u4e0b\u6ca1\u6709\u5199\u8fd9\u79cd\u65b9\u6cd5\u5982\u679c\u5199\u4e0d\u51fa\u6765\u522b\u627e\u6211)~~\n\n\u6cd5\u4e8c\uff1a\u6211\u4eec\u5b9a\u4e49\u6570\u7ec4 $f[i][j]$ \u8868\u793a\u80fd\u5426\u4ece\u7b2c $i$ \u4e2a\u8fde\u901a\u5206\u91cf\u5230\u8fbe\u7b2c $j$ \u4e2a\u8fde\u901a\u5206\u91cf\u3002\u56e0\u4e3a\u503c\u53ea\u80fd\u4e3a $0/1$\uff0c\u6211\u4eec\u7528 $bitset$ \u6765\u72b6\u538b\u7b2c\u4e8c\u7ef4\u3002\u56e0\u4e3a $f[j]=or(f[i]),j\\;can\\;go\\;to\\;i$\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u65b0\u56fe\u4e0a\u5efa\u7acb\u4e00\u5f20\u53cd\u56fe\uff0c\u62d3\u6251\u6392\u5e8f\uff0c\u6309\u7167\u62d3\u6251\u5e8f\u5373\u53ef\u6c42\u51fa\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u54ea\u4e9b\u70b9\u3002\u590d\u6742\u5ea6 O(n^2/32)\u3002\n\n## Code\n\n```cpp\n#include<queue>\n#include<bitset>\n#include<cstdio>\n#include<cctype>\n#include<iostream>\n#define N 2005\n#define min(A,B) ((A)<(B)?(A):(B))\n\nint ans;\nchar ch[N];\nbool in[N];\nint n,cnt,sum,tot;\nint dfn[N],low[N];\nstd::bitset<N> f[N];\nstd::queue<int> topo;\nint belong[N],deg[N];\nint head[N],head2[N];\nint stk[N],top,sze[N];\n\nstruct Edge{\n    int to,nxt;\n}edge[N*N],edge2[N*N];\n\nvoid add(int x,int y){\n    edge[++cnt].to=y;\n    edge[cnt].nxt=head[x];\n    head[x]=cnt;\n}\n\nvoid add2(int x,int y){\n    edge2[++cnt].to=y;\n    edge2[cnt].nxt=head2[x];\n    head2[x]=cnt;\n}\n\nint getint(){\n    int x=0;char ch=getchar();\n    while(!isdigit(ch)) ch=getchar();\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x;\n}\n\nvoid tarjan(int now){\n    dfn[now]=low[now]=++sum;\n    stk[++top]=now;in[now]=1;\n    for(int i=head[now];i;i=edge[i].nxt){\n        int to=edge[i].to;\n        if(!dfn[to]){\n            tarjan(to);\n            low[now]=min(low[now],low[to]);\n        }\n        else if(in[to])\n            low[now]=min(low[now],dfn[to]);\n    }\n    if(low[now]==dfn[now]){\n        int y; tot++;\n        do{\n            y=stk[top--];\n            belong[y]=tot;\n            sze[tot]++;\n            in[y]=0;\n        }while(y!=now);\n    }\n}\n\nsigned main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",ch);\n        for(int j=0;j<n;j++){\n            if(ch[j]=='0') continue;\n            add(i,j+1);\n        }\n    }\n    cnt=0;\n    for(int i=1;i<=n;i++){\n        if(!dfn[i])\n            tarjan(i);\n    }\n    for(int x=1;x<=n;x++){\n        for(int i=head[x];i;i=edge[i].nxt){\n            int to=edge[i].to;\n            if(belong[x]==belong[to]) continue;\n            deg[belong[x]]++;\n            add2(belong[to],belong[x]);\n        }\n    }\n    for(int i=1;i<=tot;i++)\n        f[i][i]=1;\n    for(int i=1;i<=tot;i++){\n        if(!deg[i])\n            topo.push(i);\n    }\n    while(topo.size()){\n        int u=topo.front();topo.pop();\n        for(int i=head2[u];i;i=edge2[i].nxt){\n            int to=edge2[i].to;\n            deg[to]--;\n            f[to]|=f[u];\n            if(!deg[to])\n                topo.push(to);\n        }\n    }\n    for(int i=1;i<=tot;i++){\n        for(int j=1;j<=tot;j++){\n            if(f[i][j])\n                ans+=sze[i]*sze[j];\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1527948124,
        "uid": 56778,
        "name": "YoungNeal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4306 \u3010[JSOI2010]\u8fde\u901a\u6570\u3011"
    },
    {
        "content": "# P4306 \u9898\u89e3\n## \u9898\u610f\n\u6c42\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u901a\u8fc7\u6709\u5411\u8fb9\u53ef\u4ee5\u5230\u8fbe\u7684\u8282\u70b9\u6570\u4e4b\u548c\u3002\n## \u89e3\u7b54\n### \u89e3\u6cd5$1$\n\u6c42\u8282\u70b9\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u6240\u6709\u8282\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u8282\u70b9\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u6700\u540e\u52a0\u4e00\u4e0b\u3002  \n\u55ef\uff1f\u8fd9\u4e0d\u5c31\u662f$Floyd$\u5417\u3002\u7528$bitset$\u4f18\u5316\u4e00\u4e0b\uff0c\u5e94\u8be5\u53ef\u4ee5\u9a97\u5230\u4e0d\u5c11\u5206\u6570\u5427\u3002  \n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define N 2005\nusing namespace std;\n\ntypedef long long ll;\nll n,ans = 0;\nbitset<N>can_reach[N]; // \u53ef\u4ee5\u5f00\u4e00\u4e2abool\u6570\u7ec4\u4ee3\u66ff\uff0c\u4f46\u662f\u7a7a\u95f4\u4e0a\u4e0d\u4f18\n\nvoid prepare_floyd()\n{\n\tfor (ll i = 1; i <= n; i ++)\n\t\tfor (ll j = 1; j <= n; j ++)\n\t\t\tif (can_reach[j][i]) can_reach[j] |= can_reach[i]; // \u80fd\u4ecej\u5230i\n}\n\nvoid solve_floyd()\n{\n\tfor (ll i = 1; i <= n; i ++)\n\t\tfor (ll j = 1; j <= n; j ++)\n\t\t\tif (can_reach[i][j]) ans ++; // \u80fd\u5230\u8fbe\n}\n\nvoid init()\n{\n\tcin >> n;\n\tfor (ll i = 1; i <= n; i ++)\n\t{\n\t\tfor (ll j = 1; j <= n; j ++)\n\t\t{\n\t\t\tchar c; cin >> c;\n\t\t\tif (c == '1') can_reach[i][j] = 1; // i\u53ef\u4ee5\u5230\u8fbej\n\t\t}\n\t\tcan_reach[i][i] = 1; // i\u53ef\u4ee5\u5230\u8fbei\n\t}\n}\n\nvoid putans() { cout << ans << endl; }\n\nvoid _main(){\n\tinit();\n\tprepare_floyd();\n\tsolve_floyd();\n\tputans();\n}\n\nint main()\n{\n\t_main();\n\treturn 0;\n}\n```\n\n\u7136\u540e\u6211\u4eec\u4ea4\u4e0a\u53bb\u4e00\u53d1\uff0c\u6211\u7684\u5929[AC](https://www.luogu.com.cn/record/36120987)\u4e86  \n~~\u5b8c\u7ed3\u6492\u82b1~~  \n\n\u65e2\u7136\u6709\u89e3\u6cd5$1$\uff0c\u90a3\u4e5f\u6709\u89e3\u6cd5$2$\u554a~\n\n### \u89e3\u6cd5$2$\n\u8fd9\u4e2a\u89e3\u6cd5\u5c31\u662f\u5927\u591a\u6570\u9898\u89e3\u91cc\u63d0\u5230\u7684$tarjan$**\u7f29\u70b9**\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a**\u6ca1\u6709\u73af**\u7684\u539f\u9898\uff0c\u90a3\u4e48\u76f4\u63a5\u641c\u4e00\u904d\u5b8c\u4e8b\uff0c\u975e\u5e38\u7b80\u5355\u3002  \n\u4f46\u8fd9\u9898\u6bd4\u8f83\u9ebb\u70e6\u7684\u5730\u65b9\u662f**\u6709\u73af**\uff0c\u6709\u73af\u4f1a\u4f7f\u641c\u7d22\u88ab\u5361\uff0c\u800c\u6211\u4eec\u9664\u4e86\u641c\u7d22\u4ee5\u5916\u6ca1\u6709\u5176\u4ed6\u5f88\u597d\u7684\u60f3\u6cd5\u3002  \n\n\u6240\u4ee5\u6211\u4eec\u8981**\u60f3\u65b9\u8bbe\u6cd5\u4f7f\u641c\u7d22\u53ef\u884c**\u3002\n\n\u5e76\u4e14\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u628a\u73af\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u6709\u6743\u503c\u7684**\u80d6\u70b9**\uff08\u5373\u628a\u8fd9\u4e2a\u70b9\u7b97\u4f5c\u591a\u4e2a\u70b9\u634f\u4e00\u8d77\uff09\uff0c\u7b54\u6848**\u4e0d\u4f1a\u6539\u53d8**\u3002\n\n\u8fd9\u2026\u2026$tarjan$\u7f29\u70b9\uff01\u628a\u4e00\u4e2a\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\uff01\u7136\u540e\u62d3\u8865\u6392\u5e8f\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u62d3\u8865\u6392\u5e8f\u7684\u4ee3\u7801\uff1a\n```cpp\nvoid topo_sort()\n{\n    for (ll i = 1; i <= block_counter; i ++)\n        f[i][i] = 1; // i to i\n    queue<ll> q;\n    for (ll i = 1; i <= block_counter; i ++)\n        if (!in[i]) q.push(i); // push\n    while (!q.empty()){\n        ll u = q.front(); q.pop(); // get front\n        for (ll i = 0; i < G[u].size(); i++){\n            ll v = G[u][i]; f[v] |= f[u];\n            if (!(--in[v])) q.push(v);\n        }\n    }\n}\n```\n\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/36122463)\n\n\u5b8c\u7ed3\u6492\u82b1~\u987a\u4fbf\u6c42\u8d5e",
        "postTime": 1596182789,
        "uid": 291706,
        "name": "GspTools",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4306 \u3010[JSOI2010]\u8fde\u901a\u6570\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u5f3a\u7206\u4e86\u7684\u7c7b\u4f3c\u5206\u5757\u7684\u72b6\u538b\u505a\u6cd5\uff08\u597d\u5427\u6211\u627f\u8ba4\u601d\u8def\u6ca1\u4ec0\u4e48\u522b\u81f4\u7684\uff0c\u4f46\u662f\u8d77\u7801\u8fd9\u4efd\u4ee3\u7801\u4e5f\u662f\u6709\u4f18\u5316\u7684\u3002\uff09\n\n\n```cpp\n#include<iostream>  \n#include<cstdio>  \n#include<cstdlib>  \n#include<cmath>  \n#include<cstring>  \n#include<algorithm>  \nusing namespace std;  \nconst int M=2100;  \nint n,ans,block,num,pat;  \nint top,tim,cnt,patt;\nint head[M],h[M],r[M];\nint dfn[M],low[M];\nint stk[M],in[M];  \nint blg[M],has[M];\nint mark[M][M];  \nchar ch[M];\nstruct edge{\n    int to,next;\n}e[M*M],ed[M*M];  \ninline void add(int u,int v){\n\t++pat; e[pat].to=v; e[pat].next=head[u]; head[u]=pat;\n}\n\nvoid tarjan(int u)  //\u7f29\u70b9\n{  \n    dfn[u]=low[u]=++tim;  \n    stk[++top]=u, in[u]=1;  \n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(!dfn[v])\n            tarjan(v),\n            low[u]=min(low[u],low[v]);\n        else if(in[v])\n            low[u]=min(low[u],dfn[v]);  \n    }\n    if(low[u]==dfn[u]){  \n        int now; ++cnt;  \n        do{  \n            now=stk[top--];  \n            blg[now]=cnt;  \n            ++has[cnt];  \n            in[now]=0;  \n        }while(now!=u);  \n    }  \n}  \n  \ninline void addedge(int u,int v){  //\u65b0\u56fe\u5efa\u8fb9\n\t++patt; ed[patt].to=v; ed[patt].next=h[u]; h[u]=patt;\n}\ninline void rebuild()  \n{  \n    for(int u=1;u<=n;++u)\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(blg[u]!=blg[v])\n        \taddedge(blg[v] , blg[u]),\n\t\t\t++r[blg[u]];  //\u53cd\u5411\u5efa\u56fe\u7684\u64cd\u4f5c\n    }   \n}  \n\nint main()  \n{  \n    scanf(\"%d\",&n);\n\tblock=30; num=n/block+1;  //\u7c7b\u4f3c\u5206\u5757\n    for(int i=1;i<=n;++i){  \n        scanf(\"%s\",ch+1);  \n    \tfor(int j=1;j<=n;++j)\n        if(ch[j]-'0') add(i , j);\n\t}   \n    for(int i=1;i<=n;++i)  \n        if(!dfn[i]) tarjan(i);  \n    rebuild(); top=0;   \n    for(int i=1;i<=n;++i)  //\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5185\u7684\u70b9\u8fdb\u884c\u8bb0\u5f55\n        mark[blg[i]][i/block+1]|=(1<<(i%block));  \n    for(int i=1;i<=cnt;++i)  //\u4ece\u5165\u5ea6\u4e3a\u96f6\u7684\u8054\u901a\u5757\u5f00\u59cb\u64cd\u4f5c\n        if(!r[i]) stk[++top]=i;  \n    while(top){  \n        int u=stk[top]; --top;  \n        for(int i=h[u];i;i=ed[i].next){  \n            int v=ed[i].to;  \n            for(int j=1;j<=num;++j)  //\u7ed9\u6307\u5411\u7684\u8054\u901a\u5757\u52a0\u4e0a\u81ea\u5df1\u5df2\u6709\u7684\u4fe1\u606f\uff08\u5206\u5757\u52a0\uff09\n                mark[v][j]|=mark[u][j];   \n            if(--r[v]==0) stk[++top]=v;  \n        }  \n    }  \n    for(int i=1;i<=cnt;++i)  //\u6bcf\u4e2a\u8fde\u901a\u5757\u6240\u80fd\u901a\u5230\u7684\u70b9*\u8054\u901a\u5757\u5185\u70b9\u6570\uff0c\u8ba1\u5165\u7b54\u6848\n    for(int j=1;j<=n;++j)  \n    if((mark[i][j/block+1])&(1<<(j%block)))\n        ans+=has[i];  \n    printf(\"%d\\n\",ans);  \n    return 0;  \n}\n```",
        "postTime": 1528108479,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4306 \u3010[JSOI2010] \u8fde\u901a\u6570\u3011"
    }
]