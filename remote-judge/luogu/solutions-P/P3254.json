[
    {
        "content": "/\\*\n\u7f51\u7edc\u6d41\u7684\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\n\n\u53ef\u4ee5\u76f4\u89c2\u7684\u60f3\u5230\uff0c\u4e8c\u5206\u56fe\u7684\u5de6\u8fb9\u662f\u5355\u4f4d\uff0c\u53f3\u8fb9\u662f\u684c\u5b50\n\n\u7531\u4e8e\u6211\u4eec\u7684\u7279\u6b8a\u9650\u5236  \u6bcf\u4e2a\u5355\u4f4d\u53ea\u80fd\u5728\u4e00\u4e2a\u684c\u5b50\u5750\u4e00\u4e2a\u4eba\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u628a\u6bcf\u4e2a\u5355\u4f4d\u5411\u5404\u4e2a\u684c\u5b50\u8fde\u4e00\u9053\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u7531\u6e90\u70b9\u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e0a \u8fde\u4e0a\u5355\u4f4d\u4eba\u6570\u7684\u8fb9\n\n\u7531\u6bcf\u4e2a\u5706\u684c\u5411\u6c47\u70b9\u8fde\u4e0a \u5706\u684c\u4eba\u6570\u7684\u8fb9\n\n\u7136\u540e\u8dd1\u4e00\u4e0b\u6700\u5927\u5339\u914d  \u5982\u679c\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u6240\u6709\u5355\u4f4d\u7684\u4eba\u6570\u548c\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5     \u5b8c\u5168\u5b89\u6392  \u5426\u5219\u4e0d\u80fd\u5b8c\u5168\u5b89\u6392\n\n\u8fd9\u4e2a\u9898\u76ee\u7684\u7edf\u8ba1\u7b54\u6848\u8981\u6bd4\u524d\u4e24\u4e2a\u597d\u5f04\u4e00\u70b9 \u679a\u4e3e\u5373\u53ef\n\n\\*/\n    \n    \n    \n    \n    \n    \n    \n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<iostream>\n    #include<cstring>\n    #define INF 0x3e3e3e3e\n    #include<queue>\n    #define MAXN 100010\n    using namespace std;\n    struct Edge{\n        int to;\n        int nxt;\n        int cup;\n        int flow;\n    }edge[MAXN << 1];\n    int deep[MAXN];\n    int head[MAXN];\n    int cnt = 1,ans = 0;\n    int n,m,s,t;\n    queue<int>q; \n    int read()\n    {\n        int nm = 0,f = 1;\n        char c = getchar();\n        for(;!isdigit(c);c = getchar())if(c == '-')f = -1;\n        for(;isdigit(c);c = getchar())nm = nm * 10 + c - '0';\n        return nm * f;\n    }\n    void push(int vi,int vj,int wei)\n    {\n        cnt++;edge[cnt].to = vj;edge[cnt].cup = wei;edge[cnt].nxt = head[vi];head[vi] = cnt;\n        cnt++;edge[cnt].to = vi;edge[cnt].nxt = head[vj];head[vj] = cnt;\n    }\n    bool bfs(int be,int ed)\n    {\n        while(!q.empty()) q.pop();\n        memset(deep,0,sizeof(deep));\n        deep[be] = 1;\n        q.push(be);\n        while(!q.empty())\n        {\n            int op = q.front();\n            q.pop();\n            for(int i = head[op]; i; i = edge[i].nxt)\n            {\n                int vj = edge[i].to;\n                if(deep[vj] || edge[i].cup <= edge[i].flow)continue;\n                deep[vj] = deep[op] + 1;\n                q.push(vj);\n                if(vj == ed)\n                    return true;\n            }\n        }\n        return false;\n    }\n    int dfs(int now,int ed,int flow)\n    {\n        if(flow == 0 || now == ed)return flow;\n        int tot = 0,f;\n        for(int i = head[now];i;i = edge[i].nxt)\n        {\n            int vj = edge[i].to;\n            if(deep[vj] != deep[now] + 1)continue;\n            int op = min(edge[i].cup - edge[i].flow,flow);\n            if(f = dfs(vj,ed,op))\n            {\n                edge[i].flow += f;\n                edge[i ^ 1].flow -= f;\n                tot += f;\n                flow -= f;\n            }\n            if(flow == 0)break;\n        }\n        if(tot == 0)deep[now] = 0;\n        return tot;\n    }\n    void Dinic(int be,int ed)\n    {\n        while(bfs(be,ed))\n            ans -= dfs(be,ed,INF);\n    }\n    int main()\n    {\n        n = read();m = read();s = n + m + 1;t = s + 1;\n        for(int i = 1;i <= n;i++)\n        {\n            for(int j = 1;j <= m;j++)\n            {\n                push(i,j + n,1);\n            }\n        }\n        for(int i = 1;i <= n;i++)\n        {\n            int op = read();\n            push(s,i,op);\n            ans += op;\n        }\n        for(int j = 1;j <= m;j++)\n        {\n            int op = read();\n            push(j + n,t,op);\n        }\n        Dinic(s,t);\n        if(ans == 0){\n            printf(\"1\\n\");\n            for(int i = 1;i <= n;i++)\n            {\n                for(int j = head[i];j;j = edge[j].nxt)\n                {\n                    int vj = edge[j].to;\n                    if(vj != s && edge[j].flow)\n                    {\n                        printf(\"%d \",edge[j].to - n);\n                    }\n                }\n                printf(\"\\n\");\n            }\n        }\n        else{\n            printf(\"0\\n\");\n        }\n        return 0;\n}\n```",
        "postTime": 1514121592,
        "uid": 39865,
        "name": "fastle",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u6211\u611f\u89c9\u8fd9\u662f\u6211\u505a\u7684\u6700\u8f7b\u677e\u7684\u7f51\u7edc\u6d41\u4e86\u3002\u3002\u3002\n\n\u5f88\u5bb9\u6613\u770b\u51fa\u5355\u4f4d\u4e0e\u684c\u7684\u5173\u7cfb\n\n\u628a\u4eba\u770b\u6210\u6d41\u91cf\n\n\u6240\u4ee5\u628a\u6e90\u70b9\u4e0e\u6bcf\u4e2a\u5355\u4f4d\u8fde\u8fb9\n\n\u5bb9\u91cf\u4e3a\u5355\u4f4d\u7684\u4eba\u6570\n\n\u6bcf\u5f20\u684c\u4e0e\u6c47\u70b9\u8fde\u8fb9\n\n\u5bb9\u91cf\u4e3a\u6bcf\u5f20\u684c\u7684\u5bb9\u91cf\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5355\u4f4d\u6bcf\u6709\u4e24\u4e2a\u4eba\u5750\u4e00\u5f20\u684c\n\n\u6240\u4ee5\u6bcf\u4e2a\u5355\u4f4d\u5411\u6bcf\u4e2a\u684c\u8fde\u8fb9\n\n\u5bb9\u91cf\u4e3a1\n\n\u8dd1\u6700\u5927\u6d41\n\n\u770b\u6700\u5927\u6d41\u7b54\u6848\u662f\u5426=\u603b\u4eba\u6570\n\n\u7b49\u8f93\u51fa1\u4e0d\u7b49\u8f93\u51fa0\n\n\u81f3\u4e8e\u65b9\u6848\n\n\u904d\u5386\u6bcf\u4e2a\u5355\u4f4d\n\n\u770b\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u662f\u5426\u662f\u5f20\u684c\u5b50\u5e76\u6d41\u6ee1\u4e86\n\n\u662f\u5c31\u6807\u8bb0\n\n\u6700\u540e\u904d\u5386\u6bcf\u4e2a\u5355\u4f4d\u6bcf\u4e2a\u4eba\u5faa\u73af\u8f93\u51fa\u5c31\u597d\u4e86\n\n\u4e0d\u7528\u62c6\u70b9\u3001\u4e0d\u7528\u5f27\u4f18\u5316\u3001\u4e0d\u7528\u4e8c\u5206\u7b54\u6848\u3001\u4e0d\u7528xjb\u5efa\u56fe\n\n\u8fd9\u7b80\u76f4\u5c31\u662f\u7f51\u7edc\u6d41\u4e2d\u7684\u4e00\u80a1\u6e05\u6d41\u554a\n\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\nusing namespace std;\nconst int INF=1e8,maX=151,mAX=301,MAX=5000001,Max=10001,t=10000;\nstruct p{\n    int x,y,dis;\n}c[MAX];\nint m,n,num,TOT,KING;\nint h[Max],d[Max],r[maX];\nbool use[mAX];\nbool rou[maX][mAX];\nvoid add(int x,int y,int dis)\n{\n    c[num].x=h[y];c[num].y=x;c[num].dis=0;h[y]=num++;\n    c[num].x=h[x];c[num].y=y;c[num].dis=dis;h[x]=num++;\n}\nbool bfs()\n{\n    queue<int> qu;\n    qu.push(0);\n    memset(d,0,sizeof(d));\n    d[0]=1;\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(c[i].dis&&!d[c[i].y])\n          {\n              d[c[i].y]=d[tt]+1;\n              qu.push(c[i].y);\n          }\n    }\n    return d[t];\n}\nint dfs(int x,int dix)\n{\n    if(x==t||!dix) return dix;\n    int sum=0;\n    for(int i=h[x];i;i=c[i].x)\n      if(d[c[i].y]==d[x]+1&&c[i].dis)\n      {\n          int dis=dfs(c[i].y,min(c[i].dis,dix));\n          if(dis)\n          {\n              sum+=dis;\n              dix-=dis;\n              c[i].dis-=dis;\n              c[i^1].dis+=dis;\n              if(!dix) break;\n        }\n      }\n    if(!sum) d[x]=-1;\n    return sum;\n}\nint dinic()\n{\n    int tot=0;\n    while(bfs())\n    tot+=dfs(0,INF);\n    return tot;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n      {\n          scanf(\"%d\",&r[i]);\n          add(0,i,r[i]);\n          for(int j=1;j<=n;j++)\n            add(i,j+m,1);\n          TOT+=r[i];\n      }\n    //add(0,s,TOT);\n    //KING=num-1;\n    for(int i=1;i<=n;i++)\n      {\n          int x;\n          scanf(\"%d\",&x);\n          add(i+m,t,x);\n      }\n    if(dinic()==TOT) printf(\"1\\n\");\n    else\n    {\n        printf(\"0\");\n        return 0;\n    }\n    for(int j=1;j<=m;j++)\n      for(int i=h[j];i;i=c[i].x)\n        if(c[i].y>=1+m&&c[i].y<=n+m&&!c[i].dis)\n        rou[j][c[i].y-m]=1;\n    for(int i=1;i<=m;i++)\n      {\n          memset(use,0,sizeof(use));\n          for(int j=1;j<=r[i];j++)\n            for(int k=1;k<=n;k++)\n              if(!use[k]&&rou[i][k])\n              {\n                  use[k]=1;\n                  printf(\"%d \",k);\n                  break;\n            }\n        printf(\"\\n\");\n      }\n    return 0;\n}\n```",
        "postTime": 1514121424,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u7f51\u7edc\u6d41\u5927\u6c34\u9898~~\n\n\u4e09\u6b65\u8d70\uff1a\n\n1.\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u4e3a\u5355\u4f4d\u4eba\u6570\u7684\u8fb9\n\n2.\u6bcf\u4e2a\u5355\u4f4d\u5411\u6bcf\u4e2a\u684c\u5b50\u8fde\u4e00\u6761\u4e3a1\u7684\u8fb9(\u540c\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u684c\u5b50\u4e0a)\n\n3.\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u6bcf\u4e2a\u684c\u5b50\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u4e3a\u684c\u5b50\u5bb9\u91cf\u7684\u8fb9\n\n\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u5982\u679c\u6700\u5927\u6d41\u91cf\u7b49\u4e8e\u6240\u6709\u5355\u4f4d\u4eba\u6570\u4e4b\u548c\uff0c\u5219\u5b58\u5728\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u90a3\u4e48\u600e\u4e48\u8f93\u51fa\u8def\u5f84\u5462\uff1f\n\n\u4ece\u6bcf\u4e2a\u5355\u4f4d\u51fa\u53d1\u7684\u6240\u6709\u6ee1\u6d41\u8fb9\u6307\u5411\u7684\u684c\u5b50\u5c31\u662f\u8be5\u5355\u4f4d\u4eba\u5458\u7684\u5b89\u6392\u60c5\u51b5\n\n\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int inf=1e9;\nint n,m,x,y,z,s,t,ans,d[10005],sum;\nstruct node{\n\tint next,to,w;\n}a[500000];\nint cnt=1,head[10005],cur[10005];\nint r[10000],c[10000],vis[10000];\nqueue <int> q;\nvoid add(int x,int y,int dis)\n{\n\ta[++cnt].next=head[x];\n\ta[cnt].to=y;\n\ta[cnt].w=dis;\n\thead[x]=cnt;\n}\nbool bfs(int s,int t) \n{\n\tmemset(d,0x7f,sizeof(d));\n\twhile(!q.empty()) q.pop();\n\tfor(int i=0;i<=t;i++) cur[i]=head[i];\n\td[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=a[i].next)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tif(d[v]>inf&&a[i].w) \n\t\t\t{\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tif(d[t]<inf) return true;\n\telse return false;\n}\nint dfs(int now,int t,int limit)\n{\n\tif(!limit||now==t) return limit;\n\tint flow=0,f;\n\tfor(int i=cur[now];i;i=a[i].next)\n\t{\n\t\tcur[now]=i;\n\t\tint v=a[i].to;\n\t\tif(d[v]==d[now]+1&&(f=dfs(v,t,min(limit,a[i].w))))\n\t\t{\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\ta[i].w-=f;\n\t\t\ta[i^1].w+=f;\n\t\t\tif(!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\ts=0;t=n+m+1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t    scanf(\"%d\",&r[i]);\n\t    sum+=r[i];\n\t    add(0,i,r[i]); //\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\uff0c\u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u4e3a\u5355\u4f4d\u4eba\u6570\u7684\u8fb9\n\t    add(i,0,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t    scanf(\"%d\",&c[i]);\n\t    add(i+m,t,c[i]); //\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u6bcf\u4e2a\u684c\u5b50\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u4e3a\u684c\u5b50\u5bb9\u91cf\u7684\u8fb9\n\t    add(t,i+m,0);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t    for(int j=1;j<=n;j++)\n\t        add(i,j+m,1),add(j+m,i,0); //\u6bcf\u4e2a\u5355\u4f4d\u5411\u6bcf\u4e2a\u684c\u5b50\u8fde\u4e00\u6761\u4e3a1\u7684\u8fb9\n\twhile(bfs(s,t)) ans+=dfs(s,t,inf); //\u6700\u5927\u6d41\u6a21\u677f\u4e0d\u5fc5\u591a\u8bf4\u4e86\n\tif(ans==sum) //\u7b54\u6848\u7b49\u4e8e\u603b\u4eba\u6570\u624d\u6709\u89e3\n\t{\n\t    printf(\"1\\n\");\n\t    for(int l=1;l<=m;++l) //\u5bfb\u627e\u65b9\u6848\n        {\n            for(int i=head[l];i;i=a[i].next)\n            if(a[i].to>m&&a[i].to<=m+n&&!a[i].w)\n                printf(\"%d \",a[i].to-m);\n            printf(\"\\n\");\n        }\n\t}\n\telse printf(\"0\\n\"); \n\treturn 0;\n}\n```",
        "postTime": 1531213128,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u7b2c\u4e00\u7bc7\u9898\u89e3"
    },
    {
        "content": "\u6211\u4e5f\u6765\u53d1\u8d2a\u5fc3\u3002\n\n\u628a\u684c\u5b50\u5927\u5c0f\u548c\u961f\u4f0d\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u7684\u5750\u5ea7\u4f4d\uff0c\u6700\u540e\u5728\u6309\u7167\u961f\u4f0d\u7f16\u53f7\u518d\u6392\u56de\u6765\u3002\u8bc1\u660e\u7684\u8bdd\u6709\u4eba\u8bf4\u4e0d\u4f1a\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u961f\u4f0d\u8d8a\u5927\u8d8a\u4e0d\u5bb9\u6613\u6ee1\u8db3\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8ba9\u5b83\u6ee1\u8db3\uff0c\u4e00\u4e2a\u684c\u5b50\u4e00\u6b21\u53ea\u5b89\u4e00\u4e2a\u4eba\uff0c\u6ee1\u4eba\u7684\u8bdd\u5c31\u8df3\u8fc7\u90a3\u5f20\u684c\u5b50\u5f80\u540e\u6392\uff0c\u5982\u679c\u8bf4\u5728\u6392\u5ea7\u6b21\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u76f4\u6709\u4e00\u4e2a\u4eba\uff08\u4e5f\u53ef\u80fd\u662f\u591a\u4e2a\uff09\u6ca1\u5730\u5750\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u76f4\u5230\u6700\u540e\u4e00\u5f20\u684c\u5b50\u8fd8\u662f\u6ee1\u4eba\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5de7\u5999\u5730\u8f93\u51fa0\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\uff0c\u849f\u84bb\u4e0d\u4f1avector\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u4e0d\u7528vector\u7684\u9898\u89e3\uff0c\u6bd4[\u6c9b\u9716](https://www.luogu.org/space/show?uid=48455)dalao\u7684\u4ee3\u7801\u91cf\u5927\uff0c\u4f46\u6211\u611f\u89c9\u5e94\u8be5\u66f4\u5bb9\u6613\u61c2\u3002\n\n\u7136\u540e\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,ll;\nstruct node{\n\tint num,wei,xy[1001],hao;//xy\u662f\u6bcf\u4e2a\u4eba\u505a\u7684\u684c\u5b50\u7f16\u53f7\n}a[1501];//\u6211\u53d1\u73b0\u6309\u7740\u9898\u76ee\u5f00\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u70b9RE\u4e86\uff0c\u6240\u4ee5\u5c31\u5927\u4e86\u70b9\u3002\nstruct edge{//\u8fd9\u4e2a\u771f\u7684\u4e0d\u662f\u5efa\u8fb9\uff0c\u662f\u60f3\u4e0d\u51fa\u7ed3\u6784\u4f53\u540d\u79f0\u4e86\u3002\n\tint num1,shu,wi;\n}b[3001];\nbool c[3001];//\u5224\u65ad\u684c\u5b50\u662f\u5426\u5750\u6ee1\nint cmp(node x,node y)\n{\n\treturn x.num>y.num;\n}\nint cmp2(edge x,edge y)\n{\n\treturn x.num1>y.num1;\n}\nint cmp1(node x,node y)\n{\n\treturn x.wei<y.wei;\n}\nvoid dfs()\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint cnt=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(j==n&&c[j]==1)//\u5982\u679c\u626b\u5230\u6700\u540e\u4e00\u5f20\u684c\u5b50\u53d1\u73b0\u684c\u5b50\u8fd8\u662f\u6ee1\u7684\uff0c\u5c31\u8f93\u51fa0\uff0c\u5728void\u91cc\u6ca1\u6cd5\u76f4\u63a5\u8f93\u51fa\uff0c\u53ea\u80fd\u9650\u5b9a\u4e49\u4e00\u4e2all\u53d8\u91cf\u3002\n\t\t\t{\n\t\t\t\tll=1;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif(c[j]==0)\n\t\t\t{\n\t\t\t\ta[i].num--;//\u6b64\u961f\u4f0d\u4e2d\u8fd8\u5269\u4e0b\u7684\u4eba\u6570\n\t\t\t\tcnt++;\n\t\t\t\ta[i].xy[cnt]=b[j].wi;\n\t\t\t\tb[j].shu++;\n\t\t\t\tif(b[j].shu==b[j].num1)\n\t\t\t\t{\n\t\t\t\t\tc[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(a[i].num==0)\n\t\t\t{\n\t\t\t\ta[i].hao=cnt;//\u8bb0\u5f55\u4e0ba[i].xy\u7684\u957f\u5ea6\uff0c\u56e0\u4e3a\u539f\u6765\u5b9a\u4e49\u7684num\u5df2\u7ecf\u88ab\u6211\u4eec\u51cf\u53bb\u4e86\u3002\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nvoid print()\n{\n\tsort(a+1,a+m+1,cmp1);\n\tcout<<1<<endl;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=1;j<=a[i].hao;j++)\n\t\t{\n\t\t\tcout<<a[i].xy[j]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t}\n}\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a[i].num;\n\t\ta[i].wei=i;//wei\u662f\u961f\u4f0d\u7f16\u53f7\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>b[i].num1;\n\t\tb[i].wi=i;wi\u662f\u684c\u5b50\u7f16\u53f7\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tsort(b+1,b+n+1,cmp2);\n\tdfs();//\u5b9e\u5728\u60f3\u4e0d\u51fa\u51fd\u6570\u540d\u4e86\u624d\u8d77\u7684dfs\u3002\n\tif(ll==1)\n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tprint();\n\treturn 0;\n}\n```",
        "postTime": 1544878424,
        "uid": 94437,
        "name": "philosopherchang",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "### \u8fd9\u662fGD\u521d\u4e8c\u849f\u84bb $lolte$ \u7684\u9898\u89e3\n\n\u6700\u8fd1\u5728\u5b66\u4e60\u4e8c\u5206\u56fe\uff08\u5308\u7259\u5229\uff09\u4ee5\u53ca\u7f51\u7edc\u6d41\u7684\u7b97\u6cd5\uff0c\u81ea\u7136\u662f\u8981\u519924\u9898\u7684\u4e86\u3002\n\n\u672c\u9898\u4e0d\u96be\u60f3\u5230\u5c06\u5355\u4f4d\u548c\u684c\u5b50\u4f5c\u4e3a\u4e24\u8fb9\u7684\u70b9\uff0c\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d $||$ \u7f51\u7edc\u6d41\n\n### \u5177\u4f53\u5efa\u56fe\u65b9\u6cd5\u5982\u4e0b\uff1a\n1. \u5c06\u6e90\u70b9\u4e0e\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a \u6b64\u5355\u4f4d\u4ee3\u8868\u6570 \u7684\u8fb9\n2. \u5c06\u6bcf\u5f20\u684c\u5b50\u4e0e\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\n3. \u5c06\u6bcf\u4e2a\u5355\u4f4d\u4e0e\u6bcf\u5f20\u684c\u5b50\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u7b49\u4e8e\u5c06\u6bcf\u4e2a\u5355\u4f4d\u7684\u4ee3\u8868\u90fd\u6362\u6210\u4e86\u6d41\u91cf\uff0c\n\n\u8fd9\u6837\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\uff0c\u5c31\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5355\u4f4d\u5b89\u6392\u5b8c\u3002\n\n\u82e5\u53ef\u4ee5\u5b89\u6392\uff0c\u5219\u6839\u636e\u6bcf\u4e2a\u5355\u4f4d\u662f\u5426\u5bf9\u7b2c $i$ \u5f20\u684c\u5b50\u6709\u6d41\u91cf\u8fdb\u884c\u8f93\u51fa\u3002\n\n### \u4e0b\u9762\u662f\u4ee3\u7801\ndinic \u65e0o2 31ms\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;\n    char ch=getchar();\n    for (;ch<'0'||ch>'9';ch=getchar()) f^=(ch=='-');\n    for (;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-'0';\n    return f ? -x : x;\n}\nconst int inf=2147483600,maxn=500,maxm=82000;\nint n,m,head[maxn],cnt=1,dep[maxn],cur[maxn],s,t,dw[maxn],zz[maxn],all=0;\nint q[maxn],l,r;\nbool inq[maxn],vis;\nstruct node{\n    int to,nxt,w;\n}e[maxm];\ninline void add(int u,int v,int w) {\n    ++cnt;\n    e[cnt].to=v;\n    e[cnt].w=w;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nbool bfs() {\n    memset(dep,0x3f,sizeof(dep));\n    memset(inq,0,sizeof(inq));\n    memcpy(cur,head,sizeof(head));\n    l=1;r=0;\n    inq[s]=1;q[++r]=s;dep[s]=0;\n    while (l<=r) {\n        int u=q[l++];\n        inq[u]=0;\n        for (int i=head[u];i;i=e[i].nxt) {\n            int v=e[i].to;\n            if (e[i].w&&dep[v]>dep[u]+1) {\n                dep[v]=dep[u]+1;\n                if (!inq[v]) {\n                    inq[v]=1;\n                    q[++r]=v;\n                }\n            }\n        }\n    }\n    return dep[t]<10000;\n}\nint dfs(int u,int flow) {\n    if (u==t) {\n        all-=flow;\n        vis=1;\n        return flow;\n    }\n    int goflow=0,used=0;\n    for (int &i=cur[u];i;i=e[i].nxt) {\n        int v=e[i].to;\n        if (e[i].w&&dep[v]==dep[u]+1) {\n            goflow=dfs(v,min(flow,e[i].w));\n            if (!goflow) continue;\n            used+=goflow;\n            e[i].w-=goflow;\n            e[i^1].w+=goflow;\n            if (used==flow) break;\n        }\n    }\n    return used;\n}\nvoid dinic(){\n    while (bfs()) {\n        vis=1;\n        while (vis) {\n            vis=0;\n            dfs(s,inf);\n        }\n    }\n}\nvoid go(int u) {\n    for (int i=head[u];i;i=e[i].nxt) {\n        int v=e[i].to;\n        if (v!=s&& !e[i].w) printf(\"%d \",v-n); \n    }\n    putchar('\\n');\n}\nsigned main(){\n    n=read();\n    m=read();\n    s=n+m+1;\n    t=n+m+2;\n    for (int i=1;i<=n;++i) dw[i]=read();\n    for (int i=1;i<=m;++i) zz[i]=read();\n    for (int i=1;i<=n;++i) {\n        all+=dw[i];\n        add(s,i,dw[i]);\n        add(i,s,0);\n    }\n    for (int i=1;i<=m;++i) {\n        add(i+n,t,zz[i]);\n        add(t,i+n,0);\n    }\n    for (int i=1;i<=n;++i) {\n        for (int j=1;j<=m;++j) {\n            add(i,j+n,1);\n            add(j+n,i,0);\n        }\n    }\n    dinic();\n    if (all) {\n        puts(\"0\");\n        return 0;\n    }\n    puts(\"1\");\n    for (int i=1;i<=n;++i) go(i);\n    return 0;\n}\n```\n\n$Wish$ $OIers RP++$",
        "postTime": 1544076331,
        "uid": 78752,
        "name": "lolte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "# \u6d1b\u8c37 P3254 \u9898\u89e3\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9898\u9700\u8981\u7528\u5230[\u7f51\u7edc\u6700\u5927\u6d41](https://www.luogu.com.cn/problem/P3376)\uff0c\u4e0d\u4f1a\u7684\u6700\u597d\u5148\u53bb\u5b66\u4e60\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u5148\u56de\u5fc6\u4e00\u4e0b\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u3002\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u6240\u6709\u5de6\u8fb9\u7684\u70b9\uff0c\u6240\u6709\u53f3\u8fb9\u7684\u70b9\u8fde\u5411\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u540c\u65f6\u5de6\u8fb9\u7684\u70b9\u6839\u636e\u9898\u76ee\u8981\u6c42\u4e0e\u53f3\u8fb9\u7684\u70b9\u8fde\u8fb9\uff0c\u6240\u6709\u8fb9\u7684\u5bb9\u91cf\u4e3a $1$\u3002\n\n\u518d\u770b\u672c\u9898\u3002\u53ef\u4ee5\u628a\u9898\u76ee\u4e2d\u7684\u5355\u4f4d\u770b\u6210\u4e8c\u5206\u56fe\u5de6\u8fb9\u7684\u70b9\uff0c\u5706\u684c\u770b\u6210\u4e8c\u5206\u56fe\u53f3\u8fb9\u7684\u70b9\u3002\n\n\u6bcf\u4e2a\u5355\u4f4d\u548c\u6bcf\u4e2a\u5706\u684c\u8fde\u8fb9\uff08\u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u5355\u4f4d\u90fd\u53ef\u4ee5\u6d3e\u4eba\u53bb\u4efb\u4f55\u4e00\u4e2a\u5706\u684c\uff09\uff0c\u5bb9\u91cf\u4e3a $1$\uff08\u56e0\u4e3a\u6bcf\u4e2a\u5355\u4f4d\u53ea\u80fd\u6d3e\u4e00\u4e2a\u4eba\u5230\u67d0\u4e2a\u5706\u684c\uff09\u3002\n\n\u518d\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u548c\u6bcf\u4e2a\u5355\u4f4d\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5e94\u4e3a $r_i$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5355\u4f4d\u53ea\u6709\u8fd9\u4e48\u591a\u4eba\u3002\u540c\u7406\u6bcf\u4e2a\u5706\u684c\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5e94\u4e3a $c_i$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5706\u684c\u53ea\u80fd\u5750\u8fd9\u4e48\u591a\u4eba\u3002\n\n\u5efa\u5b8c\u56fe\u540e\u76f4\u63a5\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u8bb0\u4e3a $ans$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u53ea\u6709 $ans=\\sum_{i=1}^{m}r_i$ \u65f6\u624d\u53ef\u80fd\u6709\u65b9\u6848\uff08\u56e0\u4e3a\u6240\u6709\u4eba\u90fd\u8981\u53bb\u5403\u996d\u804a\u5929\uff0c\u6240\u4ee5\u6240\u6709\u4eba\u90fd\u8981\u201c\u6d41\u201d\u8fc7\u53bb\uff09\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u5148\u679a\u4e3e\u6bcf\u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u5bf9\u5f53\u524d\u5355\u4f4d\u679a\u4e3e\u5b83\u7684\u6bcf\u4e2a\u8fb9\uff08\u6ce8\u610f\u8fd9\u91cc\u8981\u5224\u65ad\u4e00\u4e0b\u4e00\u5b9a\u662f\u8fde\u5411\u5706\u684c\u7684\u8fb9\u800c\u4e0d\u662f\u8fde\u5411\u6e90\u70b9\u7684\uff09\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u7684\u53c2\u4f59\u5bb9\u91cf\u4e3a $0$\uff0c\u4e5f\u5c31\u4ee3\u8868\u8fd9\u4e2a\u5355\u4f4d\u4e2d\u6709\u4e00\u4e2a\u4eba\u201c\u6d41\u201d\u53bb\u4e86\u8fd9\u6761\u8fb9\u7684\u7ec8\u70b9\u4ee3\u8868\u7684\u5706\u684c\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\u7ec8\u70b9\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct edge\n{\n\tint to,val,next;\n}g[100000];//\u7f51\u7edc\u6d41\u95ee\u9898\u591a\u5efa\u7684\u8fb9\u548c\u70b9\u4f1a\u5f88\u591a\uff0c\u6570\u7ec4\u6700\u597d\u5f00\u5927\u4e00\u70b9\nint head[501],cnt=1,s,t;\nint deep[501];//\u540c\u4e0a\nvoid add(int u,int v,int w)//\u90bb\u63a5\u8868\u5b58\u56fe\n{\n\tg[++cnt]=(edge){v,w,head[u]};\n\thead[u]=cnt;\n}\nbool bfs()\n{\n\tqueue<int> q;\n\tq.push(s);\n\tfor(int i=0;i<=500;i++)\n\t{\n\t\tdeep[i]=0;\n\t}\n\tdeep[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=g[i].next)\n\t\t{\n\t\t\tint v=g[i].to;\n\t\t\tif(g[i].val&&!deep[v])\n\t\t\t{\n\t\t\t\tdeep[v]=deep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn deep[t];\n}\nint dfs(int u,int in)\n{\n\tif(u==t)\n\t{\n\t\treturn in;\n\t}\n\tint out=0;\n\tfor(int i=head[u];i&&in;i=g[i].next)\n\t{\n\t\tint v=g[i].to;\n\t\tif(g[i].val&&deep[u]+1==deep[v])\n\t\t{\n\t\t\tint num=dfs(v,min(in,g[i].val));\n\t\t\tin-=num;\n\t\t\tout+=num;\n\t\t\tg[i].val-=num;\n\t\t\tg[i^1].val+=num;\n\t\t}\n\t}\n\tif(out==0)\n\t{\n\t\tdeep[u]=-1;\n\t}\n\treturn out;\n}\nint main()\n{\n\tint n,m,sum=0;\n\tscanf(\"%d%d\",&m,&n);\n\ts=0,t=m+n+1;\n\tfor(int i=1;i<=m;i++)//\u6e90\u70b9\u8fde\u5411\u5355\u4f4d\n\t{\n\t\tint w;\n\t\tscanf(\"%d\",&w);\n\t\tadd(s,i,w);\n\t\tadd(i,s,0);\n\t\tsum+=w;//\u6c42\u4eba\u6570\u603b\u548c\n\t}\n\tfor(int i=1;i<=n;i++)//\u9910\u684c\u8fde\u5411\u6c47\u70b9\n\t{\n\t\tint w;\n\t\tscanf(\"%d\",&w);\n\t\tadd(i+m,t,w);//\u6ce8\u610f\u70b9\u7684\u7f16\u53f7\n\t\tadd(t,i+m,0);\n\t}\n\tfor(int i=1;i<=m;i++)//\u6e90\u70b9\u8fde\u5411\u9910\u684c\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tadd(i,j+m,1);//\u6ce8\u610f\u70b9\u7684\u7f16\u53f7\n\t\t\tadd(j+m,i,0);\n\t\t}\n\t}\n\tint ans=0;\n\twhile(bfs())//dinic\u6c42\u6700\u5927\u6d41\n\t{\n\t\tans+=dfs(s,1e9);\n\t}\n\tif(ans!=sum)//\u65e0\u53ef\u884c\u65b9\u6848\n\t{\n\t\tprintf(\"0\");\n\t\treturn 0;\n\t}\n\tprintf(\"1\\n\");\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=head[i];j;j=g[j].next)\n\t\t{\n\t\t\tif(g[j].to!=s&&!g[j].val)//\u6709\u4eba\u4ece\u8fd9\u6761\u8fb9\u6d41\u4e86\u8fc7\u53bb\n\t\t\t{\n\t\t\t\tprintf(\"%d \",g[j].to-m);//\u6ce8\u610f\u70b9\u7684\u7f16\u53f7\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u8c22\u8c22\u89c2\u770b\uff01",
        "postTime": 1612271680,
        "uid": 241520,
        "name": "fanglong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u4eca\u5929WC\u8bb2\u4e86\u8fd9\u9053\u9898\uff0c\u6211\u5c31\u6765\u8be6\u7ec6\u8bf4\u4e00\u4e0b\uff0c\u4e5f\u7b97\u662f\u590d\u4e60\u5427\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u4e2d\u5df2\u7ecf\u628a\u70b9\u96c6\u5e2e\u4f60\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u4ee3\u8868\u96c6\u548c\u9910\u684c\u96c6\uff0c\u8bf4\u53e5\u4eba\u8bdd\u5c31\u662f\u7ed9\u4f60\u4e86\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u3002\n\n\u4f60\u53ea\u9700\u8981\uff1a\n\n1. \u6c42\u89e3\u6700\u5927\u5339\u914d\uff0c\u770b\u770b\u662f\u5426\u6709\u53ef\u884c\u7684\u5c31\u9910\u65b9\u6848\u3002\n\n2. \u5c06\u65b9\u6848\u8f93\u51fa\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5efa\u7acb\u865a\u70b9 $S$ \u548c $T$ \u8868\u793a\u6e90\u70b9\u548c\u6c47\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4ee3\u8868\u56e2\uff0c\u4ece\u6e90\u70b9\u5411\u5b83\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a\u4eba\u6570\u7684\u8fb9\uff1b\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9910\u684c\uff0c\u7531\u5b83\u5411\u6c47\u70b9\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a\u6700\u591a\u5ea7\u6570\u7684\u8fb9\u3002\u7136\u540e\u4ece\u6bcf\u4e00\u4e2a\u4ee3\u8868\u56e2\u51fa\u53d1\uff0c\u5411\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u9910\u684c\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u6700\u591a\u53ef\u4ee5\u5750\u6b64\u4ee3\u8868\u56e2\u7684\u4e00\u4e2a\u4eba\u3002\u7136\u540e\u5bf9\u8fd9\u5f20\u56fe\u8dd1\u6700\u5927\u6d41\u7b97\u6cd5\uff0c\u901a\u8fc7\u6700\u5927\u6d41\u91cf\u4e0e\u603b\u4eba\u6570\u6bd4\u8f83\u6765\u5f97\u77e5\u80fd\u5426\u6709\u5408\u6cd5\u65b9\u6848\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4ece\u4ee3\u8868\u56e2\u5411\u9910\u684c\u5efa\u7684\u8fb9\u4e2d\uff0c\u6709\u54ea\u4e9b\u5269\u4f59\u5bb9\u91cf\u4e3a0\uff0c\u5373\u8868\u793a\u5df2\u7ecf\u7528\u8fc7\u4e86\uff0c\u8f93\u51fa\u5c31\u884c\u3002\n\n\u6700\u540e\u5343\u4e07\u4e0d\u8981\u641e\u9519\u7f51\u7edc\u6d41\u5efa\u8fb9\u7684\u4e0b\u6807\u95ee\u9898\u3002\n\n```cpp\nconst int INF = 1 << 29;\nconst int Maxn = 275, Maxm = 155;\nint n, m, cnt = 1, r[Maxm], c[Maxn];\n\nconst int N = 425, M = 3e5 + 5;\nint head[N], cur[N], ver[M], nxt[M], edge[M];\ninline void AddEdge(int u, int v, int w) {\n\tver[++cnt] = v, edge[cnt] = w, nxt[cnt] = head[u], head[u] = cnt;\n\tver[++cnt] = u, edge[cnt] = 0, nxt[cnt] = head[v], head[v] = cnt;\n}\n\nint dis[N], maxflow, s, t, tot;\ninline bool bfs(void) {\n\tMs(dis, 0); dis[s] = 1;\n\tqueue <int> q; q.push(s);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i; i = nxt[i]) {\n\t\t\tif (edge[i] && !dis[ver[i]]) {\n\t\t\t\tq.push(ver[i]);\n\t\t\t\tdis[ver[i]] = dis[u] + 1;\n\t\t\t\tif (ver[i] == t) return true;\n\t\t\t}\n\t\t}\n\t} return false;\n}\n\ninline int dinic(int u, int flow) {\n\tif (u == t) return flow;\n\tint rest = flow, k;\n\tfor (int &i = cur[u]; i; i = nxt[i]) {\n\t\tif (edge[i] && dis[ver[i]] == dis[u] + 1) {\n\t\t\tk = dinic(ver[i], min(rest, edge[i]));\n\t\t\tif (!k) dis[ver[i]] = 0;\n\t\t\tedge[i] -= k; edge[i ^ 1] += k;\n\t\t\trest -= k; if (rest == 0) break;\n\t\t}\n\t} return flow - rest;\n}\n\nsigned main(void) {\n\tread(m), read(n); s = n + m + 1, t = n + m + 2;\n\tfor (int i = 1; i <= m; i++) read(r[i]), AddEdge(s, i, r[i]), tot += r[i];\n\tfor (int i = 1; i <= n; i++) read(c[i]), AddEdge(i + m, t, c[i]);\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 1; j <= n; j++) AddEdge(i, m + j, 1);\n\twhile (bfs()) {\n\t\tfor (int i = 1; i <= n + m + 2; i++) cur[i] = head[i];\n\t\tmaxflow += dinic(s, INF);\n\t}\n\t\n\tif (maxflow != tot) { puts(\"0\"); return 0; }\n\tputs(\"1\");\n\tfor (int u = 1; u <= m; u++) {\n\t\tint p = 0;\n\t\tfor (int i = head[u]; i; i = nxt[i]) {\n\t\t\tif (ver[i] == s || edge[i]) continue;\n\t\t\tp++; writeln(ver[i] - m, \" \\n\"[p == r[u]]);\n\t\t}\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n```\n",
        "postTime": 1612256136,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\u5339\u914d\uff0c\u6211\u7528\u7684\u6307\u9488\u7248ISAP\n\n~~\u4e8c\u5206\u56fe\u5339\u914dISAP\u6548\u7387\u6781\u9ad8\uff0c\u5c24\u5176\u662f\u52a0\u4e86\u5f53\u524d\u5f27\u4f18\u5316~~\n\n### \u5efa\u56fe\n\n* \u4ece\u8d85\u7ea7\u6e90\u70b9\u5411\u6bcf\u4e00\u4e2a\u5355\u4f4d\u8fde\u63a5\u5bb9\u91cf\u4e3a\u4eba\u6570\u7684\u8fb9\n* \u4ece\u6bcf\u4e00\u4e2a\u5706\u684c\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u63a5\u5bb9\u91cf\u4e3a\u4eba\u6570\u7684\u8fb9\n* \u4ece\u6bcf\u4e00\u4e2a\u5355\u4f4d\u5411\u6bcf\u4e00\u4e2a\u5706\u684c\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n### \u8f93\u51fa\n\n* \u5982\u679c\u603b\u6d41\u91cf\u5c0f\u4e8e\u603b\u4eba\u6570\uff0c\u5219\u65e0\u89e3\n* \u904d\u5386\u6bcf\u4e00\u4e2a\u5355\u4f4d\uff0c\u5bf9\u4e8e\u8d77\u70b9\u4e3a\u5355\u4f4d\u7ec8\u70b9\u4e3a\u5706\u684c\u5269\u4f59\u5bb9\u91cf\u4e3a$0$\u7684\u8fb9\uff0c\u8f93\u51fa\u7ec8\u70b9\u5373\u5706\u684c\u7f16\u53f7\n\n### \u4ee3\u7801\n\n\u6709$cur$\u4f18\u5316\u7684$ISAP$\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing std::queue;\n\nconst int MAXM = 155;\nconst int MAXN = 275;\nconst int INF = 0x3f3f3f3f;\n\nstruct Edge{\n    int to, val;\n    Edge *next, *ops;\n    Edge (int to, int val, Edge *next): to(to), val(val), next(next) {ops = NULL;}\n};\n\nEdge *head[MAXN + MAXM];\n\nvoid AddEdge(int from, int to, int val) {\n    head[from] = new Edge(to, val, head[from]);\n    head[to] = new Edge(from, 0, head[to]);\n    head[from]->ops = head[to]; head[to]->ops = head[from];\n}\n\nint n, m, tot = 0;\n\nnamespace ISAP{\n    int s, t, maxflow;\n    int gap[MAXN + MAXM], dep[MAXN + MAXM];\n    Edge *cur[MAXM + MAXN];\n\n    void Bfs() {\n        memset(dep, -1, sizeof(dep));\n        memset(gap, 0, sizeof(gap));\n        dep[t] = 0; gap[dep[t]]++;\n        queue<int> q; q.push(t);\n        while (!q.empty()) {\n            int u = q.front(); q.pop();\n            for (Edge *e = head[u]; e; e = e->next) {\n                int v = e->to;\n                if (dep[v] != -1) continue;\n                dep[v] = dep[u] + 1; \n                gap[dep[v]]++;\n                q.push(v);\n            }\n        }\n    }\n\n    int Dfs(int u, int flow) {\n        if (u == t) {\n            maxflow += flow;\n            return flow;\n        }\n        int used = 0;\n        for (Edge *&e = cur[u]; e; e = e->next) {\n            int v = e->to;\n            if (e->val && dep[v] == dep[u] - 1) {\n                int mi = Dfs(v, std::min(e->val, flow - used));\n                if (mi) {\n                    used += mi;\n                    e->val -= mi;\n                    e->ops->val += mi;\n                    if (used == flow) return used;\n                }\n            }\n        }\n        gap[dep[u]]--;\n        cur[u] = head[u];\n        if (gap[dep[u]] == 0) dep[s] = n + m + 2;\n        dep[u]++;\n        gap[dep[u]]++;\n        return used;\n    }\n\n    void Work() {\n        for (int i = 0; i <= n + m + 1; i++) cur[i] = head[i];\n        maxflow = 0;\n        Bfs();\n        while (dep[s] < n + m + 1) Dfs(s, INF);\n    }\n\n    void Print() {\n        if (maxflow != tot) {\n            puts(\"0\"); return;\n        }\n        puts(\"1\");\n        for (int i = 1; i <= m; i++) {\n            for (Edge *e = head[i]; e; e = e->next) {\n            int v = e->to;\n                if (e->val == 0 && v > m && v <= n + m) printf(\"%d \", v - m);\n            }\n            puts(\"\");\n        }\n        // printf(\"%d %d\\n\", maxflow, tot);\n    }\n}\n\nint main() {\n    memset(head, 0, sizeof(head));\n    scanf(\"%d %d\", &m, &n);\n    ISAP::s = 0; ISAP::t = m + n + 1;\n    for (int i = 1; i <= m; i++) {\n        for (int j = m + 1; j <= n + m; j++) {\n            AddEdge(i, j, 1);\n        }\n    }\n    for (int i = 1, x; i <= m; i++) {\n        scanf(\"%d\", &x);\n        AddEdge(0, i, x);\n        tot += x;\n    }\n    for (int i = m + 1, x; i <= n + m; i++) {\n        scanf(\"%d\", &x);\n        AddEdge(i, m + n + 1, x);\n    }\n    ISAP::Work();\n    ISAP::Print();\n    return 0;\n}\n/*\n4 5\n4 5 3 5\n3 5 2 6 4\n*/\n```",
        "postTime": 1550995769,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u5730\u5740](https://www.cnblogs.com/hbxblog/p/9708323.html)\n \n\u9996\u5148\u770b\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\uff0c\u9996\u5148\u6765\u8003\u8651\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u6211\u4eec\u4e0d\u59a8\u5047\u8bbe\u6bcf\u4e2a\u56e2\u961f\u5230\u6bcf\u4e2a\u684c\u5b50\u7684\u6d41\u4e3a1(\u81ea\u5df1\u5728\u8349\u7a3f\u7eb8\u4e0a\u753b\u4e00\u4e0b)\uff0c\u5728\u7528\u4e24\u4e2a\u5f3a\u5927\u7684\u8d85\u7ea7\u70b9\uff0c\u6c47\u70b9\u548c\u6e90\u70b9\uff08\u8fd9\u4e2a\u540d\u8bcd\u77e5\u9053\u5427\uff0c\u4e0d\u77e5\u9053\u53ef\u4ee5\u56de\u53bb\u5b66\u7f51\u7edc\u6d41\uff0c~~\u8fd9\u90fd\u4e0d\u77e5\u9053\uff0c\u505a\u4ec0\u4e48\u8fd9\u9898~~\uff09\u5c06\u6e90\u70b9\u548c\u6240\u6709\u7684\u56e2\u961f\u76f8\u8fde\uff0c\u6d41\u4e3a\u56e2\u961f\u4ee3\u8868\u6570\uff0c\u5c06\u684c\u5b50\u548c\u6c47\u70b9\u76f8\u8fde\uff0c\u6d41\u4e3a\u684c\u5b50\u7684\u6700\u5927\u4e0a\u9650  \n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8fde\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u8bf4\u4e86\u6bcf\u4e2a\u56e2\u961f\u81f3\u591a\u4e00\u4e2a\u4eba\u5728\u4e00\u5f20\u9910\u684c\u4e0a\u5403\u996d\uff0c\u6240\u4ee5\u8bbe\u6bcf\u4e2a\u56e2\u961f\u5230\u6bcf\u4e2a\u684c\u5b50\u7684\u6d41\u4e3a1\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u56e2\u961f\u4e0d\u4f1a\u6709\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u5728\u540c\u4e00\u5f20\u684c\u5b50\u5403\u996d\uff0c\u800c\u56e0\u4e3a\u6bcf\u4e2a\u56e2\u961f\u7684\u4eba\u4e0d\u662f\u65e0\u9650\u7684\uff0c\u6709\u4e00\u4e2a\u4e0a\u9650\uff0c\u6240\u4ee5\u8bb2\u4ed6\u548c\u6e90\u70b9\u76f8\u8fde\uff0c\u6d41\u4e3a\u56e2\u961f\u4eba\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8d85\u51fa\u8303\u56f4\u4e86\uff0c\u684c\u5b50\u540c\u7406  \n\n\u518d\u6765\u770b\u770b\u5982\u4f55\u8f93\u51fa\u65b9\u6848\n\u5176\u5b9e\u8fd9\u5f88\u7b80\u5355\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u56e2\u961f\uff0c\u5982\u679c\u56e2\u961f\u548c\u684c\u5b50\u7684\u8fb9\u6b8b\u4f59\u5bb9\u91cf\u662f0\uff0c\u5c31\u8bc1\u660e\u8fd9\u91cc\u6709\u4e00\u4e2a\u65b9\u6848\n\n\n\u77e5\u9053\u4e86\u8fd9\u4e9b\u4ee5\u540e\u63a5\u4e0b\u6765\u5c31\u662f\u6a21\u677f\u9898\u4e86  \n\n```cpp\n#include<bits/stdc++.h>\n#define rg register\nusing namespace std;\ntypedef long long ll;\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9')  f= (c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9')  x=x*10+c-48,c=getchar();\n    return f*x;\n}\nstruct node{\n    int to,next,v;\n}a[100001];\nint cnt,head[1000],dep[1001],s=1,t,cur[1001];\nvoid add(int x,int y,int c){\n    a[++cnt].to=y;\n    a[cnt].next=head[x];\n    a[cnt].v=c;\n    head[x]=cnt;\n}\nqueue<int> q;\nint bfs(){\n    memset(dep,0,sizeof(dep));\n    q.push(s);\n    dep[s]=1;\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        for(int i=head[now];i;i=a[i].next){\n            int v=a[i].to;\n            if(a[i].v&&!dep[v])\n                dep[v]=dep[now]+1,q.push(v);\n        }\n    }\n    if(!dep[t])\n        return 0;\n    return 1;\n}\nint dfs(int k,int list){\n    if(k==t)\n        return list;\n    for(int & i=cur[k];i;i=a[i].next){\n        int v=a[i].to;\n        if(dep[v]==dep[k]+1&&a[i].v){\n            int ans=dfs(v,min(list,a[i].v));\n            if(!ans)\n                continue;\n            a[i].v-=ans;\n            if(i%2)\n                a[i+1].v+=ans;\n            else\n                a[i-1].v+=ans;\n            return ans;\n        }\n    }\n    return 0;\n}\nint sum;\nint Dinic(){\n    int ans=0,k;\n    while(bfs()){\n        for(int i=1;i<=t;i++)\n            cur[i]=head[i];\n        while((k=dfs(s,2147483647)))\n            ans+=k;\n    }\n    return ans==sum?1:0;\n}\nint main(){\n    int m=read(),n=read(),x,y;\n    t=m+n+2;\n    for(int i=1;i<=m;i++)\n        x=read(),add(s,i+1,x),add(i+1,s,0),sum+=x;\n    for(int i=1;i<=n;i++){\n        x=read();\n        for(int j=1;j<=m;j++)\n            add(j+1,i+m+1,1),add(i+m+1,j+1,0);\n        add(i+m+1,t,x),add(t,i+m+1,0);\n    }\n    int ans=Dinic();\n    if(ans==0)\n        printf(\"0\"),exit(0);\n    printf(\"1\\n\");\n    for(int i=2;i<=m+1;i++,printf(\"\\n\"))\n        for(int j=head[i];j;j=a[j].next){\n            int v=a[j].to;\n             if(!a[j].v&&v!=s)\n                printf(\"%d \",v-m-1);\n        }\n    return 0;\n}\n```",
        "postTime": 1537954311,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u611f\u89c9\u505a\u8d77\u6765\u5f88\u723d\uff0c\u7406\u89e3\u9898\u610f\u4e4b\u540e\u5efa\u56fe\u8dd1\u5c31\u884c\u4e86\n\n\n## \u601d\u8def\n\n> \u95ee\u9898\u6a21\u578b\uff1a\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\n>\n> \u8f6c\u5316\u6a21\u578b\uff1a\u7f51\u7edc\u6700\u5927\u6d41\n\n\u5927\u6982\u662f\u505a\u8fc7\u6700\u7b80\u5355\u7684\u7f51\u7edc\u6d41\u9898\u4e86\u2026\u2026\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u7684\u95ee\u9898\uff0c\u4e00\u4e2a\u5355\u4f4d\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u684c\u5b50\uff0c\u95ee\u9898\u5c31\u662f\u6c42\u80fd\u4e0d\u80fd\u4f7f\u8fd9\u4e9b\u5355\u4f4d\u7684\u4eba\u90fd\u80fd\u5165\u5ea7\u4e14\u4e00\u4e2a\u684c\u5b50\u4e0a\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u6765\u81ea\u540c\u4e00\u5355\u4f4d\u7684\u4eba\u3002\n\n\u5c06\u6e90\u70b9 $S$ \u4e0e\u5355\u4f4d\u4e4b\u95f4\u8fde\u6d41\u91cf\u4e3a\u4ee3\u8868\u4eba\u6570 $r_i$ \u7684\u8fb9\uff0c\u987a\u4fbf\u8bb0\u5f55\u603b\u4eba\u6570 $tot$\uff0c\u5c06\u9910\u684c\u548c\u6c47\u70b9 $T$ \u4e4b\u95f4\u8fde\u6d41\u91cf\u4e3a\u5bb9\u7eb3\u4eba\u6570 $c_i$ \u7684\u8fb9\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u5355\u4f4d\u4e0e\u6bcf\u4e2a\u9910\u684c\u4e4b\u95f4\u8fde\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u5efa\u597d\u4e86\u56fe\u3002\n\n\u8fd9\u5f20\u56fe\u662f\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\u7684\uff0c\u56e0\u4e3a\u5355\u4f4d\u4e0e\u684c\u5b50\u4e4b\u95f4\u8fde\u4e86\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u6240\u4ee5\u4e00\u4e2a\u684c\u5b50\u4e0a\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u6765\u81ea\u540c\u4e00\u5355\u4f4d\u7684\u4eba\u3002\n\n\u4e4b\u540e\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u6700\u5927\u6d41\uff0c\u770b\u770b\u5728\u6ee1\u8db3\u80fd\u4e0d\u80fd\u5bb9\u7eb3\u8fd9 $tot$ \u4e2a\u4eba\uff0c\u5982\u679c\u6700\u5927\u6d41\u5c0f\u4e8e $tot$\uff0c\u5c31\u8bf4\u660e\u6ca1\u6709\u53ef\u884c\u65b9\uff0c\u5982\u679c\u6700\u5927\u6d41\u5927\u4e8e\u6216\u7b49\u4e8e $tot$\uff0c\u90a3\u5c31\u8bf4\u660e\u53ef\u4ee5\uff0c\u679a\u4e3e\u6bcf\u4e2a\u5355\u4f4d\uff0c\u68c0\u67e5\u8fd9\u4e2a\u5355\u4f4d\u8fde\u7740\u7684\u8fb9\u7684\u6d41\u91cf\u662f\u5426\u4e3a $0$\uff0c\u4e3a $0$ \u5219\u8868\u793a\u8d70\u6700\u5927\u6d41\u7684\u65f6\u5019\u8d70\u4e86\u8fd9\u6761\u8fb9\uff0c\u5373\u80fd\u5728\u8fd9\u4e2a\u9910\u684c\u4e0a\uff0c\u8f93\u51fa\u5373\u53ef\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u3002\n\n\u5177\u4f53\u7684\u7ec6\u8282\u770b\u4e00\u770b\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n```cpp\n/*\n  Name: P3254 \u5706\u684c\u95ee\u9898\n  Author: Loceaner\n  Date: 24/08/20 08:07\n*/\n#include <queue>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int A = 2e5 + 11;\nconst int B = 1e6 + 11;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\n\nint n, m, s, t, cnt = 1;\nstruct node { int to, nxt, val; } e[A];\nint head[A], dep[A], inq[A], cur[A], r[A], c[A];\n\ninline void add(int from, int to, int val) {\n  e[++cnt].to = to;\n  e[cnt].val = val;\n  e[cnt].nxt = head[from];\n  head[from] = cnt;\n}\n\ninline bool bfs() {\n  queue <int> Q;\n  for (int i = 1; i <= n + m + 2; i++) \n    cur[i] = head[i], inq[i] = 0, dep[i] = inf;\n  dep[s] = 0, Q.push(s), inq[s] = 1;\n  while (!Q.empty()) {\n    int x = Q.front(); Q.pop(), inq[x] = 0;\n    for (int i = head[x]; i; i = e[i].nxt) {\n      int to = e[i].to;\n      if (dep[to] > dep[x] + 1 && e[i].val) {\n        dep[to] = dep[x] + 1;\n        if (!inq[to]) Q.push(to), inq[to] = 1;\n      }\n    }\n  }\n  return dep[t] != inf;\n}\n\nint dfs(int x, int flow) {\n  if (x == t) return flow;\n  int tmp = 0;\n  for (int i = cur[x]; i; i = e[i].nxt) {\n    cur[x] = i;\n    int to = e[i].to;\n    if (dep[to] == dep[x] + 1 && e[i].val) {\n      if (tmp = dfs(to, min(flow, e[i].val))) {\n        e[i].val -= tmp, e[i ^ 1].val += tmp;\n        return tmp;\n      }\n    }\n  }\n  return 0;\n}\n\nint main() {\n  m = read(), n = read();\n  int jump = n + m, tot = 0;\n  s = jump + 1, t = jump + 2;\n  for (int i = 1; i <= m; i++) \n    r[i] = read(), tot += r[i], \n    add(s, i, r[i]), add(i, s, 0);\n  for (int i = 1; i <= n; i++) \n    c[i] = read(), add(i + m, t, c[i]), add(t, i + m, 0);\n  for (int i = 1; i <= m; i++)\n    for (int j = m + 1; j <= m + n; j++)\n      add(i, j, 1), add(j, i, 0);\n  int ans = 0, now = 0;\n  while (bfs()) while (now = dfs(s, inf)) ans += now;\n  if (ans < tot) return puts(\"0\"), 0;\n  puts(\"1\");\n  for (int i = 1; i <= m; i++) {\n    for (int j = head[i]; j; j = e[j].nxt) \n      if (e[j].val == 0) cout << e[j].to - m << ' '; \n      //\u9910\u684c\u4ecem+1\u5f00\u59cb\u7f16\u53f7\uff0c\u6240\u4ee5\u8981\u51cfm\n    puts(\"\");\n  }\n  return 0;\n}\n```",
        "postTime": 1598231142,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "## P3254 \u3010\u5706\u684c\u95ee\u9898\u3011\n\u76f8\u5f53\u7ecf\u5178\u7684\u4e00\u4e2a\u7f51\u7edc\u6d41\u9898qaq\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6bcf\u5f20\u684c\u5b50\u53ea\u80fd\u5bb9\u7eb3\u6bcf\u4e2a\u5355\u4f4d\u7684\u4e00\u4e2a\u4eba\uff0c\u6240\u4ee5\u6bcf\u5f20\u684c\u5b50\u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u7136\u540e\uff0c\u7b2c $i$ \u5f20\u684c\u5b50\u53ef\u4ee5\u5750 $c_i$ \u4e2a\u4eba\uff0c\u6240\u4ee5\u4ece\u6e90\u70b9\u5411\u8fd9\u5f20\u684c\u5b50\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $c_i$ \u7684\u8fb9\u3002\n\n\u6700\u540e\uff0c\u7b2c $i$ \u4e2a\u5355\u4f4d\u6709 $r_i$ \u4e2a\u4eba\uff0c\u6240\u4ee5\u4ece\u6bcf\u4e2a\u5355\u4f4d\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $r_i$ \u7684\u8fb9\u3002\n\n\u5982\u679c\u684c\u5b50 $i$ \u5230\u5355\u4f4d $j$ \u7684\u8fb9\u6d41\u91cf\u88ab\u4f7f\u7528\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u684c\u5b50\u5750\u4e86\u8be5\u5355\u4f4d\u7684\u4eba\u3002\n\n\u4e8e\u662f\u5148\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u8ba9\u6240\u6709\u7684\u4eba\u90fd\u4e0a\u5ea7\uff08\u6d41\u91cf\u5c31\u4ee3\u8868\u4e0a\u5ea7\u4eba\u6570\uff09\u3002\n\n\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u518d\u53bb\u5bfb\u627e\u6240\u6709\u4ece\u684c\u5b50\u8fde\u5411\u5355\u4f4d\u7684\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u8fb9\u7684\u5269\u4f59\u6d41\u91cf\u4e3a $0$\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u684c\u5b50\u4e0a\u5750\u4e86\u8be5\u5355\u4f4d\u7684\u4eba\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std; \ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nvoid write(int x){\n    if(x<0) putchar('-'), x=-x;\n    if(x>=10) write(x/10);\n    putchar('0'+x%10);\n}\nconst int inf=1000007;\nconst int maxn=500;\nstruct Edge{\n    int nxt,to,val;\n}e[maxn*500];\nint num=1,h[maxn*20],s,t,sum;\nqueue <int> q;\nvoid add(int from,int to,int dis){\n    e[++num].nxt=h[from];\n    e[num].to=to;\n    e[num].val=dis;\n    h[from]=num;\n}\nint n,m,x,y,z,maxflow,dep[maxn*20];\nbool bfs(int s,int t){\n\tmemset(dep,0x3f,sizeof(dep));\n\twhile(!q.empty()) q.pop();\n    dep[s]=0;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for (int i=h[u];i;i=e[i].nxt){\n        \tint v=e[i].to;\n            if(dep[v]>inf&&e[i].val){\n                dep[v]=dep[u]+1;\n                q.push(e[i].to);\n            }\n        }\n    }\n    if (dep[t]<inf) return true;\n    return 0;\n}\nint dfs(int u,int t,int lim){\n    if (!lim||u==t)return lim;\n    int flow=0,f;\n    for (int i=h[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        int &w=e[i].val;\n        if(dep[v]==dep[u]+1&&(f=dfs(v,t,min(lim,w)))){\n            flow+=f;\n            lim-=f;\n            w-=f;\n            e[i^1].val+=f;\n            if(!lim) break;\n        }\n    }\n    return flow;\n}\nvoid dinic(int s,int t){\n    while(bfs(s,t)){\n    \t//cout<<maxflow;\n\t\tmaxflow+=dfs(s,t,inf);\n\t}\n}\nint main(){\n    m=read();n=read();\n    for(int i=1;i<=n;i++){\n    \tfor(int j=1;j<=m;j++)\n    \t\tadd(i,j+1000,1),add(j+1000,i,0);\n\t} \n\ts=2000,t=2001;\n    for(int i=1;i<=m;i++){\n\t\tint a=read();\n    \tadd(i+1000,t,a);\n    \tadd(t,i+1000,0);\n    \tsum+=a;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadd(s,i,read());\n\t\tadd(i,s,0);\n\t}\n\tdinic(s,t);\n\tif(sum!=maxflow) return write(0),0;\n\tputs(\"1\");\n\tfor(int i=1001;i<=m+1000;i++){\n\t\tfor(int j=h[i];j;j=e[j].nxt){\n\t\t\tint v=e[j].to;\n\t\t\tint w=e[j].val;\n\t\t\tif(w==1&&v!=t) write(v),putchar(' ');\n\t\t}\n\t\tputs(\"\");\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1583406346,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "# \u7f51\u7edc\u6d4124\u9898---\u5706\u684c\u95ee\u9898\n\n\u9898\u610f:[\u81ea\u5df1\u5eb7](https://www.luogu.org/problem/P3254)\n\n## \u89e3\u6cd5:\u6c42\u7f51\u7edc\u6700\u5927\u6d41\n\u5bf9\u4e8e\u8fd9\u4e00\u9898,\u6211\u4eec\u53ef\u4ee5\u628a \u516c\u53f8\u8fde\u5230\u8d85\u7ea7\u6e90 \u5176\u4e2d\u7ba1\u9053\u7684\u6d41\u91cf\u4e3a\u516c\u53f8\u7684\u4eba\u6570  \n\u628a\u684c\u5b50\u8fde\u5230\u8d85\u7ea7\u6c47 \u5176\u4e2d\u7ba1\u9053\u7684\u6d41\u91cf\u4e3a\u684c\u5b50\u7684\u5bb9\u91cf  \n\u7136\u540e\u518d\u628a\u4eba\u548c\u6bcf\u4e00\u5f20\u684c\u5b50\u90fd\u8fde\u5728\u4e00\u8d77  \n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u516c\u53f8\u53ea\u4f1a\u4e0e\u4e00\u5f20\u684c\u5b50\u76f8\u8fde \u5373\u6ee1\u8db3\u9898\u610f\u4e2d\u8981\u6c42\u7684     \n\u4f7f\u6bcf\u5f20\u684c\u5b50\u5c3d\u53ef\u80fd\u7684\u5750\u6ee1 \u4e14 \u6ee1\u8db3\u4e00\u5f20\u684c\u4e3a\u4e0d\u540c\u7684\u516c\u53f8\n\u4e0b\u9762\u662f\u6837\u4f8b\u4e2d\u7684\u56fe\n\n![\u8349\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/pfmepqzk.png)\n\n**\u4ee3\u7801\u9171 OVO\u2193**\n```cpp\n//\u5706\u684c\u95ee\u9898 \u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 3000001\n#define v to[i]\n#define inf 0x7f7f7f7f\n\nint n,m,s,t;\nint sump,sumt;//\u4eba\u7684\u603b\u6570 \u548c \u684c\u5b50\u7684\u603b\u5bb9\u91cf\nint dep[N],vis[N],company[N],table[N];\nint head[N],to[N],from[N],nex[N],w[N],ecnt;\n\nvoid ae(int x,int y,int z){\n    from[ecnt]=x;\n    to[ecnt]=y;\n    w[ecnt]=z;\n    nex[ecnt]=head[x];\n    head[x]=ecnt++;\n}\n\nbool bfs(){\n    memset(dep,-1,sizeof(dep));\n    queue<int> q;\n    dep[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i!=-1;i=nex[i]){\n            if(dep[v]==-1 and w[i]>0){\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[t]!=-1;\n}\n\nint dfs(int u,int low){\n    if(u==t)\n        return low;\n    int ret=low;\n    for(int i=head[u];i!=-1;i=nex[i]){\n        if(dep[v]==dep[u]+1 and w[i]>0){\n            int flow=dfs(v,min(ret,w[i]));\n            if(flow>0){\n                w[i]-=flow;\n                w[i^1]+=flow;\n            }\n            ret-=flow;\n            if(!ret)\n                break;\n        }\n    }\n    return low-ret;\n}\n\nint dinic(){\n    int res=0;\n    while(bfs()){\n        res+=dfs(s,inf);\n    }\n    return res;\n}\n\nvoid pre(){\n    scanf(\"%d%d\",&n,&m);\n    int t1,t2;\n    s=0,t=10000;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&company[i]);\n        ae(s,i,company[i]);\n        ae(i,s,0);\n        sump+=company[i];//\u603b\u4eba\u6570\n    }\n    for(int i=1;i<=m;i++){\n        scanf(\"%d\",&table[i]);\n        ae(i+n,t,table[i]);\n        ae(t,n+i,0);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            ae(i,j+n,1);\n            ae(j+n,i,0);\n        }\n    }\n}\n\nint main(){\n    memset(head,-1,sizeof(head)); \n    pre();\n    int ans=dinic();\n    if(ans==sump){\n        printf(\"1\\n\");\n        for(int u=1;u<=n;u++){\n            for(int i=head[u];i!=-1;i=nex[i]){\n                if(!w[i] and v!=s){\n                    printf(\"%d \",v-n);\n                }\n            }\n            printf(\"\\n\");\n        }\n        return 0;\n    }\n    else\n        printf(\"0\\n\");\n    //printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1572788617,
        "uid": 58751,
        "name": "VanillaYuzume",
        "ccfLevel": 0,
        "title": "\u5706\u684c\u95ee\u9898"
    },
    {
        "content": "\u5706\u684c\u95ee\u9898\u4ece\u9898\u76ee\u6807\u7b7e\u4e0a\u662f\u7f51\u7edc\u6d4124\u9898\uff0c\u4f46\u662f\u60f3\u4e86\u4e00\u4e0b\uff0c\u518dA\u6389\u4e4b\u540e\u53c8\u770b\u4e86\u4e00\u9898\u89e3\uff0c\u53d1\u73b0\u548c\u6211\u4e00\u6837\u5199\u8d2a\u5fc3\u7684\u7ae5\u978b\u597d\u50cf\u6ca1\u6709\u4e0e\u6211\u601d\u8def\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u5c31\u6765\u5199\u4e2a\u7b2c\u4e00\u7bc7\u9898\u89e3\u5427\u3002\n\u601d\u8def\u5927\u81f4\u5982\u4e0b\uff1a\n\t1\u3001\t\u5c06\u6570\u636e\u6309\u8981\u6c42\u8f93\u5165\u5e76\u5b58\u50a8\u4e0b\u6765\u3002\n\t2\u3001\t\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u4f4d\u7684\u6bcf\u4e00\u4e2a\u800c\u8a00\uff0c\u6bcf\u6b21\u90fd\u53ea\u5750\u6ca1\u6709\u540c\u4e8b\uff0c\u5e76\u4e14\u7a7a\u5ea7\u6700\u591a\u7684\u684c\u5b50\uff08\u684c\u5b50\u5bb9\u91cf\u4f9d\u6b21\u51cf\u5c11\uff09\u3002\n\t3\u3001\t\u5c06\u843d\u5ea7\u7684\u4eba\u6240\u5750\u7684\u684c\u53f7\u7528\u6876\u6392\u5e8f\u7684\u65b9\u6cd5\u8bb0\u5f55\u4e0b\u6765\u3002\n\t4\u3001\t\u6240\u6709\u5355\u4f4d\u5904\u7406\u5b8c\u6210\u540e\uff0c\u6309\u6b21\u5e8f\u8f93\u51fa\u7ed3\u679c\u3002\n\u4ee3\u7801\u5949\u4e0a\uff0c\u81ea\u53d6\u4e0d\u8c22\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n//\u5f15\u5165\u5fc5\u8981\u7684\u5934\u6587\u4ef6\nusing namespace std;\nint danwei[200];\nstruct zhuo//\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u684c\u5b50\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\n{\n\tint shu;\n\tint wei;\n}t[300];\nint m,n;\nint vis[300];//\u8bb0\u5f55\u6bcf\u5f20\u684c\u5b50\u4e0a\u662f\u5426\u6709\u672c\u5355\u4f4d\u7684\u4eba\nint res[200][300];//\u7b54\u6848\u6570\u7ec4\ninline int dfs(int num,int i)//\u5904\u7406\u6bcf\u4e2a\u5355\u4f4d\u4ee3\u8868\u843d\u5ea7\u7684\u51fd\u6570\n{\n\tif(num==0) return 1;//\u4ee3\u8868\u5168\u90fd\u843d\u5ea7\u5219\u8fd4\u56de\n\tint rong=0;\n\tint index=0;\n\tfor(int j=1;j<=n;j++)//\u5faa\u73af\u4ee5\u627e\u5230\u684c\u5b50\u5269\u4f59\u5ea7\u4f4d\u7684\u6700\u5927\u503c\n\t{\n\t\tif(t[j].shu==t[j].wei || vis[j]) continue;//\u5982\u679c\u684c\u5b50\u5750\u6ee1\u6216\u8005\u5355\u4f4d\u6709\u4eba\u5750\u8fc7\u5c31\u627e\u4e0b\u4e00\u5f20\u684c\u5b50\n\t\tif(rong<(t[j].wei-t[j].shu))//\u5982\u679c\u5bb9\u91cf\u6bd4\u6700\u5927\u5bb9\u91cf\u5927\u5219\u66f4\u65b0\u6700\u5927\u5bb9\u91cf\u548c\u5b83\u7684\u4f4d\u7f6e\n\t\t{\n\t\t\trong=(t[j].wei-t[j].shu);\n\t\t\tindex=j;\n\t\t}\n\t}\n\tif(index==0) return 0;//\u5bb9\u91cf\u4e3a\u7a7a\u5219\u8bf4\u660e\u65e0\u6cd5\u5750\u4e0b\uff0c\u9898\u76ee\u4e0d\u6210\u7acb\n\tvis[index]=1;//\u843d\u5ea7\uff0c\u6539\u53d8\u684c\u5b50\u7684\u5bb9\u91cf\n\tt[index].shu++;\n\tres[i][index]++;//\u8bb0\u5f55\u7b54\u6848\uff0c\u8868\u793a\u7b2ci\u53f7\u5355\u4f4d\u7684\u7b2cindex\u7ae0\u684c\u5b50\u4e0a\u6709\u4eba\n\tint r=dfs(num-1,i);//\u770b\u672c\u5355\u4f4d\u4e0b\u4e00\u4e2a\u4eba\u80fd\u5426\u843d\u5ea7\n\treturn r;\n}\ninline void sc()//\u8f93\u51fa\u7b54\u6848\u51fd\u6570\n{\n\tprintf(\"1\\n\");\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint j=1;\n\t\tint num=0;\n\t\tfor(;j<=n;j++)\n\t\t{\n\t\t\tif(res[i][j]==0) continue;//\u5982\u679c\u684c\u5b50\u4e0a\u6ca1\u4eba\uff0c\u5c31\u770b\u4e0b\u4e00\u5f20\u684c\u5b50\n\t\t\tprintf(\"%d\",j);//\u6709\u4eba\u5c31\u6253\u5370\u684c\u5b50\u53f7\n\t\t\tif(++num!=danwei[i])printf(\" \");\n\t\t\telse printf(\"\\n\");\n\t\t}\n\t}\n}\ninline int A()//\u4f2a\u4e3b\u51fd\u6570\uff08\u63d0\u9ad8\u6548\u7387\u4f7f\u7528\uff0c\u6267\u884c\u65f6\u4ece\u8fd9\u91cc\u6267\u884c\uff09\n{\n\tscanf(\"%d %d\",&m,&n);//\u8f93\u5165m\u548cn\n\tfor(int i=1;i<=m;i++)//\u8f93\u5165\u6bcf\u4e2a\u5355\u4f4d\u7684\u4eba\u6570\n\t{\n\t\tscanf(\"%d\",&danwei[i]);\n\t}\n\tfor(int i=1;i<=n;i++)//\u8f93\u5165\u6bcf\u5f20\u684c\u5b50\u7684\u4f4d\u7f6e\u6570\n\t{\n\t\tscanf(\"%d\",&t[i].wei);\n\t}\n\tfor(int i=1;i<=m;i++)//\u5faa\u73af\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u4f4d\u4eba\u6570\u53bb\u627e\u5ea7\u4f4d\n\t{\n\t\tint r=dfs(danwei[i],i);//\u8c03\u7528\u5904\u7406\u843d\u5ea7\u7684\u51fd\u6570\n\t\tif(r==0)//\u6709\u4eba\u65e0\u6cd5\u843d\u5ea7\u5219\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\n\t\t{\n\t\t\tprintf(\"%d\\n\",r);\n\t\t\treturn 0;\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));//\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8fd0\u884c\u6e05\u7a7a\u684c\u5b50\u7684\u8bbf\u95ee\u8bb0\u5f55\n\t}\n\tsc();//\u8c03\u7528\u8f93\u51fa\u51fd\u6570\n\treturn 0;//\u51fd\u6570\u7ed3\u5c3e\n}\nint B=A();//\u8c03\u7528\u4f2a\u4e3b\u51fd\u6570\nint main()//\u771f\u7684\u6beb\u65e0\u5185\u5bb9\u7684\u4e3b\u51fd\u6570\n{\n\treturn 0; //\u51fd\u6570\u7ed3\u5c3e\n}\n\n```",
        "postTime": 1522484270,
        "uid": 82610,
        "name": "MelodyJiYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u5706\u684c\u95ee\u9898\uff0c\u867d\u7136\u5728\u7f51\u7edc\u6d4124\u9898\u91cc\uff0c\u53ef\u662f\u5e76\u4e0d\u9700\u8981\u8dd1\u7f51\u7edc\u6d41\uff0c\u53ea\u8981\u8d2a\u5fc3\u5373\u53ef\u3002\n\u672c\u4eba\u849f\u84bb\u4e0d\u4f1a\u8bc1\u660e\uff0c\u8bc1\u660e\u7565\u3002\u3002\u3002\u3002\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u53ea\u9700\u8981\u5f00\u4e8c\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e00\u4e2a\u5b58\u684c\u5b50\u7684\u5bb9\u91cf\u548c\u5f53\u524d\u5df2\u7528\u7a7a\u95f4\uff0c\u4e00\u4e2a\u5b58\u5355\u4f4d\u4eba\u7684\u6570\u91cf\u4e0e\u53bb\u5411\u3002\n\u5229\u7528\u81ea\u5e26\u7684sort\u5c06\u5355\u4f4d\u5927\u5c0f\u4e0e\u684c\u5b50\u5bb9\u91cf\u5927\u5c0f\u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u56e0\u4e3a\u8d8a\u5927\u7684\u5355\u4f4d\u9700\u8981\u8d8a\u591a\u7684\u684c\u5b50\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int size;\n    int now;\n    int pre;//\u7ed3\u6784\u4f53\u50a8\u5b58\u6392\u5e8f\u524d\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u6700\u540e\u8f93\u51fa\n}ta[1000];\nstruct edge{\n    int cap;\n    int go[5000];\n    int pre;//\u7ed3\u6784\u4f53\u50a8\u5b58\u6392\u5e8f\u524d\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u6700\u540e\u8f93\u51fa\n}uni[300];\nbool cmp1(node a,node b)\n{\n    return a.size>b.size;\n}\nbool cmp2(edge a,edge b)\n{\n    return a.cap>b.cap;//\u7531\u5927\u5230\u5c0f\u6392\u5927\u5c0f\uff0c\u5bb9\u91cf\n}\nbool cmp3(edge a,edge b)\n{\n    return a.pre<b.pre;\n}\nint n,m;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>uni[i].cap;\n        uni[i].pre=i;//\u8bb0\u5f55\u4f4d\u7f6e\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cin>>ta[i].size;\n        ta[i].pre=i;//\u8bb0\u5f55\u4f4d\u7f6e\n    }\t\n    int k=1;\n    sort(uni+1,uni+n+1,cmp2);\n    sort(ta+1,ta+1+m,cmp1);//\u6392\u5e8f\n    for(int i=1;i<=n;i++)//\u5faa\u73af\u5355\u4f4d\n    {\n        int l=0;//\u5f53\u524d\u5355\u4f4d\u53ef\u4ee5\u6ee1\u8db3\u7684\u4eba\u6570\n        for(int j=1;l<uni[i].cap&&j<=m;j++)\n        {\n            \n            if(ta[j].now==ta[j].size)\n            continue;//\u684c\u5b50\u6ee1\u4e86\u5c31\u5f80\u540e\u627e\u6709\u7a7a\u7684\n            uni[i].go[++l]=j;ta[j].now++;//\u8bb0\u5f55\u53bb\u5411\uff0c\u5f53\u524d\u684c\u5b50\u5750\u7684\u4eba\u6570++\t\t\n        }\n        if(l<uni[i].cap)//\u5982\u679c\u65e0\u6cd5\u6ee1\u8db3\u5355\u4f4d\uff0c\u9000\u51fa\n        {\n            cout<<0;return 0;\n        }\n    }\n    sort(uni+1,uni+n+1,cmp3);//\u4ee5\u539f\u5148\u987a\u5e8f\u6392\u5355\u4f4d\uff0c\u65b9\u4fbf\u8f93\u51fa\n    cout<<1<<endl;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=uni[i].cap;j++)\n        //\u4ece1-n\u8f93\u51fa\u5355\u4f4d\u53bb\u5411\n        cout<<ta[uni[i].go[j]].pre<<\" \";//\u8f93\u51fa\u684c\u5b50\u539f\u5148\u4f4d\u7f6e\n        cout<<endl;\n    }\n}\n```\n",
        "postTime": 1522128727,
        "uid": 60410,
        "name": "\u8fdd\u89c4\u7528\u6237\u540dcVn1I&r!",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": " ### \u57fa\u672c\u89e3\u6cd5\u697c\u4e0b\u90fd\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7ed9\u51fa\u53ef\u884c\u89e3\u7684\u65b9\u6cd5\n\n\u57fa\u4e8edinic,\u7528to[ i ][ j ]\u8868\u793ai\u53f7\u5355\u4f4d\u662f\u5426\u6709\u4eba\u5750\u5728j\u53f7\u684c\u4e0a\n\n\u7136\u540e\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u662f\u7531\u5355\u4f4d\u6307\u5411\u684c\u5b50\uff0c\u90a3\u5c31\u4ee4to[u][v]=1;\n\n\u76f8\u5bf9\u7684\uff0c\u5982\u679c\u662f\u7531\u684c\u5b50\u6307\u5411\u5355\u4f4d\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u201c\u53cd\u6094\u201d\u8ba9\u8be5\u5355\u4f4d\u7684\u4eba\u5750\u8fd9\u5f20\u684c\u5b50\uff0c\u56e0\u6b64\u8981\u8ba9to[v][u]=1(\u6ce8\u610f\u987a\u5e8f\u4e0d\u80fd\u53cd\uff0c\u8fd9\u65f6\u5019u\u624d\u662f\u684c\u5b50)\u3002\n\n\u6700\u540eO(MN)\u5730\u626b\u4e00\u904d\uff0c\u82e5to[ i ][ j ]==1\u5c31\u8f93\u51fa\n```cpp\n#include<iostream>\n#include<cstdio>\n#define N 800\n#define M 300300\n#define INF 1000010000\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define REP(u) for(int i=hd[u],v=e[i].v,c=e[i].c;i;i=e[i].n,v=e[i].v,c=e[i].c)\nusing namespace std;\nint n,k,c,u,num,goal,sum,s,t,to[N][N],l,r,q[M],dep[N];\nstruct edge{int n,v,c;}e[M];\nint hd[N],fl=1;\nvoid add(int u,int v,int c){e[++fl].v=v,e[fl].c=c,e[fl].n=hd[u],hd[u]=fl;} \nbool bfs(int s,int t){\n\tFOR(i,1,t) dep[i]=-1;\n\tl=r=1,q[r++]=s;\n\twhile(l<r){\n\t\tu=q[l++];\n\t\tREP(u)\n\t\t    if(c>0 && dep[v]==-1)\n\t\t   \t    dep[v]=dep[u]+1,q[r++]=v;\t       \n\t}\n\treturn dep[t]!=-1;\n}\nint dfs(int u,int exp){\n\tif(u==t) return exp;\n\tint flw=0,tmp=0;\n\tREP(u){\n\t\tif(dep[v]==dep[u]+1 && c>0){\n\t\t\ttmp=dfs(v,min(exp,c));\n\t\t    if(!tmp)continue;\n\t\t    if(u<=k && k<v) to[u][v-k]=1;\n\t\t    if(u>k && k>=v) to[v][u-k]=0;\n\t\t    flw+=tmp,exp-=tmp;\n\t\t    e[i].c-=tmp,e[i^1].c+=tmp;\n\t\t    if(!exp)break;\n\t\t}\n\t}\n\treturn flw;\n}\nvoid dinic(int s,int t){while(bfs(s,t)) goal-=dfs(s,INF);}\nint main(){\n\tscanf(\"%d%d\",&k,&n),s=0,t=n+1+k;\n\tFOR(i,1,k) scanf(\"%d\",&c),add(s,i,c),add(i,s,0),goal+=c;\n\tFOR(i,1,n) scanf(\"%d\",&c),add(i+k,t,c),add(t,i+k,0);\n\tFOR(i,1,k)\n\t    FOR(j,k+1,k+n) add(i,j,1),add(j,i,0);\n\tdinic(s,t);\n\tif(goal) printf(\"0\");\n\telse{\n\t\tprintf(\"1\\n\");\n\t\tFOR(i,1,k){\n\t\t\tFOR(j,1,n)\n\t\t\t    if(to[i][j]==1) printf(\"%d \",j);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1521875649,
        "uid": 62267,
        "name": "BJpers2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "> \u4f20\u9001\u95e8 [$\\looparrowright$](https://www.luogu.com.cn/problem/P3254)  \n\n## \u9898\u76ee\u63cf\u8ff0  \n&emsp;&emsp;\u6709\u6765\u81ea $m$ \u4e2a\u4e0d\u540c\u5355\u4f4d\u7684\u4ee3\u8868\u53c2\u52a0\u4e00\u6b21\u56fd\u9645\u4f1a\u8bae\u3002\u7b2c $i$ \u4e2a\u5355\u4f4d\u6d3e\u51fa\u4e86 $r_i$ \u4e2a\u4ee3\u8868\u3002  \n&emsp;&emsp;\u4f1a\u8bae\u7684\u9910\u5385\u5171\u6709 $n$ \u5f20\u9910\u684c\uff0c\u7b2c $i$ \u5f20\u9910\u684c\u53ef\u5bb9\u7eb3 $c_i$ \u4e2a\u4ee3\u8868\u5c31\u9910\u3002  \n&emsp;&emsp;\u4e3a\u4e86\u4f7f\u4ee3\u8868\u4eec\u5145\u5206\u4ea4\u6d41\uff0c\u5e0c\u671b\u4ece\u540c\u4e00\u4e2a\u5355\u4f4d\u6765\u7684\u4ee3\u8868\u4e0d\u5728\u540c\u4e00\u4e2a\u9910\u684c\u5c31\u9910\u3002\u8bf7\u7ed9\u51fa\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u4ee3\u8868\u5c31\u9910\u65b9\u6848\u3002  \n## \u8f93\u5165\u683c\u5f0f  \n&emsp;&emsp;\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u7528\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u4ee3\u8868\u5355\u4f4d\u7684\u4e2a\u6570 $m$ \u548c\u9910\u684c\u7684\u4e2a\u6570 $n$\u3002  \n&emsp;&emsp;\u7b2c\u4e8c\u884c\u6709 $m$ \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u7b2c $i$ \u4e2a\u6574\u6570\u4ee3\u8868\u7b2c $i$ \u4e2a\u5355\u4f4d\u7684\u4ee3\u8868\u4eba\u6570 $r_i$\u3002  \n&emsp;&emsp;\u7b2c\u4e09\u884c\u6709 $n$ \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570\uff0c\u7b2c $i$ \u4e2a\u6574\u6570\u4ee3\u8868\u7b2c $i$ \u5f20\u9910\u684c\u80fd\u5bb9\u7eb3\u7684\u4eba\u6570 $c_i$\u3002  \n## \u8f93\u51fa\u683c\u5f0f  \n&emsp;&emsp;\u672c\u9898\u5b58\u5728 **Special Judge**\u3002  \n&emsp;&emsp;\u8bf7\u8f93\u51fa\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684\u5c31\u9910\u65b9\u6848\uff0c\u82e5\u5b58\u5728\uff0c\u8bf7\u7ed9\u51fa\u4efb\u610f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u3002  \n&emsp;&emsp;\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u975e $0$ \u5373 $1$ \u7684\u6574\u6570\uff0c\u82e5\u5b58\u5728\u65b9\u6848\u5219\u8f93\u51fa $1$\uff0c\u5426\u5219\u8f93\u51fa $0$\u3002  \n&emsp;&emsp;\u82e5\u5b58\u5728\u65b9\u6848\uff0c\u5219\u5bf9\u4e8e\u7b2c $2$ \u5230\u7b2c $(m + 1)$ \u884c\uff0c\u5728\u7b2c $(i + 1)$ \u884c\u8f93\u51fa $r_i$ \u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u7b2c $i$ \u4e2a\u5355\u4f4d\u7684\u4ee3\u8868\u5c31\u9910\u7684\u9910\u684c\u7f16\u53f7\u3002  \n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b  \n### \u8f93\u5165 #1  \n> 4 5\n> 4 5 3 5\n> 3 5 2 6 4\n\n### \u8f93\u51fa #1\n> 1\n> 1 2 4 5\n> 1 2 3 4 5\n> 2 4 5\n> 1 2 3 4 5\n\n## \u8bf4\u660e/\u63d0\u793a  \n### \u6570\u636e\u89c4\u6a21\u4e0e\u7ea6\u5b9a  \n&emsp;&emsp;\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 $1 \\leqslant m \\leqslant 150$\uff0c$1 \\leqslant n \\leqslant 270$\uff0c$1 \\leqslant r_i, c_i \\leqslant 10^3$\u3002  \n### \u63d0\u793a  \n&emsp;&emsp;\u8bf7\u6ce8\u610f\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5148\u8bfb\u5165 $m$ \u518d\u8bfb\u5165 $n$\u3002   \n## \u5206\u6790  \n&emsp;&emsp;\u6bcf\u4e2a\u5355\u4f4d\u548c\u6bcf\u5f20\u9910\u684c\u5404\u81ea\u90fd\u76f8\u4e92\u72ec\u7acb\uff0c\u53ea\u6709\u5355\u4f4d\u7684\u4ee3\u8868\u548c\u9910\u684c\u4f1a\u4ea7\u751f\u8054\u7cfb\uff1b\u8981\u5c06 $m$ \u4e2a\u5355\u4f4d\u7684\u4ee3\u8868\u5206\u914d\u5230 $n$ \u5f20\u9910\u684c\u4e0a\uff0c\u663e\u7136\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u95ee\u9898\u3002    \n&emsp;&emsp;\u4e8c\u5206\u56fe\u5de6\u90e8\u4e3a\u8868\u793a\u5355\u4f4d\u7684\u8282\u70b9\uff0c\u7f16\u53f7\u4e3a $1\\sim m$\uff1b\u53f3\u90e8\u4e3a\u8868\u793a\u9910\u684c\u7684\u8282\u70b9\uff0c\u7f16\u53f7\u4e3a $m+1\\sim m+n$\u3002\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u8981\u5c06\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u95ee\u9898\u8f6c\u5316\u4e3a\u7f51\u7edc\u6700\u5927\u6d41\u95ee\u9898\u3002\u8bbe\u7acb\u8d85\u7ea7\u6e90\u70b9 $s$\uff0c\u8d85\u7ea7\u6c47\u70b9 $t$\u3002$s$ \u5411 $1\\sim m$ \u7684\u8282\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5404\u81ea\u5355\u4f4d\u7684\u4ee3\u8868\u4eba\u6570 $r_i$\uff0c\u73b0\u5b9e\u610f\u4e49\u662f\u6bcf\u4e2a\u5355\u4f4d\u81f3\u591a\u6709 $r_i$ \u4e2a\u4eba\u80fd\u5206\u5230\u9910\u684c\uff1b$m+1\\sim m+n$ \u7684\u8282\u70b9\u5411 $t$ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5404\u4e2a\u9910\u684c\u7684\u5bb9\u7eb3\u4eba\u6570 $c_i$\uff0c\u73b0\u5b9e\u610f\u4e49\u662f\u6bcf\u4e2a\u9910\u684c\u81f3\u591a\u5bb9\u7eb3 $c_i$ \u4eba\u5c31\u9910\uff1b$1\\sim m$ \u5404\u4e2a\u70b9\u90fd\u5411 $m+1\\sim m+n$ \u7684\u8282\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u6bcf\u4e2a\u5355\u4f4d\u8282\u70b9\u90fd\u4f1a\u5411 $n$ \u4e2a\u9910\u684c\u8282\u70b9\u8fde\u8fb9\uff0c\u603b\u5171\u5efa\u7acb $mn$ \u6761\u8fb9\uff0c\u901a\u8fc7\u9650\u5236\u5bb9\u91cf\u4e3a $1$\uff0c\u5c31\u9650\u5236\u4e86\u6bcf\u5f20\u9910\u684c\u4e0d\u53ef\u6709\u76f8\u540c\u5355\u4f4d\u7684\u4eba\u540c\u65f6\u5c31\u9910\u7684\u6761\u4ef6\u3002\u7531\u4e8e\u901a\u8fc7\u8282\u70b9\u4e4b\u95f4\u5efa\u8fb9\uff0c\u5df2\u7ecf\u6ee1\u8db3\u9898\u76ee\u5339\u914d\u6761\u4ef6\uff1a\u6bcf\u4e2a\u5355\u4f4d\u6709 $r_i$ \u4e2a\u4ee3\u8868\uff0c\u6bcf\u5f20\u9910\u684c\u81f3\u591a\u5bb9\u7eb3 $c_i$ \u4eba\uff0c\u540c\u4e00\u4e2a\u5355\u4f4d\u7684\u4e0d\u540c\u4ee3\u8868\u4e0d\u80fd\u5206\u914d\u5230\u540c\u4e00\u5f20\u9910\u684c\u3002\u56e0\u6b64\uff0c\u7f51\u7edc\u6700\u5927\u6d41\u81f3\u591a\u7b49\u4e8e\u4ee3\u8868\u7684\u603b\u4eba\u6570\u3002  \n![\u6d1b\u8c37 P3254.png](https://i.loli.net/2020/07/27/eyxOcmlu18LkzBJ.png) \n&emsp;&emsp;\u8fd0\u884c\u4e00\u6b21 $\\text{Dinic}$ \u7b97\u6cd5\uff0c\u5373\u53ef\u6c42\u5f97\u7f51\u7edc\u6700\u5927\u6d41 $maxflow$\u3002\u82e5\u6700\u5927\u6d41\u5c0f\u4e8e\u4ee3\u8868\u603b\u4eba\u6570\uff0c\u5219\u4e0d\u5b58\u5728\u5408\u6cd5\u7684\u5339\u914d\u65b9\u6848\u3002\u82e5 $maxflow$ \u7b49\u4e8e\u4ee3\u8868\u603b\u4eba\u6570\uff0c\u8003\u8651\u8f93\u51fa\u5339\u914d\u65b9\u6848\u3002\u7531\u4e8e\u5355\u4f4d\u8282\u70b9\u548c\u9910\u684c\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u5bb9\u91cf\u81f3\u591a\u4e3a $1$\uff0c\u56e0\u6b64\u8fb9\u4e0a\u53ea\u4f1a\u5b58\u5728\u96f6\u6d41\u548c\u6ee1\u6d41\u4e24\u79cd\u72b6\u6001\uff1b\u82e5 $i$ \u6307\u5411 $j$ \u7684\u8fb9\u5269\u4f59\u5bb9\u91cf\u4e3a $0$\uff08$i,j\\in\\mathbb{N^\\ast}$\uff0c\u4e14 $1\\leqslant i\\leqslant m$\uff0c$1\\leqslant j-m\\leqslant n$\uff09\uff0c\u8bf4\u660e\u8be5\u8fb9\u6ee1\u6d41\uff0c\u7b2c $i$ \u4e2a\u5355\u4f4d\u6709\u4e00\u4eba\u88ab\u5206\u914d\u5230 $j-m$ \u53f7\u9910\u684c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e\u5de6\u90e8\u70b9\u7684\u51fa\u8fb9\uff0c\u82e5\u8be5\u8fb9\u5269\u4f59\u5bb9\u91cf\u4e3a $0$\uff0c\u5219\u8f93\u51fa\u8be5\u8fb9\u7684\u5165\u70b9\u3002   \n## \u4ee3\u7801  \n```cpp\n/******************************************************************\nCopyright: 11D_Beyonder All Rights Reserved\nAuthor: 11D_Beyonder\nProblem ID: \u6d1b\u8c37 P3254\nDate: 7/27/2020 \nDescription: Maximum Flow\n*******************************************************************/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=503;\nconst int inf=0x3f3f3f3f;\nstruct E\n{\n\tint to;\n\tint cap;\n\tint Next=-1;\n}edge[N*N<<1];\nint head[N],tot;\nint s,t;\nint depth[N];\nint m,n;//\u5355\u4f4d\u4e2a\u6570 \u9910\u684c\u4e2a\u6570\nint in;\nvoid init();\ninline void add_edge(int,int,int);\nbool bfs();\nint dfs(int x,int flow);\nint Dinic();\nint main()\n{\n\tint i,j;\n\tcin>>m>>n;\n\tinit();\n\t//\u4e0e\u8d85\u7ea7\u6e90\u70b9\u8fde\u8fb9\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint r;\n\t\tscanf(\"%d\",&r);\n\t\tadd_edge(s,i,r);\n\t\tin+=r;//\u7edf\u8ba1\u4eba\u6570\n\t}\n\t//\u5de6\u53f3\u4e24\u90e8\u4e4b\u95f4\u8fde\u8fb9\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tadd_edge(i,j+m,1);\n\t\t}\n\t}\n\t//\u4e0e\u8d85\u7ea7\u6c47\u70b9\u8fde\u8fb9\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tint c;\n\t\tscanf(\"%d\",&c);\n\t\tadd_edge(i+m,t,c);\n\t}\n\tif(Dinic()==in)\n\t{\n\t\tputs(\"1\");\n\t\t//\u679a\u4e3e\u5de6\u90e8\u7684\u5355\u4f4d\n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\t//\u8bbf\u95ee\u53f3\u90e8\u8282\u70b9\n\t\t\tfor(j=head[i];~j;j=edge[j].Next)\n\t\t\t{\n\t\t\t\tif(!edge[j].cap)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d \",edge[j].to-m);\n\t\t\t\t}\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\telse puts(\"0\");\n\treturn 0;\n}\nvoid init()\n{\n\ttot=1;\n\tmemset(head,-1,sizeof(head));\n\ts=0;\n\tt=n+m+1;\n}\ninline void add_edge(int u,int v,int cap)\n{\n\ttot++;\n\tedge[tot].to=v;\n\tedge[tot].cap=cap;\n\tedge[tot].Next=head[u];\n\thead[u]=tot;\n\t//\u5efa\u7acb\u53cd\u8fb9\n\ttot++;\n\tedge[tot].to=u;\n\tedge[tot].cap=0;\n\tedge[tot].Next=head[v];\n\thead[v]=tot;\n}\nbool bfs()\n{\n\tmemset(depth,0,sizeof(depth));\n\tqueue<int>q;\n\tq.push(s);\n\tdepth[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(register int i=head[x];~i;i=edge[i].Next)\n\t\t{\n\t\t\tint y=edge[i].to;\n\t\t\t//\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6784\u5efa\u5206\u5c42\u56fe\n\t\t\tif(edge[i].cap&&!depth[y])\n\t\t\t{\n\t\t\t\tq.push(y);\n\t\t\t\tdepth[y]=depth[x]+1;\n\t\t\t\tif(y==t) return 1;//\u6c47\u70b9\u53ef\u8fbe\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int x,int flow)//\u5f53\u524d\u8282\u70b9 \u5f53\u524d\u6d41\u91cf\n{\n\t//dfs \u8fd4\u56de\u6b8b\u91cf\u7f51\u7edc\u4e0a\u53ef\u589e\u5e7f\u7684\u6d41\u91cf\n\tif(x==t) return flow;\n\tint rest=flow;//rest \u5269\u4f59\u6d41\u91cf\n\tint temp;\n\tfor(register int i=head[x];~i&&rest;i=edge[i].Next)\n\t{\n\t\tint y=edge[i].to;\n\t\tif(edge[i].cap&&depth[y]==depth[x]+1)\n\t\t{\n\t\t\ttemp=dfs(y,min(rest,edge[i].cap));\n\t\t\tif(!temp) depth[y]=0;//\u526a\u679d \u53bb\u6389\u589e\u5e7f\u5b8c\u6bd5\u7684\u70b9\n\t\t\tedge[i].cap-=temp;\n\t\t\tedge[i^1].cap+=temp;\n\t\t\trest-=temp;\n\t\t}\n\t}\n\treturn flow-rest;\n}\nint Dinic()\n{\n\tint maxflow=0;\n\twhile(bfs()) maxflow+=dfs(s,inf);\n\treturn maxflow;\n}\n```\n## \u540e\u8bb0  \n&emsp;&emsp;\u8fb9\u7684\u6570\u91cf $tot$ \u5fc5\u987b\u521d\u59cb\u5316\u4e3a $1$\u3002  ",
        "postTime": 1595856972,
        "uid": 253240,
        "name": "11D_Beyonder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\uff1a\n\u6709n\u4e2a\u5355\u4f4d\uff0c\u6bcf\u4e2a\u5355\u4f4dai\u4eba\uff0c\u6709m\u5f20\u684c\u5b50\uff0c\u6bcf\u5f20bi\u4e2a\u4eba\uff0c\u6c42\u4e00\u79cd\u6bcf\u684c\u6ca1\u6709\u4e24\u4e2a\u540c\u4e00\u5355\u4f4d\u4eba\u7684\u65b9\u6848\n\n### \u5206\u6790\uff1a\n\u770b\u5230\u51e0\u767e\u7684\u8303\u56f4\uff0c\u770b\u5230\u4eba\u4e0e\u4f4d\u7f6e\u7684\u9650\u5236\uff0c\u770b\u5230\u65b9\u6848\u8f93\u51fa\uff0c\u8fd9\u4e9b\u90fd\u6307\u5411\u4e00\u4e2a\u4e1c\u897f\u2014\u2014\u7f51\u7edc\u6d41\n\n### \u5efa\u56fe\uff1a\n1.\u6211\u4eec\u77e5\u9053\uff0c\u5355\u4f4d\u548c\u684c\u4e0d\u662f\u4e00\u4e2a\u4e1c\u897f\uff0c\u6240\u4ee5\u5927\u80c6\u5206\u5c422\u7ec4\n\n2.\u7531\u4e8e\u6bcf\u5f20\u684c\u5b50\u6bcf\u5355\u4f4d\u53ea\u80fd\u57501\u4e2a\uff0c\u5355\u4f4d\u4e0e\u684c\u4e4b\u95f4\u8fde\u4e00\u67611\u7684\u8fb9\uff0c\u8868\u793a1\u4e2a\u4eba\u57501\u5f20\u684c\u76841\u4e2a\u4f4d\u7f6e\n\n3.\u6bcf\u4e2a\u5355\u4f4d\u53ea\u80fd\u8ba9ai\u4e2a\u4eba\u53bb\uff0c\u6240\u4ee5\u4eces\u8fde1\u6761ai\u7684\u8fb9\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u591a\u5360\n\n4.\u6bcf\u5f20\u684c\u5b50\u53ea\u80fd\u5750bi\u4e2a\u4eba\uff0c\u6240\u4ee5\u5411t\u8fde1\u6761bi\u7684\u8fb9\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u8d85\n\n\uff08\u4e0b\u9762a\u6307\u5355\u4f4d\uff0cb\u6307\u5706\u684c\uff09\n\n------------\n\u4ee5\u4e0a\u90fd\u662f\u76f8\u5bf9\u7b80\u5355\u7684\uff0c\u6211\u4e5f\u5c31\u8bb2\u8fd9\u4e48\u591a\u4e86\uff0c\u5b9e\u5728\u4e0d\u7406\u89e3\u53ef\u4ee5\u591a\u5199\u5199\u4e8c\u5206\u56fe\u7684\u6700\u5927\u6d41\uff0c\u6bd4\u65b9\u8bf4\u7528dinic\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\uff0c\u6109\u5feb\u7684\u8dd1\u6700\u5927\u6d41\u4e86\n\n\u7b49\u7b49\uff0c\u7136\u540e\u5462\uff0c\u6700\u5927\u6d41\u4e4b\u540e\u5462\uff0c\u6211\u4eec\u8981\u7684\u662f\u65b9\u6848\u554a\uff01\uff01\uff01\n\n## \u65b9\u6848\uff1a\n1.\u6211\u4eec\u5b8c\u6210\u6700\u5927\u6d41\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6b8b\u4f59\u7f51\u7edc\uff0c\u5728\u6b8b\u4f59\u7f51\u7edc\u4e0a\u5176\u5b9e\u6709\u5f88\u591a\u4fe1\u606f\u3002\n\n2.\u6211\u4eec\u8003\u8651\uff0c\u5728\u653e\u7f6e\u4e00\u4e2a\u4eba\u7684\u65f6\u5019\uff0c\u5728\u56fe\u4e0a\u5c31\u662f\uff0c\u4eces\u5230a\u5230b\u5230t\uff0c\u6d41\u4e86\u4e00\u67611\u7684\u6d41\uff0c\u540c\u65f6\u5b83\u7684\u53cd\u5411\u8fb9\u6709\u4e86\u6d41\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8bbf\u95ee\u4e00\u4e0b\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u662f\u5426\u88ab\u5b89\u7f6e\u5728\u8fd9\u4e86\n\n### \u65e0\u89e3\uff1a\n\u5f53\u4f60\u5174\u9ad8\u91c7\u70c8\u7684\u4ea4\u4e86\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1aWA90\uff0c\u4f60\u6210\u529f\u9057\u5fd8\u4e86\u65e0\u89e3\n\n\u5bf9\u4e8e\u65e0\u89e3\uff0c\u5176\u5b9e\u5c31\u662f\u6700\u5927\u6d41\u5c0f\u4e8e\u4eba\u6570\u548c\uff1a\n\n\u6211\u4eec\u6700\u5927\u6d41\u7684\u9650\u5236\u4e3b\u8981\u6765\u81eaab\u4e24\u7aef\uff0c\u6700\u5927\u6d41==b\u548c\u65f6\uff0c\u8bf4\u660e\u6700\u5927\u6d41\u53d7b\u9650\u5236\uff0c\u5373\u53d7\u4f4d\u7f6e\u9650\u5236\uff0c\u5f53\u6700\u5927\u6d41\u5c0f\u4e8e\u4eba\u6570\u548c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u53d7\u5706\u684c\u5f71\u54cd\uff0c\u4eba\u6700\u4e0d\u4e0b\u4e86\uff0c\u65e0\u89e3\n\n------------\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define il inline\nusing namespace std;\nconst int N = 2e5+10;\nint n,m;\nstruct edge\n{\n\tint next,from,to,w;\n}p[N];\nint head[N],num;\nil void ad(int x,int y,int w){p[++num]=edge{head[x],x,y,w};head[x]=num;}\nil void add(int x,int y,int w){ad(x,y,w);ad(y,x,0);}\nil int qfj(int x){return ((x-1)^1)+1;}\nint dep[N];\nint s,t,mxfl;\nbool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tq.push(s);\n\tdep[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=p[i].next)\n\t\t{\n\t\t\tint v=p[i].to;\n\t\t\tif(!dep[v]&&p[i].w)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nint dfs(int u,int limit)\n{\n\tif(u==t||!limit) return limit;\n\tint w,flow=0;\n\tfor(int i=head[u];i;i=p[i].next)\n\t{\n\t\tint v=p[i].to;\n\t\tif(dep[v]==dep[u]+1&&(w=dfs(v,min(limit,p[i].w))))\n\t\t{\n\t\t\tflow+=w;\n\t\t\tp[i].w-=w;\n\t\t\tp[qfj(i)].w+=w;\n\t\t\tlimit-=w;\n\t\t\tif(!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\nint g[333][333],sm;\nint main() \n{\n\tcin>>n>>m;\n\ts=0;t=n+m+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(x>m)\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\treturn 0;\n\t\t}\n\t\tadd(s,i,x);\n\t\tsm+=x;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tadd(i+n,t,x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tadd(i,j+n,1);\n\t\t\tg[i][j]=num; //\u8bb0\u5f55\u53cd\u5411\u8fb9\u5e8f\u53f7 \n\t\t}\n\t}\n\twhile(bfs()) mxfl+=dfs(s,1e9);//dinic \n//\tprintf(\"%d\\n\",mxfl);\n//\tfor(int i=1;i<=num;i+=2) printf(\"%d %d %d %d\\n\",i,p[i].from,p[i].to,p[i].w);\n\tif(mxfl<sm) //\u4f4d\u7f6e\u4e0d\u591f\u65e0\u89e3 \n\t{\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\tputs(\"1\");\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t//\tprintf(\"%d %d %d %d %d %d\\n\",i,j,g[i][j],p[g[i][j]].from,p[g[i][j]].to,p[g[i][j]].w);\n\t\t\tif(p[g[i][j]].w) printf(\"%d \",j); //\u53cd\u5411\u8fb9\u6709\u5bb9\u91cf\uff0c\u5339\u914d \n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1591961122,
        "uid": 11392,
        "name": "shenbear",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11157511.html)\n\n\u300c\u7f51\u7edc\u6d41 24 \u9898\u300d\u5706\u684c\u805a\u9910\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P3254)\n\n\u547c\u547c\u547c.\n\n\u5148\u6765\u5206\u6790\u4e0b\u9898\u610f\u5427.\n\n\u6709$m$\u4e2a\u5355\u4f4d,\u6bcf\u4e2a\u5355\u4f4d\u6709$r_i$\u4e2a\u4eba,\u6709$n$\u5f20\u684c\u5b50,\u6bcf\u5f20\u684c\u5b50\u5750$c_i$\u4e2a\u4eba.\n\n\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8ba9\u6bcf\u5f20\u684c\u5b50\u4e0a\u7684\u4eba\u90fd\u5206\u5c5e\u4e8e\u4e0d\u540c\u7684\u5355\u4f4d,\u53ef\u4ee5\u7684\u8bdd\u7136\u540e\u8f93\u51fa\u4efb\u610f\u4e00\u4e2a\u7ec4\u5408\u65b9\u5f0f.\n\n\u8fd9\u6837\u7684\u8bdd\u5927\u81f4\u601d\u8def\u5c31\u51fa\u6765\u4e86,\u6bcf\u4e2a\u5355\u4f4d\u7684$r_i$\u4e2a\u4eba\u4e2d,\u6bcf\u4e2a\u4eba\u90fd\u8981\u5206\u5c5e\u5230\u4e0d\u540c\u7684\u684c\u5b50\u53bb.\n\n\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u753b\u6210\u8fd9\u6837\u7684\u56fe:\n\n![\u914d\u56fe1.png](https://i.loli.net/2019/07/09/5d243aaf751db35397.png)\n\n\u5de6\u96c6\u4e2d\u7684\u70b9\u53ef\u4ee5\u8fde\u5411\u53f3\u96c6\u4e2d\u7684\u6240\u6709\u70b9,\u4f46\u662f\u6709\u81ea\u8eab\u4eba\u6570\u7684\u9650\u5236.\n\n\u8fd9\u4e0d\u5c31\u662f\u4e2a\u88f8\u7684\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u4e86\u5417.\n\n~~\u4f46\u662f\u6211\u4e0d\u4f1a\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d.~~\n\n\u4e8e\u662f\u7528\u7f51\u7edc\u6d41\u6765\u5199.(~~\u62b1\u7d27\u6211\u7684\u7f51\u7edc\u6d41~~)\n\n\u7528\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9,\u8fde\u5411\u5de6\u96c6\u4e2d\u7684\u6240\u6709\u70b9,\u6d41\u91cf\u4e3a$r_i$.\u610f\u4e3a\u901a\u8fc7\u5de6\u96c6\u4e2d\u6d41\u7ecf$i$\u70b9\u7684\u6d41\u91cf\u4e0d\u80fd\u8d85\u8fc7$r_i$.\n\n\u518d\u628a\u53f3\u96c6\u4e2d\u7684\u6240\u6709\u70b9\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9,\u6d41\u91cf\u4e3a$c_i$.\u610f\u4e3a\u53f3\u96c6\u4e2d\u6d41\u7ecf$i$\u70b9\u7684\u6d41\u91cf\u4e0d\u80fd\u8d85\u8fc7$c_i$.\n\n\u7136\u540e\u628a\u5de6\u96c6\u548c\u53f3\u96c6\u7684\u70b9\u5168\u90e8\u8fde\u8d77\u6765,\u6d41\u91cf\u4e3a$1$.\u56e0\u4e3a\u4e00\u5f20\u684c\u5b50\u4e0d\u80fd\u5750$1$\u4e2a\u4ee5\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba.\n\n\u5982\u679c\u6d41\u6ee1\u7684\u8bdd,\u5c31\u8bf4\u660e\u6709\u89e3.\u5373\u6700\u5927\u6d41\u7b49\u4e8e\u6240\u6709\u5355\u4f4d\u7684\u4eba\u6570.\n\n\u7136\u540e\u904d\u5386\u5de6\u96c6\u4e2d\u7684\u70b9\u8fde\u5411\u7684\u6240\u6709\u8fb9,\u5982\u679c\u8fb9\u4e0a\u7684\u6d41\u91cf\u53d8\u4e3a\u4e86$0$(\u56e0\u4e3a\u5728Dinic\u8fc7\u7a0b\u4e2d\u4f1a\u628a\u6d41\u7ecf\u8fb9\u7684\u6d41\u91cf\u8f6c\u79fb\u5230\u6b8b\u91cf\u4e0a),\u5c31\u8bf4\u660e\u7ecf\u8fc7\u4e86\u8fd9\u6761\u8fb9,\u8f93\u51fa\u5373\u53ef~~\u79d1\u6280\u4e3a\u4e86\u6211~~.\n\n#\u4ee3\u7801\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iomanip>\n#include<queue>\n\n#define ll long long\n#define INF 2147483647\n#define debug(x) printf(\"bebug:%lld\\n\",x)\n\nusing namespace std;\n\nstruct edge\n{\n    ll to,flow,next;\n}e[1000010];\n\nqueue<ll>q;\n\nll size,m,n,start,end,cnt,ans;\nll head[1000010],dis[1000010],copy_[1000010];\nbool flag[1000010];\n\ninline void EdgeAdd(ll,ll,ll);\ninline void Dinic();\ninline bool bfs();\ninline ll dfs(ll,ll);\ninline void print(ll);\n\nsigned main(void)\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%lld%lld\",&m,&n);\n    start=0;\n    end=n+m+1;\n    for(ll _=1;_<=m;_++)\n    {\n        ll a;\n        scanf(\"%lld\",&a);\n        cnt+=a;\n        EdgeAdd(start,_,a);\n        EdgeAdd(_,start,0);\n        for(ll __=1;__<=n;__++)\n        {\n            EdgeAdd(_,__+m,1);\n            EdgeAdd(__+m,_,0);\n        }\n    }\n    for(ll _=1;_<=n;_++)\n    {\n        ll table;\n        scanf(\"%lld\",&table);\n        EdgeAdd(_+m,end,table);\n        EdgeAdd(end,_+m,0);\n    }\n    Dinic();\n    if(ans==cnt)\n    {\n        printf(\"1\\n\");\n        for(ll _=1;_<=m;_++)\n        {\n            print(_);\n            printf(\"\\n\");\n        }\n    }\n    else\n    {\n        printf(\"0\\n\");\n    }\nreturn 0;\n}\n\ninline void EdgeAdd(ll from,ll to,ll flow)\n{\n    e[size].to=to;\n    e[size].flow=flow;\n    e[size].next=head[from];\n    head[from]=size++;\n}\n\ninline void Dinic()\n{\n    while(bfs())\n    {\n        memcpy(copy_,head,sizeof(head));\n        ans+=dfs(start,INF);\n    }\n}\n\ninline bool bfs()\n{\n    memset(flag,false,sizeof(flag));\n    memset(dis,0,sizeof(dis));\n    q.push(start);\n    flag[start]=true;\n    while(q.empty()==false)\n    {\n        ll from=q.front();\n        q.pop();\n        for(ll _=head[from];_!=-1;_=e[_].next)\n        {\n            ll to=e[_].to;\n            ll flow_=e[_].flow;\n            if(flow_>0&&flag[to]==false)\n            {\n                dis[to]=dis[from]+1;\n                flag[to]=true;\n                q.push(to);\n            }\n        }\n    }\nreturn flag[end];\n}\n\ninline ll dfs(ll from,ll flow)\n{\n    if(from==end||flow==0)\n    {\n        return flow;\n    }\n    ll sum=0;\n    for(ll &_=copy_[from];_!=-1;_=e[_].next)\n    {\n        ll to=e[_].to;\n        ll flow_=e[_].flow;\n        if(flow_>0&&dis[to]==dis[from]+1)\n        {\n            ll f=dfs(to,min(flow_,flow-sum));\n            e[_].flow-=f;\n            e[_^1].flow+=f;\n            sum+=f;\n            if(sum==flow)return sum;\n        }\n    }\nreturn sum;\n}\n\ninline void print(ll from)\n{\n    for(ll _=head[from];_!=-1;_=e[_].next)\n    {\n        ll to=e[_].to;\n        ll flow_=e[_].flow;\n        if(flow_==0&&to>from)\n        {\n            printf(\"%lld \",to-m);//\u6ce8\u610f\u8fd9\u91cc\u51cf\u53bb\u5355\u4f4d\u6570,\u56e0\u4e3a\u4ee3\u8868\u684c\u5b50\u7684\u70b9\u7684\u7f16\u53f7\u662f\u5728\u4ee3\u8868\u5355\u4f4d\u7684\u70b9\u7684\u7f16\u53f7\u540e\u9762\u7684\n        }\n    }\n}\n\n```",
        "postTime": 1562832411,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u5efa\u6a21\uff1a\n\n1.\u4ece\u6e90\u70b9\u5411\u6bcf\u4e2a\u5355\u4f4d$x_i$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u662f\u8be5\u5355\u4f4d\u7684\u4eba\u6570\n\n2.\u4ece\u6bcf\u5f20\u9910\u684c$y_i$\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u662f\u8be5\u9910\u684c\u80fd\u5bb9\u7eb3\u7684\u4eba\u6570\n\n3.\u4ece\u6bcf\u4e2a\u5355\u4f4d$x_i$\u5411\u6bcf\u5f20\u9910\u684c$y_j$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\n\n\u5982\u679c\u6700\u5927\u6d41\u91cf\u7b49\u4e8e\u6240\u6709\u5355\u4f4d\u4eba\u6570\u4e4b\u548c\uff0c\u5219\u6709\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\n \n\u65b9\u6848\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u4f4d$x_i$\uff0c\u8be5\u5355\u4f4d\u5411$y$\u96c6\u5408\u8fde\u51fa\u7684\u6240\u6709\u6ee1\u6d41\u91cf\u8fb9\u5373\u4e3a\u8be5\u5355\u4f4d\u4eba\u5458\u7684\u5b89\u6392\u60c5\u51b5\uff08\u8bc1\u660e\u663e\u7136\n\n**Code:**\n\n```cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define cmax(a, b) ((a < b) ? b : a)\n#define cmin(a, b) ((a < b) ? a : b)\n#define sum(a, b, mod) ((a + b) % mod)\n\nconst int MaxN = 2e4 + 10;\nconst int MaxM = 5e5 + 10;\nconst int inf = (1 << 30);\n\nstruct edge\n{\n    int to, next, cap;\n};\n\nedge e[MaxM];\nint n, m, s = 20000, t = 20001, cnt = 1, ans;\nint head[MaxN], dep[MaxN], cur[MaxN], a[MaxN];\n\ninline void add(int u, int v, int c)\n{\n    ++cnt;\n    e[cnt].to = v;\n    e[cnt].next = head[u];\n    e[cnt].cap = c;\n    head[u] = cnt;\n}\n\ninline void add_edge(int u, int v, int c) { add(u, v, c), add(v, u, 0); }\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\ninline int bfs()\n{\n    memset(dep, 0, sizeof(dep));\n    memcpy(cur, head, sizeof(head));\n    std::queue<int> q;\n    dep[s] = 1;\n    q.push(s);\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        for (int i = head[u]; i; i = e[i].next)\n        {\n            int v = e[i].to, c = e[i].cap;\n            if (dep[v] || !c)\n                continue;\n            dep[v] = dep[u] + 1;\n            q.push(v);\n        }\n    }\n    return dep[t];\n}\n\ninline int dinic(int u, int flow)\n{\n    if (u == t)\n        return flow;\n    int rest = flow;\n    for (int i = cur[u]; i && (flow - rest < flow); i = e[i].next)\n    {\n        int v = e[i].to, c = e[i].cap;\n        if (dep[v] != dep[u] + 1 || !c)\n            continue;\n        int k = dinic(v, cmin(rest, c));\n        if (!k)\n            dep[v] = dep[u] + 1;\n        else\n        {\n            e[i].cap -= k;\n            e[i ^ 1].cap += k;\n            rest -= k;\n        }\n    }\n    if (flow - rest < flow)\n        dep[u] = -1;\n    return flow - rest;\n}\n\ninline void solve()\n{\n    int now = 0;\n    while (bfs())\n        while ((now = dinic(s, inf)))\n            ans += now;\n}\n\nint main()\n{\n    int x, tmp = 0;\n    m = read(), n = read();\n    for (int i = 1; i <= m; i++)\n        x = read(), add_edge(s, i, x), tmp += x;\n    for (int i = 1; i <= n; i++)\n        x = read(), add_edge(i + m, t, x);\n    for (int i = 1; i <= m; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            add_edge(i, j + m, 1);\n    }\n    solve();\n    if (ans != tmp)\n        return 0 * printf(\"0\");\n    printf(\"1\\n\");\n    for (int i = 1; i <= m; i++)\n    {\n        int h = head[i];\n        while (h)\n        {\n            if (!e[h].cap)\n                printf(\"%d \", e[h].to - m);\n            h = e[h].next;\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1560076115,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u662f\u7f51\u7edc\u6d4124\u9898\u91cc\u6700\u7b80\u5355\u7684\u4e00\u9053\uff0c\u6211\u4eec\u4ece\u8fd9\u91cc\u5f00\u59cb\n\n\u867d\u7136\u662f\u7f51\u7edc\u6d4124\u9898\u4e4b\u4e00\uff0c\u4f46\u53ef\u4ee5\u4e0d\u7528\u7f51\u7edc\u6d41...\n\n\u672c\u9898\u91c7\u7528\u8d2a\u5fc3\u5373\u53ef\n\n\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u601d\u60f3\uff1a\u5728\u5206\u914d\u6bcf\u4e00\u7ec4\u65f6\uff0c\u6211\u4eec\u90fd\u5e94\u5f53\u4f18\u5148\u5206\u914d\u7ed9\u5f53\u524d\u53ef\u5bb9\u7eb3\u4eba\u6570\u66f4\u591a\u7684\u684c\n\n\u8bc1\u660e\uff1a\u8fd9\u6837\u505a\u663e\u7136\u80fd\u6700\u5927\u9650\u5ea6\u7684\u4fdd\u7559\u53ef\u4ee5\u7528\u7684\u684c\uff0c\u5982\u679c\u8fd9\u6837\u505a\u90fd\u4e0d\u5408\u6cd5\uff0c\u90a3\u4e48\u5176\u4ed6\u7b56\u7565\u4e00\u5b9a\u4e0d\u5408\u6cd5\n\n\u90a3\u4e48\u6211\u4eec\u7528\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5373\u53ef\n\n```\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nstruct node\n{\n    int num;\n    int idd;\n    friend bool operator < (node x,node y)\n    {\n        return x.num<y.num;\n    }\n}p[155],q[275];\npriority_queue <node> M;\nvector <int> v[155];\nbool cmp(node x,node y)\n{\n    return x.num>y.num;\n}\nint n,m;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&p[i].num),p[i].idd=i;\n    for(int i=1;i<=m;i++)scanf(\"%d\",&q[i].num),q[i].idd=i,M.push(q[i]);\n    sort(p+1,p+n+1);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=p[i].num;j++)\n        {\n            if(M.empty())\n            {\n                printf(\"0\\n\");\n                return 0;\n            }\n            node u=M.top();\n            M.pop();\n            v[p[i].idd].push_back(u.idd);\n            q[u.idd].num--;\n        }\n        for(int j=0;j<v[p[i].idd].size();j++)\n        {\n            if(q[v[p[i].idd][j]].num)M.push(q[v[p[i].idd][j]]);\n        }\n    }\n    printf(\"1\\n\");\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=0;j<v[i].size();j++)printf(\"%d \",v[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1556234939,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "# [\u7f51\u7edc\u6d41\u95ee\u9898-\u5706\u684c\u95ee\u9898](https://www.luogu.org/problemnew/show/P3254)\n\n\u6c42\u4e00\u4e2a\u5706\u684c\u4e0e\u4ee3\u8868\u4e4b\u95f4\u7684\u5339\u914d\n\n\u6ee1\u8db3\u4ee3\u8868\u5206\u914d\u5230\u6bcf\u4e2a\u5706\u684c\u7684\u4eba\u53ea\u6709\u4e00\u4e2a\n\n\u6240\u4ee5\u5c06\u4ee3\u8868\u4e0e\u5706\u684c\u8fde\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\n\n\u6e90\u4e0e\u4ee3\u8868\u8fde\u5bb9\u91cf\u4e3a\u4ee3\u8868\u4e2a\u6570\u7684\u8fb9\n\n\u5706\u684c\u4e0e\u6c47\u8fde\u5bb9\u91cf\u4e3a\u5706\u684c\u5bb9\u91cf\u7684\u8fb9\n\n\u4f4d\u5b50\u53ef\u4ee5\u7a7a\u4f46\u4eba\u4e0d\u80fd\u6ca1\u5730\u65b9\u5750\n\n\u6240\u4ee5\u6700\u5927\u6d41\u662f\u5426\u7b49\u4e8e\u603b\u4eba\u6570\u5c31\u4ee3\u8868\u95ee\u9898\u662f\u5426\u6709\u89e3\n\n\u5efa\u56fe\u8dd1dinic\n\n```cpp\n\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int M=200;\nconst int N=300;\nconst int inf=0x7fffffff;\ntemplate<class T>inline void read(T &num){\n\tchar ch;\n\twhile(!isdigit(ch=getchar()));\n\tnum=ch-'0';\n\twhile(isdigit(ch=getchar()))num=num*10+ch-'0';\n}\n\nint hea[M+N],to[N*M<<1],nex[N*M<<1],val[N*M<<1],dep[N+M],tot=1,n,m,s,t;\n\ninline void add_edge(const int x,const int  y,const int w){\n\tto[++tot]=y,nex[tot]=hea[x],hea[x]=tot,val[tot]=w;\n}\n\ninline void Add_edge(const int x,const int y,const int w){\n//printf(\"%d --> %d(%d)\\n\",x,y,w);\n\tadd_edge(x,y,w);\n\tadd_edge(y,x,0);\n}\n\nqueue<int> que;\nbool bfs(){\n//printf(\"!\\n\");\n\tmemset(dep,0,sizeof(dep));\n\tdep[s]=1;\n\twhile(que.size())que.pop();\n\tque.push(s);\n\tint x;\n\twhile(que.size()){\n\t\tx=que.front();que.pop();\n\t\tfor(int i=hea[x];i;i=nex[i]){\n\t\t\tint y=to[i];\n\t\t\tif(val[i]&&!dep[y]){\n\t\t\t\tdep[y]=dep[x]+1;\n//printf(\"%d -> %d\\n\",x,y);\n//if(y==t)printf(\"return true\\n\");\n\t\t\t\tif(y==t)return true;\n\t\t\t\tque.push(y);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nint dfs(const int x,const int flow){\n//printf(\"dfs(%d,%d)\\n\",x,flow);\n\tif(x==t)return flow;\n\tint rest=flow,k;\n\tfor(int i=hea[x];i&&rest;i=nex[i]){\n\t\tint y=to[i];\n\t\tif(val[i]&&dep[y]==dep[x]+1){\n\t\t\tk=dfs(y,min(rest,val[i]));\n\t\t\tif(k){\n\t\t\t\tval[i]-=k;\n\t\t\t\tval[i^1]+=k;\n\t\t\t\trest-=k;\n\t\t\t}\n\t\t\telse dep[y]=0;\n\t\t}\n\t}\n//printf(\"return %d\\n\",flow-rest);\n\treturn flow-rest;\n}\n\nint dinic(){\n\tint maxflow=0,flow;\n\twhile(bfs())while(flow=dfs(s,inf))maxflow+=flow;\n//printf(\"return maxflow=%d\\n\",maxflow);\n\treturn maxflow;\n}\n\nint ans;\nint main(){\n\tread(m),read(n);\n\ts=n+m+1,t=s+1;\n\tfor(int i=1,w;i<=m;++i){\n\t\tread(w);\n\t\tans+=w;\n\t\tAdd_edge(s,i,w);\n\t}\n\tfor(int i=1,w;i<=n;++i){\n\t\tread(w);\n\t\tAdd_edge(i+m,t,w);\n\t}\n\tfor(int i=1;i<=m;++i)for(int j=1;j<=n;++j)Add_edge(i,j+m,1);\n\tif(dinic()==ans){\n\t\tprintf(\"1\\n\");\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tfor(int j=hea[i];j;j=nex[j]){\n\t\t\t\tint y=to[j];\n\t\t\t\tif(y<=m+n&&!val[j])printf(\"%d \",y-m);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\telse{\n\t\tprintf(\"0\\n\");\n\t}\n\treturn 0;\n}\n\n\n```",
        "postTime": 1549518859,
        "uid": 106642,
        "name": "Ajsoabk",
        "ccfLevel": 0,
        "title": "P3254 \u5706\u684c\u95ee\u9898"
    },
    {
        "content": "\u7f51\u7edc\u6d4124  \n\n\n------------\n\u505a\u7f51\u7edc\u6d41\u7684\u9898\u76ee\u7b2c\u4e00\u6b65\u5c31\u662f\u627e\u9898\u76ee\u4e2d\u7684\u9650\u5236\u6761\u4ef6  \n\u5982\u8fd9\u9053\u9898\uff0c\u67093\u4e2a\u9650\u5236\u6761\u4ef6  \n### 1.\u6bcf\u5f20\u9910\u684c\u6700\u591a\u5bb9\u7eb3$c_i$\u4e2a\u4eba  \n### 2.\u540c\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba\u4e0d\u80fd\u5750\u5728\u540c\u4e00\u5f20\u9910\u684c  \n### 3.\u6bcf\u4e2a\u5355\u4f4d$r_i$\u4e2a\u4eba\uff08\u5176\u5b9e\u8fd9\u4e5f\u662f\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u5728\u7f51\u7edc\u6d41\u5efa\u6a21\u4e0a\uff09  \n\n\n---------\n### \u6211\u4eec\u5efa\u7acb\u521d\u6b65\u6a21\u578b\uff0c\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u4e00\u4e9b\u70b9\u8868\u793a\u5355\u4f4d\uff0c\u53e6\u4e00\u4e9b\u70b9\u9910\u684c  \n### 1.\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u9910\u684c\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf$c_i$\u7684\u8fb9\uff0c\u9650\u5236\u6bcf\u5f20\u9910\u684c\u5750\u7684\u4eba\u6570\n### 2.\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u6211\u4eec\u5c06\u6e90\u70b9\u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u5bb9\u91cf$r_i$\u7684\u8fb9\uff0c\u9650\u5236\u6bcf\u4e2a\u5355\u4f4d\u4eba\u6570\n### 3.\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u6211\u4eec\u4ece\u6bcf\u4e2a\u5355\u4f4d\u51fa\u53d1\uff0c\u5411\u6bcf\u5f20\u9910\u684c\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u9650\u5236\u4e00\u5f20\u9910\u684c\u4e0a\u8fd9\u4e2a\u5355\u4f4d\u7684\u4eba\u53ea\u80fd\u6709\u4e00\u4e2a  \n### \u5982\u679c\u6700\u5927\u6d41$=$\u603b\u4eba\u6570\uff0c\u8bf4\u660e\u53ef\u4ee5\u5750\u4e0b\uff0c\u5982\u679c\u7b2c$i$\u4e2a\u5355\u4f4d\u5411\u7b2c$j$\u4e2a\u9910\u684c\u7684\u8fb9\u6709\u6d41\u7ecf\u8fc7\uff0c\u8bf4\u660e\u7b2c$i$\u4e2a\u5355\u4f4d\u67091\u4e2a\u4eba\u5750\u5230\u4e86\u7b2c$j$\u4e2a\u9910\u684c\u4e0a,\u6700\u540e\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u5373\u53ef  \n\n\n### \u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n\tint to;\n\tint next;\n\tint data;\n}e[2000000];\nint h[10000],pop=1,m,n,r[300],c[300],s=9000,t=9010,ans=0;\nvoid add(int x,int y,int z){\n\tpop++;\n\te[pop].to=y;e[pop].data=z;\n\te[pop].next=h[x];h[x]=pop;\n\tpop++;\n\te[pop].to=x;e[pop].data=0;\n\te[pop].next=h[y];h[y]=pop;\n}\nint d[10000];\nbool bfs(){\n\tqueue<int>q;\n\tq.push(s);\n\tmemset(d,0,sizeof(d));\n\td[s]=1;\n\twhile(q.size()){\n\t\tint x=q.front(),y;q.pop();\n\t\tif(x==t)return true;\n\t\tfor(int i=h[x];i;i=e[i].next){\n\t\t\tif(d[y=e[i].to]||!e[i].data)continue;\n\t\t\td[y]=d[x]+1;\n\t\t\tq.push(y);\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int p,int flow){\n\tif(p==t)return flow;\n\tint rest=flow;\n\tfor(int i=h[p],y;i;i=e[i].next){\n\t\tif(e[i].data&&d[y=e[i].to]==d[p]+1){\n\t\t\tint k=dfs(y,min(rest,e[i].data));\n\t\t\tif(!k)d[y]=-1;\n\t\t\trest-=k;\n\t\t\te[i].data-=k;\n\t\t\te[i^1].data+=k;\n\t\t}\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\tmemset(h,0,sizeof(h));\n\tscanf(\"%d%d\",&m,&n);\n\tint sum=0;\n\tfor(int i=1;i<=m;i++){\n\t  scanf(\"%d\",&r[i]);\n\t  add(s,i,r[i]);\n\t  sum+=r[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t  scanf(\"%d\",&c[i]);\n\t  add(m+i,t,c[i]);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t  for(int j=1;j<=n;j++)\n\t    add(i,j+m,1);\n\twhile(bfs())ans+=dfs(s,(1<<29));\n\t/*for(int i=h[s];i;i=e[i].next){\n\t\tprintf(\"%d %d\\n\",e[i].to,e[i].data);\n\t}*/\n\tif(ans==sum){\n\tprintf(\"1\\n\");\n\tfor(int i=1;i<=m;i++){\n\t\tint pop=0,l[500];\n\t\t//cout<<r[i]<<endl;\n\t  for(int j=h[i];j;j=e[j].next){\n\t  \tif(!e[j].data)pop++,l[pop]=e[j].to-m;\n\t    }\n\t  for(int j=pop;j>0;j--)\n\t    printf(\"%d \",l[j]);\n\t  printf(\"\\n\");\n\t  }\n\t}\n\telse printf(\"0\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1548735093,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u81ea\u4ece\u767b\u9646\u4e86CSDN\u540e\uff0c\u5c31\u518d\u6ca1\u7528\u8fc7\u6d1b\u8c37~~\n\n[CSDN\u6587\u7ae0\u4f20\u9001\u95e8](https://blog.csdn.net/jzc20080511/article/details/86027314)\n\n\u5728\u770b\u4e86N\u591a\u4e3a\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801\u540e\uff0c~~\u6211\u60f3\u5c4e~~\n\n~~\u5927\u5bb6\u90fd\u53d1\u7684\u5f88\u9ad8\u7aef\u7684\u9898\u89e3\uff0c\u800c\u6211~~\n\n\u6211\u7684\u601d\u8def\uff1a\n\n# \u3010\u95ee\u9898\u5206\u6790\u3011\n\n\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u89e3\u51b3\u3002\n# \u3010\u5efa\u6a21\u65b9\u6cd5\u3011\n\n\u5efa\u7acb\u4e8c\u5206\u56fe\uff0c\u6bcf\u4e2a\u5355\u4f4d\u4e3aX\u96c6\u5408\u4e2d\u7684\u9876\u70b9\uff0c\u6bcf\u4e2a\u9910\u684c\u4e3aY\u96c6\u5408\u4e2d\u7684\u9876\u70b9\uff0c\u589e\u8bbe\u9644\u52a0\u6e90S\u548c\u6c47T\u3002\n\n1\u3001\u4eceS\u5411\u6bcf\u4e2aXi\u9876\u70b9\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a\u8be5\u5355\u4f4d\u4eba\u6570\u7684\u6709\u5411\u8fb9\u3002\n2\u3001\u4ece\u6bcf\u4e2aYi\u9876\u70b9\u5411T\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a\u8be5\u9910\u684c\u5bb9\u91cf\u7684\u6709\u5411\u8fb9\u3002\n3\u3001X\u96c6\u5408\u4e2d\u6bcf\u4e2a\u9876\u70b9\u5411Y\u96c6\u5408\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8fde\u63a5\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n\u6c42\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5982\u679c\u6700\u5927\u6d41\u91cf\u7b49\u4e8e\u6240\u6709\u5355\u4f4d\u4eba\u6570\u4e4b\u548c\uff0c\u5219\u5b58\u5728\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u4f4d\uff0c\u4eceX\u96c6\u5408\u5bf9\u5e94\u70b9\u51fa\u53d1\u7684\u6240\u6709\u6ee1\u6d41\u8fb9\u6307\u5411\u7684Y\u96c6\u5408\u7684\u9876\u70b9\u5c31\u662f\u8be5\u5355\u4f4d\u4eba\u5458\u7684\u5b89\u6392\u60c5\u51b5\uff08\u4e00\u4e2a\u53ef\u884c\u89e3\uff09\u3002\n# \u3010\u5efa\u6a21\u5206\u6790\u3011\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6bcf\u4e2a\u9876\u70b9\u53ef\u4ee5\u6709\u591a\u4e2a\u5339\u914d\u9876\u70b9\uff0c\u79f0\u8fd9\u7c7b\u95ee\u9898\u4e3a\u4e8c\u5206\u56fe\u591a\u91cd\u5339\u914d\u95ee\u9898\u3002X\uff0cY\u96c6\u5408\u4e4b\u95f4\u7684\u8fb9\u5bb9\u91cf\u5168\u90e8\u662f1\uff0c\u4fdd\u8bc1\u4e24\u4e2a\u70b9\u53ea\u80fd\u5339\u914d\u4e00\u6b21\uff08\u4e00\u4e2a\u9910\u684c\u4e0a\u53ea\u80fd\u6709\u4e00\u4e2a\u5355\u4f4d\u7684\u4e00\u4e2a\u4eba\uff09\uff0c\u6e90\u6c47\u7684\u8fde\u8fb9\u9650\u5236\u4e86\u6bcf\u4e2a\u70b9\u5339\u914d\u7684\u4e2a\u6570\u3002\u6c42\u51fa\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u5982\u679c\u6d41\u91cf\u7b49\u4e8eX\u96c6\u5408\u6240\u6709\u70b9\u4e0eS\u8fb9\u5bb9\u91cf\u4e4b\u548c\uff0c\u90a3\u4e48\u5219\u8bf4\u660eX\u96c6\u5408\u6bcf\u4e2a\u70b9\u90fd\u6709\u5b8c\u5907\u7684\u591a\u91cd\u5339\u914d\u3002\n\n# \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1005;\nconst int MAXM = 1005;\nconst int INF = 0x3f3f3f3f;\nstruct Edge1\n{\n\tint from,to,cap,flow;\n};\nstruct Dinic\n{\n\tint n,m,s,t;\n\tvector<Edge1> edges;\n\tvector<int> G[MAXN];\n\tbool vis[MAXN];\n\tint d[MAXN];\n\tint cur[MAXN];\n\tvoid init(int n)\n\t{\n\t\tthis -> n = n;\n\t\tfor(int i = 0; i <= n + 1; i++){\n\t\t\tG[i].clear();\n\t\t}\n\t\tedges.clear();\n\t}\n\tvoid AddEdge(int from,int to,int cap)\n\t{\n\t\tedges.push_back((Edge1){from,to,cap,0});\n\t\tedges.push_back((Edge1){to,from,0,0});\n\t\tm = edges.size();\n\t\tG[from].push_back(m - 2);\n\t\tG[to].push_back(m - 1);\n\t}\n\tbool BFS()\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tqueue<int> Q;\n\t\tQ.push(s);\n\t\td[s] = 0;\n\t\tvis[s] = 1;\n\t\twhile(!Q.empty()) {\n\t\t\tint x = Q.front();\n\t\t\tQ.pop();\n\t\t\tfor(int i = 0; i < G[x].size(); i++) {\n\t\t\t\tEdge1& e = edges[G[x][i]];\n\t\t\t\tif(!vis[e.to] && e.cap > e.flow) {\n\t\t\t\t\tvis[e.to] = 1;\n\t\t\t\t\td[e.to] = d[x] + 1;\n\t\t\t\t\tQ.push(e.to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vis[t];\n\t}\n\tint DFS(int x,int a)\n\t{\n\t\tif(x == t || a == 0) return a;\n\t\tint flow = 0,f;\n\t\tfor(int& i = cur[x]; i < G[x].size(); i++) {\n\t\t\tEdge1& e = edges[G[x][i]];\n\t\t\tif(d[x] + 1 == d[e.to] && (f = DFS(e.to,min(a,e.cap - e.flow))) > 0) {\n\t\t\t\te.flow += f;\n\t\t\t\tedges[G[x][i] ^ 1].flow -= f;\n\t\t\t\tflow += f;\n\t\t\t\ta -= f;\n\t\t\t\tif(a == 0) break;\n\t\t\t}\n\t\t}\n\t\treturn flow;\n\t}\n\tint Maxflow(int s,int t) {\n\t\tthis -> s = s,this -> t = t;\n\t\tint flow = 0;\n\t\twhile(BFS()) {\n\t\t\tmemset(cur,0,sizeof(cur));\n\t\t\tflow += DFS(s,INF);\n\t\t}\n\t\treturn flow;\n\t}\n}din;\nvector<int> ans[MAXN];\nint main(void)\n{\n    int m,n,temp;\n    scanf(\"%d %d\",&m,&n);\n    int S = 0,T = n + m + 1;\n    int sum = 0;\n    din.init(n + m + 2);\n    for(int i = 1; i <= m; i++) {\n        scanf(\"%d\",&temp);\n        sum += temp;\n        din.AddEdge(S,i,temp);\n    }\n    for(int i = 1; i <= m; i++) {\n        for(int j = 1; j <= n; j++) {\n            din.AddEdge(i,j + m,1);\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        scanf(\"%d\",&temp);\n        din.AddEdge(i + m,T,temp);\n    }\n    if(sum == din.Maxflow(S,T)) {\n        printf(\"1\\n\");\n        for(int i = 0; i < din.edges.size(); i++) {\n            Edge1 e = din.edges[i];\n            if(e.from != S && e.to != T && e.flow == 1) {\n                ans[e.from].push_back(e.to - m);\n            }\n        }\n        for(int i = 1; i <= m; i++) {\n            for(int j = 0; j < ans[i].size(); j++) {\n                printf(\"%d \",ans[i][j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n    else printf(\"0\\n\");\n    return 0;\n}\n```\n\n# \u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u6211\u7684\u7801\u98ce\uff08\u597d\u5dee\u52b2\u7684\u7801\u98ce\uff09\n",
        "postTime": 1546867217,
        "uid": 154004,
        "name": "Jiang_zi_chuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "           P3254 \u5706\u684c\u95ee\u9898  \n   [P3254 \u5706\u684c\u95ee\u9898]()     \n   \n   * \u8d2a\u5fc3      \n   \n   \u9996\u5148\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u8d2a\u5fc3 , \u56e0\u4e3a\u6211\u4eec\u80af\u5b9a\u8981\u5148\u653e\u4eba\u6570\u6700\u591a\u7684\u516c\u53f8\u7684\u4eba\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\uff0c\u6700\u540e\u4ed6\u624d\u4e0d\u4f1a\u56e0\u4e3a\u524d\u9762\u7684\u67d0\u4e9b\u5c0f\u516c\u53f8\u5360\u9886\u4e86\u8fc7\u591a\u7684\u4f4d\u7f6e\u5bfc\u81f4\u65e0\u6cd5\u5b89\u6392\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u8981\u5148\u653e\u4eba\u6570\u6700\u591a\u7684\u516c\u53f8\u7684\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\uff0c\u662f\u628a\u4ed6\u4eec\u5148\u653e\u5bb9\u91cf\u5927\u7684\u684c\u5b50\uff0c\u8fd8\u662f\u5bb9\u91cf\u5c0f\u7684\u684c\u5b50\uff0c\u663e\u7136\u662f\u5148\u653e\u5927\u7684 \uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4f7f\u5176\u5c3d\u91cf\u653e\u7684\u684c\u5b50\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u51cf\u5c0f\u5bf9\u4ee5\u540e\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\uff0c\u7559\u7ed9\u540e\u9762\u7684\u7a7a\u4f59\u684c\u5b50\u6570\u624d\u4f1a\u6700\u591a \u3002   \n   \n```\n\u8bc4\u6d4b\u72b6\u6001\nAccepted  100\n\u7528\u65f6: 30ms / \u5185\u5b58: 924KB\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,m;\n\nint fl[500];\n\nstruct node\n{\n    int rs,id;\n}t[500];\n\nstruct node2\n{\n    int rs,id;\n}tt[500];\n\nbool cmp(node a,node b)\n{\n    return a.rs>b.rs;\n}\nbool cmp2(node2 a,node2 b)\n{\n    return a.rs>b.rs;\n}\n\nint maxx=-1;\nint ans[500][500];\nint in[500];\n\nint main() \n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;++i) scanf(\"%d\",&t[i].rs),t[i].id=i;\n    for(int i=1;i<=n;++i) cin>>tt[i].rs,tt[i].id=i;\n    sort(t+1,t+m+1,cmp);\n    sort(tt+1,tt+n+1,cmp2);\n    int f=0;\n    for(int i=1;i<=m;++i)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            if(tt[j].rs&&t[i].rs)\n            {\n                tt[j].rs--;\n                t[i].rs--;\n                ans[t[i].id][++in[t[i].id]]=tt[j].id;\n            }\n        }\n        if(t[i].rs) f=1;\n        if(f) break;\n    }\n    if(f)\n    {\n        printf(\"0\\n\");\n        return 0;\n    }\n    else\n    {\n        cout<<\"1\"<<endl;\n        for(int i=1;i<=m;++i)\n        {\n            for(int j=1;j<=in[i];++j)cout<<ans[i][j]<<\" \";cout<<endl;\n        }\n    }\n    return 0;\n}\n\n```    \n\n* \u7f51\u7edc\u6d41    \n\n\u9996\u5148\u6211\u4eec\u5f00\u59cb\u5efa\u56fe\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e2a\u516c\u53f8\u53ea\u80fd\u5728\u4e00\u4e2a\u684c\u5b50\u4e0a\u65b9\u4e00\u4e2a\u4eba\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u4ece\u516c\u53f8\u5411\u8be5\u684c\u5b50\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\n\u4f46\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u662f\u628a\u516c\u53f8\u62c6\u6210\u4e00\u4e2a\u4e2a\u5355\u5143\uff0c\u7136\u540e\u5206\u522b\u5411\u6bcf\u4e2a\u684c\u5b50\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6d41\uff0c\u6700\u540e\u53ea\u8981\u770b\u6bcf\u4e2a\u70b9\u5411\u5176\u88c2\u5f00\u7684\u70b9\u4e4b\u95f4\u90a3\u6761\u8fb9\u8d70\u8fc7\u5c31\u8f93\u51fa\u5230\u8fbe\u7684\u70b9\u5c31\u597d\u54af\u3002   \n\n```\n\u8bc4\u6d4b\u72b6\u6001\nAccepted  100\n\u7528\u65f6: 44ms / \u5185\u5b58: 5944KB\n\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n//m \u5355\u4f4d n \u9910\u684c    \n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn=50001;\nconst int inf=2e8;\nint n,m,s,t,num=1;\nint head[maxn],dep[maxn],cur[maxn];\nstruct node\n{\n\tint nt,to,dis;\n}edge[maxn*20];\n\nvoid add(int f,int t,int d)\n{\n\tedge[++num].nt=head[f];\n\tedge[num].dis=d;\n\tedge[num].to=t;\n\thead[f]=num;\n}\n\nvoid ADD(int a,int b,int c)\n{\n\tadd(a,b,c);\n\tadd(b,a,0);\n}\n\n\nint bfs()\n{\n\tqueue<int> q;\n\tmemset(dep,0,sizeof(dep)); \n\tdep[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i!=-1;i=edge[i].nt)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(dep[v]==0&&edge[i].dis)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]!=0;\n}\n\nint dfs(int u,int dist)\n{\n\tif(u==t) return dist;\n\tfor(int &i=cur[u];i!=-1;i=edge[i].nt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(dep[v]==dep[u]+1&&edge[i].dis)\n\t\t{\n\t\t\tint di=dfs(v,min(dist,edge[i].dis));\n\t\t\tif(di)\n\t\t\t{\n\t\t\t\tedge[i].dis-=di;\n\t\t\t\tedge[i^1].dis+=di;\n\t\t\t\treturn di;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dinic()\n{\n\tint ans=0;\n\twhile(bfs())\n\t{\n\t\tfor(int i=0;i<=t;++i)\n\t\tcur[i]=head[i]; \n\t\twhile(int di=dfs(s,inf))\n\t\t\tans+=di;\n\t}\n\t\t\n\treturn ans;\n}\n\nvoid print()\n{\t\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tfor(int j=head[i];j!=-1;j=edge[j].nt)\n\t\t{\n\t\t\tint v=edge[j].to;\n\t\t\tif(edge[j].dis) continue;\n\t\t\tif(v<=m||m>n+m+(i-1)*n) continue;\n\t\t\tcout<<(v-m-(i-1)*n)<<\" \"; \n\t\t}cout<<\"\\n\";\n\t} \n} \nvector<int>as[maxn];\nvoid print2()\n{\n\tfor(int i=1;i<=n;i++)\n     {\n         int f=1;\n        for(int j=head[i+m+n*m];~j;j=edge[j].nt)\n         if(edge[j].to!=t&&edge[j].dis==1)\n         {\n            as[(edge[j].to-m-i)/n+1].push_back(i);         }\n     }\n     for(int i=1;i<=m;i++)\n     {\n       printf(\"%d\",as[i][0]);\n        for(int j=1;j<as[i].size();j++)\n             printf(\" %d\",as[i][j]);\n         printf(\"\\n\");\n     }\n}\n\nint main() \n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d\",&m,&n);\n\tt=m+n+m*n+1;\n\tint tot=0;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tADD(s,i,x);\n\t\ttot+=x;\n\t} \n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tADD(i,m+(i-1)*n+j,1);\n\t\t\tADD(m+(i-1)*n+j,m+n*m+j,1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tADD(m+n*m+i,t,x);\n\t}\n\tif(dinic()==tot)\n\t{\n\t\tcout<<\"1\"<<\"\\n\";\n\t\tprint();\n\t}\n\telse cout<<\"0\"<<\"\\n\";\n\treturn 0;\n}\n\n\n\n```\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6765\u5efa\u8fb9\u4e0d\u7528\u6765\u5272\u70b9\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u53ea\u8981\u4ece\u6bcf\u4e2a\u516c\u53f8\u5411\u684c\u5b50\u8fde\u5927\u5c0f\u4e3a1\u7684\u8fb9\u5c31\u597d\u54af \u3002 ```\n\n```\n\u8bc4\u6d4b\u72b6\u6001\nAccepted  100\n\u7528\u65f6: 36ms / \u5185\u5b58: 4884KB\n//m \u5355\u4f4d n \u684c\u5b50 \n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn=50001;\nconst int inf=1e8;\nint n,m,s,t;\nint ri[maxn],ci[maxn];\n\nint cur[maxn],head[maxn],dep[maxn],num=1;\n\nstruct node\n{\n\tint nt,to,dis;\n}edge[maxn*20];\n\nvoid add(int f,int t,int d)\n{\n\tedge[++num].nt=head[f];\n\tedge[num].to=t;\n\tedge[num].dis=d;\n\thead[f]=num;\n}\n\nvoid ADD(int a,int b,int c)\n{\n\tadd(a,b,c);\n\tadd(b,a,0);\n}\n\nint bfs()\n{\n\tqueue<int> q;\n\tmemset(dep,0,sizeof(dep));\n\tdep[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i!=-1;i=edge[i].nt)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(dep[v]==0&&edge[i].dis)\n\t\t\t\tdep[v]=dep[u]+1,q.push(v);\n\t\t}\n\t}\n\treturn dep[t]!=0;\n}\n\nint dfs(int u,int dist)\n{\n\tif(u==t) return dist;\n\tfor(int &i=cur[u];~i;i=edge[i].nt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(dep[v]==dep[u]+1&&edge[i].dis)\n\t\t{\n\t\t\tint di=dfs(v,min(dist,edge[i].dis));\n\t\t\tif(di)\n\t\t\t{\n\t\t\t\tedge[i].dis-=di;\n\t\t\t\tedge[i^1].dis+=di;\n\t\t\t\treturn di;\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\n\nint dinic()\n{\n\tint ss=0;\n\twhile(bfs())\n\t{\n\t\tfor(int i=0;i<=t;++i) cur[i]=head[i];\n\t\twhile(int di=dfs(s,inf))\n\t\t\tss+=di;\n\t}\n\treturn ss;\n}\n\nvoid print()\n{\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tfor(int j=head[i];~j;j=edge[j].nt)\n\t\t{\n\t\t\tint v=edge[j].to;\n\t\t\tif(v==s||s==t||edge[j].dis) continue ;\n\t\t\tcout<<v-m<<\" \";\n\t\t}cout<<\"\\n\";\n\t}\n}\n\nint main() \n{\n\tmemset(head,-1,sizeof(head));\n\t\n\tint tot=0;\n\tscanf(\"%d%d\",&m,&n);\n\tt=m+n+1;\n\tfor(int i=1;i<=m;++i)\n\t\tscanf(\"%d\",&ri[i]),tot+=ri[i],ADD(s,i,ri[i]);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&ci[i]),ADD(i+m,t,ci[i]);\n\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tADD(i,m+j,1);\n\tif(dinic()==tot)\n\t{\n\t\tcout<<\"1\"<<\"\\n\";\n\t\tprint();\n\t}\n\telse\n\t{\n\t\tcout<<\"0\";\n\t\treturn 0;\n\t}\n}\n\n\n\n\n",
        "postTime": 1543070315,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P3254 \u5706\u684c\u95ee\u9898"
    },
    {
        "content": "## \u7ec8\u4e8e\u8fc7\u4e86\uff0c\u53d1\u7bc7\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\n\n~~\u5176\u5b9e\u4e3b\u8981\u662f\u56e0\u4e3a\u88ab\u5361\u6b7b\u4e86\u6700\u540e\u4e00\u4e2a\u70b9\u6765\u2026\u2026~~\n\n\u666e\u5ea6\u4f17\u751f\uff1f\n\n\u4e0d\u5b58\u5728\u7684\uff01\u53ea\u662f\u60f3\u7ed9\u5927\u5bb6JIO\u4e00\u4e0b\u5f53\u524d\u5f27\u4f18\u5316\n\n\u5982\u679c\u5927\u4f6c\u5df2\u7ecf\u4e86\u89e3\u5c31\u8bf7\u8df3\u8fc7\u849f\u84bb\u7684\u9898\u89e3\u5427\n\n\u8fd9\u4e00\u9898\u7684\u5efa\u8fb9\u5e76\u4e0d\u96be\uff0c$S$\u5411\u5355\u4f4d\u5efa\u4e00\u4e2a\u6d41\u91cf\u4e3a$R_i$\u7684\u8fb9,\u6bcf\u4e2a\u5355\u4f4d\u5411\u6bcf\u4e2a\u684c\u5b50\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u684c\u5b50\u5411$T$\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a$C_i$\u7684\u8fb9\u5c31\u597d\u5566\n\n### \u6b65\u5165\u6b63\u9898\uff1a\n\n\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\n\n\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u51fa\u53bb\u4e86\u5f88\u591a\u6761\u8fb9\uff0c\u90a3\u4e48\u5728DFS\u4e2d\u4f1a\u6709\u91cd\u590d\u7684\u904d\u5386\n\n\u51fa\u9898\u4eba~~\u6076~~\u826f\u5fc3\u4e00\u70b9\u5c31\u4f1a\u88ab\u5361\u7684\u6b7b\u6b7b\u7684\n\n\u5982\u4f55\u4e0d\u88ab\u5361\u6b7b\uff01\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898QAQ\n\n~~\u4e0d\u8981\u8ddf\u6211\u8bf4\u5361\u5e38\uff0c\u6211\u5361\u4e86\u534a\u5929\u4e5f\u6ca1\u5361\u8fdb\u53bb~~\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u5206\u5b8c\u5c42\u4e4b\u540e\uff0c\u8dd1\u5b8c\u4e00\u6b21\u540e\u5c31\u8bb0\u5f55\u4e00\u4e0b\u4e0a\u4e00\u6b21\u8dd1\u7684\u8fb9\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4f18\u79c0\u7684\u8dd1\u8fc7\u4e86\n\n~~\u5176\u5b9e\u5f53\u524d\u5f27\u4f18\u5316\u8981\u4fee\u6539\u7684\u5730\u65b9\u771f\u7684\u4e0d\u591a~~\n\n\u4e0a\u4ee3\u7801QAQ\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint head[100005],num_edge=-1,n,m,s,t,tot;\nstruct Edge\n{\n    int next,to,dis;\n}edge[100005];\nvoid add(int from,int to,int dis)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    edge[num_edge].dis=dis;\n    head[from]=num_edge;\n}\nint d[10001],q[10001],cur[10001];\nbool bfs()\n{\n    int hea=0,tai=1;\n    memset(d,0,sizeof(d));\n    d[s]=1;\n    q[1]=s;\n    do\n    {\n\t\thea++;\n        int x=q[hea];\n        for(register int i=head[x];i!=-1;i=edge[i].next)\n        {\n            int y=edge[i].to;\n            if(!d[y]&&edge[i].dis>0)\n            {\n                d[y]=d[x]+1;\n                q[++tai]=y;\n            }\n        }\n    }while(hea<tai);\n    if(!d[t]) return 0;\n    else return 1;\n}\nint dfs(int pos,int last)\n{\n    if(pos==t) return last;\n    for(register int i=cur[pos];i!=-1;i=edge[i].next)//\u5f53\u524d\u5f27\u4f18\u5316QAQ\n      if(d[edge[i].to]==d[pos]+1&&edge[i].dis)\n      {\n      \tint data=dfs(edge[i].to,min(edge[i].dis,last));\n      \tif(data>0)\n      \t{\n      \t\tedge[i].dis-=data;\n      \t\tedge[i^1].dis+=data;\n      \t\tcur[pos]=i;//\u5f53\u524d\u5f27\u4f18\u5316QAQ\n      \t\treturn data;\n        }\n      }\n    return 0;\n}\ninline int read()\n{\n    char ch='!';int z=1,num=0;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')z=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')num=(num<<3)+(num<<1)+ch-'0',ch=getchar();\n    return z*num;\n}\ninline int Dinic()\n{\n    int ans=0;\n    while(bfs())\n    {\n    \tmemcpy(cur,head,sizeof(cur));//\u5f53\u524d\u5f27\u4f18\u5316QAQ\n    \twhile(int data=dfs(s,0x3f3f3f3f))\n          ans+=data;\n\t}\n    return ans;\n}\nint main(){\n    memset(head,-1,sizeof(head));\n    n=read();\n    m=read();\n    s=0;\n    t=n+m+1;\n    for(register int i=1;i<=n;++i)\n    {\n    \tint r;\n    \tr=read();\n    \tadd(s,i,r);\n    \tadd(i,s,0);\n    \ttot+=r;\n\t}\n\tfor(register int i=1;i<=n;++i)\n\t  for(register int j=1;j<=m;++j)\n\t    add(i,j+n,1),add(j+n,i,0);\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tint c;\n\t\tc=read();\n\t\tadd(i+n,t,c);\n\t\tadd(t,i+n,0);\n\t}\n    int maxflow=Dinic();\n    if(maxflow!=tot){printf(\"0\");return 0;}\n\tprintf(\"1\\n\");\n    for(register int i=1;i<=n;++i)\n    {\n        for(register int j=head[i];j;j=edge[j].next)\n          if(edge[j].dis==0&&edge[j].to!=0) printf(\"%d \",edge[j].to-n);\n        printf(\"\\n\");\n    }\n}\n```",
        "postTime": 1539266733,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u7f51\u7edc\u6d41\uff08\u7ec8\u4e8e\u662f\u7f51\u7edc\u6d41\u4e86\uff09\n\n\u65e2\u7136\u662f\u7f51\u7edc\u6d41\uff0c\u5c31\u8bb2\u4e00\u4e0b\u6784\u56fe\n\n![\u6784\u56fe](https://cdn.luogu.com.cn/upload/pic/27313.png)\n\n\u56fe\u7247\u53ef\u80fd\u6709\u4e00\u4e9b\u4e11\uff0c\u5c31\u4e0d\u8981\u4ecb\u610f\u5566\n\n\u9996\u5148\u662fst\u5411\u6bcf\u4e00\u4e2a\u5355\u4f4d\uff0c\u6d41\u91cf\u4e3a\u4ee3\u8868\u7684\u6570\u91cf\n\n\u7136\u540e\u662f\u6bcf\u4e00\u4e2a\u5355\u4f4d\u5411\u5706\u684c\uff0c\u6d41\u91cf\u4e3a1\uff08\u6bcf\u4e2a\u5706\u684c\u53ea\u80fd\u6d3e\u4e00\u4e2a\u4ee3\u8868\uff09\n\n\u6700\u540e\u662f\u5706\u684c\u5411ed\uff0c\u6d41\u91cf\u4e3a\u5706\u684c\u80fd\u5750\u4e0b\u7684\u6570\n\n\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u770b\u4e00\u4e0b\u8fb9\u7684\u6d41\u91cf\u6765\u5224\u65ad\u4ee3\u8868\u6240\u5728\u7684\u5706\u684c\n\n\u6ce8\uff1a\n\n\u5355\u4f4d\u7684\u7f16\u53f7\u62111-m\uff0c\u5706\u684c\u7684\u7f16\u53f7\u4e3am+1-m+n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n    int x,y,c,next,other;\n}a[210000];\nint len,last[510],st,ed;\nvoid ins(int x,int y,int c)\n{\n    int k1,k2;\n    len++;k1=len;\n    a[len].x=x;a[len].y=y;a[len].c=c;\n    a[len].next=last[x];last[x]=len;\n    len++;k2=len;\n    a[len].x=y;a[len].y=x;a[len].c=0;\n    a[len].next=last[y];last[y]=len;\n    a[k1].other=k2;\n    a[k2].other=k1;\n}\nint list[510],head,tail,h[510];\nbool bt_h()\n{\n    memset(h,0,sizeof(h));h[st]=1;\n    list[1]=st;head=1;tail=2;\n    while(head!=tail)\n    {\n        int x=list[head];\n        for(int k=last[x];k;k=a[k].next)\n        {\n            int y=a[k].y;\n            if(a[k].c>0 && h[y]==0)\n            {\n                h[y]=h[x]+1;\n                list[tail++]=y;\n            }\n        }\n        head++;\n    }\n    if(h[ed]>0)return true;\n    else return false;\n}\nint mymin(int x,int y)\n{\n    return x<y?x:y;\n}\nint findflow(int x,int f)\n{\n    if(x==ed)return f;\n    int s=0,t;\n    for(int k=last[x];k;k=a[k].next)\n    {\n        int y=a[k].y;\n        if(a[k].c>0 && h[y]==(h[x]+1) && s<f)\n        {\n            s+=(t=findflow(y,mymin(a[k].c,f-s)));\n            a[k].c-=t;a[a[k].other].c+=t;\n        }\n    }\n    if(s==0)h[x]=0;\n    return s;\n}//\u4ee5\u4e0a\u5c31\u662f\u7f51\u7edc\u6d41\uff0c\u4e0d\u591a\u8bf4 \nint m,n;\nint A[310],B[310];\nint map[310];\nint main()\n{\n\tint s=0;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&A[i]),s+=A[i];//s\u8bb0\u5f55\u4eba\u6570 \n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&B[i]);\n\tst=m+n+1;ed=st+1;//\u8d77\u70b9\u548c\u7ec8\u70b9 \n\tlen=0;memset(last,0,sizeof(last));\n\tfor(int i=1;i<=m;i++)//\u8fde\u63a5\u516c\u53f8\u5230\u5706\u684c \n\t\tfor(int j=n;j>=1;j--) \n\t\t\tins(i,j+m,1);\n\tfor(int i=1;i<=m;i++) ins(st,i,A[i]);\n\tfor(int i=1;i<=n;i++) ins(m+i,ed,B[i]);\n\tint ans=0;\n\twhile(bt_h()==true) ans+=findflow(st,999999999);\n\tif(ans<s){printf(\"0\\n\");return 0;}\n\tprintf(\"1\\n\");\n\tfor(int x=1;x<=m;x++)\n\t{\n\t\tmemset(map,0,sizeof(map));\n\t\tfor(int k=last[x];k;k=a[k].next)\n\t\t{\n\t\t\tif(a[k].c==0)\n\t\t\t{\n\t\t\t\tmap[++map[0]]=a[k].y-m;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<map[0];i++) printf(\"%d \",map[i]);\n\t\tprintf(\"%d\\n\",map[map[0]]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1533708546,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P3254)\n\n\u6211\u679c\u7136\u8fd8\u662f\u592a\u849f\u4e86\u3002\u3002\u3002\u8fd9\u9053\u9898\u90fd\u8c03\u4e86\u4e24\u4e09\u6b21\u624d\u8fc7\u3002\n\n\u7f51\u7edc\u6d41\u5efa\u56fe\uff1a\n\n1.\u56e0\u4e3a\u6bcf\u4e2a\u5355\u4f4d\u53ea\u80fd\u6709r[i]\u4f4d\u4ee3\u8868\uff0c\u6240\u4ee5\u4ece\u6e90\u70b9\u5230\u6bcf\u4e2a\u5355\u4f4d\u5efa\u6d41\u4e3ar[i]\u7684\u8fb9\uff1b\n\n2.\u540c\u4e00\u5355\u4f4d\u4ee3\u8868\u4e0d\u80fd\u540c\u684c\u5c31\u9910->\u6bcf\u684c\u6bcf\u5355\u4f4d\u6700\u591a\u53ea\u6709\u4e00\u4f4d\u4ee3\u8868\n\n\u4e8e\u662f\u4ece\u6bcf\u4e2a\u5355\u4f4d\u5230\u6bcf\u684c\u5efa\u6d41\u4e3a1\u7684\u8fb9\uff1b\n\n3.\u4ece\u6bcf\u684c\u5230\u6c47\u70b9\u5efa\u6d41\u4e3ac[i]\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u6700\u5927\u6d41\u5c31\u662f\u6700\u591a\u53ef\u5206\u914d\u7684\u4ee3\u8868\u4eba\u6570\uff0c\u5982\u679c<\u603b\u4eba\u6570\u5219\u65e0\u89e3\n\n\u8dd1\u5b8cdinic\u540e\u679a\u4e3e2\u4e2d\u7684\u9053\u8def\u67e5\u770b\u6d41\u7684\u5927\u5c0f\u662f\u5426\u4e3a0\uff0c\u4e3a0\u5219\u8868\u793a\u88ab\u9009\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n### **dinic bfs\u65f6\u5fc5\u987b\u5199h<t\uff01dinic bfs\u65f6\u5fc5\u987b\u5199h<t\uff01dinic bfs\u65f6\u5fc5\u987b\u5199h<t\uff01**\n\n\uff08\u56e0\u4e3a\u5199\u6210h<=tTLE\u4e86\u5f88\u591a\u6b21\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <cstring> \n#define min(X,Y) ((X)<(Y)?(X):(Y))\n\nint head[100001],nxt[4000001],b[4000001],v[4000001],k=1;\nint n,m,r[100001],c[100001];\nint dis[100001],p[100001],S,T;\nint h,t,q[100001],exp;\ninline void push(int s,int t,int val){\n\tnxt[++k]=head[s];\n\thead[s]=k;\n\tb[k]=t;\n\tv[k]=val;\n}\nbool bfs(){\n\tmemset(dis,0,sizeof dis);\n\tdis[S]=1;\n\th=t=0;\n\tq[++t]=S;\n\twhile(h<t){\n\t\t++h;\n\t\tfor(register int i=head[q[h]];i;i=nxt[i])\n\t\t\tif(v[i]&&!dis[b[i]]){\n\t\t\t\tdis[b[i]]=dis[q[h]]+1;\n\t\t\t\tq[++t]=b[i];\n\t\t\t\tif(b[i]==T)return 1;\n\t\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int x,int flow){\n\tif(x==T||!flow)return flow;\n\tint used=0;\n\tfor(register int i=p[x];i;i=nxt[i]){\n\t\tif(v[i]&&dis[b[i]]==dis[x]+1){\n\t\t\tint w=dfs(b[i],min(flow-used,v[i]));\n\t\t\tv[i]-=w;\n\t\t\tv[i^1]+=w;\n\t\t\tused+=w;\n\t\t\tif(w)p[x]=i;\n\t\t\tif(used==flow)return flow;\n\t\t}\n\t}\n\tif(!used)dis[x]=0;\n\treturn used;\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tS=0,T=n+m+1;\n\tfor(register int i=1;i<=m;i++)scanf(\"%d\",r+i),push(S,i,r[i]),push(i,S,0),exp+=r[i];\n\tfor(register int i=1;i<=n;i++)scanf(\"%d\",c+i),push(i+m,T,c[i]),push(T,i+m,0);\n\tfor(register int i=1;i<=m;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tpush(i,j+m,1),push(j+m,i,0);\n\tint ans=0;\n\twhile(bfs()){\n\t\tmemcpy(p,head,sizeof p);\n\t\tans+=dfs(S,0x7f7f7f7f);\n\t}\n\tif(ans<exp)printf(\"0\");\n\telse{\n\t\tprintf(\"1\\n\");\n\t\tfor(register int i=1;i<=n;i++,putchar('\\n'))\n\t\t\tfor(register int j=head[i];j;j=nxt[j])\n\t\t\t\tif(!v[j]&&b[j]>m&&b[j]<T)printf(\"%d \",b[j]-m);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1533476583,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP3254 \u5706\u684c\u95ee\u9898"
    },
    {
        "content": "\n### \u3010\u9898\u76ee\u5927\u610f\u3011\n\n- \u6709n\u4e2a\u5355\u4f4d\uff0c\u6bcf\u4e00\u4e2a\u5355\u4f4d\u6709pi\u4e2a\u4eba\uff0c\u6709m\u5f20\u684c\u5b50\uff0c\u6bcf\u5f20\u684c\u5b50\u53ef\u4ee5\u5750ci\u4e2a\u4eba\u3002\u8981\u6c42\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba\u4e0d\u80fd\u5750\u5728\u540c\u4e00\u5f20\u684c\u5b50\u3002\u95ee\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u3002\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n\n- \u6784\u56fe\uff1a\u6709n\u4e2a\u70b9\uff0c\u8868\u793a\u6709n\u4e2a\u5355\u4f4d\uff1b\u6709m\u4e2a\u70b9\uff0c\u8868\u793a\u6709m\u5f20\u684c\u5b50\u3002\u6e90\u70b9\u548cn\u4e2a\u70b9\u7684\u8fb9\u5bb9\u91cf\u662fpi\uff0c\u8868\u793a\u7b2ci\u4e2a\u5355\u4f4d\u6709pi\u4e2a\u4eba\uff1b\u6c47\u70b9\u548cm\u4e2a\u70b9\u7684\u8fb9\u5bb9\u91cf\u662fci\uff0c\u8868\u793a\u7b2ci\u5f20\u684c\u5b50\u53ef\u4ee5\u5750ci\u4e2a\u4eba\u3002\u6bcf\u4e00\u4e2a\u5355\u4f4d\u90fd\u4e0e\u6bcf\u4e00\u5f20\u684c\u5b50\u6709\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u6bcf\u4e00\u4e2a\u5355\u4f4d\u53ea\u67091\u4e2a\u4eba\u53bb\u6bcf\u4e00\u5f20\u684c\u5b50\uff0c\u8fd9\u6837\u4e00\u4e2a\u5355\u4f4d\u7684\u4eba\u5c31\u4e0d\u4f1a\u5750\u5728\u540c\u4e00\u5f20\u684c\u5b50\u4e86\u3002\n- \u4f1a\u4e0d\u4f1a\u51fa\u73b0\u201c\u51ed\u7a7a\u51fa\u73b0\u201d\u4e00\u4e2a\u4eba\u7684\u60c5\u51b5\u5462\uff1f\n- \u4e0d\u4f1a\uff0c\u56e0\u4e3a\u6e90\u70b9\u548c\u5355\u4f4d\u70b9\u7684\u8fb9\u7684\u5bb9\u91cf\u5c31\u662f\u8fd9\u4e2a\u5355\u4f4d\u7684\u4eba\u6570\uff0c\u4e0d\u53ef\u80fd\u591a\uff0c\u53cd\u800c\u5982\u679c\u5c11\u4e86\uff0c\u5c31\u8bc1\u660e\u6709\u4ee3\u8868\u6ca1\u996d\u5403\uff0c\u6240\u4ee5\u6ca1\u6709\u65b9\u6848\u3002\n- \u4ea7\u751f\u4e00\u4e2a\u6700\u5927\u6d41\u7684\u8def\u5f84\u8868\u793a\u7b2ci\u4e2a\u5355\u4f4d\u76841\u4e2a\u4eba\uff0c\u53ef\u4ee5\u5750\u5728\u684c\u5b50j\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5355\u4f4d\uff0c\u548c\u6bcf\u4e00\u5f20\u684c\u5b50\uff0c\u5982\u679c\u5355\u4f4d\u548c\u684c\u5b50\u7684\u8fb9\u6b8b\u4f59\u5bb9\u91cf\u662f0\uff0c\u5c31\u8bc1\u660e\u8fd9\u91cc\u6709\u4e00\u4e2a\u65b9\u6848\uff0c\u8f93\u51fa\u65b9\u6848\u3002\n\n### \u3010\u89e3\u9898\u53cd\u601d\u3011\n- \u6784\u56fe\u65f6\u8981\u6ce8\u610f\u70b9\u7684\u6807\u53f7\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include<cstdio>\n#include<string.h>\n#define min(a,b)(a<b?a:b)\n#define oo 2147483647\nstruct EDGE{int next,t,c;}e[4000005];\nint vis[1000005],head[1000005],peo[1000005],din[1000005],s,t,cur,n,m,sum;\nint dfs(int now,int mi)\n{\n\tif (vis[now]) return 0;\n\tvis[now]=true;\n\tif (now==t) return mi;\n\tint h=head[now];\n\twhile (h!=-1)\n\t{\n\t\tint t=e[h].t;\n\t\tif (e[h].c)\n\t\t{\n\t\t\tint res=dfs(t,min(mi,e[h].c));\n\t\t\tif (res)\n\t\t\t{\n\t\t\t\te[h].c-=res;\n\t\t\t\te[h^1].c+=res;\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\th=e[h].next;\n\t}\n\treturn 0;\n}\nvoid Init()\n{\n\ts=0;t=m+n+1;\n\tmemset(head,-1,sizeof(head));\n\tcur=-1;\n}\nvoid add(int a,int b,int c)\n{\n\tcur++;\n\te[cur].t=b;\n\te[cur].next=head[a];\n\te[cur].c=c;\n\thead[a]=cur;\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&peo[i]);\n\t\tsum+=peo[i];\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&din[i]);\n\tInit();\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tadd(s,i,peo[i]);\n\t\tadd(i,s,0);\n\t\tfor (int j=m+1;j<=m+n;j++)\n\t\t{\n\t\t\tadd(i,j,1);\n\t\t\tadd(j,i,0);\n\t\t}\n\t}\n\tfor (int j=m+1;j<=m+n;j++)\n\t{\n\t\tadd(j,t,din[j-m]);\n\t\tadd(t,j,0);\n\t}\n\tint ans=0;\n\twhile (1)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tint res=dfs(s,oo);\n\t\tif (res) ans+=res;else break;\n\t}\n\tif (ans==sum) printf(\"1\\n\");else printf(\"0\\n\");\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint h=head[i];\n\t\twhile (h!=-1)\n\t\t{\n\t\t\tint to=e[h].t;\n\t\t\tif (e[h].c==0&&to!=s) printf(\"%d \",to-m);\n\t\t\th=e[h].next;\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1532497233,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    },
    {
        "content": "\u8bbe\u6bcf\u4e2a\u5355\u4f4d\u7684\u4ee3\u8868\u6570\u91cf\u4e3a $W_i$\uff0c\u6bcf\u5f20\u684c\u5b50\u7684\u5ea7\u4f4d\u6570\u91cf\u4e3a $T_i$\u3002\n\n\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5355\u4f4d\u62c6\u6210 $W_i$ \u4e2a\u70b9\uff0c\u628a\u684c\u5b50\u62c6\u6210 $T_i$ \u4e2a\u70b9\uff0c\u7136\u540e\u7528KM\u7b97\u6cd5\u6c42\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u3002\n\n\u4f46\u662f\u5982\u679c\u5229\u7528\u7f51\u7edc\u6d41\u53ef\u4ee5\u5c06\u4e00\u4e9b\u70b9\u5408\u5e76\u3002\n\n\u6784\u56fe\u65b9\u5f0f\uff1a\n1. \u9644\u52a0\u6e90\u6c47 $S$ \u548c $T$ \n2. \u4ece $S$ \u5411\u6bcf\u4e2a\u5355\u4f4d\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $W_i$ \u7684\u8fb9\u3002\n3. \u4ece\u6bcf\u5f20\u684c\u5b50\u5411 $T$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $T_i$ \u7684\u8fb9\u3002\n4. \u4ece\u6bcf\u4e2a\u5355\u4f4d\u5411\u6bcf\u5f20\u684c\u5b50\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\n\n\u8fd9\u6837\uff0c\u6bcf\u6761\u53ef\u884c\u6d41\u5bf9\u5e94\u4e00\u4e2a\u4ee3\u8868\u5750\u8fdb\u4e00\u5f20\u684c\u5b50\u91cc\uff0c\u8bbe\u6700\u5927\u6d41\u4e3a $f$\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $f=\\sum W_i $ \u65f6\u95ee\u9898\u6709\u89e3\u3002\n\n\u867d\u7136\u8bf4$Dinic$\u5904\u7406\u4e8c\u5206\u56fe\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\u0398(\\sqrt n\\ m)$\uff0c\u4f46\u5728\u8fd9\u79cd\u56fe\u4e2d\uff0c\u6bcf\u6b21DFS\u53ea\u80fd\u6d41 $1$ \u7684\u589e\u5e7f\u8def\uff0c\u7136\u540e\u53c8\u8981\u91cd\u65b0BFS\uff0c\u904d\u5386\u6574\u5f20\u56fe\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$Isap$\u80fd\u6839\u636e\u9644\u8fd1\u7684\u70b9\u5230\u6c47\u70b9\u7684\u8ddd\u79bb\uff0c\u4e34\u65f6\u4fee\u6539\u5230\u6c47\u70b9\u7684\u8ddd\u79bb\uff0c\u4e0d\u7528\u904d\u5386\u6574\u5f20\u56fe\uff0c\u867d\u7136\u6e10\u8fdb\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u6539\u53d8\uff0c\u4f46\u6548\u7387\u5374\u6446\u5728\u773c\u524d\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u91c7\u7528\u4e86\u94fe\u5f0f\u5411\u524d\u661f\uff0c\u6548\u7387\u6bd4\u5411\u524d\u661f\u9ad8\uff0c\u6709\u5173\u8f93\u51fa\u53ef\u884c\u89e3\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u94fe\u5f0f\u5411\u524d\u661f\u4e2d\u627e\u90a3\u4e9b\u8fb9\u7684\u6d41\u91cf\u88ab\u6d41\u5b8c\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nclass ISAP {\n\tstatic const int maxn=10010;\n\tstatic const int maxm=100100;\n\tstatic const int INF=0x7fffffff;\n    int n,s,t,len;\n    struct Edge{//\u94fe\u5f0f\u5411\u524d\u661f\n    \tint from,to,flow,next;\n\t};\n    bool vis[maxn];\n    int dis[maxn];\n    int cur[maxn];\n    int p[maxn];\n    int num[maxn];\n    inline bool rev_bfs(void){\n        memset(vis,0,sizeof(vis));\n        queue<int> q;\n        q.push(t);\n        dis[t]=0;\n        vis[t]=1;\n        while(!q.empty()){\n            int x=q.front();\n            q.pop();\n            for(register int i=head[x];i;i=edges[i].next){\n                Edge &e=edges[i^1];\n                if(!vis[e.from]&&e.flow>0){\n                    vis[e.from]=1;\n                    dis[e.from]=dis[x]+1;\n                    q.push(e.from);\n                }\n            }\n        }\n        return vis[s];\n    }\n    //\u589e\u5e7f\n    inline int augment(){\n        int x=t,mx=INF;\n        while(x!=s){\n            Edge &e=edges[p[x]];\n            mx=min(mx,e.flow);\n            x=e.from;\n        }\n        x=t;\n        while(x!=s){\n            edges[p[x]].flow-=mx;\n            edges[p[x]^1].flow+=mx;\n            x=edges[p[x]].from;\n        }\n        return mx;\n    }\npublic:\n    int head[maxn];\n\tEdge edges[maxm<<1];\n    inline void clear(){\n        memset(head,0,sizeof(head));\n        len=1;\n    }\n    inline ISAP(void){\n        memset(head,0,sizeof(head));\n        len=1;\n    }\n    inline void ins(int from,int to,int flow,int rev=0){\n        edges[++len]=((Edge){from,to,flow,head[from]});\n        head[from]=len;\n        edges[++len]=((Edge){to,from,rev,head[to]});\n        head[to]=len;\n    }\n    inline int max_flow(int s,int t,int n){\n        this->s=s,this->t=t,this->n=n;\n        int flow=0;\n        rev_bfs();\n        memset(num,0,sizeof(num));\n        for(int i=0; i<n; i++)\n            num[dis[i]]++;\n        int x=s;\n        memcpy(cur,head,sizeof(cur));\n        while(dis[s]<n){\n            if(x==t){\n                flow+=augment();\n                x=s;\n            }\n            bool tf=false;\n            //\u5f53\u524d\u5f27\u4f18\u5316\n            for(register int &i=cur[x];i;i=edges[i].next){\n                Edge &e=edges[i];\n                if(e.flow>0&&dis[x]==dis[e.to]+1){\n                    tf=true;\n                    p[e.to]=i;\n                    x=e.to;\n                    break;\n                }\n            }\n            //\u6539\u53d8\u5230\u6c47\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e5f\u53eb\u505aRetreat\n            if(!tf){\n                int m=n-1;\n                for(register int i=head[x];i;i=edges[i].next){\n                    Edge &e=edges[i];\n                    if(e.flow>0)\n                        m=min(m,dis[e.to]);\n                }\n                //Gap\u4f18\u5316\n                if(--num[dis[x]]==0)\n                    break;\n                num[dis[x]=m+1]++;\n                cur[x]=head[x];\n                if(x!=s)\n                    x=edges[p[x]].from;\n            }\n        }\n        return flow;\n    }\n}solve;\n//\u795e\u7ea7\u8bfb\u5165\u4f18\u5316\ninline char nc() {\n    static char buf[1000000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read(int &sum) {\n    char ch=nc();\n    sum=0;\n    while(!(ch>='0'&&ch<='9'))\n        ch=nc();\n    while(ch>='0'&&ch<='9')\n        sum=(sum<<3)+(sum<<1)+(ch^48),ch=nc();\n    return sum;\n}\nint n,m,ss=0;\nint main(void)\n{\n    solve.clear();\n    read(n),read(m);\n    int s=n+m+1,t=n+m+2;\n    for(int i=1,x;i<=n;i++){\n    \tread(x);ss+=x;\n    \tsolve.ins(s,i,x);\n    }\n    for(int i=1,x;i<=m;i++){\n    \tread(x);\n    \tsolve.ins(i+n,t,x);\n    }\n    for(int i=1;i<=n;i++)\n    \tfor(int j=1;j<=m;j++)\n    \t\tsolve.ins(i,j+n,1);\n    if(solve.max_flow(s,t,n+m+2)==ss){\n    \tprintf(\"1\\n\");\n    \tfor(int k=1;k<=n;k++){//\u8f93\u51fa\u53ef\u884c\u89e3\n    \t\tfor(int i=solve.head[k];i;i=solve.edges[i].next)\n    \t\t\tif(solve.edges[i].to!=s&&solve.edges[i].flow==0)\n    \t\t\t\tprintf(\"%d \",solve.edges[i].to-n);\n    \t\tprintf(\"\\n\");\n    \t}\n    }else\n    \tprintf(\"0\\n\");\n    return 0;\n}\n```",
        "postTime": 1521899386,
        "uid": 29372,
        "name": "glassy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3254 \u3010\u5706\u684c\u95ee\u9898\u3011"
    }
]