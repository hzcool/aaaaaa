[
    {
        "content": "\u6807\u7b97\u597d\u5f3a\u554a\uff0c\u7ed9\u4e00\u4e2a\u5de8\u5927\u9ebb\u70e6\u7684\u505a\u6cd5\u3002\n\n## 1 \u9759\u6001\u505a\u6cd5\n\n\u7531\u4e8e $t\\leq 3$\uff0c\u6240\u4ee5\u8003\u8651\u5e8f\u5217\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u52a0\u4e86\u591a\u5c11\uff0c\u8bbe\u8be5\u503c\u4e3a $b_{[1,n]}$\u3002\n\n\u53d1\u73b0\u5982\u679c\u5c06 $b_{[1,n]}$ \u7684\u76f8\u540c\u7684\u8fde\u7eed\u6bb5\u7f29\u5230\u4e00\u8d77\uff0c\u90a3\u4e48\u9700\u8981\u5206\u5f00\u8ba8\u8bba\u7684\u53ea\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\n\n1. $(0),(1),2,1,2,(1),(0)$\n1. $(0),(1),(2),3,(2),(1),(0)$\n1. $(0),1,0,(1),2,(1),(0)$\n1. $(0),(1),2,(1),0,1,(0)$\n1. $(0),1,0,1,0,1,(0)$\n1. $(0),1,0,1,(0)$\n1. $(0),(1),2,(1),(0)$\n1. $(0),1,(0)$\n1. $0$\n\n\u5176\u4e2d\u5982\u679c\u4e00\u4e2a\u6570\u52a0\u4e86\u62ec\u53f7\u5c31\u4ee3\u8868\u5bf9\u5e94\u7684\u6bb5\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u5426\u5219\u5c31\u4e0d\u80fd\u4e3a\u7a7a\u3002\n\n\u7136\u540e\u7b2c $9$ \u79cd\u76f4\u63a5\u7b97\uff0c\u524d $8$ \u79cd\u7528\u5206\u9636\u6bb5\u7684 DP \u8ba1\u7b97\u3002\n\n### 1.1 \u7b2c 1 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4/5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,5}$ \u53ef\u4ee5\u5411 $f_{i+1,5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,6}$ \u53ef\u4ee5\u5411 $f_{i+1,6}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4/5/6}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1}+2,a_{i+1}+1,a_{i+1}+2,a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,6}$\u3002\uff08\u5047\u5b9a $a_{n+1}=1$\uff09\n\n### 1.2 \u7b2c 2 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1/2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4/5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4/5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,5}$ \u53ef\u4ee5\u5411 $f_{i+1,5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,6}$ \u53ef\u4ee5\u5411 $f_{i+1,6}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4/5/6}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1}+2,a_{i+1}+3,a_{i+1}+2,a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,6}$\u3002\n\n### 1.3 \u7b2c 3 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4/5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,5}$ \u53ef\u4ee5\u5411 $f_{i+1,5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,6}$ \u53ef\u4ee5\u5411 $f_{i+1,6}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4/5/6}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1},a_{i+1}+1,a_{i+1}+2,a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,6}$\u3002\n\n### 1.4 \u7b2c 4 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4/5}$ \u8f6c\u79fb\uff1b\n- $f_{i,5}$ \u53ef\u4ee5\u5411 $f_{i+1,5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,6}$ \u53ef\u4ee5\u5411 $f_{i+1,6}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4/5/6}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1}+2,a_{i+1}+1,a_{i+1},a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,6}$\u3002\n\n### 1.5 \u7b2c 5 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4/5}$ \u8f6c\u79fb\uff1b\n- $f_{i,5}$ \u53ef\u4ee5\u5411 $f_{i+1,5/6}$ \u8f6c\u79fb\uff1b\n- $f_{i,6}$ \u53ef\u4ee5\u5411 $f_{i+1,6}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4/5/6}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1},a_{i+1}+1,a_{i+1},a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,6}$\u3002\n\n### 1.6 \u7b2c 6 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1},a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,4}$\u3002\n\n### 1.7 \u7b2c 7 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2/3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,3}$ \u53ef\u4ee5\u5411 $f_{i+1,3/4}$ \u8f6c\u79fb\uff1b\n- $f_{i,4}$ \u53ef\u4ee5\u5411 $f_{i+1,4}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2/3/4}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1}+2,a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,4}$\u3002\n\n### 1.8 \u7b2c 8 \u79cd\n\n- $f_{i,0}$ \u53ef\u4ee5\u5411 $f_{i+1,0/1}$ \u8f6c\u79fb\uff1b\n- $f_{i,1}$ \u53ef\u4ee5\u5411 $f_{i+1,1/2}$ \u8f6c\u79fb\uff1b\n- $f_{i,2}$ \u53ef\u4ee5\u5411 $f_{i+1,2}$ \u8f6c\u79fb\u3002\n\n\u8f6c\u79fb\u5230 $f_{i+1,0/1/2}$ \u65f6\u5206\u522b\u4e58\u4e0a $a_{i+1},a_{i+1}+1,a_{i+1}$\u3002\n\n\u8fb9\u754c $f_{0,0}=1$\uff0c\u76ee\u6807 $f_{n+1,2}$\u3002\n\n---\n\n\u76ee\u6807\u662f\uff1a\n\n- \u5982\u679c $t=1$\uff0c\u5c31\u662f\u7b2c $[8,9]$ \u79cd\u7684\u7b54\u6848\u6c42\u548c\u3002\n- \u5982\u679c $t=2$\uff0c\u5c31\u662f\u7b2c $[6,9]$ \u79cd\u7684\u7b54\u6848\u6c42\u548c\u3002\n- \u5982\u679c $t=3$\uff0c\u5c31\u662f\u7b2c $[1,9]$ \u79cd\u7684\u7b54\u6848\u6c42\u548c\u3002\n\n\u5982\u6b64 DP\uff0c\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u53ef\u4ee5\u8fc7\u6389 $30$ \u5206\u3002\n\n## 2 \u52a8\u6001\u505a\u6cd5\n\n\u5c31\u662f\u76f4\u63a5\u628a\u8fd9\u4e2a\u9636\u6bb5 DP \u52a8\u6001\u5316\uff0c\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u9762\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u7528\u5230\u5b98\u65b9\u9898\u89e3\u4e2d\u63d0\u5230\u7684\u5411\u91cf\u4e58\u77e9\u9635\u4f18\u5316\u5e38\u6570\u3002\n\n\u8fd9\u4e2a\u5783\u573e\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u867d\u7136\u4e5f\u662f $O(n+q\\log n)$\uff0c\u4f46\u662f\u5e38\u6570\u6bd4\u6807\u7b97\u5927\u6982\u5927\u4e86 3 \u500d\u3002\u3002\u3002\n\n\u628a\u77e9\u4e58\u7684\u8fc7\u7a0b\u5faa\u73af\u5c55\u5f00\u4e86\u4e00\u5c42\u5c31\u53ef\u4ee5\u8dd1\u5f97\u8ddf\u6807\u7b97\u5dee\u4e0d\u591a\u5feb\u3002\n\n~~\u4ee5\u4e0b\u662f\u58ee\u89c2\u7684 9kb \u4ee3\u7801\uff0c\u4e0d\u4f1a\u771f\u6709\u4eba\u60f3\u770b\u5427~~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int mod = 10007;\n\nstruct Matrix8 {\n\tint f1[7][7], f2[7][7], f3[7][7], f4[7][7], f5[7][7], f6[5][5], f7[5][5], f8[3][3];\n\tinline Matrix8 operator * (const Matrix8& b) const {\n\t\tMatrix8 res;\n\t\tfor (int i = 0;i < 7;i++) {\n\t\t\tfor (int j = 0;j < 7;j++) {\n\t\t\t\tres.f1[i][j] = (f1[i][0] * b.f1[0][j] + f1[i][1] * b.f1[1][j] + f1[i][2] * b.f1[2][j] + f1[i][3] * b.f1[3][j] + f1[i][4] * b.f1[4][j] + f1[i][5] * b.f1[5][j] + f1[i][6] * b.f1[6][j]) % mod;\n\t\t\t\tres.f2[i][j] = (f2[i][0] * b.f2[0][j] + f2[i][1] * b.f2[1][j] + f2[i][2] * b.f2[2][j] + f2[i][3] * b.f2[3][j] + f2[i][4] * b.f2[4][j] + f2[i][5] * b.f2[5][j] + f2[i][6] * b.f2[6][j]) % mod;\n\t\t\t\tres.f3[i][j] = (f3[i][0] * b.f3[0][j] + f3[i][1] * b.f3[1][j] + f3[i][2] * b.f3[2][j] + f3[i][3] * b.f3[3][j] + f3[i][4] * b.f3[4][j] + f3[i][5] * b.f3[5][j] + f3[i][6] * b.f3[6][j]) % mod;\n\t\t\t\tres.f4[i][j] = (f4[i][0] * b.f4[0][j] + f4[i][1] * b.f4[1][j] + f4[i][2] * b.f4[2][j] + f4[i][3] * b.f4[3][j] + f4[i][4] * b.f4[4][j] + f4[i][5] * b.f4[5][j] + f4[i][6] * b.f4[6][j]) % mod;\n\t\t\t\tres.f5[i][j] = (f5[i][0] * b.f5[0][j] + f5[i][1] * b.f5[1][j] + f5[i][2] * b.f5[2][j] + f5[i][3] * b.f5[3][j] + f5[i][4] * b.f5[4][j] + f5[i][5] * b.f5[5][j] + f5[i][6] * b.f5[6][j]) % mod;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0;i < 5;i++) {\n\t\t\tfor (int j = 0;j < 5;j++) {\n\t\t\t\tres.f6[i][j] = (f6[i][0] * b.f6[0][j] + f6[i][1] * b.f6[1][j] + f6[i][2] * b.f6[2][j] + f6[i][3] * b.f6[3][j] + f6[i][4] * b.f6[4][j]) % mod;\n\t\t\t\tres.f7[i][j] = (f7[i][0] * b.f7[0][j] + f7[i][1] * b.f7[1][j] + f7[i][2] * b.f7[2][j] + f7[i][3] * b.f7[3][j] + f7[i][4] * b.f7[4][j]) % mod;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0;i < 3;i++) {\n\t\t\tfor (int j = 0;j < 3;j++) {\n\t\t\t\tres.f8[i][j] = (f8[i][0] * b.f8[0][j] + f8[i][1] * b.f8[1][j] + f8[i][2] * b.f8[2][j]) % mod;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n};\nstruct Result8 {\n\tint f1[7], f2[7], f3[7], f4[7], f5[7], f6[5], f7[5], f8[3];\n\tResult8() {\n\t\tmemset(f1, 0, sizeof(f1));\n\t\tmemset(f2, 0, sizeof(f2));\n\t\tmemset(f3, 0, sizeof(f3));\n\t\tmemset(f4, 0, sizeof(f4));\n\t\tmemset(f5, 0, sizeof(f5));\n\t\tmemset(f6, 0, sizeof(f6));\n\t\tmemset(f7, 0, sizeof(f7));\n\t\tmemset(f8, 0, sizeof(f8));\n\t}\n\tinline Result8 operator * (const Matrix8& b) const {\n\t\tResult8 res;\n\t\tfor (int j = 0;j < 7;j++) {\n\t\t\tres.f1[j] = (f1[0] * b.f1[0][j] + f1[1] * b.f1[1][j] + f1[2] * b.f1[2][j] + f1[3] * b.f1[3][j] + f1[4] * b.f1[4][j] + f1[5] * b.f1[5][j] + f1[6] * b.f1[6][j]) % mod;\n\t\t\tres.f2[j] = (f2[0] * b.f2[0][j] + f2[1] * b.f2[1][j] + f2[2] * b.f2[2][j] + f2[3] * b.f2[3][j] + f2[4] * b.f2[4][j] + f2[5] * b.f2[5][j] + f2[6] * b.f2[6][j]) % mod;\n\t\t\tres.f3[j] = (f3[0] * b.f3[0][j] + f3[1] * b.f3[1][j] + f3[2] * b.f3[2][j] + f3[3] * b.f3[3][j] + f3[4] * b.f3[4][j] + f3[5] * b.f3[5][j] + f3[6] * b.f3[6][j]) % mod;\n\t\t\tres.f4[j] = (f4[0] * b.f4[0][j] + f4[1] * b.f4[1][j] + f4[2] * b.f4[2][j] + f4[3] * b.f4[3][j] + f4[4] * b.f4[4][j] + f4[5] * b.f4[5][j] + f4[6] * b.f4[6][j]) % mod;\n\t\t\tres.f5[j] = (f5[0] * b.f5[0][j] + f5[1] * b.f5[1][j] + f5[2] * b.f5[2][j] + f5[3] * b.f5[3][j] + f5[4] * b.f5[4][j] + f5[5] * b.f5[5][j] + f5[6] * b.f5[6][j]) % mod;\n\t\t}\n\t\tfor (int j = 0;j < 5;j++) {\n\t\t\tres.f6[j] = (f6[0] * b.f6[0][j] + f6[1] * b.f6[1][j] + f6[2] * b.f6[2][j] + f6[3] * b.f6[3][j] + f6[4] * b.f6[4][j]) % mod;\n\t\t\tres.f7[j] = (f7[0] * b.f7[0][j] + f7[1] * b.f7[1][j] + f7[2] * b.f7[2][j] + f7[3] * b.f7[3][j] + f7[4] * b.f7[4][j]) % mod;\n\t\t}\n\t\tfor (int j = 0;j < 3;j++) {\n\t\t\tres.f8[j] = (f8[0] * b.f8[0][j] + f8[1] * b.f8[1][j] + f8[2] * b.f8[2][j]) % mod;\n\t\t}\n\t\treturn res;\n\t}\n};\nint idx;\nstruct Segtree {\n\tMatrix8 nd[400055];\n\tinline void Build(int p, int pl, int pr, int *a, int n) {\n\t\tif (pl == pr) {\n\t\t\tif (pr == n) idx = p;\n\t\t\tnd[p].f1[0][0] = a[pl];\n\t\t\tnd[p].f1[0][1] = a[pl] + 1;\n\t\t\tnd[p].f1[0][2] = a[pl] + 2;\n\t\t\tnd[p].f1[1][1] = a[pl] + 1;\n\t\t\tnd[p].f1[1][2] = a[pl] + 2;\n\t\t\tnd[p].f1[2][2] = a[pl] + 2;\n\t\t\tnd[p].f1[2][3] = a[pl] + 1;\n\t\t\tnd[p].f1[3][3] = a[pl] + 1;\n\t\t\tnd[p].f1[3][4] = a[pl] + 2;\n\t\t\tnd[p].f1[4][4] = a[pl] + 2;\n\t\t\tnd[p].f1[4][5] = a[pl] + 1;\n\t\t\tnd[p].f1[4][6] = a[pl];\n\t\t\tnd[p].f1[5][5] = a[pl] + 1;\n\t\t\tnd[p].f1[5][6] = a[pl];\n\t\t\tnd[p].f1[6][6] = a[pl];\n\n\t\t\tnd[p].f2[0][0] = a[pl];\n\t\t\tnd[p].f2[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f2[0][2] = (a[pl] + 2);\n\t\t\tnd[p].f2[0][3] = (a[pl] + 3);\n\t\t\tnd[p].f2[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f2[1][2] = (a[pl] + 2);\n\t\t\tnd[p].f2[1][3] = (a[pl] + 3);\n\t\t\tnd[p].f2[2][2] = (a[pl] + 2);\n\t\t\tnd[p].f2[2][3] = (a[pl] + 3);\n\t\t\tnd[p].f2[3][3] = (a[pl] + 3);\n\t\t\tnd[p].f2[3][4] = (a[pl] + 2);\n\t\t\tnd[p].f2[3][5] = (a[pl] + 1);\n\t\t\tnd[p].f2[3][6] = a[pl];\n\t\t\tnd[p].f2[4][4] = (a[pl] + 2);\n\t\t\tnd[p].f2[4][5] = (a[pl] + 1);\n\t\t\tnd[p].f2[4][6] = a[pl];\n\t\t\tnd[p].f2[5][5] = (a[pl] + 1);\n\t\t\tnd[p].f2[5][6] = a[pl];\n\t\t\tnd[p].f2[6][6] = a[pl];\n\n\t\t\tnd[p].f3[0][0] = a[pl];\n\t\t\tnd[p].f3[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f3[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f3[1][2] = a[pl];\n\t\t\tnd[p].f3[2][2] = a[pl];\n\t\t\tnd[p].f3[2][3] = (a[pl] + 1);\n\t\t\tnd[p].f3[2][4] = (a[pl] + 2);\n\t\t\tnd[p].f3[3][3] = (a[pl] + 1);\n\t\t\tnd[p].f3[3][4] = (a[pl] + 2);\n\t\t\tnd[p].f3[4][4] = (a[pl] + 2);\n\t\t\tnd[p].f3[4][5] = (a[pl] + 1);\n\t\t\tnd[p].f3[4][6] = a[pl];\n\t\t\tnd[p].f3[5][5] = (a[pl] + 1);\n\t\t\tnd[p].f3[5][6] = a[pl];\n\t\t\tnd[p].f3[6][6] = a[pl];\n\n\t\t\tnd[p].f4[0][0] = a[pl];\n\t\t\tnd[p].f4[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f4[0][2] = (a[pl] + 2);\n\t\t\tnd[p].f4[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f4[1][2] = (a[pl] + 2);\n\t\t\tnd[p].f4[2][2] = (a[pl] + 2);\n\t\t\tnd[p].f4[2][3] = (a[pl] + 1);\n\t\t\tnd[p].f4[2][4] = a[pl];\n\t\t\tnd[p].f4[3][3] = (a[pl] + 1);\n\t\t\tnd[p].f4[3][4] = a[pl];\n\t\t\tnd[p].f4[4][4] = a[pl];\n\t\t\tnd[p].f4[4][5] = (a[pl] + 1);\n\t\t\tnd[p].f4[5][5] = (a[pl] + 1);\n\t\t\tnd[p].f4[5][6] = a[pl];\n\t\t\tnd[p].f4[6][6] = a[pl];\n\n\t\t\tnd[p].f5[0][0] = a[pl];\n\t\t\tnd[p].f5[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f5[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f5[1][2] = a[pl];\n\t\t\tnd[p].f5[2][2] = a[pl];\n\t\t\tnd[p].f5[2][3] = (a[pl] + 1);\n\t\t\tnd[p].f5[3][3] = (a[pl] + 1);\n\t\t\tnd[p].f5[3][4] = a[pl];\n\t\t\tnd[p].f5[4][4] = a[pl];\n\t\t\tnd[p].f5[4][5] = (a[pl] + 1);\n\t\t\tnd[p].f5[5][5] = (a[pl] + 1);\n\t\t\tnd[p].f5[5][6] = a[pl];\n\t\t\tnd[p].f5[6][6] = a[pl];\n\n\t\t\tnd[p].f6[0][0] = a[pl];\n\t\t\tnd[p].f6[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f6[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f6[1][2] = a[pl];\n\t\t\tnd[p].f6[2][2] = a[pl];\n\t\t\tnd[p].f6[2][3] = (a[pl] + 1);\n\t\t\tnd[p].f6[3][3] = (a[pl] + 1);\n\t\t\tnd[p].f6[3][4] = a[pl];\n\t\t\tnd[p].f6[4][4] = a[pl];\n\n\t\t\tnd[p].f7[0][0] = a[pl];\n\t\t\tnd[p].f7[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f7[0][2] = (a[pl] + 2);\n\t\t\tnd[p].f7[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f7[1][2] = (a[pl] + 2);\n\t\t\tnd[p].f7[2][2] = (a[pl] + 2);\n\t\t\tnd[p].f7[2][3] = (a[pl] + 1);\n\t\t\tnd[p].f7[2][4] = a[pl];\n\t\t\tnd[p].f7[3][3] = (a[pl] + 1);\n\t\t\tnd[p].f7[3][4] = a[pl];\n\t\t\tnd[p].f7[4][4] = a[pl];\n\n\t\t\tnd[p].f8[0][0] = a[pl];\n\t\t\tnd[p].f8[0][1] = (a[pl] + 1);\n\t\t\tnd[p].f8[1][1] = (a[pl] + 1);\n\t\t\tnd[p].f8[1][2] = a[pl];\n\t\t\tnd[p].f8[2][2] = a[pl];\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tBuild(p << 1, pl, mid, a, n);\n\t\tBuild(p << 1 | 1, mid + 1, pr, a, n);\n\t\tnd[p] = nd[p << 1] * nd[p << 1 | 1];\n\t}\n\tinline void Query(int p, int pl, int pr, int l, int r, Result8& ans) {\n\t\tif (pl == l && pr == r) {\n\t\t\tans = ans * nd[p];\n\t\t\treturn;\n\t\t}\n\t\tint mid = pl + pr >> 1;\n\t\tif (mid >= r) Query(p << 1, pl, mid, l, r, ans);\n\t\telse if (mid + 1 <= l) Query(p << 1 | 1, mid + 1, pr, l, r, ans);\n\t\telse {\n\t\t\tQuery(p << 1, pl, mid, l, mid, ans);\n\t\t\tQuery(p << 1 | 1, mid + 1, pr, mid + 1, r, ans);\n\t\t}\n\t}\n};\nSegtree sgt;\nint n, q, t, a[100005], prod[100005], iprod[100005];\n\ninline void Read() {\n\tn = qread(); q = qread(); t = qread();\n\tiprod[0] = prod[0] = 1;\n\tfor (int i = 1;i <= n;i++) prod[i] = prod[i - 1] * (a[i] = qread()) % mod;\n\ta[++n] = 1;\n\tprod[n] = prod[n - 1];\n}\n\ninline int Power(int x, int y) {\n\tint ans = 1;\n\twhile (y) {\n\t\tif (y & 1) ans = ans * x % mod;\n\t\tx = x * x % mod;\n\t\ty >>= 1;\n\t}\n\treturn ans;\n}\n\ninline void Prefix() {\n\tsgt.Build(1, 1, n, a, n);\n\tiprod[n] = Power(prod[n], mod - 2);\n\tfor (int i = n - 1;i >= 1;i--) iprod[i] = iprod[i + 1] * a[i + 1] % mod;\n}\n\ninline void Solve() {\n\twhile (q--) {\n\t\tint l = qread(), r = qread();\n\t\tResult8 res;\n\t\tif (t >= 1) res.f8[0] = 1;\n\t\tif (t >= 2) res.f7[0] = res.f6[0] = 1;\n\t\tif (t >= 3) res.f5[0] = res.f4[0] = res.f3[0] = res.f2[0] = res.f1[0] = 1;\n\t\tsgt.Query(1, 1, n, l, r, res);\n\t\tres = res * sgt.nd[idx];\n\t\tprintf(\"%d\\n\", (res.f1[6] + res.f2[6] + res.f3[6] + res.f4[6] + res.f5[6] + res.f6[4] + res.f7[4] + res.f8[2] + prod[r] * iprod[l - 1]) % mod);\n\t}\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifdef CFA_44\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1622966138,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7576 \u3010\u300cPMOI-3\u300d\u671f\u671b\u4e58\u79ef\u3011"
    }
]