[
    {
        "content": "\u770b\u5230 Venus \u7684\u9898\u89e3\u5199\u9053\uff1a\u9996\u5148\u6392\u9664Treap Splay\u8fd9\u79cd\u6839\u672c\u4e0d\u53ef\u80fd\u7528\u4e8e\u8fd9\u9898\u7684\u4e1c\u897f\n\n\u6240\u4ee5\u6211\u4eec\u6765\u7528 $ Splay $ \u6765\u505a\u8fd9\u9898\n\n$ Splay $ \u53ef\u4ee5\u7b80\u5355\u7684\u63d0\u53d6\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u8981\u63d0\u53d6\u51fa $ [l, r] $ \u8fd9\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u5148 $ splay (root, r + 1) $\uff0c\u6b64\u65f6 $ root $ \u7684\u5de6\u5b69\u5b50\u662f\u533a\u95f4 $ [1, r] $\uff0c\u7136\u540e\u6211\u4eec $ splay (root -> leftson, l - 1) $\uff0c\u6b64\u65f6 $ root $ \u7684\u5de6\u5b69\u5b50\u7684\u53f3\u5b69\u5b50\u662f\u533a\u95f4 $ [l, r] $\uff0c\u6211\u4eec\u5728\u8282\u70b9\u4e0a\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\n\n\u5f53\u7136\u5982\u679c\u76f4\u63a5 $ splay (root, r + 1) $ \u53ef\u80fd\u4f1a\u51fa\u9505\uff0c\u5982\u679c $ l = 1 \\ \\&\\&\\ r = n$\uff0c$ splay (root, r + 1 ) $ \u53ef\u80fd\u4f1a\u5bfc\u81f4 $ RE $\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u653e\u4e00\u4e2a\u8282\u70b9\uff0c\u6539\u6210 $ splay (root, r + 2) $ \u540e $ splay (root -> leftson, l) $ \u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n#define CIOS ios::sync_with_stdio(false);\n#define rep(i, a, b) for(register int i = a; i <= b; i++)\n#define per(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \";\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntemplate <typename T>\ninline void read(T &f) {\n\tf = 0; T fu = 1; char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') fu = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n\tf *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x < 10) putchar(x + 48);\n\telse print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n\tprint(x); putchar(t);\n}\n\nstruct Node {\n\tNode *ch[2];\n\tint size, val, minn;\n\t\n\tNode (int a, int b, int c, Node *d, Node *e) : size(a), val(b), minn(c) { ch[0] = d; ch[1] = e; }\n}*root, *null;\n\nvoid update(Node *u) {\n\tu -> size = 1; u -> minn = u -> val;\n\tu -> size += u -> ch[0] -> size, u -> minn = min(u -> minn, u -> ch[0] -> minn);\n\tu -> size += u -> ch[1] -> size, u -> minn = min(u -> minn, u -> ch[1] -> minn);\n}\n\nvoid rotate(Node *&u, int d) {\n\tNode *tmp = u -> ch[d];\n\tu -> ch[d] = tmp -> ch[d ^ 1];\n\ttmp -> ch[d ^ 1] = u;\n\tupdate(u); update(tmp);\n\tu = tmp;\n}\n\nvoid splay(Node *&u, int k) {\n\tint ltree = u -> ch[0] -> size;\n\tif(ltree + 1 == k) return;\n\tint d = k > ltree, k2 = d ? k - ltree - 1 : k;\n\tint ltree2 = u -> ch[d] -> ch[0] -> size;\n\tif(ltree2 + 1 != k2) {\n\t\tint d2 = k2 > ltree2;\n\t\tsplay(u -> ch[d] -> ch[d2], d2 ? k2 - ltree2 - 1 : k2);\n\t\tif(d == d2) rotate(u, d); else rotate(u -> ch[d], d2);\n\t}\n\trotate(u, d);\n}\n\nint a[25005], n, m;\nNode *build(int l, int r) {\n\tif(l > r) return null;\n\tif(l == r) return new Node(1, a[l], a[r], null, null);\n\tint mid = (l + r) >> 1; Node *t = new Node(1, a[mid], a[mid], build(l, mid - 1), build(mid + 1, r));\n\treturn update(t), t;\n}\n\nint main() {\n\tnull = new Node(0, 1e9, 1e9, 0, 0);\n\tread(n); read(m);\n\tfor(register int i = 1; i <= n; i++) read(a[i]);\n\troot = build(0, n + 1); \n\twhile(m--) {\n\t\tint l, r; read(l); read(r);\n\t\tsplay(root, r + 2);\n\t\tsplay(root -> ch[0], l);\n\t\tprint(root -> ch[0] -> ch[1] -> minn, '\\n');\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1544575588,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "kk\uff0c\u8fd9\u662f\u4e00\u9053ST\u8868\u7ecf\u5178\u9898\u2014\u2014\u9759\u6001\u533a\u95f4\u6700\u5c0f\u503c\n\n\u5982\u679c\u4f60\u505a\u8fc7ST\u8868\u7684\u6a21\u677f\uff0c~~\u8bf6\u8fd9\u53e5\u8bdd\u662f\u4e0d\u662f\u5728\u54ea\u91cc\u542c\u8fc7\uff1f~~\n\n\u6ca1\u9519\uff0c\u9898\u76ee\u63cf\u8ff0\u975e\u5e38\u7b80\u5355\uff0c\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c ~~\uff08\u725b\u628a\u901a\u9053\u6324\u5bbd\u4e86\uff09~~\n\n\u4e5f\u6ca1\u6709\u590d\u6742\u7684\u67e5\u8be2\u3002\n\n\u53ea\u662f\u6c42 **\u9759\u6001\u533a\u95f4\u6700\u5c0f\u503c** \uff01\n\n\u9898\u89e3\u533a\u5404\u8def\u795e\u4ed9\u6709\u64b8 **$Splay$** \u7684\uff0c\u8fd8\u6709\u796d\u51fa **\u7ebf\u6bb5\u6811** \u7684\n\n\u66f4\u6709\u751a\u8005\uff0c\u51fa\u73b0\u4e86 **$Treap\\space Splay$**\n\n\u53ea\u4f1a\u4e00\u4e9bsb\u7b97\u6cd5\u7684\u840c\u65b0\u8868\u793a\uff1a\n\n\u60a8\u4eec\u4e0d\u7d2f\u5417\uff1f\n\n\u59a5\u59a5\u4e00\u9053ST\u8868\u6a21\u677f\u9898\u3002\u3002\u3002\n\n\u751a\u81f3\u90fd\u53ef\u4ee5\u53d6\u4ee3 [P3865](https://www.luogu.com.cn/problem/P3865) ~~\u6210\u4e3a\u65b0\u4e00\u4ee3ST\u8868\u6a21\u677f~~\n\n\u76f4\u63a5\u628a\u4ee3\u7801\u590d\u5236\u8fc7\u6765\uff0c\u7136\u540e $max$ \u6539 $min$ \u3002\u3002\u3002\n\n~~\u4ea4\u4e0a\u5b8c\u4e8b\u4e00\u904d\u5207~~\n\n$Tips:$ \u5173\u4e8eST\u8868\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u8bf7\u5230 [P3865\u7684\u9898\u89e3\u533a](https://www.luogu.com.cn/problemnew/solution/P3865) \u8fdb\u884c\u5b66\u4e60\uff0c\u672c\u4eba\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\n\nAC Code\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, ST[100005][25];\nint query(int l, int r)\n{\n    int len = log2(r - l + 1);\n    return min(ST[l][len], ST[r - (1 << len) + 1][len]);\n}\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    if (ch == '-')\n        ch = getchar(), f = -1;\n    while (ch < '0' || ch > '9')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\nint main()\n{\n    n = read(), m = read();\n    for (int i = 1; i <= n; i++)\n        ST[i][0] = read();\n    for (int j = 1; j <= log2(n); j++)\n        for (int i = 1; i <= n - (1 << j) + 1; i++)\n            ST[i][j] = min(ST[i][j - 1], ST[i + (1 << (j - 1))][j - 1]);\n    for (int i = 1; i <= m; i++)\n    {\n        int l = read(), r = read();\n        printf(\"%d\\n\", query(l, r));\n    }\n    return 0;\n}\n```",
        "postTime": 1586259589,
        "uid": 180790,
        "name": "zhzzhzzzz",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2\u3011"
    },
    {
        "content": "\u770b\u5230\u5927\u4f6c\u4eec\u7528\u4ec0\u4e48\u6811\u5957\u6811\uff0cSplay\uff0c\u5206\u5757\uff0cST\u8868\uff0c\u4e3b\u5e2d\u6811\uff0c\u6211\u53ea\u597d\u8eb2\u5728\u4e00\u65c1\u89c2\u671b\uff0c\u6bd5\u7adf\u53ea\u4f1a\u7ebf\u6bb5\u6811\u800c\u4e14\u8fd8\u6709\u4eba\u7801\u4e86\uff0c\u4f46\u662f\u2014\u2014\n### \u6211\u8fd8\u4f1a\u66b4\u529b\n------------\n\u8fd9\u662f\u591a\u4e48\u632f\u594b\u4eba\u5fc3\u7684\u4e00\u58f0\u5450\u558a\u554a\uff0c\u54b3\u54b3\uff0c\u8a00\u5f52\u6b63\u4f20\uff0c\u6211\u4eec\u5148\u5206\u6790\u4e00\u4e0b\u66b4\u529b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6700\u574f\u7684\u8bddO(n ^ 2),\u6700\u597d\u7684\u8bdd\u5927\u6982\u662fO(n),\u663e\u7136\u6ca1\u4ec0\u4e48\u7528\uff0c\u4e0d\u8fc7\u4e0d\u5982\u7c7b\u6bd4\u4e00\u4e0bP1816\u5fe0\u8bda\uff0c\u5c31\u6539\u4e86\u4e00\u4e0b\u9898\u9762\u548c\u8f93\u51fa\u683c\u5f0f\u800c\u5df2\uff0c\u800c\u5fe0\u8bda\u7eaf\u66b4\u529b\u670990\uff0c\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u53ea\u670920000\uff0c\u96be\u5ea6\u4e5f\u53ef\u60f3\u800c\u77e5\u3002\n\n------------\n\u65e2\u7136\u90fd\u51b3\u5b9a\u8981\u6c34\u66b4\u529b\u4e86\uff0c\u90a3\u5c31\u4e0d\u8981\u72b9\u8c6b\u4e86\uff0c\u4ee3\u7801\uff1a1.86s\uff0c\u52c9\u5f3a\u80fd\u8fc7\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std; \nint a[100005];\nint main() {\n\tint n,k,ans = 1e9,x,y;//ans\u5373\u7b54\u6848\uff0c\u6c42\u6700\u5c0f\u503c\u65f6\u628a\u521d\u503c\u5b9a\u4e49\u4e3a\u6781\u5927\u503c\uff0c\u5f88\u5e38\u7528\u7684\u6280\u5de7\n\tscanf(\"%d %d\",&n,&k);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]);//\u8f93\u5165\u90fd\u4f1a\u5427\uff1f\n\tfor(int i = 1;i <= k;i ++) {\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tfor(int i = x;i <= y;i ++) ans = min(a[i],ans);//\u5bf9\u533a\u95f4\u904d\u5386\u4e00\u904d\t\n        \t//\u8fd9\u91cc\u8c8c\u4f3c\u5fc5\u987b\u628a\u533a\u95f4\u904d\u5386\u5b8c\uff0c\u539f\u56e0\uff1a\u533a\u95f4\u65e0\u5e8f\uff08\u8fd9\u91cc\u8c8c\u4f3c\u662f\u4e2a\u6697\u793a\uff1f\uff09\n\t\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\n\t\tans = 1e9;//\u91cd\u65b0\u8d4b\u503c\uff01\uff01\uff01\n\t}\n\treturn 0;\n}\n```\n------------\n\u90fd\u8bf4\u4e86\u6709\u6697\u793a\u4e86\uff1a\u4e0d\u59a8\u5c06\u533a\u95f4\u53d8\u4e3a\u6709\u5e8f\u5e8f\u5217\uff0c\u8bf4\u767d\u4e86\u5c31\u662fsort\u567b\uff0c\u8fd9\u662f\u4e00\u4e2a\u9006\u5411\u601d\u7ef4\uff0c\u4e4b\u524d\u662f\u5728\u533a\u95f4\u4e2d\u627e\u6700\u5c0f\u503c\uff0c\u73b0\u5728\u662f\u5728\u6700\u5c0f\u503c\u4e2d\u627e\u5728\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#define RET register int\n#define LL long long \n#define MAXN 50005\nusing namespace std;\nint n,m;\nstruct node {\n\tint s;\n\tint num;\n}a[MAXN];\nbool cmp(node x,node y) {\n\treturn x.s < y.s;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(RET i = 1;i <= n;i ++) scanf(\"%d\",&a[i].s),a[i].num = i;//\u8f93\u5165\u5e76\u5b58\u4e0b\u5f53\u524d\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\uff1a\u6392\u5e8f\u4f1a\u6253\u4e71\u987a\u5e8f\n\tsort(a + 1,a + n + 1,cmp);\n\tfor(RET i = 1;i <= m;i ++) {\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tfor(RET j = 1;j <= n;j ++) \n\t\t\tif(a[j].num >= x && a[j].num <= y) {\n\t\t\t\tcout << a[j].s << endl;//\u627e\u5230\u4e86\u5c31\u662f\u6700\u4f18\u89e3\uff0c\u76f4\u63a5\u9000\u51fa\u5faa\u73af\n\t\t\t\tbreak;\n\t\t\t}//\u89c1\u4e0a\u6587\n\t}\n\treturn 0;\n}\n```\n\u8fd9\u4efd\u4ee3\u7801\u8fd8\u633a\u5feb\u7684\uff1a130ms\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7384\u5b66\u4e3a\u4ec0\u4e48\u80fd\u5feb\u8fd9\u4e48\u591a\uff0c\u8bc4\u8bba\u533a\u6c42\u89e3\uff0c\u6216\u8bb8\u56e0\u4e3a\u6570\u636e\uff1f\n\n------------\n\u6700\u540e\u518d\u8d34\u4efd\u7ebf\u6bb5\u6811\uff0c\u697c\u4e0b\u7684\u7ae5\u978b\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c80ms\uff1a\n```cpp\n#include <cstdio> \n#include <algorithm>\nusing namespace std;\nconst int MAXN = 100005;\nint a[MAXN],tree[MAXN * 4],cnt;\nvoid build(int now,int l,int r) {\n\tif(l == r) {\n\t\tcnt ++;\n\t\ttree[now] = a[cnt];\n\t}\n\telse {\n\t\tint mid = (l + r) / 2;\n\t\tbuild(now * 2,l,mid);\n\t\tbuild(now * 2 + 1,mid + 1,r);\n\t\ttree[now] = min(tree[now * 2],tree[now * 2 + 1]); \n\t}\n}\nint look_up(int now,int l,int r,int x,int y) {\n\tint ans = 1e9;\n\tif(x <= l && y >= r) {\n\t\tans = tree[now];\n\t}\n\telse {\n\t\tint mid = (l + r) / 2;\n\t\tif(x <= mid) ans = min(ans,look_up(now * 2,l,mid,x,y));\n\t\tif(y > mid) ans = min(ans,look_up(now * 2 + 1,mid + 1,r,x,y));\n\t}\n\treturn ans;\n} \nint main() {\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]);\n\tbuild(1,1,n);\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tprintf(\"%d\\n\",look_up(1,1,n,x,y));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1566113510,
        "uid": 173484,
        "name": "C20212724\u6768\u4eac\u671d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "~~\u7ebf\u6bb5\u6811\u89e3\u533a\u95f4\u6c42\u503c\u6700\u597d\u4e86\uff01~~\n\n----\n## \u7b80\u4ecb\uff1a\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u79cd\u7528\u4e8e\u533a\u95f4\u6c42\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u57fa\u4e8e\u4e8c\u53c9\u6811\uff0c\u4e0b\u9762\u6211\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5728\u672c\u9898\u4e2d\u7528\u4e8e\u6c42\u6700\u503c\u7684\u7ebf\u6bb5\u6811\uff1a\n\n\u7ebf\u6bb5\u6811\u4e3b\u8981\u662f\u627f\u62c5$\\Theta(n\\log n)$\u533a\u95f4\uff08\u5355\u70b9\uff09\u4fee\u6539\u548c\u533a\u95f4\uff08\u5355\u70b9\uff09\u67e5\u8be2\u3002\n\n\u7ebf\u6bb5\u6811\u793a\u610f\u56fe\uff1a\n\n![4.8tj1.png](https://i.loli.net/2020/04/08/a2j8OGsecRiBbwt.png)\n\n## \u64cd\u4f5c\uff1a\n\n### $update$\n\u66f4\u65b0\u64cd\u4f5c\uff0c\u662f\u5efa\u6811\uff08$build$\uff09\u548c\u4fee\u6539\uff08$change$\uff08\u672c\u9898\u4e2d\u7528\u4e0d\u5230\uff09\uff09\u540e\u66f4\u65b0\u7ebf\u6bb5\u6811\u6570\u503c\u7684\u64cd\u4f5c\u3002\n\n### $build$\n\u5efa\u6811\u64cd\u4f5c\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\n\n### $ask$\n\u8be2\u95ee\u64cd\u4f5c\uff0c\u53c2\u8003\u793a\u610f\u56fe\u3002\u5047\u5982\u6211\u4eec\u8981\u6c42\u533a\u95f4$[2,5]$\u7684\u6700\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u533a\u95f4\u62c6\u6210$[2],[3,4],[5]$\u7136\u540e\u9012\u5f52\u6c42\u3002\u8bbe\u8981\u6c42$[x,y]$\u7684\u6700\u503c\uff0c\u90a3\u4e48\u53ea\u8981\u662f\u6ee1\u8db3$[x\\le l,r\\le y]$\u7684\u8282\u70b9\uff0c\u90fd\u53ef\u4ee5\u7eb3\u5165\u7b54\u6848\u3002\u6211\u4eec\u4e0d\u7528\u9012\u5f52\u5230\u5355\u70b9\uff0c\u5982\u679c\u6709\u6574\u6bb5\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\uff0c\u8fd9\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u7cbe\u9ad3\u7f62\u3002\n\n## \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MAXN=1000000007;\nint va[25005];\nstruct linetree {\n\tint l,r,sum;//\u7ed3\u6784\u4f53\uff0c\u672c\u8282\u70b9\u7ef4\u62a4l\u2014\u2014r\u7684\u6700\u503c\uff0csum\u4e3a\u672c\u8282\u70b9\u7684\u6570\u503c\n} tree[125005];\nvoid update(int now,int lson,int rson) {//\u4e0e\u6a21\u677f\u6700\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u91cc\u4e86\n\ttree[now].sum=min(tree[lson].sum,tree[rson].sum);//\u5f53\u524d\u8282\u70b9\u662f\u5de6\u53f3\u5b69\u5b50\u7684\u6700\u5c0f\u503c\n}\nvoid build(int now,int l,int r) {//\u5efa\u6811\uff0cnow\u4e3a\u5f53\u524d\u8282\u70b9\u7f16\u53f7\n\ttree[now].l=l;\n\ttree[now].r=r;\n\tif(l==r) {\n\t\ttree[now].sum=va[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tint lson=now<<1;//\u5c06\u5de6\u5b69\u5b50\u5b9a\u52302*now\u4f4d\u7f6e\n\tint rson=now<<1|1;//\u53f3\u5b69\u5b50\u5b9a\u52302*now+1\u4f4d\u7f6e\n\tbuild(lson,l,mid);//\u7ee7\u7eed\u5411\u4e0b\u5efa\u6811\n\tbuild(rson,mid+1,r);//\u540c\u4e0a\n\tupdate(now,lson,rson);//\u9012\u5f52\u56de\u6765\u66f4\u65b0\u5f53\u524d\u8282\u70b9\n}\nint sum=MAXN;\nvoid ask(int now,int x,int y) {//\u533a\u95f4\u6c42\u6700\u503c\n\tif(x<=tree[now].l&&y>=tree[now].r) {//\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u67d0\u6bb5\u533a\u95f4\u7eb3\u5165\u7b54\u6848\n\t\tsum=min(sum,tree[now].sum);\n\t\treturn;\n\t}//\u89c1\u6ce8\u91ca\u7684\u89e3\u91ca\n\tint l=tree[now].l,r=tree[now].r;\n\tint mid=(l+r)>>1;\n\tint lson=now<<1;\n\tint rson=now<<1|1;//\u610f\u4e49\u4e0e\u5efa\u6811\u662f\u4e00\u6837\n\tif(x<=mid) ask(lson,x,y);//\u8fd0\u7528\u4e8c\u5206\u539f\u7406\n\tif(y>mid) ask(rson,x,y);\n}\nsigned main() {\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t\tcin>>va[i];\n\tbuild(1,1,n);//\u53ef\u4ee5\u53c2\u8003\u793a\u4f8b\u56fe\n\tfor(int i=1; i<=m; i++) {\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tsum=MAXN;\n\t\task(1,x,y);\n\t\tcout<<sum<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1586268044,
        "uid": 189521,
        "name": "ahawzlc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2\u3011"
    },
    {
        "content": "\u8fd9\u9898\u597d\u50cf\u6ca1\u6709pascal\u9898\u89e3\u54e6\uff0c\u90a3\u6211\u6765\u6c34\u4e00\u53d1\n\n\u9898\u76ee\u63cf\u8ff0\uff1a\u6c42\u5e8f\u5217\u4e2d\u4e00\u6bb5\u533a\u95f4\u7684\u6700\u5c0f\u503c\n\n\u663e\u7136\u7528\u7ebf\u6bb5\u6811\u505a\u554a\uff01\n```pascal\n\u4ee3\u7801\uff1a\nuses math;//math\u5e93\u662f\u4e2a\u597d\u4e1c\u897f\nvar\n  i,j,n,k,m,ans,p,mid,x,y,id,t:longint;\n  a,tree:array[0..4000009] of longint;\n  f:boolean;\nprocedure build(p,l,r:longint);//\u5efa\u6811\nvar\n  mid:longint;\nbegin\n  if (l=r) then begin tree[p]:=a[l]; exit; end;\n  mid:=(l+r) div 2;\n  build(p*2,l,mid);\n  build(p*2+1,mid+1,r);\n  tree[p]:=min(tree[p+p],tree[p+p+1]);\nend;\nfunction query(p,l,r,x,y:longint):longint;//\u67e5\u8be2\nvar\n  mid:longint;\nbegin\n  mid:=(l+r) div 2;\n  if (l=x)and(r=y) then exit(tree[p])\n  else if y<=mid then exit(query(p*2,l,mid,x,y))\n  else if x>mid then exit(query(p*2+1,mid+1,r,x,y))\n  else exit(min(query(p*2,l,mid,x,mid),query(p*2+1,mid+1,r,mid+1,y)));\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do readln(a[i]);\n  build(1,1,n);\n  for i:=1 to m do\n  begin\n    readln(x,y);\n    writeln(query(1,1,n,x,y));\n  end;\nend.\n```",
        "postTime": 1549258886,
        "uid": 10601,
        "name": "shuiyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "[P5097 [USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c](https://www.luogu.org/problemnew/show/P5097)\n\n\n\n## \u9898\u610f\u7b80\u8ff0\n\n$n$\u4e2a\u6570\uff0c$q$\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee$[i,j]$\u7684\u6700\u5c0f\u503c\n\n\n\n## \u5206\u6790\n\n\u9759\u6001\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4e00\u770b\u5c31\u662fst\u8868\u7684\u6a21\u677f\u9898\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u7528\u4e3b\u5e2d\u6811\uff08\u5927\u96fe\uff09\u5b9e\u73b0\u533a\u95f4\u7b2c$k$\u5927\n\n## \u4ee3\u7801\n\n\u52a0\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u6ce8\u91ca~~\u51d1\u5b57\u6570~~\n\n\u6bd5\u7adf\u5404\u4f4d\u770b\u5b98\u90fd\u4e0d\u662f\u5b66\u4e3b\u5e2d\u6811\u6765\u7684\u5bf9\u5427\n\n\u5b89\u5229\u4e00\u7bc7@bestFy \u5927\u4f6c\u7684[$\\large blog$](https://blog.csdn.net/bestFy/article/details/78650360)\uff08\u5927\u5bb6\u53ef\u4ee5\u5728P3834 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u4e3b\u5e2d\u6811\uff09\u7684[\u9898\u89e3](https://www.luogu.org/problemnew/solution/P3834)\u91cc\u627e\u5230\uff09\n\n\u672c\u849f\u84bb\u521d\u5b66\u4e3b\u5e2d\u6811\uff0c\u6709\u5751\u7684\u8bdd\u4e0d\u8981\u63cd\u6211$\\text{QAQ}$\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nconst int MAXN = 25000 + 5;\nconst int N = MAXN * 24;\nusing namespace std;\n\nint root[MAXN];\nint pcnt=0,ans[N],ls[N],rs[N];\n\nvoid build(int &u,int l,int r)//\u5efa\u6811\n{\n\tu=++pcnt;\n\tif(l==r) return;\n\tint mid = (l+r)>>1;\n\tbuild(ls[u],l,mid);\n\tbuild(rs[u],mid+1,r);\n}\n\nvoid update(int &u,int v,int l,int r,int p)//\u4fee\u6539\n{\n\tu=++pcnt;\n\tans[u] = ans[v] + 1;\n\tif(l==r) return;\n\t\n\tls[u]=ls[v]; rs[u]=rs[v];\n\tint mid = (l+r)>>1;\n\tif(p<=mid) update(ls[u],ls[v],l,mid,p);\n\telse update(rs[u],rs[v],mid+1,r,p);\n}\n\nint query(int u,int v,int l,int r)//\u67e5\u8be2\u7b2ck\u5c0f\uff08\u56e0\u4e3ak=1\u6240\u4ee5\u628ak\u7701\u6389\u4e86qwq\uff09\n{\n\tif(l==r) return l;\n\tint mid = (l+r)>>1;\n\tif(ans[ls[v]]-ans[ls[u]]) return query(ls[u],ls[v],l,mid);//\u56e0\u4e3ak=1,\u5de6\u8fb9\u6709\u6570\u5c31\u53bb\u5de6\u8fb9\n\telse return query(rs[u],rs[v],mid+1,r);\n}\n\nint a[MAXN],b[MAXN];\n\nint main(void)\n{\n\tint n,q;\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1; i<=n; ++i) scanf(\"%d\",&a[i]), b[i]=a[i];\n\t//\u79bb\u6563\u5316\n\tsort(b+1,b+n+1);\n\tint m=unique(b+1,b+n+1)-(b+1);\n\tbuild(root[0],1,m);\n\t\n\tfor(int i=1; i<=n; ++i)\n\t\tupdate(root[i],root[i-1],1,m, lower_bound(b+1,b+m+1, a[i])-b );\n\t\n\twhile(q--)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d\\n\",b[ query(root[l-1],root[r], 1,m) ]);\n\t}\n\treturn 0;\n}\n```\n\n\u6c42\u8d5eqwq",
        "postTime": 1548831031,
        "uid": 73687,
        "name": "He_Ren",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "\u4eca\u5929\u521d\u5b66\u6811\u5957\u6811\uff0c\u7a81\u7136\u60f3\u8d77\u6765\u8fd9\u9053\u9898\u4f3c\u4e4e\u53ef\u4ee5\u7528\u6811\u5957\u6811\u6765\u505a\uff0c\u7136\u540e\u81ea\u5df1\u5199\u7684\u7ebf\u6bb5\u6811\u5957 $\\text{FHQ}$ \u5c31\u5149\u8363\u5730 $\\text{T}$ \u4e86 $1$ \u4e2a\u70b9\uff0c\u5f00 $O2$ \u53ef\u4ee5 $\\text{AC}$\uff0c\u6216\u8005\u5957\u522b\u7684\u5e73\u8861\u6811\u5e94\u8be5\u53ef\u4ee5 $\\text{AC}$\uff0c\u4ee3\u7801\u4ec5\u4f9b\u5a31\u4e50\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 25005\n#define MAXM 5000005\n#define inf 2147483647\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\nusing namespace std;\nstruct FHQTreap\n{\n\tint son[2],val,siz,key;\n}t[MAXM];\nint n,Q,a[MAXN],siz;\ntemplate <typename T> void Read(T &x)\n{\n\tx=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch-48);\n}\nstruct FHQ_Treap\n{\n\tint root;\n\tint NewNode(int val)\n\t{\n\t\tt[++siz].siz=1;\n\t\tt[siz].key=rand();\n\t\tt[siz].val=val;\n\t\treturn siz;\n\t}\n\tvoid Update(int rt)\n\t{\n\t\tt[rt].siz=t[t[rt].son[0]].siz+t[t[rt].son[1]].siz+1;\n\t}\n\tint Merge(int x,int y)\n\t{\n\t\tif(!x || !y) return x+y;\n\t\tif(t[x].key<t[y].key)\n\t\t{\n\t\t\tt[x].son[1]=Merge(t[x].son[1],y);\n\t\t\tUpdate(x);\n\t\t\treturn x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tt[y].son[0]=Merge(x,t[y].son[0]);\n\t\t\tUpdate(y);\n\t\t\treturn y;\n\t\t}\n\t}\n\tvoid Split(int rt,int pos,int &x,int &y)\n\t{\n\t\tif(!rt) x=y=0;\n\t\telse\n\t\t{\n\t\t\tif(t[rt].val<=pos)\n\t\t\t{\n\t\t\t\tx=rt;\n\t\t\t\tSplit(t[rt].son[1],pos,t[rt].son[1],y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty=rt;\n\t\t\t\tSplit(t[rt].son[0],pos,x,t[rt].son[0]);\n\t\t\t}\n\t\t\tUpdate(rt);\n\t\t}\n\t}\n\tvoid Build(int x,int y)\n\t{\n\t\tfor(int i=x;i<=y;i++) Insert(a[i]);\n\t}\n\tvoid Insert(int val)\n\t{\n\t\tint x,y;\n\t\tSplit(root,val,x,y);\n\t\troot=Merge(Merge(x,NewNode(val)),y);\n\t}\n\tint FindRak(int val)\n\t{\n\t\tint x,y,res;\n\t\tSplit(root,val-1,x,y);\n\t\tres=t[x].siz+1;\n\t\troot=Merge(x,y);\n\t\treturn res;\n\t}\n}fhq[MAXN<<2];\nvoid BuildSegmentTree(int rt,int l,int r)\n{\n\tfhq[rt].Build(l,r);\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tBuildSegmentTree(rt<<1,l,mid);\n\tBuildSegmentTree(rt<<1|1,mid+1,r);\n}\nint QueryRak(int rt,int l,int r,int tl,int tr,int val)\n{\n\tif(tl<=l && r<=tr) return fhq[rt].FindRak(val)-1;\n\tint mid=l+r>>1,res=0;\n\tif(tl<=mid) res+=QueryRak(rt<<1,l,mid,tl,tr,val);\n\tif(tr>mid) res+=QueryRak(rt<<1|1,mid+1,r,tl,tr,val);\n\treturn res;\n}\nint QueryVal(int x,int y,int rk)\n{\n\tint l=0,r=inf/20,res=-1;\n\twhile(l<=r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tif(QueryRak(1,1,n,x,y,mid)+1<=rk)\n\t\t{\n\t\t\tres=mid;\n\t\t\tl=mid+1;\n\t\t}\n\t\telse r=mid-1;\n\t}\n\treturn res;\n}\nint main()\n{\n\tRead(n);\n\tRead(Q);\n\tfor(int i=1;i<=n;i++) Read(a[i]);\n\tBuildSegmentTree(1,1,n);\n\twhile(Q--)\n\t{\n\t\tint x,y;\n\t\tRead(x);\n\t\tRead(y);\n\t\tprintf(\"%d\\n\",QueryVal(x,y,1));\n\t}\n\treturn 0;\n}\n```\n\n---\n\u9996\u5148\uff0c\u548c\u533a\u95f4\u64cd\u4f5c\u6709\u5173\uff0c\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u7684\u662f**\u7ebf\u6bb5\u6811**\uff0c\u4f46\u8fd9\u9898\u4ec5\u6709\u67e5\u8be2\uff0c\u800c\u6ca1\u6709\u4fee\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u60f3\u5230 $\\text{ST}$ **\u8868**\uff0c\u5f53\u7136\uff0c\u65e2\u7136\u548c\u8fd9\u4e24\u4e2a\u4e1c\u897f\u626f\u4e0a\u5173\u7cfb\u4e86\uff0c**\u6811\u72b6\u6570\u7ec4**\u4e5f\u662f\u53ef\u4ee5\u505a\u7684\uff0c\u6240\u4ee5\u6211\u5c31\u65e0\u804a\u7684\u5199\u4e86\u4e09\u4efd\u2026\u2026\n\n\u81f3\u4e8e\u600e\u4e48\u505a\u8fd9\u90fd\u662f\u6a21\u677f\u7ea7\u522b\u7684\u95ee\u9898\u4e86\u2026\u2026\n\n\u4e0a\u4ee3\u7801\n\n - \u7ebf\u6bb5\u6811 \uff08$80ms\\quad 1.3MB\\quad 0.82KB$\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 1010580540\nusing namespace std;\nint n,Q,a[25005],val[25005<<2];\nvoid BuildSegmentTree(int rt,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tval[rt]=a[l];\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tBuildSegmentTree(rt<<1,l,mid);\n\tBuildSegmentTree(rt<<1|1,mid+1,r);\n\tval[rt]=min(val[rt<<1],val[rt<<1|1]);\n}\nint Query(int rt,int l,int r,int tl,int tr)\n{\n\tif(l>=tl && tr>=r) return val[rt];\n\tint mid=l+r>>1,res=inf;\n\tif(tl<=mid) res=min(res,Query(rt<<1,l,mid,tl,tr));\n\tif(tr>mid) res=min(res,Query(rt<<1|1,mid+1,r,tl,tr));\n\treturn res;\n}\nint main()\n{\n\tmemset(a,60,sizeof(a));\n\tmemset(val,60,sizeof(val));\n\tscanf(\"%d %d\",&n,&Q);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tBuildSegmentTree(1,1,n);\n\twhile(Q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tprintf(\"%d\\n\",Query(1,1,n,x,y));\n\t}\n\treturn 0;\n}\n```\n\n - $ST$\u8868 \uff08$64ms\\quad 2.73MB\\quad 0.49KB$\uff09\n \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint f[25][25005];\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&f[0][i]);\n    for(int i=1;i<=21;i++)\n    {\n        for(int j=1;j+(1<<i)-1<=n;j++)\n        {\n            f[i][j]=min(f[i-1][j],f[i-1][j+(1<<(i-1))]);\n        }\n    }\n    for(int i=1,x,y;i<=m;i++)\n    {\n        scanf(\"%d %d\",&x,&y);\n        int t=log2(y-x+1);\n        printf(\"%d\\n\",min(f[t][x],f[t][y-(1<<t)+1]));\n    }\n    return 0;\n}\n```\n\n - \u6811\u72b6\u6570\u7ec4 \uff08$90ms\\quad 0.91MB\\quad 0.62KB$\uff09\n \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,Q,a[25005],c[25005];\nint lowbit(int x)\n{\n\treturn x&-x;\n}\nvoid Modify(int x,int num)\n{\n\twhile(x<=n)\n\t{\n\t\tc[x]=min(c[x],num);\n\t\tx+=lowbit(x);\n\t}\n}\nint Query(int l,int r)\n{\n\tint res=a[r];\n\twhile(l<=r)\n\t{\n\t\tres=min(res,a[r]);\n\t\tr--;\n\t\twhile(r-l>=lowbit(r))\n\t\t{\n\t\t\tres=min(res,c[r]);\n\t\t\tr-=lowbit(r);\n\t\t}\n\t}\n\treturn res;\n}\nint main()\n{\n\tmemset(c,60,sizeof(c));\n\tscanf(\"%d %d\",&n,&Q);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tModify(i,a[i]);\n\t}\n\twhile(Q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tprintf(\"%d\\n\",Query(x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544489046,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u5c0f\u6280\u5de7\n**\u5173\u4e8e\u7ebf\u6bb5\u6811\uff1a\u5b83\u88ab\u8bc4\u8bba\u533a\u7684\u795e\u7287\u4eec\u8bf4\u7684\u5f88\u660e\u767d\u4e86~~\u6240\u4ee5\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86~~**\n\n\u90a3\u4e48\u6b63\u9898\u662f\u6211\u5728\u6807\u9898\u63d0\u5230\u7684\u5c0f\u6280\u5de7\uff0c\u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u7528\u6765**\u8282\u7701\u5927\u91cf\u7a7a\u95f4\u548c\u90e8\u5206\u7801\u91cf**\u3002\u6211\u4eec\u601d\u8003\u4e0b\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u5efa\u6811\u8fc7\u7a0b\uff0c\u5b83\u7684\u6240\u6709\u7236\u8282\u70b9\u7684\u503c\u90fd\u662f\u7531**\u53f6\u5b50\u8282\u70b9\u51b3\u5b9a\u7684**\uff0c\u800c\u6211\u4eec\u4e3a\u4e86\u5728\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u53f6\u5b50\u8282\u70b9\u8d4b\u503c\uff0c\u4e00\u822c\u4f1a\u9009\u62e9**\u5148\u5c06\u539f\u5e8f\u5217\u4fdd\u5b58\u4e0b\u6765\uff0c\u518d\u7b49\u5230\u9012\u5f52\u5230\u53f6\u5b50\u8282\u70b9\u65f6\u8d4b\u503c\u4e0a\u53bb\u3002** \u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b8c\u5168\u4e0d\u662f\u5fc5\u987b\u7684\uff0c**\u4e0e\u5176\u628a\u539f\u5e8f\u5217\u5b58\u8d77\u6765\u7b49\u5230\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u518d\u8d4b\u503c\uff0c\u8fd8\u4e0d\u5982\u76f4\u63a5\u5728\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u65f6\u5c06\u503c\u8f93\u5165\u8fdb\u53bb\u3002**\n\n## \u677f\u5b50\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 25000 * 4 + 10;\nstruct Node {\n\tint l, r, mn;\n} root[N];\nvoid pushup(int now) {\n\troot[now].mn = min(root[now << 1].mn, root[now << 1 | 1].mn);\n}\nvoid build(int now, int l, int r) {\n\troot[now].l = l, root[now].r = r;\n\tif (l == r) {\n\t\t// \u672c\u7bc7\u9898\u89e3\u7684\u6838\u5fc3\u5185\u5bb9\uff1a\u76f4\u63a5\u8f93\u5165\u53f6\u5b50\u8282\u70b9\u7684\u503c\u4ee5\u8fbe\u5230\u8282\u7701\u7a7a\u95f4\u548c\u51cf\u5c11\u7801\u91cf\u7684\u76ee\u7684 \n\t\tscanf(\"%d\", &root[now].mn);\n\t\treturn;\n\t}\t\n\tint mid = (l + r) >> 1;\n\tbuild(now << 1, l, mid);\n\tbuild(now << 1 | 1, mid + 1, r);\n\tpushup(now);\n}\nint query(int now, int L, int R) {\n\tif (L <= root[now].l && root[now].r <= R) return root[now].mn;\n\tif (L > root[now].r || R < root[now].l) return 1e9;\n\tint mid = (root[now].l + root[now].r) >> 1;\n\treturn min(query(now << 1, L, R), query(now << 1 | 1, L, R));\n}\nint main() {\n\tint n, m, l, r;\n\tscanf(\"%d%d\", &n, &m);\n\tbuild(1, 1, n);\n\twhile (m--) scanf(\"%d%d\", &l, &r), printf(\"%d\\n\", query(1, l, r));\n\treturn 0;\n} \n```\n~~\u5199\u7684\u597d\u5570\u55e6\u7684\u6837\u5b50\uff0c\u660e\u660e\u4e00\u53e5\u8bdd\u80fd\u8bf4\u660e\u767d\u7684...~~",
        "postTime": 1595591813,
        "uid": 277849,
        "name": "AveMarina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2\u3011"
    },
    {
        "content": "\u56fe\u8bba\u505a\u591a\u4e86\u770b\u5565\u90fd\u662f\u56fe\u561b\u2026\u2026\n\n\u7b2c\u4e00\u773c\u770b\u8fc7\u53bb\uff1a\n> \u60f3\u8bf7\u6559\u4f60\u7531 $i$ \u5230 $j$ \u7684\u901a\u9053\u7684\u9608\u503c\u7684\u6700\u5c0f\u503c\n\n~~\u5565\u73a9\u610f\uff1f\u6700\u77ed\u8def\uff1f~~\n\n\u54b3\u54b3\uff0c\u8a00\u5f52\u6b63\u4f20\u3002\n\n\u8bfb\u9898\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u8ba9\u6211\u4eec\u6c42\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u518d\u770b\u4e00\u770b\uff0c\u6ca1\u6709\u8981\u6c42\u8fdb\u884c\u4fee\u6539\uff1f\n\n\u90a3\u597d\u554a\uff01\u5973\u5c11\u53e3\u963f\uff01\n\n\u4e0a\u6765\u5c31\u662fST\u8868\u554a\uff01\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, st[100005][20];//2^19\u8db3\u591f\u4e86\nint read()//\u5feb\u8bfb\n{\n    int s = 0, w = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            w = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * w;\n}\nint main()\n{\n    n = read(), m = read();\n    for (int i = 1; i <= n; i++)\n    {\n        int num = read();\n        st[i][0] = num;//\u8f93\u5165\n    }\n    for (int j = 1; j <= 19; j++)\n    {\n        for (int i = 1; i <= n - (1 << j) + 1; i++)\n        {\n            st[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);//\u9884\u5904\u7406\n        }\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        int l = read(), r = read();\n        int e = log2(r - l + 1);//\u8fd8\u8bb0\u5f97\u5f53\u5e74\u6211\u628alog2\u5199\u6210log\u7684\u60e8\u6848\n        printf(\"%d\\n\", min(st[l][e], st[r - (1 << e) + 1][e]));//\u67e5\u8be2\n    }\n    return 0;\n}\n```",
        "postTime": 1587292569,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2\u3011"
    },
    {
        "content": "dalao\u4eec\u90fd\u6253\u4e86\u6811\u72b6\u6570\u7ec4\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684\n\n\u7136\u800c\u5176\u5b9e\u76f4\u63a5\u628a\u70b9sort\u4e00\u904d\u7136\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5728\u533a\u95f4\u91cc\u7684\u5c31\u80fdA\n\n\u6570\u636e\u6bd4\u8f83\u6c34\n\u7528\u65f6\u53ea\u670953ms\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node//\u7ed3\u6784\u4f53\n{\n\tint v,s;\n}\na[25001];\nint n,m,l,r;\nbool cmp(node x,node y)\n{\n\treturn x.v<y.v;//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i].v);//\u901a\u9053\u9600\u503c\n\t\ta[i].s=i;//\u8bb0\u5f55\u901a\u9053\u7f16\u53f7\n\t}\n\tsort(a+1,a+n+1,cmp);\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tfor(register int i=1;i<=n;++i)\n\t\t{\n\t\t\tif(l<=a[i].s&&a[i].s<=r)//\u5224\u65ad\u662f\u5426\u5728\u533a\u95f4\u5185\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",a[i].v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1574848201,
        "uid": 14698,
        "name": "_Ayanami_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684\uff0c\u5199\u8d77\u6765\u8d39\u795e\u3002\n\n\u4e8e\u662f\u6211\u5c31\u7528\u4e86\u6811\u72b6\u6570\u7ec4\uff08\u597d\u4e1c\u897f\u554a\uff09\u3002\n\n\u5177\u4f53\u8bb2\u6811\u72b6\u6570\u7ec4\u7684\u6587\u7ae0\u7f51\u4e0a\u592a\u591a\u4e86\uff0c\u6211\u5728\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\u3002\n\n\u4e0d\u8981\u4ee5\u4e3a\u6811\u72b6\u6570\u7ec4\u53ea\u80fd\u6c42\u548c\uff01\uff01\n\n\u4f46\u6211\u5bf9\u6811\u72b6\u6570\u7ec4\u638c\u63e1\u4e5f\u4e0d\u7b97\u5f88\u597d\u3002\n\n\u5728\u8fd9\u91cc\u4ecb\u7ecd\u6c42\u6700\u5927\u6700\u5c0f\u503c\u65b9\u6cd5\uff0c\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ece\u4ee3\u7801\u5165\u624b\uff1a\n\n```cpp\nvoid add(int ii,int x)\n{\n\tfor(int i=ii;i<=n;i+=lowbit(i))\n\t\tminn[i]=min(x,minn[i]);\n\treturn;\n}\n```\n\u63d2\u5165\uff0c\u548c\u4e00\u822c\u7684\u6811\u72b6\u6570\u7ec4\u5dee\u4e0d\u591a\u5427\u3002\n\n```\nint minx(int l,int r)\n{\n\tint mi=1<<30;\n\twhile(l<=r)\n\t{\n\t\tfor(;r-lowbit(r)>=l;r-=lowbit(r))\n\t\t\tmi=min(minn[r],mi);\n\t\tmi=min(mi,a[r]);\n\t\tr--;\n\t}\n\treturn mi;\n}\n```\n\u5173\u952e\u5728\u8fd9\u91cc\uff0c\u7531\u4e8e\u4e0d\u662f\u6bcf\u4e2a\u533a\u95f4\u90fd\u7ef4\u62a4\u5230\u4e86\uff0c\u6240\u4ee5\u9700\u8981\u8fd9\u53e5r--\u591a\u6b21\u5904\u7406\u3002\uff08\u5176\u4ed6\u90fd\u662f\u6807\u914d\u5427\uff09\n\n\u5177\u4f53\u7ec6\u8282\u81ea\u5df1\u6a21\u62df\u611f\u53d7\u53ef\u80fd\u66f4\u6df1\uff0c\u4e5f\u66f4\u80fd\u7406\u89e3\u3002\n\n\u6211\u5c31\u76f4\u63a5\u653e\u5b8c\u6574\u4ee3\u7801\u4e86\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=100005;\nint n;\nint q;\nint a[MAXN];\nint minn[MAXN];\nint lowbit(int x)\n{\n\treturn x&(-x);\n}\nvoid add(int ii,int x)\n{\n\tfor(int i=ii;i<=n;i+=lowbit(i))\n\t\tminn[i]=min(x,minn[i]);\n\treturn;\n}\nint minx(int l,int r)\n{\n\tint mi=1<<30;\n\twhile(l<=r)\n\t{\n\t\tfor(;r-lowbit(r)>=l;r-=lowbit(r))\n\t\t\tmi=min(minn[r],mi);\n\t\tmi=min(mi,a[r]);\n\t\tr--;\n\t}\n\treturn mi;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&q);\n\tfor(int i=0;i<MAXN;i++)\n\t\tminn[i]=1<<30;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tadd(i,a[i]);\n\t}\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d\\n\",minx(l,r));\n\t}\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u683c\u5f0f\u4e0d\u597d\u770b\uff0c\u8bf7\u539f\u8c05",
        "postTime": 1570088611,
        "uid": 29387,
        "name": "DrunkXT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO04OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u9759\u6001\u533a\u95f4\u7684\u67e5\u8be2\u95ee\u9898\uff0c\u8fd8\u662f\u6700\u5c0f\u503c\uff0c$O(1)$ \u67e5\u8be2\uff0c\u5b83\u5c31\u662f\n# ST\u8868\nST\u8868\u7684\u601d\u60f3\u662f\u7c7b\u4f3c\u4e8e\u500d\u589e\u7684\uff0c\u5373$f[i][j]$ \u8868\u793a\u4ecej\u8fd9\u4e2a\u70b9\u5411\u53f3$2^i$ \u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\n\n\u90a3\u4e48\u6211\u4eec\u5efa\u8868\u5c31\u53ef\u4ee5\u50cf\u500d\u589e\u4e00\u6837\u76f4\u63a5\u6c42\u4e2amin\n\n\u5efa\u8868nlogn \u67e5\u8be2O(1)\n\n\u6709\u6a21\u677f\u9898\uff0c\u8be6\u89c1[P3865 \u3010\u6a21\u677f\u3011ST\u8868](https://www.luogu.org/problemnew/show/P3865)\n\n```\n#include<bits/stdc++.h>\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\nconst int big=0x7fffffff;\nusing namespace std;\ninline void read(int &x)\n{\n    x=0;char ch=getchar();int pd=1;\n    while(ch<'0'||ch>'9'){if(ch=='-')pd=-pd;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    x*=pd;\n}\ninline void write(const int &x)\n{\n    char ggg[10001];int s=0;int tmp=x;\n    if(tmp==0){putchar('0');return;}\n    if(tmp<0){tmp=-tmp;putchar('-');}\n    while(tmp>0){ggg[s++]=tmp%10+'0';tmp/=10;}\n    while(s>0){putchar(ggg[--s]);}\n}\n\nint n,q,f[22][25010];\ninline int query(int l,int r)\n{\n\tint k=log2(r-l+1);//\u6ce8\u610f+1\u9632\u6b62RE\n\treturn min(f[k][l],f[k][r-(1<<k)+1]);\n}\n\nint main()\n{\n\tread(n);\n\tread(q);\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tread(f[0][i]);\n\t}\n    \n    //\u8fd9\u91cc\u662f\u5efa\u8868\u7684\u8fc7\u7a0b\n\tfor(register int j=1;j<=20;++j)\n\t{\n\t\tfor(register int i=1;i+(1<<(j-1))<=n;++i)\n\t\t{\n\t\t\tf[j][i]=min(f[j-1][i],f[j-1][i+(1<<(j-1))]);\n\t\t}\n\t}\n\twhile(q--)\n\t{\n\t\tint l,r;\n\t\tread(l);\n\t\tread(r);\n\t\twrite(query(l,r));\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1562130259,
        "uid": 87026,
        "name": "\u4e24\u5e74\u6253\u94c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    },
    {
        "content": "\u521d\u7565\u5730\u770b\u4e86\u4e00\u4e0b\uff0c\u8c8c\u4f3c\u6ca1\u6709C++er\u7528\u7ebf\u6bb5\u6811\u6765\u505a\u7684\n\n\u4e0d\u8fc7\u8fd9\u9053\u9898\u7528\u7ebf\u6bb5\u6811\u505a\u4e5f\u597d\u5bb9\u6613\u7406\u89e3\u7684\n\n\u4e8e\u662f\u6765\u4e00\u53d1\u3002\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<stack>\n#include<algorithm>\n#include<string>\n\nusing namespace std;\n\nint n,m;\n\nstruct tree{\n    int l,r,min;\n}t[100860];\n\nint a[25965];\n\nvoid build_tree(int i,int l,int r)\n{\n    if(l==r)\n    {\n        t[i].min=a[l]; //l=r\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5fc5\u7136\u662f\u4ece\u7ebf\u6bb5\u6811\u5de6\u8fb9\u5230\u53f3\u8fb9\uff08\u56e0\u4e3a\u5148l\u540er\u56e0\u6b64\u76f4\u63a5\u6ee1\u8db3\u987a\u5e8f\u6765\u4e86\u5c31ok\u4e86\uff09\n        return ;\n    }\n    int mid=(l+r)/2;\n    build_tree(i*2,l,mid);  /\n    build_tree(i*2+1,mid+1,r);\n    t[i].min=min(t[i*2].min,t[i*2+1].min);\n    return ;\n}\n\nint ask_min_tree(int i,int l,int r,int a,int b)\n{\n    if(a<=l&&r<=b) return t[i].min;  //\u8fd9\u662f\u6211\u8ba4\u4e3a\u7684\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5f53l\u548cr\u5728ab\u4e4b\u95f4\u5c31\u8fd4\u56de\uff0c\u770b\u89c1\u8fc7\u4e00\u4e9b\u6bd2\u7624\u5199\u6cd5\uff0c\u611f\u89c9\u8fd9\u6837\u6bd4\u8f83\u597d\n    int mid=(l+r)/2;\n    int ans=0x3f3f3f3f;\n    if(a<=mid) ans=min(ask_min_tree(i*2,l,mid,a,b),ans);\n    if(b>mid) ans=min(ask_min_tree(i*2+1,mid+1,r,a,b),ans);\n    return ans;  //\u5982\u679c\u6ca1\u6709ans\u51fa\u6765\uff0c\u90a3\u4e48\u8fd4\u56de\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u4e0d\u5f71\u54cd\u7b54\u6848\n}\n\nint main()\n{\n    int i,j;\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    build_tree(1,1,n); //\u76f4\u63a5\u5efa\u6811\n    for(i=1;i<=m;i++)\n    {\n        int t1,t2;\n        scanf(\"%d %d\",&t1,&t2);\n        printf(\"%d\\n\",ask_min_tree(1,1,n,t1,t2));\n    }\n    return 0;\n}\n```\n",
        "postTime": 1561981861,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5097 \u3010[USACO2004OPEN]Cave Cows 2 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e8c\u3011"
    }
]