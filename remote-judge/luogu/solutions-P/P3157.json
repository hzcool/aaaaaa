[
    {
        "content": "\u6b64\u9898\u89e3\u6cd5\u9887\u591a\uff0c\u5728\u4e0b\u7565\u5fae\u8bb2\u89e3\u5176\u4e8c\n\u5176\u4e00\uff1a\u79bb\u7ebf\u7b97\u6cd5(cdq\u5206\u6cbb)\n\n\u6211\u4eec\u5148\u627e\u51fa\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u70b9\uff08i,j\uff09\u5bf9\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a\n$Time_{i}<Time_{j},Val_{i}<Val{j},Pos_{i}>Pos_{j}$\n\u6216 $Time_{i}<Time_{j},Val_{i}>Val{j},Pos_{i}<Pos_{j}$\n\n\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u7ecf\u5178\u7684\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7cdq\u5206\u6cbb\u6765\u89e3\u51b3\u3002\n\n\u65f6\u95f4:$O(n log^2 n)$\n\n\u7a7a\u95f4:$O (n)$\n\n```C++\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=='-'&&(f=-1),ch=getchar();\n    while (ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nconst int N=1e5+10;\nstruct AC{int m,v,d,id,t;}e[N<<1];\nint n,m,tot;\nint pos[N],a[N],c[N];ll ans[N];\nbool cmp1(AC x,AC y){return x.d<y.d;}\nvoid add(int x,int k){while (x<=n)c[x]+=k,x+=(x&(-x));}\nint query(int x){int su=0;while(x)su+=c[x],x-=(x&(-x));return su;}\nvoid cdq(int l,int r){\n    if (l==r) return;\n    int mid=(l+r)>>1,j=l;\n    cdq(l,mid),cdq(mid+1,r);\n    sort(e+l,e+mid+1,cmp1);\n    sort(e+mid+1,e+r+1,cmp1);\n    for (int i=mid+1;i<=r;++i){\n        while (j<=mid&&e[j].d<=e[i].d)add(e[j].v,e[j].m),++j;\n        ans[e[i].id]+=e[i].m*(query(n)-query(e[i].v));\n    }\n    for (int i=l;i<j;++i) add(e[i].v,-e[i].m);\n    j=mid;\n    for (int i=r;i>mid;--i){\n        while (j>=l&&e[j].d>=e[i].d)add(e[j].v,e[j].m),--j;\n        ans[e[i].id]+=e[i].m*query(e[i].v-1);\n    }\n    for (int i=mid;i>j;--i) add(e[i].v,-e[i].m);\n}\nint main(){\n    n=read(),m=read();\n    for (int i=1;i<=n;++i)a[i]=read(),pos[a[i]]=i,e[++tot]=(AC){1,a[i],i,0,tot};\n    for (int i=1,x;i<=m;++i)x=read(),e[++tot]=(AC){-1,x,pos[x],i,tot};\n    cdq(1,tot);\n    for (int i=1;i<=m;++i) ans[i]+=ans[i-1];\n    for (int i=0;i<m;++i) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n\n\u5176\u4e8c\uff1a\u5728\u7ebf\u7b97\u6cd5(\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811)\n\n\u7136\u800ccdq\u5206\u6cbb\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u6240\u4ee5\u4e3a\u4e86\u9632\u6b62\u51fa\u9898\u4eba\u6bd2\u7624\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u5b66\u4e60\u5176\u5728\u7ebf\u7b97\u6cd5\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cd\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u8bbf\u95ee\u4f4d\u7f6e,\u7528\u7ebf\u6bb5\u6811\u8bbf\u95ee\u6743\u503c,\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u5c31\u662f\u4e0e\u5176\u6743\u503c\u548c\u4f4d\u7f6e\u5927\u5c0f\u5173\u7cfb\u4e0d\u7b49\u7684\u70b9\u7684\u4e2a\u6570\n\n\u7ebf\u6bb5\u6811\u9700\u8981\u52a8\u6001\u5f00\u70b9,\u6bcf\u6b21\u8bbf\u95ee\u6700\u591a\u65b0\u5f00$log^2$\u4e2a\u65b0\u8282\u70b9,\u6240\u4ee5\u7a7a\u95f4\u662f$O(n log^2 n)$\u7684\n\n\u65f6\u95f4:$O(n log ^2 n)$\n\n\u7a7a\u95f4:$O(n log^2 n)$\n\n```c++\n#include<cstdio>\n#define ll long long\n#define low(x) (x&(-x))\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=='-'&&(f=-1),ch=getchar();\n    while (ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nconst int N=1e5+10,M=3e7+10;\nint n,m,tot;ll ans;\nint a[N],pos[N],quea[N],queb[N];\nint rt[N],t[M],ls[M],rs[M];\nvoid change(int&p,int l,int r,int x,int y){\n    if (!p) p=++tot;t[p]+=y;\n    if (l==r) return;\n    int mid=(l+r)>>1;\n    if (x<=mid) change(ls[p],l,mid,x,y);\n    else change(rs[p],mid+1,r,x,y);\n}\nint query(int l,int r,int x,int mode){\n    int cnta=0,cntb=0,sum=0,mid;\n    for (int i=l-1;i;i-=low(i)) quea[++cnta]=rt[i];\n    for (int i=r;i;i-=low(i)) queb[++cntb]=rt[i];\n    l=1,r=n;\n    while (l!=r){\n        mid=(l+r)>>1;\n        if (x>mid) {\n            if (mode){\n                for (int i=1;i<=cnta;++i) sum-=t[ls[quea[i]]];\n                for (int i=1;i<=cntb;++i) sum+=t[ls[queb[i]]];\n            }\n            for (int i=1;i<=cnta;++i) quea[i]=rs[quea[i]];\n            for (int i=1;i<=cntb;++i) queb[i]=rs[queb[i]];\n            l=mid+1;\n        }\n        else{\n            if (!mode){\n                for (int i=1;i<=cnta;++i) sum-=t[rs[quea[i]]];\n                for (int i=1;i<=cntb;++i) sum+=t[rs[queb[i]]];\n            }\n            for (int i=1;i<=cnta;++i) quea[i]=ls[quea[i]];\n            for (int i=1;i<=cntb;++i) queb[i]=ls[queb[i]];\n            r=mid;\n        }\n    }\n    return sum;\n}\nint main(){\n    n=read(),m=read();\n    for (int i=1;i<=n;++i){\n        a[i]=read();pos[a[i]]=i;\n        ans+=query(1,i-1,a[i],0);\n        for (int j=i;j<=n;j+=low(j)) change(rt[j],1,n,a[i],1);\n    }\n    printf(\"%lld\\n\",ans);\n    for (int i=1,x;i<m;++i){\n        x=read();\n        ans-=query(1,pos[x]-1,x,0);\n        ans-=query(pos[x]+1,n,x,1);\n        printf(\"%lld\\n\",ans);\n        for (int j=pos[x];j<=n;j+=low(j)) change(rt[j],1,n,x,-1);\n    }\n    return 0;\n}\n```",
        "postTime": 1540553490,
        "uid": 22041,
        "name": "1010_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6069\u8fd9\u9053\u9898\u5178\u578b\u7684CDQ\u5206\u6cbb\u601d\u60f3\uff08\u6d1b\u8c37\u4e0aA\u7684\u7b2c100\u9898,\u6492\u82b1~\uff09\n\n\u987a\u4fbf\u4ee5\u6b64\u8bb2\u89e3\u4e00\u4e0bCDQ\u7684\u677f\u5b50\u5427\n\n\uff08\u5176\u5b9e\u54ea\u91cc\u6709\u4ec0\u4e48\u677f\u5b50\uff0c\u4e2d\u95f4\u90e8\u5206\u5404\u79cd\u9b54\u6539\uff09\n\nCDq\u7684\u601d\u60f3\u662f\u57fa\u4e8e\u5206\u6cbb\u539f\u7406\u7684\n\n\u5982\u679c\u4efb\u4f55\u4e24\u4e2a\u64cd\u4f5c-\u8be2\u95ee\u5bf9\u88ab\u4e14\u4ec5\u88ab\u6267\u884c\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e2a\u64cd\u4f5c-\u8be2\u95ee\u5e8f\u5217\u4e00\u5b9a\u662f\u51c6\u7684\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u4e00\u4e2a\u64cd\u4f5c\u91cd\u590d\u505alogN\u6b21\n\n\u6bcf\u6b21\u64cd\u4f5c\u4f5c\u7528\u4e8e\u4e0d\u540c\u7684logN\u4e2a\u8be2\u95ee\u6bb5\uff0c\u8fd9\u6837\u5b8c\u6210\u4e86logN^2\u7684\u590d\u6742\u5ea6\n\n(\u6709\u70b9\u50cf\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u62c6\u5206\u6cd5\uff0c\u4f46\u53ea\u662f\u50cf)\n\n\u4e0b\u9762\u6765\u770b\u8fd9\u9053\u52a8\u6001\u9006\u5e8f\u5bf9\n\n\u53d1\u73b0\u53ea\u8981\u6c42\u51fa\u521d\u59cb\u9006\u5e8f\u5bf9\uff0c\u7136\u540e\u6bcf\u6b21\u6c42\u51fa\u964d\u4f4e\u7684\u9006\u5e8f\u5bf9\u5373\u53ef\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u5220\u7684\u5143\u7d20\uff0c\u6d88\u5931\u7684\u9006\u5e8f\u5bf9\u7b49\u4e8e\n\n\u5728**\u5b83\u524d\u9762**\uff0c**\u6743\u503c**\u6bd4\u4ed6\u5927\uff0c\u4e14**\u5220\u53bb\u65f6\u95f4**\u6bd4\u4ed6\u665a\u7684\u70b9\u4e2a\u6570+\n\n\u5728**\u5b83\u540e\u9762**\uff0c**\u6743\u503c**\u6bd4\u4ed6\u5c0f\uff0c\u4e14**\u5220\u53bb\u65f6\u95f4**\u6bd4\u4ed6\u665a\u7684\u70b9\u4e2a\u6570\n\n\u90a3\u4e48\u6bcf\u4e00\u4e2a\u70b9\u4e0a\u7ef4\u62a4\u4e09\u4e2a\u5c5e\u6027\uff0c\u4f4d\u7f6e\uff0c\u6743\u503c\uff0c\u5220\u53bb\u65f6\u95f4\n\n\u5148\u9759\u6001\u6392\u5e8f\uff0c\u524a\u53bb\u4e00\u7ef4\n\n\u5c31\u53d8\u6210\u4e86\u6211\u4eec\u719f\u6089\u7684\u53cc\u7edf\u8ba1\u95ee\u9898\n\n\u9650\u52361\uff1a\u5220\u53bb\u65f6\u95f4\u665a\uff1b\u9650\u52362\uff1a\u6743\u503c\u5927\u4e8e\uff08\u6216\u5c0f\u4e8e\u5173\u7cfb\uff09\n\n\u5148\u6441\u6b7b\u4e00\u7ef4\uff0c\u6bd4\u5982\u628a\u6743\u503c\u6392\u4e2a\u5e8f\n\n\u90a3\u4e48\u53ea\u5269\u4e0b\u5220\u53bb\u65f6\u95f4\u4e86\n\n\u7531\u4e8e\u8fd8\u8981\u4fdd\u8bc1CDQ\u8981\u6c42\u7684\u76f8\u5bf9\u4f4d\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u6392\u5e8f\u90fd\u662f\u5728\u5185\u90e8\u8fdb\u884c\n\n\uff08\u4e5f\u5c31\u662f\u4f60CDQ\u5206\u7684\u533a\u95f4(l,r)\uff09\u8fd9\u6837\u5bf9\u4e8e(l,mid)\u548c(mid,r)\u8fd9\u4e24\u4e2a\u533a\u95f4\u6765\u8bb2\n\n(l,mid)\u7684\u4f4d\u7f6e\u7edf\u7edf\u5c0f\u4e8e(mid\uff0cr)\uff0c\u4f46\u662f(l,mid)\u548c(mid,r)\u5185\u90e8\u7684\u4f4d\u7f6e\u5173\u7cfb\u5df2\u7ecf\u4e0d\u786e\u5b9a\u4e86\uff0c\u56e0\u4e3a\u4f60\u5bf9\u8fd9\u4e24\u4e2a\u533a\u95f4\u5185\u90e8\u6309\u7684\u6743\u503c\u6392\u5e8f\uff09\n\n\u8fd9\u6837\u7684\u8bdd\u5176\u5b9e\u662f\u5bf9\u5de6\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u7edf\u8ba1\u4e00\u4e0b\u53f3\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u70b9\n\n\u518d\u5bf9\u53f3\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u7edf\u8ba1\u4e00\u4e0b\u5de6\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u70b9\n\n\u5bf9\u4e8e\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7edf\u8ba1\uff0c\u56e0\u4e3a\u9650\u5236\u5df2\u7ecf\u88ab\u524a\u6210\u4e00\u7ef4\u7684\u4e86\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u4fdd\u8bc1\u5bf9\u4e8e\u5de6\u8fb9\u7684\u4e00\u4e2a\u70b9i\uff0c\u6743\u503c\u6bd4\u4ed6\u5927\u7684\u53f3\u8fb9\u70b9\u5168\u88ab\u52a0\u4e86\u8fdb\u53bb\n\n\u6bcf\u6b21\u52a0\u4e00\u4e2a\u53f3\u8fb9\u70b9\uff0c\u5b83\u7684\u5220\u53bb\u65f6\u95f4\u90a3\u4e2a\u4f4d\u7f6e\u5c31+1\n\n\u7136\u540e\u7edf\u8ba1\u4e00\u4e2a\uff08i\u7684\u5220\u9664\u65f6\u95f4\uff0cm+1\uff09\u5c31\u884c\u4e86\n\n\u53f3\u8fb9\u70b9\u7684\u8ba1\u7b97\u540c\u7406\uff0c\u8bb0\u5f97\u5f00long long\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    using namespace std;\n    typedef long long ll;\n    int n;int m;\n    struct treearray//4\u884c\u6811\u72b6\u6570\u7ec4\n    {\n        int ta[200010];\n        inline void ub(int& x){x+=x&(-x);}inline void db(int& x){x-=x&(-x);}\n        inline void c(int x,int t){for(;x<=n+1;ub(x))ta[x]+=t;}\n        inline int sum(int x){int r=0;for(;x>0;db(x))r+=ta[x];return r;}\n    }ta;\n    struct data{int val;int del;int ans;}a[100010];int rv[100010];ll res;//\u70b9\n    bool cmp1(const data& a,const data& b){return a.val<b.val;}\n    bool cmp2(const data& a,const data& b){return a.del<b.del;}\n    void solve(int l,int r)//CDQ\u7edf\u8ba1\n    {\n        if(r-l==1){return;}int mid=(l+r)/2;\n        solve(l,mid);solve(mid,r);//\u5148\u5904\u7406\u597d\u5de6\u8fb9\u548c\u53f3\u8fb9\n        int i=l+1;int j=mid+1;\n        while(i<=mid)\n        {\n            while(a[i].val>a[j].val&&j<=r){ta.c(a[j].del,1);j++;}//\u4fdd\u8bc1\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\n            a[i].ans+=ta.sum(m+1)-ta.sum(a[i].del);i++;//\u7edf\u8ba1\n        }i=l+1;j=mid+1;//\u56de\u64a4\u64cd\u4f5c\n        while(i<=mid){while(a[i].val>a[j].val&&j<=r){ta.c(a[j].del,-1);j++;}i++;}\n        i=mid;j=r;\n        while(j>mid)\n        {\n            while(a[j].val<a[i].val&&i>l){ta.c(a[i].del,1);i--;}//\u4fdd\u8bc1\u53f3\u8fb9\u5927\u4e8e\u5de6\u8fb9\n            a[j].ans+=ta.sum(m+1)-ta.sum(a[j].del);j--;//\u7edf\u8ba1\n        }i=mid;j=r;//\u56de\u64a4\u64cd\u4f5c\n        while(j>mid){while(a[j].val<a[i].val&&i>l){ta.c(a[i].del,-1);i--;}j--;}\n        sort(a+l+1,a+r+1,cmp1);return;//\u6392\u597d\u5e8f\uff0c\u4e3a\u4e0a\u4e00\u5c42\u7684CDQ\u505a\u51c6\u5907\n    }\n    int main()\n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=n;i++){scanf(\"%d\",&a[i].val);rv[a[i].val]=i;}\n        for(int i=1;i<=m;i++){int p;scanf(\"%d\",&p);a[rv[p]].del=i;}\n        for(int i=1;i<=n;i++){if(a[i].del==0)a[i].del=m+1;}//\u8ba1\u7b97\u521d\u59cb\u9006\u5e8f\n        for(int i=1;i<=n;i++){res+=ta.sum(n+1)-ta.sum(a[i].val);ta.c(a[i].val,1);}\n        for(int i=1;i<=n;i++){ta.c(a[i].val,-1);}solve(0,n);sort(a+1,a+n+1,cmp2);\n        for(int i=1;i<=m;i++){printf(\"%lld\\n\",res);res-=a[i].ans;}return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n    }\n\n```",
        "postTime": 1516452703,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "**\u597d\u50cf\u6ca1\u6709\u66b4\u529b\u5206\u5757\u7684\u9898\u89e3,\u8fd9\u91cc\u5c31\u53d1\u4e00\u4e2a\u5427**\n\n**n=100000,\u5f00block=1000 \u5206\u5757,\u521a\u597d\u7b26\u5408\u5185\u5b58\u548c\u65f6\u95f4\u8981\u6c42,\u6211\u5c31\u4e71\u641e\u4e86\u4e2ablock=1000,\u7136\u540e\u6700\u591a\u6709100\u4e2a\u5757,\u6bcf\u4e00\u4e2a\u5757\u5355\u72ec\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4,\u7136\u540e\u5c31\u50cf\u5e73\u65f6\u6c42\u9006\u5e8f\u5bf9\u4e00\u6837,\u76f4\u63a5\u5728a[i]\u5bf9\u5e94\u7684\u4f4d\u7f6e+1,\u7136\u540e\u5220\u9664\u5c31\u662f-1,\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5757\u5185,\u76f4\u63a5\u66b4\u529b\u641e,\u4e0d\u540c\u5757\u4e5f\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757,\u5206\u522b\u67e5\u4e00\u6b21\u6811\u72b6\u6570\u7ec4,\u7136\u540eans\u51cf\u53bb\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u5c31\u662f\u5f53\u524d\u7684\u7b54\u6848**\n\n\n[\u4ee3\u7801\u770b\u8fd9\u91cc](http://www.cnblogs.com/Yuzao/p/7420571.html)\n",
        "postTime": 1503498470,
        "uid": 22873,
        "name": "Hank",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u592a\u5f3a\u4e86\uff0c\u9898\u89e3\u8d85\u7ea7\u4f18\u8d28\u53ef\u60dc\u672c\u5de8\u5f31\u6839\u672c\u770b\u4e0d\u61c2\u554a\u3002\n\n\u6211\u6765\u8bb2\u4e00\u4e0b\u4e00\u4e2a\u521a\u5b66\u4f1a\u4e3b\u5e2d\u6811\u7684\u4eba\u600e\u4e48\u770b\u904d\u6240\u6709\u770b\u4e0d\u61c2\u7684\u9898\u89e3\u7136\u540e\u5199\u51fa\u6765\u8fd9\u4e2a\u9898\u5427\u3002\n\n\u9996\u5148\uff0c\u9898\u89e3\u4e0a\u597d\u591aCDQ\u5206\u6cbb\uff0c\u8fd9\u4e2a\u4e1c\u897f\u6211\u4e0d\u8bb2\uff0c\u6211\u6765\u8bb2\u4e00\u4e0b\u4e3b\u5e2d\u6811\u7684\u505a\u6cd5\u3002\n\n\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u5927\u5bb6\u80af\u5b9a\u4f1a\u5427\u3002\n\n\u90a3\u4e48\u5220\u9664\u7b2c\u4e00\u4e2a\u524d\u7684\u9006\u5e8f\u5bf9\u81ea\u7136\u80fd\u6c42\u51fa\u6765\uff0c\u6b64\u65f6\u6211\u4eec\u8003\u8651\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u5c31\u662f\u5728\u5b83\u524d\u9762\u7684\u6bd4\u4ed6\u5927\u7684\u548c\u5728\u5b83\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5f00\u4e24\u4e2a\u6570\u7ec4\u6765\u5b58:\n\nas1[i]\u8868\u793a\u7684\u5c31\u662f\u5728i\u524d\u9762\u800c\u4e14\u5927\u4e8ei\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u7684\u5143\u7d20\u7684\u4e2a\u6570\n\nas2[i]\u8868\u793a\u7684\u5c31\u662f\u5728i\u540e\u9762\u800c\u4e14\u5c0f\u4e8ei\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u7684\u5143\u7d20\u7684\u4e2a\u6570\n\nas1[i]\u5c31\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u76f4\u63a5\u5904\u7406\u4e00\u4e0b\n\nBIT\u5c31\u662f\u7b80\u5355\u7684\u524d\u7f00\u548c\u6811\u72b6\u6570\u7ec4.\n\n```cpp\nfor(int i=1;i<=n;++i){\n\tscanf(\"%d\",&endq[i]);\n\tas1[i]=BIT.queryb(n)-BIT.queryb(endq[i]);\n\tans+=as1[i];\n\tBIT.addb(endq[i],1);\n}\n```\n\nas2[i]\u53ef\u4ee5\u53cd\u5411\u6dfb\u52a0\u7136\u540e\u5904\u7406\u51fa\u6765\n\n```cpp\nfor(int i=n;i>=1;--i){\n\tas2[i]=BIT.queryb(endq[i]-1);\n\tBIT.addb(endq[i],1);\n}\n```\n\n\u4f46\u662f\u53c8\u6709\u4e00\u4e2a\u95ee\u9898\u4e86,\u6211\u5df2\u7ecf\u5220\u4e86\u7684\u8fd8\u662f\u88ab\u8ba1\u7b97\u5728\u5185\u4e86,\u600e\u4e48\u529e?\n\n\u6211\u51cf\u53bb\u5b83\u4e0e\u5df2\u7ecf\u5220\u4e86\u7684\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e0d\u5c31\u597d\u4e86\u5417?\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u505a\u6210\u4e86\u4ec0\u4e48?\n\n\u6bcf\u4e00\u6b21\u5728\u5df2\u7ecf\u5220\u9664\u7684\u5143\u7d20\u91cc\u9762\u627e[l,r]\u91cc\u9762\u5c0f\u4e8e\u67d0\u4e2a\u6570\u7684\u5143\u7d20\u7684\u4e2a\u6570,\u5f88\u5bb9\u6613\u60f3\u5230\u4e3b\u5e2d\u6811\u6765\u505a.\n\n\u65e2\u7136\u662f\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u4e3b\u5e2d\u6811,\u90a3\u662f\u4e0d\u662f\u6211\u6bcf\u4fee\u6539\u4e00\u4e2a\u90fd\u8981\u5411\u540e\u4e00\u76f4\u4fee\u6539?\n\n\u663e\u7136\u590d\u6742\u5ea6\u7206\u8868.\n\n\u524d\u7f00\u548c\u6211\u4eec\u8fd8\u6709\u4e00\u79cd\u6c42\u6cd5,\u90a3\u5c31\u662f\u7528\u6811\u72b6\u6570\u7ec4,\u90a3\u6211\u80fd\u4e0d\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u6765\u4ee3\u66ff\u8fd9\u79cd\u4e00\u822c\u524d\u7f00\u548c?\n\n\u663e\u7136\u662f\u53ef\u4ee5\u7684,\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019,\u6309\u7167\u6811\u72b6\u6570\u7ec4\u90a3\u6837,\u4e00\u76f4\u5411\u4e0a\u4fee\u6539,\u6c42\u524d\u7f00\u548c\u4e5f\u50cf\u6811\u72b6\u6570\u7ec4\u90a3\u6837\u4e0d\u65ad\u52a0\u548c\u5c31\u597d\u4e86.\n\n\u81f3\u6b64,\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\u89e3\u51b3\u52a8\u6001\u9006\u5e8f\u5bf9\u5c31\u5b8c\u7ed3\u4e86.\n\n\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u6b22\u8fce\u63d0\u95ee\u539f\u4f5c\u8005\u6211\n\n\u5168\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,endq[100010],pls[100010];//pls[i]\u8bb0\u5f55\u7684\u662fi\u7684\u4f4d\u7f6e\nlong long ans=0;\nstruct Zxt{\n\t#define Nmax 6000001\n\t#define mid ((ln+rn)>>1)\n\t#define out_it (ln>rd || rn<ld)\n\t#define in_it (ln>=ld && rn<=rd)\n\tlong long sum[Nmax],tailn;\n\tint ls[Nmax],rs[Nmax],root[Nmax];\n\tvoid add(int &num,int ln,int rn,int pos){\n\t\tif(!num){\n\t\t\tnum=++tailn;\n\t\t}\n\t\t++sum[num];\n\t\tif(ln==rn)\n\t\t\treturn;\n\t\tif(pos<=mid)\n\t\t\tadd(ls[num],ln,mid,pos);\n\t\telse\n\t\t\tadd(rs[num],mid+1,rn,pos);\n\t}\n\tlong long query(int num1,int ln,int rn,int ld,int rd){//last jian old\n\t\tif(out_it)\n\t\t\treturn 0;\n\t\tif(in_it)\n\t\t\treturn sum[num1];\n\t\treturn query(ls[num1],ln,mid,ld,rd)+\n\t\t\tquery(rs[num1],mid+1,rn,ld,rd);\n\t}\n\tlong long find(int pos1,int pos2,int lowest,int uppest){\n\t\tif(lowest>uppest)\n\t\t\treturn 0;\n\t\tlong long asp=0;\n\t\tfor(;pos2;pos2-=(pos2)&(-pos2))\n\t\t\tasp+=query(root[pos2],1,n,lowest,uppest);\n\t\tfor(;pos1;pos1-=(pos1)&(-pos1))\n\t\t\tasp-=query(root[pos1],1,n,lowest,uppest);\n\t\treturn asp;\n\t}\n}Zxt;\nstruct BITs{\n\tlong long val[100001];\n\tint lowbit(int x){\n\t\treturn x&(-x);\n\t}\n\tvoid addb(int pos,int num){\n\t\tfor(;pos<=100000;pos+=lowbit(pos))\n\t\t\tval[pos]+=num;\n\t}\n\tlong long queryb(int pos){\n\t\tlong long ans=0;\n\t\tfor(;pos;pos-=lowbit(pos))\n\t\t\tans+=val[pos];\n\t\treturn ans;\n\t}\n}BIT;\nlong long as1[100001],as2[100001],p1,p2;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&endq[i]);\n\t\tpls[endq[i]]=i;\n\t\tas1[i]=BIT.queryb(n)-BIT.queryb(endq[i]);\n\t\tans+=as1[i];\n\t\tBIT.addb(endq[i],1);\n\t}\n\tfor(int i=1;i<=100000;++i)\tBIT.val[i]=0;//\u9632\u6b62\u7b2c\u4e8c\u904d\u7edf\u8ba1\u51fa\u95ee\u9898 \n\tfor(int i=n;i>=1;--i){\n\t\tas2[i]=BIT.queryb(endq[i]-1);\n\t\tBIT.addb(endq[i],1);\n\t}//\u539f\u6765\u7684BIT\u5df2\u7ecf\u7528\u5b8c\u4e86\uff0c\u6ca1\u7528\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u601d\u60f3\u4e86 \n\tfor(int i=1;i<=m;++i){\n\t\tprintf(\"%lld\\n\",ans);//\u6ce8\u610f\u662f\u5148\u8f93\u51fa,\u56e0\u4e3a\u662f\u5220\u9664\u524d.\n\t\tscanf(\"%lld\",&p1);\n\t\tp2=pls[p1];\n\t\tans-=(as1[p2]+as2[p2])-(Zxt.find(0,p2,p1+1,n)+Zxt.find(p2,n,1,p1-1));\n\t\tfor(int qqq=p2;qqq<=n;qqq+=qqq&(-qqq))\n\t\t\tZxt.add(Zxt.root[qqq],1,n,p1);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1520721336,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "my blog: redbag.pw\n\n\n\u5199\u7684cdq\u5206\u6cbb\u3002\n\n\n\u8003\u8651\u5220\u9664\u4e00\u4e2a\u6570$i\u200b$ \uff0c$i\u200b$\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u53ea\u6709$i\u200b$\u4ea7\u751f\u7684\u8d21\u732e\u548c$i\u200b$\u5bf9\u540e\u9762\u4ea7\u751f\u7684\u5f71\u54cd\n\n\n$x$\uff1a\u5220\u9664\u65f6\u95f4\uff0c$y$\uff1a\u4f4d\u7f6e\uff0c$z$\uff1a\u6743\u503c\n\n\n\u6c42$i'$\u7684\u9006\u5e8f\u5bf9\uff1a$x>x'$\uff0c$y<y'$\uff0c$z>z'$\uff0c\u6c42\u51fa\u4e00\u4e2a\u7b54\u6848$f_i$\n\n\n\u8003\u8651 $i'$ \u5bf9\u540e\u9762\u7684\u5f71\u54cd\uff1a$x>x'$\uff0c$y>y'$\uff0c$z<z'$\uff0c\u6c42\u51fa\u4e00\u4e2a\u7b54\u6848$g_i$\n\n\n\u5bf9\u4e8e\u6700\u540e\u6ca1\u6709\u5220\u9664\u7684\u70b9\uff0c\u6839\u636e\u4f4d\u7f6e\u968f\u4fbf\u52a0\u4e00\u4e2a\u5220\u9664\u65f6\u95f4\u3002\n\n\n\u7136\u540e\u5c31\u662f\u4e09\u4f4d\u504f\u5e8f\u4e86\u3002\n\n\n\u6c42 $f_i$ \uff0c\u6309\u7167\u5220\u9664\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5de6\u8fb9\u6392 $z$ \uff0c\u6811\u72b6\u6570\u7ec4\u66f4 $y$\n\n\n\u6c42 $g_i$ \uff0c\u6309\u7167\u5220\u9664\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5de6\u8fb9\u6392 $y$ \uff0c\u6811\u72b6\u6570\u7ec4\u66f4 $z$\n\n\n\u6700\u540e\u626b\u4e00\u904d\uff0c\u66f4\u7b54\u6848\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint qmax(int &x,int y) {if (x<y) x=y;}\nint qmin(int &x,int y) {if (x>y) x=y;}\nint read()\n{\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(isdigit(s)));\n    if(s=='-')base=-1,s=getchar();\n    while(isdigit(s))\n    {\n        k=k*10+(s^'0');\n        s=getchar();\n    }\n    return k*base;\n}\nvoid write(ll x)\n{\n    if(x<0)\n    {\n        putchar('-');\n        write(-x);\n    }\n    else\n    {\n        if(x/10) write(x/10);putchar(x%10+'0');\n    }\n}\nconst int maxn=1e5+100;\nconst int maxm=5e4+100;\nint n,m;\nint b[maxn],c[maxn];\nint t[maxn];\nll ans;\nstruct node\n{\n    int x,y,z;//x:\u5220\u9664\u7684\u65f6\u95f4 y:pos z:\u503c\n    int f,g;\n} a[maxn],A[maxn];\n\ninline void xg(int x,int y)\n{\n    while (x<=n)\n    {\n        *(t+x)+=y;\n        x+=x&(-x);\n    }\n}\ninline int qsum(int x)\n{\n    int sum=0;\n    while (x)\n    {\n        sum+=*(t+x);\n        x-=x&(-x);\n    }\n    return sum;\n}\n\nbool cmp(node aa,node bb)//\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\n{\n    return aa.y<bb.y;\n}\nbool cmp1(node aa,node bb)//\u6309\u7167\u5220\u9664\u65f6\u95f4\u6392\n{\n    return aa.x>bb.x;\n}\nbool cmp2(node aa,node bb)\n{\n    return aa.x<bb.x;\n}\nvoid cdq(int x,int y)\n{\n    if (x==y) return;\n    int mid=(x+y)>>1;\n    cdq(x,mid);cdq(mid+1,y);\n    int l=x,r=mid+1,p=0;\n    while (r<=y)//\u7edf\u7b54\u6848\n    {\n        while (l<=mid&&a[l].z>a[r].z) {xg(a[l].y,1);l++;}\n        a[r].f+=qsum(a[r].y);\n        r++;\n    }\n    for (int i=x;i<l;i++) xg(a[i].y,-1);\n\n    l=x,r=mid+1,p=x-1;//\u5f52\u5e76\n    while (l<=mid&&r<=y)\n    {\n        if (a[l].z>a[r].z) A[++p]=a[l++]; else A[++p]=a[r++];\n    }\n    while (l<=mid) A[++p]=a[l++];\n    while (r<=y) A[++p]=a[r++];\n    for (int i=x;i<=y;i++) a[i]=A[i];\n}\nvoid CDQ(int x,int y)\n{\n    if (x==y) return;\n    int mid=(x+y)>>1;\n    CDQ(x,mid);CDQ(mid+1,y);\n    int l=x,r=mid+1,p=0;\n    while (r<=y)\n    {\n        while (l<=mid&&a[l].y>a[r].y) {xg(a[l].z,1);l++;}\n        a[r].g+=qsum(a[r].z);\n        r++;\n    }\n    for (int i=x;i<l;i++) xg(a[i].z,-1);//memset\u592a\u6162\u4e86\uff0c\u4e0d\u5982\u4e00\u4e2a\u4e2a\u6e05\n\n    l=x,r=mid+1,p=x-1;//\u6309\u7167y\u7684\u5927\u5c0f\u5408\u5e76\n    while (l<=mid&&r<=y)\n    {\n        if (a[l].y>a[r].y) A[++p]=a[l++]; else A[++p]=a[r++];\n    }\n    while (l<=mid) A[++p]=a[l++];\n    while (r<=y) A[++p]=a[r++];\n    for (int i=x;i<=y;i++) a[i]=A[i];\n}\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    freopen(\"1.out\",\"w\",stdout);\n    n=read();m=read();//a\u6570\u7ec4\u521d\u59cb\u6309\u503c\u6392\u5e8f\n    for (int i=1;i<=n;i++)\n    {\n        *(b+i)=read();\n        a[b[i]].y=i;\n        a[b[i]].z=b[i];\n        ans+=i-1-qsum(b[i]);\n        xg(b[i],1);\n    }\n    memset(t,0,sizeof(t));\n    for (int i=1;i<=m;i++)\n    {\n        *(c+i)=read();\n        a[c[i]].x=i;\n    }\n    sort(a+1,a+n+1,cmp);\n    for (int i=1,j=m+1;i<=n;i++)\n    {\n        if (a[i].x==0) a[i].x=j++;\n    }\n    sort(a+1,a+n+1,cmp1);\n    cdq(1,n);//\u6c42\u51faf[i]\n    sort(a+1,a+n+1,cmp1);\n    CDQ(1,n);//\u6c42\u51fag[i]\n    sort(a+1,a+n+1,cmp2);\n    for (int i=1;i<=m;i++)\n    {\n        write(ans);\n        putchar('\\n');\n        ans=ans-(ll)a[i].f-(ll)a[i].g;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1516282549,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6211\u662f\u60f3\u7ec3CDQ\u5206\u6cbb\u7684\u2026\u2026\u7ed3\u679c\u5fcd\u4e0d\u4f4f\u53c8\u5199\u4e86\u4e2a\u4e3b\u5e2d\u6811\u3002\n\n\u9996\u5148\u770b\u770b\u4e0d\u52a8\u6001\u7684\u9006\u5e8f\u5bf9\u548b\u505a\uff1f\u6811\u72b6\u6570\u7ec4\u561b\u3002\n\n\u90a3\u4e48\u5220\u9664\u548b\u641e\uff1f\u5c31\u662f\u8003\u8651\u8d21\u732e\uff0c\u628a\u5b83\u524d\u9762\u6bd4\u4ed6\u5927\u7684\uff0c\u540e\u9762\u6bd4\u4ed6\u5c0f\u7684\u51cf\u53bb\u2026\u2026\n\n\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u5e26\u4fee\u6539\u7684\u4e3b\u5e2d\u6811\u5566\u3002\n\n\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\u5f88\u5957\u8def\u7684\u5427\u3002\n\n\u4e0d\u4f1a\u8fd9\u4e2a\u4e1c\u897f\u7684\u53ef\u4ee5\u53bb\u505adynamic rankinga\n\n\u6211\u5728\u8fd9\u91cc\u5c31\u7b80\u5355\u8bf4\u4e00\u4e0b\u5427\n\n\u666e\u901a\u4e3b\u5e2d\u6811\u5dee\u5206\u5b9e\u73b0\n\n\u5e26\u4fee\u6539\u7684\u8bdd\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5f62\u6001\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\u3002\n\n\u597d\u4e86\uff0c\u6ca1\u4e86\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x7fffffff\n#define N 100005\n#define M 5000005\nusing namespace std;\ntypedef long long ll;\nll ans;\nint n,m,sz,a[100],b[100],val[N],pos[N],a1[N],a2[N];\nint c[N*10],rt[N],ls[M],rs[M],sumv[M];\ninline int lowbit(int x){return x&(-x);}\ninline int ask(int x){\n    int ans=0;\n    for(int i=x;i;i-=lowbit(i))ans+=c[i];\n    return ans;\n}\nvoid change(int &o,int l,int r,int q){\n    if(!o)o=++sz;sumv[o]++;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    if(q<=mid)change(ls[o],l,mid,q);\n    else change(rs[o],mid+1,r,q);\n}\nint querysub(int x,int y,int v){\n    int cnta=0,cntb=0;int ans=0;x--;\n    for(int i=x;i;i-=lowbit(i))a[++cnta]=rt[i];\n    for(int i=y;i;i-=lowbit(i))b[++cntb]=rt[i];\n    int l=1,r=n;\n    while(l!=r){\n        int mid=(l+r)>>1;\n        if(v<=mid){\n            for(int i=1;i<=cnta;i++)ans-=sumv[rs[a[i]]];\n            for(int i=1;i<=cntb;i++)ans+=sumv[rs[b[i]]];\n            for(int i=1;i<=cnta;i++)a[i]=ls[a[i]];\n            for(int i=1;i<=cntb;i++)b[i]=ls[b[i]];\n            r=mid;\n        }\n        else{\n            for(int i=1;i<=cnta;i++)a[i]=rs[a[i]];\n            for(int i=1;i<=cntb;i++)b[i]=rs[b[i]];\n            l=mid+1;\n        }\n    }\n    return ans;\n}\nint querypre(int x,int y,int v){\n    int cnta=0,cntb=0,ans=0;x--;\n    for(int i=x;i;i-=lowbit(i))a[++cnta]=rt[i];\n    for(int i=y;i;i-=lowbit(i))b[++cntb]=rt[i];\n    int l=1,r=n;\n    while(l!=r){\n        int mid=(l+r)>>1;\n        if(v>mid){\n            for(int i=1;i<=cnta;i++)ans-=sumv[ls[a[i]]];\n            for(int i=1;i<=cntb;i++)ans+=sumv[ls[b[i]]];\n            for(int i=1;i<=cnta;i++)a[i]=rs[a[i]];\n            for(int i=1;i<=cntb;i++)b[i]=rs[b[i]];\n            l=mid+1;\n        }\n        else{\n            for(int i=1;i<=cnta;i++)a[i]=ls[a[i]];\n            for(int i=1;i<=cntb;i++)b[i]=ls[b[i]];\n            r=mid;\n        }\n    }\n    return ans;\n}\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++){\n        val[i]=read();pos[val[i]]=i;\n        a1[i]=ask(n)-ask(val[i]);\n        ans+=a1[i];\n        for(int j=val[i];j<=n;j+=lowbit(j))c[j]++;\n    }\n    memset(c,0,sizeof(c));\n    for(int i=n;i;i--){\n        a2[i]=ask(val[i]-1);\n        for(int j=val[i];j<=n;j+=lowbit(j))c[j]++;\n    }\n    for(int i=1;i<=m;i++){\n        printf(\"%lld\\n\",ans);\n        int x=read();x=pos[x];\n        ans-=(a1[x]+a2[x]-querysub(1,x-1,val[x])-querypre(x+1,n,val[x]));\n        for(int j=x;j<=n;j+=lowbit(j))change(rt[j],1,n,val[x]);\n    }\n    return 0;\n}\n```",
        "postTime": 1497667342,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6211\u5206\u4eab\u4e00\u4e0bCDQ\u5206\u6cbb\u7684\u505a\u6cd5\uff0c\n\n\u53ef\u4ee5\u770b\u6210\u628a\u6570\u5b57\u5012\u7740\u63d2\u5165\uff0c\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\u70b9\n\u7136\u540e\u7edf\u8ba1\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u7b54\u6848\u5373\u53ef\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\n\u8fd9\u9898\u7684\u7b54\u6848\u7edf\u8ba1\u5341\u5206\u7684\u6709\u8da3\uff0c\u5177\u4f53\u770b\u6ce8\u91ca\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define lowbit(x) ((x)&(-x))\n#define N 150010\n#define ll long long\nusing namespace std;\n \nstruct info{\n    int t,x,y;\n    info(){}\n    info(int a,int b,int c):t(a),x(b),y(c){}\n    friend bool operator <(info a,info b){return (a.x==b.x)?a.y<b.y:a.x<b.x;}\n}A[N],tmp[N];\nint n,mm,pos[N];\nll Ans[N];\n \ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n \nnamespace bit{\n    int T[N];\n    inline void add(int x,int v){for(;x<=n;x+=lowbit(x))T[x]+=v;}\n    inline int sum(int x){int r=0;for(;x;x-=lowbit(x))r+=T[x];return r;}\n    inline void clear(int x){for(;x<=n&&T[x];x+=lowbit(x))T[x]=0;}\n}\n \nvoid solve(int l,int r){\n    if(l==r) return;\n    int m=(l+r)>>1;\n    solve(l,m),solve(m+1,r);\n    for(int p=l,q=m+1,cnt=l;p<=m||q<=r;)\n        if(q>r||p<=m&&A[p]<A[q]) bit::add(A[p].y,1),tmp[cnt++]=A[p++];\n        else Ans[A[q].t]+=bit::sum(n)-bit::sum(A[q].y),tmp[cnt++]=A[q++];\n    for(int i=l;i<=m;++i) bit::clear(A[i].y);\n    for(int i=l;i<=r;++i) A[i]=tmp[i];\n    //Ans{i]\u7b97\u7684\u662f\u5355\u4e2a\u8d21\u732e\uff0c\u6240\u4ee5\u4e0d\u4ec5\u8981\u7b97\u524d\u9762\u6bd4\u5b83\u5927\u7684\uff0c\u8fd8\u8981\u7b97\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\n    for(int i=r;i>=l;--i)\n        if(A[i].t<=m) bit::add(A[i].y,1);\n        else Ans[A[i].t]+=bit::sum(A[i].y);\n    for(int i=l;i<=r;++i) bit::clear(A[i].y);\n}\n \nbool cmpt(info a,info b){return a.t<b.t;}\nint main(){\n    n=read(),mm=read();\n    for(int i=1,x;i<=n;++i) pos[x=read()]=i,A[i]=info(0,i,x);\n    int tim=n;\n    for(int i=1,x;i<=mm;++i) A[pos[read()]].t=tim--;\n    for(int i=1;i<=n;++i) if(!A[i].t) A[i].t=tim--;\n    sort(A+1,A+n+1,cmpt);  \n    solve(1,n);\n    //\u6b64\u65f6\u7b97\u51fa\u7684Ans[i]\u662f\u5bf9\u4e8e\u5355\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u800c\u7b54\u6848\u8981\u6c42\u6b64\u65f6\u6240\u6709\u7684\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u5e94\u8be5\u505a\u4e00\u4e2a\u524d\u7f00\u548c\n    for(int i=1;i<=n;++i) Ans[i]+=Ans[i-1];\n    for(int i=n;i>=n-mm+1;--i) printf(\"%lld\\n\",Ans[i]);\n    return 0;\n}\n```",
        "postTime": 1527151298,
        "uid": 20714,
        "name": "Void_f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "#### cdq\u5206\u6cbb\u5ef6\u7eedII\n\n\u5728\u7ecf\u8fc7\u4e86\u65e0\u6570cdq\u5206\u6cbb\u7684\u5386\u7ec3\u540e ~~\uff08\u54b3\u54b3\uff0c\u4e2a\u4f4d\u6570\uff09~~\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u4e00\u773c\u79d2\u770b\u51fa\u8fd9\u4e2a\u9898\u660e\u663e\u53ef\u4ee5\u4e09\u7ef4\u504f\u5e8f\u641e\u51fa\u6765\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u600e\u4e48\u4e09\u7ef4\u504f\u5e8f\u5462\uff0c\u76f4\u63a5\u8003\u8651\u6bcf\u6b21\u66f4\u65b0\u4e4b\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u8bdd\u597d\u50cf\u53ed\u662f\u5f88\u597d\u505a\uff0c\u90a3\u4e0d\u5982\u53cd\u8fc7\u6765\u60f3\uff0c\u6bcf\u6b21\u53bb\u8003\u8651\u5f53\u524d\u6570\u5b57\u88ab\u5220\u9664\u4e4b\u540e\u4f1a\u51cf\u5c11\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\uff0c\u800c\u8fd9\u4e2a\u95ee\u9898\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5220\u9664\u4e4b\u540e\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u5373\u4e3a\u5b83\u5bf9\u5168\u5c40\u7684\u8d21\u732e\uff0c\u663e\u7136\u5c31\u662f\uff1a\n\n- \u5728\u5b83\u4e4b\u524d\u4e14\u6bd4\u5b83\u5927/\u5728\u5b83\u4e4b\u540e\u4e14\u6bd4\u5b83\u5c0f\n- \u5220\u9664\u65f6\u95f4\u6bd4\u5b83\u665a\n\n\u5bf9\u4e8e\u6ca1\u6709\u5220\u9664\u7684\u5143\u7d20\uff0c\u5220\u9664\u65f6\u95f4\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\uff08\u6ce8\u610f\u4e0d\u8981RE\u4e86....\uff09\u3002\n\n### $code:$\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int maxq=2e5+9;\nstruct query{\n    int id,time,val;//\u5e8f\u5217\u4f4d\u7f6e,\u88ab\u5220\u65f6\u95f4,\u503c \n}q[maxq],tmp[maxq];\nint n,m;\nint aid=0,a[maxq],ans[maxq],poi[maxq];\nint c[maxq];int vis[maxq];\n#define lowbit(x) (x&(-x))\nvoid add(int i,int x){for(;i<=n;i+=lowbit(i)) c[i]+=x;}\nint sum(int i){int ret=0;for(;i;i-=lowbit(i)) ret+=c[i];return ret;}\nvoid clr(int i){for(;i<=n;i+=lowbit(i)) c[i]=0;}\ninline bool cmp(query &a,query &b){\n    return a.time>b.time;\n}\nint pre(){\n    int ret=0;\n    for(int i=n;i>=1;i--){\n        ret+=sum(a[i]-1);\n        add(a[i],1);\n    }\n    memset(c,0,sizeof(c));\n    return ret;\n}\nvoid cdq(int l,int r){//\u5927,\u524d,\u5220\u9664\u65f6\u95f4\u665a\u3002\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    cdq(l,mid),cdq(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while(i<=mid && j<=r){\n        if(q[i].id<q[j].id){\n            add(q[i].val,1);\n            tmp[k++]=q[i++];\t\t\n        }\n        else{\t\t\t\n            ans[q[j].time]+=sum(n)-sum(q[j].val);\n            tmp[k++]=q[j++];\n        }\n    }\n    while(i<=mid) tmp[k++]=q[i++];\n    while(j<=r){\n        ans[q[j].time]+=sum(n)-sum(q[j].val);\n        tmp[k++]=q[j++];\t\n    }\n    for(int i=l;i<=mid;i++){\n        clr(q[i].val),q[i]=tmp[i];\n    }\n    for(int i=mid+1;i<=r;i++) q[i]=tmp[i];\n}\nvoid cdq1(int l,int r){//\u5c0f,\u540e,\u5220\u9664\u65f6\u95f4\u665a\u3002\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    cdq1(l,mid),cdq1(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while(i<=mid && j<=r){\n        if(q[i].id>q[j].id){\n            add(q[i].val,1);\n            tmp[k++]=q[i++];\t\t\n        }\n        else{\t\t\t\n            ans[q[j].time]+=sum(q[j].val-1);\n            tmp[k++]=q[j++];\n        }\n    }\n    while(i<=mid) tmp[k++]=q[i++];\n    while(j<=r){\n        ans[q[j].time]+=sum(q[j].val-1);\n        tmp[k++]=q[j++];\t\n    }\n    for(int i=l;i<=mid;i++){\n        clr(q[i].val),q[i]=tmp[i];\n    }\n    for(int i=mid+1;i<=r;i++) q[i]=tmp[i];\n}\n#undef int\nint main(){\n    cin>>n>>m;\n    for(int i=1,x;i<=n;i++){\n        scanf(\"%d\",&x);poi[x]=i;\n        a[i]=x;\n        q[++aid]=(query){i,2e5,x};\n    }\n    for(int i=1,x;i<=m;i++){\n        scanf(\"%d\",&x);\n        q[poi[x]].time=i;\n    }\n    ans[0]=pre();\n    sort(q+1,q+1+aid,cmp);\n    cdq(1,aid);\n    sort(q+1,q+1+aid,cmp);\n    cdq1(1,aid);\n    printf(\"%lld\\n\",ans[0]);\n    for(int i=1;i<=m-1;i++){\n        ans[i]=ans[i-1]-ans[i];\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1554201332,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u5206\u5757\u8f7b\u677e\u641e\u5b9a\u3002\u56e0\u4e3aN<=100000\uff0c\u53ef\u4ee5\u5c06\u539f\u6570\u5217\u5206\u6210\u4e0d\u8d85\u8fc7100\u4e2a\u5927\u5c0f\u4e3a1000\u7684\u5757\u3002\u8fd9\u6837\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u5757\u4e2d\u67e5\u627e\u548c\u5b83\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u6bcf\u5757\u91cc\u7684\u5143\u7d20\u6392\u597d\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u505a\u5230\u3002\u5177\u4f53\u70b9\u8bf4\uff0c\u5047\u8bbe\u5220\u9664\u7684\u5143\u7d20\u662fx\uff0c\u5b83\u5728\u7b2cj\u5757\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u524dj-1\u5757\u4e2d\u5206\u522b\u7528\u4e8c\u5206\u627e\u5927\u4e8ex\u7684\u6570\u7684\u4e2a\u6570\uff0c\u5728j+1\u5757\u53ca\u4ee5\u540e\u7684\u5757\u4e2d\u7528\u4e8c\u5206\u627e\u5c0f\u4e8ex\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6700\u540e\u5728\u7b2cj\u5757\u4e2d\u4e00\u904d\u5faa\u73af\u66b4\u529b\u627e\u5230\u548cx\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002\u56e0\u4e3a\u5220\u9664\u64cd\u4f5c\u53ea\u670950000\u4e2a\uff0c\u52a0\u4e0a\u5e38\u6570\u5f88\u5c0f\uff0c\u5168\u90e8\u6d4b\u8bd5\u70b9\u57282.5s\u5185\u641e\u5b9a\uff0c\u6548\u7387\u5e76\u4e0d\u4f4e\u3002\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint const N=1e5+1,M=1e2+1,B=1e3;\nint n,m,q,b[M][B+1],p[N];\nlong long ans=0,t[N];\nint lowbit(int x){\n\treturn x & (-x);\n}\nvoid add(int x, int v){\n\tif (x>n) return;\n\tt[x]+=v;\n\tadd(x+lowbit(x),v);\n}\nlong long ask(int x){\n\treturn x?t[x]+ask(x-lowbit(x)):0;\n}\nint find(int k, int x){\n\tif (!b[k][0]) return 0;\n\tint l=1,r=b[k][0];\n\twhile(r-l>1){\n\t\tint mid=((l+r)>>1);\n\t\tif (b[k][mid]<x) l=mid; else r=mid-1;\n\t}\n\tif (b[k][r]<x) return r;\n\tif (b[k][l]<x) return l;\n\treturn 0;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n>>q;\n\tint m=(n-1)/B+1;\n\tfor (int i=1;i<=n;i++){\n\t\tint a;\n\t\tcin>>a;\n\t\tint j=(i-1)/B+1;\n\t\tb[j][++b[j][0]]=a;\n\t\tp[a]=i;\n\t\tans+=(long long) i-1-ask(a);\n\t\tadd(a,1);\n\t}\n\tfor (int i=1;i<=m;i++)\n\t\tsort(b[i]+1,b[i]+1+b[i][0]);\n\tfor (int i=1;i<=q;i++){\n\t\tcout<<ans<<endl;\n\t\tint x;\n\t\tcin>>x;\n\t\tint j=(p[x]-1)/B+1;\n\t\tfor (int k=1;k<=j-1;k++)\n\t\t\tans-=(b[k][0]-find(k,x));\n\t\tfor (int k=j+1;k<=m;k++)\n\t\t\tans-=find(k,x);\n\t\tfor (int k=1;k<=b[j][0];k++)\n\t\t\tif ((p[b[j][k]]<p[x] && b[j][k]>x) || \n\t\t\t(p[b[j][k]]>p[x] && b[j][k]<x)) ans--;\n\t\tfor (int k=1;k<=b[j][0];k++)\n\t\t\tif (b[j][k]==x){\n\t\t\t\tfor (int l=k+1;l<=b[j][0];l++)\n\t\t\t\t\tb[j][l-1]=b[j][l];\n\t\t\t\tb[j][0]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\treturn 0; \n} \n```",
        "postTime": 1534322110,
        "uid": 95804,
        "name": "wu3412790",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5148\u8d34[blog](https://www.cnblogs.com/bztMinamoto/p/9396076.html)\n\n\u539f\u6765\u8fd8\u4ee5\u4e3a\u81ea\u5df1\u5df2\u7ecf\u4f1a\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\u4e86\u5462\u2026\u2026\u624d\u53d1\u73b0\u81ea\u5df1\u8fd8\u662f\u592anaive\u2026\u2026\n\n\nzcysky\u5927\u4f6c\u5199\u7684\u592a\u543c\u5566\uff01\n\n\u7136\u800c\u6211\u8fd8\u662f\u8fd8\u662f\u6765\u8be6\u7ec6\u7684\u8bf4\u4e00\u8bf4\u597d\u4e86\u2026\u2026zcysky\u5927\u4f6c\u5199\u7684\u4e5f\u592a\u7b80\u5355\u4e86\u2026\u2026\n\n\u5148\u8003\u8651\u65e0\u4fee\u6539\u7684\u9006\u5e8f\u5bf9\u600e\u4e48\u505a\uff1f\n\n\u5f88\u660e\u663e\uff0c\u7528\u6811\u72b6\u6570\u7ec4\uff08\u867d\u7136\u6211\u4eca\u5929\u4e4b\u524d\u4e00\u76f4\u4ee5\u4e3a\u9006\u5e8f\u5bf9\u4e2a\u6570\u53ea\u80fd\u7528\u5f52\u5e76\u505a\uff09\n\n\u6211\u4eec\u8bb0$a1[i]$\u8868\u793a\u5728$i$\u4e4b\u524d\u4e14\u6bd4$i$\u5927\u7684\u6570\u7684\u4e2a\u6570\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684i\u6307\u7684\u662f\u4f4d\u7f6e\uff09\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u7b54\u6848\u4e3a$\\sum _{i=1}^n a[i]$\n\n```\nfor(int i=1;i<=n;++i){\n\tval[i]=read(),pos[val[i]]=i;\n\ta1[i]=ask(n)-ask(val[i]);\n\tans+=a1[i];\n\tfor(int j=val[i];j<=n;j+=lowbit(j)) ++c[j];\n}\n```\n\n\u8bb0$a2[i]$\u8868\u793a\u5728$i$\u4e4b\u540e\u4e14\u6bd4$i$\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u53ea\u8981\u628a\u4e0a\u9762\u90a3\u4e2a\u5012\u7740\u63a8\u5c31\u884c\u4e86\n\n```\nfor(int i=n;i;--i){\n\ta2[i]=ask(val[i]-1);\n\tfor(int j=val[i];j<=n;j+=lowbit(j)) ++c[j];\n}\n```\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u6bcf\u4e00\u6b21\u5c06\u4e00\u4e2a\u6570\u5220\u9664\uff0c\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u662f\u591a\u5c11\uff1f\n\n\u5f88\u660e\u663e\u662f$a1[i]+a2[i]$\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5566\n\n\u4e8e\u662f\u8bc4\u6d4b\u673a\u8868\u793a\u5e76\u4e0d\u60f3\u7406\u4f60\u5e76\u4e22\u7ed9\u4f60\u4e00\u5806WA\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u95ee\u9898\uff0c\u5982\u679c$a1[i]$\u548c$a2[i]$\u4e2d\u8868\u793a\u7684\u6570\u5df2\u7ecf\u6709\u88ab\u5220\u9664\u4e86\u7684\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u53ea\u8981\u628a\u8fd9\u4e9b\u88ab\u5220\u9664\u7684\u6570\u51cf\u53bb\u5373\u53ef\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\u7ef4\u62a4\n\n\u56e0\u4e3a\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u662f\u524d\u7f00\u548c\n\n\u5982\u679c\u6309\u7167\u4e00\u822c\u601d\u60f3\uff0c\u4e00\u4e2a\u4e00\u4e2a\u53bb\u66f4\u6539\u592a\u6d6a\u8d39\u65f6\u95f4\u4e86\n\n\u6211\u4eec\u60f3\u5230\uff0c\u524d\u7f00\u548c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7684\u601d\u60f3\u6765\u7ef4\u62a4\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7684\u601d\u60f3\u5efa\u4e3b\u5e2d\u6811\n\n\u4e8e\u662f\u6bcf\u4e00\u6b21\u66f4\u6539\u5c31\u53ef\u4ee5\u51cf\u5c11\u5230\u505a$log n$\u6b21\u4e86\n\n\u6240\u4ee5\u6bcf\u4e00\u6b21\u5220\u53bb\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u5c31\u5728\u4e3b\u5e2d\u6811\u4e0a\u63d2\u5165\u8fd9\u4e2a\u6570\n\n\u8981\u7b97\u7b54\u6848\u65f6\uff0c\u53ea\u8981\u51cf\u53bb$a1[i]$\u548c$a2[i]$\uff0c\u518d\u628a\u5220\u9664\u7684\u6570\u52a0\u56de\u6765\u5c31\u597d\u4e86\n\n\u53ea\u8981\u5728\u4e3b\u5e2d\u6811\u4e0a$[1,i-1]$\u533a\u95f4\u4e2d\u5927\u4e8e$val[i]$\u7684\u6570\u7684\u4e2a\u6570\u548c$[i+1,n]$\u533a\u95f4\u4e2d\u5c0f\u4e8e$val[i]$\u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\n```\n//minamoto\n#include<bits/stdc++.h>\n#define N 100005\n#define M 5000005\n#define ll long long\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline ll read(){\n    #define num ch-'0'\n    char ch;bool flag=0;ll res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar obuf[1<<24],*o=obuf;\nvoid print(ll x){\n    if(x>9) print(x/10);\n    *o++=x%10+48;\n}\nint L[M],R[M],sum[M],rt[N];\nint val[N],pos[N],xx[N],yy[N],c[N],a1[N],a2[N];\nint n,cnt,q;ll ans=0;\ninline int lowbit(int x){return x&(-x);}\nint ask(int x){\n    int s=0;\n    for(int i=x;i;i-=lowbit(i)) s+=c[i];\n    return s;\n}\nvoid update(int &now,int l,int r,int k){\n    if(!now) now=++cnt;\n    ++sum[now];\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(k<=mid) update(L[now],l,mid,k);\n    else update(R[now],mid+1,r,k);\n}\nint querysub(int x,int y,int v){\n    int cntx=0,cnty=0,ans=0;--x;\n    for(int i=x;i;i-=lowbit(i)) xx[++cntx]=rt[i];\n    for(int i=y;i;i-=lowbit(i)) yy[++cnty]=rt[i];\n    int l=1,r=n;\n    while(l<r){\n        int mid=(l+r)>>1;\n        if(v<=mid){\n            for(int i=1;i<=cntx;++i) ans-=sum[R[xx[i]]];\n            for(int i=1;i<=cnty;++i) ans+=sum[R[yy[i]]];\n            for(int i=1;i<=cntx;++i) xx[i]=L[xx[i]];\n            for(int i=1;i<=cnty;++i) yy[i]=L[yy[i]];\n            r=mid;\n        }\n        else{\n            for(int i=1;i<=cntx;++i) xx[i]=R[xx[i]];\n            for(int i=1;i<=cnty;++i) yy[i]=R[yy[i]];\n            l=mid+1;\n        }\n    }\n    return ans;\n}\nint querypre(int x,int y,int v){\n    int cntx=0,cnty=0,ans=0;--x;\n    for(int i=x;i;i-=lowbit(i)) xx[++cntx]=rt[i];\n    for(int i=y;i;i-=lowbit(i)) yy[++cnty]=rt[i];\n    int l=1,r=n;\n    while(l<r){\n        int mid=(l+r)>>1;\n        if(v>mid){\n            for(int i=1;i<=cntx;++i) ans-=sum[L[xx[i]]];\n            for(int i=1;i<=cnty;++i) ans+=sum[L[yy[i]]];\n            for(int i=1;i<=cntx;++i) xx[i]=R[xx[i]];\n            for(int i=1;i<=cnty;++i) yy[i]=R[yy[i]];\n            l=mid+1;\n        }\n        else{\n            for(int i=1;i<=cntx;++i) xx[i]=L[xx[i]];\n            for(int i=1;i<=cnty;++i) yy[i]=L[yy[i]];\n            r=mid;\n        }\n    }\n    return ans;\n}\nint main(){\n    //freopen(\"testdata.in\",\"r\",stdin);\n    n=read(),q=read();\n    for(int i=1;i<=n;++i){\n        val[i]=read(),pos[val[i]]=i;\n        a1[i]=ask(n)-ask(val[i]);\n        ans+=a1[i];\n        for(int j=val[i];j<=n;j+=lowbit(j)) ++c[j];\n    }\n    memset(c,0,sizeof(c));\n    for(int i=n;i;--i){\n        a2[i]=ask(val[i]-1);\n        for(int j=val[i];j<=n;j+=lowbit(j)) ++c[j];\n    }\n    while(q--){\n        print(ans),*o++='\\n';\n        int x=read();x=pos[x];\n        ans-=(a1[x]+a2[x]-querysub(1,x-1,val[x])-querypre(x+1,n,val[x]));\n        for(int j=x;j<=n;j+=lowbit(j)) update(rt[j],1,n,val[x]);\n    }\n    fwrite(obuf,o-obuf,1,stdout);\n    return 0;\n}\n```",
        "postTime": 1533022164,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u672c\u65b9\u6cd5\u7528\u4e86\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u867d\u7136\u7a0d\u663e\u9ebb\u70e6\uff0c\u4f46\u601d\u8def\u5f88\u6e05\u6670\u3002\n\n\u6211\u4eec\u6362\u4e00\u79cd\u8be2\u95ee\u7684\u63cf\u8ff0\u65b9\u5f0f\uff1a\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\uff0c\u6709\u591a\u5c11\u5bf9\u9006\u5e8f\u5bf9 $(val_i,val_j)$ \u88ab\u5220\u9664\u3002\u663e\u7136\uff0c\u5bf9\u4e8e\u6ee1\u8db3 $val_i>val_j,i<j$ \u7684\u4e00\u5bf9 $(i,j)$ \u800c\u8a00\uff0c\u5b83\u88ab\u5220\u9664\u662f\u5728\u65f6\u523b $\\min(time_i,time_j)$ (\u5176\u4e2d $time_c$ \u8868\u793a $c$ \u88ab\u5220\u9664\u7684\u65f6\u523b)\u3002\n\n\u8003\u8651 $\\mathrm{CDQ}$ \u5206\u6cbb\u3002\u4e0b\u6807\u663e\u7136\u5df2\u7ecf\u6709\u5e8f\uff0c\u6211\u4eec\u5728\u5206\u6cbb\u8fc7\u7a0b\u4e2d\u5bf9 $time$ **\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\u3002\u82e5\u5f53\u524d\u5728\u524d\u534a\u6bb5\u533a\u95f4\u5185\u7684\u6307\u9488 $i$ \u548c\u540e\u534a\u6bb5\u533a\u95f4\u5185\u7684\u6307\u9488 $j$ \u6ee1\u8db3 $time_i>time_j$\uff0c\u5219\u6839\u636e\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u5c06 $i$ \u540e\u79fb\u4e00\u4f4d\u3002\u540e\u79fb\u4e4b\u524d\uff0c\u6211\u4eec\u5728**\u4e13\u95e8\u8003\u8651\u5bf9\u53f3\u8fb9\u533a\u95f4\u7684\u8d21\u732e\u7684\u6811\u72b6\u6570\u7ec4**\u4e2d\u5c06 $val_i$ \u52a0\u5165\uff0c\u5728**\u4e13\u95e8\u8003\u8651\u5bf9\u5de6\u8fb9\u533a\u95f4\u7684\u8d21\u732e\u7684\u6811\u72b6\u6570\u7ec4**\u4e2d\u67e5\u8be2**\u53f3\u8fb9\u533a\u95f4\u5185**\u4f1a\u548c $val_i$ \u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u6570\u7684\u4e2a\u6570\u5e76\u7d2f\u52a0\u81f3\u5bf9\u4e8e $\\bold{time_i}$ \u7684\u7b54\u6848\u4e2d\uff08\u6ce8\u610f\u4e0d\u662f $time_j$\uff01\u56e0\u4e3a $\\bold{time_i}$ \u6b64\u65f6\u663e\u7136\u5df2\u7ecf\u88ab\u66f4\u65b0\u5b8c\u6bd5\u4e86\uff0c\u800c $time_j$ \u8fd8\u672a\u88ab\u66f4\u65b0\uff09\u3002\u5f53 $time_i<time_j$ \u65f6\u540c\u7406\u3002\u6700\u540e\u7edf\u8ba1\u8f93\u51fa\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u8981\u5f00 $\\mathrm{long\\ long}$\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,a[100005],del[100005],pos[100005],t1[100005],t2[100005];\nint c1[100005],c2[100005];\nlong long ans[100005]; \n//ans[i]\u8868\u793a\u5728i\u65f6\u523b\u6070\u597d\u5220\u9664\u7684\u6709\u591a\u5c11\u5bf9\u9006\u5e8f\u5bf9\n//time[i]<time[j] val[i]>val[j] pos[i]<pos[j] (i,j)\u5c31\u4f1a\u5bf9time[j]\u4ea7\u751f\u8d21\u732e\n//time[i]>time[j] val[i]>val[j] pos[i]<pos[j] (i,j)\u5c31\u4f1a\u5bf9time[i]\u4ea7\u751f\u8d21\u732e\nstruct Thing{\n\tint time,pos,val;\n}q[100005],tmp[100005];\nvoid Update(int x,int k,int c[]){\n\twhile(x<=n)c[x]+=k,x+=x&-x;\n}\nint GetAns(int x,int c[]){\n\tint ret=0;\n\twhile(x)ret+=c[x],x-=x&-x;\n\treturn ret;\n}\nvoid Clear(int x,int c[]){\n\twhile(x<=n)c[x]=0,x+=x&-x;\n}\nvoid CDQ(int l,int r){\n\tif(l==r)return ;\n\tint mid=(l+r)/2;\n\tCDQ(l,mid);\n\tCDQ(mid+1,r);\n\tint i=l,j=mid+1,x=l,s0=0,s1=0;\n\twhile(i<=mid&&j<=r){\n\t\tif(q[i].time>q[j].time){\n\t\t\tUpdate(q[i].val,1,c1);\n\t\t\tans[q[i].time]+=GetAns(q[i].val-1,c2);\n\t\t\tt1[++s0]=q[i].val,tmp[x++]=q[i++];\n\t\t}\n\t\telse {\n\t\t\tUpdate(q[j].val,1,c2);\n\t\t\tans[q[j].time]+=GetAns(n,c1)-GetAns(q[j].val,c1);\n\t\t\tt2[++s1]=q[j].val,tmp[x++]=q[j++];\n\t\t}\n\t}\n\twhile(i<=mid){\n\t\tUpdate(q[i].val,1,c1);\n\t\tans[q[i].time]+=GetAns(q[i].val-1,c2);\n\t\tt1[++s0]=q[i].val,tmp[x++]=q[i++];\n\t}\n\twhile(j<=r){\n\t\tUpdate(q[j].val,1,c2);\n\t\tans[q[j].time]+=GetAns(n,c1)-GetAns(q[j].val,c1);\n\t\tt2[++s1]=q[j].val,tmp[x++]=q[j++];\n\t}\n\tfor(int i=1;i<=s0;i++)Clear(t1[i],c1);\n\tfor(int i=1;i<=s1;i++)Clear(t2[i],c2);\n\tfor(int i=l;i<=r;i++)q[i]=tmp[i];\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),pos[a[i]]=i;\n\tfor(int i=1,x;i<=m;i++){\n\t\tscanf(\"%d\",&x);\n\t\tdel[pos[x]]=i;\n\t}\n\tint mm=m;\n\tfor(int i=1;i<=n;i++){\n\t\tif(!del[i])del[i]=++mm;\n\t\tq[i]=(Thing){del[i],i,a[i]};\n\t\t//cout<<del[i]<<' '<<i<<' '<<a[i]<<endl;\n\t}\n\tCDQ(1,n);\n\tlong long S=0;\n\tfor(int i=1;i<=n;i++)S+=ans[i];\n\tprintf(\"%lld\\n\",S);\n\tfor(int i=1;i<m;i++)printf(\"%lld\\n\",S-=ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1571833271,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "## \u5206\u5757\u662f\u4e2a\u597d\u7b97\u6cd5\n\n~~\u5c24\u5176\u5bf9\u4e8e\u6211\u8fd9\u79cd\u4e0d\u4f1a\u6811\u5957\u6811\u7684\u50bb\u5b50~~\n\n\u5220\u9664\u4e00\u4e2a\u6570\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\u5b83\u5bf9\u4e8e\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u662f**\u5b83\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570+\u5b83\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570**\uff0c\u4e8e\u662f\u7528\u5206\u5757\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\uff1a\n\n1. \u7b97\u8d21\u732e\uff0c\u8be5\u6570\u524d\u9762\u7684\u5757\u548c\u540e\u9762\u7684\u5757\u4e8c\u5206\uff0c\u5b83\u6240\u5728\u7684\u5757\u66b4\u529b\uff1b\n2. \u628a\u5b83\u5220\u9664\uff0c\u539f\u6570\u5217\u6253\u6807\u8bb0\uff0c\u5757\u5185\u5220\u9664\u540e\u628a\u540e\u9762\u7684\u6570\u5f80\u524d\u79fb\u3002\n\n\u8fd9\u6837\u5199\u7684\u590d\u6742\u5ea6\u662f$O(m\\sqrt{n}logn)$\u7684\uff0c\u76f8\u5f53\u5371\u9669\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u628a\u5757\u5927\u5c0f\u53d6\u6210$\\sqrt{nlogn}$\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86$O(m\\sqrt{nlogn})$\uff0c\u4e0d\u7528\u5361\u5e38\u90fd\u53ef\u4ee5\u8f7b\u677eAC\u3002\n\ncode\uff1a\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=100050;\nchar rB[1<<21],*S,*T,wB[1<<21];\nint wp=-1;\ninline char gc(){return S==T&&(T=(S=rB)+fread(rB,1,1<<21,stdin),S==T)?EOF:*S++;}\ninline void flush(){fwrite(wB,1,wp+1,stdout);wp=-1;}\ninline void pc(char c){if(wp==(1<<21))flush();wB[++wp]=c;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=(x<<3)+(x<<1)+(c&15);\n    return x;\n}\nshort buf[25];\ninline void wt(ll x){\n    short l=-1;\n    while(x>9){\n        buf[++l]=x%10;\n        x/=10;\n    }\n    pc(x|48);\n    while(l>=0)pc(buf[l--]|48);\n    pc('\\n');\n}\n//\u5feb\u8bfb/\u5feb\u5199\nint a[N],b[100][1300],c[N],t[N],n,x,sz[100],K,cnt,pos[N];\nll ans=0;\nbool d[N];\nvoid ms(int L,int R){  //\u5f52\u5e76\u6392\u5e8f\u6c42\u521d\u59cb\u9006\u5e8f\u5bf9\u6570\n    if(L==R)return;\n    int M=L+R>>1,i=L,j=M+1,k=L;\n    ms(L,M);ms(M+1,R);\n    while(i<=M&&j<=R)if(c[i]<=c[j])t[k++]=c[i++];\n    else{\n        ans+=M-i+1;\n        t[k++]=c[j++];\n    }\n    while(i<=M)t[k++]=c[i++];\n    while(j<=R)t[k++]=c[j++];\n    for(i=L;i<=R;i++)c[i]=t[i];\n}\ninline void build(){\n    int i,j;\n    K=sqrt(n*log(n)/log(2));if(!K)K=1;cnt=n/K;  //1*log(1)=0\uff0c\u78b0\u4e0a\u6bd2\u7624\u6570\u636e\uff08\u8fd9\u9898\u6ca1\u6709\uff09\u4f1aRE\n    for(i=1;i<=cnt;i++){\n        for(j=1;j<=K;j++)b[i][j]=a[(i-1)*K+j];\n        sort(b[i]+1,b[i]+K+1);\n        sz[i]=K;\n    }\n    if(n%K){\n    \tcnt++;\n        for(i=1;i<=n%K;i++)b[cnt][i]=a[(cnt-1)*K+i];\n        sort(b[cnt]+1,b[cnt]+n%K+1);\n        sz[cnt]=n%K;\n    }\n}\ninline void inupper(int p,int x){  //\u5757\u5185\u4e8c\u5206\u66f4\u5927\u503c\u7684\u4e2a\u6570\n    int l=1,r=sz[p],m,s=sz[p]+1;\n    while(l<=r){\n    \tm=l+r>>1;\n    \tif(b[p][m]>x){s=m;r=m-1;}\n    \telse l=m+1;\n    }\n    ans-=sz[p]-s+1;\n}\ninline void inlower(int p,int x){  //\u5757\u5185\u4e8c\u5206\u66f4\u5c0f\u503c\u7684\u4e2a\u6570\n    int l=1,r=sz[p],m,s=0;\n    while(l<=r){\n        m=l+r>>1;\n        if(b[p][m]<x){s=m;l=m+1;}\n        else r=m-1;\n    }\n    ans-=s;\n}\ninline int find(int p,int x){  //\u66b4\u529b\u641c\n    int l=1,r=sz[p],m;\n    while(l<r){\n        m=l+r>>1;\n        if(b[p][m]>=x)r=m;\n        else l=m+1;\n    }\n    return l;\n}\ninline void work(){\n    int p=(x+K-1)/K,i,t=find(p,a[x]);\n    for(i=1;i<p;i++)inupper(i,a[x]);\n    for(i=p+1;i<=cnt;i++)inlower(i,a[x]);\n    for(i=(p-1)*K+1;i<x;i++)if(!d[i]&&a[i]>a[x])ans--;\n    for(i=x+1;i<=p*K&&i<=n;i++)if(!d[i]&&a[i]<a[x])ans--;\n    d[x]=1;  //\u5220\u9664\u6807\u8bb0\n    for(i=t;i<sz[p];i++)b[p][i]=b[p][i+1];  //\u5220\u9664\u4e00\u4e2a\u6570\u540e\u540e\u9762\u7684\u6570\u8981\u524d\u79fb\n    sz[p]--;  //\u6b64\u5757\u5185\u5143\u7d20\u51cf\u5c11\n}\nint main(){\n    int m,i;\n    n=rd();m=rd()-1;  //\u65e2\u7136\u6700\u540e\u4e00\u4e2a\u4e0d\u7528\u8f93\u51fa\u7b54\u6848\uff0c\u90a3\u5c31\u4e0d\u7528\u5904\u7406\u4e86\n    for(i=1;i<=n;i++)pos[a[i]=rd()]=i;  //\u9898\u76ee\u8981\u5220\u9664\u7684\u662f\u6570\uff0c\u6240\u4ee5\u8981\u8bb0\u4e0b\u4f4d\u7f6e\n    build();\n    memcpy(c,a,sizeof(c));\n    ms(1,n);\n    wt(ans);\n    while(m--){\n        x=pos[rd()];\n        work();\n        wt(ans);\n    }\n    flush();\n    return 0;\n}\n```\n~~\u7136\u540e\u6211\u5c31\u4e00\u76f4\u5b66\u4e0d\u4f1a\u6811\u5957\u6811~~",
        "postTime": 1549419805,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "### \u9996\u5148\u8bf4\u660e\uff0c\u672c\u505a\u6cd5\u6548\u7387\u5e76\u4e0d\u4f18\u79c0\uff0c~~\u8d34\u8fd9\u7bc7\u4ee3\u7801\u53ea\u662f\u56e0\u4e3a\u6211\u53ea\u4f1a\u5199\u8fd9\u4e2a~~\n\n------------\n\n#### \u9996\u5148\u5206\u6790\uff08\u81ea\u9ed1\uff09\n\u672c\u9898\u9898\u9762\u8a00\u7b80\u610f\u8d45\uff0c\u6545~~\u663e\u7136~~\u662f\u6570\u636e\u7ed3\u6784\u3002\uff08\u6beb\u65e0\u7834\u7efd\u7684\u5206\u6790\uff09\n\n\u4e3b\u5e2d\u6811\u7b49\u7ed3\u6784\u89e3\u51b3\u8fd9\u7c7b\u52a8\u6001\uff08\u53ef\u6301\u4e45\uff09\u95ee\u9898\u7684\u6548\u7387\u662f\u5f88\u4f18\u79c0\u7684\uff0c\u6240\u4ee5\u63a8\u8350\u53bb\u5199\u4e00\u5199\u90a3\u4e9b\u7b97\u6cd5\uff0c\u53d7\u7528\u9762\u4e5f\u633a\u5e7f\u3002\uff08\u4e0d\u662f\u8d76\u4f60\u4eec\uff09\n\n\n------------\n#### \u6211\u7684\u601d\u8def\n\u6211\u4eec\u4e0d\u7528\u601d\u8003\u9898\u76ee\u80cc\u540e\u7684\u610f\u601d\uff0c\u523b\u610f\u53bb\u5957\u5404\u79cd\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0a\u53bb\uff0c\u6211\u4eec\u76f4\u63a5\u5206\u6790\u9898\u610f\uff0c\u7136\u540e\u4ece\u66b4\u529b\u601d\u8def\u8003\u8651\u4f18\u5316\u3002\n\n\u66b4\u529b\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8981\u5220\u7684\u6570\uff0c\u66b4\u529b\u679a\u4e3e\u51fa\u5b58\u5728\u8fd9\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\uff0c\u5373\u627e\u51fa**\u6b64\u6570\u5de6\u8fb9\u5c0f\u4e8e\u81ea\u5df1\u7684\u548c\u53f3\u8fb9\u5927\u4e8e\u81ea\u5df1\u7684\u6570\u7684\u4e2a\u6570**\u3002\uff08\u4e00\u9053\u7701\u9009\u9898\uff0c\u62ff30\u5206\u4e0d\u4e8f\uff09\n\n\u95ee\u9898\uff1a\u7531\u4e8e\u6bcf\u4e00\u6b21\u66b4\u529b\u679a\u4e3e\uff0c\u767d\u767d\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u3002\n\n\u601d\u8003\uff1a\u6211\u4eec\u77e5\u9053\uff0c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u67e5\u627ei\u5de6\u8fb9\u548ci\u53f3\u8fb9\u7684\u6240\u6709\u6570\uff0c\u5e73\u8861\u6811\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u6bd4i\u5927\uff08\u6216\u5c0f\uff09\u7684\u6570\u3002\u6240\u4ee5\u5c31\u7ed3\u5408\u4ed6\u4eec\uff0c\u4ea7\u751f\u4e86\u53ef\u4ee5AC\u7684\u505a\u6cd5\uff0c**\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff01**\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a(NlogN+Mlog^2N)\uff0c\u7684\u786e\u4e0d\u7b97\u6700\u4f18\u79c0\u3002\uff08\u4f46\u5c31\u662f\u80fdAC\uff0c\u6c14\u4e0d\u6c14\uff1f\uff1f\uff09\u3002\n\n\n------------\n\n\n##### \u6ce8\uff1a\u4e2d\u56fd\u8ba1\u7b97\u673a\u9886\u57df\u7684\u653f\u7b56\u5148\u884c\u8005\u9093\u5c0f\u5e73\u540c\u5fd7\u8bf4\u8fc7\uff0c\u7f8e\u4ee3\u7801\u4e11\u4ee3\u7801\uff0c\u80fdAC\u5c31\u662f\u597d\u4ee3\u7801\uff08\u5927\u610f\u76f8\u540c\uff09\u3002\u6240\u4ee5\u5728\u8003\u573a\u4e0a\u5373\u4f7f\u60f3\u4e0d\u51fa\u6700\u4f18\u89e3\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5f97\u90e8\u5206\u5206\uff0c\u751a\u81f3\u9a97\u5206AC\uff0c\u5e0c\u671b\u8fd9\u79cd\u601d\u60f3\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002\n\n\n------------\n\n\n~~__\u5927\u4f6c\uff1a__ ___Talk is cheap, show me the code___~~\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mn=100005;\n\nint n,m,a[mn],b[mn],rt[mn];\nint o[mn],cnt;\nbool h[mn*100];\n\nlong long ans,Ans[mn];\n\nstruct dr{\n\tint son[2];\n\tint size;\n\tint fa;\n\tint v;\n} t[mn*100];\n\ninline int update(int x){\n\tt[x].size=t[t[x].son[1]].size+t[t[x].son[0]].size+1;\n}\n\ninline int lowbit(int x){\n\treturn x&(-x);\n}\n\ninline void rot(int x){//\u5c06zig\u548czag\u5199\u8fdb\u4e00\u4e2a\u51fd\u6570\n\tint fa=t[x].fa;\n\tint gf=t[fa].fa;\n\tint s=t[fa].son[1]==x;\n\tt[gf].son[t[gf].son[1]==fa]=x;\n\tt[x].fa=gf;\n\tt[fa].son[s]=t[x].son[s^1];\n\tt[t[x].son[s^1]].fa=fa;\n\tt[fa].fa=x;\n\tt[x].son[s^1]=fa;\n\tupdate(fa);\n\tupdate(x);\n}\n\ninline void splay(int x){\n\twhile(t[x].fa){\n\t\tint fa=t[x].fa;\n\t\tint gf=t[fa].fa;\n\t\tif(gf&&(t[gf].son[1]==fa)==(t[fa].son[1]==x)) rot(fa);\n\t\trot(x);\n\t}\n}\n\ninline int insert(int root,int x){\n\tcnt++;\n\tt[cnt].v=x;\n\tt[cnt].son[1]=t[cnt].son[0]=t[cnt].fa=0;\n\tt[cnt].size=1;\n\tif(!root) return cnt;\n\tint y=root,fa;\n\twhile(y){\n\t\tfa=y;\n\t\tif(x<=t[y].v) y=t[y].son[0];\n\t\telse y=t[y].son[1];\n\t}\n\tt[cnt].fa=fa;\n\tif(x<=t[fa].v) t[fa].son[0]=cnt;\n\telse t[fa].son[1]=cnt;\n\tsplay(cnt);\n\treturn cnt;\n}\n\nint find(int root,int x){\n\tif(!root) return 0;\n\tif(x>t[root].v) return t[t[root].son[0]].size+1+find(t[root].son[1],x);\n\treturn find(t[root].son[0],x);\n}\n\nvoid add(int x,int v){\n\twhile(x<=n){\n\t\trt[x]=insert(rt[x],v);\n\t\tx+=lowbit(x);\n\t}\n}\n\nint get(int x,int v){\n\tif(!x) return 0;\n\tint ans=0;\n\twhile(x){\n\t\tans+=find(rt[x],v);\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint Sz(int x){\n\tif(x==0) return 0;\n\tint ans=0;\n\twhile(x){\n\t\tans+=t[rt[x]].size;\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>a[i],o[a[i]]=i;\n\tfor(int i=1;i<=m;i++) cin>>b[i],h[b[i]]=1;\n    //o\u6570\u7ec4\u5b58\u5bf9\u5e94\u4f4d\u7f6e,h\u6570\u7ec4\u5224\u65ad\u662f\u5426\u5904\u5728\u5220\u9664\u5e8f\u5217\u4e2d\n\tfor(int i=1;i<=n;i++){\n\t\tif(!h[a[i]]){\n\t\t\tadd(i,a[i]);\n\t\t\tans+=get(n,a[i])-get(i,a[i]);\n\t\t\tans+=Sz(i-1)-get(i-1,a[i]);\n\t\t}\n\t}\n\tfor(int i=m;i;i--){//\u5947\u6280\u6deb\u5de7:\u5c06\u5220\u9664\u6539\u6210\u6dfb\u52a0,\u7136\u540e\u5012\u7740\u8f93\u51fa\u7b54\u6848\n\t\tadd(o[b[i]],b[i]);\n\t\tans+=get(n,b[i])-get(o[b[i]],b[i]);\n\t\tans+=Sz(o[b[i]]-1)-get(o[b[i]]-1,b[i]);\n\t\tAns[i]=ans; \n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%lld\\n\",Ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1583501493,
        "uid": 236099,
        "name": "H_D_NULL",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u3002\u849f\u84bb\u81ea\u5df1\u7684\u7406\u89e3\u65b9\u5f0f\uff08~~\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u7b97\u662f\u4e3b\u5e2d\u6811~~\uff09\uff0c\u6709\u9519\u8bef\u6216\u4e0d\u8db3\u4e4b\u5904\u8fd8\u8bf7dalao\u6307\u6570\u3002\n\n~~\u65e2\u7136\u88ab\u5206\u5728\u4e86\u4e3b\u5e2d\u6811\u4e00\u680f\uff0c\u5c31\u5f80\u8fd9\u4e2a\u65b9\u9762\u60f3~~\n\n\u6211\u4eec\u89c2\u5bdf\u539f\u5148\u4e3b\u5e2d\u6811\u7684\u5de5\u4f5c\u65b9\u5f0f\uff08\u6837\u4f8b1,5,3,4,2\uff09\uff1a\n\n```\nTree0 = NULL\nTree1 = 1\nTree2 = 1, 5\nTree3 = 1, 3, 5\nTree4 = 1, 3, 4, 5\nTree5 = 1, 2, 3, 4, 5\n```\n\n\u800c\u5b9e\u9645\u4e0a\u52a0\u5165\u7684\u65f6\u5019\u6211\u4eec\u4ec5\u4ec5\u53ea\u662f\u591a\u7ef4\u62a4\u4e86\u589e\u91cf\u3002\u8fd9\u6837\u5220\u9664\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff08\u6bd4\u5982$5$\uff09\uff0c\u6211\u4eec\u53ea\u8981\u77e5\u9053\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6709\u51e0\u4e2a\uff08_Tree2_-_Tree0_\uff09\u548c\u5b83\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6709\u51e0\u4e2a\uff08_Tree5_-_Tree2_\uff09\uff0c\u5c31\u77e5\u9053\u4e86\u5220\u6389\u5b83\u6240\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u5b9e\u9645\u4e0a\u9ebb\u70e6\u7684\u662f\u5904\u7406\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u3002\u6211\u4eec\u4e3a\u4e86\u5728\u4e3b\u5e2d\u6811\u4e2d\u5220\u6389$5$\uff0c\u5c31\u9700\u8981\u5728_Tree2_~_Tree5_\u4e2d\u90fd\u628a$5$\u5220\u6389\u3002\u800c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5f80\u5f80\u65e0\u6cd5\u5fcd\u53d7\u3002\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u7c7b\u6bd4\u4e00\u4e0b\uff1a\n\n\u4e3b\u5e2d\u6811\u5c31\u597d\u6bd4\u662f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u4e24\u9897\u6811\u76f8\u51cf\u5c31\u80fd\u6c42\u51fa\u4e00\u6bb5\u533a\u95f4\u7684\u503c\u3002\u800c\u8fd9\u6837\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u5982\u679c\u6211\u4eec\u4fee\u6539\u4e86\u67d0\u4e2a\u503c\uff0c\u5c31\u8981\u8fde\u7740\u540e\u9762\u7684\u4e00\u8d77\u4fee\u6539\u3002\u800c\u6211\u4eec\u77e5\u9053\uff0c\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u8fc7\u7a0b\u662f$O(log_n)$\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e0b\u9762\u8fd9\u6837\u7684\u8fc7\u7a0b\uff1a\n\n**Step0:**\n\n```\nTree0 = Tree1 = Tree2 = Tree3 = Tree4 = Tree5 = NULL\n```\n\n**Step1(Add 1):**\n\n```\nTree0 = NULL;\nTree1 = 1;\nTree2 = 1;\nTree3 = NULL;\nTree4 = 1;\nTree5 = NULL;\n```\n\n**Step2(Add 5):**\n\n```\nTree0 = NULL;\nTree1 = 1;\nTree2 = 1, 5;\nTree3 = NULL;\nTree4 = 1, 5;\nTree5 = NULL;\n```\n\n**Step3(Add 3):**\n\n```\nTree0 = NULL;\nTree1 = 1;\nTree2 = 1, 5;\nTree3 = 3;\nTree4 = 1, 3, 5;\nTree5 = NULL;\n```\n\n**Step4(Add 4):**\n\n```\nTree0 = NULL;\nTree1 = 1\uff1b\nTree2 = 1, 5;\nTree3 = 3;\nTree4 = 1, 3, 4, 5;\nTree5 = NULL;\n```\n\n**Step5(Add 2):**\n\n```\nTree0 = NULL;\nTree1 = 1;\nTree2 = 1, 5;\nTree3 = 3;\nTree4 = 1, 3, 4, 5;\nTree5 = 2;\n```\n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u7b2c\u4e00\u6b21\u8be2\u95ee$5$\u7684\u8d21\u732e\uff1a\n\n\u6211\u4eec\u8bbf\u95ee_Tree1_\u4e2d\u6bd4$5$\u5927\u7684\u548c_Tree5_\u3001_Tree4_\u4e2d\u6bd4$5$\u5c0f\u7684\u51cf\u53bb_Tree2_\u4e2d\u6bd4$5$\u5c0f\u7684\u3002\n\n\u7136\u540e\u5220\u9664\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5220\u9664_Tree2_\u3001_Tree4_\u4e2d\u7684$5$\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u662f\u548c\u6811\u72b6\u6570\u7ec4\u4e00\u6a21\u4e00\u6837\uff01\u6240\u4ee5\u52a8\u6001\u5f00\u70b9\u7684\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u4e86\uff08~~\u89c9\u5f97\u4e0d\u5e94\u8be5\u7b97\u662f\u4e3b\u5e2d\u6811~~\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\log^2n)$\u3002\n\n## \u53c2\u8003\u7a0b\u5e8f\n\n```c++\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\n\nconst int Maxn = 100010;\nint Sum[ Maxn * 300 ], LeftChild[ Maxn * 300 ], RightChild[ Maxn * 300 ];\nint Root[ Maxn ], Used;\nint n, m;\nint A[ Maxn ], R[ Maxn ];\nLL Ans;\n\nLL TQuery( int Index, int L, int R, int l, int r ) {\n    if( l <= L && R <= r ) return ( LL )Sum[ Index ];\n    if( Index == 0 ) return 0LL;//\u4f18\u5316\u4e00\u4e0b\n    if( Sum[ Index ] == 0 ) return 0LL;//\u518d\u4f18\u5316\u4e00\u4e0b\n    int Mid = L + R >> 1;\n    LL Ans = 0;\n    if( l <= Mid ) Ans += TQuery( LeftChild[ Index ], L, Mid, l, r );\n    if( r > Mid ) Ans += TQuery( RightChild[ Index ], Mid + 1, R, l, r );\n    return Ans;\n}\n\nLL Query( int Index, int Key ) {\n    LL Ans = 0;\n    for( ; Index; Index -= Index & -Index )\n        Ans += TQuery( Root[ Index ], 1, n, 1, Key );\n    return Ans;\n}\n\nint TAdd( int Index, int L, int R, int Key ) {\n    int Root = Index;\n    if( !Root ) Root = ++Used;\n    ++Sum[ Root ];\n    if( L == R ) return Root;\n    int Mid = L + R >> 1;\n    if( Key <= Mid ) LeftChild[ Root ] = TAdd( LeftChild[ Root ], L, Mid, Key );\n    if( Key > Mid ) RightChild[ Root ] = TAdd( RightChild[ Root ], Mid + 1, R, Key );\n    return Root;\n}\n\nvoid Add( int Index, int Key ) {\n    for( ; Index <= n; Index += Index & -Index ) \n        Root[ Index ] = TAdd( Root[ Index ], 1, n, Key );\n    return;\n}\n\nint TDelete( int Index, int L, int R, int Key ) {\n    if( Index == 0 ) return Index;\n    --Sum[ Index ];\n    if( Sum[ Index ] == 0 ) return 0; //\u5982\u679c\u5df2\u7ecf\u4e3a0\uff0c\u4e0d\u5982\u5e72\u8106\u5220\u6389\n    if( L == R ) return Index;\n    int Mid = L + R >> 1;\n    if( Key <= Mid ) TDelete( LeftChild[ Index ], L, Mid, Key );\n    if( Key > Mid ) TDelete( RightChild[ Index ], Mid + 1, R, Key );\n    return Index;\n}\n\nvoid Delete( int Index, int Key ) {\n    for( ; Index <= n; Index += Index & -Index ) \n        Root[ Index ] = TDelete( Root[ Index ], 1, n, Key );\n    return;\n}\n\nint main() {\n    scanf( \"%d%d\", &n, &m );\n    for( int i = 1; i <= n; ++i ) {\n        scanf( \"%d\", &A[ i ] );\n        R[ A[ i ] ] = i;\n        Ans += Query( i - 1, A[ i ] );\n        Add( i, A[ i ] );\n    }\n    Ans = ( LL ) n * ( n - 1 ) / 2 - Ans;\n    printf( \"%lld\\n\", Ans );\n    for( int i = 1; i < m; ++i ) {\n        int x; scanf( \"%d\", &x );\n        Ans -= Query( R[ x ], n ) + Query( n, x ) - 2 * Query( R[ x ], x ); \n        Delete( R[ x ], x );\n        printf( \"%lld\\n\", Ans );\n    }\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1550415034,
        "uid": 27685,
        "name": "chy2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u597d\u7684\u9898\uff0c\u600e\u4e48\u80fd\u6ca1\u6709kdtree\u9898\u89e3\u5462\u3002\n\ndalao\u4eec\u90fd\u662f\u7528\u7684\u6811\u5957\u6811/CDQ\uff0c\u672c\u849f\u84bb\u8868\u793a\u5e76\u4e0d\u4f1a\uff0c\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u7b2c$i$\u4f4d\u7684\u6570$a[i]$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u8868\u793a\u6210\u4e00\u4e2a\u5750\u6807$(i,a[i])$\uff0c\u90a3\u4e48\u5220\u6389\u4e00\u4e2a\u70b9\u540e\uff0c\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u5c31\u662f\u8fd9\u4e2a\u70b9\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0b\u65b9\u7684\u70b9\u7684\u6570\u91cf\uff0c\u8fd9\u4e2a\u5f88\u660e\u663e\u53ef\u4ee5\u7528kdtree\uff0c\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1akdtree\u7684\u8bdd\uff0c\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$O(n\\sqrt{n})$\u3002\u7136\u800c\u8fd9\u6837T\u6389\u4e86\u3002\n\n\u4e8e\u662f\u6211\u52a0\u4e0a\u4e86\u5feb\u8bfb\u5feb\u8f93\uff0c\u52a0\u4e0a\u4e00\u5806inline,register\uff0c\u7136\u540e\u628a\u8be2\u95ee\u7684\u9012\u5f52\u53d8\u6210\u5e7f\u641c\uff0c\u7136\u540e\u7ec8\u4e8e\u5361\u8fc7\u4e86\u3002\n\n\u8fd8\u6709\u8bb0\u5f97\u5220\u6389\u7684\u662f\u5143\u7d20\u7684\u503c\u800c\u4e0d\u662f\u5143\u7d20\u7684\u4e0b\u6807\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<cctype>\n#define min(x,y) (x<y?x:y)\n#define max(x,y) (x>y?x:y)\n#define qmin(x,y) (x=min(x,y))\n#define qmax(x,y) (x=max(x,y))\n#define lch t[root].ch[0]\n#define rch t[root].ch[1]\nusing namespace std;\n\ntypedef long long ll;\nconst int Maxn=110000;\n\nint D,a[Maxn],b[Maxn],c[Maxn],n,m,XN,XM,YN,YM,x,s[Maxn];\n\nstruct point {\n\tint d[2];\n\tbool operator < (point a) const {\n\t\treturn d[D]<a.d[D];\n\t}\n\tpoint(int x=0,int y=0) {\n\t\td[0]=x;\n\t\td[1]=y;\n\t}\n}p[Maxn];\n\nstruct node {\n\tint d[2],s[2][2],ch[2],siz,bj;\n\tnode(){}\n\tnode(point x) {\n\t\td[0]=s[0][0]=s[0][1]=x.d[0];\n\t\td[1]=s[1][0]=s[1][1]=x.d[1];\n\t\tsiz=bj=1;\n\t}\n}t[Maxn];\n\nint bt(int l,int r,int now) {\n\tif(l>r) return 0;\n\tD=now;\n\tint root=l+r>>1;\n\tnth_element(p+l,p+root,p+r+1);\n\tt[root]=node(p[root]);\n\tlch=bt(l,root-1,now^1);\n\trch=bt(root+1,r,now^1);\n\tt[root].siz+=t[lch].siz+t[rch].siz;\n\tif(lch) {\n\t\tqmin(t[root].s[0][0],t[lch].s[0][0]);\n\t\tqmin(t[root].s[1][0],t[lch].s[1][0]);\n\t\tqmax(t[root].s[1][1],t[lch].s[1][1]);\n\t\tqmax(t[root].s[0][1],t[lch].s[0][1]);\n\t}\n\tif(rch) {\n\t\tqmin(t[root].s[0][0],t[rch].s[0][0]);\n\t\tqmin(t[root].s[1][0],t[rch].s[1][0]);\n\t\tqmax(t[root].s[1][1],t[rch].s[1][1]);\n\t\tqmax(t[root].s[0][1],t[rch].s[0][1]);\n\t}\n\tb[p[root].d[0]]=root;\n\treturn root;\n}\n\nll nxd(int l,int r) {\n\tif(r-l<10) {\n\t\tll ans=0;\n\t\tfor(int i=l;i<r;i++)\n\t\t\tfor(int j=r;j>i;j--)\n\t\t\t\tif(a[j]<a[j-1]) swap(a[j],a[j-1]),ans++;\n\t\treturn ans;\n\t}\n\tint mid=l+r>>1;\n\tll ans=nxd(l,mid)+nxd(mid+1,r);\n\tint lc=l,rc=mid+1,temp=l;\n\twhile(lc<=mid&&rc<=r)\n\t\tif(a[lc]<a[rc]) b[temp++]=a[lc++];\n\t\telse b[temp++]=a[rc++],ans+=mid-lc+1;\n\twhile(lc<=mid) b[temp++]=a[lc++];\n\twhile(rc<=r) b[temp++]=a[rc++];\n\tfor(int i=l;i<=r;i++) a[i]=b[i];\n\treturn ans;\n}\n\nvoid del(int root,int x) {\n\tt[root].siz--;\n\tif(root==x) {\n\t\tt[root].bj=0;\n\t\treturn;\n\t}\n\tif(root>x) del(lch,x);\n\telse del(rch,x);\n}\n\ninline bool check(int root) {\n\treturn t[root].s[0][0]>=XN&&t[root].s[0][1]<=XM&&t[root].s[1][0]>=YN&&t[root].s[1][1]<=YM;\n}\n\ninline bool check2(int root) {\n\treturn t[root].s[0][0]>XM||t[root].s[0][1]<XN||t[root].s[1][0]>YM||t[root].s[1][1]<YN;\n}\n\nint query(int root) {\n\tregister int ans=0,top=0;\n\ts[++top]=root;\n\twhile(top) {\n\t\tregister int root=s[top--];\n\t\tif(check(root)) {\n\t\t\tans+=t[root].siz;\n\t\t\tcontinue;\n\t\t}\n\t\tif(t[root].d[0]<=XM&&t[root].d[0]>=XN&&t[root].d[1]<=YM&&t[root].d[1]>=YN) ans+=t[root].bj;\n\t\tif(lch&&!check2(lch)) s[++top]=lch;\n\t\tif(rch&&!check2(rch)) s[++top]=rch;\n\t}\n\treturn ans;\n}\n\nint read() {\n\tint ans=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) ans=ans*10+ch-'0',ch=getchar();\n\treturn ans;\n}\n\nvoid print(ll x) {\n\tif(x<10) putchar('0'+x);\n\telse print(x/10),putchar('0'+x%10);\n}\n\nint main() {\n//\tfreopen(\"test.in\",\"r\",stdin);\n//\tfreopen(\"out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) {\n\t\ta[i]=read();c[a[i]]=i;\n\t\tp[i]=point(i,a[i]);\n\t}\n\tll ans=nxd(1,n);\n\tint rot=bt(1,n,0);\n\tfor(int i=1;i<=n;i++) a[i]=t[b[i]].d[1];\n\twhile(m--) {\n\t\tprint(ans);putchar('\\n');\n\t\tx=read();x=c[x];\n\t\tdel(rot,b[x]);\n\t\tXN=1;XM=x;YN=a[x];YM=n;\n\t\tans-=query(rot);\n\t\tXN=x;XM=n;YN=1;YM=a[x];\n\t\tans-=query(rot);\n\t}\n\treturn 0;\n}\n\n\n```",
        "postTime": 1545395524,
        "uid": 53250,
        "name": "\u5355\u66e6\u589e",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "### \u3010\u9898\u76ee\u3011\n![\u9898\u76ee](https://cdn.luogu.com.cn/upload/pic/30602.png)\n\n### \u3010\u89e3\u9898\u601d\u8def\u3011\n- \u7531\u4e8e\u9898\u76ee\u8981\u6c42\u7684\u662f\u5220\u9664\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5012\u5e8f\uff0c\u5148\u5220\u9664\u7684\u5c31\u76f8\u5f53\u4e8e\u540e\u52a0\u5165\uff0c\u540e\u5220\u9664\u7684\u76f8\u5f53\u4e8e\u5148\u52a0\u5165\u3002\u4e0d\u7528\u5220\u9664\u7684\u5143\u7d20\u5c31\u662f\u6700\u5148\u52a0\u5165\u7684\u3002\n- \u5148\u6309\u7167\u52a0\u5165\u987a\u5e8f\u6392\u5e8f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5728\u63d2\u5165\u65f6\u5c31\u5b8c\u6210\u3002\n- \u7136\u540e\u53d1\u73b0\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\u5bf9\u95ee\u9898\uff0c\u8fdb\u884cCDQ\u5206\u6cbb\u3002\n- \u6309\u7167\u5143\u7d20\u7684\u4f4d\u7f6e\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002\n- \u7531\u4e8e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u53ef\u80fd\u548c\u4e4b\u524d\u6216\u4e4b\u540e\u7684\u5143\u7d20\u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u56e0\u6b64\u8981\u4ece\u524d\u5f80\u540e\u627e\u6bd4\u5f53\u524d\u5143\u7d20\u5927\u7684\u6570\u91cf\uff0c\u548c\u4ece\u540e\u5f80\u524d\u627e\u6bd4\u5f53\u524d\u5143\u7d20\u5c0f\u7684\u6570\u91cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u3002\n- \u6700\u540e\u6e05\u7a7a\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n- \u7531\u4e8e\u6211\u4eec\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u4e00\u4e9b\u9b54\u6539\uff0c\u8981\u6062\u590d\u6210\u9898\u76ee\u8981\u6c42\u7684\u683c\u5f0f\u8f93\u51fa\uff0c\u53ea\u9700\u8981\u5728\u8f93\u51fa\u524d\u6309\u7167\u539f\u6765\u987a\u5e8f\u505a\u4e00\u4e2a\u90e8\u5206\u548c\u5c31\u884c\u4e86\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long LL;\n#define int LL\n\nstruct QUERY{\n\tint pos,id,num,ans;\n}q[400005],t[400005];\nbool app[400005];\nint n,m,sum;\nint del[400005],p[400005];\n\nint tree[400005];\n#define lowbit(x) ((x)&(-(x)))\nvoid add(int x,int y)\n{\n\tfor (;x<=n;x+=lowbit(x)) tree[x]+=y;\n}\nint query(int x)\n{\n\tint ans=0;\n\tfor (;x;x-=lowbit(x)) ans+=tree[x];\n\treturn ans;\n}\nvoid CDQ(int l,int r)\n{\n\tif (l>=r) return;\n\tint mid=(l+r)>>1;\n\tCDQ(l,mid);CDQ(mid+1,r);\n\tint ALL=0;\n\tfor (int i=l,j=l,k=mid+1;i<=r;i++)\n\t{\n\t\tif ((j<=mid&&q[j].pos<q[k].pos)||k>r)\n\t\t\tt[i]=q[j++];\n\t\telse\n\t\t\tt[i]=q[k++];\n\t}\n\tfor (int i=l;i<=r;i++)\n\t\tif ((q[i]=t[i]).id<=mid)\n\t\t{\n\t\t\tadd(q[i].num,1);\n\t\t\tALL++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq[i].ans+=ALL-query(q[i].num);\n\t\t}\n\tfor (int i=l;i<=r;i++)\n\t\tif (q[i].id<=mid)\n\t\t\tadd(q[i].num,-1);\n\tfor (int i=r;i>=l;i--)\n\t\tif (q[i].id<=mid)\n\t\t{\n\t\t\tadd(q[i].num,1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq[i].ans+=query(q[i].num);\n\t\t}\n\tfor (int i=l;i<=r;i++)\n\t\tif (q[i].id<=mid)\n\t\t\tadd(q[i].num,-1);\n}\nbool cmp(QUERY a,QUERY b)\n{\n\treturn a.id<b.id;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n    \tint t;\n        scanf(\"%lld\",&t);\n\t\tp[t]=i;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%lld\",&del[i]);\n\t\tapp[del[i]]=1;\n\t}\n    for(int i=1;i<=n;i++)\n        if(!app[i])\n        {\n            q[++sum].num=i;\n\t\t\tq[sum].pos=p[q[sum].num];\n\t\t\tq[sum].id=sum;\n\t\t}\n    for(int i=m;sum<=n;i--)\n    {\n        q[++sum].num=del[i];\n\t\tq[sum].pos=p[q[sum].num];\n\t\tq[sum].id=sum;\n    }\n\tCDQ(1,n);\n\tsort(q+1,q+1+n,cmp);\n\tfor (int i=1;i<=n;i++)\n\t\tq[i].ans+=q[i-1].ans;\n\tfor (int i=n;i>n-m;i--)\n\t\tprintf(\"%lld\\n\",q[i].ans);\n\treturn 0;\n}\n```",
        "postTime": 1535265326,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u5206\u6cbb\u2014\u2014\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2aCDQ\u5206\u6cbb\u7248\u7684\u5427\n\n\u628a\u5220\u9664\u8f6c\u53d8\u4e3a\u9010\u4e2a\u6dfb\u52a0\uff0c\u4e8e\u662f\u5c31\u53d8\u6210\u4e86\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\uff08\u65f6\u95f4\uff0c\u4f4d\u7f6e\uff0c\u5927\u5c0f\uff09\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u5143\u7ec4(a,b,c)\uff0c\u6709\u4e24\u7ec4\u6ee1\u8db3\u201c\u9006\u5e8f\u5bf9\u201d\u7684\u6761\u4ef6\n\na2<a && b2<b && c2>c\n\na2<a && b2>b && c2<c\n\n\u4e8e\u662f\u5c31\u8981\u5f52\u5e76\u4e24\u6b21\uff0c\u5177\u4f53\u7ec6\u8282\u8bf7\u770b\u4ee3\u7801\n\n\u5206\u5757\u4e5f\u53ef\u4ee5\u505a\uff0c\u800c\u4e14\u66f4\u5feb\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 100005;\nint n, m, a[MAXN], b[MAXN];\nnamespace BIT {\n    int arr[MAXN];\n    inline int lowbit( int num ) { return num&(-num); }\n    void add( int idx ) {\n        while( idx <= n ) {\n            arr[idx]++;\n            idx += lowbit(idx);\n        }\n    }\n    int _query( int idx ) {\n        int ans = 0;\n        while( idx ) {\n            ans += arr[idx];\n            idx -= lowbit(idx);\n        }\n        return ans;\n    }\n    int query( int l, int r ) {\n        return _query(r) - _query(l-1);\n    }\n    void clear( int idx ) {\n        while( idx <= n ) {\n            if( arr[idx] ) arr[idx] = 0;\n            else break;\n            idx += lowbit(idx);\n        }\n    }\n}\nstruct Query {\n    int aid, idx, num;\n    bool operator<( const Query &rhs ) const {\n        return idx < rhs.idx;\n    }\n    bool operator>( const Query &rhs ) const {\n        return idx > rhs.idx;\n    }\n}query1[MAXN],query2[MAXN];\nvoid addq( int id, int aid, int idx, int num ) {\n    query1[id] = query2[id] = (Query){aid,idx,num};\n}\nll ans[MAXN]; int aidx = 0;\nQuery tmp[MAXN];\nvoid cdq( int L, int R ) {\n    if( R-L <= 1 ) return;\n    int M = (L+R)>>1; cdq(L,M); cdq(M,R);\n    int p = L, q = M, o = L;\n    while( p < M && q < R ) {\n        if( query1[p] < query1[q] ) {\n            BIT::add( query1[p].num );\n            tmp[o++] = query1[p++];\n        } else {\n            ans[query1[q].aid] += BIT::query( query1[q].num, n );\n            tmp[o++] = query1[q++];\n        }\n    }\n    while( p < M ) tmp[o++] = query1[p++];\n    while( q < R ) {\n        ans[query1[q].aid] += BIT::query( query1[q].num, n );\n        tmp[o++] = query1[q++];\n    }\n    for( int i = L; i < R; ++i ) {\n        BIT::clear( query1[i].num );\n        query1[i] = tmp[i];\n    }\n    p = L; q = M; o = L;\n    while( p < M && q < R ) {\n        if( query2[p] > query2[q] ) {\n            BIT::add( query2[p].num );\n            tmp[o++] = query2[p++];\n        } else {\n            ans[query2[q].aid] += BIT::query( 1, query2[q].num );\n            tmp[o++] = query2[q++];\n        }\n    }\n    while( p < M ) tmp[o++] = query2[p++];\n    while( q < R ) {\n        ans[query2[q].aid] += BIT::query( 1, query2[q].num );\n        tmp[o++] = query2[q++];\n    }\n    for( int i = L; i < R; ++i ) {\n        BIT::clear( query2[i].num );\n        query2[i] = tmp[i];\n    }\n}\nint main() {\n    scanf( \"%d%d\", &n, &m );\n    for( int i = 0; i < n; ++i ) {\n        scanf( \"%d\", a+i ); b[a[i]] = i;\n    }\n    for( int i = 0; i < m; ++i ) {\n        int num; scanf( \"%d\", &num );\n        addq( n-1-i, aidx++, b[num], num ); a[b[num]] = 0;\n    }\n    int qidx = 0;\n    for( int i = 0; i < n; ++i ) if( a[i] )\n        addq( qidx++, aidx++, i, a[i] );\n    cdq(0,n);\n    for( int i = n-2; i >= 0; --i ) ans[i] += ans[i+1];\n    for( int i = 0; i < m; ++i ) printf( \"%lld\\n\", ans[i] );\n    return 0;\n}\n\n```",
        "postTime": 1482729508,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u503c\u57df\u5206\u5757\uff0c\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5757\u5957\u6811\u72b6\u6570\u7ec4\uff0c\u66f4\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u6811\u5957\u6811\uff0c\u4e8e\u662f\u7528\u5e8f\u5217\u5206\u5757$+vector$\u6c34\u8fc7\u4e86\u8fd9\u9053\u9898\n\n\u8003\u8651\u5220\u53bb\u4e00\u4e2a\u70b9$x$\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u62ff\u4e0b\u9762\u7684\u6570\u5217\u6765\u8bf4\n\n$$1,2\u2026\u2026x\u2026\u2026n-1,n$$\n\n>\u5bf9\u4e8e\u533a\u95f4$[1,x-1]$\uff0c$a_i>a_x$\u4f1a\u4ea7\u751f\u9006\u5e8f\u5bf9\n\n>\u5bf9\u4e8e\u533a\u95f4$[x+1,n]$\uff0c$a_i<a_x$\u4f1a\u4ea7\u751f\u9006\u5e8f\u5bf9\n\n\u90a3\u4e48\u6bcf\u6b21\u5220\u70b9\u540e\u7edf\u8ba1\u4e00\u4e0b$x$\u4e24\u4fa7\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u5c31\u597d\u4e86\n\n\u6211\u4eec\u5bf9\u5e8f\u5217\u5206\u5757\uff0c\u540c\u4e00\u4e2a\u5757\u91cc\u7684\u7528$vector$\u6392\u597d\u5e8f\uff0c\u548c$x$\u5728\u4e0d\u540c\u5757\u7684\u4e8c\u5206\u67e5\u627e\u66f4\u65b0\u7b54\u6848\uff0c\u548c$x$\u5728\u540c\u4e00\u4e2a\u5757\u7684\u66b4\u529b\u679a\u4e3e\u66f4\u65b0\u7b54\u6848\uff0c\u6bcf\u6b21\u5220\u70b9\u7684\u65f6\u5019\u5728$vector$\u91cc\u5220\u9664\u70b9\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6\u5927\u7ea6\u662f$O(Mlog(N)\\sqrt{N})$\uff0c\u5438\u5438\u6c27\u5c31\u8fc7\u4e86\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#define N 100000\n#define rep(i,s,t) for (register int i=s;i<=t;i++)\n#define drep(i,s,t) for (register int i=t;i>=s;i--)\n#define il inline\nusing namespace std;\nint n,m,a[N+5],data[N+5],bs,blo[N+5],L[N+5],R[N+5],na[N+5],d[N+5],id[N+5],cnt;\nlong long ans;\nvector <int> p[N+5];\nvoid merge_sort(int l,int r)\n{\n    if (r-l>0)\n    {\n        int it=l,mid=l+r>>1,p=l,q=mid+1;\n        merge_sort(l,mid);\n        merge_sort(mid+1,r);\n        while (p<=mid||q<=r)\n        {\n            if (q>r||p<=mid&&data[p]<=data[q])\n                na[it++]=data[p++];\n            else\n            {\n                na[it++]=data[q++];\n                ans+=(long long)mid-p+1;\n            }\n        }\n        rep(i,l,r)\n            data[i]=na[i];\n    }\n}\nil void del(int x)\n{\n    d[x]=1;\n    vector <int>::iterator it=lower_bound(p[blo[x]].begin(),p[blo[x]].end(),a[x]);\n    p[blo[x]].erase(it);\n}\nil void calc(int x)\n{\n    rep(i,1,blo[x]-1)\n        ans-=(long long)(p[i].end()-upper_bound(p[i].begin(),p[i].end(),a[x]));\n    rep(i,L[blo[x]],x-1)\n        if (a[i]>a[x]&&!d[i])\n            ans--;\n    rep(i,x+1,R[blo[x]])\n        if (a[i]<a[x]&&!d[i])\n            ans--;\n    rep(i,blo[x]+1,blo[n])\n        ans-=(long long)(lower_bound(p[i].begin(),p[i].end(),a[x])-p[i].begin());\n}\nil int read()\n{\n\tint X(0),w(0);char ch(0);\n\twhile (!isdigit(ch))w|=ch=='-',ch=getchar();\n\twhile (isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n\treturn w?-X:X;\n}\nint main()\n{\n    n=read();\n    m=read();\n    bs=sqrt(n);\n    rep(i,1,n)\n    {\n        a[i]=read();\n        data[i]=a[i];\n        id[a[i]]=++cnt;\n        blo[i]=(i-1)/bs+1;\n        if (!L[blo[i]])\n            L[blo[i]]=i;\n        R[blo[i]]=i;\n        p[blo[i]].push_back(a[i]);\n    }\n    merge_sort(1,n);\n    rep(i,1,blo[n])\n        sort(p[i].begin(),p[i].end());\n    int x;\n    rep(i,1,m)\n    {\n        printf(\"%lld\\n\",ans);\n        x=read();\n        del(id[x]);\n        calc(id[x]);\n    }\n    return 0;\n}\n```",
        "postTime": 1563580491,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u7528\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811+\u5927\u529b\u5361\u5e38\uff0c\u5f3a\u884c\u5361\u8fc7\u53bb\u4e86\n\n\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u5927\u529b\u5361\u5e38\u7684\u4e00\u4e0b\u5348\n\n\uff08\u867d\u7136\u590d\u6742\u5ea6\u6bd4\u5206\u5757\u5c0f\uff0c\u4f46\u5e38\u6570\u592a\u5927\u4e86\uff0c\u8fd8\u662f\u88ab\u5206\u5757\u66b4\u8e29\uff09\n\n\u6211\u7528\u7684\u662fFHQ Treap\n\n\u6211\u7684\u505a\u6cd5\uff1a\u5148\u6c42\u51fa\u521d\u59cb\u9006\u5e8f\u5bf9\u6570\uff0c\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u7edf\u8ba1\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570\n\n\u9996\u5148\uff0c\u5bf9\u6574\u4e2a\u5e8f\u5217\u5efa\u6811\uff0c\u4e5f\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u8fd9\u6bb5\u533a\u95f4\u7684\u5e8f\u5217\u6709\u5e8f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc7\u5f52\u5e76\u6392\u5e8f\u5b9e\u73b0\uff0c\u540c\u65f6\u4e5f\u80fd\u628a\u521d\u59cb\u9006\u5e8f\u5bf9\u6570\u6c42\u51fa\u6765\n\n\u5177\u4f53\u505a\u7684\u65f6\u5019\uff0c\u5148\u9012\u5f52\u5904\u7406\u5de6\u53f3\uff0c\u5f85\u533a\u95f4\u6709\u5e8f\u540e\uff0c\u5bf9\u8fd9\u6bb5\u533a\u95f4\u76f4\u63a5$O(n)$\u5efa\u6811\uff0c\u8fd9\u4e00\u6b65\u662f$O(n \\log n)$\u7684\n\n\u6bcf\u6b21\u79fb\u9664\u4e00\u4e2a\u70b9\u65f6\uff0c\u51cf\u5c11\u7684\u9006\u5e8f\u5bf9\u6570\u5c31\u662f\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u518d\u52a0\u4e0a\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\n\n\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u505a\u4e86\uff08~~\u76f4\u63a5\u505a\u662f\u4e0d\u884c\u7684~~\uff09\n\n\u81ea\u7136\u7684\u60f3\u6cd5\u662f\uff0c\u6bcf\u6b21\u5728\u6811\u5957\u6811\u4e0a\u8be2\u95ee\u8fd9\u4e2a\u6570\u5728\u67d0\u6bb5\u533a\u95f4\u7684\u6392\u540d\uff0c\u7edf\u8ba1\uff0c\u968f\u540e\u5220\u9664\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n \\log^2 n)$\uff0c\u7406\u8bba\u4e0a\u80fd\u8fc7\n\n\u4f46\u662f\uff0c\u5982\u679c\u76f4\u63a5\u4ea4\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/57745.png)\n\n\uff08\u5df2\u5438\u6c27\uff09\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u628a\u4e00\u4e9b\u64cd\u4f5c\u5c3d\u91cf\u6539\u6210\u975e\u9012\u5f52\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u4e0d\u5c11\uff08~~\u4e8e\u662f\u5c3180\u5206\u4e86~~\uff09\n\n\u5bf9\u4e8e\u5e73\u8861\u6811\u7684\u5220\u9664\u64cd\u4f5c\uff1a\n\n\u6700\u76f4\u63a5\u7684\u505a\u6cd5\u5c31\u662f\u8fd9\u6837\uff0c\u5c06\u5e73\u8861\u6811\u5206\u88c2\uff0c\u4e22\u5f03\u8fd9\u4e2a\u6570\uff0c\u518d\u5408\u5e76\n\n```cpp\nnode *del(node *tree,int num){\n    node *l,*m,*r;\n    split_num(tree,num,l,r);\n    split(r,1,m,r);\n    return merge(l,r);\n}\n```\n\n\u800c\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u7528\u6808+\u5faa\u73af\u5b9e\u73b0\uff0c\u9996\u5148\u5230\u8fbe\u5f85\u5220\u9664\u8282\u70b9\uff0c\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\u5408\u5e76\u540e\u653e\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u968f\u540e\u5c06\u8fd9\u6761\u94fepushup\u4e00\u4e0b\n\n```cpp\nnamespace t2{//\u547d\u540d\u7a7a\u95f4\u662f\u56e0\u4e3a\u5f88\u591a\u64cd\u4f5c\u90fd\u7528\u5230\u4e86\u6808\n    node *st[N];int top;\n    bool side[N];\n    inline node *del(register node *tree,const int &num){\n        top=0;\n        while(tree->num!=num){\n            st[top]=tree;\n            if(tree->num<num){\n                side[top++]=1;\n                tree=tree->rcd;\n            }else{\n                side[top++]=0;\n                tree=tree->lcd;\n            }\n        }\n        register node *cur=merge(tree->lcd,tree->rcd);\n        while(top--){\n            if(side[top]==0){\n                st[top]->lcd=cur;\n                st[top]->pushup();\n                cur=st[top];\n            }else{\n                st[top]->rcd=cur;\n                st[top]->pushup();\n                cur=st[top];\n            }\n        }\n        return cur;\n    }\n}\n```\n\n\u5bf9\u4e8e\u5408\u5e76\u64cd\u4f5c\uff1a\n\n\u5f53\u7136\u662f\u9012\u5f52\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u4f1a\u6bd4\u8f83\u6162\n\n```cpp\nnode *merge(node *l,node *r){\n    if(!l)return r;\n    if(!r)return l;\n    if(l->rand>r->rand){\n        l->rcd=merge(l->rcd,r);\n        l->pushup();\n        return l;\n    }else{\n        r->lcd=merge(l,r->lcd);\n        r->pushup();\n        return r;\n    }\n}\n```\n\u800c\u7528\u6808+\u5faa\u73af\u4f1a\u5f88\u590d\u6742\n\n\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\uff1a\u5148\u5411\u4e0b\uff0c\u6bcf\u6b65\u5c06\u4f5c\u4e3a\u6839\u7684\u8282\u70b9\u5165\u6808\uff0c\u8ba9\u5269\u4e0b\u7684\u90e8\u5206\u7ee7\u7eed\u4e0e\u53e6\u4e00\u534a\u5408\u5e76\n\n\u968f\u540e\u5411\u4e0a\uff0c\u5c06\u5b50\u6811\u8fde\u5230\u5bf9\u5e94\u8282\u70b9\u4e0a\uff0c\u5e76pushup\n\n```cpp\nnamespace t1{\n    node *st[N];int top;\n    bool side[N];\n    inline node *merge(register node *l,register node *r){\n        if(!l)return r;\n        if(!r)return l;\n        top=0;\n        while(l&&r){\n            if(l->rand>r->rand){\n                st[top]=l;\n                side[top++]=1;\n                l=l->rcd;\n            }else{\n                st[top]=r;\n                side[top++]=0;\n                r=r->lcd;\n            }\n        }\n        node *ans;\n        if(l)ans=l;\n        else ans=r;\n        while(top--){\n            if(side[top]==0){\n                st[top]->lcd=ans;\n                ans=st[top];\n                ans->pushup();\n            }else{\n                st[top]->rcd=ans;\n                ans=st[top];\n                ans->pushup();\n            }\n        }\n        return ans;\n    }\n}\n```\n\n\u67e5\u8be2\u6392\u540d\u5c31\u5f88\u7b80\u5355\n\n```cpp\nint qrank(node *tree,int num){\n    int ans=0;\n    while(tree){\n        if(tree->num<num){\n            ans+=gsz(tree->lcd)+1;\n            tree=tree->rcd;\n        }else{\n            tree=tree->lcd;\n        }\n    }\n    return ans;\n}\n```\n\n\u8fd8\u662f\u4e0d\u80fd\u8fc7\uff0880\u5206\uff09\n\n\u7ee7\u7eed\u4f18\u5316\n\n\u8fd9\u79cd\u505a\u6cd5\u4e2d\uff0c\u4e24\u6b21\u8be2\u95ee\u548c\u4e4b\u540e\u7684\u5220\u9664\u64cd\u4f5c\u590d\u6742\u5ea6\u90fd\u662f$O(n \\log^2 n)$\u7684\uff0c\u4f1a\u975e\u5e38\u6162\n\n\u6240\u4ee5\u5728\u8fd9\u91cc\u4f18\u5316\u4e00\u4e0b\n\n\u9996\u5148\uff0c\u8bbe\u6cd5\u5c06\u8be2\u95ee\u6539\u4e3a\u4e00\u6b21$O(n \\log^2 n)$\u64cd\u4f5c\n\n\u76f4\u63a5\u8be2\u95ee\u80af\u5b9a\u4e0d\u53ef\u4ee5\uff0c\u6240\u4ee5\u8003\u8651\u522b\u7684\u529e\u6cd5\n\n\u5982\u679c\u5206\u522b\u6c42\u51fa\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u548c\u5728\u8fd9\u4e2a\u6570\u524d\u9762\u7684\u6570\u7684\u4e2a\u6570\uff1f\n\n\u8fd9\u4e2a\u53ef\u4ee5\u53e6\u5916\u5f00\u4e24\u68f5\u5e73\u8861\u6811\u6765\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u8fd9\u6837\u4f1a\u53d1\u73b0\uff0c\u6bd4\u5b83\u5927\u4e14\u5728\u5b83\u524d\u9762\u7684\u6570\u88ab\u7edf\u8ba1\u4e86\u4e00\u6b21\uff0c\u6bd4\u5b83\u5c0f\u4e14\u5728\u5b83\u540e\u9762\u7684\u6570\u88ab\u7edf\u8ba1\u4e86\u4e00\u6b21\n\n\u4f46\u662f\u6bd4\u5b83\u5c0f\u4e14\u5728\u5b83\u524d\u9762\u7684\u6570\u88ab\u7edf\u8ba1\u4e86\u4e24\u6b21\n\n\u5bf9\u4e8e\u8fd9\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u7528\u6811\u5957\u6811\u6765\u505a\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n \\log^2 n)$\n\n\u7136\u800c\u8fd8\u662f\u4e0d\u80fd\u8fc7:(\n\n\u7ee7\u7eed\u4f18\u5316\n\n\u53d1\u73b0\u67e5\u8be2\u65f6\uff0c\u53ea\u9700\u8981\u67e5\u8be2\u4e00\u6bb5\u524d\u7f00\n\n\u6240\u4ee5\u4e5f\u6539\u6210\u5faa\u73af\uff0c\u540c\u65f6\u53ef\u4ee5\u634e\u5e26\u628a\u70b9\u5220\u9664\n\n```cpp\ninline int qrank(int r,int num){\n    register int ll=1,rr=n,id=1,mid;\n    int ans=0;\n    while(ll!=rr){\n        seg[id]=del(seg[id],num);\n        mid=((ll+rr)>>1);\n        if(r<=mid){\n            rr=mid;\n            id=(id<<1);\n        }else{\n            ans+=qrank(seg[id<<1],num);\n            ll=mid+1;\n            id=((id<<1)|1);\n        }\n    }\n    seg[id]=del(seg[id],num);\n    return ans;\n}\n```\n\n\u5982\u679c\u5de6\u534a\u8fb9\u5b8c\u5168\u5728\u8303\u56f4\u5185\uff0c\u5c31\u628a\u5de6\u534a\u8fb9\u7684\u7b54\u6848\u52a0\u4e0a\uff0c\u7ee7\u7eed\u5904\u7406\u53f3\u534a\u8fb9\uff0c\u5426\u5219\u5c31\u5904\u7406\u5de6\u534a\u8fb9\n\n\u5f88\u53ef\u60dc\uff0c\u8fd8\u662f\u4e0d\u80fd\u8fc7\n\n\u4f3c\u4e4e\u6ca1\u529e\u6cd5\u4e86\uff1f\n\n\u968f\u4fbf\u8c03\u6574\u4e86\u4e00\u4e0brand\u7684\u53c2\u6570\uff0c\u53d1\u73b0\u901f\u5ea6\u53d8\u5feb\u4e86\u4e0d\u5c11\uff0880->90\uff09\n\n\u53c8\u770b\u5230\u4e00\u7ebf\u5e0c\u671b\n\n\u53d1\u73b0\u5efa\u6811\u8fc7\u7a0b\u4e5f\u662f\u9012\u5f52\u7684\uff0c\u4e5f\u8bd5\u7740\u6539\u6210\u5faa\u73af\n\n\u76f4\u63a5\u6539\u4f1a\u5f88\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u6362\u4e86\u4e00\u79cd\u65b9\u5f0f\uff1a\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u9700\u8981\u5efa\u6811\u7684\u533a\u95f4\uff0c\u5bf9\u6bcf\u4e2a\u6570\u5f00\u4e00\u4e2a\u8282\u70b9\n\n\u968f\u540e\uff0c\u6bcf\u6b21\u5c06\u76f8\u90bb\u4e24\u4e2a\u70b9\u914d\u5bf9\uff0c\u5408\u5e76\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5927\u6982\u662f$O(n)$\u7684\uff0c\u4f46\u6211\u4e0d\u4f1a\u8bc1\n\n```cpp\nnamespace t3{\n\tnode *s1[N],*s2[N];\n\tnode *build(int *list,int l,int r){\n\t\tnode **pr=s1,**nx=s2,**tmp;\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tpr[i-l]=mem::get(list[i]);\n\t\t}\n\t\tint t=r-l+1;\n\t\twhile(t>1){\n\t\t\tif(t&1){\n\t\t\t\tfor(int i=0;i<(t>>1);i++){\n\t\t\t\t\tnx[i]=merge(pr[i<<1],pr[(i<<1)|1]);\n\t\t\t\t}\n\t\t\t\tnx[t>>1]=pr[t-1];\n\t\t\t\tt=(t>>1)+1;\n\t\t\t}else{\n\t\t\t\tfor(int i=0;i<(t>>1);i++){\n\t\t\t\t\tnx[i]=merge(pr[i<<1],pr[(i<<1)|1]);\n\t\t\t\t}\n\t\t\t\tt=(t>>1);\n\t\t\t}\n\t\t\ttmp=pr;pr=nx;nx=tmp;\n\t\t}\n\t\treturn pr[0];\n\t}\n}\n```\n\n\u540c\u65f6\u8bfb\u4f18\u4e5f\u8981\u52a0\u4e0a\n\n\u7ecf\u8fc7\u591a\u6b21\u7384\u5b66\u4f18\u5316+\u6c27\u5316\u540e\uff0c\u7ec8\u4e8e\u80fd\u901a\u8fc7\u4e86\n\n\u7136\u540e\u53d1\u73b0\uff0c\u6700\u540e\u53ea\u5269\u5f52\u5e76\u6392\u5e8f\u662f\u9012\u5f52\u4e86\n\n\u6700\u6162\u7684\u70b9930ms\u5361\u8fc7\n\n\u4ee3\u4ef7\u5c31\u662f\u4ee3\u7801\u5f88\u96be\u770b\u61c2\u4e86\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n//\u4e0a\u9762\u90a3\u4e00\u884c\u6ce8\u91ca\u5f88\u5173\u952e\n//\u6ca1\u4e86\u5c31\u4f1aTLE\n//huaji\n#include<cstdio>\n#define gsz(x) (x?x->size:0)\nusing namespace std;\nconst int N=100007;\ninline int read(){\n    int n=0;\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9'){\n        n=n*10+c-'0';\n        c=getchar();\n    }\n    return n;\n}\nchar res[30];\ninline void write(long long num){\n    if(num==0){\n        putchar('0');\n        return;\n    }\n    int t=0;\n    while(num){\n        res[t++]=num%10+'0';\n        num/=10;\n    }\n    while(t--)putchar(res[t]);\n}\nstruct node{\n    node *lcd,*rcd;\n    int size;\n    int num;\n    int rand;\n    inline void pushup(){\n        size=gsz(lcd)+1+gsz(rcd);\n    }\n};\nnamespace mem{\n    node mem[N*40];\n    int top;\n    int seed=256541;\n    inline int rnd(){\n        return seed=seed*65537;\n    }\n    inline node *get(int num){\n        top++;\n        mem[top].size=1;\n        mem[top].num=num;\n        mem[top].rand=rnd();\n        return mem+top;\n    }\n};\nnamespace t1{\n    node *st[N];int top;\n    bool side[N];\n    inline node *merge(register node *l,register node *r){\n        if(!l)return r;\n        if(!r)return l;\n        top=0;\n        while(l&&r){\n            if(l->rand>r->rand){\n                st[top]=l;\n                side[top++]=1;\n                l=l->rcd;\n            }else{\n                st[top]=r;\n                side[top++]=0;\n                r=r->lcd;\n            }\n        }\n        node *ans;\n        if(l)ans=l;\n        else ans=r;\n        while(top--){\n            if(side[top]==0){\n                st[top]->lcd=ans;\n                ans=st[top];\n                ans->pushup();\n            }else{\n                st[top]->rcd=ans;\n                ans=st[top];\n                ans->pushup();\n            }\n        }\n        return ans;\n    }\n}\nusing t1::merge;\nnamespace t2{\n    node *st[N];int top;\n    bool side[N];\n    inline node *del(register node *tree,const int &num){\n        top=0;\n        while(tree->num!=num){\n            st[top]=tree;\n            if(tree->num<num){\n                side[top++]=1;\n                tree=tree->rcd;\n            }else{\n                side[top++]=0;\n                tree=tree->lcd;\n            }\n        }\n        register node *cur=merge(tree->lcd,tree->rcd);\n        while(top--){\n            if(side[top]==0){\n                st[top]->lcd=cur;\n                st[top]->pushup();\n                cur=st[top];\n            }else{\n                st[top]->rcd=cur;\n                st[top]->pushup();\n                cur=st[top];\n            }\n        }\n        return cur;\n    }\n}\nusing t2::del;\nint n,m;\ninline int qrank(node *tree,const int & num){\n    register int ans=0;\n    while(tree){\n        if(tree->num<num){\n            ans+=gsz(tree->lcd)+1;\n            tree=tree->rcd;\n        }else{\n            tree=tree->lcd;\n        }\n    }\n    return ans;\n}\nnode *seg[N*4];\nint list[N];\nint swp[N];\nnamespace t3{\n\tnode *s1[N],*s2[N];\n\tnode *build(int *list,int l,int r){\n\t\tnode **pr=s1,**nx=s2,**tmp;\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tpr[i-l]=mem::get(list[i]);\n\t\t}\n\t\tint t=r-l+1;\n\t\twhile(t>1){\n\t\t\tif(t&1){\n\t\t\t\tfor(int i=0;i<(t>>1);i++){\n\t\t\t\t\tnx[i]=merge(pr[i<<1],pr[(i<<1)|1]);\n\t\t\t\t}\n\t\t\t\tnx[t>>1]=pr[t-1];\n\t\t\t\tt=(t>>1)+1;\n\t\t\t}else{\n\t\t\t\tfor(int i=0;i<(t>>1);i++){\n\t\t\t\t\tnx[i]=merge(pr[i<<1],pr[(i<<1)|1]);\n\t\t\t\t}\n\t\t\t\tt=(t>>1);\n\t\t\t}\n\t\t\ttmp=pr;pr=nx;nx=tmp;\n\t\t}\n\t\treturn pr[0];\n\t}\n}\nusing t3::build;\nlong long msort(int l,int r,int id){\n    if(l==r){\n        seg[id]=mem::get(list[l]);\n        return 0;\n    }\n    int mid=((l+r)>>1);\n    long long ans;\n    ans=msort(l,mid,id<<1)+msort(mid+1,r,(id<<1)|1);\n    register int i=l,j=mid+1,k=l;\n    while(i<=mid&&j<=r){\n        if(list[i]<=list[j]){\n            swp[k++]=list[i++];\n        }else{\n            ans+=mid-i+1;\n            swp[k++]=list[j++];\n        }\n    }\n    while(i<=mid)swp[k++]=list[i++];\n    while(j<=r)swp[k++]=list[j++];\n    for(i=l;i<=r;i++)list[i]=swp[i];\n    seg[id]=build(list,l,r);\n    return ans;\n}\ninline int qrank(int r,int num){\n    register int ll=1,rr=n,id=1,mid;\n    int ans=0;\n    while(ll!=rr){\n        seg[id]=del(seg[id],num);\n        mid=((ll+rr)>>1);\n        if(r<=mid){\n            rr=mid;\n            id=(id<<1);\n        }else{\n            ans+=qrank(seg[id<<1],num);\n            ll=mid+1;\n            id=((id<<1)|1);\n        }\n    }\n    seg[id]=del(seg[id],num);\n    return ans;\n}\nlong long cnt;\nint arc[N];\nint num;\nnode *tr1,*tr2;\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++){\n        list[i]=read();\n        arc[list[i]]=i;\n    }\n    cnt=msort(1,n,1);\n    tr1=build(list,1,n);\n    tr2=build(list,1,n);\n    while(m--){\n        num=read();\n        write(cnt);putchar('\\n');\n        int pl=arc[num];\n        cnt-=qrank(tr1,num);\n        cnt-=qrank(tr2,pl);\n        cnt+=2*qrank(pl,num);\n        tr1=del(tr1,num);\n        tr2=del(tr2,pl);\n    }\n}\n```\n\np.s\uff1a\u770b\u4e00\u4e0b[\u8fd9\u4e2a\u8bb0\u5f55](https://www.luogu.org/recordnew/show/18654370)\uff0c\u5e76\u7b97\u4e00\u4e0bTLE\u7684\u90a3\u4e2a\u70b9\u7684\u7528\u65f6\n\n\u79bbAC\u5c31\u5dee4ms\u4e86[\u6d41\u6cea]",
        "postTime": 1556629206,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u601d\u8def\uff1a**\u9996\u5148\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u7f16\u53f7\u4f5c\u4e3a\u6a2a\u5750\u6807\uff0c\u6570\u5b57\u672c\u8eab\u4f5c\u4e3a\u7eb5\u5750\u6807\u6807\u8bb0\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u91cc\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u70b9\u6240\u5305\u542b\u7684\u9006\u5e8f\u5bf9\u6570\u8f6c\u5316\u4e3a\u6570\u70b9\u95ee\u9898\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u6709\u4e00\u4e2a\u89c4\u5f8b\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u4e8c\uff0c\u5171\u53c2\u4e0e\u4e86\u4e09\u4e2a\u9006\u5e8f\u5bf9\u3002\u5206\u522b\u4e3a\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u548c\u7b2c\u56db\u4e2a\u6570\u5b57\u3002\u8fd9\u4e09\u4e2a\u6570\u5b57\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u6570\u5b57\u6765\u8bf4\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7684\u6027\u8d28\uff0c\u4ed6\u4eec\u90fd\u5728\u4e09\u53f7\u70b9\u7684\u5de6\u4e0a\u65b9\u548c\u53f3\u4e0b\u65b9\uff0c\u7531\u4e8e\u672c\u9898\u662f$n$\u7684\u5168\u6392\u5217\uff0c\u4e14\u6240\u6709\u6570\u5b57\u7684\u7f16\u53f7\u90fd\u4e0d\u80fd\u8d85\u8fc7$n$\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6570\u5217\u4e2d\u7684$i$\u53f7\u70b9\u6765\u8bf4\u4ed6\u53c2\u4e0e\u7684\u9006\u5e8f\u5bf9\u603b\u6570\uff0c\u5c31\u662f\u7531$(0\uff0cA_i)$\u548c$(i\uff0cn)$\u56f4\u6210\u7684\u77e9\u5f62\u4e2d\u7684\u70b9\u6570\u52a0\u4e0a\u7531$(i\uff0c0)$\u548c$(n\uff0cA_i)$\u56f4\u6210\u7684\u77e9\u5f62\u4e2d\u7684\u70b9\u6570\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u7edf\u8ba1\u51fa\u6765\u6bcf\u4e00\u4e2a\u70b9\u5f53\u524d\u53c2\u4e0e\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u5bf9\u4e8e\u5f53\u524d\u5220\u70b9\u540e\u7684\u7b54\u6848\uff0c\u5c31\u662f\u4e0a\u4e00\u4e2a\u72b6\u6001\u51cf\u53bb\u5f53\u524d\u70b9\u6240\u53c2\u4e0e\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u5220\u9664\u64cd\u4f5c\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u8d4b\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4eec\u5c06\u6240\u6709\u7684\u70b9\u90fd\u8d4b\u503c\u6210\u4e3a1\uff0c\u5220\u9664\u7684\u65f6\u5019\u5c31\u662f\u5c06\u5f53\u524d\u7684\u8d4b\u503c\u6210\u4e3a0\u3002\u8fd9\u6837\u77e9\u5f62\u5185\u6570\u70b9\u5c31\u662f\u77e9\u5f62\u5185\u7edf\u8ba1\u6743\u503c\u548c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u95ee\u9898\u7684\u8f6c\u5316\u3002\u663e\u7136\u8f6c\u5316\u6210\u4e3a\u7684\u95ee\u9898\u53ef\u4ee5\u8fd0\u7528$KDtree$\u6765\u5b8c\u6210\uff0c\u4e0b\u9762\u8bb2\u89e3\u4e00\u4e0b$cdq$\u505a\u6cd5\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u5bf9\u70b9\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5bf9\u70b9\u52a0\u503c\uff0c\u53ca\u52a0\u4e0a$\\Delta$\u3002\u6211\u4eec\u5b9a\u4e49\u4e24\u79cd\u64cd\u4f5c\uff0c$oper=1$\u7684\u64cd\u4f5c\u4e2d\u6709\u4e09\u4e2a\u503c$x\uff0cy\uff0cz$\uff0c\u8868\u793a\u5c06\u4f4d\u7f6e\u4e3a$(x\uff0cy)$\u7684\u70b9\u7684\u6743\u503c\u52a0\u4e0a$z$\u3002$oper=2$\u7684\u64cd\u4f5c\u4e2d\u6709\u56db\u4e2a\u503c$x\uff0cy\uff0cz\uff0cid$\uff0c\u8868\u793a\u7edf\u8ba1\u7531$(0\uff0c0)$\u548c$(x\uff0cy)$\u56f4\u6210\u7684\u77e9\u5f62\u4e2d\u7684\u6743\u503c\u548c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6743\u503c\u548c\u4e58\u4e0a\u7cfb\u6570$z$\u52a0\u5230\u7f16\u53f7\u4e3a$id$\u7684\u7b54\u6848\u6570\u7ec4\u4e0a\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u6211\u4eec\u90fd\u52a0\u4e0a\u4e00\u4e2a\u53c2\u6570$ord$\uff0c\u8868\u793a\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6dfb\u52a0\u987a\u5e8f\u3002\uff08\u6ce8\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u77e9\u5f62\u7684\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u90fd\u80fd\u8f6c\u5316\u4e3a$oper=2$\u7684\u52a0\u51cf\uff0c\u8fd0\u7528\u5bb9\u65a5\uff0c\u5373\u53ef\u3002\uff09\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u8fdb\u884c\u6392\u5e8f\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662f$x$\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f$y$\u3002\u7136\u540e\u5c31\u662f$solve$\u3002\u56e0\u4e3a\u66f4\u6539\u64cd\u4f5c\u4f1a\u5f71\u54cd\u5230\u67e5\u8be2\u64cd\u4f5c\uff0c\u6240\u4ee5$ord$\u5c0f\u7684\u70b9\u4f1a\u5f71\u54cd\u5230$ord$\u5927\u7684\u70b9\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u7684\u5206\u6cbb\u533a\u95f4\u5c31\u662f\u64cd\u4f5c\u7684$ord$\u7f16\u53f7\u3002\u6211\u4eec\u5c06$ord$\u5c0f\u7684\u70b9\u653e\u5728\u5de6\u9762\uff0c$ord$\u5927\u7684\u653e\u5728\u53f3\u9762\uff0c\u5e76\u4e14\u6211\u4eec\u4e0d\u8981\u66f4\u6539\u5728$solve$\u4e4b\u524d\u6392\u5e8f\u540e\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u5de6\u53f3\u533a\u95f4\u5185\u4f9d\u65e7\u4fdd\u8bc1\u6700\u5f00\u59cb\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u5728\u5206\u5212\u4e4b\u540e\u5c31\u53ef\u4ee5\u9012\u5f52\u4e86\uff0c\u6211\u4eec\u5148\u9012\u5f52\u5de6\u533a\u95f4\uff0c\u5728\u9012\u5f52\u5b8c\u6210\u4e4b\u540e\u6211\u4eec\u5c31\u8981\u5904\u7406\u5de6\u533a\u95f4\u5bf9\u4e8e\u53f3\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u5f71\u54cd\u4e3b\u8981\u5728\u4e8e\u5de6\u533a\u95f4\u7684\u4fee\u6539\u548c\u53f3\u533a\u95f4\u7684\u67e5\u8be2\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u5de6\u53f3\u533a\u95f4\u5728\u5212\u5206\u4e4b\u524d\u662f\u6309\u7167\u6700\u5f00\u59cb\u7684\u5173\u952e\u5b57\u8fdb\u884c\u7684\u6392\u5e8f\uff0c\u5e76\u4e14\u6700\u5f00\u59cb\u7684\u6392\u5e8f\u65b9\u5f0f\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u7edf\u8ba1\u7b54\u6848\uff0c\u4f46\u662f\u540e\u6765\u5212\u5206\u7684\u987a\u5e8f\u4e0d\u80fd\uff0c\u6240\u4ee5\u672c\u9898\u7684\u6b65\u9aa4\u987a\u5e8f\u6709\u6240\u6539\u53d8\uff0c\u5373\u5148\u7edf\u8ba1\u5de6\u533a\u95f4\u5bf9\u4e8e\u53f3\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u540e\u8fdb\u884c\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u7684\u9012\u5f52\u5904\u7406\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u548c\u4e0a\u9762\u7684\u63cf\u8ff0\u8fdb\u884c\u7406\u89e3\u3002\n\n```c++\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define N 100010\nint n,m,idx,place[N],tmp[N];long long ans[N];\nstruct Oper {int kind,x,y,z,ord,id;}oper[N<<3],tmpx[N<<3];\nbool cmp(const Oper &a,const Oper &b)\n{return (a.x==b.x&&a.y==b.y)?(a.ord<b.ord):((a.x==b.x)?(a.y<b.y):(a.x<b.x));}\nvoid add(int x,int y) {while(x<=n) tmp[x]+=y,x+=x&-x;}\nint find(int x) {int tmp1=0;while(x) tmp1+=tmp[x],x-=x&-x;return tmp1;}\nvoid solve(int l,int r)\n{\n    if(l==r) return;\n    int mid=(l+r)>>1,tl=l-1,tr=mid;\n    for(int i=l;i<=r;i++)\n    {\n\t\tif(oper[i].ord<=mid&&oper[i].kind==1) add(oper[i].y,oper[i].z);\n\t\tif(oper[i].ord>mid&&oper[i].kind==2) ans[oper[i].id]+=find(oper[i].y)*oper[i].z;\n    }\n    for(int i=l;i<=r;i++)\n\t\tif(oper[i].ord<=mid&&oper[i].kind==1) add(oper[i].y,-oper[i].z);\n    for(int i=l;i<=r;i++)\n    {\n\t\tif(oper[i].ord<=mid) tmpx[++tl]=oper[i];\n\t\telse tmpx[++tr]=oper[i];\n    }\n    for(int i=l;i<=r;i++) oper[i]=tmpx[i];\n    solve(l,mid),solve(mid+1,r);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,a;i<=n;i++)\n    {\n\t\tscanf(\"%d\",&a),oper[++idx].kind=1,oper[idx].x=i;\n\t\toper[idx].y=a,oper[idx].z=1,oper[idx].ord=idx,place[a]=i;\n\t\tadd(a,1),ans[1]+=i-find(a);\n    }\n    for(int i=1;i<=n;i++) add(i,-1);\n    for(int i=1,a;scanf(\"%d\",&a),i<=m;i++)\n    {\n\t\toper[++idx].kind=2,oper[idx].x=place[a],oper[idx].y=n;\n\t\toper[idx].z=-1,oper[idx].ord=idx,oper[idx].id=i+1;\n\t\toper[++idx].kind=2,oper[idx].x=n,oper[idx].y=a;\n\t\toper[idx].z=-1,oper[idx].ord=idx,oper[idx].id=i+1;\n\t\toper[++idx].kind=2,oper[idx].x=place[a],oper[idx].y=a;\n\t\toper[idx].z=2,oper[idx].ord=idx,oper[idx].id=i+1;\n\t\toper[++idx].kind=1,oper[idx].x=place[a],oper[idx].y=a,oper[idx].z=-1,oper[idx].ord=idx;\n    }sort(oper+1,oper+idx+1,cmp),solve(1,idx);\n    for(int i=2;i<=m;i++) ans[i]+=ans[i-1];\n    for(int i=1;i<=m;i++) printf(\"%lld\\n\",ans[i]);\n}\n```",
        "postTime": 1547425419,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u849f\u84bb\u521a\u5f00\u59cb\u5b66\u5206\u5757\uff0c\u521a\u4ece\u5206\u5757\u5165\u95e8\u4e2d\u51fa\u6765\uff0c\u542c\u673a\u623f\u4e00\u4f4d\u6570\u636e\u7ed3\u6784\u5927\u4f6c\u8bf4\u8fd9\u9898\u7528\u5206\u5757\u53ef\u4ee5n sqrt(n)\u8fc7\uff0c\u4e8e\u662f\u7ecf\u5386\u4e86\u6f2b\u957f\u7684\uff08\u8fd1\u4e00\u5929\uff09\u7684\u601d\u8003\uff0c\u7528\u4e86\u79cd\u795e\u5947\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4+\u5206\u5757O(n sqrt(n))\u8fc7\u4e86\uff0c\u597d\u50cf\u9898\u89e3\u91cc\u6ca1\u6709\u6211\u8fd9\u79cd\u5199\u6cd5\u6765\u6c34\u4e00\u53d1\n\n\u4e0d\u626f\u4e86\u8bb2\u6b63\u9898\u3002\n\u652f\u6301\u5220\u9664\u7684\u9006\u5e8f\u5bf9\uff0c\u4e00\u4e2a\u57fa\u672c\u601d\u8def\u662f\u5148\u6c42\u51fa\u6765\u4e00\u5f00\u59cb\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u6bcf\u6b21\u5220\u9664\u5c06\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\u4ece\u7b54\u6848\u4e2d\u51cf\u53bb\u3002\n\n### \u600e\u4e48\u6c42\u4e00\u4e2a\u6570\u7684\u8d21\u732e\uff1f\n\u4e00\u4e2a\u6570\u7684\u8d21\u732e\u5206\u4e24\u90e8\u5206\uff1a\u524d\u9762\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u8fd9\u4e9b\u90fd\u80fd\u7ec4\u6210\u9006\u5e8f\u5bf9\u3002\n\n### \u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u8d21\u732e\uff1f\n\n~~\u66b4\u529bO(n)\u626b\u63cf~~\n\n\u6211\u4eec\u53ef\u4ee5\u6570\u5217\u5206\u5757\uff0c\u6bcf\u4e2a\u5757\u5f00\u4e00\u4e2an\u5927\u5c0f\u7684\u6570\u7ec4f[n]\uff0cf[i]\u8868\u793a\u5728\u8fd9\u4e2a\u5757\u4e2d\u5c0f\u4e8e\u7b49\u4e8ei\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u8ba1\u7b97\u8d21\u732e\u65f6\uff08\u5047\u8bbe\u8fd9\u4e2a\u6570\u4e3ai\uff0c\u5728\u5757p\u4e2d\uff0c\u5171\u6709len\u4e2a\u5757)\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\u7edf\u8ba1\u5757 1 ~ p-1\u7684f[n]-f[i]\uff08i+1~n\u7684\u6570\u7684\u6570\u91cf\uff09\uff0c\u518d\u7edf\u8ba1\u5757p+1~len\u7684f[i-1]\uff081~i-1\u7684\u6570\u7684\u6570\u91cf\uff09\uff0c\u6700\u540e\u5bf9\u5757p\u5185\u7684\u66b4\u529b\u7edf\u8ba1\uff0c\u4e09\u90e8\u5206\u52a0\u8d77\u6765\u5c31\u662f\u8fd9\u4e2a\u6570\u7684\u8d21\u732e\uff0c\u5355\u6b21\u64cd\u4f5c\u65f6\u95f4\u4e3aO(sqrt(n)),\u7a7a\u95f4\u4e3aO(n sqrt(n))\u3002\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\n\n### \u5982\u4f55\u4fee\u6539\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u7531\u4e8e\u6bcf\u5220\u9664\u4e00\u4e2a\u6570\u5c31\u4f1a\u5bf9\u8fd9\u4e2af\u6570\u7ec4\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u5fc5\u987b\u8003\u8651\u4fee\u6539\u3002\n\n\u8fd9\u4e2af\u6570\u7ec4\u4e0e\u524d\u7f00\u548c\u7c7b\u4f3c\uff0c\u90a3\u4e48\u524d\u7f00\u548c\u652f\u6301\u4fee\u6539\uff1f\n\n**\u6811\u72b6\u6570\u7ec4\u554a\uff01**\n\n\u628af\u6570\u7ec4\u6539\u4e3a\u6811\u72b6\u6570\u7ec4\uff0c\u7edf\u8ba1\u65f6\u7528\u6811\u72b6\u6570\u7ec4\u8be2\u95ee\uff0c\u987a\u5e26\u628a\u6bcf\u4e00\u4e2a\u5757\u6267\u884cadd(i,-1)\uff08\u76f8\u5f53\u4e8e\u53bb\u6389\u8fd9\u4e2a\u6570\uff09\n\n\u7136\u540e\u95ee\u9898\u53cc\u6765\u4e86\uff0c\u8fd9\u6837\u505a\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n sqrt(n) logn)\uff0c\u8ba1\u7b97\u5668\u4e00\u7b97\u8fbe\u5230\u4e861e8\uff0c\u6709\u70b9\u60ac\u554a\u3002\u8bd5\u4e00\u4e0b\u679c\u7136T\u4e86\u3002\n\n\u8fd8\u662f~~\u653e\u5f03\u5427~~\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u4e00\u4e0b\u67e5\u8be2\u8d21\u732e\u7684\u8fc7\u7a0b\uff1a\u7edf\u8ba1\u5757 **1 ~ p-1**\u7684f[n]-f[i]\uff08i+1~n\u7684\u6570\u7684\u6570\u91cf\uff09\uff0c\u518d\u7edf\u8ba1\u5757**p+1~len**\u7684f[i-1]\uff081~i-1\u7684\u6570\u7684\u6570\u91cf\uff09\uff0c\u6700\u540e\u5bf9\u5757p\u5185\u7684\u66b4\u529b\u7edf\u8ba1\u3002\n\n\u5bf9\u5757p\u66b4\u529b\u7edf\u8ba1\u80af\u5b9a\u6ca1\u6cd5\u4f18\u5316\u4e86\uff08\u5373\u4f7f\u4f18\u5316\u4e86\u6548\u679c\u4e5f\u5fae\u4e4e\u5176\u5fae\uff09\uff0c\u91cd\u70b9\u662f\u7c97\u4f53\u6807\u51fa\u7684\u90e8\u5206\u3002\n\n\u4e24\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff1f\n\n\u524d\u7f00\u548c\uff1f\n\n\u90a3\u4e48\u518d\u52a0\u5de5\u4e00\u4e0b f \u6570\u7ec4\uff1a\u7528f[i][j]\u8868\u793a\u524d i \u4e2a**\u5757**\u5185\u5c0f\u4e8e\u7b49\u4e8e j \u7684\u6570\u7684\u6570\u91cf\n\u8fd9\u6837O(sqrt(n)logn)\u7684\u66b4\u529b\u7edf\u8ba1\u88ab\u4f18\u5316\u5230\u4e86O(logn)\u3002\n\n\u7136\u800c\u95ee\u9898\u53d2\u6765\u4e86~~\u548b\u8fd9\u4e48\u591a\u95ee\u9898~~\n\n\u8fd8\u662f\u8001\u95ee\u9898\uff0c\u5220\u9664\u6570\u4f34\u968f\u7740 f \u6570\u7ec4\u7684\u53d8\u5316\uff0c f \u6570\u7ec4\u4e0d\u4ec5\u7b2c\u4e8c\u7ef4\u8981\u652f\u6301\u4fee\u6539\uff0c\u7b2c\u4e00\u7ef4\u4e5f\u9700\u8981\u4fee\u6539\u3002\n\n\u53c8\u662f\u652f\u6301\u4fee\u6539\u7684\u524d\u7f00\u548c\uff1f\n\n#### \u8fd8\u662f\u6811\u72b6\u6570\u7ec4\u554a\uff01\n\n\u4e8e\u662f\u601d\u8def\u6765\u4e86\uff1a\n\n\u5f00\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u7b2c\u4e00\u7ef4\u7ef4\u62a4**\u5757**\u7684\u524d\u7f00\u548c\uff0c\u7b2c\u4e8c\u4f4d\u7ef4\u62a4**\u6570**\u7684\u524d\u7f00\u548c\n\n\u5757\u5916\u7684\u6574\u5757\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4O(log(sqrt(n)) log n)\u2248O(log^2 n)\u67e5\u8be2\uff0c\u5757\u5185\u66b4\u529bO(sqrt(n))\u626b\u63cf\n\n\u518d\u7528\u6811\u72b6\u6570\u7ec4\u6539\u4e00\u4e0b\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n (sqrt(n) + log^2(n))) \u2248 O(n sqrt(n))\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n sqrt(n))\n\n\u9664\u4e86\u7a7a\u95f4\u538b\u7740\u7ebf\uff08125MB\uff09\u6548\u7387\u8fd8\u662f\u4e0d\u9519\u7684\uff1a\u4e0d\u5f00O2 1400ms\uff0c\u5f00O2 900ms\n\n### \u4e0a\u4ee3\u7801\n```cpp\n#define mian main \n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n\n#define maxn 100005\n//\u4e0b\u9762\u662f\u778edefine\u7684\n#define pn putchar('\\n')\n#define ps putchar(' ')\n#define px(x) putchar('x')\n#define pX(x) putchar(x)\n\nusing namespace std;\n\ninline int read(){\n    int x=0,y=0;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return y?-x:x;\n}//\u5feb\u8bfb\n#define lowb(x) x&-x\nint n,len;\nint a[maxn],be[maxn],pos[maxn];\nbool dis[maxn];\n//\u89e3\u91ca\u4e00\u4e0b\u6bd2\u7624\u7684\u53d8\u91cf\u540d\n//a : \u539f\u6570\u5217\n//be : belong , \u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u5c5e\u4e8e\u54ea\u4e2a\u5757\n//pos : position , \u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u4f4d\u7f6e\n//dis : disappear,\u8bb0\u5f55\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5426\u88ab\u5220\u9664\u4e86,\u7528\u4e8e\u5757\u5185\u7684\u66b4\u529b\u7edf\u8ba1\nstruct Tree_Array{\n//\u6807\u51c6\u7684\u7ffb\u8bd1:tree\u6811,array\u6570\u7ec4,\u5408\u8d77\u6765tree_array\u6811\u72b6\u6570\u7ec4(\u5927\u96fe\n//\u7ed3\u6784\u4f53\u5185\u7684\u5c31\u662f\u7b2c\u4e8c\u7ef4\u7684\u6811\u72b6\u6570\u7ec4,\u56e0\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u96be\u770b\u6240\u4ee5\u5f00\u8fdb\u7ed3\u6784\u4f53\u91cc\u4e86\n    int tree[maxn];\n    inline void add(int x,int d){\n        while(x<=n)tree[x]+=d,x+=lowb(x);\n    }\n    inline int ask(int x){\n        int ans=0;\n        while(x)ans+=tree[x],x-=lowb(x);\n        return ans;\n    }\n}ta[320],init;\n//ta:Tree_Array\u7684\u7f29\u5199,\u5c31\u662f\u90a3\u4e2a\u4e8c\u7ef4\u7684\u6811\u72b6\u6570\u7ec4\n//init:initialization,\u7528\u4e8e\u7edf\u8ba1\u521d\u59cb\u9006\u5e8f\u5bf9\u6570\u91cf\n//\u4e3a\u4ec0\u4e48\u6211\u8981\u7528\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1?\u6b63\u597d\u5199\u4e86\u4e2a\u6811\u72b6\u6570\u7ec4\u7ed3\u6784\u4f53\u90a3\u5c31\u7528\u4e0a\u5457(\u624d\u4e0d\u662f\u6211\u5f52\u5e76\u6392\u5e8f\u90fd\u6253\u9519\u4e86)\ninline void ADD(int x,int y,int d){\n//x\u4e3a\u7b2c\u4e00\u7ef4,y\u4e3a\u7b2c\u4e8c\u7ef4,d\u4e3a\u52a0\u7684\u6570\u503c\n    while(x<=len)ta[x].add(y,d),x+=lowb(x);\n}//\u6574\u4e2a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u52a0\ninline int ASK(int x,int y){\n//\u540c\u4e0a\u7684\u67e5\u8be2\n    int ans=0;\n    while(x)ans+=ta[x].ask(y),x-=lowb(x);\n    return ans;\n}\nint mian(){\n    n=read();\n    int m=read(),sq=sqrt(n);\n    long long ans=0;//\u4e00\u5b9a\u8981\u5f00long long\n    len=n/sq+(bool)(n%sq);//\u8be1\u5f02\u7684\u5757\u7684\u4e2a\u6570,\u597d\u50cf\u5c31\u6211\u8fd9\u4e48\u6bd2\u7624\u7684\u5199\u5206\u5757\u5427...\n    for(register int i=1;i<=n;++i)\n    \ta[i]=read(),pos[a[i]]=i;\n    for(register int i=1;i<=len;++i){\n        int l=sq*(i-1)+1,r=min(l+sq-1,n);\n        for(register int j=l;j<=r;++j){\n        \tans+=init.ask(n)-init.ask(a[j]);\n            init.add(a[j],1);//\u524d\u4e24\u4e2a\u662f\u7edf\u8ba1\u521d\u59cb\u9006\u5e8f\u5bf9\u7684\n            ADD(i,a[j],1);//\u5c06\u524di\u4e2a\u5757\u7684\u524da[j]\u7684\u503c+1,\u521d\u59cb\u5316\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n            be[j]=i;//\u8bb0\u5f55be\u6570\u7ec4\n        }\n    }\n    while(m--){\n        int k=read();\n        printf(\"%lld\\n\",ans);\n        if(be[pos[k]]>1)\n        \tans-=ASK(be[pos[k]]-1,n)-ASK(be[pos[k]]-1,k);\n        //\u524d\u4e00\u90e8\u5206\u7684\u7edf\u8ba1,\u7ffb\u8bd1\u8fc7\u6765:\u57571~be[pos[k]]\u7684\u5c0f\u4e8e\u7b49\u4e8en\u7684\u6570\u7684\u4e2a\u6570-\u57571~be[pos[k]]\u7684\u5c0f\u4e8e\u7b49\u4e8ek\u7684\u4e2a\u6570,\u5373\u4e3a\u57571~be[pos[k]]\u7684\u5927\u4e8ek\u7684\u4e2a\u6570\n        if(be[pos[k]]<len)\n        \tans-=ASK(len,k-1)-ASK(be[pos[k]],k-1);\n        //\u540c\u4e0a,\u5757be[pos[k]]+1~len\u7684\u5c0f\u4e8ek\u7684\u6570\u7684\u4e2a\u6570\n        int r=min(be[pos[k]]*sq,n);\n        for(register int i=sq*(be[pos[k]]-1)+1;i<pos[k];++i)\n        \tif(!dis[i]&&a[i]>k)--ans;\n        for(register int i=pos[k]+1;i<=r;++i)\n        \tif(!dis[i]&&a[i]<k)--ans;\n        //\u4e0a\u9762\u4e3a\u5757\u5185\u66b4\u529b\u7edf\u8ba1\n        ADD(be[pos[k]],k,-1);\n        //\u53bb\u6389\u8fd9\u4e2a\u6570\u5728\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u503c\n        dis[pos[k]]=1;\n    }\n    //\u61d2\u5f97\u5199return 0\u4e86\n}\n\n```\n\n\uff08\u53d8\u91cf\u540d\u6bd2\u7624\u8f7b\u55b7\u3002\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u597d\u50cf\u8bf4\u7684\u5f88\u5570\u55e6\uff0c\u4e0d\u77e5\u9053\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u4e0d\u7ed9\u8fc7\u3002\u3002\u3002\uff09\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1546516572,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "#\u524d\u8a00\n\n\u7b2c\u4e00\u6b21\u505a\u8fd9\u9053\u9898\u76ee\uff0c\u7528\u7684\u662f\u4e3b\u5e2d\u6811\u5957\u6811\u72b6\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u601d\u60f3\u975e\u5e38\u6e05\u6670\u660e\u4e86\uff0c\u5c31\u662f\u7528\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u66b4\u529b\u7ef4\u62a4\u7edf\u8ba1\uff0c\u7136\u9e45\u4e3b\u5e2d\u6811\u786e\u5b9e\u4e0d\u597d\u6253\uff0c\u518d\u5957\u4e2a\u6811\u72b6\u6570\u7ec4\uff0cDebug\u5c31\u66f4\u56f0\u96be\u4e86\u3002\n\n[\u4e3b\u5e2d\u6811\u5957\u6811\u72b6\u6570\u7ec4\u8bb2\u89e3\u94fe\u63a5](http://blog.csdn.net/qq\\_35914587/article/details/78953090)\n\n\u4eca\u5929\u5b66\u4e60\u4e86\u57fa\u672c\u7684CDQ\u601d\u60f3\u53ca\u65b9\u6cd5\uff0c\u5ffd\u7136\u8bb0\u8d77\u8fd9\u9053\u9898\u76ee\u6709CDQ\u7684\u89e3\u6cd5\uff0c\u4e8e\u662f\u505a\u4e86\u505a\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4 CDQ\u771f\u662f\u53c8\u597d\u7801\uff0c\u8dd1\u7684\u53c8\u5feb\uff0c\u7136\u9e45\u63a8\u5230\u8fc7\u7a0b\u5374\u4e0d\u50cf\u4e0a\u4e00\u79cd\u89e3\u6cd5\u90a3\u4e48\u597d\u641e\u3002\n\n#\u601d\u8def\u5206\u6790\n\n\u8981\u8f6c\u5316\u6210CDQ\u7684\u6a21\u578b\uff0c\u9996\u5148\u5f97\u6709\u65f6\u95f4\u5e8f\uff0c\u6211\u4eec\u628a\u5220\u9664\u7684\u987a\u5e8f\u770b\u505a\u65f6\u95f4\u5e8f\uff0c\u7136\u540e\u628a\u5220\u9664\u770b\u505a\u5012\u7740\u63d2\u5165\uff0c\u8d8a\u65e9\u63d2\u5165\u7684\u65f6\u95f4\u5e8f\u8d8a\u5c0f\u3002\n\n\u7136\u540e\u628a\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u770b\u505a\u4e00\u7ef4\uff0c\u628a\u4f4d\u7f6e\u770b\u505a\u4e00\u7ef4\u3002\n\n\u6837\u4f8b\u53d8\u6210\u4e86\n\nt   1 2 3 4 5\uff08\u65f6\u95f4\u5e8f\uff09\n\n\nx   3 5 4 1 2\uff08\u5927\u5c0f\u5e8f\uff09\n\n\ny   3 2 4 1 5\uff08\u4f4d\u7f6e\u5e8f\uff09\n\n\n\u6211\u4eec\u8bbe\u4e00\u4e2a\u6570\u4e3a$(t_0,x_0,y_0)$\n\n\u6211\u4eec\u6c42\u89e3\u65f6\uff0c\u8d21\u732e\u662f\u5728\u5b83\u63d2\u5165\u4e4b\u524d\u53f3\u8fb9\u591a\u5c11\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u5de6\u8fb9\u591a\u5c11\u6bd4\u5b83\u6570\n\n\u5373 $1.t<t_0,x<x_0,y>=y_0  2.t<t_0,x>x_0,y<=y_0$\n\n\u7136\u540e\u4e3a\u4e86\u628a\u4e0d\u7b49\u53f7\u641e\u7684\u65b9\u5411\u4e00\u81f4\uff0c\u8f6c\u5316\u4e3a\n\n$1.t<t_0,x<x_0,y<=(n-y_0+1)  2.t<t_0,x<(n-x_0+1),y<=y_0$\n\n\u8fd9\u6837\u5c31\u8f6c\u5316\u4e3a\u4e09\u7ef4\u504f\u5e8f\u95ee\u9898\u4e86\uff0c\u76f4\u63a5\u4e0aCDQ\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n#\u6ce8\u610f\u4e8b\u9879\n\n\u7531\u4e8e\u6c42\u7684\u662f\u9006\u5e8f\u5bf9\u603b\u548c\uff0c\u5f88\u660e\u663e\u8981\u5f00long long\uff0c\u53ef\u4e0d\u8981\u5fd8\u4e86\u3002\n\n\u8f93\u51fa\u4e0a\u4e00\u6b21\u5220\u9664\u7684\u7b54\u6848\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5220\u9664\u4e0d\u7528\u8f93\u51fa\u5566\u3002\n\n#\u9898\u76ee\u94fe\u63a5\n\n[Luogu](https://www.luogu.org/problemnew/show/P3157)\n\n#Ac Code\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#define il inline\n#define lowbit(x) x&(-x)\n#define ll long long\nusing namespace std;\nconst int maxm=111000;\nstruct node{\n    int x,y,z,id;\n    ll ans;\n};\nnode a[maxm],b[maxm];\nint m,n,val[maxm],rk[maxm];\nll ans[maxm],sum[maxm];\nil int read()\n{\n    int x=0,w=1;\n    char ch=0;\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*w;\n}\nil void ins(int x,int w){for(int i=x;i<=maxm;i+=lowbit(i)) sum[i]+=(ll)w;}\nil ll ask(int x){ll ans=0;for(int i=x;i;i-=lowbit(i)) ans+=sum[i];return ans;}\nil bool same(node x1,node x2){return (x1.x==x2.x)&&(x1.y==x2.y)&&(x1.z==x2.z);}\nil bool comp(node x1,node x2){return (x1.x<x2.x)||(x1.x==x2.x&&(x1.y<x2.y||(x1.y==x2.y&&x1.z<x2.z)));}\nvoid CDQ(int l,int r)\n{\n    if(l>=r) return;\n    int mid=(l+r)>>1;\n    CDQ(l,mid),CDQ(mid+1,r);\n    for(int i=l,j=l,p=mid+1;i<=r;i++) \n    {\n        if(j<=mid&&(p>r||a[j].y<=a[p].y)) b[i]=a[j++];\n        else b[i]=a[p++];\n    }//\u5f52\u5e76\u6392\u5e8f,\u5728\u8fd9\u6bb5\u533a\u95f4\u4e2d\u628ay\u6392\u597d.\n    for(int i=l;i<=r;i++) \n    {\n        a[i]=b[i];\n        if(a[i].id<=mid) ins(a[i].z,1);//\u63d2\u5165\u5c0f\u7684 \n        else a[i].ans+=ask(a[i].z);//\u5927\u7684\u67e5\u8be2 \n    }\n    for(int i=l;i<=r;i++) \n     if(a[i].id<=mid) ins(a[i].z,-1);//\u6d88\u9664\u5f71\u54cd \n}\nint main()\n{\n    //freopen(\"inverse.in\",\"r\",stdin);\n    //freopen(\"inverse.out\",\"w\",stdout);\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) a[i].y=i,a[i].z=read();\n    for(int i=1,w;i<=m;i++) w=read(),rk[w]=i; \n    int tot=m;\n    for(int i=1;i<=n;i++) if(!rk[i]) rk[i]=++tot;\n    for(int i=1;i<=n;i++) a[i].x=tot-rk[a[i].z]+1;\n    sort(a+1,a+n+1,comp);\n    for(int i=1;i<=n;i++) a[i].y=n-a[i].y+1,a[i].id=i;\n    CDQ(1,n);\n    for(int i=1;i<=n;i++) ans[a[i].x]+=a[i].ans;\n    sort(a+1,a+n+1,comp);\n    for(int i=1;i<=n;i++) a[i].y=n-a[i].y+1,a[i].z=n-a[i].z+1,a[i].ans=0,a[i].id=i;\n    CDQ(1,n);\n    for(int i=1;i<=n;i++) ans[a[i].x]+=a[i].ans;\n    for(int i=1;i<=n;i++) ans[i]+=ans[i-1];\n    for(int i=n;i>n-m;i--) printf(\"%lld\\n\",ans[i]);\n    return 0; \n}\n```\n#\u6d1b\u8c37\u7528\u6237\u798f\u5229\n\n\u6709\u4e00\u9053\u975e\u5e38\u76f8\u4f3c\u7684\u9898\u76ee\n\n[1393](https://www.luogu.org/problemnew/show/P1393)\n\n\u8fde\u540d\u5b57\u90fd\u4e00\u6837\u3002\n\n\u4f46\u662f\u8fd9\u53cc\u500d\u7ecf\u9a8c\u53ef\u662f\u4e0d\u597d\u5f97\u7684\u3002\n\n1.\u8fd9\u9898\u76ee\u6ca1\u6709\u4fdd\u8bc1\u6570\u636e<=n\uff08\u6240\u4ee5\u6211\u4eec\u8981\u79bb\u6563\u5316\uff09\n\n2.\u7ed9\u51fa\u7684\u662f\u5220\u9664\u7684\u6570\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u6570\u503c\u3002\n\n3.\u5148\u8f93\u51fa\u603b\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u7136\u540e\u8f93\u51fa\u6bcf\u4e2a\u5220\u9664\u540e\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\nAc Code\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#define il inline\n#define lowbit(x) x&(-x)\n#define ll long long\nusing namespace std;\nconst int maxm=111000;\nstruct node{\n    int x,y,z,id;\n    ll ans;\n};\nnode a[maxm],b[maxm];\nint m,n,val[maxm],rk[maxm];\nll ans[maxm],sum[maxm];\nil int read()\n{\n    int x=0,w=1;\n    char ch=0;\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*w;\n}\nil void ins(int x,int w){for(int i=x;i<=maxm;i+=lowbit(i)) sum[i]+=(ll)w;}\nil ll ask(int x){ll ans=0;for(int i=x;i;i-=lowbit(i)) ans+=sum[i];return ans;}\nil bool same(node x1,node x2){return (x1.x==x2.x)&&(x1.y==x2.y)&&(x1.z==x2.z);}\nil bool comp(node x1,node x2){return (x1.x<x2.x)||(x1.x==x2.x&&(x1.y<x2.y||(x1.y==x2.y&&x1.z<x2.z)));}\nvoid CDQ(int l,int r)\n{\n    if(l>=r) return;\n    int mid=(l+r)>>1;\n    CDQ(l,mid),CDQ(mid+1,r);\n    for(int i=l,j=l,p=mid+1;i<=r;i++) \n    {\n        if(j<=mid&&(p>r||a[j].y<=a[p].y)) b[i]=a[j++];\n        else b[i]=a[p++];\n    }//\u5f52\u5e76\u6392\u5e8f,\u5728\u8fd9\u6bb5\u533a\u95f4\u4e2d\u628ay\u6392\u597d.\n    for(int i=l;i<=r;i++) \n    {\n        a[i]=b[i];\n        if(a[i].id<=mid) ins(a[i].z,1);//\u63d2\u5165\u5c0f\u7684 \n        else a[i].ans+=ask(a[i].z);//\u5927\u7684\u67e5\u8be2 \n    }\n    for(int i=l;i<=r;i++) \n     if(a[i].id<=mid) ins(a[i].z,-1);//\u6d88\u9664\u5f71\u54cd \n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) a[i].y=i,a[i].z=read(),val[i]=a[i].z;\n    sort(val+1,val+n+1);\n    int t=unique(val+1,val+n+1)-val-1;\n    for(int i=1;i<=n;i++) a[i].z=lower_bound(val+1,val+t+1,a[i].z)-val;\n    for(int i=1,w;i<=m;i++) w=read(),rk[w]=i; \n    int tot=m;\n    for(int i=1;i<=n;i++) if(!rk[i]) rk[i]=++tot;\n    for(int i=1;i<=n;i++) a[i].x=tot-rk[i]+1;\n    sort(a+1,a+n+1,comp);\n    for(int i=1;i<=n;i++) a[i].y=n-a[i].y+1,a[i].id=i;\n    CDQ(1,n);\n    for(int i=1;i<=n;i++) ans[a[i].x]+=a[i].ans;\n    sort(a+1,a+n+1,comp);\n    for(int i=1;i<=n;i++) a[i].y=n-a[i].y+1,a[i].z=n-a[i].z+1,a[i].ans=0,a[i].id=i;\n    CDQ(1,n);\n    for(int i=1;i<=n;i++) ans[a[i].x]+=a[i].ans;\n    for(int i=1;i<=n;i++) ans[i]+=ans[i-1];\n    for(int i=n;i>=n-m;i--) printf(\"%lld \",ans[i]);\n    return 0; \n}\n```",
        "postTime": 1516005828,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u7ffb\u9605\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u7eaf\u5206\u5757\u505a\u6cd5\uff0c\u6211\u5c31\u8bb0\u5f55\u4e00\u7bc7\u5427\uff0c\u65f6\u95f4 $n\\sqrt{n}$\uff0c\u7a7a\u95f4\u7ebf\u6027\u3002\n\n[$Link$](https://www.luogu.com.cn/problem/P3157)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6392\u5217\uff0c$m$ \u6b21\u5220\u9664\u64cd\u4f5c\uff0c\u6bcf\u6b21\u67e5\u8be2\u5220\u9664\u5b8c\u540e\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n$1\\leq n \\leq 10^5,1\\leq m\\leq 50000$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u5f00\u5934\u5c31\u8bf4\u4e86\uff0c\u8981\u5199\u5206\u5757\uff0c\u6240\u4ee5\u76f4\u63a5\u8bb2\u5206\u5757\u505a\u6cd5\u3002\n\n\u8003\u8651\u5c06\u5220\u9664\u6539\u63d2\u5165\uff0c\u8003\u8651\u63d2\u5165\u4f1a\u4ea7\u751f\u54ea\u4e9b\u8d21\u732e\uff0c\u56e0\u4e3a\u4fdd\u8bc1\u63d2\u5165\u4f4d\u7f6e\u4e0d\u540c\uff0c\u6240\u4ee5\u6bcf\u6b21\u63d2\u5165\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u5c31\u662f\u5de6\u8fb9\u6bd4\u63d2\u5165\u503c\u5927\u7684\u6570\uff0c\u53f3\u8fb9\u6bd4\u63d2\u5165\u503c\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u6362\u6210\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5927\u4e8e\u6216\u8005\u5c0f\u4e8e $k$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u7531\u4e8e\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u6027\u8d28\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6743\u503c\u6784\u6210\u4e86\u6392\u5217\uff0c\u53ef\u4ee5\u5c06\u5206\u5757\u7684\u7a7a\u95f4\u4f18\u5316\u6210\u7ebf\u6027\u3002\n\n## \u5177\u4f53\u505a\u6cd5\n\n\u5148\u5c06\u503c\u57df\u548c\u5e8f\u5217\u90fd\u5206\u5757\u3002\n\n\u8bbe $pre_{i,j}$ \u8868\u793a\u524d $i$ \u4e2a\u5e8f\u5217\u5757\uff0c\u6743\u503c\u5728\u7b2c $j$ \u4e2a\u503c\u57df\u5757\u7684\u6570\u7684\u4e2a\u6570\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u8fd9\u4e2a\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\u76f4\u63a5 $\\sqrt{n}$ \u679a\u4e3e\u4e00\u904d\u6240\u6709\u5757\u7d2f\u52a0\u8d21\u732e\u5373\u53ef\uff0c\u5355\u70b9\u4fee\u6539\u7684\u5206\u5757\u4e00\u822c\u90fd\u53ef\u4ee5\u5c06\u4fee\u6539\u64cd\u4f5c\u6539\u6210 $\\sqrt{n}$ \u4fee\u6539\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u4ece\u800c\u8ba9\u5355\u6b21\u67e5\u8be2\u4e00\u4e2a\u503c\u57df\u5757\u964d\u5230 $O(1)$\u3002\n\n\u6211\u4eec\u518d\u8bbe\u4e00\u4e2a\u6570\u7ec4 $id_i$ \u8868\u793a\u82e5 $a_x= i $\uff0c\u5219 $id_i = x$\uff0c\u8fd9\u4e2a\u7531\u4e8e $a$ \u662f\u6392\u5217\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4e0d\u91cd\uff0c\u8fd9\u4e2a\u6027\u8d28\u5c31\u53ef\u4ee5\u628a\u666e\u901a\u5206\u5757\u67e5\u8be2\u96f6\u6563\u503c\u57df\u5757\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u6389\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u8003\u8651\u67e5\u8be2\uff0c\u5bf9\u4e8e\u96f6\u6563\u5757\u76f4\u63a5\u66b4\u529b\uff0c\u5bf9\u4e8e\u6574\u5757\uff0c\u6211\u4eec\u518d\u5206\u4e24\u7c7b\u8ba8\u8bba\uff0c\u5148\u679a\u4e3e\u503c\u57df\u5757\uff0c\u5229\u7528\u524d\u7f00\u548c\u53ef\u4ee5\u7ef4\u62a4\u51fa\u6765\u6574\u5757\u533a\u95f4\u5185\uff0c\u6743\u503c\u5728 $j$ \u503c\u57df\u5757\u7684\u6570\u7684\u4e2a\u6570\uff0c\u800c\u5bf9\u4e8e\u96f6\u6563\u6743\u503c\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u5bf9\u5e94\u7684 $id_i$\uff0c\u770b\u5b83\u6240\u5728\u7684\u4f4d\u7f6e\u662f\u5426\u5904\u4e8e\u5f53\u524d\u6574\u5757\u533a\u95f4\u5185\uff0c\u6ce8\u610f\u662f\u6574\u5757\u533a\u95f4\uff0c\u56e0\u4e3a\u96f6\u6563\u5757\u7684\u8d21\u732e\u5df2\u7ecf\u88ab\u7edf\u8ba1\u8fc7\u4e86\u3002\n\n\u518d\u5177\u4f53\u7684\u53ef\u4ee5\u53bb\u770b\u4ee3\u7801\u3002\n\n## Code\n\n\u5355\u4e2a\u6839\u53f7\u8dd1\u4e0d\u8fc7 cdq\uff0c\u56e0\u4e3a\u5e38\u6570\u5dee\u592a\u591a\u4e86\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u505a\u5230\u5728\u7ebf\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5361\u5e38\u6211\u5199\u7684\u63d2\u5165\uff0c\u628a\u63d2\u5165\u64cd\u4f5c\u76f4\u63a5\u6539\u5220\u9664\uff0c\u4fee\u6539\u524d\u7f00\u548c\u7684\u65f6\u5019\u51cf\u6389\u8d21\u732e\u800c\u4e0d\u662f\u52a0\u4e0a\u5c31\u597d\u4e86\uff0c\u5927\u6982\u662f\u5728\u7ebf\u6700\u4f18\u7684\u505a\u6cd5\uff1f\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <queue>\n#define int long long\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nconst int N = 1e5+5;\nconst int SN = 400;\nint del[N],bel[N],L[N],R[N],ans[N],val[N],id[N],res,a[N];\nbool vis[N];\nint n,m;\nint pre[SN][SN];\nint ask1(int l,int r,int val){\n\tint num = 0;\n\tfor(int i=l;i<=r;i++){\n\t\tnum+=(a[i]>val);\n\t}\n\treturn num;\n}\nint ask2(int l,int r,int val){\n\tint num = 0;\n\tfor(int i=l;i<=r;i++){\n\t\tnum+=((a[i]<val)&&(a[i]!=0));\n\t}\n\treturn num;\n}\nint qmax(int l,int r,int val){\n\tif(l>r){\n\t\treturn 0;\n\t}\n\tint num = 0;\n\tif(bel[l]==bel[r]){\n\t\tnum = ask1(l,r,val);\n\t}else{\n\t\tnum+=ask1(l,R[bel[l]],val);\n\t\tnum+=ask1(L[bel[r]],r,val);\n\t\tint lx = bel[l],rx = bel[r]-1;\n\t\tfor(int i=bel[n];i>bel[val];i--){\n\t\t\tnum+=pre[rx][i]-pre[lx][i];\n\t\t}\n\t\tfor(int i=val+1;i<=R[bel[val]];i++){\n\t\t\tnum+=((id[i]>=L[lx+1])&&(id[i]<=R[rx])&&(a[id[i]]));\n\t\t}\n\t}\n\treturn num;\n}\nint qmin(int l,int r,int val){\n\tif(l>r){\n\t\treturn 0;\n\t}\n\tint num = 0;\n\tif(bel[l]==bel[r]){\n\t\tnum = ask2(l,r,val);\n\t}else{\n\t\tnum+=ask2(l,R[bel[l]],val);\n\t\tnum+=ask2(L[bel[r]],r,val);\n\t\tint lx = bel[l],rx = bel[r]-1;\n\t\tfor(int i=1;i<bel[val];i++){\n\t\t\tnum+=pre[rx][i]-pre[lx][i];\n\t\t}\n\t\tfor(int i=L[bel[val]];i<val;i++){\n\t\t\tnum+=((id[i]>=L[lx+1])&&(id[i]<=R[rx])&&(a[id[i]]));\n\t\t}\n\t}\n\treturn num;\n}\nvoid ins(int id,int num){\n\tres+=qmax(1,id-1,num); \n\tres+=qmin(id+1,n,num);\n\tvis[num] = 0;\n\ta[id] = num;\n\tfor(int i=bel[id];i<=bel[n];i++){\n\t\tpre[i][bel[num]]++;\n\t}\n}\nsigned main(){\n\tn = read();m = read();\n\tint siz = sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\tval[i] = read();\n\t\tid[val[i]] = i; \n\t\tbel[i] = (i-1)/siz+1;\n\t\tif(!L[bel[i]]){\n\t\t\tL[bel[i]] = i;\n\t\t}\n\t\tR[bel[i]] = i;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tdel[i] = read();\n\t\tvis[del[i]] = 1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis[val[i]]){\n\t\t\tins(i,val[i]);\n\t\t}\n\t}\n\tfor(int i=m;i>=1;i--){\n\t\tins(id[del[i]],del[i]);\n\t\tans[i] = res;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tcout<<ans[i]<<\"\\n\";\n\t}\n\treturn 0;\n}\n```\n\u540e\u8bb0\uff0c\u4e0d\u4fdd\u8bc1\u662f\u4e2a\u6392\u5217\u5e94\u8be5\u4e5f\u80fd\u505a\uff0c\u628a\u539f\u5e8f\u5217\u79bb\u6563\u5316\u7279\u6b8a\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002",
        "postTime": 1674648121,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P3157 [CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u6253\u7684\u7b2c\u4e00\u9053\u5e26\u4fee\u4e3b\u5e2d\u6811\uff08\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\uff09\u7684\u9898\u3002\u5728\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u600e\u4e48\u505a\u3002\n\n---\n\u5148\u8003\u8651\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6c42\u9006\u5e8f\u5bf9\uff1a\n\n\u7ef4\u62a4\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u4ece\u524d\u5f80\u540e\u63d2\u5165\u3002\n\n\u63d2\u5165\u7b2c $i$ \u4e2a\u6570\u524d\uff0c\u5148\u770b\u5f53\u524d\u7ebf\u6bb5\u6811\u6709\u51e0\u4e2a\u5927\u4e8e $a[i]$ \u7684\u6570\u3002\uff08\u4e5f\u5c31\u662f\u524d $i-1$ \u4e2a\u6570\u4e2d\u5927\u4e8e\u7b2c $i$ \u4e2a\u6570\u7684\u4e2a\u6570\uff09\u8fd9\u4e2a\u53ef\u4ee5\u5728\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\u63a5\u4e0b\u6765\u628a $a[i]$ \u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u4e2d\u3002\n\n\u8003\u8651\u5220\u9664\u600e\u4e48\u505a\uff1a\n\n\u5f88\u660e\u663e\u7684\u601d\u8def\u5c31\u662f\u5220\u9664\u7b2c $i$ \u4e2a\u6570\u65f6\uff0c\u628a\u7b54\u6848\u51cf\u53bb\u524d $i-1$ \u4e2a\u6570\u4e2d\u5927\u4e8e $a[i]$ \u7684\u4e2a\u6570\uff0c\u518d\u51cf\u53bb\u540e $n-i$ \u4e2a\u6570\u4e2d\u5c0f\u4e8e $a[i]$ \u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u5e94\u8be5\u662f\u9759\u6001\u4e3b\u5e2d\u6811\u53ef\u4ee5\u5b8c\u6210\u7684\u3002\n\n\u4f46\u662f\u4f1a\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\uff1a\u5982\u679c\u9006\u5e8f\u5bf9 $(i,j)$ \u4e2d $a[i]$ \u548c $a[j]$ \u90fd\u88ab\u5220\u6389\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u5c31\u4f1a\u88ab\u51cf\u6389\u4e24\u6b21\uff01\n\n\u6240\u4ee5\u9700\u8981\u4ece\u4e3b\u5e2d\u6811\u4e2d\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u8fd9\u6837\u4ee5\u540e\u7edf\u8ba1\u90fd\u4e0d\u4f1a\u7edf\u8ba1\u5230\u5b83\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u91cd\u590d\u4e86\u3002\n\n\u4ece\u4e3b\u5e2d\u6811\u5220\u6389\u4e00\u4e2a\u6570\uff1f\u96be\u9053\u8981\u5bf9\u540e\u9762\u7684\u7248\u672c\u66b4\u529b\u4fee\u6539\uff1f\u4e0d\u3002\u5b9e\u9645\u4e0a\u4e3b\u5e2d\u6811\u7684\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8981\u52a8\u6001\u7ef4\u62a4\u524d\u7f00\u548c\uff0c\u4f18\u5148\u7528\u5e38\u6570\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u5566\uff01\n\n\u90a3\u4e48\u7528\u6811\u72b6\u6570\u7ec4\u5957\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u5c31\u80fd $O((n+m)\\log^2n)$ \u4e86\u3002\u6ce8\u610f\uff0c\u5185\u5c42\u6ca1\u6cd5\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u5e38\u6570\uff0c\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u52a8\u6001\u5f00\u70b9\u3002\n\n\uff08\u5176\u5b9e\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6781\u9650\u60c5\u51b5\u4e5f\u4f1a\u8d85\u8fc7 128M\uff0c\u4f46\u662f\u4e0d\u4f1aCDQ\u5206\u6cbb\u7684\u505a\u6cd5\u554a\u2026\u2026\uff09\n\n---\n\u4e0b\u9762\u662f\u4ee3\u7801\u3002\uff08\u4eba\u4e11\u81ea\u5e26\u5927\u5e38\u6570\uff0c\u8981\u5f00O2\u624d\u80fd\u8fc7\uff0c\u6700\u5927\u7684\u70b9700+ms\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=100010;\n#define PB push_back\n#define MP make_pair\n#define lson o<<1,l,mid\n#define rson o<<1|1,mid+1,r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\n#define ROF(i,a,b) for(int i=(a);i>=(b);i--)\n#define MEM(x,v) memset(x,v,sizeof(x))\ninline int read(){\n\tchar ch=getchar();int x=0,f=0;\n\twhile(ch<'0' || ch>'9') f|=ch=='-',ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nint n,m,cnt,a[maxn],rt[maxn],id[maxn],ch[maxn*300][2],sum[maxn*300];\nll ans;\nvoid update(int &x,int l,int r,int p,int v){\t//\u63d2\u5165\n\tif(!x) x=++cnt;sum[x]+=v;\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(mid>=p) update(ch[x][0],l,mid,p,v);\n\telse update(ch[x][1],mid+1,r,p,v);\n}\nint query_small(int x,int l,int r,int k){\t//\u6bd4k\u5c0f\u7684\n\tif(!x) return 0;\n\tif(r<k) return sum[x];\t//\u6574\u4e2a\u533a\u95f4\u5728k\u5de6\u8fb9\uff0c\u76f4\u63a5\u8fd4\u56de\n\tint mid=(l+r)>>1,ans=0;\n\tans+=query_small(ch[x][0],l,mid,k);\t//\u4e00\u5b9a\u6709\u4ea4\u96c6\n\tif(mid<k) ans+=query_small(ch[x][1],mid+1,r,k);\t//\u4e0e\u5de6\u534a\u8fb9\u6709\u5e76\u96c6\n\treturn ans;\n}\nint query_big(int x,int l,int r,int k){\t//\u6bd4k\u5927\u7684\n\tif(!x) return 0;\n\tif(l>k) return sum[x];\n\tint mid=(l+r)>>1,ans=0;\n\tans+=query_big(ch[x][1],mid+1,r,k);\n\tif(mid>=k) ans+=query_big(ch[x][0],l,mid,k);\n\treturn ans;\n}\nvoid modify(int p,int v,int w){\t//\u628a\u7b2cp\u4e2a\u4f4d\u7f6e\u63d2\u5165/\u5220\u9664v\n\tfor(int i=p;i<=n;i+=i&-i) update(rt[i],1,n,v,w);\n}\nint query_small(int p,int v){\t//\u524dp\u4e2a\u6570\u4e2d\u6bd4v\u5c0f\u7684\n\tint ans=0;\n\tfor(int i=p;i;i-=i&-i) ans+=query_small(rt[i],1,n,v);\n\treturn ans;\n}\nint query_big(int p,int v){\t//\u524dp\u4e2a\u6570\u4e2d\u6bd4v\u5927\u7684\n\tint ans=0;\n\tfor(int i=p;i;i-=i&-i) ans+=query_big(rt[i],1,n,v);\n\treturn ans;\n}\nint main(){\n\tn=read();m=read();\n\tFOR(i,1,n) id[a[i]=read()]=i,ans+=query_big(i-1,a[i]),modify(i,a[i],1);\t//\u7b97\u4e00\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\n\tFOR(i,1,m){\n\t\tprintf(\"%lld\\n\",ans);\n\t\tint x=read();\n\t\tans-=query_big(id[x]-1,x)+query_small(n,x)-query_small(id[x]-1,x);\t//\u51cf\u53bb\u524d\u9762\u5927\u4e8e\u4ed6\u7684\uff0c\u51cf\u53bb\u540e\u9762\u5c0f\u4e8e\u4ed6\u7684\n\t\tmodify(id[x],x,-1);\t//\u4ece\u4e3b\u5e2d\u6811\uff08\uff1f\uff09\u4e2d\u5220\u6389\n\t}\n}\n```",
        "postTime": 1544779683,
        "uid": 72118,
        "name": "AThousandSuns",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "cdq\u5206\u6cbb+\u6811\u72b6\u6570\u7ec4\n\u8003\u8651\u4e00\u4e2a\u6570\u7684\u5220\u9664\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\uff1f\n\u663e\u7136\u7b54\u6848\u4f1a\u51cf\u53bb\u5728\u8fd9\u4e2a\u6570\u5de6\u8fb9\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u4e2a\u6570\u548c\u5728\u8fd9\u4e2a\u6570\u53f3\u8fb9\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u4e2a\u6570\u548c\uff0c\u800c\u8fd9\u5c31\u662fcdq\u7684\u67e5\u8be2\u64cd\u4f5c\u4e2d\u8981\u67e5\u8be2\u7684\u4e1c\u897f\u3002\n\u800c\u5220\u9664\u64cd\u4f5c\u8981\u600e\u4e48\u5b9e\u73b0\uff1f\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u662f\u628a\u6743\u503c\u5f53\u505a\u4e0b\u6807\uff0c\u5b58\u50a8\u7684\u503c\u662f\u4e2a\u6570\uff0c\u5c06\u4e4b\u4f5c\u4e3a\u4e00\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u628a\u76f8\u5e94\u7684\u6743\u503c\u5bf9\u5e94\u7684\u4e2a\u6570\u51cf\u53bb1\u5373\u53ef\uff08\u521d\u59cb\u5e8f\u5217\u5c31\u662f\u770b\u6210\u76f8\u5e94\u6743\u503c\u5bf9\u5e94\u7684\u4e2a\u6570\u52a01 \u7684\u4fee\u6539\u64cd\u4f5c\uff09\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u5f00long long\n```cpp\n#include<cstdio>\nlong long ans[50005],s,sum[100005];\nint n,a[100005],m,pos[100005];\nstruct node{int x,y,id,cnt;}q[200005],p[200005],qq[200005];\nint lowbit(int x){return x&(-x);}\nint query(int x){int ans=0;for(;x>0;x-=lowbit(x))ans+=sum[x];return ans;}\nvoid add(int x,int y){for(;x<=n;x+=lowbit(x))sum[x]+=y;} \nvoid cdq(int l,int r)\n{\n\t//\u5de6\u8fb9\u6bd4\u5b83\u5927\u7684\u4e2a\u6570 \n\tif(l==r)return;int mid=l+r>>1,i,j,cnt=l-1;\n\tcdq(l,mid);cdq(mid+1,r);\n\tfor(i=l,j=mid+1;i<=mid&&j<=r;)\n\t if(q[i].x<q[j].x)\n\t {\n\t \tif(!q[i].id)add(q[i].y,q[i].cnt);\n\t \tp[++cnt]=q[i++];\n\t }else\n\t {\n\t \tif(q[j].id)ans[q[j].id]+=query(n)-query(q[j].y);\n\t \tp[++cnt]=q[j++];\n\t }\n\twhile(j<=r)\n\t{if(q[j].id)ans[q[j].id]+=query(n)-query(q[j].y);p[++cnt]=q[j++];} \n\tfor(int k=l;k<i;k++)if(!q[k].id)add(q[k].y,-q[k].cnt);\n\twhile(i<=mid)p[++cnt]=q[i++];cnt=l-1;\n\tfor(int k=l;k<=r;k++)q[k]=p[k];\n\t//\u53f3\u8fb9\u6bd4\u5b83\u5c0f\u7684\u6570 \n\tfor(i=l,j=mid+1;i<=mid&&j<=r;)\n\t if(qq[i].x>qq[j].x)\n\t {\n\t \tif(!qq[i].id)add(qq[i].y,qq[i].cnt);\n\t \tp[++cnt]=qq[i++];\n\t }else\n\t {\n\t \tif(qq[j].id)ans[qq[j].id]+=query(qq[j].y-1);\n\t \tp[++cnt]=qq[j++];\n\t }\n\twhile(j<=r)\n\t{if(qq[j].id)ans[qq[j].id]+=query(qq[j].y-1);p[++cnt]=qq[j++];} \n\tfor(int k=l;k<i;k++)if(!qq[k].id)add(qq[k].y,-qq[k].cnt);\n\twhile(i<=mid)p[++cnt]=qq[i++];\n\tfor(int k=l;k<=r;k++)qq[k]=p[k];\n}\nvoid merge(int l,int r)//\u5f52\u5e76\u6392\u5e8f\u7b97\u521d\u59cb\u9006\u5e8f\u5bf9\u6570\n{\n\tif(l==r)return;int mid=l+r>>1,i,j,cnt=l-1;\n\tmerge(l,mid);merge(mid+1,r);\n\tfor(i=l,j=mid+1;i<=mid&&j<=r;)\n\t if(a[i]<a[j])q[++cnt].x=a[i++];\n\t else{s+=mid-i+1;q[++cnt].x=a[j++];}\n\twhile(i<=mid)q[++cnt].x=a[i++];\n\twhile(j<=r)q[++cnt].x=a[j++];\n\tfor(int k=l;k<=r;k++)a[k]=q[k].x;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);int cnt=n;\n\tfor(int i=1;i<=n;q[i].x=i,q[i].cnt=1,qq[i]=q[i],i++)\n\t scanf(\"%d\",&q[i].y),pos[q[i].y]=i,a[i]=q[i].y;\n\tfor(int i=1,x;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&x);++cnt;\n\t\tq[cnt]=qq[cnt]=(node){pos[x],x,i,0};cnt++;\n\t\t//\u67e5\u8be2\u64cd\u4f5c\n\t\tq[cnt]=qq[cnt]=(node){pos[x],x,0,-1};\n        //\u4fee\u6539\u64cd\u4f5c\n\t}\n\tcdq(1,cnt);merge(1,n);\n\tfor(int i=1;i<=m;i++)printf(\"%lld\\n\",s),s-=ans[i];\n}\n```",
        "postTime": 1526991819,
        "uid": 13183,
        "name": "\u58a8\u5c14",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1acdq\u5206\u6cbb...\u5199\u7684\u6811\u72b6\u6570\u5957\u6743\u503c\u7ebf\u6bb5\u6811,\u636e\u8bf4\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\u4e5f\u53ef\u4ee5\u5361\u8fc7\u867d\u7136\u542c\u8bf4\u5f88\u591a\u5de8\u4f6c\u88ab\u5361\u6811\u4e0a\u4e0b\u4e0d\u6765...\n\n\u5982\u679c\u6570x\u88ab\u5220\u6389\u4e86,\u90a3\u4e48\u4ed6\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u662f\u5728x\u524d\u9762\u6bd4\u4ed6\u5927\u7684\u6570+\u5728x\u540e\u9762\u6bd4\u4ed6\u5c0f\u7684\u6570\n\u5177\u4f53\u6765\u8bb2\u9884\u5904\u7406\u51fa\u539f\u6570\u7ec4\u7684\u8fd9\u4e24\u4e2a\u5173\u7cfb,\u6bcf\u6b21\u5220\u6389\u4e00\u4e2a\u6570\u51cf\u6389\u76f8\u5e94\u7684\u503c\u5c31\u597d,\u4f46\u662f\u5220\u6389\u7684\u6570\u4e4b\u95f4\u4f1a\u6784\u6210\u9006\u5e8f\u5bf9,\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u591a\u51cf\u4e86.\u4e8e\u662f\u518d\u6c42\u4e00\u6b21\u8fd9\u6b21\u5220\u6389\u7684\u6570x\u548c\u4e4b\u524d\u5220\u6389\u7684\u6570\u7ec4\u6210\u7684\u9006\u5e8f\u5bf9\u5c31\u597d\u4e86\n\n\u53c2\u8003\u4e86\u5de8\u4f6chzwer\u7684\u5199\u6cd5\n\n\u67e5\u8be2\u4e24\u6b21,\u6bcf\u6b21\u76f4\u63a5\u4e8c\u5206\u6743\u503c.\n\n\u4f8b\u5982\u5f80\u524d\u67e5\u8be2\u7684\u65f6\u5019,\u5982\u679cx<=mid \u90a3\u4e48tmp\u52a0\u4e0a\u53f3\u533a\u95f4\u7684\u6570 \u5f80\u540e\u4e5f\u662f\u4e00\u6837\u7684\n``` c++\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define rint register \n#define rep(i,x,y) for(rint int i=x;i<=y;++i)\n#define repd(i,x,y) for(rint int i=x;i>=y;--i)\n#define lowbit(x) x&(-x)\n#define ll long long\nusing namespace std;\nconst int N=5e4+7;\nconst int M=N*400;\nll tr[M],a1[N<<1],a2[N<<1],ans;\nint ls[M],rs[M],root[N<<1],nm[N<<1],t[N<<1],pos[N<<1];\nint L[30],R[30],llen,rlen,n,m,cnt;\ntemplate <typename T>inline void read(T &x){\n\tchar c;x=0;int sign=1;\n\tdo{c=getchar(); if(c=='-')sign=-1;}while(c<'0'||c>'9');\n\tdo{x=x*10+c-'0'; c=getchar();}while(c>='0'&&c<='9');\n\tx*=sign;\n}\ninline void add(int &x){for(rint int i=x;i<=n;i+=lowbit(i))t[i]++;}\ninline int query(int &x){int ans=0;for(rint int i=x;i;i-=lowbit(i))ans+=t[i];return ans;}\ninline void update(int &o,int l,int r,int x){\n\tif(!o)o=++cnt;tr[o]++;\n\tif(l==r)return ;\n\tint mid=l+r>>1;\n\tif(x<=mid)update(ls[o],l,mid,x);\n\telse update(rs[o],mid+1,r,x);\n}\ninline ll queryl(int a,int b,int k){\n\tint l=1,r=n;ll tmp=0;a--;llen=rlen=0;\n\tfor(rint int i=a;i;i-=lowbit(i))L[++llen]=root[i];\n\tfor(rint int i=b;i;i-=lowbit(i))R[++rlen]=root[i];\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(k<=mid){\n\t\t\trep(i,1,llen)tmp-=tr[rs[L[i]]],L[i]=ls[L[i]];\n\t\t\trep(i,1,rlen)tmp+=tr[rs[R[i]]],R[i]=ls[R[i]];\n\t\t\tr=mid;\n\t\t}\n\t\telse {rep(i,1,llen)L[i]=rs[L[i]];rep(i,1,rlen)R[i]=rs[R[i]];l=mid+1;}\n\t}\n\treturn tmp;\n}\ninline ll queryr(int a,int b,int k){\n\tint l=1,r=n;ll tmp=0;a--;llen=rlen=0;\n\tfor(rint int i=a;i;i-=lowbit(i))L[++llen]=root[i];\n\tfor(rint int i=b;i;i-=lowbit(i))R[++rlen]=root[i];\n\twhile(l<r){\n\t\tint mid=l+r>>1;\n\t\tif(k>mid){\n\t\t\trep(i,1,llen)tmp-=tr[ls[L[i]]],L[i]=rs[L[i]];\n\t\t\trep(i,1,rlen)tmp+=tr[ls[R[i]]],R[i]=rs[R[i]];\n\t\t\tl=mid+1;\n\t\t}\n\t\telse {rep(i,1,llen)L[i]=ls[L[i]];rep(i,1,rlen)R[i]=ls[R[i]];r=mid;}\n\t}\n\treturn tmp;\n}\ninline void init(){\n\tread(n);read(m);\n\trep(i,1,n){\n\t\tread(nm[i]);pos[nm[i]]=i;add(nm[i]);\n\t\ta1[i]=i-query(nm[i]);\n\t\tans+=a1[i];\n\t}\n\tmemset(t,0,sizeof(t));\n\trepd(i,n,1){add(nm[i]);a2[i]=query(nm[i])-1;}\n}\ninline void solve(){\n\twhile(m--){\n\t\tint x;read(x);x=pos[x];\n\t\tprintf(\"%lld\\n\",ans);\n\t\tans-=a1[x]+a2[x]-queryl(1,x-1,nm[x])-queryr(x+1,n,nm[x]);\n\t\tfor(rint int i=x;i<=n;i+=lowbit(i))update(root[i],1,n,nm[x]);\n\t}\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1524813104,
        "uid": 46982,
        "name": "Angora",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6211\u77e5\u9053\u8fd9\u9898\u6709\u5f88\u591a\u9898\u89e3\u4e86 \u4f46\u662f\u6211\u770b\u4e86\u5f88\u4e45\u4e5f\u6ca1\u770b\u660e\u767d \u81ea\u5df1\u8c03\u4e86\u534a\u5929\u624d\u8fc7\n\n\u9996\u5148\u8fd9\u9053\u9898\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u5217 \u652f\u6301\u67e5\u8be2\u4e00\u4e2a\u6570\u4e4b\u524d\u6709\u591a\u5c11\u6bd4\u4ed6\u5927\u7684\u548c\u4ed6\u4e4b\u540e\u6709\u591a\u5c11\u6bd4\u4ed6\u5c0f\u7684 \u4ee5\u53ca\u5220\u9664\u4e00\u4e2a\u6570\n\n\u5982\u679c\u6ca1\u6709\u5220\u9664 \u6211\u4eec\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4 \u4ece\u6bcf\u9897\u4e3b\u5e2d\u6811\u7684root[i]\u8fdb\u53bb\u53ef\u4ee5\u8bbf\u95ee\u5230\u533a\u95f4\u4e3a1-i\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u8fd9\u76f8\u5f53\u4e8e\u7ef4\u62a41-i\u7684\u524d\u7f00\u548c\u3002\u7c7b\u6bd4\u5e8f\u5217 \u5982\u679c\u6211\u4eec\u52a0\u4e0a\u4e86\u5220\u9664\u64cd\u4f5c \u6211\u4eec\u5c31\u9700\u8981\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u4e86 \u6811\u72b6\u6570\u7ec4\u4e2di\u7ef4\u62a4\u4e86i-lowbit(i)\u5230i\u7684\u548c\u3002\u90a3\u4e48\u5728\u8fd9\u9053\u9898\u4e2d \u4eceroot[i]\u8fdb\u53bb\u5c31\u5e94\u8be5\u8bbf\u95ee\u5230\u533a\u95f4\u4e3ai-lowbit(i)\u5230i\u7684\u6743\u503c\u7ebf\u6bb5\u6811 \u8fd9\u6837\u7684\u8bdd \u5220\u9664\u548c\u8be2\u95ee\u5c31\u53ef\u4ee52\u4e2alog\u505a\u51fa\u6765\u4e86\n\n\u53e6\u5916\u8fd9\u9898\u7a7a\u95f4\u5f88\u7384\u5b66 \u6309\u7167\u4e0a\u9762\u7684\u7b97\u6cd5 \u6bcf\u4e2a\u70b9\u5b58log\u904d \u5b58\u4e00\u904d\u8981log\u4e2a\u70b9 \u7a7a\u95f4\u590d\u6742\u5ea6\u662fnlog^2n \u5c31MLE\u4e86 \u4f46\u662f\u521a\u624d\u90a3\u4e48\u7b97\u660e\u663e\u591a\u7b97\u4e86\u4e00\u4e9b \u5b9e\u9645\u4e0a \u6570\u7ec4\u5f001000w\u5c31\u884c\u4e86\n\n~~~cpp\n#include<iostream>\nusing namespace std;\nint ls[10000010],rs[10000010],cnt[10000010],n,a[100010],q,root[100010],b[100010],shu[100010],num;\nlong long ans;\nint lowbit(int x)\n{\n    return x&(-x);\n} \nvoid add0(int x,int v)\n{\n     while(x<=n)\n     {\n         shu[x]+=v;\n         x+=lowbit(x);\n     }\n}\nlong long sum0(int x)\n{\n    long long s0=0;\n    while(x>0)\n    {\n        s0+=shu[x];\n        x-=lowbit(x);\n    }\n    return s0;\n}\nint query0(int x,int y)\n{\n    return sum0(y)-sum0(x-1);\n}\nvoid update(int l,int r,int &now,int val)\n{\n     if(now==0) now=++num;\n     cnt[now]++;\n     if(l==r) return;\n     int m=(l+r)/2;\n     if(val<=m) update(l,m,ls[now],val);\n     else update(m+1,r,rs[now],val);\n}\nint countda(int l,int r,int now,int v)\n{\n    //cout<<l<<\" \"<<r<<\" \"<<now<<\" \"<<v<<\" \"<<rs[now]<<\" \"<<cnt[rs[now]]<<endl; \n    if(now==0)return 0;\n    if(l==r)\n     if(v<l) return cnt[now];\n     else return 0;\n    int m=(l+r)/2;\n    if(v>m) return countda(m+1,r,rs[now],v);\n    return cnt[rs[now]]+countda(l,m,ls[now],v);\n}\nint queryda(int x,int y,int v)\n{\n    if(x>y) return 0;\n    int tt=0;\n    x--;\n    while(y>0)  \n    {\n        tt+=countda(1,n,root[y],v);\n        y-=lowbit(y);\n    }\n    while(x>0)\n    {\n        tt-=countda(1,n,root[x],v);\n        x-=lowbit(x);\n    }\n    return tt;\n}\nint countxiao(int l,int r,int now,int v)\n{\n    if(now==0) return 0;\n    //if(v==1) cout<<l<<\" \"<<r<<\" \"<<now<<\" \"<<v<<endl;\n    if(l==r) \n     if(v>l) return cnt[now];\n     else return 0;\n    int m=(l+r)/2;\n    if(v<=m) return countxiao(l,m,ls[now],v);\n    return cnt[ls[now]]+countxiao(m+1,r,rs[now],v);\n}\nint queryxiao(int x,int y,int v)\n{\n    if(x>y) return 0;\n    int tt=0;\n    x--;\n    while(y>0)  \n    {\n        tt+=countxiao(1,n,root[y],v);\n        y-=lowbit(y);\n    }\n    while(x>0)\n    {\n        tt-=countxiao(1,n,root[x],v);\n        x-=lowbit(x);\n    }\n    return tt;\n}\nvoid del(int l,int r,int now,int v)\n{\n     if(now==0) return;\n     cnt[now]--;\n     if(l==r) return;\n     int m=(l+r)/2;\n     if(v<=m) del(l,m,ls[now],v);\n     else del(m+1,r,rs[now],v);\n}\nvoid shanchu(int x,int v)\n{\n     while(x<=n)\n     {\n         del(1,n,root[x],v);\n         x+=lowbit(x);\n     }\n}                                      \nint main()\n{\n    int i,t0,j;\n    cin>>n>>q;\n    for(i=1;i<=n;i++) \n    {\n        cin>>a[i];\n        ans+=query0(a[i]+1,n);//\u6c42\u521d\u59cb\u9006\u5e8f\u5bf9\n        add0(a[i],1);\n        b[a[i]]=i;\n        for(j=i-lowbit(i)+1;j<=i;j++) update(1,n,root[i],a[j]);//\u63d2\u5165\n    }\n    for(i=1;i<=q;i++)\n    {\n        cin>>t0;\n        cout<<ans<<endl;\n        ans-=(long long)queryda(1,b[t0]-1,t0)+queryxiao(b[t0]+1,n,t0);//\u8ba1\u7b97\n        shanchu(b[t0],t0);//\u5220\u9664\n    }\n    system(\"pause\");\n    return 0;\n}\n        \n        \n    \n~~~",
        "postTime": 1522904142,
        "uid": 31476,
        "name": "\u6211\u6ca1\u6709\u540d\u79f0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "~~\u6b64\u9898\u53ef\u4ee5\u5341\u5206\u7b80\u5355\u7c97\u66b4\u5730\u5957\u7528\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\u7684\u6a21\u677f\u3002~~\n\n\u6216\u8005\uff1acdq\u5206\u6cbb\u3002\n\n\n\u6b64\u9898\u4e2d\uff0c\u539f\u5148\u7ed9\u51fa\u4e00\u4e2a\u6570\u5217\uff0c\u4e4b\u540e\u4f1a\u5220\u9664\u4e00\u4e9b\u6570\u3002\u4f46\u662f\uff0c\u5443\uff0c\u5220\u9664\u64cd\u4f5c\u597d\u50cf\u6709\u70b9\u513f\u9ebb\u70e6\u3002\u53cd\u6b63\u5141\u8bb8\u79bb\u7ebf\uff0c\u90a3\u5c31\u5f53\u4f5c\u662f\u521d\u59cb\u7ed9\u51fa\u4e00\u4e9b\u6570\uff0c\u5148\u628a\u8fd9\u4e9b\u6570\u52a0\u5165\u5e8f\u5217\uff0c\u4e4b\u540e\u4f1a\u518d\u6dfb\u52a0\u4e00\u4e9b\u6570\u3002\u4e5f\u5c31\u662f\u5168\u90e8**\u53cd\u8fc7\u6765\u7b97**\u3002\n\n\n\u53ef\u4ee5\u628a\u6bcf\u6b21\u7684\u7b54\u6848\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1a**\u539f\u5148\u5b58\u5728\u7684\u9006\u5e8f\u5bf9+\u52a0\u5165\u8fd9\u4e2a\u6570\u65b0\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9**\uff0c\u90a3\u4e48\u6bcf\u6b21\u53ea\u8981\u7b97\u51fa\u5f53\u524d\u65b0\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\uff0c\u6700\u540e\u7b97\u4e00\u904d\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\n\u52a0\u5165\u8fd9\u4e2a\u6570\u65b0\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u4e5f\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1a**\u4f4d\u7f6e\u9760\u524d\u4e14\u503c\u6bd4\u5b83\u5927\u7684\uff0c\u4f4d\u7f6e\u9760\u540e\u4e14\u6bd4\u5b83\u5c0f\u7684**\u3002\u90a3\u4e48\u603b\u5171\u6709\u4e09\u79cd\u64cd\u4f5c\uff0c(1)\u5f80\u5e8f\u5217\u7684\u67d0\u4e2a\u4f4d\u7f6e\u52a0\u5165\u4e00\u4e2a\u6570\uff0c(2)\u67e5\u8be2\u6bd4\u67d0\u4e2a\u6570\u4f4d\u7f6e\u9760\u524d\u4e14\u503c\u6bd4\u5b83\u5927\u7684\u6570\u91cf\uff0c(3)\u67e5\u8be2\u6bd4\u67d0\u4e2a\u6570\u4f4d\u7f6e\u9760\u540e\u4e14\u503c\u6bd4\u5b83\u5c0f\u7684\u6570\u91cf\u3002\u663e\u7136\uff0c\u6839\u636e\u7ed9\u51fa\u7684\u5220\u9664\u987a\u5e8f\uff0c\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5148\u540e\u987a\u5e8f\uff0c\u5373\u6bcf\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u3002\u8981\u5728cdq\u5206\u6cbb\u4e4b\u524d\uff0c**\u8981\u5148\u6309\u64cd\u4f5c\u7684\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\u3002\n\n\n\u5728cdq\u5206\u6cbb\u4e2d\uff0c\u6bcf\u6b21\u4f1a\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u5e8f\u5217\u3002\u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u5982\u679c\u8981\u67e5\u8be2\u4f4d\u7f6e\u9760\u524d\u4e14\u6bd4\u5b83\u5927\u7684\uff0c**\u5c31\u8981\u5148\u6267\u884c\u4f4d\u7f6e\u9760\u524d\u7684\u64cd\u4f5c\uff0c\u4f4d\u7f6e\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u5148\u6267\u884c\u52a0\u5165\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u503c**\uff0c\u4e5f\u5c31\u662f\u8bf4cdq\u5206\u6cbb\u7ed3\u675f\u4ee5\u540e\uff0c\u6240\u6709\u64cd\u4f5c\u5c06\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u6392\u597d\u3002\u8fd9\u6837\u4e0d\u65b9\u4fbf\u67e5\u8be2\u4f4d\u7f6e\u9760\u540e\u4e14\u6bd4\u5b83\u5c0f\u7684\u3002\n\n\n\u90a3\u4e48\uff0c\u8003\u8651\u628a\u6240\u6709\u7684\u64cd\u4f5c\u5206\u6210\u4e92\u4e0d\u5f71\u54cd\u7684\u4e24\u7ec4\u64cd\u4f5c\uff0c**\u7b2c\u4e00\u7ec4\uff1a\u6240\u6709\u7684\u64cd\u4f5c(1)\u548c\u64cd\u4f5c(2)\u3002\u7b2c\u4e8c\u7ec4\uff1a\u6240\u6709\u7684\u64cd\u4f5c(1)\u548c\u64cd\u4f5c(3)**\u3002\u4e24\u7ec4\u64cd\u4f5c\u5206\u522b\u5148\u6309\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7b2c\u4e8c\u7ec4\u64cd\u4f5c\u5728cdq\u5206\u6cbb\u7684\u65f6\u5019\uff0c**\u5148\u6267\u884c\u503c\u5c0f\u7684\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u4f4d\u7f6e**\u3002\n\n\n\u6700\u540e\u628a\u4e24\u7ec4\u64cd\u4f5c\u6240\u5f97\u7ed3\u679c\u7d2f\u8ba1\uff0c\u5c31\u5f97\u5230\u4e86\u6bcf\u6b21\u7b54\u6848\u7684**\u52a0\u5165\u8fd9\u4e2a\u6570\u65b0\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9**\u8fd9\u4e00\u90e8\u5206\u3002\n\n\n~~\u4ee3\u7801\u5efa\u8bae\u81ea\u5df1\u5b8c\u6210\uff0c\u5b9e\u5728\u4e0d\u884c\u7684\u8bdd\uff0c\u4e0b\u9762\u90a3\u4e2a\u4ee3\u7801\u51d1\u5408\u7740\u770b\u5427QAQ~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define lowbit(x) (x&(-x))\ninline int getint()//\u8bfb\u5165\u4f18\u5316 \n{\n    char ch;\n    int res=0;\n    while(ch=getchar(),ch<'0'||ch>'9');\n    res=ch-48;\n    while(ch=getchar(),ch>='0'&&ch<='9')\n    res=res*10+ch-48;\n    return res;\n}\nconst int e=3e5+5;\nstruct point\n{\n    int id,v,t,opt,k;\n}a[e],t[e],b[e];//id\u662f\u4f4d\u7f6e\uff0cv\u662f\u6570\u503c\u3002k\u5176\u5b9e\u6ca1\u4ec0\u4e48\u7528\uff0c\u7136\u800c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5199\u8fdb\u53bb\u4e86\u3002a\uff0cb\u4e3a\u4e24\u7ec4\u64cd\u4f5c\nint n,m,real[e],c[e],cnt,num;\nbool vis[e];\nlong long ans[e];//\u9006\u5e8f\u5bf9\u603b\u6570\u53ef\u80fd\u8d85\u8fc7int\u8303\u56f4\ninline bool cmp(const point &a,const point &b)//\u6392\u5e8f \n{\n    return a.t<b.t||(a.t==b.t&&a.opt<b.opt);//t\u662f\u65f6\u95f4\uff0copt=1\u4e3a\u52a0\u5165\u64cd\u4f5c\uff0copt=2\u4e3a\u8be2\u95ee\u64cd\u4f5c\n}\ninline void init(int x)//\u6811\u72b6\u6570\u7ec4\u6e05\u96f6 \n{\n    while(x<=n)\n    {\n        c[x]=0;\n        x+=lowbit(x);\n    }\n}\ninline void add(int x,int d)//\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\n{\n    while(x<=n)\n    {\n        c[x]+=d;\n        x+=lowbit(x);\n    }\n}\ninline int query(int x)//\u6811\u72b6\u6570\u7ec4\u524d\u7f00\u548c\u67e5\u8be2\n{\n    int res=0;\n    while(x)\n    {\n        res+=c[x];\n        x-=lowbit(x);\n    }\n    return res;\n}\ninline void solve(int l,int r)//\u7b2c\u4e00\u7ec4\u5206\u6cbb \n{\n    if(l==r)return;\n    int mid=(l+r)/2,id1=l,id2,i;\n    id2=mid+1;\n    solve(l,mid);\n    solve(mid+1,r);\n    for(i=l;i<=r;i++)\n    if(id2>r||id1<=mid&&a[id1].id<=a[id2].id)//\u5148\u6267\u884c\u4f4d\u7f6e\u9760\u524d\u7684\n    {\n        t[i]=a[id1++];\n        if(t[i].opt==1)\n        add(t[i].v,1);\n    }\n    else\n    {\n        t[i]=a[id2++];\n        if(t[i].opt==2)\n        ans[t[i].k]+=(long long)query(n)-(long long)query(t[i].v);\n        //\u67e5\u8be2\u503c\u6bd4\u5b83\u5927\u7684\u6570\u91cf\n    }\n    for(i=l;i<=r;i++)\n    {\n        a[i]=t[i];\n        init(a[i].v);\n    }\n}\ninline void solve2(int l,int r)//\u7b2c\u4e8c\u7ec4\u5206\u6cbb \n{\n    if(l==r)return;\n    int mid=(l+r)/2,id1=l,id2,i;\n    id2=mid+1;\n    solve2(l,mid);\n    solve2(mid+1,r);\n    for(i=l;i<=r;i++)\n    if(id2>r||id1<=mid&&b[id1].v<=b[id2].v)//\u5148\u6267\u884c\u503c\u8f83\u5c0f\u7684\n    {\n        t[i]=b[id1++];\n        if(t[i].opt==1)\n        add(t[i].id,1);\n    }\n    else\n    {\n        t[i]=b[id2++];\n        if(t[i].opt==2)\n        ans[t[i].k]+=(long long)query(n)-(long long)query(t[i].id);\n        //\u67e5\u8be2\u4f4d\u7f6e\u6bd4\u5b83\u9760\u540e\u7684\u6570\u91cf\n    }\n    for(i=l;i<=r;i++)\n    {\n        b[i]=t[i];\n        init(b[i].id);\n    }\n}\nint main()\n{\n    int i,x,y;\n    n=getint();\n    m=getint();\n    for(i=1;i<=n;i++)\n    {\n        x=getint();\n        real[x]=i;//x\u7684\u4f4d\u7f6e\u4e3ai\n    }\n    for(i=1;i<=m;i++)//\u521b\u5efa\u64cd\u4f5c \n    {\n        x=getint();\n        y=real[x];//y\u4e3ax\u7684\u4f4d\u7f6e\n        vis[x]=true; \n        a[++cnt]=(point){y,x,n-i+1,1,0};\n        a[++cnt]=(point){y,x,n-i+1,2,n-i+1};\n        b[++num]=(point){y,x,n-i+1,1,0};\n        b[++num]=(point){y,x,n-i+1,2,n-i+1};\n    }\n    int ti=0;\n    for(i=1;i<=n;i++)//\u521b\u5efa\u64cd\u4f5c \n    if(!vis[i])\n    {\n        a[++cnt]=(point){real[i],i,++ti,1,0};\n        a[++cnt]=(point){real[i],i,ti,2,ti};\n        b[++num]=(point){real[i],i,ti,1,0};\n        b[++num]=(point){real[i],i,ti,2,ti};\n    }\n    sort(a+1,a+cnt+1,cmp);//\u6392\u5e8f \n    sort(b+1,b+num+1,cmp);\n    solve(1,cnt);\n    solve2(1,num);\n    for(i=2;i<=n;i++)//\u505a\u4e00\u904d\u524d\u7f00\u548c \n    ans[i]+=ans[i-1];\n    for(i=n;i>=n-m+1;i--)\n    printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1517131419,
        "uid": 15268,
        "name": "\u82b1\u6dc7\u6dcb",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u4e3b\u5e2d\u6811\u7684\u4e00\u4e9b\u4f18\u5316\uff09\n\n\n[\uff08\u4e0d\u4f1a\u70b9\u8fd9\u91cc\uff09](http://http://www.cnblogs.com/rrsb/p/7955717.html \"\uff08\u4e0d\u4f1a\u70b9\u8fd9\u91cc\uff09\") \u6211\u611f\u89c9\u6211\u8fd9\u6837\u5199\u4e0b\u53bb\u6734\u7d20\u7684\u4e3b\u5e2d\u6811\u8981\u4e0d\u4f1a\u5199\u4e86\u3002\n\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6709\u4e24\u90e8\u4efd\uff0c\u5728\u5176\u4e4b\u524d\u6bd4\u5176\u5927\u7684\uff0c\u5728\u5176\u4e4b\u540e\u6bd4\u4ed6\u5c0f\u7684\u3002\n\n\n\u6211\u4eec\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u628a\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u51cf\u53bb\u5c31\u597d\u4e86\u3002\n\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u6837\u6240\u8d39\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u77e5\u9053\u5220\u9664\u65f6\u662f\u6309\u539f\u8def\u5f84\u904d\u5386\uff0c\u4e0d\u4f1a\u52a0\u7a7a\u95f4\u3002\u6211\u4eec\u53ea\u8003\u8651\u52a0\u70b9\u7684\u7a7a\u95f4\u5f00\u9500\u3002\u6211\u4eec\u6bcf\u6b21\u52a0\u4e00\u4e2a\u70b9\uff0c\u671f\u671b\u6211\u4eec\u8bbf\u95eelog n\u4e2a\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811log n\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u662fO\uff08nlog n^2\uff09\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u30025W\\*16\\*16=1280W\uff1f\u4e8b\u5b9e\u8bc1\u660e\u662f\u4e0d\u5230\u7684\uff0c\u800c\u4e14\u8fd9\u91cc\u7684\u6743\u503c\u6811\u662f\u6ee1\u7684\uff0c\u6240\u4ee5\u516c\u7528\u90e8\u5206\u662f\u5f88\u591a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u662f\u6bcf\u6b21\u90fd\u4f1a\u5f00\u51falogN^2\u4e2a\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53\u6743\u503c\u7ebf\u6bb5\u6811\u6ee1\u4ee5\u540e\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\u8fd1\u4f3c\u4e3anlog2 n\\*log3 n \uff08\u6211\u4eec\u8003\u8651\u6811\u72b6\u6570\u7ec4\u7684\u6bcf\u4e2a\u70b9\u7684\u4e0a\u9650\uff0c\u65e2\u8fd9\u4e2a\u70b9\u6240\u7ba1\u8f96\u7684\u771f\u5b9e\u6570\u7ec4\u4e2d\u7684\u51e0\u4e2a\uff0c\u5c55\u5f00\u53d6\u8fd1\u4f3c\u5373\u53ef\uff09\n\n\u53cd\u6b63\u80fd\u5f00\u591a\u5927\u5c31\u5f00\u591a\u5927\u5427\u3002\n\n```cpp\n    #include<bits/stdc++.h>\n    #define N 8500007 \n    #define M 100007\n    #define Mid (l+r>>1)\n    #define L(x) (x&-x)\n    #define LL long long\n    using namespace std;\n    int siz[N],ls[N],rs[N],si,n,tot,ne[M],m,X,a[M],n2[M],n3[M],to1;\n    LL ans;\n    #define sight(c) ('0'<=c&&c<='9')\n    inline void read(int &x){\n        static char c;\n        for (c=getchar();!sight(c);c=getchar());\n        for (x=0;sight(c);c=getchar())x=x*10+c-48;\n    }\n    void write(LL x){if (x<10) {putchar('0'+x); return;} write(x/10); putchar('0'+x%10);}\n    inline void writeln(LL x){ if (x<0) putchar('-'),x*=-1; write(x); putchar('\\n'); }\n    void ins(int l,int r,int no,int q,int dla){\n        siz[no]+=dla; if (l==r) return;\n        if (Mid>=q) {if (!ls[no]) ls[no]=++si;ins(l,Mid,ls[no],q,dla);}\n        else {if (!rs[no]) rs[no]=++si;ins(Mid+1,r,rs[no],q,dla);}\n    }\n    void add(int x,int i,int dla){for (;x<=n;x+=L(x)) ins(1,n,x,i,dla);}\n    int ask(int l,int r,int q){\n        if (l==r) return 0;\n        if (Mid<q)  {\n            for (int i=1;i<=tot;i++) ne[i]=rs[ne[i]]; return ask(Mid+1,r,q);\n        }\n        int sum=0;\n        for (int i=1;i<=tot;i++) sum+=siz[rs[ne[i]]],ne[i]=ls[ne[i]];\n        return sum+ask(l,Mid,q);\n    }\n    int Ask(int l,int r,int q){\n        if (l==r) return 0;\n        if (q<=Mid) {\n            for (int i=1;i<=tot;i++) n2[i]=ls[n2[i]];\n            for (int i=1;i<=to1;i++) n3[i]=ls[n3[i]]; return Ask(l,Mid,q); \n        }\n        LL sum=0;\n        for (int i=1;i<=tot;i++) sum-=siz[ls[n2[i]]],n2[i]=rs[n2[i]];\n        for (int i=1;i<=to1;i++) sum+=siz[ls[n3[i]]],n3[i]=rs[n3[i]];\n        return sum+Ask(Mid+1,r,q);\n    }\n    int query(int r,int val){\n        for (tot=0;r;r-=L(r)) ne[++tot]=r;\n        return ask(1,n,val);\n    }\n    int Query(int r,int val){\n        int y=n;\n        for (tot=0;r;r-=L(r)) n2[++tot]=r;\n        for (to1=0;y;y-=L(y)) n3[++to1]=y;\n        return Ask(1,n,val);\n    }\n    int main () {\n        freopen(\"inverse.in\",\"r\",stdin);\n        freopen(\"inverse.out\",\"w\",stdout);\n        read(n); read(m); si=n;\n        for (int i=1;i<=n;i++) \n            read(X),add(i,X,1),a[X]=i;\n        for (int i=1;i<=n;i++) \n          ans+=query(a[i],i); \n        while (m--) {\n            writeln(ans);read(X);\n            ans-=Query(a[X],X)+query(a[X],X);\n            add(a[X],X,-1);\n        }return 0;\n}\n```",
        "postTime": 1516281854,
        "uid": 53193,
        "name": "\u6b87\u96ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u9759\u6001\u6c42\u9006\u5e8f\u5bf9\u5c31\u7528\u6811\u72b6\u6570\u7ec4(\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u4f46\u6811\u72b6\u6570\u7ec4\u548c\u540e\u9762\u7684\u64cd\u4f5c\u8054\u7cfb\u5f88\u5927)\n\n\u6309\u7167\u8bfb\u5165\u987a\u5e8f\u4fee\u6539\u6811\u72b6\u6570\u7ec4(a[i]\u8868\u793a\u503c\u6bd4i\u5c0f\u4e8e\u7b49\u4e8e\u7684\u6570\u7684\u4e2a\u6570)\n\n(\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u8fd9\u662f1...n\u7684\u4e00\u4e2a\u6392\u5217\uff0c\u6240\u4ee5\u4e0d\u5fc5\u8003\u8651\u91cd\u590d\u6570\u636e)\n\n\u5bf9\u4e8e\u8f93\u5165\u6570\u636ex\u80fd\u548c\u524d\u9762\u7684\u6570\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5c31\u662fsum(x-1)\u3002\n\n\u4e0b\u9762\u6765\u8003\u8651\u5220\u9664\u6570\u636e\u540e\u600e\u4e48\u6c42\u9006\u5e8f\u5bf9\uff1a\n\n\u5220\u9664\u4e00\u4e2a\u6570\u540e\u9006\u5e8f\u5bf9\u51cf\u5c11\u7684\u4e2a\u6570\u5c31\u662f\u524d\u9762\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u548c\u540e\u9762\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\u7684\u548c\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u5b9e\u73b0\u3002\n\n\u4f46\u662f\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u524d\u5220\u9664\u7684\u6570\u4e0e\u5148\u524d\u5220\u9664\u7684\u6570\u7ec4\u6210\u7684\u9006\u5e8f\u5bf9\u4e5f\u88ab\u8ba1\u7b97\u5728\u5185\u4e86\u3002\n\n\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u6211\u4eec\u53ea\u8981\u8ba1\u7b97\u4e00\u4e0b\u5f53\u524d\u5220\u9664\u7684\u6570\u4e0e\u5148\u524d\u5220\u9664\u7684\u6570\u7ec4\u6210\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u518d\u51cf\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8981\u8ba1\u7b97\u8fd9\u4e2a\u503c\uff0c\u6570\u636e\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u662f\u5173\u952e\u6240\u5728\u3002\n\n\u8fd8\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u4f46\u662f\u7eaf\u7684\u6811\u72b6\u6570\u7ec4\u4e0d\u80fd\u540c\u65f6\u7ef4\u62a4\u4f4d\u7f6e\u548c\u5927\u5c0f\u4e24\u4e2a\u5173\u952e\u5b57\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u4e2a\u6811\u72b6\u6570\u7ec4\u7684\u7ed3\u70b9\u90fd\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u5927\u5c0f\u533a\u95f4\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4f4d\u7f6e\u3002(\u53cd\u4e00\u4e0b\u4e5f\u53ef\u4ee5\u64cd\u4f5c)\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e2a\u76f8\u90bb\u7684\u7ebf\u6bb5\u6811\u4e4b\u95f4\u6700\u591a\u6709log2(n)\u4e2a\u5143\u7d20\u4e0d\u540c\uff0c\u5176\u5b9e\u5c31\u662f\u4e3b\u5e2d\u6811\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5957\u4e3b\u5e2d\u6811\u89e3\u51b3\u95ee\u9898\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nlong long ans;\nint n,m,sz,v[100001],position[100001],a1[100001],a2[100001],c[100001];\nint root[100001],ls[6000001],rs[6000001],presidenttree[6000001];\nint sum(int x)\n{\n    int as=0;\n    for(int i=x;i;i-=i&(-i)) as+=c[i];\n    return as;\n}\nvoid put(int &o,int l,int r,int q)\n{\n    if(!o) o=++sz;\n    presidenttree[o]++;\n    if(l==r) return;\n    int mid=(l+r)/2;\n    if(q<=mid) put(ls[o],l,mid,q);else put(rs[o],mid+1,r,q);\n}\nint get(int o,int p,int q,int r,int s)\n{\n    if((p==r)&&(q==s)) return presidenttree[o];\n    int mid=(p+q)/2;\n    if(s<=mid) return get(ls[o],p,mid,r,s);else\n    if(r>mid)return get(rs[o],mid+1,q,r,s);else\n    return get(ls[o],p,mid,r,mid)+get(rs[o],mid+1,q,mid+1,s);\n}\nint find(int o,int p,int q,int r)\n{\n    if(q>r) return 0;\n    int as=0;\n    for(int i=p;i>0;i-=i&(-i)) as+=get(root[i],1,n,q,r);\n    for(int i=o;i>0;i-=i&(-i)) as-=get(root[i],1,n,q,r);\n    return as;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>v[i];\n        position[v[i]]=i;\n        a1[i]=sum(n)-sum(v[i]);\n        ans+=a1[i];\n        for(int j=v[i];j<=n;j+=j&(-j)) c[j]++;\n    }\n    memset(c,0,sizeof(c));\n    for(int i=n;i;i--)\n    {\n        a2[i]=sum(v[i]-1);\n        for(int j=v[i];j<=n;j+=j&(-j)) c[j]++;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cout<<ans<<endl;\n        int x;\n        cin>>x;\n        x=position[x];\n        ans-=(a1[x]+a2[x]-find(0,x-1,v[x]+1,n)-find(x,n,1,v[x]-1));\n        for(int j=x;j<=n;j+=j&(-j)) put(root[j],1,n,v[x]);\n    }\n    return 0;\n}\n```",
        "postTime": 1515656325,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u628a\u4e3b\u5e2d\u6811\u7684\u6a21\u677f\u518d\u7a0d\u52a0\u4fee\u6539\u3002\n\n\u6211\u4eec\u6c42\u4e00\u4e2a\u9759\u6001\u7684\u9006\u5e8f\u5bf9\u65f6\uff0c\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\u4f5c\u4e3a\u8f83\u5c0f\u7684\u6570\u65f6\uff0c\u5b83\u524d\u9762\u6709\u591a\u5c11\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u7d2f\u52a0\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u52a8\u6001\u7684\u9006\u5e8f\u5bf9\u662f\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u8fd9\u4e2a\u6570\u5bf9\u4e8e\u603b\u9006\u5e8f\u5bf9\u6570\u4ea7\u751f\u7684\u8d21\u732e\uff0c\n\n\u5373\u5728\u5f53\u524d\u5e8f\u5217\u4e2d\u8fd9\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\uff0c\u540e\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\uff0c\u7136\u540e\u628a\u603b\u9006\u5e8f\u5bf9\u51cf\u53bb\u8fd9\u4e2a\u6570\u5c31\u884c\u4e86\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u7edf\u8ba1\u8fd8\u662f\u4e00\u4e2a\u52a8\u6001\u7684\uff0c\u6211\u4eec\u6682\u4e14\u6ca1\u6709\u529e\u6cd5\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u53cd\u9762\u6765\u8003\u8651\u3002\n\n\u539f\u59cb\u5e8f\u5217\u4e2d\u8fd9\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u7528\u6811\u72b6\u6570\u7ec4\u76f4\u63a5\u8ba1\u7b97\u3002\n\n\u5728\u8fd9\u6b21\u524d\u9762\u6240\u6709\u7684\u5220\u53bb\u7684\u6570\uff0c\u65e2\u5728\u539f\u59cb\u5e8f\u5217\u4e2d\u5728\u5f53\u524d\u7684\u6570\u524d\u9762\u53c8\u6bd4\u5b83\u5927\u7684\u4e2a\u6570\uff0c\u7531\u4e8e\u6709\u4e24\u4e2a\u56e0\u7d20\u9650\u5236\u7ed3\u679c\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e2a\u5355\u4e00\u7684\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u7528\u4e3b\u5e2d\u6811\u6765\u641e\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u4e3b\u5e2d\u6811\u5957\u6811\u72b6\u6570\u7ec4\uff08\u5e26\u4fee\u6539\u7684\u4e3b\u5e2d\u6811\uff09\u6765\u7ef4\u62a4\uff0c\u6bcf\u5220\u6389\u4e00\u4e2a\u6570x\uff0c\u8bb0\u5f55\u5176\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u4e3apos[x],\u6211\u4eec\u5728\u4e3b\u5e2d\u6811\u76841..pos[x],pos[x]..n\u4e24\u4e2a\u533a\u95f4\u4e2d\uff0c\u5206\u522b\u7edf\u8ba1\u6bd4x\u5c0f\u7684\u6570\u4e2a\u6570\uff0c\u5927\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7136\u540e\u628ax\u5220\u6389\uff0c\u5728\u4e3b\u5e2d\u6811\u7684pos[x]...n\u533a\u95f4\u4e2d\u63d2\u5165x\uff0c\u5c31\u884c\u4e86\u3002\n\n\u9898\u76ee\u6709\u4e2a\u5c0f\u5751\u3002\u56e0\u4e3an\u53ef\u4ee5\u8fbe\u5230100000\uff0c\u6240\u4ee5\u521a\u5f00\u59cb\u7684\u9006\u5e8f\u5bf9\u6570\u4f1a\u7206int\uff0c\u628a\u7edf\u8ba1\u7ed3\u679c\u7684\u5f00longlong\uff0c\u4f46\u662f10^10\u6211\u89c9\u5f97\u4e0d\u5e94\u8be5\u7206int\u3002\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define REP(i,a,b) for (int i=(a);i<=(b);i++)\n#define DREP(i,a,b) for (int i=(a);i>=(b);i--)\n#define FOR(i,a,b) for (int i=(a);i<=(b);i+=i&(-i))\n#define RFOR(i,a,b) for (int i=(a);i>=(b);i-=i&(-i))\nusing namespace std;\nconst int N=100100;\nconst int M=N*50;\nstruct Edge{\n    int L,R,sum;\n}T[M];\nint n,m,T_cnt=1;\nlong long ans=0;\nint use[N],bit[N],root[N],pre[N],suf[N],a[N],pos[N];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint sum(int x){\n    int t=0;\n    RFOR(i,x,1)t+=bit[i];\n    return t;\n}\nvoid insert(int &now,int k,int l=1,int r=n){\n    if (!now)now=T_cnt++;\n    T[now].sum++;\n    if (l==r)return;\n    int mid=(l+r)>>1;\n    if (k<=mid)insert(T[now].L,k,l,mid);\n        else insert(T[now].R,k,mid+1,r);\n}\nint querypre(int x,int y,int k){\n    int l=1,r=n,sum=0;--x;\n    RFOR(i,x,1)use[i]=root[i];RFOR(i,y,1)use[i]=root[i];\n    while (l<r){\n        int mid=(l+r)>>1;\n        if (k<=mid){\n            r=mid;\n            RFOR(i,x,1)use[i]=T[use[i]].L;RFOR(i,y,1)use[i]=T[use[i]].L;\n        }else{\n            RFOR(i,x,1)sum-=T[T[use[i]].L].sum;\n            RFOR(i,y,1)sum+=T[T[use[i]].L].sum;\n            l=mid+1;\n            RFOR(i,x,1)use[i]=T[use[i]].R;RFOR(i,y,1)use[i]=T[use[i]].R;\n        }\n    }\n    return sum;\n}\nint querysub(int x,int y,int k){\n    int l=1,r=n,sum=0;--x;\n    RFOR(i,x,1)use[i]=root[i];RFOR(i,y,1)use[i]=root[i];\n    while (l<r){\n        int mid=(l+r)>>1;\n        if (k<=mid){\n            RFOR(i,x,1)sum-=T[T[use[i]].R].sum;\n            RFOR(i,y,1)sum+=T[T[use[i]].R].sum;\n            r=mid;\n            RFOR(i,x,1)use[i]=T[use[i]].L;RFOR(i,y,1)use[i]=T[use[i]].L;\n        }else{\n            l=mid+1;\n            RFOR(i,x,1)use[i]=T[use[i]].R;RFOR(i,y,1)use[i]=T[use[i]].R;\n        }\n    }\n    return sum;\n}\nint main(){\n    n=read(),m=read();\n    REP(i,1,n){\n        a[i]=read(),pos[a[i]]=i;\n        pre[i]=sum(n)-sum(a[i]);\n        ans+=pre[i];\n        FOR(j,a[i],n)bit[j]++;\n    }\n    memset(bit,0,sizeof(bit));\n    DREP(i,n,1){\n        suf[i]=sum(a[i]-1);\n        FOR(j,a[i],n)bit[j]++;\n    }\n    REP(i,1,m){\n        printf(\"%lld\\n\",ans);\n        int x=read();x=pos[x];\n        ans-=(pre[x]+suf[x]-querypre(x+1,n,a[x])-querysub(1,x-1,a[x]));\n        FOR(j,x,n)insert(root[j],a[x]);        \n    }\n    return 0;\n}\n```",
        "postTime": 1503898076,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u4e3a\u4e86\u4fbf\u4e8e\u8003\u8651\uff0c\u628a\u5220\u9664\u53cd\u5e8f\u53d8\u4e3a\u589e\u52a0\n\n\u4e8e\u662f\u5c31\u53d8\u6210\u5173\u4e8e\u6743\u503c\u548c\u4f4d\u7f6e\u548c\u65f6\u95f4\u7684\u4e09\u7ef4\u6570\u70b9\n\ncdq+\u6811\u72b6\u6570\u7ec4\n\n\u5916\u9762\u6392\u5e8f\uff08\u5c31\u662f\u65f6\u95f4\u5e8f\uff09\u53d8\u4e3a\u52a8\u6001\u95ee\u9898\n\ncdq\u7684\u4f5c\u7528\u662f\u628a\u52a8\u6001\u53d8\u56de\u9759\u6001\uff0c\u4f46\u662f\u5c11\u4e86\u4e00\u4e2a\u7ef4\u5ea6\n\n\u7136\u540e\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u7684\u5904\u7406\u8303\u56f4\u4e86\n\ncode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define mid (l+r>>1)\n#define ll long long\nusing namespace std;\nll n,ret,m,tem;\nll tr[200001],a[200001],in[200001];\nbool ok[200001];\nstruct qu\n{\n    ll num,pos,id,ans;\n} q[200001],t[200001];\nbool com(qu a,qu b)\n{\n    return a.id<b.id;\n}\nvoid add(ll x,ll y){ for(;x<=n;x+=x&-x) tr[x]+=y;}\nll que(ll x){ for(ret=0;x;x-=x&-x) ret+=tr[x];return ret;}\nvoid cdq(ll l,ll r)\n{\n    if(l==r) return;\n    cdq(l,mid);cdq(mid+1,r);\n    for(ll i=l,j=l,k=mid+1;i<=r;i++)\n        if((k>r) || (j<=mid && q[j].pos<q[k].pos)) t[i]=q[j++];\n            else t[i]=q[k++];\n    ll ALL=0;\n    for(ll i=l;i<=r;i++)\n        if((q[i]=t[i]).id>mid)\n            q[i].ans+=ALL-que(q[i].num);\n        else\n            add(q[i].num,1),++ALL;\n    for(ll i=l;i<=r;i++)\n        if(q[i].id<=mid)\n            add(q[i].num,-1);\n    for(ll i=r;i>=l;i--)\n        if(q[i].id>mid)\n            q[i].ans+=que(q[i].num);\n        else\n            add(q[i].num,1);\n    for(ll i=l;i<=r;i++)\n        if(q[i].id<=mid)\n            add(q[i].num,-1);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(ll i=1;i<=n;i++)\n        scanf(\"%d\",&tem),a[tem]=i;\n    for(ll i=1;i<=m;i++)\n        scanf(\"%d\",&in[i]),ok[in[i]]=1;\n    tem=0;\n    for(ll i=1;i<=n;i++)\n        if(!ok[i])\n            q[++tem].num=i,q[tem].pos=a[q[tem].num],q[tem].id=tem;\n    for(ll i=m;tem<=n;i--)\n        q[++tem].num=in[i],q[tem].pos=a[q[tem].num],q[tem].id=tem;\n    cdq(1,n);\n    sort(q+1,q+n+1,com);\n    for(ll i=2;i<=n;i++)\n        q[i].ans+=q[i-1].ans;\n    for(ll i=n;i>n-m;i--)\n        printf(\"%lld\\n\",q[i].ans);\n    return 0;\n}\n```",
        "postTime": 1494136710,
        "uid": 885,
        "name": "wanglichao1121",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u503cx\u65f6\uff0c\u9006\u5e8f\u5bf9\u51cf\u5c11\u7684\u503c\u4e3a\uff08\u5728x\u524d\u9762\u6bd4x\u5927\u7684\u6570\u7684\u4e2a\u6570\uff09+\uff08\u5728x\u540e\u9762\u6bd4x\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff09\n\n\u56e0\u6b64\uff0c\u9996\u5148\u6211\u4eec\u6c42\u51fa\u8be5\u5e8f\u5217\u9006\u5e8f\u5bf9\u3002\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u65f6\uff0c\u5148\u8f93\u51fa\u7b54\u6848\uff0c\u7136\u540e\u67e5\u8be2\u4e0a\u9762\u90a3\u4e24\u79cd\u6570\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u7136\u6734\u7d20\u80af\u5b9a\u8fc7\u4e0d\u4e86\uff0c\u8003\u8651\u6811\u72b6\u6570\u7ec4\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u5f88\u5feb\u6c42\u51fa\u533a\u95f4[s-lowbit(s)+1,s]\u4e2d\u6bd4x\u5c0f/\u5927\u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002\u770b\u5230\u8fd9\u91cc\u81ea\u7136\u4f1a\u60f3\u8d77\u540d\u6b21\u6811\uff0c\u4e0d\u8fc7\u7531\u4e8e\u53ea\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u9759\u6001BST\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u9762\u6253\u4e2asize\u7684\u6807\u8bb0\u5373\u53ef\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9i\uff0c\u4ee5\u5176\u4e3a\u6839\u5efa\u4e00\u9897\u5e73\u8861\u6811\uff0c\u7ba1\u7406\u7684\u533a\u95f4\u662f[i-(i&-i)+1,i]\u3002\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u53ea\u9700\u8981\u4e0d\u65ad\u5f80\u4e0b\u627e\uff0c\u540c\u65f6\u5728\u9700\u8981\u7684\u65f6\u5019\u52a0\u4e0a\u5de6\u5b69\u5b50\u6216\u8005\u53f3\u5b69\u5b50\u7684size\u5373\u53ef\u3002\u5220\u9664\u65f6\uff0c\u53ea\u9700\u8981\u4ece\u6839\u5f80\u4e0b\u5bfb\u627e\u76f8\u5e94\u8282\u70b9\uff0c\u9014\u4e2d\u7ecf\u8fc7\u7684\u6240\u6709\u8282\u70b9size\u503c\u90fd\u51cf\u4e00\uff0c\u540c\u65f6\u627e\u5230\u76f8\u5e94\u8282\u70b9\u540e\u6807\u8bb0\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\u5355\u6b21\u5220\u9664\u64cd\u4f5c\u6d89\u53calogn\u4e2a\u533a\u95f4\uff0c\u6bcf\u4e2a\u4e0d\u8d85\u8fc7logn\uff08\u5982\u679c\u5efa\u6811\u5efa\u5f97\u597d\uff09\uff0c\u590d\u6742\u5ea6(logn)^2\uff0c\u5efa\u6811\u65f6\u5171\u5efan\u6b21\uff0c\u6bcf\u6b21\u5982\u679c\u5efa\u5f97\u597d\u7684\u8bdd\u590d\u6742\u5ea6\u4e3a\u533a\u95f4\u957f\uff0c\u53ef\u4ee5\u8bc1\u660e\u533a\u95f4\u957f\u7684\u548c\u4e3anlogn\uff0c\u56e0\u6b64\u5efa\u6811\u590d\u6742\u5ea6\u4e3anlogn\u3002\u5f53\u7136\u6700\u591a\u4e5f\u5c31n(logn)^2\u5566\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n(logn)^2+m(logn)^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(nlogn)\u3002\u5b9e\u6d4b\u6700\u5927\u4e00\u4e2a\u70b9500+ms\u3002\n\n\u5c0f\u6280\u5de7\uff1a\n\n\uff081\uff09\u56e0\u4e3a\u6bd4\u8f83\u96be\u6c42\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5c06\uff08i\u7684\u53f3\u8fb9\uff09\u8f6c\u5316\u4e3a(n\u51cf\u53bbi\u53cai\u7684\u5de6\u8fb9\uff09\u3002\n\n\uff082\uff09\u4e3a\u4e86\u907f\u514d\u5199Treap\uff0c\u6211\u5199\u4e86\u6734\u7d20BST\u3002\u4e3a\u4e86\u907f\u514d\u6709\u5e8f\u5e8f\u5217\u628a\u6811\u5361\u6210\u94fe\uff0c\u6211\u5efa\u6811\u7684\u65b9\u6cd5\u662f\u6bcf\u6b21\u53d6\u4e2d\u70b9\u4e3a\u6839\uff0c\u9012\u5f52\u5de6\u53f3\u5b50\u533a\u95f4\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\ntypedef long long ll;\nconst int maxn=100005,nlogn=100000*18;\nint a[maxn],lc[nlogn],rc[nlogn],v[nlogn],sz[nlogn],rt[maxn],p[maxn],t[maxn],n,m,ch,w,x,s;\nbool d[nlogn];\nll ans;\nvoid read(int&x)\n{\n    x=0,ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-'0',ch=getchar();\n}\nvoid insert(int&p,int val)\n{\n    if(!p){p=++w;v[p]=val;sz[p]=1;return;}\n    if(val<=v[p])insert(lc[p],val);else insert(rc[p],val);\n    sz[p]=sz[lc[p]]+sz[rc[p]]+1;\n}\nvoid build(int&rt,int l,int r)\n{\n    if(l>r)return;\n    int m=(l+r)>>1;\n    insert(rt,a[m]);\n    build(rt,l,m-1);build(rt,m+1,r);\n}\nint ask1(int p,int val)\n{\n    int ans=0;\n    while(p)\n    {\n        if(v[p]==val){ans+=sz[lc[p]];break;}\n        if(v[p]<val)ans+=sz[lc[p]]+1-d[p],p=rc[p];\n        else p=lc[p];\n    }\n    return ans;\n}\nint ask2(int p,int val)\n{\n    int ans=0;\n    while(p)\n    {\n        if(v[p]==val){ans+=sz[rc[p]];break;}\n        if(v[p]>val)ans+=sz[rc[p]]+1-d[p],p=lc[p];\n        else p=rc[p];\n    }\n    return ans;\n}\nvoid del(int p,int val)\n{\n    while(p)\n    {\n        --sz[p];\n        if(v[p]==val){d[p]=1;return;}\n        if(v[p]<val)p=rc[p];else p=lc[p];\n    }\n}\nvoid msort(int l,int r)\n{\n    if(l>=r)return;\n    int m=(l+r)>>1;\n    msort(l,m),msort(m+1,r);\n    int pl=l,pr=m+1,k=l;\n    while(pl<=m&&pr<=r)\n        if(a[pl]<=a[pr])t[k++]=a[pl++];\n        else ans+=m-pl+1,t[k++]=a[pr++];\n    while(pl<=m)t[k++]=a[pl++];\n    while(pr<=r)t[k++]=a[pr++];\n    for(register int i=l;i<=r;++i)a[i]=t[i];\n}\nint main()\n{\n    read(n),read(m);\n    for(register int i=1;i<=n;++i)read(a[i]);\n    for(register int i=1;i<=n;++i)p[a[i]]=i;\n    for(register int i=1;i<=n;++i)build(rt[i],i-(i&-i)+1,i);\n    msort(1,n);\n    while(m--)\n    {\n        read(x);printf(\"%lld\\n\",ans);\n        for(s=p[x]-1;s;s-=s&-s)ans-=ask2(rt[s],x);\n        for(s=n;s;s-=s&-s)ans-=ask1(rt[s],x);\n        for(s=p[x];s;s-=s&-s)ans+=ask1(rt[s],x);\n        for(s=p[x];s<=n;s+=s&-s)del(rt[s],x);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1481881268,
        "uid": 13180,
        "name": "amazingOZR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3157 \u3010[CQOI2011]\u52a8\u6001\u9006\u5e8f\u5bf9\u3011"
    }
]