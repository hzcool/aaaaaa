[
    {
        "content": "\u9707\u60ca\uff01\u4e00\u9053\u7206\u641c\u9898\u7adf\u7136\u88ab\u8bc4\u6210\u4e86\u9ed1\u9898\uff01\uff01\uff01\n\n\u54b3\u54b3\u3002\u3002\u3002\n\n\u6ca1\u9519\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u7206\u641c\u9898\u3002\u3002\u3002\n\nn <= 15\uff0c\u8fd9\u8ba9\u6211\u4eec\u4e60\u60ef\u6027\u7684\u60f3\u5230\u4e86\u72b6\u538b\u3002\u3002\u3002\n\n\u7136\u540e\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u9009\u597d\u4e86\u8981\u63a5\u53d7\u54ea\u4e9b\u8ba2\u5355\uff0c\u53ef\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5462\uff1f\uff1f\n\n\u6216\u8005\u8bf4\u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u5df2\u7ecf\u77e5\u9053\u5f53\u524d\u7684\u751f\u4ea7\u529b\u3001\u5269\u4e86\u591a\u5c11\u4e1c\u897f\u3001\u63a5\u4e0b\u6765\u8fd8\u6709\u54ea\u4e9b\u8ba2\u5355\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u6c42\u51fa\u5728\u63a5\u4e0b\u4e00\u4e2a\u8ba2\u5355\u4e4b\u524d\u53ef\u4ee5\u6709\u591a\u5c11\u65f6\u95f4\u63d0\u9ad8\u751f\u4ea7\u529b\u5462\uff1f\uff1f\n\n\uff08\u8fd9\u4e48\u591a\u5e9f\u8bdd\u7ec8\u4e8e\u8bf4\u5b8c\u4e86\u3002\u3002\u3002\uff09\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\u663e\u7136\u662f\u53ef\u4ee5\u7684\u561b\u3002\u3002\u3002\n\n\u6211\u4eec\u8bbe\u53ef\u4ee5\u6709x\u5355\u4f4d\u65f6\u95f4\u6765\u63d0\u9ad8\u751f\u4ea7\u529b\uff0c\u90a3\u4e48\u5982\u679c\u5f53\u524d\u79bb\u4e0b\u4e00\u4e2a\u8ba2\u5355\u7684\u65f6\u95f4\u4e3aT\u65f6\uff0c\u8fd9\u4e2a\u8ba2\u5355\u8981P\u4e2a\u4ea7\u54c1\uff0c\u5de5\u5382\u62e5\u6709M\u7684\u751f\u4ea7\u529b\u65f6\uff0c\u663e\u7136\u6709\u5982\u4e0b\u65b9\u7a0b\uff1a\n\n$$ (M + x) * (T - x) = P $$\n\n\u6574\u7406\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a\n\n$$ x^2 + (M - T) * x + P - M * T = 0 $$\n\n\u5229\u7528\u6839\u7684\u5224\u522b\u5f0f\u7b97\u4e00\u4e0b\u6709\u6ca1\u6709\u6839\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u8bf4\u660e\u65e0\u6cd5\u63a5\u4e0b\u8fd9\u4e2a\u8ba2\u5355\uff0c\u5426\u5219\u5c31\u53ef\u4ee5\u62e5\u6709\n\n$$ \\biggl \\lfloor \\frac{T - M + \\sqrt{(M + T)^2 - 4P}}{2} \\biggr \\rfloor $$\n\n\u7684\u65f6\u95f4\u6765\u589e\u52a0\u751f\u4ea7\u529b\u3002\n\n\u7136\u540e\u5c31\u8fd9\u6837\u679a\u4e3e\u4e0b\u53bb\uff0c\u6bcf\u6b21\u5982\u679c\u65b9\u6848\u53ef\u884c\u5c31\u7528\u8fd9\u4e9b\u8ba2\u5355\u7684\u6536\u5165\u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 20;\n\nstruct P {\n    int t; //\u8ba2\u5355\u7684\u65f6\u95f4\n    int c; //\u9700\u8981\u7684\u4ea7\u54c1\u6570\u91cf\n    int p; //\u5f97\u5230\u7684\u62a5\u916c\n\n    friend bool operator< (P a, P b) { //\u6309\u7167\u65f6\u95f4\u6392\u597d\u5e8f\n        return a.t < b.t;\n    }\n}S[N], a[N];\n\nint n;\nint tot;\nll res;\n// \u8bbe\u53ef\u4ee5\u6709x\u5929\u63d0\u9ad8\u751f\u4ea7\u529b\u5219\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b: (Make + x) * (Time - x) = Need\n// \u6574\u7406\u5f97: x^2 + (Make - Time) * x + Need - Make * Time = 0\n// \u89e3\u65b9\u7a0b\u5373\u53ef\nll js(ll Make, ll Time, ll Need) { \n    ll a = 1;\n    ll b = Make - Time;\n    ll c = Need - Make * Time;\n    ll derta = b * b - 4 * a * c;\n    if(derta < 0) return -1;\n    return floor((-b + sqrt(derta)) / 2 / a);\n}\n//\u68c0\u67e5\u5f53\u524d\u679a\u4e3e\u7684\u65b9\u6848\u53ef\u4e0d\u53ef\u884c\uff0c\u53ef\u884c\u5c31\u66f4\u65b0\u7b54\u6848\nvoid solve(int Now) {\n    tot = 0;\n    ll num = 0;\n    for(int i = 1; i <= n; i++)\n        if(Now & (1 << i - 1))\n            S[++tot] = a[i], num += a[i].p; //\u5c06\u5f53\u524d\u72b6\u6001\u7684\u8ba2\u5355\u52a0\u5165\u6808\n    ll Make = 1; //\u751f\u4ea7\u529b\n    ll Have = 0; //\u5269\u4f59\u7684\u4ea7\u54c1\u6570\u91cf\n    for(int i = 1; i <= tot; i++) {\n        ll t = S[i].t - S[i - 1].t; //\u5728\u4e0b\u4e00\u4e2a\u8ba2\u5355\u524d\u80fd\u591f\u63d0\u9ad8\u751f\u4ea7\u529b\u7684\u65f6\u95f4\uff0c\u6700\u5927\u5c31\u662f\u8fd9\u4e2a\n        ll sum = 0; //\u7d2f\u52a0\u6240\u9700\u7684\u4ea7\u54c1\n        for(int j = i; j <= tot; j++) {\n            sum += S[j].c;\n            if(sum > Have)\n                t = min(t, js(Make, S[j].t - S[i - 1].t, sum - Have)); //\u7528\u7b97\u51fa\u6765\u7684\u65f6\u95f4\u66f4\u65b0\u5f53\u524d\u7684\u65f6\u95f4\n        }\n        if(t < 0) return ; //\u8bf4\u660e\u4e0d\u53ef\u884c\n        Make += t; //\u66f4\u65b0\u751f\u4ea7\u529b\n        Have += Make * (S[i].t - S[i - 1].t - t) - S[i].c; //\u66f4\u65b0\u5e93\u5b58\n    }\n    res = max(res, num);\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n        scanf(\"%d%d%d\", &a[i].t, &a[i].c, &a[i].p);\n    sort(a + 1, a + 1 + n); //\u6309\u7167\u65f6\u95f4\u6392\u597d\u5e8f\n    for(int i = 0; i < (1 << n); i++)\n        solve(i);\n    printf(\"%lld\\n\", res);\n    return 0;\n}\n```",
        "postTime": 1522911838,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3161 \u3010[CQOI2012]\u6a21\u62df\u5de5\u5382\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u53c8\u53cc\u53d2\u53d5\u88ab\u7206\u8e29\u8fa3\uff01\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P3161)\n\nSolution:\n\n\u8fd9\u9898\u53c8\u662f\u4e00\u9053\u8d2a\u5fc3\u3002\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a\n\n```\nn<=15  ti<=100,000  gi<=10^9  mi<=10^9\n```\n\n\u8fd9\u91cc\u5c31\u53ef\u4ee5\u770b\u5230\u51e0\u4e2a\u5c0f\u7ec6\u8282\uff0c\u4e5f\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e9b\u601d\u8def\u3002\n\n#### \u8981\u5f00long long\uff01\n\n\u9996\u5148\uff0cn <= 15\uff0c \u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u8bf4\u662f\u5f88\u5c0f\u8fa3\uff0c\u5b83\u4ee3\u8868\u6709n\u4e2a\u4efb\u52a1\uff0c\u53c8\u56e0\u4e3a\n\n```\n\u5982\u679c\u63a5\u53d7\u8ba2\u5355i\uff0c\u5219\u5fc5\u987b\u6070\u597d\u5728\u65f6\u523bti\u4ea4\u6613\uff0c\u4e0d\u80fd\u65e9\u4e5f\u4e0d\u80fd\u665a\u3002\u540c\u4e00\u65f6\u523b\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u8ba2\u5355\uff0c\u4f46\u6bcf\u4e2a\u8ba2\u5355\u53ea\u80fd\u88ab\u63a5\u53d7\u4e00\u6b21\u3002\n```\n\n\u7a9d\u4eec\u672c\u4e0d\u77e5\u9053\u9009\u62e9\u54ea\u4e9b\u4efb\u52a1\u624d\u4f1a\u662f\u5229\u6da6\u6700\u9ad8\uff0c\u800c\u4e14\u8fd9\u5f88\u660e\u663e\u4e5f\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e9b\u89c4\u5f8b\u6765\u77e5\u9053\u9009\u62e9\u54ea\u4e2a\u4f1a\u6700\u4f18\u3002\n\n\u6240\u4ee5\u7a9d\u4eec\u5e94\u8be5\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\n### \u679a\u4e3e\uff01\uff01\uff01\n\n\u56e0\u4e3a\u53ea\u6709\u6570\u636e\u8303\u56f4\u53ea\u670915\uff0c\u6240\u4ee5\u7a9d\u4eec\u53ef\u4ee5\u679a\u4e3e1\u5230(1 << n) - 1\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u5f53\u524d\u8fd9\u4e2a\u4efb\u52a1\u9009\u4e0d\u9009\uff0c\u90a3\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u4efb\u52a1\u8fa3\uff01\n\n\u63a5\u4e0b\u6765\u5c31\u662f\uff0c\u7136\u540e\u5904\u7406\u6bcf\u4e2a\u4efb\u52a1\u65b9\u6848\u3002\n\n\u7a9d\u4eec\u9488\u5bf9\u6bcf\u4e2a\u4efb\u52a1\u65b9\u6848\uff0c\u4f9d\u6b21\u5224\u65ad\u5b83\u7684\u53ef\u884c\u6027\u3002\n\n\u7136\u540e\u5728\u53ef\u884c\u7684\u65b9\u6848\u4e2d\u627e\u51fa\u5229\u6da6\u6700\u5927\u7684\uff08\u5c31\u662f\u4fdd\u8bc1\u4efb\u52a1\u5b8c\u6210\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u751f\u4ea7\u529b\u66f4\u5927\u3002\n\n\u5047\u8bbe\u7a9d\u4eec\u5f53\u524d\u6709\u90a3\u4e48\u5bf9\u4e8e\u8ba2\u5355i\u548cj\uff0c\u6211\u4eec\u90fd\u4f1a\u5f97\u5230\u65b9\u7a0b\uff1amake\u4e3a\u5b8c\u6210\u8ba2\u5355i\u65f6\u7684\u751f\u4ea7\u529b\uff0ctime\u4e3a\u8ddd\u79bbj\u8ba2\u5355\u7684\u65f6\u95f4\uff0ctime_create\u4e3a\u7528\u6765\u63d0\u5347\u751f\u4ea7\u529b\u7684\u65f6\u95f4\uff0cneed\u662f\u8ba2\u5355j\u9700\u6c42\u91cf\n\n```\n(make + time_create) \u00d7 (time \u2212 time_create) = need\n```\n\n\n\u5316\u7b80\u5c31\u662f\uff1a\n\n```\ntime_create * time_create + (make - time) * time_create + need - make * time = 0;\n```\n\n\n\u53ea\u8981\u4fdd\u8bc1\u8d77\u201c\u6839\u7684\u5224\u522b\u5f0f\u201d >= 0\u5c31\u884c\u3002\n\n\u6240\u4ee5\u590d\u6742\u5ea6\u5e94\u8be5\u662fO\uff082 \u7684 n\u6b21\u65b9 * n \u7684\u5e73\u65b9\uff09\uff1b\n\n\u5177\u4f53\u89c1\u4ee3\u7801\uff0c\u8fd9\u91cc\u53ea\u6709\u4e00\u4e9b\u601d\u8def\uff0c\u4e2a\u4eba\u4ecb\u610f\u5bf9\u7740\u4ee3\u7801\u8bfb\uff0c\u66f4\u5bb9\u6613\u7406\u89e3\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define maxn 25\n#define maxm\n#define ll long long//mi\u6570\u636e1e9\uff0c\u4f60\u4e0d\u5f00longlong\u770b\u770b \n#define int long long\n#define Rep(x, a, b) for(int x = a; x <= b; ++ x)\n#define Dep(x, a, b) for(int x = a; x >= b; -- x)\n#define Next(x, u) for(int i = head[u]; i ; i = e[i].nxt)\n\n//int read(){\u7a9d\u4e0d\u559c\u6b22\u7528\u5feb\u8bfb\uff0c\u4f46\u7f3a\u7701\u6e90\u91cc\u9762\u653e\u4e86\uff0c\u6240\u4ee5\u4e5f\u6ca1\u5220 \n//\tint f = 1, x = 0;\n//\tchar c = getchar();\n//\twhile(c < '0' || c > '9'){\n//\t\tif(c == '-'){\n//\t\t\tf = -1;\n//\t\t}\n//\t\tc = getchar();\n//\t}\n//\twhile(c >= '0' && c <= '9'){\n//\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n//\t\tc = getchar();\n//\t}\n//\treturn x * f;\n//}\n\nstruct node{\n\tint t, g, m;//\u90fd\u5982\u9898\uff0ct\u662f\u5728\u4ec0\u4e48\u65f6\u523b\u4ea4\u6613\uff0cg\u662f\u9700\u8981\u591a\u5c11\u8d27\uff0cm\u662f\u53ef\u4ee5\u5f97\u5230\u7684\u5229\u6da6 \n}e[maxn], s[maxn];\n\n//e\u662f\u8bb0\u5f55\u6240\u6709\u7684\u4efb\u52a1\n//s\u662f\u8bb0\u5f55\u5f53\u524d\u60c5\u51b5\u7a9d\u4eec\u5df2\u7ecf\u9009\u62e9\u7684\u4efb\u52a1 \n \nint n, ans;//\u4e0d\u591a\u8bf4 \n\nbool cmp(node x, node y){\n\treturn x.t < y.t;\n}//\u8981\u5148\u6309\u7167t\u6392\u5e8f\uff0c\u8981\u4e0d\u4e0d\u597d\u5904\u7406 \n\nint discriminant(int b, int c){//\u8fd9\u4e2a\u5355\u8bcd\u662f\u201c\u5224\u522b\u5f0f\u201d\uff0c\u767e\u5ea6\u8bf4\u7684\n\tif(b * b - 4 * c < 0){//\u90fd\u77e5\u9053\u4e8c\u6b21\u51fd\u6570\u6839\u7684\u5224\u522b\u5f0f\u5427\uff08b * b - 4 * a * c\uff09 \n\t\treturn -1;//\u8fd4\u56de-1\uff0c\u5373\u6839\u7684\u5224\u522b\u5f0f\u5c0f\u4e8e0 \n\t}\n\treturn floor((-b + sqrt(b * b - 4 * c)) / 2);//\u5426\u5219\u5c31\u8fd4\u56de\u5b83\u7684\u6839:((-b + sqrt(b * b - 4 * a * c) / 2 / a) \n}\n\nvoid dfs(int x){\n\tint now_have = 0, make_force = 1, ans_now = 0, tot = 0;\n\t//now_have\u662f\u7a9d\u4eec\u5f53\u524d\u62e5\u6709\u7684\u8d27\u7269\n\t//make_force\u662f\u5f53\u524d\u7684\u751f\u4ea7\u529b\n\t//ans_now\u662f\u8fd9\u79cd\u65b9\u6848\u7684\u5229\u6da6 \n\t//tot\u662f\u5f53\u524d\u8fd9\u79cd\u9009\u62e9\u65b9\u6848\u4efb\u52a1\u7684\u4e2a\u6570 \n\tRep(i, 1, n){//\u8fd9\u91cc\u5c31\u662f\u5bfb\u627e\u5f53\u524d\u65b9\u6848\u7684\u4efb\u52a1 \n\t\tif(x & (1 << i - 1)){//\u7528\u4e8c\u8fdb\u5236 \n\t\t\ts[++ tot] = e[i];//\u8fdb\u5165s \n\t\t\tans_now += e[i].m;//\u5c31\u662f\u5f53\u524d\u65b9\u6848\u7684\u603b\u5229\u6da6 \n\t\t}\n\t}\n\tRep(i, 1, tot){\n\t\tint t = s[i].t - s[i - 1].t, sum = 0;//sum\u662f\u6240\u9700\u8981\u7684\u8d27\u7269 \n\t\t//t\u662f\u65f6\u95f4\uff0cs[i].t - s[i- 1].t\u662f\u5b83\u7684\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u5f53\u5b83\u524d\u9762\u7684\u8d27\u7269\u8db3\u591f\u8d2d\u4e70\u8fd9\u4e24\u4e2a\u8d27\u7269\u65f6\uff0c\u5b83\u7684t\u5c31\u662f\u6b64\u503c \n\t\tRep(j, i, tot){//\u7b97t\u7684\u503c \n\t\t\tsum += s[j].g;//\u7d2f\u52a0\u6240\u9700\u8981\u7684\u8d27\u7269  \n\t\t\tif(now_have >= sum){//\u5982\u679c\u8d27\u7269\u8fd8\u591f\uff0c\u90a3\u5c31\u4e0b\u4e00\u5c42\u5faa\u73af \n\t\t\t\tcontinue;\n\t\t\t}//\u5426\u5219\uff0c\u5c31\u66f4\u65b0t\uff0c\u4e3at\uff0c\u548c\u5b83\u7684\u6839\u7684\u6700\u5c0f\u503c \n\t\t\tt = min(t, discriminant(make_force - s[j].t + s[i - 1].t, sum - now_have - make_force * (s[j].t - s[i - 1].t)));\n\t\t}\n\t\tif(t < 0){//\u5982\u679c\u65e0\u6cd5\u5b8c\u6210\u6b21\u65b9\u6848 \n\t\t\treturn;//return \n\t\t}\n\t\tmake_force += t;//\u751f\u4ea7\u529b\u5c31\u8981\u52a0\uff0c\uff08\u5c3d\u53ef\u80fd\u52a0\u5c31\u884c \n\t\tnow_have += make_force * (s[i].t - s[i - 1].t - t) - s[i].g;//\u5176\u4f59\u5c31\u73b0\u5728\u6709\u7684\u4ea7\u91cf \n\t}\n\tans = max(ans, ans_now);//\u66f4\u65b0\u503c \n}\n\nsigned main(){\n\tscanf(\"%lld\", &n);//\u8f93\u5165 \n\tRep(i, 1, n){//\u8f93\u5165\u6bcf\u4e2a\u4efb\u52a1 \n\t\tscanf(\"%lld%lld%lld\", &e[i].t, &e[i].g, &e[i].m);\n\t}\n\tsort(e + 1, e + n + 1, cmp);//\u6309\u65f6\u523b\u6392\u5e8f \n\tRep(i, 0, (1 << n) - 1){\n\t\tdfs(i);//\u6bcf\u79cd\u65b9\u6848\u8dd1\u4e00\u904d \n\t}\n\tprintf(\"%lld\", ans);//\u8f93\u51fa \n\treturn 0;\n}\n```\n\n\u4e0b\u9762\u8fd8\u7ed9\u4e24\u7ec4\u6570\u636e\n\n```\nInout:\n5\n5 5 5\n7 7 7\n9 9 9\n11 1 15\n16 18 778\n\nOutput:\n814\n\n```\n```\nInput:\n10\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n\nOutput:\n30\n```\n~~Ps:\u8bf7\u770b\u61c2\u518d\u6284~~",
        "postTime": 1569720953,
        "uid": 155767,
        "name": "Tarsal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3161 \u3010[CQOI2012]\u6a21\u62df\u5de5\u5382\u3011"
    },
    {
        "content": "# \u641c\u7d22\uff1f+\u8d2a\u5fc3\n\n\u8fd9\u4e2a\u9898\u7ec3\u4e00\u7ec3\u7efc\u5408\u601d\u60f3\u8fd8\u662f\u4e0d\u9519\u7684\u3002\u3002\u3002\uff08~~\u7136\u800c\u849f\u84bb\u4e0d\u4f1a\u554a~~\uff09\n\n\u54c8\u54c8\u8fd8\u662f\u5b89\u5229\u4e00\u4e0b\u81ea\u5df1\u7684\u535a\u5ba2\u3002\u3002\u3002[eteranl\u98ce\u5ea6\u7684\u535a\u5ba2](http://www.cnblogs.com/cjoierljl)\n\n\u540c\u6b65\u53d1\u8868\u4e8e\uff1a[eternal\u98ce\u5ea6\u7684[CQOI2012]\u6a21\u62df\u5de5\u5382 \u9898\u89e3(\u641c\u7d22+\u8d2a\u5fc3)](https://www.cnblogs.com/cjoierljl/p/9909018.html)\n\n## \u505a\u6cd5\n\u80af\u5b9a\u662f\u5728\u80fd\u5b8c\u6210\u67d0\u4e9b\u8ba2\u5355\u7684\u60c5\u51b5\u4e0b\u4f7f\u81ea\u5df1\u751f\u4ea7\u529b\u8d8a\u9ad8\u8d8a\u597d\u662f\u5427\uff08\u4e00\u4e2a\u5927\u81f4\u7684\u8d2a\u5fc3\u65b9\u5411\uff09\n\n\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u81ea\u5df1\u5230\u5e95\u5e94\u8be5\u600e\u4e48\u53bb\u51b3\u5b9a\u63d0\u9ad8\u751f\u4ea7\u529b\u7684\u65f6\u95f4\n\n\u90a3\u4e48\u6362\u4e2a\u89d2\u5ea6\uff0c\u4e0d\u4ece\u65f6\u95f4\u6765\u770b\uff0c\u4ece\u8ba2\u5355\u4e0a\u6765\u770b\n\n## \u8d2a\u5fc3\n\u6211\u4eec\u5047\u8bbe\u4e00\u5b9a\u8981\u5b8c\u6210\u8ba2\u5355$1$\uff5e$n$\n\n\u90a3\u4e48\u5e94\u8be5\u5982\u4f55\u8d2a\u5fc3\u9009\u65f6\u95f4\u63d0\u5347\u751f\u4ea7\u529b\u5462\uff0c\u5f53\u7136\u662f\u5728\u80fd\u6ee1\u8db3\u6240\u6709\u8ba2\u5355\u7684\u57fa\u7840\u4e0a\u5c3d\u91cf\u591a\u5730\u63d0\u9ad8\u751f\u4ea7\u529b\n\n\u90a3\u4e48\u5bf9\u4e8e\u8981\u5b8c\u6210\u7684\u8ba2\u5355$i$\u548c$j$\uff0c\u6211\u4eec\u90fd\u4f1a\u5f97\u5230\u65b9\u7a0b\uff1a\n(\u8bbe$pdc(produce)$\u4e3a\u5b8c\u6210\u8ba2\u5355$i$\u65f6\u7684\u751f\u4ea7\u529b\uff0c$T$\u4e3a\u8ddd\u79bb$j$\u8ba2\u5355\u7684\u65f6\u95f4\uff0c$x$\u4e3a\u7528\u6765\u63d0\u5347\u751f\u4ea7\u529b\u7684\u65f6\u95f4\uff0c$gv(give)$\u662f\u8ba2\u5355$j$\u9700\u6c42\u91cf)\n$$(pdc+x)\u00d7(T-x)=gv$$\u5bf9\u6240\u6709\u6211\u4eec\u4e00\u5b9a\u8981\u5b8c\u6210\u7684\u8ba2\u5355\u4e00\u4e2a\u4e00\u4e2a\u5b8c\u6210\uff0c\u6bcf\u6b21\u5b8c\u6210\u4e00\u4e2a\u8ba2\u5355\u65f6\u5bf9\u5b83\u4e4b\u540e\u7684\u6bcf\u4e00\u4e2a\u8ba2\u5355\u6211\u4eec\u90fd\u89e3\u8fd9\u4e48\u4e00\u4e2a\u65b9\u7a0b\uff0c\u5f97\u5230\u5c3d\u53ef\u80fd\u7684\u4f11\u606f\u65f6\u95f4\uff0c\u90a3\u4e48\u8fd9\u6837\u5b50\u4e00\u5b9a\u662f\u5bf9\u7684\u5427\n\n## \u7136\u540e\u53ef\u4ee5\u60f3\u5230\n\u4e0a\u9762\u662f$1$\uff5e$n$\u6211\u4eec\u90fd\u60f3\u5b8c\u6210\uff0c\u73b0\u5728\u4e0d\u540c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u5f03\u4e00\u4e9b\u8ba2\u5355\n\n\u518d\u770b\u6570\u636e\u8303\u56f4\uff1a$n<=15$\uff1f\uff0c\u90a3\u4e0d\u5c31\u66b4\u529b\u679a\u4e3e\u72b6\u6001\u9009\u8fd8\u662f\u4e0d\u9009\u554a\n\n\u7136\u540e\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u65b9\u7a0b\uff0c\u5982\u679c\u65e0\u89e3\u25b3$<0$\u80af\u5b9a\u8fd9\u79cd\u8ba1\u5212\u662f\u4e0d\u884c\u7684\n\n\u7136\u540e\u76f4\u63a5\u7528\u6c42\u6839\u516c\u5f0f\u4f1a\u5f97\u5230\uff1a$$\\frac{T-pdc+\\sqrt{(pdc+T)^2-4\u00d7gv}}{2}$$\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(2^n\u00d7n^2)$\u5f88\u5bf9\u5440\uff0c\u90a3\u5c31\u505a\u5b8c\u4e86\n\n~~\u679a\u4e3e\u72b6\u6001\u867d\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\uff0c\u4f46\u4e5f\u53ef\u4ee5\u641c\u662f\u5427\uff0c\u90a3\u6211\u4eec\u5c31\u53eb\u4ed6\u641c\u7d22\u4e86~~\n\n## \u7ed9\u51fa\u4ee3\u7801\n\u54fc\u54fc\n\n\u538b\u884c\u662f\u770b\u4ee3\u7801\u4eba\u7684\u5669\u68a6\uff0c\u4f46\u5199\u4ee3\u7801\u8005\u90a3\u4e2a\u8212\u7545\u554a\uff08~~\u867d\u7136\u7b14\u8005\u53ea\u7a0d\u7a0d\u538b\u884c\u4e86\u3002\u3002\u3002~~\uff09\n```\n#include<bits/stdc++.h>\n#define il inline\n#define rg register\n#define ldb double\n#define lst long long\n#define rgt register int\n#define N 20\n#define M 100050\nusing namespace std;\nconst int Inf=1e9;\nil lst MAX(rg lst x,rg lst y){return x>y?x:y;}\nil lst MIN(rg lst x,rg lst y){return x<y?x:y;}\nil int read()\n{\n    int s=0,m=0;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')m=1;ch=getchar();}\n    while( isdigit(ch))s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n    return m?-s:s;\n}\n\nint n,UP;\nlst Ans,Res;\nint sgn[N],top;\nstruct DD{lst tt,gv,gt;}ljl[N];\nbool cmp(const int&a,const int&b){return ljl[a].tt<ljl[b].tt;}\n\nil void Solve(rgt Zt)\n{\n    top=Res=0;\n    for(rgt i=1;i<=n;++i)\n        if(Zt&(1<<(i-1)))sgn[++top]=i,Res+=ljl[i].gt;\n    if(Res<Ans)return;\n    sort(&sgn[1],&sgn[top+1],cmp);\n    rg lst pdc=1,rest=0;\n    rg bool flag=true;\n    for(rgt i=0;i<top;++i)\n    {\n        rg lst nd=0,brk=Inf;\n        for(rgt j=i+1;j<=top;++j)\n        {\n            nd+=ljl[sgn[j]].gv;\n            rg lst tm=ljl[sgn[j]].tt-ljl[sgn[i]].tt;\n            rg lst b=pdc-tm,c=nd-rest-pdc*tm;\n            if(b*b-4*c<0){flag=false;break;}//delta\n            rg lst x=(sqrt(b*b-4*c)-b)/2;\n            brk=MIN(brk,x);\n        }pdc+=brk;\n        rest+=pdc*(ljl[sgn[i+1]].tt-ljl[sgn[i]].tt-brk)-ljl[sgn[i+1]].gv;\n        if(!flag||brk<0||rest<0){flag=false;break;}\n    }if(flag)Ans=MAX(Ans,Res);\n}\n\nint main()\n{\n    n=read(),UP=(1<<n);\n    for(rgt i=1;i<=n;++i)\n        ljl[i]=(DD){read(),read(),read()};\n    for(rgt i=1;i<UP;++i)Solve(i);\n    return printf(\"%lld\\n\",Ans),0;\n}\n```\n# \u5982\u679c\u5bf9\u60a8\u6709\u5e2e\u52a9\uff0c\u90a3\u5c06\u662f\u6211\u4e07\u5206\u7684\u8363\u5e78",
        "postTime": 1541400229,
        "uid": 66596,
        "name": "eternal\u98ce\u5ea6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3161 \u3010[CQOI2012]\u6a21\u62df\u5de5\u5382\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u53d1\u73b0\u672c\u9898\u7528\u72b6\u538b $O(2^n)$ \u679a\u4e3e\u72b6\u6001\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u5bb9\u6613\u7684\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u90a3\u5c31\u662f\u628a\u589e\u52a0\u52b3\u52a8\u529b\u7684\u64cd\u4f5c\u653e\u524d\u9762\u3002\n\n\u6b64\u65f6\uff0c\u6211\u4eec\u8bbe\u5f53\u524d\u52b3\u52a8\u529b\u4e3a $A$\uff0c\u62e5\u6709\u7684\u65f6\u95f4\u4e3a $B$\uff0c\u9700\u8981\u7684\u8d27\u7269\u91cf\u4e3a $C$\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7528 $t$ \u6b21\u589e\u52a0\u4e86\u52b3\u52a8\u529b\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\n\n$(A+t)(B-t)\\ge C$\n\n\u6240\u4ee5 $-t^2+(B-A)t+(AB-C)\\ge0$\uff0c\n\n\u5373 $t^2+(A-B)t+(C-AB)\\le0$\uff0c\n\n\u8d2a\u5fc3\u5730\uff0c\u52a0\u52b3\u52a8\u529b\u80af\u5b9a\u6700\u591a\uff0c\u6240\u4ee5\u53d6\u8f83\u5927\u7684 $t_1$\u3002\n\n\u5982\u679c\u5224\u522b\u5f0f\u4e3a\u8d1f\uff0c\u663e\u7136\u65e0\u89e3\u3002\n\n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9009\u62e9\uff0c\u90fd\u8003\u8651\u4e00\u4e0b\u540e\u9762\u7684\u9009\u62e9\u662f\u5426\u53ef\u884c\uff0c\u5b9e\u73b0\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^22^n)$\u3002\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read(){\n\tint res=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tres=(res<<1)+(res<<3)+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn res;\n}\nint n,ans,top;\nstruct node{\n\tint t,g,m;\n\tinline bool operator <(const node &o) const{\n\t\treturn t<o.t;\n\t}\n}a[20],s[20];\ninline int Ask(int p,int q,int r){\n\tint a=1,b=p-q,c=r-p*q;\n\tint delta=b*b-4*a*c;\n\tif(delta<0)\n\t\treturn -1;\n\treturn (int)floor(-b+sqrt(delta))/(2*a);\n}\ninline bool check(){\n\tint k=1,p=0;\n\tfor(int i=1;i<=top;++i){\n\t\tint sum=0,t=s[i].t-s[i-1].t;\n\t\tfor(int j=i;j<=top;++j){\n\t\t\tsum+=s[j].g;\n\t\t\tif(sum>p)\n\t\t\t\tt=min(t,Ask(k,s[j].t-s[i-1].t,sum-p));\n\t\t}\n\t\tif(t<0)\n\t\t\treturn 0;\n\t\tk+=t;\n\t\tp+=k*(s[i].t-s[i-1].t-t);\n\t\tp-=s[i].g;\n\t}\n\treturn 1;\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]={read(),read(),read()};\n\tstable_sort(a+1,a+n+1);\n\tfor(int i=1;i<(1<<n);++i){\n\t\tint sum=0;\n\t\ttop=0;\n\t\tfor(int j=1;j<=n;++j)\n\t\t\tif(i&(1<<j-1))\n\t\t\t\ts[++top]=a[j],sum+=a[j].m;\n\t\tif(check())\n\t\t\tans=max(ans,sum);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1651851883,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "P3161 [CQOI2012]\u6a21\u62df\u5de5\u5382 \u9898\u89e3"
    },
    {
        "content": "\u65e0\u654c\u5927\u8d2a\u5fc3....\n\nN<=15\uff0c\u76f4\u63a5\u679a\u4e3e\u63a5\u54ea\u4e9b\u8ba2\u5355\uff0c\u7136\u540e\u8d2a\u5fc3\uff0c\u5c3d\u91cf\u591a\u591a\u63d0\u9ad8\u751f\u4ea7\u529b\n\n\u6bcf\u4e2a\u65f6\u95f4\u70b9\u66b4\u529b\u904d\u5386\u540e\u9762\u7684\u8ba2\u5355\uff0c\u770b\u81f3\u591a\u80fd\u82b1\u591a\u5c11\u65f6\u95f4\u63d0\u9ad8\u751f\u4ea7\u529b\u8fd8\u4e0d\u4f1a\u73a9\u8131\n\n\u7136\u540e\u53d1\u73b0\u4e00\u6bb5\u65f6\u95f4\u751f\u4ea7\u6570\u91cf\u662f\u4e2a\u4e8c\u6b21\u51fd\u6570\uff08\u5173\u4e8e\u751f\u4ea7\u529b\u7684\uff09\n\n\u7136\u540e\u778e\u641e\u641e\u8bb0\u5f97\u5f00long long \u5c31\u597d\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=32;\ntypedef long long ll;\nstruct node{\n\tint t,g,m;\n\tvoid read(){\n\t\tscanf(\"%d%d%d\",&t,&g,&m);\n\t}\n};\nbool operator <(node a,node b){\n\treturn a.t<b.t;\n}\nnode a[N],s[N];int top;\nint n;ll ass;\nint fuck(ll k,ll t,ll g){\n\tll a=1,b=k-t,c=g-k*t;\n\tll del=b*b-4*a*c;\n\tif(del<0)return -1;\n\treturn (floor((-b+sqrt(del))/2/a)+1e-7);\n}\nbool chk(){\n\tll pr=1,gr=0;\n\tfor(int i=1;i<=top;i++){\n\t\tll sm=0;\n\t\tint t=s[i].t-s[i-1].t;\n\t\tfor(int j=i;j<=top;j++){\n\t\t\tsm+=s[j].g;\n\t\t\tif(sm>gr)t=min(t,fuck(pr,s[j].t-s[i-1].t,sm-gr));\n\t\t}\n\t\tif(t<0)return 0;\n\t\tpr+=t;\n\t\tgr+=pr*(s[i].t-s[i-1].t-t);\n\t\tgr-=s[i].g;\n\t}\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d\",&n);for(int i=1;i<=n;i++)a[i].read();\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<(1<<n);i++){\n\t\tll re=0;\n\t\ttop=0;\n\t\tfor(int j=1;j<=n;j++)if(i&(1<<(j-1)))s[++top]=a[j],re+=a[j].m;\n\t\tif(chk())ass=max(ass,re);\n\t}\n\tprintf(\"%lld\",ass);\n\treturn 0;\n}\n```",
        "postTime": 1521292676,
        "uid": 38725,
        "name": "xiwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3161 \u3010[CQOI2012]\u6a21\u62df\u5de5\u5382\u3011"
    },
    {
        "content": "[\u9898\u76ee\u8f93\u9001\u95e8](https://www.luogu.com.cn/problem/P3161)\u3002\n\nupdate\uff1a\u4fee\u6539\u4e86\u4e0b\u7ec6\u8282\u5185\u5bb9\n\n\u53c8\u662f\u4e00\u9053\u6a21\u62df\u9898\u54ea\uff0c\u987a\u7740\u6a21\u62df tag \u627e\u8fc7\u6765\u7684\uff0c\u4f46\u662f\u6a21\u62df\u7684\u5185\u5bb9\u4e0d\u591a\u3002\n\n- \u9996\u5148\u770b\u5230\u7684 $n$ \u4e2a\u4efb\u52a1\uff0c\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7684\u662f\u80cc\u5305\uff0c\u4f46\u662f\u5f53\u770b\u5230 $n \\leq 15$\uff0c\u7684\u65f6\u5019\u610f\u8bc6\u5230\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u6bcf\u79cd\u60c5\u51b5\u3002\n\n- \u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u8fdb\u884c\u6c42\u89e3\uff0c\u6211\u4eec\u5047\u5b9a\u5f53\u524d\u521a\u505a\u5b8c\u7b2c $i$ \u4e2a\u4efb\u52a1\uff0c\u5411\u7b2c $\\left(i+1\\right)$ \u4e2a\u4efb\u52a1\u63a8\u8fdb :\n\n\u6211\u4eec\u8bb0\uff1a\n\n- $p$ \u8868\u793a\u5f53\u524d\u8fd8\u6709\u591a\u5c11\u5e93\u5b58\u5546\u54c1\u3002\n\n- $val$ \u8868\u793a\u5f53\u524d\u7684\u751f\u4ea7\u529b\u3002\n\n- $t$ \u8868\u793a\u7b2c $i$ \u4e2a\u4efb\u52a1\u5230\u7b2c $\\left(i+1\\right)$ \u4e2a\u4efb\u52a1\u4e4b\u95f4\u6709\u591a\u957f\u65f6\u95f4\u3002\n\n- $need$ \u8868\u793a\u7b2c $\\left(i+1\\right)$ \u4e2a\u4efb\u52a1\u6240\u9700\u8981\u7684\u5546\u54c1\u6570\u3002\n\n\u6211\u4eec\u5148\u6765\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\uff0c\u5982\u679c\u6211\u4eec\u628a\u65f6\u95f4\u7684\u63a8\u8fdb\u8f6c\u5316\u4e3a\u4e24\u90e8\u5206\uff1a**\u589e\u52a0\u751f\u4ea7\u529b**\u548c**\u751f\u4ea7\u5546\u54c1**\u3002\n\n\u90a3\u4e48\u663e\u7136\uff0c\u5148**\u589e\u52a0\u751f\u4ea7\u529b**\u66f4\u4f18\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u65f6\u95f4\u70b9 $x$ \uff0c\u5728 $x$ \u4e4b\u524d\u6211\u4eec\u589e\u52a0\u751f\u4ea7\u529b\uff0c\u5728 $x$ \u53ea\u540e\uff0c\u6211\u4eec\u751f\u4ea7\u5546\u54c1\u3002\n\n\u5982\u679c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5728 $t$ \u65f6\u95f4\u5185\u6240\u4ea7\u51fa\u7684\u5546\u54c1\u6570\u91cf\u4e3a\uff1a\n\n$$tot=\\left(val+x\\right)\\times \\left(t-x\\right)$$\n \n\u663e\u7136, \u5982\u679c $tot_{\\max}+p \\geq need$ \u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u6210\u6b64\u6b21\u4efb\u52a1\uff0c\u90a3\u4e48 $tot_{\\max}$ \u600e\u4e48\u641e\u5462\uff1f\n \n\u522b\u6025\uff0c\u6211\u4eec\u5148\u628a  $tot=(val+x)\u00d7(t-x)$ \u62c6\u5f00\uff1a\n \n$$tot=-x^2 + \\left(t-val\\right)x + t\\times val$$\n \n\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\uff0c\u6700\u5927\u503c\u53ef\u4ee5\u901a\u8fc7\u516c\u5f0f\u6c42\u51fa\uff1a\u5f53 $x$ \u4e3a $-\\frac{b}{2a}$ \u65f6\uff0c $tot$ \u6709\u6700\u5927\u503c\u3002\n \n\u5982\u56fe\u4e3a $(t=3,val=1)$ \u7684\u4e8c\u6b21\u51fd\u6570\u56fe\u50cf\u3002\n[![vXDWbd.png](https://s1.ax1x.com/2022/09/12/vXDWbd.png)](https://imgse.com/i/vXDWbd)\n\n\u4f46\u662f\u771f\u7684\u53d6 $tot_{\\max}$ \u5c31\u662f\u6b63\u786e\u7b54\u6848\u4e86\u5417\uff1f\n\n\u663e\u7136\u4e0d\u662f\uff0c\u4e5f\u5f88\u597d hack\uff0c**\u56e0\u4e3a\u4f60\u53ea\u4fdd\u8bc1\u4e86 $p$ \u5728\u64cd\u4f5c\u540e\u662f\u6700\u5927\u503c\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u4f7f $val$ \u5c3d\u91cf\u7684\u5927\uff01** \u5bfc\u81f4 $\\left(i+2\\right)$ , $\\left(i+3\\right)$\uff0c\u7b49\u7b49\u6765\u4e0d\u53ca\u8fbe\u5230\u5bf9\u5e94\u7684\u8981\u6c42\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u4fdd\u8bc1\u4e86 $p_{\\max}$ \u5c31\u662f\u6b63\u786e\u7b54\u6848\u4e86\u5417\uff1f\n\n\u4e5f\u662f\u540c\u6837\u7684\uff0c\u5c31\u7b97\u4f60 $val$ \u591f\u5927\uff0c\u4f46\u662f $\\left(i+2\\right)$ \u6240\u8981\u6c42\u7684\u5f88\u8fd1\uff0c\u4f60\u8fd8\u6ca1\u6765\u5f97\u6025\u751f\u4ea7\u51fa\u8db3\u591f\u7684\u5546\u54c1\uff0c\u5c31\u5bfc\u81f4\u4efb\u52a1\u5931\u8d25\uff0c\u5931\u8d25\u7684\u539f\u56e0\u662f\u4f60\u7684 $p$ \u503c\u4e0d\u8db3\uff0c\u6216\u8bb8\u4f60\u53ef\u4ee5\u5728\u7b2c $\\left(i+1\\right)$ \u4e2a\u4efb\u52a1\u5b8c\u6210\u524d\u4e0d\u9009\u62e9\u63d0\u5347\u4f60\u7684 $val$ \u800c\u9009\u62e9\u63d0\u5347\u4f60\u7684 $p$ \u503c\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u590d\u6742\u4e86\uff0c\u5982\u4f55\u8ba9\u6211\u4eec\u5728\u5b8c\u6210\u5f53\u524d\u6240\u6709\u4efb\u52a1\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u91cf\u7684\u4fdd\u8bc1\u4ee5\u540e\u7684\u4efb\u52a1\u80fd\u505a\u5b8c\u5462\uff1f\n\n\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u59a8\u60f3\u7684\u7b80\u5355\u70b9\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u4efb\u52a1 $j$ \uff08\u4efb\u52a1 $j$ \u7684\u65f6\u95f4\u5728\u4efb\u52a1 $i$ \u4e4b\u540e\uff09\u8fdb\u884c\u8ba1\u7b97\uff0c\u6211\u4eec\u5148\u5904\u7406 $i$ \u548c $\\left(i+1\\right)$ \u4e4b\u95f4\u7684\u5173\u7cfb \u518d\u5904\u7406 $i$ \u548c $\\left(i+2\\right)$ \u7684\u5173\u7cfb\uff0c\u4e00\u76f4\u5230 $i$ \u548c $n$ \u7684\u5173\u7cfb\uff0c\u5728\u6240\u6709\u7684 $x$ \u4e2d\uff0c\u53d6 $\\min$\uff0c\u5982\u679c\u8fd9\u4e2a $x<0$ \u90a3\u4e48\u5c31\u8bf4\u660e\u4e0d\u53ef\u884c\u7684\u3002\n\n\u81f3\u4e8e $i$ \u548c $\\left(i+1\\right)$ \u4e4b\u95f4\u5173\u7cfb\uff0c\u6211\u4eec\u8d2a\u5fc3\u7684\u8ba9\u6211\u4eec\u7684 $val$ \u5728\u80fd\u901a\u8fc7\u7684\u524d\u63d0\u4e0b\u6700\u5927\u5316\uff0c\u663e\u7136\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u540e\u9762\u7684\u90fd\u80fd\u901a\u8fc7\u4e86\uff0c\u65e0\u9700\u8003\u8651 $p$ \u7684\u5927\u5c0f\u5bf9\u6211\u4eec\u7684\u5f71\u54cd\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u770b\u4e0b\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nstruct node\n{\n\tint t,g,m;\n}k[20];\nint val,p,n,t[20],tot,cnt,ans;\nbool cmp(node a,node b)\n{\n\tif(a.t!=b.t)return a.t<b.t;\n\telse return (a.m/a.g)>(b.m/b.g);\n}\nint fc(int val,int T,int p)//\u6c42\u89e3\u4e8c\u6b21\u51fd\u6570\uff0c\u4f7fp\u6700\u5927\u3002\n{\n\tint b=val-T,c=p-val*T;\n\tint det=b*b-4*c;\n\tif(det<0)return -1;\n\treturn floor((-b+sqrt(det))/2);\n}\nvoid solve(int ink)\n{\n\tmemset(t,0,sizeof(t));\n\ttot=0,cnt=0;bool c=0;\n\tfor(int i=0,kill;i<n;i++)\n\t{\n\t\tkill=1<<i;\n\t\tc=ink&kill;\n\t\tif(c)t[++tot]=i+1,cnt+=k[i+1].m;//cnt\u4e3a\u8fd9\u6b21\u5982\u679c\u6210\u529f\u6240\u80fd\u5e26\u6765\u7684\u6536\u76ca\uff0c\u548c\u5f53\u524d\u7b54\u6848\u53d6max\n\t}\n\tval=1,p=0;\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tint T=k[t[i]].t-k[t[i-1]].t,sum=0;\n\t\tfor(int j=i;j<=tot;j++)\n\t\t{\n\t\t\tsum+=k[t[j]].g;//\u679a\u4e3e\u4e4b\u540e\u7684\u6bcf\u4e2a\u70b9\uff0c\u5904\u7406\u597d\u5173\u7cfb\n\t\t\tif(sum>p)T=min(T,fc(val,k[t[j]].t-k[t[i-1]].t,sum-p));\n\t\t}\n\t\tif(T<0)return ; //\u4e0d\u53ef\u884c\u76f4\u63a5return\n\t\tval+=T;\n\t\tp+=(k[t[i]].t-k[t[i-1]].t-T)*val-k[t[i]].g;\n\t}\n\tans=max(ans,cnt);\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tk[i].t=read();\n\t\tk[i].g=read();\n\t\tk[i].m=read();\n\t}\n\tsort(k+1,k+1+n,cmp);\n\tint ink=(1<<n);\n\tfor(int i=0;i<ink;i++)solve(i);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1662973381,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3161 [CQOI2012]\u6a21\u62df\u5de5\u5382 \u9898\u89e3"
    }
]