[
    {
        "content": "## \u601d\u8def\n\n\u6211\u4eec\u8981\u5148\u627e\u5230\u6240\u6709\u7684\u5347\u7ea7\u5e8f\u5217\uff0c\u627e\u51fa\u6240\u6709\u7684\u5305\u542b\u4e0e\u88ab\u5305\u542b\u7684\u5173\u7cfb\uff0c\n\n\u7136\u540e\u627e\u5230\u4e00\u6761\u6700\u957f\u94fe\uff0c\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n1. \u5982\u4f55\u627e\u5230\u6240\u6709\u7684\u5305\u542b\u5173\u7cfb\uff1f\n \n\t\u904d\u5386\u6bcf\u4e00\u5bf9\u76d2\u5b50\uff0c\u5bf9\u4e8e\u4e8c\u8005\uff0c\u6211\u4eec\u7528 **dfs** \u626b\u4e00\u904d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u76d2\u5b50\u5728\u4e00\u4e2a\u8282\u70b9\u8f93\u51fa\u4e86\u4e32\uff0c\u800c\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u4e48\u8fd9\u4e24\u8005\u5c31\u4e0d\u5b58\u5728\u5305\u542b\u5173\u7cfb\u3002\n    \n    \u53cd\u4e4b\uff0c\u4e24\u8005\u5c31\u5b58\u5728\u5305\u542b\u5173\u7cfb\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5efa\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u4ece\u5305\u542b\u8005\u6307\u5411\u88ab\u5305\u542b\u8005\u3002\n    \n2. \u4e3a\u4ec0\u4e48\u6c42\u6700\u957f\u94fe\uff1f\n\n\t\u6613\u5f97\uff0c\u5728\u4e00\u4e2a**\u5f3a\u8fde\u901a\u5206\u91cf**\u4e2d\uff0c\u80af\u5b9a\u662f\u5b58\u5728\u4e00\u6761\u94fe\u7684\u3002\n    \n   \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u4e00\u4e2a\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf**\u7f29\u70b9**\uff0c\u7136\u540e\u627e\u5230\u4e00\u6761\u628a\u8d85\u7ea7\u70b9\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u4e32\u8d77\u6765\u7684\u6700\u957f\u7684\u94fe\u5373\u53ef\u3002\n   \n   \u6700\u7ec8\u7b54\u6848\uff0c\u5c31\u662f\u6700\u957f\u94fe\u7684\u957f\u5ea6\u3002\n   \n3. \u600e\u4e48\u627e\u6700\u957f\u94fe\uff1f\n\n\t\u8fd8\u662f\u7528 dfs\uff0c\u6211\u4eec\u5206\u522b\u4ece\u6bcf\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u4ee5\u5f53\u524d\u8282\u70b9\u5f53\u4f5c\u5f53\u524d\u94fe\u7684\u94fe\u9876\uff0c\n    \n    \u7136\u540e\u7528\u524d\u5411\u661f\u641c\u4e0b\u53bb\uff0c\u6bcf\u6b21\u8fd4\u56de\u4ee5\u8be5\u70b9\u4f5c\u4e3a\u94fe\u9876\u65f6\u6700\u957f\u94fe\u7684\u957f\u5ea6\u3002\n    \n## \u4ee3\u7801\u5b9e\u73b0\n\n0. \u521d\u59cb\u5316\uff1a\n\n\t\u6709\u4e24\u4e2a\u7ec6\u8282\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\n    \n     1. \u4e00\u5b9a\u8981\u5f00 `long long`\uff1b\n     \n     2. \u7528\u524d\u5411\u661f\u7684\u8bdd\u5b58\u8fb9\u6570\u7ec4\u81f3\u5c11\u5f00\u5230 400\u3002\n  \n\n1. \u8f93\u5165\uff1a\n\n   \u6211\u4eec\u5f00\u4e2a\u7ed3\u6784\u4f53\u5b58\u4e00\u4e0b\u8f93\u5165\u6761\u4ef6\u3002\n   \n\t\u6ce8\u610f\u8f93\u5165\u7684\u70b9\u7684\u7f16\u53f7\u8981\u52a0\u4e00\uff08\u9898\u76ee\u7f16\u53f7\u4ece 0 \u5f00\u59cb\uff09\u3002\n    \n````cpp\nvoid input ()\n{\n\tscanf (\"%lld\", &s);\n\tfor (int i = 1; i <= s; i++)\n\t{\n\t\tscanf (\"%lld %lld\", &n, &m);\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tint t;\n\t\t\tscanf (\"%lld\", &t);\n\t\t\tt++;\n\t\t\ta[i].out[t] = 1;\n\t\t}\n\t\tfor (int l = 1; l <= n; l++)\n\t\t{\n\t\t\tint aa, bb;\n\t\t\tscanf (\"%lld %lld\", &aa, &bb);\n\t\t\taa++, bb++;\n\t\t\ta[i].lin[l][0] = aa, a[i].lin[l][1] = bb;\n\t\t}\n\t}\n}\n````\n\n2. \u5efa\u8fb9\uff1a\n\n\t\u6bcf\u6b21\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5b9d\u76d2\uff0c\u6211\u4eec\u540c\u65f6\u4ece 1 \u5f00\u59cb\u51fa\u53d1\uff08\u9898\u76ee\u5df2\u77e5\u6761\u4ef6\uff09\uff0c\u5982\u679c\u4ed6\u4eec\u4e4b\u95f4\u5b58\u5728\u5305\u542b\u5173\u7cfb\uff0c\n    \n    \u8bc1\u660e\u4ed6\u4eec\u4e24\u8005\u95f4\u5fc5\u5b9a\u6709\u5b8c\u5168\u76f8\u540c\u7684 01 \u4e32\u3002\n    \n    \u6240\u4ee5\uff0c\u5982\u679c\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u4e00\u4e2a\u5b9d\u76d2\u4e2d\u7684\u662f\u8f93\u51fa\u5143\uff0c\u800c\u53e6\u4e00\u4e2a\u4e0d\u662f\uff0c\n    \n    \u5c31\u8bc1\u660e\u8fd9\u4e24\u4e2a\u95f4\u4e0d\u5b58\u5728\u5305\u542b\u5173\u7cfb\u3002\n    \n    \u53cd\u4e4b\uff0c\u5373\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4ed6\u4eec\u4e4b\u95f4\u5efa\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u6307\u5411\u4ed6\u4eec\u4e4b\u95f4\u7684\u5305\u542b\u5173\u7cfb\u3002\n    \n    \u8bb0\u5f97\u8981\u7528\u6570\u7ec4\u50a8\u5b58\u4e00\u4e0b\u6bcf\u4e00\u6761\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u65b9\u4fbf\u540e\u9762\u7f29\u70b9\uff0c\u91cd\u65b0\u5efa\u56fe\u3002\n    \n````cpp\nvoid find (int x, int y, int nx, int ny)\n{\n\tif (a[x].out[nx] == 1 and a[y].out[ny] == 0) \n\t{\n\t\tflag = 1;\n\t\treturn;\n\t}\n\tif (vis[nx][ny]) return;\n\tvis[nx][ny] = 1;\n\tfind (x, y, a[x].lin[nx][0], a[y].lin[ny][0]);\n\tfind (x, y, a[x].lin[nx][1], a[y].lin[ny][1]);\n}\n\nvoid build ()\n{\n\tfor (int i = 1; i <= s; i++)\n\t{\n\t\tfor (int j = 1; j <= s; j++)\n\t\t{\n\t\t\tif (i == j) continue;\n\t\t\tflag = 0, memset (vis, 0, sizeof vis);\n\t\t\tfind (i, j, 1, 1);\n\t\t\tif (!flag) add (i, j), u[cnt] = i, v[cnt] = j;\n\t\t}\t\n\t}\n}\n````\n\n3. \u7f29\u70b9\uff1a\n\n\t\u6309\u7167\u4e4b\u524d\u601d\u8def\u6240\u8bf4\u7684\u6211\u4eec\u8981\u7f29\u70b9\uff0c\u4ee5\u627e\u6700\u957f\u94fe\u3002\n    \n    \u8fd9\u91cc\u7f29\u70b9\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u89c1\u6211\u7684\u535a\u5ba2[\u7f29\u70b9\uff08\u7b97\u6cd5\u7b14\u8bb0\uff09](https://469672.blog.luogu.org/su-dian)\u3002\n    \n````cpp\nvoid tarjan (int u)\n{\n\tdfn[u] = low[u] = ++tmp;\n\tst[++top] = u;\n\tfor (int i = hd[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif (!dfn[v])\n\t\t{\n\t\t\ttarjan (v);\n\t\t\tlow[u] = min (low[u], low[v]);\n\t\t}\n\t\telse if (!co[v]) low[u] = min (low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u])\n\t{\n\t\tco[u] = ++col;\n\t\tsiz[col] = 1;\n\t\twhile (st[top] != u)\n\t\t{\n\t\t\tco[st[top]] = col;\n\t\t\tsiz[col]++;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\n\nvoid rebuild ()\n{\n\tfor (int i = 1; i <= s; i++) if (!dfn[i]) tarjan (i);\n\tint recoc = cnt;\n\tcnt = 0;\n\tmemset (hd, 0, sizeof hd);\n\tmemset (e, 0, sizeof e);\n\tfor (int i = 1; i <= recoc; i++)\n\t{\n\t\tif (co[u[i]] == co[v[i]]) continue;\n\t\tadd (co[u[i]], co[v[i]]);\n\t}\n}\n````\n\n4. \u8f93\u51fa\u7b54\u6848\uff1a\n\n\t\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5fc6\u5316\u641c\u7d22\u6700\u957f\u94fe\u4e86\uff0c\u6700\u540e\u8fb9\u641c\u8fb9\u8bb0\u5f55\u6700\u957f\u94fe\u957f\u5ea6\u5373\u53ef\u3002\n    \n````cpp\nint get (int u)\n{\n\tif (ans[u]) return ans[u];\n\tans[u] = siz[u];\n\tfor (int i = hd[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tans[u] = max (ans[u], get (v) + siz[u]);\n\t}\n\treturn ans[u];\n}\n\nvoid output ()\n{\n\tint anss = 0;\n\tfor (int i = 1; i <= col; i++) if (!ans[i]) anss = max (anss, get (i));\n\tprintf (\"%lld\\n\", anss);\n}\n````\n\n## \u5b8c\u6574\u4ee3\u7801\n\n````cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\nint s, n, m;\nconst int maxn = 205;\nint cnt, hd[maxn];\nstruct node{\n\tint to, nxt;\n}e[305];\nstruct node2{\n\tint lin[maxn][5], out[maxn];\n}a[maxn];\nint dfn[maxn], low[maxn], siz[maxn], co[maxn], st[maxn];\nint tmp, top, col;\nint flag, vis[maxn][maxn];\nint u[305], v[305], ans[maxn];\n\nvoid add (int u, int v)\n{\n\te[++cnt].to = v;\n\te[cnt].nxt = hd[u];\n\thd[u] = cnt;\n}\n\nvoid input ()\n{\n\tscanf (\"%lld\", &s);\n\tfor (int i = 1; i <= s; i++)\n\t{\n\t\tscanf (\"%lld %lld\", &n, &m);\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tint t;\n\t\t\tscanf (\"%lld\", &t);\n\t\t\tt++;\n\t\t\ta[i].out[t] = 1;\n\t\t}\n\t\tfor (int l = 1; l <= n; l++)\n\t\t{\n\t\t\tint aa, bb;\n\t\t\tscanf (\"%lld %lld\", &aa, &bb);\n\t\t\taa++, bb++;\n\t\t\ta[i].lin[l][0] = aa, a[i].lin[l][1] = bb;\n\t\t}\n\t}\n}\n\nvoid find (int x, int y, int nx, int ny)\n{\n\tif (a[x].out[nx] == 1 and a[y].out[ny] == 0) \n\t{\n\t\tflag = 1;\n\t\treturn;\n\t}\n\tif (vis[nx][ny]) return;\n\tvis[nx][ny] = 1;\n\tfind (x, y, a[x].lin[nx][0], a[y].lin[ny][0]);\n\tfind (x, y, a[x].lin[nx][1], a[y].lin[ny][1]);\n}\n\nvoid build ()\n{\n\tfor (int i = 1; i <= s; i++)\n\t{\n\t\tfor (int j = 1; j <= s; j++)\n\t\t{\n\t\t\tif (i == j) continue;\n\t\t\tflag = 0, memset (vis, 0, sizeof vis);\n\t\t\tfind (i, j, 1, 1);\n\t\t\tif (!flag) add (i, j), u[cnt] = i, v[cnt] = j;\n\t\t}\t\n\t}\n}\n\nvoid tarjan (int u)\n{\n\tdfn[u] = low[u] = ++tmp;\n\tst[++top] = u;\n\tfor (int i = hd[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tif (!dfn[v])\n\t\t{\n\t\t\ttarjan (v);\n\t\t\tlow[u] = min (low[u], low[v]);\n\t\t}\n\t\telse if (!co[v]) low[u] = min (low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u])\n\t{\n\t\tco[u] = ++col;\n\t\tsiz[col] = 1;\n\t\twhile (st[top] != u)\n\t\t{\n\t\t\tco[st[top]] = col;\n\t\t\tsiz[col]++;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\n\nvoid rebuild ()\n{\n\tfor (int i = 1; i <= s; i++) if (!dfn[i]) tarjan (i);\n\tint recoc = cnt;\n\tcnt = 0;\n\tmemset (hd, 0, sizeof hd);\n\tmemset (e, 0, sizeof e);\n\tfor (int i = 1; i <= recoc; i++)\n\t{\n\t\tif (co[u[i]] == co[v[i]]) continue;\n\t\tadd (co[u[i]], co[v[i]]);\n\t}\n}\n\nint get (int u)\n{\n\tif (ans[u]) return ans[u];\n\tans[u] = siz[u];\n\tfor (int i = hd[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].to;\n\t\tans[u] = max (ans[u], get (v) + siz[u]);\n\t}\n\treturn ans[u];\n}\n\nvoid output ()\n{\n\tint anss = 0;\n\tfor (int i = 1; i <= col; i++) if (!ans[i]) anss = max (anss, get (i));\n\tprintf (\"%lld\\n\", anss);\n}\n\nsigned main ()\n{\n\tinput ();\n\tbuild ();\n\trebuild ();\n\toutput ();\n\treturn 0;\n}\n````\n\n\u5982\u6709\u95ee\u9898\uff0c\u6c42\u5927\u4f6c\u65a7\u6b63\uff0c\u611f\u8c22\u3002",
        "postTime": 1629121818,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "P2321 [HNOI2006]\u6f58\u591a\u62c9\u7684\u5b9d\u76d2 \u9898\u89e3"
    },
    {
        "content": "#\u6211\u5c45\u7136\u662f\u7b2c\u4e00\u4e2a\n\n\u5750\u8fd9\u9053\u9898\u7684\u6700\u5173\u952e\u7684\u4e00\u6b65\u4e5f\u662f\u7b2c\u4e00\u6b65\uff1a**\u8bfb\u61c2\u9898\uff01\uff01\uff01\uff01\uff01\uff01\uff01**\n\n##\u9898\u76ee\u5927\u610f\uff1a\n\n\\_\u6709s\u4e2a\u5492\u8bed\u673a\uff0c\u6bcf\u4e2a\u5492\u8bed\u673a\u51fa\u5ea6\u4e3a2\uff0c\u5b57\u7b26\u4e32\u540e\u52a00\u6307\u5411\u4e00\u4e2a\u5143\u4ef6\uff0c\u52a01\u6307\u5411\u4e00\u4e2a\u5143\u4ef6\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u8f93\u51fa\u5143\uff0c\u7b97\u662f\u4e00\u79cd\u65b9\u6848\uff1b\u5f53A\u5492\u8bed\u673a\u7684\u6240\u6709\u65b9\u6848\u5305\u542bB\u5492\u8bed\u673a\u7684\u6240\u6709\u65b9\u6848\u65f6\uff0c\u90a3\u4e48A\u5492\u8bed\u673a\u662fB\u5492\u8bed\u673a\u7684\u5347\u7ea7\u3002\u6c42\uff1a\u6700\u957f\u5347\u7ea7\u5e8f\u5217\u7684\u957f\u5ea6\u3002\uff08\u6211\u8bfb\u4e8640\u5206\u949f\u624d\u8bfb\u61c2\uff0c\u8bed\u6587\u4e0d\u597d\uff09\\_\n\n##\u505a\u6cd5\uff1a\n\n\u6211\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u601d\u8def\u7684\uff0c\u611f\u89c9\u50cf\u641c\u7d22\uff0c\u770b\u4e86\u7f51\u4e0a\u5f88\u591a\u4ee3\u7801\u90fd\u662fTarjan+DFS+\u2026\u2026\uff08\u672c\u4eba\u5f88\u61d2\uff0c\u4e0d\u60f3\u5b66\u8fd9\u79cd\u65b9\u6cd5\uff09\uff0c\u6700\u540e\u627e\u5230\u4e00\u4e2adalao\u7684code\uff0c\u6211\u628a\u4ed6\u7684\u601d\u8def\u4ecb\u7ecd\u7ed9\u5927\u5bb6\uff1a\n\n1.pri[i][x]\u8bb0\u5f55\u7684\u662f\u8f93\u51fa\u5143\uff1b\n\n2.vis[i][j]\u8bb0\u5f55\u7684\u662fs1\u4e2d\u7684i\u5143\u4ef6\u548cs2\u4e2d\u7684j\u5143\u4ef6\u8fd9\u4e2a\u72b6\u6001\uff1b\n\n3.map[i][j][\uff080,1\uff09]\u8bb0\u5f55\u7684\u662fi\u5492\u8bed\u673a\u4e2dj\u5143\u4ef6\u5230\u54ea\u4e2a\u5143\u4ef6\uff1b\uff08\u56e0\u4e3an\u5f88\u5c0f\uff0c\u6240\u4ee5\u5f00\u77e9\u9635\u5c31\u597d\uff09\n\n4.\u4e00\u4e2aBFS\u6765\u5224\u65adj\u662f\u5426\u662fi\u7684\u5347\u7ea7\uff0c\u7528levup[i][j]\u8bb0\u5f55\uff1b\n\n5.Floyd\u627e\u51fa\u6700\u957f\u5347\u7ea7\u5e8f\u5217\u3002\n\n#\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=55;\nint map[N][N][2],n,m,levup[N][N],ans=0;\nbool vis[N][N],pri[N][N];\nstruct node\n{\n    int sx,sy;\n};\nbool check(int s1,int s2)//\u5224\u65ads2\u662f\u5426\u662fs1\u7684\u5347\u7ea7 \n{\n    memset(vis,0,sizeof(vis));\n    queue<node>q;\n    node fir;\n    fir.sx=0,fir.sy=0;\n    q.push(fir);\n    while(!q.empty())\n    {\n        node x=q.front(),tmp;q.pop();\n        if(pri[s1][x.sx]&&!pri[s2][x.sy])return 0;//\u5982\u679c pri[s1][x.sx]\u662f\u8f93\u51fa\u5143\uff0c\u4e14pri[s2][x.sy]\u4e0d\u662f\u7684\u8bdd\uff0c\u90a3\u4e48s2\u4e0d\u662fs1\u7684\u5347\u7ea7 \n        tmp.sx=map[s1][x.sx][0],tmp.sy=map[s2][x.sy][0];\n        if(!vis[tmp.sx][tmp.sy])vis[tmp.sx][tmp.sy]=true,q.push(tmp);\n        tmp.sx=map[s1][x.sx][1],tmp.sy=map[s2][x.sy][1];\n        if(!vis[tmp.sx][tmp.sy])vis[tmp.sx][tmp.sy]=true,q.push(tmp);\n    }\n    return 1;\n}\nint main()\n{\n    int s;\n    scanf(\"%d\",&s);\n    for(int i=0;i<s;i++)//\u56e0\u4e3a\u662f\u4ece0\u53f7\u5143\u4ef6\u5f00\u59cb\u7684\u6240\u4ee5i=0;i<s;i++ \n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int j=0;j<m;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);pri[i][x]=1;\n        }\n        for(int j=0;j<n;j++)\n        {\n            int u,v;\n            scanf(\"%d%d\",&u,&v);\n            map[i][j][0]=u,map[i][j][1]=v;\n        }\n    }\n    memset(levup,-0x3f,sizeof(levup));\n    for(int i=0;i<s;i++)\n    {\n        for(int j=0;j<s;j++)\n        {\n            if(check(i,j)&&i!=j&&levup[j][i]<0)//\u8fd9\u91cc\u662flevup[j][i]!!!!!!!!!!!  j  !!!!!!  i  !!!!!!!!\n            //\u56e0\u4e3a\u8981i\u4e0d\u662fj\u7684\u5347\u7ea7\uff0c\u907f\u514d\u91cd\u590d\uff0c\u5426\u8005ans\u5f88\u5927\uff0c\u6700\u5f00\u59cb\u6211\u5199\u7684levup[i][j]\u5168WA \n            levup[i][j]=1;//\u8fd9\u91cc\u662flevup[i][j]!!!!!!!!!!!  i  !!!!!!  j  !!!!!!!! \n        }\n    }\n    for(int k=0;k<s;k++)//floyd(\u4e00\u4e2a\u7cbe\u5de7\u7684DP) \n    {\n        for(int i=0;i<s;i++)\n        {\n            for(int j=0;j<s;j++)\n            {\n                if(levup[i][j]<levup[i][k]+levup[k][j]&&levup[i][k]&&levup[k][j])\n                levup[i][j]=levup[i][k]+levup[k][j],ans=max(ans,levup[i][j]);\n            }\n        }\n    }\n    printf(\"%d\",ans+1);//\u56e0\u4e3a\u8981\u628a\u5f00\u5934\u7684\u5492\u8bed\u673a\u7b97\u8fdb\u53bb\uff0c\u6240\u4ee5ans+1 \n}\n\u6b22\u8fcedalao\u6307\u6b63\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n```",
        "postTime": 1504595694,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2321 \u3010[HNOI2006]\u6f58\u591a\u62c9\u7684\u5b9d\u76d2\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u6709 S \u4e2a\u5b9d\u76d2\uff0c\u6bcf\u4e2a\u5b9d\u76d2\u6709 $n$ \u4e2a\u5143\u4ef6\uff0c$m$ \u4e2a\u8f93\u51fa\u5143\u3002\u82e5\u5b9d\u76d2 a \u53ef\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u6db5\u76d6\u4e86\u6240\u6709\u5b9d\u76d2 b \u53ef\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u79f0 a \u662f b \u7684\u5347\u7ea7\u3002\u6c42\u6700\u957f\u7684\u5347\u7ea7\u5e8f\u5217\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u5148\u6c42\u51fa\u5b9d\u76d2\u4e4b\u95f4\u7684\u5347\u7ea7\u5173\u7cfb\uff0c\u5982\u679c a \u662f b \u7684\u5347\u7ea7\uff0c\u5c31\u5728\u4e24\u8005\u4e4b\u95f4\u8fde\u4e00\u6761\u5355\u5411\u8fb9\uff0c\u518d\u8dd1\u4e00\u8fb9 Tarjan \u6c42\u6700\u957f\u94fe\u5373\u53ef\u3002\n\n### Step 1\uff1a\n\u600e\u6837\u6c42\u51fa\u5b9d\u76d2\u4e4b\u95f4\u7684\u5347\u7ea7\u5173\u7cfb\uff1f\n\n\u6211\u4eec\u8003\u8651\u540c\u65f6\u679a\u4e3e\u5b9d\u76d2 a \u548c\u5b9d\u76d2 b \u6240\u6709\u53ef\u80fd\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u3002\n\n\u5f53 a \u7684\u5b57\u7b26\u4e32\u672b\u5c3e\u52a0\u4e86\u4e00\u4e2a 1,b \u7684\u5b57\u7b26\u4e32\u4e5f\u8981\u52a0\u4e0a\u4e00\u4e2a 1\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u4eec\u7684\u5b57\u7b26\u4e32\u76f8\u540c\u3002\n\n\u5982\u679c a \u679a\u4e3e\u5230\u7684\u5143\u4ef6 x \u4e0d\u662f\u8f93\u51fa\u5143\uff0c\u4f46\u76f8\u5bf9\u5e94 b \u7684\u539f\u4ef6 y \u662f\u8f93\u51fa\u5143\uff0c\u8fd9\u65f6 y \u5c31\u4f1a\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u800c x \u4e0d\u4f1a\u8f93\u51fa\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0ca \u5e76\u6ca1\u6709\u6db5\u76d6\u6240\u6709 b \u53ef\u80fd\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\uff0ca \u4e0d\u662f b \u7684\u5347\u7ea7\u3002\n\n\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u4ee5\u7528 dfs \u5b9e\u73b0\uff1a\n\n```cpp\n\tvoid dfs(int x,int y,int nx,int ny) {\n    if(!a[x].out[nx] && a[y].out[ny]) flag=1;\n    if(flag) return ;\n    if(vis[nx][ny]) return ;\n    vis[nx][ny]=1;\n    dfs(x,y,a[x].ver[nx][0],a[y].ver[ny][0]);\n    dfs(x,y,a[x].ver[nx][1],a[y].ver[ny][1]);\n}\n```\n\n### Step 2\uff1a\n\u6c42\u51fa\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5b9d\u76d2\u7ec4\u6210\u7684\u5f3a\u8054\u901a\u5206\u91cf\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5f88\u660e\u663e\u7528 Tarjan \u6c42\uff0c\u76f4\u63a5\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n\tvoid tarjan(int u) {\n    dfn[u]=low[u]=++num;\n    stack[++tot]=u;\n    mark[u]=1;\n    for(int i=head[u];i;i=e[i].nxt) {\n        int v=e[i].to;\n        if(!dfn[v]) {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        } else if(mark[v]) low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u]) {\n        int x=0;\n        res++;\n        while(x!=u) {\n            x=stack[tot--];\n            mark[x]=0;\n            sz[res]++;\n            bl[x]=res;\n        }\n    }\n}\n```\n\n### Step 3\uff1a\n\u6c42\u51fa\u6700\u957f\u7684\u5347\u7ea7\u94fe\u3002\n\n\u7f29\u70b9\u540e\u518d\u5efa\u4e00\u6b21\u56fe\uff0c\u8dd1\u4e00\u904d dfs \u53d6\u6700\u5927\u503c\u3002\n\n```cpp\n\tint dfs2(int u) {\n    if(ans[u]) return ans[u];\n    ans[u]=sz[u];\n    for(int i=head2[u];i;i=e2[i].nxt) {\n        int v=e2[i].to;\n        ans[u]=max(ans[u],sz[u]+dfs2(v));\n    }\n    return ans[u];\n}\n```\n\nAC \u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\nusing namespace std;\n#define int long long\n\nint s,n,m,maxn,ans[102];\nint cnt,cnt2,head[102],head2[102]; //\u94fe\u5f0f\u524d\u5411\u661f \nint num,tot,dfn[102],low[102],stack[102]; //Tarjan\nint res,sz[102],bl[102]; //bl\u8868\u793a\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u53cc\u8054\u901a\u5206\u91cf \nbool flag,vis[52][52];\nbool mark[52];\n\nstruct node{\n    int ver[52][2];\n    bool out[52]; //\u6807\u8bb0\u8f93\u51fa\u5143 \n}a[52];\n\nstruct edge{\n    int from,to,nxt;\n}e[100002],e2[100002];\n\nvoid addedge(int A,int B) {\n    e[++cnt].to=B;\n    e[cnt].from=A;\n    e[cnt].nxt=head[A];\n    head[A]=cnt;\n} //\u5efa\u8fb9 \n\nvoid addedge2(int A,int B) {\n    if(A==B) return ;\n    e2[++cnt2].to=B;\n    e2[cnt2].nxt=head2[A];\n    head2[A]=cnt2;\n}\n\nvoid dfs(int x,int y,int nx,int ny) {\n    if(!a[x].out[nx] && a[y].out[ny]) flag=1;\n    if(flag) return ;\n    if(vis[nx][ny]) return ;\n    vis[nx][ny]=1;\n    dfs(x,y,a[x].ver[nx][0],a[y].ver[ny][0]);\n    dfs(x,y,a[x].ver[nx][1],a[y].ver[ny][1]);\n}\n\nvoid tarjan(int u) {\n    dfn[u]=low[u]=++num;\n    stack[++tot]=u;\n    mark[u]=1;\n    for(int i=head[u];i;i=e[i].nxt) {\n        int v=e[i].to;\n        if(!dfn[v]) {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        } else if(mark[v]) low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u]) {\n        int x=0;\n        res++;\n        while(x!=u) {\n            x=stack[tot--];\n            mark[x]=0;\n            sz[res]++;\n            bl[x]=res;\n        }\n    }\n}\n\nint dfs2(int u) {\n    if(ans[u]) return ans[u];\n    ans[u]=sz[u];\n    for(int i=head2[u];i;i=e2[i].nxt) {\n        int v=e2[i].to;\n        ans[u]=max(ans[u],sz[u]+dfs2(v));\n    }\n    return ans[u];\n}\n\nsigned main() {\n    scanf(\"%lld\",&s);\n    for(int i=1;i<=s;i++) {\n        int n,m;\n        scanf(\"%lld%lld\",&n,&m);\n        maxn=max(maxn,n);\n        while(m--) {\n            int tmp;\n            scanf(\"%lld\",&tmp);\n            tmp++;\n            a[i].out[tmp]=1;\n        }\n        for(int j=1;j<=n;j++) {\n            scanf(\"%lld%lld\",&a[i].ver[j][0],&a[i].ver[j][1]);\n            a[i].ver[j][0]++;\n            a[i].ver[j][1]++;\n        }\n    }\n    for(int i=1;i<=s;i++) \n        for(int j=1;j<=s;j++) {\n            if(i==j) continue;\n            flag=0;\n            for(int k=1;k<=maxn;k++) \n                for(int l=1;l<=maxn;l++) vis[k][l]=0;\n            dfs(i,j,1,1);\n            if(!flag) addedge(i,j);\n        }\n    for(int i=1;i<=s;i++) \n        if(!dfn[i]) tarjan(i);\n    for(int i=1;i<=cnt;i++) {\n        int u=e[i].from,v=e[i].to;\n        addedge2(bl[u],bl[v]);\n    }\n    int anss=0;\n    for(int i=1;i<=res;i++) anss=max(anss,dfs2(i));\n    printf(\"%lld\\n\",anss);\n    return 0;\n}\n```",
        "postTime": 1629291997,
        "uid": 394991,
        "name": "Sharing666",
        "ccfLevel": 5,
        "title": "P2321\u9898\u89e3"
    },
    {
        "content": "#### \u5410\u69fd\n\u8fd9\u9898\u6700\u96be\u7684\u90e8\u5206\u5c31\u662f\u8bfb\u9898\u2026\u2026\u6ca1\u5c11\u82b1\u65f6\u95f4\u2026\u2026\n\n#### \u9898\u610f\n\u6709 $s$ \u4e2a\u76d2\u5b50\uff0c\u6bcf\u4e2a\u76d2\u5b50\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u4ea7\u751f 01 \u4e32\u3002\u8bbe\u7b2c $i$ \u4e2a\u76d2\u5b50\u80fd\u4ea7\u751f\u7684\u6240\u6709\u5b57\u7b26\u4e32\u4e3a\u96c6\u5408 $S_i$\uff0c\u5bfb\u627e\u6ee1\u8db3 $S_a \\in S_b \\in S_c \\in S_d \\in \\cdots \\in S_x$ \u80fd\u6784\u6210\u7684\u6700\u957f\u5305\u542b\u5173\u7cfb\u3002\n\n#### \u601d\u8def & \u7b97\u6cd5\n\u5148\u6c42\u51fa\u6240\u6709\u76d2\u5b50\u4e24\u4e24\u4e4b\u95f4\u662f\u5426\u6709\u5305\u542b\u5173\u7cfb\uff0c\u63a5\u7740\u5229\u7528\u5305\u542b\u5173\u7cfb\u5efa\u7acb\u6709\u5411\u56fe\uff0c\u7136\u540e\u7528 _Tarjan_ \u7b97\u6cd5\u7b80\u5355\u5224\u73af\uff0c\u6700\u540e _dfs_ \u7b54\u6848\uff0c\u8f93\u51fa\u3002\n\n\u5982\u4f55\u5224\u65ad\u5305\u542b\u5173\u7cfb\u5462\uff1f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5305\u542b\u5173\u7cfb\u5305\u62ec\u76f8\u7b49\u7684\u60c5\u51b5\u3002  \n\u5224\u5b9a\u5305\u542b\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1 $\\forall str \\in S_i, str \n\\in S_j$ \u5373\u5728\u6bcf\u4e00\u5904 $Box_i$ \u80fd\u8f93\u51fa\u5492\u8bed\u7684\u5730\u65b9\uff0c$Box_j$ \u4e5f\u80fd\u8f93\u51fa\u3002\u7531\u6b64\u53ef\u4ee5\u5224\u5b9a\u5b58\u5728\u5305\u542b\u5173\u7cfb $S_i \\in S_j$\u3002\n\n#### \u4ee3\u7801\n\u9898\u76ee\u6bd4\u8f83\u53cb\u5584\uff0c\u6ca1\u4ec0\u4e48\u5751\uff0c\u4ee3\u7801\u4e5f\u597d\u5199\uff0c\u4e0d\u8fc7\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u522b\u7684\u9898\u89e3\u5f3a\u8c03\u8981\u4f7f\u7528 `long long`\uff0c\u6570\u636e\u91cf\u975e\u5e38\u5c0f\u554a\u2026\u2026\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <stack>\n\nusing namespace std;\nconst int Max = 55;\n\nstruct Box {\n    int g[Max][2];\n    bool p[Max];\n} a[Max];\n\nint s, dfn[Max], low[Max], scc[Max], l[Max], t, cnt, f[Max], ans;\nbool flag, vis[Max][Max], ins[Max];\nvector<int> g[Max], h[Max];\nstack<int> st;\n\nvoid check(int i, int j, int x, int y) {\n    if (a[i].p[x] < a[j].p[y]) \n        flag = false;\n    if (!flag || vis[x][y])\n        return;\n    vis[x][y] = true;\n    check(i, j, a[i].g[x][0], a[j].g[y][0]);\n    check(i, j, a[i].g[x][1], a[j].g[y][1]);\n}\n\nvoid tarjan(int x) {\n    dfn[x] = low[x] = ++t;\n    ins[x] = true;\n    st.push(x);\n    \n    for (int y: g[x])\n        if (!dfn[y]) {\n            tarjan(y);\n            low[x] = min(low[x], low[y]);\n        } else if (ins[y])\n            low[x] = min(low[x], dfn[y]);\n    \n    if (low[x] == dfn[x]) {\n        int y;\n        cnt++;\n        do {\n            y = st.top();\n            st.pop();\n            ins[y] = false;\n            scc[y] = cnt;\n            l[cnt]++;\n        } while (x != y);\n    }\n}\n\nint dfs(int x) {\n    if (f[x])\n        return f[x];\n    for (int y: h[x]) \n        f[x] = max(f[x], dfs(y));\n    return f[x] += l[x];\n}\n\nint main() {\n    cin >> s;\n    for (int i = 1, n, m; i <= s; i++) {\n        cin >> n >> m;\n        for (int j = 1, x; j <= m; j++) {\n            cin >> x;\n            a[i].p[x + 1] = true;\n        }\n        for (int j = 1, x, y; j <= n; j++) {\n            cin >> x >> y;\n            a[i].g[j][0] = x + 1;\n            a[i].g[j][1] = y + 1;\n        }\n    }\n    \n    // \u68c0\u67e5\u4e24\u4e24\u5305\u542b\u5173\u7cfb\n    for (int i = 1; i <= s; i++)\n        for (int j = 1; j <= s; j++) \n            if (i != j) {\n                flag = true;\n                memset(vis, 0, sizeof vis);\n                check(i, j, 1, 1);\n                \n                if (flag) // \u5efa\u56fe\n                    g[i].push_back(j);\n            }\n    \n    // Tarjan \u5224\u73af\n    for (int i = 1; i <= s; i++) \n        if (!dfn[i])\n            tarjan(i);\n    \n    // \u91cd\u65b0\u5efa\u56fe\uff0c\u5c06 SCC \u7f29\u6210\u70b9\n    for (int i = 1; i <= s; i++) \n        for (int j: g[i]) \n            if (scc[i] != scc[j]) \n                h[scc[i]].push_back(scc[j]);\n    \n    // DFS \u7edf\u8ba1\u7b54\u6848\n    for (int i = 1; i <= cnt; i++)\n        ans = max(ans, dfs(i));\n\n    cout << ans << endl;\n    return 0;\n}\n                       \n```\n\n",
        "postTime": 1656559852,
        "uid": 258563,
        "name": "\u6211\u662f\u900d\u900d",
        "ccfLevel": 6,
        "title": "P2321"
    },
    {
        "content": "\u770b\u61c2\u4e86\u697c\u4e0b\u7684\u697c\u4e0b\u7684\u9898\u89e3\uff0c\u4e8e\u662f\u6765\u53d1\u6ce2\u9898\u89e3\n\n\u8fd9\u9898\u8981\u505a\u51fa\u6765\uff0c\u9996\u5148**\u8bed\u6587**\u8981\u597d\u3002\u3002\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e00\u5768\u5492\u8bed\u673a\uff0c\u6bcf\u4e2a\u5492\u8bed\u673a\u6709\u4e00\u5768\u5143\u4ef6\uff0c\u5143\u4ef6\u5206\u4e3a\u666e\u901a\u5143\uff08\u778e\u8d77\u540d\u5b57\uff09\u548c\u8f93\u51fa\u5143\n\n\u4e00\u4e2a\u5492\u8bed\u673a\u7ecf\u8fc7\u8fd0\u884c\uff0c\u80fd\u4ea7\u751f\u4e00\u5768\u5492\u8bed\n\n\u5982\u679c\u4e00\u4e2a\u5492\u8bed\u673a\u80fd\u4ea7\u751f\u7684\u5492\u8bed\u5305\u62ec\u53e6\u4e00\u4e2a\u5492\u8bed\u673a\u80fd\u4ea7\u751f\u7684\u5492\u8bed\n\n\u8fd9\u4e2a\u5492\u8bed\u673a\u5c31\u662f\u53e6\u4e00\u4e2a\u5492\u8bed\u673a\u7684\u5347\u7ea7\n\n\u5728\u7a0b\u5e8f\u4e2d\u628a\u5b83\u4eec\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\n\n\u901a\u8fc7bfs\u5224\u65ad\u5b83\u4eec\u5347\u7ea7\u5173\u7cfb\n\n\u6700\u540e\u8dd1\u4e00\u4e2afloyed\u6700\u957f\u8def\n\n\u8f93\u51fa\u6700\u957f\u7684\u5c31\u5b8c\u4e86\n\n\u6700\u96be\u7684\u5c31\u662fbfs\u5224\u65ad\u5173\u7cfb\n\n```cpp\nbool look(int x,int y)\n{\n    memset(use,0,sizeof(use));\n    f[1][1]=f[1][2]=0;\n    int he=1,ta=1;\n    while(he<=ta)\n    {\n        int xx=f[he][1],yy=f[he][2];\n        if(go[x][xx]&&!go[y][yy])//\u5982\u679c\u8fd9\u4e2a\u5492\u8bed\u673a\u6709\u8f93\u51fa\u5143\u800c\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u5b83\u4eec\u95f4\u80af\u5b9a\u4e0d\u5b58\u5728\u5347\u7ea7\u5173\u7cfb\n        return 0;\n        int xxx=make[x][xx][0],yyy=make[y][yy][0];//\u52a00\u7684\u5143\n        int xxxx=make[x][xx][1],yyyy=make[y][yy][1];//\u52a01\u7684\u5143\n        if(!use[xxx][yyy])\n        {\n            use[xxx][yyy]=1;\n            f[++ta][1]=xxx;//\u5b58\u5165\u961f\u5217\n            f[ta][2]=yyy;\n        }\n        if(!use[xxxx][yyyy])\n        {\n            use[xxxx][yyyy]=1;\n            f[++ta][1]=xxxx;\n            f[ta][2]=yyyy;\n        }\n        he++;\n    }\n    return 1;//\u5b58\u5728\u5347\u7ea7\u5173\u7cfb\n}\n```\n",
        "postTime": 1507552897,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2321 \u3010[HNOI2006]\u6f58\u591a\u62c9\u7684\u5b9d\u76d2\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u7384\u5b66levelup...\u7136\u800c\u8fd9\u4e2a\u9898\u672c\u610f\u662ftarjan..\n\n\n\u601d\u8def\u697c\u4e0b\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff1a\n\n1. BFS\u5efa\u56fe\n\n2. ** Tarjan \u5220\u6389\u56fe\u4e2d\u7684\u5f3a\u8fde\u901a\u5206\u91cf**\n\n3.  \u8dd1\u6700\u957f\u8def..\n\n\n\u4e3a\u4ec0\u4e48\u8981\u8dd1\u4e00\u904dTarjan?\n\n\u5047\u8bbeA,B \u662f\u4e24\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u5492\u8bed\u673a\uff0c\u5224\u65ad\u5347\u7ea7\u5e8f\u5217\u7684\u65f6\u5019\u5fc5\u7136\u6709 is\\_levelup(A,B) == true \u548c is\\_levelup(B,A) == true \u540c\u65f6\u6210\u7acb\uff0c\n\n\u7b54\u6848\u7684\u5347\u7ea7\u5e8f\u5217\u5e94\u8be5\u662f ....AB.... \u6216\u8005 ....BA.... , \u800c\u4e0d\u662f ....ABABABABAB.... \uff0c\u6240\u4ee5\u8981\u5148\u7f29\u70b9\u518d\u7edf\u8ba1\n",
        "postTime": 1506735074,
        "uid": 36424,
        "name": "Templ_1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2321 \u3010[HNOI2006]\u6f58\u591a\u62c9\u7684\u5b9d\u76d2\u3011"
    }
]