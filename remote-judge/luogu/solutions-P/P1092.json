[
    {
        "content": "#### \u8fd9\u4e2a\u9898\u5b98\u65b9\u6b63\u89e3\u662f\u9ad8\u65af\u6d88\u5143\uff0c\u53ef\u662f\u6211\u4e0d\u4f1a\u554aQAQ\u3002\n\n\n- \u8bf4\u4e00\u4e0b\u641c\u7d22\u600e\u4e48\u505a\n\n\n- \u8fd9\u4e2a\u9898\u76ee\u7b2c\u4e00\u4e2a\u96be\u70b9\u5728\u4e8e\u4f60\u8981\u7406\u89e3 $ n $ \u8fdb\u5236\u7684\u52a0\u6cd5\n\n\n-  $ n $ \u8fdb\u5236\u7684\u52a0\u6cd5\u5c31\u662f\u5728\u5341\u8fdb\u5236\u7684\u57fa\u7840\u4e0a\u6ee1\u5341\u8fdb\u4e00\u6539\u6210\u6ee1$ n $ \u8fdb\u4e00\n\n\n- \u7531\u4e8e\u8fd9\u9053\u9898\u53ea\u8003\u8651\u52a0\u6cd5\uff0c\u6240\u4ee5\u8fdb\u4f4d\u53ea\u53ef\u80fd\u662f $ 1 $ \uff0c\u8bc1\u660e\u5c0f\u5b66\u751f\u90fd\u4f1a\uff0c\u7565\n\n\n- \u641c\u7d22\u7684\u5927\u4f53\u601d\u8def\u5c31\u662f\u4ece\u7b2c $1$ \u4f4d\u7684\u503c\u5f00\u59cb\u641c\uff0c\u641c\u5230\u6700\u540e\u4e00\u4f4d\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\n\n-  \u8003\u8651\u526a\u679d\n\n\n-  $ 3 $ \u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u662f $n$ \uff0c\u7531\u6b64\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u526a\u679d\n\n\n-  \u6700\u9ad8\u4f4d\u4e0d\u80fd\u6709\u8fdb\u4f4d\n\n-  \u5982\u679c\u6709\u8fdb\u4f4d\uff0c\u663e\u7136\u7b2c $3$ \u4e2a\u4e32\u7684\u957f\u5ea6\u4e0d\u4f1a\u662f $n$ \uff0c\u800c\u662f$n+1$\uff0c\u8fd9\u5e76\u4e0d\u5408\u6cd5\n\n\n-  \u4e00\u4e2a\u526a\u679d\u663e\u7136\u4e0d\u591f\u554a\uff0c\u518d\u60f3\u4e00\u4e2a\n\n\n- \u6587\u5b57\u4e0d\u592a\u597d\u63cf\u8ff0\uff0c\u6211\u4eec\u770b\u56fe\uff08\u4e0d\u4f1a\u7528latex\u5199\u7ad6\u5f0f\u554aQAQ\uff09\n\n\n   \n\n   ![qwq](https://i.loli.net/2017/08/22/599bd0b8e5d0b.png)\n\n- \u5047\u8bbe\u8fd9\u662f\u5341\u8fdb\u5236\u4e0b\u7684\u52a0\u6cd5\uff0c\u600e\u4e48\u5224\u65ad\u8fd9\u4e2a\u7ad6\u5f0f\u5bf9\u4e0d\u5bf9\uff1f\n\n\n- \u663e\u7136\u8fd9\u4e2a\u7ad6\u5f0f\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u4e2a\u4f4d\u4e0a$ (8+6)  mod 10=4 \\not=5$\n\n\n- \u7531\u6b64\u63a8\u5e7f\u5230\u6bcf\u4e00\u4f4d\uff0c\u4f46\u662f\u8fd8\u8981\u8003\u8651\u8fdb\u4f4d\uff0c\u4e0d\u614c\uff0c\u770b\u53e6\u4e00\u5f20\u56fe\n\n\n\n   ![qwq](https://i.loli.net/2017/08/22/599bd3642a721.png)\n\n- \u8fd9\u4e2a\u7ad6\u5f0f\u662f\u5bf9\u7684\u8fd8\u662f\u9519\u7684\uff1f\n\n\n- \u8fd9\u5e76\u4e0d\u597d\u5224\u65ad\uff0c\u867d\u7136$ (8+6)  mod 10=4 \\not=5$\uff0c\u4f46\u662f\u8fd9\u662f\u4e2d\u95f4\u4f4d\uff0c\u6709\u53ef\u80fd\u6709\u8fdb\u4f4d\n\n\n- \u5982\u679c\u6709\u8fdb\u4f4d\uff0c \u90a3\u4e48$ (8+6+1)  mod 10=5 $\uff0c\u8fd9\u4e00\u4f4d\u5c31\u662f\u5408\u6cd5\u7684\u4e86\u3002\n\n\n- \u7efc\u5408\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5f97\u5230\u4e86\u53e6\u4e00\u4e2a\u526a\u679d\u65b9\u6cd5\n\n\n- \u7528 $A$ \u548c $B$ \u8868\u793a\u4e24\u4e2a\u52a0\u6570\uff0c\u7528 $C$ \u8868\u793a\u4e24\u4e2a\u52a0\u6570\u7684\u548c\n\n- \u5982\u679c\u67d0 $i$ \u4f4d\uff0c\u6ee1\u8db3$(A[i]+B[i])mod\\;n\\not=C[i]$ \u548c $(A[i]+B[i]+1)mod\\;n\\not=C[i]$\n\n\n- \u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u8fd9\u79cd\u72b6\u6001\u80af\u5b9a\u4e0d\u5bf9\uff0c\u76f4\u63a5 $return$ \u5c31\u597d\u4e86\n\n\n- \u6216\u8bb8\u8fd8\u6709\u522b\u7684\u526a\u679d\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u5e94\u8be5\u591f\u7528\u4e86\n\n\n- \u6211\u7684\u4ee3\u7801\u91cc\u8fd8\u7528\u4e86\u4e00\u4e2a\u7384\u5b66\u7684 $next $ \u6570\u7ec4\uff0c\u6709\u4ec0\u4e48\u7528\u7167\u7740\u6837\u4f8b\u624b\u63a8\u4e00\u904d\u5c31\u77e5\u9053\u4e86\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u3002\u5b9e\u5728\u770b\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211qwq\n\n\n> \u5b66\u4e60\u79d1\u5b66\uff0c\u5b9e\u7528\u7384\u5b66\u2014\u2014\u67d0\u949f\u59d3dalao\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define maxn 30\nint a[maxn],b[maxn],c[maxn];\nint num[maxn],Next[maxn],n,cnt;\nchar s1[maxn],s2[maxn],s3[maxn];\nbool used[maxn];\nbool Judge() {\n    for(int i=n-1,x=0;i>=0;i--) {\n        int A=num[a[i]],B=num[b[i]],C=num[c[i]];\n        if((A+B+x)%n!=C) return false;\n        x=(A+B+x)/n;\n    }\n    return true;\n}\nbool CanPrune() {//prune: \u526a\u679d\u2014\u767e\u5ea6\u7ffb\u8bd1\u3002\n    if(num[a[0]]+num[b[0]]>=n)\n        return true;\n    for(int i=n-1;i>=0;i--) {\n        int A=num[a[i]],B=num[b[i]],C=num[c[i]];\n        if(A==-1||B==-1||C==-1) continue;\n        if((A+B)%n!=C&&(A+B+1)%n!=C)\n            return true;\n    }\n    return false;\n}\nvoid Print() {\n    for(int i=0;i<n;i++)\n        printf(\"%d \",num[i]);\n    exit(0);\n}\nvoid dfs(int x) {\n    if(CanPrune()==true) return;\n    if(x==n) {\n        if(Judge()==true) Print();\n        return;\n    }\n    for(int i=n-1;i>=0;i--)\n        if(used[i]==false) {\n            num[Next[x]]=i;\n            used[i]=true;\n            dfs(x+1);\n            num[Next[x]]=-1;\n            used[i]=false;\n        }\n    return;\n}\ninline int id(char c) {\n    return c-'A';\n}\nvoid GetNext(int x) {\n    if(used[x]==false) {\n        used[x]=true;\n        Next[cnt++]=x;\n    }\n    return;\n}\nint main() {\n    scanf(\"%d\",&n);\n    scanf(\"%s%s%s\",s1,s2,s3);\n    for(int i=0;i<n;i++) {\n        a[i]=id(s1[i]);\n        b[i]=id(s2[i]);\n        c[i]=id(s3[i]);\n        num[i]=-1;\n    }\n    for(int i=n-1;i>=0;i--) {\n        GetNext(a[i]);\n        GetNext(b[i]);\n        GetNext(c[i]);\n    }\n    for(int i=0;i<n;i++) used[i]=false;\n    dfs(0);\n    return 0;\n}\n```\n\u4ee3\u7801\u770b\u4e0d\u61c2\u4e5f\u53ef\u4ee5\u95ee\u6211qwq\n",
        "postTime": 1503387444,
        "uid": 37700,
        "name": "zzlzk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#define maxn 30\nint n,flag[maxn];\nchar s[4][maxn];\nbool use[maxn];\nint id(char ch)//\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57 \n{\n    return ch-'A'+1;    \n}\nvoid dfs(int x,int y,int t)//x\u4ee3\u8868\u5217\uff0cy\u4ee3\u8868\u884c\uff0ct\u4ee3\u8868\u8fdb\u4f4d \n{\n    if (x==0) //\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u53f3\u5230\u5de6\uff0cx==0\u8868\u793a\u641c\u5230\u4e86\u6700\u540e\u4e00\u5217 \n    {\n        if (t==0)//\u6700\u540e\u4e00\u5217\u4e0d\u80fd\u6709\u8fdb\u4f4d\uff0c\u5982\u679c\u8fdb\u4e86\u4ee5\u4e3a\u5219\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4e32\u4f1a\u6bd4\u5176\u4ed6\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u4e00\u4f4d \n        {\n            for (int i=1;i<n;i++) //\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8f93\u51fa \n                printf(\"%d \",flag[i]);//\u8f93\u51fa \n            printf(\"%d\\n\",flag[n]);//\u8f93\u51fa \n            exit(0);    //\u76f8\u5f53\u4e8ereturn  0;\u7a0b\u5e8f\u7ed3\u675f \n        }\n        return;//\u8fd4\u56de \n    }\n    for (int i=x-1;i>=1;i--) //\u526a\u679d1 \n    {\n        int w1=flag[id(s[1][i])];//w1\u8868\u793a\u7b2c\u4e00\u884c\u5b57\u7b26\u4e32\u4ee3\u8868\u7684\u6570\u5b57 \n        int w2=flag[id(s[2][i])];//w2\u8868\u793a\u7b2c\u4e8c\u884c\u5b57\u7b26\u4e32\u4ee3\u8868\u7684\u6570\u5b57 \n        int w3=flag[id(s[3][i])];//w3\u8868\u793a\u7b2c\u4e09\u884c\u5b57\u7b26\u4e32\u4ee3\u8868\u7684\u6570\u5b57 \n        if (w1==-1||w2==-1||w3==-1) //\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u8fd8\u6ca1\u88ab\u8d4b\u503c\uff0c\u5c31\u8fd4\u56de \n            continue;\n        if ((w1+w2)%n!=w3&&(w1+w2+1)%n!=w3) \n            return;    //\u5982\u679c\u65e0\u8bba\u8fdb\u4f4d\u4e0e\u5426\uff0c\u90fd\u4e0d\u80fd\u6574\u9664\u5bf9\u5e94\u7684w3\u5c31\u8bf4\u660e\u5b57\u7b26\u4e32\u4e0d\u5339\u914d\uff0c\u76f4\u63a5return ; \n    }\n    if (flag[id(s[y][x])]==-1) ////\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u8fd8\u6ca1\u88ab\u8d4b\u503c\uff0c\u5c31\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c \n    {\n        for (int i=n-1;i>=0;i--) //\u5012\u7740\u679a\u4e3e\u66f4\u5feb \n            if (!use[i]) //\u5982\u679c\u8fd9\u4e2a\u6570\u6ca1\u6709\u7528\u8fc7 \n            {\n                if (y!=3) //\u4e14\u4e0d\u662f\u6700\u540e\u4e00\u884c \n                {\n                    flag[id(s[y][x])]=i;//\u5c31\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u8d4b\u4e0a\u503c \n                    use[i]=1;//\u6807\u8bb0\u8fd9\u4e2a\u6570\u7528\u8fc7 \n                    dfs(x,y+1,t);//\u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u884c \n                    flag[id(s[y][x])]=-1;//\u8fd8\u539f \n                    use[i]=0;//\u8fd8\u539f \n                }\n                else //\u5f53y==3\u65f6 \n                {\n                    int w=flag[id(s[1][x])]+flag[id(s[2][x])]+t;//\u4e24\u4e2a\u6570\u52a0\u4e0a\u5b83\u4eec\u7684\u8fdb\u4f4d \n                    if (w%n!=i) \n                        continue;\n                    use[i]=1;flag[id(s[3][x])]=i;//\u8d4b\u503c\uff0c\u6807\u8bb0\u8fd9\u4e2a\u6570\u7528\u8fc7 \n                    dfs(x-1,1,w/n);//\u641c\u7d22\u4e0b\u4e00\u5217\uff0c\u8fdb\u4f4d\u9700\u8981\u6539\u53d8 \n                    use[i]=0;flag[id(s[3][x])]=-1;//\u8fd8\u539f \n                }\n            }\n    }\n    else //\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86 \n    {\n        if (y!=3) //\u7ee7\u7eed\u641c\u7d22 \n            dfs(x,y+1,t);\n        else \n        {\n            int w=flag[id(s[1][x])]+flag[id(s[2][x])]+t;\n            if (w%n!=flag[id(s[3][x])]) //\u526a\u679d 2\n                return;\n            dfs(x-1,1,w/n);//\u641c\u7d22\u4e0b\u4e00\u5217\uff0c\u8fdb\u4f4d\u9700\u8981\u6539\u53d8 \n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);//\u8bfb\u5165n,\u4ee3\u8868n\u8fdb\u5236\u7b49...... \n    for (int i=1;i<=3;i++) \n        scanf(\"%s\",s[i]+1);//\u8bfb\u51653\u884c\u5b57\u7b26\u4e32 \n    memset(flag,-1,sizeof(flag));//\u5c06\u6240\u6709\u4f4d\u7f6e\u6807\u8bb0\u4e3a\u672a\u8d4b\u503c \n    dfs(n,1,0);//\u4ece\u53f3\u5f80\u5de6\uff0c\u4e0a\u5f80\u4e0b\u641c\u7d22\uff0c\u6240\u6709\u4ece\u7b2cn\u5217\uff0c\u7b2c1\u884c\u5f00\u59cb \n    return 0;//\u7ed3\u675f \n}\n```",
        "postTime": 1503474201,
        "uid": 26834,
        "name": "\u270cyww",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u4ee5\u4e2a\u4f4d\u4e3a\u7b2c\u4e00\u5217\uff0cdi\u8868\u793a\u7b2ci\u5217\u7684\u8fdb\u4f4d\u60c5\u51b5\uff0c\u5bf9\u4e8e\u7b2ci\u5217\uff0c\u5982\u679c\u7ad6\u5f0f\u662f\n\n ![](https://cdn.luogu.com.cn/upload/pic/4941.png) \n\n\u90a3\u4e48\u663e\u7136\u6709\n\n ![](https://cdn.luogu.com.cn/upload/pic/4942.png) \n\n\u53bb\u6389\u6a21\u8fd0\u7b97\u5f97\u5230\n\n ![](https://cdn.luogu.com.cn/upload/pic/4943.png) \n\n\u7531\u4e8e\u8fd9\u662f\u7ad6\u5f0f\u52a0\u6cd5\uff0c\u90a3\u4e48\\_\u663e\u7136k\u5c31\u662fdi\\_\u3002\n\n\u90a3\u5c31\u6709\n\n ![](https://cdn.luogu.com.cn/upload/pic/4944.png) \n\n\u5c06\u5e38\u6570\u9879\u79fb\u5230\u53f3\u8fb9\u53bb\n\n ![](https://cdn.luogu.com.cn/upload/pic/4945.png) \n\n\u81f3\u6b64\uff0c\u65b9\u7a0b\u5217\u5b8c\u4e86\u3002\n\n\u6211\u4eec\u679a\u4e3edi\uff0c\u8fdb\u884c\u6c42\u89e3\u3002\n\n\u663e\u7136 ![](https://cdn.luogu.com.cn/upload/pic/4946.png) \u90fd\u662f0\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e ![](https://cdn.luogu.com.cn/upload/pic/4948.png) \u6b21\uff0c\u9ad8\u65af\u6d88\u5143\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f ![](https://cdn.luogu.com.cn/upload/pic/4947.png) \uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f ![](https://cdn.luogu.com.cn/upload/pic/4949.png) \uff0c\u5f53\u7136\uff0c\u8fd9\u663e\u7136\u4e0d\u591f\u5feb\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6539\u53d8\u7684\u53ea\u6709\u5e38\u6570\u9879\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u505a\u4e00\u6b21\u9ad8\u65af\u6d88\u5143\u3002\u901a\u8fc7\u8fd9\u6b21\u9ad8\u65af\u6d88\u5143\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u6c42\u51fa\u672a\u77e5\u6570\u7684\u7cfb\u6570\uff0c\u90a3\u5bf9\u4e8e\\_\u5e38\u6570\u9879\\_\u5462\uff1f\n\n\n##\u4f18\u5316\u4ece\u8fd9\u91cc\u5f00\u59cb\n\n\n\u8bbe\u7b2ci\u4e2a\u65b9\u7a0b\u7684\\_\u5316\u7b80\u540e\\_\u7684\u5e38\u6570\u9879\u4e3a ![](https://cdn.luogu.com.cn/upload/pic/4950.png) \uff0c\n\n\u8bbe\u9ad8\u65af\u6d88\u5143\u4e4b\u540e\u5f97\u5230\u7684\u672a\u77e5\u6570\u7684\u7cfb\u6570\u4e3a**\\_K\\_**\n\n\u90a3\u4e48\uff0c\u9ad8\u65af\u6d88\u5143\u540e\u7684\u77e9\u9635\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\n\n ![](https://cdn.luogu.com.cn/upload/pic/4951.png) \n\n\u6211\u4eec\u518d\u7528\u4e00\u4e2a\u6570\u7ec4 ![](https://cdn.luogu.com.cn/upload/pic/4952.png) \u6765\u4fdd\u5b58\u7b2ci\u4e2a\u65b9\u7a0b\u7684\u5316\u7b80\u540e\u7684\u5e38\u6570\u9879\u548c ![](https://cdn.luogu.com.cn/upload/pic/4953.png) \u7684\u5173\u7cfb\n\n\u5373\n ![](https://cdn.luogu.com.cn/upload/pic/4954.png) \n\n\u90a3\u4e48\u663e\u7136\uff0c\u521d\u59cb\u65f6\uff0c ![](https://cdn.luogu.com.cn/upload/pic/4955.png)\n\n\u90a3\u9ad8\u65af\u6d88\u5143\u540e\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\n\n ![](https://cdn.luogu.com.cn/upload/pic/4956.png) \n\n\u6bcf\u6b21\u679a\u4e3e\u51fad\u6570\u7ec4\u7684\u53d6\u503c\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 ![](https://cdn.luogu.com.cn/upload/pic/4957.png) \u7684\u65f6\u95f4\u7b97\u51fa\u5e38\u6570\u9879 ![](https://cdn.luogu.com.cn/upload/pic/4950.png) \uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a ![](https://cdn.luogu.com.cn/upload/pic/4958.png) \uff0c\u4f46\u7531\u4e8e\u5f88\u591a\u53d6\u503c\u4e0d\u7528 ![](https://cdn.luogu.com.cn/upload/pic/4957.png) \u7684\u65f6\u95f4\u5373\u53ef\u5224\u5b9a\u4e3a\u4e0d\u53ef\u884c\\_(\u770b\u6211\u7684check()\u51fd\u6570)\\_\uff0c\u6240\u4ee5\u65f6\u95f4\u65f6\u95f4\u4f1a\u6bd4\u8f83\u77ed\u3002\n\n##\u4f60\u770b\u61c2\u4e86\u5417\uff1f\uff08\u6211\u731c\u4f60\u6ca1\u770b\u61c2\uff09\n\n\u770b\u770b\u6211\u4e3e\u7684\u4f8b\u5b50\uff1a\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n5\nABCED\nBDACE\nEBBAA\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u77e9\u9635\n\n ![](https://cdn.luogu.com.cn/upload/pic/4959.png) \n\n\u9ad8\u65af\u6d88\u5143\u540e\u77e9\u9635\u53d8\u4e3a\n\n ![](https://cdn.luogu.com.cn/upload/pic/4960.png) \n\n\u679a\u4e3e ![](https://cdn.luogu.com.cn/upload/pic/4953.png) \uff0c\u6839\u636e\u589e\u5e7f\u77e9\u9635\u7684\u53f3\u8fb9\u7b97\u51fa\u5e38\u6570\u9879\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define MAXN 26\nint n,equ,var,d[MAXN+10],x[MAXN+10];\ntypedef int matrix[MAXN+10][MAXN+10];\nmatrix a,g;\nbool vis[MAXN+10];\nchar s[3][MAXN+10];\nvoid Read(int &x){\n    char c;\n    while(c=getchar(),c!=EOF)\n        if(c>='0'&&c<='9'){\n            x=c-'0';\n            while(c=getchar(),c>='0')\n                x=x*10+c-'0';\n            ungetc(c,stdin);\n            return;\n        }\n}\nvoid read(){\n    Read(n);\n    scanf(\"%s%s%s\",s[0],s[1],s[2]);\n    int i,j;\n    for(i=0;i<n;i++){\n        for(j=0;j<2;j++)\n            a[n-i][s[j][i]-'A'+1]++;\n        a[n-i][s[2][i]-'A'+1]--;\n    }\n    for(i=1;i<=n;i++)\n        g[i][i]=n,g[i][i-1]=-1;\n    g[1][0]=0;\n    equ=var=n;\n}\nint gcd(int a,int b){\n    int t;\n    while(b){\n        t=a%b;\n        a=b;\n        b=t;\n    }\n    return a;\n}\nvoid gauss_jordan(){\n    int i,j,row,col,mxr,lcm;\n    for(row=col=1;row<=equ&&col<=var;row++,col++){\n        mxr=row;\n        for(i=row+1;i<=equ;i++)\n            if(abs(a[i][col])>abs(a[mxr][col]))\n                mxr=i;\n        if(mxr!=row)\n            swap(a[row],a[mxr]),swap(g[row],g[mxr]);\n        if(!a[row][col]){\n            row--;\n            continue;\n        }\n        for(i=1;i<=equ;i++)\n            if(i!=row&&a[i][col]){\n                lcm=a[i][col]/gcd(a[i][col],a[row][col])*a[row][col];\n                int t1=lcm/a[i][col],t2=lcm/a[row][col];\n                for(j=1;j<=var;j++){\n                    g[i][j]=t1*g[i][j]-t2*g[row][j];\n                    a[i][j]=t1*a[i][j]-t2*a[row][j];\n                }\n            }\n    }\n}\nbool check(){\n    int i,j;\n    memset(vis,0,sizeof vis);\n    for(i=1;i<=n;i++){\n        x[i]=0;\n        for(j=1;j<=n;j++)\n            x[i]+=g[i][j]*d[j];\n        if(x[i]%a[i][i]||x[i]/a[i][i]<0||x[i]/a[i][i]>=n||vis[x[i]/a[i][i]])\n            return 0;\n        x[i]/=a[i][i];\n        vis[x[i]]=1;\n    }\n    return 1;\n}\nvoid print(){\n    for(int i=1;i<n;i++)\n        printf(\"%d \",x[i]);\n    printf(\"%d\\n\",x[n]);\n}\nvoid dfs(int i){\n    if(i==n){\n        if(check()){\n            print();\n            exit(0);\n        }\n        return;\n    }\n    d[i]=1;\n    dfs(i+1);\n    d[i]=0;\n    dfs(i+1);\n}\nint main()\n{\n    read();\n    gauss_jordan();\n    dfs(1);\n}\n```",
        "postTime": 1491656068,
        "uid": 30251,
        "name": "aysyxx53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u770b\u4e86\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u8fd8\u662f\u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u4e8e\u662f\u8fc7\u4e86\u4e4b\u540e\u51b3\u5b9a\u81ea\u5df1\u5199\u4e00\u4e2a\uff0c\u6765\u5e2e\u5e2e\u50cf\u6211\u4e00\u6837\u7684\u849f\u84bb\u5427qwq\n\n\u597d\u7684\uff0c\u8fdb\u5165\u6b63\u9898\n\n\u8bfb\u5b8c\u9898\u540e\uff0c\u6211\u4eec\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7684\u80af\u5b9a\u662f\u641c\u7d22\u3002\u5982\u4f55\u641c\u7d22\uff1f\u4e00\u79cd\u5f88\u663e\u7136\u7684~~\u66b4\u529b~~\u641c\u7d22\u65b9\u6cd5\u4e3a\u679a\u4e3e $0$ \u81f3 $n-1$ \u7684\u5168\u6392\u5217\uff0c\u7136\u540e\u91c7\u7528\u56de\u6eaf\u6cd5\uff0c\u8fb9\u641c\u7d22\u8fb9\u5224\u65ad\u5408\u6cd5\u6027\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u601d\u8def\u4e3a\uff1a\n- \u8bfb\u5165\u6570\u636e\n- \u5f00\u59cb\u641c\u7d22\n- \u7b2c $i$ \u5c42\u641c\u7d22\u7b2c $i$ \u4e2a\u5b57\u6bcd\u7684\u503c\uff08\u5373 ```char(i+'A'-1)```\uff09\u7684\u503c\uff0c\u91c7\u7528\u4e00\u4e2a```judge```\u51fd\u6570\u5224\u65ad\u5408\u6cd5\u6027\n- \u5f53\u641c\u7d22\u5b8c\u6240\u6709\u5b57\u6bcd\u5e76\u4e14\u5168\u90e8\u5408\u6cd5\u540e\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u9000\u51fa\u7a0b\u5e8f\n\n\u4e3b\u8981\u4ee3\u7801\u5982\u4e0b\uff1a\n```\nchar a[30],b[30],c[30];\nint t[300],used[30];\nint n;\nbool ok_(){\n    for(int i=n;i>=1;i--){\n        if(t[a[i]]==-1||t[b[i]]==-1||t[c[i]]==-1)continue;\n        if((t[a[i]]+t[b[i]])%n!=t[c[i]]){\n            if((t[a[i]]+t[b[i]]+1)%n!=t[c[i]])return 0;\n        }\n    }\n    return 1;\n}\nvoid Try_(){\n    int jw=0;\n    for(int i=n;i>=1;i--){\n        int s=t[a[i]]+t[b[i]]+jw;\n        if(t[c[i]]!=s%n)return ;\n        jw=s/n;\n    }\n    cout<<t['A'];\n    for(int i='A'+1;i<='A'+n-1;i++)cout<<' '<<t[i];\n    exit(0);//\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\uff0c\u5934\u6587\u4ef6\"cstdlib\"\n}\nvoid dfs(int now){\n    //\u4ea7\u751f0\u5230n-1\u7684\u5168\u6392\u5217 \n    if(now>n){\n        Try_();\n        return ;\n    }\n    for(int i=n-1;i>=0;i--){//\u6ce8\u610f\u5012\u5e8f\u641c\u7d22\n        if(used[i])continue;\n        t[now+'A'-1]=i;\n        if(ok_()){\n            used[i]=1;\n            dfs(now+1);\n            used[i]=0;\n        }\n    }\n    t[now+'A'-1]=-1;\n}\n```\n\n\u8fd9\u6837\uff0c\u53ef\u4ee5\u62ff\u5230 $50$ \u5206\u3002\n\n\u90a3\u4e48\u5982\u4f55\u62ff\u5230 $100$ \u5206\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c```ok_()```\u51fd\u6570\u5e76\u6ca1\u6709\u4e3a\u6211\u4eec\u6d88\u9664\u592a\u591a\u7684\u641c\u7d22\u60c5\u51b5\u3002\u56e0\u4e3a\u641c\u7d22\u987a\u5e8f\u662f\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\u6765\u641c\u7684\uff0c\u5f88\u96be\u78b0\u5230\u4e09\u4e2a\u5b57\u6bcd\u90fd\u641c\u8fc7\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u8fd8\u4e0d\u591f\u5feb\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u53e6\u4e00\u4e2a\u526a\u679d\uff1a\u6539\u53d8\u641c\u7d22\u987a\u5e8f\uff0c\u4ece\u7b49\u5f0f\u7684**\u6700\u4f4e\u4f4d\u7684\u5b57\u6bcd**\u5f00\u59cb\u641c\u3002\u4e00\u4f4d\u4e00\u4f4d\u5f80\u524d\u641c\u3002\u4f8b\u5982\u6837\u4f8b\n```\nABCED\nBDACE\nEBBAA\n```\n\u6211\u4eec\u7684\u641c\u7d22\u987a\u5e8f\u5373\u4e3a\uff1a```DEACB```\u3002\u8fd9\u6837\u4fbf\u53ef\u4ee5\u83b7\u5f97 $100$ \u5206\u3002\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<string>\n#include<cstdlib>\nusing namespace std;\nchar a[30],b[30],c[30];\nint t[300],used[30],p[30],u[30],y;\nint n;\nbool ok_(){\n    for(int i=n;i>=1;i--){\n        if(t[a[i]]==-1||t[b[i]]==-1||t[c[i]]==-1)continue;\n        if((t[a[i]]+t[b[i]])%n!=t[c[i]]){\n            if((t[a[i]]+t[b[i]]+1)%n!=t[c[i]])return 0;\n        }\n    }\n    return 1;\n}\nvoid Try_(){\n    int jw=0;\n    for(int i=n;i>=1;i--){\n        int s=t[a[i]]+t[b[i]]+jw;\n        if(t[c[i]]!=s%n)return ;\n        jw=s/n;\n    }\n    cout<<t['A'];\n    for(int i='A'+1;i<='A'+n-1;i++)cout<<' '<<t[i];\n    exit(0);\n}\nvoid dfs(int now){\n    //\u4ea7\u751f0\u5230n-1\u7684\u5168\u6392\u5217 \n    if(now>n){\n        Try_();\n        return ;\n    }\n    for(int i=n-1;i>=0;i--){\n        if(used[i])continue;\n        t[p[now]+'A'-1]=i;\n        if(ok_()){\n            used[i]=1;\n            dfs(now+1);\n            used[i]=0;\n        }\n    }\n    t[p[now]+'A'-1]=-1;\n}\nint main(){\n    memset(t,-1,sizeof(t));\n    scanf(\"%d\",&n);\n    scanf(\"%s%s%s\",a+1,b+1,c+1);\n    for(int i=n;i>=1;i--){\n        if(!u[a[i]-'A'+1])p[++y]=a[i]-'A'+1,u[a[i]-'A'+1]=1;\n        if(!u[b[i]-'A'+1])p[++y]=b[i]-'A'+1,u[b[i]-'A'+1]=1;\n        if(!u[c[i]-'A'+1])p[++y]=c[i]-'A'+1,u[c[i]-'A'+1]=1;\n    }\n    dfs(1);\n    return 0;\n}\n```\n\n\u5f53\u7136\uff0c\u4ee5\u4e0a\u7684\u526a\u679d\u4ec5\u4ec5\u662f\u6240\u6709\u526a\u679d\u4e2d\u7684\u76ae\u6bdb\u3002\u9650\u4e8e\u7bc7\u5e45\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4f18\u5316\uff0c\u7ed9\u51fa\u4e00\u4e9b\u63d0\u793a\uff1a\n- ```ok_()```\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u7ed9\u6211\u4eec\u6d88\u9664\u66f4\u591a\u7684\u60c5\u51b5\uff1f\u6bd4\u5982\uff0c\u5df2\u7ecf\u641c\u8fc7\u4e86\u4e24\u4e2a\u52a0\u6570\u7684\u7b2c $x$ \u4f4d\u5206\u522b\u503c\u4e3a $a,b$\uff0c\u4f46\u662f $used[(a+b)\\ mod\\ n]$ \u548c $used[(a+b+1)\\ mod\\ n]$ \u90fd\u5df2\u7ecf\u4e3a $true$\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u53ef\u4ee5\u88ab\u526a\u6389\uff1f\n- \u6700\u9ad8\u4f4d\u80fd\u5426\u6709\u8fdb\u4f4d\uff1f\u60f3\u60f3\u4e3a\u4ec0\u4e48\uff1f\n- ......",
        "postTime": 1540382842,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u7ecf\u5178\u7684\u641c\u7d22\u9898\u3002\u6700\u5355\u7eaf\u7684\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n!)\uff0c\u662f\u4f1a\u975e\u5e38\u4e25\u91cd\u7684\u8d85\u65f6\u7684\u3002\u8ba1\u7b97\u673a\u662f\u5f88\u201c\u7b28\u201d\u7684\uff0c\u5b83\u4e0d\u4f1a\u601d\u8003\uff0c\u5728\u76f2\u76ee\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f88\u5bb9\u6613\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n\u8ba1\u7b97\u673a\u5728\u67d0\u4e00\u4f4d\u641c\u7d22\u51fa\u4e86\u4e00\u4e2a\u7b97\u5f0f1 + 1 = 3\uff0c\u5e76\u4e14\u7ee7\u7eed\u641c\u7d22\u3002\n\n\u660e\u663e\uff0c\u4eba\u773c\u5f88\u5bb9\u6613\u5c31\u770b\u51fa\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f46\u8ba1\u7b97\u673a\u4e0d\u4f1a\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u7b2c\u4e00\u4e2a\u526a\u679d\uff1a\u6bcf\u6b21\u641c\u7d22\u7684\u65f6\u5019\uff0c\u4ece\u6700\u540e\u5411\u524d\u5224\u65ad\u662f\u5426\u6709\u4e0d\u5408\u6cd5\u7684\u5f0f\u5b50\u3002\n\n\u8fd9\u4e00\u4e2a\u526a\u679d\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u6548\u679c\u5374\u975e\u5e38\u7684\u597d\u3002\u56e0\u4e3a\u5b83\u526a\u53bb\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\u3002\u4e3a\u4e86\u914d\u5408\u8fd9\u4e00\u79cd\u526a\u679d\u66f4\u597d\u7684\u5b9e\u884c\uff0c\u641c\u7d22\u987a\u5e8f\u7684\u6539\u53d8\u4e5f\u6210\u4e3a\u5927\u5927\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\u7684\u5173\u952e\uff1a\u4ece\u53f3\u5f80\u5de6\uff0c\u6309\u7167\u5b57\u6bcd\u51fa\u73b0\u987a\u5e8f\u641c\u7d22\uff0c\u53c8\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u5148\u526a\u6389\u5e9f\u679d\u7684\u60c5\u51b5\uff0c\u4f7f\u7a0b\u5e8f\u7684\u6548\u7387\u5f97\u5230\u5927\u5927\u7684\u63d0\u9ad8\u3002\n\n\u6709\u4e86\u4ee5\u4e0a\u4e24\u4e2a\u526a\u679d\uff0c\u7a0b\u5e8f\u5c31\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u5927\u90e8\u5206\u6d4b\u8bd5\u70b9\u4e86\u3002\u4f46\u662f\u6709\u6ca1\u6709\u66f4\u591a\u7684\u526a\u679d\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\n\n\u6839\u636e\u524d\u9762\u7684\u526a\u679d\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u7c7b\u4f3c\u7684\u51e0\u4e2a\u526a\u679d\uff1a\n\n\u5bf9\u4e8ea + b = c\u7684\u5f62\u5f0f\uff0c\u5047\u5982\uff1a\n\n\nA***?***\n\n\n\n+ B\\*?**?**\n\n\n\nC***???\\*\n\n\n\n\u5176\u4e2d\\*\u4ee3\u8868\u5df2\u77e5\uff0c?\u4ee3\u8868\u672a\u77e5\u3002\u90a3\u4e48\uff0cA + B\u4e0eC\u7684\u60c5\u51b5\u5e76\u4e0d\u80fd\u76f4\u63a5\u786e\u5b9a\u3002\u4f46\u662f\uff0c\u5047\u5982(A + B) % N\u4e0e(A + B + 1) % N\u90fd\u4e0d\u7b49\u4e8eC\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b49\u5f0f\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u56e0\u4e3a\u5b83\u53ea\u6709\u8fdb\u4f4d\u548c\u4e0d\u8fdb\u4f4d\u7684\u4e24\u79cd\u60c5\u51b5\u3002\n\n\n\n\u540c\u6837\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u8bb0\u5f55\u4e86Used\u8868\u793a\u4e00\u4e2a\u6570\u5b57\u6709\u6ca1\u6709\u7528\u8fc7\uff0c\u90a3\u4e48\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4f4dA + B = C\u7684\u7b49\u5f0f\uff0c\u5982\u679c\u5df2\u7ecf\u5f97\u5230\u4e86\u4e24\u4e2a\u6570\uff0c\u53e6\u4e00\u4e2a\u6570\u8fd8\u5f85\u641c\u7d22\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u52a0\u5165\u4e00\u4e2a\u526a\u679d\uff1a\n\n\u4f8b\u5982A + ? = C\u7684\u5f62\u5f0f\uff0c\n\n\u8003\u8651\u4e0d\u8fdb\u4f4d\u7684\u60c5\u51b5\uff0c\u5219?\u5904\u4e3aP1 = (C - A + N) % N\n\n\u5047\u5982\u8003\u8651\u8fdb\u4f4d\u7684\u60c5\u51b5\uff0c\u5219?\u5904\u4e3aP2 = (C - A - 1 + N) % N\n\n\u5047\u5982P1\u3001P2\u5747\u88ab\u4f7f\u7528\u8fc7\uff0c\u90a3\u4e48\u8fd9\u4e2a\u641c\u7d22\u4e00\u5b9a\u662f\u65e0\u6548\u7684\uff0c\u53ef\u4ee5\u526a\u53bb\u3002\n\n\u6709\u4e86\u4ee5\u4e0a\u7684\u526a\u679d\uff0c\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u901a\u8fc7\u6240\u6709\u7684\u6d4b\u8bd5\u6570\u636e\u4e86\u3002\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u503c\u5f97\u601d\u8003\u7684\u526a\u679d\u4ee5\u53ca\u5176\u4ed6\u7684\u601d\u8def\uff0c\u4f8b\u5982\u679a\u4e3e\u8fdb\u4f4d\u3001\u89e3\u65b9\u7a0b\uff08\u4f46\u662f\u53ef\u80fd\u9700\u8981\u679a\u4e3e\uff09\u7b49\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u8ba8\u8bba\u4e86\u3002\n",
        "postTime": 1380713397,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "# - 1.DFS\u6df1\u641c\n\n## - 2.\u53ef\u884c\u6027\u526a\u679d\u3001\u4f18\u5316\n\n### - 3.\u8981\u6ce8\u610f\u679a\u4e3e\u987a\u5e8f\n\n\n\u9996\u5148  \u6211\u4eec\u5012\u5e8f\u50a8\u5b58  \u4ee5\u65b9\u4fbf\u5224\u65ad\u662f\u5426\u53ef\u884c\u65f6\u505a\u7684A+B=C\n\n\u5148\u60f3\u4e00\u4e2a\u66b4\u529b\uff1a\u679a\u4e3e\u8fd9n\u4e2a\u5b57\u6bcd\u5206\u522b\u5bf9\u5e94\u54ea\u4e2a\u6570\u5b57 \u6700\u540e\u6765\u4e2a\u5224\u65ad  \u8fd9\u6837\u5e94\u8be5\u662f\u8fc7\u4e09\u4e2a\u70b9 30\n\n\u63a5\u7740  \u8fdb\u884c\u526a\u679d\u4f18\u5316\n\n1. \u9996\u5148 \u5b9a\u4e49flag \u82e5\u6709\u53ef\u884c\u89e3\uff08\u4e00\u5b9a\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff09\u65f6  flag=1\n\ndfs\u65f6 \u5148\u770bflag\u662f\u5426\u4e3a1  \u82e5flag\u4e3a1  \u5219\u6709\u627e\u5230\u53ef\u884c\u89e3  \u5176\u540e\u7684dfs\u5b8c\u5168\u4e0d\u9700\u8981\u3002\n\n2. \u6211\u4eec\u4e0d\u5fc5\u7b49\u5168\u679a\u4e3e\u5b8c\u8fd9n\u4e2a\u5b57\u6bcd\u518d\u8fdb\u884c\u5224\u65ad  \u53ef\u4ee5\u6bcf\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u540e\u8fdb\u884c\u5224\u65ad \u82e5A B C\u4e32\u4e2d\u6709\u672a\u8d4b\u503c\u7684\u5b57\u6bcd  \u8df3\u51fa\n\n\u82e5\u4e09\u4e2a\u90fd\u8d4b\u503c  \u5224\u65ad\u662f\u5426 (A[i]+B[i]+t)%n==c \u82e5\u4e0d\u662f  return 0   \u82e5\u662f \u63a5\u7740i++\n\n3. \u53ef\u4ee5\u4e0d\u6309\u7167ABCDEFG...\u7684\u987a\u5e8f\u679a\u4e3e  \u800c\u662f \u4ee5\u5404\u4e2a\u5b57\u6bcd\u5728A\u4e32 B\u4e32 C\u4e32\u4e2d\u51fa\u73b0\u7684\u5148\u540e\u987a\u5e8f\u5f00\u59cb\u679a\u4e3e \u8fd9\u6837\u4f1a\u4f7f\u526a\u679d2\u4e2d\u7684\u6bcf\u4e00\u6b65\u7684\n\n\u5224\u65ad\u66f4\u5feb\n\n4. \u5f53\u679a\u4e3e\u5f53\u524d\u5b57\u6bcd\u8981\u5bf9\u5e94\u54ea\u4e00\u4e2a\u6570\u5b57\u65f6  \u4e0d\u8981\u6b63\u7740\u679a\u4e3e  \u8981\u5012\u7740\u679a\u4e3e \u8fd9\u4e00\u6b65\u53ef\u4ee5\u4ece80\u5206\u5230AC\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint n;\nbool bo[33];\nint map    [33];\nint flag;\nchar a[33],b[33],c[33];\nint xx[33];\nint swap(char * xx)\n{\n    for(int i=1;i<=n/2;i++)\n    {\n        char xxx=xx[i];\n        xx[i]=xx[n-i+1];\n        xx[n-i+1]=xxx;\n    }\n}\nint pd(int nn)\n{\n    int t=0;\n    for(int i=1;i<=nn;i++)\n    {\n        int aa=a[i]-'A',bb=b[i]-'A',cc=c[i]-'A';\n        if(map[aa]==-1||map[bb]==-1||map[cc]==-1) return 1;\n        cc=map[cc];\n        int pp=map[aa]+map[bb]+t;\n        t=pp/n;\n        pp%=n;\n        if(pp!=cc)\n        {\n            return 0;\n        }\n    }\n    return 1;\n}\nint dfs(int s)\n{    \n    if(flag) return 1;\n\n    for(int i=1;i<=s;i++)\n    {\n        int aa=a[i]-'A',bb=b[i]-'A',cc=c[i]-'A';\n        aa=map[aa];bb=map[bb],cc=map[cc];\n        if(bb!=-1&&cc!=-1&&aa!=-1)\n            if((aa+bb)%n!=cc&&(aa+bb+1)%n!=cc) return 0;\n        if(bb!=-1&&cc!=-1&&aa==-1)\n            if(bo[(cc-bb+n)%n]&&bo[(cc-bb-1+n)%n])\n                return 0;\n        if(bb==-1&&cc!=-1&&aa!=-1)\n            if(bo[(cc-aa+n)%n]&&bo[(cc-aa-1+n)%n])\n                return 0;\n        if(bb!=-1&&cc==-1&&aa!=-1)\n            if(bo[(aa+bb+n)%n]&&bo[(aa+bb+1+n)%n])\n                return 0;\n    }\n    if(!pd(s)) return 0;\n    if(s==n)\n    {\n        if(pd(n)) \n        {\n            flag=1;\n            for(int i=0;i<n;i++)\n                printf(\"%d \",map[i]);\n            return 0;    \n        }\n        return 0;\n    }\n    int x=xx[s+1];\n    for(int i=n-1;i>=0;i--)\n    {\n        if(!bo[i])\n        {\n            bo[i]=1;\n            map[x]=i;\n            dfs(s+1);\n            bo[i]=0;\n            map[x]=-1;\n        }\n    }\n}\nint main()\n{\n    memset(map,-1,sizeof(map));\n    scanf(\"%d%s%s%s\",&n,a+1,b+1,c+1);\n    swap(a);\n    swap(b);\n    swap(c);\n    for(int i=1;i<=n;i++)\n    {\n        int aa=a[i]-'A',bb=b[i]-'A',cc=c[i]-'A';\n        if(!bo[aa])\n        {\n            xx[++xx[0]]=aa;\n            bo[aa]=1;\n        }\n        if(!bo[bb])\n        {\n            xx[++xx[0]]=bb;\n            bo[bb]=1;\n        }\n        if(!bo[cc])\n        {\n            xx[++xx[0]]=cc;\n            bo[cc]=1;\n        }\n    }\n    memset(bo,0,sizeof(bo));\n    dfs(0);\n    \n}\n/*\n15\nABCDEFGHIJKLMNO\nONMLKJIHGFEDCBA\nDCBAFEGHJKLIMNO\n\n20\nABCDEFGHJILKNMPORQST\nCDABTSQROPMNKLIJHGFE\nABCDEFGHIJLKMNOPQRST\n*/\n```",
        "postTime": 1470104542,
        "uid": 20111,
        "name": "soler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "## [NOIP2004]\u866b\u98df\u7b97 ##\n\n\u603b\u65f6\u95f4\u9650\u5236:\n    $1000ms$\n\u5185\u5b58\u9650\u5236:\n    $65536kB$\n    \n***\u9898\u76ee***\n\n\u63cf\u8ff0\n\n    \u6240\u8c13\u866b\u98df\u7b97\uff0c\u5c31\u662f\u539f\u5148\u7684\u7b97\u5f0f\u4e2d\u6709\u4e00\u90e8\u5206\u88ab\u866b\u5b50\u5543\u6389\u4e86\uff0c\u9700\u8981\u6211\u4eec\u6839\u636e\u5269\u4e0b\u7684\u6570\u5b57\u6765\u5224\u5b9a\u88ab\u5543\u6389\u7684\u5b57\u6bcd\u3002\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\n\t\t   43#98650#45\n    +\u3000\u3000     8468#6633\n    --------------------------------- \u3000\u3000\u3000\n\t       44445506978\n    \u5176\u4e2d#\u53f7\u4ee3\u8868\u88ab\u866b\u5b50\u5543\u6389\u7684\u6570\u5b57\u3002\n    \u6839\u636e\u7b97\u5f0f\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5224\u65ad\uff1a\u7b2c\u4e00\u884c\u7684\u4e24\u4e2a\u6570\u5b57\u5206\u522b\u662f5\u548c3\uff0c\u7b2c\u4e8c\u884c\u7684\u6570\u5b57\u662f5\u3002\n    \u73b0\u5728\uff0c\u6211\u4eec\u5bf9\u95ee\u9898\u505a\u4e24\u4e2a\u9650\u5236\uff1a\n    \u9996\u5148\uff0c\u6211\u4eec\u53ea\u8003\u8651\u52a0\u6cd5\u7684\u866b\u98df\u7b97\u3002\u8fd9\u91cc\u7684\u52a0\u6cd5\u662fN\u8fdb\u5236\u52a0\u6cd5\uff0c\u7b97\u5f0f\u4e2d\u4e09\u4e2a\u6570\u90fd\u6709N\u4f4d\uff0c\u5141\u8bb8\u6709\u524d\u5bfc\u76840\u3002\n    \u5176\u6b21\uff0c\u866b\u5b50\u628a\u6240\u6709\u7684\u6570\u90fd\u5543\u5149\u4e86\uff0c\u6211\u4eec\u53ea\u77e5\u9053\u54ea\u4e9b\u6570\u5b57\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u5c06\u76f8\u540c\u7684\u6570\u5b57\u7528\u76f8\u540c\u7684\u5b57\u6bcd\u8868\u793a\uff0c\u4e0d\u540c\u7684\u6570\u5b57\u7528\u4e0d\u540c\u7684\u5b57\u6bcd\u8868\u793a\u3002\n    \u5982\u679c\u8fd9\u4e2a\u7b97\u5f0f\u662fN\u8fdb\u5236\u7684\uff0c\u6211\u4eec\u5c31\u53d6\u82f1\u6587\u5b57\u6bcd\u8868\u5348\u7684\u524dN\u4e2a\u5927\u5199\u5b57\u6bcd\u6765\u8868\u793a\u8fd9\u4e2a\u7b97\u5f0f\u4e2d\u76840\u5230N-1\u8fd9N\u4e2a\u4e0d\u540c\u7684\u6570\u5b57\uff1a\u4f46\u662f\u8fd9N\u4e2a\u5b57\u6bcd\u5e76\u4e0d\u4e00\u5b9a\u987a\u5e8f\u5730\u4ee3\u88680\u5230N-1)\u3002\n    \u8f93\u5165\u6570\u636e\u4fdd\u8bc1N\u4e2a\u5b57\u6bcd\u5206\u522b\u81f3\u5c11\u51fa\u73b0\u4e00\u6b21\u3002\n       BADC\n      + CBDA\n    --------------------------\n       DCCC\n    \u4e0a\u9762\u7684\u7b97\u5f0f\u662f\u4e00\u4e2a4\u8fdb\u5236\u7684\u7b97\u5f0f\u3002\u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ea\u8981\u8ba9ABCD\u5206\u522b\u4ee3\u88680123\uff0c\u4fbf\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u5f0f\u5b50\u6210\u7acb\u4e86\u3002\n    \u4f60\u7684\u4efb\u52a1\u662f\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684N\u8fdb\u5236\u52a0\u6cd5\u7b97\u5f0f\uff0c\u6c42\u51faN\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd\u5206\u522b\u4ee3\u8868\u7684\u6570\u5b57\uff0c\u4f7f\u5f97\u8be5\u52a0\u6cd5\u7b97\u5f0f\u6210\u7acb\u3002\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u6709\u4e14\u4ec5\u6709\u4e00\u7ec4\u89e3\u3002\n\n**\u8f93\u5165**\n    \u8f93\u5165\u6587\u4ef6alpha.in\u5305\u542b4\u884c\u3002\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u6b63\u6574\u6570N(N<=26)\uff0c\u540e\u9762\u76843\u884c\u6bcf\u884c\u6709\u4e00\u4e2a\u7531\u5927\u5199\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u5206\u522b\u4ee3\u8868\u4e24\u4e2a\u52a0\u6570\u4ee5\u53ca\u548c\u3002\u8fd93\u4e2a\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u7aef\u90fd\u6ca1\u6709\u7a7a\u683c\uff0c\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\uff0c\u5e76\u4e14\u6070\u597d\u6709N\u4f4d\u3002\n\n  **\u8f93\u51fa**\n    \u8f93\u51fa\u6587\u4ef6alpha.out\u5305\u542b\u4e00\u884c\u3002\u5728\u8fd9\u4e00\u884c\u4e2d\uff0c\u5e94\u5f53\u5305\u542b\u552f\u4e00\u7684\u90a3\u7ec4\u89e3\u3002\u89e3\u662f\u8fd9\u6837\u8868\u793a\u7684\uff1a\u8f93\u51faN\u4e2a\u6570\u5b57\uff0c\u5206\u522b\u8868\u793aA\uff0cB\uff0cC\u2026\u2026\u6240\u4ee3\u8868\u7684\u6570\u5b57\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5b57\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4e0d\u80fd\u6709\u591a\u4f59\u7684\u7a7a\u683c\u3002\n    **\u6837\u4f8b\u8f93\u5165**\n```\n5\nABCED\nBDACE\nEBBAA\n```\n**\u6837\u4f8b\u8f93\u51fa**\n\n```\n1 0 3 4 2\n\n\u3010\u6570\u636e\u89c4\u6a21\u3011\n\n\u5bf9\u4e8e30\uff05\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709N\u226410\uff1b\n\u5bf9\u4e8e50\uff05\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709N\u226415\uff1b\n\u5bf9\u4e8e\u5168\u90e8\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6709N\u226426\u3002\n```\n***\u9898\u76ee\u89e3\u6790***\n\n\u521a\u770b\u6b64\u9898\u65f6\uff0c\u7b2c\u4e00\u60f3\u6cd5\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u5373\u7528\u5168\u6392\u5217\u4e00\u4e2a\u4e00\u4e2a\u586b\u6570\u3002\u800c\u5bf9\u5e94\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n!)\n\u800c\u6700\u5927\u7684n\u53ef\u4ee5\u53d6\u523026\uff0c\u6240\u4ee5\u5fc5\u987b\u526a\u679d\uff0c\u4e0d\u71361000ms\u7edd\u5bf9\u8d85\u65f6\n\u5148\u770b\u9898\u76ee\u7684\u4e3e\u4f8b\n...BADC\n+ CBDA\n= DCCC\n\u7b97\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u5982\u679c\u5148\u4ece\u6700\u9ad8\u4f4d\u5343\u4f4d\u5f00\u59cb\u586b\u6570\uff0c\u90a3\u4e48\u8981\u4ece\u5343\u4f4d\u4e00\u76f4\u586b\u5230\u4e2a\u4f4d\u624d\u80fd\u591f\u51b3\u5b9a\u8fdb\u4f4d\u4e0e\u7b49\u5f0f\u6b63\u786e\u6027\uff0c\u5373\u4ece\u6700\u9ad8\u4f4d\u4e00\u76f4\u586b\uff0c\u5c06\u7b49\u5f0f\u586b\u5b8c\u624d\u80fd\u5224\u65ad\uff0c\u8fd9\u6837\u662f\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\u4f46\u82e5\u4ece\u6700\u9ad8\u4f4d\u4f1a\u8d85\u65f6\uff0c\u4e3a\u4f55\u4e0d\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u586b\uff0c\u8fd9\u6837\u4e0d\u7528\u8003\u8651\u8fdb\u4f4d\uff0c\u5373\u53ef\u4ee5\u586b\u5b8c\u4e00\u4f4d\u5224\u65ad\u4e00\u4f4d\uff0c\u6570\u503c\u662f\u5426\u6b63\u786e\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8d85\u65f6\u3002\u800c\u8981\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u586b\uff0c\u9700\u8981\u5728DFS\u4e4b\u524d\u505a\u4e00\u4e2a\u9884\u5904\u7406\uff0c\u4ecea,b,c\u4e09\u4e2a\u6570\u7ec4\u4e2d\uff0c\u5012\u7740\u4ece\u6700\u4f4e\u4f4d\u6328\u4e2a\u627e\u5b57\u6bcd\u51fa\u73b0\u7684\u987a\u5e8f\uff0c\u8fd9\u6837\u5373\u53ef\u4ee5\u5728DFS\u65f6\uff0c\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u586b\u6570\n**\u526a\u679d\u8981\u70b9\u4e00**\n\u5728\u7b49\u5f0f\u4e2d\u5012\u7740\u586b\u6570\uff0c\u5e76\u5728DFS\u4e4b\u524d\uff0c\u9884\u5904\u7406\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u5e8f\n\n\u800c\u5728\u586b\u7b49\u5f0f\u65f6\uff0c\u82e5\u4ece\u5c0f\u7684\u6570\u5f00\u59cb\u5012\u7740\u586b\uff0c\u90a3\u4e48\u6700\u9ad8\u4f4d\u4e00\u5b9a\u662f\u5148\u586b\u6700\u5927\u7684\u6570\uff0c\u4f46\u82e5\u662f\u8fd9\u6837\uff0c\u6700\u9ad8\u4f4d\u5fc5\u5b9a\u4f1a\u8fdb\u4f4d\uff0c\u800c\u9898\u76ee\u8bf4\u5f97\u6e05\u695a\uff0c\u90fd\u662f\u76f8\u540c\u7684\u4f4d\u6570\uff0c\u6240\u4ee5\u82e5\u662f\u8fd9\u6837\uff0c\u4e5f\u8981\u5728\u586b\u5b8c\u6240\u6709\u6570\u4e4b\u540e\u624d\u80fd\u53d1\u73b0\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u7684\u586b\u6570\u9519\u8bef\uff0c\u8fd9\u6837\u548c\u6b63\u7740\u586b\u6709\u4ec0\u4e48\u533a\u522b\u3002\n\u56e0\u6b64\uff0c\u5012\u7740\u586b\u65f6\uff0c\u5e94\u4ece\u5927\u7684\u6570\u5b57\u5f00\u59cb\u586b\u8d77\uff0c\u8fd9\u6837\u624d\u80fd\u6700\u5927\u5316\u526a\u679d\n**\u526a\u679d\u8981\u70b9\u4e8c**\n\u586b\u6570\u65f6\u4ece\u5927\u7684\u6570\u5b57\u5012\u7740\u5f80\u524d\u586b\n\n\u82e5\u5728\u586b\u5b8c\u6570\u5b57\u540e\uff0c\u518d\u7528\u4e00\u6b21\u9ad8\u7cbe\u5ea6\u8fdb\u884c\u8fd0\u7b97\uff0c\u90a3\u4e48\u6709\u90a3\u4e48\u591a\u79cd\u586b\u6570\u60c5\u51b5\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6\u3002\n\u5176\u5b9e\uff0c\u8fd9\u91cc\u53ea\u9700\u50a8\u5b58\u4e0b\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\uff0c\u7136\u540e\u4e00\u4f4d\u4e00\u4f4d\u5730\u8fdb\u884c\u68c0\u9a8c\u5373\u53ef\uff0c\u8fd9\u6837\u4fbf\u5c11\u4e86\u6570\u7ec4\u7684\u8f6c\u6362\n**\u526a\u679d\u8981\u70b9\u4e09**\n\u586b\u5b8c\u6570\u540e\u53ea\u9700\u6309\u4f4d\u76f8\u52a0\uff0c\u4e0e\u548c\u6570\u8fdb\u884c\u68c0\u6d4b\n\n***\u4ee3\u7801\u5b9e\u73b0***\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#define MAXN 100\nchar a[MAXN],b[MAXN],c[MAXN];\nbool used[MAXN];\n//\u5728ready()\u9884\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5b57\u6bcd\u662f\u5426\u5728\u4e4b\u524d\u7684\u4f4d\u6570\u4e2d\u51fa\u73b0\u8fc7\nchar Rlist[MAXN];\n//\u526a\u679d\u8981\u70b9\u4e00\u4e2d\u7684\u5b57\u6bcd\u51fa\u73b0\u987a\u5e8f\u8868\nint num[MAXN];\n//\u4ee5\u5b57\u6bcdASCII\u7801\u4f5c\u4e3a\u4e0b\u6807\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u7684\u6570\u503c\nint tot;\n//\u8bb0\u5f55Rlist\u6570\u7ec4\u7684\u4e0b\u6807\nint n;\n//n\u8fdb\u5236\nvoid ready()\n//\u526a\u679d\u4e00 \u9884\u5904\u7406\u51fd\u6570\n{\n    for(int i=n-1;i>=0;i--)\n    //\u4ece\u672b\u5c3e\u5f00\u59cb\uff0c\u4ee5a,b,c\u4e3a\u5e8f\uff0c\u904d\u5386\u50a8\u5b58\u51fa\u73b0\u987a\u5e8f\n    {\n        if(!used[a[i]])\n        //\u5224\u65adRlist\u50a8\u5b58\u8fc7a[i]\u6ca1\u6709\n        {\n            Rlist[++tot]=a[i];\n            //\u82e5\u6ca1\u6709\uff0c\u4e0b\u6807++\uff0c\u5e76\u5b58\u8fdbRlist\n            used[a[i]]=1;\n            //\u6807\u8bb0\u50a8\u5b58\u8fc7a[i]\n        }//\u4e4b\u540e\u7684b\uff0cc\u90fd\u662f\u5982\u6b64\n        if(!used[b[i]])\n        {\n            Rlist[++tot]=b[i];\n            used[b[i]]=1;\n        }\n        if(!used[c[i]])\n        {\n            Rlist[++tot]=c[i];\n            used[c[i]]=1;\n        }\n    }\n    memset(used,0,sizeof(used));\n    //\u91cd\u7f6e\u6570\u7ec4\uff0c\u65b9\u4fbf\u5728dfs\u4e2d\u4f7f\u7528\n    memset(num,-1,sizeof(num));\n    //\u5c06\u50a8\u5b58\u6570\u503c\u7684\u6570\u7ec4\u7f6e\u4e3a-1\uff0c-1\u8868\u793a\u6ca1\u6709\u88ab\u8d4b\u503c\uff0c\u5373\u4e0d\u77e5\u9053\u503c\n    return;\n}\nbool check()\n//\u68c0\u6d4b\u586b\u7684\u6570\u5b57\u662f\u5426\u5408\u9002\n{\n    for(int i=n-1;i>=0;i--)\n    {//\u56e0\u4e3a\u662f\u5728\u586b\u6570\u9014\u4e2d\u68c0\u6d4b\uff0c\u6240\u4ee5\u5206\u4e3a\u56db\u79cd\u60c5\u51b5\n        if(num[a[i]]!=-1 && num[b[i]]!=-1 && num[c[i]]!=-1)\n        //\u60c5\u51b5\u4e00 \u8fd9\u4e00\u4f4d\u4e24\u4e2a\u52a0\u6570\u4e0e\u548c\u90fd\u88ab\u586b\u8fc7\n        {\n\t\t    //\u8fd9\u65f6\u5224\u65ad\u4e24\u4e2a\u52a0\u6570\u662f\u4e0d\u662f\u7b49\u4e8e\u548c\u6570 \u6ce8\u610f\u6b64\u5904\u4e0d\u77e5\u9053\u662f\u5426\u6709\u8fdb\u4f4d\n\t\t    //\u6240\u4ee5\u8fdb\u4f4d\u4e0e\u4e0d\u8fdb\u4f4d\u4e24\u79cd\u60c5\u51b5\u90fd\u8981\u5224\u65ad\n\t\t    //\u5982\u679c\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u7b49\u4e8e\u548c \u8bf4\u660e\u586b\u6570\u9519\u8bef\n\t\t    //\u4fbf\u8fd4\u56de0\n            if((num[a[i]]+num[b[i]])%n!=num[c[i]] && (num[a[i]]+num[b[i]]+1)%n!=num[c[i]])\n                return 0;\n        }\n        if(num[a[i]]!=-1 && num[b[i]]!=-1 && num[c[i]]==-1)\n        //\u60c5\u51b5\u4e8c \u77e5\u9053\u4e24\u4e2a\u52a0\u6570\u800c\u4e0d\u77e5\u9053\u548c\n        {\n\t\t    //\u8fd9\u65f6\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\n\t\t    //\u8fdb\u4f4d\u4e0e\u4e0d\u8fdb\u4f4d\n\t\t    //\u5c06\u4e24\u79cd\u60c5\u51b5\u51fa\u73b0\u65f6c\u5206\u522b\u7684\u503c\u7b97\u51fa\u6765\n\t\t    //\u5982\u679c\u8fd9\u4e24\u79cd\u60c5\u51b5c\u7684\u503c\u90fd\u5df2\u7ecf\u88ab\u522b\u7684\u5b57\u6bcd\u4f7f\u7528\u8fc7\n\t\t    //\u8bf4\u660e\u586b\u6570\u9519\u8bef \u4fbf\u8fd4\u56de0\n            int c1=(num[a[i]]+num[b[i]])%n;\n            int c2=(num[a[i]]+num[b[i]]+1)%n;\n            if(used[c1] && used[c2])\n                return 0;\n        }\n        if(num[a[i]]!=-1 && num[b[i]]==-1 && num[c[i]]!=-1)\n        //\u60c5\u51b5\u4e09 \u77e5\u9053\u5176\u4e2d\u7684a\u52a0\u6570\u4e0e\u548c\n        {\n\t\t\t//\u6c42\u51fab\u5728\u8fdb\u4f4d\u4e0e\u4e0d\u8fdb\u4f4d\u65f6\u7684\u4e24\u4e2a\u503c\n\t\t\t//\u6ce8\u610f \u8fd9\u91cc\u52a0n\u662f\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\u7684\u60c5\u51b5 \u53ef\u4ee5\u7406\u89e3\u4e3a\u505a\u51cf\u6cd5\u65f6\u7684\u9000\u4f4d\n            int b1=(num[c[i]]-num[a[i]]+n)%n;\n            int b2=(num[c[i]]-num[a[i]]-1+n)%n;\n\t\t    //\u82e5\u4e24\u4e2a\u503c\u90fd\u88ab\u5360\u7528 \u8bf4\u660e\u586b\u6570\u9519\u8bef \u8fd4\u56de0\n            if(used[b1] && used[b2])\n                return 0;\n        }\n        if(num[a[i]]==-1 && num[b[i]]!=-1 && num[c[i]]!=-1)\n        //\u60c5\u51b5\u56db \u77e5\u9053\u5176\u4e2d\u7684b\u52a0\u6570\u4e0e\u548c\n        {\n\t        //\u6c42\u51faa\u5728\u8fdb\u4f4d\u4e0e\u4e0d\u8fdb\u4f4d\u65f6\u7684\u4e24\u79cd\u503c\n\t        //\u6ce8\u610f \u8fd9\u91cc\u52a0n\u662f\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\u7684\u60c5\u51b5 \u53ef\u4ee5\u7406\u89e3\u4e3a\u505a\u51cf\u6cd5\u65f6\u7684\u9000\u4f4d\n            int a1=(num[c[i]]-num[b[i]]+n)%n;\n            int a2=(num[c[i]]-num[b[i]]-1+n)%n;\n            //\u82e5\u4e24\u4e2a\u503c\u90fd\u88ab\u5360\u7528 \u8bf4\u660e\u586b\u6570\u9519\u8bef \u8fd4\u56de0\n            if(used[a1] && used[a2])\n                return 0;\n        }\n    }\n    //\u82e5\u90fd\u53ef\u4ee5\uff0c\u8bf4\u660e\u586b\u6570\u6b63\u786e \u8fd4\u56de1\n    return 1;\n}\nbool OK()\n//\u68c0\u6d4b\u6700\u7ec8\u7684\u586b\u6570\u662f\u5426\u6b63\u786e\n{\n    int x=0;\n    //\u8fdb\u4f4d\n    for(int i=n-1;i>=0;i--)\n    //\u526a\u679d\u4e09 \u4e0d\u7528\u9ad8\u7cbe\u5ea6\uff0c\u53ea\u9700\u6309\u4f4d\u8ba1\u7b97\n    {\n\t    //\u4ece\u4e2a\u4f4d\u5f00\u59cb \u4e00\u4f4d\u4e00\u4f4d\u6328\u7740\u5224\u65ad\u6b64\u4f4d\u4e24\u52a0\u6570\u76f8\u52a0\n\t    //\u5176\u548c\u662f\u5426\u7b49\u4e8e\u548c\u6570 \u6ce8\u610f\u8981\u52a0\u4e0a\u8fdb\u4f4d\u7684\u6570\n        if((x+num[a[i]]+num[b[i]])%n!=num[c[i]])\n        //\u82e5\u4e0d\u7b49\u4e8e \u8bf4\u660e\u586b\u6570\u9519\u8bef \u8fd4\u56de0\n            return 0;\n        //\u5904\u7406\u6b64\u4f4d\u7684\u8fdb\u4f4d\n        x=(x+num[a[i]]+num[b[i]])/n;\n    }\n    //\u82e5\u6700\u540e\u8fd8\u6709\u8fdb\u4f4d \u8bf4\u660e\u6700\u7ec8\u7ed3\u679c\u4e0d\u6b62n\u4f4d \u4e0e\u9898\u610f\u4e0d\u7b26 \u8fd4\u56de0\n    if(x)\n        return 0;\n    //\u82e5\u6210\u7acb \u8bf4\u660e\u7b49\u5f0f\u6b63\u786e \u8fd4\u56de1\n    return 1;\n}\nvoid print()\n//\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\n{\n    for(int i=65;i<n-1+65;i++)\n    //\u56e0\u4e3a\u4f7f\u7528num\u6570\u7ec4\u65f6\uff0c\u662f\u7528ASCII\u7801\u4f5c\u4e3a\u4e0b\u6807 \u6240\u4ee5\u5e94\u4ece65\u5f00\u59cb\n            printf(\"%d \",num[i]);\n    //\u6ce8\u610f \u9898\u76ee\u8981\u6c42\u6700\u540e\u6ca1\u6709\u7a7a\u683c\n    printf(\"%d\",num[n-1+65]);\n}\nvoid dfs(int x)\n//x\u63a7\u5236Rlist\u7684\u4e0b\u6807\uff0c\u8868\u793a\u6b63\u5728\u586bRlist[i]\u7684\u503c\n{\n    if(x==n+1)\n    //\u5982\u679c\u586b\u6570\u5b8c\u6210\n    {\n        if(OK())\n        //\u68c0\u6d4b\u586b\u6570\u662f\u5426\u6b63\u786e\n        {\n            print();\n            //\u8f93\u51fa\u5e76\u7ed3\u675f\u7a0b\u5e8f\uff0c\u5982\u679c\u4e0d\u7ed3\u675f\uff0c\u7a0b\u5e8f\u4f1a\u5bfb\u627e\u4e0b\u4e00\u79cd\u60c5\u51b5\n            //\u6240\u4ee5\u6b64\u5904\u76f4\u63a5\u7528exit(0),\u5728\u5b50\u51fd\u6570\u4e2d\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\n            exit(0);\n        }\n        return;\n        //\u5982\u679c\u4e0d\u6b63\u786e\uff0c\u56de\u6eaf\u56de\u53bb\uff0c\u7ee7\u7eed\u5bfb\u627e\u6b63\u786e\u586b\u6cd5\n    }\n    else\n    //\u5982\u679c\u586b\u6570\u6ca1\u6709\u5b8c\u6210\n    {\n        for(int i=n-1;i>=0;i--)\n        //\u526a\u679d\u4e8c \u4ece\u5927\u6570\u5f80\u5c0f\u6570\u586b\n        //\u7528for\u5faa\u73af\u5bfb\u627e\u6ca1\u6709\u88ab\u7528\u8fc7\u7684\u6570\u5b57 \u5c06\u5176\u586b\u7ed9Rlist[x]\n        //\u7136\u540e\u518d\u770b\u770b\u884c\u4e0d\u884c\uff0c\u82e5\u53ef\u4ee5\uff0c\u5c31\u7ee7\u7eeddfs\n        //\u4e0d\u53ef\u4ee5\uff0c\u4fbf\u5bfb\u627e\u4e0b\u4e00\u4e2a\u503c\n        //\u6b64\u5904\u5373\u7528for\u5faa\u73af\u4e00\u4e2a\u4e00\u4e2a\u627e\uff0c\u53ef\u4ee5\u586b\u7ed9Rlist[x]\u7684\u6570\u5b57\n            if(!used[i])\n            //\u5224\u65ad\u6570\u5b57i\u662f\u5426\u7ed9\u5176\u4ed6\u5b57\u6bcd\u4f7f\u7528\u8fc7\n            {\n                num[Rlist[x]]=i;\n                //\u5c06\u6570\u5b57i\u8d4b\u503c\u7ed9Rlist[x]\n                used[i]=1;\n                //\u8bb0\u5f55\u6570\u5b57i\u88ab\u4f7f\u7528\u8fc7\n                if(!check())\n                //\u526a\u679d\u4e00 \u6bcf\u586b\u5b8c\u4e00\u4f4d\u5c31\u5224\u65ad\u4e00\u4e0b\uff0c\u586b\u8fdb\u53bb\u7684\u6570\u662f\u5426\u5408\u9002\n                //\u82e5\u4e0d\u5408\u9002\uff0c\u5c31\u4e0d\u7528\u7ee7\u7eeddfs\u4e86\n                {//\u76f4\u63a5\u8fd8\u539f\uff0c\u518dcontinue\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\n                    num[Rlist[x]]=-1;\n                    used[i]=0;\n                    continue;\n                }\n                dfs(x+1);\n                //\u8fdb\u5165\u6df1\u641c\n                used[i]=0;\n                num[Rlist[x]]=-1;\n                //\u8fd8\u539f\u73b0\u573a\n            }\n    }\n}\nint main()\n{\n    scanf(\"%d\\n\",&n);\n    //\u8f93\u5165n\u8fdb\u5236\n    gets(a);\n    gets(b);\n    gets(c);\n    //\u8f93\u5165a\uff0cb\uff0cc\n    ready();\n    //\u8c03\u7528\u9884\u5904\u7406\u51fd\u6570\n    dfs(1);\n    //\u6df1\u641c\u586b\u6570\n    return 0;\n}\n```\n",
        "postTime": 1572259060,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u4ee5\u6837\u4f8b\u4e3a\u4f8b\u5b50\uff0c\n\n![](https://cdn.luogu.com.cn/upload/pic/49117.png )\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u672a\u77e5\u6570x\u5c06\u5b57\u6bcd\u4ee3\u66ff\uff0c\u5c06\u7b49\u5f0f\u5199\u6210\u8fd9\u6837:\n\n![](https://cdn.luogu.com.cn/upload/pic/49118.png )\n\n\u5176\u4e2d\uff0cr\u662f\u5728\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\u503c\u4e0a\u589e\u52a0\u7684\u6570\uff0c\u4f8b\u5982D+E=A+r1\uff0c\u6b64\u65f6r1\u7684\u503c\u662f5\n\n\u5c06\u672a\u77e5\u6570\u5168\u79fb\u52a8\u5230\u5de6\u8fb9\uff0c\u5f97\u5230\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/49116.png )\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u53ea\u8981\u6211\u4eec\u641c\u7d22\u6bcf\u4e2ar\u7684\u503c\uff0c\u7136\u540e\u5c06\u65b9\u7a0b\u89e3\u51fa\u6765\u5c31\u597d\u4e86\n\n\u4f46\u662fr\u7684\u503c\u67092\u768426\u6b21\u65b9\u79cd\uff0c\u8fd0\u7528\u9ad8\u65af\u6d88\u5143\u89e3\u65b9\u7a0b\u53c8\u898126^3\u6b21\u8fd0\u7b97\uff0c\u80af\u5b9a\u8d85\u65f6\u4e86\u554a\uff0c\u90a3\u6211\u4eec\u8003\u8651\u5148\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u8868\u793a\u51fa\u6bcf\u4e2ax\uff0c\u518d\u641c\u7d22r\u7684\u503c\uff0c\u6700\u540e\u5224\u65ad\u7b54\u6848\u662f\u5426\u7b26\u5408\u8981\u6c42\u5c31\u884c\u4e86\n\n\u6211\u4eec\u7528\u77e9\u9635\u5c06\u7cfb\u6570\u5b58\u8d77\u6765\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/49121.png )\n\n\u7ecf\u8fc7\u9ad8\u65af\u6d88\u5143\uff0c\u5f97\u5230\n\n![](https://cdn.luogu.com.cn/upload/pic/49122.png )\n\n\u672c\u8d28\u4e0a\u5c31\u662f\n![](https://cdn.luogu.com.cn/upload/pic/49124.png )\n\n\u7136\u540e\u6211\u4eec\u641c\u7d22r\u7684\u503c\uff0c\u7b97\u51fax\u7684\u503c\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cri\u7684\u521d\u59cb\u503c\u53d6\u51b3\u4e8er(i-1)\u7684\u51b3\u7b56\uff0c\u5982\u679cr(i-1)\u4fdd\u6301\u521d\u59cb\u503c\u4e0d\u53d8\uff0c\u90a3\u4e48ri\u7684\u521d\u59cb\u503c\u4e3a0\uff0c\u5982\u679cr(i-1)\u5728\u521d\u59cb\u503c\u7684\u57fa\u7840\u4e0a+n\uff0c\u90a3\u4e48ri\u7684\u521d\u59cb\u503c\u5219\u4e3a-1\u3002\u90a3\u4e48\u663e\u7136rn\u4e0d\u80fd+n\uff0cr1\u7684\u521d\u59cb\u503c\u53ea\u80fd\u4e3a0\u3002\n\n\u5173\u4e8e\u5224\u65ad\u7b54\u6848\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u770b\u6bcf\u4e2ax\u662f\u5426\u5c0f\u4e8e0\uff0c\u6216\u5927\u4e8e\u7b49\u4e8en\uff0c\u8fd8\u8981\u4e3b\u610f\u4e0d\u540c\u7684\u5b57\u6bcd\u4ee3\u8868\u4e0d\u540c\u7684\u503c\n\n\u4ee3\u7801\u5199\u5f97\u4e11\uff0c\u4ec5\u4f9b\u53c2\u8003\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\nusing namespace std;\nint n,lcn,multi,multj;\nstruct HAHA{\n\tint coe[30][30];\n\tint con[30][30];\n}squre;\nint num[30];\n\nvoid read()\n{\n\tcin>>n;\n\tstring s1,s2,s3;\n\tcin>>s1>>s2>>s3;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint pos=n-i;\n\t\tint c1=s1[pos]-'A'+1;squre.coe[i][c1]++;\n\t\tint c2=s2[pos]-'A'+1;squre.coe[i][c2]++;\n\t\tint c3=s3[pos]-'A'+1;squre.coe[i][c3]--;\n\t\tsqure.con[i][i]=1;\n\t}\t\n}\n\nint gcd(int a,int b)\n{\n\tif(b==0) return a;\n\treturn gcd(b,a%b);\n}\n\nvoid gauss()\n{\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint vec=i;\n\t\tfor(int j=i+1;j<=n;j++) { if(abs(squre.coe[vec][i])<abs(squre.coe[j][i])) vec=j; }\n\t\tif(vec!=i)\n\t\t{ \n\t\t\tfor(int j=1;j<=n;j++) {swap(squre.coe[i][j],squre.coe[vec][j]);swap(squre.con[i][j],squre.con[vec][j]);}\n\t\t}\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(squre.coe[j][i]!=0&&j!=i)\n\t\t\t{\n\t\t\t\tlcn=squre.coe[j][i]*squre.coe[i][i]/gcd(squre.coe[i][i],squre.coe[j][i]);\n\t\t\t\tmulti=lcn/squre.coe[i][i];\n\t\t\t\tmultj=lcn/squre.coe[j][i];\n\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t{\n\t\t\t\t\tsqure.coe[j][k]=squre.coe[j][k]*multj-squre.coe[i][k]*multi;\n\t\t\t\t\tsqure.con[j][k]=squre.con[j][k]*multj-squre.con[i][k]*multi;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid judge()\n{\n\tbool flag=true;\n\tint unk[30];\n\tint dead[30];\n\tfor(int i=0;i<=n;i++) dead[i]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tunk[i]=0;\n\t\tfor(int j=1;j<=n;j++) unk[i]+=squre.con[i][j]*num[j];\n\t\tif(unk[i]%squre.coe[i][i]!=0) return;\n\t\telse unk[i]/=squre.coe[i][i];\n\t\tif(unk[i]<0||unk[i]>=n||dead[unk[i]]==1){flag=false;break;}\n\t\tdead[unk[i]]=1;\n\t}\n\tif(flag==true)\n\t{\n\t\tfor(int i=1;i<=n;i++) cout<<unk[i]<<\" \";\n\t\tcout<<endl;\n\t\texit(0);\n\t}\n}\n\nvoid dfs(int pos,int value)\n{\n\tnum[pos]=value;\n\tif(pos==n)\n\t{\n\t\tjudge();\n\t\treturn;\n\t}\n\tdfs(pos+1,0);\n\tnum[pos]=value+n;\n\tdfs(pos+1,-1);\n}\n\nint main()\n{\n\tread();\n\tgauss();\n\tdfs(1,0);\n\treturn 0;\n}\n```",
        "postTime": 1547987166,
        "uid": 28076,
        "name": "BakaC1rno",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u7531\u4e8e\u672c\u4eba\u4ee3\u7801\u4e0d\u7cbe\uff0c\u8fde\u6df1\u641c\u90fd\u5feb\u5fd8\u5149\u4e86\u2026\u2026\n\n\u96be\u5f97\u5199\u4e2a\u9898\uff0c\u4e8e\u662f\u6765\u8bb0\u5f55\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u6df1\u641c\u9898\uff0c\u4f46\u5f88\u660e\u663e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5b57\u6bcd\u53bb\u641c\u80af\u5b9a\u4f1a\u70b8\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u4f4d\u7f6e\u7684\u53bb\u641c\u3002\n\n\u5927\u5bb6\u90fd\u5b66\u8fc7\u7ad6\u5f0f\u52a0\u6cd5\uff0c\u4ece\u53f3\u5f80\u5de6\uff0c\u4ece\u4e0a\u5f80\u4e0b\uff0c\u5c31\u6309\u8fd9\u4e2a\u987a\u5e8f\u4e00\u4e2a\u4f4d\u7f6e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u641c\uff0c\u5f88\u660e\u663e\u5c31\u8981\u5feb\u4e00\u4e9b\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\u5417\uff1f\u4e0d\u662f\uff0c\u8fd8\u9700\u8981\u526a\u679d\u3002\n\n\u5728\u8fd9\u6837\u4e00\u4e2a\u641c\u7d22\u987a\u5e8f\u7684\u57fa\u7840\u4e0a\uff0c\u641c\u5b8c\u4e00\u6761\u52a0\u4e00\u6b21\u5224\u5b9a\uff0c\u867d\u7136\u4f1a\u7528\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u548c\u5b83\u7701\u4e0b\u6765\u7684\u65f6\u95f4\u6bd4\u7b80\u76f4\u4e0d\u503c\u4e00\u63d0\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\n#pragma GCC optimize(3)//\u624b\u5f00O3\u4f18\u5316\n#define N 30\nusing namespace std;\nbool flag,used[N];\nint n,a[5][N],num[N];\nchar s[5][N];\nbool check()//\u68c0\u67e5\u662f\u5426\u6b63\u786e\n{\n    int add=0;\n    for(int i=n;i>=1;i--)\n    {\n        int A,B,C;\n        A=num[a[1][i]],B=num[a[2][i]],C=num[a[3][i]];\n        if((A+B+add)%n!=C)\n            return false;\n        add=(A+B+add)/n;\n    }\n    return true;\n}\nbool Prune()//\u526a\u679d\uff0c\u5982\u679c\u6700\u9ad8\u4f4d\u8981\u8fdb\u4f4d\u6216\u8005\u65e0\u8bba\u8fdb\u4e0d\u8fdb\u4f4d\u90fd\u4e0d\u80fd\u4f7f\u7b49\u5f0f\u6210\u7acb\u5373\u820d\n{\n    if(num[a[1][1]]+num[a[2][1]]>=n)\n        return true;\n    for(int i=n-1;i>=0;i--)\n    {\n        int A=num[a[1][i]],B=num[a[2][i]],C=num[a[3][i]];\n        if(A==-1||B==-1||C==-1)\n            continue;\n        if((A+B)%n!=C&&(A+B+1)%n!=C)\n            return true;\n    }\n    return false;\n}\nvoid Print()\n{\n    for(int i=1;i<=n;i++)\n        printf(\"%d \",num[i]);\n    return;\n}\nbool Check()//\u68c0\u67e5\u662f\u5426\u6709\u5b57\u6bcd\u6ca1\u8d4b\u503c\n{\n    for(int i=1;i<=n;i++)\n        if(num[i]==-1)\n            return false;\n    return true;\n}\nvoid dfs(int x,int y,int t)//x\u662f\u5217\uff0cy\u662f\u884c\uff0ct\u662f\u8fdb\u4f4d\n{\n    if(flag)//\u6807\u8bb0\u6570\u7ec4\uff0c\u5176\u5b9e\u53ef\u7528exit(0)\u4ee3\u66ff\n        return;\n    if(Prune())//\u5f00\u5c40\u526a\u679d\n        return;\n    if(Check())\n    {\n       if(check())\n        {\n            Print();\n            flag=true;\n        }\n        return;\n    }//\u5982\u679c\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u8d4b\u503c\u4e86\u5c31\u8fdb\u884c\u5224\u5b9a\uff0c\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u65e0\u7528\u7684\u641c\u7d22\u65f6\u95f4\n    if(num[a[y][x]]==-1)//\u5982\u679c\u8fd9\u4e00\u4f4d\u6ca1\u8d4b\u503c\n    {\n        for(int i=n-1;i>=0;i--)\n        {\n            if(!used[i])\n            {\n                if(y!=3)//\u5982\u679c\u4e0d\u662f\u7b2c\u4e09\u884c\n                {\n                    num[a[y][x]]=i;\n                    used[i]=true;\n                    dfs(x,y+1,t);//\u641c\u7d22\u540c\u5217\u4e0b\u4e00\u884c\n                    used[i]=false;\n                    num[a[y][x]]=-1;\n                }\n                else//\u662f\u7b2c\u4e09\u884c\n                {\n                    int z=num[a[1][x]]+num[a[2][x]]+t;\n                    if(z%n!=i)\n                        continue;\n                    used[i]=true;\n                    num[a[y][x]]=i;\n                    dfs(x-1,1,z/n);//\u641c\u7d22\u4e0b\u4e00\u5217\u7b2c\u4e00\u884c\uff0c\u8fdb\u4f4d\u6539\u53d8\n                    used[i]=false;\n                    num[a[y][x]]=-1;\n                }\n            }\n        }\n    }\n    else//\u8fd9\u4e00\u4f4d\u5df2\u88ab\u8d4b\u503c\n    {\n        if(y!=3)\n            dfs(x,y+1,t);\n        else\n        {\n            int z=num[a[1][x]]+num[a[2][x]]+t;\n            if(Prune())//\u526a\u4e2a\u679d\n                return;\n            dfs(x-1,1,z/n);\n        }\n    }\n    return;\n}\nvoid Getid()//\u5c06\u5b57\u6bcd\u8f6c\u6362\u6210\u6570\u5b57\n{\n    for(int i=1;i<=3;i++)\n        for(int j=0;j<n;j++)\n            a[i][j+1]=s[i][j]-'A'+1;\n    return;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s%s%s\",s[1],s[2],s[3]);\n    Getid();\n    memset(num,-1,sizeof(num));//\u521d\u503c\u8bbe\u4e3a-1\n    dfs(n,1,0);//\u641c\u7d22\u7b2cn\u5217\u7b2c1\u884c\uff0c\u8fdb\u4f4d\u4e3a0\n    return 0;\n}\n```\n\u6ce8\uff1a\n\u641c\u7d22\u987a\u5e8f\u4ece0\u5230n-1\u8dd1\u7684\u8981\u6162\u4e00\u4e9b\uff0c\u5efa\u8bae\u5b66\u6211\uff0c\u4ecen-1\u52300\u53bb\u641c\n\n#\u4ece0\u5230n-1\n\n[844ms](https://www.luogu.org/record/show?rid=5303961)\n\n#\u4ecen-1\u52300\n\n[16ms](https://www.luogu.org/record/show?rid=5304076)\n\n\u5176\u5b9e\u4e5f\u5c31\u662f\u8fd9\u6837\u4e0d\u662f\n\n\u6211\u7684\u4ee3\u7801\u8fd8\u6709\u4e9b\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\uff0c\u6211\u4e5f\u61d2\u5f97\u6539\u4e86orz\uff08\u8eba\n",
        "postTime": 1515575981,
        "uid": 55454,
        "name": "DimensionTripper",
        "ccfLevel": 0,
        "title": "P\u30101092\u3011\u866b\u98df\u7b97"
    },
    {
        "content": "\u91cd\u73b0\u6392\u7248\u4e4b\u540e\u7684\u7248\u672c\n\n\n\u6458\u81ea\u5f20\u8001\u5e08\u7684\u4e66 \u300a\u7b97\u6cd5\u7ade\u8d5b\u5b9d\u5178\u300b-\u7b2c\u4e8c\u5377\n\n\n/\\*\n\u866b\u98df\u7b97\n\n\u53ef\u4ee5\u91c7\u7528\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u89e3\u65b9\u7a0b\u4e4b\u7c7b\u7684\uff0c\u4e0d\u8fc7\u901a\u5e38\u7684\n\n\u7b97\u6cd5\u662f\u641c\u7d22\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e5f\u91c7\u7528\u641c\u7d22\u7684\u65b9\u6cd5\n\n\u641c\u7d22\u601d\u8def\uff1a\n\n1.\u7b97\u5f0f\u5b58\u50a8\u65b9\u5f0f\uff1aA[i][j]\u8868\u793a\u7b2cj\u4e2a(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u5b57\u7b26\u4e32\u4ece\u53f3\u5f80\n\n\u5de6\u6570\u7b2ci\u4e2a(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u5b57\u6bcd\n\n\u5982\u6837\u4f8b:ABCED    \u5bf9\u5e94\u5b58\u50a8\u4e8e\u8fd9\u4e9b\u5143\u7d20\u4e2d A[4,3,2,1,0][0]\n\nBDACE                         A[4,3,2,1,0][1]\n\nEBBAA                         A[4,3,2,1,0][2]\n\n\u5982\u6b64\u5b58\u50a8\uff0c\u662f\u56e0\u4e3a\u641c\u7d22\u662f\u4e00\u4f4d\u4e00\u4f4d\u8fdb\u884c\u679a\u4e3e\u7684\uff0c\u5373\u6bcf\u6b21\u786e\u5b9a\n\n\u540c\u4e00\u5217\u7684\u5b57\u6bcd\uff0c\u5982\u7b2c\u4e00\u6b21\u786e\u5b9aA[0][0],A[0][1],A[0][2]\u4e09\u4e2a\n\n\u5b57\u6bcd\n2.A[i][2]=(A[i][0]+A[i][1]+u)%n\n\n\u5bf9\u6bcf\u4e00\u4f4d\u679a\u4e3e\u524d\u4e24\u4e2a\u5b57\u6bcd\u53ef\u80fd\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u5982\u679c\u5728\u4e4b\u524d\u7684\u641c\u7d22\n\n\u4e2d\u5b57\u6bcd\u5df2\u7ecf\u88ab\u786e\u5b9a\uff0c\u90a3\u6b64\u6b21\u4e0d\u9700\u518d\u679a\u4e3e\u3002\u82e5\u672a\u88ab\u786e\u5b9a\uff0c\u5219\u9700\u8981\n\n\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\u3002\n\n\u5f53\u524d\u4e24\u4e2a\u5b57\u6bcd\u786e\u5b9a\u4e0b\u6765\u65f6\uff0c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u5373\u5f97\u5230\u786e\u5b9a\uff0c\u53ea\u9700\u5224\u65ad\n\n\u8fd9\u4e2a\u7ed3\u679c\u662f\u5426\u5408\u6cd5(\u662f\u5426\u540c\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e24\u4e2a\u6570\u5b57\uff0c\u6216\u8005\u540c\u4e00\n\n\u4e2a\u6570\u5b57\u88ab\u591a\u4e2a\u5b57\u6bcd\u4f7f\u7528)\n\n\u5176\u4e2du\u8868\u793a\u7b2ci-1\u4f4d\u7684\u8fdb\u4f4d\uff0c\u5982\u679c\u4ece\u4f4e\u4f4d\u5411\u9ad8\u4f4d\u641c\u7d22(\u5373\u4ece\u53f3\u5411\n\n\u5de6)\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u7684\u8fdb\u4f4d\u90fd\u662f\u786e\u5b9a\u7684\n\n3.\u526a\u679d:\n\n1)\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u88ab\u4e00\u4e2a\u5b57\u6bcd\u4f7f\u7528\uff0c\u90a3\u4e48\u7ed9\u6bcf\u4e2a\u6570\u5b57\u505a\u4e0a\u6807\u8bb0\uff0c\n\n\u907f\u514d\u88ab\u91cd\u590d\u4f7f\u7528\u3002\n\n2)\u5982\u679c\u6700\u9ad8\u4f4d\u51fa\u73b0\u8fdb\u4f4d\uff0c\u5219\u7b49\u5f0f\u4e0d\u6210\u7acb\n\n3)\u5982\u679c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\u5df2\u7ecf\u786e\u5b9a\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u524d\u4e24\u4e2a\n\n\u5b57\u6bcd\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n\n4)\u5982\u679c\u524d\u4e24\u4e2a\u5b57\u6bcd\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u5e76\u4e14\u4e0d\u662f\u88ab\u7b2c\n\n\u4e09\u4e2a\u5b57\u6bcd\u4f7f\u7528\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n\n5)\u5982\u679c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u672a\u88ab\u786e\u5b9a\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u53ef\u80fd\n\n\u4f1a\u5bf9\u540e\u9762\u7684\u7b97\u5f0f\u9020\u6210\u5f71\u54cd\uff0c\u751a\u81f3\u76f4\u63a5\u9020\u6210\u77db\u76fe\uff0c\u540e\u8005\u53ef\u4ee5\u76f4\n\n\u63a5\u526a\u6389\n\n\u76f4\u63a5\u4f9d\u6b21\u679a\u4e3e\u4e4b\u540e\u7684\u6bcf\u4e00\u4f4d\n\na)\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u4e0d\u786e\u5b9a\uff0c\u90a3\u53ef\u4ee5\u901a\u8fc7\u53e6\u5916\u4e24\u4e2a\u6570\u5b57\u8ba1\u7b97\u51fa\n\n\u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u88ab\u4f7f\u7528\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n\n(\u6ce8\u610f\u8fdb\u4f4d\uff0c\u5982\u679c\u8fdb\u4f4d\u5df2\u7ecf\u786e\u5b9a\u5219\u76f4\u63a5\u8ba1\u7b97\u5224\u65ad\u5373\u53ef\uff0c\n\n\u5426\u5219\u662f\u5426\u8fdb\u4f4d\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u6210\u7acb\u7b49\u5f0f\u624d\u4e0d\u6210\u7acb)\n\nb)\u5982\u679c\u4e09\u4e2a\u6570\u5b57\u90fd\u786e\u5b9a\u4e86\uff0c\u90a3\u9700\u8981\u8ba1\u7b97\u4e00\u4e0b\u8be5\u4f4d\u7b49\u5f0f\u662f\u5426\n\n\u6210\u7acb\n\\*/\n```cpp\n#include <fstream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\n \nifstream cin(\"alpha.in\");\nofstream cout(\"alpha.out\");\n\nint n;\nchar in[3][30];//\u5b58\u50a8\u8bfb\u5165\u7684\u5b57\u7b26\u4e32 \nint A[30][3];//\u5b58\u50a8\u7b97\u5f0f \n//\u6807\u8bb0\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u88ab\u4f7f\u7528,1\u8868\u793a\u88ab\u4f7f\u7528\uff0c0\u8868\u793a\u672a\u88ab\u4f7f\u7528 \nbool use[30];\n//\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\uff0c-1\u8868\u793a\u672a\u786e\u5b9a\nint num[30]; \nvoid Search(int,bool);\n#define RETURN {num[x]=-1;use[c]=0;return;}//\u5b8f\u5b9a\u4e49 \u8fd8\u539f+\u8fd4\u56de\u64cd\u4f5c \n\n//\u5904\u7406\u7b2cp\u4f4d\u7b2cq\u4e2a\u6570\u5b57\uff0c\u524d\u4e24\u4e2a\u6570\u5b57\u5b58\u50a8\u5728a\u4e2d\uff0c\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u4e3au \nvoid Search2(int p,int q,int a[2],bool u)\n{\n  int x=A[p][q];\n  if(q==2)\n  {\n    if(p==n-1 && a[0]+a[1]+u>=n) \n      return;//\u526a\u679d2 \n    int c=(a[0]+a[1]+u)%n,i,j;\n    if(num[x]!=-1 && num[x]!=c) \n      return;//\u526a\u679d3 \n    if(use[c] && num[x]!=c) \n      return;//\u526a\u679d4 \n    if(num[x]==-1) \n    {\n      num[x]=c;\n      use[c]=1;\n      int up=(a[0]+a[1]+u)/n;\n      for(i=p+1;i<n;i++)//\u526a\u679d5) \n      {\n        int k1=num[A[i][0]],k2=num[A[i][1]],k3=num[A[i][2]];\n        if(k1==-1 || k2==-1 || k3==-1)//a)\u5176\u4e2dup\u4e3a\u8fdb\u4f4d\uff0c\u82e5up==-1\u8868\u793a\u8fdb\u4f4d\u4e0d\u786e\u5b9a \n        {\n          if(k1!=-1 && k2!=-1 && ((up==-1 && use[(k1+k2)%n] && use[(k1+k2+1)%n])||(up!=-1 && use[(k1+k2+up)%n])))\n            RETURN\n          else if(k1!=-1 && k3!=-1 && ((up==-1 && use[(k3+2*n-k1)%n] && use[(k3+2*n-1-k1)%n])||(up!=-1 && use[(k3+2*n-up-k1)%n])))\n            RETURN\n          else if(k2!=-1 && k3!=-1 && ((up==-1 && use[(k3+2*n-k2)%n] && use[(k3+2*n-1-k2)%n])||(up!=-1 && use[(k3+2*n-up-k2)%n])))\n            RETURN\n          else up=-1;//\u6709\u4e24\u4e2a\u4ee5\u4e0a\u6570\u4e0d\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u4f4d\u4e5f\u4e0d\u786e\u5b9a \n        }\n        else if((up==-1 && (k1+k2)%n!=k3 && (k1+k2+1)%n!=k3)||(up!=-1 && (k1+k2+up)%n!=k3))//b)\n          RETURN\n        else if(i==n-1&&((up==-1&&(k1+k2)/n!=0&&(k1+k2+1)/n!=0)||(up!=-1&&(k1+k2+up)/n!=0)))//\u526a\u679d2) \n          RETURN\n        else up=((k1+k2)>k3);//\u4e09\u4e2a\u6570\u90fd\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u8981\u8ba1\u7b97\u8fdb\u4f4d \n      }\n      Search(p+1,(a[0]+a[1]+u)/n);//\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4f4d \n      num[x]=-1;\n      use[c]=0;\n    }\n    else\n      Search(p+1,(a[0]+a[1]+u)/n);\n    return;\n  }\n    \n  if(num[x]==-1)//\u5982\u679c\u5b57\u6bcd\u672a\u88ab\u786e\u5b9a \n  {\n    for(int i=n-1;i>=0;i--)//\u5012\u7740\u53d6\u6570\uff0c\u907f\u514d\u4e00\u4e9b\u7279\u6b8a\u6570\u636e \n    {\n      if(use[i]==0)//\u526a\u679d1 \n      {\n        num[x]=i;\n        use[i]=1;\n        a[q]=i;//\u786e\u5b9a\u4e0b\u6765\u7684\u6570\u5b57\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4e0b\u53bb\uff0c\u66f4\u65b9\u4fbf \n        Search2(p,q+1,a,u);\n        num[x]=-1;\n        use[i]=0;\n      }\n    }\n  }\n  else//\u5982\u679c\u5b57\u6bcd\u5728\u4e4b\u524d\u7684\u641c\u7d22\u5df2\u7ecf\u88ab\u786e\u5b9a \n  {\n    a[q]=num[x];\n    Search2(p,q+1,a,u);\n  }\n}\n\nvoid Search(int p,bool u)//\u5904\u7406\u7b2cp\u4f4d\uff0c\u4e0a\u4e00\u4f4d\u8fdb\u4f4d\u4e3au \n{\n  if(p>=n)//\u5982\u679c\u51fa\u7ed3\u679c\u4e86 \n  {\n    int i;\n    for(i=0;i<n-1;i++)\n      cout<<num[i]<<' ';cout<<num[i];\n    cout<<endl;\n    exit(0);//\u8f93\u51fa\u540e\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\uff0c\u8282\u7ea6\u8fd4\u56de\u7684\u65f6\u95f4 \n  }\n  int a[2];\n  Search2(p,0,a,u);\n}\n\nint main()\n{\n  freopen(\"alpha.in\",\"r\",stdin);\n  freopen(\"alpha.out\",\"w\",stdout);  \n  for(int i=0;i<30;i++)//\u521d\u59cb\u65f6\u6240\u6709\u7684\u5b57\u6bcd\u3001\u6570\u5b57\u5747\u672a\u5b9a \n    num[i]=-1,use[i]=0;\n    \n  cin>>n>>in[0]>>in[1]>>in[2];\n  for(int i=0;i<n;i++)//\u5c06\u5b57\u7b26\u4e32\u6309\u9884\u5b9a\u89c4\u5219\u9884\u5904\u7406\u81f3A\u6570\u7ec4\u4e2d \n    for(int j=0;j<3;j++)\n      A[n-1-i][j]=in[j][i]-'A';\n        \n  Search(0,0);//\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u641c\u7d22\uff0c\u6b64\u65f6\u6ca1\u6709\u8fdb\u4f4d \n  //cout<<\"NO\"<<endl;//\u9898\u76ee\u4fdd\u8bc1\u6709\u4e14\u53ea\u6709\u4e00\u7ec4\u89e3 \n  return 0;\n}\n```",
        "postTime": 1494812521,
        "uid": 22257,
        "name": "foreverpiano",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u672c\u6765\u770b\u5230\u9898\u89e3\u8bf4\u662f\u9ad8\u65af\u6d88\u5143\uff0c\u5b66\u4e86\u534a\u5929\u8fd8\u662f\u4e00\u8138\u61f5\uff0c\u6700\u540e\u51b3\u5b9a\u7528\u641c\u7d22\u52a0\u526a\u679d\u8fc7\u4e86\u8fd9\u9053\u9898\n\u526a\u679d\u6709\u4e24\u4e2a\n\n1.\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u5982\u679c\u6709\u4e00\u884c\uff0c\u4e09\u4e2a\u70b9\u90fd\u5df2\u77e5\u4f46\u662f(a + b) % m  != c && (a + b + 1) % m != c\u8868\u793a\u4e0d\u7ba1\u662f\u76f4\u63a5\u52a0\u8fd8\u662f\u52a0\u4e0a\u524d\u4e00\u4f4d\u7684\u8fdb\u4f4d\u90fd\u548cc\u4e0d\u540c\uff0c\u8bf4\u660e\u8fd9\u6761\u8def\u8d70\u4e0d\u901a\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\n\n2.\u5982\u679c\u6700\u7ec8\u4f4d\u4e24\u4e2a\u4e00\u52a0\uff0c\u53d1\u73b0\u8d85\u8fc7\u8fdb\u5236\u4f4d\uff0c\u8bf4\u660e\u8981\u8fdb\u4f4d\uff0c\u8fd9\u65f6\u5019\u5c31\u76f4\u63a5\u8fd4\u56de\uff08\u56e0\u4e3ac\u548ca,b\u662f\u540c\u6837\u957f\u5ea6\uff09\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int M = 25;\nstring s1,s2,s3;\nint a[M + 5],b[M + 5],c[M + 5];\nint mark[M + 5];\nint mark_1[M + 5];\nint G;\nint flag = 0;\nbool check()\n{\n\tfor(int i = G;i >= 1;i --)//\u4ece\u540e\u5f80\u524d\n\t\tif(mark_1[a[i]] && mark_1[b[i]] && mark_1[c[i]])//\u5982\u679c\u4e09\u4e2a\u90fd\u51fa\u73b0\u8fc7\n\t\t{\n\t\t\tint mid = mark[a[i]] + mark[b[i]];\n\t\t\tmid = mid % G;\n\t\t\tif(mid != (mark[c[i]] + G - 1) % G && mid != mark[c[i]]) return true;//\u5982\u679c\u524d\u9762\u8fdb\u4f4d\u548c\u4e0d\u8fdb\u4f4d\u90fd\u4e0d\u7b26\u5408\n\t\t}\n\treturn false;\n}\nvoid dfs(int x,int s)\n{\n\tif(flag) return;\n\tif(mark[a[G]] + mark[b[G]] >= G && mark_1[a[G]] && mark_1[b[G]] && mark_1[c[G]]) return;//\u5982\u679c\u6700\u9ad8\u4f4d\u4ea7\u751f\u8fdb\u4f4d\n\tif(c[x] != a[x] && mark[c[x]] == mark[a[x]] && mark_1[c[x]] && mark_1[a[x]]) return;\n\tif(c[x] != b[x] && mark[c[x]] == mark[b[x]] && mark_1[b[x]] && mark_1[c[x]]) return;\n\tif(b[x] != a[x] && mark[b[x]] == mark[a[x]] && mark_1[a[x]] && mark_1[b[x]]) return;//\u8fd9\u4e09\u6761\uff0c\u5982\u679c\u6709\u4e24\u4f4d\u5df2\u7ecf\u6807\u8bb0\u4f46\u662f\u4e0d\u76f8\u540c\uff0c\u8868\u793a\u6709\u4e24\u4e2a\u5b57\u6bcd\u5171\u7528\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd4\u56de\n\tif(check()) return;\n\tif(x == G + 1)\n\t{\n\t\tfor(int i = 1;i <= G;i ++)\n\t\t\tcout << mark[i] << \" \";\n\t\tflag = 1;\n\t\treturn;\n\t}\n\tif(!mark_1[a[x]])//\u6311\u9009A\n\t\tfor(int i = G - 1;i >= 0;i --)\n\t\t{\n\t\t\tmark_1[a[x]] = 1;\n\t\t\tmark[a[x]] = i;\n\t\t\tdfs(x,s);\n\t\t\tmark[a[x]] = 0;\n\t\t\tmark_1[a[x]] = 0;\n\t\t}\n\tif(!mark_1[b[x]])//\u6311\u9009B\n\t\tfor(int i = G - 1;i >= 0;i --)\n\t\t{\n\t\t\tmark_1[b[x]] = 1;\n\t\t\tmark[b[x]] = i;\n\t\t\tdfs(x,s);\n\t\t\tmark[b[x]] = 0;\n\t\t\tmark_1[b[x]] = 0;\n\t\t}\n\tif(!mark_1[c[x]])//\u5982\u679cC\u4f4d\u6ca1\u6709\uff0c\u6311\u9009C\u4f4d\n\t{\n\t\tmark_1[c[x]] = 1;\n\t\tmark[c[x]] = (mark[a[x]] + mark[b[x]] + s) % G;\n\t\tdfs(x + 1,mark[a[x]] + mark[b[x]] + s >= G ? 1 : 0);\n\t\tmark_1[c[x]] = 0;\n\t\tmark[c[x]] = 0;\n\t}\n\telse//\u5982\u679c\u6709\u5c31\u68c0\u9a8c\n\t{\n\t\tif((mark[a[x]] + mark[b[x]] + s) % G != mark[c[x]])\n\t\t\treturn;\n\t\tdfs(x + 1,mark[a[x]] + mark[b[x]] + s >= G ? 1 : 0);//\u5982\u679cA\u4f4d\u52a0B\u4f4d\u8d85\u8fc7G\uff0c\u8fdb\u5236\u4f4d\u5c31\u53d61\uff0c\u5426\u5219\u53d6\u96f6\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&G);\n\tcin >> s1 >> s2 >> s3;\n\tfor(int i = 1;i <= G;i ++)\n\t{\n\t\ta[G - i + 1] = s1[i - 1] - 'A' + 1;//\u5904\u7406\u6210\u6570\u5b57\u65b9\u4fbf\u8fd0\u7b97\n\t\tb[G - i + 1] = s2[i - 1] - 'A' + 1;\n\t\tc[G - i + 1] = s3[i - 1] - 'A' + 1;\n\t}\n\tdfs(1,0);\n\treturn 0;\n}\n```\n",
        "postTime": 1563949647,
        "uid": 54135,
        "name": "king_more",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u6b63\u89e3\u90fd\u8bf4\u4e86\uff0c\u6211\u5c31\u8bf4\u8bf4\u6211\u7684\u8fa3\u9e21\u66b4\u529b$qwq$\u3002\u3002\u3002\n\n\u5fc3\u8def\u5386\u7a0b\uff1a\u9707\u60ca\uff0c\u6211\u7adf\u7136\u5f97\u4e86$90$\u5206\uff01\uff01\u3002\u3002\u3002\u5eb7\u5eb7\u6570\u636e\u3002\u3002\u3002\u5965\u3002\u3002\uff08\u5ffd\u7136\u6709\u4e86~~\u90aa\u6076\u7684~~\u5361\u6570\u636e\u7684\u60f3\u6cd5\uff09\n\n\u4e8e\u662f\u628a$for(int \\space i=0;i<n;++i)$\u6539\u6210\u4e86$for(int \\space i=n-1;i>=0;--i) $\n\n\u7136\u540e\uff0c\u6211$90$~\n\n\u7136\u540e\uff0c\u6211\u5f00\u4e86$O2$\uff0c$A$\u4e86$OvO$\u3002\u3002\u3002\n\n### upd:\u7136\u540e\u7b2c\u4e8c\u5929\uff1a\u53ef\u4ee5\u518d\u52a0\u4e2a\u526a\u679d\uff1f\n\n### what\uff0c\u6211A\u4e86\uff1f41ms\uff08without O2\uff09or 33ms (with O2)\n\n\u6211\u7684\u601d\u8def\u5f88\u66b4\u529b\uff1a\n\u7531\u4e8e\u6700\u540e\u4e00\u4f4d\u6ca1\u6709\u8fdb\u4f4d\uff0c\u6240\u4ee5\u8fd9\u4e00\u5217\u7684\u4e09\u4e2a\u5b57\u6bcd\u7684\u5173\u7cfb\u662f\u786e\u5b9a\u7684\uff0c\u800c\u4e0d\u4f1a\u50cf\u540e\u9762\u4e00\u6837\u5b58\u5728\u8fdb\u4f4d\uff0c\u6240\u4ee5\u5c31\u662f\u66b4\u529b\u5927\u679a\u4e3e\uff0c\u5bf9\u4e8e\u7ad6\u5f0f\u7684\u6bcf\u4e00\u5217\uff0c\u679a\u4e3e\u6ca1\u7528\u8fc7\u7684\u6570\uff0c\u7136\u540e\u5224\u4e00\u4e0b\u8fd9\u4e00\u5217\u662f\u5426\u5408\u6cd5\uff08\u8bb0\u5f97\u8981\u7d2f\u79ef\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\uff09\uff0c\u5408\u6cd5\u7684\u8bdd\uff0c\u518d\u5224\u4e00\u4e0b\u6574\u4e2a\u7ad6\u5f0f\u6240\u6709\u5df2\u77e5\u6570\u662f\u5426\u5408\u6cd5\uff0c\u5408\u6cd5\u63a5\u7740\u641c\uff0c\u4e0d\u5408\u6cd5\u679a\u4e3e\u4e0b\u4e00\u4e2a\u3002\u3002\u3002\u590d\u6742\u5ea6\u7384\u5b66\u3002\u3002\u3002\n\n~~\u53c8\u81ed\u53c8\u957f\u53c8\u6162\u7684~~\u4ee3\u7801qwq\n\u89e3\u91ca\u4e00\u4e0b\uff1a$s[i][j]$\u662f\u6307\u7b2c$i$\u884c\u7684\u7b2c$j$\u4e2a\u5b57\u6bcd\uff08\u5df2\u5728$void\\space gs()$\u4e2d\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c'A'\u5bf9\u5e94$0$,'B'\u5bf9\u5e94$1$,\u4ee5\u6b64\u7c7b\u63a8\uff09\uff0c$rw[x]$\u6307x\uff08\u5df2\u7ecf\u8f6c\u5316\u4e3a\u6570\u5b57\u7684\u5b57\u6bcd\uff09\u6240\u4ee3\u8868\u7684\u771f\u6b63\u6570\u5b57\uff0c$vis[x]$\u8868\u793a$x$\u6709\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\uff0c$inc[i]$\u8868\u793a\u7b2c$i$\u5217\u6709\u6ca1\u6709\u8fdb\u4f4d\u3002\n\n\n\u8fd9\u662f90\u5206\u7684\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cctype>\n#include<cstdlib>\n#include<iomanip>\n#include<vector>\n#include<map>\n#include<set>\n#define ll long long\n#define R register int\nstatic char B[1<<8],*S=B,*D=B;\n#define getchar() (S==D&&(D=(S=B)+fread(B,1,1<<8,stdin),S==D)?EOF:*S++)\nusing namespace std;\ninline int g() {\n\tR ret=0,fix=1; register char ch; while(!isdigit(ch=getchar())) fix=ch=='-'?-1:fix;\n\tdo ret=ret*10+(ch^48); while(isdigit(ch=getchar())); return ret*fix;\n}\ninline void gs(int* c) {\n\tregister char ch; while(!isalpha(ch=getchar()));\n\tdo *++c=int(ch-'A'); while(isalpha(ch=getchar())); \n} int n,rw[27],s[4][27],inc[27];\nbool vis[27];\ninline void dfs(int x) { \n\tif(x==0) {for(R i=0;i<n;++i) printf(\"%d \",rw[i]); exit(0);} //print();\n\tif(rw[s[1][x]]==-1) {\n\t\tfor(R i=n-1;i>=0;--i) if(!vis[i]) {\n\t\t\t\t//if(x==n) cout<<i<<endl;\n\t\t\t\trw[s[1][x]]=i,vis[i]=true; \n\t\t\t\tif(rw[s[2][x]]==-1) {\n\t\t\t\t\tfor(R j=0;j<n;++j) if(!vis[j]){\n\t\t\t\t\t\trw[s[2][x]]=j,vis[j]=true;\n\t\t\t\t\t\tif(rw[s[3][x]]==-1) {\n\t\t\t\t\t\t\trw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n\t\t\t\t\t\t\tif(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n\t\t\t\t\t\t\tif(vis[rw[s[3][x]]]) {rw[s[3][x]]=-1; inc[x-1]=0; goto ed2;}\n\t\t\t\t\t\t\tvis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ted2: rw[s[2][x]]=-1,vis[j]=false;\n\t\t\t\t\t} \n\t\t\t\t} else {\n\t\t\t\t\tif(rw[s[3][x]]==-1) {\n\t\t\t\t\t\trw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n\t\t\t\t\t\tif(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n\t\t\t\t\t\tif(vis[rw[s[3][x]]]) {rw[s[3][x]]=-1; inc[x-1]=0; goto enddd;}\n\t\t\t\t\t\tvis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n\t\t\t\t\t} else { \n\t\t\t\t\t\tif(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n\t\t\t\t\t\telse {inc[x-1]=0; }\n\t\t\t\t\t} enddd:;\n\t\t\t\t} rw[s[1][x]]=-1,vis[i]=false;\n\t\t} \n\t} else {\n\t\tif(rw[s[2][x]]==-1) { \n\t\t\tfor(R j=n-1;j>=0;--j) if(!vis[j]) {\n\t\t\t\trw[s[2][x]]=j,vis[j]=true;\n\t\t\t\tif(rw[s[3][x]]==-1) {\n\t\t\t\t\trw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n\t\t\t\t\tif(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n\t\t\t\t\tif(vis[rw[s[3][x]]]) {rw[s[3][x]]=-1; inc[x-1]=0; goto ed21;}\n\t\t\t\t\tvis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n\t\t\t\t} else {\n\t\t\t\t\tif(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n\t\t\t\t} ed21: vis[j]=false;\n\t\t\t} rw[s[2][x]]=-1;\n\t\t} else {\n\t\t\tif(rw[s[3][x]]==-1) {\n\t\t\t\trw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n\t\t\t\tif(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n\t\t\t\tif(vis[rw[s[3][x]]]) {rw[s[3][x]]=-1; inc[x-1]=0; goto end;}\n\t\t\t\tvis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n\t\t\t} else {\n\t\t\t\tif(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n\t\t\t} end:;\n\t\t}\n\t}\n}\n\nsigned main() {\n\tn=g(); for(R i=1;i<=3;++i) gs(s[i]);\n\tmemset(rw,0xff,sizeof(rw)); dfs(n);\n}\n```\n\n\u8fd9\u662f100\u5206\u7684\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cctype>\n#include<cstdlib>\n#include<iomanip>\n#include<vector>\n#include<map>\n#include<set>\n#define ll long long\n#define R register int\nstatic char B[1<<8],*S=B,*D=B;\n#define getchar() (S==D&&(D=(S=B)+fread(B,1,1<<8,stdin),S==D)?EOF:*S++)\nusing namespace std;\ninline int g() {\n    R ret=0,fix=1; register char ch; while(!isdigit(ch=getchar())) fix=ch=='-'?-1:fix;\n    do ret=ret*10+(ch^48); while(isdigit(ch=getchar())); return ret*fix;\n}\ninline void gs(int* c) {\n    register char ch; while(!isalpha(ch=getchar()));\n    do *++c=int(ch-'A'); while(isalpha(ch=getchar())); \n} int n,rw[27],s[4][27],inc[27];\nbool vis[27];\ninline bool ck() {\n    for(R i=1;i<=n;++i) {\n        if(rw[s[1][i]]!=-1&&(rw[s[2][i]])!=-1&&(rw[s[3][i]])!=-1)  {\n            if(((rw[s[1][i]])+(rw[s[2][i]])+1)%n!=(rw[s[3][i]])&&((rw[s[1][i]])+(rw[s[2][i]]))%n!=rw[s[3][i]]) return false;\n        } \n    } return true;\n}\ninline void dfs(int x) { \n    if(x==0) if(!inc[0]){for(R i=0;i<n;++i) printf(\"%d \",rw[i]); exit(0);} //print();\n        else return ;\n    if(rw[s[1][x]]==-1) {\n        for(R i=n-1;i>=0;--i) if(!vis[i]) {\n                rw[s[1][x]]=i,vis[i]=true; \n                if(rw[s[2][x]]==-1) {\n                    for(R j=0;j<n;++j) if(!vis[j]){\n                        rw[s[2][x]]=j,vis[j]=true;\n                        if(rw[s[3][x]]==-1) {\n                            rw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n                            if(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n                            if(vis[rw[s[3][x]]]||!ck()) {rw[s[3][x]]=-1; inc[x-1]=0; goto ed2;}\n                            vis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n                        } else {\n                            if(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n&&ck()) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n                        }\n                        ed2: rw[s[2][x]]=-1,vis[j]=false;\n                    } \n                } \n                else {\n                    if(rw[s[3][x]]==-1) {\n                        rw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n                        if(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n                        if(vis[rw[s[3][x]]]||!ck()) {rw[s[3][x]]=-1; inc[x-1]=0; goto enddd;}\n                        vis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n                    } else { \n                        if(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n&&ck()) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n                        else {inc[x-1]=0; }\n                    } enddd:;\n                } rw[s[1][x]]=-1,vis[i]=false;\n        } \n    } else {\n        if(rw[s[2][x]]==-1) { \n            for(R j=n-1;j>=0;--j) if(!vis[j]) {\n                rw[s[2][x]]=j,vis[j]=true;\n                if(rw[s[3][x]]==-1) {\n                    rw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n                    if(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n                    if(vis[rw[s[3][x]]]||!ck()) {rw[s[3][x]]=-1; inc[x-1]=0; goto ed21;}\n                    vis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n                } else {\n                    if(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n&&ck()) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n                } ed21: vis[j]=false;\n            } rw[s[2][x]]=-1;\n        } else {\n            if(rw[s[3][x]]==-1) {\n                rw[s[3][x]]=(rw[s[1][x]]+rw[s[2][x]]+inc[x]);\n                if(rw[s[3][x]]>=n) rw[s[3][x]]%=n,inc[x-1]=1;\n                if(vis[rw[s[3][x]]]||!ck()) {rw[s[3][x]]=-1; inc[x-1]=0; goto end;}\n                vis[rw[s[3][x]]]=true; dfs(x-1); inc[x-1]=0; vis[rw[s[3][x]]]=false; rw[s[3][x]]=-1; \n            } else {\n                if(rw[s[3][x]]==(rw[s[1][x]]+rw[s[2][x]]+inc[x])%n&&ck()) inc[x-1]=(rw[s[1][x]]+rw[s[2][x]]+inc[x])/n,dfs(x-1),inc[x-1]=0;\n            } end:;\n        }\n    }\n}\n\nsigned main() {\n#ifdef JACK\n    freopen(\"NOIPAK++.in\",\"r\",stdin);\n#endif\n    n=g(); for(R i=1;i<=3;++i) gs(s[i]);\n    memset(rw,0xff,sizeof(rw)); dfs(n);\n}\n```\n",
        "postTime": 1559826230,
        "uid": 115086,
        "name": "Tari",
        "ccfLevel": 7,
        "title": "Jack's \u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "># 1. \u66b4\u529b\u641c\u7d22\n\n\u6709\u601d\u8def\uff0c~~\u6211tcl\u4e0d\u4f1a\u5199~~\uff0c\u6240\u4ee5\uff1a[\u4ee3\u7801\u6765\u6e90\u9898\u89e3](https://www.luogu.org/blog/user26834/solution-p1092)\n\n**\u526a\u679d\u7b56\u7565**\n\n* \u5df2\u4f7f\u7528\u8fc7\u7684\u6570\u4e0d\u80fd\u91cd\u590d\u4f7f\u7528\n\n* (w1+w2)%n!=w3&&(w1+w2+1)%n!=w3\n\n\u56e0\u4e3a\u662f\u52a0\u6cd5\u6240\u4ee5\u8fdb\u4f4d\u786e\u5b9a\u662f$1$,\u53ea\u6709\u6709\u4f4e\u4f4d\u8fdb\u4f4d\u548c\u65e0\u4f4e\u4f4d\u8fdb\u4f4d\u4e24\u79cd\u60c5\u51b5\uff0c\u6a21\u8fc7\u8fdb\u5236\u4e4b\u540e\u5982\u679c\u90fd\u4e0ew3\u4e0d\u5339\u914d\u663e\u7136\u9519\u8bef\n\n* \u56e0\u4e3aw1,w2,w3\u957f\u5ea6\u76f8\u540c\uff0c\u663e\u7136\u6700\u9ad8\u4f4d\u4e0d\u80fd\u8fdb\u4f4d\n\n* w%n!=flag[id(s[3][x])]\n\n\u5904\u7406\u51fa\u6765\u7684 w%n \u540e\u7adf\u7136\u8ddf\u5df2\u77e5\u7ed3\u679c\u4e0d\u4e00\u6837\uff1f~~\u90a3\u8fd8\u60f3\u4ec0\u4e48\uff0c\u526a\u554a~~\n\n\n------------\n\n\u8fd9\u91cc$dfs$\u5185\u8f93\u51fa\u548c$exit(0)$\u6211\u7528$vscode$\u8dd1\u4e0d\u51fa\u8f93\u51fa\uff0c\u4f46\u4ea4$luogu$\u53ef\u4ee5\u8fc7\uff0c~~\u6211tcl~~\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0,~~\u7b2c\u4e00\u6b21\u7528exit(0)~~\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n\nint n,vis[30],flag[30];\nchar s[4][30];\n\nint fz(char ch){//\u5206\u88c5\u9884\u5904\u7406\n    return ch-'A'+1;\n}\n\nvoid dfs(int x,int y,int t){//\u5217\uff0c\u884c\uff0c\u8fdb\u4f4d\n    if(x==0){//\u641c\u5230\u6700\u540e\u4e00\u5217\n        if(t==0){//\u8fdb\u4f4d==0\n            for(int i=1;i<=n;++i) printf(\"%d \",flag[i]);\n            exit(0);//\u76f8\u5f53\u4e8ereturn 0,\u7ed3\u675f\u7a0b\u5e8f\n        }\n        return ;\n    }\n    for(int i=x-1;i>=1;--i){//\u4ece\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u626b\n        int w1=flag[fz(s[1][i])];\n        int w2=flag[fz(s[2][i])];\n        int w3=flag[fz(s[3][i])];\n        if(w1==-1||w2==-1||w3==-1) continue;//\u90fd\u6ca1\u88ab\u8d4b\u503c\n        if((w1+w2)%n!=w3&&(w1+w2+1)%n!=w3) return ;//\u4e0d\u5339\u914d\uff0c\u526a\u679d1\n    }\n    if(flag[fz(s[y][x])]==-1){//\u6ca1\u88ab\u8d4b\u503c\n        for(int i=n-1;i>=0;--i){\n            if(!vis[i]){//\u6ca1\u88ab\u6807\u8bb0\n                if(y!=3){//\u4e0d\u662f\u6700\u540e\u4e00\u884c            \n                    flag[fz(s[y][x])]=i; vis[i]=1;//\u8d4b\u503c\uff0c\u6807\u8bb0\n                    dfs(x,y+1,t);//\u641c\u4e0b\u4e00\u884c            \n                    flag[fz(s[y][x])]=-1; vis[i]=0;//\u8fd8\u539f                        \n                }\n                else{//\u641c\u5230\u6700\u540e\u4e00\u884c            \n                    int w=flag[fz(s[1][x])]+flag[fz(s[2][x])]+t;//\u4e24\u4e2a\u6570\u52a0\u4e0a\u8fdb\u4f4d\n                    if(w%n!=i) continue;//\u4e0d\u5339\u914d            \n                    flag[fz(s[3][x])]=i; vis[i]=1;            \n                    dfs(x-1,1,w/n);//\u641c\u4e0b\u4e00\u5217\uff0c\u66f4\u65b0\u8fdb\u4f4d           \n                    flag[fz(s[3][x])]=-1; vis[i]=0;                        \n                }\n            }            \n        }    \n    }\n    else{//\u88ab\u8d4b\u8fc7\u503c\n        if(y!=3) dfs(x,y+1,t);//\u6ca1\u5230\u6700\u540e\u4e00\u884c\u7ee7\u7eed\u641c\u4e0b\u4e00\u884c\n        else{//\u641c\u5230\u6700\u540e\u4e00\u884c\n            int w=flag[fz(s[1][x])]+flag[fz(s[2][x])]+t;\n            if(w%n!=flag[fz(s[3][x])]) return ;//\u4e0d\u5339\u914d\uff0c\u526a\u679d2\n            dfs(x-1,1,w/n);//\u641c\u4e0b\u4e00\u5217\uff0c\u66f4\u65b0\u8fdb\u4f4d \n        }\n    }\n}\n\nint main(){\n    // freopen(\"in\",\"r\",stdin);\n    cin>>n;\n    for(int i=1;i<=3;++i) scanf(\"%s\",s[i]+1);\n    memset(flag,-1,sizeof(flag));\n    dfs(n,1,0);//\u4ece\u53f3\u5230\u5de6\uff0c\u4ece\u4e0a\u5230\u4e0b\n    return 0;\n}\n```\n\n># 2. ~~\u636e\u8bf4\u662f\u6b63\u89e3\u7684~~\u9ad8\u65af\u6d88\u5143\n\n~~\u61d2\u5f97\u6253\u7ad6\u5f0f\u548c\u77e9\u9635\uff0c\u51d1\u5408\u770b\u5427~~\n\n**~~Markdown\u771f\u723d~~**\n\n[\u53c2\u8003\u535a\u5ba2](https://www.luogu.org/blog/user30251/solution-p1092)\n\n------------\n\n\n\u4ee5\u4e2a\u4f4d\u4e3a\u7b2c\u4e00\u5217\uff0c$d_i$\u8868\u793a\u7b2c$i$\u5217\u7684\u8fdb\u4f4d\u60c5\u51b5\uff0c\u5bf9\u4e8e\u7b2c$i$\u5217\uff0c\u5982\u679c\u7ad6\u5f0f\u662f\n\n...  ...  $a_i$  ... ...\n  \n+..  ...  $b_i$  ... ...\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n...  ...  $c_i$  ...  ...\n\n\u90a3\u4e48\u663e\u7136\u6709 $(a_i+b_i+d_{i-1})$ $mod$ $n$ $=$ $c_i$\n\n\u53bb\u6389\u6a21\u8fd0\u7b97\u5f97\u5230 $a_i+b_i+d_{i-1}$ $=$ $c_i+kn$\n\n\u7531\u4e8e\u8fd9\u662f\u7ad6\u5f0f\u52a0\u6cd5\uff0c\u90a3\u4e48\u663e\u7136$k$\u5c31\u662f$d_i$\u3002\n\n\u90a3\u5c31\u6709 $a_i+b_i+d_{i-1}$ $=$ $c_i+n*d_i$\n\n\u5c06\u5e38\u6570\u9879\u79fb\u5230\u53f3\u8fb9\u53bb $a_i+b_i-c_i$ $=$ $n*d_i-d_{i-1}$\n\n\u6211\u4eec\u679a\u4e3e$d_i$\uff0c\u8fdb\u884c\u6c42\u89e3\u3002\n\n\u663e\u7136$d_n,d_i$\u90fd\u662f$0$\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e$2^{n-1}$\u6b21\n\n\u9ad8\u65af\u6d88\u5143\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^3)$\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(2^{n-1}n^3)$\uff0c\u663e\u7136\u4e0d\u591f\u5feb\uff0c\u8003\u8651\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6539\u53d8\u7684\u53ea\u6709\u5e38\u6570\u9879\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u505a\u4e00\u6b21\u9ad8\u65af\u6d88\u5143\u3002\u901a\u8fc7\u8fd9\u6b21\u9ad8\u65af\u6d88\u5143\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u6c42\u51fa\u672a\u77e5\u6570\u7684\u7cfb\u6570\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u5e38\u6570\u9879\u7684\u4f18\u5316:\n\n\u8bbe\u7b2c$i$\u4e2a\u65b9\u7a0b\u7684\u5316\u7b80\u540e\u7684\u5e38\u6570\u9879\u4e3a$A_i$\uff0c\n\n\u8bbe\u9ad8\u65af\u6d88\u5143\u4e4b\u540e\u5f97\u5230\u7684\u672a\u77e5\u6570\u7684\u7cfb\u6570\u4e3a$K$\n\n\u6211\u4eec\u518d\u7528\u4e00\u4e2a\u6570\u7ec4$g_{i,j}$\u6765\u4fdd\u5b58\u7b2c$i$\u4e2a\u65b9\u7a0b\u7684\u5316\u7b80\u540e\u7684\u5e38\u6570\u9879\u548c$d_j$\u7684\u5173\u7cfb\n\n\u5373 $A_i$ $=$ $\\sum_{j=1}^n$ $g_{i,j}$\n\n\u663e\u7136\uff0c\u521d\u59cb\u65f6$g_{i,j} = 5,g_{i,i-1} = -1$\n\n\u6bcf\u6b21\u679a\u4e3e\u51fa$d$\u6570\u7ec4\u7684\u53d6\u503c\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$O(n^2)$\u7684\u65f6\u95f4\u7b97\u51fa\u5e38\u6570\u9879$A_i$\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a$O(2^{n-1}n^2)$\uff0c\u4f46\u7531\u4e8e\u5f88\u591a\u53d6\u503c\u4e0d\u7528$O(n^2)$\u7684\u65f6\u95f4\u5373\u53ef\u5224\u5b9a\u4e3a\u4e0d\u53ef\u884c\uff0c\u6240\u4ee5\u65f6\u95f4\u65f6\u95f4\u4f1a\u6bd4\u8f83\u77ed\u3002\n\n~~\u6253\u4e0d\u52a8\u4e86\uff0c\u4ee3\u7801\u5495~~\n \n>## [\u4e00\u7bc7\u7279\u522b\u597d\u7684\u9ad8\u65af\u6d88\u5143\u535a\u5ba2](https://www.cnblogs.com/ECJTUACM-873284962/p/6880199.html)\n\n>## [\u6ce8\u91ca\u8be6\u7ec6\u7684\u9ad8\u65af\u6d88\u5143\u4ee3\u7801](https://blog.csdn.net/pengwill97/article/details/77200372)\n ",
        "postTime": 1572315839,
        "uid": 154646,
        "name": "IamStarlight",
        "ccfLevel": 0,
        "title": "luogu 1092 \u866b\u98df\u7b97"
    },
    {
        "content": "\u6700\u66b4\u529b\u7684\u641c\u7d22\uff1a\u679a\u4e3e\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4ec0\u4e48\uff0c\u68c0\u9a8c\n\n\n\n\n\u4f18\u5316\uff1a\n\n\nO\u3001\u5bf9\u4e8e\u5f53\u524d\u5217\u7684\u4e09\u4e2a\u5b57\u7b26\u662f\u5426\u5df2\u7ecf\u786e\u5b9a\u52068\u79cd\u60c5\u51b5\u8ba8\u8bba\n\n\n\uff083\u4e2a\u90fd\u786e\u5b9a\uff0c\u786e\u5b9a2\u4e2a\\*3\uff0c\u53ea\u786e\u5b9a1\u4e2a\\*3\uff0c\u90fd\u6ca1\u786e\u5b9a\uff09\n\n\n1\u30013\u4e2a\u90fd\u786e\u5b9a\u7684\uff0c\u76f4\u63a5\u5224\u65ad\n\n\n2\u3001\u786e\u5b9a\u4e862\u4e2a\u7684\uff0c\u63a8\u51fa\u7b2c3\u4e2a\n\n\n3\u3001\u53ea\u786e\u5b9a1\u4e2a\u7684\uff0c\u679a\u4e3e\u4e00\u4e2a\uff0c\u63a8\u51fa\u53e6\u4e00\u4e2a\n\n\n4\u3001\u90fd\u6ca1\u786e\u5b9a\u7684\uff0c\u679a\u4e3e\u524d\u4e24\u4e2a\uff0c\u63a8\u7b2c\u4e09\u4e2a\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e0d\u7528\u679a\u4e3e\u662f\u5426\u8fdb\u4f4d\n\n\nA\u3001\u5bf9\u4e8e\u641c\u7d22\u987a\u5e8f\u7684\u4f18\u5316\uff1a\n\n\n1\u3001\u5c0f\u5b66\u7b97\u7ad6\u5f0f\uff1f\u4ece\u53f3\u5f80\u5de6\u7b97\uff01 \u6240\u4ee5\u6309\u7ad6\u5f0f\u4ece\u53f3\u5f80\u5de6\u679a\u4e3e\uff0c\u4f4e\u4f4d\u7684\u8fdb\u4f4d\u5bf9\u9ad8\u4f4d\u6709\u5f71\u54cd\n\n\n2\u3001\u679a\u4e3e\u5b57\u6bcd\u4ee3\u8868\u7684\u6570\u5b57\u4ecen-1\u5f80\u5c0f\u679a\u4e3e\uff0c\u56e0\u4e3a\u6700\u9ad8\u4f4d\u4e0d\u4f1a\u8fdb\u4f4d\uff0c\u9ad8\u4f4d\u6bd4\u8f83\u5c0f\uff08\u4f18\u5316\u7684\u5173\u952e\uff09\n\n\nB\u3001\u4e00\u822c\u90fd\u80fd\u60f3\u5230\u7684\u4f18\u5316:\n\n\n1\u3001\u7528\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u88ab\u7528\u8fc7\uff08\u4ee3\u7801\u4e2d\u7684use[]\uff09\n\n\n2\u3001\u4e00\u65e6\u7ed3\u679c\u641c\u51fa\u6765\u4e86\uff0c\u8bbe\u6807\u5fd7\u53d8\u91cf\uff0c\u4e00\u8defreturn\u4e4b\u81f3\u4e3b\u51fd\u6570\uff0c\u6700\u597d\u5728\u6bcf\u4e2a\u9012\u5f52\u56de\u6eaf\u524d\u90fd\u5199\u4e00\u4e2a\u3002\uff08exit\uff080\uff09\u4e5f\u53ef\u4ee5\uff0c\u4f46\u4e0d\u786e\u5b9aNOIP\u53ef\u4e0d\u53ef\u4ee5\u7528\uff09\n\n\nC\u3001\u8fdb\u4f4d\u7684\u4f18\u5316\uff1a\n\n\n1\u3001\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u4f4d\u662f\u5426\u8fdb\u4f4d\uff0c\u4ee3\u7801\u4e2d\u7684bit[]\n\n\n2\u3001\u5982\u679c\u8fd9\u4e00\u5217\u7684\u5de6\u8fb9\u4e00\u52173\u4e2a\u6570\u90fd\u9f50\u4e86\uff0c\u5224\u65ad\u5728\u6ee1\u8db3\u4ed6\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e00\u5217\u662f\u5426\u9700\u8981\u8fdb\u4f4d\n\n\nD\u3001\u526a\u679d\u7684\u5173\u952e\uff1a\n\n\n\u679a\u4e3e\u8fd9\u4e00\u5217\u5de6\u8fb9\u7684\u5217\uff0c\u5982\u679c\u4ed6\u4eec3\u4e2a\u6570\u90fd\u9f50\u4e86\uff0c\u5224\u65ad\u5728\u8fdb\u4f4d/\u4e0d\u8fdb\u4f4d\u7684\u60c5\u51b5\u4e0b\u662f\u5426\u6210\u7acb\uff0c\u4e0d\u6210\u7acb\u5219return\n\n\n\u6ca1\u6709\u8fd9\u4e2a\u526a\u679d\u8fc7\u4e0d\u4e86\u7b2c9\u4e2a\u70b9\n\n\n\n\n\u6ce8\u610f\uff08\u6211\u72af\u7684\u9519\u8bef\uff09\uff1a\n\n\n1\u3001\u5e76\u4e0d\u662f\u540c\u4e00\u5217\u4e2d\u7684\u4e09\u4e2a\u5b57\u6bcd\u4ee3\u8868\u6570\u5b57\u90fd\u4e0d\u80fd\u76f8\u540c\uff0c\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709\u91cd\u590d\u5b57\u6bcd\n\n\n\u8fd9\u79cd\u60c5\u51b5\u53ea\u4f1a\u5f71\u54cd\u786e\u5b9a1\u4e2a \u548c \u90fd\u6ca1\u786e\u5b9a\u5f97\u5230\u60c5\u51b5\n\n\n\u5bf9\u4e8e\u53ea\u786e\u5b9a1\u4e2a\u5b57\u6bcd\u7684\u5217\uff0c\u53ea\u9700\u8981\u5224\u65ad\u679a\u4e3e\u51fa\u7684\u6570\u662f\u5426\u51fa\u73b0\u8fc7\u5373\u53ef\n\n\n\u5bf9\u4e8e3\u4e2a\u5b57\u6bcd\u90fd\u6ca1\u786e\u5b9a\u7684\u5217\uff0c\u5728\u679a\u4e3e\u524d\u4e24\u4e2a\u7684\u65f6\u5019\u8981\u5224\u65ad\u524d\u4e24\u4e2a\u5b57\u6bcd\u662f\u5426\u76f8\u7b49\n\n\n2\u3001\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u8fdb1\uff0c\u9ad8\u4f4d\u7b97\u7684\u65f6\u5019\u4e0d\u662f\u60f3\u5f53\u7136\u768410\u554a\uff0c\u662fn\uff0c\u8fd9\u662fn\u8fdb\u5236\n\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm> \nusing namespace std;\nint n;\nchar a[30],b[30],c[30];\nint ans[30];\nbool ok,use[30],bit[30];\ninline void dfs(int now)\n{\n    if(ok) return; \n    if(now<0)\n    {\n        for(int i=0;i<n;i++) printf(\"%d \",ans[i]);\n        ok=true;\n        return;\n    }\n    //\u8fdb\u4f4d\u7684\u4f18\u53162\uff1a \n    int flag=2; \n    if(now && ans[a[now-1]-'A']!=-1 && ans[b[now-1]-'A']!=-1 && ans[c[now-1]-'A']!=-1) \n    {\n        if((ans[a[now-1]-'A']+ans[b[now-1]-'A'])%n==ans[c[now-1]-'A']) flag=0;\n        else if((ans[a[now-1]-'A']+ans[b[now-1]-'A']+1)%n==ans[c[now-1]-'A']) flag=1;\n        else return;    \n    }\n    //\u526a\u679d\u7684\u5173\u952e\uff1a \n    for(int i=now-2;i>=0;i--)\n    {\n        if(ans[a[i]-'A']!=-1 && ans[b[i]-'A']!=-1 && ans[c[i]-'A']!=-1)\n         if((ans[a[i]-'A']+ans[b[i]-'A'])%n!=ans[c[i]-'A'] && (ans[a[i]-'A']+ans[b[i]-'A']+1)%n!=ans[c[i]-'A']) \n          return;\n    }\n    int & aa=ans[a[now]-'A'],& bb=ans[b[now]-'A'],& cc=ans[c[now]-'A'];\n    if(aa!=-1 && bb!=-1  && cc!=-1)\n    {\n        if((aa+bb+bit[now])%n==cc) \n        {\n            bit[now-1]=(aa+bb+bit[now])/n;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            dfs(now-1);\n            if(ok) return;\n        }\n        else return; \n    }\n    // \u5206\u7c7b\u8ba8\u8bba\u4e2d\u7684\u4f18\u5316\u4ee5\u6b64\u4e3a\u4f8b\uff1a \n    else if(aa!=-1 && bb!=-1)\n    {\n        if(use[(aa+bb+bit[now])%n]) return; //\u4e00\u822c\u4f18\u53161 \n        bit[now-1]=(aa+bb+bit[now])/n;//\u8fdb\u4f4d\u4f18\u53161 \n        if(flag!=2 && bit[now-1]!=flag) return; //\u8fdb\u4f4d\u4f18\u53162 \n        cc=(aa+bb+bit[now])%n;\n        use[cc]=true;\n        dfs(now-1);\n        if(ok) return;//\u4e00\u822c\u4f18\u53162 \n        use[cc]=false;\n        cc=-1;\n    }\n    else if(aa!=-1 && cc!=-1)\n    {\n        if(aa+bit[now]<=cc)\n        {\n            if(use[cc-aa-bit[now]]) return;\n            bit[now-1]=0;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            bb=cc-aa-bit[now];\n            use[bb]=true;\n            dfs(now-1);\n            if(ok) return;\n        }\n        else\n        {\n            if(use[cc+n-aa-bit[now]]) return;\n            bit[now-1]=true;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            bb=(cc+n-aa-bit[now])%n;\n            use[bb]=true;\n            dfs(now-1);\n            if(ok) return; \n        }\n        use[bb]=false;\n        bb=-1;\n    }\n    else if(bb!=-1 && cc!=-1)\n    {\n        if(bb+bit[now]<=cc)\n        {\n            if(use[cc-bb-bit[now]]) return; \n            bit[now-1]=0;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            aa=cc-bb-bit[now];\n            use[aa]=true;\n            dfs(now-1);\n            if(ok) return;\n        }\n        else\n        {\n            if(use[cc+n-bb-bit[now]]) return;\n            bit[now-1]=true;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            aa=(cc+n-bb-bit[now])%n;\n            use[aa]=true;\n            dfs(now-1);\n            if(ok) return;\n        }\n        use[aa]=false;\n        aa=-1;\n    }\n    else if(aa!=-1)\n    {\n        for(int i=n-1;i>=0;i--)\n        {\n            if(use[i]) continue;\n            if(use[(aa+i+bit[now])%n]) continue;\n            bit[now-1]=(aa+i+bit[now])/n;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            bb=i; cc=(aa+i+bit[now])%n;\n            use[bb]=use[cc]=true;\n            dfs(now-1);\n            if(ok) return;\n            use[bb]=use[cc]=false;\n            bb=cc=-1;\n        }\n    }\n    else if(bb!=-1)\n    {\n        for(int i=n-1;i>=0;i--)\n        {\n            if(use[i]) continue;\n            if(use[(bb+i+bit[now])%n]) continue;\n            bit[now-1]=(i+bb+bit[now])/n;\n            if(flag!=2 && bit[now-1]!=flag) return;\n            aa=i; cc=(bb+i+bit[now])%n;\n            use[aa]=use[cc]=true;\n            dfs(now-1);\n            if(ok) return;\n            use[aa]=use[cc]=false;\n            aa=cc=-1;\n        }\n    }\n    else if(cc!=-1)\n    {\n        for(int i=n-1;i>=0;i--)\n        {\n            if(use[i]) continue;\n            if(i+bit[now]<=cc && !use[cc-i-bit[now]])\n            {\n                bit[now-1]=0;\n                if(flag!=2 && bit[now-1]!=flag) return;\n                aa=i; bb=cc-i-bit[now];\n                use[aa]=use[bb]=true;\n                dfs(now-1);\n                if(ok) return;\n                use[aa]=use[bb]=false;\n                aa=bb=-1;\n            }\n            else if(i+bit[now]>cc && !use[cc+n-i-bit[now]])\n            {     \n                bit[now-1]=1;\n                if(flag!=2 && bit[now-1]!=flag) return;\n                aa=i; bb=(cc+n-i-bit[now])%n;\n                use[aa]=use[bb]=true;\n                dfs(now-1);\n                if(ok) return;\n                use[aa]=use[bb]=false;\n                aa=bb=-1;\n            }\n        }\n    }\n    else\n    {\n        for(int i=n-1;i>=0;i--)\n        {\n            if(use[i]) continue;\n            for(int j=n-1;j>=0;j--)\n            {\n                if((a[now]!=b[now] && i==j) || (a[now]==b[now] && i!=j) || use[j] || use[(i+j+bit[now])%n]) continue;\n                bit[now-1]=(i+j+bit[now])/n;\n                if(flag!=2 && bit[now-1]!=flag) return;\n                aa=i; bb=j; cc=(i+j+bit[now])%n;\n                use[aa]=use[bb]=use[cc]=true;\n                dfs(now-1);\n                if(ok) return;\n                use[aa]=use[bb]=use[cc]=false;\n                aa=bb=cc=-1; \n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%s%s%s\",&n,a,b,c);\n    memset(ans,-1,sizeof(ans));\n    dfs(n-1);\n}\n\n```",
        "postTime": 1501663618,
        "uid": 21351,
        "name": "xuxinyu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\n\u4ece\u53f3\u5f80\u5de6\uff0c\u4e00\u5217\u5217\u641c\u7d22\u3002\u641c\u7d22\u65f6\u4f20\u9012\u7b2c\u51e0\u5217\u548c\u662f\u5426\u8fdb\u4f4d\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u52a0\u6570\uff0c\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u6ca1\u6709\u5339\u914d\u5230\u7684\u5b57\u6bcd\uff0c\u5c31\u627e\u4e00\u4e2a\u6570\u5b57\u585e\u8fdb\u53bb\uff1b\u5bf9\u4e8e\u548c\uff0c\u8ba1\u7b97\u4e24\u4e2a\u52a0\u6570\u4e4b\u548c\u5e76mod n\uff0c\u5982\u679c\u4e0e\u5df2\u6709\u51b2\u7a81\u5c31\u8fd4\u56de\u3002\n\n\u7b80\u5355\u5730\u8fd9\u4e48\u5904\u7406\u5c31\u5df2\u7ecf\u670980\u5206\u4e86\uff1b\u5982\u679c\u627e\u6570\u5b57\u7684\u65f6\u5019\u4ece\u540e\u5f80\u524d\u627e\u5219\u80fd\u591f\u5230\u8fbe90\u5206\u3002\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83\u597d\u60f3\u5230\u7684\u526a\u679d\uff1a\u5982\u679c \u5176\u4e2d\u4e00\u4e2a\u52a0\u6570 \u4e0e \u548c \u5df2\u7ecf\u786e\u5b9a\uff0c\u5219\u53ef\u4ee5\u7b97\u51fa \u53e6\u5916\u4e00\u4e2a\u52a0\u6570 \u3002\uff08\u540c\u6837\uff0c\u5df2\u7ecf\u51b2\u7a81\u5c31\u8fd4\u56de\uff09\u3002\n\n\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u5927\u591a\u6570\u65f6\u5019\u770b\u4e0d\u51fa\u6548\u7387\u5dee\u3002\uff08\u6211\u540e\u6765\u628a\u8fd9\u4e2a\u526a\u679d\u5220\u6389\uff0c\u4ecd\u7136\u8dd1\u4e8616ms\uff09\u3002\n\n\u5728\u4e0a\u8ff0\u601d\u8def\u7684\u57fa\u7840\u4e0a\uff0c\u6709\u4e2a\u80fd\u5927\u5e45\u63d0\u9ad8\u6548\u7387\u7684\u526a\u679d\uff1a\u641c\u7d22\u5f53\u524d\u5217\u5de6\u8fb9\u7684\u6240\u6709\u5217\uff0c\u5982\u679c\u4e09\u4e2a\u6570\u90fd\u5df2\u7ecf\u786e\u5b9a\uff08A+B=C\uff09\uff0c\u4e14\u65e0\u8bba\u662f\u5426\u8fdb\u4f4d\u90fd\u65e0\u6cd5\u6ee1\u8db3\u8fd9\u4e2a\u7b49\u5f0f\uff0c\u5c31\u53ef\u4ee5\u9000\u6389\u5f53\u524d\u641c\u7d22\u3002\n\n\n\u4ee3\u7801\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\u3002\n\n```cpp\n/* P1092\n * Au: SJoshua\n */\n#include <cstdio>\n#include <cstdlib>\n\nint match[26], n;\nchar fa[27], fb[27], fs[27];\nbool flag[27];\n\nvoid dfs(int step, bool plus = false) {\n    if (step == n) {\n        if (!plus) {\n            for (int k = 0; k < n; k++) { \n                printf(\"%d \", match[k]);\n            }    \n            exit(0);\n        } else {\n            return; \n        }\n    }\n    for (int k = n-2-step; k >= 0; k--) {\n        if (match[fa[k]] != -1 && match[fb[k]] != -1 && match[fs[k]] != -1 && (match[fa[k]] + match[fb[k]]) % n != match[fs[k]] && (1 + match[fa[k]] + match[fb[k]]) % n != match[fs[k]]) {\n            return; \n        }\n    }\n    int tmp = n-1-step;\n    if (match[fa[tmp]] == -1) {\n        for (int k = n-1; k >= 0; k--) {\n            if (!flag[k]) {\n                match[fa[tmp]] = k;\n                flag[k] = true;\n                dfs(step, plus);\n                match[fa[tmp]] = -1;\n                flag[k] = false;\n            }\n        }\n    } else if (match[fb[tmp]] == -1) { \n        for (int k = n-1; k >= 0; k--) {\n            if (!flag[k]) {\n                match[fb[tmp]] = k;\n                flag[k] = true;\n                dfs(step, plus);\n                match[fb[tmp]] = -1;\n                flag[k] = false;\n            }\n        }\n    } else if (match[fs[tmp]] == -1) {\n        int res = match[fa[tmp]] + match[fb[tmp]] + plus;\n        for (int k = 0; k < n; k++) {\n            if (match[k] == res%n) {\n                return;\n            }\n        }\n        match[fs[tmp]] = res % n;\n        flag[match[fs[tmp]]] = true;\n        dfs(step+1, res >= n);\n        flag[match[fs[tmp]]] = false;\n        match[fs[tmp]] = -1; \n    } else {\n        int res = match[fa[tmp]] + match[fb[tmp]] + plus;\n        if (match[fs[tmp]] == res % n) {\n            dfs(step+1, res >= n);\n        }\n    }\n}\n\nint main(void) {\n    scanf(\"%d\\n%s\\n%s\\n%s\", &n, fa, fb, fs);\n    for (int k = 0; k < n; k++) {\n        match[k] = -1;\n        fa[k] -= 'A';\n        fb[k] -= 'A';\n        fs[k] -= 'A';\n    } \n    dfs(0);\n    return 0;\n}\n```",
        "postTime": 1474469915,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "140\u884c\u3002\u3002\u672c\u4eba\u6bd4\u8f83\u5f31\uff0c\u5206\u4e868\u79cd\u60c5\u51b5\u8ba8\u8bba\uff08\u6253\u8d77\u6765\u9ebb\u70e6\uff0c\u4f46\u662f\u8c03\u8bd5\u8d77\u6765\u6bd4\u8f83\u6e05\u6670\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u5947\u602a\u7684\u95ee\u9898\uff0c\u800c\u4e14\u5927\u591a\u6570\u4ee3\u7801\u662f\u76f8\u4f3c\u7684\uff0c\u590d\u5236\u4e00\u4e0b\u5c31\u597d\u4e86\uff09\uff0c\u7528vix[X]\u8868\u793a\u8be5\u5b57\u6bcd\u6709\u6ca1\u6709\u7528\u8fc7\uff0cb[x]\u8868\u793a\u8be5\u6570\u5b57\u6709\u6ca1\u6709\u7528\u8fc7\u3002\n\n\u6ce8\u610f\u4e24\u4e2a\u5b57\u6bcd\u76f8\u540c\u7684\u60c5\u51b5\u3002\u3002\u3002\u7b2c\u4e00\u4f4d\u4e0d\u80fd\u6709\u8fdb\u4f4d\u3002\u3002\n\n\u7b2c8\u4e2a\u70b9\u5982\u679c\u4f60\u60f3\u8fc7\u53c8\u4e0d\u60f3\u6539\u592a\u591a\u4ee3\u7801\uff0c\u76f4\u63a5\u628a\u4ece0~n-1\u641c\u7d22\u6539\u6210n-1~0\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#define N 30\nusing namespace std;\nint n;\nchar A[N],B[N],C[N];\nint ak[N],bk[N],ck[N],w[30];\nbool vis[30],b[30];\nvoid init()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s\",A);scanf(\"%s\",B);scanf(\"%s\",C);\n    for(int i=0;i<n;++i)ak[n-i]=A[i]-'A';\n    for(int i=0;i<n;++i)bk[n-i]=B[i]-'A';\n    for(int i=0;i<n;++i)ck[n-i]=C[i]-'A';\n}\nvoid printing()\n{\n    for(int i=0;i<n;++i)printf(\"%d \",w[i]);\n    printf(\"\\n\");\n}\nbool dfs(int k,int last)\n{\n    if(k==n+1)\n    {\n        if(last!=0)return 0;\n        printing();\n        return 1;\n    }\n    int X=ak[k],Y=bk[k],Z=ck[k];\n    if(vis[X]&&vis[Y]&&vis[Z])\n    {\n        int x=w[X],y=w[Y],z=w[Z];\n        int tmp=x+y+last;\n        if((tmp%n)==z)return dfs(k+1,tmp/n);\n        return 0;\n    }\n    if(vis[X]&&vis[Y])\n    {\n        int x=w[X],y=w[Y],tmp=x+y+last,z=tmp%n;\n        if(b[z])return 0;    \n        b[z]=1;w[Z]=z;vis[Z]=1;\n        int t=dfs(k+1,tmp/n);\n        b[z]=0;w[Z]=0;vis[Z]=0;return t;\n    }\n    if(vis[X]&&vis[Z])\n    {\n        int x=w[X],z=w[Z],y=0,tmp=x+last;\n        if(tmp<=z)y=z-tmp;\n        else{ y=z+n-tmp;if(y<0||y>=n)return 0;    }\n        if(b[y])return 0;\n        b[y]=1;w[Y]=y;vis[Y]=1;\n        int t=dfs(k+1,(x+y+last)/n);\n        b[y]=0;w[Y]=0;vis[Y]=0;\n        return t;\n    }\n    if(vis[Y]&&vis[Z])\n    {\n        int x=0,y=w[Y],z=w[Z],tmp=y+last;\n        if(tmp<=z)x=z-tmp;\n        else{ x=z+n-tmp;if(x<0||x>=n)return 0; }\n        if(b[x])return 0;\n        b[x]=1;w[X]=x;vis[X]=1;\n        int t=dfs(k+1,(x+y+last)/n);\n        b[x]=0;w[X]=0;vis[X]=0;\n        return t;\n    }\n    if(vis[X])\n    {\n        int x=w[X];\n        for(int y=0;y<n;++y)\n          if(!b[y]&&!b[(x+y+last)%n]&&((y!=((x+y+last)%n)&&Y!=Z)||(y==((x+y+last)%n)&&Y==Z)))\n        {\n            int z=(x+y+last)%n;\n            b[y]=1;w[Y]=y;b[z]=1;w[Z]=z;vis[Y]=1;vis[Z]=1;\n            int t=dfs(k+1,(x+y+last)/n);\n            b[y]=0;w[Y]=0;b[z]=0;w[Z]=0;vis[Y]=0;vis[Z]=0;\n            if(t)return 1;\n        }\n        return 0;\n    }\n    if(vis[Y])\n    {\n        int y=w[Y];\n        if(X==Z)\n        {\n            if(y!=0)return 0;\n        }\n        for(int x=0;x<n;++x)\n          if(!b[x]&&!b[(x+y+last)%n]&&((x!=((x+y+last)%n)&&X!=Z)||(x==((x+y+last)%n)&&X==Z)))\n        {\n            int z=(x+y+last)%n;\n            b[x]=1;w[X]=x;b[z]=1;w[Z]=z;vis[X]=1;vis[Z]=1;\n            int t=dfs(k+1,(x+y+last)/n);\n            b[x]=0;w[X]=0;b[z]=0;w[Z]=0;vis[X]=0;vis[Z]=0;\n            if(t)return 1;\n        }\n        return 0;\n    }\n    if(vis[Z])\n    {\n        int z=w[Z];\n        for(int x=0;x<n;++x)if(!b[x])\n        {\n            int tmp=x+last,y=0;\n            if(tmp<=z)y=z-tmp;\n            else { y=z+n-tmp;if(y<0||y>=n)continue;    }\n            if((x==y&&X!=Y)||(x!=y&&X==Y))continue;\n            if(b[y])continue;\n            b[x]=1;w[X]=x;b[y]=1;w[Y]=y;vis[X]=1;vis[Y]=1;\n            int t=dfs(k+1,(x+y+last)/n);\n            b[x]=0;w[X]=0;b[y]=0;w[Y]=0;vis[X]=0;vis[Y]=0;\n            if(t)return 1;\n        }\n        return 0;\n    }\n    for(int x=n-1;x>=0;--x)if(!b[x])\n      for(int y=n-1;y>=0;--y)if(((x==y&&X==Y)||(x!=y&&X!=Y))&&!b[y]&&!b[(x+y+last)%n]) \n      {\n          int z=(x+y+last)%n;\n          if((x==z&&X!=Z)||(x!=z&&X==Z)||(y==z&&Y!=Z)||(y!=z&&Y==Z))continue;\n          b[x]=1;b[y]=1;b[z]=1;vis[X]=1;vis[Y]=1;vis[Z]=1;\n          w[X]=x;w[Y]=y;w[Z]=z;\n          int t=dfs(k+1,(x+y+last)/n);\n          b[x]=0;b[y]=0;b[z]=0;vis[X]=0;vis[Y]=0;vis[Z]=0;\n          w[X]=0;w[Y]=0;w[Z]=0;\n          if(t)return 1;\n      }\n    return 0;\n}\nvoid solve(){dfs(1,0);}\nint main()\n{\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1444190501,
        "uid": 8350,
        "name": "seagull",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u53d1\u5e03\u6b64\u9898\u89e3\u4e3b\u8981\u662f\u57fa\u4e8e\u51e0\u4e2a\u7279\u70b9: \n\n1 - \u8bc4\u6d4b\u673a\u7ed3\u679c\u4e3a 32ms , \u5e94\u8be5\u662f\u5f88\u5feb\u7684\u4e86. \u7ffb\u4e8620\u9875\u7ed3\u679c\u8fd8\u4e3a\u627e\u5230\u66f4\u5feb\u7684. \u5f53\u7136\u65f6\u95f4\u8d8a\u77ed\u5176\u7ed3\u679c\u7a33\u5b9a\u6027\u8d8a\u5dee. \u4ec5\u4f9b\u53c2\u8003. \n\n2 - \u5927\u591a\u6570\u4eba\u90fd\u662f\u5faa\u73af\u4f4dx\u518d\u5faa\u73afy(\u52a0\u6570\u52a0\u6570\u7ed3\u679c) , \u53cc\u53c2\u6570\u9012\u5f52.  \u800c\u6211\u7684\u65b9\u6848\u662f\u5355\u4e2a\u53c2\u6570\u9012\u5f52 : \u53ea\u5bf9\u9700\u8981\u9009\u503c\u7684\u53d8\u91cfD E A C B\u8fdb\u884c\u9012\u5f52. \n\n3 - \u5f15\u5165\u4e86\u53ef\u88ab\u8ba1\u7b97\u51fa\u7684\u53d8\u91cf\u7684\u673a\u5236\n\u4f8b\u5982:  \nABCED  \nBDACE  \nEBBAA  \n\u4e2d, \u5df2\u77e5D\u548cE\u7684\u8bdd,  A\u662f\u76f4\u63a5\u88ab\u8ba1\u7b97\u51fa\u6765\u7684. \n\u800c\u5341\u4f4d\u6570\u7684C\u4e5f\u662f\u8ba1\u7b97\u51fa\u6765\u7684. \n\n\n\u4ee3\u7801\u7684\u786e\u662f\u5f88\u957f\u7684. \n\n\u64cd\u4f5c\u987a\u5e8f\u4e3a\n\n1 - \u627e\u51fa\u53d8\u91cf\u5217\u8868, \u4f8b\u5982\u4f8b\u9898\u7684  \nABCED  \nBDACE  \nEBBAA  \n\n\u53d8\u91cf\u4e3a D E A C B \n\n\u90a3\u4e48dfs\u7684\u5185\u5bb9\u5c31\u662f\u4e3a\u8fd95\u4e2a\u53d8\u91cf\u9009\u503c, \u9012\u5f52\u6df1\u5ea6\u6700\u5927\u5c31\u662f 5 \n(\u800c\u5982\u679c\u662fx+y\u9012\u5f52\u7684\u8bdd\u5219\u6df1\u5ea6\u662f5 * 3\u4e86\n\n2 - \u627e\u51fa\u53ef\u88ab\u8ba1\u7b97\u7684\u53d8\u91cf, \u653e\u8fdbvar_can_calc_arr , \u51711,2,3\u4e09\u79cd\u60c5\u51b5. \n\n3 - \u627e\u51fa\u9ad8\u4f4d\u6570\u7684\u5173\u7cfb. \u5982\u679c\u4e00\u4e9b\u53d8\u91cf\u5728\u4f4e\u4f4d\u6570\u5c31\u5b9a\u4e49\u597d\u4e86,  \u90a3\u4e48\u5728\u9ad8\u4f4d\u6570\u7684\u65f6\u5019, \u5c31\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u9ad8\u4f4d\u65f6\u7684\u52a0\u51cf\u60c5\u51b5. \u8fd9\u4e2a\u526a\u679d\u7684\u6548\u679c\u4e5f\u4e0d\u9519\u7684. \n\n4 - \u521d\u59cb\u5316 initxmap() , \u4ee5\u4fbf\u5728dfs\u5185\u4f7f\u7528\u4f4d\u64cd\u4f5c\u6765\u63d0\u9ad8\u901f\u5ea6, \u8fd9\u4e2a\u53ef\u53c2\u8003 \u516b\u7687\u540e \u95ee\u9898\u7684\u4f4d\u64cd\u4f5c\u77e5\u8bc6. \n\n5 - \u5f00\u59cb\u8fdb\u884c\u8be6\u7ec6\u7684 dfs \u8fc7\u7a0b :\n\n\u5728\u4e0d\u65ad\u5730\u4e3a\u53d8\u91cf\u9009\u53d6\u4e00\u4e2a\u6570\u503c\u7684\u65f6\u5019, \u4f1a\u7531\u4e2a\u4f4d\u6570\u8c03\u5230\u5341\u4f4d\u6570, \u5982\u679c\u67d0\u4e9b\u4f4d\u6570\u7684\u8ba1\u7b97\u9700\u8981\u7684\u53d8\u91cf\u5168\u662f\u4f4e\u4f4d\u6570\u5c31\u9009\u597d\u7684,  \u90a3\u4e48\u5904\u7406\u4e0b\u4e00\u4e2a\u53d8\u91cf\u7684\u65f6\u5019, \u4f1a\u76f4\u63a5\u8fde\u8df3\u591a\u4e2a\u4f4d\u6570.   \n\u91c7\u7528 verify(newwei, wei) \u7684\u65b9\u5f0f\u6765\u5224\u65ad\u6700\u540e\u8bbe\u7f6e\u7684\u51e0\u4e2a\u53d8\u91cf\u662f\u5426\u6b63\u786e. \n\n\u63a5\u7740 \u6211\u4eec\u77e5\u9053 \u4e0b\u4e00\u4e2a\u8981\u5206\u914d\u503c\u7684\u53d8\u91cf char varname = vars [ offset ];\n\n\u4f7f\u7528 var_can_calc_arr \u6570\u7ec4, \u53ef\u4ee5\u7acb\u523b\u77e5\u9053\u8fd9\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a\u8ba1\u7b97\u6240\u5f97.  \u91cc\u9762\u5206\u4e3a3\u79cd\u60c5\u51b5. \u90fd\u53ef\u4ee5\u7b97\u51fa\u6765. \n\n\u5230\u6700\u540e, \u4f7f\u7528 dfsnumbits \u7684\u65b9\u5f0f\u7edf\u8ba1\u54ea\u4e9b\u503c\u5df2\u88ab\u4f7f\u7528, \u54ea\u4e9b\u8fd8\u53ef\u4ee5\u4f7f\u7528. \u4e3a\u5f53\u524d varname \u6d4b\u8bd5\u591a\u79cd\u60c5\u51b5\u7684\u53ef\u80fd\u6027. \n\n\n\n```cpp\n#include <cstring>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nint loopcount = 0;\n\n\nchar xmap_l[1 << 16];\nchar xmap_h[1 << 16];\nunsigned allxflag = 0;\nvoid initxmap(int maxn)\n{\n\tfor (int x = 0; x < maxn; x++)\n\t{\n\t\tif (x < 16)\n\t\t\txmap_l[1 << x] = x;\n\t\telse\n\t\t\txmap_h[1 << (x - 16)] = x;\n\t\tallxflag |= 1 << x;\n\t}\n}\ninline int getbitindex(int indexbit)\n{\n\treturn indexbit < (1 << 16) ? xmap_l[indexbit] : xmap_h[indexbit >> 16];\n}\n\n\nint N;\t//N\u8fdb\u5236..\nchar v1[27];\t//\u52a0\u65701\nchar v2[27];\t//\u52a0\u65702\nchar r[27];\t\t//\u548c\nint weishu;\t\t//\u603b\u4f4d\u6570 (\u5b57\u7b26\u4e32\u957f\u5ea6)\n\nbool varexists[128];\nint varindexmap[128];\t//\u53d6\u5f97vars\u7684index\n\nint varcount = 0;\t//\u5df2\u627e\u5230\u7684\u53d8\u91cf\u7684\u4e2a\u6570\nchar vars[27];\t//\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u627e\u5230\u7684\u53d8\u91cf , \u6309\u987a\u5e8f\u5b58\u653e\nint varpos[27];\t//\u53d8\u91cf\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u6570\n\n//\u4f18\u5316:#1, \u53d8\u91cf\u7b2c\u4e00\u6b21\u51fa\u73b0\u5728\u7ed3\u679c\u4e0a, \u662f\u53ef\u4ee5\u88ab\u8ba1\u7b97\u51fa\u6765\u7684\n//\u4f18\u5316#5 , \u53d8\u91cf\u5982\u679c\u662f\u4e2a\u52a0\u6570, \u5e76\u4e14\u53e6\u5916\u4e00\u4e2a\u52a0\u6570\u4e0e\u548c\u90fd\u5df2\u77e5, \u90a3\u4e48\u662f\u53ef\u4ee5\u88ab\u8ba1\u7b97\u51fa\u6765\u7684\nint var_can_calc_arr[128];\t// [varname]\n\n\n//\u4f18\u5316#3, \u9ad8\u4f4d\u8fd0\u7b97\u6240\u9700\u8981\u7684\u53d8\u91cf\u5728\u4f4e\u4f4d\u65f6\u786e\u5b9a\u65f6, \u53ef\u7acb\u523b\u9a8c\u8bc1\u4e00\u4e0b\nint has_high_logics[27];// [lowwei]\nint has_high_logic_vecs[27][27];// [lowwei]\n\nint dfsvarvals[128];\t//[varname]\t\u53d8\u91cf\u7684\u503c, 0\u5230N-1 \nint dfsjinwei[27];\t//\u662f\u5426\u5b58\u5728\u8fdb\u4f4d (\u540e\u4e00\u4f4d, \u4f8b\u5982\u4e2a\u6570\u4f4d\u5b58\u5728\u8fdb\u4f4d , \u5219 [1]=1\n\n\n//\u4f18\u53162:\u4f7f\u7528\u4f4d\u79fb\u6765\u5bfb\u627e\u5269\u4f59\u7684\u6570\u5b57, \u6027\u80fd\u5927\u6982\u63d0\u534750%..\nunsigned int dfsnumbits = 0;\t//\u8868\u793a0\u5230N-1\u7684\u7b2c\u51e0\u4e2a\u6570\u5b57\u5df2\u5206\u914d\u5230\u67d0\u53d8\u91cf\n\ninline int dfsget(char* num, int wei)\n{\n\treturn dfsvarvals[num[wei]];\t//\u53d6\u5f97\u4e00\u4e2a\u5b57\u7b26\u4e32\u67d0\u4e00\u4f4d\u7684\u6570\u503c ,\u6b64\u65f6\u53d8\u91cf\u5df2\u77e5\n}\ninline int dfssum(int wei)\n{\n\treturn dfsget(v1, wei) + dfsget(v2, wei) + dfsjinwei[wei];\t//\u8ba1\u7b97\u67d0\u4e00\u4f4d\u4e24\u4e2a\u52a0\u6570\u4e4b\u548c, \u52a0\u4e0a\u8fdb\u4f4d\n}\nbool verify(int newwei, int oldwei)\n{\n\t//\u4e00\u822c\u60c5\u51b5\u4e0b newwei-oldwei\u4e3a1 ,  \u4f46\u662f\u5982\u679c\u6709\u4e2a\u533a\u95f4\u8fde\u7eed\u4f7f\u7528\u8001\u53d8\u91cf, \u90a3\u4e48\u533a\u95f4\u8303\u56f4\u5c31\u4f1a\u5927\u4e8e1 , \u6240\u4ee5\u4f7f\u7528\u5faa\u73af\n\tfor (int wei = oldwei; wei < newwei; wei++)\n\t{\n\t\tint sum = dfssum(wei);\n\t\tif (dfsjinwei[wei + 1] = (sum >= N ? 1 : 0))\t//\u8bbe\u7f6e\u8fdb\u4f4d\u5230\u4e0b\u4e00\u4f4d, \u5982\u679c\u5b58\u5728\u8fdb\u4f4d, \u90a3\u4e48sum%=N \u6216sum-=N\n\t\t\tsum %= N;\n\t\tint he = dfsget(r, wei);\n\t\tif (sum != he)\n\t\t\treturn false;\n\t}\n\t//\u4f18\u5316#3 , \u5982\u679c\u5b58\u5728\u9ad8\u4f4d\u903b\u8f91, \n\tif (int hlc = has_high_logics[oldwei])\n\t{\n\t\tfor (int i = 0; i < hlc; i++)\n\t\t{\n\t\t\tint high_wei = has_high_logic_vecs[oldwei][i];\n\t\t\tint hsum = dfsget(v1, high_wei) + dfsget(v2, high_wei);\n\t\t\tint hres = dfsget(r, high_wei);\n\t\t\tif (hsum%N != hres && (hsum + 1) % N != hres)\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n//bool dfs_done = false;\n\nvoid dfs_complete(int offset, int wei)\n{\n\tif (!verify(weishu, wei))\n\t\treturn;\n\tif (dfsjinwei[weishu + 1])\n\t\treturn;\n\n\t//\u8f93\u51fa\u552f\u4e00\u89e3\n\tint outputindex = 0;\n\tfor (char ch = 'A'; ch <= 'Z'; ch++)\n\t{\n\t\tif (varexists[ch])\n\t\t{\n\t\t\tif (outputindex++ != 0)cout << \" \";\n\t\t\tcout << dfsvarvals[ch];\n\t\t}\n\t}\n\tcout << endl;\n\n\t//\u4f18\u53169 , \u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u65b9\u6848\u5c31\u9000\u51fa. (\u5047\u5b9a\u65b9\u6848\u552f\u4e00)\n\t//dfs_done = true;\n\texit(0);\t//\u7eaf\u7cb9\u4e3a\u4e86\u8dd1\u5206\n}\n\n\n\nvoid dfs(int offset, int wei)\n{\n\t//if (dfs_done)return;\n\n\tif (offset == varcount)\n\t{\n\t\tdfs_complete(offset, wei);\n\t\treturn;\n\t}\n\n\tloopcount++;\n\n\tint newwei = varpos[offset];\n\tif (newwei > wei && offset > 0)\n\t{\n\t\t//\u5982\u679c\u5230\u4e00\u4e2a\u65b0\u7684\u4f4d\u6570\u4e0a, \u90a3\u4e48\u9a8c\u8bc1\u4e00\u4e0b\u524d\u9762\u7684\u662f\u5426\u6b63\u786e\n\t\tif (!verify(newwei, wei))\n\t\t\treturn;\n\t}\n\n\tchar varname = vars[offset];\n\n\tif (int calctype = var_can_calc_arr[varname])//\u4f18\u5316#5\n\t{\n\t\t//\u4f18\u5316:#1 \u8ba1\u7b97\u51fa\u53d8\u91cf\n\t\tint val;\n\t\tif (calctype == 3)\n\t\t{\n\t\t\tval = dfssum(newwei) % N;\n\t\t}\n\t\telse//1,2\n\t\t{\n\t\t\tint rv = dfsget(r, newwei);\n\t\t\tif (dfsjinwei[newwei])//\u5982\u679c\u524d\u9762\u5df2\u8fdb\u4f4d\n\t\t\t\trv = rv == 0 ? (N - 1) : (rv - 1);\n\t\t\tint js = dfsget(calctype == 1 ? v2 : v1, newwei);//\u53e6\u5916\u4e00\u4e2a\u52a0\u6570\n\t\t\tval = rv - js;\n\t\t\tif (val < 0)val += N;\n\t\t}\n\n\t\tint indexbit = 1 << (varcount - 1 - val);\n\t\tif (!(dfsnumbits& indexbit))\n\t\t{\n\t\t\tdfsvarvals[varname] = val;\n\n\t\t\tdfsnumbits |= indexbit;\n\t\t\tdfs(offset + 1, newwei);\n\t\t\tdfsnumbits &= ~indexbit;\n\t\t}\n\t}\n\telse\n\t{\n\n\t\tint indexes = allxflag & ~dfsnumbits;\n\t\twhile (indexes)\n\t\t{\n\t\t\tint indexbit = indexes & (~indexes + 1);\n\t\t\tindexes -= indexbit;\n\n\t\t\t//\u4f18\u5316:#8, \u6839\u636e\u9898\u76ee\u7684\u7279\u70b9, \u6545\u610f\u53cd\u5411\u641c\u7d22 , //\u7eaf\u7cb9\u4e3a\u4e86\u8dd1\u5206\n\t\t\tint val = varcount - 1 - getbitindex(indexbit);\n\n\t\t\tdfsvarvals[varname] = val;\n\n\t\t\tdfsnumbits |= indexbit;\n\t\t\tdfs(offset + 1, newwei);\n\t\t\tdfsnumbits &= ~indexbit;\n\n\t\t\t//if (dfs_done)return;\n\t\t}\n\n\t}\n}\n\nvoid readnumstring(char* buff)\n{\n\tstring str;\n\tcin >> str;\n\tstr.copy(buff, 27, 0);\n}\n\nvoid program()\n{\n\tcin >> N;\n\treadnumstring(v1);\n\treadnumstring(v2);\n\treadnumstring(r);\n\n\tweishu = strlen(r);\n\n\tstd::reverse(v1, v1 + weishu);\n\tstd::reverse(v2, v2 + weishu);\n\tstd::reverse(r, r + weishu);\n\n\t//\u5148\u4ece\u4e2a\u4f4d\u5f00\u59cb, \u6574\u7406\u51fa\u9700\u8981\u9010\u4e2a\u731c\u6d4b\u7684\u987a\u5e8f\n\tfor (int wei = 0; wei < weishu; wei++)\n\t{\n\t\tfor (char* s : { v1,v2,r })\n\t\t{\n\t\t\tchar ch = s[wei];\n\t\t\tif (varexists[ch])continue;\n\t\t\tvarexists[ch] = true;\n\t\t\tvarindexmap[ch] = varcount;\n\t\t\tvars[varcount] = ch;\n\t\t\tvarpos[varcount] = wei;\n\t\t\tvarcount++;\n\t\t\t//\u4f18\u5316:#1\n\t\t\tif (s == r)var_can_calc_arr[ch] = 3;//\u53d8\u91cf\u662f\u548c\n\t\t}\n\t}\n\n\t//\u4f18\u5316#3, \u5bfb\u627e\u9ad8\u4f4d\u6570\u7684\u5173\u7cfb, \u53ca\u65e9\u5224\u65ad\u4f4e\u4f4d\u6570\u9009\u62e9\u7684\u77db\u76fe\n\tfor (int wei = 1; wei < weishu; wei++)\n\t{\n\t\tint p1 = varpos[varindexmap[v1[wei]]];\n\t\tint p2 = varpos[varindexmap[v2[wei]]];\n\t\tint p3 = varpos[varindexmap[r[wei]]];\n\n\t\t//\u4f18\u5316:#5, \u5224\u65ad\u51fa\u54ea\u4e9b\u52a0\u6570\u662f\u53ef\u4ee5\u8fd0\u7b97\u5f97\u77e5\n\t\tif (p3 < wei)//\u5982\u679c\u7ed3\u679c\u5df2\u77e5\n\t\t{\n\t\t\tif (p1 == wei && p2 < wei)\n\t\t\t{\n\t\t\t\tvar_can_calc_arr[v1[wei]] = 1;\n\t\t\t}\n\t\t\tif (p2 == wei && p1 < wei)\n\t\t\t{\n\t\t\t\tvar_can_calc_arr[v2[wei]] = 2;\n\t\t\t}\n\t\t}\n\n\t\tif (p1 >= wei || p2 >= wei || p3 >= wei)\n\t\t\tcontinue;\n\n\t\t//OK \u8fd9\u4e2a\u52a0\u6cd5\u7684\u53d8\u91cf\u5728\u4f4e\u4f4d\u6570\u7684\u65f6\u5019\u5df2\u51fa\u73b0\n\t\tint maxp = std::max(p3, std::max(p1, p2));\n\t\thas_high_logic_vecs[maxp][has_high_logics[maxp]] = wei;\n\t\thas_high_logics[maxp] ++;\n\t}\n\n\n\t//\u521d\u59cb\u5316xmap\n\tinitxmap(varcount);\n\n\tdfs(0, 0);\n\n}\n\nint main()\n{\n\tprogram();\n\n\treturn 0;\n}\n\n```\n",
        "postTime": 1567409479,
        "uid": 234252,
        "name": "ZHDX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u7684\u6df1\u641c\uff0c\u6765\u8bb2\u8bb2\u6211\u7684\u89e3\u9898\u8fc7\u7a0b\n\n\u9996\u5148\u786e\u5b9a\u641c\u7d22\u65b9\u6cd5\uff0c\u6309\u7167\u7b97\u5f0f\u4ece\u53f3\u5230\u5de6\u4f9d\u6b21\u8ba1\u7b97\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5b57\u6bcd\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u5c31\u4e0d\u5fc5\u518d\u7b97\uff0c\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u522b\u7684\u526a\u679d\u3002\n\n\u7136\u540e\u5f97\u4e8630\u5206\u3002\u3002\u3002\uff08\u4e00\u8138\u61f5\u903c\uff09\n\n\u4e4b\u540e\u60f3\u5230\u4e86\u4e00\u4e2a\u526a\u679d\uff0c\u5982\u679c\u6211\u4eec\u5728\u7b97\u4e00\u5217\u5b57\u6bcd\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e4b\u540e\u7684\u4e00\u4e9b\u5217\u7684\u4e09\u4e2a\u6570\u5df2\u7ecf\u6c42\u51fa\uff0c\u800c\u4e14\u4e0d\u7ba1\u8fdb\u4f4d\u4e0d\u8fdb\u4f4d\u90fd\u4e0d\u53ef\u80fd\u5408\u6cd5\uff0c\u5219\u526a\u679d\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u4e2a\u526a\u679d\u6548\u7387\u8fd8\u4e0d\u9519\uff0c\u5f97\u4e8660\u5206\u3002\n\n\u7136\u540e\u6211\u53d1\u73b0\u6211\u5fd8\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u526a\u679d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6570\u5b57\u5df2\u7ecf\u7b97\u8fc7\u4e86\uff0c\u5219\u4e0d\u5fc5\u518d\u7b97\uff0c\u8fd9\u6837\u5c31\u5f97\u4e8680\u5206\u3002\n\n\u7136\u540e\u641c\u7d22\u987a\u5e8f\u4ece1-9\u6539\u62109-1\u5c31AC\u4e86\n\n\u9644\u4e0a\u77ed\u5c0f\u7cbe\u608d\u7684\u4ee3\u7801\uff08\u4ec558\u884c\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint s[3][30],n,t[300];\nchar s1[30],s2[30],s3[30];\nbool u;\nbool pd(){\n    int y=0;\n    for (int i=n-1;i>=0;i--)\n    if ((s[0][i]+s[1][i]+y)%n!=s[2][i])return false;else y=(s[0][i]+s[1][i]+y)/n;\n    return true;\n}\nvoid tc(char y,int u){//\u5c06\u5df2\u7ecf\u7b97\u51fa\u6765\u7684\u5b57\u6bcd\u586b\u5145\u8fdb\u7b97\u5f0f\n    for (int i=0;i<n;i++)\n    {\n        if (s1[i]==y)s[0][i]=u;\n        if (s2[i]==y)s[1][i]=u;\n        if (s3[i]==y)s[2][i]=u;\n    }\n}\nvoid dfs(int x,int p){\n    if (x<0){if (pd())u=1;return;}\n    bool yyy[30]={0};\n    for (int i='A';i<'A'+n;i++)\n    if (t[i]==-1)continue;else if (yyy[t[i]])return;else yyy[t[i]]=1;\n    for (int i=x;i>=0;i--)\n    if (s[0][i]!=-1 && s[1][i]!=-1 && s[2][i]!=-1 && (s[0][i]+s[1][i])%n!=s[2][i] && (s[0][i]+s[1][i]+1)%n!=s[2][i])\n    return;\n    int a,b,c,hh;bool aa=0,bb=0,cc=0;\n    if (s[0][x]>=0)aa=1;\n    if (s[1][x]>=0)bb=1;\n    if (s[2][x]>=0)cc=1;\n    for (int i=n-1;i>=0&&!u;i--)\n    for (int j=n-1;j>=0&&!u;j--)\n    {\n        a=i;b=j;c=i+j+p;hh=c%n;\n        if (s[0][x]>=0 && s[0][x]!=a)break;\n        if (s[1][x]>=0 && s[1][x]!=b)continue;\n        if (s[2][x]>=0 && s[2][x]!=hh)continue;\n        s[0][x]=a;s[1][x]=b;s[2][x]=hh;\n        t[s1[x]]=a;t[s2[x]]=b;t[s3[x]]=hh;\n        if (!aa)tc(s1[x],a);\n        if (!bb)tc(s2[x],b);\n        if (!cc)tc(s3[x],hh);\n        dfs(x-1,c/n);if (u)return;\n        if (!aa){t[s1[x]]=-1;s[0][x]=-1;tc(s1[x],-1);}\n        if (!bb){t[s2[x]]=-1;s[1][x]=-1;tc(s2[x],-1);}\n        if (!cc){t[s3[x]]=-1;s[2][x]=-1;tc(s3[x],-1);}\n    }\n}\nint main()\n{\n    memset(s,-1,sizeof(s));memset(t,-1,sizeof(t));//\u521d\u59cb\u5316\n    scanf(\"%d%s%s%s\",&n,s1,s2,s3);//\u8bfb\u5165\n    dfs(n-1,0);//\u6df1\u641c\n    for (int i='A';i<='A'+n-1;i++)\n    if (i=='A')printf(\"%d\",t[i]);else printf(\" %d\",t[i]);//\u8f93\u51fa\uff0c\u4e3a\u4e86\u907f\u514d\u591a\u4f59\u7a7a\u683c\n    return 0;\n}\n```",
        "postTime": 1476591189,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "pan1:\u8f93\u51fa\u53ef\u884c\u6027\u5224\u65ad\n\npan2:\u53ef\u884c\u6027\u526a\u679d;\n\n//////\u8bf4\u660e:\u5f53\u67d0\u4e00\u4f4d\u7f6e\u4e0a\u7684\u4e09\u4e2a\u5b57\u6bcd\u90fd\u88ab\u4ed8\u8fc7\u503c\u4ee5\u540e\uff0c\u53ef\u5bf9\u6b64\u4f4d\u8fdb\u884c\u5224\u65ad--\u300b\u300b\n\n\u53d1\u73b0\u67d0\u4e00\u4f4d\u7684\u524d\u4e24\u5b57\u6bcd\u4e4b\u548c\u53ea\u80fd\u7b49\u4e8e\u7b2c\u4e09\u4e2a\u5b57\u6bcd\uff08\u65e0\u8fdb\u4f4d\uff09\u6216\u7b49\u4e8e\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u52a0\u4e00\uff08\u6709\u8fdb\u4f4d\uff09\uff0c\u6545\u8fdb\u884c\u5224\u65ad\uff1b\n\ndfs:\u5bf9\u524dj\u4e2a\u51fa\u73b0\uff08\u81ea\u4f4e\u4f4d\u5230\u9ad8\u4f4d\uff09\u7684\u5b57\u6bcd\u8d4b\u503c\uff1b\n\n\u9644\u4ee3\u7801\n\n```delphi\n\nprogram insert;\nvar\n  num:array['A'..'Z'] of longint;\n  b:array[1..26,1..3] of char;\n  use,h:array['A'..'Z'] of boolean;\n  n,i,j,l:longint;\n  ch:char;\n  vt:array[0..26] of boolean;\n  c:array[1..26] of char;\n\n  procedure init;\n    var\n      i,j:longint;\n    begin\n      readln(n);\n      fillchar(vt,sizeof(vt),true);\n      for i:=1 to n do num[chr(i+64)]:=-1;\n      fillchar(h,sizeof(h),true);\n      for i:=1 to 3 do\n       begin\n         for j:=1 to n do\n           read(b[j,i]);\n         readln;\n       end;\n      for i:=n downto 1 do\n        for j:=1 to 3 do\n          if h[b[i,j]] then\n            begin\n              h[b[i,j]]:=false;\n              inc(l);\n              c[l]:=b[i,j];\n            end;\n    end;\n  function pan:boolean;  {print}\n    var\n      i,j,k:longint;\n    begin\n      k:=0;\n      for i:=n downto 1 do\n        begin\n          k:=k+num[b[i,1]]+num[b[i,2]];\n          if k mod n <>num[b[i,3]] then exit(false);\n          k:=k div n;\n        end;\n      exit(true);\n    end;\n  function pan2:boolean;\n    var\n      i:longint;\n    begin\n      for i:=n downto 1 do\n        if (num[b[i,1]]<>-1)and(num[b[i,2]]<>-1)and(num[b[i,3]]<>-1)\n          and((num[b[i,1]]+num[b[i,2]]) mod n<>num[b[i,3]])and((num[b[i,1]]+num[b[i,2]]+1) mod n<>num[b[i,3]]) then\n            exit(true);\n      exit(false);\n    end;\n  procedure printf;\n    var\n      i:longint;\n    begin\n      for i:=1 to n do write(num[chr(i+64)],' ');\n      halt;\n    end;\n  procedure dfs(j:longint);\n    var\n      cc:char;\n      i:longint;\n    begin\n      if pan2 then exit;\n      if num[b[1,1]]+num[b[1,2]]>=n then exit;\n      if j>n then begin if pan then printf; exit; end;\n      for i:=n-1 downto 0 do\n        if vt[i] then\n          begin\n            num[c[j]]:=i;\n            vt[i]:=false;\n            dfs(j+1);\n            num[c[j]]:=-1;\n            vt[i]:=true;\n          end;\n    end;\nbegin\n  init;\n  dfs(1);\nend.\n\n```",
        "postTime": 1446598940,
        "uid": 11491,
        "name": "wangyangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2aN\u8fdb\u5236\u52a0\u6cd5\uff0c\u52a0\u6cd5\u91cc\u7684\u4e09\u4e2a\u6570\u5b57\u90fd\u6709N\u4f4d\uff0c\u7528\u5927\u5199\u5b57\u6bcd\u524dN\u4e2a\u5b57\u6bcd\u6765\u6620\u5c040~N-1\uff0c\u5141\u8bb8\u6709\u524d\u5bfc\u96f6\uff0cN\u4e2a\u5b57\u6bcd\u5747\u51fa\u73b0\uff0c\u6c42\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u7684\u6570\u5b57\n\n# \u5206\u6790\n\n\uff08\u9ad8\u65af\u6d88\u5143\u65b9\u6cd5\u5f85\u8865\u5145\uff09\n\n\u5982\u679c\u76f4\u63a5\u679a\u4e3e\u6bcf\u79cd\u5b57\u6bcd\u8868\u793a\u7684\u6570\u5b57\uff0c\u603b\u5171\u6709$26!$\u79cd\u60c5\u51b5\uff0c\u590d\u6742\u5ea6\u5b8c\u5168\u7206\u70b8\u3002\n\n\u4f46\u662f\u5728\u8fd9\u91cc\uff0c\u5982\u679c\u6211\u4eec\u786e\u5b9a\u4e86\u67d0\u4e00\u4f4d\u4e24\u4e2a\u6570\u5b57\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u7b2c\u4e09\u4f4d\u4e5f\u53ef\u4ee5\u786e\u5b9a\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6a21\u62df\u8fd9\u4e2a\u52a0\u6cd5\u7684\u8fd0\u7b97\uff0c\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u5f00\u59cb\u641c\u7d22\n\n\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u5b57\u6bcd\u4e4b\u524d\u6ca1\u6709\u8d4b\u503c\uff0c\u6211\u4eec\u5c31\u679a\u4e3e\u53ef\u80fd\u53ef\u53d6\u7684\u503c\n\uff0c\u5426\u5219\u6211\u4eec\u5c31\u7528\u4e4b\u524d\u7684\u503c\n\n\u4e00\u65e6\u53d1\u73b0\u77db\u76fe\u7684\u5730\u65b9\uff1a$(A_i + B_i + jw)\\%n != C_i$\uff0c\u6216\u8005\u6700\u9ad8\u4f4d\u5982\u679c\u6709\u8fdb\u4f4d\uff0c\u5c31\u56de\u6eaf\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u80fd\u62ff\u523090\u5206\n\n\u7ee7\u7eed\u60f3\u4f18\u5316\n\n\u521a\u521a\u8bf4\u8fc7\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u67d0\u4e00\u4f4d\u7684\u4e24\u4e2a\u503c\uff0c\u90a3\u7b2c\u4e09\u4e2a\u503c\u4e5f\u51e0\u4e4e\uff08\u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e00\u4e0b\u8fdb\u4f4d\uff09\u53ef\u4ee5\u786e\u5b9a\u4e86\n\n\u6240\u4ee5\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u4e09\u4e2a\u503c\u90fd\u786e\u5b9a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5judge\u5b83\u7684\u72b6\u6001\u662f\u5426\u5408\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u76f4\u63a5\u56de\u6eaf\n\n\u4e8e\u662f\u8fd9\u91cc\u5c31\u591a\u4e86\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5728\u6bcf\u4e00\u5c42\u5bf9\u524d\u9762\u7684\u6240\u6709\u4f4d\u8fdb\u884c\u4e00\u4e2a\u5224\u65ad\uff0c\u867d\u7136\u5224\u65ad\u53d8\u591a\uff0c\u4f46\u662f\u9650\u5236\u589e\u5f3a\u4e86\uff0c\u526a\u679d\u529b\u5ea6\u52a0\u5927\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\n\n# \u4ee3\u7801\n\n\u5199\u5f97\u5f88\u4e0d\u4f18\u7f8e\u3002\u3002\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nchar A[30],B[30],C[30];\n\nint num[30];\nbool used[30];\nvoid dfs(int cs,int jw){\n    if(cs > n) {\n        if(jw == 1) return;\n        for(int i=0;i<n;i++) cout<<num[i]<<\" \";\n        cout<<\"\\n\";\n        exit(0);\n    }\n    for(int i=cs+1;i<n;i++) {\n        int& a = num[A[i]-'A'];\n        int& b = num[B[i]-'A'];\n        int& c = num[C[i]-'A'];\n        if(a!=-1&&b!=-1&&c!=-1) {\n            int sum = a+b;\n            int poss1 = sum%n;\n            int poss2 = (sum+1)%n;\n            if(c!=poss1 && c!=poss2) return;\n\n        }\n    }\n    if(num[A[n]-'A']+num[B[n]-'A']>=n) return;\n    int& a = num[A[cs]-'A'];\n    int& b = num[B[cs]-'A'];\n    int& c = num[C[cs]-'A'];\n    if(a==-1)\n    {\n        for(a=0;a<n;a++)\n        {\n            if(used[a]) continue;\n            used[a]=1;\n\n            if(b==-1)\n            {\n                for(b=0;b<n;b++)\n                {\n\n                    if(used[b]) continue;\n                    used[b] = 1;\n                    int sum = a+b+jw;\n                    if(c == -1)\n                    {\n                        if(used[sum%n] == 0) c = sum%n,used[c]=1;\n                        else goto p1;\n                        dfs(cs+1,sum/n);\n                        used[c]=0;\n                        c=-1;\n                    }\n                    else\n                    {\n                        if(sum%n != c) goto p1;\n                        dfs(cs+1,sum/n);\n                    }\n                    p1:\n                    used[b] = 0;\n                }\n                b=-1;\n\n            }\n            else\n            {\n                int sum = a+b+jw;\n                    if(c == -1)\n                    {\n                        if(used[sum%n] == 0) c = sum%n,used[c]=1;\n                        else goto p2;\n                        dfs(cs+1,sum/n);\n                        used[c]=0;\n                        c=-1;\n                    }\n                    else\n                    {\n                        if(sum%n != c) goto p2;\n                        dfs(cs+1,sum/n);\n                    }\n            }\n            p2:\n            used[a] = 0;\n\n        }\n        a=-1;\n    }\n    else\n    {\n        if(b==-1)\n        {\n\n            for(b=0;b<n;b++)\n            {\n                if(used[b]) continue;\n                used[b] = 1;\n                int sum = a+b+jw;\n                if(c == -1)\n                {\n                    if(used[sum%n] == 0) c = sum%n,used[c]=1;\n                    else goto p3;\n                    dfs(cs+1,sum/n);\n                    used[c]=0;\n                    c=-1;\n                }\n                else\n                {\n                    if(sum%n != c) goto p3;\n                    dfs(cs+1,sum/n);\n                }\n                p3:\n                used[b] = 0;\n            }\n            b=-1;\n\n        }\n        else\n        {\n            int sum = a+b+jw;\n            if(c == -1)\n            {\n                if(used[sum%n] == 0) c = sum%n,used[c]=1;\n                else goto over;\n                dfs(cs+1,sum/n);\n                used[c]=0;\n                c=-1;\n            }\n            else\n            {\n                if(sum%n != c) goto over;\n                dfs(cs+1,sum/n);\n            }\n        }\n    }\n    over:\n    return;\n}\nint main() {\n\n    ios::sync_with_stdio(false);\n    memset(num,-1,sizeof(num));\n    cin>>n;\n    for(int i=n;i>=1;i--) cin>>A[i];\n    for(int i=n;i>=1;i--) cin>>B[i];\n    for(int i=n;i>=1;i--) cin>>C[i];\n    dfs(1,0);\n\n}\n\n```\n![](https://cdn.luogu.com.cn/upload/pic/63322.png)\n\n",
        "postTime": 1562901245,
        "uid": 24071,
        "name": "greenty",
        "ccfLevel": 0,
        "title": "\u3010luogu P1092\u3011 \u866b\u98df\u7b97\uff08\u641c\u7d22\uff0c\u526a\u679d\uff09"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u5427\uff0cemmm\uff1b\u5176\u5b9e\u6211\u7b2c\u4e00\u773c\u662f\uff1a\u9ad8\u65af\u6d88\u5143\uff0c\u4f46\u662f\u6211\u662f\u6765\u7ec3\u641c\u7d22\u7684QwQ\n#### \u5148\u8bb2\u96be\u70b9\uff1a\n\n#### 1. \u5982\u4f55\u641c\uff1f\n\n#### 2. \u4ece\u54ea\u641c\uff1f\n\n#### 3. \u526a\u679d\u5462\uff1f\n\n```cpp\n1. \u5fc5\u7136\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u4e8e\u4e00\u4e2a\u6570\n\n\u90a3\u4e48\u5173\u952e\uff1a\u5982\u4f55\u627e\n\n\u7136\u800c\u849f\u84bb\u89c9\u5f97\u76f4\u63a5\u627e\u663e\u7136\u4e0d\u884c\uff08\u6bd5\u7adf\u673a\u5668\u662f\u6b7b\u7684\uff09\n\n\u90a3\u4e48\u6211\u5c31\u7ed9\u5b83\u7ed9\u5b9a\uff0c\u518d\u770b\u662f\u5426\u6210\u7acb\u5373\u53ef\uff08\u4e3b\u65e8\uff09\n\n\u4e8e\u662f\u5168\u6392\u5217\uff0c\u8574\u80b2\u800c\u751f\uff1a\n\n\u5b9e\u73b0\u65b9\u5f0f:\n\nFirst\uff1anext_permutation\n\n\u8fd0\u7528STL\u5e93\u4e2d\u7684\u5168\u6392\u5217\u51fd\u6570\uff08\u7701\u4ee3\u7801\uff09\n\n\u4f46\u662f\u5f0a\u7aef\uff1a\u592a\u591a\uff0c\u4e14\u4e2d\u95f4\u53ea\u80fd\u9760\u5b83\u7684\u81ea\u7ec4\uff0c\u4fbf\uff08bian\uff09\u5b9c\u5ea6\u4e0d\u9ad8\n\n\nSecond:dfs\u624b\u6253\uff08\u867d\u7136\u4ee3\u7801\u4e2d\u7684\u6211\u4e0d\u662f\u6211\u81ea\u5df1\u7684\u7801\u98ce\uff0c\u6bd5\u7adf\u4ee5\u524d\u592a\u4e11QAQ\uff09\n\n\u5168\u6392\u5217\u4e2d\u597d\u5904\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u4e00\u8fb9\u80af\u5b9a\u5fc5\u7136\u6570\uff0c\u4ee5\u53ca\u65e0\u6548\u72b6\u6001\n\n2.\u987a\u5e8f\uff1a\u540e->\u524d\n\n\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u5c31\u76f4\u63a5\u4ece\u540e\u7684\uff0c\u4e8e\u662f\u67d0\u4e9b\u4e8b\u60c5\u5c31\u6ca1\u53d1\u751f\u5728\u6211\u8eab\u4e0a\n\nwhy:\u5f88\u7b80\u5355\u51fa\u9898\u4eba\u5c31\u662f\u60f3\u8fd9\u4e48\u5361\u4f60QwQ\uff08\u5927\u96fe\n\n\u5df2\u77e5\u6b64\u9898\u6b63\u89e3\u4e3a\uff1a\u9ad8\u65af\u6d88\u5143\n\n\u5fc5\u7136\u51fa\u9898\u4eba\u662f\u4ee5\uff1a\u52a0\u6cd5\u8fd0\u7b97\u6cd5\u5219 \u800c\u6765\uff08\u8fdb\u9000\u4f4d\u65b9\u4fbf\uff09\n\n\u4f60\u600e\u4e48\u52a0\u7684\uff0c\u4f60\u5c31\u600e\u4e48\u641c\u5457QwQ\n\n\u51ed\u4ec0\u4e48\uff1f\u4f60\u8fd9\u662f\u77e5\u9053\u6b63\u89e3\u624d\u8fd9\u4e48\u505a\u7684\n\nbut:\u9898\u4e2d\u672c\u5c31\u662f\u52a0\u6cd5\uff0c\u53ef\u80fd\u6570\u636e\u662f\u65e0\u5fc3\u9020\u7684\u5427\uff0c\u53ea\u60f3\u5927\u70b9\uff0c\u5751\u70b9\uff1f\uff08\u4e2a\u4eba\u7406\u89e3\uff09\n\n\u4f46\u662f\u4e3a\u4ec0\u4e48\u4ece\u524d\u4e5f\u884c\uff1f\n\u4e2a\u522b\u6d89\u53ca\u8f83\u5c11\u7684\u8fdb\u9000\u4f4d\uff0c\u6216\u65e0\u5427...\n\n3.\u526a\u679d\uff1a\n\nFirst:\u663e\u7136\uff0c\u76f8\u52a0\u53d6\u4f59\uff0c\u5224\u76f8\u7b49(\u8fd8\u8981\u8003\u8651\u662f\u6709\u8fdb\u4e00)\n\nSecond:vis[]\uff0ct[],\u6807\u8bb0\u6570\u7ec4,\u57fa\u64cd\n\nThird:\u5176\u5b9e\u8fd8\u53ef\u4ee5\u5224\u54ea\u4e2a\u662f0\uff1a\n\n BADC\n+CBDA\n DCCC\n\n\u663e\u7136A\u4e3a0:C+A=C  => A=0;(\u672a\u8fdb\u4e00)\n        :(C+A)%n=C\n        \u4f46\u662fA\uff01=C\uff0c\u5373\u4f7f\u8fdb\u4e00\uff0cA+C\uff01=n+C\n        \u6240\u4ee5\uff1aA=0\n        \n4.\u5173\u4e8e\u5176\u4ed6\u526a\u679d\uff0c\u81ea\u5df1\u53ef\u4ee5\u597d\u597d\u60f3\u60f3\u5427\uff0c\u7c7b\u6bd4\uff1a\u9ad8\u7cbe\u52a0\uff0c\u8fc7\u7a0b\u8f6c\u6362\n\n```\n### Code\uff08\u501f\u9274\u4e86\u5176\u4ed6\u5927\u4f6c\u7684\uff0cOrz\uff0cI'm too weak.\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[30],b[30],c[30];\nint n,t[300],used[30],p[30],cnt;\nbool check(){\n    for(int i=n;i>=1;i--){\n        if(t[a[i]]==-1 || t[b[i]]==-1 || t[c[i]]==-1)continue;\n        if((t[a[i]]+t[b[i]])%n!=t[c[i]])\n            if((t[a[i]]+t[b[i]]+1)%n!=t[c[i]])return 0;\n    }\n    return 1;\n}\nvoid go_on(){\n    int flag=0;\n    for(int i=n;i>=1;i--){\n        int sum=t[a[i]]+t[b[i]]+flag;\n        if(t[c[i]]!=sum%n) return;\n        flag=sum/n;\n    }\n    cout<<t['A'];\n    for(int i='A'+1;i<='A'+n-1;i++) printf(\" %d\",t[i]);\n    exit(0);\n}\n\nvoid dfs(int now){//\u5168\u6392\u5217\n    if(now>n){\n        go_on();\n        return;\n    }\n    for(int i=n-1;i>=0;i--){\n        if(used[i]) continue;\n        t[p[now]+'A'-1]=i;\n        if(check()){\n            used[i]=1;\n            dfs(now+1);\n            used[i]=0;\n        }\n    }\n    t[p[now]+'A'-1]=-1;\n}\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    scanf(\"%s%s%s\",a+1,b+1,c+1);\n    memset(t,-1,sizeof(t));\n    for(int i=n;i>=1;i--){\n        if(!used[a[i]-'A'+1]) p[++cnt]=a[i]-'A'+1,used[a[i]-'A'+1]=1;\n        if(!used[b[i]-'A'+1]) p[++cnt]=b[i]-'A'+1,used[b[i]-'A'+1]=1;\n        if(!used[c[i]-'A'+1]) p[++cnt]=c[i]-'A'+1,used[c[i]-'A'+1]=1;\n    }\n    memset(used,0,sizeof(used));//\u6211\u5c31\u7701\u7701\u7a7a\u95f4\n    dfs(1);\n}\n```",
        "postTime": 1558778327,
        "uid": 109381,
        "name": "Mosher",
        "ccfLevel": 0,
        "title": "P1092 \u866b\u98df\u7b97"
    },
    {
        "content": "```cpp\n/*\n\u866b\u98df\u7b97 \n\u53ef\u4ee5\u91c7\u7528\u4e00\u4e9b\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u89e3\u65b9\u7a0b\u4e4b\u7c7b\u7684\uff0c\u4e0d\u8fc7\u901a\u5e38\u7684\n\u7b97\u6cd5\u662f\u641c\u7d22\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e5f\u91c7\u7528\u641c\u7d22\u7684\u65b9\u6cd5 \n\u641c\u7d22\u601d\u8def\uff1a\n1.\u7b97\u5f0f\u5b58\u50a8\u65b9\u5f0f\uff1aA[i][j]\u8868\u793a\u7b2cj\u4e2a(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u5b57\u7b26\u4e32\u4ece\u53f3\u5f80\n\u5de6\u6570\u7b2ci\u4e2a(\u4ece0\u5f00\u59cb\u8ba1\u6570)\u5b57\u6bcd \n  \u5982\u6837\u4f8b:ABCED    \u5bf9\u5e94\u5b58\u50a8\u4e8e\u8fd9\u4e9b\u5143\u7d20\u4e2d A[4,3,2,1,0][0]\n         BDACE                         A[4,3,2,1,0][1]\n         EBBAA                         A[4,3,2,1,0][2]\n  \u5982\u6b64\u5b58\u50a8\uff0c\u662f\u56e0\u4e3a\u641c\u7d22\u662f\u4e00\u4f4d\u4e00\u4f4d\u8fdb\u884c\u679a\u4e3e\u7684\uff0c\u5373\u6bcf\u6b21\u786e\u5b9a\n  \u540c\u4e00\u5217\u7684\u5b57\u6bcd\uff0c\u5982\u7b2c\u4e00\u6b21\u786e\u5b9aA[0][0],A[0][1],A[0][2]\u4e09\u4e2a\n  \u5b57\u6bcd\n2.A[i][2]=(A[i][0]+A[i][1 ]+u)%n\n  \u5bf9\u6bcf\u4e00\u4f4d\u679a\u4e3e\u524d\u4e24\u4e2a\u5b57\u6bcd\u53ef\u80fd\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u5982\u679c\u5728\u4e4b\u524d\u7684\u641c\u7d22\n  \u4e2d\u5b57\u6bcd\u5df2\u7ecf\u88ab\u786e\u5b9a\uff0c\u90a3\u6b64\u6b21\u4e0d\u9700\u518d\u679a\u4e3e\u3002\u82e5\u672a\u88ab\u786e\u5b9a\uff0c\u5219\u9700\u8981\n  \u9009\u62e9\u4e00\u4e2a\u6570\u5b57\u3002 \n  \u5f53\u524d\u4e24\u4e2a\u5b57\u6bcd\u786e\u5b9a\u4e0b\u6765\u65f6\uff0c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u5373\u5f97\u5230\u786e\u5b9a\uff0c\u53ea\u9700\u5224\u65ad\n  \u8fd9\u4e2a\u7ed3\u679c\u662f\u5426\u5408\u6cd5(\u662f\u5426\u540c\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e24\u4e2a\u6570\u5b57\uff0c\u6216\u8005\u540c\u4e00\n  \u4e2a\u6570\u5b57\u88ab\u591a\u4e2a\u5b57\u6bcd\u4f7f\u7528) \n  \u5176\u4e2du\u8868\u793a\u7b2ci-1\u4f4d\u7684\u8fdb\u4f4d\uff0c\u5982\u679c\u4ece\u4f4e\u4f4d\u5411\u9ad8\u4f4d\u641c\u7d22(\u5373\u4ece\u53f3\u5411\n  \u5de6)\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u7684\u8fdb\u4f4d\u90fd\u662f\u786e\u5b9a\u7684\n3.\u526a\u679d:\n  1)\u6bcf\u4e2a\u6570\u5b57\u53ea\u80fd\u88ab\u4e00\u4e2a\u5b57\u6bcd\u4f7f\u7528\uff0c\u90a3\u4e48\u7ed9\u6bcf\u4e2a\u6570\u5b57\u505a\u4e0a\u6807\u8bb0\uff0c\n  \u907f\u514d\u88ab\u91cd\u590d\u4f7f\u7528\u3002\n  2)\u5982\u679c\u6700\u9ad8\u4f4d\u51fa\u73b0\u8fdb\u4f4d\uff0c\u5219\u7b49\u5f0f\u4e0d\u6210\u7acb\n  3)\u5982\u679c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\u5df2\u7ecf\u786e\u5b9a\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u524d\u4e24\u4e2a\n  \u5b57\u6bcd\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n  4)\u5982\u679c\u524d\u4e24\u4e2a\u5b57\u6bcd\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u5e76\u4e14\u4e0d\u662f\u88ab\u7b2c\n  \u4e09\u4e2a\u5b57\u6bcd\u4f7f\u7528\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n  5)\u5982\u679c\u7b2c\u4e09\u4e2a\u5b57\u6bcd\u672a\u88ab\u786e\u5b9a\uff0c\u90a3\u4e48\u8fd9\u4e00\u4f4d\u786e\u5b9a\u4e0b\u6765\u540e\uff0c\u53ef\u80fd\n  \u4f1a\u5bf9\u540e\u9762\u7684\u7b97\u5f0f\u9020\u6210\u5f71\u54cd\uff0c\u751a\u81f3\u76f4\u63a5\u9020\u6210\u77db\u76fe\uff0c\u540e\u8005\u53ef\u4ee5\u76f4\n  \u63a5\u526a\u6389 \n    \u76f4\u63a5\u4f9d\u6b21\u679a\u4e3e\u4e4b\u540e\u7684\u6bcf\u4e00\u4f4d \n    a)\u5982\u679c\u4e00\u4e2a\u6570\u5b57\u4e0d\u786e\u5b9a\uff0c\u90a3\u53ef\u4ee5\u901a\u8fc7\u53e6\u5916\u4e24\u4e2a\u6570\u5b57\u8ba1\u7b97\u51fa\n    \u8fd9\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5b57\u88ab\u4f7f\u7528\uff0c\u90a3\u7b49\u5f0f\u4e0d\u6210\u7acb\n      (\u6ce8\u610f\u8fdb\u4f4d\uff0c\u5982\u679c\u8fdb\u4f4d\u5df2\u7ecf\u786e\u5b9a\u5219\u76f4\u63a5\u8ba1\u7b97\u5224\u65ad\u5373\u53ef\uff0c\n      \u5426\u5219\u662f\u5426\u8fdb\u4f4d\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u6210\u7acb\u7b49\u5f0f\u624d\u4e0d\u6210\u7acb)\n    b)\u5982\u679c\u4e09\u4e2a\u6570\u5b57\u90fd\u786e\u5b9a\u4e86\uff0c\u90a3\u9700\u8981\u8ba1\u7b97\u4e00\u4e0b\u8be5\u4f4d\u7b49\u5f0f\u662f\u5426\n    \u6210\u7acb \n*/\n#include<bits/stdc++.h> \nusing namespace std;\nint n;\nchar in[3][30];//\u5b58\u50a8\u8bfb\u5165\u7684\u5b57\u7b26\u4e32 \nint A[30][3];//\u5b58\u50a8\u7b97\u5f0f \n//\u6807\u8bb0\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u88ab\u4f7f\u7528,1\u8868\u793a\u88ab\u4f7f\u7528\uff0c0\u8868\u793a\u672a\u88ab\u4f7f\u7528 \nbool use[30];\n//\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u5b57\uff0c-1\u8868\u793a\u672a\u786e\u5b9a\nint num[30]; \nvoid Search(int,bool);\n#define RETURN {num[x]=-1;use[c]=0;return;}//\u5b8f\u5b9a\u4e49 \u8fd8\u539f+\u8fd4\u56de\u64cd\u4f5c \n\n//\u5904\u7406\u7b2cp\u4f4d\u7b2cq\u4e2a\u6570\u5b57\uff0c\u524d\u4e24\u4e2a\u6570\u5b57\u5b58\u50a8\u5728a\u4e2d\uff0c\u4e0a\u4e00\u4f4d\u7684\u8fdb\u4f4d\u4e3au \nvoid Search2(int p,int q,int a[2],bool u)\n{\n  int x=A[p][q];\n  if(q==2)\n  {\n    if(p==n-1 && a[0]+a[1]+u>=n) \n      return;//\u526a\u679d2 \n    int c=(a[0]+a[1]+u)%n,i,j;\n    if(num[x]!=-1 && num[x]!=c) \n      return;//\u526a\u679d3 \n    if(use[c] && num[x]!=c) \n      return;//\u526a\u679d4 \n    if(num[x]==-1) \n    {\n      num[x]=c;\n      use[c]=1;\n      int up=(a[0]+a[1]+u)/n;\n      for(i=p+1;i<n;i++)//\u526a\u679d5) \n      {\n        int k1=num[A[i][0]],k2=num[A[i][1]],k3=num[A[i][2]];\n        if(k1==-1 || k2==-1 || k3==-1)//a)\u5176\u4e2dup\u4e3a\u8fdb\u4f4d\uff0c\u82e5up==-1\u8868\u793a\u8fdb\u4f4d\u4e0d\u786e\u5b9a \n        {\n          if(k1!=-1 && k2!=-1 && ((up==-1 && use[(k1+k2)%n] && use[(k1+k2+1)%n])||(up!=-1 && use[(k1+k2+up)%n])))\n            RETURN\n          else if(k1!=-1 && k3!=-1 && ((up==-1 && use[(k3+2*n-k1)%n] && use[(k3+2*n-1-k1)%n])||(up!=-1 && use[(k3+2*n-up-k1)%n])))\n            RETURN\n          else if(k2!=-1 && k3!=-1 && ((up==-1 && use[(k3+2*n-k2)%n] && use[(k3+2*n-1-k2)%n])||(up!=-1 && use[(k3+2*n-up-k2)%n])))\n            RETURN\n          else up=-1;//\u6709\u4e24\u4e2a\u4ee5\u4e0a\u6570\u4e0d\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u4f4d\u4e5f\u4e0d\u786e\u5b9a \n        }\n        else if((up==-1 && (k1+k2)%n!=k3 && (k1+k2+1)%n!=k3)||(up!=-1 && (k1+k2+up)%n!=k3))//b)\n          RETURN\n        else if(i==n-1&&((up==-1&&(k1+k2)/n!=0&&(k1+k2+1)/n!=0)||(up!=-1&&(k1+k2+up)/n!=0)))//\u526a\u679d2) \n          RETURN\n        else up=((k1+k2)>k3);//\u4e09\u4e2a\u6570\u90fd\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u8981\u8ba1\u7b97\u8fdb\u4f4d \n      }\n      Search(p+1,(a[0]+a[1]+u)/n);//\u9012\u5f52\u5904\u7406\u4e0b\u4e00\u4f4d \n      num[x]=-1;\n      use[c]=0;\n    }\n    else\n      Search(p+1,(a[0]+a[1]+u)/n);\n    return;\n  }\n    \n  if(num[x]==-1)//\u5982\u679c\u5b57\u6bcd\u672a\u88ab\u786e\u5b9a \n  {\n    for(int i=n-1;i>=0;i--)//\u5012\u7740\u53d6\u6570\uff0c\u907f\u514d\u4e00\u4e9b\u7279\u6b8a\u6570\u636e \n    {\n      if(use[i]==0)//\u526a\u679d1 \n      {\n        num[x]=i;\n        use[i]=1;\n        a[q]=i;//\u786e\u5b9a\u4e0b\u6765\u7684\u6570\u5b57\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u4e0b\u53bb\uff0c\u66f4\u65b9\u4fbf \n        Search2(p,q+1,a,u);\n        num[x]=-1;\n        use[i]=0;\n      }\n    }\n  }\n  else//\u5982\u679c\u5b57\u6bcd\u5728\u4e4b\u524d\u7684\u641c\u7d22\u5df2\u7ecf\u88ab\u786e\u5b9a \n  {\n    a[q]=num[x];\n    Search2(p,q+1,a,u);\n  }\n}\n\nvoid Search(int p,bool u)//\u5904\u7406\u7b2cp\u4f4d\uff0c\u4e0a\u4e00\u4f4d\u8fdb\u4f4d\u4e3au \n{\n  if(p>=n)//\u5982\u679c\u51fa\u7ed3\u679c\u4e86 \n  {\n    int i;\n    for(i=0;i<n-1;i++)\n      cout<<num[i]<<' ';cout<<num[i];\n    cout<<endl;\n    exit(0);//\u8f93\u51fa\u540e\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\uff0c\u8282\u7ea6\u8fd4\u56de\u7684\u65f6\u95f4 \n  }\n  int a[2];\n  Search2(p,0,a,u);\n}\n\nint main()\n{  \n  for(int i=0;i<30;i++)//\u521d\u59cb\u65f6\u6240\u6709\u7684\u5b57\u6bcd\u3001\u6570\u5b57\u5747\u672a\u5b9a \n    num[i]=-1,use[i]=0;\n    \n  cin>>n>>in[0]>>in[1]>>in[2];\n  for(int i=0;i<n;i++)//\u5c06\u5b57\u7b26\u4e32\u6309\u9884\u5b9a\u89c4\u5219\u9884\u5904\u7406\u81f3A\u6570\u7ec4\u4e2d \n    for(int j=0;j<3;j++)\n      A[n-1-i][j]=in[j][i]-'A';\n        \n  Search(0,0);//\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u641c\u7d22\uff0c\u6b64\u65f6\u6ca1\u6709\u8fdb\u4f4d \n  //cout<<\"NO\"<<endl;//\u9898\u76ee\u4fdd\u8bc1\u6709\u4e14\u53ea\u6709\u4e00\u7ec4\u89e3 \n  return 0;\n}\n```\n# ~~QAQ~~",
        "postTime": 1552801278,
        "uid": 157767,
        "name": "CJXJR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4ee4\u4eba\u4e00\u770b\u5c31\u4e0d\u60f3\u5199\u554aQwQ\n\u6211\u4eec\u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u679a\u4e3e\uff0c\u8fdb\u884c\u641c\u7d22\u3002\n\u6b63\u89e3\u662f\u9ad8\u65af\u6d88\u5143\u7136\u800c\u53ea\u4f1a\u641c\u7d22\u7684\u6211\u4e0d\u4f1a\u5440\u545c\u545c\u545c\n\uff08~~\u7801\u98ce\u5947\u4e11\u65e0\u6bd4\u4e0d\u8981\u55b7\u6211\u3002\u3002~~\uff09\n\u4e0a\u4ee3\u7801\n```c\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nchar a[100],b[100],c[100];\nint n;\nbool usednum[100],usedchar[100];//\u8fd9\u4e2a\u6570\u5b57\uff0c\u5b57\u7b26\u662f\u5426\u5df2\u7528\u8fc7\nint jw[100],num[100];\nbool pd(int pos) {\n\twhile(pos--) {\n\t\tif(usedchar[a[pos]]&&usedchar[b[pos]]&&usedchar[c[pos]]) {\n\t\t\tint summ=num[a[pos]]+num[b[pos]];\n\t\t\tint x=num[c[pos]];\n\t\t\tif((summ+1)%n==x||summ==x||(summ-n)==x||(summ+1-n)==x) continue;\n\t\t\telse return true;\n\t\t}\n\t}\n\treturn false;\n}//\u8fd9\u91cc\u7684\u5224\u65ad\u662f\u5224\u65ad\u903b\u8f91\u662f\u5426\u51fa\u9519\uff0ctrue\u4ee3\u8868\u51fa\u9519\uff0c\u4e0d\u8981\u6c42\u5b8c\u5168\u526a\u6ca1\uff0c\u53ea\u662f\u7c97\u7565\u7684\u526a\u679d\nvoid dfs(int pos) {//\u4ece\u540e\u5f80\u524d\u6309\u4f4d\u679a\u4e3e\n\tif(pos == -1) {\n\t\tfor(int i=0; i<n; i++) printf(\"%d \",num[i]);\n\t\texit(0);\n\t}//\u5df2\u7ecf\u679a\u4e3e\u5b8c\u6240\u6709\uff0c\u5e76\u4e14\u6210\u7acb\n\tif(pd(pos)) return ;//\u526a\u679d\n\tif(usedchar[a[pos]]&&usedchar[b[pos]]&&usedchar[c[pos]]) {\n\t\tif((num[a[pos]]+num[b[pos]]+jw[pos])%n==num[c[pos]]) {\n\t\t\tjw[pos-1]+=(num[a[pos]]+num[b[pos]]+jw[pos])/n;\n\t\t\tdfs(pos-1);\n\t\t\tjw[pos-1]-=(num[a[pos]]+num[b[pos]]+jw[pos])/n;\n\t\t} else return ;//\u8fd9\u4e00\u4f4d\u4e0a\u7684\u6570\u90fd\u6709\u8d4b\u8fc7\u503c\n\t} else if(usedchar[a[pos]]&&usedchar[b[pos]]) {\n\t\tif(usednum[(jw[pos]+num[a[pos]]+num[b[pos]])%n]) return;\n\t\tnum[c[pos]]=(jw[pos]+num[a[pos]]+num[b[pos]])%n;\n\t\tusedchar[c[pos]]=true;\n\t\tusednum[num[c[pos]]]=true;\n\t\tjw[pos-1]+=(jw[pos]+num[a[pos]]+num[b[pos]])/n;\n\t\tdfs(pos-1);\n\t\tusednum[num[c[pos]]]=false;\n\t\tusedchar[c[pos]]=false;\n\t\tjw[pos-1]-=(jw[pos]+num[a[pos]]+num[b[pos]])/n;\n\t} else if(usedchar[a[pos]]&&usedchar[c[pos]]) {\n\t\tif(usednum[(num[c[pos]]+n-jw[pos]-num[a[pos]])%n]) return;\n\t\tnum[b[pos]]=(num[c[pos]]+n-jw[pos]-num[a[pos]])%n;\n\t\tusedchar[b[pos]]=true;\n\t\tusednum[num[b[pos]]]=true;\n\t\tjw[pos-1]+=(jw[pos]+num[a[pos]]+num[b[pos]])/n;\n\t\tdfs(pos-1);\n\t\tusednum[num[b[pos]]]=false;\n\t\tusedchar[b[pos]]=false;\n\t\tjw[pos-1]-=(jw[pos]+num[a[pos]]+num[b[pos]])/n;//\u8ba1\u7b97\u5927\u6cd5\u597d\u554a\n\t} else if(usedchar[b[pos]]&&usedchar[c[pos]]) {\n\t\tif(usednum[(num[c[pos]]+n-jw[pos]-num[b[pos]])%n]) return;\n\t\tnum[a[pos]]=((num[c[pos]]+n-jw[pos]-num[b[pos]]))%n;\n\t\tusedchar[a[pos]]=true;\n\t\tusednum[num[a[pos]]]=true;\n\t\tjw[pos-1]+=(jw[pos]+num[a[pos]]+num[b[pos]])/n;\n\t\tdfs(pos-1);\n\t\tusednum[num[a[pos]]]=false;\n\t\tusedchar[a[pos]]=false;\n\t\tjw[pos-1]-=(jw[pos]+num[a[pos]]+num[b[pos]])/n;//\u7f3a\u7684\u8bdd\u7f3a\u5565\u8865\u5565\n\t} else if(usedchar[a[pos]]) {\n\t\tfor(int i=n-1; i>=0; i--) {\n\t\t\tif(!usednum[i]) {\n\t\t\t\tnum[b[pos]]=i;\n\t\t\t\tusednum[i]=true;\n\t\t\t\tusedchar[b[pos]]=true;\n\t\t\t\tdfs(pos);\n\t\t\t\tusednum[i]=false;\n\t\t\t\tusedchar[b[pos]]=false;\n\t\t\t}\n\t\t}//\u679a\u4e3ea\u540e\u679a\u4e3eb\uff0c\u4e4b\u540e\u624d\u4f1a\u8ba1\u7b97\u4e0a\u9762\n\t} else {\n\t\tfor(int i=n-1; i>=0; i--) {\n\t\t\tif(!usednum[i]) {\n\t\t\t\tnum[a[pos]]=i;\n\t\t\t\tusednum[i]=true;\n\t\t\t\tusedchar[a[pos]]=true;\n\t\t\t\tdfs(pos);\n\t\t\t\tusednum[i]=false;\n\t\t\t\tusedchar[a[pos]]=false;\n\t\t\t}//\u7a0b\u5e8f\u6700\u5f00\u59cb\u8fd0\u884c\u7684\u662f\u8fd9\u91cc\uff0c\u5148\u679a\u4e3ea\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d%s%s%s\",&n,a,b,c);\n\tfor(int i=0; i<n; i++) {\n\t\ta[i]-='A';\n\t\tb[i]-='A';\n\t\tc[i]-='A';/\u8f6c\u6210\u6570\u5b57\u597d\u64cd\u4f5c\n\t}\n\tdfs(n-1);\n\treturn 0;\n}\n```\n\u4ee3\u7801\u5947\u4e71\u4e0d\u8981\u55b7\u6211\u545c\u545c\u545c\n\u5624\u5624\u5624\uff0c\u849f\u84bb\u7206\u54ed",
        "postTime": 1552664700,
        "uid": 84427,
        "name": "lqy1416",
        "ccfLevel": 0,
        "title": "\u866b\u98df\u7b97"
    },
    {
        "content": "\u6b64\u9898\u7684\u76f4\u63a5\u601d\u8def\u662f\u641c\u7d22\uff0c\u4f46\u641c\u7d22\u5f97\u6709\u6280\u672f\uff08\u5176\u5b9e\u5c31\u662f\u526a\u679d\uff09\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\uff08\u8bf7\u5bb9\u8bb8\u6211\u8fd9\u4e2a\u849f\u84bb\u81ea\u6211\u5d07\u62dc\u4e00\u4e0b\uff09  \n\u8fd9\u9053\u9898\u4ece\u4e2a\u4f4d\u5f80\u6700\u9ad8\u4f4d\u641c\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u8fdb\u4f4d\u7684\u91cd\u590d\u8fd0\u7b97\u3002\u3002\u3002\u3002\u3002\u3002  \n\u6700\u540echeck\u4e00\u4e0b\uff0c\u7136\u540e\u9012\u5f52\u8f93\u51fa  \n\u5148\u4e0a\u4ee3\u7801\uff0c\u540e\u9762\u518d\u6765\u5206\u6bb5\u8ba8\u8bba\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nbool flag[95];\nchar a[30],b[30],c[30],d[30];\nint v[95],n;\ninline void ycl() {\n    int tot=0;\n    for(int i=n-1;i>=0;i--) {\n        if(!flag[a[i]]) {\n            flag[a[i]]=1;\n            d[++tot]=a[i];\n        }\n        if(!flag[b[i]]) {\n            flag[b[i]]=1;\n            d[++tot]=b[i];\n        }\n        if(!flag[c[i]]) {\n            flag[c[i]]=1;\n            d[++tot]=c[i];\n        }\n    }\n    memset(flag,0,sizeof(flag));\n    memset(v,-1,sizeof(v));\n}\ninline bool ok() {\n    int jw=0;\n    for(int i=n-1;i>=0;i--) {\n        if((v[a[i]]+v[b[i]]+jw)%n!=v[c[i]])\n            return 0;\n        jw=(v[a[i]]+v[b[i]]+jw)/n;\n    }\n    if(jw)\n        return 0;\n    return 1;\n}\ninline void pr() {\n    for(int i=65;i<=64+n;i++)\n        if(v[i]!=-1)\n            printf(\"%d \",v[i]);\n    exit(0);\n}\ninline bool check() {\n    for(int i=n-1;i>=0;i--)\n        if(v[a[i]]!=-1&&v[b[i]]!=-1&&v[c[i]]!=-1)\n            if((v[a[i]]+v[b[i]])%n!=v[c[i]]&&(v[a[i]]+v[b[i]]+1)%n!=v[c[i]])\n                return 0;\n        else if(v[a[i]]!=-1&&v[b[i]]!=-1&&v[c[i]]==-1)\n            if(flag[(v[a[i]]+v[b[i]])%n]&&flag[(v[a[i]]+v[b[i]]+1)%n])\n                return 0;\n        else if(v[a[i]]!=-1&&v[b[i]]==-1&&v[c[i]]!=-1)\n            if(flag[(v[c[i]]-v[a[i]]+n)%n]&&flag[(v[c[i]]-v[a[i]]-1+n)%n])\n                return 0;\n        else if(v[a[i]]==-1&&v[b[i]]!=-1&&v[c[i]]!=-1)\n            if(flag[(v[c[i]]-v[b[i]]+n)%n]&&flag[(v[c[i]]-v[b[i]]-1+n)%n])\n                return 0;\n    return 1;\n}\ninline void dfs(int i) {\n    if(i>n) {\n        if(ok())\n            pr();\n        return;\n    }\n    for(int j=n-1;j>=0;j--) {\n        if(flag[j])\n            continue;\n        v[d[i]]=j;\n        flag[j]=1;\n        if(!check()) {\n            v[d[i]]=-1;\n            flag[j]=0;\n            continue;\n        }\n        dfs(i+1);\n        v[d[i]]=-1;\n        flag[j]=0;\n    }\n}\nint main() {\n    scanf(\"%d\\n\",&n);\n    gets(a);\n    gets(b);\n    gets(c);\n    ycl();\n    dfs(1);\n}\n```\n\u4e3b\u51fd\u6570\u7684\u4ee3\u7801\u5f88\u597d\u61c2\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u770bdfs\uff1a\n```cpp\ninline void dfs(int i) {\n    if(i>n) {//\u5df2\u7ecf\u641c\u5230\u5e95\u4e86\n        if(ok())//\u5982\u679c\u7b97\u5f0f\u662f\u6210\u7acb\u7684\u5c31\u8f93\u51fa\n            pr();\n        return;//\u4e0d\u7ba1\u600e\u6837\u90fd\u8981\u9000\u51fa\n    }\n    for(int j=n-1;j>=0;j--) {//\u6df1\u641c\uff0c\u7ed9\u6bcf\u4e00\u4f4d\u8d4b\u503c\n        if(flag[j])//\u5df2\u7ecf\u8d4b\u8fc7\u503c\u4e86\n            continue;\n        v[d[i]]=j;//\u8d4b\u503c\n        flag[j]=1;\n        if(!check()) {//check\u540e\u53d1\u73b0\u4e0d\u6210\u7acb\u5c31\u9000\u51fa\n            v[d[i]]=-1;\n            flag[j]=0;\n            continue;\n        }\n        dfs(i+1);//\u6df1\u641c\n        v[d[i]]=-1;//\u6ca1\u505c\u5c31\u7ee7\u7eed\u641c\n        flag[j]=0;\n    }\n}\n```\n\u518d\u6765\u770bok\uff1a\n```cpp\ninline bool ok() {\n    int jw=0;//\u8ba1\u7b97\u8fdb\u4f4d\n    for(int i=n-1;i>=0;i--) {\n        if((v[a[i]]+v[b[i]]+jw)%n!=v[c[i]])//\u5224\u65ad\u6bcf\u4e00\u4f4d\u662f\u5426\u6210\u7acb\n            return 0;//\u4e0d\u6210\u7acb\n        jw=(v[a[i]]+v[b[i]]+jw)/n;//\u7ee7\u7eed\u7b97\u8fdb\u4f4d\n    }\n    if(jw)//\u8fd8\u6709\u8fdb\u4f4d\u6ca1\u7b97\u5230\uff0c\u7b54\u6848\u80af\u5b9a\u6709\u95ee\u9898\n        return 0;\n    return 1;\n}\n```\n\u7136\u540e\u662fpr\uff1a\n```cpp\ninline void pr() {\n    for(int i=65;i<=64+n;i++)\u5c31\u662f\u8f93\u51fa\u561b\uff0cA\u5bf9\u5e94\u7684ASCLL\u7801\u503c\u4e3a65\n        if(v[i]!=-1)//\u4e0d\u4e3a-1\u5c31\u8f93\u51fa\n            printf(\"%d \",v[i]);\n    exit(0);//\u6709\u7b54\u6848\u4e86\uff0c\u76f4\u63a5\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\n}\n```\n\u518d\u6765\u770b\u6700\u590d\u6742\u7684\uff08\u6c57\uff09check\uff1a\n```cpp\ninline bool check() {\n    for(int i=n-1;i>=0;i--)\n        if(v[a[i]]!=-1&&v[b[i]]!=-1&&v[c[i]]!=-1)//\u4e09\u4e2a\u90fd\u6709\u503c\n            if((v[a[i]]+v[b[i]])%n!=v[c[i]]&&(v[a[i]]+v[b[i]]+1)%n!=v[c[i]])//\u5df2\u7ecf\u4e0d\u6210\u7acb\u4e86\n                return 0;\n        else if(v[a[i]]!=-1&&v[b[i]]!=-1&&v[c[i]]==-1)//\u81ea\u5df1\u770b\u5427\uff0c\u4e0b\u9762\u4e09\u4e2a\u4e00\u6837\u7684\n            if(flag[(v[a[i]]+v[b[i]])%n]&&flag[(v[a[i]]+v[b[i]]+1)%n])\n                return 0;\n        else if(v[a[i]]!=-1&&v[b[i]]==-1&&v[c[i]]!=-1)\n            if(flag[(v[c[i]]-v[a[i]]+n)%n]&&flag[(v[c[i]]-v[a[i]]-1+n)%n])\n                return 0;\n        else if(v[a[i]]==-1&&v[b[i]]!=-1&&v[c[i]]!=-1)\n            if(flag[(v[c[i]]-v[b[i]]+n)%n]&&flag[(v[c[i]]-v[b[i]]-1+n)%n])\n                return 0;\n    return 1;\n}\n```\n\u9884\u5904\u7406\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86\uff0c\u5927\u5bb6\u8fd8\u6709\u4e0d\u61c2\u7684\u5c31\u79c1\u4fe1\u6211\uff08^v^\uff09",
        "postTime": 1542780286,
        "uid": 104822,
        "name": "\u4e0d\u601d\u8fdb\u53d6\u601d\u4f60",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "#\u6ce8\u610f,\u8fd9\u91cc\u6709\u4e09\u4e2a\u4ee3\u7801,\u8bf7\u7528\u7b2c\u4e09\u4e2a,\u524d\u4e24\u4e2a\u4e0d\u662f\u6ee1\u5206!\n\n#\u4ece\u53f3\u5f80\u5de6\u641c\u5927\u5bb6\u80af\u5b9a\u90fd\u4f1a,\u8fd9\u91cc\u9644\u4e0a30\u5206\u4ee3\u7801:\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,x[26]= {0};// from the right to the left//TLE X 7\nbool used[26]= {0},ans=0; //ans is a flag,when ans==1 the stops \nchar s1[26],s2[26],s3[26];\nbool ok() {//judge the \"answer\"\n//return right\n    int m=0;\n    bool right;\n    for(int i=n-1; i>=0; i--) {\n        right=1;\n        int sum=x[s1[i]-65]+x[s2[i]-65/*'A'*/]+m;//65==A\n        m=sum/n;\n        sum=sum%n;\n        if(sum==x[s3[i]-65]) right=0;\n        if(right) break;\n    }\n    return !right;\n}\nvoid dfs(int now) {//\u73b0\u5728\u7684\u4f4d\u7f6e\u5f80\u5de6\u641c\n    if(ans) return;\n    if(now==n&&!ok()) return;\n    if(now==n&&ok()) {//\u8f93\u51fa\u6b63\u89e3 \n        ans=1;\n        for(int i=0; i<n; i++) cout<<x[i]<<\" \";\n        return;\n    }\n    for(int i=n-1; i>=0; i--) {\n        if(!used[i]) {\n            x[now]=i;\n            used[i]=1;\n            dfs(now+1);\n            used[i]=0;\n        }\n    }\n    return;\n}\nint main() {\n    std::ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=0; i<n; i++) cin>>s1[i];\n    for(int i=0; i<n; i++) cin>>s2[i];\n    for(int i=0; i<n; i++) cin>>s3[i];\n    dfs(0);\n    return 0;\n}\n```\n# \u5ffd\u7136\u53d1\u73b0\u6709\u597d\u591a\u70b9\u70b8\u6389\u4e86,\u4e8e\u662f\u7528\u7565\u6709\u4f18\u5316\u7684\u7b97\u6cd5,\u4e00\u6b21\u641c\u4e00\u4e2a\u5b57\u6bcd,\u800c\u4e0d\u662f\u4e00\u884c,\u8fd9\u6b21\u5f97\u4e8690\u5206\n\u9644\u4e0a\u4ee3\u7801:\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,x[26]={0},m[26]={0};\nbool usednum[26]={0},usedlet[26]={0},ans=0;\nchar s1[26],s2[26],s3[26],sums[78];\nbool ok(int now){\n    if(now%3!=2) return true;\n    int cons=now/3*3,sum=x[sums[cons]-65]+x[sums[cons+1]-65]+m[now/3];\n    int temp=sum;\n    sum=sum%n;\n    if(sum==x[sums[cons+2]-65]){\n        m[now/3+1]=temp/n;\n        return true;\n    }\n    else return false;\n}\nvoid dfs(int now){//now\u4e3a\u76ee\u524dsums\u6570\u7ec4\u4e0b\u6807,\u8fd9\u56de\u7528\u4e86\u9010\u4e2a\u641c\u7d22,\u800c\u4e0d\u662f\u9010\u884c \n    if(ans) return;\n    if(!ok(now-1)) return;\n    if(now==3*n){\n        ans=1;\n        for(int i=0;i<n;i++) cout<<x[i]<<\" \";\n        return;\n    }\n    if(!usedlet[sums[now]-65]){\n        for(int i=n-1;i>=0;i--){\n            if(!usednum[i]){\n                int tempm=m[now/3];\n                x[sums[now]-65]=i;\n                usednum[i]=1;\n                usedlet[sums[now]-65]=1;//\u9632\u6b62\u91cd\u590d\u7684\u4f7f\u7528 \n                dfs(now+1);\n                m[now/3]=tempm;\n                usednum[i]=0;\n                usedlet[sums[now]-65]=0;\n            }\n        }\n    }\n    else dfs(now+1);//\u5bf9\u4e0b\u4e2a\u70b9\u8fdb\u884c\u641c\u7d22 \n    return;\n}\nint main(){\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>s1[i];\n        sums[3*(n-1-i)]=s1[i];\n    }\n    for(int i=0;i<n;i++){\n        cin>>s2[i];\n        sums[3*(n-1-i)+1]=s2[i];\n    }\n    for(int i=0;i<n;i++){\n        cin>>s3[i];\n        sums[3*(n-1-i)+2]=s3[i];\n    }\n\n/\\*\n\u5982\u8f93\u5165\n\n4\nABCD\nEFGH\nIJKL\n    sums==\"DHLCGKBFJAEI\"\n\n\u641c\u7d22sums[0~3\\*n-1]\n\n\\*/\n//\u672c\u8d28\u601d\u60f3\u8fd8\u662f\u4ece\u53f3\u5f80\u5de6\u641c,\u672c\u8d28\u4e0a\u6ca1\u6709\u8f6c\u5316\n\n    dfs(0);\n\n    return 0;\n\n}//\u53ea\u62ff\u4e8690\u5206\n```\n# \u8981\u662f\u4ece\u5de6\u5f80\u53f3\u641c......\u4f1a\u9020\u6210\u5f88\u5927\u5f71\u54cd,\u8d77\u5230\u4e86\u9650\u5b9a\u8303\u56f4\u7684\u4f5c\u7528.\u5f53\u7136,\u4ece\u53f3\u5f80\u5de6\u641c\u4e5f\u5f88\u91cd\u8981.\n\n\u770b\u5927\u4f6c\u4ee3\u7801\u5f88\u957f,\u653e\u4e2a\u77ed\u4e00\u70b9\u7684:\n```cpp\n#include<iostream>\nusing namespace std;\nint n,x[26]= {0},m[26]= {0};\nbool usednum[26]= {0},usedlet[26]= {0},ans=0;\nchar s1[26],s2[26],s3[26],sums[78];\nbool frontok(int now) {//\u4ece\u5de6\u5f80\u53f3\u8fd0\u7b97,\u9650\u5b9a\u8303\u56f4 \n    bool right=1;\n    for(int i=3*n-1; i>now; i-=3) {\n        if((usedlet[sums[i]-65]&&usedlet[sums[i-1]-65]&&usedlet[sums[i-2]-65])&&\n                (x[sums[i]-65]!=(x[sums[i-1]-65]+x[sums[i-2]-65])%n\n                 &&x[sums[i]-65]!=(x[sums[i-1]-65]+x[sums[i-2]-65]+1)%n)) {\n            right=0;\n            break;\n        }\n    }\n    return right;\n}\nbool ok(int now) {\n    if(now%3!=2) return true;\n    int cons=now/3*3,sum=x[sums[cons]-65]+x[sums[cons+1]-65]+m[now/3];\n    int temp=sum;\n    sum=sum%n;\n    if(sum==x[sums[cons+2]-65]) {\n        m[now/3+1]=temp/n;\n        return true;\n    } else return false;\n}\nvoid dfs(int now) { //now\u4e3a\u76ee\u524dsums\u6570\u7ec4\u4e0b\u6807\n    if(ans) return;\n    if(!ok(now-1)) return;\n    //\u65b0\u52a0\u5224\u65ad\u6761\u4ef6,\u76f8\u5f53\u4e8e\u526a\u679d \n    if(!frontok(now-1)) return;\n    if(now==3*n) {\n        ans=1;\n        for(int i=0; i<n; i++) cout<<x[i]<<\" \";\n        return;\n    }\n    if(!usedlet[sums[now]-65]) {\n        for(int i=n-1; i>=0; i--) {\n            if(!usednum[i]) {\n                int tempm=m[now/3];\n                x[sums[now]-65]=i;\n                usednum[i]=1;\n                usedlet[sums[now]-65]=1;\n                dfs(now+1);\n                m[now/3]=tempm;\n                usednum[i]=0;\n                usedlet[sums[now]-65]=0;\n            }\n        }\n    } else dfs(now+1);\n    return;\n}\nint main() {\n    cin>>n;\n    for(int i=0; i<n; i++) {\n        cin>>s1[i];\n        sums[3*(n-1-i)]=s1[i];\n    }\n    for(int i=0; i<n; i++) {\n        cin>>s2[i];\n        sums[3*(n-1-i)+1]=s2[i];\n    }\n    for(int i=0; i<n; i++) {\n        cin>>s3[i];\n        sums[3*(n-1-i)+2]=s3[i];\n    }\n/\\*\n\u5982\u8f93\u5165\n\n4\nABCD\nEFGH\nIJKL\n    sums==\"DHLCGKBFJAEI\"\n\n\u641c\u7d22sums[0~3\\*n-1]\n\n\\*/\n    dfs(0);\n\n    return 0;\n}\n```\n\u8981\u8f6c\u6362\u601d\u8003\u65b9\u5411,\u4ece\u5de6\u5f80\u53f3\u641c\u6765\u9650\u5b9a\u8303\u56f4,\u4ece\u53f3\u5f80\u5de6\u641c\u7cbe\u786e\u5b9a\u4f4d,\u7ed3\u5408\u52a0\u901f.\n",
        "postTime": 1507296716,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u9996\u5148\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u662f\u5565\u53ef\u4ee5\u670970\u5206\uff08\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u522b\u4eba\u7684\u4ee3\u7801\u4e86//\u624b\u52a8\u6ed1\u7a3d\uff09\n\n\u5176\u5b9e\u53ef\u4ee5\u6362\u4e00\u79cd\u601d\u8def\u5c31\u662f\u4e0d\u8981\u4f9d\u6b21\u679a\u4e3eA,B,C...\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u800c\u662f\u5f0f\u5b50\u540e\u9762\u7684\u5b57\u6bcd\u4f18\u5148\u679a\u4e3e\n\n\u56e0\u4e3a\u540e\u9762\u7684\u5b57\u6bcd\u4f18\u5148\u679a\u4e3e\u5c31\u53ef\u4ee5\u8ba9\u5f0f\u5b50\u4ece\u540e\u9762\u5f00\u59cb\u6162\u6162\u586b\u5145\uff0c\u5c3d\u65e9\u5224\u65ad\u51fa\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\u3002\u5982\u679c\u4eceA\u5230B\u5230C\u987a\u5e8f\u4e0b\u53bb\uff0c\u5f0f\u5b50\u7684\u586b\u5145\u662f\u5f88\u96f6\u6563\u7684\uff0c\u6548\u7387\u6781\u4f4e\uff0c\u5bf9\u4e8e\u6709\u4e9b\u6570\u636e\u9700\u8981\u586b\u5145\u5230\u5feb\u7ed3\u675f\u7684\u65f6\u5019\u624d\u80fd\u5224\u65ad\u51fa\u8fd9\u79cd\u60c5\u51b5\u7684\u53ef\u884c\u6027\n\n\u6709\u4e86\u8fd9\u4e9b\u5927\u4f53\u601d\u8def\u5c31\u53ef\u4ee5\u5f00\u59cb\u8003\u8651\u641c\u7d22\u7ec6\u8282\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u9700\u8981a,b,c\u90fd\u53bb\u641c\n\n\u6bd5\u7adfc=(a+b)%n \u6216\u8005c=(a+b+1)%n  \uff08\u8fdb\u4f4d\u4e0e\u5426\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u641c\u7d22\u76843\u4e2a\u53c2\u6570 x,y,w \uff08\u5217\uff0c\u884c\uff0c\u8fdb\u4f4d\uff09\n\n\u6bcf\u6b21\u641c\u7d22\u524d\u5224\u65ad\u4e00\u4e0b\u82e5\u6709\u4e00\u52173\u4e2a\u5b57\u6bcd\u90fd\u786e\u5b9a\u4e86,\u4f46\u6709\u65e0\u8fdb\u4f4d\u90fd\u4e0d\u6ee1\u8db3,\u8bf4\u660e\u5f53\u524d\u7684\u5b57\u6bcd\u987a\u5e8f\u9519\u8bef,\u76f4\u63a5return.\n\n\u5177\u4f53\u7684\u4e1c\u897f\u4ee3\u7801\u6709\u89e3\u91ca\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#define re register int\n#define fp(i,a,b) for(re i=a,I=b;i<=I;++i)\n#define fd(i,a,b) for(re i=a,I=b;i>=I;--i)\nconst int N=28;typedef int arr[N];\nint n;arr tmp,vis,A,B,C;char s[N];\nvoid dfs(re x,re y,re w){//\u4ece\u53f3\u5f80\u5de6 \u4ece\u4e0a\u5f80\u4e0b\u641c\u7d22 \u641c\u7d22\u524d2\u4f4d \u8bb0\u5f55\u8fdb\u4f4d\u5c31\u53ef\u4ee5\u63a8\u51fa\u7b2c3\u4f4d (\u5982\u679c\u7b2c\u53d1\u73b0\u4e0d\u5bf9\u5c31return)\n    fp(i,1,x){\n        re a=tmp[A[i]],b=tmp[B[i]],c=tmp[C[i]];\n        if(a==-1||b==-1||c==-1)continue;\n        if((a+b+1)%n!=c&&(a+b)%n!=c)return;\n    }//\u82e5\u6709\u4e00\u52173\u4e2a\u5b57\u6bcd\u90fd\u786e\u5b9a\u4e86,\u4f46\u6709\u65e0\u8fdb\u4f4d\u90fd\u4e0d\u6ee1\u8db3,\u8bf4\u660e\u5f53\u524d\u7684\u5b57\u6bcd\u987a\u5e8f\u9519\u8bef,\u76f4\u63a5return.\n    if(!x){fp(i,0,n-1)printf(\"%d \",tmp[i]);exit(0);}\n    if(y==1){//\u679a\u4e3e\u7b2c\u4e00\u4e2a \n        if(tmp[A[x]]>-1){dfs(x,2,w);return;}\n        fd(i,n-1,0)if(!vis[i]){//\u5b9e\u8df5\u8bc1\u660e\u5012\u641c\u66f4\u5feb \n            vis[tmp[A[x]]=i]=1;\n            dfs(x,2,w);\n            tmp[A[x]]=-1;vis[i]=0;\n        }\n        return;\n    }\n    re a=tmp[A[x]],b=tmp[B[x]],c=tmp[C[x]];\n    if(b>-1){//\u5982\u679c\u7b2c\u4e8c\u4e2a\u5df2\u7ecf\u6709\u4e86 \n        re sum=a+b+w;\n        if(c==-1){//\u7b2c3\u4e2a\u53ef\u4ee5\u63a8\u51fa\u6765 \n            vis[tmp[C[x]]=sum%n]=1;\n            dfs(x-1,1,sum/n);\n            tmp[C[x]]=-1;vis[sum%n]=0;\n            return;\n        }\n        if(sum%n==c)dfs(x-1,1,sum/n);\n        return;\n    }\n    fd(i,n-1,0)if(!vis[i]){//\u679a\u4e3e\u7b2c2\u4e2a \n        re sum=a+i+w;\n        if((sum%n!=c&&c>-1)||(c==-1&&vis[sum%n]))continue;//c\u7684\u503c\u4e0d\u5bf9\u6216\u8005\u88ab\u5360\u7528 \n        if(c==-1)vis[sum%n]=1,tmp[C[x]]=sum%n;\n        vis[tmp[B[x]]=i]=1;\n        dfs(x-1,1,sum/n);\n        tmp[B[x]]=-1;vis[i]=0;\n        if(c==-1)vis[sum%n]=0,tmp[C[x]]=-1;//\u56de\u6eaf\u7684\u65f6\u5019\u7a0d\u5fae\u6ce8\u610f\u4e00\u4e0b c\u662f\u4e0d\u662f\u65e9\u5c31\u63a8\u51fa\u6765\u4e86 \n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    scanf(\"%s\",s+1);fp(i,1,n)A[i]=s[i]-'A';\n    scanf(\"%s\",s+1);fp(i,1,n)B[i]=s[i]-'A';\n    scanf(\"%s\",s+1);fp(i,1,n)C[i]=s[i]-'A';\n    fp(i,0,n-1)tmp[i]=-1;dfs(n,1,0);\nreturn 0;\n}//\u5224\u65ad\u8fd8\u672a\u679a\u4e3e\u5230\u7684\u5217,\u82e5\u6709\u4e00\u52173\u4e2a\u5b57\u6bcd\u90fd\u786e\u5b9a\u4e86,\u4f46\u6709\u65e0\u8fdb\u4f4d\u90fd\u4e0d\u6ee1\u8db3,\u8bf4\u660e\u5f53\u524d\u7684\u5b57\u6bcd\u987a\u5e8f\u9519\u8bef,\u76f4\u63a5return.\n```\n\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\u53ea\u670953\u884c\uff08\u538b\u4ee3\u7801\u9003\u8d70\uff09\n",
        "postTime": 1503302530,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\\*44ms\uff0c\u7b97\u6bd4\u8f83\u5feb\u7684\u4e86\u5427\u3002\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n\u5982\u679c\u77e5\u9053\u6b64\u5217\u4e24\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u6c42\u7b2c\u4e09\u4e2a\u6570\uff08\u77e5\u4e8c\u6c42\u4e00\u561b\uff01\uff09\n\n\u7136\u540e\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u5c31\u53ea\u7528\u7ba1\u7b2c\u4e00\u5217\u7684\uff0c\u8fd9\u6837\u907f\u514d\u4e86\u5f88\u591a\u5b9e\u8d28\u6027\u91cd\u590d\u7684\u64cd\u4f5c\u3002\u526a\u77ed\u4e86\u4ee3\u7801\uff01\n\n\u7136\u540e\u91cd\u70b9\u662f\uff0c\u6bcf\u6b21\u90fd\u8981\u5224\u65ad\u5f53\u524d\u5f0f\u5b50\u662f\u5426\u6210\u7acb\uff0c\u5982\u679c\u4e00\u5217\u4e09\u4e2a\u90fd\u77e5\u9053\u7684\u8bdd\uff0c\u4e14\u65e0\u8bba\u8fdb\u4f4d\u4e0e\u5426\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u3002\uff08\u5f88\u591a\u4eba90\u5e94\u8be5\u5c31\u662f\u6ca1\u60f3\u5230\u8fd9\uff09\u8fd9\u6837\u7684\u8bdd\u51cf\u5c11\u5927\u91cf\u7684\u91cd\u590d\u6027\u64cd\u4f5c\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nconst int N = 25 + 2;\nchar a[N],b[N],c[N];\nint num[N],n,k[N];\nbool pan[N],ban[N];\nbool pd(int i)\n{\n     while(i--)\n     {\n         if(pan[a[i]] && pan[b[i]] && pan[c[i]])\n         {\n             int k=num[a[i]]+num[b[i]];int x=num[c[i]];\n             if((k+1)%n==x || k%n==x || (k+n-1)%n==x)continue;\n            else return true;\n         }\n     }\n     return false;\n}\nvoid dfs(int temp)\n{\n    if(temp == -1)\n    {\n        for(int i=0;i<n;i++)printf(\"%d \",num[i]);\n        exit(0);\n    } \n    else \n    {\n        if(pd(temp))return;\n        if(pan[a[temp]] && pan[b[temp]] && pan[c[temp]] )\n        {\n            if((num[a[temp]]+num[b[temp]]+k[temp])%n == num[c[temp]])\n            {\n                k[temp-1]+=(num[a[temp]]+num[b[temp]]+k[temp])/n;\n                dfs(temp-1);\n                k[temp-1]-=(num[a[temp]]+num[b[temp]]+k[temp])/n;\n            }\n            else return;\n        }\n        else if(pan[a[temp]] && pan[b[temp]]) \n        {\n            if(ban[(k[temp]+num[a[temp]]+num[b[temp]])%n]) return;\n            num[c[temp]]=(k[temp]+num[a[temp]]+num[b[temp]])%n;\n            ban[num[c[temp]]]=true;\n            pan[c[temp]]=true;\n            k[temp-1]+=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n            dfs(temp-1);\n            pan[c[temp]]=false;\n            ban[num[c[temp]]]=false;\n            k[temp-1]-=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n        }\n        else if(pan[a[temp]] && pan[c[temp]]) \n        {\n            if(ban[(num[c[temp]]+n-k[temp]-num[a[temp]])%n]) return;\n            num[b[temp]]=(num[c[temp]]+n-k[temp]-num[a[temp]])%n;\n            ban[num[b[temp]]]=true;\n            pan[b[temp]]=true;\n            k[temp-1]+=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n            dfs(temp-1);\n            pan[b[temp]]=false;\n            ban[num[b[temp]]]=false;\n            k[temp-1]-=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n        }\n        else if(pan[b[temp]] && pan[c[temp]]) \n        {\n            if(ban[(num[c[temp]]+n-k[temp]-num[b[temp]])%n]) return;\n            num[a[temp]]=(num[c[temp]]+n-k[temp]-num[b[temp]])%n;\n            ban[num[a[temp]]]=true;\n            pan[a[temp]]=true;\n            k[temp-1]+=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n            dfs(temp-1);\n            pan[a[temp]]=false;\n            ban[num[a[temp]]]=false;\n            k[temp-1]-=(k[temp]+num[a[temp]]+num[b[temp]])/n;\n        }\n        else if(pan[a[temp]])\n        {\n            for(int i=n-1;i>=0;i--)\n            {\n                if(!ban[i])\n                {\n                    num[b[temp]]=i; \n                    ban[i]=true;\n                    pan[b[temp]]=true;\n                    dfs(temp);\n                    ban[i]=false;\n                    pan[b[temp]]=false;\n                }\n            }\n        }\n        else\n        {\n            for(int i=n-1;i>=0;i--)\n            {\n                if(!ban[i])\n                {\n                    num[a[temp]]=i;\n                    ban[i]=true;\n                    pan[a[temp]]=true;\n                    dfs(temp);\n                    ban[i]=false;\n                    pan[a[temp]]=false;\n                }\n            }\n        }\n    } \n} \nint main()\n{\n    cin>>n;\n    scanf(\"%s%s%s\",a,b,c);\n    for(int i=0;i<n;i++)\n    {\n        a[i]-='A';\n        b[i]-='A';\n        c[i]-='A';\n    }\n    dfs(n-1);\n    return 0;\n}\n```\n/\\*\n5\nABCED\nBDACE\nEBBAA\n\\*/",
        "postTime": 1483005492,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u603b\u601d\u8def\uff0c\u6df1\u641c\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint N;\nstring equ[3];\nint alphabet2Num[30];\nint right2Left[30];//\u5b58\u5b57\u6bcd\u5e8f\u53f7\nint used[30];\nint str2Num(string s){\n    int num = 0,tmp = 1;\n    for (int i = s.length() - 1; i >= 0; --i) {\n        num += alphabet2Num[s[i]-'A'] * tmp;\n        tmp *= N;\n    }\n    return num;\n}\n//\u6700\u540e\u7684\u8f6c\u6362\u4e5f\u53ef\u80fd\u8017\u65f6\u95f4\nbool check(){\n    int num1,num2,num3;\n    int tmp;\n    num1 = str2Num(equ[0]);\n    num2 = str2Num(equ[1]);\n    num3 = str2Num(equ[2]);\n    tmp = num1 + num2;\n    return (tmp == num3);\n}\n//\u4f18\u5316\u53d6\u6a21\u770b\u662f\u5426\u80fd\u63d0\u9ad8\u901f\u5ea6\nbool check2(){\n    //\u9010\u4f4d\u6d4b\u8bd5\n    for (int i = N-2; i >= 1; --i) {\n        if(alphabet2Num[equ[0][i] - 'A'] != -1 && alphabet2Num[equ[1][i] - 'A'] != -1 && alphabet2Num[equ[2][i] - 'A'] != -1){\n            if((alphabet2Num[equ[0][i] - 'A'] + alphabet2Num[equ[1][i] - 'A']) % N != alphabet2Num[equ[2][i] - 'A'] && (alphabet2Num[equ[0][i] - 'A'] + alphabet2Num[equ[1][i] - 'A'] + 1) % N != alphabet2Num[equ[2][i] - 'A'])\n                return true;\n        }\n    }\n    return false;\n}\nvoid dfs(int n){\n    if(n >= N ){\n        if(check()){\n            for (int i = 0; i < N; ++i) {\n                cout << alphabet2Num[i] << \" \";\n            }\n            exit(0);\n        }\n        return;\n    } else {\n        if(n >= 3 && (alphabet2Num[equ[0][N-1] - 'A'] + alphabet2Num[equ[1][N-1] - 'A']) % N != alphabet2Num[equ[2][N-1] - 'A']){\n            return;\n        }\n        if((alphabet2Num[equ[0][0] - 'A'] + alphabet2Num[equ[1][0] - 'A']) >= N)\n            return;\n        if(n >= 3 && check2())\n            return;\n        for (int i = N-1; i >= 0; --i) {\n            if(used[i] == 0){\n                used[i] = 1;\n                alphabet2Num[right2Left[n]] = i;\n                dfs(n+1);\n                used[i] = 0;\n                alphabet2Num[right2Left[n]] = -1;\n            }\n        }\n    }\n}\n//200\u591ams\u7684\u4ee3\u7801\nint main(){\n    cin >> N;\n    for (int i = 0; i < 3; ++i) {\n        cin >> equ[i];\n    }\n    int useAlphabet[30];\n    for (int j = 0; j < N; ++j) {\n        alphabet2Num[j] = -1;\n        useAlphabet[j] = 0;\n    }\n    int index = 0;\n    for (int k = N-1; k >= 0; --k) {\n        for (int i = 0; i < 3; ++i) {\n            if(useAlphabet[equ[i][k] - 'A'] == 0){\n                useAlphabet[equ[i][k] - 'A'] = 1;\n                right2Left[index++] = equ[i][k] - 'A';\n            }\n        }\n    }\n    dfs(0);\n}\n```",
        "postTime": 1481893931,
        "uid": 9087,
        "name": "fl_334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u6b64\u9898\u660e\u663e\u4e3a\u6df1\u641c\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\uff0c\u641c\u7d22\u7684\u4e3b\u8981\u601d\u60f3\u662f\u51cf\u5c0f\u641c\u7d22\u6811\uff0c\u6240\u4ee5\u5b9e\u73b0\u65b9\u6cd5\u5982\u4e0b\n\n1.\u4ece\u540e\u5f80\u524d\uff0c\u4ece\u4e0a\u5f80\u4e0b\u641c\uff0c\u907f\u514d\u540e\u4f4d\u8fdb\u4f4d\u7684\u9ebb\u70e6\u3002\n\n2.\u6bcf\u6b21\u641c\u5b8cupdate\u4e00\u904dmap\uff0c\u7136\u540e\u518d\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u6709\u4e0d\u5408\u6cd5\u60c5\u51b5\u51fa\u73b0\uff1a\u4e00\u5217\u4e09\u4e2a\u5df2\u77e5\u4e0d\u5408\u6cd5\uff0c\u4f8b\u59821+1=3\uff1b\u5df2\u77e5\u4e24\u4e2a\u6570\u672a\u77e5\u8fdb\u4f4d\u4f46     \u8fdb\u4e0d\u8fdb\u90fd\u4e0d\u53ef\u4ee5\u6ee1\u8db3\u5c31\u4e0d\u5408\u6cd5\uff1b\u4e00\u5217\u5df2\u77e5\u4e24\u4e2a\u6570\u4ee5\u53ca\u8fdb\u4f4d\u8ba1\u7b97\u540e\u4e0d\u5408\u6cd5\u3002\u8fd9\u4e09\u79cd\u60c5\u51b5\u76f4\u63a5return\uff08\u5982\u679c\u5b9e\u5728\u770b\u4e0d\u61c2\u8bf7\u89c1\u4ee3\u7801\u7684judge\u51fd\u6570\uff09\n\n3.\u5728\u641c\u4e00\u4e2a\u6570\u65f6\u5982\u679c\u6240\u6709\u60c5\u51b5\u90fd\u5931\u8d25\u5219return\uff08\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u4f46\u95ee\u9898\u5728\u4e8e\u6211\u5c31\u5361\u6b7b\u5728\u8fd9\u4e86\u3002\u3002\u3002\uff09\n\n4.\u4e00\u5217\u5df2\u77e5\u4e24\u4e2a\u6570\u53ca\u8fdb\u4f4d\u60c5\u51b5\u5c31\u76f4\u63a5\u7b97\u7b2c\u4e09\u4e2a\u6570   \uff01\uff01\u4e14\u4e0d\u6ee1\u8db3\u65f6\u76f4\u63a5return\uff01\uff01\uff08\u624b\u52a8\u6807\u7ea2\uff09\n\n\\*5.\u4e00\u5217\u5df2\u77e5\u4e24\u4e2a\u6570\u672a\u77e5\u8fdb\u4f4d\u53ea\u8981\u641c\u8fdb\u4f4d\u7684\u6216\u4e0d\u8fdb\u4f4d\u7684\u3002\uff08\u8fd9\u6211\u61d2\u5f97\u52a0\u3002\u3002\u3002\uff09\n\n\\*6.\u4e2a\u4eba\u8ba4\u4e3a\u6bcf\u6b21\u628amap\u4e0a\u9762\u7684\u6570\u6362\u6765\u6362\u53bb\u592a\u70e6\u4e86\uff0c\u6240\u4ee5\u5b9a\u4e49\u4e86\u4e00\u4e2ar\u6570\u7ec4\u5b58\u653e\u4ee3\u6362\u89c4\u5219\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint map[10][50];//\u5355\u7eaf\u7684map\nint r[50];//\u4ee3\u6362\u89c4\u5219\nbool used[50],flag=1;//\u662f\u5426\u7528\u8fc7  \u662f\u5426\u51fa\u89e3\nint ad[50];//\u660e\u786e\u7684\u8fdb\u4f4d\u60c5\u51b5\nint n;\nbool judge()//\u5224\u65ad\u662f\u5426\u6709\u4e0d\u5408\u6cd5\u60c5\u51b5\uff0c\u6709\u5219return false\u3002\n{\n    int add=0,i;\n    for(i=n;i>=1;i--)\n    {\n        if(r[map[1][i]]!=-1&&r[map[2][i]]!=-1&&r[map[3][i]]!=-1)\n        {\n                if(add==-1&&(r[map[1][i]]+r[map[2][i]])%n!=r[map[3][i]]&&(r[map[1][i]]+r[map[2][i]]+1)%n!=r[map[3][i]]) \n                    return false; \n                if(add!=-1)\n                {\n                    if((r[map[1][i]]+r[map[2][i]]+add)%n==r[map[3][i]]) add=(r[map[1][i]]+r[map[2][i]]+add)/n;\n                    else return false;\n                }\n        }\n        else add=-1;\n    }\n    return true;\n}\nint find(int i,int y)//\u7b2c\u56db\u6761\n{\n    if(y==1)\n    {\n        if(r[map[2][i]]!=-1&&r[map[3][i]]!=-1)\n        {\n            int tmp=(r[map[3][i]]+n-r[map[2][i]])%n;\n            if(ad[i+1]==1) tmp=(tmp-1+n)%n;\n            if(used[tmp]==0)\n                return tmp;\n            else return -2;\n        }\n        return -1;\n    }\n    else if(y==2)\n    {\n        if(r[map[1][i]]!=-1&&r[map[3][i]]!=-1)\n        {\n            int tmp=(r[map[3][i]]+n-r[map[1][i]])%n;\n            if(ad[i+1]==1) tmp=(tmp-1+n)%n;\n            if(used[tmp]==0)\n                return tmp;\n            else return -2;\n        }\n        return -1;\n    }\n    else if(y==3)\n    {\n        if(r[map[1][i]]!=-1&&r[map[2][i]]!=-1)\n        {\n            int tmp=(r[map[1][i]]+r[map[2][i]])%n;\n            if(ad[i+1]==1) tmp=(tmp+1)%n;\n            if(used[tmp]==0)\n                return tmp;\n            else return -2;\n        }\n        return -1;\n    }\n}\nvoid updatead()//\u66f4\u65b0\u8fdb\u4f4d\u5668\n{\n    int i;\n    for(i=n;i>=1;i--)\n        if(r[map[1][i]]!=-1&&r[map[2][i]]!=-1&&ad[i+1]!=-1)\n        {\n            if(r[map[1][i]]+r[map[2][i]]+ad[i+1]>=n)\n                ad[i]=1;\n            else ad[i]=0;\n        }\n        else return;\n    return;\n}\nvoid dfs(int step,int x)//\u4ee5\u786e\u5b9a\u7684\u5b57\u6bcd\u6570   \u641c\u7d22\u5230\u54ea\u91cc\u4e86\n{\n    int i,j,k;\n    if(!judge()) return;//\u5224\u65ad\n    updatead();//\u66f4\u65b0\n    if(step==n)  {for(i=1;i<=n;i++) printf(\"%d \",r[i]);flag=0; return;}//\u51fa\u89e3\n    for(i=x;i>=1;i--)\n    {\n        for(j=1;j<=3;j++)\n            if(r[map[j][i]]==-1)//\u6b63\u5e38\u60c5\u51b5\n            {\n                int tmp=find(i,j);\n                if(tmp==-1)\n                {\n                    for(k=n-1;k>=0;k--)\n                        if(used[k]==0)\n                        {\n                            used[k]=1;\n                            r[map[j][i]]=k;\n                            dfs(step+1,i);\n                            if(flag==0) return;\n                            r[map[j][i]]=-1;\n                            used[k]=0;\n                        }\n                return;//\u7279\u522b\u6ce8\u610f\n                }\n                else if(tmp==-2) return;//\u5df2\u4e0d\u5408\u6cd5\n                else   //\u63a8\u51fa\u6765\u7684\u60c5\u51b5\n                {\n                    used[tmp]=1;\n                    r[map[j][i]]=tmp;\n                    dfs(step+1,i);\n                    r[map[j][i]]=-1;\n                    used[tmp]=0;\n            return;//\u7279\u522b\u6ce8\u610f\n                }\n            }\n    }\n}\nint main()\n{\n    int i;\n    string s1,s2,s3;\n    memset(r,-1,sizeof(r));\n    memset(ad,-1,sizeof(ad));\n    scanf(\"%d\\n\",&n);\n    ad[n+1]=0;\n    cin>>s1>>s2>>s3;\n    for(i=0;i<n;i++) map[1][i+1]=s1[i]-'A'+1;\n    for(i=0;i<n;i++) map[2][i+1]=s2[i]-'A'+1;\n    for(i=0;i<n;i++) map[3][i+1]=s3[i]-'A'+1;\n    dfs(0,n);\n    return 0;\n}\n```",
        "postTime": 1479298999,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u4e0a\u4e00\u4e2a201\u884c\u7684\u7a0b\u5e8f\n\n\u5e76\u4e0d\u7b97\u6700\u5feb\uff0c\u4f46\u662f400\u591ams\u8fc7\u6240\u6709\u6570\u636e\u8fd8\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\n\n\u8981\u6ce8\u610f\u526a\u679d\uff08\u82e5\u67d0\u4e00\u4f4d\u660e\u663e\u4e0d\u6210\u7acb\uff0c\u5219return\uff09\u3002\n\n\u8fd8\u6709\u5c31\u662f\u8981\u5206\u7c7b\u4ed4\u7ec6\uff0c\u60c5\u51b5\u6bd4\u8f83\u591a\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nint i,n;\nchar ch,gl[2],a[27],b[27],c[27];\nint ans[27];\nbool used[27];\nvoid read()\n{\n    scanf(\"%d\",&n);\n    gets(gl);\n    for (i=n; i>=1; i--)\n      scanf(\"%c\",&a[i]);\n    gets(gl);\n    for (i=n; i>=1; i--)\n      scanf(\"%c\",&b[i]);\n    gets(gl); \n    for (i=n; i>=1; i--)\n      scanf(\"%c\",&c[i]);    \n}\nvoid update(int k, int which, int value)\n{\n    used[value]=1;\n    if (which==1) ans[a[k]-'A']=value;\n    if (which==2) ans[b[k]-'A']=value;\n    if (which==3) ans[c[k]-'A']=value;    \n}\nvoid goback(int k, int which, int value)\n{\n    used[value]=0;\n    if (which==1) ans[a[k]-'A']=-1;\n    if (which==2) ans[b[k]-'A']=-1;\n    if (which==3) ans[c[k]-'A']=-1;    \n}\nint judge(int k, int jw, int &newjz, int &which, int &value)\n{\n    int cnt=0;  //judge=0:fail judge=1:ok judge=-1:not enough\n    if (ans[a[k]-'A']>=0) cnt++;\n    if (ans[b[k]-'A']>=0) cnt++;\n    if (ans[c[k]-'A']>=0) cnt++;\n    if (cnt<2) return -1;\n    if (cnt==3){\n        if ((ans[a[k]-'A']+ans[b[k]-'A']+jw)%n!=ans[c[k]-'A'])\n          return 0;\n        newjz=(ans[a[k]-'A']+ans[b[k]-'A']+jw)/n;\n        return 1;\n    }\n    if (ans[c[k]-'A']<0)\n    {\n        int tmp=ans[a[k]-'A']+ans[b[k]-'A']+jw;\n        if (used[tmp%n]) return 0;\n        newjz=tmp/n;\n        which=3; value=tmp%n;\n        return 1;\n    }\n    if (ans[a[k]-'A']<0)\n    {\n        int tmp=ans[c[k]-'A']-ans[b[k]-'A']-jw,tmp1=(tmp+n)%n;\n        if (used[tmp1]) return 0;\n        newjz=tmp1!=tmp;\n        which=1; value=tmp1;\n        return 1;\n    }\n    if (ans[b[k]-'A']<0)\n    {\n        int tmp=ans[c[k]-'A']-ans[a[k]-'A']-jw,tmp1=(tmp+n)%n;\n        if (used[tmp1]) return 0;\n        newjz=tmp1!=tmp;\n        which=2; value=tmp1;\n        return 1;\n    }\n}\nbool judge1(int k)\n{    \n    int cnt=0;\n    if (ans[a[k]-'A']>=0) cnt++;\n    if (ans[b[k]-'A']>=0) cnt++;\n    if (ans[c[k]-'A']>=0) cnt++;\n    if (cnt<2) return 1;\n    if (cnt==3)\n    {\n        int tmp=ans[a[k]-'A']+ans[b[k]-'A'];\n          if (tmp%n!=ans[c[k]-'A'] && (tmp+1)%n!=ans[c[k]-'A']) return 0;\n          return 1;\n    }\n    if (ans[c[k]-'A']<0)\n    {\n        int tmp=(ans[a[k]-'A']+ans[b[k]-'A'])%n;\n        if (used[tmp]&&used[(tmp+1)%n]) return 0;\n        return 1;\n    }\n    if (ans[a[k]-'A']<0)\n    {\n        int tmp=(ans[c[k]-'A']-ans[b[k]-'A']+n)%n;\n        if (used[tmp]&&used[(tmp-1+n)%n]) return 0;\n        return 1;\n    }\n    if (ans[b[k]-'A']<0)\n    {\n        int tmp=(ans[c[k]-'A']-ans[a[k]-'A']+n)%n;\n        if (used[tmp]&&used[(tmp-1+n)%n]) return 0;\n        return 1;\n    }\n}\nvoid dfs(int k, int jw)\n{\n    if (k>n){\n        for (int i=0; i<n-1; i++)\n          printf(\"%d \",ans[i]);\n        printf(\"%d\",ans[n-1]);\n        exit(0);\n    } \n    for (int i=k; i<=n; i++)\n      if (judge1(i)==0) return;\n    if (ans[a[n]-'A']+ans[b[n]-'A']>=n) return;\n    int newjz,which=0,value=-1; //which=1,2,3: a,b,c\uff1b newjz\uff1a\u8fdb\u5230\u4e0b\u4e00\u4f4d\u7684\u503c \n    int tmp1=judge(k,jw,newjz,which,value);\n    if (tmp1==0) return;\n    if (tmp1==1) //ok\n    {\n        if (which==0)\n            dfs(k+1,newjz);\n        else \n        {\n            update(k,which,value);\n            dfs(k+1,newjz);\n            goback(k,which,value);\n        }\n        return;\n    }\n    if (ans[a[k]-'A']<0) //\u679a\u4e3ea\n    {\n        for (int i=0; i<n; i++)\n          if (used[i]==0)\n          {\n              used[i]=1; ans[a[k]-'A']=i;\n              int tmp1=judge(k,jw,newjz,which,value);\n              if (tmp1==1) //\u76f4\u63a5ok \n              {\n                if (which==0)\n                    dfs(k+1,newjz);\n                else \n                  {\n                    update(k,which,value);\n                    dfs(k+1,newjz);\n                    goback(k,which,value);\n                }\n                which=0;\n              }\n              if (tmp1==-1) //\u679a\u4e3eB \n              for (int j=0; j<n; j++)\n                if (used[j]==0)\n                {\n                    used[j]=1; ans[b[k]-'A']=j;\n                    int tmp1=judge(k,jw,newjz,which,value);\n                    if (tmp1==1)\n                    {\n                        if (which==0)\n                            dfs(k+1,newjz);\n                        else \n                          {\n                            update(k,which,value);\n                            dfs(k+1,newjz);\n                            goback(k,which,value);\n                        }    \n                        which=0;            \n                    }\n                    used[j]=0; ans[b[k]-'A']=-1;                    \n                }\n              used[i]=0; ans[a[k]-'A']=-1;\n          }\n    }\n    else //\u679a\u4e3eb \n    {\n        for (int i=0; i<n; i++)\n          if (used[i]==0)\n          {\n              used[i]=1; ans[b[k]-'A']=i;\n              if (judge(k,jw,newjz,which,value)==1)\n              {\n                if (which==0)\n                    dfs(k+1,newjz);\n                else \n                  {\n                    update(k,which,value);\n                    dfs(k+1,newjz);\n                    goback(k,which,value);\n                }\n                which=0;\n              }\n              used[i]=0; ans[b[k]-'A']=-1;\n          }\n    }\n}\nint main()\n{\n    memset(ans,-1,sizeof(ans));\n    read(); \n    dfs(1,0);\n    return 0;\n}\n```",
        "postTime": 1475724855,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u5229\u7528\u7c7b\u4f3c\u9ad8\u7cbe\u5ea6\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u4e0d\u540c\u8fdb\u5236\u7684\u52a0\u6cd5\uff0c\u8fd9\u6837\u8fdb\u884c\u56de\u6eaf\u641c\u7d22\u3002\n\n\u5229\u7528**\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u53f3\u5230\u5de6**\u7684\u641c\u7d22\u987a\u5e8f\uff0c\u5982\u679c\u641c\u7d22\u5230\u7684\u8fd9\u4e2a\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\u6570\u5b57\u5df2\u7ecf\u6c42\u51fa\uff0c\u5219\u76f4\u63a5\u641c\u7d22\u4e0b\u4e00\u4e2a\uff0c\u8981\u4e0d\u7136\u5c31\u7528\u4e24\u79cd\u65b9\u6848\uff1a\u5229\u7528\u8fd9\u4e00\u5217\u53e6\u4e24\u4e2a\u6570\uff08\u5982\u679c\u5df2\u7ecf\u641c\u51fa\uff09\u6765\u6c42\u51fa\u8fd9\u4e2a\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\u6570\u5b57\uff1b\u6216\u8005\u76f4\u63a5\u4ecen-1\u52300\u641c\u7d22\u3002\n\n\u4ee3\u7801\u541b\uff0c\u4e0a\uff01\n\n```cpp\nvoid search(int t,int k,int s) //t\u8868\u793a\u7b2c\u51e0\u4e2a\u5b57\u6bcd\uff0ck\u8868\u793a\u4e24\u4e2a\u52a0\u6570\u6216\u662f\u548c\uff0cs\u7528\u6765\u50a8\u5b58\u4f59\u6570\n{\n    if(\u641c\u7d22\u5b8c\u6bd5)\n      {\u6253\u5370;\u9000\u51fa;}\n    if(\u641c\u7d22\u7684\u662f\u548c(k==2))\n    {\n      \u8ba1\u7b97\u8fd9\u4e00\u5217\u4e09\u4e2a\u6570\u5b57\u7684\u548c\u4e0e\u4f59\u6570;\n      if(\u548c\u7684\u8fd9\u4e00\u4f4d\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\u6570\u5df2\u7ecf\u6c42\u51fa)\n      {\n        if(\u901a\u8fc7\u52a0\u6570\u7b97\u51fa\u7684\u8fd9\u4f4d\u6570\u5b57\u4e0e\u548c\u7684\u8fd9\u4e00\u4f4d\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\n           \u6570\u76f8\u7b49)  \u7ee7\u7eed\u4e0b\u4e00\u5217\u7684\u641c\u7d22;\n        return;\n      }\n      \u9012\u5f52\u56de\u6eaf;\n    }\n    //\u5f53\u641c\u7d22\u7684\u662f\u52a0\u6570\u7684\u65f6\u5019\n    \u8ba1\u7b97\u8fd9\u4e00\u5217\u4e09\u4e2a\u5b57\u6bcd\u6240\u4ee3\u8868\u7684\u6570\u5b57\uff08\u5305\u62ec\u672a\u6c42\u51fa\uff09;\n    if(\u4e09\u4e2a\u6570\u5b57\u90fd\u5df2\u6c42\u51fa\uff0c\u5e76\u4e14\u52a0\u6570\u52a0\u4e0a\u4f59\u6570%n\u4e0d\u7b49\u4e8e\u548c)\n      return;\n    \u7528\u4e00\u4e2a\u53d8\u91cfnow\u6765\u50a8\u5b58\u73b0\u5728\u7684\u8fd9\u4e00\u4f4d\u5b57\u6bcd;\n    if(now\u6240\u4ee3\u8868\u7684\u6570\u5b57\u8fd8\u672a\u6c42\u51fa)\n    {\n      if(\u53e6\u4e00\u4e2a\u52a0\u6570\u4ee5\u53ca\u548c\u6240\u4ee3\u8868\u7684\u6570\u5b57\u90fd\u5df2\u7ecf\u6c42\u51fa)\n        \u5229\u7528\u52a0\u6570\u4ee5\u53ca\u548c\u6c42\u51fa\u8fd9\u4e2a\u6570;\u9012\u5f52\u56de\u6eaf;\n\n      else\n        \u4ecen-1\u5faa\u73af\u52300\uff0c\u9012\u5f52\u56de\u6eaf\uff1b\n      ans[now]\u590d\u539f\u81f3-1;\n    }\n    else \u641c\u7d22\u4e0b\u4e00\u4e2a;\n}\n```\n\n**by Huangc**\n",
        "postTime": 1393663181,
        "uid": 160,
        "name": "Huangc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1092 \u3010\u866b\u98df\u7b97\u3011"
    },
    {
        "content": "# [\u866b\u98df\u7b97](https://www.luogu.com.cn/problem/P1092)\n\n- \u65e2\u7136\u653e\u5728\u8bd5\u70bc\u573a-PJ-\u6df1\u641c\u91cc\u9762\uff0c\u5c31\u8bf4\u660e\u6df1\u641c\u53ef\u505a\u3002\n\n- \u8003\u8651\u6df1\u641c\u3002\n\n- \u5f53\u7136\u662f\u8981\u641c\u7d22\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4ec0\u4e48\uff0c\u8003\u8651\u641c\u7d22\u987a\u5e8f\u3002\n\n### \u6309\u5b57\u6bcd\u987a\u5e8f\u641c\u7d22\n\n- \u66b4\u529b\u679a\u4e3e\u6240\u6709\u5168\u6392\u5217\u662fO(n!)\u7684\u3002\u8fc7\u4e0d\u53bb\u3002\n\n- \u8003\u8651\u526a\u679d\u3002\n\n- \u89c1[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/zzlzk/solution-p1092)\u3002\n\n### \u6309\u7b97\u5f0f\u987a\u5e8f\u641c\u7d22\n\n- \u7ad6\u5f0f\u8ba1\u7b97\u662f\u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97\u7684\u3002\u8003\u8651\u4ece\u53f3\u5f80\u5de6\u4f9d\u6b21\u4f7f\u6bcf\u4e00\u4f4d\u7684\u7ad6\u5f0f\u90fd\u6210\u7acb\u3002\n\n- \u5047\u8bbe\u5f53\u524d\u4e3a\u7684\u7ad6\u5f0f\u4e3a\n\n```\n\ta + b + d = c//d\u4e3a\u4e0a\u6b21\u641c\u7d22\u6c42\u5f97\u7684\u8fdb\u4f4d\u3002\n```\n\n- \u82e5a\uff0cb\uff0cc\u5747\u5df2\u77e5\n    - \u82e5a + b + d = c\n        - \u641c\u7d22\u4e0b\u4e00\u4f4d\n    - \u5426\u5219\n        - \u526a\u679d\n- \u82e5a\uff0cb\u5df2\u77e5\n    - \u6c42\u51fac\n    - \u82e5c\u4e0e\u4e4b\u524d\u6c42\u51fa\u7684\u67d0\u6570\u76f8\u7b49\n        - \u526a\u679d\n    - \u5426\u5219\n        - \u641c\u7d22\u4e0b\u4e00\u4f4d\n- \u82e5\u4ec5a\u5df2\u77e5\n    - \u679a\u4e3eb\n    - \u5f53\u4f5ca\uff0cb\u5df2\u77e5\u6765\u505a\n- \u4ee5\u6b64\u7c7b\u63a8\u3002\n    \n\n- [231\u884c\u7684\u4ee3\u7801](https://www.luogu.com.cn/paste/z0fomlrq)\u3002\n- \u4f46\u662fTLE\u4e86\u4e00\u4e2a\u70b9\u3002\n\n- \u8003\u8651\u526a\u679d\u3002\uff08\u597d\u5427\u6211\u627f\u8ba4\u600e\u4e48\u641c\u90fd\u5f97\u526a\u679d\uff09\n\n- \u7efc\u5408[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/zzlzk/solution-p1092)\u4e2d\u7684\u526a\u679d\uff0c\u53ef\u4ee5AC\u3002\n\n- [244\u884c\u7684AC\u4ee3\u7801](https://www.luogu.com.cn/paste/s8cik0k6)\u3002",
        "postTime": 1578220290,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 \u6d1b\u8c37 P1092"
    }
]