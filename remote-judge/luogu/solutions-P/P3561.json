[
    {
        "content": "\u677f\u5b50\u9898\uff1ahttps://www.luogu.com.cn/problem/P3561\n\n### \u6b64\u9898\u9898\u610f\n\n\u7ed9\u4f60\u5b9a\u4e00\u4e2a\u7ade\u8d5b\u56fe\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u6c42\u51fa\u4e00\u6761\u4e0d\u91cd\u590d\u7ecf\u8fc7\u70b9\u7684\u8def\u5f84\uff0c\u4f7f\u5176\u7ecf\u8fc7\u7684\u70b9\u6700\u591a\u3002$1\\le n\\le 2000$\u3002\n\n### \u7ade\u8d5b\u56fe\u7684\u4e00\u4e9b\u6027\u8d28\n\n1\uff0c\u7f29\u70b9\u4e4b\u540e\u662f\u4e00\u6761\u94fe\n\n\u51c6\u786e\u5730\u8bf4\u4e0d\u662f\u4e00\u6761\u94fe\uff0c\u800c\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u62d3\u6251\u5e8f\u5728\u524d\u7684\u8fde\u901a\u5206\u91cf\uff0c\u90fd\u4f1a\u5411\u62d3\u6251\u5e8f\u518d\u540e\u7684\u8fde\u901a\u5206\u91cf\u8fde\u8fb9\u3002\u7531\u7ade\u8d5b\u56fe\u7684\u5b9a\u4e49\u6613\u77e5\u3002\n\n\u90a3\u4e48\u8fd9\u4e48\u770b\u8fd9\u4e2a\u6027\u8d28\u5c31\u5f88\u663e\u7136\u4e86\u3002\u4efb\u610f\u4e24\u4e2a\u62d3\u6251\u5e8f\u76f8\u90bb\u7684\u8fde\u901a\u5206\u91cf\u5fc5\u6709\u8fde\u8fb9\u3002\n\n2\uff0c\u7ade\u8d5b\u56fe\u5fc5\u6709\u54c8\u5bc6\u987f\u901a\u8def\n\n\u8fd9\u4e2a\u53ef\u4ee5\u6784\u9020\u8bc1\u660e\uff0c\u4e0b\u6587\u5c06\u4f1a\u63d0\u5230\u3002\n\n3\uff0c\u5f3a\u8fde\u901a\u7ade\u8d5b\u56fe\u5fc5\u6709\u54c8\u5bc6\u987f\u56de\u8def\u3002\n\n\u8fd9\u4e2a\u4e5f\u662f\u6784\u9020\u8bc1\u660e\uff0c\u8fd8\u662f\u4e0b\u6587\u4f1a\u63d0\u5230\u3002\n\n### \u505a\u6cd5\n\n\u90a3\u4e48\u6b64\u9898\u505a\u6cd5\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5148\u7f29\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6c42\u54c8\u5bc6\u987f\u56de\u8def\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5bf9\u4efb\u610f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4efb\u610f\u70b9\u8fdb\uff0c\u4efb\u610f\u70b9\u51fa\u4e86\u3002\n\n\u90a3\u4e48\u91cd\u70b9\u662f\u5982\u4f55\u6c42\u54c8\u5bc6\u987f\u901a\u8def/\u56de\u8def\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a $O(n^2)$ \u7684\u6784\u9020\u3002\u8bb0 $x\\to y$ \u4ee3\u8868\u5b58\u5728 $x$ \u5230 $y$ \u7684\u8def\u5f84\u3002\n\n\u9996\u5148\u6784\u9020\u54c8\u5bc6\u987f\u901a\u8def\uff0c\u8003\u8651\u589e\u91cf\u6784\u9020\u3002\n\n\u5047\u8bbe\u6211\u5df2\u7ecf\u6c42\u51fa\u524d $i-1$ \u4e2a\u70b9\u7684\u4e00\u4e2a\u54c8\u5bc6\u987f\u901a\u8def\uff0c\u8003\u8651\u5c06 $i$ \u52a0\u5165\u3002\u8bbe\u524d\u9762\u7684\u54c8\u5bc6\u987f\u901a\u8def\u8d77\u70b9\u4e3a $s$ \u7ec8\u70b9\u4e3a $t$\uff0c\u6bcf\u4e2a\u70b9 $x$ \u4e0b\u4e00\u4e2a\u70b9\u4e3a $nxt_x$\u3002\u5982\u679c $t\\to i$ \u6216\u8005 $i\\to s$ \u90a3\u4e48\u76f4\u63a5\u5c06 $i$ \u52a0\u5165\u8fd9\u6761\u94fe\u5373\u53ef\uff0c\u5c06 $t$ \u6216 $s$ \u8bbe\u6210 $i$\u3002\n\n\u5426\u5219\u4e00\u5b9a\u662f\u4e0b\u9762\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nr3i76pb.png)\n\n\u90a3\u4e48\u663e\u7136\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a $x$ \u4f7f\u5f97 $x\\to i,i\\to nxt_x$\u3002\u5c06 $i$ \u63d2\u5230 $x,nxt_x$ \u4e4b\u95f4\uff0c\u5373\u4ee4 $nxt_i=nxt_x,nxt_x=i$ \u5373\u53ef\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5b8c\u6210\u4e86\u54c8\u5bc6\u987f\u901a\u8def\u7684\u6784\u9020\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u4e4b\u540e\u8003\u8651\u5f3a\u8fde\u901a\u7ade\u8d5b\u56fe\u7684\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u9996\u5148\u6c42\u51fa\u54c8\u5bc6\u987f\u901a\u8def\uff0c\u8fd8\u662f\u8bbe\u8d77\u70b9\u4e3a $s$\uff0c\u7ec8\u70b9\u4e3a $t$\u3002\n\n\u8003\u8651\u627e\u5230\u7b2c\u4e00\u4e2a $x$ \u4f7f\u5f97 $x\\to s$\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u53ef\u4ee5\u6210\u73af\u7684\u4f4d\u7f6e\uff0c\u8bbe\u4e3a\u65b0\u7684 $t$\u3002\u73b0\u5728\u5f97\u5230\u4e86\u4e00\u4e2a\u73af $s-> nxt_s-> \\dots -> t-> s$\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u628a $t-> s$ \u8fd9\u6761\u8fb9\u663e\u793a\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4 $nxt_t$ \u8fd8\u662f\u54c8\u5bc6\u987f\u901a\u8def\u4e0a\u7684\u4e0b\u4e00\u4e2a\u70b9\u3002\u53e6\u5916\u7531\u4e8e\u8fd9\u4e2a\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u4e00\u4e2a $x$\u3002\n\n\u7136\u540e\u8003\u8651\u52a0\u5165 $nxt_t$\uff0c\u8fd8\u662f\u8bbe\u4e3a $i$\u3002\n\n\u5982\u679c $i\\to s$\uff0c\u90a3\u4e48\u76f4\u63a5\u6269\u5c55\u5373\u53ef\u3002\u5426\u5219\u6211\u4eec\u76f4\u63a5\u627e\u5230\u7b2c\u4e00\u4e2a $x$ \u4f7f\u5f97 $i\\to x$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u6784\u9020\u51fa\u4e0b\u9762\u8fd9\u6837\u7684\u8def\u5f84\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9dln2v5z.png)\n\n\u5373\u8bbe $x$ \u7684\u524d\u4e00\u4e2a\u662f $y$\uff0c\u90a3\u4e48\u6784\u9020 $i-> x-> \\dots->t-> s-> \\dots-> y->i$\u3002\u6b64\u65f6\u4e3a\u4e86\u4fdd\u8bc1 $nxt_t$ \u8fd8\u662f\u54c8\u5bc6\u987f\u901a\u8def\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u4ee4 $s=t,t=i$\uff0c\u4fee\u6539 $nxt_s$ \u4e3a\u539f\u6765\u7684 $s$\uff0c$nxt_y$ \u4e3a $i$ \u5373\u53ef\u3002\u7531\u4e8e $x$ \u662f\u7b2c\u4e00\u4e2a $i\\to x$\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709 $y\\to i$\u3002\n\n\u5982\u679c\u538b\u6839\u627e\u4e0d\u5230 $x$ \u5462\uff1f\u4ed4\u7ec6\u60f3\u60f3\u53d1\u73b0\u786e\u5b9e\u6709\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u53ea\u6709\u540e\u7ee7\u8282\u70b9\u6709\u4e00\u4e2a\u8fde\u5411\u524d\u9762\u90a3\u4e48\u5c31\u4fdd\u8bc1\u4e86\u5f3a\u8fde\u901a\u7684\u6027\u8d28\u3002\u65e2\u7136\u5982\u6b64\uff0c\u90a3\u8fd9\u4e9b\u70b9\u4e0d\u5982\u76f4\u63a5\u6446\u70c2\uff0c\u8ba9\u540e\u9762\u90a3\u4e2a\u70b9\u53bb\u5f80\u524d\u8fde\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/htufw549.png)\n\n\u5373 $i->x->\\dots ->t->s->\\dots->y->nxt_t->\\dots->i$\u3002\u6ce8\u610f\u8fd9\u91cc\u8fd9\u91cc $nxt_t$ \u5373 $t$ \u5728\u54c8\u5bc6\u987f\u901a\u8def\u4e2d\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5373\u56fe\u4e2d\u5706\u5708\u4e2d\u6700\u5de6\u8fb9\u7684\u70b9\u3002\u7136\u540e\u548c\u4e0a\u9762\u7c7b\u4f3c\uff0c\u53ea\u9700\u628a $nxt_y=i$ \u4fee\u6539\u4e3a $nxt_y=nxt_t$\uff0c\u8fd9\u91cc $t$ \u662f\u539f\u6765\u7684 $t$\u3002\u6ce8\u610f\u7531\u4e8e\u7ea2\u5708\u4e2d\u7684\u70b9\u6ca1\u6709\u5411\u524d\u9762\u8fde\u8fb9\uff0c\u90a3\u4e48\u524d\u9762\u7684\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u5411\u5176\u4e2d\u7684\u70b9\u8fde\u8fb9\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709 $y\\to nxt_t$\u3002\n\n\u7136\u540e\u8fd9\u6837\u4e00\u76f4\u8dd1\uff0c\u7531\u4e8e\u5f3a\u8fde\u901a\uff0c\u6240\u4ee5 $x$ \u6700\u540e\u4e00\u5b9a\u5b58\u5728\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u6c42\u51fa\u4e00\u6761\u54c8\u5bc6\u987f\u56de\u8def\u5176\u4e2d\u7684\u4e00\u6761\u94fe\uff0c\u5176\u4e2d\u8d77\u70b9\u662f $s$\uff0c\u7ec8\u70b9\u662f $t$ \u4e14 $t\\to s$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u6d41\u7a0b\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u597d\u50cf\u53ef\u4ee5\u505a\u5230\u66f4\u4f18\u590d\u6742\u5ea6\uff0c\u8fd8\u662f\u7b97\u4e86/qd\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n\u677f\u5b50\u9898\uff1ahttps://www.luogu.com.cn/problem/P3561\n\n\u53d8\u91cf\u7a0d\u6709\u4e0d\u540c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define eb emplace_back\nusing namespace std;\nconst int maxn = 2005;\ntemplate <typename T>\nvoid read(T &x) {\n\tT flag = 1;\n\tchar ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) if (ch == '-') flag = -1;\n\tfor (x = 0; isdigit(ch); ch = getchar()) x = x * 10 + ch - '0';\n\tx *= flag;\n}\nint a[maxn][maxn];\nint n, dfn[maxn], low[maxn], stk[maxn], col[maxn], top, Dfn, cnt;\nbool vis[maxn];\nvector<int> vec[maxn], G[maxn], V[maxn], ans[maxn];\nint in[maxn];\nvoid tarjan(int u) {\n\tdfn[u] = low[u] = ++Dfn;\n\tstk[++top] = u;\n\tvis[u] = 1;\n\tfor (int v : vec[u]) {\n\t\tif (!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t} else if (vis[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u]) {\n\t\tcnt++;\n\t\twhile (stk[top] != u){\n\t\t\tcol[stk[top]] = cnt;\n\t\t\tvis[stk[top]] = 0;\n\t\t\ttop--;\n\t\t}\n\t\tcol[u] = cnt;\n\t\tvis[u] = 0;\n\t\ttop--;\n\t}\n}\nint nxt[maxn];\nqueue<int> q;\nvoid solve(int c) {\n\t// \u6c42\u5f3a\u8fde\u901a\u5206\u91cf c \u7684\u4e00\u6761\u54c8\u5bc6\u987f\u56de\u8def \n\t// \u5148\u6c42\u4e00\u6761\u54c8\u5bc6\u987f\u901a\u8def \n\tif (V[c].size() == 1)\n\t\treturn;\n\tint s = V[c][0], t = s;\n\tfor (int i = 1; i < (int)V[c].size(); i++) {\n\t\tint x = V[c][i];\n\t\tif (a[t][x]) nxt[t] = x, t = x;\n\t\telse if (a[x][s]) nxt[x] = s, s = x;\n\t\telse\n\t\t\tfor (int j = s; j != t; j = nxt[j])\n\t\t\t\tif (a[j][x] && a[x][nxt[j]]) \n\t\t\t\t\t{ nxt[x] = nxt[j]; nxt[j] = x; break; }\n\t}\n\tt = 0;\n\tfor (int i = nxt[s]; i != 0; i = nxt[i]){\n\t\tif (t) {\n\t\t\tif (a[i][s])\n\t\t\t\t{ t = i; continue; }\n\t\t\tfor (int j = s, k = nxt[s]; j != t; j = k, k = nxt[k]) {\n\t\t\t\tif (a[i][k]) \n\t\t\t\t\t{ nxt[j] = nxt[t]; nxt[t] = s; s = k; t = i; break; }\n\t\t\t}\n\t\t} else if (a[i][s]) t = i;\n\t}\n\tnxt[t] = s;\n}\nint pos[maxn];\nint main() {\n\tread(n);\n\tfor (int i = 2; i <= n; i++)\n\t\tfor (int j = 1, x; j <= i - 1; j++){\n\t\t\tread(x);\n\t\t\tif (x)\n\t\t\t\tvec[j].eb(i), a[j][i] = 1;\n\t\t\telse\n\t\t\t\tvec[i].eb(j), a[i][j] = 1;\n\t\t}\n\tfor (int i = 1; i <= n; i++) if (!dfn[i]) tarjan(i);\n\tfor (int i = 1; i <= n; i++) V[col[i]].eb(i);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j : vec[i])\n\t\t\tif (col[i] != col[j])\n\t\t\t\tG[col[i]].eb(col[j]), in[col[j]]++;\n\tfor (int i = 1; i <= cnt; i++)\n\t\tif (!in[i]) q.push(i);\n\ttop = 0;\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tstk[++top] = u; pos[u] = top;\n\t\tfor (int v : G[u]) {\n\t\t\tin[v]--;\n\t\t\tif (!in[v]) q.push(v);\n\t\t}\n\t}\n\tfor (int i = 1; i <= top; i++)\n\t\tsolve(stk[i]);\n\tfor (int i = 1; i <= n; i++) {\n\t\tint lst = i, now = pos[col[i]];\n\t\twhile (1) {\n\t\t\tif (V[stk[now]].size() == 1) {\n\t\t\t\tans[i].eb(lst);\n\t\t\t\tif (now == top) break;\n\t\t\t\tlst = V[stk[++now]][0];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tans[i].eb(lst);\n\t\t\tfor (int x = nxt[lst]; x != lst; x = nxt[x])\n\t\t\t\tans[i].eb(x);\n\t\t\tif (now == top) break;\n\t\t\tlst = V[stk[++now]][0];\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tprintf(\"%d \", (int)ans[i].size());\n\t\tfor (int j : ans[i])\n\t\t\tprintf(\"%d \", j);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n### reference\n\nhttps://www.cnblogs.com/TheRoadToTheGold/p/8439160.html#_label1\n\nhttps://www.cnblogs.com/Hs-black/p/13749764.html\n\n# \u6700\u540e\u7684\u6700\u540e\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jh934nfg.png)",
        "postTime": 1636041555,
        "uid": 328405,
        "name": "Gemini7X",
        "ccfLevel": 9,
        "title": "\u7ade\u8d5b\u56fe\u54c8\u5bc6\u987f\u8def\u5f84"
    },
    {
        "content": "#### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ ($2\\le n\\le 2000$) \u4e2a\u70b9\u7684\u7ade\u8d5b\u56fe\uff0c\u627e\u5230\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u7684\u7ecf\u8fc7\u70b9\u6570\u6700\u591a\u7684\u7b80\u5355\u8def\u5f84\u3002\n\n#### \u9898\u89e3\n\n\u4f17\u6240\u5468\u77e5 $\\ge 3$ \u4e2a\u70b9\u7684\u5f3a\u8fde\u901a\u7ade\u8d5b\u56fe\u6709\u54c8\u5bc6\u987f\u56de\u8def\uff0c\u56e0\u6b64\u4ece $u$ \u5f00\u59cb\u6700\u957f\u7684\u8def\u5f84\u5c31\u662f\u62d3\u6251\u5e8f\u5728 $u$ \u6240\u5c5e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e4b\u540e (\u5305\u62ec\u5176\u672c\u8eab) \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u54c8\u5bc6\u987f\u8def\u5f84\u76f8\u8fde\u3002\u5728\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u627e\u5230\u54c8\u5bc6\u987f\u56de\u8def\u5373\u53ef\u3002\u627e\u54c8\u5bc6\u987f\u56de\u8def\u65f6\uff0c\u9996\u5148\u627e\u5230\u4e00\u6761\u54c8\u5bc6\u987f\u8def\u5f84 (\u6309\u4efb\u610f\u987a\u5e8f\u52a0\u70b9\u5373\u53ef)\uff0c\u7136\u540e\u627e\u5230\u8def\u5f84\u4e0a\u7b2c\u4e00\u4e2a\u5411\u7b2c\u4e00\u4e2a\u70b9\u6709\u8fb9\u7684\u70b9\uff0c\u4f5c\u4e3a\u521d\u59cb\u7684\u73af\u3002\u4e4b\u540e\u6bcf\u6b21\u627e\u5230\u7b2c\u4e00\u4e2a\u5411\u73af\u4e2d\u70b9\u6709\u8fb9\u7684\u70b9\uff0c\u5c06\u5b83\u53ca\u4e4b\u524d\u672a\u52a0\u5165\u7684\u70b9\u52a0\u5165\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2)$\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\nint n;\nstd::vector<std::vector<bool>> g;\nint cntScc, dfsClock;\nstd::vector<int> dfn, low, belong;\nstd::vector<int> stk;\nstd::vector<std::vector<int>> ans;\nstd::vector<std::vector<int>> h;\nvoid tarjan(int u) {\n    dfn[u] = low[u] = dfsClock++;\n    stk.push_back(u);\n    for (int v = 0; v < n; ++v) {\n        if (g[u][v]) {\n            if (dfn[v] == -1) {\n                tarjan(v);\n                low[u] = std::min(low[u], low[v]);\n            } else if (belong[v] == -1) {\n                low[u] = std::min(low[u], dfn[v]);\n            }\n        }\n    }\n    if (dfn[u] == low[u]) {\n        int v;\n        do {\n            v = stk.back();\n            belong[v] = cntScc;\n            stk.pop_back();\n        } while (v != u);\n        ++cntScc;\n    }\n}\nauto solve(std::vector<int> v) {\n    if (int(v.size()) == 1)\n        return v;\n    std::vector<int> h;\n    for (auto u : v)\n        h.insert(std::find_if(h.begin(), h.end(), [&](int v) {return g[u][v];}), u);\n    auto it = std::find_if(h.begin(), h.end(), [&](int v) {return g[v][h[0]];}) + 1;\n    std::vector<int> c(h.begin(), it);\n    while (it != h.end()) {\n        auto r = it;\n        while (std::find_if(c.begin(), c.end(), [&](int v) {return g[*r][v];}) == c.end())\n            ++r;\n        auto p = c.begin();\n        while (p + 1 != c.end() && !(g[*p][*it] && g[*r][*(p + 1)]))\n            ++p;\n        c.insert(p == c.end() ? c.begin() : p + 1, it, r + 1);\n        it = r + 1;\n    }\n    return c;\n}\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    std::cin >> n;\n    g.assign(n, std::vector<bool>(n));\n    dfn.assign(n, -1);\n    low.resize(n);\n    belong.assign(n, -1);\n    for (int i = 0; i < n; ++i) {\n        for (int j = 0; j < i; ++j) {\n            int x;\n            std::cin >> x;\n            g[i][j] = x ^ 1;\n            g[j][i] = x;\n        }\n    }\n    for (int i = 0; i < n; ++i)\n        if (dfn[i] == -1)\n            tarjan(i);\n    h.resize(cntScc);\n    ans.resize(n);\n    for (int i = 0; i < n; ++i)\n        h[belong[i]].push_back(i);\n    for (int i = 0; i < cntScc; ++i) {\n        h[i] = solve(h[i]);\n        for (auto it = h[i].begin(); it != h[i].end(); ++it) {\n            int u = *it;\n            ans[u].insert(ans[u].end(), it, h[i].end());\n            ans[u].insert(ans[u].end(), h[i].begin(), it);\n            for (int j = i - 1; j >= 0; --j)\n                ans[u].insert(ans[u].end(), h[j].begin(), h[j].end());\n        }\n    }\n    for (int i = 0; i < n; ++i) {\n        std::cout << ans[i].size();\n        for (int u : ans[i])\n            std::cout << \" \" << u + 1;\n        std::cout << \"\\n\";\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1585553461,
        "uid": 149656,
        "name": "jiangly",
        "ccfLevel": 10,
        "title": "P3561 [POI2017]Turysta \u9898\u89e3"
    }
]