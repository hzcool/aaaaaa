[
    {
        "content": "\u521a\u5b66\u7ebf\u6027\u57fa\u2026\u2026\u6c34\u4e00\u53d1\u5427\uff08\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u8981\u6c42\u7684\u662f\u533a\u95f4\u5f02\u6216\u6700\u5927\u548c\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\u662f\u4e2axxx\u6811\u5957\u7ebf\u6027\u57fa\u7684\u505a\u6cd5\u3002\n\n\u53c8\u56e0\u4e3a\u7ebf\u6027\u57fa\u4e0d\u652f\u6301\u51cf\uff0c\u652f\u6301 $O(\\log^2 V)$\uff08\u5176\u4e2d $V$ \u8868\u793a\u503c\u57df\uff09\u52a0\uff0c\u6240\u4ee5\u8003\u8651\u62ff\u7ebf\u6bb5\u6811\u5957\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u533a\u95f4\u5f02\u6216\u7684\u4fee\u6539\u5c31\u5f88\u96be\u53d7\u2026\u2026\u53c8\u6ca1\u6cd5\u76f4\u63a5\u4e0a\u6807\u8bb0\u2026\u2026\n\n\u8003\u8651\u5dee\u5206\uff0c\u8bbe $b_1=a_1$\uff0c$b_i=a_i \\operatorname{xor} a_{i-1}$\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u533a\u95f4\u4fee\u6539\u8f6c\u53d8\u6210\u5355\u70b9\u4fee\u6539\u4e86\u3002\u800c\u5355\u70b9\u4fee\u6539\u663e\u7136\u662f\u53ef\u4ee5 $O(\\log V\\cdot\\log N)$ \u5b8c\u6210\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a$a_i=b_1\\operatorname{xor}b_2\\operatorname{xor}b_3\\operatorname{xor}\\cdots\\operatorname{xor}b_i$\u3002\n\n\u518d\u53bb\u8003\u8651\u7ebf\u6027\u57fa\uff1a\u82e5\u6709 $v=a_{p_1}\\operatorname{xor}a_{p_2}\\operatorname{xor}\\cdots\\operatorname{xor}a_{p_k}$\uff0c\u5c06 $a$ \u4ee5 $a_l$ \u5f02\u6216 $b$ \u7684\u533a\u95f4\u5f02\u6216\u548c\u5f62\u5f0f\u4ee3\u5165\u5c55\u5f00\uff0c\u53c8\u56e0\u4e3a $x\\operatorname{xor}x\\operatorname{xor}x=x$\uff0c\u6240\u4ee5\u6700\u540e\u6240\u6709\u9879\u90fd\u53ea\u4f1a\u5269\u4e0b $\\leq 1$ \u4e2a\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u5c31\u8bc1\u660e\u4e86 $a_{[l,r]}$ \u7684\u7ebf\u6027\u57fa\u548c $a_{l}\\cup b_{[l+1,r]}$ \u7684\u7ebf\u6027\u57fa\u662f\u76f8\u7b49\u7684\u3002\n\n\u6240\u4ee5\u73b0\u5728\u5c31\u53ef\u4ee5\u7ef4\u62a4 $b$ \u7684\u7ebf\u6027\u57fa\uff0c\u6bcf\u6b21\u63d0\u53d6\u51fa\u4e00\u6bb5\u533a\u95f4\u7684\u7ebf\u6027\u57fa\u540e\u518d\u63d2\u5165 $a_l$ \u5373\u53ef\u3002\u6ce8\u610f $l=r$ \u8981\u7279\u5224\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86~\n\n\u6700\u7ec8\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O((N+M) \\log N \\log ^2 V)$~~\uff08\u8bdd\u8bf4lxl\u786e\u5b9e\u6ca1\u51e0\u4e2a3log\u7684\u9898\u5462\uff09~~\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(N \\log V)$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\u5c31\u662f\u8981\u7528\u53e6\u5916\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff08\u6211\u8fd9\u91cc\u7528\u7684\u662f\u6811\u72b6\u6570\u7ec4\uff09\u6765\u7ef4\u62a4 $b$\uff0c\u56e0\u4e3a\u8981\u505a\u5355\u70b9\u4fee\u6539/\u533a\u95f4\u67e5\u8be2\uff08\u56e0\u4e3a\u8981\u5355\u70b9\u67e5\u8be2 $a$ \u7684\u503c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5728 $b$ \u4e0a\u6c42\u524d\u7f00\u548c\uff09\u3002\u8fd9\u4e2a\u64cd\u4f5c\u663e\u7136\u662f $O(M \\log N)$ \u7684\uff0c\u4e0d\u5f71\u54cd\u590d\u6742\u5ea6\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nint n, m, a[50005], c[50005];\n//\u7ebf\u6027\u57fa\nstruct LineBase {\n\tint a[35];\n\t//\u5f80\u7ebf\u6027\u57fa\u91cc\u9762\u63d2\u5165\u4e00\u4e2a\u503cx\n\tinline void Insert(int x) {\n\t\tfor (register int i = 29;~i;i--) {\n\t\t\tif (x & (1 << i)) {\n\t\t\t\tif (a[i]) x ^= a[i];\n\t\t\t\telse {\n\t\t\t\t\ta[i] = x;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n//\u4e24\u4e2a\u7ebf\u6027\u57fa\u5408\u5e76\ninline LineBase Merge(LineBase x, LineBase y) {\n\tfor (register int i = 29;i >= 0;i--) {\n\t\tif (y.a[i]) x.Insert(y.a[i]);\n\t}\n\treturn x;\n}\n//\u7ef4\u62a4\u7ebf\u6027\u57fa\u7684\u7ebf\u6bb5\u6811\nstruct Segtree {\n\tLineBase nd[200005];\n\t//\u5efa\u6811\n\tinline void Init(int p, int l, int r) {\n\t\tfor (register int i = l;i <= r;i++) nd[p].Insert(a[i]);\n\t\tif (l == r) return;\n\t\tregister int mid = l + r >> 1;\n\t\tInit(p << 1, l, mid);\n\t\tInit(p << 1 | 1, mid + 1, r);\n\t\tnd[p] = Merge(nd[p << 1], nd[p << 1 | 1]);\n\t}\n\t//\u5355\u70b9\u4fee\u6539\n\tinline void Modify(int p, int pl, int pr, int idx, int v) {\n\t\tif (pl == pr) {\n\t\t\tmemset(nd[p].a, 0, sizeof(nd[p].a));//\u56e0\u4e3a\u53f6\u5b50\u7684\u7ebf\u6027\u57fa\u91cc\u9762\u53ea\u67091\u4e2a\u6570\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u91cd\u6784\n\t\t\tnd[p].Insert(a[pl] ^= v);\n\t\t\treturn;\n\t\t}\n\t\tregister int mid = pl + pr >> 1;\n\t\tif (idx <= mid) Modify(p << 1, pl, mid, idx, v);\n\t\telse Modify(p << 1 | 1, mid + 1, pr, idx, v);\n\t\tnd[p] = Merge(nd[p << 1], nd[p << 1 | 1]);\n\t}\n\t//\u5957\u8def\u533a\u95f4\u67e5\u8be2\n\tinline LineBase Query(int p, int pl, int pr, int l, int r) {\n\t\tif (pl == l && pr == r) return nd[p];\n\t\tregister int mid = pl + pr >> 1;\n\t\tif (mid >= r) return Query(p << 1, pl, mid, l, r);\n\t\telse if (mid + 1 <= l) return Query(p << 1 | 1, mid + 1, pr, l, r);\n\t\telse return Merge(Query(p << 1, pl, mid, l, mid), Query(p << 1 | 1, mid + 1, pr, mid + 1, r));\n\t}\n};\n\nSegtree sgt;\n\n//\u7528\u6765\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u7684\u6811\u72b6\u6570\u7ec4\n\ninline int LowBit(int x) {\n\treturn x & -x;\n}\n\ninline void Update(int i, int x) {\n\tfor (register int j = i;j <= n;j += LowBit(j)) c[j] ^= x;\n}\n\ninline int Query(int i) {\n\tregister int ans = 0;\n\tfor (register int j = i;j >= 1;j -= LowBit(j)) ans ^= c[j];\n\treturn ans;\n}\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (register int i = 1;i <= n;i++) a[i] = qread();\n}\n\ninline void Solve() {\n\tfor (register int i = n;i >= 2;i--) a[i] ^= a[i - 1];\n\tfor (register int i = 1;i <= n;i++) Update(i, a[i]);\n\tsgt.Init(1, 1, n);\n\tfor (register int i = 1;i <= m;i++) {\n\t\tregister int opt = qread(), l = qread(), r = qread(), v = qread();\n\t\tif (opt == 1) { // \u4fee\u6539\u64cd\u4f5c\uff0c\u4fee\u6539\u4f4d\u7f6el\u548c\u4f4d\u7f6er+1\n\t\t\tUpdate(l, v);\n\t\t\tsgt.Modify(1, 1, n, l, v);\n\t\t\tif (r < n) {\n\t\t\t\tUpdate(r + 1, v);\n\t\t\t\tsgt.Modify(1, 1, n, r + 1, v);\n\t\t\t}\n\t\t} else {//\u67e5\u8be2\u64cd\u4f5c\n\t\t\tregister int k = Query(l);//\u6c42a[l]\u7684\u503c\n\t\t\tif (l == r) {\n\t\t\t\tprintf(\"%d\\n\", Max(k ^ v, v));//\u7279\u5224l=r\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u53ea\u67092\u79cd\u53ef\u80fd\uff0c\u8ba8\u8bba\u5373\u53ef\n\t\t\t} else {\n\t\t\t\tLineBase cur = sgt.Query(1, 1, n, l + 1, r);//\u53d6\u51fa\u7ebf\u6027\u57fa\n\t\t\t\tcur.Insert(k);\n\t\t\t\t//\u5728\u7ebf\u6027\u57fa\u91cc\u9762\u6c42\u6700\u5927\n\t\t\t\tfor (register int i = 29;i >= 0;i--) {\n\t\t\t\t\tif ((v ^ cur.a[i]) > v) v = (v ^ cur.a[i]);\n\t\t\t\t}\n\t\t\t\tprintf(\"%d\\n\", v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tRead();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}//\u5b8c\u7ed3\u6492\u82b1~\n\n```\n\n",
        "postTime": 1585130653,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]\u65e0\u529b\u56de\u5929NOI2017\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u592a\u795e\u5566QAQ\r\n\r\n\u524d\u7f6e\u829d\u58eb\uff1a\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6027\u57fa\u3002\r\n\r\n\u6c42\u6700\u5927\u5f02\u6216\u503c\uff0c\u4e0d\u96be\u60f3\u5230\u7ebf\u6027\u57fa\u3002\u7531\u4e8e\u8981\u6c42\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\uff0c\u91c7\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7ebf\u6027\u57fa\u3002\r\n\r\n\u4f46\u662f\u533a\u95f4\u4fee\u6539\u5f88\u68d8\u624b\uff08\u60f3\u4e86\u6211\u4e24\u4e2a\u5c0f\u65f6QAQ\u6211\u597d\u83dc\u83dc\uff09\u3002\u8003\u8651\u5dee\u5206\uff0c\u5c06\u533a\u95f4\u4fee\u6539\u8f6c\u5316\u4e3a\u4e24\u4e2a\u5355\u70b9\u4fee\u6539\u3002\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5728\u5dee\u5206\u540e\u7684\u5e8f\u5217\u4e0a\u6c42\u7b54\u6848\u3002\r\n\r\n\u8bb0$\\oplus$\u4e3a\u5f02\u6216\u64cd\u4f5c\uff0c\u5e8f\u5217$b$\u6ee1\u8db3$b_i=a_i \\oplus a_{i-1}$\uff0c\u5219\u6709\uff1a\r\n\r\n$$a_x=b_1 \\oplus b_2 \\oplus b_3 \\oplus ....\\oplus b_x$$\r\n\r\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e$a$\u5e8f\u5217\u7684\u533a\u95f4$[l,r]$\uff0c\u5176\u4e2d\u4efb\u610f\u4e00\u79cd\u6570\u5b57\u9009\u9009\u53d6\u65b9\u6848\u90fd\u53ef\u4ee5\u7528$a_l,b_{l+1},b_{l+2},b_{l+3}...b_{r}$\u4e2d\u9009\u53d6\u82e5\u5e72\u6570\u8868\u793a\u51fa\u6765\uff0c\u5373**\u5e8f\u5217$a_l,a_{l+1},...a_r$\u7684\u7ebf\u6027\u57fa\u4e0e$a_l,b_{l+1},b_{l+2},...b_{r}$\u76f8\u540c\u3002**\r\n\r\n\u67e5\u8be2\u65f6\uff0c\u6c42\u51fa$b_{l+1},b_{l+2},b_{l+3}...b_{r}$\u7684\u7ebf\u6027\u57fa\u548c$a_l$\uff0c\u5c06$a_l$\u63d2\u5165\u7ebf\u6027\u57fa\uff0c\u8d2a\u5fc3\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\r\n\r\n\u7ebf\u6bb5\u6811\u4e0a\u5408\u5e76\u4e24\u4e2a\u7ebf\u6027\u57fa\u590d\u6742\u5ea6$O(log^2V)$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a$O(nlognlog^2V)$\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#define L(u) (u<<1)\r\n#define R(u) (u<<1|1)\r\n#define mid ((l+r)>>1)\r\nusing namespace std;\r\nconst int MAXN = 50050;\r\nvoid read(int &x) {\r\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\r\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\r\n}\r\nstruct XOR {\r\n\tint d[30], s;\r\n\tvoid init() {memset(d, 0, sizeof d);}\r\n\tvoid insert(int x) {\r\n\t\tfor(int i = 29; i >= 0; --i)\r\n\t\t\tif((x >> i) & 1) {\r\n\t\t\t\tif(d[i]) x ^= d[i];\r\n\t\t\t\telse {d[i] = x; break;}\r\n\t\t\t}\r\n\t}\r\n} t[MAXN << 2]; int a[MAXN], n, m;\r\nXOR merge(XOR a, XOR b) {\r\n\tXOR res; res.init();\r\n\tfor(int i = 29; i >= 0; --i) if(a.d[i]) res.d[i] = a.d[i]; else res.d[i] = b.d[i];\r\n\tfor(int i = 29; i >= 0; --i) if(a.d[i] && b.d[i]) res.insert(b.d[i]);\r\n\tres.s = a.s ^ b.s; return res;\r\n}\r\nvoid P(int u) {t[u] = merge(t[L(u)], t[R(u)]);}\r\nvoid build(int u, int l, int r) {\r\n\tif(l == r) {t[u].insert(t[u].s = a[l]); return;}\r\n\tbuild(L(u), l, mid); build(R(u), mid+1, r); P(u);\r\n}\r\nvoid modify(int u, int l, int r, int p, int x) {\r\n\tif(l == r) {t[u].init(), t[u].insert(t[u].s ^= x); return; }\r\n\tp <= mid ? modify(L(u), l, mid, p, x) : modify(R(u), mid+1, r, p, x); P(u);\r\n}\r\nint finds(int u, int l, int r, int p) {\r\n\treturn l == r ? t[u].s : (p <= mid ? finds(L(u), l, mid, p) : finds(R(u), mid+1, r, p) ^ t[L(u)].s);\r\n}\r\nXOR findi(int u, int l, int r, int tl, int tr) {\r\n\tif(tl <= l && r <= tr) return t[u];\r\n\tif(tl > mid) return findi(R(u), mid+1, r, tl, tr);\r\n\tif(tr <= mid) return findi(L(u), l, mid, tl, tr);\r\n\treturn merge(findi(L(u), l, mid, tl, tr), findi(R(u), mid+1, r, tl, tr));\r\n}\r\nint main() {\r\n\tread(n); read(m); for(int i = 1; i <= n; ++i) read(a[i]);\r\n\tfor(int i = n-1; i; --i) a[i+1] ^= a[i]; build(1, 1, n);\r\n\tfor(int opt, l, r, x; m--; ) {\r\n\t\tread(opt); read(l); read(r); read(x);\r\n\t\tif(opt == 1) {\r\n\t\t\tmodify(1, 1, n, l, x);\r\n\t\t\tif(r < n) modify(1, 1, n, r+1, x);\r\n\t\t} else {\r\n\t\t\tint tmp = finds(1, 1, n, l);\r\n\t\t\tif(l == r) printf(\"%d\\n\", max(x, x^tmp));\r\n\t\t\telse {\r\n\t\t\t\tXOR t = findi(1, 1, n, l+1, r); t.insert(tmp);\r\n\t\t\t\tfor(int i = 29; i >= 0; --i) x = max(x, x ^ t.d[i]);\r\n\t\t\t\tprintf(\"%d\\n\", x);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```",
        "postTime": 1572785302,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]D1T1\u3011"
    },
    {
        "content": "Solution by uwagjaynoi\n\n\u9898\u610f\uff1a\n\n\u7ef4\u62a4\u6570\u5217\uff0c\u652f\u6301\u533a\u95f4\u5f02\u6216\uff0c\u6c42\u533a\u95f4\u4e2d\u6240\u6709\u5b50\u5e8f\u5217\u7684\u5f02\u6216\u548c\u5f02\u6216 $v$ \u7684\u6700\u5c0f\u503c\u3002\n\n---\n\n\u6211\u4eec\u7ed9\u51fa\u4e00\u79cd\u4e0d\u501f\u52a9\u5dee\u5206\u7684\u672c\u9898\u89e3\u6cd5\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7ebf\u6027\u57fa\uff0c\u5173\u952e\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u5c06\u7ebf\u6027\u57fa\u5168\u4f53\u5f02\u6216\u4e00\u4e2a\u6570 $x$\u3002\n\n\u8003\u8651\u539f\u5148\u7684\u4e00\u4e2a\u5b50\u96c6 $S$\uff0c\u5176\u5f02\u6216\u548c\u4e3a $X$\uff0c\u90a3\u4e48\u5168\u4f53\u5f02\u6216 $x$ \u540e\uff0c\u5982\u679c $2\\mid |S|$  \u5219\u5f02\u6216\u548c\u4ecd\u7136\u4e3a $X$\uff0c\u5426\u5219\u4e3a $X\\oplus x$\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u8981\u7528\u4e00\u79cd\u65b9\u6cd5\u6765\u523b\u753b\u5b50\u96c6\u7684\u5947\u5076\u6027\u3002\n\n\u8bbe\u539f\u5148\u7684\u96c6\u5408\u4e3a $\\langle a_1,a_2,\\ldots,a_n\\rangle$\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u6bcf\u4e2a\u6570\u524d\u9762\u52a0\u4e00\u4e2a\u6807\u8bc6\u4f4d\uff0c\u5373\u9009\u62e9 $y$ \u4f7f\u5f97 $2^y>a_i$\uff0c\u7136\u540e\u8003\u8651 $\\langle 2^y+a_1,\\ldots,2^y+a_n\\rangle$\uff0c\u8fd9\u6837\u5728\u4e00\u7ec4\u5f02\u6216\u548c\u4e2d\u82e5 $2^y$ \u5bf9\u5e94\u7684\u4f4d\u4e3a $1$ \u5219\u662f\u5947\u6570\u4e2a\u6570\u5f02\u6216\uff0c\u5426\u5219\u4e3a\u5076\u6570\u4e2a\u6570\u5f02\u6216\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u9879 $2^y+x$\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97\u5947\u6570\u4e2a\u6570\u5f02\u6216\u5c31\u5fc5\u987b\u989d\u5916\u5f02\u6216\u4e0a\u4e00\u4e2a $x$\uff08\u4e3a\u4e86\u4f7f\u5f97 $2^y$ \u4f4d\u4e3a $0$\uff09\uff0c\u800c\u5076\u6570\u4e2a\u6570\u5f02\u6216\u5c31\u4e0d\u80fd\u5f02\u6216\u4e0a\u8fd9\u4e2a $x$\uff08\u5426\u5219 $2^y$ \u4f4d\u5c31\u4f1a\u662f $1$\uff09\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u539f\u672c\u7684 $\\langle a_1,\\ldots,a_n\\rangle$\uff0c\u5c06\u5b83\u9996\u5148\u53d8\u4e3a $\\langle 2^y,2^y+a_1,\\ldots,2^y+a_n\\rangle$\uff0c\u7136\u540e\u5728\u9700\u8981\u5168\u4f53\u5f02\u6216 $x$ \u65f6\u5c06\u7ebf\u6027\u57fa\u4e0a $2^y$ \u4f4d\u4ee3\u8868\u5143\u5f02\u6216\u4e0a $x$\uff0c\u8868\u793a\u9009\u62e9\u5947\u6570\u4e2a\u6570\u65f6\u9700\u8981\u989d\u5916\u5f02\u6216\u4e00\u4e2a $x$ \u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u6682\u65f6\u6ca1\u6709\u53d1\u73b0\u8fd9\u79cd\u505a\u6cd5\u76f8\u6bd4\u5dee\u5206\u505a\u6cd5\u7684\u660e\u663e\u4f18\u8d8a\u6027\u3002",
        "postTime": 1645186605,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "[Ynoi 2013] \u65e0\u529b\u56de\u5929 NOI 2017 \u53e6\u89e3"
    },
    {
        "content": "## [$\\text {Description}$](https://www.luogu.com.cn/problem/P5607)\n\n> \u7ef4\u62a4\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u5f02\u6216\uff0c\u533a\u95f4\u67e5\u4e0e\u4e00\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\n\n## [$\\text {Solution}$](https://www.luogu.com.cn/paste/bzkbot15) \n\u6211\u4eec\u8981\u6c42\u6700\u5927\u5f02\u6216\uff0c\u9996\u5148\u8003\u8651\u7684\u5c31\u662f\u7ebf\u6027\u57fa\uff0c\u4f46\u662f\u7ebf\u6027\u57fa\u5e76\u4e0d\u652f\u6301\u533a\u95f4\u4fee\u6539\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u80fd\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff08\u6bd4\u5982\u7ebf\u6bb5\u6811\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u5957\u4e00\u4e2a\u7ebf\u6027\u57fa\u3002\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u5df2\u7ecf\u80fd\u5207\u6389 [P4839 P\u54e5\u7684\u6876](https://www.luogu.com.cn/problem/P4839) \u4e86\u3002\u4f46\u662f\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u6781\u4e3a\u6076\u5fc3\u7684\u64cd\u4f5c\uff1a\u533a\u95f4\u5f02\u6216\u3002\u800c\u6211\u4eec\u77e5\u9053\u7ebf\u6bb5\u6811\u5e76\u4e0d\u80fd\u5904\u7406\u533a\u95f4\u5f02\u6216\u7684\u64cd\u4f5c\uff08\u61d2\u6807\u8bb0\u5e76\u4e0d\u80fd\u548c\u52a0\u6cd5\u4ea7\u751f\u517c\u5bb9\u6027\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u5b83\u8f6c\u5316\u6210\u5355\u70b9\u4fee\u6539\uff0c\u600e\u4e48\u8f6c\u5316\u5462\uff1f\n\n\u8003\u8651\u6784\u9020\u5dee\u5206\u6570\u7ec4 $b$, \u6ee1\u8db3$b_i=a_i\\oplus a_{i-1}$ \uff08\u5176\u4e2d $\\oplus$ \u8868\u793a\u5f02\u6216\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $a_i=b_1\\oplus b_2 \\oplus b_3\\cdots b_i$ \n\n\u4e5f\u5c31\u662f\u8bf4 $a$ \u4ece $[l,r]$ \u7684\u7ebf\u6027\u57fa\u4e0e $a_l$ \u548c $b$ \u4ece $[l+1,r]$ \u7684\u7ebf\u6027\u57fa\u662f\u76f8\u7b49\u7684\u3002\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4 $b$ \u7684\u7ebf\u6027\u57fa\u6765\u505a\u5230\u5355\u70b9\u4fee\u6539\uff0c\u4f46\u662f\u53c8\u80fd\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u4e86\u3002\n\n\u68b3\u7406\u4e00\u4e0b\u7b97\u6cd5\uff1a\n\n1.\u6784\u5efa\u5dee\u5206\u6570\u7ec4 $b$\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u3002\n\n2.\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u6b21\u8be2\u95ee\u9700\u8981\u7684 $a_l$\uff0c\u7531\u4e8e $b$ \u662f\u5dee\u5206\u6570\u7ec4\uff0c\u6240\u4ee5\u7b49\u4ef7\u4e8e\u6c42 $b$ \u7684\u524d\u7f00\u548c\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\uff08\u4ee3\u7801\u5728\u94fe\u63a5\u91cc\uff09\u3002 \n\n",
        "postTime": 1615564011,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "P5607\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u4e0a\u624b\u662f\u61f5\u7684\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4e0d\u8fc7\u4ed4\u7ec6\u4e00\u60f3\u67e5\u8be2\u4e0d\u5c31\u662f\u8981\u6574\u51fa\u4e00\u4e2a\u7ebf\u6027\u57fa\u5417\u3002\n\n\u4f46\u6211\u4eec\u9047\u5230\u4e86\u9ebb\u70e6\uff1a\u7ebf\u6027\u57fa\u600e\u4e48\u4fee\u6539\uff1f\n\n\u4ee4\u4eba\u8c14\u8c14\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u7ed9\u5927\u5bb6\u7559\u4f5c\u601d\u8003\u9898\uff0c\u6709\u5174\u8da3\u7684\u7ae5\u978b\u81ea\u884c\u5b8c\u6210~~\u53cd\u6b63\u6211\u4e0d\u4f1a~~\u3002\n\n\u518d\u60f3\u60f3\uff0c\u8981\u662f\u4e0d\u662f\u533a\u95f4\uff0c\u800c\u662f\u5355\u70b9\uff0c\u80fd\u505a\u5417\uff1f\n\n\u8fd9\u8fd8\u4e0d\u7b80\u5355\u7ebf\u6bb5\u6811\u968f\u4fbf\u641e\u4e24\u4e0b\u4e0d\u5c31\u597d\u4e86\u561b\uff01\n\n\u55ef\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u533a\u95f4->\u5355\u70b9\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n**\u5dee\u5206\uff01**\n\n\u5dee\u5206\u7684\u8bdd\u4fee\u6539\u6c34\u4e86\uff0c\u67e5\u8be2\u600e\u4e48\u529e\uff1f\n\n\u4ed4\u7ec6\u60f3\u60f3\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u539f\u6570\u5217\u4e0d\u5c31\u662f\u67e5\u5206\u6570\u5217\u7684\u524d\u7f00\u548c\u5417\u3002\n\n\u5efa\u8bae\u5927\u5bb6\u81ea\u884c\u601d\u8003\uff0c\u4e0d\u96be\u4e86\u3002\n\n\u8bbe\u539f\u6570\u7ec4\u4e3a $a$\uff0c\u5dee\u5206\u6570\u7ec4\u4e3a $b$\u3002\n\n**\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $a_l,\\ldots\\,a_r$ \u7684\u7ebf\u6027\u57fa\u7b49\u4ef7\u4e8e $a_l,b_{l+1},b_{l+2},\\ldots,b_r$ \u7684\u7ebf\u6027\u57fa**\u3002\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u518d\u8d58\u8ff0\uff0c\u5c31\u662f\u628a\u6bcf\u4e00\u4e2a $a_i$ \u5c55\u5f00\uff0c\u5177\u4f53\u8fd8\u4e0d\u4f1a\u7684\u8bdd\u53ef\u53c2\u7167\u5176\u4ed6\u9898\u89e3\u3002\n\n\u597d\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f\u7ef4\u62a4\u51fa $a_l$\u3002\n\n\u73b0\u5728\u5c31\u597d\u529e\u4e86\uff0c $a$ \u76f8\u5f53\u4e8e $b$ \u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u4e8e\u662f\u76f8\u5f53\u4e8e\u8981\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u3002\n\n\u7136\u540e\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u5c31\u6ca1\u4e86\u3002\n\n\u5efa\u8bae\u5927\u5bb6\u7406\u4e00\u4e0b\u7b97\u6cd5\u6b65\u9aa4\uff0c\u4e0d\u61c2\u7684\u79c1\u4fe1\u3002\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+9; \nclass xor_basis{//\u7ebf\u6027\u57fa\uff0c\u4e0d\u89e3\u91ca\n\t#define len 31\n\tprivate:\n\t\tint a[len],tot;\n\tpublic:\n\t\tvoid insert(int x){//\u63d2\u5165\n\t\t\tfor(int i=len-1;i>=0;--i)if(x&(1ll<<i)){\n\t\t\t\tif(!a[i]){\n\t\t\t\t\ta[i]=x;\n\t\t\t\t\t++tot;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx^=a[i];\n\t\t\t}\n\t\t}\n\t\tint query(int v){//\u67e5\u8be2\n\t\t\tfor(int i=len-1;i>=0;--i)if((v^a[i])>v)v^=a[i];\n\t\t\treturn v;\n\t\t}\n\t\txor_basis operator+(const xor_basis&to)const{//\u5408\u5e76\n\t\t\txor_basis w(to);\n\t\t\tfor(int i=len-1;i>=0;--i)if(a[i])w.insert(a[i]);\n\t\t\treturn w;\n\t\t} \n\t\txor_basis&operator+=(const xor_basis&to){\n\t\t\treturn *this=*this+to;\n\t\t}\n\t\txor_basis(const int&x=0){//\u521d\u59cb\u5316\n\t\t\tmemset(a,tot=0,sizeof a),insert(x);\n\t\t}\n};\nint n,m,M;\nxor_basis zkw[N<<2];//\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7ebf\u6027\u57fa\nint bit[N],b[N];//\u6811\u72b6\u6570\u7ec4\u4e0e\u5dee\u5206\u6570\u7ec4\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(M=1;M<=n;M<<=1);//\u6c42M\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",b+i),bit[i]=b[i]^b[i&i-1];\n    \t//\u8bfb\u5165\u539f\u6570\u7ec4\uff08\u7b49\u4e0b\u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e0a\u5dee\u5206\uff09\uff0cBIT\u7ebf\u6027\u5efa\u6811\n\tfor(int i=n;i;--i)zkw[i+M].insert(b[i]^=b[i-1]);\n\t//\u7ebf\u6bb5\u6811\u5efa\u53f6\u5b50+\u5dee\u5206\n\tfor(int i=M;i;--i)zkw[i]=zkw[i<<1]+zkw[i<<1|1];//\u5efa\u6811\n\tfor(int opt,l,r,v;m;--m){\n\t\tscanf(\"%d%d%d%d\",&opt,&l,&r,&v);\n\t\tif(opt==1){//\u66f4\u6539\n\t\t\tfor(int L=  l;L<=n;L+=L&-L)bit[L]^=v;\n\t\t\tfor(int R=++r;R<=n;R+=R&-R)bit[R]^=v;\n\t\t\t//BIT\u7ef4\u62a4\u524d\u7f00\u5f02\u6216\u548c\n\t\t\tzkw[l+M]=xor_basis(b[l]^=v),zkw[r+M]=xor_basis(b[r]^=v);//\u53f6\u8282\u70b9\u66b4\u529b\u91cd\u6784\n\t\t\tfor(l+=M;l>>=1;zkw[l]=zkw[l<<1]+zkw[l<<1|1]);\n\t\t\tfor(r+=M;r>>=1;zkw[r]=zkw[r<<1]+zkw[r<<1|1]);\n\t\t\t//\u4e0a\u4f20\u4fee\u6539\n\t\t}\n\t\telse{\n\t\t\tint ret=0;\n\t\t\tfor(int L=l;L;L&=L-1)ret^=bit[L];//a[l]\n\t\t\txor_basis tmp(ret);//\u7ebf\u6027\u57fa\u521d\u59cb\u5316\n\t\t\tfor(l+=M,r+=M+1;l^r^1;l>>=1,r>>=1){\n\t\t\t\tif(l&1^1)tmp+=zkw[l^1];\n\t\t\t\tif(r&1  )tmp+=zkw[r^1];\n\t\t\t}//b[l+1]~b[r]\n\t\t\tprintf(\"%d\\n\",tmp.query(v));//\u67e5\u8be2\n\t\t}\n\t}\n\treturn 0;\n}\n```\nOver.\n\n\u795d\u5927\u5bb6\u5207\u9898\u6109\u5feb\uff01\n\n\u7531\u4e8e\u7a9d\u592a\u5f31\u4e86\u6240\u4ee5\u8fd8\u6ca1\u5199\u51fa\u5624\u8bed\u7248\uff0c\u4ee5\u540e\u4e5f\u8bb8\u4f1a\u8865\u7684\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7",
        "postTime": 1586007808,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]\u65e0\u529b\u56de\u5929NOI2017\u3011"
    },
    {
        "content": "[\u53ef\u80fd\u66f4\u597d\u7684\u4f53\u9a8c](https://mrsrz.github.io/2019/11/04/Ynoi2013-D1T1/)\n\n\u8003\u8651\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u7ebf\u6bb5\u6811+\u7ebf\u6027\u57fa\u7ef4\u62a4\u3002\u4f46\u662f\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4f1a\u5bf9\u6574\u4e2a\u533a\u95f4\u7684\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u6ca1\u6709\u529e\u6cd5\u5feb\u901f\u91cd\u6784\u51fa\u4e00\u4e2a\u7ebf\u6027\u57fa\u3002\n\n\u4ee4\u539f\u6570\u5217\u4e3a $a_{1..n}$\uff0c\u518d\u5b9a\u4e49\u4e00\u4e2a\u6570\u5217\u4e3a $b_{1..n}$\uff0c\u5176\u4e2d $b_i(i>1)=a_{i}\\oplus a_{i-1}$\uff0c$b_1$ \u7684\u503c\u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002\n\n\u8003\u8651\u6570\u5217 $b$ \u7684\u4f18\u79c0\u6027\u8d28\u3002\n\n\u7531\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7f8e\u5999\u6027\u8d28 $A\\oplus B\\oplus B=A$\uff0c\u6211\u4eec\u8fdb\u884c\u533a\u95f4\u5f02\u6216\u7684\u65f6\u5019\uff0c\u5728 $b$ \u6570\u7ec4\u4e0a\u53ea\u4f1a\u4fee\u6539\u4e24\u4e2a\u6570\u7684\u503c\u3002\u90a3\u4e48\u7ef4\u62a4 $b$ \u7684\u533a\u95f4\u7ebf\u6027\u57fa\u5c31\u975e\u5e38\u5bb9\u6613\u3002\n\n\u8003\u8651 $b$ \u7684\u7ebf\u6027\u57fa\u7684\u7279\u70b9\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u6709 $a_i,b_{i+1},b_{i+2},\\dots,b_k$\uff0c\u5b83\u7684\u7ebf\u6027\u57fa\u548c $a_{i},a_{i+1},a_{i+2},\\dots,a_k$ \u7684\u7ebf\u6027\u57fa\u662f\u7b49\u4ef7\u7684\u3002\u56e0\u4e3a $b_{i+1}\\oplus a_{i}=a_{i+1},b_{i+2}\\oplus a_{i+1}=a_{i+2}$\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7\u6709\u9650\u6b21\u5f02\u6216\u64cd\u4f5c\u8fd8\u539f\u539f\u6570\u5217\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u6bcf\u6b21\u67e5\u8be2\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2 $b_{l+1..r}$ \u7684\u7ebf\u6027\u57fa\uff0c\u7136\u540e\u63d2\u5165 $a_l$ \u5143\u7d20\u5373\u53ef\u3002\n\n\u7136\u540e\u628a $v$ \u6254\u8fdb\u8fd9\u4e2a\u7ebf\u6027\u57fa\u91cc\u8dd1\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u91cc\u8fd8\u8981\u7ef4\u62a4\u539f\u6765\u7684 $a_i$ \u7684\u503c\uff0c\u533a\u95f4\u5f02\u6216\u5355\u70b9\u67e5\u8be2\uff0c\u968f\u4fbf\u641e\u641e\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^3 n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\u6709\u66f4\u4f18\u79c0\u7684\u590d\u6742\u5ea6\u3002\n\n\u4e00\u4e2a\u5c0f\u4f18\u5316\uff1a\u5982\u679c\u7ebf\u6027\u57fa\u91cc\u5df2\u7ecf\u63d2\u6ee1\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u9700\u8981\u6bcf\u6b21 $O(\\log^2 n)$ \u5408\u5e76\u3002\u5728\u8f83\u4e3a\u968f\u673a\u7684\u6570\u636e\u4e0b\u6709\u5f88\u597d\u7684\u6548\u679c\u3002\n\n## Code\uff1a\n\n```c++\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=2e5+7;\nint n,m;\nint d[N],a[N/4],b[N/4];\nstruct Base{\n\tint sz,a[30];\n\tinline Base():sz(0){memset(a,0,sizeof a);}\n\tinline Base&operator+=(int b){\n\t\tif(sz==30||!b)return*this;\n\t\tfor(int i=29;~i;--i)\n\t\t\tif(b>>i&1){\n\t\t\t\tif(!a[i]){\n\t\t\t\t\ta[i]=b,++sz;\n\t\t\t\t\treturn*this;\n\t\t\t\t}\n\t\t\t\tb^=a[i];\n\t\t\t}\n\t\treturn*this;\n\t}\n\tinline Base operator*(const Base&rhs)const{\n\t\tif(sz==30)return*this;\n\t\tif(rhs.sz==30)return rhs;\n\t\tBase ret=*this;\n\t\tfor(int i=29;~i;--i)if(rhs.a[i])ret+=rhs.a[i];\n\t\treturn ret;\n\t}\n\tinline int operator()(int v){\n\t\tfor(int i=29;~i;--i)if((v^a[i])>v)v^=a[i];\n\t\treturn v;\n\t}\n}G[N];\nvoid modify(int l,int r,int o,const int&L,const int&R,const int&v){\n\tif(L<=l&&r<=R)d[o]^=v;else{\n\t\tconst int mid=l+r>>1;\n\t\tif(L<=mid)modify(l,mid,o<<1,L,R,v);\n\t\tif(mid<R)modify(mid+1,r,o<<1|1,L,R,v);\n\t}\n}\nint query(int l,int r,int o,const int&pos){\n\tif(l==r)return d[o];\n\tconst int mid=l+r>>1;\n\treturn d[o]^(pos<=mid?query(l,mid,o<<1,pos):query(mid+1,r,o<<1|1,pos));\n}\nvoid build(int l,int r,int o){\n\tif(l==r)cin>>d[o],a[l]=d[o];else{\n\t\tconst int mid=l+r>>1;\n\t\tbuild(l,mid,o<<1),build(mid+1,r,o<<1|1);\n\t}\n}\nvoid build_(int l,int r,int o){\n\tif(l==r)G[o]+=b[l]=a[l]^a[l-1];else{\n\t\tconst int mid=l+r>>1;\n\t\tbuild_(l,mid,o<<1);\n\t\tbuild_(mid+1,r,o<<1|1);\n\t\tG[o]=G[o<<1]*G[o<<1|1];\n\t}\n}\nvoid modify_(int l,int r,int o,const int&pos,const int&val){\n\tif(l==r)G[o]=G[0],G[o]+=b[l]^=val;\n\telse{\n\t\tconst int mid=l+r>>1;\n\t\tif(pos<=mid)modify_(l,mid,o<<1,pos,val);else modify_(mid+1,r,o<<1|1,pos,val);\n\t\tG[o]=G[o<<1]*G[o<<1|1];\n\t}\n}\nBase query_(int l,int r,int o,const int&L,const int&R){\n\tif(L<=l&&r<=R)return G[o];\n\tconst int mid=l+r>>1;\n\tif(L<=mid&&mid<R)return query_(l,mid,o<<1,L,R)*query_(mid+1,r,o<<1|1,L,R);\n\tif(L<=mid)return query_(l,mid,o<<1,L,R);return query_(mid+1,r,o<<1|1,L,R);\n}\nint main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n>>m;\n\tbuild(1,n,1);\n\tbuild_(1,n,1);\n\twhile(m--){\n\t\tint op,l,r,v;\n\t\tcin>>op>>l>>r>>v;\n\t\tif(op==1){\n\t\t\tmodify(1,n,1,l,r,v);\n\t\t\tmodify_(1,n,1,l,v);\n\t\t\tif(r!=n)modify_(1,n,1,r+1,v);\n\t\t}else{\n\t\t\tBase s=(l==r?G[0]:query_(1,n,1,l+1,r));\n\t\t\ts+=query(1,n,1,l);\n\t\t\tcout<<s(v)<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572854582,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]D1T1\u3011"
    },
    {
        "content": "\u767d\u7ed9\u9898\u3002\n\n\u8003\u8651\u5230\u5c06 $a$ \u53d8\u6210\u5dee\u5206\u5e8f\u5217\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u51d1\u51fa\u6765\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002\n\n\u56e0\u4e3a\u4f60\u53ef\u4ee5\u9009\u51fa\u82e5\u5e72\u4e2a\u6570\uff1b\u5f02\u6216\u4e24\u6b21\u4f1a\u62b5\u6d88\u3002\n\n\u6240\u4ee5\u53ea\u9700\u8981\u5bf9 $l,r+1$ \u64cd\u4f5c\u7136\u540e\u533a\u95f4\u7ebf\u6027\u57fa $\\log^2$ \u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (int i = x; i <= y; i++)\n#define per(i, x, y) for (int i = x; i >= y; i--)\n\nstruct basis {\n\tint p[31];\n\tvoid insert(int val) {\n\t\tfor (int i = 30; ~i; --i) {\n\t\t\tif (val >> i & 1) {\n\t\t\t\tif (!p[i]) { p[i] = val; break; }\n\t\t\t\tval ^= p[i];\n\t\t\t}\n\t\t}\n\t}\n\tvoid clear() {\n\t\tmemset(p, 0, sizeof(p));\n\t}\n\tint query(int val) {\n\t\tfor (int i = 30; ~i; --i)\n\t\t\tval = std::max(val, val ^ p[i]);\n\t\treturn val;\n\t}\n} answer;\n\nbasis merge(basis x, basis y) {\n\tbasis result = x;\n\tfor (int i = 30; ~i; --i)\n\t\tif (y.p[i])\n\t\t\tresult.insert(y.p[i]);\n\treturn result;\n}\n\nstruct SegmentTree {\n\tstd::vector<basis> s;\n  int n;\n\tSegmentTree(const int &_n) { \n\t\tn = _n; \n\t\ts.resize(_n << 2); \n\t}\n\tvoid update(int l, int r, int p, int x, int val) {\n\t\tif (l == r) { s[p].clear(); s[p].insert(val); return; }\n\t\tint mid = l + r >> 1;\n\t\tif (x <= mid)\n\t\t\tupdate(l, mid, p << 1, x, val);\n\t\telse \n\t\t\tupdate(mid + 1, r, p << 1 | 1, x, val);\n\t\ts[p] = merge(s[p << 1], s[p << 1 | 1]);\n\t}\n\tvoid query(int ql, int qr, int l, int r, int p) {\n\t\tif (ql <= l && r <= qr) { answer = merge(answer, s[p]); return; }\n\t\tint mid = l + r >> 1;\n\t\tif (ql <= mid)\n\t\t\tquery(ql, qr, l, mid, p << 1);\n\t\tif (qr > mid)\n\t\t\tquery(ql, qr, mid + 1, r, p << 1 | 1);\n\t}\n};\n\nconst int N = 5e4 + 1;\nint c[N];\n\nint lowbit(int x) {\n\treturn x & -x;\n}\n\nvoid update(int x, int y){\n\tfor (; x < N; x += lowbit(x))\n\t\tc[x] ^= y;\n}\n\nint query(int x) {\n\tint answer = 0;\n\twhile (x) {\n\t\tanswer ^= c[x];\n\t\tx ^= lowbit(x);\n\t}\n\treturn answer;\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(NULL);\n\tint n, q;\n\tstd::cin >> n >> q;\n\tSegmentTree t(n);\n\tstd::vector<int> a(n + 1, 0);\n\trep (i, 1, n) std::cin >> a[i];\n\tper (i, n, 2) a[i] ^= a[i - 1];\n\trep (i, 1, n) t.update(1, n, 1, i, a[i]), update(i, a[i]);\n\twhile (q--) {\n\t\tint op;\n\t\tstd::cin >> op;\n\t\tif (op == 1) {\n\t\t\tint l, r, x;\n\t\t\tstd::cin >> l >> r >> x;\n\t\t\tupdate(l, x);\n\t\t\tt.update(1, n, 1, l, a[l] ^= x);\n\t\t\tif (r < n) {\n\t\t\t\tupdate(r + 1, x);\n\t\t\t\tt.update(1, n, 1, r + 1, a[r + 1] ^= x);\n\t\t\t}\n\t\t} else {\n\t\t\tint ql, qr, x;\n\t\t\tstd::cin >> ql >> qr >> x;\n\t\t\tint k = query(ql);\n\t\t\tif (ql == qr) {\n\t\t\t\tstd::cout << std::max(x, k ^ x) << '\\n';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tanswer.clear();\n\t\t\tanswer.insert(k);\n\t\t\tt.query(ql + 1, qr, 1, n, 1);\n\t\t\tstd::cout << answer.query(x) << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1599400440,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]\u65e0\u529b\u56de\u5929NOI2017\u3011"
    },
    {
        "content": "[_P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017_](https://www.luogu.com.cn/problem/P5607) \n\n\u8fd9\u662f\u4e00\u9053\u5728 $Ynoi$ \u4e2d\u5f88\u6c34\u7684\u9898\u3002\n****\n## \u9898\u610f\n\u6c42\u4f5c\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u533a\u95f4\u5f02\u6216\uff0c\u533a\u95f4\u67e5\u8be2\u4efb\u610f\u4e2a\u6570\u5f02\u6216\u6240\u7ed9\u6570\u7684\u6700\u5927\u503c\u3002\n## \u601d\u8def\n\u663e\u7136\uff0c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u6570\u636e\u7ed3\u6784 [ _\u7ebf\u6027\u57fa_ ](https://www.luogu.com.cn/problem/P3812) \u7ef4\u62a4\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u6709\u4fee\u6539\u64cd\u4f5c...\n\n\u7531\u4e8e\u7ebf\u6027\u57fa\u4e0d\u652f\u6301\u4fee\u6539\u3001\u5220\u9664\uff0c\u4e8e\u662f\u533a\u95f4\u5f02\u6216\u5c31\u5f88\u96be\u5904\u7406\u3002\n\n\u4e8e\u662f\u6211\u4eec\u601d\u8003\u5dee\u5206\uff0c\u4f7f\u533a\u95f4\u4fee\u6539 -> \u5355\u70b9\u4fee\u6539\u3002\n\n\u53e6 $b_i\\gets a_i\\,xor\\,a_{i-1}$\uff0c\u4e8e\u662f\u533a\u95f4\u4fee\u6539\u64cd\u4f5c $a_i\\gets a_i\\,xor\\,v(i\\in[l,r])$ \u5c31\u8f6c\u53d8\u4e3a\u4e86\u4e24\u6b21\u5355\u70b9\u4fee\u6539 $b_l\\gets b_l\\,xor\\,v,b_{r+1}\\gets b_{r+1}\\,xor\\,v$\u3002\n\n\u5f88\u663e\u7136 $b$ \u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u7136\u540e\u8f6c\u4e3a\u5355\u70b9\u4fee\u6539\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5206\u5757/\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u7684\u662f\u5305\u542b $l,r$ \u533a\u95f4\u4e2d\u7684 $b$ \u6570\u7ec4\u6784\u6210\u7684\u7ebf\u6027\u57fa\u3002\n\n\u4e8e\u662f\u6211\u4e00\u5f00\u59cb\u6253\u51fa\u4e86\u5206\u5757\uff0c\u4e8e\u662f\u6211\u6253\u51fa\u4e86\u5206\u5757\uff0c\u75af\u72c2\u5361\u5e38\uff0c\u8fd8\u662f $95pts$ \u6ca1\u5361\u8fc7\n...\n\n\u540e\u6765\u653e\u5f03\u4e86\uff0c\u6211\u5c31\u5f00\u59cb\u6253\u7ebf\u6bb5\u6811\uff0c\u7ed3\u679c\u4e00\u6b21\u8fc7...\n\n\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u5206\u5757\u7684\u590d\u6742\u5ea6\u4e3a $O((n+m)\\sqrt n\\log^2w)$\uff0c\u800c\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n\\log^2w)$ \u7531\u4e8e\u4e00\u4e2a $\\log$ \u6bd4\u4e00\u4e2a $\\sqrt n$ \u5c0f\u5f88\u591a\uff0c\u6240\u4ee5\u8fd0\u884c\u8d77\u6765\u4f1a\u5feb\u5f88\u591a\u3002\n\n\u6240\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff0c\u4ee5\u540e\u5408\u5e76\u8282\u70b9\u7684\u590d\u6742\u5ea6\u9ad8\u65f6\u4e0d\u8981\u7528\u5206\u5757\uff0c\u8981\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n\u5206\u5757\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO{\n\tint len=0;\n\tchar ibuf[18<<20],*ss,out[(1<<22)+1];\n\tinline int read(){\n\t    register int u=0;\n\t    while(*ss<48) ss++;\n \t\twhile(*ss>32)\n \t       u=u*10+*ss++-48;\n  \t\treturn u;\n\t}\n\tinline void write(int x){\n\t\tif(x>9)write(x/10);\n\t\tout[len++]=x%10+48;\n\t}\n}\nusing namespace IO;\nstruct Linebase{\n\tint sz,p[30];\n\tLinebase(){\n\t\tp[0]=0;\n\t\tp[1]=0;\n\t\tp[2]=0;\n\t\tp[3]=0;\n\t\tp[4]=0;\n\t\tp[5]=0;\n\t\tp[6]=0;\n\t\tp[7]=0;\n\t\tp[8]=0;\n\t\tp[9]=0;\n\t\tp[10]=0;\n\t\tp[11]=0;\n\t\tp[12]=0;\n\t\tp[13]=0;\n\t\tp[14]=0;\n\t\tp[15]=0;\n\t\tp[16]=0;\n\t\tp[17]=0;\n\t\tp[18]=0;\n\t\tp[19]=0;\n\t\tp[20]=0;\n\t\tp[21]=0;\n\t\tp[22]=0;\n\t\tp[23]=0;\n\t\tp[24]=0;\n\t\tp[25]=0;\n\t\tp[26]=0;\n\t\tp[27]=0;\n\t\tp[28]=0;\n\t\tp[29]=0;\n\t    sz=0;\n\t}\n\tinline friend Linebase operator +(Linebase a,int b){\n\t\tif(a.sz==30||!b) return a;\n\t\tfor(register int i=29;i>=0;i--){\n\t\t\tif(b>>i&1){\n\t\t\t\tif(a.p[i]){\n\t\t\t\t\tb^=a.p[i];\n\t\t\t\t}else{\n\t\t\t\t\ta.p[i]=b;\n\t\t\t\t\ta.sz++;\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\tinline friend Linebase operator +(Linebase a,Linebase b){\n\t\tif(a.sz==30) return a;\n\t\tif(b.sz==30) return b;\n\t\tfor(register int i=29;i>=0;i--){\n\t\t\tif(b.p[i])a=a+b.p[i];\n\t\t}\n\t\treturn a;\n\t}\n\tinline int getmax(int v){\n\t\tv=max(v,v^p[29]);\n\t\tv=max(v,v^p[28]);\n\t\tv=max(v,v^p[27]);\n\t\tv=max(v,v^p[26]);\n\t\tv=max(v,v^p[25]);\n\t\tv=max(v,v^p[24]);\n\t\tv=max(v,v^p[23]);\n\t\tv=max(v,v^p[22]);\n\t\tv=max(v,v^p[21]);\n\t\tv=max(v,v^p[20]);\n\t\tv=max(v,v^p[19]);\n\t\tv=max(v,v^p[18]);\n\t\tv=max(v,v^p[17]);\n\t\tv=max(v,v^p[16]);\n\t\tv=max(v,v^p[15]);\n\t\tv=max(v,v^p[14]);\n\t\tv=max(v,v^p[13]);\n\t\tv=max(v,v^p[12]);\n\t\tv=max(v,v^p[11]);\n\t\tv=max(v,v^p[10]);\n\t\tv=max(v,v^p[9]);\n\t\tv=max(v,v^p[8]);\n\t\tv=max(v,v^p[7]);\n\t\tv=max(v,v^p[6]);\n\t\tv=max(v,v^p[5]);\n\t\tv=max(v,v^p[4]);\n\t\tv=max(v,v^p[3]);\n\t\tv=max(v,v^p[2]);\n\t\tv=max(v,v^p[1]);\n\t\tv=max(v,v^p[0]);\n\t\treturn v;\n\t}\n};\nint t[50010],n,m,a[50010],block,belong[50010],cnt;\ninline void upd(int x,int k){\n\tfor(register int i=x;i<=n;i+=(i&-i)){\n\t\tt[i]^=k;\n\t}\n}\ninline int query(int x){\n\tregister int ans=0;\n\tfor(register int i=x;i>=1;i-=(i&-i)){\n\t\tans^=t[i];\n\t}\n\treturn ans;\n}\nstruct Block{\n\tint l,r;\n\tLinebase s;\n\tBlock(){l=r=0;}\n\tinline void cg(){\n\t\ts=Linebase();\n\t\tregister int i=l;\n\t\tfor(;i+7<=r;i+=8){\n\t\t\ts=s+a[i];\n\t\t\ts=s+a[i+1];\n\t\t\ts=s+a[i+2];\n\t\t\ts=s+a[i+3];\n\t\t\ts=s+a[i+4];\n\t\t\ts=s+a[i+5];\n\t\t\ts=s+a[i+6];\n\t\t\ts=s+a[i+7];\n\t\t}\n\t\tfor(;i<=r;i++){\n\t\t\ts=s+a[i];\n\t\t}\n\t}\n}b[150];\ninline void modify(int p,int k){\n\tregister int bl=belong[p];\n\ta[p]^=k;\n\tb[bl].cg();\n}\ninline Linebase query(int l,int r){\n\tregister int bl=belong[l],br=belong[r];\n\tLinebase c;\n\tif(bl==br){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tc=c+a[i];\n\t\t}\n\t\treturn c;\n\t}\n\tfor(int i=l;i<=b[bl].r;i++){\n\t\tc=c+a[i];\n\t}\n\tfor(int i=bl+1;i<=br-1;i++){\n\t\tc=c+b[i].s;\n\t}\n\tfor(int i=b[br].l;i<=r;i++){\n\t\tc=c+a[i];\n\t}\n\treturn c;\n}\nint main(){\n\tfread(ss=ibuf,1,18<<20,stdin);\n\tn=read(),m=read();\n\tfor(register int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tfor(register int i=n;i>=2;i--){\n\t\ta[i]^=a[i-1];\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tupd(i,a[i]);\n\t}\n\tblock=13*sqrt(n)/8;\n\tfor(register int i=1;i<=n;i+=block){\n\t\tcnt++;\n\t\tb[cnt].l=i;\n\t\tb[cnt].r=min(i+block-1,n);\n\t}\n\tfor(register int i=1;i<=cnt;i++){\n        for(register int j=b[i].l;j<=b[i].r;j++){\n        \tb[i].s=b[i].s+a[j];\n        \tbelong[j]=i;\n\t\t}\n\t}\n\twhile(m--){\n\t\tregister int opt=read(),l=read(),r=read(),v=read();\n\t\tif(opt==1){\n\t\t\tif(belong[l]!=belong[r]){\n\t\t\t\tupd(l,v);\n\t\t\t\tmodify(l,v);\n\t\t\t\tif(r<n){\n\t\t\t\t\tupd(r+1,v);\n\t\t\t\t\tmodify(r+1,v);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ta[l]^=v;\n\t\t\t\tupd(l,v);\n\t\t\t\tif(r<n){\n\t\t\t    \ta[r+1]^=v;\n\t\t    \t\tupd(r+1,v);\n\t\t\t\t}\n\t\t\t\tb[belong[l]].cg();\n\t\t\t}\n\t\t}else{\n\t\t\tregister int k=query(l);\n\t\t\tif(l==r){\n\t\t\t\twrite(max(v,v^k));\n\t\t\t\tout[len++]='\\n';\n\t\t\t}else{\n\t    \t\tLinebase c=query(l+1,r)+k;\n\t    \t\twrite(c.getmax(v));\n\t    \t\tout[len++]='\\n';\n\t\t\t}\n\t\t}\n\t}\n\tfwrite(out,1,len,stdout);\n    return 0;\n}\n /*\n  Time:27.32s\n  Memory:7.20MB\n  TLE 3.07s on Test #9\n  95pts\n  */\n```\n\u7ebf\u6bb5\u6811\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO{\n\tint len=0;\n\tchar ibuf[18<<20],*ss,out[(1<<22)+1];\n\tinline int read(){\n\t    register int u=0;\n\t    while(*ss<48) ss++;\n \t\twhile(*ss>32)\n \t       u=u*10+*ss++-48;\n  \t\treturn u;\n\t}\n\tinline void write(int x){\n\t\tif(x>9)write(x/10);\n\t\tout[len++]=x%10+48;\n\t}\n}\nusing namespace IO;\nstruct Linebase{\n\tint sz,p[30];\n\tLinebase(){\n\t\tp[0]=0;\n\t\tp[1]=0;\n\t\tp[2]=0;\n\t\tp[3]=0;\n\t\tp[4]=0;\n\t\tp[5]=0;\n\t\tp[6]=0;\n\t\tp[7]=0;\n\t\tp[8]=0;\n\t\tp[9]=0;\n\t\tp[10]=0;\n\t\tp[11]=0;\n\t\tp[12]=0;\n\t\tp[13]=0;\n\t\tp[14]=0;\n\t\tp[15]=0;\n\t\tp[16]=0;\n\t\tp[17]=0;\n\t\tp[18]=0;\n\t\tp[19]=0;\n\t\tp[20]=0;\n\t\tp[21]=0;\n\t\tp[22]=0;\n\t\tp[23]=0;\n\t\tp[24]=0;\n\t\tp[25]=0;\n\t\tp[26]=0;\n\t\tp[27]=0;\n\t\tp[28]=0;\n\t\tp[29]=0;\n\t    sz=0;\n\t}\n\tinline void insert(int b){\n\t\tif(sz==30||!b) return ;\n\t\tfor(register int i=29;i>=0;i--){\n\t\t\tif(b>>i&1){\n\t\t\t\tif(p[i]){\n\t\t\t\t\tb^=p[i];\n\t\t\t\t}else{\n\t\t\t\t\tp[i]=b;\n\t\t\t\t\tsz++;\n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ;\n\t}\n\tinline friend Linebase operator +(Linebase a,Linebase b){\n\t\tif(a.sz==30) return a;\n\t\tif(b.sz==30) return b;\n\t\tfor(register int i=29;i>=0;i--){\n\t\t\tif(b.p[i])a.insert(b.p[i]);\n\t\t}\n\t\treturn a;\n\t}\n\tinline int getmax(int v){\n\t\tv=max(v,v^p[29]);\n\t\tv=max(v,v^p[28]);\n\t\tv=max(v,v^p[27]);\n\t\tv=max(v,v^p[26]);\n\t\tv=max(v,v^p[25]);\n\t\tv=max(v,v^p[24]);\n\t\tv=max(v,v^p[23]);\n\t\tv=max(v,v^p[22]);\n\t\tv=max(v,v^p[21]);\n\t\tv=max(v,v^p[20]);\n\t\tv=max(v,v^p[19]);\n\t\tv=max(v,v^p[18]);\n\t\tv=max(v,v^p[17]);\n\t\tv=max(v,v^p[16]);\n\t\tv=max(v,v^p[15]);\n\t\tv=max(v,v^p[14]);\n\t\tv=max(v,v^p[13]);\n\t\tv=max(v,v^p[12]);\n\t\tv=max(v,v^p[11]);\n\t\tv=max(v,v^p[10]);\n\t\tv=max(v,v^p[9]);\n\t\tv=max(v,v^p[8]);\n\t\tv=max(v,v^p[7]);\n\t\tv=max(v,v^p[6]);\n\t\tv=max(v,v^p[5]);\n\t\tv=max(v,v^p[4]);\n\t\tv=max(v,v^p[3]);\n\t\tv=max(v,v^p[2]);\n\t\tv=max(v,v^p[1]);\n\t\tv=max(v,v^p[0]);\n\t\treturn v;\n\t}\n};\nint t[50010],n,m,a[50010],block,belong[50010],cnt;\ninline void upd(int x,int k){\n\tfor(register int i=x;i<=n;i+=(i&-i)){\n\t\tt[i]^=k;\n\t}\n}\ninline int query(int x){\n\tregister int ans=0;\n\tfor(register int i=x;i>=1;i-=(i&-i)){\n\t\tans^=t[i];\n\t}\n\treturn ans;\n}\nstruct Seg_tree{\n\tLinebase b[200010];\n\tinline void build(int l,int r,int rt){\n\t\tfor(int i=l;i<=r;i++){\n\t\t\tb[rt].insert(a[i]);\n\t\t}\n\t\tif(l==r) return;\n\t\tint mid=l+r>>1;\n\t\tbuild(l,mid,rt<<1);\n\t\tbuild(mid+1,r,rt<<1|1);\n\t}\n\tinline void modify(int pos,int l,int r,int rt,int k){\n\t\tif(l==r){\n\t\t\tb[rt]=Linebase();\n\t\t\ta[l]^=k;\n\t\t\tb[rt].insert(a[l]);\n\t\t\treturn ;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tif(pos<=mid) modify(pos,l,mid,rt<<1,k);\n\t\telse     modify(pos,mid+1,r,rt<<1|1,k);\n\t\tb[rt]=b[rt<<1]+b[rt<<1|1];\n\t}\n\tinline Linebase query(int ql,int qr,int rt,int l,int r){\n\t\tif(ql==l&&qr==r) return b[rt];\n\t\tint mid=ql+qr>>1;\n\t\tif(mid>=r) return query(ql,mid,rt<<1,l,r);\n\t\telse if(mid<l) return query(mid+1,qr,rt<<1|1,l,r);\n\t\telse return query(ql,mid,rt<<1,l,mid)+query(mid+1,qr,rt<<1|1,mid+1,r);\n\t}\n}T;\nint main(){\n\tfread(ss=ibuf,1,18<<20,stdin);\n\tn=read(),m=read();\n\tfor(register int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tfor(register int i=n;i>=2;i--){\n\t\ta[i]^=a[i-1];\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tupd(i,a[i]);\n\t}\n    T.build(1,n,1);\n\twhile(m--){\n\t\tregister int opt=read(),l=read(),r=read(),v=read();\n\t\tif(opt==1){\n\t\t\tupd(l,v);\n\t\t\tT.modify(l,1,n,1,v);\n\t\t\tif(r<n){\n\t\t\t\tupd(r+1,v);\n\t\t\t\tT.modify(r+1,1,n,1,v);\n\t\t\t}\n\t\t}else{\n\t\t\tregister int k=query(l);\n\t\t\tif(l==r){\n\t\t\t\twrite(max(v,v^k));\n\t\t\t\tout[len++]='\\n';\n\t\t\t}else{\n\t    \t\tLinebase c=T.query(1,n,1,l+1,r);\n                c.insert(k);\n\t    \t\twrite(c.getmax(v));\n\t    \t\tout[len++]='\\n';\n\t\t\t}\n\t\t}\n\t}\n\tfwrite(out,1,len,stdout);\n    return 0;\n}\n  /*\n  Time:7.25s\n  Memory:31.10MB\n  AC\n  100pts\n  */\n```\n\u8fd9\u662f\u6211\u505a\u7684\u7b2c\u56db\u9053 $Ynoi$\uff0c\u5199\u7684\u7b2c\u4e00\u7bc7 $Ynoi$ \u9898\u89e3\uff0c\u5e0c\u671b\u5927\u5bb6\u652f\u6301\uff0c\u8c22\u8c22\u3002",
        "postTime": 1612311898,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u9053 Ynoi\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6027\u57fa\u3001\u6811\u72b6\u6570\u7ec4\uff08\u53ef\u6709\u53ef\u4e0d\u6709\uff09\u3001\u7ebf\u6bb5\u6811\u3001\u5dee\u5206\u3002\n\n\u770b\u5230\u9898\u9762\uff1a\u6700\u5927\u5f02\u6216\u548c\uff0c\u60f3\u5230\u4e861\u4e2a\u591a\u6708\u524d\u4e86\u89e3\u8fc7\u7684\u7b97\u6cd5\uff1a\u7ebf\u6027\u57fa\u3002\n\n\u53c8\u662f\u533a\u95f4\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\uff0c\u6240\u4ee5\u8fd9\u9898\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957\u7ebf\u6027\u57fa\u6765\u505a\u3002\n\n\u4f46\u662f\u7ebf\u6027\u57fa\u5e76\u4e0d\u80fd\u591f\u533a\u95f4\u4fee\u6539\uff0c\u53ef\u884c\u7684\u65b9\u6cd5\u5c31\u53ea\u6709\u5148\u5c06\u539f\u6570\u7ec4\u8fdb\u884c\u5dee\u5206\u3002\n\n\u6211\u4eec\u8bbe\u539f\u6570\u7ec4\u4e3a $a$\uff0c\u5dee\u5206\u540e\u4e3a $b$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $i \\in n,i\\ne 1$\uff0c\u90fd\u6709 $a_{i-1} \\oplus b_i = a_i$\u3002\n\n\u7a0d\u52a0\u601d\u8003\u540e\u5373\u53ef\u53d1\u73b0\u53ea\u8981\u7ebf\u6027\u57fa\u4e2d\u51fa\u73b0 $a_{i-1}$ \u548c $b_i$\uff0c$a_{i-1}$ \u548c $a_{i}$ \u90fd\u80fd\u88ab\u6784\u9020\u51fa\u6765\u3002\u56e0\u4e3a $a_i$ \u5728 $a_{i-1}$ \u7684\u57fa\u7840\u4e0a\u589e\u52a0\u6216\u51cf\u5c11\u4e86\u4e00\u4e9b\u6570\u4f4d\uff0c$b_i$ \u548c $a_i \\oplus a_{i-1}$ \u662f\u7b49\u4ef7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u5728\u7ebf\u6027\u57fa\u4e2d\u589e\u52a0 $a_{i-1}$ \u548c $a_i$\u3002\uff08\u8fd9\u91cc\u5f88\u5173\u952e\uff0c\u4e00\u5b9a\u8981\u4ed4\u7ec6\u601d\u8003\uff01\uff09\n\n\u6839\u636e\u4e0a\u9762\u7684\u63a8\u5bfc\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u6c42\u51fa\u542b\u6709 $a_l, b_{l+1}, b_{l+2},......,b_r$ \u7684\u7ebf\u6027\u57fa\u3002\n\n\u4e3a\u4e86\u5e38\u6570\u66f4\u5c0f\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u524d\u7f00\u548c\u6c42 $a_l$\u3002\n\n\u8bbe $2^W \\leq \\max{a_i} < 2^{W+1}$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u4e3a $O(Wm\\log n)$\u3002\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//#define int long long\nnamespace IO\n{\n\tinline int read()\n\t{\n\t\tint x = 0, f = 1;\n\t\tchar ch = getchar();\n\t\twhile(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n\t\twhile(isdigit(ch)) x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n\t\treturn x * f;\n\t}\n\ttemplate <typename T> inline void print(T x)\n\t{\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tif(x > 9) print(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace IO;\n#define ls id << 1\n#define rs id << 1 | 1\nconst int N = 5e4 + 5;\nstruct lineb\n{\n\tint p[32];\n\tvoid init() {for (int i = 0; i <= 29; i++) p[i] = 0;}\n\tvoid insert(int x)\n\t{\n\t\tfor (int i = 29; i >= 0; i--)\n\t\t\tif (x & (1 << i)) {if (!p[i]) {p[i] = x; break;} x ^= p[i];}\t\n\t}\t\n};\nstruct segt\n{\n\tlineb sum;\n}t[N << 2];\nint n, m, v[N];\nstruct BIT\n{\n\tint tr[N];\n\tint lowbit(int x) {return x & -x;}\n\tvoid add(int p, int x) {for (int i = p; i <= n; i += lowbit(i)) tr[i] ^= x;}\n\tint query(int p)\n\t{\n\t\tint res = 0;\n\t\tfor (int i = p; i >= 1; i -= lowbit(i)) res ^= tr[i];\n\t\treturn res;\n\t}\n}sum;\nlineb merge(lineb x, lineb y)\n{\n\tfor (int i = 29; i >= 0; i--)\n\t\tif (y.p[i]) x.insert(y.p[i]);\n\treturn x;\n}\nvoid build(int id, int l, int r)\n{\n\tif (l == r)\n\t{\n\t\tt[id].sum.insert(v[l]);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\n\tt[id].sum = merge(t[ls].sum, t[rs].sum);\n}\nvoid update(int id, int l, int r, int p, int x)\n{\n\tif (l == r)\n\t{\n\t\tt[id].sum.init();\n\t\tt[id].sum.insert(v[l]);\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (p <= mid) update(ls, l, mid, p, x);\n\telse update(rs, mid + 1, r, p, x);\n\tt[id].sum = merge(t[ls].sum, t[rs].sum);\n}\nlineb query(int id, int l, int r, int a, int b)\n{\n\tif (a <= l && b >= r) return t[id].sum;\n\tint mid = (l + r) >> 1;\n\tlineb res;\n\tres.init();\n\tif (a <= mid) res = merge(res, query(ls, l, mid, a, b));\n\tif (b > mid) res = merge(res, query(rs, mid + 1, r, a, b));\n\treturn res;\n}\nsigned main()\n{\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; i++) v[i] = read();\n    for (int i = n; i >= 1; i--) v[i] ^= v[i - 1], sum.add(i, v[i]);\n\tbuild(1, 1, n);\n\twhile (m--)\n\t{\n\t\tint opt = read(), l = read(), r = read(), k = read();\n\t\tif (opt == 1)\n\t\t{\n\t\t\tv[l] ^= k, v[r + 1] ^= k;\n\t\t\tsum.add(l, k), sum.add(r + 1, k);\n\t\t\tupdate(1, 1, n, l, k);\n\t\t\tif (r < n) update(1, 1, n, r + 1, k);\n\t\t}\n\t\telse\n\t\t{\n            if (l == r) \n            {\n                print(max(k ^ sum.query(l), k)), puts(\"\");\n                continue;\n            }\n\t\t\tlineb now = query(1, 1, n, l + 1, r);\n\t\t\tnow.insert(sum.query(l));\n\t\t\tfor (int i = 29; i >= 0; i--)\n\t\t\t\tk = max(k, k ^ now.p[i]);\n\t\t\tprint(k), puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n} \n\n```\n",
        "postTime": 1671686477,
        "uid": 570066,
        "name": "Fatal_Cactus",
        "ccfLevel": 6,
        "title": "P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017 \u9898\u89e3"
    },
    {
        "content": "[\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/solution-p5607.html)\n\n## \u7b80\u8981\u9898\u610f\n\n\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u4e2a\u90e8\u5206\u53ef\u4ee5\u4e0d\u8981\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u9898\u9762\u8fd8\u662f\u5f88\u6e05\u6670\u7684\u3002\n\n\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u533a\u95f4\u5f02\u6216\u548c\u533a\u95f4\u6c42\u4e0e $v$ \u7684\u6700\u5927\u5f02\u6216\u548c\u3002\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u8fd9\u79cd\u533a\u95f4\u95ee\u9898\uff0c\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f ~~\u5206\u5757~~ \u7ebf\u6bb5\u6811\u3002\n\n\u800c\u5bf9\u4e8e\u590d\u6742\u7684\u5f02\u6216\u95ee\u9898\uff0c\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f ~~01 Trie~~ \u7ebf\u6027\u57fa\u3002\n\n\u5408\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u7ebf\u6bb5\u662f\u5957\u7ebf\u6027\u57fa\u3002~~\uff08\u597d\u50cf\u8fd8\u7528\u4e86\u9876\u9488\u7684\u624b\u6cd5\uff09~~\n\n\u505a\u8fd9\u9053\u9898\u4e4b\u524d\u5efa\u8bae\u5148\u505a [P4839 P\u54e5\u7684\u6876](https://www.luogu.com.cn/problem/P4839) \u90a3\u662f\u8fd9\u4e00\u9053\u9898\u7684\u5f31\u5316\u7248\u3002\n\n\uff08\u73b0\u5728\u9ed8\u8ba4\u5927\u5bb6\u5df2\u7ecf\u505a\u8fc7P\u54e5\u7684\u6876\u4e86\uff09\n\nP\u54e5\u7684\u6876\u4e2d\uff0c\u662f\u5355\u70b9\u4fee\u6539\uff0c\u800c\u8fd9\u9053\u9898\u662f\u533a\u95f4\u4fee\u6539\uff0c\u7528\u4f20\u7edf\u7684\u6253tag\u662f\u4e0d\u65b9\u4fbf\u7ef4\u62a4\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5dee\u5206\u7684\u601d\u60f3\u3002\n\nSol1\u5927\u4f6c\u7684\u6587\u7ae0\u5df2\u7ecf\u6709\u4e86\u6b63\u786e\u6027\u8bc1\u660e\uff0c\u6211\u8fd9\u91cc\u5c31\u53e3\u80e1\u4e00\u4e0b\u7ed3\u8bba\uff1a\n\n> \u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u5f02\u6216\u5dee\u5206\u6570\u7ec4 $b$\uff0c\u7136\u540e\u6bcf\u6b21\u8be2\u95ee $[l,r]$ \u5c31\u5728\u7ebf\u6bb5\u6811\u4e0a\u8be2\u95ee $[l+1,r]$\uff0c\u518d\u63d2\u5165 $a_l$ \u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u5dee\u5206\u7684\u8fc7\u7a0b\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\uff08\u8fd9\u91cc\u662f\u6811\u72b6\u6570\u7ec4\uff09\n\n## \u7ec6\u8282\n\n\uff08\u7531\u4e8e\u6ca1\u7279\u5224 $l=r$ $45$ \u5206\u6302\u4e86\u5f88\u4e45\uff09\n\n\u6ce8\u610f\u8981\u7279\u5224 $l=r$\uff0c\u5982\u679c $l=r$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u7b54\u6848\u5c31\u662f $\\max\\{\\operatorname{BIT.query}(l) \\operatorname{xor} v,v\\}$\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u7684\u6ce8\u91ca\u4e5f\u6709\u8bf4\u660e\uff08\u867d\u7136\u662f\u8e69\u811a\u7684\u82f1\u6587\u7684\uff09\n\n## \u4ee3\u7801\n\n\uff08\u7eaa\u5ff5\uff0c\u8fd9\u662f\u6211A\u7684\u7b2c\u4e8c\u9053Ynoi\uff0c\u4e5f\u662f\u7b2c\u4e00\u7bc7\u8bd5\u56fe\u63d0\u4ea4\u9898\u89e3\u7684Ynoi\uff09\n\n\u91cc\u9762\u6709\u4e00\u4efd\u7ebf\u6027\u57fa\u6a21\u677f\uff0c\u5982\u679c\u60a8\u89c9\u5f97\u6211\u7684\u4ee3\u7801\u597d\uff0c\u53ef\u4ee5\u53c2\u8003\u3002\n\n\u4e0d\u7528\u5361\u5e38\uff0c\u597d\u8036\uff01\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nnamespace Basis{\n\tconst int MAX_BIT = 30;\n\tstruct Basis{\n\t\tint p[MAX_BIT+5];\n\t\tint _how_many_numbers_can_xor;\n\t\tvoid clear(){\n\t\t\tmemset(p,0,sizeof(p));\n\t\t\t_how_many_numbers_can_xor=0;\n\t\t}\n\t\tBasis(){\n\t\t\tclear();\n\t\t}\n\t\tvoid insert(int x){\n\t\t\tfor(int i=MAX_BIT;i>=0;i--){\n\t\t\t\tif(!(x&(1ll<<i)))continue;\n\t\t\t\tif(!p[i]){\n\t\t\t\t\tp[i]=x;\n\t\t\t\t\t_how_many_numbers_can_xor++;\n\t\t\t\t\tbreak;\n\t\t\t\t}   \n\t\t\t\tx^=p[i];\n\t\t\t}\n\t\t}\n\t\tint max_xor(int init=0){\n\t\t\tint ans=init;\n\t\t\tfor(int i=MAX_BIT;i>=0;i--){\n\t\t\t\tif((ans^p[i])>ans){\n\t\t\t\t\tans^=p[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\tbool can_be_xor(int x){\n\t\t\tfor(int i=MAX_BIT;i>=0;i--){\n\t\t\t\tif(x&(1ll<<i))x^=p[i];\n\t\t\t}\n\t\t\treturn x==0;\n\t\t}\n\t\tint numbers_can_xor(){\n\t\t\treturn (1ll<<_how_many_numbers_can_xor);\n\t\t}\n\t\tvoid expand(Basis &x){\n\t\t\tfor(int i=MAX_BIT;i>=0;i--){\n\t\t\t\tif(x.p[i]){\n\t\t\t\t\tinsert(x.p[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tBasis merge(Basis x,Basis y){\n\t\tfor(int i=MAX_BIT;i>=0;i--){\n\t\t\tif(y.p[i])x.insert(y.p[i]);\n\t\t}\n\t\treturn x;\n\t}\n}\n\nint n,m;\nint a[50005];\n\nnamespace sgt{\n\tBasis::Basis t[200005];\n\t\n\tvoid pushup(int i){\n\t\tt[i]=Basis::merge(t[i<<1],t[i<<1|1]);\n\t}\n\tvoid build(int i,int l,int r){\n\t\tfor(int ii=l;ii<=r;ii++){\n\t\t\tt[i].insert(a[ii]);\n\t\t}\n\t\tif(l==r){\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(i<<1,l,mid);\n\t\tbuild(i<<1|1,mid+1,r);\n\t\tpushup(i);\n\t}\n\tvoid update(int x,int v,int i,int l,int r){\n\t\tif(l==r){\n\t\t\tt[i].clear();\n\t\t\ta[l]^=v;\n\t\t\tt[i].insert(a[l]);\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid){\n\t\t\tupdate(x,v,i<<1,l,mid);\n\t\t}\n\t\telse{\n\t\t\tupdate(x,v,i<<1|1,mid+1,r);\n\t\t}\n\t\tpushup(i);\n\t}\n\tBasis::Basis query(int ql,int qr,int i,int l,int r){\n\t\tif(ql<=l&&r<=qr){\n\t\t\treturn t[i];\n\t\t}\n\t\tBasis::Basis result;\n\t\tint mid=(l+r)>>1;\n\t\tif(ql<=mid){\n\t\t\tresult=merge(result,query(ql,qr,i<<1,l,mid));\n\t\t}\n\t\tif(qr>mid){\n\t\t\tresult=merge(result,query(ql,qr,i<<1|1,mid+1,r));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nnamespace BIT{\n\tint t[50005];\n\tvoid clear(){\n\t\tmemset(t,0,sizeof(t));\n\t}\n\tinline int lowbit(int x){\n\t\treturn x&(-x);\n\t}\n\tvoid update(int p,int v){\n\t\twhile(p<=n){\n\t\t\tt[p]^=v;\n\t\t\tp+=lowbit(p);\n\t\t}\n\t}\n\tint query(int p){\n\t\tint ret=0;\n\t\twhile(p){\n\t\t\tret^=t[p];\n\t\t\tp-=lowbit(p);\n\t\t}\n\t\treturn ret;\n\t}\n}\n\nvoid getdiff(){\n\tfor(int i=n;i>1;i--){\n\t\ta[i]^=a[i-1];\n\t}\n}\n\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcout.tie(nullptr);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tBIT::clear();\n\tgetdiff();\n\tfor(int i=1;i<=n;i++){\n\t\tBIT::update(i,a[i]);\n\t}\n\tsgt::build(1,1,n);\n\twhile(m--){\n\t\tint op,l,r,v;\n\t\tcin>>op>>l>>r>>v;\n\t\tif(op==1){\n\t\t\tBIT::update(l,v);\n\t\t\tsgt::update(l,v,1,1,n);\n\t\t\tif((r+1)<=n){\n\t\t\t\tBIT::update(r+1,v);\n\t\t\t\tsgt::update(r+1,v,1,1,n);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tint lft=BIT::query(l);\n\t\t\tif(l==r){\n\t\t\t\t// If l equals r\n\t\t\t\t// Then there are only two possibilities:LFT xor v | v\n\t\t\t\tcout<<max(v,lft^v)<<'\\n';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tBasis::Basis result=sgt::query(l+1,r,1,1,n);\n\t\t\tresult.insert(lft);\n\t\t\tcout<<(result.max_xor(v))<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659526451,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017"
    },
    {
        "content": "# \u65e0\u529b\u56de\u5929NOI2017\n\n\u611f\u89c9\u662f Ynoi \u4e2d\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u9898\u4e86\u3002\n\n## \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217 $A$\uff0c\u8981\u6c42\u4f60\u5b8c\u6210\u533a\u95f4\u5f02\u6216\uff0c\u533a\u95f4\u67e5\u8be2\u5f02\u6216\u4e0a $v$ \u6700\u5927\u503c\u7684\u64cd\u4f5c\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\uff0c\u533a\u95f4\u5f02\u6216\u64cd\u4f5c\u662f\u4e0d\u597d\u505a\u7684\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4ee4 $b_i=a_i\\oplus a_{i-1}$ \u8fd9\u6837\u5b50\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4$[l,r]$ \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u5c31\u53ea\u6539\u53d8\u4e86 $b_l$ \u548c $b_{r+1}$\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u539f\u6765\u533a\u95f4\u7684\u4e00\u4e2a $a_i$ \uff0c\u5176\u4e2d $i\\in[l,r]$\uff0c\u90a3\u4e48 $a_i=a_l\\oplus b_{l+1}\\oplus\\cdots \\oplus b_{r}$ \u3002\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u539f\u5148\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u7684 $A$ \u5e8f\u5217\u7684\u7ebf\u6027\u57fa\u4e0e  $b_{l+1\\sim r}$ \u548c $a_l$ \u6240\u6784\u6210\u7684\u7ebf\u6027\u57fa\u662f\u7b49\u4ef7\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7ebf\u6027\u57fa\u3002\u533a\u95f4\u5408\u5e76\u7684\u65f6\u5019\u5c31\u628a\u4e00\u4e2a\u7ebf\u6027\u57fa\u66b4\u529b\u63d2\u5165\u4e00\u4e2a\u7ebf\u6027\u57fa\u5185\uff0c\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7 $O(\\log^2 w)$ \u5176\u4e2d $w$ \u4e3a\u503c\u57df\u3002\n\n\u7136\u540e\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u7684\u65f6\u5019\uff0c\u5c31\u628a\u5bf9\u5e94\u7684\u7ebf\u6027\u57fa\u6784\u9020\u51fa\u6765\u65e2\u53ef\u3002\n\n\u7136\u540e\u5728\u7ebf\u6027\u57fa\u4e0a\u8be2\u95ee\u5f02\u6216\u4e0a\u67d0\u4e2a\u503c\u7684\u6700\u5927\u503c\u662f\u57fa\u672c\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n \\log ^2 w+m \\log n \\log ^2w)$\n\n```cpp\n#include <bits/stdc++.h>\nconst int N = 5e4 + 10, U = 30;\nint n, m, L[N * 4], R[N * 4];\nunsigned int a[N], b[N], tag[N * 4];\nstruct XXJ {\n\tunsigned int a[U];\n\tvoid clear() {\n\t\tmemset(a, 0, sizeof a);\n\t}\n\tvoid insert(unsigned int x) {\n\t\tfor (int i(U - 1); ~i; --i) {\n\t\t\tif (x >> i) {\n\t\t\t\tif (!a[i]) {\n\t\t\t\t\ta[i] = x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx ^= a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfriend XXJ operator + (XXJ A, XXJ B) {\n\t\tXXJ res = A;\n\t\tfor (int i(U - 1); ~i; --i) {\n\t\t\tif (B.a[i]) {\n\t\t\t\tres.insert(B.a[i]);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\tunsigned int max(unsigned int ans) {\n\t\tfor (int i(U - 1); ~i; --i) {\n\t\t\tif ((ans ^ a[i]) > ans) {\n\t\t\t\tans ^= a[i];\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n} bit[N * 4];\ninline int ls(int k) {\n\treturn k << 1;\n}\ninline int rs(int k) {\n\treturn k << 1 | 1;\n}\nvoid build(int k, int l, int r) {\n\tL[k] = l;\n\tR[k] = r;\n\tif (l == r) {\n\t\tbit[k].insert(b[l]);\n\t\treturn;\n\t}\n\tint mid((l + r) / 2);\n\tbuild(ls(k), l, mid);\n\tbuild(rs(k), mid + 1, r);\n\tbit[k] = bit[ls(k)] + bit[rs(k)];\n}\nvoid modify(int k, int pos, unsigned int x) {\n\tif (L[k] == R[k]) {\n\t\tbit[k].clear();\n\t\tbit[k].insert(x);\n\t\treturn;\n\t}\n\tint mid((L[k] + R[k]) / 2);\n\tpos <= mid ? modify(ls(k), pos, x) : modify(rs(k), pos, x);\n\tbit[k] = bit[ls(k)] + bit[rs(k)];\n}\nvoid modify(int k, int ql, int qr, unsigned int x) {\n\tif (ql <= L[k] && R[k] <= qr) {\n\t\ttag[k] ^= x;\n\t\treturn;\n\t}\n\tint mid((L[k] + R[k]) / 2);\n\tif (ql <= mid) {\n\t\tmodify(ls(k), ql, qr, x);\n\t}\n\tif (mid < qr) {\n\t\tmodify(rs(k), ql, qr, x);\n\t}\n\tbit[k] = bit[ls(k)] + bit[rs(k)];\n}\nXXJ query(int k, int l, int r) {\n\tif (l <= L[k] && R[k] <= r) {\n\t\treturn bit[k];\n\t}\n\tint mid((L[k] + R[k]) / 2);\n\tif (l <= mid && mid < r) {\n\t\treturn query(ls(k), l, r) + query(rs(k), l, r);\n\t}\n\telse if (l <= mid) {\n\t\treturn query(ls(k), l, r);\n\t}\n\telse {\n\t\treturn query(rs(k), l, r);\n\t}\n}\nunsigned int ask(int k, int pos) {\n    if (L[k] == R[k]) {\n        return tag[k];\n    }\n    int mid((L[k] + R[k]) / 2);\n    return tag[k] ^ (pos <= mid ? ask(ls(k), pos) : ask(rs(k), pos));\n}\nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i(1); i <= n; ++i) {\n\t\tscanf(\"%u\", a + i);\n\t\tb[i] = a[i] ^ a[i - 1];\n\t}\n\tbuild(1, 1, n);\n\tfor (int i = 1, op, l, r; i <= m; ++i) {\n\t\tunsigned int v;\n\t\tscanf(\"%d %d %d %u\", &op, &l, &r, &v);\n\t\tif (op == 1) {\n\t\t\tmodify(1, l, r, v);\n\t\t\tmodify(1, l, b[l] ^= v);\n\t\t\tif (r < n) {\n\t\t\t\tmodify(1, r + 1, b[r + 1] ^= v);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tXXJ tmp;\n\t\t\tif (l < r) {\n\t\t\t\ttmp = query(1, l + 1, r);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.clear();\n\t\t\t}\n\t\t\ttmp.insert(ask(1, l) ^ a[l]);\n\t\t\tprintf(\"%u\\n\", tmp.max(v));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n**\u559c\u63d0\u6700\u52a3\u89e3**",
        "postTime": 1617725839,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "\u65e0\u529b\u56de\u5929 NOI2107 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u505a\u6cd5\uff1a\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7ebf\u6bb5\u6811\u5957\u7ebf\u6027\u57fa\n\nYnoi 2 \u8840\uff01\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff01\n\n\u9898\u610f\uff1a\u8bf7\u6784\u9020\u4e00\u79cd\u652f\u6301\u533a\u95f4\u5f02\u6216\uff0c\u533a\u95f4\u6700\u5927\u5f02\u6216\u548c\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u770b\u5230\u533a\u95f4\u5f02\u6216\u548c\u6700\u5927\uff0c\u6211\u4eec\u4f1a\u60f3\u5230[\u7ebf\u6027\u57fa](https://www.luogu.com.cn/problem/P3812)\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u89e3\u51b3\u533a\u95f4\u4fee\u6539\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u89e3\u51b3\u5982\u4f55[\u5355\u70b9\u4fee\u6539](https://www.luogu.com.cn/problem/P4839)\u3002\n\n\u5355\u70b9\u4fee\u6539\uff1a\n\n```cpp\nvoid change(int p,int v,int x){\n\tif(s[p].l>v||s[p].r<v)return;\n\tif(s[p].l==v&&s[p].r==v)return s[p].fifi.insert(x);\n\tchange(lc,v,x);change(rc,v,x);\n\tpushup(p);\n}\n```\n\u53ea\u9700\u8981\u5bf9\u8be5\u70b9\u7684\u7ebf\u6027\u57fa\u8fdb\u884c\u4fee\u6539\u7136\u540e ```pushup``` \u5373\u53ef\u3002\n\n```pushup``` \u51fd\u6570\u6211\u4eec\u9700\u8981\u5b8c\u6210\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n$1.$ \u6e05\u7a7a\u7ebf\u6027\u57fa\n\n$2.$ \u63d2\u5165\u7ebf\u6027\u57fa\n\n\u6e05\u7a7a\u7ebf\u6027\u57fa\u5341\u5206\u7b80\u5355\uff0c\u76f4\u63a5 ```memset``` \u5373\u53ef\u3002\n\n\u5b8c\u6210\u6a21\u677f\u9898\u6211\u4eec\u5df2\u7ecf\u4f1a\u5355\u4e2a\u6570\u63d2\u5165\u7ebf\u6027\u57fa\u3002\n\n\u5c06\u7ebf\u6027\u57fa\u63d2\u5165\u7ebf\u6027\u57fa\u4e5f\u5341\u5206\u7b80\u5355\uff0c\u76f4\u63a5\u6bcf\u4e00\u4f4d\u90fd\u63d2\u5165\u5373\u53ef\u3002\n\n```cpp\nvoid insert(lb x){\n\tfor(int i=kk;i>=0;i--)if(x.p[i])insert(x.p[i]);\n}\n```\n\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u7684\u505a\u5230\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6700\u5927\u5f02\u6216\u548c\u67e5\u627e\u3002\n\n\u8003\u8651\u533a\u95f4\u4fee\u6539\uff0c\u5b9e\u9645\u4e0a\u533a\u95f4\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217 $a$ \uff0c\u5b83\u7684\u5dee\u5206\u5e8f\u5217 $b$ \u3002\n\n$lb: \\mathit a_{l,r}=lb: \\mathit a_l \\cup  \\mathit b_{l,r}$\n\n\u5982\u4f55\u8bc1\u660e\uff1f\n\n\u56e0\u4e3a $a_n=\\oplus_{i=0}^n b_i$\n\n\u6240\u4ee5 $a_{l+1,r}$ \u4e2d\u7684\u6240\u6709\u6570\u90fd\u53ef\u4ee5\u7528 $ \\mathit b_{l,r}$ \u5f02\u6216\u51fa\u6765\n\n\u56e0\u6b64\uff1a $lb: \\mathit a_{l,r}=lb: \\mathit a_l \\cup  \\mathit b_{l,r}$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u7ebf\u6027\u57fa\u4e86\u3002\n\n\u5148\u7ef4\u62a4\u4e00\u4e2a\u5f02\u6216\u6811\u72b6\u6570\u7ec4\u4f5c\u4e3a\u5dee\u5206\u6570\u7ec4\u3002\n\n\u540c\u65f6\uff0c\u8ba1\u7b97\u51fa\u539f\u5e8f\u5217\u7684\u5dee\u5206\u5e8f\u5217\uff0c\u5efa\u51fa\u7ebf\u6bb5\u6811\u3002\n\n```cpp\nfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\nfor(int i=n;i>=2;i--)a[i]^=a[i-1];\nfor(int i=1;i<=n;i++)fifi.change(i,a[i]);\n```\n\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u5bf9\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u4fdd\u8bc1\u5bf9\u539f\u5e8f\u5217\u7684\u7ef4\u62a4\u3002\n\n\u540c\u65f6\u4fee\u6539\u7ebf\u6bb5\u6811\uff0c\u5bf9\u5dee\u5206\u7ebf\u6027\u57fa\u8fdb\u884c\u4fee\u6539\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u627e\u51fa\u5dee\u5206\u6811\u72b6\u6570\u7ec4\u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u67e5\u627e\u51fa\u5f53\u524d\u7684\u533a\u95f4\u7ebf\u6027\u57fa\u3002\n\n\u628a\u6811\u72b6\u6570\u7ec4\u7684\u503c\u63d2\u5165\u7ebf\u6027\u57fa\u3002\u540c\u65f6\u6839\u636e\u9898\u610f\uff0c\u67e5\u8be2\u5f02\u6216 $v$ \u7684\u6700\u5927\u503c\u3002\n\n\u5f53\u7136\uff0c\u8981\u7279\u5224 ```l==r``` \u7684\u60c5\u51b5\uff1a\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define lc p<<1\n#define rc p<<1|1\n#define kk 29\n#define N 214514\nusing namespace std;\nint n,m,a[N];\nstruct lb{\n\tint p[100],cnt;\n\tbool zero;\n\tlb(){cnt=zero=0,memset(p,0,sizeof(p));}\n\tvoid clear(){cnt=zero=0,memset(p,0,sizeof(p));}\n\tvoid insert(int x){\n\t\tif(x==0)zero=0;\n\t\tfor(int i=kk;i>=0;i--){\n\t\t\tif(x&(1<<i)){\n\t\t\t\tif(!p[i]){p[i]=x,cnt++;return;}\n\t\t\t\telse x^=p[i];\n\t\t\t}\n\t\t}\n\t}\n\tvoid insert(lb x){for(int i=kk;i>=0;i--)if(x.p[i])insert(x.p[i]);}\n\tint querymax(int v=0){\n\t\tint ans=v;\n\t\tfor(int i=kk;i>=0;i--)ans=max(ans^p[i],ans);\n\t\treturn ans;\n\t}\n}ans,ept;\nstruct segmenttree{\n\tint l,r;\n\tlb fifi;\n}s[N];\nvoid pushup(int p){\n\ts[p].fifi.clear();\n\ts[p].fifi.insert(s[lc].fifi);\n\ts[p].fifi.insert(s[rc].fifi);\n}\nvoid build(int p,int l,int r){\n\ts[p].l=l,s[p].r=r;\n\ts[p].fifi.clear();\n\tfor(int i=l;i<=r;i++)s[p].fifi.insert(a[i]);\n\tif(l==r)return ;//s[p].fifi.insert(a[l]);\n\tbuild(lc,l,(l+r)/2);\n\tbuild(rc,((l+r)/2)+1,r);\n\tpushup(p);\n}\nvoid change(int p,int v,int x){\n\tif(s[p].l>v||s[p].r<v)return;\n\tif(s[p].l==v&&s[p].r==v)return s[p].fifi.clear(),s[p].fifi.insert(a[v]^=x);\n\tchange(lc,v,x);change(rc,v,x);\n\tpushup(p);\n}\nlb query(int p,int l,int r){\n\tlb res;\n\tif(s[p].l>r||s[p].r<l)return ept;\n\tif(s[p].l>=l&&s[p].r<=r)return s[p].fifi;\n\tres.clear();\n\tres.insert(query(lc,l,r));\n\tres.insert(query(rc,l,r));\n\treturn res;\n}\nstruct bit{\n\tint t[N];\n\tbit(){memset(t,0,sizeof(t));}\n\tint lowbit(int x){return x&(-x);}\n\tvoid change(int x,int v){for(int i=x;i<=n;i+=lowbit(i))t[i]^=v;}\n\tint query(int x){int ans=0;for(int i=x;i;i-=lowbit(i))ans^=t[i];return ans;}\n}fifi;\nsigned main(){\n\tept.clear();\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=n;i>=2;i--)a[i]^=a[i-1];\n\tfor(int i=1;i<=n;i++)fifi.change(i,a[i]);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tint op,l,r,v;\n\t\tscanf(\"%d%d%d%d\",&op,&l,&r,&v);\n\t\tif(op==1){\n\t\t\tfifi.change(l,v),change(1,l,v);\n\t\t\tif(r<n)fifi.change(r+1,v),change(1,r+1,v);\n\t\t}else{\n\t\t\tint tmp=fifi.query(l);\n\t\t\tif(l==r)printf(\"%d\\n\",max(tmp^v,v));\n\t\t\telse{\n\t\t\t\tlb fi=query(1,l+1,r);\n\t\t\t\tfi.insert(tmp);\n\t\t\t\tprintf(\"%d\\n\",fi.querymax(v));\n\t\t\t}\n\t\t}\n\t} \n\treturn 0;\n}\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1658645458,
        "uid": 285617,
        "name": "\u9ed1\u5f71\u6d1e\u4eba",
        "ccfLevel": 5,
        "title": "P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3 \u65e0\u529b\u56de\u5929 NOI2017\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5607)\n\n\u8be2\u95ee\u6700\u5927 $\\operatorname{xor}$ \u548c\uff0c\u652f\u6301\u4fee\u6539\uff0c\u60f3\u5230\u7ebf\u6bb5\u6811\u5957\u7ebf\u6027\u57fa\u3002\n\n\u4f46\u662f\u64cd\u4f5c\u4e00\u53c8\u505a\u4e0d\u4e86\uff1a\u6253\u4e0d\u4e86 tag\u3002\u4e3a\u4ec0\u4e48\u6253\u4e0d\u4e86 tag \u5462\uff1f\u56e0\u4e3a tag \u53ea\u80fd\u8bb0\u5f55\u4e00\u4e2a\u6570\uff0c\u800c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u662f\u7ebf\u6027\u57fa\u800c\u4e0d\u662f\u5f02\u6216\u548c\uff0c\u5982\u679c\u6253\u6807\u8bb0\u7684\u8bdd\u8981\u6253\u4e0a\u5f88\u591a\u6570\u3002\n\n\u6240\u4ee5\u53ea\u80fd\u5355\u70b9\u4fee\u6539\u3002\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4**\u5dee\u5206\u6570\u7ec4**\uff0c\u7136\u540e\u64cd\u4f5c\u4e8c\u53c8\u600e\u4e48\u505a\u5462\uff1f\n\n\u8bbe\u5dee\u5206\u6570\u7ec4\u4e3a $b$\uff0c\u5982\u679c\u6211\u4eec\u8981\u67e5\u8be2 $[a_l,a_r]$ \u7684\u7ebf\u6027\u57fa\uff08\u8bbe\u5176\u4e3a\u7ebf\u6027\u57fa\u4e00\uff09\uff0c\u53ef\u4ee5\u67e5\u8be2 $a_l,[b_{l+1},b_r]$ \u7684\u7ebf\u6027\u57fa\uff08\u8bbe\u5176\u4e3a\u7ebf\u6027\u57fa\u4e8c\uff09\u3002\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\u4e8c\u7ebf\u6027\u57fa\u7b49\u4ef7\uff1a\n\n> \u82e5\u5728\u7ebf\u6027\u57fa\u4e8c\u4e2d\u9009\u62e9 $b_k$\uff0c\u53ef\u5728\u7ebf\u6027\u57fa\u4e00\u4e2d\u9009\u62e9 $a_{k-1},a_k$\uff1b\u82e5\u5728\u7ebf\u6027\u57fa\u4e00\u79cd\u9009\u62e9 $a_k$\uff0c\u5982\u679c $k=l$\uff0c\u5728\u7ebf\u6027\u57fa\u4e8c\u4e2d\u9009\u62e9 $a_l$\uff0c\u5982\u679c $k\u2260l$\uff0c\u53ef\u4ee5\u9009\u62e9 $a_l,[b_{l+1},b_k]$\u3002~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002~~ \n\n\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $b$ \u6570\u7ec4\u3002\u4f46\u662f\u8fd8\u6709\u4e2a $a_l$ \u600e\u4e48\u5904\u7406\u5462\uff1f\u60f3\u60f3\u6211\u4eec\u4f1a\u600e\u4e48\u64cd\u4f5c $a$ \u6570\u7ec4\uff1a\u533a\u95f4\u4fee\uff0c\u5355\u70b9\u67e5\u3002\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u90fd\u53ef\u4ee5\u3002\u5982\u679c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5219\u9700\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u3002\n\n\u6ce8\u610f\uff1a\u5dee\u5206\u6570\u7ec4\u8981\u4ece\u540e\u5f80\u524d\u7b97\u3002\n\n\u6ce8\u610f\uff1a\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\u5230\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u7ebf\u6027\u57fa\u8981\u8fdb\u884c\u91cd\u6784\uff0c\u6b64\u65f6\u53ef\u4ee5\u987a\u4fbf\u7ef4\u62a4\u4e0b\u5dee\u5206\u6570\u7ec4\uff0c\u5982\u8981\u4f7f\u7b2c $k$ \u4f4d\u5f02\u6216\uff0c\u4ee4 $a_k=a_k \\operatorname{xor} v$\uff0c\u518d\u5c06\u6b64\u6570\u63d2\u5165\u7ebf\u6027\u57fa\u3002\n\n\u6240\u4ee5\u73b0\u5728\u6709\uff1a$a$ \u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u7684\u524d\u7f00\u548c\u5373\u539f\u6570\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7ebf\u6027\u57fa\u3002\u95ee\u9898\u89e3\u51b3\u4e86\uff01\n\n```cpp\n//P5607\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 5e4 + 10;\nint n, m, a[N], bit[N];\n\nstruct node{\n\tint p[32], l, r;\n\tvoid ins(int k){\n\t\tfor(int i = 31; i >= 0; -- i){\n\t\t\tif(!(k&(1<<i))) continue;\n\t\t\tif(!p[i]){ p[i] = k; break; }\n\t\t\tk ^= p[i];\n\t\t}\n\t}\n\tvoid ins(node &k){\n\t\tfor(int i = 31; i >= 0; -- i) ins(k.p[i]);\n\t}\n\tint mx(int v){\n\t\tfor(int i = 31; i >= 0; -- i) v = max(v, v ^ p[i]);\n\t\treturn v;\n\t}\n} T[N<<2], res;\nstruct SegTree{\n\tvoid buildtree(int p, int l, int r){\n\t\tT[p].l = l, T[p].r = r;\n\t\tif(l == r) T[p].ins(a[l]);\n\t\telse{\n\t\t\tint mid = l + r >> 1;\n\t\t\tbuildtree(p<<1, l, mid);\n\t\t\tbuildtree(p<<1|1, mid+1, r);\n\t\t\tT[p].ins(T[p<<1]); T[p].ins(T[p<<1|1]);\n\t\t}\n\t}\n\tvoid modify(int p, int x, int v){\n\t\tif(T[p].l == T[p].r){\n\t\t\tmemset(T[p].p, 0, sizeof(T[p].p));\n\t\t\tT[p].ins(a[T[p].l] ^ v);\n\t\t\ta[T[p].l] ^= v;\n\t\t} else {\n\t\t\tint mid = T[p].l + T[p].r >> 1;\n\t\t\tif(x <= mid) modify(p<<1, x, v);\n\t\t\telse modify(p<<1|1, x, v);\n\t\t\tmemset(T[p].p, 0, sizeof(T[p].p));\n\t\t\tT[p].ins(T[p<<1]); T[p].ins(T[p<<1|1]);\n\t\t}\n\t}\n\tvoid query(int p, int l, int r){\n\t\tif(l <= T[p].l && T[p].r <= r) res.ins(T[p]);\n\t\telse {\n\t\t\tint mid = T[p].l + T[p].r >> 1;\n\t\t\tif(l <= mid) query(p<<1, l, r);\n\t\t\tif(mid < r) query(p<<1|1, l, r);\n\t\t}\n\t}\n} ST;\nstruct BIT{\n\tint lb(int x){ return x & -x; }\n\tvoid add(int p, int v){\n\t\twhile(p <= n) bit[p] ^= v, p += lb(p);\n\t}\n\tint pre(int r){\n\t\tint ans = 0;\n\t\twhile(r) ans ^= bit[r], r -= lb(r);\n\t\treturn ans;\n\t} \n} BIT;\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; ++ i) scanf(\"%d\", &a[i]);\n\tfor(int i = n; i; -- i) a[i] ^= a[i-1];\n\tfor(int i = 1; i <= n; ++ i) BIT.add(i, a[i]);\n\tST.buildtree(1, 1, n);\n\tfor(int i = 1, op, l, r, v; i <= m; ++ i){\n\t\tscanf(\"%d%d%d%d\", &op, &l, &r, &v);\n\t\tif(op == 1){\n\t\t\tST.modify(1, l, v), BIT.add(l, v);\n\t\t\tif(r < n) ST.modify(1, r+1, v), BIT.add(r+1, v);\n\t\t} else {\n\t\t\tmemset(res.p, 0, sizeof(res.p));\n\t\t\tres.ins(BIT.pre(l)); ST.query(1, l+1, r);\n\t\t\tprintf(\"%d\\n\", res.mx(v));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u81f3\u5c11\u4e5f\u662f\u4e00\u9053 Ynoi\uff0c\u867d\u7136\u601d\u7ef4\u96be\u5ea6\u53ef\u80fd\u6bd4\u522b\u7684 Ynoi \u7b80\u5355\u4e00\u70b9\uff0c\u4f46\u662f\u7ec6\u8282\u662f\u4e00\u70b9\u4e5f\u4e0d\u5c11\u7684\u3002",
        "postTime": 1652534569,
        "uid": 390770,
        "name": "AiRC0S",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 [LuoguP5607][Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e0b\u672c\u9898\u7684\u51e0\u4e2a\u5361\u5e38\u6280\u5de7\u3002\n\n\uff08\u76ee\u524d\u8fd0\u884c\u65f6\u95f4\u662f\u6240\u6709\u6d4b\u8bd5\u70b9\u603b\u548c 4.78s\uff0c\u5728\u7f16\u5199\u672c\u7bc7\u9898\u89e3\u65f6\u4f4d\u4e8e\u6700\u4f18\u89e3\u7b2c\u4e00\u4f4d\u3002\uff09\n\n\u4ee5\u4e0b\u63d0\u5230\u7684\u6240\u6709\u8fd0\u884c\u65f6\u95f4\u90fd\u662f\u6240\u6709\u6d4b\u8bd5\u70b9\u7684\u603b\u65f6\u95f4\u3002\n\n## \u5feb\u8bfb\u5feb\u8f93\n\n\u7531\u4e8e\u672c\u9898\u7684 IO \u91cf\u4e0d\u662f\u5f88\u5927\uff0c\u4f18\u5316\u5e45\u5ea6\u8f83\u5c0f\uff08400ms \u5de6\u53f3\uff09\u3002\n\n## \u7ebf\u6027\u57fa\u63d2\u5165\u4f18\u5316\n\n+ \u5728\u63d2\u5165\u65f6\u7ef4\u62a4\u7ebf\u6027\u57fa\u7684\u79e9\uff0c\u5982\u679c\u79e9\u5df2\u6ee1\uff0c\u5219\u53ef\u4ee5\u4e0d\u7528\u7ee7\u7eed\u63d2\u5165\u3002\n\n+ \u5728\u7ebf\u6027\u57fa\u5408\u5e76\u65f6\u4ece\u4f4e\u5230\u9ad8\u679a\u4e3e\u53e6\u4e00\u4e2a\u7ebf\u6027\u57fa\u4e2d\u7684\u6bcf\u4e00\u4f4d\u3002\n\n+ \u7531\u4e8e\u5728\u5408\u5e76\u65f6\u5df2\u7ecf\u77e5\u9053\u63d2\u5165\u6570\u7684\u6700\u9ad8\u4f4d\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u679a\u4e3e\u3002\n\n## \u7ebf\u6027\u57fa\u57fa\u672c\u64cd\u4f5c\u4f18\u5316\n\n+ \u4f7f\u7528 `memset` \u521d\u59cb\u5316\u7ebf\u6027\u57fa\u3002\n\n+ \u4f7f\u7528 `memcpy` \u7ed9\u7ebf\u6027\u57fa\u8d4b\u503c\u3002\n\n## \u7ebf\u6027\u57fa\u67e5\u8be2\u4f18\u5316\n\n+ \u5982\u679c\u79e9\u5df2\u6ee1\uff0c\u76f4\u63a5\u8fd4\u56de\u5168 1\u3002\n\n\u7136\u540e\u5c31\u80fd\u8dd1\u5f97\u98de\u5feb\uff0c\u6700\u5927\u7684\u70b9\u4e0d\u5230 500ms\u3002\n\n\u9644 AC \u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ninline void chkmax(int& a,int b) { if(b>a) a=b; }\n\nint getint() // \u672c\u9898\u8f93\u5165\u6ca1\u6709\u8d1f\u6570\uff0c\u5feb\u8bfb\u4e0d\u9700\u5224\u8d1f\u53f7\n{\n\tchar ch;\n\twhile((ch=getchar()) < '!') ;\n\tint x = ch^'0';\n\twhile((ch=getchar()) > '!') x = (x*10)+(ch^'0');\n\treturn x;\n}\n\nint get12() // \u8fd4\u56de 1 \u8868\u793a 2\uff0c\u8fd4\u56de 0 \u8868\u793a 1\n{\n\tchar ch;\n\twhile((ch=getchar()) < '!') ;\n\treturn ch == '2';\n}\n\nvoid putint(int x)\n{\n\tif(x/10) putint(x/10);\n\tputchar((x%10)^'0');\n}\n\n#define logx 30\n\nstruct lsx\n{\n\tint xi[logx+1];\n\tint rnk;\n\n\tlsx() : xi{0} {}\n\n\tvoid init()\n\t{\n\t\tmemset(xi,0,logx*sizeof(int));\n\t\trnk = 0;\n\t}\n\n\tvoid assign(const lsx b)\n\t{\n\t\tmemcpy(xi,b.xi,logx*sizeof(int));\n\t\trnk = b.rnk;\n\t}\n\n\tvoid ins(int x)\n\t{\n\t\tfor(int i=logx; i>=0; --i)\n\t\t{\n\t\t\tif(x&(1<<i))\n\t\t\t{\n\t\t\t\tif(xi[i])\n\t\t\t\t{\n\t\t\t\t\tx ^= xi[i];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\txi[i] = x;\n\t\t\t\t\t++rnk;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid hint_ins(int hint,int x)\n\t{\n\t\tif(xi[hint])\n\t\t{\n\t\t\tx ^= xi[hint];\n\t\t}\n\t\telse\n\t\t{\n\t\t\txi[hint] = x;\n\t\t\t++rnk;\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=hint-1; i>=0; --i)\n\t\t{\n\t\t\tif(x&(1<<i))\n\t\t\t{\n\t\t\t\tif(xi[i])\n\t\t\t\t{\n\t\t\t\t\tx ^= xi[i];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\txi[i] = x;\n\t\t\t\t\t++rnk;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tint query(int x)\n\t{\n\t\tif(rnk == logx)\n\t\t{\n\t\t\treturn (1<<logx)-1;\n\t\t}\n\t\tfor(int i=logx; i>=0; --i)\n\t\t{\n\t\t\tchkmax(x,x^xi[i]);\n\t\t}\n\t\treturn x;\n\t}\n};\n\nlsx mi[200005];\n\n#define lt(t) (((t)<<1)|1)\n#define rt(t) ((t)<<1)\n#define mid ((l+r)>>1)\n\nvoid pushup(int t)\n{\n\tmi[t].assign(mi[lt(t)]);\n\tfor(int i=0; i<=logx && mi[t].rnk<logx; ++i)\n\t{\n\t\tif(mi[rt(t)].xi[i])\n\t\t{\n\t\t\tmi[t].hint_ins(i,mi[rt(t)].xi[i]);\n\t\t}\n\t}\n}\n\nvoid build(int t,int l,int r,int* arr)\n{\n\tif(l==r)\n\t{\n\t\tmi[t].ins(arr[l]);\n\t\treturn;\n\t}\n\tbuild(lt(t),l,mid,arr);\n\tbuild(rt(t),mid+1,r,arr);\n\tpushup(t);\n}\n\nvoid sfix(int t,int l,int r,int x,int v)\n{\n\tif(l==r)\n\t{\n\t\tmi[t].init();\n\t\tmi[t].ins(v);\n\t\treturn;\n\t}\n\tif(mid>=x) sfix(lt(t),l,mid,x,v);\n\telse sfix(rt(t),mid+1,r,x,v);\n\tpushup(t);\n}\n\nlsx ansi;\n\nvoid squery(int t,int l,int r,int ql,int qr)\n{\n\tif(ansi.rnk == logx) return;\n\tif(ql<=l && r<=qr)\n\t{\n\t\tfor(int i=0; i<=logx && ansi.rnk<logx; ++i)\n\t\t{\n\t\t\tif(mi[t].xi[i])\n\t\t\t{\n\t\t\t\tansi.hint_ins(i,mi[t].xi[i]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif(mid>=ql) squery(lt(t),l,mid,ql,qr);\n\tif(mid<qr) squery(rt(t),mid+1,r,ql,qr);\n}\n\nint ti[50005];\nint trin;\n\nint lowbit(int x) { return x&(-x); }\n\nvoid fix(int x,int v)\n{\n\twhile(x<=trin)\n\t{\n\t\tti[x] ^= v;\n\t\tx += lowbit(x);\n\t}\n}\n\nint query(int x)\n{\n\tint res = 0;\n\twhile(x)\n\t{\n\t\tres ^= ti[x];\n\t\tx ^= lowbit(x);\n\t}\n\treturn res;\n}\n\nint bi[50005];\n\nint main()\n{\n\tconst int n = trin = getint();\n\tconst int m = getint();\n\t\n\tint pai = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tconst int cai = getint();\n\t\tbi[i] = pai ^ cai;\n\t\tpai = cai;\n\t}\n\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tfix(i,bi[i]);\n\t}\n\tbuild(1,1,n,bi);\n\n\tfor(int asdf=1; asdf<=m; ++asdf)\n\t{\n\t\tif(get12())\n\t\t{\n\t\t\tconst int l = getint();\n\t\t\tconst int r = getint();\n\t\t\tif(l==r)\n\t\t\t{\n\t\t\t\tconst int v = getint();\n\t\t\t\tputint(max(v,v^query(l)));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tansi.init();\n\t\t\t\tsquery(1,1,n,l+1,r);\n\t\t\t\tansi.ins(query(l));\n\t\t\t\tputint(ansi.query(getint()));\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst int l = getint();\n\t\t\tconst int r = getint();\n\t\t\tconst int v = getint();\n\t\t\tsfix(1,1,n,l,bi[l]^v);\n\t\t\tif(r<n) sfix(1,1,n,r+1,bi[r+1]^v);\n\t\t\tfix(r+1,v);\n\t\t\tfix(l,v);\n\t\t\tbi[l] ^= v;\n\t\t\tbi[r+1] ^= v;\n\t\t}\n\t}\n}\n```",
        "postTime": 1606475654,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]\u65e0\u529b\u56de\u5929NOI2017\u3011"
    },
    {
        "content": "\u6700\u5927\u5f02\u6216\u548c\uff0c\u7ebf\u6027\u57fa\u65e0\u7591\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u533a\u95f4 $\\operatorname{xor}$ \u4f3c\u4e4e\u65e0\u6cd5\u7ef4\u62a4\u7684\u6837\u5b50\uff0c\u8003\u8651\u6316\u6398\u4e00\u4e0b\u533a\u95f4 $\\operatorname{xor}$ \u548c\u7ebf\u6027\u57fa\u4e4b\u95f4\u7684\u6027\u8d28\u3002\n\n\u4e0d\u660e\u663e\u7684\uff0c\u8bbe $b_i=a_i\\operatorname{xor} a_{i-1}$\uff0c\u5219 $a_l,b_{l+1},\\dots,b_{r}$ \u7684\u7ebf\u6027\u57fa\u4e0e $a_l,a_{l+1},\\dots,a_{r}$ \u7684\u7ebf\u6027\u57fa\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u4e3a $b_i=a_i\\operatorname{xor} a_{i-1}$\uff0c$a_i=a_l\\operatorname{xor}b_{l+1}\\operatorname{xor}\\dots\\operatorname{xor}b_i$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u56db\u79cd\u64cd\u4f5c\uff1a\u533a\u95f4 $\\operatorname{xor}$\uff0c\u5355\u70b9\u67e5\u8be2\u503c\uff0c\u5355\u70b9 $\\operatorname{xor}$\uff0c\u8be2\u95ee\u533a\u95f4\u7ebf\u6027\u57fa\u3002\u7ebf\u6bb5\u6811\u7ef4\u62a4\u540e\u4e24\u79cd\u64cd\u4f5c\uff0c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u4e24\u79cd\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u6700\u5927\u5f02\u6216\u548c\uff0c\u76f4\u63a5\u8d2a\u5fc3\u6c42\u89e3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)\\log n\\log^2V)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nvoid ins(int *p, int x){\n    for(int i=29; i>=0; i--)\n    if(x>>i){\n        if(!p[i]){p[i]=x; return;}\n        else x^=p[i];\n    }\n}\n\nint getmax(int *p, int x){\n    for(int i=29; i>=0; i--)\n        if((x^p[i])>x) x^=p[i];\n    return x;\n}\n\nvoid merge(int *p1, int *p2){\n    for(int i=0; i<=29; i++)\n        if(p2[i]) ins(p1, p2[i]);\n}\n\nconst int N=1e5+1;\n\nint n, m, a[N], b[N], val[N<<2][31];\n\nvoid up(int o){\n    memset(val[o], 0, sizeof val[o]);\n    merge(val[o], val[o<<1]);\n    merge(val[o], val[o<<1|1]);\n}\n\nvoid build(int o, int l, int r){\n    if(l==r){\n        memset(val[o], 0, sizeof val[o]);\n        ins(val[o], b[l]); return;\n    }\n    int Mid=l+r>>1;\n    build(o<<1, l, Mid);\n    build(o<<1|1, Mid+1, r);\n    up(o);\n}\n\nvoid modify(int o, int l, int r, int x, int y){\n    if(l==r){\n        memset(val[o], 0, sizeof val[o]);\n        b[l]^=y;\n        ins(val[o], b[l]);\n        return;\n    }\n    int Mid=l+r>>1;\n    if(x<=Mid) modify(o<<1, l, Mid, x, y);\n    else       modify(o<<1|1, Mid+1, r, x, y);\n    up(o);\n}\n\nint res[31];\n\nvoid Query(int o, int l, int r, int x, int y){\n    if(l>=x&&r<=y){merge(res, val[o]); return;}\n    int Mid=l+r>>1;\n    if(x<=Mid) Query(o<<1, l, Mid, x, y);\n    if(y>Mid)  Query(o<<1|1, Mid+1, r, x, y);\n}\n\nint c[N];\nvoid add(int x, int v){for(;x<=n+1; x+=(x&-x)) c[x]^=v;}\nint ask(int x){int v=0;for(;x;x-=(x&-x)) v^=c[x];return v;}\nvoid Add(int x, int y, int v){add(x, v), add(y+1, v);}\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(int i=1; i<=n; i++)\n        scanf(\"%d\", &a[i]), b[i]=a[i]^a[i-1], add(i, b[i]);\n//    printf(\"%d\\n\", ask(3));\n    build(1, 1, n+1);\n    for(int i=1, op, x, y, v; i<=m; i++){\n        scanf(\"%d%d%d%d\", &op, &x, &y, &v);\n        if(op==1){\n            Add(x, y, v);\n            modify(1, 1, n+1, x, v);\n            modify(1, 1, n+1, y+1, v);\n        }\n        else{\n            memset(res, 0, sizeof res);\n            Query(1, 1, n+1, x+1, y);\n            ins(res, ask(x));\n            printf(\"%d\\n\", getmax(res, v));\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1685175512,
        "uid": 740607,
        "name": "__ODT__",
        "ccfLevel": 0,
        "title": "P5607"
    },
    {
        "content": "\u9996\u5148\uff0c\u8003\u8651\u8be2\u95ee\uff0c\u770b\u5230\u8981\u8be2\u95ee\u533a\u95f4\u4efb\u610f\u9009\u6570\u6c42\u5f02\u6216\u6700\u5927\u503c\u4e0d\u96be\u60f3\u5230\u8981\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6027\u57fa\uff0c\u800c\u53c8\u56e0\u4e3a\u7ebf\u6027\u57fa\u5de7\u5999\u7684\u6027\u8d28\uff0c\u4f7f\u5f97\u5b83\u7684\u5408\u5e76\u662f\u53ef\u4ee5\u76f4\u63a5\u7531\u5c06\u4e00\u4e2a\u7ebf\u6027\u57fa\u4e2d\u7684\u503c\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u7ebf\u6027\u57fa\u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u63a5\u7740\uff0c\u8003\u8651\u4fee\u6539\uff0c\u56e0\u4e3a\u662f\u533a\u95f4\u5f02\u6216\u7684\u4fee\u6539\uff0c\u800c\u533a\u95f4\u5f02\u6216\u5bf9\u7ebf\u6027\u57fa\u7684\u6539\u53d8\u662f\u4e0d\u53ef\u76f4\u63a5\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u8003\u8651\u5982\u4f55\u5c06\u533a\u95f4\u4fee\u6539\u53d8\u4e3a\u5355\u70b9\u4fee\u6539\u3002\u8fd9\u65f6\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u5dee\u5206\uff0c\u8bbe $b_i=a_i\\bigoplus a_{i-1}$($\\bigoplus$ \u8868\u793a\u5f02\u6216)\uff0c\u8fd9\u6837\u4e00\u6b21\u533a\u95f4\u4fee\u6539\u5728 $b$ \u6570\u7ec4\u4e0a\u53d8\u5316\u7684\u4fbf\u53ea\u6709 $b_l$ \u548c $b_{r+1}$\uff0c\u800c\u5728\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $a_i=a_l \\bigoplus b_{l+1} \\bigoplus...\\bigoplus b_i \\{\\begin{matrix} i|i\\in [l,r]\\end{matrix}\\}$\u3002\u90a3\u4e48\u533a\u95f4 $[l,r]$ \u5185\u9009\u4e00\u4e9b $a_i$ \u5f02\u6216\u8d77\u6765\u7684\u503c\u4e00\u5b9a\u53ef\u4ee5\u7528 $a_l$ \u548c\u533a\u95f4 $[l+1,r]$ \u5185\u9009\u4e00\u4e9b $b_i$ \u5f02\u6216\u8d77\u6765\u7684\u503c\u6765\u8868\u793a\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u7ef4\u62a4 $b$ \u7684\u7ebf\u6027\u57fa\uff08\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\uff09\u548c $a$ \u7684\u503c\uff08\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\uff09\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c06 $b$ \u5728 $[l+1,r]$ \u7684\u7ebf\u6027\u57fa\u4e2d\u63d2\u5165 $a_l$ \u5e76\u76f4\u63a5\u67e5\u8be2\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b[\u4ee3\u7801](https://www.luogu.com.cn/paste/qsgylt5j)",
        "postTime": 1673426956,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\nYnoi \u7684\u9898\u8fd8\u9700\u8981\u6211\u6982\u8ff0\u9898\u610f\u5417\uff08\n\n\u533a\u95f4\u5f02\u6216\uff0c\u533a\u95f4\u67e5\u8be2\u5b50\u96c6\u6700\u5927\u7684\u5f02\u6216\u548c\u3002\n\n$1\\leq n,m \\leq 5\\times 10^4,0\\leq a_i \\leq 10^9$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6ce8\u610f\u5230\u67e5\u8be2\u662f\u533a\u95f4\u5b50\u96c6\u7684\u5f02\u6216\u548c\uff0c\u800c\u4e0d\u662f\u5b50\u533a\u95f4\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u53ef\u4ee5\u8003\u8651\u662f\u7ebf\u6027\u57fa\u4e86\uff0c\u67e5\u8be2\u662f\u533a\u95f4\uff0c\u4fee\u6539\u4e5f\u662f\u533a\u95f4\uff0c\u90a3\u5c31\u57fa\u672c\u53ef\u4ee5\u786e\u5b9a\u662f\u7ebf\u6027\u57fa\u5957\u7ebf\u6bb5\u6811\u4e86\u3002\n\n\u5f53\u4f60\u5174\u9ad8\u91c7\u70c8\u5730\u5f00\u59cb\u50cf [$P4839$](https://www.luogu.com.cn/problem/P4839) \u90a3\u6837\u505a\u7684\u65f6\u5019\uff0c\u7a81\u7136\u53d1\u73b0\u533a\u95f4\u5f02\u6216\u4f1a\u7834\u574f\u6389\u539f\u6709\u7684\u7ebf\u6027\u57fa\uff0c\u5f53\u4e00\u4e2a\u533a\u95f4\u88ab\u4fee\u6539\u540e\uff0c\u6211\u4eec\u8981\u66b4\u529b\u5730\u91cd\u6784\u533a\u95f4\u7684\u7ebf\u6027\u57fa\u3002\n\n\u600e\u4e48\u5904\u7406\u5462\uff1f\u6211\u4eec\u610f\u8bc6\u5230\u4e0d\u597d\u5904\u7406\u7684\u662f\u533a\u95f4\u5f02\u6216\uff0c\u90a3\u4e48\u8003\u8651\u5c06\u5176\u8f6c\u6362\u6210\u5355\u70b9\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u5dee\u5206\u554a\uff0c\u8bbe\u6570\u7ec4 $b$ \u4e3a\u5dee\u5206\u6570\u7ec4\uff0c\u6ee1\u8db3 $b_i = a_{i-1}\\oplus a_i$\uff0c\u5176\u4e2d $\\oplus$ \u8868\u793a\u5f02\u6216\uff0c$b_1 = a_1$\u3002\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5355\u70b9\u4fee\u6539\u5dee\u5206\u6570\u7ec4\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u77e5\u9053\u539f\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u5462\uff1f\u5176\u5b9e $b$ \u6570\u7ec4\u662f\u6709\u4e00\u4e2a\u4f18\u7f8e\u7684\u6027\u8d28\u7684\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5dee\u5206\u6570\u7ec4\u505a\u524d\u7f00\u548c\u7b49\u4e8e\u539f\u6570\u7ec4\uff0c\u6211\u4eec\u8fd9\u91cc\u4e5f\u6ee1\u8db3\u8fd9\u4e00\u6027\u8d28\uff0c\u5373\uff1a\n\n$a_i = b_1 \\oplus b_2 \\oplus \\dots \\oplus b_i$\n\n\u6709\u4e86\u8fd9\u4e00\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u63a2\u7a76\u4e24\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u5173\u7cfb\u4e86\u3002\n\n\u7531\u4e8e $a_l\\oplus b_{l+1} = a_{l+1}$\uff0c\u6240\u4ee5\u53ea\u8981\u6211\u6709 $a_l$ \u548c $b_{l+1}$ \u4fbf\u53ef\u4ee5\u63a8\u51fa $a_{l+1}$ \u7684\u503c\uff0c$[l+2,r]$ \u4e2d\u7684\u503c\u540c\u7406\u3002\u53ef\u901a\u8fc7\u8fd9\u4e00\u8fc7\u7a0b\u63a8\u51fa\u6765\u3002\n\n\u6240\u4ee5\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7070\u5e38\u91cd\u8981\u7684\u7ed3\u8bba\uff0c$a_l$ \u548c $[l+1,r]$ \u5185\u7684 $b$ \u6570\u7ec4\u7684\u7ebf\u6027\u57fa\uff0c\u7b49\u4ef7\u4e8e $a$ \u6570\u7ec4 $[l,r]$ \u7684\u7ebf\u6027\u57fa\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\uff0c$a$ \u6570\u7ec4\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff0c$b$ \u6570\u7ec4\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u7ef4\u62a4\u533a\u95f4\u7ebf\u6027\u57fa\u5462\uff1f\u6211\u4eec\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4f20\u7684\u65f6\u5019\u66b4\u529b\u63d2\u5165\u5373\u53ef\u3002\u590d\u6742\u5ea6\u662f\u7ebf\u6bb5\u6811\u5355 $\\log$ \u5408\u5e76\u4e24\u4e2a\u7ebf\u6027\u57fa\u662f\u4e24\u4e2a $\\log$\uff0c$3\\log$ \u5927\u6982\u9700\u8981\u7a0d\u5fae\u5361\u5361\u5e38\u3002\n\n## Code\n\n\u4ee3\u7801\u4e0a\u7684\u8bdd\u7ec6\u8282\u4e0d\u591a\uff0c\u6211\u9009\u62e9\u7684\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4 $b$ \u6570\u7ec4\uff0c\u5206\u5757\u7ef4\u62a4 $a$ \u6570\u7ec4\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u67e5\u8be2\u7684\u65f6\u5019\u56e0\u4e3a\u8981\u67e5\u8be2 $[l+1,r]$ \u7684 $b$ \u6570\u7ec4\u7684\u7ebf\u6027\u57fa\uff0c\u6240\u4ee5\u8981\u7279\u5224\u4e00\u4e0b $l=r$ \u7684\u60c5\u51b5\uff0c\u6211\u56e0\u4e3a\u8fd9\u4e2a\u60c5\u51b5\u6b7b\u4e86\u597d\u4e45\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\nusing namespace std;\nint read(){\n\tint x=0,f=1;char ch = getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-'){f=-1;}ch = getchar();}\n\twhile(ch>='0'&&ch<='9'){x = x*10+ch-'0';ch = getchar();}\n\treturn x*f;\n}\nconst int N =5e4+5;\nint a[N],b[N];\nstruct nd{\n\tint lc,rc,num,val[35],tag;\n\tvoid ins(int x){\n\t\tfor(int i=30;i>=0;i--){\n\t\t\tif((x>>i)&1){\n\t\t\t\tif(val[i]){\n\t\t\t\t\tx^=val[i];\n\t\t\t\t}else{\n\t\t\t\t\tval[i] = x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n}node[N*2];\nint tot=1;\nnd pushup(nd ls,nd rs){\n\tfor(int i=30;i>=0;i--){\n\t\tls.ins(rs.val[i]);\n\t}\n\treturn ls;\n}\nvoid upd(int u){\n\tint ls = node[u].lc,rs = node[u].rc;\n\tnd res = pushup(node[ls],node[rs]);\n\tfor(int i=30;i>=0;i--){\n\t\tnode[u].val[i] = res.val[i];\n\t}\n}\nvoid build(int u,int l,int r){\n\tif(l==r){\n\t\tnode[u].num = b[l];\n\t\tnode[u].ins(node[u].num);\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tnode[u].lc = ++tot;\n\tbuild(tot,l,mid);\n\tnode[u].rc = ++tot;\n\tbuild(tot,mid+1,r);\n\tupd(u);\n}\nvoid addb(int u,int l,int r,int p,int x){\n\tif(l==r){\n\t\tnode[u].num ^= x;\n\t\tmemset(node[u].val,0,sizeof(node[u].val));\n\t\tnode[u].ins(node[u].num);\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(p<=mid){\n\t\taddb(node[u].lc,l,mid,p,x);\n\t}else{\n\t\taddb(node[u].rc,mid+1,r,p,x);\n\t}\n\tupd(u);\n}\nnd queryb(int u,int l,int r,int ll,int rr){\n\tif(l==ll&&r==rr){\n\t\treturn node[u];\n\t}\n\tint mid = (l+r)/2;\n\tif(rr<=mid){\n\t\treturn queryb(node[u].lc,l,mid,ll,rr);\n\t}else if(ll>mid){\n\t\treturn queryb(node[u].rc,mid+1,r,ll,rr);\n\t}else{\n\t\treturn pushup(queryb(node[u].lc,l,mid,ll,mid),queryb(node[u].rc,mid+1,r,mid+1,rr));\n\t}\n}\nint ask(nd u,int v){\n\tint ans = v;\n\tfor(int i=30;i>=0;i--){\n\t\tif((ans^u.val[i])>ans){\n\t\t\tans=(ans^u.val[i]);\n\t\t}\n\t}\n\treturn ans; \n}\nint bel[N],tag[N],L[N],R[N];\nvoid add(int l,int r,int k){\n\tfor(int i=l;i<=r;i++){\n\t\ta[i]^=k;\n\t}\n}\nvoid adda(int l,int r,int k){\n\tif(bel[l]==bel[r]){\n\t\tadd(l,r,k);\n\t}else{\n\t\tadd(l,R[bel[l]],k);\n\t\tadd(L[bel[r]],r,k);\n\t\tfor(int i=bel[l]+1;i<bel[r];i++){\n\t\t\ttag[i]^=k;\n\t\t}\n\t}\n}\nint main(){\n\tint n,m;\n\tn = read();m = read();\n\tint siz = sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\ta[i] = read();\n\t\tb[i] = a[i]^a[i-1];\n\t\tbel[i] = (i-1)/siz+1;\n\t\tif(!L[bel[i]]){\n\t\t\tL[bel[i]] = i;\n\t\t}\n\t\tR[bel[i]] = i;\n\t}\n\tbuild(1,1,n);\n\tint opt,l,r,k;\n\twhile(m--){\n\t\topt = read();l = read();r = read();k = read();\n\t\tif(opt==1){\n\t\t\tadda(l,r,k);\n\t\t\taddb(1,1,n,l,k);\n\t\t\tif(r<n){\n\t\t\t\taddb(1,1,n,r+1,k);\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\tif(l==r){\n\t\t\t\tint x = (a[l]^tag[bel[l]]);\n\t\t\t\tcout<<max(k,k^x)<<\"\\n\"; \n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnd res = queryb(1,1,n,l+1,r);\n\t\t\tres.ins(a[l]^tag[bel[l]]);\n\t\t\tcout<<ask(res,k)<<\"\\n\";\n\t\t}\n\t}\n\treturn 0;\n} \n```\n\n\u6700\u540e\u7684\u95f2\u8bdd\uff1a\u7a81\u7136\u53d1\u73b0\u5199\u8fc7\u7684 Ynoi \u6709\u80fd\u4ea4\u9898\u89e3\u7684\uff0c\u6240\u4ee5\u5c31\u5199\u4e00\u53d1\u54af\uff0c\u611f\u89c9\u7b2c\u4e00\u6b21\u5199\u8fd9\u4e48\u957f\u7684\u9898\u89e3\u3002",
        "postTime": 1667803004,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P5607 [Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017\u3011"
    },
    {
        "content": "\u5386\u65f6\u4e09\u5929\uff0c\u8fd8\u662f\u6ca1\u6709\u5b8c\u5168\u505a\u51fa\u6765\u3002    \n\n\u53ef\u80fd\u6709\u7565\u591a\u7bc7\u5e45\u6765\u5199\u601d\u8def\u3002\n\n\u6b7b\u56e0\uff1a\u4e0d\u4f1a\u64cd\u4f5c $1$ \u3002     \n\n\u62ff\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u523b\uff0c\u6709\u4ebf\u70b9\u61f5\uff0c\u611f\u89c9\u7279\u522b\u50cf\u4e4b\u524d\u5076\u7136\u5b66\u4e60\u5230\u7684\u62c6\u4f4d\u7ebf\u6bb5\u6811\uff0c\u4e0d\u8fc7\u4ed4\u7ec6\u60f3\u4e86\u53d1\u73b0\u5b8c\u5168\u4e0d\u4f1a\u7ef4\u62a4\uff0c\u6bd5\u7adf\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u968f\u673a\u9009\u6570\u7684\u6700\u5927\u503c\uff0c\u800c\u62c6\u4f4d\u7ebf\u6bb5\u6811\u6bd4\u8f83\u64c5\u957f\u4e8e\u7ef4\u62a4\u5f02\u6216\u548c\uff0c\u6240\u4ee5\u679c\u65ad\u653e\u5f03\u3002     \n\n\u63a5\u7740\u5c31\u8003\u8651\u4e86\u4e00\u4e0b\u6b64\u9898\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u64cd\u4f5c $1$ \uff0c\u6211\u4eec\u53ef\u4ee5\u7ebf\u6bb5\u6811\u3001\u5206\u5757\u7ef4\u62a4\uff0c\u800c\u5bf9\u4e8e\u64cd\u4f5c $2$ , \u6211\u9a6c\u4e0a\u5c31\u60f3\u5230\u4e86\u4e24\u4e2a\u4e1c\u897f\uff1a $01Trie$ \u548c \u7ebf\u6027\u57fa \u3002    \n\n\u601d\u8003\u4e00\u756a\uff0c\u611f\u89c9 $01Trie$ \u662f\u8be2\u95ee\u5f53\u524d\u8fd9\u4e2a\u533a\u95f4\u91cc\u9762\u7684\u4e00\u4e2a\u6570\u548c $v$ \u5f02\u6216\u8d77\u6765\u7684\u6700\u5927\u503c\uff0c\u5c31\u7b97\u53ef\u6301\u4e45\u5316\u4e00\u6ce2\u4e5f\u53ea\u80fd\u67e5\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u653e\u5f03\u3002     \n\n\u90a3\u4e48\u53ea\u5269\u4e0b\u6211\u4eec\u7684\u7ebf\u6027\u57fa\u4e86\uff0c\u6309\u56fe\u7d22\u9aa5\uff0c\u76f4\u63a5\u8003\u8651\u7ebf\u6bb5\u6811\u52a0\u7ebf\u6027\u57fa\u3002     \n\n\u8fd9\u65f6\u64cd\u4f5c $2$ \u5c31\u5f88\u663e\u7136\u4e86\u3002\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u65f6\uff0c\u5408\u5e76\u7ebf\u6027\u57fa\uff0c\u6700\u540e\u628a\u5408\u597d\u7684\u7ebf\u6027\u57fa\u62ff\u51fa\u6765\u8dd1\u5c31\u884c\u4e86\u3002\u5408\u5e76\u4e00\u6b21\u662f $O(log_v^2)$ \uff0c\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(log_n)$ \uff0c\u5408\u8d77\u6765\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(log_v^2log_n)$\uff0c~~\u9010\u6e10\u6811\u5957\u6811\u5316~~\u3002    \n\n\u63a5\u7740\u6211\u4eec\u5c31\u53d1\u73b0\u6211\u4eec\u4e0d\u4f1a\u64cd\u4f5c $1$ \u4e86\uff0c\u9996\u5148\u8fd9\u73a9\u610f\u513f\u80af\u5b9a\u4e0d\u80fd\u50cf\u7ebf\u6bb5\u6811\u8fd9\u79cd\u6253 $tag$ \u4f20\u4e0b\u6765\u6539\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0\u8fd9\u73a9\u610f\u513f\u5982\u679c\u505a\u4e2a\u5355\u70b9\u4fee\u7684\u8bdd\u5b8c\u5168\u662f\u53ef\u505a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8003\u8651\u628a\u533a\u95f4\u4fee\u8f6c\u5316\u6210\u5355\u70b9\u4fee\u3002     \n\n\u4e00\u8bf4\u5230\u533a\u95f4\u4fee\u53d8\u5355\u70b9\u4fee\uff0c\u5c31\u60f3\u5230\u4e86\u5dee\u5206\u3002\u5982\u679c\u6211\u4eec\u8bb0 $c_i = a_i \\bigoplus a_{i - 1}$ \u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u64cd\u4f5c $1$ \u53d8\u6210\u4e24\u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u5373\u4fee\u6539 $c_l$ \u548c $c_{r + 1}$ (\u8fd9\u91cc\u8bb0\u5f97\u5224\u8d8a\u754c) \uff0c \u7136\u800c\u6211\u4eec\u6b64\u65f6\u53c8\u53d1\u73b0\u64cd\u4f5c $2$ \u53c8\u4e0d\u80fd\u505a\u4e86\u3002   \n\n\u60f3\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u5f97\u53d1\u6325~~\u731c\u7ed3\u8bba~~\u7cbe\u795e\uff0c\u6211\u4eec\u5148\u628a\u5dee\u5206\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u7ed9\u6c42\u51fa\u6765\uff0c\u548c\u539f\u5e8f\u5217\u7684\u7ebf\u6027\u57fa\u6bd4\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u6709\u4ec0\u4e48\u76f8\u4f3c\u5904\u3002     \n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u7d22\u540e\uff0c\u53d1\u73b0\u6211\u4eec\u539f\u5e8f\u5217\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u7684\u4e00\u4e9b\u6570\u662f\u65e0\u6cd5\u7528\u5dee\u5206\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u8868\u793a\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5148\u770b\u770b\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u7528\u5dee\u5206\u6570\u7ec4\u7684\u7ebf\u6027\u57fa\u6765\u8868\u793a\u539f\u5e8f\u5217\u7684\u6240\u6709\u6570\u3002\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e24\u4e2a\u7ebf\u6027\u57fa\u662f\u7b49\u4ef7\u7684\u3002    \n\u5230\u8fd9\u91cc\uff0c\u60f3\u5fc5\u8bf8\u4f4d\u601d\u8def\u90fd\u5f88\u6e05\u6670\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u5728 $c_{l + 1} \\sim c_{r}$ \u7684\u7ebf\u6027\u57fa\u4e2d\u63d2\u5165 $a_l$ \u5373\u53ef\u7b49\u4ef7\u4e8e $a_{l} \\sim a_r$ \u7684\u7ebf\u6027\u57fa\u3002    \n\n\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u4e0d\u91cd\u590d\u5730\u9009\u6570\u8868\u793a\u51fa $a_l \\sim a_r$ \u7684\u6240\u6709\u6570\uff0c\u63a5\u7740\u6839\u636e\u5f02\u6216\u7684\u6027\u8d28\uff0c\u5982\u679c\u4e00\u4e2a\u6570\u5728\u4e00\u8fde\u4e32\u5f02\u6216\u4e2d\u51fa\u73b0\u591a\u6b21\u662f\u53ef\u4ee5\u62b5\u6d88\u7684\uff0c\u6240\u4ee5\u6700\u540e\u843d\u5b9e\u5230\u539f\u5e8f\u5217 $a$ \u53ef\u4ee5\u8868\u793a\u7684\u6bcf\u4e2a\u6570\u4e0a\uff0c\u5f53\u524d\u8fd9\u4e2a\u7ebf\u6027\u57fa\u91cc\u9762\u7684\u6570\u4e5f\u90fd\u5448\u9009\u6216\u4e0d\u9009\u4e24\u79cd\u60c5\u51b5\u3002     \n\n\u4e0d\u5f97\u4e0d\u627f\u8ba4\u8fd9\u9053\u9898\u5237\u65b0\u4e86\u6211\u5bf9\u7ebf\u6027\u57fa\u7684\u8ba4\u8bc6\uff0c\u4e8b\u5b9e\u8bc1\u660e\u6570\u636e\u7ed3\u6784\u4e0d\u4ec5\u5957\u6570\u636e\u7ed3\u6784\u5f88\u96be\uff0c\u5957\u4e00\u4e9b\u5f88\u591a\u548c\u6570\u636e\u7ed3\u6784\u6709\u8f83\u597d\u7684\u76f8\u5bb9\u6027\u7684\u4e1c\u897f\u7684\u8bdd\u4e5f\u633a\u96be\u7684\u2026\u2026        \n",
        "postTime": 1609943222,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013] \u65e0\u529b\u56de\u5929 NOI2017\u3011"
    },
    {
        "content": "\u6700\u5927\u5f02\u6216\u503c\uff1f\u7ebf\u6027\u57fa\u3002\n\n\u5e26\u4fee\u6539\uff1f\u7ebf\u6bb5\u6811\u3002\n\n\u533a\u95f4\u4fee\u6539\u96be\u4ee5\u7ef4\u62a4\uff1f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f02\u6216\u5dee\u5206\u3002\n\n\u5177\u4f53\u7684\uff0c\u7ef4\u62a4$a$\u7684\u5f02\u6216\u5dee\u5206\u5e8f\u5217$b$\uff0c\u5373$b_i = a_i$ xor    $ a_i-1$\uff0c\u7279\u522b\u5730 \uff0c$b_1 = a_1$\u3002\n\n\u8003\u8651\u5f02\u6216\u7684\u6027\u8d28\uff0c\u53ef\u77e5$a_l$~$a_r$\u7684\u7ebf\u6027\u57fa\u4e0e$a_l$\uff0c$b _\nl+1$~$b_r$\u7684\u7ebf\u6027\u57fa\u76f8\u540c\u3002\n\n\u8be2\u95ee\u65f6\u53d6\u51fa$b_l+1$~$b_r$\u7684\u7ebf\u6027\u57fa\uff0c\u5c06$a_l$\u63d2\u5165\u6c42\u89e3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlognlog^2V)$\u3002\n\ncode:\n\n```cpp\nstruct base {\n    int p[31];\n    inline void insert(int x) {\n        for(register int i = 29; i >= 0; i--) {\n            if(!(x >> i))\n                continue;\n            if(!p[i]) {\n                p[i] = x;\n                break;\n            }\n            x ^= p[i];\n        }\n    }\n};\n\ninline base merge(base x , base y){\n    for(register int i = 30; i >= 0; i--)\n        if(y.p[i])\n            x.insert(y.p[i]);\n    return x;\n}\n\nstruct SegmentTree{\n    base tr[180005];\n    inline void build(int rt , int l , int r){\n        for(register int i = l; i <= r; i++)\n            tr[rt].insert(a[i]);\n        if(l == r)\n            return;\n        register int mid = (l + r) >> 1;\n        build(rt << 1 , l , mid) , build(rt << 1 | 1 , mid + 1 , r);\n        tr[rt] = merge(tr[rt << 1] , tr[rt << 1 | 1]);\n    }\n    inline void update(int rt , int l , int r, int x,  int v){\n        if(l == r){\n            memset(tr[rt].p , 0 , sizeof(tr[rt].p));\n            a[l] ^= v;\n            tr[rt].insert(a[l]);\n            return;\n        }\n        register int mid = (l + r) >> 1;\n        if(x <= mid)\n            update(rt << 1 , l , mid , x , v);\n        else\n            update(rt << 1 | 1 , mid + 1 , r , x , v);\n        tr[rt] = merge(tr[rt << 1] , tr[rt << 1 | 1]);\n    }\n    inline base query(int rt , int stl , int str,  int l , int r){\n        if(l == stl && r == str)\n            return tr[rt];\n        register int mid = (stl + str) >> 1;\n        if(mid >= r)\n            return query(rt << 1 , stl , mid , l , r);\n        else{\n            if(mid + 1 <= l)\n                return query(rt << 1 | 1 , mid + 1 , str , l , r);\n            else\n                return merge(query(rt << 1 , stl , mid , l , mid) , query(rt << 1 | 1 , mid + 1 , str , mid + 1 , r));\n        }\n    }\n}tree;\n\ninline void add(int x , int k){\n    for(register int i = x; i <= n; i += (i & -i))\n        c[i] ^= k;\n}\n\ninline int ask(int x){\n    register int sum = 0;\n    for(register int i = x; i; i -=(i & -i))\n        sum ^= c[i];\n    return sum;\n}//\u4ee5\u4e0a\u4e3a\u6a21\u677f\n\n\nint main() {\n    n = read() , m = read();\n    for (register int i = 1; i <= n; i++)\n        a[i] = read();\n    for(register int i = n; i >= 2; i--)\n        a[i] ^= a[i - 1];\n    for(register int i = 1; i <= n; i++)\n        add(i , a[i]);\n    tree.build(1 , 1 , n);\n    for(register int i = 1; i <= m; i++){\n        register int opt = read() , l = read() , r = read() , v = read();\n        if(opt == 1) {\n            add(l , v);\n            tree.update(1 , 1 , n , l, v);\n            if(r < n){//\u6ce8\u610f\u8fd9\u91cc\u7279\u5224\n                add(r + 1 , v);\n                tree.update(1 , 1 , n , r + 1 , v);\n            }\n        } else {\n            register int x = ask(l);\n            if(l == r)\n                printf(\"%d\\n\" , max(v , x ^ v));\n            else{\n            base b = tree.query(1 , 1 , n , l + 1 , r);//\u53d6\u51fa\u7ebf\u6027\u57fa\n            b.insert(x);\n            for(int i = 29; i >= 0; i--)\n                v = max(v , v ^ b.p[i]);//\u8d2a\u5fc3\u6c42\u7b54\u6848\n            printf(\"%d\\n\" , v);\n            }\n        }\n    }\n```\n\n\t",
        "postTime": 1587535289,
        "uid": 241090,
        "name": "Retucl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5607 \u3010[Ynoi2013]\u65e0\u529b\u56de\u5929NOI2017\u3011"
    }
]