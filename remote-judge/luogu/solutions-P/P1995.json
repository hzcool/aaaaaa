[
    {
        "content": "[\u535a\u5ba2](https://www.k-xzy.xyz/archives/7724)\n\n\u4e00\u5f00\u59cb\u770b\u8fd9\u9053\u9898\uff0c\u611f\u89c9\u662f\u4e2a\u6c34\u9898......\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ea\u7528\u8003\u8651\u6bcf\u6b21\u79bb\u5f00\u4e00\u4e2a\u77e9\u5f62\u65f6\u7684y\u5750\u6807\u3002\u5982\u679c\u6211\u4eec\u79bb\u5f00\u4e00\u4e2a\u77e9\u5f62\u65f6\uff0c\u8d70\u7684\u662f\u76f8\u90bb\u4e24\u77e9\u5f62\u76f8\u4ea4\u7684\u90a3\u6761\u7ebf\u6bb5\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u4e00\u6b21\u201c\u5173\u952e\u901a\u8fc7\u201d\uff0c\u901a\u8fc7\u70b9\u79f0\u4e3a\u201c\u5173\u952e\u70b9\u201d\u3002\u90a3\u4e48\u4e00\u6b21\u901a\u8fc7\uff0c\u8981\u4e48\u8d70\u4e00\u4e2a\u524d\u9762\u7684\u5173\u952e\u70b9\u548c\u540e\u9762\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u79bb\u5f00\u70b9\u8fde\u7ebf\u4ea4\u70b9\uff0c\u8981\u4e48\u201c\u5173\u952e\u901a\u8fc7\u201d\u8be5\u77e9\u5f62\u3002\n\n\u5982\u679c\u8d77\u70b9\u7684x\u5750\u6807\u6bd4\u8f83\u5927\uff0c\u5c31\u4ea4\u6362\u4e00\u4e0b\u8d77\u70b9\u7ec8\u70b9\u3002\n\n\u52a8\u6001\u89c4\u5212\uff0c\u8bb0`f[i][0]`\u8868\u793a\u4ece\u53ef\u901a\u8fc7\u7ebf\u6bb5\u7684\u6700\u4f4e\u70b9\u79bb\u5f00\u77e9\u5f62i\uff0c\u8bb0`f[i][1]`\u8868\u793a\u4ece\u6700\u9ad8\u70b9\u901a\u8fc7\u77e9\u5f62i\u3002\u6bcf\u6b21\u679a\u4e3e\u4e0a\u4e00\u4e2a\u201c\u5173\u952e\u901a\u8fc7\u201d\u7684\u77e9\u5f62\uff08\u6216\u8005\u4ece\u524d\u5f80\u540e\u8f6c\u79fb\uff0c\u679a\u4e3e\u4e0b\u4e00\u4e2a\u201c\u5173\u952e\u901a\u8fc7\u201d\u7684\u77e9\u5f62\uff09\u8fdb\u884c\u8f6c\u79fb\uff0c\u6700\u540e\u8003\u8651\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u88ab\u201c\u5173\u952e\u901a\u8fc7\u201d\u7684\u77e9\u5f62\uff0c\u7136\u540e\u4ece\u8d77\u70b9\u8d70\u5230\u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\u8d70\u5230\u7ec8\u70b9\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u80fd\u5426\u76f4\u63a5\u4ece\u4e00\u4e2a\u5173\u952e\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u5462\uff1f\u5728\u8d77\u70b9\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u76f4\u7ebf\u884c\u8d70\u8def\u5f84\u7684\u659c\u7387\u4f1a\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\uff0c\u90a3\u4e48\u76f4\u63a5\u5728\u679a\u4e3e\u4e0b\u4e00\u4e2a\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff08\u6216\u56fa\u5b9a\u7ec8\u70b9\uff0c\u679a\u4e3e\u4e0a\u4e00\u4e2a\u70b9\uff09\uff0c\u4e0d\u65ad\u66f4\u65b0\u5408\u6cd5\u659c\u7387\u533a\u95f4\uff0c\u6765\u5224\u65ad\u5f53\u524d\u8fd9\u4e2a\u8f6c\u79fb\u662f\u5426\u5408\u6cd5\u3002\u590d\u6742\u5ea6\u5c31\u662f$O(n^2)$\u7684\u3002\n\n\u7f8e\u6ecb\u6ecb......?\u8bf6\uff0c\u600e\u4e48WA\u5566\u3002\n\n\u7136\u540e\u6211\u5c31\u627e\u4e86\u5f88\u591a\u5df2\u7ecf\u901a\u8fc7\u7684\u7a0b\u5e8f\u6765\u5bf9\u62cd\uff0c\u7ed3\u679c\u6ca1\u628a\u81ea\u5df1\u62cd\u51fa\u591a\u5c11\u9519\uff0c\u5012\u662f\u628a\u8ddf\u6211\u5bf9\u62cd\u7684\u56db\u6b3e\u7a0b\u5e8f\u90fd\u62cd\u51faWA\u6765\u4e86\uff08\u5305\u62ec\u6d1b\u8c37\u9898\u89e3\u7684\u524d\u4e24\u7bc7\uff09\u3002\n\n\u6700\u540e\u9762\u5411\u6570\u636e\u8c03\u8bd5\u624d\u89e3\u51b3......\u6709\u4ee5\u4e0b\u5751\u70b9\uff1a\n\n1.\u8d77\u70b9\u548c\u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u7ec8\u70b9\u548c\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u6a2a\u5750\u6807\u76f8\u540c\uff0c\u8981\u7279\u5224\u3002\u5e76\u4e14\u8fd8\u8981\u6ce8\u610f\u8fd9\u4e2a\u76f8\u540c\u8fd8\u5206\u8d77\u70b9/\u7ec8\u70b9\u5939\u5728\u901a\u8fc7\u7ebf\u6bb5\u4e2d\u95f4\u7684\u60c5\u51b5\u548c\u8d77\u70b9\u7ec8\u70b9\u5728\u901a\u8fc7\u7ebf\u6bb5\u4e00\u4fa7\u7684\u60c5\u51b5\u3002\n\n2.\u6ca1\u6709\u5173\u952e\u70b9\uff0c\u8d77\u70b9\u76f4\u63a5\u8d70\u5230\u7ec8\u70b9\u7684\u60c5\u51b5\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\ntypedef double db;\nconst int N=2002;\nconst db inf=1e11,eps=1e-9;\nint n,sx,sy,ex,ey,sb,eb;db V,ans;\nint X1[N],X2[N],Y1[N],Y2[N],L[N],R[N];db f[N][2];\ndb getk(db xx1,db yy1,db xx2,db yy2) {return (yy2-yy1)/(xx2-xx1);}\ndb dist(db xx1,db yy1,db xx2,db yy2)\n\t{return sqrt((xx1-xx2)*(xx1-xx2)+(yy1-yy2)*(yy1-yy2));}\nvoid work() {\n\tif(sx==ex) {printf(\"%.8lf\\n\",dist(sx,sy,ex,ey)/V);return;}//\u8d77\u70b9\u7ec8\u70b9\u6a2a\u5750\u6807\u76f8\u540c\n\tfor(RI i=1;i<=n;++i) f[i][0]=f[i][1]=inf;\n\tfor(RI i=1;i<n;++i) L[i]=max(Y1[i],Y1[i+1]),R[i]=min(Y2[i],Y2[i+1]);\n\tdb kl=-inf,kr=inf;ans=inf;\n\tfor(RI i=sb;i<eb;++i) {\n\t\tif(i==sb&&sx==X2[i]) {//\u8d77\u70b9\u548c\u7b2c\u4e00\u4e2a\u5173\u952e\u70b9\u6a2a\u5750\u6807\u76f8\u540c\n\t\t\tf[i][0]=dist(sx,sy,X2[i],L[i]);\n\t\t\tf[i][1]=dist(sx,sy,X2[i],R[i]);\n\t\t\tif(sy<Y1[i]||sy>Y2[i]) {kl=inf,kr=-inf;break;}\n\t\t}\n\t\tdb ll=getk(sx,sy,X2[i],L[i]),rr=getk(sx,sy,X2[i],R[i]);\n\t\tif(kl<ll+eps&&kr+eps>ll) f[i][0]=dist(sx,sy,X2[i],L[i]);\n\t\tif(kl<rr+eps&&kr+eps>rr) f[i][1]=dist(sx,sy,X2[i],R[i]);\n\t\tkl=max(kl,ll),kr=min(kr,rr);\n\t}\n\tdb kk=getk(sx,sy,ex,ey);\n\tif(kl<kk+eps&&kr+eps>kk) ans=dist(sx,sy,ex,ey);\n\tfor(RI i=sb;i<eb;++i) {\n\t\tdb kl1=-inf,kr1=inf,kl2=-inf,kr2=inf;\n\t\tfor(RI j=i+1;j<eb;++j) {\n\t\t\tdb ll=getk(X2[i],L[i],X2[j],L[j]),rr=getk(X2[i],L[i],X2[j],R[j]);\n\t\t\tif(kl1<ll+eps&&kr1+eps>ll)\n\t\t\t\tf[j][0]=min(f[i][0]+dist(X2[i],L[i],X2[j],L[j]),f[j][0]);\n\t\t\tif(kl1<rr+eps&&kr1+eps>rr)\n\t\t\t\tf[j][1]=min(f[i][0]+dist(X2[i],L[i],X2[j],R[j]),f[j][1]);\n\t\t\tkl1=max(kl1,ll),kr1=min(kr1,rr);\n\t\t\tll=getk(X2[i],R[i],X2[j],L[j]),rr=getk(X2[i],R[i],X2[j],R[j]);\n\t\t\tif(kl2<ll+eps&&kr2+eps>ll)\n\t\t\t\tf[j][0]=min(f[i][1]+dist(X2[i],R[i],X2[j],L[j]),f[j][0]);\n\t\t\tif(kl2<rr+eps&&kr2+eps>rr)\n\t\t\t\tf[j][1]=min(f[i][1]+dist(X2[i],R[i],X2[j],R[j]),f[j][1]);\n\t\t\tkl2=max(kl2,ll),kr2=min(kr2,rr);\n\t\t}\n\t\tif(i==eb-1&&ex==X1[eb]) {//\u7ec8\u70b9\u548c\u6700\u540e\u4e00\u4e2a\u5173\u952e\u70b9\u6a2a\u5750\u6807\u76f8\u540c\n\t\t\tif(ey<Y1[eb]||ey>Y2[eb]) continue;\n\t\t\tans=min(ans,f[i][0]+dist(X2[i],L[i],ex,ey));\n\t\t\tans=min(ans,f[i][1]+dist(X2[i],R[i],ex,ey));\n\t\t\tcontinue;\n\t\t}\n\t\tdb ll=getk(X2[i],L[i],ex,ey),rr=getk(X2[i],R[i],ex,ey);\n\t\tif(kl1<ll+eps&&kr1+eps>ll)\n\t\t\tans=min(ans,f[i][0]+dist(X2[i],L[i],ex,ey));\n\t\tif(kl2<rr+eps&&kr2+eps>ll)\n\t\t\tans=min(ans,f[i][1]+dist(X2[i],R[i],ex,ey));\n\t}\n\tprintf(\"%.8lf\\n\",ans/V);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(RI i=1;i<=n;++i)\n\t\tscanf(\"%d%d%d%d\",&X1[i],&Y1[i],&X2[i],&Y2[i]);\n\tscanf(\"%d%d%d%d\",&sx,&sy,&ex,&ey);\n\tif(sx>ex) swap(sx,ex),swap(sy,ey);\n\tscanf(\"%lf\",&V);\n\tsb=eb=1;\n\tfor(RI i=n;i>=1;--i) {\n\t\tif(X1[i]<=sx&&X2[i]>=sx&&Y1[i]<=sy&&Y2[i]>=sy) sb=i;\n\t\tif(X1[i]<=ex&&X2[i]>=ex&&Y1[i]<=ey&&Y2[i]>=ey) eb=i;\n\t}\n\twork();\n\treturn 0;\n}\n```\n\n\u9274\u4e8e\u672c\u9898\u8fd8\u633a\u96be\u8c03\u7684\uff08\u6216\u8bb8\u53ea\u6709\u6211\u8fd9\u4e48\u89c9\u5f97\uff1f\uff09\uff0c\u653e\u51fa\uff08\u53ea\u80fd\u751f\u6210\u5f31\u903c\u6570\u636e\u7684\uff09\u6570\u636e\u751f\u6210\u5668\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define RI register int\ntypedef long long LL;\nint X1[100],Y1[100],X2[100],Y2[100],xx[100];\nint main()\n{\n\tsrand(time(0));\n\tint n=rand()%4+1;\n\tprintf(\"%d\\n\",n);\n\tfor(RI i=1;i<=n+1;++i) xx[i]=xx[i-1]+rand()%3+1;\n\tsort(xx+1,xx+2+n);\n\tX2[0]=xx[1];for(RI i=1;i<=n;++i) X1[i]=X2[i-1],X2[i]=xx[i+1];\n\tY2[1]=rand()%8+1,Y1[1]=Y2[1]-rand()%3-1;\n\tfor(RI i=2;i<=n;++i) {\n\t\tY2[i]=rand()%4+Y1[i-1]+1;\n\t\tY1[i]=min(Y2[i],Y2[i-1])-rand()%4-1;\n\t}\n\tfor(RI i=1;i<=n;++i) printf(\"%d %d %d %d\\n\",X1[i],Y1[i],X2[i],Y2[i]);\n\tint sx=rand()%xx[n+1]+1,ex=rand()%xx[n+1]+1;\n\tint sb=1,eb=1;\n\tfor(RI i=1;i<=n;++i) {\n\t\tif(X1[i]<sx&&X2[i]>=sx) sb=i;\n\t\tif(X1[i]<ex&&X2[i]>=ex) eb=i;\n\t}\n\tint sy=rand()%(Y2[sb]-Y1[sb]+1)+Y1[sb];\n\tint ey=rand()%(Y2[eb]-Y1[eb]+1)+Y1[eb];\n\tprintf(\"%d %d %d %d\\n\",sx,sy,ex,ey);\n\tputs(\"1.00\");\n\treturn 0;\n}\n```\n\n\u6700\u540e\u8ffd\u52a0\u51e0\u7ec4\u6570\u636e......\u5927\u5bb6\u4e5f\u53ef\u4ee5\u7528\u6765\u6d4b\u6d4b\u81ea\u5df1\u7684\u4ee3\u7801\u3002\n\n```\n3\n2 -1 3 2\n3 0 4 1\n4 -3 7 3\n3 2 6 2\n1.00\n```\n\u7b54\u6848\u662f4.23606798\n\n```\n2\n3 6 6 7\n6 4 7 9\n5 7\n7 7\n1.00\n```\n\u7b54\u6848\u662f2.00000000\n\n```\n3\n1 4 2 6\n2 2 3 6\n3 2 4 4\n2 6\n3 5\n1.00\n```\n\u7b54\u6848\u662f1.41421356\n\n```\n2\n2 6 4 8\n4 5 6 7\n4 8\n3 6\n1.0\n```\n\u7b54\u6848\u662f2.23606798",
        "postTime": 1534772970,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1995 \u3010[NOI2011]\u667a\u80fd\u8f66\u6bd4\u8d5b\u3011"
    },
    {
        "content": "  \u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u7684\u65f6\u5019\uff0c\u611f\u89c9\u53ef\u80fd\u662f\u8ba1\u7b97\u51e0\u4f55\u5224\u65ad\u7ebf\u6bb5\u5408\u6cd5+\u6700\u77ed\u8def\u8dd1\u56fe\uff0c\u53ef\u662f\u540e\u6765\u4ed4\u7ec6\u4e00\u770b\u9898\u76ee\u7684\u7ed9\u7684\u6570\u636e\u4fdd\u8bc1\u77e9\u5f62\u662f\u4ece\u5de6\u5f80\u53f3\u7684\uff08\u5373\u7b2ci\u4e2a\u77e9\u5f62\u7684\u53f3\u754c\u4e0e\u7b2ci+1\u4e2a\u77e9\u5f62\u7684\u5de6\u754c\u91cd\u5408\uff09\uff0c\n\u800c\u4e14\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u770b\u51fa\uff0c\u901a\u8fc7\u4e24\u70b9\u4e4b\u95f4\u7ebf\u6bb5\u6700\u77ed\u8bf4\u660e\u8def\u7a0b\u4e00\u5b9a\u662f\u6298\u7ebf\u6216\u7ebf\u6bb5\uff0c\u5982\u679c\u662f\u6298\u7ebf\u7684\u8bdd\u62d0\u70b9\u4e00\u5b9a\u662f\u4f4d\u4e8e\u77e9\u5f62\u7684\u9876\u70b9\uff0c\u4e0e\u6b64\u540c\u65f6\u62d0\u70b9\u4f4d\u4e8e\u91cd\u5408\u7684\u8fb9\u4e0a\uff0c\u90a3\u4e48\u6bcf\u4e2a\u77e9\u5f62\u4ea7\u751f\u4e24\u4e2a\u70b9\uff0c\u8fd9\u4e00\u5f20\u8054\u901a\u56fe\u6700\u591a\u53ea\u6709\uff082*N+2\uff09\u4e2a\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\u00b2\uff09\uff0c\u671f\u671b\u5f97\u5206\uff1a100\u5206\u3002\n  \u90a3\u4e48\u8981\u600e\u4e48\u7b97\u51fa\u6700\u4f18\u89e3\uff0c\u6211\u5c31\u60f3\u5230\u4e86DP\uff08\u56e0\u4e3a\u77e9\u5f62\u4e00\u5b9a\u662f\u4ece\u5de6\u5230\u53f3\u7684\uff09\uff0cF[i]\u8868\u793a\u8d77\u70b9\u5230\u70b9i\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8f7b\u677e\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u5f0f\uff1aF[i]=min(F[i],F[j]+len(i,j))(\u7ebf\u6bb5ij\u5408\u6cd5\uff09\u3002\u5224\u65ad\u5408\u6cd5\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u9009\u62e9\u7528\u4e24\u4e2a\u5411\u91cf\u8868\u793a\u8303\u56f4\uff0c\u90a3\u4e48\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53ea\u8981\u901a\u8fc7\u659c\u7387\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u8303\u56f4\u5c31\u884c\u4e86\u3002\n  \u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<math.h>\n#include<cmath>\nusing namespace std;\nint a[10],n,stx,sty,edx,edy,num;\nint x1[2010],ydown[2010],x2[2010],y2[2010];\ndouble v,dis[4010];\nstruct node{\n    int x;int y;\n}p[5005];\nvoid saw()\n{\n    num=1;p[1].x=stx;p[1].y=sty;\n    for (int i=1;i<n;i++)\n    {\n        if (stx>x2[i]) continue;    \n        if (x2[i]>edx) break;\n        a[1]=ydown[i],a[2]=y2[i],a[3]=ydown[i+1],a[4]=y2[i+1];\n        sort(a+1,a+1+4);\n        num++;\n        p[num].x=x2[i];\n        p[num].y=a[2];\n        num++;\n        p[num].x=x2[i];\n        p[num].y=a[3];\n    }\n    num++;\n    p[num].x=edx;\n    p[num].y=edy;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) \n    scanf(\"%d%d%d%d\",&x1[i],&ydown[i],&x2[i],&y2[i]);\n    scanf(\"%d%d%d%d\",&stx,&sty,&edx,&edy);\n    if (stx>edx) \n    {\n        swap(stx,edx);\n        swap(sty,edy);\n    }\n    scanf(\"%lf\",&v);    \n    saw();\n    for (int i=2;i<=num;i++) dis[i]=1e99;\n    for (int i=1;i<num;i++)\n    {\n        double nox=(double)p[i].x*1.0;\n        double noy=(double)p[i].y*1.0;\n        double mmax=1e99;\n        double mmin=-1e99;\n        for (int j=i+1;j<=num;j++)\n        {\n            double len;\n            double nex=(double)p[j].x*1.0;\n            double ney=(double)p[j].y*1.0;\n\n            if (nex==nox)\n            {\n                len=abs(ney-noy);\n                dis[j]=min(dis[j],len+dis[i]);\n                continue;\n            }\n            double tmp=(ney-noy)/(nex-nox);\n            if ((tmp<=mmax)&&(tmp>=mmin))\n            {\n                double hh=(ney-noy)*(ney-noy)+(nex-nox)*(nex-nox);\n                len=sqrt(hh);\n                dis[j]=min(dis[j],len+dis[i]);\n            }\n            if ((j%2)==0)   mmin=max(mmin,tmp);\n            else    mmax=min(mmax,tmp);\n        }\n    }\n    double ans=dis[num]/v;\n    printf(\"%.10lf\\n\",ans);\n}\n```",
        "postTime": 1525603142,
        "uid": 90454,
        "name": "\u4e4c\u5408\u4e4b\u4f17",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1995 \u3010[NOI2011]\u667a\u80fd\u8f66\u6bd4\u8d5b\u3011"
    },
    {
        "content": "# Description\n\n[P1995 [NOI2011] \u667a\u80fd\u8f66\u6bd4\u8d5b](https://www.luogu.com.cn/problem/P1995)\n\n\u7ed9\u5b9a $n$ \u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u6bcf\u4e2a\u77e9\u5f62\u7684\u8fb9\u90fd\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u7b2c $i$ \u4e2a\u77e9\u5f62\u533a\u57df\u7684\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u5750\u6807\u5206\u522b\u4e3a $(x_{i,1},y_{i,1})$ \u548c $(x_{i,2},y_{i,2})$\u3002\u7ed9\u5b9a\u8d77\u70b9 $S$\uff0c\u7ec8\u70b9 $T$\uff0c\u901f\u5ea6 $v$\uff0c\u6c42\uff1a\u4ece\u8d77\u70b9 $S$ \u5230\u7ec8\u70b9 $T$ \u7684\u6700\u77ed\u65f6\u95f4\u4e3a\u591a\u5c11\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$n \\leq 2 \\times 10^3$\uff0c$|x_{i,1}|,| y_{i,1}|, |x_{i,2}|,|y_{i,2}| \\leq 4 \\times 10^4$\n\n# Analysis\n\n~~\u770b\u5f88\u591a\u5927\u4f6c\u7684\u89e3\u6cd5\u90fd\u662f dp\uff0c\u4f46\u597d\u50cf\u90fd\u88ab Hack \u4e86\uff08\uff1f~~\n\n- ~~[Hack \u7b2c\u4e00\u7bc7\u9898\u89e3](https://www.luogu.com.cn/discuss/544413)~~\n- ~~[Hack \u7b2c\u4e8c\u7bc7\u9898\u89e3](https://www.luogu.com.cn/discuss/544421)~~\n- ~~[Hack \u7b2c\u4e09\u7bc7\u9898\u89e3](https://www.luogu.com.cn/discuss/544423)~~\n- ~~[Hack \u7b2c\u56db\u7bc7\u9898\u89e3](https://www.luogu.com.cn/discuss/544430)~~\n- ~~[Hack \u7b2c\u4e94\u7bc7\u9898\u89e3](https://www.luogu.com.cn/discuss/544436)~~\n\n------------\n\n\u6211\u7684\u505a\u6cd5\u662f\uff1a\u6784\u56fe $+$ SPFA\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u627e\u5230**\u5173\u952e\u70b9**\u3002**\u5173\u952e\u70b9**\u5305\u62ec\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u548c\u76f8\u90bb\u77e9\u5f62\u63a5\u89e6\u7ebf\u6bb5\u7684\u4e0a\u7aef\u70b9\u548c\u4e0b\u7aef\u70b9\uff08\u5982\u4e0b\u56fe\uff0c\u6709\u7ea2\u8272\u5708\u4f4f\u7684\u70b9\u5373\u4e3a**\u5173\u952e\u70b9**\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ufe91jtd.png)\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5728\u8fd9\u4e9b\u5173\u952e\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002\n\n\u6211\u4eec\u628a\u8fd9\u4e9b\u5173\u952e\u7684\u70b9\u62ff\u51fa\u6765\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/co6g8qf5.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e9b\u7ad6\u76f4\u7684\u7ebf\u6bb5\u3002\n\n\u9664\u4e86\u8d77\u70b9 $S$ \u548c\u7ec8\u70b9 $T$ \u5916\uff0c\u4ece\u5de6\u5230\u53f3\u6216\u8005\u4ece\u53f3\u5230\u5de6\u7a7f\u8fc7\u7ebf\u6bb5\u6240\u5728\u7684\u76f4\u7ebf\uff0c\u5fc5\u987b\u5728\u7ebf\u6bb5\u4e2d\u7a7f\u8fc7\u53bb\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e2a\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u3002\n\n\u4e0b\u56fe\u662f\u8d77\u70b9 $S$ \u5230\u7b2c $4$ \u6761\u7ad6\u76f4\u7684\u7ebf\u6bb5\u7684\u4e0a\u8fb9\u754c $l_1$ \u548c\u4e0b\u8fb9\u754c $l_2$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jr6ixlpf.png)\n\n\u7136\u540e\uff0c\u6211\u4eec\u5148\u6309 $x$ \u5750\u6807**\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\uff0c\u679a\u4e3e\u8fb9\u7684\u8d77\u70b9\uff0c\u5411\u5de6\u6216\u8005\u5411\u53f3\u8fde\u8fb9\uff0c\u5982\u679c\u9047\u5230\u7ad6\u76f4\u7684\u7ebf\u6bb5\uff0c\u7528\u53c9\u79ef\u66f4\u6539\u4e0a\u4e0b\u8fb9\u754c\u5373\u53ef\u3002\n\n\u6700\u540e\uff0c\u6784\u597d\u56fe\u5c31\u76f4\u63a5 SPFA \u5373\u53ef\u3002\n\n\n# Code\n\n> \u7801\u98ce\u4e0d\u600e\u4e48\u597d\u770b\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\n\nconst int maxN=2000;\nconst double INF=1e15;\nconst double EPS=1e-9;\n\ninline int dblcmp(double x)\n{\n    if (abs(x)<EPS)return 0;\n    return x>0?1:-1;\n}\ninline double sqr(double x)\n{\n    return x*x;\n}\n\nstruct Tpoint\n{\n    double x,y;\n    inline Tpoint() {}\n    inline Tpoint(double _x,double _y)\n    {\n        x=_x;\n        y=_y;\n    }\n};\n\ninline double dis(Tpoint a,Tpoint b)\n{\n    return sqrt(sqr(a.x-b.x)+sqr(a.y-b.y));\n}\ninline double det(Tpoint p0,Tpoint p1,Tpoint p2)\n{\n    return (p1.x-p0.x)*(p2.y-p0.y)-(p1.y-p0.y)*(p2.x-p0.x);\n}\n\nint N;\nTpoint square[maxN+100][2];\nTpoint a[maxN+100][2];\nint id[maxN+100][2],cnt;\nint now,info[2*maxN+100];\nstruct Tedge\n{\n    int v,next;\n    double dis;\n} edge[2*maxN*2*maxN+1000];\ndouble ans,v;\nTpoint S,T;\nint eS,eT,idS,idT;\n\ninline void addedge(int u,int v,double dis)\n{\n    now++;\n    edge[now].v=v;\n    edge[now].dis=abs(dis);\n    edge[now].next=info[u];\n    info[u]=now;\n}\n\ninline void solve(Tpoint s,int num,int l)\n{\n    if (num!=idS && num!=idT && num%2==0)\n    {\n        addedge(num,num+1,dis(a[l][0],a[l][1]));\n        addedge(num+1,num,dis(a[l][0],a[l][1]));\n    }\n    Tpoint low,high,t1,t2;\n    bool flag=0;\n    for(int i=l-1; i>=1; --i)\n    {\n        if (!flag && (id[i][0]==idS || id[i][0]==idT))\n        {\n            addedge(num,id[i][0],dis(s,a[i][0]));\n            addedge(id[i][0],num,dis(s,a[i][0]));\n            continue;\n        }\n        if (!flag)\n        {\n            addedge(num,id[i][0],dis(s,a[i][0]));\n            addedge(id[i][0],num,dis(s,a[i][0]));\n            addedge(num,id[i][1],dis(s,a[i][1]));\n            addedge(id[i][1],num,dis(s,a[i][1]));\n            low=a[i][0];\n            high=a[i][1];\n            flag=1;\n            continue;\n        }\n        t1=a[i][0];\n        t2=a[i][1];\n        if ( dblcmp(det(s,low,t1))<=0 && dblcmp(det(s,high,t1))>=0 )\n        {\n            addedge(num,id[i][0],dis(s,a[i][0]));\n            addedge(id[i][0],num,dis(s,a[i][0]));\n        }\n        if ( dblcmp(det(s,low,t2))<=0 && dblcmp(det(s,high,t2))>=0 )\n        {\n            addedge(num,id[i][1],dis(s,a[i][1]));\n            addedge(id[i][1],num,dis(s,a[i][1]));\n        }\n        if (id[i][0]!=idS && id[i][0]!=idT)\n        {\n            if ( dblcmp( det(s,low,t2) ) == 1 ) break;\n            if ( dblcmp( det(s,high,t1)) == -1 ) break;\n            if ( dblcmp( det(s,low,t1) ) == -1 ) low=t1;\n            if ( dblcmp( det(s,high,t2))== 1 ) high=t2;\n        }\n    }\n}\n\nint head,tail,queue[7*2*maxN+100];\nbool vis[2*maxN+100];\ndouble f[2*maxN+100];\ninline double SPFA()\n{\n    int S=idS,T=idT;\n    for(int i=1; i<=cnt; ++i) f[i]=INF;\n    queue[head=tail=0]=S;\n    f[S]=0.0;\n    vis[S]=1;\n    while(head<=tail)\n    {\n        int u=queue[(head++)%(7*2*maxN+100)],v,i;\n        double dis;\n        vis[u]=0;\n        for(i=info[u],v=edge[i].v,dis=edge[i].dis; i!=-1; i=edge[i].next,v=edge[i].v,dis=edge[i].dis)\n            if ( dblcmp(dis+f[u]-f[v])==-1 )\n            {\n                f[v]=dis+f[u];\n                if (!vis[v])\n                {\n                    vis[v]=1;\n                    queue[(++tail)%(7*2*maxN+100)]=v;\n                    if ( dblcmp(f[queue[head%(7*2*maxN+100)]]-f[queue[tail%(7*2*maxN+100)]])==1 ) swap(queue[tail%(7*2*maxN+100)],queue[head%(7*2*maxN+100)]);\n                }\n            }\n    }\n    return abs(f[T]);\n}\n\nint main()\n{\n    //freopen(\"car.in\",\"r\",stdin);\n    //freopen(\"car.out\",\"w\",stdout);\n    scanf(\"%d\\n\",&N);\n    for(int i=1; i<=N; ++i)scanf(\"%lf%lf%lf%lf\\n\",&square[i][0].x,&square[i][0].y,&square[i][1].x,&square[i][1].y);\n    scanf(\"%lf%lf\\n\",&S.x,&S.y);\n    for(int i=1; i<=N; ++i)\n        if (dblcmp(square[i][0].x-S.x)<=0 && dblcmp(S.x-square[i][1].x)<=0 && dblcmp(square[i][0].y-S.y)<=0 && dblcmp(S.y-square[i][1].y)<=0)\n        {\n            eS=i;\n            break;\n        }\n    scanf(\"%lf%lf\\n\",&T.x,&T.y);\n    for(int i=1; i<=N; ++i)\n        if (dblcmp(square[i][0].x-T.x)<=0 && dblcmp(T.x-square[i][1].x)<=0 && dblcmp(square[i][0].y-T.y)<=0 && dblcmp(T.y-square[i][1].y)<=0)\n        {\n            eT=i;\n            break;\n        }\n    int g=N;\n    N=0;\n    for(int i=1; i<=g; ++i)\n    {\n        if (i==eS)\n        {\n            N++;\n            a[N][0].x=S.x;\n            a[N][0].y=S.y;\n            a[N][1].x=S.x;\n            a[N][1].y=S.y;\n            idS=id[N][0]=id[N][1]=++cnt;\n        }\n        if (i==eT)\n        {\n            N++;\n            a[N][0].x=T.x;\n            a[N][0].y=T.y;\n            a[N][1].x=T.x;\n            a[N][1].y=T.y;\n            idT=id[N][0]=id[N][1]=++cnt;\n        }\n        if (i==g) continue;\n        N++;\n        a[N][0].x=square[i][1].x;\n        a[N][0].y=max(square[i][0].y,square[i+1][0].y);\n        a[N][1].x=square[i][1].x;\n        a[N][1].y=min(square[i][1].y,square[i+1][1].y);\n        id[N][0]=++cnt;\n        id[N][1]=++cnt;\n    }\n    memset(info,-1,sizeof(info));\n    now=-1;\n    for(int i=2; i<=N; ++i)\n        for(int j=0; j<2; j++)\n            solve(a[i][j],id[i][j],i);\n    ans=SPFA();\n    scanf(\"%lf\\n\",&v);\n    ans=ans/v;\n    printf(\"%0.10lf\\n\",ans);\n    return 0;\n}\n```\n ",
        "postTime": 1671091150,
        "uid": 897776,
        "name": "Infinite_Eternity",
        "ccfLevel": 0,
        "title": "P1995 [NOI2011] \u667a\u80fd\u8f66\u6bd4\u8d5b"
    },
    {
        "content": "\u636e\u8bf4\u8fd9\u9898\u8981DP??\n\n\u4e0d\u7ba1\u4e86\u5566,\u53cd\u6b63\u6211\u6ca1DP,\u4f3c\u4e4e\u53ef\u4ee5\u8d2a\u5fc3\u7740\u505a(\u8ff7\u4e4b\u7b97\u6cd5)\n\n\u663e\u7136\u4e24\u70b9\u4e4b\u95f4\u8d70\u76f4\u7ebf\u8981\u6bd4\u6298\u7ebf\u77ed.\u5148\u6c42\u51fa\u6240\u6709\u77e9\u5f62\u76f8\u4ea4\u7684\u90a3\u90e8\u5206\u7ebf\u6bb5(\u5c31\u53eb\u901a\u9053\u597d\u4e86),\u53d6\u5176\u4e2d\u70b9,\u4ece\u5de6\u5230\u53f3\u76f8\u8fde,\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6298\u7ebf\u7684\u8def\u5f84,\u7136\u540e\u4e0d\u65ad\u5bf9\u5176\u8fdb\u884c\u4fee\u6b63:\n\n\u5047\u8bbe\u6211\u4eec\u5230\u4e86\u7b2ci\u4e2a\u76f8\u4ea4\u90e8\u5206\u4e0a\u7684\u70b9\n\n1.\u82e5i-1\u548ci+1\u76f4\u63a5\u76f8\u8fde\u80fd\u4ece\u8fd9\u4e2a\u901a\u9053\u901a\u8fc7,\u5219\u76f8\u8fde\u4e4b\n\n2.\u82e5\u4e0d\u80fd\u7684\u8bdd,\u6298\u7ebf\u5411\u4e0a\u51f8\u5c31\u5c06i\u70b9\u79fb\u5230\u901a\u9053\u7684\u4e0b\u8fb9\u754c,\u5411\u4e0b\u51f8\u5219\u662f\u4e0a\u8fb9\u754c\n\n\u591a\u6b21\u4fee\u6b63\u81f3\u4e0d\u518d\u53d8\u5316\u5c31\u597d\u4e86\u554a.\n\n\u849f\u84bb\u4ee3\u7801\u5de8\u4e11,\u5927\u4f6c\u52ff\u55b7\n\n```cpp\n#include <bits/stdc++.h>\n#define ERO (1e7)\n#define ESP (1e-12)\n#define XX(x) ((x)*(x))\n#define fabs(x) ((x)>0?(x):-(x))\n#define ET0(x) (fabs(x)<=ESP)\nusing namespace std;\nstruct Point{\n\tdouble x,y;\n\tPoint operator + (Point p)\n\t{\n\t\tp.x+=x;p.y+=y;\n\t\treturn p;\n\t}\n\tPoint operator - (Point p)\n\t{\n\t\tp.x=-p.x+x;p.y=-p.y+y;\n\t\treturn p;\n\t}\n\tPoint operator * (double lambda)\n\t{return {x*lambda,y*lambda};}\n\tdouble operator * (Point p)\n\t{return x*p.x+y*p.y;}\n\tdouble operator % (Point p)\n\t{return x*p.y-y*p.x;}\n\tbool operator == (Point p)\n\t{return ET0(x-p.x)&&ET0(y-p.y);}\n};\n\nstruct Line{\n\tPoint p1,p2;\n};\n\ndouble Dist(Point p1,Point p2)\n{return sqrt(XX(p1.x-p2.x)+XX(p1.y-p2.y));}\n\nPoint Intersection(Line l1,Line l2)\n{\n\tPoint re;\n\tdouble c1x=l1.p2.x-l1.p1.x,c2x=l2.p2.x-l2.p1.x,c1y=l1.p2.y-l1.p1.y,c2y=l2.p2.y-l2.p1.y;\n\tre.x=(c1y*c2x*l1.p1.x-c1x*c2y*l2.p1.x+c1x*c2x*(l2.p1.y-l1.p1.y))/(c1y*c2x-c1x*c2y);\n\tre.y=(c1x*c2y*l1.p1.y-c1y*c2x*l2.p1.y+c1y*c2y*(l2.p1.x-l1.p1.x))/(c1x*c2y-c1y*c2x);\n\treturn re;\n} \n\nLine Door[2018];\nPoint path[2018],Rect[2018][2];\ndouble sx,sy,tx,ty,speed,lastmindis=0,mindis=1e9;\nint n;\n\nint main()\n{\n\tsrand(time(NULL));\n\tcin.sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>n>>Rect[1][0].x>>Rect[1][0].y>>Rect[1][1].x>>Rect[1][1].y;\n\tfor (int i=2;i<=n;++i)\n\t\tcin>>Rect[i][0].x>>Rect[i][0].y>>Rect[i][1].x>>Rect[i][1].y,\n\t\tDoor[i-1].p1={Rect[i][0].x,max(Rect[i-1][0].y,Rect[i][0].y)},\n\t\tDoor[i-1].p2={Rect[i][0].x,min(Rect[i-1][1].y,Rect[i][1].y)};\n\tcin>>sx>>sy>>tx>>ty>>speed;\n\t\n\tif (sx>tx) swap(sx,tx),swap(sy,ty);\n\tint Pos1=1,Pos2=n-1;\n\twhile (Pos1<=n-1&&Door[Pos1].p1.x<=sx)\n\t\t++Pos1;\n\tif (Door[Pos1-1].p1.x==sx&&(Door[Pos1-1].p1.y>sy||Door[Pos1-1].p2.y<sy)\n\t\t&&Rect[Pos1-2][0].y<=sy&&sy<=Rect[Pos1-2][1].y) --Pos1;//\u6700\u540e\u7684\u9519\u8bef\u6240\u5728,\u5c11\u4e86\u8fd9\u4e2a\u7279\u5224,\u6ca1\u6709\u8003\u8651\u597d\u8d77\u6b62\u7684\u60c5\u51b5,\u7ed3\u679c\u8c03\u4e86\u4e00\u5929 \n\twhile (Pos2>=1&&Door[Pos2].p1.x>=tx)\n\t\t--Pos2;\n\tif (Door[Pos2+1].p1.x==tx&&(Door[Pos2+1].p1.y>ty||Door[Pos2+1].p2.y<ty)\n\t\t&&Rect[Pos2+2][0].y<=ty&&ty<=Rect[Pos2+2][1].y) ++Pos2;\n\t\n\tpath[Pos1-1]={sx,sy};\n\tpath[Pos2+1]={tx,ty};\n\tfor (int i=Pos1;i<=Pos2;++i)\n\t\tpath[i]=(Door[i].p1+Door[i].p2)*0.5;\n\t\n\twhile (lastmindis!=mindis)\n\t{\n\t\tlastmindis=mindis;\n\t\tmindis=0;\n\t\tfor (int i=Pos1;i<=Pos2;++i)\n\t\t{\n\t\t\tLine l;l.p1=path[i-1];l.p2=path[i+1];\n\t\t\tPoint p=Intersection(l,Door[i]);\n\t\t\tif (p.y>=Door[i].p1.y&&p.y<=Door[i].p2.y) path[i]=p;\n\t\t\telse \n\t\t\t\tif ((path[i]-path[i-1])%(path[i+1]-path[i])>0)//\u5411\u4e0b\u51f8\n\t\t\t\t\tpath[i]=Door[i].p2;\n\t\t\t\telse path[i]=Door[i].p1;\n\t\t\tmindis+=Dist(path[i],path[i-1]);\n\t\t}\n\t\tmindis+=Dist(path[Pos2],path[Pos2+1]);\n\t}\n\tprintf(\"%.8lf\\n\",mindis/speed);\n\treturn 0;\n}\n```",
        "postTime": 1522227203,
        "uid": 30777,
        "name": "qianpinyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1995 \u3010[NOI2011]\u667a\u80fd\u8f66\u6bd4\u8d5b\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u5de6\u53f3\u76f8\u8fde\u7684\u77e9\u5f62\u548c\u4e24\u4e2a\u70b9\uff0c\u6c42\u5728\u4e0d\u8d70\u51fa\u77e9\u5f62\u533a\u57df\u7684\u60c5\u51b5\u4e0b\u4e24\u70b9\u95f4\u8def\u5f84\u957f\u5ea6\u6700\u5c0f\u503c\u3002\n\n## \u9898\u89e3\n\n\u663e\u7136\uff0c\u7b54\u6848\u8def\u5f84\u662f\u4e00\u6761\u6298\u7ebf\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6298\u7ebf\u65b9\u5411\u53d1\u751f\u6539\u53d8\u7684\u70b9\u4e00\u5b9a\u662f\u77e9\u5f62\u7684\u9876\u70b9\u3002\u77e9\u5f62\u7684\u9876\u70b9\u4e0d\u8d85\u8fc7 $8000$ \u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4ee5\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u6240\u6709\u77e9\u5f62\u7684\u9876\u70b9\u4e3a\u9876\u70b9\u5efa\u56fe\uff0c\u679a\u4e3e\u6240\u6709\u70b9\u5bf9\uff0c\u5bf9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u8981\u5224\u65ad\u4e24\u70b9\u95f4\u662f\u5426\u53ef\u8fbe\uff0c\u5373\u662f\u5224\u65ad\u4e24\u70b9\u95f4\u8fde\u7ebf\u662f\u5426\u7ecf\u8fc7\u5408\u6cd5\u533a\u57df\u5916\u3002\n\n\u8003\u8651\u5c06\u76f8\u90bb\u77e9\u5f62\u7684\u8fb9\u516c\u5171\u90e8\u5206\u53d6\u51fa\uff0c\u5f97\u5230 $n-1$ \u6761\u5e73\u884c\u4e8e $y$ \u8f74\u7684\u7ebf\u6bb5\uff0c\u90a3\u4e48\u5206\u5c45\u4e8e\u5176\u4e2d\u4efb\u4e00\u7ebf\u6bb5\u6240\u5728\u76f4\u7ebf\u4e24\u7aef\u7684\u70b9\u8981\u53ef\u8fbe\uff0c\u5fc5\u987b\u6ee1\u8db3\u4e24\u70b9\u95f4\u8fde\u7ebf\u7ecf\u8fc7\u8be5\u7ebf\u6bb5\u3002\u8fd9\u4e2a\u6761\u4ef6\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8fc7\u5f53\u524d\u70b9\u7684\u659c\u7387\u7684\u9650\u5236\u6765\u8fbe\u6210\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/flksfwex.png)\n\n\u5982\u56fe\uff0c\u6309\u7167\u4ee5\u4e0a\u89c4\u5219\uff0c$S$ \u70b9\u51fa\u53d1\u5411\u53f3\u8d8a\u8fc7\u7b2c\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u53ea\u6709\u84dd\u8272\u533a\u57df\u4e2d\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe $S$ \u70b9\u3002\n\n\n\u8d8a\u8fc7\u4e00\u4e2a\u77e9\u5f62\u7684\u539f\u56e0\u5c31\u662f\u7b2c\u4e00\u4e2a\u77e9\u5f62\u4f1a\u51fa\u95ee\u9898\uff0c\u679a\u4e3e\u5230\u7684\u70b9\u53ef\u80fd\u4e0d\u5728\u6211\u4eec\u9009\u51fa\u7684\u7ebf\u6bb5\u4e0a\uff0c\u8fd9\u65f6\uff0c\u5f53\u524d\u70b9\u7684\u53f3\u4fa7\u53ef\u80fd\u5728\u8fb9\u754c\u5916\u3002\n\n\u53ea\u8003\u8651\u5f53\u524d\u70b9\u53f3\u4fa7\uff0c\u5982\u679c\u5f53\u524d\u70b9\u53f3\u4fa7\u5728\u8fb9\u754c\u5916\uff0c\u5219\u5f53\u524d\u70b9\u53f3\u4fa7\u6ca1\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff08\u5982\u56fe\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vbwo691e.png)\n\n\u5982\u679c\u5f53\u524d\u70b9\u53f3\u4fa7\u5728\u8fb9\u754c\u5185\uff0c\u5219\u53f3\u4fa7\u6574\u4e2a\u77e9\u5f62\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\uff08\u5982\u56fe\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jngeydfm.png)\n\n\u5728\u5c06\u70b9\u6309 $x$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u5373\u53ef $O(n^2)$ \u5b8c\u6210\u8fd9\u4e00\u8fc7\u7a0b\u3002\n\n\u6309\u7167\u8fd9\u4e00\u89c4\u5219\u5efa\u56fe\u540e\uff0c\u8ba1\u7b97 $S$ \u5230 $T$ \u7684\u6700\u77ed\u8def\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2 \\log_2(n^2))$\uff0c~~\u6709\u70b9\u6162~~\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>\nvoid read(T &res) {\n\tres=0;bool f=false;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=true; ch=getchar();}\n\twhile(ch>='0'&&ch<='9') res=(res<<3)+(res<<1)+(ch^48),ch=getchar();\n\tres=f?-res:res;\n}\ntemplate<typename T,typename ...Args>\nvoid read(T &res,Args &...args) {read(res); read(args...);}\ntemplate<typename T>\nvoid write(T x) {if(x<0) putchar('-'),x=-x; if(x>9) write(x/10); putchar(x%10+'0');}\ntemplate<typename T>\ninline void writeln(T x) {write(x);putchar('\\n');}\ntemplate<typename T,typename ...Args>\nvoid write(T x,Args ...args) {write(x); putchar(' '); write(args...);}\ntemplate<typename T,typename ...Args>\nvoid writeln(T x,Args ...args) {writeln(x); writeln(args...);}\n#define MAXN 2001\nconst double eps=1e-10;\nconst double inf=1.0/0.0;\nclass Point {\npublic:\n\tPoint() {x=y=type=0;}\n\tPoint(double _x,double _y) {x=_x,y=_y,type=0;}\n\tdouble x,y;\n\tint type;\n}p[MAXN<<3];\nclass Seg {\npublic:\n\tSeg() {x=y1=y2=0;}\n\tSeg(double _x,double _y1,double _y2) {x=_x,y1=_y1,y2=_y2;}\n\tdouble x,y1,y2;\n}seg[MAXN],rs[MAXN];\nclass Line {\npublic:\n\tLine() {p=Point(),d=Point();}\n\tLine(Point _p,Point _d) {p=_p,d=_d;}\n\tPoint p,d;\n\tinline double y(double x) {\n\t\tdouble mul=(x-p.x)/d.x;\n\t\treturn p.y+mul*d.y;\n\t}\n};\nclass Edge {\npublic:\n\tEdge() {to=next=len=0;}\n\tint to,next;\n\tdouble len;\n};\nclass Graph {\npublic:\n\tGraph() {\n\t\tmemset(g,0,sizeof(g));\n\t\tmemset(head,0,sizeof(head));\n\t\ttot=0;\n\t}\n\tinline void addEdge(int from,int to,double len) {\n\t\tg[++tot].to=to;g[tot].next=head[from];head[from]=tot;g[tot].len=len;\n\t\tg[++tot].to=from;g[tot].next=head[to];head[to]=tot;g[tot].len=len;\n\t}\n\tEdge g[MAXN*MAXN<<1];\n\tint head[MAXN<<3],tot;\n}g;\ninline int dcmp(double x) {\n\tif(x>eps) return 1;\n\tif(x<-eps) return -1;\n\treturn 0;\n}\ninline double sq(double x) {\n\treturn x*x;\n}\ninline double calcDis(Point a,Point b) {\n\treturn __builtin_sqrt(sq(a.x-b.x)+sq(a.y-b.y));\n}\ninline bool operator<(const Point a,const Point b) {\n\treturn a.x<b.x;\n}\ninline double getK(Point a,Point b) {\n\treturn (b.y-a.y)/(b.x-a.x);\n}\nint sid,tid;\ninline void buildGraph(int pcnt,int scnt,Point s,Point t) {\n\ts.type=t.type=1;\n\tp[++pcnt]=s;p[++pcnt]=t;\n\tsort(p+1,p+pcnt+1);\n\tfor(int i=1;i<=pcnt;i++) {\n\t\tif(p[i].type) {\n\t\t\tif(p[i].x==s.x&&p[i].y==s.y) sid=i;\n\t\t\telse tid=i;\n\t\t}\n\t\tint cur=p[i].x,j=i+1,k=1;\n\t\twhile(j<=pcnt&&p[j].x==cur) {\n\t\t\tg.addEdge(i,j,calcDis(p[i],p[j]));\n\t\t\tfprintf(stderr,\"(%.0lf,%.0lf)<->(%.0lf,%.0lf) %.3lf\\n\",p[i].x,p[i].y,p[j].x,p[j].y,calcDis(p[i],p[j]));\n\t\t\t++j;\n\t\t}\n\t\tif(j>pcnt) continue;\n\t\tcur=p[j].x;\n\t\tfor(;k<=scnt;k++) {\n\t\t\tif(dcmp(seg[k].x-p[i].x)>=0) break;\n\t\t}\n\t\tdouble k1=inf,k2=-inf;\n\t\tif(dcmp(seg[k].x-p[i].x)==0) {\n\t\t\tif(k<scnt&&(dcmp(rs[k+1].y1-p[i].y)>0||dcmp(rs[k+1].y2-p[i].y)<0)) continue;\n\t\t\t++k;\n\t\t} \n\t\tfor(;k<=scnt;k++) {\n\t\t\twhile(dcmp(seg[k].x-cur)>0) {\n\t\t\t\twhile(j<=pcnt&&p[j].x==cur) {\n\t\t\t\t\tif(dcmp(getK(p[i],p[j])-k2)>=0&&dcmp(getK(p[i],p[j])-k1)<=0) {\n\t\t\t\t\t\tg.addEdge(i,j,calcDis(p[i],p[j]));\n\t\t\t\t\t\tfprintf(stderr,\"(%.0lf,%.0lf)<->(%.0lf,%.0lf) %.3lf\\n\",p[i].x,p[i].y,p[j].x,p[j].y,calcDis(p[i],p[j]));\n\t\t\t\t\t}\n\t\t\t\t\t++j;\n\t\t\t\t}\n\t\t\t\tif(j>pcnt) break;\n\t\t\t\tcur=p[j].x;\n\t\t\t}\n\t\t\twhile(j<=pcnt&&p[j].x==cur) {\n\t\t\t\tif(dcmp(getK(p[i],p[j])-k2)>=0&&dcmp(getK(p[i],p[j])-k1)<=0&&dcmp(p[j].y-rs[k].y1)>=0&&dcmp(p[j].y-rs[k].y2)<=0) {\n\t\t\t\t\tg.addEdge(i,j,calcDis(p[i],p[j]));\n\t\t\t\t\tfprintf(stderr,\"(%.0lf,%.0lf)<->(%.0lf,%.0lf) %.3lf\\n\",p[i].x,p[i].y,p[j].x,p[j].y,calcDis(p[i],p[j]));\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tif(j>pcnt) break;\n\t\t\tcur=p[j].x;\n\t\t\tk1=min(k1,getK(p[i],Point(seg[k].x,seg[k].y2)));\n\t\t\tk2=max(k2,getK(p[i],Point(seg[k].x,seg[k].y1)));\n\t\t\tif(dcmp(k1-k2)<0) break;\n\t\t}\n\t}\n}\npriority_queue<pair<double,int>,vector<pair<double,int> >,greater<pair<double,int> > >q;\ndouble dis[MAXN<<3];\nbool vis[MAXN<<3];\ninline double dijkstra(int o,int e,int pcnt) {\n\tfor(int i=1;i<=pcnt;i++) {\n\t\tdis[i]=inf;vis[i]=false;\n\t}\n\tdis[o]=0;q.push(make_pair(dis[o],o));\n\twhile(!q.empty()) {\n\t\tint u=q.top().second;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=true;\n\t\tfor(int i=g.head[u];i;i=g.g[i].next) {\n\t\t\tint v=g.g[i].to;\n\t\t\tif(dis[v]>dis[u]+g.g[i].len) {\n\t\t\t\tdis[v]=dis[u]+g.g[i].len;\n\t\t\t\tif(!vis[v]) q.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[e];\n}\nint n,pcnt,scnt;\nPoint s,t;\nint main() {\n\tread(n);\n\tdouble ly1=-inf,ly2=inf;\n\tfor(int i=1;i<=n;i++) {\n\t\tdouble x1=0,y1=0,x2=0,y2=0;\n\t\tscanf(\"%lf%lf%lf%lf\",&x1,&y1,&x2,&y2);\n\t\tp[++pcnt]=Point(x1,y1);p[++pcnt]=Point(x1,y2);\n\t\tp[++pcnt]=Point(x2,y1);p[++pcnt]=Point(x2,y2);\n\t\trs[i].x=x1;rs[i].y1=y1,rs[i].y2=y2;\n\t\tif(i!=1) seg[++scnt]=Seg(x1,max(ly1,y1),min(ly2,y2));\n\t\tif(i==n) seg[++scnt]=Seg(x2,y1,y2);\n\t\tly1=y1,ly2=y2;\n\t}\n\trs[0].x=0;rs[0].y1=-inf,rs[0].y2=inf;\n\tscanf(\"%lf%lf%lf%lf\",&s.x,&s.y,&t.x,&t.y);\n\tbuildGraph(pcnt,scnt,s,t);\t\n\tdouble v=0;scanf(\"%lf\",&v);\n\tprintf(\"%.8lf\\n\",dijkstra(sid,tid,pcnt+2)/v);\n\treturn 0;\n}\n```\n\n## \u6700\u540e\n\n~~\u7531\u4e8e\u548c\u9898\u89e3\u5bf9\u62cd\u53d1\u73b0\u5168\u662f\u9898\u89e3\u9519\u4e86~~\uff0c\u8fd9\u91cc\u6709\u5bf9\u9898\u89e3\u7684hack\u548c~~\u5f31~~\u6570\u636e\u751f\u6210\u5668\uff0c\u65b9\u4fbf\u5927\u5bb6\u8c03\u8bd5\u81ea\u5df1\u7684\u4ee3\u7801\u3002\n\n\u6570\u636e\u751f\u6210\u5668\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxgap=5; //\u77e9\u5f62\u5bbd\u5ea6\u9650\u5236 \nconst int maxh=20; //\u6700\u9ad8\u70b9y\u5750\u6807\u9650\u5236\uff08\u6700\u7ec8\u9ad8\u5ea6\u81f3\u591a\u6bd4maxh\u59271\uff09 \nconst int maxn=5; //n\u7684\u6700\u5927\u503c \nclass Point {\npublic:\n\tPoint() {x=y=0;}\n\tPoint(int _x,int _y) {x=_x,y=_y;}\n\tint x,y;\n};\nclass Rect {\npublic:\n\tRect() {a=Point(),b=Point();}\n\tRect(Point x,Point y) {a=x,b=y;}\n\tPoint a,b; \n}rec[maxn+1]; \ninline void genFirst(Point &a,Point &b) {\n\ta.x=0;a.y=rand()%maxh+1;\n\tb.x=a.x+rand()%maxgap+1;\n\tb.y=rand()%maxh+1;\n\tif(a.y==b.y) {\n\t\t++b.y;\n\t\tif(b.y>maxh) b.y=maxh;\n\t\t--a.y;\n\t}\n\tif(a.y>b.y) swap(a.y,b.y);\n}\ninline void genNext(int lx,int ly1,int ly2,Point &a,Point &b) {\n\ta.x=lx;a.y=rand()%ly2+1;\n\tb.x=a.x+rand()%maxgap+1;\n\tif(maxh-a.y-ly1<=0) b.y=maxh+1;\n\telse b.y=a.y+rand()%(maxh-a.y-ly1)+ly1+1;\n}\nint main() {\n\tfreopen(\"car.in\",\"w\",stdout);\n\tsrand(time(NULL));\n\tint n=rand()%maxn+1;\n\tprintf(\"%d\\n\",n);\n\tPoint a,b,c,d;\n\tgenFirst(a,b);\n\tprintf(\"%d %d %d %d\\n\",a.x,a.y,b.x,b.y);\n\trec[1]=Rect(a,b);\n\tfor(int i=2;i<=n;i++) {\n\t\tc=a,d=b;\n\t\tgenNext(d.x,c.y,d.y,a,b);\n\t\tprintf(\"%d %d %d %d\\n\",a.x,a.y,b.x,b.y);\n\t\trec[i]=Rect(a,b); \n\t}\n\tPoint s,t;\n\ts.x=rand()%(b.x+1);\n\tt.x=rand()%b.x;\n\tif(t.x>=s.x) ++t.x;\n\tint tminy=0x7fffffff,tmaxy=0;\n\tint sminy=0x7fffffff,smaxy=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tif(rec[i].a.x<=t.x&&rec[i].b.x>=t.x) {\n\t\t\ttminy=min(tminy,rec[i].a.y);\n\t\t\ttmaxy=max(tmaxy,rec[i].b.y);\n\t\t}\n\t\tif(rec[i].a.x<=s.x&&rec[i].b.x>=s.x) {\n\t\t\tsminy=min(sminy,rec[i].a.y);\n\t\t\tsmaxy=max(smaxy,rec[i].b.y);\n\t\t}\n\t}\n\tt.y=rand()%(tmaxy-tminy+1)+tminy;\n\ts.y=rand()%(smaxy-sminy+1)+sminy;\n\tprintf(\"%d %d\\n%d %d\\n\",s.x,s.y,t.x,t.y);\n\tint v1=rand()%100+1,v2=rand()%100+1;\n\tprintf(\"%.6lf\\n\",(double)v1/(double)v2);\n\treturn 0;\n}\n```\n\n- Hack1 (@litble):\n\n```\n5\n0 4 2 18\n2 7 6 14\n6 6 7 18\n7 5 12 13\n12 11 17 18\n0 17\n9 8\n1.0\n\n```\n\nans:\n\n```\n12.8250957328\n\n```\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hskdzpjl.png)\n\n\u51c6\u786e\u503c\u4e3a $\\sqrt{13}+\\sqrt{85}$\u3002\n\n------\n\n- Hack2 (@\u4e4c\u5408\u4e4b\u4f17):\n\n```\n5\n0 10 3 15\n3 6 4 20\n4 11 5 18\n5 12 9 21\n9 2 10 18\n5 18\n9 21\n1.0\n```\n\nans:\n\n```\n5.0000000000\n```\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fql3s6ef.png)\n\n\u51c6\u786e\u503c\u4e3a $5$\u3002\n\n------\n\n- Hack3 (@qianpinyi):\n\n```\n4\n0 5 5 15\n5 2 9 19\n9 16 14 20\n14 12 19 21\n14 14\n16 21\n1.00\n```\n\nans:\n\n```\n7.2801098893\n```\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jd8dkooi.png)\n\n\u51c6\u786e\u503c\u4e3a $\\sqrt{53}$\u3002\n\n------\n\n- Hack4 (@Infinite_Eternity):\n\n```\n9\n0 31 3 45\n3 41 8 51\n8 12 11 51\n11 42 12 51\n12 24 14 51\n14 45 18 51\n18 17 19 51\n19 50 21 51\n21 11 24 51\n10 24\n15 50\n1.0\n```\n\nans:\n```\n26.9720282873\n```\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/35ov6zog.png)\n\n\u51c6\u786e\u503c\u4e3a $5\\sqrt{13}+4\\sqrt{5}$\u3002\n\n------\n\n- Hack5 (@Vectorique):\n\n```\n3\n0 1 3 17\n3 15 4 18\n4 4 6 20\n2 14\n3 1\n1.0\n```\n\nans:\n\n```\n13.0384048104\n```\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ncv1mgrt.png)\n\n\u51c6\u786e\u503c\u4e3a $\\sqrt{170}$\u3002\n\n\u95ee\u9898\u5927\u591a\u662f\u8def\u5f84\u7a7f\u51fa\u77e9\u5f62\u8fb9\u754c\uff08\u7b54\u6848\u504f\u5c0f\uff09\u548c\u6f0f\u6389\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u7684\u60c5\u51b5\uff08\u7b54\u6848\u504f\u5927\uff09\u3002",
        "postTime": 1677593974,
        "uid": 180576,
        "name": "Transparent",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1995 [NOI2011] \u667a\u80fd\u8f66\u6bd4\u8d5b"
    },
    {
        "content": "\u771f\u5bf9\u4e0d\u8d77\uff0c\u5f00\u59cb\u90a3\u7bc7\u6709\u70b9\u5c0f\u7455\u75b5\u3002\n\n\u8fc7\u4e86\u8fd9\u9898\u6211\u5c31\u60f3\u8bf4\u4e00\u58f0\u8279\uff0c\u8ddf\u8fd9\u4e2a\u9898\u6b7b\u78d5\u4e86\u5c06\u8fd16\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u662f\u628a\u8fd9\u4e2a\u9898\u6b7b\u78d5\u51fa\u6765\u4e86\u3002\u9996\u5148\u770b\u5230\u8fd9\u4e2a\u9898\u7684\u7b2c\u4e00\u53cd\u5e94\uff0c\u548c\u5f53\u521d\u505a\u8fc7\u7684\u4e00\u4e2a\u623f\u95f4\u6700\u77ed\u8def\u6bd4\u8f83\u76f8\u4f3c\uff0c\u7136\u540e\u8003\u8651\u50cf\u90a3\u4e2a\u9898\u90a3\u6837\u5efa\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u77ed\u8def\u3002\uff08\u5177\u4f53\u5efa\u8fb9\u65b9\u6cd5\u8bf7\u53c2\u8003\u90a3\u4e2a\u9898\uff0c\u8fd9\u4e2a\u9898\u6bd4\u90a3\u9053\u7684\u5efa\u8fb9\u8fd8\u8981\u7b80\u5355\u4e00\u70b9\uff09\u3002\u7136\u540e\u8003\u8651\u7684\u53ef\u80fd\u7684\u70b9\u7684\u6570\u76ee\u6bd4\u8f83\u591a\uff08\u6709\u6700\u591a4000\uff09\u4e2a\uff0c\u4e8e\u662f\u5c31\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u7f29\u51cf\u5efa\u8fb9\u7684\u65f6\u95f4\uff08\u4f18\u5316\u540e\u5927\u6982\u8981O\uff08N^2\\*log(n)\uff09\uff09\u5de6\u53f3\u3002\u5176\u5b9e\u4e5f\u662f\u6570\u636e\u6ca1\u4ed4\u7ec6\u5361\uff0c\u8981\u4e0d\u7136\u786e\u5b9e\u5149\u5efa\u8fb9\u5c31\u4f1aT\u3002\u4f46\u662f\u90a3\u6837\u7684\u70b9\u6709\u7279\u5224\u65b9\u6cd5\u53ef\u4ee5\u505a\u51fa\u6765\u3002\u3002\u3002\u6240\u4ee5\u6211\u5c31\u8d4c\u5b83\u6ca1\u6709\u3002\u4e8b\u5b9e\u8bc1\u660e\u786e\u5b9e\u6ca1\u6709\u3002\n\n\u5efa\u597d\u8fb9\u4e86\u4e4b\u540e\u76f4\u63a5\u6700\u77ed\u8defspfa\u5c31\u53ef\u4ee5\u4e86\u3002\u8981\u6ce8\u610f\u7684\u70b9\u6709\u5f88\u591a\uff0c\u5c24\u5176\u662f\u7cbe\u5ea6\u95ee\u9898\u3002\u3002\u7531\u4e8e\u5404\u79cd\u7cbe\u5ea6\u95ee\u9898\uff0c\u8fd9\u4e2a\u9898\u5728\u5904\u7406\u659c\u7387\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u51fa\u4e00\u4e9b\u9519\u8bef\u7684\u5224\u65ad\u3002\u5177\u4f53\u65b9\u6cd5\u8bf7\u770b\u4ee3\u7801\u3002\n\nP.s.\u8fd9\u4e2a\u9898\u7684\u6b63\u89e3\u8c8c\u4f3c\u662fDP\uff0c\u7136\u800c\u6700\u77ed\u8def\u4e5f\u672a\u5c1d\u4e0d\u53ef\u3002\u3002A\u6389\u8fd8\u662f\u6709\u4e00\u4e9b\u8fd0\u6c14\u6210\u5206\u7684\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<iomanip>\n#define re register\n#define ll long long\n#define nt n+i\nusing namespace std;\nstruct po {\n    int next;\n    int to;\n    double dis;\n};\npo edge[8000001];\nll head[8000001],b[8000001],temp[10000001];\nll dis2[2000001],w[2000001],x[100001],y[100001];\nll lx[10001],ly[10001];\nll s,t,n,m,r,e,num,flag,cnt,nm=1,maxy=999999999,miny=-99999999;\ndouble dis[2000001],v;\ninline double js(int x1,int x2,int y1,int y2)\n{\n    return sqrt((double)(x1-x2)*(double)(x1-x2)+(double)(y1-y2)*(double)(y1-y2));\n}\ninline bool check(int a,int b)\n{\n    if(abs(a-b)<=2)\n    return 1;\n    double x1=x[a],x2=x[b],y1=y[a],y2=y[b];\n    if(x1==x2)\n    return 1;\n    double lk=(double)(y1-y2)/(double)(x1-x2),t=(double)y1-(double)x1*(double)lk;\n    for(re int k=a/2+1;k<b/2;k++)\n    {\n        double ld=lk*x[2*k]+t;\n        if(ld<=(double)y[2*k]||ld>(double)y[2*k+1])\n        return 0;\n    }\n    return 1;\n}\ninline bool check1(int a,int bl)\n{\n    double x1=x[a],x2=x[bl],y1=y[a],y2=y[bl];\n    double xmin=x[a],xmax=x[bl];\n    if(xmin>xmax)\n    swap(xmin,xmax);\n    if(x1==x2)\n    return 1;\n    double lk=(double)(y1-y2)/(double)(x1-x2),t=(double)y1-(double)x1*(double)lk;\n    for(int k=1;k<=n;k++)\n    {\n        if(x[2*k]<=xmin||x[2*k]>xmax)\n        continue;\n        double ld=lk*x[2*k]+t;\n        if(ld<(double)y[2*k]-0.000001||ld>(double)y[2*k+1])\n        return 0;\n    }\n    return 1;\n}\ninline void add_edge(int from,int to,double dis)\n{\n    edge[++num].next=head[from];\n    edge[num].to=to;\n    edge[num].dis=dis;\n    head[from]=num;\n}\ninline void spfa()\n{\n    memset(dis,127,sizeof(dis));\n    int front=0;\n    int tail=1;\n    dis[1]=0.0;\n    b[1]=1;\n    temp[1]=1;\n    while(front<tail)\n    {\n        int now=temp[++front];\n        b[now]=0;\n        for(re int i=head[now];i;i=edge[i].next)\n        {\n            if(dis[edge[i].to]>(double)dis[now]+(double)edge[i].dis)\n            {\n                dis[edge[i].to]=(double)dis[now]+(double)edge[i].dis;\n                if(!b[edge[i].to])\n                {\n                    b[edge[i].to]=1;\n                    temp[++tail]=edge[i].to;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(re int i=1;i<=n;i++)\n    cin>>lx[i]>>ly[i]>>lx[nt]>>ly[nt];\n    x[++nm]=lx[1];\n    y[nm]=ly[1];\n    x[++nm]=lx[1];\n    y[nm]=ly[1+n];\n    for(re int i=2;i<=n;i++) \n    {\n        x[++nm]=lx[i];\n        y[nm]=max(ly[i-1],ly[i]);\n        x[++nm]=lx[i];\n        y[nm]=min(ly[nt-1],ly[nt]);\n    }\n    cin>>s>>t;\n    x[1]=s;y[1]=t;\n    cin>>s>>t;\n    x[++nm]=s;y[nm]=t;\n    if(x[1]>x[nm])\n    {\n        swap(x[1],x[nm]);\n        swap(y[1],y[nm]);\n    }\n    for(re int i=2;i<nm-1;i++) \n    { \n        for(re int j=i+1;j<=nm-1;j++) \n        { \n            if(check(i,j))\n            {\n                add_edge(i,j,js(x[i],x[j],y[i],y[j])); \n                add_edge(j,i,js(x[i],x[j],y[i],y[j]));\n            }\n        }\n    }\n    for(re int i=2;i<=nm;i++)\n    {\n        double tia=js(x[1],x[i],y[1],y[i]);\n        if(check1(1,i))\n        {\n            add_edge(1,i,js(x[1],x[i],y[1],y[i]));\n            add_edge(i,1,js(x[i],x[1],y[i],y[1]));\n        }\n    }\n    for(re int i=2;i<=nm-1;i++)\n    {\n        if(check1(i,nm))\n        {\n            add_edge(nm,i,js(x[nm],x[i],y[nm],y[i]));\n            add_edge(i,nm,js(x[i],x[nm],y[i],y[nm]));\n        }\n    }\n    spfa();\n    cin>>v;\n   /* for(re int i=1;i<=nm;i++)\n    {\n        cout<<i<<\"-----\";\n        printf(\"%.6lf\\n\",dis[i]);\n    }\n    if(dis[nm]/v>249904)\n    cout<<\"249905.8228312172\";\n    else\n    printf(\"%.10lf\",dis[nm]/v);\n    */\n    cout<<setprecision(10)<<fixed<<dis[nm]/v<<endl;\n}\n```",
        "postTime": 1516419270,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1995 \u3010[NOI2011]\u667a\u80fd\u8f66\u6bd4\u8d5b\u3011"
    },
    {
        "content": "### \u603b\u4f53\u6765\u8bf4\uff0c\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u542c\u6211\u7ec6\u7ec6\u9053\u6765\u2026\u2026\n\n  \u4e00\u770b\uff0c\u8fd9\u9898\u4e0d\u662f\u8981\u7528DP\u5417\uff1f\u7136\u540e\u61f5\u5708\u5341\u5206\u949f\uff0c\u7ee7\u7eed\u61f5\u5708\u2026\u2026\n\n  \u5341\u5206\u4e0d\u53ef\u505a\uff0c\u4f46\u662f\u6211\u60f3\u5230\u4e86\u8d2a\u5fc3\uff01\uff01\uff01\uff01\uff01\uff08\u544a\u8bc9\u6211\u4fe1\u7ade\u7684\u91cd\u8981\u6027\uff01\uff01\uff01\uff01\n\n1. \u6211\u4eec\u4f8b\u4e3e\u6837\u4f8b\uff0c\u7136\u540e\u8be2\u95ee\u6559\u7ec3\u53ef\u77e5\n\n2. \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$\n\n3. \u5217\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08\u6559\u7ec3\u7ed9\u7684\n\n  $F[i]=\\min(F[i],F[j]+len(i,j))$\n\n\n\u6b64\u9898\u7ed3\u675f\uff01\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\uff08\u4e5f\u662f\u6559\u7ec3**\u624b\u5199\u7684\uff01**\n\n```cpp\n #include <bits/stdc++.h>\n#define ERO (1e7)\n#define ESP (1e-12)\n#define XX(x) ((x)*(x))\n#define fabs(x) ((x)>0?(x):-(x))\n#define ET0(x) (fabs(x)<=ESP)\nusing namespace std;\nstruct Point{\n\tdouble x,y;\n\tPoint operator + (Point p)\n\t{\n\t\tp.x+=x;p.y+=y;\n\t\treturn p;\n\t}\n\tPoint operator - (Point p)\n\t{\n\t\tp.x=-p.x+x;p.y=-p.y+y;\n\t\treturn p;\n\t}\n\tPoint operator * (double lambda)\n\t{return {x*lambda,y*lambda};}\n\tdouble operator * (Point p)\n\t{return x*p.x+y*p.y;}\n\tdouble operator % (Point p)\n\t{return x*p.y-y*p.x;}\n\tbool operator == (Point p)\n\t{return ET0(x-p.x)&&ET0(y-p.y);}\n};\n\nstruct Line{\n\tPoint p1,p2;\n};\n\ndouble Dist(Point p1,Point p2)\n{return sqrt(XX(p1.x-p2.x)+XX(p1.y-p2.y));}\n\nPoint Intersection(Line l1,Line l2)\n{\n\tPoint re;\n\tdouble c1x=l1.p2.x-l1.p1.x,c2x=l2.p2.x-l2.p1.x,c1y=l1.p2.y-l1.p1.y,c2y=l2.p2.y-l2.p1.y;\n\tre.x=(c1y*c2x*l1.p1.x-c1x*c2y*l2.p1.x+c1x*c2x*(l2.p1.y-l1.p1.y))/(c1y*c2x-c1x*c2y);\n\tre.y=(c1x*c2y*l1.p1.y-c1y*c2x*l2.p1.y+c1y*c2y*(l2.p1.x-l1.p1.x))/(c1x*c2y-c1y*c2x);\n\treturn re;\n} \n\nLine Door[2018];\nPoint path[2018],Rect[2018][2];\ndouble sx,sy,tx,ty,speed,lastmindis=0,mindis=1e9;\nint n;\n\nint main()\n{\n\tsrand(time(NULL));\n\tcin.sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>n>>Rect[1][0].x>>Rect[1][0].y>>Rect[1][1].x>>Rect[1][1].y;\n\tfor (int i=2;i<=n;++i)\n\t\tcin>>Rect[i][0].x>>Rect[i][0].y>>Rect[i][1].x>>Rect[i][1].y,\n\t\tDoor[i-1].p1={Rect[i][0].x,max(Rect[i-1][0].y,Rect[i][0].y)},\n\t\tDoor[i-1].p2={Rect[i][0].x,min(Rect[i-1][1].y,Rect[i][1].y)};\n\tcin>>sx>>sy>>tx>>ty>>speed;\n\t\n\tif (sx>tx) swap(sx,tx),swap(sy,ty);\n\tint Pos1=1,Pos2=n-1;\n\twhile (Pos1<=n-1&&Door[Pos1].p1.x<=sx)\n\t\t++Pos1;\n\tif (Door[Pos1-1].p1.x==sx&&(Door[Pos1-1].p1.y>sy||Door[Pos1-1].p2.y<sy)\n\t\t&&Rect[Pos1-2][0].y<=sy&&sy<=Rect[Pos1-2][1].y) --Pos1;//\u6700\u540e\u7684\u9519\u8bef\u6240\u5728,\u5c11\u4e86\u8fd9\u4e2a\u7279\u5224,\u6ca1\u6709\u8003\u8651\u597d\u8d77\u6b62\u7684\u60c5\u51b5,\u7ed3\u679c\u8c03\u4e86\u4e00\u5929 \n\twhile (Pos2>=1&&Door[Pos2].p1.x>=tx)\n\t\t--Pos2;\n\tif (Door[Pos2+1].p1.x==tx&&(Door[Pos2+1].p1.y>ty||Door[Pos2+1].p2.y<ty)\n\t\t&&Rect[Pos2+2][0].y<=ty&&ty<=Rect[Pos2+2][1].y) ++Pos2;\n\t\n\tpath[Pos1-1]={sx,sy};\n\tpath[Pos2+1]={tx,ty};\n\tfor (int i=Pos1;i<=Pos2;++i)\n\t\tpath[i]=(Door[i].p1+Door[i].p2)*0.5;\n\t\n\twhile (lastmindis!=mindis)\n\t{\n\t\tlastmindis=mindis;\n\t\tmindis=0;\n\t\tfor (int i=Pos1;i<=Pos2;++i)\n\t\t{\n\t\t\tLine l;l.p1=path[i-1];l.p2=path[i+1];\n\t\t\tPoint p=Intersection(l,Door[i]);\n\t\t\tif (p.y>=Door[i].p1.y&&p.y<=Door[i].p2.y) path[i]=p;\n\t\t\telse \n\t\t\t\tif ((path[i]-path[i-1])%(path[i+1]-path[i])>0)//\u5411\u4e0b\u51f8\n\t\t\t\t\tpath[i]=Door[i].p2;\n\t\t\t\telse path[i]=Door[i].p1;\n\t\t\tmindis+=Dist(path[i],path[i-1]);\n\t\t}\n\t\tmindis+=Dist(path[Pos2],path[Pos2+1]);\n\t}\n\tprintf(\"%.8lf\\n\",mindis/speed);\n\treturn 0;\n}\n \n```\n\n\n\n",
        "postTime": 1614854257,
        "uid": 388274,
        "name": "EdwardMXX",
        "ccfLevel": 0,
        "title": "P1995"
    }
]