[
    {
        "content": "\u5148\u65e0\u826f\u5ba3\u4f20\u4e00\u4e0b\u535a\u5ba2 $wwwwww$  \n[\u6587\u7ae0\u5217\u8868 - \u6838\u878d\u5408\u7089\u5fc3 - \u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/koishikoishi/)\n\n------------\n\n## \u77e5\u8bc6\u70b9: \u6811\u5f62$DP$ , $DFS$\n\n- ### \u5206\u6790\u9898\u610f:  \n  \u6613\u8bc1 , \u968f\u610f\u9009\u62e9\u4e00\u4e2a\u4e0d\u4e3a\u53f6\u8282\u70b9\u7684\u70b9\u4e3a\u6839  \n  \u5bf9\u7b54\u6848\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd  \n\t\n    - \u8bc1\u660e:\u7531\u9898,  \n\t  \u7740\u8272\u65b9\u6848 \u5e94\u8be5\u4fdd\u8bc1 \u6839\u7ed3\u70b9\u5230\u6bcf\u4e2a\u53f6\u5b50\u7684\u7b80\u5355\u8def\u5f84\u4e0a  \n\t  \u90fd\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6709\u8272\u7ed3\u70b9\uff08\u54ea\u6015\u662f\u8fd9\u4e2a\u53f6\u5b50\u672c\u8eab\uff09  \n\t  \u53f6\u8282\u70b9\u7684 \u7740\u8272\u65b9\u6848  \n\t  \u53ea\u4e0e\u5176\u4e0a\u65b9\u7b2c\u4e00\u4e2a\u6709\u8272\u8282\u70b9\u6709\u5173    \n\t  \u7531\u6b64,\u5f97\u8bc1.  \n  \n  \u7531\u4e0a , \u5047\u8bbe\u968f\u610f\u9009\u62e9\u4e86\u4e00\u4e2a\u975e\u53f6\u8282\u70b9 , \u4f5c\u4e3a\u6839\u8282\u70b9:  \n  \u5e76\u4e14 , \u8bbe$f[i][j]$ ,\u4e3a \u7b2c $i$ \u4e2a\u70b9 , \u5c06\u5176\u67d3\u6210 $j$ \u989c\u8272,\u6240\u9700\u8981\u7684\u4ee3\u4ef7    \n  \n    - \u53ef\u4ee5\u5f97\u77e5,  \n\t  \u5982\u679c\u67d0\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u88ab\u67d3\u6210 $x$ \u8272 ,   \n\t  \u5e76\u4e14\u4ed6\u7684 \u7236\u4eb2\u8282\u70b9 \u5df2\u7ecf\u88ab\u67d3\u6210\u4e86 $x$ \u8272  \n\t  \u5219,\u4ed6\u4e0d\u9700\u8981\u88ab\u67d3\u8272 , \n      \u5c31\u53ef\u4ee5\u7ee7\u627f\u7236\u4eb2\u7684\u989c\u8272    \n\t  \n    - \u5219,\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u8282\u70b9,    \n\t  \u5176\u88ab\u67d3\u6210 $x$ \u8272\u7684\u4ee3\u4ef7,  \n      \n\t  1. \u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f \u5176\u7236\u4eb2\u88ab\u67d3\u6210 $x$ \u8272\u7684\u4ee3\u4ef7  \n      2. \u53ef\u4ee5\u4fdd\u6301\u7236\u4eb2\u4e3a \u975e $x$ \u8272,  \n         \u5e76\u5c06\u6b64\u8282\u70b9\u5355\u72ec\u67d3\u6210 $x$ \u8272  \n         \n  \u53ef\u5f97\u5230 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:   \n  \n  ```cpp\n  f[u][0]+=min(f[v][0]-1,f[v][1]); //u\u8868\u793av\u7684\u7236\u4eb2\u8282\u70b9   \n  f[u][1]+=min(f[v][1]-1,f[v][0]);\n  ```\n  \n  \u8868\u793a , \u5c06\u4e00\u4e2a\u8282\u70b9 \u67d3\u6210\u989c\u8272 $j$ \u7684\u4ee3\u4ef7 ,   \n  \u5373: \u4e3a\u5176\u6240\u6709 \u5b50\u8282\u70b9 \u67d3\u6210\u989c\u8272 $j$ \u4ee3\u4ef7\u7684 \u548c .\n\n------------\n\n- ### \u7b97\u6cd5\u5b9e\u73b0 :\n\n  \u7531\u6b64 , \u53ef\u4ee5\u8fdb\u884c \u6811\u5f62 $DP$ :\n\n  \n    - \u521d\u59cb\u5316:   \n      $f[i][1]=1\\ ,\\ f[i][0]=1$,  \n      \u4ee3\u8868\u5c06\u6bcf\u4e2a\u70b9 \uff0c \u67d3\u6210\u67d0\u79cd\u989c\u8272\u7684\u4ee3\u4ef7\u5747\u4e3a $1$  \n\t  \n      \u7279\u522b\u7684 , \u5bf9\u4e8e\u53f6\u8282\u70b9 , $f[i][\\ (!c[i])\\ ] = INF$  ,   $(\\ c[i]$ \u4e3a\u53f6\u8282\u70b9\u5e94\u8be5\u53d8\u6210\u7684\u989c\u8272 $)$ ,     \n      \u8868\u793a\u53f6\u8282\u70b9 $i$ \u4e0d\u5e94\u88ab\u67d3\u6210\u5176\u4ed6\u989c\u8272,  \n      \u6240\u4ee5\u8bbe\u4e3a\u6781\u5927\u4ee3\u4ef7 , \u4fdd\u8bc1\u4e0d\u4f1a\u88ab\u7528\u6765\u66f4\u65b0\u5176\u4ed6\u8282\u70b9    \n      \n  \u4e4b\u540e , \u968f\u610f\u9009\u62e9\u4e00\u4e2a\u975e\u53f6\u8282\u70b9 , \u4f5c\u4e3a\u6811\u6839 , \u5f00\u59cb\u8fdb\u884c $DFS$  \n    \n    1. \u5f53\u5230\u8fbe\u53f6\u8282\u70b9\u65f6 ,   \n       \u76f4\u63a5 $return ;$ (\u53f6\u8282\u70b9\u7684\u4ee3\u4ef7\u4e0d\u9700\u8981\u88ab\u66f4\u65b0)\n    2. \u5426\u5219 , \u5faa\u73af\u679a\u4e3e\u6240\u6709 **\u975e\u7236\u4eb2\u8282\u70b9** ,   \n       \u5148\u66f4\u65b0\u5b83\u4eec\u7684\u503c\n    3. \u5f85\u9012\u5f52\u56de\u5230 \u67d0\u8282\u70b9\u65f6 ,   \n       \u7528\u5b83\u5df2\u7ecf\u88ab\u66f4\u65b0\u7684\u5b50\u8282\u70b9 ,   \n       \u6765\u66f4\u65b0\u5b83\u7684\u503c\n  \n  $DFS$ \u5b8c\u6210\u540e , \u5f97\u5230\u4e86\u6240\u6709\u7684 $f[][]$ \u7684\u503c .   \n  \u7531\u4e8e\u6839\u8282\u70b9\u6709 $0,1$ \u4e24\u79cd\u989c\u8272\u7684\u60c5\u51b5  \n  \u6240\u4ee5\u5728\u6839\u8282\u70b9\u7684\u4e24\u503c $f[root][0]$ \u4e0e $f[root][1]$ \u4e2d , \u53d6\u4e00\u4e2a\u6700\u5c0f\u503c  \n  \u5373\u6240\u6c42\u7684\u7b54\u6848.\n  \n------------\n\n\u4e0a\u4ee3\u7801   ~~(\u6ca1\u5fc5\u8981\u90a3\u4e48\u591a\u6ce8\u91ca\u4e86\u5427)~~ :\n\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<ctype.h>\n#define int long long\n#define min(a,b) a<b?a:b\n//======================================================\nconst int MARX = 1e4+10;\nconst int INF = 2147483647;//\u6781\u5927\u503c \nstruct edge \n{\n\tint u,v,ne;\n}e[2*MARX];\nint m,n,c[MARX];//\u8f93\u5165\u6570\u636e \nint root,num,head[MARX]; //\u5efa\u6811 \nint f[MARX][2]; // f[i][j]\u8868\u793a,\u7b2ci\u4e2a\u70b9,\u5c06\u5176\u67d3\u6210j\u989c\u8272,\u6240\u9700\u8981\u7684\u4ee3\u4ef7\n//======================================================\ninline int read()\n{\n\tint fl=1,w=0;char ch=getchar();\n\twhile(!isdigit(ch) && ch!='-') ch=getchar();\n\tif(ch=='-') fl=-1;\n\twhile(isdigit(ch)){w=w*10+ch-'0',ch=getchar();}\n\treturn fl*w;\n}\ninline void add(int u,int v)\n{\n\te[++num].u=u,e[num].v=v;\n\te[num].ne=head[u],head[u]=num;\n}\nvoid dfs(int u,int fa)\n{\n\tif(u<=n) return ;//\u53f6\u8282\u70b9,\u76f4\u63a5return ; \n\tfor(int i=head[u],v=e[i].v;i;i=e[i].ne,v=e[i].v)//\u679a\u4e3e\u6240\u6709\u975e\u7236\u8282\u70b9 \n\t  if(v!=fa)\n\t  {\n\t    dfs(v,u);\n\t\tf[u][0]+=min(f[v][0]-1,f[v][1]);//\u7528\u5b50\u8282\u70b9,\u66f4\u65b0\u5f53\u524d\u70b9\u7684\u5404\u503c \n\t\tf[u][1]+=min(f[v][1]-1,f[v][0]);\n\t  }\n}\n//======================================================\nsigned main()\n{\n\tm=read(),n=read();\n\troot=n+1;//\u968f\u610f\u9009\u62e9\u4e00\u4e2a\u4e0d\u4e3a\u53f6\u8282\u70b9\u7684\u8282\u70b9 \n\tfor(int i=1;i<=n;i++) c[i]=read();\n\tfor(int i=1;i<=m-1;i++)\n\t{\n\t  int u=read(),v=read();\n\t  add(u,v),add(v,u);\n\t}\n\tfor(int i=1;i<=m;i++)//\u521d\u59cb\u5316 \n\t{\n\t  f[i][0]=f[i][1]=1;\n\t  if(i<=n) f[i][(!c[i])]=INF;//\u53f6\u8282\u70b9\u7279\u6b8a\u521d\u59cb\u5316 \n\t}\n\tdfs(root,root);\n\tprintf(\"%lld\",min(f[root][0],f[root][1]));//\u53d6\u8f83\u5c0f\u7684\u503c \n}\n```\n",
        "postTime": 1563180388,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5361\u4e86\u5f88\u957f\u65f6\u95f4\u5427\uff0c\u4f5c\u4e3a\u4e00\u9053\u6811\u72b6dp\u7ec3\u624b\u9898\uff0c\u6211\u89c9\u5f97\u662f\u9700\u8981\u5199\u4e00\u7bc7\u9898\u89e3\u52a0\u5f3a\u7406\u89e3\u3002\uff08\u4e2a\u4eba\u7406\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u6307\u51fa\uff09\n\n1.\u9898\u610f\uff1a\u9898\u76ee\u6240\u7ed9\u51fa\u7684\u53f6\u5b50\u8282\u70b9\u5230\u6839\uff08\u81ea\u5df1\u5b9a\uff09\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u8981\u6709**\u81f3\u5c11**\u4e00\u4e2a\u67d3\u8272\u8282\u70b9\uff0c\u5e76\u4e14\u5fc5\u987b\u6ee1\u8db3\u89c4\u5b9a\u7684\u6700\u540e\u4e00\u4e2a\uff08\u5373\u8def\u5f84\u4e0a\u79bb\u81ea\u5df1**\u6700\u8fd1**\uff09\u67d3\u8272\u8282\u70b9\u7684\u989c\u8272\u4e3ac[u];\n\n2.\u770b\u5230\u8fd9\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u5230\u6811\u72b6dp\u7684\u57fa\u672c\u601d\u8def\uff0c**f[u][]\u8868\u793a\u4ee5u\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u6ee1\u8db3\u6761\u4ef6\u6240\u80fd\u83b7\u5f97\u7684\uff08\u5c40\u90e8\uff09\u6700\u4f18\u89e3**\uff0c\u540e\u4e00\u7ef4\u6839\u636e\u5177\u4f53\u9898\u76ee\u800c\u5b9a\uff08\u4e00\u822c\u662f\u8be5\u8282\u70b9\u7684\u72b6\u6001\uff09\uff0c\u7136\u540e\u5728\u6df1\u641c\u4e2d\u5229\u7528\u513f\u5b50\u7684\u72b6\u6001\u66f4\u65b0\u81ea\u5df1\u7684\u503c\uff0c\u904d\u5386\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u76f4\u63a5\u521d\u59cb\u5316\n\n3.\u56de\u770b\u8fd9\u9898\uff0c\u65e0\u975e\u8282\u70b9\u7684\u72b6\u6001\u5c31\u4e09\u79cd\uff1a\n\n\u4e00\uff1a\u9ed1\u8272 \u4e8c\uff1a\u767d\u8272 \u4e09\uff1a\u65e0\u8272\uff08**\u4e0d\u8981\u4ee5\u4e3a\u767d\u8272\u5c31\u662f\u65e0\u8272**\uff09\n\n\u90a3\u4e48\u5f97\u51fadp\u6570\u7ec4f[u][3]\uff0c\u8868\u793a\u5c06\u8282\u70b9u~~\u65ad\u5251\u91cd\u94f8~~\u4e4b\u540e\uff0c\u4ee5u\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u6240\u8981\u67d3\u8272\u8282\u70b9\u6570\u7684\u6700\u5c0f\u503c\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u662f\u4ec0\u4e48\u5462\uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u7b54\u6848\u6700\u5c0f\uff0c\u5c31\u5e94\u8be5\u79c9\u627f\u8282\u70b9\u80fd\u4e0d\u67d3\u5c31\u4e0d\u67d3\u7684\u539f\u5219\uff0c\u90a3\u4e48\u5982\u679c\u9012\u5f52\u8fd4\u56de\u65f6\u513f\u5b50\u5df2\u7ecf\u67d3\u8272\uff0c\u7238\u7238\u5c31\u4e0d\u5fc5\u67d3\u8272\uff08\u4e0d\u61c2\u56de\u770b1\u9ed1\u4f53\u5b57\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u7d2f\u52a0\u6bcf\u79cd\u60c5\u51b5\u513f\u5b50\u8282\u70b9\u6240\u9700\u8981\u7684\uff08\u6700\u5c0f\uff09\u67d3\u8272\u6570\uff08\u663e\u7136\uff1f\uff09\uff0c\u6700\u540e\u5c31\u53ef\u4ee5~~\u8f7b\u677e~~\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n```cpp\ngo\u4e3a\u5176\u513f\u5b50\nf[x][0]+=min(f[go][0]-1,min(f[go][1],f[go][2]));\nf[x][1]+=min(f[go][0],min(f[go][1]-1,f[go][2])); \nf[x][2]+=min(f[go][0],min(f[go][1],f[go][2]));\n```\n**\u6ce8\u610f**\uff1a\u6b64\u9898\u91cd\u70b9\u5176\u5b9e\u5e76\u4e0d\u5728\u4e8e\uff08\u4e2a\u4eba\u89c1\u89e3\uff09\u65b9\u7a0b\uff0c\u800c\u662f\u8fb9\u754c\u6761\u4ef6\uff01\uff01\n\n\u6df1\u641c\u7684\u65f6\u5019\uff0c\u5f53\u904d\u5386\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u5b83\u7684dp\u6570\u7ec4\u503c\u5176\u5b9e\u65e9\u5df2\u53ef\u4ee5\u786e\u5b9a\uff0c\u62ff\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\n```cpp\nif(c[x])\n{f[x][1]=1;  f[x][0]=INF; f[x][2]=1;}\n```\nc[x]=1\u8fdb\u5165\uff0c\u5373\u9700\u8981\u767d\u8272\uff0cf[x][0]\u4e3aINF??,\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679cx\u8282\u70b9\u67d3\u6210\u9ed1\u8272\uff0c\u90a3\u4e48\u5c31\u4e0d\u6ee1\u8db3\u9898\u610f\uff0c\u6b64\u72b6\u6001\u662f\u77db\u76fe\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u65e0\u89c6\u5b83\uff0c\u600e\u4e48\u529e\uff0c\u5c06\u5176\u7f6e\u4e3a\u65e0\u7a77\u5927\u5c31\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e2a\u503c\u4e86\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n------------\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#define N 10001\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n,m,root;\nint u,v,w;\nint head[N],f[N][3],c[5022],indegree[N]; //\u72b6\u6001\u542b\u4e49\uff1a\u4ee5i\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u53ef\u6ee1\u8db3\u6761\u4ef6\u9700\u8981\u67d3\u8272\u8282\u70b9\u6570\u7684\u6700\u5c0f\u503c \n//\u6613\u77e5\u5982\u679c\u7238\u7238\u67d3\u8272\uff0c\u513f\u5b50\u53ef\u4ee5\u4e0d\u67d3 \nstruct edge\n{\n\tint to,next;\n}e[N<<1];\nvoid dfs(int x,int fa)\n{\n\tif(x<=n)  //\u53f6\u5b50\u8282\u70b9\u521d\u59cb\u5316 \n\t{\n\t\tif(c[x])\n\t\t{f[x][1]=1;\tf[x][0]=INF; f[x][2]=1;}\n\t\telse\n\t\t{f[x][0]=1;\tf[x][1]=INF; f[x][2]=1;}\n\t}\n\telse {f[x][0]=1; f[x][1]=1;}//\u666e\u901a\u8282\u70b9\u521d\u59cb\u5316 \n\tfor(int i=head[x];i;i=e[i].next)\n\t{\n\t\tint go=e[i].to;\n\t\tif(go!=fa)\n\t\t{\n\t\t\tdfs(go,x);\n\t\t\tf[x][0]+=min(f[go][0]-1,min(f[go][1],f[go][2]));//\u52a0\u4e0a\u513f\u5b50\u8282\u70b9\u6240\u9700\u7684\u67d3\u8272\u8282\u70b9\u6570 \n\t\t\tf[x][1]+=min(f[go][0],min(f[go][1]-1,f[go][2])); \n\t\t\tf[x][2]+=min(f[go][0],min(f[go][1],f[go][2])); \n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++)\n\tcin>>c[i];\n\tfor(int i=1;i<=m-1;i++)\n\t{\n\t\tcin>>u>>v;\n\t\tindegree[u]++; indegree[v]++;\n\t\tif(!root)\n\t\t{\n\t\t\tif(indegree[u]>1) root=u;\n\t\t\telse if(indegree[v]>1) root=v;\n\t\t}\n\t\te[i]=(edge) {v,head[u]}; head[u]=i;\n\t\te[i+m-1]=(edge) {u,head[v]}; head[v]=i+m-1;\n\t}\n\tdfs(root,0); \n\tcout<<min(f[root][0],min(f[root][1],f[root][2]));\n\treturn 0;\n}\n```",
        "postTime": 1534763323,
        "uid": 58376,
        "name": "\u592a\u8fc7\u5e74\u8f7bya",
        "ccfLevel": 0,
        "title": "[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272"
    },
    {
        "content": "\u6362\u6839\u5199\u6cd5\u3002\n\n\u5982\u679c\u56fa\u5b9a\u6839\u7684\u4f4d\u7f6e\uff0c\u8fd9\u9898\u5c31\u662f\u57fa\u7840\u7684\u6811\u5f62$dp$\u3002\n\n\u8fd9\u4e2a\u6811\u5f62$dp$\u7684\u8f6c\u79fb\u5f88\u7b80\u5355\uff0c\u7c7b\u4f3c\u8d2a\u5fc3\uff0c\u4e0b\u9762\u7684\u9ed1\u8272\u70b9\u6570\u548c\u767d\u8272\u70b9\u6570\u8c01\u591a\u6211\u9009\u8c01\u3002\u4e00\u6837\u591a\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u6807\u8bb0\u4e00\u4e0b\uff0c\u5411\u4e0a\u5408\u5e76\u7684\u65f6\u5019\u8fdb\u884c\u7279\u5224\u3002\n\n\u4f46\u662f\u6839\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u6839\u4f1a\u4f7f\u590d\u6742\u5ea6\u8fbe\u5230$O(10^8)$\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u6765\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u8fd9\u9898\u53ef\u4ee5\u89e3\u51b3\uff0c\u4f46\u662f\u6211\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u597d\u50cf\u6ca1\u6709\u4eba\u662f\u6362\u6839\u7684\u505a\u6cd5\u3002\n\n\u6211\u5c31\u8bb2\u8bb2\u6362\u6839\u600e\u4e48\u505a\u5427\u3002\n\n\u6211\u4eec\u7ed9\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u56db\u4e2a\u503c\uff1a$b,w,v,ok$\u3002\u5206\u522b\u8868\u793a\u5b83\u4e0b\u4e00\u5c42\u8282\u70b9\u4e2d\u9ed1\u8272\u70b9\u7684\u4e2a\u6570\uff0c\u767d\u8272\u70b9\u7684\u4e2a\u6570\uff0c\u5b83\u5b50\u6811\u4e00\u5171\u67d3\u8272\u7684\u70b9\u6570\uff0c\u5b83\u7684\u989c\u8272\u3002\n\n\u5f53$ok==0$\uff0c\u767d\u8272\uff0c$ok==1$\u65f6\uff0c\u9ed1\u8272\uff0c$ok==2$\u65f6\uff0c\u7279\u6b8a\u6807\u8bb0\u3002\n\n\u6211\u4eec\u6362\u6839\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6211\u4eec\u5373\u5c06\u8f6c\u79fb\u8fc7\u53bb\u7684\u70b9$j$\uff0c\u4ece\u6211\u4eec\u5f53\u524d\u7684\u70b9$i$\u7684\u7b54\u6848\u91cc\u53bb\u6389\u3002\u5f53\u7136\u4e86\uff0c$i$\u5728\u8fd9\u65f6\u8fd8\u662f\u6839\uff0c\u7136\u540e$i$\u91cd\u65b0\u8ba1\u7b97\u4e00\u4e0b\u81ea\u5df1\u7684\u989c\u8272\uff0c\u7136\u540e\u5f53\u505a\u662f$j$\u7684\u5b50\u6811\u76f4\u63a5\u66f4\u65b0\u4e0a\u53bb\u5c31\u5f97\u5230$j$\u4e3a\u6839\u7684\u7b54\u6848\u4e86\uff01\n\n\u6362\u6839\u7684\u7ec6\u8282\u9700\u8981\u81ea\u5df1\u60f3\uff0c\u5176\u4ed6\u8fd8\u6709\u5c31\u662f\u5f53\u9ed1\u8272\u767d\u8272\u76f8\u7b49\u65f6\u7279\u6b8a\u6807\u8bb0\u540e\u8be5\u5982\u4f55\u5904\u7406\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m;\n\nstruct ha\n{\n    int b,w,v,ok;\n}t[100005];\n\nvector<int> q[100005];\n\nint dfs(int x,int father)\n{\n    int o=0;\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==father)continue;\n        dfs(nx,x);\n        if(t[nx].ok==1)t[x].b++;\n        else if(t[nx].ok==0)t[x].w++;\n        else {o++,t[x].b++,t[x].w++;}\n        t[x].v+=t[nx].v;\n    }\n    if(t[x].b>t[x].w)\n    {\n        t[x].w-=o;\n        t[x].v-=t[x].b;\n        t[x].v+=1;\n        t[x].ok=1;\n    }\n    else if(t[x].b<t[x].w)\n    {\n        t[x].b-=o;\n        t[x].v-=t[x].w;\n        t[x].v+=1;\n        t[x].ok=0;\n    }\n    else\n    {\n        t[x].b-=o;\n        t[x].v-=t[x].w;\n        t[x].v+=1;\n        t[x].ok=2;\n    }\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==father)continue;\n        if(t[nx].ok==2)\n            t[nx].ok=t[x].ok;\n    }\n}\n\nint ans=1e9;\n\nvoid change(int x,int nx)\n{\n    if(t[x].ok)\n        t[x].v=t[x].v+t[x].b-1;\n    else\n        t[x].v=t[x].v+t[x].w-1;\n    if(t[nx].ok==1)\n        t[x].b--;\n    else if(t[nx].ok==0)\n        t[x].w--;\n    t[x].v-=t[nx].v;\n    if(t[x].b>t[x].w)\n    {\n        t[x].ok=1;\n        t[x].v-=t[x].b;\n        t[x].v+=1;\n    }\n    else if(t[x].b<t[x].w)\n    {\n        t[x].ok=0;\n        t[x].v-=t[x].w;\n        t[x].v+=1;\n    }\n    else\n    {\n        t[x].ok=2;\n        t[x].v-=t[x].w;\n        t[x].v+=1;\n    }\n}\n\nint dd(int x,int father)\n{\n    ans=min(ans,t[x].v);\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==father)continue;\n        change(x,nx);\n        dfs(nx,x);\n        change(nx,x);\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&t[i].ok);\n        if(t[i].ok==1)\n            t[i].b=1;\n        else\n            t[i].w=1;\n        t[i].v++;\n    }\n    for(int i=1;i<m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        q[x].push_back(y);\n        q[y].push_back(x);\n    }\n    dfs(n+1,n+1);\n    dd(n+1,n+1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1548407609,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u672c\u9898\u9898\u610f\uff1a\n\n1.\u9898\u76ee\u6240\u7ed9\u51fa\u7684\u53f6\u5b50\u8282\u70b9\u5230\u6839\uff08\u81ea\u5df1\u5b9a\uff09\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u8981\u6709\u81f3\u5c11\u4e00\u4e2a\u67d3\u8272\u8282\u70b9\uff0c\n\n2.\u5e76\u4e14\u5fc5\u987b\u6ee1\u8db3\u89c4\u5b9a\u7684\u6700\u540e\u4e00\u4e2a\uff08\u5373\u8def\u5f84\u4e0a\u79bb\u81ea\u5df1\u6700\u8fd1\uff09\u67d3\u8272\u8282\u70b9\u7684\u989c\u8272\u4e3ac[u];\n\n\n\n\u8fd9\u662f\u672c\u9898\u7684\u8981\u6c42\uff1b\n\n\u90a3\u4e48\u7531\u4e8e\u672c\u9898\u7684\u201c**\u6839**\u201d\u6ca1\u6709\u786e\u5b9a\uff0c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u601d\u8003\u201c**\u6839**\u201d\u7684\u786e\u5b9a\u95ee\u9898\uff0c\uff1b\n\n\u9996\u5148\u6211\u4eec\u5148\u653e\u7ed3\u8bba\uff1a**\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u7b54\u6848\u90fd\u662f\u76f8\u540c\u7684\u3002**\n\n\u8ff7\u4e4b\u8bc1\u660e\uff1a\u5047\u5982\u539f\u6765\u4ee5x\u4e3a\u6839\uff0c\u4e14y\u4e0ex\u76f8\u90bb\uff0c\u90a3\u4e48x\u4e0ey\u7684\u989c\u8272\u4e0d\u53ef\u80fd\u76f8\u540c\uff08\u5fc5\u7136\uff09\u3002\u65e2\u7136\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u5c06\u6839\u4ecex\u53d8\u6210y\u5bf9\u7b54\u6848\u663e\u7136\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\n\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u53d8\u53d8\u5f97\u7b80\u5355\u4e86\u8d77\u6765\u2026\u2026\n\n\u6211\u4eec\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u7136\u540e\u6811\u5f62DP\u3002\n\n\u90a3\u4e48dp\u9700\u8981\u4e00\u4e2a\u4f18\u79c0\u7684\u72b6\u6001\uff1a\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6709\uff1a\n\n\t\t1.\u65e0\u8272\uff1b\t\n        \t2.\u767d\u8272\uff1b\n            3.\u9ed1\u8272\uff1b\n            \n\u90a3\u4e48\u5c31\u4f1a\u6709\u4e09\u79cd\u9009\u62e9\uff0c\u4f46\u662f\u7531\u4e8e\u65e0\u8272\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\uff0c\u53ea\u6709\u53f6\u8282\u70b9\u7684\u7740\u8272\u65b9\u6848\n\u53ea\u4e0e\u5176\u4e0a\u65b9\u7b2c\u4e00\u4e2a\u6709\u8272\u8282\u70b9\u6709\u5173\uff0c\uff0c\u6240\u4ee5\u65e0\u8272\u7684\u72b6\u6001\u5341\u5206\u6ca1\u7528\uff08\u8fd9\u4e00\u70b9\u4f60\u4eec\u53ef\u4ee5\u5728\u5b8c\u5168\u7406\u89e3\u65f6\u4f53\u4f1a\u5230\uff0c\u5bf9\u4e8e\u5728\u770b\u8fd9\u7bc7\u6587\u7ae0\u7684dalao\u4eec\u80af\u5b9a\u6ca1\u4efb\u4f55\u95ee\u9898\u7684\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8bbe\u4e24\u79cd\u72b6\u6001\u5373\u53ef\uff1a\n\n\t\t\u7528f[x][0/1]\u8868\u793ax\u7684\u5b50\u6811\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u60f3\u8981\u5f97\u5230\u4e00\u4e2a\u767d\u8272/\u9ed1\u8272\u7684\u7956\u5148\u7684\u6700\u5c0f\u4ee3\u4ef7\uff08\u5373\u6240\u6c42\u7b54\u6848\uff1a\u7740\u8272\u65b9\u6848\uff0c**\u4f7f\u5f97\u7740\u8272\u7ed3\u70b9\u7684\u4e2a\u6570\u5c3d\u91cf\u5c11**\uff09\n        \n\u90a3\u4e48\u4f18\u79c0\u7684\u8f6c\u79fb\u4e5f\u968f\u4e4b\u51fa\u4e16\u5566\uff1a\n\n\u5982\u679c\u67d0\u4e00\u4e2a\u8282\u70b9\u9700\u8981\u88ab\u67d3\u6210 x \u8272 ,\n\u5e76\u4e14\u4ed6\u7684 \u7236\u4eb2\u8282\u70b9 \u5df2\u7ecf\u88ab\u67d3\u6210\u4e86 x \u8272\n\u5219,\u4ed6\u4e0d\u9700\u8981\u88ab\u67d3\u8272 , \u5c31\u53ef\u4ee5\u7ee7\u627f\u7236\u4eb2\u7684\u989c\u8272\n\n\u5219,\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u8282\u70b9,\n\u5176\u88ab\u67d3\u6210 x \u8272\u7684\u4ee3\u4ef7,\n\n\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f \u5176\u7236\u4eb2\u88ab\u67d3\u6210 x \u8272\u7684\u4ee3\u4ef7\n\u53ef\u4ee5\u4fdd\u6301\u7236\u4eb2\u4e3a \u975e x \u8272,\n\u5e76\u5c06\u6b64\u8282\u70b9\u5355\u72ec\u67d3\u6210 x \u8272\n\u53ef\u5f97\u5230 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:\n```cpp\nf[root][0]+=min(f[a[i].to][0]-1,f[a[i].to][1]);\n            f[root][1]+=min(f[a[i].to][1]-1,f[a[i].to][0]);\n```\n\n\u5927\u6982\u7ec6\u8282\u95ee\u9898\u5927\u5bb6\u9700\u8981\u6ce8\u91cd\uff0c\uff0c\u5373\u53ef\u7406\u89e3\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=0x7fffffff;\nconst int mm=10010;\nstruct p{\n\tint nxt,to;\n}a[mm<<1];\nint head[mm],cnt=0,f[mm][2],n,m,w[5000];\n\ninline int read(){\n\tint x=0,f=1;\n\tchar ch;\n\tch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+(ch-'0');\n\t\tch=getchar(); \n\t}\n\treturn x*f;\n}\n\ninline void add(int x,int y){\n\ta[++cnt].nxt=head[x];\n\ta[cnt].to=y;\n\thead[x]=cnt;\n}\n\ninline void dp(int root,int fa){\n\tf[root][0]=f[root][1]=1;\n    if (root<=m){\n    \tif (w[root]) \n\t\t\tf[root][0]=inf;\n    \telse \n\t\t\tf[root][1]=inf;\n\t}\n    for (int i=head[root];i;i=a[i].nxt)\n    {\n        if (a[i].to!=fa)\n        {\n            dp(a[i].to,root);\n            f[root][0]+=min(f[a[i].to][0]-1,f[a[i].to][1]);\n            f[root][1]+=min(f[a[i].to][1]-1,f[a[i].to][0]);\n        }\n\n    }\n}\n\nint main(){\n\tn=read();\n\tm=read();\t\n\tfor(int i=1;i<=m;i++){\n\t\tw[i]=read();\n\t}\n\tint x,y;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdp(m+1,-1);\n\tcout<<min(f[m+1][0],f[m+1][1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1570162038,
        "uid": 211665,
        "name": "ccsc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e$1$\u7684\u8282\u70b9\u4e3a\u6839\u7684\u6700\u4f18\u7684\u7b54\u6848\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u5177\u4f53\u8bc1\u660e\u8fd9\u91cc\u4e0d\u52a0\u8d58\u8ff0\u3002\n\n\u6211\u4eec\u4ed4\u7ec6\u7814\u7a76\uff0c\u4ed6\u53ea\u8981\u6c42\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u540e\u4e00\u4e2a\u6709\u8272\u8282\u70b9\u7684\u989c\u8272\u3002\u6211\u4eec\u5bf9\u7b2c$x$\u53f7\u8282\u70b9\u67d3\u8272\uff0c\u610f\u5473\u7740\u6211\u4eec\u628a\u6240\u6709\u5b83\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u6700\u8fd1\u7684\u4e00\u4e2a\u6709\u8272\u8282\u70b9\u7684\u989c\u8272\u5c31\u53d1\u751f\u4e86\u6539\u53d8\u3002\u663e\u7136\uff0c\u513f\u5b50\u8d8a\u591a\u7684\u8282\u70b9\u6027\u4ef7\u6bd4\u8d8a\u9ad8\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5b9a\u4e49$dp_{i,0/1}$\u4e3a\u7b2c$i$\u53f7\u8282\u70b9\u67d3\u6210\u7b2c$j$\u79cd\u989c\u8272\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u4e48\u5bf9\u4e8e$j$\u53f7\u8282\u70b9\u662f\u4ed6\u7684\u513f\u5b50\uff0c\u53ef\u4ee5\u628a\u4ed6\u7684\u513f\u5b50\u67d3\u6210\u5f02\u8272\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u513f\u5b50\u7684\u989c\u8272\u4e0e\u4ed6\u4e00\u81f4\uff0c\u6709\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n$dp_{i,0}$ += $min(dp_{j,0} - 1 , dp_{j,1})$\n\n$dp_{i,1}$ += $min(dp_{j,1} - 1 , dp_{j,0})$\n\n~~~~\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1e4 + 5;\nint head[MAXN] , to[MAXN << 1] , nxt[MAXN << 1] , cnt , n , m;\nint c[MAXN] , dp[MAXN][2];\nvoid add(int x , int y){nxt[++cnt] = head[x];head[x] = cnt;to[cnt] = y;}\nvoid read(int &x) {\n\tint f = 1;x = 0;char s = getchar();\n\twhile(s < '0' || s > '9') {if(s == '-') f = -1;s = getchar();}\n\twhile(s >= '0' && s <= '9') {x = (x << 3) + (x << 1) + s - '0';s = getchar();}\n\tx *= f;\n}\nvoid dfs(int x , int fa) {\n\tif(x <= n) {\n\t\tdp[x][c[x]] = 1; // \u67d3\u4e0a\u7684\u82b1\u8d39\n\t\tdp[x][!c[x]] = 1e9; // \u4e0d\u80fd\u67d3\u8fd9\u79cd\u989c\u8272\uff0c\u8bbe\u4e3a\u65e0\u7a77\u5927\n\t\treturn;\n\t}\n\tdp[x][0] = dp[x][1] = 1;\n\tfor (int i = head[x]; i; i = nxt[i]) {\n\t\tif(to[i] == fa) continue;\n\t\tdfs(to[i] , x);\n\t\tdp[x][0] += min(dp[to[i]][0] - 1 , dp[to[i]][1]);\n\t\tdp[x][1] += min(dp[to[i]][0] , dp[to[i]][1] - 1);\n\t\t//\u8f6c\u79fb\uff0c\u5982\u4e0a\n    }\n}\nint main() {\n\tread(m);read(n);\n\tfor (int i = 1; i <= n; ++i) read(c[i]);\n\tfor (int i = 1; i < m; ++i) {\n\t\tint x , y;\n\t\tread(x);read(y);\n\t\tadd(x , y);\n\t\tadd(y , x);\n\t}\n\tdfs(m , m);//\u59d1\u4e14\u9009m\u4e3a\u6839\u8282\u70b9\n\tprintf(\"%d\" , min(dp[m][0] , dp[m][1]));\n\treturn 0;\n}\n\n```",
        "postTime": 1581926018,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\n#### \u5927\u5e08\u6cd5\uff08DFS\uff09+\u8d2a\u5fc3\n\n\u8fd9\u9053\u9898\u5b8c\u5168\u4e0d\u9700\u8981\u6811\u72b6DP \u554a\n\n\u679a\u4e3e\u6bcf\u4e2a\u5ea6>=2\u7684\u8282\u70b9\uff0c\u7136\u540edfs\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff1a\n\n\u5982\u679c\u662f\u53f6\u8282\u70b9\uff0c\u4ed6\u8d21\u732e\u7684\u989c\u8272\u5c31\u662f  **\u201c\u4ece\u6839\u7ed3\u70b9\u4eceU\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u6700\u540e\u4e00\u4e2a\u6709\u8272\u7ed3\u70b9\u7684\u989c\u8272\u201d** \n\n\u5982\u679c\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u6211\u4eec\u8bb0\u5f55  _\u4ed6\u7684\u5b69\u5b50\u7684\u8d21\u732e\u7684\u989c\u8272_ \uff0c\u7136\u540e\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684\u989c\u8272\u5c31\u662f  **\u4ed6\u5b69\u5b50\u652f\u6301\u7684\u591a\u7684\u989c\u8272** \uff0c\u7136\u540e\u8ba9  **\u652f\u6301\u5c11\u989c\u8272\u7684\u5b69\u5b50**  \u81ea\u5df1\u89e3\u51b3\u95ee\u9898\uff08\u5c31\u662f\u628a\u989c\u8272\u5b89\u6392\u5728\u81ea\u5df1\u8eab\u4e0a\uff0c~~\u4e0d\u9760\u7238\u7238~~\uff09 sum+=\u5c11\u989c\u8272\u7684\u652f\u6301\u4eba\u6570\n\n\u4f46\u662f\u5982\u679c\u652f\u6301\u7684\u4e00\u6837\u591a\uff0c\u8fd9\u4e2a\u8282\u70b9\u663e\u7136\u80fd ~~\u63b0\u6210\u4e24\u534a~~ \u6ee1\u8db3\u4efb\u610f\u4e00\u65b9\uff0c \u6240\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7684\u989c\u8272\u53ef\u4ee5\u4efb\u610f\u9009\uff08\u6211\u4eec\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u8282\u70b9\u8d21\u732e\u7684\u989c\u8272\u4e3a-1\uff0c\u7ffb\u6210\u4e0d\u662f0\u548c1\u5c31\u884c\u4e86\u554a\uff09\uff0c\u53e6\u4e00\u534a\u4eba\u81ea\u5df1\u89e3\u51b3 sum+=\u4e00\u534a\u4eba\n\n\u4e3a\u4ec0\u4e48\u8d21\u732e\u989c\u8272\u4e3a-1\u53ef\u4ee5\u5462\uff1f\u56e0\u4e3a\u8fd9\u6837\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u4e2d\u5c31\u53ef\u4ee5**\u65e0\u89c6**\u8fd9\u4e2a\u8282\u70b9\u7684\u8d21\u732e\uff0c\u7ffb\u6210\u4ec0\u4e48\u989c\u8272\u90fd\u884c\u3002\u3002\u3002\n\n\u800c\u4e14\uff01\u9898\u76ee\u8981\u6c42\uff1a\u9009\u62e9\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e1\u7684\u7ed3\u70b9\u4f5c\u4e3a\u6839\u3002\u6240\u4ee5\n**\u4e0d\u4f1a\u51fa\u73b0**\n\u6839\u4e0a\u53ea\u6709-1\u8d21\u732e\uff0c\u6700\u540e\u8fde\u4efb\u610f\u989c\u8272\u90fd\u6ca1\u6709\u7684\u60c5\u51b5\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(N^2)\n\n\u4e0a\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 10001\n#define M 20001\nint m,n;\nint du[N];\nint color[N],color2[N];//color2\u5c31\u662f\u8d21\u732e\u7684\u989c\u8272\nint Head[N],cnt,Next[M],V[M],ans=10000;\nvoid add(int u,int v)\n{\n\tV[cnt]=v;\n\tNext[cnt]=Head[u];\n\tHead[u]=cnt++;\n}\nint sum;\nvoid dfs(int u,int father)\n{\n\tif(u<=n)\n\t{\n\t\tcolor2[u]=color[u];\n\t\treturn ;\n\t}\n\tint q1=0,q2=0;\n\tfor(int i=Head[u];i!=-1;i=Next[i])\n\t{\n\t\tif(V[i]!=father)\n\t\t{\n\t\t\tdfs(V[i],u);\n\t\t\tif(color2[V[i]]==1)\n\t\t\t{\n\t\t\t\tq1++;\n\t\t\t}\n\t\t\tif(color2[V[i]]==0)\n\t\t\t{\n\t\t\t\tq2++;\n\t\t\t}\n\t\t}\n\t}\n\tif(q1>q2)\n\t{\n\t\tcolor2[u]=1;\n\t\tsum+=q2;\n\t}\n\telse if(q1<q2)\n\t{\n\t\tcolor2[u]=0;\n\t\tsum+=q1;\n\t}\n\telse\n\t{\n\t\tcolor2[u]=-1;//\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6539\u6210\u5176\u4ed6\u4e0d\u662f0\u62161\u7684\u6570\n\t\tsum+=q1;//\n\t}\n\treturn ;\n}\nint main()\n{\n\tmemset(Head,-1,sizeof(Head));\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&color[i]);\n\t}\n\tint u,v;\n\tfor(int i=1;i<=m-1;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tdu[u]++;\n\t\tdu[v]++;\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(int i=n+1;i<=m;i++)\n\t{\n\t\tif(du[i]<=1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tsum=0;\n\t\tdfs(i,0);\n\t\tsum++;\n\t\tans=min(ans,sum);//\u7edf\u8ba1\u6700\u5c0f\u503c\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n",
        "postTime": 1574515569,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "## [CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\n\n\u9898\u89e3\u5747\u6709\u5173\u4e8e\u52a8\u6001\u89c4\u5212\uff0c\u6b64\u9898\u89e3\u63d0\u4f9b\u4e00\u4e2a\u8d2a\u5fc3\u89e3\u3002\n\n------------\n\n\u9012\u5f52\uff0c\u5148\u67d3\u8272\u6700\u5e95\u5c42\uff0c\u7136\u540e\u67d3\u6839\u8282\u70b9(\u8fd9\u91cc\u5c31\u7528n+1\u4f5c\u4e3a\u6839\u8282\u70b9)\u3002\n\n![Pic1](http://chuantu.xyz/t6/702/1563889029x992245926.png)\n\n\u7136\u540e\u6211\u4eec\u7edf\u8ba1\u513f\u5b50\u8282\u70b9\u4eec\u7684\u989c\u8272\uff0c\u627e\u5230\u989c\u8272\u8f83\u591a\u7684\u4e00\u79cd\u5e76\u5c06\u6839\u67d3\u6210\u6b64\u989c\u8272\uff0c**\u5e76\u5220\u9664\u4e0e\u6839\u7684\u989c\u8272\u76f8\u540c\u7684\u513f\u5b50\u8282\u70b9\u7684\u989c\u8272**\u3002\u753b\u56fe\u6765\u8868\u793a\u5c31\u662f\uff1a\n\n![piccccc](http://chuantu.xyz/t6/702/1563889131x992245926.png)\n\n\u4f46\u6709\u9ebb\u70e6\u7684\u60c5\u51b5\uff1a\u5982\u679c\u513f\u5b50\u8282\u70b9\u7684\u4e24\u79cd\u4e0d\u540c\u989c\u8272\u7684\u6570\u91cf\u548c\u76f8\u7b49\u600e\u4e48\u529e\uff1f\uff08\u5982\u4e0b\u56fe\uff09\n\n![Pic22](http://chuantu.xyz/t6/702/1563889071x977013264.png)\n\n\u5728\u8fd9\u4e2a\u5b50\u7ed3\u6784\u91cc\uff0c\u67d3\u9ed1\u6216\u67d3\u767d\u90fd\u662f\u4e00\u6837\u4f18\u79c0\u7684\uff0c\u4f46\u5bf9\u4e8e\u4e0a\u4e00\u5c42\u6765\u8bf4\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u7559\u7ed9\u8d2a\u5fc3\u4e00\u4e2a\u72b9\u8c6b\u7684\u673a\u4f1a\uff0c\u6211\u4eec\u5148\u4e0d\u67d3\u8272\u3002\u7136\u540e\u7edf\u8ba1\u4e0b\u4e00\u4e2a\u5b50\u7ed3\u6784\u7684\u989c\u8272\uff0c**\u8ba9\u8fd9\u4e9b\u6ca1\u6709\u67d3\u8272\u7684\u8282\u70b9\u52a0\u5165\u67d3\u8272\u6570\u591a\u7684\u8282\u70b9**\u3002\n\n![Pic123](http://chuantu.xyz/t6/702/1563889885x2073530527.png)\n\n\u67d3\u4e86\u8272\u540e\uff0c\u6211\u4eec\u518d\u6267\u884c**\u5220\u9664\u4e0e\u6839\u7684\u989c\u8272\u76f8\u540c\u7684\u513f\u5b50\u8282\u70b9\u7684\u989c\u8272**\u8fd9\u4e00\u64cd\u4f5c\u3002\u6b63\u786e\u6027\u7528\u5fae\u6270\u6cd5\u8bc1\u660e\u3002\n\nCode\n------------\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int size = 20001;\nint h[size],cnt,n,m,c[size];\nstruct Edge{int nex,to;}a[size];\nvoid AddEdge(int x,int y){a[++cnt].to=y;a[cnt].nex=h[x];h[x]=cnt;}\nvoid dfs(int x,int prt)\n{\n\tif(x<=n)return;\n\tint Black=0,White=0;\n\tfor(int i=h[x];i;i=a[i].nex)\n\t{\n\t\tint y=a[i].to;\n\t\tif(y==prt)continue;\n\t\tdfs(y,x);if(c[y]==1)Black++;\n\t\tif(c[y]==2)White++;\n\t}\n\tif(Black>White)c[x]=1;\n\telse if(Black<White)c[x]=2;\n\telse c[x]=-1;\n}\nvoid DFS(int x,int prt)\n{\n\tif(x<=n)return;\n\tfor(int i=h[x];i;i=a[i].nex)\n\t{\n\t\tint y=a[i].to;\n\t\tif(y==prt)continue;\n\t\tDFS(y,x);\n\t\tif(c[x]==c[y]||c[y]==-1||(c[x]==-1&&c[y]==1))c[y]=0;//c[y]==1\u53ea\u662f\u4e3a\u4e86\u7edf\u8ba1\u5b50\u6811\u4e00\u79cd\u989c\u8272\u7684\u6570\u91cf\uff0c\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&c[i]),c[i]++;\n\tfor(int i=1;i<m;i++)\n\t{\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tAddEdge(x,y);\n\t\tAddEdge(y,x);\n\t}\n\tdfs(n+1,0);DFS(n+1,0);\n\tint Ans=0;for(int i=1;i<=m;i++)if(c[i])Ans++;\n\tprintf(\"%d\",Ans);return 0;\n}\n```\n",
        "postTime": 1563890091,
        "uid": 118316,
        "name": "angrychow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "# \u6811\u5f62DP\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u9897\u8282\u70b9\u6570\u4e3a$m$\uff0c\u6709$n$\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7ed9\u70b9\u4e00\u4e2a\u989c\u8272$color$\uff0c\u8981\u6c42\u8be5\u53f6\u5b50\u7ed3\u70b9\u672c\u8eab\u6216\u5176\u7956\u5148\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u989c\u8272\u4e3a$color$\uff0c\u73b0\u5728\uff0c\u4f60\u8981\u7ed9\u8fd9\u68f5\u6811\u67d3\u8272\uff0c\u6c42\u6700\u5c11\u7ed9\u591a\u5c11\u4e2a\u70b9\u67d3\u8272\u80fd\u8fbe\u5230\u8981\u6c42\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u5ea6\u6570\u4e0d\u4e3a1\u7684\u70b9\u5f53\u6839\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6709\u9898\u76ee\u6613\u77e5\uff1a\n\n- \u53ef\u4ee5\u4ee5\u4efb\u4f55\u4e00\u4e2a**\u975e\u53f6\u5b50\u8282\u70b9**\u4f5c\u4e3a\u6811\u7684\u6839\n\n- \u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\u4e0a\u90fd**\u81f3\u5c11\u5305\u542b\u4e00\u4e2a**\u989c\u8272\u4e3a$c[i]$\u7684\u70b9\u3002\n\n## \u6027\u8d28\uff1a\u6839\u8282\u70b9\u7684\u9009\u62e9\u4e0e\u7b54\u6848\u65e0\u5173\n\n\u4f60\u4f1a\u53d1\u73b0\u7528\u9664\u53f6\u5b50\u8282\u70b9\u610f\u5916\u7684\u4efb\u610f\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u4ed6\u7684\u7b54\u6848\u59cb\u7ec8\u662f\u4e00\u6837\u7684\uff0c\u63a5\u4e0b\u6765\u7ed9\u51fa\u6211\u7684\u7406\u89e3\u65b9\u6cd5\u5427\u3002\n\n\u5c06\u6839\u4ece$x$\u6362\u5230$y$\uff0c\u5bf9\u4e8e\u4ed6\u4eec\u5404\u81ea\u7684\u5b50\u6811\u800c\u8a00\u662f\u5e76\u65e0\u5f71\u54cd\u7684\uff0c\u56e0\u4e3a$x$\u7684\u5b50\u6811\u4e2d\u65e0\u975e\u5c31\u662f\u4e24\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u8be5\u5b50\u6811\u4e2d\u8282\u70b9**\u989c\u8272**\u4e0e$x$**\u4e0d\u540c**\uff0c\u8981\u4e48\u8be5\u5b50\u6811\u4e2d\u8282\u70b9**\u65e0\u8272**\uff0c\u6240\u4ee5\uff0c\u5f53\u4f60\u6362\u6389\u6839\u7684\u65f6\u5019\uff0c\u56e0\u4e3a**\u672c\u8eab\u5373\u6709\u533a\u522b**\uff0c\u662f**\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd**\u7684\u3002\n\n## DP\u8fc7\u7a0b\n\n\n### \u72b6\u6001\n\n\u8bbe$f[i][0]$\u4e3a\u628a\u70b9$i$\u67d3\u6210\u9ed1\u8272\u7684\u6700\u4f18\u7b54\u6848\n\n\u5219$f[i][1]$\u4e3a\u628a\u70b9$i$\u67d3\u6210\u767d\u8272\u7684\u6700\u4f18\u7b54\u6848\n\n### \u5982\u4f55\u66f4\u65b0\uff1f\n\n$f[u][0]+=min(f[v][0]-1,f[v][1])$\n\n\u5373\u5982\u679c\u5c06\u70b9$u$\u67d3\u6210\u9ed1\u8272\uff0c\u5219\u4ed6\u7684\u5b50\u6811\u5c06**\u4e0d\u518d\u9700\u8981\u67d3\u6210\u9ed1\u8272**\uff0c\u6545\u67d3\u8272\u6570$-1$\uff0c\u90a3\u4e48\u540c\u7406\u6613\u5f97\n\n$f[u][1]+=min(f[v][1]-1,f[v][1])$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u80fd\u591f\u5f00\u59cb\u7edf\u8ba1\u7b54\u6848\uff0c\u800c\u6700\u540e\n\n$ans=min(f[m][0],f[m][1])$\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=5e3+50,Edge=5e4+10;\nint n,m;\nint c[N];\nint f[Edge][2]; \nint tot,u[Edge],v[Edge],nex[Edge],first[Edge];\ninline void Add(int x,int y)\n{\n\tnex[++tot]=first[x];\n\tfirst[x]=tot;\n\tu[tot]=x; v[tot]=y;\n}\nbool vis[Edge];\ninline void DFS(int u,int last)\n{\n\tvis[u]=1;\n\tif(u<=n) return;\n\tfor(int i=first[u];i;i=nex[i]){\n\t\tint to=v[i];\n\t\tif(vis[to]) continue;\n\t\tDFS(to,u);\n\t\tf[u][0]+=min(f[to][0]-1,f[to][1]);\n\t\tf[u][1]+=min(f[to][1]-1,f[to][0]); \n\t}\n}\nint main()\n{\n\tmemset(f,127,sizeof(f));\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&c[i]),f[i][c[i]]=1;\n\tint x,y;\n\tfor(int i=1;i<m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tAdd(x,y); Add(y,x);\n\t\tif(i>n) f[i][0]=f[i][1]=1; \n\t}\n\tf[m][0]=f[m][1]=1;\n\tDFS(m,0);\n\tprintf(\"%d\\n\",min(f[m][0],f[m][1]));\n\treturn 0;\n}\n```\n",
        "postTime": 1606828184,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u8be6\u89c1\u6b64http://blog.csdn.net/bill\\_yang\\_2016/article/details/54604122\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\ninline const int Get_Int() {\n    int num=0,bj=1;\n    char x=getchar();\n    while(x<'0'||x>'9') {\n        if(x=='-')bj=-1;\n        x=getchar();\n    }\n    while(x>='0'&&x<='9') {\n        num=num*10+x-'0';\n        x=getchar();\n    }\n    return num*bj;\n}\nint cnt=0,Head[50005],n,Leaf,f[50005][3];\nstruct Edge {\n    int to,next;\n} Edge[50005];\nvoid AddEdge(int from,int to) {\n    cnt++;\n    Edge[cnt].to=to;\n    Edge[cnt].next=Head[from];\n    Head[from]=cnt;\n}\nvoid TreeDp(int Now,int father) {\n    if(Now<=Leaf)return;\n    for(int i=Head[Now]; i; i=Edge[i].next) {\n        int Next=Edge[i].to;\n        if(Next==father)continue;\n        TreeDp(Next,Now);\n        f[Now][0]+=min(f[Next][0]-1,min(f[Next][1],f[Next][2]));\n        f[Now][1]+=min(f[Next][0],min(f[Next][1]-1,f[Next][2]));\n        f[Now][2]+=min(f[Next][0],min(f[Next][1],f[Next][2]));\n    }\n    f[Now][0]++;\n    f[Now][1]++;\n}\nint main() {\n    n=Get_Int();\n    Leaf=Get_Int();\n    for(int i=1; i<=Leaf; i++) {\n        int color=Get_Int();\n        f[i][color]=1;\n        f[i][(color+1)%2]=f[i][2]=0x7fffffff/2;\n    }\n    for(int i=1; i<n; i++) {\n        int x=Get_Int(),y=Get_Int();\n        AddEdge(x,y);\n        AddEdge(y,x);\n    }\n    TreeDp(Leaf+1,-1);\n    printf(\"%d\\n\",min(f[Leaf+1][0],min(f[Leaf+1][1],f[Leaf+1][2])));\n    return 0;\n}\n```",
        "postTime": 1487081197,
        "uid": 31877,
        "name": "BillYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u6211\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6709\u70b9\u4e0d\u540c\uff0c\u9898\u89e3\u91cc\u5927\u591a\u6570\u4eba\u7528$f[i][j]$\u8868\u793a$i$\u8282\u70b9\u67d3\u989c\u8272$j$,\u6211\u7684\u65b9\u7a0b$f[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$j$\u989c\u8272\u7684\u53f6\u8282\u70b9\u8fd8\u6ca1\u6709\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u5982\u679c\u6240\u6709\u53f6\u8282\u70b9\u88ab\u8986\u76d6\u5219$j=2$\n\n\n\u8f6c\u79fb\n\n$$f[x][0]=\\sum_i min\\{f[son_i][2],f[son_i][0]\\}$$\n\n$$f[x][1]=\\sum_i min\\{f[son_i][2],f[son_i][1]\\}$$\n\n$$f[x][2]=min\\{\\sum_i f[son_i][2],f[x][0]+1,f[x][1]+1\\}$$\n\n\n\u6307\u5b9a\u4efb\u610f\u975e\u53f6\u8282\u70b9\u8dd1\u4e00\u6b21$DP$\uff0c$f[root][2]$\u5373\u4e3a\u7b54\u6848\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,c[10005],h[10005],tot;\nstruct edge{\n\tint to,nxt;\n}e[20005];\nvoid add(int x,int y){\n\te[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;\n}\nint f[10005][4];\nvoid dfs(int x,int fa){\n\tif(x<=n)return;\n\tf[x][0]=f[x][1]=f[x][2]=0;\n\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].to^fa){\n\t\tdfs(e[i].to,x);\n\t\tint val=min(f[e[i].to][1],f[e[i].to][2])+1;\n\t\tf[x][0]+=f[e[i].to][0];\n\t\tf[x][1]+=min(f[e[i].to][0],f[e[i].to][1]);\n\t\tf[x][2]+=min(f[e[i].to][0],f[e[i].to][2]);\n\t}\n\tf[x][0]=min(f[x][0],min(f[x][1],f[x][2])+1);\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&c[i]),c[i]++;\n\tfor(int i=1;i<m;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tint ans=0x3f3f3f3f;\n\tmemset(f,0x3f,sizeof(f));\n\tfor(int i=1;i<=n;i++)f[i][c[i]]=0,f[i][0]=1;\n\tint r=n+1;dfs(r,0);\n\tprintf(\"%d\\n\",f[r][0]);\n\treturn 0;\n}\n```",
        "postTime": 1573698681,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "$\\ \\ \\ \\ \\ \\ \\ $[luogu](https://www.luogu.com.cn/problem/P3155)\n\n$\\ \\ \\ \\ \\ \\ \\ $\u771f\u7684\u6ca1\u60f3\u5230 T3 \u662f\u6700\u7b80\u5355\u7684\u3002\u3002\u3002\n\n$\\ \\ \\ \\ \\ \\ \\ $\u9996\u5148\u731c\u4e2a\u7ed3\u8bba\uff1a\u600e\u4e48\u9009\u6839\u7b54\u6848\u90fd\u662f\u4e00\u6837\u7684\u3002\uff08\u6bd5\u7adf\u8fd9\u662f\u731c\u7ed3\u8bba\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff09\u3002\n\n$\\ \\ \\ \\ \\ \\ \\ $\u7136\u540e\u518d\u4e00\u4e2a\u7ed3\u8bba\uff1a\u6211\u4eec\u628a\u53f6\u5b50\u67d3\u8272\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u6839\u67d3\u8272\u3002\u56e0\u4e3a\u53f6\u5b50\u67d3\u8272\u53ea\u8ddf\u4e0a\u9762\u7684\u989c\u8272\u6709\u5173\u3002\n\n$\\ \\ \\ \\ \\ \\ \\ $\u7136\u540e\u5c31\u5b8c\u4e86\uff1f\uff1f\u5b9a\u4e49 $dp_{i,0 \\ or \\ 1}$ \u4e3a $i$ \u4e3a\u6839\uff0c$i$ \u67d3\u6210\u9ed1\u8272\u8fd8\u662f\u767d\u8272\u3002\u5219\u6709 dp \u65b9\u7a0b\uff1a\n\n$$\\begin{cases}\ndp_{now,0}=\\sum_{\\texttt{now\u7684\u5b69\u5b50\u4eecto}}\\min \\{dp_{to,1},dp_{to,0}-1\\} \\\\\\\\\ndp_{now,1}=\\sum_{\\texttt{now\u7684\u5b69\u5b50\u4eecto}}\\min \\{dp_{to,0},dp_{to,1}-1\\}\n\\end{cases}$$\n\n$\\ \\ \\ \\ \\ \\ \\ $\u7136\u540e\u771f\u7684\u5c31\u5b8c\u4e86\u3002\u6ce8\u610f\u6392\u65a5\u6389\u548c\u53f6\u5b50\u989c\u8272\u4e0d\u540c\u7684\u65b9\u6848\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nvector<int> G[100005];\nbool color[100005];\nint dp[100005][2],m,n;\n/*\ndp[root][0/1]:root \u4e3a\u6839 \u67d3\u6210\u4ec0\u4e48 \u6700\u5c11\u591a\u5c11\u4e2a\u3002\n*/\nvoid dfs(int now,int pre)\n{\n\tif(now<=n)\n\t{\n\t\tdp[now][color[now]]=1;\n\t\tdp[now][!color[now]]=2147483647;\n\t\treturn ;\n\t}\n\tdp[now][1]=dp[now][0]=1;\n\tfor(unsigned int i=0;i<G[now].size();++i)\n\t{\n\t\tint to=G[now][i];\n\t\tif(to==pre)\tcontinue;\n\t\tdfs(to,now);\n\t\tdp[now][0]+=min(dp[to][1],dp[to][0]-1);\n\t\tdp[now][1]+=min(dp[to][1]-1,dp[to][0]);\n\t}\n}\nint main(){\n\tfreopen(\"leave.in\",\"r\",stdin);\n\tfreopen(\"leave.out\",\"w\",stdout);\n\tscanf(\"%d %d\",&m,&n);\n\tfor(int i=1,tmp;i<=n;++i)\tscanf(\"%d\",&tmp),color[i]=bool(tmp);\n\tfor(int i=1;i<m;++i)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d %d\",&u,&v);\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tdfs(n+1,-1);\n\tprintf(\"%d\",min(dp[n+1][0],dp[n+1][1]));\n\treturn 0;\n}\n```",
        "postTime": 1579936510,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    },
    {
        "content": "\u9898\u76ee\u8bf4\u7684\u5f88\u6e05\u695a\uff0c\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9u\u7684\u6700\u540e\u4e00\u4e2a\u6709\u8272\u8282\u70b9\u662fc[u]\uff1b\u65e0\u540e\u6548\u6027\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\n\n\u6211\u4eec\u7528dp[x][j]\u8868\u793a\u4ee5x\u67d3\u8272\u4e3aj\uff0cx\u4e3a\u6839\u7684\u5b50\u6811\u5728\u5408\u6cd5\u60c5\u51b5\u4e0b\u81f3\u5c11\u8981\u67d3\u591a\u5c11\u4e2a\u70b9\n\n\u90a3\u4e48\u5728x\u7684\u76f4\u63a5\u513f\u5b50\u4e2d\u4e0ex\u9009\u62e9\u989c\u8272\u76f8\u540c\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u653e\u5f03\uff0c\u4e0ex\u9009\u62e9\u989c\u8272\u4e0d\u540c\u7684\u8282\u70b9\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a\n\n\u8bf4\u5f97\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u53ef\u4ee5\u770b\u770b\u4ee3\u7801\uff0c\u518d\u770b\u770b\u53ef\u80fd\u5c31\u7406\u89e3\u4e86\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=100000+10;\nconst int inf=1e9;\nstruct nod\n{\n    int next,to;\n}e[maxn];\nint head[maxn],du[maxn],c[maxn],dp[maxn][3];\nint m,n,k=1,ans=0x7f7f7f7f;\nvoid adde(int u,int v)\n{\n    e[++k].next=head[u];\n    e[k].to=v;head[u]=k;\n}\nvoid dfs(int x,int f)\n{\n    if(du[x]==1 && f)\n    {\n        dp[x][c[x]]=1;dp[x][c[x]^1]=inf;\n        return;\n    }\n    dp[x][1]=dp[x][0]=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        if(e[i].to==f) continue;\n        dfs(e[i].to,x);\n        dp[x][1]+=min(dp[e[i].to][1]-1,dp[e[i].to][0]);\n        dp[x][0]+=min(dp[e[i].to][1],dp[e[i].to][0]-1);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&c[i]);\n    }\n    for(int i=1;i<m;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);adde(u,v);adde(v,u);du[u]++;du[v]++;\n    }\n    dfs(n+1,0);ans=min(dp[n+1][0],dp[n+1][1]);\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1504949572,
        "uid": 25365,
        "name": "zhouenji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3155 \u3010[CQOI2009]\u53f6\u5b50\u7684\u67d3\u8272\u3011"
    }
]