[
    {
        "content": "\n### $\\text{\u73af\u987e\u6574\u4e2a\u9898\u89e3\u533a,\u90fd\u6ca1\u6709\u6211\u5199\u7684\u7b80\u5355}$ $QwQ$\n[\u8fdb\u6211\u7684\u535a\u5ba2\u6d4f\u89c8](https://www.luogu.org/blog/LZSY01-xzy-blog/solution-p1836)\n\n\u6211\u7684\u60f3\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n$\\text{\u5206\u522b\u8003\u8651\u4e2a\u4f4d\uff0c\u5341\u4f4d\uff0c\u767e\u4f4d\uff0c\u5343\u4f4d\uff0c\u4e07\u4f4d...}$\n\n\u53ef\u4ee5\u53d1\u73b0$sum($\u7b2c$i$\u4f4d$)$ $=10^i*(\\sum_{i=1}^{9}*(n/10^i)+$ $\\sum_{i=1}^{n\\mod10^i/10^{i-1}-1})+(n\\mod10^i/10^{i-1})*(n\\mod10^i)+1$\n### \u6545\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\nusing namespace std;\nlong long n;\nint sum[10]={0,1,3,6,10,15,21,28,36,45};\n\nint get(int n)\n{\n\tif(n<0)return 0;\n\treturn n;\n}\n\nlong long get_ans(long long n)\n{\n\tlong long res=0,a=1,b=0;\t\n\twhile(n>0)\n\t{\n\t\tres=res+a*(45*(n/10)+sum[get(n%10-1)])+(n%10)*(b+1);\n\t\tb=b+(n%10)*a;a*=10;\n\t\tn/=10;\n\t}\n\treturn res;\t\n}\n\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tprintf(\"%lld\\n\",get_ans(n));\n\treturn 0;\n}\n```\n\u6211\u7684\u4ee3\u7801\u91cc\u5bf9$\\sum_{i=1}^{k}$\u6253\u4e86\u8868\n\n~~\u89c9\u5f97\u4e0d\u9519\u7684\u8bdd\u70b9\u4e2a\u8d5e\u6b27~~",
        "postTime": 1548468226,
        "uid": 141348,
        "name": "\u26a1LZSY01_XZY\u26a1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "## ~~\u697c\u4e0b\u6253\u8868\u5927\u6cd5\u597d\u2026\u2026~~\n\n\u6211\u91c7\u7528\u975e\u6253\u8868\u505a\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n\u7684\u4f4d\u6570)\n\n\u7a7a\u95f4\u590d\u6742\u5ea6:O(1)\n\n\u53ef\u4ee5\u8bf4~~\u5feb\u7684\u4e00\u6279~~\u3002\n\n[AC\u8bb0\u5f55](https://www.luogu.org/record/show?rid=15115449)\n## **\u8fdb\u5165\u6b63\u9898**\n\u5047\u5982n=999999,\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a:\n\n1.\u50cf\u9ad8\u65af\u4e00\u6837\u5c06\u9996\u9879\uff0c\u5c3e\u9879\u76f8\u52a0\u3002(\u5047\u8bbe\u7b2c\u4e00\u9879\u662f0)\n\n2.\u56e0\u4e3a\u4e0d\u8fdb\u4f4d\uff0c\u6240\u4ee5\u548c\u539f\u6765\u7684\u548c\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u548c\u4e3a54(6\u4e2a9)*500000(\u9879\u6570)\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4efb\u610f\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u6210$a*10^n$+\u2026\u2026+x*10+y\u7684\u5f62\u5f0f\u3002\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u5f0f\u5b50\u5206\u522b\u8ba1\u7b97:\n\n\u5f97$a*10^n$\u7684\u548c\u662f$n*9*a*10^n/2+a*(a-1)*10^n$\n\n\u8bb0\u4f4f\uff0c\u8fd8\u6709\u5269\u4e0b\u7684\u4e00\u4e9b\u4e1c\u897f\uff0c\u6211\u4eec\u8fd8\u8981\u52a0\u4e0a(\u5269\u4e0b\u7684$*(a+1)$)\n\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\n---\n***\n```cpp\n#include<cstdio>\nlong long int a,b,t,x=1;\nint main()\n{\n\tscanf(\"%lld\",&a);\n\tfor(int i=a;i>0;i/=10)x*=10,t++;//\u8ba1\u7b97\u4f4d\u6570\u548c10^n\n\twhile(a)\n\t{ b+=t*9*(a/x)*x/2+(a/x)*(a/x-1)/2*x+a/x*(a%x+1);\n    \t//\u52a0\u5230\u4e00\u8d77\n\t  a%=x;t--;x/=10;}//\u4fee\u6539\n\tprintf(\"%lld\",b);\n\treturn 0;\n}\n```\n***",
        "postTime": 1546234546,
        "uid": 118040,
        "name": "\u4ec0\u4e48\u53eb\u4e2d\u4e8c\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1836)\n\n\u4ece\u9898\u76ee\u4e2d\u4e0d\u96be\u770b\u51fa\uff1a\n\n\u5176\u5b9e\u5c31\u662f\u6c42$1-n$\u7684$[1,2,3,4,5,6,7,8,9]$\u7684\u4e2a\u6570\uff0c\u6700\u540e\u518d\u4e58\u672c\u8eab\u76f8\u52a0\u5c31\u597d\u3002\n\n~~\u5176\u5b9e\u6211\u662f\u5148\u505a\u76842602\uff08\u7d2b\uff09~~\n\n\u5982\u4f55\u6c42digit\u5462\uff1f \u5148\u6765\u770b\u4e00\u4e0b\u4e00\u4e9b\u5c0f\u5c0f\u7684\u6027\u8d28\uff1a\n\n- \u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff1a\n\n1~9\u5176\u5b9e\u662f\u4e2a\u4e00\u6837\u7684\uff0c\u6bd4\u65b9n=99\u65f6\n\n\u5148\u53ea\u770b\u524d99\u7684$1$\uff1a\n\n``` cpp\n1\n11 12 13 14 15 16 17 18 19\n21\n31\n41\n51\n61\n71\n81\n91\n```\n$1-9$\u6709\u4e00\u4e2a\uff0c\n\n$10-99$\u4e2a\u4f4d\u6570\u4e0a\u7531\u6709$9$\u4e2a\uff0c\u5341\u4f4d\u6570\u4e0a\u6709$9$\u4e2a\u3002\n\n\u5f88\u663e\u7136\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u67651\u5230$10,100,1000...$\u4e2d$1,2,3..$\u7684\u4e2a\u6570$f[]$.\n\n\u548c$0$\u7684\u4e2a\u6570$zero[]$.\n\n```cpp\nzero[0]=1;\t\nfor(int i=1;i<=N;i++) {\n\tf[i]=f[i-1]*10+zero[i-1];\n\tzero[i]=zero[i-1]*10;\n}\n```\n-  \u4e8e\u662f\n\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\uff0c\u7136\u540e\u5728\u4e58\u4ee5\u76f8\u5e94\u7684f\u548czero\u5c31\u53ef\uff0c\u6700\u540e\u518d\u52a0\u4e0a\u4e00\u4e9b\u96f6\u788e\u7684\u6570\u5b57\u3002\n\n$ans=9f[1]+zero[1]+$\u96f6\u96f6\u788e\u788e\u7684\u4e1c\u897f\n\n\n1. $f$\u90fd\u8981\u4e58\u4e00\u624b\n\n2. $0$\u4e0d\u8981\u4e58$zero$\uff0c\u800c\u4e14\u679a\u4e3e\u5230$num i$\n\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u6838\u5fc3\u4ee3\u7801:\n```cpp\n   int num[N]={0};\n    int w=0;\n    while(x){num[++w]=x%10;x/=10;}\n    for(int i=w;i>=1;i--)\n    {\n        for(int j=0;j<=9;j++)\n        \tcnt[j]+=f[i-1]*num[i],cnt[j]%=MOD;\n        for(int j=0;j<num[i];j++)\n        \tcnt[j]+=zero[i-1],cnt[j]%=MOD;\n        int tmp=0;\n      \tfor(int j=i-1;j>=1;j--)\n            tmp=tmp*10+num[j];\n        cnt[num[i]]+=tmp+1; cnt[num[i]]%=MOD;\n        cnt[0]-=zero[i-1];\n    } \n```\n\u9644\u4e0a$AC$\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#define MOD 1000000007\n#define N 25\n#define int unsigned long long \nusing namespace std;\nint a,b,w,A,B,t;\nint f[N],zero[N];\nint cnta[N],cntb[N];\nvoid Solve(int x,int *cnt)\n{\n    int num[N]={0};\n    int w=0;\n    while(x){num[++w]=x%10;x/=10;}\n    for(int i=w;i>=1;i--)\n    {\n        for(int j=0;j<=9;j++)\n        \tcnt[j]+=f[i-1]*num[i],cnt[j]%=MOD;\n        for(int j=0;j<num[i];j++)\n        \tcnt[j]+=zero[i-1],cnt[j]%=MOD;\n        int tmp=0;\n      \tfor(int j=i-1;j>=1;j--)\n            tmp=tmp*10+num[j];\n        cnt[num[i]]+=tmp+1; cnt[num[i]]%=MOD;\n        cnt[0]-=zero[i-1];\n    } \n}\nsigned main()\n{\n\tzero[0]=1;\n\tfor(int i=1;i<=N;i++) {\n\t\tf[i]=f[i-1]*10+zero[i-1];\n\t\tzero[i]=zero[i-1]*10;\n\t}\n\tcin>>a;\n\tSolve(a,cnta);\n\tint ans=0;\n\tfor(int i=0;i<=9;i++)\n\t\tans+=(cnta[i])*i;\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n\n--------\n\u5199\u5728\u6700\u540e\uff1a\u5982\u6709\u4e0d\u7406\u89e3\u6216\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u51fa\u3002\n\n### \u591a\u500d\u7ecf\u9a8c\n\n[2602](https://www.luogu.com.cn/problem/P2602)\n\n[1239](https://www.luogu.com.cn/problem/P1239)\n\n[4999](https://www.luogu.com.cn/problem/P4999)",
        "postTime": 1610110094,
        "uid": 233816,
        "name": "_zy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "**~~\u6253\u8868\u5927\u6cd5\u597d~~**\n\nQ1: \u76f4\u63a5\u66b4\u529b\u80fd\u4e0d\u80fd\u8fc7\uff1f A1: \u4e0d\u80fd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u5230$O(10^9)$\u3002\n\nQ2: \u591a\u5927\u89c4\u6a21\u7684\u66b4\u529b\u80fd\u8fc7\uff1f A2: 1e7\u3002\u6d1b\u8c37\u5728\u7ebfIDE\u5b9e\u6d4b400ms\uff08\u4e0d\u5f00O2\uff09\u3002\n\nQ3: \u9700\u8981\u6253\u591a\u5927\u7684\u8868\uff1f  A3: $\\frac {10^9} {10^7}=100$\u3002\n\n\u660e\u767d\u4e86\u4ee5\u4e0a\u4e09\u70b9\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u6253\u8868\u4e86\u3002\n\n----\n\n\u6211\u4eec\u5148\u5199\u4e00\u4e2a\u6700\u6734\u7d20\u7684\u66b4\u529b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long sum(int i){//\u8ba1\u7b97\u4e00\u4e2a\u6570\u5b57\u5404\u6570\u4f4d\u4e0a\u6570\u5b57\u7684\u548c\n\tlong long ret=0;\n\twhile(i){\n\t\tret+=i%10;\n\t\ti/=10;\n\t}\n\treturn ret;\n}\n\nlong long f(int l,int r){//\u8ba1\u7b97[l,r]\u533a\u95f4\u5185\u6240\u6709\u6570\u5b57sum\u503c\u7684\u548c\n\tlong long ret=0;\n\tfor (int i=l;i<=r;i++){\n\t\tret+=sum(i);\n\t}\n\treturn ret;\n}\n\nint main(){\n\tfor (int i=1;i<1000000000;i+=10000000){\n    \tprintf(\"%d,\",f(i,i+9999999));//\u6bcf\u9694\u4e00\u5343\u4e07\u6253\u4e00\u4e2a\u8868\n    }\n    return 0;\n}\n```\n\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/18331.png)\n\n\u7136\u540e\u6211\u4eec\u628a\u5b83\u590d\u5236\u5230\u7a0b\u5e8f\u91cc\u9762\uff0c\u5f00\u59cb\u5199\u6b63\u89e3\uff1a\n\n----\n\n\u5206\u5757\u6253\u8868\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5148\u7b97\u6574\u5757\u518d\u7b97\u96f6\u6563\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long sum(int i){\n\tlong long ret=0;\n\twhile(i){\n\t\tret+=i%10;\n\t\ti/=10;\n\t}\n\treturn ret;\n}\n\nlong long f(int l,int r){\n\tlong long ret=0;\n\tfor (int i=l;i<=r;i++){\n\t\tret+=sum(i);\n\t}\n\treturn ret;\n}\n\nlong long res[110]={0,315000001,325000001,335000001,345000001,355000001,365000001,375000001,385000001,\n395000001,404999992,325000001,335000001,345000001,355000001,365000001,375000001,\n385000001,395000001,405000001,414999992,335000001,345000001,355000001,365000001,\n375000001,385000001,395000001,405000001,415000001,424999992,345000001,355000001,\n365000001,375000001,385000001,395000001,405000001,415000001,425000001,434999992,\n355000001,365000001,375000001,385000001,395000001,405000001,415000001,425000001,\n435000001,444999992,365000001,375000001,385000001,395000001,405000001,415000001,\n425000001,435000001,445000001,454999992,375000001,385000001,395000001,405000001,\n415000001,425000001,435000001,445000001,455000001,464999992,385000001,395000001,\n405000001,415000001,425000001,435000001,445000001,455000001,465000001,474999992,\n395000001,405000001,415000001,425000001,435000001,445000001,455000001,465000001,\n475000001,484999992,405000001,415000001,425000001,435000001,445000001,455000001,\n465000001,475000001,485000001,494999983};//\u4e00\u4e2a100\u5927\u5c0f\u7684\u8868\n\nint main(){\n\tint n;\n\tcin>>n;\n\tlong long s=0;//\u5b58\u653e\u548c\n\tint i;\n\tfor (i=1;i*10000000<=n;i++){//\u6309\u4e00\u5343\u4e07\u7b97\u6574\u5757\n\t\ts+=res[i];\n\t}\n\ts+=f((i-1)*10000000+1,n);//\u7136\u540e\u66b4\u529b\u7b97\u4e00\u5343\u4e07\u4ee5\u4e0b\u7684\u5c0f\u5757\n\tprintf(\"%lld\",s);\n\treturn 0;\n}\n```\n\n\u4e0d\u8981\u5fd8\u5f00long long\uff0c10\u4e2a\u70b9\u603b\u5171640ms\u6109\u5febAC~",
        "postTime": 1525057901,
        "uid": 51001,
        "name": "Flokirie",
        "ccfLevel": 6,
        "title": "P1836\u9898\u89e3"
    },
    {
        "content": "\u9898\u89e3\u533a\u7684\u805a\u805a\u4eec\u7684\u65b9\u6cd5\u90fd\u5f88\u7b80\u5355QAQ\uff0c\u90a3\u4e48\u6211\u6765\u53d1\u4e00\u4efd\u81ea\u4ee5\u4e3a\u6bd4\u8f83\u597d\u61c2\u7684\u89e3\u7b54\u5427~\n\n## \u5206\u6790\n\u6211\u4eec\u4ee5 $n=7264$ \u4e3a\u4f8b\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7684\u4efb\u52a1\u662f\u6c42 $1-n$ \u7684\u6570\u7801\u4e4b\u548c\uff0c\u8003\u8651\u5bf9\u95ee\u9898\u8fdb\u884c\u62c6\u89e3\uff1a\n\n+ \u6c42\u51fa $1-6999$ \u7684\u6570\u7801\u4e4b\u548c\n+ \u6c42\u51fa $7000-7264$ \u7684\u6570\u7801\u4e4b\u548c\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u62c6\uff1f\u770b\u4e0b\u53bb\u5c31\u77e5\u9053\u4e86\u3002\n\n\u5bf9\u4e8e**\u7b2c\u4e00\u90e8\u5206**\uff1a\u6211\u4eec\u53ef\u4ee5\u8fdb\u884cDP\n\n\u7ea6\u5b9a $f(i,j)$ \u4e3a $i$ \u4f4d\u6570\uff0c\u5176\u4e2d\u6700\u9ad8\u4f4d\u662f $j$ \u7684\uff0c $1-\\overline{j99...99}$\uff08\u5171 $i$ \u4f4d\uff09\u6570\u7801\u4e4b\u548c\u3002\n\n\u6bd4\u5982\u4f8b\u5b50\u4e2d\u7684 $1-6999$ \u5c31\u5bf9\u5e94\u7740 $f(4,6)$ \u3002\n\n\u90a3\u4e48\u6211\u4eec\u6709\uff1a\n$f(i,j)=f(i,j-1)+(f(i,0)+10^{i-1}\\times j)$\uff0c\u5176\u4e2d $j>0$\n\n\u6bd4\u5982 $1-6999$ \u6570\u7801\u548c\u53ef\u4ee5\u62c6\u5206\u6210 $1-5999$ \u548c $6000-6999$ \uff0c\u800c $6000-6999$ \u7684\u6570\u7801\u548c\u7b49\u4e8e $1-999$ \u7684\u6570\u7801\u548c**\u4e0e** $1000$ \u4e2a $6$ \u7684\u548c\u3002\n\n$j=0$ \u65f6\uff0c\u6709 $f(i,j)=f(i-1,9)$ \n\n\u81f3\u6b64\uff0c\u6211\u4eec\u89e3\u51b3\u4e86\u7b2c\u4e00\u90e8\u5206\uff0c\u4e3b\u8981\u7684\u95ee\u9898\u5df2\u7ecf\u89e3\u51b3\u3002\n\n\u800c $7000-7264$ \u7684\u90e8\u5206\u6211\u4eec\u628a\u6700\u9ad8\u4f4d $7$ \u7684\u8d21\u732e\u7b97\u4e0a\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42 $1-264$ \u7684\u6570\u7801\u4e4b\u548c\u3002\n\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u95ee\u9898\u4ece $n=7624$ \u53d8\u6210\u4e86$n=264$ \u76f8\u5f53\u4e8e\u5c11\u4e86\u4e00\u4f4d\uff0c\u90a3\u4e48\u7c7b\u4f3c\u5730\u7ee7\u7eed\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\nconst int N=15;\nll f[N][10];\n\nll fpow(ll x,ll p){\n\tll res=1;\n\tfor(;p;p>>=1,x=x*x) if(p&1) res=res*x;\n\treturn res;\n}\nvoid init(){\n\tfor(int i=1;i<=N-1;i++)\n\t\tfor(int j=0;j<=9;j++){\n\t\t\tif(j==0){\n\t\t\t\tf[i][j]=f[i-1][9];\n\t\t\t}else{\n\t\t\t\tf[i][j]=f[i][j-1]+(f[i][0]+fpow(10,i-1)*j);\n\t\t\t}\n\t\t}\t\n}\n\nll dp(int n){\n\tll res=0;\n\tvector<int> v;\n\tint num=n;\n\twhile(num) v.push_back(num%10),num/=10;\n\t\n\tfor(int i=v.size()-1;~i;i--){\n\t\tint x=v[i];\n\t\tif(x==0) continue;\t\n\t\t\n\t\tres+=f[i+1][x-1];\n\t\tres+=(n%fpow(10,i)+1)*x;\n\t}\n\t\n\treturn res;\t\n}\n\nint main(){\n\tinit();\n\tint n;\n\tcin>>n;\n\tcout<<dp(n)<<endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1614916814,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "P1836 \u6570\u9875\u7801 \u89e3\u7b54"
    },
    {
        "content": "\u6700\u5e38\u89c4\u7684\u6570\u4f4d $dp$\u3002\u4f46\u662f\u8fd9\u4e00\u9898\u4e00\u5927\u90e8\u5206\u4eba\u7528\u4e86 \u6253\u8868 $or$ \u66b4\u529b\u3002\u7528\u6570\u4f4d $dp$ \u7684\u4eba\u4e5f\u4e0d\u8bb2\u8bb2\u6570\u4f4d $dp$ \u3002\u6211\u4e2a\u4eba\u89c9\u5f97\uff0c\u6570\u4f4d $dp$ \u6ca1\u6709\u4ed6\u4eec\u8bb2\u7684\u8fd9\u4e48\u7b80\u5355\u5427\u3002\n\n\u6211\u4eec\u5148\u8981\u660e\u786e\u4e00\u70b9\uff1a\u6570\u4f4d $dp$ \u4e00\u822c\u7528\u4e8e\u6c42 ( \u662f\u4e00\u822c ) \u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6570\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\u7684\u4e2a\u6570\u6216\u8005\u5176\u4ed6\u3002( \u8fd9\u4e2a\u5176\u4ed6\u5f71\u54cd\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b ) \u7136\u540e\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u3002\u6c42 $[0.a-1]$ \u548c $[0,b]$ \u7684\u89e3\uff0c\u7b54\u6848\u5c31\u662f $[0,b]-[0,a-1]$\n\n\u9996\u5148\uff0c\u6211\u4e0d\u5efa\u8bae\u628a\u8fd9\u4e00\u9898\u4f5c\u4e3a\u6570\u4f4d $dp$ \u5165\u95e8\u9898\uff0c\u5982\u679c\u60f3\u5b66\u6570\u4f4d $dp$ \uff0c\u53ef\u4ee5\u5148\u505a [P2657 [SCOI2009] windy \u6570](https://www.luogu.com.cn/problem/P2657) \u3002\u4e24\u9898\u7684\u6700\u5927\u533a\u522b\u5728\u4e8e\uff1a\u7edf\u8ba1\u4e2a\u6570 \u548c \u7edf\u8ba1\u6570\u5b57\u548c\u3002\n\n\u5982\u679c\u60f3\u7684\u8bdd\uff0c\u53bb\u505a [\u8fd9\u9898](https://loj.ac/problem/10168)\uff0c\u4f60\u5c31\u77e5\u9053\u6211\u8bf4\u7684\u4e0d\u8fd9\u4e48\u7b80\u5355\u662f\u4ec0\u4e48\u610f\u601d\u4e86\u3002\uff08 \u4e0d\u662f\u6307\u96be\u5ea6\u4e0a\u7684\u7b80\u5355\uff0c\u662f\u6307\u7406\u89e3\u4e0a\u7684\uff0c\u867d\u7136\u5b83\u7684\u786e\u4e0d\u662f\u5f88\u7b80\u5355 \uff09\n\n\u6570\u4f4d $dp$ \u7684\u57fa\u672c\u601d\u60f3\u662f\u4ece\u9ad8\u4f4d\u5f80\u4f4e\u4f4d\u679a\u4e3e\u6bcf\u4e00\u4f4d\u6570\u4f4d\uff0c\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e ( \u8d21\u732e\u8fd9\u4e2a\u8bcd\uff0c\u8fd9\u91cc\u610f\u4f1a\u5373\u53ef ) \n\n\u8003\u8651\u72b6\u6001 $f[x][y][z][w]$\u3002\u8868\u793a\u4ece\u9ad8\u5230\u4f4e\u679a\u4e3e\u5230\u7b2c $x$ \u4f4d\u65f6\u7b2c $x$ \u4f4d\u53d6 $y$ \uff0c $(z)$ \u5f53\u524d\u9ad8\u4fa7\u7684\u6bcf\u4e00\u4f4d\u662f\u5426\u7b49\u4e8e\u539f\u6570\u3002\u5f53\u524d\u679a\u4e3e\u51fa\u6765\u7684\u6570\u5b57\u548c\u4e3a $w$ \u3002\uff08\u6570\u4f4ddp\u4e00\u822c\u9700\u8981\u4e00\u4e2a $bool$ \u5224\u65ad\u662f\u5426\u5f53\u524d\u9ad8\u4fa7\u7684\u6bcf\u4e00\u4f4d\u662f\u5426\u7b49\u4e8e\u539f\u6570\uff0c\u56e0\u4e3a\u7b49\u4e8e\u7684\u65f6\u5019\uff0c\u540e\u9762\u679a\u4e3e\u7684\u6570\u4e0d\u80fd\u8d85\u8fc7\u539f\u6570\u7684\u4e0b\u4e00\u4f4d\uff0c\u800c\u4e0d\u7b49\u4e8e\u7684\u65f6\u5019\u53ef\u4ee5\u679a\u4e3e $0-9$ \uff09\n\n\u53ef\u4ee5\u624b\u6a21\u51e0\u4e2a\u4f8b\u5b50\u3002\n\n\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a$f[x][y]+=f[x+1[k]$ ( $k$ \u4e3a $0-9$ \u4e2d\u7684\u53ef\u4ee5\u53d6\u7684\u6570\uff0c\u5b58\u5728\u4e0a\u9762\u7684\u9650\u5236 ) $z$ \u548c $w$ \u76f8\u5e94\u6539\u53d8\uff0c\u662f\u56e0\u53d8\u91cf\n\n\u7136\u540e\u8fd9\u91cc\u6211\u7ed9\u70b9\u5c0f\u6280\u5de7\u3002\n- \u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u8c8c\u4f3c\u4f1a\u65b9\u4fbf\u70b9\uff0c\u56e0\u4e3a\u4e0d\u7528\u50cf\u5237\u8868\u6cd5\u90a3\u6837\u8003\u8651\u4e0b\u6807\u7684\u5148\u540e\u987a\u5e8f\n- \u5bf9\u4e8e\u8fd9\u79cd $bool$ \u72b6\u6001\uff08\u672c\u9898\u53ea\u6709\u4e00\u4e2a\u4e0d\u4ee3\u8868\u522b\u7684\u53ea\u6709\u4e00\u4e2a\uff09\u5b66\u4f1a\u7528\u903b\u8f91\u8fd0\u7b97\u662f\u4e2a\u597d\u4e3b\u610f\n- \u8ba1\u7b97 $[0,a]$ \u7684\u8fc7\u7a0b\u5199\u6210\u51fd\u6570\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint s[109];\nll mem[51][10][2][181];\nbool vis[51][10][2][181];\nll head;\nll dfs(int x,int y,int z,int w)\n{\n        int i;\n        ll res=0;\n        if(vis[x][y][z][w]) return mem[x][y][z][w];\n        if(x==1) return w;\n        for(i=0;i<=9;i++)\n        \tif(z==1&&i>s[x-1]) break;\n            \telse res+=dfs(x-1,i,z&(i==s[x-1]),w+i);\n        vis[x][y][z][w]=1;\n        return mem[x][y][z][w]=res;\n}\nll calc(ll x)\n{\n        head=0;\n        memset(vis,0,sizeof(vis));\n        while(x)\n        {\n            s[++head]=x%10;\n            x/=10;\n        }\n        return dfs(head+1,0,1,0);\n}\nint main()\n{\n        ll a,b,t;\n        cin>>a;\n        cout<<calc(a)<<endl;\n        return 0;\n}\n\n```\n\n\n\u83ab\u540d\u8dd1\u51fa\u6700\u4f18\u89e3\u4e86.....\uff08 \u65f6\u95f4\u590d\u6742\u5ea6$:O(lognlogn*9*logn*9*10*2)$\uff0c\u4e5f\u5c31\u662f\u72b6\u6001\u6570\uff0c\u5927\u7ea6\u4e3a$O(1620log^3n)$\uff0c\u8fd8\u6709\u5e38\u6570 \uff09",
        "postTime": 1603371632,
        "uid": 225100,
        "name": "ice_in_sky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "```txt\n\u9762\u5bf9\u6b64\u7c7b\u9898\u76ee\u65f6\uff0c\u4e00\u822c\u7684\u60f3\u6cd5\u662f\u9010\u4f4d\u9012\u63a8,\u53d1\u73b0\u9012\u63a8\u89c4\u5f8b. \n\u5047\u8bbe\u63a8\u5230\u4e86\u7b2ci\u4f4d\uff0c\u524di-1\u4f4d\u90fd\u662f0\uff0c\u7b2c\u4e00\u79cd\u51b3\u7b56\u662f\u7b2ci\u4f4d\u662f0,\u4e8e\u662f\u4fbf\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u5b50\u95ee\u9898\uff0c\u5426\u5219\n    \u8bbenum[i]\u8868\u793an\u7684\u6700\u540ei\u4f4d\u6240\u7ec4\u6210\u7684\u6570\n sum[x]\u8868\u793a1+\u2026+x, (x=1,2,\u20269) \n f[x]\u8868\u793a1+\u2026+\uff0810x-1\uff09\u7684\u6570\u4f4d\u548c \n    f[x]=f[x-1]*10+45*10x-1 \n    \u8bben\u7684\u7b2ci\u4f4d\u4e3api,\u90a3\u4e48\u9700\u8981\u7d2f\u52a0\u7684\u503c\u4e3a: \n    pi*f[i-1]+pi*(num[i-1]+1) +sum[pi-1]*10 (i-1); \n\u5176\u4e2dsum[pi-1]*10(i-1)\u8868\u793a\u5f53\u524d\u4f4d\u53d61..pi-1\u65f6\u7b2ci\u4f4d\u6240\u8981\u7d2f\u52a0\u7684\u503c\uff0cpi*(num[i-1]+1)\u8868\u793a\u53d6pi\u65f6\u7b2ci\u4f4d\u9700\u8981\u7d2f\u52a0\u7684\u503c\uff0cpi*f[i-1]\u8868\u793a\u7b2ci\u4f4d\u4e0d\u4e3a0\u65f6\u6700\u540ei-1\u4f4d\u9700\u8981\u518d\u7d2f\u52a0\u7684\u503c\u3002\n\u5bf9f\u503c\u7684\u5904\u7406\uff1a \n\u4e2a\u4f4d \u5341\u4f4d \n0 1 2 3 4 5 6 7 8 9 1\u4e2a 0 \n10 1 2 3 4 5 6 7 8 9 \n20 1 2 3 4 5 6 7 8 9 \n30 1 2 3 4 5 6 7 8 9 \n... \n90 1 2 3 4 5 6 7 8 9 9\u4e2a 1\u4e2a \n     100 1 2 3 4 5 6 7 8 9 \n     110 1 2 3 4 5 6 7 8 9 \n     120 1 2 3 4 5 6 7 8 9 \n     \u2026 \n     990 1 2 3 4 5 6 7 8 9 90\u4e2a 9\u4e2a\n  1000 1 2 3 4 5 6 7 8 9 \n  1010 1 2 3 4 5 6 7 8 9 \n  1020 1 2 3 4 5 6 7 8 9 \n\u2026. 9990 1 2 3 4 5 6 7 8 9 900 90\u4e2a\n\u4ee53456\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff1a \nNum [i]\uff1a6 56 456 3456 \nsum[i]\uff1a1 3 6 10 15 21 28 36 45 \nf[i]\uff1a45 900 13500 180000 \nans\uff1a21+ 360+4428+ 44871=49680 \n1:\u5904\u7406\u4e2a\u4f4d\uff086\uff09\uff1a1+2+3+4+5+6=21 \n2:\u5904\u7406\u5341\u4f4d\uff0856\uff09\uff1a5*45+10*10+5*(6+1)= 360 \n3:\u5904\u7406\u767e\u4f4d\uff08456\uff09: 4*900+6*100+4*(56+1)= 4428 \n4:\u5904\u7406\u5343\u4f4d\uff083456\uff09: 3*13500+3*1000+3*(456+1)= 44871 \n\u4e0b\u9762\u5949\u4e0a\u4ee3\u7801\uff1a\n```\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std ;\nstruct BigN \n{\n  int l,num[50];\n  BigN()\n  {\n    memset(num,0,sizeof(num));\n    l=0;\n  }     \n  void output()\n  {\n     if(l==0)cout<<0;\n     else \n     for(int i=l;i>=1;i--)cout<<num[i];\n     cout<<endl;\n  }  \n  void change( )\n  {\n    for(int i=1;i<=l;i++)\n     { \n       num[i+1]+=num[i]/10;\n       num[i]%=10;\n       if(i==l&&num[l+1]!=0)l++; \n     }   \n  }\n  BigN operator +(BigN tt)\n   {\n        BigN cc;    \n        cc.l=max(tt.l,l);\n        for(int i=1;i<=cc.l;i++)\n         { \n            cc.num[i]+=num[i]+tt.num[i]; \n            cc.num[i+1]+=cc.num[i]/10;\n            cc.num[i]%=10;\n            if(i==cc.l&&cc.num[cc.l+1]!=0)cc.l++;\n         }\n      \n       return cc;\n  }\n  BigN operator *(int tt)\n   {\n        BigN cc;\n        if(tt==0)return cc;\n        cc.l=l;\n        int g=0;\n        for(int i=1;i<=cc.l;i++)\n         {\n             cc.num[i]=num[i]*tt+g;       \n             g=cc.num[i]/10;\n             cc.num[i]%=10;\n             if(i==cc.l&&g!=0)cc.l++;     \n          }    \n         return cc;\n   }\n \n}map[15],ans,root;\nint t=1;\nvoid read( void )\n{\n   int tot=0;\n   map[1].l=2;map[1].num[1]=5;map[1].num[2]=4;  \n   for(int i=2;i<root.l;i++)\n    {\n      map[i].l=i-2;\n      tot=45*(9*i+1);\n      while(tot)\n       {\n         \n         map[i].num[++map[i].l]=tot%10;\n         tot/=10;         \n       }\n       map[i]=map[i]+map[i-1];  \n    } \n   \n     \n}\nvoid dfs( void )\n{\n   \n   if(root.l==0)return;\n   if(root.l==1)\n   {\n    ans.num[1]+=(root.num[1]*(root.num[1]+1)/2);\n    ans.change();return;\n   }   \n   else  \n     {\n        BigN tt1;\n        tt1=map[root.l-1]*root.num[root.l]; \n        BigN tt2;\n        tt2=root;\n        tt2.num[tt2.l--]=0;\n        tt2.num[1]++;\n        tt2.change();\n        tt2=tt2*root.num[root.l]; \n        ans=ans+tt1; ans=ans+tt2;\n        ans.num[root.l]+=(root.num[root.l]*(root.num[root.l]-1)/2);\n        ans.change();\n        root.l--;root.num[root.l+1]=0;\n        while(root.num[root.l]==0&&root.l>=1)root.l--;\n        dfs();\n     }\n}\nint main()\n{\n    freopen(\"count.in\",\"r\",stdin);\n    freopen(\"count.out\",\"w\",stdout);\n    int n;\n    cin>>n;\n    if(n<=9){cout<<n*(n+1)/2;return 0;}\n    while(n)\n    {\n       root.num[++root.l]=n%10;\n       n/=10;        \n    }\n    read( );\n    dfs();\n    ans.output();\n}\n```\n",
        "postTime": 1521878937,
        "uid": 56836,
        "name": "math\u72c2\u70ed\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u548cP2602\u51e0\u4e4e\u4e00\u6837\uff0c\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u6570\u7684\u4e2a\u6570\u7136\u540e\u52a0\u5230\u7ed3\u679c\u91cc\u5c31\u597d\u4e86  \n\u6211\u4eec\u673a\u623f\u67d0dalao\u7814\u7a76\u51fa\u6765\u4e86\u6a21\u62df\u7b97\u6cd5\uff0c\u8dd1\u5f97\u548c\u6570\u4f4dDP\u677f\u5b50\u4e00\u6837\u5feb\uff0c\u5feb%[\u4ed6](https://www.luogu.org/space/show?uid=59030)  \n\u4ee5\u4e0b\u662f\u6570\u4f4dDP\u677f\u5b50  \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nint a[20];\nll dp[20][2][20][2];\nll dfs(int pos,bool limit,int sum,bool lead,int d)\n{\n    //\u9012\u5f52\u8fb9\u754c\uff0c\u65e2\u7136\u662f\u6309\u4f4d\u679a\u4e3e\uff0c\u6700\u4f4e\u4f4d\u662f0\uff0c\u90a3\u4e48pos==-1\u8bf4\u660e\u8fd9\u4e2a\u6570\u6211\u679a\u4e3e\u5b8c\u4e86\n    if(pos==0) return sum;/*\u8fd9\u91cc\u4e00\u822c\u8fd4\u56de1\uff0c\u8868\u793a\u4f60\u679a\u4e3e\u7684\u8fd9\u4e2a\u6570\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u9700\u8981\u4f60\u5728\u679a\u4e3e\u65f6\u5fc5\u987b\u6bcf\u4e00\u4f4d\u90fd\u8981\u6ee1\u8db3\u9898\u76ee\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u679a\u4e3e\u5230pos\u4f4d\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u524d\u9762\u5df2\u7ecf\u679a\u4e3e\u7684\u6570\u4f4d\u662f\u5408\u6cd5\u7684\u3002\u4e0d\u8fc7\u5177\u4f53\u9898\u76ee\u4e0d\u540c\u6216\u8005\u5199\u6cd5\u4e0d\u540c\u7684\u8bdd\u4e0d\u4e00\u5b9a\u8981\u8fd4\u56de1 */\n    //\u7b2c\u4e8c\u4e2a\u5c31\u662f\u8bb0\u5fc6\u5316\n    if(dp[pos][limit][sum][lead]!=-1) return dp[pos][limit][sum][lead];\n    int up=limit?a[pos]:9;//\u6839\u636elimit\u5224\u65ad\u679a\u4e3e\u7684\u4e0a\u754cup;\u8fd9\u4e2a\u7684\u4f8b\u5b50\u524d\u9762\u7528213\u8bb2\u8fc7\u4e86\n    ll ans=0;\n    //\u5f00\u59cb\u8ba1\u6570\n    for(int i=0;i<=up;i++)//\u679a\u4e3e\uff0c\u7136\u540e\u628a\u4e0d\u540c\u60c5\u51b5\u7684\u4e2a\u6570\u52a0\u5230ans\u5c31\u53ef\u4ee5\u4e86\n    {\n        ans+=dfs(pos-1,limit && (i==a[pos]),sum+((!lead || i) && (i==d)),/*\u72b6\u6001\u8f6c\u79fb*/lead && (i==0),d);//\u6700\u540e\u4e24\u4e2a\u53d8\u91cf\u4f20\u53c2\u90fd\u662f\u8fd9\u6837\u5199\u7684\n        //\u5f53\u524d\u6570\u4f4d\u679a\u4e3e\u7684\u6570\u662fi\uff0c\u7136\u540e\u6839\u636e\u9898\u76ee\u7684\u7ea6\u675f\u6761\u4ef6\u5206\u7c7b\u8ba8\u8bba\u53bb\u8ba1\u7b97\u4e0d\u540c\u60c5\u51b5\u4e0b\u7684\u4e2a\u6570\uff0c\u8fd8\u6709\u8981\u6839\u636estate\u53d8\u91cf\u6765\u4fdd\u8bc1i\u7684\u5408\u6cd5\u6027\n    }\n    //\u8ba1\u7b97\u5b8c\uff0c\u8bb0\u5f55\u72b6\u6001\n    dp[pos][limit][sum][lead]=ans;\n    /*\u8fd9\u91cc\u5bf9\u5e94\u4e0a\u9762\u7684\u8bb0\u5fc6\u5316\uff0c\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u65f6\u8bb0\u5f55\uff0c\u4fdd\u8bc1\u4e00\u81f4\u6027\uff0c\u5f53\u7136\u5982\u679c\u7ea6\u675f\u6761\u4ef6\u4e0d\u9700\u8981\u8003\u8651lead\uff0c\u8fd9\u91cc\u5c31\u662flead\u5c31\u5b8c\u5168\u4e0d\u7528\u8003\u8651\u4e86*/\n    return ans;\n}\nll solve(ll x,ll d)\n{\n    int pos=0;\n    while(x)//\u628a\u6570\u4f4d\u90fd\u5206\u89e3\u51fa\u6765\n    {\n        a[++pos]=x%10;\n        x/=10;\n    }\n    memset(dp, -1, sizeof(dp));\n    return dfs(pos/*\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u679a\u4e3e*/,true,0,true,d);//\u521a\u5f00\u59cb\u6700\u9ad8\u4f4d\u90fd\u662f\u6709\u9650\u5236\u5e76\u4e14\u6709\u524d\u5bfc\u96f6\u7684\uff0c\u800c\u6bd4\u6700\u9ad8\u4f4d\u8fd8\u8981\u9ad8\u7684\u4e00\u4f4d\u89c6\u4e3a0\n}\nint main()\n{\n    ll le,ri,sum=0;\n    le=1;\n\tscanf(\"%lld\",&ri);\n    for(int i=1;i<10;i++){\n    \tsum+=i*(solve(ri,i)-solve(le-1,i));\n\t}\n\tprintf(\"%lld\\n\",sum);\n    return 0;\n}\n```",
        "postTime": 1537971270,
        "uid": 46751,
        "name": "\u672c\u5c45\u5c0f\u94c3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u672c\u9898\u603b\u4f53\u601d\u8def\u4e3a\u9012\u63a8\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b80\u7565\u7684\u6570\u4f4dDP\n\n~~\u603b\u800c\u8a00\u4e4b\u5c31\u662f\u627e\u89c4\u5f8b~~\n\n\u8bb0\u7b54\u6848\u4e3aans\n\n\u4ee5\u4e0b\u4e3a\u7b80\u6613\u603b\u4f53\u601d\u8def\uff1a\n\n \u5982\u6837\u4f8b3456789\uff0c\u5148\u6839\u636e\u4e4b\u524d\u6240\u5f97\u6570\u7ec4a\uff0c\u5f97\u51fa0-2999999\u4e2d\u7684\u7b54\u6848ans\uff0c\n \u7136\u540e\u4fbf\u53ef\u4ee5\u5ffd\u75653\uff1b\u5982\u4e4b\u524d\u7b97\u6cd5\uff0c\u5f97\u51fa0-399999\u4e2d\u7684\u7b54\u6848\uff0c\u7d2f\u52a0ans\uff1b\n \u4ee5\u6b64\u7c7b\u63a8\u81f3\u6700\u540e\u4e00\u4f4d\u3002~~\u641e\u5b9a\uff01~~\n\n\u4e4b\u540e\u53d1\u73b0\u6837\u4f8b\u90fd\u6ca1\u8fc7\uff0c\u539f\u6765\u662f\u57283456789\u4e2d\u7684456789\u8fd8\u9700\u52a0456789\u4e2a3\uff0c\n\u6240\u4ee5\u7ee7\u7eed\u7d2f\u52a0\uff1aans=ans+3*(456789+1);ans=ans+4*(56789+1).......\n\n\u5982\u4e0a\u6240\u793a\uff0c\u7ee7\u7eed\u6570\u4f4d\u7d2f\u52a0\uff0c\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long a[11][11],n,sum,ans,x,b[11],i,j,now;\nchar str[11];\nint main(){\n\tans=0;\n\tsum=0;\n\tfor (int k=1; k<=10; k++){\n\t\ta[k][0]=sum;\n\t\tx=1;\n\t\tfor (i=1; i<=k-1; i++) x=x*10;\n\t\tfor (i=1; i<=9; i++) {\n\t\ta[k][i]=a[k][i-1]+x;\n\t\tsum=sum+a[k][i];}\n\t}     //\u7b80\u6613\u52a8\u5f52\u65b9\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u524d\u7f00\u548c    \n\tcin>>str;\n\tfor (i=0; i<strlen(str); i++)\n\tb[i]=str[i];\n\tint len=strlen(str);\n\n\tfor (i=0; i<strlen(str); i++){\n\t\tfor (j=0; j<=b[i]-48-1; j++)\n\t\tans=ans+a[len-i][j];\n\t\tnow=0;\n\t\tx=1;\n\t\tfor (int k=1; k<len-i-1; k++) x=x*10;\n\t\tfor (int k=i+1; k<len; k++) {\n\t\tnow=now+(b[k]-48)*x*(b[i]-48);\n\t\tx=x/10;\n\t\t}\n\t\tnow=now+b[i]-48;\n\t\tans=ans+now;\n\t}        //\u7136\u540e\u8fdb\u884c\u6a21\u62df\u3002\u6a21\u62df\u65f6\u6839\u636e\u6570\u4f4d\u8ba1\u7b97\u603b\u548c\uff0c\u6a21\u62df\u65b9\u6cd5\u5f00\u59cb\u5df2\u8bf4\u660e\n\tprintf(\"%lld\\n\",ans);\nreturn 0;\t\n}\n\u7b2c\u4e00\u7bc7\u8ba4\u771f\u5199\u7684\u9898\u89e3\uff0c\u7ba1\u7406\u5458\u4e00\u5b9a\u8981\u901a\u8fc7\u554aQAQ\n```",
        "postTime": 1546422894,
        "uid": 73436,
        "name": "\u8bf4\u597d\u4e0d\u54ed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u770b\u697c\u4e0bdalao\u90fd\u662f\u7528\u89c4\u5f8b\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u4f1a\u66b4\u529b\n\n~~\u66b4\u529b\u51fa\u5947\u8ff9\uff08\u9003~~\n\n\u601d\u8def\u5c31\u662f\u6253\u88682333\n\n#### \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6bcf1e7\u4e2a\u6570\u8bb0\u5f55\u4e00\u6b21\u4e2a\u4f4d\u6570\u4e2a\u6570\u3002\n\n#### \u6700\u540e\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n------------\n\u6253\u8868\u7a0b\u5e8f\uff1a\n```cpp\nint F[10];\n\n\nAN void Count (REG int Num) {\t\t\t//\u8bb0\u5f55\u6570\u636e\n\tdo {F[Num % 10]++;}\t\twhile (Num /= 10);\n}\n\nint main () {\n\tfreopen (\"Output.txt\", \"w\",stdout);\n\tREG int MAX = 1e9;\n\tFor (i,1,MAX) {\n\t\tCount (i);\n\t\tif (i % MAXN == 0)\t\tFor (i,0,9)\t\tWrite (F[i]), putchar (','), Space ();\n\t\tif (i % MOD == 0)\t\tEnter ();\n\t}\n    return 0;\n}\n```\n\n------------\n\u6700\u540e\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\t//BY Playnext\n#define REG register\n#define IN inline\n#define AN __inline__ __attribute__ ((always_inline))\n#define For(X,Y,Z) for (REG int X=Y; X<=Z; X++)\n#define FOR(X,Y,Z) for (REG int X=Y; X<Z; X++)\n#define Space()   putchar (32)\n#define Enter()   putchar (10)\nconst int MAXN=1e4+1, INF=2147483647, MOD=1e9+7;\n\n#define\tFileSize 1<<15\nchar Buffer[FileSize], *Cur, *End;\t\n#define NextChar() (Cur == End && (End = (Cur = Buffer) + fread (Buffer, 1, FileSize, stdin), Cur == End) ? EOF : *Cur ++)\n    \t\nAN void Read (REG int &Temp) {\n    REG int Negative = 1;\t\tTemp = 0;\n    REG char Next = NextChar ();\n    \n    while (!isdigit (Next)) {\n        if (Next == '-') \tNegative = -1;\n        Next = NextChar ();\n    }\t\n    \n    while (isdigit (Next)) {\n        Temp = Temp *10 + Next - 48;\n        Next = NextChar ();\n    }\n    \n    Temp*= Negative;\n}\n\nIN void Write (REG int Temp) {\n    if (Temp < 0) \tTemp = -Temp, putchar('-');\n    if (Temp > 9) \tWrite (Temp /10);\n    putchar (Temp %10 + '0');\n}\n\n\nint F[10];\nint Sheet[MAXN] = \n{\n\t5888896, 7000001, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 7000000, 12888896, 24000000, 14000001, 14000000, 14000000, 14000000, 14000000, 14000000, 14000000, 14000000, 19888896, 31000000, 31000000, 21000001, 21000000, 21000000, 21000000, 21000000, 21000000, 21000000, 26888896, 38000000, 38000000, 38000000, 28000001, 28000000, 28000000, 28000000, 28000000, 28000000, 33888896, 45000000, 45000000, 45000000, 45000000, 35000001, 35000000, 35000000, 35000000, 35000000, 40888896, 52000000, 52000000, 52000000, 52000000, 52000000, 42000001, 42000000, 42000000, 42000000, 47888896, 59000000, 59000000, 59000000, 59000000, 59000000, 59000000, 49000001, 49000000, 49000000, 54888896, 66000000, 66000000, 66000000, 66000000, 66000000, 66000000, 66000000, 56000001, 56000000, 61888896, 73000000, 73000000, 73000000, 73000000, 73000000, 73000000, 73000000, 73000000, 63000001, 68888897, 80000001, 80000000, 80000000, 80000000, 80000000, 80000000, 80000000, 80000000, 80000000, \n\t85888896, 97000002, 87000000, 87000000, 87000000, 87000000, 87000000, 87000000, 87000000, 87000000, 92888896, 124000001, 94000001, 94000000, 94000000, 94000000, 94000000, 94000000, 94000000, 94000000, 99888896, 141000001, 111000000, 101000001, 101000000, 101000000, 101000000, 101000000, 101000000, 101000000, 106888896, 158000001, 118000000, 118000000, 108000001, 108000000, 108000000, 108000000, 108000000, 108000000, 113888896, 175000001, 125000000, 125000000, 125000000, 115000001, 115000000, 115000000, 115000000, 115000000, 120888896, 192000001, 132000000, 132000000, 132000000, 132000000, 122000001, 122000000, 122000000, 122000000, 127888896, 209000001, 139000000, 139000000, 139000000, 139000000, 139000000, 129000001, 129000000, 129000000, 134888896, 226000001, 146000000, 146000000, 146000000, 146000000, 146000000, 146000000, 136000001, 136000000, 141888896, 243000001, 153000000, 153000000, 153000000, 153000000, 153000000, 153000000, 153000000, 143000001, 148888897, 260000000, 160000001, 160000000, 160000000, 160000000, 160000000, 160000000, 160000000, 160000000, \n\t165888896, 267000001, 177000001, 167000000, 167000000, 167000000, 167000000, 167000000, 167000000, 167000000, 172888896, 284000000, 194000002, 174000000, 174000000, 174000000, 174000000, 174000000, 174000000, 174000000, 179888896, 291000000, 221000001, 181000001, 181000000, 181000000, 181000000, 181000000, 181000000, 181000000, 186888896, 298000000, 238000001, 198000000, 188000001, 188000000, 188000000, 188000000, 188000000, 188000000, 193888896, 305000000, 255000001, 205000000, 205000000, 195000001, 195000000, 195000000, 195000000, 195000000, 200888896, 312000000, 272000001, 212000000, 212000000, 212000000, 202000001, 202000000, 202000000, 202000000, 207888896, 319000000, 289000001, 219000000, 219000000, 219000000, 219000000, 209000001, 209000000, 209000000, 214888896, 326000000, 306000001, 226000000, 226000000, 226000000, 226000000, 226000000, 216000001, 216000000, 221888896, 333000000, 323000001, 233000000, 233000000, 233000000, 233000000, 233000000, 233000000, 223000001, 228888897, 340000000, 340000000, 240000001, 240000000, 240000000, 240000000, 240000000, 240000000, 240000000, \n\t245888896, 347000001, 347000000, 257000001, 247000000, 247000000, 247000000, 247000000, 247000000, 247000000, 252888896, 364000000, 354000001, 274000001, 254000000, 254000000, 254000000, 254000000, 254000000, 254000000, 259888896, 371000000, 371000000, 291000002, 261000000, 261000000, 261000000, 261000000, 261000000, 261000000, 266888896, 378000000, 378000000, 318000001, 268000001, 268000000, 268000000, 268000000, 268000000, 268000000, 273888896, 385000000, 385000000, 335000001, 285000000, 275000001, 275000000, 275000000, 275000000, 275000000, 280888896, 392000000, 392000000, 352000001, 292000000, 292000000, 282000001, 282000000, 282000000, 282000000, 287888896, 399000000, 399000000, 369000001, 299000000, 299000000, 299000000, 289000001, 289000000, 289000000, 294888896, 406000000, 406000000, 386000001, 306000000, 306000000, 306000000, 306000000, 296000001, 296000000, 301888896, 413000000, 413000000, 403000001, 313000000, 313000000, 313000000, 313000000, 313000000, 303000001, 308888897, 420000000, 420000000, 420000000, 320000001, 320000000, 320000000, 320000000, 320000000, 320000000, \n\t325888896, 427000001, 427000000, 427000000, 337000001, 327000000, 327000000, 327000000, 327000000, 327000000, 332888896, 444000000, 434000001, 434000000, 354000001, 334000000, 334000000, 334000000, 334000000, 334000000, 339888896, 451000000, 451000000, 441000001, 371000001, 341000000, 341000000, 341000000, 341000000, 341000000, 346888896, 458000000, 458000000, 458000000, 388000002, 348000000, 348000000, 348000000, 348000000, 348000000, 353888896, 465000000, 465000000, 465000000, 415000001, 355000001, 355000000, 355000000, 355000000, 355000000, 360888896, 472000000, 472000000, 472000000, 432000001, 372000000, 362000001, 362000000, 362000000, 362000000, 367888896, 479000000, 479000000, 479000000, 449000001, 379000000, 379000000, 369000001, 369000000, 369000000, 374888896, 486000000, 486000000, 486000000, 466000001, 386000000, 386000000, 386000000, 376000001, 376000000, 381888896, 493000000, 493000000, 493000000, 483000001, 393000000, 393000000, 393000000, 393000000, 383000001, 388888897, 500000000, 500000000, 500000000, 500000000, 400000001, 400000000, 400000000, 400000000, 400000000, \n\t405888896, 507000001, 507000000, 507000000, 507000000, 417000001, 407000000, 407000000, 407000000, 407000000, 412888896, 524000000, 514000001, 514000000, 514000000, 434000001, 414000000, 414000000, 414000000, 414000000, 419888896, 531000000, 531000000, 521000001, 521000000, 451000001, 421000000, 421000000, 421000000, 421000000, 426888896, 538000000, 538000000, 538000000, 528000001, 468000001, 428000000, 428000000, 428000000, 428000000, 433888896, 545000000, 545000000, 545000000, 545000000, 485000002, 435000000, 435000000, 435000000, 435000000, 440888896, 552000000, 552000000, 552000000, 552000000, 512000001, 442000001, 442000000, 442000000, 442000000, 447888896, 559000000, 559000000, 559000000, 559000000, 529000001, 459000000, 449000001, 449000000, 449000000, 454888896, 566000000, 566000000, 566000000, 566000000, 546000001, 466000000, 466000000, 456000001, 456000000, 461888896, 573000000, 573000000, 573000000, 573000000, 563000001, 473000000, 473000000, 473000000, 463000001, 468888897, 580000000, 580000000, 580000000, 580000000, 580000000, 480000001, 480000000, 480000000, 480000000, \n\t485888896, 587000001, 587000000, 587000000, 587000000, 587000000, 497000001, 487000000, 487000000, 487000000, 492888896, 604000000, 594000001, 594000000, 594000000, 594000000, 514000001, 494000000, 494000000, 494000000, 499888896, 611000000, 611000000, 601000001, 601000000, 601000000, 531000001, 501000000, 501000000, 501000000, 506888896, 618000000, 618000000, 618000000, 608000001, 608000000, 548000001, 508000000, 508000000, 508000000, 513888896, 625000000, 625000000, 625000000, 625000000, 615000001, 565000001, 515000000, 515000000, 515000000, 520888896, 632000000, 632000000, 632000000, 632000000, 632000000, 582000002, 522000000, 522000000, 522000000, 527888896, 639000000, 639000000, 639000000, 639000000, 639000000, 609000001, 529000001, 529000000, 529000000, 534888896, 646000000, 646000000, 646000000, 646000000, 646000000, 626000001, 546000000, 536000001, 536000000, 541888896, 653000000, 653000000, 653000000, 653000000, 653000000, 643000001, 553000000, 553000000, 543000001, 548888897, 660000000, 660000000, 660000000, 660000000, 660000000, 660000000, 560000001, 560000000, 560000000, \n\t565888896, 667000001, 667000000, 667000000, 667000000, 667000000, 667000000, 577000001, 567000000, 567000000, 572888896, 684000000, 674000001, 674000000, 674000000, 674000000, 674000000, 594000001, 574000000, 574000000, 579888896, 691000000, 691000000, 681000001, 681000000, 681000000, 681000000, 611000001, 581000000, 581000000, 586888896, 698000000, 698000000, 698000000, 688000001, 688000000, 688000000, 628000001, 588000000, 588000000, 593888896, 705000000, 705000000, 705000000, 705000000, 695000001, 695000000, 645000001, 595000000, 595000000, 600888896, 712000000, 712000000, 712000000, 712000000, 712000000, 702000001, 662000001, 602000000, 602000000, 607888896, 719000000, 719000000, 719000000, 719000000, 719000000, 719000000, 679000002, 609000000, 609000000, 614888896, 726000000, 726000000, 726000000, 726000000, 726000000, 726000000, 706000001, 616000001, 616000000, 621888896, 733000000, 733000000, 733000000, 733000000, 733000000, 733000000, 723000001, 633000000, 623000001, 628888897, 740000000, 740000000, 740000000, 740000000, 740000000, 740000000, 740000000, 640000001, 640000000, \n\t645888896, 747000001, 747000000, 747000000, 747000000, 747000000, 747000000, 747000000, 657000001, 647000000, 652888896, 764000000, 754000001, 754000000, 754000000, 754000000, 754000000, 754000000, 674000001, 654000000, 659888896, 771000000, 771000000, 761000001, 761000000, 761000000, 761000000, 761000000, 691000001, 661000000, 666888896, 778000000, 778000000, 778000000, 768000001, 768000000, 768000000, 768000000, 708000001, 668000000, 673888896, 785000000, 785000000, 785000000, 785000000, 775000001, 775000000, 775000000, 725000001, 675000000, 680888896, 792000000, 792000000, 792000000, 792000000, 792000000, 782000001, 782000000, 742000001, 682000000, 687888896, 799000000, 799000000, 799000000, 799000000, 799000000, 799000000, 789000001, 759000001, 689000000, 694888896, 806000000, 806000000, 806000000, 806000000, 806000000, 806000000, 806000000, 776000002, 696000000, 701888896, 813000000, 813000000, 813000000, 813000000, 813000000, 813000000, 813000000, 803000001, 703000001, 708888897, 820000000, 820000000, 820000000, 820000000, 820000000, 820000000, 820000000, 820000000, 720000001, \n\t725888896, 827000001, 827000000, 827000000, 827000000, 827000000, 827000000, 827000000, 827000000, 737000001, 732888896, 844000000, 834000001, 834000000, 834000000, 834000000, 834000000, 834000000, 834000000, 754000001, 739888896, 851000000, 851000000, 841000001, 841000000, 841000000, 841000000, 841000000, 841000000, 771000001, 746888896, 858000000, 858000000, 858000000, 848000001, 848000000, 848000000, 848000000, 848000000, 788000001, 753888896, 865000000, 865000000, 865000000, 865000000, 855000001, 855000000, 855000000, 855000000, 805000001, 760888896, 872000000, 872000000, 872000000, 872000000, 872000000, 862000001, 862000000, 862000000, 822000001, 767888896, 879000000, 879000000, 879000000, 879000000, 879000000, 879000000, 869000001, 869000000, 839000001, 774888896, 886000000, 886000000, 886000000, 886000000, 886000000, 886000000, 886000000, 876000001, 856000001, 781888896, 893000000, 893000000, 893000000, 893000000, 893000000, 893000000, 893000000, 893000000, 873000002, 788888898, 900000001, 900000000, 900000000, 900000000, 900000000, 900000000, 900000000, 900000000, 900000000\n};\n\nAN void Count (REG int Num) {\n\tdo {F[Num % 10]++;}\t\twhile (Num /= 10);\n}\n\nint main () {\n//\tfreopen (\"Input.txt\", \"r\", stdin);\n//\tfreopen (\"Output.txt\", \"w\",stdout);\n\tREG int n;\t\tRead (n);\n\tREG int m = n / 1e7;\n\tif (m)\t\tFor (i,0,9)\t\tF[i] = Sheet[10 * (m - 1) + i];\t\t\t//\u9884\u5904\u7406\n\tFor (i,m * 1e7 + 1, n)\t\tCount (i);\n\tREG long long Ans = 0;\n\tFor (i,0,9)\t\tAns += (long long) F[i] * i;\n\tWrite (Ans), Enter ();\n    return 0;\n}\n```\n",
        "postTime": 1519903606,
        "uid": 51658,
        "name": "Playnext",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u4e00\u8bfb\u9898\u5c31\u77e5\u9053\u662fN\u500d\u7ecf\u9a8c\u4e86\uff0c\u6570\u4f4dDP\u5f88\u5e38\u89c1\u7684\u9898\u578b\uff0c\u4e5f\u662f\u7ec3\u4e60\u6570\u4f4dDP\u7684\u5f88\u597d\u7684\u7ec3\u624b\u9898\uff0c\u53ea\u8981\u638c\u63e1\u4e86\u6570\u4f4dDP\u5c31\u53ef\u4ee5\u5f88\u5feb\u60f3\u51fa\u6765\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u6c42\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u4e2d\u51fa\u73b0\u7684\u6570\u7801\u4e4b\u548c\uff0c\u5f88\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u6570\u4f4dDP\u5c060-9\u6bcf\u4e00\u4e2a\u6570\u7801\u51fa\u73b0\u7684\u6b21\u6570\u6c42\u51fa\u6765\uff0c\u7136\u540e\u5206\u522b\u4e58\u4e0a\u4ed6\u4eec\u81ea\u5df1\u7684\u503c\uff0c\u6700\u540e\u76f8\u52a0\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e5f\u4e0d\u96be\uff0c\u4ee5\u4e0b\u662f\u672c\u849f\u84bb\u7684\u4ee3\u7801\uff0c\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u4e00\u770b\u4ee3\u7801\u91cc\u9762\u7684\u6ce8\u91ca\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nconst int N = 100;\nll dp[N][100][100];//dp[i][j][k]\u8868\u793a\u7684\u662f\u4ee5j\u4e3a\u6700\u9ad8\u4f4d\u7684i\u4f4d\u6570\u4e2d\u6570\u7801k\u51fa\u73b0\u7684\u6b21\u6570\nll ksm(ll a,ll b)\n{\n\tll res=1;\n\twhile(b)\n\t{\n\t\tif(b&1)\n\t\t\tres*=a;\n\t\ta*=a;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}//\u5feb\u901f\u5e42\nvoid init()\n{\n\tfor (int i = 0; i <= 9;i++)\n\t\tdp[1][i][i] = 1;//\u4e00\u4f4d\u6570\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u662f\u4e00\u6b21\n\tfor (int i = 2; i < N;i++)\n\t{\n\t\tfor (int j = 0; j <= 9;j++)\n\t\t{\n\t\t\tfor (int k = 0; k <= 9;k++)\n\t\t\t{\n\t\t\t\tfor (int r = 0; r <= 9;r++)\n\t\t\t\t{\n\t\t\t\t\tdp[i][j][r] += dp[i - 1][k][r] ;//\u521d\u59cb\u5316\u8f6c\u79fb\n             //\u7b2ci\u4f4d\u6570\u7684\u67d0\u4e2a\u6570\u7801\u51fa\u73b0\u7684\u6b21\u6570\u7531i-1\u4f4d\u6570\u8f6c\u5316\u800c\u6765\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[i][j][j] += ksm(10, i - 1);//\u52a0\u4e0a\u6700\u9ad8\u4f4d\u7684\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\n\t\t}\n\t}\n}\nll make(ll n,ll search)//search\u4e3a\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u6570\u7801\n{\n\tll digit[N];\n\tll len = 0;\n\tmemset(digit, 0, sizeof digit);\n\twhile(n)\n\t{\n\t\tdigit[++len] = n % 10;\n\t\tn/=10;\n\t}\n\tll res = 0;\n\tfor (int i =1;i<len;i++)\n\t{\n\t\tfor (int j = 1; j <= 9;j++)\n\t\t{\n\t\t\tres += dp[i][j][search];\n\t\t}\n\t}//\u679a\u4e3e\u4f4d\u6570\u4e0d\u8db3len\u7684\u6570\u7801\u4e2d\u6709\u591a\u5c11\u4e2asearch\u6570\u7801\n\tfor (int i = 1; i < digit[len];i++)\n\t{\n\t\tres += dp[len][i][search];//\u4f4d\u6570\u4e3alen\u7684\u6570\u4e2dsearch\u6570\u7801\u7684\u4e2a\u6570\n\t}\n\tfor (int i = len-1; i >= 1;i--)\n\t{\n\t\tll x = digit[i];\n\t\tfor (int j = 0; j < x;j++)\n\t\t\tres += dp[i][j][search];\n\t\tfor (int j = len; j > i ;j--)\n\t\t{\n\t\t\tif(digit[j]==search)\n\t\t\t\tres += digit[i] * ksm(10, i - 1);\n\t\t}\n\t}//\u57fa\u672c\u7684\u6570\u4f4dDP\uff0c\u548c\u4e0a\u9762\u9884\u5904\u7406\u7684\u57fa\u672c\u601d\u8def\u76f8\u540c\n\treturn res;\n}\nint main()\n{\n\tinit();\n\tll l,r;\n\tscanf(\"%lld\", &r);\n\tl = 1;\n\tll ans = 0;\n\tfor (int i = 1; i <= 9; i++)\n\t{\n\t\tans+=(make(r + 1, i) - make(l, i))*i;//\u5206\u522b\u52a0\u4e0a\u6bcf\u4e00\u4e2a\u6570\u7801\u7684\u51fa\u73b0\u6b21\u6570\u4e0e\u8fd9\u4e2a\u6570\u7801\u7684\u503c\u7684\u4e58\u79ef\n\t}\n\tprintf(\"%lld\", ans);\n}\n```\n",
        "postTime": 1603022442,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "[\u98df\u7528\u94fe\u63a5\u5473\u9053\u66f4\u4f73qwq](http://www.cnblogs.com/qbwhtc/p/7570978.html)\n\n# \u672c\u9898\u662f\u8ba9\u6211\u4eec\u6c421~n\u8fd9n\u4e2a\u6570\u6240\u6709\u5355\u4e2a\u6570\u5b57\u7684\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u628a\u6bcf\u4e00\u4f4d\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u7684\u548c\u5148\u6c42\u51fa\u6765\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u4f4d\u7684\u7b54\u6848\u52a0\u8d77\u6765\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\u4e86\u3002\n\n\u6211\u4eec\u5c31\u770b\u201c3456789\u201d\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5b83\u7684\u6700\u9ad8\u4f4d\uff08\u767e\u4e07\u4f4d\uff09\u662f\u4e24\u90e8\u5206\u7684\u548c\uff1a\n\n1. 1000000~1999999\u4e2d\u76841\u548c2000000~2999999\u4e2d\u76842\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**1000000\\*(1+2)**\uff1b\n\n2. 3000000~3456789\u4e2d\u76843\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**(456789+1)\\*3**\u3002\n\n\u505a\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u7565\u5fae\u6478\u7d22\u51fa\u4e00\u4e9b\u89c4\u5f8b\u4e86\uff0c\u6211\u4eec\u5728\u6765\u770b\u4e00\u4e0b\u5341\u4e07\u4f4d\uff1a\n\n1. 100000~2999999\u4e2d\u76841~9\uff0c\u6bcf\u4e2a\u6570\u90fd\u8f6e\u4e863\u6b21\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**100000\\*(1+2+3+...+9)\\*3**\uff1b\n\n2. 3000000~3399999\u4e2d\u76841~3\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**100000\\*(1+2+3)**\uff1b\n\n3. 3400000~3456789\u4e2d\u76844\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**(56789+1)\\*4**\u3002\n\n\u8fd9\u91cc\u6bd4\u6700\u9ad8\u4f4d\uff08\u767e\u4e07\u4f4d\uff09\u7684\u64cd\u4f5c\u591a\u4e86\u4e00\u4e2a\u6b65\u9aa4\uff08\u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u505a\u6ca1\u6709\uff0c\u4f46\u6211\u4e60\u60ef\u5206\u5f00\u6765\u7b97qwq\uff09\uff0c\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u4e07\u4f4d\uff1a\n\n1. 10000~3399999\u4e2d\u76841~9\uff0c\u6bcf\u4e2a\u6570\u8f6e\u4e8634\u6b21\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**10000\\*(1+2+3+...+9)\\*34**\uff1b\n\n2. 3400000~3449999\u4e2d\u76841~4\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**10000\\*(1+2+3+4)**\uff1b\n\n3. 3450000~3456789\u4e2d\u76845\uff0c\u8fd9\u91cc\u7684\u548c\u4e3a**(6789+1)\\*5**\u3002\n\n\u89c4\u5f8b\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6700\u9ad8\u4f4d\u4e24\u6b65\u5904\u7406\uff0c\u800c\u5176\u4ed6\u4f4d\u6839\u636e\u6211\u4eec\u5f97\u51fa\u7684\u89c4\u5f8b\u4e09\u6b65\u5904\u7406\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u5177\u4f53\u7684\u89c4\u5f8b\u5c31\u4e0d\u8bf4\u4e86\uff0c\u53ea\u8981\u770b\u4e0a\u9762\u7684\u4f8b\u5b50\u548c\u4e0b\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u5c31\u53ef\u4ee5\u5dee\u4e0d\u591a\u7406\u89e3\u4e86\u3002\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u5206\u9694\u4e0d\u5b8c\u5168\u7684\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\n\npascal\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvar s:string;\nn,m,i,j,k:longint;\nans:qword;\nbegin\n  readln(n);\n  str(n,s);\n  i:=1;\n  for m:=1 to length(s)-1 do\n  i:=i*10;\n  j:=n div i;\n  n:=n mod i;\n  ans:=i*j*(j-1) div 2+(n+1)*j;\n  for m:=2 to length(s) do\n  begin\n    i:=i div 10;\n    k:=k*10+j;\n    j:=n div i;\n    n:=n mod i;\n    ans:=ans+i*45*k+i*j*(j-1) div 2+(n+1)*j;\n  end;\n  writeln(ans);\nend.\n```",
        "postTime": 1506339977,
        "uid": 7535,
        "name": "beng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u6570\u5b66\u9898\n\n[P1836 \u6570\u9875\u7801](https://www.luogu.com.cn/problem/P1836)\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u5b57\uff0c\u4ed6\u90fd\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u8d21\u732e\uff1a\n\n\u5bf9\u4e8e\u8be5\u4f4d\u524d\u7684\u6570\u5b57\uff0c\u8868\u793a\u4e86\u4ece\u96f6\u5230\u4e5d\uff0c\u8fd9\u4f4d\u6570\u5b57\u5df2\u7ecf\u5b8c\u6574\u7684\u8dd1\u8fc7\u4e86 $num \\div i \\div 10 \\times i \\times \\sum\\limits_{k=1}^{9}k$ \u6b21\uff0c\u9664\u4ee5 $i$ \u518d\u4e58\u4e0a $i$ \u662f\u4e3a\u4e86\u53bb\u9664\u672b\u5c3e\uff08$i$\u8868\u793a\u8fd9\u4f4d\u662f $10^i$\uff09\u3002 \n\n\n\u5bf9\u4e8e\u8be5\u4f4d\u7684\u6570\u5b57\uff0c\u8868\u793a\u4e86\u4ece\u96f6\u5230\u8fd9\u4e2a\u6570\u5b57\u51cf\u4e00\uff0c\u8fd9\u4f4d\u6570\u5b57\u5df2\u7ecf\u5b8c\u6574\u7684\u8dd1\u8fc7\u4e86 $i \\times \\sum\\limits_{k=1}^{num \\div i \\bmod 10 - 1}k$ \u6b21 \n\n\u6700\u540e\u8fd8\u8d21\u732e\u4e86\u8fd9\u4e2a\u6570\u503c\uff0c\u5bf9\u5e94\u8ba1\u7b97\u4e86\uff0c\u5176\u540e\u7684\u6570\u5b57\u7684\u503c\u904d\uff0c\u5373\uff1a$( num \\div i \\bmod 10 ) \\times (num \\bmod i + 1)$\n\n\u6240\u4ee5\u8bf8\u4f4d\u8ba1\u7b97\uff0c\u6bcf\u4e00\u4f4d\u7684\u8d21\u732e\u6c42\u548c\uff1a\n\n# code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\nconst int SIZE = 30;\n\ninline int read()\n{\n\tint x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn f * x;\n}\n\nint n,ans;\nint pre[SIZE];\n\nsigned main()\n{\n\tfor (int i = 1; i <= 9; ++i)\n\t{\n\t\tpre[i] = pre[i-1] + i;\n\t}\n\tn = read();\n\tfor (int i = 1e9; i ; i /= 10)\n\t{\n\t\tif (i > n) continue;\n\t\tint tmp = n / i,sum = 0;\n\t\tint x = tmp / 10;\n\t\tsum += x * i * 45;\n\t\ttmp %= 10;\n\t\tif (tmp != 0) sum += i * pre[tmp-1];\n\t\tsum += tmp * (n % i + 1);\n\t\tans += sum;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1603967351,
        "uid": 415231,
        "name": "nomonick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e00\u9053\u7b80\u6613\u7684\u6570\u4f4ddp\uff0c\u90a3\u6211\u5c31\u7528\u6570\u4f4d\u7684dp\u6253\u4e86\u5427- -\u3002\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\n\u5982\u679cn\u4e3a345\uff0c\u90a3\u4e48ans\u5c31\u7b49\u4e8eans\uff0899\uff09*\uff080 + 1 + 2\uff09+ 3 * 100 + 3 * \uff0845 + 1\uff09 + ans(45);\n\u5f53\u7136\u7528\u6570\u5b66\u8bed\u8a00\u53ef\u4ee5\u63cf\u8ff0\u4e3a ans(abcd) = ans(10^(\u4f4d\u6570 - 1) - 1) * \uff081 + 2 + \u2026 + a\uff09 + a * 10^(\u4f4d\u6570 - 1) + a * (bcd + 1) + ans(bcd);\n\u4e0b\u9762\u5c31\u662f\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\u7684\u610f\u4e49\u4e86\uff0c\n\u5f88\u660e\u663e \u7b2c\u4e00\u4e2a\u90e8\u5206\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u90e8\u5206\u5c31\u662f\u9996\u4f4d\u6570\u5b57\u53d6\u5c0f\u4e8ea\u65f6\u6574\u4e2a\u6570\u5b57\u7684\u8d21\u732e\uff1b\u7b2c\u4e09\u4e2a\u90e8\u5206\u5c31\u662f\u9996\u4f4d\u53d6a\u65f6\uff0c a\u81ea\u5df1\u7684\u8d21\u732e\uff0c\u4e0d\u5305\u62ec\u5c0f\u4e8e \u9996\u4f4d\u7684\u4f4d\u6570 \uff08\u5373bcd\uff09\u7684\u8d21\u732e\uff1b\u7b2c\u56db\u90e8\u5206\u5c31\u662f\u9996\u4f4d\u53d6a\u65f6\uff0c \u5c0f\u4e8e \u9996\u4f4d\u4f4d\u6570\uff08\u5373bcd\uff09\u7684\u8d21\u732e\u3002\n\u5f53\u7136\uff0c\u8fd9\u4e2aans\uff0810^n - 1\uff09\u662f\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u7684\u3002\n\u63a5\u4e0b\u6765\u5c31\u662f\u6109\u5feb\u7684\u4ee3\u7801\u65f6\u95f4\u5566.\n```\n#include<iostream> \n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<set>\n#include<queue> \n#include<algorithm>\n#define ls (k << 1)\n#define rs (ls | 1)\nusing namespace std;\ntypedef long long ll;\nconst int inf = 0x3f3f3f3f;\nconst int N = 2e6 + 5;\nstruct node{\n\tint to, nxt;\n}e[N << 1];\nll dp[15];\nint n;\nchar s[15];\nll dfs(int cur, int len, int t) //dfs\u5c31\u662fans\u51fd\u6570 s[cur] - '0'\u4ee3\u8868\u9996\u4f4d\u6570\u5b57a len\u4ee3\u8868\u5f53\u524d\u6570\u5b57\u4f4d\u6570\uff0ct\u4ee3\u8868\u7684\u662f\u9664\u4e86\u9996\u4f4d\u7684\u5176\u4ed6\u6570\u5b57 \u5373bcd\n{\n\tif (!len)\treturn 0;\n\tt %= (int)pow(10, len - 1);\n\tll ans = 0;\n\tfor (int i = 0; i < s[cur] - '0'; i++)\n\t\tans += i * pow(10, len - 1) + dp[len - 1];\n\treturn ans + dfs(cur + 1, len - 1, t) + (s[cur] - '0') * (t + 1ll); //\n}\nll ans = 0;\nint main()\n{\n\tscanf(\"%s\", s);\n   // n \u5c31\u662f\u8f93\u5165\u6570\u5b57\n\tfor (int i = 0; s[i]; i++)\n\t\tn = n * 10 + s[i] - '0'; \n     \n   //\u8fd9\u4e2a\u5c31\u662f\u9884\u5904\u7406\u8fc7\u7a0b\u5566\uff0cans(10^n - 1) = dp[n]\n\tdp[1] = 45;\n\tfor (int i = 2; i <= 10; i++)\n\t\tfor (int j = 0; j < 10; j++)\n\t\t\tdp[i] += dp[i - 1] + j * pow(10, i - 1);\n            \n\tprintf(\"%lld\\n\", dfs(0, strlen(s), n));\n}\n```\n\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u8fc7\uff0c\u6c42\u6c42\u4e86\u3002~~~\n",
        "postTime": 1603175507,
        "uid": 231906,
        "name": "Bruce__Lee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "\u6b64\u9898\u548c\u6570\u5b57\u7edf\u8ba1\u4e00\u6837\uff0c\u53ea\u9700\u8981\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u6570\u5728\u6570\u4f4d\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5c06\u5176\u8d21\u732e\u4e58\u4e0a $i$ \u5373\u53ef\u3002\n\n\u5b9a\u4e49 $dp_{i,j}$ \u4e3a\u5f53\u524d\u586b\u5230\u7b2c $i$ \u4e2a\u6570\uff0c\u51fa\u73b0\u4e86 $j$ \u6b21\u5f53\u524d\u679a\u4e3e\u7684\u6570\u3002\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u4f4d dp \u53bb\u505a\u3002\u8fd9\u9053\u9898\u751a\u81f3\u8fde\u6280\u5de7\u90fd\u4e0d\u7528\uff0c\u52a0\u4e2a\u8bb0\u5fc6\u5316\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nLL dp[15][15],a[15],n;\n/*\u586bi\u4f4d\u3002\u6709j\u4e2a\u5f53\u524d\u679a\u4e3e\u7684\u6570*/\nLL DP(LL pos,LL lead,LL limit,LL sum,LL prov)\n{\n\tif(pos>n)\treturn sum;\n\tif(!lead && !limit && ~dp[pos][sum])\treturn dp[pos][sum];\n\tLL up=limit?a[n-pos+1]:9,ans=0;\n\tfor(LL i=0;i<=up;++i)\tans+=DP(pos+1,lead && !i,limit && (i==up),sum+(prov==i && (i || (i==0 && !lead))),prov);\n\tif(!limit && !lead)\tdp[pos][sum]=ans;\n\treturn ans;\n}\nLL calc(LL d,LL up)\n{\n\tn=0;\n\tmemset(dp,-1,sizeof dp);\n\tmemset(a,0,sizeof a);\n\tLL tmp=up;\n\twhile(tmp)\ta[++n]=tmp%10,tmp/=10;\n\treturn DP(1,1,1,0,d);\n}\nint main(){\n\tLL l=1,r;\n\tscanf(\"%lld\",&r);\n\tLL ans=0;\n\tfor(LL i=1;i<=9;++i)\tans+=i*(calc(i,r)-calc(i,l-1));\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1597805414,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1836 \u3010\u6570\u9875\u7801\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1836)\n\n\u5178\u578b\u6570\u4f4ddp\uff0c\u800c\u4e14\u4e0d\u7528\u8003\u8651 $0$ \u7684\u4e2a\u6570\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u53ea\u5bf9\u4e8e $0$ \u662f**\u9519\u8bef**\u7684\u6570\u4f4ddp\uff0c\u5bf9\u672c\u9898\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u800c\u4e14\u66f4\u597d\u5199\u3002\uff08\n\n\u901a\u8fc7\u6b64\u9898\uff0c\u5b81\u5c31\u53ef\u4ee5\u5c1d\u8bd5 P2602 [ZJOI2010]\u6570\u5b57\u8ba1\u6570 \u5566\u3002\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=20;\nll l,r,ans[10],lenl,lenr,col,cor,nin[N],tn[N],che[N],f[N][N][N];\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nvoid add(ll nw,ll len){\n//\tcout<<nw<<' '<<len<<endl;\n\tif(nw==0||len==0) return ; \n\tans[nw/tn[len-1]]+=nw%tn[len-1]+1;   //\u589e\u52a0\u9996\u4f4d\u6570\u5b57\u7684\u4e2a\u6570\n\tll en=(nw/tn[len-1]==0); \n\twhile(nw/tn[len-1]==0) len--;   //\u5224\u63890\u5f00\u5934\u7684\n\tif(en){add(nw,len);return ;}\n\tfor(ll i=1;i<(nw/tn[len-1]);i++) ans[i]+=tn[len-1];   //\u589e\u52a0\u9996\u4f4d\u6570\u5b57\u4e2a\u6570 \n\tif(len==1) return ;   //\u6700\u540e\u4e00\u4f4d\u8fd4\u56de \n//\tcout<<nin[len-2]<<' '<<nw/tn[len-1]<<endl;\n\tfor(ll i=0;i<10;i++) ans[i]+=nin[len-2]*(nw/tn[len-1]);   //\u5bf9\u540e\u9762\u7684\u6240\u6709\u6570\u8fdb\u884c\u589e\u52a0 \n\tadd(nw%tn[len-1],len-1);   //\u7ee7\u7eed \n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tnin[0]=tn[0]=1;\n\tfor(ll i=1;i<N;i++) tn[i]=tn[i-1]*10,nin[i]=tn[i]*(i+1);\n\trd(r);l=0;\n\tcol=l;cor=r;\n\twhile(cor){\n\t\tlenr++;\n\t\tcor/=10;\n\t}   //\u6c42l r\u7684\u4f4d\u6570\n\tif(r) add(r,lenr);\n\tll anss=0;\n\tfor(ll i=1;i<10;i++) anss+=ans[i]*i;\n\twr(anss),puts(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1589079626,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u6570\u9875\u7801\u9898\u89e3 \u6570\u4f4ddp"
    }
]