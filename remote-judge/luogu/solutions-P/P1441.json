[
    {
        "content": "\u6b64\u9898\u7684\u89e3\u6cd5\u7c7b\u4f3c\u4e8eNOIP2014\u666e\u53ca\u7ec4T4\uff0c\u601d\u8def\u90fd\u662f\u5148dfs\u679a\u4e3e\u518ddp\u3002\n\n### dfs\u8fc7\u7a0b\n\n\u901a\u8fc7dfs\u8fc7\u7a0b\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u9009\u62e9\u51fa\u6240\u6709\u7684\u53ef\u80fd\u60c5\u51b5\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u60c5\u51b5\u8fdb\u884cdp\u3002\n\n\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n1\uff09\u4ecen\u4e2a\u6570\u5b57\u4e2d\u9009\u53d6n-m\u4e2a\u6570\u5b57\u4fdd\u7559\n\n2\uff09\u4ecen\u4e2a\u6570\u5b57\u4e2d\u9009\u53d6m\u4e2a\u6570\u5b57\u5220\u9664\n\n\u89c2\u5bdf\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5bf9dfs\u8fc7\u7a0b\u8fdb\u884c\u6709\u6548\u6027\u526a\u679d\uff0c\u90a3\u4e48\u65b9\u68482\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u6bd4\u65b9\u68481\uff09\u5c0f\u5f88\u591a\uff0c\u6269\u5c55\u7684\u72b6\u6001\u6570\u91cf\u4e5f\u8f83\u5c0f\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u6bd4\u8f83\u4f18\u7684dfs\u51fd\u6570\uff1a\n\n```cpp\nvoid dfs(int cur,int now)//cur\u4ee3\u8868\u5f53\u524d\u5df2\u7ecf\u9009\u53d6/\u653e\u5f03\u4e86\u591a\u5c11\u4e2a\u781d\u7801\uff0cnow\u4ee3\u8868\u5df2\u7ecf\u653e\u5f03\u4e86\u591a\u5c11\u4e2a\u781d\u7801\n{\n    if(now>m)return;//\u5982\u679c\u5df2\u7ecf\u653e\u5f03\u7684\u781d\u7801\u6570\u8d85\u8fc7\u4e86\u9700\u8981\u653e\u5f03\u7684\u781d\u7801\u6570\uff0c\u526a\u679d\n    if(cur==n){if(now==m)dp();return;}//\u5982\u679c\u641c\u7d22\u5b8c\u540e\u6b63\u597d\u7b26\u5408\u6761\u4ef6\uff0c\u6267\u884c\u4e00\u6b21dp\u8fc7\u7a0b\n    dfs(cur+1,now);//\u4e0d\u653e\u5f03\u5f53\u524d\u7684\u781d\u7801\uff0c\u7ee7\u7eed\u5411\u4e0b\n    tf[cur]=true;//\u7559\u4e0b\u8db3\u8ff9\n    dfs(cur+1,now+1);//\u653e\u5f03\u5f53\u524d\u781d\u7801\n    tf[cur]=false; //\u64e6\u9664\u8db3\u8ff9\n} \n```\n### dp\u8fc7\u7a0b\n\n\u901a\u8fc7dfs\u8fc7\u7a0b\u627e\u5230\u4e00\u79cd\u72b6\u6001\u4ee5\u540e\uff0c\u6c42\u51fa\u4f7f\u7528\u5f53\u524d\u7559\u4e0b\u7684\u8fd9\u4e9b\u781d\u7801\u53ef\u4ee5\u51d1\u51fa\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u91cd\u91cf\uff0c\u6211\u4eec\u901a\u8fc7dp\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u89c2\u5bdf\u9898\u76ee\u53ef\u5f97\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc701\u80cc\u5305\u5b9e\u73b0\u3002\n\n\u5b9a\u4e49f[i][j]\u4e3a\u5f53\u524d\u9009\u53d6\u5230\u4e86\u7b2cj\u4e2a\u781d\u7801\uff0c\u5982\u679c\u901a\u8fc7\u4e4b\u524d\u7684\u781d\u7801\u53ef\u4ee5\u79f0\u91cf\u51fa\u91cd\u91cfi\u90a3\u4e48f[i][j]\u7684\u503c\u4e3atrue\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a f[i][j]=f[i-a[i]][j-1]\n\n\u521d\u59cb\u72b6\u6001\u4e3af[0][j]=true\n\n\u6700\u540ef[i][n]\u4e2dtrue\u7684\u4e2a\u6570\u5c31\u662f\u901a\u8fc7\u8fd9\u4e9b\u781d\u7801\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7684\u91cd\u91cf\u503c\u3002\n\n\u901a\u8fc7\u6eda\u52a8\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5b9a\u4e49\u4e00\u4e2af[i]\u6570\u7ec4\uff0c\u964d\u4f4e\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6ce8\u610f\u6b64\u65f6\u5185\u5c42\u5faa\u73af\u5012\u5e8f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nvoid dp()//\u4e0d\u4f20\u53c2\uff0c\u5168\u90e8\u5b9a\u4e49\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\n{\n    memset(f,0,sizeof f);f[0]=true;ans=0;tot=0;//\u6e05\u96f6\uff0c\u56e0\u4e3a\u53ef\u80fd\u8981\u8c03\u7528\u591a\u6b21\n    for(int i=0;i<n;i++)//\u4ece\u524d\u5230\u540e\u9009\u53d6\u6240\u6709\u7684\u781d\u7801\n    {\n        if(tf[i])continue;//\u5982\u679c\u88ab\u6807\u8bb0\u4e3a\u5df2\u7ecf\u820d\u5f03\u5c31\u8df3\u8fc7\n        for(int j=tot;j>=0;j--)if(f[j]&&!f[j+a[i]])f[j+a[i]]=true,ans++;//\u5426\u5219dp\u5e76\u4e14\u7ef4\u62a4ans\u7684\u503c\n        tot+=a[i];//\u8fd9\u4e2atot\u610f\u4e3a\u5f53\u524df[i]\u4e3a\u771f\u503c\u7684\u6700\u5927\u7684i\uff0c\u6781\u5927\u52a0\u5feb\u4e86dp\u8fc7\u7a0b\n    }\n    ret=max(ans,ret);//\u66f4\u65b0\u6700\u540e\u7684\u7b54\u6848\n}\n```\n\u603b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=22;\nconst int maxm=2010;\nint n,m,a[maxn],ans,tot,ret;\nbool tf[maxn],f[maxm];\nvoid dp()\n{\n    memset(f,0,sizeof f);f[0]=true;ans=0;tot=0;\n    for(int i=0;i<n;i++)\n    {\n        if(tf[i])continue;\n        for(int j=tot;j>=0;j--)if(f[j]&&!f[j+a[i]])f[j+a[i]]=true,ans++;\n        tot+=a[i];\n    }\n    ret=max(ans,ret);\n}\nvoid dfs(int cur,int now)\n{\n    if(now>m)return;\n    if(cur==n){if(now==m)dp();return;}\n    dfs(cur+1,now);\n    tf[cur]=true;\n    dfs(cur+1,now+1);\n    tf[cur]=false; \n} \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)scanf(\"%d\",a+i);\n    dfs(0,0);\n    printf(\"%d\\n\",ret);\n    return 0;\n}\n```",
        "postTime": 1508666836,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u5148%\u4e0b\u7ea2\u540d\u5927\u4f6cpantw\uff0c\u611f\u8c22\u63d0\u4f9b\u601d\u8def\n\n```\n#include <bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\nint n,m;\nint w[30];\nint ans = -inf;\nint count_one(int x)//x\u7684\u4e8c\u8fdb\u5236\u4e2d\u7b2c0\u5230n-1\u4f4d\u4e2d1\u7684\u4e2a\u6570\n{\n    int cnt = 0;\n    for(int i = 0; i <= n - 1; ++i)\n        if(x & (1 << i))//\u6ce8\u610f\u505a\u5b8c\u6309\u4f4d\u4e0e\u540e\u7684\u7ed3\u679c\u4e0d\u662f1\uff0c\u5982\u53ef\u80fd\u4e3a000010000\uff0c\u6240\u4ee5\u4e0d\u8981\u5199\u6210x & (1 << i) == 1\n            cnt++;\n    return cnt;\n}\nint main()\n{\n    cin >> n >> m;\n    //\u6211\u4eec\u5728\u7528\u4e8c\u8fdb\u5236\u5199\u9898\u65f6\uff0c\u4e0b\u6807\u6700\u597d\u4ee50\u5f00\u59cb\n    for(int i = 0; i <= n - 1; ++i)\n        cin >> w[i];\n    //(1 << n) - 1\u7684\u4e8c\u8fdb\u5236\u6709n\u4e2a1\t\n    for(int i = 0; i <= (1 << n) - 1; ++i)\n    {\n    \t//\u5982\u679c\u6b64\u65f6\u7684i\u7684\u4e8c\u8fdb\u5236\u4e2d\u6709n-m\u4e2a1\n        if(count_one(i) == n - m)\n        {\n            bitset<2010> b;\n            b[0] = 1;//\u542b\u4e49\u4e3a\u91cd\u91cf0\u53ef\u4ee5\u88ab\u79f0\u51fa\n            for(int j = 0; j <= n - 1; ++j)\n                if(i & (1 << j))//\u5982\u679ci\u7684\u7b2cj\u4f4d\u4e0a\u662f1\n                    b = b | b << w[j];\n            ans = max(ans,(int)b.count());\n        }\n    }\n    cout << ans - 1 << endl;//\u628a\u91cd\u91cf\u4e3a0\u7684\u60c5\u51b5\u6392\u9664\n    return 0;\n}\n\n```\n\n\n```\nb = b | b << w[j]\n```\n\nb\u7684\u7b2ci\u4f4d\u4e3a1\u8868\u793a\u91cd\u91cfi\u53ef\u4ee5\u88ab\u79f0\u91cf\u51fa\n\n\u6309\u4f4d\u6216\u7684\u529f\u80fd\u662f\u96c6\u5408\u5408\u5e76\n\n\u4e5f\u5c31\u662f\u5c06\u96c6\u5408b\u4e0e\u96c6\u5408b<<w[j]\u5408\u5e76\uff0c\u518d\u8fed\u4ee3\u7ed9b\n\nb<<w[j]\u4f7f\u5f97b\u7684\u6bcf\u4e00\u4e2a\u4e3a1\u7684\u4e8c\u8fdb\u5236\u4f4d\u90fd\u5411\u5de6\u79fb\u52a8\u4e86w[i]\u7684\u8ddd\u79bb\n\n\u5047\u8bbeb\u7684\u7b2ci\u4f4d\u4e3a1\uff0cb<<w[j]\u540eb\u7684\u7b2ci + w[j]\u4f4d\u53d8\u4e3a\u4e861\uff0c\u8868\u793a\u91cd\u91cfi + w[j]\u53ef\u88ab\u79f0\u51fa\n\n\u6700\u540e\u8981\u628a\u7b2c0\u4f4d\u4e0a\u76841\u6392\u9664\u6389",
        "postTime": 1521192374,
        "uid": 41355,
        "name": "stfst",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "bitset\u597d\u9898\u554a\uff01\n\n\n\u9996\u5148\u7528\u4e00\u4e2a0\u5230$2^n-1$\u7684\u5faa\u73af\u679a\u4e3e\u72b6\u6001\uff0c\u7136\u540e\u7528popcount\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\n\u56e0\u4e3aCCF\u89c4\u5b9a\u4e0d\u80fd\u4f7f\u7528\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5185\u5efa\u51fd\u6570\u6240\u4ee5\u6211\u4eec\u53ea\u597d\u81ea\u5df1\u5199\u4e00\u4e2aQAQ \u5b9e\u73b0\u65b9\u6cd5\u89c1\u4ee3\u7801\u3002 ~~\u5176\u5b9e\u4e00\u822c\u90fd\u662f\u625365536\u7684\u8868\u53ea\u662f\u6211\u61d2emmm~~\n\n\n\u5bf9\u4e8e\u6ee1\u8db3\u9650\u5236\u7684\u72b6\u6001\u6211\u4eec\u7528bitset\u5927\u6cd5\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\n\n\n\u5b9e\u73b0\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include <bitset>\n#include <cstdio>\nint w[25];\nint table[16] = {0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4};\nint popcount(unsigned int x) { // \u8fd4\u56dex\u7684\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570\n    int ret = 0;\n    for(int i = 0; i < 8; i++) ret += table[x & 15], x >>= 4;\n    return ret;\n}\nint main() {\n    int n, m, ans = 0;\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 0; i < n; i++) scanf(\"%d\", w + i);\n    for(int i = 0, li = 1 << n; i < li; i++) {\n        if(popcount(i) == n - m) {\n            std::bitset<2010> S;\n            S[0] = 1;\n            for(int j = 0; j < n; j++) if(i & (1 << j)) S |= S << w[j];\n            int siz = S.count();\n            ans = ans > siz ? ans : siz;\n        }\n    }\n    printf(\"%d\\n\", ans - 1);\n    return 0;\n}\n```",
        "postTime": 1517024969,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "## \u5bf9 @hsfzLZH1  \u9898\u89e3\u7684\u5c0f\u90e8\u5206\u7ea0\u6b63\u4e0e\u8865\u5145\u8bf4\u660e\n\nRT\u3002\u76ee\u524d @hsfzLZH1  \u7684\u9898\u89e3\u5f97\u7968\u6700\u9ad8\uff0c\u8bb2\u89e3\u4e5f\u5341\u5206\u5230\u4f4d\uff0c\u5728\u6b64\u8868\u793a\u611f\u8c22\u3002\u7136\u800c\uff0c\u5728 @hsfzLZH1  \u7684\u9898\u89e3\u91cc\uff0c\u6709\u5fae\u5c0f\u7684\u7ec6\u8282\u6ca1\u6709\u5904\u7406\u597d\u3002\n\n-------------\n\n### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u539f\u9898\u89e3\uff1a$f[i][j]=f[i-a[i]][j-1]$,\n\u4e8b\u5b9e\u4e0a\uff0c\u5e94\u4e3a\uff1a\n$f[i][j]=f[i-a[j]][j-1]||f[i][j-1]$\uff0c\u5176\u4e2d$||$\u8868\u793a\u903b\u8f91\u8fd0\u7b97\u201c\u6216\u201d\u3002\n\n**\u8bf4\u660e**\uff1a\n\n- \uff1a\u7c7b\u6bd4\u4e8e\u80cc\u5305\u95ee\u9898\uff0c\u6709\u201c\u9009\u4e0e\u4e0d\u9009\u201d\u7684\u4e24\u79cd\u65b9\u6848\u3002\u6b64\u65f6$f[i-a[j]][j-1]$\u8868\u793a\u9009\u62e9\u7b2c$j$\u4ef6\u7269\u54c1\uff0c\u800c$f[i][j-1]$\u8868\u793a\u4e0d\u9009\u62e9\u7b2c$j$\u4ef6\u7269\u54c1\u3002\u5982\u679c\u8fd9\u4e24\u8005\u4e2d\u6709\u4e00\u4e2a\u6210\u7acb\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97**\u5728\u524d$j$\u4ef6\u7269\u54c1\u4e2d\uff0c\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u781d\u7801\u91cd\u91cf\u8fbe\u5230$i$**\uff0c\u6240\u4ee5\u662f\u903b\u8f91\u8fd0\u7b97\u201c\u6216\u201d\u3002\n\n- @hsfzLZH1  \u7684\u9898\u89e3\u91cc\u6709\u53ef\u80fd\u662f\u7b14\u8bef\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6570\u636e\u6709\u70b9\u6c34\u3002\n\n----------------\n\n### \u5173\u4e8e\u6570\u7ec4\u4e0b\u6807\u95ee\u9898\n\n@hsfzLZH1  \u7684\u9898\u89e3\u6570\u7ec4\u4e0b\u6807\u662f\u4ece\u96f6\u5f00\u59cb\u7684\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4e0b\u6807\u4ece\u4e00\u5f00\u59cb\u7684$dfs$\u8fc7\u7a0b\uff1a\n\n```\nvoid dfs(int certain,int deserted)\n{\n    if(deserted>m)return;\n    if(certain==n)\n    {\n        if(deserted==m)  //dp\n        {\n            memset(f,false,sizeof(f));\n            f[0]=true;int cnt=0;  //init\n            for(int j=1;j<=n;j++)\n            {\n                if(vis[j])continue;\n                for(int i=n*100;i>=a[j];i--)\n                f[i]=f[i-a[j]]||f[i];\n            }\n            for(int w=1;w<=n*100;w++)\n            if(f[w])cnt++;\n            ans=max(ans,cnt);\n        }\n        return;\n    }\n    \n    dfs(certain+1,deserted);\n    vis[certain+1]=true;\n    dfs(certain+1,deserted+1);\n    vis[certain+1]=false;\n}\n```",
        "postTime": 1533280825,
        "uid": 55804,
        "name": "fischl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "dfs+dp\u7684\u7b80\u5355\u9898\u76ee\n\n\u9996\u5148\uff0c\u6839\u636e\u6570\u636e\u8303\u56f4\u6211\u4eec\u53ef\u77e5\uff1a\u6211\u4eec\u53ef\u4ee5\u7528dfs\u679a\u4e3e\u8981\u5220\u9664\u7684$m$\u4e2a\u781d\u7801\u3002\u7531\u4e8e\u8981\u7edf\u8ba1\u4e0d\u540c\u7684\u91cd\u91cf\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u7528dp\u8fdb\u884c\u8fd9\u4e2a\u5904\u7406\u3002\n\n\u6211\u4eec\u5047\u8bbe$f[i][j]$\u8868\u793a\u9009\u5230\u4e86\u7b2c$i$\u4e2a\u781d\u7801\uff0c\u4e4b\u524d\u7684\u781d\u7801\u80fd\u5426\u79f0\u91cf\u5230\u91cd\u91cf$j$\u3002\u5f53\u6ee1\u8db3\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u65f6\u5019$f[i][j]$\u4e3a$1$\u3002\u521d\u59cb\u72b6\u6001\u4e3a$f[i][0]=1$\n\n\u6211\u4eec\u53ef\u4ee5\u63a8\u5f97\u8f6c\u79fb\u65b9\u7a0b\u4e3a$f[i][j]=f[i-1][j-a[i]] | f[i-1][j]$\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f$\\sum f[n]$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u5f53\u662f$C_n^m \\times n \\times \\sum_{i=1}^n a[i]$\uff0c\u7136\u800c\u8dd1\u4e0d\u6ee1\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <cctype>\n\nusing namespace std;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\n\nint n,m;\n\nint a[25],ans=0;\n\nbool f[20050],nouse[20050];\n\ninline void dfs(int cur,int choose)\n{\n\tif (choose>m)\n\t\treturn;\n\tif (cur==n+1)\n\t{\n\t\tif (choose==m)\n\t\t{\n\t\t\tint ret=0;\n\t\t\tmemset(f,0,sizeof(f));\n\t\t\tf[0]=true;\n\t\t\tint tot=0;\n\t\t\tfor (int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif (!nouse[i])\n\t\t\t\t{\n\t\t\t\t\tfor (int j=tot;j>=0;j--)\n\t\t\t\t\t\tif(f[j]&&!f[j+a[i]])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf[j+a[i]]=true;\n\t\t\t\t\t\t\tret++;\n\t\t\t\t\t\t}\n\t\t\t\t\ttot+=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tans=max(ans,ret);\n\t\t}\n\t\treturn;\n\t}\n\tdfs(cur+1,choose);\n\tnouse[cur]=true;\n\tdfs(cur+1,choose+1);\n\tnouse[cur]=false;\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tdfs(1,0);\n\tcout << ans << endl;\n\treturn 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1541741337,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9053\u9898\u4e4b\u524d\u5efa\u8bae\u5148\u770b\u4e00\u4e0bP2347\u8fd9\u4e00\u9053\u9898\uff0c\u603b\u4f53\u601d\u8def\u4e0e\u8fd9\u4e00\u9053\u9898\u5341\u5206\u76f8\u4f3c(\u8fd9\u4e00\u9053\u9898\u4e3b\u8981\u662f\u591a\u4e86\u4e00\u4e2aDFS\u7684\u8fc7\u7a0b)\uff0c\u4e0b\u9762\u6765\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\uff08\u6572\u9ed1\u677f\uff09\uff1a\n\n\u4f7f\u7528\u7684\u7b97\u6cd5\uff1aDFS+DP\uff08\u770b\u5230\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\u5e94\u8be5\u9996\u5148\u60f3\u5230\u7684\u5c31\u5e94\u8be5\u662fDFS\uff09\n\n\u505a\u6cd5\uff1a\u9996\u5148\u901a\u8fc7DFS\u679a\u4e3e\u4e0d\u53d6\u54eaM\u4e2a\u781d\u7801\u7684\u60c5\u51b5\uff0c\u518d\u628a\u6bcf\u79cd\u60c5\u51b5\u4f9d\u6b21DP\uff0c\u7528\u4e00\u4e2ama\u8bb0\u5f55\u6700\u5927\u503c\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\u90e8\u5206\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,a[21],f[2001],b[21],last=0,num=0,ma=0;\nvoid search(int k)\n{\n    if(k==m+1)//\u5f53\u53d6\u51fa\u4e86M\u4e2a\u781d\u7801\u65f6\u5f00\u59cb\u8ba1\u7b97\n    {\n        memset(f,0,sizeof(f));//\u6e05\u96f6\uff01\uff01\uff01\u8fd9\u4e00\u6b65\u4e0d\u80fd\u5fd8\u6389\n        f[0]=1;//\u5f53\u91cd\u91cf\u4e3a0\u65f6\u8981\u8bb0\u4e3a\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u4e0d\u7136\u7ed3\u679c\u6c38\u8fdc\u662f0\n        for(int i=1;i<=n;i++)\n        {\n            if(b[i]==0)//\u5982\u679c\u8fd9\u4e2a\u781d\u7801\u6ca1\u6709\u88ab\u62ff\u8d70\n            {\n                for(int j=2000;j>=0;j--)//\u5fc5\u987b\u5012\u53d9\uff01\u4e0d\u7136\u53ef\u80fdf[4]\u7528\u4e864g\u7684\u781d\u7801\uff0cf[8]\u7684\u65f6\u5019\u53c8\u628a4g\u7684\u781d\u7801\u62ff\u51fa\u6765\u7528\u4e00\u904d\n                {\n                    if(j+a[i]<=2000&&f[j]!=0)//\u5982\u679c\u8fd9\u4e2a\u91cd\u91cf\u53ef\u4ee5\u53d6\u5230\u4e14\u52a0\u4e0a\u65b0\u781d\u7801\u540e\u91cd\u91cf\u5c0f\u4e8e\u7b49\u4e8e\u6700\u5927\u91cd\u91cf\uff08max_n*max_a[I]=2000)\n                    {\n                        f[j+a[i]]=1;//\u6807\u8bb0\u52a0\u4e0a\u781d\u7801\u540e\u7684\u91cd\u91cf\u4e5f\u53ef\u4ee5\u53d6\u5230\n                    }\n                }\n            }\n        }\n        num=0;\n        for(int i=1;i<=2000;i++)//\u770b\u54ea\u4e9b\u91cd\u91cf\u53ef\u4ee5\u53d6\u5230\n            if(f[i])\n                num++;\n        if(num>ma)//\u8bb0\u5f55\u6700\u5927\u503c\n            ma=num;\n        return;\n    }\n    for(int i=last+1;i<=n;i++)//\u679a\u4e3e\u53d6\u781d\u7801\u7684\u60c5\u51b5\uff08\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u987a\u6b21\u679a\u4e3e\uff0c\u51cf\u5c11\u8017\u65f6\uff09\n    {\n        b[i]=1;//\u8bb0\u5f55\u4e3a\u53d6\u8fc7\u4e86\n        last=i;//\u8bb0\u5f55\u53d6\u5230\u54ea\u4e00\u4e2a\u4e86\n        search(k+1);//\u63a5\u7740\u5f80\u4e0b\u53d6\n        b[i]=0;//\u56de\u6eaf\n    }\n}\nint main()\n{\n    //freopen(\"a.in\",\"r\",stdin);\n    //freopen(\"a.out\",\"w\",stdout);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];//\u8bfb\u5165\n    search(1);//\u679a\u4e3e\u6bcf\u79cd\u60c5\u51b5\n    cout<<ma;\n    return 0;\n} \n```",
        "postTime": 1510209324,
        "uid": 38037,
        "name": "Eraxyso",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a$01$ \u80cc\u5305\u65b9\u6848\u6570 + bitset + \u5b50\u96c6\u679a\u4e3e\u3002\n\n\u9996\u5148\u6211\u7684 dfs \u83dc\u7684\u4e00\u5339\uff0c\u6240\u4ee5\u8bf4\u4e00\u770b\u8fd9\u9053\u9898\u6211\u5c31\u653e\u5f03\u4e86 dfs\u3002\n\n\u6211\u4eec\u8003\u8651\u5b50\u96c6\u679a\u4e3e\u9009\u53d6 $n-m$ \u4e2a\u7269\u54c1\u65f6\u7684\u72b6\u6001\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u8fdb\u884c\u4e00\u6b21 $bool$ \u7c7b\u578b\u7684 $01$ \u80cc\u5305\uff0c\u6700\u540e\u7edf\u8ba1 $\\max$ \u5373\u53ef\u3002\n\n\u4f46\u662f\u663e\u7136\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230\n\n$$\nT(n) = 2^n \\times (n \\sum a_i + 3n) -> \\Theta(2^nn\\sum a_i)\n$$\n\n\u5176\u4e2d\u7b2c\u4e00\u9879\u662f\u679a\u4e3e\u5b50\u96c6\u7684\u590d\u6742\u5ea6\uff0c\u4e4b\u540e\u662f $01$ \u80cc\u5305\u65b9\u6848\u6570 + \u626b\u4e00\u904d + \u6e05\u96f6+\u6c42\u51fa\u80cc\u5305\u5bb9\u91cf $t$ \u7684\u590d\u6742\u5ea6\u3002 \n\n\u663e\u7136\u4e0d\u8db3\u4ee5 $1s$ \u8fc7\u3002\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u601d\u8003\u4e00\u4e2a\u7b80\u5355\u7684\u4f18\u5316\uff0c\u6211\u4eec\u679a\u4e3e\u72b6\u6001\u4ece `1 <<(n - m - 1)` \u5f00\u59cb\uff0c\u56e0\u4e3a\u5f53\u4f4d\u6570\u5c0f\u4e8e $n - m$ \u65f6\uff0c\u6c38\u8fdc\u9009\u4e0d\u591f $n-m$ \u4e2a\u3002\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u72b6\u6001\u7684 $1$ \u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u6709 \n\n$$\n\n\\begin{aligned}\nT(n) &= 2^n-2^{n-m}  +C_{n}^{m}\\cdot  (n \\sum a_i + 3n) \n\\\\\n&=\\Theta(\\max(2^n - 2^{n-m}, C_{n}^{m} \\cdot n\\sum a_i))\n\\end{aligned}\n$$\n\n\u597d\u50cf\u8fd8\u53ef\u4ee5\u7684\u5427\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u6211\u4eec\u8fd8\u53ef\u4ee5\u66f4\u4f18\uff0c\u6211\u4eec\u76f4\u63a5\u8003\u8651\u7528$bitset$\u4f5c\u4e3a$dp$\u6570\u7ec4\uff0c\u7136\u540e\u5c31\u4f1a\u6709 $3 \\cdot\\frac{n}{32}$ \u7684\u68c0\u6d4b\u4ee3\u4ef7\uff0c\u597d\u50cf\u53ef\u4ee5\u4f18\u5316\u4e9b\u5e38\u6570\u3002\n\n\u6700\u540e\u6211\u8fd8\u7528\u4e86\n\n```cpp\ninline int max(int a, int b) {return b - (b - a & (b - a >> 31));}\n```\n\n\u7684\u6bd2\u7624\u4f18\u5316\uff0c\u4f46\u662f\u4f9d\u65e7\u5f88\u6162\u2014\u2014\u4e0d\u8fc7\u8fd9\u4e0d\u80fd\u963b\u6b62\u4eba\u7c7b\u5426\u5b9a$dfs$\u7684\u4e00\u5bb6\u72ec\u5927\u3002\n\n$qwq$\n\n```cpp\n#include <bitset>\n#include <cstdio>\n#include <iostream>\n#define MAX 5000\nusing namespace std ;\nint i, j, k, d, t ; bitset <MAX> dp ; \nint N, M, base[MAX], Len[MAX << 8], Max, Ans ; \n\ninline int max(int a, int b) {return b - (b - a & (b - a >> 31));}\nint main(){\n\tcin >> N >> M ; d = N - M, Max = (1 << N) - 1 ;\n\tfor (i = 1 ; i <= N ; ++ i) cin >> base[i] ;\n\tfor (i = 1 ; i <= Max ; ++ i) Len[i] = Len[i - (i & -i)] + 1 ;\n\tfor (i = 1 << d - 1; i <= Max ; ++ i){\n\t\tif(Len[i] == d){\n\t\t\tdp.reset(), dp[0] = 1, t = 0 ; \n\t\t\tfor (j = 0 ; j < N ; ++ j) t += (1 << j & i) ? base[j + 1] : 0 ;\n\t\t\tfor (k = 0 ; k < N ; ++ k) \n\t\t\t\tfor (j = t ; j >= base[k + 1] ; -- j)\n\t\t\t\t\tdp[j] = (1 << k & i) ? dp[j] : (dp[j] | dp[j - base[k + 1]]) ; \n\t\t\tAns = max(Ans, (int)dp.count() - 1) ;\n\t\t}\n\t} \n\tcout << Ans << endl ; return 0 ; \n}\n```\n\n\n\n# $by \\ \\ Flower\\_ pks$\n\n\u4f5c\u8005\u6b63\u5728\u594b\u529b\u5361\u5e38\u4e2d\u3002\u3002\u3002\n",
        "postTime": 1539345144,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u9898\u76ee\u7684\u6807\u7b7e\u662f\u641c\u7d22\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97\u641c\u7d22\u7684\u8fc7\u7a0b\u662f\u633a\u7b80\u5355\u7684\uff0c\u5012\u662fdp\u7684\u8fc7\u7a0b\u5361\u4e86\u5f88\u957f\u65f6\u95f4\u3002\n\n\u641c\u7d22\u7684\u8fc7\u7a0b\u662f\u6734\u7d20\u7684dfs\uff0c\u9009\u591f\u4e86\u9700\u8981\u5220\u53bb\u7684\u5c31dp\u4e00\u6b21\uff0c\u6ca1\u6709\u9009\u591f\u5219\u5411\u4e0b\u641c\u7d22\uff0c\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u53d1\u73b0\u5269\u4e0b\u7684\u53ef\u4ee5\u9009\u62e9\u7684\u5df2\u7ecf\u5c11\u4e8e\u8fd8\u9700\u8981\u9009\u62e9\u7684\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\u627e\u5230\u5408\u9002\u7684\u7ed3\u679c\uff0c\u526a\u679d\u5373\u53ef\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2adp\u849f\u84bb\uff0c\u6211\u7740\u91cd\u5199\u4e86dp\u7684\u8fc7\u7a0b\uff0c\u591a\u6709\u758f\u6f0f\uff0c\u656c\u8bf7\u8c05\u89e3\u3002\n\n\u9996\u5148\u8003\u8651\u5230\u7684\u662f\u5c06\u6240\u6709\u53ef\u4ee5\u7528\u7684\u91cd\u91cf\u7ec4\u5408\uff0c\u6700\u540e\u53c8\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u5c31\u6709\u51e0\u79cd\u3002\n\n\u9762\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c\u4e3a\u4e86\u907f\u514d\u8d85\u65f6\uff0c\u5f88\u81ea\u7136\u60f3\u5230\u80fd\u5426\u7528dp\u7684\u601d\u60f3\u89e3\u9898\u3002\n\n\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u7528dp\u6570\u7ec4\u5b58\u6bcf\u4e2a\u781d\u7801\u7684\u6807\u53f7\uff0c\u5c1d\u8bd5\u4ee5\u540e\u53d1\u73b0\u5e76\u4e0d\u5bb9\u6613\u627e\u5230\u8f6c\u79fb\u65b9\u7a0b\uff0c\u540e\u6765\u60f3\u5230\u80fd\u5426\u7528dp\u6570\u7ec4\u5b58\u5df2\u7ecf\u627e\u5230\u7684\u8d28\u91cf\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53\u5916\u5c42\u5faa\u73af\u6765\u786e\u5b9a\u6bcf\u4e00\u4e2a\u653e\u5165\u7684\u5143\u7d20\u65f6\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u653e\u5165\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5c1d\u8bd5\uff09\uff0c\u8fd9\u65f6\u5185\u5c42\u679a\u4e3e\u53ef\u80fd\u7684\u8d28\u91cf\uff0c\u5982\u679c\u5f53\u524d\n\u679a\u4e3e\u5230\u7684\u8d28\u91cf\u53bb\u6389\u8fd9\u4e2a\u781d\u7801\u7684\u8d28\u91cf\u540e\u7684\u90a3\u4e2a\u8d28\u91cf\u6ca1\u6709\u88ab\u6807\u8bb0\u4e3a\u627e\u8fc7\uff0c\u8fd9\u4e2a\u679a\u4e3e\u5230\u7684\u8d28\u91cf\u4e5f\u662f\u4e0d\u80fd\u6807\u8bb0\u4e3a\u53ef\u4ee5\u5f97\u5230\u7684\uff1b\u5982\u679c\u4e4b\u524d\u90a3\u4e2a\u8d28\u91cf\u5df2\n\u7ecf\u627e\u5230\u8fc7\uff0c\u52a0\u4e0a\u5f53\u524d\u7684\u8d28\u91cf\u4e5f\u662f\u53ef\u4ee5\u6807\u8bb0\u4e3a\u53ef\u4ee5\u5f97\u5230\uff0c\u7b54\u6848\u4fbf\u53ef\u4ee5+1\u3002\n\ndp\u8fd8\u6709\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u5374\u5bb9\u6613\u5ffd\u7565\u7684\uff0c\u8fb9\u754c\u6761\u4ef6\uff0c\u8fd9\u4e2a\u662f\u975e\u5e38\u9700\u8981\u4ed4\u7ec6\u601d\u8003\u7684\uff0c\u7a0d\u5fae\u758f\u5ffd\u5c31\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u3002\u5173\u4e8e\u8fd9\u9053\u9898\u7684\u8fb9\u754c\u6761\u4ef6\uff0c\u5176\u5b9e\u4e5f\u4e0d\u96be\u7406\u89e3\uff0c\u5f53\u679a\u4e3e\u7684\u8d28\u91cf\u6070\u597d\u7b49\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\u781d\u7801\u7684\u8d28\u91cf\u65f6\uff0c\u76f8\u5f53\u4e8e\u53ea\u8981\u8fd9\u4e00\u4e2a\u781d\u7801\uff0c\u663e\u7136\u8fd9\u4e2a\u8d28\u91cf\u662f\u53ef\u4ee5\u5f97\u5230\u7684\uff0c\u8fd9\u65f6dp\u6570\u7ec4\u9700\u8981\u6807\u8bb0\u4e3atrue\uff0c \n\u8fd9\u65f6\u8fd9\u4e2a\u72b6\u6001\u7531\u4ec0\u4e48\u8f6c\u79fb\u800c\u6765\u5462\uff0c\u4fbf\u662ff[j-a[i]]\uff08j==a[i]\uff09\u5373f[0]\uff0c\u8fd9\u6837\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u8981\u628af[0]\u6807\u8bb0\u4e3atrue\uff0c\u8fd9\u4fbf\u662f\u8fd9\u9053\u9898\u7684\u8fb9\u754c\u6761\u4ef6\u3002\n\n\u8fd9\u9053\u9898\u91cc\u8fd8\u6709\u5f88\u591a\u5f88\u591a\u7ec6\u8282\u6211\u8fd9\u91cc\u6ca1\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u4f46\u90fd\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u8fd8\u8bf7\u5927\u5bb6\u81ea\u5df1\u591a\u591a\u601d\u8003\uff0c\u6bd4\u5982\u5012\u53d9\u679a\u4e3ej\uff08\u7c7b\u4f3c\u80cc\u5305\uff09\u7b49\u7b49\u3002\n\n\u8fd9\u9053\u9898\u7ed9\u6211\u7684\u6700\u5927\u611f\u89e6\u662f\uff0cdp\u7684\u8fc7\u7a0b\u5341\u5206\u7684\u7cbe\u7ec6\uff0c\u7a0d\u5fae\u5dee\u4e00\u70b9\u5c31\u53ef\u80fd\u5bfc\u81f4\u7ed3\u679c\u9519\u8bef\uff0c\u7eb5\u4f7f\u601d\u8003\u7684\u8fc7\u7a0b\u53ef\u80fd\u6709\u70b9\u590d\u6742\uff0c\u4e00\u5b9a\u8981\u8010\u5fc3\u575a\u6301\u5230\u6700\u540e\uff0c\u5982\u6b64\u624d\u80fd\u5199\u597d\u52a8\u6001\u89c4\u5212~~\u8fd9\u4e00\u7384\u5b66\u7684\u7b97\u6cd5~~\u3002 \n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint a[1000],ans[1000],num=0,n=0,m=0,maxn=0,sum=0;\nbool f[10000],useable[200];\nvoid work()\n{\n\tmemset(useable,0,sizeof(useable));\n\tmemset(f,0,sizeof(f));\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tuseable[ans[i]]=1;\n\t}\n\tf[0]=1;\n\tint now=0;\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tif(useable[i]==1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=sum; j>=a[i]; j--)\n\t\t{\n\t\t\tif(f[j-a[i]]&&!f[j])\n\t\t\t{\n\t\t\t\tf[j]=1;\n\t\t\t\tnow+=1;\n\t\t\t}\n\t\t}\n\t}\n\tmaxn=max(maxn,now);\n}\nbool visited[100]= {0};\nvoid dfs(int cnt,int last)\n{\n\tif(cnt==m+1)\n\t{\n\t\twork();\n\t\treturn;\n\t}\n\tif(n-last<m-cnt)\n\t{\n\t\treturn;\n\t}\n\tfor(int i=last; i<=n; i++)\n\t{\n\t\tif(visited[i]==0)\n\t\t{\n\t\t\tans[cnt]=i;\n\t\t\tvisited[i]=1;\n\n\t\t\tdfs(cnt+1,i+1);\n\n\t\t\tvisited[i]=0;\n\t\t\tans[cnt]=0;\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tcin>>a[i];\n\t\tsum+=a[i];\n\t}\n\tsort(a+1,a+1+n);\n\tdfs(1,1);\n\tcout<<maxn;\n\treturn 0;\n}\n```\n",
        "postTime": 1566377702,
        "uid": 115652,
        "name": "littlegagaduck",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "#### DP\u662f\u4e0d\u53ef\u80fdDP\u7684\uff0c\u8fd9\u8f88\u5b50\u4e0d\u53ef\u80fdDP\u7684\uff0c\u53ea\u6709\u6253\u6253\u6a21\u62df\u961f\u5217\u624d\u80fd\u7ef4\u6301\u7684\u4e86\u751f\u6d3b\u7684\u6837\u5b50\uff0cDP\u8d85\u96be\u8c03\u7684\uff0c\u4e00\u70b9\u90fd\u4e0d\u597d\u73a9\uff08~~\u8fd8\u662f\u8981\u5b66\u768423333~~\uff09\n\n\u5728\u7ecf\u5386\u4e86\u4e8c\u7ef4dp\u8c03\u4e0d\u597d\uff0c\u4e00\u7ef4dp\u770b\u4e0d\u61c2\uff0cbitset\u5565\u73a9\u610f\u7684\u61f5\u26aa\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u5c1d\u8bd5\u4e00\u4e0b\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u3002\u3002\n\n\u611f\u8c22@WLZS \u63d0\u4f9b\u7684\u6df1\u641c\u526a\u679d\u601d\u8def\uff0c\u51fa\u73b0\u4e8660->AC\u7684\u5947\u8ff9\u3002\n\n\u8bf4\u4e00\u8bf4\u601d\u8def\u5427\uff0c\n\n1. \u6df1\u641c\u5168\u6392\u5217\u53bb\u6389\u781d\u7801\uff08\u8bb0\u5f97\u526a\u679d\u53d8\u6210\u7ec4\u5408\u5426\u521960\u5206TLE\uff09\n2. \u781d\u7801\u79f0\u91cd\u8fc7\u7a0b\uff1a\n\t1. \u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u53bb\u6389\u7684\u781d\u7801\uff0c\u52a0\u5165\u961f\u5217\n    2. \u62ff\u4e00\u4e2a\u781d\u7801\uff0c\u548c\u5df2\u7ecf\u52a0\u5165\u961f\u5217\u7684\u91cd\u91cf\u76f8\u52a0\uff0c\u6700\u540e\u81ea\u5df1\u52a0\u5165\u961f\u5217\uff08\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u4e0d\u5148\u52a0\u5165\u961f\u5217\uff09\n    3. \u91cd\u590d\u4e0a\u4e00\u6b65\uff0c\u52a0\u5b8c\u540e\u66f4\u65b0\u7b54\u6848\u7684\u503c\n\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801\u90e8\u5206\n\n\n\u4ee3\u7801\u4e2d\u53d8\u91cf\u8bf4\u660e\n\n```cpp\n/*\u5168\u5c40\u53d8\u91cf*/\nint w[25];  \t//\u781d\u7801\u91cd\u91cf\nint vis[25]; \t//dfs\u6807\u8bb0\u8be5\u781d\u7801\u662f\u5426\u5df2\u7ecf\u53d6\u8d70\nint all; //\u6240\u6709\u781d\u7801\u91cd\u91cf\uff0c\u7528\u4e8e\u526a\u679d\n/*int dfs(int step,int now,int b)*/\nint step;\t//\u641c\u7d22\u5230\u54ea\u4e00\u6b65 \nint now; \t//\u5269\u4e0b\u7684\u8d28\u91cf\nint b;    \t//\u6807\u8bb0\u4ece\u54ea\u4e2a\u5750\u6807\u5f00\u59cb\u641c\u7d22\nint last;  \t//\u6807\u8bb0\u4e0a\u6b21\u641c\u7d22\u7684\u5750\u6807\uff0c\u7528\u4e8e\u526a\u679d\n/*void check()*/\nint book[2005]; \t//\u6807\u8bb0\u91cd\u91cf\u662f\u5426\u51fa\u73b0\u8fc7\nint mark[25];\t\t//\u6807\u8bb0\u8be5\u781d\u7801\u662f\u5426\u53ef\u7528\nint que[2005];   \t//\u52a0\u6cd5\u961f\u5217\n```\n\n\n----------------------------------------------- AC\u4ee3\u7801 ? -----------------------------------------------\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m, w[25], vis[25], ans, all;\nvoid dfs(int step, int now, int b);\nvoid check()\n{\n    int book[2005] = {0};\n    int que[2005] = {0};\n    int mark[25] = {0};\n    int tans = 0;\n    for (int i = 1; i <= n; i++)\n        if (vis[i])\n            mark[i] = 1;  //\u6211\u4eec\u7528\u4e00\u4e2amark\u6570\u7ec4\u6765\u5224\u5b9a\u5f53\u524d\u60c5\u51b5\u4e0b\u53ef\u7528\u7684\u781d\u7801\n    int tail, start;\n    tail = 1;\n    for (int i = 1; i <= n; i++)\n    {\n        if (!vis[i])\n        {\n            start = i;  //start\u4e3a\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u52a0\u5165\u961f\u5217\u7684\u781d\u7801\u4e0b\u6807\n            break;\n        }\n    }\n    mark[start] = 1;\n    que[tail] = w[start];\n    book[w[start]] = 1;\n    tail++;  //\u961f\u5217\u521d\u59cb\u5316\u64cd\u4f5c ?\n    tans++;\n    for (int i = start + 1; i <= n; i++)\n    {\n        if (!mark[i])\n        {\n            mark[i] = 1;\n            int temp = tail - 1; //temp\u4e3a\u5f53\u524d\u961f\u5217\u957f\u5ea6\u503c\n            for (int j = 1; j <= temp; j++)\n            {\n                int t = w[i] + que[j];\n                if (!book[t])  //\u5982\u679c\u8be5\u503c\u6ca1\u6709\u51fa\u73b0\u5c31\u52a0\u5165\u961f\u5217\u5e76\u4e14 tans++\n                {\n                    book[t] = 1;\n                    que[tail] = t;\n                    tail++;\n                    tans++;\n                }\n            }\n            if (!book[w[i]]) //\u7ed3\u675f\u540e\u628a\u81ea\u5df1\u52a0\u5165\u961f\u5217\n            {\n                book[w[i]] = 1;\n                que[tail] = w[i];\n                tail++;\n                tans++;\n            }\n        }\n    }\n    ans = max(ans, tans);\n}\nvoid dfs(int step, int now, int b)\n{\n    if (now <= ans) //\u5982\u679c\u5f53\u524d\u503c\u5c0f\u4e8e\u7b54\u6848\u503c\uff0c\u526a\u679d\uff08\u597d\u50cf\u4f5c\u7528\u4e0d\u5927\uff09\n        return;\n    if (step == m + 1)\n    {\n        check();\n        return;\n    }\n    int last = 0;\n    for (int i = b; i <= n; i++)\n    {\n        if (!vis[i] && w[i] != w[last]) //\u4f5c\u7528\u5f88\u5927\u7684\u4e00\u4e2a\u526a\u679d\uff0c\u53ef\u4ee5\u9632\u6b62\u51fa\u73b0\u4e24\u4e2a\u76f8\u540c\u7684\u5e8f\u5217\n        {\n            vis[i] = 1;\n            dfs(step + 1, now - w[i], i + 1);\n            vis[i] = 0;\n            last = i;\n        }\n    }\n}\nint main()\n{\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        cin >> w[i], all += w[i];\n    sort(w + 1, w + n + 1); //\u6392\u5e8f\u4fdd\u8bc1\u6df1\u641c\u7684\u5355\u8c03\u6027\n    dfs(1, all, 1);\n    cout << ans;\n    return 0;\n}\n```\n------------\n~~\u901a\u8fc7\u6211\u5bf9\u6d1b\u8c37IDE\u7684\u6d4b\u8bd5\uff0c\u53d1\u73b0\u540c\u6837\u7684\u4ee3\u7801\uff0cc++11\u6bd4\u5176\u4ed6\u7684\u5feb\u5f88\u591a\uff0c\u4e0d\u77e5\u9053CCF\u8bc4\u6d4b\u673a\u662f\u600e\u6837\u3002\u3002~~\n\n\u4ee5\u4e0a",
        "postTime": 1541423647,
        "uid": 86242,
        "name": "Ch4rc0al",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "### \u4e3b\u8981\u601d\u8def\n\n1\u3001\u8f93\u5165(\u4e0d\u591a\u8bf4\u4e86);\n\n2\u3001\u7528 DFS(\u6df1\u641c)\u679a\u4e3e\u51fan-m\u4e2a\u781d\u7801,\u5b58\u50a8\u5728b\u6570\u7ec4\u4e2d;\n\n3\u3001\u518d\u7528\u4e00\u4e2a DFS \u679a\u4e3e\u51fa\u5269\u4e0b\u781d\u7801\u80fd\u591f\u79e4\u51fa\u7684\u91cd\u91cf,\u5b58\u653e\u5728\u8bb0\u5fc6\u5316\u6570\u7ec4(c\u6570\u7ec4)\u4e2d;\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n4\u3001\u7edf\u8ba1\u51fa\u91cd\u91cf\u6570,\u5b58\u50a8\u6700\u5927\u503c;\n\n5\u3001\u8f93\u51fa\u3002\n\n### \u5949\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint Max,n,m,Ans,k,MaxMax;\n/*\n\tMax\u7528\u4e8e\u7b2c\u4e8c\u4e2aDFS\u4e2d,\u7528\u4e8e\u5b58\u50a8\u5f53\u524d\u91cd\u91cf\u79cd\u6570\n\tMaxMax\u7528\u4e8e\u5b58\u50a8\u6700\u5927\u79cd\u6570\u7684\u5927\u5c0f\n\tn\u4ee3\u8868\u6709n\u4e2a\u781d\u7801\n\tm\u4ee3\u8868\u4ecen\u4e2a\u781d\u7801\u4e2d\u53bb\u9664m\u4e2a\u781d\u7801\n\tk\u4ee3\u8868n-m,\u8868\u793an\u4e2a\u781d\u7801\u53bb\u9664m\u4e2a\u540e,\u5269\u4f59\u7684\u781d\u7801\u6570\u91cf\n\tAns\u8868\u793a\u5f53\u524d\u781d\u7801\u91cd\u91cf\u4e4b\u548c\n*/\nint a[109],b[109],c[2009],d[109][2009];\n/*\n\ta[i]\u7528\u6765\u5b58\u50a8\u7b2ci\u4e2a\u781d\u7801\u7684\u91cd\u91cf\n\tb[i]\u7528\u6765\u5b58\u50a8\u88ab\u9009\u4e2d\u7684\u781d\u7801\u91cd\u91cf\n\tc[i]\u8868\u793a\u5728b[]\u6570\u7ec4\u4e2d,\u91cd\u91cf\u4e3ai\u7684\u65b9\u6848\u662f\u5426\u5b58\u5728\n\td[i][j]\u8868\u793a\u5728b[]\u6570\u7ec4\u7684\u524di\u4e2a\u781d\u7801,\u662f\u5426\u6709\u79f0\u51fa\u8fc7\u91cd\u91cf\u4e3aj\u7684\u65b9\u6848\n*/\nbool f[109];\n/*\n\tf[i]\u8868\u793a\u5728\u679a\u4e3e\u9009\u4e2d\u781d\u7801DFS\u4e2d,\u7b2ci\u4e2a\u781d\u7801\u662f\u5426\u88ab\u9009\u4e2d\u8fc7,\u786e\u4fdd\u4e86\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\n*/\nvoid DFS1(int number,int Mark)//number\u4ee3\u8868\u679a\u4e3e\u5230\u7b2c\u51e0\u4e2a\u5b58\u5165b[]\u6570\u7ec4\u7684\u781d\u7801,Mark\u4ee3\u8868\u5f53\u524d\u91cd\u91cf\n{\n    if(number>k)//\u82e5\u5df2\u7ecf\u9009\u5b8c\u4e86n-m\u4e2a,\u5219\u5c06\u91cd\u91cf\u4f5c\u4e3a\u4e0b\u6807\u5b58\u5165c[]\u6570\u7ec4\n    {\n        c[Mark]=1;\n        return;\n    }\n    if(d[number][Mark]==1) return;//\u526a\u679d\n    d[number][Mark]=1;//\u6807\u8bb0\n    DFS1(number+1,Mark);//\u4e0d\u9009,\u5f53\u524d\u91cd\u91cf\u4e0d\u53d8,\u5c06number\u6307\u5411\u4e0b\u4e00\u4e2a\u5f85\u5224\u65ad\u7684\u781d\u7801\n    DFS1(number+1,Mark+b[number]);//\u9009,\u5f53\u524d\u91cd\u91cf\u52a0\u5f53\u524d\u781d\u7801\u91cd\u91cf,\u5e76\u5c06number\u6307\u5411\u4e0b\u4e00\u4e2a\u5f85\u5224\u65ad\u7684\u781d\u7801\n}\nvoid DFS(int step,int last)//step\u8868\u793a\u9009\u5230\u7b2c\u51e0\u4e2a\u781d\u7801,last\u662f\u7528\u6765\u4f18\u5316\u7684,\u4ee3\u8868\u4ece\u7b2c\u51e0\u4e2a\u781d\u7801\u5f00\u59cb\u9009\n{\n    if(step==k)//\u5982\u679c\u6570\u91cf\u5230\u8fben-m(\u5c31\u662fk)\u5c31\u8fdb\u5165\u4e0b\u4e00\u4e2aDFS\n    {\n        DFS1(1,0);//\u5c06\u5b58\u5165b[]\u6570\u7ec4\u7684\u781d\u7801\u80fd\u79f0\u51fa\u7684\u91cd\u91cf\u4f5c\u4e3a\u4e0b\u6807\u5b58\u5165c[]\u6570\u7ec4\n        memset(d,0,sizeof(d));//\u6e05\u96f6\n        for(int i=1;i<=Ans;++i)\n            if(c[i]!=0) ++Max;//\u7b97\u51fa\u91cd\u91cf\u79cd\u6570\n        memset(c,0,sizeof(c));\n        if(Max>MaxMax) MaxMax=Max;\n        //\u66f4\u65b0\u6700\u5927\u503c\n        Max=0;\n        //\u5c06\u5f53\u524d\u503c\u6e050\n        return;\n    }\n    //\u82e5\u8fd8\u6ca1\u9009\u5b8c\n    for(int i=last+1;i<=n;++i)//\u679a\u4e3elast+1\u81f3n\u7684\u781d\u7801\n    {\n        if(f[i]==false) continue;//\u5982\u679c\u7b2ci\u4e2a\u781d\u7801\u88ab\u9009\u8fc7\u5219\u8df3\u8fc7,\u9009\u4e0b\u4e00\u4e2a\u781d\u7801\n        ++step;\n        b[step]=a[i];//\u5c06\u9009\u4e2d\u781d\u7801\u7684\u91cd\u91cfa[i]\u5b58\u5165b[step],step\u8868\u793a\u5f53\u524d\u5df2\u9009\u4e86\u51e0\u4e2a\u781d\u7801\n        f[i]=false;//\u6807\u8bb0\n        DFS(step,i);//\u5411\u66f4\u6df1\u7684\u5730\u65b9\u7ee7\u7eed\u641c\u7d22\n        f[i]=true;\n        b[step]=0;\n        step--;//\u56de\u6eaf\n    }\n}\nint main()\n{\n    cin>>n>>m;//\u8bfb\u5165n,m\n    k=n-m;\n    //\u7b97\u51fa\u5269\u4f59\u7684\u781d\u7801\u6570\u91cf(\u641c\u7d22\u4e0a\u9650)\n    memset(f,true,sizeof(f));\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%d\",&a[i]);//\u8bfb\u5165a[i]\n        Ans+=a[i];//\u7d2f\u52a0\n    }\n    sort(a+1,a+n+1);\n    //\u6392\u4e0b\u5e8f,\u66f4\u5229\u4e8e\u6570\u636e\u7684\u5904\u7406\n    DFS(?,?);//\u8bfb\u8005\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e4b\u524d\u7684\u6ce8\u91ca\u5e76\u81ea\u5df1\u60f3\u4e00\u60f3\u8fd9\u91cc\u586b\u4ec0\u4e48\n    //\u4ece\u7b2c0\u6b65,\u7b2c0\u4e2a\u5f00\u59cb\u641c\n    cout<<MaxMax;\n    //\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1557987986,
        "uid": 42714,
        "name": "momentous",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u5df2\u9605\u5168\u90e8\u9898\u89e3\uff0c\u53d1\u73b0\u4e0d\u662fdfs\u5c31\u662fbitset\u3002\u8fd9\u91cc\u53d1\u4e00\u4e2a\u6734\u5b9e\u65e0\u534e\u7684\u7528int\u679a\u4e3e\u5b50\u96c6\u7684\u9898\u89e3\u3002\n\n\u539f\u7406\u5176\u5b9e\u548cbitset\u4e00\u6837\uff0c\u4f46\u662fbitset\u5e38\u6570\u603b\u5f52\u6bd4\u4f4d\u8fd0\u7b97\u5927\n\n\u56e0\u4e3a\u4e00\u4e2a\u5143\u7d20\u4e2a\u6570\u4e3a$n$\u7684\u96c6\u5408$A$\u7684\u5b50\u96c6\u6709$2 ^ n$\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a$2 ^ n$\u4ee5\u5185\u7684\u6570$k$\u8868\u793a$A$\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u5728\u4e8c\u8fdb\u5236\u4e0b\uff0c$k$\u6709$n$\u4f4d\uff08\u9ad8\u4f4d\u8865$0$\uff09,\u7b2c$i$\u4f4d\u7684\u503c\u8868\u793a\u5143\u7d20$A_i$\u662f\u5426\u5728\u8be5\u5b50\u96c6\u4e2d\u3002\u8be5\u5b50\u96c6\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662f\u5176\u5bf9\u5e94\u6570\u5b57\u5728\u4e8c\u8fdb\u5236\u4e0b\u6570\u4f4d\u4e2d1\u7684\u4e2a\u6570\u3002\n\n\u8be6\u89c1\u6ce8\u91ca\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\n\nconst int MX = 2e3 + 7;\nint f[MX];\nint n, m, a[27], sum, ans;\n\nint main() {\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++) cin >> a[i], sum += a[i];\n\tfor(int s = 0; s < (1 << n); s++) {\t//\u679a\u4e3e\u5b50\u96c6\n\t\tint c = 0;\n\t\tfor(int t = s; t; c += t & 1, t >>= 1);\t//\u8ba1\u7b97\u5b50\u96c6\u5143\u7d20\u4e2a\u6570\uff08\u672c\u4eba\u4e0d\u559c\u6b22\u7528while\uff09\n\t\tif(c == n - m) {\t//\u5b50\u96c6\u5143\u7d20\u4e2a\u6570\u7b26\u5408\u8981\u6c42\u65f6\u5f00\u59cbdp\n\t\t\tmemset(f, 0, sizeof(f));\t//01\u80cc\u5305dp,\u4e0d\u9700\u8d58\u8ff0\n\t\t\tf[0] = 1;\n\t\t\tfor(int i = 1; i <= n; i++) if((1 << (i - 1)) & s) {\t//\u53eadp\u5b50\u96c6\u5185\u7684\u5143\u7d20\n\t\t\t\tfor(int j = sum; j >= a[i]; j--) {\n\t\t\t\t\tf[j] |= f[j - a[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tint tmp = 0;\n\t\t\tfor(int i = 1; i <= sum; i++) if(f[i]) tmp++;\n\t\t\tans = max(ans, tmp);\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1565495865,
        "uid": 50607,
        "name": "wzhhhhh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u672c\u9898\u4e0enoip pj2014 T4\u662f\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528dfs+dp\u6765\u505a\uff0c\n\u4f46\u697c\u4e0adalao\u4eec\u5df2\u7ecf\u7ed9\u51fa\u4e86\u8fd9\u6837\u7684\u505a\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u53e6\u4e00\u4e2a\u601d\u8def\uff1a\ndfs+bitset\n\n\n------------\n\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u6211\u6700\u5148\u8054\u60f3\u5230\u4e86\u53e6\u4e00\u9053\u540c\u540d\u7684\u9898\u2014\u2014\u2014\u2014P2347\u3002\u90a3\u4e00\u9898\u7684\u6807\u7b97\u662f\uff1a\u7528\u4e00\u4e2a\u6db5\u76d6\u6240\u6709\u91cd\u91cf\u7684bitset b,b[i]\u4ee3\u8868\u4e86\u91cd\u91cfi\u662f\u5426\u80fd\u88ab\u79f0\u51fa\uff0c\u6bcf\u6765\u4e00\u4e2a\u781d\u7801j\uff0c\u5c31\u4f7fb|=b<<w[j]\uff0c\u5176\u4e2dw[j]\u8868\u793aj\u7684\u91cd\u91cf\uff0c\u6700\u540eb\u4e2d1\u7684\u6570\u91cf\u51cf\u4e00\uff08b[0]\u662f\u4e0d\u88ab\u5305\u542b\u5728\u5185\u7684\uff09\u5c31\u662f\u6211\u4eec\u7684\u7b54\u6848\u3002\n\n------------\n\n\u8fd9\u4e2a\u601d\u8def\u5bf9\u6211\u800c\u8a00\u5f88\u6709\u542f\u53d1\uff0c\u5728\u8fd9\u4e00\u9898\u4e2d\uff0c\u8fd9\u4e2a\u601d\u8def\u662f\u5b8c\u5168\u53ef\u884c\u7684\u3002\u7531\u6b64\uff0c\u6211\u4eec\u7528bitset\u4ee3\u66ff\u5b8c\u6210\u4e86dp\u7684\u90a3\u4e00\u6b65\u5de5\u4f5c\uff0c\u5373\uff1a\u5f97\u5230\u4e00\u4e2a\u781d\u7801\u96c6\u5408\u540e\uff0c\u7b97\u51fa\u6b64\u96c6\u5408\u80fd\u79f0\u51fa\u7684\u4e0d\u540c\u91cd\u91cf\u6570\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u56de\u8fc7\u5934\u6765\u770b\u8fd9\u4e00\u6b65\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u663e\u7136\u5b83\u662fO(n)\u7684\uff08\u6216\u8005\u8bf4O(n-m)\uff09,\u4f46\u662f\u6211\u4eec\u5982\u679c\u7528dp\u6765\u5904\u7406\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u754c\u5fc5\u7136\u8981\u8fbe\u5230O(n^2)\u7ea7\u522b\u3002\n\n------------\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u524d\u7f6e\u5de5\u4f5c\u2014\u2014\u2014\u2014dfs\u4e86\u3002 \u5176\u4ed6\u90e8\u5206\u6ca1\u4ec0\u4e48\u597d\u8bf4\uff0c\u91cd\u70b9\u5728\u8fd9\u91cc\uff1a\n```cpp\nif(dep-1<=m+cur)\n\tdfs(dep+1,cur);\n```\n\u662f\u8fd9\u6837\u8003\u8651\u7684\uff1a\u5728\u6211\u4eec\u9700\u8981\u9009\u7684\u781d\u7801\u6570\u5c0f\u4e8e\u7b49\u4e8e\u6211\u4eec\u5c1a\u6709\u7684\u781d\u7801\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u62ff\u5f53\u524d\u8fd9\u4e2a\u781d\u7801\uff1b\u53cd\u4e4b\uff0c\u6211\u4eec\u5c31\u6ca1\u6709\u9009\u62e9\u6743\uff0c\u5fc5\u987b\u62ff\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6709\u201c\u4e0d\u9009\u201d\u7684\u6743\u5229\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\nn-dep+1(\u9700\u8981\u9009\u7684\u781d\u7801\u6570)>=n-m-cur(\u8fd8\u5269\u4e0b\u7684\u781d\u7801\u6570)\n\u5316\u7b80\u8be5\u5f0f\uff0c\u53ef\u5f97dep-1<=m+cur\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u6240\u5199\u7684\u90a3\u6837,\u8fd9\u4e2a\u4f18\u5316\u526a\u679d\u662f\u5341\u5206\u6709\u6548\u7684\u3002\n\n------------\n\u73b0\u5728\u6765\u770b\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e0d\u96be\u770b\u51fa\u662fO(C(n,m)*(n-m)),\u52a0\u4e0a\u526a\u679d\u4f18\u5316\uff0c\u5e38\u6570\u8fd8\u8981\u66f4\u5c0f\uff0c\u53ef\u4ee5\u8bf4\u662f\u4e00\u4e2a\u9ad8\u6548\u7b97\u6cd5\u4e86\uff0c\u800c\u4e14\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4ee3\u7801\u4e5f\u76f8\u5bf9\u7b80\u6d01\u3002\n\n------------\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long lint;\nlint n,m,a[25],maxn,chosn[25];\nbitset<2500>b;\nlint dp(){\n\tb.reset();\n\tb[0]=1;\n\tfor(int i=1;i<=n-m;++i){\n\t\tb|=(b<<a[chosn[i]]);\n\t}\n\treturn b.count()-1;\n}\nvoid dfs(int dep,int cur){\n\tif(cur==n-m){\n\t\tmaxn=max(maxn,dp());\n\t\treturn;\n\t}\n\tif(dep>n)return;\n\tif(dep-1<=m+cur)\n\tdfs(dep+1,cur);\n\tchosn[cur+1]=dep;\n\tdfs(dep+1,cur+1); \n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)cin>>a[i];\n    dfs(1,0);\n    cout<<maxn<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1538146867,
        "uid": 112316,
        "name": "Linne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u73b0\u6709n\u4e2a\u781d\u7801\uff0c\u91cd\u91cf\u5206\u522b\u4e3aa1\uff0ca2\uff0ca3\uff0c\u2026\u2026\uff0can\uff0c\u5728\u53bb\u6389m\u4e2a\u781d\u7801\u540e\uff0c\u95ee\u6700\u591a\u80fd\u79f0\u91cf\u51fa\u591a\u5c11\u4e0d\u540c\u7684\u91cd\u91cf\uff08\u4e0d\u5305\u62ec0\uff09\u3002\n\n#### \u3010\u6570\u636e\u89c4\u6a21\u3011\n\n\u5bf9\u4e8e20%\u7684\u6570\u636e\uff0cm=0\uff1b\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0cm\u22641\uff1b\n\n\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0cn\u226410\uff1b\n\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cn\u226420\uff0cm\u22644\uff0cm\uff1cn\uff0cai\u2264100\u3002\n\n### \u4e3b\u8981\u601d\u8def \uff1a \u7206\u641c + ~~XJB~~\u526a\u679d + ~~XJB~~\u5224\u91cd\n\n\u5bf9\uff0c\u5c31\u662f\u7206\u641c\u3002\u6211\u4eec\u66b4\u529b\u641c\u7d22\u4e00\u4e0b\u6211\u4eec\u8981\u54ea\u51e0\u4e2a\u781d\u7801\u8981\u9009\u3002\u8fd9\u91cc\u5c31\u6d89\u53ca\u4e00\u4e2a~~XJB~~\u526a\u679d\uff1a\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u662f\u6211\u4eec\u6709\u51e0\u4e2a\u781d\u7801\u4e0d\u9009\uff0c\u5982\u679c\u8d85\u8fc7m\u7684\u8bdd\u5c31\u4e0d\u80fd\u7ee7\u7eed\u4e0d\u9009\u4e86\u3002\n\n\u6211\u4eec\u679a\u4e3e\u51fa\u4e86\u54ea\u51e0\u4e2a\u781d\u7801\u8981\u9009\u540e\u5982\u4f55\u641e\u6709\u591a\u5c11\u91cd\u91cf\u53ef\u4ee5\u79f0\u51fa\u6765\u5462\uff1f\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6211\u4eec\u9009\u7684\u51e0\u4e2a\u781d\u7801\u7684\u91cd\u91cf\u653e\u5728\u4e00\u4e2avector\u91cc\u597d\u4e86\uff0c\u6211\u4eec\u6bcf\u6b21\u5230\u4e00\u4e2a\u8981\u9009\u781d\u7801\u4e2d\uff0c\u628avector\u4e2d\u7684\u6bcf\u4e2a\u91cd\u91cf\u52a0\u4e0a\u5f53\u524d\u9009\u7684\u781d\u7801\u7684\u91cd\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u91cd\u91cf\u6ca1\u6709\u88ab\u51fa\u73b0\u8fc7\uff0c\u5c31\u52a0\u5165vector\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u91cd\u91cf\u7684\u5224\u91cdbool\u6570\u7ec4\u76f8\u5e94\u4f4d\u7f6e\u6807\u4e0a\u3002\n\n### code\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for(int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for(int i = j; i >= n; i -= k)\n#define rep(i, x) for(int i = h[x]; i; i = e[i].nxt)\n#define mn 22\n#define mk 2010\n#define inf 1 << 30\n#define ll long long\ninline int read() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n, m, a[mn], maxx = -1, ans = 0;\nbool f[mk], b[mn];\nvector<int> get;\ninline void get_ans(int x) { \n\t// \u6253\u5b8c\u624d\u60f3\u5230\u53ef\u4ee5\u76f4\u63a5\u5faa\u73afQAQ\uff0c\u505a\u9898\u65f6\u5199\u9012\u5f52\u5199\u50bb\u4e86\n\tif(x == n + 1) \n\t\treturn;\n\tif(b[x]) {\n\t\tint kkk = get.size();\n\t\tif(!f[a[x]]) get.push_back(a[x]);\n\t\tf[a[x]] = true;\n\t\tgo(i, 0, kkk - 1, 1) {\n\t\t\tint zcy = get[i] + a[x];\n\t\t\tif(!f[zcy]) get.push_back(zcy);\n\t\t\tf[zcy] = true;\n\t\t}\n\t}\n\tget_ans(x + 1);\n}\ninline void dfs(int x, int now) {\n\tif(x == n + 1) {\n\t\tif(now != m) \n\t\t\treturn;\n        // \u521d\u59cb\u5316\u554aQwQ\uff01\n\t\tans = 0;\n\t\tmemset(f, false, sizeof f);\n\t\twhile(!get.empty()) get.pop_back();\n\t\tget_ans(1);\n        // \u7edf\u8ba1\u7b54\u6848\uff08\u4e0a\u9650\u4e3a\u03a3a[i]\uff0c\u6211\u5f88\u61d2\uff0c\u76f4\n        // \u63a5maxn * max(a[i])\uff09\n\t\tgo(i, 1, 2000, 1) \n\t\t\tif(f[i]) ans++;\n\t\tmaxx = max(maxx, ans);\n\t\treturn;\n\t}\n\tif(now > m) \n\t\treturn;\n\tb[x] = true;\n\tdfs(x + 1, now);\n\tb[x] = false; // \u6709\u4e2a\u4e0d\u9009\u7684\u5c31\u8981\u628a\u8ba1\u6570 + 1\n\tdfs(x + 1, now + 1);\n}\nint main() {\n\tn = read(), m = read();\n\tgo(i, 1, n, 1) a[i] = read();\n\tdfs(1, 0);\n\tcout << maxx << \"\\n\";\n\treturn 0;\n}\n\n```\n\n### P.S.\uff1a\u8003\u524d\u795d\u5168\u56fdOIer NOIP 2018 RP++\uff01\uff01\uff01",
        "postTime": 1541491440,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "# P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011\n\n\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u73b0\u6709$n$\u4e2a\u781d\u7801\uff0c\u91cd\u91cf\u5206\u522b\u4e3a$a1$\uff0c$a2$\uff0c$a3$\uff0c\u2026\u2026\uff0c$an$\uff0c\u5728\u53bb\u6389$m$\u4e2a\u781d\u7801\u540e\uff0c\u95ee\u6700\u591a\u80fd\u79f0\u91cf\u51fa\u591a\u5c11\u4e0d\u540c\u7684\u91cd\u91cf\uff08\u4e0d\u5305\u62ec$0$\uff09\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n##### \u8f93\u5165\u683c\u5f0f\uff1a\n\u8f93\u5165\u6587\u4ef6$weight.in$\u7684\u7b2c$1$\u884c\u4e3a\u6709\u4e24\u4e2a\u6574\u6570$n$\u548c$m$\uff0c\u7528\u7a7a\u683c\u5206\u9694\n\n\u7b2c2\u884c\u6709$n$\u4e2a\u6b63\u6574\u6570$a1$\uff0c$a2$\uff0c$a3$\uff0c\u2026\u2026\uff0c$an$\uff0c\u8868\u793a\u6bcf\u4e2a\u781d\u7801\u7684\u91cd\u91cf\u3002\n\n##### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u8f93\u51fa\u6587\u4ef6$weight.out$\u4ec5\u5305\u62ec$1$\u4e2a\u6574\u6570\uff0c\u4e3a\u6700\u591a\u80fd\u79f0\u91cf\u51fa\u7684\u91cd\u91cf\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n##### \u8f93\u5165\u6837\u4f8b#1\uff1a\n\n$3$ $1$\n\n$1$ $2$ $2$\n\n##### \u8f93\u51fa\u6837\u4f8b#1\uff1a\n\n$3$\n\n\u8bf4\u660e\n\n\u3010\u6837\u4f8b\u8bf4\u660e\u3011\n\n\u5728\u53bb\u6389\u4e00\u4e2a\u91cd\u91cf\u4e3a$2$\u7684\u781d\u7801\u540e\uff0c\u80fd\u79f0\u91cf\u51fa$1$\uff0c$2$\uff0c$3$\u5171$3$\u79cd\u91cd\u91cf\u3002\n\n\u3010\u6570\u636e\u89c4\u6a21\u3011\n\n\u5bf9\u4e8e$20$%\u7684\u6570\u636e\uff0c$m=0$\uff1b\n\n\u5bf9\u4e8e$50$%\u7684\u6570\u636e\uff0c$m\u22641$\uff1b\n\n\u5bf9\u4e8e$50$%\u7684\u6570\u636e\uff0c$n\u226410$\uff1b\n\n\u5bf9\u4e8e$100$%\u7684\u6570\u636e\uff0c$n\u226420$\uff0c$m\u22644$\uff0c$m\uff1cn$\uff0c$ai\u2264100$\u3002\n\n\n\n\u73b0\u5728\u5c0f\u83dc\u9e21\u7231\u4e0a\u4e86\u53d1\u9898\u89e3\u3002\n\n\u4e8e\u662f\uff0c\u4eca\u5929\u5c0f\u83dc\u9e21\u8981\u6311\u6218\u4e00\u4e0b\u65b0\u9ad8\u5ea6\u2014\u2014\u2014\u2014\u53d1\u4e00\u7bc7\u96be\u5ea6\u4e3a      \u63d0\u9ad8+/\u7701\u9009-      \u7684\u9898\u89e3\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u62ff\u9053\u9898\u76ee\u5148\u770b\u9898\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\u4ece$n$\u4e2a\u781d\u7801\u4e2d\u9009\u51fa$n-m$\u4e2a\uff0c\u80fd\u6210\u91cf\u51fa\u6700\u591a\u91cd\u91cf\u3002\n\n\u53ef\u4ee5\u5c06\u9898\u76ee\u5206\u4e24\u4e2a\u90e8\u5206\uff1a\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\uff1a\u641c\u7d22\uff08dfs\uff09\n\n\u7b2c\u4e8c\u4e2a\u90e8\u5206\uff1a$dp$\uff08$01$\u80cc\u5305\uff09\n\n\n\n\n## $AC$\u601d\u8def\uff1a\n\n#### 1.\u7f8e\u597d\u7684\u5f00\u59cb\uff0c\u7f3a\u5c11\u4e0d\u4e86\u8f93\u5165\n\n#### 2.\u7528$dfs$\u89e3\u51b3$n$\u9009$n-m$\u7684\u95ee\u9898\n\n#### 3.\u7528$dp$\u89e3\u51b3\u80fd\u6210\u91cf\u51fa\u6700\u591a\u91cd\u91cf\u7684\u95ee\u9898\n\n\n\n### \u4e0a$AC$\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>//\u8c03\u7528      scanf\u548cprintf      \u7684\u5e93\n#include<cstring>//\u8c03\u7528      memset      \u7684\u5e93\nconst int mx=205;//\u5b9a\u4e49\u5e38\u91cfmx\nint n,m,maxx=0,ans=0;\nint a[mx],b[mx],f[20010];\n//\u5b9a\u4e49\u53d8\u91cf\u548c\u6570\u7ec4\nvoid dp()//dp\uff0801\u80cc\u5305\uff09\n{\n\tmemset(f,0,sizeof(f)),f[0]=1;//\u521d\u59cb\u5316f\uff0c\u4f46f[0]=1\uff0c\u5426\u5219\u7ed3\u679c\u4e00\u5b9a\u4e3a0\n\tint s=0;//\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cfs\uff0c\u505a\u7d2f\u52a0\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(b[i]==0)continue;//\u5982\u679c\u6ca1\u9009\uff0c\u4e0d\u7528\u518d\u8ba8\u8bba\u4e86\n\t\tfor(int j=maxx;j>=a[i];j--)//\u4ece\u4e0a\u5f80\u4e0b\u653e\n\t\t{\n\t\t\tif(f[j-a[i]]==1&&f[j]==0)s++,f[j]=1;//\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u6807\u8bb0\u5e76\u7d2f\u52a0\n\t\t}\n\t}\n\tif(ans<s)ans=s;//\u66f4\u65b0ans\n}\nvoid dfs(int x,int k)//x\u9009k\n{\n\tif(k==m)//\u9009\u597d\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65dp\n\t{\n\t\tdp();\n\t\treturn ;//\u8fd4\u56de\n\t}\n\tif(x>n)return ;//\u5982\u679cx\u4e2a\u8d85\u51fan\u4e2a\uff0c\u8fd4\u56de\u4e0a\u4e00\u5c42\n\tdfs(x+1,k);\n\tb[x]=1;//\u9009\u4e2d\n\tdfs(x+1,k+1);//\u9009\u4e0b\u4e00\u4e2a\n\tb[x]=0;//\u8fd8\u539f\n}\nint main()\n{\n\tmemset(b,0,sizeof(b));//\u521d\u59cb\u5316b\u6570\u7ec4\u4e3a0\n\tscanf(\"%d %d\",&n,&m),m=n-m;//n\u9009n-m\u4e2a\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),maxx+=a[i];\n    //\u7f8e\u597d\u7684\u8f93\u5165\n\tdfs(1,0);//\u8dd1dfs\n\tprintf(\"%d\",ans);//\u8f93\u51fa\u80fd\u6210\u91cf\u51fa\u6700\u591a\u91cd\u91cf\n\treturn 0;\n}\n```",
        "postTime": 1522918405,
        "uid": 54816,
        "name": "lijiahao2017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "## \u72b6\u6001\u538b\u7f29DP\n\n\u601d\u8def\u5c31\u662f\u679a\u4e3e\u7528\u54ea\u4e00\u4e9b,\u7136\u540e\u505a01\u80cc\u5305.\n\n$m=0$\u7279\u5224\u4e00\u4e0b\u554a,\u7136\u540e\u5c31\u8fc7\u4e86.\n\n~~\u8fd9\u4e0d\u662f\u8fd9\u4e2a\u9898\u7684\u6b63\u89e3,\u6211\u53ea\u662f\u6765\u53d1\u4e00\u4e0b\u601d\u8def,\u4e0d\u4f1a\u7684\u540c\u5b66\u8bf7\u79fb\u6b65\u5176\u4ed6\u9898\u89e3~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,wei[25],sum;\nlong long ans,ztt;\nbool vis[2010];\nvoid work1(int zt,int total){\n//01Backpack\n\tmemset(vis,0,sizeof(vis));vis[0]=1;\n    //\u72b6\u538b01\u7684\u516c\u5f0f\n\tfor(int i=1;i<=n;++i)\tif(zt&(1<<(i-1)))\n\t\tfor(int j=total;j>=0;--j)\tif(vis[j])\n\t\t\tvis[j+wei[i]]=1;\n\tlong long anss=0;\n\tfor(int j=1;j<=total;++j)\n\t\tif(vis[j])++anss;\n\tans=max(ans,anss);\n}\nvoid dfs(int start,int ncut,int zt,int total){\n\t//\u666e\u901a\u7684DFS\n    if(ncut==m){\n    \twork1(zt,total);\n        return;\n    }\n\tfor(int q=start+1;q<=n;++q)\n\t\tdfs(q,ncut+1,zt-(1<<(q-1)),total-wei[q]);\n}\nvoid work2(){\n//\u7279\u5224\u4e3a0\u7684\u60c5\u51b5\n\tvis[0]=1;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&wei[0]);\n\t\tfor(int j=(i-1)*100;j>=0;--j)\n\t\t\tif(vis[j])vis[j+wei[0]]=1;\n\t}\n\tlong long anss=0;\n\tfor(int i=1;i<=n*100;++i)\n\t\tif(vis[i])++anss;\n\tcout<<anss;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tif(!m){\n    \twork2();\n        return 0;\n    }\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&wei[i]);\n        sum+=wei[i];\n    }\n    //\u72b6\u538b\u8d77\u70b9.\n\tfor(int i=1;i<=n;++i){\n\t\tdfs(i,1,((1<<n)-1)-(1<<(i-1)),sum-wei[i]);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1521863467,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=2000;\nint n,m,ans=0;\nint a[maxn];\nint cz[maxn];\nbool b[maxn],f[maxn];\n//f\u6570\u7ec4\u8868\u793a\u6bcf\u4e00\u4e2a\u91cd\u91cf\u662f\u5426\u53ef\u4ee5\u79f0\u51fa\u6765 \nvoid dp()\n{\n     int s=0;\n     int gs=0;\n     //s\u8bb0\u5f55\u76ee\u524d\u6240\u6709\u781d\u7801\u90fd\u7528\u4e0a\u53ef\u4ee5\u79f0\u51fa\u7684\u6700\u5927\u91cd\u91cf\n     //gs\u8bb0\u5f55\u80fd\u79f0\u51fa\u591a\u5c11\u91cd\u91cf \n     memset(f,false,sizeof(f));\n     f[0]=true;\n     //\u538b\u7f29\u6210\u4e00\u7ef4\u7a7a\u95f4 \n     for(int i=1;i<=n;i++)\n     {\n       if(!b[i])\n         continue;\n       //\u5982\u679c\u8fd9\u4e2a\u781d\u7801\u662f\u88ab\u4e22\u6389\u7684\uff0c\u5c31\u4e0d\u5904\u7406\u7528\u5b83\u53ef\u4ee5\u79f0\u51fa\u7684\u91cd\u91cf \n       s+=a[i];\n       for(int j=s;j>=a[i];j--)\n         if(!f[j] && f[j-a[i]])\n         {\n           f[j]=true;\n           gs++;\n         }\n        //\u4ece\u5927\u5230\u5c0f\u5217\u4e3e\u6bcf\u4e00\u4e2a\u91cd\u91cf\n        //\u5982\u679c\u5b83\u4e4b\u524d\u4e0d\u80fd\u79f0\u51fa\u6765\u4e14\u5b83\u51cf\u53bb\u8fd9\u4e2a\u781d\u7801\u7684\u91cd\u91cf\u53ef\u4ee5\u79f0\u51fa\u6765\n        //\u8bf4\u660e\u5b83\u662f\u53ef\u4ee5\u79f0\u51fa\u6765\u7684 \n     }\n     ans=max(ans,gs);\n}\nvoid dfs(int x,int y)\n{\n     //x\u4e3a\u6b63\u5728\u5904\u7406\u7b2c\u51e0\u4e2a\u781d\u7801\uff0cy\u4e3a\u5df2\u7ecf\u4e22\u6389\u4e86\u591a\u5c11\u4e2a\u781d\u7801 \n     if(x==n+1 && y==m)\n       dp();\n     //\u5982\u679c\u5df2\u7ecf\u5904\u7406\u5230\u7b2cn+1\u4e2a\u781d\u7801\uff0c\u4e14\u5df2\u7ecf\u4e22\u6389\u4e86m\u4e2a\u781d\u7801\n     //\u8bf4\u660e\u8fd9\u662f\u4e00\u79cd\u53ef\u80fd\u7684\u6392\u5217\uff0c\u5c1d\u8bd5\u52a8\u5f52\u5237\u65b0ans \n     if(y+n-x>=m)\n       dfs(x+1,y);\n     //\u5982\u679c\u5df2\u7ecf\u4e22\u6389\u7684\u781d\u7801\u91cfy\u52a0\u4e0a\u5269\u4f59\u8fd8\u6ca1\u5904\u7406\u7684\u781d\u7801(n-x)\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8em\n     //\u8bf4\u660e\u5f53\u524d\u8fd9\u4e2a\u7b2cx\u4e2a\u781d\u7801\u53ef\u4ee5\u9009\u62e9\u4e0d\u4e22\u6389 \n     if(y<m)\n     {\n       b[x]=false;\n       dfs(x+1,y+1);\n       b[x]=true;\n     }\n     //\u5982\u679c\u5df2\u7ecf\u4e22\u6389\u7684\u781d\u7801\u4e2a\u6570y\u5c0f\u4e8e\u76ee\u6807m\n     //\u8bf4\u660e\u5f53\u524d\u8fd9\u4e2a\u7b2cx\u4e2a\u781d\u7801\u53ef\u4ee5\u9009\u62e9\u4e22\u6389 \n}\nint main()\n{\n    memset(b,true,sizeof(b));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n    dfs(1,0);\n    //\u8868\u793a\u5904\u7406\u7b2c1\u4e2a\u781d\u7801\uff0c\u5df2\u7ecf\u4e22\u6389\u4e860\u4e2a\u781d\u7801\n    printf(\"%d\\n\",ans); \n    system(\"pause\");\n    return 0;\n}\n\n```\n",
        "postTime": 1568031515,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "P1441 \u781d\u7801\u79f0\u91cd"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\u7684\u601d\u8def\uff0c\u5404\u7c7b\u9898\u89e3\u5df2\u7ecf\u8bb2\u5f97\u975e\u5e38\u6e05\u695a\u4e86\uff0c\u6211\u5728\u8fd9\u91cc\u4ec5\u63d0\u4f9b\u4e00\u79cd\u4f18\u5316\u7684\u601d\u8def\u3002\n\n~~\uff08\u561b\uff0c\u65e0\u9650\u5b8f\u5b9a\u4e49\uff0c\u8bfb\u5165\u4f18\u5316+\u5185\u8054\u5361\u5e38\u5012\u4e5f\u53ef\u4ee5\uff0c\u53ea\u662f\u6bd4\u8f83\u8d25\u4eba\u54c1\u5427\uff09~~\n\n\u6211\u4eec\u8003\u8651\u5728DFS\u8fc7\u7a0b\u4e2d\u7740\u624b\u4f18\u5316\u3002\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u641c\u51fa\u6765\u7684\u65b9\u6848\u4f1a\u6709\u91cd\u590d\uff0c\u6bd4\u5982\uff1a\n```\n2 1 3\n3 2 1\n1 2 3\n\u2026\u2026\n```\n\u8fd9\u4e9b\u6392\u5217\u4f1a\u88ab\u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u7ec4\u5408\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6211\u4eec\u641c\u7d22\u7684\u65f6\u95f4\u3002\n\n\u5982\u4f55\u6c42\u7ec4\u5408\uff1f\u4e00\u822c\u7684\u601d\u8def\u662f\u7528\u5355\u8c03\u6027\u89e3\u51b3\u552f\u4e00\u6027\u3002\u4f7f\u6570\u636e\u5355\u8c03\u5728\u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n1. \u5728\u8bfb\u5165\u540e\u52a0\u5165\u4e00\u4e2aSort\u3002\n2. \u7528\u6876\u5b58\u50a8\u6570\u636e\u3002\n\n~~\u5176\u5b9e\u90fd\u662f\u6392\u5e8f\u5566\u3002~~\n\n\u8003\u8651\u7528\u6876\u5b58\u50a8\u6570\u636e\n\n\u4f18\u70b9\uff1a\u5728\u8bfb\u5165\u4e4b\u540e\u6ca1\u6709\u989d\u5916\u7684\u590d\u6742\u5ea6\n\n\u7f3a\u70b9\uff1a\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u65f6\u95f4\u6765\u904d\u5386\u5230\u6240\u6709\u6570\u636e\n\n\u518d\u770b\u770b\u6876\u7684\u5927\u5c0f\uff0c$a_{i}$<=100\uff0c\u7f3a\u70b9\u5b8c\u5168\u53ef\u4ee5\u5ffd\u7565\uff0c\u7528\u6876\u5b58\u50a8\u53ef\u884c\uff01\n\n\u4e8e\u662f\u4f18\u5316\u540e\u7684\u7a0b\u5e8f\u5e94\u8fd0\u800c\u751f\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[107],pack[21],ans=0,n,m,max_nums=0,min_nums=999,num;\nbool f[3000];\nvoid dp()\n{\n    memset(f,0,sizeof(f));f[0]=1;\n    int sum=0,tot=0;\n    for(int i=1;i<=num;i++) sum+=pack[i];\n    for(int i=1;i<=num;i++)\n    {\n        for(int j=sum;j>=pack[i];j--)\n            f[j]=f[j]+f[j-pack[i]];\n    }\n    for(int i=1;i<=sum;i++) \n    {\n        if (f[i]) tot++;\n    }\n    ans=max(ans,tot);\n}\nvoid dfs(int x,int last)\n{\n    if (x>num)\n    {\n        dp();\n        return;\n    }\n    for(int i=last;i<=max_nums;i++)//\u8fd9\u91cc\u5f88\u91cd\u8981\u3002\u4fdd\u8bc1\u4e86pack\u6570\u7ec4\u7684\u5355\u8c03\u6027\uff0c\u8fdb\u800c\u4f7f\u5f97\u5176\u4e0d\u91cd\u590d\n    {\n        if (a[i]>0)\n        {\n            a[i]--;\n            pack[x]=i;\n            dfs(x+1,i);\n            a[i]++;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        int v;\n        scanf(\"%d\",&v);\n        max_nums=max(max_nums,v);\n        min_nums=min(min_nums,v);\n        a[v]++;\n    }\n    num=n-m;//\u7559\u4e0bn-m\u4e2a\u781d\u7801\n    dfs(1,min_nums);//\u4ece\u6700\u5c0f\u503c\u8fdb\u884c\u641c\u7d22\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u4f18\u5316\u540e\u7684\u7a0b\u5e8f\u8fd0\u884c\u603b\u65f6\u95f4\u51cf\u5c11\u81f3\u4e86$700ms$\u5de6\u53f3\uff0c\u8f83\u4e4b\u539f\u6765\u7684\u7a0b\u5e8f\u662f\u539f\u6765\u7684\u4e09\u5206\u4e4b\u4e00\uff08\u539f\u6765$1900ms$\uff09~~\u6240\u4ee5\u8fd9\u9053\u9898\u65f6\u9650\u8fd8\u53ef\u4ee5\u5361\u7d27\u4e00\u70b9~~\n\n\u4ee5\u4e0a\u3002\n\nFeather-Sea\u795d\u60a8\u5728\u8d5b\u573a\u597d\u8fd0\u8fde\u8fde\u3002",
        "postTime": 1525436994,
        "uid": 41953,
        "name": "\u5188\u5d0e\u68a6\u7f8e",
        "ccfLevel": 0,
        "title": "P1441 \u781d\u7801\u79f0\u91cd"
    },
    {
        "content": "\n[\u6211\u7684\u535a\u5ba2](https://october-2021.github.io/)\n\n~~\u7ffb\u4e86\u7ffb\u9898\u89e3\u53d1\u73b0\u6ca1\u6709\u8fd9\u79cd\u505a\u6cd5~~\n\n\u770b\u89c1\u5927\u5bb6\u90fd\u662f\u76f4\u63a5\u679a\u4e3e$2 ^n$\u6570\u91cf\u7684\u5b50\u96c6\u7136\u540e\u518d$O(n)$ $or$ $O(1)$\u7684\u7edf\u8ba1$1$\u7684\u4e2a\u6570\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u6837\u5e76\u4e0d\u4f18\u79c0\u7684)(dfs\u52bf\u529b\u9664\u5916\uff09\n\n\u6211\u4eec\u8003\u8651\u6709\u591a\u5c11\u65e0\u5173\u72b6\u6001\u4e5f\u88ab\u6211\u4eec\u679a\u4e3e\u4e86\u5462\uff1f\n\n\u6309\u6570\u636e\u9876\u6ee1\u6765\u8bf4\u5427\n\n$2 ^ {20} = 1048576$\n\n\u5982\u679c\u4f60\u4e0d\u7528stl\u5e93\u4e2d$O(1)$\u7edf\u8ba1\u4e2a\u6570\u7684\u90a3\u4e2a\u51fd\u6570\uff0c\u518d$O(n)$\u7edf\u8ba11\u7684\u4e2a\u6570\u7684\u8bdd\n\n$20 * 1048576 = 20971520$\n\n\n\u8fd9\u4e2a\u9898\u672c\u6765\u4e5f\u8981$O(n)$\u679a\u4e3e\u781d\u7801\uff0c\u6ca1\u592a\u5927\u5173\u7cfb\u3002\u3002\u3002\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u5462\uff0c\u53ef\u884c\u7684\u53ea\u6709 $C^ {n - m}_n$ \u4e2a\u5b50\u96c6\n\n\u4e5f\u5c31\u662f$20! / (16! * 4!)$\n\n\u7b97\u4e00\u7b97 4845.\u3002\u3002\u786e\u5b9e\u5dee\u7684\u6709\u70b9\u591a\u5462\n\n\u90a3\u4e48\u6211\u4eec\u6709\u6ca1\u6709\u53ea\u679a\u4e3e\u8fd9\u4e9b\u5b50\u96c6\u7684\u65b9\u6cd5\u5462\uff1f\n\n\u8fd9\u5c31\u662f\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u610f\u4e49\u5566\n\n**\u8003\u8651\u6211\u4eec\u73b0\u5728\u8981\u89e3\u51b3\u7684\u662f\u8fd9\u6837\u4e00\u4ef6\u4e8b\uff0c\u679a\u4e3e\u5927\u5c0f\u4e3ar\u7684\u5b50\u96c6**\n\n~~\u597d\u5427\u8fd9\u4e2a\u771f\u4e0d\u4f1a\u5f15\u5165\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427~~\n\n````cpp\n  \tfor(int S = (1 << r) - 1; S < (1 << n);)\n  \t{\n  \t\tint x = S & (-S), y = S + x;\n  \t\tS = ((S & ~y) / x >> 1) | y;\n  \t}\n`````\n~~\u770b\u8d77\u6765\u82b1\u91cc\u80e1\u54e8\u7684~~\n\u4e3e\u4e2a\u4f8b\u5b50\n\n\u6bd4\u5982\u67095\u4e2a\u6570\uff0c\u8981\u53d63\u4e2a\u6570\uff08\u4e0b\u9762\u6211\u4e3a\u4e86\u65b9\u4fbf\u6211\u5c31\u9ed8\u8ba42\u8fdb\u5236\u5e76\u4e14\u524d\u7aef\u88650\u4e86\uff09\n\n\u5f00\u59cb\u7684\u65f6\u5019S = 00111 \u5f88\u663e\u7136\u662f\u4e00\u79cd\u60c5\u51b5\n\n\u4e4b\u540ex = S\u4e2d\u6700\u540e\u4e00\u4e2a1\u7684\u4f4d\u7f6e\u5c31\u662flowbit\n\n\u90a3\u4e48y = \u6700\u540e\u4e00\u4e2a1\u548c\u524d\u9762\u7684\u6240\u67091\u6d88\u9664\uff0c\u5728\u4ed6\u4eec\u524d\u9762\u76840\u53d8\u62101\n\n\u542c\u8d77\u6765\u6709\u70b9\u7ed5\n\n\u7b2c\u4e00\u6b21 x = 1, y = 01000\n\n~y = 10111\uff0c $S & ~y$ = 00111 , S & ~y / x = 00111\n\nS & ~y / x >> 1 = 00011\n\nS &~y / x >> 1 | y = 01011\n\n\u53d8\u6210\u4e0b\u4e00\u79cd\u60c5\u51b5\u4e86\u5462\uff0c\u63a5\u4e0b\u6765\u5927\u5bb6\u81ea\u5df1\u63a8\u5427QwQ\uff0c\u6211\u5b9e\u5728\u662f\u61d2\u5f97\u6253\u4e86\n\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u539f\u7406\u5c31\u662f\u627e\u51fa\u6700\u540e\u4e00\u4f4d1\uff0c\u4e4b\u540e\u627e\u51fa\u524d\u9762\u7b2c\u4e00\u4f4d0\u53d8\u62101\n\n\u7136\u540e\u6211\u4eec\u628a\u4e4b\u524d0\u7684\u540e\u4e00\u4f4d1\u53d8\u62100\uff0c\u5176\u4ed6\u5b8c\u5168\u7ee7\u627f\n\n**\u5c31\u662f\u6bcf\u4e2a1\u4e0d\u65ad\u7684\u8f6e\u6d41\u5411\u524d\u63a8\uff01**\n\n\u4e3e\u4e2a\u4f8b\u5b50 \uff0c 7\u4e2a\u4e2d\u53d64\u4e2a\n\n0 0 0 1 1 1 1\n\n0 0 1 0 1 1 1\n\n0 0 1 1 0 1 1\n\n0 0 1 1 1 0 1\n\n0 0 1 1 1 1 0\n\n0 1 0 0 1 1 1\n\n0 1 0 1 0 1 1\n\n0 1 0 1 1 0 1\n\n0 1 0 1 1 1 0\n\n0 1 1 0 0 1 1\n\n.........\n\n\u5927\u81f4\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u660e\u767d\u8fd9\u79cd\u505a\u6cd5\n\n\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\n\n\n\n```` cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 1e6 + 1;\n\ninline int read()\n{\n\tregister int x = 0, ch = getchar(), f = 1;\n\twhile(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n\twhile(isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn x * f;\n}\n\nint n, m, ans = 0;\n\nint a[21];\n\nint main()\n{\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; i ++)\n\t{\n\t\ta[i] = read(); \n\t}\n\tint r = n - m;\n    for(int S = (1 << r) - 1; S < (1 << n);)\n    {\n    \tbitset<2001> f; f[0] = 1;\n\t\tfor(int i = 1; i <= n; i ++){\n\t\t\tif(S & (1 << (i - 1))) f |= (f << a[i]);\n\t\t}\n\t\tans = std:: max(ans, (int)f.count() - 1);\n\t\tint x = S & (-S), y = S + x;\n \t    S = ((S & ~y) / x >> 1) | y;\n  \t}\n  \tprintf(\"%d\", ans);  \t\n}\n```````\n\u4f46\u662f\u4e0d\u77e5\u9053\u662f\u6211\u5929\u751f\u81ea\u5e26\u5de8\u5927\u5e38\u6570\u4ec0\u4e48\u7684\uff0c\u5b83\u5e76\u6ca1\u6709\u6211\u60f3\u8c61\u4e2d\u8dd1\u7684\u5feb\u3002\u3002\u3002\n\n\uff08\u5168\u90e8\u70b9\u8dd1\u4e8650ms\uff0c \u53ea\u5728\u6700\u4f18\u89e3\u7b2c2\u9875\uff0c\u88ab\u51e0\u4e2adfs\u52bf\u529b\u540a\u6253\u4e86\u545c\u545c\u545c\uff09\n\n\u56e0\u4e3a\u6211\u5b9e\u5728\u662f\u592a\u83dc\uff0c\u5e76\u4e0d\u80fd\u7ed9\u51fa\u8be6\u7ec6\u7684\u8bc1\u660e\u5e0c\u671b\u6709dalao\u80fd\u4e0d\u541d\u8d50\u6559\n\n\u8fd9\u79cd\u505a\u6cd5\u4e5f\u662f\u6211\u5728\u4e00\u7bc7\u535a\u5ba2\uff08\u53ea\u6709\u4ee3\u7801\uff09\u4e2d\u5b66\u5230\u7684\uff0c\u4f46\u662f\u5fd8\u4e86\u662f\u54ea\u4e00\u4e2a\uff0c\u5b9e\u5728\u62b1\u6b49\n\n\u5982\u679c\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff0c\u8bf7\u70b9\u4e2a\u8d5e\uff0c\u6211\u60f3\u8ba9\u8fd9\u4e2a\u6280\u5de7\u666e\u53ca\uff08\u96fe\uff09\n\n\u5b8c\u7ed3\u6492\u82b1\n\n",
        "postTime": 1571797463,
        "uid": 142510,
        "name": "_October_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011](https://www.luogu.org/problem/P1441)\n\n### \u6b64\u9898\u7b97\u6cd5:\u641c\u7d22+\u80cc\u5305\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165\u781d\u7801\u8d28\u91cf$a[i]$,\u63a5\u4e0b\u6765\u641c\u7d22:\n\n>2.$p[j]$\u8868\u793a\u5f53\u524d\u7b2c$j$\u4e2a\u7559\u4e0b\u7684\u781d\u7801(\u7559\u4e0b$n-m$\u4e2a)\u3002\u521a\u5f00\u59cb\u65f6$p[j]=j$\uff0c\u518d\u7528\u4ee5\u4e0b\u4ee3\u7801\u904d\u5386\u6240\u6709\u7684$n$\u4e2a\u781d\u7801\u4e2d\u7559$n-m$\u4e2a\u7684\u65b9\u6848\u3002\n\n```cpp\n//m=n-m\nint move=m;\nwhile(move>0&&(p[move]>=n\n||move<m&&p[move]==p[move+1]-1)){\n\tmove--;\n} if(move<=0) stop=1;\nelse {\n\tp[move]++;\n\tfor(int i=move+1;i<=m;i++)\n\t\tp[i]=p[move]+i-move;\n}\n```\n\n![](https://s2.ax1x.com/2019/10/10/u7enVe.jpg)\n\n\n>3.$ $\u5bf9\u6bcf\u79cd\u65b9\u6848\u80cc\u5305\u3002\u5f97\u51fa\u80fd\u62fc\u51fa\u4e0d\u540c\u8d28\u91cf\u7684\u6570\u76ee\u5e76\u5f97\u51fa\u5176\u6700\u5927\u503c$ans$\u3002\n\n>4.$ $\u8f93\u51fa\u7b54\u6848$ans$\u3002\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=22,M=2020;\nint n,m,a[N],p[N],ans;\nint ansl,maxn;\nbool use[M],stop;\nint main(){\n\tscanf(\"%d%d\",&n,&m); m=n-m; //\u7559n-m\u4e2a\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",a+i);\n\tfor(int i=1;i<=m;i++)\n\t\tp[i]=i; //\u521d\u59cb\u4f4d\u7f6e\n\twhile(!stop){ //\u5f53\u65b9\u6848\u6700\u53f3\u5316\u540estop=1\n    \t\tmemset(use,0,sizeof(use));\n\t\tansl=maxn=0; use[0]=1;\n\t\tfor(int i=1;i<=m;i++){ //\u80cc\u5305\n\t\t\tfor(int j=maxn;j>=0;j--)\n\t\t\t\tif(use[j]&&!use[j+a[p[i]]]){\n\t\t\t\t\tuse[j+a[p[i]]]=1;\n\t\t\t\t\tansl++;\n\t\t\t\t}\n\t\t\tmaxn+=a[p[i]];\n\t\t} ans=max(ans,ansl);\n\t\tint move=m;\n\t\twhile(move>0&&(p[move]>=n //\u79fb\u52a8\u5230\u4e0b\u4e00\u79cd\u60c5\u51b5\n\t\t||move<m&&p[move]==p[move+1]-1)){\n\t\t\tmove--;\n\t\t} if(move<=0) stop=1;\n\t\telse {\n\t\t\tp[move]++;\n\t\t\tfor(int i=move+1;i<=m;i++)\n\t\t\t\tp[i]=p[move]+i-move;\n\t\t}\n\t} printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u6211\u628a$use[M]$\u5199\u6210\u4e86$use[N]$\uff0c\u8c03\u8bd5\u4e86\u4e09\u5929\u3002\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1570711695,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u9053dp\u9898\uff0c\u53ea\u4e0d\u8fc7\u5728\u666e\u901a\u7684\u6ee1\u7bb1\u80cc\u5305\u4e0a\u52a0\u4e0a\u4e86\u7ec4\u5408\u6570\u7684\u9009\u53d6\n\n\u5148\u770b\u7ec4\u5408\u6570\u7684\u9009\u53d6\u90e8\u5206\n\n```cpp\nvoid dfs(int x,int d)//d\u8868\u793adfs\u6df1\u5ea6\uff0cx\u8868\u793a\u76ee\u524d\u9009\u53d6\u7684\u5220\u9664\u781d\u7801 \n{\n\tint i;\n\tif (d==m)\n\t{\n\t\tint y=dp();//dp()\u8868\u793a\u5220\u9664\u9009\u4e2d\u7684m\u4e2a\u781d\u7801\u540e\u53ef\u79f0\u51fa\u7684\u91cd\u91cf\u603b\u6570 \n\t\tmax1=max(max1,y);\n\t}\n\telse\n\t{\n\t\tfor (i=x+1;i<=n;i++)\n\t\t{\n\t\t\tvis[i]=1;//\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee \n\t\t\tdfs(i,d+1);\n\t\t\tvis[i]=0;\n\t\t}\n\t}\n}\n```\n\u5728\u6784\u9020\u7ec4\u5408\u6570\u540e\uff0c\u8fdb\u884c\u6ee1\u7bb1\u80cc\u5305\n\n```cpp\nint dp()\n{\n\tint cnt=1;\n\tint i,j;\n\tint a[21],s[21];\n\tint f[21][2001];\n\tint ans;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tif (vis[i]==1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[cnt]=i;\n\t\t\tcnt++;\n\t\t}\n\t}//\u8f7d\u5165\u5220\u9664\u781d\u7801\u540e\u781d\u7801\u987a\u5e8f \n\ts[0]=0;\n\tfor (i=1;i<=n-m;i++)\n\t{\n\t\ts[i]=s[i-1]+w[a[i]];\n\t}//\u8fdb\u884c\u524d\u7f00\u548c\uff0c\u4e00\u8fb9\u5728dp\u65f6\u8fdb\u884c\u4f18\u5316 \n\tf[0][0]=1;\n\tfor (i=1;i<=n-m;i++)\n\t{\n\t\tfor (j=0;j<=s[i];j++)\n\t\t{\n\t\t\tif (j<=s[i-1])\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][j]||f[i-1][j-w[a[i]]];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][j-w[a[i]]];\n\t\t\t}\n\t\t}\n\t}//\u6ee1\u7bb1\u80cc\u5305 \n\tans=0;\n\tfor (i=1;i<=s[n-m];i++)\n\t{\n\t\tans+=f[n-m][i];\n\t}//\u7edf\u8ba1 \n\treturn ans;\n}\n```\n\u6700\u540e\u9644\u5b8c\u6574\u7248\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,max1=0;\nint w[21],vis[21];\nint dp()\n{\n\tint cnt=1;\n\tint i,j;\n\tint a[21],s[21];\n\tint f[21][2001];\n\tint ans;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tif (vis[i]==1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[cnt]=i;\n\t\t\tcnt++;\n\t\t}\n\t}//\u8f7d\u5165\u5220\u9664\u781d\u7801\u540e\u781d\u7801\u987a\u5e8f \n\ts[0]=0;\n\tfor (i=1;i<=n-m;i++)\n\t{\n\t\ts[i]=s[i-1]+w[a[i]];\n\t}//\u8fdb\u884c\u524d\u7f00\u548c\uff0c\u4e00\u8fb9\u5728dp\u65f6\u8fdb\u884c\u4f18\u5316 \n\tf[0][0]=1;\n\tfor (i=1;i<=n-m;i++)\n\t{\n\t\tfor (j=0;j<=s[i];j++)\n\t\t{\n\t\t\tif (j<=s[i-1])\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][j]||f[i-1][j-w[a[i]]];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][j-w[a[i]]];\n\t\t\t}\n\t\t}\n\t}//\u6ee1\u7bb1\u80cc\u5305 \n\tans=0;\n\tfor (i=1;i<=s[n-m];i++)\n\t{\n\t\tans+=f[n-m][i];\n\t}//\u7edf\u8ba1 \n\treturn ans;\n}\nvoid dfs(int x,int d)//d\u8868\u793adfs\u6df1\u5ea6\uff0cx\u8868\u793a\u76ee\u524d\u9009\u53d6\u7684\u5220\u9664\u781d\u7801 \n{\n\tint i;\n\tif (d==m)\n\t{\n\t\tint y=dp();//dp()\u8868\u793a\u5220\u9664\u9009\u4e2d\u7684m\u4e2a\u781d\u7801\u540e\u53ef\u79f0\u51fa\u7684\u91cd\u91cf\u603b\u6570 \n\t\tmax1=max(max1,y);\n\t}\n\telse\n\t{\n\t\tfor (i=x+1;i<=n;i++)\n\t\t{\n\t\t\tvis[i]=1;//\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee \n\t\t\tdfs(i,d+1);\n\t\t\tvis[i]=0;\n\t\t}\n\t}\n}\nvoid read()\n{\n\tint i;\n\tcin>>n>>m;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tcin>>w[i];\n\t}\n\tdfs(0,0);\n\tcout<<max1<<endl;\n}\nint main()\n{\n\tread();\n\treturn 0;\n}\n```\n",
        "postTime": 1551271107,
        "uid": 119837,
        "name": "\u4e00\u53ea\u5c0f\u72d0\u72f8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u5e94\u8be5\u662f\u9053\u7eff\u9898\u3002\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u53ef\u4ee5\u66b4\u641c\u679a\u4e3e\u53bb\u6389\u7684\u781d\u7801\n\n```cpp\nvoid dfs(ll x,ll pre)//\u5f53\u524d\u8981\u5220\u7b2cx\u4e2a\u781d\u7801\uff0c\u524d\u4e00\u4e2a\u5220\u6389pre\n{\n\tif(x>m)//\u5230\u4e86\u8fb9\u754c\u5c31\u8ba1\u7b97\n\t{\n\t\tcpt();\n\t\treturn;\n\t}\n\tfor(ll i=pre+1;i<=n;++i)//\u5728\u5269\u4e0b\u7684\u781d\u7801\u4e2d\u9009\n\t{\n\t\tll tmp=a[i];//a[i]\u5373i\u7684\u8d28\u91cf\n\t\ta[i]=0;//\u53d8\u62100\u57fa\u672c\u4e0e\u5220\u6389\u7b49\u4ef7\n\t\tdfs(x+1,i);//\u641c\u7d22\n\t\ta[i]=tmp;//\u56de\u6eaf\n\t}\n}\n```\n\u90a3\u600e\u4e48\u641ecpt()\u5462?  \n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6070\u597d\u80cc\u5305.  \n`\u8bbef[i][j]\u8868\u793a\u524di\u4e2a\u7269\u54c1\u80fd\u5426\u9009\u51faj\u4f53\u79ef`  \n\u5219\u6709\uff1a$$f[i][j]=f[i-1][j-a[i]](i>=1,j>=a[i])$$\n$$f[0][0]=1$$\n\u663e\u7136\u53ef\u4ee5\u6eda\u52a8\u6389\u4e00\u7ef4\n```cpp\n#define maxn 21\nll a[maxn],n,m,ans=0,sum=0;//ans:\u6700\u7ec8\u7b54\u6848\uff0csum\uff1a\u8d28\u91cf\u548c\nbool vis[2001];//vis[j]:j\u662f\u5426\u53ef\u4ee5\u88ab\u7ec4\u6210\nvoid cpt()\n{\n\tmemset(vis,0,sizeof vis);//\u6e050\n\tvis[0]=1;\n\tfor(ll i=1;i<=n;++i)\n\t\tfor(ll j=sum;j>=a[i];--j)\n\t\t\tvis[j]|=vis[j-a[i]];\n\tll t=0;\n\tfor(ll i=1;i<=sum;++i)\n\t\tif(vis[i])++t;\n\tif(t>ans)ans=t;\n}\n```",
        "postTime": 1550388055,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "# **\u4e0a\u9762\u63d0\u4f9b\u4e00\u4e0b\u8003\u573a\u4e0a\u9a97\u5206\u7684\u601d\u8def\uff0c\u8981\u6b63\u89e3\u53ef\u4ee5\u5f80\u4e0b\u7ffb**\n***\n\u5176\u5b9e\u6570\u636e\u4e00\u5f00\u59cb\u7ed9\u6211\u7684\u611f\u89c9\u662f\u76f4\u63a5\u7206\u641c\u53ef\u8fc7\u7684\u2026\u2026\u867d\u7136\u4e8b\u5b9e\u8bc1\u660e\u5e76\u4e0d\u884c\u2026\u2026\u53ef\u662f\u67d0\u4e2a\u7f3a\u5fb7\u9b3c\u7ed9\u6211\u4eec\u6a21\u62df\u8d5b\u4e0a\u9664\u4e86\u8fd9\u9898\u2026\u2026\u6ca1\u529e\u6cd5\u60f3\u4e0d\u51fa\u6bd4\u8f83\u597d\u7684\u529e\u6cd5\u53ea\u80fd\u786c\u5e72\u4e86\u3002\n\n\u8fd9\u4e2a\u662f\u8003\u573a\u4e0a\u4e34\u65f6\u60f3\u51fa\u6765\u7136\u540e\u56de\u6765\u7a0d\u5fae\u8c03\u4e86\u4e00\u4e0b\u7684\u7248\u672c\uff0c\u5927\u6982\u7684\u601d\u8def\u662f\u901a\u8fc7meet-in-middle\u5c06\u95ee\u9898\u5206\u89e3\u95ee\u4e24\u4e2a\uff0c\u9996\u5148\u679a\u4e3e\u524d\u534a\u7ec4\u781d\u7801\u80fd\u591f\u5f97\u5230\u54ea\u4e9b\u503c\uff0c\u518d\u626b\u4e00\u904d1\u5230\u6240\u6709\u781d\u7801\u603b\u548c\uff08\u6bd4\u8f83\u7c7b\u4f3c[CF525E](https://www.luogu.org/problemnew/solution/CF525E)\u7684\u601d\u8def\uff09\uff0c\u9010\u4e2a\u68c0\u9a8c\u5176\u4e2d\u54ea\u4e9b\u503c\u53ef\u4ee5\u901a\u8fc7\u781d\u7801\u7ec4\u5408\u5f97\u5230\uff0c\u4f46\u8fd9\u4e2a\u590d\u6742\u5ea6\u5728\u6700\u5dee\u7684\u65f6\u5019\u5927\u6982\u662f\u8d85\u4e8610\u500d\u7684\u2026\u2026\uff08\u800c\u4e14\u5e38\u6570\u8fd8\u6bd4\u8f83\u5927\uff09\u4f46\u662f\u7531\u4e8e\u8fd9\u4e2a\u5c06\u76f4\u63a5\u7206\u641c\u7684\u590d\u6742\u5ea6\u5f00\u4e86\u4e2a\u6839\u53f7\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u4e0d\u5931\u4e3a\u4e00\u4e2a\u5728\u8003\u573a\u4e0a\u60f3\u4e0d\u51fa\u6765\u6b63\u89e3\u65f6\u5019\u7684\u597d\u529e\u6cd5\uff08\u6bd5\u7adfOI\u6309\u70b9\u7ed9\u5206\uff0c\u66b4\u529b\u5199\u597d\u8fd8\u662f\u5f88\u91cd\u8981\u4e86\uff09\u3002\n```cpp\n//60\u5206\u7206\u641c\uff08\u8fd9\u4e2a\u5206\u6570\u548c\u4ed6\u4eec\u526a\u679d\u526a\u7684\u4e0d\u597d\u7684DP+DFS\u597d\u50cf\u4e00\u6837\u554a233\uff09\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <map>\nusing namespace std;\nint n,m,a[30],b[30],ans,half,top;\nmap < int , int > weight[5000];\nvoid dfs1(register int sum,register int m,int id){\n    weight[id][sum] = 520;\n    if( m == half+1) return;//half=3/4n\n    dfs1( sum , m+1 , id );\n    if( b[m] )return;\n    dfs1( sum + a[m] , m + 1 , id );\n}\nbool dfs2(register int sum,register int m,register int want, int id){\n    bool ret=false;\n    if(weight[id][ want-sum ] == 520)\n        return true;\n    if( m == n+1) return false;\n    ret |= dfs2( sum , m+1 ,want ,id);\n    if( b[m] ) return ret;\n    if( sum + a[m] <= want)\n        ret |= dfs2( sum + a[m] , m+1 ,want ,id);\n    return ret;\n}\nint sum(int id){\n    register int result=0,maxn=0;\n    dfs1( 0, 1 , id );\n    for(register int i = 1; i <= n; i++)\n        if(!b[i])\n            maxn += a[i];\n    for(register int i = 1; i <= maxn; i++)\n        if(dfs2(0, half+1 ,i , id))result++;\n    return result;\n}\nvoid solution(register int num,register int id){\n    if(num == m){\n        ans = max( ans , sum( ++top ) );\n        return;\n    }\n    for(register int i = id; i <= n ; i++)\n        if( !b[i] ){\n            b[i] = true;\n            solution( num + 1 , i );\n            b[i] = false;\n        }\n}\nint main(){\n    cin>> n >> m;\n    half=n*3/4;\n    for(int i = 1; i <= n; i++)\n        cin>>a[i];\n    solution( 0 , 1 );//\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(C(n,m)*(2^(3/4*n)+2^(1/4*n)*sum(ai))*log(sum(ai)))\n    cout << ans;\n    return 0;\n}\n```\n***\n## \u55ef\u65e2\u7136\u662f\u5199\u9898\u89e3\uff0c\u6b63\u89e3\u8fd8\u662f\u8981\u653e\u4e00\u6ce2\u7684\u3002\n\n\u5176\u5b9epantw\u5927\u795e\u7684\u9898\u89e3\u7279\u522b\u597d\uff0c\u4e3a\u4ec0\u4e48\u4f60\u4eec\u4e0d\u7ed9\u4ed6\u9876\u5230\u6700\u524d\u9762\uff0c\u601d\u8def\u7684\u89e3\u91ca\u6211\u5728\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <bitset>\n#include <algorithm>\n#define MAX(a,b) a>b?a:b\nusing namespace std;\nconst int maxn=2018;\nint a[30],n,m,ans;\ninline char nc()\n{\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n    char ch=nc();int sum=0;\n    while(!(ch>='0'&&ch<='9'))ch=nc();\n    while(ch>='0'&&ch<='9')sum=(sum<<1)+(sum<<3)+ch-48,ch=nc();\n    return sum;\n}\nvoid dfs(int sum, int id, bitset<maxn> ret){//sum\u4e3a\u5f53\u524d\u53d6\u7528\u781d\u7801\u6570\uff0cid\u4e3a\u5f53\u524d\u7528\u4e86\u7b2c\u51e0\u4e2a\u781d\u7801\uff0cret\u7528\u4e8e\u5b58\u50a8\u5f53\u524d\u53ef\u4ee5\u79f0\u51fa\u54ea\u4e9b\u8d28\u91cf\n    if(sum == n - m + 1){//n-m\u4e3a\u6700\u591a\u80fd\u62ff\u7684\u781d\u7801\u4e2a\u6570\uff0csum==n-m+1\u5373\u62ff\u5b8c\u4e86\n        ans = MAX(ans,(int)ret.count());//\u5373ret\u4e2d1\u7684\u4e2a\u6570\uff08\u5c31\u662f\u80fd\u79f0\u51fa\u7684\u91cd\u91cf\u7684\u4e2a\u6570\uff09\n        return;\n    }\n    for(register int i = id; i <= sum + m; i++)\n        dfs(sum + 1, i + 1, ret << a[i] | ret);//\u5408\u5e76\u539f\u6765\uff08\u6240\u6709\u80fd\u79f0\u51fa\u7684\u91cd\u91cf+a[i]\uff09\u548c\uff08\u6240\u6709\u539f\u6765\u80fd\u79f0\u51fa\u7684\u8d28\u91cf\uff09\u8fd9\u4e24\u4e2a\u96c6\u5408\uff08Orz pantw\uff09\n}\nint main(){\n    n=read(),m=read();\n    for(int i = 1; i <= n; ++i)\n        a[i]=read();\n    bitset<maxn> b;\n    b[0] = 1;\n    dfs( 1, 1, b );\n    printf(\"%d\\n\", --ans);//\u7531\u4e8e\u4e0d\u5305\u62ec0\u6240\u4ee5ans-1\n    return 0;\n}\n//\u672c\u6765\u60f3\u62a2\u4e2a\u6700\u4f18\u89e3\uff0c\u7ed3\u679c\u5f53\u524d\u53ea\u6709rank12\uff0c\u4e0d\u8fc7\u6211\u7a7a\u95f4\u6bd4\u8f83\u5c0f\n```\n***\n## \u6700\u540e\u60f3\u8bf4\u4e00\u4e0b\uff0c\u8003\u573a\u4e0a\u5c31\u7b97\u60f3\u4e0d\u51fa\u6b63\u89e3\uff0c\u4e5f\u4e0d\u8981\u653e\u5f03\uff0c\u8981\u52aa\u529b\u6253\u597d\u66b4\u529b?\n",
        "postTime": 1535471625,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u8fd9\u4e48~~\u597d~~(water)\u7684bool dp\u600e\u4e48\u6ca1\u6709\u4eba\u5199`bitset`\u4f18\u5316\u5462~~(\u4ee5\u4e0b\u5185\u5bb9Pascal\u8bf7\u8df3\u8fc7)~~\n\n## bitset\u662f\u4ec0\u4e48\n`bitset`\u662fSTL\u4e2d\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u6309\u4f4d\u50a8\u5b58`bool`\u503c\n\n\u56e0\u4e3a`1byte = 8bit`\uff0c\u800c\u4e00\u4e2a`bool`\u91cf\u5360`1byte`\uff0c\u6240\u4ee5`bitset`\u7684\u7a7a\u95f4\u662f`bool`\u6570\u7ec4\u7684$1 \\over 8$\uff0c\u5728\u4f4d\u8fd0\u7b97\u4e0a\u901f\u5ea6\u4e5f\u66f4\u5feb\uff0c\u56e0\u4e3a\u5b58\u50a8\u66f4\u52a0\u7d27\u51d1\uff0c\u53ef\u4ee5\u8fd0\u7528\u4e8e\u5404\u79cd`bool`\u50a8\u5b58\u548c~~\u6253\u66b4\u529b~~dp\u4e2d\uff0c\u4f8b\u5982\u672c\u9898\u548c\u4e00\u4e9b`floyd`\u5224\u65ad\u5173\u7cfb\u9898\uff0c\u52a0\u901f\u660e\u663e\n\n## \u57fa\u672c\u601d\u8def\n\n\u57fa\u672c\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7531\u4e8e`n`\u5f88\u5c0f\uff0c\u76f4\u63a5DFS\u679a\u4e3e\u5220\u9664\u7684\u65b9\u6848\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u88c5\u7bb1(\u80cc\u5305)\u7b97\u51fa\u6570\u91cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(Sum \\times C(n,m))$ \u5176\u4e2dsum\u662fa[i]\u7684\u548c\uff0c\u697c\u4e0b\u8bf4\u7684\u90fd\u5f88\u6e05\u695a\u4e86\n\ndp\u7684\u8fc7\u7a0b\uff1a\n```cpp\nmemset(f, false, sizeof f); //f[i]\u8868\u793a\u53ef\u4ee5\u79f0\u51fai\u8fd9\u4e2a\u91cd\u91cf\nf[0] = true;\nfor(int i=1; i<=n-m; i++)\n\tfor(int j=sum; j>=d[i]; j--) //\u7c7b\u4f3c\u80cc\u5305\uff0cd[]\u662fDFS\u7ed3\u675f\u540e\u7684\u9009\u62e9\n    \tf[i] |= f[i-d[i]]; //\u6309\u4f4d\u6216\n```\n\n## \u4f18\u5316\n\n\u5176\u4e2ddp\u7684\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528`bitset`\u4f18\u5316\uff0c\u7c7b\u4f3c\u6574\u6570`bitset`\u53ef\u4ee5\u652f\u6301\u4f4d\u8fd0\u7b97\u64cd\u4f5c\uff0c\u628a\u6574\u4e2a`f[]`\u6570\u7ec4\u7528\u4e00\u4e2a`bitset`\u6a21\u62df\n\n\u5bf9\u4e8e\u6bcf\u4e2a`d[i]`\uff0c\u53ea\u9700\u8981\u8fdb\u884c\u64cd\u4f5c`f |= f << d[i]`\u5c31\u53ef\u4ee5\u6a21\u62df\u539f\u6765\u7684\u7b2c\u4e8c\u5c42\u5faa\u73af\uff08`<<`\u662f`bitset`\u7684\u5de6\u79fb\u64cd\u4f5c\uff0c\u539f\u6765\u7684`f[i]`\u5de6\u79fb`d[i]`\u540e\u5c31\u79fb\u5230\u4e86`d[i + f[i]]`\uff0c\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\n\n\u90a3\u4e48dp\u4ee3\u7801\u5c31\u53ef\u4ee5\u5199\u6210\uff1a\n```cpp\nbitset<2048> f;\nint cal(){\n    f.reset(); //\u6574\u4e2a\u6e05\u7a7a\uff0c\u5e26\u4e00\u4e2aint\u53c2\u6570\u5c31\u6e05\u7a7a\u67d0\u4e00\u4f4d\n    f[0] = true;\n    for(int i=1; i<=use; i++) //\u679a\u4e3e\u6bcf\u4e00\u4e2a\u781d\u7801\n        f |= f<<d[i]; //\u4e00\u4e2a\u64cd\u4f5c\u76f4\u63a5\u4ee3\u66ff\u4e00\u5c42\u5faa\u73af\n    return f.count() - 1; //count()\u8fd4\u56de1\u7684\u4e2a\u6570\uff0c\u56e0\u4e3a\u4e0d\u7edf\u8ba10\uff0c\u6240\u4ee5-1\n}\n```\n\u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0cdfs\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u4ee5\u4e0b\u90fd\u6ca1\u6709\u5f00O2\n\n\n\u539f\u65f6\u95f4\uff1a[\u8bc4\u6d4b\u8bb0\u5f551](https://www.luogu.org/record/show?rid=8886702)$\\quad$`968ms`\n\n\u73b0\u65f6\u95f4\uff1a[\u8bc4\u6d4b\u8bb0\u5f552](https://www.luogu.org/record/show?rid=8886702)$\\quad$`80ms`",
        "postTime": 1532501039,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u95ee\u9898\u7684\u5b9e\u8d28\u5c31\u662f\u5b8c\u6210\u5bf9\u4e0d\u540c\u7684\u6570\u503c\u7684\u7ec4\u5408\uff0c\u6c42\u80fd\u591f\u5f62\u6210\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u7ec4\u5408\u3002\u9996\u5148\u5efa\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7136\u540e\u5bf9\u8be5\u641c\u7d22\u6811\u505a\u4e00\u6b21\u6df1\u5ea6\u904d\u5386\u3002\u7531\u4e0a\u56fe\u53ef\u4ee5\u77e5\u9053\u6bcf1\u79cd\u781d\u7801\u90fd\u5b58\u5728\u591a\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u53d60\uff5en\u4e2a\uff0c\u540c\u6837\u5f53\u7b2c1\u79cd\u781d\u7801\u53d60\u4e2a\u7684\u65f6\u5019\uff0c\u540c\u6837\u7b2c\u4e8c\u79cd\u781d\u7801\u5b58\u5728\u591a\u79cd\u53d6\u6cd5\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u5373\u5efa\u7acb\u4e86\u5982\u4e0a\u56fe\u6240\u793a\u7684\u641c\u7d22\u6811\u3002\u76f4\u63a5\u6df1\u641c1\uff5e6\uff0c\u76f4\u5230depth>6\uff0c\u7136\u540e\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u7ec4\uff0c\u8bb0\u5f55\u80fd\u591f\u79f0\u91cd\u7684\u781d\u7801\uff0c\u7edf\u8ba1\u8be5\u6570\u7ec4\u7684\u503c\uff0c\u5f97\u51fa\u80fd\u591f\u79f0\u91cd\u7684\u79cd\u7c7b\u3002\n\n\n#\u662f\u4e0d\u662f\u770b\u8d77\u6765\u8d3c\u5b98\u65b9\uff0c\u4f46\u662f\u5f53\u4f60\u770b\u4e86\u4ee3\u7801\u540e\u4f60\u4f1a\u53d1\u73b0QWQ:\n\n\u7a0b\u5e8f\uff1a\n\n\nvar f:array[0..1000]of longint;  //\u7528\u4e8e\u8bb0\u5f55\u80fd\u591f\u79f0\u91cd\u7684\u4e0d\u540c\u91cd\u91cf\n\na,w:array[1..6]of longint; \u6570\u7ec4a\u5b58\u653e\u781d\u7801\u7684\u4e2a\u6570\uff0c\u6570\u7ec4w\u5b58\u653e\u781d\u7801\u7684\u91cd\u91cf\n\n\n\n\n\n```cpp\n  s,i:longint;\nprocedure dfs(i:longint);\nvar j:longint;\nbegin\n  if i>6 then begin        //\u5b8c\u62101\u6b216\u4e2a\u781d\u7801\u7684\u7ec4\u5408\uff0c\u5e76\u8bb0\u5f55\u80fd\u591f\u79f0\u91cd\u7684\u91cd\u91cf\n    f[s]:=1;exit;\n  end;\n  for j:=0 to a[i] do begin     //\u6309\u4e0d\u540c\u79cd\u7c7b\u7684\u781d\u7801\u6570\u91cf\u641c\u7d22\u80fd\u591f\u79f0\u91cd\u7684\u91cd\u91cf\n    s:=s+j*w[i];\n    dfs(i+1);        //  \u8fdb\u5165\u4e0b\u4e00\u7c7b\u522b\u781d\u7801\u91cd\u91cf\u7684\u641c\u7d22\n    s:=s-j*w[i];   //\u6062\u590d\u73b0\u573a\uff0c\u4e3a\u641c\u7d22\u4e0b\u4e00\u4e2a\u91cd\u91cf\u505a\u51c6\u5907\n  end;\nend;\nbegin\n  for i:=1 to 6 do read(a[i]);  //\u5206\u522b\u8bfb\u5165\u781d\u7801\u7684\u4e2a\u6570\n  w[1]:=1;w[2]:=2;w[3]:=3; w[4]:=5;w[5]:=10;w[6]:=20;//\u5b9a\u4e49\u781d\u7801\u7684\u91cd\u91cf\n  fillchar(f,sizeof(f),0);  //\u521d\u59cb\u5316\u6570\u7ec4f\uff1b\n  s:=0;      //\u521d\u59cb\u5316\u521d\u503cs\uff0c\n  dfs(1);  //\u6df1\u5ea6\u641c\u7d22\u8c03\u7528\u8fc7\u7a0b\n  s:=0;\n  for i:=1 to 1000 do s:=s+f[i];\n  writeln('Total=',s);\nend.\n//\u8001\u94c1\u6ca1\u95ee\u9898\uff01\uff01\uff01\n```",
        "postTime": 1505479197,
        "uid": 25819,
        "name": "mr\u8f84",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u6df1\u641c\u679a\u4e3e\u9009\u62e9\u7684\u781d\u7801\u3002\n\n\u52a8\u89c4\u53ef\u80fd\u6027\u3002\n\n\u770b\u6ca1\u6709pascal\u7684\u9898\u89e3\u8d21\u732e\u4e00\u4efd\u3002\n\n\n\n\n\n\n```cpp\nvar a,b:array[1..100]of longint;\n    i,n,m,sum,ans:longint;\n    f:array[0..200000]of boolean;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a);\n  exit(b);\nend;\nprocedure qsort(l,r:longint);\nvar i,j,mid,p:longint;\nbegin\n  i:=l; j:=r;\n  mid:=a[(l+r)div 2];\n  while i<j do\n  begin\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then\n    begin\n      p:=a[i]; a[i]:=a[j]; a[j]:=p;\n      inc(i); dec(j);\n    end;\n  end;\n  if j>l then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nprocedure dp(sum:longint);\nvar i,j,k:longint;\nbegin\n  k:=0; f[0]:=true;\n  for i:=1 to n-m do\n    for j:=sum downto 0 do\n    if f[j] then\n    if not f[b[i]+j] then\n    begin inc(k); f[b[i]+j]:=true; end;\n  ans:=max(ans,k);\nend;\nprocedure dg(max1,num,sum:longint);\nvar i,j:longint;\nbegin\n  if num=0 then\n  begin\n  for j:=1 to sum do f[j]:=false;\n  dp(sum);\n  exit;\n  end;\n  for i:=max1+1 to n do\n  begin\n    b[n-num-m+1]:=a[i];\n    dg(i,num-1,sum+a[i]);\n  end;\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do read(a[i]);\n  qsort(1,n);\n  dg(0,n-m,0);\n  writeln(ans);\nend.\n```",
        "postTime": 1479979363,
        "uid": 13438,
        "name": "\u5317\u8fb0\u5317\u8fb0\u5317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u5feb\u6392+Dfs+DP+\u526a\u679d\n\n\u00b7\u679a\u4e3e\u53d6\u51fa\u781d\u7801\n\n\u00b7\u5f53\u524d\u603b\u8d28\u91cf<=\u6700\u5927\u503c\u65f6\u63a8\u51fa\n\n\u00b7\u7531\u5c0f\u5230\u5927\u53d6\u51fa\n",
        "postTime": 1388488477,
        "uid": 69,
        "name": "usqwedf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "### **\u53d1\u4e00\u7bc7Java\u8bed\u8a00\u7684\u9898\u89e3**\n\n#### \u540c\u6837\u662f\u4f7f\u7528BitSet\uff0c\u56e0\u4e3aJava\u548cC++\u7684\u7279\u6027\u4e0d\u540c\uff0c\u6240\u4ee5\u4f7f\u7528\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837\u3002\n\n##### \u7b2c\u4e00\uff0c\u89e3\u9898\u601d\u8def\n1. \u9012\u5f52\u6cd5+\u56de\u6eaf\u6cd5 \u641e\u5b9a\u9009\u53d6N-M\u781d\u7801\uff0c\u66b4\u529b\u51fa\u5947\u8ff9(\u5176\u5b9e\u662fN\u6bd4\u8f83\u5c0f)\n2. \u4f7f\u7528BitSet\u96c6\u5408\uff0c\u5faa\u73af\u8bb0\u5f55\u80fd\u79e4\u51fa\u7684\u91cd\u8981\u3002\n3. \u5982\u679c\u5185\u5b58\u80fd\u518d\u5927\u4e9b\uff0c\u4f7f\u7528HashSet\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u76ee\u524d125MB\u7684\u5b58\u50a8\u540e\u9762\u76844\u4e2a\u4f1aMLE\n\n##### \u7b2c\u4e8c\uff0c\u9012\u5f52+\u56de\u6eaf\u6cd5\uff0c\u53d6M\u4e2a\u88ab\u820d\u5f03\u7684\u781d\u7801\uff0c\u4ee5\u5b9e\u73b0\u53d6N-M\u4e2a\u79f0\u91cd\u781d\u7801\uff0c\u8fd9\u4e2a\u2026\u2026\u6211\u60f3\u5927\u5bb6\u90fd\u5e94\u8be5\u4f1a\u5427\n\n```java\n    private static void dfs(int s, int cnt) {\n        if (cnt == M) {\n            int next = count();\n            if (next > ans) ans = next;\n        }\n        if (M == 0) return;\n        for (int i = s; i < N; i++) {\n            if (vis[i]) continue;\n            vis[i] = true;\n            dfs(i + 1, cnt + 1);\n            vis[i] = false;\n        }\n    }\n```\n\n##### \u7b2c\u4e09\uff0c\u8bf4\u91cd\u70b9\uff0cJava\u4e2dBitSet\u7684\u4f7f\u7528\n1. C++\u4e2d\u8fd9\u6837\u3010**_b = b | b << w[j]_**\u3011\u7684\u7279\u6027\u5728 java\u4e2d\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u8981\u8f6c\u53d8\u601d\u8def\n\n\n\n2. \u4eceJava\u7684 BitSet\u7684API\u5165\u624b\uff0c\u9009\u53d6\u4e0b\u9762\u8fd9\u4e9b\u65b9\u6cd5\n\n\n\n- **void set(int index)**\n\t\u5c06\u6307\u5b9a\u7d22\u5f15\u5904\u7684\u4f4d\u8bbe\u7f6e\u4e3a true\u3002\n    \n- **int cardinality( )**\n\u8fd4\u56de\u6b64 BitSet \u4e2d\u8bbe\u7f6e\u4e3a true \u7684\u4f4d\u6570\u3002\n\n- **void clear( )**\n\u5c06\u6b64 BitSet \u4e2d\u7684\u6240\u6709\u4f4d\u8bbe\u7f6e\u4e3a false\u3002\n\n- **int nextSetBit(int startIndex)**\n\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8bbe\u7f6e\u4e3a true \u7684\u4f4d\u7684\u7d22\u5f15\uff0c\u8fd9\u53d1\u751f\u5728\u6307\u5b9a\u7684\u8d77\u59cb\u7d22\u5f15\u6216\u4e4b\u540e\u7684\u7d22\u5f15\u4e0a\u3002\n\n\n\n3. \u4ee3\u7801\u903b\u8f91\n\n- \u5728dfs\u4e2d\u53d6\u4e86N-M\u4e2a\u781d\u7801\u540e\uff0c\u6570\u5f53\u524d\u9009\u53d6\u7684\u781d\u7801\u53ef\u4ee5\u79e4\u51fa\u7684\u91cd\u91cf\u6570\n\n\n```java\n        if (cnt == M) {\n            int next = count();\n            if (next > ans) ans = next;\n        }\n```\n\n- \u4f7f\u7528\u4e24\u4e2aBitSet\uff0cset\u548ctmp1  \n    \n\tset \u5b58\u50a8\u5df2\u7ecf\u79e4\u51fa\u7684\u91cd\u91cf\n\t\t\n   tmp1  \u5b58\u653e\u52a0\u5165\u4e0b\u4e00\u4e2a\u781d\u7801\uff0c\u53ef\u4ee5\u79e4\u51fa\u7684\u91cd\u91cf\u6570\uff0c\u540c\u65f6\u52a0\u5165\u5df2\u79e4\u51fa\u7684\u91cd\u91cf\n\t\n   \u6700\u540e\u4ea4\u6362\u4e24\u4e2aBitSet\uff0c\u518d\u6b21\u5faa\u73af\u3002 \n    \n```java\n    private static int count() {\n        set.clear();\n        tmp1.clear();\n        int n;\n        for (int i = 0; i < N; i++) {\n            if (vis[i]) continue;\n            set.set(0);//\u8fd9\u6837\u53ef\u4ee5\u4e0d\u7528\u7279\u610f\u6dfb\u52a0\u781d\u7801\u81ea\u8eab\u7684\u91cd\u91cf\n            n = set.nextSetBit(0);//\u4ece\u5f00\u59cb\u6216\u8005\u4e0b\u4e00\u4e2a\u4e3atrue\u7684\u7d22\u5f15\u53f7\n            while (n >= 0) {\n                tmp1.set(n);//\u52a0\u5165\u5df2\u79e4\u51fa\u7684\u91cd\u91cf\n                tmp1.set(n + base[i]);//\u52a0\u5165\u4e0b\u4e00\u4e2a\u781d\u7801\uff0c\u53ef\u4ee5\u79e4\u51fa\u7684\u91cd\u91cf\u6570\n                n = set.nextSetBit(n + 1);\n            }\n            BitSet tmp2 = set;\n            set = tmp1;\n            tmp1 = tmp2;\n            tmp1.clear();\n        }\n        return set.cardinality() - 1;//\u53bb\u9664\u91cd\u91cf0\n    }\n```\n\n    \n4. \u6700\u540e\u662f\u5b8c\u6574\u7684\u4ee3\u7801\n\n```java\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.StreamTokenizer;\nimport java.util.BitSet;\n\npublic class Main {\n    private static int N, M, ans;\n    private static int[] base;\n    private static boolean[] vis;\n    private static BitSet set;\n    private static BitSet tmp1;\n\n    public static void main(String[] args) throws Exception {\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        in.nextToken();\n        N = (int) in.nval;\n        base = new int[N];\n        vis = new boolean[N];\n        in.nextToken();\n        M = (int) in.nval;\n\n        for (int i = 0; i < N; i++) {\n            in.nextToken();\n            base[i] = (int) in.nval;\n        }\n        ans = 0;\n        set = new BitSet();\n        tmp1 = new BitSet();\n        dfs(0, 0);\n        System.out.println(ans);\n    }\n\n    private static int count() {\n        set.clear();\n        tmp1.clear();\n        int n;\n        for (int i = 0; i < N; i++) {\n            if (vis[i]) continue;\n            set.set(0);\n            n = set.nextSetBit(0);\n            while (n >= 0) {\n                tmp1.set(n);\n                tmp1.set(n + base[i]);\n                n = set.nextSetBit(n + 1);\n            }\n            BitSet tmp2 = set;\n            set = tmp1;\n            tmp1 = tmp2;\n            tmp1.clear();\n        }\n        return set.cardinality() - 1;\n    }\n\n    private static void dfs(int s, int cnt) {\n        if (cnt == M) {\n            int next = count();\n            if (next > ans) ans = next;\n        }\n        if (M == 0) return;\n        for (int i = s; i < N; i++) {\n            if (vis[i]) continue;\n            vis[i] = true;\n            dfs(i + 1, cnt + 1);\n            vis[i] = false;\n        }\n    }\n}\n\n```\n\n    \n    \n    \n    \n    \n    ",
        "postTime": 1572787187,
        "uid": 236490,
        "name": "\u738b\u9e4fPRO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u5dee\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.lemir3.red/2019/10/23/Project1441\u781d\u7801\u79f0\u91cd\u9879\u76ee\u62a5\u544a/)\n\n## \u9898\u76ee\u5206\u6790\n\n\u90a3\u4e2a...\u6211\u7684\u601d\u8def\u8c8c\u4f3c\u5f88\u6bd2\u7624.\n\n\u5148\u7528\u641c\u7d22\u641c\u51fa\u8981\u5220\u53bb\u7684\u6570,\u538b\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4e32\u4e2d,\u5229\u7528\u7269\u7ade\u795e\u4ed9\u540c\u684c\u7684$fx991$\u7b97\u51fa$C^{4}_{20}$\u53ea\u67094845,\u53ef\u4ee5\u63a5\u53d7.\n\n\u6bcf\u641c\u5230\u4e00\u4e2a\u4e32\u540e,\u8dd1\u4e00\u904d\u80cc\u5305,\u80cc\u5305\u7684\u601d\u8def\u7c7b\u4f3c\u4e8e[*noip2018 d1t2\u8d27\u5e01\u7cfb\u7edf*](https://www.luogu.org/problem/P5020),\u7528$01$\u80cc\u5305\u5148\u7b97\u51fa\u5269\u4e0b\u7684\u6570\u80fd\u591f\u7ec4\u5408\u51fa\u6765\u7684\u6570,\u7136\u540e\u7edf\u8ba1\u4e00\u904d\u6240\u6709\u80fd\u591f\u7ec4\u5408\u51fa\u6765\u7684\u6570,\u8bb0\u5f55\u4e0b\u7edf\u8ba1\u7684\u6700\u5927\u503c\u5373\u53ef.\n\n\u4ee3\u7801\u4e5f\u5f88\u597d\u5b9e\u73b0.\n\n## \u4ee3\u7801\n\n```cpp\n#include \"bits/stdc++.h\"\n#define lxl long long\n#define R register\nusing namespace std;\n\nlxl n,m,cnt,sec,ans,tot;\nlxl a[21],f[20010];\n\ninline lxl read(){char c=getchar();lxl f=1,output=0;for(;!isdigit(c);c=getchar())if(c=='-')f=-1;for(;isdigit(c);c=getchar())output=(output<<1)+(output<<3)+c-'0';return output*f;}\n//\"\u5fc5\u987b\u719f\u7ec3\u638c\u63e1\u538b\u884c\u6280\u5de7\"\ninline void dp()\n{\n\tcnt=0;\n\tmemset(f,-0x3f,sizeof(f));\n\tf[0]=0;\n\tfor(R lxl i=1;i<=n;++i)\n\t{\n\t\tif(sec&(1<<i))continue;//\u66b4\u529b\u5224\u65ad\u8fd9\u4e2a\u6570\u6709\u6ca1\u6709\u88ab\u5220\u6389\n\t\tfor(R lxl j=tot;j>=a[i];j--)f[j]=max(f[j],f[j-a[i]]+1);//01\u80cc\u5305,\u6ce8\u610f\u5012\u5e8f\u679a\u4e3e\n\t}\n\tfor(R lxl i=1;i<=tot;++i)if(f[i]>0)cnt++;//\u5982\u679c\u8fd9\u4e2a\u6570\u80fd\u591f\u88ab\u5269\u4e0b\u7684\u6570\u7ec4\u5408\u51fa\u6765,\u7d2f\u52a0\u7b54\u6848\n}\ninline void work(lxl now,lxl pick)\n{\n\tif(pick==m)\n\t{\n\t\tdp();\n\t\tans=max(ans,cnt);\n\t\treturn;\n\t}\n\tfor(R lxl i=now+1;i<=n;++i)\n\t{\n\t\tsec|=1<<i;//\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7f6e\u4e3a1\n\t\twork(i,pick+1);\n\t\tsec&=(~(1<<i));//\u53bb\u6389\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u76841\n\t}\n}\n\nsigned main(void)\n{\n\tn=read(),m=read();\n\tfor(R lxl i=1;i<=n;++i)a[i]=read(),tot+=a[i];\n\twork(0,0);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1571838056,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u7684\u662f\u641c\u7d22+dp\uff0c\u4f46\u641c\u7d22\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u7528\u7b97\u6cd5\u5e93\u4e2d\u7684next_permutation\u4ee3\u66ff\u3002\n\n\u8f93\u5165\u540e\u5148\u5efa\u4e00\u4e2ax\u6570\u7ec4\uff0c\u628a\u540en-m\u4e2a\u6570\u8d4b\u503c\u4e3a1\uff0c\u4e4b\u540e\u5c31\u7528next_permutation\u751f\u6210x\u7684\u5168\u6392\u5217\u5373\u53ef\u627e\u5230n\u4e2a\u6570\u4e2d\u9009n-m\u4e2a\u7684\u6240\u6709\u60c5\u51b5\n\n\u7136\u540e\u752801\u80cc\u5305\u7684\u601d\u60f3\uff1a\u5bf9\u4e8e\u7b2ci\u4e2a\u781d\u7801\uff0c\u8981\u79f0\u51faj\u7684\u91cd\u91cf\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u9009\u6216\u4e0d\u9009\u3002\u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```cpp\ndp[i][j]=dp[i-1][j]|dp[i-1][j-a[i]]\n```\n\u518d\u52a0\u4e0aj\u4e0ea[i]\u5927\u5c0f\u5173\u7cfb\u7684\u5224\u65ad\u5c31\u884c\u4e86\u3002\uff08\u6700\u597d\u7528\u6eda\u52a8\u6570\u7ec4\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n#include<string>\nusing namespace std;\nint dp[2][10000];//i:\u7b2ci\u4e2a\u781d\u7801\uff0cj:\u79f0j\u7684\u91cd\u91cf\nint x[100]; //x[i]\u5b58\u7b2ci\u4e2a\u781d\u7801\u9009\u4e0d\u9009\uff0c\u9009\u4e3a1\uff0c\u4e0d\u9009\u4e3a0\nint a[100];//\u6240\u6709\u781d\u7801\nint b[100];//\u5b58\u5f53\u524d\u60c5\u51b5\u4e0b\u6240\u6709\u781d\u7801\nint l[100000];//l[i]\u5b58\u50a8i\u7684\u91cd\u91cf\u80fd\u4e0d\u80fd\u79f0\u51fa\u6765\uff0c>0\u8868\u793a\u80fd\uff0c=0\u4e0d\u80fd\nint sum=0;\nint n,m;\nint main(){\n    scanf(\"%d%d\",&n,&m);//\u8f93\u5165\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        sum+=a[i];\n    }\n    //\u4e0b\u9762\u751f\u6210n\u9009n-m\u7684\u6240\u6709\u60c5\u51b5\n    for(int i=1;i<=n;i++){\n        x[i]=1;\n    } \n    for(int i=1;i<=m;i++){\n        x[i]=0;\n    }\n    int maxn=0;\n    do{\n        int j1=1;\n        for(int i=1;i<=n;i++){\n            if(x[i]==1) {\n                b[j1++]=a[i];//\u5c06x\u6570\u7ec4\u8f6c\u5316\u4e3ab\u6570\u7ec4\n            }\n        }\n        j1--;\n        memset(dp,0,sizeof(dp));\n        memset(l,0,sizeof(l));\n        int ans=0;\n        for(int i=0;i<=sum;i++){\n            dp[i%2][0]=1;\n        }\n        for(int i=1;i<=j1;i++){\n            for(int j=1;j<=sum;j++){\n            \t//dp\n                dp[i&1][j]|=dp[(i-1)&1][j];\n                if(j>=b[i]) dp[i&1][j]|=dp[(i-1)&1][j-b[i]];\n                if(dp[i&1][j]) l[j]++;\n            }\n        }\n        for(int i=1;i<=sum;i++){\n            if(l[i]>0) ans++;//\u5982\u679c\u53ef\u4ee5\uff0cans+1\n        }\n        maxn=max(maxn,ans);\n    }while(next_permutation(x+1,x+n+1));\n    printf(\"%d\",maxn);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1559131500,
        "uid": 119504,
        "name": "tony123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "## ~~\u4e00\u9053\u6807\u51c6\u7684\u6c34\u9898...~~\n### \u5148\u5728n\u4e2a\u6570\u5b57\u4e2d\u627e\u5230m\u4e2a\u5220\u6389\u7684\u6570\u5b57,\u7136\u540e\u4f7f\u7528\u53ef\u884c\u6027dp\u5224\u65ad\u4e00\u4e0b\u5373\u53ef....\n\n### \u65f6\u95f4\u590d\u6742\u5ea6O(C(4,20)\\*2000\\*n\\)\u968f\u4fbf\u8fc7\u4e86\n\n```\nvoid cal(int x1,int x2,int x3,int x4)\n{\n\tint ans=0;\n\tmemset(f,false,sizeof(f));\n    f[0]=true;\n\tfor (int i=1;i<=n;++i)\n\t\tif (i!=x1 && i!=x2 && i!=x3 && i!=x4)\n\t\t{\n\t\t\tfor (int j=2000;j>=0;--j)\n            \tif (f[j]) f[j+a[i]]=true;\n      \t}\n\tfor (int i=1;i<=2000;++i) if (f[i]) ++ans;\n\tan=max(an,ans);\n\treturn;\n}\n```\ndp\u90e8\u5206\n```\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tif (m==0) cal(0,0,0,0);\n\telse\n\t{\n\t\tfor (int i=1;i<=n;++i)\n        {\n\t\t\tif (m==1) cal(i,0,0,0);\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (int j=i+1;j<=n;++j)\n\t\t\t\t{\n\t\t\t\t\tif (m==2) cal(i,j,0,0);\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (int k=j+1;k<=n;++k)\n\t\t\t\t\t\t\tif (m==3) cal(i,j,k,0);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tfor (int l=k+1;l<=n;++l) cal(i,j,k,l);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<an;\n\treturn 0;\n}\n```",
        "postTime": 1543024972,
        "uid": 42841,
        "name": "\u5a04\u53e3\u8083\u884c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u8fc7\u7684\u7b2c\u4e00\u9053\u84dd\u9898\n\n\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n1\u3001\n\n\u6211\u4eec\u53ef\u4ee5\u7528\n\n### \u5148dfs\u518d\u80cc\u5305\n\ndfs\u51fa\u53bb\u6389\u54ea\u51e0\u4e2a\u781d\u7801\n\n\u752801\u80cc\u5305\u5224\u65ad\u51fa\u603b\u6570\n\n2\u3001\n\n### \u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u72b6\u538bdp\n\n\u72b6\u6001\u662f\u9009\u7684\u781d\u7801\n\n\u7b2c\u4e00\u79cd\u4ee3\u7801\uff0c\u7b2c\u4e8c\u79cd\u6211\u6ca1\u5199\uff1a\n\n\n\n```pascal\nvar\n  a:array[-10..2005] of longint;\n  vis:array[-10..2005] of boolean;\n  n,m,maxs,i:longint;\nprocedure pd;\nvar\n  i,j,m,s:longint;\n  v:array[-10..10005] of boolean;\nbegin\n  m:=0;\n  s:=0;\n  for i:=1 to n do\n    if not vis[i] then m:=m+a[i];\n  //for i:=1 to n do\n    ///if not vis[i] then write(a[i],' ');\n\n  v[0]:=true;\n  for i:=1 to m do\n    v[i]:=false;\n  for i:=1 to n do\n    if not vis[i] then\n      //begin\n        for j:=m downto a[i] do\n          if v[j-a[i]] then v[j]:=true;\n        //write(a[i],' ');\n      //end;\n  for i:=1 to m do\n    if v[i] then inc(s);\n  //if s=33 then\n    ///for i:=1 to m do\n    //?writeln(v[i],' ');\n  //for i:=1 to m do write(v[i],' ');\n  //writeln;\n  //writeln(s);\n  //////writeln(' ',m,' ',s);\n  if s>maxs then maxs:=s;\n  //writeln(s);\nend;\nprocedure dfs(n1,a:longint);\nvar i:longint;\nbegin\n  if n1>m then\n    begin\n      //writeln(1000111111);\n      pd;\n      exit;\n    end;\n  for i:=a+1 to n do\n    begin\n      vis[i]:=true;\n      dfs(n1+1,i);\n      vis[i]:=false;\n    end;\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n    read(a[i]);\n  dfs(1,0);\n  writeln(maxs);\nend.\n\n```\n\u8c22\u8c22\u5927\u5927\u5927\u4f6c\uff0c\u805a\u805a\u805a\u8001\uff08\u5de8\u5de8\u5de8\u4f6c\uff09\u4eec\u7684\u89c2\u8d4f\n\n\n\u5b9e\u6d4b\u65f6\u95f4701ms/\u7a7a\u95f40.79MB\u5e78\u597d\u6ca1\u8d85\u65f6",
        "postTime": 1542981200,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "# DP\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u4e00\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u7684\n# ~~\u7136\u800c\u5e76\u4e0d\u80fd\u8eb2\u8fc7DFS~~\n\u5927\u4f53\u601d\u8def\u662f\u5148DFS\u6240\u6709\u60c5\u51b5~~\uff08\u4e0d\u4f1aSTL\u7684\u6211\u745f\u745f\u53d1\u6296\uff09~~\u3002\n\u7136\u540e\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u961f\u5217\u4ee3\u66ffdp\n```cpp\nvoid check()\n{\n    int i,j;\n    r=1;\n    //\u548c\u8c10\u4e86\n    memset(b,0,sizeof b);\n    for (i=1;i<=n-m;i++)\n    {\n        l=r;\n        for (j=1;j<=l;j++)\n        if (!b[f[i]+a[j]])\n        {\n            r++;\n            b[f[i]+a[j]]=1;\n            a[r]=f[i]+a[j];\n        }\n    }\n    r--;\n    if (r>ans) ans=r;\n}\n```\n\u961f\u5217\u601d\u8def\u5982\u4e0b\uff1a\n\u5982\u679c\u5bf9\u4e8e\u524di\u79cd\u781d\u7801\uff0c\u53ef\u4ee5\u79f0\u51faa[1]..a[k]\u7684\u91cd\u91cf\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b2ci+1\u4e2a\u781d\u7801\uff0c\u53ef\u4ee5\u5728\u5df2\u7ecf\u79f0\u51fa\u7684\u91cd\u91cf\u4e2d\u5206\u522b\u52a0\u4e0a\u5df2\u6709\u7684\u91cd\u91cf\uff0c\u4ee5\u751f\u6210\u65b0\u7684\u91cd\u91cf\uff08\u539f\u6709\u7684\u91cd\u91cf\u53ef\u89c6\u4e3a\u4e0d\u7528\u8be5\u781d\u7801\uff09\u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint a[20001],b[20001],l,r,f[21],x[21],n,ans,m;\nvoid check()\n{\n    int i,j;\n    r=1;\n    //\u4f9d\u7136\u548c\u8c10\n    memset(b,0,sizeof b);\n    for (i=1;i<=n-m;i++)\n    {\n        l=r;\n        for (j=1;j<=l;j++)\n        if (!b[f[i]+a[j]])\n        {\n            r++;\n            b[f[i]+a[j]]=1;\n            a[r]=f[i]+a[j];\n        }\n    }\n    r--;\n    if (r>ans) ans=r;\n}\nvoid dfs(int i, int j)\n{\n    if (j>n-i+1) return;\n    if (i==n+1) check();\n    if (j==0) {f[i-m]=x[i]; dfs(i+1,j); return;}\n    dfs(i+1,j-1);\n    f[i-m+j]=x[i];\n    dfs(i+1,j);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&x[i]);\n    ans=0;\n    dfs(1,m);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u4ee3\u7801\u4e2da\u8868\u793a\u961f\u5217~~\u5269\u4e0b\u7684\u4f5c\u7528\u4f60\u4eec\u81ea\u5df1\u731c~~\uff0cPS\uff1a\u7801\u98ce\u7565\u4e11\uff0c\u8bf7\u89c1\u8c05",
        "postTime": 1536853393,
        "uid": 19003,
        "name": "zyyyyyyyyyyyyyyy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662fDP+DFS\uff0cDFS\u53bb\u6389\u781d\u7801\uff0c\u5c06\u5176\u6807\u8bb0\uff1bDP\u4e2d\u768401\u80cc\u5305\u6c42\u51fa\u79cd\u7c7b\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n```pascal\nvar i,j,n,m,s,t,max:longint;\na:array[0..50]of longint; //\u8868\u793a\u781d\u7801\u91cd\u91cf\nb:array[0..50]of boolean;  //true\u8868\u793a\u6ca1\u62ff\u8d70\uff0cfalse\u8868\u793a\u62ff\u8d70\nf:array[0..5000]of longint;  \nprocedure dfs(k,t{\u53bb\u6389\u7684\u781d\u7801\u6570},s{\u5269\u4e0b\u7684\u6570\u91cf}:longint);\nvar i,x:longint;\nbegin\n  if t=m then //m\u4e2a\u781d\u7801\u62ff\u8d70\u4e86\n  begin\n    x:=0;fillchar(f,sizeof(f),0);f[0]:=1; //\u521d\u59cb\u5316\n    for i:=1 to n do  //01\u80cc\u5305\n      if b[i] then\n        for j:=s downto a[i] do f[j]:=f[j-a[i]]+f[j]; //\u6c42\u51fa\u80fd\u6784\u6210\t\t\t\t\t\t\t\t\t\t\t\t\t\t \u7684\u91cd\u91cf\n    for i:=s downto 1 do\n      if f[i]>0 then x:=x+1; //\u6240\u6709\u5927\u4e8e0\u7684\u90fd\u662f\u80fd\u7ec4\u6210\u7684\u91cd\u91cf\n    if x>max then max:=x;  //\u6c42\u6700\u5927\u503c\n  end;\n  if k>n then exit; //m\u4e2a\u781d\u7801\u6ca1\u62ff\u53bb\uff0c\u4f46\u6ca1\u781d\u7801\u4e86\uff0c\u8fd4\u56de\u3002\n  if b[k] then \u8fd9\u4e2a\u781d\u7801\u6ca1\u62ff\u8d70\uff0c\u53ef\u4ee5\u62ff\u8d70\n  begin\n    b[k]:=false; //\u62ff\u8d70\n    dfs(k+1,t+1,s-a[k]);  \n    b[k]:=true; //\u56de\u6eaf\n  end;\n  dfs(k+1,t,s); //\u4e0d\u62ff\u8d70\u7684\u60c5\u51b5\nend;\nbegin\n  readln(n,m);\n  fillchar(b,sizeof(b),true); //\u521d\u59cb\u5316\uff0c\u8868\u793a\u6240\u6709\u781d\u7801\u672a\u88ab\u62ff\u8d70\n  for i:=1 to n do //\u8bfb\u5165 \n  begin \n    read(a[i]);\n    s:=s+a[i]; //\u6c42\u51fa\u6240\u6709\u781d\u7801\u7684\u7684\u91cd\u91cf\n  end;\n  dfs(1,0,s); \n  write(max);\nend.\n```",
        "postTime": 1531183736,
        "uid": 44878,
        "name": "\u4ea1\u9b42\u2022\u593a\u547d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9898\u6765\u8bf4\uff0cC++\u7684algorithm\u5e93\u4e2d\u6709\u4e00\u4e2a\u6781\u4e3a\u6709\u7528\u7684\u51fd\u6570next_permutation\u53ef\u4ee5\u5b8c\u7f8e\u7684\u89e3\u51b3\u679a\u4e3e\u5220\u9664\u7ec4\u5408\uff08\u6216\u8005\u662f\u4fdd\u7559\u7ec4\u5408\uff09\u7684\u95ee\u9898\uff1b\n\nnext_permutation\u4ec5\u9700\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff0c\u5373\u9996\u6307\u9488\u548c\u5c3e\u6307\u9488,\u4f7f\u7528\u65b9\u6cd5\u53c2\u7167sort\uff0c\u4f5c\u7528\u662f\u5c06\u8fd9\u6bb5\u533a\u95f4\u5185\u53d8\u6210\u4e0b\u4e00\u4e2a\u5168\u6392\u5217\uff0c\u5982\u679c\u6ca1\u6709\u4e0b\u4e00\u4e2a\u5168\u6392\u5217\uff08\u5373\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\u65f6\u8fd4\u56de0\uff0c\u4e8e\u6b64\u76f8\u5bf9\u7684\u6709prev_permutation\uff0c\u5373\u4e0a\u4e00\u4e2a\u5168\u6392\u5217\n\n\u8a00\u5f52\u6b63\u4f20\uff0c\u8fd9\u9898\u9009\u62e9\u5728n\u4e2a\u6570\u4e2d\u53d6m\u4e2a\u6570\u5220\u9664\u548c\u5728n\u4e2a\u6570\u4e2d\u53d6n-m\u4e2a\u6570\u4fdd\u7559\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u76f8\u540c\u7684\uff08C(m,n)=C(n-m,n)\uff09~~\u6211\u7684\u4ee3\u7801\u9009\u62e9\u4e86\u524d\u8005~~\n\n\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u5c31\u662f\u505a01\u80cc\u5305\u4e86\uff0c01\u80cc\u5305\u53ef\u4ee5\u53c2\u8003\u697c\u4e0b\u9898\u89e3\n\n\u6302\u4e0a176ms\u7684\u4ee3\u7801\uff08~~\u8bdd\u8bf4C++\u7684\u7b97\u6cd5\u5e93\u4e1c\u897f\u771f\u597d\u7528~~\uff09\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define For(i,l,r) for(register int i=(l);i<=(r);++i)\n#define ReFor(i,l,r) for(register int i=(l);i>=(r);--i)\nusing namespace std;\nconst int N=22;\nint n,m,ans;\nint a[N],f[N*100];\nbool del[N];\nint read(){\n    int x=0;bool f=0;char c=getchar();\n    while (c<'0'||c>'9'){if (c=='-')f=!f;c=getchar();}\n    while (c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n    return f?-x:x;\n}\nint main(){\n    n=read();m=read();\n    For(i,1,n) a[i]=read();\n    sort(a+1,a+n+1);\n    For(i,1,m) del[n-i+1]=1;\n    //\u9009\u53d6\u540em\u4e2a\u6570\u5220\u9664\uff0c\u4f7f\u5f97del\u6570\u7ec4\u4e3a\u6700\u5927\u5b57\u5178\u5e8f\n    //\u4e5f\u53ef\u4ee5\u9009\u53d6\u524dm\u4e2a\u6570\uff0c\u4f7f\u5f97del\u4e3a\u6700\u5c0f\u5b57\u5178\u5e8f\n    //\u90a3\u4e48\u540e\u9762\u5c31\u9700\u8981\u7528prev_permutation\n    do{\n        int sum=0,tot=0;\n        memset(f,0,sizeof(f));\n        f[0]=1;\n        For(i,1,n){\n            if(del[i]) continue;\n            tot+=a[i];\n            ReFor(j,tot,a[i]) f[j]|=f[j-a[i]];\n        }\n        For(i,1,tot) if(f[i]) ++sum;\n        ans=max(ans,sum);\n    }while(next_permutation(del+1,del+n+1));\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u53e6\u5916\uff0c\u8fd9\u4e2a\u4ee3\u7801\u6709\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u96be\u4ee5\u526a\u679d\uff0c\u6bd4\u5982\u8bf4\u5224\u65ad\u8be5\u79cd\u60c5\u51b5\u662f\u5426\u5df2\u7ecf\u88ab\u53d6\u5230\u8fc7\uff08\u6bd4\u5982\u6570\u7ec4a[]\u4e2d\u6709\u91cd\u590d\uff09\uff0c\u81f3\u5c11\u9700\u8981O(n)\u590d\u6742\u5ea6\uff0c\u526a\u4e86\u679d\u4e4b\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u8981\u4e0a\u5347QAQ",
        "postTime": 1530084045,
        "uid": 24835,
        "name": "\u8096\u6069Sean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053DFS+DP\uff0c\u7136\u800c\u5982\u679c\u4e0d\u52a0\u526a\u679d\u4f1aTLE\n\n\nDFS\uff1a\u7528\u6765\u679a\u4e3e\u4e22\u6389\u7684M\u4e2a\u781d\u7801\u3002\n\n\nDP\uff1a\u5224\u65ad\u6709\u591a\u5c11\u79cd\u60c5\u51b5\u3002\n\n\n\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u5f88\u7b80\u5355\u3002\u3002\u3002\n\n\n\u4e0b\u9762\u662f\u526a\u679d\n\n\n1.\u5982\u679c\u5f53\u524d\u7684\u603b\u8d28\u91cf<=\u6700\u5927\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\n\n\n2.\u6700\u5f00\u59cbsort\u4e00\u904d\uff0c\u5982\u679c\u641c\u5b8c\u4e86\u4e00\u904d\u540e\uff0c\u5728\u641c\u4e0b\u4e00\u4e2a\u53d1\u73b0\u548c\u4e0a\u4e00\u6b21\u641c\u7684\u4e00\u6837\uff0c\u5c31\u7565\u8fc7\u3002\u3002\u3002\n\n\n3.\u5e94\u4e3a\u6392\u5e8f\u8fc7\uff0c\u800c\u4e14\u5f53\u524d\u7684\u8fd9\u4e2a\u7684\u53e6\u4e00\u79cd\u89e3\u53ea\u80fd\u662f\u518d\u4e0a\u4e00\u4e2a\u72b6\u6001\u4e4b\u540e\uff0c\u6240\u4ee5\u62ffW\u8bb0\u5f55\u4e0a\u6b21\u641c\u5230\u54ea\u91cc\u4e86\n\n\n4.\u7528dfs\u4e2d\u8bb0\u5f55\u7684\u5f53\u524d\u7684\u8d28\u91cf\u505aDP\u4e2d\u80cc\u5305\u7684\u5927\u5c0f\n\n\n\u4e0a\u4ee3\u7801\u3002\u3002\u3002\n\n\n\n\n\n\n\n    \n    \n    \n\n        \n\n    \n    \n    \n    \n    \n    \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[21];\nbool b[21]={0};\nint ans=0;\nint f[300001]={0};\nint  all;\ninline int Max(int a,int b)//MAX\u51fd\u6570\n{\n    if(a>b) return a;\n    else return b;\n}\ninline void dp(int M)//DP \u51fd\u6570\u3002\u3002\u3002\n{\n    memset(f,0,sizeof(f));\n    int total=0;\n    f[0]=1;\n    for(int i=1;i<=n;i++)//\u8fd9\u4e2a\u5904\u7406\u5e94\u8be5\u90fd\u77e5\u9053\n    {\n        if(!b[i])\n        {\n        for(int j=M;j>=a[i];j--)\n        {\n                f[j]+=f[j-a[i]];\n        }\n    }\n    }\n    for(int i=1;i<=M;i++)\n    {\n        if(f[i])\n            total++;\n    }\n    ans=Max(ans,total);\n}\nvoid dfs(int step,int now1,int w)//dfs\n{\n    if(now1<=ans) return;//\u526a\u679d1\n    int now=0;\n    if(step==m+1)\n    {\n        dp(now1);\n    }\n    else\n    {\n        for(int i=w+1;i<=n;i++)//i=w+1,\u526a\u679d3\n        {\n            if(!b[i]&&a[i]!=a[now])//\u526a\u679d2\n            {\n                b[i]=1;\n                dfs(step+1,now1-a[i],i);\n                b[i]=0;\n                now=i;\n            }\n        }\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin>>n>>m; //n:\u4e2a\u6570\uff1bm:\u53bb\u6389\u4e2a\u6570 \n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n        all+=a[i];\n    }\n    if (n-m<=1)//\u7279\u5224\n    {\n        cout<<max(0,n-m)<<endl;\n    } \n    else\n    {\n      sort(a+1,a+n+1);\n      dfs(1,all,0);\n      cout<<ans;\n    }\n} \n\n```",
        "postTime": 1506958063,
        "uid": 37408,
        "name": "Randyhoads",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u4e00\u9053\u5178\u578b\u7684\u641c\u7d22\u9898\n------------\n\n\n\u641c\u7d22\u51fa**\u4e0d\u653e**\u7684\u5e8f\u5217\n\n\u52a0\u4e4b**01\u80cc\u5305**\u8fdb\u884c\u6c42\u89e3\n\n\n\n------------\n\n### \u7b2c\u4e00\u7248 \u65e0**\u4f18\u5316**\n\n\n------------\n\n\n```cpp\nint Check()\u52a0\u4e4b01\u80cc\u5305\u8fdb\u884c\u6c42\u89e3\n{\n    int Num=0,Hash[20025]={0};Hash[0]=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(V[i])continue;\n        for(int j=20000;j>=0;j--)//\u5012\u53d9\u679a\u4e3e\u66f4\u65b0\n        {\n            if(Hash[j]){Hash[j+A[i]]=1;}\n        }\n    }\n    for(int i=1;i<=20000;i++)if(Hash[i])Num++;\n    return Num;\n}\nvoid DFS(int From,int Num)//\u641c\u7d22\u51fa\u4e0d\u653e\u7684\u5e8f\u5217\n{\n    if(Num==k+1){int k=Check();Maxx=max(Maxx,k);return;}\n    for(int i=From+1;i<=n;i++)\n    {\n        V[i]=1;DFS(i,Num+1);V[i]=0;\n    }\n}\n```\n\n------------\n\n\u7ed3\u679c:**982ms**\n\n------------\n\u5c0f**\u4f18\u5316**\uff1a\n\n1\uff09\u8303\u56f4\u7f29\u5c0f\n\nTot+=A[i] (1<=i<=n)\n\nTot-=A[i] (i\u4e0d\u653e\uff09\n\n\u4ece**Tot**\u679a\u4e3e\u66f4\u65b0\n\n2\uff09\u6700\u4f18\u6027\u526a\u679d\n\n1. \u7531\u8d2a\u5fc3\u53ef\u77e5\u653e\u7684\u8d8a\u591a\u53ef\u884c\u89e3\u8d8a\u591a\n\n2. \u781d\u7801\u503c\u8d8a\u5c0f\u53ef\u884c\u89e3\u8d8a\u591a\n\n\u5219 \u5bf9A\u8fdb\u884c\u6392\u5e8f \n\n\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u679a\u4e3e\u65f6\u5224\u65ad\uff1a\u82e5\u6b64\u65f6\u7684\u503c\u5df2\u7ecf\u5c0f\u4e8e\u6216\u7b49\u4e8e\u6b64\u65f6\u6700\u4f18\u89e3\u5c31\u8fd4\u56de\n\n\n\n------------\n### \u7b2c\u4e8c\u7248\n\n------------\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint n,k,Maxx=0,Tot;\nint A[25],V[25];\nint Check()\n{\n    int Num=0,Hash[20025]={0};Hash[0]=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(V[i])continue;\n        for(int j=Tot;j>=0;j--)\n        {\n            if(Hash[j]){Hash[j+A[i]]=1;}\n        }\n    }\n    for(int i=1;i<=Tot;i++)if(Hash[i])Num++;\n    return Num;\n}\nvoid DFS(int From,int Num)\n{\n    if(Check()<=Maxx)return;\n    if(Num==k+1){int k=Check();Maxx=max(Maxx,k);return;}\n    for(int i=From+1;i<=n;i++)\n    {\n        V[i]=1;Tot-=A[i];DFS(i,Num+1);V[i]=0;Tot+=A[i];\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&A[i]),Tot+=A[i];\n    sort(A+1,A+n+1);\n    DFS(0,1);printf(\"%d\\n\",Maxx);\n    return 0;\n}\n```\n------------\n\n\u7ed3\u679c:**477ms**\n\n------------",
        "postTime": 1559918114,
        "uid": 122599,
        "name": "\u3010\u5929\u671d\u3011MILK",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\n\n------------\n**\u601d\u8def\u6bd4\u8f83\u7b80\u5355\u6e05\u6670\uff0c\u770b\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u731c\u5230\u662f\u66b4\u641c + 01\u80cc\u5305**\n\n\u5177\u4f53\u505a\u6cd5\u656c\u8bf7\u53c2\u89c1\u5176\u4ed6\u9898\u89e3\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u51e0\u4e2a\u5c0f\u4f18\u5316\u3002\n\n###### \u7b2c\u4e00\uff1aDFS\u4e2d\u7684\u53ef\u884c\u6027\u526a\u679d\uff0c\u662f\u6700\u57fa\u7840\u7684\u526a\u679d\u4e4b\u4e00\u3002\n\n**\u2460\u5982\u679c\u5f53\u524d\u5220\u6389\u7684\u6570\u5df2\u7ecf\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684M\uff0c\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u526a\u6389\u3002**\n\n**\u2461\u5982\u679c\u5269\u4e0b\u7684\u6570\u90fd\u5220\u6389\u4e5f\u8fbe\u4e0d\u5230\u7ed9\u5b9a\u7684M\uff0c\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u526a\u6389\u3002**\n\n\u8fd9\u662f\u57fa\u7840\u4e2d\u7684\u57fa\u7840\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u70b9\u70b9\u5c0f\u8bb2\u7a76\uff0c\u6bd4\u5982\u8bf4\u526a\u679d\u7684\u4f4d\u7f6e\uff0c\u6700\u7b80\u5355\u7684\u662f\u653e\u5728\u5f00\u5934\u5224\u65ad\u4e00\u4e0b\uff0c\u8fd9\u6837**\u7406\u8bba\u4e0a\u6765\u8bb2**\uff0c\u8fd8\u662f\u8c03\u7528\u4e86\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\uff0c\u603b\u4f1a\u6162\u4e00\u70b9\u70b9\u70b9\u70b9\u70b9\u70b9\u3002\u6240\u4ee5\u6211\u4e00\u822c\u4e60\u60ef\u5728\u9012\u5f52\u524d\u526a\u679d\uff0c\u5927\u6982\u8fd9\u6837\uff1a\n\n```cpp\n\tif( N - M - Now + Left ) Dfs( Now + 1 , Left ) ;\n\tif( M - Left )\n\t{\n\t\tThrow[Now] = true ;\n\t\tDfs( Now + 1 , Left + 1 ) ;\n\t\tThrow[Now] = false ;\n\t}\n```\n\n\uff08\u7f29\u8fdb\u76f8\u5bf9\u8fd8\u7b97\u89c4\u8303\u5427\uff0c\u4e0d\u559c\u618b\u7740\uff09\n\n\u5176\u4e2dNow\u662f\u6211\u5f53\u524d\u9009\u5230\u7684\u4e2a\u6570\uff0cLeft\u662f\u6211\u5df2\u7ecf\u820d\u5f03\u7684\u4e2a\u6570\uff0cN\u548cM\u5982\u9898\u610f\u3002\n\n\u8fd9\u6837\u6211\u5728\u9012\u5f52\u524d\u5c31\u526a\u597d\uff0c**\u5e38\u6570**\u5c31\u5c0f\u4e86\u554a\u3002\n\n###### \u7b2c\u4e8c\uff1a\u4e00\u70b9\u70b901\u80cc\u5305\u4e2d\u526a\u679d\u7684\u5c0f\u6280\u5de7\u3002\n\n```cpp\nregister int All = 0 ; // \u7ef4\u62a4\u5f53\u524d\u603b\u548c \n\tfor(register int i = 1 ; i <= N ; i++ )\n\t{\n\t\tif( Throw[i] ) continue ;\n\t\tfor(register int j = All ; j >= 0 ; j-- )\n\t\t\tDp[ j + A[i] ] = Dp[ j + A[i] ] or Dp[j] ;\n\t\tAll += A[i] ;\n\t}\n```\n\n\u8bb0\u4e00\u4e2aAll\u8868\u793a\u5f53\u524d\u9009\u62e9\u7684\u6240\u6709\u781d\u7801\u7684\u8d28\u91cf\u603b\u548c\uff0c\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u53ea\u7528\u4eceAll\u7684\u4f4d\u7f6e\u5f80\u524d\u679a\u4e3e\uff0c\u53ef\u4ee5\u7701\u6389\u4e00\u591a\u534a\u7684\u65f6\u95f4\u3002\n\n\u987a\u4fbf\u95ee\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u8981\u6392\u5e8f\u624d\u80fd\u8fc7#8\u548c#9\u554a\u2026\u2026\n\n\u7b49\u6211\u95ee\u5230or\u60f3\u5230\u4e86\uff0c\u56de\u6765\u66f4\u65b0\u9898\u89e3\u3002",
        "postTime": 1531275468,
        "uid": 23323,
        "name": "\u7528\u6237\u5df2\u6ce8\u9500",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "\u641c\u7d22+\u80cc\u5305\n\n\u552f\u4e00\u7684\u526a\u679d\u662f \u628a\u4ed6\u7684\u5220\u9664\u7684\u70b9 \u4ece\u4e0a\u4e00\u4e2a\u70b9\u5f80\u540e\u627e \u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\n\n\u6bcf\u5f53\u5220\u5b8c\u70b9\u65f6\u5c31\u505a\u4e00\u4e0b0-1\u80cc\u5305 \u627e\u5f53\u524d\u53ef\u80fd\u7684\u6240\u6709\u60c5\u51b5\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint a[25];\nbool d[2020];\nbool in[25];\nint mm;\nint maxn;\nint n,m; \nvoid dfs(int u,int la){\n    if(u==0){\n        for(int i=1;i<=mm;i++){\n            d[i]=false;\n        }\n        for(int i=1;i<=n;i++){\n            if(!in[i]){\n                for(int j=mm;j>=a[i];j--){\n                    if(d[j-a[i]]){\n                        d[j]=true;\n                    }\n                }\n            }\n        }\n        int now=0;\n        for(int i=1;i<=mm;i++){\n            if(d[i]){\n                now++;\n            }\n        }\n        maxn=max(maxn,now);\n        return ;\n    }\n    for(int i=la;i<=n;i++){\n        if(in[i]){\n            continue;\n        }\n        in[i]=true;\n        dfs(u-1,i);\n        in[i]=false;\n    }\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n        mm+=a[i];\n    }\n    d[0]=true;\n    dfs(m,1);\n    cout<<maxn<<endl;\n    return 0;\n}\n```",
        "postTime": 1508511732,
        "uid": 26988,
        "name": "\u50da\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    },
    {
        "content": "**~~\u53d1\u4e00\u4e2a\u7528vector\u548cstack\u7684\u61d2\u4eba\u9898\u89e3\uff0c\u8c01\u77e5\u9053\u80fd\u4e0d\u80fd\u901a\u8fc7~~**\n\n\u6700\u8fd1\u6bd4\u8f83\u5fd9\uff0c\u5f88\u62b1\u6b49\u4e0d\u80fd\u5728\u601d\u8def\u4e0a\u591a\u8bb2\u4e86\uff0c\u4ee3\u7801\u7684\u601d\u8def\u5c31\u662f\u66b4\u529bdfs+\u8ba1\u7b97\uff0c\u8be6\u60c5\u8bf7\u770b\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<stack>\n#include<vector>\n#include<cstring>\nstd::vector<int> v;//\u8bb0\u5f55\u4e0d\u91cd\u590d\u6570\u5b57\u6570\u91cf \nstd::stack<int> stk;//\u8bb0\u5f55\u5df2\u7ecf\u9009\u62e9\u7684\u6570\u5b57 \nint n,m,a[21],max=1,q;\nbool f[3005];//\u8d77\u53bb\u91cd\u4f5c\u7528 \nvoid calc(std::stack<int> s)\n{\n\tv.push_back(0);//\u6bcf\u4e2a\u781d\u7801\u90fd\u53ef\u4ee5\u5355\u72ec\u8fdb\u884c\u7ec4\u6210 \n\tf[0]=1;//\u5b9e\u9645\u4e0a\uff0c\u8fd9\u53e5\u662f\u5f3a\u8feb\u75c7\u5199\u7684\uff0c\u4e0d\u5199\u4e5f\u6ca1\u5173\u7cfb \n\twhile(!s.empty())//\u4f9d\u6b21\u5c1d\u8bd5\u6bcf\u4e2a\u6570\u636e \n\t{\n\t\tint x=s.top(),r=v.size();//\u83b7\u53d6\u5f53\u524d\u781d\u7801\u7684\u8d28\u91cf\u548c\u52a0\u781d\u7801\u4e4b\u524d\u7684\u4e0d\u540c\u6570\u5b57\u6570\u91cf \n\t\ts.pop();//\u5df2\u7ecf\u4f7f\u7528\u5f53\u524d\u781d\u7801 \n\t\tfor(int i=0;i<r;++i)\n\t\t\tif(f[v[i]+x]==0)//\u5982\u679c\u5f53\u524d\u91cd\u91cf\u672a\u91cd\u590d \n\t\t\t{\n\t\t\t\tf[v[i]+x]=1;//\u8bb0\u5f55\u5df2\u6709\u6b64\u91cd\u91cf \n\t\t\t\tv.push_back(v[i]+x);//\u5b58\u5165vector \n\t\t\t}\n\t} \n\tfor(int i=0;i<v.size();++i)\n\t\tf[v[i]]=0;//\u6bd4memset\u5feb\u4e00\u4e9b\u7684\u5f52\u96f6(\u4e5f\u8bb8) \n\tif(max<v.size())//\u66f4\u65b0\u6700\u5927\u53ef\u80fd\u6027\u6570\u91cf \n\t\tmax=v.size();\n\tv.clear();//\u6e05\u7a7avector(\u901f\u5ea6\u600e\u4e48\u6837\u4e0d\u786e\u5b9a) \n\treturn;\n}\nvoid dfs(int x)\n{\n\tif(x>n)//\u5df2\u7ecf\u6ca1\u6709\u53ef\u4ee5\u7ee7\u7eed\u9009\u62e9\u7684\u781d\u7801\u4e86 \n\t\treturn;\n\tstk.push(a[x]);//\u9009\u62e9\u8fd9\u4e2a\u781d\u7801 \n\t//printf(\"%d %d\\n\",stk.size(),x); \n\tif(stk.size()==q) \n\t\tcalc(stk);//\u5982\u679c\u6570\u91cf\u5df2\u7ecf\u591f\u4e86\uff0c\u5c31\u53bb\u8ba1\u7b97\u5f53\u524d\u9009\u62e9\u7ec4\u6210\u7684\u8d28\u91cf\u6570\u91cf \n\telse\n\t\tdfs(x+1);//\u5982\u679c\u4e0d\u591f\uff0c\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\u9009\u62e9 \n\tstk.pop();//\u6254\u6389\u5f53\u524d\u781d\u7801\u4e0d\u9009\u62e9 \n\tdfs(x+1);//\u7ee7\u7eed\u5f80\u4e0b\u9009 \n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tq=n-m;//\u8bb0\u5f55\u9700\u8981\u62ff\u591a\u5c11\u781d\u7801\u624d\u80fd\u505c\u6b62 \n\tdfs(1);\n\tprintf(\"%d\",max-1);//\u56e0\u4e3a\u6700\u5f00\u59cb\u5b58vector\u65f6\u628a0\u5b58\u4e0a\u4e86\uff0c\u6240\u4ee5\u8981\u51cf\u4e00 \n\treturn 0;\n}\n```\n",
        "postTime": 1535456484,
        "uid": 67013,
        "name": "Zachary_260325",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1441 \u3010\u781d\u7801\u79f0\u91cd\u3011"
    }
]