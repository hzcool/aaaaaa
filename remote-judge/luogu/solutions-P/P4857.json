[
    {
        "content": "\u5982\u679c\u4f60\u662f\u770b\u5230**\u80fd\u591f\u7ee7\u7eed\u68c0\u7968**\u65e0\u6cd5\u7406\u89e3,\u6240\u4ee5\u6233\u8fdb\u4e86\u9898\u89e3,\n\n\u8fd9\u4e2a\u6839\u672c\u6ca1\u7528,\u5b9e\u9645\u5c31\u662f\u5411\u524d\u8d70.\u53ef\u4ee5\u56de\u53bb\u518d\u601d\u8003\u4e00\u4e0b\n\n\n\n\u8bfb\u5b8c\u9898,\u4e0d\u770b\u6570\u636e\u8303\u56f4,~~\u4f60\u4e00\u5b9a\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u61a8\u61a8\u7684\u4f18\u5148\u961f\u5217\u6a21\u62df~~\n\n\u5f53\u4f60\u5730\u770b\u5230$n \\leq 2*10^{13}$,\u55ef,\u6709\u610f\u601d.\n\n~~\u4ed4\u7ec6\u601d\u7d22\u540e,\u4f60\u70b9\u51fb\u4e86 \u67e5\u770b\u9898\u89e3 \u770b\u5230\u4e86\u8fd9\u6bb5\u6587\u5b57~~\n\n\n\n\u5982\u679c$n \\leq 10^5$,\u7528\u4f18\u5148\u961f\u5217\u662f\u8f7b\u677e\u8dd1\u8fc7\u7684,\n\n\u4f46\u4ed4\u7ec6\u60f3\u4e00\u4e0b,\u5bf9\u4e8e\u5728\u6700\u540e\u4e00\u6bb5\u4e4b\u524d\u7684\u6a21\u62df,\u90fd\u662f\u6ca1\u6709\u5fc5\u8981\u7684\n\n$k\\leq 10^5$ \u90a3\u4e48\u7528$O(n log n)$\u662f\u53ef\u4ee5\u63a5\u53d7\u7684,\n\n\u90a3\u4e48\u5047\u8bbe\u6240\u6709\u68c0\u7968\u5458\u90fd\u8d70\u5230\u4e86\u4f4d\u7f6e$X$,\u6709\n\n$step=\\sum^{k}_{i=1}\\lfloor x/a_i\\rfloor$\n\n\u5982\u679c$step<n$\u8bf4\u660e\u6240\u6709\u68c0\u7968\u5458\u90fd\u5c3d\u91cf\u8d70\u5230$X$,\u5e76\u4e14\u8fd8\u6709\u6ca1\u7528\u5b8c\u6307\u4ee4\n\n\u6211\u4eec\u53ef\u4ee5**\u4e8c\u5206**\u6ee1\u8db3$step\\leq n$\u7684\u6700\u5927$X$,\n\n\u518d\u5c06$X$\u9002\u5f53\u524d\u63a8,\u8ba1\u7b97\u51fa\u4e00\u4e2a\u6240\u6709\u4eba\u5728\u7684\u4f4d\u7f6e.\n\n\u518d\u8ba1\u7b97\u51fa\u8d70\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u6240\u82b1\u7684\u6b65\u6570,\u4e0e$n$\u76f8\u51cf.\n\n\u5269\u4e0b\u7684\u4ea4\u7ed9\u5806\u6a21\u62df\n\n```cpp\n/*\n * @Author: Huanyue \n * @Date: 2020-02-15 10:48:32 \n * @Last Modified by: Huanyue\n * @Last Modified time: 2020-02-15 10:51:16\n */\n#include <iostream>\n#include <cstdio>\n#define MAXN 100005\n#define LL long long int\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define min(a, b) ((a) < (b) ? (a) : (b))\nusing namespace std;\n\nint n, num[MAXN];\nLL m, l, r, mid, temp, ans[MAXN];\n\ninline bool check(LL mid)\n{\n    LL t = m;\n    for (int i = 1; i <= n; ++i)\n    {\n        t -= mid / num[i];\n        if (t < 0)\n            return 0;\n    }\n    return 1;\n}\n\nint mv[MAXN + MAXN];\nLL cnt[MAXN];\ninline void pushup(int &p)\n{\n    int &r = mv[p];\n    r = p;\n    if (cnt[mv[p << 1]] < cnt[r] || cnt[mv[p << 1]] == cnt[r] && mv[p << 1] < r)\n        r = mv[p << 1];\n    if (cnt[mv[p << 1 | 1]] < cnt[r] || cnt[mv[p << 1 | 1]] == cnt[r] && mv[p << 1 | 1] < r)\n        r = mv[p << 1 | 1];\n}\n\nvoid update(int u, LL d)\n{\n    if (d < cnt[u])\n        return;\n    cnt[u] = d;\n    for (; u; u >>= 1)\n        pushup(u);\n}\n\nchar w;\ninline void GET(int &t)\n{\n    do\n        w = getchar();\n    while (w < '0' || w > '9');\n    do\n    {\n        t = t * 10 + w - '0';\n        w = getchar();\n    } while (w >= '0' && w <= '9');\n}\n\nint main()\n{\n    cnt[0] = 9223372036854775807ll;\n    scanf(\"%lld\", &m), GET(n);\n    for (int i = 1; i <= n; ++i)\n        GET(num[i]), l = max(l, num[i]);\n    r = l * m, ++l;\n    while (l <= r)\n    {\n        mid = (l + r) / 2;\n        if (check(mid))\n            temp = mid, l = mid + 1;\n        else\n            r = mid - 1;\n    }\n\n    LL t = temp;\n    for (int i = 1; i <= n && t; ++i)\n        t = min(t, max((temp / num[i] - 1) * num[i], 0));\n    LL used = 0;\n    int tmp;\n    for (int i = 1; i <= n; ++i)\n    {\n        used += t / num[i];\n        update(i, t / num[i] * num[i]);\n    }\n    while (used < m)\n    {\n        tmp = mv[1];\n        ans[tmp] = ++used;\n        update(tmp, cnt[tmp] + num[tmp]);\n    }\n    for (int i = 1; i < n; ++i)\n        printf(\"%lld \", ans[i]);\n    printf(\"%lld\\n\", ans[n]);\n    return 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1581735357,
        "uid": 225849,
        "name": "huanyue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4857 \u3010[PA2013]Konduktorzy\u3011"
    },
    {
        "content": "\u9996\u5148\u4e8c\u5206\u6c42\u51fa\u6bcf\u4e2a\u4eba\u7ed3\u675f\u7684\u65f6\u95f4 $end_i$\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u4eba\u6700\u540e\u4e00\u6b21\u68c0\u7968\u5f00\u59cb\u4e4b\u540e\u6709\u591a\u5c11\u6b21\u68c0\u7968\u3002\u5373\u6709\u591a\u5c11\u4e2a $end_j-k\\cdot a_j$ \u5927\u4e8e\u7b49\u4e8e $end_i-a_i$\uff0c\u5982\u679c $j\\le i$ \u5219\u4e0d\u80fd\u53d6\u7b49\u3002\n\n\u56e0\u4e3a $a_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u4e14 $\\max\\{end_i\\}-\\min\\{end_i-a_i\\}\\le 2C$ ($C=\\max\\{a_i\\}$)\uff0c\u56e0\u6b64\u6709\u7528\u7684\u6570\u7684\u4e2a\u6570\u53ea\u6709 $O(C\\log k)$\u3002\n\n\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6c42\u540e\u7f00\u548c\u6c42\u80fd\u5f97\u5230\u6240\u6709 $\\ge end_i-a_i$ \u7684\u6570\u7684\u4e2a\u6570\u3002\u518d\u51cf\u53bb $i$ \u4e4b\u524d\u51fa\u73b0\u7684\u7b49\u4e8e $end_i-a_i$ \u7684\u6570\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(k\\log nC+C\\log k)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nconstexpr int N = 1e5;\n\nint64_t n;\nint k;\nint a[N];\n\nint64_t pos[N];\n\nint cnt[2 * N], ans[N];\n\nint64_t count(int64_t m) {\n    int64_t s = 0;\n    for (int i = 0; i < k; ++i)\n        s = std::min<int64_t>(s + (m + a[i] - 1) / a[i], 1e18);\n    return s;\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    std::cin >> n >> k;\n    for (int i = 0; i < k; ++i)\n        std::cin >> a[i];\n    \n    int64_t l = 0, r = 2e18;\n    while (l < r) {\n        int64_t m = (l + r + 1) / 2;\n        if (count(m) <= n) {\n            l = m;\n        } else {\n            r = m - 1;\n        }\n    }\n    \n    int res = n - count(l);\n    for (int i = 0; i < k; ++i) {\n        pos[i] = (l + a[i] - 1) / a[i] * a[i];\n        if (pos[i] == l && res > 0) {\n            --res;\n            pos[i] += a[i];\n        }\n    }\n    \n    int64_t mn = 2e18, mx = 0;\n    for (int i = 0; i < k; ++i) {\n        mx = std::max(mx, pos[i]);\n        mn = std::min(mn, pos[i] - a[i]);\n    }\n    \n    for (int i = 0; i < k; ++i) {\n        for (int64_t j = pos[i] - a[i]; j >= mn; j -= a[i])\n            ++cnt[j - mn];\n        ans[i] = -cnt[pos[i] - a[i] - mn];\n    }\n    \n    for (int i = mx - mn - 2; i >= 0; --i)\n        cnt[i] += cnt[i + 1];\n    for (int i = 0; i < k; ++i) {\n        ans[i] += cnt[pos[i] - a[i] - mn];\n        std::cout << n - ans[i] << \" \\n\"[i == k - 1];\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1600329970,
        "uid": 149656,
        "name": "jiangly",
        "ccfLevel": 10,
        "title": "P4857 [PA2013]Konduktorzy \u9898\u89e3"
    }
]