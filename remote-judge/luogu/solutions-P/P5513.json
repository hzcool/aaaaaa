[
    {
        "content": "\u6c34\u4e2a\u9898\u89e3\u3002\n\n\u5de8\u4f6c\u4eec\u8f7b\u55b7\u3002\n\n\u4e8c\u8fdb\u5236\u9ad8\u7cbe\u5ea6\u80af\u5b9a\u662f\u8981\u7528\u7684(\u89c1\u9898\u76ee\u63d0\u4f9b\u8005\u7684\u5206\u6790)\u7ebf\u6bb5\u6811\u5927\u53ef\u4e0d\u5fc5~~\u672c\u849f\u84bb\u4e5f\u5199\u4e0d\u6765~~\u3002\n\n\u89e3\u51b3\u8fdb\u4f4d\u7684\u6700\u7b80\u65b9\u5f0f\u5c31\u662f~~\u4e0d\u7406\u5b83~~**\u6682\u65f6\u4e0d\u5fc5\u8fdb\u4f4d,\u6700\u540e\u590d\u539f\u683c\u5f0f,\u4e0d\u5f71\u54cd\u6700\u7ec8\u6570\u636e**\u3002\n\n\u7528\u5b98\u65b9\u9898\u89e3\u4ee3\u7801\n```cpp\n\n// CEOI 2013 - Task: Board - Solution\n\n// Author: Gustav Matula\n\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cassert>\n\n#include <algorithm>\n\n\nusing namespace std;\n\n\n#define MAX 100005\n\n\nchar pa[MAX]; int _a[MAX], loga, *a;\n\nchar pb[MAX]; int _b[MAX], logb, *b;\n\n\nvoid carry(int *idx, int i) {\n\n  idx[i - 1] += idx[i] / 2 - (idx[i] % 2 == -1);\n  \n  idx[i] = abs(idx[i]) % 2;//\u4ece\u540e\u5f80\u524d\u590d\u539f\u683c\u5f0f \n  \n}\n\n\nvoid trace(char *path, int *idx, int &log) {\n\n  int n = strlen(path);\n  \n  idx[0] = log = 1;\n  \n\n  for (int i = 0; i < n; ++i) {\n  \n    if (path[i] == '1') idx[log++] = 0;\n    \n    if (path[i] == '2') idx[log++] = 1;\n    \n    if (path[i] == 'L') --idx[log - 1];\n    \n    if (path[i] == 'R') ++idx[log - 1];//\u603b\u548c\u4e0e\u662f\u5426\u8fdb\u9000\u4f4d\u65e0\u5173 (\u6700\u540e\u7ed3\u679c\u6b63\u786e\u53ea\u9700\u4e00\u6b21\u8fdb\u9000\u4f4d) \n    \n    if (path[i] == 'U') carry(idx, --log);//\u590d\u539f\u672b\u5c3e\u683c\u5f0f\u4fbf\u4e8e\u6d88\u9664(\u5229\u7528\u5c40\u90e8\u683c\u5f0f\u6027\u8d28) \n    \n  }\n  \n\n  for (int i = log - 1; i >= 1; --i) carry(idx, i);\n  \n\n  int r = 0; while (idx[r] == 0) ++r;\n  \n  for (int i = r; i < log; ++i) idx[i - r] = idx[i];//\u4ece\u540e\u5f80\u524d\u4f9d\u6b21\u590d\u539f\u683c\u5f0f \n  \n  log -= r;\n  \n}\n\nint main(void)\n{\n  scanf(\"%s\", pa); trace(pa, a = _a, loga);\n  \n  scanf(\"%s\", pb); trace(pb, b = _b, logb);\n  \n\n  int log = min(loga, logb);\n  \n  int sol = 1 << 20;\n  \n  int delta = 0;\n  \n\n  for (int i = 0; i < log && delta < (1 << 20); ++i) {\n  \n    delta = delta * 2 + a[i] - b[i];\n    \n    sol = min(sol, abs(delta) + 2 * (log - i - 1));\n    \n  }\n\n  printf(\"%d\\n\", sol + abs(loga - logb));\n  \n\n  return 0;\n  \n}\n```\n",
        "postTime": 1595664133,
        "uid": 225060,
        "name": "AaronJance",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5513 \u3010[CEOI2013]Board\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u672c\u9898\u7684\u8d21\u732e\u8005,\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u9053\u5f88\u597d\u7684\u9898\u76ee..\n\n\u594b\u6597\u4e865h,\u8fd8\u662f\u7a9d\u592a\u83dc...\n\n---\n\n\u54b1\u4eec\u4e00\u70b9\u4e00\u70b9\u5730\u770b\n\n\u5f88\u5bb9\u6613\u60f3\u5230(~~\u4f3c\u4e4e\u5e76\u4e0d\u90a3\u4e48\u5bb9\u6613~~),\u53ef\u4ee5\u5148\u628a\u8282\u70b9\u4ece\u5de6\u5230\u53f3,\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u7f16\u4e2a\u53f7,\u90a3\u4e48\u6bcf\u4e2a\u64cd\u4f5c\u5c31\u76f8\u5f53\u4e8e:(\u8bbe\u5f53\u524d\u8282\u70b9\u4e3a$now$)\n\n- $1:$ now*2 \n- $2:$ now*2+1\n- $U:$ now/2\n- $L:$ now--\n- $R:$ now++\n\n---\n\n 1. $D \\le 10$\u7684\u90e8\u5206\n \n \u7531\u4e8e\u8fb9\u6570\u6700\u591a\u6709$10*2^{D-1}$\u6761,\u6240\u4ee5\u53ef\u4ee5\u5148\u627e\u5230\u4e24\u4e2a\u8282\u70b9,\u66b4\u529b\u5efa\u8fb9,\u8dd1\u6700\u77ed\u8def\n \n \u4ee3\u7801:\n \n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define N 100010\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;\nchar a[N],b[N];\nint x,y,vis[N];\nint Get(char *s,int n){\n\tint now=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(s[i]=='1'){\n\t\t\tnow=(now<<1);\n\t\t}\n\t\telse if(s[i]=='2'){\n\t\t\tnow=(now<<1|1);\n\t\t}\n\t\telse if(s[i]=='U'){\n\t\t\tnow=(now>>1);\n\t\t}\n\t\telse if(s[i]=='L'){\n\t\t\tnow--;\n\t\t}\n\t\telse if(s[i]=='R'){\n\t\t\tnow++;\n\t\t}\n\t}\n\treturn now;\n}\nint head[N],cnt=0,no[N],dis[N];\nstruct Edge{\n\tint to,nxt;\n}edge[N<<3];\nvoid add(int a,int b){\n\tcnt++;\n\tedge[cnt].to=b;\n\tedge[cnt].nxt=head[a];\n\thead[a]=cnt;\n}\nint main(){\n\tscanf(\"%s\",a+1);\n\tscanf(\"%s\",b+1);\n\tint lena=strlen(a+1);\n\tint lenb=strlen(b+1);\n\tx=Get(a,lena);\n\ty=Get(b,lenb);\n\tmemset(dis,0x3f,sizeof(dis));\n\tfor(int i=0;i<=10;i++){\n\t\tno[1<<i]=1;\n\t}\n\tfor(int i=1;i<1<<11;i++){\n\t\tif(i>1)add(i,i>>1);\n\t\tif(i*2+1<(1<<11))add(i,i*2),add(i,i*2+1);\n\t\tif(!no[i])add(i,i-1);\n\t\tif(!no[i+1])add(i,i+1);\n\t}\n\tdis[x]=0;\n\tq.push(make_pair(0,x));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;\n\t\tq.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].to;\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(make_pair(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[y]<<endl;\n\treturn 0;\n}\n```\n\n\u671f\u671b\u5f97\u5206:10\u5206 \n\n\u5b9e\u9645\u5f97\u5206:14\u5206\n\n---\n\n 2. $D \\le 50$\u7684\u90e8\u5206\n \n \u4ed4\u7ec6\u89c2\u5bdf,\u53ef\u4ee5\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28:\n \n **\u5f53\u786e\u5b9a\u4e86\u4e24\u4e2a\u8282\u70b9\u4e4b\u540e\uff0c\u6700\u77ed\u8def\u5c31\u4e00\u5b9a\u662f\u4e24\u4e2a\u8282\u70b9\u5148\u5206\u522b\u5411\u4e0a\u79fb\u52a8\u5230\u540c\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u7136\u540e\u518d\u6cbf\u7740\u8fd9\u4e00\u5c42\u4e2d\u95f4\u7684\u8fb9\u8d70\u8fc7\u53bb**\n \n \u90a3\u4e48\u53ea\u9700\u8981\u679a\u4e3e\u4e24\u4e2a\u8282\u70b9\u5411\u4e0a\u8df3\u5230\u4e86\u54ea\u4e00\u5c42\u5373\u53ef\u3002(\u53ef\u4ee5\u628a\u6570\u9664\u4ee52,\u5c31\u76f8\u5f53\u4e8e\u5f80\u4e0a\u8e66\u4e86\u4e00\u5c42)\n \n $2^{50}$,long long\u53ef\u4ee5\u5b58\u7684\u4e0b,\u679a\u4e3e\u53d6\u6700\u5927\u503c\n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n#define N 100010\ntypedef long long ll;\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nchar a[N],b[N];\nll p,q,ans;\nll Get(char *s,int n){\n\tll now=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(s[i]=='1'){\n\t\t\tnow=(now<<1);\n\t\t}\n\t\telse if(s[i]=='2'){\n\t\t\tnow=(now<<1|1);\n\t\t}\n\t\telse if(s[i]=='U'){\n\t\t\tnow=(now>>1);\n\t\t}\n\t\telse if(s[i]=='L'){\n\t\t\tnow--;\n\t\t}\n\t\telse if(s[i]=='R'){\n\t\t\tnow++;\n\t\t}\n\t}\n\treturn now;\n}\nll Abs(ll x){\n\treturn x<0?-x:x;\n}\nint main(){\n\tscanf(\"%s\",a+1);\n\tscanf(\"%s\",b+1);\n\tp=1,q=1;\n\tint lena=strlen(a+1);\n\tint lenb=strlen(b+1);\n\tp=Get(a,lena);\n\tq=Get(b,lenb);\n\tif(p<q)swap(p,q);\n\tans=999999999;\n\tint tot=0;\n\twhile((int)log2(p)>(int)log2(q)){\n\t\tp>>=1;\n\t\ttot++;\n\t}\n\tif(p==q){\n\t\tans=min(ans,1LL*tot);\n\t}\n\twhile(p!=q){\n\t\tans=min(Abs(p-q)+tot,ans);\n\t\ttot+=2;\n\t\tp>>=1,q>>=1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u671f\u671b\u5f97\u5206:30\u5206\n\n\u5b9e\u9645\u5f97\u5206:38\u5206\n\n---\n\n 3. $D \\le 1000$\u548c$D \\le 20000$\u7684\u90e8\u5206\n \n \u65e2\u7136 \"\u5317\u51a5\u6709\u9c7c, \u5176\u540d\u4e3aD, D\u4e4b\u5927, long long\u5b58\u4e0d\u4e0b\",\u90a3\u4e48\u5c31\u8003\u8651\u9ad8\u7cbe\n \n \u53d1\u73b0\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a,\u90a3\u4e48\u5c31\u518d\u5957\u4e2abitset\u4f18\u5316\u4e00\u4e0b\u5457~\n \n \u4ee3\u7801:\n \n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<bitset>\nusing namespace std;\n#define N 100010\ntypedef long long ll;\nconst ll inf=999999999;\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nchar a[N],b[N];\nll ans;\nint lp,lq;\nint e[N];\nbitset<N> p,q,tmp;\nvoid Get(char *s,int n,bitset<N> &now){\n\tfor(int i=1;i<=n;i++){\n\t\tif(s[i]=='1'){\n\t\t\tnow<<=1;\n\t\t}\n\t\telse if(s[i]=='2'){\n\t\t\tnow<<=1;\n\t\t\tnow[0]=1;\n\t\t}\n\t\telse if(s[i]=='U'){\n\t\t\tnow=(now>>1);\n\t\t}\n\t\telse if(s[i]=='L'){\n\t\t\tint j=0;\n\t\t\twhile(now[j]==0){\n\t\t\t\tnow.flip(j);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tnow.flip(j);\n\t\t}\n\t\telse if(s[i]=='R'){\n\t\t\tint j=0;\n\t\t\twhile(now[j]==1){\n\t\t\t\tnow.flip(j);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tnow.flip(j);\n\t\t}\n\t}\n}\nll Abs(ll x){\n\treturn x<0?-x:x;\n}\nll Get(){\n\tll tmp=0;\n\tint d=0;\n\tfor(int i=0;i<=lp;i++){\n\t\te[i]=p[i]-q[i]-d;\n\t\tif(e[i]<0){\n\t\t\td=1;\n\t\t\te[i]+=2;\n\t\t}\n\t\telse d=0;\n\t\tif(e[i]&&i>30)return inf;\n\t}\t\n\tint j=32;\n\twhile(!e[j]&&j>-1)j--;\n\twhile(j>-1){\n\t\ttmp=(tmp<<1)+e[j];\n\t\tj--;\n\t}\n\treturn tmp;\n}\nint main(){\n\tscanf(\"%s\",a+1);\n\tscanf(\"%s\",b+1);\n\tp=1,q=1;\n\tint lena=strlen(a+1);\n\tint lenb=strlen(b+1);\n\tGet(a,lena,p);\n\tGet(b,lenb,q);\n\tint tot=0;\n\tlp=lq=100001;\n\twhile(p[lp]==0){\n\t\t--lp;\n\t}\n\twhile(q[lq]==0){\n\t\t--lq;\n\t}\n\tif(lp<lq)swap(lp,lq),swap(p,q);\n\twhile(lp>lq){\n\t\ttot++;\n\t\tp>>=1;\n\t\tlp--;\n\t}\n\tfor(int i=lp;i>=0;i--){\n\t\tif(p[i]<q[i]){\n\t\t\tswap(p,q);\n\t\t}\n\t\tif(p[i]!=q[i])break;\n\t}\n\tans=inf;\n\twhile((p&q).any()){\n\t\tint j=lp;\n\t\tll d=0;\n\t\td=Get();\n\t\tans=min(ans,d+tot);\n\t\ttot+=2;\n\t\tlp--,lq--;\n\t\tp>>=1;\n\t\tq>>=1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u671f\u671b\u5f97\u5206:50~70\u5206\n\n\u5b9e\u9645\u5f97\u5206:58\u5206 ~~(\u5f00O2\u53d8\u62100\u5206,\u5168RE)~~ (bitset\u4e0d\u592a\u4f1a\u7528,\u5982\u679c\u7528\u7684\u66f4\u597d\u7684\u8bdd\u53ef\u4ee5\u518d\u591a\u62ff\u51e0\u5206)\n\n---\n\n 4. $D \\le 1000000$ (\u5c31\u662f\u6b63\u89e3)\n \n \u53d1\u73b0\u8fdb\u4f4d\u548c\u9000\u4f4d\u64cd\u4f5c\u8981\u82b1\u5f88\u591a\u65f6\u95f4,\u90a3\u4e48\u53ef\u4ee5\u628a\u7f16\u53f7\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u641e\u5230\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u6765\u7ef4\u62a4\u8fdb\u4f4d\u548c\u9000\u4f4d\u64cd\u4f5c,\u8fd9\u6837\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nlogn)$\u3002\n \n \u5bf9\u4e8e$R$\u64cd\u4f5c,\u627e\u5230\u4ece\u53f3\u5f80\u5de6\u7b2c\u4e00\u4e2a0,\u8bb0\u4e3a$pos$,\u7136\u540e\u4ece$pos+1$\u5230\u6700\u540e\u90fd\u53d8\u62100,$pos$\u53d8\u62101,\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210+1\u7684\u64cd\u4f5c\n \n \u5bf9\u4e8e$L$\u64cd\u4f5c,\u5c31\u662f-1,\u90a3\u4e48\u5c31\u548c$L$\u64cd\u4f5c\u76f8\u53cd,\u4e0d\u7ec6\u8bb2\u4e86\n \n \u5269\u4e0b\u7684\u5c31\u662f\u63d2\u5165\u548c\u5220\u9664,~~(\u4ec0\u4e48?\u63d2\u5165\u548c\u5220\u9664?\u90a3\u5c31\u5199\u4e2a\u5e73\u8861\u6811\u5457)~~\n \n \u7136\u540e\u6211\u5c31\u5199\u4e86\u4e2a$fhq Treap$\n \n \u4ee3\u7801:\n \n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<cmath>\nusing namespace std;\n#define N 200010\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nchar s[N];\nint a[N],b[N],lena,lenb,root,cnt=0;\nstruct node{\n\tint ch[2],siz,sum,key,val;\n\tint cov;\n\tvoid Cover(int d){\n\t\tcov=d;\n\t\tval=d;\n\t\tsum=d*siz;\n\t}\n}t[N];\nint NewNode(int data){\n\tint k=++cnt;\n\tt[k].key=rand();\n\tt[k].ch[0]=t[k].ch[1]=0;\n\tt[k].siz=1;\n\tt[k].sum=t[k].val=data;\n\tt[k].cov=-1;\n\treturn k;\n}\nvoid update(int k){\n\tt[k].siz=t[t[k].ch[0]].siz+t[t[k].ch[1]].siz+1;\n\tt[k].sum=t[t[k].ch[0]].sum+t[t[k].ch[1]].sum+t[k].val;\n}\nvoid pushdown(int k){\n\tif(t[k].cov!=-1){\n\t\tif(t[k].ch[0])t[t[k].ch[0]].Cover(t[k].cov);\n\t\tif(t[k].ch[1])t[t[k].ch[1]].Cover(t[k].cov);\n\t\tt[k].cov=-1;\n\t}\n}\nvoid Split(int k,int data,int &l,int &r){\n\tif(!k){\n\t\tl=r=0;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tif(t[t[k].ch[0]].siz+1<=data){\n\t\tl=k;\n\t\tSplit(t[k].ch[1],data-t[t[k].ch[0]].siz-1,t[k].ch[1],r);\n\t}\n\telse{\n\t\tr=k;\n\t\tSplit(t[k].ch[0],data,l,t[k].ch[0]);\n\t}\n\tupdate(k);\n}\nint Merge(int l,int r){\n\tif(!l||!r)return l+r;\n\tpushdown(l),pushdown(r);\n\tif(t[l].key<t[r].key){\n\t\tt[l].ch[1]=Merge(t[l].ch[1],r);\n\t\tupdate(l);\n\t\treturn l;\n\t}\n\telse{\n\t\tt[r].ch[0]=Merge(l,t[r].ch[0]);\n\t\tupdate(r);\n\t\treturn r;\n\t}\n}\nint askr(int k){//\u67e5\u627e\u4ece\u53f3\u5f80\u5de6\u7b2c\u4e00\u4e2a1,\u6ce8\u610f\u7ec6\u8282\n\tint ans=0;\n\twhile(1){\n\t\tpushdown(k);\n\t\tif(t[k].ch[1]&&t[t[k].ch[1]].sum>0){\n\t\t\tans+=t[t[k].ch[0]].siz+1;\n\t\t\tk=t[k].ch[1];\n\t\t}\n\t\telse if(t[k].val){\n\t\t\treturn ans+t[t[k].ch[0]].siz+1;\n\t\t}\n\t\telse{\n\t\t\tk=t[k].ch[0];\n\t\t}\n\t}\n}\nint askl(int k){//\u67e5\u627e0,\u540c\u4e0a\n\tint ans=0;\n\twhile(1){\n\t\tpushdown(k);\n\t\tif(t[k].ch[1]&&t[t[k].ch[1]].sum<t[t[k].ch[1]].siz){\n\t\t\tans+=t[t[k].ch[0]].siz+1;\n\t\t\tk=t[k].ch[1];\n\t\t}\n\t\telse if(!t[k].val){\n\t\t\treturn ans+t[t[k].ch[0]].siz+1;\n\t\t}\n\t\telse{\n\t\t\tk=t[k].ch[0];\n\t\t}\n\t}\n}\nvoid Change(int x,int y,int data){\n\tint l=0,p=0,r=0;\n\tSplit(root,y,l,r);\n\tSplit(l,x-1,l,p);\n\tt[p].Cover(data);\n\troot=Merge(Merge(l,p),r);\n}\nvoid Get(int k,int *p,int &pn){\n\tpushdown(k);//\u8fd9\u91cc\u7a9d\u4e00\u5f00\u59cb\u5fd8\u8bb0pushdown\u4e86,\u67e5\u4e863\u4e2a\u5c0f\u65f6QAQ\n\tif(t[k].ch[0])Get(t[k].ch[0],p,pn);\n\tp[++pn]=t[k].val;\n\tif(t[k].ch[1])Get(t[k].ch[1],p,pn);\n}\nvoid solve(char *s){\n\tint len=strlen(s+1);\n\tmemset(t,0,sizeof(t));\n\troot=0;\n\tcnt=0;\n\troot=Merge(root,NewNode(1));\n\tfor(int i=1;i<=len;i++){\n\t\tif(s[i]=='1'){\n\t\t\troot=Merge(root,NewNode(0));\n\t\t}\n\t\telse if(s[i]=='2'){\n\t\t\troot=Merge(root,NewNode(1));\n\t\t}\n\t\telse if(s[i]=='U'){\n\t\t\tint tmp;\n\t\t\tSplit(root,t[root].siz-1,root,tmp);\n\t\t}\n\t\telse if(s[i]=='L'){\n\t\t\tint pos=askr(root);\n\t\t\tChange(pos+1,t[root].siz,1);\n\t\t\tChange(pos,pos,0);\n\t\t}\n\t\telse{\n\t\t\tint pos=askl(root);\n\t\t\tChange(pos+1,t[root].siz,0);\n\t\t\tChange(pos,pos,1);\n\t\t}\n\t}\n}\nint main(){\n\t//freopen(\"board.in\",\"r\",stdin);\n\t//freopen(\"board.out\",\"w\",stdout);\n\tsrand(time(0));\n\tscanf(\"%s\",s+1);\n\tsolve(s);\n\tGet(root,a,lena);\n\tscanf(\"%s\",s+1);\n\tsolve(s);\n\tGet(root,b,lenb);\n\tint r=abs(lena-lenb);\n\tint n=min(lena,lenb);\n\tint ans=2*n,dis=0;\n\tbool d=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(!d){\n\t\t\tdis=dis*2;\n\t\t\tif(a[i]==0)dis++;\n\t\t\tif(b[i]==1)dis++;\n\t\t}\n\t\tif(a[i]!=b[i]&&d){\n\t\t\td=0;\n\t\t\tif(a[i]==1)swap(a,b);\n\t\t}\n\t\tif(dis>ans)break;\n\t\tans=min(ans,dis+!d+2*(n-i));\n\t}\n\tcout<<ans+r<<endl;\n\treturn 0;\n}\n```\n\n\u4e0d\u4f1a\u5e73\u8861\u6811\u7684$OIer$\u53ef\u4ee5\u770b\u8fd9\u91cc,std\u7528\u7684\u662f\u7ebf\u6bb5\u6811,\u867d\u7136\u6709\u63d2\u5165\u5220\u9664,\u4f46\u4e5f\u53ea\u5728\u5e8f\u5217\u7684\u672b\u5c3e,\u53ef\u4ee5\u63d0\u524d\u5efa\u597d\u6811\n\n\u8fd9\u662fstd\u7684\u4ee3\u7801:~~(\u5f88\u663e\u7136\u548c\u6211\u7684\u9a6c\u8702\u5f88\u4e0d\u540c)~~\n\n[\u6302\u5728\u526a\u8d34\u677f\u91cc\u4e86](https://www.luogu.org/paste/a0x5l1nr)\n\n\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/) \u6b22\u8fce\u6765\u8e29,**\u5471**!!\n",
        "postTime": 1566637727,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5513 \u3010[CEOI2013]Board\u3011"
    },
    {
        "content": "[Link](https://www.luogu.com.cn/problem/P5513)\n\n\u56e0\u4e3a\u662f\u8003\u8bd5\u7684\u9898\u76ee\uff0c\u6240\u4ee5\u8bb2\u4e0b\u90e8\u5206\u5206\uff08\u65e0\u7591\u662f\u66b4\u9732\u4e86\u8003\u8bd5\u7684\u65f6\u5019\u6ca1\u6709\u5207\u6389\u8fd9\u9053\u9898\n\n\n**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c[My Blog](https://tony102.xyz/index.php/2020/10/22/luogu5513-ceoi2013board/)**\n\n\n### 10pts\n\n\u8fd9\u4e00\u6863\u90e8\u5206\u5206\u6700\u591a\u53ea\u4f1a\u6709$2^{10}$\u4e2a\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6309\u7167\u9898\u76ee\u63cf\u8ff0\u7684\u65b9\u6cd5\u5efa\u56fe\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\n\n\n\n### 30pts\n\n\u73b0\u5728\u6211\u4eec\u8981\u4ece$u$\u5230$v$\uff0c\u5047\u8bbe\u4e00\u6761\u8def\u5f84\u4e0a\u6700\u6d45\u7684\u70b9\u662f$w$\n\n\u90a3\u4e48\u4ece$u$\u5230$w$\u540c\u6df1\u5ea6\u7684\u70b9\u7eb5\u65b9\u5411\u4e0a\u81f3\u5c11\u8981\u8df3$dep[u] - dep[w] - 1$\u4e2a\u70b9\uff0c\u5bf9\u4e8e$v$\u540c\u7406\n\n\u5728$dep[w]$\u5c42\u4e0a\uff0c$u$,$v$\u76f8\u9047\u5c31\u8981\u8df3$|u\\ mod\\ 2^{dep[w]} - v\\ mod\\ 2^{dep[d]}|$\u6761\u8fb9\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a$w$\u7684\u6df1\u5ea6\uff0c\u5219\u7eb5\u5411\u8fb9\u8fd8\u9700\u8df3$dep[u] - dep[v] - 2 * dep[w]$\n\n\n\n### 100pts\n\n\u8003\u8651\u6b63\u89e3\n\n**\u8fd9\u4e2a\u9898\u6700\u5999\u7684\u5730\u65b9\u5c31\u5728\u4e8e\u5982\u4f55\u7528\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6c42\u51fa\u5176\u4e0e\u6839\u6700\u77ed\u8def(\u53ea\u901a\u8fc7\u7eb5\u5411\u8fb9)**\n\n\u5b9e\u9645\u4e0a\u8fd4\u7956\u64cd\u4f5c\u548c\u5f80\u540c\u5c42\u5de6\u53f3\u70b9\u8df3\u7684\u64cd\u4f5c\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5f80\u5de6\u8df3\u548c\u5f80\u53f3\u8df3\n\n\u6bd4\u5982\u8bf4\u8fd4\u7956\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u6700\u540e\u4e00\u4e2a\u5f80\u5de6\u53f3\u513f\u5b50\u8df3\u7684\u90a3\u4e2a\u64cd\u4f5c\u4e0d\u505a\n\n\u5bf9\u4e8e\u5f80\u540c\u5c42\u53f3\u8fb9\u7684\u70b9\u8df3\uff0c\u5047\u5982\u8fd9\u4e2a\u70b9\u73b0\u5728\u662f\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u8df3\u5230\u53f3\u513f\u5b50\u53bb\uff0c\u5c31\u662f\u4e00\u6b21\u8fd4\u7956+\u5f80\u53f3\u8df3\n\n\u6211\u4eec\u7528$0$\u8868\u793a\u5f80\u5de6\u513f\u5b50\u8df3\uff0c$1$\u5f80\u53f3\u513f\u5b50\u8df3\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u505a\u4e00\u4e9b\u64cd\u4f5c\n\n\uff08\u5efa\u8bae\u5728\u7eb8\u4e0a\u624b\u52a8\u6a21\u62df\u6240\u6709\u64cd\u4f5c\u548c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u64cd\u4f5c\uff0c\u4e0b\u9762\u4f1a\u76f4\u63a5\u7ed9\u51fa\u7b54\u6848\uff09\n\n1. \u5bf9\u4e8e\u5f80\u5de6\u513f\u5b50\u8df3\uff0c\u76f8\u5f53\u4e8e\u5728\u4e8c\u8fdb\u5236\u6570\u7684\u672b\u5c3e\u586b\u4e86\u4e00\u4e2a$0$\uff0c\u5f80\u53f3\u513f\u5b50\u5c31\u662f$1$\n2. \u8fd4\u7956\u5c31\u662f\u53bb\u6389\u6700\u540e\u4e00\u4f4d\uff0c\u6ce8\u610f\u8981\u8003\u8651\u8fdb\u4f4d\n3. \u5f80\u540c\u5c42\u5de6\u8fb9\u7684\u70b9\u8df3\uff0c\u76f8\u5f53\u4e8e\u7ed9\u6574\u4e2a\u6570$-1$,\u53f3\u8fb9\u5c31\u662f$+1$ \uff08\u6b64\u90e8\u5206\u5899\u88c2\u5efa\u8bae\u6a21\u62df\u9a8c\u8bc1\uff09\n\n\u597d\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u52a0\u6cd5\u548c\u8fdb\u4f4d\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\n\n\u7279\u522b\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u76f4\u63a5\u8fd9\u4e48\u5199\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u9ad8\u7cbe\u5ea6\u4f1a\u88ab\u6700\u540e\u4e00\u4e2a\u70b9\u5361\uff08\u5361\u6210$O(n^2)$\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e0b\uff09\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u628a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u964d\u5230$log$\u7ea7\u522b\uff0c\u4e5f\u53ef\u4ee5\u770b\u4e0b\u6587\u4ecb\u7ecd\u7684\u65b9\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u8fd4\u7956\u548c\u540c\u5c42\u8df3\u70b9\u8fd9\u91cc\u4e24\u79cd\u64cd\u4f5c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6539\u53d8\u8fd9\u4e24\u79cd\u64cd\u4f5c\u7684\u987a\u5e8f\u5bf9\u7b54\u6848\u4e0d\u4f1a\u9020\u6210\u5f71\u54cd\u3002\u540c\u65f6\u8fd9\u4e24\u79cd\u64cd\u4f5c\u662f\u552f\u4e8c\u6d89\u53ca\u8fdb\u4f4d\u7684\u64cd\u4f5c\u3002\u5982\u679c\u6bcf\u6b21\u8fdb\u884c\u8fd9\u4e24\u79cd\u64cd\u4f5c\u5c31\u8fdb\u4f4d\u5c31\u4f1a\u88ab\u5361\uff0c\u6240\u4ee5\u5176\u5b9e\u53ef\u4ee5\u628a\u8fd9\u4e24\u79cd\u64cd\u4f5c\u8bb0\u4e0b\u6765\uff0c\u6700\u540e\u540c\u4e00\u8fdb\u4f4d\u3002\n\n\n\n### Summary\n\n\u8fd9\u9053\u9898\u7684\u542f\u53d1\u5c31\u662f\uff0c\u628a\u4e00\u4e2a\u4e0d\u592a\u597d\u7ef4\u62a4\u7684\u64cd\u4f5c\u8f6c\u6362\u6210\u6570\u7684\u64cd\u4f5c\u3002\u5728\u4e00\u68f5\u4e8c\u53c9\u6811\u4e0a\u53ef\u4ee5\u4f18\u5148\u8003\u8651\u4e8c\u8fdb\u5236\u6570\u3002\n\n\n\n### Code\n\n\u53c8\u5230\u4e86\u6211\u6700\u559c\u6b22\u7684\u4ee3\u7801\u73af\u8282\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int SIZE = 2e5 + 5;\nconst int inf = (1 << 20);\n\nint lena, lenb;\nint a[SIZE], b[SIZE];\nchar stra[SIZE], strb[SIZE];\n\ninline void carryA(int pos)\n{\n\ta[pos - 1] += ((a[pos] - (a[pos] & 1)) >> 1);\n\ta[pos] &= 1;\n}\n\ninline void carryB(int pos)\n{\n\tb[pos - 1] += ((b[pos] - (b[pos] & 1)) >> 1);\n\tb[pos] &= 1;\n}\n\ninline void solve()\n{\n\tint lentha = strlen(stra), lenthb = strlen(strb);\n\tfor (register int i = 0; i < lentha; ++ i) {\n\t\tif (stra[i] == '1') a[++ lena] = 0;\n\t\telse if (stra[i] == '2') a[++ lena] = 1;\n\t\telse if (stra[i] == 'U') carryA(lena), -- lena;\n\t\telse if (stra[i] == 'L') -- a[lena];\n\t\telse if (stra[i] == 'R') ++ a[lena];\n\t}\t\n\tfor (register int i = lena; i > 1; -- i) carryA(i);\n\n\tfor (register int i = 0; i < lenthb; ++ i) {\n\t\tif (strb[i] == '1') b[++ lenb] = 0;\n\t\telse if (strb[i] == '2') b[++ lenb] = 1;\n\t\telse if (strb[i] == 'U') carryB(lenb), -- lenb;\n\t\telse if (strb[i] == 'L') -- b[lenb];\n\t\telse if (strb[i] == 'R') ++ b[lenb];\n\t}\t\n\tfor (register int i = lenb; i > 1; -- i) carryB(i);\n}\n\nint main()\n{\n\tscanf(\"%s\", stra); scanf(\"%s\", strb);\n\tsolve();\n\t// printf(\"%d %d\\n\", lena, lenb);\n\tint len = std::min(lena, lenb), ans = 2e9, del = 0;\n\tfor (register int i = 0; i <= len && abs(del) < inf; ++ i) {\n\t\tdel = (del << 1) + (a[i] - b[i]);\n\t\tans = std::min(ans, abs(del) + ((len - i) << 1));\n\t}\t\n\tprintf(\"%d\\n\", ans + abs(lena - lenb));\n\treturn 0;\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1603367098,
        "uid": 230933,
        "name": "Tony102",
        "ccfLevel": 7,
        "title": "Luogu5513 [CEOI2013]Board"
    },
    {
        "content": "\u518d\u88ab\u5946\u4f6c\u8650\u4e86\u65e0\u6570\u56de\u540e\uff0c\u96be\u5f97\u8003\u573a\u4e0aAC\u4e86\u4e00\u9053\u9898QWQ\u3002  \n\u8fd9\u4e00\u9898\u8003\u7684\u662f\u9ad8\u7cbe\u5ea6\u548c\u4e8c\u53c9\u6811\u8282\u70b9\u7684\u5206\u6790\u3002 \n\n\n----------------\n\n\u9996\u5148\uff0c\u6572\u591a\u4e86\u5806\u6a21\u677f\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u79fb\u52a8\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u5728\u4e00\u4e2a\u5806\u4e0a\u8df3\uff0c\u8bbe\u5f53\u524d\u7f16\u53f7\u4e3a `p`\n\n- `1` \u5806\u4e2d\u65b0\u589e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373 `p++`\n- `2` \u5806\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u5373 `p--`\n- `U` \u8df3\u5230\u7236\u8282\u70b9\uff0c\u5373 `p=p>>1`\n- `L` \u8df3\u5230\u5de6\u513f\u5b50\uff0c\u5373 `p=p<<1`\n- `R` \u8df3\u5230\u53f3\u513f\u5b50\uff0c\u5373 `p=p<<1|1`\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u8fdb\u5236\u9ad8\u7cbe\uff08\u4e0b\u6807\u4f4e\u7684\u4e3a\u9ad8\u4f4d\uff0c\u65b9\u4fbf\u79fb\u4f4d\uff09\uff0c  \n\u5c06\u64cd\u4f5c\u5e8f\u5217\u76f4\u63a5\u8f6c\u5316\u4e3a\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u800c\u8fd9\u4e5f\u53cd\u6620\u4e86\u8282\u70b9\u7684\u4f4d\u7f6e\u3002  \n\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u4e00\u6b21\u66b4\u529b `++` \u548c `--` \u662f $\\Theta(D)$ \u7684\u3002  \n\u4e0d\u8fc7\u53ef\u4ee5\u53d1\u73b0 $S\\le10^5$\uff0c\u4e8e\u662f \u589e\u52a0/\u51cf\u5c11\u91cf $\\le 10^5$\u3002  \n\u6240\u4ee5\u91c7\u53d6 FFT \u4f18\u5316\u9ad8\u7cbe\u4e58\u65f6\u7684\u65b9\u6cd5\uff1a\u4e0d\u538b\u4f4d\uff0c\u4e0d\u5728\u8ba1\u7b97\u65f6\u8fdb\u4f4d\uff0c\u53ea\u5728\u6700\u540e\u628a\u6240\u6709\u8fdb\u4f4d\u4e00\u6ce2\u63a8\u8fc7\u53bb\u3002  \n\u7531\u4e8e `U` \u64cd\u4f5c\u65f6\u672b\u4f4d\u4f1a\u820d\u53bb\uff0c\u6240\u4ee5\u8fd9\u65f6\u4e5f\u8981\u5904\u7406\u8fdb\u4f4d\u7684\u5f71\u54cd\u3002  \n\u81f3\u6b64\uff0c\u6211\u4eec\u7528 $\\Theta(S)$ \u800c\u4e0d\u662f $\\Theta(DS)$ \u7684\u590d\u6742\u5ea6\u5904\u7406\u51fa\u4e86\u8282\u70b9\u7684\u4f4d\u7f6e\u3002  \n\n----------------\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4e86\uff0c  \n\u9996\u5148\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u6df1\u5ea6\u4e0d\u540c\uff0c\u4e00\u5b9a\u8981\u7ecf\u8fc7\u7ad6\u76f4\u8fb9(\u663e\u7136)\u3002  \n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u4e2a\u6df1\u5ea6\u76f8\u540c\u8282\u70b9\u7684\u6c34\u5e73\u8ddd\u79bb\u4e3a\u4e8c\u8005\u7f16\u53f7\u7684\u5dee\uff08\u7531 `++` \u548c `--` \u53ef\u5f97\uff09\uff0c  \n\u4e8e\u662f **\u5728\u6df1\u5ea6\u8d8a\u6d45\u7684\u60c5\u51b5\u4e0b\uff0c\u6c34\u5e73\u8ddd\u79bb\u8d8a\u77ed(\u53ef\u80fd\u76f8\u7b49)** \u3002  \n\u4e3a\u4e86\u6700\u5c0f\u5316\u6c34\u5e73\u8ddd\u79bb\uff0c\u80af\u5b9a\u662f\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\u5148\u5f80\u4e0a\u8df3\u5230\u4e0e\u6df1\u5ea6\u6d45\u7684\u8282\u70b9\u76f8\u540c\u7684\u6df1\u5ea6\uff0c\u800c\u4e0d\u662f\u76f8\u53cd\u6216\u4e92\u76f8\u9760\u8fd1\u3002  \n\u63a5\u4e0b\u6765\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a  \n\n- \u4e24\u4e2a\u8282\u70b9\u7ee7\u7eed\u540c\u6b65\u5f80\u4e0a\u8df3\u3002 \n- \u8ba1\u7b97\u6c34\u5e73\u8ddd\u79bb\u3002\n\n(\u4e3a\u4ec0\u4e48\u662f\u540c\u6b65\uff1f\u7531\u4e8e\u9ad8\u5ea6\u4e0d\u540c\uff0c\u4e0d\u540c\u6b65\u7684\u4e0a\u8df3\u4e0e\u540c\u6b65\u5728\u672c\u8d28\u4e0a\u6ca1\u6709\u533a\u522b\uff0c\u5982\u4e0b\u56fe)  \n![](https://cdn.luogu.com.cn/upload/image_hosting/5xugvsot.png)  \n![](https://cdn.luogu.com.cn/upload/image_hosting/nryi72m6.png)  \n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5411\u4e0a\u8df3\u7684\u6df1\u5ea6\u662f\u7279\u522b\u5c0f\u7684\uff0c\u4e0d\u8d85\u8fc7 $D$\u3002  \n\u4f46\u662f\u6c34\u5e73\u8ddd\u79bb\u6700\u5927\u53ef\u8fbe\u5230 $2^D$\uff0c\u5448\u6307\u6570\u589e\u957f\uff0c\u5f53\u7136\uff0c\u4e5f\u6709\u4f8b\u5916\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/y1q69j8g.png)\n\n\uff08\u5982\u56fe\uff0c\u5c3d\u7ba1\u6df1\u5ea6\u4e0d\u65ad\u589e\u52a0\uff0c\u6c34\u5e73\u8ddd\u79bb\u59cb\u7ec8\u662f $1$\uff09  \n\u5f53\u7136\uff0c\u6c34\u5e73\u8ddd\u79bb\u662f\u53ef\u4ee5\u9012\u63a8\u7684\uff0c\u8bbe\u6df1\u5ea6\u4e3a $i$ \u65f6\u7684\u6c34\u5e73\u8ddd\u79bb\u4e3a $dis_i$\uff0c\u8fd9\u4e00\u4f4d\u4e0a\u4e24\u70b9\u7f16\u53f7\u7684\u503c\u5206\u522b\u4e3a   \n$a_i,b_i(a\\ge b)$\uff0c\u5219 $dis_i=2dis_{i-1}+(a_i-b_i)$ (\u663e\u7136)\u3002  \n\u7531\u6d45\u5165\u6df1\u7edf\u8ba1\u7b54\u6848\uff0c\u5f53 $dis_i$ \u5927\u4e8e\u67d0\u4e00\u4e2a\u5f88\u5927\u7684\u503c\uff08\u6bd4\u5982 $10^6$\uff09\u65f6\uff0c\u9000\u51fa\u5c31\u53ef\u4ee5\u8fa3 ~\\\\(\u2267\u25bd\u2266)/~  \u3002  \n\u8fd9\u91cc\u6700\u574f\u590d\u6742\u5ea6\u662f $\\Theta(D)$\uff0c\u4e0d\u9700\u8981\u9ad8\u7cbe\u5ea6\u3002\n\n---------\n\n\u6700\u7ec8\u4ee3\u7801\uff08\u6307\u9488\u5199\u7684\uff0c\u7565\u4e11\uff0c\u4f46\u662f\u5199\u8d77\u6765\u65b9\u4fbf\uff0c\u8dd1\u5f97\u5feb\uff09\n```cpp\n#include<stdio.h>\ntypedef long long ll;\nint num1[100010],num2[100010];\nint main(){\n\tint *top1=num1,*top2=num2;\n\t*top1=*top2=1;\n\tchar c=getchar();\n\twhile(c==' '||c=='\\n') c=getchar();\n\tfor(;c!=' '&&c!='\\n'&&c!=EOF;c=getchar())\n\t\tif(c=='U'){\n\t\t\tif(*(top1--)>=0) *top1+=*(top1+1)>>1;\n\t\t\telse *top1-=(-*(top1+1)+1)>>1;\n\t\t}//\u5411\u7236\u8282\u70b9\u8df3\u65f6\u8ba1\u7b97\u8fdb\u4f4d \n\t\telse if(c=='L') --*top1;\n\t\telse if(c=='R') ++*top1;\n\t\telse if(c=='1') *(++top1)=0;\n\t\telse if(c=='2') *(++top1)=1;\n\t//\u83b7\u53d6\u7b2c\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7 \n\tfor(int* i=top1;i!=num1;--i)\n\t\tif(*i>=0) *(i-1)+=*i>>1,*i&=1;\n\t\telse *(i-1)-=(-*i+1)>>1,*i=(-*i)&1;\n\t//\u6700\u540e\u7edf\u4e00\u8ba1\u7b97\u8fdb\u4f4d \n\twhile(c==' '||c=='\\n') c=getchar();\n\tfor(;c!=' '&&c!='\\n'&&c!=EOF;c=getchar())\n\t\tif(c=='U'){\n\t\t\tif(*(top2--)>=0) *top2+=*(top2+1)>>1;\n\t\t\telse *top2-=(-*(top2+1)+1)>>1;\n\t\t}\n\t\telse if(c=='L') --*top2;\n\t\telse if(c=='R') ++*top2;\n\t\telse if(c=='1') *(++top2)=0;\n\t\telse if(c=='2') *(++top2)=1;\n\tfor(int* i=top2;i!=num2;--i)\n\t\tif(*i>=0) *(i-1)+=*i>>1,*i&=1;\n\t\telse *(i-1)-=(-*i+1)>>1,*i=(-*i)&1;\n\t//\u83b7\u53d6\u7b2c\u4e8c\u4e2a\u70b9\u7684\u7f16\u53f7,\u540c\u4e0a \n\tll ans=0;\n\twhile(top1-num1>top2-num2) ++ans,--top1;\n\twhile(top2-num2>top1-num1) ++ans,--top2;\n\t//\u6821\u6b63\u4e24\u4e2a\u70b9\u7684\u9ad8\u5ea6\u5dee\uff0c\u8ba1\u5165\u7b54\u6848 \n\tint lca=0;\n\tfor(c=0;lca<=top1-num1;++lca){\n\t\tif(num1[lca]>num2[lca]){c=1;break;}\n\t\tif(num1[lca]<num2[lca]){c=0;break;}\n\t}//\u6c42\u4e24\u70b9\u7684LCA(\u5373\u7f16\u53f7\u7684LCP)\uff0c\u5e76\u6bd4\u8f83\u4e24\u4e2a\u70b9\u7f16\u53f7\u7684\u5927\u5c0f \n\tif(--lca==top1-num1) printf(\"%llu\",ans);\n\telse{//\u4eceLCA\u5f00\u59cb\u5f80\u4e0b\u9012\u589e\u6df1\u5ea6 \n\t\tll min=ans+=(top1-num1-lca)<<1,get=0;\n\t\tfor(++lca;lca<=top1-num1;++lca){\n\t\t\tans-=2,get=(get<<1)+(c? num1[lca]-num2[lca]:num2[lca]-num1[lca]);\n\t\t\tif(min>ans+get) min=ans+get;//\u7edf\u8ba1\u7b54\u6848 \n\t\t\telse if(get>(1<<20))break;//\u5982\u679c\u6c34\u5e73\u8ddd\u79bb\u5927\u4e8e\u67d0\u4e00\u4e2a\u503c\uff0c\u9000\u51fa \n\t\t}\n\t\tprintf(\"%llu\",min);\n\t}\n\treturn 0;\n}\n```\n\n\u65e2\u7136\u6700\u7ec8\u590d\u6742\u5ea6\u662f $\\Theta(D)$ \u7684\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u52a0\u5f3a\u5230 $10^7$ \u5462\u3002\uff08\u6c42\u6570\u636e\u52a0\u5f3a\uff09",
        "postTime": 1603367170,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5513 \u3010[CEOI2013]Board\u3011"
    },
    {
        "content": "#### \u9898\u610f\n\n> $~~~~$ \u7ed9\u51fa\u4e00\u68f5\u65e0\u7a77\u5927\u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u7ed9\u6bcf\u4e00\u5c42\u76f8\u90bb\u7684\u8282\u70b9\u8fde\u8fb9\uff0c\u5e76\u7ed9\u51fa\u4e94\u79cd\u64cd\u4f5c\u3002\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7528\u64cd\u4f5c\u5e8f\u5217\u63cf\u8ff0\u4e24\u4e2a\u70b9\uff0c\u6c42\u8fd9\u4e24\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n---\n\n#### \u9898\u89e3\n\n$~~~~$ \u611f\u89c9\u6ca1\u6709\u591a\u5c11\u4eba\u8bf4\u6e05\u695a\u4e3a\u4ec0\u4e48\u662f\u5f80\u4e0a\u8df3\u3002~~\uff08\u867d\u7136\u8fd9\u4e2a\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u884c~~\n\n$~~~~$ \u5982\u679c\u6211\u4eec\u628a\u8fd9\u68f5\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9\u50cf\u7ebf\u6bb5\u6811\u4e00\u6837\u7f16\u53f7\uff08\u6bcf\u4e2a\u8282\u70b9\u5de6\u513f\u5b50\u4e3a\u8be5\u8282\u70b9\u7f16\u53f7 $\\times 2$\uff0c\u53f3\u513f\u5b50\u4e3a\u8be5\u8282\u70b9\u7f16\u53f7 $\\times 2+1$\uff09 \uff0c\u90a3\u4e48\u8fd9\u4e94\u79cd\u64cd\u4f5c\u4f9d\u6b21\u5bf9\u5e94\uff1a\n\n- \u79fb\u52a8\u5230\u5de6\u513f\u5b50\uff1a$\\times 2$\n- \u79fb\u52a8\u5230\u53f3\u513f\u5b50\uff1a$\\times 2+1$\n- \u79fb\u52a8\u5230\u7236\u4eb2\u8282\u70b9\uff1a$/2$\n- \u79fb\u52a8\u5230\u540c\u5c42\u5de6\u8fb9\u8282\u70b9\uff1a$-1$\n- \u79fb\u52a8\u5230\u540c\u5c42\u53f3\u8fb9\u8282\u70b9\uff1a$+1$\n\n$~~~~$ \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u7f16\u53f7\u3002\u73b0\u5728\u8003\u8651\u600e\u4e48\u6839\u636e\u7f16\u53f7\u6c42\u6700\u77ed\u8def\u3002\n\n$~~~~$ \u9996\u5148\u4e0d\u96be\u60f3\u5230\u6211\u4eec\u4f1a\u628a\u6240\u5728\u8f83\u6df1\u7684\u70b9\u5411\u4e0a\u8df3\uff08\u4e0d\u505c $/2$ \uff09\u5230\u4e0e\u53e6\u4e00\u4e2a\u8282\u70b9\u540c\u5c42\uff0c\u56e0\u4e3a\u6211\u4eec\u82e5\u8ba9\u8f83\u6d45\u7684\u8282\u70b9\u5411\u4e0b\uff0c\u7531\u4e8e\u66f4\u6df1\u7684\u5c42\u6570**\u6a2a\u5411\u8fb9\u53ea\u4f1a\u589e\u591a**\uff0c\u76f8\u5f53\u4e8e\u5411\u4e0b\u8d70\u4e00\u6b65\u7684\u6700\u597d\u60c5\u51b5\u662f\u4e0d\u4f1a\u589e\u52a0\u989d\u5916\u8981\u8d70\u7684\u6a2a\u5411\u8fb9\uff0c\u800c\u5411\u4e0a\u8d70\u7684\u6700\u52a3\u60c5\u51b5\u662f**\u6a2a\u5411\u8fb9\u4e0d\u51cf\u5c11**\uff0c\u56e0\u6b64\u7b54\u6848\u6bd4\u8d77\u5411\u4e0a\u4e00\u5b9a**\u4e0d\u4f1a\u53d8\u4f18**\u3002\n\n$~~~~$ \u56e0\u6b64\u4e24\u4e2a\u8282\u70b9\u4e00\u5b9a\u8d70\u5230\u8f83\u6d45\u7684\u70b9\u6240\u5728\u5c42\u6570\u53ca\u4ee5\u4e0a\u7684\u67d0\u5c42\u540e\u901a\u8fc7\u8be5\u5c42\u4e4b\u95f4\u7684\u6a2a\u5411\u8fb9\u76f8\u9047\uff0c\u8003\u8651\u679a\u4e3e\u8d70\u5230\u7684\u5c42\u6570\uff0c\u90a3\u4e48\u5728\u8be5\u5c42\u76f8\u9047\u8981\u8d70\u7684\u6a2a\u5411\u8fb9\u4e3a\u4e24\u4e2a\u70b9\u8df3\u5230\u7684\u70b9\u7684\u7f16\u53f7\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n$~~~~$ \u5269\u4e0b\u7684\u90e8\u5206\u5c31\u50cf\u5176\u4ed6\u9898\u89e3\u4e00\u6837\u628a\u6bcf\u4e2a\u64cd\u4f5c\u6539\u4e3a\u7528\u4e8c\u8fdb\u5236\u9ad8\u7cbe\u5373\u53ef\u3002\uff08\u6216\u8005\u7ebf\u6bb5\u6811\uff0c\u5e73\u8861\u6811\uff09\n\n$~~~~$ \u540c\u65f6\u8fd8\u8981\u6ce8\u610f\uff0c\u5728\u592a\u6df1\u7684\u4f4d\u7f6e\u7684\u7b54\u6848\u540c\u7406\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u5728\u66f4\u6d45\u7684\u4f4d\u7f6e\u66f4\u4f18\uff0c\u56e0\u6b64\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\uff0c\u4ece\u6d45\u5230\u6df1\u679a\u4e3e\uff0c\u5f53\u73b0\u5728\u679a\u4e3e\u5c42\u7684\u6a2a\u5411\u8fb9\u4e4b\u5dee\u8d85\u8fc7\u8be5\u503c\u65f6\u76f4\u63a5\u505c\u6b62\u679a\u4e3e\u5373\u53ef\u3002\n\n---\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nconst ll INF=(1<<20);\nchar s1[100005],s2[100005];\nint cnta,cntb,A[100005],B[100005];\ninline ll Abs(ll x){return x>0?x:-x;}\nvoid SolveA(int k)//\u5c06\u7b2c k \u4f4d\u8fdb\u4f4d\u6216\u8005\u501f\u4f4d \n{\n\tA[k-1]+=A[k]/2;A[k]%=2;\n\tif(A[k]<0) A[k-1]--,A[k]=1;\n}\nvoid SolveB(int k)\n{\n\tB[k-1]+=B[k]/2;B[k]%=2;\n\tif(B[k]<0) B[k-1]--,B[k]=1;\n}\nvoid Work()\n{\n\tint len1=strlen(s1+1),len2=strlen(s2+1);\n\tfor(int i=1;i<=len1;i++)\n\t{\n\t\tif(s1[i]=='1') A[++cnta]=0;\n\t\tif(s1[i]=='2') A[++cnta]=1;\n\t\tif(s1[i]=='U') SolveA(cnta),cnta--;\n\t\tif(s1[i]=='L') A[cnta]--;\n\t\tif(s1[i]=='R') A[cnta]++;\n\t}\n\tfor(int i=1;i<=len2;i++)\n\t{\n\t\tif(s2[i]=='1') B[++cntb]=0;\n\t\tif(s2[i]=='2') B[++cntb]=1;\n\t\tif(s2[i]=='U') SolveB(cntb),cntb--;\n\t\tif(s2[i]=='L') B[cntb]--;\n\t\tif(s2[i]=='R') B[cntb]++;\n\t}\n\tfor(int i=cnta;i>=1;i--) SolveA(i);\n\tfor(int i=cntb;i>=1;i--) SolveB(i);\n}\nint main() {\n\tscanf(\"%s %s\",s1+1,s2+1);\n\tWork();\n\tll Ans=2e9,tmp=0;\n\tfor(int i=1;i<=min(cnta,cntb)&&Abs(tmp)<INF;i++)//\n\t{\n\t\ttmp=(tmp<<1)+(A[i]-B[i]);\n\t\tAns=min(Ans,cnta-i+cntb-i+Abs(tmp));//\u6ce8\u610f\u7edd\u5bf9\u503c\n\t}\n\tprintf(\"%lld\",Ans);\n\treturn 0;\n}\n```\n\n\n\n\n\n$~~~~$ ",
        "postTime": 1610115012,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5513 \u3010[CEOI2013]Board\u3011"
    }
]