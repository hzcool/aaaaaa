[
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u6211\u5439\u7206\u547d\u8fd0\u77f3\u4e4b\u95e8\uff01\uff011  \n\u8fd9\u9053\u9898\u76ee\u4e3b\u8981\u8003\u5bdf\u4e86\u9009\u624b\u5bf9\u4e8e\u67d0\u4e9b\u7b97\u6cd5\u7684\u719f\u6089\u5ea6\u4ee5\u53ca AC \u81ea\u52a8\u673a\u7684\u6982\u5ff5\u3002\u8fd9\u4e2a\u9898\u5176\u5b9e\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u8d5b\u65f6\u53ea\u6709\u548c\u672c\u9898\u76ee\u540d\u4e00\u6837\u7684\u90a3\u4f4d\u5de8\u4f6c\u5199\u4e86\u6b63\u89e3\uff08\u5176\u5b83\u7684\u662f\u795e\u79d8\u505a\u6cd5\uff09\uff0c\u539f\u56e0\u53ef\u80fd\u662f\u6ca1\u60f3\u5230\u865a\u6811\u4e00\u8f88\u5b50\u90fd\u60f3\u4e0d\u51fa\u6765\uff08\u6bd5\u7adf\u8fd9\u4e2a trick \u6211\u4ece\u672a\u89c1\u8fc7\uff09\u3002  \n\u6570\u636e\u6709\u70b9\u6c34\u2026\u2026\u4f46\u662f\u80af\u5b9a\u4f1a\u52a0\u5f3a\u7684\uff08\u4f46\u4f3c\u4e4e\u5361\u4e0d\u6389\uff1f\uff09\u3002  \n\n### 30~50pts  \n\u5efa\u5b8c AC \u81ea\u52a8\u673a\u540e\u66b4\u529b\u5f97\u5230 $cnt$\uff0c\u7136\u540e\u66b4\u529b\u6c42\u51fa\u7b2c $k$ \u5927\u3002\uff08\u56e0\u4e3a\u6570\u636e\u6c34\uff0c\u6240\u4ee5\u4f60\u6700\u9ad8\u751a\u81f3\u53ef\u4ee5\u5f97\u5230 60pts\uff09  \n### 60pts  \n\u5148\u770b $k=1$\uff0c$k\\le5$ \u662f\u7c7b\u4f3c\u7684\uff08\u8fd9\u662f\u4e00\u4e2a\u53e3\u80e1\u7b97\u6cd5\uff09\u3002  \n\u6211\u4eec\u53ef\u4ee5\u5efa\u51fa AC \u81ea\u52a8\u673a\uff0c\u7136\u540e\u628a\u8be2\u95ee\u4e32\u5728 AC \u4e0a\u8dd1\uff0c\u5f97\u5230\u4e00\u5806\u8282\u70b9\uff0c\u8bbe\u8fd9\u4e2a\u53ef\u91cd\u96c6\u5408\u4e3a $T$\u3002\u8003\u8651 $cnt_i$ \u7684\u610f\u4e49\u662f\u6709\u591a\u5c11\u4e2a $T$ \u4e2d\u8282\u70b9\u5728 $s_i$ \u5728 trie \u6811\u4e0a\u7684\u5c3e\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u3002  \n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a $T$ \u4e2d\u8282\u70b9\u8fdb\u884c\u5230\u6839\u52a0\u64cd\u4f5c\uff08\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\uff09\uff0c\u7136\u540e\u66b4\u529b\u6c42\u7ef4\u62a4\u524d $k$ \u5927\u7684\u503c\u3002\u6700\u540e\u76f4\u63a5\u770b\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\u3002  \n\n## 100pts  \n\u4fdd\u7559 60pts \u4e2d $cnt_i$ \u7684\u610f\u4e49\uff0c\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u5f0f\u53bb\u67e5\u8be2\u7b2c $k$ \u5927\u3002  \n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42 $cnt_i\\ge k$ \u7684\u6709\u591a\u5c11\u4e2a\u3002  \n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e $T$ \u4e2d\u7684\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u76f4\u63a5\u8fdb\u884c\u5230\u6839\u52a0\u64cd\u4f5c\u3002\u56e0\u4e3a $|T|=|S|,\\sum |S|\\le5\\times10^5$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a $T$ \u4e2d\u7684\u70b9\u5efa\u6210\u4e00\u68f5\u865a\u6811\u3002  \n\u63a5\u4e0b\u6765\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684 $u$ \u5230 $fa_u$\uff0c\u8fd9\u4e00\u6bb5\u7684 $cnt$ \u7684\u503c\u662f\u4e00\u6837\u7684\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e00\u6bb5\u4e0a\u9762 $w_i\\ge \\lceil\\dfrac{mid}{cnt}\\rceil$ \u6709\u591a\u5c11\u4e2a\u3002\u4e00\u6bb5\u76f4\u4e0a\u76f4\u4e0b\u7684\u94fe\u6c42\u4e0a\u9762\u7684\u503c\u5927\u4e8e\u7b49\u4e8e\u4e00\u4e2a\u53c2\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u68f5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum|T|\\log L\\log ans)$\u3002  \n\n```cpp\n#include<bits/stdc++.h>\n#define lc(x) t[x].c[0]\n#define rc(x) t[x].c[1]\nusing namespace std;\ninline int reads(char s[]) {\n\tint x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'z')ch=getchar();\n\twhile(ch>='0'&&ch<='z')s[x++]=ch,ch=getchar();\n\ts[x]='\\0';\n\treturn x;\n}\ninline int read() {\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x;\n}\ntypedef long long ll;\nconst int maxn=5e5+5;\nstruct tree {\n\tint c[2],siz;\n} t[maxn*30];\nint tr[maxn][4],fail[maxn],siz[maxn],rt[maxn],v[maxn],n,m,tot=1,cnt,f[maxn][19],d[maxn],zc[maxn],book[maxn],st[maxn],top,p[maxn],pos,lg2[maxn];\nchar s[maxn];\nqueue<int> q;\nvector<int> e[maxn],w[maxn],bj[maxn];\ntypedef vector<int>::iterator iter;\nbool cmp(int x,int y) {\n\treturn p[x]<p[y];\n}\nvoid insert(int u) {\n\tint len=strlen(s),rt=1;\n\tfor(register int i=0; i<len; i++) {\n\t\tint y=s[i]-'a';\n\t\tif(!tr[rt][y])tr[rt][y]=++tot;\n\t\trt=tr[rt][y];\n\t}\n\tbj[rt].push_back(u);\n}\nvoid getfail() {\n\tfor(register int i=0; i<4; i++)tr[0][i]=1;\n\tq.push(1);\n\twhile(!q.empty()) {\n\t\tint u=q.front(),f=fail[u];\n\t\tq.pop();\n\t\tfor(register int i=0; i<4; i++) {\n\t\t\tint j=tr[u][i];\n\t\t\tif(!j) {\n\t\t\t\ttr[u][i]=tr[f][i];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfail[j]=tr[f][i];\n\t\t\tq.push(j);\n\t\t}\n\t}\n}\nvoid add(int &id,int o,int l,int r,int v) {\n\tid=++cnt,t[id]=t[o],t[id].siz++;\n\tif(l==r)return;\n\tint mid=l+r>>1;\n\tv<=mid?add(lc(id),lc(o),l,mid,v):add(rc(id),rc(o),mid+1,r,v);\n}\nint ask(int id,int o,int l,int r,int v) {\n\tif(!id)return 0;\n\tif(l>=v)return t[id].siz-t[o].siz;\n\tint mid=l+r>>1,sum=ask(rc(id),rc(o),mid+1,r,v);\n\tif(v<=mid)sum+=ask(lc(id),lc(o),l,mid,v);\n\treturn sum;\n}\nvoid dfs(int u,int fa) {\n\trt[u]=rt[fa];\n\tfor(register iter it=bj[u].begin(); it!=bj[u].end(); it++)add(rt[u],rt[u],1,1000,v[*it]);\n\td[u]=d[fa]+1,f[u][0]=fa,p[u]=++pos;\n\tfor(register int i=1; i<=lg2[d[u]]; i++)f[u][i]=f[f[u][i-1]][i-1];\n\tfor(iter it=e[u].begin(); it!=e[u].end(); it++)dfs(*it,u);\n}\nint lca(int x,int y) {\n\tif(d[x]<d[y])swap(x,y);\n\twhile(d[x]>d[y])x=f[x][lg2[d[x]-d[y]]-1];\n\tif(x==y)return x;\n\tfor(register int i=lg2[d[x]]-1; i>=0; i--)\n\t\tif(f[x][i]!=f[y][i])x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nint check(int u,int fa,int mid) {\n\tint sum=0;\n\tsiz[u]=book[u];\n\tfor(register iter it=w[u].begin(); it!=w[u].end(); it++)sum+=check(*it,u,mid),siz[u]+=siz[*it];\n\tif(u!=1)sum+=(mid-1)/siz[u]+1>1000?0:ask(rt[u],rt[fa],1,1000,(mid-1)/siz[u]+1);//\u5c0f\u7ec6\u8282\uff0c\u8fd9\u91cc\u7684\u526a\u679d\u53ef\u4ee5\u5927\u5927\u4f18\u5316\u5e38\u6570\n\treturn sum;\n}\nvoid clear(int u) {\n\tfor(register iter it=w[u].begin(); it!=w[u].end(); it++)clear(*it);\n\tsiz[u]=book[u]=0,w[u].clear();\n}\nint main() {\n\tint k,sl1=0,sl2=0;\n\tn=read(),m=read();\n\tfor(register int i=1; i<=n; i++)reads(s),sl1+=strlen(s),v[i]=read(),insert(i);\n\tgetfail();\n\tfor(register int i=2; i<=tot; i++)e[fail[i]].push_back(i);\n\tfor(register int i=1; i<=tot; i++)lg2[i]=lg2[i-1]+((1<<lg2[i-1])==i);\n\tdfs(1,0);//\u5efa AC \u81ea\u52a8\u673a\uff0cfail \u6811\n\twhile(m--) {\n\t\treads(s),sl2+=strlen(s),k=read();\n\t\tint u=1,len=strlen(s);\n\t\tfor(register int i=0; i<len; i++)u=tr[u][s[i]-'a'],zc[i+1]=u,book[u]++;//\u5f97\u5230 T \u7684\u6240\u6709\u8282\u70b9\n\t\tsort(zc+1,zc+len+1,cmp),len=unique(zc+1,zc+len+1)-zc-1;\n\t\tst[top=1]=zc[1];\n\t\tfor(register int i=2; i<=len; i++) {\n\t\t\tint la=lca(st[top],zc[i]);\n\t\t\twhile(top) {\n\t\t\t\tif(d[la]>=d[st[top-1]]) {\n\t\t\t\t\tif(la!=st[top])w[la].push_back(st[top]),la!=st[top-1]?st[top]=la:top--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tw[st[top-1]].push_back(st[top]),top--;\n\t\t\t}\n\t\t\tst[++top]=zc[i];\n\t\t}\n\t\twhile(--top)w[st[top]].push_back(st[top+1]);//\u5efa\u51fa\u865a\u6811\n\t\tint l=1,r=1e9,ans=0;\n\t\twhile(l<=r) {\n\t\t\tint mid=l+r>>1;\n\t\t\tif(check(st[1],1,mid)>=k)l=mid+1,ans=mid;\n\t\t\telse r=mid-1;\n\t\t}//\u4e8c\u5206\u7b54\u6848\n\t\tprintf(\"%d\\n\",ans);\n\t\tclear(st[1]);\n\t}\n}\n```",
        "postTime": 1643094079,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3--Salieri"
    },
    {
        "content": "Steins Gate \u592a\u795e\u4e86\uff0c\u65e0\u8bba\u662f\u6e38\u620f\u8fd8\u662f\u756a\u5927\u5bb6\u90fd\u503c\u5f97\u53bb\u5eb7\u5eb7\u554a\uff01qwq\n\n\u3010\u55ef\u662f\u6211\uff0c\u201c\u8428\u5217\u91cc\u8c31\u4e0d\u51fa\u83ab\u624e\u7279\u7684\u66f2\u5b50\u201d\u600e\u4e48\u4e5f\u627e\u4e0d\u5230\u4e86\uff0c\u770b\u6765\u201c\u673a\u5173\u201d\u5df2\u7ecf\u5f00\u59cb\u4ecb\u5165\u4e86\u2026\u2026\u6211\u4f1a\u6ce8\u610f\u7684\uff0cEL PSY CONGROO\u3011\n\n## \u9898\u76ee\u5927\u610f\n\n- $n$ \u4e2a\u6a21\u5f0f\u4e32\u5e26\u6743\uff0c$m$ \u6b21\u67e5\u8be2\u95ee\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u4e2d\u51fa\u73b0\u6b21\u6570\u4e58\u4ee5\u6743\u7684 $K$ \u5927\u503c\u3002\n\n- $n,m\\leq 10^5$\uff0c\u6a21\u5f0f\u4e32\u6587\u672c\u4e32\u5404\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc7 $5\\times 10^5$\uff0c\u6743\u4e0d\u8d85\u8fc7 $10^3$\u3002\n\n# \u4e00\u3001\u601d\u8def\n\n\u591a\u6a21\u5f0f\u4e32\u5339\u914d\u7acb\u9a6c\u60f3\u5230 AC\u81ea\u52a8\u673a\uff0c\u5efa\u51fa Fail \u6811\u540e\uff0c\u6bcf\u6b21\u5339\u914d\u8ba9\u6587\u672c\u4e32\u6cbf\u7740 Trie \u6811\u8d70\uff0c\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u5c31\u662f Fail \u6811\u4e0a\u5b50\u6811\u5185\u88ab\u904d\u5386\u8fc7\u7684\u7ed3\u70b9\u4e2a\u6570\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u6587\u672c\u4e32\u90fd\u5728 Fail \u6811\u4e0a\u6253\u51fa\u6563\u70b9\uff0c\u81ea\u7136\u5730\u60f3\u5230\u4f7f\u7528\u865a\u6811\uff0c\u8fd9\u6837\u865a\u6811\u4e00\u6761\u8fb9\u4e0a\u7684\u6240\u6709\u6a21\u5f0f\u4e32\u51fa\u73b0\u6b21\u6570\u5c31\u90fd\u76f8\u7b49\u4e86\uff0c\u4e3a\u865a\u6811\u5b50\u6811\u5185\u6807\u8bb0\u4e4b\u548c\uff08\u6587\u672c\u4e32\u6bcf\u8d70\u5230\u4e00\u4e2a\u70b9\u5c31\u505a $+1$ \u6807\u8bb0\uff09\u3002\n\n\u4f46\u662f\u53d1\u73b0\u628a\u6240\u6709\u94fe\u7684\u503c\u57df\u5206\u5e03\u5168\u5e76\u8d77\u6765\u4e0d\u592a\u73b0\u5b9e\uff0c\u6bcf\u6761\u94fe\u7684\u51fa\u73b0\u6b21\u6570\u4e5f\u90fd\u4e0d\u4e00\u6837\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u503c\u57df\u5206\u5e03\u627e $K$ \u5927\u503c\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5224\u65ad\u4e00\u4e2a\u6570\u5b57\u7684\u6392\u540d\u662f\u65b9\u4fbf\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u8bbe\u8981\u5224\u65ad\u7684\u6570\u4e3a $d$\uff0c\u67d0\u6761\u94fe\u6df1\u5ea6\u8f83\u5927\u7684\u90a3\u4e2a\u7ed3\u70b9\u5b50\u6811\u5185\u6807\u8bb0\u4e4b\u548c\u4e3a $S$\uff0c\u90a3\u4e48\u8fd9\u6761\u94fe\u4e0a\u6bd4\u6211\u5927\u7684\u6570\u5b57\u7684\u6743\u503c $v$ \u6ee1\u8db3\n\n$$ v>\\lceil \\frac{d}{S} \\rceil $$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u4e8c\u5206\u8fd9\u4e2a $d$\uff0c\u6ee1\u8db3\u6700\u7ec8\u4f18\u7f8e\u5ea6 $\\geq d+1$ \u7684\u6a21\u5f0f\u4e32\u4e2a\u6570\u5c11\u4e8e $K$ \u4e2a\uff0c\u6700\u5c0f\u7684\u8fd9\u4e2a $d$ \u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\u6700\u540e\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u7ef4\u62a4\u4e00\u6761 \u5b50\u5b59-\u7956\u5148 \u7684\u94fe\u4e0a\u6392\u540d\u67e5\u8be2\uff0c\u663e\u7136\u53ef\u4ee5 Fail \u6811\u4e0a\u4e3b\u5e2d\u6811\uff0c\u8fd9\u6837\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log v+L(\\log^2 v + \\log L))$ \u7684\u3002\n\n~~\u5582\u5582\u5582\u51fa\u9898\u4eba\uff0c$L$ \u6709 5e5 \u7ed3\u679c std 2log \u771f\u7684\u597d\u5417~~\n\n\u53d1\u73b0 $L$ \u5176\u5b9e\u6bd4 $n$ \u5927\u633a\u591a\u7684\uff0c\u4e8e\u662f\u8003\u8651\u5e73\u8861\u9884\u5904\u7406\u548c\u67e5\u8be2\u7684\u590d\u6742\u5ea6\uff0c\u62e5\u6709\u8fd9\u4e2a\u795e\u5947\u529f\u6548\u4e5f\u53ea\u6709\u5206\u5757\u4e86\u3002\u4e5f\u5c31\u662f\u8bf4\u628a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u6539\u6210\u53ef\u6301\u4e45\u5316\u5206\u5757\uff0c\u8fd9\u6837\u4e00\u6b21 \u5b50\u5b59-\u7956\u5148 \u94fe\u4e0a\u5927\u4e8e\u7ed9\u5b9a\u503c\u7684\u4e2a\u6570\u5c31\u80fd $O(1)$ \u67e5\u8be2\u4e86\u3002\n\n\u5982\u6b64\u5982\u6b64\uff0c\u590d\u6742\u5ea6 $O(n\\sqrt v + L(\\log v + \\log L))$\uff0c\u7531\u4e8e\u51fa\u9898\u4eba\u8d34\u5fc3\u5730\u628a\u503c\u57df\u8bbe\u8d85\u5c0f\uff0c\u6839\u53f7\u8ddflog\u5dee\u5f97\u51e0\u4e4e\u4e0d\u591a\u3002\n\n\u4f46\u662f\u6211\u5e38\u6570\u5199\u75b5\u4e86\uff0c\u5e76\u6ca1\u6709\u8fbe\u5230\u60f3\u8c61\u4e2d\u78be\u538b 2log \u7684\u6548\u679c\u3002\n\n# \u4e8c\u3001\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\ninline int Read()\n{\n\tint ret;char c;\n\twhile(1) {c=getchar();if('0'<=c && c<='9') {ret=c-'0';break;}}\n\twhile(1) {c=getchar();if('0'<=c && c<='9') ret=ret*10+c-'0';else break;}\n\treturn ret;\n}\n\nconst int MAXN=1e5,MAXL=5e5,MAXV=1e3,SQRV=32;\n\nint n,m;string s;\nint Trie[MAXL+5][4],tot;\nvector<int> V[MAXL+5];\nint Q[MAXL+5],Head,Tail,Fail[MAXL+5];\n\nvoid New(int now,int t)\n{\n\tif(Trie[now][t]) return;\n\tTrie[now][t]=++tot;\n}\n\nvoid Insert(int now,int depth)\n{\n\tif(depth==s.length()) {V[now].push_back(Read());return;}\n\tint d=s[depth]-'a';\n\tNew(now,d),Insert(Trie[now][d],depth+1);\n}\n\nvoid BuildAC()\n{\n\tHead=1,Tail=0;\n\tfor(int i=0;i<4;i++) if(Trie[0][i]) Q[++Tail]=Trie[0][i];\n\tfor(int now,rear;Head<=Tail;)\n\t{\n\t\tnow=Q[Head++];\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\trear=Trie[now][i];\n\t\t\tif(rear)\n\t\t\t{\n\t\t\t\tFail[rear]=Trie[Fail[now]][i];\n\t\t\t\tQ[++Tail]=rear;\n\t\t\t}\n\t\t\telse Trie[now][i]=Trie[Fail[now]][i];\n\t\t}\n\t}\n}\n\nvoid Match() {Tail=0;for(int now=0,i=0;i<s.length();i++) now=Trie[now][s[i]-'a'],Q[++Tail]=now;}\n\nvector<int> ft[MAXL+5];//\u5931\u914d\u6811\nint Block[MAXN+5][SQRV+1],root[MAXN+5][SQRV+1],LT[MAXN+5][SQRV+1],lst;\nint loc[MAXL+5];\n//\u53ef\u6301\u4e45\u5316\u5206\u5757 \nint Skip[MAXL+5],DFN[MAXL+5],dep[MAXL+5],dnum;\nint Mson[MAXL+5],Size[MAXL+5];\n\nvoid Plus(int x,int v)//\u5728\u7248\u672c x \u4e0a [1,v] +1\n{\n\tint hb=((v-1)>>5)+1,lb=((v-1)&31)+1;\n\t++lst;\n\tfor(int i=1;i<=32;i++) Block[lst][i]=Block[root[x][hb]][i]+LT[x][hb];\n\tfor(int i=1;i<=32;i++)\n\t\tif(i!=hb) root[lst][i]=root[x][i],LT[lst][i]=LT[x][i];\n\t\telse root[lst][i]=lst;\n\tfor(int i=1;i<=lb;i++) ++Block[lst][i];\n\tfor(int i=1;i<hb;i++) ++LT[lst][i];\n}\n\nint Ask(int x,int v)//\u7248\u672c x \u4e0a >=v \u7684\u6570\u7684\u4e2a\u6570\n{\n\tint hb=((v-1)>>5)+1,lb=((v-1)&31)+1;\n\tif(v>1000) return 0;\n\treturn Block[root[x][hb]][lb]+LT[x][hb];\n}\n\nvoid Build(int now)\n{\n\tDFN[now]=++dnum;\n\tdep[now]=dep[Fail[now]]+1;\n\tloc[now]=loc[Fail[now]];\n\tfor(int i=0;i<V[now].size();i++) Plus(loc[now],V[now][i]),loc[now]=lst;\n\tSize[now]=1;\n\tfor(int i=0,rear;i<ft[now].size();i++)\n\t{\n\t\trear=ft[now][i];\n\t\tBuild(rear);\n\t\tSize[now]+=Size[rear];\n\t\tif(Size[rear]>Size[Mson[now]]) Mson[now]=rear;\n\t}\n}\n\nvoid TCP(int now,int Top)\n{\n\tSkip[now]=Top;\n\tif(Mson[now]) TCP(Mson[now],Top);\n\tfor(int i=0,rear;i<ft[now].size();i++)\n\t{\n\t\trear=ft[now][i];\n\t\tif(rear==Mson[now]) continue;\n\t\tTCP(rear,rear);\n\t}\n}\n\nint LCA(int a,int b)\n{\n\twhile(Skip[a]!=Skip[b])\n\t\tif(dep[Skip[a]]>dep[Skip[b]]) a=Fail[Skip[a]];\n\t\telse b=Fail[Skip[b]];\n\tif(dep[a]<dep[b]) return a;\n\treturn b;\n}\n\nbool cmp(int a,int b) {return DFN[a]<DFN[b];}\n\nvector<int> vt[MAXL+5];\nint S[MAXL+5],tp;\nvoid CleanVT(int now)\n{\n\tSize[now]=0;\n\tfor(int i=0;i<vt[now].size();i++) CleanVT(vt[now][i]);\n\tvt[now].clear();\n}\nvoid Link(int x)\n{\n\tif(x==S[tp]) return;\n\tif(tp<2) {S[++tp]=x;return;}\n\tint lca=LCA(x,S[tp]);\n\tif(x==S[tp]) {S[++tp]=x;return;}\n\twhile(tp>1 && dep[lca]<=dep[S[tp-1]]) vt[S[tp-1]].push_back(S[tp]),--tp;\n\tif(lca!=S[tp]) vt[lca].push_back(S[tp]),S[tp]=lca;\n\tS[++tp]=x;\n}\nvoid BuildVT()\n{\n\tMatch();\n\tsort(Q+1,Q+Tail+1,cmp);\n\ttp=0;\n\tif(Q[1]) S[++tp]=0;\n\tfor(int i=1;i<=Tail;i++) Link(Q[i]);\n\tfor(;tp>1;--tp) vt[S[tp-1]].push_back(S[tp]);\n\tfor(int i=1;i<=Tail;i++) ++Size[Q[i]];\n}\nint ALL;\nvoid CalMsg(int now,int fa)\n{\n\tALL+=Ask(loc[now],1)-Ask(loc[fa],1);\n\tfor(int i=0;i<vt[now].size();i++) CalMsg(vt[now][i],now),Size[now]+=Size[vt[now][i]];\n}\n\nint GetRank(int now,int fa,int x)\n{\n\tint ret=0;//v*Size[now]>=x+1\n\tif(now)\n\t{\n\t\tint bd=x/Size[now]+1;\n\t\tret+=Ask(loc[now],bd)-Ask(loc[fa],bd);\n\t}\n\tfor(int i=0;i<vt[now].size();i++) ret+=GetRank(vt[now][i],now,x);\n\treturn ret;\n}\n\nint Query(int rnk)\n{\n\tALL=0,CalMsg(0,0);\n\tif(rnk>ALL) return 0; \n\tint L=1,R=5e8;//\u627e\u7b2c rnk \u5927\u7684 \n\tfor(int mid;L<=R;)\n\t{\n\t\tmid=(L+R)>>1;\n\t\t//\u627e>=mid+1 \u4e2a\u6570\u6700\u5c0f\u7684 <rnk \u7684\u6570\n\t\tif(GetRank(0,0,mid)<rnk) R=mid-1;\n\t\telse L=mid+1;\n\t}\n\treturn L;\n}\n\nint main()\n{\n\t//freopen(\"test.txt\",\"r\",stdin); \n\tn=Read(),m=Read();\n\tfor(int i=1;i<=n;i++) cin>>s,Insert(0,0);\n\tBuildAC();\n\tfor(int i=1;i<=tot;i++) ft[Fail[i]].push_back(i);\n\tBuild(0),TCP(0,0);\n\tfor(int i=0;i<=tot;i++) Size[i]=0;\n\tfor(int K;m--;)\n\t{\n\t\tcin>>s,K=Read();\n\t\tBuildVT(); \n\t\tprintf(\"%d\\n\",Query(K));\n\t\tCleanVT(0);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1653365923,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[JRKSJ R4] Salieri \u7684\u9898\u89e3"
    },
    {
        "content": "## P8147 Salieri \u9898\u89e3\n\n### \u9898\u610f\n\u7ed9\u51fa $n$ \u4e2a\u5b57\u7b26\u4e32 $s_i$\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6709\u4e00\u4e2a\u6743\u503c $v_i$\u3002$m$ \u6b21\u8be2\u95ee\u6bcf\u6b21\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ \u548c\u4e00\u4e2a\u5e38\u6570 $k$\u3002\u8bbe $cnt_i$ \u4e3a $s_i$ \u5728 $S$ \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6c42 $cnt_i\\times v_i$ \u7b2c $k$ \u5927\u7684\u503c\u3002\n\n### \u9898\u89e3\n\n\u4e00\u9053\u6bd4\u8f83\u663e\u7136\u7684 AC \u81ea\u52a8\u673a\u9898\u3002\n\n\u9996\u5148\uff0c\u7b54\u6848\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u628a\u8be2\u95ee\u7b2c $k$ \u5927\u7684\u503c\u8f6c\u5316\u4e3a\u8be2\u95ee\u662f\u5426\u6709\u81f3\u5c11 $k$ \u4e2a\u6570\u6bd4\u5f53\u524d\u7b54\u6848 $x$ \u5927\u3002\n\n\u7136\u540e\u8003\u8651 $cnt$ \u7684\u610f\u4e49\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728 AC \u81ea\u52a8\u673a\u4e0a\u5339\u914d\u4e00\u904d\u5b57\u7b26\u4e32 $S$ \uff0c\u5c06 $S$ \u7684\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u626b\u5230\u7684\u8282\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u8bb0 AC \u81ea\u52a8\u673a\u4e0a\u7684\u7b2c $i$ \u53f7\u8282\u70b9\u88ab\u626b\u8fc7\u7684\u6b21\u6570\u4e3a $times_i$ \uff0c\u5219\u5bf9\u4e8e\u8282\u70b9 $i$ \u800c\u8a00\uff0c\u5176 fail \u6811\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u7684 $times$ \u4e4b\u548c\u5c31\u662f\u8282\u70b9 $i$ \u6240\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u5728 $S$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570 $cnt$ \u3002\n\n\u89c2\u5bdf\u5230\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u800c\u8a00\uff0c\u5bf9 $cnt$ \u6709\u5f71\u54cd\u7684\u8282\u70b9\u53ea\u6709 $S$ \u6240\u626b\u8fc7\u7684\u8282\u70b9\uff0c\u53ea\u6709\u8fd9\u4e9b\u8282\u70b9\u5728\u8fd9\u6b21\u8be2\u95ee\u4e2d\u5bf9 $cnt$ \u800c\u8a00\u662f\u6709\u8d21\u732e\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u627e\u5230\u8fd9\u4e9b\u70b9\uff0c\u5bf9 fail \u6811\u5efa\u4e00\u68f5\u865a\u6811\uff0c\u4fbf\u53ef\u4ee5\u7edf\u8ba1\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684 $cnt$ \u3002\n\n\u63a5\u7740\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\uff0c\u5bf9\u4e8e\u865a\u6811\u4e0a\u7684\u4e24\u4e2a\u76f4\u63a5\u8fde\u8fb9\u7684\u8282\u70b9\uff0c\u5176\u5728\u539f\u6811\u4e0a\u7684\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u51fa\u73b0 $cnt$ \u4e00\u5b9a\u90fd\u4e0e\u4e24\u70b9\u4e2d\u6df1\u5ea6\u8f83\u6df1\u7684\u8282\u70b9\u76f8\u540c\uff0c\u5373\u5bf9\u4e8e\u865a\u6811\u4e0a\u641c\u7d22\u5230\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5176\u4e0e\u7236\u8282\u70b9\u8fde\u8fb9\u6240\u8868\u793a\u7684\u4e00\u6bb5\u533a\u95f4\u7684 $cnt$ \u5747\u4e0e\u5176\u76f8\u540c\uff0c\u90a3\u4e48\u4e5f\u5c31\u7b49\u4ef7\u4e8e\u8981\u67e5\u8be2\u7684\u662f\u6811\u4e0a\u7684\u4e00\u6bb5\u6df1\u5ea6\u9012\u589e\u7684\u8def\u5f84\u4e0a\u6240\u5bf9\u5e94\u7684 $v$ \u4e2d\uff0c\u5927\u4e8e\u7b49\u4e8e $\\lceil \\frac{x}{cnt} \\rceil$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u56e0\u6b64\u76f4\u63a5\u628a\u6bcf\u4e2a\u8282\u70b9\u7684 $v$ \u5904\u7406\u51fa\u6765\u540e\u5728 fail \u6811\u4e0a\u5efa\u4e00\u68f5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n### AC \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#define MAXN 500005\n\nusing namespace std;\n\nint n,m,ch[MAXN][4],trie_cnt=0,fail[MAXN],head[MAXN],edge_cnt=0;\n\nint rt[MAXN],nodecnt=0,dfn[MAXN],dfncnt=0,h[MAXN],cnt=0,vistag[MAXN];\n\nint fa[MAXN],dep[MAXN],siz[MAXN],top[MAXN],son[MAXN],stk[MAXN],tp=0;\n\nint sz[MAXN],sz2[MAXN];\n\nchar str[MAXN];\n\nvector <int> v[MAXN],edge[MAXN];\n\nstruct E{\n\tint to,nxt;\n}e[MAXN];\n\nstruct seg{\n\tint lc,rc,val;\n}tree[MAXN*20];\n\nbool cmp(int x,int y) { return dfn[x]<dfn[y]; }\n\nvoid Add_Edge(int x,int y){\n\te[++edge_cnt].to=y;\n\te[edge_cnt].nxt=head[x];\n\thead[x]=edge_cnt;\n}\n\nint modify(int p,int l,int r,int pos){\n\tint tmp=++nodecnt;\n\ttree[tmp]=tree[p];\n\ttree[tmp].val++;\n\tif(l==r) return tmp;\n\tint mid=l+r>>1;\n\tif(pos<=mid) tree[tmp].lc=modify(tree[p].lc,l,mid,pos);\n\telse tree[tmp].rc=modify(tree[p].rc,mid+1,r,pos);\n\treturn tmp;\n}\n\nint query(int rt1,int rt2,int l,int r,int ql,int qr){\n\tif(l>=ql&&r<=qr) return tree[rt2].val-tree[rt1].val;\n\tint mid=l+r>>1,ret=0;\n\tif(mid>=ql) ret+=query(tree[rt1].lc,tree[rt2].lc,l,mid,ql,qr);\n\tif(mid<qr) ret+=query(tree[rt1].rc,tree[rt2].rc,mid+1,r,ql,qr);\n\treturn ret;\n}\n\nvoid insert(char * s,int val){\n\tint now=0,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tif(!ch[now][s[i]-'a']) ch[now][s[i]-'a']=++trie_cnt;\n\t\tnow=ch[now][s[i]-'a'];\n\t}\n\tv[now].push_back(val);\n}\n\nvoid getfail(){\n\tqueue <int> q;\n\tfor(int i=0;i<4;i++) if(ch[0][i]) q.push(ch[0][i]);\n\tint fro;\n\twhile(!q.empty()){\n\t\tfro=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<4;i++){\n\t\t\tif(ch[fro][i]){\n\t\t\t\tfail[ch[fro][i]]=ch[fail[fro]][i];\n\t\t\t\tq.push(ch[fro][i]);\n\t\t\t}\n\t\t\telse ch[fro][i]=ch[fail[fro]][i];\n\t\t}\n\t}\n\tfor(int i=1;i<=trie_cnt;i++) edge[fail[i]].push_back(i);\n}\n\nvoid dfs_fail(int x){\n\trt[x]=rt[fail[x]]; dfn[x]=++dfncnt;\n\tfor(int i : v[x]) rt[x]=modify(rt[x],1,1000,i);\n\tfor(int i : edge[x]) dfs_fail(i);\n}\n\nvoid dfs1(int x,int f,int d){\n\tfa[x]=f; dep[x]=d; siz[x]=1;\n\tfor(int i : edge[x]){\n\t\tdfs1(i,x,d+1);\n\t\tsiz[x]+=siz[i];\n\t\tif(siz[i]>siz[son[x]]) son[x]=i;\n\t}\n}\n\nvoid dfs2(int x,int tp){\n\ttop[x]=tp;\n\tif(son[x]) dfs2(son[x],tp);\n\tfor(int i : edge[x]) if(i^son[x]) dfs2(i,i);\n}\n\nint Lca(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]>dep[top[y]]) x=fa[top[x]];\n\t\telse y=fa[top[y]];\n\t}\n\treturn dep[x]>dep[y]?y:x;\n}\n\nint dfs(int x,int f,int val){\n\tint ret=0;\n\tsz2[x]=sz[x];\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tret+=dfs(e[i].to,x,val);\n\t\tsz2[x]+=sz2[e[i].to];\n\t}\n\tif(x){\n\t\tint tmp=(val-1)/sz2[x]+1;\n\t\tif(tmp<=1000) ret+=query(rt[f],rt[x],1,1000,tmp,1000);\n\t}\n\treturn ret;\n}\n\nbool check(int x,int k) { return dfs(0,0,x)>=k; }\n\nint main(){\n\tcin >> n >> m;\n\tint val,k,l,r,len,mid,ans,vistot=0;\n\twhile(n--){\n\t\tcin >> str >> val;\n\t\tinsert(str,val);\n\t}\n\tgetfail();\n\tdfs_fail(0);\n\tdfs1(0,0,1);\n\tdfs2(0,0);\n\twhile(m--){\n\t\t++vistot;\n\t\tcin >> str >> k;\n\t\tedge_cnt=0;\n\t\tcnt=0;\n\t\tlen=strlen(str);\n\t\tfor(int now=0,i=0;i<len;i++){\n\t\t\tnow=ch[now][str[i]-'a'];\n\t\t\th[++cnt]=now;\n\t\t\tif(vistag[now]==vistot) sz[now]++;\n\t\t\telse sz[now]=1,vistag[now]=vistot;\n\t\t}\n\t\tsort(h+1,h+cnt+1,cmp);\n\t\tstk[tp=1]=0; head[0]=0;\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tif(h[i]==0) continue;\n\t\t\tif(i!=1&&h[i]==h[i-1]) continue;\n\t\t\tl=Lca(stk[tp],h[i]);\n\t\t\tif(l!=stk[tp]){\n\t\t\t\twhile(dfn[l]<dfn[stk[tp-1]]){\n\t\t\t\t\tAdd_Edge(stk[tp-1],stk[tp]);\n\t\t\t\t\ttp--;\n\t\t\t\t}\n\t\t\t\tif(dfn[l]>dfn[stk[tp-1]]){\n\t\t\t\t\thead[l]=0;\n\t\t\t\t\tif(vistag[l]!=vistot) sz[l]=0;\n\t\t\t\t\tAdd_Edge(l,stk[tp]);\n\t\t\t\t\tstk[tp]=l;\n\t\t\t\t}\n\t\t\t\telse Add_Edge(l,stk[tp]),tp--;\n\t\t\t}\n\t\t\thead[h[i]]=0; stk[++tp]=h[i];\n\t\t}\n\t\tfor(int i=1;i<tp;i++) Add_Edge(stk[i],stk[i+1]);\n\t\tif(!check(1,k)){\n\t\t\tcout << 0 << '\\n';\n\t\t\tcontinue;\n\t\t}\n\t\tl=1,r=1e9,ans=114514;\n\t\twhile(l<=r){\n\t\t\tmid=l+r>>1;\n\t\t\tif(check(mid,k)) ans=mid,l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tcout << ans << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1659425788,
        "uid": 525349,
        "name": "Sakura_xyz",
        "ccfLevel": 4,
        "title": "P8147 [JRKSJ R4] Salieri \u9898\u89e3"
    }
]