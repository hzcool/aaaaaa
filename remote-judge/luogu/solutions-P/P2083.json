[
    {
        "content": "dfs\u5927\u6c34\u9898\uff0c\u5f53\u7136\u6ca1\u6709\u8bb0\u5f55\u91cc\u5176\u5b83dalao\u7684\u65b9\u6cd5\u8dd1\u5f97\u5feb\uff0c\u4f46\u662f\u65f6\u9650\u662f1s\uff0cdfs\u5b8c\u7f8eAC\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint n,m,v,zx,zy,ans;\nstruct house{int x,y;}a[1001][1001];\nint dfs(int c,int f,int s,int zs)\n{\n    if(c==zx&&f==zy)return s; //\u5982\u679c\u5230\u8fbe\u7ec8\u70b9\uff0c\u8fd4\u56de\u5f53\u524d\u4f53\u529b\n    if(zs>n*m)return 10000000;//\u5982\u679c\u8d70\u7684\u623f\u95f4\u6570\u5927\u4e8e\u6240\u6709\u7684\u623f\u95f4\u6570\u4f46\u662f\u8fd8\u6ca1\u6709\u627e\u5230\u540c\u5b66\uff0c\u8bf4\u660e\u6709\u73af\uff0c\u76f4\u63a5\u8fd4\u56de\u4e0d\u53ef\u80fd\uff08\u6211\u752810000000\u4ee3\u66ffimpossible\uff09\n    dfs(a[c][f].x,a[c][f].y,s+v*(abs(a[c][f].x-c)),zs+1);//\u5bfb\u627e\u5f53\u524d\u623f\u95f4\u7684\u4eba\u6240\u544a\u8bc9\u7684\u623f\u95f4\n}\nint main()\n{\n    ans=10000000;\n    cin>>n>>m>>v>>zx>>zy;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    cin>>a[i][j].x>>a[i][j].y;//\u8f93\u5165\n    for(int i=1;i<=m;i++)\n    ans=min(dfs(1,i,0,0),ans);//\u627e\u6700\u5c0f\u7684\u7b54\u6848\n    if(ans==10000000)cout<<\"impossible\"<<endl;//\u8981\u662f\u6700\u5c0f\u7b54\u6848\u662f10000000\uff0c\u8bf4\u660e\u80af\u5b9a\u627e\u4e0d\u5230\u90a3\u4e2a\u540c\u5b66\uff0c\u8f93\u51faimpossible\n    else cout<<ans<<endl;//\u5426\u5219\u8f93\u51fa\u7b54\u6848\n}\n```",
        "postTime": 1500600587,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "## \u5410\u69fd\n\n### \u9898\u610f \n\u9898\u610f\u7684\u8868\u8ff0\u771f\u7684\u662f\u76f8\u5f53\u522b\u626d\u554a\u2026\u2026\u53e3\u8bed\u5316\u8fd9\u4e48\u5389\u5bb3\uff0c\u4f1a\u8ba9\u8bed\u6587\u4e0d\u597d\u7684\u540c\u5b66\u4eec\u5bb3\u6015\u7684\u3002\n\n\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\uff0c\u6211\u771f\u7684\u662f\u8bfb\u4e86\u597d\u51e0\u904d\u624d\u4e86\u89e3\u53e5\u5b50\u7684\u542b\u4e49\uff1a\u6bcf\u884c\u4f1a\u6709m**\u5bf9**\u6570\u5b57\uff0c\u8868\u793a\u4e0b\u4e00\u4e2a\u623f\u95f4\u6240\u5728\u7684\u697c\u5c42\u548c\u7f16\u53f7\u3002\n\n### \u6570\u636e\n\n- \u7b2c\u4e00\u6b21\u63d0\u4ea4\uff1a\u4e60\u60ef\u6027\u5730\u8ba4\u4e3a\u201c\u4e0b\u697c\u4e0d\u8017\u4f53\u529b\u201d\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u6ca1\u6709\u53d1\u73b0\u7684\u5f31\u667a\u9519\u8bef\uff0c\u5f97\u523020pt\uff1b\n\n- \u7b2c\u4e8c\u6b21\u63d0\u4ea4\uff1a\u4fee\u590d\u4e86\u201c\u4e0b\u697c\u4e0d\u8017\u4f53\u529b\u201d\u7684bug\uff0c\u6ca1\u6709\u53d1\u73b0\u90a3\u4e2a\u201c\u5f31\u667a\u9519\u8bef\u201d\uff0c\u5f97\u523070pt\uff1b\n\n- \u7b2c\u4e09\u6b21\u63d0\u4ea4\uff1a\u53d1\u73b0\u72b6\u6001\u7684\u4f18\u5148\u5ea6\u5c45\u7136\u88ab\u6211\u5b9a\u4e49\u6210\u4e86\u201c\u697c\u5c42\u5c0f\u7684\u4f18\u5148\u5ea6\u5927\u201d\uff0c\u4fee\u590dbug\uff0c\u5f97\u523090pt\uff1b\n\n- \u7b2c\u56db\u6b21\u63d0\u4ea4\uff1a\u53d1\u73b0\u5224\u5b9a\u7ec8\u70b9\u7684\u6761\u4ef6\u88ab\u5199\u6210\u4e86\u201c\u8be5\u623f\u95f4\u7684\u2018\u4e0b\u4e00\u4e2a\u623f\u95f4\u2018\u2019\u5c31\u662f\u6b64\u623f\u95f4\u201d\uff0c\u6570\u636e\u4e2d\u5b58\u5728\u4e00\u4e2a\u4e0d\u662f\u6700\u7ec8\u7b54\u6848\u7684\u623f\u95f4\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u4fee\u590dbug\uff0cAC\uff1b\n\n- AC\u540e\uff0c\u53d1\u73b0BFS\u4e2d\uff0c\u6dfb\u52a0\u521d\u59cb\u72b6\u6001\u7684for\u5faa\u73af\u91cc\u201ci<=m\u201d\u88ab\u5199\u6210\u4e86\u201ci<m\u201d\uff0c\u4f46\u6570\u636e\u91cc\u5e76\u6ca1\u6709\u201c\u4ece(1,m)\u51fa\u53d1\u4e3a\u6b63\u89e3\u201d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4ee3\u7801\u5c1a\u53efhack\uff08\u9898\u89e3\u7248\u672c\u4ee3\u7801\u5df2\u7ecf\u4fee\u590d\uff09\u3002\n\n### \u505a\u6cd5\n\n\u5e26\u6743\u5e76\u67e5\u96c6\u3001\u6a21\u62df\u3001dfs\u3001\u6700\u77ed\u8def\u2026\u2026\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4f18\u5148\u961f\u5217bfs\u7684\u505a\u6cd5\u3002\n\n# \u5e7f\u641c\u53d8\u5f62\n\n\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u822c\u80fd\u591f\u4fdd\u8bc1\u5f53\u76ee\u6807\u72b6\u6001**\u7b2c\u4e00\u6b21\u88ab\u53d6\u51fa**\u65f6\uff0c\u82b1\u8d39\u5373\u4e3a\u6700\u4f18\u89e3\u3002\n\n\u7136\u800c\u5bf9\u4e8e\u67d0\u4e9b\u72b6\u6001\u8f6c\u79fb\u6709\u7279\u6b8a\u53d8\u5316\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u666e\u901a\u7684FIFO\uff08first in first out\uff09\u961f\u5217\u6709\u65f6\u4f1a\u5e26\u6765\u9519\u8bef\u7684\u7b54\u6848\u3002\n\n### \u666e\u901aBFS\n\n \u666e\u901aBFS\u7684\u72b6\u6001\u7a7a\u95f4\u662f\u4e00\u4e2a\u6240\u6709\u8fb9\u6743\u90fd\u4e3a1\u7684\u56fe\uff0c\u7528FIFO\u961f\u5217\u5b58\u50a8\u72b6\u6001\u5373\u53ef\u3002\n\n### \u53cc\u7aef\u961f\u5217BFS\n\n \u6839\u636e\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u7684\u4ecb\u7ecd\uff0c\u5bf9\u4e8e\u8fb9\u6743\u53ea\u542b1\u548c0\u7684\u56fe\uff0c\u5e94\u5f53\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u5b9e\u73b0\uff1a\u82b1\u8d39\u589e\u957f\u4e3a0\u7684\u52a0\u5165\u961f\u9996\uff0c\u5426\u5219\u52a0\u5165\u961f\u5c3e\u3002\n \n### \u4f18\u5148\u961f\u5217BFS\n\n\u5bf9\u4e8e\u8fb9\u6743\u4e0d\u53ea\u67090/1\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6765\u89e3\u51b3\u3002\u4f46\u5982\u679c\u4f7f\u7528BFS\uff0c\u5c31\u5e94\u5f53\u7528\u4f18\u5148\u961f\u5217\u6765\u5b58\u50a8\u72b6\u6001\uff0c\u4ee4**\u5f53\u524d**\u6700\u4f18\u82b1\u8d39\uff08\u5728\u672c\u9898\u4e2d\u662f\u722c\u697c\u6570\u6700\u5c11\uff09\u4f18\u5148\u5ea6\u6700\u9ad8\uff0c\u8fd9\u6837\u4ecd\u80fd\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u53d6\u51fa\u76ee\u6807\u72b6\u6001\u65f6\uff0c\u82b1\u8d39\u4e3a\u6700\u4f18\u3002\n\n\u4f7f\u7528\u6734\u7d20\u7684BFS\u53ef\u4ee5\u5728O(N^2)\u7684\u65f6\u95f4\u91cc\u5b9e\u73b0\u8fd9\u7c7b\u72b6\u6001\u7a7a\u95f4\u7684\u6c42\u89e3\uff0c\u4f46\u663e\u7136\u4e0d\u9002\u7528\u4e8e\u672c\u9898\u3002\n \n# \u672c\u9898\u89e3\u6cd5\n\n\u672c\u9898\u7531\u4e8e\u5b58\u5728\u697c\u5c42\u8de8\u5ea6\u5e26\u6765\u7684\u4f53\u529b\u6d88\u8017\uff0c\u72b6\u6001\u8f6c\u79fb\u7684\u4ee3\u4ef7\u663e\u7136\u4e0d\u6b620/1\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u7528\u4f18\u5148\u961f\u5217BFS\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cC++STL\u4e2d\u7684\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u662f\u5927\u6839\u5806\uff0c\u6211\u4eec\u5982\u679c\u4e0d\u60f3\u91cd\u65b0\u5b9a\u4e49\uff08\u5218\u6c5d\u4f73\u7684\u300a\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u300b\u4e2d\u6709\u4fee\u6539priority_queue\u4f18\u5148\u7ea7\u7684\u5b9e\u4f8b\uff09\uff0c\u5c31\u8981\u5728\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u65f6\u5019\u4f5c\u53cd\u5411\u7684\u5b9a\u4e49\u3002\n\n\n\n# \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e3+10,maxm=1e2+10;\nbool vis[maxn][maxm];//\u5224\u91cd\u6570\u7ec4 \nint n,m,v,_x,_y;\nstruct rec{\n\tint cnt;//\u603b\u722c\u697c\u6570 \n\tpair<int,int> p;//\u5f53\u524d\u4f4d\u7f6e\uff0c<\u5c42\uff0c\u623f\u95f4> \n};\n\nbool operator < (const rec &a,const rec &b){\n\treturn a.cnt>b.cnt;//\u603b\u722c\u697c\u6570\u8d8a\u5c0f\uff0c\u4f18\u5148\u5ea6\u8d8a\u9ad8 \n}\n\nint flr[maxn][maxm],num[maxn][maxm];//floor number\n\ninline pair<int,int> get_Next(const pair<int,int> &p){//\u83b7\u5f97\u201c\u4e0b\u4e00\u4e2a\u201d\u4f4d\u7f6e \n\tint x=p.first,y=p.second;\n\treturn make_pair(flr[x][y],num[x][y]);\n}\n\npriority_queue<rec>q;//pq\u5b9e\u73b0\u5806 \nint BFS(){\n\tfor(int i=1;i<=m;++i){\n\t\tq.push((rec){0,make_pair(1,i)});//\u9898\u76ee\u4e2d\u8bf4\u660e\u4ece\u201c\u4e00\u697c\u201d\u5f00\u59cb \n\t}\n\twhile(!q.empty()){\n\t\trec tmp=q.top(); q.pop();\n\t\tint x=tmp.p.first,y=tmp.p.second;\n\t\tif(vis[x][y]) continue;\n\t\tvis[x][y]=true;\n\t\tint C=tmp.cnt;\n\t\tpair<int,int> Next=get_Next(tmp.p);\n\t\tif(tmp.p==make_pair(_x,_y)) return C; \n\t\tint del=abs(Next.first-x); \n\t\tq.push((rec){del+C,Next});\n\t}\n\treturn -1;\n}\n\nint main(){\n\tcin>>n>>m>>v>>_x>>_y;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j){\n\t\t\tint a,b; scanf(\"%d%d\",&a,&b);\n\t\t\tflr[i][j]=a,num[i][j]=b;\n\t\t}\n\tint ans=BFS();// ans == -1\uff0c\u5373\u4e0d\u8fde\u901a \n\tif(ans==-1) puts(\"impossible\");\n\telse cout<<ans*v;\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1531389919,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "\u849f\u84bb\u5b66\u5b8c\u5e76\u67e5\u96c6\uff0c\u770b\u5565\u90fd\u662f\u5e76\u67e5\u96c6\u3002\n\n\u4e8e\u662f\u6211\u5c31\u795e\u5947\u7684\u7528\u5e76\u67e5\u96c6\u89e3\u51fa\u4e86\u6b64\u9898\n\n\u601d\u8def\u5c31\u662f\u4ece1\u81f3n*\nm\u626b\u4e00\u5708\uff0c\u5c06\u5f53\u524d\u623f\u95f4\u6240\u5728\u4f4d\u7f6e\u4e0e\u5b83\u6307\u5411\u623f\u95f4merge\u6ce8\u610f\u5fc5\u987b\u628a\u5b83merge\u5230\u5b83\u6307\u5411\u623f\u95f4\u7684\u513f\u5b50\u8282\u70b9\u3002\u6700\u540e\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u540c\u5b66\u5bb6\u6b63\u597d\u662f\u4e00\u4e2a\u6839\u8282\u70b9\n\n\u6837\u4f8bmerge\u540e\u6837\u5b50\u5982\u4e0b\uff0c\u4f46\u6837\u4f8b\u4e2d\u65e0\u6b7b\u5faa\u73af\u60c5\u51b5\uff0c\u8fd9\u9898\u662f\u53ef\u80fd\u51fa\u73b0\u5c0f\u660e\u53cd\u590d\u7ed5\u5708\u7684\u60c5\u51b5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5224\u5b9a\u4e00\u4e0b\u3002\n\n                    2,3\n                 3,3   2,1\n                1,2     1,3\n               3,3       1,1\n                       2,2  3,1\n\u6211\u4eec\u9009\u53d6\u7684\u5b58\u50a8\u65b9\u5f0f\u4e3a\u5e76\u67e5\u96c6\u4e2d\u7684   _\u5efa\u7acb\u8865\u96c6\u6cd5_  \uff0c\u5e76\u67e5\u96c6\u6570\u7ec4\u4e2d1\u81f3m\u4e3a\u7b2c\u4e00\u5c42\uff0cm+1\u81f32*\nm\u4e3a\u7b2c\u4e8c\u5c42\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6240\u4ee5\uff0c\u5e76\u67e5\u96c6\u6570\u7ec4\u8981\u6709100000\u4e2a\n\n\u8fd8\u6709\u6b64\u9898\u4e2d\u5207\u8bb0\u4e0d\u53ef\u7528\u8def\u5f84\u538b\u7f29\uff0c\u4e0d\u7136\u5c31\u65e0\u6cd5\u5b8c\u7f8e\u91cd\u73b0\u627e\u7684\u8fc7\u7a0b\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint b[1005][100][3];\nint bcj[99999999];\nint hp=0,n,m,v,t=0,o=0;\nvoid fget(int x)\n{\n    if (x/m!=bcj[x]/m)hp+=abs(bcj[x]/m-x/m)*v;\n\tif (bcj[x]==x)return;\n\telse fget(bcj[x]);//\u8fd9\u91cc\u662f\u91cd\u73b0\u627e\u7684\u90e8\u5206\uff0c\u53ea\u6bd4\u6807\u51c6\u7684\u627e\u591a\u4e00\u884c\u5bb6HP\n}\nint get(int x)\n{\n\to++;\n\tif (o>n*m) {o=0;return 2147483647;}//\u82e5\u8fdb\u5165\u4e86\u6b7b\u5faa\u73af\uff0c\u8df3\u51fa\n\tif (bcj[x]==x){o=0;return x;}\n\telse return get(bcj[x]);\t//\u5e76\u67e5\u96c6\u6807\u51c6\u627e\u7684\u90e8\u5206\uff0c\u6ce8\u610f\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u54e6\n}\nvoid merge(int x,int y)\n{\n\tbcj[x]=y;//\u4e0d\u8981\u8fde\u63a5\u5230Y\u8282\u70b9\u7684\u6811\u6839\u90e8\u5206\u8981\u8fde\u63a5\u5230\u6700\u4e0b\u9762\n}\nint main()\n{\n\tint i,j,x,y,ans=2147483647,k;\n\tcin>>n>>m>>v>>x>>y;\n\tfor (i=1;i<=n*m;i++)bcj[i]=i;\n\tfor (i=1;i<=n;i++)\n\t for (j=1;j<=m;j++)\n\t cin>>b[i][j][1]>>b[i][j][2];//\u6bcf\u5c42\u7528\u6237\u7684\u63d0\u4f9b\u4fe1\u606f\n\tfor (i=1;i<=n;i++)\n\t  for (j=1;j<=m;j++)\n\t  {\n\t\t  merge((i-1)*m+j,(b[i][j][1]-1)*m+b[i][j][2]);//\u5408\u5e76\u90e8\u5206\uff0c\uff08i-1\uff09*m+j\u4e3a\u5f53\u524d\u7528\u6237\u6240\u5728\u7684i\u5c42\u7b2cj\u95f4\u623f\uff0c\u540e\u9762\u540c\u7406\uff0c\u4e0d\u8fc7\u662f\u6307\u5411\u5f53\u524d\u623f\u95f4\u6307\u5411\u4f4d\u7f6e\n\t  }\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tif (get(i)==(x-1)*m+y)\n\t\t{fget(i);if (hp<ans)ans=hp;hp=0;}//\u82e5\u6839\u8282\u70b9\u4e3a\u540c\u5b66\u5bb6\uff0c\u627e\uff0c\u66ff\u6362\u6700\u5c0f\u503c\n\t}\n\tif (ans==2147483647)cout<<\"impossible\";\n\telse cout<<ans;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\n\u6492\u82b1\u7ed3\u675f",
        "postTime": 1525047564,
        "uid": 47994,
        "name": "5u0i5n11i",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "### \u819c\u62dc\n\u9898\u89e3\u533a\u7684\u5927\u4f6c\u4eec\u8ba9\u6211\u53f9\u4e3a\u89c2\u6b62\u2026\u2026\u672c\u849f\u84bb\u5b9e\u5728\u4f69\u670d\u2026\u2026  \n\n\u5927\u5bb6\u7684\u65b9\u6cd5\u90fd\u975e\u5e38\u597d\u2026\u2026666\u2026\u2026\u849f\u84bb\u8868\u793a\u5df2\u7ecf\u9635\u4ea1\u2026\u2026  \n\n### \u5206\u6790\n\u8a00\u5f52\u6b63\u4f20\u3002  \n\n\u8fd9\u91cc\u4e5f\u662f\u4e00\u4e2a\u7528**\u6700\u77ed\u8def**\u6765\u6c42\u89e3\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u548c\u4e4b\u524d\u90a3\u4f4d\u5927\u4f6c\u7684\u65b9\u6cd5\u6709\u6240\u4e0d\u540c\uff0cTA\u662f\u628a\u7b2c\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u623f\u95f4\u90fd\u5f53\u4f5c\u6e90\u70b9\u8dd1\u4e86\u4e00\u904dspfa\u3002  \n\n\u6b64\u5904\u849f\u84bb\u51a5\u601d\u82e6\u60f3\u4e86\u5f88\u4e45\u53d1\u73b0\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u628a\u8981\u627e\u7684\u4eba\u6240\u5728\u7684\u4f4d\u7f6e\u5f53\u4f5c\u6e90\u70b9\uff0c\u53cd\u5411\u5b58\u8fb9\uff08\u5373\u628a\u4fe1\u606f\u6240\u6307\u5411\u7684\u623f\u95f4\u4e0e\u63d0\u4f9b\u4fe1\u606f\u7684\u623f\u95f4\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8fb9\u7684\u957f\u5ea6\u5373\u4e3a\u5b83\u4eec\u4e24\u4e2a\u623f\u95f4\u7684\u697c\u5c42\u5dee\u4e0e\u6bcf\u5c42\u6240\u6d88\u8017\u7684\u4f53\u529b\u7684\u4e58\u79ef\uff09\uff0c\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\u4e4b\u540e\u518d\u904d\u5386\u6240\u6709\u7b2c\u4e00\u5c42\u623f\u95f4\u5230\u6e90\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002  \n\n\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff08\u5927\u4f6c\u52ff\u55b7\uff09\uff0c\u662f\u628ai\u5c42\u7b2cj\u4e2a\u623f\u95f4\u8f6c\u5316\u4e3a\u7b2c(i-1)\u00b7m+j\u4e2a\u70b9\uff0c\u7c7b\u4f3c\u4e8e\u8ba1\u7b97\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u67d0\u4e2a\u70b9\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u4fbf\u4e8e\u8fdb\u884c\u5b58\u50a8\u3002  \n\n\u8868\u8ff0\u53ef\u80fd\u4e0d\u662f\u592a\u6e05\u695a\uff0c\u8bf7\u89c1\u8c05\u3002\n### \u4ee3\u7801 \uff08c++\uff09\n\u672c\u849f\u84bb\u5f88\u83dc\u2026\u2026\u7801\u98ce\u6e05\u5947\u2026\u2026\u8bf7\u591a\u6d77\u6db5\u2026\u2026\u6709\u9519\u8bef\u8bf7\u6307\u6b63\u2026\u2026  \n\n\u5927\u5bb6\u770b\u5230\u5982\u6b64\u4e11\u964b\u7684\u4ee3\u7801\u4e00\u5b9a\u4e0d\u4f1a\u6284\u7684\u5bf9\u5427\u2026\u2026  \n\n```cpp\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,s,v,x,y,t1,t2,total,head[100001],next[100001],from[100001],to[100001],len[100001],dis[100001];\nbool exist[100001];\n#define no(x,y) (((x)-1)*(m)+(y))\nvoid add(int u,int v,int w)\n{\n\tfrom[++total]=u;\n\tto[total]=v;\n\tlen[total]=w;\n\tnext[total]=head[u];\n\thead[u]=total;\n\treturn;\n}\nvoid spfa(void)\n{\n\tint minn=0x7fffffff;\n\tqueue<int>que;\n\tmemset(dis,0x7f,sizeof(dis));\n\tque.push(s);\n\texist[s]=true;\n\tdis[s]=0;\n\twhile(!que.empty())\n\t{\n\t\tint p=que.front();\n\t\tque.pop();\n\t\texist[p]=false;\n\t\tfor(int i=head[p];i;i=next[i])\n\t\t{\n\t\t\tif(dis[to[i]]>dis[p]+len[i])\n\t\t\t{\n\t\t\t\tdis[to[i]]=dis[p]+len[i];\n\t\t\t\tif(!exist[to[i]])\n\t\t\t\t{\n\t\t\t\t\tque.push(to[i]);\n\t\t\t\t\texist[to[i]]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tminn=min(dis[i],minn);\n\tif(minn<0x7f7f7f7f)\n\t\tprintf(\"%d\",minn);\n\telse\n\t\tprintf(\"impossible\");\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%d%d%d%d\",&n,&m,&v,&x,&y);\n\ts=no(x,y);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tscanf(\"%d%d\",&t1,&t2);\n\t\t\tadd(no(t1,t2),no(i,j),abs(t1-i)*v);\n\t\t}\n\tspfa();\n\treturn 0;\n}\n```",
        "postTime": 1535984404,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u4e3a\u4f55\u8fd9\u9898\u6807\u7b7e\u662f\u641c\u7d22\n\n\u6211\u5199\u7684\uff0cspfa,\u56fe\u8bba\u5566\u5566\u5566\u5566\u5566\u5566\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u6bcf\u4e2a\u623f\u95f4\u7684\u5c0f\u670b\u53cb\u8ddf\u4ed6\u63d0\u4f9b\u4fe1\u606f\u7684\u4eba\u94fe\u6761\u8fb9\uff0clen=\u697c\u68af\u5c42\u6570\u5dee\\*v\uff08\u5f53\u7136\u662f\u5355\u5411\u7684\u54e6\uff09\n\n\u540e\u6ce1\u6ce1spfa(\u76f4\u63a5dfs\u6548\u7387\u9ad8\u4e9b\u3002\u4f46\u4e07\u4e00\u6709\u73af\u5c3c\uff1f\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define inf 999999999LL\nusing namespace std;\nstruct node {int x,y;};\nnode a[100001];\nqueue<int>q;\nint n,m,v,xx,yy,aa,k=0,tot,ans=inf;\nint la[100001],ne[100001],ed[100001],dis[100001],le[100001];\nbool f[100001];\nint i,j;\nvoid add(int x,int y)\n{\n    tot++;\n    ed[tot]=y;\n    le[tot]=fabs(y/m-x/m)*v;\n    ne[tot]=la[x];\n        la[x]=tot;\n}        \nvoid spfa(int s)\n{\n    int i;\n    for(i=1;i<=n*m;i++)dis[i]=inf;\n    dis[s]=0;f[s]=true;\n    q.push(s);\n    while(q.size()>0)\n    {\n        int t=q.front();\n        f[t]=false;\n        q.pop();\n        int x=la[t];\n        while(x>0)\n        {\n            int y=ed[x];\n            if(dis[y]>dis[t]+le[x])\n            {\n                dis[y]=dis[t]+le[x];\n                if(f[y]==false)\n                {\n                    q.push(y);\n                    f[y]=true;\n                }\n            }\n            x=ne[x];\n        }\n    }\n}\n    int main()\n{\n    cin>>n>>m>>v>>xx>>yy;\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=m;j++)\n        {\n            k++;\n            scanf(\"%d%d\",&a[k].x,&a[k].y);\n            add(k,m*(a[k].x-1)+a[k].y);\n            }\n          }\n  for(i=1;i<=m;i++)\n  {\n      spfa(i);\n          ans=min(ans,dis[(xx-1)*m+yy]);\n  }\n  if(ans==inf)printf(\"impossible\");\n  else cout<<ans;\n}\n\n```",
        "postTime": 1478944603,
        "uid": 21162,
        "name": "SteinsGate0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u5927\u4f6c\u4e00\u76f4\u5728\u5f3a\u8c03\u5224\u73af\uff1f\u800c\u4e14\u526a\u679d\u4e5f\u5f88\u8ff7\uff1f\uff08\u5927\u96fe\n\n\u7528\u56de\u6eaf\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u4e86\u554a\uff0c\u800c\u4e14\u4e5f\u4e0d\u7528\u5728\u51e0\u4e2a\u70b9\u4e4b\u95f4\u7ed5\u6765\u7ed5\u53bb\u76f4\u5230\u8d85\u51fa\u9650\u5236\u3002\n\n\u6211\u7684\u601d\u8def\u6bd4\u8f83\u6e05\u5947\uff0c\u4e5f\u6ca1\u6709\u5927\u4f6c\u7c7b\u4f3c\u601d\u8def\u5199\u8fc7\u9898\u89e3\u3002\n\n\u6765\u770b\u770b\u6211\u4eec\u7684\u601d\u8def\uff1a\u7528\u4e00\u4e2acheck\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e00\u6b21dfs\u7684\u72b6\u6001\u3002\u5982\u679c\u4ece\u540c\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u6709\u4e00\u4e2a\u70b9\u88ab\u641c\u5230\u4e24\u6b21\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u51fa\u53d1\u70b9\u4f1a\u4ea7\u751f\u73af\uff0c\u7ed3\u675f\u8fd9\u6b21dfs\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define _for(i,a,b) for(register int (i)=(a);(i)<=(b);(i)++)\n#define For(i,a,b) for(register int (i)=(a);(i)>=(b);(i)--)\n#define INF 0x7fffffff\n#define il inline\n#define rg register\nusing namespace std;\ninline long long read(){\n\tlong long num=0;int z=1;char c=getchar();\n\tif(c=='-') z=-1;\n\twhile((c<'0'||c>'9')&&c!='-') c=getchar();\n\tif(c=='-') z=-1,c=getchar();\n\twhile(c>='0'&&c<='9') num=(num<<1)+(num<<3)+(c^48),c=getchar();\n\treturn z*num;\n}//\u5feb\u8bfb\u677f\u5b50\nint n,m,v,x,y;\nint mapl[1005][105],mapr[1005][105];\nint f[1005][105];\nbool check[1005][105];//\u8bb0\u5f55dfs\u4e2d\u7684\u72b6\u6001\nint ans=INF;//\u7b54\u6848\u5148\u8bbe\u4e3a\u6700\u5927\u503c\nil void dfs(int sum,int l,int r){\n\tif(l==x&&r==y){\n\t\tans=min(ans,sum);//\u5982\u679c\u5230\u4e86\uff0c\u90a3\u4e48\u5c31\u7edf\u8ba1\u7b54\u6848\uff0c\u9000\u51fa\u3002\n\t\treturn ;\n\t}\n\tif(check[mapl[l][r]][mapr[l][r]]) return ;//\u5224\u65ad\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u641c\u4e86\u4e24\u6b21\uff0c\u90a3\u4e48\u5c31\u6709\u4e86\u73af\uff0c\u9000\u51fa\u3002\n\tcheck[mapl[l][r]][mapr[l][r]]=true;//\u5c06\u5176\u6807\u8bb0\u4e3a\u5df2\u8d70\u8fc7\n\tdfs(sum+(mapl[l][r]>l?mapl[l][r]-l:l-mapl[l][r])*v,mapl[l][r],mapr[l][r]);//\u641c\u7d22\u4e0b\u4e00\u6237\n\tcheck[mapl[l][r]][mapr[l][r]]=false;//\u56de\u6eaf\u524d\u6062\u590d\u539f\u72b6\u6001\n\treturn ;\n}\nint main(){\n\tn=read(),m=read(),v=read(),x=read(),y=read();\n\tif(x==1) return printf(\"0\\n\"),0;\n\t_for(i,1,n) _for(j,1,m) mapl[i][j]=read(),mapr[i][j]=read();\n\t_for(i,1,m){\n\t\tmemset(check,false,sizeof(check));//\u8fd8\u539f\u72b6\u6001\n\t\tdfs(0,1,i);//dfs\n\t}\n\tif(ans==INF) return printf(\"impossible\\n\"),0;//\u7279\u5224\uff0c\u5047\u5982\u5230\u4e0d\u4e86\uff0c\u5373ans\u6ca1\u6709\u88ab\u66f4\u6539\uff0c\u8f93\u51faimpossible\n\treturn printf(\"%d\\n\",ans),0;\n   ^_^\n}\n```\n\n\u671b\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7^_^\u3002\n",
        "postTime": 1581777363,
        "uid": 231938,
        "name": "Chanter",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2083 \u3010\u627e\u4eba\u3011"
    },
    {
        "content": "## **\u9898\u76ee**\n[ Click here](https://www.luogu.org/problemnew/show/P2083)\n## **\u601d\u8def**\n\u5927\u6c34\u9898\u7206\u641c\uff0c\u7528DFS\u7b80\u5355\u660e\u4e86\u3002   \n\u4ece\u7b2c\u4e00\u5c42\u6bcf\u4e00\u4e2a\u623f\u95f4\u90fd\u641c\u4e00\u904d\uff0c\u8bb0\u5f55\u6700\u5c0f\u7684\u7b54\u6848\u3002   \n\u6ce8\u610f\u6bcf\u4e00\u6b21DFS\u524d\u90fd\u8981\u521d\u59cb\u5316\u3002   \n\u5f53\u7136\uff0c\u4e3a\u4e86\u4e0d\u8ba9\u4ee3\u7801\u7206\u6808\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u662f\u5426\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u7528step\u8bb0\u5f55\u5f53\u524d\u8d70\u4e86\u51e0\u6b65\uff0c\u5982\u679cstep\u5927\u4e8en*m\u7684\u8bdd\u5c31\u8bf4\u660e\u6709\u5faa\u73af\u4e86\uff0c\u5c31\u7acb\u523b\u8fd4\u56de\u4e00\u4e2a\u6781\u5927\u503c\uff0c\u9000\u51faDFS\u3002\n## **\u4ee3\u7801**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,v,ex,ey,ans,a[1111][111],b[1111][111],anss=1<<30;\n//anss\u8bb0\u5f55\u6700\u540e\u7684\u7b54\u6848\uff0c\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u6781\u5927\u503c\uff0cans\u4e3a\u4ece\u7b2c\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u623f\u95f4\u51fa\u53d1\u5230\u7ec8\u70b9\u7684\u82b1\u8d39\n//a[i][j]\u8868\u793a\u7b2ci\u5c42\u7b2cj\u4e2a\u623f\u95f4\u63d0\u4f9b\u7684\u4e0b\u4e00\u4e2a\u623f\u95f4\u5728\u7b2c\u51e0\u5c42\n//b[i][j]\u8868\u793a\u7b2ci\u5c42\u7b2cj\u4e2a\u623f\u95f4\u63d0\u4f9b\u7684\u4e0b\u4e00\u4e2a\u623f\u95f4\u5728\u90a3\u4e00\u5c42\u7b2c\u51e0\u4e2a\u623f\u95f4\nbool f=0;//f\u8868\u793a\u662f\u5426\u627e\u5230\u4e86\u4e00\u4e2a\u53ef\u884c\u7684\u8def\u7ebf\nint dfs(int x,int y,int step){\n    if(x==ex&&y==ey) {\n        f=1; return ans;//\u5982\u679c\u5230\u7ec8\u70b9\u4e86\u5c31\u8fd4\u56de\u5f53\u524d\u7684\u82b1\u8d39\u3002\n    }\n    if(step>n*m) return 1<<30;//\u5982\u679c\u6709\u5faa\u73af\uff0c\u8fd9\u91cc\u8d70\u4e0d\u901a\u5c31\u8fd4\u56de\u6781\u5927\u503c\n    ans+=abs(a[x][y]-x)*v;//ans\u52a0\u4e0a\u5230\u4e0b\u4e00\u4e2a\u623f\u95f4\u82b1\u8d39\u7684\u503c\n    dfs(a[x][y],b[x][y],step+1);//\u5411\u4e0b\u641c\u7d22\n}\nint main(){\n    cin>>n>>m>>v>>ex>>ey;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n      scanf(\"%d%d\",&a[i][j],&b[i][j]);//\u8f93\u5165\n    for(int i=1;i<=m;i++){//\u679a\u4e3e\u7b2c\u4e00\u5c42\u6bcf\u4e2a\u623f\u95f4\uff0c\u8bb0\u5f55\u4ece\u8fd9\u4e2a\u623f\u95f4\u5230\u7ec8\u70b9\u7684\u82b1\u8d39\n        ans=0;\n        anss=min(anss,dfs(1,i,0));//\u627e\u51fa\u6700\u5c0f\u503c\n    }\n    if(!f) printf(\"impossible\\n\");\n    else printf(\"%d\\n\",anss);\n    return 0;\n}\n```",
        "postTime": 1547982685,
        "uid": 47757,
        "name": "dunko",
        "ccfLevel": 6,
        "title": "\u627e\u4eba"
    }
]