[
    {
        "content": "\u672c\u7bc7\u4ee3\u7801\u80fd\u8fc7(\u7ecf\u8fc7\u51cf\u5c0fvector\u7684\u6570\u91cf\u53d6\u5f97\u8db3\u591f\u9ad8\u7684\u6548\u7387)2019.11.08  \n\u6b27\u62c9\u56de\u8def\u62c6\u73af  \n\u8003\u8651\u5728\u5165\u6808\u7684\u65f6\u5019\u68c0\u67e5\u8be5\u5143\u7d20\u662f\u5426\u5728\u6808\u4e2d,\u82e5\u5728,\u8868\u793a\u6210\u73af\u3002  \n\u6ce8\u610f:\u7531\u4e8e\u5e38\u89c1\u7684\u6c42\u6b27\u62c9\u8def\u7684\u7a0b\u5e8f\u7ed9\u51fa\u7684\u7ed3\u5c3e\u90fd\u4e0d\u662f\u5f00\u5934\u70b9,\u6240\u4ee5\u5728dfs\u8c03\u7528\u540e\u6808\u91cc\u9762\u8fd8\u5269\u4e0b\u4e00\u4e2a\u73af,\u8f93\u51fa\u5373\u53ef\u3002  \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#define itra vector<int>::iterator\n\nusing namespace std;\n\nconst int N = 123456, M = 1234567;\nint head[N], deg[N], ver[M<<1], vis[M<<1], nex[M<<1], tot;\ninline void addedge(int u, int v) {\n\tver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\n}\n\nvector<int> va[N/10];\nvector<int> sta;\n\n\nint instack[N], vist[N], tt;\nvoid dfs(int cur) {\n\tvist[cur] = 1;\n\tfor(int i = head[cur]; ~i; i = nex[i])\n\t\tif(!vis[i]) {\n\t\t\tvis[i] = vis[i^1] = 1;\n\t\t\thead[cur] = nex[i];\n\t\t\tdfs(ver[i]);\n\t\t\tif(instack[ver[i]]) {\n\t\t\t\tva[tt].push_back(ver[i]);\n\t\t\t\twhile(sta.back() != ver[i]) {\n\t\t\t\t\tva[tt].push_back(sta.back());\n\t\t\t\t\tinstack[sta.back()] = 0;\n\t\t\t\t\tsta.pop_back();\n\t\t\t\t}\n\t\t\t\tva[tt].push_back(ver[i]);\n\t\t\t\t++tt;\n\t\t\t} else {\n\t\t\t\tsta.push_back(ver[i]);\n\t\t\t\tinstack[ver[i]] = 1;\n\t\t\t}\n\t\t}\n}\n\nint main() {\n\tmemset(head, -1, sizeof(head));\n\tint n, m, u, v, f, t, flg = 1;\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 1; i <= m; ++i) {\n\t\tscanf(\"%d %d %d %d\", &u, &v, &f, &t);\n\t\tif(f^t) {\n\t\t\taddedge(u, v); addedge(v, u);\n\t\t\t++deg[u]; ++deg[v];\n\t\t}\n\t}\n \tfor(int i = 1; i <= n; ++i) {\n \t\tif(deg[i]%2) {\n \t\t\tflg = 0;\n \t\t\tbreak;\n \t\t}\n \t}\n \tif(!flg) {\n \t\tprintf(\"NIE\\n\");\n \t\treturn 0;\n\t }\n\t for(int i = 1; i <= n; ++i) \n\t \tif(!vist[i]) {\n\t \t\tdfs(i);\n\t \t\tif(instack[i]) {\n\t \t\t\tva[tt].push_back(i);\n\t \t\t\twhile(!sta.empty()) {\n\t \t\t\t\tva[tt].push_back(sta.back());\n\t \t\t\t\tinstack[sta.back()] = 0;\n\t \t\t\t\tsta.pop_back();\n\t \t\t\t}\n\t \t\t\t++tt;\n\t \t\t}\n\t \t}\n\t printf(\"%d\\n\", tt);\n\t for(int i = 0; i < tt; ++i) {\n\t \tprintf(\"%d \", va[i].size()-1);\n\t \tfor(itra it = va[i].begin(); it != va[i].end(); ++it) {\n\t \t\tprintf(\"%d \", (*it));\n\t \t}\n\t \tprintf(\"\\n\");\n\t }\n\treturn 0;\n} \n```\n",
        "postTime": 1573228764,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3520 \u3010[POI2011]SMI-Garbage\u3011"
    },
    {
        "content": "### 2021/10/18 \u66f4\u65b0\n\n\u9898\u89e3\u88ab\u4ebahack\u4e86\uff0c\u4e00\u5e74\u540e\u8fc7\u6765\u8865\u3002\n\n\u8fd9\u91cc\u611f\u8c22 @fzj2007 \u63d0\u4f9b\u7684hack\u6570\u636e\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u5df2\u901a\u8fc7LOJ\u7684\u5f3a\u6570\u636e\u548chack\u6570\u636e\u3002\n\n**\u4e0b\u9762\u90e8\u5206\u66f4\u65b0\u7684\u5730\u65b9\u90fd\u7528\u7c97\u4f53\u8868\u793a**\n\n### \u9898\u76ee\u5206\u6790\n \n\u603b\u5171\u6709m\u6761\u8fb9\uff0c\u8d70\u8fc7\u4e00\u6761\u8fb9\u5c31\u662f\u4fee\u6539\u8be5\u8fb9\u6743\u503c\u3002\n \n\u6bcf\u6b21\u8981\u6c42\u8d70\u8fc7\u4e00\u4e2a\u7b80\u5355\u8fd8\u4e0a\u7684\u8fb9\uff0c\u5373\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\u8d70\u8fc7\u8be5\u70b9\u5b58\u5728\u7684\u8054\u901a\u56fe\uff08\u539f\u56fe\u53ef\u80fd\u4e0d\u8054\u901a\uff09\uff0c\u521d\u59cb\u6743\u503c\u4e0e\u6700\u7ec8\u6743\u503c\u76f8\u7b49\u7684\u8fb9\u8d70\u5076\u6570\u6b21\uff0c\u4e0d\u76f8\u7b49\u7684\u8d70\u5947\u6570\u6b21\u3002\n \n\u4e3a\u4ec0\u4e48\u7528\u6b27\u62c9\u56de\u8def\uff1f\n \n- \u6b27\u62c9\u56de\u8def\u7684\u5b9a\u4e49\uff1a\u5b58\u5728\u4e00\u6761\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\uff0c\u6070\u597d\u4e0d\u91cd\u4e0d\u6f0f\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\uff08\u70b9\u53ef\u91cd\u590d\uff09\uff0c\u6700\u7ec8\u56de\u5230\u8be5\u70b9\u3002\n \n- \u6b27\u62c9\u56fe\u7684\u5b9a\u4e49\uff1a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u56fe\u3002\n \n- \u6b27\u62c9\u56fe\u7684\u5224\u5b9a\uff1a\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u4e3a\u5076\u6570\u3002\n \n\u901a\u8fc7\u4ee5\u4e0a\u5b9a\u4e49\u548c\u5224\u5b9a\uff0c\u53ef\u4ee5\u8003\u8651\u6743\u503c\u4e0d\u76f8\u7b49\u7684\u8fb9\u901a\u8fc7\u627e\u6b27\u62c9\u56de\u8def\u7684\u65b9\u6cd5\u6765\u3002\n \n\u6743\u503c\u76f8\u7b49\u7684\u8fb9\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u5fc5\u987b\u8d70\u5076\u6570\u6b21\uff0c\u76f8\u5f53\u4e8e\u62c6\u6210\u4e86\u4e24\u6761\u8fb9\uff0c\u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u4f7f\u5f97\u6539\u8fb9\u5bf9\u8fde\u63a5\u7684\u4e24\u70b9\u5ea6\u6570\u52a0\u4e86 +2\uff0c\u6839\u636e\u6b27\u62c9\u56de\u8def\u7684\u5b9a\u4e49\uff0c\u5220\u53bb\u8fd9\u6761\u8fb9\u5373\u5bf9\u4e24\u70b9\u5ea6\u6570 -2\uff0c\u8fd8\u4f7f\u5f97\u56fe\u6210\u4e3a\u6b27\u62c9\u56fe\u4e86\uff08\u53ea\u7528\u8d70\u5269\u4e0b\u7684\u8fb9\u4e00\u6b21\uff09\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u6b27\u62c9\u56de\u8def\u4e86\u3002\n \n\u539f\u4ee3\u7801\u6ca1\u6709\u5904\u7406**\u4e0d\u7ecf\u8fc7\u91cd\u590d\u8fb9\u6216\u8d77\u70b9\u4ee5\u5916\u7ed3\u70b9\u7684\u73af**\uff0c\u5373\u6bcf\u6b21**\u53ea\u80fd\u8d70\u4ee5\u8d77\u70b9\u5f00\u59cb\u7684\u73af**\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5**\u518d\u5f00\u4e00\u4e2a\u6808\u4e13\u95e8\u6765\u5b58\u5f53\u524d\u7684\u6b27\u62c9\u56de\u8def**\uff0c\u5982\u679c\u5f53\u524d\u7684\u70b9\u5df2\u7ecf\u5728\u6808\u4e2d\uff0c\u8bf4\u660e\u5df2\u7ecf\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u5c06\u8be5\u73af\u50a8\u5b58\u7b54\u6848\u5e76\u5f39\u51fa\u3002\n\n### \u4ee3\u7801\u7ec6\u8282\u5904\u7406\n\n\u6211\u539f\u6765\u7684\u4ee3\u7801\u662f\u7528\u6808\u6a21\u62df dfs \u7684\u641c\u7d22\u548c\u56de\u6eaf\u8fc7\u7a0b\u3002\n\n\u6bcf\u6b21\u53d6\u6808\u9876\u5143\u7d20\uff0c\u904d\u5386\u5176**\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u8fb9**\uff0c\u5c06\u51fa\u70b9\u5b58\u5165\u6808\u4e2d\u3002\n\n\u904d\u5386\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u8fb9\u540e\u8981\u5c06\u94fe\u5934\u90fd\u8981**\u6307\u5411\u4e0b\u4e00\u6761\u672a\u904d\u5386\u7684\u8fb9**\uff0c\u4ee5\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u5982\u679c\u6ca1\u6709\u53ef\u904d\u5386\u7684\u51fa\u8fb9\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u56de\u6eaf\uff0c\u5c06\u8be5\u70b9\u5f39\u51fa\u5e76\u5b58\u5165\u7b54\u6848\u6808\u4e2d\uff0c\u6b64\u65f6\u7b54\u6848\u6808\u5b58\u5165\u7684\u5373\u662f**\u4ee5 $s$ \u4e3a\u8d77\u70b9\u80fd\u904d\u5386\u5b8c\u6240\u6709\u53ef\u5230\u8fbe\u7684\u8fb9\u7684\u6b27\u62c9\u56de\u8def\uff0c\u53ef\u80fd\u5305\u542b\u9664\u8d77\u70b9\u4ee5\u5916\u7684\u73af**\uff0c\u6240\u4ee5\u5b58\u5165\u65f6\u8981\u5224\u65ad\u662f\u5426\u5f62\u6210\u73af\uff0c\u6210\u73af\u65f6\u5c06\u7b54\u6848\u5904\u7406\u3002\n\n### \u4ee3\u7801\n\n\u4ee5\u4e0b\u4ee3\u7801\u7701\u53bb\u6a21\u677f\u548c\u4e00\u4e9b\u7b80\u5355\u7684\u5b8f\u3002\n\n~~\u5e94\u8be5\u6ca1\u95ee\u9898\u5427~~\n\n\n~~~cpp\nconst ll maxn=1e5+5,maxm=1e6+5;\n\nll n,m,cnt=1,head[maxn];\nll deg[maxn];\n\nll tot;\nvector<ll> ans[maxn];\n\nll stk[maxm],tp;\nll stkans[maxm],tpans;//\u5b58\u6b27\u62c9\u56de\u8def\u7684\u7b54\u6848\u6808\nbool instk[maxm]\uff1b//\u6807\u8bb0\u662f\u5426\u5728\u7b54\u6848\u6808\u4e2d\nbool vis[maxm];\n\nstruct edge{\n\tll to,next,vis;\n}e[maxm<<1];\n\nvoid add(ll x,ll y){\n\te[++cnt]=(edge){y,head[x],0};\n\thead[x]=cnt;\n\tdeg[x]++;\n}\n\n#define failed return puts(\"NIE\"),0\n\nvoid euler(ll s){\n\tstk[tp=1]=s;\n\tfor(ll x,i;tp;){\n\t\tx=stk[tp],i=head[x];\n\t\twhile(i&&e[i].vis) \n\t\t\thead[x]=i=e[i].next;\n\t\tif(i){\n\t\t\tstk[++tp]=e[i].to;\n\t\t\te[i].vis=e[i^1].vis=true;\n\t\t\thead[x]=e[i].next;//\u94fe\u5934\u6307\u5411\u4e0b\u4e00\u6761\u8fb9\n\t\t}\n\t\telse{\n\t\t\ttp--;\n\t\t\tvis[x]=true;\n\t\t\tif(instk[x]){\n\t\t\t\tans[++tot].push_back(x);\n\t\t\t\twhile(tpans&&stkans[tpans]!=x)\n\t\t\t\t\tans[tot].push_back(stkans[tpans]),\n\t\t\t\t\tinstk[stkans[tpans--]]=false;\n\t\t\t\tans[tot].push_back(x);\n\t\t\t}\n\t\t\telse instk[stkans[++tpans]=x]=true;\n\t\t}\n\t}\n}\n\nvoid output(){\n\tprintf(\"%lld\\n\",tot);\n\tFOR(i,1,tot){\n\t\tprintf(\"%lld\\n\",ans[i].size()-1);\n\t\tfor(auto x:ans[i]) printf(\"%lld \",x);\n\t\tputs(\"\");\n\t}\n}\n\nint main(){\n\tn=read(),m=read();\n\tfor(ll x,y,o,p;m;m--){\n\t\tx=read(),y=read(),o=read(),p=read();\n\t\tif(o^p) add(x,y),add(y,x);\n\t}\n\tFOR(i,1,n) if(deg[i]&1) failed;\n\tFOR(i,1,n) if(!vis[i]) euler(i);\n\toutput();\n\treturn 0;\n}\n~~~\n\n### \u5982\u679c\u6709\u9519\u8bef\u7684\u5730\u65b9\uff0c\u8bf7\u79c1\u4fe1\u6211",
        "postTime": 1606010528,
        "uid": 97254,
        "name": "big_turkey",
        "ccfLevel": 7,
        "title": "P3520 [POI2011]SMI-Garbage \u9898\u89e3"
    }
]