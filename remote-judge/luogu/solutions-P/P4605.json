[
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898long double\u5b8c\u5168\u5c31\u53ef\u4ee5\u907f\u514d\u626b\u63cf\u7ebf\u65f6\u88ab\u5361\u7cbe\u5ea6\u7684\u2026\u2026\n\n\u4f46\u662f\u8fd9\u9053\u9898\u8fd8\u662f\u907f\u514d\u4e0d\u4e86\u88ab\u5361\u7cbe\u5ea6\u7684\u4e8b\u5b9e\uff0c\u4f46\u662f\u95ee\u9898\u4e0d\u662f\u51fa\u5728\u626b\u63cf\u7ebf\u4e0a\u800c\u662f\u51fa\u5728\u540e\u8fb9\u7684\u5b9e\u6570\u8ba1\u7b97\u4e0a\u2026\u2026\n\n\u8fd8\u662f\u975e\u5e38\u8003\u9a8c\u4eba\u7c7b\u667a\u6167\u7684\u7cbe\u5ea6\u8bef\u5dee\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u770b\u5982\u4f55\u548c\u6807\u7a0b\u9519\u7684\u4e00\u6837\u5427~\n______________________\n\n## \u672c\u9898\u9898\u89e3\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u5c06\u8fd9\u4e2a\u6fc0\u5149\u53d1\u5c04\u8f66\u4ece\u8d1f\u65e0\u7a77\u8fdc\u5904\u5f00\u5411\u6b63\u65e0\u7a77\u8fdc\u5904\uff0c\u7136\u540e\u53d6\u67d0\u4e00\u4e2a\u65f6\u523b\u7167\u5c04\u957f\u5ea6\u7684\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u552f\u4e00\u8981\u505a\u7684\u5c31\u662f\u5feb\u901f\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6ce8\u610f\u5230\u7ebf\u6bb5\u662f\u4e0d\u4ea4\u7684\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5957\u8def\u5c31\u662f\u5bf9\u4e8e\u4e00\u5806\u4e92\u4e0d\u76f8\u4ea4\u7684\u51e0\u4f55\u56fe\u5f62\uff0c\u6211\u4eec\u968f\u4fbf\u7684\u53d6\u4e00\u6761\u626b\u63cf\u7ebf\u5207\u8fc7\u53bb\uff0c\u4f1a\u622a\u51fa\u4e00\u5806\u70b9\u6765\uff0c\u8fd9\u4e9b\u70b9\u7684\u5750\u6807\u53ef\u80fd\u4f1a\u6539\u53d8\uff0c\u4f46\u662f\u56e0\u4e3a\u56fe\u5f62\u4e4b\u95f4\u6ca1\u6709\u4ea4\u70b9\uff0c\u56e0\u6b64\u76f8\u5bf9\u6b21\u5e8f\u6c38\u8fdc\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u626b\u63cf\u7ebf+set\u7684\u65b9\u5f0f\u53bb\u7ef4\u62a4\u4e00\u7cfb\u5217\u4e0d\u4ea4\u7684\u51e0\u4f55\u56fe\u5f62(\u540c\u7406\u4e92\u4e0d\u76f8\u4ea4\u7684\u5706\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6280\u5de7\u53bb\u7ef4\u62a4)\n\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\u6211\u4eec\u4f1a\u78b0\u89c1\u4e00\u4e2a\u975e\u5e38\u4ee4\u4eba\u96be\u53d7\u7684\u95ee\u9898\uff0c\u6211\u4eec\u8981\u659c\u7740\u505a\u626b\u63cf\u7ebf\uff01\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u5750\u6807\u7cfb\u5e73\u79fb/\u65cb\u8f6c\n\n\u5750\u6807\u7cfb\u5e73\u79fb\u5e94\u8be5\u5927\u5bb6\u90fd\u4f1a\u5427\u2026\u2026\n\n\u5047\u5982\u8bf4\u5e0c\u671b\u4f7f$(x_0,y_0)$\u6210\u4e3a\u65b0\u5750\u6807\u7cfb\u7684\u539f\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u65e7\u5750\u6807\u7cfb\u4e2d\u7684\u6240\u6709\u5411\u91cf\u51cf\u53bb\u4e00\u4e2a\u5411\u91cf$(x_0,y_0)$\u5c31\u53ef\u4ee5\u5b8c\u6210\u53d8\u6362\u4e86\n\n\u90a3\u4e48\u5173\u952e\u662f\u5750\u6807\u7cfb\u65cb\u8f6c\n\n\u4e8b\u5b9e\u4e0a\u539f\u6765\u7684\u6807\u51c6\u5750\u6807\u7cfb\u4e0b\u7684\u4e00\u4e2a\u5411\u91cf$(x_{0},y_{0})$\u53ef\u4ee5\u91cd\u65b0\u5199\u6210\u8fd9\u6837\u7684\u5f62\u5f0f\n\n(\u6211\u4e0d\u662f\u5f88\u4f1a\u5728luogu\u4e0a\u6253\u77e9\u9635\uff0c\u6240\u4ee5\u8bf7\u5404\u4f4djulao\u89c1\u8c05)\n\n$(x_{0},y_{0})$\u4e58\u4e0a\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\n\n\u90a3\u4e48\u5355\u4f4d\u77e9\u9635\u53ef\u4ee5\u770b\u6210$(1,0),(0,1)$\u8fd9\u4e24\u4e2a\u57fa\u5411\u91cf\u7ad6\u7740\u6446\u4e86\u4e24\u5217\u7684\u7ed3\u679c\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5750\u6807\u7cfb\u65cb\u8f6c\u7b49\u4ef7\u4e8e\u5411\u91cf\u6362\u57fa\u2026\u2026\n\n\u56e0\u6b64\u5047\u5982\u6211\u4eec\u73b0\u5728\u60f3\u8ba9\u5411\u91cf$(x_{1},y_{1})$\u6210\u4e3a\u65b0\u5750\u6807\u7cfb\u7684x\u8f74\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5bfb\u627e\u4e00\u4e2a\u548c\u8fd9\u4e2a\u5411\u91cf\u5782\u76f4\u7684\u5411\u91cf\uff0c(\u663e\u7136\u662f$(-y_{1},x_{1})$\u4e86)\u7136\u540e\u628a\u8fd9\u4e24\u4e2a\u5411\u91cf\u7ad6\u76f4\u62fc\u8d77\u6765\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u77e9\u9635\n\n\u7136\u540e\u76f4\u63a5\u7ed9\u6240\u6709\u9700\u8981\u53d8\u6362\u7684\u5411\u91cf\u5168\u90e8\u53f3\u4e58\u4e0a\u8fd9\u4e2a\u77e9\u9635\u5c31\u53ef\u4ee5\u5b8c\u6210\u6362\u57fa\u64cd\u4f5c\u4e86\n\n\u95ee\u9898\u6765\u4e86\u6211\u4eec\u4f1a\u53d1\u73b0\u65b0\u7684\u5750\u6807\u7cfb\u7684\u5355\u4f4d\u957f\u5ea6\u662f\u57fa\u5411\u91cf\u7684\u6a21\u957f\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ed9\u53d8\u6362\u4e4b\u540e\u7684\u5750\u6807\u5168\u90e8\u9664\u4e00\u4e2a\u539f\u6765\u5411\u91cf\u7684\u6a21\u957f\u5b8c\u6210\u53d8\u6362\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u7ed9\u6240\u6709\u5411\u91cf\u91cd\u65b0\u6362\u4e86\u4e00\u7ec4\u6a21\u957f\u4e3a1\u7684\u57fa\u4e86\n_________________\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u628a\u5750\u6807\u7cfb\u7684\u7aef\u70b9\u5e73\u79fb\u5230\u7ed9\u51fa\u76f4\u7ebf\u5411\u91cf\u7684\u4e00\u4e2a\u7aef\u70b9\u4e0a\uff0c\u73b0\u5728\u8fd9\u4e2a\u76f4\u7ebf\u5411\u91cf\u7684\u7aef\u70b9\u5c31\u662f\u539f\u70b9\u4e86\uff0c\u7136\u540e\u6211\u4eec\u628a\u6240\u6709\u70b9\u7684\u57fa\u6362\u6210\u8fd9\u4e2a\u76f4\u7ebf\u5411\u91cf\u548c\u4e0e\u8fd9\u4e2a\u76f4\u7ebf\u5411\u91cf\u5782\u76f4\u7684\u53e6\u4e00\u7ec4\u5411\u91cf\u5c31\u53ef\u4ee5\u5b8c\u6210\u5750\u6807\u7cfb\u53d8\u6362\u4e86,\u5f53\u7136\u4e0d\u8981\u5fd8\u8bb0\u9664\u6a21\u957f\n\n(\u60f3\u770b\u516c\u5f0f\u7684\u8bdd\u76f4\u63a5\u770b\u4ee3\u7801\u597d\u4e86)\n\n\u90a3\u4e48\u7ecf\u8fc7\u4e86\u5750\u6807\u7cfb\u5e73\u79fb\u4e4b\u540e\u73b0\u5728\u6211\u4eec\u7684\u76ee\u6807\u76f4\u7ebf\u5c31\u53d8\u6210\u4e86x\u8f74\u4e86~\n\n\u6709\u4e00\u4e2a\u975e\u5e38naive\u7684\u60f3\u6cd5\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u5bf9\u7740x\u8f74\u505a\u4e00\u4e2a\u6295\u5f71\uff0c\u5f53\u4e24\u4e2a\u6295\u5f71\u91cd\u53e0\u7684\u65f6\u5019\u79bbx\u8f74\u66f4\u8fd1\u7684\u6295\u5f71\u4f1a\u8986\u76d6\u53e6\u4e00\u4e2a\u6295\u5f71\uff0c\u90a3\u4e48\u6700\u540ex\u8f74\u4f1a\u88ab\u5207\u5272\u6210\u4e00\u5806\u6743\u503c\u4e0d\u540c\u7684\u7ebf\u6bb5\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u5806\u7ebf\u6bb5\u4e2d\u53d6\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u83b7\u5f97\u76f8\u5e94\u7684\u6743\u503c\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u6709\u8da3\u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u5b83\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\u76f4\u63a5\u66b4\u529b\u7684\u590d\u6742\u5ea6\u4e0d\u5bf9\u662f$O(n^2)$\u7684\n\n\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u626b\u63cf\u7ebf\u6765\u5feb\u901f\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u7ebf\u6bb5\u62c6\u6210\u4e24\u4e2a\u4e8b\u4ef6\uff0c\u626b\u63cf\u7ebf\u626b\u5230\u5de6\u7aef\u70b9\u65f6\u63d2\u5165\u8fd9\u4e2a\u7ebf\u6bb5\uff0c\u626b\u63cf\u7ebf\u626b\u5230\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u5220\u9664\u8fd9\u4e2a\u7ebf\u6bb5\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u76f8\u90bb\u4e24\u4e2a\u4e8b\u4ef6\u70b9\u4e4b\u95f4\u7684\u88ab\u6fc0\u5149\u7167\u5230\u7684\u7ebf\u6bb5\u5e94\u8be5\u662f\u540c\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u5f53\u7136\u7ebf\u6bb5\u548cx\u8f74\u5939\u89d2\u7684sec\u503c\u5e94\u8be5\u662f\u4e00\u6837\u7684\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e00\u6bb5\u6295\u5f71\u7684\u6743\u503c\u5c31\u662fx\u8f74\u4e0a\u79bbx\u8f74\u6700\u8fd1\u7684\u4e24\u4e2a\u7ebf\u6bb5\u7684sec\u503c\u4e4b\u548c\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6253\u4e00\u4e2a\u8868\uff0c$val_{i}$\u8868\u793ai\u8fd9\u4e2a\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\u5230\u4e0b\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u4e4b\u524d\u4e2d\u95f4\u7684\u7ebf\u6bb5\u7684\u5355\u4f4d\u957f\u5ea6\u7684\u6743\u503c\n\n\u95ee\u9898\u6765\u4e86\u600e\u4e48\u6c42\u5462\uff1f\n\n\u6c42\u79bbx\u8f74\u6700\u8fd1\u7684\u7ebf\u6bb5\u2026\u2026\u524d\u9a71\u540e\u7ee7\uff1f\n\n\u6211\u4eec\u628a\u5728x\u8f74\u4e4b\u4e0a\u7684\u7ebf\u6bb5\u63d2\u5165/\u5220\u9664\u5230\u4e00\u4e2aset\u6216\u8005priority_queue\u91cc\uff0c\u4e0b\u9762\u7684\u7ebf\u6bb5\u540c\u7406\u63d2\u5165/\u5220\u9664\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\uff0c\u7136\u540e\u6211\u4eec\u5728\u505a\u5b8c\u4e8b\u4ef6i\u4e4b\u540e\u67e5\u4e00\u53d1\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u6700\u5c0f\u6700\u5927\u503c\u63d0\u53d6\u5b83\u4eec\u7684sec\u503c\u5c31\u53ef\u4ee5\u4e86(\u5982\u679c\u4f60\u4f7f\u7528\u4e86priority_queue\u53ef\u80fd\u9700\u8981\u60f0\u6027\u5220\u9664)\n\n\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u53ea\u5f00\u4e00\u4e2aset\uff0c\u6bcf\u6b21upper_bound\u540e\u7ee7\u4e4b\u540e- -\u8fed\u4ee3\u5668\u627e\u524d\u9a71\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728$O(nlogn)$\u7684\u6c42\u51fa\u4e86val\u6570\u7ec4\u76f8\u5f53\u4e8e\u6211\u4eec\u6709\u4e86\u4e00\u5806\u4e0d\u540c\u6743\u503c\u7684\u7ebf\u6bb5\uff0c\u73b0\u5728\u8981\u53d6\u4e00\u4e2a\u533a\u95f4\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u7ebf\u6bb5\u6743\u503c\u4e4b\u548c\u6700\u5927\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u533a\u95f4\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5fc5\u7136\u548c\u6211\u4eec\u7684\u4e8b\u4ef6\u70b9\u91cd\u5408\uff0c\u5426\u5219\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u5411\u66f4\u4f18\u7684\u4e00\u7aef\u6ed1\u52a8\u8fd9\u4e2a\u533a\u95f4\u4f7f\u5f97\u7b54\u6848\u81f3\u5c11\u53d8\u5f97\u4e0d\u52a3\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u81ea\u7136\u7684\u60f3\u6cd5\uff0c\u679a\u4e3e\u53f3\u7aef\u70b9\u7d27\u8d34\u7684\u4e8b\u4ef6\u70b9\uff0c\u53cc\u6307\u9488\u6c42\u51fa\u5de6\u7aef\u70b9\u6240\u5728\u7684\u7ebf\u6bb5\u7684\u7f16\u53f7\uff0c\u7136\u540e\u4f7f\u7528\u524d\u7f00\u548c/\u540e\u7f00\u548c\u6c42\u51fa\u4e2d\u95f4\u6574\u5757\u7ebf\u6bb5\u7684\u6743\u503c\uff0c\u6700\u540e\u52a0\u4e0a\u4e00\u4e2a\u96f6\u6563\u7ebf\u6bb5\u7684\u6743\u503c\u5373\u53ef\uff0c\u540c\u7406\u6211\u4eec\u7684\u5de6\u7aef\u70b9\u4e5f\u9700\u8981\u5012\u7740\u679a\u4e3e\u4e00\u904d\n\n\u4e8e\u662f\u4f60\u4fe1\u5fc3\u6ee1\u6ee1\u7684\u5199\u4e86\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u4ea4\u4e0a\u53bb\u4e00\u770b\uff0c\u7cbe\u5ea6\u7206\u70b8\u4e00\u5206\u4e0d\u5f97\n\n\u4f60\u7709\u5934\u4e00\u76b1\u53d1\u73b0\u4e8b\u60c5\u5e76\u4e0d\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u5904\u7406\u4e86\u524d\u7f00\u548c\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7cbe\u5ea6\u5149\u901f\u4e0b\u964d\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u7ef4\u62a4\u524d\u7f00\u548c\u2026\u2026\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6362\u4e00\u79cd\u5199\u6cd5\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u771f\u5b9e\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u5750\u6807\uff0c\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u79bb\u5de6\u7aef\u70b9\u6700\u8fd1\u7684\u7ebf\u6bb5\u7f16\u53f7\uff0c\u7ef4\u62a4\u4e00\u4e2a\u79bb\u53f3\u7aef\u70b9\u6700\u8fd1\u7684\u7ebf\u6bb5\u7f16\u53f7\n\n\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u5faa\u73af\u7684\u65f6\u5019\u770b\u4e00\u4e0b\u662f\u8ba9\u5de6\u7aef\u70b9\u8d34\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u7ebf\u6bb5\u66f4\u8fd1\u8fd8\u662f\u8ba9\u53f3\u7aef\u70b9\u8d34\u5230\u79bb\u4ed6\u6700\u8fd1\u7684\u7ebf\u6bb5\u66f4\u8fd1\uff0c\u7136\u540e\u9009\u62e9\u66f4\u8fd1\u7684\u7aef\u70b9\u8ba9\u5b83\u8d34\u8fc7\u53bb\uff0c\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u4f60\u7684\u7ebf\u6bb5\u662f\u6254\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u7684\u4e00\u90e8\u5206\u52a0\u5165\u4e86\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e24\u90e8\u5206\u7684\u6743\u503c\u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3aL\u7684\u533a\u95f4\u7684\u6743\u503c\u53d8\u5316\u91cf\u5c31\u662f(\u52a0\u5165\u7684\u7ebf\u6bb5\u6743\u503c-\u4e22\u6389\u7684\u7ebf\u6bb5\u6743\u503c)\u00d7(\u632a\u52a8\u957f\u5ea6)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u53d8\u5316\u91cf\u52a0\u4e0a\u539f\u6765\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u52a0\u6cd5\u548c\u4e58\u6cd5\u8fd0\u7b97\uff0c\u7cbe(he)\u5ea6(std)\u8bef(cuo)\u5dee(de)\u8f83(yi)\u5c0f(yang)\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\n\n\u53ef\u80fd\u7ef4\u62a4\u53cc\u6307\u9488\u7684\u7b97\u6cd5\u63cf\u8ff0\u7684\u4e0d\u662f\u975e\u5e38\u6e05\u695a\uff0c\u53ef\u4ee5\u81ea\u5df1\u753b\u4e00\u4e2a\u56fe\u611f\u53d7\u4e00\u4e0b\uff0c\u4f7f\u7528\u6587\u5b57\u63cf\u8ff0\u5e76\u4e0d\u662f\u975e\u5e38\u76f4\u89c2\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\u52a0\u6df1\u7406\u89e3\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\n#include<set>\n#include<cmath>\nusing namespace std;const int N=1e5+10;typedef long double ld;\nint n;ld x[N][2];ld y[N][2];ld lx1;ld ly1;ld lx2;ld ly2;ld L;ld nx;int T;\nld csc[N];ld val[2*N];ld pos[2*N];int op[2*N];ld dx;ld dy;ld ans;\ninline bool cmp(int a,int b){return ((a>0)?x[a][0]:x[-a][1])<((b>0)?x[b][0]:x[-b][1]);} \nstruct lin//\u91cd\u8f7d\u4e86operator<\uff0c\u6bcf\u6b21\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97y\u503c\u8fdb\u884c\u6bd4\u8f83 \n{\n    int u;\n    friend bool operator <(lin a,lin b)\n    {\n        if(a.u==b.u)return false;\n        ld nya=(y[a.u][0]-y[a.u][1])/(x[a.u][0]-x[a.u][1])*(nx-x[a.u][0])+y[a.u][0];\n        ld nyb=(y[b.u][0]-y[b.u][1])/(x[b.u][0]-x[b.u][1])*(nx-x[b.u][0])+y[b.u][0];\n        return ((nya>0)?nya:-nya)<((nyb>0)?nyb:-nyb);\n    }\n};set <lin> su;set <lin> sd;//\u8fd9\u91cc\u624b\u61d2\u4e86\u76f4\u63a5\u5199\u7684\u5e73\u8861\u6811 \ninline void solve()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%Lf%Lf%Lf%Lf\",&x[i][0],&y[i][0],&x[i][1],&y[i][1]);\n    scanf(\"%Lf%Lf%Lf%Lf%Lf\",&lx1,&ly1,&lx2,&ly2,&L);dx=lx1-lx2;dy=ly1-ly2;\n    for(int i=1;i<=n;i++)//\u6570\u5b66\u4e0d\u597d\u5176\u5b9e\u662f\u6b63\u5272\u4f46\u662f\u8fd9\u91cc\u5199\u7684\u662fcsc \n        csc[i]=sqrt((x[i][0]-x[i][1])*(x[i][0]-x[i][1])+(y[i][0]-y[i][1])*(y[i][0]-y[i][1]));\n    ld dw=(lx1!=lx2)?ly1-(dy/dx)*lx1:0;ld dis=sqrt(dx*dx+dy*dy);//\u6bd4\u8f83naive\u7684\u5750\u6807\u7cfb\u53d8\u6362\u65b9\u5f0f\uff0c\u76f4\u63a5\u5e73\u79fb\u4e86\u622a\u8ddd \n    for(int i=1;i<=n;i++){y[i][0]-=dw;y[i][1]-=dw;}dx/=dis;dy/=dis; \n    for(int i=1;i<=n;i++)//\u7136\u540e\u76f4\u63a5\u6362\u57fa\u5c31\u884c\u4e86 \n    {\n        ld tr1;ld tr2;ld tr3;ld tr4;\n        tr1=dx*x[i][0]+dy*y[i][0],tr2=dx*x[i][1]+dy*y[i][1],\n        tr3=dx*y[i][0]-dy*x[i][0],tr4=dx*y[i][1]-dy*x[i][1];\n        x[i][0]=tr1;x[i][1]=tr2;y[i][0]=tr3;y[i][1]=tr4;\n    }\n    for(int i=1;i<=n;i++)\n        if(x[i][0]>x[i][1]){swap(x[i][0],x[i][1]);swap(y[i][0],y[i][1]);}\n    for(int i=1;i<=n;i++)csc[i]/=(x[i][1]-x[i][0]);\n    for(int i=1;i<=n;i++)op[i]=-i;for(int i=n+1;i<=2*n;i++)op[i]=i-n;sort(op+1,op+2*n+1,cmp);\n    for(int i=1,u;i<=2*n;i++)//\u626b\u4e00\u904d\u626b\u63cf\u7ebf \n    {\n        if(op[i]>0)//\u63d2\u5165 \n        {\n            u=op[i];nx=pos[i]=x[u][0];((y[u][0]>0)?su:sd).insert((lin){u});\n            if(!su.empty())val[i]+=csc[su.begin()->u];\n            if(!sd.empty())val[i]+=csc[sd.begin()->u];\n        }else //\u5220\u9664 \n        {\n            u=-op[i];nx=pos[i]=x[u][1];((y[u][0]>0)?su:sd).erase((lin){u});\n            if(!su.empty())val[i]+=csc[su.begin()->u];\n            if(!sd.empty())val[i]+=csc[sd.begin()->u];\n        }\n    }//\u4e3a\u4e86\u4ee3\u7801\u597d\u5199\u53d8\u6362\u4e86\u4e0bval\u6570\u7ec4\uff0c\u53d8\u5316\u4e4b\u540e\u7684val\u662f\u4e0a\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u53d1\u751f\u524d\u6240\u5939\u7ebf\u6bb5\u7684\u6743\u503c \n\tfor(int i=2*n;i>=1;i--)val[i]=val[i-1];ld ret=0;ld rl=pos[1]-L;ld rr=pos[1];int pl=1;int pr=2;\n    while(pr<=2*n) \n    {\n        ld dl=pos[pl]-rl;ld dr=pos[pr]-rr;//\u770b\u4e00\u4e0b\u662f\u5411\u4ec0\u4e48\u65b9\u5411\u79fb\u52a8\u66f4\u8fd1 \n        if(dl>dr){ret+=(val[pr]-val[pl])*dr;pr++;rl+=dr;rr+=dr;}\n        else if (dr>dl){ret+=(val[pr]-val[pl])*dl;pl++;rl+=dl;rr+=dl;}\n        else {ret+=(val[pr]-val[pl])*dl;pr++;pl++;rl+=dl;rr+=dl;}\n        ans=max(ans,ret);\n    }printf(\"%.15Lf\\n\",ans); \n}\ninline void clear(){for(int i=1;i<=2*n;i++)val[i]=0;ans=0;}\nint main(){scanf(\"%d\",&T);for(int z=1;z<=T;z++){solve();clear();}return 0;}//\u62dc\u62dc\u7a0b\u5e8f~ \n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1527151424,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4605 \u3010[SDOI2018]\u7269\u7406\u5b9e\u9a8c\u3011"
    },
    {
        "content": "**40\u5206\u505a\u6cd5**  \n\u5c06\u6321\u677f\u6620\u5c04\u5230\u76f4\u7ebf\u4e0a\uff0cn\u5757\u6321\u677f\u4e00\u51712n\u4e2a\u7aef\u70b9\u5c06\u76f4\u7ebf\u5206\u62102n+1\u90e8\u5206\uff0c\u7136\u540e\u4ece\u4e0a\u5230\u4e0b\u626b\u4e00\u904d\u5c31\u884c\u4e86\u3002  \n**80\u5206\u505a\u6cd5**  \n\u65cb\u8f6c\u5750\u6807\u7cfb\uff0c\u628a\u76f4\u7ebf\u65cb\u8f6c\u4e3ax\u8f74\uff0c2n\u4e2a\u7aef\u70b92n\u4e2a\u4e8b\u4ef6\uff0c\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u4ece\u5de6\u5230\u53f3\u626b\uff0c\u7528\u5e73\u8861\u6811\uff08\u51fa\u9898\u4eba\u73b0\u573a\u8868\u793aset\u771f\u597d\u7528\u563b\u563b\u563b\uff09\u7ef4\u62a4\u6700\u9760\u8fd1\u76f4\u7ebf\u7684\u6321\u677f\u7684\u503e\u659c\u89d2\u7684sec\u503c\uff08\u7ef4\u62a4\u659c\u7387\u4e4b\u7c7b\u4e5f\u53ef\u4ee5\uff09\u3002\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6700\u4f18\u89e3\u7684\u533a\u95f4\u4e00\u5b9a\u6709\u4e00\u7aef\u662f\u5361\u5728\u7aef\u70b9\u4e0a\u7684\uff0c\u6240\u4ee5\u7528\u95f4\u9694\u4e3aL\u7684\u4e24\u4e2a\u6307\u9488\uff0c\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\u5373\u53ef\u3002  \n**100\u5206\u505a\u6cd5**    \n~~\u5c06double\u6362\u6210long double\u5373\u53ef~~  \n\u672c\u662f\u7528\u4e8e\u5361\u7cbe\u5ea6\u7684\u6d4b\u8bd5\u70b9\uff0c\u7136\u800c\u6ca1\u6709\u4e00\u4e2a\u4eba\u88ab\u5361\u7cbe\u5ea6\u3002\n\u4e0d\u65cb\u8f6c\u5750\u6807\u7cfb\uff0c\u76f4\u63a5\u5728\u539f\u5750\u6807\u7cfb\u4e0b\uff0c\u7528\u659c\u7740\u7684\u626b\u63cf\u7ebf\u626b\u4e00\u904d\u5c31\u53ef\u4ee5\u907f\u514d\u7cbe\u5ea6\u8bef\u5dee",
        "postTime": 1526628373,
        "uid": 36457,
        "name": "jlx77777",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4605 \u3010[SDOI2018]\u7269\u7406\u5b9e\u9a8c\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P4605)\n\n\u8003\u8651\u8ba9\u76f4\u7ebf\u5bfc\u8f68\u6210\u4e3a$x$\u8f74\uff0c\u94a6\u5b9a$(x_1,y_1)$\u6210\u4e3a\u5750\u6807\u539f\u70b9\uff0c\u5176\u4f59\u70b9\u7684\u5750\u6807\u90fd\u51cf\u53bb$(x_1,y_1)$\u3002\u4e4b\u540e\u9700\u8981\u4f7f\u5f97$(x_2,y_2)$\u843d\u5728$x$\u8f74\u4e0a\uff0c\u6c42\u4e00\u4e0b$(x_2,y_2)$\u4e0e$x$\u8f74\u7684\u5939\u89d2$\\alpha$\uff0c\u8ba9\u6240\u6709\u70b9\u90fd\u987a\u65f6\u9488\u65cb\u8f6c$\\alpha$\u5c31\u597d\u4e86\u3002\n\n\u70b9\u65cb\u8f6c\u540e\u7684\u5750\u6807\u53d8\u6362\u662f\u8001\u7ecf\u5178\u95ee\u9898\u4e86\uff0c$(x,y)$\u987a\u65f6\u9488\u65cb\u8f6c$\\alpha$\u4e4b\u540e\u5c31\u53d8\u6210\u4e86$(x\\cos\\alpha+y\\sin\\alpha,-x\\sin\\alpha+y\\cos \\alpha)$\u3002\n\n\u8003\u8651\u4e00\u6bb5\u6321\u677f\u5728$x$\u8f74\u7684\u6295\u5f71\u662f$[l,r]$\uff0c\u8fd9\u6bb5\u6321\u677f\u5230$x$\u8f74\u7684\u5939\u89d2\u4e3a$\\beta$\uff1b\u5982\u679c\u6fc0\u5149\u53d1\u5c04\u5668\u4e0e\u6295\u5f71\u7684\u4ea4\u957f\u5ea6\u4e3a$l$\uff0c\u90a3\u4e48\u5c31\u4f1a\u5728\u6321\u677f\u88ab\u6fc0\u5149\u7167\u5c04\u5230\u7684\u957f\u5ea6\u5c31\u662f$\\frac{l}{\\cos\\beta}$\u3002\n\n\u8fd9\u8868\u660e\u4e86\u6211\u4eec\u4e00\u5b9a\u80fd\u5c06\u6240\u6709\u6321\u677f\u90fd\u8f6c\u5316\u6210$(l,r,v)$\u7684\u5f62\u5f0f\uff0c\u5373\u8fd9\u6bb5\u6321\u677f\u5728$x$\u8f74\u4e0a\u7684\u6295\u5f71\u4e3a$[l,r]$\uff0c\u6781\u89d2\u4f59\u5f26\u503c\u7684\u5012\u6570\u4e3a$v$\uff1b\u8fd9\u6837\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5c31\u662f\uff0c**$v$\u4e58\u4e0a\u6295\u5f71\u4e0e\u6fc0\u5149\u53d1\u5c04\u5668\u7684\u4ea4\u7684\u957f\u5ea6**\u3002\n\n\u8003\u8651\u5904\u7406\u51fa\u6240\u6709\u7684$(l,r,v)$\uff0c\u7531\u4e8e\u6321\u677f\u4e0d\u80fd\u88ab\u6fc0\u5149\u7a7f\u8fc7\uff0c\u6240\u4ee5\u53ea\u4fdd\u7559\u8ddd\u79bb$x$\u8f74\u6700\u8fd1\u7684\u6321\u677f\uff1b\u5bf9\u4e8e\u4e00\u6761\u7ebf\u6bb5$(x_1,y_1,x_2,y_2)$\uff0c\u89c6\u4e3a\u5728$x_1$\u5904\u63d2\u5165\u5b83\uff0c\u5728$x_2$\u5904\u5c06\u5176\u5220\u9664\uff1b\u7528$set$\u6765\u7ef4\u62a4\u5f53\u524d\u8ddd\u79bb$x$\u8f74\u6700\u8fd1\u7684\u7ebf\u6bb5\u3002\u7531\u4e8e\u9898\u76ee\u4e2d\u4fdd\u8bc1\u4e86\u4efb\u610f\u4e24\u6761\u7ebf\u6bb5\u4e0d\u4f1a\u76f8\u4e92\u63a5\u89e6\uff0c\u4e8e\u662f\u5728\u4e24\u4e2a\u76f8\u90bb\u7684\u7aef\u70b9\u4e4b\u95f4\u6700\u9760\u8fd1$x$\u8f74\u7684\u7ebf\u6bb5\u53ea\u6709\u4e00\u6761\u3002\u76f4\u63a5\u8bbf\u95ee$set$\u7684begin\u8fed\u4ee3\u5668\u5373\u53ef\u3002\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5728$O(1)$\u7684\u65f6\u95f4\u5185\u5224\u65ad\u4e24\u6761\u7ebf\u6bb5\u8c01\u66f4\u66f4\u9760\u8fd1$x$\u8f74\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u7ed9$set$\u5199\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u975e\u5e38\u65b9\u4fbf\u3002\n\n\u6700\u540e\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a$L$\u7684\u7ebf\u6bb5\uff0c\u4f7f\u5f97\u8fd9\u6761\u7ebf\u6bb5\u4e0e\u6295\u5f71\u7684\u5e26\u6743\u4ea4\u6700\u5927\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5c06\u7ebf\u6bb5\u7684\u7aef\u70b9\u5361\u5728\u6295\u5f71\u7684\u7aef\u70b9\u5904\u4f1a\u53d6\u5230\u6700\u4f18\u7684\u7b54\u6848\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u6240\u6709\u6295\u5f71\u6392\u597d\u5e8f\uff0c\u6b63\u53cd\u4e24\u8fb9\u53cc\u6307\u9488\u5373\u53ef\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(Tn\\log n)$\u3002\n\n\u7136\u800c\u5b9e\u9645\u4e0a\u975e\u5e38\u96be\u5199\uff0c\u6211\u4eec\u6c42\u6295\u5f71\u7684\u65f6\u5019\u8981\u5206\u5728$x$\u8f74\u4e0a\u65b9\u548c\u4e0b\u65b9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u6c42\uff0c\u5206\u522b\u6c42\u5b8c\u4e4b\u540e\u8fd8\u9700\u8981\u5408\u5e76\uff0c\u53cc\u6307\u9488\u7684\u65f6\u5019\u4e5f\u5f97\u8fdb\u884c\u4e00\u756a\u8ba8\u8bba\u3002\n\n\u636e\u8bf4\u5341\u5206\u5361\u7cbe\u5ea6\uff0c\u8fd8\u9700\u8981long double\uff0c\u4f46\u662f\u76f4\u63a5\u7528double\u5c31\u83bd\u8fc7\u53bb\u4e86\u4e5f\u662f\u975e\u5e38\u523a\u6fc0\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define db double\n#define re register\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read() {\n\tchar c=getchar();int r=1,x=0;while(c<'0'||c>'9'){if(c=='-')r=-1;c=getchar();};\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-48,c=getchar();return x*r;\n}\nconst db Pi=acos(-1),eps=1e-15;\nconst int maxn=5e4+5;\nstruct Pt{db x,y;}S,E;\nstruct Line{Pt s,t;}L[maxn];\nstruct wkL{db p,v;int o,rk;}a[maxn<<1];\nstruct Seg{db l,r,v;}seg[2][maxn<<1],b[maxn<<4];\nstruct Point{db p,v;int o;}d[maxn<<2];\nint n,Len,tot,sz[2],cnt,num;db val[maxn];\ninline int dcmp(db A,db B) {return A+eps>B&&A-eps<B;}\ninline int cmp(const wkL &A,const wkL &B) {return A.p<B.p;}\ninline int ctp(const Point &A,const Point &B) {return A.p<B.p;}\ninline db operator*(const Pt &A,const Pt &B) {return A.x*B.y-A.y*B.x;}\ninline Pt operator+(const Pt &A,const Pt &B) {return (Pt){A.x+B.x,A.y+B.y};}\ninline Pt operator-(const Pt &A,const Pt &B) {return (Pt){A.x-B.x,A.y-B.y};}\ninline Pt rotate(const Pt &A,db det) {\n\tdb s=sin(det),c=cos(det);\n\treturn (Pt){A.x*c+A.y*s,A.y*c-A.x*s};\n}\nstruct cop {\n\tbool operator() (int A,int B) {\n\t\tif(L[A].s.x<L[B].s.x) {\n\t\t\tdb t=L[B].s.x-L[A].s.x;\n\t\t\tt*=(L[A].t.y-L[A].s.y);\n\t\t\tt/=(L[A].t.x-L[A].s.x);\n\t\t\tt+=L[A].s.y;\n\t\t\treturn t<L[B].s.y;\n\t\t}\n\t\telse {\n\t\t\tdb t=L[A].s.x-L[B].s.x;\n\t\t\tt*=(L[B].t.y-L[B].s.y);\n\t\t\tt/=(L[B].t.x-L[B].s.x);\n\t\t\tt+=L[B].s.y;\n\t\t\treturn L[A].s.y<t;\n\t\t}\n\t}\n};\nstd::set<int,cop> s;\ninline void calc(int op) {\n\tstd::sort(a+1,a+tot+1,cmp);\n\tfor(re int i=1;i<=tot;++i) \t\n\t\tif(a[i].o==1) val[a[i].rk]=a[i].v;\n\tdb nw=-1e18;s.clear();\n\tfor(re int i=1;i<=tot;++i) {\n\t\tif(!s.empty()&&!dcmp(nw,a[i].p)) {\n\t\t\tseg[op][++sz[op]].l=nw;\n\t\t\tseg[op][sz[op]].r=a[i].p;\n\t\t\tseg[op][sz[op]].v=val[*(s.begin())];\n\t\t}\n\t\tnw=a[i].p;\n\t\tif(a[i].o==-1) s.erase(a[i].rk);\n\t\tif(a[i].o==1) s.insert(a[i].rk);\n\t}\n}\ninline void Main_solve() {\n\tn=read();\n\tfor(re int i=1;i<=n;i++) \n\t\tL[i].s.x=read(),L[i].s.y=read(),L[i].t.x=read(),L[i].t.y=read();\n\tS.x=read(),S.y=read(),E.x=read(),E.y=read(),Len=read();\n\tfor(re int i=1;i<=n;i++)L[i].s=L[i].s-S,L[i].t=L[i].t-S;E=E-S;\n\tdb Det=atan2(E.y,E.x);\n\tfor(re int i=1;i<=n;i++)L[i].s=rotate(L[i].s,Det);\n\tfor(re int i=1;i<=n;i++)L[i].t=rotate(L[i].t,Det);\n\tfor(re int i=1;i<=n;i++) \n\t\tif(L[i].s.x>L[i].t.x) std::swap(L[i].s,L[i].t);\n\ttot=0;sz[0]=sz[1]=0;\n\tfor(re int i=1;i<=n;i++) \n\t\tif(L[i].s.y>0) {\n\t\t\tdb det=atan2((L[i].t-L[i].s).y,(L[i].t-L[i].s).x);\n\t\t\tdet=1.0/cos(det);\n\t\t\ta[++tot].p=L[i].s.x;\n\t\t\ta[tot].o=1;\n\t\t\ta[tot].v=det;\n\t\t\ta[tot].rk=i;\n\t\t\ta[++tot].p=L[i].t.x;\n\t\t\ta[tot].o=-1;\n\t\t\ta[tot].rk=i;\n\t\t}\n\tcalc(0);tot=0;\n\tfor(re int i=1;i<=n;i++) \n\t\tif(L[i].s.y<0) {\n\t\t\tL[i].s.y=fabs(L[i].s.y);\n\t\t\tL[i].t.y=fabs(L[i].t.y);\n\t\t\tdb det=atan2((L[i].t-L[i].s).y,(L[i].t-L[i].s).x);\n\t\t\tdet=1.0/cos(det);\n\t\t\ta[++tot].p=L[i].s.x;\n\t\t\ta[tot].o=1;\n\t\t\ta[tot].v=det;\n\t\t\ta[tot].rk=i;\n\t\t\ta[++tot].p=L[i].t.x;\n\t\t\ta[tot].o=-1;\n\t\t\ta[tot].rk=i;\n\t\t}  \n\tcnt=0,num=0;\n\tcalc(1);\n\tfor(re int i=1;i<=sz[0];i++) {\n\t\td[++cnt].p=seg[0][i].l;\n\t\td[cnt].o=1;d[cnt].v=seg[0][i].v;\n\t\td[++cnt].p=seg[0][i].r;\n\t\td[cnt].o=-1;d[cnt].v=-seg[0][i].v;\n\t}\n\tfor(re int i=1;i<=sz[1];++i) {\n\t\td[++cnt].p=seg[1][i].l;\n\t\td[cnt].o=1;d[cnt].v=seg[1][i].v;\n\t\td[++cnt].p=seg[1][i].r;\n\t\td[cnt].o=-1;d[cnt].v=-seg[1][i].v;\n\t}\n\tstd::sort(d+1,d+cnt+1,ctp);\n\tdb nw=-1e18,sv=0;int nsz=0;\n\tfor(re int i=1;i<=cnt;++i) {\n\t\tif(nsz&&!dcmp(nw,d[i].p)) {\n\t\t\tb[++num].l=nw;\n\t\t\tb[num].r=d[i].p;\n\t\t\tb[num].v=sv;\n\t\t}\n\t\tnsz+=d[i].o;sv+=d[i].v;nw=d[i].p;\n\t}\n\tint lp=1;db tmp=0,ans=0;\n\tfor(re int i=1;i<=num;++i) {\n\t\tif(lp>=i) tmp-=(b[i-1].r-b[i-1].l)*b[i-1].v;\n\t\twhile(lp<=num&&(b[i].l+Len>b[lp].r||dcmp(b[i].l+Len,b[lp].r))) {\n\t\t\tif(lp>=i) tmp+=(b[lp].r-b[lp].l)*b[lp].v;\n\t\t\t++lp;\n\t\t}\n\t\tif(lp<=num) {\n\t\t\tdb t=(b[i].l+Len)-b[lp].l;\n\t\t\tif(t<0)t=0;t*=b[lp].v;\n\t\t\tans=max(ans,t+tmp);\n\t\t}else ans=max(ans,tmp);\n\t}\n\tfor(re int i=1;i<=num;i++)std::swap(b[i].l,b[i].r),b[i].l=-b[i].l,b[i].r=-b[i].r;\n\tstd::reverse(b+1,b+num+1);\n\tlp=1,tmp=0;\n\tfor(re int i=1;i<=num;++i) {\n\t\tif(lp>=i) tmp-=(b[i-1].r-b[i-1].l)*b[i-1].v;\n\t\twhile(lp<=num&&(b[i].l+Len>b[lp].r||dcmp(b[i].l+Len,b[lp].r))) {\n\t\t\tif(lp>=i) tmp+=(b[lp].r-b[lp].l)*b[lp].v;\n\t\t\t++lp;\n\t\t}\n\t\tif(lp<=num) {\n\t\t\tdb t=(b[i].l+Len)-b[lp].l;\n\t\t\tif(t<0)t=0;t*=b[lp].v;\n\t\t\tans=max(ans,t+tmp);\n\t\t}else ans=max(ans,tmp);\n\t}\n\tprintf(\"%.15lf\\n\",ans);\n\t\t \n}\nint main() {\n\tfor(re int T=read();T;--T)Main_solve();\n\treturn 0;\n}\n```",
        "postTime": 1590734165,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4605 \u3010[SDOI2018]\u7269\u7406\u5b9e\u9a8c\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u672c\u4eba\u5199\u7684\u7b2c\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\u3002\u672c\u6587\u7684\u53d7\u4f17\u5e76\u975e\u90a3\u4e9b\u5df2\u7ecf\u5f88\u4e86\u89e3\u8ba1\u7b97\u51e0\u4f55\u7684\u5927\u4f6c\uff0c\u800c\u662f\u50cf\u6211\u4e00\u6837\u521a\u5f00\u59cb\u5b66\u4e60\u8ba1\u7b97\u51e0\u4f55\u7684\u840c\u65b0\uff0c\u5982\u679c\u662f\u524d\u8005\u7684\u8bdd\uff0c\u8bf7\u79fb\u6b65shadowice1984\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u4ed6\u7684\u8bed\u8a00\u7b80\u7ec3\u6e05\u695a\uff0c\u800c\u6211\u7684\u53ea\u662f\u60f3\u66f4\u8be6\u7ec6\u800c\u5df2\u3002\n\n\n\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u633a\u7b80\u5355\u7684\uff0c\u5927\u6982\u5c31\u662f\u628a\u6321\u677f\u4ee5\u4e00\u5b9a\u6743\u503c\uff08\u8fd9\u4e2a\u503c\u4e0e\u6321\u677f\u548c\u5bfc\u8f68\u7684\u5939\u89d2\u6709\u5173\uff09\u6620\u5c04\u5230\u5bfc\u8f68\u4e0a\uff0c\u7136\u540e\u53d6\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u5f97\u9009\u7684\u533a\u95f4\u88ab\u6620\u5c04\u7684\u6743\u503c\u6700\u5927\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7ed3\u8bba\uff0c\u8fd9\u4e2a\u533a\u95f4\u80af\u5b9a\u8981\u4e48\u4ee5\u67d0\u4e2a\u6321\u677f\u7684\u5de6\u7aef\u5f00\u59cb\uff0c\u8981\u4e48\u7ed3\u675f\u4e8e\u67d0\u4e2a\u6321\u677f\u7684\u53f3\u7aef\uff0c\u6240\u4ee5\u53ea\u7edf\u8ba1O(n)\u79cd\u65b9\u6848\u5c31\u591f\u4e86\u3002\n\n\u8fd9\u4e2a\u9898\u5c31\u89c4\u7ea6\u6210\u4e86\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u533a\u95f4\u52a0\u4e0e\u533a\u95f4\u6c42\u503c\uff0c\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u6c42\u5c31\u884c\u4e86\u3002[\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5efa\u8bae\u5de6\u8f6c\u666e\u53ca\u7ec4](https://www.luogu.com.cn/problem/P3372)\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u6321\u677f\u76f4\u7ebf\u5f88\u957f\u561b\uff0c\u6240\u4ee5\u9700\u8981\u79bb\u6563\u5316\u3002\u800c\u8fd9\u79cd\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\u7684\u9898\uff0c\u7528\u626b\u63cf\u7ebf\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u8fd8\u6709\u4e24\u4e2a\u95ee\u9898\u3002\u4e00\u4e2a\u662f\u8fd9\u4e2a\u5bfc\u8f68\u662f\u659c\u7740\u7684\uff0c\u9700\u8981\u628a\u4ed6\u65cb\u8f6c\u5230\u6c34\u5e73\u624d\u80fd\u6bd4\u8f83\u65b9\u4fbf\u5730\u5f04\u3002\u7b2c\u4e8c\u4e2a\u662f\u906e\u6321\u95ee\u9898\uff0c\u79bb\u5bfc\u8f68\u8fdc\u7684\u4f1a\u88ab\u79bb\u5bfc\u8f68\u8fd1\u7684\u6321\u4f4f\uff0c\u52a0\u8d77\u6765\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\u3002\n\n\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\u8981\u5206\u6210\u4e24\u6b65\u3002\n\n\u7b2c\u4e00\u6b65\u5c31\u662f\u4f7f\u5bfc\u8f68\u8fd9\u6761\u659c\u7ebf\u8fc7\u539f\u70b9\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628ax\u8f74\u4e0a\u79fb\u622a\u8ddd\u4e2a\u5355\u4f4d\u5b9e\u73b0\uff0c[\u4e0d\u61c2\u4e00\u6b21\u51fd\u6570\u622a\u8ddd\u662f\u5565\u7684\u70b9\u8fd9\u91cc](https://baike.baidu.com/item/%E4%B8%80%E6%AC%A1%E5%87%BD%E6%95%B0/1653577?fr=aladdin)\u3002\u5177\u4f53\u5199\u6cd5\u5c31\u662f\u628a\u6bcf\u4e2a\u6321\u677f\u7684y\u5750\u6807```-```\u622a\u8ddd\u3002\n\n\u7b2c\u4e8c\u4e2a\u662f\u65cb\u8f6c\u5750\u6807\u7cfb\uff0c\u8fd9\u4e2a\u5c31\u9700\u8981\u5927\u5bb6\u7684\u4e09\u89d2\u51fd\u6570\u77e5\u8bc6\u4e86\uff08\u4e0d\u4f1a\u4e5f\u53ef\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u65b9\u4fbf\u8fd8\u662f\u9700\u8981\u77e5\u9053\u57fa\u672c\u6982\u5ff5\u7684\uff09\uff0c[\u4e0d\u77e5\u9053\u57fa\u672c\u6982\u5ff5\u7684\u70b9\u8fd9\u91cc](https://baike.baidu.com/item/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0/1652457?fr=aladdin)\u3002\u5177\u4f53\u7684\u63a8\u5bfc\u8fc7\u7a0b\u90fd\u5728\u56fe\u7247\u4e0a\u4e86\u3002![](https://i.loli.net/2020/03/25/bP6oiLcjTYZeFWz.jpg)\n\n\u7136\u540e\u5f00\u59cb\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u7528set\u6216\u8005priority_queue\u7ef4\u62a4\u3002\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e8c\u8c61\u9650\uff0c\u4e09\u56db\u8c61\u9650\u540c\u7406\uff0c\u90a3\u5982\u4f55\u5224\u65ad\u8c01\u5728\u4e0b\u9762\u5462\uff0c\u7528\u7eb5\u5750\u6807\u5224\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u6709\u66f4\u5de7\u5999\u7684\u529e\u6cd5\u3002\n\n\u626b\u63cf\u7ebf\u628a\u4e00\u4e2a\u6321\u677f\u62c6\u5206\u6210\u63d2\u5165\u5220\u9664\u4e24\u4e2a\u6b65\u9aa4\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u52a0\u5165\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e00\u4e0b\u5b83\u7684\u6a2a\u5750\u6807\uff0c\u7136\u540e\u505a\u94c5\u5782\u7ebf\uff0c\u4ea4\u70b9\u6700\u4f4e\u7684\u70b9\u5c31\u662f\u5728\u6700\u4e0b\u9762\u7684\u70b9\u3002\n\n\u5176\u4ed6\u7684\u90fd\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u4e86\u3002\n\n```\n #include<bits/stdc++.h>\nusing namespace std;\n#define maxn 20005\n#define lb long double\n#define Fol(i, j, n) for(register int i = j ; i >= n ; --i)\n#define For(i, j, n) for(register int i = j ; i <= n ; ++i)\nint n, T, v, pl, pr, op[maxn];\nlb l, nx, ll, lx, rx, ly, ry, dx, dy, rr, dl, dr, ans, dis, res;\nlb len[maxn], pos[maxn], val[maxn], x[maxn][2], y[maxn][2]; \nstruct node{\n\tint u;\n\t//\u5229\u7528\u94c5\u5782\u6cd5\u5224\u65ad\u8c01\u9760\u8fd1x\u8f74 \n\tfriend bool operator < (node a, node b){\n\t\tif(a.u == b.u) return 0;\n\t\tlb ay = (y[a.u][1] - y[a.u][0]) / (x[a.u][1] - x[a.u][0]) * (nx - x[a.u][0]) + y[a.u][0];\n        lb by = (y[b.u][1] - y[b.u][0]) / (x[b.u][1] - x[b.u][0]) * (nx - x[b.u][0]) + y[b.u][0];\n\t\treturn fabs(ay) < fabs(by);\n\t}\n};\nset<node>su, sd; \ninline lb pow(lb x){ return x * x; }\ninline bool cmp(int a, int b){ return ((a < 0) ? x[-a][1] : x[a][0]) < ((b < 0) ? x[-b][1] : x[b][0]); }\n\nint main(){\n\tscanf(\"%d\", &T);\n\twhile(T--){\n\t\tscanf(\"%d\", &n);\n\t\tFor(i, 1, n) scanf(\"%Lf %Lf %Lf %Lf\", &x[i][0], &y[i][0], &x[i][1], &y[i][1]);\t\n\t\tscanf(\"%Lf %Lf %Lf %Lf %Lf\", &lx, &ly, &rx, &ry, &l), dx = rx - lx, dy = ry - ly;\n\t\tFor(i, 1, n) len[i] = sqrt(pow(x[i][1] - x[i][0]) + pow(y[i][1] - y[i][0]));\n//\u5148\u5e73\u79fb\u622a\u8ddd \n\t\tlb dw = lx == rx ? 0 : ly - (dy / dx) * lx;\n\t\tFor(i, 1, n) y[i][0] -= dw, y[i][1] -= dw;\n//\n//\u518d\u65cb\u8f6c\u5750\u6807\u7cfb\t\t\n\t\tdis = sqrt(pow(dx) + pow(dy)), dx /= dis, dy /= dis;\n\t\tFor(i, 1, n){\n\t\t\tlb t1, t2, t3, t4;\n\t\t\tt1 = dx * x[i][0] + dy * y[i][0], t2 = dx * x[i][1] + dy * y[i][1];\n\t\t\tt3 = dx * y[i][0] - dy * x[i][0], t4 = dx * y[i][1] - dy * x[i][1];\n\t\t\tx[i][0] = t1, x[i][1] = t2, y[i][0] = t3, y[i][1] = t4;\n\t\t}\n\t\tFor(i, 1, n) if(x[i][0] > x[i][1]) swap(x[i][0], x[i][1]), swap(y[i][0], y[i][1]);\n// \n\t\tFor(i, 1, n) len[i] /= (x[i][1] - x[i][0]), op[i] = -i;\n\t\tFor(i, n + 1, n << 1) op[i] = i - n;//\u8d1f\u53f7\u4ee3\u8868\u5220\u9664 \n\t\tsort(op + 1, op + (n << 1) + 1, cmp);\n\t\tFor(i, 1, n << 1){\n\t\t\tif(op[i] > 0){\n\t\t\t\tv = op[i], nx = pos[i] = x[v][0];\n\t\t\t\t(y[v][0] > 0 ? su : sd).insert(node{v});\n\t\t\t\tif(!su.empty()) val[i] += len[(*su.begin()).u];\n\t\t\t\tif(!sd.empty()) val[i] += len[(*sd.begin()).u];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tv = -op[i], nx = pos[i] = x[v][1];\n\t\t\t\t(y[v][0] > 0 ? su : sd).erase(node{v});\n\t\t\t\tif(!su.empty()) val[i] += len[(*su.begin()).u];\n\t\t\t\tif(!sd.empty()) val[i] += len[(*sd.begin()).u];\n\t\t\t}\n\t\t}\n\t\tFol(i, n << 1, 1) val[i] = val[i - 1];//\u6700\u540e\u4e00\u4e2a\u80af\u5b9a\u662f\u5220\u9664\u5566\uff0c\u6240\u4ee5\u6ca1\u5565\u7528\uff0c\u5c31\u4e0d\u8981\u4e86\uff0c\u5176\u4ed6\u7684\u540e\u4e00\u4e2a\u7ef4\u62a4\u524d\u4e00\u4e2a\u7684\u6bd4\u8f83\u65b9\u4fbf \n\t\tres = 0, pl = 1, pr = 2, ll = pos[1] - l, rr = pos[1];\n//\u6700\u540etwo pointer\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7b54\u6848\uff0c\u5176\u5b9e\u679a\u4e3e\u4e8c\u5206\u4e5f\u884c\uff0c\u4e0d\u8fc7\u636e\u8bf4\u6389\u7cbe\u5ea6\uff0c\u4e3a\u4e86\u5b89\u5168\u8fd8\u662ftwo pointer\u5427 \n\t\twhile(pr <= n << 1){\n\t\t\tdl = pos[pl] - ll, dr = pos[pr] - rr;\n\t\t\tif(dl > dr) res += (val[pr] - val[pl]) * dr, pr++, ll += dr, rr += dr;\n\t\t\telse if(dl < dr) res += (val[pr] - val[pl]) * dl, pl++, ll += dl, rr += dl;\n\t\t\telse res += (val[pr] - val[pl]) * dl, pl++, pr++, ll += dl, rr += dl;\n\t\t\tans = max(ans, res);\n\t\t}\n\t\tprintf(\"%.15Lf\\n\", ans), ans = 0, memset(val, 0, sizeof(val));\n\t\t//\u6570\u636e\u5343\u4e07\u6761\uff0c\u6e05\u7a7a\u7b2c\u4e00\u6761\u3002\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1585135911,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4605 \u3010[SDOI2018]\u7269\u7406\u5b9e\u9a8c\u3011"
    }
]