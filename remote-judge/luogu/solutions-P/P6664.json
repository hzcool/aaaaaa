[
    {
        "content": "\u5728\u6211\u7684 blog \u4e2d\u67e5\u770b\uff1ahttps://www.cnblogs.com/suxxsfe/p/13500935.html  \n\n[http://uoj.ac/problem/274](http://uoj.ac/problem/274)  \n[https://www.luogu.com.cn/problem/P6664](https://www.luogu.com.cn/problem/P6664)  \n\n\u6839\u636e\u9898\u76ee\u7684\u6761\u4ef6\uff08\u6e29\u5ea6\u5404\u4e0d\u76f8\u540c\uff09\u548c\u8981\u6c42\uff08\u6e29\u5ea6\u6392\u5e8f\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\uff0c\u5bb9\u6613\u63a8\u51fa\uff0c\u5b9e\u9645\u4e0a\u6bcf\u6b21\u8be2\u95ee\u5c31\u662f\u8981\u6c42\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4**\u6700\u4f4e\u6e29\u5ea6\u6700\u9ad8**\u7684\uff0c\u540c\u65f6\u4e0d\u5b58\u5728\u73af\uff08\u5c31\u662f\u5728\u6700\u4f4e\u6e29\u6700\u9ad8\u57fa\u7840\u4e0a\u6700\u77ed\uff09\u7684\u4e00\u6761\u8def\u5f84  \n\n\u5176\u5b9e\u548c [\u6c34\u7ba1\u5c40\u957f](https://www.luogu.com.cn/problem/P4172) \u90a3\u9898\u6bd4\u8f83\u50cf\uff0c\u6709\u8fde\u8fb9\u64cd\u4f5c\uff0c\u60f3\u5230\u7528 lct \u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u52a0\u5165\u7684\u8fb9\uff1a  \n\n- \u5982\u679c\u5b83\u4e24\u7aef\u70b9\u8fd8\u6ca1\u6709\u8054\u901a\uff0c\u76f4\u63a5\u8fde\u8fb9\u5373\u53ef\u3002\n- \u5982\u679c\u4e24\u7aef\u70b9\u5df2\u7ecf\u8054\u901a\u4e86\uff0c\u6c42\u51fa\u4e24\u7aef\u70b9\u4e4b\u95f4\u8def\u5f84\u4e2d\u6700\u4f4e\u6e29\u5ea6\uff0c\u5982\u679c\u65b0\u8fb9\u7684\u6e29\u5ea6\u4f4e\u4e8e\u6b64\u503c\uff0c\u4e0d\u7528\u7ba1\uff08\u56e0\u4e3a\u4e0d\u5b58\u5728\u5220\u8fb9\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u8d70\u5230\u8fd9\u6761\u65b0\u8fb9\uff09\u3002\u5426\u5219\uff0c\u5c31\u628a\u539f\u8def\u5f84\u4e2d\u6700\u4f4e\u6e29\u7684\u8fb9\u65ad\u5f00\uff0c\u5e76\u8fde\u63a5\u65b0\u8fb9\u3002\n\n\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\u4e5f\u5c31\u6bd4\u8f83\u663e\u7136\uff0c\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u751f\u6210\u6811  \n\n\u8fd8\u9700\u8981\u4e00\u4e2a\u6280\u5de7\u6765\u7ef4\u62a4\u8fb9\u7684\u4fe1\u606f\uff0c\u5c31\u662f\u4e3a\u6bcf\u4e00\u4e2a\u8fb9\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u6743\u503c\uff08\u5728\u8fd9\u91cc\u662f\u957f\u5ea6\uff09\u4e3a\u8fb9\u6743\u3002  \n\u7136\u540e\u8fde\u8fb9\u65f6\u5c31\u7528\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\u548c\u5b83\u4e24\u4e2a\u7aef\u70b9\u76f8\u8fde\uff0c\u7aef\u70b9\uff08\u5b9e\u9645\u8282\u70b9\uff09\u7684\u70b9\u6743\u4e3a $0$\uff0c\u5c31\u80fd\u6b63\u5e38\u7ef4\u62a4\u4fe1\u606f\u4e86\u3002  \n\u8fd9\u6837\u4fee\u6539\u64cd\u4f5c\u5c31\u628a\u90a3\u6761\u8fb9\u7684\u865a\u62df\u8282\u70b9\u4f38\u5c55\u5230 lct \u7684\u6839\uff0c\u7136\u540e\u66f4\u65b0\u3002  \n\u67e5\u8be2\u5148\u770b\u662f\u5426\u8054\u901a\uff0c\u5982\u679c\u8054\u901a\u5c31\u628a\u90a3\u6761\u8def\u5f84 split \u51fa\u6765\uff0c\u67e5\u8be2\u957f\u5ea6\u548c\u3002  \n\n\u4e3a\u4e86\u65b9\u4fbf\u627e\u8def\u5f84\u4e2d\u6700\u4f4e\u6e29\u7684\u8fb9\u662f\u54ea\u4e2a\uff0c\u8282\u70b9\u7ed3\u6784\u4f53\u4e2d\u7684 `min` \u5176\u5b9e\u662f\u6700\u4f4e\u6e29\u8fb9\u7684\u6807\u53f7\u3002  \n\n\u4ee3\u7801\uff0c\u6d1b\u8c37UOJ\u90fd\u80fd\u8fc7\uff0c\u800c\u4e14\u4f3c\u4e4e\u5e76\u4e0d\u50cf\u7f51\u4e0a\u535a\u5ba2\u8bf4\u7684\u4e00\u6837\u9700\u8981\u523b\u610f\u5361\u5e38  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\n#define N 100005\n#define M 300005\nint n,m;\nint tem[M];\nstruct tr{\n\ttr *son[2],*fa;\n\tint tag;\n\tint sumlen,len,min,thismin;\n}*null,*pos[N+M],dizhi[N+M];\nint U[M],V[M];\n#define ident(tree,fa) (fa->son[1]==tree)\n#define notroot(tree) (tree->fa->son[0]==tree||tree->fa->son[1]==tree)\n#define min(x,y) (tem[x]<tem[y]?x:y)\ninline void connect(tr *tree,tr *fa,int k){fa->son[k]=tree;tree->fa=fa;}\ninline void pushdown(tr *tree){\n\tif(!tree->tag) return;\n\ttree->son[0]->tag^=1;tree->son[1]->tag^=1;\n\tstd::swap(tree->son[0],tree->son[1]);\n\ttree->tag=0;\n}\ninline void pushup(tr *tree){\n\ttree->sumlen=tree->len+tree->son[0]->sumlen+tree->son[1]->sumlen;\n\ttree->min=min(tree->thismin,min(tree->son[0]->min,tree->son[1]->min));\n}\ninline void rotate(tr *tree){\n\ttr *fa=tree->fa,*faa=fa->fa;\n\tpushdown(fa);pushdown(tree);\n\tint k=ident(tree,fa);\n\tconnect(tree->son[k^1],fa,k);\n\ttree->fa=faa;\n\tif(notroot(fa)) faa->son[ident(fa,faa)]=tree;\n\tconnect(fa,tree,k^1);\n\tpushup(fa);pushup(tree);\n}\ninline void splay(reg tr *tree){\n\treg tr *fa,*faa;\n\twhile(notroot(tree)){\n\t\tfa=tree->fa;faa=fa->fa;\n\t\tif(notroot(fa)) rotate(ident(tree,fa)^ident(fa,faa)?tree:fa);\n\t\trotate(tree);\n\t}\n}\ninline void access(reg tr *x){\n\tfor(reg tr *lastx=null;x!=null;lastx=x,x=x->fa){\n\t\tpushdown(x);\n\t\tsplay(x);\n\t\tx->son[1]=lastx;pushup(x);\n\t}\n}\ninline void makeroot(tr *x){\n\taccess(x);\n\tsplay(x);\n\tx->tag^=1;\n}\ninline tr *findroot(tr *x){\n\taccess(x);splay(x);\n\tpushdown(x);\n\twhile(x->son[0]!=null) x=x->son[0],pushdown(x);\n\tsplay(x);\n\treturn x;\n}\ninline int linked(tr *x,tr *y){\n\tmakeroot(x);\n\treturn findroot(y)==x;\n}\ninline void split(tr *x,tr *y){\n\tmakeroot(x);\n\taccess(y);splay(y);\n}\ninline void link(tr *x,tr *y){\n    makeroot(x);\n\tif(findroot(y)!=x) x->fa=y;\n}\ninline void cut(tr *x,tr *y){\n    split(x,y);\n    x->fa=y->son[0]=null;\n}\ninline void init(){\n\tnull=&dizhi[0];\n\tfor(reg int i=1;i<=n;i++){\n\t\tpos[i]=&dizhi[i];\n\t\tdizhi[i].son[0]=dizhi[i].son[1]=dizhi[i].fa=null;\n\t}\n}\ninline void creat(int i,int l){\n\tpos[i]=&dizhi[i];\n\tdizhi[i].son[0]=dizhi[i].son[1]=dizhi[i].fa=null;\n\tdizhi[i].min=dizhi[i].thismin=i-n;\n\tdizhi[i].sumlen=dizhi[i].len=l;\n}\nint main(){\n\tn=read();m=read();\n\tinit();\n\ttem[0]=2e9;\n\tchar c;int id,u,v,k;\n\twhile(m--){\n\t\tc=getchar();\n\t\twhile(c!='f'&&c!='c'&&c!='m') c=getchar();\n\t\tif(c=='f'){\n\t\t\tid=read()+1+n;u=read()+1;v=read()+1;tem[id-n]=read();k=read();\n\t\t\tcreat(id,k);\n\t\t\tif(linked(pos[u],pos[v])){\n\t\t\t\tsplit(pos[u],pos[v]);\n\t\t\t\tif(tem[pos[v]->min]>=tem[id-n]) continue;\n\t\t\t\tint tmp=pos[v]->min;\n\t\t\t\tcut(pos[tmp+n],pos[U[tmp]]);cut(pos[tmp+n],pos[V[tmp]]);\n\t\t\t}\n\t\t\tlink(pos[id],pos[u]),link(pos[id],pos[v]);\n\t\t\tU[id-n]=u;V[id-n]=v;\n\t\t}\n\t\telse if(c=='c'){\n\t\t\tid=read()+1+n;k=read();\n\t\t\tsplay(pos[id]);\n\t\t\tpos[id]->len=k;\n\t\t\tpushup(pos[id]);\n\t\t}\n\t\telse{\n\t\t\tu=read()+1;v=read()+1;\n\t\t\tif(!linked(pos[u],pos[v])) puts(\"-1\");\n\t\t\telse{\n\t\t\t\tsplit(pos[u],pos[v]);\n\t\t\t\tprintf(\"%d\\n\",pos[v]->sumlen);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597373428,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "[UOJ274] P6664 \u6e29\u6696\u4f1a\u6307\u5f15\u6211\u4eec\u524d\u884c"
    },
    {
        "content": "### \u7701\u9009\u524d\u5199\u9053LCT\uff0crp++!\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P6664)\n\n\u8fd9\u9053\u9898\u548c[P4172\u6c34\u7ba1\u5c40\u957f](https://www.luogu.com.cn/problem/P4172)\u6709\u70b9\u50cf\u3002\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u6700\u5927\u751f\u6210\u6811\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u548c\u3002\u7ef4\u62a4\u52a8\u6001\u6700\u5927\u751f\u6210\u6811\u7684\u8bdd\uff0c\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u8fb9\u6743min\u548c\u8fd9\u6761\u6700\u5c0f\u8fb9\u6743\u7684\u8fb9\u7684\u7f16\u53f7\u3002\u957f\u5ea6\u5c31\u7ef4\u62a4\u4e00\u4e2a\u8fb9\u6743\u548c\u5373\u53ef\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528LCT\u7ef4\u62a4\u3002\n\n\u8fd9\u9053\u9898\u6bd4\u8f83\u5999\u7684\u4e00\u70b9\u5728\u4e8e\uff0c\u628a\u8fb9\u5f53\u4f5c\u4e00\u4e2a\u65b0\u70b9\uff0c\u6bcf\u6b21\u52a0\u8fb9\u5c31\u662f\u628a\u8fd9\u4e2a\u65b0\u70b9\u548c\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5f88\u597d\u7ef4\u62a4\u4fe1\u606f\uff0c\u4e5f\u5f88\u5bb9\u6613\u5220\u9664\u3002\n\n\u51e0\u4e2a\u6613\u9519\u70b9\uff1aLCT\u677f\u5b50\u91cc\u8bbf\u95ee $0$ \u8282\u70b9\uff1b\u7528\u5de6\u53f3\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u5224\u65ad\u5de6\u53f3\u513f\u5b50\u662f\u5426\u5b58\u5728\u2026\u2026\u53cd\u6b63\u6211\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002\n\n\u6700\u540e\u653e\u4e0a\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ninline void swap(int &x,int &y){x^=y^=x^=y;}\nconst int N=4e5+13,INF=0x3f3f3f3f;\nstruct edge{int u,v;}E[N];\nint n,m,a[N],val[N],pos[N];\nbool vis[N];\nstruct Stack{\n\tint s[N],t;\n\tinline void clear(){t=0;}\n\tStack(){clear();}\n\tinline void push(int x){s[++t]=x;}\n\tinline void pop(){--t;}\n\tinline int top(){return s[t];}\n\tinline bool empty(){return !t;}\n};\nstruct Dsu{\n\tint fa[N];\n\tint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n\tinline bool check(int u,int v){return find(u)==find(v);}\n\tinline void merge(int u,int v){\n\t\tint x=find(u),y=find(v);\n\t\tif(x!=y) fa[x]=y;\n\t}\n}tt;\nstruct Lct{\n\tint fa[N],sum[N],ch[N][2],minval[N],minid[N];bool tag[N];\n\tinline void refresh(int x){\n\t\tsum[x]=sum[ch[x][0]]+sum[ch[x][1]]+a[x];\n\t\tint v=val[x],d=pos[x];\n\t\t//\u8fd9\u4e2a\u5730\u65b9\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u7528\u513f\u5b50\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u513f\u5b50\u4e0d\u4e00\u5b9a\u5b58\u5728 \n\t\tif(ch[x][0]&&v>minval[ch[x][0]]) v=minval[ch[x][0]],d=minid[ch[x][0]];\n\t\tif(ch[x][1]&&v>minval[ch[x][1]]) v=minval[ch[x][1]],d=minid[ch[x][1]];\n\t\tminval[x]=v,minid[x]=d;\n\t}\n\tinline bool isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\n\tinline bool chk(int x){return ch[fa[x]][1]==x;}\n\tinline void rotate(int x){\n\t\tint f=fa[x],gf=fa[f],k=chk(x),w=ch[x][k^1];\n\t\tfa[x]=gf;if(!isroot(f)) ch[gf][chk(f)]=x;\n\t\tif(w) fa[w]=f;ch[f][k]=w;\n\t\tfa[f]=x;ch[x][k^1]=f;\n\t\trefresh(f),refresh(x);\n\t}\n\tinline void pushdown(int x){\n\t\tif(!tag[x]) return;\n\t\ttag[ch[x][0]]^=1,tag[ch[x][1]]^=1,tag[x]=0;\n\t\tswap(ch[x][0],ch[x][1]);\n\t}\n\tinline void splay(int x){\n\t\tStack st;int p=x;\n\t\twhile(!isroot(p)) st.push(p),p=fa[p];\n\t\tst.push(p);\n\t\twhile(!st.empty()) pushdown(st.top()),st.pop();\n\t\twhile(!isroot(x)){\n\t\t\tint f=fa[x];\n\t\t\tif(!isroot(f)){\n\t\t\t\tif(chk(f)==chk(x)) rotate(f);\n\t\t\t\telse rotate(x);\n\t\t\t}\n\t\t\trotate(x);\n\t\t}\n\t}\n\tinline void access(int x){\n\t\tfor(int p=0;x;p=x,x=fa[x]) splay(x),ch[x][1]=p,refresh(x);\n\t}\n\tinline void makeroot(int x){access(x);splay(x);tag[x]^=1;}\n\tinline int findroot(int x){\n\t\taccess(x);splay(x);\n\t\twhile(ch[x][0]) x=ch[x][0];\n\t\treturn x;\n\t}\n\tinline void split(int x,int y){makeroot(x);access(y);splay(y);}\n\tinline void link(int x,int y){\n\t\tmakeroot(x);\n\t\tif(findroot(y)!=x) fa[x]=y;\n\t}\n\tinline void cut(int x,int y){\n\t\tsplit(x,y);\n\t\tif(ch[y][0]==x&&!ch[x][1]) fa[x]=ch[y][0]=0;\n\t}\n}T;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i) tt.fa[i]=i,val[i]=T.minval[i]=INF;\n\tfor(int i=1,id,u,v,t,l;i<=m;++i){\n\t\tchar op[10];\n\t\tscanf(\"%s\",op);\n\t\tif(op[0]=='f'){//find id u v t l\n\t\t\tscanf(\"%d%d%d%d%d\",&id,&u,&v,&t,&l);++id,++u,++v;\n\t\t\tE[id]=(edge){u,v};a[id+n]=l,val[id+n]=t,pos[id+n]=id;\n\t\t\tif(tt.check(u,v)){\n\t\t\t\tT.split(u,v);\n\t\t\t\tif(t<=T.minval[v]) continue;//\u5982\u679c\u6e29\u5ea6\u592a\u4f4e\uff0c\u5c31\u4e0d\u4f1a\u52a0\u5165\u6700\u5927\u751f\u6210\u6811\uff0c\u76f4\u63a5\u8df3\u8fc7 \n\t\t\t\tint p=T.minid[v];\n\t\t\t\tT.cut(E[p].u,p+n),T.cut(E[p].v,p+n);\n\t\t\t\tvis[p]=0;\n\t\t\t}\n\t\t\telse tt.merge(u,v);\n\t\t\tT.link(u,id+n);\n\t\t\tT.link(v,id+n),vis[id]=1;\n\t\t}\n\t\telse if(op[0]=='m'){//move u v\n\t\t\tscanf(\"%d%d\",&u,&v);++u,++v;\n\t\t\tif(!tt.check(u,v)) puts(\"-1\");\n\t\t\telse T.split(u,v),printf(\"%d\\n\",T.sum[v]);\n\t\t}\n\t\telse{//change id l\n\t\t\tscanf(\"%d%d\",&id,&l);++id;\n\t\t\tif(vis[id]){//\u5982\u679c\u8fd9\u6761\u8fb9\u5728\u6700\u5927\u751f\u6210\u6811\u4e2d\uff0c\u624d\u8c03\u6574 \n\t\t\t\tT.access(id+n);T.splay(id+n);\n\t\t\t\ta[id+n]=l,T.refresh(id+n);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1617711965,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P6664\u9898\u89e3"
    },
    {
        "content": "LCT\u597d\u9898\uff1a\n\n\u8fd9\u9053\u9898\u548c[\u6c34\u7ba1\u5c40\u957f](https://www.luogu.com.cn/problem/P4172)\u8fd9\u9053\u9898\u975e\u5e38\u76f8\u4f3c\uff0c\u90fd\u662f\u4e00\u6837\u7684\u5957\u8def\u3002\n\n\u5c06\u672c\u9898\u7684\u5185\u5bb9\u8f6c\u5316\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u52a8\u6001\u7ef4\u62a4\u4e00\u68f5\u6700\u5927\u751f\u6210\u6811\uff0c\u5e76\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u672c\u9898\u4e00\u5171\u4e09\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u6765\u5206\u6790\uff1a\n\n1.\u5148\u770b$move$\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u597d\u529e\uff0c\u5c5e\u4e8e$LCT$\u7684\u5e38\u89c4\u64cd\u4f5c\uff0c\u76f4\u63a5$split(x,y)$\u540e\u67e5\u8be2$y$\u70b9\u7684\u4fe1\u606f\u5373\u53ef\u3002\n\n2.\u7136\u540e\u662f$find$\u64cd\u4f5c\u3002\u6211\u4eec\u60f3\uff1a\u5982\u679c\u52a0\u5165\u8fd9\u6761\u8fb9$(x,y)$\u540e\uff0c\u5f97\u5230\u7684\u4ecd\u7136\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u6211\u76f4\u63a5$link(x,y)$\u5373\u53ef\uff0c\u66f4\u65b0\u7b54\u6848\u3002\u4f46\u5982\u679c\u52a0\u5165\u7684$(x,y)$\u5df2\u7ecf\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u6211\u4eec\u5c31\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\u5982\u679c\u5f53\u524d\u7684$(x,y)$\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u6e29\u5ea6\u90fd\u6bd4\u8fd9\u4e2a $t$ \u5927\uff0c\u90a3\u80af\u5b9a\u4e0d\u52a8\uff1b\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u628a\u90a3\u6761\u6700\u5c0f\u7684\u6e29\u5ea6\u6362\u6210\u8fd9\u4e2a$t$\uff0c\u7b54\u6848\u4e00\u5b9a\u66f4\u4f18\u3002$cut$\u6389\u90a3\u6761\u6e29\u5ea6\u6700\u5c0f\u7684\u8fb9\uff0c$link$\u4e0a$(x,y)$\uff1b\n\n3.\u518d\u8003\u8651$change$\u64cd\u4f5c\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e3a$find$\u64cd\u4f5c\u3002\u5bf9\u4e8e\u8fb9$(x,y)$\uff0c\u5982\u679c\u5b83\u8fd8\u5b58\u5728\uff0c\u6211\u4eec\u5148\u628a\u5b83\u7ed9\u5220\u4e86\uff0c\u8fd9\u6837\u5c06\u8fb9\u7684\u957f\u5ea6\u6362\u6389\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u53c8\u52a0\u5165\u4e86\u4e00\u6761\u65b0\u7684\u8fb9\uff0c\u50cf$find$\u64cd\u4f5c\u4e00\u6837\u5904\u7406\u5c31\u884c\u4e86\u3002\n\n**\u51e0\u4e2a\u6ce8\u610f\u7684\u70b9:**\n\n1.\u8fd9\u91cc\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u4e0d\u9002\u5408\u7528\u5e76\u67e5\u96c6\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u540e\u8fd8\u8981\u5220\u8fb9\uff0c\u5e94\u8be5\u7528$LCT$\u4e2d\u7684$findroot$\u51fd\u6570\u89e3\u51b3\u3002\n\n2.\u4e3a\u4e86\u5224\u65ad\u67d0\u6761\u8fb9\u662f\u5426\u8fd8\u5b58\u5728\uff0c\u6211\u7528\u4e86\u4e00\u4e2a$vis$\u6570\u7ec4\u8bb0\u5f55,$vis[i]=1$\u8bf4\u660e\u8be5\u8fb9\u4e0d\u5b58\u5728\uff0c$vis[i]=0$\u8bf4\u660e\u8be5\u8fb9\u5b58\u5728\u3002\n\n3.\u672c\u9898\u5904\u7406\u7684\u662f\u8fb9\u6743\u4fe1\u606f\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u5316\u6210\u70b9\u6743\uff0c\u5728\u6bcf\u6761\u8fb9\u4e2d\u95f4\u5efa\u4e00\u4e2a\u65b0\u70b9\u3002\n\n$code:$\n```cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define reg register\nconst int maxn=1200000+5;\nconst int mod=1000000;\nconst int INF=2e12;\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,q;\nstruct node\n{\n\tint fa;\n\tint son[2];\n\tint wns;\n\tint flag;\n\tint dis;\n}tree[maxn];\nint len[maxn];\nbool nroot(int x)\n{\n\tint t=tree[x].fa;\n\treturn (tree[t].son[0]==x || tree[t].son[1]==x);\n}\nint val[maxn];\nvoid update(int x)\n{\n\tif(!x)\n\treturn;\n\ttree[x].wns=val[x];\n\tif(tree[x].son[0])\n\ttree[x].wns=min(tree[x].wns,tree[tree[x].son[0]].wns);\n\tif(tree[x].son[1])\n\ttree[x].wns=min(tree[x].wns,tree[tree[x].son[1]].wns);\n\ttree[x].dis=tree[tree[x].son[0]].dis+tree[tree[x].son[1]].dis+len[x];\n}\nvoid pushdown(int x)\n{\n\tif(x && tree[x].flag)\n\t{\n\t\ttree[tree[x].son[0]].flag ^=1;\n\t\ttree[tree[x].son[1]].flag ^=1;\n\t\tswap(tree[x].son[0],tree[x].son[1]);\n\t\ttree[x].flag=0;\n\t}\n}\nvoid rotate(int x)\n{\n\tint y=tree[x].fa;\n\tint z=tree[y].fa;\n\tint k=(tree[y].son[1]==x);\n\t\n\t//grandfather\n\tif(nroot(y))\n\ttree[z].son[tree[z].son[1]==y]=x;\n\t\n\t//grandson\n\ttree[tree[x].son[k ^ 1]].fa=y;\n\t\n\t//son\n\ttree[y].fa=x;\n\ttree[y].son[k]=tree[x].son[k ^ 1];\n\t\n\t//father\n\ttree[x].fa=z;\n\ttree[x].son[k ^ 1]=y;\n\t\n\t//update\n\tupdate(y);\n\tupdate(x);\n}\nint s[maxn];\nint tot=0;\nvoid splay(int x)\n{\n\ttot=0;\n\tint now=x;\n\ts[++tot]=now;\n\twhile(nroot(now))\n\t{\n\t\ts[++tot]=tree[now].fa;\n\t\tnow=tree[now].fa;\n\t}\n\tfor(int i=tot;i>=1;i--)\n\tpushdown(s[i]);\n\twhile(nroot(x))\n\t{\n\t\tint y=tree[x].fa;\n\t\tint z=tree[y].fa;\n\t\tif(nroot(y))\n\t\t((tree[z].son[0]==y) ^ (tree[y].son[0]==x))?rotate(x):rotate(y);\n\t\trotate(x);\n\t}\n}\nvoid access(int x)\n{\n\tfor(reg int y=0;x;y=x,x=tree[x].fa)\n\t{\n\t\tsplay(x);\n\t\ttree[x].son[1]=y;\n\t\tupdate(x);\n\t}\n}\nvoid makeroot(int x)\n{\n\taccess(x);\n\tsplay(x);\n\ttree[x].flag ^=1;\n}\nint Findroot(int x)\n{\n\taccess(x);\n\tsplay(x);\n\tpushdown(x);\n\twhile(tree[x].son[0])\n\t{\n\t\tx=tree[x].son[0];\n\t\tpushdown(x);\n\t}\n\tsplay(x);\n\treturn x;\n}\nvoid split(int x,int y)\n{\n\tmakeroot(x);\n\taccess(y);\n\tsplay(y);\n}\nvoid link(int x,int y)\n{\n\tmakeroot(x);\n\tif(Findroot(y)!=x)\n\ttree[x].fa=y;\n}\nvoid cut(int x,int y)\n{\n\tmakeroot(x);\n\tif(Findroot(y)!=x || tree[y].fa!=x || tree[y].son[0])\n\treturn;\n\ttree[y].fa=tree[x].son[1]=0;\n\tupdate(x);\n}\nint Get(int val,int x)\n{\t\t\n\twhile(x)\n\t{\n\t\tif(tree[x].son[0] && tree[tree[x].son[0]].wns==val)\n\t\tx=tree[x].son[0];\n\t\telse\n\t\tif(tree[x].son[1] && tree[tree[x].son[1]].wns==val)\n\t\tx=tree[x].son[1];\n\t\telse\n\t\tbreak;\n\t}\n\treturn x;\n}\nchar opt[15];\nstruct vode\n{\n\tint x,y;\n\tint t;\n\tint dis;\n}edge[maxn];\nint vis[maxn];\nvoid add(int id,int x,int y,int t,int l)\n{\n\t\n\tint nowx=Findroot(x);\n\tint nowy=Findroot(y);\n\tif(nowx!=nowy)\n\t{\n\t\tvis[id]=0;\t\n\t\tval[id+n]=t;\n\t\tlen[id+n]=l;\n\t\tlink(x,id+n);\n\t\tlink(id+n,y);\n\t}\n\telse\n\t{\n\t\tsplit(x,y);\n\t\tint wns=tree[y].wns;\n\t\tif(t<=wns)\n\t\t{\n\t\t\tvis[id]=1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvis[id]=0;\n\t\t\tint place=Get(wns,y);\n\t\t\tvis[place-n]=1;\n\t\t\tcut(edge[place-n].x,place);\n\t\t\tcut(place,edge[place-n].y);\n\t\t\tval[id+n]=t;\n\t\t\tlen[id+n]=l;\n\t\t\tlink(x,id+n);\n\t\t\tlink(id+n,y);\n\t\t}\n\t}\t\n\tedge[id].x=x,edge[id].y=y;\n\tedge[id].dis=l;\n\tedge[id].t=t;\n}\nsigned main()\n{\n\tn=read(),m=read();\n\tmemset(val,0x3f,sizeof(val));\n\tfor(int i=1;i<=n+m*3;i++)\n\tvis[i]=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",opt+1);\n\t\tif(opt[1]=='f')\n\t\t{\n\t\t\tint id=read(),x=read(),y=read(),t=read(),l=read();\n\t\t\tid++,x++,y++;\n\t\t\tif(x>y)\n\t\t\tswap(x,y);\n\t\t\tadd(id,x,y,t,l);\n\t\t}\n\t\telse\n\t\tif(opt[1]=='m')\n\t\t{\n\t\t\tint x=read(),y=read();\t\n\t\t\tx++,y++;\n\t\t\tint nowx=Findroot(x);\n\t\t\tint nowy=Findroot(y);\n\t\t\tif(nowx!=nowy)\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsplit(x,y);\n\t\t\t\tprintf(\"%lld\\n\",tree[y].dis);\n\t\t\t}\n\t\t}\n\t\telse\n\t\tif(opt[1]=='c')\n\t\t{\n\t\t\tint id=read(),l=read();\n\t\t\tid++;\n\t\t\tif(vis[id]==0)\n\t\t\t{\n\t\t\t\tcut(edge[id].x,id+n);\n\t\t\t\tcut(id+n,edge[id].y);\n\t\t\t\tvis[id]=1;\n\t\t\t}\n\t\t\tadd(id,edge[id].x,edge[id].y,edge[id].t,l);\n\t\t}\n\t}\n\treturn 0;\n}\n/*\n*/\n```\n\n\n",
        "postTime": 1611206463,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u6e29\u6696\u4f1a\u6307\u5f15\u6211\u4eec\u524d\u884c\u3000\u9898\u89e3"
    },
    {
        "content": "# Problem\n\n\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u52a8\u6001\u52a0\u8fb9\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7 $pri$ \u548c\u4e00\u4e2a\u6743\u503c $val$ \uff0c\u652f\u6301\u52a8\u6001\u4fee\u6539\u67d0\u4e00\u6761\u8fb9\u7684\u6743\u503c $val$ \uff0c\u6bcf\u6b21\u8be2\u95ee\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84 $pri$ \u5bf9\u5e94\u5b57\u5178\u5e8f\u6700\u5927\u7684\u8def\u5f84\u6743\u503c\u548c\u3002\n\n# Solution\n\n\u9996\u5148\uff0c\u9898\u76ee\u8981\u6c42\u6240\u6709\u8fb9\u4e2d\u7684\u8f83\u5c0f\u503c\u5c3d\u53ef\u80fd\u5927\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u56fe\u7684\u6700\u5927\u751f\u6210\u6811\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\uff0c\u4e8e\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u56fe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u52a8\u6001\u7ef4\u62a4\u5b83\u7684\u6700\u5927\u751f\u6210\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6839\u636e\u6e29\u5ea6\u7ef4\u62a4\u597d\u6700\u5927\u751f\u6210\u6811\u4e4b\u540e\uff0c\u5176\u5b9e\u8be2\u95ee\u5c31\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u6700\u5927\u751f\u6210\u6811\u4e0a\u67e5\u8be2\u8def\u5f84\u957f\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u53ef\u4ee5\u4f7f\u7528 LCT \u52a8\u6001\u7ef4\u62a4\u6700\u5927\u751f\u6210\u6811\u4ee5\u53ca\u8def\u5f84\u548c\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u4e8e\u4e09\u4e2a\u64cd\u4f5c\u5177\u4f53\u600e\u4e48\u505a\u3002\n\n$1.$ Find \u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u7ef4\u62a4\u6700\u5927\u751f\u6210\u6811\uff0c\u4e5f\u5c31\u662f LCT \u7ef4\u62a4\u6700\u5927\u751f\u6210\u6811\uff0c\u6211\u4eec\u6bcf\u6b21\u67e5\u770b $u$\uff0c$v$ \u7684\u8fde\u901a\u6027\uff0c\u5982\u679c\u6709\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u73af\u4e0a\u5220\u6389\u4e00\u6761\u4f18\u5148\u7ea7 $pri$ \u6700\u5c0f\u7684\u8fb9\uff0c\u6ca1\u6709\u5c31\u662f\u76f4\u63a5 LCT \u52a0\u8fb9\u3002\n\n$2.$ Move \u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8be2\u95ee\u64cd\u4f5c\uff0c\u5148\u8be2\u95ee\u662f\u5426\u5728\u540c\u4e00\u9897\u5b50\u6811\u91cc\uff0c\u518d\u8be2\u95ee\u8def\u5f84\u6743\u503c\u548c\u3002\n\n$3.$ Change \u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6811\u4e0a\u5355\u70b9\u4fee\u6539\uff0c\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u7136\u540e Access \u4e0a\u4f20\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5177\u4f53\u600e\u4e48\u7528 LCT \u7ef4\u62a4\u6700 \u5c0f/\u5927 \u751f\u6210\u6811\uff0c\u53ef\u4ee5\u53bb\u53c2\u8003\u4e00\u4e0b [\u6c34\u5c40\u7ba1\u957f](https://www.luogu.com.cn/problem/P4172) \u548c [\u9b54\u6cd5\u68ee\u6797](https://www.luogu.com.cn/problem/P2387) \u8fd9\u4e24\u9053\u9898\uff0c\u7b80\u5355\u7684\u6765\u8bf4\u96be\u70b9\u5176\u5b9e\u53ea\u5728 LCT \u7ef4\u62a4\u8fb9\u6743\uff0c\u6211\u4f7f\u7528\u7684\u4e5f\u5c31\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u62c6\u70b9\uff0c\u5c31\u662f\u628a\u4e00\u6761\u5e26\u6743\u8fb9\u89c6\u4f5c\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5e26\u6743\uff0c\u800c\u539f\u672c\u56fe\u4e0a\u7684\u8282\u70b9\u4e0d\u5e26\u6743\uff0c\u800c\u7ef4\u62a4\u70b9\u6743\u5f88\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u5c31\u662f LCT \u6a21\u677f\u4e86\u3002\n\n# Code\n\n\u56e0\u4e3a\u6211\u5199\u7684\u4e11\uff0c\u6240\u4ee5\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\u3002\n",
        "postTime": 1614565600,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P6664 [\u6e05\u534e\u96c6\u8bad2016] \u6e29\u6696\u4f1a\u6307\u5f15\u6211\u4eec\u524d\u884c"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6664)\u3002\n\n~~\u554a\u554a\u554a\u9898\u76ee\u5bf9\u6211\u8fd9\u79cd\u8bed\u6587\u849f\u84bb\u5f88\u4e0d\u53cb\u597d\u554a\uff01\u8bfb\u4e865\u904d\u624d\u5927\u6982\u660e\u767d\u2026~~\n\n~~\u6211\u8bfb\u4e86\u90a3\u4e48\u534a\u5929\uff0c\u7ed3\u679c\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u5b57\u5178\u5e8f\u5b8c\u5168\u5c31\u662f\u628a\u6211\u7684\u601d\u7ef4\u641e\u4e71\u7684\u4e1c\u897f\u2026~~\n\n\u9898\u76ee\u7b80\u8ff0\uff1a\n\n\u7ed9\u4f60\u4e00\u5f20\u56fe\uff0c\u6700\u5f00\u59cb\u5747\u4e3a\u5b64\u70b9\uff0c\u64cd\u4f5c\u6709\u4e09\u4e2a\uff1a\n\n1. \u56fe\u4e2d\u65b0\u52a0\u4e00\u6761\u8fde\u63a5 $u$\uff0c$v$ \u7f16\u53f7\u4e3a $id$ \u7684\u8fb9\uff0c\u6743\u503c\u4e3a $t$\uff0c\u957f\u4e3a $l$\u3002\n2. \u67e5\u627e\u4ece $u$ \u5230 $v$ \u7684\u4e00\u6761\u8def\u5f84\uff0c\u8981\u6c42\u8def\u5f84\u6ee1\u8db3\u6700\u5c0f\u8fb9\u6743\u6700\u5927\u4e14\u8f93\u51fa\u6b64\u8def\u5f84\u7684\u603b\u957f\u5ea6\u3002\u5982\u679c $u$\u3001$v$ \u4e0d\u8fde\u901a\u5219\u8f93\u51fa -1\u3002\n3. \u4ece $u$ \u5230 $v$ \u7684\u4e00\u6761\u8fb9\u957f\u5ea6\u66f4\u6539\u4e3a $l$\u3002\n\n~~\u611f\u89c9\u597d\u50cf\u4e0e\u539f\u9898\u9762\u5e76\u6ca1\u6709\u4ec0\u4e48\u53d8\u5316\u3002~~\n\n\u8fdb\u884c\u601d\u8003\u601d\u8def\uff1a\n\n~~\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6700\u5c0f\u8fb9\u6743\u6700\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\uff01~~\n\n\u505a\u8fc7[\u8fd9\u9898](https://www.luogu.com.cn/problem/P4172)\u6216\u8005\u505a\u9898\u91cf\u5f88\u591a\u7684\u540c\u5b66\u5e94\u8be5\u53ef\u4ee5\u4e00\u773c\u770b\u51fa\uff1a\u8fd9\u662f\u8ba9\u6211\u4eec\u6c42\u4e00\u4e2a\u6700\u5927\u751f\u6210\u6811\uff01\u56e0\u4e3a\u6700\u5927\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u4e00\u5b9a\u6ee1\u8db3\u6700\u5c0f\u8fb9\u6743\u6700\u5927\u3002\n\n\u662f\u4e0d\u662f\u4e00\u4e0b\u5c31\u7b80\u5355\u4e86\u8bb8\u591a\uff1f\n\n\u7136\u540e\u5c31\u662f\u5982\u4f55\u52a8\u6001\u8fdb\u884c\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\n\nLCT \u662f\u4e2a\u597d\u4e1c\u897f\uff01\n\n\u6211\u4eec\u8981\u8fde\u63a5\u4e24\u4e2a\u70b9\u65f6\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n+ \u5f53\u4e24\u4e2a\u70b9\u6ca1\u6709\u8054\u901a\u65f6\uff0c\u76f4\u63a5\u8fdb\u884c link\u3002\n+ \u5f53\u4e24\u4e2a\u70b9\u8054\u901a\u65f6\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u8fb9\u6743\u6700\u5c0f\u503c\u8981\u5c0f\u4e8e\u5f53\u524d\u8fb9\u7684\u8fb9\u6743\u65f6\uff0c\u5220\u9664\u8fb9\u6743\u6700\u5c0f\u503c\u7684\u90a3\u4e00\u6761\u8fb9\uff0c\u5e76\u52a0\u5165\u8fd9\u4e00\u6761\u8fb9\u3002\n\n\u53ef\u662f\u5982\u4f55\u7ef4\u62a4\u8fb9\u6743\u5462\uff1f\n\nLCT \u4e0d\u662f\u91cd\u94fe\u5256\u5206\uff0c\u4e0d\u80fd\u76f4\u63a5\u628a\u8fb9\u6743\u4e0b\u653e\u81f3\u70b9\u6743\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6761\u8fb9\u90fd\u53d8\u6210\u4e00\u4e2a LCT \u4e0a\u7684\u70b9\uff0c\u7136\u540e\u518d\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\n\nsplay \u7684\u7ed3\u6784\u4f53\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n```cpp\nstruct splay{\n\tint fa,son[2];\n\tint minn;//\u8fb9\u6743\u6700\u5c0f\u503c\n\tint val;//\u957f\u5ea6\u603b\u548c\n\tint pos;//\u8fb9\u6743\u6700\u5c0f\u7684\u70b9\u7684\u7f16\u53f7\n\tint rev;\n};\nsplay spl[N];\n```\n\n\u6539\u52a8\u6bd4\u8f83\u5927\u7684\u5c31\u662f pushup \u51fd\u6570\u4e86\u3002\n```cpp\ninline void pushup(int pos){\n\tspl[pos].minn=v1[pos];//\u9ed8\u8ba4\u8fb9\u6743\u6700\u5c0f\u503c\u662f\u81ea\u5df1\n\tspl[pos].pos=pos;//\u90a3\u4e48\u8fb9\u6743\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7\u5c31\u662f\u81ea\u5df1\n\tspl[pos].val=v2[pos]+spl[spl[pos].son[0]].val+spl[spl[pos].son[1]].val;//\u66f4\u65b0\u957f\u5ea6\u603b\u548c\n\tif(spl[pos].son[0]&&spl[pos].minn>spl[spl[pos].son[0]].minn){//\u5de6\u513f\u5b50\u7684\u6700\u5c0f\u503c\u6bd4\u5f53\u524d\u6700\u5c0f\u503c\u8981\u66f4\u5c0f\n\t\tspl[pos].pos=spl[spl[pos].son[0]].pos;\n\t\tspl[pos].minn=spl[spl[pos].son[0]].minn;\n\t}\n\tif(spl[pos].son[1]&&spl[pos].minn>spl[spl[pos].son[1]].minn){//\u53f3\u513f\u5b50\u540c\u7406\n\t\tspl[pos].pos=spl[spl[pos].son[1]].pos;\n\t\tspl[pos].minn=spl[spl[pos].son[1]].minn;\n\t}\n}\n```\n\n\u6211\u4eec\u4e4b\u524d\u52a0\u8fb9\u7684\u90a3\u4e00\u4e9b\u64cd\u4f5c\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n```cpp\nif(!check(x,y)){//\u4e0d\u8fde\u901a\n\tlink(x,n+p);\n\tlink(n+p,y);//\u8fde\u63a5\n}\nelse{\n\tsplit(x,y);\n\tpos=spl[y].pos;//\u627e\u5230\u8fb9\u6743\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u70b9\n\tif(v1[n+p]>v1[pos]){//\u53ef\u4ee5\u52a0\u8fb9\n\t\tsplaying(pos);//\u65cb\u5230\u6839\u4e0a\u65b9\u4fbf\u64cd\u4f5c\n\t\tspl[spl[pos].son[0]].fa=spl[spl[pos].son[1]].fa=0;//\u5b50\u4e0d\u8ba4\u7236\u5373\u4e3a\u65ad\u8fb9\n\t\tlink(x,n+p);\n\t\tlink(n+p,y);//\u8fde\u63a5\n\t}\n}\n```\n\n\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\uff1a\n\n1. \u9898\u4e2d\u7684 $u$\u3001$v$\u3001$id$ \u90fd\u662f\u4ece0\u6807\u53f7\u7684\u3002\n2. \u6ce8\u610f\u70b9\u70b9\u4e0e\u8fb9\u70b9\u7684\u533a\u522b\u3002\n\n\u7136\u540e\u4fbf\u662f\u5b8c\u6574\u7248\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=1e6+10;\nstruct splay{\n\tint fa,son[2];\n\tint minn;\n\tint val;\n\tint pos;\n\tint rev;\n};\nsplay spl[N];\nstring s;\nint v1[N],v2[N];//v1\u662f\u8fb9\u6743\uff0cv2\u662f\u957f\u5ea6\ninline bool check_root(int pos){\n\treturn spl[spl[pos].fa].son[0]!=pos&&spl[spl[pos].fa].son[1]!=pos;\n}\ninline int relation(int pos,int fa){\n\treturn spl[fa].son[1]==pos;\n}\ninline void connect(int pos,int fa,int son){\n\tspl[pos].fa=fa;\n\tspl[fa].son[son]=pos;\n}\ninline void pushup(int pos){\n\tspl[pos].minn=v1[pos];\n\tspl[pos].pos=pos;\n\tspl[pos].val=v2[pos]+spl[spl[pos].son[0]].val+spl[spl[pos].son[1]].val;\n\tif(spl[pos].son[0]&&spl[pos].minn>spl[spl[pos].son[0]].minn){\n\t\tspl[pos].pos=spl[spl[pos].son[0]].pos;\n\t\tspl[pos].minn=spl[spl[pos].son[0]].minn;\n\t}\n\tif(spl[pos].son[1]&&spl[pos].minn>spl[spl[pos].son[1]].minn){\n\t\tspl[pos].pos=spl[spl[pos].son[1]].pos;\n\t\tspl[pos].minn=spl[spl[pos].son[1]].minn;\n\t}\n}\ninline void pushdown(int pos){\n\tif(!spl[pos].rev)\n\t\treturn ;\n\tswap(spl[pos].son[0],spl[pos].son[1]);\n\tspl[spl[pos].son[0]].rev^=1;\n\tspl[spl[pos].son[1]].rev^=1;\n\tspl[pos].rev=0;\n}\ninline void pushall(int pos){\n\tif(!check_root(pos))\n\t\tpushall(spl[pos].fa);\n\tpushdown(pos);\n}\nvoid rotate(int pos){\n\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\tint t1=relation(pos,fa),t2=relation(fa,gf);\n\tconnect(spl[pos].son[t1^1],fa,t1);\n\tconnect(fa,pos,t1^1);\n\tspl[pos].fa=gf;\n\tif(spl[gf].son[t2]==fa)\n\t\tspl[gf].son[t2]=pos;\n\tpushup(fa);\n\tpushup(pos);\n}\nvoid splaying(int pos){\n\tpushall(pos);\n\twhile(!check_root(pos)){\n\t\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\t\tif(!check_root(fa))\n\t\t\trelation(pos,fa)^relation(fa,gf)?rotate(pos):rotate(fa);\n\t\trotate(pos);\n\t}\n}\nvoid access(int pos){\n\tint son=0;\n\twhile(pos){\n\t\tsplaying(pos);\n\t\tspl[pos].son[1]=son;\n\t\tpushup(pos);\n\t\tson=pos;\n\t\tpos=spl[pos].fa;\n\t}\n}\nvoid make_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tspl[pos].rev^=1;\n}\nint find_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tpushdown(pos);\n\twhile(spl[pos].son[0]){\n\t\tpos=spl[pos].son[0];\n\t\tpushdown(pos);\n\t}\n\tsplaying(pos);\n\treturn pos;\n}\nvoid link(int x,int y){\n\tmake_root(x);\n\tspl[x].fa=y;\n}\nvoid split(int x,int y){\n\tmake_root(x);\n\taccess(y);\n\tsplaying(y);\n}\nbool check(int x,int y){\n\treturn find_root(x)==find_root(y);\n}\nint main(){\n\tmemset(v1,0x3f,sizeof v1);//memset\u540e\u8fd9\u4e9b\u503c\u5927\u4e8e1e9\uff0c\u53ef\u89c6\u4e3a\u6781\u5927\u503c\n\tint n,m;\n\tcin>>n>>m;\n\tint p,x,y,t,l;\n\tint pos;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s;\n\t\tswitch(s[0]){\n\t\t\tcase 'f':\n\t\t\t\tcin>>p>>x>>y>>t>>l;\n\t\t\t\tp++;\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\tv1[n+p]=t;\n\t\t\t\tv2[n+p]=l;\n\t\t\t\tif(!check(x,y)){\n\t\t\t\t\tlink(x,n+p);\n\t\t\t\t\tlink(n+p,y);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsplit(x,y);\n\t\t\t\t\tpos=spl[y].pos;\n\t\t\t\t\tif(v1[n+p]>v1[pos]){\n\t\t\t\t\t\tsplaying(pos);\n\t\t\t\t\t\tspl[spl[pos].son[0]].fa=spl[spl[pos].son[1]].fa=0;\n\t\t\t\t\t\tlink(x,n+p);\n\t\t\t\t\t\tlink(n+p,y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\tcin>>x>>y;\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\tif(check(x,y)){\n\t\t\t\t\tsplit(x,y);\n\t\t\t\t\tcout<<spl[y].val<<'\\n';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tcout<<\"-1\\n\";\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tcin>>p>>l;\n\t\t\t\tp++;\n\t\t\t\tsplaying(n+p);//\u65cb\u5230\u6839\u4e0a\u65b9\u4fbf\u64cd\u4f5c\n\t\t\t\tv2[n+p]=l;\n\t\t\t\tpushup(n+p);//\u66f4\u65b0\u6700\u5c0f\u503c\u4e0e\u6700\u5c0f\u70b9\u7f16\u53f7\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```",
        "postTime": 1608904873,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6664 \u3010[\u6e05\u534e\u96c6\u8bad2016] \u6e29\u6696\u4f1a\u6307\u5f15\u6211\u4eec\u524d\u884c\u3011"
    }
]