[
    {
        "content": "> [P8454 \u300cSWTR-8\u300d\u8865\u9898\u8ba1\u5212](https://www.luogu.com.cn/problem/P8454)\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u5c0f A \u4e00\u5171\u6709 $n$ \u9053\u9898\u76ee\u6ca1\u6709\u8865\u3002\u8bc4\u4f30\u540e\uff0c\u4ed6\u8ba4\u4e3a\u7b2c $i$ \u9898\u7684\u96be\u5ea6\u4e3a $x_i$\u3002\n\n\u540c\u65f6\uff0c\u4ed6\u5bf9\u81ea\u5df1\u7684\u6c34\u5e73\u6709\u8bc4\u4f30\u503c $w$\u3002\u4ed6\u7684\u6c34\u5e73\u4f1a\u6ce2\u52a8\uff0c\u56e0\u6b64 $w$ \u4f1a\u6539\u53d8\u3002\n\n\u5c0f A \u8ba4\u4e3a\u8865\u96be\u5ea6\u548c\u81ea\u5df1\u6c34\u5e73\u76f8\u8fd1\u7684\u9898\u76ee\uff08\u76f8\u5dee\u4e0d\u8d85\u8fc7 $b_1$\uff09\u80fd\u5e26\u6765\u6536\u76ca $inc$\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u76f8\u5dee\u8fc7\u5927\uff08\u76f8\u5dee\u8d85\u8fc7 $b_2$\uff09\u5219\u6d6a\u8d39\u4e86\u65f6\u95f4\uff0c\u5bfc\u81f4\u8d1f\u6536\u76ca $dec$\u3002\u56e0\u6b64\uff0c\u8865\u7b2c $i$ \u9053\u9898\u7684\u6536\u76ca\u4e3a\n\n$$\n\\begin{cases}\ninc & |x_i - w| \\leq b_1 \\\\\n0 & b_1 < |x_i - w| \\leq b_2 \\\\\ndec & |x_i - w| > b_2 \\\\\n\\end{cases}\n$$\n\n\u4fdd\u8bc1 $b_1 \\leq b_2$ \u4e14 $dec < 0 < inc$\u3002\n\n\u6b64\u5916\uff0c\u5c0f A \u6709\u4e00\u4e9b\u559c\u6b22\u548c\u8ba8\u538c\u7684\u9898\u3002\u5982\u679c\u4ed6\u6ca1\u6709\u8865\u4efb\u4f55\u559c\u6b22\u7684\u9898\uff0c\u6216\u8865\u4e86\u4efb\u4f55\u8ba8\u538c\u7684\u9898\uff0c\u5c31\u4f1a\u4e0d\u9ad8\u5174\u3002\n\n\u5c0f A \u5c06\u9009\u62e9\u4e00\u6bb5\u7f16\u53f7\u8fde\u7eed\u7684\u9898\u76ee\u8fdb\u884c\u8865\u9898\u3002\u4ed6\u5e0c\u671b\u8865\u6bcf\u9053\u9898\u7684\u6536\u76ca\u4e4b\u548c\u6700\u5927\uff0c\u5e76\u4e14\u8865\u5b8c\u9898\u76ee\u540e\u4e0d\u4f1a\u4e0d\u9ad8\u5174\u3002\u8bf7\u4f60\u544a\u8bc9\u4ed6\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\n### \u6570\u636e\u8303\u56f4\n\n- Subtask #1\uff087 points\uff09\uff1a$n, q\\leq 100$\u3002\n- Subtask #2\uff0812 points\uff09\uff1a$n, q\\leq 500$\u3002\u4f9d\u8d56 Subtask #1\u3002\n- Subtask #3\uff0820 points\uff09\uff1a$n, q\\leq 4 \\times 10 ^ 3$\u3002\u4f9d\u8d56 Subtask #2\u3002\n- Subtask #4\uff0825 points\uff09\uff1a$w, x_i \\leq 100$\u3002\n- Subtask #5\uff0811 points\uff09\uff1a$l = 1$\uff0c$h = 0$\u3002\n- Subtask #6\uff0815 points\uff09\uff1a$w, x_i \\leq 10 ^ 5$\u3002\u4f9d\u8d56 Subtask #4\u3002\n- Subtask #7\uff0810 points\uff09\uff1a\u65e0\u7279\u6b8a\u9650\u5236\u3002\u4f9d\u8d56 Subtask #3\uff0c#5\uff0c#6\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff1a\n\n- $1\\leq n, q \\leq 10 ^ 5$\u3002\n- $0\\leq w, x_i \\leq 10 ^ 9$\uff0c$0\\leq b_1 \\leq b_2$ \u4e14 $b_2$ \u4e0d\u5927\u4e8e $w, x_i$ \u4e0a\u754c\u7684\u4e00\u534a\u3002\n- $-10 ^ 4 \\leq dec < 0 < inc \\leq 10 ^ 4$\u3002\n- $1\\leq l, il_i, ih_j \\leq n$\uff0c$0 \\leq h < n$\uff0c$l + h\\leq 5$\u3002\n- \u4fdd\u8bc1 $il$\uff0c$ih$ \u9012\u589e\uff0c\u4e14\u4e00\u7ec4\u8be2\u95ee\u6bcf\u4e2a\u4e0b\u6807\u81f3\u591a\u51fa\u73b0\u4e00\u6b21\u3002\n\n### Sol 1\n\n\u8003\u8651 $n, q \\leq 500$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u8ba8\u538c\u7684\u9898\u5c06\u5e8f\u5217\u5272\u6210\u82e5\u5e72\u8fde\u7eed\u6bb5\u3002\u8fde\u7eed\u6bb5\u4e4b\u95f4\u72ec\u7acb\uff0c\u56e0\u6b64\u5355\u72ec\u8003\u8651\u4e00\u4e2a\u8fde\u7eed\u6bb5\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4 $[l, r]$\uff0c\u679a\u4e3e\u5176\u6240\u6709\u5b50\u533a\u95f4\uff0c\u68c0\u67e5\u662f\u5426\u6709\u559c\u6b22\u7684\u9898\u843d\u5728\u5176\u4e2d\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2q)$\u3002\n\n### Sol 2\n\n\u8003\u8651 $n, q \\leq 4\\times 10 ^ 3$\u3002\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u5408\u6cd5\u7684\u53f3\u7aef\u70b9\u5f62\u6210\u4e00\u6bb5\u533a\u95f4 $[l, r)$\uff0c\u4ece $p$ \u53f3\u8fb9\u7b2c\u4e00\u4e2a\u559c\u6b22\u7684\u9898 $l$ \u5f00\u59cb\uff0c\u7b2c\u4e00\u4e2a\u8ba8\u538c\u7684\u9898 $r$ \u7ed3\u675f\u3002\n\n\u5c06\u533a\u95f4\u6c42\u548c\u5dee\u5206\u8f6c\u5316\u4e3a\u7aef\u70b9\u6700\u503c\uff0c\u6bcf\u6b21\u6539\u53d8 $w$ \u65f6\u66b4\u529b\u91cd\u65b0\u6c42\u524d\u7f00\u548c\uff0c\u533a\u95f4\u6700\u503c\u7528\u7ebf\u6bb5\u6811\u6216 ST \u8868\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nq \\log n)$\u3002\n\n### Sol 3\n\n\u8003\u8651 $x_i, w \\leq 100$\u3002\n\n\u56de\u7b54\u8be2\u95ee\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u5305\u542b\u7684\u559c\u6b22\u7684\u9898\uff0c\u5219\u5bf9\u5e94\u7684\u5408\u6cd5\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u5747\u4e3a\u4e00\u6bb5\u533a\u95f4\uff08\u88ab\u8ba8\u538c\u7684\u9898\u6240\u9650\u5236\uff09\u3002\u533a\u95f4\u67e5\u8be2\u524d\u7f00\u548c\u6700\u5927\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u53ef\u80fd\u7684 $w$ \u4ec5\u6709 $100$ \u79cd\u53d6\u503c\u3002\u5bf9\u6bcf\u79cd $w$ \u7684\u53d6\u503c\u7684\u5bf9\u5e94\u5e8f\u5217\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e4b\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(nw + q\\log n)$\u3002\n\n### Sol 4\n\n\u8003\u8651\u6b63\u89e3\u3002\n\n\u5f53 $w$ \u4ece $1$ \u589e\u5927\u5230 $10 ^ 9$ \u65f6\uff0c\u4ec5\u6709 $\\mathcal{O}(n)$ \u6b21\u6539\u53d8\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u8d21\u732e\u7684\u64cd\u4f5c\u3002\n\n\u5355\u70b9\u4fee\u6539\u76f8\u5f53\u4e8e\u5bf9\u524d\u7f00\u548c\u533a\u95f4\u4fee\u6539\uff0c\u5c06\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u56de\u7b54\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u52a0\u6cd5\u533a\u95f4\u6700\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n(l\\log n + h))$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool Mbe;\nconstexpr int N = 1e5 + 5;\nint S, n, q, w, b1, b2, inc, dec;\nstruct event {\n  int type, x, id, dt;\n  bool operator < (const event &rhs) {\n    if(x != rhs.x) return x < rhs.x;\n    return type < rhs.type;\n  }\n} c[N * 5];\nint cnt, ans[N];\nvector<int> l[N], h[N];\nint laz[N << 2], mx[N << 2], mn[N << 2];\nvoid tag(int x, int v) {laz[x] += v, mx[x] += v, mn[x] += v;}\nvoid down(int x) {if(laz[x]) tag(x << 1, laz[x]), tag(x << 1 | 1, laz[x]), laz[x] = 0;}\nvoid push(int x) {\n  mx[x] = max(mx[x << 1], mx[x << 1 | 1]);\n  mn[x] = min(mn[x << 1], mn[x << 1 | 1]);\n}\nvoid build(int l, int r, int x) {\n  if(l == r) return mx[x] = mn[x] = ::dec * l, void();\n  int m = l + r >> 1;\n  build(l, m, x << 1), build(m + 1, r, x << 1 | 1);\n  push(x);\n}\nvoid modify(int l, int r, int ql, int qr, int x, int v) {\n  if(ql <= l && r <= qr) return tag(x, v);\n  int m = l + r >> 1;\n  down(x);\n  if(ql <= m) modify(l, m, ql, qr, x << 1, v);\n  if(m < qr) modify(m + 1, r, ql, qr, x << 1 | 1, v);\n  push(x);\n}\nint query(int l, int r, int ql, int qr, int x, int type) {\n  int ans = type ? -1e9 : 1e9;\n  if(ql > qr) return ans;\n  if(ql <= l && r <= qr) return type ? mx[x] : mn[x];\n  int m = l + r >> 1;\n  down(x);\n  if(ql <= m) ans = query(l, m, ql, qr, x << 1, type);\n  if(m < qr) {\n    int v = query(m + 1, r, ql, qr, x << 1 | 1, type);\n    ans = type ? max(ans, v) : min(ans, v);\n  }\n  return ans;\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf\\n\", (&Mbe - &Med) / 1048576.0);\n#ifdef ALEX_WEI\n  freopen(\"0.in\", \"r\", stdin);\n  freopen(\"0.out\", \"w\", stdout);\n#endif\n  cin >> S;\n  cin >> n >> q >> w >> b1 >> b2 >> inc >> ::dec;\n  for(int i = 1, x; i <= n; i++) {\n    cin >> x;\n    c[++cnt] = {1, x - b2, i, -::dec};\n    c[++cnt] = {1, x - b1, i, inc};\n    c[++cnt] = {1, x + b1 + 1, i, -inc};\n    c[++cnt] = {1, x + b2 + 1, i, ::dec};\n  }\n  for(int i = 1; i <= q; i++) {\n    int op, L, H, il, ih;\n    cin >> op;\n    if(op == 2) {cin >> w; continue;}\n    cin >> L >> H;\n    while(L--) cin >> il, l[i].push_back(il);\n    while(H--) cin >> ih, h[i].push_back(ih);\n    c[++cnt] = {2, w, i};\n  }\n  sort(c + 1, c + cnt + 1);\n  build(0, n, 1);\n  for(int i = 1; i <= cnt; i++) {\n    event t = c[i];\n    if(t.type == 2) {\n      int id = t.id, res = -1e9, lst = 0, pt = 0;\n      h[id].push_back(n + 1);\n      for(int it : l[id]) {\n        while(it > h[id][pt]) lst = h[id][pt++];\n        res = max(res, query(0, n, it, h[id][pt] - 1, 1, 1) - query(0, n, lst, it - 1, 1, 0));\n      }\n      ans[id] = res;\n    }\n    else modify(0, n, t.id, n, 1, t.dt);\n  }\n  for(int i = 1; i <= q; i++) if(l[i].size()) printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```",
        "postTime": 1659582115,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P8454 \u300cSWTR-8\u300d\u8865\u9898\u8ba1\u5212"
    },
    {
        "content": "~~\u5206\u5757\u4eba\u62a5\u5230~~\n\n\u6839\u636e~~\u6570\u636e\u8303\u56f4~~\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u559c\u6b22\u7684\u9898\u76ee $il_j$\uff0c\u627e\u5230\u5305\u542b $il_j$ \u4e14\u4e0d\u5305\u542b\u4e0d\u559c\u6b22\u7684\u9898\u7684\u6781\u5927\u533a\u95f4\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u627e\u5230\u5305\u542b $il_j$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5047\u8bbe\u8fd9\u4e2a\u5b50\u6bb5\u4e3a $[l, r]$\uff0c\u90a3\u4e48\u6700\u5927\u5b57\u6bb5\u548c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u62c6\u5206\u6210\u4e09\u90e8\u5206\uff1a$[l, il_j - 1]$\uff0c$il_j$\u672c\u8eab\uff0c\u4ee5\u53ca $[il_j + 1, r]$\u3002\u6613\u77e5\u5206\u522b\u6700\u5927\u5316\u7b2c\u4e00\u548c\u7b2c\u4e09\u90e8\u5206\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u4ec5\u8ba8\u8bba\u7b2c\u4e00\u90e8\u5206\uff0c\u5373\u533a\u95f4\u6700\u5927\u540e\u7f00\u548c\u3002\u7b2c\u4e09\u90e8\u5206\uff08\u533a\u95f4\u6700\u5927\u524d\u7f00\u548c\uff09\u4eff\u7167\u7b2c\u4e00\u90e8\u5206\u5373\u53ef\u3002\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u8fd9\u5e94\u8be5\u662f\u4e00\u9053 DS \u9898\u76ee\u3002~~\u6b63\u5e38\u4eba\u73b0\u5728\u5e94\u8be5\u5728\u8003\u8651\u7ebf\u6bb5\u6811~~\u6211\u89c2\u5bdf\u5230\u6570\u636e\u8303\u56f4 $n,q$ \u5747\u5c0f\u4e8e $1e5$\uff0c\u8003\u8651\u5206\u5757\u3002\u5047\u8bbe\u6211\u4eec\u8981\u6c42\u51fa $[l,r]$ \u533a\u95f4\u7684\u6700\u5927\u540e\u7f00\u548c\uff0c\u8bb0 $blk[i]$ \u8868\u793a $i$ \u6240\u5728\u7684\u5757\uff0c$B$ \u8868\u793a\u5757\u5927\u5c0f\uff0c\u5f53\u524d\u8003\u8651\u7684\u540e\u7f00\u8bb0\u4e3a $[p, r]$\n\n\u9996\u5148\u5bf9\u4e8e $blk[p] = blk[r]$ \u7684\u60c5\u51b5\u66b4\u529b\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(B)$\u3002\n\n\u5bf9\u4e8e $blk[l] < blk[p] < blk[r]$ \u7684\u60c5\u51b5\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a $blk[p]$\uff0c\u5bb9\u6613\u53d1\u73b0\u6b64\u65f6\u53ea\u8981\u77e5\u9053 $[blk[p] + 1, blk[r])$ \u8fd9\u4e9b\u5757\u7684\u603b\u548c\uff0c\u4ee5\u53ca $blk[p]$ \u7684\u5757\u5185\u6700\u5927\u540e\u7f00\uff0c\u5c31\u53ef\u4ee5 $O(\\frac{N}{B})$\uff08\u679a\u4e3e\u7684\u590d\u6742\u5ea6\uff09\u6c42\u51fa\u6b64\u65f6\u7684\u7b54\u6848\u3002\u8fd9\u4e9b\u5c31\u662f\u6211\u4eec\u8981\u9884\u5904\u7406\u7684\u5185\u5bb9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684 $w$\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u4e00\u4e2a\u56fa\u5b9a\u7684\u6536\u76ca\uff08\u503c\uff09\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5757 $O(B)$ \u66b4\u529b\u6c42\u51fa\u6700\u5927\u540e\u7f00\u548c\u4ee5\u53ca\u603b\u548c\u3002\u95ee\u9898\u5728\u4e8e $w$ \u4e00\u5171\u6709 $O(Q)$ \u79cd\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a $w$ \u90fd\u66b4\u529b\u7b97\u4e00\u904d\uff0c\u590d\u6742\u5ea6\u5c06\u662f $O(NQ)$\uff0c\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u4ed4\u7ec6\u8003\u8651\uff0c\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u5728\u4e4e $w$ \u662f\u5426\u6709\u53d8\u5316\uff0c\u6211\u4eec\u4ec5\u8003\u8651\u5757\u5185\u503c\u662f\u5426\u53d1\u751f\u53d8\u5316\u3002\u8003\u8651\u5bf9\u4e8e\u5757\u5185\u6bcf\u4e00\u9053\u9898 $i$\uff0c\u4ec5\u4ec5\u5728 $w$ \u8d8a\u8fc7 $x_i - b_1, x_i - b_2, x_i + b2, x_i + b1$ \u8fd9\u56db\u4e2a\u5206\u754c\u70b9\u65f6\u503c\u4f1a\u4ea7\u751f\u53d8\u5316\u3002\u8003\u8651\u5bf9\u6240\u6709 $w$ \u6392\u5e8f\uff0c\u90a3\u4e48\u6240\u6709\u503c\u5206\u522b\u53ea\u4f1a\u53d8\u5316\u56db\u6b21\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66b4\u529b\u7b97 $O(B)$ \u6b21\u5373\u53ef\u3002\u5355\u5757\u590d\u6742\u5ea6 $O(B^2)$\uff0c\u6700\u7ec8\u603b\u590d\u6742\u5ea6\u4e3a $O(NB)$\u3002\n\n\u8981\u5224\u65ad\u503c\u662f\u5426\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u5206\u754c\u70b9\u6392\u5e8f\uff0c\u8bb0\u4e00\u4e2a\u6307\u9488\u8868\u793a $w$ \u5f53\u524d\u5728\u54ea\u4e2a\u5206\u754c\u70b9\u4e4b\u524d\u3002\u6ce8\u610f\u5f00\u95ed\u533a\u95f4\u95ee\u9898\u3002\uff08\u6211\u4ee3\u7801\u7528\u7684 upper_bound \u591a\u4e00\u4e2a log\uff09\u3002\n\n\u6700\u540e\u5bf9\u4e8e $blk[p] = blk[l]$ \u7684\u60c5\u51b5\uff0c\u5229\u7528\u521a\u624d\u6c42\u51fa\u7684 $(blk[l], blk[r])$ \uff08\u8fd9\u662f\u5f00\u533a\u95f4\uff09\u7684\u5757\u603b\u548c\uff0c$O(B)$ \u66b4\u529b\u5373\u53ef\uff0c\u6ce8\u610f $blk[r]$ \u5185\u7684\u503c\u4e0d\u8981\u6f0f\u4e86\uff08\u867d\u7136\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u5c31\u7b97\u4f60\u771f\u7684\u5fd8\u4e86\uff0c\u7b54\u6848\u4e5f\u4e0d\u592a\u4f1a\u6f0f\u6389\u8fd9\u90e8\u5206 :)\u3002\n\n\u5904\u7406\u8be2\u95ee\u7684\u603b\u590d\u6742\u5ea6 $O(QB + \\frac{NQ}{B})$\n\n\u603b\u590d\u6742\u5ea6 $O(QB + NB + \\frac{NQ}{B})$\uff0c\u6b63\u5e38\u53d6 $B = \\sqrt N$ \u5373\u53ef\u3002\n\n```cpp\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\n#include<vector>\n#define getu() getchar_unlocked()\n#define miu 100007\nusing namespace std;\ninline int read() {\n    register int x = 0, f = 1; register char ch = getu();\n    while(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getu();}\n    while(ch >= '0' && ch <= '9') {x = x * 10 + ch - 48; ch = getu();}\n    return x * f;\n}\nint S;\nint n, m, B;\nint b1, b2, v1, v2;\nint a[miu], blk[miu], lb[327], rb[327];\nint rm[miu][327], lm[miu][327], sum[miu][327];\nvector<int> s[327];\nstruct alter {\n    int w, id;\n    inline bool operator < (const alter & b) const {\n        return w < b.w;\n    }\n}e[miu];\nstruct query {\n    int id, l, h;\n    int il[5], ih[5];\n}q[miu];\nint op[miu];\ninline int chk(int nowd) {\n    return nowd <= b1 ? v1 : (nowd > b2 ? v2 : 0);\n}\nint decy[miu];\nsigned main() {\n    S = read();\n    n = read(); m = read(); e[0].w = read(); b1 = read(); b2 = read(); v1 = read(); v2 = read();\n    B = sqrt(n);\n    for(int i = 1; i <= n; ++i) {\n        a[i] = read();\n        blk[i] = (i - 1) / B + 1;\n        s[blk[i]].push_back(a[i] - b2);\n        s[blk[i]].push_back(a[i] - b1);\n        s[blk[i]].push_back(a[i] + b1 + 1);\n        s[blk[i]].push_back(a[i] + b2 + 1);\n    }\n    for(int i = 1; i <= blk[n]; ++i) {\n        lb[i] = (i - 1) * B + 1;\n        rb[i] = i * B;\n    }\n    rb[blk[n]] = n;\n    lb[blk[n + 1] = blk[n] + 1] = n + 1;\n    int nowid = 0, qid = 0;\n    for(int i = 1; i <= m; ++i) {\n        op[i] = read();\n        if(op[i] == 2) {\n            if(op[i - 1] == 1) ++nowid;\n            e[nowid].w = read();\n            e[nowid].id = nowid;\n        } else {\n            q[++qid].id = nowid; q[qid].l = read(); q[qid].h = read();\n            for(int k = 0; k < q[qid].l; ++k) {\n                q[qid].il[k] = read();\n            }\n            for(int k = 0; k < q[qid].h; ++k) {\n                q[qid].ih[k] = read();\n            }\n        }\n    }\n    sort(e, e + nowid + 1);\n    for(int i = 0; i <= nowid; ++i) {\n        decy[e[i].id] = i;\n    }\n    for(int i = 1; i <= blk[n]; ++i) {\n        sort(s[i].begin(), s[i].end());\n        int tmpr = 0, tmpl = 0, tl = upper_bound(s[i].begin(), s[i].end(), e[0].w) - s[i].begin();\n        for(int j = lb[i]; j <= rb[i]; ++j) {\n            sum[0][i] += chk(abs(a[j] - e[0].w));\n            lm[0][i] = max(lm[0][i], sum[0][i]);\n        }\n        for(int j = rb[i]; j >= lb[i]; --j) {\n            tmpr += chk(abs(a[j] - e[0].w));\n            rm[0][i] = max(rm[0][i], tmpr);\n        }\n        for(int k = 1; k <= nowid; ++k) {\n            int nxt = upper_bound(s[i].begin(), s[i].end(), e[k].w) - s[i].begin(); \n            if(tl == nxt) {\n                sum[k][i] = sum[k - 1][i];\n                lm[k][i] = lm[k - 1][i];\n                rm[k][i] = rm[k - 1][i];\n                continue;\n            }\n            int & nows = sum[k][i], & nowl = lm[k][i], & nowr = rm[k][i];\n            tl = nxt; tmpr = 0;\n            for(int j = lb[i]; j <= rb[i]; ++j) {\n                nows += chk(abs(a[j] - e[k].w));\n                nowl = max(nowl, nows);\n            }\n            for(int j = rb[i]; j >= lb[i]; --j) {\n                tmpr += chk(abs(a[j] - e[k].w));\n                nowr = max(nowr, tmpr);\n            }\n        } \n    }\n    for(int i = 1; i <= qid; ++i) {\n        int tm = decy[q[i].id], fans = -1000000000;\n        for(int px = 0; px < q[i].l; ++px) {\n            int x = q[i].il[px];\n            int ll = 0, rr = n + 1;\n            for(int py = 0; py < q[i].h; ++py) {\n                int y = q[i].ih[py];\n                if(y < x) ll = max(ll, y);\n                else if(y > x) rr = min(rr, y);\n            }\n            int lans = 0, lsum = 0;\n            if(blk[ll + 1] == blk[x]) {\n                for(int j = x - 1; j > ll; --j) {\n                    lsum += chk(abs(e[tm].w - a[j]));\n                    lans = max(lans, lsum);\n                }\n            } else {\n                for(int j = x - 1; j >= lb[blk[x]]; --j) {\n                    lsum += chk(abs(e[tm].w - a[j]));\n                    lans = max(lans, lsum);\n                }\n                for(int J = blk[x] - 1; J > blk[ll]; --J) {\n                    lans = max(lans, lsum + rm[tm][J]);\n                    lsum += sum[tm][J];\n                }\n                for(int j = rb[blk[ll]]; j > ll; --j) {\n                    lsum += chk(abs(e[tm].w - a[j]));\n                    lans = max(lans, lsum);\n                }\n            }\n            int rans = 0, rsum = 0;\n            if(blk[rr - 1] == blk[x]) {\n                for(int j = x + 1; j < rr; ++j) {\n                    rsum += chk(abs(e[tm].w - a[j]));\n                    rans = max(rans, rsum);\n                }\n            } else {\n                for(int j = x + 1; j <= rb[blk[x]]; ++j) {\n                    rsum += chk(abs(e[tm].w - a[j]));\n                    rans = max(rans, rsum);\n                }\n                for(int J = blk[x] + 1; J < blk[rr]; ++J) {\n                    rans = max(rans, rsum + lm[tm][J]);\n                    rsum += sum[tm][J];\n                }\n                for(int j = lb[blk[rr]]; j < rr; ++j) {\n                    rsum += chk(abs(e[tm].w - a[j]));\n                    rans = max(rans, rsum);\n                }\n            }\n            fans = max(fans, lans + rans + chk(abs(e[tm].w - a[x])));\n        }\n        printf(\"%d\\n\", fans);\n    }\n    return 0;\n}\n\n```\n\n\n\u5173\u4e8e\u5e38\u6570\uff0c\u4e00\u70b9\u95f2\u8bdd\uff1a\n\n~~\u89c2\u5bdf\u63d0\u4ea4\u8bb0\u5f55\u53ef\u4ee5\u5f97\u77e5~~\u6211\u8d5b\u65f6 T \u4e86\u3002\u8fd9\u4e00\u65b9\u9762\u662f\u590d\u6742\u5ea6\u7684\u95ee\u9898\uff08\u591a\u4e86\u4e2a log\uff09\uff0c\u4e00\u65b9\u9762\u4e5f\u662f\u5e38\u6570\u7684\u95ee\u9898\u3002\n\n\u672c\u5b9e\u73b0\u6709\u4e24\u4e2a\u91cd\u8981\u5361\u5e38\u3002\n\n1.\u5254\u9664\u65e0\u7528\u8be2\u95ee\uff0c\u53ef\u4ee5\u770b\u5230\u901a\u8fc7\u8bb0\u5f55 $op$ \u5b9e\u73b0\uff0c\u8fd9\u662f trivial \u7684\u3002\n\n2.\u51cf\u5c11 Cache miss\u3002 \u6309\u7167\u6211\u4e0a\u9762\u8fd9\u4efd\u5b9e\u73b0\uff0c\u5982\u679c\u628a $rm, lm, sum$ \u6570\u7ec4\u5185\u5916\u4e24\u5c42\u4e92\u6362\uff0c\u4f1a\u76f4\u63a5\u4ece 2.7s AC T \u6210 3.7s\uff01\u8fd9\u662f\u56e0\u4e3a\u5728 $J$ \u7684\u5faa\u73af\u4e2d\uff0c\u51fa\u73b0\u4e86$O(\n\\frac{NQ}{B})$ \u7684 Cache miss\u2026\u2026",
        "postTime": 1659836290,
        "uid": 145994,
        "name": "\u8036\u68a6\u52a0\u5f97",
        "ccfLevel": 8,
        "title": "P8454 \u300cSWTR-8\u300d\u8865\u9898\u8ba1\u5212 \u9898\u89e3"
    },
    {
        "content": "\u6807\u9898\u5176\u5b9e\u662f\u8fd9\u6837\u7684\uff0c\u4f46\u662f\u592a\u957f\u4e86\u5199\u4e0d\u4e0b\uff1a  \n>\u96f6\u2605\u70b9\u2606\u8ba8\u2605\u8bba\u3000\u79bb\u2606\u7ebf\u2605\u95ee\u2606\u8be2  \n\u54c8\u2606\u5e0c\u2605\u79bb\u2606\u6563\u3000\u6570\u2605\u7ec4\u2606\u91cd\u2605\u6392  \n\u540e\u2605\u7f00\u2606\u4fee\u2605\u6539\u3000\u533a\u2606\u95f4\u2605\u6700\u2606\u503c  \n\u7ec6\u2606\u8282\u2605\u585e\u2606\u7206\u3000\u8010\u2605\u529b\u2606\u8003\u2605\u9a8c  \n\uff13\u2605\uff2b\u2606\u4ee3\u2605\u7801\u3000\u9080\u2606\u60a8\u2605\u6765\u2606\u723d\n\n[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.com.cn/problem/P8454)[ ](https://vdse.bdstatic.com//192d9a98d782d9c74c96f09db9378d93.mp4)[link ](https://www.luogu.com.cn/problem/P8454)\n\n\u6211\u4eec\u5148\u4e0d\u7ba1\u6bd2\u7624\u7684\u6536\u76ca\u8ba1\u7b97\u548c\u5168\u5c40\u4fee\u6539\uff0c\u51fa\u4e00\u9053\u7b80\u5316\u7248\u7684\u9898\uff1a\n>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u6574\u6570\u5e8f\u5217\uff0c$q$ \u6b21\u8be2\u95ee\u5408\u6cd5\u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002  \n\u5408\u6cd5\u7684\u5b9a\u4e49\u662f`\u559c\u6b22\u7684\u9898`\u81f3\u5c11\u9009\u4e00\u9053\u5e76\u4e14`\u4e0d\u559c\u6b22\u7684\u9898`\u4e00\u9053\u90fd\u4e0d\u9009\u3002  \n\u6570\u636e\u8303\u56f4\uff1a$\\max{\\{n,q\\}}\\le10^5$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7684`\u559c\u6b22\u7684\u9898`\u548c`\u4e0d\u559c\u6b22\u7684\u9898`\u52a0\u8d77\u6765\u6700\u591a $5$ \u9053\u3002\n\n\u663e\u7136\u559c\u6b22\u7684\u9898\u76ee\u4e92\u4e0d\u5e72\u6270\uff0c\u53ef\u4ee5\u4e00\u9053\u4e00\u9053\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u559c\u6b22\u7684\u9898\u76ee $p$\uff0c\u5305\u542b\u5b83\u7684\u4e00\u4e2a\u5b50\u6bb5\u4e00\u5b9a\u80fd\u8868\u793a\u6210 \u201c$1\\sim p$ \u7684\u4e00\u4e2a\u540e\u7f00 $\\cup$ $p+1\\sim n$ \u7684\u4e00\u4e2a\u524d\u7f00\u201d\u7684\u5f62\u5f0f\uff1b\u800c\u7531\u4e8e\u5408\u6cd5\u5b50\u6bb5\u4e0d\u80fd\u5305\u542b\u4e0d\u559c\u6b22\u7684\u9898\uff0c\u8fd9\u4e2a\u540e\u7f00\u548c\u524d\u7f00\u7684\u8fb9\u754c\u5176\u5b9e\u662f\u79bb\u6b64\u9898\u6700\u63a5\u8fd1\u7684\u4e0d\u559c\u6b22\u7684\u9898\u7684\u7f16\u53f7\u3002\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u662f\u52a8\u6001\u95ee\u8be2\u533a\u95f4\u524d / \u540e\u7f00\u6700\u5927\u548c\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u53d1\u73b0\u662f\u533a\u95f4\u548c\u53ef\u4ee5\u8868\u793a\u6210\u524d\u7f00\u548c\u7684\u5dee\uff1b\u800c\u7531\u4e8e\u5de6 / \u53f3\u7aef\u70b9\u56fa\u5b9a\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\u53e6\u4e00\u7aef\u70b9\u7684\u533a\u95f4\u6700\u503c\u3002\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3001ST \u8868\u7b49\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u5f15\u5165\u5355\u70b9\u4fee\u6539\uff0c\u5219\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u5e26\u6807\u8bb0\u7ebf\u6bb5\u6811\u8f7b\u677e\u89e3\u51b3\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\u5e8f\u5217\u7684\u5168\u5c40\u4fee\u6539\u96be\u4ee5\u5904\u7406\u3002\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e0b\u539f\u9898\u7684\u6536\u76ca\u8ba1\u7b97\u65b9\u5f0f\uff1a$\\text{\\color{white}{\u8fd9\u6bb5\u65b9\u7a0b\u662f\u7528 exlg \u8d3a\u6765\u7684\uff0cfx \u767d\u4e1d lg /qiang}}$\n\n$$\n\\begin{cases}\ninc&|x_i-w|\\leq b_1\\\\\n0&b_1<|x_i-w|\\leq b_2\\\\\ndec&|x_i-w|>b_2\\\\\n\\end{cases}\n$$\n\n\u663e\u7136\u6bcf\u4e2a\u5143\u7d20\u7684\u6536\u76ca\u6700\u591a\u53ea\u6709 $3$ \u79cd\u53d6\u503c\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u5728\u56fa\u5b9a $x_i$ \u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709 $w$ \u7684\u53d6\u503c\u5212\u5206\u6210 $5$ \u4e2a\u8fde\u7eed\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u5185\u6700\u7ec8\u7684\u6536\u76ca\u8ba1\u7b97\u503c\u76f8\u540c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $x_i$ \u90fd\u753b\u51fa\u8fd9 $5$ \u4e2a\u533a\u95f4\u53ef\u4ee5\u5f97\u5230\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/naj7ehum.png)\n\n\u4e8e\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u7f8e\u597d\u7684\u5e7b\u60f3\uff1a\u5982\u679c $w$ \u7684\u4fee\u6539\u662f\u5355\u8c03\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u533a\u95f4\u5206\u754c\u70b9\u6392\u5e8f\u53cc\u6e38\u6807\u4fee\u6539\uff0c\u6700\u7ec8\u6700\u591a $4n$ \u6b21\u5355\u70b9\u4fee\u6539\uff01\u8fd9\u4e8b ao \u7684\uff01\uff011\n\n\u4e0d\u96be\u53d1\u73b0\u672c\u9898\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u4e8e\u662f\u53ef\u4ee5\u5c06\u95ee\u8be2\u4e0e\u524d\u9a71\u4fee\u6539\u7ed1\u5b9a\u7136\u540e\u6309 $w$ \u8d60\u5e8f\u5904\u7406\u3002\u7f8e\u68a6\u6210\u771f\uff01\n\n>\u76ee\u524d\u601d\u7ef4\u96be\u5ea6\uff1a\u4e0b\u4f4d\u7eff  \n\u5b9e\u9645\u4ee3\u7801\u96be\u5ea6\uff1a\u4e0a\u4f4d\u84dd  \n\u5206\u6790\u7ed3\u679c\uff1a\u6ca1\u6709\u6076\u8bc4 :/\n\n\u662f\u7684\uff0c\u5b9e\u73b0\u7684\u65f6\u5019\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\u8981\u8003\u8651\u3002\uff08\u6ce8\u610f\u4e0d\u662f\u6613\u9519\u70b9\uff0c\u800c\u662f\u4e00\u4e9b\u201c\u6211\u5927\u6982\u77e5\u9053\u8fd9\u91cc\u8981\u5e72\u5565\uff0c\u4f46\u662f\u597d\u96be\u5199\u554a\u201d\u7684\u5730\u65b9\uff09\n\n1. \u5982\u4f55\u628a\u95ee\u8be2\u548c\u4fee\u6539\u7ed1\u5b9a\uff1f  \n\u4f60\u53ef\u4ee5\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u4ee3\u8868\uff0c\u7136\u540e\u5411\u90bb\u63a5\u8868\u91cc\u63d2\u5165\uff0c\u8fd9\u6837w\u4e5f\u987a\u4fbf\u6876\u6392\u597d\u4e86\u3002\u4f46\u8fd9\u6837\u4f1a\u5e26\u6765\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff1a\n2. \u503c\u57df\u592a\u5927\u4e86 vector \u5f00\u4e0d\u4e0b\u600e\u4e48\u529e\uff1f  \n~~\u6446\u70c2\u62ff\u90e8\u5206\u5206~~ \u79bb\u6563\u5316\u5c31\u884c\u3002\n3. \u79bb\u6563\u5316\u8981\u5148\u5168\u90e8\u5b58\u4e0b\u6765\uff0c\u4ee3\u7801\u597d\u957f\u2026\u2026  \n\u4f60\u53ef\u4ee5\u4e00\u8fb9\u8bfb\u5165\u4e00\u8fb9\u628a\u6ca1\u51fa\u73b0\u8fc7\u7684\u63d2\u5165\u54c8\u5e0c\u8868\uff0c\u7136\u540e\u518d\u6309\u7167\u5b9e\u9645\u503c\u6784\u9020\u7f6e\u6362\u3002\n\n\u8fd8\u6709\u5c31\u662f\u6613\u9519\u70b9\u6bd4\u5982\uff1a\n- \u7528\u4e8e\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u7ebf\u6bb5\u6811\u5fd8\u8bb0\u5f00 0 \u7684\u4e0b\u6807\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u521d\u59cb\u5316\u503c\u5199\u9519\u3002\n- \u5fd8 pushdown/up\uff0c\u6700\u5927\u6700\u5c0f\u503c\u5199\u9519\u7b49\u7ebf\u6bb5\u6811\u677f\u5b50\u9519\u8bef\u3002\n- \u533a\u95f4\u5206\u754c\u70b9\u6ca1\u8003\u8651\u5f00\u95ed\u4e71\u5199\u5bfc\u81f4\u4fee\u6539\u4f4d\u7f6e\u9519\u8bef\u3002\n- \u4e0d\u77e5\u9053 `dec` \u662f ambiguous \u7684\uff0c\u5f00\u4e86\u5168\u5c40\u53d8\u91cf\uff0c\u88ab\u7f16\u8bd1\u5668\u5751\u60e8\u3002\uff08CE\\*114514\uff09\n\n[\uff13\u2605\uff2b\u2606\u4ee3\u2605\u7801](https://www.luogu.com.cn/paste/vvdcgti4)[ ](https://vdse.bdstatic.com//192d9a98d782d9c74c96f09db9378d93.mp4)[link](https://www.luogu.com.cn/paste/vvdcgti4)\n\n[\u526a\u8d34\u677f](https://www.luogu.com.cn/paste/p5ln1eir)[ ](https://vdse.bdstatic.com//192d9a98d782d9c74c96f09db9378d93.mp4)[\u5907\u4efd](https://www.luogu.com.cn/paste/p5ln1eir)",
        "postTime": 1659432281,
        "uid": 138492,
        "name": "cinout001_Wii",
        "ccfLevel": 0,
        "title": "\uff13\u2605\uff2b\u2606\u4ee3\u2605\u7801\u3000\u9080\u2606\u60a8\u2605\u6765\u2606\u723d"
    },
    {
        "content": "\u8d5b\u65f6\u8c03\u4e86\u534a\u5929\u7ed3\u679c\u662f\u7ebf\u6bb5\u6811\u5de6\u53f3\u533a\u95f4\u5408\u5e76\u5199\u6302\u4e86 /kx\n\n\u8bbe $v_i$ \u4e3a $i$ \u7684\u6536\u76ca\u3002\n\n\u5047\u5982 $w$ \u4e0d\u53d8\uff0c\u6211\u4eec\u53d1\u73b0 $v_i$ \u7684\u503c\u662f\u56fa\u5b9a\u7684\uff0c\u8003\u8651\u5982\u4f55\u5904\u7406\u8be2\u95ee\u3002\n\n\u53d1\u73b0\u6bcf\u6b21\u8be2\u95ee\u7684\u559c\u6b22\u7684\u4f4d\u7f6e\u7684\u6570\u91cf\u5f88\u5c11\uff0c\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u559c\u6b22\u7684\u4f4d\u7f6e $pos$\uff0c\u6c42\u5305\u542b $pos$\uff0c\u5e76\u4e14\u4e0d\u5305\u542b\u4e0d\u559c\u6b22\u7684\u4f4d\u7f6e\u7684\u533a\u95f4 $[l,r]$ \u7684 $\\sum_{i=l}^rv_i$ \u7684\u6700\u5927\u503c\u3002  \n\uff08\u6b64\u5904\u7684 $l$ \u548c\u9898\u9762\u4e2d\u7684 $l$ \u542b\u4e49\u4e0d\u4e00\u6837\uff09\n\n\u628a\u533a\u95f4 $[l,r]$ \u6309 $pos$ \u5206\u6210 $[l,pos]$ \u548c $[pos+1,r]$ \u4e24\u6bb5\u3002\n\n\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2a $l$\uff0c\u4f7f\u5f97 $\\sum_{i=l}^{pos} v_i$ \u6700\u5927\u5e76\u4e14 $[l,pos]$ \u4e0d\u5305\u542b\u4e0d\u559c\u6b22\u7684\u4f4d\u7f6e\u3002$r$ \u540c\u7406\u3002\uff08$l\\leq pos$\uff0c$r\\ge pos-1$\uff0c\u56e0\u4e3a $pos$ \u5fc5\u987b\u9009\uff09\n\n\u56e0\u4e3a\u4e0d\u559c\u6b22\u7684\u4f4d\u7f6e\u4e5f\u5f88\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cc\u6307\u9488\u6c42\u51fa\u4e00\u4e2a\u559c\u6b22\u7684\u4f4d\u7f6e\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u4e0d\u559c\u6b22\u7684\u4f4d\u7f6e $p$ \u548c $q$\u3002\uff08\u5047\u8bbe $0$ \u548c $n+1$ \u4e5f\u662f\u4e0d\u559c\u6b22\u7684\u4f4d\u7f6e\uff09\n\n\u4e8e\u662f\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u533a\u95f4 $[p+1,pos]$ \u7684\u540e\u7f00\u548c\u7684\u6700\u5927\u503c\u4e0e\u533a\u95f4 $[pos+1,q-1]$ \u7684\u524d\u7f00\u548c\u7684\u6700\u5927\u503c\u3002\u8fd9\u662f\u7ebf\u6bb5\u6811\u7684\u7ecf\u5178\u95ee\u9898\u3002\uff08\u53ef\u4ee5\u53c2\u8003[\u6b64\u9898](https://www.luogu.com.cn/problem/SP1043)\uff09\n\n\u4f46\u662f $w$ \u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5982\u4f55\u7ef4\u62a4 $v_i$\u3002\n\n\u6211\u4eec\u5c06 $v_i$ \u770b\u4f5c\u5173\u4e8e $|x_i-w|$ \u7684\u51fd\u6570\uff0c\u53d1\u73b0 $|x_i-w|$ \u4e0d\u65ad\u53d8\u5927\u7684\u65f6\u5019\uff0c$v_i$ \u7684\u503c\u53ea\u4f1a\u5728\u4e24\u4e2a\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\uff0c$w$ \u4ece $-\\infty$ \u5230 $+\\infty$ \u4e0d\u65ad\u53d8\u5927\u7684\u65f6\u5019\uff0c$v_i$ \u7684\u503c\u4f1a\u5728\u56db\u4e2a\u4f4d\u7f6e\u53d1\u751f\u6539\u53d8\uff0c\u5373\u5206\u6210\u4e94\u6bb5\u3002\n\n- $w\\in[-\\infty,x_i-b2)$\uff0c$v_i=dec$\u3002\n\n- $w\\in[x_i-b2,x_i-b1)$\uff0c$v_i=0$\u3002\n\n- $w\\in[x_i-b1,x_i+b1]$\uff0c$v_i=inc$\u3002\n\n- $w\\in(x_i+b1,x_i+b2]$\uff0c$v_i=0$\u3002\n\n- $w\\in(x_i+b2,+\\infty)$\uff0c$v_i=dec$\u3002\n\n\u6211\u4eec\u53d1\u73b0 $w$ \u4e0d\u65ad\u53d8\u5927\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709 $v_i$ \u7684\u503c\u603b\u5171\u53d8\u5316 $4n$ \u6b21\u3002\n\n\u8003\u8651\u5c06\u8be2\u95ee\u79bb\u7ebf\u5e76\u6309 $w$ \u6392\u5e8f\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a $v_i$ \u4f1a\u88ab\u54ea\u4e9b $w$ \u6539\u53d8\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n[code](https://www.luogu.com.cn/paste/nxeugzra)",
        "postTime": 1659199245,
        "uid": 639649,
        "name": "KemononeRou",
        "ccfLevel": 0,
        "title": "P8454"
    },
    {
        "content": "\n## \u524d\u8a00\n\n*\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u672c\u6765\u51c6\u5907\u7528 java\u5199\u7684\uff0c\u5728 TLE \u4e86\u65e0\u6570\u6b21\u4e4b\u540e\u8fd8\u662f\u59a5\u534f\u7528 c++ \u5199\u4e86\u3002\u3002\u3002*\n\n\u82b1\u4e861\u5929\u5de6\u53f3\u7684\u65f6\u95f4\u7ec8\u4e8e\u7ed9\u505a\u51fa\u6765\u4e86(\u8001\u83dc\u9e21\u4e86)\uff0c\u96be\u5230\u6211\u7684\u5e76\u4e0d\u662f\u7ebf\u6bb5\u6811\uff0c\u800c\u662f\u90a3\u4e2a\u5206\u6bb5\u3002\u5927\u4f6c\u4eec\u7684\u4ee3\u7801\u7684\u5199\u7684\u6709\u4ebf\u70b9\u590d\u6742\uff0c\u5bf9\u6211\u8fd9\u79cd\u83dc\u9e21\u5f88\u4e0d\u53cb\u597d\u3002\n\n\u540e\u9762\u628a\u5927\u4f6c\u7684\u4ee3\u7801\u5b66\u4e60(~~\u6284~~)\u4e86\u4e00\u904d(\u6211\u662f java \u5199\u7684\uff0c\u4ea4\u4e0a\u53bb\u7ed3\u679c T \u4e86)\uff0c\u603b\u7b97\u662f\u5927\u81f4\u7ed9\u7406\u660e\u767d\u4e86\uff0c\u7136\u540e\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u7248\u672c\uff0c\u5e94\u8be5\u5f88\u5bb9\u6613\u5c31\u80fd\u770b\u61c2\u3002\n\n\u6211\u7684\u4ee3\u7801\u91cc\u9762\u7ebf\u6bb5\u6811\u90e8\u5206\u5199\u7684\u5f88\u62c9\uff0c\u5982\u679c\u4f60\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u6c42\u6700\u5927\u5b50\u6bb5\u548c\u7684\u8bdd\u8bf7\u5148\u53bb\u505a\u4e00\u4e0b\u8fd9\u9053\u9898: [P4513 \u5c0f\u767d\u901b\u516c\u56ed](https://www.luogu.com.cn/problem/P4513)\n\n## \u601d\u8def\n\u8fd9\u91cc\u4e3b\u8981\u8bb2\u5206\u6bb5\u7684\u5199\u6cd5\uff0c\u7ebf\u6bb5\u6811\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\n\u5982\u679c\u4f60\u770b\u8fc7\u522b\u7684\u9898\u89e3\uff0c\u5e94\u8be5\u77e5\u9053\u6211\u4eec\u4f1a\u628a\u8f93\u5165\u7684 $w$ \u5b58\u8d77\u6765\uff0c\u7136\u540e\u6309\u7167\u9012\u589e\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u9012\u589e\u5462\uff1f\n\n**\u5148\u6765\u770b\u5982\u679c\u4e0d\u9012\u589e\uff1a**\n\n\u5bf9\u4e8e\u6bcf\u6b21 $op$ == 2 \u6211\u4eec\u53ea\u80fd\u5bf9\u6240\u6709\u8282\u70b9\u8fdb\u884c\u904d\u5386\u4fee\u6539\uff0c\u8fd9\u6837\u80af\u5b9a\u4f1a\u76f4\u63a5 T \u6389\uff0c\u800c\u4e14\u6211\u4eec\u4e5f\u5f88\u96be\u5199\u51fa\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u7b97\u6cd5\u6765\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6bcf\u6b21\u66f4\u65b0\u81f3\u5c11\u8981\u5904\u7406 $n$ \u6b21( $n$ \u4e2a\u8282\u70b9\u904d\u5386\u4e00\u6b21)\uff0c\u56e0\u4e3a\u66f4\u65b0\u4e0d\u662f\u8fde\u7eed\u7684\uff0c\u53ea\u80fd\u6bcf\u4e2a\u8282\u70b9\u4e00\u4e2a\u4e00\u4e2a\u7684\u68c0\u67e5\u3002\n\n\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\uff0c\u5c31\u662f\u8fb9\u8f93\u5165\u8fb9\u5904\u7406\uff0c\u4fee\u6539\u64cd\u4f5c\u975e\u5e38\u9ebb\u70e6\uff01\n\n**\u5982\u679c\u6309\u7167\u9012\u589e\u5904\u7406**\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u9053\u9898\uff0c\u90fd\u53ef\u4ee5\u7ed9\u5b83\u5206\u62105\u4e2a\u533a\u95f4( $b1$ = $b2$ \u65f6\u4e3a3\u4e2a\uff0c\u6b64\u65f6\u6ca1\u6709\u6743\u503c\u4e3a0\u7684\u533a\u95f4)\n\n![\u6f14\u793a](https://cdn.luogu.com.cn/upload/image_hosting/xn901hen.png)\n\n\u7ea2\u8272\u90e8\u5206\u4ee3\u8868\u6536\u76ca\u4e3a $dec$\uff0c\u84dd\u8272\u4e3a`0`\uff0c\u7eff\u8272\u4e3a $inc$\n\n\u5982\u679c\u6211\u4eec\u51c6\u5907\u4e00\u6761\u7ebf\uff0c\u4ece\u4e0b\u5f80\u4e0a\u626b\u4e0a\u53bb\uff0c\u53ef\u4ee5\u53d1\u73b0**\u6bcf\u9053\u9898\u6700\u591a\u66f4\u65b04\u6b21**\uff0c\u4e5f\u5c31\u662f\u6574\u4f53\u6700\u591a\u66f4\u65b0 4$n$ \u6b21\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u4e48\u53bb\u66f4\u65b0\u5462\uff1f\n\n\u5176\u5b9e\u5c31\u8ddf\u56fe\u4e0a\u9762\u4e00\u6837\uff0c\u628a\u6bcf\u9053\u9898\u5206\u62104\u5757\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662f5\u5757\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u8d77\u59cb\u7684\u65f6\u5019\u4ece\u6700\u5e95\u4e0b\u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u9053\u9898\u7684\u6536\u76ca\u90fd\u662f\u4ece $dec$ \u5f00\u59cb\uff0c\u7136\u540e\u518d\u5f00\u59cb\u5f80\u4e0a\u904d\u5386\u8f93\u5165\u7684 $w$\uff0c\u8fd9\u6837\u4ece\u903b\u8f91\u4e0a\u4f1a\u66f4\u597d\u5904\u7406\u4e00\u4e9b\u3002\n\n\u6765\u770b\u4ee3\u7801:\n```c++\nstruct Endpoint {\n    // pos\u76f8\u5f53\u4e8e\u8bb0\u5f55\u6bcf\u4e2a\u533a\u95f4\u4e0b\u7aef\u70b9\u7684\u4f4d\u7f6e\n    int pos;\n    // \u5bf9\u5e94\u7684\u662f\u54ea\u4e2a\u9898\u76ee\n    int questionId;\n    // \u6536\u76ca\n    int income;\n    bool operator<(const Endpoint& p)const{\n        return pos < p.pos;\n    }\n} endpoints[MAX_N * 4];\n\n// ...\n\nint main() {\n    // ...\n    int endpointSize = 0;\n    for (int i = 1; i <= n; i++) {\n        difficulty[i] = read();\n        // \u8fd9\u91cc\u540e\u9762\u8bb2\n        currentValue[i] = dec;\n        if (b1 != b2) {\n       \t    // b1\u7b49\u4e8eb2\u4e86\u5c31\u6ca1\u6709\u6536\u76ca\u4e3a0\u7684\u533a\u95f4\u4e86\n            endpoints[++endpointSize] = (Endpoint) {difficulty[i] - b2, i, 0};\n            endpoints[++endpointSize] = (Endpoint) {difficulty[i] + b1 + 1, i, 0};\n        }\n        endpoints[++endpointSize] =  (Endpoint){difficulty[i] - b1, i, inc};\n        endpoints[++endpointSize] =  (Endpoint){difficulty[i] + b2 + 1, i, dec};\n    }\n    std::sort(endpoints + 1, endpoints + endpointSize + 1);\n}\n```\n\u8fd9\u662f\u5f88\u57fa\u7840\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u3002\n\n\u4e4b\u540e\u6211\u4eec\u6765\u5904\u7406\u8f93\u5165\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\uff0c\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u5730\u65b9\u4f1a\u7ed9\u51fa\u6ce8\u91ca\uff1a\n```c++\nstruct Update {\n    // \u8fd9\u6b21\u66f4\u65b0\u540e\uff0c\u4ece\u54ea\u6b21\u67e5\u8be2\u5f00\u59cb\n    int start;\n    // \u8fd9\u6b21\u66f4\u65b0\u7684\u6743\u91cd\n    int weight;\n    // \u8fd9\u6b21\u66f4\u65b0\u5230\u54ea\u4e2a\u67e5\u8be2\u7ed3\u675f\n    int end;\n    bool operator<(const Update& upd) const {\n        return weight < upd.weight;\n    }\n}updates[MAX_N];\n\nstd::vector<int> likes[MAX_Q];\nstd::vector<int> hates[MAX_Q];\n\nint main(){\n    // ...\n    \n    // \u53ef\u4ee5\u628a\u8fd9\u4e2a\u7406\u89e3\u4e3a op = 1 \u65f6\uff0c\u8f93\u5165\u7684\u6570\u636e\u7ec4 id \u53f7\n    int mark = 0;\n    // \u6709\u6b21\u66f4\u65b0\n    int updateIndex = 1;\n    // \u7b2c\u4e00\u6b21\u66f4\u65b0\uff0c\u5728 query \u4e4b\u524d\u7684\u90a3\u6b21\u66f4\u65b0\n    updates[0] = (Update){1, w};\n    for(int i = 0; i < q; i++) {\n        int op = read();\n        int unk = read();\n        if (op == 2) {\n            w = unk;\n            // \u53c8\u6709\u4e00\u6b21\u66f4\u65b0, \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u77e5\u9053\u5b83\u7ba1\u7406\u7684\u8d77\u59cb\u70b9\uff0c\u4e0d\u77e5\u9053\u7ec8\u70b9\n            updates[updateIndex] = (Update){mark + 1, w};\n            if (updateIndex - 1 >= 0) {\n            \t// \u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u7ed9\u4e0a\u4e00\u4e2a\u66f4\u65b0\u8d4b\u7ec8\u70b9\n                updates[updateIndex - 1].end = mark;\n            }\n            updateIndex++;\n            continue;\n        }\n        int h = read();\n        ++mark;\n        for(int j = 0; j < unk; j++) {\n            likes[mark].push_back(read());\n        }\n        for(int j = 0; j < h; j++) {\n            hates[mark].push_back(read());\n        }\n    }\n    // \u8fd9\u91cc\u4e0d\u8981\u6389\u4e86\n    updates[updateIndex - 1].end = mark;\n    // \u6309\u6743\u503c\u6392\u5e8f\u4e00\u4e0b\n    std::sort(updates, updates + updateIndex);\n}\n```\n\n\u4e4b\u540e\u5c31\u662f\u904d\u5386 $updates$ \u6570\u7ec4\uff0c\u5904\u7406\u7b54\u6848\u4e86\uff1a\n```c++\n// \u7528\u6765\u6807\u8bb0\u5f53\u524d\u904d\u5386\u5230\u54ea\u4e2a\u7247\u6bb5\u4e86\nint endpointIndex = 1;\n// \u5efa\u6811\uff0c\u5c06\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u6807\u8bb0\u4e3a dec\nbuild(1, 1, n);\nfor (int i = 0; i < updateIndex; i++) {\n    Update upd = updates[i];\n    int weight = upd.weight;\n    // \u5728\u8fd9\u91cc\u5904\u7406\u66f4\u65b0\uff0c\u5f53endpoint\u7684pos\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u66f4\u65b0\u7684\u6743\u503cw\u5c31\u66f4\u65b0\n    while (endpointIndex < endpointSize && endpoints[endpointIndex].pos <= weight) {\n        Endpoint endpoint = endpoints[endpointIndex];\n        // \u8fd9\u91cc\u7b97\u4e00\u4e2a\u5c0f\u679d\u526a??(\u96fe), \u5176\u5b9e\u4f5c\u7528\u51e0\u4e4e\u4e3a0......\n        if (endpoint.income != currentValue[endpoint.questionId]) {\n            update(1, endpoint.questionId, endpoint.income);\n            currentValue[endpoint.questionId] = endpoint.income;\n        }\n        endpointIndex++;\n    }\n    // \u8fd9\u91cc\u5c31\u662f\u67e5\u8be2\u64cd\u4f5c\u4e86, \u76f4\u63a5\u904d\u5386\u5c31\u53ef\u4ee5\u4e86\uff0c\u5341\u5206\u6ef4\u65e0\u8111\n    for (int j = upd.start; j <= upd.end; j++) {\n        int l = 0, r = 0;\n        int _ans = MIN_VALUE;\n        std::vector<int> hate = hates[j];\n        hate.push_back(n + 1);\n        for (int like : likes[j]) {\n            while (hate[r] < like) {\n                l = hate[r++];\n            }\n            _ans = max(_ans, queryLeft(like + 1, hate[r] - 1) + queryRight(l + 1, like));\n        }\n        ans[j] = _ans;\n    }\n}\n```\n\u6700\u540e\u76f4\u63a5\u8f93\u5165\u7b54\u6848\u5373\u53ef\n\n## \u4ee3\u7801\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/olbf00ak)\n\n\u6700\u540e\u8dd1\u4e86 1.03s\uff0c\u8fd8\u662f\u80fd\u770b\u7684\u3002\n\n\u7531\u4e8e\u7ee7\u627f\u4e86\u6211 Java \u5f00\u53d1\u7684\u4e60\u60ef\uff0c\u5199\u7684\u5f88\u957f\uff0c**\u5efa\u8bae\u76f4\u63a5\u8df3\u5230main\u65b9\u6cd5\u89c2\u770b**\uff0c\u5916\u9762\u7684\u51fd\u6570\u5168\u662f\u5173\u4e8e\u7ebf\u6bb5\u6811\u7684\u3002\n",
        "postTime": 1659630597,
        "uid": 633904,
        "name": "xu2237803016",
        "ccfLevel": 0,
        "title": "P8454 \u300cSWTR-8\u300d\u8865\u9898\u8ba1\u5212"
    }
]