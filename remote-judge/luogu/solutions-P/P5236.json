[
    {
        "content": "\u8fd9\u91cc\u5199\u4e00\u79cd\u6b63\u7ecf\u4e00\u70b9\u7684\u89e3\u6cd5\u5427\uff1a\u5728\u7ebf\u5706\u65b9\u6811  \n****  \n\u65e2\u7136\u662f\u5706\u65b9\u6811\u7684\u6a21\u677f\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u5efa\u6811 (\u5e9f\u8bdd)  \n\n\u5706\u65b9\u6811\u7684\u5efa\u70b9\u3001\u8fde\u8fb9\u89c4\u5219\u662f\u8fd9\u6837\u7684\uff1a  \n1\u3001\u539f\u56fe\u4e2d\u7684\u70b9\u90fd\u662f\u5706\u70b9   \n2\u3001\u5bf9\u4e8e\u6bcf\u4e2a\u73af\uff0c\u65b0\u5efa\u4e00\u4e2a\u65b9\u70b9\uff1b\u8fd9\u4e2a\u65b9\u70b9\u548c\u73af\u4e0a\u5176\u5b83\u5706\u70b9\u8fde\u6210\u83ca\u82b1\u56fe   \n3\u3001\u5bf9\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u4e24\u4e2a\u5706\u70b9\uff0c\u4fdd\u7559\u539f\u56fe\u4e2d\u7684\u8fb9  \n\u6839\u636e\u4ed9\u4eba\u638c\u7684\u6027\u8d28\uff0c\u6613\u8bc1\u4e0d\u5b58\u5728\u76f8\u90bb\u7684\u4e24\u4e2a\u65b9\u70b9\u3002  \n\n\u522b\u5fd8\u4e86\uff0c\u6211\u4eec\u8fd8\u8981\u786e\u5b9a\u6811\u7684\u8fb9\u6743\u3002  \n\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cbdfs\uff0c\u5bf9\u4e8e$u\\rightarrow v$\u7684\u8fb9\uff1a   \n- \u82e5$u,v$\u90fd\u662f\u5706\u70b9\uff0c\u5219\u6743\u503c\u4e3a\u539f\u56fe\u4e2d\u8fb9\u6743  \n- \u82e5$u$\u4e3a\u65b9\u70b9\uff0c\u5219\u6743\u503c\u4e3a$v$\u5230$u$\u7236\u4eb2\u7684\u6700\u77ed\u8def  \n- \u5426\u5219\u6743\u503c\u4e3a$0$  \n\n\u53ea\u662f\u8fd9\u4e48\u8bf4\uff0c\u53ef\u80fd\u8fd8\u4e0d\u591f\u6e05\u695a\uff0c\u653e\u4e24\u5f20\u56fe\u6765\u4f60\u4eec\u76f4\u89c2\u611f\u53d7\u4e00\u4e0b\uff1a  \n\u7b2c\u4e00\u5f20\u8fd9\u662f\u539f\u56fe\uff0c\u7528\u7ea2\u8272\u52a0\u7c97\u8868\u793a\u7684\u662f\u975e\u6811\u8fb9  \n![](https://cdn.luogu.com.cn/upload/pic/53087.png)  \n\u5bf9\u4e8e\u6bcf\u4e2a\u73af\uff0c\u5efa\u4e00\u4e2a\u65b9\u70b9\uff0c\u7136\u540e\u5706\u65b9\u6811\u5c31\u641e\u597d\u4e86\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/53088.png)\n\n****  \n\u73b0\u5728\u6211\u4eec\u5efa\u597d\u4e86\u6811\uff0c\u5c31\u8981\u8003\u8651\u7528\u5b83\u6765\u6c42\u89e3\u5566qwq  \n\u548c\u666e\u901a\u7684\u6c42\u6811\u4e0a\u8def\u5f84\u4e00\u6837\uff0c\u6211\u4eec\u5728\u6c42$u\\rightarrow v$\u7684\u6700\u77ed\u8def\u65f6\uff0c\u8981\u6c42\u51fa$\\text{lca}(u,v)$\uff0c\u8bbe\u5176\u4e3a$p$\u3002  \n\u6211\u4eec\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a  \n\n- \u82e5$p$\u4e3a\u5706\u70b9\uff0c\u90a3\u7b54\u6848\u5c31\u662f\u6811\u4e0a\u8fd9\u4e24\u70b9\u7684\u8ddd\u79bb  \n- \u82e5$p$\u4e3a\u65b9\u70b9\uff0c\u5219\u9700\u8981\u627e\u51fa$p$\u7684\u4e24\u4e2a\u513f\u5b50$A,B$\uff0c\u5206\u522b\u662f$u$\u548c$v$\u7684\u7956\u5148\u3002\u7531\u4e8e$A,B$\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u6240\u4ee5$\\text{dis}(A,B)$\u53ef\u4ee5\u76f4\u63a5\u6c42(\u4e24\u79cd\u60c5\u51b5\u53d6$\\text{min}$)\u3002\u6b64\u65f6\u7b54\u6848\u4e3a$\\text{dis}(A,B)+\\text{dis}(A,u)+\\text{dis}(B,v)$  \n\n\u8fd9\u9898\u7684\u4e3b\u8981\u601d\u8def\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4e86\u3002  \n\u4e0d\u8fc7\u4f60\u4e5f\u8bb8\u4f1a\u95ee\uff1a\u600e\u4e48\u627e$p$\u7684\u513f\u5b50$A,B$\u554a\uff1f  \n\u5982\u679c\u4f60\u7528\u7684\u662f\u500d\u589e\uff0c\u90a3\u5f88\u7b80\u5355\u3002\u5728\u627e$\\text{lca}(u,v)$\u662f\u987a\u4fbf\u6c42\u51fa\u6765\u5c31\u597d\u4e86\u3002  \n\u5982\u679c\u4f60\u7528\u6811\u5256\uff0c\u8fd9\u91cc\u5c31\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\u3002  \n\u8003\u8651$p$\u7684\u513f\u5b50\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u8f7b\u513f\u5b50\u6216\u91cd\u513f\u5b50\u3002  \n\u5982\u679c\u4e00\u4e2a\u70b9\u662f\u8f7b\u513f\u5b50\uff0c\u8bf4\u660e\u8fd9\u4e2a\u513f\u5b50\u662f\u4e00\u4e2a\u91cd\u94fe\u7684\u9876\u70b9\uff0c\u4ece\u6cbf\u7740\u91cd\u94fe\u4e00\u76f4\u5411\u4e0a\u8df3\u5c31\u627e\u5230\u4e86\u3002  \n\u5982\u679c\u5728\u5411\u4e0a\u8df3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u8df3\u8fc7\u4e86$p$\uff0c\u90a3\u4e48\u8981\u627e\u7684\u513f\u5b50\u5c31\u662f\u91cd\u513f\u5b50\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(q\\log n)$\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#define ll long long\n#define N 40003\nusing namespace std;\n\nstruct edge{\n    int v,w;\n    edge(int v=0,int w=0):v(v),w(w){}\n};\n\nvector<edge> g[N],adj[N];\nint dfn[N],low[N],fa[N];\nint top[N],son[N],size[N],dep[N],b[N],sum[N],dis[N];\nint n,m,q,cnt,ext;\n\ninline void read(int &x);\nvoid print(int x);\nvoid tarjan(int u,int f);\ninline int min(int x,int y);\ninline void solve(int u,int v,int w);\nvoid dfs1(int u,int f);\nvoid dfs2(int u,int f);\ninline int lca(int u,int v); \ninline int find(int u,int f); //\u627e\u5230\u662fu\u7956\u5148\u7684f\u7684\u513f\u5b50\n\nsigned main(){\n    int u,v,p,w,A,B,ans;\n    read(n),read(m),read(q);\n    ext = n; //ext \u4e3a extra \u7684\u7b80\u5199,\u8868\u793a\u989d\u5916\u7684\u8282\u70b9\n    for(int i=1;i<=m;++i){\n        read(u),read(v),read(w);\n        g[u].push_back(edge(v,w));\n        g[v].push_back(edge(u,w));\n    }\n    tarjan(1,0); //\u627e\u73af\u7684\u540c\u65f6\u5efa\u6811\n    dfs1(1,0);\n    dfs2(1,1); //\u6811\u5256\u7684\u4e24\u904ddfs\n    while(q--){\n        read(u),read(v);\n        p = lca(u,v);\n        if(p<=n) ans = dis[u]+dis[v]-(dis[p]<<1); //\u7f16\u53f7\u4e0d\u5927\u4e8en\u7684\u8282\u70b9,\u5373\u662f\u5706\u70b9\n        else{\n            A = find(u,p),B = find(v,p); //\u627e\u5230\u513f\u5b50A,B\n            ans = dis[u]+dis[v]-dis[A]-dis[B];\n            if(sum[A]<sum[B]) swap(A,B); //\u9632\u6b62\u51fa\u73b0\u8d1f\u6570,\u8fd9\u91cc\u8981swap\u4e00\u4e0b\n            ans += min(sum[A]-sum[B],sum[p]+sum[B]-sum[A]);\n        }\n        print(ans);\n        putchar('\\n');\n    }\n    return 0;\n}\n\ninline int find(int u,int f){\n    int res;\n    while(top[u]!=top[f]){\n        res = top[u];\n        u = fa[top[u]];\n    }\n    return u==f?res:son[f]; \n}\n\ninline int lca(int u,int v){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]<dep[top[v]]) swap(u,v);\n        u = fa[top[u]];\n    }\n    return dep[u]<dep[v]?u:v;\n}\n\nvoid dfs1(int u,int f){\n    fa[u] = f;\n    dep[u] = dep[f]+1;\n    size[u] = 1;\n    int v,t = -1,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(v==f) continue;\n        dis[v] = dis[u]+adj[u][i].w;\n        dfs1(v,u);\n        size[u] += size[v];\n        if(size[v]>t){\n            t = size[v];\n            son[u] = v;\n        }\n    }\n}\n\nvoid dfs2(int u,int f){\n    top[u] = f;\n    if(son[u]==0) return;\n    dfs2(son[u],f);\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i].v;\n        if(v==fa[u]||v==son[u]) continue;\n        dfs2(v,v);\n    }\n}\n\nvoid tarjan(int u,int f){\n    dfn[u] = low[u] = ++cnt;\n    int v,w,l = g[u].size();\n    for(int i=0;i<l;++i){\n        v = g[u][i].v;\n        if(v==f) continue; //\u6c42\u70b9\u53cc\u65f6\u4e0d\u80fd\u8d70\u5230\u7236\u4eb2\n        w = g[u][i].w;\n        if(!dfn[v]){\n            fa[v] = u,b[v] = w; //\u628au->v\u7684\u8fb9\u6743\u5b58\u5230v\u4e0a\n            tarjan(v,u);\n            low[u] = min(low[u],low[v]);\n        }\n        else low[u] = min(low[u],dfn[v]);\n        if(low[v]<=dfn[u]) continue;\n        //\u5706\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9,\u4fdd\u7559\u539f\u56fe\u4e2d\u6570\u636e\n        adj[u].push_back(edge(v,w));\n        adj[v].push_back(edge(u,w));\n    }\n    for(int i=0;i<l;++i){\n        v = g[u][i].v;\n        if(fa[v]==u||dfn[v]<=dfn[u]) continue; \n        //\u627e\u5230\u975e\u6811\u8fb9,\u7136\u540e\u5efa\u65b9\u70b9\u5e76\u8fde\u8fb9\n        solve(u,v,g[u][i].w);\n    }\n}\n\ninline void solve(int u,int v,int w){\n    //\u53c2\u6570w\u4e3a\u975e\u6811\u8fb9\u7684\u8fb9\u6743\n    ++ext;\n    int pw,pre = w,i = v;\n    while(i!=fa[u]){\n        sum[i] = pre;\n        pre += b[i];\n        i = fa[i];\n    }\n    sum[ext] = sum[u]; //\u628a\u6574\u4e2a\u73af\u7684\u8fb9\u6743\u548c\u5b58\u5230\u65b9\u70b9\u4e0a\n    sum[u] = 0;\n    i = v;\n    while(i!=fa[u]){\n        pw = min(sum[i],sum[ext]-sum[i]);\n        //\u627e\u6700\u77ed\u8def,\u5efa\u6811\u8fb9\n        adj[ext].push_back(edge(i,pw));\n        adj[i].push_back(edge(ext,pw));\n        i = fa[i];\n    }\n}\n\ninline int min(int x,int y){\n    return x<y?x:y;\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){           \n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```",
        "postTime": 1551539753,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c(\u5706\u65b9\u6811)"
    },
    {
        "content": "\u8fd9\u5e94\u8be5\u662f\u8054\u8d5b\u4ee5\u524d\u56fe\u8bba\u9886\u57df\u6700\u5927\u7684\u6bd2\u7624\u4e86\u5427\u3002\n\u611f\u89c9\u4e0d\u4f1a\u518d\u6709\u6bd4\u8fd9\u4e2a\u66f4\u96be\u7684\u4e86\u3002\n\u5706\u65b9\u6811\u5f88\u597d\u7406\u89e3\uff0c\u628a\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u95f4\u8054\u8fb9\u62c6\u6389\uff0c\u518d\u5411\u4ee3\u8868\u8fd9\u4e2a\u73af\u7684\u65b9\u70b9\u5efa\u8fb9\uff0c\u8fd9\u6837\u5c31\u80fd\u6784\u6210\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u53eb\u5b83\u5706\u65b9\u6811\u3002\n\u5706\u65b9\u6811\u6709\u5e7f\u4e49\u7684\u7248\u672c\uff0c\u7528\u6765\u5904\u7406\u4e00\u822c\u65e0\u5411\u56fe\u7684\u7684\u95ee\u9898\u3002\n\u8fd9\u91cc\u6240\u8bf4\u7684\u662f\u72ed\u4e49\u7684\u5706\u65b9\u6811\uff0c\u53ea\u7528\u6765\u5904\u7406\u4ed9\u4eba\u638c\u4e0a\u95ee\u9898\u3002\n\u8fd9\u4e24\u79cd\u5706\u65b9\u6811\u6709\u5565\u533a\u522b\u5462\uff1f\u4e3b\u8981\u533a\u522b\u5c31\u662f\u4e00\u4e2a\u53ea\u6709\u4e24\u4e2a\u70b9\u7684\u70b9\u53cc\u8054\u901a\u5206\u91cf\u8981\u4e0d\u8981\u5efa\u65b9\u70b9\u7684\u533a\u522b\u3002\uff08\u8fd9\u53ea\u662f\u6211\u53e3\u80e1\u51fa\u6765\u7684\u6bd4\u8f83\u660e\u663e\u7684\u7279\u5f81\uff09\n\u6211\u4eec\u5904\u7406[\u9759\u6001\u4ed9\u4eba\u638c](https://www.luogu.com.cn/problem/P5236)\u8fd9\u4e2a\u95ee\u9898\u65f6\u5019\uff0c\u7528\u7684\u5c31\u662f\u540e\u9762\u8fd9\u4e2a\u6bd4\u8f83\u72ed\u4e49\u7684\u5706\u65b9\u6811\u3002\n\u9898\u76ee\u4e5f\u633a\u597d\u7406\u89e3\u7684\uff0c\u5c31\u662f\u7ed9\u4e00\u4e2a\u4ed9\u4eba\u638c\uff0c\u6c42\u4e24\u70b9\u8ddd\u79bb\u3002\n\u65b9\u6cd5\u5c31\u662f\u628a\u4ed9\u4eba\u638c\u8f6c\u5316\u6210\u5706\u65b9\u6811\uff0c\u7136\u540e\u901a\u8fc7LCA\u6765\u6c42\u4e24\u70b9\u95f4\u8ddd\u79bb\u3002\n\u90a3\u4e48\u8fd9\u9053\u9898\u4e3b\u8981\u7684\u5904\u7406\u96be\u70b9\u5728\u4e8e\uff1a\n1.\u65b0\u56fe\u4e4b\u95f4\u7684\u8fb9\u6743\u8be5\u5982\u4f55\u5904\u7406\u3002\n2.\u6c42\u51falca\u4e4b\u540e\u600e\u4e48\u6c42\u51fa\u7b54\u6848\u3002\n\u6211\u4eec\u4e00\u4e00\u5206\u6790\uff1a\n1.\u65b0\u56fe\u4e0a\u53ea\u6709\u4e24\u79cd\u8fb9\uff1a\n* \u5982\u679c\u662f\u5706-\u5706\u8fb9\uff0c\u6211\u4eec\u9009\u62e9\u76f4\u63a5\u4fdd\u7559\u8fb9\u6743\u3002\n* \u5982\u679c\u662f\u65b9-\u5706\u8fb9\uff0c\u6211\u4eec\u518d\u6b21\u5206\u7c7b\uff1a\n    * \u5982\u679c\u662f\u65b9\u70b9\u548c\u5b83\u7684\u7236\u4eb2\u7684\u8fde\u8fb9\uff0c\u6211\u4eec\u628a\u6743\u503c\u8bbe\u7f6e\u4e3a0.\n    * \u5982\u679c\u662f\u65b9\u70b9\u548c\u5176\u5b50\u7ed3\u70b9\u7684\u8fde\u8fb9\uff0c\u6211\u4eec\u628a\u6743\u503c\u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u5b50\u7ed3\u70b9\u5230\u65b9\u70b9\u7236\u4eb2\u7684\u6700\u77ed\u8ddd\u79bb\u957f\u5ea6\u3002\uff08\u7b80\u5355\u73af\u4e0a\u4e24\u70b9\u6700\u77ed\u8ddd\u79bb\u53ef $O(1)$ \u6c42\uff09\n\n2.\u57fa\u4e8e\u4ee5\u4e0a\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u7ed8\u5236\u51fa\u65b0\u7684\u56fe\u51fa\u6765\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5982\u4f55\u6c42\u6811\u4e0a\u8fde\u70b9\u8ddd\u79bb\u3002\n* \u76f4\u63a5LCA\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u4f8b\u5982\u540c\u4e00\u4e2a\u73af\u5185\u7684\u4e24\u70b9\uff0c\u4ed6\u4eec\u7684LCA\u662f\u65b9\u70b9\uff0c\u800c\u4ed6\u4eec\u7684\u8ddd\u79bb\u5374\u4e0d\u662f\u5230\u65b9\u70b9\u7684\u8ddd\u79bb\u548c\u3002\n* \u6211\u4eec\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff1a\n    * \u6211\u4eec\u6839\u636e\u4e0a\u9762\u7684\u8fb9\u6743\u5b9a\u4e49\u53ef\u4ee5\u77e5\u9053\uff0c\u4e00\u4e2a\u5706\u70b9\u548c\u4ed6\u7684\u7956\u5148\u5706\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e00\u5b9a\u662f\u539f\u56fe\u4e0a\u4e24\u5706\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n    * \u7b80\u5355\u8bc1\u660e\uff1a\uff08\u6211\u4eec\u628a\u4e00\u4e2a\u73af\u91cc\u7684\u65b9\u70b9\u53eb\u7236\u4eb2\u7ed3\u70b9\uff0c\u5b83\u7684\u7236\u4eb2\u5c31\u662f\u7237\u7237\u7ed3\u70b9\u4e86\uff09\n        * \u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u5728\u4e00\u4e2a\u73af\u5185\uff0c\u90a3\u4e48\u90a3\u4e2a\u7956\u5148\u4e00\u5b9a\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u7237\u7237\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u6210\u4e3a\u7956\u5148\u5173\u7cfb\u3002\u90a3\u4e48\u8fd9\u4e24\u70b9\u95f4\u5728\u65b0\u56fe\u4e0a\u8ddd\u79bb\u5c31\u662f\u5b50\u5b59\u5706\u70b9-\u65b9\u70b9-\u7237\u7237\u5706\u70b9\uff0c\u6743\u503c\u5219\u662f\u5b50\u5b59\u7ed3\u70b9\u5230\u7237\u7237\u7ed3\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u4e0e\u6211\u4eec\u7684\u5b9a\u4e49\u76f8\u543b\u5408\u3002\n        * \u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u73af\u5185\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u8ddd\u79bb\u4e3a\u5b50\u5b59\u7ed3\u70b9-\u5b50\u5b59\u7ed3\u70b9\u73af\u5185\u7684\u7237\u7237\u7ed3\u70b9-\u73af\u4e0e\u73af\u4e4b\u95f4\u7684\u8fde\u8fb9-\u7b2c\u4e8c\u4e2a\u73af\u4e0a\u7684\u4e0e\u7b2c\u4e00\u4e2a\u73af\u7684\u7237\u7237\u76f8\u8fde\u7684\u70b9-\u7b2c\u4e8c\u4e2a\u73af\u7684\u7237\u7237\u2026\u2026\u2026\u2026\u8fd9\u6837\u4e00\u76f4\u4e0b\u53bb\uff0c\u6211\u4eec\u7684\u6700\u5f00\u59cb\u9009\u7684\u90a3\u4e2a\u7956\u5148\u7ed3\u70b9\u4e00\u5b9a\u662f\u67d0\u4e2a\u73af\u7684\u7237\u7237\uff0c\u6216\u662f\u4e0e\u67d0\u4e2a\u7237\u7237\u76f8\u8fde\u7684\u70b9\uff0c\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u6743\u503c\u90fd\u662f\u5bf9\u7684\uff08\u7237-\u5b59\u6743\u503c\u662f\u5bf9\u7684\uff0c\u73af\u73af\u4e4b\u95f4\u7684\u8fde\u8fb9\u4e00\u5b9a\u662f\u5706-\u5706\u8fb9\uff0c\u6743\u503c\u4e5f\u662f\u539f\u6765\u7684\uff09\n        * \u5176\u4ed6\u60c5\u51b5\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\uff0c\u5927\u591a\u6570\u4f1a\u4e0e\u4ed9\u4eba\u638c\u7684\u6027\u8d28\u4e0d\u7b26\u800c\u9519\u8bef\uff0c\u6700\u7ec8\u53ea\u5269\u4e0b\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002\n    * \u6240\u4ee5\u5982\u679c\u4e24\u4e2a\u70b9\u7684LCA\u662f\u5706\u70b9\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u8ddd\u79bb\u5c31\u662f\u5404\u81ea\u5230LCA\u7684\u8ddd\u79bb\uff0c\u4e0e\u5e73\u5e38\u7684\u6811\u4e0a\u8ddd\u79bb\u662f\u4e00\u4e2a\u6c42\u6cd5\u3002\n    * \u5982\u679c\u4e24\u4e2a\u7684LCA\u662f\u65b9\u70b9\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684\u8ddd\u79bb\u662f\u4ec0\u4e48\u5462\uff1f\n        * \u5982\u679c\u4e24\u4e2a\u70b9\u7684LCA\u662f\u65b9\u70b9\uff0c\u90a3\u4e48\u67d0\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u4e2d\u7684LCA\u4e4b\u524d\u7684\u90a3\u4e2a\u7956\u5148\uff08\u4e5f\u5c31\u662f\u67d0\u4e2a\u70b9\u5230LCA\u8fd9\u6761\u94fe\u4e0a\u7684LCA\u7684\u513f\u5b50\u7ed3\u70b9\uff09\u4e00\u5b9a\u662f\u4e0eLCA\u8fd9\u4e2a\u65b9\u70b9\u5728\u540c\u4e00\u4e2a\u73af\u91cc\u9762\u7684\u3002\u90a3\u4e48\u6211\u4eec\u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u662f\uff1a\u5047\u8bbea\uff0cb\u662f\u4e24\u4e2a\u5f85\u6c42\u70b9\uff0cA\uff0cB\u662f\u4ed6\u4eec\u5728LCA\u7684\u73af\u4e0a\u8ddd\u79bb\u4ed6\u4eec\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\uff08\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u90a3\u4e2a\u7956\u5148\uff09\uff0c\u6700\u540e\u7ed3\u679c\u5c31\u662fa\u5230A\u7684\u8ddd\u79bb+b\u5230B\u7684\u8ddd\u79bb+A\u5230B\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7531\u4e8ea,b,A,B\u90fd\u662f\u5706\u70b9\uff0ca\u5230A\uff0cb\u5230B\u8ddd\u79bb\u53ef\u4ee5\u76f4\u63a5\u6c42\uff0c\u5269\u4e0bA\u5230B\u7684\u8ddd\u79bb\u5c31\u662f\u7b80\u5355\u73af\u4e0a\u4e24\u70b9\u95f4\u6700\u77ed\u8ddd\u79bb\uff0c\u53ef\u4ee5 $O(1)$ \u6c42\u3002\n\n3.\u8fd9\u5c31\u662f\u6c42\u4ed9\u4eba\u638c\u56fe\u4e0a\u4e24\u70b9\u95f4\u8ddd\u79bb\u7684\u65b9\u6cd5\u4e86\uff0c\u6700\u540e\u6211\u4eec\u770b\u770b\u5904\u7406\u7ec6\u8282\u3002\n\u4e3b\u8981\u6709\u4e09\u4e2a\u96be\u5904\u7406\u7684\u5730\u65b9\uff1a\n* \u7b80\u5355\u73af\u4e0a\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u9884\u5904\u7406\u65b9\u6cd5\n    * \u6211\u4eec\u7528\u5230\u524d\u7f00\u548c\u7684\u601d\u60f3\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\n    * \u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u8bbe\u4ed6\u4e3a\u8d77\u70b9\uff0c\u968f\u4fbf\u5b9a\u4e00\u4e2a\u65f6\u9488\u987a\u5e8f\uff0c\u628a\u8fd9\u4e2a\u70b9\u5230\u73af\u4e0a\u4e0b\u4e00\u4e2a\u70b9\u7684\u8fb9\u6743\u52a0\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684sum\u6570\u7ec4\u91cc\uff0c\u6700\u540e\u5904\u7406\u7ed3\u679c\u65f6\u5019\u5bf9\u4e8e\u73af\u4e0a\u4e24\u70b9u,v\u7b54\u6848\u662f``` min(sum[u]-sum[v],sumtot-sum[u]+sum[v]);```\u5373u\u5230v\u4e4b\u95f4\u7684\u8fb9\u6743\u4e0e\u8fd9\u4e2a\u73af\u4e0a\u9664u\u5230v\u4e4b\u95f4\u7684\u8fb9\u6743\u4ee5\u5916\u7684\u8fb9\u6743\u548c\u3002\u56e0\u4e3a\u4e00\u4e2a\u7b80\u5355\u73af\u4e0a\u4e24\u70b9\u95f4\u53ea\u6709\u4e24\u6761\u8def\u53ef\u8d70\uff0c $sum[u]$ \u8868\u793a\u4ece\u8d77\u70b9\u5230u\u7684\u8fb9\u6743\u548c\uff0c $sum[v]$ \u8868\u793a\u8d77\u70b9\u5230v\u7684\u8fb9\u6743\u548c\uff0c``` sum[u]-sum[v] ```\u5c31\u662fv\u5230u\u7684\u8fb9\u6743\u548c\uff0c $sumtot$ \u662f\u6574\u4e2a\u73af\u7684\u8fb9\u6743\u548c\uff0c```sumtot-sum[u]+sum[v]\u5c31\u662f\u8fd9\u4e2a\u73af\u4e0a\u5269\u4e0b\u7684\u8fb9\u6743```\n* \u5982\u4f55\u6c42\u4e00\u4e2a\u70b9\u67d0\u4e2a\u7956\u5148\u524d\u9762\u90a3\u4e2a\u7956\u5148\uff08\u5c31\u662f\u5904\u7406\u65b9\u70b9\u65f6\u5019\u7684\u90a3\u4e2a\u7956\u5148\u7684\u627e\u6cd5\uff09\n    * \u6211\u4e60\u60ef\u7528\u6811\u94fe\u5256\u5206\u6c42LCA\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u8fd9\u79cd\u6c42LCA\u65b9\u6cd5\u4e0b\u7684\u627e\u7956\u5148\u65b9\u6cd5\uff0c\u5982\u679c\u662f\u7528\u500d\u589e\u6c42LCA\uff0c\u636e\u8bf4\u5904\u7406\u4f1a\u66f4\u7b80\u5355\u4e00\u4e9b\u3002\n    * \u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u77e5\u9053\u4e86u,rt,\u8981\u627eu\u5230rt\u8fd9\u6761\u94fe\u4e0art\u524d\u9762\u7684\u90a3\u4e2a\u7ed3\u70b9\u3002\n    * \u6211\u4eec\u8003\u8651\uff0c\u5982\u679cu\uff0crt\u5728\u4e00\u6761\u91cd\u94fe\u4e0a\uff0c\u90a3\u4e48\u4ed6\u4eec\u7684top\u76f8\u540c\uff0c\u4f46\u662fu\u548crt\u53c8\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u76f4\u63a5```return son[rt]```\u5373\u53ef,\u5982\u679ctop\u4e0d\u540c\uff0c\u90a3\u5c31\u4e00\u76f4\u5f80\u4e0a\u8df3```x=fa[top[x]]```,\u76f4\u5230top\u76f8\u540c\uff0c\u5982\u679cu\u548crt\u76f8\u540c\uff0c\u90a3\u5c31\u8bf4\u660e\u6211\u4eec\u8981\u627e\u7684\u7b54\u6848\u662frt\u7684\u4e00\u4e2a\u8f7b\u513f\u5b50\uff0c\u8bb0\u5f55\u4e0b\u4e0a\u4e00\u4e2atop\u662f\u8c01\u5c31ok\u4e86\u3002\n* tarjan\u51fd\u6570\u7684\u7ec6\u8282\u5904\u7406\n    * \u8fd9\u662f\u548c\u4e4b\u524d\u7684\u7b80\u5355\u73af\u5904\u7406\u76f8\u7ed3\u5408\u4f7f\u7528\u7684\u3002\n    * \u76f4\u63a5\u653e\u4e2a\u4ee3\u7801\u5427\uff0c\u6709\u6ce8\u91ca\u54d2\uff1a\n```cpp\nvoid tarjan(int u,int f){\n\tdfn[u]=low[u]=++Time;\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v]){\n\t\t\tfa[v]=u;\n\t\t\tres[v]=edge[i].val;\n\t//\u8fd9\u4e2a\u64cd\u4f5c\u662f\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u53ef\u80fd\u7684\u73af\u4e0a\u7684\u4e0a\u4e00\u4e2a\u7ed3\u70b9\uff0c\u8fd9\u91cc\u9ed8\u8ba4v\u7684\u7236\u4eb2\u662fu\uff0cv\u4e0a\u4fdd\u5b58\u4e00\u4e0bu\u5230v\u7684\u8fb9\u6743\u3002\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else if(v!=f){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t\tif(low[v]>dfn[u]){\n\t\t\tadd2(u,v,edge[i].val);\n\t\t\tadd2(v,u,edge[i].val);\n\t\t}\n\t//\u5982\u679clow[v]>dfn[u]\u800cu\u4e0ev\u8fd8\u662f\u76f8\u8fde\u7684\uff0c\u90a3\u4ed6\u4eec\u4e00\u5b9a\u662f\u5706-\u5706\u8fb9\uff0c\u76f4\u63a5\u628a\u539f\u8fb9\u6743\u52a0\u5165\u65b0\u56fe\n\t}\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(fa[v]==u||dfn[v]<=dfn[u])continue;\n\t//\u5982\u679cu\u662f\u67d0\u4e2a\u73af\u7684\u8d77\u70b9\uff0c\u90a3\u4ed6\u4e00\u5b9a\u8fde\u63a5\u8fd9\u67d0\u4e2a\u73af\u7684\u4e24\u4e2a\u70b9\uff08\u7531\u4e8e\u4ed9\u4eba\u638c\u7684\u6027\u8d28\uff0cu\u5fc5\u987b\u4e5f\u53ea\u80fd\u8fde\u63a5\u4e24\u4e2a\u70b9\uff09\u3002\n\t//\u8fd9\u4e24\u4e2a\u70b9\u4e00\u4e2a\u70b9\u662f\u4eceu\u70b9\u51fa\u53d1\u7684\uff0c\u4ed6\u7684fa\u503c\u662fu\uff0c\u5269\u4e0b\u4e00\u4e2a\u662f\u8f6c\u4e86\u4e00\u5708\u56de\u6765\u7684\uff0c\u4ed6\u4e00\u5b9a\u5728u\u4e4b\u540e\u88ab\u904d\u5386\u3002\n\t//\u6211\u4eec\u8981\u5728\u8fd9\u91cc\u627e\u90a3\u4e2a\u8f6c\u4e86\u4e00\u5708\u56de\u6765\u7684\u70b9\uff08\u4ed6fa\u503c\u4e0d\u4e3au\uff0c\u4e00\u5b9a\u662f\u7531\u67d0\u4e2au\u7684\u5b50\u7ed3\u70b9\u904d\u5386\u5230\u7684\uff09\u3002\n\t\tclac(u,v,edge[i].val);\n\t//\u8fd9\u91ccu\u662f\u8d77\u70b9\uff0c\u4e5f\u662f\u8fd9\u4e2a\u73af\u7684\u7237\u7237\u7ed3\u70b9\n\t}\n}\nvoid clac(int u,int v,int val){\n\t//\u8fd9\u91ccu\u662f\u8d77\u70b9\uff0c\u4e5f\u662f\u8fd9\u4e2a\u73af\u7684\u7237\u7237\u7ed3\u70b9\n\tbelongcnt++;\n\t//\u6bcfclac\u4e00\u6b21\u5c31\u6709\u4e00\u4e2a\u73af\u3002\n\tint preval=val,i=v;\n\t//\u8fd9\u4e2a\u73af\u4e0a\u5176\u4ed6\u7684\u8fb9\u6743\u5df2\u7ecf\u88ab\u4fdd\u5b58\u5728\u5404\u4e2a\u70b9\u4e0a\u4e86\uff0c\u53ea\u5269\u4e0b\u8fd9\u4e2a\u76ee\u524d\u7684val\uff0c\u5b83\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u6700\u540e\u4e00\u4e2a\u8fb9\u6743\u3002\n\twhile(i!=fa[u]){\n\t\tsum[i]=preval;\n\t\t//\u901a\u8fc7\u8df3fa\u904d\u5386\u8fd9\u4e2a\u73af\u4e0a\u7684\u67d0\u4e00\u4e2a\u70b9\uff0c\u5e76\u8bb0\u5f55sum\n\t\tpreval+=res[i];\n\t\ti=fa[i];\n\t}\n\tsum[belongcnt+n]=sum[u];\n\t//\u65b9\u70b9\u7684sum\u503c\u4ee3\u8868\u6574\u4e2a\u73af\u7684\u6743\u503c\u548c\uff0c\u76f8\u5f53\u4e8e\u6211\u4e0a\u6587\u6240\u8bf4\u7684\u90a3\u4e2asumtot\n\t//\u9ed8\u8ba4\u65b9\u70b9\u7684\u662f\u5927\u4e8en\u7684\uff0c\u4e4b\u540e\u597d\u5904\u7406\n\ti=v;\n\tsum[u]=0;\n\t//\u7237\u7237\u5230\u81ea\u5df1\u7684\u6700\u77ed\u8ddd\u79bb\u662f0\n\tint pw;\n\twhile(i!=fa[u]){\n\t\tpw=min(sum[i],sum[belongcnt+n]-sum[i]);\n\t\t//\u7531\u4e8e\u8d77\u70b9\u662f\u7237\u7237\u7ed3\u70b9\uff0c\u6240\u4ee5sum[i]\u5c31\u662fi\u5230\u7237\u7237\u7ed3\u70b9\u7684\u8fb9\u6743\u548c\n\t\t//\u627e\u6bcf\u4e2a\u70b9\u5230u\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u73af\u4e0a\u7237\u7237\u7ed3\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\t\tadd2(belongcnt+n,i,pw);\n\t\tadd2(i,belongcnt+n,pw);\n\t\ti=fa[i];\n\t}\n}\n```\n\u5168\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\nint n,m,q;\nstruct E{\n\tint to,next,val;\n}edge[maxn],edge2[maxn];\nint head[maxn],tot;\nint head2[maxn],tot2;\nvoid add(int from,int to,int val){\n\tedge[++tot].to=to;\n\tedge[tot].val=val;\n\tedge[tot].next=head[from];\n\thead[from]=tot;\n}\nvoid add2(int from,int to,int val){\n\tedge2[++tot2].to=to;\n\tedge2[tot2].val=val;\n\tedge2[tot2].next=head2[from];\n\thead2[from]=tot2;\n}\nint low[maxn],dfn[maxn],Time,belongcnt;\nint fa[maxn],res[maxn],deepval[maxn],sum[maxn];\nvoid clac(int u,int v,int val);\nvoid tarjan(int u,int f){\n\tdfn[u]=low[u]=++Time;\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v]){\n\t\t\tfa[v]=u;\n\t\t\tres[v]=edge[i].val;\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}else if(v!=f){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t\tif(low[v]>dfn[u]){\n\t\t\tadd2(u,v,edge[i].val);\n\t\t\tadd2(v,u,edge[i].val);\n\t\t}\n\t}\n\tfor(int i=head[u];i;i=edge[i].next){\n\t\tint v=edge[i].to;\n\t\tif(fa[v]==u||dfn[v]<=dfn[u])continue;\n\t\tclac(u,v,edge[i].val);\n\t}\n}\nvoid clac(int u,int v,int val){\n\tbelongcnt++;\n\tint preval=val,i=v;\n\twhile(i!=fa[u]){\n\t\tsum[i]=preval;\n\t\tpreval+=res[i];\n\t\ti=fa[i];\n\t}\n\tsum[belongcnt+n]=sum[u];\n\ti=v;\n\tsum[u]=0;\n\tint pw;\n\twhile(i!=fa[u]){\n\t\tpw=min(sum[i],sum[belongcnt+n]-sum[i]);\n\t\tadd2(belongcnt+n,i,pw);\n\t\tadd2(i,belongcnt+n,pw);\n\t\ti=fa[i];\n\t}\n}\nint size[maxn],deep[maxn],son[maxn];\nvoid dfs1(int u,int f){\n\tfa[u]=f;size[u]=1;\n\tfor(int i=head2[u];i;i=edge2[i].next){\n\t\tint v=edge2[i].to;\n\t\tif(v==fa[u])continue;\n\t\tdeep[v]=deep[u]+1;\n\t\tdeepval[v]=deepval[u]+edge2[i].val;\n\t\tdfs1(v,u);\n\t\tsize[u]+=size[v];\n\t\tif(size[v]>size[son[u]])son[u]=v;\n\t}\n}\nint top[maxn];\nvoid dfs2(int u,int tp){\n\ttop[u]=tp;\n\tif(son[u])dfs2(son[u],tp);\n\tfor(int i=head2[u];i;i=edge2[i].next){\n\t\tint v=edge2[i].to;\n\t\tif(v==fa[u]||v==son[u])continue;\n\t\tdfs2(v,v);\n\t}\n}\nint lca(int x,int y){\n\twhile(top[x]!=top[y]){\n\t\tif(deep[top[x]]<deep[top[y]])swap(x,y);\n\t\tx=fa[top[x]];\n\t}\n\tif(deep[x]>deep[y])swap(x,y);\n\treturn x;\n}\nint find(int x,int rt){\n\tint res;\n\twhile(top[x]!=top[rt]){\n\t\tres=top[x];\n\t\tx=fa[top[x]];\n\t}\t\n\tif(x==rt)return res;\n\telse return son[rt];\n}\nint solve(int x,int y,int LCA){\n\tif(LCA<=n){\n\t\treturn deepval[x]+deepval[y]-2*deepval[LCA];\n\t}else{\n\t\tint X=find(x,LCA),Y=find(y,LCA);\n\t\tint ans=deepval[x]-deepval[X]+deepval[y]-deepval[Y];\n\t\t\n\t\tif(sum[X]<sum[Y])swap(X,Y);\n\t\tint Min=min(sum[X]-sum[Y],sum[LCA]-sum[X]+sum[Y]);\n\t\treturn ans+Min;\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<=m;i++){\n\t\tint from,to,val;\n\t\tscanf(\"%d%d%d\",&from,&to,&val);\n\t\tadd(from,to,val);\n\t\tadd(to,from,val);\n\t}\n\ttarjan(1,0);\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint LCA=lca(x,y);\n\t\tprintf(\"%d\\n\",solve(x,y,LCA));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1601352594,
        "uid": 332686,
        "name": "liu_yi_tong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\u3011"
    },
    {
        "content": "## 0. \u524d\u7f6e\u77e5\u8bc6\n\n\u672c\u849f\u84bb\u4e5f\u662f\u6700\u8fd1\u5b66\u4e60\u8fd9\u4e2a ~~\u5de8\u6bd2\u7624~~ \u7684\u7b97\u6cd5\uff0c\u597d\u591a\u5730\u65b9\u4e5f\u662f\u4e00\u5934\u96fe\u6c34\uff0c\u4ed4\u7ec6\u60f3\u4e86\u51e0\u4e2a\u665a\u81ea\u4e60\u540e\uff0c\u6709\u4e9b\u604d\u7136\u5927\u609f\uff0c\u4e8e\u662f\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n\u9700\u8981\u7684\u4e1c\u897f\uff1aTarjan\uff08\u4f3c\u4e4e\u6ca1\u6709\u5177\u4f53\u7684\u6a21\u677f\uff09\u3002\n\n\u5c31\u662f\u4e00\u4e2a\u6c42\u8fb9\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5\uff0c\u4e00\u4f1a\u6211\u4eec\u8981\u5229\u7528\u5b83\u5e76\u6539\u8fdb\u4e3a\u6211\u4eec\u6240\u7528\u3002\n\n\u8fd8\u6709\u4e00\u9897\u770b\u5b8c\u6211\u7684\u535a\u5ba2\u7684\u5fc3\\~\\~\n\n## 1. \u5706\u65b9\u6811\n\n\u5176\u5b9e\uff0c\u5706\u65b9\u6811\u5c31\u662f\u5c06\u73af\u7684\u4f5c\u7528\u8f6c\u5316\u4e3a\u4e00\u68f5\u6811\u7684\u4f5c\u7528\uff0c\u4f7f\u539f\u6765\u7684\u56fe\u53d8\u4e3a\u4e86\u65b0\u56fe\uff0c\u8bb8\u591a\u6027\u8d28\u6ca1\u6709\u53d8\u5316\uff0c\u4f46\u5904\u7406\u6811\u4f1a\u7b80\u5355\u8bb8\u591a\u3002\n\n\u4ee5\u4f8b\u9898\u4e3a\u4f8b\uff1a[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5236)\n\n\u60f3\u4e00\u60f3\uff0c\u600e\u6837\u5c06\u73af\u53d8\u4e3a\u6811\u7684\u6837\u5b50\uff1f\n\n\u56de\u5f52\u5b9a\u4e49\u7684\u4e00\u4e2a\u7279\u6b8a\u6027\u8d28\uff1a\n\n> \u4efb\u610f\u4e00\u6761\u8fb9\u81f3\u591a\u53ea\u51fa\u73b0\u5728\u4e00\u6761\u7b80\u5355\u56de\u8def\u7684\u65e0\u5411\u8fde\u901a\u56fe\u79f0\u4e3a\u4ed9\u4eba\u638c\u3002\n\n\u7ffb\u8bd1\u6210\u4eba\u8bdd\uff08\uff1f\uff09\uff0c\u5c31\u662f\u539f\u56fe\u7531\u4e00\u4e9b\u8fb9\u4e0d\u76f8\u4ea4\u7684\u73af\u548c\u53e6\u5916\u7684\u8fb9\u6784\u6210\u3002\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u60f3\u5230\u7684\u662f\uff0c\u5c06\u4e00\u4e2a\u73af\u7f29\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5c06\u6574\u4e2a\u56fe\u7f29\u4e3a\u4e00\u68f5\u6811\uff08\u56e0\u4e3a\u65e0\u5411\u56fe\u4e2d\u53ea\u6709\u6811\u548c\u73af\u4e24\u79cd\u5f62\u72b6\uff0c\u6ca1\u6709\u7b2c\u4e09\u79cd\uff0c\u53c8\u56e0\u4e3a\u6ca1\u6709\u73af\u5957\u73af\uff08\u8fb9\u91cd\u5408\uff09\uff0c\u6240\u4ee5\u4e00\u5b9a\u53d8\u4e3a\u4e00\u68f5\u6811\uff09\u3002\n\n\u4f46\u662f\uff0c\u73af\u5185\u7684\u8fb9\u548c\u70b9\u95f4\u7684\u8ddd\u79bb\u5c31\u6ca1\u6cd5\u7edf\u8ba1\u4e86\u3002\n\n\u6211\u4eec\u5047\u8bbe\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u70b9\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fd1\u3002\n\n\u6765\u770b\u4e00\u4e2a\u56fe\uff08 ~~\u76d7\u7684\u4f8b\u9898\u7684\u56fe~~ \uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/52854.png)\n\n\u5047\u8bbe\u4e03\u53f7\u70b9\u4e3a\u6839\uff0c\u90a3\u4e48\uff0c\u5bf9\u4e8e \"1-2-3-4\" \u7684\u73af\uff0c\u4e09\u53f7\u70b9\u8ddd\u79bb\u6839\u8282\u70b9\u6700\u8fd1\u3002\n\n\u6211\u4eec\u8bbe\u6700\u8fd1\u7684\u70b9\u5177\u6709 \"A\" \u6027\u8d28\u3002\n\n\u4e0b\u9762\uff0c\u6211\u4eec\u8bc1\u660e\u4e00\u4e2a\u4e1c\u897f\uff1a\u73af\u5185\u7684\u70b9\u5230\u6839\u8282\u70b9\u4e00\u5b9a\u7ecf\u8fc7\u73af\u5185\u5177\u6709 \"A\" \u6027\u8d28\u7684\u70b9\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u4e0d\u7ecf\u8fc7\u8be5\u70b9\u7684\u8bdd\uff0c\u5c31\u4e0d\u53ef\u80fd\u8fbe\u5230\u6839\u8282\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u5728\u6811\u4e2d\uff0c\u8be5\u70b9\u5982\u679c\u60f3\u5411\u4e0a\u8d70\u7684\u8bdd\uff0c\u5fc5\u987b\u7ecf\u8fc7\u8be5\u73af\u7684 \"A\" \u8282\u70b9\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u79cd\u5173\u7cfb\u8f6c\u5316\u4e3a\u6811\u7684\u8282\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n\u73af\u5185\u7684\u8282\u70b9\u901a\u5411 \"A\" \u8282\u70b9\u53ea\u53ef\u80fd\u6709\u4e24\u6761\u8def\u5f84\uff1a\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u3002\n\n\u53c8\u7531\u4e8e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u957f\u7684\u4e00\u6761\u8def\u80af\u5b9a\u7528\u4e0d\u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5b58\u5230 \"A\" \u8282\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u5373\u53ef\u3002\n\n\u90a3\u4e48\uff0c\u539f\u56fe\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5c31\u7b49\u4ef7\u4e8e\u65b0\u56fe\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u539f\u6765\u7684\u8fb9\u8fd8\u662f\u73af\u4e2d\u7684\u8fb9\u53d8\u6362\u8fc7\u6765\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \"\u5706\u65b9\u6811\"\u3002\n\n\u5047\u8bbe\u539f\u6765\u7684\u70b9\u53eb\u505a\u5706\u70b9\uff0c\u65b0\u5efa\u7684\u70b9\u53eb\u505a\u65b9\u70b9\u3002\n\n\u5bf9\u4e8e\u73af\u5185\u7684\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u65b9\u70b9\uff0c\u5411 \"A\" \u7684\u70b9\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a 0 \u7684\u8fb9\uff0c\u5728\u4ece\u65b0\u70b9\u5230\u5176\u4ed6\u70b9\u8fde\u63a5\u539f\u6765\u5e94\u6709\u7684\u6743\u503c\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5224\u65ad\u662f\u4e0d\u662f\u539f\u6765\u7684\u8fb9\uff0c\u53ea\u9700\u5224\u65ad\u662f\u4e0d\u662f\u6709\u65b0\u5efa\u7684\u70b9\u5373\u53ef\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0a\u9762\u7684\u4ed9\u4eba\u638c\u5efa\u4e3a\u5706\u65b9\u6811\uff087 \u53f7\u662f\u6839\u8282\u70b9\uff09\u662f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lhd1whrx.png)\n\n## 2. Tarjan \u7b97\u6cd5\u53ca\u53d8\u5f62\n\n\u6211\u4eec\u521a\u624d\u8ba8\u8bba\u7684\u8303\u56f4\uff0c\u662f\u5728\u80fd\u6c42\u7b80\u5355\u73af\u7684\u57fa\u7840\u4e0a\uff0c\u73b0\u5728\uff0c\u6211\u4eec\u7684\u95ee\u9898\u662f\uff0c\u5982\u4f55\u624d\u80fd\u627e\u5230\u6240\u6709\u7684\u7b80\u5355\u73af\uff1f\n\n\u53ef\u80fd\u5927\u5bb6\u90fd\u4f1a\u60f3\u5230\uff0c\u76f4\u63a5\u7528 Tarjan \u7b97\u6cd5\uff0c\u5c31\u53ef\u4ee5\u53bb\u6c42\u4e86\u3002\n\n\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\uff1aTarjan \u6c42\u7684\u662f\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u5373\u53bb\u6389\u4efb\u610f\u4e00\u6761\u8fb9\u540e\uff0c\u539f\u56fe\u4ecd\u7136\u8054\u901a\uff0c\u90a3\u4e48\uff0c\u539f\u56fe\u7684 \"123456\"6 \u4e2a\u70b9\uff0c\u6ee1\u8db3\u8be5\u8981\u6c42\uff0c\u4f46\u4ed6\u4eec\u5e76\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u7b80\u5355\u73af\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u4e8e\u662f\uff0c\u9700\u8981\u6211\u4eec\u6539\u8fdb\u8be5\u7b97\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u539f\u7b97\u6cd5\u3002\n\n```cpp\n//\u6765\u81ea\u672c\u4eba\u7f29\u70b9\u6a21\u677f\u9898\nvoid Tarjan(int x)\n{\n\tdfn[x]=low[x]=++tot;\n\tst[++top]=x, ins[x]=true;\n\tfor (int i=h[x];~i;i=ne[i])\n    \tif (!dfn[e[i]])\n    \t{\n    \t\tTarjan(e[i]);\n\t\t\tlow[x]=min(low[x],low[e[i]]);\n    \t}\n\t\telse if (ins[e[i]]) low[x] = min(low[x], dfn[e[i]]);\n\tif (low[x]!=dfn[x]) return;\n\tcnt++;int now;\n\tdo{\n\t\tnow=st[top--];\n\t\tins[now]=0; \n\t\tbel[now]=cnt;\n\t}while (now!=x);\n\treturn ;\n}\n```\n\n\u539f\u7b97\u6cd5\u4e2d\uff0c\u53ea\u8981\u8fd8\u5728\u6808\u4e2d\uff0c\u6211\u4eec\u90fd\u5c06\u6240\u6709\u5f52\u4e3a\u4e00\u4e2a\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u3002\n\n\u4f46\u662f\uff0c\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u8bdd\uff0c\u5c31\u5e94\u8be5\u4e00\u4e2a\u4e00\u4e2a\u7684\u5904\u7406\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u7684\u7b80\u5355\u73af\uff0c\u800c\u4e0d\u662f\u63c9\u5728\u4e00\u8d77\u3002\n\n\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u9047\u5230 $low[e[i]]<dfn[x]$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u5012\u56de\u53bb\uff0c\u5c31\u53ef\u4ee5\u5012\u63a8\u51fa\u4e00\u6574\u4e2a\u73af\u7684\u60c5\u51b5\u4e86\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u6b64\u65f6 $x$ \u4e5f\u4e3a\u5176\u4e2d\u7684\u70b9\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0c\u76f4\u63a5 $\\operatorname{build-round-square}(x,e[i],w)$\uff0c\u8868\u793a\u4ece $e[i]$ \u5012\u63a8\uff0c\u76f4\u5230 $x$ \u4e3a \"A\" \u70b9\uff0c\u5176\u4e2d $(x,e[i])$ \u7684\u6743\u503c\u4e3a $w$\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vuo9hei8.png)\n\n~~\uff08\u597d\u50cf\u5c11\u6807\u4e86\u4e00\u6761\u8fb9\u7684\u6743\u503c\uff09~~\n\n\u6211\u4eec\u77e5\u9053\uff0cTarjan \u7b97\u6cd5\u5efa\u4e86\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u5728\u6811\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u5982\u56fe\uff0c\u9ed1\u8fb9\u5c31\u662f\u641c\u7d22\u6811\u7684\u8fb9\uff0c\u800c\u7ea2\u8fb9\u5c31\u662f\u975e\u6811\u8fb9\u3002\n\n\u8089\u773c\u53ef\u89c1\uff0c\u6709\u4e24\u4e2a\u73af\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4ed6\u5728\u641c\u7d22\u6811\u4e2d\u7684\u7236\u4eb2\uff0c\u8fd8\u6709\u5230\u7236\u4eb2\u7684\u8ddd\u79bb\u3002\n\n\u5982\u679c\u76f8\u8fde\u7684\u8282\u70b9\u5728\u4ed6\u7684\u4e0b\u9762\uff08\u5373\u4e0d\u662f\u7236\u4eb2\uff09\uff0c\u5e76\u4e14\u4ed6\u7684\u7236\u4eb2\u4e0d\u662f\u8be5\u8282\u70b9\uff0c\u8bf4\u660e\u6709\u53e6\u5916\u4e00\u6761\u8def\u5f84\uff08\u6811\u8fb9\uff09\u53ef\u8fbe\u4ed6\u7684\u513f\u5b50\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $\\operatorname{build-round-square}(x,e[i],w)$ \u4e86\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u641c\u7d22\u5b8c 1 \u8282\u70b9\u540e\uff0c\u6211\u4eec\u627e\u8fde\u63a5\u70b9\uff0c\u627e\u5230 5 \u53f7\u70b9\uff0c\u53d1\u73b0\u6ee1\u8db3\u4e0a\u9762\u7684\u6027\u8d28\uff0c\u4e8e\u662f\u5c31 $\\operatorname{build-round-square}(1,5,2)$ \u5373\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u4f60\u8fd8\u611f\u5230\u8d39\u89e3\uff0c\u8bf7\u770b\u524d\u9762\u7684\u4f8b\u56fe\uff0c\u52a0\u4ee5\u7406\u89e3\u3002\n\n\u5982\u679c\u4f60\u5bf9\u4f20\u53c2\u6709\u4e0d\u7406\u89e3\uff0c\u770b\u4e00\u4e0b\u4ee3\u7801\u5c31\u77e5\u9053\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvoid add(int h[],int a,int b,int c)\n{\n    e[idx]=b,ne[idx]=h[a],w[idx]=c,h[a]=idx++;\n}\n\nvoid build_round_square(int x,int y,int w)\n{\n    int sum=w;\n    for (int i=y;i!=x;i=fa[i])\n    {\n        // cout<<i<<' ';\n        s[i]=sum;\n        sum+=fw[i];\n    }\n    stot[x]=s[x]=sum;\n    add(h2,x,++square_node,0);\n    for (int i=y;i!=x;i=fa[i])\n    {\n        stot[i]=sum;\n        add(h2,square_node,i,min(s[i],stot[i]-s[i]));\n    }\n}\n\nvoid tarjan(int x,int from)\n{\n    dfn[x]=low[x]=++tot;\n    for (int i=h1[x],j;~i;i=ne[i])\n        if (!dfn[j=e[i]])\n        {\n            fa[j]=x,fw[j]=w[i];\n            tarjan(j,i);\n            low[x]=min(low[x],low[j]);\n            if (low[j]>dfn[x]) add(h2,x,j,w[i]);\n        }\n        else if (i!=(from^1)) low[x]=min(low[x],dfn[e[i]]);\n    for (int i=h1[x],j;~i;i=ne[i])\n        if (dfn[j=e[i]]>dfn[x]&&fa[j]!=x)\n            build_round_square(x,j,w[i]);\n}\n```\n\n## 3. \u56de\u5f52\u672c\u9898\n\n#### 1\uff09\u9898\u610f\n\n1. \u7ed9\u5b9a\u4e00\u4e2a\u4ed9\u4eba\u638c\u56fe\uff0c\u6709 $Q$ \u6b21\u8be2\u95ee\uff0c\u8be2\u95ee $u$ \u548c $v$ \u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\n2. $n,q\\leq10^4,m\\leq2*10^4,w\\leq10^5$\u3002\n\n#### 2\uff09\u5177\u4f53\u7b97\u6cd5\n\n\u524d\u9762\u7684\u4e1c\u897f\u662f\u603b\u4f53\u7684\u4ed9\u4eba\u638c\u8f6c\u5706\u65b9\u6811\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u9898\u6765\u8bf4\uff0c\u80af\u5b9a\u4e5f\u4f1a\u6709\u4e00\u4e9b\u7ec6\u8282\u4e0d\u540c\u3002\n\n\u5f53\u7136\uff0c\u4ed9\u4eba\u638c\u7684\u9898\u7684\u5927\u6982\u601d\u8def\u662f\uff1a\n\n1. \u5c06\u4ed9\u4eba\u638c\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u3002\n2. \u7ed3\u5408\u5176\u4ed6\u6811\u7684\u7b97\u6cd5\uff08\u6811\u94fe\u5256\u5206\uff0c\u70b9\u5206\u6cbb\u7b49\uff09\uff0c\u5c06\u672c\u9898\u6811\u7684\u5199\u6cd5\u5199\u597d\u3002\n3. \u5206\u60c5\u51b5\uff0c\u770b\u662f\u5706\u70b9\u8fd8\u662f\u65b9\u70b9\uff0c\u8fdb\u884c\u7b97\u6cd5\u8c03\u6574\u3002\n\n\u672c\u9898\u4e5f\u662f\u5982\u6b64\u3002\n\n\u8003\u8651\u6811\u4e0a\u600e\u4e48\u505a\u3002\n\n\u5f88\u660e\u663e\uff0c\u4f7f\u7528\u500d\u589e\u7b97\u6cd5\uff0c\u5c06\u4e00\u4e2a\u8282\u70b9\u7684 $2^k$ \u6b21\u7956\u5148\u5b58\u50a8\u4e0b\u6765\u3002\n\n\u518d\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u7b54\u6848\u5373\u4e3a\uff1a$ans=d[a]+d[b]-2d[lca]$\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u9996\u5148\uff0c\u5047\u8bbe $lca$ \u662f\u5706\u70b9\uff0c\u76f4\u63a5\u6309\u4e0a\u9762\u6c42\u5373\u53ef\uff08\u56e0\u4e3a\u4f1a\u5728\u539f\u6765\u7684\u70b9\u76f8\u4f1a\uff09\u3002\n\n\u5047\u8bbe $lca$ \u662f\u65b9\u70b9\u5462\uff1f\n\n\u8fd9\u8bf4\u660e\uff0c\u5f53\u5230\u4e86 $lca$ \u7684\u524d\u4e00\u5c42\u65f6\uff0c\u4e24\u4e2a\u70b9\u662f\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u524d\u7f00\u548c $s[]$\uff0c\u5373\u4ece \"A\" \u6027\u8d28\u7684\u70b9\u6309\u540c\u4e00\u4e2a\u65b9\u5411\uff08\u6307\u4e00\u4e2a\u73af\u4e2d\u662f\u540c\u4e00\u4e2a\u65b9\u5411\uff09\u8d70\u5230\u8be5\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u7279\u522b\u5730\uff0c\"A\" \u6027\u8d28\u7684\u70b9\u8bb0\u4e3a\u73af\u7684\u603b\u6743\u503c\u3002\n\n\u90a3\u4e48\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u73af\u95f4\u7684\u8bb0\u5f55\u8868\u793a\u4e3a\uff08$x$ \u8868\u793a $a$ \u5230\u73af\u91cc\u7684\u8282\u70b9\uff0c$y$ \u8868\u793a $b$ \u5230\u73af\u91cc\u7684\u8282\u70b9\uff09\uff1a$d=\\min(\\operatorname{abs}(s[x],s[y]),stot[x]-\\operatorname{abs}(s[x],s[y]))$\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u3002\n\n## 4. \u4ee3\u7801\n\n\u8fd8\u4f1a\u6709\u4e00\u4e9b\u7ec6\u8282\u4ece\u4ee3\u7801\u4e2d\u5448\u73b0\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N=2e4+10,M=1e5+10,L=14;\n\nint h1[N],h2[N],e[M],ne[M],w[M],idx,square_node;\n/*\nh1,h2\u5206\u522b\u8868\u793a\u539f\u56fe\u548c\u65b0\u56fe\u7684\u8282\u70b9\u7684\u5934\u6307\u9488\nsquare_node\u8868\u793a\u65b0\u5efa\u7684\u70b9 \n*/\nint dfn[N],low[N],tot;//Tarjan \u7b97\u6cd5 \nint stot[N],s[N],fa[N],fw[N];\n/*\nstot\u8868\u793a\u6240\u5728\u73af\u7684\u603b\u6743\u503c\ns\u662f\u524d\u7f00\u548c \nfa\u5373\u4e3a\u641c\u7d22\u6811\u4e2d\u7684\u7236\u4eb2\nfw\u8868\u793a\u5230\u7236\u4eb2\u7684\u8ddd\u79bb \n*/\nint f[N][L+1],depth[N],dis[N];//\u500d\u589e\u7b97\u6cd5 \nint n,m,q,A,B;//A,B\u8868\u793a\u8d70\u5230\u540c\u4e00\u4e2a\u73af\u4e2d\u7684\u8282\u70b9 \n\nvoid add(int h[],int a,int b,int c)\n{\n    e[idx]=b,ne[idx]=h[a],w[idx]=c,h[a]=idx++;\n}\n\nvoid build_round_square(int x,int y,int w)\n{\n    int sum=w;\n    for (int i=y;i!=x;i=fa[i])\n    {\n        // cout<<i<<' ';\n        s[i]=sum;\n        sum+=fw[i];\n    }\n    stot[x]=s[x]=sum;//\u6ce8\u610fs[x]\u8981\u8d4b\u503c\u4e3a\u603b\u6743\u503c \n    add(h2,x,++square_node,0);\n    for (int i=y;i!=x;i=fa[i])\n    {\n        stot[i]=sum;\n        add(h2,square_node,i,min(s[i],stot[i]-s[i]));\n    }\n}\n\nvoid tarjan(int x,int from)\n{\n    dfn[x]=low[x]=++tot;\n    for (int i=h1[x],j;~i;i=ne[i])\n        if (!dfn[j=e[i]])\n        {\n            fa[j]=x,fw[j]=w[i];\n            tarjan(j,i);\n            low[x]=min(low[x],low[j]);\n            if (low[j]>dfn[x]) add(h2,x,j,w[i]);\n        }\n        else if (i!=(from^1)) low[x]=min(low[x],dfn[e[i]]);\n    for (int i=h1[x],j;~i;i=ne[i])\n        if (dfn[j=e[i]]>dfn[x]&&fa[j]!=x)//Tarjan\u7b97\u6cd5\u6539\u8fdb \n            build_round_square(x,j,w[i]);\n}\n\nvoid dfs(int x,int fa)//\u500d\u589e\u7b97\u6cd5\u9884\u5904\u7406 \n{\n    depth[x]=depth[fa]+1;\n    f[x][0]=fa;\n    for (int i=1;i<=L;++i) f[x][i]=f[f[x][i-1]][i-1];\n    for (int i=h2[x];~i;i=ne[i])\n        if (e[i]!=fa)\n        {\n            dis[e[i]]=dis[x]+w[i];\n            dfs(e[i],x);\n        }\n}\n\nint LCA(int a,int b)\n{\n    if (depth[a]<depth[b]) swap(a,b);\n    for (int i=L;i>=0;--i)\n        if (depth[f[a][i]]>=depth[b]) a=f[a][i];\n    if (a==b) return a;\n    for (int i=L;i>=0;--i)\n        if (f[a][i]!=f[b][i]) a=f[a][i],b=f[b][i];\n    A=a,B=b;\n    return f[a][0];\n}\n\nint main()\n{\n    memset(h1,-1,sizeof h1);\n    memset(h2,-1,sizeof h2);\n    scanf(\"%d %d %d\",&n,&m,&q);\n    int a,b,c;\n    while (m--)\n    {\n        scanf(\"%d %d %d\",&a,&b,&c);\n        add(h1,a,b,c);add(h1,b,a,c);\n    }\n    square_node=n;\n    tarjan(1,-1);\n    dfs(1,0);\n    while (q--)\n    {\n        scanf(\"%d %d\",&a,&b);\n        int lca=LCA(a,b);\n        if (lca<=n) printf(\"%d\\n\",dis[a]+dis[b]-2*dis[lca]);\n        else{\n            int res=dis[a]-dis[A]+dis[b]-dis[B];\n            res+=min(abs(s[A]-s[B]),stot[A]-abs(s[A]-s[B]));\n            printf(\"%d\\n\",res);\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1626329869,
        "uid": 342891,
        "name": "mydcwfy",
        "ccfLevel": 9,
        "title": "\u4ed9\u4eba\u638c\u8be6\u89e3"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u68f5\u4ed9\u4eba\u638c\uff0c\u6c42\u4ed9\u4eba\u638c\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n### Solution\n\n\u7531\u4e8e\u672c\u9898\u662f\u9759\u6001\u4ed9\u4eba\u638c\u7684\u6a21\u677f\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u52a8\u6001\u4ed9\u4eba\u638c\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5e38\u89c1\u7684\u52a8\u6001\u6811\u6570\u636e\u7ed3\u6784\u601d\u60f3\u5747\u662f\u5c06\u4efb\u610f\u7684\u6811\u901a\u8fc7\u5404\u79cd\u65b9\u6cd5\u6620\u5c04\u6210\u4e00\u68f5\u5e73\u8861\u7684\u6811\u6765\u65b9\u4fbf\u5730\u8fdb\u884c\u7ef4\u62a4\u3002LCT \u5229\u7528 splay \u7ef4\u62a4\u6811\u7684\u6bcf\u4e00\u6761\u94fe\u5256\u5206\uff0c\u518d\u7528\u865a\u8fb9\u5c06\u5176\u7c98\u5728\u4e00\u8d77\u6765\u8868\u793a\u6574\u68f5\u6811\u7684\u7ed3\u6784\u3002\u7c7b\u6bd4 LCT\uff0c\u53ef\u4ee5\u6784\u9020\u51fa Link-Cut Cactus\uff0c\u5373\u5229\u7528 splay \u7ef4\u62a4\u4ed9\u4eba\u638c\u7684\u94fe\u5256\u5206\u3002\n\n\u4e0b\u56fe\u4e2d\u7684\u4ed9\u4eba\u638c\u5b9a\u4e49\u7ea2\u8272\u8fb9\u4e3a\u5b9e\u8fb9\uff0c\u9ed1\u8272\u8fb9\u4e3a\u865a\u8fb9\u3002\u7c7b\u4f3c LCT\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684 preferred-child \u4ee5\u5b9e\u8fb9\u76f8\u8fde\u3002\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u5b9a\u4e49\u5176\u7236\u4eb2 $\\rm A$ \u4e3a\u73af\u4e0a\u7684\u79bb\u4ed9\u4eba\u638c\u7684\u6839\u6700\u8fd1\u7684\u8282\u70b9\uff0c\u5176\u91cd\u513f\u5b50 $\\rm B$ \u4e3a\u73af\u4e0a\u6700\u540e\u4e00\u6b21 $\\rm access$ \u8bbf\u95ee\u5230\u7684\u8282\u70b9\u3002$\\rm A,B$ \u95f4\u7684\u6700\u77ed\u8def\u4ee5\u5b9e\u8fb9\u76f8\u8fde\uff0c\u73af\u4e0a\u5176\u4ed6\u8282\u70b9\u6784\u6210\u7684\u94fe\u4e0a\u4e5f\u4ee5\u5b9e\u8fb9\u76f8\u8fde\uff0c\u79f0\u4e4b\u4e3a**\u989d\u5916\u94fe**\u3002\u989d\u5916\u94fe\u4e24\u7aef\u4e0e $\\rm A,B$ \u94fe\u4e4b\u95f4\u7684\u8fb9\u4e3a\u865a\u8fb9\u3002\n\n![](https://s1.ax1x.com/2020/07/21/UTPnUg.png)\n\n\u7531\u4e8e\u9700\u8981\u7ef4\u62a4\u4ed9\u4eba\u638c\u4e0a\u8fb9\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u5728\u6bcf\u6761\u8fb9\u4e0a\u5efa\u7acb\u4e00\u4e2a\u70b9\u6765\u8868\u793a\u8fb9\u7684\u4fe1\u606f\u3002\n\n\u6ce8\u610f\u5728\u6267\u884c $\\rm access$ \u64cd\u4f5c\u65f6\u4f1a\u9996\u5148\u5c06\u4e0e\u513f\u5b50\u8282\u70b9\u95f4\u7684\u8fb9\u90fd\u53d8\u4e3a\u865a\u8fb9\uff0c $\\rm access$ \u8282\u70b9 $\\rm A$ \u4e4b\u540e\u4f1a\u9996\u5148\u5c06\u94fe\u4e0a\u548c $\\rm A$ \u76f8\u8fde\u7684\u8fb9\u53d8\u4e3a\u865a\u8fb9\uff0c\u4f46\u8fd9\u6761\u8fb9\u7684\u4fe1\u606f\u4ecd\u7136\u8bb0\u5f55\u5728\u7ef4\u62a4 $\\rm A,B$ \u94fe\u7684 splay \u4e0a\u3002\u6b64\u65f6\u9700\u8981\u7279\u5224\u7ef4\u62a4\u3002\n\n![UTiioF.png](https://s1.ax1x.com/2020/07/21/UTiioF.png)\n\n\u7c7b\u4f3c LCT \u7684 $\\rm access$ \u64cd\u4f5c\uff0c `access(x)` \u4f1a\u5c06 $x$ \u5230\u6839\u7684\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u5168\u90e8\u53d8\u4e3a\u5b9e\u8fb9\u3002\u8bbf\u95ee\u5230\u8282\u70b9 $x$ \u65f6\u9996\u5148\u5224\u65ad\u5176\u5728splay\u4e0a\u7684\u524d\u4e00\u6761\u8fb9\u662f\u5426\u5728\u73af\u4e0a\uff0c\u5982\u679c\u4e0d\u5728\u73af\u4e0a\u5c31\u6309 LCT \u65b9\u6cd5\u76f4\u63a5\u5904\u7406\u3002\n\n\u5f53 $x$ \u5728\u73af\u4e0a\u65f6\uff0c\u9700\u8981\u5bf9\u989d\u5916\u94fe\u7279\u6b8a\u5904\u7406\u3002\u5c06\u73af\u4e0a $\\rm A,B$ \u94fe\u4e24\u7aef\u90fd\u65ad\u5f00\uff0c\u7136\u540e\u5c06 $\\rm A,B$ \u94fe\u4e0e\u989d\u5916\u94fe\u94fe\u63a5\u8d77\u6765\u3002\u4e4b\u540e\u5c06 $x$ \u8bbe\u4e3a splay \u7684\u6839\uff0c\u5e76\u9009\u62e9\u957f\u5ea6\u8f83\u77ed\u7684\u4e00\u8fb9\u94fe\u63a5\u4f5c\u4e3a\u65b0\u7684 $\\rm A,B$ \u94fe\uff0c\u53e6\u4e00\u8fb9\u4f5c\u4e3a\u989d\u5916\u94fe\u3002\n\n\u6362\u6839\u64cd\u4f5c\u7c7b\u4f3c LCT \u7684\u6362\u6839\u7ef4\u62a4\u7ffb\u8f6c\u6807\u8bb0\u3002\u8003\u8651 $\\rm access$ \u6253\u7ffb\u8f6c\u6807\u8bb0\u540e\u4f1a\u5bfc\u81f4\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u73af $\\rm A,B$ \u8282\u70b9\u4e92\u6362\uff0c\u5e76\u4e14\u989d\u5916\u94fe\u65b9\u5411\u4e5f\u4f1a\u6536\u5230\u5f71\u54cd\u53d8\u4e3a\u76f8\u53cd\u3002\u56e0\u6b64\u5bf9\u4e8e $\\rm access$ \u5230\u7684\u6bcf\u4e00\u4e2a\u73af\u90fd\u9700\u8981\u68c0\u67e5 $\\rm A,B$ \u7684\u987a\u5e8f\u662f\u5426\u76f8\u53cd\uff0c\u5982\u76f8\u53cd\u5c31\u5c06\u5176\u4ea4\u6362\u5e76\u4e14\u7ed9\u989d\u5916\u94fe\u518d\u6253\u4e00\u4e2a\u53cd\u8f6c\u6807\u8bb0\u3002\n\n\u4e4b\u540e\u7684\u64cd\u4f5c\u7ef4\u62a4\u65b9\u5f0f\u548cLCT\u7c7b\u4f3c\u3002\u672c\u9898\u4e2d\u9700\u8981\u5b9e\u73b0\u8fde\u8fb9\u64cd\u4f5c\u548c\u67e5\u8be2\u4e24\u70b9\u95f4\u6700\u77ed\u8def\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n    int x=0,f=1,c=getchar();\n    while(c<48) c=='-'&&(f=-1),c=getchar();\n    while(c>47) x=x*10+c-'0',c=getchar();\n    return x*f;\n}\n\nconst int MAXN = 1200005;\nint fa[MAXN],ch[MAXN][4],val[MAXN];\nint s[MAXN],rev[MAXN],flag[MAXN],st[MAXN];\nint n,m,q,tot;\n\ninline void pushr(int x)\n{swap(ch[x][0],ch[x][1]),rev[x]^=1;}\n\ninline void pushup(int x)\n{\n    s[x]=val[x],flag[x]=bool(ch[x][2]);\n    if(ch[x][0])\n    {\n        s[x]+=s[ch[x][0]];\n        flag[x]|=flag[ch[x][0]];\n    }\n    if(ch[x][1])\n    {\n        s[x]+=s[ch[x][1]];\n        flag[x]|=flag[ch[x][1]];\n    }\n    if(ch[x][2])\n        s[x]+=min(s[ch[x][2]],s[ch[x][3]]);\n}\n\ninline void pushdown(int x)\n{\n    if(!rev[x]) return;\n    pushr(ch[x][0]); pushr(ch[x][1]);\n    if(ch[x][2]) pushr(ch[x][2]),pushr(ch[x][3]);\n    rev[x]=0;\n}\n\ninline bool notroot(int x)\n{return fa[x]&&(ch[fa[x]][0]==x || ch[fa[x]][1]==x);}\n\ninline int chk(int x)\n{return ch[fa[x]][2]==x ? 2 : 3;}\n\ninline void init(int x,int y)\n{\n    val[x]=s[x]=y; rev[x]=flag[x]=0;\n    fa[x]=ch[x][0]=ch[x][1]=ch[x][2]=ch[x][3]=0;\n}\n\ninline void rotate(int x)\n{\n    int y=fa[x],z=fa[y];\n    int k=ch[y][1]==x,w=ch[x][k^1];\n    if(notroot(y)) fa[ch[z][ch[z][1]==y]=x]=z;\n    else if(z && ch[z][2]) fa[ch[z][chk(y)]=x]=z;\n    else fa[x]=z; fa[ch[y][k]=w]=y;\n    fa[ch[x][k^1]=y]=x; pushup(y);\n}\n\ninline void splay(int x,int rt=0)\n{\n    int y=x,z=0; st[++z]=y;\n    while(notroot(y)) st[++z]=y=fa[y];\n    while(z) pushdown(st[z--]);\n    while(notroot(x))\n    {\n        y=fa[x],z=fa[y];\n        if(y==rt) break;\n        if(notroot(y) && z!=rt)\n            rotate(ch[z][1]==y^ch[y][1]==x ? x : y);\n        rotate(x);\n    }\n    pushup(x);\n}\n\ninline void evert(int y,int x)\n{\n    splay(y); pushdown(x);\n    int d=chk(x),p=ch[y][1];\n    while(ch[p][0]) pushdown(p),p=ch[p][0];\n    splay(p,y); ch[y][1]=0;\n    fa[ch[y][d]=ch[x][0]]=y; ch[x][0]=0;\n    pushr(ch[x][1]); fa[ch[p][1]=ch[x][1]]=p;\n    ch[x][1]=0; fa[ch[p][0]=ch[y][d^1]]=p;\n    fa[ch[y][d^1]=p]=y; pushup(p); pushup(y);\n}\n\ninline void access(int x)\n{\n    for(int y=0; x; x=fa[x])\n    {\n        splay(x);\n        if(fa[x] && ch[fa[x]][2]) evert(fa[x],x);\n        ch[x][1]=y; pushup(x); y=x;\n    }\n}\n\ninline void makeroot(int x)\n{access(x),splay(x),pushr(x);}\n\ninline void split(int x,int y)\n{makeroot(x),access(y),splay(y),splay(x,y);}\n\ninline void link(int x,int y,int k)\n{\n    int p=tot++; init(p,k); split(x,y);\n    if(fa[x]!=y) return fa[x]=p,fa[p]=y,void();\n    if(!flag[y])\n    {\n        int z=tot++; init(z,0); fa[ch[z][2]=p]=z;\n        fa[ch[z][3]=ch[x][1]]=z; fa[ch[x][1]=z]=x;\n        pushup(z); pushup(x); pushup(y);\n    }\n}\n\ninline int dist(int x,int y)\n{split(x,y); return s[y];}\n\nint main(int argc, char const *argv[])\n{\n    n=read(); m=read(); q=read(); tot=n+1;\n    int x,y,w;\n    for(int i=1; i<=m; ++i)\n    {\n        x=read(); y=read(); w=read();\n        link(x,y,w);\n    }\n    while(q--)\n        x=read(),printf(\"%d\\n\",dist(x,read()));\n    return 0;\n}\n\n```",
        "postTime": 1596588028,
        "uid": 107735,
        "name": "shiroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\u3011"
    },
    {
        "content": "## \u5e7f\u4e49\u5706\u65b9\u6811\n\n\u5f88\u4e45\u4e4b\u524d\u5199\u8fc7\u8fd9\u9898\uff0c\u4e0d\u8fc7\u4e0d\u662f\u7528\u7684\u5706\u65b9\u6811\uff0c\u4eca\u5929\u6253\u7b97\u590d\u4e60\u5706\u65b9\u6811\uff0c\u6240\u4ee5\u6765\u5199\u4e00\u4e0b\u8fd9\u4e2a\u9898\u3002\n\n\u770b\u5230\u9898\u89e3\u4e2d\u5706\u65b9\u6811\u7684\u5199\u6cd5\u548c\u6211\u4e4b\u524d\u5199\u7684\u597d\u50cf\u4e0d\u5927\u4e00\u6837\uff0c\u8c8c\u4f3c\u90fd\u6709\u4e00\u79cd\u8fb9\u53eb\u5706-\u5706\u8fb9\uff0c\u800c\u5728\u6211\u7406\u89e3\u7684\u5706\u65b9\u6811\u4e2d\u4efb\u610f\u4e00\u4e2a\u5706\u70b9\u4e0d\u548c\u5706\u70b9\u76f8\u90bb\uff0c\u4efb\u610f\u4e00\u4e2a\u65b9\u70b9\u4e0d\u548c\u65b9\u70b9\u76f8\u90bb\uff0c\u4e5f\u5c31\u662f\u5f62\u72b6\u76f8\u540c\u7684\u4e0d\u76f8\u90bb\uff0c\u7136\u540e\u6211\u4eba\u5c31\u50bb\u4e86\uff0cBDFS\u4e86\u4e00\u4e0b\u53d1\u73b0\u6211\u7684\u5199\u6cd5\u662f\u5e7f\u4e49\u5706\u65b9\u6811\u7684\u5199\u6cd5\uff1f~~\u679c\u7136\u4e4b\u524d\u6ca1\u597d\u597d\u5b66~~\u3002\n\n\u4f46\u662f\u611f\u89c9\u8fd9\u4e24\u79cd\u5199\u6cd5\u597d\u50cf\u53c8\u90fd\u5dee\u4e0d\u591a\uff0c\u5728\u5904\u7406\u73af\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u73af\uff0c\u65ad\u5f00\u539f\u6765\u7684\u8fb9\uff0c\u548c\u65b9\u70b9\u5efa\u8fb9\uff0c\u8fb9\u6743\u8981\u597d\u597d\u60f3\u4e00\u4e0b\uff0c\u4e2a\u4eba\u611f\u89c9\u8fd9\u662f\u5706\u65b9\u6811\u6bd4\u8f83\u5173\u952e\u7684\u5730\u65b9\uff0c\u5b9a\u4e49\u4e00\u4e2a\u73af\u7684\u6839\u4e3a\u8fd9\u4e2a\u73af\u4e0a $dfn$ \u5e8f\u6700\u5c0f\u7684\u70b9\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u548c\u65b9\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u5c31\u662f\u8fd9\u4e2a\u70b9\u548c\u73af\u7684\u6839\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u600e\u4e48\u6c42\u6700\u77ed\u8ddd\u79bb\uff1f\u53ef\u4ee5\u5728 $dfs$ \u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u8ddd\u79bb\u6570\u7ec4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5728\u4e00\u4e2a\u73af\u4e0a\u7684\u4e24\u70b9\uff0c\u8981\u4e48\u76f4\u63a5\u662f\u4e24\u70b9\u7684\u8ddd\u79bb\u6570\u7ec4\u4f5c\u5dee\uff0c\u8981\u4e48\u662f\u4e0a\u8fb9\u90a3\u6761\u8def\u5f84\u7684\u8865\u96c6\uff0c\u7528\u73af\u7684\u957f\u5ea6\u53bb\u51cf\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u73b0\u5728\u5efa\u6811\u65b9\u9762\u5c31\u53ea\u5269\u4e0b\u73af\u957f\u9700\u8981\u6c42\u4e86\uff0c\u5bf9\u4e8e\u4ed9\u4eba\u638c\u6765\u8bf4\uff0c\u5728\u641c\u7d22\u6811\u4e0a\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u6761\u53cd\u7956\u8fb9\uff0c\u4e0d\u7136\u5c31\u4e0d\u6ee1\u8db3\u5b9a\u4e49\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u8bb0\u5f55\u53cd\u7956\u8fb9\u7684\u6743\u503c\uff0c\u518d\u52a0\u4e0a\u8ddd\u79bb\u6570\u7ec4\u505a\u5dee\u7684\u503c\u5c31\u662f\u73af\u957f\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\uff0c\u8bf4\u4e0d\u5927\u6e05\u695a\u3002\n\n\u5927\u4f53\u662f\u4e0a\u8fb9\u90a3\u6837\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u7ec6\u8282\uff0c\u4e00\u662f\u56e0\u4e3a\u662f\u5e7f\u4e49\u5706\u65b9\u6811\uff0c\u6240\u4ee5\u4e00\u4e2a\u65b9\u70b9\u53ef\u80fd\u4e0d\u5bf9\u5e94\u4e00\u4e2a\u73af\uff0c\u800c\u662f\u5bf9\u5e94\u7740\u4e24\u70b9\u4e00\u7ebf\uff0c\u90a3\u4e48\u628a\u5b83\u6269\u6210\u4e00\u4e2a\u73af\u5373\u53ef\uff0c\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5047\u88c5\u6709\u4e00\u6761\u91cd\u8fb9\u3002\u53e6\u4e00\u4e2a\u662f  $tarjan$\n\u7684\u65f6\u5019\u8bb0\u5f55\u53cd\u7956\u8fb9\u65f6\u8981\u5224\u65ad $dfn$ \u5e8f\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5224\u65ad\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u8fd9\u8c8c\u4f3c\u633a\u663e\u7136\u7684\u4f46\u662f\u6211\u6700\u5f00\u59cb\u6302\u4e86\uff0c~~wtcl~~\u3002\n\n\u6700\u540e\u5c31\u662f\u67e5\u8be2\u4e86\uff0c\u67e5\u8be2\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c $lca$ \u662f\u65b9\u70b9\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u6700\u540e\u4e00\u6b65\u7684\u8d70\u6cd5\uff0c\u56e0\u4e3a\u662f\u5728\u4e00\u4e2a\u73af\u4e0a\u8d70\uff0c\u7279\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n```\n#include<map>\n#include<cassert>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+10;\n#define rint register int\nstruct Edge{\n\tint to,nxt,val;\n}e[N<<1],e2[N<<1];\nint h[N],idx;\nvoid Ins(rint a,rint b,rint c){\n\te[++idx].to=b;e[idx].nxt=h[a];\n\te[idx].val=c;h[a]=idx;\n}\nint h2[N],idx2;\nvoid Ins2(rint a,rint b,rint c){\n\te2[++idx2].to=b;e2[idx2].nxt=h2[a];\n\te2[idx2].val=c;h2[a]=idx2;\n}\nint stk[N],tp,dfn[N],low[N],Time,val[N],dis[N],dis2[N],r[N],fang;\nvoid tarjan(rint u,rint fa){\n\tstk[++tp]=u;\n\tdfn[u]=low[u]=++Time;\n\tfor(rint i=h[u];i;i=e[i].nxt){\n\t\trint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tif(!dfn[v]){\n\t\t\tval[v]=e[i].val;\n\t\t\tdis[v]=dis[u]+e[i].val;\n\t\t\ttarjan(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tif(low[v]>=dfn[u]){\n\t\t\t\t++fang;\n\t\t\t\tr[fang]=val[stk[tp]]+dis[stk[tp]]-dis[u];\n\t\t\t\twhile(1){\n\t\t\t\t\trint x=stk[tp--];\n\t\t\t\t\trint tmp=dis[x]-dis[u];\n\t\t\t\t\ttmp=min(tmp,r[fang]-tmp);\n\t\t\t\t\tIns2(x,fang,tmp);Ins2(fang,x,tmp);\n\t\t\t\t\tif(x==v)break;\n\t\t\t\t}\n\t\t\t\tIns2(u,fang,0);\n\t\t\t\tIns2(fang,u,0);\n\t\t\t}\n\t\t}else if(dfn[v]<dfn[u]){\n\t\t\tval[u]=e[i].val,low[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n}\nint p[N][22],d[N];\nvoid dfs(rint u,rint fa){\n\tfor(rint i=0;p[u][i];i++)\n\t\tp[u][i+1]=p[p[u][i]][i];\n\tfor(rint i=h2[u];i;i=e2[i].nxt){\n\t\trint v=e2[i].to;\n\t\tif(v==fa)continue;\n\t\tdis2[v]=dis2[u]+e2[i].val;\n\t\tp[v][0]=u;\n\t\td[v]=d[u]+1;\n\t\tdfs(v,u);\n\t}\n}\nint n,m,q;\npair<int,int> lca(rint x,rint y){\n\tif(d[x]<d[y])swap(x,y);\n\tfor(rint dt=d[x]-d[y],i=0;dt;dt>>=1,i++)\n\t\tif(dt&1)x=p[x][i];\n\tif(x==y)return make_pair(x,-1);\n\tfor(rint i=15;~i;i--)\n\t\tif(p[x][i]!=p[y][i])x=p[x][i],y=p[y][i];\n\tif(p[x][0]<=n)return make_pair(p[x][0],-1);\n\telse return make_pair(x,y);\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfang=n;\n\tfor(rint i=1;i<=m;i++){\n\t\trint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tIns(a,b,c);Ins(b,a,c);\n\t}\n\ttarjan(1,0);\n\tdfs(1,0);\n\twhile(q--){\n\t\trint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tpair<int,int> pi=lca(u,v);\n\t\tif(pi.second==-1)printf(\"%d\\n\",dis2[u]+dis2[v]-2*dis2[pi.first]);\n\t\telse {\n\t\t\trint tmp=abs(dis[pi.first]-dis[pi.second]);\n\t\t\ttmp=min(tmp,r[p[pi.first][0]]-tmp);\n\t\t\tprintf(\"%d\\n\",dis2[u]+dis2[v]-dis2[pi.first]-dis2[pi.second]+tmp);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1610338125,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\u3011"
    },
    {
        "content": "## P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\n\n### \u524d\u8a00\n\u6211\u8ba4\u4e3a\u4ed9\u4eba\u638c\u662f\u6bd4\u8f83\u7efc\u5408\u7684\u9898\uff0c\u6d89\u53ca\u5230\u4e86\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3001\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08\u751a\u81f3\u6709\u4e9b\u9898\u76ee\u4f1a\u7528\u5230\u6811\u94fe\u5256\u5206\u3001\u52a8\u6001\u6811\u7b49\u7b49\uff09\u3002\n\n\u6240\u4ee5\u5462\uff0c\u8bf7\u5148\u628a\u4e0b\u9762\u7684\u9898\u638c\u63e1\u4e86\u518d\u770b\u6b64\u9898\n\n- [P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf](https://www.luogu.com.cn/problem/P8436)\n- [P3379 \u3010\u6a21\u677f\u3011\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09](https://www.luogu.com.cn/problem/P3379)\n\n[\u535a\u5ba2\u98df\u7528](https://www.cnblogs.com/LittleMoMol-kawayi/p/solution-LuoGu-P5236.html)\n\n### \u5706\u65b9\u6811\n\u56e0\u4e3a\u4ed9\u4eba\u638c\u662f\u6709\u73af\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u53ca\u5176\u4e0d\u65b9\u4fbf\uff0c\u90a3\u4e48\u4e0d\u59a8\u5c06\u4ed9\u4eba\u638c\u505a\u4e00\u4e2a\u53d8\u5f62\uff0c\u53d8\u6210\u4e00\u68f5\u6811\uff0c\u7136\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f3c\u4e4e\u5c31\u53ef\u505a\u4e86\u3002\n\n\u8fd9\u91cc\u5f15\u8fdb\u201c\u5706\u65b9\u6811\u201d\uff0c\u6b63\u5982\u5b83\u7684\u540d\u5b57\uff0c\u5706\u65b9\u6811\u4e2d\u6709\u201c\u5706\u70b9\u201d\u548c\u201c\u65b9\u70b9\u201d\u4e24\u79cd\u70b9\u3002\u5706\u65b9\u6811\u8be5\u600e\u4e48\u5efa\uff1f\u770b\u4e0b\u9762\u7684\u56fe\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mq4fy4pz.png)\n\n\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u6027\u8d28\uff1a\n- \u5706\u65b9\u6811\u7684\u5706\u70b9 = \u4ed9\u4eba\u638c\u7684\u603b\u70b9\u6570\n- \u5706\u65b9\u6811\u7684\u65b9\u70b9 = \u4ed9\u4eba\u638c\u7684\u603b\u73af\u6570\n\n\u90a3\u4e48\uff0c\u5706\u65b9\u6811\u5177\u4f53\u662f\u600e\u4e48\u5efa\u7acb\u7684\u5462\uff1f\n\n1. \u9009\u53d6\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a\u5706\u65b9\u6811\u7684\u8ddf\u3002\n2. \u5982\u679c\u8be5\u70b9\u5728\u67d0\u4e00\u4e2a\u73af\u4e0a\uff0c\u90a3\u4e48\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u65b9\u70b9\uff0c\u5e76\u4f7f\u8be5\u70b9\u5411\u65b9\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a 0 \u7684**\u6709\u5411\u8fb9**\uff0c\u5e76\u628a\u8be5\u70b9\u53eb\u505a\u8fd9\u4e2a\u73af\u7684\u201c\u5934\u201d\uff0c\u518d\u5c06\u73af\u4e0a\u5176\u4ed6\u70b9\u53d8\u6210\u5706\u70b9\uff0c\u4ece\u65b9\u70b9\u4f9d\u6b21\u5411\u5b83\u4eec\u8fde\u4e00\u6761\u6743\u503c\u4e3a k \u7684**\u6709\u5411\u8fb9**\u3002\uff08k \u662f\u4ec0\u4e48\u8be6\u89c1\u4e0b\u6587\uff09\n3. \u5982\u679c\u8be5\u70b9\u4e0d\u5728\u67d0\u4e00\u4e2a\u73af\u4e0a\uff0c\u90a3\u4e48\u5efa\u7acb\u82e5\u5e72\u4e2a\u65b0\u7684\u5706\u70b9\uff0c\u5e76\u4f7f\u8be5\u70b9\u5411\u65b0\u5706\u70b9\u8fde\u4e00\u6761\u6743\u503c\u4e3a k \u7684**\u6709\u5411\u8fb9**\uff0c\u8fd9\u4e9b\u65b0\u7684\u5706\u70b9\u7684\u6570\u91cf\u662f\u8fd8\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u4e14\u4e0e\u8be5\u70b9\u76f8\u90bb\u7684\u70b9\u7684\u6570\u91cf\uff08\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u5f62\u6001\u4e0d\u53d8\uff0c\u4ece\u4ed9\u4eba\u638c\u90a3\u91cc\u590d\u5236\u8fc7\u6765\u5efa\u5230\u5706\u65b9\u6811\u91cc\uff09\n4. \u5c06\u8fd9\u4e9b\u65b0\u5efa\u7684\u70b9\u518d\u6267\u884c\u7b2c 2 \u6b65\uff0c\u76f4\u5230\u6240\u6709\u70b9\u5747\u88ab\u4fbf\u5229\u3002\n\nk \u8868\u793a\uff1a\u4ed9\u4eba\u638c\u4e2d\u8be5\u70b9\u5230\u8fd9\u4e2a\u70b9\u6240\u5728\u73af\u7684\u201c\u5934\u201d\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n### \u5982\u4f55\u7ef4\u62a4\u4fe1\u606f\n\n\u5982\u679c\u6211\u4eec\u5728\u4e00\u9897**\u666e\u901a\u7684\u6811**\u4e0a\u8981\u6c42\u6700\u77ed\u8def\uff0c\u8003\u8651\u7528**\u6811\u4e0a\u5dee\u5206**,\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6811\u6839\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u5bf9\u4e8e\u4e24\u4e2a\u6811\u4e0a\u70b9 $a,b$ \u7684\u8ddd\u79bb\uff0c\u6c42\u51fa\u5b83\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 $p$\uff0c\u7136\u540e\u7b54\u6848\u4e3a $dist[a]+dist[b]-2dist[p]$\u3002\n\n\u4e0d\u8fc7\u5706\u65b9\u6811\u5e76\u4e0d\u662f\u8fd9\u4e48\u5355\u7eaf\u7684\uff0c\u5b83\u9700\u8981\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u3002\n- \u82e5\u4e24\u4e2a\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u4e00\u4e2a\u5706\u70b9\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6c42\u6cd5\u662f\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\u7684\n- \u82e5\u4e24\u4e2a\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u4e00\u4e2a\u65b9\u70b9\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u7684\u6700\u8fd1\u516c\u5171\u6700\u5148\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u8fd9\u4e2a\u5c31\u6709\u70b9\u68d8\u624b\u4e86\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u60c5\u51b5\uff0c\u6211\u653e\u4e2a\u56fe\u53ef\u80fd\u66f4\u5f62\u8c61\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k0rtviky.png)\n\n\u4f60\u4f1a\u53d1\u73b0\u6b64\u65f6 $a,b$ \u7684\u6700\u77ed\u8ddd\u79bb\u5e94\u8be5\u4e3a\uff1a**\u84dd\u8272\u865a\u7ebf+\u7c89\u7ea2\u8272**\u6216\u8005**\u84dd\u8272\u865a\u7ebf+\u68d5\u8272**\uff0c\u90a3\u4e48\u8fd9\u4e24\u79cd\u60c5\u51b5\u53d6\u6700\u5c0f\u503c\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e0d\u8fc7\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u5982\u4f55\u5feb\u901f\u67e5\u8be2\u6bcf\u4e2a\u73af\u4e0a\u7684\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u6765\u5b9e\u73b0\uff01\u7279\u6b8a\u5730\uff0c\u628a\u6bcf\u4e2a\u73af\u7684\u201c\u5934\u201d\u5f53\u4f5c\u524d\u7f00\u548c\u7684\u7b2c\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u987a\u65f6\u9488\u6216\u8005\u9006\u65f6\u9488\u904d\u5386\u73af\u5373\u53ef\u3002\n\n\u6700\u540e\u5c31\u662f\u4e00\u5806\u7ec6\u8282\u4e86 hh\n\n### Code\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 12010, M = N * 3;\n\nint n, m, Q, new_n;\nint h1[N], h2[N], e[M], w[M], ne[M], idx;\nint dfn[N], low[N], timestamp;\nint s[N], stot[N], fu[N], fw[N], fe[M];\nint fa[N][14], depth[N], dist[N];\nint A, B;\n\nvoid add(int h[], int a, int b, int c)\n{\n\te[idx] = b;\n\tw[idx] = c;\n\tne[idx] = h[a];\n\th[a] = idx ++ ;\n\t\n\treturn;\n}\n\nvoid build_circle(int x, int y, int z)\n{\n\tint sum = z;\n\tfor (int k = y; k != x; k = fu[k])\n\t{\n\t\ts[k] = sum;\n\t\tsum += fw[k];\n\t}\n\ts[x] = stot[x] = sum;\n\tadd(h2, x, ++ new_n, 0);\n\tfor (int k = y; k != x; k = fu[k])\n\t{\n\t\tstot[k] = sum;\n\t\tadd(h2, new_n, k, min(s[k], sum - s[k]));\n\t}\n\t\n\treturn;\n}\n\nvoid tarjan(int u, int from)\n{\n\tdfn[u] = low[u] = ++ timestamp;\n\tfor (int i = h1[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (!dfn[j])\n\t\t{\n\t\t\tfu[j] = u;\n\t\t\tfw[j] = w[i];\n\t\t\tfe[j] = i;  //fe[j]\u5b58\u50a8j\u7531\u90a3\u6761\u8fb9\u4e0b\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u5904\u7406\u91cd\u8fb9\u95ee\u9898\n\t\t\ttarjan(j, i);\n\t\t\tlow[u] = min(low[u], low[j]);\n\t\t\tif (dfn[u] < low[j]) add(h2, u, j, w[i]);\n\t\t}\n\t\telse if (i != (from ^ 1)) low[u] = min(low[u], dfn[j]);\n\t}\n\t\n\tfor (int i = h1[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (dfn[u] < dfn[j] && fe[j] != i)\n\t\t\tbuild_circle(u, j, w[i]);\n\t}\n\t\n\treturn;\n}\n\nvoid dfs_lca(int u, int father)\n{\n\tdepth[u] = depth[father] + 1;\n\tfa[u][0] = father;\n\tfor (int k = 1; k <= 13; k ++ )\n\t\tfa[u][k] = fa[fa[u][k - 1]][k - 1];\n\tfor (int i = h2[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tdist[j] = dist[u] + w[i];\n\t\tdfs_lca(j, u);\n\t}\n\t\n\treturn;\n}\n\nint lca(int a, int b)\n{\n\tif (depth[a] < depth[b]) swap(a, b);\n\t\n\tfor (int k = 13; k >= 0; k -- )\n\t\tif (depth[fa[a][k]] >= depth[b])\n\t\t\ta = fa[a][k];\n\t\n\tif (a == b) return a;\n\t\n\tfor (int k = 13; k >= 0; k -- )\n\t\tif (fa[a][k] != fa[b][k])\n\t\t{\n\t\t\ta = fa[a][k];\n\t\t\tb = fa[b][k];\n\t\t}\n\tA = a, B = b;\n\t\n\treturn fa[a][0];\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tcin >> n >> m >> Q;\n\tnew_n = n;\n\tmemset(h1, -1, sizeof h1);\n\tmemset(h2, -1, sizeof h2);\n\twhile (m -- )\n\t{\n\t\tint a, b, c;\n\t\tcin >> a >> b >> c;\n\t\tadd(h1, a, b, c);\n\t\tadd(h1, b, a, c);\n\t}\n\ttarjan(1, -1);\n\t\n\tdfs_lca(1, 0);\n\t\n\twhile (Q -- )\n\t{\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tint p = lca(a, b);\n\t\tif (p <= n) cout << dist[a] + dist[b] - 2 * dist[p] << endl;\n\t\telse\n\t\t{\n\t\t\tint da = dist[a] - dist[A];\n\t\t\tint db = dist[b] - dist[B];\n\t\t\tint l = abs(s[A] - s[B]);\n\t\t\tint r = stot[A] - l;\n\t\t\tint dm = min(l, r);\n\t\t\tcout << da + dm + db << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n### \u540e\u8bed\n\n\u633a\u9ebb\u70e6\u7684\uff0c\u4f46\u662f\u7406\u89e3\u4e86\u7684\u8bdd~~\u5c31\u597d\u80cc\u4e86~~\uff0c\u6572\u4ee3\u7801\u591a\u662f\u4e00\u4ef6~~\u7f8e\u901d~~\uff01\n\n\u5b8c\u7ed3\u6492\u82b1~",
        "postTime": 1659918985,
        "uid": 590755,
        "name": "LittleMoMol",
        "ccfLevel": 0,
        "title": "P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e2a\u5706\u65b9\u6811\u677f\u5b50\n\n\u8003\u8651\u628a\u539f\u56fe\u7684\u70b9\u5f53\u505a\u5706\u70b9\uff0c\u6bcf\u4e00\u4e2a\u73af\u4e2d\u95f4\u5efa\u4e00\u4e2a\u65b9\u70b9\n\n\u6293\u4f4f\u4e00\u53f7\u70b9\u628a\u4ed9\u4eba\u638c\u63d0\u8d77\u6765\uff0c\u7136\u540e\u4ece\u4e00\u4e2a\u73af\u7684\u9876\u70b9\u5411\u65b9\u70b9\u8fde\u957f\u4e3a0\u7684\u8fb9\uff0c\u65b9\u70b9\u5411\u73af\u4e0a\u5176\u5b83\u70b9\u8fde\u957f\u4e3a\u8fd9\u4e2a\u70b9\u5230\u9876\u70b9\u7684\u8ddd\u79bb\u7684\u8fb9\n\n\u5176\u5b9e\u5c31\u662f\u628a\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u5230\u9876\u70b9\u7684\u8ddd\u79bb\u5f52\u5230\u8fd9\u4e2a\u73af\u7684\u9876\u70b9\u4e0a\n\n\u8fd9\u6837\u4f60\u81ea\u4e0b\u800c\u4e0a\u7a7f\u8fc7\u8fd9\u4e2a\u73af\u7684\u7b97\u5f97\u7684\u8ddd\u79bb\u5c31\u662f\u5728\u6811\u4e0a\u7684\u8ddd\u79bb\n\n\u6240\u4ee5\u8be2\u95ee\u5c31\u662f\u5728\u5706\u65b9\u6811\u4e0a\u6c42\u8def\u5f84\u8ddd\u79bb\uff0c\u7279\u5224\u4e00\u4e0b\u5982\u679clca\u662f\u65b9\u70b9\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u4ece\u5de6\u5f80\u53f3\u7a7f\u8fc7\u73af\u7684\u8ddd\u79bb\n\n\u8fd9\u4e2a\u8ddd\u79bb\u53ef\u4ee5\u8bb0\u5f55\u70b9\u5728\u73af\u4e0a\u6309\u4e00\u4e2a\u65b9\u5411\u8d70\u7684\u8ddd\u79bb\u548c\u73af\u7684\u603b\u957f\u6c42\u89e3\n\n\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8bb2\u4e00\u4e9b\u8981\u5904\u7406\u7684\u7ec6\u8282\u95ee\u9898\n\n**\u4ee5\u4e0b\u5185\u5bb9\u90fd\u662f\u6211\u81ea\u5df1yy\u7684\uff0c\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\uff0c\u4f46\u662f\u5b83\u8fc7\u4e86\u4f60\u8c37\u7684\u6570\u636e\uff0c\u6240\u4ee5\u5982\u679c\u6709\u5927\u795ehack\u4e86\u6211\u9ebb\u70e6\u544a\u8bc9\u6211\uff0c\u6bd5\u7adf\u6211\u592a\u83dc\u4e86/kk**\n\n# \u5173\u4e8e\u91cd\u8fb9\u4ea7\u751f\u7684\u73af\u7684\u5904\u7406\n\u8fd9\u9898\u6570\u636e\u91cc\u6ca1\u6709\u4fdd\u8bc1\u6ca1\u6709\u91cd\u8fb9\uff0c\u4f46\u662f\u6211\u770b\u524d\u51e0\u7bc7\u9898\u89e3\u4f3c\u4e4e\u5728tarjan\u91cc\u90fd\u662f\u4f20\u7684\u7236\u8282\u70b9\u7684\u6807\u53f7\uff0c\u7136\u540e\u5f3a\u5236\u4e0d\u8ba9tarjan\u5f80\u7236\u8282\u70b9\u8d70\n\n\u4f46\u662f\u8fd9\u6837\u663e\u7136\u5c31\u65e0\u6cd5\u8ba1\u7b97\u5230\u5927\u5c0f\u4e3a2\u7684\u73af\u4e86\uff0c\u5f53\u7136\u8fd9\u9053\u9898\u662f\u6c42\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd8\u53ef\u4ee5\u628a\u8fb9\u53bb\u91cd\u53d6\u6700\u77ed\u7684\n\n\u6211\u7684\u60f3\u6cd5\u662f\u8bb0\u5f55\u8fb9\u7684\u7f16\u53f7\uff0c\u7136\u540e\u5f3a\u5236\u4e0d\u8d70\u8fc7\u6765\u7684\u8fb9\uff0c\u8fd9\u6837\u91cd\u8fb9\u4e5f\u53ef\u4ee5\u88ab\u7b97\u5230\u4e86\n\n# \u5982\u4f55\u628a\u4e00\u4e2a\u73af\u62ff\u51fa\u6765\n\n\u8fd9\u4e2a\u5730\u65b9\u6211\u4e4b\u524d\u662f\u4ece\u73af\u7684\u9876\u70b9\u51fa\u53d1\uff0c\u66b4\u529b\u679a\u4e3e\u8fb9\uff0c\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u5730\u627e\uff0c\u7279\u5730\u5199\u4e86\u4e2a\u51fd\u6570\uff0c\u7279\u522b\u9ebb\u70e6\uff0c\u800c\u4e14\u590d\u6742\u5ea6\u597d\u50cf\u662f\u9519\u7684\uff1f\n\n\u6211\u4eec\u77e5\u9053tarjan\u8fc7\u7a0b\u4e2d\u6808\u91cc\u5b58\u7684\u70b9\u662f\u6309\u73af\u4e0a\u987a\u5e8f\u6392\u5e03\u7684\uff0c\u90a3\u6211\u4eec\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u5728\u6309\u987a\u5e8f\u53d6\u51fa\u70b9\u7684\u540c\u65f6\u53d6\u51fa\u8fb9\u5462\uff1f\n\n\u6211\u7684\u60f3\u6cd5\u662f\u5728\u6bcf\u4e2a\u70b9\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u73af\u4e0a\u904d\u5386\u5230\u5b83\u7684\u8fb9\u7684\u957f\u5ea6\uff0c\u8fd9\u6837\u4e00\u4e2a\u70b9\u5c31\u5bf9\u5e94\u4e00\u6761\u8fb9\uff0c\u6309\u987a\u5e8f\u53d6\u70b9\u5c31\u662f\u6309\u987a\u5e8f\u53d6\u8fb9\n\n\u60f3\u8c61\u4e00\u4e0btarjan\u5176\u5b9e\u5b9e\u5728dfs\u6811\u4e0a\u904d\u5386\uff0c\u8d70\u5230\u6811\u8fb9\u5c31\u9012\u5f52\uff0c\u8d70\u5230\u975e\u6811\u8fb9\u5c31\u66f4\u65b0\u4e00\u4e0b`low[]`\n\n\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u6807\u8bb0\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u601d\u8def\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9$ (u \\rightarrow v,l) $\n\n+ \u82e5\u5176\u4e3a\u975e\u6811\u8fb9\u5c31\u628a $v$ \u7684\u6807\u8bb0\u66f4\u65b0\u4e3a $l$\n\t\n  \u56e0\u4e3a\u8fd9\u6837\u7684\u975e\u6811\u8fb9\u4e00\u5b9a\u5bf9\u5e94\u4e86\u4e00\u4e2a\u73af\uff0c\u8fd9\u6761\u8fb9\u5c31\u662f\u628a\u5728dfs\u6811\u4e0a\u628a\u8fd9\u4e2a\u73af\u5408\u4e0a\u7684\u8fb9\n\n+ \u82e5\u5176\u4e3a\u6811\u8fb9\u5c31\u5728\u9012\u5f52\u5b8c\u4ee5\u540e\u628a $v$ \u7684\u6807\u8bb0\u66f4\u65b0\u4e3a $l$\n\n  \u8fd9\u91cc\u5728\u9012\u5f52\u5b8c\u4ee5\u540e\u66f4\u65b0\u662f\u56e0\u4e3a $v$ \u5728\u4f5c\u4e3a\u73af\u4e0a\u7684\u4e00\u4e2a\u70b9\u7684\u540c\u65f6\u53ef\u80fd\u662f\u82e5\u5e72\u4e2a\u73af\u7684\u9876\u70b9\uff0c\u6240\u4ee5\u5b83\u7684\u6807\u8bb0\u53ef\u80fd\u88ab\u66f4\u65b0\u8fc7\n\n\u4f3c\u4e4e\u8ddf\u795e\u9c7c\u5199\u7684\u5dee\u4e0d\u591a\uff1f\n\n\u8fd9\u6837\u5b9e\u73b0\u5c31\u4e0d\u9700\u8981\u5199\u4e00\u4e2a\u8ddftarjan\u4e00\u6837\u957f\u7684\u8fde\u8fb9\u51fd\u6570\u4e86\n\n\u4e0b\u9762\u653e\u4e00\u4e0b\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#define ll long long\nusing namespace std;\nint read()\n{\n\tint kkk=0,x=1;\n\tchar c=getchar();\n\twhile((c<'0' || c>'9') && c!='-') c=getchar();\n\tif(c=='-') c=getchar(),x=-1;\n\twhile(c>='0' && c<='9') kkk=kkk*10+(c-'0'),c=getchar();\n\treturn kkk*x;\n}\nint n,m,q,head[MAXN*2],tot=1,headn[MAXN*2],totn;\nstruct node\n{\n\tint to,nextn,l;\n}a[MAXN*2*2],an[MAXN*2];\nvoid ADD(int from,int to,int l)\n{\n\ta[++tot].to=to,a[tot].nextn=head[from],a[tot].l=l;\n\thead[from]=tot;\n}\nvoid ADDn(int from,int to,int l)\n{\n\tan[++totn].to=to,an[totn].nextn=headn[from],an[totn].l=l;\n\theadn[from]=totn;\n}\nint size[MAXN],fa_len[MAXN],len[MAXN];\nint dfn[MAXN],low[MAXN],tim,z[MAXN],top;\nvoid tarjan(int u,int from)\n{\n\tdfn[u]=low[u]=++tim;\n\tz[++top]=u;\n\tfor(int i=head[u];i!=0;i=a[i].nextn)\n\t{\n\t\tint v=a[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v,i);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tfa_len[v]=a[i].l;\n\t\t\tif(low[v]==dfn[u])\n\t\t\t{\n\t\t\t\t++n;\n\t\t\t\tint las=0,cnt=1,mem=totn;\n\t\t\t\tsize[n]=fa_len[u];\n\t\t\t\tADDn(u,n,0);\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tlas=z[top--];\n\t\t\t\t\tADDn(n,las,len[las]=size[n]);\n\t\t\t\t\tsize[n]+=fa_len[las];\n\t\t\t\t\t++cnt;\n\t\t\t\t}while(las!=v);\n\t\t\t\tfor(int j=mem+1;j<=totn;++j) an[j].l=min(an[j].l,size[n]-an[j].l);\n\t\t\t}\n\t\t\telse if(low[v]>dfn[u]) --top,ADDn(u,v,a[i].l);\n\t\t}\n\t\telse if(i!=(from^1)) low[u]=min(low[u],dfn[v]),fa_len[v]=a[i].l;\n\t}\n}\nint deep[MAXN],jump[MAXN][22],dis[MAXN][22];\nvoid format(int u,int fa)\n{\n\tdeep[u]=deep[fa]+1;\n\tint LOG=log2(deep[u]);\n\tjump[u][0]=fa;\n\tfor(int i=1;i<=LOG;++i)\n\t{\n\t\tjump[u][i]=jump[jump[u][i-1]][i-1];\n\t\tdis[u][i]=dis[u][i-1]+dis[jump[u][i-1]][i-1];\n\t}\n\tfor(int i=headn[u];i!=0;i=an[i].nextn)\n\t{\n\t\tint v=an[i].to;\n\t\tif(v==fa) continue;\n\t\tdis[v][0]=an[i].l;\n\t\tformat(v,u);\n\t}\n}\nint ans;\nint LCA(int &x,int &y)\n{\n\tif(deep[x]<deep[y]) swap(x,y);\n\tint C=deep[x]-deep[y],LOG=log2(C);\n\tfor(int i=0;i<=LOG;++i) if(C&(1<<i)) ans+=dis[x][i],x=jump[x][i];\n\tif(x==y) return x;\n\tLOG=log2(deep[x]);\n\tfor(int i=LOG;i>=0;--i) if(jump[x][i]!=jump[y][i])\n\t{\n\t\tans+=dis[x][i]+dis[y][i];\n\t\tx=jump[x][i],y=jump[y][i];\n\t}\n\treturn jump[x][0];\n}\nint main()\n{\n\tn=read(),m=read(),q=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint u=read(),v=read(),l=read();\n\t\tADD(u,v,l);\n\t\tADD(v,u,l);\n\t}\n\tint tmp=n;\n\tfor(int i=1;i<=tmp;++i) if(!dfn[i]) tarjan(i,0);\n\tformat(1,0);\n\twhile(q--)\n\t{\n\t\tans=0;\n\t\tint x=read(),y=read(),lca=LCA(x,y);\n\t\tif(lca>tmp) printf(\"%d\\n\",ans+min(abs(len[x]-len[y]),size[lca]-abs(len[x]-len[y])));\n\t\telse if(x==y) printf(\"%d\\n\",ans);\n\t\telse printf(\"%d\\n\",ans+dis[x][0]+dis[y][0]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1617244127,
        "uid": 36933,
        "name": "zhy12138",
        "ccfLevel": 9,
        "title": "P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\n\u73b0\u5728\u7ed9\u51fa\u4e00\u4e2a\u4ed9\u4eba\u638c\u56fe\uff08\u5373\u6bcf\u6761\u8fb9\u6700\u591a\u53ea\u51fa\u73b0\u5728\u4e00\u4e2a\u73af\u91cc\uff09\uff0c\u7ed9\u51fa\u591a\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u6c42\u51fa\u4e24\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n# \u6b63\u6587\uff1a\n\n## \u6982\u8ff0\uff1a\n\n\u4ed9\u4eba\u638c\u662f\u56fe\uff0c\u7531\u4e8e\u65f6\u7a7a\u9650\u5236\uff0c\u76f4\u63a5\u6c42\u591a\u6e90\u6700\u77ed\u8def\u5f84\u4f1a\u8d85\u65f6\u8d85\u7a7a\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7 **\u5706\u65b9\u6811** \u6765\u5c06\u5176\u8f6c\u5316\u4e3a\u6811\u4e0a\u95ee\u9898\u3002\n\n## \u5706\u65b9\u6811\uff1a\n\n\u5173\u4e8e\u5706\u65b9\u6811\uff0c\u8981\u8bb2\u5f97\u901a\u4fd7\u6613\u61c2\uff0c\u539f\u56fe\u91cc\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u539f\u70b9\uff0c\u5c06\u6bcf\u4e2a\u73af\u91cc\u52a0\u5165\u4e00\u4e2a\u65b9\u70b9\uff0c\u65b9\u70b9\u76f4\u63a5\u8fde\u5411\u73af\u5185\u5404\u4e2a\u8282\u70b9\uff0c\u5982\u56fe\uff1a\n\n![](https://s1.ax1x.com/2020/08/18/dMFt6x.png)\n\n\u8fd9\u4e2a\u5efa\u65b9\u70b9\u7684\u64cd\u4f5c\u7528 Tarjan \u505a\u5c31\u884c\u4e86\uff01\n\n```cpp\ninline void solve (int u, int v, int w)   //\u5efa\u65b9\u70b9 \n{\n\t++ext;\n\tint minn, pre = w, i = v;\n\twhile (i != f[u][0])\n\t{\n\t\tsum[i] = pre;\n\t\tpre += b[i];\n\t\ti = f[i][0];\n\t}\n\tsum[ext] = sum[u];\n\tsum[u] = 0;\n\ti = v;\n\twhile(i != f[u][0])\n\t{\n\t\tminn = min(sum[i], sum[ext] - sum[i]);\n\t\tadd_(ext, i, minn);\n\t\tadd_(i, ext, minn);\n\t\ti = f[i][0];\n\t}\n}\n\nvoid Tarjan(int u, int fa)\n{\n\tdfn[u] = low[u] = ++cnt;\n\tfor (int i = head[u]; i; i = e[i].next)  //Tarjan \u6a21\u677f \n\t{\n\t\tint v = e[i].to, w = e[i].w;\n\t\tif(v == fa) continue;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tf[v][0] = u;\n\t\t\tb[v] = w;\n\t\t\tdis[v] = dis[u] + w;\n\t\t\tTarjan(v, u);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse low[u] = min(low[u], dfn[v]);\n\t\tif(low[v] <= dfn[u]) continue;    // \u5efa\u5706\u70b9 \n\t\tadd_(u, v, w);\n\t\tadd_(v, u, w);\n\t}\n\tfor (int i = head[u]; i; i = e[i].next)  //\u627e\u5230\u975e\u6811\u8fb9\uff08\u73af\uff09\uff0c\u5efa\u65b9\u70b9 \n\t{\n\t\tint v = e[i].to;\n\t\tif(f[v][0] == u || dfn[v] <= dfn[u]) continue;  \n\t\tsolve(u, v, e[i].w);\n\t}\n}\n\n```\n\n---\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u95ee\u9898\u2014\u2014\u4e24\u70b9\u8ddd\u79bb\uff0c\u5148\u627e\u5230 $u,v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 $a$\uff0c$a$ \u662f\u5706\u70b9\u76f4\u63a5\u6c42\u3002\u5982\u679c\u662f\u65b9\u70b9\uff1a\n\n![](https://s1.ax1x.com/2020/08/18/dMZMFS.png)\n\n\u5047\u8bbe $u,v$ \u7236\u4eb2\u5206\u522b\u662f $A,B$\uff0c\u53d1\u73b0\u5982\u679c\u662f\u65b9\u70b9\uff0c\u7b54\u6848\u5c31\u662f $\\operatorname{dis}(A,B)+\\operatorname{dis}(u,A)+\\operatorname{dis}(v,B)$\u3002\n\n```cpp\nll lca (int X, int Y)\n{\n\tint Lca, x = X, y = Y;\n\tif (d[x] > d[y])\n\t{\n\t\tint t = x;\n\t\tx = y;\n\t\ty = t;\n\t}\n\tfor (int i = 20; i >= 0; i--)\n\t\tif (d[f[y][i]] >= d[x])\n\t\t\ty = f[y][i];\n\tif (x == y) Lca = x;\n\telse\n\t{\n\t\tfor (int i = 20; i >= 0; i--)\n\t\t\tif (f[x][i] != f[y][i])\n\t\t\t{\n\t\t\t\tx = f[x][i];\n\t\t\t\ty = f[y][i];\n\t\t\t}\n\t\tLca = f[y][0];\n\t}\n\tll calc = dis[X] + dis[Y] - (dis[Lca] << 1);\n\tif(Lca > n)\n\t{\n\t\tcalc -= (dis[x] - dis[Lca]) + (dis[y] - dis[Lca]);\n\t\tcalc += min(abs(sum[y] - sum[x]), sum[Lca] - abs(sum[y] - sum[x]));\n\t}\n\treturn calc;\n}\n```\n\n# \u5168\u90e8\u4ee3\u7801\uff1a\n\n\u521d\u59cb\u56fe\u548c\u5706\u65b9\u6811\u8bb0\u5f97\u5206\u7740\u5b58\u3002\n\n```cpp\n\nstruct edge\n{\n\tint from, to, next, w;\n}e[M], ne[M];\nint head[N], h[N], tot, total;\n\nvoid add(int u, int v, int w)\n{\n\te[++tot] = (edge){u, v, head[u], w}, head[u] = tot;\n}\nvoid add_(int u, int v, int w)\n{\n\tne[++total] = (edge){u, v, h[u], w}, h[u] = total;\n}\n\nint dfn[N], low[N], f[N][22], cnt, d[N], b[N]; //b[u]\u8868\u793au\u5230\u7236\u8282\u70b9\u7684\u4ef7\u503c \nll dis[N], sum[N];\ninline void solve (int u, int v, int w)   //\u5efa\u65b9\u70b9 \n{\n\t++ext;\n\tint minn, pre = w, i = v;\n\twhile (i != f[u][0])\n\t{\n\t\tsum[i] = pre;\n\t\tpre += b[i];\n\t\ti = f[i][0];\n\t}\n\tsum[ext] = sum[u];\n\tsum[u] = 0;\n\ti = v;\n\twhile(i != f[u][0])\n\t{\n\t\tminn = min(sum[i], sum[ext] - sum[i]);\n\t\tadd_(ext, i, minn);\n\t\tadd_(i, ext, minn);\n\t\ti = f[i][0];\n\t}\n}\n\nvoid Tarjan(int u, int fa)\n{\n\tdfn[u] = low[u] = ++cnt;\n\tfor (int i = head[u]; i; i = e[i].next)  //Tarjan \u6a21\u677f \n\t{\n\t\tint v = e[i].to, w = e[i].w;\n\t\tif(v == fa) continue;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tf[v][0] = u;\n\t\t\tb[v] = w;\n\t\t\tdis[v] = dis[u] + w;\n\t\t\tTarjan(v, u);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse low[u] = min(low[u], dfn[v]);\n\t\tif(low[v] <= dfn[u]) continue;    // \u5efa\u5706\u70b9 \n\t\tadd_(u, v, w);\n\t\tadd_(v, u, w);\n\t}\n\tfor (int i = head[u]; i; i = e[i].next)  //\u627e\u5230\u975e\u6811\u8fb9\uff08\u73af\uff09\uff0c\u5efa\u65b9\u70b9 \n\t{\n\t\tint v = e[i].to;\n\t\tif(f[v][0] == u || dfn[v] <= dfn[u]) continue;  \n\t\tsolve(u, v, e[i].w);\n\t}\n}\n\nqueue<int> que;\n\nvoid dfs (int x, int fa)\n{\n\td[x] = d[fa] + 1;\n\tf[x][0] = fa; \n\tfor (int i = h[x]; i; i = ne[i].next)\n\t{\n\t\tint y = ne[i].to;\n\t\tif(y == fa) continue;\n\t\tdis[y] = dis[x] + ne[i].w;\n\t\tdfs (y, x);\n\t}\n\t \n} \n\nll lca (int X, int Y)\n{\n\tint Lca, x = X, y = Y;\n\tif (d[x] > d[y])\n\t{\n\t\tint t = x;\n\t\tx = y;\n\t\ty = t;\n\t}\n\tfor (int i = 20; i >= 0; i--)\n\t\tif (d[f[y][i]] >= d[x])\n\t\t\ty = f[y][i];\n\tif (x == y) Lca = x;\n\telse\n\t{\n\t\tfor (int i = 20; i >= 0; i--)\n\t\t\tif (f[x][i] != f[y][i])\n\t\t\t{\n\t\t\t\tx = f[x][i];\n\t\t\t\ty = f[y][i];\n\t\t\t}\n\t\tLca = f[y][0];\n\t}\n\tll calc = dis[X] + dis[Y] - (dis[Lca] << 1);\n\tif(Lca > n)\n\t{\n\t\tcalc -= (dis[x] - dis[Lca]) + (dis[y] - dis[Lca]);\n\t\tcalc += min(abs(sum[y] - sum[x]), sum[Lca] - abs(sum[y] - sum[x]));\n\t}\n\treturn calc;\n}\n\nint main()\n{\n\tscanf (\"%d%d\", &n, &m);\n\text = n;\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint u, v, w;\n\t\tscanf (\"%d%d%d\", &u, &v, &w);\n\t\tadd(u, v, w);\n\t\tadd(v, u, w);\n\t}\n\tf[1][0] = 0;\n\tTarjan(1, 0);\n\tfor (int i = 1; i <= ext; i++)\n\t\td[i] = 0, dis[i] = 0;\n\tdfs(1, 0);\n\tfor (int j = 1; j <= 20; j++)\n\t\tfor (int i = 1; i <= ext; i++)\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\tscanf (\"%d\", &q);\n\tfor (int i = 1; i <= q; ++i)\n\t{\n\t\tint x, y;\n\t\tscanf (\"%d%d\", &x, &y);\n\t\tprintf(\"%lld\\n\", lca(x, y));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1597756459,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\u3011"
    },
    {
        "content": "\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u7ecf\u9a8c\uff0c\u4ed9\u4eba\u638c\u4e0a\u95ee\u9898\u5f80\u5f80\u53ef\u4ee5\u901a\u8fc7\u5706\u65b9\u6811\u8f6c\u5316\u4e3a\u6811\u4e0a\u95ee\u9898\u3002\n\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u77ed\u8def\u5728\u6811\u4e0a\u662f\u4e00\u79cd\u975e\u5e38\u5bb9\u6613\u89e3\u51b3\u7684\u95ee\u9898\u3002\u53ea\u9700\u9884\u5904\u7406\u5230\u6839\u8282\u70b9\u7684\u957f\u5ea6\u7136\u540e\u6b7b\u547d\u8dd1LCA\u5c31\u53ef\u4ee5\u4e86\u3002\n\u4f46\u662f\u5728\u4e00\u822c\u56fe\u4e0a\uff0c\u6700\u77ed\u8def\u7684\u5b9e\u65f6\u5904\u7406\u5c31\u4f1a\u53d8\u5f97\u5f88\u56f0\u96be\u3002\n\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u7ed9\u5706\u65b9\u6811\u4e0a\u7684\u8fb9\u8d4b\u4e0a\u7279\u522b\u7684\u8fb9\u6743\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u5706-\u5706\u8fb9\uff0c\u8d4b\u8fb9\u6743\u4e3a\u539f\u8fb9\u6743\uff0c\u8fd9\u662f\u5bb9\u6613\u7406\u89e3\u7684\u3002\n\u5bf9\u4e8e\u65b9\u70b9\u5230\u5b83\u7684\u7236\u4eb2\u5706\u70b9\u7684\u8fb9\uff0c\u8d4b\u8fb9\u6743\u4e3a0\uff0c\u5bf9\u4e8e\u5706\u70b9\u5230\u5b83\u7684\u7236\u4eb2\u65b9\u70b9\u7684\u8fb9\uff0c\u8d4b\u8fb9\u6743\u4e3a\u8fd9\u4e2a\u5706\u70b9\u5230\u8fd9\u4e2a\u65b9\u70b9\u7684\u7236\u4eb2\u5706\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002 \n\n\u8fd9\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662fTarjan\u627e\u73af\u7684\u65f6\u5019\u627e\u4e0d\u5230\u8fd4\u7956\u8fb9\u7684\u8fb9\u6743\u3002\n\u89e3\u51b3\u65b9\u6848\u662f\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u5230\u6839\u8282\u70b9\u5728dfs\u6811\u4e0a\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u5f53\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u73af\u4e00\u8def\u627e\u7238\u7238\u5e76\u7edf\u8ba1\u957f\u5ea6\u5373\u53ef\u3002\n\n\u7136\u540e\u662f\u8ba1\u7b97\u7b54\u6848\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u662f\u4e00\u4e2a\u65b9\u70b9\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b54\u6848\u4e0d\u80fd\u7528\u666e\u901a\u65b9\u6cd5\u8ba1\u7b97\u3002\n\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u5c1d\u8bd5\u76f4\u63a5\u7528\u67d0\u4e2a\u8282\u70b9\u5230\u7236\u4eb2\u65b9\u70b9\u7684\u8fb9\u6743\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\uff0c\u4f46\u8fd9\u6837\u4f1a\u5bfc\u81f4\u7b54\u6848\u9519\u8bef\uff0c\u539f\u56e0\u662f\u5b83\u65e0\u6cd5\u6b63\u786e\u5730\u533a\u5206\u4e24\u4e2a\u70b9\u4f4d\u4e8e\u5706\u73af\u7684\u540c\u4e00\u4fa7\u8fd8\u662f\u4e0d\u540c\u4fa7\u7684\u60c5\u51b5\u3002\n\u6545\u800c\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u539f\u6765\u7684\u8ddd\u79bb\u5b83\u7684\u7236\u4eb2\u65b9\u70b9\u7684\u9760\u67d0\u4e00\u4fa7\u7684\u8ddd\u79bb\uff0c\u6545\u800c\u5f53lca\u662f\u65b9\u70b9\u7684\u65f6\u5019\u7279\u6b8a\u5224\u65ad\u8ba1\u7b97\u5373\u53ef\u3002 \n```cpp\n#include<iostream>\n#include<cstdio>\n#define Fv(H,A,X) for(int A=H[X];A;A=e[A].nxt)\n\n\ntypedef long long ll;\n\ninline ll Min(ll A,ll B){\n    return A<B?A:B;\n}\ninline int Min(int A,int B){\n\treturn A<B?A:B;\n}\ninline ll Abs(ll A){\n\treturn A>0?A:-A;\n}\ninline void Swap(int &A,int &B){\n    A^=B^=A^=B;\n}\n\nstruct ee{\n    int v;\n    ll w;\n    int nxt;\n}e[200005];\nint h0[10005],h[20005],et=0;\ninline void Eadd(int *H,int U,int V,ll W){\n    e[++et]=(ee){V,W,H[U]};\n    H[U]=et;\n}\ninline void add(int *H,int U,int V,ll W){\n    Eadd(H,U,V,W);\n    Eadd(H,V,U,W);\n}\nint dfn[20005],lw[20005],cnt=0,dep[20005],fa[20005][30];\nll dis[20005],sz[20005];\nint nm=0;\nint st[20005],tp=0;\ninline void dfs0(int X){\n    dfn[X]=lw[X]=++cnt;\n    Fv(h0,i,X){\n    \tif(e[i].v==fa[X][0]){\n    \t\tcontinue;\n\t\t}\n        if(!dfn[e[i].v]){\n            fa[e[i].v][0]=X;\n            dis[e[i].v]=dis[X]+e[i].w;\n            dfs0(e[i].v);\n            lw[X]=Min(lw[X],lw[e[i].v]);\n    \t}else{\n\t\t\tlw[X]=Min(lw[X],dfn[e[i].v]);\n\t\t\tif(e[i].v!=fa[X][0]&&dfn[e[i].v]<dfn[X]){\n                ++nm;\n                add(h,nm,e[i].v,0);\n                ll len=e[i].w;\n                for(int j=X;j^e[i].v;j=fa[j][0]){\n                \tlen+=dis[j]-dis[fa[j][0]];\n                }\n                sz[nm]=len;\n                ll nw=e[i].w;\n                for(int j=X;j^e[i].v;j=fa[j][0]){\n                    add(h,nm,j,Min(nw,len-nw));\n                    sz[j]=nw; \n                    nw+=dis[j]-dis[fa[j][0]];\n                }\n            }\n        }\n        if(lw[e[i].v]>dfn[X]){\n        \tadd(h,X,e[i].v,e[i].w);\n\t\t} \n    }\n}\n\ninline void dfs1(int X,int FA){\n    dep[X]=dep[FA]+1;\n    fa[X][0]=FA;\n    Fv(h,i,X){\n        if(e[i].v!=FA){\n            dis[e[i].v]=dis[X]+e[i].w;\n            dfs1(e[i].v,X);\n        }\n    }\n}\n\nint n,m,q;\n\ninline ll calc(int X,int Y){\n    int XX=X,YY=Y,lca;\n    while(dep[XX]<dep[YY]){\n        Swap(XX,YY);\n    }\n    for(int i=20;~i;--i){\n        if(dep[XX]-(1<<i)>=dep[YY]){\n            XX=fa[XX][i];\n        }\n    }\n    if(XX==YY){\n        lca=XX;\n    }else{\n        for(int i=20;~i;--i){\n            if(fa[XX][i]!=fa[YY][i]){\n                XX=fa[XX][i];\n                YY=fa[YY][i];\n            }\n        }\n        lca=fa[XX][0];\n    }\n    ll RT=dis[X]+dis[Y]-(dis[lca]<<1);\n    if(lca>n){\n        ll P=dis[XX]-dis[lca],Q=dis[YY]-dis[lca];\n        RT-=(P+Q);\n        RT+=Min(sz[lca]-Abs(sz[XX]-sz[YY]),Abs(sz[XX]-sz[YY]));\n    }\n    return RT;\n}\n\n\n\nvoid init(){\n    scanf(\"%d%d%d\",&n,&m,&q);\n    nm=n;\n    int u,v;\n\tll w;\n    for(int i=1;i<=m;++i){\n        scanf(\"%d%d%lld\",&u,&v,&w);\n        add(h0,u,v,w);\n    }\n    fa[1][0]=0;\n    dfs0(1);\n    for(int i=1;i<=nm;++i){\n        dep[i]=0,dis[i]=0;\n    }\n    dfs1(1,0);\n    for(int j=1;j<=20;++j){\n        for(int i=1;i<=nm;++i){\n            fa[i][j]=fa[fa[i][j-1]][j-1];\n        }\n    }\n    int x,y;\n    for(int i=1;i<=q;++i){\n        scanf(\"%d%d\",&x,&y);\n        printf(\"%lld\\n\",calc(x,y));\n    }\n}\nint main(){\n    init();\n    return 0;\n}\n\n\n```\n",
        "postTime": 1553059299,
        "uid": 97512,
        "name": "Smokey_Days",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c(\u5706\u65b9\u6811)\u3011"
    },
    {
        "content": "\u57fa\u4e8e `yxc` \u5927\u4f6c\u8bb2\u89e3\u7684**\u5706\u65b9\u6811**\u7684\u5b66\u4e60\u7b14\u8bb0\u3002\n\n\n\n## \u95ee\u9898\n\nhttps://www.acwing.com/problem/content/362/\n\nhttps://www.acwing.com/problem/content/2866/\n\nhttps://www.luogu.com.cn/problem/P5236\n\n\u8fd9\u4e09\u9898\u672c\u8d28\u5b8c\u5168\u4e00\u6837\uff0c\u662f~~\u4e09\u500d\u7ecf\u9a8c~~\u3002\n\n\u9898\u610f\u662f\uff1a\u7ed9\u51fa $n$ \u70b9 $m$ \u8fb9\u7684**\u4ed9\u4eba\u638c\u56fe**\uff0c\u5bf9\u4efb\u610f\u4e24\u70b9\u6700\u77ed\u8def\u8fdb\u884c\u67e5\u8be2\u3002\n\n>  \u65e0\u5411\u4ed9\u4eba\u638c\u56fe\u7684\u5b9a\u4e49\uff1a\u4efb\u610f\u4e00\u6761\u8fb9\u81f3\u591a\u53ea\u51fa\u73b0\u5728\u4e00\u6761\u7b80\u5355\u56de\u8def\u7684\u65e0\u5411\u8fde\u901a\u56fe\u79f0\u4e3a\u4ed9\u4eba\u638c\u3002\n\n\u6bd4\u5982\u4e0b\u9762\u7eff\u8272\u7684\u4e09\u4e2a\u56fe\u5c31\u662f\u4ed9\u4eba\u638c\uff0c\u800c\u9ed1\u8272\u7684\u4e0d\u662f\u3002\u7279\u522b\u6ce8\u610f\u4e00\u4e0b\u4e24\u4e2a\u70b9\u5982\u679c\u5b58\u5728\u4e24\u6761\u4e0d\u540c\u8fde\u8fb9\u4e5f\u7b97\uff08\u5373\u4e0b\u56fe\u7b2c\u4e8c\u4e2a\u4ed9\u4eba\u638c\uff09\u3002\n\n\n\n## \u5706\u65b9\u6811\n\n\u56e0\u4e3a\u4ed9\u4eba\u638c\u8fd9\u6837\u7684\u56fe\u6bd4\u8f83\u7279\u6b8a\uff0c\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u9ad8\u6548\u5730\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n\u8fd9\u91cc\u5f15\u5165**\u5706\u65b9\u6811**\u6765\u89e3\u51b3\u3002\n\n> \u7f51\u4e0a\u5f88\u591a\u8d44\u6599\u5c06\u5176\u4f5c\u4e3a\u65e0\u5411\u56fe\u6784\u5efa\uff0c\u800c `yxc` \u5927\u4f6c\u8bb2\u89e3\u4e2d\u5f53\u4f5c\u662f**\u5916\u5411\u6811**\u6784\u5efa\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\u4e24\u79cd\u6784\u5efa\u65b9\u5f0f\u4e0d\u4f1a\u5f71\u54cd\u6c42\u89e3\uff0c\u672c\u6587\u5c06\u5176\u6784\u5efa\u4e3a**\u5916\u5411\u6811**\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jlp373te.png)\n\n### \u6784\u5efa\n\n> \u8bb0\u8bfb\u5165\u7684\u56fe\u4e3a**\u539f\u56fe**\uff0c\u6784\u5efa\u7684\u5706\u65b9\u6811\u4e3a**\u65b0\u56fe**\u3002\n\n\u9996\u5148\uff0c\u65b0\u56fe\u4fdd\u7559\u7740\u539f\u56fe\u7684**\u70b9\u96c6**\uff0c\u8fd9\u4e9b\u70b9\u8bb0\u4e3a**\u5706\u70b9**\u3002\n\n\u5c06**\u539f\u56fe**\u4efb\u610f\u4e00\u4e2a\u70b9\uff08\u5b9e\u73b0\u4e2d\u6307\u5b9a $1$ \u53f7\u70b9\u5373\u53ef\uff09\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u7136\u540e\u5728**\u539f\u56fe**\u8dd1\u4e00\u904d dfs\u3002\n\n\u6bcf\u5f53\u627e\u5230\u4e00\u4e2a\u73af\u7684\u65f6\u5019\uff08\u4f7f\u7528 tarjan \u7b97\u6cd5\u7ef4\u62a4\uff09\uff0c\u5c06\u8fdb\u5165\u73af\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u8fb9\u53cc\u7684\u6839\u8282\u70b9\uff09\u8bb0\u4e3a**\u5934\u8282\u70b9**\uff0c\u7136\u540e\u5728**\u65b0\u56fe**\u4e0a\u5bf9\u52a0\u4e00\u4e2a**\u65b9\u70b9**\uff0c\u5e76\u8ba9\u5934\u8282\u70b9\u5411\u8fd9\u4e2a\u65b9\u70b9\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $0$\uff0c\u540c\u65f6\uff0c\u65b9\u70b9\u5411\u5176\u5b83\u70b9 $u$ \u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u539f\u56fe\u4e2d\u7684 $u$ \u5230\u6839\u8282\u70b9\u7684**\u6700\u77ed\u8ddd\u79bb**\u3002\n\n\u4e0b\u9762\u4f7f\u539f\u56fe\u4e0e\u5bf9\u5e94\u65b0\u56fe\uff08\u5706\u65b9\u6811\uff09\u7684\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/iqrlcxdh.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wiclwqpk.png)\n\n### \u5e94\u7528\n\n\u6784\u5efa\u5b8c\u5706\u65b9\u6811\u540e\uff0c\u5c31\u4e0d\u96be\u7528\u5176\u6765\u6c42\u4e24\u70b9 $u,v$ \u6700\u77ed\u8def\u4e86\uff1a\n\n- \u5f53\u4e24\u70b9 $u,v$ \u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09\u4e3a**\u5706\u70b9**\u65f6\uff0c\u7b54\u6848\u5c31\u662f\u5706\u65b9\u6811\u4e0a\u4e24\u70b9\u7684\u8ddd\u79bb\uff0c\u5373\uff1a$dis[u, v] = d[u] + d[v] - 2d[lca(u, v)]$\u3002\uff08$d[u]$ \u4e3a $u$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff09\n- \u800c\u5f53\u4e24\u70b9\u7684 LCA \u4e3a**\u65b9\u70b9**\u65f6\uff0c\u8bb0 $u,v$ \u5206\u522b\u4e0e\u73af\u4ea4\u4e8e $U,V$\uff0c\u6ce8\u610f\u5230 $U,V$ \u4e4b\u95f4\u7684\u8ddd\u79bb\u6709\u4e24\u79cd\uff0c\u6211\u4eec\u9700\u8981\u53d6\u5176\u4e2d\u8f83\u77ed\u7684\uff0c\u8bb0\u4e3a $dis(u, v)_{\\min}$\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $dis(u, v)_{\\min} + dis(u, U) + dis(v, V)$\u3002\n\n## \u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define debug(x) cerr << #x << \": \" << (x) << endl\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define dwn(i,a,b) for(int i=(a);i>=(b);i--)\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n\n#define x first\n#define y second\nusing pii = pair<int, int>;\nusing ll = long long;\n\ninline void read(int &x){\n    int s=0; x=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-')x=-1;ch=getchar();}\n    while(ch>='0' && ch<='9') s=(s<<3)+(s<<1)+ch-'0',ch=getchar();\n    x*=s;\n}\n\nconst int N=2e4+5, M=1e5+5;\n\nint n, m, Q, nwn; // nwn \u662f\u5706\u65b9\u6811\u7684\u70b9\u6570\n\nstruct Edge{\n\tint to, w, next;\n}e[M];\n\nint h1[N], h2[N], tot;\n\nvoid add(int *h, int u, int v, int w){\n\te[tot].to=v, e[tot].w=w, e[tot].next=h[u], h[u]=tot++;\n}\n\nint scir[N], s[N]; // scir[u] \u4ee3\u8868 u \u6240\u5728\u7684\u73af\u7684\u8fb9\u6743\u548c\uff0cs[u] \u4ee3\u8868 u \u6240\u5728\u73af\u7684\u524d\u7f00\u548c\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u56fa\u5b9a\u4e00\u4e2a\u8d77\u70b9\u5e76\u987a\u65f6\u9488/\u9006\u65f6\u9488\u65b9\u5411\uff09\u7684\u957f\u5ea6\u3002\nint fu[N], fw[N], fe[N]; // \u5206\u522b\u8bb0\u5f55 dfs \u8fc7\u7a0b\u4e2d dfs \u6811\u4e0a u \u70b9\u7684\u7236\u8282\u70b9\u3001u \u548c\u7236\u8282\u70b9\u7684\u8fb9\u6743\uff0cu \u548c\u7236\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u8fb9\u7684\u7f16\u53f7\u3002\n\nvoid build_cir(int x, int y, int W){\n\tint S=W;\n\tfor(int u=y; u!=x; u=fu[u]){\n\t\ts[u]=S;\n\t\tS+=fw[u];\n\t}\n\ts[x]=scir[x]=S;\n\t++nwn;\n\tfor(int u=y; u!=x; u=fu[u]){\n\t\tscir[u]=S;\n\t\tadd(h2, nwn, u, min(S-s[u], s[u]));\n\t}\n\tadd(h2, x, nwn, 0);\n}\n\nint dfn[N], low[N], ts;\n\nvoid dfs(int u, int from){\n\tdfn[u]=low[u]=++ts;\n\tfor(int i=h1[u]; ~i; i=e[i].next){\n\t\tint go=e[i].to;\n\t\tif(!dfn[go]){\n\t\t\tfu[go]=u, fw[go]=e[i].w, fe[go]=i;\n\t\t\tdfs(go, i);\n\t\t\tlow[u]=min(low[u], low[go]);\n\t\t\tif(dfn[u]<low[go]) add(h2, u, go, e[i].w);\n\t\t}\n\t\telse if(i!=(from^1)) low[u]=min(low[u], dfn[go]);\n\t}\t\n\t\n\tfor(int i=h1[u]; ~i; i=e[i].next){ // \u628a u \u4f5c\u4e3a\u8fb9\u53cc\u7684\u6839\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u73af\u4e00\u4e00\u627e\u51fa\u6765\u5e76\u5efa\u7acb\u5706\u65b9\u6811\u3002\n\t\tint go=e[i].to;\n\t\tif(dfn[u]<dfn[go] && fe[go]!=i) build_cir(u, go, e[i].w);\n\t}\n}\n\nint fa[N][15], d[N], dep[N];\nvoid get_lca(int u, int p){\n\tdep[u]=dep[p]+1, fa[u][0]=p;\n\trep(i,1,14) fa[u][i]=fa[fa[u][i-1]][i-1];\n\tfor(int i=h2[u]; ~i; i=e[i].next){\n\t\tint go=e[i].to;\n\t\td[go]=d[u]+e[i].w;\n\t\tget_lca(go, u);\n\t}\n}\n\nint U, V;\nint lca(int u, int v){ // \u63a8\u8350\u4f7f\u7528\u500d\u589e\u6cd5\u6c42 lca\uff0c\u56e0\u4e3a\u80fd\u591f\u6bd4\u8f83\u65b9\u4fbf\u5730\u627e\u5230 lca \u7684\u4e24\u4e2a\u513f\u5b50\n\tif(dep[u]<dep[v]) swap(u, v);\n\tdwn(i,14,0) if(dep[fa[u][i]]>=dep[v]) u=fa[u][i];\n\tif(u==v) return u;\n\tdwn(i,14,0) if(fa[u][i]!=fa[v][i]) u=fa[u][i], v=fa[v][i];\n\tU=u, V=v;\n\treturn fa[U][0];\n}\n\nint main(){\n\tmemset(h1, -1, sizeof h1);\t\t\n\tmemset(h2, -1, sizeof h2);\t\t\n\t\n\tcin>>n>>m>>Q;\n\tnwn=n;\n\trep(i,1,m){\n\t\tint u, v, w; read(u), read(v), read(w);\n\t\tadd(h1, u, v, w), add(h1, v, u, w);\n\t}\n\t\n\tdfs(1, -1);\n\tget_lca(1, 0);\n\twhile(Q--){\n\t\tint u, v; read(u), read(v);\n\t\tint p=lca(u, v);\n\t\tif(p<=n){\n\t\t\tcout<<d[u]+d[v]-(d[p]<<1)<<endl;\n\t\t}\n\t\telse{\n\t\t\tint du=d[u]-d[U], dv=d[v]-d[V];\n\t\t\tint t=abs(s[U]-s[V]);\n\t\t\tcout<<(du+dv+min(t, scir[U]-t))<<endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1647933646,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "\u5706\u65b9\u6811\u7b14\u8bb0"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5[https://www.luogu.org/problemnew/show/P5236](https://www.luogu.org/problemnew/show/P5236)\n\nTip:\u5728[\u6211\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/TsumugiWenders/luogu-p5236-mu-ban-jing-tai-xian-ren-zhang-yuan-fang-shu-post)\u91cc\u9605\u8bfb\u6548\u679c\u6781\u4f73\n\n(\u756a\u5916\u8bdd)\u597d\u4e86\u597d\u4e86\u5706\u65b9\u6811\u641e\u5b9a\u4e86 \u6253\u7a0b\u5e8f\u5168\u7a0b\u9760\u6982\u5ff5 yy \u52a0\u4e0a\u5404\u79cd\u5224\u65ad\u00a0\u611f\u89c9\u81ea\u5df1\u6253\u7684\u5f88\u6bd2\u7624\u5c31\u662f\u4e86 \u4e0d\u8fc7\u4e5f\u5c31 4KBytes \u4e0d\u5230\n\n\u611f\u8c22 @Harry_bh \u63d0\u4f9b\u7684 hack \u6570\u636e \u8ba9\u6211\u53d7\u76ca\u532a\u6d45~~(\u867d\u7136\u5230\u73b0\u5728\u8fd8\u662f\u672c\u673aAC\u63d0\u4ea4RE)~~\n\n\u611f\u8c22@NaCly_Fish \u548c @142857cs \u63d0\u4f9b\u7684\u5efa\u8bae\u548c\u5404\u7c7b\u5e2e\u52a9 \u4ee5\u53ca\u8010\u5fc3\u5730\u89e3\u51b3\u672c\u7d2c\u7684\u4f4e\u667a\u5546\u95ee\u9898emmm\n\n\u8fd8\u6709\u80fd\u4e0d\u80fd\u628a\u8fd9\u9898\u7ed9\u5f04\u6210 \u63d0\u9ad8+/\u7701\u9009- \u554a\u5404\u4f4d \u8fd9\u677f\u5b50\u771f\u7684\u6ca1\u9ed1\u9898\u90a3\u4e48\u96be\n\n\u8bdd\u8bf4\u6253\u5706\u65b9\u6811\u6211\u7528\u7684\u662f\u6811\u5256\u561b \u50cf\u6211\u8fd9\u79cd\u4f1a\u6811\u5256\u4e0d\u4f1a\u500d\u589e \u4f1a\u7ebf\u6bb5\u6811\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u7684 \u5b9e\u5728\u662f\u5f88\u5c11\u89c1\u4e86 ~~\u7136\u800c\u4e0b\u5468\u5c31\u8981\u9000\u5f79\u4e86~~\n\n\u800c\u4e14\u6211\u7684\u4ee3\u7801\u592a\u5947\u602a\u4e86\u611f\u89c9\u80af\u5b9a\u5f88\u6709\u95ee\u9898 \u53ef\u80fd....\u4f1a\u4e71\u8bb2\u4e00\u901a\n\n## \u6784\u9020\n\n\u642c\u4e00\u4e0b ImmortalCO \u7684\u8bfe\u4ef6\u91cc\u9762\u7684\u51e0\u53e5\u8bdd\n\n\u8003\u8651\u4e3a\u8fb9\u8bbe\u5b9a\u8fb9\u6743\uff0c\u5148\u968f\u4fbf\u53d6\u4e00\u4e2a\u5706\u70b9\u5f53\u6839\uff0c\u6240\u6709\u5706\u5706\u8fb9\u7684\u8fb9\u6743\u548c \u539f\u56fe\u4e2d\u4e00\u81f4\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5706\u65b9\u8fb9\uff1a \u5982\u679c\u5b83\u662f\u65b9\u70b9\u7684\u7236\u8fb9\uff0c\u5219\u5b9a\u4e49\u5b83\u7684\u8fb9\u6743\u4e3a 0\uff0c\u5426\u5219\u5b9a\u4e49\u5176\u8fb9\u6743\u4e3a \u300c\u8fd9\u4e2a\u5706\u70b9\u5230\u65b9\u70b9\u7684\u7236\u4eb2\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u300d\n\n\u73b0\u5728\uff0c\u5982\u679c\u4e24\u70b9\u7684 LCA \u662f\u5706\u70b9\uff0c\u5219\u4e24\u70b9\u7684\u6700\u77ed\u8def\u5c31\u662f\u4e24\u70b9\u7684\u5706\u65b9\u6811\u4e0a\u5e26\u6743\u8ddd\u79bb\uff08\u6240\u6709\u73af\u90fd\u5728\u5df2\u7ecf\u51b3\u5b9a\u4e86\u8d70\u8f83\u77ed\u4e00\u4fa7\uff09\n\n\u5426\u5219\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651 LCA \u8fd9\u4e2a\u73af\u8d70\u54ea\u4e00\u4fa7\uff0c\u7528\u6811\u94fe\u5256\u5206\u6216\u500d\u589e\u00a0\u6c42\u51fa\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u662f\u5728\u8fd9\u4e2a\u65b9\u70b9\u7684\u54ea\u4e24\u4e2a\u5b50\u6811\u4e2d\uff08\u5373\u6c42\u51fa\u662f\u73af\u4e0a\u7684\u54ea\u4e24\u4e2a\u70b9\uff09\uff0c\u7136\u540e\u73af\u4e0a\u53d6\u8f83\u77ed\u7684\u4e00\u4fa7\n\n\n\u8fd9\u91cc\u6211\u53c2(zhao)\u7167(ban)\u4e86 [\u4ed9\u4eba\u638c\u56feII](https://www.luogu.org/problemnew/show/P4244)\u8fd9\u9053\u9898\u76ee\u7684\u5927\u4f6c\u4eec\u7684\u904d\u5386\u65b9\u6cd5 \u7136\u540e\u5728\u627e\u5230\u73af\u7684\u65f6\u5019 \u5c06\u5176 \u73af\u6743\u503c \u8d4b\u503c\u5230\u00a0\u5373\u5c06\u8fde\u63a5\u7684\u65b9\u70b9\u4e0a\n\n\u6211\u4eec\u6ca1\u5fc5\u8981\u6bcf\u4e2a\u70b9\u8f6c\u4e00\u6b21\u73af\u73af \u6cbf\u73af\u904d\u5386\u7684\u540c\u65f6 \u6211\u4eec\u662f\u4ece\u4e00\u8fb9\u5230\u8fbe\u8be5\u70b9\u7684 \u8bb0\u5f55\u4e0b\u6765 \u5faa\u73af\u5b8c\u4e00\u5708\u540e\u6574\u4e2a\u73af\u7684\u6743\u503c\u4e5f\u8bb0\u5f55\u4e0b\u6765\u4e86 \u7136\u540e\u518d\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u5c06 \u4e4b\u524d\u90a3\u6bb5\u8def\u7684\u6743\u503c \u548c \u73af\u51cf\u53bb\u90a3\u6bb5\u8def\u7684\u503c \u53d6 min \u5373\u53ef\n\n\u4e0b\u653e\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\n\n```cpp\nvoid getcir(int x,int y) {\n\tint len = tep[y] - tep[x] + 1,t = len; //len\u8bb0\u5f55\u73af\u4e0a\u70b9\u6570 t\u662f\u6307\u9488\n\tll lon = 0; //lon\u8bb0\u5f55\u5f53\u524d\u8d70\u7684\u8fb9\u7684\u6743\u503c\u548c\n\tfor (int p = y ; p != x ; p = ta[p]) bot[t--] = p; bot[t] = x; //\u901a\u8fc7\u7236\u4eb2\u6570\u7ec4\u53d6\u70b9\n\tfor (int h = 1 ; h < len ; )\n\tfor (int a = est[bot[h]],b = e[a].to ; ; a = e[a].ne,b = e[a].to)\n\t\tif (b == bot[h + 1]) {lon = lon + e[a].v,dis[++h] = lon; break;}\n\tfor (int a = est[y],b = e[a].to ; ; a = e[a].ne,b = e[a].to)\n\t\tif (b == x) {lon = lon + e[a].v; break;} //\u641c\u73af\u6743\u503c\n\tcir[++m] = lon; //\u8bb0\u5f55\u73af\u6743\u503c\n\tfor (int a = 1 ; a <= len ; ++ a) addf(bot[a],m,min(lon - dis[a],dis[a]));\n} //(\u4e0a\u9762)\u5706\u65b9\u52a0\u8fb9\nvoid tarjan(int p) { //\u7528tarjan\u627e\u73af\n\tdfn[p] = low[p] = ++tnt;\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\tif (b != ta[p]) {\n\t\t!dfn[b] ? tep[b] = tep[p] + 1,ta[b] = p,tarjan(b),low[p] = min(low[p],low[b])\n\t\t\t\t: low[p] = min(low[p],dfn[b]);\n\t\tif (low[b] > dfn[p]) addf(p,b,e[a].v);\n\t}\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\t\tif (ta[b] != p && dfn[p] < dfn[b]) getcir(p,b);\n}\n```\n\n\n\u90a3\u4e48\u6784\u9020\u8bf4\u5b8c\u4e86 \u6211\u4eec\u6765\u8bb2\n\n## \u5efa\u6811\n@142857cs \u63d0\u4f9b\u4e86\u6811\u4e0a\u524d\u7f00\u548c\u7684\u601d\u8def \u611f\u89c9\u5f88\u597d\u4f46\u6211\u592a\u987d\u56fa\u4e86\u5b9e\u5728\u662f\u4e0d\u60f3\u6253~~(\u800c\u4e14\u6253\u4e86\u8fd9\u5c31\u4e0d\u662f\u6811\u5256\u9898\u89e3\u4e86)~~ \u4e8e\u662f\u6811\u5256\u52a0\u4e0a\u7ebf\u6bb5\u6811\u5b58\u6743\u503c\n\n\u5c31\u662f\u6811\u5256\u6a21\u677f\u7684\u4e24\u4e2adfs\u5566 \u4e0d\u8fc7\u6ce8\u610f\u5728 dfs1\u91cc\u8981\u52a0\u4e0a\u8fb9\u6743\u5316\u70b9\u6743 \u5982\u679c\u4e0d\u4f1a\u6811\u5256\u8fb9\u5316\u70b9\u7684\u53ef\u4ee5\u53bb\u770b\u770b[\u8fd9\u4e2a\u677f\u5b50\u9898](https://www.luogu.org/problemnew/show/P4114)\n\n\u76f4\u63a5\u653e\u4ee3\u7801\u4e86 \u8fd9\u662f\u4e24\u4e2a\u6df1\u641c\n\n```cpp\nvoid dfs1(int p) {\n\tdep[p] = dep[fa[p]] + 1,++siz[p];\n\tfor (int a = fst[p],b = f[a].to ; a ; a = f[a].ne,b = f[a].to)\n\t\tif (b != fa[p]) {\n\t\tv[b] = f[a].v,fa[b] = p,dfs1(b),siz[p] += siz[b];//\u8fd9\u91cc\u7684v\u5c31\u662f\u8fb9\u5316\u70b9\n\t\tif (siz[son[p]] < siz[b]) son[p] = b;\n\t}\n}\nvoid dfs2(int p,int an) { //an\u5c31\u662fancestor\u4e86,\u7531\u4e8e\u4e00\u4e9b\u91cd\u540d\u7684\u539f\u56e0..\n\ttop[p] = an;\n\tid[p] = ++tot;\n\toid[tot] = p;\n\tif (!son[p]) return;\n\tdfs2(son[p],an);\n\tfor (int a = fst[p],b = f[a].to ; a ; a = f[a].ne,b = f[a].to)\n\t\tif (b != fa[p] && b != son[p]) dfs2(b,b);\n}\n```\n\n\u8fd9\u662f\u4e00\u4e2a\u5efa\u6811\n\n```cpp\nvoid build(int l,int r,int len) {\n\tif (l == r) {tr[len] = v[oid[l]]; return;}\n\tint mid = (l + r) >> 1;\n\tbuild(l,mid,len << 1);\n\tbuild(mid + 1,r,len << 1 | 1);\n\ttr[len] = tr[len << 1 | 1] + tr[len << 1];\n}\n```\n\n## \u67e5\u8be2\n\n\u67e5\u8be2\u7740\u5b9e\u662f\u6bd2\u7624\n\n\u8003\u8651\u65b9\u70b9\u5706\u70b9\uff1f\u4e0d\u6b62\uff01\n\n\u8fd9\u91cc\u518d\u6b21\u611f\u8c22 @Harry_bh \u8ba9\u8bef\u5165\u6b67\u9014\u7684\u6211\u6539\u8fc7\u81ea\u65b0\u6b65\u5165\u6b63\u8f68\n\n\u56e0\u4e3a\u65b9\u70b9\u4e0b\u9762\u8df3\u7684\u4e24\u4e2a\u70b9\u53ef\u80fd\u662f\u4e24\u8f7b\u8fb9\u5462=-= \u90a3\u4e48\u4e0b\u9762\u6765\u8bb2\u8bb2\n\n**lca \u4e3a\u5706\u70b9**\n\n\u76f4\u63a5\u641c\u7d22\u641c\u5b8c\u4e86\u770b\u770b\u9876\u4e0a\u90a3\u4e2a\u70b9\u5e8f\u53f7\u662f\u4e0d\u662f\u5927\u4e8e n \u5c31\u597d\u4e86\n\n**lca \u4e3a\u65b9\u70b9**\n\n\u9996\u5148\u6211\u4eec\u8981\u51cf\u53bb\u65b9\u70b9\u8fde\u7684\u4e24\u5706\u70b9\u7684\u6743\u503c\n\n\u56e0\u4e3a\u70b9\u6743\u8bb0\u5f55\u7684\u662f\u8fd9\u4e2a\u5706\u70b9\u5230\u65b9\u70b9\u7684\u7236\u4eb2\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6 \u6211\u4eec\u6700\u540e\u53c8\u4e0d\u4e00\u5b9a\u8981\u8dd1\u5230\u65b9\u70b9\u7236\u4eb2\u90a3\u91cc \u6211\u4eec\u53ef\u4ee5\u7ed5\u554a\n\n\u7136\u540e\u4e0b\u9762\u6765\u8bf4\u8bf4\u8fb9\u7684\u95ee\u9898 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u524d\u9a71\n\n\u5982\u679c\u4e24\u4e2a\u90fd\u662f\u8f7b\u8fb9 \u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u524d\u9a71\u6765\u8bb0\u5f55\n\n\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u662f\u91cd\u8fb9 \u90a3\u4e48\u6211\u4eec\u5c31\u8981\u628a\u4ece\u91cd\u8fb9\u8df3\u4e0a\u6765\u7684\u90a3\u4e2a\u70b9\u7684\u524d\u9a71\u6539\u6210 lca \u7684 \u91cd\u513f\u5b50 \u4e0d\u7136\u90fd\u4e0d\u77e5\u9053\u6389\u5230\u54ea\u91cc\u53bb\u4e86\n\n\u90a3\u653e\u4e00\u4e0b\u4ee3\u7801 \u9996\u5148\u662f\u6c42 lca \u7684\n\n```cpp\nll out(int x,int y) {\n\tint fx = x,fy = y;//\u524d\u9a71 \u8fd9\u4e2a\u4e0d\u8d4b\u503c\u90fd\u53ef\u4ee5\n\tll ans = 0;\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) swap(x,y),swap(fx,fy);\n\t\tans += get(1,m,1,id[top[x]],id[x]);\n\t\tfx = top[x],x = fa[top[x]];\n\t} //\u8df3\u6811\u5256\n\tif (x != y) {\n\t\tif (dep[x] > dep[y]) swap(x,y),swap(fx,fy);\n\t\tans += get(1,m,1,id[x] + 1,id[y]);\n\t} //\u8bb0\u5f55\u7ec8\u7109\u8def\u5f84\n\tif (x <= n) return ans; //lca\u4e3a\u5706\u70b9\u8d76\u5feb\u9000\u6389\n\tif (fy[fa] != fx[fa]) fy = son[x]; //\u628a\u91cd\u94fe\u4e0a\u7684\u70b9\u63d0\u4e0a\u6765\n\tans = ans - v[fx] - v[fy]; //\u51cf\u53bb\u591a\u4f59\u8def\u5f84\n\tif (tep[fx] > tep[fy]) swap(fx,fy); //\u8fd9\u4e2a\u56e0\u4e3a\u7236\u4eb2\u6570\u7ec4\u7684\u539f\u56e0\u8981\u6309dep\u6392\n\treturn ans + geft(fx,fy,cir[x]);\n}\n```\n\n\u7136\u540e\u662f get \u548c geft \u8fd9\u4e24\u4e2a\u4e1c\u897f\n\nget \u5c31\u662f\u7ebf\u6bb5\u6811\u627e\u8fde\u7eed\u4e00\u6bb5\u7684\u6743\u503c \u8fd9\u4e2a\u6811\u5256\u6a21\u677f\u91cc\u6709\u7684 \u4e0d\u591a\u52a0\u9610\u8ff0\n\ngeft \u5176\u5b9e\u5c31\u662f\u627e\u4e24\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5566 \u67d0hkr \u8bf4\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u641e\u524d\u7f00\u8bb0\u5f55 \u4e0d\u8fc7\u6211\u592a\u61d2\u4e86 \u6bcf\u4e2a\u8be2\u95ee\u53c8\u8dd1\u4e86\u4e00\u904d\u73af \u4e8e\u662f\u53d8\u5f97\u8d85\u7ea7\u6162\n\n\u6240\u4ee5\u5e94\u8be5\u662f\u4f1a\u88ab hack \u7684 \u56e0\u4e3a\u5047\u5982\u67e5\u8be2\u7684\u73af\u5927 \u6211\u8fd9\u4e2a\u8981\u8dd1\u5927\u534a\u5708......\n\n\u6ce8\u91ca\u653e\u4ee3\u7801\u91cc\u9762\u5427\n\n```cpp\nll get(int l,int r,int len,int i,int j) {\n\tif (i <= l && r <= j) return tr[len];\n\tint mid = (l + r) >> 1; ll ans = 0;\n\tif (i <= mid) ans += get(l,mid,len << 1,i,j);\n\tif (mid < j) ans += get(mid + 1,r,len << 1 | 1,i,j);\n\treturn ans;\n}\nll geft(int x,int y,int cirdis) { //cirdis\u662f\u73af\u7684\u603b\u6743\u503c \u4e4b\u524dtarjan\u7684\u65f6\u5019\u8bb0\u5f55\u4e86\u7684\n\tll ans = 0;\n\tfor (int p = y ; p != x ; p = ta[p]) //\u901a\u8fc7\u7236\u4eb2\u627e\u5230\u4e24\u70b9\u8ddd\u79bb\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\tif (b == ta[p]) {ans = ans + e[a].v; break;}\n\treturn min(cirdis - ans,ans); //\u53d6\u6700\u5c0f \u56e0\u4e3a\u4e24\u6761\u8def\u561b\n}\n```\n\n\u597d\u4e86 \u63a5\u4e0b\u6765\u662f\u603b\u4ee3\u7801 \u968f\u4fbf\u52a0\u70b9\u6ce8\u91ca\u5427\n\n```cpp\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#define N 20010\n#define M 100010\n#define ll long long\n#define swap std::swap\ninline int re() {\n\tint x = 0; char w = getchar();\n\twhile (w < '0' || w > '9') w = getchar();\n\twhile ('0' <= w && w <= '9') x = x * 10 + w - 48,w = getchar();\n\treturn x;\n}\nstruct edge{int ne,to; ll v;}e[M],f[M];\nint est[N],fst[N],dfn[N],low[N],tep[N],bot[N],ta[N],fr[N]; //\u8fd9\u4e9b\u662f\u627e\u73af\u7528\u7684\nint siz[N],son[N],dep[N],top[N],oid[N],fa[N],id[N]; //\u8fd9\u4e9b\u662f\u6811\u5256\u7528\u7684 \u540d\u5b57\u6bd4\u8f83\u50cf\nint tr[N << 2],v[N];\nint tot,tnt,n = re(),m = re(),q = re();\nll cir[N],dis[N];\ntemplate <typename T> T min(T x,T y) {return x < y ? x : y;}\nvoid adde(int x,int y,int z) {\n\te[++tot].ne = est[x],e[tot].to = y,e[tot].v = z,est[x] = tot;\n\te[++tot].ne = est[y],e[tot].to = x,e[tot].v = z,est[y] = tot;\n}\nvoid addf(int x,int y,ll z) {\n\tf[++tot].ne = fst[x],f[tot].to = y,f[tot].v = z,fst[x] = tot;\n\tf[++tot].ne = fst[y],f[tot].to = x,f[tot].v = z,fst[y] = tot;\n}\nvoid getcir(int x,int y) {\n\tint len = tep[y] - tep[x] + 1,t = len;\n\tll lon = 0;\n\tfor (int p = y ; p != x ; p = ta[p]) bot[t--] = p; bot[t] = x;\n\tfor (int h = 1 ; h < len ; )\n\tfor (int a = est[bot[h]],b = e[a].to ; ; a = e[a].ne,b = e[a].to)\n\t\tif (b == bot[h + 1]) {lon = lon + e[a].v,dis[++h] = lon; break;}\n\tfor (int a = est[y],b = e[a].to ; ; a = e[a].ne,b = e[a].to)\n\t\tif (b == x) {lon = lon + e[a].v; break;}\n\tcir[++m] = lon;\n\tfor (int a = 1 ; a <= len ; ++ a) addf(bot[a],m,min(lon - dis[a],dis[a]));\n} //\u627e\u73af\u52a0\u65b9\u70b9 \u987a\u4fbf\u8bb0\u5f55\u73af\u957f\u5ea6\nvoid tarjan(int p) {\n\tdfn[p] = low[p] = ++tnt;\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\tif (b != ta[p]) {\n\t\t!dfn[b] ? tep[b] = tep[p] + 1,ta[b] = p,tarjan(b),low[p] = min(low[p],low[b])\n\t\t\t\t: low[p] = min(low[p],dfn[b]);\n\t\tif (low[b] > dfn[p]) addf(p,b,e[a].v);\n\t}\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\t\tif (ta[b] != p && dfn[p] < dfn[b]) getcir(p,b);\n}\nvoid dfs1(int p) {\n\tdep[p] = dep[fa[p]] + 1,++siz[p];\n\tfor (int a = fst[p],b = f[a].to ; a ; a = f[a].ne,b = f[a].to)\n\t\tif (b != fa[p]) {\n\t\tv[b] = f[a].v,fa[b] = p,dfs1(b),siz[p] += siz[b];\n\t\tif (siz[son[p]] < siz[b]) son[p] = b;\n\t}\n}\nvoid dfs2(int p,int an) {\n\ttop[p] = an;\n\tid[p] = ++tot;\n\toid[tot] = p;\n\tif (!son[p]) return;\n\tdfs2(son[p],an);\n\tfor (int a = fst[p],b = f[a].to ; a ; a = f[a].ne,b = f[a].to)\n\t\tif (b != fa[p] && b != son[p]) dfs2(b,b);\n}\nvoid build(int l,int r,int len) {\n\tif (l == r) {tr[len] = v[oid[l]]; return;}\n\tint mid = (l + r) >> 1;\n\tbuild(l,mid,len << 1);\n\tbuild(mid + 1,r,len << 1 | 1);\n\ttr[len] = tr[len << 1 | 1] + tr[len << 1];\n}\nll get(int l,int r,int len,int i,int j) {\n\tif (i <= l && r <= j) return tr[len];\n\tint mid = (l + r) >> 1; ll ans = 0;\n\tif (i <= mid) ans += get(l,mid,len << 1,i,j);\n\tif (mid < j) ans += get(mid + 1,r,len << 1 | 1,i,j);\n\treturn ans; //\u7ebf\u6bb5\u6811\u67e5\u8be2\u94fe\u4e0a\u6743\u503c\u548c\n}\nll geft(int x,int y,int cirdis) {\n\tll ans = 0;\n\tfor (int p = y ; p != x ; p = ta[p])\n\tfor (int a = est[p],b = e[a].to ; a ; a = e[a].ne,b = e[a].to)\n\tif (b == ta[p]) {ans = ans + e[a].v; break;}\n\treturn min(cirdis - ans,ans);\n} //\u627e\u73af\u4e0a\u8ddd\u79bb\u901a\u8fc7\u4e4b\u524d\u7684ta\u6570\u7ec4\u627e\u8f83\u6df1\u70b9\u7684\u7236\u4eb2\u8df3\u4e0a\u53bb \u7136\u540e\u53d6\u6700\u5c0f\u503c\nll out(int x,int y) {\n\tint fx = x,fy = y; //\u8bb0\u524d\u9a71\n\tll ans = 0;\n\twhile (top[x] != top[y]) {\n\t\tif (dep[top[x]] < dep[top[y]]) swap(x,y),swap(fx,fy);\n\t\tans += get(1,m,1,id[top[x]],id[x]);\n\t\tfx = top[x],x = fa[top[x]];\n\t} //\u8df3\u6811\u5256\n\tif (x != y) {\n\t\tif (dep[x] > dep[y]) swap(x,y),swap(fx,fy);\n\t\tans += get(1,m,1,id[x] + 1,id[y]);\n\t}\n\tif (x <= n) return ans; //\u5982\u679clca\u662f\u5706\u70b9\u5c31\u8df3\u51fa\u53bb\n\tif (fy[fa] != fx[fa]) fy = son[x];\n\tans = ans - v[fx] - v[fy]; //\u5982\u679c\u662f\u65b9\u70b9\u5c31\u53bb\u6389\u65b9\u70b9\u4e0b\u9762\u4e24\u70b9\u6743\u503c\n\tif (tep[fx] > tep[fy]) swap(fx,fy);\n\treturn ans + geft(fx,fy,cir[x]); //\u8dd1\u73af\n}\nint main() {\n\tfor (int z,y,x ; m > 0 ; -- m) x = re(),y = re(),z = re(),adde(x,y,z);\n\tm = n,tot = 0,tarjan(1),dfs1(1),tot = 0,dfs2(1,1),build(1,m,1); //m\u5230\u540e\u6765\u662f\u5b58\u5706\u65b9\u6811\u4e0a\u70b9\u6570\u7684\n\tfor (int y1,x1 ; q > 0 ; -- q) x1 = re(),y1 = re(),printf(\"%lld\\n\",out(x1,y1));\n\treturn 0;\n}\n```",
        "postTime": 1553157220,
        "uid": 146985,
        "name": "\u7d2c\u6587\u5fb7\u65af",
        "ccfLevel": 0,
        "title": "Luogu P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c(\u5706\u65b9\u6811)"
    },
    {
        "content": "\u6ca1\u6709\u7528\u5706\u65b9\u6811\uff0c\u4e0d\u8fc7\u672c\u8d28\u5dee\u4e0d\u592a\u591a\u3002\n\n\u76ee\u524d\u6700\u4f18\u89e3\uff0c\u53ef\u80fd\u5f88\u5feb\u5c31\u4e0d\u662f\u4e86\n\n**\u5efa\u56fe\u65b9\u5f0f\uff1a** \u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u5c31\u628a\u6240\u6709\u73af\u4e0a\u7684\u70b9\u63a5\u5230\u73af\u4e0a\u6df1\u5ea6\u6700\u4f4e\u7684\u90a3\u4e2a\u70b9\u4e0a\u9762\u53bb\u3002\u7136\u540e\u5c31\u662f\u4e00\u9897\u6811\u4e86\u3002\n\n\u7136\u540e $dis$\u8868\u793a\u4ece $1$ \u5230 $x$ \u7684\u6700\u77ed\u8ddd\u79bb\uff0c$SPFA$ \u6c42\u51fa\u3002\u5efa\u6811\u4e4b\u524d\u6c42\u51fa\u3002\n\n\u7136\u540e $Dis$ \u8868\u793a\u5efa\u6811\u4e4b\u524d\uff0c$1$ \u5230 $x$\u5728 $dfs$ \u6811\u4e0a\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u662f\u4e3a\u4e86\u80fd\u5feb\u901f\u6c42\u73af\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\n\n\u7136\u540e\u5efa\u6811\uff0c\u500d\u589e\u3002\n\n\u9996\u5148\u5148\u5bf9\u4e8e\u8be2\u95ee $x,y$ \uff0c\u5982\u679c $lca$ \u662f $x$ \u6216\u8005$y$ \u5c31\u8fd4\u56de $dis[x]-dis[y]$ \n\n\u5426\u5219\u5982\u679c $lca(x,y)$ \u4e0d\u662f\u73af\u4e0a\u7684\u70b9\uff0c\u5c31\u662f $dis[x]+dis[y]-2*dis[lca]$ \n\n\u5426\u5219\u5c31\u662f\u73af\u4e0a\u7684\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u500d\u589e\u7684\u65f6\u5019\u5224\u7684\u662f\u6df1\u5ea6\uff0c\u800c\u4e00\u4e2a\u73af\u4e0a\u6df1\u5ea6\u4e00\u6837\u3002\n\n\u5bf9\u4e86\u8fd8\u8981\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5c5e\u4e8e\u90a3\u4e2a\u73af\uff0c\u8fd8\u6709\u6bcf\u4e2a\u73af\u7684\u73af\u957f\u3002\u7136\u540e\u5c31\u6709\u4e24\u79cd\u8d70\u6cd5\uff0c\u8fd4\u56de\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u7ec6\u8282\u597d\u50cf\u8fd8\u633a\u591a\u7684\uff0c\u4e5f\u4e0d\u662f\u5f88\u597d\u5b9e\u73b0\u3002\u4e0d\u8fc7\u4ee3\u7801\u4e0d\u957f\u3002\n\n\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#pragma GCC target(\"avx,sse2,sse3,sse4,popcnt\")\n#pragma GCC optimize(\"O2,Ofast,inline,unroll-all-loops,-ffast-math\")\n#include<bits/stdc++.h>\n#define N 10005\n#define M 80005\nusing namespace std;\n\ninline void rd(int &X){\n    X=0;char ch=0;\n    while(!isdigit(ch))ch=getchar();\n    while( isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n}\n\nint n,m,q,cnt=1,tot,num;\nint head[N],dis[N],v[N];\nstruct nd{int nxt,to,v;}e[M];\nint d[N],Dis[N],vis[M],pre[N],sum[M],c[N],f[N][15];\n#define For(x) for(int y,i=head[x];(y=e[i].to);i=e[i].nxt)\n\ninline void add(int x,int y,int v){\n    e[++cnt]={head[x],y,v};head[x]=cnt;\n    e[++cnt]={head[y],x,v};head[y]=cnt;\n}\n\nvoid SPFA(){\n    queue<int> q;q.push(1);\n    memset(dis,0x3f,sizeof dis);dis[1]=dis[0]=0;\n    while(q.size()){\n        int x=q.front();q.pop();v[x]=0;\n        For(x) if(dis[y]>dis[x]+e[i].v){\n            dis[y]=dis[x]+e[i].v;\n            if(!v[y]) v[y]=1,q.push(y);\n        }\n    }\n}\nvoid work(int x,int rt){\n    if(x==rt) return ;\n    add(rt,x,0);vis[pre[x]]=vis[pre[x]^1]=1;\n    sum[num]+=e[pre[x]].v;c[x]=num;work(e[pre[x]^1].to,rt);\n}\nvoid dfs(int x){\n    v[x]=++tot;\n    For(x) if(i^pre[x]^1)\n        if(!v[y]) pre[y]=i,Dis[y]=Dis[x]+e[i].v,dfs(y);\n        else if(v[y]<v[x]) {\n            sum[++num]=e[i].v;\n            vis[i]=vis[i^1]=1; work(x,y);\n        }\n}\nvoid dfs2(int x){\n    for(int i=1;i<=14;i++)\n        f[x][i]=f[f[x][i-1]][i-1];\n    For(x) if(!vis[i] and y!=f[x][0])\n        d[y]=d[x]+1,f[y][0]=x,dfs2(y);\n}\nint ask(int x=0,int y=0){\n    rd(x);rd(y);\n    if(d[x]<d[y]) swap(x,y);\n    int X=x,Y=y;\n    for(int i=14;~i;i--)\n        if(d[f[x][i]]>=d[y])\n            x=f[x][i];\n    if(x==y) return dis[X]-dis[Y];\n    for(int i=14;~i;i--)\n        if(f[x][i]!=f[y][i])\n            x=f[x][i],y=f[y][i];\n    if(c[x] and c[x]==c[y]){\n        int now=sum[c[x]],L=abs(Dis[x]-Dis[y]);\n        return min(L,now-L)+dis[X]-dis[x]+dis[Y]-dis[y];\n    }return dis[X]+dis[Y]-2*dis[f[x][0]];\n}\nsigned main(){\n    rd(n);rd(m);rd(q);\n    for(int x,y,v,i=1;i<=m;i++)\n        rd(x),rd(y),rd(v),add(x,y,v);\n    SPFA();dfs(1);dfs2(1);\n    while(q--) printf(\"%d\\n\",ask());\n}\n\n```",
        "postTime": 1551499249,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[\u6a21\u677f]\u9759\u6001\u4ed9\u4eba\u638c"
    },
    {
        "content": "## \u524d\u8a00\r\n\r\n\u8fd9\u6709\u53ef\u80fd\u662f\u6211\u5199\u8fc7\u6700\u957f\u7684\u4e00\u7bc7\u9898\u89e3\uff0c\u672c\u7bc7\u6587\u7ae0\u4e2d\u5c06\u4f1a\u82b1\u8d39\u5927\u91cf\u7b14\u58a8\u8bb2\u89e3\u4ed9\u4eba\u638c\u7684\u5b9a\u4e49\u3001\u8f6c\u5316\u3001\u4ee5\u53ca\u5904\u7406\u3002\r\n\r\n\u672c\u7bc7\u6587\u7ae0\u7531\u4e8e\u7b14\u8005\u592a\u83dc\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u73b0\u9519\u8bef\u6b22\u8fce\u5404\u4f4d\u540c\u5b66\u65a7\u6b63~\r\n\r\n**\u524d\u7f6e\u829d\u58eb\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff0c~~\u5706\u65b9\u6811~~**\r\n\r\n## $\\text{Solution}$\r\n\r\n\u4ed9\u4eba\u638c\u7684\u5b9a\u4e49\u9898\u9762\u5df2\u7ecf\u7ed9\u51fa\u4e86\uff0c\u5373\uff1a\r\n>\u4efb\u610f\u4e00\u6761\u8fb9\u81f3\u591a\u53ea\u51fa\u73b0\u5728\u4e00\u6761\u7b80\u5355\u56de\u8def\u7684\u65e0\u5411\u8fde\u901a\u56fe\u79f0\u4e3a\u4ed9\u4eba\u638c\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/y9xho92v.png)\r\n\r\n\u4ed9\u4eba\u638c\u5927\u6982\u957f\u6210\u4e0a\u9762\u8fd9\u4e2a\u6837\u5b50\uff0c\u4e5f\u786e\u5b9e\u5f88\u7c7b\u4f3c\u4e8e\u73b0\u5b9e\u4e2d\u4ed9\u4eba\u638c\u7684\u6a21\u6837\uff0c\u4e0d\u96be\u53d1\u73b0\u5176\u6bcf\u4e00\u4e2a\u73af\u90fd\u662f\u4e00\u4e2a **\u8fb9\u53cc\u8054\u901a\u5206\u91cf**\uff0c\u8fd9\u4e5f\u4fbf\u4e8e\u6211\u4eec\u540e\u6587\u7684 $\\text{tarjan}$ \u7b97\u6cd5\u3002\r\n\r\n\u6211\u4eec\u77e5\u9053\u6811\uff08\u6216\u68ee\u6797\uff09\u6709\u5f88\u597d\u7684\u6027\u8d28\uff0c\u5e76\u4e14\u5bb9\u6613\u901a\u8fc7\u5f88\u591a\u5e38\u89c1\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\uff0c\u800c\u4e00\u822c\u56fe\u5219\u6ca1\u6709\u90a3\u4e48\u597d\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6709\u65f6\u6211\u4eec\u53ef\u4ee5 **\u628a\u4e00\u822c\u56fe\u4e0a\u7684\u67d0\u4e9b\u95ee\u9898\u8f6c\u5316\u5230\u6811\u4e0a\u8003\u8651**\u3002\r\n\r\n\u5f15\u5165\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5e38\u7528\u4e8e\u5904\u7406\u4ed9\u4eba\u638c\u4e0a\u7684\u95ee\u9898\u3002\r\n\r\n## \u5706\u65b9\u6811\r\n\r\n\u5706\u65b9\u6811\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u5904\u7406\u4ed9\u4eba\u638c\u95ee\u9898\u7684\u7279\u6b8a\u56fe\uff0c\u7531\u4ed9\u4eba\u638c\u8f6c\u5316\u800c\u6765\uff0c\u5706\u65b9\u6811\u662f\u4e00\u68f5\u6811\uff0c\u5176\u5185\u7684\u70b9\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a\r\n+ \u5706\u70b9\r\n+ \u65b9\u70b9\r\n\r\n\u5bf9\u4e8e\u4ed9\u4eba\u638c\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u4efb\u53d6\u4e00\u4e2a\u70b9\u4f5c\u4e3a **\u6839\u8282\u70b9**\uff0c\u5b9a\u4e49\u6bcf\u4e2a\u4ed9\u4eba\u638c\u7684\u73af\u5185\u79bb\u6839\u8282\u70b9\u6700\u8fd1\u7684\u70b9\u4e3a **\u9876\u70b9**\u3002\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u505a $\\text{tarjan}$ \u7b97\u6cd5\uff0c\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u73af\u65f6\uff0c\u5706\u65b9\u6811\u4f1a\u7834\u574f\u539f\u6765\u7684\u73af\uff0c\u5e76\u5efa\u7acb\u51fa\u4e00\u4e2a\u65b9\u70b9\uff0c\u5c06\u73af\u5185\u6240\u6709\u9664\u9876\u70b9\u5916\u7684\u70b9\u5411\u65b9\u70b9\u8fde\u63a5\u4e00\u6761\u8fb9\uff0c\u5176\u6743\u91cd\u4e3a\u8be5\u70b9\u5230\u9876\u70b9\u7684\u6700\u77ed\u8def\uff0c\u800c\u9876\u70b9\u5219\u4e0e\u65b9\u70b9\u5efa\u7acb\u4e00\u6761\u6743\u91cd\u4e3a $0$ \u7684\u8fb9\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/yxoorjtc.png)\r\n\r\n\u56fe\u4e2d\u6807\u7ea2\u7684\u4e3a\u9876\u70b9\uff0c\u84dd\u8272\u5b57\u4f53\u4e3a\u5404\u8fb9\u4e0a\u7684\u6743\u503c\u3002\r\n\r\n\u6211\u4eec\u60ca\u559c\u7684\u53d1\u73b0\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5373\u5728\u5c06\u4ed9\u4eba\u638c\u8f6c\u5316\u4e3a\u5706\u65b9\u6811\u540e\uff0c\u5176\u4efb\u610f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u4ecd\u7136 **\u4e0d\u53d8**\uff01\r\n\r\n\u6211\u4eec\u56de\u5fc6\u4e00\u4e0b\u5728\u4e00\u822c\u6811\u4e0a\u6211\u4eec\u662f\u5982\u4f55\u6c42\u5f97\u7684\u4e24\u70b9\u8ddd\u79bb\u3002\r\n\r\n\u6211\u4eec\u5229\u7528 **\u524d\u7f00\u548c** \u7684\u601d\u60f3\uff0c\u5148\u662f\u6c42\u51fa\u4e24\u70b9\u5230 **\u6839\u8282\u70b9** \u7684\u8ddd\u79bb\uff0c\u518d\u5229\u7528 $\\text{LCA}$ \u51cf\u53bb\u8ddd\u79bb\u4e2d\u7684\u5197\u4f59\u90e8\u5206\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/zxxf65ox.png)\r\n\r\n\u4f8b\u5982\u4e0a\u56fe\u4e2d\u4e24\u4e2a\u6807\u7ea2\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u518d\u51cf\u53bb\u4e24\u500d\u7684\u7eff\u8272\uff08\u8986\u76d6\u5728\u8fb9\u4e0a\u7684\u90a3\u6761\uff09\u90e8\u5206\uff0c\u5373\u4e3a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\r\n\r\n\u8fd9\u542f\u53d1\u4e86\u6211\u4eec\uff0c\u5728\u5706\u65b9\u6811\u4e0a\u8be5\u7ed3\u8bba\u4ecd\u7136\u6210\u7acb\u5417\uff1f\r\n\r\n\u6211\u4eec\u9700\u8981\u5206\u522b\u6765\u8ba8\u8bba\uff0c\u8bbe\u6240\u6c42\u8ddd\u79bb\u4e24\u70b9\u5206\u522b\u4e3a $(u,v)$\uff0c$p=\\text{LCA(u, v)}$\uff0c\u5219\u6709\u5982\u4e0b\u8ba8\u8bba\uff1a\r\n\r\n+ $p$ \u4e3a\u5706\u70b9\r\n\r\n\u6211\u4eec\u53d1\u73b0\u4e0d\u5728\u73af\u4e0a\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u662f\u4e0d\u4f1a\u88ab\u65b9\u70b9\u7ba1\u7406\u7684\uff0c\u800c\u8fd9\u4e9b\u8fb9\u4e5f\u662f\u552f\u4e00\u786e\u5b9a\uff0c\u5373 **\u65e0\u8bba\u5982\u4f55\u90fd\u5fc5\u987b\u8981\u7ecf\u8fc7\u7684** \u8fb9\uff0c\u800c\u5728\u73af\u4e0a\u7684\u8fb9\uff0c\u6700\u77ed\u8def\u5f84\u4e5f\u901a\u8fc7\u65b9\u70b9\u7ba1\u7406\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u6700\u540e\u7684\u603b\u8ddd\u79bb\u5373\u4e3a\uff1a\r\n+ $u$ \u70b9\u5230\u6240\u5728\u73af\u9876\u70b9\u7684\u6700\u77ed\u8def $+$ $u$ \u6240\u5728\u73af\u9876\u70b9\u5230 $v$ \u6240\u5728\u73af\u9876\u70b9\u7684\u8ddd\u79bb\uff08\u552f\u4e00\u786e\u5b9a\uff09$+\\ v$ \u70b9\u5230\u6240\u5728\u73af\u9876\u70b9\u7684\u6700\u77ed\u8def\u3002\r\n\r\n\u800c\u6211\u4eec\u5728\u5efa\u7acb\u5706\u65b9\u6811\u65f6\uff0c\u5706\u70b9\u4e0e\u65b9\u70b9\u95f4\u7684\u8ddd\u79bb\u6070\u597d\u5c31\u662f **\u6700\u77ed\u8def**\uff0c\u7531\u6b64\u5f97\u51fa\u6211\u4eec\u7684\u7ed3\u8bba\u5728 $p$ \u4e3a\u5706\u70b9\u65f6\u662f\u4ecd\u7136\u6210\u7acb\u7684\u3002\r\n\r\n+ $p$ \u4e3a\u65b9\u70b9\r\n\r\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53 $p$ \u4e3a\u65b9\u70b9\u65f6\uff0c**\u4e00\u5b9a\u662f\u4e24\u8005\u7684 $\\text{LCA}$ \u6700\u7ec8\u6c47\u805a\u5230\u4e86\u4e00\u4e2a\u73af\u5185\u3002**\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/4wjd25m4.png)\r\n\r\n\u7ea2\u8272\u4e24\u70b9\u5373\u4e3a\u6240\u6c42\u8ddd\u79bb\u7684\u4e24\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u7684\u8ddd\u79bb\u8981\u5206\u4e3a\u4e09\u6bb5\u6765\u6c42\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/v071hup9.png)\r\n\r\n\u6709\u7684\u540c\u5b66\u89c9\u5f97\u5373\u4f7f\u662f\u65b9\u70b9\u4e5f\u80fd\u76f4\u63a5\u6c42\u51fa\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7531\u4e8e\u65b9\u70b9\u7ba1\u7406\u7684\u662f **\u5230\u9876\u70b9** \u7684\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u6ca1\u529e\u6cd5\u76f4\u63a5\u6c42\u51fa\u3002\r\n\r\n\u6211\u4eec\u56de\u987e\u500d\u589e\u6c42 $\\text{LCA}$ \u7684\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5c31\u662f\u4f18\u5316\u4e86\u4e00\u6b65\u4e00\u6b65\u5411\u4e0a\u8df3\u7684\u8fc7\u7a0b\uff0c\u800c\u6211\u4eec\u53d1\u73b0\u6700\u7ec8\u4e24\u8005\u4e00\u5b9a\u4f1a\u8df3\u5230\u84dd\u8272\u70b9\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6b64\u65f6\u4e24\u8005\u7236\u4eb2\u5c31\u4e3a $\\text{LCA}$\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u987a\u5229\u7684\u5f97\u5230\u4e86\u73af\u4e0a\u4e24\u70b9\u7684\u7f16\u53f7\u3002\r\n\r\n---\r\n\r\n\u5728\u5706\u65b9\u6811\u4e2d\uff0c\u5982\u679c\u5c06\u4e00\u4e2a\u73af\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6574\u5f20\u56fe\u5b9e\u9645\u4e0a\u5c31\u662f\u7531\u591a\u4e2a\u6865\u8fde\u63a5\u7684\u591a\u4e2a\u8fb9\u53cc\uff0c\u800c\u8fd9\u4e9b\u6865\u5728\u5706\u65b9\u6811\u4e2d **\u4e0d\u53d8**\u3002\r\n\r\n### \u4ee3\u7801\u5b9e\u73b0\r\n\r\n\u4ee5\u4e0a\u90fd\u662f\u601d\u8def\u90e8\u5206\uff0c\u4f46\u662f\u4ed9\u4eba\u638c\u96be\u5c31\u96be\u5728\u5176\u7279\u6709\u7684\u7ec6\u8282\u4e0a\uff0c\u6211\u4eec\u7684\u987a\u5e8f\u5927\u6982\u662f\u8fd9\u6837\uff1a\r\n\r\n1. \u6839\u636e\u7ed9\u5b9a\u4fe1\u606f\u5efa\u51fa **\u4ed9\u4eba\u638c** \u7684\u56fe\u3002\r\n2. $\\text{tarjan}$ \u7b97\u6cd5\u627e\u51fa\u6240\u6709\u7684\u73af\uff0c\u5e76\u5efa\u7acb\u5706\u65b9\u6811\u3002\r\n3. dfs \u9884\u5904\u7406\u500d\u589e\u6c42 $\\text{LCA}$\u3002\r\n4. \u56de\u7b54\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5e76\u6839\u636e $p$ \u7684\u4e0d\u540c\uff0c\u5206\u522b\u5904\u7406\u7b54\u6848\u3002\r\n\r\n---\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/6vtj8946.png)\r\n\r\n\u5728\u5efa\u5706\u65b9\u6811\u65f6\uff0c\u6211\u4eec\u603b\u662f\u4f1a\u7528\u5230 **\u6bcf\u4e2a\u70b9\u5230\u9876\u70b9\u7684\u6700\u77ed\u8def**\u3002~~\u4f60\u5f53\u7136\u53ef\u4ee5\u6bcf\u4e2a\u70b9\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u3002~~ \u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u79cd\u53d6\u5de7\u7684\u529e\u6cd5\uff0c\u5229\u7528\u524d\u7f00\u548c\uff0c\u7edf\u8ba1\u51fa\u73af\u5185\u7684\u76ee\u524d\u904d\u5386\u5230\u7684\u603b\u6743\u503c\u548c\uff0c\u90a3\u4e48\u7b2c\u4e00\u6761\u8def\u5c31\u662f\u4ece\u9876\u70b9\u5f00\u59cb\u904d\u5386\u5230\u5f53\u524d\u70b9\u7684\u8fb9\u6743\u503c\u524d\u7f00\u548c\uff0c\u53e6\u5916\u4e00\u6761\u8def\u5f84\u5c31\u662f\u73af\u4e0a\u603b\u6743\u503c\u548c $-$ \u5f53\u524d\u524d\u7f00\u548c\u3002\r\n\r\n\u5269\u4e0b\u7684\u5c31\u662f\u4ee3\u7801\u5566\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 12100, M = N * 3;\r\n\r\n//tarjan\r\nint low[N], dfn[N], ts = 0;\r\n//lca\r\nint d[N], depth[N], fa[N][14];\r\n//\u5706\u65b9\u6811\r\nint s[N], stot[N], fe[N], fw[N], fu[N]; // \u73af\u5185\u524d\u7f00\u548c \u6240\u5728\u73af\u7684\u603b\u6743\u503c\u548c \u8f6c\u79fb\u8fc7\u6765\u7684\u7236\u8fb9 \u7236\u8fb9\u7684\u6743\u503c \u7236\u4eb2\u7f16\u53f7\r\nint new_n; // \u65b9\u70b9\u7f16\u53f7\r\nint A, B; // \u5f53lca\u4e3a\u65b9\u70b9\u65f6 \u4e0a\u8ff0\u73af\u4e0a\u4e24\u70b9\u7684\u7f16\u53f7\r\n//Edge\r\nstruct Edge\r\n{\r\n    int to, nxt;\r\n    int w;\r\n} edges[M];\r\nint idx = 0, h1[N], h2[N]; // \u4ed9\u4eba\u638c\u8868\u5934 \u5706\u65b9\u6811\u8868\u5934\r\n// other..\r\nint n, m, Q;\r\n\r\n//\u4e00\u4e9b\u5e38\u6570\u4f18\u5316\r\ninline int min(int a, int b)\r\n{\r\n    return a < b ? a : b;\r\n}\r\n\r\ninline int abs(int x)\r\n{\r\n    return x < 0 ? -x : x;\r\n}\r\n\r\ninline void link(int h[], int from, int to, int w)\r\n{\r\n    ++ idx;\r\n    edges[idx] = {to, h[from], w};\r\n    h[from] = idx;\r\n    return ;\r\n}\r\n\r\ninline void build_circle(int from, int to, int w)\r\n{\r\n    ++ new_n; // \u6bcf\u591a\u4e00\u4e2a\u73af \u5c31\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u65b9\u70b9\r\n    int sum = w;\r\n    //\u7edf\u8ba1\u73af\u4e0a\u7684\u6743\u503c\u548c\r\n    for(int k(to);k != from; k = fu[k])\r\n    {\r\n        s[k] = sum;\r\n        sum += fw[k];\r\n    }\r\n    s[from] = stot[from] = sum; \r\n    link(h2, from, new_n, 0); // \u5efa\u7acb\u65b9\u70b9 \u6743\u503c\u4e3a0\r\n    for(int k(to);k != from; k = fu[k])\r\n    {\r\n        stot[k] = sum;\r\n        link(h2, new_n, k, min(s[k], sum - s[k]));\r\n    }\r\n    return ;\r\n}\r\n\r\ninline void tarjan(int cur, int from)\r\n{\r\n    low[cur] = dfn[cur] = ++ ts;\r\n    int fromp = from & 1 ? from + 1 : from - 1;\r\n    for(int i(h1[cur]);i;i = edges[i].nxt)\r\n    {\r\n        int to = edges[i].to;\r\n        int w = edges[i].w;\r\n        if(!dfn[to])\r\n        {\r\n            fe[to] = i, fw[to] = w, fu[to] = cur;\r\n            tarjan(to, i);\r\n            low[cur] = min(low[cur], low[to]);\r\n            if(dfn[cur] < low[to]) // \u8be5\u8fb9\u4e3a\u6865 \u662f\u5706\u65b9\u6811\u4e2d\u4e0d\u5728\u73af\u5185\u7684\u8fb9\r\n                link(h2, cur, to, w);\r\n        }\r\n        else if(i != fromp)\r\n            low[cur] = min(low[cur], dfn[to]);\r\n    }\r\n    //\u627e\u51fa\u6240\u6709\u4ee5cur\u4e3a\u9876\u70b9\u7684\u7b80\u5355\u73af \u5efa\u51fa\u5706\u65b9\u6811\r\n    for(int i(h1[cur]);i;i = edges[i].nxt)\r\n    {\r\n        int to = edges[i].to;\r\n        int w = edges[i].w;\r\n        if(dfn[cur] < dfn[to] and fe[to] != i)\r\n            build_circle(cur, to, w);\r\n    }\r\n}\r\n\r\ninline void dfs(int cur, int pa) //\u5706\u65b9\u6811\u5185 \u500d\u589elca\u7684\u9884\u5904\u7406\r\n{\r\n    depth[cur] = depth[pa] + 1;\r\n    fa[cur][0] = pa;\r\n    for(int i(1);i <= 13; ++ i)\r\n        fa[cur][i] = fa[fa[cur][i - 1]][i - 1];\r\n    for(int i(h2[cur]);i;i = edges[i].nxt)\r\n    {\r\n        int to = edges[i].to;\r\n        int w = edges[i].w;\r\n        d[to] = d[cur] + w;\r\n        //\u53ea\u6709\u5355\u5411\u8fb9 \u4e0d\u7528\u8003\u8651\u6307\u5411\u7236\u8282\u70b9\r\n        dfs(to, cur);\r\n    }\r\n    return ;\r\n}\r\n\r\ninline int lca(int from, int to)\r\n{\r\n    if(depth[from] < depth[to])\r\n        swap(from, to);\r\n    int d = depth[from] - depth[to];\r\n    for(int i(0);i <= 13; ++ i)\r\n    {\r\n        if(d & 1)\r\n            from = fa[from][i];\r\n        d >>= 1;\r\n    }\r\n    if(from == to) // \u5728\u4e00\u6761\u94fe\u4e0a\r\n        return from;\r\n    for(int i(13);i >= 0; -- i)\r\n    {\r\n        if(fa[from][i] == fa[to][i])\r\n            continue;\r\n        from = fa[from][i];\r\n        to = fa[to][i];\r\n    }\r\n    A = from, B = to;\r\n    return fa[from][0];\r\n}\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d %d\", &n, &m, &Q);\r\n    new_n = n;\r\n    for(int i(1);i <= m; ++ i)\r\n    {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        link(h1, a, b, c), link(h1, b, a, c);\r\n    }\r\n    tarjan(1, -1);\r\n    dfs(1, 0);\r\n    while(Q -- )\r\n    {\r\n        int a, b;\r\n        scanf(\"%d %d\", &a, &b);\r\n        int p = lca(a, b);\r\n        if(p <= n) // lca\u4e3a\u5706\u70b9\r\n            printf(\"%d\\n\", d[a] + d[b] - (d[p] << 1));\r\n        else\r\n        {\r\n            //\u65b9\u70b9\u8ddd\u79bb\u5206\u4e3a\u4e09\u6bb5\u5904\u7406\r\n            int da = d[a] - d[A], db = d[b] - d[B];\r\n            int l = abs(s[A] - s[B]);\r\n            int dm = min(l, stot[A] - l);\r\n            printf(\"%d\\n\", da + db + dm);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n\r\n",
        "postTime": 1673243629,
        "uid": 666796,
        "name": "Rainsheeep",
        "ccfLevel": 0,
        "title": "P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c \u9898\u89e3 / \u3010\u7b97\u6cd5\u7b14\u8bb0\u3011\u4ed9\u4eba\u638c"
    },
    {
        "content": "\n**\u524d\u7f6e\u77e5\u8bc6\uff1a** $tarjan$(\u5272\u8fb9)\u3001$LCA$\u3002\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u4ed9\u4eba\u638c\uff0c\u8ba9\u4f60\u6c42\u8fd9\u68f5\u4ed9\u4eba\u638c\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u3002\n\n------------\n\n### \u89e3\u9898\u601d\u8def\uff1a\n\n\u5728\u6211\u4eec\u5f00\u59cb\u5b66\u4e60\u9759\u6001\u4ed9\u4eba\u638c\u4e4b\u524d\uff0c\u5148\u9700\u8981\u4e86\u89e3\u4ed9\u4eba\u638c\u5230\u5e95\u662f\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zekz4ohk.png)\n\n\u5982\u4e0a\u56fe\uff0c\u4ed9\u4eba\u638c\u662f\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c**\u4efb\u610f\u4e00\u6761\u8fb9\u6700\u591a\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2a\u73af**\u5f53\u4e2d\u3002\n\n\u56e0\u4e3a\u4ed9\u4eba\u638c\u662f\u4e00\u4e2a\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u4f20\u7edf\u601d\u60f3\u6c42\u591a\u6e90\u6700\u77ed\u8def\uff0c\u4f46\u662f\u4f1a\u7206\u3002\u6240\u4ee5\u6211\u4eec\u7528**\u5706\u65b9\u6811**\u6765\u5c06\u5176\u8f6c\u5316\u6210\u4e00\u68f5\u6811\u518d\u6765\u89e3\u51b3\u3002\n\n**\u5706\u65b9\u6811\uff1a**\n\n\u5706\u65b9\u6811\u662f\u4e00\u4e2a**\u6709\u5411\u6709\u6839\u6811**\uff0c\u4ece\u7236\u8282\u70b9\u8fde\u5411\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6811\u5f53\u4e2d\u6709\u4e24\u79cd\u70b9\uff0c**\u5706\u70b9**\u4e0e**\u65b9\u70b9**\u3002\n\n\u5706\u70b9\u5c31\u662f\u4e4b\u524d\u5728**\u4ed9\u4eba\u638c\u4e2d\u7684\u70b9**\u3002\n\n\u800c\u65b9\u70b9\u9700\u8981\u6211\u4eec\u5148\u5c06\u6bcf\u4e2a\u73af\u7684\u8fb9\u5168\u90e8\u65ad\u5f00\uff0c\u518d\u627e\u51fa\u6bcf\u4e2a\u73af\u7684**\u6839**\uff0c\u5177\u4f53\u53ef\u4ee5\u7528 $tarjan$ \u6c42\u51fa\u3002\u7136\u540e\u5411\u65b9\u70b9\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9**\u6743\u503c\u4e3a $0$**\uff0c\u4e4b\u540e\u5728\u65b9\u70b9\u5411\u8fd9\u4e2a\u73af\u7684**\u5176\u4ed6\u70b9**\u8fde\u63a5\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u627e\u7684\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u5c06\u6743\u503c\u8bbe\u4e3a\u8fd9\u4e2a\u70b9\u5230\u6839\u7684**\u6700\u5c0f\u6743\u503c**\u3002\n\n\u800c\u4e0d\u5728\u4efb\u4f55\u4e00\u4e2a\u73af\u5f53\u4e2d\u7684\u8fb9\u8fb9\u6743\u4e0d\u53d8\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\u5272\u8fb9\uff0c\u4f46\u662f\u4e5f\u90fd\u53d8\u6210**\u6709\u5411\u8fb9**\u3002\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6709\u6839\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 $1$ \u8bbe\u4e3a\u8fd9\u4e2a\u5706\u65b9\u6811\u7684**\u6839**\u3002\n\n\u6700\u540e\u4fdd\u8bc1\u4e0e\u539f\u4ed9\u4eba\u638c\u4e2d\u7684\u8def\u5f84\u6743\u503c\u76f8\u7b49\u3002\n\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u5c06\u5b83\u8f6c\u5316\u4e3a\u4e00\u68f5\u5706\u65b9\u6811\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jy29spnh.png)\n\n\u5f53\u6211\u4eec\u6784\u5efa\u5b8c\u5706\u65b9\u6811\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u6700\u77ed\u8def\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e24\u4e2a\u70b9\u7684**\u6700\u8fd1\u516c\u5171\u7956\u5148**\u4e0e\u4ed6\u4eec\u4e4b\u95f4\u7684\u6743\u503c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qlec03k5.png)\n\n- \u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u5f53\u4ed6\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e3a**\u5706\u70b9**\u65f6\uff0c\u4e5f\u5c31\u8868\u793a\u8be5\u8def\u5f84\u4e0e\u539f\u56fe\u4e2d\u8def\u5f84\u6743\u503c\u76f8\u7b49\u4e14\u6700\u8fd1\u516c\u5171\u7956\u5148\u5b58\u5728\u4e8e\u539f\u56fe\u5f53\u4e2d\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u6539\u53d8\uff0c\u5373\uff1a$dis(u,v)=dis[u]+dis[v]-2\u00d7dis[lca(u,v)]$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8g3x7w68.png)\n\n- \u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u5f53\u4ed6\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e3a**\u65b9\u70b9**\u65f6\uff0c\u4e5f\u5c31\u8868\u793a\u4ed6\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5e76\u4e0d\u5b58\u5728\u4e8e\u539f\u56fe\u5f53\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u56de\u5230\u539f\u56fe\u5f53\u4e2d\u627e\u5230\u4e24\u8fb9\u5230\u8fbe\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e4b\u524d\u7684\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u5373**\u65b9\u70b9\u4e0e\u4e24\u6761\u8def\u5f84\u76f8\u4ea4\u7684\u4e24\u4e2a\u5b69\u5b50**\uff0c\u6211\u4eec\u7528 $A$ \u548c $B$ \u6765\u8868\u793a\u3002\u73b0\u5728 $A$ \u4e0e $B$ \u5728\u4ed6\u4eec\u6240\u5c5e\u7684\u73af\u5185\u53ea\u6709\u4e24\u6761\u8def\u5f84\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a**\u524d\u7f00\u548c\u6570\u7ec4**\u6765\u5b58\u50a8\u4ed6\u4eec\u7684\u6743\u503c\u548c\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u6700\u77ed\u8def\uff0c\u6211\u4eec\u4e5f\u5c31\u8981\u6c42\u4e24\u6761\u8def\u5f84\u7684\u6700\u5c0f\u503c\u6700\u540e\u52a0\u4e0a $u$ \u548c $v$ \u5206\u522b\u5230 $A$ \u548c $B$ \u7684\u8def\u5f84\u6743\u503c\u3002\n\n\u5269\u4e0b\u7684\u4e5f\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\u5bf9\u4ee3\u7801\u7684\u89e3\u91ca\u7684\u90fd\u5728\u6ce8\u91ca\u91cc\u4e86\n \n### \u8d34\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n\tint to,next,w;\n}ed[1000001];\nint he[1000001],tot;\nint he2[1000001];\nint dfn[1000001];\nint low[1000001],idx;\nint s[1000001],stot[1000001];//\u8868\u793a\u6743\u503c\u7684\u524d\u7f00\u548c\u4e0e\u6bcf\u4e2a\u73af\u5185\u7684\u6743\u503c\u548c\nint fa[1000001],fw[1000001];//\u7236\u4eb2\u548c\u4e0e\u7236\u4eb2\u4e4b\u95f4\u7684\u6743\u503c\nint f[1000001][15];\nint dep[1000001];\nint dis[1000001];//\u4e0e\u6839\u7684\u6743\u503c\nint qwq,homo,num;//\u65b9\u70b9\u7684\u4e24\u4e2a\u513f\u5b50\u4ee5\u53ca\u65b9\u70b9\u4e2a\u6570\nint n,m,q;\nvoid insert(int u,int v,int w)//\u5efa\u4ed9\u4eba\u638c\n{\n\ted[tot].to=v;\n\ted[tot].w=w;\n\ted[tot].next=he[u];\n\the[u]=tot++;\n}\nvoid insert2(int u,int v,int w)//\u5efa\u5706\u65b9\u6811\n{\n\ted[tot].to=v;\n\ted[tot].w=w;\n\ted[tot].next=he2[u];\n\the2[u]=tot++;\n}\nvoid build(int u,int v,int w)\n{\n\tint sum=w;//\u4ece\u8bb0\u5f55\u7684\u8fd9\u6761\u8fb9\u7b97\u8d77\n\tfor(int i=v;i!=u;i=fa[i])\n\t{\n\t\ts[i]=sum;//\u524d\u7f00\u548c\u5417\u6bcf\u6b21\u52a0\u4e0a\u5b83\u5230\u5b83\u7236\u4eb2\u90a3\u6761\u8fb9\u7684\u6743\u503c\n\t\tsum+=fw[i];\u66f4\u65b0sum\n\t}\n\ts[u]=stot[u]=sum;//\u56e0\u4e3au\u8fd8\u6ca1\u6709\u88ab\u8bb0\u5f55\uff0c\u6240\u4ee5\u8d4b\u503c\u4e3a\u66f4\u65b0\u5b8c\u7684sum\u3002\u6b64\u65f6\uff0csum\u52a0\u5b8c\u73af\u5185\u6240\u6709\u6743\u503c\u3002\n\tinsert2(u,++num,0);//\u5411\u65b9\u70b9\u8fde\u8fb9\u3002\u56e0\u4e3a\u662f\u591a\u4f59\u7684\u70b9\uff0c\u6240\u4ee5num++\n\tfor(int i=v;i!=u;i=fa[i])\n\t{\n\t\tstot[i]=sum;//\u6bcf\u4e2a\u70b9\u90fd\u5728\u8fd9\u4e2a\u73af\u5185\n\t\tinsert2(num,i,min(s[i],sum-s[i]));//\u5411\u65b9\u70b9\u8fde\u4e00\u6761\u6700\u77ed\u8def\u5f84\uff0c\u5206\u522b\u662f\u4e00\u4e2a\u4f18\u5f27\u548c\u52a3\u5f27\n\t}\n\treturn ;\n}\nvoid tarjan(int u,int from)//\u5272\u8fb9\n{\n\tdfn[u]=low[u]=++idx;\n\tfor(int i=he[u];i!=-1;i=ed[i].next)\n\t{\n\t\tint v=ed[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tfa[v]=u;fw[v]=ed[i].w;\n\t\t\ttarjan(v,i);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t\tif(low[v]>dfn[u])\n\t\t\t\tinsert2(u,v,ed[i].w);//\u8fd9\u6761\u8fb9\u662f\u5272\u8fb9\uff0c\u76f4\u63a5\u5728\u5706\u65b9\u6811\u4e2d\u5efa\u8fb9\n\t\t}\n\t\telse if(i!=(from^1)) \n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t}\n\tfor(int i=he[u];i!=-1;i=ed[i].next)\n\t{\n\t\tint v=ed[i].to;\n\t\tif(dfn[u]<dfn[v]&&fa[v]!=u)//\u8868\u793av\u5728\u4ee5u\u4e3a\u6839\u7684\u5206\u91cf\u4e2d\uff0c\u4e14\u8fd9\u6761\u8fb9\u4e0d\u5728\u5706\u65b9\u6811\u4e2d\uff0c\u4eceu\u51fa\u53bb\u7684\u8fb9\n\t\t\tbuild(u,v,ed[i].w);//\u5efa\u7acb\u65b9\u70b9\u518d\u8fde\u63a5\n\t}\n\treturn ;\n}\nvoid dfs(int u,int father)//\u9884\u5904\u7406\n{\n\tdep[u]=dep[father]+1;\n\tf[u][0]=father;\n\tfor(int i=1;(1<<i)<=dep[u];i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\tfor(int i=he2[u];i!=-1;i=ed[i].next)\n\t{\n\t\tint v=ed[i].to;\n\t\tdis[v]=dis[u]+ed[i].w;\n\t\tdfs(v,u);\n\t}\n\treturn ;\n}\nint LCA(int from,int to)//\u6c42LCA\n{\n\tif(dep[from]<dep[to])\n\t\tswap(from,to);\n\tint deep=dep[from]-dep[to];\n\tfor(int i=0;i<=13;i++)\n\t{\n\t\tif(deep&1)\n\t\t\tfrom=f[from][i];\n\t\tdeep>>=1;\n\t}\n\tif(from==to) return to;\n\tfor(int i=13;i>=0;i--)\n\t\tif(f[from][i]!=f[to][i])\n\t\t{\n\t\t\tfrom=f[from][i];\n\t\t\tto=f[to][i];\n\t\t}\n\tqwq=from;homo=to;\n\treturn f[from][0];\n}\nint main()\n{\n\tmemset(he,-1,sizeof(he));\n\tmemset(he2,-1,sizeof(he2));\n\tscanf(\"%d %d %d\",&n,&m,&q);num=n;//\u5706\u65b9\u6811\u4e2d\u81f3\u5c11\u6709n\u4e2a\u70b9\n\twhile(m--)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\tinsert(x,y,z);\n\t\tinsert(y,x,z);\n\t}\n\ttarjan(1,0);\n\tdfs(1,0);\n\twhile(q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tint lca=LCA(x,y);\n\t\tif(lca<=n) \n\t\t\tprintf(\"%d\\n\",dis[x]+dis[y]-dis[lca]*2);//\u4ece\u6e90\u70b9\u5230x+\u4ece\u6e90\u70b9\u5230y-2*\u4ece\u6e90\u70b9\u5230lca\uff08\u4e0d\u4f1a\u5efa\u8bae\u753b\u56fe\uff09\n\t\telse\n\t\t{\n\t\t\tint p=dis[x]-dis[qwq];\n\t\t\tint q=dis[y]-dis[homo];\n\t\t\tint minx=min(abs(s[qwq]-s[homo]),stot[qwq]-abs(s[qwq]-s[homo]));//\u4e00\u6761\u8def\u5f84\u4e0e\u6574\u4e2a\u73af\u5185\u6743\u503c\u548c\u51cf\u53bb\u7684\u8def\u5f84\u7684\u6700\u5c0f\u503c\n\t\t\tprintf(\"%d\\n\",p+q+minx);//\u8f93\u51fa\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1672750899,
        "uid": 681351,
        "name": "Tobiichi_Origami",
        "ccfLevel": 3,
        "title": "\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c   \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P5236)\n\n## \u9898\u610f\n\n$n$ \u4e2a\u70b9 $m$ \u6761\u65e0\u5411\u8fb9\u7684\u4ed9\u4eba\u638c\uff0c$q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u7ed9\u5b9a $u,v$\uff0c\u6c42 $u,v$ \u4e24\u70b9\u8ddd\u79bb\u3002\n\n## \u505a\u6cd5\n\n\u9996\u5148\u5982\u679c\u662f\u4e00\u68f5\u6811\uff0c\u5047\u8bbe $dist(x)$ \u4e3a $x$ \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u5219\u7b54\u6848\u4e3a $dist(u)+dist(v)-2\\times dist(\\text{LCA}(u,v))$\u3002\n\n\u73b0\u5728\u53d8\u6210\u4e86\u4ed9\u4eba\u638c\uff0c\u53ef\u4ee5\u5148\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u5c31\u53d8\u6210\u4e86\u6811\u5f62\u7ed3\u6784\uff0c\u4e00\u6837\u8df3 $\\text{LCA}$\uff0c\u5982\u679c $\\text{LCA}$ \u662f\u5706\u70b9\uff0c\u5c31\u548c\u4e0a\u9762\u7684\u6811\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u5982\u679c\u662f\u65b9\u70b9\uff0c\u5219\u627e\u5230\u4e24\u70b9\u8df3 $\\text{LCA}$ \u7684\u8fc7\u7a0b\u4e2d\u7ecf\u8fc7\u7684\u4e24\u4e2a\u73af\u4e0a\u70b9\uff0c\u8ba1\u7b97\u73af\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u73af\u4e0a\u7684\u70b9\u5230\u73af\u9876\u70b9\u7684\u8ddd\u79bb\uff0c\u5047\u8bbe\u4e3a $d(x)$\uff0c\u73af\u5468\u957f\u8bbe\u4e3a $len$\uff0c\u5219\u73af\u4e0a\u4e24\u70b9 $x,y$ \u7684\u8ddd\u79bb\u4e3a $\\min(|d(x)-d(y)|,len-|d(x)-d(y)|)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n// Problem: P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5236\n// Memory Limit: 125 MB\n// Time Limit: 300 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace Std {\nint n, m, head[20010][2], nxt[80010], to[80010], cnt, dfn[20010], fa[20010],\n    tot, num, len[80010], q, dep[20010], d[20010][20], f[20010][20], top[20010],\n    lenh[20010], dis[20010];\nbool mark[20010];\ninline void add(int x, int y, int z, bool t) {\n  to[++cnt] = y;\n  len[cnt] = z;\n  nxt[cnt] = head[x][t];\n  head[x][t] = cnt;\n}\nvoid dfs(int x, int y) {\n  dfn[x] = ++tot;\n  fa[x] = f[x][0] = y;\n  for (int i = head[x][0]; i; i = nxt[i]) {\n    if (to[i] == y) continue;\n    if (!dfn[to[i]]) {\n      mark[x] = 0;\n      dis[to[i]] = dis[x] + len[i];\n      d[to[i]][0] = len[i];\n      dfs(to[i], x);\n      if (!mark[x]) add(x, to[i], len[i], 1);\n    } else {\n      if (dfn[to[i]] > dfn[x]) continue;\n      int u = x;\n      ++num;\n      lenh[num] = dis[x] - dis[to[i]] + len[i];\n      while (u != to[i]) {\n        f[u][0] = num;\n        d[u][0] = min(dis[u] - dis[to[i]], lenh[num] - dis[u] + dis[to[i]]);\n        add(num, u, d[u][0], 1);\n        u = fa[u];\n        mark[u] = 1;\n      }\n      f[num][0] = to[i];\n      d[num][0] = 0;\n      add(to[i], num, 0, 1);\n    }\n  }\n}\nvoid dfs2(int x) {\n  for (int i = head[x][1]; i; i = nxt[i]) {\n    dep[to[i]] = dep[x] + 1;\n    dfs2(to[i]);\n  }\n}\nvoid init(void) {\n  for (int i = 1; i < 20; ++i) {\n    for (int j = 1; j <= num; ++j) {\n      f[j][i] = f[f[j][i - 1]][i - 1];\n      d[j][i] = d[j][i - 1] + d[f[j][i - 1]][i - 1];\n    }\n  }\n}\nint query(int x, int y) {\n  int u = x, v = y, ans = 0;\n  if (dep[u] < dep[v]) swap(u, v);\n  for (int i = 19; ~i; --i) {\n    if (dep[f[u][i]] < dep[v]) continue;\n    ans += d[u][i];\n    u = f[u][i];\n  }\n  if (u != v) {\n    for (int i = 19; ~i; --i) {\n      if (f[u][i] == f[v][i]) continue;\n      ans += d[u][i] + d[v][i];\n      u = f[u][i], v = f[v][i];\n    }\n    if (u != v) {\n      if (dep[u] == dep[v]) {\n        ans += d[u][0] + d[v][0];\n        u = f[u][0], v = f[v][0];\n      } else {\n        if (dep[u] > dep[v]) {\n          ans += d[u][0];\n          u = f[u][0];\n        } else {\n          ans += d[v][0];\n          v = f[v][0];\n        }\n      }\n    }\n  }\n  if (u > n) {\n    ans = 0;\n    for (int i = 19; ~i; --i) {\n      if (dep[f[x][i]] > dep[u]) {\n        ans += d[x][i];\n        x = f[x][i];\n      }\n      if (dep[f[y][i]] > dep[u]) {\n        ans += d[y][i];\n        y = f[y][i];\n      }\n    }\n    ans += min(abs(dis[x] - dis[y]), lenh[u] - abs(dis[x] - dis[y]));\n  }\n  return ans;\n}\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &q);\n  num = n;\n  int u, v, w;\n  for (int i = 1; i <= m; ++i) {\n    scanf(\"%d%d%d\", &u, &v, &w);\n    add(u, v, w, 0);\n    add(v, u, w, 0);\n  }\n  dep[1] = 1;\n  dfs(1, 0);\n  dfs2(1);\n  init();\n  for (int i = 1; i <= q; ++i) {\n    scanf(\"%d%d\", &u, &v);\n    printf(\"%d\\n\", query(u, v));\n  }\n  return 0;\n}\n}  // namespace Std\nint main() { return Std::main(); }\n```\n",
        "postTime": 1653620528,
        "uid": 576737,
        "name": "Wilson_Inversion",
        "ccfLevel": 7,
        "title": "P5236 \u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c \u9898\u89e3"
    },
    {
        "content": "\u5706\u65b9\u6811\u6a21\u677f\u9898\u3002\u4e0d\u4f1a\u5706\u65b9\u6811\u7684\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u535a\u5ba2](https://www.luogu.org/blog/user7035/yuan-fang-shu)\u3002\u4ed9\u4eba\u638c\u7684\u5efa\u6811\u548c\u4e00\u822c\u56fe\u7684\u5efa\u6811\u662f\u4e00\u6837\u7684\u3002\n\n\u8fd9\u9053\u9898\u9664\u4e86\u5706\u65b9\u6811\u6784\u5efa\u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u989d\u5916\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6700\u9ad8\u70b9\u67d0\u4e2a\u56fa\u5b9a\u65b9\u5411\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u5728\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u7b97\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u56e0\u4e3a\u662f\u642c\u7684\u677f\u5b50\u56e0\u6b64 $lca$ \u7528 $tarjan$ \u6c42\u7684\u3002\u5f53\u6570\u636e\u8f83\u5927\u65f6\u4f1a\u51fa\u73b0\u660e\u663e\u4f18\u52bf\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+q)$ (\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u4e0d\u6e05\u695a\u56e0\u6b64\u4e5f\u8bb8\u662f $O(n\\log n +q)$\u7684)\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define pb push_back\n#define mp make_pair\n#define Chkmax(a,b) a=a>b?a:b\n#define Chkmin(a,b) a=a<b?a:b\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n    const uint32 Buffsize=1<<15,Output=1<<23;\n    static char Ch[Buffsize],*S=Ch,*T=Ch;\n    inline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n    static char Out[Output],*nowps=Out;\n    \n    inline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n    template<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n    inline void readint(int&x)\n\t{\n\t\tx=0;register char ch;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc());\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\ninline void file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*HEL=freopen(\"water.in\",\"r\",stdin);\n\tFILE*IOS=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=2e4+7,MAXQ=1e4+7;\n\nstatic int n,m,Q;\n\nstatic struct graph\n{\n\tstruct edge\n\t{\n\t\tint v;\n\t\tll w;\n\t\tint nxt;\n\t}p[MAXN<<1];\n\n\tint e,head[MAXN];\n\n\tinline void add(int u,int v,ll w){p[++e]=(edge){v,w,head[u]},head[u]=e;}\n}p,q;\n\nstatic struct quer\n{\n\tint u,v;\n}ask[MAXQ];\n\nvector<int>quer[MAXN];\n\ninline void init()\n{\n\treadint(n),readint(m),readint(Q);\n\tstatic int u,v,w;\n\tRep(i,1,m)readint(u),readint(v),readint(w),p.add(u,v,w),p.add(v,u,w);\n\tRep(i,1,Q)\n\t{\n\t\treadint(ask[i].u),readint(ask[i].v);\n\t\tquer[ask[i].u].pb(i),quer[ask[i].v].pb(i);\n\t}\n}\n\nstatic int tt,dfn[MAXN],low[MAXN],dfs_clock,sta[MAXN],tp;\n\nstatic int cir[MAXN],Le[MAXN],pt;\n\nstatic ll len[MAXN],idst[MAXN];\n\nstatic int w[MAXN],dst[MAXN];\n\nvoid tarjan(int u,int fr,int ds=0)\n{\n\tdfn[u]=low[u]=++dfs_clock,sta[++tp]=u,dst[tp]=ds;\n\tfor(register int i=p.head[u];i;i=p.p[i].nxt)\n\t{\n\t\tint v=p.p[i].v;\n\t\tif(v==fr)continue;\n\t\tif(dfn[v]){if(dfn[v]<low[u])low[u]=dfn[v],w[v]=p.p[i].w;}\n\t\telse\n\t\t{\n\t\t\ttarjan(v,u,p.p[i].w);\n\t\t\tChkmin(low[u],low[v]);\n\t\t\tif(low[v]>=dfn[u])\n\t\t\t{\n\t\t\t\tq.add(u,++tt,0);\n\t\t\t\tpt=0;\n\t\t\t\tdo{len[tt]+=dst[tp],cir[++pt]=sta[tp],Le[pt]=dst[tp--];}\n\t\t\t\t\twhile(sta[tp+1]^v);\n\t\t\t\tif(pt>1)len[tt]+=w[u];\n\t\t\t\tcir[pt+1]=0;\n\t\t\t\tRepe(i,pt,1)\n\t\t\t\t{\n\t\t\t\t\tidst[cir[i]]=idst[cir[i+1]]+Le[i];\n\t\t\t\t\tif(pt==1)q.add(tt,cir[i],len[tt]);\n\t\t\t\t\telse\n\t\t\t\t\tq.add(tt,cir[i],min(idst[cir[i]],len[tt]-idst[cir[i]]));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse Chkmin(low[u],low[v]);\n\t\t}\n\t}\n}\n\nstatic ll dpt[MAXN];\n\nvoid getdpt(int u)\n{\n\tfor(register int i=q.head[u];i;i=q.p[i].nxt)\n\t{\n\t\tint v=q.p[i].v;\n\t\tdpt[v]=dpt[u]+q.p[i].w;\n\t\tgetdpt(v);\n\t}\n}\n\nstatic struct dsu\n{\n\tint fa[MAXN];\n\n\tinline void init(){Rep(i,1,tt)fa[i]=i;}\n\n\tint Find(int u){return u==fa[u]?u:fa[u]=Find(fa[u]);}\n\n\tinline void combine(int u,int v){u=Find(u),v=Find(v);if(u^v)fa[u]=v;}\n}now,fr;\n\nstatic ll ans[MAXQ];\n\nstatic int vis[MAXN],curd[MAXN];\n\nvoid tarjan2(int u)\n{\n\tvis[u]=1;\n\tfor(register int i=q.head[u];i;i=q.p[i].nxt)\n\t{\n\t\tint v=q.p[i].v;\n\t\tcurd[u]=v,tarjan2(v);\n\t\tnow.combine(v,u);\n\t}\n\tfor(register int v:quer[u])\n\t{\n\t\tint x=ask[v].u^ask[v].v^u;\n\t\tif(vis[x]==1)\n\t\t{\n\t\t\tint lca=now.Find(x);\n\t\t\tif(lca<=n)ans[v]=dpt[u]+dpt[x]-2*dpt[lca];\n\t\t\telse\n\t\t\t{\n\t\t\t\tregister int pr1=fr.Find(x),pr2=curd[lca];\n\t\t\t\tans[v]=dpt[u]+dpt[x]-dpt[pr1]-dpt[pr2]\n\t\t\t\t\t+min(abs(idst[pr1]-idst[pr2])\n\t\t\t\t\t,len[lca]-abs(idst[pr1]-idst[pr2]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=q.head[u];i;i=q.p[i].nxt)\n\t{\n\t\tint v=q.p[i].v;\n\t\tfr.combine(v,u);\n\t}\n}\n\ninline void solve()\n{\n\ttt=n,tarjan(1,0);\n\tnow.init(),fr.init();\n\tgetdpt(1),tarjan2(1);\n\tRep(i,1,Q)\n\t{\n\t\twrite(ans[i]);\n\t\tif(i%100000==0)flush();\n\t}\n\tflush();\n}\n\nint main()\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1551446922,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5236 \u3010\u3010\u6a21\u677f\u3011\u9759\u6001\u4ed9\u4eba\u638c(\u5706\u65b9\u6811)\u3011"
    }
]