[
    {
        "content": "## \u76ee\u5f55\n\n+ \u524d\u7f6e\u829d\u58eb\n\n+ \u5e8f\n\n+ \u79bb\u7ebf\u6784\u9020\n\n+ \u5728\u7ebf\u6784\u9020\n\n+ \u4ee3\u7801\u5b9e\u73b0\n\n+ \u4e0e\u5176\u4ed6\u540e\u7f00\u6570\u636e\u7ed3\u6784\u7684\u6bd4\u8f83\n\n+ \u4f8b\u9898\n\n+ \u53c2\u8003\u8d44\u6599\n\n------------\n\n\n## \u524d\u7f6e\u829d\u58eb\n\n\u91cd\u91cf\u5e73\u8861\u6811\u3002\n\n\u6b64\u91cd\u91cf\u5e73\u8861\u6811\u7684\u5b9a\u4e49\u4e3a\uff1a\n\n> \u5728\u63d2\u5165\u6216\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e3a\u4e86\u4fdd\u6301\u6811\u7684\u5e73\u8861\u800c\u91cd\u6784\u7684\u5b50\u6811\u5927\u5c0f\u4e3a\u5747\u644a\u6216\u671f\u671b $O(\\log n)$\u3002\n\n~~[\u8981\u4e0d\u8981\u6765\u770b\u770b\u91cd\u91cf\u5e73\u8861\u6811\u7684\u7ecf\u5178\u9898\u76ee\uff1f](https://www.luogu.com.cn/problem/P6272)~~\n\n\u53ea\u8981\u662f\u91cd\u91cf\u5e73\u8861\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\u4e3b\u8981\u6709\u66ff\u7f6a\u7f8a\u6811\u3001$\\texttt {Treap}$\u3001$\\texttt {Leafy Tree}$ \u7b49\u3002\n\n\u672c\u6587\u5c06\u4ee5 $\\texttt {Treap}$ \u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u540e\u7f00\u5e73\u8861\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nkqr1z9k.png)\n\n(\u56fe\u6e90\uff1a<https://www.luogu.com.cn/blog/85514/fhq-treap-xue-xi-bi-ji>)\n\n------------\n\n## 0. \u5e8f\n\n\u8fd9\u4e00\u6bb5\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u76f4\u63a5\u5b66\u7b97\u6cd5\u7684\u53ef\u4ee5\u8df3\u8fc7\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u540e\u7f00\u6570\u636e\u7ed3\u6784\u535a\u5927\u7cbe\u6df1\u3002\u5305\u62ec\u6709\uff1a\u540e\u7f00\u6811\u3001\u540e\u7f00\u6570\u7ec4\u3001\u540e\u7f00\u81ea\u52a8\u59ec\u4e0e\u540e\u7f00\u5e73\u8861\u6811\u3002\u540c\u65f6\u80cc\u8bf5 $4$ \u79cd\u6570\u636e\u7ed3\u6784\u7684\u6a21\u677f\u4e5f\u5fd2\u7d2f\u4e86\u3002\u4e8e\u662f\u6211\u5c31\u5f00\u59cb\u60f3\u5077\u5de5\u51cf\u6599\u3002\n\n\u9996\u5148\uff0c\u53cd\u4e32\u7684\u540e\u7f00\u81ea\u52a8\u59ec\u7684 $\\texttt {parent tree}$ \u5c31\u662f\u540e\u7f00\u6811\u3002\u8fd9\u4e48\u4e00\u6765\uff0c\u4e00\u4e2a\u7b97\u6cd5\u5c31\u53ef\u4ee5\u540c\u65f6\u6784\u9020\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u3002\u5b8c\u7f8e\uff01\n\n\u7136\u540e\u5c31\u5269\u4e0b\u540e\u7f00\u6570\u7ec4\u4e86\u3002\u4f46\u662f\u8fd9\u4e1c\u897f\u4e0d\u8bb2\u6b66\u5fb7\u3002\u770b\u7740\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5f88\u9057\u61be\uff0c\u6211\u770b\u4e86\u534a\u5929\u4e5f\u6ca1\u61c2\u57fa\u6570\u6392\u5e8f\uff0c\u5176\u4ed6\u4e24\u79cd $O(n)$ \u529e\u6cd5\u4e5f\u770b\u4e0d\u61c2\u2026\u4e8e\u662f\u6211\u53ea\u80fd\u60f3\u5176\u4ed6\u529e\u6cd5\u2026\n\n\u6b38\uff0c\u4e0d\u662f\u8fd8\u6709\u540e\u7f00\u5e73\u8861\u6811\u5417\uff1f\u53ef\u4e0d\u53ef\u4ee5\u7528\u540e\u7f00\u5e73\u8861\u6811\u6765\u89e3\u51b3\u540e\u7f00\u6570\u7ec4\u5462\uff1f\n\n\u90a3\u5c31\u8bd5\u8bd5\u770b\u54af\u3002\n\n------------\n\n## 1. \u6982\u5ff5\n\n\u540e\u7f00\u5e73\u8861\u6811\u3002\u7531\u5b57\u9762\u610f\u601d\u53ef\u5f97\uff0c\u5b83\u662f\u4e00\u79cd\u7ef4\u62a4\u540e\u7f00\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u540e\u7f00\u3002~~\u90a3\u5982\u679c\u7528\u6765\u7ef4\u62a4\u524d\u7f00\u662f\u4e0d\u662f\u5c31\u662f\u524d\u7f00\u5e73\u8861\u6811\u4e86\uff1f~~\n\n\u5f88\u663e\u7136\uff0c\u5e73\u8861\u6811\u662f\u53ef\u4ee5\u7528\u6765\u6392\u5e8f\u7684\u3002\u90a3\u4e48\u540e\u7f00\u5e73\u8861\u6811\u5c31\u662f\u7528\u6765\u628a\u8fd9\u4e9b\u540e\u7f00\u8fdb\u884c\u6392\u5e8f\u7684\u3002\n\n\u600e\u4e48\u6392\u5e8f\u5462\uff1f\n\n\u90a3\u5f53\u7136\u662f\u5b57\u5178\u5e8f\u5566\u3002\n\n\u6240\u4ee5\u8fd9\u5c31\u662f\u540e\u7f00\u5e73\u8861\u6811\u7684\u5b9a\u4e49\uff1a\n\n> \u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u5b9a\u4e49 $s^i$ \u4e3a\u5176\u7531 $s_i,s_{i+1},...,s_n$ \u7ec4\u6210\u7684\u540e\u7f00\u3002\n\n> \u540e\u7f00\u4e4b\u95f4\u7684\u5927\u5c0f\u7531\u5b57\u5178\u5e8f\u5b9a\u4e49\uff0c\u540e\u7f00\u5e73\u8861\u6811\u5c31\u662f\u4e00\u4e2a\u5e73\u8861\u6811\u5e76\u7ef4\u62a4\u8fd9\u4e9b\u540e\u7f00\u7684\u987a\u5e8f\u3002\n\n------------\n\n## 2. \u79bb\u7ebf\u6784\u9020\n\n\u90a3\u4e48\u6211\u4eec\u8bd5\u7740\u6765\u5efa\u7acb\u4e00\u68f5\u540e\u7f00\u5e73\u8861\u6811\uff1a\n\n\u6211\u4eec\u5148\u5199\u51fa\u5b57\u7b26\u4e32 $\\texttt {abababc}$ \u7684\u6240\u6709\u540e\u7f00\uff1a$\\texttt{abababc bababc ababc babc abc bc c}$\u3002\n\n\u628a\u8fd9\u4e00\u4e9b\u540e\u7f00\u6309\u7167\u5b57\u5178\u5e8f\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\uff1a$\\texttt {abababc ababc abc bababc babc bc c}$\u3002\n\n\u628a\u5b83\u4eec\u50cf\u66ff\u7f6a\u7f8a\u6811\u4e00\u6837\u4e8c\u5206\u62ce\u8d77\u6765\uff0c\u4e0d\u5c31\u662f\u4e00\u68f5\u540e\u7f00\u5e73\u8861\u6811\u4e86\u5417\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3bj7s0h4.png)\uff08\u4e0a\u56fe\u662f\u5b57\u7b26\u4e32 $\\texttt {abababc}$ \u7684\u6240\u6709\u540e\u7f00\u7684\u6392\u5e8f\u7ed3\u679c\u4e0e\u6240\u5efa\u7acb\u7684\u540e\u7f00\u5e73\u8861\u6811\uff09\n\n\u5f88\u7b80\u5355\u5bf9\u4e0d\u3002\n\n\u597d\u5bb6\u4f19\uff0c\u8fd9\u4e0d\u8fd8\u9700\u8981\u5148\u6c42\u51fa\u540e\u7f00\u6570\u7ec4\u6765\u5417\uff1f\n\n\u65f6\u590d\u4e3a $O(n)$ \u6216 $O(n \\log n)$\uff0c\u53d6\u51b3\u4e8e\u6240\u7528\u540e\u7f00\u6570\u7ec4\u7684\u7b97\u6cd5\u3002\n\n\u4e0a\u9762\u7684\u65b9\u6cd5\u4e3a\u6784\u9020\u540e\u7f00\u5e73\u8861\u6811\u7684\u79bb\u7ebf\u7b97\u6cd5\u3002\n\n\u867d\u7136\u8fd9\u53ef\u4ee5\u5efa\u51fa\u540e\u7f00\u6570\u7ec4\u6765\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u5728\u7ebf\u89e3\u51b3\u95ee\u9898\u3002~~\u4e5f\u4e0d\u80fd\u89e3\u51b3\u6211\u4e0d\u4f1a\u6c42\u540e\u7f00\u6570\u7ec4\u7684\u95ee\u9898\u3002~~\n\n------------\n\n## 3. \u5728\u7ebf\u6784\u9020\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5728\u7ebf\u6784\u9020\u5462\uff1f\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u4e00\u4e2a\u4e00\u4e2a\u5730\u628a\u63d2\u5165\u8fdb\u53bb\u5e73\u8861\u6811\u3002\n\n\u600e\u4e48\u63d2\u5165\u5462\uff1f\n\n\u6211\u4eec\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u7528\u5373\u5c06\u63d2\u5165\u7684\u540e\u7f00 $x$ \u548c\u6b64\u8282\u70b9\u4ee3\u8868\u7684\u540e\u7f00 $y$ \u6309\u7167\u5b57\u5178\u5e8f\u6bd4\u8f83\u3002\u5982\u679c $x<y$\uff0c\u90a3\u4e48\u5c31\u5411\u5de6\u513f\u5b50\u63d2\u5165\uff1b\u5982\u679c $x>y$\uff0c\u90a3\u4e48\u5c31\u5411\u53f3\u513f\u5b50\u63d2\u5165\u3002\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684\u957f\u5ea6\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u6ca1\u6709\u76f8\u540c\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u4ee5\u5b57\u7b26\u4e32 $\\texttt {abababc}$ \u4e3a\u4f8b\uff0c\u628a $\\texttt {abababc}$ \u7684\u6240\u6709\u540e\u7f00\u63d2\u5165\u4e00\u68f5\u5e73\u8861\u6811\uff1a\uff08\u5e73\u8861\u6811\u4ee5 $\\texttt {Treap}$ \u4e3a\u4f8b\uff0c\u9ed1\u5b57\u4e3a\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\uff0c\u84dd\u5b57\u4e3a\u8282\u70b9\u7684 $key$ \u503c\uff08\u968f\u673a\u6743\u503c\uff09\uff09\n\n### 1. \u63d2\u5165\u540e\u7f00 $\\texttt {c}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3yrjpiis.png)\n\n### 2. \u63d2\u5165\u540e\u7f00 $\\texttt {bc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b07ce25d.png)\n\n### 3. \u63d2\u5165\u540e\u7f00 $\\texttt {abc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rllf752d.png)\n\n\u4e0d\u6ee1\u8db3\u5806\u6027\u8d28\uff0c\u8fdb\u884c\u65cb\u8f6c\u8c03\u6574\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j8h16oaf.png)\n\n### 4. \u63d2\u5165\u540e\u7f00 $\\texttt {babc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zgtbuiz0.png)\n\n### 5. \u63d2\u5165\u540e\u7f00 $\\texttt {ababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dhbmehi7.png)\n\n### 6. \u63d2\u5165\u540e\u7f00 $\\texttt {bababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c7swlfja.png)\n\n\u4e0d\u6ee1\u8db3\u5806\u6027\u8d28\uff0c\u8fdb\u884c\u65cb\u8f6c\u8c03\u6574\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/96op3km1.png)\n\n### 7. \u63d2\u5165\u540e\u7f00 $\\texttt {abababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6nob4gbs.png)\n\n\u4e0d\u6ee1\u8db3\u5806\u6027\u8d28\uff0c\u8fdb\u884c\u65cb\u8f6c\u8c03\u6574\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/izco5hjj.png)\n\n\u81f3\u6b64\uff0c\u5173\u4e8e\u5b57\u7b26\u4e32 $\\texttt {abababc}$ \u6240\u6709\u540e\u7f00\u7684\u540e\u7f00\u5e73\u8861\u6811\u5df2\u7ecf\u5efa\u7acb\u5b8c\u6210\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5efa\u7acb\u4e00\u68f5\u540e\u7f00\u5e73\u8861\u6811\uff0c\u5176\u5b9e\u662f\u628a\u540e\u7f00\u4e00\u4e2a\u4e00\u4e2a\u5730\u63d2\u5165\u8fdb\u5e73\u8861\u6811\u4e2d\u3002\n\n------------\n\n\u65e2\u7136\u6709\u63d2\u5165\u4e00\u4e2a\u540e\u7f00\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u4e5f\u5e94\u8be5\u6709\u5220\u9664\u4e00\u4e2a\u540e\u7f00\u7684\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u521a\u624d\u5efa\u7acb\u7684\u8fd9\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u540e\u7f00\u4e00\u4e2a\u4e00\u4e2a\u5220\u9664\u3002\n\n### 0. \u539f\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/izco5hjj.png)\n\n### 1. \u5220\u9664\u540e\u7f00 $\\texttt {abababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vt4oc6i2.png)\n\n### 2. \u5220\u9664\u540e\u7f00 $\\texttt {bababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9qjyidk6.png)\n\n### 3. \u5220\u9664\u540e\u7f00 $\\texttt {ababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3fpnfahb.png)\n\n### 4. \u5220\u9664\u540e\u7f00 $\\texttt {babc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tedry4v7.png)\n\n### 5. \u5220\u9664\u540e\u7f00 $\\texttt {abc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ibnjh0uj.png)\n\n### 6. \u5220\u9664\u540e\u7f00 $\\texttt {bc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hob36du6.png)\n\n### 7. \u5220\u9664\u540e\u7f00 $\\texttt {c}$\uff1a\n\n\u5220\u7a7a\u4e86\uff0c\u5c31\u4e0d\u653e\u56fe\u7247\u4e86\u3002\n\n------------\n\n\u8fd9\u4e2a\u4f8b\u5b50\u8c8c\u4f3c\u4e0d\u592a\u597d\u2026\u90a3\u5c31\u518d\u6765\u4e00\u4e2a\u4f8b\u5b50\u5427\u3002\n\n~~\u5176\u5b9e\u662f\u6765\u51d1\u5b57\u6570\u7684\u3002~~\n\n### 0. \u539f\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9xmpor8j.png)\n\n### 1. \u5220\u9664\u540e\u7f00 $\\texttt {abababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lz9l583x.png)\n\n### 2. \u5220\u9664\u540e\u7f00 $\\texttt {bababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yuh19boa.png)\n\n**\u5982\u56fe\uff0c\u5de6\u53f3\u5b50\u6811\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u4e3a\u4e86\u907f\u514d\u5206\u7c7b\u8ba8\u8bba\uff0c\u6211\u628a\u5b83\u7528 $\\texttt {FHQ Treap}$ \u7684 $\\texttt {merge}$ \u64cd\u4f5c\u8fdb\u884c\u5408\u5e76\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199 $\\texttt {Treap}$ \u7684\u5206\u7c7b\u8ba8\u8bba\uff09\uff1a**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/31am5kps.png)\n\n### 3. \u5220\u9664\u540e\u7f00 $\\texttt {ababc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p09clvv8.png)\n\n### 4. \u5220\u9664\u540e\u7f00 $\\texttt {babc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xz4oowna.png)\n\n### 5. \u5220\u9664\u540e\u7f00 $\\texttt {abc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oa9qncx8.png)\n\n### 6. \u5220\u9664\u540e\u7f00 $\\texttt {bc}$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qso67xzd.png)\n\n### 7. \u5220\u9664\u540e\u7f00 $\\texttt {c}$\uff1a\n\u5220\u7a7a\u4e86\uff0c\u5c31\u4e0d\u653e\u56fe\u7247\u4e86\u3002\n\n------------\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u540e\u7f00\u5e73\u8861\u6811\u53ef\u4ee5\u8d44\u74f7\u52a8\u6001\u63d2\u5165\u4e00\u4e2a\u540e\u7f00\u548c\u5220\u9664\u4e00\u4e2a\u540e\u7f00\u3002\n\n\u6bd5\u7adf\u662f\u63d2\u5165\u548c\u5220\u9664\u4e00\u4e2a\u540e\u7f00\uff0c\u6240\u4ee5\u540e\u7f00\u5e73\u8861\u6811\u662f\u8d44\u74f7\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32**\u524d**\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u8fd9\u4e00\u70b9\u4e0e\u540e\u7f00\u81ea\u52a8\u59ec\u4e0d\u540c\u3002\u540e\u7f00\u81ea\u52a8\u59ec\u662f\u5728\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u540e\u7f00\u5e73\u8861\u6811\u662f\u5728\u524d\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u3002\u4e24\u8005\u8981\u6ce8\u610f\u533a\u5206\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u5728\u524d\u9762\u5462\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u662f\u5728\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u7684\u8bdd\uff0c\u90a3\u4e48\u539f\u6709\u7684\u90a3\u4e9b\u540e\u7f00\u7684\u5173\u7cfb\u5c31\u5168\u90e8\u6253\u4e71\u4e86\u3002\u8bbe\u539f\u6765\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a $n$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u628a\u539f\u6765\u7684 $n$ \u4e2a\u540e\u7f00\u5168\u90e8\u5220\u9664\uff0c\u518d\u63d2\u5165\u65b0\u7684 $n+1$ \u4e2a\u540e\u7f00\u3002\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540c\u7406\u3002\u5982\u679c\u5728\u524d\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u7684\u8bdd\uff0c\u5047\u8bbe\u539f\u6709\u5b57\u7b26\u4e32\u4e3a $S$\uff0c\u65b0\u63d2\u5165\u7684\u5b57\u7b26\u4e3a $x$\uff0c\u90a3\u4e48\u539f\u6709\u7684\u540e\u7f00\u5176\u5b9e\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u5176\u5b9e\u53ea\u662f\u65b0\u63d2\u5165\u4e86\u4e00\u4e2a\u540e\u7f00 $xS$\u3002\u5220\u9664\u4e5f\u662f\u540c\u7406\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u540e\u7f00\u5e73\u8861\u6811\u5e76\u4e0d\u96be\uff0c\u5bb9\u6613\u7406\u89e3\u3002\u5728\u6bd4\u8d5b\u4e0a\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n------------\n\n## 4. \u4ee3\u7801\u5b9e\u73b0\n\n\u601d\u8def\u90fd\u5f88\u597d\u7406\u89e3\uff0c\u90a3\u4ee3\u7801\u5462\uff1f\n\n\u5176\u5b9e\u4e5f\u4e0d\u96be\u3002\n\n\u6211\u4eec\u5148\u628a\u666e\u901a\u5e73\u8861\u6811\u7684\u63d2\u5165\u7ed9\u653e\u4e0a\u6765\uff1a\n\n```cpp\nvoid ins(int &now,int val){\n\tif(!now){\n\t\tnow=++tot;\n\t\ttr[now].size=tr[now].cnt=1;\n\t\ttr[now].val=val;\n\t\ttr[now].key=rand();\n\t\treturn ;\n\t}\n\tif(tr[now].val==val){\n\t\ttr[now].cnt++;\n\t\tpushup(now);\n\t}\n\telse if(tr[now].val>val){\n\t\tins(tr[now].lson,val);\n\t\tpushup(now);\n\t\tif(tr[now].key<tr[tr[now].lson].key)\n\t\t\tzig(now);\n\t}\n\telse{\n\t\tins(tr[now].rson,val);\n\t\tpushup(now);\n\t\tif(tr[now].key<tr[tr[now].rson].key)\n\t\t\tzag(now);\n\t}\n}\n```\n\n\u6211\u4eec\u628a\u5b83\u9b54\u6539\u6210\u540e\u7f00\u5e73\u8861\u6811\u2026\n\n\u6b38\uff0c$val$ \u662f\u4ec0\u4e48\uff0c\u540e\u7f00\u6ca1\u6709\u8d4b\u6743\u503c\u554a\u3002\n\n\u90a3\u53c8\u600e\u4e48\u6837\uff1f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8981\u63d2\u5165\u7684\u540e\u7f00\u4e0e\u8282\u70b9\u6240\u4ee3\u8868\u7684\u540e\u7f00\u8fdb\u884c\u6bd4\u8f83\u4e0d\u5c31\u884c\u5566\uff1f\n\n\u90a3\u4e0d\u53ef\u80fd\u4e00\u4e2a\u8282\u70b9\u4e0a\u5c31\u653e\u4e00\u4e2a\u5b57\u7b26\u4e32\u554a\u3002\u8fd9\u8fd8\u4e0d\u4f1a\u7206\u7a7a\u95f4\uff1f\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u60f3\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u8bbe\u4e3a\u540e\u7f00\u5f00\u59cb\u7684\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\u8282\u70b9 $1$ \u5c31\u4ee3\u8868\u4ece $1$ \u5f00\u59cb\u7684\u540e\u7f00\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a\n\n```cpp\nvoid ins(int &now,int pos){//now\u4e3a\u73b0\u5728\u8bbf\u95ee\u5230\u7684\u7f16\u53f7\uff0cpos\u4e3a\u63d2\u5165\u540e\u7f00\u7684\u5f00\u59cb\u8282\u70b9\n\tif(!now){//\u65b0\u5efa\u8282\u70b9\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;//\u8282\u70b9\u7f16\u53f7\u4e3a\u540e\u7f00\u5f00\u59cb\u7684\u4f4d\u7f6e\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){//\u6bd4\u8f83\uff0c\u5982\u679c\u5927\u4e8e0\u5219now\u4ee3\u8868\u7684\u540e\u7f00\u7684\u5b57\u5178\u5e8f\u5927\u4e8epos\u4ee3\u8868\u7684\u540e\u7f00\u7684\u5b57\u5178\u5e8f\n\t\tins(trp[now].lson,pos);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].lson].key)\n\t\t\tzig(now);\n\t}\n\telse if(comp(now,pos)<0){//\u5c0f\u4e8e0\u5219now\u4ee3\u8868\u7684\u540e\u7f00\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8epos\u4ee3\u8868\u7684\u540e\u7f00\u7684\u5b57\u5178\u5e8f\n\t\tins(trp[now].rson,pos);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].rson].key)\n\t\t\tzag(now);\n\t}\n\telse{//\u7b49\u4e8e0\uff0c\u5b57\u5178\u5e8f\u76f8\u7b49\uff0c\u540e\u7f00\u76f8\u540c\uff08\u5176\u5b9e\u4e0d\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff09\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\n```\n\n------------\n\n~~\u4e0d\u9519\u3002\u90a3\u4e48\u540e\u7f00\u5e73\u8861\u6811\u7684\u63d2\u5165\u64cd\u4f5c\u5c31\u89e3\u51b3\u5566\u3002~~\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5462\uff1a$\\texttt {comp}$ \u51fd\u6570\u600e\u4e48\u5199\uff1f\n\n### 1. \u66b4\u529b\u6bd4\u8f83\uff1a\n\n\u6700\u7b80\u5355\u7684\u4e00\u79cd\u65b9\u6cd5\uff1a\u76f4\u63a5\u66b4\u529b\u904d\u5386\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u5176\u8fdb\u884c\u6bd4\u8f83\uff1a\n\n```cpp\ninline int comp(int x,int y){\n\tfor(int i=x,j=y;s[i]||s[j];i++,j++)\n\t\tif(s[i]>s[j])\n\t\t\treturn 1;\n\t\telse if(s[i]<s[j])\n\t\t\treturn -1;\n\treturn 0;\n}\n```\n\n\u4e00\u6b21\u6bd4\u8f83\u5c31\u9700\u8981 $O(n)$ \u7684\u65f6\u590d\u3002\u4e00\u6b21\u63d2\u5165\u5c31\u8981 $O(n \\log n)$ \u7684\u65f6\u590d\u3002\u76f4\u63a5\u539f\u5730\u5347\u5929\u3002\n\n### 2. $\\texttt {Hash}$ + \u4e8c\u5206\uff1a\n\n\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u4e8c\u5206\u627e\u51fa\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff08$\\texttt {LCP}$\uff09\u3002\u56e0\u4e3a\u516c\u5171\u524d\u7f00\u7684\u90e8\u5206\u4e00\u5b9a\u4e00\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u6bd4\u8f83\u540e\u4e00\u4f4d\u5c31\u53ef\u4ee5\u6bd4\u8f83\u51fa\u6765\u5566\u3002\n\n\u66f4\u7ec6\u81f4\u7684\u601d\u8def\u4e0e\u4ee3\u7801\u53ef\u4ee5\u770b\u8fd9\u7bc7\uff1a[\u6d1b\u8c37\u65e5\u62a5#315](https://www.luogu.com.cn/blog/Flying2018/qian-tan-zi-fu-chuan-hash)\u3002\n\n\u6211\u5c31\u4e0d\u653e\u4ee3\u7801\u5566\u3002\n\n\u4e00\u6b21\u6bd4\u8f83\u9700\u8981 $O(\\log n)$ \u7684\u65f6\u590d\u3002\u4e00\u6b21\u63d2\u5165\u8981 $O(n \\log^2n)$ \u7684\u65f6\u590d\u3002\u4f46\u8fd8\u662f\u4e0d\u591f\u4f18\u79c0\u3002\n\n### 3. \u6b63\u89e3\uff1a\n\n\u6211\u4eec\u60f3\u8981\u7684\u662f\u5355\u6b21\u6bd4\u8f83 $O(1)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u6211\u4eec\u8981\u5bf9\u63d2\u5165\u7684\u540e\u7f00\u8fdb\u884c\u601d\u8003\uff1a\n\n\u6211\u4eec\u5728\u5b57\u7b26\u4e32 $S$ \u524d\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 $x$\uff0c\u5c31\u76f8\u7b49\u4e8e\u63d2\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u540e\u7f00 $xS$\u3002\u5176\u4e2d\u540e\u7f00 $S$ \u5df2\u7ecf\u5728\u5e73\u8861\u6811\u4e2d\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31\u662f\u8bf4\u540e\u7f00 $S$ \u5728\u5e73\u8861\u6811\u4e2d\u7684\u4f4d\u7f6e\u5176\u5b9e\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u5927\u5c0f\u5173\u7cfb\u4e5f\u5df2\u7ecf\u786e\u5b9a\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5462\uff1f\n\n\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u865a\u62df\u6743\u503c $val$\uff0c\u7528\u6765\u786e\u5b9a\u5b83\u4eec\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u6211\u4eec\u600e\u4e48\u5224\u65ad\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u5148\u5224\u65ad\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002\u5982\u679c\u4e0d\u540c\u5c31\u5df2\u7ecf\u77e5\u9053\u5927\u5c0f\u5173\u7cfb\u4e86\uff1b\u5982\u679c\u76f8\u540c\uff0c\u90a3\u4e48\u53bb\u6389\u9996\u5b57\u7b26\u4e4b\u540e\u7684\u540e\u7f00\u5df2\u7ecf\u5728\u5e73\u8861\u6811\u4e2d\u51fa\u73b0\u8fc7\u4e86\u3002\u6211\u4eec\u5224\u65ad\u5b83\u4eec $val$ \u7684\u5173\u7cfb\u5c31\u53ef\u4ee5\u77e5\u9053\u4e86\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u540e\u7f00\u662f**\u6709\u987a\u5e8f\u7684**\u3002\u6211\u4eec\u5e94\u8be5\u4ece\u540e\u5f80\u524d\u63d2\u5165\u5b57\u7b26\uff0c\u5c31\u76f8\u5f53\u4e8e\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u65b0\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u524d\u3002\n\n~~\u5999\u554a\uff01\u5999\u6781\u4e86\uff01~~\n\n\u8fb9\u770b\u4ee3\u7801\u8fb9\u7406\u89e3\u4e00\u4e0b\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[x+1].val>trp[y+1].val)//\u5148\u770b\u9996\u5b57\u6bcd\uff0c\u9996\u5b57\u6bcd\u76f8\u540c\u518d\u770b\u53bb\u6389\u9996\u5b57\u6bcd\u540e\u7684\u6743\u503c\u5927\u5c0f\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[x+1].val==trp[y+1].val)\n\t\treturn 0;\n\telse return -1;\n}\n```\n\n------------\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u6210\u4e86\u600e\u4e48\u8bbe\u7f6e $val$ \u4e86\u3002\n\n### 1. \u524d\u9a71\u540e\u7ee7\u53d6\u4e2d\u503c\uff1a\n\n\u8fd9\u4e2a\u5e94\u8be5\u597d\u7406\u89e3\u3002\u5c31\u662f\u627e\u5230\u8981\u63d2\u5165\u7684\u503c\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u628a\u5b83\u4eec\u7684\u503c\u76f8\u52a0\u540e\u9664\u4ee5 $2$ \u5f97\u5230\u503c\u3002\n\n\u56e0\u4e3a\u662f\u5728\u5916\u9762\u627e\u524d\u9a71\u540e\u7ee7\uff08\u5c31\u662f\u5728 $\\texttt {main}$ \u51fd\u6570\u91cc\uff09\uff0c\u6240\u4ee5\u5355\u6b21\u63d2\u5165\u65f6\u590d\u4ecd\u4e3a $O(\\log n)$\uff0c\u4f46\u662f\u4f1a\u7206\u7cbe\u5ea6\u3002\uff08\u5c31\u662f\u5982\u679c\u63d2\u5165\u7684\u6bcf\u4e00\u4e2a\u540e\u7f00\u90fd\u6bd4\u4e4b\u524d\u7684\u540e\u7f00\u5927\uff0c\u90a3\u4e48\u5c31\u4f1a\u5448\u73b0\u201c\u4e00\u8fb9\u504f\u201d\u7684\u8d8b\u52bf\uff09\n\n### 2. \u61d2\u6807\u8bb0\uff1a\n\n\u53ef\u4ee5\u7528 $\\texttt {FHQ Treap}$ \u6216\u8005 $\\texttt {Splay}$ \u7b49\u53ef\u4ee5\u652f\u6301\u533a\u95f4\u64cd\u4f5c\u7684\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u3002\n\n\u4ee5 $\\texttt {FHQ Treap}$ \u4e3a\u4f8b\uff0c\u6211\u4eec\u628a $S$ \u63d2\u5165\u5e73\u8861\u6811\u540e\uff0c\u5bf9\u5176\u8fdb\u884c $\\texttt {Split}$\uff0c\u628a\u5b57\u5178\u5e8f\u5c0f\u4e8e\u7b49\u4e8e $S$ \u7684\u8282\u70b9\u5206\u88c2\u5230 $x$ \u4e0a\uff0c\u5927\u4e8e $S$ \u7684\u5206\u88c2\u5230 $y$ \u4e0a\u3002\u6211\u4eec\u628a $y$ \u4e0a\u7684\u8282\u70b9\u6253\u4e00\u4e2a\u61d2\u6807\u8bb0\uff0c\u8868\u793a $y$ \u4e0a\u7684\u8282\u70b9\u7684 $val$ \u503c\u5168\u90e8 $+1$\u3002\u800c $S$ \u7684 $val$ \u5c31\u662f $x$ \u4e2d\u6700\u5927\u7684\u503c $+1$\u3002\n\n\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u56e0\u4e3a\u5728 $\\texttt {comp}$ \u51fd\u6570\u4e2d\u4f1a\u8df3\u8dc3\u8bbf\u95ee\uff08\u5728\u51fd\u6570\u4e2d\u4f1a\u8bbf\u95ee $x-1$ \u53f7\u8282\u70b9\u548c $y-1$ \u53f7\u8282\u70b9\uff09\uff0c\u800c\u8fd9\u4e9b\u8282\u70b9\u4e0a\u65b9\u7684\u6807\u8bb0\u53ef\u80fd\u5e76\u6ca1\u6709\u4e0b\u653e\u5b8c\u5168\uff0c\u6240\u4ee5\u8981\u628a\u4ece\u6839\u5230 $x-1$ \u548c $y-1$ \u7684\u8def\u5f84\u4e0a\u7684\u61d2\u6807\u8bb0\u5168\u90e8\u4e0b\u653e\u3002\u4e00\u6b21\u4e0b\u653e\u9700\u8981 $O(\\log n)$ \u7684\u65f6\u95f4\uff0c\u6bcf\u4e00\u6b21 $\\texttt {comp}$ \u90fd\u9700\u8981\u4e0b\u653e\uff0c\u5355\u6b21\u63d2\u5165\u7684\u65f6\u590d\u4e3a $O(\\log^2n)$\u3002\n\n\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u907f\u514d\u4e86\u7206\u7cbe\u5ea6\uff0c\u4f46\u662f\u65f6\u590d\u53c8\u56de\u5230\u4e86 $\\texttt {Hash}$ + \u4e8c\u5206\u65f6\u7684 $O(\\log^2n)$\uff0c\u5e76\u4e0d\u591f\u4f18\u79c0\u3002\n\n### 3. \u6b63\u89e3\uff1a\n\n\u6211\u4eec\u5eb7\u5eb7\u89e3\u6cd5 $1$\uff0c\u628a\u8fd9\u4e9b\u6743\u503c\u62ff\u51fa\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u8fd9\u4e00\u4e9b\u4e1c\u897f\u6784\u6210\u4e86\u4e00\u68f5**\u6781\u4e0d\u5e73\u8861**\u7684\u5e73\u8861\u6811\u3002\n\n~~\u6211\u4eec\u662f\u8981\u518d\u5199\u4e00\u68f5\u5e73\u8861\u6811\u5417\uff1f~~\n\n\u5f53\u7136\u4e0d\u662f\u3002\u6211\u4eec\u73b0\u5728\u4e0d\u662f\u5df2\u7ecf\u6709\u4e86\u4e00\u68f5\u5e73\u8861\u6811\u4e86\u5417\uff1f\u6211\u4eec\u53ea\u8981\u628a\u8fd9\u68f5\u5e73\u8861\u6811**\u597d\u597d\u5229\u7528**\u3002\n\n\u600e\u4e48\u5229\u7528\u5462\uff1f\n\n\u6211\u4eec\u50cf\u7ebf\u6bb5\u6811\u4e00\u6837\u4f20\u4e24\u4e2a\u53c2\u6570 $l$ \u548c $r$\uff0c\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u5c31\u662f $(l+r) / 2$\u3002\u8d70\u5411\u5de6\u513f\u5b50\u65f6\u5c31\u662f $l$ \u548c $(l+r) / 2-1$\uff0c\u8d70\u5411\u53f3\u513f\u5b50\u5c31\u662f $(l+r) / 2 + 1$ \u548c $r$\u3002\n\n\u90a3\u4e48\u6bcf\u4e00\u6b21\u65cb\u8f6c\u4e0d\u5c31\u4f1a\u628a\u4e00\u90e8\u5206\u70b9\u7684\u6743\u503c\u7ed9\u6539\u53d8\u4e86\u5417\uff1f\n\n\u6240\u4ee5\u524d\u7f6e\u829d\u58eb\u5c31\u662f\u91cd\u91cf\u5e73\u8861\u6811\u554a\u3002\n\n\u6211\u4eec\u5eb7\u5eb7\u91cd\u91cf\u5e73\u8861\u6811\u7684\u5b9a\u4e49\uff1a\n\n> \u5728\u63d2\u5165\u6216\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\uff0c\u4e3a\u4e86\u4fdd\u6301\u6811\u7684\u5e73\u8861\u800c\u91cd\u6784\u7684\u5b50\u6811\u5927\u5c0f\u4e3a\u5747\u644a\u6216\u671f\u671b $O(\\log n)$\u3002\n\n\u54e6\u8c41\uff1f\uff01\n\n\u5c31\u662f\u6bcf\u4e00\u6b21\u63d2\u5165\uff0c\u9700\u8981 $O(\\log n)$ \u65f6\u95f4\u6765\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\uff0c\u518d\u7528 $O(\\log n)$ \u65f6\u95f4\u6765\u91cd\u6784\u5b50\u6811\u3002\u65f6\u590d\u4e3a $O(2 \\log n)$\uff0c\u7701\u53bb\u5e38\u6570\u4e3a $O(\\log n)$\u3002\u76ee\u7684\u8fbe\u5230\uff01\n\n\u6ce8\u610f $l$ \u548c $r$ \u4e0d\u5f00 ```long long``` \u89c1\u7956\u5b97\u3002\n\n#### Upd\uff1a\u6839\u636e[Irelia\u10e6](https://www.luogu.com.cn/user/126376)\u5927\u4f6c\u6240\u8bf4\uff0c\u6709\u53ef\u80fd rp \u4e0d\u597d\u4f1a\u5bfc\u81f4 ```long long``` \u7206\u7cbe\u5ea6\uff0c\u6240\u4ee5\u4fdd\u9669\u8d77\u89c1\u6700\u597d\u4f7f\u7528 ```double``` \u7c7b\u578b\u3002\n\n\u6211\u4eec\u5eb7\u5eb7\u4ee3\u7801\uff1a\n\n```cpp\nvoid get_val(int pos,long long l,long long r){//\u91cd\u6784\n\tif(!pos)//\u5224\u7a7a\n\t\treturn ;\n\ttrp[pos].val=l+r>>1;\n\tget_val(trp[pos].lson,l,trp[pos].val-1);\n\tget_val(trp[pos].rson,trp[pos].val+1,r);\n}\nvoid zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\n//\u5de6\u53f3\u65cb\u3002\u4e0d\u60f3\u4f20l\u548cr\u7684\u53ef\u4ee5\u5728\u5916\u9762get_val\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].val=l+r>>1;\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].lson].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse if(comp(now,pos)<0){\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].rson].key)\n\t\t\tzag(now,l,r);\n\t}\n\telse{\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\n```\n\n------------\n\n\u5220\u9664\u64cd\u4f5c\u4e5f\u662f\u540c\u7406\u3002\u53ea\u4e0d\u8fc7\u6211\u4e0d\u60f3\u5199\u90a3\u4e48\u591a\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u6240\u4ee5\u5c31\u6362\u6210\u4e86 $\\texttt {FHQ Treap}$ \u7684\u5408\u5e76\u5de6\u53f3\u5b50\u6811\u3002\u56e0\u4e3a $\\texttt {FHQ Treap}$ \u5408\u5e76\u540e\u671f\u671b\u6811\u9ad8\u4ecd\u4e3a $O(\\log n)$\uff0c\u6240\u4ee5\u5408\u5e76\u540e\u6811\u9ad8\u4e0d\u53d8\u3002\u5408\u5e76\u5de6\u53f3\u5b50\u6811\u540e\u518d\u91cd\u6784\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint merge(int x,int y){//\u5408\u5e76\n\tif(!x||!y)\n\t\treturn x+y;\n\tif(trp[x].key<trp[y].key){\n\t\ttrp[x].rson=merge(trp[x].rson,y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse{\n\t\ttrp[y].lson=merge(x,trp[y].lson);\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\nvoid del(int &now,int pos,long long l,long long r){\n\tif(!now)\n\t\treturn ;\n\tif(comp(now,pos)==0){\n\t\tif(trp[now].cnt>1)\n\t\t\ttrp[now].cnt--;\n\t\telse{\n\t\t\tnow=merge(trp[now].lson,trp[now].rson);//\u5408\u5e76\u5de6\u53f3\u5b50\u6811\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u8282\u70b9\n\t\t\tget_val(now,l,r);//\u91cd\u6784\n\t\t}\n\t\tpushup(now);\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0)\n\t\tdel(trp[now].lson,pos,l,trp[now].val-1);\n\telse\n\t\tdel(trp[now].rson,pos,trp[now].val+1,r);\n\tpushup(now);\n}\n```\n\n\u81f3\u6b64\uff0c\u540e\u7f00\u5e73\u8861\u6811\u7684\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u5c31\u5df2\u7ecf\u5168\u90e8\u7ed3\u675f\u4e86\u3002\n\n------------\n\n\u600e\u4e48\u6c42\u51fa\u540e\u7f00\u6570\u7ec4\u7684\u90a3\u4e9b\u4e1c\u897f\u5462\uff1f\n\n\u540e\u7f00\u6570\u7ec4\u6709\u4e09\u4e2a\u6570\u7ec4\uff1a$sa$\u3001$rk$ \u548c $height$\u3002$sa_i$ \u8868\u793a\u6392\u540d\u4e3a $i$ \u7684\u540e\u7f00\u8d77\u70b9\uff0c$rk_i$ \u8868\u793a\u540e\u7f00\u8d77\u70b9\u4e3a $i$ \u7684\u6392\u540d\uff0c$height_i$ \u8868\u793a\u6392\u540d\u4e3a $i-1$ \u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3a $i$ \u7684\u540e\u7f00\u7684 $\\texttt {LCP}$ \u957f\u5ea6\u3002\n\n\u4e00\u822c\u540e\u7f00\u6570\u7ec4\u90fd\u662f\u9759\u6001\u95ee\u9898\u3002\u6211\u4eec\u628a\u540e\u7f00\u5e73\u8861\u6811\u5efa\u7acb\u4e4b\u540e\uff0c\u4e00\u904d $dfs$ \u5c31\u53ef\u4ee5\u6c42\u51fa $sa$ \u548c $rk$ \u6570\u7ec4\u5566\u3002\u7136\u540e $height$ \u6570\u7ec4\u5c31\u968f\u4f60\u662f\u7528 $O(n \\log n)$ \u7684 $\\texttt {Hash}$ \u8fd8\u662f $O(n)$ \u7684\u904d\u5386\u4e86\u3002\n\n\u6c42 $sa$ \u548c $rk$ \u7684 $dfs$ \u4ee3\u7801\uff1a\n\n```cpp\nint cnt;\ninline void dfs(int now){\n\tif(!now)\n\t\treturn ;\n\tdfs(trp[now].lson);\n\tsa[++cnt]=now;\n\trk[now]=cnt;\n\tdfs(trp[now].rson);\n}\n```\n\n------------\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u540e\u7f00\u5e73\u8861\u6811\u5355\u6b21\u63d2\u5165\u9700\u8981 $O(\\log n)$ \u7684\u65f6\u95f4\uff0c\u6709 $n$ \u4e2a\u540e\u7f00\uff0c\u603b\u5171\u9700\u8981 $O(n \\log n)$ \u7684\u65f6\u95f4\u3002\n\n\u800c\u540e\u7f00\u5e73\u8861\u6811\u6700\u591a\u6709 $n$ \u4e2a\u540e\u7f00\uff0c\u90a3\u4e48\u5176\u5b9e $\\texttt {Treap}$ \u5c31\u53ea\u6709 $n$ \u4e2a\u8282\u70b9\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n------------\n\n## 5. \u4e0e\u5176\u4ed6\u540e\u7f00\u6570\u636e\u7ed3\u6784\u7684\u6bd4\u8f83\n\n\u4f17\u6240\u5468\u77e5\uff0c\u540e\u7f00\u6570\u636e\u7ed3\u6784\u6709\u4e24\u5927\u6bd2\u7624\uff1a\u4e00\u662f\u540e\u7f00\u6570\u7ec4\uff08$\\texttt {SA}$\uff09\uff0c\u53e6\u4e00\u4e2a\u662f\u540e\u7f00\u81ea\u52a8\u59ec\uff08$\\texttt{SAM}$\uff09\u3002\u540e\u7f00\u6811\u6211\u4e0d\u4f1a\uff0c\u4f46\u662f\u4e2a\u4eba\u611f\u89c9\u5e94\u8be5\u548c\u540e\u7f00\u81ea\u52a8\u59ec\u5dee\u4e0d\u591a\uff08\u6bd5\u7adf\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b97\u6cd5\u89e3\u51b3\uff09\u3002\n\n\u540e\u7f00\u5e73\u8861\u6811\u5728\u6982\u5ff5\u4e0a\u5c31\u662f $\\texttt {SA}$ + \u5e73\u8861\u6811\u3002\u6240\u4ee5\u62e5\u6709\u6dfb\u52a0\u5b57\u7b26\u7684\u64cd\u4f5c\u3002\u8fd9\u662f $\\texttt {SA}$ \u6240\u6ca1\u6709\u7684\u3002\u56e0\u4e3a\u8fd9\u79cd\u6982\u5ff5\uff0c\u6240\u4ee5\u5b83\u6bd4 $\\texttt {SAM}$ \u66f4\u597d\u7406\u89e3\u3002\n\n\u540e\u7f00\u5e73\u8861\u6811\u7684\u4ee3\u7801\u957f\uff0c\u4f46\u662f\u601d\u8def\u6e05\u6670\uff0c\u56e0\u6b64\u4e0d\u5bb9\u6613\u5199\u9519\u3002\n\n\u540e\u7f00\u81ea\u52a8\u59ec\u53ef\u4ee5\u8d44\u74f7\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u540e\u7f00\u5e73\u8861\u6811\u4e0d\u4ec5\u53ef\u4ee5\u8d44\u74f7\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd8\u53ef\u4ee5\u8d44\u74f7\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002\u8fd9\u662f\u540e\u7f00\u81ea\u52a8\u59ec\u6240\u6ca1\u6709\u7684\u3002\n\n\u6211\u4eec\u5199 $\\texttt {SAM}$ \u90fd\u9700\u8981\u4e00\u4e2a $ch$ \u6570\u7ec4\u6765\u8868\u793a\u4e00\u79cd\u8f6c\u79fb\u8fb9\u3002\u8fd9\u4e2a $ch$ \u6570\u7ec4\u662f\u4f9d\u8d56\u4e8e\u5b57\u7b26\u96c6\u5927\u5c0f\u7684\u3002\u800c\u540e\u7f00\u5e73\u8861\u6811\u5219\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e00\u70b9\u3002\n\n------------\n\n\n## 6. \u4f8b\u9898\n\n[P3809](https://www.luogu.com.cn/problem/P3809)\u3002\n\n\u540e\u7f00\u6570\u7ec4\u6a21\u677f\u9898\u3002\n\n\u5c31\u76f4\u63a5\u5efa\u51fa\u540e\u7f00\u5e73\u8861\u6811\u540e $dfs$ \u5373\u53ef\u3002\n\n\u65f6\u590d $O(n \\log n)$\u3002\n\n\u8bb0\u5f97\u5438\u5438\u6c27\u3002\u5982\u679c\u4e0d\u884c\u5c31\u665a\u4e0a\u518d\u4ea4\u3002\n\n```cpp\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\nusing namespace std;\nconst long long INF=1e18;\nconst int N=1e6+10;\nstruct treap{\n\tlong long val;\n\tint lson,rson;\n\tint size;\n\tint key;\n\tint cnt;\n};\ntreap trp[N];\nchar s[N];\nint root;\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[x+1].val>trp[y+1].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[x+1].val==trp[y+1].val)\n\t\treturn 0;\n\telse\n\t\treturn -1;\n}\ninline void pushup(int pos){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].size=trp[lson].size+trp[rson].size+trp[pos].cnt;\n}\ninline void get_val(int now,long long l,long long r){\n\tif(!now)\n\t\treturn ;\n\ttrp[now].val=l+r>>1;\n\tget_val(trp[now].lson,l,trp[now].val-1);\n\tget_val(trp[now].rson,trp[now].val+1,r);\n}\ninline void zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\ninline void zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].val=l+r>>1;\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[trp[now].lson].key<trp[now].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse if(comp(now,pos)<0){\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[trp[now].rson].key<trp[now].key)\n\t\t\tzag(now,l,r);\n\t}\n\telse{\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\ninline void dfs(int now){\n\tif(!now)\n\t\treturn ;\n\tdfs(trp[now].lson);\n\tprintf(\"%d \",now);\n\tdfs(trp[now].rson);\n}\nint main(){\n\tscanf(\"%s\",s+1);\n\tint l=strlen(s+1);\n\tfor(register int i=l;i>=1;i--)\n\t\tins(root,i,1,INF);//\u4ece\u540e\u5411\u524d\n\tdfs(root);\n}\n```\n\n\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u7206\u5207\u5404\u79cd\u540e\u7f00\u6570\u7ec4\u9898\u76ee\u4e86\u3002\n\n------------\n\n[P5353](https://www.luogu.com.cn/problem/P5353)\u3002\n\n\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3002\u542c\u8bf4\u540e\u7f00\u6570\u7ec4\u5f88\u96be\u641e\u8fd9\u79cd\u4e1c\u897f\uff0c\u4f46\u662f\u540e\u7f00\u5e73\u8861\u6811\u53ef\u4ee5\u8f7b\u6613\u89e3\u51b3\u3002\n\n\u5176\u4ed6\u7684\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u533a\u522b\u5728\u4e8e $\\texttt {comp}$ \u51fd\u6570\u4e0a\uff1a\n\n```cpp\ninline int comp(int x,int y){\n    if(s[x]>s[y]||s[x]==s[y]&&trp[x+1].val>trp[y+1].val)\n        return 1;\n    else if(s[x]==s[y]&&trp[x+1].val==trp[y+1].val)\n        return 0;\n    else return -1;\n}\n```\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u5b57\u7b26\u76f8\u540c\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u6bd4 $x+1$ \u4e0e $y+1$ \u7684\u6743\u503c\uff0c\u800c\u662f\u5e94\u8be5\u6bd4 $fa_x$ \u548c $fa_y$ \u7684\u6743\u503c\uff0c\u800c\u5982\u679c $fa_x$ \u4e0e $fa_y$ \u6743\u503c\u76f8\u540c\uff0c\u6211\u4eec\u518d\u6bd4 $x$ \u548c $y$ \u7684**\u6570\u5b57\u5927\u5c0f**\u3002\n\n```cpp\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[fa[x]].val>trp[fa[y]].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[fa[x]].val==trp[fa[y]].val&&x>y)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[fa[x]].val==trp[fa[y]].val&&x==y)\n\t\treturn 0;\n\telse\n\t\treturn -1;\n}\n```\n\n\u5269\u4e0b\u7684\u5c31\u662f\u5957\u6a21\u677f\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nconst long long INF=1e18;\nconst int N=1e6+10;\nstruct treap{\n\tlong long val;\n\tint lson,rson;\n\tint size;\n\tint key;\n\tint cnt;\n};\ntreap trp[N];\nchar s[N];\nint fa[N];\nint root;\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[fa[x]].val>trp[fa[y]].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[fa[x]].val==trp[fa[y]].val&&x>y)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[fa[x]].val==trp[fa[y]].val&&x==y)\n\t\treturn 0;\n\telse\n\t\treturn -1;\n}\ninline void pushup(int pos){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].size=trp[lson].size+trp[rson].size+trp[pos].cnt;\n}\ninline void get_val(int now,long long l,long long r){\n\tif(!now)\n\t\treturn ;\n\ttrp[now].val=l+r>>1;\n\tget_val(trp[now].lson,l,trp[now].val-1);\n\tget_val(trp[now].rson,trp[now].val+1,r);\n}\nvoid zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].val=l+r>>1;\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].lson].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse if(comp(now,pos)<0){\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].rson].key)\n\t\t\tzag(now,l,r);\n\t}\n\telse{\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\nvoid dfs(int now){\n\tif(!now)\n\t\treturn ;\n\tdfs(trp[now].lson);\n\tcout<<now<<' ';\n\tdfs(trp[now].rson);\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=2;i<=n;i++)\n\t\tcin>>fa[i];\n\tcin>>s+1;\n\tfor(int i=1;i<=n;i++)\n\t\tins(root,i,1,INF);\n\tdfs(root);\n}\n```\n\n------------\n\n[P5346](https://www.luogu.com.cn/problem/P5346)\u3002\n\n~~\u6211\u4e0d\u4f1a\u5fd8\u8bb0 $\\sout {\\texttt {AC}}$ \u8fd9\u9898\u65f6\u7684\u5feb\u4e50\uff0c\u8fd9\u662f\u6211\u653e\u4e86\u597d\u4e45\u7684\u4efb\u52a1\u5217\u8868\u4e0a\u7684\u9898\u76ee\u554a\u3002\uff08\u56e0\u4e3a\u67ef\u5357\uff09~~\n\n\u5176\u5b9e\u4f1a\u4e86 [P5353](https://www.luogu.com.cn/problem/P5353) \u540e\u6211\u624d\u53d1\u73b0\u8fd9\u4e2a\u5c0f\u83dc\u4e00\u789f\u3002\n\n\u5148\u628a\u540e\u7f00\u6392\u5e8f\u7ed3\u679c\u7b97\u51fa\u6765\uff0c\u64cd\u4f5c $1$ \u53ef\u4ee5\u9884\u5904\u7406\uff0c$O(1)$ \u89e3\u51b3\uff0c\u5269\u4e0b\u4e24\u4e2a\u64cd\u4f5c\u5747\u4e3a\u533a\u95f4\u7b2c $k$ \u5c0f\u7684\u95ee\u9898\uff0c\u5957\u7528\u4e3b\u5e2d\u6811\u5373\u53ef\u3002\u5177\u4f53\u6765\u8bb2\u4f7f\u7528\u4e24\u68f5\u4e3b\u5e2d\u6811\uff0c\u4e00\u68f5\u7ef4\u62a4\u539f\u6811\u4e0a\u7684\u94fe\uff0c\u53e6\u4e00\u68f5\u7ef4\u62a4\u539f\u6811\u7684 $dfs$ \u5e8f\u3002\u56e0\u4e3a\u5728\u4e00\u68f5\u5b50\u6811\u4e0a\u7684 $dfs$ \u5e8f\u5fc5\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u6240\u7b2c\u4e8c\u68f5\u5176\u5b9e\u4e5f\u662f\u533a\u95f4\u7b2c $k$ \u5927\u3002\n\n```cpp\n#include<cstdlib>\n#include<cstdio>\nconst long long INF=1e18;\nconst int N=1e6+10;\nstruct segment_tree{\n\tstruct hjt_node{\n\t\tint lson,rson;\n\t\tint size;\n\t};\n\thjt_node hjt[40*N];\n\tint root[N];\n\tint tot;\n\tsegment_tree(){\n\t\ttot=1;\n\t}\n\tinline int copynode(int pos){\n\t\thjt[++tot]=hjt[pos];\n\t\treturn tot;\n\t}\n\tvoid init(int now,int l,int r){\n\t\tif(l==r)\n\t\t\treturn ;\n\t\thjt[now].lson=++tot;\n\t\thjt[now].rson=++tot;\n\t\tint mid=l+r>>1;\n\t\tinit(hjt[now].lson,l,mid);\n\t\tinit(hjt[now].rson,mid+1,r);\n\t}\n\tint ins(int last,int pos,int l,int r){\n\t\tint now=copynode(last);\n\t\thjt[now].size++;\n\t\tif(l==r)\n\t\t\treturn now;\n\t\tint mid=l+r>>1;\n\t\tif(pos<=mid)\n\t\t\thjt[now].lson=ins(hjt[now].lson,pos,l,mid);\n\t\telse\n\t\t\thjt[now].rson=ins(hjt[now].rson,pos,mid+1,r);\n\t\treturn now;\n\t}\n\tint query(int last,int now,int key,int l,int r){\n\t\tif(l==r)\n\t\t\treturn l;\n\t\tint size=hjt[hjt[now].lson].size-hjt[hjt[last].lson].size;\n\t\tint mid=l+r>>1;\n\t\tif(key<=size)\n\t\t\treturn query(hjt[last].lson,hjt[now].lson,key,l,mid);\n\t\telse\n\t\t\treturn query(hjt[last].rson,hjt[now].rson,key-size,mid+1,r);\n\t}\n};\nstruct treap{\n\tlong long val;\n\tint lson,rson;\n\tint size;\n\tint key;\n\tint cnt;\n};\nstruct edge{\n\tint from,to;\n\tint nxt;\n};\nsegment_tree hjt1,hjt2;\ntreap trp[N];\nedge e[N];\nint fa[N],a[N],last[N],sa[N],rk[N],rev[N],dfn[N],size[N];\nint root,tot,cnt,num;\ninline void add(int from,int to){\n\ttot++;\n\te[tot].from=from;\n\te[tot].to=to;\n\te[tot].nxt=last[from];\n\tlast[from]=tot;\n}\ninline bool comp(int x,int y){\n\tif(a[x]!=a[y])\n\t\treturn a[x]>a[y];\n\telse if(fa[x]&&fa[y]&&fa[x]!=fa[y])\n\t\treturn trp[fa[x]].val<trp[fa[y]].val;\n\telse\n\t\treturn x>y;\n}\ninline void pushup(int pos){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].size=trp[lson].size+trp[rson].size+trp[pos].cnt;\n}\nvoid get_val(int now,long long l,long long r){\n\tif(!now)\n\t\treturn ;\n\ttrp[now].val=l+r>>1;\n\tget_val(trp[now].lson,l,trp[now].val-1);\n\tget_val(trp[now].rson,trp[now].val+1,r);\n}\nvoid zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].val=l+r>>1;\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(!comp(now,pos)){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].lson].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse{\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].rson].key)\n\t\t\tzag(now,l,r);\n\t}\n}\nvoid get_sa(int now){\n\tif(!now)\n\t\treturn ;\n\tget_sa(trp[now].lson);\n\tsa[++cnt]=now;\n\trk[now]=cnt;\n\tget_sa(trp[now].rson);\n}\nvoid dfs(int u){\n\trev[++num]=u;\n\tdfn[u]=num;\n\tsize[u]=1;\n\tfor(int i=last[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tdfs(v);\n\t\tsize[u]+=size[v];\n\t}\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d\",&fa[i]);\n\t\tadd(fa[i],i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++)\n\t\tins(root,i,1,INF);\n\tget_sa(root);\n\thjt1.init(hjt1.root[0]=1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t\thjt1.root[i]=hjt1.ins(hjt1.root[fa[i]],rk[i],1,n);\n\tdfs(1);\n\thjt2.init(hjt2.root[0]=1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t\thjt2.root[i]=hjt2.ins(hjt2.root[i-1],rk[rev[i]],1,n);\n\tint opt,x,y;\n\twhile(m--){\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tprintf(\"%d\\n\",rk[x]);\n\t\t}\n\t\telse if(opt==2){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprintf(\"%d\\n\",sa[hjt1.query(hjt1.root[0],hjt1.root[x],y,1,n)]);\n\t\t}\n\t\telse{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tprintf(\"%d\\n\",sa[hjt2.query(hjt2.root[dfn[x]-1],hjt2.root[dfn[x]+size[x]-1],y,1,n)]);\n\t\t}\n\t}\n}\n```\n\n------------\n\n[P5212](https://www.luogu.com.cn/problem/P5212)\u3002\n\n~~\u8fd9\u9898\u6211\u8111\u62bd\u5728 $\\sout {\\texttt {if}}$ \u540e\u52a0\u4e86\u5206\u53f7\u7ed3\u679c\u4e00\u76f4\u6ca1\u8c03\u51fa\u6765\u2026~~\n\n\u8fd9\u4e00\u9898\u662f\u5728\u5b57\u7b26\u4e32**\u540e\u9762**\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u8981\u628a\u5b83**\u8f6c\u6362**\u6210\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u3002\n\n\u600e\u4e48\u8f6c\u6362\uff1f\n\n\u5c31\u662f\u628a\u6574\u4e2a\u5b57\u7b26\u4e32\u98a0\u5012\u3002\n\n\u5176\u5b9e\u5c31\u662f $\\texttt {comp}$ \u51fd\u6570\u53d8\u6210\u8fd9\u6837\uff1a\n\n```cpp\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[x-1].val>trp[y-1].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[x-1].val==trp[y-1].val)\n\t\treturn 0;\n\telse return -1;\n}\n```\n\n\u56e0\u4e3a\u8f6c\u6362\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u7ef4\u62a4\u7684\u662f\u539f\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u6bd4\u8f83\u3002\u6211\u4eec\u6bd4\u8f83\u6700\u540e\u4e00\u4f4d\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u8981\u6bd4\u8f83\u5012\u6570\u7b2c\u4e8c\u4f4d\u3002\u5373\u4e3a $x-1$ \u548c $y-1$\u3002\n\n\u5047\u8bbe\u539f\u4e32\u4e3a $S$\uff0c\u67e5\u8be2\u7684\u4e32\u4e3a $str$\uff0c\u90a3\u4e48\u67e5\u8be2\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6709\u591a\u5c11\u4e2a $S$ \u7684\u540e\u7f00\u4ee5 $str$ \u4f5c\u4e3a\u524d\u7f00\u3002\u5373\u6709\u591a\u5c11 $S^\\prime$ \u7684\u540e\u7f00\u4ee5 $str^\\prime$ \u4f5c\u4e3a\u524d\u7f00\u3002\u5176\u4e2d $S^\\prime$ \u4e3a $S$ \u7684\u53cd\u4e32\uff0c$str^\\prime$ \u4e3a $str$ \u7684\u53cd\u4e32\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5728 $str^\\prime$ \u540e\u52a0\u5165\u6781\u5927\u503c\uff0c\u5728\u540e\u7f00\u5e73\u8861\u6811\u4e2d\u67e5\u8be2\u6392\u540d\u4e3a $ans1$\uff0c\u518d\u628a\u4e0a\u4e00\u4e2a\u5b57\u7b26 $-1$ \u540e\u67e5\u8be2\u6392\u540d\u8bbe\u4e3a $ans2$\u3002\u7b54\u6848\u5c31\u662f $ans1-(ans2+1)+1=ans1-ans2$\u3002\n\n\u56e0\u4e3a\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u5e76\u6ca1\u6709\u5728\u5e73\u8861\u6811\u4e2d\u51fa\u73b0\u8fc7\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528\u539f\u6765\u7684\u90a3\u79cd\u65b9\u6cd5\u6bd4\u8f83\u3002\u6211\u4eec\u53ea\u80fd\u66b4\u529b\u6bd4\u8f83\u3002\u65f6\u590d\u4e3a  $O(\\sum |str| \\log n)$\u3002\u6570\u636e\u8303\u56f4\u544a\u8bc9\u6211\u4eec $O(\\sum|str|)$ \u4e3a $3 \\times 10^6$\uff0c\u6240\u4ee5\u67e5\u8be2\u65f6\u590d\u4e3a $O(3 \\times 10^6 \\log n)$\n\n\u653e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst long long INF=1e18;\nconst int N=1e6+10;\nstruct treap{\n\tlong long val;\n\tint lson,rson;\n\tint size;\n\tint key;\n\tint cnt;\n};\ntreap trp[N];\nchar s[N],str[N],opt[10];\nint root;\nvoid decode(char *ch,int mask){\n\tint l=strlen(ch);\n\tfor(int i=0;i<l;i++){\n\t\tmask=(mask*131+i)%l;\n\t\tchar t=ch[i];\n\t\tch[i]=ch[mask];\n\t\tch[mask]=t;\n\t}\n}\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[x-1].val>trp[y-1].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[x-1].val==trp[y-1].val)\n\t\treturn 0;\n\telse\n\t\treturn -1;\n}\nbool check(int pos){\n\tfor(int i=1,j=pos;str[i];i++,j--)//\u56e0\u4e3a\u662f\u9006\u5e8f\uff0c\u6240\u4ee5j\u8981\u5012\u7740\u904d\u5386\n\t\tif(str[i]>s[j])\n\t\t\treturn false;\n\t\telse if(s[j]>str[i])\n\t\t\treturn true;\n}\ninline void pushup(int pos){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].size=trp[lson].size+trp[rson].size+trp[pos].cnt;\n}\ninline void get_val(int now,long long l,long long r){\n\ttrp[now].val=l+r>>1;\n\tif(trp[now].lson)\n\t\tget_val(trp[now].lson,l,trp[now].val-1);\n\tif(trp[now].rson)\n\t\tget_val(trp[now].rson,trp[now].val+1,r);\n}\nvoid zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tget_val(q,l,r);\n\tp=q;\n}\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].val=l+r>>1;\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[trp[now].lson].key<trp[now].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse if(comp(now,pos)<0){\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[trp[now].rson].key<trp[now].key)\n\t\t\tzag(now,l,r);\n\t}\n\telse{\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\nint rnk(int now){\n\tif(!now)\n\t\treturn 1;\n\telse if(check(now))\n\t\treturn rnk(trp[now].lson);\n\telse\n\t\treturn rnk(trp[now].rson)+trp[trp[now].lson].size+trp[now].cnt;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcin>>s+1;\n\tint len=strlen(s+1),l;\n\tfor(int i=1;i<=len;i++)\n\t\tins(root,i,1,INF);\n\tint mask=0,ans;\n\twhile(n--){\n\t\tcin>>opt+1>>str+1;\n\t\tdecode(str+1,mask);\n\t\tl=strlen(str+1);\n\t\tif(opt[1]=='A'){\n\t\t\tfor(int i=len+1;i<=len+l;i++){\n\t\t\t\ts[i]=str[i-len];\n\t\t\t\tins(root,i,1,INF);\n\t\t\t}\n\t\t\tlen+=l;\n\t\t}\n\t\telse{\n\t\t\treverse(str+1,str+l+1);\n\t\t\tstr[l+1]='C';\n\t\t\tstr[l+2]='\\0';\n\t\t\tans=rnk(root);\n\t\t\tstr[l]--;\n\t\t\tans-=rnk(root);\n\t\t\tmask^=ans;\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t}\n}\n```\n\n------------\n\n[P6164](https://www.luogu.com.cn/problem/P6164)\u3002\n\n~~\u7ec8\u4e8e\u5230\u4e86\u6a21\u677f\u9898\u3002~~\n\n\u5176\u5b9e\u5c31\u6bd4\u4e0a\u4e00\u9053\u9898\u591a\u4e86\u4e00\u4e2a\u5220\u9664\u64cd\u4f5c\u800c\u5df2\u2026\n\n\u52a0\u4e0a\u5220\u9664\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u653e\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nconst long long INF=1e18;\nconst int N=8e5+10;\nstruct treap{\n\tlong long val;\n\tint lson,rson;\n\tint size;\n\tint cnt;\n\tint key;\n};\ntreap trp[N];\nchar s[N],ty[11],str[N];\nint root;\nvoid decode(char *ch,int mask){\n\tint l=strlen(ch);\n\tfor(int i=0;i<l;i++){\n\t\tmask=(mask*131+i)%l;\n\t\tchar t=ch[i];\n\t\tch[i]=ch[mask];\n\t\tch[mask]=t;\n\t}\n}\ninline int comp(int x,int y){\n\tif(s[x]>s[y]||s[x]==s[y]&&trp[x-1].val>trp[y-1].val)\n\t\treturn 1;\n\telse if(s[x]==s[y]&&trp[x-1].val==trp[y-1].val)\n\t\treturn 0;\n\telse return -1;\n}\ninline bool check(int pos){\n\tfor(int i=1,j=pos;str[i];i++,j--)\n\t\tif(str[i]<s[j])\n\t\t\treturn true;\n\t\telse if(str[i]>s[j])\n\t\t\treturn false;\n}\ninline void pushup(int pos){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].size=trp[lson].size+trp[rson].size+trp[pos].cnt;\n}\nvoid dfs(int pos,long long l,long long r){\n\tint lson=trp[pos].lson,rson=trp[pos].rson;\n\ttrp[pos].val=l+r>>1;\n\tif(lson)\n\t\tdfs(lson,l,trp[pos].val-1);\n\tif(rson)\n\t\tdfs(rson,trp[pos].val+1,r);\n}\nvoid zig(int &p,long long l,long long r){\n\tint q=trp[p].lson;\n\ttrp[p].lson=trp[q].rson;\n\ttrp[q].rson=p;\n\tpushup(p);\n\tpushup(q);\n\tdfs(q,l,r);\n\tp=q;\n}\nvoid zag(int &p,long long l,long long r){\n\tint q=trp[p].rson;\n\ttrp[p].rson=trp[q].lson;\n\ttrp[q].lson=p;\n\tpushup(p);\n\tpushup(q);\n\tdfs(q,l,r);\n\tp=q;\n}\nint merge(int x,int y){\n\tif(!x||!y)\n\t\treturn x+y;\n\tif(trp[x].key<trp[y].key){\n\t\ttrp[x].rson=merge(trp[x].rson,y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse{\n\t\ttrp[y].lson=merge(x,trp[y].lson);\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\nvoid ins(int &now,int pos,long long l,long long r){\n\tif(!now){\n\t\ttrp[pos].lson=trp[pos].rson=0;\n\t\ttrp[pos].key=rand();\n\t\ttrp[pos].val=(l+r)/2;\n\t\ttrp[pos].size=1;\n\t\ttrp[pos].cnt=1;\n\t\tnow=pos;\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0){\n\t\tins(trp[now].lson,pos,l,trp[now].val-1);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].lson].key)\n\t\t\tzig(now,l,r);\n\t}\n\telse if(comp(now,pos)<0){\n\t\tins(trp[now].rson,pos,trp[now].val+1,r);\n\t\tpushup(now);\n\t\tif(trp[now].key>trp[trp[now].rson].key)\n\t\t\tzag(now,l,r);\n\t}\n\telse{\n\t\ttrp[now].cnt++;\n\t\tpushup(now);\n\t}\n}\nvoid del(int &now,int pos,long long l,long long r){\n\tif(!now)\n\t\treturn ;\n\tif(comp(now,pos)==0){\n\t\tif(trp[now].cnt>1)\n\t\t\ttrp[now].cnt--;\n\t\telse{\n\t\t\tnow=merge(trp[now].lson,trp[now].rson);\n\t\t\tif(now)\n\t\t\t\tdfs(now,l,r);\n\t\t}\n\t\treturn ;\n\t}\n\tif(comp(now,pos)>0)\n\t\tdel(trp[now].lson,pos,l,trp[now].val-1);\n\telse\n\t\tdel(trp[now].rson,pos,trp[now].val+1,r);\n\tpushup(now);\n}\nint rnk(int now){\n\tif(!now)\n\t\treturn 1;\n\telse if(check(now))\n\t\treturn rnk(trp[now].lson);\n\telse\n\t\treturn rnk(trp[now].rson)+trp[trp[now].lson].size+trp[now].cnt;\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tcin>>s+1;\n\tint len=strlen(s+1);\n\tfor(int i=1;i<=len;i++)\n\t\tins(root,i,1,INF);\n\tint l,x;\n\tint ans;\n\tint mask=0;\n\twhile(n--){\n\t\tcin>>ty+1;\n\t\tswitch(ty[1]){\n\t\t\tcase 'A':\n\t\t\t\tcin>>str+1;\n\t\t\t\tdecode(str+1,mask);\n\t\t\t\tl=strlen(str+1);\n\t\t\t\tfor(int i=len+1;i<=len+l;i++){\n\t\t\t\t\ts[i]=str[i-len];\n\t\t\t\t\tins(root,i,1,INF);\n\t\t\t\t}\n\t\t\t\tlen+=l;\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tcin>>x;\n\t\t\t\tfor(int i=len;i>len-x;i--)\n\t\t\t\t\tdel(root,i,1,INF);\n\t\t\t\tlen-=x;\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcin>>str+1;\n\t\t\t\tdecode(str+1,mask);\n\t\t\t\tint l=strlen(str+1);\n\t\t\t\treverse(str+1,str+l+1);\n\t\t\t\tstr[l+1]='Z'+1;\n\t\t\t\tstr[l+2]='\\0';\n\t\t\t\tans=rnk(root);\n\t\t\t\tstr[l]--;\n\t\t\t\tans-=rnk(root);\n\t\t\t\tmask^=ans;\n\t\t\t\tcout<<ans<<'\\n';\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n------------\n\n### \u63d2\u5165\uff1a\u53ef\u6301\u4e45\u5316\u540e\u7f00\u5e73\u8861\u6811\n\n\u8c8c\u4f3c\u53ef\u4ee5\uff0c\u53c8\u8c8c\u4f3c\u4e0d\u884c\u2026\n\n~~\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\u5566\u3002\u6709\u8c01\u53ef\u4ee5\u6559\u4e00\u4e0b\u6211\uff1f~~\n\n------------\n\n## 7. \u53c2\u8003\u8d44\u6599\n\n### \u9648\u7acb\u6770\u7684\u8bba\u6587\uff1a[\u91cd\u91cf\u5e73\u8861\u6811\u548c\u540e\u7f00\u5e73\u8861\u6811\u5728\u4fe1\u606f\u5b66\u5965\u8d5b\u4e2d\u7684\u5e94\u7528](https://www.docin.com/p-1387378205.html?docfrom=rrela)\u3002\n\n### YoungNeal\u7684\u603b\u7ed3\uff1a[[\u603b\u7ed3] \u540e\u7f00\u5e73\u8861\u6811\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/YoungNeal/p/10270377.html)\u3002\n\n### Irelia\u10e6\u7684\u9898\u89e3\uff1a[\u9898\u89e3 P6164 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u5e73\u8861\u6811\u3011](https://www.luogu.com.cn/blog/126376/solution-p6164)\u3002",
        "postTime": 1612852783,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "CHiCO\u9171\u306e\u540e\u7f00\u5e73\u8861\u6811\u7b14\u8bb0"
    },
    {
        "content": "\u7ec8\u4e8e\u62a2\u5230\u7b2c\u4e00\u7bc7\u9898\u89e3\u4e86\uff0c\u771f\u4e0d\u5bb9\u6613\n\n## \u540e\u7f00\u5e73\u8861\u6811\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n\u66ff\u7f6a\u7f8a\u6811\n\n### \u539f\u7406\n\n\u540e\u7f00\u5e73\u8861\u6811\u662f\u4e00\u4e2a\u4ee5\u5b57\u5178\u5e8f\u4e3a\u5173\u952e\u5b57\u7684\u6709\u5e8f\u5b57\u7b26\u4e32\u96c6$X$\uff0c\u5b83\u53ef\u4ee5\u8d44\u74f7\u4e24\u79cd\u590d\u6742\u5ea6\u4e3a$O(\\log n)$\u7684\u64cd\u4f5c\uff1a\n\n- \u5411\u5b57\u7b26\u4e32\u96c6\u4e2d\u52a0\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a$1$\u7684\u5b57\u7b26\u4e32$S$\n\n- \u5411\u5b57\u7b26\u4e32\u96c6\u4e2d\u52a0\u5165\u5b57\u7b26\u4e32$xS$\uff0c\u5176\u4e2d$S \\in X$\n\n\u6240\u4ee5\uff0c\u5982\u679c\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u9006\u5e8f\u6267\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5b83\u5c31\u662f\u4e25\u683c\u7684\u201c\u540e\u7f00\u5e73\u8861\u6811\u201d\uff0c\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u4e5f\u5c31\u662f\u540e\u7f00\u6570\u7ec4\u3002\u4f46\u5176\u5b9e\u4e0a\uff0c\u89c2\u5bdf\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5b83\u5b8c\u5168\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6709\u6839\u6811\u68ee\u6797\u3002\n\n### \u5b9e\u73b0\n\n\u4e24\u79cd\u63d2\u5165\u64cd\u4f5c\u5b8c\u5168\u53ef\u4ee5\u89c6\u4e3a\u4e00\u79cd\u3002\u6211\u4eec\u8003\u8651\u8981\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32$xS$\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4ece\u6839\u5f00\u59cb\u4e0e\u5f53\u524d\u8282\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u8fdb\u5165\u5de6/\u53f3\u513f\u5b50\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u7a7a\u4f4d\u4e3a\u6b62\u3002\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u6bd4\u8f83\u8981\u63d2\u5165\u7684\u5b57\u7b26\u4e32\u548c\u8282\u70b9\u4e0a\u7684\u5b57\u7b26\u4e32\u3002\n\n\u663e\u7136\u6211\u4eec\u4e0d\u80fd$O(n)$\u66b4\u529b\u6bd4\u8f83\u3002\u8003\u8651\u5230\u8981\u63d2\u5165\u7684\u5b57\u7b26\u4e32$xS$\uff0c\u9664\u53bb\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e4b\u540e\u7684$S$\u5df2\u7ecf\u5728\u6811\u4e2d\uff0c\u5e76\u4e14\u6811\u662f\u6709\u5e8f\u7684\u3002\u90a3\u4e48\u5f53\u7b2c\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5229\u7528\u8fd9\u68f5\u6811\u8fdb\u884c$O(\\log n)$\u6bd4\u8f83\u540e\u9762\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u63d2\u5165\u64cd\u4f5c\u65f6$O(\\log ^ 2 n)$\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u8fdb\u884c$O(1)$\u6bd4\u8f83\uff0c\u6765\u505a\u5230\u5355\u6b21\u64cd\u4f5c\u662f$O(\\log n)$\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a$key$\u503c\u4ee3\u8868\u5728\u6811\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u9009\u53d6\u4e00\u4e2a\u5f88\u5927\u7684\u503c\u57df\uff0c\u6bcf\u6b21\u8fdb\u5165\u4e0b\u4e00\u5c42\u65f6\u6839\u636e\u5de6\u53f3\u513f\u5b50\u5c06\u503c\u57df\u6298\u534a\uff0c\u6700\u7ec8\u8282\u70b9\u7684\u503c\u5c31\u662f\u5f53\u524d\u503c\u57df\u7684$mid$\u503c\u3002\u5f53\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u5df2\u7ecf\u5728\u6811\u4e2d\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u76f4\u63a5\u6bd4\u8f83$key$\u503c\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(1)$\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u7ef4\u62a4\u5e73\u8861\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u66ff\u7f6a\u7f8a\u6811\uff0c\u6ce8\u610f\u5728\u91cd\u6784\u65f6\u8981\u91cd\u65b0\u8d4bkey\u503c\u3002\n\n## \u672c\u9898\u505a\u6cd5\n\n\u7531\u4e8e\u540e\u7f00\u5e73\u8861\u6811\u7ef4\u62a4\u4e32\u5934\u64cd\u4f5c\u6bd4\u8f83\u5bb9\u6613\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u79cd\u4e32\u5c3e\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u53cd\u4e32\u7684\u540e\u7f00\u5e73\u8861\u6811\uff0c\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u6b63\u5e38\u7ef4\u62a4\uff0c\u6ce8\u610f\u5220\u9664\u65f6\u5f7b\u5e95\u5220\u9664\u8282\u70b9\u800c\u4e0d\u662f\u4f7f\u7528\u61d2\u6807\u8bb0\uff0c\u8fd9\u6837\u66f4\u4e0d\u5bb9\u6613\u72af\u9519\uff0c\u65b9\u4fbf\u540e\u9762\u7684\u67e5\u8be2\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u5047\u8bbe\u5f53\u524d\u4e32\u4e3a$S$\uff0c\u67e5\u8be2\u4ee5$T$\u5728$S$\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u67e5\u8be2\u6709\u591a\u5c11\u4e2a$S$\u7684\u540e\u7f00\u662f\u4ee5$T$\u4e3a\u524d\u7f00\u7684\u3002\u6211\u4eec\u628a$T$\u7ffb\u8f6c\uff0c\u5728\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u5b57\u5178\u5e8f\u6781\u5927\u7684\u5b57\u7b26`'Z'+1`\uff0c\u67e5\u8be2\u5b83\u7684\u6392\u540d\u4e3a$r$\u3002\u7136\u540e\u6211\u4eec\u4fdd\u7559\u540e\u6dfb\u52a0\u7684\u5b57\u7b26\uff0c\u628a\u4e0a\u4e00\u4e2a\u5b57\u7b26$-1$\uff0c\u518d\u6b21\u67e5\u8be2\u5b83\u7684\u6392\u540d\u4e3a$l$\u3002\u8fd9\u6837\uff0c\u5f97\u5230\u7684$r-l$\u5c31\u662f$T$\u5728$S$\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\nconst double LIM = 1e16;\nconst int MAXN = 2e6;\n\nint n, m;\nchar str[MAXN], S[MAXN];\ndouble key[MAXN];\nint ch[MAXN][2], siz[MAXN];\nint tr[MAXN], rt, tcnt;\nchar op[10];\n\nvoid Decode(char *s, int mask) {\n\tint len = strlen(s);\n\tfor (int i = 0; i < len; i++) {\n\t\tmask = (mask * 131 + i) % len;\n\t\tchar t = s[i];\n\t\ts[i] = s[mask];\n\t\ts[mask] = t;\n\t}\n}\n\nvoid Update(int now) {\n\tsiz[now] = 1 + siz[ch[now][0]] + siz[ch[now][1]];\n}\n\nint Bad(int now) {\n\treturn 1.0 * siz[ch[now][0]] > 0.7 * siz[now] || 1.0 * siz[ch[now][1]] > 0.7 * siz[now];\n}\n\nvoid DFS(int now) {\n\tif (!now) return;\n\tDFS(ch[now][0]);\n\ttr[++tcnt] = now;\n\tDFS(ch[now][1]);\n\tch[now][0] = ch[now][1] = 0;\n}\n\nvoid Rebuild(int &now, int l, int r, double lv, double rv) {\n\tif (l > r) return;\n\tint mid = (l + r) >> 1;\n\tdouble midv = (lv + rv) / 2;\n\tnow = tr[mid];\n\tkey[now] = midv;\n\tRebuild(ch[now][0], l, mid - 1, lv, midv);\n\tRebuild(ch[now][1], mid + 1, r, midv, rv);\n\tUpdate(now);\n}\n\nvoid Maintain(int &now, double lv, double rv) {\n\tif (Bad(now)) {\n\t\ttcnt = 0;\n\t\tDFS(now);\n\t\tRebuild(now, 1, tcnt, lv, rv);\n\t}\n}\n\nint Comp(int x, int y) {\n\treturn S[x] < S[y] || (S[x] == S[y] && key[x - 1] < key[y - 1]);\n}\n\nvoid Insert(int &now, int idx, double lv, double rv) {\n\tif (!now) {\n\t\tnow = idx;\n\t\tsiz[now] = 1;\n\t\tkey[now] = (lv + rv) / 2;\n\t\tch[now][0] = ch[now][1] = 0;\n\t\treturn;\n\t}\n\tif (Comp(idx, now)) Insert(ch[now][0], idx, lv, key[now]);\n\telse Insert(ch[now][1], idx, key[now], rv);\n\tUpdate(now);\n\tMaintain(now, lv, rv);\n}\n\nvoid Remove(int &now, int idx) {\n\tif (now == idx) {\n\t\tif (!ch[now][0] || !ch[now][1]) {\n\t\t\tnow = (ch[now][0] | ch[now][1]);\n\t\t} else {\n\t\t\tint cur = ch[now][0], las = now;\n\t\t\twhile (ch[cur][1]) {\n\t\t\t\tlas = cur;\n\t\t\t\tsiz[las]--;\n\t\t\t\tcur = ch[cur][1];\n\t\t\t}\n\t\t\tif (las == now) {\n\t\t\t\tch[cur][1] = ch[now][1];\n\t\t\t\tnow = cur;\n\t\t\t\tUpdate(now);\n\t\t\t} else {\n\t\t\t\tch[cur][0] = ch[now][0];\n\t\t\t\tch[cur][1] = ch[now][1];\n\t\t\t\tch[las][1] = 0;\n\t\t\t\tnow = cur;\n\t\t\t\tUpdate(now);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif (Comp(idx, now)) Remove(ch[now][0], idx);\n\telse Remove(ch[now][1], idx);\n\tUpdate(now);\n}\n\nint Com(int now) {\n\tfor (int p = 1; str[p]; p++, now = (now ? now - 1 : 0)) {\n\t\tif (str[p] < S[now]) return 1;\n\t\telse if (str[p] > S[now]) return 0;\n\t}\n}\n\nint Query(int now) {\n\tif (!now) return 0;\n\tint ls = siz[ch[now][0]];\n\tif (Com(now)) return Query(ch[now][0]);\n\telse return Query(ch[now][1]) + ls + 1;\n}\n\nint main() {\n\tscanf(\"%d\", &m);\n\tscanf(\"%s\", S + 1);\n\tint mask = 0, ans = 0;\n\tn = strlen(S + 1);\n\tfor (int i = 1; i <= n; i++) Insert(rt, i, 0, LIM);\n\tfor (int i = 1; i <= m; i++) {\n\t\tscanf(\"%s\", op);\n\t\tif (op[0] == 'A') {\n\t\t\tscanf(\"%s\", str + 1);\n\t\t\tDecode(str + 1, mask);\n\t\t\tint len = strlen(str + 1);\n\t\t\tfor (int j = 1; j <= len; j++) {\n\t\t\t\tS[n + j] = str[j];\n\t\t\t\tInsert(rt, n + j, 0, LIM);\n\t\t\t}\n\t\t\tn += len;\n\t\t} else if (op[0] == 'Q') {\n\t\t\tscanf(\"%s\", str + 1);\n\t\t\tDecode(str + 1, mask);\n\t\t\tint len = strlen(str + 1);\n\t\t\treverse(str + 1, str + len + 1);\n\t\t\tstr[len + 1] = 'Z' + 1;\n\t\t\tstr[len + 2] = '\\0';\n\t\t\tans = Query(rt);\n\t\t\tstr[len]--;\n\t\t\tans -= Query(rt);\n\t\t\tprintf(\"%d\\n\", ans);\n\t\t\tmask ^= ans;\n\t\t} else {\n\t\t\tint k;\n\t\t\tscanf(\"%d\", &k);\n\t\t\tfor (int j = n; j > n - k; j--) Remove(rt, j);\n\t\t\tn -= k;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1584333489,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6164 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u5e73\u8861\u6811\u3011"
    },
    {
        "content": "\u5c06\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u53ef\u4ee5\u652f\u6301\u5f88\u591a\u64cd\u4f5c\uff0c\u540e\u7f00\u5e73\u8861\u6811\u5c31\u662f\u5c06\u540e\u7f00\u4ee5\u5b57\u5178\u5e8f\u4e3a\u6bd4\u8f83\u65b9\u5f0f\u6784\u6210\u7684\u5e73\u8861\u6811\uff0c\u652f\u6301\u52a8\u6001\u63d2\u5165\u3001\u5220\u9664\u3001\u53ef\u6301\u4e45\u5316\u3002\n\n\u5bb9\u6613\u77e5\u9053\uff0c\u5728\u63d2\u5165\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5c06\u540e\u7f00\u8fdb\u884c\u6bd4\u8f83\uff0c\u5047\u8bbe\u63d2\u5165 $y$\uff0c\u8981\u548c $x$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u5148\u6bd4\u8f83 $S_x$ \u548c $S_y$\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u8981\u5c06\u540e\u7f00 $x-1,y-1$\uff0c\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u6c42\u5b83\u4eec\u5728\u540e\u7f00\u6811\u4e0a\u7684\u540d\u6b21\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u4efb\u610f\u5e73\u8861\u6811\u7ef4\u62a4\uff0c\u63d2\u5165\u590d\u6742\u5ea6\u4e3a$O(\\log^2n)$\uff0c\u5728\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\uff0c\u4e3a\u4e86\u51cf\u5c11\u7801\u91cf\u53ef\u4ee5\u8fd9\u4e48\u505a\u3002\n\n\u5982\u679c\u80fd\u505a\u5230\u7ed9\u6bcf\u4e00\u4e2a\u6811\u4e0a\u7684\u8282\u70b9\u5b9e\u73b0 $O(1)$ \u6bd4\u8f83\uff0c\u5c31\u53ef\u4ee5 $O(\\log n)$ \u63d2\u5165\u4e86\uff0c\u65b9\u6cd5\u662f\u7ed9\u6bcf\u4e2a\u8282\u70b9\u8d4b\u4e88\u4e00\u4e2a\u6743\u503c\uff0c\u8fd9\u6837\u6bcf\u6b21\u65cb\u8f6c\u90fd\u9700\u8981\u5c06\u6574\u68f5\u6811\u91cd\u6784\u6743\u503c\uff0c\u4f7f\u7528\u66ff\u7f6a\u7f8a\u6811\u6700\u4e3a\u5408\u9002\uff0c\u5373\u63d2\u5165\u65f6\u5bf9\u6bcf\u68f5\u8bbf\u95ee\u5230\u7684\u5b50\u6811\u6709 $\\frac{1}{size}$ \u7684\u6982\u7387\u5c06\u5176\u91cd\u6784\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\uff08\u4f46\u5e38\u6570\u8f83\u5927\uff09\u3002\n\n\u67e5\u8be2\u5c31\u7b49\u4ef7\u4e8e\u4e0a\u754c\u51cf\u4e0b\u754c\uff0c\u66b4\u529b\u6bd4\u8f83\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e3a $O(\\sum L\\log n)$ \u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=8e5+5,M=3e6+6;\nchar buf[M+5],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,M,stdin),p1==p2)?EOF:*p1++)\ninline void read(int &x){\n\tfor(c=gc;c<'0'||c>'9';c=gc);\n\tfor(x=0;c>='0'&&c<='9';x=x*10+c-'0',c=gc);\n}\nchar s[N],st[M];\nint t[N][2],Q,n,tot,mask,ans,rt,*nrb,sz[N],val,rb[N],bt;\ntypedef long double ld;\nld d[N][3],lv,rv;\ninline void read(char *s){\n\twhile(!isalpha(c=gc));n=0;\n\tdo s[++n]=c;while(isalpha(c=gc));\n}\ninline void decode(char *st,int mask){\n\tfor(int i=0;i<n;i++)\n\t\tmask=(mask*131+i)%n,swap(st[i],st[mask]);\n}\nvoid Rem(int x){if(t[x][0])Rem(t[x][0]);rb[++bt]=x;if(t[x][1])Rem(t[x][1]);}\nint Mak(int l,int r,ld L,ld R){\n\tif(l>r)return 0;int md=l+r>>1,x=rb[md];ld Md=(L+R)/2;\n\tt[x][0]=Mak(l,md-1,L,Md),t[x][1]=Mak(md+1,r,Md,R);\n\td[x][0]=L,d[x][1]=Md,d[x][2]=R,sz[x]=sz[t[x][0]]+sz[t[x][1]]+1;\n\treturn x;\n}\nvoid Reb(int &x){bt=0,Rem(x),x=Mak(1,bt,d[x][0],d[x][2]);}\nvoid Ins(int &x,ld L,ld R){\n\tif(!x){\n\t\tx=val,t[x][0]=t[x][1]=0,sz[x]=1;\n\t\td[x][0]=L,d[x][1]=(L+R)/2,d[x][2]=R;\n\t}else{\n\t\tint k=s[x]==s[val]?d[x-1][1]<d[val-1][1]:s[x]<s[val];\n\t\tIns(t[x][k],d[x][k],d[x][k+1]),++sz[x];\n\t\tif((rand()+rand())%sz[x]==0)nrb=&x;\n\t}\n}\nvoid Del(int &x){\n\tint k=d[val][1]>=d[x][1],&y=t[x][k],&z=t[x][!k];\n\tif(y){\n\t\tDel(y);if(k&&val){\n\t\t\tt[val][0]=t[x][0],t[val][1]=t[x][1];\n\t\t\td[val][0]=d[x][0],d[val][1]=d[x][1];\n\t\t\td[val][2]=d[x][2],x=val,val=0;\n\t\t}sz[x]=sz[y]+sz[z]+1;\n\t}else {val=(x==val)?0:x;x=z;}\n\treturn;\n}\nvoid Ins(int x){val=x,nrb=NULL,Ins(rt,1,1e18);if(nrb)Reb(*nrb);}\nint lwb(int x){\n\tif(!x)return 0;int i,k=0;\n\tfor(i=0;i<n;++i)\n\t\tif(i==x){k=1;break;}\n\t\telse if(s[x-i]!=st[n-i]){k=s[x-i]<st[n-i];break;}\n\treturn k?sz[t[x][0]]+1+lwb(t[x][1]):lwb(t[x][0]);\n}\nint main(){\n    srand(1919810u^time(0));\n\tread(Q),read(s);int i,j,k;\n\tfor(i=1;i<=n;++i)Ins(i);tot=n;\n\twhile(Q--){\n\t\tread(st);\n\t\tif(st[1]=='A'){\n\t\t\tread(st),decode(st+1,mask);\n\t\t\tfor(i=1;i<=n;++i)s[++tot]=st[i],Ins(tot);\n\t\t}else if(st[1]=='Q'){\n\t\t\tread(st),decode(st+1,mask),ans=lwb(rt),++st[1];\n\t\t\tans=lwb(rt)-ans;printf(\"%d\\n\",ans),mask^=ans;\n\t\t}else for(i=1,read(n);i<=n;++i)val=tot--,Del(rt);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644825088,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u540e\u7f00\u5e73\u8861\u6811\u7565\u89e3"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\u7ed9\u5b9a\u521d\u59cb\u5b57\u7b26\u4e32 s \u548c q \u4e2a\u64cd\u4f5c\uff1a\n\n\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u9762\u63d2\u5165\u82e5\u5e72\u4e2a\u5b57\u7b26\u3002\n\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u9762\u5220\u9664\u82e5\u5e72\u4e2a\u5b57\u7b26\u3002\n\u8be2\u95ee\u5b57\u7b26\u4e32 t \u4f5c\u4e3a\u8fde\u7eed\u5b50\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\uff1f\n\u9898\u76ee \u5f3a\u5236\u5728\u7ebf\uff0c\u5b57\u7b26\u4e32\u53d8\u5316\u957f\u5ea6\u4ee5\u53ca\u521d\u59cb\u957f\u5ea6 $\\le 8 \\times 10^5$\uff0c$q \\le 10^5$\uff0c\u8be2\u95ee\u7684\u603b\u957f\u5ea6 $\\le 3 \\times 10^6$\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 1 \u548c\u64cd\u4f5c 2\uff0c\u7531\u4e8e\u540e\u7f00\u5e73\u8861\u6811\u7ef4\u62a4\u5934\u63d2\u548c\u5934\u5220\u64cd\u4f5c\u6bd4\u8f83\u65b9\u4fbf\uff0c\u6240\u4ee5\u60f3\u5230\u628a\u5c3e\u63d2\u548c\u5c3e\u5220\u64cd\u4f5c\u641e\u6210\u5934\u63d2\u548c\u5934\u5220\u3002\u8fd9\u91cc\u5982\u679c\u7ef4\u62a4 s \u7684\u53cd\u4e32\u7684\u540e\u7f00\u5e73\u8861\u6811\uff0c\u800c\u975e s \u7684\u540e\u7f00\u5e73\u8861\u6811\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e0a\u8ff0\u8f6c\u6362\u3002\u5e73\u8861\u6811\u7684\u6dfb\u52a0\u548c\u5220\u9664\u90fd\u662f $O(\\log n)$ \u7684\uff0c\u6240\u4ee5\u6dfb\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\u8bb0\u6dfb\u52a0\u548c\u5220\u9664\u7684\u603b\u5b57\u7b26\u6570\u4e3a N\uff0c\u90a3\u4e48\u8fd9\u4e00\u90e8\u5206\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N \\log n)$\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 3\uff0ct \u7684\u51fa\u73b0\u6b21\u6570\u7b49\u4e8e\u4ee5 t \u4e3a\u524d\u7f00\u7684\u540e\u7f00\u6570\u91cf\uff0c\u800c\u4ee5 t \u4e3a\u524d\u7f00\u7684\u540e\u7f00\u6570\u91cf\u7b49\u4e8e\u5176\u540e\u7ee7\u7684\u6392\u540d\u51cf\u53bb\u5176\u524d\u9a71\u7684\u6392\u540d\u3002\u5728 t \u540e\u9762\u52a0\u5165\u4e00\u4e2a\u6781\u5927\u7684\u5b57\u7b26\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa t \u7684\u4e00\u4e2a\u540e\u7ee7\u3002\u5c06 t \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u51cf\u5c0f 1\uff0c\u5c31\u53ef\u4ee5\u6784\u9020\u51fa t \u7684\u4e00\u4e2a\u524d\u9a71\u3002\n\n\u73b0\u5728\u8981\u67e5\u8be2\u67d0\u4e00\u4e2a\u4e32 t \u5728\u540e\u7f00\u5e73\u8861\u6811\u4e2d\u6392\u540d\uff0c\u7531\u4e8e\u4e0d\u80fd\u4fdd\u8bc1 t \u5728\u540e\u7f00\u5e73\u8861\u6811\u4e2d\u51fa\u73b0\u8fc7\uff0c\u6240\u4ee5\u6bcf\u6b21\u53ea\u80fd\u66b4\u529b\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\u3002\u5355\u6b21\u6bd4\u8f83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|t|)$\uff0c\u6bcf\u6b21\u67e5\u8be2\u81f3\u591a\u6bd4\u8f83 $O(\\log n)$ \u6b21\uff0c\u6240\u4ee5\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a $O(|t|\\log n)$\u3002\u8bb0\u6240\u6709\u8be2\u95ee\u4e32\u7684\u957f\u5ea6\u548c\u4e3a L\uff0c\u90a3\u4e48\u8fd9\u4e00\u90e8\u5206\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(L \\log n)$\u3002\n\n## \u63a5\u4e0b\u6765\u8d34\u4e0a SGT \u7248\u672c\u7684\u53c2\u8003\u4ee3\u7801\n\n\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\n\nconst int N = 8e5 + 5;\nconst double INF = 1e18;\n\nvoid decode(char* s, int len, int mask) {\n  for (int i = 0; i < len; ++i) {\n    mask = (mask * 131 + i) % len;\n    swap(s[i], s[mask]);\n  }\n}\n\nint q, n, na;\nchar a[N], t[N];\n\n// SuffixBST(SGT Ver)\n\n// \u987a\u5e8f\u52a0\u5165\uff0c\u67e5\u8be2\u65f6\u5c06\u8be2\u95ee\u4e32\u7ffb\u8f6c\n// \u4ee5i\u7ed3\u675f\u7684\u524d\u7f00\uff0c\u5bf9\u5e94\u8282\u70b9\u7684\u7f16\u53f7\u4e3ai\n// \u6ce8\u610f\uff1a\u4e0d\u80fd\u5199\u61d2\u60f0\u5220\u9664\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u7834\u574f\u6811\u7684\u7ed3\u6784\nconst double alpha = 0.75;\nint root;\nint sz[N], L[N], R[N];\ndouble tag[N];\nint buffer_size, buffer[N];\n\nbool cmp(int x, int y) {\n  if (t[x] != t[y]) return t[x] < t[y];\n  return tag[x - 1] < tag[y - 1];\n}\n\nvoid init() { root = 0; }\n\nvoid new_node(int& rt, int p, double lv, double rv) {\n  rt = p;\n  sz[rt] = 1;\n  tag[rt] = (lv + rv) / 2;\n  L[rt] = R[rt] = 0;\n}\n\nvoid push_up(int x) {\n  if (!x) return;\n  sz[x] = sz[L[x]] + 1 + sz[R[x]];\n}\n\nbool balance(int rt) { return alpha * sz[rt] > max(sz[L[rt]], sz[R[rt]]); }\n\nvoid flatten(int rt) {\n  if (!rt) return;\n  flatten(L[rt]);\n  buffer[++buffer_size] = rt;\n  flatten(R[rt]);\n}\n\nvoid build(int& rt, int l, int r, double lv, double rv) {\n  if (l > r) {\n    rt = 0;\n    return;\n  }\n  int mid = (l + r) >> 1;\n  double mv = (lv + rv) / 2;\n\n  rt = buffer[mid];\n  tag[rt] = mv;\n  build(L[rt], l, mid - 1, lv, mv);\n  build(R[rt], mid + 1, r, mv, rv);\n  push_up(rt);\n}\n\nvoid rebuild(int& rt, double lv, double rv) {\n  buffer_size = 0;\n  flatten(rt);\n  build(rt, 1, buffer_size, lv, rv);\n}\n\nvoid insert(int& rt, int p, double lv, double rv) {\n  if (!rt) {\n    new_node(rt, p, lv, rv);\n    return;\n  }\n\n  if (cmp(p, rt))\n    insert(L[rt], p, lv, tag[rt]);\n  else\n    insert(R[rt], p, tag[rt], rv);\n\n  push_up(rt);\n  if (!balance(rt)) rebuild(rt, lv, rv);\n}\n\nvoid remove(int& rt, int p, double lv, double rv) {\n  if (!rt) return;\n\n  if (rt == p) {\n    if (!L[rt] || !R[rt]) {\n      rt = (L[rt] | R[rt]);\n    } else {\n      // \u627e\u5230rt\u7684\u524d\u9a71\u6765\u66ff\u6362rt\n      int nrt = L[rt], fa = rt;\n      while (R[nrt]) {\n        fa = nrt;\n        sz[fa]--;\n        nrt = R[nrt];\n      }\n      if (fa == rt) {\n        R[nrt] = R[rt];\n      } else {\n        L[nrt] = L[rt];\n        R[nrt] = R[rt];\n        R[fa] = 0;\n      }\n      rt = nrt;\n      tag[rt] = (lv + rv) / 2;\n    }\n  } else {\n    double mv = (lv + rv) / 2;\n    if (cmp(p, rt))\n      remove(L[rt], p, lv, mv);\n    else\n      remove(R[rt], p, mv, rv);\n  }\n\n  push_up(rt);\n  if (!balance(rt)) rebuild(rt, lv, rv);\n}\n\nbool cmp1(char* s, int len, int p) {\n  for (int i = 1; i <= len; ++i, --p) {\n    if (s[i] < t[p]) return true;\n    if (s[i] > t[p]) return false;\n  }\n  return false;\n}\n\nint query(int rt, char* s, int len) {\n  if (!rt) return 0;\n  if (cmp1(s, len, rt))\n    return query(L[rt], s, len);\n  else\n    return sz[L[rt]] + 1 + query(R[rt], s, len);\n}\n\nvoid solve() {\n  n = 0;\n  scanf(\"%d\", &q);\n  init();\n\n  scanf(\"%s\", a + 1);\n  na = strlen(a + 1);\n  for (int i = 1; i <= na; ++i) {\n    t[++n] = a[i];\n    insert(root, n, 0, INF);\n  }\n\n  int mask = 0;\n  char op[10];\n  for (int i = 1; i <= q; ++i) {\n    scanf(\"%s\", op);\n\n    // \u4e09\u79cd\u60c5\u51b5\u5206\u522b\u5904\u7406\n\n    if (op[0] == 'A') {  // ADD\n      scanf(\"%s\", a + 1);\n      na = strlen(a + 1);\n      decode(a + 1, na, mask);\n\n      for (int i = 1; i <= na; ++i) {\n        t[++n] = a[i];\n        insert(root, n, 0, INF);\n      }\n    } else if (op[0] == 'D') {  // DEL\n      int x;\n      scanf(\"%d\", &x);\n      while (x) {\n        remove(root, n, 0, INF);\n        --n;\n        --x;\n      }\n    } else if (op[0] == 'Q') {  // QUERY\n      scanf(\"%s\", a + 1);\n      na = strlen(a + 1);\n      decode(a + 1, na, mask);\n\n      reverse(a + 1, a + 1 + na);\n\n      a[na + 1] = 'Z' + 1;\n      a[na + 2] = 0;\n      int ans = query(root, a, na + 1);\n\n      --a[na];\n      ans -= query(root, a, na + 1);\n\n      printf(\"%d\\n\", ans);\n      mask ^= ans;\n    }\n  }\n}\n\nint main() {\n  solve();\n  return 0;//\u7ed3\u675f\n}\n```\n",
        "postTime": 1685100404,
        "uid": 897131,
        "name": "yangdezuo",
        "ccfLevel": 0,
        "title": "P6164\u9898\u89e3"
    }
]