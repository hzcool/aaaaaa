[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6811,\u7ed9\u5b9a\u6bcf\u4e00\u4e2a\u70b9\u7684$access$\u6b21\u6570,\u8ba1\u7b97\u8f7b\u91cd\u94fe\u5207\u6362\u6b21\u6570\u7684\u6700\u5927\u503c,\u5e26\u4fee\u6539.\n\n---\n\n### \u9898\u89e3\n\n#### \u5148\u8003\u8651\u4e0d\u5e26\u4fee\u6539\u600e\u4e48\u505a\n\n\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u70b9$u$,\u53ea\u6709$u$\u5b50\u6811\u91cc\u7684\u70b9\u8fdb\u884c$access$\u624d\u4f1a\u5f71\u54cd$u$\u7684\u7b54\u6848,\u5e76\u4e14\u6bcf\u4e2a\u70b9\u90fd\u662f\u72ec\u7acb\u7684,\u53ef\u4ee5\u5206\u5f00\u8ba1\u7b97\n\n\u5047\u8bbe$u$\u7684\u5b50\u6811\u53d1\u751f\u4e86\u4e24\u6b21$access$,\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u6b21$access$\u7684\u70b9\u6765\u81ea$u$\u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u513f\u5b50\u7684\u5b50\u6811,\u7b54\u6848\u624d\u4f1a$+1$\n\n\u8bbe$A_0=a_u$,$A_i=[u$\u7684\u7b2c$i$\u4e2a\u513f\u5b50\u5b50\u6811$access$\u6b21\u6570\u4e4b\u548c$],m=|Son_u|$\n\n\u65e2\u7136\u5f53\u4e14\u4ec5\u5f53\u4e24\u6b21$access$\u6765\u81ea\u4e0d\u540c\u5b50\u6811\u4f1a\u4f7f\u5f97\u7b54\u6848$+1$\n\n\u8981\u4f7f\u5f97\u7b54\u6848\u6700\u5927,\u5c31\u662f\u5c3d\u91cf\u8ba9\u6240\u6709\u76f8\u90bb\u53d1\u751f\u7684$access$\u90fd\u6765\u81ea\u4e0d\u540c\u5b50\u6811\n\n\u8f6c\u5316\u4e00\u4e0b\u4e5f\u5c31\u662f\u6709$[0,m]$\u79cd\u989c\u8272,\u6bcf\u79cd\u989c\u8272\u6709$A_i$\u4e2a,\u6700\u5927\u5316\u76f8\u90bb\u7684\u989c\u8272\u4e0d\u540c\u6b21\u6570\n\n\u8bbe$t=\\sum_{i=0}^mA_i,h=\\max_{i=0}^m\\{A_i\\}$\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f$\\min\\{t-1,2\\times(t-h)\\}$\n\n\u628a\u540c\u7c7b\u578b\u7684\u6570\u632a\u5230\u4e00\u8fb9\u5c31\u662f\u5f53$2\\times h\\ge t+1$\u65f6,\u7b54\u6848\u662f$2(t-h)$,\u5426\u5219\u662f$t-1$\n\n\u8fd9\u91cc\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e00\u4e0b\u7b54\u6848\u4e3a\u5565\u662f\u90a3\u4e2a\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\n> \u989c\u8272$A\\times3,B\\times4,C\\times5$\n> \n> \u4e00\u7ec4\u53ef\u884c\u89e3\u662f$CACBCACBCBAB$\n> \n> \u7b54\u6848\u662f$11=12-1$\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\n> \u989c\u8272$A\\times2,B\\times3,C\\times7$\n> \n> \u4e00\u7ec4\u53ef\u884c\u89e3\u662f$CACBCACBCBCC$\n> \n> \u7b54\u6848\u662f$10=2\\times(12-7)$\n\n\u81f3\u4e8e\u4f60\u8bf4\u4e25\u683c\u7684\u8bc1\u660e~~\u6211\u53ef\u4ee5\u8ddf\u4f60\u8bf4\u6211\u6700\u591a\u53ea\u80fd\u901a\u8fc7\u4e3e\u4f8b\u5b50\u7406\u89e3\u4e86\u5417,\u5f53\u7136\u4f60\u53ef\u4ee5~~\u95ee\u6570\u5b66\u597d\u7684$dalao$\u5427\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728$O(n)$\u7684\u65f6\u95f4\u5185$dfs$\u4e00\u4e0b\u8fd9\u68f5\u6811\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86$(ps:$\u8bb0\u5f97\u5f00$long\\ long)$\n\n#### \u8003\u8651\u5f85\u4fee\u6539\u600e\u4e48\u505a\n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a$[2\\times h\\ge t+1]$\u7684\"\u5206\u754c\u7ebf\"\u53bb\u60f3\u4e00\u60f3\u600e\u4e48\u7ef4\u62a4\u7b54\u6848\n\n\u4ee4$f_i$\u8868\u793a$i$\u7684\u5b50\u6811$access$\u7684\u603b\u6b21\u6570,\u5982\u679c$2f_i\\ge f_{fa_i}+1$\u90a3\u4e48\u8fde\u5b9e\u8fb9$(i,fa_i)$,\u5176\u4ed6\u7684\u90fd\u662f\u865a\u8fb9\n\n\u8003\u8651\u5230\u5982\u679c\u628a$i$\u5b50\u6811\u91cc\u7684\u70b9$j$\u7684\u6743\u503c\u52a0\u4e0a$w$,\u4ed6\u53ea\u4f1a\u5f71\u54cd$j$\u5230\u6839\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u7b54\u6848\u548c\u865a\u5b9e\u8fb9\u5173\u7cfb\n\n\u56e0\u4e3a$2(f_i+w)\\ge(f_{fa_i}+w)+1$,\u6240\u4ee5\u5b9e\u8fb9\u8fd8\u662f\u5b9e\u8fb9,\u5e76\u4e14\u7b54\u6848\u4e0d\u4f1a\u53d8\u5316$(\\Delta=2[(f_{fa_i}+w)-(f_i+w)]-2(f_{fa_i}-f_i)=0)$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u8def\u5f84\u4e0a\u7684\u865a\u8fb9\u8fdb\u884c\u4fee\u6539\u5c31\u597d\u4e86\n\n\u5e76\u4e14\u53ef\u4ee5\u77e5\u9053\u4e00\u6761\u8def\u5f84\u4e0a\u865a\u8fb9\u7684\u6570\u91cf$\\le\\log\\sum a$(\u8bc1\u660e\u548c\u6811\u5256\u7684\u8bc1\u660e\u4e00\u6837,\u6709\u4e00\u4e2a\"\u91cd\u513f\u5b50\")\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8def\u5f84\u4e0a\u6240\u6709\u865a\u8fb9,\u7136\u540e\u66b4\u529b\u4fee\u6539\u5c31\u597d\u4e86\n\n\u81f3\u4e8e\u600e\u4e48\u627e\u5230\u8def\u5f84\u4e0a\u7684\u865a\u8fb9,\u53ef\u4ee5\u7528\u6811\u5256$+$\u5728\u7ebf\u6bb5\u6811/\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206\u627e\u5230\n\n\u5f53\u7136\u8fd8\u53ef\u4ee5\u5199$LCT$,\u56e0\u4e3a\u8fd9\u91cc\u7684\u7684\u64cd\u4f5c\u5176\u5b9e\u5c31\u548c$access$\u5dee\u4e0d\u591a,\u53ea\u662f\u4e0d\u4e00\u5b9a\u4f1a\u628a\u6240\u6709\u8fb9\u90fd\u53d8\u6210\u5b9e\u8fb9,\u6240\u4ee5\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86,\u7136\u540e$ans+=$\u8fd9\u4e2a\u70b9\u66f4\u65b0\u540e\u7684\u7b54\u6848$-$\u66f4\u65b0\u524d\u7684\u7b54\u6848\u5c31\u597d\u4e86\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=4e5+5;\ntypedef int arr[N];\ntypedef long long ll;\nstruct eg{int nx,to;}e[N*2];\nint n,m,ce,fi[N];ll ans;\nstruct LCT{\n    int fa[N],ch[N][2];ll s[N],val[N],vs[N];\n    #define lc(u) (ch[u][0])\n    #define rc(u) (ch[u][1])\n    inline bool gf(int u){return rc(fa[u])==u;}\n    inline bool ir(int u){return lc(fa[u])^u&&rc(fa[u])^u;}\n    inline void up(int u){s[u]=s[lc(u)]+s[rc(u)]+val[u]+vs[u];}\n    inline void rot(int u){\n        int p=fa[u],k=gf(u);\n        if(!ir(p))ch[fa[p]][gf(p)]=u;\n        if(ch[u][!k])fa[ch[u][!k]]=p;\n        ch[p][k]=ch[u][!k],ch[u][!k]=p;\n        fa[u]=fa[p],fa[p]=u,up(p);\n    }\n    void splay(int u){\n        for(int f=fa[u];!ir(u);rot(u),f=fa[u])\n            if(!ir(f))rot(gf(f)==gf(u)?f:u);\n        up(u);\n    }\n    inline ll calc(int u,ll t,ll h){return rc(u)?(t-h)*2:(val[u]*2>t?(t-val[u])*2:t-1);}\n    inline void mdy(int u,int w){\n        splay(u);int v;\n        ll t=s[u]-s[lc(u)],h=s[rc(u)];\n        ans-=calc(u,t,h);s[u]+=w,val[u]+=w,t+=w;\n        if(h*2<t+1)vs[u]+=h,rc(u)=0;\n        ans+=calc(u,t,h);up(u);\n        //access\n        for(u=fa[v=u];u;u=fa[v=u]){\n            splay(u);t=s[u]-s[lc(u)],h=s[rc(u)];\n            ans-=calc(u,t,h);s[u]+=w,vs[u]+=w,t+=w;\n            if(h*2<t+1)vs[u]+=h,rc(u)=0,h=0;\n            if(s[v]*2>t)vs[u]-=s[v],rc(u)=v,h=s[v];\n            ans+=calc(u,t,h);up(u);\n        }\n    }\n    void dfs(int u){\n        s[u]=val[u];int p=0;ll mx=val[u];\n        go(u)if(v^fa[u]){\n            fa[v]=u,dfs(v),s[u]+=s[v];\n            if(s[v]>mx)mx=s[p=v];\n        }\n        ans+=min(s[u]-1,(s[u]-mx)*2);\n        if(mx*2>=s[u]+1)rc(u)=p;\n        vs[u]=s[u]-val[u]-s[rc(u)];\n    }\n}t;\ninline void add(int u,int v){e[++ce]={fi[u],v},fi[u]=ce;}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n),sd(m);int u,v;\n    fp(i,1,n)sd(t.val[i]);\n    fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n    t.dfs(1);we(ans);\n    while(m--){\n        sd(u),sd(v);\n        t.mdy(u,v);\n        we(ans);\n    }\nreturn Ot(),0;\n}\n```\n\u90a3\u4e2a$calc(u,t,h)$\u6216\u8bb8\u8fd9\u4e48\u5199\u4f1a\u597d\u7406\u89e3\u4e00\u4e9b$?$\n```\ninline ll calc(int u,ll t,ll h){\n\tif(rc(u))return (t-h)*2;\n\telse if(val[u]>=t+1)return (t-val[u])*2;\n\telse return t-1\n}\n```",
        "postTime": 1522202713,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    },
    {
        "content": "ZJOI\u7684\u8003\u573a\u4e0a\u6700\u5f31\u5916\u7701\u9009\u624bT2 10\u5206\u6210\u529f\u6eda\u7c97\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u9996\u5148\u8981\u60f3\u523030\u5206\u7684\u7ed3\u8bba\n\n~~\u8bf4\u5b9e\u8bddDay1\u524d\u51e0\u5929\u521a\u521a\u521a\u6389\u4e86SDOI2017\u7684\u6811\u70b9\u6d82\u8272\uff0c\u8003\u573a\u4e0a\u4e5f\u60f3\u5230\u4e86\u8fd9\u4e00\u70b9~~\n\n\u60f3\u5230\u4e86\u53c8\u6709\u4ec0\u4e48\u7528\uff1f\u53cd\u6b63\u60f3\u4e0d\u5230\u6700\u5927\u7684\u8d21\u732e\u662f\u600e\u4e48\u63a8\u51fa\u6765\u7684\n\n\u7136\u540e\u665a\u4e0a~~\u5fc3\u4e2d\u6000\u7740\u4e5d\u6761CNM~~\u770b\u5b8c\u4e86Solution.pdf\n\n\u8c8c\u4f3c\u5bf9\u6211\u8fd9\u4e2a\u849f\u84bb\u6765\u8bf4\u4e5f\u53ea\u6709\u8fd9\u4e00\u9898\u53ef\u505a\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u5df2\u77e5\u4e66\u4e0a\u6bcf\u4e2a\u70b9access\u7684\u603b\u6b21\u6570\uff0c\u6784\u9020\u51fa\u4e00\u4e2a\u987a\u5e8f\uff0c\u6700\u5927\u5316\u865a\u5b9e\u8fb9\u7684\u5207\u6362\u603b\u6b21\u6570\n\n\u5176\u5b9e\u5982\u679c\u80fd\u53d1\u73b0\u6700\u4f18\u987a\u5e8f\u7684\u6784\u9020\u662f\u6ca1\u6709\u540e\u6548\u6027\u7684\u8bdd\uff0c\u95ee\u9898\u4fbf\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b80\u5316\n\n\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u3002\u5047\u8bbe\u5df2\u7ecf\u5bf9\u6240\u6709\u5b50\u6811\u4e2d\u7684\u70b9\u6784\u9020\u51fa\u4e86\u4e00\u4e2a\u6700\u4f18\u987a\u5e8f\uff08\u4e00\u4e2a\u5e8f\u5217\uff09\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u4f1a\u548c\u5b83\u7684\u6240\u6709\u7956\u5148\u7684\u5b50\u6811\u4e2d\u7684\u6700\u4f18\u5e8f\u5217\u4ea7\u751f\u51b2\u7a81\u3002\u8fd9\u4e2a\u5e76\u4e0d\u597d\u8bc1\u660e\uff0c\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5e94\u8be5\u80fd\u53d1\u73b0\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u70b9$x$\u3002\u80fd\u5bf9$x$\u7684\u5b9e\u5b50\u8fb9\u4ea7\u751f\u5f71\u54cd\u7684\u662fx\u7684\u6240\u6709\u5b50\u6811\u548c$x$\u672c\u8eab\uff08access(x)\u4f1a\u4f7f$x$\u6ca1\u6709\u5b9e\u5b50\u8fb9\uff09\uff0c\u6bcf\u5207\u6362\u4e00\u6b21\u90fd\u4f1a\u4f7f\u7b54\u6848$+1$\u3002\u663e\u7136\u540c\u4e00\u4e2a\u5b50\u6811\u4e2d\u4ea7\u751f\u7684\u5f71\u54cd\u662f\u76f8\u540c\u7684\u3002\u4e8e\u662f\u6211\u4eec\u8981\u8ba9\u6765\u81ea\u4e0d\u540c\u5b50\u6811\uff08\u6216$x$\u672c\u8eab\uff09\u5c3d\u53ef\u80fd\u4ea4\u66ffaccess\u3002\u5f53\u6ca1\u6709\u67d0\u4e2a\u5b50\u6811\uff08\u6216$x$\u672c\u8eab\uff09\u7684$a$\u603b\u548c\u8fc7\u5927\u65f6\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u4f7f\u5f97\uff08\u9664\u4e86\u7b2c\u4e00\u6b21\uff09\u6bcf\u4e00\u6b21access\u90fd\u6709\u8d21\u732e\u7684\u65b9\u6848\u3002\u5982\u679c\u67d0\u4e2a\u5b50\u6811\uff08\u6216$x$\u672c\u8eab\uff09\u7684$a$\u603b\u548c\u8fc7\u5927\uff0c\u5927\u4e8e\u6240\u6709\u5b50\u6811\u603b\u548c\u7684\u4e00\u534a\u65f6\uff0c\u662f\u4e0d\u53ef\u4ee5\u7684\uff0c\u90a3\u4e2a\u5b50\u6811\uff08\u6216$x$\u672c\u8eab\uff09\u7684\u67d0\u51e0\u6b21\u64cd\u4f5c\u80af\u5b9a\u4e0d\u4f1a\u6709\u8d21\u732e\u3002\u7528\u6570\u5b66\u516c\u5f0f\u5927\u6982\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u4e3a\uff08$S$\u4e3a\u5b50\u6811\u7684$a$\u4e4b\u548c\uff0c$c$\u4e3a$x$\u7684\u6bcf\u4e2a\u5b50\u6811\uff09\n\n$$\\min\\{S_x-1,2*(S_x-\\max\\{a_x,\\forall S_c\\})\\}$$\n\n\u5f53$\\max\\{a_x,\\forall S_c\\}\\gt {S_x+1\\over2}$\u65f6$\\min$\u53d6\u540e\u8005\n\n\u7528\u6811\u5f62DP\u7b97\u51fa\u6765\u5c31\u670930\u5206\u4e86\n\n\u90a3\u4e48\u600e\u6837\u5feb\u901f\u4fee\u6539\u5462\uff1f\n\n\u9996\u5148\uff0c\u5bf9\u67d0\u4e2a\u70b9\u7684$a$\u52a0\u4e0a\u4e00\u4e2a\u503c$w$\uff0c\u53ea\u53ef\u80fd\u4f1a\u5f71\u54cd\u8be5\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u8d21\u732e\u3002\n\n\u56e0\u4e3a\u662f\u52a0\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u5047\u5982\u8fd9\u4e9b\u70b9\u4e2d\u67d0\u4e9b\u70b9\u7684\u5b50\u6811$S$\u5927\u4e8e\u5b83\u7236\u4eb2\u5b50\u6811$S$\u7684\u4e00\u534a\uff0c\u90a3\u4e48$S_x+w$\uff0c$\\max\\{a_x,\\forall S_c\\}$\u4e5f\u4f1a$+w$\uff0c\u5e26\u5165\u4e0a\u5f0f\u53d1\u73b0\u8d21\u732e\u662f\u4e0d\u53d8\u7684\uff01\n\n\u770b\u5230\u67d0\u4e2a\u5b50\u6811S\u5927\u4e8e\u6240\u6709\u5b50\u6811\u603b\u548c\u7684\u4e00\u534a\uff0c\u6709\u6ca1\u6709\u60f3\u5230\u6811\u5256\uff1f\u6811\u5256\u7684\u8f7b\u91cd\u8fb9\u5c31\u662f\u8fd9\u6837\u5212\u5206\u7684\u554a\uff01\uff08~~\u53cd\u6b63\u6211\u8fd9\u79cd\u849f\u84bb\u5c31\u662f\u60f3\u4e0d\u5230~~\uff09\n\n\u540c\u6837\u5bf9\u7ef4\u62a4\u597d\u6bcf\u4e2a\u70b9\u5b50\u6811S\u7684\u6811\u8fdb\u884c\u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u67d0\u4e9b\u70b9\u7684\u5b50\u6811a\u4e4b\u548c\u5927\u4e8e\u5b83\u7236\u4eb2\u5b50\u6811a\u4e4b\u548c\u7684\u4e00\u534a\u5c31\u8fde\u91cd\u8fb9\uff08\u5426\u5219\u8fde\u8f7b\u8fb9\uff09\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u81f3\u591a\u6709\u4e00\u4e2a\u91cd\u513f\u5b50\u3002\u7c7b\u4f3c\u6811\u5256\u7684\u8bc1\u660e\uff0c\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8f7b\u8fb9\u603b\u6570\uff08\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u80fd\u4f1a\u4fee\u6539\u7684\u70b9\u6570\uff09\u662f$\\log\\sum a$\u7ea7\u522b\u7684\uff01\n\n\u4fee\u6539\u7684\u590d\u6742\u5ea6\u4e5f\u6709\u4fdd\u969c\u5566\uff01\u6211\u4eec\u53ea\u8981\u5feb\u901f\u627e\u5230\u8fd9\u4e9b\u70b9\u5c31\u597d\u4e86\u3002\u7528\u5b9e\u94fe\u5256\u5206\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u5373\u53ef\uff08\u5e94\u8be5\u4e0d\u80fd\u53ebLCT\u5427\uff0c\u6ca1\u6709makeroot\uff0clink\u548ccut\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898[\u849f\u84bb\u7684LCT\u603b\u7ed3](http://www.cnblogs.com/flashhu/p/8324551.html)\u5bf9LCT\u7684\u6982\u5ff5\u4e5f\u6539\u4e86\u6539\uff0c\u6b22\u8fceJulao\u4eec\u6307\u6b63\uff01\uff09\u3002\u5168\u5c40\u4fdd\u5b58ans\uff0c\u6bcf\u6b21\u8fdb\u884c\u7c7baccess\u64cd\u4f5c\u627e\u5230\u865a\u8fb9\uff0c\u5c31\u8ba9ans\u76f4\u63a5\u51cf\u53bb\u4ee5\u524d\u7684\u8d21\u732e\uff0c\u52a0\u4e0aw\u4ee5\u540e\u5224\u65ad\u5f53\u524d\u7684\u60c5\u51b5\u51b3\u5b9a\u662f\u5426\u8981\u5207\u6362\u865a\u5b9e\u8fb9\u5e76\u8ba9ans\u52a0\u4e0a\u65b0\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\u4ee5\u524d\u7684\u8d21\u732e\uff0c\u849f\u84bb\u89c9\u5f97\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e0b\u4ee5\u524d\u8d21\u732e\u7684\u7c7b\u578b\uff08\u65e0\u975e\u5c31\u4e09\u79cd\uff0c\u67d0\u5b50\u6811\u8fc7\u5927\u3001\u81ea\u5df1\u8fc7\u5927\u3001\u90fd\u4e0d\u662f\u5f88\u5927\uff09\u7b97\u7684\u65f6\u5019\u5c31\u7701\u53bb\u4e86\u4e00\u4e9b\u5224\u65ad\u7684\u65f6\u95f4\u3002\n\n\u4ee3\u7801\u7ec6\u8282\u5de8\u591a\uff0c\u5c24\u5176\u662f\u7c7baccess\u66f4\u65b0\u7b54\u6848\u90a3\u90e8\u5206\u3002\u6240\u4ee5\u5c31\u7b97\u8003\u573a\u4e0a\u60f3\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u6211\u8fd9\u79cd\u849f\u84bb\u4e5f\u672a\u5fc5\u5199\u5f97\u51fa\u6765\u5427\uff01\u75af\u72c2\u819c\u62dc\u8003\u573a\u5207T2\u7684laofu\u7237Orzzzzzzzzzzzz\uff01\n```cpp\n#include<cstdio>\n#define RG register\n#define R RG int\n#define I inline void\n#define lc c[x][0]\n#define rc c[x][1]\n#define G ch=getchar()\ntypedef long long L;\nconst int N=400009,M=N<<1;\nint f[N],c[N][2],he[N],ne[M],to[M];\nL ans,a[N],si[N],s[N];\nshort tp[N];\nbool r[N];\ntemplate<typename T>\nI in(RG T&x){\n\tRG char G;\n\twhile(ch<'-')G;\n\tx=ch&15;G;\n\twhile(ch>'-')x*=10,x+=ch&15,G;\n}\ninline bool nroot(R x){\n\treturn c[f[x]][0]==x||c[f[x]][1]==x;\n}\nI up(R x){\n\ts[x]=s[lc]+s[rc]+si[x]+a[x];\n}\nI rot(R x){\n\tR y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n\tif(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n\tup(f[w]=y);f[y]=x;f[x]=z;\n}\nI splay(R x){\n\tR y;\n\twhile(nroot(x)){\n\t\tif(nroot(y=f[x]))\n\t\t\trot((c[f[y]][0]==y)^(c[y][0]==x)?x:y);\n\t\trot(x);\n\t}\n\tup(x);\n}\nvoid dp(R x){//dp\u9884\u5904\u7406\u7b54\u6848\n\tR y,i,mp=x;\n\tRG L mx=a[x];\n\tfor(i=he[x];i;i=ne[i]){\n\t\tif(f[x]==(y=to[i]))continue;\n\t\tf[y]=x;dp(y);\n\t\tsi[x]+=s[y];\n\t\tif(mx<s[y])mx=s[y],mp=y;\n\t}\n\tif(mx<<1>(s[x]=si[x]+a[x])){\n\t\tans+=(s[x]-mx)<<1;\n\t\tif(x!=mp)si[x]-=s[rc=mp];//\u5b50\u6811\u8fc7\u5927\n\t\telse tp[x]=1;//\u81ea\u5df1\u8fc7\u5927\n\t}\n\telse tp[x]=2,ans+=s[x]-1;//\u90fd\u4e0d\u662f\u5f88\u5927\n}\nint main(){\n\tR n,m,i,p=0,x,y;\n\tRG L w,S;\n\tin(n);in(m);\n\tfor(i=1;i<=n;++i)in(a[i]);\n\tfor(i=1;i<n;++i){\n\t\tin(x);in(y);\n\t\tto[++p]=y;ne[p]=he[x];he[x]=p;\n\t\tto[++p]=x;ne[p]=he[y];he[y]=p;\n\t}\n\tdp(1);printf(\"%lld\\n\",ans);\n\twhile(m--){\n\t\tin(x);in(w);\n\t\tfor(y=0;x;x=f[y=x]){\n\t\t\tsplay(x);\n\t\t\tS=s[x]-s[lc];//\u7b97\u539f\u6765\u5b50\u6811a\u603b\u548c\uff0c\u6ce8\u610f\u51cfs[lc]\n\t\t\tans-=tp[x]<2?(S-(tp[x]?a[x]:s[rc]))<<1:S-1;\n\t\t\tS+=w;s[x]+=w;(y?si:a)[x]+=w;\n\t\t\tif(s[y]<<1>S)si[x]+=s[rc],si[x]-=s[rc=y];//\u865a\u5b9e\u5207\u6362\n\t\t\tif(s[rc]<<1>S)   tp[x]=0,ans+=(S-s[rc])<<1;//\u5b50\u6811\u8fc7\u5927\n\t\t\telse{\n\t\t\t\tif(rc)si[x]+=s[rc],rc=0;//\u6ca1\u6709\u5b50\u6811\u8fc7\u5927\uff0c\u4e00\u5b9a\u53d8\u865a\n\t\t\t\tif(a[x]<<1>S)tp[x]=1,ans+=(S-a[x])<<1;//\u81ea\u5df1\u8fc7\u5927\n\t\t\t\telse         tp[x]=2,ans+=S-1,rc=0;//\u90fd\u4e0d\u662f\u5f88\u5927\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1522744317,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    },
    {
        "content": "\u5982\u679c$x$\u53f7\u57ce\u5e02\u5d1b\u8d77\uff0c\u90a3\u4e48\u8fd9\u4e00\u6b21\u5d1b\u8d77\u53d1\u751f\u7684\u6218\u4e89\u6570\u91cf\u5c31\u662f\u8fd9\u4e2a\u57ce\u5e02\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u57ce\u5e02\u6240\u5c5e\u4e8e\u7684\u4e0d\u540c\u7684\u56fd\u5bb6\u7684\u6570\u91cf\u3002\n\n\u7531\u4e8e\u4e00\u4e2a\u57ce\u5e02\u5d1b\u8d77\u8fc7\u540e\uff0c\u4f1a\u4f7f\u4ece\u8fd9\u4e2a\u57ce\u5e02\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u57ce\u5e02\u90fd\u5c5e\u4e8e\u5b83\u7ba1\u8f96\uff0c\u6240\u4ee5\u5c5e\u4e8e\u540c\u4e00\u4e2a\u56fd\u5bb6\u7684\u57ce\u5e02\uff0c\u5b83\u4eec\u4e00\u5b9a\u7ec4\u6210\u4e00\u6761\u94fe\uff0c\u5e76\u4e14\u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u7684\u6df1\u5ea6\u662f\u4f9d\u6b21\u9012\u589e\u7684\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\uff0c\u5728\u4e00\u4e2a\u57ce\u5e02\u5d1b\u8d77\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ea\u5728\u5b83\u4e0e\u67d0\u4e2a\u56fd\u5bb6\u53d1\u751f\u6218\u4e89\u7684\u57ce\u5e02\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u57ce\u5e02\u7edf\u8ba1\u7b54\u6848\u3002\u4e5f\u5373\u662f\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u201c\u53d1\u751f\u4e86\u6218\u4e89\u7684\u6df1\u5ea6\u6700\u5927\u7684\u57ce\u5e02\u201d\u3002\n\n![\u56fe\u793a1](http://wx4.sinaimg.cn/mw690/0060lm7Tly1fxwsgb1zqgj30w00i0dg2.jpg)\n\n\u5982\u56fe\uff0c7\u53f7\u70b9\u5d1b\u8d77\uff0c\u7136\u540e3\u53f7\u70b9\u5d1b\u8d77\u3002\u5982\u679c\u73b0\u57286\u53f7\u70b9\u5d1b\u8d77\uff0c\u9700\u8981\u7edf\u8ba1\u8d21\u732e\u7684\u70b9\u662f4\u53f7\u70b9\u548c1\u53f7\u70b9\u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u70b9\u88ab\u7edf\u8ba1\u4e00\u6b21\u8d21\u732e\uff0c\u8981\u6c42\u5b83\u7684\u5b50\u6811\u5185\u6709\u4e24\u4e2a\u57ce\u5e02\u5148\u540e\u5d1b\u8d77\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u57ce\u5e02\u6765\u81ea\u4e0d\u540c\u7684\u513f\u5b50\u7684\u5b50\u6811\uff08\u5982\u679c\u662f\u6765\u81ea\u540c\u4e00\u4e2a\u513f\u5b50\uff0c\u90a3\u4e48\u5c31\u4f1a\u5728\u6df1\u5ea6\u66f4\u5927\u7684\u4f4d\u7f6e\u7edf\u8ba1\u8d21\u732e\uff0c\u8fd9\u4e2a\u57ce\u5e02\u867d\u7136\u7ba1\u8f96\u7684\u56fd\u5bb6\u53d8\u4e86\uff0c\u4f46\u662f\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\uff09\u3002\n\n\u8fdb\u4e00\u6b65\u6316\u6398\u6027\u8d28\uff1a\u6574\u4e2a\u5386\u53f2\u8fdb\u7a0b\u63cf\u8ff0\u4e3a\u4e00\u4e9b\u56fd\u5bb6\u4f9d\u6b21\u5d1b\u8d77\u3002\u8003\u8651\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u6765\u81ea\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u4ee5\u5916\u7684\u70b9\u7684\u5d1b\u8d77\u4e0d\u9700\u8981\u88ab\u5173\u5fc3\uff1b\u8fd9\u4e2a\u70b9\u7684\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u5185\u7684\u70b9\u7684\u5d1b\u8d77\u7684**\u76f8\u5bf9\u987a\u5e8f**\u4e5f\u4e0d\u9700\u8981\u6211\u4eec\u5173\u5fc3\u3002\u6211\u4eec\u53ea\u5173\u5fc3\u8fd9\u4e2a\u5d1b\u8d77\u987a\u5e8f\u4e2d\u6765\u81ea\u8fd9\u4e2a\u70b9\u7684\u4e0d\u540c\u7684\u513f\u5b50\u7684\u5b50\u6811\u7684\u70b9\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u6309\u7167\u6700\u4f18\u7684\u65b9\u5f0f\u5b89\u6392\u5b83\u7684\u513f\u5b50\u7684\u5d1b\u8d77\uff0c\u8fd9\u5bf9\u4e8e\u5b83\u7684\u7956\u5148\u3001\u5b83\u7684\u513f\u5b50\u90fd\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\n\n\u95ee\u9898\u7b80\u5316\u4e3a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$u$\uff0c\u6709$n$\u4e2a\u513f\u5b50\uff0c\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u7684\u6240\u6709\u70b9\u603b\u5171\u4f1a\u5d1b\u8d77$x_i$\u6b21\uff0c\u5b89\u6392\u4e00\u79cd\u987a\u5e8f\u4f7f\u5f97\u6765\u81ea\u4e0d\u540c\u5b50\u6811\u7684\u5148\u540e\u4e24\u6b21\u5d1b\u8d77\u7684\u6570\u91cf\u6700\u5927\u3002\n\n\u5982\u679c\u8fd9\u4e9b\u70b9\u7684\u5206\u5e03\u6bd4\u8f83\u5747\u5300\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u4e00\u79cd\u5b89\u6392\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e24\u6b21\u5d1b\u8d77\u4e00\u5b9a\u6765\u81ea\u4e0d\u540c\u7684\u5b50\u6811\u3002\u5373$ans=(\\sum x_i)-1$\u3002\u90a3\u4e48\u4ec0\u4e48\u60c5\u51b5\u4e0b\u627e\u4e0d\u51fa\u8fd9\u6837\u7684\u4e00\u79cd\u5b89\u6392\u5462\uff1f\u4e00\u5b9a\u662f\u6709\u6765\u81ea\u4e8e\u67d0\u4e00\u4e2a\u5b50\u6811\u7684\u70b9\u7684\u6570\u91cf\u8fc7\u591a\uff0c\u628a\u8fd9\u4e9b\u70b9\u62ff\u51fa\u6765\uff0c\u76f8\u90bb\u4e24\u4e2a\u4e4b\u95f4\u63d2\u4e00\u4e2a\u6765\u81ea\u5176\u4ed6\u5b50\u6811\u7684\u70b9\uff0c\u5176\u4ed6\u5b50\u6811\u7684\u70b9\u63d2\u5b8c\u4e86\uff0c\u8fd9\u4e2a\u5b50\u6811\u7684\u70b9\u8fd8\u6709\u5269\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u90a3\u4e00\u6bb5\u5c31\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u3001\u6765\u81ea\u540c\u4e00\u4e2a\u5b50\u6811\u7684\u70b9\u4e86\u3002\u8bbe$tot=\\sum x_i$\uff0c$mx$\u4e3a\u6240\u6709$x_i$\u7684\u6700\u5927\u503c\uff0c\u8fd9\u65f6\u5019$ans=2\\times (tot-mx)$\u3002\u663e\u7136\u6b64\u65f6$2\\times (tot-mx)<tot-1$\u3002\n\n\u7efc\u4e0a\uff0c$ans=min(tot-1,2\\times(tot-mx))$\n\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u4e00\u4e2a\u70b9\u5b50\u6811\u5185\u7684\u5d1b\u8d77\u4e8b\u4ef6\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u6765\u81ea\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\uff0c\u8fd8\u53ef\u4ee5\u6765\u81ea\u8fd9\u4e2a\u70b9\u81ea\u5df1\uff0c\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u8fd9\u4e2a\u70b9\u81ea\u5df1\u5f53\u505a\u5b83\u7684\u4e00\u4e2a\u5b50\u6811\uff0c\u5373\u8981\u6c42\u4e0d\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u5b50\u6811\uff08\u53ef\u4ee5\u4e00\u4e2a\u6765\u81ea\u5b50\u6811\uff0c\u4e00\u4e2a\u662f$u$\u81ea\u5df1\uff09\uff0c\u6216\u8005\u4e0d\u90fd\u6765\u81ea\u4e8e$u$\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0d\u5e26\u4fee\u6539\u7684\u505a\u6cd5\uff1a\u76f4\u63a5$O(n)$\u626b\u4e00\u904d\uff0c$tot$\u4e3a$u$\u5b50\u6811\u5185\u6240\u6709\u7684\u5d1b\u8d77\u6b21\u6570\uff0c$mx$\u4e3a$u$\u7684\u5d1b\u8d77\u6b21\u6570\u4e0e$u$\u7684\u4e0d\u540c\u513f\u5b50\u7684\u7684\u5b50\u6811\u5185\u7684\u5d1b\u8d77\u6b21\u6570\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u8282\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$min(tot-1,2\\times (tot-mx))$\u3002\u6240\u6709\u8282\u70b9\u7684\u8d21\u732e\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u4fee\u6539\u3002\u8bbe$tot_u$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u5167\u6240\u6709\u8282\u70b9\u7684\u5d1b\u8d77\u6b21\u6570\u603b\u548c\u3002\u90a3\u4e48\u4fee\u6539\u4e00\u4e2a\u70b9$u$\uff0c\u5c31\u4f1a\u5f71\u54cd\u5230$u$\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684$tot_u$\uff0c\u4e5f\u4f1a\u76f8\u5e94\u5730\u5f71\u54cd\u8fd9\u4e9b\u8282\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u5f53$tot_u-1>2\\times(tot_u-mx)$\u7684\u65f6\u5019\uff0c\u5982\u679c\u4fee\u6539\u7684\u662f$mx$\u6765\u81ea\u7684\u5b50\u6811\u7684\u70b9\uff0c\u90a3\u4e48\u4fee\u6539\u524d\u7684\u8d21\u732e\u662f$2\\times (tot_u-mx)$\uff0c\u4fee\u6539\u540e\u7684\u8d21\u732e\u662f$2\\times ((tot_u+w)-(mx+w))=2\\times(tot_u-mx)$\u3002$u$\u7684\u8d21\u732e\u662f\u4e0d\u53d8\u7684\u3002\n\n\u8fd9\u6837\u5c31\u542f\u53d1\u6211\u4eec\u5982\u4f55\u4f18\u5316\u4fee\u6539\u7684\u8fc7\u7a0b\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u5b58\u5728\u4e00\u4e2a\u513f\u5b50$son[u]$\u4f7f\u5f97$tot_u-1>2\\times(tot_u-tot_{son[u]]})$\uff0c\u90a3\u4e48\u5c31\u5728$u$\u5230$son[u]$\u4e4b\u95f4\u8fde\u5b9e\u8fb9\uff0c$u$\u5230\u5176\u4ed6\u7684\u513f\u5b50\u8fde\u865a\u8fb9\uff0c\u4e00\u6b21\u4fee\u6539\u4e2d\u6211\u4eec\u53ea\u8003\u8651\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u5b9e\u94fe\u4e4b\u95f4\uff08\u4e5f\u5c31\u662f\u7531\u865a\u8fb9\u76f8\u8fde\u7684\u70b9\uff09\u7684\u8d21\u732e\u53d8\u5316\u3002\n\n\u6211\u4eec\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u5f53\u524d\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u7c7b\u578b\uff1a\u662f$tot-1$\uff0c\u8fd8\u662f$2\\times (tot-mx)$\u4e14$mx$\u6765\u81ea\u4e00\u4e2a\u5b50\u6811\uff0c\u8fd8\u662f$2\\times(tot-mx)$\u4e14$mx$\u662f\u8fd9\u4e2a\u70b9\u81ea\u5df1\u3002\u4fee\u6539\u4e00\u4e2a\u70b9\u8fc7\u540e\uff0c\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u7684$tot$\u90fd\u4f1a$+=w$\u3002\u7531\u865a\u8fb9\u76f8\u8fde\u7684\u70b9\uff0c\u5b83\u7684\u8d21\u732e\u7c7b\u578b\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u76f4\u63a5\u4ece\u5f53\u524d\u7684\u7b54\u6848\u4e2d\u51cf\u53bb\u5b83\u539f\u6765\u7684\u8d21\u732e\uff0c\u4fee\u6539\uff0c\u7136\u540e\u91cd\u65b0\u8ba1\u7b97\u5b83\u7684\u8d21\u732e\u7c7b\u578b\uff0c\u52a0\u4e0a\u5b83\u73b0\u5728\u7684\u8d21\u732e\u3002\u8fd9\u91cc\u5bf9\u4e8e\u4e00\u6761\u5b9e\u94fe\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u9700\u8981\u533a\u95f4\u4fee\u6539\u3001\u5355\u70b9\u67e5\u8be2\u8fd9\u4e9b\u70b9\u7684$tot$\uff0c\u90a3\u4e48\u53ef\u4ee5\u5229\u7528\u5dee\u5206\u7684\u601d\u60f3\uff0c\u8bbe$val[u]=tot_u-tot_{son[u]}$\uff0c\u5728LCT\u4e2d\u7ef4\u62a4$val$\u7684\u548c\u5373\u53ef\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0cLCT\u4e2d\u7684\u67d0\u6761\u5b9e\u94fe\uff0c\u7ef4\u62a4\u5b83\u7684splay\u91cc\u9762\u7684\u6bcf\u4e2a\u8282\u70b9\u7684$val$\u503c\u7684\u548c\u5c31\u662f\u8fd9\u6761\u5b9e\u94fe\u4e0a\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u7684$tot$\u3002\u56e0\u800c\uff0c\u5982\u679c\u60f3\u8981\u5f97\u5230\u67d0\u4e00\u4e2a\u70b9\u7684$tot$\uff0c\u5c31\u5e94\u8be5\u8ba1\u7b97$splay$\u91cc\u9762**\u6df1\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5b83**\u7684\u70b9\u7684$val$\u4e4b\u548c\uff0c\u4e5f\u5c31\u662f\u5c06\u8fd9\u4e2a\u70b9splay\u5230\u6839\u540e\uff0c\u8fd9\u4e2a\u70b9\u7684$val$\u52a0\u4e0a\u5b83\u53f3\u5b50\u6811\u7684$val$\u4e4b\u548c\u3002\u4fee\u6539\u67d0\u4e00\u6761\u5b9e\u94fe\uff08\u6216\u8005\u67d0\u6761\u5b9e\u94fe\u7684\u4e0a\u534a\u90e8\u5206\uff09\uff0c\u53ea\u9700\u8981\u5c06\u8fd9\u6761\u94fe\u4e0a\u5f85\u4fee\u6539\u7684\u3001\u6df1\u5ea6\u6700\u5927\u7684\u70b9\u7684$val$\u52a0\u4e0a$delta$\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5c06\u8fd9\u4e2a\u5b9e\u94fe\u4e0a\u6df1\u5ea6\u5c0f\u4e8e\u8fd9\u4e2a\u70b9\u7684\u70b9\u8fdb\u884c\u4e86\u533a\u95f4\u52a0\u3002\n\n\u4fee\u6539\u8fc7\u540e\uff0c\u8981\u91cd\u65b0\u8003\u8651\u5b9e\u94fe\u4e0a\u88ab\u4fee\u6539\u7684\u70b9\u4e2d\u6df1\u5ea6\u6700\u4f4e\u7684\u70b9\uff1a\n\n1.\u5b83\u7684\u865a\u513f\u5b50\u4e2d\u6709\u4e00\u4e2a\u7684$tot$\u6539\u53d8\u4e86\uff0c\u8fd9\u4e2a\u865a\u513f\u5b50\u7684$tot$\u662f\u5426\u5927\u4e8e\u5b83\u5f53\u524d\u5b9e\u513f\u5b50\u7684$tot$\uff1f\u5982\u679c\u662f\uff0c\u5219\u5e94\u8be5\u5c06\u8fd9\u4e2a\u70b9\u7684$val$\u52a0\u4e0a\u5f53\u524d\u5b9e\u513f\u5b50\u7684$tot$\uff0c\u51cf\u53bb\u90a3\u4e2a\u865a\u513f\u5b50\u7684$tot$\uff08\u4fdd\u8bc1$val_u=tot_u-tot_{son[u]}$\uff09\uff0c\u7136\u540e\u5c06\u90a3\u4e2a\u513f\u5b50\u7f6e\u4e3a\u865a\u513f\u5b50\u3002\n\n2.\u8fd9\u4e2a\u70b9\u7684$tot$\u6539\u53d8\u4e86\uff0c\u5b83\u7684\u8d21\u732e\u7c7b\u578b\u662f\u5426\u4f1a\u53d8\u5316\uff1f\u5982\u679c$tot-1<2\\times (tot - tot_{son[u]})$\uff0c\u8fd8\u8981\u8bb0\u5f97\u628a$son[u]$\u7f6e\u4e3a 0 \u3002\n\n\u4fee\u6539\u7684\u590d\u6742\u5ea6\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u865a\u8fb9\u7684\u6570\u91cf\u4e58\u4ee5splay\u7684\u590d\u6742\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u5b9e\u513f\u5b50\uff0c\u90a3\u4e48\u4ece\u5b83\u7684\u513f\u5b50\u8fd9\u4e00\u5c42\u5230\u5b83\uff0c$tot$\u81f3\u5c11\u4f1a\u589e\u52a0\u4e00\u500d\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u6709\u5b9e\u513f\u5b50\uff0c\u4f46\u662f\u4e0d\u662f\u8fd9\u4e2a\u70b9\uff0c\u7236\u4eb2\u7684$tot$\u5c31\u81f3\u5c11\u662f\u8fd9\u4e2a\u70b9\u7684\u4e24\u500d\u3002\u56e0\u6b64\uff0c\u4fee\u6539\u7684\u865a\u8fb9\u6570\u91cf\u662f$\\log$\u7ea7\u522b\u7684\u3002",
        "postTime": 1544063920,
        "uid": 40534,
        "name": "zhongyuwei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    },
    {
        "content": "link-cut-tree\u597d\u9898\u554a\u2026\u2026\n\n~~\u6211\u592a\u83dc\u4e86\u4ece\u53bb\u5e74zjoi\u5495\u5230\u73b0\u5728\u7684\u4e00\u9053\u9898~~\n\n~~\u679c\u7136zjoi\u53ea\u6709\u6570\u636e\u7ed3\u6784\u9898\u80fd\u505a~~\n\n________________\n\n### \u524d\u7f6e\u829d\u58eb:link-cut-tree(lct)/splay \n\n\u7531\u4e8e\u8fd9\u9053\u9898\u5f53\u4e2d\u6211\u4eec\u4ec5\u4ec5\u662f\u501f\u7528\u4e86lct\u7684\u4e00\u4e9b\u601d\u60f3\u800c\u5df2\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u5b9e\u73b0make root/access/link/cut\u64cd\u4f5c\u6240\u4ee5\u8bf4\u4f60\u4e0d\u4f1a\u6807\u51c6\u7684lct\u4e5f\u53ef\u4ee5ac\u672c\u9898\n\n(\u4e0d\u8fc7\u8bdd\u8bf4\u56de\u6765\u6562\u521azjoi\u7684dalao\u5e94\u8be5\u4f1alct\u5427\u2026\u2026)\n\n\u4f46\u662f\u65e0\u8bba\u5982\u4f55splay\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u5e94\u8be5\u662f\u9700\u8981\u7684(\u9664\u975e\u4f60\u6709\u7cbe\u5999\u7684\u5361\u5e38\u6280\u5de7\u53ef\u4ee5\u8ba9\u4f60a\u4e86\u8fd9\u9898)\n______________\n\n# \u672c\u9898\u9898\u89e3\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u7ed3\u8bba\u662f:**\u4efb\u610f\u65f6\u95f4\u5185\u4e00\u4e2a\u57ce\u5e02\u63a7\u5236\u7684\u533a\u57df\u4e00\u5b9a\u662f\u4e00\u6761\u5b83\u5230\u81ea\u5df1\u7684\u4e00\u4e2a\u7956\u5148\u7684\u8def\u5f84**\n\n\u539f\u56e0\u4e5f\u5f88\u663e\u7136:\u6211\u4eec\u6bcf\u6b21\u66f4\u6539\u4e00\u4e2a\u70b9\u6240\u5c5e\u7684\u57ce\u5e02\u7684\u65f6\u5019\u4e5f\u4f1a\u540c\u65f6\u4fee\u6539\u5b83\u7684\u6240\u6709\u7956\u5148\u7684\u63a7\u5236\u6743\uff0c\u4e0d\u4f1a\u51fa\u73b0\u5c06\u4e00\u4e2a\u57ce\u5e02\u63a7\u5236\u7684\u533a\u57df\u88ab\u622a\u6210\u4e24\u534a\u7684\u60c5\u51b5\n\n\u90a3\u4e48\u6839\u636e\u8fd9\u4e2a\u7ed3\u8bba\u6211\u4eec\u53ef\u4ee5\u5c06\u540c\u4e00\u4e2a\u57ce\u5e02\u63a7\u5236\u7684\u533a\u57df\u770b\u6210\u4e00\u6761\u91cd\u94fe,\u5404\u4e2a\u91cd\u94fe\u4e4b\u95f4\u901a\u8fc7\u4e0d\u662f\u91cd\u8fb9\u7684\u8f7b\u8fb9\u76f8\u8fde\n\n\u6b64\u65f6\u4e00\u6b21\u201c\u5d1b\u8d77\u201d\u64cd\u4f5c\u7684\u6743\u503c\u5c31\u662f\u70b9i\u52301\u8def\u5f84\u4e0a\u7684\u91cd\u94fe\u6761\u6570\u4e86,\u5f53\u7136\u524d\u63d0\u662fi\u6ca1\u6709\u63a7\u5236\u4efb\u4f55\u57ce\u5e02,\u5982\u679ci\u63a7\u5236\u4e86\u4e00\u4e2a\u57ce\u5e02\u7684\u8bdd\u6743\u503c\u5c31\u9700\u8981\u51cf1\u4e86\n\n\u4f3c\u4e4e\u8fd9\u6837\u8ba1\u7b97\u6743\u503c\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u8fd8\u662f\u6709\u70b9\u9ebb\u70e6\u2026\u2026\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7ee7\u7eed\u7b80\u5316\u9898\u76ee\u7ed9\u51fa\u7684\u6761\u4ef6\n\n\u6211\u4eec\u53d1\u73b0**\u70b9i\u52301\u8def\u5f84\u4e0a\u7684\u91cd\u94fe\u6761\u6570=\u70b9i\u52301\u8def\u5f84\u4e0a\u7684\u8f7b\u8fb9\u4e2a\u6570+1**\n\n\u4f46\u662f\u6b64\u65f6\u6211\u4eec\u4f9d\u7136\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u554a\u2026\u2026\u600e\u4e48\u529e\u5462\uff1f\n\n\u6709\u4e00\u4e2a\u6027\u8d28\u662f\u5f53\u70b9i\u81f3\u5c11\u63a7\u5236\u4e86\u4e00\u4e2a\u57ce\u5e02\u65f6,\u70b9i\u7684\u5d1b\u8d77\u4e0d\u4f1a\u6539\u53d8\u70b9i\u4e0b\u9762\u7684\u8fb9\u7684\u8f7b\u91cd\u5c5e\u6027\n\n\u4f46\u662f\u5982\u679c\u70b9i\u6ca1\u6709\u63a7\u5236\u4efb\u4f55\u57ce\u5e02\u7684\u65f6\u5019\uff0c\u70b9i\u7684\u5d1b\u8d77\u4f1a\u6539\u53d8\u70b9i\u4e0b\u9762\u8fb9\u7684\u8f7b\u91cd\u5c5e\u6027\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u7ed5\u5f00\u5206\u60c5\u51b5\u8ba8\u8bba\u4e86,\u6211\u4eec\u6b64\u65f6\u53ef\u4ee5\u5f88\u5feb\u7684\u63a8\u51fa\u4e00\u6b21\u201c\u5d1b\u8d77\u201d\u64cd\u4f5c\u7684\u6743\u503c\u662f**\u672c\u6b21\u64cd\u4f5c\u4e2d\u7684\u8f7b\u91cd\u8fb9\u5207\u6362\u6b21\u6570**\n\n\u56e0\u4e3a\u70b9i\u52301\u8def\u5f84\u4e0a\u7684\u91cd\u8fb9\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5207\u6362\u800c\u8f7b\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u5207\u6362\u5e76\u4e14\u5f53\u70b9i\u6ca1\u6709\u63a7\u5236\u4efb\u4f55\u57ce\u5e02\u7684\u65f6\u5019\u4f1a\u989d\u5916\u53d1\u751f\u4e00\u6b21\u8f7b\u91cd\u8fb9\u5207\u6362,\u6240\u4ee5\u4e00\u6b21\"\u5d1b\u8d77\"\u64cd\u4f5c\u4e2d\u7684\u8f7b\u91cd\u8fb9\u5207\u6362\u6b21\u6570\u5c31\u7b49\u4e8e**\u70b9i\u52301\u8def\u5f84\u4e0a\u8f7b\u8fb9\u4e2a\u6570+[\u70b9i\u662f\u5426\u6ca1\u6709\u63a7\u5236\u4efb\u4f55\u57ce\u5e02]**,\u8fd9\u4e0e\u6211\u4eec\u521a\u624d\u63a8\u51fa\u6765\u4e00\u6b21\"\u5d1b\u8d77\"\u64cd\u4f5c\u7684\u6743\u503c\u7b49\u4e8e**\u70b9i\u52301\u8def\u5f84\u4e0a\u7684\u91cd\u94fe\u6761\u6570-[\u70b9i\u662f\u5426\u63a7\u5236\u4e86\u81f3\u5c11\u4e00\u4e2a\u57ce\u5e02]**\u662f\u7b49\u4ef7\u7684\n\n\u65e2\u7136\u6211\u4eec\u6700\u5927\u5316\u7684\u4e1c\u897f\u8f7b\u91cd\u8fb9\u5207\u6362\u6b21\u6570\u4e4b\u548c(\u4e00\u5f00\u59cb\u6ca1\u6709\u91cd\u8fb9\u6240\u6709\u8fb9\u90fd\u662f\u8f7b\u8fb9)\u90a3\u4e48\u95ee\u9898\u5c31\u4f1a\u53d8\u5f97\u7a0d\u5fae\u597d\u8003\u8651\u4e00\u70b9,\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6362\u53e5\u8bdd\u5c31\u662f\u6700\u5927\u5316\u6bcf\u4e2a\u70b9\u4e0b\u9762\u7684\u8fb9\u7684\u8f7b\u91cd\u8fb9\u5207\u6362\u6b21\u6570\u4e4b\u548c(\u663e\u7136\u4e00\u4e2a\u70b9\u4e0b\u9762\u6700\u591a\u6709\u4e00\u6761\u91cd\u8fb9\u4e5f\u53ef\u80fd\u4e00\u6761\u91cd\u8fb9\u90fd\u6ca1\u6709)\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u70b9$i$\u7684\u8f7b\u91cd\u8fb9\u53d1\u751f\u5207\u6362\u53ea\u4f1a\u53d7\u5230\u6765\u81ea\u81ea\u5df1\u5b50\u6811\u7684\u64cd\u4f5c\u7684\u5f71\u54cd\n\n\u5e76\u4e14\u53d1\u751f\u5207\u6362\u7684\u6761\u4ef6\u662f\u65f6\u95f4\u4e0a\u76f8\u90bb\u7684\u4e24\u4e2a\u64cd\u4f5c\u6765\u81ea\u4e8e\u4e0d\u540c\u7684\u5b50\u6811\u6216\u8005\u5176\u4e2d\u662f\u4e00\u4e2a\u662f\u6765\u81ea\u4e8e\u70b9i\u7684\u64cd\u4f5c\u53e6\u4e00\u4e2a\u4e0d\u662f\u6765\u81ea\u70b9i\u7684\u64cd\u4f5c\uff0c\u6362\u53e5\u8bdd\u8bf4\u548c\u8fd9\u4e2a\u64cd\u4f5c\u5230\u5e95\u6765\u81ea\u4e8e\u90a3\u4e2a\u70b9\u662f\u65e0\u5173\u7684\u800c\u4ec5\u4ec5\u548c\u8fd9\u4e2a\u64cd\u4f5c\u6765\u81ea\u7684\u5b50\u6811\u6709\u5173\n\n\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u70b9i\u5b89\u6392\u51fa\u4e00\u4e2a\u6700\u4f18\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6811\u4e0adfs\uff0c\u5148\u5bf9\u5f53\u524ddfs\u5230\u7684\u70b9u\u7684\u6240\u6709\u5b50\u6811\u505a\u51fa\u6700\u4f18\u7684\u5b89\u6392\uff0c\u63a5\u4e0b\u6765\u518d\u628a\u8fd9\u4e9b\u64cd\u4f5c\u5e8f\u5217\u6309\u7167\u4e00\u79cd\u5bf9\u70b9u\u6700\u4f18\u7684\u65b9\u5f0f\"\u6df7\u5408\"\u5728\u4e00\u8d77\u5982\u6b64\u8fd9\u822c\u9012\u5f52\u4e0b\u53bb\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u5168\u5c40\u6700\u4f18\u7684\u7684\u65b9\u6848\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u552f\u4e00\u9700\u8981\u5173\u5fc3\u7684\u4e8b\u60c5\u5c31\u662f\u5982\u4f55\u6700\u5927\u5316\u67d0\u4e00\u4e2a\u70b9i\u7684\u8f7b\u91cd\u8fb9\u5207\u6362\u6b21\u6570\uff0c\u7136\u540e\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u70b9\u7b97\u51fa\u6765\u7684\u6b21\u6570\u52a0\u8d77\u6765\u5c31\u662f\u6211\u4eec\u8981\u7684\u7b54\u6848\n\n\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u7ed3\u8bba\u4e86,\u7ed9\u4f60\u82e5\u5e72\u79cd\u4e0d\u540c\u989c\u8272\u7684\u5c0f\u7403\u8981\u6c42\u4f60\u628a\u8fd9\u4e9b\u5c0f\u7403\u6446\u6210\u4e00\u5217,\u6700\u5927\u5316\u76f8\u90bb\u7684\u4e0d\u540c\u8272\u7403\u7684\u6570\u76ee\n\n\u90a3\u4e48\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ed3\u8bba\u662f\u6211\u4eec\u8bbe\u7403\u7684\u603b\u6570\u662f$S$\u6700\u5927\u503c\u662f$Mx$\u7684\u8bdd\u7b54\u6848\u662f\n\n$$min(S-1,2(S-Mx))$$\n\n\u8bc1\u660e\u7684\u8bdd\u5c31\u662f\u5f53\u6700\u5927\u7684\u989c\u8272\u4e0d\u8fc7\u534a\u7684\u65f6\u5019\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u91c7\u53d6\u8fd9\u6837\u7684\u4e00\u79cd\u8d2a\u5fc3\u7b56\u7565\u5c31\u662f\u6bcf\u6b21\u90fd\u9009\u548c\u4e0a\u4e00\u4e2a\u7403\u989c\u8272\u4e0d\u540c\u7684\u7403\u5f53\u4e2d\u6700\u591a\u7684\u4e00\u4e2a\u7403\u6765\u4f5c\u4e3a\u6211\u4eec\u653e\u7684\u4e0b\u4e00\u4e2a\u7403\uff0c\u7531\u4e8e\u6700\u5927\u989c\u8272\u79cd\u7c7b\u4e0d\u4f1a\u8fc7\u534a\u56e0\u6b64\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u6210\u529f\u6784\u9020\u4e00\u79cd\u65b9\u6848\u51fa\u6765\n\u6b64\u65f6\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f$S-1$\n\n\u4f46\u662f\u5982\u679c\u6700\u5927\u79cd\u7c7b\u8fc7\u534a\u7684\u8bdd\u6211\u4eec\u4f1a\u53d1\u73b0\u521a\u624d\u7684\u505a\u6cd5\u662f\u5931\u6548\u7684,\u6b64\u65f6\u6211\u4eec\u7684\u7b56\u7565\u5c31\u662f\u628a\u8fd9\u79cd\u6700\u5927\u7684\u989c\u8272\u770b\u6210\u4e00\u79cd\u989c\u8272\u7136\u540e\u5c06\u5176\u4f59\u7684\u6240\u6709\u989c\u8272\u90fd\u63d2\u5165\u8fd9\u79cd\u6700\u5927\u7684\u989c\u8272\u5f53\u4e2d,\u91c7\u7528\u8fd9\u79cd\u7b56\u7565\u6784\u9020\u51fa\u6765\u7684\u7ed3\u679c\u5c31\u662f$2(S-Mx)$\u4e86\n\n\u56e0\u6b64\u9898\u76ee\u8ba9\u6211\u4eec\u8ba1\u7b97\u7684\u5f0f\u5b50\u5c31\u662f\u4e86\n\n$$\\sum_{i=1}^{n}min(S_{i}-1,2(S_{i}-Mx_{i}))$$\n\n\u4fee\u6539\u76f8\u5f53\u4e8e\u5c06\u4e00\u6761\u4ee51\u4e3a\u7aef\u70b9\u7684\u94fe\u4e0a\u7684$S_{i}$\u503c\u52a0\u4e0a$w$\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u7531\u4e8e\u6211\u4eec\u7ef4\u62a4\u7684\u5f0f\u5b50\u662f\u4e00\u4e2a\u53d6min\u7684\u64cd\u4f5c,\u5728\u6211\u4eec\u6211\u4eec\u53d6min\u7684\u5206\u754c\u7ebf\u5c31\u662f$S+1 \\leq 2Mx_{i}$\u5982\u679c\u8fd9\u4e2a\u5f0f\u5b50\u4e3a\u771f\u90a3\u4e48\u6211\u4eec\u7684\u7b54\u6848\u5c06\u4e0d\u518d\u662f$S-1$\u800c\u662f$2(S-Mx)$\u4e86\n\n\u6309\u7406\u8bf4\u5982\u679c\u662f\u4e00\u822c\u7684\u4fee\u6539\u6211\u4eec\u662f\u6ca1\u529e\u6cd5\u7ef4\u62a4\u8fd9\u4e2a\u5f0f\u5b50\u7684\n\n\u4f46\u662f\u6211\u4eec\u7684\u4fee\u6539\u6709\u4e2a\u76f8\u5f53\u5f3a\u7684\u6027\u8d28\u5c31\u662f\u6211\u4eec\u6bcf\u6b21\u90fd\u7ed9\u6574\u6761\u94fe\u52a0\u4e0a\u4e00\u4e2a\u6570\u5b57$w$\n\n**\u6ce8\u610f\u8fd9\u91cc\u662f\u52a0\u800c\u4e0d\u662f\u51cf**\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u5bf9\u7236\u5b50$(u,v)$\u5982\u679cv\u662fu\u7684\u5e26\u6743siz\u6700\u5927\u7684\u5b50\u6811\u7684\u8bdd,v\u548cu\u7684siz\u540c\u65f6\u88ab\u52a0\u4e0a\u4e00\u4e2a\u503cv\u4f9d\u7136\u662fu\u7684\u6700\u5927\u7684\u5b50\u6811\uff0c\u5e76\u4e14\u5982\u679cv\u5df2\u7ecf\u5df2\u7ecf\u662fu\u7684\u8fc7\u534a\u7684\u5b50\u6811\u7684\u8bdd\uff0cv\u548cu\u7684siz\u540c\u65f6\u52a0\u4e0a\u4e00\u4e2a\u503cv\u4f9d\u7136\u662fu\u7684\u8fc7\u534a\u5b50\u6811\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4eff\u7167\u6811\u94fe\u5256\u5206\u4e2d\u7684\u8f7b\u91cd\u8fb9\u5b9a\u4e49,\u5b9a\u4e49\u5e26\u6743\u610f\u4e49\u4e0b\u7684\u8f7b\u91cd\u8fb9\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u5b69\u5b50\u5f53\u4e2d,\u5e26\u6743siz\u6700\u5927\u7684\u70b9\u4e3a\u8fd9\u4e2a\u70b9\u7684**\u91cd\u513f\u5b50**\n\n\u6211\u4eec\u5b9a\u4e49\u5982\u679c\u4e00\u4e2a\u70b9\u91cd\u513f\u5b50\u7684siz\u5df2\u7ecf\u8fc7\u534a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u548c\u5b83\u7684\u91cd\u513f\u5b50\u4e4b\u95f4\u7684\u8fb9\u4e3a\u4e00\u6761**\u91cd\u8fb9**,\u5176\u4f59\u7684\u8fb9\u5168\u90e8\u662f\u8f7b\u8fb9\n\n\u6ce8\u610f\u8fd9\u4e2a\u5b9a\u4e49\u4e0b\u4e00\u4e2a\u70b9\u548c\u5b83\u91cd\u513f\u5b50\u4e4b\u95f4\u7684\u8fb9\u53ef\u4ee5\u662f\u4e00\u6761\u8f7b\u8fb9\n\n\u90a3\u4e48\u6211\u4eec\u4f1a\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\u662f\u6bcf\u7ecf\u8fc7\u4e00\u6761\u8f7b\u8fb9\u6240\u5728\u5b50\u6811\u7684\u5e26\u6743siz\u5fc5\u7136\u7ffb\u500d,\u6240\u4ee5\u4efb\u610f\u4e00\u4e2a\u70b9\u52301\u7684\u8def\u5f84\u4e0a\u81f3\u591a\u6709$log(\\sum a_{i})$\u6761\u8f7b\u8fb9\n\n\u8ba9\u6211\u4eec\u63a5\u7740\u89c2\u5bdf\u5f53\u4e00\u5bf9\u7236\u5b50$(u,v)$\u7684siz\u540c\u65f6\u88ab\u52a0\u4e0aw\u7684\u65f6\u5019$u$\u7684\u7b54\u6848\u4f1a\u4f5c\u4f55\u53d8\u6362\n\n\u5982\u679c$(u,v)$\u8fd9\u6761\u8fb9\u662f\u4e00\u6761\u91cd\u8fb9\u7684\u8bdd\u4f60\u4f1a\u53d1\u73b0\u7b54\u6848\u5e76\u4e0d\u4f1a\u88ab\u6539\u52a8,\u540c\u65f6$u$\u7684\u91cd\u513f\u5b50\u548c\u8f7b\u91cd\u8fb9\u5173\u7cfb\u4e5f\u4e0d\u4f1a\u88ab\u6539\u53d8\n\n\u6240\u4ee5\u7b54\u6848\u53d1\u751f\u53d8\u5316\u7684\u8fb9\u5fc5\u7136\u662f\u4e00\u6761\u8f7b\u8fb9,\u91cd\u513f\u5b50\u548c\u8f7b\u91cd\u8fb9\u5173\u7cfb\u53d1\u751f\u6539\u53d8\u7684\u8fb9\u4e5f\u5fc5\u7136\u662f\u4e00\u6761\u8f7b\u8fb9\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230$1~u$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8f7b\u8fb9\u7136\u540e\u66b4\u529b\u4fee\u6539\u4e00\u4e0b\u5373\u53ef\u5b8c\u6210\u7b54\u6848\u7684\u7ef4\u62a4\u5de5\u4f5c\u4e86\n\n\u95ee\u9898\u662f\u6211\u4eec\u5982\u4f55\u9ad8\u6548\u627e\u5230\u4e00\u6761\u8f7b\u8fb9\u5462\uff1f\n\n\u7b54\u6848\u662f\u4f7f\u7528\u7c7b\u4f3c\u4e8elct\u4e00\u6837\u7684\u6570\u636e\u7ed3\u6784(\u4f46\u662f\u53ea\u662f\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e0d\u662flct)\n\n\u6211\u4eec\u4fdd\u8bc1\u5728\u540c\u4e00\u6761\u91cd\u94fe\u4e2d\u7684\u70b9\u90fd\u5728\u540c\u4e00\u4e2asplay\u5f53\u4e2d,\u5e76\u4e14\u6309\u7167\u6df1\u5ea6\u6392\u597d\u5e8f,\u90a3\u4e48\u6211\u4eec\u5bfb\u627e\u4e0b\u4e00\u6761\u8f7b\u8fb9\u7684\u64cd\u4f5c\u5c31\u662f\u5728splay\u5f53\u4e2d\u67e5\u627e\u6700\u5c0f\u503c,\u5c06\u94fe\u4e0a\u7684\u70b9\u52a0\u4e0a\u4e00\u4e2a\u503c\u53ef\u4ee5\u901a\u8fc7\u6253\u6807\u8bb0\u6765\u5b9e\u73b0,\u5c06\u8f7b\u8fb9\u53d8\u6210\u91cd\u8fb9\u5c31\u662f\u5c06\u4e24\u4e2asplay\u63a5\u5728\u4e00\u8d77,\u5c06\u91cd\u8fb9\u53d8\u6210\u8f7b\u8fb9\u5c31\u662f\u4e00\u4e2asplay\u5206\u88c2\u6210\u4e24\u4e2a\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ea\u9700\u8981\u5728\u82e5\u5e72\u4e2asplay\u5f53\u4e2d\u4e0d\u505c\u7684\u67e5\u627e\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u5b8c\u6210\u5bfb\u627e\u8f7b\u8fb9\u7684\u4efb\u52a1\u4e86\n\n\u53e6\u5916\u4e00\u70b9\u5c31\u662f\u6309\u7167\u6211\u4eec\u521a\u624d\u7684\u5b9a\u4e49\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u70b9\u548c\u5b83\u7684\u91cd\u513f\u5b50\u4e4b\u95f4\u8fde\u4e86\u4e00\u6761\u8f7b\u8fb9\u4f46\u662f\u8ba1\u7b97\u7b54\u6848\u5374\u6309\u7167$2(S-Mx)$\u8ba1\u7b97\u7684\u60c5\u51b5,\u8fd9\u79cd\u60c5\u51b5\u7684\u51fa\u73b0\u662f\u56e0\u4e3a\u5b83\u81ea\u5df1\u7684\u70b9\u6743\u6bd4\u8f83\u5927\u8fc7\u534a\u4e86\u800c\u4e0d\u662f\u5b69\u5b50\u7684\u70b9\u6743\u8fc7\u5927\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u7ef4\u62a4\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u9ebb\u70e6\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7279\u5224\u6389\u8fd9\u79cd\u60c5\u51b5\n\n\u5177\u4f53\u6765\u8bb2\u6211\u4eec\u5728\u68c0\u67e5\u4e00\u6761\u8f7b\u8fb9$(u,v)$\u662f\u5426\u4f1a\u6210\u4e3a\u91cd\u8fb9\u7684\u65f6\u5019\u6211\u4eec\u5148\u5224\u4e00\u4e0b\u662f\u5426\u51fa\u73b0\u81ea\u5df1\u7684\u70b9\u6743\u8fc7\u534a\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u4e86\u5c31\u76f4\u63a5\u4fee\u6539\u7b54\u6848\u800c\u4e0d\u662f\u7ee7\u7eed\u6211\u4eec\u7684\u5206\u60c5\u51b5\u8ba8\u8bba\n\n\u8fd8\u6709\u4e00\u4e9b\u9700\u8981\u753b\u56fe\u624d\u80fd\u8bf4\u6e05\u695a\u7684\u7ec6\u8282\u5199\u6ce8\u91ca\u91cc\u4e86\n\n\u5269\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u5199\u4e00\u4e2a\u6bd4\u8f83\u7b80\u6613\u7684splay\u4e86\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=4*1e5+10;typedef long long ll;\ntemplate <class T>\nvoid read(T &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n    if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n    x = x * 10 + c - '0';\n    if(op) x = -x;\n}\nint n;int m;ll ans;\nstruct splaytree//\u7b80\u6613splay\u819c\u677f \n{\n    int s[N][2];int fa[N];ll val[N];ll add[N];int st[N];int tp;\n    inline ll& operator [](const int& x){return val[x];}\n    inline int gc(const int& x){return s[fa[x]][1]==x;}\n    inline void pd(const int& x)\n    {\n        if(add[x]==0)return;val[s[x][0]]+=add[x];val[s[x][1]]+=add[x];\n        add[s[x][0]]+=add[x];add[s[x][1]]+=add[x];add[x]=0;\n    }\n    inline void rt(const int& x)\n    {\n        int d=fa[x];int t=gc(x);s[d][t]=s[x][t^1];fa[s[x][t^1]]=d;\n        s[fa[d]][gc(d)]=x;fa[x]=fa[d];s[x][t^1]=d;fa[d]=x;\n    }\n    inline void rtup(const int& x){rt(gc(x)^gc(fa[x])?x:fa[x]);rt(x);}\n    inline void splay(const int& x)\n    {\n        tp=0;for(int p=x;p;p=fa[p])st[++tp]=p;for(int i=tp;i>=1;i--)pd(st[i]);\n        for(;fa[fa[x]]&&fa[x];rtup(x));if(fa[x])rt(x);\n    }\n    inline int gmi(int x){for(;s[x][0];x=s[x][0]);splay(x);return x;}\n    inline void app(const int& u,const int& w){val[u]+=w;add[u]+=w;}\n    inline void meg(const int& x,const int& y){s[x][0]=y;fa[y]=x;}\n    inline void spi(const int& x){splay(x);fa[s[x][1]]=0;s[x][1]=0;}\n}spt;\nint v[2*N];int x[2*N];int ct;int al[N];ll w[N];ll nv[N];ll ola[N];int h[N];int fa[N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\ninline void dfs(int u,int f)//dfs\u4e00\u904d\u9884\u5904\u7406\u4fe1\u606f \n{\n    for(int i=al[u];i;i=x[i])\n        if(v[i]!=f)dfs(v[i],u),w[u]+=w[v[i]],h[u]=(w[h[u]]<w[v[i]])?v[i]:h[u];spt[u]=w[u];\n    if((nv[u]<<1)>=w[u]+1)ola[u]=(w[u]-nv[u])<<1;\n    else if((w[h[u]]<<1)>=w[u]+1)ola[u]=(w[u]-w[h[u]])<<1,spt.meg(h[u],u);\n    else ola[u]=w[u]-1;ans+=ola[u];fa[u]=f;\n}\ninline void subsolve(int u,int v,ll w)//\u68c0\u67e5\u4e00\u6761\u8f7b\u8fb9\u662f\u5426\u6210\u4e3a\u91cd\u8fb9 \n{\n    spt.splay(u);spt.splay(h[u]);spt.app(u,w);ans-=ola[u];//\u4fee\u6539 \n    if((nv[u]<<1)>=spt[u]+1)ola[u]=(spt[u]-nv[u])<<1;//\u68c0\u67e5\u70b9\u6743\u662f\u5426\u8fc7\u534a \n    else if(spt[v]>spt[h[u]])//\u5982\u679c\u6210\u4e3a\u91cd\u513f\u5b50 \n    {\n        h[u]=v;spt.spi(u);//\u68c0\u6d4b\u662f\u5426\u6210\u4e3a\u91cd\u8fb9 \n        if((spt[v]<<1)>=spt[u]+1)ola[u]=(spt[u]-spt[v])<<1,spt.meg(v,u);\n        else ola[u]=spt[u]-1;\n    }\n    else if((spt[h[u]]<<1)>=spt[u]+1)ola[u]=(spt[u]-spt[h[u]])<<1;//\u68c0\u6d4b\u91cd\u8fb9\u662f\u5426\u5408\u6cd5 \n    else ola[u]=spt[u]-1,spt.spi(u);ans+=ola[u];\n}\ninline void modify(int u,ll w)\n{\n    ans-=ola[u];nv[u]+=w;//\u4fee\u6539 \n    if(h[u])//\u7279\u5224u\u5904\u7684\u8f7b\u91cd\u8fb9\u53d8\u5316 \n    {\n        spt.splay(u);spt.splay(h[u]);spt.app(u,w);\n        if((nv[u]<<1)>=spt[u]+1)ola[u]=(spt[u]-nv[u])<<1,spt.spi(u);\n        else if((spt[h[u]]<<1)>=spt[u]+1)ola[u]=(spt[u]-spt[h[u]])<<1;\n        else ola[u]=spt[u]-1,spt.spi(u);\n    }else spt.splay(u),spt.app(u,w);ans+=ola[u];//\u5411\u4e0a\u8df3\u8f7b\u8fb9 \n    for(int p=spt.gmi(u);fa[p];p=spt.gmi(fa[p]))subsolve(fa[p],p,w);\n}\nint main()\n{\n    read(n);read(m);\n    for(int i=1;i<=n;i++)read(w[i]);\n\tfor(int i=1;i<=n;i++)nv[i]=w[i];\n    for(int i=1,u,v;i<n;i++)read(u),read(v),add(u,v),add(v,u);dfs(1,0);\n    printf(\"%lld\\n\",ans);\n    for(int i=1,u,w;i<=m;i++)\n    {read(u),read(w),modify(u,w),printf(\"%lld\\n\",ans);}return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```",
        "postTime": 1539519862,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    },
    {
        "content": "[[Luogu4338]](https://www.luogu.org/problemnew/show/P4338)  [[BZOJ5212]](https://www.lydsy.com/JudgeOnline/problem.php?id=5212)\n\n[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/lizehon/p/10519171.html)\u67e5\u770b\u6548\u679c\u66f4\u4f73\n\n\u9644\u5e26[LCT\u5c0f\u7ed3](https://www.cnblogs.com/lizehon/p/10622022.html) , \u4e0d\u559c\u52ff\u55b7\n\n\n### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u6811,\u7ed9\u5b9a\u6bcf\u4e00\u4e2a\u70b9\u7684 $access$ \u6b21\u6570,\u8ba1\u7b97\u8f7b\u91cd\u94fe\u5207\u6362\u6b21\u6570\u7684\u6700\u5927\u503c,\u5e26\u4fee\u6539.\n\n### \u5148\u8003\u8651\u4e0d\u5e26\u4fee\u6539\u600e\u4e48\u505a\n\n\u5047\u8bbe $u$ \u7684\u5b50\u6811\u53d1\u751f\u4e86\u4e24\u6b21 $access$ , \u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u6b21 $access$ \u7684\u70b9\u6765\u81ea $u$ \u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u513f\u5b50\u7684\u5b50\u6811 , \u7b54\u6848\u624d\u4f1a $+1$\n\n\u8981\u4f7f\u5f97\u7b54\u6848\u6700\u5927 , \u5c31\u662f\u5c3d\u91cf\u8ba9\u6240\u6709\u76f8\u90bb\u53d1\u751f\u7684 $access$ \u90fd\u6765\u81ea\u4e0d\u540c\u5b50\u6811\n\n\u628a\u540c\u7c7b\u578b\u7684\u6570\u632a\u5230\u4e00\u8fb9\u5c31\u662f\u5f53 $2\\times h\\ge t+1$ \u65f6,\u7b54\u6848\u662f $2(t-h)$ ,\u5426\u5219\u662f $t-1$\n\n### \u8003\u8651\u5f85\u4fee\u6539\u600e\u4e48\u505a\n\n\u4ee4$ f_i$\u8868\u793a $i$ \u7684\u5b50\u6811 access \u7684\u603b\u6b21\u6570,\u5982\u679c $2f_i\\ge f_{fa_i}+1$ \u90a3\u4e48\u8fde\u5b9e\u8fb9 $(i,fa_i)$ \u5176\u4ed6\u7684\u90fd\u662f\u865a\u8fb9\n\n\u5982\u679c\u628a$i$\u5b50\u6811\u4e2d\u7684\u70b9$j$\u6743\u503c\u52a0\u4e0a$w$ , \u5219\u53ea\u4f1a\u5f71\u54cd$j$\u5230\u6839\u8282\u70b9\u8def\u5f84\u7684\u7b54\u6848\u548c\u865a\u5b9e\u8fb9\u5173\u7cfb , \n\n\u56e0\u4e3a $2(f_i+w)\\ge(f_{fa_i}+w)+1$\u6240\u4ee5\u5b9e\u8fb9\u8fd8\u662f\u5b9e\u8fb9 , \u5e76\u4e14\u7b54\u6848\u4e0d\u4f1a\u53d8\u5316\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u8def\u5f84\u4e0a\u7684\u865a\u8fb9\u8fdb\u884c(\u66b4\u529b)\u4fee\u6539\u5c31\u597d\u4e86 , \u7136\u540e $ans+=$ \u8fd9\u4e2a\u70b9\u66f4\u65b0\u540e\u7684\u7b54\u6848 $-$\u66f4\u65b0\u524d\u7684\u7b54\u6848\n\n\u8fd9\u9898\u96be\u5728\u6784\u9020\u5b9e\u513f\u5b50(\u8fb9)\u548c\u865a\u513f\u5b50(\u8fb9) , \u6ce8\u610f\u5230\u865a\u8fb9\u53ea\u6709$log$\u6761,\u6240\u4ee5\u5982\u679c\u8f6c\u5316\u4e3a\u53ea\u9700\u8981\u4fee\u6539\u865a\u513f\u5b50(\u8fb9)\u7684\u4fe1\u606f,\u5269\u4e0b\u7684\u901a\u8fc7$splay$\u6216\u8005\u5176\u4ed6\u4e00\u4e9b\u64cd\u4f5c\u5b8c\u6210\u5c31\u63a5\u8fd1\u6b63\u89e3\u4e86\n\n**\u672c\u9898\u4e2d\u6709\u4e00\u4e2a\u8d2a\u5fc3 , \u5c31\u662f\u5b50\u6811\u4e2d$size>=$\u81ea\u5df1\u7684\u4e00\u534a\u7684\u70b9\u7684\u8d21\u732e\u7684\u91cd\u8981\u6027 , \u8fd9\u4e2a\u70b9\u518d\u5927\u4e5f\u65e0\u6cd5\u5f71\u54cd\u7b54\u6848\u4e86 , \u8f6c\u5316\u4e3a\u5b9e\u513f\u5b50(\u8fb9)\u5bf9\u5f53\u524d\u70b9\u7684\u7b54\u6848\u65e0\u5f71\u54cd , \u5176\u4ed6\u7684\u5c31\u90fd\u5b9a\u4e49\u4e3a\u8f7b\u8fb9**\n\n\u4fee\u6539\u662f\u5c31\u662f$splay+$\u66b4\u529b\u4e2d\u7684\u5206\u7c7b\u8ba8\u8bba\n\n\u6ce8\u610f : \u5bf9\u4e8e$rs$\u53d8\u4e3a\u865a\u513f\u5b50\u548c$y$\u53d8\u4e3a\u5b9e\u513f\u5b50\u7684\u5224\u65ad\u90fd\u8981\u8003\u8651\u6e05\u695a\n\n\u8fd8\u6709\u4e00\u4e2a\u7279\u522b\u5bb9\u6613\u5ffd\u89c6\u7684\u70b9 : \u4e3a\u4e86\u4f7f\u5d1b\u8d77\u8fc7\u7a0b\u4e2d\u6218\u4e89\u6b21\u6570\u6700\u591a , \u5c3d\u91cf\u8981\u8ba9\u6240\u6709\u76f8\u90bb\u53d1\u751f\u7684$access$\u90fd\u6765\u81ea\u4e0d\u540c\u7684\u5b50\u6811 , \u4e8e\u662f\u7edf\u8ba1$maxp$\u5fc5\u987b\u8003\u8651$u$\u8fd9\u4e2a\u70b9 , \u5426\u5219\u53ea\u6709$70$\u5206\n\n\u53ef\u89c1\u590d\u6742\u7684\u9898\u76ee\u4e00\u5b9a\u8981\u5bf9\u6bcf\u4e2a\u5b50\u95ee\u9898\u90fd\u5206\u7c7b\u6e05\u695a , \u7279\u522b\u662f **\u7aef\u70b9 , \u8fb9\u754c , \u6839\u8282\u70b9 , \u53f6\u8282\u70b9** \u8fd9\u4e9b\u5730\u65b9\u4e00\u822c\u90fd\u8981\u7279\u5224\n\n\u5426\u5219\u751a\u81f3\u53ef\u80fd\u505a\u4e0d\u51fa,\u6bd4\u5982[[HDU4035]Maze](https://www.cnblogs.com/lizehon/p/10485665.html)\u548c[[HDU4089]Activation](https://www.cnblogs.com/lizehon/p/10486377.html)\n\n**\u96be\u9898\u5c31\u662f\u7b80\u5355\u9898\u7684\u53e0\u52a0** , $ZJOI$\u7684\u9898\u771f\u795e\u4ed9\n\n\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define Debug(x) cout<<#x<<\"=\"<<x<<endl\nusing namespace std;\ntypedef long long LL;\nconst int INF=1e9+7;\ninline LL read(){\n    register LL x=0,f=1;register char c=getchar();\n    while(c<48||c>57){if(c=='-')f=-1;c=getchar();}\n    while(c>=48&&c<=57)x=(x<<3)+(x<<1)+(c&15),c=getchar();\n    return f*x;\n}\n\nconst int MAXN=4e5+5;\nconst int MAXM=8e5+5;\n\nstruct Edge{\n    int v,next;\n}e[MAXM];\nint first[MAXN],Ecnt=1;\ninline void Add_edge(int u,int v){\n    e[++Ecnt]=(Edge){v,first[u]};\n    first[u]=Ecnt;\n}\n\nint n,m;\nLL ans;\n\nnamespace LCT{\n    LL sum[MAXN],aux[MAXN],val[MAXN];\n    int ch[MAXN][2],par[MAXN];\n#define ls ch[rt][0]\n#define rs ch[rt][1]\n    inline bool chk(int x){return ch[par[x]][1]==x;}\n    inline bool nrt(int x){return ch[par[x]][0]==x||ch[par[x]][1]==x;}\n    inline void pushup(int rt){sum[rt]=sum[ls]+sum[rs]+val[rt]+aux[rt];}//\u5168\u90e8\u52a0\u8d77\u6765\n    inline void rotate(int x){\n        int y=par[x],z=par[y],k=chk(x),w=ch[x][k^1];\n        ch[y][k]=w,par[w]=y;\n        if(nrt(y)) ch[z][chk(y)]=x; par[x]=z;\n        ch[x][k^1]=y,par[y]=x;\n        pushup(y);pushup(x);\n    }\n    inline void splay(int x){\n        while(nrt(x)){\n            int y=par[x];\n            if(nrt(y)){\n                if(chk(x)==chk(y)) rotate(y);\n                else rotate(x);\n            }\n            rotate(x);\n        }\n    }\n#undef ls\n#undef rs\n}using namespace LCT;\n\n//\u5982\u679c\u6309\u5e38\u89c4\u5199\u6cd5\u4f1a\u9519[https://www.luogu.org/recordnew/show/17153906]\n//\u4e3a\u4e86\u4f7f\u5d1b\u8d77\u8fc7\u7a0b\u4e2d\u6218\u4e89\u6b21\u6570\u6700\u591a,\u5c3d\u91cf\u8981\u8ba9\u6240\u6709\u76f8\u90bb\u53d1\u751f\u7684access\u90fd\u6765\u81ea\u4e0d\u540c\u7684\u5b50\u6811\n//\u4e8e\u662f\u7edf\u8ba1maxp\u5fc5\u987b\u8003\u8651u\u8fd9\u4e2a\u70b9\n/*inline void dfs(int u,int pre){\n    int maxp=0;\n    sum[u]=val[u],par[u]=pre;\n    for(int i=first[u];i;i=e[i].next){\n        int v=e[i].v;\n        if(v==pre) continue;\n        dfs(v,u);\n        sum[u]+=sum[v];\n        if(sum[v]>sum[maxp]) maxp=v;\n    }\n    ans+=min(sum[u]-1,2*(sum[u]-sum[maxp]));\n    if(sum[maxp]*2>=sum[u]+1) ch[u][1]=maxp;\n    aux[u]=sum[u]-val[u]-sum[ch[u][1]];\n}*/\n\ninline void dfs(int u,int pre){\n    LL maxp=val[u];int p=0;\n    sum[u]=val[u],par[u]=pre;\n    for(int i=first[u];i;i=e[i].next){\n        int v=e[i].v;\n        if(v==pre) continue;\n        dfs(v,u);\n        sum[u]+=sum[v];\n        if(sum[v]>maxp) maxp=sum[p=v];\n    }\n    ans+=min(sum[u]-1,2*(sum[u]-maxp));\n    if(maxp*2>=sum[u]+1) ch[u][1]=p;//\u5b58\u91cd\u513f\u5b50\n    aux[u]=sum[u]-val[u]-sum[ch[u][1]];//\u865a\u8fb9\u7684size\n}\n\n#define ls ch[u][0]\n#define rs ch[u][1]\ninline LL calc(int u,LL total,LL weight){\n    if(rs) return (total-weight)*2;\n    else if(val[u]*2>=total+1) return(total-val[u])*2;\n    else return total-1;\n}\n\ninline void modify(int u,int w){\n    splay(u);\n    LL total=sum[u]-sum[ls],weight=sum[rs];\n    ans-=calc(u,total,weight);\n    sum[u]+=w,val[u]+=w,total+=w;\n    if(weight*2<=total) aux[u]+=weight,rs=0;//\u53d8\u4e3a\u865a\u8fb9\n    ans+=calc(u,total,weight);\n    pushup(u);\n    //access\n\t//\u91cd\u70b9\u8fd8\u662f\u7ef4\u62a4\u865a\u8fb9\u6216\u865a\u513f\u5b50\u4fe1\u606f,\u5373access\n    int v;\n    for(u=par[v=u];u;u=par[v=u]){\n        splay(u);\n        total=sum[u]-sum[ls],weight=sum[rs];\n        ans-=calc(u,total,weight);\n        sum[u]+=w,aux[u]+=w,total+=w;//\u865a\u8fb9size+=w;\n        if(weight*2<=total) aux[u]+=weight,rs=0,weight=0;\n        if(sum[v]*2>=total+1) aux[u]-=sum[v],rs=v,weight=sum[v];\n        ans+=calc(u,total,weight);\n        pushup(u);\n    }\n}\n#undef ls\n#undef rs\n\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=n;i++) val[i]=read();\n    for(int i=1;i<=n-1;i++){\n        int x=read(),y=read();\n        Add_edge(x,y);\n        Add_edge(y,x);\n    }\n    dfs(1,0);\n    printf(\"%lld\\n\",ans);\n    for(int i=1;i<=m;i++){\n        int x=read(),y=read();\n        modify(x,y);\n        printf(\"%lld\\n\",ans);\n    }\n}\n```",
        "postTime": 1553869204,
        "uid": 18739,
        "name": "lizehon",
        "ccfLevel": 0,
        "title": "[ZJOI2018]\u5386\u53f2"
    },
    {
        "content": "[\u5728\u535a\u5ba2\u67e5\u770b](https://www.cnblogs.com/chenxiaoran666/p/BZOJ5212.html)\n\n**\u5927\u81f4\u9898\u610f\uff1a** \u7ed9\u5b9a\u4e00\u68f5\u6811\u6bcf\u4e2a\u8282\u70b9$Access$\u7684\u6b21\u6570\uff0c\u6c42\u6700\u5927\u865a\u5b9e\u94fe\u5207\u6362\u6b21\u6570\uff0c\u5e26\u4fee\u6539\u3002\n\n------\n\n#### \u4ec0\u4e48\u662f$Access$\uff1f\n\n\u63a8\u8350\u4f60\u5148\u53bb\u5b66\u4e00\u5b66[$LCT$](https://www.cnblogs.com/chenxiaoran666/p/LCT.html)\u5427\u3002\n\n------\n\n#### \u521d\u59cb\u5316\uff08\u4e0d\u5e26\u4fee\u6539\u7684\u505a\u6cd5\uff09\n\n\u9996\u5148\u8003\u8651\u521d\u59cb\u5316\uff0c\u5373\u4e0d\u5e26\u4fee\u6539\u7684\u505a\u6cd5\uff0c~~\u8c8c\u4f3c\u8fd9\u6837\u5c31\u670930\u5206\u4e86~~\u3002\n\n\u5148\u8981\u6ce8\u610f\u5230\u4e00\u70b9\uff1a\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5b83\u7684\u7b54\u6848\u662f**\u72ec\u7acb**\u7684\uff0c\u4e14\u53ea\u53d7\u5176**\u5b50\u6811\u5185\u7684\u8282\u70b9**\u5f71\u54cd\u3002\n\n\u8fd9\u4e48\u4e00\u8bf4\uff0c\u5e94\u8be5\u5c31\u4e0d\u96be\u60f3\u5230**\u6811\u5f62$DP$**\u4e86\u5427\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u76f8\u90bb$Access$\u64cd\u4f5c\uff0c\u663e\u7136\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u6b21$Access$\u6765\u81ea\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u8282\u70b9\u7684\u5b50\u6811\uff0c\u624d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u7b54\u6848\u5462\uff1f\n\n\u8bbe$tot_i$\u4e3a**\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684$Access$\u64cd\u4f5c\u603b\u6b21\u6570**\uff0c$Sum=\\sum tot_{son}$\uff0c$Max=max\\{tot_{son}\\}$\u3002\n\n\u5219\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $2*Max\\le Sum$\u3002\n\n   \u5219\u663e\u7136\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21\u9009\u62e9\u4e24\u4e2a**\u6765\u81ea\u4e0d\u540c\u5b50\u6811\u7684\u8282\u70b9**\u4f5c\u4e3a\u76f8\u90bb\u7684$Access$\u8282\u70b9\uff0c\u56e0\u6b64\u6bcf\u4e00\u6b21$Access$\u90fd\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u8d21\u732e\u3002\u56e0\u6b64\u6b64\u65f6\u7684\u7b54\u6848\u5c31\u662f$Sum-1$\u3002\n\n   \u4f8b\u5982\uff1a$tot_x=3,tot_y=4,tot_z=5$\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\uff1a$xyxzxzyzyzyz$\u3002\n\n2. $2*Max>Sum$\u3002\n\n   \u6b64\u65f6\u6211\u4eec\u6bcf\u6b21\u5fc5\u7136\u5148\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a**\u6765\u81ea\u975e$Max$\u8282\u70b9\u5b50\u6811\u5185\u7684\u8282\u70b9**\u4e0e\u4e00\u4e2a**\u6765\u81ea$Max$\u8282\u70b9\u5b50\u6811\u5185\u7684\u8282\u70b9**\u4f5c\u4e3a\u76f8\u90bb\u7684$Access$\u8282\u70b9\uff0c\u7136\u540e\u5c06\u591a\u4f59\u7684\u6765\u81ea$Max$\u8282\u70b9\u5b50\u6811\u5185\u7684\u8282\u70b9\u5168\u90e8\u653e\u5728\u6700\u540e\u9762\uff0c\u8fd9\u6837\u4e00\u6765\u9020\u6210\u8d21\u732e\u5c31\u662f**\u975e$Max$\u8282\u70b9\u5b50\u6811\u5185\u7684$Access$\u64cd\u4f5c\u603b\u6b21\u6570$*2$**\uff0c\u5373$2(Sum-Max)$\u3002\n\n   \u4f8b\u5982\uff1a$tot_x=2,tot_y=3,tot_z=7$\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u64cd\u4f5c\uff1a$xzxzyzyzyzzz$\u3002\u6613\u53d1\u73b0\u53ea\u6709\u524d\u9762$10$\u6b21\u64cd\u4f5c\u6709\u8d21\u732e\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u6210\u521d\u59cb\u5316\u4e86\u3002\n\n------\n\n#### \u8003\u8651\u4fee\u6539\n\n\u65e2\u7136\u6d89\u53ca\u5230$Access$\u64cd\u4f5c\uff0c\u6211\u4eec\u81ea\u7136\u8981\u7528$LCT$\u6765\u505a\u8fd9\u9053\u9898\u5566... ...\n\n\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684$LCT$\u7684$Access$\u51fd\u6570\u8981\u52a0\u4e0a\u4e00\u5927\u5806\u7684\u5224\u65ad\u3002\n\n\u8fd9\u91cc\u8981\u7ed9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4$3$\u4e2a\u503c\uff1a$Val,Sum,Calc$\u3002\u5176\u4e2d$Val$\u5b58\u50a8**\u5f53\u524d\u8282\u70b9\u7684$Access$\u6b21\u6570**\uff0c$Sum$\u5b58\u50a8\u4ee5**\u5728\u5b9e\u9645\u6811\u4e2d\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811**\u548c**\u5728$Splay$\u4e2d\u4ee5\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811**\u7684$Access$\u64cd\u4f5c\u603b\u6570\uff08\u5305\u62ec**\u5f53\u524d\u8282\u70b9**\uff09\uff0c$Calc$\u5b58\u50a8**\u5728\u5b9e\u9645\u6811\u4e2d\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811**\u9664\u53bb**\u5728$Splay$\u4e2d\u4ee5\u5f53\u524d\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811**\u540e\u7684$Access$\u64cd\u4f5c\u603b\u6570\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c$PushUp$\u65f6\u5c31\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u8282\u70b9\u7684$Sum$\u5c31\u7b49\u4e8e\u5176**\u5de6\u53f3\u513f\u5b50$Sum$\u4e4b\u548c**\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u7684$Val$\u548c$Calc$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5c06\u5176\u5411**$Access$\u64cd\u4f5c\u603b\u6570$*2>$\u5f53\u524d\u8282\u70b9$Access$\u64cd\u4f5c\u603b\u6570**\u7684\u5b50\u8282\u70b9\u8fde\u4e00\u6761**\u5b9e\u8fb9**\uff08\u82e5\u6ca1\u6709\u5219\u4e0d\u8fde\uff09\uff0c\u5176\u4f59\u8282\u70b9\u8fde**\u865a\u8fb9**\u3002\n\n\u4e0b\u9762\uff0c\u8ba9\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55$Access$\u3002\n\n\u6211\u4eec\u9700\u8981\u8bb0\u4e09\u4e2a\u53d8\u91cf\uff1a$x$\u8868\u793a**\u5f53\u524d\u64cd\u4f5c\u8282\u70b9**\uff0c$son$\u8868\u793a**\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u8282\u70b9**\uff0c$val$\u8868\u793a**\u5f53\u524d\u589e\u52a0\u7684$Access$\u6b21\u6570**\u3002\n\n\u9996\u5148\uff0c\u5c06$x$\u5148$Splay$\u5230\u6839\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u53d8\u91cf$Sum$\u5b58\u4e0b$x$\u7684$Sum$\u503c\u51cf\u53bb\u5176\u5de6\u513f\u5b50\u7684$Sum$\u503c\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u5f97\u5230\u5b9e\u9645\u6811\u4e2d\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u7684$Access$\u64cd\u4f5c\u603b\u6570\u4e86\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06$ans$\u51cf\u53bb\u5f53\u524d\u5b50\u6811\u539f\u5148\u7684\u8d21\u732e\u3002\n\n\u5176\u6b21\uff0c\u5c06$Sum$\uff0c\u5f53\u524d\u8282\u70b9\u7684$Sum$\uff0c\u4ee5\u53ca\u5f53\u524d\u8282\u70b9\u7684$Val/Calc$\uff08\u5982\u679c\u4e3a\u88ab\u4fee\u6539\u8282\u70b9\u5219\u66f4\u65b0$Val$\uff0c\u5982\u679c\u4e3a\u88ab\u4fee\u6539\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9\uff0c\u5219\u66f4\u65b0$Calc$\uff09\u5404\u52a0\u4e0a$val$\u3002\n\n\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5224\u65ad$son$\u662f\u5426\u4e3a\u5f53\u524d\u8282\u70b9\u7684**\u5b9e\u513f\u5b50**\uff0c\u5982\u679c\u662f\uff0c\u5219\u66f4\u65b0\u3002\u6ce8\u610f\u66f4\u65b0\u65f6\u6211\u4eec\u8981\u5c06\u5f53\u524d\u8282\u70b9$Calc$\u5148\u52a0\u4e0a\u539f\u53f3\u513f\u5b50\u7684$Sum$\uff0c\u7136\u540e\u51cf\u53bb$son$\u7684$Sum$\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u5c06$ans$\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u7684\u65b0\u7b54\u6848\uff0c\u7136\u540e\u7ee7\u7eed\u5904\u7406\u5176\u7236\u8282\u70b9\u5373\u53ef\u3002\n\n------\n\n#### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define Type template<typename I>\n#define N 400000\n#define LL long long\n#define add(x,y) (e[++ee].nxt=lnk[x],e[lnk[x]=ee].to=y)\n#define swap(x,y) (x^=y^=x^=y)\nusing namespace std;\nint n,ee,a[N+5],lnk[N+5];\nstruct edge\n{\n    int to,nxt;\n}e[(N<<1)+5];\nclass Class_FIO\n{\n    private:\n        #define Fsize 100000\n        #define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,Fsize,stdin),A==B)?EOF:*A++)\n        #define pc(ch) (FoutSize^Fsize?Fout[FoutSize++]=ch:(fwrite(Fout,1,Fsize,stdout),Fout[(FoutSize=0)++]=ch))\n        #define Isi(x) (typeid(x).name()==typeid(1).name()||typeid(x).name()==typeid(1LL).name())\n        #define Isc(x) (typeid(x).name()==typeid('a').name())\n        int Top,FoutSize;char ch,*A,*B,Fin[Fsize],Fout[Fsize],Stack[Fsize];\n    public:\n        Class_FIO() {A=B=Fin;}\n        Type inline void read(I& x) {x=0;while(!isdigit(ch=tc()));while(x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));}\n        Type inline void write(I x)\n        {\n            if(Isi(x)) {while(Stack[++Top]=x%10+48,x/=10);while(Top) pc(Stack[Top--]);}\n            if(Isc(x)) pc(x);\n        }\n        template<typename I,typename... A> inline void read(I& x,A&... y) {read(x),read(y...);}\n        template<typename I,typename... A> inline void write(I x,A... y) {write(x),write(y...);}\n        inline void clear() {fwrite(Fout,1,FoutSize,stdout),FoutSize=0;}\n}F;\nclass Class_LCT\n{\n    private:\n        #define SIZE N\n        #define PushUp(x) (node[x].Sum=node[x].Val+node[x].Calc+node[node[x].Son[0]].Sum+node[node[x].Son[1]].Sum)\n        #define Rever(x) (swap(node[x].Son[0],node[x].Son[1]),node[x].Rev^=1)\n        #define PushDown(x) (node[x].Rev&&(Rever(node[x].Son[0]),Rever(node[x].Son[1]),node[x].Rev=0))\n        #define Which(x) (node[node[x].Father].Son[1]==x)\n        #define Connect(x,y,d) (node[node[x].Father=y].Son[d]=x)\n        #define IsRoot(x) (node[node[x].Father].Son[0]^x&&node[node[x].Father].Son[1]^x)\n        LL ans;int Stack[SIZE+5];\n        struct Tree\n        {\n            int Op,Father,Rev,Son[2];LL Val,Calc,Sum;\n        }node[SIZE+5];\n        inline void Rotate(int x)\n        {\n            register int fa=node[x].Father,pa=node[fa].Father,d=Which(x);\n            !IsRoot(fa)&&(node[pa].Son[Which(fa)]=x),node[x].Father=pa,Connect(node[x].Son[d^1],fa,d),Connect(fa,x,d^1),PushUp(fa),PushUp(x);\n        }\n        inline void Splay(int x)\n        {\n            register int fa=x,Top=0;\n            while(Stack[++Top]=fa,!IsRoot(fa)) fa=node[fa].Father;\n            while(Top) PushDown(Stack[Top]),--Top;\n            while(!IsRoot(x)) fa=node[x].Father,!IsRoot(fa)&&(Rotate(Which(x)^Which(fa)?x:fa),0),Rotate(x);\n        }\n    public:\n        inline void Init(int x)//\u521d\u59cb\u5316\n        {\n            register int i,v,Pos=x;register LL Max=node[x].Val=a[x];\n            for(i=lnk[x];i;i=e[i].nxt) (v=e[i].to)^node[x].Father&&(node[v].Father=x,Init(v),node[x].Calc+=node[v].Sum,Max<node[v].Sum&&(Max=node[Pos=v].Sum));\n            if(node[x].Sum=node[x].Calc+node[x].Val,(Max<<1)<=node[x].Sum) return (void)(ans+=node[x].Sum-1,node[x].Op=1);//\u82e52*Max<=Sum\uff0c\u5219\u4e3a\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5c06ans\u52a0\u4e0aSum-1\uff0c\u5e76\u6807\u8bb0op\u4e3a1\uff0c\u7136\u540e\u9000\u51fa\u51fd\u6570\n            ans+=node[x].Sum-Max<<1,x^Pos?(node[x].Calc-=node[node[x].Son[1]=Pos].Sum,node[x].Op=2):(node[x].Op=3);//\u5426\u5219\uff0c\u5c06ans\u52a0\u4e0a2*(Sum-Max)\uff0c\u82e5\u627e\u5230\u7684\u4e0d\u662f\u8fd9\u4e2a\u8282\u70b9\u672c\u8eab\uff0c\u5219\u4e3a\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u66f4\u65b0Calc\uff0c\u5e76\u6807\u8bb0op\u4e3a2\uff0c\u5426\u5219\u6807\u8bb0op\u4e3a3\n        }\n        inline void Update(int x,int son,int val)//\u4fee\u6539\n        {\n            Splay(x);//\u5c06\u5176\u65cb\u8f6c\u5230\u6839\n            register LL Sum=node[x].Sum-node[node[x].Son[0]].Sum;//\u8bb0\u5f55\u9664\u53bb\u7956\u5148\u8d21\u732e\u540e\u5f53\u524d\u5b50\u6811\u5185\u7684\u8d21\u732e\n            ans-=node[x].Op^1?Sum-(node[x].Op^3?node[node[x].Son[1]].Sum:node[x].Val)<<1:Sum-1,//\u51cf\u53bb\u539f\u5148\u7684\u8d21\u732e\n            Sum+=val,node[x].Sum+=val,son?(node[x].Calc+=val):(node[x].Val+=val),//\u4fee\u6539\u503c\n            (node[son].Sum<<1)>Sum&&(node[x].Calc+=node[node[x].Son[1]].Sum,node[x].Calc-=node[node[x].Son[1]=son].Sum);\n            if((node[node[x].Son[1]].Sum<<1)>Sum) {ans+=Sum-node[node[x].Son[1]].Sum<<1,node[x].Op=2;goto loop;}\n            node[x].Son[1]&&(node[x].Calc+=node[node[x].Son[1]].Sum,node[x].Son[1]=0);\n            if((node[x].Val<<1)>Sum) {ans+=Sum-node[x].Val<<1,node[x].Op=3;goto loop;}\n            ans+=Sum-1,node[x].Op=1;\n            loop:node[x].Father&&(Update(node[x].Father,x,val),0);//\u7ee7\u7eed\u5904\u7406\u7956\u5148\n        }\n        inline LL GetAns() {return ans;}//\u8fd4\u56de\u7b54\u6848\n}LCT;\nint main()\n{\n    register int query_tot,i,x,y;\n    for(F.read(n,query_tot),i=1;i<=n;++i) F.read(a[i]);\n    for(i=1;i<n;++i) F.read(x,y),add(x,y),add(y,x);\n    LCT.Init(1),F.write(LCT.GetAns(),'\\n');\n    while(query_tot--) F.read(x,y),LCT.Update(x,0,y),F.write(LCT.GetAns(),'\\n');\n    return F.clear(),0;\n}\n```",
        "postTime": 1551674477,
        "uid": 28382,
        "name": "TheLostWeak",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    },
    {
        "content": "\u96be\u5f97\u81ea\u5df1\u60f3\u51fa\u6765\u7684\u9ed1\u9898\uff0c\u796d\u4e4b\u3002\n\n\u6bcf\u4e00\u6b21\u4fee\u6539\u4f1a\u8986\u76d6\u6570\u4e2a\u76f8\u540c\u989c\u8272\u7684\u6bb5\uff0c\u6bcf\u4e2a\u76f8\u540c\u989c\u8272\u7684\u6bb5\u63d0\u4f9b\u4e00\u6b21\u8d21\u732e\uff0c\u6211\u4eec\u8003\u8651\u53ea\u5728\u8fd9\u4e2a\u76f8\u540c\u989c\u8272\u6bb5\u7684\u6df1\u5ea6\u6700\u5927\u5904\u7edf\u8ba1\u8fd9\u4e2a\u8d21\u732e\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jx2gr6y6.png)\n\n\u5982\u8be5\u56fe\u6240\u793a\uff0c\u5f53\u7ea2\u7eff\u4e24\u6b21\u4fee\u6539\u64cd\u4f5c\u53d1\u751f\u65f6\uff0c\u5c06\u5728\u70b9 $3$ \u5904\u7edf\u8ba1\u4e00\u6b21\u8d21\u732e\u3002\n\n\u5bf9\u6bcf\u4e2a\u70b9\u8003\u8651\u5b83\u7684\u8d21\u732e\u3002\u5f53\u4e14\u4ec5\u5f53 **\u5b83\u7684\u5b50\u6811\u4e2d\u53d1\u751f\u4e24\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u4e14\u8fd9\u4e24\u6b21\u4fee\u6539\u64cd\u4f5c\u5c5e\u4e8e\u4e0d\u540c\u989c\u8272\uff0c\u64cd\u4f5c\u4f4d\u7f6e\u5c5e\u4e8e\u4e0d\u540c\u513f\u5b50\u65f6** \u5b83\u4f1a\u63d0\u4f9b\u4e00\u6b21\u8d21\u732e\uff08\u8fd9\u91cc\u6ce8\u610f\u8fd9\u4e2a\u8282\u70b9\u672c\u8eab\u4e5f\u53ef\u4ee5\u88ab\u7b97\u5165\u8d21\u732e\uff09\u3002\n\n\u6211\u4eec\u8bbe\u5f53\u524d\u7684\u70b9\u4e3a $now$ \uff0c\u5c06 $now$ \u7684\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u7684\u6b21\u6570\u548c\u8bbe\u4e3a\u4e00\u7c7b\uff0c\u5c06\u81ea\u5df1\u7684\u6b21\u6570\u8bbe\u4e3a\u4e00\u7c7b\u3002\u6240\u6c42\u7684\u8fd9\u4e2a\u8282\u70b9\u7684\u6700\u5927\u4fee\u6539\u6570\uff0c\u5373\u4e3a\u5c06\u8fd9\u4e9b\u7c7b\u5185\u7684\u5143\u7d20\u4ea4\u9519\u6446\u653e\uff0c\u4f7f\u5f97\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u6240\u5c5e\u7684\u7c7b\u4e0d\u540c\u7684\u60c5\u51b5\u51fa\u73b0\u7684\u6b21\u6570\u6700\u591a\u3002\n\n\u8fd9\u4e2a\u8ba8\u8bba\u672c\u8d28\u4e0a\u662f [CF1649B](https://codeforces.com/contest/1649/problem/B) \uff0c\u8fd9\u91cc\u4e0d\u518d\u8fc7\u591a\u8d58\u8ff0\u3002\u8bbe\u6240\u6709\u7c7b\u7684\u5927\u5c0f\u4e4b\u548c\u4e3a $sum$ \uff0c\u5176\u4e2d\u5927\u5c0f\u6700\u5927\u7684\u7c7b\u7684\u5927\u5c0f\u4e3a $max$ \uff0c\u5219\u8be5\u70b9\u6240\u80fd\u4ea7\u751f\u7684\u6700\u5927\u8d21\u732e\u4e3a $min(sum-1,2 \\times (sum-max))$ \u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u70b9\u6309\u81ea\u5df1\u4ea7\u751f\u6700\u5927\u8d21\u732e\u7684\u6807\u51c6\u6392\u5217\u5b50\u6811\u5185\u7684\u64cd\u4f5c\uff0c\u4e5f\u53ea\u662f\u6392\u5217\u5176 **\u76f8\u5bf9\u4f4d\u7f6e** \uff0c\u7956\u5148\u8282\u70b9\u53ef\u4ee5\u4efb\u610f\u5730\u5728\u4e2d\u95f4\u63d2\u5165\u64cd\u4f5c\u3002\u56e0\u6b64\u6bcf\u4e2a\u8282\u70b9\u7684\u8d21\u732e\u4e4b\u95f4\u662f **\u4e0d\u76f8\u5173** \u7684\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5f62 dp \u89e3\u51b3\uff0c\u8fd9\u91cc\u5c31\u80fd\u62ff\u5230\u4e0d\u5e26\u4fee\u6539\u7684 $30pt$ \u3002\n\n\u8003\u8651\u4fee\u6539\u3002\u4fee\u6539\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u94fe\u52a0\u3002\u6211\u4eec\u5c06\u8282\u70b9\u7684\u8d21\u732e\u5206\u4e3a\u4e09\u79cd\uff1a\u7531 $sum-1$ \u8d21\u732e\u6765\u7684\uff0c\u7531\u81ea\u5df1\u4f5c\u4e3a $max$ \u8d21\u732e\u6765\u7684\uff0c\u7531\u81ea\u5df1\u7684\u4e00\u4e2a\u513f\u5b50\u4f5c\u4e3a $max$ \u8d21\u732e\u6765\u7684\u3002\u8003\u8651\u5982\u679c\u662f\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u5373\u7528\u81ea\u5df1\u513f\u5b50\u8d21\u732e\u6765\u7684\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u8282\u70b9\u4e0e\u8d21\u732e\u7684\u513f\u5b50\u8fde\u5728\u4e00\u8d77\uff0c\u8fd9\u6837\u4f1a\u5f62\u6210\u4e00\u4e9b **\u91cd\u94fe** \u3002\u8003\u8651\u4e00\u4e2a\u4fee\u6539\uff0c\u5982\u679c\u662f\u5bf9\u4e8e\u4e00\u4e2a\u91cd\u94fe\u4e00\u8d77\u4fee\u6539\uff0c\u90a3\u4e48\u7531\u4e8e $sum$ \u548c $max$ \u90fd\u4f1a\u52a0\u4e0a $w$ \uff0c\u56e0\u6b64\u91cd\u94fe\u5185\u90e8\u7684\u8d21\u732e\u4e0d\u53d8\u3002\u53d8\u7684\u53ea\u6709\u91cd\u94fe\u4e4b\u95f4\u8f7b\u8fb9\u7684\u8d21\u732e\uff0c\u56e0\u6b64\u7528\u4e00\u4e2a LCT \u7ef4\u62a4\u8f7b\u8fb9\u8d21\u732e\u5e76\u5b9e\u65f6\u66f4\u6539\u91cd\u94fe\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn)$ \u3002\n\n$Code$\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define N 800010\nusing namespace std;\nint cnt,head[N],to[N<<1],nxt[N<<1];\nvoid insert(int u,int v){ \n    cnt++;\n    to[cnt]=v;a\n    nxt[cnt]=head[u];\n    head[u]=cnt;\n}\nint siz[N],son[N],ans,mx[N],a[ASN],oth[N],type[N];\nnamespace LinkCutTree{\n\tint c[N][2],laz[N],f[N];ASD\n\tbool ntrt(int x) {return cA[f[x]][0]==x||c[f[x]][1]==x;}\n\tvoid pushup(int x) {\n\t\tsiz[x]=siz[c[x][0]]+siz[c[x][1]]+oth[x]+a[x];\n\t}\n\tvoid rotate(int x) {\n\t\tint y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n\t\tif(ntrt(y)) c[z][c[z][1]==y]=x;\n\t\tc[x][!k]=y,c[y][k]=w;\n\t\tif(w) f[w]=y;\n\t\tf[y]=x,f[x]=z;\n\t\tpushup(y),pushup(x);\n\t}\n\tvoid splay(int x) {\n\t\twhile(ntrt(x)) {\n\t\t\tint y=f[x],z=f[y];\n\t\t\tif(ntrt(y)) rotate((c[z][0]==y)^(c[y][0]==x)?x:y);\n\t\t\trotate(x);\n\t\t}\n\n\t}\n\tvoid access(int x,int z) {\n\t\tfor(int vid=0; x; x=f[vid=x]) {\n\t\t\tsplay(x);\n\t\t\tint tot=siz[x]-siz[c[x][0]];\n\t\t\tif(type[x]==0||type[x]==1) {\n\t\t\t\tans-=2*(tot-(type[x]?a[x]:siz[c[x][1]]));\n\t\t\t} else ans-=tot-1;\n\t\t\ttot+=z;siz[x]+=z;\n\t\t\tif(vid) oth[x]+=z;\n\t\t\telse a[x]+=z;\n\t\t\tif(2*siz[vid]>=tot+1) oth[x]+=siz[c[x][1]]-siz[vid],c[x][1]=vid;\n\t\t\tif(2*siz[c[x][1]]>=tot+1) type[x]=0,ans+=(tot-siz[c[x][1]])<<1;\n\t\t\telse {\n\t\t\t\tif(c[x][1]) oth[x]+=siz[c[x][1]],c[x][1]=0;\n\t\t\t\tif(2*a[x]>=tot+1) type[x]=1,ans+=(tot-a[x])*2;\n\t\t\t\telse type[x]=2,ans+=tot-1;\n\t\t\t}\n\t\t}\n\t}\n\n}\nusing namespace LinkCutTree;\ninline void dfs(int now,int fa){\n\tf[now]=fa,siz[now]=a[now],son[now]=0,mx[now]=a[now];\n\tfor(int i=head[now]; i; i=nxt[i]) if(to[i]!=fa) {\n\t\tdfs(to[i],now);\n\t\tmx[now]=max(mx[now],siz[to[i]]);\n\t\tif(siz[to[i]]>siz[son[now]]) son[now]=to[i];\n\t\tsiz[now]+=siz[to[i]];\n\t}\n\toth[now]=siz[now]-a[now];\n\tans+=min(siz[now]-1,siz[now]-(mx[now]-(siz[now]-mx[now])));\n\tif(2*siz[son[now]]>=siz[now]+1) { type[now]=0,c[now][1]=son[now],oth[now]-=siz[son[now]];return ;}\n\tif(2*a[now]>=siz[now]+1) {type[now]=1;return ;}\n\ttype[now]=2;\n} \nint n,m;\nsigned main()\n{\n//\tfreopen(\"history.in\",\"r\",stdin);\n//\tfreopen(\"history.out\",\"w\",stdout);\n\tscanf(\"%lld%lld\",&n,&m);\n//\tsiz[0]=-1;\n\tfor(int i=1; i<=n; i++) scanf(\"%lld\",&a[i]);\n//\tcout<<\"End\\n\";\n\tfor(int i=1; i<n; i++) {\n\t\tint u,v;\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tinsert(u,v);\n\t\tinsert(v,u);\n\t}\n//\tprintf(\"End\\n\");\n\tdfs(1,0);\n//\tfor(int i=1; i<=n; i++) printf(\"%lld \",type[i]);\n//\tputs(\"\");\n//\tprintf(\"END\\n\");\n\tprintf(\"%lld\\n\",ans);\n    while(m--) {\n    \tint x,z;\n    \tscanf(\"%lld%lld\",&x,&z);\n    \taccess(x,z);\n    \tprintf(\"%lld\\n\",ans);\n\t}\n}\n```\n\n\n",
        "postTime": 1650457598,
        "uid": 124918,
        "name": "LinkyChristian",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P4338 [ZJOI2018]\u5386\u53f2"
    },
    {
        "content": "\u6811\u5256\u505a\u6cd5\u3002\n\n\u8003\u8651\u5355\u6b21\u8be2\u95ee\u600e\u4e48\u505a\u3002\n\n\u6ce8\u610f\u5230\u8ba9 $x,y$ \u5148\u540e\u5d1b\u8d77\uff0c\u5219 $x$ \u5bf9 $y$ \u4ea7\u751f\u8d21\u732e\u7684\u53ea\u6709 $\\operatorname{lca(x,y)}$ \u5230\u6839\u7684\u8986\u76d6\uff0c\u6709 $1$ \u7684\u8d21\u732e\uff0c\u6211\u4eec\u628a\u5b83\u7b97\u5728 $\\operatorname{lca(x,y)}$ \u5904\u3002\n\n\u73b0\u5728\u8003\u8651\u6bcf\u4e2a\u70b9 $i$ \u6700\u591a\u80fd\u4ea7\u751f\u591a\u5c11\u8d21\u732e $a_i$\uff0c\u663e\u7136\u7531\u4e0a\u9762\u77e5\u9009\u7684 $x,y$ \u5fc5\u987b\u5728 $i$ \u7684\u4e0d\u540c\u5b50\u6811\u624d\u80fd\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u90a3\u4e48\u6700\u4f18\u80af\u5b9a\u662f\u8fde\u7eed\u4e24\u6b21\u4e0d\u9009\u5230\u540c\u4e00\u68f5\u5b50\u6811\uff0c\u7b54\u6848\u4e3a $sz_x-1$\u3002\u4f46\u662f\u6709\u53ef\u80fd\u6709\u4e00\u4e2a\u513f\u5b50\u6ee1\u8db3 $sz_v\\times2>sz_x$\uff0c\u8fd9\u6837\u7b54\u6848\u65e0\u6cd5\u53d6\u5230 $sz_x-1$\uff0c\u4e3a $2\\times(sz_x-sz_v)$\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u5173\u5fc3\u4ece\u54ea\u4e2a\u5b50\u6811\u64cd\u4f5c\uff0c\u4e8e\u662f\u6bcf\u4e2a\u70b9\u7684\u6700\u5927\u8d21\u732e\u4e92\u4e0d\u5e72\u6270\uff0c\u90fd\u80fd\u53d6\u5230\uff0c\u7b54\u6848\u5373\u4e3a\u6bcf\u4e2a\u70b9 $a_i$ \u4e4b\u548c\u3002\n\n\u73b0\u5728\u8003\u8651\u5e26\u4fee\u3002\u4e00\u6b21\u4fee\u6539 $x$ \u4f1a\u4fee\u6539 $x$ \u5230\u6839\u7684\u6240\u6709 $a_i$\uff0c\u5148\u5c06\u4ece $x$ \u5230\u6839\u7684 $sz$ \u533a\u95f4\u52a0\uff0c\u518d\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$ \u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u82e5\u539f\u5148 $sz_i\\times2>sz_{fa_i}$\uff0c\u53c8\u56e0\u4e3a\u4fee\u6539\u540e $sz_i\\times2$ \u589e\u52a0\u4e86 $2w$\uff0c$sz_{fa_i}$ \u589e\u52a0\u4e86 $w$\uff0c\u6240\u4ee5\u4ecd\u7136\u6ee1\u8db3 $sz_i\\times2>sz_{fa_i}$\uff0c\u800c $fa_i$ \u7684\u8d21\u732e\u4e3a $2\\times((sz_{fa_i}+w)-(sz_i+w))=2\\times(sz_x-sz_v)$\uff0c\u4fdd\u6301\u4e0d\u53d8\u3002\n\n\u82e5\u539f\u5148 $sz_i\\times2\\le sz_{fa_i}$\uff0c\u5219\u8fd9\u6837\u7684 $i$ \u4e0d\u4f1a\u8d85\u8fc7 $\\log \\sum a$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u70b9 $i$ \u7684 $[sz_{fa_i}>sz_i\\times2]$ \uff08\u79f0\u4e3a $t_i$\uff09\uff0c\u7136\u540e\u6811\u5256\u518d\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5230\u5927\u4e8e\u96f6\u7684\u70b9\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a $sz_i\\le2\\times sz_{fa_i}$ \u7684\u70b9\uff0c\u8981\u505a\u5982\u4e0b\u4fee\u6539\uff08\u8bbe $fa_i=f$\uff0c$son_f$ \u8868\u793a $f$ \u513f\u5b50\u4e2d $sz$ \u6700\u5927\u7684\u70b9\uff09\uff1a\n\n\u82e5 $son_f\\neq i$\uff1a\n\n- $t_i$ \u53ef\u80fd\u7531 $1$ \u53d8 $0$\u3002\n- $t_{son_f}$ \u53ef\u80fd\u7531 $0$ \u53d8 $1$\u3002\n- \u7b54\u6848\u53ef\u80fd\u6539\u53d8\u3002\n- $son_f$ \u53ef\u80fd\u53d8\u6210 $i$\u3002\n\n\u800c\u5bf9\u4e8e $son_f=i$ \u7684\u60c5\u51b5\uff0c\u4f1a\u7701\u53bb\u4e00\u4e9b\u8ba8\u8bba\uff0c\u66f4\u52a0\u7b80\u5355\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u4e0d\u5f00 $O_2$ \u6700\u540e\u4e00\u4e2a\u70b9 2.02s\u3002\u5bf9\u4e8e $sz$\uff0c\u8981\u652f\u6301\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u5e38\u6570\u5c0f\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int inf = 2e9;\ninline int read() {\n\tint s = 0,f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) f = ch == '-' ? -1 : 1, ch = getchar();\n\twhile (isdigit(ch)) s = (s << 3) + (s << 1) + ch - '0', ch = getchar();\n\treturn s*f;\n}\nint n,m,head[800010],cnt,nt,lef[800010],to[800010];\nstruct edge {\n\tint v,nxt;\n}ed[1600010];\nvoid add(int u,int v) {\n\ted[++cnt] = {v,head[u]};\n\thead[u] = cnt;\n}\nll sza[800010],a[800010],ans,Ans[800010];\nint fa[800010],sz[800010],id[800010],rnk[800010],top[800010],son[800010],dep[800010],tot,sona[800010];\nvoid dfs(int x,int f,int d) {\n\tfa[x] = f, dep[x] = d, sz[x] = 1, sza[x] = a[x];\n\tint fl = 0;\n\tfor (int i = head[x];i;i = ed[i].nxt) {\n\t\tint v = ed[i].v;\n\t\tif (v == f) continue;\n\t\tdfs(v,x,d + 1);\n\t\tsz[x] += sz[v];\n\t\tsza[x] += sza[v];\n\t\tif (sz[son[x]] < sz[v]) son[x] = v;\n\t\tif (sza[sona[x]] < sza[v]) sona[x] = v;\n\t\tfl ++;\n\t}\n\tlef[x] = fl <= 1;\n\tif (!lef[x]) {\n\t\tif (2 * sza[sona[x]] > sza[x]) Ans[x] = 2 * (sza[x] - sza[sona[x]]);\n\t\telse Ans[x] = sza[x] - 1;\n\t\tans += Ans[x];\n\t}\n}\nvoid dfs2(int x,int tp) {\n\ttop[x] = tp;\n\tid[x] = ++tot, rnk[tot] = x;\n\tif (!son[x]) return;\n\tdfs2(son[x],tp);\n\tfor (int i = head[x];i;i = ed[i].nxt) {\n\t\tint v = ed[i].v;\n\t\tif (v != fa[x] && v != son[x]) dfs2(v,v);\n\t}\n}\nll c[800010];\nvoid upda(int x,ll s) {\n\tfor (;x <= nt;x += (x & -x)) c[x] += s;\n}\nll query1(int x) {\n\tll res = 0;\n\tfor (;x;x -= (x & -x)) res += c[x];\n\treturn res;\n}\nstruct Seg {\n\tint l,r,v;\n}t[3200010];\nvoid pushup(int x) {\n\tt[x].v = t[x<<1].v + t[x<<1|1].v;\n}\nvoid build(int x,int l,int r) {\n\tt[x].l = l, t[x].r = r;\n\tif (l == r) {\n\t\tt[x].v = sza[rnk[l]] * 2 <= sza[fa[rnk[l]]];\n\t\treturn;\n\t}\n\tint mid = l + r >> 1;\n\tbuild(x << 1,l,mid), build(x<<1|1,mid + 1,r);\n\tpushup(x);\n}\nvoid modify1(int x,int k,int s) {\n\tif (t[x].l == t[x].r) {\n\t\tt[x].v = s;\n\t\treturn;\n\t}\n\tint mid = t[x].l + t[x].r >> 1;\n\tif (mid >= k) modify1(x<<1,k,s);\n\telse modify1(x<<1|1,k,s);\n\tpushup(x);\n}\nvoid modify2(int l,int r,ll s) {\n\tupda(l,s), upda(r + 1,-s);\n}\nint query2(int x,int l,int r) {//[l,r] \u4e0b\u6807\u6700\u5927\u7684 1 \n\tif (!t[x].v) return -1;\n\tif (t[x].l == t[x].r) return t[x].v ? rnk[t[x].l] : -1;\n\tint mid = t[x].l + t[x].r >> 1;\n\tif (mid >= r) return query2(x<<1,l,r);\n\telse {\n\t\tint t = query2(x<<1|1,l,r);\n\t\tif (t != -1) return t;\n\t\treturn mid >= l ? query2(x<<1,l,r) : -1;\n\t}\n}\nvoid upd(int x,ll s) {\n\tint y = x;\n\twhile (x) {\n\t\tmodify2(id[top[x]],id[x],s);\n\t\tx = fa[top[x]];\n\t}\n\tx = y;\n\tint R = id[x];\n\tif (!lef[x]) {\n\t\tll sx = query1(id[x]),sxa = query1(id[sona[x]]);\n\t\tans -= Ans[x];\n\t\tif (sxa * 2 <= sx) Ans[x] = sx - 1;\n\t\telse Ans[x] = 2 * (sx - sxa);\n\t\tans += Ans[x];\n\t}\n\twhile (x) {\n\t\tif (R < id[top[x]]) {\n\t\t\tx = fa[top[x]], R = id[x];\n\t\t\tcontinue;\n\t\t}\n\t\tint p = query2(1,id[top[x]],R);\n//\t\tcout << p << endl;\n\t\tif (p == -1) {\n\t\t\tx = fa[top[x]], R = id[x];\n\t\t\tcontinue;\n\t\t}\n\t\tint f = fa[p];\n\t\tans -= Ans[f];\n\t\tll sp = query1(id[p]),sf = query1(id[f]),sa = query1(id[sona[f]]);\n\t\tif (p == sona[f]) {\n\t\t\tif (sp * 2 > sf && sp * 2 - s <= sf) modify1(1,id[p],0);\n\t\t\tif (sp * 2 > sf) Ans[f] = 2 * (sf - sp);\n\t\t\telse Ans[f] = sf - 1;\n\t\t}\n\t\telse {\n\t\t\tif (sa * 2 > sf - s && sa * 2 <= sf) modify1(1,id[sona[f]],1);\n\t\t\tif (sa < sp) sona[f] = p, sa = sp;\n\t\t\tif (sp * 2 > sf) modify1(1,id[p],0);\n\t\t\tif (sa * 2 > sf) Ans[f] = 2 * (sf - sa);\n\t\t\telse Ans[f] = sf - 1;\n\t\t}\n\t\tans += Ans[f];\n\t\tR = id[p] - 1;\n\t}\n}\nint main() {\n\tn = read(), m = read(), nt = n;\n\tfor (int i = 1;i <= n;i ++ ) a[++nt] = read(), add(i,nt), add(nt,i), to[i] = nt;\n\tfor (int i = 1;i < n;i ++ ) {\n\t\tint u = read(),v = read();\n\t\tadd(u,v), add(v,u);\n\t}\n\tdfs(1,0,1), dfs2(1,1);\n\tbuild(1,1,nt);\n\tfor (int i = 1;i <= nt;i ++ ) modify2(i,i,sza[rnk[i]]);\n\tprintf(\"%lld\\n\",ans);\n\twhile (m -- ) {\n\t\tint x = read(),w = read();\n\t\tupd(to[x],w);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1682235738,
        "uid": 94777,
        "name": "Jsxts_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4338 [ZJOI2018]\u5386\u53f2"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LaoMang-no-blog/p/16393477.html)\n\n---\n\n[**\u4f60\u8c37 link**](https://www.luogu.com.cn/problem/P4338)\n\n\u8fd9\u4e2a\u9898\u8bf4\u6a21\u677f\u633a\u6a21\u677f\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u4e5f\u5f88\u6709\u601d\u7ef4\uff0c\u8fd9\u91cc\u6765\u8bb2\u8bb2\u770b\u3002\n\n\u7b80\u5316\u9898\u610f\uff0c\u7ed9\u5b9a\u4e00\u68f5 LCT\uff0c\u521d\u59cb\u90fd\u662f\u865a\u8fb9\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u70b9\u7684 `access` \u64cd\u4f5c\u6b21\u6570\uff0c\u6c42\u4e00\u4e2a\u64cd\u4f5c\u987a\u5e8f\u4f7f\u5f97\u865a\u5b9e\u8fb9\u8f6c\u6362\u6b21\u6570\u6700\u591a\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u679c\u4e0d\u5b58\u5728\u4fee\u6539\u600e\u4e48\u505a\uff0c\u6211\u4eec\u8003\u8651\u6309\u6bcf\u4e2a\u70b9\u5206\u522b\u8003\u8651\uff0c\u6211\u4eec\u53d1\u73b0\u5f53\u76f8\u90bb\u4e24\u6b21\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u5b50\u6811\u4e2d\uff08\u6216\u8005\u4e00\u4e2a\u5728\u5b50\u6811\u4e2d\u53e6\u4e00\u4e2a\u662f\u81ea\u5df1\uff09\u90fd\u53ef\u4ee5\u4ea7\u751f\u8d21\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u7740\u624b\u6784\u9020\uff0c\u7136\u540e\u53d1\u73b0\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u5b50\u6811\uff08\u6216\u81ea\u5df1\uff09\u7684\u64cd\u4f5c\u6b21\u6570\u548c\u5927\u4e8e\u4e00\u534a\uff0c\u90fd\u53ef\u4ee5\u6784\u9020\u6ee1\uff0c\u5426\u5219\u5c31\u662f\u5269\u4e0b\u7684\u4e24\u500d\uff0c\u5373 $\\min\\{S-1,2(S-\\max\\{a_x,\\max_{y\\in\\operatorname{son}(x)}S_y\\})\\}$\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\u7684\u5206\u3002\n\n\u63a5\u4e0b\u6765\u662f\u4fee\u6539\u64cd\u4f5c\uff0c\u9996\u5148\u663e\u7136\u8fd9\u79cd\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u88ab\u4fee\u6539\u7684\u70b9\u5230\u6839\u7684\u8def\u5f84\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u6761\u8def\u5f84\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u89c2\u5bdf\u4e0a\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e2a\u4e34\u754c\u70b9\uff0c\u5c31\u662f $S$ \u548c $\\max_{y\\in\\operatorname{son}(x)}S_y\\}$\uff0c\u7684\u5173\u7cfb\uff0c\u5373\u6709\u6ca1\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u8d85\u8fc7\u4e00\u534a\uff0c\u53e6\u4e00\u4e2a\u7279\u6027\u662f\u8fd9\u4e2a\u5b50\u6811\u53ea\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u5b50\u6811\u5bf9\u5e94\u7684\u513f\u5b50\u4e3a\u8be5\u70b9\u7684\u201c\u91cd\u513f\u5b50\u201d\uff0c\u4e0e\u91cd\u5256\u4e0d\u540c\u7684\u662f\uff0c\u91cd\u5256\u4e2d\u7684\u91cd\u513f\u5b50\u662f\u5b50\u6811\u6700\u5927\u7684\u513f\u5b50\uff0c\u800c\u8fd9\u91cc\u4e0d\u662f\uff0c\u8fd9\u91cc\u662f**\u5b50\u6811\u5927\u5c0f\u8d85\u8fc7\u8be5\u6811\u4e00\u534a\u7684\u513f\u5b50**\uff0c\u4e14\u8fd9\u4e2a\u91cd\u513f\u5b50\u4e5f\u53ef\u4ee5\u662f\u81ea\u5df1\uff08\u81ea\u5df1\u7684\u503c\u8d85\u8fc7\u5b50\u6811\u7684\u4e00\u534a\uff09\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6ca1\u6709\u3002\n\n\u7c7b\u6bd4\u91cd\u5256\uff0c\u91cd\u513f\u5b50\u7ec4\u6210\u4e86\u4e00\u6761\u91cd\u94fe\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u6b21\u4fee\u6539\u6700\u591a\u53ea\u4f1a\u5728\u6bcf\u6761\u91cd\u94fe\u4e2d\u5f71\u54cd\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u91cd\u513f\u5b50\u53d8\u5927\u4e0d\u4f1a\u5f71\u54cd\u4e0a\u5f0f\u7684\u503c\uff0c\u8fd9\u662f\u4fdd\u8bc1\u6211\u4eec\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5173\u952e\uff0c\u91cd\u5256\u4e2d\u6bcf\u4e2a\u70b9\u5230\u6839\u53ea\u4f1a\u7ecf\u8fc7\u81f3\u591a $\\log n$ \u6761\u91cd\u94fe\uff0c\u56e0\u4e3a\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8f7b\u513f\u5b50\u5b50\u6811\u5927\u5c0f\u5c31\u4f1a\u51cf\u534a\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u70b9\u6743\u7b49\u4e8e $1$ \u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u5728\u70b9\u6743\u4e0d\u4e3a $1$ \u65f6\u540c\u6837\u6210\u7acb\uff0c\u6700\u591a\u7ecf\u8fc7 $\\log\\sum_{i=1}^n a_i$ \u6761\u91cd\u94fe\uff0c\u8bc1\u660e\u540c\u4e0a\u3002\n\n\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e00\u4e0b\u51e0\u70b9\uff1a\n\n1. \u52a8\u6001\u7ef4\u62a4\u91cd\u94fe\u7684\u4fee\u6539\uff1b\n2. \u67e5\u8be2\u5b50\u6811\u548c\u4e0e\u91cd\u513f\u5b50\u4fe1\u606f\u3002\n\n\u8fd9\u5176\u5b9e\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5957 LCT \u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u7ea6\u662f $\\mathcal O\\left(n\\log\\sum_{i=1}^n a_i\\right)$\uff0c\u4e0d\u662f\u5f88\u4f1a LCT \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u5982\u6709\u9519\u8bef\u6b22\u8fce\u6307\u6b63\u3002\n\n[**c++ \u4ee3\u7801**](https://www.cnblogs.com/LaoMang-no-blog/p/16393477.html)",
        "postTime": 1655711409,
        "uid": 310525,
        "name": "\u8001\u83bd\u83bd\u7a7f\u4e00\u5207",
        "ccfLevel": 0,
        "title": "[ZJOI2018] \u5386\u53f2 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4338)\n\n\u4e00\u9053\u4e0d\u9519\u7684 LCT \u7ec3\u624b\u9898\u3002\n\n\u9996\u5148\u8003\u8651\u5bf9\u4e8e\u6ca1\u6709\u4fee\u6539\u7684\u60c5\u51b5\u600e\u4e48\u5904\u7406\u3002\u6ce8\u610f\u5230\u5bf9\u4e8e\u4e00\u4e2a $u$\uff0c\u5982\u679c\u6211\u4eec\u628a $u$ \u7684\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u67d3\u4e0a\u4e00\u79cd\u989c\u8272\uff0c\u628a $u$ \u70b9\u4e5f\u67d3\u4e0a\u4e00\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u5f53\u6211\u4eec access $u$ \u5b50\u6811\u5185\u67d0\u4e2a\u70b9 $v$ \u65f6\uff0c\u70b9 $u$ \u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f $1$ \u7684\u8d21\u732e\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u5b50\u6811\u5185\u4e0a\u4e00\u4e2a\u88ab access \u7684\u70b9\u4e0e $v$ \u4e0d\u662f\u540c\u4e00\u4e2a\u989c\u8272\u7684\uff0c\u56e0\u6b64\u5982\u679c\u9664\u4e86 $1$ \u8282\u70b9\u4e4b\u5916\uff0c\u6bcf\u4e2a\u70b9\u90fd\u662f\u53f6\u5b50\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff1a\u6709 $n$ \u79cd\u989c\u8272\uff0c\u7b2c $i$ \u79cd\u989c\u8272\u7684\u70b9\u6709 $a_i$ \u4e2a\uff0c\u73b0\u5728\u8981\u5c06\u8fd9 $\\sum\\limits_{i=1}^na_i$ \u4e2a\u70b9\u6392\u6210\u4e00\u884c\uff0c\u6700\u5927\u5316\u76f8\u90bb\u5f02\u8272\u70b9\u6570\u3002\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u9898\uff0c\u6839\u636e\u7ecf\u5178\u8d2a\u5fc3\u7ed3\u8bba\uff0c\u4e0a\u9762\u7684\u95ee\u9898\u7684\u7b54\u6848\u4e3a $\\min(\\sum\\limits_{i=1}^na_i-1,(\\sum\\limits_{i=1}^na_i-\\max\\limits_{i=1}^na_i)\\times 2)$\u3002\u90a3\u5982\u679c\u56fe\u4e0d\u662f\u4e00\u5f20\u83ca\u82b1\u600e\u4e48\u529e\u5462\uff1f\u5176\u5b9e\u4e5f\u597d\u529e\uff0c\u8003\u8651\u5982\u4f55\u94a6\u5b9a $u$ \u5b50\u6811\u5185\u70b9\u7684 access \u987a\u5e8f\uff1a\u6211\u4eec\u5148\u9012\u5f52\u94a6\u5b9a\u6240\u6709\u513f\u5b50\u5b50\u6811\u5185\u7684\u70b9\u7684 access \u987a\u5e8f\uff0c\u7136\u540e\u5c06 $u$ \u6240\u6709\u513f\u5b50\u5bf9\u5e94\u7684\u5b50\u6811\u770b\u4f5c\u4e00\u4e2a\u989c\u8272\uff0c\u8bbe $u$ \u70b9\u7684\u513f\u5b50\u4e2a\u6570\u4e3a $c$\uff0c\u90a3\u4e48\u6211\u4eec\u6839\u636e\u4e0a\u9762\u7684\u7ecf\u5178\u7ed3\u8bba\u7b97\u51fa\u5c06 $u$ \u5b50\u6811\u5185\u7684\u70b9\u6392\u6210\u4e00\u6392\u7684\u6700\u4f18\u65b9\u6848\uff0c\u540c\u4e00\u989c\u8272\u5185\u90e8 access \u987a\u5e8f\u5219\u6309\u7167\u6211\u4eec\u4e4b\u524d\u5bf9\u6bcf\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u94a6\u5b9a\u7684\u987a\u5e8f\u5b89\u6392\uff0c\u5982\u6b64\u9012\u5f52\u4e0b\u53bb\u5373\u53ef\uff0c\u8fd9\u5c31\u544a\u8bc9\u6211\u4eec\uff0c\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u662f\u53ef\u4ee5\u72ec\u7acb\u8ba1\u7b97\u7684\uff0c\u4e00\u904d DFS \u5373\u53ef\u89e3\u51b3\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe $f(a_1,a_2,\\cdots,a_n)=\\min(\\sum\\limits_{i=1}^na_i-1,(\\sum\\limits_{i=1}^na_i-\\max\\limits_{i=1}^na_i)\\times 2)$\uff0c\u70b9 $u$ \u6709 $c_i$ \u4e2a\u513f\u5b50 $son_{u,1},son_{u,2},\\cdots,son_{u,c_u}$\uff0c$u$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u7684 $a$ \u4e4b\u548c\u4e3a $sum_u$\uff0c\u90a3\u4e48\u7b54\u6848\u7b49\u4e8e $\\sum\\limits_{i=1}^nf(sum_{son_{u,1}},sum_{son_{u,2}},\\cdots,sum_{son_{u,c_u}},a_u)$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5e26\u4e0a\u4fee\u6539\u5982\u4f55\u5904\u7406\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u94fe\u5256\u5206\u7684\u610f\u5473\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$\uff0c\u6839\u636e\u4e0a\u9762\u7684\u548c\u5f0f\uff0c$u$ \u70b9\u4ea7\u751f\u7684\u8d21\u732e\u53ea\u4e0e $sum_u$ \u4e0e $u$ \u7684\u513f\u5b50\u4e2d $sum$ \u6700\u5927\u7684\u6709\u5173\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u79f0 $u$ \u7684\u513f\u5b50\u4e2d $sum$ \u6700\u5927\u7684\u4e3a\u201c\u91cd\u513f\u5b50\u201d\uff0c\u90a3\u4e48\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u201c\u5e26\u6743\u91cd\u94fe\u5256\u5206\u201d\u6a21\u578b\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u8bb0\u5176\u513f\u5b50\u4e2d $sum$ \u6700\u5927\u7684\u4e3a $wson_u$\uff0c\u90a3\u4e48\u5982\u679c $sum_{wson_u}\\times 2>sum_u$\uff0c\u6211\u4eec\u5c31\u8fde\u8fb9 $u\\to wson_u$\uff0c\u8fd9\u6837\u663e\u7136\u4f1a\u5f62\u6210\u4e00\u6761\u6761\u7956\u5148 $\\to$ \u540e\u4ee3\u7684\u94fe\uff0c\u66f4\u5177\u4f53\u5730\uff0c\u6bcf\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6700\u591a\u53ea\u6709 $\\log nV$ \u6761\u91cd\u94fe\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u91cd\u94fe\u5256\u5206\u7684\u65b9\u6cd5\u5206\u6790\u51fa\u6765\u3002\u800c\u5f53\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u70b9 $u$ \u7684\u70b9\u6743\u65f6\uff0c\u6211\u4eec\u8003\u8651 $u$ \u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u4e00\u6761\u91cd\u94fe\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\uff0c\u91cd\u94fe\u4e2d\u95f4\u7684\u70b9\u7684\u8d21\u732e\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u552f\u4e00\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u662f\u94fe\u9876\u8282\u70b9\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528 LCT \u7ef4\u62a4\u6bcf\u6761\u94fe\uff0c\u6bcf\u6b21\u4fee\u6539\u66b4\u529b\u6263\u6389\u539f\u94fe\u9876\u7684\u7b54\u6848\uff0c\u4fee\u6539\u4e4b\u540e\u518d\u52a0\u5165\u65b0\u7684\u94fe\u9876\u7684\u7b54\u6848\u5e76\u66f4\u65b0\u94fe\u5256\u5206\u7684\u7ed3\u6784\u3002\n\n\u80fd\u505a\u5230 $n\\log nV$\uff0c\u4e0d\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u662f $n\\log n\\log nV$ \u7684\uff1a\n\n```cpp\nconst int MAXN = 5e5;\nint n, qu, hd[MAXN + 5], to[MAXN * 2 + 5], nxt[MAXN * 2 + 5], ec, fa[MAXN + 5];\nvoid adde(int u, int v) {to[++ec] = v; nxt[ec] = hd[u]; hd[u] = ec;}\nint dfn[MAXN + 5], edt[MAXN + 5], tim, wson[MAXN + 5];\nll res = 0, a[MAXN + 5];\nll t[MAXN + 5];\nvoid add(int x, ll v) {for (int i = x; i <= n; i += (i & (-i))) t[i] += v;}\nll query(int x) {ll ret = 0; for (int i = x; i; i &= (i - 1)) ret += t[i]; return ret;}\nll qry(int x) {return (!x) ? 0 : (query(edt[x]) - query(dfn[x] - 1));}\nll clc(int x) {return min(qry(x) - 1, (qry(x) - max(a[x], qry(wson[x]))) * 2);}\nvoid dfs(int x, int f) {\n\tdfn[x] = ++tim; add(tim, a[x]); fa[x] = f;\n\tfor (int e = hd[x]; e; e = nxt[e]) {\n\t\tint y = to[e]; if (y == f) continue; dfs(y, x);\n\t\tif (qry(y) > qry(wson[x])) wson[x] = y;\n\t}\n\tedt[x] = tim; res += clc(x);\n}\nstruct node {int ch[2], f;} s[MAXN + 5];\nint ident(int k) {return ((s[s[k].f].ch[0] == k) ? 0 : ((s[s[k].f].ch[1] == k) ? 1 : -1));}\nvoid connect(int k, int f, int op) {s[k].f = f; if (~op) s[f].ch[op] = k;}\nvoid rotate(int x) {\n\tint y = s[x].f, z = s[y].f, dx = ident(x), dy = ident(y);\n\tconnect(s[x].ch[dx ^ 1], y, dx); connect(y, x, dx ^ 1); connect(x, z, dy);\n}\nvoid splay(int k) {\n\twhile (~ident(k)) {\n\t\tif (!~ident(s[k].f)) rotate(k);\n\t\telse if (ident(k) == ident(s[k].f)) rotate(s[k].f), rotate(k);\n\t\telse rotate(k), rotate(k);\n\t}\n}\nint qrymn(int k) {while (s[k].ch[0]) k = s[k].ch[0]; return k;}\nint main() {\n\tscanf(\"%d%d\", &n, &qu);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tfor (int i = 1, u, v; i < n; i++) scanf(\"%d%d\", &u, &v), adde(u, v), adde(v, u);\n\tdfs(1, 0); printf(\"%lld\\n\", res);\n\tfor (int i = 1; i <= n; i++) s[i].f = fa[i];\n\tfor (int i = 1; i <= n; i++) if (wson[i] && qry(wson[i]) * 2 > qry(i))\n\t\ts[i].ch[1] = wson[i];\n\twhile (qu--) {\n\t\tint x, v; scanf(\"%d%d\", &x, &v); map<int, int> vis;\n\t\tfor (int y = x; y; y = s[y].f) splay(y), res -= clc(y);\n\t\tadd(dfn[x], v); a[x] += v;\n\t\tint pre = 0, prex = 0;\n\t\tfor (int y = x; y; prex = y, y = s[y].f) {\n\t\t\tsplay(y); //printf(\"! %d\\n\", y);\n\t\t\tif (pre && qry(pre) > qry(wson[y])) {\n\t\t\t\twson[y] = pre; s[y].ch[1] = prex;\n\t\t\t}\n\t\t\tif (qry(wson[y]) * 2 <= qry(y)) s[y].ch[1] = 0;\n\t\t\tres += clc(y); pre = qrymn(y);\n\t\t}\n\t\tprintf(\"%lld\\n\", res);\n\t}\n\treturn 0;\n}\n/*\n5 8\n1 1 1 1 1\n1 2\n2 3\n3 4\n4 5\n3 10\n4 100\n5 1000\n2 10000\n3 100000\n1 200000\n3 300000\n5 400000\n*/\n```\n\n",
        "postTime": 1646478344,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4338 [ZJOI2018]\u5386\u53f2"
    },
    {
        "content": "\u849f\u84bb\u770b\u4e86\u5b98\u65b9\u9898\u89e3\u624d\u4f1a\u5199\u3002 \n\n\u95ee\u9898\u53ef\u4ee5\u770b\u6210\u7ed9\u5b9a\u4e00\u68f5\u6811\u548c\u6bcf\u4e2a\u70b9$access$\u7684\u6b21\u6570\uff0c\u6c42$access$\u65f6\u8f7b\u91cd\u94fe\u5207\u6362\u6b21\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48\u70b9$i$\u4f1a\u5f00\u6218\u5f53\u4e14\u4ec5\u5f53$i$\u7684\u5b50\u6811\u91cc\u6709\u57ce\u5e02\u5d1b\u8d77\uff0c\u5e76\u4e14\u548c\u4e0a\u6b21\u5d1b\u8d77\u7684\u57ce\u5e02\u4e0d\u540c\u3002\n\n\u8bbe\u70b9$u$\u6709$m$\u4e2a\u513f\u5b50\uff0c$u$\u81ea\u5df1$access$\u6b21\u6570\u4e3a$A_0$\uff0c\u7b2c$i$\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u7684$access$\u6b21\u6570\u4e3a$A_i$\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u6709$m+1$\u4e2a\u4e0d\u540c\u989c\u8272\u7684\u5c0f\u7403\uff0c\u6bcf\u79cd\u6709$A_i$\u4e2a\uff0c\u6c42\u4e00\u79cd\u6392\u5217\u4f7f\u5f97\u76f8\u90bb\u989c\u8272\u4e0d\u540c\u7684\u4e2a\u6570\u6700\u591a\u3002\n\n\u4ee4$sum=\\sum\\limits_{i=0}^{m}A_i$\uff0c$mx=\\max\\limits_{i=0}^{m}A_i$\uff0c\n\n\u5219\u70b9$u$\u6700\u5927\u5207\u6362\u6b21\u6570\u5c31\u662f$\\min(sum - 1, 2 \\times (sum-mx))$\u3002\n\n\u53ef\u4ee5\u770b\u51fa\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ea\u548c\u81ea\u5df1\u7684\u5b50\u6811\u6709\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u70b9\u4e4b\u95f4\u7684\u8d21\u732e\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6811\u5f62$dp$\u6c42\u4e00\u6b21\u9759\u6001\u7684\u7b54\u6848\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u6709$30$\u5206\u3002\n\n\u5e26\u4e0a\u4fee\u6539\uff0c\u53ea\u9700\u8981\u52a8\u6001\u5730\u7ef4\u62a4$dp$\u503c\u5373\u53ef\uff0c\u53ef\u4ee5\u7528$lct$\u6765\u7ef4\u62a4\u3002\n\n\u4ee4$sum_u$\u8868\u793a$u$\u5b50\u6811\u91cc\u7684$a_i$\u4e4b\u548c\uff0c\u5982\u679c$\\exists v \\in son[u],sum_u+1 \\leq 2sum_v$\uff0c\u5219$u$\uff0c$v$\u4e4b\u95f4\u8fde\u5b9e\u8fb9\uff0c\u5426\u5219\u4e3a\u865a\u8fb9\uff0c\u663e\u7136\u8fd9\u6837\u7684$v$\u53ea\u6709\u4e00\u4e2a\u3002\n\n\u4fee\u6539\u65f6\u5728$lct$\u4e0a\u628a\u865a\u8fb9\u5168\u90e8\u4fee\u6539\u4e00\u6b21\u5373\u53ef\uff0c\u53ef\u4ee5\u8bc1\u660e\u865a\u8fb9\u7684\u6570\u91cf\u662f$log \\sum a_i$\u7684\uff0c\u548c\u6811\u94fe\u5256\u5206\u7684\u8bc1\u660e\u65b9\u6cd5\u7c7b\u4f3c\u3002\n\n\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nlogn)$\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint read()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n    while (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * f;\n}\n#define int long long\n#define ll long long\nconst int MAX = 400033;\nint n, m, ans, cnt_e, fir[MAX];\nstruct LinkCutTree\n{\n    struct edge\n    {\n        int to, nxt;\n        edge() {}\n        edge(int a, int b) { to = a, nxt = b; }\n    } e[MAX << 1];\n    void addedge(int u, int v)\n    {\n        e[++cnt_e] = edge(v, fir[u]), fir[u] = cnt_e;\n        e[++cnt_e] = edge(u, fir[v]), fir[v] = cnt_e;\n    }\n    struct Node\n    {\n        int fa, son[2];\n        ll val, sum, vsum;\n    } t[MAX];\n    void pushup(int x) { t[x].sum = t[t[x].son[0]].sum + t[t[x].son[1]].sum + t[x].val + t[x].vsum; }\n    bool isroot(int x) { return t[t[x].fa].son[0] != x && t[t[x].fa].son[1] != x; }\n    void rotate(int x)\n    {\n        int y = t[x].fa, z = t[y].fa, op = t[y].son[1] == x;\n        t[x].fa = z; if (!isroot(y)) t[z].son[t[z].son[1] == y] = x;\n        t[y].son[op] = t[x].son[!op], t[t[y].son[op]].fa = y;\n        t[y].fa = x, t[x].son[!op] = y;\n        pushup(y);\n    }\n    void splay(int x)\n    {\n        while (!isroot(x))\n        {\n            int y = t[x].fa, z = t[y].fa;\n            if (!isroot(y))\n            {\n                if ((t[z].son[0] == y) ^ (t[y].son[0] == x)) rotate(x);\n                else rotate(y);\n            }\n            rotate(x);\n        }\n        pushup(x);\n    }\n    void access(int x, int w, int nxt)\n    {\n        for (; x; nxt = x, x = t[x].fa)\n        {\n            splay(x);\n            ll sum = t[t[x].son[1]].sum + t[x].val + t[x].vsum;\n            \n            if (t[x].son[1]) ans -= 2ll * (sum - t[t[x].son[1]].sum);\n            else if (sum + 1 <= t[x].val * 2ll) ans -= 2ll * (sum - t[x].val);\n            else ans -= sum - 1;\n            \n            t[x].sum += w, t[x].vsum += w, sum += w;\n            if (sum + 1 > t[t[x].son[1]].sum * 2ll)\n                t[x].vsum += t[t[x].son[1]].sum, t[x].son[1] = 0;\n            if (sum + 1 <= t[nxt].sum * 2ll)\n                t[x].son[1] = nxt, t[x].vsum -= t[t[x].son[1]].sum;\n                \n            if (t[x].son[1]) ans += 2ll * (sum - t[t[x].son[1]].sum);\n            else if (sum + 1 <= t[x].val * 2ll) ans += 2ll * (sum - t[x].val);\n            else ans += sum - 1;\n        }\n    }\n    void update(int x, int w)\n    {\n        splay(x);\n        ll sum = t[t[x].son[1]].sum + t[x].val + t[x].vsum;\n        \n        if (t[x].son[1]) ans -= 2ll * (sum - t[t[x].son[1]].sum);\n        else if (sum + 1 <= t[x].val * 2ll) ans -= 2ll * (sum - t[x].val);\n        else ans -= sum - 1;\n        \n        t[x].val += w, t[x].sum += w, sum += w;\n        if (sum + 1 > t[t[x].son[1]].sum * 2ll)\n            t[x].vsum += t[t[x].son[1]].sum, t[x].son[1] = 0;\n            \n        if (t[x].son[1]) ans += 2ll * (sum - t[t[x].son[1]].sum);\n        else if (sum + 1 <= t[x].val * 2ll) ans += 2ll * (sum - t[x].val);\n        else ans += sum - 1;\n        \n        access(t[x].fa, w, x);\n    }\n    void dfs(int x, int fa)\n    {\n        t[x].fa = fa;\n        t[x].sum = t[x].val;\n\t\tll maxn = t[x].val, maxid = x;\n        for (int i = fir[x], v; i; i = e[i].nxt)\n            if (e[i].to != fa)\n            {\n            \tv = e[i].to;\n                dfs(v, x);\n                t[x].sum += t[v].sum;\n                if (t[v].sum > maxn) maxid = v, maxn = t[v].sum;\n            }\n        ans += min(t[x].sum - 1, 2ll * (t[x].sum - maxn));\n        if (maxid != x && t[x].sum + 1 <= 2ll * maxn) t[x].son[1] = maxid;\n        t[x].vsum = t[x].sum - t[x].val - t[t[x].son[1]].sum;\n    }\n} lct;\nmain()\n{\n    n = read(), m = read();\n    for (int i = 1; i <= n; i++)\n        lct.t[i].val = read();\n    for (int i = 1; i < n; i++)\n    {\n        int u = read(), v = read();\n        lct.addedge(u, v);\n    }\n    lct.dfs(1, 0);\n    printf(\"%lld\\n\", ans);\n    while (m--)\n    {\n        int x = read(), w = read();\n        lct.update(x, w);\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1522127131,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4338 \u3010[ZJOI2018]\u5386\u53f2\u3011"
    }
]