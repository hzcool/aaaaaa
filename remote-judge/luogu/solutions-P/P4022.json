[
    {
        "content": "$60pts:$  \n\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u5957\u8def\u662f\uff1a\u770b\u89c1\u5e8f\u5217\u5206\u6bb5\u60f3$\\Theta(n^2)DP+$\u4f18\u5316\u3002  \n\u8fd9\u9898\u76ee\u8981\u7684\u662f$L$\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u4e0d\u5f71\u54cd\u6211\u4eec$DP$\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u3002  \n\u8fd9\u4e2a\u5206\u6bb5\u7684$DP$\u4e5f\u662f\u5f88\u663e\u7136\uff0c\u8bbe$dp_i$\u8868\u793a\u4ee5i\u4f5c\u4e3a\u5f53\u524d\u6bb5\u7ed3\u5c3e\uff1a  \n$$dp_i=\\max(dp_j+i-(j+1)+1,dp_{i-1}),j\\in [i-maxlen_i,i-l]$$\n\u5176\u4e2d\uff0c$maxlen_i$\u8868\u793a\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u51fa\u73b0\u5728\u6a21\u677f\u4e32\u4e2d\u7684\u6700\u957f\u957f\u5ea6\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528$SAM$\u4e00\u5f00\u59cb\u8dd1\u51fa\u6765\uff1b$l$\u8868\u793a\u5f53\u524d\u4e8c\u5206\u7684\u7b54\u6848\u3002  \n\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\uff08\u4e0a\u754c\u590d\u6742\u5ea6\uff09$O(n^2\\log n)$\u7684\u7b97\u6cd5\u3002  \n  \n$100pts:$  \n\u51b3\u7b56\u5355\u8c03\u6027\u5f88\u663e\u7136\uff0c\u56e0\u4e3a$i-maxlen_i$\u4e00\u5b9a\u662f\u5355\u8c03\u9012\u589e\u7684\u3002  \n\u53d1\u73b0\u51b3\u7b56\u5355\u8c03\u6027\u4e4b\u540e\uff0c\u5c06$dp$\u65b9\u7a0b\u6539\u6210$dp_j-j+i$\uff0c$i$\u663e\u7136\u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ef4\u62a4\u524d\u9762\u8fd9\u4e2a$dp_j-j$\u7684\u5355\u8c03\u9012\u51cf\u961f\u5217\u4e86\u3002\u590d\u6742\u5ea6$O(n\\log n)$\u3002  \n$P.S.$\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u7528\u5e7f\u4e49$SAM$\u7684\uff0c\u53ea\u8981\u9694\u4e00\u4e2a\u5b57\u7b26\u63d2\u5c31\u53ef\u4ee5\u4e86\uff0c\u867d\u7136\u7a7a\u95f4\u8c8c\u4f3c\u6709\u90a3\u4e48\u4e00\u70b9\u513f......\u5927\uff1f\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<deque>\n#define neko 2000010\n#define chkmax(a,b) ((a)>(b)?(a):(b))\n#define f(i,a,b) for(register int i=(a);i<=(b);i=-(~(i)))\ntypedef int arr[neko];\narr link,len,dp,maxlen,q;\nint n,m,nex[neko][3];\nnamespace SAM\n{\n\tint slen,cnt,cur,last;\n\tvoid find(char *s)\n\t{\n\t\tint p=0,now=0,x;\n\t\tslen=strlen(s+1);\n\t\tf(i,1,slen)\n\t\t{\n\t\t\tx=s[i]-'0';\n\t\t\tif(nex[p][x])++now,p=nex[p][x];\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(;p!=-1&&(!nex[p][x]);p=link[p]);\n\t\t\t\tif(p==-1)p=0,now=0;\n\t\t\t\telse now=len[p]+1,p=nex[p][x];\n\t\t\t}maxlen[i]=now;\n\t\t}\n\t}//this is right\n\tvoid extend(char *s)\n\t{\n\t\tint p,q,clone,x;\n\t\tlink[0]=-1,slen=strlen(s+1);s[++slen]='2';\n\t\tf(i,1,slen)\n\t\t{\n\t\t\tcur=++cnt,len[cur]=len[last]+1;\n\t\t\tx=s[i]-'0';\n\t\t\tfor(p=last;p!=-1&&(!nex[p][x]);p=link[p])nex[p][x]=cur;\n\t\t\tif(p==-1)link[cur]=0;\n\t\t\telse\n\t\t\t{\n\t\t\t\tq=nex[p][x];\n\t\t\t\tif(len[p]+1==len[q])link[cur]=q;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tclone=++cnt;\n\t\t\t\t\tlen[clone]=len[p]+1;\n\t\t\t\t\tlink[clone]=link[q];\n\t\t\t\t\tf(j,0,1)nex[clone][j]=nex[q][j];\n\t\t\t\t\tfor(;p!=-1&&(nex[p][x]==q);p=link[p])nex[p][x]=clone;\n\t\t\t\t\tlink[q]=link[cur]=clone;\n\t\t\t\t}\n\t\t\t}last=cur;\n\t\t}\n\t}\n}\nbool check(int l)\n{\n\tint slen=SAM::slen,j,H=0,T=-1;\n\t//easily(?) to prove that it has a monotonicity of decision making\n\tf(i,0,l-1)dp[i]=0;\n\tf(i,l,slen)\n\t{\n\t\tdp[i]=dp[i-1];\n\t\twhile(H<=T&&(dp[i-l]-(i-l))>(dp[q[T]]-q[T]))--T;\n\t\tq[++T]=i-l;\n\t\twhile(H<=T&&q[H]<(i-maxlen[i]))++H;\n\t\tif(H<=T)dp[i]=chkmax(dp[i],dp[q[H]]-q[H]+i);//i-(j+1)+1\n\t\t//f(j,i-maxlen[i],i-l)if(dp[j]+(i-j)>dp[i])dp[i]=dp[j]+(i-j);//i-(maxlen[i]+1)+1\n\t}//f(i,1,slen)printf(\"%d \",dp[i]);puts(\"\");\n\treturn dp[slen]*10>=slen*9;\n}\nchar s[neko];\n#define mid ((l+r)>>1)\nint main()\n{\n\tusing namespace SAM;\n\tint l,r;\n\tscanf(\"%d%d\",&n,&m);\n\tf(i,1,m)scanf(\"%s\",s+1),extend(s);\n\tf(i,1,n)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tl=1,r=strlen(s+1);\n\t\tfind(s);\n\t\twhile(l<=r)\n\t\t{\n\t\t\t//printf(\"%d %d %d\\n\",l,r,mid);\n\t\t\tif(check(mid))l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}printf(\"%d\\n\",mid);\n\t}return 0;\n}\n```",
        "postTime": 1528808857,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u6709\u591a\u4e2a\u4e3b\u4e32,\u6bcf\u6b21\u8be2\u95ee\u5c06\u8be2\u95ee\u4e32\u5206\u6210\u591a\u4e2a\u8fde\u7eed\u5b50\u4e32,\u5982\u679c\u4e00\u4e2a\u5b50\u4e32\u957f\u5ea6$\\ge L$\u4e14\u5728\u4e3b\u4e32\u4e2d\u51fa\u73b0\u8fc7\u5c31\u662f\u5408\u6cd5\u7684\n\n\u5982\u679c\u5408\u6cd5\u7684\u5b50\u4e32\u603b\u957f\u5ea6$\\ge$\u8be2\u95ee\u4e32\u957f\u7684$90\\%$,\u8fd9\u4e2a\u4e32\u5c31\u662f\u5408\u6cd5\u7684\u5b57\u7b26\u4e32,\u6c42\u4f7f\u5f97\u8be2\u95ee\u4e32\u6210\u4e3a\u5408\u6cd5\u7684\u5b57\u7b26\u4e32\u7684\u6700\u5927\u7684$L$\n\n---\n\n### \u9898\u89e3\n\n\u5148\u5efa\u597d\u5e7f\u4e49$SAM,$\u53d1\u73b0$L$\u6ee1\u8db3\u5355\u8c03\u6027,\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\n\n\u8003\u8651\u600e\u4e48$check$~~\u7528dp\u554a~~\n\n\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684$DP,f[i]$\u8868\u793a\u524d$i$\u4e2a\u5b57\u7b26\u6700\u957f\u5408\u6cd5\u957f\u5ea6,$mac_i$\u8868\u793a\u5339\u914d\u5230$i$\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6(\u5728\u5e7f\u4e49$SAM$\u4e0a,\u6c42\u6cd5\u540c[$[Spoj1812]LCS2$](https://blog.csdn.net/benoble_/article/details/79641188))\n\n$$\\Rightarrow f[i]=max\\{f[i-1],f[j]+i-j,j\\in[i-mac_i,i-L]\\}$$\n\n\u53ef\u4ee5\u53d1\u73b0$i-L$\u5355\u8c03\u9012\u589e\u7684,$i-mac_i$\u662f\u5355\u8c03\u4e0d\u51cf\u7684,\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u5230$O(n)$\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=1e6+5,M=2*N;\ntypedef long long ll;\ntypedef int arr[M];\nstruct SAM{\n    int las,T,ch[M][2];arr fa,len;\n    SAM(){las=T=1;}\n    inline void ins(int c){\n        int p=las,np;fa[las=np=++T]=1,len[np]=len[p]+1;\n        for(;p&&!ch[p][c];p=fa[p])ch[p][c]=np;\n        if(p){\n            int q=ch[p][c],nq;\n            if(len[p]+1==len[q])fa[np]=q;\n            else{\n                fa[nq=++T]=fa[q],len[nq]=len[p]+1,memcpy(ch[nq],ch[q],4*2);\n                for(fa[q]=fa[np]=nq;ch[p][c]==q;p=fa[p])ch[p][c]=nq;\n            }\n        }\n    }\n    int n,mac[N],f[N],q[N];char s[N];\n    inline void Match(){\n    \tint x=1,l=0,c;\n    \tfp(i,1,n){\n    \t\tc=s[i]-'0';while(x&&!ch[x][c])x=fa[x],l=len[x];\n    \t\tif(x)x=ch[x][c],++l;else x=1,l=0;mac[i]=l;\n    \t}\n    }\n    inline bool chk(int L){\n    \tint h=1,t=0;\n    \tfp(i,1,L-1)f[i]=0;\n    \tfp(i,L,n){f[i]=f[i-1];\n    \t\twhile(h<=t&&f[q[t]]-q[t]<f[i-L]-(i-L))--t;\n    \t\tq[++t]=i-L;while(h<=t&&q[h]<i-mac[i])++h;\n    \t\tif(h<=t)cmax(f[i],f[q[h]]+i-q[h]);\n    \t}\n    \treturn f[n]*10>=n*9;\n    }\n\tinline void sol(){\n\t\tscanf(\"%s\",s+1);n=strlen(s+1);Match();\n\t\tint L=0,R=n,ans=0,mid;\n\t\twhile(L<=R){\n\t\t\tmid=(L+R)>>1;\n\t\t\tif(chk(mid))ans=mid,L=mid+1;\n\t\t\telse R=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}p;\nint n,m;char s[N];\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    scanf(\"%d%d\",&n,&m);\n    fp(i,1,m){\n    \tscanf(\"%s\",s),p.las=1;\n    \tfp(j,0,strlen(s)-1)p.ins(s[j]-'0');\n    }\n    while(n--)p.sol();\nreturn Ot(),0;\n}\n\n```\n\n\n\n------------\n\n$upd\\ 19.08.11$\n\n\u611f\u8c22\u8bc4\u8bba\u533a\u5927\u4f6c\u6307\u51fa\u9519\u8bef\uff0c\u5df2\u4fee\u6539\u3002",
        "postTime": 1521784356,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/P4022) \n\nupd 2021.7.4\uff1a\u66f4\u6539\u90e8\u5206\u7528\u8bcd.\n## \u9898\u610f\n\u7ed9\u4f60 $m$ \u4e2a\u6587\u672c\u4e32 $T_{1,2,...,m}$\uff0c$n$ \u6b21\u8be2\u95ee\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 $A$ \u6ee1\u8db3 $A=A_1A_2A_3...A_k$\uff0c\u5176\u4e2d $\\forall i\\in[1,k],|A_i|\\ge L$\u3002\u6c42 $L_0=\\max \\{L|(\\sum_{i=1}^k|A_i|[\\exists j\\in[1,m],A_i\\text{ in substrings}(T_j)])\\ge|A|\\times 0.9\\}$\u3002\n\n$\\sum|A|+\\sum|T_i|\\le 1.1\\times 10^6$\u3002\n## \u601d\u8def\n\u9996\u5148\u770b\u5230 $\\max$ \u5148\u77e5\u9053\u9700\u8981\u4e8c\u5206\u7b54\u6848 $L_0$\uff0c\u7136\u540e\u8003\u8651 $\\text{check}$ \u4e00\u4e2a $L$ \u662f\u5426\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u770b\u5230\u6587\u672c\u5206\u6bb5\u81ea\u7136\u5730\u60f3\u5230 $\\text{dp}$\u3002\n\n\u6211\u4eec\u8bbe $dp_i$ \u8868\u793a\u4ee5 $i$ \u4f5c\u4e3a\u5f53\u524d\u6bb5\u7ed3\u5c3e\uff0c\u6700\u957f\u53ef\u4ee5\u5339\u914d\u591a\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u6709\u8f6c\u79fb $dp_i=\\max(dp_j+i-j,dp_{i-1})(j\\in[i-match_i,i-L])$\uff0c\u5176\u4e2d $match_i$ \u4e3a\u4ee5 $i$ \u4f5c\u4e3a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u5728\u6587\u672c\u4e32\u4e2d\u80fd\u591f\u5339\u914d\u7684\u6700\u957f\u957f\u5ea6\u3002\n\n\u7136\u540e\u5904\u7406 $match_i$ \u53ef\u4ee5\u5f00\u4e00\u4e2a\u5e7f\u4e49 $\\text{SAM}$ \u7edf\u8ba1\uff0c\u4e0e [$\\text{LCS}$](https://www.luogu.com.cn/problem/SP1811) \u4e00\u6837\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bb2\u89e3\u3002\n\n\u73b0\u5728\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(\\sum|T|+\\sum|A|^2\\log |A|)$ \u7684\u7b97\u6cd5\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651 $i$ \u663e\u7136\u4e3a\u4e25\u683c\u9012\u589e\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4 $dp_j-j$ \u7684\u5355\u8c03\u961f\u5217\u7136\u540e\u5c31\u53ef\u4ee5 $O(1)$ \u8f6c\u79fb\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u81f3 $O(\\sum|T|+\\sum|A|\\log |A|)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{\n\t\n}\nconst int N=2.2e6+10;\nint n,m,q;\nint pos[N],ansi[N];\nchar str[N];\nstruct SAM{\n\tstruct statu{\n\t\tint len,link;\n\t\tint ch[2];\n\t}a[N];\n\tint siz,last;\n\tSAM(){\n\t\ta[0].len=0;\n\t\ta[0].link=-1;\n\t\tlast=0;\n\t}\n\tinline void insert(int c){\n\t\tint cur=++siz;\n\t\ta[cur].len=a[last].len+1;\n\t\tint p=last;\n\t\twhile(p!=-1&&!a[p].ch[c]){\n\t\t\ta[p].ch[c]=cur;\n\t\t\tp=a[p].link;\n\t\t}\n\t\tif(~p){\n\t\t\tint q=a[p].ch[c];\n\t\t\tif(a[p].len+1==a[q].len){\n\t\t\t\ta[cur].link=q;\n\t\t\t}else{\n\t\t\t\tint clone=++siz;\n\t\t\t\ta[clone]=a[q];\n\t\t\t\ta[clone].len=a[p].len+1;\n\t\t\t\twhile(p!=-1&&a[p].ch[c]==q){\n\t\t\t\t\ta[p].ch[c]=clone;\n\t\t\t\t\tp=a[p].link;\n\t\t\t\t}\n\t\t\t\ta[q].link=a[cur].link=clone;\n\t\t\t}\n\t\t}else{\n\t\t\ta[cur].link=0;\n\t\t}\n\t\tlast=cur;\n\t}\n\tinline void insert(){\n\t\tstatic char str[N];\n\t\tfor(int k=1;k<=m;k++){\n\t\t\treadstr(str);\n\t\t\tint len=strlen(str+1);\n\t\t\tlast=0;\n\t\t\tfor(int i=1;i<=len;i++){\n\t\t\t\tinsert(str[i]-'0');\n\t\t\t}\n\t\t}\n\t}\n\tinline void calc(){\n\t\tint anss=0;\n\t\tint p=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint c=str[i]-'0';\n\t\t\tif(a[p].ch[c]){\n\t\t\t\tanss++;\n\t\t\t\tp=a[p].ch[c];\n\t\t\t}else{\n\t\t\t\twhile(p!=-1&&!a[p].ch[c]){\n\t\t\t\t\tp=a[p].link;\n\t\t\t\t}\n\t\t\t\tif(~p){\n\t\t\t\t\tanss=a[p].len+1;\n\t\t\t\t\tp=a[p].ch[c];\n\t\t\t\t}else{\n\t\t\t\t\tanss=0;\n\t\t\t\t\tp=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tansi[i]=anss;\n\t\t}\n\t}\n\tinline bool check(int L){\n\t\tstatic int q[N],dp[N];\n\t\tint head=1,tail=0;\n\t\tfor(int i=1;i<L;i++) dp[i]=0;\n\t\tfor(int i=L;i<=n;i++){\n\t\t\tdp[i]=dp[i-1];\n\t\t\twhile(head<=tail&&dp[q[tail]]-q[tail]<=dp[i-L]-i+L) tail--;\n\t\t\tq[++tail]=i-L;\n\t\t\twhile(head<=tail&&q[head]<i-ansi[i]) head++;\n\t\t\tif(head<=tail) dp[i]=max(dp[i],dp[q[head]]+i-q[head]);\n\t\t}\n\t\treturn n*0.9<=dp[n];\n\t}\n}sam;\nint main(){\n\tq=read(),m=read();\n\tsam.insert();\n\twhile(q--){\n\t\tn=readstr(str);\n\t\tsam.calc();\n\t\tint l=0,r=n;\n\t\twhile(l<=r){\n\t\t\tint mid=l+r>>1;\n\t\t\tif(sam.check(mid)) l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\twrite(l-1);\n\t\tputc('\\n');\n\t}\n\tflush();\n\treturn 0;\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1624271693,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4022\u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "\u8001\u65e9\u5c31\u5728\u6211\u7684\u667a\u63a8\u91cc\u4e86\uff0c\u4f46\u4e00\u76f4\u6ca1\u505a\u2026\u2026\u4eca\u5929\u521a\u521a\u60f3\u5230\u4e86 $dp$ \u65b9\u7a0b\uff0c\u7a81\u7136\u610f\u8bc6\u5230\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u7136\u540e\u5c31\u8fc7\u4e86\u2026\u2026\n\n\u597d\u5427\uff0c\u6211\u4eec\u5148\u5efa\u4e00\u4e2a\u5e7f\u4e49 $SAM$\uff0c\u7136\u540e\u5c06\u6587\u7ae0\u5728\u4e0a\u9762\u5339\u914d\u3002\u6211\u4eec\u628a\u6bcf\u6b21\u5339\u914d\u5230\u7684\u4e32\u7684\u957f\u5ea6\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u5c31\u662f $dp$ \u65b9\u7a0b\u8f6c\u79fb\u7684\u9650\u5236\u3002\u7136\u540e\u5c31\u662f\u5355\u8c03\u961f\u5217 $O(n)$ \u626b\u4e86\n\n$$f[i]=max(f[j]+i-j(j\\in[i-match[i],i])$$\n\n```cpp\nint check(int L,int n){\n\tint head=1,tail=0;\n\tfor(int i=1;i<=L-1;i++) f[i]=0;\n\tfor(int i=L;i<=n;i++){\n\t\tf[i]=f[i-1];\n\t\twhile(head<=tail&&f[q[tail]]-q[tail]<=f[i-L]-(i-L)) tail--;\n\t\tq[++tail]=i-L;\n\t\twhile(head<=tail&&q[head]<i-match[i]) head++;\n\t\tif(head<=tail) f[i]=max(f[i],f[q[head]]+i-q[head]);\n\t}\n\treturn f[n]*10>=n*9;\n}\n```\n\n\u5339\u914d\u7684\u8bdd\u5c31\u7528\u5339\u914d $LCS$ \u7684\u65b9\u6cd5\n\n```cpp\nvoid pre(int n){\n\tint p=1,c,len=0;\n\tfor(int i=1;i<=n;i++){\n\t\tc=s[i]-'0';\n\t\tif(ch[p][c]) p=ch[p][c],len++;\n\t\telse {\n\t\t\tfor(;p&&!ch[p][c];p=fa[p]);\n\t\t\tif(p) len=l[p]+1,p=ch[p][c];\n\t\t\telse len=0,p=1;\n\t\t}\n\t\tmatch[i]=len;\n\t}\n}\n```\n\n\u8fd9\u9898\u5c31\u6109\u5feb\u7684\u505a\u5b8c\u4e86\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=2200000+10;\nint n,m,f[maxn],match[maxn],q[maxn],last,cnt,ch[maxn][2],fa[maxn],l[maxn];\nchar s[maxn];\n\nvoid insert(int c){\n\tint p=last,q=++cnt;last=q;l[q]=l[p]+1;\n\tfor(;p&&!ch[p][c];p=fa[p]) ch[p][c]=q;\n\tif(!p) fa[q]=1;\n\telse {\n\t\tint r=ch[p][c];\n\t\tif(l[p]+1==l[r]) fa[q]=r;\n\t\telse {\n\t\t\tint s=++cnt;l[s]=l[p]+1;\n\t\t\tmemcpy(ch[s],ch[r],sizeof(ch[r]));\n\t\t\tfa[s]=fa[r];fa[r]=fa[q]=s;\n\t\t\tfor(;p&&ch[p][c]==r;p=fa[p]) ch[p][c]=s;\n\t\t}\n\t}\n}\n\nvoid pre(int n){\n\tint p=1,c,len=0;\n\tfor(int i=1;i<=n;i++){\n\t\tc=s[i]-'0';\n\t\tif(ch[p][c]) p=ch[p][c],len++;\n\t\telse {\n\t\t\tfor(;p&&!ch[p][c];p=fa[p]);\n\t\t\tif(p) len=l[p]+1,p=ch[p][c];\n\t\t\telse len=0,p=1;\n\t\t}\n\t\tmatch[i]=len;\n\t}\n}\n\nint check(int L,int n){\n\tint head=1,tail=0;\n\tfor(int i=1;i<=L-1;i++) f[i]=0;\n\tfor(int i=L;i<=n;i++){\n\t\tf[i]=f[i-1];\n\t\twhile(head<=tail&&f[q[tail]]-q[tail]<=f[i-L]-(i-L)) tail--;\n\t\tq[++tail]=i-L;\n\t\twhile(head<=tail&&q[head]<i-match[i]) head++;\n\t\tif(head<=tail) f[i]=max(f[i],f[q[head]]+i-q[head]);\n\t}\n\treturn f[n]*10>=n*9;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint len,l,r,mid,ans;last=cnt=1;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tlen=strlen(s+1);last=1;\n\t\tfor(int j=1;j<=len;j++) insert(s[j]-'0');\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tl=0,r=len=strlen(s+1),ans=0;pre(len);\n\t\twhile(l<=r){\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(check(mid,len)) l=mid+1,ans=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1546392409,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u867d\u7136\u662f\u9ed1\u9898\uff0c\u4f46\u662f\u96be\u5ea6\u5e76\u4e0d\u9ad8\u3002~~\u6211\u662f\u4e0d\u662f\u5bf9\u9ed1\u9898\u96be\u5ea6\u6709\u4ec0\u4e48\u8bef\u89e3~~\n\n## \u601d\u8def\n\n\u8bbe $f[i]$ \u8868\u793a\u5f53\u524d\u4f5c\u6587\u5339\u914d\u5b8c\u524d $i$ \u4e2a\u5b57\u7b26\u7684\u65f6\u5019\u6709\u591a\u5c11\u5b57\u7b26\u5728\u6807\u51c6\u5e93\u51fa\u73b0\u8fc7\u3002\n\n\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e `check` \u51fd\u6570\u8fd4\u56de\u503c\u5373 `f[len] * 10 >= len * 9`\u3002\uff08\u8981\u8d85\u8fc7 $90\\%$ \u561b\uff09\n\n\u5bf9\u4e8e\u6bcf\u7bc7\u4f5c\u6587\uff0c\u8bbe $L[i]$ \u8868\u793a\u6700\u5927\u7684\u957f\u5ea6 $j$\uff0c\u6ee1\u8db3 $s[i-j,i]$ \u5728\u6807\u51c6\u5e93\u91cc\u51fa\u73b0\u8fc7\u3002\uff08\u4ee3\u7801\u4e2d\u7684 `mxlen` \u6570\u7ec4\uff09\n\n$f$ \u7684\u9012\u63a8\u5f0f\u5f88\u7b80\u5355\uff1a\n\n$f[i]=\\max(f[i-1],\\displaystyle\\max_{j=i-x}^{i-Len[i]}(f[j]-j+i))$\n\n\uff08$x$ \u8868\u793a\u5f53\u524d\u4e8c\u5206\u7684\u7b54\u6848\uff09\n\n$f[i-1]$ \u8868\u793a\u8fd9\u4f4d\u4e0d\u5339\u914d\uff0c\u7136\u540e $f[j]-j+i$ \u8868\u793a\u8fd9\u4f4d\u63a5\u5728 $j$ \u540e\u9762\uff0c\u7136\u540e $-j+i$ \u5176\u5b9e\u5c31\u662f\u52a0\u4e0a\u5f53\u524d\u7684\u957f\u5ea6\u3002\n\n\u540e\u9762\u63a5\u7684\u8fd9\u6bb5\u5b57\u7b26\u4e32\u957f\u5ea6\u663e\u7136\u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u5339\u914d $L[i]$\uff0c\u6240\u4ee5\u4e0a\u9650\u662f $i-L[i]$\u3002\n\n\u7136\u540e\u5c31\u662f $L[]$ \u600e\u4e48\u6c42\uff1f\n\n\u5bf9\u6240\u6709\u5b50\u4e32\u5efa\u5e7f\u4e49 SAM\uff0c\u7136\u540e\u8df3 parent \u6811\u5c31\u884c\u3002\n\n$i-L[i]$ \u660e\u663e\u5355\u8c03\u9012\u589e\uff08\u56e0\u4e3a\u524d\u4e00\u4e2a\u4e32\u5305\u542b\u540e\u4e00\u4e2a\u4e32\uff09\uff0c\u7136\u540e dp \u5f0f\u4e2d\uff0c$f[j]-j$ \u548c $i$ \u6ca1\u5173\u7cfb\uff0c\u5269\u4f59\u90e8\u5206 $i$ \u4e5f\u662f\u5355\u8c03\u9012\u589e\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u5f0f\u5b50\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u641e\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2.2e6 + 5;\nint n, m;\nstruct SAM\n{\n    int tot, last, fa[N], len[N], t[N][2];\n    int q[N], f[N], mxlen[N];\n    inline SAM()\n    {\n        tot = last = 0;\n        fa[0] = -1;\n    }\n    inline void insert(char c)\n    {\n        c ^= 48;\n        int cur = ++tot;\n        len[cur] = len[last] + 1;\n        int p = last;\n        while (~p && !t[p][c])\n            t[p][c] = cur, p = fa[p];\n        last = cur;\n        if (!~p)\n        {\n            fa[cur] = 0;\n            return;\n        }\n        int x = t[p][c];\n        if (len[p] + 1 == len[x])\n            fa[cur] = x;\n        else\n        {\n            len[++tot] = len[p] + 1;\n            fa[tot] = fa[x];\n            t[tot][0] = t[x][0], t[tot][1] = t[x][1];\n            while (~p && t[p][c] == x)\n                t[p][c] = tot, p = fa[p];\n            fa[x] = fa[cur] = tot;\n        }\n    }\n    inline void match(string s)\n    {\n        int cur = 0, res = 0;\n        for (int i = 0; i < s.size(); i++)\n        {\n            int c = s[i] ^ 48;\n            if (t[cur][c])\n                res++, cur = t[cur][c];\n            else\n            {\n                while (~cur && !t[cur][c])\n                    cur = fa[cur];\n                if (!~cur)\n                    res = cur = 0;\n                else\n                    res = len[cur] + 1, cur = t[cur][c];\n            }\n            mxlen[i + 1] = res;\n        }\n    }\n    inline bool check(int x, int len)\n    {\n        for (int i = 0; i < x; i++)\n            f[i] = 0;\n        for (int i = x, h = 1, t = 0; i <= len; i++)\n        {\n            while (h <= t && f[i - x] - (i - x) > f[q[t]] - q[t])\n                t--;\n            q[++t] = i - x;\n            while (h <= t && q[h] < i - mxlen[i])\n                h++;\n            if (h <= t)\n                f[i] = max(f[i - 1], f[q[h]] + i - q[h]);\n        }\n        return f[len] * 10 >= len * 9;\n    }\n} sam;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    string s;\n    for (int i = 1; i <= m; i++)\n    {\n        cin >> s;\n        sam.last = 0;\n        for (char c : s)\n            sam.insert(c);\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> s;\n        sam.match(s);\n        int l = 1, r = s.size(), len = s.size();\n        while (l <= r)\n        {\n            int mid = l + r >> 1;\n            if (sam.check(mid, len))\n                l = mid + 1;\n            else\n                r = mid - 1;\n        }\n        cout << l - 1 << '\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1672336391,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P4022 \u9898\u89e3"
    },
    {
        "content": "> [P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0 \u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4022)\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u51fa\u5b57\u5178 $T_{1,2,\\cdots,m}$\uff0c\u591a\u6b21\u8be2\u95ee\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684 $L_0$\uff0c\u5176\u4e2d $L_0$ \u8868\u793a\uff1a\u5c06 $s$ \u5206\u4e3a\u82e5\u5e72\u5b50\u4e32\uff0c\u4f7f\u5f97\u6240\u6709\u957f\u5ea6\u4e0d\u5c0f\u4e8e $l$ \u4e14\u5728\u5b57\u5178 $T$ \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b50\u4e32\u957f\u5ea6\u4e4b\u548c\u4e0d\u5c0f\u4e8e $0.9|s|$ \u7684 $l$ \u7684\u6700\u5927\u503c\u3002\n\n\u8282\u9009\u81ea [\u6211\u7684 SAM \u505a\u9898\u7b14\u8bb0](https://www.cnblogs.com/alex-wei/p/Suffix_Automaton_Involution.html)\uff0c\u6807\u53f7\u4e3a VIII\u3002\n\n---\n\n\u9996\u5148\u8fd9\u4e2a $L_0$ \u663e\u7136\u5177\u6709\u53ef\u4e8c\u5206\u6027\uff0c\u90a3\u6211\u4eec\u5c06\u9898\u76ee\u8f6c\u5316\u4e3a\u7ed9\u51fa $l$ \u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u957f\u5ea6\u6700\u5927\u503c\u3002\u8bbe $f_i$ \u8868\u793a $s[1:i]$ \u80fd\u5339\u914d\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u663e\u7136\u6709 $f_i=\\max(f_{i-1},\\max_{j=i-pre_i}^{i-l} f_j+1)$\uff0c\u5176\u4e2d $pre_i$ \u662f $s[1:i]$ \u5728\u5b57\u5178 $T$ \u4e2d\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\u3002\u53ef\u4ee5\u53d1\u73b0\u51b3\u7b56\u70b9\u5355\u8c03\u4e0d\u51cf\uff08\u56e0\u4e3a\u6bcf\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c$pre$ \u6700\u591a\u589e\u52a0\u4e00\u4f4d\uff0c\u6240\u4ee5 $i-pre_i$ \u5355\u8c03\u4e0d\u51cf\uff09\uff0c\u90a3\u4e48\u5355\u8c03\u961f\u5217\u5c31\u597d\u4e86\u3002\n\n\u6c42 $pre_i$ \u76f4\u63a5\u5e7f\u4e49 SAM \u5373\u53ef\u3002\u6ce8\u610f\u5982\u679c\u5728\u63d2\u5165\u65b0\u5b57\u7b26\u4e32\u65f6\u76f4\u63a5 $las=1$\uff0c\u662f**\u4e0d\u80fd\u5224\u65ad\u5f53\u524d\u72b6\u6001\u662f\u5426\u5df2\u6709\u8f6c\u79fb\u5e76\u76f4\u63a5\u8df3\u8fc7\u53bb\uff08\u800c\u4e0d\u662f\u65b0\u5efa\u4e00\u4e2a\u72b6\u6001\uff09\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u7834\u574f\u539f\u6709\u7684 SAM \u7684\u7ed3\u6784\u3002**\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\sum |T_i|+\\sum |s|\\log \\sum |s|)$\u3002\n\n\n\n```cpp\n/*\n\tPowered by C++11.\n\tAuthor : Alex_Wei.\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define mcpy(x,y) memcpy(x,y,sizeof(y))\n\nconst int N=2.2e6+5;\n\n// Suffix_Automaton\nint n,m;\nint cnt,las;\nint fa[N],len[N],son[N][2];\nvoid ins(int it){\n\tint p=las,cur=++cnt;\n\tlen[cur]=len[las]+1,las=cur;\n\twhile(p&&!son[p][it])son[p][it]=cur,p=fa[p];\n\tif(!p)return fa[cur]=1,void();\n\tint q=son[p][it];\n\tif(len[p]+1==len[q])return fa[cur]=q,void();\n\tint cl=++cnt;\n\tfa[cl]=fa[q],fa[q]=fa[cur]=cl,len[cl]=len[p]+1;\n\tson[cl][0]=son[q][0],son[cl][1]=son[q][1];\n\twhile(p&&son[p][it]==q)son[p][it]=cl,p=fa[p];\n} void build(char *s){\n\tint n=strlen(s+1); las=1;\n\tfor(int i=1;i<=n;i++)ins(s[i]-'0');\n}\n\nint f[N],d[N],hd,tl;\nchar s[N];\nint check(int x){\n\tint n=strlen(s+1),p=1,l=0,ans=0; hd=1,tl=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint it=s[i]-'0';\n\t\twhile(p&&!son[p][it])p=fa[p],l=len[p];\n\t\tif(!p)p=1,l=0;\n\t\telse p=son[p][it],l++;\n\t\tif(i>=x){\n\t\t\twhile(hd<=tl&&f[d[tl]]+(i-x-d[tl])<=f[i-x])tl--;\n\t\t\td[++tl]=i-x;\n\t\t} while(hd<=tl&&d[hd]+l<i)hd++;\n\t\tif(hd<=tl)f[i]=max(f[i-1],f[d[hd]]+(i-d[hd]));\n\t\telse f[i]=f[i-1];\n\t\tans=max(ans,f[i]);\n\t} return ans;\n}\n\nint main(){\n\tcin>>n>>m,cnt=1;\n\tfor(int i=1;i<=m;i++)scanf(\"%s\",s+1),build(s);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tint n=strlen(s+1),l=0,r=n;\n\t\twhile(l<r){\n\t\t\tint m=(l+r>>1)+1;\n\t\t\tif(check(m)>=n*0.9)l=m;\n\t\t\telse r=m-1;\n\t\t} cout<<l<<\"\\n\";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1615024293,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0"
    },
    {
        "content": "\u7b54\u6848\u663e\u7136\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u5982\u4f55\u68c0\u9a8c\u4e00\u4e2a\u7b54\u6848 $L$ \u7684\u5408\u6cd5\u6027\uff0c\u8bbe $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u6700\u5927\u7684\u201c\u719f\u6089\u201d\u7684\u5b50\u4e32\u957f\u5ea6\u603b\u548c\uff0c\u5219\u6709\n$$f_i=\\max_{i-l_i\\le j\\le i-L}\\{f_j+i-j,f_{i-1}\\}$$\n\u5176\u4e2d $l_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u5728\u6807\u51c6\u4f5c\u6587\u5e93\u91cc\u80fd\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5efa\u5e7f\u4e49 SAM \u6c42\u89e3\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u6587\u672c\u4e32\u653e\u5728\u5e7f\u4e49 SAM \u4e0a\u8dd1\uff0c\u5728\u5931\u914d\u65f6\u8df3 parent \u6811\uff0c\u5e76\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u8bb0\u5f55\u7ec8\u6b62\u7ed3\u70b9\u7684 maxlen \u5373\u53ef\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u65b9\u7a0b\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316 DP \u7684\u5f62\u5f0f\uff0c\u7ef4\u62a4 $f_i-i$ \u7684\u5355\u8c03\u9012\u51cf\u961f\u5217\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\n\n\u82e5 $S$ \u4e3a\u6240\u6709\u6a21\u5f0f\u4e32\uff0c$T$ \u4e3a\u6240\u6709\u6587\u672c\u4e32\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|S|+|T|\\log |T|)$\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=2.2e6+5;\nstruct exSAM{int fa,len,son[2];}t[N];\nint n,m,tot=1,lst,mxl[N],f[N],ans,q[N];\nchar s[N];\n\nint Inst(int x)\n{\n\tif(t[lst].son[x]&&t[lst].len+1==t[t[lst].son[x]].len)\n\t\treturn t[lst].son[x];\n\tint cur=++tot,clone,tmp=lst,fl=0;\n\tt[cur].len=t[tmp].len+1;\n\tfor(;tmp&&!t[tmp].son[x];tmp=t[tmp].fa) t[tmp].son[x]=cur;\n\tif(!tmp) t[cur].fa=1;\n\telse\n\t{\n\t\tint q=t[tmp].son[x];\n\t\tif(t[tmp].len+1==t[q].len) t[cur].fa=q;\n\t\telse\n\t\t{\n\t\t\tif(tmp==lst) fl=1;\n\t\t\tt[clone=++tot]=t[q],t[clone].len=t[tmp].len+1;\n\t\t\tfor(;tmp&&t[tmp].son[x]==q;tmp=t[tmp].fa)\n\t\t\t\tt[tmp].son[x]=clone;\n\t\t\tt[cur].fa=t[q].fa=clone;\n\t\t}\n\t}\n\treturn fl?clone:cur;\n}\n\nvoid getmxl()\n{\n\tint len=strlen(s+1),now=1,res=0;\n\tfor(int i=1,x;i<=len;++i)\n\t{\n\t\tif(t[now].son[x=s[i]-'0']) ++res,now=t[now].son[x];\n\t\telse\n\t\t{\n\t\t\tfor(;now&&!t[now].son[x];now=t[now].fa);\n\t\t\tif(!now) now=1,res=0;\n\t\t\telse res=t[now].len+1,now=t[now].son[x];\n\t\t}\n\t\tmxl[i]=res;\n\t}\n}\n\nbool check(int L)\n{\n\tint len=strlen(s+1),l=1,r=0;\n\tq[1]=0,memset(f,0,sizeof(int[L]));\n\tfor(int i=L;i<=len;++i)\n\t{\n\t\tf[i]=f[i-1];\n\t\twhile(l<=r&&f[i-L]-i+L>f[q[r]]-q[r]) --r;\n\t\tq[++r]=i-L;\n\t\twhile(l<=r&&q[l]<i-mxl[i]) ++l;\n\t\tif(l<=r) f[i]=max(f[i],f[q[l]]+i-q[l]);\n\t}\n\treturn f[len]*10>=len*9;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1,len;i<=m;++i)\n\t{\n\t\tscanf(\"%s\",s+1),len=strlen(s+1),lst=1;\n\t\tfor(int j=1;j<=len;++j) lst=Inst(s[j]-'0');\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",s+1),getmxl();\n\t\tfor(int l=1,r=strlen(s+1),mid;l<=r;)\n\t\t\tcheck(mid=l+r>>1)?(ans=mid,l=mid+1):(r=mid-1);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1603089314,
        "uid": 88207,
        "name": "MKCCT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "### \u9898\u610f:\n\n\u7ed9\u5b9a\u591a\u4e2a\u4e3b\u4e32\uff0c\u6bcf\u6b21\u5c06\u8be2\u95ee\u4e32\u62c6\u5206\u6210\u591a\u4e2a\u8fde\u7eed\u5b50\u4e32\uff0c\u5982\u679c\u8be5\u5b50\u4e32\u5728\u4e3b\u4e32\u4e2d\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd9\u6bb5\u662f\u5408\u6cd5\u7684\uff0c\u8981\u6c42\u4e00\u4e2a\u6700\u5927\u7684 $L$ \u4f7f\u5f97\u5408\u6cd5\u7684\u957f\u5ea6 $\\geq$ \u8be2\u95ee\u4e32\u957f\u5ea6\u7684 $90\\%$\n\n\u6211\u4eec\u53d1\u73b0 $L$ \u662f\u53ef\u4ee5\u4e8c\u5206\u7684\uff0c\u6211\u4eec\u518d\u8003\u8651\u600e\u4e48 $check$ \u8fd9\u4e2a\u662f\u5426\u5408\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u4e2a $L$\u3002\n\n\u6211\u4eec\u8bbe $mx_i$ \u4e3a $i$ \u8282\u70b9\u7ed3\u5c3e\u6700\u957f\u80fd\u5339\u914d\u7684\u957f\u5ea6\u3002\n\n$F_i = \\max\\{F_{i-1},F_j+i-j\\} \\ \\ i - mx_i \\leq j \\leq i - L$\n\n\u6211\u4eec\u53d1\u73b0 $i - mx_i$\u662f\u975e\u964d\u7684\uff0c $i-L$ \u662f\u4e25\u683c\u4e0a\u5347\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217 + $dp$ \u6765\u5224\u5b9a\u53ef\u884c\u6027\u3002\n\n\n```cpp\n// powered by c++11\n// by Isaunoya\n#include <bits/stdc++.h>\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\nusing namespace std;\nusing db = double;\nusing ll = long long;\nusing uint = unsigned int;\n#define Tp template\nusing pii = pair<int, int>;\n#define fir first\n#define sec second\nTp<class T> void cmax(T& x, const T& y) {\n  if (x < y) x = y;\n}\nTp<class T> void cmin(T& x, const T& y) {\n  if (x > y) x = y;\n}\n#define all(v) v.begin(), v.end()\n#define sz(v) ((int)v.size())\n#define pb emplace_back\nTp<class T> void sort(vector<T>& v) { sort(all(v)); }\nTp<class T> void reverse(vector<T>& v) { reverse(all(v)); }\nTp<class T> void unique(vector<T>& v) { sort(all(v)), v.erase(unique(all(v)), v.end()); }\nconst int SZ = 1 << 23 | 233;\nstruct FILEIN {\n  char qwq[SZ], *S = qwq, *T = qwq, ch;\n#ifdef __WIN64\n#define GETC getchar\n#else\n  char GETC() { return (S == T) && (T = (S = qwq) + fread(qwq, 1, SZ, stdin), S == T) ? EOF : *S++; }\n#endif\n  FILEIN& operator>>(char& c) {\n    while (isspace(c = GETC()))\n      ;\n    return *this;\n  }\n  FILEIN& operator>>(string& s) {\n    while (isspace(ch = GETC()))\n      ;\n    s = ch;\n    while (!isspace(ch = GETC())) s += ch;\n    return *this;\n  }\n  Tp<class T> void read(T& x) {\n    bool sign = 0;\n    while ((ch = GETC()) < 48) sign ^= (ch == 45);\n    x = (ch ^ 48);\n    while ((ch = GETC()) > 47) x = (x << 1) + (x << 3) + (ch ^ 48);\n    x = sign ? -x : x;\n  }\n  FILEIN& operator>>(int& x) { return read(x), *this; }\n  FILEIN& operator>>(ll& x) { return read(x), *this; }\n} in;\nstruct FILEOUT {\n  const static int LIMIT = 1 << 22;\n  char quq[SZ], ST[233];\n  int sz, O;\n  ~FILEOUT() { flush(); }\n  void flush() {\n    fwrite(quq, 1, O, stdout);\n    fflush(stdout);\n    O = 0;\n  }\n  FILEOUT& operator<<(char c) { return quq[O++] = c, *this; }\n  FILEOUT& operator<<(string str) {\n    if (O > LIMIT) flush();\n    for (char c : str) quq[O++] = c;\n    return *this;\n  }\n  Tp<class T> void write(T x) {\n    if (O > LIMIT) flush();\n    if (x < 0) {\n      quq[O++] = 45;\n      x = -x;\n    }\n    do {\n      ST[++sz] = x % 10 ^ 48;\n      x /= 10;\n    } while (x);\n    while (sz) quq[O++] = ST[sz--];\n  }\n  FILEOUT& operator<<(int x) { return write(x), *this; }\n  FILEOUT& operator<<(ll x) { return write(x), *this; }\n} out;\n\nconst int maxn = 2e6 + 62;\nchar s[maxn];\n\nstruct SAM {\n  int cnt, las, ch[maxn][26], len[maxn], fa[maxn];\n\n  SAM() { cnt = las = 1; }\n\n  void ins(int c) {\n    int p = las, np = las = ++cnt;\n    len[np] = len[p] + 1;\n    for (; p && !ch[p][c]; p = fa[p]) ch[p][c] = np;\n    if (!p) {\n      fa[np] = 1;\n    } else {\n      int q = ch[p][c];\n      if (len[q] == len[p] + 1) {\n        fa[np] = q;\n      } else {\n        int nq = ++cnt;\n        memcpy(ch[nq], ch[q], sizeof(ch[q]));\n        fa[nq] = fa[q], fa[q] = fa[np] = nq, len[nq] = len[p] + 1;\n        for (; p && ch[p][c] == q; p = fa[p]) ch[p][c] = nq;\n      }\n    }\n  }\n\n  int mx[maxn];\n\n  void find() {\n    int L = strlen(s + 1), p = 1, mxl = 0;\n    for (int i = 1; i <= L; i++) {\n      int c = s[i] & 1;\n      for (; p && !ch[p][c];) p = fa[p], mxl = len[p];\n      if (p)\n        p = ch[p][c], ++mxl;\n      else\n        p = 1, mxl = 0;\n      mx[i] = mxl;\n    }\n  }\n\n  int f[maxn], q[maxn];\n  bool chk(int mid) {\n    int L = strlen(s + 1), h, t;\n    h = t = 0, q[++h] = 0;\n    for (int i = 1; i <= mid - 1; i++) f[i] = 0;\n    for (int i = mid; i <= L; i++) {\n      f[i] = f[i - 1];\n      while (h <= t && f[q[t]] - q[t] < f[i - mid] - (i - mid)) --t;\n      q[++t] = i - mid;\n      while (h <= t && q[h] < i - mx[i]) ++h;\n      if (h <= t) cmax(f[i], f[q[h]] + i - q[h]);\n    }\n    return f[L] * 10 >= L * 9;\n  }\n} sam;\n\nsigned main() {\n  // code begin.\n  int _, n;\n  scanf(\"%d %d\" , & _ , & n) ;\n  while (n--) {\n    scanf(\"%s\", s + 1);\n    sam.las = 1;\n    int len = strlen(s + 1);\n    for (int i = 1; i <= len; i++) {\n      sam.ins(s[i] & 1);\n    }\n  }\n  while (_--) {\n    scanf(\"%s\", s + 1), sam.find();\n    int l = 1, r = strlen(s + 1), ans = 0;\n    while (l <= r) {\n      int mid = l + r >> 1;\n      if (sam.chk(mid)) {\n        l = mid + 1;\n        ans = mid;\n      } else {\n        r = mid - 1;\n      }\n    }\n    out << ans << '\\n';\n  }\n  return 0;\n  // code end.\n}\n```",
        "postTime": 1584420645,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n**SAM+\u4e8c\u5206\u7b54\u6848+\u5355\u8c03\u961f\u5217\u4f18\u5316dp**\n\n~~\u4e4d\u4e00\u770b\uff0c\u8fd9\u9898\u633a\u82b1\u91cc\u80e1\u54e8\uff0c\u518d\u5b9a\u775b\u4e00\u770b\uff0c\u5c31\u662f\u633a\u82b1\u91cc\u80e1\u54e8\u3002~~\n\n\u548c\u524d\u9762\u7684\u90a3\u4e2a[\u516c\u5171\u4e32](https://www.luogu.com.cn/problem/P5546)\u6709\u4e00\u70b9\u76f8\u4f3c\uff0c\u5148\u628a\u6587\u672c\u4e32\u538b SAM \uff08\u5efa\u4e0d\u5efa Tire \u90fd\u5dee\u4e0d\u591a\uff09\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fdb\u884c\u4e00\u4e0b\u5339\u914d\u3002\n\u4ee5 $num[i]$ \u8868\u793a\u4ee5\u7b2c i \u4e2a\u7ed3\u5c3e\u7684\u4e0e\u6587\u672c\u4e32\u7684\u6700\u957f\u516c\u5171\u5b57\u4e32\u7684\u957f\u5ea6\u3002\n\n\u4ee5 $f[i]$ \u8868\u793a\u524di\u4e2a\u5b57\u7b26\u7684\u5b57\u4e32\u4e2d\u53ef\u4ee5\u5339\u914d\u7684\u6700\u957f\u7684\u957f\u5ea6\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u5f0f\u5b50\uff1a\n\n$f[i]=\\max (f[i-1],f[j]+i-j)$\n\n\u6ee1\u8db3\u6761\u4ef6\uff1a$(i-j \\ge L)$ \u5e76\u4e14 $s[j+1..i]$ \u80fd\u591f\u5339\u914d\u3002\n\n\u663e\u7136\uff0c\u53ef\u4ee5\u91c7\u7528**\u5355\u8c03\u961f\u5217**\u6765\u4f18\u5316\u3002\n\n```cpp \nwhile(head<=tail&&f[q[tail]]-q[tail]<=f[i-mid]-(i-mid))\n  tail--;\n``` \n\u6839\u636e\u5f0f\u5b50\uff0c\u628a\u4e0d\u4f18\u4e8e\u73b0\u5728\u7684\u89e3\u7684\u7ed9\u8e22\u51fa\u961f\u5217\u3002\n```cpp\nwhile(head<=tail&&q[head]<i-num[i])\n  head++;\n```\n\u628a\u8d85\u51fa\u8303\u56f4\u7684\u7ed9\u5e72\u6389\u3002\n\n\u5982\u679c\u961f\u5217\u8fd8\u6709\u6570\u7684\u8bdd\uff0c\u66f4\u65b0\u5c31\u597d\u4e86\u3002\n\n## code\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=11e5+10;\nint n,m,len,tot=1,num[N],f[N];\nint tmp=1,q[N],pos[N<<1];\nchar s[N];\nqueue<int> Q;\nstruct SAM\n{\n\tint fa,len;\n\tint ch[5];\n}tre[N<<1];\nstruct Tire\n{\n\tint c,fa;\n\tint ch[5];\n}t[N<<1];\nint Tire_insert(int ch,int x)//\u538b\u8fdb\u5b57\u5178\u6811 \n{\n\tif(!t[x].ch[ch])\n\t{\n\t\tt[x].ch[ch]=++tmp;\n\t\tt[tmp].c=ch;\n\t\tt[tmp].fa=x;\n\t}\n\treturn t[x].ch[ch];\n}\nint SAM_insert(int c,int las)//SAM\u57fa\u64cd \n{\n\tint p=las;\n\tint np=++tot;\n\ttre[np].len=tre[p].len+1;\n\twhile(p&&!tre[p].ch[c])\n\t{\n\t\ttre[p].ch[c]=np;\n\t\tp=tre[p].fa;\n\t}\n\tif(!p)\n\t\ttre[np].fa=1;\n\telse\n\t{\n\t\tint q=tre[p].ch[c];\n\t\tif(tre[q].len==tre[p].len+1)\n\t\t\ttre[np].fa=q;\n\t\telse\n\t\t{\n\t\t\tint nq=++tot;\n\t\t\ttre[nq]=tre[q];\n\t\t\ttre[nq].len=tre[p].len+1;\n\t\t\ttre[q].fa=tre[np].fa=nq;\n\t\t\twhile(p&&tre[p].ch[c]==q)\n\t\t\t{\n\t\t\t\ttre[p].ch[c]=nq;\n\t\t\t\tp=tre[p].fa;\n\t\t\t}\n\t\t}\n\t}\n\treturn np;\n}\nvoid SAM_work()//\u5b57\u5178\u6811\u538b\u5165SAM \n{\n\tfor(int i=0;i<2;i++)\n\t\tif(t[1].ch[i])\n\t\t\tQ.push(t[1].ch[i]);\n\tpos[1]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.front();\n\t\tQ.pop();\n\t\tpos[x]=SAM_insert(t[x].c,pos[t[x].fa]);\n\t\tfor(int i=0;i<2;i++)\n\t\t\tif(t[x].ch[i])\n\t\t\t\tQ.push(t[x].ch[i]);\n\t}\n}\nbool judge(int mid)//\u4e8c\u5206\u7b54\u6848\u5224\u65ad\u51fd\u6570 \n{\n\tint head=1,tail=0;\n\tfor(int i=1;i<=len;i++)//\u5355\u8c03\u961f\u5217\u4f18\u5316dp \n\t{\n\t\tf[i]=f[i-1];//\u5f00\u59cb\u4ece\u524d\u4e00\u4e2a\u7ee7\u627f\uff0c\u4e0d\u7528memset \n\t\tif(i<mid)\n\t\t\tcontinue;\n\t\twhile(head<=tail&&f[q[tail]]-q[tail]<=f[i-mid]-(i-mid))\n\t\t\ttail--;\n\t\tq[++tail]=i-mid;\n\t\twhile(head<=tail&&q[head]<i-num[i])\n\t\t\thead++;\n\t\tif(head<=tail)\n\t\t\tf[i]=max(f[i],f[q[head]]+i-q[head]);\n\t}\n\treturn f[len]*10>=len*9;\n}\n#undef int\nint main()\n{\n\t#define int register long long\n\t#define ll long long\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++)//\u5148\u628a\u6240\u6709\u7684\u6587\u672c\u4e32\u538b\u5165\u5b57\u5178\u6811 \n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tint las=1;\n\t\tlen=strlen(s+1);\n\t\tfor(int j=1;j<=len;j++)\n\t\t\tlas=Tire_insert(s[j]-'0',las);\n\t}\n\tSAM_work();//\u628a\u5b57\u5178\u6811\u7684\u8282\u70b9\u538b\u5165SAM \n\twhile(n--)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tlen=strlen(s+1);\n\t\tint p=1,le=0;\n\t\tfor(int i=1;i<=len;i++)\n\t\t{\n\t\t\tint ch=s[i]-'0';\n\t\t\twhile(p&&!tre[p].ch[ch])//\u5bfb\u627e\u4e0e\u6587\u672c\u4e32\u7684\u6700\u957f\u516c\u5171\u4e32\u957f\u5ea6 \n\t\t\t{\n\t\t\t\tp=tre[p].fa;\n\t\t\t\tle=tre[p].len;\n\t\t\t}\n\t\t\tif(tre[p].ch[ch])\n\t\t\t{\n\t\t\t\tp=tre[p].ch[ch];\n\t\t\t\tle++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp=1;\n\t\t\t\tle=0;\n\t\t\t}\n\t\t\tnum[i]=le;\n\t\t}\n\t\tint l=0,r=len;\n\t\twhile(l<r)//\u4e8c\u5206\u7b54\u6848\u5224\u65ad \n\t\t{\n\t\t\tint mid=(l+r+1)>>1;\n\t\t\tif(judge(mid))\n\t\t\t\tl=mid;\n\t\t\telse\n\t\t\t\tr=mid-1;\n\t\t}\n\t\tprintf(\"%lld\\n\",l);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1622850608,
        "uid": 190322,
        "name": "Varuxn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0"
    },
    {
        "content": "## [\u9898\u610f](https://www.luogu.com.cn/problem/P4022)\n\n\u663e\u7136\u8fd9\u4e2a$L$\u662f\u53ef\u4ee5\u4e8c\u5206\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad$L$\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\u663e\u7136\u6709\u4e00\u4e2a$O(n^2)$\u7684DP\uff1a  \n\u8bbe$f_i$\u8868\u793a\u5f53\u524d\u5339\u914d\u5230$i$\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\u3002\n\n$f_i=max(f_j+i-(j+1)+1)\\ j\\in[i-match_i,i-L]$\n\n\u5176\u4e2d\u7684$match_i$\u8868\u793a\u524d\u7f00$i$\u80fd\u548c\u6587\u672c\u5e93\u5339\u914d\u7684\u6700\u957f\u540e\u7f00\u957f\u5ea6\uff0c\u8fd9\u663e\u7136\u662f\u53ef\u4ee5\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u6c42\u51fa\u7684\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5$O(n^2logn)$\u505a\u4e86\u3002\n\n\u53d1\u73b0$i-match_i$\u5355\u8c03\u9012\u589e\uff0c\u4e8e\u662f\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u89e3\u51b3\u3002\n\n\u8bc1\u660e\uff1a  \n\u53cd\u8bc1\u5373\u53ef\uff0c\u5982\u679c\u4e0d\u5355\u8c03\u5fc5\u5b9a\u662f\u5982\u4e0b\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/r92glrsh.png)\n\u7ea2\u7ebf\u662fi\u5339\u914d\u7684\u957f\u5ea6\uff0c\u84dd\u7ebf\u662fi+1\u5339\u914d\u7684\u957f\u5ea6\uff0c\u663e\u7136i\u80fd\u5339\u914d\u66f4\u957f\u3002\n\ncode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2*1e6+10;\nint n,m;\nint match[maxn],f[maxn],q[maxn];\nchar s[maxn];\nstruct SAM\n{\n\tint last,tot; \n\tint fa[maxn],len[maxn];\n\tint ch[maxn][2];\n\tSAM(){last=tot=1;}\n\tinline void add(int c)\n\t{\n\t\tif(ch[last][c]&&len[last]+1==len[ch[last][c]]){last=ch[last][c];return;}\n\t\tint now=++tot;len[now]=len[last]+1;\n\t\tint p=last;\n\t\twhile(p&&!ch[p][c])ch[p][c]=now,p=fa[p];\n\t\tif(!p){fa[now]=1;last=now;return;}\n\t\tint q=ch[p][c];bool flag=0;\n\t\tif(len[q]==len[p]+1)fa[now]=q;\n\t\telse \n\t\t{\n\t\t\tif(p==last)flag=1;\n\t\t\tint nowq=++tot;len[nowq]=len[p]+1;\n\t\t\tmemcpy(ch[nowq],ch[q],sizeof(ch[q]));\n\t\t\tfa[nowq]=fa[q],fa[q]=fa[now]=nowq;\n\t\t\twhile(p&&ch[p][c]==q)ch[p][c]=nowq,p=fa[p];\n\t\t\tif(flag)last=nowq;\n\t\t}\n\t\tif(!flag)last=now;\n\t}\n}sam;\ninline void getmatch(char* s)\n{\n\tint len=strlen(s+1),now=1,nowl=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\twhile(now&&!sam.ch[now][s[i]-'0'])now=sam.fa[now],nowl=sam.len[now];\n\t\tif(now)now=sam.ch[now][s[i]-'0'],nowl++;\n\t\telse now=1,nowl=0;\n\t\tmatch[i]=nowl;\n\t}\n}\ninline bool check(int mid,char* s)\n{\n\tint l=1,r=0,len=strlen(s+1);\n\tfor(int i=0;i<mid;i++)f[i]=0;\n\tfor(int i=mid;i<=len;i++)\n\t{\n\t\tf[i]=f[i-1];\n\t\twhile(l<=r&&f[q[r]]-q[r]<=f[i-mid]-(i-mid))r--;\n\t\tq[++r]=i-mid;\n\t\twhile(l<=r&&q[l]<i-match[i])l++;\n\t\tif(l<=r)f[i]=max(f[i],i+f[q[l]]-q[l]);\n\t}\n\treturn f[len]*10>=len*9;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tsam.last=1;\n\t\tscanf(\"%s\",s+1);\n\t\tint len=strlen(s+1);\n\t\tfor(int j=1;j<=len;j++)sam.add(s[j]-'0');\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tgetmatch(s);\n\t\tint l=0,r=strlen(s+1),ans=0;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(check(mid,s))ans=mid,l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1576660587,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0"
    },
    {
        "content": "\u5bb9\u6613\u53d1\u73b0 $L$ \u662f\u53ef\u4ee5\u4e8c\u5206\u7684\u3002\n\n\u63a5\u7740\u8003\u8651\u4e8c\u5206\u5982\u4f55 `check`\u3002\n\n\u6bd4\u8f83\u5bb9\u6613\u601d\u8003\u7684\u601d\u8def\u662f DP\uff0c\u8bbe $f_i$ \u8868\u793a\u524d $i$ \u4e2a\u5b57\u7b26\u7684\u719f\u6089\u5b50\u4e32\u6700\u957f\u7684\u957f\u5ea6\u4e4b\u548c\u3002\u8bbe\u5f53\u524d\u4e8c\u5206\u7684\u662f $L$\uff0c\u90a3\u4e48 $f_i = \\max\\{f_{i-1},\\max \\limits_{j \\in [i - maxlen_i,i-L] } f_j + (i-j)\\}$\u3002\u5176\u4e2d $maxlen_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u7684\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u4e2a $j$ \u8fdb\u884c\u8f6c\u79fb\uff0c\u56e0\u4e3a\u6709 $[i - maxlen_i,i-L]$ \u7684\u9650\u5236\uff0c\u6bcf\u4e2a\u4ece $j+1$ \u5230 $i$ \u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u662f\u5728\u6807\u51c6\u4f5c\u6587\u5e93\u4e2d\u51fa\u73b0\u8fc7\u7684\uff0c\u8f6c\u79fb\u5373\u53ef\u3002\n\n$maxlen_i$ \u53ef\u4ee5\u5efa\u51fa SAM \u540e\u7528\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u505a\u6cd5\u7ef4\u62a4\u3002\n\n\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a $O(m n^2\\log n)$ \u7684\u505a\u6cd5\u3002\n\n\u5bb9\u6613\u53d1\u73b0 DP \u6709\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5373\u53ef\u3002",
        "postTime": 1677910923,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/eastcloud/p/17065667.html)\n\n### \u7b80\u8981\u9898\u610f\n\n\u7ed9\u5b9a $m$ \u4e2a\u6a21\u677f\u4e32\u548c $n$ \u4e2a\u5339\u914d\u4e32\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u6a21\u677f\u4e32\u7684\u5b50\u4e32\u4e14\u957f\u5ea6\u4e0d\u5c0f\u4e8e $L$ \u5219\u79f0\u5176\u4e3a\u201c\u719f\u6089\u7684\u201d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5339\u914d\u4e32\uff0c\u6c42\u4e00\u4e2a\u6700\u5927\u7684 $L$\uff0c\u6ee1\u8db3\u5c06\u5339\u914d\u4e32\u5206\u5272\uff0c\u719f\u6089\u7684\u5b50\u4e32\u7684\u603b\u957f\u5ea6\u5927\u4e8e\u539f\u4e32\u957f\u5ea6\u7684 $90\\%$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u5bf9\u4e8e $L$\uff0c\u5982\u679c\u6709\u66f4\u5927\u7684 $L$ \u6ee1\u8db3\u4e86\u5b83\u4e5f\u4e00\u5b9a\u6ee1\u8db3\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u5bf9\u5176\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u7531\u4e8e\u8ddf\u5b50\u4e32\u95ee\u9898\u76f8\u5173\uff0c\u4e14\u6709\u591a\u4e2a\u6a21\u677f\u4e32\uff0c\u6211\u4eec\u6839\u636e\u6a21\u677f\u4e32\u5efa\u51fa\u5e7f\u4e49 SAM\uff0c\u5206\u5272\u8fd9\u79cd\u65b9\u5f0f\u6709\u4e0d\u53ef\u5728\u67d0\u4e00\u4f4d\u7f6e\u91cd\u590d\u7684\u7279\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5bf9\u5176\u8fdb\u884c DP\uff0c\u4ece\u524d\u7f00\u5f00\u59cb\u8003\u8651\uff0c\u4e00\u904d DP \u4e00\u904d\u5728 SAM \u4e0a\u5339\u914d\uff0c\u6c42\u51fa\u5f53\u524d\u524d\u7f00\u6700\u957f\u719f\u6089\u540e\u7f00\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u5272\u5230 $i$ \u7684\u6700\u5927\u719f\u6089\u957f\u5ea6\uff0c$len_k$ \u8868\u793a SAM \u4e0a\u5f53\u524d\u8282\u70b9\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5219\u6709\n\n$f_i=\\max(f_{i-1},f_j+(i-j)),j\\in [i-len_k,i-L]$\n\n\u7ee7\u7eed\u89c2\u5bdf\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u5728 SAM \u5339\u914d\uff0c\u5931\u8d25\u65f6\u5f80\u7236\u8282\u70b9\u8d70\uff0c$i-len_k$ \u9012\u589e\uff0c\u6210\u529f\u65f6\u4e0d\u53d8\uff0c\u800c $i-L$ \u968f $i$ \u53f3\u79fb\uff0c\u56e0\u6b64\u51b3\u7b56\u96c6\u5408\u53ea\u4f1a\u5f80\u53f3\u589e\u957f\uff0c\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u4f18\u51b3\u7b56\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector> \n#include<queue>\n#include<deque>\n#define ll long long\nusing namespace std;\nint tot=1,nex[3000001][2],le[3000001],fa[3000001];\nint dp[3000001];\nstring s;\nstruct Node{\n\tint last,num;\n};\nqueue<Node> q;\ndeque<Node> p;\nvoid inserttrie(string s){\n\tint p=1,len=s.length();\n\tfor(int i=0;i<len;i++){\n\t\tint num=s[i]-'0';\n\t\tif(!nex[p][num]) nex[p][num]=++tot;\n\t\tp=nex[p][num];\n\t}\n}\nint insertsam(int last,int num){\n\tint p=last,np=nex[last][num];le[np]=le[p]+1;\n\tp=fa[p];\n\tfor(;p && !nex[p][num];p=fa[p]) nex[p][num]=np;\n\tif(!p) fa[np]=1;\n\telse{\n\t\tint q=nex[p][num];\n\t\tif(le[q]==le[p]+1) fa[np]=q;\n\t\telse{\n\t\t\tint clone=++tot;le[clone]=le[p]+1;\n\t\t\tfor(int i=0;i<=1;i++)nex[clone][i]=(le[nex[q][i]]?nex[q][i]:0);\n\t\t\tfor(;p && nex[p][num]==q;p=fa[p]) nex[p][num]=clone;\n\t\t\tfa[clone]=fa[q];fa[q]=fa[np]=clone;\n\t\t}\n\t}\n\treturn np;\n}\nvoid build(){\n\tfor(int i=0;i<=1;i++) if(nex[1][i]) q.push((Node){1,i});\n\twhile(!q.empty()){\n\t\tint last=q.front().last,num=q.front().num;q.pop();\n\t\tint cur=insertsam(last,num);\n\t\tfor(int i=0;i<=1;i++) if(nex[cur][i]) q.push((Node){cur,i});\n\t}\n}\nbool solve(string s,int ans){\n\tint len=s.length(),now=1,lth=0;\n\tfor(int i=1;i<=len;i++);\n\twhile(p.size()) p.pop_back();\n\tfor(int i=0;i<len;i++){\n\t\tdp[i+1]=dp[i];\n\t\tint num=s[i]-'0';\n\t\twhile(p.size() && (i+1-ans>=0 && dp[i+1-ans]-i-1+ans>p.front().last)){\n\t\t\tp.pop_front();\n\t\t}\n\t\tif(i+1-ans>=0) p.push_front((Node){dp[i+1-ans]-i-1+ans,i+1-ans});\n\t\twhile(!nex[now][num]){\n\t\t\tnow=fa[now];\n\t\t\tlth=le[now];\n\t\t}\n\t\tif(!now){now=1;lth=0;continue;}\n\t\tnow=nex[now][num];lth++;\n\t\twhile(p.size() && i+1-lth>p.back().num) p.pop_back();\n\t\tif(p.size())dp[i+1]=max(dp[i+1],p.back().last+i+1);\n\t}\n\tdouble num=len*1.0/10*9;\n\tif(num<=dp[len]) return true;\n\telse return false;\n}\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s;\n\t\tinserttrie(s);\n\t}\n\tbuild();\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s;\n\t\tint l=1,r=s.length();\n\t\twhile(l<r){\n\t\t\tint mid=(l+r+1)>>1;\n\t\t\tif(solve(s,mid)) l=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tcout<<l<<endl;\n\t}\n}\n\n```\n",
        "postTime": 1674486468,
        "uid": 421265,
        "name": "eastcloud",
        "ccfLevel": 4,
        "title": "P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0 \u9898\u89e3"
    },
    {
        "content": "\u663e\u7136 $L$ \u5177\u6709\u5355\u8c03\u6027\uff0c\u4e0d\u59a8\u4e8c\u5206 $L$\u3002\n\n\u8003\u8651\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5212\u5206\u95ee\u9898\u5bf9\u6536\u76ca $\\max$ \u7684\u6c42\u89e3\uff0c\u8003\u8651 dp\u3002\n\n\uff08\u6c42 $\\min$ \u4e5f\u80fd\u505a\u5230 $O(n)$\uff0c\u53ea\u662f\u4e0d\u592a\u65b9\u4fbf\uff09\n\n\u8bbe $dp_i$ \u8868\u793a\u5728 $i$ \u8fd9\u4e2a\u4f4d\u7f6e\u5272\u4e00\u5200\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\uff0c$mx_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u5de6\u7aef\u70b9\u6700\u5c0f\u7684\u4e00\u4e2a $l$ \u4f7f\u5f97 $[l,i]$ \u4e3a\u6587\u7ae0\u7684\u5b50\u4e32\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u663e\u7136\u662f $dp_i = \\max_{j = i - mx_i} ^ {i - L}dp_j + i - j$\uff0c\u56e0\u4e3a\u53ea\u6709\u5728 $i - L$ \u4e4b\u524d\u7684\u4f4d\u7f6e\u5272\u624d\u80fd\u6709\u6536\u76ca\uff0c\u4f46\u662f\u8f6c\u79fb\u7684\u4f4d\u7f6e\u53c8\u4e0d\u80fd\u8d85\u8fc7 $mx_i$\u3002\n\n\u5bf9\u4e8e $mx_i$ \u53ef\u4ee5\u4f7f\u7528\u5e7f\u4e49 SAM \u6c42\u89e3\uff0c\u7531\u4e8e\u662f SAM \u7684\u7ecf\u5178\u8fd0\u7528\u8fd9\u91cc\u4e0d\u5c55\u5f00\u3002\n\n\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u6709\u4e00\u4e2a\u8f6c\u79fb\u533a\u95f4 $[L_i,R_i]$ \u5e76\u4e14 $L,R$ \u968f\u7740 $i$ \u7684\u589e\u52a0\u4e0d\u51cf\uff0c\u5c06\u65b9\u7a0b\u4e2d\u7684 $i$ \u62c6\u51fa\u6765\u5c31\u53ea\u5269\u4e0b $j$ \u76f8\u5173\u9879\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u88f8\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316 dp\uff0c\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O((\\sum |S|) \\log |S|)$\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1.1e6 + 5;\nint n,m,mxpos[Len],dp[Len],q[Len];\nstruct Node\n{\n\tint ch[2];\n\tint len,fa;\n\tNode(){len = fa = 0;memset(ch , 0 , sizeof ch);}\n};\nstruct Suf_Auto\n{\n\tNode t[Len << 1];\n\tint tot;\n\tSuf_Auto(){tot = 1;}\n\tinline int Add(int c,int lst)\n\t{\n\t\tif(t[lst].ch[c])\n\t\t{\n\t\t\tint p = lst , q = t[lst].ch[c];\n\t\t\tif(t[q].len == t[p].len + 1) return q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint nq = ++ tot;t[nq] = t[q];\n\t\t\t\tt[nq].len = t[p].len + 1;\n\t\t\t\tt[q].fa = nq;\n\t\t\t\tfor( ; p && t[p].ch[c] == q ; p = t[p].fa) t[p].ch[c] = nq;\n\t\t\t\treturn nq;\t\n\t\t\t} \n\t\t}\n\t\tint p = lst;\n\t\tint np = lst = ++ tot;\n\t\tt[np].len = t[p].len + 1;\n\t\tfor( ; p && !t[p].ch[c] ; p = t[p].fa) t[p].ch[c] = np;\n\t\tif(!p) t[np].fa = 1;\n\t\telse\n\t\t{\n\t\t\tint q = t[p].ch[c];\n\t\t\tif(t[q].len == t[p].len + 1) t[np].fa = q;\n\t\t\telse\n\t\t\t{\n\t\t\t\tint nq = ++ tot;t[nq] = t[q];\n\t\t\t\tt[nq].len = t[p].len + 1;\n\t\t\t\tt[np].fa = t[q].fa = nq;\n\t\t\t\tfor( ; p && t[p].ch[c] == q ; p = t[p].fa) t[p].ch[c] = nq;\n\t\t\t}\n\t\t}\n\t\treturn np;\n\t}\n\tint rt,nowl;\n\tinline void Clr(){rt = 1 , nowl = 0;}\n\tinline void Find(int c,int id)\n\t{\n\t\twhile(rt)\n\t\t{\n\t\t\tif(t[rt].ch[c])\n\t\t\t{\n\t\t\t\tnowl ++;\n\t\t\t\trt = t[rt].ch[c];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trt = t[rt].fa;\n\t\t\t\tnowl = t[rt].len;\n\t\t\t}\n\t\t}\n\t\tif(!rt) rt = 1;\n\t\tmxpos[id] = nowl;\n\t}\n}At;\nint check(int L,int N)\n{\n\t//printf(\"%d:\\n\",L);\n\tint hd = 1 , tl = 0;\n\tfor(int i = 1 ; i <= L - 1 ; i ++) dp[i] = 0;\n\tfor(int i = L ; i <= N ; i ++) \n\t{\n\t\tdp[i] = dp[i - 1];\n\t\twhile(hd <= tl && dp[q[tl]] - q[tl] <= dp[i - L] - (i - L)) tl --;\n\t\tq[++ tl] = i - L;\n\t\twhile(hd <= tl && q[hd] < i - mxpos[i]) hd ++;\n\t\tif(hd <= tl) dp[i] = max(dp[i] , dp[q[hd]] - q[hd] + i);\n\t\t//printf(\"%d %d %d %d %d %d\\n\",i,dp[i],hd,tl,q[hd],i-mxpos[i]);\n\t}\n\treturn dp[N] * 10 >= N * 9;\n}\nchar s[Len];\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tscanf(\"%s\",s + 1);\n\t\tint lens = strlen(s + 1) , lst = 1;\n\t\tfor(int j = 1 ; j <= lens ; j ++) lst = At.Add(s[j] - '0' , lst);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tAt.Clr();\n\t\tscanf(\"%s\",s + 1);\n\t\tint lens = strlen(s + 1) , l = 0 , r = lens , anss = 0;\n\t\tfor(int j = 1 ; j <= lens ; j ++) \n\t\t{\n\t\t\tAt.Find(s[j] - '0' , j);\n\t\t\t//printf(\"%d %d\\n\",j,mxpos[j]);\n\t\t}\n\t\twhile(l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(check(mid , lens)) anss = mid , l = mid + 1;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tprintf(\"%d\\n\",anss);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647333052,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 [CTSC2012]\u719f\u6089\u7684\u6587\u7ae0"
    },
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0ccheck \u7684\u65f6\u5019\u8981\u6c42\u51fa\u5f53 $L$ \u4e3a $\\mathrm{mid}$ \u65f6\u662f\u5426\u5408\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa \u201c\u719f\u6089\u7684\u201d \u7684\u5b50\u4e32\u7684\u957f\u5ea6\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5c06\u5b83\u548c\u603b\u957f\u7684 $90\\%$ \u6bd4\u8f83\u3002\u73b0\u5728\u6211\u4eec\u8003\u8651\u5982\u4f55\u6765\u6c42\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\n\u8003\u8651 dp\uff1a\u8bbe $f_i$ \u4e3a\u5c06\u524d $i$ \u4e2a\u5b57\u7b26\u5206\u5272\u4e3a\u82e5\u5e72\u6bb5\uff0c\u5176\u4e2d \u201c\u719f\u6089\u7684\u201d \u5b50\u4e32\u7684\u548c\u7684\u6700\u5927\u503c\u3002\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u9012\u63a8\u5f0f\uff1a\n\n$$\nf_i = \\max(f_{i-1}, f_j + i - j), \\ j \\in [i - len_i, i - L] \n$$\n\n\u5176\u4e2d $len_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u524d\u7f00\u7684\u6700\u957f \u201c\u719f\u6089\u7684\u201d \u540e\u7f00\u7684\u957f\u5ea6\u3002\u8fd9\u4e2a dp \u5b9e\u9645\u4e0a\u5305\u542b\u4e86\u4e24\u79cd\u51b3\u7b56\uff0c\u5373\u5f53\u524d\u662f\u5426\u5212\u5206\u4e00\u4e2a \u201c\u719f\u6089\u7684\u201d \u5b50\u4e32\u3002\u5982\u679c\u9009\u62e9\u5212\u5206\u4e00\u4e2a \u201c\u719f\u6089\u7684\u201d \u5b50\u4e32\uff0c\u90a3\u4e48\u53ef\u4ee5\u4ece $f_j (j \\in [i - len_i, i - L])$ \u8f6c\u79fb\u8fc7\u6765\u3002\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece $f_{i - 1}$ \u8f6c\u79fb\u8fc7\u6765\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5f53\u524d\u8fd9\u4e2a \u201c\u4e0d\u719f\u6089\u7684\u201d \u5b50\u4e32\u7684\u957f\u5ea6\u8d8a\u5c0f\u8d8a\u597d\uff0c\u8fd9\u6837\u524d\u9762\u7684\u90e8\u5206\u66f4\u53ef\u80fd\u7ec4\u6210 \u201c\u719f\u6089\u7684\u201d \u5b50\u4e32\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\u66f4\u52a3\uff08\u597d\u50cf\u8bb2\u5f97\u6709\u70b9\u611f\u6027...\u4f46\u610f\u601d\u5927\u6982\u80fd\u61c2\uff1f\uff09\u3002\n\n\u8fd9\u4e2a dp \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(|S|^2)$ \u7684\uff0c$len_i$ \u7684\u503c\u53ef\u4ee5\u5728\u5e7f\u4e49 SAM \u4e0a\u8dd1\u5339\u914d $O(|S|)$ \u6c42\u51fa\u3002\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|S|^2 \\log |S|)$\uff0c\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e9b\u4f18\u5316\u3002\n\n\u6ce8\u610f\u5230\uff0c$i - len_i$ \u7684\u503c\u4e00\u5b9a\u662f\u5355\u8c03\u4e0d\u964d\u7684\uff0c\u8fd9\u70b9\u53ea\u9700\u8981\u6a21\u62df\u5b57\u7b26\u4e32\u5728 SAM \u4e0a\u5339\u914d\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5f97\u51fa\uff1a\u6bcf\u6b21 $i$ \u52a0 $1$ \u65f6\uff0c\u8981\u4e48\u8d70\u4e00\u6761\u8f6c\u79fb\u8fb9\uff08\u8fd9\u4f1a\u4f7f\u5f97 $len$ \u7684\u503c\u52a0 $1$\uff09\uff0c\u8981\u4e48\u4e0d\u65ad\u8df3 $\\mathrm{nxt}$ \u8fb9\u76f4\u5230\u5b58\u5728\u4e00\u6761\u9700\u8981\u7684\u8f6c\u79fb\uff08\u8fd9\u4f1a\u4f7f\u5f97 $len$ \u7684\u503c\u51cf\u5c11\uff09\u3002\u800c $i-L$ \u663e\u7136\u5355\u8c03\u589e\uff0c\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4 $f_i-i$ \u7684\u6700\u5927\u503c\u5c31\u5e72\u6389\u4e86\u3002\n\n\u8fd9\u6837\u6bcf\u6b21 dp \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|S|)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|S| \\log |S|)$\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\u4e3a\u4e86\u4ee3\u7801\u7b80\u6d01\u6027\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u4f2a\u5e7f\u4e49 SAM\u3002\n\n```cpp\nconst int MN = 2.2e6 + 5;\n\nint N, M; char Str[MN];\n\nstruct SuffixAutoMaton {\n    int lst, cnt, ch[MN][2], nxt[MN], len[MN];\n    inline void Insert(int c) {\n        int p = lst, o = ++cnt;\n        len[o] = len[p] + 1;\n        while (p && !ch[p][c]) ch[p][c] = o, p = nxt[p];\n        if (!p) nxt[o] = 1;\n        else {\n            int q = ch[p][c];\n            if (len[q] == len[p] + 1) nxt[o] = q;\n            else {\n                int cl = ++cnt;\n                for (int i = 0; i < 2; i++) ch[cl][i] = ch[q][i];\n                len[cl] = len[p] + 1, nxt[cl] = nxt[q], nxt[q] = nxt[o] = cl;\n                while (p && ch[p][c] == q) ch[p][c] = cl, p = nxt[p];\n            }\n        }\n        lst = o;\n    } \n\n    int Mat[MN];\n    inline void Work(int N) {\n        int p = 1, w = 0;\n        for (int i = 1; i <= N; i++) {\n            int c = Str[i] - '0';\n            if (ch[p][c]) p = ch[p][c], w++;\n            else {\n                while (p && !ch[p][c]) p = nxt[p];\n                if (p) w = len[p] + 1, p = ch[p][c];\n                else w = 0, p = 1;\n            }\n            Mat[i] = w;\n        }\n    }\n    \n    int f[MN], q[MN];\n    inline bool Check(int N, int L) {\n        int H = 1, T = 0;\n        for (int i = 1; i < L; i++) f[i] = 0;\n        for (int i = L; i <= N; i++) {\n            f[i] = f[i - 1];\n            while (H <= T && f[q[T]] - q[T] <= f[i - L] - (i - L)) T--;\n            q[++T] = i - L;\n            while (H <= T && q[H] < i - Mat[i]) H++;\n            if (H <= T) f[i] = max(f[i], f[q[H]] + i - q[H]);\n        }\n        return f[N] * 10 >= N * 9;\n    }\n} SAM;\n\nsigned main(void) {  \n    N = read(), M = read(), SAM.lst = SAM.cnt = 1;\n    for (int i = 1, len; i <= M; i++) {\n        scanf(\"%s\", Str + 1), len = strlen(Str + 1), SAM.lst = 1;\n        for (int j = 1; j <= len; j++) SAM.Insert(Str[j] - '0');\n    }\n    for (int i = 1, len; i <= N; i++) {\n        scanf(\"%s\", Str + 1);\n        int l = 0, r = len = strlen(Str + 1), Ans = 0;\n        SAM.Work(len);\n        while (l <= r) {\n            int Mid = (l + r) >> 1;\n            if (SAM.Check(len, Mid)) l = Mid + 1, Ans = Mid;\n            else r = Mid - 1;\n        }\n        printf(\"%lld\\n\", Ans);\n    }\n    return 0; \n}\n```\n",
        "postTime": 1645956733,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "~~\u6ca1\u6709\u53d1\u73b0\u51b3\u7b56\u5355\u8c03\u6027\u7684\u849f\u84bb\u7528 $n\\log^2n$ \u7684\u7b97\u6cd5\u83bd\u8fc7\u4e86\u8fd9\u9898~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u5bf9\u4e8e\u5f85\u8003\u5bdf\u7684\u4e32\u4e2d\u6bcf\u4e2a\u540e\u7f00\uff0c\u5b83\u4e0e\u6240\u6709\u8303\u6587\u7684\u540e\u7f00\u7684 $\\operatorname{LCP}$ \u7684\u6700\u957f\u957f\u5ea6\uff0c\u8bb0\u4f5c $len$ \u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5c06\u6240\u6709\u4e32\u4e2d\u95f4\u63d2\u4e0a\u5b57\u7b26\u540e\u5e76\u4e00\u8d77\u540e\u7f00\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u4f4d\u7f6e\u5411\u5de6\u5411\u53f3\u626b\u5230\u7b2c\u4e00\u4e2a\u8303\u6587\u540e\u7f00\uff0c\u5728 $O(n)$ \u65f6\u95f4\u5185\u5f97\u51fa\u3002\u4ee5\u4e0b\u662f\u6c42\u51fa $len_i$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=0,j=0;i<n;i++){\n\tj=min(j,ht[i]);\n\tif(id[sa[i]]>B)len[sa[i]]=max(len[sa[i]],j);\n\tif(id[sa[i]]&&id[sa[i]]<=B)j=n;\n}\nfor(int i=n-1,j=0;i>=0;i--){\n\tif(id[sa[i]]>B)len[sa[i]]=max(len[sa[i]],j);\n\tif(id[sa[i]]&&id[sa[i]]<=B)j=n;\n\tj=min(j,ht[i]);\n}\n```\n\u5176\u4e2d\uff0c$id_i$ \u662f\u539f\u4e32\u4e2d\u6bcf\u4e2a\u540e\u7f00\u539f\u672c\u5c5e\u4e8e\u54ea\u4e2a\u4e32\uff0c$id_i>B$ \u5c31\u610f\u5473\u7740\u6765\u81ea\u4e8e\u5f85\u8003\u5bdf\u4e32\uff0c\u800c $1\\leq id_i\\leq B$ \u5219\u610f\u4e3a\u7740\u6765\u81ea\u8303\u6587\u4e32\u3002\n\n\u6c42\u51fa $len_i$ \u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u8003\u5bdf\u4e32\u7684 $L$ \u4e86\u3002\u663e\u7136\uff0c\u5b83\u5177\u6709\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u4e8c\u5206\u5982\u4f55check\u5462\uff1f\u6211\u4eec\u8003\u8651\u4f7f\u7528DP\u3002\n\n\u6211\u4eec\u8bbe $f_i$ \u8868\u793a\u4ee5 $i-1$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u7ed3\u5c3e\u7684\u524d\u7f00\u7684\u4e32\u4e2d\uff0c\u6700\u591a\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u80fd\u591f\u88ab\u5224\u5b9a\u4e3a\u51fa\u73b0\u8fc7\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u90fd\u6709\u4e00\u7ec4\u8303\u6587\u4e32\u7684\u5907\u9009\u96c6\u5408\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $i$\uff0c\u5982\u679c $len_i\\geq L$\uff0c\u5219\u533a\u95f4 $[i+L,i+len_i]$ \u4e2d\u6240\u6709\u4f4d\u7f6e\u90fd\u80fd\u63a5\u53d7\u5230\u6765\u81ea $i$ \u5f00\u5934\u7684\u4e32\u3002\u8bbe $j$ \u662f\u8be5\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5219 $f_j$ \u53ef\u4ee5\u7531 $f_i+j-i$ \u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u663e\u7136\u8fd9\u4e2a $i+len_i$ \u5e94\u8be5\u662f**\u5355\u8c03\u4e0d\u51cf**\u7684\uff0c\u56e0\u4e3a\u5982\u679c $[i,i+len_i]$ \u5df2\u7ecf\u662f\u4e00\u4e2a\u5408\u6cd5\u4e32\u4e86\uff0c\u90a3\u4e48 $[i+1,i+len_i]$ \u5c31\u5fc5\u7136\u662f\u4e00\u4e2a\u5408\u6cd5\u4e32\uff08\u5b83\u662f\u524d\u4e00\u4e2a\u5f0f\u5b50\u7684\u5b50\u4e32\uff09\u3002\u8fd9\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u505a\u5230 $O(n)$ DP\u3002\u4f46\u662f\u6211\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff0c\u7136\u540e\u6572\u4e86\u4e2a\u4f18\u5148\u961f\u5217\u83bd\u8fc7\u53bb\u4e86\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u628a\u6bcf\u4e2a\u5408\u6cd5\u4e32\u7684\u8d21\u732e\u4ee5\u53ca\u5b83\u7ed3\u675f\u7684\u4f4d\u7f6e\u4e22\u5165\u4f18\u5148\u961f\u5217\uff0c\u8981\u6c42\u503c\u7684\u65f6\u5019\u53ea\u8981\u5806\u9876\u5143\u7d20\u6240\u4ee3\u8868\u7684\u4e32\u5df2\u7ecf\u7ed3\u675f\u4e86\u5c31\u4e0d\u65ad ```pop```\u3002\u6700\u540e\u4ece\u5806\u9876\u5143\u7d20\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662f\u52c9\u5f3a\u5361\u8fc7\u7684\u4ee3\u7801\uff08\u4e0d\u4fdd\u8bc1\u518d\u6b21\u63d0\u4ea4\u4ecd\u53ef\u901a\u8fc7\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2301000;\nint A,B,n,m,id[N],len[N],st[N],ed[N],f[N];\nint x[N],y[N],buc[N],sa[N],ht[N],rk[N],s[N];\nchar str[N];\nbool mat(int a,int b,int k){\n\tif(y[a]!=y[b])return false;\n\tif((a+k<n)^(b+k<n))return false;\n\tif((a+k<n)&&(b+k<n))return y[a+k]==y[b+k];\n\treturn true;\n}\nvoid SA(){\n\tfor(int i=0;i<n;i++)buc[x[i]=s[i]]++;\n\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\tfor(int i=n-1;i>=0;i--)sa[--buc[x[i]]]=i;\n\tfor(int k=1;k<n;k<<=1){\n\t\tint num=0;\n\t\tfor(int i=n-k;i<n;i++)y[num++]=i;\n\t\tfor(int i=0;i<n;i++)if(sa[i]>=k)y[num++]=sa[i]-k;\n\t\tfor(int i=0;i<=m;i++)buc[i]=0;\n\t\tfor(int i=0;i<n;i++)buc[x[y[i]]]++;\n\t\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\t\tfor(int i=n-1;i>=0;i--)sa[--buc[x[y[i]]]]=y[i];\n\t\tswap(x,y);\n\t\tx[sa[0]]=num=0;\n\t\tfor(int i=1;i<n;i++)x[sa[i]]=mat(sa[i],sa[i-1],k)?num:++num;\n\t\tif(num>=n-1)break;\n\t\tm=num;\n\t}\n\tfor(int i=0;i<n;i++)rk[sa[i]]=i;\n\tfor(int i=0,k=0;i<n;i++){\n\t\tif(!rk[i])continue;\n\t\tif(k)k--;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(i+k<n&&j+k<n&&s[i+k]==s[j+k])k++;\n\t\tht[rk[i]]=k;\n\t}\n}\nstruct node{\n\tint vl,ed;\n\tfriend bool operator <(const node &x,const node &y){\n\t\treturn x.vl<y.vl;\n\t}\n\tnode(int x,int y){vl=x,ed=y;}\n};\npriority_queue<node>q;\nbool che(int id,int ip){\n\twhile(!q.empty())q.pop();\n\tf[st[id]-1]=0;\n\tfor(int i=st[id];i<=ed[id];i++){\n\t\tf[i]=f[i-1];\n\t\tif(!(i-ip<st[id]||len[i-ip]<ip)){\n\t\t\tnode x=node(f[i-ip]-(i-ip),i-ip+len[i-ip]);\n\t\t\tif(q.empty()||!(x.vl<=q.top().vl&&x.ed<=q.top().ed))q.push(x);\n\t\t}\n\t\twhile(!q.empty()&&q.top().ed<i)q.pop();\n\t\tif(!q.empty())f[i]=max(f[i],i+q.top().vl);\n\t}\n\treturn f[ed[id]]>=((ed[id]-st[id]+1)*9)/10;\n}\nvoid print(int x){\n\tif(x>9)print(x/10);\n\tputchar('0'+x%10);\n} \nint main(){\n\tscanf(\"%d%d\",&A,&B);\n\tfor(int i=1;i<=A+B;i++){\n\t\tscanf(\"%s\",str),m=strlen(str);\n\t\tst[i]=n;\n\t\tfor(int j=0;j<m;j++)id[n]=i,s[n]=str[j]-'0'+1,n++;\n\t\ted[i]=n;\n\t\ts[n++]=i+2;\n\t}\n\tm=A+B+2;\n\tSA();\n\tfor(int i=0,j=0;i<n;i++){\n\t\tj=min(j,ht[i]);\n\t\tif(id[sa[i]]>B)len[sa[i]]=max(len[sa[i]],j);\n\t\tif(id[sa[i]]&&id[sa[i]]<=B)j=n;\n\t}\n\tfor(int i=n-1,j=0;i>=0;i--){\n\t\tif(id[sa[i]]>B)len[sa[i]]=max(len[sa[i]],j);\n\t\tif(id[sa[i]]&&id[sa[i]]<=B)j=n;\n\t\tj=min(j,ht[i]);\n\t}\n\tfor(int i=B+1;i<=A+B;i++){\n\t\tint l=0,r=ed[i]-st[i];\n\t\twhile(l<r){\n\t\t\tint mid=(l+r+1)>>1;\n\t\t\tif(che(i,mid))l=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprint(l),putchar('\\n');\n\t}\n//\tfor(int i=0;i<n;i++)printf(\"%d \",s[i]);puts(\"\");\n//\tfor(int i=0;i<n;i++)printf(\"%d \",len[i]);puts(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1596703226,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "[$\\tt{My\\ blog}$](https://ctz45562.github.io/2019/04/26/%E6%B4%9B%E8%B0%B7-P4022-CTSC2012-%E7%86%9F%E6%82%89%E7%9A%84%E6%96%87%E7%AB%A0/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4022)\n\n> \u5988\u5988\u6211\u80fd\u72ec\u7acb\u5207CTSC\u9ed1\u9898\u5566\uff01~~\uff08\u867d\u7136\u6211\u627f\u8ba4\u8fd9\u9898\u4e0d\u7b97\u96be\uff09~~\n\n\u4ee5\u4e0b\uff0c\u7528$S(l,r)$\u8868\u793a\u5b57\u7b26\u4e32$S$\u4ece$l$\u4f4d\u7f6e\u5f00\u59cb\u5230$r$\u7684\u5b50\u4e32\uff0c$n$\u8868\u793a\u5f85\u8003\u5bdf\u4f5c\u6587\u4e32\u7684\u957f\u5ea6\u3002\n\n\n\u7b54\u6848\u5f88\u660e\u663e\u6709\u5355\u8c03\u6027\u3002\u56e0\u4e3a\u82e5\u957f\u5ea6$i$\u53ef\u884c\u7684\u8bdd\uff0c\u5219\u5b58\u5728\u548c\u957f\u5ea6$i$\u76f8\u540c\u7684\u65b9\u6848\u4f7f\u6240\u6709$j(<i)$\u4e5f\u53ef\u884c\u3002\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u8bbe$rr[i]$\u8868\u793a\u6700\u5927\u7684\u6ee1\u8db3$S(i,rr[i])$\u4e3a\u4f5c\u6587\u5e93\u5b50\u4e32\u7684\u4f4d\u7f6e\u3002\n\n\u628a\u6240\u6709\u4f5c\u6587\u5e93\u7684\u4e32\u7528\u7279\u6b8a\u5b57\u7b26\u9694\u5f00\u9020$SAM$\uff0c\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u5339\u914d\u9884\u5904\u7406$rr[i]$\u3002\n\n\u5bb9\u6613\u53d1\u73b0$rr[i]$\u7684\u4e00\u4e2a\u6027\u8d28\uff1a$rr[i]\\ge rr[i-1]$\u3002\u8fd9\u6837\u5904\u7406$rr[i]$\u65f6\u5c31\u53ef\u4ee5\u7528\u4e0a$rr[i-1]$\u548c\u5b83\u7ed3\u675f\u7684\u8282\u70b9\u7ee7\u7eed\u5339\u914d\u3002\n\n\u8fd9\u91cc\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4ee5\u5339\u914d$S(i-1,rr[i-1])$\u548c$S(i,rr[i-1])$\u5230\u8fbe\u7684\u8282\u70b9\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u82e5\u4e0d\u540c\u5219\u4e00\u5b9a\u662f$parent\\ tree$\u4e0a\u7684\u7236\u5b50\u5173\u7cfb\u3002\u8bb0$node$\u4e3a$i-1$\u5339\u914d\u7ed3\u675f\u7684\u8282\u70b9\uff0c\u5904\u7406\u7b2c$i$\u4f4d\u65f6\uff0c\u5c31\u9700\u8981\u5224\u65ad\u4e00\u4e0b$S(i,rr[i-1])$\u7684\u957f\u5ea6\u548c$len[fa[node]]$\u7684\u5173\u7cfb\uff0c\u9009\u62e9\u662f\u5426\u5411\u4e0a\u8df3\u3002$rr[i]$\u5c31\u80fd$O(n)$\u9884\u5904\u7406\u4e86\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u7b54\u6848$mid$\u662f\u5426\u53ef\u884c\uff0c\u53ef\u4ee5\u7528$DP$\u6c42\u89e3\u3002\u8bbe$f(i)$\u8868\u793a\u5bf9\u4e32$S(i,n)$\u8fdb\u884c\u5206\u6bb5\uff0c\u6700\u5c11\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u662f\u201c\u4e0d\u719f\u6089\u201d\u7684\u3002\n\n\u65b9\u7a0b\uff1a$f(i)=\\min\\{f(i+1)+1,f(j)\\}(i+mid\\le j\\le rr[i]+1)$\n\n\u4e5f\u5c31\u662f\u628a\u7b2c$i$\u4e2a\u5b57\u7b26\u5f52\u4e3a\u201c\u4e0d\u719f\u6089\u201d\u7684\u5b50\u4e32\u91cc\uff0c\u6216\u8005\u4ee5\u7b2c$i$\u4e2a\u5b57\u7b26\u5f00\u5934\u5212\u5206\u4e00\u6bb5\u5b50\u4e32\u3002$f(j)$\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u603b\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u82e5$f(1)\\le \\frac{n}{10}$\u5219\u7b54\u6848\u53ef\u884c\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 1100005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\n#define son(x,y) son[x][y]\nint son[maxn][3],fa[maxn],len[maxn],rr[maxn],f[maxn],last=1,cnt=1,n;\nchar s[maxn];\nstruct MonoQueue{\n\tint line[maxn],head,tail;\n\tinline void push(int x){\n\t\twhile(head<=tail&&f[line[tail]]>=f[x])--tail;\n\t\tline[++tail]=x;\n\t}\n\tinline void check(int x){\n\t\twhile(head<=tail&&line[head]>x)++head;\n\t}\n\tinline void clear(){\n\t\thead=1,tail=0;\n\t}\n\tinline int front(){\n\t\tif(head<=tail)return f[line[head]];\n\t\treturn inf;\n\t}\n}q;//\u624b\u5199\u5355\u8c03\u961f\u5217\nvoid insert(int c){\n\tint p=last,ne=last=++cnt;\n\twhile(p&&!son(p,c))son(p,c)=ne,p=fa[p];\n\tif(!p)fa[ne]=1;\n\telse {\n\t\tint q=son(p,c);\n\t\tif(len[q]==len[p]+1)fa[ne]=q;\n\t\telse {\n\t\t\tint sp=++cnt;\n\t\t\tson(sp,0)=son(q,0),son(sp,1)=son(q,1),son(sp,2)=son(q,2);\n\t\t\tfa[sp]=fa[q],len[sp]=len[p]+1;\n\t\t\tfa[q]=fa[ne]=sp;\n\t\t\twhile(p&&son(p,c)==q)son(p,c)=sp,p=fa[p];\n\t\t}\n\t}\n}\nvoid work_rr(){\n\tint node=1,l=0;\n\tfor(register int i=1;i<=n;++i){\n\t\tif(l)--l;\n\t\tif(node!=1&&len[fa[node]]>=l)node=fa[node];\n\t\twhile(i+l<=n&&son(node,s[i+l]-'0'))node=son(node,s[i+l]-'0'),++l;\n\t\trr[i]=i+l-1;\n\t}\n}\nbool check(int l){\n\tq.clear(),f[n+1]=0;\n\tfor(register int i=n;i;--i){\n\t\tif(i+l<=n+1)q.push(i+l);\n\t\tq.check(rr[i]+1);\n\t\tf[i]=min(f[i+1]+1,q.front());\n\t}\n\treturn f[1]<=n/10;\n}\nint main(){\n\tint N=read(),M=read(),l,r,mid;\n\tfor(register int i=1;i<=M;++i){\n\t\tscanf(\"%s\",s+1),n=strlen(s+1);\n\t\tfor(register int j=1;j<=n;++j)insert(s[j]-'0');\n\t\tif(i!=M)insert(2);//\u7279\u6b8a\u5b57\u7b26\n\t}\n\twhile(N--){\n\t\tscanf(\"%s\",s+1),n=strlen(s+1);\n\t\twork_rr();\n\t\tl=0,r=n;\n\t\twhile(l<r){\n\t\t\tmid=l+r+1>>1;\n\t\t\tif(check(mid))l=mid;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",l);\n\t}\n}\n\n```\n\n",
        "postTime": 1556267266,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9053\u9898\u633a\u795e\u7684\n\n[~~\u849f\u84bb\u7684\u535a\u5ba2(\u9003)~~](https://www.cnblogs.com/guapisolo/p/10120443.html)\n\n\u8003\u8651$L$\u7684\u6027\u8d28\uff0c\u53d1\u73b0$L$\u8d8a\u5927\uff0c\u201c\u773c\u719f\u7684\u5b50\u4e32\u201d\u603b\u957f\u5ea6\u8d8a\u957f\n\n\u53ef\u4ee5\u8fd9\u6837\u7b80\u5355\u8bc1\u660e\uff0c\u957f\u5ea6\u8d8a\u5c0f\u7684\u4e32\uff0c\u5bf9\u4e8e\u5339\u914d\u8d8a\u6709\u5229\uff0c\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5927\u4e32\u51fa\u73b0\u5728\u4e86\u6a21\u5f0f\u4e32\u4e2d\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709\u5b50\u4e32\u4e00\u5b9a\u51fa\u73b0\u5728\u4e86\u6a21\u5f0f\u4e32\u4e2d\uff0c\u53cd\u4e4b\uff0c\u5c0f\u4e32\u51fa\u73b0\u5728\u6a21\u5f0f\u4e32\u4e2d\uff0c\u51e0\u4e2a\u5c0f\u4e32\u7ec4\u6210\u7684\u5927\u4e32\u5374\u4e0d\u4e00\u5b9a\u51fa\u73b0\u5728\u6a21\u5f0f\u4e32\u4e2d\u3002\n\n\u53d1\u73b0\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5c31\u4e8c\u5206$L$\u4e86\n\n\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u957f\u5ea6$L$\u4f5c\u4e3a\u6bcf\u6b21\u62c6\u5206\u51fa\u7684\u4e32\u7684\u957f\u5ea6\u4e0b\u9650\u8fdb\u884c\u9a8c\u8bc1\n\n\u5b9a\u4e49$f[i]$\u8868\u793a\u62c6\u5206\u4e32$S[1,i]$\uff0c\u62c6\u5206\u51fa\u7684\u4e00\u4e9b\u4e32\u80fd\u5728\u6a21\u5f0f\u4e32\u4e2d\u88ab\u8bc6\u522b\uff0c\u8fd9\u4e9b\u80fd\u88ab\u8bc6\u522b\u7684\u4e32\u7684\u6700\u957f\u957f\u5ea6\n\n\u8981\u4e48\u7b2ci\u4f4d\u5355\u72ec\u88ab\u62c6\u51fa\u6765\uff0c\u5e76\u4e14\u4e0d\u88ab\u8bc6\u522b\uff0c$f[i]=f[i-1]$\n\n\u8981\u4e48\u7b2ci\u4f4d\u4f5c\u4e3a\u672b\u5c3e\uff0c\u7ec4\u6210\u4e00\u4e2a\u80fd\u88ab\u8bc6\u522b\u7684\u4e32\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5f00\u5934\u7684\u524d\u4e00\u4f4d$j\\in[1,i-L]$,$f[i]=f[j]+i-j$\n\n\u53d1\u73b0$f[i]=f[j]+i-j=(f[j]-j)+i$\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\n\n\u80fd\u88ab\u8bc6\u522b\u7684\u4e32\u957f\u5ea6\u5fc5\u987b\u4e0d\u5c0f\u4e8e$L$\uff01\n\n\u9884\u5904\u7406\uff0c\u5bf9\u6240\u6709\u6a21\u5f0f\u4e32\u5efa\u5e7f\u4e49$SAM$\n\n\u6bcf\u6b21\u628a\u5f53\u524d\u6587\u672c\u4e32\u653e\u8fdb\u53bb\u8dd1\uff0c\u9884\u5904\u7406\u51fa\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u53ef\u8bc6\u522b\u4e32\u7684\u957f\u5ea6$ma_{i}$\n\n\u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709$trs[x][c]$\uff0c\u5c31\u8981\u50cf$fail$\u6811\u4e00\u6837\u4e0d\u65ad\u8df3$pre$\u5220\u6389\u4e00\u90e8\u5206\u524d\u7f00\uff0c\u76f4\u5230\u78b0\u5230\u4e00\u4e2a\u8282\u70b9\u6709$trs[x][c]$\n\n\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709$trs[x][c]$\uff0c\u8bf4\u660e\u80fd\u8df3\u8fc7\u53bb\u3002\n\n\u4f46\u73b0\u5728\u6211\u4eec\u5148\u4e0d\u80fd\u8df3\u8fc7\u53bb\uff0c\u56e0\u4e3a$trs[x][c]$\u7684\u4fe1\u606f\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\n\n\u73b0\u5728$dep_{x}$\u8868\u793a\u7684\u5e76\u975e\u5f53\u524d\u4e32\u7684\u957f\u5ea6\uff0c\u800c\u662f\u5728$trs$\u56fe\u91cc\u8868\u73b0\u7684\u6700\u957f\u957f\u5ea6\uff0c\u7531\u4e8e\u6bcf\u6b21\u6cbf$trs$\u6307\u9488\u79fb\u52a8\uff0c\u957f\u5ea6+1\uff0c\u6240\u4ee5$ma_{i}=min(ma_{i-1}+1,dep[x]+1)$\n\n\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u5c24\u5176\u662f\u5355\u8c03\u961f\u5217\u7684\u5730\u65b9\n\n```c++\n#include <cmath>\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N1 1105000\n#define S1 (N1<<1)\n#define T1 (N1<<2)\n#define ll long long\n#define uint unsigned int\n#define rint register int \n#define dd double\n#define il inline \n#define inf 0x3f3f3f3f\n#define idx(X) (X-'0')\nusing namespace std;\n\nint gint()\n{\n    int ret=0,fh=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')fh=-1;c=getchar();}\n    while(c>='0'&&c<='9'){ret=ret*10+c-'0';c=getchar();}\n    return ret*fh;\n}\nint N,M,len;\n/*struct Edge{\nint head[S1],to[S1],nxt[S1],cte;\nvoid ae(int u,int v){\n    cte++;to[cte]=v,nxt[cte]=head[u],head[u]=cte;}\n}E;*/\nchar str[N1];\nint ma[N1];\nnamespace SAM{\nint trs[S1][2],pre[S1],dep[S1],tot,la;\nvoid init(){tot=la=1;}\nvoid reduct(){la=1;}\nvoid insert(int c)\n{\n    int p=la,np=++tot,q,nq;la=np;\n    dep[np]=dep[p]+1;\n    for(;p&&!trs[p][c];p=pre[p]) trs[p][c]=np;\n    if(!p) {pre[np]=1;return;}\n    q=trs[p][c];\n    if(dep[q]==dep[p]+1) pre[np]=q;\n    else{\n        pre[nq=++tot]=pre[q];\n        pre[q]=pre[np]=nq;\n        dep[nq]=dep[p]+1;\n        memcpy(trs[nq],trs[q],sizeof(trs[q]));\n        for(;p&&trs[p][c]==q;p=pre[p]) trs[p][c]=nq;\n    }\n}\nvoid get_ma()\n{\n    int x=1,c;\n    for(int i=1;i<=len;i++)\n    {\n        c=idx(str[i]);\n        for(;x&&!trs[x][c];x=pre[x]);\n        if(!x){ma[i]=0,x=1;continue;}\n        ma[i]=min(ma[i-1]+1,dep[x]+1);\n        x=trs[x][c];\n    }\n}\n};\nint que[N1],f[N1];\nint check(int L)\n{\n    int i,j,hd=1,tl=0;\n    que[++tl]=0;\n    for(i=1;i<L;i++) f[i]=0;\n    for(i=max(1,L);i<=len;i++)\n    {\n        j=i-L;\n        while(hd<=tl&&f[que[tl]]-que[tl]<=f[j]-j) tl--;\n        que[++tl]=j;\n        while(hd<=tl&&que[hd]<i-ma[i]) hd++;\n        if(hd>tl) f[i]=f[i-1];\n        else f[i]=max(f[i-1],f[que[hd]]+i-que[hd]);\n    }\n    if(10*f[len]>=9*len) return 1;\n    else return 0;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&N,&M);\n    int i,j,l,r,n,m,mid,mxl=0,ans;\n    SAM::init();\n    for(m=1;m<=M;m++)\n    {\n        scanf(\"%s\",str+1);\n        len=strlen(str+1);\n        mxl=max(mxl,len);\n        for(i=1;i<=len;i++) \n            SAM::insert(idx(str[i]));\n        SAM::reduct();\n    }\n    for(n=1;n<=N;n++)\n    {\n        scanf(\"%s\",str+1);\n        len=strlen(str+1);\n        SAM::get_ma();\n        l=0,r=min(len,mxl),ans=0;\n        while(l<=r){\n            mid=(l+r)>>1;\n            if(check(mid)) ans=mid,l=mid+1;\n            else r=mid-1;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1544778365,
        "uid": 67512,
        "name": "\u74dc\u76ae\u5927\u54e5\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4022 \u3010[CTSC2012]\u719f\u6089\u7684\u6587\u7ae0\u3011"
    }
]