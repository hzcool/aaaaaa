[
    {
        "content": "\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\uff0c\u770b\u5230\u8fd8\u6ca1\u6709\u4eba\u53d1\u5e03\u9898\u89e3\u6211\u5c31\u53d1\u4e86...\n\nps : PoPoQQQ dalao Orz\n\n\u6d89\u53ca Link \u548c Cut,\u6211\u4eec\u8003\u8651\u4f7f\u7528 LCT\u3002\n\n\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff1a\n\n$a_1a_2a_3a_4\\dots a_n$\n\n\u6211\u4eec\u5b9a\u4e49 $a_i$ \u4e3a\u8fd9\u6761\u8def\u5f84\u4e0a\u7b2c $i$ \u4e2a\u70b9\u7684\u70b9\u6743 (\u9898\u76ee\u4e0a\u7684\u7f8e\u4e3d\u7a0b\u5ea6)\n\n\u90a3\u4e48\u8bbe $exp$ \u8868\u793a\u8fd9\u6761\u8def\u5f84\u7684\u671f\u671b\uff0c\u90a3\u4e48\n$exp = \\frac{a_1*1*n+a_2*2*(n-1)+a_3*3*(n-2)+\\dots+a_n*n*1}{C_n^2}$\n\n(\u6d1b\u5495\u4e0d\u80fd\u7528 cfrac \u5b57\u4f53\u6709\u70b9\u5c0f\uff0c\u89c1\u8c05)\n\n\u8fd9\u4e2a\u5f0f\u5b50\u600e\u4e48\u5f97\u6765\u7684\u5462\uff1f\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u5b50\u8def\u5f84\u6761\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u6570\u5b57\u7b49\u4e8e $C_n^2$\n\n\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u70b9\u7684\u6743\u503c $a_i$\uff0c\u5b83\u663e\u7136\u4f1a\u88ab $i * (n - i + 1)$ \u6761\u8def\u5f84\u8986\u76d6(\u4ece $i$ \u53ca $i$ \u7684\u5de6\u8fb9\u9009\u62e9\u5de6\u7aef\u70b9\uff0c\u4ece $i$ \u53ca $i$ \u7684\u53f3\u8fb9\u9009\u62e9\u53f3\u7aef\u70b9)\u3002\n\n\u4e8e\u662f\u7b2c $i$ \u4e2a\u70b9\u6700\u540e\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $a_i * i * (n - i + 1)$\n\n\u8fd9\u4e9b\u8d21\u732e\u7d2f\u52a0\u8d77\u6765\u5c31\u6210\u4e86\u6211\u4eec\u7684\u5206\u5b50\u3002\n\n\u5206\u6bcd\u6211\u4eec\u5728 $split$ \u4e4b\u540e\u53ea\u9700\u8981 $sz$ \u5373\u53ef\u7b80\u5355\u5730\u7b97\u51fa\uff0c\u6211\u4eec\u8003\u8651\u5728 $splay$ \u6bcf\u4e2a\u8282\u70b9\u4e2d\u7ef4\u62a4\u5206\u5b50\u3002\n\n\u600e\u6837\u8fdb\u884c\u7ef4\u62a4\u5462\uff0c\u6211\u4eec\u8003\u8651\u4e00\u6761\u8de8\u8fc7\u6839\u8282\u70b9\u7684\u8def\u5f84\u957f\u8fd9\u6837\uff1a\n\na_1 --- a_2 --- a_3 --- a_4(\u6839\u8282\u70b9) --- a_5 --- a_6\n\n$\\ \\ \\ \\ \\ \\ \\ $\u5de6\u5b50\u6811$\\qquad\\qquad\\qquad\\qquad$ \u53f3\u5b50\u6811\n\n\u6b64\u65f6\u6839\u8282\u70b9\u90e8\u5206\u7ef4\u62a4\u7684\u5206\u5b50\u4e3a\n$a_1*1*6+a_2*2*5+a_3*3*4+\\dots+a_6*6*1$\n\n\u5de6\u5b50\u6811\u7ef4\u62a4\u7684\u5206\u5b50\u4e3a\n\n$a_1*1*3+a_2*2*2+a_3*3*1$\n\n\u5de6\u5b50\u6811\u5bf9\u5f53\u524d\u8282\u70b9\u7684\u8d21\u732e\u5e94\u5f53\u4e3a\uff1a\n\n$a_1*1*6+a_2*2*5+a_3*3*4$\n\n\u8003\u8651\u4e24\u8005\u505a\u5dee\uff0c\u5f97\u5230\uff1a\n\n$a_1*1*3+2_2*2*3+a_3*3*3 = 3*(a_1+2a_2+3a_3)$\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5916\u9762\u7684\u8fd9\u4e2a $3$ \u6070\u597d\u7b49\u4e8e\u53f3\u5b50\u6811\u7684\u5927\u5c0f + 1\n\n\u6211\u4eec\u8bbe $lsum = a_1 * 1 + a_2 * 2 + a_3 * 3 + \\dots + a_n * n$\n\n\u5219\u5de6\u5b50\u6811\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $exp_{lc}+lsum_{lc} * (sz_{rc}+1)$\n\n\u540c\u7406\uff0c\u6211\u4eec\u8bbe $rsum = a_1 * n + a_2 * (n - 1) + \\dots + a_n * 1$\n\n\u90a3\u4e48\u53f3\u5b50\u6811\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $exp_{rc}+rsum_{rc} * (sz_{lc} + 1)$\n\n\u8fd8\u6709\u6839\u8282\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u5f88\u597d\u8ba1\u7b97\uff0c\u5c31\u662f\uff1a\n\n$val_{rt}*(sz_{lc}+1)*(sz_{rc}+1)$\n\n\u6839\u8282\u70b9\u7684\u671f\u671b\u5c31\u53ef\u4ee5\u8ba1\u7b97\u4e86\uff1a\n$exp_{rt} = exp_{lc}+exp_{rc}+val_{rt}*(sz_{lc}+1)*(sz_{rc}+1)+$\n$lsum_{lc} * (sz_{rc}+1)+rsum_{rc} * (sz_{lc} + 1)$\n\n$lsum,rsum$ \u4e5f\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u8bbe $sum$ \u8868\u793a\u5f53\u524d\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u7684\u6743\u503c\u548c\uff0c\u90a3\u4e48\n\n$lsum = lsum_{lc} + lsum_{rc} + sum_{rc} * (sz_{lc} + 1) + val_{rt} * (sz_{lc}+1)$\n\n$rsum = rsum_{rc} + rsum_{lc} + sum_{lc} * (sz_{rc} + 1) + val_{rt} * (sz_{rc}+1)$\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u534a\uff1a\u533a\u95f4 $Query$\n\n---\n\n\u6211\u4eec\u73b0\u5728\u8003\u8651\u66f4\u65b0\u3002\n\n\u5047\u8bbe\u6211\u4eec\u7ed9\u67d0\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u6743\u503c\u52a0\u4e0a $p$\n\n\u90a3\u4e48\u663e\u7136\u5730\uff0c \n\n$sum_{rt} = sum_{rt} + p * sz_{rt}$\n\n$lsum_{rt} = lsum_{rt} + p * \\frac{sz_{rt}*(sz_{rt}+1)}{2}$\n\n$rsum_{rt}$ \u4e0e $lsum_{rt}$ \u76f8\u540c\u3002\n\n$val_{rt} = val_{rt} + p$\n\n\u7136\u800c $exp_{rt}$ \u5c31\u5f88\u86cb\u75bc\u4e86\u3002\n\n\u6211\u4eec\u8bbe $n = sz_{rt}$\n\n\u5219$exp_{rt} = exp_{rt} + p * (1 * n + 2 * (n - 1) + \\dots + n * 1)$\n\n\u8003\u8651\u91cd\u5199 $p$ \u540e\u9762\u90a3\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u80fd\u5f97\u5230\uff1a\n\n$(1 + 2 + 3 + \\dots + n) * n - (1 * 2 + 2 * 3 + \\dots + (n - 1) * n)$\n\n\u524d\u4e00\u90e8\u5206\u5f88\u597d\u5316\u7b80\uff0c\u540e\u9762\u90a3\u4e00\u90e8\u5206\u53ef\u4ee5\u5199\u6210\uff1a\n\n$1^2+2^2+3^2+\\cdots+(n-1)^2+1+2+\\dots+(n-1)$\n\n\u6839\u636e\u5c0f\u5b66\u5965\u6570\uff0c\u8fd9\u540e\u534a\u4e2a\u5f0f\u5b50\u6574\u4e2a\u7b49\u4e8e:\n\n$\\frac{n * (n + 1)}{2} * n - \\frac{1}{6}*(n-1)*n*(2n-1)-\\frac{n*(n-1)}{2}$\n\n\u7136\u540e\u5f00\u59cb\u5316\u7b80\uff0c\u6b65\u9aa4\u5982\u4e0b:\n\n$$\n\\frac{n^3+n^2}{2}-\\frac{2n^3-2n^2-n^2+n}{6}-\\frac{n^2-n}{2}\n$$\n\n$$\n\\frac{3n^3+3n}{6}-\\frac{2n^3-2n^2-n^2+n}{6}\n$$\n\n$$\n\\frac{n^3+3n^2+2n}{6}\n$$\n\n$$\n\\frac{n(n^2+3n+2)}{6}\n$$\n\n$$\n\\frac{n(n+1)(n+2)}{6}\n$$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u66f4\u65b0\u7684\u65b9\u6cd5\u3002\n\n\u53e6\u5916\u7684\uff0c\u8fd9\u9053\u9898 $Push\\_Down$ \u5fc5\u987b\u5f53\u573a $Push\\_Down$,\u5426\u5219\u4f1a\u51fa\u95ee\u9898(\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8c03\u7528 $lsum$ \u548c $rsum$\n\n\u6700\u540e\uff0c\u4ee3\u7801:\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nint son[50050][2],fa[50050],sz[50050];\nlong long lsum[50050],val[50050],rsum[50050],EXP[50050],sum[50050],upd_tag[50050];\nint rev_tag[50050];\n\nvoid Push_Up(int rt)\n{\n\tsum[rt] = val[rt] + sum[son[rt][0]] + sum[son[rt][1]];\n\tsz[rt] = 1 + sz[son[rt][0]] + sz[son[rt][1]];\n\tlsum[rt] = lsum[son[rt][0]] + val[rt] * (sz[son[rt][0]] + 1) + lsum[son[rt][1]] + sum[son[rt][1]] * (sz[son[rt][0]] + 1);\n\trsum[rt] = rsum[son[rt][1]] + val[rt] * (sz[son[rt][1]] + 1) + rsum[son[rt][0]] + sum[son[rt][0]] * (sz[son[rt][1]] + 1);\n\tEXP[rt] = EXP[son[rt][0]] + EXP[son[rt][1]] + val[rt] * (sz[son[rt][0]] + 1) * (sz[son[rt][1]] + 1) +\n\t          lsum[son[rt][0]] * (sz[son[rt][1]] + 1) + rsum[son[rt][1]] * (sz[son[rt][0]] + 1);\n}\n\nvoid Rev(int rt)\n{\n\tswap(son[rt][0],son[rt][1]);\n\tswap(lsum[rt],rsum[rt]);\n\trev_tag[rt] ^= 1;\n}\n\nvoid Add(int rt,int valx)\n{\n\tlong long val1 = (sz[rt] * 1ll * (sz[rt] + 1)) / 2,val2 = (sz[rt] * 1ll * (sz[rt] + 1) * (sz[rt] + 2)) / 6;\n\tsum[rt] += valx * 1ll * sz[rt];\n\tval[rt] += valx;\n\tlsum[rt] += val1 * valx;\n\trsum[rt] += val1 * valx;\n\tEXP[rt] += valx * val2;\n\tupd_tag[rt] += valx;\n}\n\nvoid Push_Down(int rt)\n{\n\tif(rev_tag[rt])\n\t{\n\t\tRev(son[rt][0]);\n\t\tRev(son[rt][1]);\n\t\trev_tag[rt] = 0;\n\t}\n\tif(upd_tag[rt])\n\t{\n\t\tAdd(son[rt][0],upd_tag[rt]);\n\t\tAdd(son[rt][1],upd_tag[rt]);\n\t\tupd_tag[rt] = 0;\n\t}\n}\n\nvoid Down(int rt)\n{\n\tif(fa[rt]) Down(fa[rt]);\n\tPush_Down(rt);\n}\n\nbool is_root(int rt)\n{\n\treturn (son[fa[rt]][0] != rt && son[fa[rt]][1] != rt) || rt == 0;\n}\n\nvoid rotate(int rt)\n{\n\tint f = fa[rt],g = fa[f];\n\tint way = son[f][1] == rt;\n\tif(!is_root(f)) son[g][son[g][1] == f] = rt;\n\tfa[rt] = g; son[f][way] = son[rt][way ^ 1];\n\tif(son[rt][way ^ 1]) fa[son[rt][way ^ 1]] = f;\n\tson[rt][way ^ 1] = f; fa[f] = rt;\n\tPush_Up(f); Push_Up(rt);\n}\n\nvoid splay(int rt)\n{\n\tDown(rt);\n\twhile(!is_root(rt))\n\t{\n\t\tint f = fa[rt],g = fa[f];\n\t\tif(!is_root(f)) (son[f][1] == rt) ^ (son[g][1] == rt) ? rotate(rt) : rotate(f);\n\t\trotate(rt);\n\t}\n}\n\nvoid Access(int u)\n{\n\tfor(int v = 0;u;v = u,u = fa[u])\n\t{\n\t\tsplay(u);\n\t\tson[u][1] = v;\n\t\tPush_Up(u);\n\t}\n}\n\nvoid make_root(int u)\n{\n\tAccess(u); splay(u); Rev(u);\n}\n\nint find_root(int u)\n{\n\tAccess(u); splay(u);\n\twhile(son[u][0]) u = son[u][0];\n\treturn u;\n}\n\nlong long split(int u,int v)\n{\n\tif(find_root(u) != find_root(v)) return -1;\n\tmake_root(u); Access(v); splay(v);\n\treturn EXP[v];\n}\n\nvoid Update(int u,int v,int val)\n{\n\tif(find_root(u) != find_root(v)) return ;\n\tmake_root(u); Access(v); splay(v);\n\tAdd(v,val);\n}\n\nvoid Link(int u,int v)\n{\n\tif(find_root(u) == find_root(v)) return ;\n\tmake_root(u); fa[u] = v;\n}\n\nvoid Cut(int u,int v)\n{\n\tif(find_root(u) != find_root(v)) return ;\n\tmake_root(u); Access(v); splay(v);\n\tif(son[u][1] || son[v][0] != u) return;\n\tson[v][0] = fa[u] = 0;\n\tPush_Up(v);\n}\n\nlong long gcd(long long a,long long b)\n{\n\treturn b == 0 ? a : gcd(b,a % b);\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n; ++ i) scanf(\"%lld\",&val[i]),Push_Up(i);\n\tfor(int i = 1;i < n; ++ i)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v); Link(u,v);\n\t}\n\tfor(int i = 1;i <= m; ++ i)\n\t{\n\t\tint op,u,v;scanf(\"%d%d%d\",&op,&u,&v);\n\t\tint w; if(op == 3) scanf(\"%d\",&w);\n\t\tif(op == 1) Cut(u,v);\n\t\telse if(op == 2) Link(u,v);\n\t\telse if(op == 3) Update(u,v,w);\n\t\telse\n\t\t{\n\t\t\tlong long tmp = split(u,v);\n\t\t\tif(tmp == -1) printf(\"-1\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tlong long csz = sz[v] * (sz[v] + 1) / 2;\n\t\t\t\tlong long gcdx = gcd(csz,tmp);\n\t\t\t\tprintf(\"%lld/%lld\\n\",tmp/gcdx,csz/gcdx);\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1543802015,
        "uid": 25308,
        "name": "Wen_kr",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4842 \u3010\u57ce\u5e02\u65c5\u884c\u3011"
    },
    {
        "content": "[TOC]\n\n# \u58f9\u3001\u9898\u76ee\u63cf\u8ff0\n\n[\u4f20\u9001\u95e8 to LUOGU](https://www.luogu.com.cn/problem/P4842)\n\n# \u8d30\u3001\u4e00\u4e9b\u601d\u8003\n\n\u76ee\u6d4b $\\tt LCT$ .\n\n\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff0c\u8bbe\u70b9\u6392\u4e0b\u6765\u662f $p_1,p_2,p_3,...,p_k$\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u7684 $E$ \u7684\u503c\u5373\u4e3a\n$$\n\\sum_{i=1}^kp_i\\times i\\times (k-i+1)\\over {k\\choose 2}\n$$\n\u4e3a\u4e86\u7b80\u4fbf\u8868\u8fbe\uff0c\u6211\u4eec\u5c06 $v_{p_i}$ \u76f4\u63a5\u5199\u6210 $p_i$.\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u80af\u5b9a\u5f97\u7ef4\u62a4\u7b54\u6848\uff0c\u8003\u8651\u5f53\u524d\u6839\u4e3a $t$\uff0c\u90a3\u4e48 $t$ \u4e2d\u4e00\u5b9a\u9700\u8981\u7ef4\u62a4\u4e0a\u9762\u90a3\u4e2a\u503c\u7684\u5206\u5b50\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e2a\u4e1c\u897f\u4e3a $\\rm exp$\uff0c\u4f46\u662f\u5728\u7531\u5b50\u5230\u7236\u4eb2\u4e0a\u4f20\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e $t$ \u7684\u5de6\u5b50\u6811\uff0c\u5728\u5b83\u7684\u6839\u4e2d\uff0c\u7ef4\u62a4\u7684\u6bd4\u6211\u4eec\u60f3\u8981\u7684\u8981\u5c11\u4e00\u4e9b\uff0c\u5c11\u7684\u90e8\u5206\u5176\u5b9e\u5c31\u662f\u5de6\u5b50\u6811\u7684\u70b9\u548c\u53f3\u5b50\u6811\u5339\u914d\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u5de6\u5b50\u6811\u6211\u4eec\u5355\u72ec\u518d\u50a8\u5b58\u4e00\u4e2a $1\\times p_1+2\\times p_2+...+(t-1)\\times p_{t-1}$\uff0c\u8bb0\u8fd9\u4e2a\u53d8\u91cf\u4e3a $\\rm lsum$\uff0c\u90a3\u4e48\u5c11\u7684\u90e8\u5206\u5c31\u662f $\\text{lsum}\\times (\\text{siz}_r+1)$\uff0c\u8fd9\u662f\u5de6\u8fb9\u7684\u70b9\u548c\u53f3\u8fb9\u5339\u914d\u7684\u60c5\u51b5\uff0c\u540c\u6837\uff0c\u6211\u4eec\u4fbf\u4e5f\u9700\u8981\u5b58\u4e0b\u4e00\u4e2a $\\text{rsum}=1\\times p_k+2\\times p_{k-1}+....$ \u4e3a\u53f3\u5b50\u6811\u7684\u60c5\u51b5\uff0c\u4e0a\u4f20\u540c\u7406\uff1b\n\n\u8003\u8651\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u7ef4\u62a4\u7684\u53d8\u91cf\n\n- $\\rm siz$\uff0c\u4e0d\u5fc5\u591a\u8bf4\uff1b\n- $\\rm val$\uff0c\u5c31\u662f\u8fd9\u4e2a\u70b9\u7684\u70b9\u503c\uff1b\n- $\\exp$\uff0c\u8d77\u5230\u7c7b\u4f3c\u4e8e\u50a8\u5b58\u7b54\u6848\u7684\u529f\u6548\uff1b\n- $\\rm lsum,rsum$\uff0c\u4e0a\u4f20\u65f6\u6709\u5947\u6548\uff1b\n- $\\rm sum$\uff0c\u5904\u7406 $\\rm lsum,rsum$ \u65f6\u9700\u8981\u4f7f\u7528\uff0c\u8868\u793a\u5b50\u6811\u5185\u6240\u6709\u70b9\u7684 $\\rm val$ \u4e4b\u548c\uff1b\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u64cd\u4f5c \u2014\u2014 \u8def\u5f84\u6743\u503c\u4fee\u6539\u3002\u5bf9\u4e8e $\\rm lsum,rsum$ \u7684\u4fee\u6539\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u6709 $\\Delta=x\\times (1+2+3+...+k)=x{k(k+1)\\over 2}$.  \u4fee\u6539\u7684\u96be\u70b9\u4e3b\u8981\u5728\u4e8e $\\rm exp$ \u7684\u4fee\u6539\u4e0a\uff0c\u5bf9\u4e8e\u5b83\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u5f0f\u5b50\u5199\u51fa\u6765\uff1a\n$$\n\\begin{aligned}\nAns&=\\sum_{i=1}^k(p_i+\\Delta)\\times i\\times (k-i+1) \\\\\n&=\\sum_{i=1}^kp_i\\times i\\times (k-i+1)+\\Delta\\sum_{i=1}^ki\\times (k-i+1) \\\\\n&=\\exp+\\Delta\\times {k(k+1)(k+2)\\over 6}\n\\end{aligned}\n$$\n\u6700\u540e\u4e00\u6b65\u7684\u63a8\u5bfc\u76f4\u63a5\u5c55\u5f00\u5408\u5e76\u5199\u6210\u901a\u9879\u5373\u53ef\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e $\\exp$ \u7684\u4fee\u6539\u4e5f\u53ef\u4ee5\u76f4\u63a5\u505a\u4e86\uff0c\u53ea\u8981\u6211\u4eec\u6709 $k$ \u5373 $\\rm siz$ .\n\n\u7136\u540e\uff0c\u5c31\u5207\u6389\u4e86\uff1f\u5269\u4e0b\u7684\uff0c\u5c31\u662f\u5982\u4f55\u7528\u4ee3\u7801\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$.\n\n# \u53c1\u3001\u53c2\u8003\u4ee3\u7801\n\n$\\color{red}{\\text{talk is LCT, but I have no code.}}$\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\n#define mp(a, b) make_pair(a, b)\n\ntypedef long long ll;\ntemplate<class T>inline T readin(T x){\n    x=0; int f=0; char c;\n    while((c=getchar())<'0' || '9'<c) if(c=='-') f=1;\n    for(x=(c^48); '0'<=(c=getchar()) && c<='9'; x=(x<<1)+(x<<3)+(c^48));\n    return f? -x: x;\n}\n\nconst int maxn=5e4;\n\nll gcd(ll x, ll y){\n    return !y? x: gcd(y, x%y);\n}\n\nint n, m;\n\nnamespace lct{\n    int son[maxn+5][2], fa[maxn+5];\n    int siz[maxn+5], rev[maxn+5];\n    ll tag[maxn+5], lsum[maxn+5], rsum[maxn+5], exp[maxn+5], sum[maxn+5], val[maxn+5];\n    inline int isroot(int x){\n        return son[fa[x]][0]!=x && son[fa[x]][1]!=x;\n    }\n    inline void reverse(int x){\n        if(!x) return;\n        swap(son[x][0], son[x][1]);\n        swap(lsum[x], rsum[x]);\n        rev[x]^=1;\n    }\n    inline void add(int x, ll delta){\n        if(!x) return;\n        tag[x]+=delta, val[x]+=delta;\n        lsum[x]+=delta*siz[x]*(siz[x]+1)/2;\n        rsum[x]+=delta*siz[x]*(siz[x]+1)/2;\n        sum[x]+=delta*siz[x];\n        exp[x]+=delta*siz[x]*(siz[x]+1)*(siz[x]+2)/6;\n    }\n    inline void pushup(int x){\n        int ls=son[x][0], rs=son[x][1];\n        siz[x]=siz[ls]+siz[rs]+1;\n        sum[x]=sum[ls]+sum[rs]+val[x];\n        lsum[x]=lsum[ls]+(siz[ls]+1)*(val[x]+sum[rs])+lsum[rs];\n        rsum[x]=rsum[rs]+(siz[rs]+1)*(val[x]+sum[ls])+rsum[ls];\n        exp[x]=exp[ls]+exp[rs]+lsum[ls]*(siz[rs]+1)+rsum[rs]*(siz[ls]+1)+val[x]*(siz[ls]+1)*(siz[rs]+1);\n    }\n    inline void pushdown(int x){\n        if(tag[x]) add(son[x][0], tag[x]), add(son[x][1], tag[x]);\n        if(rev[x]) reverse(son[x][0]), reverse(son[x][1]);\n        tag[x]=rev[x]=0;\n    }\n    inline void connect(int x, int y, int d){\n        son[x][d]=y, fa[y]=x;\n    }\n    inline void rotate(int x){\n        int y=fa[x], z=fa[y], d=(son[y][1]==x);\n        fa[x]=z; if(!isroot(y)) son[z][son[z][1]==y]=x;\n        connect(y, son[x][d^1], d);\n        connect(x, y, d^1);\n        pushup(y), pushup(x);\n    }\n    inline void splay(int x){\n        static int sta[maxn+5], ed=0; int now=x;\n        while(sta[++ed]=now, !isroot(now)) now=fa[now];\n        while(ed) pushdown(sta[ed--]);\n        int y, z;\n        while(!isroot(x)){\n            y=fa[x], z=fa[y];\n            if(!isroot(y))\n                (son[z][1]==y)^(son[y][1]==x)? rotate(y): rotate(x);\n            rotate(x);\n        }\n    }\n    inline void access(int x){\n        for(int pre=0; x; pre=x, x=fa[x])\n            splay(x), son[x][1]=pre, pushup(x);\n    }\n    inline int findrt(int x){\n        access(x); splay(x); pushdown(x);\n        while(son[x][0]) pushdown(x=son[x][0]);\n        return splay(x), x;\n    }\n    inline void makert(int x){\n        access(x); splay(x); reverse(x);\n    }\n    inline void link(int x, int y){\n        makert(x);\n        if(findrt(y)==x) return;\n        fa[x]=y;\n    }\n    inline void cut(int x, int y){\n        makert(x);\n        if(findrt(y)==x && fa[y]==x && son[y][0]==0)\n            son[x][1]=fa[y]=0, pushup(x);\n    }\n    inline void alladd(int x, int y, ll delta){\n        makert(x);\n        if(findrt(y)!=x) return;\n        access(y); splay(y);\n        add(y, delta);\n    }\n    inline pair<ll, int> query(int x, int y){\n        makert(x);\n        if(findrt(y)!=x) return mp(-1, -1);\n        access(y); splay(y);\n        return mp(exp[y], siz[y]);\n    }\n    inline void print(){\n        for(int i=1; i<=n; ++i){\n            printf(\"node %d :>\\n\", i);\n            printf(\"fa == %d\\n\", fa[i]);\n            printf(\"ls == %d, rs == %d\\n\", son[i][0], son[i][1]);\n            printf(\"val == %lld, siz == %d\\n\", val[i], siz[i]);\n            printf(\"sum == %lld, exp == %lld\\n\", sum[i], exp[i]);\n            puts(\"------------------------------\");\n        }\n    }\n    inline void initial(){\n        for(int i=1; i<=n; ++i){\n            siz[i]=1, lsum[i]=rsum[i]=exp[i]=sum[i]=val[i]=readin(1);\n        }\n        int u, v;\n        for(int i=1; i<n; ++i){\n            u=readin(1), v=readin(1);\n            link(u, v);\n        }\n    }\n}\n\ninline void input(){\n    n=readin(1), m=readin(1);\n    lct::initial();\n}\n\nsigned main(){\n    input();\n    int cmd, x, y, d;\n    while(m--){\n        cmd=readin(1), x=readin(1), y=readin(1);\n        if(cmd==1) lct::cut(x, y);\n        else if(cmd==2) lct::link(x, y);\n        else if(cmd==3){\n            d=readin(1);\n            lct::alladd(x, y, d);\n        }\n        else if(cmd==4){\n            pair<ll, int>ret=lct::query(x, y);\n            ll up=ret.first, down=ret.second;\n            if(up==-1){ printf(\"-1\\n\"); continue; }\n            down=down*(down+1)/2;\n            ll d=gcd(up, down);\n            printf(\"%lld/%lld\\n\", up/d, down/d);\n        }\n    }\n    return 0;\n}\n```\n\n# \u8086\u3001\u7528\u5230\u306e\u5c0f $\\tt trick$\n\n\u672c\u9898\u8ba1\u7b97\u671f\u671b\u7684\u65b9\u6cd5\u662f $\\cfrac{\\text{\u6574\u4f53}}{\\text{\u6574\u4f53}}$\uff0c\u8003\u8651\u6bcf\u4e2a\u70b9\u88ab\u7b97\u8fdb\u591a\u5c11\u6b21\u8def\u5f84\uff0c\u5f97\u5230\u8fd9\u4e2a\u70b9\u5bf9\u671f\u671b\u7684\u603b\u4ef7\u503c\u8d21\u732e\uff0c\u6c42\u548c\uff0c\u4ee5\u65b9\u6848\u6570\u9664\u4e4b\uff0c\u662f\u7b54\u6848\u4e5f\u3002\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u9898\uff0c\u4f3c\u4e4e\u6709\u65f6\u53ef\u4ee5\u4ece\u8be2\u95ee\u65b9\u9762\u5f97\u5230\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48\uff0c\u5bf9\u4e8e\u4fee\u6539\u65f6\uff0c\u518d\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e9b\u503c\u5373\u53ef\u3002\n\n\u4f46\u662f\u53ef\u80fd\u4e5f\u4f1a\u51fa\u73b0\u6211\u4eec\u4e00\u5f00\u59cb\u65e0\u6cd5\u76f4\u63a5\u7ef4\u62a4\u7b54\u6848\uff0c\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u7b54\u6848\u90fd\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\uff0c\u6240\u4ee5\u6709\u65f6\u53ef\u4ee5\u5c06\u7b54\u6848\u62c6\u6210\u591a\u4e2a\u90e8\u5206\uff0c\u5206\u5f00\u8fdb\u884c\u7ef4\u62a4\uff0c\u7136\u540e\u62fc\u63a5\u8d77\u6765\uff0c\u6bd4\u5982\u6b64\u9898\u5e76\u672a\u5c06 $k\\choose 2$ \u653e\u5165\u7ef4\u62a4\u4e2d\uff0c\u4e3a\u4e4b\u9ad8\u6b21\uff0c\u4ea6\u4e8e\u5206\u6bcd\u8036\uff0c\u662f\u5927\u7e41\u4e5f\u3002",
        "postTime": 1617007047,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "[BZOJ3091]\u57ce\u5e02\u65c5\u884c"
    },
    {
        "content": "## \u57ce\u5e02\u6e38\u884c\n\ntag:LCT,math.\n\n\u4ecb\u7ecd\u4e00\u79cd\u5f0f\u5b50\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\n\n\u5148\u8003\u8651\u8fd9\u4e2a H \u7a76\u7adf\u662f\u4ec0\u4e48\u73a9\u610f\u3002\u663e\u7136\u4e0d\u80fd\u5927\u529b\u679a\u4e3e\u8def\u5f84\u53bb\u7b97\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u4e2a\u70b9\u7684\u8d21\u732e\uff1a\u5bf9\u4e8e\u70b9 $ s $ ,\u8bb0\u5176\u4e0e\u70b9 $ y $ \u7684\u8ddd\u79bb\u4e3a $ \\text{dep}(s) $ , $ x $ \u5230 $ y $ \u7684\u8def\u5f84\u4e0a\u70b9\u6570\u4e3a $ all $ ,\u5219\u8d21\u732e\u4e3a $ \\text{dep}(s)*(all-\\text{dep}(s)+1)*w(s) $ \n\n\u7b54\u6848\u5c31\u662f $ \\sum_{s\\in path(x,y)}\\text{dep}(s)*(all-\\text{dep}(s)+1)*w(s) $ \n\n\u76f4\u63a5\u505a\u662f\u5e73\u65b9\u7684\uff0c\u62c6\u5f00\u6765\u5f97\u5230 $ ((all+1)\\sum_s\\text{dep}(s)*w(s))-\\sum_s\\text{dep}^2(s)*w(s) $ \n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u6df1\u5ea6\u4e58\u70b9\u6743\u7684\u548c\uff0c\u4e0e\u6df1\u5ea6\u7684\u5e73\u65b9\u4e58\u70b9\u6743\u7684\u548c\uff0c\u540c\u65f6\u8981\u652f\u6301\u8fde\u8fb9\u65ad\u8fb9\uff0c\u94fe\u52a0\u3002\n\n\u8bb0 $ s $ \u7684\u70b9\u6743\uff0c\u70b9\u6743\u548c\uff0c\u6df1\u5ea6\u548c\uff0c\u6df1\u5ea6\u5e73\u65b9\u548c\uff0c\u6df1\u5ea6\u4e58\u70b9\u6743\u548c\uff0c\u6df1\u5ea6\u5e73\u65b9\u4e58\u70b9\u6743\u548c\uff08\u4ee5\u4e0a\u5747\u6307\u4ee5 $ s $ \u4e3a\u6839\u7684 splay \u4e2d\u7684\u4fe1\u606f\uff0c\u201c\u6df1\u5ea6\u201d\u5747\u6307\u5230\u8fd9\u4e2a splay \u4e2d\u6700\u6d45\u7684\u70b9\u7684\u8ddd\u79bb+1\uff09\u5206\u522b\u4e3a $ w(s), sumw(s),sumd(s),sumd2(s),dw(s),d2w(s) $ .\n\nLCT \u7ef4\u62a4\u989d\u5916\u4fe1\u606f\u7684\u5173\u952e\u5728\u4e8e pushup\uff0c\u56e0\u6b64\u8003\u8651\u5982\u4f55\u901a\u8fc7\u5de6\u513f\u5b50 $ l $ ,\u53f3\u513f\u5b50 $ r $ \u7684\u4fe1\u606f\u6765\u63a8\u51fa $ x $ \u7684\u4fe1\u606f,\u8bb0 $ x $ \u7684\u6df1\u5ea6(\u5de6\u513f\u5b50\u5927\u5c0f+1\uff09\u4e3a $ cur $ \u3002\n\n\u70b9\u6743\u548c\u7565\u3002  \n $ sumd(s)=sumd(l)+cur+(sumd(r)+cur*size(r)) $   \n $ sumd2(s)=sumd2(l)+cur^2+(sumd2(r)+2cur*sumd(r)+size(r)*cur^2) $   \n $ dw(s)=dw(l)+cur*w(s)+(dw(r)+cur*sumw(r)) $   \n $ d2w(s)=d2w(l)+cur^2*w(s)+(d2w(r)+2cur*dw(r)+cur^2*sumw(r)) $ \n\n\u8fd9\u51e0\u6761\u7684\u601d\u8def\u90fd\u662f\uff0c\u5de6\u513f\u5b50\u4e0d\u53d7\u5f71\u54cd\uff0c $ s $ \u6309\u5b9a\u4e49\u7b97\uff0c\u7136\u540e\u7b97\u5de6\u513f\u5b50\u4e0e $ s $ \u5bf9\u53f3\u513f\u5b50\u7684\u5f71\u54cd\u3002\n\n\u4f46\u662f\u4ec5\u4ec5\u4fee\u6539pushup\u662f\u4e0d\u591f\u7684\u3002\u5982\u679c\u4f60\u50cf\u6211\u90a3\u6837\u4ec5\u4ec5\u6539pushup\uff0c\u4f60\u4f1a\u53d1\u73b0 $ w,sumw,sumd,sumd2 $ \u90fd\u662f\u5bf9\u7684\uff0c\u4f46 $ dw,d2w $ \u662f\u9519\u7684\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf~~debug~~ \u53ef\u4ee5\u53d1\u73b0\uff0c $ dw,d2w $ \u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff0c\u4e0esplay\u7684\u987a\u5e8f\u6709\u5173\uff08\u5c31\u662f\u8bf4\uff0c\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\uff0c\u524d\u9762\u51e0\u4e2a\u503c\u4e0d\u4f1a\u6539\u53d8\uff0c\u4f46 $ dw,d2w $ \u4f1a\u53d8\u5316\uff09\u3002\u800cLCT\u56e0\u4e3a\u6362\u6839\u64cd\u4f5c\u7684\u5b58\u5728\uff0c\u5fc5\u7136\u662f\u6709\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\u7684\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5\u5c31\u6302\u6389\u4e86\u3002\u8981\u6539\u5bf9\u975e\u5e38\u5bb9\u6613\uff0c\u6211\u4eec\u518d\u8bb0\u5f55\u4e24\u4e2a $ Rdw,Rd2w $ \u8868\u793a\u5230splay\u4e2d\u6700\u6df1\u7684\u70b9\u7684\u8ddd\u79bb+1\u7684\u548c\uff0c\u4e0b\u4f20\u7ffb\u8f6c\u6807\u8bb0\u7684\u65f6\u5019\u628a\u5f53\u524d\u70b9\u7684 $ dw,Rdw $ \u4ea4\u6362\uff0c $ d2w,Rd2w $ \u4ea4\u6362\u5c31\u597d\u4e86\u3002\n\n\u94fe\u52a0\u5c31\u4e0d\u8bf4\u4e86\uff0c\u548c\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u52a0\u662f\u4e00\u4e2a\u96be\u5ea6\u3002\n\n\u590d\u6742\u5ea6 $ \\mathcal O(m\\log n) $ \n\n\u5199\u672c\u6587\u65f6\u95f4\u4ed3\u4fc3\uff0c\u5982\u6709\u9519\u6f0f\u6073\u8bf7\u6307\u51fa\u3002\n\n\u4e3b\u8981\u4ee3\u7801\uff1a\n\n```cpp\n#define MAXN 100011\nstruct LCT\n{\n    int fa[MAXN],son[MAXN][2],rev[MAXN],w[MAXN],add[MAXN];\n    ll size[MAXN],sumw[MAXN],sumd[MAXN],sumd2[MAXN];\n    ll dw[MAXN],Rdw[MAXN],d2w[MAXN],Rd2w[MAXN];\n    void init(int n){for(int i=1;i<=n;++i)w[i]=read(),size[i]=1;}\n    bool not_root(int x){return son[fa[x]][0]==x||son[fa[x]][1]==x;}\n    void pushrev(int x){if(x)std::swap(dw[x],Rdw[x]),std::swap(d2w[x],Rd2w[x]),std::swap(son[x][0],son[x][1]),rev[x]^=1;}//\u7ffb\u8f6c\n    void pushadd(int x,int k)\n    {\n        if(!x)return;\n        sumw[x]+=size[x]*k,w[x]+=k,dw[x]+=sumd[x]*k,Rdw[x]+=sumd[x]*k, add[x]+=k;\n        d2w[x]+=sumd2[x]*k,Rd2w[x]+=sumd2[x]*k;\n    }\n    void pushup(int x)\n    {\n        int l=son[x][0],r=son[x][1];\n        ll cur=size[l]+1;\n        size[x]=size[l]+size[r]+1;\n        sumw[x]=sumw[l]+sumw[r]+w[x];\n        sumd[x]=sumd[l]+cur+(sumd[r]+cur*size[r]);\n        sumd2[x]=sumd2[l]+cur*cur+(sumd2[r]+2*cur*sumd[r]+size[r]*cur*cur);\n\n        dw[x]=dw[l]+cur*w[x]+(dw[r]+cur*sumw[r]);\n        d2w[x]=d2w[l]+cur*cur*w[x]+(d2w[r]+2*cur*dw[r]+cur*cur*sumw[r]);\n\n        cur=size[r]+1;\n        Rdw[x]=Rdw[r]+cur*w[x]+(Rdw[l]+cur*sumw[l]);\n        Rd2w[x]=Rd2w[r]+cur*cur*w[x]+(Rd2w[l]+2*cur*Rdw[l]+cur*cur*sumw[l]);\n    }\n    void pushdown(int x)\n    {\n        int l=son[x][0],r=son[x][1];\n        if(rev[x])pushrev(l),pushrev(r),rev[x]=0;\n        if(add[x])pushadd(l,add[x]),pushadd(r,add[x]),add[x]=0;\n    }\n    void rotate(int x)\n    {\n        int y=fa[x],z=fa[y],k=(son[y][1]==x);\n        if(not_root(y))son[z][son[z][1]==y]=x;\n        fa[x]=z;\n        son[y][k]=son[x][!k],fa[son[x][!k]]=y;\n        son[x][!k]=y,fa[y]=x;\n        pushup(y),pushup(x);\n    }\n    int s[MAXN];\n    void splay(int x)\n    {\n        int top=0;\n        s[++top]=x;\n        for(int y=x;not_root(y);y=fa[y])s[++top]=fa[y];\n        while(top)pushdown(s[top--]);\n        while(not_root(x))\n        {\n            int y=fa[x];\n            if(not_root(y))rotate((son[y][1]==x)==(son[fa[y]][1]==y)?y:x);\n            rotate(x);\n        }\n    }\n    void access(int x)\n    {\n        for(int y=0;x;y=x,x=fa[x])\n            splay(x),son[x][1]=y,pushup(x);\n    }\n    int get_root(int x)\n    {\n        access(x),splay(x);\n        while(son[x][0])x=son[x][0];\n        return splay(x),x;\n    }\n    void make_root(int x){access(x),splay(x),pushrev(x);}\n    bool split(int x,int y)\n    {\n        if(get_root(x)!=get_root(y))return 0;\n        make_root(x),access(y),splay(y);\n        return 1;\n    }\n    //\n    void Link(int x,int y)\n    {\n        if(get_root(x)!=get_root(y))make_root(x),fa[x]=y;//,printf(\"Link %d %d\\n\",x,y);\n    }\n    void Cut(int x,int y)\n    {\n        if(get_root(x)!=get_root(y))return;\n        split(x,y);\n        if(size[y]==2)fa[x]=0,son[y][0]=0,pushup(y);//,printf(\"Cut %d %d\\n\",x,y);\n    }\n    void Add(int x,int y,int k){if(split(x,y))pushadd(y,k);}\n    void solve(int x,int y)\n    {\n        if(split(x,y))\n        {\n            ll a=(size[y]+1)*dw[y]-d2w[y],b=size[y]*(size[y]+1)/2,g=gcd(a,b);\n            printf(\"%lld/%lld\\n\",a/g,b/g);\n        }\n        else puts(\"-1\");\n    }\n}lct;\n```\n\n",
        "postTime": 1600849504,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4842 \u3010\u57ce\u5e02\u65c5\u884c\u3011"
    },
    {
        "content": "### Description\n\n\u7ed9\u4e00\u9897\u4ee5 $1$ \u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u7ef4\u62a4\u4ee5\u4e0b\u64cd\u4f5c\n\n1. \u8fde\u63a5 $(u,v)$ \u8fd9\u6761\u8fb9\n2. \u5220\u9664 $(u,v)$ \u8fd9\u6761\u8fb9\n3. \u7ed9 $u$ \u5230 $v$ \u7684\u94fe\u4e0a\u6bcf\u4e2a\u70b9\u52a0\u4e0a\u4e00\u4e2a\u6570\n4. \u6c42\u5728 $(u,v)$ \u4e0a\u4efb\u610f\u9009\u4e24\u4e2a\u70b9\u5b83\u4eec\u4e4b\u95f4\u7684\u6743\u503c\u548c\u7684\u671f\u671b\n\n$n, m \\leq 50000, a_i \\leq 10^6$\n\n### Solution\n\n\u524d\u4e09\u4e2a\u64cd\u4f5c\u5c31\u662f LCT \u677f\u5b50\uff0c\u8003\u8651\u5982\u4f55\u5728 LCT \u4e0a\u7ef4\u62a4 4 \u64cd\u4f5c\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe\u8fd9\u4e2a\u8def\u5f84\u662f $a_1, a_2, a_3, \\cdots, a_{siz}$ \uff0c\u5176\u4e2d $siz$ \u662f\u957f\u5ea6\n\n\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\uff0c\u6613\u5f97\u6211\u4eec\u8981\u6c42\u7684\u671f\u671b\u503c $=\\frac{\\sum\\limits_{i=1}^{siz} i (siz - i + 1)a_i}{\\frac{siz(siz+1)}{2}}$ \n\n\u663e\u7136\u8fd9\u4e2a\u5206\u6bcd\u5f88\u597d\u641e\uff0c\u53ea\u9700\u8981\u8003\u8651\u600e\u4e48\u5728 LCT \u4e0a\u7ef4\u62a4\u5206\u5b50\uff0c\u6216\u8005\u8bf4\u5728\u5e73\u8861\u6811\u4e0a\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u77e5\u9053\u5de6\u5b50\u548c\u53f3\u5b50\u7684\u7b54\u6848\u5982\u4f55\u66f4\u65b0\u51fa\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\n\n\u8bbe\u5de6\u5b50\u8868\u793a $a_1, a_2, \\cdots, a_p$\uff0c \u8be5\u70b9\u7684\u503c\u662f $a_{p+1}$ \uff0c\u53f3\u5b50\u8868\u793a $a_{p+2}, \\cdots, a_{siz}$ \n\n\u53ef\u4ee5\u5f97\u5230\uff1a\u5de6\u5b50\u7684 $siz_0 = p$\uff0c\u53f3\u5b50\u7684 $siz_1 = siz - p - 1$\n\n\u6539\u70b9\u8981\u7684\u7b54\u6848\u51cf\u53bb\u5de6\u5b50\u7684\u7b54\u6848\u51cf\u53bb\u53f3\u5b50\u7684\u7b54\u6848\u4fbf\u662f \n\n$\\sum\\limits_{i=1}^{siz}i(siz - i + 1)a_i - \\sum\\limits_{i=1}^{p}i(p-i+1)a_i-\\sum\\limits_{i=p+2}^{siz} (i-p-1)(siz - i + 1)a_i$\n\n$=\\sum\\limits_{i=1}^{p} i(siz-p)a_i+a_{p+1}(p+1)(siz-p)+\\sum\\limits_{i=p+2}^{siz}(p+1)(siz-i+1)a_i$\n\n\u6839\u636e\u4e0a\u9762\u5f97\u5230\u7684 $siz_0=p,siz_1=siz-p-1$ \u7b80\u5355\u5316\u7b80\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\n\n$=(siz_1+1)\\sum\\limits_{i=1}^{siz_0}i\\cdot a_i+a_{siz_0+1}(siz_0+1)(siz_1+1)+(siz_0+1)\\sum\\limits_{i=p+2}(siz - i +1)a_i$\n\n\u5230\u8fd9\u91cc\u5e94\u8be5\u4f60\u5df2\u7ecf\u77e5\u9053\u600e\u4e48\u505a\u4e86..\n\n\u4e3a\u4e86\u6e05\u695a\uff0c\u518d\u4ee4 \n\n$b_1, b_2, \\cdots,b_{siz_b}$ \u662f\u5de6\u5b50\u7684\uff0c $c_1, c_2, \\cdots,c_{siz_c}$ \u662f\u53f3\u5b50\u7684\uff0c$d$ \u662f\u8fd9\u4e2a\u70b9\u672c\u8eab\u7684\u503c\u3002\u90a3\u4e48\u53ef\u4ee5\u5316\u7b80\u6210\u7b80\u5355\u6e05\u695a\u5bf9\u79f0\u7684\u5f62\u5f0f\uff1a\n\n$=(siz_c+1)\\sum\\limits_{i=1}^{siz_b}i\\cdot b_i+d(siz_b+1)(siz_c+1)+(siz_b+1)\\sum\\limits_{i=1}^{siz_c}(siz_c-i+1)c_i$\n\n\u4f60\u53ea\u9700\u8981\u6bcf\u4e2a\u70b9\u518d\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a\n\n$ls=\\sum\\limits_{i=1}^{siz}i\\cdot a_i$ \u548c $rs=\\sum\\limits_{i=1}^{siz}(siz - i +1)a_i$ \n\n\u5c31\u53ef\u4ee5\u4ece\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u5f97\u5230\u81ea\u5df1\u7684\u503c\n\n\u8fd9\u4e24\u4e2a\u4e1c\u897f\u7ef4\u62a4\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684..\u5177\u4f53\u7684\u8bdd\u5c31\u662f\u518d\u7ef4\u62a4\u4e00\u4e2a $s$ \u4e3a\u5b50\u6811\u91cc\u6240\u6709\u6570\u7684\u548c\u7136\u540e\u4ee4 $b,c$ \u662f\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\uff0c\u90a3\u4e48\u6709\n\n$ls = ls_b+d\\cdot(siz_b+1)+ls_c+s_c (siz_b+1)$\n\n\u548c\n\n$rs=rs_c+d\\cdot(siz_c+1)+rs_b+s_b(siz_c+1)$ \n\n\u5c31\u8fd9\u6837\u7ef4\u62a4\n\n\u4ee5\u4e0a\u662f\u5982\u4f55\u7528\u5de6\u53f3\u513f\u5b50\u7684\u4fe1\u606f\u5f97\u5230\u81ea\u5df1\uff0c\u518d\u6765\u8003\u8651\u94fe\u52a0\u7684\u95ee\u9898\n\n\u4e00\u6761\u94fe\u52a0\u4e0a\u4e00\u4e2a\u6570 $x$ \uff0c\u90a3\u4e48\u4f1a\u5982\u4f55\u5f71\u54cd\u6211\u4eec\u7ef4\u62a4\u7684\u503c\uff1f\n\n- \u5bf9\u4e8e $s$\uff1a$s = s + siz\\cdot x$\n- \u5bf9\u4e8e $ls$\uff1a$ls = ls + \\sum\\limits_{i=1}^{siz}i \\cdot x = ls + \\frac{siz(siz+1)}{2}\\cdot x$\n- \u5bf9\u4e8e $rs$\uff1a\u548c ls \u4e00\u6837 $rs = rs+\\frac{siz(siz+1)}{2}\\cdot x$\n- \u5bf9\u4e8e\u6700\u540e\u7684\u7b54\u6848 $S$\uff1a$S = S + \\sum\\limits_{i=1}^{siz} i \\cdot (siz - i +1)\\cdot x$ \u901a\u8fc7\u7b80\u5355\u8ba1\u7b97\u53ef\u5f97 $S= S+\\frac{siz(siz+1)(siz+2)}{6}\\cdot x$\n- \u5bf9\u4e8e\u81ea\u5df1\u7684\u503c\uff1a\u76f4\u63a5\u52a0\u4e0a $x$ \uff08\u5e9f\u8bdd\uff09\n\n\u7136\u540e LCT \u677f\u5b50\u5957\u4e00\u5957\u5c31\u505a\u5b8c\u4e86\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n- \u7ffb\u8f6c\u7684\u65f6\u5019\u9700\u8981 swap(ls, rs)\n- \u4e24\u4e2a\u70b9\u4e4b\u95f4\u662f\u8054\u901a\u7684\u65f6\u5019\u624d\u6267\u884c\u94fe\u52a0\u64cd\u4f5c\uff08\u5751\u6b7b\u6211\u4e86\uff09\n\n### Code\n\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://acfunction.github.io/2019/02/21/BZOJ3091/)\n\n",
        "postTime": 1550760583,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4842 \u3010\u57ce\u5e02\u65c5\u884c\u3011"
    },
    {
        "content": "[$$\\large{\\texttt{My Blog}}$$](https://yzxoi.top/archives/1470)\n\n(\u535a\u5ba2\u98df\u7528\u66f4\u4f73\uff0c~~\u6bd5\u7adf\u6d1b\u8c37\u7684Latex\u6709\u70b9\u602a~~)\n## Description\n> [\u9898\u76ee\u94fe\u63a5Luogu](https://www.luogu.com.cn/problem/P4842) [darkbzoj](https://darkbzoj.tk/problem/3091)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u68ee\u6797\uff0c\u521d\u59cb\u5f62\u6001\u662f\u4e00\u68f5\u4ee5 $1$ \u4e3a\u6839\u7684\u6811\uff0c\u8981\u6c42\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002\n\n1. \u8fde\u63a5 $x,y$\n2. \u65ad\u5f00 $x,y$\n3. $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u6743\u503c\u52a0\u4e0a $d$\n4. \u6c42\u5728 $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u4efb\u9009 $2$ \u4e2a\u70b9\u4e4b\u95f4\u8def\u5f84\u4e0a\u70b9\u7684\u6743\u503c\u548c\u7684\u671f\u671b\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c\u6ee1\u8db3 $1<=N<=50,000;1<=M<=50,000;1<=a_i<=10^6;1<=D<=100;1<=U,V<=N$\u3002\n\n## Solution\n\u5bf9\u4e8e\u6709 $Link$ \u4e0e $Cut$ \u7684\u52a8\u6001\u6811\u95ee\u9898\uff0c\u8003\u8651\u4f7f\u7528 $LCT$\u3002\n\n\u8bbe\u8fd9\u6761\u8def\u5f84\u662f $a_1,a_2,a_3,\\dots,a_{sz}$\uff0c\u5176\u4e2d $sz$ \u662f\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u671f\u671b\uff0c\u6211\u4eec\u8003\u8651\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u8ba1\u7b97\u51e0\u6b21\u3002\n\n\u8def\u5f84\u4e0a\u7684\u7b2c $i$ \u4e2a\u70b9\u6743\u503c\u4e3a $a_i$\uff0c\u663e\u7136\u5f53$1\\leq l\\leq i,i\\leq r \\leq sz$\u65f6\u4f1a\u88ab\u8ba1\u7b97\u5230\u3002\uff08$l,r$\u8868\u793a\u8def\u5f84\u4e0a\u9009\u62e9\u7684\u4e24\u4e2a\u70b9\uff09\n\n\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4f1a\u88ab\u8ba1\u7b97\u5230 $i\\times (sz-i+1)$ \u6b21\uff0c\u6240\u4ee5\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f $i\\times (sz-i+1)\\times a_i$\u3002\n\n\u6545\u6613\u77e5\u671f\u671b\u503c\u5c31\u662f\n\n$$\\frac{\\sum\\limits_{i=1}^{sz}i\\times (sz-i+1)\\times a_i}{C_{sz+1}^2}$$\n\n**Q:\u4e3a\u4ec0\u4e48\u662f $C_{sz+1}^2$ \u800c\u4e0d\u662f $C_{sz}^2$ \u5462\uff1f**\n\n**A:\u56e0\u4e3a\u4efb\u9009\u4e24\u4e2a\u70b9\u53ef\u4ee5\u662f\u76f8\u540c\u3002**\n\n\u7136\u540e\u8ba9\u6211\u4eec\u6765\u8003\u8651\u7ef4\u62a4\u8fd9\u4e2a~~\u53c8\u81ed\u53c8\u957f~~\u7684\u7b54\u6848\u3002\n\n\u9996\u5148\u8003\u8651\u5206\u6bcd $C_{sz+1}^2$\uff0c\u8fd9\u4e2a\u7279\u522b\u597d\u7ef4\u62a4\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u4e0b\u6bcf\u4e2a\u70b9\u7684 $sz$ \u5373\u53ef\uff0c\u6700\u540e $split$ \u4e0b\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5206\u5b50\u5982\u4f55\u7ef4\u62a4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u4f55\u4ece\u5de6\u5b50\u6811\u4e0e\u53f3\u5b50\u6811\u6765\u5f97\u5230\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u6211\u4eec\u8bbe\u5de6\u5b50\u6811\u7684\u8def\u5f84\u662f $a_1,a_2,\\dots,a_{mid-1}$\uff0c\u8def\u5f84\u957f\u5ea6\u662f $mid-1$\u3002\n\n\u7136\u540e\uff0c\u5f53\u524d\u70b9\u7684\u6743\u503c\u662f $a_{mid}$\u3002\n\n\u540c\u7406\uff0c\u53f3\u5b50\u6811\u7684\u8def\u5f84\u662f $a_{mid+1},a_{mid+2},\\dots,a_{sz}$\uff0c\u8def\u5f84\u957f\u5ea6\u662f $sz-mid$\n\n\u90a3\u4e48\uff0c\u5f53\u524d\u70b9\u7684\u5e94\u5f97\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^{sz}i\\times(sz-i+1)\\times a_i$\n\n\u5de6\u5b50\u6811\u7684\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^{mid-1}i\\times(mid-i)\\times a_i$\u5f53\u524d\u70b9\u7684\u8d21\u732e\u662f $a_{mid}\\times mid\\times (sz-mid+1)$\n\n\u53f3\u5b50\u6811\u7684\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=mid+1}^{sz-mid}(i-mid)\\times (sz-i+1)\\times a_i$\n\n\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u628a\u5f53\u524d\u70b9\u5e94\u5f97\u7684\u7b54\u6848\u62c6\u5206\u4e0b\uff1a\n\n$$\\sum\\limits_{i=1}^{mid-1}i\\times (sz-i+1)\\times a_i + a_{mid}\\times mid\\times (sz-mid+1) \\sum\\limits_{i=mid+1}^{sz-mid}i\\times (sz-i+1)\\times a_i$$\n\n\u7136\u540e\u5c06\u5176\u4e0e\u5de6\u53f3\u5b50\u6811\u7684\u7b54\u6848\u4f5c\u5dee\u53ef\u5f97\uff1a\n\n$$\\sum\\limits_{i=1}^{mid-1}i\\times (sz-mid+1)\\times a_i + a_{mid}\\times mid\\times (sz-mid+1)+\\sum\\limits_{i=mid+1}^{sz-mid} mid\\times (sz-i+1)\\times a_i$$\n\n\u6b64\u65f6\uff0c\u4e3a\u4e86\u66f4\u4f73\u7684\u89c2\u8d4f\u6548\u679c\uff0c\u6211\u4eec\u91cd\u65b0\u8bbe\u4e00\u4e0b\u3002\n\n\u8bbe\u5de6\u5b50\u6811\u7684\u8def\u5f84\u662f $b_1,b_2,\\dots,b_{sz_b}$\uff0c\u5176\u4e2d $sz_b$ \u8868\u793a\u5de6\u5b50\u6811\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u8bbe\u53f3\u5b50\u6811\u7684\u8def\u5f84\u662f $c_1,c_2,\\dots,c_{sz_c}$\uff0c\u5176\u4e2d $sz_c$ \u8868\u793a\u53f3\u5b50\u6811\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u6700\u540e\uff0c\u8bbe\u6211\u4eec\u8fd9\u4e2a\u70b9\u7684\u6743\u503c\u4e3a $a$\u3002\n\n\u90a3\u4e48\u5176\u5b9e\u5dee\u503c\u5c31\u662f\uff1a\n\n$$(sz_c+1)\\times \\sum\\limits_{i=1}^{sz_b}b_i\\times i + a\\times (sz_b+1)\\times (sz_c+1)+ (sz_b+1)\\times \\sum\\limits_{i=1}^{sz_c} (sz_c-i+1)\\times c_i$$\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e0b $lsum=\\sum\\limits_{i=1}^{sz}i\\times a_i,rsum=\\sum\\limits_{i=1}^{sz} (sz-i+1)\\times a_i$ \u4ee5\u5feb\u901f $pushup$ \u7b54\u6848\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u5982\u4f55\u7ef4\u62a4 $lsum$ \u4e0e $rsum$ \u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c(\u5176\u4e2d $s$ \u8868\u793a\u6240\u6709 $a_i$ \u7684\u548c)\n\n$$lsum[x]=lsum[ls]+v[x]\\times (sz[ls]+1)+lsum[rs]+s[rc]\\times (sz[ls]+1)$$\n\n$$rsum[x]=rsum[rs]+v[x]\\times (sz[rs]+1)+rsum[ls]+s[ls]\\times (sz[rs]+1)$$\n\n\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u601d\u8def\u5c31\u662f\u4ece\u5de6\u53f3\u513f\u5b50\u7ee7\u627f\u5e76\u6ce8\u610f\u524d\u9762\u7684\u7cfb\u6570\u5373\u53ef\u3002\n\n\u597d\u4e86\uff0c\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u5982\u4f55\u4ece\u5de6\u53f3\u513f\u5b50\u5f97\u5230\u81ea\u5df1\uff0c\u73b0\u5728\u6211\u4eec\u8981\u8003\u8651\u64cd\u4f5c $3$ \u5e26\u6765\u7684\u5f71\u54cd\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u9605\u8bfb\uff0c\u8fd9\u91cc\u518d\u6b21\u7ed9\u51fa\u64cd\u4f5c $3$ \u7684\u6982\u62ec\uff1a\u628a$x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u6743\u503c\u52a0\u4e0a $d$\u3002\n\n\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\uff1a\n\n- $s+=d\\times sz$\n- $lsum+=\\sum\\limits_{i=1}^{sz}i\\times d$ \u5373 $lsum+=\\frac{sz\\times (sz+1)}{2}\\times d$\n- $rsum$ \u4e0e $lsum$ \u540c\u7406\uff0c$rsum+=\\frac{sz\\times(sz+1)}{2}\\times d$\n- $ans+=\\sum\\limits_{i=1}^{sz}i\\times (sz-i+1)\\times d$ \u5373 $ans+=\\frac{sz\\times (sz+1)\\times (sz+2)}{6}$\n\n\u7136\u540e\u5c31\u5b8c\u4e8b\u4e86\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define LL long long \nusing namespace std;\ninline int read(){int res=0,f=1;char ch=getchar();while(!isdigit(ch)) f=ch=='-'?-1:f,ch=getchar();while(isdigit(ch)) res=(res<<3)+(res<<1)+ch-'0',ch=getchar();return res*f;}\ninline void write(LL x){if(x<0) putchar('-'),x=-x;if(x<10) putchar(x+'0');else write(x/10),putchar(x%10+'0');}\nstruct node{bool tag;LL v,s,ch[2],lsum,rsum,ans,add,sz,fa;}tr[50010];\nint n,m,stk[50010],top,op,x,y;\nLL a[50010],d,Ans,Div,g;\ninline bool isroot(int x){return (!x)||(tr[tr[x].fa].ch[0]!=x&&tr[tr[x].fa].ch[1]!=x);}\ninline void flip(int x){swap(tr[x].lsum,tr[x].rsum),swap(tr[x].ch[0],tr[x].ch[1]),tr[x].tag^=1;}\ninline void add(int x,int v){\n\ttr[x].v+=v,tr[x].add+=v,tr[x].s+=tr[x].sz*v;\n\ttr[x].lsum+=tr[x].sz*(tr[x].sz+1)*v>>1;\n\ttr[x].rsum+=tr[x].sz*(tr[x].sz+1)*v>>1;\n\ttr[x].ans+=tr[x].sz*(tr[x].sz+1)*(tr[x].sz+2)/6*v;\n}\ninline void pushdown(int x){\n\tif(tr[x].tag){if(tr[x].ch[0]) flip(tr[x].ch[0]);if(tr[x].ch[1]) flip(tr[x].ch[1]);tr[x].tag=0;}\n\tif(tr[x].add){if(tr[x].ch[0]) add(tr[x].ch[0],tr[x].add);if(tr[x].ch[1]) add(tr[x].ch[1],tr[x].add);tr[x].add=0;}\n}\ninline void pushup(int x){\n\ttr[x].s=tr[tr[x].ch[0]].s+tr[tr[x].ch[1]].s+tr[x].v;\n\ttr[x].sz=tr[tr[x].ch[0]].sz+tr[tr[x].ch[1]].sz+1;\n\ttr[x].lsum=tr[tr[x].ch[0]].lsum+tr[x].v*(tr[tr[x].ch[0]].sz+1)+tr[tr[x].ch[1]].lsum+tr[tr[x].ch[1]].s*(tr[tr[x].ch[0]].sz+1);\n\ttr[x].rsum=tr[tr[x].ch[1]].rsum+tr[x].v*(tr[tr[x].ch[1]].sz+1)+tr[tr[x].ch[0]].rsum+tr[tr[x].ch[0]].s*(tr[tr[x].ch[1]].sz+1);\n\ttr[x].ans=tr[tr[x].ch[0]].ans+tr[tr[x].ch[1]].ans+tr[x].v*(tr[tr[x].ch[0]].sz+1)*(tr[tr[x].ch[1]].sz+1)+tr[tr[x].ch[0]].lsum*(tr[tr[x].ch[1]].sz+1)+tr[tr[x].ch[1]].rsum*(tr[tr[x].ch[0]].sz+1);\n}\ninline void rotate(int x){\n\tint y=tr[x].fa,z=tr[y].fa,k=tr[y].ch[1]==x,v=tr[x].ch[!k];\n\tif(!isroot(y)) tr[z].ch[tr[z].ch[1]==y]=x;\n\ttr[x].ch[!k]=y,tr[y].ch[k]=v;\n\tif(v) tr[v].fa=y;\n\ttr[y].fa=x,tr[x].fa=z;\n\tpushup(y),pushup(x);\n}\ninline void splay(int x){\n\tint y=x,z=0;top=0;stk[++top]=y;\n\twhile(!isroot(y)) stk[++top]=y=tr[y].fa;\n\twhile(top) pushdown(stk[top--]);\n\twhile(!isroot(x)){\n\t\ty=tr[x].fa,z=tr[y].fa;\n\t\tif(!isroot(y)) rotate((tr[y].ch[0]==x)^(tr[z].ch[0]==y)?x:y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\ninline void access(int x){for(int y=0;x;x=tr[y=x].fa) splay(x),tr[x].ch[1]=y,pushup(x);}\ninline void makeroot(int x){access(x),splay(x),flip(x);}\ninline int findroot(int x){access(x),splay(x);while(tr[x].ch[0]) x=tr[x].ch[0];return x;}\ninline void split(int x,int y){makeroot(x),access(y),splay(x);}\ninline void link(int x,int y){makeroot(x);makeroot(y);tr[y].fa=x;}\ninline void cut(int x,int y){split(x,y);tr[y].fa=tr[x].ch[1]=0;}\ninline LL gcd(LL a,LL b){return !b?a:gcd(b,a%b);}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) tr[i].lsum=tr[i].rsum=tr[i].v=tr[i].s=tr[i].ans=a[i]=read(),tr[i].sz=1;\n\tfor(int x,y,i=1;i<n;i++) x=read(),y=read(),link(x,y);\n\tfor(int i=1;i<=m;i++){\n\t\top=read(),x=read(),y=read();\n\t\tif(op==1){if(findroot(x)==findroot(y)) cut(x,y);}\n\t\telse if(op==2){if(findroot(x)!=findroot(y)) link(x,y);}\n\t\telse if(op==3){d=read();if(findroot(x)==findroot(y)) split(x,y),add(x,d);}\n\t\telse if(op==4){if(findroot(x)!=findroot(y)){puts(\"-1\");continue ;}split(x,y),Ans=tr[x].ans,Div=tr[x].sz*(tr[x].sz+1)>>1,g=gcd(Ans,Div),write(Ans/g),putchar('/'),write(Div/g),putchar('\\n');} \n\t}\n}\n```",
        "postTime": 1597325982,
        "uid": 37103,
        "name": "yzxoi",
        "ccfLevel": 7,
        "title": "bzoj 3091 & Luogu P4842 \u57ce\u5e02\u65c5\u884c \u9898\u89e3"
    }
]