[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u4e09\u5408\u4e00\u7684\u9898\u76ee\uff0c\u6211\u4eec\u5c06\u6570\u636e\u70b9 1~6\uff0c7~8\uff0c9~10 \u5206\u522b\u5904\u7406\u3002\n\n### \u6570\u636e\u70b9 1~6\n\n\u4e00\u4e2a\u7ecf\u5178\u7684 AC \u81ea\u52a8\u673a\u4e0a dp\u3002~~\uff08BJOI \u4f20\u7edf\u827a\u80fd\uff09~~\n\n\u8003\u8651\u5230\u6253\u9519\u5b57\u7b26\u8fd9\u4e00\u6270\u52a8\u7684\u7279\u6b8a\u6027\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u6b63\u5411\u505a\u51b3\u7b56\uff0c\u4f46\u662f\u53ef\u4ee5\u5012\u5e8f\u51b3\u7b56\uff0c\u8fd9\u6837\u5c31\u80fd\u628a\u6270\u52a8\u7684\u201c\u6700\u574f\u201d\u4e0e\u6b63\u5e38\u51b3\u7b56\u7684\u201c\u6700\u597d\u201d\u4e00\u8d77\u8f6c\u79fb\u3002\n\n\u5148\u5c06\u4e32\u5efa\u6210 AC \u81ea\u52a8\u673a\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u5728\u7ed3\u675f\u8282\u70b9\u6dfb\u52a0\u4ef7\u503c\uff0c\u6700\u540e\u6bcf\u4e2a\u8282\u70b9\u7684\u4ef7\u503c $val$ \u5b9a\u4e49\u4e3a\u5176\u5728 fail \u6811\u4e0a\u5230\u6839\u7684\u4ef7\u503c\u548c\u3002\n\n\u4ee4 $dp_{i,j,k}$ \u8868\u793a\u5728\u586b\u540e $i$ \u4e2a\u5b57\u7b26\uff0c\u8d77\u59cb\u5728\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $j$\uff0c\u5728\u4e4b\u524d\u5df2\u7ecf\u6253\u9519\u4e86 $k$ \u6b21\u65f6\uff0c\u80fd\u591f\u5728\u540e\u9762\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5206\u7c7b\u8ba8\u8bba\u662f\u5426\u6253\u9519\uff0c\u5982\u679c\u6253\u9519\u5219\u53d6\u6700\u574f\u60c5\u51b5\uff0c\u5426\u5219\u53d6\u6700\u597d\u60c5\u51b5\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u9009\u62e9\u6700\u574f\u60c5\u51b5\u3002\u56e0\u6b64\u6709\u8f6c\u79fb\uff1a\n\n$$\ndp_{i,j,k} = \\min \\{ \\max_{x \\in to_j} \\{dp_{i-1,x,k}\\}, \\min_{x \\in  to_j}\\{ dp_{i-1,x,k+1}\\}\\}+val_j\n$$\n\n\u76f4\u63a5\u505a\uff0c\u590d\u6742\u5ea6\u4e3a $O(mk|\\Sigma|\\sum|S|)$\u3002\n\n### \u6570\u636e\u70b9 7~8\n\n\u6ca1\u6709\u6270\u52a8\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u7b80\u5316\u6210\u4e00\u4e2a\u66f4\u7b80\u5355\u7684 dp\u3002\n\n\u5148\u540c\u6837\u5efa\u51fa\u81ea\u52a8\u673a\uff0c\u5e76\u5f97\u51fa\u8282\u70b9\u7684\u4ef7\u503c\u3002\n\n\u4ee4 $dp_{i,j}$ \u4e3a\u586b\u4e86 $i$ \u4e2a\u5b57\u7b26\uff0c\u5f53\u524d\u5728\u81ea\u52a8\u673a\u4e0a\u7684\u8282\u70b9 $j$ \u65f6\u5df2\u7ecf\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\u6709\u8f6c\u79fb\uff1a\n\n$$\ndp_{i,j} = \\max_{j \\in to_x} \\{ dp_{i-1,x}\\}+val_j\n$$\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u8f6c\u79fb\u5f0f\u5b50\u662f\u7b80\u6d01\u7684 $(max,+)$ \u9012\u63a8\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c [\u3010NOI2020\u3011\u7f8e\u98df\u5bb6](https://www.luogu.com.cn/problem/P6772) \u7684\u65b9\u6cd5\uff0c\u7528\u500d\u589e\u6216\u8005\u77e9\u9635\u7684\u5f62\u5f0f\u52a0\u901f dp\u3002\n\n### \u6570\u636e\u70b9 9~10\n\n\u7565\u663e\u7384\u5b66\u7684\u90e8\u5206\u3002\n\n\u89c2\u5bdf\u5230\u6270\u52a8\u6700\u591a $5$ \u6b21\uff0c$\\sum|S|$ \u53ea\u6709 $50$\uff0c\u800c $m$ \u9ad8\u8fbe $10^9$\u3002\u8fd9\u8bf4\u660e\u5728\u4e24\u6b21\u6270\u52a8\u4e4b\u95f4\u4f1a\u9694\u6709\u5f88\u957f\u7684\u4e00\u6bb5\u3002\u5bf9\u4e8e\u8fd9\u4e00\u6bb5\uff0c\u5176\u51b3\u7b56\u4e0d\u53d7\u6270\u52a8\u5f71\u54cd\u3002\n\n\u5982\u679c\u8fd9\u4e00\u6bb5\u7684\u957f\u5ea6\u662f\u6570\u500d\u4e8e\u81ea\u52a8\u673a\u8282\u70b9\u4e2a\u6570\u7684\uff0c\u5219\u53ef\u4ee5\u9884\u89c1\u5230\uff0c\u6700\u4f18\u7684\u51b3\u7b56\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u4e00\u4e2a\u73af\uff0c\u5728\u73af\u4e0a\u4e0d\u65ad\u5730\u8d70\uff0c\u83b7\u5f97\u73af\u4e0a\u7684\u4ef7\u503c\u3002\n\n\u5728\u4e00\u6b21\u6270\u52a8\u4e4b\u540e\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u79cd\u60c5\u51b5\uff0c\u6bd4\u5982\u8d70\u4e0a\u53e6\u4e00\u4e2a\u73af\uff0c\u6216\u8005\u8d70\u4e00\u6761\u8def\u5f84\u7b49\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e5f\u90fd\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e4b\u524d\u51b3\u7b56\u7684\u8fc7\u7a0b\u3002\n\n\u5982\u679c\u8d70\u4e0a\u7684\u8def\u5f84\u957f\u5ea6\u662f\u81ea\u52a8\u673a\u8282\u70b9\u4e2a\u6570\u7684\u6570\u500d\uff0c\u90a3\u5fc5\u7136\u4e0d\u5982\u8d70\u4e00\u4e2a\u73af\u6709\u610f\u4e49\u3002\u6240\u4ee5\u8d70\u8def\u5f84\u53ea\u4f1a\u662f\u6700\u540e\u51e0\u6b65\u7684\u51b3\u7b56\u3002\n\n\u800c\u5bf9\u4e8e\u4e0d\u505c\u8d70\u4e00\u4e2a\u73af\u7684\u60c5\u51b5\uff0c\u5728\u5f00\u59cb\u5faa\u73af\u540e\u5728\u7b2c\u51e0\u6b21\u5faa\u73af\u6270\u52a8\u90fd\u662f\u7b49\u4ef7\u7684\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u58f0\u660e\uff1a\u5b58\u5728\u4e00\u79cd\u7b26\u5408\u9898\u610f\u7684\u6700\u4f18\u60c5\u51b5\uff0c\u4f7f\u5f97\u6240\u6709\u6270\u52a8\u90fd\u96c6\u4e2d\u5728\u672b\u5c3e\uff0c\u4e14\u672b\u5c3e\u8fd9\u6bb5\u7684\u957f\u5ea6\u662f $O(k\\sum|S|)$ \u7ea7\u522b\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u524d\u9762\u7684\u90e8\u5206\u89c6\u4f5c\u6ca1\u6709\u6270\u52a8\uff0c\u6309\u6570\u636e\u70b9 7~8 \u7684\u65b9\u6cd5\u5904\u7406\uff0c\u6700\u540e\u9009\u62e9\u4e00\u4e2a\u672b\u5c3e\u957f\u5ea6\uff08\u7406\u8bba\u4e0a\u9700\u8981\u662f $k\\sum|S|$ \u7684\u6570\u500d\u4ee5\u4e0a\uff0c\u6211\u9009\u62e9\u4e86 $2000$\uff09\u6309\u6570\u636e\u70b9 1~6 \u7684\u65b9\u6cd5\u5904\u7406\uff0c\u7136\u540e\u62fc\u8d77\u6765\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u53e6\u5916\u636e\u8bf4\u5b98\u65b9\u9898\u89e3\u662f\u5229\u7528 $a_i=1$ \u6027\u8d28\u7684\u4e00\u4e2a\u6240\u8c13\u201c\u6700\u5c0f\u6bd4\u7387\u73af\u201d\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u4f5c\u8005\u5b9e\u5728\u627e\u4e0d\u5230\u76f8\u5173\u8d44\u6e90\uff0c\u53ea\u80fd\u4e0d\u4e86\u4e86\u4e4b\u4e86\u3002\n\n### \u4ee3\u7801\n\n```c++\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N=505,N2=205;\nchar s[N][N];\nint val[N],son[N][26],fail[N],ndc=1;\nint n,m,k,que[N],h,t;\ninline void ins_AC(int id,int v)\n{\n\tint i,len=strlen(s[id]+1),now=1;\n\tfor(i=1;i<=len;i++)\n\t{\n\t\tint c=s[id][i]-'a';\n\t\tif(!son[now][c]) son[now][c]=++ndc;\n\t\tnow=son[now][c];\n\t}\n\tval[now]+=v;\n}\nvoid build_AC()\n{\n\tfor(int i=0;i<26;i++)\n\t{\n\t\tif(son[1][i]) fail[son[1][i]]=1,que[t++]=son[1][i];\n\t\telse son[1][i]=1;\n\t}\n\twhile(h<t)\n\t{\n\t\tint now=que[h++];\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tif(son[now][i]) fail[son[now][i]]=son[fail[now]][i],que[t++]=son[now][i];\n\t\t\telse son[now][i]=son[fail[now]][i];\n\t\t}\n\t}\n\tfor(int i=0;i<t;i++)\n\t{\n\t\tint now=que[i];\n\t\tval[now]+=val[fail[now]];\n\t}\n}\nint dp[N*5][N][6];\nvoid solve1()\n{\n\tint i,j,tk,x;\n\tfor(i=1;i<=ndc;i++)\n\t\tfor(j=0;j<=k;j++)\n\t\t\tdp[0][i][j]=val[i];\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tfor(j=1;j<=ndc;j++)\n\t\t{\n\t\t\tfor(tk=0;tk<=k;tk++)\n\t\t\t{\n\t\t\t\tint mx=0,mn=1e9;\n\t\t\t\tfor(x=0;x<26;x++) mx=max(mx,dp[i-1][son[j][x]][tk]);\n\t\t\t\tif(tk<k) {for(x=0;x<26;x++) mn=min(mn,dp[i-1][son[j][x]][tk+1]);}\n\t\t\t\tdp[i][j][tk]=min(mx,mn)+val[j];\n\t\t\t}\n\t\t}\n\t}\n}\nlong long dp2[35][N2][N2],tdp[N2],tdp2[N2];\nvoid solve2()\n{\n\tint i,j,tk,x;\n\tfor(i=1;i<=ndc;i++) \n\t{\n\t\tfor(j=1;j<=ndc;j++) dp2[0][i][j]=-1;\n\t\tfor(j=0;j<26;j++) dp2[0][i][son[i][j]]=val[i]+val[son[i][j]];\n\t}\n\tfor(i=1;(1<<i)<=m;i++)\n\t{\n\t\tfor(j=1;j<=ndc;j++)\n\t\t{\n\t\t\tfor(tk=1;tk<=ndc;tk++)\n\t\t\t{\n\t\t\t\tlong long mx=-1;\n\t\t\t\tfor(x=1;x<=ndc;x++) if(dp2[i-1][j][x]!=-1&&dp2[i-1][x][tk]!=-1) mx=max(mx,dp2[i-1][j][x]+dp2[i-1][x][tk]-val[x]);\n\t\t\t\tdp2[i][j][tk]=mx;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++)\n    {\n    \tint v;\n    \tscanf(\"%s%d\",s[i]+1,&v);\n    \tins_AC(i,v);\n    }\n    build_AC();\n    if(m<=500)\n    {\n    \tsolve1();\n    \tprintf(\"%d\",dp[m][1][0]);\n    }\n    else if(k==0)\n    {\n    \tsolve2();\n    \tint i,j,tk;\n    \tfor(i=1;i<=ndc;i++) tdp[i]=tdp2[i]=-1;\n    \ttdp[1]=0;\n    \tfor(i=0;(1<<i)<=m;i++)\n    \t{\n    \t\tif(!((1<<i)&m)) continue;\n    \t\tfor(j=1;j<=ndc;j++)\n    \t\t{\n    \t\t\tif(tdp[j]==-1) continue;\n    \t\t\tfor(tk=1;tk<=ndc;tk++)\n    \t\t\t{\n    \t\t\t\tif(dp2[i][j][tk]==-1) continue;\n    \t\t\t\ttdp2[tk]=max(tdp2[tk],tdp[j]+dp2[i][j][tk]-val[j]);\n    \t\t\t}\n    \t\t}\n    \t\tfor(j=1;j<=ndc;j++) tdp[j]=tdp2[j],tdp2[j]=-1;\n    \t}\n    \tlong long ans=0;\n    \tfor(i=1;i<=ndc;i++) ans=max(ans,tdp[i]);\n    \tprintf(\"%lld\",ans);\n    }\n    else\n    {\n    \tif(m<=2500)\n    \t{\n    \t\tsolve1();\n    \t\tprintf(\"%d\",dp[m][1][0]);\n    \t\treturn 0;\n    \t}\n    \tsolve2();\n    \tint i,j,tk;\n    \tfor(i=1;i<=ndc;i++) tdp[i]=tdp2[i]=-1;\n    \ttdp[1]=0;\n    \tfor(i=0;(1<<i)<=m-2000;i++)\n    \t{\n    \t\tif(!((1<<i)&(m-2000))) continue;\n    \t\tfor(j=1;j<=ndc;j++)\n    \t\t{\n    \t\t\tif(tdp[j]==-1) continue;\n    \t\t\tfor(tk=1;tk<=ndc;tk++)\n    \t\t\t{\n    \t\t\t\tif(dp2[i][j][tk]==-1) continue;\n    \t\t\t\ttdp2[tk]=max(tdp2[tk],tdp[j]+dp2[i][j][tk]-val[j]);\n    \t\t\t}\n    \t\t}\n    \t\tfor(j=1;j<=ndc;j++) tdp[j]=tdp2[j],tdp2[j]=-1;\n    \t}\n    \tm=2000;\n    \tsolve1();\n    \tlong long ans=0;\n    \tfor(i=1;i<=ndc;i++) if(tdp[i]!=-1&&dp[m][i][0]!=-1) ans=max(ans,tdp[i]+dp[m][i][0]-val[i]);\n    \tprintf(\"%lld\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1614061659,
        "uid": 103732,
        "name": "smarthehe",
        "ccfLevel": 9,
        "title": "P6839 [BJOI2016]\u6253\u5b57\u673a \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u634b\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u5b9a\u662f\u6070\u597d\u53d1\u751f $k$ \u6b21\u6253\u9519\u5b57\u7b26\u7684\u4e8b\u60c5\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\u7684 $26$ \u79cd\u65b9\u6848\u4e2d\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u6700\u4f18\u60c5\u51b5\uff0c\u8fd9\u4e2a\u60c5\u51b5\u5c31\u662f\u8fd9\u4e2a\u65f6\u523b\u60f3\u6253\u51fa\u7684\u5b57\u7b26\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4efb\u4f55\u65f6\u523b\uff0c\u4e0b\u4e00\u6b65\u7684\u6700\u4f18\u5b57\u7b26\u4e00\u5b9a\u662f\u5df2\u7ecf\u786e\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u7acbAC\u81ea\u52a8\u673a\uff0c\u6bcf\u4e2a\u5355\u8bcd\u7684\u7ec8\u6b62\u8282\u70b9\u62e5\u6709\u4e00\u4e2a\u5206\u6570\uff0c\u7136\u540e\u8003\u8651\u5728\u4e0a\u9762\u505a\u4e00\u4e9b\u4e8b\u60c5\u3002\n\n\u5bf9\u4e8e $\\text{Subtask }1\\sim 6$ \u6211\u4eec\u53ef\u4ee5 DP\uff0c\u8bbe $F[i][j][k]$ \u8868\u793a\u5f53\u524d\u5728 $i$ \u53f7\u8282\u70b9\uff0c\u6587\u7ae0\u957f\u5ea6\u5269\u4f59 $j$\uff0c\u6700\u591a\u8fd8\u80fd\u72af $k$ \u6b21\u9519\u8bef\u7684\u6700\u5927\u5f97\u5206\u3002\n\n\u90a3\u4e48\u600e\u4e48\u9012\u63a8\u5462\uff1f\u5047\u8bbe\u4ed6\u8fd9\u6b21\u6ca1\u72af\u9519\u8bef\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u9009 $26$ \u79cd\u60c5\u51b5\u91cc\u83b7\u5229\u6700\u5927\u7684\u90a3\u4e2a $F[p][j-1][k]$\u3002\uff08\u6ce8\uff1a$p$ \u662f\u6700\u4f18\u60c5\u51b5\uff09\n\n\u4f46\u662f\u4ed6\u8fd8\u6709\u53ef\u80fd\u72af\u9519\uff0c\u6240\u4ee5\u8981\u548c\u53e6\u5916 $25$ \u79cd\u60c5\u51b5\u53d6\u4e2a $\\min F[p][j-1][k-1]$\u3002\uff08\u6ce8\uff1a $p$ \u4e0d\u662f\u6700\u4f18\u60c5\u51b5\uff09\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $60$ \u5206\uff0c\u53ef\u89c1\u518d\u96be\u7684\u9898\u76ee\u53ea\u9700\u8981\u8ba4\u771f\u63a8\u5bfc\u3002\n\n\u5bf9\u4e8e $\\text{Subtask }7\\sim 8$\uff0c\u7279\u6b8a\u70b9\u5728\u4e8e $k=0$\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u4e0d\u4f1a\u6709\u72af\u9519\u7684\u60c5\u51b5\u51fa\u73b0\u4e86\u60f3\u6253\u4ec0\u4e48\u5c31\u6253\u4ec0\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7c7b\u4f3c\u77e9\u9635\u4e58\u6cd5\u5feb\u901f\u5e42\u7684\u4e1c\u897f\u5feb\u901f\u6c42\u89e3\u3002\n\n\u5bf9\u4e8e $\\text{Subtask }9\\sim 10$\uff0c\u6709\u5f88\u591a\u79cd\u505a\u6cd5\uff0c\u5b98\u65b9\u7ed9\u7684\u662f\u5229\u7528 $a_i \\leq 1$ \u8fd9\u70b9\u6765\u627e\u51fa\u6700\u4f18\u6bd4\u4f8b\u73af\uff0c\u7136\u540e\u4e00\u76f4\u5728\u73af\u4e0a\u8d70\u8fd9\u6837\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream> \n#include<cstdio> \n#include<cstring> \n#define N 510 \nusing namespace std; \nchar s[N]; \nint a[110]; \nint ch[N][27],nxt[N],la[N],w[N],cnt; \nvoid addnew(int v) \n{ \n    int now=0; \n    int n=strlen(s),i,j,x; \n    for(i=0;i<n;i++) \n    { \n        x=s[i]-96; \n        if(!ch[now][x]) \n        { \n            cnt++; \n            ch[now][x]=cnt; \n        } \n        now=ch[now][x]; \n    } \n    w[now]+=v; \n} \nint q[N],h,t; \nvoid getnxt() \n{ \n    h=1;t=0; \n    int i,j,x,y; \n    for(i=1;i<=26;i++) \n    if(ch[0][i]) t++,q[t]=ch[0][i]; \n    while(h<=t) \n    { \n        x=q[h];h++; \n        for(i=1;i<=26;i++) \n        { \n            j=ch[x][i]; \n            if(!j) {ch[x][i]=ch[nxt[x]][i];continue;} \n            y=nxt[x]; \n            while(y&&!ch[y][i]) y=nxt[y]; \n            nxt[j]=ch[y][i]; \n            w[j]+=w[nxt[j]]; \n            if(w[nxt[j]]) la[j]=nxt[j]; \n            else la[j]=la[nxt[j]]; \n            t++;q[t]=j; \n        } \n    } \n} \nint f[N][N][6]; \nbool used[N][N][6]; \nint K,m; \nvoid dp(int n,int x,int k) \n{ \n    if(k>K||used[n][x][k]) return; \n    used[n][x][k]=true; \n    f[n][x][k]=w[x]; \n    if(n==m) return; \n    int maxn=-707185547707185547LL,maxb=0; \n    int i,j; \n    for(i=1;i<=26;i++) \n    { \n        dp(n+1,ch[x][i],k); \n        if(k<K) \n        dp(n+1,ch[x][i],k+1); \n        if(f[n+1][ch[x][i]][k]>maxn) \n        { \n            maxn=f[n+1][ch[x][i]][k]; \n            maxb=i; \n        } \n    } \n    maxn=707185547707185547LL; \n    for(i=1;i<=26;i++) \n    { \n        if(i==maxb) maxn=min(maxn,f[n+1][ch[x][i]][k]); \n        else if(k<K) maxn=min(maxn,f[n+1][ch[x][i]][k+1]); \n    } \n    f[n][x][k]+=maxn; \n} \nlong long di[210][210],ret[210][210],tmp[210][210]; \nlong long ans; \nvoid do1(int M,bool chu) \n{ \n    ans=0; \n    int i,j,k; \n    if(chu) \n    { \n        memset(di,0xef,sizeof(di)); \n        for(i=0;i<=cnt;i++) \n        for(j=1;j<=26;j++) \n        di[i][ch[i][j]]=w[ch[i][j]]; \n        for(i=0;i<=cnt;i++) \n        for(j=0;j<=cnt;j++) \n        ret[i][j]=di[i][j]; \n        M--;     \n        while(M) \n        { \n            for(i=0;i<=cnt;i++) \n            for(j=0;j<=cnt;j++) \n            tmp[i][j]=-707185547707185547LL; \n            if(M&1) \n            { \n                for(i=0;i<=cnt;i++) \n                for(k=0;k<=cnt;k++) \n                for(j=0;j<=cnt;j++) \n                tmp[i][j]=max(ret[i][k]+di[k][j],tmp[i][j]); \n                for(i=0;i<=cnt;i++) \n                for(j=0;j<=cnt;j++) \n                ret[i][j]=tmp[i][j]; \n            } \n            for(i=0;i<=cnt;i++) \n            for(j=0;j<=cnt;j++) \n            tmp[i][j]=-707185547707185547LL; \n            for(i=0;i<=cnt;i++) \n            for(k=0;k<=cnt;k++) \n            for(j=0;j<=cnt;j++) \n            tmp[i][j]=max(tmp[i][j],di[i][k]+di[k][j]); \n            for(i=0;i<=cnt;i++) \n            for(j=0;j<=cnt;j++) \n            di[i][j]=tmp[i][j]; \n            M/=2; \n        } \n        memset(di,0xef,sizeof(di)); \n        for(i=0;i<=cnt;i++) \n        for(j=1;j<=26;j++) \n        di[i][ch[i][j]]=w[ch[i][j]]; \n    } \n    else\n    { \n        for(i=0;i<=cnt;i++) \n        for(j=0;j<=cnt;j++) \n        { \n            tmp[i][j]=-707185547707185547LL; \n            for(k=0;k<=cnt;k++) \n            tmp[i][j]=max(ret[i][k]+di[k][j],tmp[i][j]); \n        } \n        for(i=0;i<=cnt;i++) \n        for(j=0;j<=cnt;j++) \n        ret[i][j]=tmp[i][j]; \n    } \n    for(i=0;i<=cnt;i++) \n    ans=max(ans,ret[0][i]); \n} \nvoid do2() \n{ \n    int M=m; \n    int P=M-300,i,j,k; \n    long long ret=0; \n    int st; \n    for(;P<=M-250;P++) \n    { \n        for(i=0;i<=300;i++) \n        for(j=0;j<=cnt;j++) \n        for(k=0;k<=K;k++) \n        used[i][j][k]=false; \n        m=M-P; \n        dp(0,0,0); \n        do1(P,(P==M-300)); \n        ret=max(ret,f[0][0][0]+ans); \n    } \n    printf(\"%lld\",ret+1); \n} \nint main() \n{  \n    int n; \n    scanf(\"%d%d%d\",&n,&m,&K); \n    int i,j; \n    for(i=1;i<=n;i++) \n    { \n        scanf(\"%s%d\",s,&a[i]); \n        addnew(a[i]); \n    } \n    getnxt(); \n    if(m>500&&K==0&&cnt<=200) {do1(m,true);printf(\"%lld\",ans);return 0;} \n    if(m>500&&K!=0&&cnt<=51) {do2();return 0;} \n    dp(0,0,0); \n    printf(\"%d\",f[0][0][0]);\n}\n```",
        "postTime": 1601898507,
        "uid": 349885,
        "name": "HECZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6839 \u3010[BJOI2016]\u6253\u5b57\u673a\u3011"
    }
]