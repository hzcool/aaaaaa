[
    {
        "content": "\u5178\u578b\u7684\u5b57\u5178\u6811\u7edf\u8ba1\u9898\u3002\n\n\u9996\u5148\u662f\u8bfb\u5165\u3002\u8fd9\u9053\u9898\u5168\u90e8\u91c7\u75282\u8fdb\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u67090\u548c1\u4e24\u4e2a\u5b57\u7b26/\u6570\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u4eec\u5f53\u6210\u5b57\u7b26\u7528\u597d\u4e86\u3002\n\n\u7136\u540e\u5efa\u6811\uff0c\u4e5f\u662f\u4e00\u822c\u7684\u5b57\u5178\u6811\u5efa\u6811\u6cd5\uff0c\u53ea\u662f\u628a\u5b57\u6bcd\u6362\u6210\u4e860\u548c1\u800c\u5df2\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bb2\u3002\n\n\u4e00\u8fb9\u5efa\u6811\uff0c\u4e00\u8fb9\u5728\u8fd9\u4e32\u6570\u5217\u4e2d\u8d70\u8fc7\u7684\u8def\u5f84\u4e2d\u7684sum+1\uff0csum\u4ee3\u8868\u6709sum\u4e2a\u5355\u8bcd\uff08\uff1f\uff09\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u3002\n\n\u5f53\u4e00\u4e2a\u5355\u8bcd\uff08\uff1f\uff09\u63d2\u5b8c\u4ee5\u540e\uff0c\u5728\u5f53\u524d\u8282\u70b9\uff08\u5373\u8be5\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\uff09\u7684end\u4e0a+1\uff0cend\u4ee3\u8868\u6709end\u4e2a\u5355\u8bcd\uff08\uff1f\uff09\u5728\u8fd9\u4e2a\u8282\u70b9\u7ec8\u7ed3\u3002\n\n\u6ce8\u610f\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u80fd\u4f1a\u6709\u591a\u6761\u4fe1\u606f\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u7ec8\u7ed3\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684end\u662f\u6570\u5b57\u800c\u4e0d\u662f\u5e03\u5c14\u578b\u3002\n\n\u7136\u540e\u8bfb\u5165\u5f85\u67e5\u8be2\u7684\u4fe1\u606f\uff0c\u5c31\u50cf\u666e\u901a\u5b57\u5178\u6811\u67e5\u8be2\u4e00\u6837\u5730\u5f80\u4e0b\u8d70\uff0c\u4e00\u8fb9\u8d70\u4e00\u8fb9\u628a\u6cbf\u9014\u7684end\u503c\u52a0\u8d77\u6765\u3002\n\n\u5faa\u73af\u7ed3\u675f\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u4e00\u662f\u8be5\u4fe1\u606f\u5168\u90e8\u8d70\u5b8c\uff0c\u4e8c\u662f\u518d\u5f80\u4e0b\u8d70\u6ca1\u6709\u4e0e\u8be5\u4fe1\u606f\u76f8\u7b26\u7684\u8282\u70b9\u4e86\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5f53\u524d\u7684\u7b54\u6848\u8981\u51cf\u53bb\u5f53\u524d\u8282\u70b9\u7684end\u503c\u518d\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u7684sum\u503c\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u3002\n\n\u663e\u7136\u6bd4\u5f85\u67e5\u8be2\u7684\u4fe1\u606f\u957f\u7684\u4fe1\u606f\uff0c\u5982\u679c\u4e0e\u5f85\u67e5\u8be2\u4fe1\u606f\u6709\u76f8\u540c\u524d\u7f00\u7684\u8bdd\uff0c\u4e00\u5b9a\u4f1a\u7ecf\u8fc7\u5f85\u67e5\u8be2\u4fe1\u606f\u7ec8\u7ed3\u7684\u8282\u70b9\u3002\n\n\u5982\u679c\u5f85\u67e5\u8be2\u4fe1\u606f\u65e0\u6cd5\u7ec8\u7ed3\uff0c\u8bf4\u660e\u6ca1\u6709\u6bd4\u8be5\u4fe1\u606f\u957f\u4e14\u524d\u7f00\u662f\u8be5\u4fe1\u606f\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u4e0d\u80fd\u52a0\u4e0asum\u3002\n\n\u5982\u679c\u4fe1\u606f\u7ec8\u7ed3\uff0c\u90a3\u4e48\u5f53\u524d\u8282\u70b9\u7684sum\u503c\u6240\u5305\u542b\u7684\u4fe1\u606f\u4e00\u5b9a\u4e0e\u5176\u6709\u76f8\u540c\u524d\u7f00\uff0c\u4f46sum\u6240\u5305\u542b\u7684\u4fe1\u606f\u6709\u53ef\u80fd\u521a\u597d\u5728\u8be5\u8282\u70b9\u7ec8\u7ed3\uff0c\n\n\u6240\u4ee5\u8981\u51cf\u53bbend\u503c\u3002\n\n\u00b7\u00b7\u00b7C++\n\n\n\n\n    \n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct cow{\n    int nex[2],sum,end;\n}t[500001];\nint a[10001];\ninline int read()\n{\n    int data=0,w=1; char ch=0;\n    while(ch!='-' && (ch<'0' || ch>'9')) ch=getchar();\n    if(ch=='-') w=-1,ch=getchar();\n    while(ch>='0' && ch<='9') data=data*10+ch-'0',ch=getchar();\n    return data*w;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n,m,js=1;\n    memset(t,0,sizeof(t));\n    m=read();n=read();\n    for (int i=1;i<=m;i++)\n    {\n        int len;\n        len=read();\n        for (int j=1;j<=len;j++) a[j]=read();\n        int now=1;\n        for (int j=1;j<=len;j++) \n        {\n            if (t[now].nex[a[j]]!=0) now=t[now].nex[a[j]];\n            else\n            {\n                js++;\n                t[now].nex[a[j]]=js;\n                t[js].nex[1]=t[js].nex[0]=0;\n                now=js;\n            }\n            t[now].sum++;\n        }\n        t[now].end++;\n    }\n    for (int i=1;i<=n;i++)\n    {\n        int len;\n        len=read();\n        for (int j=1;j<=len;j++) a[j]=read();\n        int now=1,ans=0;\n        bool flag=true;\n        for (int j=1;j<=len;j++)\n        {\n            if (t[now].nex[a[j]]!=0) now=t[now].nex[a[j]];\n            else \n            {\n                flag=false;\n                break;\n            }\n            ans+=t[now].end;\n        }\n        if (!flag) cout<<ans<<endl;\n        else cout<<ans+t[now].sum-t[now].end<<endl;\n    } \n    return 0;\n} \n\u00b7\u00b7\u00b7\n```",
        "postTime": 1500003411,
        "uid": 22075,
        "name": "\u6237\u5c71\u9999\u6f84",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u9898\u610f\n\n\u7ed9\u51fam\u4e2a\u5b57\u7b26\u4e32\uff0cn\u4e2a\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\uff0c\n\n\u8f93\u51fan\u884c\uff0c\u8868\u793a\u5728 \u6bcf\u4e2a\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u4e2d \u627e\u5230 \u4e0e\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u524d\u7f00\u76f8\u540c\u7684\u4e2a\u6570\n\n\u679a\u4e3e\u4f1aTLE\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528 \u5b57\u5178\u6811\n\n\u56e0\u4e3a\u8f93\u5165\u7684\u53ea\u67090\u548c1\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528bool\u505a\n\n\u9996\u5148\uff0c\u5b9a\u4e49\u4e00\u4e2abool\u6570\u7ec4\uff0c\u628a\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u4e00\u6761\u6761\u63d2\u5728\u5b57\u5178\u6811\u91cc\n\u518d\u5b9a\u4e49\u4e00\u4e2afind \u51fd\u6570\uff0c\u4e00\u6761\u4e00\u6761\u67e5\u627e\n\n### \u5b57\u5178\u6811\u7684\u6784\u5efa\n\n\u63a8\u8350\u7f51\u7ad9[https://blog.csdn.net/jiutianhe/article/details/8076835]\n\n\u5047\u8bbe\u6211\u8981\u67e5\u8be2\u7684\u5355\u8bcd\u662fabcd\uff0c\u90a3\u4e48\u5728\u4ed6\u524d\u9762\u7684\u5355\u8bcd\u4e2d\uff0c\u4ee5b\uff0cc\uff0cd\uff0cf\u4e4b\u7c7b\u5f00\u5934\u7684\u6211\u663e\u7136\u4e0d\u5fc5\u8003\u8651\u3002\u800c\u53ea\u8981\u627e\u4ee5a\u5f00\u5934\u7684\u4e2d\u662f\u5426\u5b58\u5728abcd\u5c31\u53ef\u4ee5\u4e86\u3002\u540c\u6837\u7684\uff0c\u5728\u4ee5a\u5f00\u5934\u4e2d\u7684\u5355\u8bcd\u4e2d\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u4ee5b\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u7684\uff0c\u4e00\u6b21\u6b21\u7f29\u5c0f\u8303\u56f4\u548c\u63d0\u9ad8\u9488\u5bf9\u6027\uff0c\u8fd9\u6837\u4e00\u4e2a\u6811\u7684\u6a21\u578b\u5c31\u6e10\u6e10\u6e05\u6670\u4e86\u3002\n\n\u597d\u6bd4\u5047\u8bbe\u6709b\uff0cabc\uff0cabd\uff0cbcd\uff0cabcd\uff0cefg\uff0chii \u8fd96\u4e2a\u5355\u8bcd\uff0c\u6211\u4eec\u6784\u5efa\u7684\u6811\u5c31\u662f\u5982\u4e0b\u56fe\u8fd9\u6837\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/38484.png)\n \nok\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u4ece\u6839\u904d\u5386\u5230\u4ed6\u7684\u8fc7\u7a0b\u5c31\u662f\u4e00\u4e2a\u5355\u8bcd\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u88ab\u6807\u8bb0\u4e3a\u7ea2\u8272\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5355\u8bcd\u5b58\u5728\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5355\u8bcd\uff0c\u6211\u53ea\u8981\u987a\u7740\u4ed6\u4ece\u6839\u8d70\u5230\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u518d\u770b\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u6807\u8bb0\u4e3a\u7ea2\u8272\u5c31\u53ef\u4ee5\u77e5\u9053\u5b83\u662f\u5426\u51fa\u73b0\u8fc7\u4e86\u3002\u628a\u8fd9\u4e2a\u8282\u70b9\u6807\u8bb0\u4e3a\u7ea2\u8272\uff0c\u5c31\u76f8\u5f53\u4e8e\u63d2\u5165\u4e86\u8fd9\u4e2a\u5355\u8bcd\u3002\n\u63d2\u5165\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4ea6\u4e3aO\uff08logN\uff09\n\n\u8fd9\u4e2a\u7ea2\u7684\u70b9\u8868\u793a\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u7b26\u4e32\uff0c\u7528bo  \u6570\u7ec4\u8bb0\u5f55\u3002\n\n\u56e0\u4e3a\u6b64\u9898\u662f\u7b97\u524d\u7f00\u76f8\u540c\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2asum\u6570\u7ec4\u8bb0\u5f55\u8be5\u8282\u70b9\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u7ecf\u8fc7\n\n![](https://cdn.luogu.com.cn/upload/pic/38485.png)\n \n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u4e3a0 1\uff0c\u7bad\u5934\u6240\u6307\u7684\u4f4d\u7f6e\uff0c\u4f46\u524d\u7f00\u76f8\u540c\u4f46\u957f\u5ea6\u66f4\u957f\u7684\u5b57\u7b26\u4e32\u4e5f\u8981\u52a0\u8fdb\u53bb\n\n\u4f8b\u59820 1 0\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u65f6\uff0c\u4e2a\u6570\u4e3a\u539f\u6765\u7684ans + sum(\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u4e2a\u6570) - bo(\u4ee5\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u4e3a\u7ed3\u675f\u70b9\u7684\u5b57\u7b26\u4e32\u4e2a\u6570)\n\n\u4e0b\u653e\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,ch[500001][3],tot=1,bo[500001],sum[500001],x;\nbool p[500001];\n///ch[u][i]\u8868\u793a\u8282\u70b9u\u7684i\u5b57\u7b26\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff0c\u82e5\u503c\u4e3a0\uff0c\u8868\u793a\u6ca1\u6709\u8fd9\u4e2a\u8282\u70b9\ninline int read(){\n    int data=0,w=1; char ch=0;\n    while(ch!='-' && (ch<'0' || ch>'9')) ch=getchar();\n    if(ch=='-') w=-1,ch=getchar();\n    while(ch>='0' && ch<='9') data=data*10+ch-'0',ch=getchar();\n    return data*w;\n}///\u5feb\u8bfb\n\nvoid add(bool p[]) {//\u63d2\u5165\u5b57\u7b26\u4e32\n\tint u=1;\n\tfor(int i=1; i<=k; i++) {\n\t\tint c=p[i];\n\t\tif(ch[u][c]==-1)ch[u][c]=++tot;\n\t\tu=ch[u][c];///\u5b83\u6307\u5411\u5b83\u7684\u5b50\u8282\u70b9\n\t\tsum[u]++;///\u7ecf\u8fc7\u8be5\u8282\u70b9\u5b57\u7b26\u4e32\u4e2a\u6570\n\t}\n\tbo[u]++;///\u8be5\u5b57\u7b26\u4e32\u4ee5u\u7ed3\u5c3e\n}\n\nint find(bool p[]) {\n\tint u=1;\n\tint res=0;\n\tfor(int i=1; i<=k; i++) {\n\t\tint c=p[i];\n\t\tif(ch[u][c]==-1)return res;\n\t\tu=ch[u][c];\n\t\tres+=bo[u];///\u52a0\u4e0a\u4e0e\u5f53\u524d\u8282\u70b9\u4e3a\u7ed3\u675f\u7684\u4e2a\u6570\n\t}\n\treturn res-bo[u]+sum[u];//\u52a0\u4e0a\u524d\u7f00\u76f8\u540c\u4e14\u957f\u5ea6\u6bd4\u5b83\u957f\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\n}\n\nint main() {\n\tint x;\n\tm=read();\n\tn=read();\n\tmemset(ch,-1,sizeof ch);//\u56e0\u4e3a\u8f93\u5165\u4e3a0\u62161\uff0c\u6240\u4ee5\u521d\u59cb\u503c\u4e3a-1\n\tfor(int i=1; i<=m; i++) {\n\t\tk=read();\n\t\tfor(int j=1; j<=k; j++) {\n\t\t\tp[j]=read();\n\t\t}\n\t\tadd(p);\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tk=read();\n\t\tfor(int j=1; j<=k; j++) {\n\t\t\tp[j]=read();\n\t\t}\n\t\tprintf(\"%d\\n\",find(p));\n\t}\n}\n````\n\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u8c22\u8c22dalao\u4eec\u7684\u89c2\u770borz",
        "postTime": 1539870605,
        "uid": 114730,
        "name": "yue__z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010\u79d8\u5bc6\u6d88\u606fSecret Message\u3011\uff08\u5b57\u5178\u6811\u7248\uff09"
    },
    {
        "content": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u83ab\u540d\u7684\u6709\u70b9\u5c0f\u9e21\u51bb\\\\(\u2267\u25bd\u2266)/\n\n\u5b89\u5229\u4e00\u4e0b**[\u849f\u84bb\u81ea\u5df1\u7684blog](http://www.cnblogs.com/bljfy/)**\n\n\u6b22\u8fce\u5927\u5bb6\u524d\u6765\u7ffb\u724c\u5b50\u54e6^_^\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ea6\u7ff0\u62e6\u622a\u5230\u4e86\u5976\u725b\u7684\u5bc6\u7801\uff0c\u5e76\u4e14\u4ed6\u6709\u4e00\u4e2a\u5bc6\u7801\u672c\uff0c\u91cc\u9762\u4e0d\u5b8c\u5168\u7684\u8bb0\u5f55\u4e86\u5976\u725b\u9003\u8dd1\u7528\u7684\u5bc6\u7801\uff0c\u4ed6\u8981\u4ece\u91cc\u9762\u6bd4\u5bf9\u51fa\u5bc6\u7801\u3002\n\n\u5bc6\u7801\u90fd\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u4e3a$0$\u6216$1$\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u4ece\u6837\u4f8b\u91cc\u9762\u5c31\u80fd\u5206\u6790\u51fa\u8fd9\u4e2a\u9898\u7684\u5751\u70b9\u3002\n\n\u770b\u6837\u4f8b\u4e2d\u7b2c\u4e8c\u7ec4\u7684\u7b2c5\u4e2a\u4e8c\u8fdb\u5236\u4e32``5 0 1 0 0 1`` \uff0c\u5f88\u663e\u7136\u5b83\u6bd4$trie$\u6811\u4e2d\u7684\u4e8c\u8fdb\u5236\u4e32\u90fd\u8981\u957f\uff0c\u5982\u679c\u6309\u7167\u4e00\u822c\u7684$trie$\u6765\u5199\uff0c\u662f\u627e\u4e0d\u51fa\u5b83\u7684\u524d\u7f00\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5728\u7ed3\u6784\u4f53\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u6210\u5458$sign$\u3002\n\n\u90a3\u4e48$sign$\u662f\u5e72\u4ec0\u4e48\u7684\u5462\uff1f\n\n\u5b83\u662f\u7528\u6765\u6807\u8bb0\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e32\u662f\u5426\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u4e32\u3002\u6ce8\u610f\u8981\u7528$int$\u5f62\u7684\u53d8\u91cf\u3002\u56e0\u4e3a\u53ef\u80fd\u7528\u5b8c\u5168\u76f8\u540c\u7684\u4e32\u51fa\u73b0\u5728\u6811\u4e2d\u3002\n\n\u800c\u6211\u4eec\u53ea\u9700\u8981\u5728$insert$\u64cd\u4f5c\u65f6\u52a0\u4e0a\u540e\u9762\u8fd9\u4e00\u53e5:``rt->sign++;``\n\n\u8fd8\u9700\u8981\u8fdb\u884c\u7684\u6539\u52a8\u5c31\u662f\u5728\u67e5\u8be2\u7684\u51fd\u6570\u4e2d\u7edf\u8ba1\u4e00\u4e0b$sign$\u7684\u503c\u3002\u518d\u8005\u5c31\u662f\u8981\u8003\u8651$sign$\u5927\u4e8e\u4e00\u7684\u60c5\u51b5\n\n### \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nstruct node{\n    int count;\n    node *next[5];\n    int sign;\n}*root;\nint n, m, len;\nchar s[10008];\n\nnode *build() {\n    node *k = new(node);\n    k->count = 0;\n    k->sign = 0;\n    memset(k->next, NULL, sizeof(k->next));\n    return k;\n}\n\ninline int read()\n{\n    int data=0,w=1; char ch=0;\n    while(ch!='-' && (ch<'0' || ch>'9')) ch=getchar();\n    if(ch=='-') w=-1,ch=getchar();\n    while(ch>='0' && ch<='9') data=data*10+ch-'0',ch=getchar();\n    return data*w;\n}\n\ninline void insert(char *s) {\n    node *rt = root;\n    for(register int i=0; i<len; i++) {\n        int id = s[i]-'0';\n        if(rt->next[id] == NULL) {\n            rt->next[id] = build();\n        }\n        rt = rt->next[id];\n        rt->count++;\n    }\n    rt->sign++;\n}\n\ninline int find(char *s) {\n    node *rt = root;\n    int k = 0;\n    bool mark = false;\n    for(register int i=0; i<len; i++) {\n        int id = s[i]-'0';\n        if(rt->next[id] == NULL) {\n            mark = true;\n            break;\n        }\n        rt = rt->next[id];\n        k += rt->sign;\n    }\n    if(mark == false) k+=rt->count-rt->sign;\n    return k;\n}\n\nint k;\n\nint main() {\n    root = build();\n    n = read(), m = read();\n    for(register int i=1; i<=n; i++) {\n        memset(s, NULL, sizeof(s));\n        len = read();\n        for(register int j=0; j<len; j++) {\n            k = read();\n            if(k == 0) s[j] = '0';\n            if(k == 1) s[j] = '1';\n        }\n        insert(s);\n    }\n    for(register int i=1; i<=m; i++) {\n        memset(s, NULL, sizeof(s));\n        len = read();\n        for(register int j=0; j<len; j++) {\n            k = read();\n            if(k == 0) s[j] = '0';\n            if(k == 1) s[j] = '1';\n        }\n        int ans = find(s);\n        printf(\"%d\\n\", ans);\n    }\n}\n```\n\n\u6c42\u7ba1\u7406\u5927\u5927\u7ed9\u4e2a\u901a\u8fc7\u5427QAQ\n\u7b14\u82af\u2764",
        "postTime": 1532141702,
        "uid": 60941,
        "name": "\u5954\u6ce2\u513f\u9738",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": " \u849f\u84bb\u521a\u521a\u5b66\u5b57\u5178\u6811\uff0c\u53d1\u7bc7\u9898\u89e3\u5de9\u56fa\u4e00\u4e0b\u3002\n \n \u6240\u8c13\u5b57\u5178\u6811\uff0c\u5c31\u662f\u5229\u7528\u597d\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6784\u5efa\u51fa\u4e00\u68f5\u6811\uff0c\u5728\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\u7684\u8282\u70b9\u5904\u6253\u4e0a\u6807\u8bb0\uff0c\u63d0\u9ad8\u67e5\u8be2\u7684\u6548\u7387\u3002\n \n \u8fd9\u9053\u9898\u6c42\u7684\u662f\u6bcf\u6761\u5bc6\u7801\u4e0e\u51e0\u6761\u4fe1\u606f\u6709\u516c\u5171\u524d\u7f00\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4fe1\u606f\u6784\u5efa\u51fa\u4e00\u9897Trie\u6811\uff0c\u628a\u6bcf\u6761\u5bc6\u7801\u5f53\u4f5c\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u3002\n \n \u4f46\u7531\u4e8e\u6bd4\u5bc6\u7801\u957f\u7684\u4fe1\u606f\u4e5f\u8981\u8ba1\u6570\uff0c\u6240\u4ee5\u6211\u4e00\u5f00\u59cb\u7528\u7684\u9012\u5f52\u67e5\u627e\u8fd9\u4e00\u5c42\u4e0b\u7684\u5355\u8bcd\u6570\u3002\u4f46\u8fd9\u6837\u4f1a\u8d85\u65f6\u3002\u3002\u3002\n \n \u8003\u8651\u5b57\u5178\u6811\u7684\u6784\u5efa\u8fc7\u7a0b\uff1a\u5982\u679c\u8be5\u5355\u8bcd\u7ed3\u5c3e\u5904\u4e0b\u8fd8\u6709\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u4e0b\u9762\u7684\u5b57\u7b26\u4e32\u80af\u5b9a\u4e5f\u4e0e\u8be5\u5bc6\u7801\u6709\u7740\u76f8\u540c\u524d\u7f00\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u7ecf\u8fc7\u6bcf\u4e2a\u8282\u70b9\u7684\u5355\u8bcd\u6570\uff0c\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n \n \u4e0b\u9762\u662f\u4ee3\u7801\n ```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,t=1;//t\u662f\u8282\u70b9\u6570\nint b[500010],a[10010],d[500010];//b\u5b58\u50a8\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6807\u8bb0\uff0cd\u5b58\u50a8\u7ecf\u8fc7\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u6570\nint c[500010][2];//c\u5b58\u50a8Trie\u6811\nvoid tire(int x,int a[]){\n\tint u=1;\n\tfor(int i=1;i<=x;i++){\n\t\tif(c[u][a[i]]==0)\n\t\t\tc[u][a[i]]=++t;\n\t\tu=c[u][a[i]];\n\t\td[u]++;//\u8bb0\u5f55\u7ecf\u8fc7\u6b64\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u91cf\n\t}\n\tb[u]++;//\u6b64\u5904\u8981\u6ce8\u610f\uff1a\u6709\u53ef\u80fd\u5b58\u5728\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u6240\u4ee5b\u6570\u7ec4\u8981++\u800c\u4e0d\u662f=1\uff08\u5426\u5219\u53ea\u67097\u5206\u3002\u3002\u3002\uff09\n\treturn;\n}//\u6784\u5efa\nint tai(int x,int a[]){//\u67e5\u8be2\n\tint u=1,ans=0,f=0;\n\tfor(int i=1;i<=x;i++){\n\t\tif(c[u][a[i]]!=0)\n\t\t\tu=c[u][a[i]];\n\t\telse{\n\t\t\tf=1;//f\u8bb0\u5f55\u662f\u5426\u5faa\u73af\u5b8c\u5bc6\u7801\u957f\u5ea6\n\t\t\tbreak;\n\t\t}\n\t\tif(b[u]!=0)\n\t\t\tans+=b[u];\n\t}\n\tif(f==0){\n\t\tans+=d[u];\n\t\tif(b[u]!=0)\n\t\t\tans-=b[u];//\u5982\u679c\u5f53\u524du\u5904\u6709\u5355\u8bcd\u7ed3\u5c3e\uff0c\u90a3\u4e48\u591a\u52a0\u4e86\u4e00\u6b21\uff0c\u51cf\u53bb\n\t}\n\treturn ans;\n}\nint main(){\n\tcin>>m>>n;\n\tint x;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>x;\n\t\tfor(int j=1;j<=x;j++)\n\t\t\tcin>>a[j];//\u8bfb\u5165\u4fe1\u606f\n\t\ttire(x,a);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x;\n\t\tfor(int j=1;j<=x;j++)\n\t\t\tcin>>a[j];//\u8bfb\u5165\u5bc6\u7801\n\t\tcout<<tai(x,a)<<endl;\n\t}\n\treturn 0;\n}\n```\n//\u6c42\u8fc7~\n",
        "postTime": 1556697300,
        "uid": 118433,
        "name": "LB_tq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u672c\u7bc7\u601d\u8def\u6bd4\u8f83\u7b80\u5355\uff0c\u9002\u5408\u521a\u521a\u5b66\u4e60trie\u7684\u540c\u5b66\u770b\u770b\uff0cdalao\u52ff\u55b7\n\u4ee3\u7801\u4e00\u5171\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\n1. trie\u7684\u5efa\u6811\uff0c\u4e0d\u8bf4\n2. \u8ba1\u7b97\u6bcf\u4e00\u4e2a\u8282\u70b9u\u4e4b\u540e\u8fd8\u6709\u51e0\u4e2a\u8282\u70b9\uff0c\u5f53\u7136\u4e0d\u5305\u62ec\u70b9u\u3002\u7b97\u662f\u4e00\u4e2a\u9884\u5904\u7406\n3. \u5f00\u59cb\u67e5\u8be2\uff0c\u672c\u4e32\u7ed3\u675f\u6216\u8005\u5b57\u7b26\u4e0d\u5728\u5b57\u5178\u6811\u51fa\u73b0\u5c31\u9000\u51fa\u5faa\u73af\n\n\u5148\u4e0a\u4ee3\u7801\uff0c\u65c1\u8fb9\u4f1a\u6709\u8be6\u7ec6\u6279\u6ce8\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n,m,cnt=1,trie[500001][2],b[500001],end[500001],len,s[500001];\nvoid build(){//\u5efa\u6811\n\tcin>>len;\n\tfor(int i=0;i<len;i++)cin>>s[i];\n\tint u=1;\n\tfor(int i=0;i<len;i++){\n\t\tint c=s[i];\n\t\tif(!trie[u][c])trie[u][c]=++cnt;\n\t\tu=trie[u][c];\n\t}\n\tb[u]++;\n\treturn;\n}\nvoid search(){//\u641c\u7d22\n\tcin>>len;\n\tfor(int i=0;i<len;i++)cin>>s[i];\n\tint u=1,sum=0;\n\tfor(int i=0;i<len;i++){\n\t\tint c=s[i];\n\t\tif(trie[u][c])u=trie[u][c];\n\t\telse{cout<<sum<<endl;return;}//\u8fd9\u91cc\u4e0d\u80fd+end[u] \u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u624b\u63a8\u4e00\u904d\n\t\tsum+=b[u];\n\t}\n\tcout<<sum+end[u]<<endl;\n\treturn;\n}\nint make(int u){\n\tint k1=0,k2=0;\n\tif(trie[u][0])k1=make(trie[u][0]);//\u5982\u679c\u5de6\u8fb9\u8fd8\u6709\u8282\u70b9\u5c31\u7ee7\u7eed\u627e\n\tif(trie[u][1])k2=make(trie[u][1]);//\u5982\u679c\u53f3\u8fb9\u8fd8\u6709\u8282\u70b9\u5c31\u7ee7\u7eed\u627e\n\tend[u]=k1+k2; //\u8282\u70b9u\u4e4b\u540e\u8fd8\u6709k1+k2\u4e2a\u8282\u70b9\uff0c\uff08\u4e0d\u5305\u62ec\u70b9u\u3002\n\treturn b[u]+end[u]; \n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)build();\n\tend[1]=make(1);\n\tfor(int i=1;i<=m;i++)search();\n\treturn 0;\n}\n```",
        "postTime": 1576239853,
        "uid": 130424,
        "name": "kevin_y",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "~~\u5207\u6c34\u9898\u771f\u5f00\u5fc3~~\n\n\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u540e\u7f00\u6570\u7ec4\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u5c31\u4e24\u79cd\uff0c\u5bb9\u6613\u88ab\u5361\uff0c\u800c\u4e14\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u56f0\u96be\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u5bc6\u7801\u77ed\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u628a\u4fe1\u606ftrie\uff0c\u5728\u4e0a\u9762\u53d6\u6807\u8bb0\u548c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5bc6\u7801\u77ed\u7684\u60c5\u51b5\uff0c\u663e\u7136\u53ef\u80fd\u7edf\u8ba1\u5165\u7b54\u6848\u7684\u5fc5\u987b\u5728\u5bc6\u7801\u5bf9\u5e94\u7684trie\u8282\u70b9\u7684\u4e0b\u65b9\u3002\n\n\u7136\u540e\u7528trie\u7ef4\u62a4\u4e00\u4e0b\u513f\u5b50\u6570\u5e76\u4e14\u7edf\u8ba1\u4e00\u4e0b\u7ecf\u8fc7\u7684\u5355\u8bcd\u5373\u53ef\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<iomanip>\n#include<cstring>\n#include<cmath> \n#include<algorithm>\nusing namespace std;\nconst int maxn=5e5+7;\nint m,n,t[maxn][2],son[maxn],rt=1,cnt=1,poi[maxn],a[maxn];\nvoid Insert(int &x,int now,int len)\n{\n\tif(!x) x=++cnt;son[x]++;\n\tif(now==len+1) poi[x]++;\n\telse Insert(t[x][a[now]],now+1,len);\n}\nint my_find(int x,int now,int len)\n{\n\tif(now==len+1||!x) return son[x];\n\treturn my_find(t[x][a[now]],now+1,len)+poi[x]; \n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tfor(int j=1;j<=x;++j)\n\t\tscanf(\"%d\",&a[j]);\n\t\tInsert(rt,1,x);\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tfor(int j=1;j<=x;++j)\n\t\tscanf(\"%d\",&a[j]);\n\t\tprintf(\"%d\\n\",my_find(rt,1,x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523589320,
        "uid": 43140,
        "name": "zhaoyifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "- ### \u7b80\u6d01\u9898\u610f\n    \u76f8\u5f53\u4e8e\u7ed9\u51fa\u4e00\u4e2a\u8bcd\u5178D\uff0c\u6709\u4e00\u4e9b\u8be2\u95ee\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u8be2\u95ee\u6c42D\u4e2d\u4e0e\u5b83\u6709\u524d\u7f00\u5173\u7cfb(\u67d0\u4e2a\u5b57\u7b26\u4e32\u662f\u5b83\u7684\u524d\u7f00\u6216\u5b83\u662f\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00)\u7684\u5b57\u7b26\u6709\u591a\u5c11\u4e2a\n- ### \u7b97\u6cd5\u63cf\u8ff0\n    \u5efa\u5b57\u5178\u6811\u7684\u540c\u65f6\uff0c\u7528`v`\u6570\u7ec4\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u8bcd\u8fd9\u4e2a\u8282\u70b9\u4e3a\u7ed3\u5c3e\uff0c`cnt`\u6570\u7ec4\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u6b64\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9(\u4e0d\u5305\u62ec\u8fd9\u4e2a\u8bcd\u7684\u7ed3\u5c3e)\u3002  \n    `cnt`\u4e0d\u5305\u62ec\u4e00\u4e2a\u8bcd\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u662f\u56e0\u4e3a\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\u65f6~~\u6211\u4e5f\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u5176\u4ed6\u60c5\u51b5)~~\uff0c\u540c\u4e00\u4e2a\u8282\u70b9\u4f1a\u88ab`v`\u548c`cnt`\u5404\u52a0\u4e00\u6b21\uff0c\u90a3\u5f53\u7136\u4e0d\u5bf9\u5566~~(\u4f60\u4e0d\u4f1a\u4e0d\u76f8\u4fe1\u6211\u5e76\u6ca1\u6709\u5728\u8fd9\u4e0d\u88ab\u5751\u5427poi)~~\u3002  \n    \u90a3\u4e48\u67e5\u627e\u5b8c\u540e\uff1a  \n    `v`\u5373\u5b83\u6709\u591a\u5c11\u524d\u7f00\u7684\u8bcd  \n    `cnt`\u5373\u5b83\u662f\u591a\u5c11\u8bcd\u7684\u524d\u7f00  \n    \u6240\u4ee5\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u7b54\u6848\u4e3a\u8def\u5f84\u4e0a\u6240\u6709`v`\u503c\u52a0\u4e0a\u7ed3\u675f\u8282\u70b9\u7684`cnt`\u503c\u3002  \n```cpp\n1 #include<cstdio>\n2 #include<cstring>\n3 using namespace std;\n4 inline int qr()\n5 {\n6     int x=0,f=1;char c=getchar();\n7     while(c<'0'||'9'<c){c=='-'?f=-1:1;c=getchar();}\n8     while('0'<=c&&c<='9'){x=x*10+(c&15);c=getchar();}\n9     return x*f;\n10 }\n11 void qw(int x)\n12 {\n13 \tif(x>9)qw(x/10);\n14 \tputchar(x%10+'0');\n15 }\n16 int n,m;\n17 int tot,ch[500005][2];\n18 int cnt[500005];//\u6709\u591a\u5c11\u4fe1\u606f\"\u7ecf\u8fc7\"\u6b64\u8282\u70b9 \n19 int v[500005];//\u4ee5\u6b64\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u4fe1\u606f\u6570\n20 int main()\n21 {\n22 \tn=qr();m=qr();\n23 \ttot=1;\n24 \tint now,t,x;\n25 \twhile(n--)//build trie tree\n26 \t{\n27 \t\tnow=1;t=qr();\n28\t\twhile(t--)\n29 \t\t{\n30\t\t\tx=qr();\n31\t\t\tif(!ch[now][x])ch[now][x]=++tot;\n32\t\t\tnow=ch[now][x];\n33\t\t\tcnt[now]++;\n34\t\t}\n35\t\tv[now]++;\n36\t\tcnt[now]--;//\u4e3a\u4e86\u67e5\u627e\u65f6\u65b9\u4fbf\u4e0d\u91cd\u590d\n37\t}\n38\tint s;\n39\twhile(m--)//Q^Q\n40\t{\n41\t\tnow=1;s=0;\n42\t\tt=qr();\n43\t\twhile(t--)\n44\t\t{\n45\t\t\tx=qr();\n46\t\t\tnow=ch[now][x];//\u8fd9\u91cc\u4e0d\u5b58\u5728\u7684\u8bdd\u4f1a\u53d8\u4e3a0\uff0c\u800c\u4ee50\u4e3a\u4e0b\u6807\u7684\u5404\u79cd\u6570\u7ec4\u4f9d\u7136\u662f\u3007\uff0c\u5e76\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u7384\u5b66\u9519\u8bef\n47\t\t\ts+=v[now];\n48\t\t}\n49\t\ts+=cnt[now];\n50\t\tqw(s);puts(\"\");\n51  }\n52  return 0;\n53 }\n```\n\u4e3a\u4e86~~\u61d2~~\u4e0d\u90a3\u4e48\u590d\u6742\uff0c\u6211\u5b57\u5178\u6811\u5c31\u4e0d\u7528\u51fd\u6570\uff0c\u800c\u662f\u76f4\u63a5\u8f93\u5165\u65f6\u64cd\u4f5c\u3002",
        "postTime": 1543027363,
        "uid": 60654,
        "name": "key_rA9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "~~\u5728\u8fde\u7eed\u7528STL\u6c34\u8fc7\u4e86[P3879 \u9605\u8bfb\u7406\u89e3](https://www.luogu.com.cn/problem/P3879)\u548c[P5149 \u4f1a\u8bae\u5ea7\u4f4d](https://www.luogu.com.cn/problem/P5149)\u540e\u51b3\u5b9a\u597d\u597d\u7528\u5b57\u5178\u6811\u505a\u9053\u9898(\uff5e\uffe3\u25bd\uffe3)\uff5e~~\n\n------\n\n### \u4ec0\u4e48\u662f\u5b57\u5178\u6811\uff1f\n\n&nbsp;\u3000\u3000\u5728\u5904\u7406\u5b57\u7b26\u4e32\u95ee\u9898\u65f6\uff0c\u6709\u4e24\u4e2a\u57fa\u7840\u64cd\u4f5c\uff1a\u5b58\u50a8\u548c\u67e5\u8be2\u3002\u800c\u4e00\u4e2a\u5b57\u4e32(\u5355\u8bcd)\u5728\u53ea\u5305\u542b26\u4e2a\u82f1\u6587\u5b57\u6bcd(\u4e0d\u533a\u5206\u5927\u5c0f\u5199)\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e\u5176\u5b83\u5b57\u4e32\u7ecf\u5e38\u4f1a\u51fa\u73b0\u91cd\u53e0\u90e8\u5206\u3002\u5982\u679c\u80fd\u628a\u8fd9\u4e9b\u91cd\u53e0\u90e8\u5206\u96c6\u4e2d\u8d77\u6765\u53bb\u91cd\uff0c\u65e2\u53ef\u4ee5\u8282\u7701\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u7f29\u77ed\u67e5\u8be2\u65f6\u95f4(\u4e0d\u7528\u6bcf\u51fa\u73b0\u4e00\u6b21\u90fd\u6bd4\u5bf9\u4e00\u6b21)\u3002\u4e8e\u662f\uff0c\u5c31\u6709\u4e0d\u77e5\u662f\u8c01\u60f3\u5230\u4e86\u6811\u8fd9\u4e2a\u7ed3\u6784\u3002 \n\n&nbsp;\u3000\u3000\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\u8981\u4f9d\u6b21\u6dfb\u52a0\u4e09\u4e2a\u5b57\u4e32aab,aac,bac  \n&nbsp;\u3000\u3000\u9996\u5148\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5b57\u4e32\u4ee5\u94fe\u7684\u5f62\u5f0f\u5b58\u8d77\u6765  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/urppeaja.png)  \n\n&nbsp;\u3000\u3000\u63a5\u7740\u6211\u4eec\u770b\u7b2c\u4e8c\u4e2a\u5b57\u4e32aac\uff0c\u53d1\u73b0\u5b83\u548c\u7b2c\u4e00\u4e2a\u5b57\u4e32\u6709\u516c\u5171\u524d\u7f00aa\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u7b2c\u4e8c\u4e2aa\u540e\u63d2\u5165\u4e00\u4e2ac,\u800c\u4e0d\u9700\u8981\u628a\u91cd\u53e0\u90e8\u5206\u518d\u5b58\u4e00\u904d\u3002\u6b64\u65f6\uff0c\u8fd9\u4e2a\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jph9ovmd.png)  \n\n&nbsp;\u3000\u3000\u53ef\u63d2\u5165\u7b2c\u4e09\u4e2a\u5b57\u4e32\u65f6\u95ee\u9898\u6765\u4e86\uff0c\u5b83\u4e0e\u7b2c\u4e8c\u4e2a\u5b57\u4e32\u6709\u516c\u5171\u90e8\u5206ac\uff0c\u96be\u9053\u6211\u4eec\u8981\u5728\u7b2c\u4e8c\u4e2aa\u524d\u63d2\u5165\u4e00\u4e2a\u65b0\u524d\u7f00b\u5417\uff1f\u663e\u7136\u4e0d\u884c\uff0c\u56e0\u4e3a\u90a3\u6837\u6211\u4eec\u7ef4\u62a4\u7684\u5c31\u4e0d\u662f\u4e00\u68f5\u6811\u4e86\uff1b\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u63d2\u5165\u65b0\u5b57\u4e32\u7684\u65b9\u6cd5\u5176\u5b9e\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u5bf9\u5bfb\u627e\u4e0e\u4e4b\u524d\u5b57\u4e32\u7684\u516c\u5171\u524d\u7f00\uff0c\u76f4\u5230\u4e0d\u518d\u6709\u516c\u5171\u90e8\u5206\u65f6\u5c31\u5c06\u540e\u9762\u7684\u65b0\u6dfb\u52a0\u6210\u4e00\u6761\u5206\u652f\u3002\u90a3\u6b64\u65f6\u5b8c\u5168\u6ca1\u6709\u516c\u5171\u524d\u7f00\uff0c\u4e0d\u662f\u8981\u65b0\u5efa\u4e00\u68f5\u6811\u5417\uff1f\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u524d\u6bb5\u653e\u7f6e\u4e00\u4e2a\u7a7a\u7684\u6839\u8282\u70b9\uff0c\u4ee5\u4fbf\u7edf\u4e00\u6210\u4e00\u68f5\u6811  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xrwpgf3k.png)\n\n&nbsp;\u3000\u3000\u4e8e\u662f\u4e00\u9897\u5b57\u5178\u6811\u5c31\u5efa\u6210\u4e86\u3002  \n&nbsp;\u3000\u3000\u67e5\u8be2\u65b9\u6cd5\u5f88\u7c7b\u4f3c\uff0c\u4e5f\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u4e00\u4e00\u6bd4\u5bf9\uff0c\u5148\u4e0d\u518d\u591a\u8bf4\u3002\n***\n&nbsp;\u3000\u3000\u56de\u5230\u672c\u9898\uff0c\u4e00\u770b\u5230\u516c\u5171\u524d\u7f00\uff0c\u663e\u7136\u5c31\u662f\u9488\u5bf9\u5b57\u5178\u6811\u7684\uff0c\u800c\u4e14\u5b83\u8fd8\u6ca1\u670926\u4e2a\u5b57\u6bcd\uff0c\u53ea\u67090\u548c1\u4e24\u4e2a\u6570\u5b57\u3002\u5b58\u4e00\u9897\u5b57\u5178\u6811\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u5927\u4f6c\u4eec\u559c\u6b22\u7528\u6307\u9488\u3001\u7ed3\u6784\u4f53\u4ec0\u4e48\u7684\uff0c\u8fd9\u9053\u9898\u6211\u5c31\u4f7f\u7528\u76f8\u5bf9\u7b80\u5355\u7684\u6570\u7ec4\u6765\u5b58\u3002  \n\n&nbsp;\u3000\u3000\u8fd9\u9898\u7684\u610f\u601d\u5176\u5b9e\u5c31\u662f\u7ed9\u4e00\u4e2a\u65b0\u7684\u5b57\u4e32\uff0c\u6c42\u5df2\u77e5\u5b57\u4e32\u4e2d\u4ee5\u65b0\u5b57\u4e32\u4e3a\u524d\u7f00\uff0c\u6216\u662f\u65b0\u5b57\u4e32\u7684\u524d\u7f00\u7684\u6709\u591a\u5c11\u3002\u6211\u4eec\u7528$book_i$\u8bb0\u5f55\u7ecf\u8fc7\u8282\u70b9$i$\u7684\u5b57\u4e32\u6570\uff0c$end_i$\u8bb0\u5f55\u4ee5$i$\u4e3a\u7ed3\u5c3e\u7684\u5b57\u4e32\u6570\uff0c\u5219\u5728\u5b57\u5178\u6811\u4e2d\u67e5\u8be2\u65b0\u5b57\u4e32\u65f6\u52a0\u4e0a\u6cbf\u9014\u7684$end$\uff0c\u6700\u540e\u518d\u52a0\u4e0a$book_i$-$end_i$\u5373\u53ef\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint m,n,l,x,trie[500005][2],book[500005],end[500005],tot,now,cnt,flag;\n//trie\u5b58\u50a8\u5b57\u5178\u6811\uff0ctrie[i][x](x=0\u62161)\u8868\u793a\u8282\u70b9i\u7684\u540e\u7ee7\u4e3ax\u7684\u8282\u70b9\u7f16\u53f7 \nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tmemset(trie,-1,sizeof(trie));\n\t//trie[i][x]==-1\u5219\u8868\u793a\u8282\u70b9i\u6ca1\u6709\u540e\u7ee7x \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&l);now=0;\n\t\t//now\u8868\u793a\u5f53\u524d\u8282\u70b9\uff0c\u6bcf\u6b21\u4ece\u6839\u8282\u70b9\u5f00\u59cb \n\t\tfor(int j=1;j<=l;j++) \n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(trie[now][x]==-1) trie[now][x]=++tot;\n\t\t\t//\u5982\u679c\u8282\u70b9i\u6ca1\u6709\u540e\u7ee7x\uff0c\u5219\u65b0\u63d2\u5165\u8282\u70b9i\u7684\u540e\u7ee7x\uff0c\u7f16\u53f7\u4e3atot \n\t\t\tnow=trie[now][x];\n\t\t\tif(j==l) end[now]++; \n\t\t\tbook[now]++;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&l);now=cnt=flag=0;\n\t\tfor(int j=1;j<=l;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(flag) continue;\n\t\t\tif(trie[now][x]==-1)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",cnt);\n\t\t\t\tflag=1;continue;\n\t\t\t\t//\u5982\u679c\u4ecenow\u5f00\u59cb\u4e0d\u518d\u6709\u516c\u5171\u90e8\u5206\u4e86\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\uff0c\u5e76\u4e14\u7edd\u6ca1\u6709\u4ee5\u8fd9\u4e2a\u65b0\u5b57\u4e32\u4e3a\u524d\u7f00\u7684\u5df2\u77e5\u5b57\u4e32 \n\t\t\t}\n\t\t\tnow=trie[now][x];\n\t\t\t//\u4e0d\u7136\u7ee7\u7eed\u5f80\u4e0b \n\t\t\tcnt+=end[now];\n\t\t\tif(j==l) printf(\"%d\\n\",cnt+book[now]-end[now]);\n\t\t\t//\u5982\u679c\u5168\u90e8\u90fd\u6bd4\u5bf9\u4e0a\u4e86\uff0c\u8bf4\u660e\u65b0\u5b57\u4e32\u662f\u67d0\u4e9b\u5df2\u77e5\u5b57\u4e32\u7684\u524d\u7f00 \n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1584695567,
        "uid": 186831,
        "name": "2018_Danny",
        "ccfLevel": 6,
        "title": "P2922 [USACO08DEC]Secret Message G"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11176156.html)\n\n[*\u9898\u9762*](https://www.luogu.org/problemnew/show/P2922)\n\n##\u9898\u76ee\u5206\u6790\n\n\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u662f\u4e00\u4e2a$Trie$\u8ba1\u6570\u95ee\u9898.\n\n\u548c\u4e00\u822c\u7684$Trie$\u8ba1\u6570\u4e0d\u540c,\u5728\u8fd9\u9053\u9898\u7684\u9898\u610f\u4e2d,\u6587\u672c\u4e32\u662f\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u5f0f\u4e32\u7684\u524d\u7f00\u7684.\n\n\u6bd4\u5982\u8bf4\u6587\u672c\u4e32\u662f$0001$,\u800c\u6a21\u5f0f\u4e32\u662f$00010000000$,\u8fd9\u79cd\u60c5\u51b5\u4e5f\u8981\u7b97\u4e0a.\n\n\u533a\u522b\u4e8e\u4e00\u822c\u7684$Trie$\u4e2d\u7ed9\u4e00\u4e2a\u6587\u672c\u4e32\u7684\u672b\u5c3e\u7684\u7ed3\u70b9\u505a\u4e00\u4e2a\u6807\u8bb0,\u540c\u5fd7\u4eec\u5f97\u628a\u8fd9\u4e2a\u6807\u8bb0\u6539\u6210\u8ba1\u6570\u5668.\n\n\u5f53\u6a21\u5f0f\u4e32\u5728$Trie$\u6811\u4e0a\u8dd1,\u5982\u679c\u9047\u5230\u4e86\u8ba1\u6570\u5668,\u5c31\u7d2f\u52a0\u5165\u7b54\u6848.\u8868\u660e\u6709\u6587\u672c\u4e32\u5728\u4e2d\u9014\u592d\u6298\u4e86.\n\n\u6a21\u5f0f\u4e32\u5339\u914d\u5230\u5c3e\u65f6,\u52a0\u4e0a\u8be5\u7ed3\u70b9\u88ab\u591a\u5c11\u4e2a\u6587\u672c\u4e32\u7ecf\u8fc7\u7684\u8ba1\u6570\u5668.\n\n\u7406\u4e00\u4e0b\u4e24\u4e2a\u8ba1\u6570\u5668\u7684\u4f5c\u7528:\n\n+ \u7b2c\u4e00\u4e2a\u8ba1\u6570\u5668\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u6a21\u5f0f\u4e32\u524d\u7f00\u7684\u6587\u672c\u4e32\u7d2f\u52a0\u4e0a\u53bb,\u5728\u6587\u672c\u4e32\u7684\u672b\u5c3e\u7ed3\u70b9\u7d2f\u52a0,\u5728\u6a21\u5f0f\u4e32\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\u7edf\u8ba1.\n\n+ \u7b2c\u4e8c\u4e2a\u8ba1\u6570\u5668\u8868\u793a\u6709\u591a\u5c11\u4e2a\u6587\u672c\u4e32\u7684\u524d\u7f00\u4e2d\u6709\u6a21\u5f0f\u4e32,\u5728\u6587\u672c\u4e32\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u4e0a\u90fd\u8981\u7d2f\u52a0,\u5728\u6a21\u5f0f\u4e32\u5339\u914d\u5b8c\u4e4b\u540e\u7edf\u8ba1.\n\n##\u4ee3\u7801\n\n*\u4e3a\u4e86\u51cf\u5c0f\u4e00\u70b9\u5e38\u6570,\u6211\u628aTrie\u8fc7\u7a0b\u5199\u5728\u4e86\u5faa\u73af\u91cc,\u8fb9\u8bfb\u5165\u8fb9\u505a,\u8bf7\u5404\u4f4d\u540c\u5fd7\u8c05\u89e3.*\n\n```cpp\n\n#include \"cstdio\"\n#include \"cstring\"\n#include \"algorithm\"\n#include \"iostream\"\n\n#define debug(x) printf(\"debug:%d\\n\",x)\n#define I_copy_this_anwser return\n\nusing namespace std;\n\nint m,n,tot=1,ans;\nint trie[500010][3],CharCnt[500010],EndCnt[500010];\nbool end[500010];\n\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n    {\n        int p=1,num,len;\n        scanf(\"%d\",&len);\n        for(int j=1;j<=len;j++)\n        {\n            scanf(\"%d\",&num);\n            if(trie[p][num]==0)\n            {\n                trie[p][num]=++tot;\n            }\n            p=trie[p][num];\n            if(j!=len)//\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b,\u4e24\u4e2a\u8ba1\u6570\u5668\u4e0d\u80fd\u52a0\u91cd\u590d\u4e86\n            {\n                CharCnt[p]++;//\u8bb0\u5f55\u6587\u672c\u4e32\u524d\u7f00\u7684\u8ba1\u6570\u5668\n            }\n        }\n        EndCnt[p]++;//\u8bb0\u5f55\u6587\u672c\u4e32\u672b\u5c3e\u7684\u8ba1\u6570\u5668\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int p=1,cnt=0,num,len;\n        scanf(\"%d\",&len);\n        bool flag=false;\n        for(int j=1;j<=len;j++)\n        {\n            scanf(\"%d\",&num);\n            if(flag==true)\n            {\n                continue;\n            }\n            p=trie[p][num];\n            if(EndCnt[p])\n            {\n                cnt+=EndCnt[p];\n            }\n            if(p==0)//\u540e\u9762\u518d\u4e5f\u6ca1\u6709\u80fd\u591f\u5339\u914d\u8be5\u6a21\u5f0f\u4e32\u7684\u6587\u672c\u4e32\u4e86,\u8f93\u51fa\u80fd\u591f\u4f5c\u4e3a\u6587\u672c\u4e32\u524d\u7f00\u7684\u6a21\u5f0f\u4e32\u4e2a\u6570\u5373\u53ef(\u79d1\u6280\u4e3a\u4e86\u6211)\n            {\n                flag=true;\n                printf(\"%d\\n\",cnt);\n            }\n        }\n        if(flag==false)\n        {\n            cnt+=CharCnt[p];//\u7edf\u8ba1\u6a21\u5f0f\u4e32\u53ef\u4ee5\u4f5c\u4e3a\u591a\u5c11\u4e2a\u6587\u672c\u4e32\u7684\u524d\u7f00\n            printf(\"%d\\n\",cnt);\n        }\n    }\nreturn 0;\n}\n\n```",
        "postTime": 1562915370,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u5b57\u5178\u6811\u505a\u3002\n\n\u9996\u5148\u5c06n\u6761\u4fe1\u606f\u5efa\u6811\u3002\u5efa\u6811\u65f6\u52a0\u4e86\u4e24\u4e2a\u53d8\u91cfpoint\u548csum\uff0cpoint\u6307\u5728\u8be5\u8282\u70b9\u7ed3\u675f\u7684\u4fe1\u606f\u6570\u91cf\uff0csum\u6307\u4e0b\u65b9\u66f4\u957f\u7684\u4fe1\u606f\u6570\u91cf(\u5728\u8be5\u8282\u70b9\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u662f\u591a\u5c11\u4e2a\u4fe1\u606f\u7684\u524d\u7f00)\u3002\n\n\u63a5\u7740\u8bfb\u5165m\u6761\u5bc6\u7801\uff0c\u6bcf\u6761\u5bc6\u7801\u8dd1\u4e00\u904d\u5b57\u5178\u6811\u3002\u5f53\u7ecf\u8fc7\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u7d2f\u52a0\u5176point\uff0c\u8868\u793a\u8be5\u4fe1\u606f\u4e3a\u8be5\u6761\u5bc6\u7801\u7684\u524d\u7f00\u3002\u5bc6\u7801\u8bfb\u5165\u5b8c\u540e\uff0c\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684sum\u7d2f\u52a0\u5165ans\uff0c\u8868\u793a\u8be5\u5bc6\u7801\u662f\u4e0b\u65b9sum\u6761\u4fe1\u606f\u7684\u540e\u7f00(\u8bb0\u5f97\u51cf\u53bb\u5f53\u524d\u4f4d\u7f6e\u7684point\u4ee5\u514d\u91cd\u590d\u7d2f\u52a0)\u3002\u4f46\u5f53\u5bc6\u7801\u8dd1\u5b57\u5178\u6811\u65f6\uff0c\u5982\u679c\u65e0\u6cd5\u7ee7\u7eed\u5411\u4e0b\uff0c\u90a3\u4e48\u4e0d\u80fd\u7d2f\u52a0sum\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u662f\u4efb\u4f55\u4fe1\u606f\u7684\u524d\u7f00\u3002\n\n\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\n#define N 50050\n#define W 500050\n\ntypedef struct {\n\tint lchild,rchild,point,sum;\n} tree;\n\nint n,m,t,i,j,b;\nint x,coume;\nint ls,now,ans;\ntree trime[W];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\t\n\tans=0; coume=0;\n\tmemset(trime,0,sizeof(trime));\n\t//\u5efa\u6811 \n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tnow=0;\n\t\tfor (j=1; j<=t; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&ls);\t\n\t\t\tif (ls==0)\n\t\t\t{\n\t\t\t\tif (trime[now].lchild==0) \n\t\t\t\t{\n\t\t\t\t\tcoume++;\n\t\t\t\t\ttrime[now].lchild=coume;\n\t\t\t\t}\n\t\t\t\tnow=trime[now].lchild;\n\t\t\t\ttrime[now].sum++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (trime[now].rchild==0)\n\t\t\t\t{\n\t\t\t\t\tcoume++;\n\t\t\t\t\ttrime[now].rchild=coume;\n\t\t\t\t}\n\t\t\t\tnow=trime[now].rchild;\n\t\t\t\ttrime[now].sum++;\n\t\t\t}\t\n\t\t}\n\t\ttrime[now].point++;\n\t}\n\t\n\tfor (int i=1; i<=m; i++)\n\t{\n\t\tscanf(\"%d\",&t); ans=0;\n\t\tnow=0; \n\t\tb=1;//\u7528b\u8868\u793a\u662f\u5426\u7d2f\u52a0sum \n\t\tfor (j=1; j<=t; j++)\n\t\t{\n\t\t\tscanf(\"%d\",&ls);\n\t\t\tif (ls==0)\n\t\t\t{\n\t\t\t\tif (trime[now].lchild==0)\n\t\t\t\t\tb=0;\n\t\t\t\telse now=trime[now].lchild;\n\t\t\t}\n\t\t\telse \n\t\t\t{ \n\t\t\t\tif (trime[now].rchild==0)\n\t\t\t\t\tb=0;\n\t\t\t\telse now=trime[now].rchild;\n\t\t\t}\n\t\t\tif (b)\n\t\t\tans=ans+trime[now].point;\n\t\t}\n\t\tif (b) ans+=trime[now].sum-trime[now].point;//\u8bb0\u5f97\u51cf\u53bbpoint \n\t\tprintf(\"%d\\n\",ans);//\u8bb0\u5f97\u6362\u884c(\u8001\u662f\u5fd8QwQ) \n\t}\n}\n```",
        "postTime": 1534558439,
        "uid": 29621,
        "name": "\u5723\u5149\u5929\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b \u611f\u89c9\u6211\u7684\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff1f\n\n\u9898\u610f\u770b\u4e86\u534a\u5929 \u610f\u601d\u662f\u7ed9m\u4e2a\u4e32 \u7528n\u4e2a\u4e32\u53bb\u5339\u914d \u6c42\u8fd9n\u4e2a\u4e32\u6bcf\u4e2a\u4e32\u80fd\u5339\u914d\u7684\u6570\u91cf\n\n\u5982\u679c\u7528i\u8868\u793a\u5f85\u5339\u914d\u7684\u4e32\uff0cj\u8868\u793a\u53bb\u5339\u914d\u4ed6\u7684\u4e32\uff0c\u5339\u914d\u7684\u610f\u601d\u662fi\u662fj\u7684\u524d\u7f00\u6216j\u662fi\u7684\u524d\u7f00\n\n\u5bf9\u4e8e\u5b57\u5178\u6811\u7684\u6bcf\u4e2a\u8282\u70b9 \u8bb0\u5f55\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\u7684\u4e32\u7684\u6570\u76ee\u548c\u5728\u8fd9\u4e2a\u8282\u70b9\u7ed3\u675f\u7684\u4e32\u7684\u6570\u76ee \n\n\u7edf\u8ba1\u7b54\u6848\u65f6 \u5bf9\u4e8e\u53bb\u5339\u914d\u4ed6\u4eec\u7684\u4e32 \u7ecf\u8fc7\u6bcf\u4e2a\u70b9\u90fd\u5728\u7b54\u6848\u4e0a\u7d2f\u52a0\u5728\u8fd9\u4e2a\u7ed3\u70b9\u7ed3\u675f\u7684\u4e32\u7684\u6570\u91cf\uff08i\u662fj\u7684\u524d\u7f00\uff09 \u5230\u4e86\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u5c31\u7d2f\u52a0\u7ecf\u8fc7\u8fd9\u4e2a\u7ed3\u70b9\u7684\u4e32\u7684\u6570\u91cf\uff08j\u662fi\u7684\u524d\u7f00\uff09\n\n\u5f53\u7136\u4e00\u4e2a\u4e32\u4e0d\u53ef\u80fd\u5728\u4e00\u4e2a\u7ed3\u70b9\u53c8\u7ecf\u8fc7\u53c8\u7ed3\u675f\n\n\u6b63\u786e\u6027\u663e\u7136\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,k;\nint a[100010],len;\nstruct node\n{\n\tint ch[2];\n\tint pass;//\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u7684 \n\tint end;//\u5728\u8fd9\u4e2a\u70b9\u7ed3\u675f\u7684 \n}tree[1234567];\nvoid build()\n{\n\tint id=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tif(tree[id].ch[a[i]]==0) tree[id].ch[a[i]]=++k;\n\t\tif(id) tree[id].pass++;\n\t\tid=tree[id].ch[a[i]];\n\t}\n\ttree[id].end++;\n}\nint find()\n{\n\tint id=0,sum=0;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tif(tree[id].ch[a[i]]==0) return sum;\n\t\tid=tree[id].ch[a[i]]; sum+=tree[id].end;\n\t}\n\tsum+=tree[id].pass;\n\treturn sum;\n}\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&len);\n\t\tfor(int j=1;j<=len;j++) scanf(\"%d\",&a[j]);\n\t\tbuild();\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&len);\n\t\tfor(int j=1;j<=len;j++) scanf(\"%d\",&a[j]);\n\t\tprintf(\"%d\\n\",find());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534506330,
        "uid": 85691,
        "name": "LengChu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u8fd8\u662f$Trie$\u6811\u7684\u677f\u9898~~\uff0c\u5148\u5c06$n$\u4e2a\u4fe1\u606f\u63d2\u5165\u5b57\u5178\u6811\u4e2d\uff0c\u5bf9\u4e8e\u67e5\u8be2\u7684\u5bc6\u7801\uff0c\u5728\u5b57\u5178\u6811\u4e2d\u67e5\u8be2\u5373\u53ef\u3002\n\n\u63d2\u5165\u5f88\u597d\u529e\uff0c\u6211\u4eec\u73b0\u5728\u6765\u8ba8\u8bba\u67e5\u8be2\u64cd\u4f5c\u3002\u6211\u4eec\u8bb0$s_1$\u4e3a\u4efb\u610f\u4e00\u4e2a\u4fe1\u606f\uff0c$s_2$\u662f\u5f85\u5339\u914d\u7684\u5bc6\u7801\u3002$tot[u]$\u8868\u793a\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u7ecf\u8fc7\u70b9$u$\uff0c$fin[u]$\u8868\u793a\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u4ee5\u70b9$u$\u7ed3\u5c3e\u3002\n\n\u90a3\u4e48\u4f1a\u51fa\u73b0\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.$s_1$\u662f$s_2$\u7684\u524d\u7f00\uff0c\u7d2f\u52a0\u8def\u5f84\u4e0a\u6240\u6709\u7684$fin[u]$\u5373\u53ef\u3002\n\n2.$s_1=s_2$\u3002\u5176\u5b9e\u5c31\u662f\u60c5\u51b51\uff0c$s_1$\u7ed3\u675f\u65f6\u7684\u70b9\u4e00\u5b9a\u4e0e$s_2$\u7ed3\u675f\u65f6\u7684\u70b9\u76f8\u540c\uff0c\u4e5f\u5c31\u5305\u542b\u5728$fin$\u4e2d\u3002\n\n3.$s_2$\u662f$s_1$\u7684\u524d\u7f00\uff0c\u5982\u679c\u5355\u8bcd\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6240\u5728\u8282\u70b9\u4e3a$v$\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u51fa$tot[v]$\u5c31\u4ee3\u8868\u8be5\u5355\u8bcd\u662f\u591a\u5c11\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u52a0\u4e0a$tot[v]$\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\uff0c$tot[v]$\u4f1a\u5305\u542b\u4ee5$v$\u8282\u70b9\u7ed3\u5c3e\u7684\u5355\u8bcd\u6570\uff0c\u6240\u4ee5\u7ed3\u679c\u987b\u51cf\u53bb$fin[v]$\u3002\n\n\u90a3\u4e48\uff0c\u4e00\u9053~~\u96be~~\u84dd\u9898\u5c31\u88ab\u6211\u4eec\u89e3\u51b3\u4e86\uff0c\u9644\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN = 500000;\nint n,m,len;\nint Trie[ MAXN + 5 ][ 2 ] , cnt;\nint tot[ MAXN + 5 ] , fin[ MAXN + 5 ];\n\nvoid Insert( char *str , int len ) {\n    int u = 0;\n    for( int i = 0 ; i < len ; i ++ ) {\n        int num = str[ i ] - '0';\n        if( !Trie[ u ][ num ] ) \n            Trie[ u ][ num ] = ++ cnt;\n        u = Trie[ u ][ num ];\n        tot[ u ] ++;\n    }\n    fin[ u ] ++;\n}\nint Find( char *str , int len ) {\n    int u = 0 , Ans = 0;\n    for( int i = 0 ; i < len ; i ++ ) {\n        int num = str[ i ] -'0';\n        if( !Trie[ u ][ num ] )\n        \treturn Ans;\n        u = Trie[ u ][ num ];\n        Ans += fin[ u ];\n    }\n    return Ans - fin[ u ] + tot[ u ];\n}\n\nint s1;\nchar s[ 10005 ];\nint main( ) {\n\tscanf(\"%d %d\",&m,&n);\n\tfor( int i = 1 ; i <= m ; i ++ ) {\n\t\tscanf(\"%d\",&len);\n\t\tfor( int j = 0 ; j < len ; j ++ ) {\n\t\t\tscanf(\"%d\",&s1);\n\t\t\ts[ j ] = s1 + '0';\n\t\t}\n\t\tInsert( s , len );\n\t}\n\tfor( int i = 1 ; i <= n ; i ++ ) {\n\t\tscanf(\"%d\",&len);\n\t\tfor( int j = 0 ; j < len ; j ++ ) {\n\t\t\tscanf(\"%d\",&s1);\n\t\t\ts[ j ] = s1 + '0';\n\t\t}\n\t\tprintf(\"%d\\n\",Find( s , len ));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1563197696,
        "uid": 123802,
        "name": "chihik",
        "ccfLevel": 0,
        "title": "P2922 \u79d8\u5bc6\u6d88\u606fSecret Message"
    },
    {
        "content": "\u95ee\u9898\u53ef\u8f6c\u6362\u4e3a\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e32\uff0c\u8ba1\u7b97\u4e0e\u5176\u6709\u76f8\u540c\u524d\u7f00\u7684\u4e32\u7684\u4e2a\u6570\u548c\u4ee5\u5176\u4e3a\u524d\u7f00\u7684\u4e32\u7684\u4e2a\u6570\u548c\n\n\u90a3\u4e48\u76f8\u5f53\u4e8e\u6211\u4eec\u8981\u8ba1\u7b97\u4e24\u4e2a\u503c\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u5728\u6784\u5efaTrie\u6811\u7684\u65f6\u5019\u8bb0\u4e00\u4e2aval\u503c\uff0c\u5728Search\u64cd\u4f5c\u7684\u65f6\u5019\u7d2f\u52a0\u5373\u53ef\n\n\u56e0\u4e3a\u6709\u91cd\u590d\u4e32\uff0c\u6240\u4ee5\u8be5val\u503c\u5e94\u4e3aint\u7c7b\u578b\uff0cInsert\u7684\u65f6\u5019++\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u503c\uff0c\u7b54\u6848\u5176\u5b9e\u662f\u4ee5\u8be5\u4e32\u7684\u7ed3\u5c3e\u8282\u70b9\u4e3a\u6839\u7684\u6240\u6709\u5b50\u6811\u7684val\u503c\u548c\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u7684Push_up\u64cd\u4f5c\uff0c\u5728\u6240\u6709Insert\u64cd\u4f5c\u5b8c\u6210\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u8ba1\u7b97\u4ee5\u5b83\u4e3a\u6839\u7684\u6240\u6709\u5b50\u6811\u7684val\u503c\u548c\n\n\u8fd9\u6837\u8fd9\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\n\n```cpp\n// luogu-judger-enable-o2\n/***************************************************************\n\tFile name: F.cpp\n\tAuthor: ljfcnyali\n\tCreate time: 2019\u5e7405\u670813\u65e5 \u661f\u671f\u4e00 10\u65f628\u520624\u79d2\n***************************************************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) \n#define mem(a) memset ( (a), 0, sizeof ( a ) ) \n#define str(a) strlen ( a ) \n\nconst int maxn = 50000010;\n\nstruct node\n{\n\tint next[2], val, sum;\n} Trie[maxn];\n\nint tot = 1, n, m, ans, a[maxn], num;\n\ninline void INIT(int x)\n{\n\tTrie[x].next[0] = Trie[x].next[1] = Trie[x].val = Trie[x].sum = 0;\n}\n\ninline void Push_up(int x)\n{\n\tif ( Trie[x].next[0] ) Push_up(Trie[x].next[0]);\n\tif ( Trie[x].next[1] ) Push_up(Trie[x].next[1]);\n\tTrie[x].sum = Trie[x].val;\n\tTrie[x].sum += Trie[Trie[x].next[0]].sum + Trie[Trie[x].next[1]].sum;\n}\n\ninline void Insert()\n{\n\tint p = 1;\n\tREP(i, 1, num)\n\t{\n\t\tif ( !Trie[p].next[a[i]] ) \n\t\t{\n\t\t\tTrie[p].next[a[i]] = ++ tot;\n\t\t\tINIT(tot);\n\t\t}\n\t\tp = Trie[p].next[a[i]];\n\t}\n\tTrie[p].val ++; \n}\n\ninline void Search()\n{\n\tint p = 1;\n\tREP(i, 1, num)\n\t{\n\t\tif ( !Trie[p].next[a[i]] ) return ;\n\t\tp = Trie[p].next[a[i]];\n\t\tans += Trie[p].val;\n\t}\n\tans -= Trie[p].val;\n\tans += Trie[p].sum;\n}\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n\tscanf(\"%d%d\", &n, &m);\n\tINIT(tot);\n\tREP(i, 1, n)\n\t{\n\t\tscanf(\"%d\", &num);\n\t\tREP(j, 1, num) scanf(\"%d\", &a[j]);\n\t\tInsert();\n\t}\n\tPush_up(1);\n\tREP(i, 1, m)\n\t{\n\t\tscanf(\"%d\", &num); ans = 0;\n\t\tREP(j, 1, num) scanf(\"%d\", &a[j]);\n\t\tSearch();\n\t\tprintf(\"%d\\n\", ans);\n\t}\n    return 0;\n}\n```",
        "postTime": 1557717818,
        "uid": 8618,
        "name": "\u6c34\u5e93\u4e2d\u7684\u6c34\u5e93",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "### \u3010\u9898\u89e3\u3011P2922 [USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\n\n[\u4e2a\u4eba\u535a\u5ba2\u5730\u5740](https://www.cnblogs.com/bj2002/p/10595092.html)\n\n* #### $\\text{Tags}$\n\n  * \u5b57\u5178\u6811\uff0c\u7edf\u8ba1\n\n---\n\n* #### \u9898\u610f\uff1a\n\n  * \u7ed9\u51fa\u4e24\u7ec4$\\text{0/1}$\u4e32$\\text{A,B}$\uff0c\u6c42\u89e3 $\\text{A}$\u4e2d\u67d0\u4e32\u662f$\\text{B}$\u4e2d\u67d0\u4e32\u7684\u524d\u7f00\uff0c\u548c$\\text{B}$\u4e2d\u67d0\u4e32\u662f$\\text{A}$\u4e2d\u67d0\u4e32\u7684\u524d\u7f00\u7684\u6570\u91cf\u4e4b\u548c\u3002\n\n* #### \u5206\u6790\uff1a\n\n  * \u5bf9\u4e8e$\\text{A}$\u5efa\u7acb\u5b57\u5178\u6811\u3002\u53e6\u5916\u9644\u52a0\u4e24\u4e2a\u6570\u7ec4\uff1a\n  * $\\text{int Son[i]}$\u8868\u793a\u8282\u70b9 $\\text{i}$ \u70b9$\\text{Son[i]}$\u513f\u5b50\u3002\n  * $\\text{int End[i]}$\u8868\u793a\u6709$\\text{End[i]}$\u4e2a\u5b57\u7b26\u4e32\u7ec8\u7ed3\u4e8e$\\text{i}$\u3002\n  * \u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6cbf\u7740\u5b57\u5178\u6811\u5411\u4e0b\u8d70\uff0c\u7d2f\u52a0\u6cbf\u9014\u7684$\\text{End[i]}$ \u3002\n  * \u5982\u679c\u4e0d\u80fd\u5339\u914d\uff0c\u8fd4\u56de\u7d2f\u52a0\u503c\u3002\n  * \u5982\u679c\u6574\u4e2a\u8be2\u95ee\u90fd\u5339\u914d\u6210\u529f\uff0c\u8fd8\u8981\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\u3002\n\n* #### \u53c2\u8003\u4ee3\u7801\uff1a\n\n  * ```\n    #include <stdio.h>\n    #include <string.h>\n    #define re register\n    #define GC getchar()\n    #define Clean(X,K) memset(X,K,sizeof(X))\n    int Qread () {\n    \tint X = 0 ;\n    \tchar C = GC ;\n    \twhile (C > '9' || C < '0') C = GC ;\n    \twhile (C >='0' && C <='9') {\n    \t\tX = X  * 10 + C - '0' ;\n    \t\tC = GC ;\n    \t}\n    \treturn X ;\n    }\n    const int Maxn = 500005 , Base = 2;\n    int T[Maxn][Base] , Tot = 0 , M , N , End[Maxn] , Son[Maxn] , A[Maxn];\n    void Add (int Now) {\n    \tint P = 0 ;\n    \tfor (re int i =  0 ; i < Now ; ++ i) {\n    \t\tif (!T[P][A[i]]) T[P][A[i]] = ++ Tot;\n    \t\t++ Son[P] ;\n    \t\tP = T[P][A[i]] ;\n    \t}\n    \t++ End[P] ;\n    }\n    int Ask (int Now) {\n    \tint P = 0 , Ans = 0;\n    \tfor (re int i = 0 ; i < Now ; ++ i) {\n    \t\tif (!T[P][A[i]]) return Ans ;\n    \t\tP = T[P][A[i]] ;\n    \t\tAns += End[P] ;\n    \t}\n    \treturn Ans + Son[P] ;\n    }\n    int main () {\n    \tM = Qread () , N = Qread () ;\n    \tClean(T , 0) , Clean(End , 0) , Clean (Son , 0) ;\n    \tfor (re int i = 1 ; i <= M; ++ i) {\n    \t\tint Now = Qread () ;\n    \t\tfor (re int j = 0 ; j < Now ; ++ j) A[j] = Qread () ;\n    \t\tAdd (Now) ;\n    \t}\n    \tfor (re int i = 1 ; i <= N; ++ i) {\n    \t\tint Now = Qread () ;\n    \t\tfor (re int j = 0 ; j < Now ; ++ j) A[j] = Qread () ;\n    \t\tprintf (\"%d\\n\" , Ask (Now)) ;\n    \t}\n    \tfclose (stdin) , fclose (stdout) ;\n    \treturn 0 ;\n    }\n    ```\n\n#### Thanks!",
        "postTime": 1553506515,
        "uid": 35219,
        "name": "Baihua",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u5e03\u4e8e[Handwer's Blog](https://blog.handwer-std.top/)\n\n# \u89e3\u9898\u601d\u8def\n\u67e5\u8be2\u524d\u7f00\u7684\u9898\u5f88\u5bb9\u6613\u60f3\u5230 Trie\n\n---\n\n\u7ef4\u62a4\u4e24\u4e2a\u4fe1\u606f `pass` \u548c `lasts`\n\n`pass` \u8868\u793a\u5f53\u524d\u8282\u70b9\u6709\u591a\u5c11\u6761\u4fe1\u606f\u7ecf\u8fc7\uff0c `lasts` \u8868\u793a\u6709\u591a\u5c11\u4ee5\u5f53\u524d\u8282\u70b9\u7ed3\u5c3e\u7684\u4fe1\u606f\uff08\u4e0d\u4e00\u5b9a\u6ca1\u6709\u76f8\u540c\u7684\u4e32\uff09\n\n\u63d2\u5165\u5c31\u4e0d\u8bf4\u4e86\uff0c\u8bf4\u8bf4\u67e5\u8be2\n\n---\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u8bb0\u4e00\u4e0b\u8def\u5f84\u4e0a`lasts`\u7684\u548c\uff08\u4e5f\u5c31\u662f\u62ff\u539f\u4fe1\u606f\u53bb\u5339\u914d\u67e5\u8be2\u4fe1\u606f\uff09\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u6761\u67e5\u8be2\u4fe1\u606f\uff0c\u90fd\u5206\u4e24\u79cd\u60c5\u51b5\n1. \u8fd9\u6761\u4fe1\u606f\u88ab\u5b8c\u7f8e\u7684\u67e5\u8be2\u5b8c\u4e86\n2. \u8fd9\u6761\u4fe1\u606f\u67e5\u5230\u4e00\u534a\u65ad\u5f00\u4e86\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u4ec0\u4e48\u90fd\u4e0d\u7528\u7ba1\uff0c\u8f93\u51fa\u7edf\u8ba1\u7684`lasts`\u7684\u548c\u5c31\u884c\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5219\u9700\u8981\u51cf\u53bb**\u67e5\u8be2\u4fe1\u606f**\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684`lasts`\u503c\uff0c\u52a0\u4e0a`pass`\u503c\u518d\u8f93\u51fa\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n---\n\n***\u8fd9\u91cc\u5efa\u8bae\u753b\u56fe\u7406\u89e3***\n\n\u9996\u5148\uff0c\u5982\u679c\u67e5\u5230\u4e00\u534a\u65ad\u5f00\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f**\u7528\u539f\u4fe1\u606f\u53bb\u5339\u914d\u67e5\u8be2\u4fe1\u606f**\u7684\u5339\u914d\u6570\uff0c\u4e5f\u5c31\u662f`lasts`\u7684\u548c\n\n```\n\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\n\u67e5\u8be2\u4fe1\u606f\uff1a\nkk_kel_dk\n\u539f\u59cb\u4fe1\u606f\uff1a\nkk\nkk_kel\nkk_kel_jk\uff08\u8fd9\u4e2a\u4e5f\u662f\u6ca1\u6cd5\u5339\u914d\u7684\uff0c\u540e\u51e0\u4e2a\u5b57\u7b26\u4e0d\u540c\uff09\n\u90a3\u4e48\u5339\u914d\u6570\u5c31\u662f2\uff0c\u5373\u4e3a\u7b54\u6848\n```\n\n\u5982\u679c\u67e5\u8be2\u5b8c\u4e86\uff0c\u90a3\u4e48\u8bf4\u660e**\u5b58\u5728\u80fd\u5339\u914d\u67e5\u8be2\u4fe1\u606f\u7684\u539f\u4fe1\u606f**\uff0c\u6240\u4ee5\u300c\u7528\u539f\u4fe1\u606f\u53bb\u5339\u914d\u67e5\u8be2\u4fe1\u606f\u7684\u5339\u914d\u6570\u300d\u8fd8\u4e0d\u591f\uff0c\u8981\u518d\u52a0\u4e0a\u300c\u7528\u67e5\u8be2\u4fe1\u606f\u53bb\u5339\u914d\u539f\u4fe1\u606f\u7684\u5339\u914d\u6570\u300d\uff0c\u4e5f\u5c31\u662f`lasts\u7684\u603b\u548c + pass`\n\n\u6709\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f**\u539f\u4fe1\u606f\u4e0e\u67e5\u8be2\u4fe1\u606f\u76f8\u540c**\uff0c\u90a3\u4e48\u5b83\u5728\u5f53\u524d\u8282\u70b9\u7684`lasts`\u91cc\u9762\u7b97\u4e86\u4e00\u6b21\uff0c\u5728\u5f53\u524d\u8282\u70b9\u7684`pass`\u53c8\u7b97\u4e86\u4e00\u6b21\uff01\u6240\u4ee5\u8981\u51cf\u53bb\u5f53\u524d\u8282\u70b9\u7684`lasts`\n\n```\n\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\n\u67e5\u8be2\u4fe1\u606f\uff1a\nkk_kel_dk\n\u539f\u59cb\u4fe1\u606f\uff1a\nkk_kel_dk_tql_wsl\nkk_kel_dk\n\u7b54\u6848\u662f\u5565\uff1f2\n\n\u6ce8\u610f\u5230dk\u8fd9\u91cck\u7684 pass \u662f2\uff0c\u628a\u4e24\u6761\u4fe1\u606f\u90fd\u7b97\u4e0a\u4e86\n\u4f46\u540c\u65f6dk\u8fd9\u91cck\u7684 lasts \u4e5f\u662f1\u554a\uff01\uff01\uff01\n\u8fd9\u4e0d\u5c31\u91cd\u4e86\u5417\uff0c\u6240\u4ee5\u8981\u51cf\u53bb lasts\n```\n\n~~\u6211\u89c9\u5f97\u6211\u8bf4\u7684\u5df2\u7ecf\u591f\u901a\u4fd7\u6613\u61c2\u4e86\u5427~~\n![kel](https://s2.ax1x.com/2019/03/23/AJ3jc8.png)\n\n# \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <iostream>\n#include <cstring>\n\n#define FILE_IN(__fname) freopen(__fname, \"r\", stdin)\n#define FILE_OUT(__fname) freopen(__fname, \"w\", stdout)\n#define IMPROVE_IO() std::ios::sync_with_stdio(false)\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nconst int MAXN = 500000 + 10;\n\nstruct Trie {\n    struct Node {\n        int pass, lasts;\n        int next[2 + 1];\n        \n        Node() {\n            pass = lasts = 0;\n            memset(next, 0, sizeof next);\n        }\n    } node[MAXN];\n    \n    int cnt;\n    \n    Trie() {\n        cnt = 0;\n    }\n    \n    void SwitchTo(int &now, bool data) {\n        if (node[now].next[data] == 0) {\n            node[now].next[data] = ++cnt;\n        }\n        now = node[now].next[data];\n    }\n    bool switchTo(int &now, bool data) {\n        if (node[now].next[data] == 0) return false;\n        now = node[now].next[data];\n        return true;\n    }\n} t;\n// \u4e00\u4e2a\u633a\u6b63\u5e38\u7684\u5b57\u5178\u6811\u5b9e\u73b0\n\nint m, n;\n\nint main() {\n    IMPROVE_IO();\n    cin >> m >> n;\n    for (int i = 1; i <= m; ++i) {\n        int f = 0, pos = 0;\n        cin >> f;\n        for (int j = 1; j <= f; ++j) {\n            int nf = 0;\n            cin >> nf;\n            t.SwitchTo(pos, nf);\n            ++t.node[pos].pass;\n        }\n        ++t.node[pos].lasts;\n    }\n    for (int i = 1; i <= n; ++i) {\n        int f = 0, pos = 0, ans = 0;\n        cin >> f;\n        bool cont = true;\n        for (int i = 1; i <= f; ++i) {\n            int nf = 0;\n            cin >> nf;\n            if (cont && t.switchTo(pos, nf)) {\n                ans += t.node[pos].lasts; // \u6cbf\u9014\u8bb0\u5f55lasts\u7684\u548c\n            } else cont = false; // \u5224\u65ad\u5f53\u524d\u67e5\u8be2\u4fe1\u606f\u662f\u5426\u65ad\u6389\u4e86\n        }\n        if (cont) ans = ans - t.node[pos].lasts + t.node[pos].pass;\n        cout << ans << endl;\n    }\n    return 0;\n}\n\n\n```\n",
        "postTime": 1553344777,
        "uid": 56626,
        "name": "HDWR",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "## [USACO08DEC]\u79d8\u5bc6\u6d88\u606fsolution\n\n- tag\uff1a \u4e00\u9053\u6c34\u6c34\u7684\u84dd\u9898\n\n\u5b57\u5178\u6811\u4e0d\u7528\u591a\u8bf4(Trie_Tree)\u7136\u540e\u7ef4\u62a4\u6807\u8bb0\u7684\u8bdd\u5c31\u662f\u7ef4\u62a4\n\n- sum\u8868\u793a\u8def\u5f84\u4e0a\u6709\u51e0\u4e2a\u5b57\u7b26\u4e32\n\n- val\u8868\u793a\u8def\u5f84\u5230\u6b64\u4e3a\u6b62\u6709\u51e0\u4e2a\u5b57\u7b26\u4e32\u6070\u597d\u7ec8\u7ed3\n\n\u6bcf\u4e00\u6b21insert\u64cd\u4f5c\u8981\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u7684\u503c(\u6ce8\u610f\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\u7ed3\u5c3e\uff01)\n\n\u6bcf\u4e00\u6b21\u7684find\u64cd\u4f5c\u901a\u8fc7\u8d70\u5728\u5b57\u5178\u6811\u4e0a\u7684\u8def\u5f84\u628a\u6240\u6709\u7684val\u7d2f\u52a0\u8d77\u6765\uff08\u6ce8\u610f\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\u7ed3\u5c3e\uff01\uff09\n\n\u7136\u540e\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\n\n- \u6cbf\u7740\u8fd9\u6761\u8def\u5f84\u8d70\u5b8c \uff1a ans=ans-val[u]+sum[u]\n\n- \u6ca1\u6709\u6cbf\u7740\u8fd9\u6761\u8def\u5f84\u8d70\u5b8c \uff1a ans\n\nwhy\uff1f \n\n\u6211\u4eec\u8003\u8651\u4e00\u6761\u5b58\u50a8\u4fe1\u606fS\u548c\u5f85\u67e5\u8be2\u4fe1\u606fT\n\n\u5982\u679c|S|<|T|\u6211\u4eec\u53ea\u8981\u5728\u5b57\u5178\u6811\u4e2d\u627e\u51fa\u6240\u6709\u7684S\u5bf9\u5e94\u7684val\u503c\u5c31\u884c\u4e86(\u4e00\u5b9a\u6709val\u6807\u8bc6)\n\n\u5982\u679c |S|>|T| \n\n1. S\u65e0\u6cd5\u7ec8\u7ed3\uff0cT\u7ec8\u7ed3 \u5f53\u524d\u8282\u70b9\u5305\u542b\u7684\u4fe1\u606f\u4e00\u5b9a\u6709\u5305\u542bT\u7684\u7684\u524d\u7f00\uff0c\u4f46\u662fsum\u548cval\u662f\u5305\u542b\u5173\u7cfb\u6211\u52a0\u4e86sum\u5c31\u5fc5\u987b\u51cf\u53bbval\u624d\u80fd\u4e0d\u91cd\u590d\n\n2. S\u65e0\u6cd5\u7ec8\u7ed3\uff0cT\u6ca1\u6709\u7ec8\u7ed3\uff0c\u90a3\u4e48\u5c31\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u76f4\u63a5return\n\n\ncode\uff1a\u770b\u5230\u975e\u6307\u9488\u7684\u4ee3\u7801\u90fd\u5199\u3002\u3002\u6211\u8fd8\u662f\u8d34\u4e00\u4e0b\u81ea\u5df1\u5495\u5495\u7684\u4ee3\u7801\u5427\n\n```\n# include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=500005;\nstring s;\ninline int read()\n{\n\tint X=0,w=0; char c=0;\n\twhile (!(c>='0'&&c<='9')) w|=c=='-',c=getchar();\n\twhile (c>='0'&&c<='9') X=(X<<1)+(X<<3)+(c^48),c=getchar();\n\treturn w?-X:X;\n}\nstruct Trie_Tree{\n\tint ch[MAXN][3],size;\n\tint val[MAXN],sum[MAXN];\n\tTrie_Tree(){\n\t\tmemset(sum,0,sizeof(sum));//\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u7ecf\u8fc7\u8fd9\u4e2a\u70b9 \n\t\tmemset(val,0,sizeof(val));//\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u5728\u8fd9\u4e2a\u70b9\u7ec8\u7ed3 \n\t\tmemset(ch,0,sizeof(ch)); \n\t\tsize=1;\n\t}\n\tint idx(char a) { return a-'0';}\n\tvoid insert() {\n\t\tint len=s.length();\n\t\tint u=0;\n\t\tfor (int i=0;i<len;i++) {\n\t\t\tint c=idx(s[i]);\n\t\t\tif (!ch[u][c]) ch[u][c]=++size;\n\t\t\tsum[u]++;\n\t\t\tu=ch[u][c];\n\t\t} \n\t\tval[u]++; sum[u]++;\n\t}\n\tint find() {\n\t\tint len=s.length();\n\t\tint u=0,ans=0;\n\t\tfor (int i=0;i<len;i++) {\n\t\t\tint c=idx(s[i]);\n\t\t\tans+=val[u];\n\t\t\tif (!ch[u][c]) goto exit;\n\t\t\tu=ch[u][c];\n\t\t}\n\t\tans+=val[u];\n\t\treturn ans-val[u]+sum[u];\n\t\texit:return ans;\n\t}\n}Tree;\nint main()\n{\n\tint n,m;\n\tn=read();m=read();\n\twhile (n--) {\n\t\tint len=read(); s=\"\";\n\t\twhile (len--) s+=read()+'0';\n\t\tTree.insert(); \n\t}\n\twhile (m--) {\n\t\tint len=read();s=\"\";\n\t\twhile (len--) s+=read()+'0';\n\t\tint ans=Tree.find();\n\t\tprintf(\"%d\\n\",ans); \n\t}\n\treturn  0;\n } \n```",
        "postTime": 1541290142,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u5339\u914d\u8def\u4e0a\u7684\u6240\u6709\u7ed3\u675f\u5b57\u7b26\u4e32\u90fd\u8981\u52a0\u4e0a,\u7ecf\u8fc7\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e32\u4e5f\u8981\u52a0\u4e0a\u6ce8\u610f\u8ba1\u7b97\u987a\u5e8f\u5c31\u597d...\n``` c++\n#include<iostream>\n#include<cstdio> \n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define rep(i,x,y) for(register int i=x;i<=y;++i)\n#define repd(i,x,y) for(register int i=x;i>=y;--i)\n#define long long\nusing namespace std;\nconst int N=5e5+7;\nint tr[N<<2][2],nm[N],sum[N<<2],n,m,cnt=1,end[N];\ninline void add(int *a,int len){\n\tint p=1;\n\trep(i,1,len){\n\t\tif(!tr[p][a[i]])tr[p][a[i]]=++cnt;\n\t\tsum[tr[p][a[i]]]++;p=tr[p][a[i]];\n\t}\n\tend[p]++;\n}\ninline int query(int *a,int len){\n\tint p=1,ans=0;\n\trep(i,1,len){\n\t\tif(!tr[p][a[i]])return ans;\n\t\tp=tr[p][a[i]];\n\t\tif(p)ans+=end[p];\n\t}\n\treturn ans+sum[p]-end[p];\n}\nint main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\t//freopen(\"1.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\trep(i,1,n){\n\t\tint x;scanf(\"%d\",&x);\n\t\trep(j,1,x)scanf(\"%d\",&nm[j]);\n\t\tadd(nm,x);\n\t}\n\trep(i,1,m){\n\t\tint x;scanf(\"%d\",&x);\n\t\trep(j,1,x)scanf(\"%d\",&nm[j]);\n\t\tprintf(\"%d\\n\",query(nm,x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524475047,
        "uid": 46982,
        "name": "Angora",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528](https://www.luogu.com.cn/blog/176990/solution-p2922)\n\n[$AcCoders$\u4f20\u9001\u95e8](http://www.accoders.com/problem.php?cid=2332&pid=5)\n\n[$Loj$\u4f20\u9001\u95e8](https://loj.ac/problem/10054)\n\n[$bzoj$\u4f20\u9001\u95e8](https://www.lydsy.com/JudgeOnline/problem.php?id=1590)\n\n\u4e00\u9053$AC$\u81ea\u52a8\u673a\u6a21\u677f\u9898\u3002\n\n\u8fd9\u91cc\u7ed9\u4e00\u4e2a$Trie$\u6811\u7684\u505a\u6cd5\u3002\n\n- \u628a\u4fe1\u606f\u5efa\u51fa$Trie$\u6811\n\n- \u8bbe$sum[i]$\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e32\u7ecf\u8fc7\u8282\u70b9$i$\uff0c$end[i]$\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e32\u4ee5\u8282\u70b9$i$\u4e3a\u7ed3\u5c3e\u3002\n\n- \u7136\u540e\u6cbf\u7740$Trie$\u626b\u4e00\u904d\u6697\u53f7\uff0c$ans+=end[i]$\n\n- \u6700\u540e$ans-end[p]+sum[p]$\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u4e32\u662f\u5176\u4ed6\u4e32\u7684\u524d\u7f00\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u4e32\u4e00\u5b9a\u7ecf\u8fc7\u8fd9\u4e2a\u4e32\u7684\u7ed3\u5c3e\uff0c\u603b\u6570\u91cf\u4e3a$sum[i]$\n\n\u5982\u679c\u5176\u4ed6\u4e32\u662f\u8fd9\u4e2a\u4e32\u7684\u524d\u7f00\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e32\u4e00\u5b9a\u7ecf\u8fc7\u5176\u4ed6\u4e32\u7684\u7ed3\u5c3e\u6807\u8bb0\uff0c\u6240\u4ee5\u628a\u6cbf\u8def\u7684\u7ed3\u5c3e\u6807\u8bb0\u52a0\u8d77\u6765\u3002\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u76f8\u5339\u914d\u7684\u4e32\u7b97\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u8981\u51cf\u53bb\u4e00\u4e2a\u3002\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-7\n#define re register\n#define N 500101\n#define MAX 2001\n#define PI 3.1415927\n#define inf 1e18\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n    ret=0;re ll pd=0;re char c=getchar();\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll n,m,a[N],num[N],trie[N][2],tot,f[N],sum[N];\ninline void insert(re ll i)\n{\n\tre ll p=0;\n\tfor(re int j=1;j<=num[i];j++)\t\n\t{\n\t\tre ll c=a[j];\n\t\tif(!trie[p][c])\n\t\t\ttrie[p][c]=++tot;\n\t\tp=trie[p][c];\n\t\tsum[p]++;\n\t}\n\tf[p]++;\n\treturn;\n}\ninline ll query(re ll i)\n{\n\tre ll p=0,ret=0;\n\tfor(re int j=1;j<=num[i];j++)\n\t{\n\t\tre ll c=a[j];\n\t\tif(!trie[p][c])\n\t\t\treturn ret;\n\t\tp=trie[p][c];\n\t\tret+=f[p];\n\t}\n\treturn ret-f[p]+sum[p];\n}\nint main()\n{\n\tread(n);\n\tread(m);\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tread(num[i]);\n\t\tfor(re int j=1;j<=num[i];j++)\n\t\t\tread(a[j]);\n\t\tinsert(i);\n\t}\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tread(num[i]);\n\t\tfor(re int j=1;j<=num[i];j++)\n\t\t\tread(a[j]);\n\t\tprintf(\"%lld\\n\",query(i));\n\t}\n\texit(0);\n}\n```\n\n",
        "postTime": 1579177074,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "# \u5f00\u59cb\u524d\u6211\u5148\u8bb2\u4e2a\u7b11\u8bdd\uff1a\u6211\u7528gets()\u5728luogu AC\u4e86\uff08\uff1f\uff09\n\u4f5c\u4e3a\u849f\u84bb\uff0c\u672c\u6765\u4e0d\u6562\u53d1\u9898\u89e3\u3002\u3067\u3082\uff0c\u4f17\u6240\u5468\u77e5\uff1a\n### luogu\u662f\u8fc7\u4e0d\u4e86gets()\u7684\n\u53ef\u6211\u5728\u6709\u751f\u4e4b\u5e74\u5c45\u7136\u7528gets()AC\uff01\n\u9707\u60ca\u4e4b\u4f59\uff0c\u6211\u8d76\u5feb\u62ff\u8d77\u6211\u534a\u5e74\u672a\u78b0\u8fc7\u7684\u535a\u5ba2\u9898\u89e3~~\u6c34\u4e86\u4e00\u7bc7\u4e0a\u53bb~~\uff0c\u76ee\u7684\u662f\u8ba9OIER\u4eec\u77e5\u9053\u8fd9\u4e2a\u53ef\u6015\u7684bug\uff08\u4e0d\u8fc7\u8bdd\u8bf4\u56de\u6765,\u672c\u6765luogu\u7528gets()\u8fc7\u4e0d\u4e86\u624d\u662f\u4e2abug\uff09\n\n\u90a3\u4e48\u8a00\u5f52\u6b63\u4f20\uff1a\n## \u8fd9\u662f\u4e00\u9053\u5178\u578b\u7684 trie ~~\u88f8\u9898~~\n\uff08\u5b66\u8fc7\u5b57\u5178\u6811\u7684\u540c\u5b66\u4eec\u53ef\u81ea\u884c\u5f80\u540e\u8df3\uff09\n\ntrie,\u5373\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u5b57\u5178\u6811\u3002\u5b57\u5178\u6811\u5373: \u5c06\u5355\u8bcd\u4ee5\u6811\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u5c06\u5b57\u7b26\u5b58\u4e8e\u6811\u679d\u8fb9\u4e0a\uff0c\u5c31\u50cf\u67e5\u5b57\u5178\u5355\u8bcd\u4e00\u6837\uff0c\u524d\u7f00\u76f8\u540c\u7684\u5355\u8bcd\u90fd\u5728\u524d\u7f00\u5bf9\u5e94\u7684\u5b50\u6811\u4e0a\uff0c\u4ece\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u6811\u679d\u8282\u70b9\u90fd**\u5fc5\u7136\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u5355\u8bcd**\u3002 **\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4trie[N][C]\u5b58\u50a8\uff0c\u542b\u4e49\u4e3a\uff1a\u7b2cN\u53f7\u8282\u70b9\u4ee5\u5b57\u7b26C\u4e3a\u8fb9\u901a\u5411\u7684\u8282\u70b9\uff0c\u4f8b\u5982\uff1a**(\u56fe\u7247\u6458\u5f55\uff0c\u4fb5\u5220)\n![](https://img-blog.csdn.net/20140403014117515?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcHlhbmcxOTg5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u9664\u6b64\u4e4b\u5916\u6709\u4e9b\u6bd4\u8f83\u5c0f\u7684\u5355\u8bcd\u4f8b\u5982 **air** \u5fc5\u7136\u662f\u5305\u542b\u4e8e\u5355\u8bcd **airport** \u4e2d\u7684\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u8fa8\u522b\uff0c\u6211\u4eec\u4f7f\u7528\u6570\u7ec4 **vis[i]** \u8868\u793a\u4ee5\u4ece\u6839\u8282\u70b9\u5230i\u53f7\u8282\u70b9\u7ecf\u8fc7\u7684\u5b57\u7b26\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u5355\u8bcd\u3002\n\n\u6bcf\u6b21\u6211\u4eec\u82e5\u60f3\u63d2\u5165\u4e00\u4e2a\u5355\u8bcd\uff0c\u53ea\u9700\u4ece\u5355\u8bcd\u7b2c\u4e00\u4f4d\u5f00\u59cb\u8bbf\u95ee\uff0c\u82e5trie[p][c]\uff01=0\uff0c\uff08p\u5373\u8282\u70b9\u4f4d\u7f6e\uff0cc\u5373\u67e5\u8be2\u5b57\u7b26\uff09\uff0c\u5373\u5df2\u6784\u5efa\u6811\uff0c\u5219\u67e5\u8be2\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u7ed3\u5408\u4e0a\u56fe\u7406\u89e3\uff1a\u5047\u8bbe\u6211\u4eec\u5df2\u6709ab\uff0ce\u6784\u6210\u7684\u5b57\u5178\u6811\uff0c\u63d2\u5165abc\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u627e\u5230\u9996\u5b57\u7b26a\uff0c\u67e5\u8be2\u6839\u8282\u70b91\u662f\u5426\u6709\u4e00\u6761trie[1][a]\u7684\u9053\u8def\u3002\u627e\u5230\u540e\u6765\u5230trie[1][a]\u901a\u5f80\u76842\u8282\u70b9\uff08ab\uff09\u7ee7\u7eed\u67e5\u627e\uff0c\u6210\u7acb\u3002\u5f53\u67e5\u5230c\u65f6\uff0c\u53d1\u73b0\u4e0d\u5b58\u5728trie[3][c]\uff0c\u5219\u5efa\u6811trie[3][c]=++cnt;\u7136\u540e\u5355\u8bcd\u67e5\u5b8c\uff0cvis[3]++\uff1b\u4ee5\u6b64\u7c7b\u63a8\u3002\u82e5\u67e5\u627e\u4e5f\u53ea\u9700\u4ece\u6839\u8282\u70b9\u67e5\u627e\u3002\n\n\n------------\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5206\u6790\u53ef\u77e5\uff0c\u82e5\u5355\u8bcda\u662fb\u7684\u524d\u7f00\uff0c\u5219b\u67e5\u627e\u8fc7\u7a0b\u4e2d\u5fc5\u5b9a\u7ecf\u8fc7a\uff0c\u5373a\u4e00\u5b9a\u5728b\u901a\u5f80\u6839\u8282\u70b9\u7684\u8def\u4e0a\u3002\u6240\u4ee5\u6784\u5b8c\u6811\u67e5\u627e\u65f6\uff1a\n1. \u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u975e\u7a7avis\u8282\u70b9\uff0c\u4ee3\u8868\u80af\u5b9a\u5305\u542b\u4e86\u53e6vis\u4e2a\u5355\u8bcd\uff08\u53ef\u80fd\u6709\u91cd\u590d\uff09\uff0c\u5c31\u8ba9ans\u52a0\u4e0avis\u503c\uff1b\n1. \u82e5\u5355\u8bcd\u7ed3\u675f\u4ecd\u7136\u5728\u5b57\u5178\u6811\u5185\uff0c\u5219\u4ee3\u8868\u5176\u4e00\u5b9a\u5728\u67d0\u4e00\u6216\u51e0\u5355\u8bcd\u5185\uff0c\u662f\u8fd9\u4e2a/\u4e9b\u5355\u8bcd\u524d\u7f00\u3002\u53ea\u9700\u8981\u5728\u5efa\u6811\u65f6\u52a0\u4e00\u4e2apre[p]\u6570\u7ec4\uff0c\u8868\u793a\u591a\u5c11\u4e2a\u5355\u8bcd\u7ecf\u8fc7\u4e86p\u8fd9\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5**\u4ece\u6839\u8282\u70b9\u5230p\u6784\u6210\u7684\u5355\u8bcd\u80af\u5b9a\u4e3apre[p]\u4e2a\u5355\u8bcd\u7684\u524d\u7f00**\uff1b\u8fd4\u56deans+=pre[p];\n1. \u82e5\u8d85\u51fa\u6784\u5efa\u7684\u5b57\u5178\u6811\uff0c\u5339\u914d\u5931\u8d25\uff0c\u5219\u53ea\u5305\u542b\u60c5\u51b5\u4e00\uff0c\u76f4\u63a5\u8fd4\u56deans\u5373\u53ef\uff1b  \n- \u8fd9\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u9047\u5230\u76f8\u540c\u7684\u5355\u8bcd\uff0c\u5373\u53c8\u6ee1\u8db31\u53c8\u6ee1\u8db32\uff0c\u5c31\u4f1a\u91cd\u590d\u3002\u6240\u4ee5\u7279\u5224\u4e00\u4e0b\u3002\n \n  _AC\u4ee3\u7801\u5982\u4e0b_ \n  \n```cpp\n#include<bits/stdc++.h>\n#define N 500025\nusing namespace std;\nchar l[N];int pre[N],cnt=1,vis[N],n,k,trie[N][50];//cnt\u9700\u8981\u4ece\u4e00\u5f00\u59cb\uff08\u6839\u8282\u70b9\u4f4d\u7f6e\uff09\ninline void in(char a[],int m)\n{\n\tint p=1;\n\tfor(int i=0;i<m*2;i+=2)//gets\u4f1a\u8bfb\u5165\u7a7a\u683c\uff0c\u53ea\u9700\u4ece0\u5f00\u59cb\u6bcf\u6b21\u540e\u79fb\u4e24\u4f4d\u5373\u53ef\uff08\u5f00\u59cb\u8bfb\u957f\u5ea6\u65f6\u591a\u8bfb\u4e86\u4e00\u4e2a\u7a7a\u683c\uff09\n\t{\n\t\tint c=a[i]-'0';\n\t\tif(!trie[p][c])trie[p][c]=++cnt;\n\t\tp=trie[p][c];//p\u503c\u66f4\u65b0\n\t\tpre[p]++; \n\t}\n\tvis[p]++;\n}\ninline int cheak(char a[],int m)\n{\n\tint p=1,ans=0;\n\tfor(int i=0;i<m*2;i+=2)\n\t{\n\t\tint c=a[i]-'0';\n\t\tif(!trie[p][c])return ans;\n\t\tp=trie[p][c];\n\t\tif(vis[p]&&i!=m*2-2)ans+=vis[p];//\u7279\u5224\n\t}\n\treturn ans+=pre[p];\n}\nint main()\n{\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint s;\n\t\tscanf(\"%d \",&s);\n\t\tgets(l);//\u672c\u4ee3\u7801\u6700\u91cd\u8981\u7684\u90e8\u5206\uff0c\u5173\u952e\u4e0e\u6838\u5fc3\uff01\u6ca1\u6709\u8fd9\u6761\u8bed\u53e5\uff0c\u8fd9\u4e2a\u4ee3\u7801\u7ec8\u5f52\u5e73\u5eb8\uff0c\u5b83\u8ba9\u8fd9\u4e2a\u4ee3\u7801\u72ec\u4e00\u65e0\u4e8c\uff0c\u5f97\u5230\u5347\u534e\uff01\uff08\u6ed1\u7a3d\uff09\n\t\tin(l,s);\n\t}\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint s;\n\t\tscanf(\"%d \",&s);\n\t\tgets(l);//\u518d\u6b21\u5347\u534e\uff0c\u8bf7\u96c6\u4f53\u8d77\u7acb\uff0c\u541f\u5531\u201cgets()\u5e26\u6765\u4e86\u5e0c\u671b\u3001\u751f\u673a\u4e0e\u5149\u660e\uff01\u201d\n\t\tprintf(\"%d\\n\",cheak(l,s));\n\t}\n\t\n}\n\n```\n",
        "postTime": 1579161717,
        "uid": 224346,
        "name": "SKTTIFaker",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P2922)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5229\u7528$Trie$\u6765\u7edf\u8ba1\u7b54\u6848\u7684\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u539f\u9898\u7684\u7b54\u6848\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u2014\u2014\u4fe1\u606f\u662f\u5bc6\u7801\u524d\u7f00\u7684\u548c\u5bc6\u7801\u662f\u4fe1\u606f\u524d\u7f00\u7684\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u6309\u7167\u5bc6\u7801\u5728$Trie$\u4e0a\u9762\u904d\u5386\u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u7ecf\u8fc7\u4e86\u51e0\u4e2a\u6d88\u606f\uff08\u5229\u7528\u8282\u70b9\u4e0a\u9762\u7684\u7edf\u8ba1\u6807\u8bb0\u6c42\u51fa\u6765\uff09\uff1b\u5982\u679c\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u8d70\u5230\u4e86$Trie$\u4e0a\u9762\u4e0d\u5b58\u5728\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u5f53\u524d\u7684\u5df2\u6709\u7684\u7b54\u6848\uff08\u4e4b\u540e\u80af\u5b9a\u4e0d\u4f1a\u6709\u65b0\u7684\u7b54\u6848\u4e86\uff09\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u5047\u5982\u6211\u4eec\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6210\u529f\u5730\u5c06\u5bc6\u7801\u904d\u5386\u5b8c\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bb0\u5f55\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u7528\u5728\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u4e0a\u7684\u6d88\u606f\u7684\u6570\u91cf\uff08\u8fd9\u4e2a\u53ef\u4ee5\u5728\u63d2\u5165\u6d88\u606f\u7684\u65f6\u5019\u6c42\u51fa\u6765\uff09\uff0c\u51cf\u53bb\u5f53\u524d\u8282\u70b9\u4e0a\u6d88\u606f\u7684\u6570\u91cf\u53bb\u91cd\uff08\u4e5f\u662f\u8282\u70b9\u4e0a\u9762\u7684\u7edf\u8ba1\u6807\u8bb0\uff09\uff0c\u4e8e\u662f\u8fd9\u4e00\u90e8\u5206\u5c31\u7ed3\u675f\u4e86\u3002~~\u597d\u5feb~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u628a\u4e24\u4e2a\u90e8\u5206\u7684\u7b54\u6848\u52a0\u8d77\u6765\u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\u5566\uff01\u65f6\u95f4\u662f$O(\\sum b+\\sum c)$\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n\nconst int MAXN = 500005;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar(); int f = 1;\n\twhile( s < '0' || '9' < s ){ f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ){ x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ), x = -x; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint message[MAXN];\nint trie[MAXN][2], cnt[MAXN], ending[MAXN];\nint N, M;\nint siz = 1;\n\nvoid insert( const int *str, const int len )\n{\n\tint p = 1, indx;\n\tfor( int i = 1 ; i <= len ; i ++ )\n\t{\n\t\tindx = str[i];\n\t\tif( ! trie[p][indx] ) trie[p][indx] = ++ siz;\n\t\tp = trie[p][indx], cnt[p] ++;\n\t}\n\tending[p] ++;\n}\n\nint query( const int *str, const int len )\n{\n\tint p = 1, indx, res = 0;\n\tfor( int i = 1 ; i <= len ; i ++ )\n\t{\n\t\tindx = str[i];\n\t\tif( ! trie[p][indx] ) return res;\n\t\tp = trie[p][indx], res += ending[p]; \n\t}\n\treturn res + cnt[p] - ending[p]; \n}\n\nint main()\n{\n\tint l;\n\tread( M ), read( N );\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tread( l );\n\t\tfor( int j = 1 ; j <= l ; j ++ ) read( message[j] );\n\t\tinsert( message, l );\n\t}\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tread( l );\n\t\tfor( int j = 1 ; j <= l ; j ++ ) read( message[j] );\n\t\twrite( query( message, l ) ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573537285,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message"
    },
    {
        "content": "\n\n\u9898\u610f\u8fd8\u662f\u633a\u597d\u61c2\u7684\uff0c\u5c31\u662f\u7ffb\u8bd1\u592a\u5751\u4e86\uff01\uff01\uff01\u4e0d\u628a\u6837\u4f8b\u89e3\u91ca\u548c\u8f93\u5165\u683c\u5f0f\u7ffb\u8bd1\u4e00\u4e0b\u3002\u849f\u84bb\u770b\u4e86\u597d\u4e45\u624d\u770b\u660e\u767d\u3002\n\n\u5927\u610f:\u7ed9\u5b9a\u51e0\u4e2a\u6a21\u5f0f\u4e32\u548c\u51e0\u4e2a\u6587\u672c\u4e32\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6587\u672c\u4e32\u8ba9\u4f60\u6c42\u6587\u672c\u4e32\u5b8c\u5168\u5305\u542b\u6a21\u5f0f\u4e32\uff0c\u6216\u6a21\u5f0f\u4e32\u5b8c\u5168\u5305\u542b\u6587\u672c\u4e32\uff0c\u52a0\u8d77\u6765\u7684\u4e2a\u6570\u3002\n\n\u53ef\u80fd\u89e3\u91ca\u7684\u8fd8\u4e0d\u662f\u592a\u660e\u767d\u3002\u6211\u628a\u6837\u4f8b\u89e3\u91ca\u4e0b\u3002\n\n\u4e00\u5171\u6709$4$\u4e2a\u6a21\u5f0f\u4e32 $5$\u4e2a\u6587\u672c\u4e32 \n\n\u5206\u522b\u4e3a\n```\n0 1 0 \n1 \n1 0 0 \n1 1 0 \n\n0 \n1 \n0 1 \n0 1 0 0 1 \n1 1 \n```\n\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6587\u672c\u4e32 $0$   \u7b2c$1$\u4e2a\u6a21\u5f0f\u4e32 $010$ \u5b8c\u5168\u5305\u542b\u5b83 \u6545\u8f93\u51fa$1$\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6587\u672c\u4e32$1$   \u7b2c$2,3,4$\u4e2a\u6a21\u5f0f\u4e32\u5305\u542b\u5b83 \u6545\u8f93\u51fa$3$\n\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u6587\u672c\u4e32 $01$   \u7b2c$1$\u4e2a\u6a21\u5f0f\u4e32 $010$ \u5b8c\u5168\u5305\u542b\u5b83 \u6545\u8f93\u51fa$1$\n\n\u5bf9\u4e8e\u7b2c\u56db\u4e2a\u6587\u672c\u4e32$1$   \u5b83\u5305\u542b\u4e86\u7b2c$1$\u4e2a\u6a21\u5f0f\u4e32$010$ \u6545\u8f93\u51fa$1$\n\n\u5bf9\u4e8e\u7b2c\u4e94\u4e2a\u6587\u672c\u4e32$11$   \u5b83\u5305\u542b\u4e86\u7b2c$2$\u4e2a\u6a21\u5f0f\u4e32\uff0c\u5e76\u88ab\u7b2c$4$\u4e2a\u6a21\u5f0f\u4e32\u5305\u542b\u6545\u8f93\u51fa$2$\n\n\u770b\u5230\u8fd9\u91cc\u4f60\u5927\u6982\u5bf9\u9898\u610f\u6709\u4e9b\u4e86\u89e3\u4e86\uff0c\u5373\uff1a\n\n#### \u5bf9\u4e8e\u6bcf\u4e2a\u6587\u672c\u4e32\u5b83\u7684\u7b54\u6848\u4e3a\uff1a\u5b83\u5b8c\u5168\u5305\u542b\u7684\u6a21\u5f0f\u4e32+\u5b8c\u5168\u5305\u542b\u5b83\u7684\u6a21\u5f0f\u4e32\n\n\u5bf9\u4e8e\u6a21\u5f0f\u4e32\u548c\u6587\u672c\u4e32\u5206\u522b\u5efa$trie$\u6811\uff0c\u5e76\u5206\u522b\u8dd1\u4e00\u904d\u6c42\u548c\uff1f\n\n### $NO$\n\n\u592a\u9ebb\u70e6\uff0c\u6211\u4eec\u6709\u66f4\u7b80\u4fbf\u7684\u505a\u6cd5\uff0c\u5728\u5efa$trie$\u7684\u540c\u65f6\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a$now$\u90fd\u50a8\u5b58\u4e00\u4e0b\u51fa\u73b0\u6b21\u6570\uff08$num$\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u5c3e\u4e5f\u50a8\u5b58\u4e00\u4e0b\u51fa\u73b0\u6b21\u6570\uff08$vis$\uff09\u3002\u8fd9\u4e24\u4e2a\u8981\u5206\u5f00\u50a8\u5b58\u3002\n\n\u5728\u7206\u641c\u65f6\uff0c\u6bcf\u5f53\u6211\u4eec\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9($now$) \u65f6\u65e0\u8bba\u5b83\u662f\u5426\u662f\u53f6\u8282\u70b9\u90fd\u8981\u52a0\u4e0a$vis$\uff08\u56e0\u4e3a$vis$\u9ed8\u8ba4\u4e3a$0$,\u5982\u679c\u5b83\u4e0d\u662f\u53f6\u8282\u70b9\u4e5f\u6ca1\u4ec0\u4e48\u5f71\u54cd\uff09\u3002\u5728\u641c\u5b8c\u65f6\uff08\u641c\u5b8c\u4e86\u6240\u6709\u70b9\u6216\u65e0\u6cd5\u7ee7\u7eed\u5339\u914d\uff09\u52a0\u4e0a $num$[$now$]\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint trie[500005][2],tot,n,m,num[500005],vis[500005],fa;\nint s[10005],ans;\nvoid make_trie(int s[10005],int len)//\u5efatrie\u6811\n{\n\tint now=0;\n\tfor(int i=1;i<=len;i++)//\u56e0\u4e3a\u6211\u662f\u4ece1\u5f00\u59cb\u7684\u6240\u4ee5i\u8981\u4ece1\u5f00\u59cb\u679a\u4e3e\n\t{\n\t\tint next=s[i];\n\t\tif(!trie[now][next])\n\t\t{\n\t\t\ttrie[now][next]=++tot;\n\t\t}\n\t\tnow=trie[now][next];\n\t\tnum[now]++;//\u6bcf\u4e2a\u70b9\u7684\u51fa\u73b0\u6b21\u6570\n\t}\n\tvis[now]++;//\u8bb0\u5f55\u6839\u8282\u70b9\n}\nvoid dfs(int now,int x)\n{\n\t\n\tif(x==fa+1||now==0&&x!=1)//\u5982\u679c\u641c\u5b8c\u4e86\u7684\u8bdd\n\t{\n\t\tans+=num[now];//\u5982\u679c\u6709\u6a21\u5f0f\u4e32\u5305\u542b\u5b83\n\t\treturn ;\n\t}\n\tans+=vis[now];//\u5982\u679c\u5b83\u5305\u542b\u4e86\u6a21\u5f0f\u4e32\n\tdfs(trie[now][s[x]],x+1);\t\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint ai;\n\t\tscanf(\"%d\",&ai);\n\t\tfor(int j=1;j<=ai;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&s[j]);\n\t\t}\n\t\tmake_trie(s,ai);//\u5efa\u6811\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tans=0;\n\t\tmemset(s,0,sizeof(s));//\u8fd9\u91cc\u5199\u4e0d\u5199\u65e0\u6240\u8c13\n\t\t\n\t\tscanf(\"%d\",&fa);\n\t\tfor(int j=1;j<=fa;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&s[j]);\n\t\t}\n\t\tdfs(0,1);//\u56e0\u4e3a\u6211\u662f\u4ece1\u5f00\u59cb\u7684\u6240\u4ee5x\u4e5f\u8981\u4ece1\u5f00\u59cb\u679a\u4e3e\n\t\tprintf(\"%d\\n\",ans);\n\t}\n}\n```\n",
        "postTime": 1565253150,
        "uid": 53852,
        "name": "\u5f26\u5dfb\u3053\u3053\u308d",
        "ccfLevel": 0,
        "title": "[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message"
    },
    {
        "content": "\u65e2\u7136\u662f\u8bfb\u5165\u5b57\u7b26\u4e32\u7136\u540e\u4e0e\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u5bf9\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u5efa\u7acbTrie\u6811\uff0c\u8fd9\u70b9\u6bcb\u5eb8\u7f6e\u7591\u3002\n\n\u90a3\u4e48\u5c31\u662f\u7edf\u8ba1\u6709\u591a\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4ed6\u7684\u524d\u7f00\u51fa\u73b0\u4ee5\u53ca\u8be5\u5b57\u7b26\u4e32\u662f\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u90a3\u4e48\u5c31\u4e0e\u7535\u8bdd\u7c3f\u4e00\u9898\u7c7b\u4f3c\u4e86\u3002\n\n\u6211\u8bb0\u5f55\u7ecf\u8fc7\u8be5\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u4ee5\u53ca\u4ee5\u8be5\u70b9\u4f5c\u4e3a\u7ed3\u675f\u70b9\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u6700\u540e\u7b54\u6848\u5c31\u662f\u8fd9\u6761\u8def\u5f84\u4e0a\u7ed3\u675f\u70b9\u7684\u6570\u91cf\u4e4b\u548c+\u7ecf\u8fc7\u6700\u540e\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u91cf\uff08\u6ce8\u610f\u6211\u7684pass\u8bb0\u5f55\u7684\u4e0d\u5305\u62ec\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u4e00\u4e2a\u6253\u7684\u662fend\u6807\u8bb0\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e6+10;\nconst int LEN=1e4+10;\n\nint n,q;\nint siz,k,a[LEN];\nstruct Trie{\n\tint pass,end;\n\tint son[2];\n}tr[MAXN];\n\nint Read(){\n\tint i=0,f=1;\n\tchar c;\n\tfor(c=getchar();(c>'9'||c<'0')&&c!='-';c=getchar());\n\tif(c=='-')\n\t  f=-1,c=getchar();\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t  i=(i<<3)+(i<<1)+c-'0';\n\treturn i*f;\n}\n\nvoid insert(){             //\u63d2\u5165\u64cd\u4f5c \n\tfor(int i=1;i<=k;++i){\n\t\ta[i]=Read();\n\t}\n\tint last=0;\n\tfor(int i=1;i<=k;++i){\n\t\ttr[last].pass++;  //\u628a\u7ecf\u8fc7\u7684\u70b9\u6807\u8bb0 \n\t\tif(!tr[last].son[a[i]]){\n\t\t\ttr[last].son[a[i]]=++siz;\n\t\t\tmemset(tr[siz].son,0,sizeof(tr[siz].son));\n\t\t}\n\t\tlast=tr[last].son[a[i]];\n\t}\n\ttr[last].end++;       //\u7ed3\u675f\u70b9\u6807\u8bb0 \n}\n\nint query(){\n\tint ret=0;\n\tfor(int i=1;i<=k;++i){\n\t\ta[i]=Read();\n\t}\n\tint last=0;\n\tfor(int i=1;i<=k;++i){\n\t\tret+=tr[last].end;\n\t\tif(!tr[last].son[a[i]]){\n\t\t\treturn ret;\n\t\t}\n\t\tlast=tr[last].son[a[i]];\n\t}\n\tret+=tr[last].pass+tr[last].end;//\u7edf\u8ba1\u6700\u540e\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7ed3\u675f\u70b9\u4ee5\u53ca\u7ecf\u8fc7\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u91cf \n\treturn ret;\n}\n\nint main(){\n\tn=Read(),q=Read();\n\tfor(int i=1;i<=n;++i){\n\t\tk=Read();\n\t\tinsert();\n\t}\n\tfor(int i=1;i<=q;++i){\n\t\tk=Read();\n\t\tcout<<query()<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1545459980,
        "uid": 31639,
        "name": "Thosaka_Forest",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "```\n//01 Trie\n\n//\u8bb0\u5f55\u7ecf\u8fc7\u8be5\u8def\u5f84\u7684\u4fe1\u606f\u6761\u6570cnt\uff08\u4e0d\u5728\u8fd9\u513f\u7ed3\u675f\uff0c\u4e0d\u4e0e\u8be5\u8def\u5f84\u76f8\u540c\uff09,\u4ee5\u53ca\u5728\u8fd9\u513f\u7ed3\u675f\u7684\u4fe1\u606f\u6761\u6570sum\uff08\u4e0e\u8be5\u8def\u5f84\u76f8\u540c\u7684\u4fe1\u606f\u6761\u6570\uff09 \n//\u90a3\u4e48\uff0c\u5728query\u7684\u65f6\u5019\uff0c\n//ans+=\u6cbf\u7ebf\u8def\u5f84\u5404\u70b9\u7684sum \n//\u5982\u679c\u5bc6\u7801\u80fd\u5339\u914d\u6210\u529f\uff0c\u5c31\u8ba9ans+=root->cnt\n//\u4e5f\u5c31\u662f\u52a0\u4e0a\u4e0e\u8be5\u5bc6\u7801\u524d\u7f00\u76f8\u540c\u7684\u4fe1\u606f\u6761\u6570\n//\u5982\u679c\u5bc6\u7801\u4e0d\u80fd\u5339\u914d\u6210\u529f \n//\u5c31\u76f4\u63a5\u8fd4\u56deans\u5c31\u53ef\u4ee5\u4e86 \n\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int N=5e5+5;\n\nint n,m,len;\nstruct TREE\n{\n\tint num;\n\tint cnt,sum;\n\tTREE *son[2];\n}tree[N];\n\ntypedef TREE* Tree;\nTree Root,now_node,null;\n\ninline int read()\n{\n\tchar c=getchar();int num=0;\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\tnum=num*10+c-'0';\n\treturn num;\n}\n\nvoid init()\n{\n\tRoot=now_node=null=tree;\n\tnull->son[1]=null->son[0]=null;\n}\n\ninline Tree new_node(int num)\n{\n\t++now_node;\n\tnow_node->num=num;\n\tnow_node->son[0]=now_node->son[1]=null;\n\treturn now_node;\n}\n\nvoid insert(Tree root)\t\t//\u63d2\u5165\u4fe1\u606f \n{\n\tfor(int i=1,a;i<=len;++i)\n\t{\n\t\ta=read();\n\t\tif(root->son[a]==null)\n\t\t\troot->son[a]=new_node(a);\n\t\troot=root->son[a];\n\t\t++(root->cnt);\t\t//\u7ecf\u8fc7\u8be5\u8def\u5f84\u7684\u4fe1\u606f\u6761\u6570+1 \n\t}\n\t--(root->cnt);\t\t//\u51cf\u53bb\u5b8c\u5168\u4e00\u6837\u7684 \n\t++(root->sum);\t\t//\u8be5\u6761\u4fe1\u606f+1 \n}\n\nint query(Tree root)\n{\n\tint ans=0;\n\tbool ok=1;\n\tfor(int i=1,a;i<=len;++i)\n\t{\n\t\ta=read();\n\t\tif(ok==0||root->son[a]==null)\t//\u4e0d\u8981\u63d0\u524dreturn\uff0c\u56e0\u4e3a\u5bc6\u7801\u8fd8\u6ca1\u8bfb\u5b8c \n\t\t{\n\t\t\tok=0;\n\t\t\tcontinue;\n\t\t}\n\t\troot=root->son[a];\n\t\tans+=root->sum;\t\t//\u52a0\u4e0a\u6bd4\u5bc6\u7801\u77ed\u7684\u4fe1\u606f\u6761\u6570\uff0c\u4ed6\u4eec\u5b8c\u5168\u5305\u542b\u5728\u5bc6\u7801\u91cc\u6216\u8005\u4e0e\u5bc6\u7801\u76f8\u540c \n\t}\n\tif(ok)\t//\u5bc6\u7801\u5339\u914d\u6210\u529f \n\t\treturn ans+root->cnt;\t\t//\u52a0\u4e0a\u4e0e\u5bc6\u7801\u524d\u7f00\u76f8\u540c\u7684\u4fe1\u606f\u6761\u6570 \n\treturn ans;\n}\n\nint main()\n{\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n//\tfreopen(\"233.out\",\"w\",stdout);\n\tinit();\n\tm=read(),n=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tlen=read();\n\t\tinsert(Root);\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tlen=read();\n\t\tprintf(\"%d\\n\",query(Root));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1525049100,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u521a\u63a5\u89e6\u5b57\u5178\u6811\uff0c\u8fd9\u662f\u4e00\u9053\u5b57\u5178\u6811\u7684\u7edf\u8ba1\n\n\u5bf9\u4e8e\u4fe1\u606f\u7684\u524d\u7f00\uff0c\u7edf\u8ba1\u8def\u5f84\u4e0a\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\n\n\u5bf9\u4e8e\u5927\u4e8e\u4fe1\u606f\u957f\u5ea6\u7684\u90e8\u5206\uff0c\u7edf\u8ba1\u5b50\u6811\u4e0a\u7684\u5355\u8bcd\u6570\u7684\u603b\u548c\u3002\n\n\u90a3\u8981\u600e\u4e48\u505a\u5462\uff1f\u5f53\u7136\u662f\u9009\u62e9\u6a21\u62df\u5566Orz\n\n\nsize\u8868\u793a\u5b50\u6811\u548c\uff0cexist\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u6b21\u6570\uff08\u9898\u76ee\u7684\u4fe1\u606f\u662f\u53ef\u91cd\u590d\u7684\uff09\u3002\n\n\u5efa\u6811\u7684\u65f6\u5019\u7edf\u8ba1\u51faexist\uff0c\u7136\u540e\u7528\u4e00\u4e2apushup\u51fd\u6570\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u5b50\u6811\u7684\u548c\uff1b\n\n\u6700\u540e\u5c31\u7528\u4e0a\u9762\u8bf4\u7684\u89c4\u5219\u7b97\u51fa\u7b54\u6848\u5c31\u884c\u5566\u3002\n\n\n\n\n```cpp\n#include<iostream>\nusing namespace std;\n#include<cstdio>\n#include<cstring>\nint n,m,ans;\nstruct node{\n    int son[2],size,exist;\n}trie[500010]; int ptr;\nvoid build(string temp,int pc,int now){\n    if(pc >= temp.length()){\n        trie[now].exist++; return ;\n```\n}//\u5230\u7ed3\u5c3e\u5566\n\n```cpp\n    for(int i = 0;i <= 1;i++)\n        if(trie[now].son[i] && i == temp[pc]-'0'){\n            build(temp,pc+1,trie[now].son[i]);\n            return ;\n        }\n        //\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n    ptr++;\n    trie[now].son[temp[pc]-'0'] = ptr;\n    build(temp,pc+1,ptr);\n}\nint init(int now){\n    int ans = trie[now].exist;\n    for(int i = 0;i <= 1;i++) if(trie[now].son[i]) ans += init(trie[now].son[i]);\n    trie[now].size = ans;\n    return ans;\n}\nvoid find(string temp,int pc,int now){\n    if(pc >= temp.length()){\n        ans += trie[now].size; return ;//\u5b50\u6811\u7684\u548c\n    }\n    ans += trie[now].exist;//\u8def\u5f84\u4e0a\u7684\u548c\n    for(int i = 0;i <= 1;i++) \n        if(trie[now].son[i] && i == temp[pc]-'0')\n            find(temp,pc+1,trie[now].son[i]);\n}\nint main(){\n    cin>>m>>n;\n    for(int i = 1;i <= m;i++){\n        string t; int l; scanf(\"%d\",&l);\n        for(int j = 1;j <= l;j++){\n            int temp; scanf(\"%d\",&temp); t += temp+'0';\n```\n}//\u5148\u628a\u6570\u5b57\u6362\u6210\u5b57\u7b26\u4e32\u3002\n```cpp\n        build(t,0,0);\n    }\n    init(0);\n    for(int i = 1;i <= n;i++){\n        string t; int l; ans = 0; scanf(\"%d\",&l);\n        for(int j = 1;j <= l;j++){\n            int temp; scanf(\"%d\",&temp); t += temp+'0';\n        }\n        find(t,0,0); printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1499495129,
        "uid": 28344,
        "name": "chauchat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u9898\u76ee\u53ef\u4ee5\u53d1\u73b0,\u8fd9\u662f\u4e00\u9053\u5178\u578b\u7684Trie\u6811\u9898\u76ee(\u5e9f\u8bdd)\n\n\u6240\u505a\u7684\u6b65\u9aa4\u53ea\u6709\u4e09\u4e2a:\n\n1:\u5efa\u6811\n\n2:\u67e5\u627e\u6bd4\u5bc6\u7801\u77ed\u6216\u7b49\u4e8e\u5bc6\u7801\u7684\u4fe1\u606f\n\n3:\u67e5\u627e\u6bd4\u5bc6\u7801\u957f\u7684\u4fe1\u606f\n\n\n0:\u8bfb\u5165\u4f18\u5316\n\n```cpp\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n```\n1:\u5efa\u6811\n\n\u5efa\u6811\u5c31\u662f\u5efa\u4e00\u9897\u4e8c\u8fdb\u5236\u7684Trie\u6570\n\n1.1:\u8fd9\u91cc\u5b8c\u5168\u53ef\u4ee5\u4e00\u8fb9\u5efa\u6811\u4e00\u8fb9\u8bfb\u53d6,\u4e0d\u7528\u50a8\u5b58\n\n```cpp\nvoid addMsg(int length,int id=0)\n{\n    if(!length)\n    {\n        ++T[id].leave;\n        return;\n    }\n    int t=read();\n    //scanf(\"%d\",&t);\n    if(T[id].child[t]==0)\n        T[id].child[t]=Tsize++;\n    addMsg(length-1,T[id].child[t]);\n    ++T[id].downNodeCnt;\n}\n```\n2:\u67e5\u627e\u6bd4\u5bc6\u7801\u77ed\u6216\u7b49\u4e8e\u5bc6\u7801\u7684\u4fe1\u606f\n\n\u6ca1\u8bbe\u4e48\u597d\u8bf4\u7684,Trie\u6811\u57fa\u672c\u64cd\u4f5c,\u4e00\u8fb9\u6309\u7167\u5bc6\u7801\u8bfb\u5165\u4e00\u8fb9\u7d2f\u79ef\u53f6\u8282\u70b9\u6570\u91cf\n\n```cpp\nint searchMsg(int length,int id=0)\n{\n    int t,ans=0;\n    if(T[id].leave!=0)\n        ans+=T[id].leave;\n    if(length==0)\n        return T[id].downNodeCnt+ans;\n    //scanf(\"%d\",&t);\n    t=read();\n    if(T[id].child[t]!=0)\n        return ans+searchMsg(length-1,T[id].child[t]);\n    else\n    {\n        --length;\n        while((length--)>0)\n            read();\n        return ans;\n    }\n}\n```\n3:\u67e5\u627e\u6bd4\u5bc6\u7801\u957f\u7684\u4fe1\u606f\n\n3.1 \u76f4\u63a5\u7684\u60f3\u6cd5\u662f\u641c\u7d22\u5230\u5934\u540e\u91cd\u65b0DFS\u4e00\u6ce2\n\n\u6ca1\u9519TLE\u4e86\n\n3.2 \u540e\u6765\u53d1\u73b0\u641c\u7d22\u51fa\u6765\u7684\u5c31\u662f\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf,\u800c\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\u662f\u53ef\u4ee5\u5728#1\u65f6\u9884\u5904\u7406\u7684!\n\n\u5df2\u7ecf\u5728\u4e0a\u9762\u4e86\u4e0d\u8fc7\u8fd8\u662f\u53d1\u4e00\u4e0b\n\n```cpp\n    ++T[id].downNodeCnt;\n```\n\n4\u5168\u90e8\u4ee3\u7801\n\n```cpp\n/**\nLuogu P2922\nSecret Message\n*/\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cstdlib>\n\n#include <cmath>\n#include <cctype>\n#include <string>\n#include <cstring>\n\n#include <algorithm>\n#include <queue>\n#include <stack>\n\nusing namespace std;\nstruct Node\n{\n    int leave;\n    int downNodeCnt;\n    int child[2];\n} T[1000100];//!Trie\u6811\u5b9a\u4e49\nint Tsize=1;\ninline int read()//\u8bfb\u5165\u4f18\u5316\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid addMsg(int length,int id=0)\n{\n    if(!length)\n    {\n        ++T[id].leave;\n        return;\n    }\n    int t=read();\n    //scanf(\"%d\",&t);\n    if(T[id].child[t]==0)\n        T[id].child[t]=Tsize++;\n    addMsg(length-1,T[id].child[t]);\n    ++T[id].downNodeCnt;//\u9884\u5904\u7406\n}\n\nint searchMsg(int length,int id=0)\n{\n    int t,ans=0;\n    if(T[id].leave!=0)\n        ans+=T[id].leave;\n    if(length==0)\n        return T[id].downNodeCnt+ans;\n    //scanf(\"%d\",&t);\n    t=read();\n    if(T[id].child[t]!=0)\n        return ans+searchMsg(length-1,T[id].child[t]);\n    else\n    {\n        --length;\n        while((length--)>0)\n            read();\n        return ans;\n    }\n\n}\n\nint M,N;\nint main()\n{\n    M=read();\n    N=read();\n    int len;\n    for(int i=1; i<=M; ++i)\n    {\n        len=read();\n        addMsg(len);\n    }\n    for(int i=1; i<=N; ++i)\n    {\n        len=read();\n        printf(\"%d\\n\",searchMsg(len));\n    }\n    return 0;\n}\n```\n\n5 \u7ed3\u679c\n\n\u5927\u725b\u5206\u7ad9 O2 170ms\n\n\u4e3b\u7ad9              230ms\n\n\u62ff\u5230\u5f53\u524d#1\n\n\nPS \u672c\u9898\u7b2c\u4e00\u7bc7\u9898\u89e3\u6709\u70b9\u5c0f\u6fc0\u52a8\n\n\u7ba1\u7406\u5458\u5927\u4f6c\u7ed9\u8fc7\u554a~\n",
        "postTime": 1493981950,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2922 \u3010[USACO08DEC]\u79d8\u5bc6\u6d88\u606fSecret Message\u3011"
    }
]