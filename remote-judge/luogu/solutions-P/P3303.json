[
    {
        "content": "\u53cd\u8fc7\u6765\u60f3\uff1a\u5bf9\u4e8e\u4e00\u4e2a$i$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a$j$\u6ee1\u8db3$f(j)=i$\uff08\u4e0b\u9762\u8bb0\u4f5c$c(i)$\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5728$f(j)=i$\u4e2d\uff0c\u6570$i$\u5fc5\u7136\u53ef\u4ee5\u5206\u89e3\u6210$2^a\\times3^b\\times5^c\\times7^d$\u7684\u5f62\u5f0f\u3002\n\n\u6240\u4ee5\u867d\u7136$N\\leq 10^{12}$\uff0c\u4f46\u662f\u6ee1\u8db3$c(i)>0$\u7684$i$\u662f\u4e0d\u591a\u7684\uff08\u5b9e\u6d4b\u6700\u591a$14672$\u4e2a\uff09\u3002\n\n\u56e0\u6b64\u8bbe\u72b6\u6001\uff1a$dp[i,j,0/1]$\u8868\u793a\u4ece\u4f4e\u5230\u9ad8\u4f4d\u5230\u4e86\u7b2c$i$\u4f4d\uff0c\u5404\u4f4d\u6570\u7684\u79ef\u4e3a$j$\uff08\u9700\u8981\u79bb\u6563\u5316\uff09\uff0c\u7b2c\u4e09\u7ef4\u8868\u793a\u5c0f\u4e8e\u7b49\u4e8e/\u5927\u4e8e$N$\u7684\u4ece\u4f4e\u5230\u9ad8\u524d$i$\u4f4d\u3002\n\n\u8f6c\u79fb\u5373\u679a\u4e3e\u7b2c$i$\u4f4d\u6570$k$\uff0c\u5982\u679c$k|j$\uff0c\n\n\u90a3\u4e48$dp[i,j,0/1]$\u53ef\u4ee5\u4ece$dp[i-1,\\frac j k,0/1]$\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u7b97\u51fa\u6240\u6709$>0$\u7684$c(i)$\u3002\n\n\u56de\u5230\u9898\u76ee\uff0c\u53ef\u4ee5\u5f97\u51fa\uff0c\u4f4d\u7f6e$(x,y)$\u7684\u91d1\u5b50\u6570\u76ee\u4e3a$c(x)\\times c(y)$\u3002\n\n\u6240\u4ee5\u8981\u6c42\u7684\u5c31\u662f$c(x)\\times c(y)$\u7684\u524d$K$\u5927\u503c\u4e4b\u548c\u3002\n\n\u7531\u4e8e$K$\u8f83\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06$c$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528\u5927\u6839\u5806\u7ef4\u62a4$t$\uff08\u6709\u6548\u7684$c(x)$\u7684\u4e2a\u6570\uff09\u4e2a\u6307\u9488\uff08\u5982\u679c\u7b2c$i$\u4e2a\u6307\u9488\u5728$j$\u4f4d\u7f6e\uff0c\u5219\u5173\u952e\u5b57\u4e3a$c(i)\\times c(j)$\uff0c\u8fd9\u91cc\u7684$c$\u662f\u6392\u5e8f\u540e\u7684\uff0c\u56e0\u6b64$c(i)$\u5728\u8fd9\u91cc\u662f\u6307\u6392\u5e8f\u540e\u7b2c$i$\u5c0f\u7684$c$\u503c\uff09\uff0c\u6bcf\u6b21\u8d2a\u5fc3\u9009\u62e9\u5173\u952e\u5b57\u6700\u5927\u7684\u6307\u9488\u5411\u5de6\u79fb\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <map>\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define For(i, a, b) for (i = a; i <= b; i++)\nusing namespace std;\ntypedef long long ll;\nconst int N = 15, M = 15000, MX = 1e9 + 7;\nll n, otz[M], f[N][M][2], sum[M];\nint K, QAQ, a[N], ans;\nmap<ll, int> orz;\nstruct cyx\n{\n\tint id, pos;\n\tcyx() {}\n\tcyx(int _x, int _y) :\n\t\tid(_x), pos(_y) {}\n\tfriend inline bool operator < (cyx a, cyx b)\n\t{\n\t\treturn sum[a.id] * sum[a.pos] < sum[b.id] * sum[b.pos];\n\t}\n};\npriority_queue<cyx> pq;\nvoid DP(ll num)\n{\n\tint i, j, k, n = 0;\n\twhile (num) a[++n] = num % 10, num /= 10;\n\tFor (k, 1, 9)\n\t\tf[1][orz[k]][k > a[1]]++;\n\tFor (i, 2, n) For (j, 1, QAQ) For (k, 1, 9)\n\t{\n\t\tll q = otz[j]; if (q % k != 0) continue;\n\t\tint h = orz[q / k];\n\t\tif (k < a[i]) f[i][j][0] += f[i - 1][h][0] + f[i - 1][h][1];\n\t\telse if (k > a[i])\n\t\t\tf[i][j][1] += f[i - 1][h][0] + f[i - 1][h][1];\n\t\telse f[i][j][0] += f[i - 1][h][0],\n\t\t\tf[i][j][1] += f[i - 1][h][1];\n\t}\n\tFor (j, 1, QAQ)\tFor (i, 1, n)\n\t\tsum[j] += f[i][j][0] + (i == n ? 0 : f[i][j][1]);\n\tsort(sum + 1, sum + QAQ + 1);\n\tK = min(1ll * K, 1ll * QAQ * QAQ);\n}\nint main()\n{\n\tint i, j, k, h;\n\tll x = 1;\n\tcin >> n >> K;\n\tFor (i, 0, 39)\n\t{\n\t\tll t = x;\n\t\tFor (j, 0, 25)\n\t\t{\n\t\t\tll r = x;\n\t\t\tFor (k, 0, 17)\n\t\t\t{\n\t\t\t\tll w = x;\n\t\t\t\tFor (h, 0, 14)\n\t\t\t\t{\n\t\t\t\t\totz[orz[x] = ++QAQ] = x;\n\t\t\t\t\tx *= 7;\n\t\t\t\t\tif (x > n) break;\n\t\t\t\t}\n\t\t\t\tx = w * 5;\n\t\t\t\tif (x > n) break;\n\t\t\t}\n\t\t\tx = r * 3;\n\t\t\tif (x > n) break;\n\t\t}\n\t\tx = t * 2;\n\t\tif (x > n) break;\n\t}\n\tDP(n);\n\tFor (i, 1, QAQ) pq.push(cyx(i, QAQ));\n\tFor (i, 1, K)\n\t{\n\t\tcyx u = pq.top(); pq.pop();\n\t\tans = (ans + sum[u.id] * sum[u.pos] % MX) % MX;\n\t\tif (u.pos == 1) continue;\n\t\tpq.push(cyx(u.id, u.pos - 1));\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1522675865,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "\n\u5230\u849f\u84bb\u65e0\u4eba\u95ee\u6d25\u7684\u5c0f\u535a\u5ba2\u56ed\u770b\u770b![/kel](https://cdn.luogu.com.cn/upload/pic/62226.png)$\\to$ [$\\large\\textit{George1123}$](https://www.cnblogs.com/George1123/p/13473544.html)\n\n---\n## \u9898\u9762\n\n> [SDOI2013 \u6dd8\u91d1](https://www.luogu.com.cn/problem/P3303)\n\n> \u6709\u4e00\u4e2a $X$\u3001$Y$ \u8f74\u5750\u6807\u8303\u56f4\u4e3a $1\\sim n$ \u7684\u8303\u56f4\u7684\u65b9\u9635\uff0c\u6bcf\u4e2a\u70b9\u4e0a\u6709\u5757\u9ec4\u91d1\u3002\u4e00\u9635\u98ce\u6765 $(x,y)$ \u4e0a\u7684\u9ec4\u91d1\u5230\u4e86 $(f(x),f(y))$\uff0c$f(x)$ \u4e3a $x$ \u5404\u4f4d\u4e0a\u6570\u5b57\u7684\u4e58\u79ef\uff0c\u5982\u679c\u9ec4\u91d1\u98d8\u51fa\u65b9\u9635\u5c31\u6ca1\u4e86\u3002\u6c42\u5728 $k$ \u4e2a\u683c\u5b50\u4e0a\u91c7\u96c6\u9ec4\u91d1\u6700\u591a\u53ef\u4ee5\u91c7\u96c6\u7684\u9ec4\u91d1\u6570\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le n\\le 10^{12}$\uff0c$k\\le \\min(n^2,10^5)$\u3002\n\n---\n## \u849f\u84bb\u8bed\n\n\u849f\u84bb\u8ddf\u7740 $\\it srf$ \u5927\u5e08\u7684\u65e5\u62a5\u6765\u505a\u8fd9\u9898\uff0c\u7136\u540e\u53d1\u73b0\u81ea\u5df1\u7684\u88f8\u4ee3\u7801\u8dd1\u5f97\u6bd4\u9898\u89e3\u90fd\u5feb\uff0c\u65b9\u6cd5\u4e5f\u6bd4\u8f83\u795e\u5947\uff0c\u4e8e\u662f\u6765\u8ddf\u5de8\u4f6c\u4eec\u8bb2\u8bb2\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u9996\u5148\u4f17\u6240\u5468\u77e5\uff0c\u5bf9\u4e8e $1\\le i\\le 10^{12}$\uff0c$f(i)$ \u53ea\u6709 $8282$ \u79cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u627e\u51fa\u8fd9 $8282$ \u79cd $f(i)$\uff0c\u849f\u84bb\u6709\u4e09\u79cd\u65b9\u6cd5\uff1aset\u3001\u679a\u4e3e\u8d28\u56e0\u6570\u548c\u6570\u4f4d dp\u3002\n\n\u4e3a\u4e86\u4f18\u5316\u53ef\u4ee5\u7528\u6570\u4f4d dp\uff08\u8fd9\u662f\u7b2c\u4e00\u6b21\u6570\u4f4d dp\uff09\uff0c\u6b63\u597d\u6c42\u51fa $1\\sim n$ \u7684\u6240\u6709 $f(i)\\not=0$\uff1a\n\n```cpp\nint dn,d[13],cnt=0;\nll t[N]; unordered_map<ll,int> nt;\nbool vis[13][N];\nvoid init(int w,ll now,bool ava){ //w\uff1a\u4f4d now\uff1a\u4e58\u79ef ava=true\uff1a\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u6570\u5b57\n\tif(!~w){if(!nt.count(now)) nt[t[cnt]=now]=cnt,cnt++;return;}\n\tif(vis[w][nt[now]]) return;\n\tvis[w][nt[now]]=true;\n\tint up=ava?9:d[w];\n\tfor(int i=1;i<=up;i++) init(w-1,now*i,true||i<up); \n}\nvoid INIT(){\n\twhile(n) d[dn++]=n%10,n/=10;\n\tfor(int i=0;i<=dn;i++) init(i-1,1,i<dn);\n}\n```\n\n\u7136\u540e\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\uff1a\u6c42\u6bcf\u79cd $f(i)$ \u6709\u591a\u5c11\u4e2a $i$\u3002\n\n\u849f\u84bb\u539f\u6765\u7684\u505a\u6cd5\u662f\u5bf9\u6bcf\u79cd $f(i)$ \u6765\u4e00\u6b21\u6570\u4f4d dp\uff0c\u77ac\u95f4\u88ab TLE \u6253\u8138\uff0c\u4e8e\u662f\u849f\u84bb\u60f3\u51fa\u4e86\u4e00\u4e2a\u4e0d\u540c\u4e8e\u522b\u7684\u5de8\u4f6c\u7684\u505a\u6cd5\uff1a\n\n\u8bb0 $f_{w,now}$ \u8868\u793a\u5230\u7b2c $w$ \u4f4d\uff0c\u5269\u4e0b $w$ \u4f4d\u4e58\u79ef\u4e3a $now$ \u7684\u65b9\u6848\u6570\u3002\n\n\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u8f6c\u79fb\uff0cdp \u4e2d\u4f1a\u7528\u5230\u9664\u6cd5\u3002\n\n```cpp\nll f[13][N];\nll dp(int w,int now,bool ava){ //w\uff1a\u4f4d now\uff1a\u5269\u4e0b\u671f\u671b\u4e58\u79ef ava=true\uff1a\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u6570\u5b57\n\tif(!~w) return t[now]==1;\n\tif(ava&&~f[w][now]) return f[w][now];\n\tint up=ava?9:d[w]; ll res=0;\n\tfor(int i=1;i<=up;i++)if(t[now]%i==0)\n\t\tres+=dp(w-1,nt[t[now]/i],ava||i<up);\n\tif(ava) f[w][now]=res;\n\treturn res;\n}\nvoid DP(){\n\tmemset(f,-1,sizeof f);\n\tfor(int i=0;i<cnt;i++)\n\t\tfor(int j=1;j<=dn;j++) a[i]+=dp(j-1,i,j<dn); // ai \u662f\u6bcf\u79cd fi \u51fa\u73b0\u6b21\u6570\n}\n```\n\n\u7136\u540e\u7ed9 $a_i$ \u6392\u4e2a\u5e8f\uff0c\u7528\u5806\u7ef4\u62a4\u627e\u6700\u5927 $k$ \u4e58\u79ef\u5373\u53ef\uff0c\u8003\u8651\u5230\u76f8\u4e58\u53ef\u80fd\u4f1a\u7206 long long\uff0c\u849f\u84bb\u7528\u4e86\u9664\u6cd5\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(8282*12*10)$\u3002**\n\n---\n## \u4ee3\u7801\n\n\u5f88\u660e\u663e\u849f\u84bb\u7684\u9898\u89e3\u90fd\u662f\u5e9f\u8bdd\uff0c\u53ea\u597d\u653e\u4ee3\u7801\u4e86![/kk](https://cdn.luogu.com.cn/upload/pic/62227.png)\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair(a,b)\n#define x first\n#define y second\n#define be(a) a.begin()\n#define en(a) a.end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\nconst int inf=0x3f3f3f3f;\nconst ll INF=0x3f3f3f3f3f3f3f3f;\n\n//Data\nconst int N=8282;\nconst int mod=1e9+7;\nll n,a[N];\nint k,nex[N],ans;\nstruct cmp{\n\tbool operator()(pair<int,int> p,pair<int,int> q){\n\t\treturn 1.*a[p.x]/a[q.y]<1.*a[q.x]/a[p.y];\n\t}\n};\npriority_queue<pair<int,int>,vector<pair<int,int>>,cmp> q;\n\n//Digitdp\nint dn,d[13],cnt=0;\nll t[N]; unordered_map<ll,int> nt;\nbool vis[13][N];\nvoid init(int w,ll now,bool ava){\n\tif(!~w){if(!nt.count(now)) nt[t[cnt]=now]=cnt,cnt++;return;}\n\tif(vis[w][nt[now]]) return;\n\tvis[w][nt[now]]=true;\n\tint up=ava?9:d[w];\n\tfor(int i=1;i<=up;i++) init(w-1,now*i,true||i<up); \n}\nvoid INIT(){\n\twhile(n) d[dn++]=n%10,n/=10;\n\tfor(int i=0;i<=dn;i++) init(i-1,1,i<dn);\n}\nll f[13][N];\nll dp(int w,int now,bool ava){\n\tif(!~w) return t[now]==1;\n\tif(ava&&~f[w][now]) return f[w][now];\n\tint up=ava?9:d[w]; ll res=0;\n\tfor(int i=1;i<=up;i++)if(t[now]%i==0)\n\t\tres+=dp(w-1,nt[t[now]/i],ava||i<up);\n\tif(ava) f[w][now]=res;\n\treturn res;\n}\nvoid DP(){\n\tmemset(f,-1,sizeof f);\n\tfor(int i=0;i<cnt;i++)\n\t\tfor(int j=1;j<=dn;j++) a[i]+=dp(j-1,i,j<dn);\n}\n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n>>k,INIT(),DP();\n\tsort(a+0,a+cnt,[&](ll p,ll q){return p>q;});\n\tfor(int i=0;i<cnt;i++) nex[i]=0,q.push(mp(i,nex[i]++));\n\twhile(k--&&sz(q)){\n\t\tpair<int,int> u=q.top(); q.pop();\n\t\t(ans+=(a[u.x]%mod)*(a[u.y]%mod)%mod)%=mod;\n\t\tif(nex[u.x]<cnt) u.y=nex[u.x]++,q.push(u);\n\t}\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1597107917,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u63a8\u5e7f](https://www.vixbob-lwc.pw)\n\n\u6b63\u89e3\u5f88\u5999\u554a, \u4f46\u662f\u6211\u8fd9\u4e2a ~~\u50bb\u903c~~ \u5e76\u6ca1\u6709\u60f3\u51fa\u6765\u6b63\u89e3\u7684\u90a3\u79cd\u505a\u6cd5\n\n\u8003\u8651\u5230 $ f(i) $ \u7684\u503c\u7684\u4e2a\u6570, \u53ea\u8ddf\u8fd9\u4e2a\u6570\u4e2d\u6bcf\u4e2a\u4e0d\u540c\u7684\u6570\u7801\u7684\u4e2a\u6570\u76f8\u5173, \u8ddf\u4ed6\u4eec\u7684\u4f4d\u7f6e\u65e0\u5173\n\n\u6240\u4ee5\u533a\u95f4 $[1, 10 ^ k)$ \u4e2d\u4e0d\u540c\u7684 $f(i)$ \u7684\u503c\u7684\u4e2a\u6570\u4e3a : \n\n$$\\binom{k + 9 - 1}{k}$$\n\n(\u6709 0 \u5c31\u80af\u5b9a\u4e0d\u5408\u6cd5, \u6240\u4ee5\u4e0d\u7528\u8003\u8651 0 \u8fd9\u4e2a\u6570\u7801)\n\n\u5728\u6781\u9650\u6570\u636e\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u53ea\u6709 $125970$ \u79cd\n\n\u6211\u4eec\u8003\u8651\u76f4\u63a5**\u66b4\u641c**\u51fa\u6765\u6bcf\u4e2a\u6570\u7801\u6709\u591a\u5c11\u4e2a\u5c31\u597d\u4e86, \u56e0\u4e3a\u4e0d\u80fd\u6709\u524d\u5bfc\u96f6, \u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u957f\u5ea6, \u7136\u540e\u6709\u4e24\u79cd\u60c5\u51b5\n\n* \u5982\u679c\u957f\u5ea6\u5c0f\u4e8e $N$ \u7684\u957f\u5ea6, \u6211\u4eec\u53ef\u4ee5\u7528\u591a\u91cd\u5168\u6392\u5217\u7b97\u51fa\u6765\u65b9\u6848\u6570\n* \u5982\u679c\u957f\u5ea6\u7b49\u4e8e $N$ \u7684\u957f\u5ea6, \u6211\u4eec\u5c31\u6570\u4f4d $dp$ \u4e00\u4e0b\n\n\u7136\u540e\u597d\u50cf\u5c31\u505a\u5b8c\u4e86???\n\n\u81f3\u4e8e\u8981\u4f60\u9009 $k$ \u4e2a\u6700\u5927\u7684, \u4f60\u5c31\u62ff\u4e2a\u4f18\u5148\u961f\u5217\u8d2a\u5fc3\u7684\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u5173\u4e8e\u591a\u91cd\u5168\u6392\u5217, \u516c\u5f0f\u4e3a : \n\n$$P(n; a_1, a_2,...., a_9) = \\frac{n!}{\\prod _ i a_i!}$$\n\n\u590d\u6742\u5ea6 $O(C_{20}^{12} \\cdot log^2n + klog(C_{20} ^ {12}))$\n\n$PS$ : \u5b9e\u9645\u4e0a\u56e0\u4e3a\u8981\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e $N$, \u6240\u4ee5\u5408\u6cd5\u72b6\u6001\u4f1a\u53d8\u5f97\u66f4\u5c11\n\n\u4ee3\u7801 :\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef __int128 int128;\n\nconst int maxn = 3e5 + 5;\nconst int P = 1e9 + 7;\n\nint k, cnt[maxn], con[maxn], a[20], len, tot, OP, LEN, CONIT, ans;\nLL N, num[maxn], fac[20], mi[20][20], prez, z;\n\nstruct Node {\n\tint id; int128 w;\n\n\tNode (int a, int128 b) {\n\t\tid = a; w = b;\n\t}\n\n\tbool operator < (const Node &t) const {\n\t\treturn w < t.w;\n\t}\n} ;\n\npriority_queue<Node> q;\nmap<LL, int> mp;\n\ninline LL read() {\n\tchar ch = getchar(); LL u = 0, f = 1;\n\twhile(!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n\twhile(isdigit(ch))  {u = u * 10 + ch - 48; ch = getchar();} return u * f;\n}\n\ninline int pls(int x, int y) {x += y; return x >= P ? x - P : (x < 0 ? x + P : x);}\ninline int mul(int x, int y) {LL rnt = 1ll * x * y; return rnt >= P ? rnt % P : rnt;}\n\ninline void prep(LL x) {\n\tlen = 0;\n\twhile(x) {\n\t\ta[++len] = x % 10;\n\t\tx /= 10;\n\t}\n\treverse(a + 1, a + 1 + len);\n\tfor(register int i = 0; i < 10; i++) {\n\t\tmi[i][0] = 1;\n\t\tfor(register int j = 1; j < 15; j++) mi[i][j] = mi[i][j - 1] * i;\n\t}\n\n\tfac[0] = 1;\n\tfor(register int i = 1; i <= 15; i++) fac[i] = fac[i - 1] * i;\n}\n\ninline LL calc(int *a) {\n\tint L = 0;\n\tfor(register int i = 0; i < 10; i++) L += a[i];\n\tLL rnt = fac[L];\n\tfor(register int i = 0; i < 10; i++) rnt /= fac[a[i]];\n\treturn rnt;\n}\n\ninline LL dfs(int pos, bool lim, bool lead) {\n\tif(pos > 1 && lead) return 0;\n\tif(pos > len) return 1;\n\tif(!lim && !lead) return calc(cnt);\n\tLL rnt = 0, Lim = lim ? a[pos] : 9, tmp = calc(cnt), Len = 0;\n\tfor(register int i = 0; i < 10; i++) Len += cnt[i];\n\tfor(register int i = 0; i < Lim; i++) {\n\t\tif(!cnt[i]) continue;\n\t\tif(!lead || i) \n\t\t\trnt += (int128)tmp * fac[cnt[i]] * fac[Len - 1] / fac[Len] / fac[cnt[i] - 1];\n\t}\n\tif(cnt[Lim]) {\n\t\tcnt[Lim]--;\n\t\trnt += dfs(pos + 1, lim, 0);\n\t\tcnt[Lim]++;\n\t} return rnt;\n}\n\ninline void solve(int pos, int sum, LL now) {\n\tif(pos > 9 && sum > 0) return;\n\tif(sum == 0) {\n\t\tLL tmp = 0, rnt = 0, Len = 0;\n\t\tif(LEN == len) tmp = dfs(1, 1, 1);\n\t\telse {\n\t\t\trnt = calc(cnt);\n\t\t\tfor(register int i = 0; i < 10; i++) Len += cnt[i];\n\t\t\tfor(register int i = 1; i < 10; i++)\n\t\t\t\tif(cnt[i]) tmp += (int128)rnt * fac[cnt[i]] * fac[Len - 1] / fac[Len] / fac[cnt[i] - 1];\n\t\t}\n\t\tif(tmp < 1) return;\n\t\tif(mp[now]) OP = mp[now];\n\t\telse OP = mp[now] = ++tot;\n\t\tnum[OP] += tmp;\n\t\tz += tmp;\n\t\treturn;\n\t}\n\tfor(register int i = sum - (!pos); i >= 0; i--) {\n\t\tcnt[pos] += i;\n\t\tsolve(pos + 1, sum - i, now * mi[pos][i]);\n\t\tcnt[pos] -= i;\n\t}\n}\n\nint main() {\n\tN = read(); k = read();\n\tprep(N);\n\t\n\tfor(register int i = 1; i <= len; i++) {\n\t\tmemset(cnt, 0, sizeof(cnt));\n\t\tLEN = i; solve(1, i, 1);\n\t}\n\n\tsort(num + 1, num + 1 + tot);\n\t\n\tfor(register int i = 1; i <= tot; i++) {\n\t\tcon[i] = tot;\n\t\tq.push(Node(i, (int128)num[i] * num[tot]));\n\t}\n    \n\twhile(k && !q.empty()) {\n\t\tNode tmp = q.top(); q.pop();\n\t\tint del = tmp.w % P;\n\t\tans = pls(ans, del);\n\t\tif(con[tmp.id] > 1) {\n\t\t\ttmp.w = (int128)num[tmp.id] * num[--con[tmp.id]];\n\t\t\tq.push(tmp); \n\t\t} k--;\n\t}\n\n\tcout << ans;\n\treturn 0;\n}\n/*\n10\n01\n990 12250\n\n*/\n\n```",
        "postTime": 1545888895,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "\u6570\u4f4d DP + \u8d2a\u5fc3\u3002\n\n\u6c42\u6700\u5927\u7684 $f(i,j)$ \u4e0d\u597d\u7b97\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e8c\u7ef4\u7684\uff0c\u6211\u4eec\u628a\u5b83\u8f6c\u4e3a\u4e00\u4e2a\u4e00\u7ef4\u7684\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\u90fd\u4e0d\u5927\u4e8e $9$ \uff08\u663e\u7136\uff09\uff0c\u6240\u4ee5\u4e58\u79ef\u80af\u5b9a\u662f $2^{a1}\\times 3^{a2}\\times 5^{a3}\\times 7^{a4}$\uff0c\u800c\u8fd9\u6837\u7684\u6570\u4e00\u5b9a\u4e0d\u591a\u3002\n\n\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6709\u54ea\u4e9b\u6570\u662f\u7b26\u5408\u4e0a\u8ff0\u6761\u4ef6\u7684\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u6709\u591a\u5c11\u4e2a\u5c06\u6bcf\u4e00\u4f4d\u5206\u89e3\u540e\u7531 $a1$ \u4e2a $2$\uff0c$a2$ \u4e2a $3$\uff0c$a3$ \u4e2a $5$\uff0c$a4$ \u4e2a $7$ \u7ec4\u6210\u7684\u4e14\u4e0d\u5927\u4e8e $n$ \u7684\u6570\uff08\u9884\u5904\u7406\u51fa $0\\sim 9$ \u7684\u8d28\u56e0\u6570\u5206\u89e3\u60c5\u51b5\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u6570\u4f4d DP\u3002\n\n\u5c06\u4e00\u7ef4\u5f97\u5230\u7684\u7ed3\u679c\u6392\u5e8f\uff0c\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5f53\u524d\u6700\u5927\u503c\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#include<map>\n#define int long long\n#define re register\n#define M 1000000007\nusing namespace std;\ninline int read(){\n\tre int t=0;\n\tre char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0'){\n\t\tt=(t<<3)+(t<<1)+v-48;\n\t\tv=getchar();\n\t}\n\treturn t;\n}\nint h[200002],tot,n,f[14][45][28][20][16][2],cnt[10][4]={{0,0,0,0},{0,0,0,0},{1,0,0,0},{0,1,0,0},{2,0,0,0},{0,0,1,0},{1,1,0,0},{0,0,0,1},{3,0,0,0},{0,2,0,0}},p[17],ans[200002],k,m,num;\nmap<int,int>mp;\ninline void dfs(re int x){\n\tif(mp[x])return;\n\tmp[x]=1;\n\tif(x>n)return;\n\th[++tot]=x;\n\tdfs(x<<1),dfs((x<<1)+x),dfs((x<<2)+x),dfs((x<<2)+(x<<1)+x);\n}\ninline int dp(re int x,re int a,re int b,re int c,re int d,re int z,re bool flag){\n\n\tif(a<0||b<0||c<0||d<0)return 0;\n\tif(x==0)return !a&&!b&&!c&&!d&&!z;//\tprintf(\"%lld %lld %lld %lld %lld %lld %d\\n\",x,a,b,c,d,z,flag);\n\tif(~f[x][a][b][c][d][z]&&!flag)return f[x][a][b][c][d][z];\n\tre int ret=0;\n\tfor(re int i=!z;i<=(flag?p[x]:9);++i){\n\t\t\n\tret+=dp(x-1,a-cnt[i][0],b-cnt[i][1],c-cnt[i][2],d-cnt[i][3],z&&(!i),flag&&(i==p[x]));//printf(\"%lld\\n\",f[x][a][b][c][d][z][flag]);\n\t}\n\tif(!flag)f[x][a][b][c][d][z]=ret;\n\treturn ret;\n}\nstruct node{\n\tint x,y;\n\tconst bool operator <(const node xx)const{\n\treturn ans[xx.x]*ans[xx.y]>ans[x]*ans[y];\n}\n};\ninline int calc(re int x){\n\tre int a=0,b=0,c=0,d=0,y=x;\n\twhile(!(x&1))x>>=1,++a;\n\tx=y;\n\twhile(!(x%3))x/=3,++b;\n\tx=y;\n\twhile(!(x%5))x/=5,++c;\n\tx=y;\n\twhile(!(x%7))x/=7,++d;\n\treturn dp(p[0],a,b,c,d,1,1);\n}\npriority_queue<node>q;\nsigned main(){\n\tre int xx=n=read();k=read();\n\tp[0]=0;\n\twhile(xx){\n\t\tp[++p[0]]=xx%10;\n\t\txx/=10;\n\t}\n\tdfs(1);\n\tmemset(f,-1,sizeof(f));\n\tfor(re int i=1;i<=tot;++i){\n\tans[i]=calc(h[i]);\n\t//printf(\"%lld %lld\\n\",h[i],ans[i]);\n\t}\n\tsort(ans+1,ans+tot+1);\n\tfor(re int i=1;i<=tot;++i)q.push(node{i,tot});\n\tfor(re int i=1;i<=k;++i){\n\t\tre int x=q.top().x,y=q.top().y;\n\t\tq.pop();\n\t//\tprintf(\"%lld %lld\\n\",x,y);\n\t\tm+=ans[x]%M*ans[y]%M;\n\t\tm%=M;\n\t\tif(y>1)q.push(node{x,y-1}); \n\t}\n\tprintf(\"%lld\",m);\n}\n```\n\n",
        "postTime": 1584846261,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "\u611f\u89c9\u7528\u8fd9\u9898\u53ef\u4ee5\u7528\u6765\u6d4b\u6d4b\u81ea\u5df1\u7684\u6570\u4f4d dp \u638c\u63e1\u7a0b\u5ea6qwq\n\n## \u89e3\u6790\n\n\u53d1\u73b0 $n$ \u7684\u8303\u56f4\u5f88\u5927\uff0c\u663e\u7136\u6211\u4eec\u6ca1\u6cd5\u4e00\u4e2a\u4e2a\u9a8c\u8bc1\u6bcf\u4e2a\u6570\u7684 $f$ \u53d6\u503c\n\n\u4e8e\u662f\u5012\u8fc7\u6765\u60f3\uff0c\u8bbe $g(x)$ \u8868\u793a $|\\{y: f(y)=x, 1\\leq y\\leq n\\}|$\uff08$f$ \u53d6\u503c\u4e3a x \u7684\u4e14\u5728 $n$ \u8303\u56f4\u5185\u7684\u6570\u5b57\u7684\u4e2a\u6570\uff09\u3002\u7531\u4e8e\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u8303\u56f4\u53ea\u6709 $[1, 9]$\uff0c\u6211\u4eec\u53d1\u73b0 $x$ \u4e00\u5b9a\u53ef\u4ee5\u8868\u793a\u4e3a $2^a3^b5^c7^d$ \u7684\u5f62\u5f0f\uff1b\u8fd9\u6837\u7684\u6570\u5728\u9898\u76ee\u8303\u56f4\u5185\u5e94\u8be5\u662f\u4e0d\u591a\u7684\uff08yy \u4e00\u4e0b\u4e5f\u5c31 $(\\log_5 n)^4$ \u5de6\u53f3\u7684\u6837\u5b50X\uff09\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709 $14762$ \u4e2a\n\n\uff08\u6709\u4e9b\u9898\u89e3\u8bf4\u662f $8282$ \u4e2a...\u8fd9\u5e94\u8be5\u662f\u56e0\u4e3a\u4ed6\u4eec\u8fd8\u53e6\u5916\u8981\u6c42\u4e86 $f(y)=x$ \u4e2d\u7684 $y$ **\u4e5f\u5728\u9898\u76ee\u8303\u56f4**\u5185\uff0c\u800c\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u5730\u8981\u6c42 $x$ \u5728\u8303\u56f4\u5185\uff1b\u8981\u505a\u5230 $8282$ \u4e2a\u53ea\u9700\u5728 dfs \u91cc\u518d\u52a0\u51e0\u4e2a\u6761\u4ef6\u5373\u53ef\uff08\u6211\u6bd4\u8f83\u61d2\u5c31\u6ca1\u6572\u4e86X\uff09\uff09\n\n\u4e8e\u662f\u9898\u76ee\u7684\u524d\u534a\u90e8\u5206\u5c31\u8f6c\u5316\u4e3a\uff0c\u5bf9\u4e8e\u6bcf\u79cd $x=2^a3^b5^c7^d$\uff0c\u6c42\u51fa $g(x)=|\\{y: f(y)=x, 1\\leq y\\leq n\\}|$ \u7684\u503c\uff08\u53d6 $k$ \u5927\u90e8\u5206\u5f85\u4f1a\u518d\u8bf4\uff09\n\n\u53ef\u4ee5\u7b80\u5355\u5730\u60f3\u5230\uff1a\u8bbe $dp(i, k, a, b, c, d)$ \u8868\u793a\u653e\u5230\u7b2c $i$ \u4f4d\uff0c\u8be5\u4f4d\u4e3a $k$\uff0c\u5df2\u653e\u6570\u4f4d\u7684\u4e58\u79ef $x=2^a3^b5^c7^d$ \u7684\u65b9\u6848\u6570\u3002\u624b\u6a21\u4e00\u4e0b\u53d1\u73b0 $a\\cdot b\\cdot c\\cdot d$ \u7684\u503c\u6700\u5927\u4e5f\u5c31 $1200$ \u5de6\u53f3\uff1b\u4f46\u6211\u4eec\u5982\u679c\u7b97\u4e0a $i, k$ \u4ee5\u53ca $x$ \u7684\u53d6\u503c\u4e2a\u6570\uff0c\u8fd8\u6709\u6bcf\u6b21\u679a\u4e3e\u6570\u4f4d\u7684\u6570\u5b57\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd0\u7b97\u6b21\u6570\u8d85\u8fc7\u4e86 $10^{10}$\u2014\u2014\u8fd9\u59a5\u59a5\u5730\u8fc7\u4e0d\u4e86\uff08\n\n\u53ea\u8981\u518d\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a dp \u6709\u5f88\u591a\u91cd\u590d\u8ba1\u7b97\u7684\u90e8\u5206\uff1a\u6211\u4eec\u5728\u7b97 $dp(i, k, a, b, c, d)$ \u65f6\uff0c\u5b9e\u9645\u4e0a\u4e5f\u7b97\u4e86 $dp(i, k, a', b', c', d'), a'\\leq a, b'\\leq b, c'\\leq c, d'\\leq d$\uff0c\u4e8e\u662f\u5c31\u53ef\u80fd\u5b58\u5728 $x'=2^{a'}3^{b'}5^{c'}7^{d'}$\uff0c\u88ab\u91cd\u590d\u8ba1\u7b97\u4e86\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u8bb0\u641c\u7684\u7b56\u7565\uff0c\u6807\u8bb0\u8ba1\u7b97\u8fc7\u7684\u72b6\u6001\uff1b\u8fd9\u6837\u8fd0\u7b97\u6b21\u6570\u5e94\u8be5\u5c31\u5728 $10^6$ \u5de6\u53f3\u4e86\uff08\u53ef\u80fd\u8fd8\u6709\u4e00\u4e9b\u5e38\u6570\uff09\uff0c\u53ef\u8fc7\n\n&nbsp;\n\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6240\u6709\u53ef\u80fd\u7684 $x$ \u7684 $g(x)$ \u7684\u503c\u3002\u8003\u8651\u5750\u6807 $(x_1, x_2)$ \u7684\u8d21\u732e\uff0c\u5176\u663e\u7136\u662f $g(x_1)\\cdot g(x_2)$\u3002\u4e8e\u662f\u5269\u4f59\u90e8\u5206\u7684\u95ee\u9898\u5c31\u4e3a\uff1a\u4ece\u4e00\u4e9b\u6570 $\\{a_1, a_2, a_3, \\cdots\\}$ \u4e2d\u9009\u51fa\u6700\u5927\u7684 $k$ \u5bf9 $a_i\\cdot a_j$\uff08\u4e14\u8981\u6c42\u9009\u51fa\u7684 $k$ \u5bf9\u4e24\u4e24\u95f4 $i, j$ \u4e0d\u80fd\u90fd\u76f8\u540c\uff09\n\n\u7531\u4e8e\u6bcf\u4e2a\u6570\u90fd\u53ef\u548c\u5176\u5b83\u6bcf\u4e2a\u6570\u90fd\u914d\u5bf9\u4e00\u6b21\uff0c\u5373\u6bcf\u4e2a\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u56e0\u6b64\u53cc\u6307\u9488\u8d2a\u5fc3\uff08\u6211\u4e00\u5f00\u59cb\u60f3\u7684X\uff09\u662f\u884c\u4e0d\u901a\u7684\n\n\u6211\u4eec\u5148\u56fa\u5b9a\u4e00\u4e2a\u6570 $a_i$\uff0c\u5e76\u53ea\u8003\u8651\u5b83\u7684\u914d\u5bf9\uff1b\u663e\u7136\u662f\u8d2a\u5fc3\u5730\u7b2c\u4e00\u6b21\u548c\u6700\u5927\u7684\u6570\u914d\u5bf9\uff0c\u63a5\u7740\u518d\u548c\u6b21\u5927\u7684\u914d\u5bf9...\uff1b\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u6570\u53ea\u4f1a\u548c $a_i$ \u914d\u5bf9**\u4e00\u6b21**\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u6570 $a_i$ \u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 $j$\uff0c\u8868\u793a\u5b83\u5f53\u524d\u6b63\u914d\u5bf9\u7684\u6570 $a_j$\uff1b\u518d\u628a $a_i\\cdot a_j$ \u4f5c\u4e3a\u952e\u503c\u653e\u5230\u5806\u91cc\u6392\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u7684\u5143\u7d20\u7edf\u8ba1\u7b54\u6848\uff0c\u5c06\u8be5\u5143\u7d20\u5bf9\u5e94\u7684\u6307\u9488\u5411\u540e\u79fb\u4e00\u4f4d\uff08\u8fd8\u8981\u6c42\u5148\u628a\u6570\u5217\u6392\u5e8f\uff09\uff0c\u518d\u91cd\u65b0\u8ba1\u7b97\u952e\u503c\uff0c\u5e76\u628a\u8be5\u5143\u7d20\u653e\u56de\u5806\u91cc\uff08\u5982\u679c\u6307\u9488\u5c1a\u672a\u904d\u5386\u5b8c\u6570\u5217\uff09\uff0c\u8fd9\u6837\u91cd\u590d $k$ \u6b21\u5373\u53ef\n\n## CODE\n\n\u5982\u679c\u89c9\u5f97\u5f00\u56db\u7ef4\u72b6\u6001\u592a\u591a\u7684\u8bdd\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5c06 $x$ \u79bb\u6563\u5316\u4e00\u4e0b\u505a\u6210\u4e00\u7ef4\u72b6\u6001\uff08\u5c31\u50cf\u6211\u4ee3\u7801\u4e2d\u505a\u7684\uff09\uff0c\u8f6c\u79fb\u65f6\u7528\u5f53\u524d\u6807\u53f7\u5bf9\u5e94\u7684 $x$ \u7684\u503c\u9664\u653e\u7f6e\u7684\u6570\u5b57\uff0c\u5f97\u5230\u7684\u503c\u5728\u7ef4\u62a4\u7684\u5173\u7cfb\u8868\u91cc\u518d\u67e5\u627e\u4e00\u6b21\u5c31\u884c\u4e86\uff1b\u4e0d\u8fc7\u8fd9\u6837\u4f1a\u4f7f\u590d\u6742\u5ea6\u518d\u5e26\u4e00\u4e2a $\\log$\uff08\u7528 `stl` \u7684\u54c8\u5e0c\u597d\u50cf\u4e5f\u4e0d\u4f1a\u592a\u5feb...\uff09\u3002\u6ce8\u610f\u4e0d\u8981\u9891\u7e41\u7684\u67e5\u627e\uff08\u4f8b\u5982\u6211\u4ee3\u7801\u4e2d\u6ce8\u91ca\u6389\u7684\u90e8\u5206\uff09\uff0c\u5426\u5219\u4f1a\u88ab\u5361\u5e38\u5361\u65f6\u9650\n\n\u8fd8\u6709 dp \u65f6 $k$ \u8fd9\u4e2a\u72b6\u6001\u5176\u5b9e\u4e5f\u53ef\u7b80\u5316\u4e3a $0/1$\uff0c\u8868\u793a\u5f53\u524d\u6570\u4f4d\u7684\u6570\u5c0f\u4e8e/\u5927\u4e8e\u7b49\u4e8e $n$ **\u7684\u8be5\u6570\u4f4d**\u2014\u2014\u56e0\u4e3a\u5b9e\u9645\u7edf\u8ba1\u65f6\u6211\u4eec\u4e5f\u5c31\u53ea\u5206\u8fd9\u4e24\u79cd\u72b6\u6001\u8ba8\u8bba\uff08\u4e0d\u8fc7\u8fd9\u6837\u5c31\u4e0d\u80fd\u7edf\u8ba1\u7b49\u4e8e $n$ \u7684\u6570\u5b57\u4e86\uff0c\u8fd8\u9700\u8981 `++n`\uff09\u3002\u8fd9\u4e2a trick \u5728\u522b\u7684\u6570\u4f4d dp \u4e5f\u80fd\u7528\n\n&nbsp;\n\n\u53e6\u5916\u5728\u7ef4\u62a4\u5806\u65f6\uff0c\u4e24\u4e2a `ll` \u8303\u56f4\u7684\u65b9\u6848\u6570\u76f8\u4e58\u53ef\u80fd\u4f1a\u70b8 `ll`\uff0c\u8fd9\u65f6\u53ef\u4ee5\u8003\u8651\u5c06\u952e\u503c\u7c7b\u578b\u6362\u6210 `double`\uff1b\u6216\u8005\u5148\u5c06\u8fd9\u4e24\u4e2a `ll` \u6253\u5305\u6210\u7c7b\u5b58\u4e0b\u6765\uff0c\u6bd4\u8f83\u65f6\u518d\u7528\u6bd4\u4f8b\u8ba1\u7b97\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nbool cmp(pair<ll, ll> A, pair<ll, ll> B){\n\treturn 1.0*A.first/B.second < 1.0*B.first/A.second;\n}\n```\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u6bd4\u8d77\u7b2c\u4e00\u79cd\u65b9\u6cd5\u8981\u66f4\u53ef\u9760\uff0c\u4f46\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u4e24\u79cd\u65b9\u6cd5\u90fd\u53ef\u80fd\u51fa\u9519\uff08\u6bd5\u7adf\u7cbe\u5ea6\u6446\u5728\u90a3\uff09\u3002\u4e8e\u662f\u6211\u5c31~~\u5077\u61d2~~\u9009\u62e9\u76f4\u63a5\u7528 `__int128` \u5b58\u952e\u503c\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <unordered_map>\n#include <queue>\n#include <algorithm>\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"Ofast\", \"-funroll-loops\", \"-fdelete-null-pointer-checks\")\n#pragma GCC target(\"ssse3\", \"sse3\", \"sse2\", \"sse\", \"avx2\", \"avx\")\n#define ll long long\nusing std::unordered_map;\nusing std::priority_queue;\nusing std::vector;\nusing std::greater;\nusing std::pair;\nusing std::sort;\ntypedef pair<ll, int> pad;\ntypedef pair<__int128, int> pad2;\n\nconst int M =1e9+7, IDMAX =14762;\nconst int prim[4] ={2, 3, 5, 7};\n\n/*------------------------------f------------------------------*/\n\nll n, K;\nint ID;\nunordered_map<ll, int> Map;/*\u5bf9\u4e8e\u6bcf\u4e2a f \u503c\u7684 id ( \u79bb\u6563\u5316 )*/\nll val[IDMAX];/*\u6bcf\u4e2a id \u5bf9\u5e94\u7684\u7684 f \u7684\u503c*/\n\n/*\u641c\u7d22\u53ef\u80fd\u7684 f \u53d6\u503c*/\nvoid dfs(int p, ll valf){\n\tif(p == 4){\n\t\tMap.insert(pad(valf, ID));\n\t\tval[ID] =valf;\n\t\t++ID;\n\t\treturn;\n\t}\n\tfor(int i =0; i <= (int)(log2(n)/log2(prim[p])); ++i){\n\t\tdfs(p+1, valf);\n\t\tvalf *=prim[p];\n\t\tif(valf > n)\n\t\t\treturn;\n\t}\n}\n\n/*------------------------------dp------------------------------*/\n\n/*\u524d\u9762\u90e8\u5206\u5fc5\u987b\u7528 ll ( \u4e0d\u80fd\u53d6\u6a21 )*/\nint dig[15], len;\nll dp[15][2][IDMAX];/*i \u4f4d\uff0c\u8be5\u4f4d\u6570\u5b57\u6bd4 n \u7684\u8be5\u4f4d\u5c0f/\u5927\u4e8e\u7b49\u4e8e\uff0c\u6570\u4f4d\u4e58\u79ef\u4e3a x ( \u5df2\u79bb\u6563\u5316 )\uff0c\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a*/\nll g[IDMAX];/*g(x): \u6709\u591a\u5c11\u6570\u5b57 y\uff0c\u6ee1\u8db3 f(y) \u4e3a x*/\n\nvoid Dp(){\n\t/*\u521d\u59cb\u5316*/\n\tfor(int k =1; k <= 9; ++k){\n\t\tif(k < dig[1])\n\t\t\tdp[1][0][Map.find(k)->second] =1;\n\t\telse\n\t\t\tdp[1][1][Map.find(k)->second] =1;\n\t}\n\t/*dp\uff0c\u8fd9\u91cc\u7684\u8f6c\u79fb\u6211\u662f\u53cd\u7740\u5199\u7684\uff0c\u4e8e\u662f\u4e0d\u9700\u8981\u5bf9\u6bcf\u4e2a\u4e58\u79ef x \u505a\u4e00\u6b21 dp ( \u8fd8\u8981\u8003\u8651 dp \u987a\u5e8f\u95ee\u9898 )\uff0c\u66f4\u4e0d\u7528\u8bb0\u5f55\u72b6\u6001\u662f\u5426\u88ab\u8ba1\u7b97\u8fc7*/\n\tfor(int i =1; i < len; ++i)\n\t\tfor(int id =0; id < ID; ++id)\n\t\t\tfor(int knet =1; knet <= 9; ++knet){\n\t\t\t//\tif(!Map.count(val[id]*knet))/*\u8fd9\u4e2a map \u64cd\u4f5c\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u8fd8\u4f1a\u5e26\u6765\u4e24\u500d\u5e38\u6570 (*/\n\t\t\t\tif(val[id]*knet > n)\n\t\t\t\t\tcontinue;\n\t\t\t\tint idnet =Map.find(val[id]*knet)->second;\n\t\t\t\tif(knet < dig[i+1])\n\t\t\t\t\tdp[i+1][0][idnet] +=dp[i][0][id]+dp[i][1][id];\n\t\t\t\telse\n\t\t\t\t\tdp[i+1][1][idnet] +=dp[i][0][id]+dp[i][1][id];\n\t\t\t}\n\t/*\u7edf\u8ba1\u7b54\u6848*/\n\tfor(int id =0; id < ID; ++id){\n\t\tll ans =0;\n\t\tfor(int i =1; i < len; ++i)\n\t\t\tans +=dp[i][0][id]+dp[i][1][id];\n\t\tint idnw =id;\n\t\tfor(int i =len; i >= 1; --i){\n\t\t\tans +=dp[i][0][idnw];\n\t\t\tif(dig[i] == 0)/*\u4e4b\u540e\u6570\u4f4d\u4e58\u79ef\u4e5f\u4e00\u5b9a\u4e3a 0 \u4e86\uff0c\u4e0d\u5408\u6cd5*/\n\t\t\t\tbreak;\n\t\t\tif(val[idnw]%dig[i] != 0)/*\u4e58\u79ef\u4e0d\u518d\u5408\u6cd5*/\n\t\t\t\tbreak;\n\t\t\tidnw =Map.find(val[idnw]/dig[i])->second;\n\t\t}\n\t\tg[id] =ans;\n\t}\n}\n\n/*------------------------------k------------------------------*/\n\npriority_queue<pad2, vector<pad2> > Heap;/*\u4e5f\u53ef\u7528 double\uff0c\u518d\u5f04\u4e2a\u6bd4\u4f8b\u66f4\u4e0d\u5bb9\u6613\u9519\uff0c\u4f46\u6211\u6bd4\u8f83\u61d2 X*/\nint gPair[IDMAX];/*\u76ee\u524d\u7684 a_1 \u914d\u5bf9\u7684 a_2\uff0c\u6570\u7ec4\u540d\u6709 g \u662f\u56e0\u4e3a\u6bd5\u7adf {a} \u6570\u7ec4\u91cc\u9762\u7684\u503c\u5c31\u662f g(x) qwq*/\n\n/*------------------------------Main------------------------------*/\n\nint main(){\n\tscanf(\"%lld%lld\", &n, &K);\n\tdfs(0, 1);\n\tll n2 =n+1;\n\twhile(n2){\n\t\tdig[++len] =n2%10;\n\t\tn2 /=10;\n\t}\n\tDp();\n\tsort(g, g+ID, greater<ll>());\n\tfor(int i =0; i < ID; ++i)\n\t\tHeap.push(pad2((__int128)g[i]*g[0], i)), gPair[i] =0;\n\tint ans =0;\n\tfor(int i =0; i < K && !Heap.empty(); ++i){\n\t\tpad2 nw =Heap.top();\n\t\tHeap.pop();\n\t\t(ans +=nw.first%M) %=M;\n\t\t++gPair[nw.second];\n\t\tif(gPair[nw.second] < ID)\n\t\t\tHeap.push(pad2((__int128)g[nw.second]*g[gPair[nw.second]], nw.second));\n\t}\n\tprintf(\"%d\", ans);\n}\n```",
        "postTime": 1600060189,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "[\u6211\u7684\u6570\u4f4d$DP$\u603b\u7ed3$blog$](https://www.luogu.com.cn/blog/s-r-f/oi-bi-ji-shuo-wei-dp-ge-ji-dui-shuo-wei-dp-di-yi-dian-li-xie)\n\n\u9996\u5148\u5199\u4e2a\u7206\u641c$,$\u53d1\u73b0\u5bf9\u4e8e$1\\leq i \\leq10^{12}$\u7684$i$ $,$ $f(i)$ \u53ea\u6709$8282$ \u79cd $.$ \u6240\u4ee5\u8003\u8651\u5bf9\u4e8e\u8fd9 $8282$ \u79cd\u6570\u6c42\u51fa\u6709\u591a\u5c11\u6570\u5b57\u6ee1\u8db3$f(i) = $\u8fd9\u4e2a\u6570\u5b57$.$\n\n\u6570\u4f4d$dp,$ \u8bb0 $dp(x,n,1/0)$ \u8868\u793a\u76ee\u524d\u8fd8\u6709$n$\u4f4d\u6570\u5b57\u6ca1\u6709\u51b3\u5b9a$,$**\u9664\u53bb\u524d\u5bfc\u96f6\u4e4b\u540e**\u5269\u4e0b\u7684\u6570\u5b57\u4e58\u79ef\u4e3a$x$ $($ \u6240\u6709\u7684$x$\u5e94\u5f53\u4e8b\u5148\u641c\u51fa\u6765\u653e\u5230\u6570\u7ec4\u91cc $),$ \u76ee\u524d\u6709$/$\u65e0\u975e\u96f6\u6570\u7684\u65b9\u6848\u6570$.$\n\n\u6c42\u51fa\u6765\u4e4b\u540e$,$\u4ee4$a_i$\u4e3a\u7b2c$i$\u4e2a\u6570\u5b57\u88ab\u7528\u5230\u7684\u6b21\u6570$,$\n\n\u628a$a_i$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f$,$\u7528\u5806\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86$.$\n\n\u590d\u6742\u5ea6$O(8282 * 12 * 9 * hash()),$\u6211\u81ea\u5df1\u4ee3\u7801\u91cc\u9762\u7528\u4e86$map,$\u6240\u4ee5\u6bd4\u8f83\u6162$,$\u4f46\u662f\u80fd\u8fc7\u5c31\u6ca1\u5fc5\u8981 $unordered$ $map$ \u6216\u8005 \u624b\u5199$Hash$ \u4e86 $.$\n\n\u4ee3\u7801$:$\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n#define db double\nusing namespace std;\ntemplate <typename T> void read(T &x){\n\tx = 0; int f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - '0'; ch = getchar();}\n\tx *= f;\n}\ninline void write(int x){if (x > 9) write(x/10); putchar(x%10+'0'); }\nconst int S = 8282+5,P = 1e9 + 7;\nLL v[S],pw[13]; int cnt; map<LL,int>Id;\nnamespace INIT{\n\tmap<LL,int>S; int limit;\n\tinline void dfs(int dep,LL s){\n\t\tif (dep>limit){\n\t\t\tif (!S.count(s)){ S[s] = dep; v[++cnt] = s; Id[s] = cnt; }\n\t\t\telse S[s] = min(S[s],dep); \n\t\t\treturn;\n\t\t}\n\t\tif (S.count(s) && S[s] <= dep) return;\n\t\tif (!S.count(s)){ v[++cnt] = s; Id[s] = cnt; }\n\t\tS[s] = dep;\n\t\tfor (int i = 0; i <= 9; ++i) dfs(dep+1,s*i);\n\t}\n\tinline void init(){\n\t\tint i,j;\n\t\tlimit = 12,dfs(1,1);\n\t\tfor (pw[0] = i = 1; i <= 12; ++i) pw[i] = pw[i-1] * 10;\n\t//\tfor (i = 1; i <= cnt; ++i) for (j = 0; j <= 9; ++j)\n\t//\t\tif (Id.count(v[i]*j)) nxt[i][j] = Id[v[i]*j]; else nxt[i][j] = 0;\n\t}\n}\nLL dp[S][13][2]; bool vis[S][13][2];\ninline LL DP(int s,int n,int tp){\n\tif (!s || !v[s]) return 0; if (!n) return (tp && v[s] == 1) ? 1 : 0;\n\tif (vis[s][n][tp]) return dp[s][n][tp]; vis[s][n][tp] = 1;\n\tLL tot = 0;\n\tif (tp){\n\t\tfor (int i = 1; i <= 9; ++i) if (v[s] % i == 0) tot += DP((int)Id[v[s]/i],n-1,1);\n\t}\n\telse{\n\t\tfor (int i = 1; i <= 9; ++i) if (v[s] % i == 0) tot += DP((int)Id[v[s]/i],n-1,1);\n\t\ttot += DP(s,n-1,0);\n\t}\n\treturn dp[s][n][tp] = tot;\n}\nLL a[S];\ninline void work(){\n\tLL n; register int i,j,k; int x; LL now = 1; bool flag = 0;\n\tcin >> n; ++n;\n\tfor (i = 12; i >= 0; --i) if ((x=n/pw[i]%10)||flag){\n\t\tfor (k = 1; k <= cnt; ++k) if (v[k] <= n)\n\t\tfor (j = 0; j < x; ++j) if (v[k] && v[k] % (now*(j?j:1)) == 0){\n\t\t\tif (flag && !j) continue;\n\t\t\ta[k] += DP(Id[v[k]/now/(j?j:1)],i,(flag||j)?1:0);\n\t\t}\n\t\tflag = 1,now *= x; if (!now) break;\n\t}\n}\nint now[S],n,ans;\nstruct data{\n\tint x,y;\n\tbool operator < (data w) const{ return (db)a[x]*a[y] < (db)a[w.x]*a[w.y]; }\n}t;\npriority_queue<data>H;\nint main(){\n\tint i,k;\n\tINIT::init(); work(); n = cnt; cin >> k;\n\tsort(a+1,a+n+1),reverse(a+1,a+n+1);\n\tfor (i = 1; i <= n; ++i) now[i] = 1,t.x = i,t.y = 1,H.push(t);\n\twhile (k--){\n\t\tt = H.top();\n\t\tans = (ans + a[t.x] % P * (a[t.y] % P)) % P;\n\t\tH.pop();\n\t\t++now[t.x];\n\t\tif (now[t.x] <= n) ++t.y,H.push(t);\n\t}\n\tcout << ans << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1588255377,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "\u8bbe $c(x)$ \u4e3a\u6ee1\u8db3 $f(i) = x$ \u5373\u5404\u4f4d\u6570\u5b57\u4e4b\u79ef $=x$ \u7684 $i$ \u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u53d8\u5316\u4e4b\u540e\u683c\u5b50 $(x,y)$ \u4e0a\u6709\u7684\u91d1\u5757\u4e2a\u6570\u5c31\u662f $c(x) \\cdot c(y)$\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $c(x)$ \u4e2d\u7684 $x$ \u5206\u89e3\u540e\u82e5\u9664\u4e86 $2,3,5,7$ \u8fd8\u6709\u5176\u4ed6\u8d28\u56e0\u5b50\uff0c$c(x) = 0$\u3002\n\n\u95ee\u9898\u5c31\u5728\u4e8e $c(x)$ \u7684\u6c42\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u4f4d DP\uff08\u4e2a\u4eba\u559c\u6b22\u8bb0\u641c\uff09\uff0c\u72b6\u6001\u9700\u8981\u8bb0\u5f55\u641c\u5230\u7b2c $x$ \u4f4d\uff0c\u7ec4\u6210\u7684\u6570 $= 2^a \\cdot 3^b \\cdot 5^c \\cdot 7^d$ \u4e2d\u7684\u6307\u6570 $a,b,c,d$\u3002  \n\u7136\u540e\u7528\u4e00\u4e2a\u5e38\u91cf\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b $1 - 9$ \u5206\u89e3\u4e4b\u540e\u7684\u56db\u4e2a\u6307\u6570\uff0c\u641c\u7d22\u7684\u65f6\u5019\u6ce8\u610f\u9664\u4e86\u524d\u5bfc $0$ \u7684\u65f6\u5019\u90fd\u4e0d\u80fd\u9009 $0$\uff0c\u4ee5\u53ca\u6240\u6709\u4f4d\u90fd\u662f $0$ \u65f6\u6700\u540e\u4e00\u4f4d\u4f1a\u7b97\u4f5c\u524d\u5bfc $0$ \u9700\u8981\u7279\u5224\u3002\n\n\u4e8e\u662f\u6211\u4eec DFS \u4e00\u904d $n$ \u4ee5\u5185\u7684\u8d28\u56e0\u5b50\u53ea\u6709 $2,3,5,7$ \u7684\u6570\uff08\u6216\u8005\u76f4\u63a5\u679a\u4e3e\u56db\u4e2a\u6307\u6570\u5c31\u884c\uff09\uff0c\u6c42\u51fa\u5176\u5bf9\u5e94\u7684 $c$ \u51fd\u6570\u503c\uff0c\u7136\u540e\u628a\u6240\u6709\u7684 $c$ \u51fd\u6570\u503c\u4ece\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\u3002  \n\u7136\u540e\u6211\u4eec\u8bbe $c$ \u51fd\u6570\u503c\u6709 $cnt$ \u4e2a\uff0c\u5f80\u5927\u6839\u5806\u91cc\u9762\u4e22 $cnt$ \u4e2a\u5f62\u5982 $(x,1)$ \u7684\u4e8c\u5143\u7ec4\uff0c\u5927\u6839\u5806\u7684\u4f18\u5148\u7ea7\u662f\u4e8c\u5143\u7ec4\u4e24\u4e2a\u6570\u7684 $c$ \u503c\u4e4b\u79ef\u3002  \n\u4ece\u5927\u6839\u5806\u53d6\u51fa\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u8ba1\u7b97\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u518d\u628a\u7b2c\u4e8c\u4e2a\u6570\u52a0\u4e00\u4e22\u56de\u53bb\u3002\u8fd9\u6837\u6267\u884c $k$ \u6b21\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u5b9e\u73b0\u7ec6\u8282\u3002  \n\u4ee5\u53ca\uff0c\u4e0d\u8981\u95ee\u4e3a\u4ec0\u4e48\u6211\u7528 pbds \u7684\u4f18\u5148\u961f\u5217\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <functional>\n#include <ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nconst int LEN = 12;\nconst int divi[10][4] = {\n    {0,0,0,0},\n    {0,0,0,0},\n    {1,0,0,0},\n    {0,1,0,0},\n    {2,0,0,0},\n    {0,0,1,0},\n    {1,1,0,0},\n    {0,0,0,1},\n    {3,0,0,0},\n    {0,2,0,0}\n};\nconst long long N = 1e12;\nconst int CNT = 2e4;\nconst long long mod = 1e9 + 7;\nlong long n;\nint k;\nint tot,d[LEN + 5];\nlong long f[LEN + 5][LEN * 3 + 5][LEN * 2 + 5][LEN + 5][LEN + 5][2];\nlong long h[CNT + 5],c[CNT + 5];\nint cnt;\nvoid dfs(int x,long long prod)\n{\n    static const long long d[4] = {2,3,5,7};\n    if(prod > n)\n        return ;\n    h[++cnt] = prod;\n    for(register int i = x;i < 4;++i)\n        dfs(i,prod * d[i]);\n}\nlong long dfs(int x,int _2,int _3,int _5,int _7,int lead,int top)\n{\n    if(_2 < 0 || _3 < 0 || _5 < 0 || _7 < 0)\n        return 0;\n    if(!x)\n        return !_2 && !_3 && !_5 && !_7;\n    if(!top && ~f[x][_2][_3][_5][_7][lead])\n        return f[x][_2][_3][_5][_7][lead];\n    long long ret = 0;\n    int bound = top ? d[x] : 9;\n    for(register int i = x > 1 ? 0 : 1;i <= bound;++i)\n    {\n        if(!lead && !i)\n            continue;\n        ret += dfs(x - 1,_2 - divi[i][0],_3 - divi[i][1],_5 - divi[i][2],_7 - divi[i][3],lead && !i,top && i == bound);\n    }\n    if(!top)\n        f[x][_2][_3][_5][_7][lead] = ret;\n    return ret;\n}\nlong long solve(long long x)\n{\n    int _2 = 0;\n    while(!(x % 2))\n        x /= 2,++_2;\n    int _3 = 0;\n    while(!(x % 3))\n        x /= 3,++_3;\n    int _5 = 0;\n    while(!(x % 5))\n        x /= 5,++_5;\n    int _7 = 0;\n    while(!(x % 7))\n        x /= 7,++_7;\n    return dfs(tot,_2,_3,_5,_7,1,1);\n}\nstruct note\n{\n    int x,y;\n    inline bool operator<(const note &a) const\n    {\n        return c[x] * c[y] < c[a.x] * c[a.y];\n    }\n};\n__gnu_pbds::priority_queue<note> pq;\nlong long ans;\nint main()\n{\n    memset(f,-1,sizeof f);\n    scanf(\"%lld%d\",&n,&k);\n    dfs(0,1);\n    long long temp = n;\n    while(temp)\n    {\n        d[++tot] = temp % 10;\n        temp /= 10;\n    }\n    for(register int i = 1;i <= cnt;++i)\n        c[i] = solve(h[i]);\n    sort(c + 1,c + cnt + 1,greater<long long>());\n    k = min(k,cnt * cnt);\n    for(register int i = 1;i <= cnt;++i)\n        pq.push((note){i,1});\n    for(register int i = 1;i <= k;++i)\n    {\n        note cur = pq.top();\n        pq.pop();\n        ans = (ans + c[cur.x] * c[cur.y]) % mod;\n        if(cur.y == cnt)\n            continue;\n        pq.push((note){cur.x,cur.y + 1});\n    }\n    printf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1545108900,
        "uid": 75840,
        "name": "deserter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    },
    {
        "content": "\u8003\u8651\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u6570\u4f4ddp\u3002\n\n\u7531\u4e8e $f(x)$ \u662f $x$ \u7684\u5404\u4f4d\u6570\u5b57\u76f8\u4e58\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2a\u6570\u7684$0\\sim9$\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u4e5f\u80fd\u8bb0\u5fc6\u5316\u3002\n\n\u72b6\u6001 $dp[pos][num1][num2][num3][num4][num5][num6][num7][num8][num9]$ \u8868\u793a\u5f53\u524d\u4f4d\u4e3a $pos$,$1\\sim9$ \u5404\u7528\u4e86 $num_1 \\sim num_9$ \u6b21\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u7531\u4e8e $f(x)=0$ \u4e0d\u5728\u5750\u6807\u8f74\u8303\u56f4\u5185\uff0c\u5219\u5728\u641c\u7d22\u65f6\u5224\u65ad\u5373\u53ef\u3002\n\n\u7136\u540e\u6109\u5feb\u7684\u53d1\u73b0: $N \\le 10^{12}$\u3002\u660e\u663e\u7206\u70b8\u3002\n\n\u6709\u6ca1\u6709\u65b9\u6cd5\u4f18\u5316\u5462?\n\n\n\n\u540e\u6765\u60f3\u5230\uff1a\n> - \u4e00\u4e2a\u6570\u4f4d$9$\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u6570\u4f4d$3$\n> - \u4e00\u4e2a\u6570\u4f4d$8$\u7b49\u4ef7\u4e8e\u4e09\u4e2a\u6570\u4f4d$2$\n> - \u4e00\u4e2a\u6570\u4f4d$6$\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u6570\u4f4d$2$\u548c\u4e00\u4e2a\u6570\u4f4d$3$\n> - \u4e00\u4e2a\u6570\u4f4d$4$\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u6570\u4f4d$2$\n> - \u6570\u4f4d$1$\u4e0d\u4f1a\u5bf9 $f(x)$ \u505a\u51fa\u8d21\u732e\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 $num4$,$num6$,$num8$,$num9$ \u8f6c\u5316\u4e3a $num2$ \u4e0e $num3$\uff0c\u5e76\u5c06 $num1$ \u5220\u9664\u3002\n\n\n\u72b6\u6001\u8f6c\u5316\u4e3a $dp[pos][num2][num3][num5][num7]$\u3002\n\n$13^{10} \\rightarrow 13\\times 39\\times 26\\times 13\\times 13$\n\n\u73b0\u5728\u6211\u4eec\u5c31\u6709\u4e86\u6700\u7ec8\u6240\u6709\u7684 $f(x)$\uff0c\u4f46\u7b54\u6848\u662f\u4e8c\u7ef4\u7684\uff0c\u5e76\u4e14\u8ba9\u4f60\u53d6\u524d $k$ \u5927\u7684\u548c\u3002\n\n\u4e8c\u7ef4\u53ef\u4ee5\u76f4\u63a5\u7528 $\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^n num_{f_i}\\times num_{f_j}$ \u5f97\u5230,\u90a3\u4e48\u5982\u4f55\u7edf\u8ba1\u7b54\u6848?\n\n\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u4e00\u4e2a $mid$\uff0c\u770b\u6709\u591a\u5c11\u4e2a\u503c $\\ge mid$\uff0c\u6700\u7ec8\u627e\u5230\u6070\u597d\u6709 $k$ \u4e2a\u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n\u6ce8\u610f:\u672c\u9898\u5c45\u7136\u7206long long\u4e86\uff0c\u4f7f\u7528\u4e86\u4e00\u4e0b__int128\u3002\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#define mem(name,value) memset(name,value,sizeof(name))\nusing namespace std;\ntypedef long long ll;\ninline ll min(ll a,ll b) {return a<b ? a : b;}\ninline ll max(ll a,ll b) {return a>b ? a : b;}\ninline ll abs(ll x) {return x>0 ? x : -x;}\nconst int Mod = 1e9+7;\nconst int maxn = 15;\nconst int maxlen = 40*27*14*14+5;\nint a[maxn],top,len;\nll n,k,dp[maxn][3*maxn][2*maxn][maxn][maxn],maxnum;\n__int128 num[maxlen],sum[maxlen];\n\nll dfs(int pos,int num2,int num3,int num5,int num7,bool lead,bool limit)\n{\n    if(pos==0) return (num2+num3+num5+num7+lead==0);\n    if(!limit && !lead && dp[pos][num2][num3][num5][num7]!=-1) return dp[pos][num2][num3][num5][num7];\n    int up;\n    if(!limit) up=9;\n    else up=a[pos];\n    ll ans=0;\n    for(int i=0;i<=up;i++)\n    {\n        if(i==0 && lead==true) ans+=dfs(pos-1,num2,num3,num5,num7,true,(limit==true && i==a[pos])); \n        if(i==1) ans+=dfs(pos-1,num2,num3,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==2 && num2>=1) ans+=dfs(pos-1,num2-1,num3,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==3 && num3>=1) ans+=dfs(pos-1,num2,num3-1,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==4 && num2>=2) ans+=dfs(pos-1,num2-2,num3,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==5 && num5>=1) ans+=dfs(pos-1,num2,num3,num5-1,num7,false,(limit==true && i==a[pos]));\n        if(i==6 && num2>=1 && num3>=1) ans+=dfs(pos-1,num2-1,num3-1,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==7 && num7>=1) ans+=dfs(pos-1,num2,num3,num5,num7-1,false,(limit==true && i==a[pos]));\n        if(i==8 && num2>=3) ans+=dfs(pos-1,num2-3,num3,num5,num7,false,(limit==true && i==a[pos]));\n        if(i==9 && num3>=2) ans+=dfs(pos-1,num2,num3-2,num5,num7,false,(limit==true && i==a[pos]));\n    }\n    if(!limit && !lead) \n        dp[pos][num2][num3][num5][num7]=ans;\n    return ans;\n}\n\nvoid solve(int num2,int num3,int num5,int num7)\n{\n    ll ans=dfs(top,num2,num3,num5,num7,true,true);\n    num[++len]=ans;\n    maxnum=max(maxnum,ans);\n}\n\nvoid spilt(ll x)\n{\n    while(x!=0)\n    {\n        a[++top]=x%10;\n        x/=10;\n    }\n}\n\nvoid write(__int128 x)\n{\n    if(!x) return;\n\tif(x<0) putchar('-'),x=-x;\n    write(x/10);\n    putchar(x%10+'0');\n}\n\n\nbool check(__int128 x)\n{\n    int tot=0;\n    for(int i=len,tag=1;i>=1 && tag<=len;i--)\n    {\n        while(tag<=len && num[i]*num[tag]<x) tag++;\n        tot+=len-tag+1;\n    }\n    return tot<k;\n}\n\nint main()\n{\n    scanf(\"%lld%lld\",&n,&k);\n    spilt(n);\n    mem(dp,-1);\n    for(int num2=0;num2<=39;num2++)\n        for(int num3=0;num3<=26;num3++)\n            for(int num5=0;num5<=13;num5++)\n                for(int num7=0;num7<=13;num7++)\t\n                    solve(num2,num3,num5,num7);\n    sort(num+1,num+len+1);\n    __int128 l=0,r=__int128(maxnum)*maxnum,mid,val;\n    while(l<r)\n    {\n        mid=(l+r)>>1;\n        if(check(mid)==true) r=mid;\n        else l=mid+1;\n    }\n    val=l-1;\n    for(int i=len;i>=1;i--) sum[i]=(sum[i+1]+num[i])%Mod;\n    ll ans=0,cnt=0;\n    for(int i=1;i<=len;i++)\n    {\n        int id=lower_bound(num+1,num+len+1,ceil(1.0*val/num[i]))-num;\n        ans=(ans+num[i]%Mod*sum[id])%Mod;\n        cnt+=(len-id+1);\n    }\n    if(cnt>k) ans=((ans-val%Mod*(cnt-k)%Mod)+Mod)%Mod;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n\n```",
        "postTime": 1625382565,
        "uid": 159610,
        "name": "Meaninglessness",
        "ccfLevel": 4,
        "title": "P3303 \u9898\u89e3"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3303)\n\n------------\n\n# Solution\n\n\u9996\u5148\u6bcf\u4e00\u4f4d\u4e0a\u6709$0$\u5c31\u4e0d\u5408\u6cd5\uff0c\u7136\u540e\u5f88\u591a\u4e0d\u540c\u7684\u6392\u5217\u4e58\u8d77\u6765\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u76f2\u731c\u6700\u540e\u7684$f$\u51fd\u6570\u6709\u7528\u7684\u503c\u4e0d\u591a\u3002\n\n\u7ecf\u8fc7\u641c\u7d22\u53d1\u73b0\u6700\u591a\u53ea\u6709\u4e0d\u5230$10000$\u4e2a\u3002\n\n~~\u4e3a\u5565\u522b\u7684\u9898\u89e3\u90fd\u662f8282\u6211\u641c\u51fa\u6765\u662f9200\uff1f~~\n\n\u90a3\u5c31\u628a\u8fd9\u4e9b\u5408\u6cd5\u7684$f$\u51fd\u6570\u503c\u90fd\u653e\u8fdb\u54c8\u5e0c\u8868\u5b58\u8d77\u6765\uff0c\u7136\u540e\u8bbe$dp_{i, x, 0/1}$\u8868\u793a\u5f53\u524d$dp$\u5230\u4e86\u7b2c$i$\u4f4d\uff0c\u4e58\u79ef\u4e3a\u54c8\u5e0c\u8868\u91cc\u7684\u7b2c$x$\u4e2a\u72b6\u6001\uff0c\u6709\u6ca1\u6709\u5361\u5230\u6700\u9ad8\u4f4d\u3002\n\n\u8fd9\u4e2a\u6734\u7d20\u7684\u6570\u4f4d$dp$\u5c31\u679a\u4e3e\u4e00\u4e0b\u4e0a\u4e00\u4f4d\u7684\u4e58\u79ef\uff0c\u8fd9\u4e00\u4f4d\u9009\u4ec0\u4e48\u6570\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u8003\u8651\u524d\u5bfc\u96f6\u7684\u60c5\u51b5\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u641c\u51fa\u6765\u6bcf\u79cd\u5408\u6cd5\u72b6\u6001\u6709\u591a\u5c11\u4e2a\u6570\u4f1a\u53d8\u6210\u5b83\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u4f4d\u7f6e$(i, j)$\uff0c\u5b83\u4e0a\u9762\u5c31\u6709$tot_i \\times tot_j$\u4e2a\u91d1\u77ff\u3002\n\n\u90a3\u4e48\u5bf9$tot$\u6392\u5e8f\uff0c\u5c06\u4e00\u4e2a\u4e8c\u5143\u7ec4$(i, j)$\u653e\u8fdb\u5806\u91cc\u8868\u793a\u8fd9\u662f$tot$\u6570\u7ec4\u7684\u7b2c$i$\u4e2a\u548c\u7b2c$j$\u4e2a\u6570\u76f8\u4e58\u3002\n\n$(i, j)$\u53ef\u4ee5\u8f6c\u79fb\u5230$(i + 1, j)$\u548c$(i, j + 1)$\uff0c\u4f46\u662f\u8fd9\u6837\u76f4\u63a5\u8f6c\u79fb\u4f1a\u6709\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c$(i - 1, j)$\u548c$(i, j - 1)$\u90fd\u80fd\u8f6c\u79fb\u5230$(i, j)$\uff0c\u6240\u4ee5\u518d\u8bb0\u5f55\u4e00\u4e0b\u4e0a\u4e00\u6b21\u662f\u4e0d\u662f\u5c06$j$\u52a0\u4e00\uff0c\u5982\u679c\u4e0a\u6b21\u5c06$j$\u52a0\u4e00\uff0c\u90a3\u4e48\u8fd9\u6b21\u4e0d\u80fd\u518d\u5c06$i$\u52a0\u4e00\u3002\n\n\u8fd9\u6837\u5806\u4e2d\u7684\u72b6\u6001\u53d8\u4e3a\u4e86\u4e00\u4e2a\u4e09\u5143\u7ec4$(i, j, p)$\uff0c\u4ee3\u8868$tot$\u6570\u7ec4\u7684\u7b2c$i$\u4e2a\u548c\u7b2c$j$\u4e2a\u6570\u76f8\u4e58\uff0c\u4e0a\u6b21\u662f\u4e0d\u662f\u5c06$j$\u52a0\u4e00\u3002\n\n------------\n\n# Code\n\n```cpp\n/*\n    _______                       ________                        _______\n   / _____ \\                     / ______ \\                      / _____ \\\n  / /     \\_\\  _     __     _   / /      \\ \\   _     __     _   / /     \\_\\\n | |          | |   |  |   | | | |        | | | |   |  |   | | | |\n | |          | |   |  |   | | | |     __ | | | |   |  |   | | | |\n | |       __ \\  \\  |  |  /  / | |     \\ \\| | \\  \\  |  |  /  / | |       __\n  \\ \\_____/ /  \\  \\/ /\\ \\/  /   \\ \\_____\\  /   \\  \\/ /\\ \\/  /   \\ \\_____/ /\n   \\_______/    \\___/  \\___/     \\______/\\__\\   \\___/  \\___/     \\_______/\n*/\n#include <iostream>\n#include <queue>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\n#define ll long long\n#define RE register\n\nconst int HashMOD = 100077;\nconst int MOD = 1e9 + 7;\n\nint k, head[HashMOD + 5], num, fa[20], shu[20], len, tot[10005], ans;\n\nll dp[14][10005][2];\n\nll n;\n\nstruct Node {\n\tint next;\n\tll to;\n} edge[HashMOD + 5];\n\nstruct HeapNode {\n\tint pos1, pos2;\n\tll qz;\n\tbool flag;\n\tbool operator < (const HeapNode &rhs) const {\n\t\treturn qz < rhs.qz;\n\t}\n};\n\ninline void Add(ll x) {\n\tint pos = x % HashMOD;\n\tfor (RE int i = head[pos]; i; i = edge[i].next) {\n\t\tll v = edge[i].to;\n\t\tif (v == x) return;\n\t}\n\tedge[++num] = (Node){head[pos], x};\n\thead[pos] = num;\n\treturn;\n}\n\ninline int Find(ll x) {\n\tint pos = x % HashMOD;\n\tfor (RE int i = head[pos]; i; i = edge[i].next) {\n\t\tll v = edge[i].to;\n\t\tif (v == x) return i;\n\t} \n\treturn 0;\n}\n\ninline ll Ksm(ll a, int b) {\n\tll tmp = 1;\n\twhile (b) {\n\t\tif (b & 1) tmp = tmp * a;\n\t\ta = a * a;\n\t\tb >>= 1;\n\t}\n\treturn tmp;\n}\n\nvoid Work() {\n\tll tmp = 1;\n\tfor (RE ll i = 1; i <= 9; i++)\n\t\ttmp *= Ksm(i, fa[i]);\n\tAdd(tmp);\n\treturn;\n}\n\nvoid Dfs(int x, int sum) {\n\tif (x == 10 || sum == 12) {\n\t\tWork();\n\t\treturn;\n\t}\n\tfor (RE int i = 0; i <= 12 - sum; i++)\n\t\tfa[x] = i, Dfs(x + 1, sum + i);\n\treturn;\n}\n\nvoid Solve(ll n) {\n\tll tmp = n;\n\twhile (n) {\n\t\tshu[++len] = n % 10;\n\t\tn /= 10;\n\t}\t\n\tfor (RE int i = 1; i <= shu[len]; i++) dp[len][Find(i)][i == shu[len]] = 1;\n\tfor (RE int i = len - 1; i >= 1; i--) {\n\t\tfor (RE int now = 1; now <= 9; now++)\n\t\t\tdp[i][Find(now)][0]++;\n\t\tfor (RE int lst = 1; lst <= num; lst++) \n\t\t\tfor (RE int p = 0; p <= 1; p++)\n\t\t\t\tif (dp[i + 1][lst][p]) {\n\t\t\t\t\tfor (RE int now = 1; now <= (p ? shu[i] : 9); now++) {\n\t\t\t\t\t\tll ne = edge[lst].to * now;\n\t\t\t\t\t\tdp[i][Find(ne)][p && (now == shu[i])] += dp[i + 1][lst][p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t}\n\tfor (RE int i = 1; i <= num; i++)\n\t\tif (edge[i].to <= tmp)\n\t\t\ttot[i] += dp[1][i][0] + dp[1][i][1];\n\treturn;\n}\n\nbool Cmp(int a, int b) {\n\treturn a > b;\n}\n\nvoid Qm(int &x) {\n\tx -= MOD;\n\tx += x >> 31 & MOD;\n\treturn;\n}\n\nvoid Calc(int k) {\n\tsort(tot + 1, tot + num + 1, Cmp);\n\tpriority_queue<HeapNode> q;\n\tq.push((HeapNode){1, 1, 1LL * tot[1] * tot[1] % MOD, false});\n\twhile (!q.empty() && k) {\n\t\tHeapNode tmp = q.top(); q.pop();\n\t\tint pos1 = tmp.pos1, pos2 = tmp.pos2;\n\t\tif (!tmp.qz) break;\n\t\tk--;\n\t\tQm(ans += tmp.qz % MOD);\n\t\tif (pos1 <= num && tmp.flag == false) q.push((HeapNode){pos1 + 1, pos2, 1LL * tot[pos1 + 1] * tot[pos2], false});\n\t\tif (pos2 <= num) q.push((HeapNode){pos1, pos2 + 1, 1LL * tot[pos1] * tot[pos2 + 1], true});\n\t}\n\treturn;\n}\n\nint main() {\n\tDfs(1, 0);\n\tscanf(\"%lld%d\", &n, &k);\n\tSolve(n);\n\tCalc(k);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1605606186,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3303 \u3010[SDOI2013]\u6dd8\u91d1\u3011"
    }
]