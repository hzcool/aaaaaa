[
    {
        "content": "\u770b\u5230\u4e24\u7bc7\u9898\u89e3\u90fd\u662f\u7528\u66b4\u529b\u7684\u65b9\u6cd5\u8fc7\u7684\uff0c\u8fd9\u4e2a\u6570\u636e\u771f\u7684\u662f\u6bd4\u8f83\u6c34\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4e25\u683c\u590d\u6742\u5ea6\u7684\u505a\u6cd5\uff1a\n\n\u8003\u8651\u4e24\u79cd\u66b4\u529b\uff0c\n\n\u4e00\u79cd\u662f\u6539\u70b9\u65f6\u5bf9\u4e8e\u6bcf\u6761\u4e0e\u5b83\u76f8\u8fde\u8fb9\u90fd\u8fdb\u884c\u66f4\u6539\uff08\u8be2\u95ee\u5feb\uff09\n\n\u4e00\u79cd\u662f\u5728\u8be2\u95ee\u7684\u65f6\u5019\u8003\u8651\u66b4\u529b\u679a\u4e3e\u8fb9\u66f4\u65b0\u7b54\u6848\uff08\u4fee\u6539\u5feb\uff09\n\n\u8003\u8651\u5ea6\u6570\u5206\u6cbb\uff0c\u53d1\u73b0\u5ea6\u6570\u5927\u4e8e$\\sqrt n$\u7684\u53ea\u4f1a\u6700\u591a\u6709$\\sqrt n$\u4e2a\u8003\u8651\u5c06\u8fd9\u6839\u53f7\u4e2a\u4f5c\u4e3a\u5173\u952e\u70b9\uff08\u5efa\u7acb\u5173\u952e\u70b9\u4e0e\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8fb9\uff09\n\n\u5728\u975e\u5173\u952e\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8003\u8651\u5f006\u4e2a`set`\u7ef4\u62a4`AA,AB,AC,CC,BC,CC`\u7684\u60c5\u51b5(\u8fb9\u6743\u6392\u5e8f)\n\n\u5728\u5173\u952e\u70b9\u7684\u65f6\u5019\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u5173\u952e\u70b9\u5f00\u4e09\u4e2a`set`\u7ef4\u62a4\u4e0e\u5b83\u76f8\u8fde\u7684\u4e09\u4e2a\u989c\u8272\n\n\u8ba8\u8bba\u4fee\u6539\uff0c\u5f53\u6539\u4e00\u4e2a\u975e\u5173\u952e\u70b9\uff0c\u5219\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u5b83\u7684\u6240\u6709\u8fb9\uff0c\u82e5\u679a\u4e3e\u5230\u7684\u53e6\u5916\u4e00\u4e2a\u70b9\u662f\u975e\u5173\u952e\u70b9\uff0c\u5219\u5728\u5916\u8fb96\u4e2a`set`\u91cc\u9762\u6539\uff0c\u5426\u5219\u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u70b9\u7684\u5173\u952e\u70b9\u5185\u90e8`set`\u8fdb\u884c\u4fee\u6539\n\n\u82e5\u5f53\u524d\u6539\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u6211\u4eec\u679a\u4e3e\u5173\u952e\u70b9\u4e0e\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8fb9\uff08\u56e0\u4e3a\u5173\u952e\u70b9\u53ea\u6709$\\sqrt n$\u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e5f\u662f$\\sqrt n$\uff09\u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u5173\u952e\u70b9\u8fdb\u884c\u4fee\u6539\u3002\n\n\u8003\u8651\u8be2\u95ee\uff0c\u5bf9\u4e8e\u975e\u5173\u952e\u70b9\u4e4b\u95f4\u7684\u8fb9\u8003\u8651\u5728\u5916\u90e8`set`\u67e5\u8be2\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u5173\u952e\u70b9\uff0c\u67e5\u8be2\u4ee5\u8fd9\u4e2a\u5173\u952e\u70b9\u548c\u53e6\u5916\u989c\u8272\u8fb9\u7684\u6700\u5c0f\u503c\u3002\n\n\u590d\u6742\u5ea6$O(n\\sqrt nlogm)$\u662f\u4e0d\u662f\u611f\u89c9\u8fd9\u4e2a`3s`\u8dd1\u4e0d\u600e\u4e48\u4e0b?\n\n\u9996\u5148\u8fd9\u4e2alog\u8dd1\u4e0d\u6ee1\uff0c\u56e0\u4e3a\u4e00\u5171\u53ea\u67092m\u4e2a\u70b9\u52a0\u5165set\uff0c\u6240\u4ee5\u7b97\u5c0f\u5e38\u6570\n\n\u800c\u4e14\u9898\u76ee\u4fdd\u8bc1\uff1a\u65e0\u5411\u56fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u81f3\u591a\u80fd\u9009\u51fa3\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u8fb9\u5168\u90e8\u96c6\u4e2d\u5728\u4e00\u5806\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u5361\u4e0d\u6389\uff0c\u5b9e\u6d4b\u4e0d\u5f00`O2`\u8dd11\u79d2\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint read()\n{\n\tchar c;\n\tint w=1;\n\twhile((c=getchar())>'9'||c<'0')if(c=='-')w=-1;\n\tint ans=c-'0';\n\twhile((c=getchar())>='0'&&c<='9')ans=(ans<<1)+(ans<<3)+c-'0';\n\treturn ans*w;\n}\nint n,m;\nconst int xx=1e5+5;\nstruct node\n{\n\tint next,to,v;\n}e[xx*10];\nint cnt;\nint h[xx],ds[xx],vis[xx],val[xx*5],uu[xx*5],vv[xx*5];\nvoid add(int x,int y,int z)\n{\n\tcnt++;\n\te[cnt].next=h[x];\n\th[x]=cnt;\n\te[cnt].to=y;\n\te[cnt].v=z;\n\tds[y]++;\n}\nnode w[xx*5];\nint hh[xx];\nint cntt;\nvoid add1(int x,int y,int z)\n{\n\tcntt++;\n\tw[cntt].next=hh[x];\n\thh[x]=cntt;\n\tw[cntt].to=y;\n\tw[cntt].v=z;\n}\nint id[xx*5],bel[xx];\nbool cmp(int x,int y){return ds[x]>ds[y];}\nstruct nod\n{\n\tint x;\n\tnod(){}\n\tnod(int a):x(a){}\n\tbool operator<(const nod&w)const{return x<w.x;}//\u53ea\u52a0\u5165\u8fb9\u6743 \n};\nint to[4][4],ts[xx];\nstruct no\n{\n\tmultiset<nod>s[4];\n\tint get(int id)\n\t{\n\t\tif(!s[id].size())return 2147483647;\n\t\treturn (*s[id].begin()).x;\n\t}\n\tvoid add(int x,int op,int id)\n\t{\n\t\tif(op==-1)s[id].erase(s[id].find(nod(x)));\n\t\telse s[id].insert(nod(x));\n\t}\n}t[351];\nmultiset<nod>s[7];\nint get(int id)\n{\n\tif(!s[id].size())return 2147483647;\n\treturn (*s[id].begin()).x;\n}\nvoid adds(int x,int op,int id)\n{\n\tif(op==-1)s[id].erase(s[id].find(nod(x)));\n\telse s[id].insert(nod(x));\n}\n//\u7528set\u5b58\uff0c\u548c\u4e2a\u6570\u6709\u5173 \nint main(){\n\tto[1][1]=1;\n\tto[1][2]=to[2][1]=2;\n\tto[1][3]=to[3][1]=3;\n\tto[2][2]=4;\n\tto[2][3]=to[3][2]=5;\n\tto[3][3]=6;\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=n;i++)bel[i]=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tid[i]=i;\n\t\tint a,b;\n\t\ta=uu[i]=read();\n\t\tb=vv[i]=read();\n\t\tval[i]=read();\n\t\tadd(a,b,val[i]);\n\t\tadd(b,a,val[i]);\n\t}\n\tsort(id+1,id+m+1,cmp);\n\tfor(int i=1;i<=min(350,n);i++)vis[id[i]]=1,ts[id[i]]=i;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a=uu[i],b=vv[i];\n\t\tif(vis[a]&&vis[b])add1(a,b,val[i]),add1(b,a,val[i]),t[ts[a]].add(val[i],1,1),t[ts[b]].add(val[i],1,1);\n\t\telse if(!vis[a]&&!vis[b])adds(val[i],1,1);\n\t\telse \n\t\t{\n\t\t\tif(vis[a])swap(a,b);//visa=0visb=1\n\t\t\tt[ts[b]].add(val[i],1,1);\n\t\t}\n\t}\n\tint q=read();\n\tfor(int aa=1;aa<=q;aa++)\n\t{\n\t\tchar s[10];\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='A')\n\t\t{\n\t\t\tint a=s[3]-'A'+1,b=s[4]-'A'+1;\n\t\t\tint minn=get(to[a][b]);\n\t\t\tfor(int i=1;i<=min(350,n);i++)\n\t\t\t{\n\t\t\t\tif(bel[id[i]]!=a&&bel[id[i]]!=b)continue;\n\t\t\t\tminn=min(minn,t[i].get((bel[id[i]]==a)?b:a));\n\t\t\t}\n\t\t\tif(minn==2147483647)puts(\"No Found!\");\n\t\t\telse cout<<minn<<\"\\n\";\n\t\t}\n\t\telse //s[4]\n\t\t{\n\t\t\tint x=read();\n\t\t\tint a=s[4]-'A'+1;\n\t\t\tif(bel[x]==a)continue;\n\t\t\tif(vis[x])\n\t\t\t{\n\t\t\t\tfor(int i=hh[x];i;i=w[i].next)\n\t\t\t\t{\n\t\t\t\t\tt[ts[w[i].to]].add(w[i].v,-1,bel[x]);\n\t\t\t\t\tt[ts[w[i].to]].add(w[i].v,1,a);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tfor(int i=h[x];i;i=e[i].next)\n\t\t\t\t{\n\t\t\t\t\tif(vis[e[i].to])\n\t\t\t\t\t{\n\t\t\t\t\t\tt[ts[e[i].to]].add(e[i].v,-1,bel[x]);\n\t\t\t\t\t\tt[ts[e[i].to]].add(e[i].v,1,a);\n\t\t\t\t\t}\n\t\t\t\t\telse \n\t\t\t\t\t{\n\t\t\t\t\t\tadds(e[i].v,-1,to[bel[x]][bel[e[i].to]]);\n\t\t\t\t\t\tadds(e[i].v,1,to[a][bel[e[i].to]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbel[x]=a;\n\t\t}\n\t}\n\treturn 0;\n}\n/*\nA 1  AA 1  BB 4 \nB 2  AB 2  BC 5\nC 3  AC 3  CC 6\n*/\n```\n",
        "postTime": 1618710763,
        "uid": 371852,
        "name": "\u4e00\u5ff5\u4e4b\u95f4\u3001\u3001",
        "ccfLevel": 0,
        "title": "P2500 [SDOI2012]\u96c6\u5408"
    },
    {
        "content": "### \u9898\u89e3\n\n\u8fd9\u9898\u4f5c\u4e3a\u4e00\u4e2a\u7701\u9009\u9898\uff0c\u6570\u636e\u5f3a\u5ea6\u611f\u4eba\u3002\n\n\u8fd9\u9898\u7684\u6b63\u89e3\u524d $50\\%$ \u590d\u6742\u5ea6\u4e3a $O(m+qn\\log{m})$\uff0c\u540e $50\\%$ \u7684\u590d\u6742\u5ea6\u4e3a $O(m+q\\log{n})$\u3002\u4f46\u662f\u4e00\u65b9\u9762\u6570\u636e\u5b9e\u5728\u592a\u6c34\uff0c\u4e00\u65b9\u9762\u8fd1\u5341\u5e74\u6765\u8bc4\u6d4b\u673a\u7684\u901f\u5ea6\u52a0\u4e86\u4e0d\u5c11\uff0c\u5341\u5e74\u524d\u4e5f\u6ca1\u6709 `O2`\uff0c\u5bfc\u81f4\uff1a\n\n- \u5f53\u65f6\u8fb9\u4e0d\u6392\u5e8f\u7684 $O(qm)$ \u66b4\u529b\u53ea\u80fd\u5f97\u5230 $20$ \u5206\uff0c\u73b0\u5728\u53ef\u4ee5\u5f97\u5230 $50$ \u5206\u3002\n- \u8fb9\u6392\u5e8f\u7684 $O(qm)$ \u66b4\u529b\u7167\u5e38\u7406\u4e5f\u5e94\u8be5\u53ea\u5f97 $20$ \u5206\uff08\u4ee5\u73b0\u5728\u7684\u8bc4\u6d4b\u673a\u901f\u5ea6\u6700\u591a $50$ \u5206\uff09\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u7ba1\u5728\u5f53\u65f6\u8fd8\u662f\u73b0\u5728\u90fd\u53ef\u4ee5\u62ff\u5230 $100$ \u5206\uff0c\u5e76\u4e14\u8fd0\u884c\u65f6\u95f4\u66b4\u6253\u6b63\u89e3\u3002\n- \u590d\u6742\u5ea6\u4e3a $O(m+q\\sqrt[]{n}\\log{m})$ \u7684\u505a\u6cd5\u5e94\u8be5\u53ea\u80fd\u5f97\u5230 $50$ \u5206\uff0c\u4f46\u662f\u73b0\u5728\u7684\u8bc4\u6d4b\u673a\u5b9e\u5728\u662f\u592a\u5feb\u4e86\uff0c\u6240\u4ee5\u5f97\u5230\u4e86 $100$ \u5206\u3002\n\n\u8fd9\u91cc\u628a\u5b98\u65b9\u9898\u89e3\u7ed9\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u5728[\u8fd9\u9053\u9898\u7684\u8ba8\u8bba](https://www.luogu.com.cn/discuss/37942)\u4e2d\u5c31\u6709\uff0c\u4f46\u662f\u5728\u8ba8\u8bba\u4e2d\u5b9e\u5728\u662f\u592a\u4e0d\u663e\u773c\u4e86\uff0c\u6545\u6211\u5728\u9898\u89e3\u91cc\u518d\u5199\u4e00\u904d\u3002\n\n\u5bf9\u4e8e\u524d $50\\%$ \u7684\u90e8\u5206\uff0c$O(qm)$ \u66b4\u529b\u662f\u663e\u7136\u7684\u3002\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5f00 $6$ \u4e2a\u5806\u52a8\u6001\u7ef4\u62a4\u6bcf\u4e24\u4e24\u96c6\u5408\u95f4\u7684\u7b54\u6848\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86 $O(m+qn\\log{m})$ \u7684\u505a\u6cd5\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u50cf[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/fzwde/solution-p2500)\u4e00\u6837\u5bf9\u70b9\u7684\u5ea6\u6570\u5206\u7c7b\u8ba8\u8bba\uff0c\u6839\u636e\u6839\u53f7\u5206\u7c7b\u7684\u4f20\u7edf\u827a\u80fd\u5f97\u5230 $O(m+q\\sqrt[]{n}\\log{m})$ \u7684\u505a\u6cd5\uff0c\u4f46\u8fd9\u5bf9\u63d0\u9ad8\u5206\u6570\u6ca1\u6709\u5e2e\u52a9\u3002\n\n\u91cd\u70b9\u662f\u540e $50\\%$ \u7684\u6570\u636e\uff0c\u4ed6\u7ed9\u4e86\u4e00\u4e2a\u7279\u6b8a\u6027\u8d28\uff1a  \n\u65e0\u5411\u56fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u81f3\u591a\u80fd\u9009\u51fa $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n\u6211\u4eec\u6765\u601d\u8003\u8fd9\u4e2a\u6027\u8d28\u4ee3\u8868\u7684\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u8bc1\u660e\u81f3\u591a\u4ea7\u751f $3$ \u7247\u751f\u6210\u68ee\u6797\u3002\n\n> **\u8bc1\u660e\uff08\u642c\u81ea\u4e0a\u9762\u7684\u8ba8\u8bba\uff09\uff1a**  \n> \u5bf9\u4e8e\u4e00\u7247\u751f\u6210\u68ee\u6797\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u6811\u4e0a\uff0c\u5219\u4ed6\u4eec\u5728\u6811\u4e0a\u7684\u8def\u5f84\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u6761\u589e\u5e7f\u8def\u3002\u5982\u679c\u5c06\u8fd9\u7247\u68ee\u6797\u5220\u9664\uff0c\u5219\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u6d41\u81f3\u5c11\u51cf $1$\uff0c\u90a3\u4e48\u4e09\u6b21\u4e4b\u540e\uff0c\u4efb\u610f\u4e24\u70b9\u7684\u6700\u5927\u6d41\u90fd\u4e3a $0$\uff0c\u5373\u6240\u6709\u8fb9\u90fd\u6ca1\u4e86\u3002  \n> $\\Box$\n\n\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u53ea\u9700\u8981\u89e3\u51b3\u6811\uff08\u68ee\u6797\uff09\u7684\u95ee\u9898\uff0c\u7136\u540e\u628a\u4e09\u4e2a\u7b54\u6848\u53d6\u4e2a $\\min$ \u5c31\u597d\u4e86\u3002\n\n\u8003\u8651\u6811\u4e0a\u600e\u4e48\u505a\uff0c\u5bf9\u4e8e\u7236\u4eb2\u8fb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6539\u3002\u5bf9\u4e8e\u513f\u5b50\u8fb9\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u6bcf\u4e2a\u96c6\u5408\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\u6709\u7528\uff0c\u8fd9\u4e5f\u662f\u5e38\u6570\u7ea7\u7684\u3002\u6ce8\u610f\u6b64\u65f6\u5bf9\u4e8e\u7236\u4eb2\uff0c\u201c\u6bcf\u79cd\u96c6\u5408\u6700\u5c0f\u7684\u513f\u5b50\u201d\u53ef\u80fd\u88ab\u6539\u4e86\uff0c\u8981\u5224\u3002\n\n\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u4ee5\u7528 `bfs` \u5e8f\uff08\u7236\u4eb2\u548c\u513f\u5b50\u5728 `bfs` \u5e8f\u4e0a\u662f\u8fde\u7eed\u7684\uff09+ \u7ebf\u6bb5\u6811\u3001\u6216\u8005\u53ef\u5220\u9664\u5806\u3001\u6216\u8005 `multiset` \u7ef4\u62a4\u3002\u53ea\u4e0d\u8fc7\u5f53\u65f6\u5e94\u8be5\u662f `Pascal`\uff0c\u6240\u4ee5 `multiset` \u4e0d\u80fd\u7528\uff0c\u5806\u4e5f\u8981\u624b\u5199\u5c31\u662f\u4e86\u3002\u4f46\u662f\u672c\u4eba\u6bd4\u8f83\u61d2\uff0c\u7528\u4e86 `multiset`\u3002\n\n\u4fee\u6539\u548c\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u90fd\u662f $O(\\log{n})$ \u7684\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a $O(m+q\\log{n})$ \u7684\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define il inline\n\nint n,m,q; char z[9];\n\nil int Id(int x,int y){if (x>y) std::swap(x,y); return x?(x<2?2+y:3+y):y;}\n\nnamespace Sub1\n{\n    const int N=105;\n    \n    int b[N],g[N][N]; struct node{int x,y; il friend bool operator < (node x,node y){return g[x.x][x.y]>g[y.x][y.y];}}; std::priority_queue<node> h[6];\n\n    il void main()\n    {\n        int u,v,w; node x; while (m--) scanf(\"%d%d%d\",&u,&v,&w),(!g[u][v]||g[u][v]>w)&&(g[u][v]=g[v][u]=w);\n        for (u=1; u<=n; u++) for (v=1; v<=n; v++) if (g[u][v]) h[0].push({u,v});\n        for (scanf(\"%d\",&q); q; q--)\n            if (scanf(\"%s\",z),z[0]=='M')\n            {\n                scanf(\"%d\",&u),b[u]=z[4]-65;\n                for (v=1; v<=n; v++) if (g[u][v]) h[Id(b[u],b[v])].push({u,v});\n            }\n            else\n            {\n                for (u=Id(z[3]-65,z[4]-65); h[u].size(); h[u].pop())\n                    if (x=h[u].top(),Id(b[x.x],b[x.y])==u){printf(\"%d\\n\",g[x.x][x.y]); break;}\n                if (!h[u].size()) puts(\"No Found!\");\n            }\n    }\n}\n\nnamespace Sub2\n{\n    const int N=1e5+5,M=10*N;\n\n    int b[N],to[M],nx[M],wt[M],hd[N],sze=1; std::multiset<int> S[6]; bool o[N],O[M];\n    struct TREE\n    {\n        int fa[N],fv[N]; std::multiset<int> s[N][3];\n\n        il void Dfs(int u)\n        {\n            o[u]=1; int i,v;\n            for (i=hd[u]; i; i=nx[i]) if (!o[v=to[i]]&&!O[i>>1])\n                O[i>>1]=1,fa[v]=u,fv[v]=wt[i],Dfs(v);\n        }\n\n        il void Init()\n        {\n            memset(o,0,n+1); int i;\n            for (i=1; i<=n; i++) if (!fa[i]) Dfs(i);\n            for (i=1; i<=n; i++) if (fa[i]) s[fa[i]][0].insert(fv[i]);\n            for (i=1; i<=n; i++) if (s[i][0].size()) S[0].insert(*s[i][0].begin());\n        }\n\n        il void Chg(int c,int x)\n        {\n            if (b[x]==c) return; int i,j;\n            if (fa[x])\n            {\n                for (i=0; i<3; i++) if (s[fa[x]][i].size()) j=Id(b[fa[x]],i),S[j].erase(S[j].find(*s[fa[x]][i].begin()));\n                s[fa[x]][b[x]].erase(s[fa[x]][b[x]].find(fv[x])),s[fa[x]][c].insert(fv[x]);\n                for (i=0; i<3; i++) if (s[fa[x]][i].size()) S[Id(b[fa[x]],i)].insert(*s[fa[x]][i].begin());\n            }\n            for (i=0; i<3; i++) if (s[x][i].size()) j=Id(b[x],i),S[j].erase(S[j].find(*s[x][i].begin())),S[Id(c,i)].insert(*s[x][i].begin());\n        }\n    }T[3];\n\n    il void Add(int u,int v,int w){to[++sze]=v,nx[sze]=hd[u],wt[sze]=w,hd[u]=sze;}\n\n    il void main()\n    {\n        int u,v,w; while (m--) scanf(\"%d%d%d\",&u,&v,&w),Add(u,v,w),Add(v,u,w);\n        for (w=0; w<3; w++) T[w].Init();\n        for (scanf(\"%d\",&q); q; q--)\n            if (scanf(\"%s\",z),z[0]=='M') scanf(\"%d\",&u),w=z[4]-65,T[0].Chg(w,u),T[1].Chg(w,u),T[2].Chg(w,u),b[u]=w;\n            else S[w=Id(z[3]-65,z[4]-65)].size()?(printf(\"%d\\n\",*S[w].begin())):(puts(\"No Found!\"));\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n\n    if (n<101) Sub1::main(); else Sub2::main();\n\n    return 0;\n}\n```",
        "postTime": 1634093076,
        "uid": 72765,
        "name": "Peanut_Tang",
        "ccfLevel": 7,
        "title": "[SDOI2012]\u96c6\u5408 \u9898\u89e3"
    },
    {
        "content": "**\u9898\u5916\u8bdd**\n\n~~\u66b4\u529b\u78be\u6807\u7b97~~\n\n****\n**\u601d\u8def & Coding**\n\n\u5176\u5b9e\u8fd9\u4e00\u9898\u975e\u5e38\u7684\u7b80\u5355\n\n\u9996\u5148,\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u8fb9\n\n```cpp\nstruct node\n{\n\tint u;\n\tint v;\n\tint w;\n}e[500010];\n```\n\n\u7136\u540e\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4 $fa[]$ \u6765\u50a8\u5b58=\u8fd9\u4e00\u4e2a\u70b9\u6240\u5c5e\u7684\u5408\u96c6\n\n\u63a5\u7740\uff0c\u5982\u679c\u8f93\u5165\u8ba9\u6211\u4eec\u6539\u53d8\u67d0\u4e00\u4e2a\u70b9 $x$ \u7684\u9635\u8425\n\n\u6211\u4eec\u53ea\u9700\u8981\u5c06 $fa[x]$ \u6539\u6210\u76ee\u6807\u9635\u8425\u5373\u53ef\n\n\u5982\u679c\u4ed6\u8ba9\u6211\u4eec\u6c42\u6700\u5c0f\u8fb9\u6743\uff0c\u6211\u4eec\u5c31\u628a $m$ \u4e2a\u8fb9\u5168\u90fd\u626b\u4e00\u904d\n\n\u5c06\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u7684\u8fb9\u6743\u53d6\u4e00\u4e2a $min$ \u5373\u53ef\n\n```cpp\nvoid query(int num_1,int num_2)\n{\n\tint minn = INT_MAX;\n\tfor(int i = 1;i <= tot;i++)\n\t{\n\t\tint u = e[i].u;\n\t\tint v = e[i].v;\n\t\tint w = e[i].w;\n\t\tif(fa[u] == num_1 and fa[v] == num_2) minn = min(minn,w);\n\t\tif(fa[v] == num_1 and fa[u] == num_2) minn = min(minn,w);\n\t}\n\tif(minn == INT_MAX) printf(\"No Found!\\n\");\n\telse printf(\"%lld\\n\",minn);\n}\n```\n\n\u4e8e\u662f\uff0c\u4ee3\u7801:\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\ninline int read()\n{\n   register int s = 0,w = 1;\n   register char ch = getchar();\n   while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n   while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0',ch = getchar();\n   return s * w;\n}\n\nint tot;\nint n,m,q;\nint fa[500010];\n\nstruct node\n{\n\tint u;\n\tint v;\n\tint w;\n}e[500010];\n\nvoid query(int num_1,int num_2)\n{\n\tint minn = INT_MAX;\n\tfor(int i = 1;i <= tot;i++)\n\t{\n\t\tint u = e[i].u;\n\t\tint v = e[i].v;\n\t\tint w = e[i].w;\n\t\tif(fa[u] == num_1 and fa[v] == num_2) minn = min(minn,w);\n\t\tif(fa[v] == num_1 and fa[u] == num_2) minn = min(minn,w);\n\t}\n\tif(minn == INT_MAX) printf(\"No Found!\\n\");\n\telse printf(\"%lld\\n\",minn);\n}\n\nsigned main()\n{\n    for(int i = 1;i <= 500005;i++) fa[i] = 1;\n\tn = read();\n\tm = read();\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint u,v,w;\n\t\tu = read();\n\t\tv = read();\n\t\tw = read();\n\t\te[++tot].u = u;\n\t\te[tot].v = v;\n\t\te[tot].w = w;\n\t}\n\tq = read();\n\twhile(q--)\n\t{\n\t\tstring s;\n\t\tint k;\n\t\tcin >> s;\n\t\tif(s == \"MoveA\")\n\t\t{\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tfa[k] = 1;\n\t\t}\n\t\telse if(s == \"MoveB\")\n\t\t{\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tfa[k] = 2;\n\t\t}\n\t\telse if(s == \"MoveC\")\n\t\t{\n\t\t\tscanf(\"%lld\",&k);\n\t\t\tfa[k] = 3;\n\t\t}\n\t\telse if(s == \"AskAA\") query(1,1);\n\t\telse if(s == \"AskAB\") query(1,2);\n\t\telse if(s == \"AskAC\") query(1,3);\n\t\telse if(s == \"AskBB\") query(2,2);\n\t\telse if(s == \"AskBC\") query(2,3);\n\t\telse if(s == \"AskCC\") query(3,3);\n\t}\n\treturn 0;\n}\n```\n\u63a5\u7740\uff0c\u606d\u559c\u60a8\uff0cTLE\u4e86\uff01\n\n~~\u5999\u554a~~\n\n\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u8981\u60f3\u7740\u5982\u4f55\u4f18\u5316\n\n\u9996\u5148\u770b\u4fee\u6539\u64cd\u4f5c\n\n\u4f46\u663e\u7136 $O(1)$ \u65e0\u6cd5\u4f18\u5316\u4e86\n\n\u90a3\u6211\u4eec\u60f3\u4e00\u60f3\u5728\u641c\u7d22\u8fb9\u7684\u65f6\u5019\u5982\u4f55\u7f29\u5c0f\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f:\n\n>\u8be2\u95ee\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5c5e\u4e8e $x$ \u96c6\u5408\u548c $y$ \u96c6\u5408\u7684\u6240\u6709\u8fb9\u4e2d\u6700\u5c0f\u7684\u6743\u503c\u662f\u591a\u5c11\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u8bbe\u60f3\uff0c\u5982\u4f55\u4f7f\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u8981\u6c42\u7684\u8fb9\u5c31\u662f\u6700\u5c0f\u7684\u8fb9\n\n\u7b54\u6848\u5f88\u663e\u7136\uff1a\u5148\u628a\u8fb9\u6392\u5e8f\u4e00\u8fb9\n\n\u8fd9\u6837\u80fd\u6781\u5927\u7a0b\u5ea6\u7f29\u5c0f\u904d\u5386\u7684\u8303\u56f4\n\nSo\uff0cAC Coding:\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\ninline int read()\n{\n   register int s = 0,w = 1;\n   register char ch = getchar();\n   while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\n   while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0',ch = getchar();\n   return s * w;\n}\n\nint n,m,q;\nint fa[500010];\n\nstruct node\n{\n\tint u;\n\tint v;\n\tint w;\n}e[500010];\n\nbool cmp(node x,node y)\n{\n\treturn x.w < y.w;\n}\n\nvoid query(int num_1,int num_2)\n{\n\tint minn = INT_MAX;\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint u = e[i].u;\n\t\tint v = e[i].v;\n\t\tint w = e[i].w;\n\t\tif(fa[u] == num_1 and fa[v] == num_2)\n\t\t{\n\t\t\tminn = min(minn,w);\n\t\t\tbreak;\n\t\t}\n\t\tif(fa[v] == num_1 and fa[u] == num_2)\n\t\t{\n\t\t\tminn = min(minn,w);\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(minn == INT_MAX) printf(\"No Found!\\n\");\n\telse printf(\"%lld\\n\",minn);\n}\n\nsigned main()\n{\n    for(int i = 1;i <= 500005;i++) fa[i] = 1;\n\tn = read();\n\tm = read();\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint u,v,w;\n\t\tu = read();\n\t\tv = read();\n\t\tw = read();\n\t\te[i].u = u;\n\t\te[i].v = v;\n\t\te[i].w = w;\n\t}\n\tsort(e + 1,e + m + 1,cmp);\n\tq = read();\n\twhile(q--)\n\t{\n\t\tstring s;\n\t\tint k;\n\t\tcin >> s;\n\t\tif(s == \"MoveA\") k = read(),fa[k] = 1;\n\t\telse if(s == \"MoveB\") k = read(),fa[k] = 2;\n\t\telse if(s == \"MoveC\") k = read(),fa[k] = 3;\n\t\telse if(s == \"AskAA\") query(1,1);\n\t\telse if(s == \"AskAB\") query(1,2);\n\t\telse if(s == \"AskAC\") query(1,3);\n\t\telse if(s == \"AskBB\") query(2,2);\n\t\telse if(s == \"AskBC\") query(2,3);\n\t\telse if(s == \"AskCC\") query(3,3);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1619785732,
        "uid": 413301,
        "name": "Digital_Sunrise",
        "ccfLevel": 7,
        "title": "P2500\u9898\u89e3"
    },
    {
        "content": "# [SDOI2012]\u96c6\u5408\n\n[Luogu P2500 [SDOI2012]\u96c6\u5408](https://www.luogu.com.cn/problem/P2500)\n\n## Solution\n\n\u5bb9\u6613\u53d1\u73b0\u4f7f\u7528\u4e00\u822c\u7684\u6570\u636e\u7ed3\u6784\u5f88\u96be\u7ef4\u62a4\u8fd9\u7c7b\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff0c\u7136\u540e\u5bf9\u66b4\u529b\u8fdb\u884c\u4f18\u5316\uff08\u4e0b\u8ff0\u65f6\u95f4\u590d\u6742\u5ea6\u9ed8\u8ba4 $n,m,q$ \u540c\u9636\uff09\u3002\n\n\u5bf9\u4e8e\u524d $50\\%$ \u7684\u6570\u636e\uff0c\u5bb9\u6613\u60f3\u5230\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u8be2\u95ee\u5206\u522b\u5efa\u4e00\u4e2a `set` \u7ef4\u62a4\u6ee1\u8db3\u6761\u4ef6\u7684\u8fb9\u6743\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5efa $6$ \u4e2a `set`\uff0c\u5206\u522b\u7ef4\u62a4 $A\\leftrightarrow A$\uff0c$A\\leftrightarrow B$\uff0c$A\\leftrightarrow C$\uff0c$B\\leftrightarrow B$\uff0c$B\\leftrightarrow C$\uff0c$C\\leftrightarrow C$ \u7684\u7b54\u6848\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5f71\u54cd\u7684 `set` \u5185\u7684\u8fb9\u6743\uff0c\u5177\u4f53\u5199\u6cd5\u5f88\u7b80\u5355\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u8003\u8651\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\u3002\u4e00\u4e2a\u5f88\u5178\u7684 Trick \u662f\u5c06\u6240\u6709\u70b9\u6309\u7167**\u5ea6\u6570**\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\uff0c\u5c06\u5ea6\u6570 $\\ge \\sqrt{n}$ \u7684\u70b9\u79f0\u4e3a\u5173\u952e\u70b9\uff0c\u5176\u4f59\u79f0\u4e3a\u975e\u5173\u952e\u70b9\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u5173\u952e\u70b9\u7684\u6570\u76ee\u662f $\\mathcal O(\\sqrt n)$ \u7ea7\u522b\u7684\u3002\n\n- \u5bf9\u4e8e\u975e\u5173\u952e\u70b9\uff0c\u8003\u8651\u5ef6\u7eed\u4e0a\u9762\u90e8\u5206\u5206\u7684\u601d\u8def\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 $\\sqrt n$\uff0c\u56e0\u6b64\u8fd9\u4e00\u90e8\u5206\u7684\u8fb9\u7684\u6570\u76ee\u662f $\\mathcal O(n\\sqrt n)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u540c\u6837\u53bb\u7ef4\u62a4 $6$ \u4e2a `set` \u6765\u8bb0\u5f55\u7b54\u6848\uff1b\n- \u5bf9\u4e8e\u5173\u952e\u70b9\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u5173\u952e\u70b9\u5f00 $3$ \u4e2a `set`\uff0c\u8868\u793a\u5173\u952e\u70b9\u5206\u522b\u5230\u4e09\u4e2a\u96c6\u5408\u7684\u8fb9\u96c6\u3002\u56e0\u4e3a\u5173\u952e\u70b9\u7684\u6570\u76ee\u662f $\\mathcal O(\\sqrt n)$ \u7ea7\u522b\u7684\uff0c\u56e0\u6b64\u8fd9\u90e8\u5206\u8fb9\u7684\u6570\u76ee\u4e5f\u662f $\\mathcal O(n\\sqrt n)$ \u7684\u3002\n\n\u5173\u4e8e\u4fee\u6539\uff1a\n\n- \u5bf9\u4e8e\u975e\u5173\u952e\u70b9\uff0c\u904d\u5386\u6240\u6709\u51fa\u8fb9 $u\\to v$\uff0c\u82e5 $v$ \u4e3a\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u4fee\u6539 $v$ \u7684 `set`\uff1b\u5426\u5219\u4fee\u6539 $6$ \u4e2a `set` \u7684\u5143\u7d20\uff1b\n- \u5bf9\u4e8e\u5173\u952e\u70b9\uff0c\u904d\u5386\u6240\u6709\u53ef\u5230\u8fbe\u7684\u5173\u952e\u70b9 $v$\uff0c\u4fee\u6539 $v$ \u7684 `set`\uff08\u8fd9\u90e8\u5206\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u5148\u628a\u6240\u6709\u70b9\u7684\u51fa\u8fb9\u6309\u7167\u662f\u5426\u662f\u5173\u952e\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u6240\u6709\u7684\u51fa\u8fb9\u4e3a\u5173\u952e\u70b9\u7684\u8fb9\u5c31\u4f1a\u88ab\u8fde\u7eed\u8bbf\u95ee\u5230\uff09\uff1b\n- \u4e24\u7c7b\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $\\mathcal O(\\sqrt n\\log n)$ \u7684\u3002\n\n\u5173\u4e8e\u8be2\u95ee\uff1a\n\n- \u5148\u5728\u7ef4\u62a4\u7684 $6$ \u4e2a `set` \u4e2d\u67e5\u8be2\u975e\u5173\u952e\u70b9\u95f4\u7684\u7b54\u6848\uff1b\n- \u7136\u540e\u904d\u5386\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u5173\u952e\u70b9\uff0c\u5728\u5173\u952e\u70b9\u7684 `set` \u4e2d\u67e5\u8be2\u7b54\u6848\uff1b\n- \u7b2c\u4e00\u6b65\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\log n)$\uff0c\u7b2c\u4e8c\u6b65\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(\\sqrt n\\log n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt n\\log n)$\uff0c\u5e38\u6570\u5f88\u5c0f\uff0c\u4f46\u662f\u7531\u4e8e\u6570\u636e\u539f\u56e0\uff0c\u8dd1\u7684\u6ca1\u6709\u66b4\u529b\u5feb\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e0a\u6ce8\u610f\u4e00\u4e0b\u5224\u65ad `set` \u662f\u5426\u4e3a\u7a7a\uff0c\u5426\u5219\u4f1a RE\u3002\u7531\u4e8e\u6570\u636e\u5f88\u6c34\uff0c\u751a\u81f3\u4e0d\u9700\u8981 `multiset`\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class T> void read(T &x) {\n\tx = 0; bool flag = 0; char b = getchar();\n\twhile (!isdigit(b)) flag = b == '-' ? 1 : 0, b = getchar();\n\twhile (isdigit(b)) x = x * 10 + b - 48, b = getchar();\n\tx = flag ? -x : x;\n}\ntemplate<class T, class ...Args> void read(T &x, Args &...args) {\n\tread(x), read(args...);\n}\nconstexpr int _N = 5e5 + 5, _SN = 1e3 + 5, inf = 1e9;\nint n, m, q;\nint X[_N], Y[_N], W[_N];\nint deg[_N], MID;\nset<int> f[5][5], crit[_SN][5], P[5];\nint id[_N];\nvector<pair<int, int>> edge[_N];\nunordered_map<int, int> num;\nint cnt = 0;\ninline bool IsCri(int x) {return deg[x] >= MID;}\nvoid Move(int x, int tar) {\n\tif (!IsCri(x)) { // not critical\n\t\tfor (auto e : edge[x]) {\n\t\t\tint v = e.first, w = e.second;\n\t\t\tif (IsCri(v)) {\n\t\t\t\tcrit[num[v]][id[x]].erase(w);\n\t\t\t\tcrit[num[v]][tar].emplace(w);\n\t\t\t} else {\n\t\t\t\tint tx = min(id[x], id[v]), ty = max(id[x], id[v]);\n\t\t\t\tint fx = min(tar, id[v]), fy = max(tar, id[v]);\n\t\t\t\tf[tx][ty].erase(w);\n\t\t\t\tf[fx][fy].emplace(w);\n\t\t\t}\n\t\t}\n\t\tid[x] = tar;\n\t} else { // critical\n\t\tfor (auto e : edge[x]) {\n\t\t\tint v = e.first, w = e.second;\n\t\t\tif (!IsCri(v)) break;\n\t\t\tcrit[num[v]][id[x]].erase(w);\n\t\t\tcrit[num[v]][tar].emplace(w);\n\t\t}\n\t\tP[id[x]].erase(x);\n\t\tid[x] = tar;\n\t\tP[tar].emplace(x);\n\t}\n}\nint Query(int x, int y) {\n\tint res = !f[x][y].empty() ? *f[x][y].begin() : inf;\n\tif (!P[x].empty()) for (int u : P[x]) {\n\t\tif (crit[num[u]][y].empty()) continue;\n\t\tres = min(res, *crit[num[u]][y].begin());\n\t}\n\tif (!P[y].empty()) for (int u : P[y]) {\n\t\tif (crit[num[u]][x].empty()) continue;\n\t\tres = min(res, *crit[num[u]][x].begin());\n\t}\n\treturn res;\n}\nsigned main() {\n\tios::sync_with_stdio(0); cout.tie(0);\n\tread(n, m);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tread(X[i], Y[i], W[i]);\n\t\t++deg[X[i]], ++deg[Y[i]];\n\t\tedge[X[i]].emplace_back(Y[i], W[i]);\n\t\tedge[Y[i]].emplace_back(X[i], W[i]);\n\t}\n\tMID = sqrt(n);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tsort(edge[i].begin(), edge[i].end(), [](const auto &A, const auto &B) {\n\t\t\treturn IsCri(A.first) > IsCri(B.first);\n\t\t});\n\t\tif (IsCri(i)) num[i] = ++cnt;\n\t}\n\tfor (int i = 1; i <= n; ++i) Move(i, 1);\n\tread(q);\n\tfor (int i = 1; i <= q; ++i) {\n\t\tchar opt[15]; scanf(\"%s\", opt + 1);\n\t\tint x;\n\t\tif (opt[1] == 'M') {\n\t\t\tread(x);\n\t\t\tMove(x, opt[5] - 'A' + 1);\n\t\t} else {\n\t\t\tint ans = Query(opt[4] - 'A' + 1, opt[5] - 'A' + 1);\n\t\t\tif (ans != inf) cout << ans << '\\n';\n\t\t\telse cout << \"No Found!\" << '\\n';\n\t\t}\n\t}\n}\n```",
        "postTime": 1679491716,
        "uid": 345225,
        "name": "Hanx16QwQ",
        "ccfLevel": 0,
        "title": "P2500 [SDOI2012]\u96c6\u5408"
    },
    {
        "content": "\u8bdd\u8bf4\u662f\u6d1b\u8c37\u6570\u636e\u6709\u90a3\u4e48\u6c34\uff0c\u8fd8\u662f\u8fd9\u9053\u7701\u9009\u9898\u672c\u8eab\u5c31\u662f\u9001\u5206\u9898\u554a......\n\n\u8fd9\u9053\u9898\u83ab\u540d\u5176\u5999\u7684\u5f31\u667a\u3002\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u8f93\u5165\u8fb9\u540e\u5c06\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6ce8\u610f\u4fdd\u7559\u6bcf\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u96c6\u5408\u3002\u63a5\u4e0b\u6765\u9762\u5bf9\u6bcf\u4e2a\u4fee\u6539\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u6539\u6570\u7ec4\u5c31\u884c\u4e86(O(1))\u3002\u81f3\u4e8e\u67e5\u8be2\uff0c\u53ea\u9700\u8981\u4ece\u6700\u77ed\u8fb9\u4f9d\u6b21\u68c0\u7d22\uff0c\u627e\u5230\u7b2c\u4e00\u6761\u6ee1\u8db3\u6761\u4ef6\u7684\u8fb9\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u8fb9\u5168\u90fd\u4e0d\u5408\u8981\u6c42\uff0c\u5219\u8f93\u51fa\u201cNo Found\uff01\u201d(O(m))\u3002\u62ec\u53f7\u91cc\u662f\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6700\u7cdf\u7cd5\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(mq)\u3002\n\n\u4ee3\u7801(\u8bdd\u8bf4\u8fd9\u4e48\u5f31\u667a\u5c31\u4e0d\u7528\u8bb2\u592a\u7ec6\u4e86\u5427)\uff1a\n\n            \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<iostream>\n#include<algorithm>\n#define For(i,a,b) for((i)=(a);(i)<=(b);++(i))\n#define Forward(i,a,b) for((i)=(a);(i)>=(b);--(i))\nusing namespace std;\nconst int MAXN=100000+100;\nconst int MAXM=500000+100;\ntemplate<typename T>\ninline void read(T &x)//\u5feb\u8bfb\n{\n    T s=0,f=1;\n    char k=getchar();\n    while(!isdigit(k)&&k!='-')k=getchar();\n    if(k=='-')\n    {\n        f=-1;\n        k=getchar();\n    }\n    while(isdigit(k))\n    {\n        s=(s<<3)+(s<<1)+(k^'0');\n        k=getchar();\n    }\n    x=s*f;\n}\nstruct edge\n{\n    int u,v,w;\n    friend bool operator<(edge a,edge b)\n    {\n        return a.w<b.w;\n    }\n}p[MAXM];//\u5b58\u8fb9\u7684\u4e24\u7aef\u548c\u6743\u503c\u4ee5\u53ca\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65b9\u4fbf\u6392\u5e8f\nint n,m,belong[MAXN],q;\nint cmp,word1,word2;\nvoid get(void)//\u5904\u7406\u8f93\u5165\n{\n    char k=getchar();\n    while(!isgraph(k))k=getchar();\n    int i;\n    if(k=='M')cmp=0;\n    else cmp=1;\n    For(i,1,3)k=getchar();\n    if(k=='A')word1=0;\n    else if(k=='B')word1=1;\n    else word1=2;\n    k=getchar();\n    if(k=='A')word2=0;\n    else if(k=='B')word2=1;\n    else word2=2;\n}\nint main(void)\n{\n    int i;\n    read(n);\n    read(m);\n    For(i,1,m)\n    {\n        read(p[i].u);\n        read(p[i].v);\n        read(p[i].w);\n    }\n    sort(p+1,p+m+1);//\u6392\u5e8f\uff08\u6838\u5fc3\u4ee3\u7801\uff08\u6ed1\u7a3d\uff09\uff09\n    read(q);\n    while(q--)\n    {\n        get();\n        if(cmp==0)\n        {\n            read(i);\n            belong[i]=word2;//\u4fee\u6539\n        }\n        else\n        {\n            For(i,1,m)if(belong[p[i].u]==word1&&belong[p[i].v]==word2||\n                belong[p[i].u]==word2&&belong[p[i].v]==word1)//\u5f31\u667a\u67e5\u8be2\n            {\n                printf(\"%d\\n\",p[i].w);\n                break;\n            }\n            if(i>m)printf(\"No Found!\\n\");\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1500726460,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2500 \u3010[SDOI2012]\u96c6\u5408\u3011"
    },
    {
        "content": "\u697c\u4e0b\u4ee3\u7801\u771f\u662f\u9ad8\u7aef\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e2a\u7b80\u660e\u4e00\u70b9\u7684\n\n\u601d\u8def\u5f88\u7b80\u5355 \u4e0d\u8981\u88ab\u6807\u7b7e\u548c\u96be\u5ea6\u6240\u8499\u853d\u4e86\n\n\u5f88\u7b80\u5355\u7684\u66b4\u529b\u6a21\u62df\n\n\u5148\u6392\u5e8f\u7136\u540e\u4ece\u5c0f\u5230\u5927\u627e\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u7b26\u5408\u8be2\u95ee\n\n\u96c6\u5408\u5b9e\u9645\u4e0a\u53ea\u8981\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5b9e\u73b0\n\ns[x]=y\u8868\u793a\u70b9x\u5c5e\u4e8ey\u96c6\u5408\n\ny=1\u65f6\u662fA\uff0cy=2\u662fB\uff0cy=3\u662fC\n\n\u8bbe\u6709\u4e00\u8fb9<u,v>\uff0c\u67e5\u9876\u70b9\u5c5e\u4e8eAB\u7684\n\n\u6ce8\u610f\u8981\u67e5u\u5c5e\u4e8eA\uff0cv\u5c5e\u4e8eB\n\n\u540c\u65f6\u4e5f\u8981\u770bu\u5c5e\u4e8eB\uff0cv\u5c5e\u4e8eA\n```\n#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=100001,M=500001,INF=1000000001;\nint n,m,q,s[N];\nstruct edge{int a,b,w;}e[M]; //\u8fb9\nbool cmp(const edge &e1,const edge &e2) //\u6ce8\u610f\u5b9a\u4e49\u6392\u5e8f\u51fd\u6570\n{\n\treturn e1.w<e2.w;\n}\nint query(int a,int b) //\u67e5\u8be2\n{\n\tfor (int i=1;i<=m;i++)\n\t\tif (s[e[i].a]==a&&s[e[i].b]==b||s[e[i].a]==b&&s[e[i].b]==a) //\u6ce8\u610f\u662f\u53cc\u5411\u67e5\u8be2\n\t\t\treturn e[i].w;\n\treturn INF; //\u5982\u679c\u6ca1\u627e\u5230\uff0c\u6ce8\u610f\u53ef\u80fd\u67090\u6216\u8d1f\u6743\uff0c\u6240\u4ee5\u4e0d\u80fd\u53ea\u662f\u8fd4\u56de0\uff0c\u5e94\u8fd4\u56de\u65e0\u7a77\u5927\n}\ninline void ask(int a,int b)\n{\n\tint ans=query(a,b);\n\tif (ans<INF)printf(\"%d\\n\",ans);\n\telse puts(\"No Found!\");\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t\tscanf(\"%d%d%d\",&e[i].a,&e[i].b,&e[i].w);\n\tsort(e+1,e+m+1,cmp); //\u6392\u5e8f\n\tfor (int i=1;i<=n;i++)s[i]=1; //\u4e00\u5f00\u59cb\u90fd\u5c5e\u4e8eA\n\tscanf(\"%d\",&q);\n\twhile (q--)\n\t{\n\t\tstring op;int x;\n\t\tcin>>op;\n\t\tif (op==\"MoveA\")scanf(\"%d\",&x),s[x]=1;\n\t\tif (op==\"MoveB\")scanf(\"%d\",&x),s[x]=2;\n\t\tif (op==\"MoveC\")scanf(\"%d\",&x),s[x]=3;\n\t\tif (op==\"AskAA\")ask(1,1);\n\t\tif (op==\"AskAB\")ask(1,2);\n\t\tif (op==\"AskAC\")ask(1,3);\n\t\tif (op==\"AskBB\")ask(2,2);\n\t\tif (op==\"AskBC\")ask(2,3);\n\t\tif (op==\"AskCC\")ask(3,3);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1517970256,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2500 \u3010[SDOI2012]\u96c6\u5408\u3011"
    }
]