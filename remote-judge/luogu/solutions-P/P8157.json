[
    {
        "content": "**\u62a2\u6551\u7b1b\u5361\u5c14\u6811**\n\n-----\n\n- \u9996\u5148\u8003\u8651\u7b1b\u5361\u5c14\u6811\u8ba1\u7b97\u9759\u6001\u7b54\u6848\uff0c\u76f4\u63a5\u5efa\u6811\u540e\u5728\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e58\u4e0a\u5176\u9ad8\u5ea6\u5373\u53ef\u3002\n- \u8003\u8651\u5f53\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5e76\u4e14 $n$ \u548c $q$ \u540c\u9636\uff0c\u5bb9\u6613\u5f97\u5230\u5747\u644a $\\mathcal O(1)$ \u6b21\u65cb\u8f6c\u53ef\u4ee5\u5b8c\u6210\u5bf9\u7b1b\u5361\u5c14\u6811\u5f62\u6001\u53d8\u5316\u7684\u7ef4\u62a4\u3002\n- \u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u5f53\u591a\u4e2a\u8282\u70b9\u6709\u540c\u4e00\u4e2a\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u65cb\u8f6c\u7684 Worst Case \u662f\u8282\u70b9\u4e2a\u6570\u7684\u3002\n- \u90a3\u4e48\u5728\u7279\u610f\u6784\u9020\u7684\u60c5\u51b5\u4e0b\uff0c\u65cb\u8f6c\u6b21\u6570\u53ef\u4ee5\u88ab\u5361\u5230 $\\mathcal O(n)$\u3002\n- \u90a3\u4e48\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\uff1a\u4f7f\u5f97\u6bcf\u4e00\u8282\u70b9\uff0c\u5728\u5411\u4e0a\u65cb\u8f6c\u800c\u8de8\u8d8a\u67d0\u4e00\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u80fd\u591f\u6709\u80fd\u88ab\u63a5\u53d7\u7684\u65cb\u8f6c\u6b21\u6570\u3002\n- \u6211\u4eec\u8003\u8651\u5c06\u7b1b\u5361\u5c14\u6811\u6309 **\u5404\u4e2a\u6709\u76f8\u540c\u952e\u503c** \u7684\u8fde\u901a\u5757\u5212\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u6211\u4eec\u5355\u72ec\u5206\u6790\u590d\u6742\u5ea6\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u662f\uff1a\u65cb\u8f6c\u5230\u6839\u3001\u5c06\u4e00\u4e2a\u5355\u70b9\u63d2\u5165\u5230\u7236\u4eb2\u8054\u901a\u5757\u4e2d\u3002\n\n### \u65b9\u6cd5\u4e00\uff1a\u968f\u673a\u7b2c\u4e8c\u952e\u503c\n- \u8003\u8651\u5230\u7b1b\u5361\u5c14\u6811\u672c\u8d28\u4e0a\u662f\u7528\u65cb\u8f6c\u7ef4\u62a4\u7684\u4e8c\u53c9\u5806\u3002\n- \u90a3\u4e48\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u53e6\u5916\u4e00\u4e2a\u4e8c\u53c9\u5e73\u8861\u6811\u5355\u65cb Treap\uff0c\u5b83\u4e5f\u7528\u4e00\u4e2a\u968f\u673a\u952e\u503c\u6765\u7ef4\u62a4\u5e73\u8861\u6811\uff0c\u4f7f\u5f97\u6811\u9ad8\u5728\u671f\u671b $\\log$ \u7684\u9ad8\u5ea6\u3002\n- \u90a3\u4e48\u5728\u4e00\u4e2a\u8282\u70b9\u9ad8\u5ea6\u51cf\u4e00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u671f\u671b\u5c06\u5b83\u65cb\u8f6c $\\mathcal O(\\log n)$ \u6b21\uff0c\u5e76\u4e14\u5728\u540c\u9636\u7684\u590d\u6742\u5ea6\u5185\u7ef4\u62a4\u65b0\u6811\u7684\u5f62\u6001\u3002\n- \u53c8\u56e0\u4e3a\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5168\u5c40\u7b54\u6848\u6700\u5927\u503c\uff0cmultiset \u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u90a3\u4e48\u5c31\u6709\u590d\u6742\u5ea6\u671f\u671b $\\mathcal O(n\\log^{2}n)$\uff0c\u57fa\u4e8e\u624b\u52a8\u968f\u673a\u7684\u7b2c\u4e8c\u952e\u503c\u3002\n\n### \u65b9\u6cd5\u4e8c\uff1a\u5f3a\u5236\u53cc\u65cb\n- \u8003\u8651\u5230\u5355\u65cb\u7684\u7236\u5b50\u8be5\u53d8\u91cf\u4e3a $\\mathcal O(1)$\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u5361\u3002\u6240\u4ee5\u4f7f\u7528\u53cc\u65cb\u3002\n- \u8003\u8651\u53cc\u65cb\u7684\u590d\u6742\u5ea6\u5206\u6790\uff1a\n1. \u5bf9\u4e8e $h_{x}<h_{fa_{x}}$\n\t- \u5728\u7236\u4eb2\u70b9\u3001\u7237\u7237\u70b9\u4e8c\u8005\u7684\u9ad8\u5ea6\u76f8\u540c\u65f6\u76f4\u63a5\u4f7f\u7528\u53cc\u65cb\u3002\n   - \u5426\u5219\uff0c\u53ea\u4f1a\u6709 $\\mathcal O(1)$ \u6b21\u4f8b\u5916\u60c5\u51b5\uff0c\u5373 $x$ \u7236\u4eb2\u4e3a\u6839\u7684\u60c5\u51b5\u3002\n   - \u6b64\u65f6\u5bf9\u4e8e\u5f53\u524d\u8fde\u901a\u5757\u53cc\u65cb\u590d\u6742\u5ea6\u5747\u644a\u5206\u6790\u6210\u7acb\u3002\n2. \u5728 $1$ \u4e4b\u540e\uff0c\u5bf9\u4e8e $h_{x}=h_{fa_{x}}$\n\t- \u5c06\u4e00\u4e2a\u8282\u70b9\u53cc\u65cb\u81f3\u6839\u5373\u53ef\u3002\n   - \u5426\u5219\uff0c\u53ea\u4f1a\u6709 $\\mathcal O(1)$ \u6b21\u4f8b\u5916\u60c5\u51b5\uff0c\u5373 $x$ \u7236\u4eb2\u4e3a\u6839\u7684\u60c5\u51b5\u3002\n- \u7136\u540e\u5199\u51fa\u6765\u4e4b\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u8ddf splay \u68ee\u6797\u6ca1\u533a\u522b\u3002\u6240\u4ee5\u6709\u590d\u6742\u5ea6 $\\mathcal O(n\\log^{2}n)$\u3002\n\n\u4e0a\u8ff0\u4e24\u79cd\u65b9\u6cd5\u7684\u4e24\u53ea $\\log$ \u5747\u5341\u5206\u5c0f\uff0c\u6240\u4ee5\u8dd1\u8fc7 $5\\times 10^{5}$ \u5e94\u8be5\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002",
        "postTime": 1644892078,
        "uid": 27338,
        "name": "jerry3128",
        "ccfLevel": 9,
        "title": "\u9898\u89e3\u3010P8157 \u300cPMOI-5\u300d\u80a5\u5b85\u306e\u6c34\u3011"
    },
    {
        "content": "\u4e00\u79cd\u7b80\u5355\u60f3\u5230\u7684\u505a\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u51fa\u73b0\u7684\u9ad8\u5ea6\u8fdb\u884c\u79bb\u6563\u5316\u3002\u5148\u628a\u4e00\u5f00\u59cb\u51fa\u73b0\u7684\u503c\u90fd\u5217\u51fa\u6765\uff0c\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5efa\u51fa\u6765\uff0c\u7136\u540e\u6bcf\u6b21 $\\text{-1}$ \u5c31\u68c0\u67e5\u8fd9\u4e2a\u503c\u6709\u6ca1\u6709\uff0c\u6ca1\u6709\u5c31\u73b0\u5728\u518d\u521b\u5efa\u3002\u63a5\u7740\u5bf9\u4e8e\u6bcf\u4e2a\u503c\u5b58\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u54ea\u4e9b\u70b9\u5927\u4e8e\u7b49\u4e8e\u5b83\u3002\u663e\u7136\u7b54\u6848\u5c31\u662f\u6bcf\u4e2a\u503c\u5bf9\u5e94\u7684\u6700\u957f\u8fde\u7eed\u6bb5\u957f\u5ea6\u4e58\u4ee5\u5b83\u7684\u6700\u5927\u503c\uff0c\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u5f71\u54cd\u5230\u4e24\u68f5\u6811\u3002\u6700\u540e\u53ef\u6301\u4e45\u5316\u4e00\u4e0b\uff0c\u5f00\u4e00\u4e2a\u5806\u7ef4\u62a4\u7b54\u6848\u3002\n\n\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u5e38\u6570\u975e\u5e38\u5927\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u7b97\u6cd5\u3002\n\n\u9996\u5148\u67e5\u4e00\u4e2a\u88ab\u6539\u7684\u77e9\u5f62\u524d\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u548c\u540e\u9762\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\uff0c\u53ea\u6709\u524d\u9762\u548c\u540e\u9762\u4e0e\u5b83\u957f\u5ea6\u7684\u82e5\u5e72\u76f8\u540c\u77e9\u5f62\u53ef\u5ef6\u4f38\u7684\u8303\u56f4\u4f1a\u6539\u53d8\u3002\u4e4b\u540e\u8fd9\u4e9b\u88ab\u6539\u7684\u77e9\u5f62\u540c\u65f6\u4e5f\u662f\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u533a\u95f4\u6700\u5c0f\u503c\u4e0a\u9762\u6240\u5bf9\u5e94\u7684\u9762\u79ef\u5c31\u884c\u3002\n\n**\u6ce8\u610f\uff1a\u5b9e\u73b0\u9700\u8981\u4f18\u79c0\u3002**\n\n\u6700\u7ec8\u4ee3\u7801\uff08\u4ee3\u7801\u91cc\u52a0\u4e86\u5feb\u8bfb\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u5f88\u957f\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500005,E=65536,M=998244353;\nnamespace io\n{\n\tconst int SIZE=(1<<21)+1;\n\tchar ibuf[SIZE],*iS,*iT,obuf[SIZE],*oS=obuf,*oT=oS+SIZE-1,c,qu[55];\n    int f,qr;\n\t#define gc()(iS==iT?(iT=(iS=ibuf)+fread(ibuf,1,SIZE,stdin),(iS==iT?EOF:*iS++)):*iS++)\n\tinline void flush()\n    {\n\t\tfwrite(obuf,1,oS-obuf,stdout);\n\t\toS=obuf;\n\t}\n\tinline void putc(char x)\n    {\n\t\t*oS++=x;\n\t\tif(oS==oT) flush();\n\t}\n\ttemplate<class I>\n\tinline void gi(I &x)\n    {\n\t\tfor(f=1,c=gc();c<'0' or c>'9'; c=gc())\n        {\n            if(c=='-') f=-1;\n        }\n\t\tfor(x=0;c<='9' and c>='0';c=gc())\n        {\n            x=x*10+(c&15);\n            x*=f;\n        }\n\t}\n\ttemplate<class I>\n\tinline void print(I x)\n    {\n\t\tif(!x) putc('0');\n        if(x<0) putc('-'),x=-x;\n\t\twhile(x) qu[++qr]=x%10+'0',x/=10;\n\t\twhile(qr) putc(qu[qr--]);\n\t}\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n}\nusing io::gi;\nusing io::putc;\nusing io::print;\nint n,m,mn[N*4],a[N],l[N],r[N],sta[N],top;\nlong long mnn[N*4],mx[N*4],lazy[N*4],las,x;\nvoid pushup(int i)\n{\n\tmn[i]=min(mn[i<<1],mn[i<<1|1]);\n\tmx[i]=max(mx[i<<1],mx[i<<1|1]);\n\tmnn[i]=0;\n\tif(mn[i]!=mn[i<<1]) mx[i]=max(mx[i],mnn[i<<1]);\n\telse mnn[i]=max(mnn[i],mnn[i<<1]);\n\tif(mn[i]!=mn[i<<1|1]) mx[i]=max(mx[i],mnn[i<<1|1]);\n\telse mnn[i]=max(mnn[i],mnn[i<<1|1]);\n    return;\n}\nvoid pushdown(int i)\n{\n\tif(lazy[i]!=-1)\n    {\n\t\tif(mn[i]==mn[i<<1])\n        {\n\t\t\tmnn[i<<1]=lazy[i];\n\t\t\tlazy[i<<1]=lazy[i];\n\t\t}\n\t\tif(mn[i]==mn[i<<1|1])\n        {\n\t\t\tmnn[i<<1|1]=lazy[i];\n\t\t\tlazy[i<<1|1]=lazy[i];\n\t\t}\n\t\tlazy[i]=-1;\n\t}\n    return;\n}\nvoid modify(int i,int l,int r,int x,int y,long long z)\n{\n\tif(l==r)\n    {\n\t\tmn[i]=y;\n\t\tmnn[i]=z;\n\t\treturn;\n\t}\n\tpushdown(i);\n\tint mid=l+r>>1;\n\tif(mid>=x) modify(i<<1,l,mid,x,y,z);\n\telse modify(i<<1|1,mid+1,r,x,y,z);\n\tpushup(i);\n    return;\n}\nvoid modify2(int i,int l,int r,int ll,int rr,long long x,int y)\n{\n\tif(mn[i]>y) return;\n\tif(l>=ll and r<=rr)\n    {\n\t\tlazy[i]=mnn[i]=x;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tpushdown(i);\n\tif(mid>=ll) modify2(i<<1,l,mid,ll,rr,x,y);\n\tif(mid<rr) modify2(i<<1|1,mid+1,r,ll,rr,x,y);\n\tpushup(i);\n    return;\n}\nint Findl(int i,int l,int r,int rr,int x)\n{\n\tif(mn[i]>=x) return 0;\n\tif(l==r) return l;\n\tint mid=l+r>>1;\n\tif(mid<rr)\n    {\n\t\tint as=Findl(i<<1|1,mid+1,r,rr,x);\n\t\treturn as?as:Findl(i<<1,l,mid,rr,x);\n\t}\n\telse return Findl(i<<1,l,mid,rr,x);\n}\nint Findr(int i,int l,int r,int ll,int x)\n{\n\tif(mn[i]>=x) return n+1;\n\tif(l==r) return l;\n\tint mid=l+r>>1;\n\tif(mid>=ll)\n    {\n\t\tint as=Findr(i<<1,l,mid,ll,x);\n\t\treturn as!=n+1?as:Findr(i<<1|1,mid+1,r,ll,x);\n\t}\n\telse return Findr(i<<1|1,mid+1,r,ll,x);\n}\nvoid Build(int i,int ul,int ur)\n{\n\tif(ul==ur)\n    {\n\t\tmn[i]=a[ul];\n\t\tmnn[i]=1ll*(r[ul]-l[ul]-1)*a[ul];\n\t\treturn;\n\t}\n\tint mid=ul+ur>>1;\n\tBuild(i<<1,ul,mid);\n\tBuild(i<<1|1,mid+1,ur);\n\tpushup(i);\n    return;\n}\nint main()\n{\n\tgi(n),gi(m);\n\tfor(int i=1;i<=n;++i) gi(a[i]);\n\tfor(int i=1;i<=n;++i)\n    {\n\t\twhile(a[sta[top]]>a[i]) r[sta[top--]]=i;\n\t\tsta[++top]=i;\n\t}\n\twhile(top) r[sta[top--]]=n+1;\n\tfor(int i=n;i>=1;--i)\n    {\n\t\twhile(a[sta[top]]>a[i]) l[sta[top--]]=i;\n\t\tsta[++top]=i;\n\t}\n\tBuild(1,1,n);\n\tmemset(lazy,-1,sizeof(lazy));\n\twhile(m--)\n    {\n\t\tgi(x);\n\t\tx^=las;\n\t\tint ul=Findl(1,1,n,x,a[x]),ur=Findr(1,1,n,x,a[x]);\n\t\t++ul,--ur;\n\t\tmodify2(1,1,n,ul,x,1ll*(x-ul)*a[x],a[x]),modify2(1,1,n,x,ur,1ll*a[x]*(ur-x),a[x]);\n\t\t--a[x];\n\t\t--ul,++ur;\n\t\tif(ul>0) ul=Findl(1,1,n,ul,a[x]);\n\t\tif(ur<=n) ur=Findr(1,1,n,ur,a[x]);\n\t\tmodify(1,1,n,x,a[x],1ll*a[x]*(ur-ul-1));\n\t\tlas=max(mx[1],mnn[1]);\n\t\tprint(las);\n\t\tputc('\\n');\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1640509433,
        "uid": 179871,
        "name": "Lithium_Chestnut",
        "ccfLevel": 4,
        "title": "\u300cPMOI-5\u300d\u80a5\u5b85\u306e\u6c34"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0c[\u7b1b\u5361\u5c14\u6811](https://oi-wiki.org/ds/cartesian-tree/#%E4%BE%8B%E9%A2%98)\u53ef\u4ee5\u7528\u6765\u6c42\u89e3\u9759\u6001\u6700\u5927\u5b50\u77e9\u5f62\u95ee\u9898\uff0c\u52a0\u5165\u4e86\u5355\u70b9\u51cf\u4e00\u64cd\u4f5c\u540e\u5f88\u5bb9\u6613\u60f3\u5230\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u7ef4\u62a4\u7b1b\u5361\u5c14\u6811\uff0c\u518d\u7528\u4e00\u4e9b\u7c7b\u4f3c\u5220\u9664\u5806\u7684\u4e1c\u897f\u6765\u52a8\u6001\u7ef4\u62a4\u7b54\u6848\u3002\u7531\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53ea\u4f1a\u51cf\u4e00\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u7528\u65cb\u8f6c\u8c03\u6574\u7b1b\u5361\u5c14\u6811\u7684\u7ed3\u6784\uff0c\u4e00\u5b9a\u6709\u6b64\u6b21\u64cd\u4f5c\u7684\u8282\u70b9 $x$ \u5728\u64cd\u4f5c\u524d\u7684\u9ad8\u5ea6 $h$ \u4e0e\u5176\u7236\u8282\u70b9\u7684\u9ad8\u5ea6 $h'$ \u76f8\u540c\uff0c\u4e8e\u662f $x$ \u5c06\u4e00\u76f4\u5f80\u4e0a\u65cb\u8f6c\u76f4\u5230\u649e\u5230\u4e00\u4e2a\u9ad8\u5ea6\u5c0f\u4e8e $h$ \u7684\u8282\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u65cb\u8f6c\u7684\u8bdd\u5bb9\u6613\u88ab\u6709\u4e00\u5768\u76f8\u540c\u9ad8\u5ea6\u7684\u6570\u636e\u5361\u6210\u5355\u6b21 $O(n)$\u3002\n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u4f18\u5316\u7b1b\u5361\u5c14\u6811\u7684\u7ed3\u6784\u3002\n\n```\n\u65b0\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u7a7a\u6808\u3002\u7528 top \u6765\u6807\u64cd\u4f5c\u524d\u7684\u6808\u9876\u3002\nFor i := 1 to n\n    While \u6808\u975e\u7a7a \u4e14 \u6808\u9876\u5143\u7d20 > \u5f53\u524d\u5143\u7d20 \n        \u5f53\u524d\u5143\u7d20.\u5de6\u513f\u5b50 := \u6808\u9876\u5143\u7d20\n        top--\n    if \u6808\u975e\u7a7a\n        \u6808\u9876\u5143\u7d20.\u53f3\u513f\u5b50 := \u5f53\u524d\u5143\u7d20\n    \u5f53\u524d\u5143\u7d20\u5165\u6808\n```\n\n\u8fd9\u662f\u6b63\u5e38\u4f7f\u7528\u5355\u8c03\u6808\u5efa\u7b1b\u5361\u5c14\u6811\u7684\u4f2a\u4ee3\u7801\uff0c\u4e0b\u56fe\u662f\u7528\u8fd9\u79cd\u65b9\u6cd5\u5efa\u51fa\u7684\u6811\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l66jg9bp.png)\n\n\u76f8\u6bd4\u4e0a\u56fe\uff0c\u4e0b\u56fe\u540c\u6837\u662f\u4e00\u68f5\u5408\u6cd5\u7684\u7b1b\u5361\u5c14\u6811\u4f46\u662f\u663e\u7136\u5728\u6267\u884c\u5355\u70b9\u51cf\u4e00\u65f6\u6548\u7387\u66f4\u9ad8\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/s5b3nuqd.png)\n\n\u90a3\u4e48\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u7ef4\u62a4\u7b1b\u5361\u5c14\u6811\u4e0a\u9ad8\u5ea6\u76f8\u540c\u7684\u8fde\u901a\u5757\u5c3d\u91cf\u5e73\u8861\uff0c\u4f7f\u5f97\u5355\u6b21\u64cd\u4f5c\u65cb\u8f6c\u6b21\u6570\u964d\u4f4e\u3002\n\n\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u501f\u9274 Treap\uff0c\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u9644\u52a0\u4e00\u4e2a\u968f\u673a\u6743\u91cd\uff0c\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u9ad8\u5ea6\u76f8\u540c\uff0c\u5c31\u7528\u6743\u91cd\u6765\u6bd4\u8f83\u5927\u5c0f\uff0c\u8fd9\u6837\u4e00\u6765\u6bcf\u4e00\u4e2a\u76f8\u540c\u9ad8\u5ea6\u8fde\u901a\u5757\u7684\u671f\u671b\u9ad8\u5ea6\u5c31\u662f $O(\\log n)$\u3002\n\n\u7531\u4e8e\u7b1b\u5361\u5c14\u6811\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u7279\u6b8a\u7684 Treap\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f18\u5316\u76f8\u5f53\u8f7b\u677e\uff0c\u76f8\u6bd4\u6700\u5f00\u59cb\u63d0\u5230\u7684\u6734\u7d20\u7b97\u6cd5\uff0c\u53ea\u9700\u8981\u628a\u6bcf\u4e2a\u70b9\u7684\u503c\u6539\u6210\u7b2c\u4e8c\u5143\u968f\u673a\u7684\u4e8c\u5143\u7ec4\uff0c\u518d\u91cd\u8f7d\u4e8c\u5143\u7ec4\u7684\u6bd4\u8f83\u4f7f\u5f97\u4f18\u5148\u6bd4\u8f83\u7b2c\u4e00\u5143\u7136\u540e\u6bd4\u8f83\u7b2c\u4e8c\u5143\u5373\u53ef\u3002\n\n\u6700\u540e\u9700\u8981\u5728\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u53d1\u751f\u53d8\u52a8\u65f6\u66f4\u65b0\u7b54\u6848\uff0c\u4f7f\u7528\u5220\u9664\u5806\u4f1a\u88ab\u5361\u7a7a\u95f4\uff0c\u4f7f\u7528 `multiset` \u4f1a\u88ab\u5361\u65f6\u95f4\uff08\u5f53\u7136\u4e5f\u53ef\u80fd\u662f\u6211\u7684\u5199\u6cd5\u4e0d\u597d qwq\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u5c0f\u5e38\u6570\u7ebf\u6bb5\u6811\u6765\u505a\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u9700\u8981\u65cb\u8f6c $O(\\log n)$ \u6b21\uff0c\u6bcf\u6b21\u65cb\u8f6c\u65f6\u66f4\u65b0\u7b54\u6848 $O(\\log n)$\uff0c\u6240\u4ee5\u6700\u540e\u590d\u6742\u5ea6\u662f $O(k\\log^2 n)$\u3002\n\nCode\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<set>\nusing namespace std;\n#define int long long\ninline int read(){\n    int i=getchar(),r=0;\n    while(i<'0'||i>'9')i=getchar();\n    while(i>='0'&&i<='9')r=(r<<1)+(r<<3)+(i^48),i=getchar();\n    return r;\n}\nconst int N=500100;\nnamespace bst{//\u5355\u70b9\u4fee\u6539\uff0c\u5168\u5c40\u6700\u5927\u503c\n    int L[N<<1],R[N<<1],ls[N<<1],rs[N<<1],fa[N<<1],mx[N<<1],loc[N],ver,rt;\n    inline int New(int L_,int R_,int ls_,int rs_){\n        ver++;\n        L[ver]=L_,R[ver]=R_,ls[ver]=ls_,rs[ver]=rs_;\n        if(L_==R_)loc[L_]=ver;\n        if(ls_)fa[ls_]=ver;\n        if(rs_)fa[rs_]=ver;\n        return ver;\n    }\n    int build(int l,int r){\n        if(l==r)return New(l,r,0,0);\n        int mid=(l+r)>>1;\n        return New(l,r,build(l,mid),build(mid+1,r));\n    }\n    inline void modify(int nd,int k){\n        mx[nd]=k;\n        while(nd!=rt)nd=fa[nd],mx[nd]=max(mx[ls[nd]],mx[rs[nd]]);\n    }\n}\nstruct node{\n    int h,wei;\n    inline bool operator<(const node&b)const&{return h<b.h||(h==b.h&&wei<b.wei);}\n}a[N];\nint s[N][2],fa[N],siz[N],val[N],rt;\ninline void push_up(int nd){//\u66f4\u65b0\u7b54\u6848\u4e0e\u66f4\u65b0siz\u548c\u66f4\u65b0\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\u653e\u5728\u4e86\u4e00\u8d77\n    siz[nd]=siz[s[nd][0]]+siz[s[nd][1]]+1;\n    val[nd]=siz[nd]*a[nd].h;\n    bst::modify(bst::loc[nd],val[nd]);\n    if(s[nd][0])fa[s[nd][0]]=nd;\n    if(s[nd][1])fa[s[nd][1]]=nd;\n}\ninline void rotate(int x){\n    int y=fa[x],z=fa[fa[x]];\n    int d=(x==s[y][1]);\n    s[y][d]=s[x][d^1];\n    s[x][d^1]=y;\n    push_up(y),push_up(x);\n    fa[x]=z;\n    if(z)s[z][y==s[z][1]]=x,push_up(z);\n}\ninline void update(int nd){\n    while(fa[nd]&&a[nd]<a[fa[nd]])rotate(nd);\n    if(!fa[nd])rt=nd;\n}\nint stk[N],top=0;\nvoid pre(int nd){\n    if(!nd)return;\n    pre(s[nd][0]);\n    pre(s[nd][1]);\n    push_up(nd);\n}\nint build(int n){\n    for(int i=1;i<=n;i++){\n        while(top&&a[i]<a[stk[top]])s[i][0]=stk[top--];\n        if(top)s[stk[top]][1]=i;\n        stk[++top]=i;\n    }\n    pre(stk[1]);\n    return stk[1];\n}\nint n,m;\nvoid init(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)a[i]={read(),rand()};\n    bst::rt=bst::build(1,n);\n    rt=build(n);\n}\nsigned main(){\n    // freopen(\"read.in\",\"r\",stdin);\n    init();\n    int ans=0;\n    while(m--){\n        int p=read()^ans;\n        a[p].h--;\n        push_up(p);\n        update(p);\n        ans=bst::mx[bst::rt];\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}   \n```",
        "postTime": 1676708754,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "P8157 \u300cPMOI-5\u300d\u80a5\u5b85\u306e\u6c34 \u9898\u89e3"
    },
    {
        "content": "orz @[jerry3128](https://www.luogu.com.cn/user/27338)\u3002\n\n\u8003\u8651\u5230\u539f\u95ee\u9898\u53ca\u9759\u6001\u67e5\u8be2\u5168\u5c40\u6700\u5927\u5b50\u77e9\u5f62\uff0c\u663e\u7136\u662f\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\u540e\u53ef\u4ee5\u76f4\u63a5\u6c42\u7684\u3002\n\n\u8003\u8651\u4e00\u4e0b $-1$ \u7684\u6027\u8d28\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u6765\u7684\u7b1b\u5361\u5c14\u6811\u8fdb\u884c\u7c7b\u4f3c Splay \u68ee\u6797\u7684\u5212\u5206\uff0c\u5373\u5c06\u9ad8\u5ea6\u76f8\u540c\u4e14\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u6709\u8fb9\u76f8\u8fde\u7684\u8282\u70b9\u5212\u5206\u6210\u4e00\u68f5 Splay\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $x$ \u7684\u9ad8\u5ea6\u51cf $1$\uff0c\u76f8\u5f53\u4e8e\u662f\u8981\u8ba9 $x$ \u4ece\u5b83\u6240\u5c5e\u7684 Splay \u91cc\u9762\u51fa\u6765\uff08\u5220\u6389\uff09\uff0c\u63d2\u5165\u4e4b\u524d\u6240\u5c5e Splay \u5411\u4e0a\u627e\u7684\u7b2c\u4e00\u4e2a Splay \u91cc\u9762\uff08\u6216\u662f\u53d1\u73b0\u5411\u4e0a\u627e\u7684\u7b2c\u4e00\u4e2a Splay \u7684\u503c\u4e0d\u7b49\u4e8e $h_x - 1$ \u65f6\u81ea\u521b\u4e00\u4e2a Splay\uff09\u3002\n\n\u95ee\u9898\u7b49\u4ef7\u4e8e\u4ece Splay \u4e2d\u5220\u9664\u70b9\u5e76\u63d2\u5165\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u4f7f\u7528\u53cc\u65cb\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\u4ef7\u4e8e Splay \u63d2\u5165\u5220\u9664\u7684\u65cb\u8f6c\u6b21\u6570\u5373 $O(q \\log n)$\u3002\n\n\u540c\u65f6\u6bcf\u6b21\u53cc\u65cb\u53ea\u4f1a\u5f71\u54cd\u7236\u4eb2\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5f00\u4e2a multiset \u4ec0\u4e48\u7684\u4f60\u5f00\u5fc3\u5c31\u597d\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff0c\u6700\u540e\u5f97\u5230\u5168\u5c40\u7b54\u6848\u3002\n\n\u9759\u6001\u6784\u5efa\u7b1b\u5361\u5c14\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(q \\log ^ 2 n)$\uff0c\u7ecf~~\u5b9e\u9a8c\u5206\u6790~~\u53ef\u77e5\u5e38\u6570\u6781\u5c0f\u3002\n\n\u540c\u65f6\u8bb2\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8fdb\u884c\u4efb\u610f\u51cf\uff0c\u8bb0\u4e4b\u524d\u7684\u503c\u4e3a $h_x$ \u73b0\u5728\u7684\u503c\u4e3a $hh_x$\uff0c\u4e00\u4e2a\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u8bf4\u6cd5\u662f\u6bcf\u6b21\u4e00\u4e2a\u70b9\u5411\u4e0a\u65cb\u8f6c\u81f3\u5c11\u8981\u8de8\u8d8a $[hh_x,h_x]$ \u9ad8\u5ea6\u503c\u57df\u5185\u51fa\u73b0\u7684\u9ad8\u5ea6\u79cd\u7c7b\u6570\uff0c\u663e\u7136\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u5361\u4e86\u3002\n\n\u4ece splay \u68ee\u6797\u672c\u8eab\u7684\u89d2\u5ea6\u89e3\u91ca\u3002\u5982\u679c\u4ee5 LCT \u5f0f splay \u68ee\u6797\u7684\u89d2\u5ea6\u8fdb\u884c\u7406\u89e3\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u4e00\u4e2a\u70b9\u5411\u4e0a\u591a\u6b21\u8de8\u8d8a\uff0c\u90a3\u4e48\u4e0d\u80fd\u7b80\u5355\u7c97\u66b4\u5730\u5c06\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u65cb\u8f6c\u5230\u53f3\u513f\u5b50\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u4e0b\u6807\u952e\u503c\u5c31\u5df2\u7ecf\u662f**\u7ea6\u675f Splay \u6811\u5f62\u6001\u7684\u952e\u503c**\uff0c\u5982\u679c\u7b80\u5355\u7c97\u66b4\u65cb\u8f6c\u5c31\u6709\u53ef\u80fd\u7834\u574f\u7b1b\u5361\u5c14\u6811\u5173\u4e8e\u7b2c\u4e8c\u952e\u503c\u7684\u7ea6\u675f\uff08\u5c0f\u6839\u5806\uff09\u3002\n\n\u6240\u4ee5\u53ea\u80fd\u50cf\u6700\u5f00\u59cb\u4e00\u6837\uff0c\u5c06\u4e00\u6b21\u64cd\u4f5c\u770b\u6210\u662f\u5bf9\u591a\u68f5 Splay \u8282\u70b9\u7684\u63d2\u5165/\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u81ea\u7136\u7206\u70b8\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 5e5 + 5;\nconst long long Inf = 1e18;\ninline long long read() {\n    char ch = getchar();\n    long long x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(long long x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nint n,k,v[Len],rt;\nlong long a[Len];\nstruct Segment\n{\n\tlong long maxn[Len << 2];\n\t#define ls(p) p << 1\n\t#define rs(p) p << 1 | 1\n\tvoid push_up(int x){maxn[x] = max(maxn[ls(x)] , maxn[rs(x)]);}\n\tvoid build(int p,int l,int r)\n\t{\n\t\tmaxn[p] = 0;\n\t\tif(l == r){maxn[p] = a[l];return;}\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(ls(p) , l , mid);\n\t\tbuild(rs(p) , mid + 1 , r);\n\t\tpush_up(p);\n\t}\n\tvoid add(int p,int l,int r,int idx)\n\t{\n\t\tif(l == r){maxn[p] = a[l];return;}\n\t\tint mid = (l + r) >> 1;\n\t\tif(idx <= mid) add(ls(p) , l , mid , idx);\n\t\telse add(rs(p) , mid + 1 , r , idx);\n\t\tpush_up(p);\n\t}\n\tvoid erase(int p,int l,int r,int idx)\n\t{\n\t\tif(l == r){maxn[p] = -Inf;return;}\n\t\tint mid = (l + r) >> 1;\n\t\tif(idx <= mid) erase(ls(p) , l , mid , idx);\n\t\telse erase(rs(p) , mid + 1 , r , idx);\n\t\tpush_up(p);\n\t}\n\tlong long Q(){return maxn[1];}\n}T1;\nstruct node\n{\n\tint ch[2],fa,val,siz;\n\tnode(){ch[0] = ch[1] = fa = val = siz = 0;}\n\tnode(int CH0,int CH1,int FA,int VAL,int SIZ){ch[0] = CH0 , ch[1] = CH1 , fa = FA , val = VAL , siz = SIZ;}\n}p[Len];\nint Init()\n{\n\tp[0].val = 0;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tint P = i - 1;\n\t\twhile(p[P].val > p[i].val) P = p[P].fa;\n\t\tp[i].ch[0] = p[P].ch[1];\n\t\tp[P].ch[1] = i;\n\t\tp[i].fa = P;\n\t\tp[p[i].ch[0]].fa = i;\n\t}\n\treturn p[0].ch[1];\n}\nvoid dfs(int x)\n{\n\tif(!x) return;\n\tp[x].siz = 1;\n\tdfs(p[x].ch[0]);\n\tdfs(p[x].ch[1]);\n\tp[x].siz = 1 + p[p[x].ch[0]].siz + p[p[x].ch[1]].siz;\n\ta[x] = 1ll * p[x].siz * p[x].val;\n}\nvoid push_up(int x){p[x].siz = p[p[x].ch[0]].siz + p[p[x].ch[1]].siz + 1;}\nvoid rotate(int x)\n{\n\tint fa = p[x].fa , fafa = p[fa].fa , idf = (p[fa].ch[1] == x) , idff = (p[fafa].ch[1] == fa);\n\tif(fa) T1.erase(1 , 1 , n , fa);\n\tif(x) T1.erase(1 , 1 , n , x);\n\tif(fafa) p[fafa].ch[idff] = x;\n\tp[fa].ch[idf] = p[x].ch[idf ^ 1];\n\tp[p[fa].ch[idf]].fa = fa;\n\tp[x].ch[idf ^ 1] = fa;\n\tp[fa].fa = x , p[x].fa = fafa;\n\tpush_up(fa) , push_up(x);\n\ta[fa] = 1ll * p[fa].siz * p[fa].val;\n\ta[x] = 1ll * p[x].siz * p[x].val;\n\tif(fa) T1.add(1 , 1 , n , fa);\n\tif(x) T1.add(1 , 1 , n , x);\n}\nvoid del(long long x)\n{\n\tint fa = p[x].fa;\n\tp[x].val --;\n\tT1.erase(1 , 1 , n , x);\n\twhile(fa && p[x].val <= p[fa].val)\n\t{\n\t\tint fafa = p[fa].fa;\n\t\tif(fafa && fa && p[fafa].val == p[fa].val)\n\t\t{\n\t\t\tif((p[fafa].ch[1] == fa) == (p[fa].ch[1] == x)) rotate(fa);\n\t\t\telse rotate(x);\n\t\t}\n\t\trotate(x);\n\t\tfa = p[x].fa;\n\t}\n\ta[x] = 1ll * p[x].val * p[x].siz;\n\tT1.add(1 , 1 , n , x);\n}\nint main()\n{\n\tn = read() , k = read();\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tint x;x = read();\n\t\tp[i] = node(0 , 0 , 0 , x , 1);\n\t}\n\trt = Init();\n\tdfs(rt);\n\tT1.build(1 , 1 , n);\n\tlong long id,lstans = 0;\n\tfor(int i = 1 ; i <= k ; i ++)\n\t{\n\t\tid = read();\n\t\tid ^= lstans;\n\t\tdel(id);\n\t\twrite(lstans = T1.Q());\n\t\tputs(\"\");\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1648606595,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8157 \u300cPMOI-5\u300d\u80a5\u5b85\u306e\u6c34\uff08\u5355\u65cb\u7b1b\u5361\u5c14\u6811\uff09"
    }
]