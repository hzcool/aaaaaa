[
    {
        "content": "\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u8981\u4f7f\u5220\u53bb\u7684\u8fb9\u6700\u5927\uff0c\u7b49\u4ef7\u4e8e\u4f7f\u5269\u4e0b\u7684\u8fb9\u957f\u5ea6\u6700\u5c0f\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u751f\u6210\u6811\u6c42\u89e3\u6b64\u9898\uff0c\u53ea\u9700\u8981\u5728\u8f93\u5165\u65f6\u7b97\u51fa\u8fb9\u957f\u603b\u548c\uff0c\u518d\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u957f\u5ea6\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\u4e00\u4e0bKuskal\u7b97\u6cd5\u3002\n\n\u9996\u5148\uff0c\u65e2\u7136\u8981\u6c42\u201c\u6700\u5c0f\u751f\u6210\u6811\u201d\uff0c\u90a3\u6211\u4eec\u5c31\u5bf9\u6240\u6709\u8fb9\u8fdb\u884c\u6392\u5e8f\uff08\u4f7f\u7528sort\u7684\u8bdd\u975e\u5e38\u7b80\u4fbf\uff09\u3002\u4f46\u8fd8\u8981\u5904\u7406\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u6211\u600e\u4e48\u77e5\u9053\u6211\u52a0\u4e0a\u7684\u8fd9\u6761\u8fb9\u662f\u4e0d\u662f\u6211\u9700\u8981\u7684\u5462\uff1f\n\n\u4e8e\u662f\u8fd9\u5c31\u7275\u6d89\u5230\u4e00\u4e2a\u7b80\u5355\u5374\u4f5c\u7528\u5f88\u5927\u7684\u7b97\u6cd5\u201c\u5e76\u67e5\u96c6\u201d\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66[\u6233\u8fd9\u91cc](https://blog.csdn.net/u013546077/article/details/64509038)\n\nKuskal\u4e3b\u8981\u662f\u9488\u5bf9\u6392\u5e8f\u8fb9\u7684\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u65e2\u7136\u662f\u8981\u6c42\u4f7f\u56fe\u76f8\u8fde\u901a\uff0c\u90a3\u4e48\u628a\u73b0\u5728\u6ca1\u6709\u8fde\u901a\u7684\u70b9\u7528\u73b0\u5728\u6240\u62e5\u6709\u7684\u8fb9\u8fde\u4e0a\u80af\u5b9a\u4e0d\u4f1a\u9519\u3002\n\n\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>//sort\u6240\u9700\u8981\u7684STL\u5934\u6587\u4ef6\nusing namespace std;\nint n,m,f[200],ans,x,sum;\nstruct lol{\n\tint from,to,val;//\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u8fb9\u7684\u4e24\u7aef\u70b9\uff0c\u957f\u5ea6\n}l[20010];\nbool cmp(lol a, lol b){\n\treturn a.val<b.val;//sort\u6392\u5e8f\u8bbe\u7f6e\u8fb9\u957f\u4e3a\u5173\u952e\u5b57\n}\nint find(int x){\n\tif (f[x]==x) return x;\n\telse return f[x]=find(f[x]);//\u5e76\u67e5\u96c6\n}\nvoid Kuskal(){\n\tint a,b;\n\tsort(l+1,l+1+m,cmp);//sort\u5feb\u6392\n\tfor (int i=1; i<=m; i++){\n\t\ta=find(l[i].from); b=find(l[i].to);//\u627e\u4e24\u70b9\u7684\u7956\u5148\n\t\tif (a==b) continue;//ab\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5373a\uff0cb\u70b9\u5df2\u8fde\u901a\uff0c\u5219\u8df3\u8fc7\n\t\tsum+=l[i].val;//\u8bb0\u5f55\u957f\u5ea6\n\t\tf[a]=b;//\u5408\u5e76\n\t\tx++;\n\t\tif (x==n) return;//\u8fb9\u8fbe\u5230\u9700\u8981\u503c\uff0c\u8df3\u51fa\u51fd\u6570\n\t}\n}\nint main(){\n\tint i;\n\t\n\tcin>>n>>m;\n\t\n\tfor (i=1; i<=n; i++){\n\t\tf[i]=i;\n\t}\n\tfor (i=1; i<=m; i++){\n\t\tscanf(\"%d%d%d\",&l[i].from,&l[i].to,&l[i].val);\n\t\tans+=l[i].val;//\u7b97\u603b\u957f\n\t}\n\tKuskal();\n\t\n\tprintf(\"%d\",ans-sum);//\u8f93\u51fa\n\t\n\treturn 0;\n}\n\n```",
        "postTime": 1540878055,
        "uid": 39533,
        "name": "Rocket_raccoon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "emmm\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u9053~~\u6c34\u9898~~\n\u7531\u9898\u610f\u53ef\u5f97\u7b54\u6848\u5176\u5b9e\u662f**$\\color{Red}\\colorbox{W}{\u6700\u5c0f\u751f\u6210\u6811\u7684\u53d8\u5f62}$**\n\u5373 ans = w _\u603b_  - w _\u6700\u5c0f\u751f\u6210\u6811_ \n\u90a3\u4e48\u600e\u4e48\u6c42\u51fa\u6700\u5c0f\u751f\u6210\u6811\u7684\u503c\u5462\uff1f\n**\u5e76\u67e5\u96c6\uff08\u7092\u9e21\u597d\u7528\uff09**\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff08\u5e0c\u671b\u8fd9\u6b21\u80fd\u5ba1\u6838\u901a\u8fc7QWQ\uff09\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct note\n{\n\tint from,to,len;\n}e[10001];\nint n,k,tot,sum,fa[10001];\nint findfa(int x) { return fa[x] == x ? x :findfa(fa[x]);}\nbool comp(const note & a, const note & b) { return a.len < b.len; }\nint kruskal() {\n    sort(e+1, e+k+1, comp);\n    for (int i = 1; i <= n; i++) fa[i] = i;\n    int cnt = 0; \n    for (int i = 1; i <= k; i++) {\n        int fx = findfa(e[i].from), fy = findfa(e[i].to);\n        if (fx == fy) continue;\n        fa[fx] = fy; \n        sum +=e[i].len;\n         \n    }\n    return sum;\n}\n\nint main()\n{\n\tcin >> n >> k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint u,v,w;\n\t\tcin >> u >> v >> w;\n\t\te[i].from = u;\n\t\te[i].to = v;\n\t\te[i].len = w;\n\t\ttot += e[i].len;\n\t}\n\tkruskal();\n\tcout << tot-sum << endl;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n",
        "postTime": 1550588123,
        "uid": 98565,
        "name": "hyfb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "Prim\u7b97\u6cd5 + \u5e76\u67e5\u96c6\n\n\u5206\u6790\uff1a\u6211\u4eec\u8981\u505a\u7684\u662f\u4f7f\u53bb\u9664\u7684\u8fb9\u8fb9\u6743\u6700\u5927\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5269\u4f59\u7684\u8fb9\u6743\u603b\u548c\u8981\u6700\u5c0f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u6700\u5c0f\u751f\u6210\u6811\u4e86\u3002\n\n\u5148\u8bf4\u660e\u4e00\u4e0b\u6bcf\u4e2a\u6570\u7ec4\u7684\u610f\u601d\uff1a\n    minn[i]\uff1a\u8868\u793a\u8fd8\u672a\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u7ed3\u70b9i\uff0c\u5230\u5df2\u7ecf\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u7ed3\u70b9\u7684\u6700\u5c0f\u8fb9\u6743\u3002\n    u[i]\uff1a\u8868\u793a\u8fd8\u672a\u653e\u8fdb\u6700\u5c0f\u751f\u6210\u6811\u7684\u70b9\u3002\n    \n\u7136\u540e\u6211\u4eec\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0cg[i][j]\uff1a\u8868\u793a\u4ecei\u5230j\u7684\u8fb9\u6743\uff0c\u9ed8\u8ba4\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u3002\n\n\u4e00\u4e9b\u5c0f\u7684\u7ec6\u8282\u770b\u4ee3\u7801\u6ce8\u91ca\u5427\n\n\u4ee5\u4e0b\u5c31\u662fAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring> \nusing namespace std;\n\nint n,m,a,b,c;\nint sum;//sum\u8ba1\u7b97\u603b\u8fb9\u6743 \nint g[1001][1001],minn[1001];\nbool u[1001];//\u8868\u793a\u8fd8\u672a\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u70b9 \n\nint main(){\n\tmemset(g,0x7f,sizeof(g));\n\tmemset(minn,0x7f,sizeof(minn));\n\tmemset(u,true,sizeof(u));\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>a>>b>>c;\n\t\tg[a][b] = g[b][a] = c;\n\t\tsum += c;\n\t}\n\tminn[1]=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint k=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t  if(u[j] && minn[j] < minn[k])\n\t\t    k = j; //\u627e\u5230\u8fd8\u6ca1\u52a0\u5165\u5e76\u4e14minn\u6700\u5c0f\u7684\u70b9 \n\t\t    u[k] = false;//\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811 \n\t\tfor(int j=1;j<=n;j++)\n\t\t  if(u[j] && g[k][j] < minn[j])\n\t\t    minn[j] = g[k][j];\n\t}\n\tint total = 0;\n\tfor(int i=1;i<=n;i++) //\u7edf\u8ba1\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u6743\u503c \n\t  total += minn[i];\n\tcout<<sum - total<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1534077330,
        "uid": 54635,
        "name": "Kevin_F",
        "ccfLevel": 0,
        "title": "\u5c40\u57df\u7f51"
    },
    {
        "content": "# \u4e3b\u8981\u7b97\u6cd5\uff1aKluskal\n## \u4ecb\u7ecd\u4e00\u4e0b\uff1a\u4e3b\u8981\u7528\u5230\u4e86\u5e76\u67e5\u96c6\uff0c\u5c06\u6240\u6709\u7684\u8fb9\u7684\u7545\u901a\u7a0b\u5ea6\u7a0b\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002Kuskal\u7684\u601d\u8def\u5c31\u662f\u4e00\u5171\u6709n\u4e2a\u70b9\uff0c\u7528n-1\u6761\u8fb9\u5c31\u53ef\u4ee5\u5c06\u8fd9n\u4e2a\u70b9\u8fde\u8d77\u6765\u3002\u6240\u4ee5\u7528\u5e76\u67e5\u96c6\u5c06\u6ca1\u8fde\u8d77\u6765\u7684\u7545\u901a\u7a0b\u5ea6\u6700\u5c0f\u7684\u4e24\u4e2a\u70b9\u8fde\u8d77\u6765\uff0c\u6bcf\u8fde\u4e00\u6761\u5c31+1\u3002\u4e00\u4f46\u52a0\u5230\u603b\u70b9\u6570-1\u6761\u5c31\u53ef\u4ee5\u9000\u51fa\u3002\n## \u53e6\u5916\uff0c\u5c06\u6240\u6709\u7545\u901a\u7a0b\u5ea6\u52a0\u8d77\u6765\uff0c\u628an-1\u6761\u53bb\u6389\uff0c\u5c31\u662f\u6700\u5927\u7684\u7545\u901a\u7a0b\u5ea6\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ll{\n\tint xx,yy,zz;\n}a[100001];\nbool cmp(ll x,ll y)\n{\n\treturn x.zz<y.zz;\n}\nint n,m,s,n1,f[100001],l1,r1;\nint find(int a)//\u627e\u7236\u4eb2\n{\n\tif(f[a]==a)return a;\n\tf[a]=find(f[a]);\n\treturn f[a];\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a[i].xx>>a[i].yy>>a[i].zz;\n\t\ts=s+a[i].zz;\n\t}\n\tsort(a+1,a+1+m,cmp);\n\tfor(int i=1;i<=n;i++)\n\tf[i]=i;//\u8d4b\u521d\u503c\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tl1=find(a[i].xx);r1=find(a[i].yy);\n\t\tif(l1!=r1)//\u5982\u679c\u6ca1\u8054\u901a\uff0c\u5219\u8054\u901aa[i].xx\u548ca[i].yy\u7684\u7236\u4eb2\u8282\u70b9\n\t\t{\n\t\t\tf[l1]=r1;\n\t\t\ts-=a[i].zz;n1++;\n\t\t}\n\t\tif(n1==n-1)break;//n-1\u6761\u5c31\u53ef\u4ee5\u9000\u51fa\n\t}\n\tcout<<s;\n\treturn 0;\n}\n```\n# \u672c\u9898\u4e3a\u4e00\u9053\u7eafKuskal\uff0c\u540c\u6b64\u9898\u5b66\u4e60Kuskal\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5",
        "postTime": 1553669446,
        "uid": 155355,
        "name": "AOTO",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "prim\u6216kruskal\u90fd\u662f0ms\u554a\uff0c\u672c\u849f\u84bb\u5728\u8fd9\u5c31\u4e24\u4e2a\u4e00\u8d77\u53d1\u4e86\n\n\n**kruskal**\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nstruct edge\n{\n    int i,j,m;\n}ed[10001];/\u5b58\u8fb9\nint n,k;\nint father[101];/\u5e76\u67e5\u96c6\uff0c\u7528\u6765\u5b58\u6b64\u8282\u70b9\u7684\u7956\u5148\nlong long sum=0;\nbool comp(edge a,edge b)\n{\n    return a.m<b.m;\n```\n}//\u6392\u5e8f\u7528\u7684\n\n```cpp\nint getf(int d)//\u627e\u7956\u5148\n{\n    if(d==father[d])\n    {\n        return d;\n    }\n    return father[d]=getf(father[d]);\n}\nint main()\n{\n    cin>>n>>k;\n//\u521d\u59cb\u5316\n    for(int i=1;i<=n;++i)\n    {\n        father[i]=i;\n    }\n    for(int i=1;i<=k;++i)\n    {\n        cin>>ed[i].i>>ed[i].j>>ed[i].m;\n        sum+=ed[i].m;\n    }\n    sort(ed+1,ed+k+1,comp);\n    int bian=0;\n    for(int i=1;i<=k;++i)\n    {\n        if(bian==n-1)\n        {\n            break;\n        }\n        int fai=getf(ed[i].i);\n        int faj=getf(ed[i].j);\n        if(fai!=faj)/\u82e5\u7956\u5148\u4e0d\u540c\uff0c\u628a\u8fb9\u52a0\u5165\u751f\u6210\u6811\n        {\n            father[faj]=fai;\n            bian++;\n            sum-=ed[i].m;/\u51cf\u53bb\u6b64\u8fb9\u6743\n        }\n    }\n    cout<<sum;\n    return 0;\n}\n```\n**prim\uff08\u90bb\u63a5\u77e9\u9635\u849f\u84bb\u6cd5\uff09**\uff1a\n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[120];\nint road[120][120];\nint book[120];\nint n,k;\nlong long sum=0;\n//\u521d\u59cb\u5316\nvoid init()\n{\n    memset(book,false,sizeof(book));\n    for(int i=1;i<=n;++i)\n    {\n        dis[i]=100000000;\n    }\n    for(int i=1;i<=n;++i)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            if(i==j)\n            {\n                road[i][j]=0;\n            }\n            else\n            {\n                road[i][j]=100000000;\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n>>k;\n    init();//\u521d\u59cb\u5316\n    for(int i=1;i<=k;++i)\n    {\n        int ii,jj,mm;\n        cin>>ii>>jj>>mm;\n        road[ii][jj]=road[jj][ii]=mm;//\u65e0\u5411\u56fe\n        sum+=mm;\n    }\n    dis[1]=0;\n//prim\n    for(int i=1;i<=n;++i)\n    {\n        int minnum=100000000;\n        int k;\n        for(int j=1;j<=n;++j)\n        {\n            if(dis[j]<minnum&&!book[j])\n            {\n                minnum=dis[j];\n                k=j;\n            }\n```\n}//\u627e\u79bb\u751f\u6210\u6811\u6700\u8fd1\u7684\u8282\u70b9\n```cpp\n        book[k]=1;//\u52a0\u5165\u751f\u6210\u6811\n        for(int j=1;j<=n;++j)\n        {\n            if(k!=j&&!book[j]&&dis[j]>road[k][j])\n            {\n                dis[j]=road[k][j];\n            }\n        }\n    }\n    for(int i=1;i<=n;++i)\n    {\n        sum-=dis[i];//\u51cf\u53bb\u751f\u6210\u6811\u4e2d\u7684\u8fb9\u6743\u503c\n    }\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1509886222,
        "uid": 37348,
        "name": "Araragi_Shinobu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u53d1\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u5427\uff0c\u8fd9\u4e2a\u9898\u89e3\u65e8\u5728\u8ba9\u4e0d\u4f1aKruskal\u7684\u5b66\u4f1a\u5b83\u3002\n\n- \u9996\u5148\u4f60\u80af\u5b9a\u77e5\u9053\u6700\u5c0f\u751f\u6210\u6811\u662f\u4ec0\u4e48\uff1a \u5728\u4e00\u4e2a\u6709$|V|$\u4e2a\u70b9\u7684\u65e0\u76f8\u8fde\u901a\u56fe\u4e2d\uff0c\u8fde\u63a5$|V-1|$\u4e2a\u8fb9\uff0c\u4e14\u4e0d\u8fde\u901a\u7684\u56fe\u53eb\u56fe\u7684\u4e00\u9897\u751f\u6210\u6811\u3002\u90a3\u6700\u5c0f\u751f\u6210\u6811\u5462\uff1f\u5c31\u662f\u751f\u6210\u6811\u4e2d\u6700\u5c0f\u7684\u90a3\u4e00\u73c2\u3002\uff08\u5e9f\u8bdd\n- \u6b64\u9898\u548c\u6700\u5c0f\u751f\u6210\u6811\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\t1. \u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u8bf4**\u5269\u4e0b\u7684\u56fe\u4e2d\u4e0d\u5f62\u6210\u56de\u8def**\n   2. \u5728\u4e0d\u5f62\u6210\u56de\u8def\u7684\u57fa\u7840\u4e0a \u88ab\u9664\u53d6\u7f51\u7ebf\u7684 $f_{i,j}$  \u8981\u5c3d\u53ef\u80fd\u5927\n   3. \u9664\u53d6\u7f51\u7ebf\u7684 $f_{i,j}$  \u8981\u5c3d\u53ef\u80fd\u5927\u4e0d\u5c31\u662f\u5269\u4e0b\u7684\u5c3d\u53ef\u80fd\u5c0f\u5417\uff1f\n   \n   \u5b8c\u7f8e\uff0c\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\n- \u5b66\u4f1akruskal\n\t\n    1. \u9996\u5148\u6211\u4eec\u60f3\uff0c\u5982\u679c\u8981\u8ba9\u751f\u6210\u6811\u6811\u6700\u5c0f\uff0c\u90a3\u6211\u4eec\u5c31\u53d6\u6700\u5c0f\u7684$|V-1|$\u6761\u8fb9\u5457 ~~\u641e\u5b9a\uff0c\u7ed3\u675f~~\n    2. \u6ce8\u610f\uff0c**\u5269\u4e0b\u7684\u56fe\u4e2d\u4e0d\u5f62\u6210\u56de\u8def**\n    3. \u7efc\u4e0a\uff0c\u6211\u4eec\u5728\u4e0d\u884c\u6210\u56de\u8def\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0\u8fb9\u3002\uff08\u5f88\u7b80\u5355\n    4. \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6700\u590d\u6742\u7684\u5c31\u662f\u5224\u65ad\u662f\u5426\u5f62\u6210\u56de\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u60f3\u529e\u6cd5\u5224\u65ad\u52a0\u5165\u67d0\u8fb9\u540e\u662f\u5426\u5f62\u6210\u73af\u3002\n    \t- \u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5f62\u6210\u73af\uff0c\u90a3\u4e48\u5fc5\u7136\u7684\uff0c\u80af\u5b9a\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u96c6\u5408\u5185\uff08\u6211\u8bed\u6587\u4e0d\u597d\uff0c\u53ef\u80fd\u6709\u6b67\u4e49\uff0c\u59d1\u4e14\u5141\u8bb8\u6211\u8fd9\u6837\u63cf\u8ff0\n       -  \u6709\u70b9\u62bd\u8c61\uff0c\u6765\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/tyf37qd7.png)\n   1. \u6211\u4eec\u6765\u770b\u8fd9\u6837\u4e00\u4e2a\u56fe\uff08\u56fe\u597d\u4e11\n ![](https://cdn.luogu.com.cn/upload/image_hosting/p6982opi.png)\n   \n   2. \u5f53\u4ed6\u88ab\u64cd\u4f5c\u6210\u8fd9\u6837\u65f6\uff0c\u6211\u4eec\u8981\u65ad\u5f00$ 4 - 2$\u3002\n   3. 4\u30012\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u6709\u516c\u5171\u7236\u4eb2\u4e3a1\n   4. \u60f3\u5230\u662f\u4ec0\u4e48\u4e86\u5417\uff1f\u5bf9\uff0c\u5c31\u662f\u5e76\u67e5\u96c6\uff01\n   5. \u9488\u5bf9\u4e0d\u77e5\u9053\u5e76\u67e5\u96c6\u7684OIer\uff0c\u6211\u89e3\u91ca\u4e00\u4e0b\uff0c\u5c31\u662f\u5b58\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u8001\u7684\u7956\u5148\uff0c\u5177\u4f53\u5b9e\u73b0\u65f6\u9012\u5f52\u56de\u6eaf\u65f6\u6807\u8bb0\u4e00\u4e0b\u5c31\u597d\u4e86\uff08\u600e\u4e48\u602a\u602a\u7684\n   6. \u6ce8\uff1a \u8fd9\u91cc\u7684\u96c6\u5408\u6307\u88ab\u9009\u8fc7\u7684\u8282\u70b9\uff08\u53c8\u6709\u6b67\u4e49\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ea\u8981\u5728 kruscal \u65f6\u5408\u5e76\u96c6\u5408\u5c31\u53ef\u4ee5\u4e86\u3002\n   7. \u5408\u5e76\u96c6\u5408\u7684\u65b9\u6cd5\uff0c\u628a\u4e00\u4e2a\u96c6\u5408\u6700\u8001\u7684\u7956\u5148\u6362\u6210\u53e6\u4e00\u4e2a\u96c6\u5408\u6700\u8001\u7684\u7956\u5148\uff08easy\n\n\t\u5e76\u67e5\u96c6\u7684code   \n ```\nint find(int m)//\u5bfb\u627e\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\n{\n    if(father[m]==m)return m;\n    else\n    {\n        return father[m]=find(father[m]);//\u6807\u8bb0\n    }\n    return father[m];\n}\nvoid add(int k,int l){//\u5408\u5e76\n    father[find(k)]=find(l);\n}\n```\n\u89e3\u51b3\uff0c\u4e0a\u5b8c\u6574code\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int N = 1e6;\nconst int Max = 0x7fffffff;\nstruct side {\n\tint begin,end,cost;\n\t//\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u4ef7\u503c \n}a[N];\nint fa[N],ans;//\u5e76\u67e5\u96c6 \nint b;\nint n,m;\nint find(int x) {\n\tif(x != fa[x])fa[x] = find(fa[x]);\n\treturn fa[x]; \n}\nint cmp(side a,side b){\n\treturn a.cost < b.cost;\n}\nvoid kruskal() {//\u6d41\u7a0b\u6211\u518d\u8be6\u7ec6\u8bf4\u4e00\u904d\n\tint sum = 0;//\u9009\u7684\u8fb9\u6709\u51e0\u6761\n\tfor(int i = 1; i <= m; i++){\n\t\tint b = a[i].begin,e = a[i].end,c = a[i].cost;\n\t\tif(find(b) == find(e))continue;//\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\t\t\n\t\tfa[find(b)] = find(e);//\u5408\u5e76\u96c6\u5408\n\t\tans += c;//\u7b54\u6848\n\t\tsum++;\n\t\tif(sum == n-1)break;//\u5982\u679c\u9009\u7684\u8fb9\u6570 = \u8282\u70b9\u6570-1\uff0c\u8bf4\u660e\u9009\u597d\u4e86\n\t}\n}\nsigned main() {\n\tint x,y,z,sum = 0;\n\tcin >> n >>m;\n\tfor(int i = 1; i <= n; i++){\n\t\tfa[i] = i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff0c\u4ed6\u4eec\u6700\u5f00\u59cb\u7236\u4eb2\u80af\u5b9a\u662f\u81ea\u5df1\n\t}\n\tfor(int i = 1; i <= m; i++) {\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[i].begin = x;\n\t\ta[i].end = y;\n\t\ta[i].cost = z;\n\t\tsum += z; //\u8f93\u5165\u4e0d\u8bf4\u4e86\n\t}\n\tsort(a+1,a+m+1,cmp);//stl\u5927\u6cd5\u597d\uff08\u9009\u51fa\u6700\u5c0f\u7684\n\tkruskal();\n\tcout << sum - ans << endl;//\u603b\u6570 - \u6ca1\u9009\u7684 = \u9009\u4e86\u7684\n}\n```\n\n\u6211\u76f8\u4fe1\u50cf\u6211\u8fd9\u6837\u7684\u849f\u84bb\u4e5f\u80fd\u770b\u61c2\n\n   ",
        "postTime": 1583237996,
        "uid": 226148,
        "name": "Suuon_Kanderu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "# \u53d1\u4e2aKruskal\u7684\u9898\u89e3\n\u5177\u4f53\u89e3\u91ca\u5728\u535a\u5ba2\u91cc\n\u8fde\u63a5\u5728\u8fd9\n[JCZhang's Blog](https://jczhang.top/2018/04/30/mst-kruskal/)\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <iostream>\n#include <algorithm>\n#define ll long long\nstruct edge {\n    ll u, v ,w;\n}e[200000];\nll fa[200000];\nint n, m, ans, cnt;\n\n\nvoid init();\nll find(int);\nvoid Kruskal();\nbool cmp(const edge &, const edge &);\n\nint main() {\n    std::cin >> n >> m;\n    init();\n    \n    for (int i = 0 ;i < m; ++i)\n        std::cin >> e[i].u >> e[i].v >> e[i].w, ans += e[i].w;\n        \n    Kruskal();\n    std::cout << ans;\n    return 0;\n}\n\nvoid init() {\n    for (int i = 1; i < m; ++i)\n        fa[i] = i;\n}\n\nvoid Kruskal() {\n    std::sort (e, e + m, cmp);\n    for (int i = 0; i < m; ++i) {\n        ll fu = find(e[i].u);\n        ll fv = find(e[i].v);\n        if (fu == fv) continue;\n        fa[fv] = fu; cnt++; ans -= e[i].w;\n        if(cnt == n-1) break;\n    }\n}\n\nll find(int x) {\n    if (fa[x] != x) fa[x] = find(fa[x]);\n    return fa[x];\n}\n\nbool cmp(const edge &a, const edge &b) {\n    return a.w < b.w;\n}\n```\n\n\u5f88\u7b80\u5355\u7684\u6a21\u677f\u9898\n\u4e00\u5f00\u59cb\u8bfb\u5165\u65f6\uff0c \u5148\u5f97\u5230\u56fe\u7684\u6743\u503c\u548c\n\u518d\u627eMST\n\u51cf\u53bbMST\u6743\u503c\u5c31\u662fans\u4e86\n",
        "postTime": 1525096307,
        "uid": 61622,
        "name": "JCZhang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u6781\u5176\u5178\u578b\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u9898\u76ee\uff0cPrim\u8f7b\u677e\u8fc7~\n\n[/color][codec ]\n\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<string.h>\nint a,b,c,i,j,k,l,m,n,inf=9999999,sum,max;\nint e[101][101],minn[101];\nbool u[101];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)\n            if(i==j)\n                e[i][j]=0;\n            else\n                e[i][j]=inf;//\u6784\u9020\u90bb\u63a5\u77e9\u9635 \n    for(i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        e[a][b]=e[b][a]=c;\n        max+=c;//max\u50a8\u5b58\u6240\u6709\u7684\u7545\u901a\u7a0b\u5ea6 \n```\n}//\u8bfb\u5165\u6570\u636e\u5e76\u5b58\u5165\u77e9\u9635\n```cpp\n    memset(minn,0x7f,sizeof(minn));\n    minn[1]=0;    \n    memset(u,1,sizeof(u));//\u521d\u59cb\u5316\u4e3aTrue\uff0c\u8868\u793a\u6240\u6709\u70b9\u672a\u88ab\u8bbf\u95ee \n    for(i=1;i<=n;i++){\n        k=0;\n        for(j=1;j<=n;j++)//\u5bfb\u627e\u4e00\u4e2a\u4e0e\u5df2\u8bbf\u95ee\u7684\u70b9\u76f8\u8fde\u7684\u6743\u503c\u6700\u5c0f\u7684\u672a\u88ab\u8bbf\u95ee\u7684\u70b9k \n            if(u[j] && minn[j]<minn[k])\n                k=j;\n        u[k]=false;//\u5c06k\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\uff0c\u6807\u8bb0\u5df2\u8bbf\u95ee \n        for(j=1;j<=n;j++)//\u4fee\u6539\u4e0ek\u76f8\u8fde\u7684\u6240\u6709\u672a\u88ab\u8bbf\u95ee\u7684\u70b9 \n            if(u[j] && e[k][j]<minn[j])\n                minn[j]=e[k][j];\n    }\n    for(i=1;i<=n;i++)\n        sum+=minn[i];//\u7d2f\u52a0\u6743\u503c \n    printf(\"%d\",max-sum);\n    return 0;\n}\n[/codec ]\n```",
        "postTime": 1470985651,
        "uid": 8600,
        "name": "_YRH_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u7684\u6211\u745f\u745f\u53d1\u6296\n\n\u849f\u84bb\u7684\u9898\u89e3\u5949\u4e0a\n\n\u8fd9\u4e2a\u9898\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u7684\u9898\uff0c\u7a0d\u5fae\u6362\u4e00\u4e0b\u601d\u8def\u5c31\u597d\u4e86\uff0c\u9898\u76ee\u8981\u6c42\u4fee\u6539\u4e4b\u540e\u7684\u56fe\u4e2d\u4e0d\u5b58\u5728\u73af\uff0c\u4e00\u5171\u6709n\u4e2a\u70b9\uff0cm\u6761\u8fb9\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u73af\u7684\u8bdd\u53ea\u80fd\u6709n-1\u6761\u8fb9\uff0c\u5f53\u4f60\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u8fd9\u5c31\u663e\u7136\u662f\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\u7684\u9898\u4e86\n\n/\u5c55\u793a\u4ee3\u7801/\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int maxn=500002;\nstruct Edge{\n    int u,v,w;\n}e[maxn];//\u5b58\u56fe \nint f[maxn];\nint n,m,sum,ans,tot;\nbool cmp(Edge a,Edge b)//sort\u51fd\u6570\u4e0d\u5fc5\u591a\u8bf4,Kruskal\u4e2d\u6743\u503c\u6392\u5e8f \n{\n    return a.w<b.w;\n}\nint Find(int x)//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c \u2014\u67e5\u627e \n{\n    if(f[x]==x)    return x;\n    return f[x]=Find(f[x]);\n}\nvoid Union(int x,int y)//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c \u2014\u5408\u5e76 \n{\n    f[Find(y)]=Find(x);\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>e[i].u>>e[i].v>>e[i].w;\n        sum+=e[i].w;//\u7b97\u51fa\u603b\u5171\u7684 \n    }    \n    for(int i=1;i<=n;i++)\n        f[i]=i;//\u5e76\u67e5\u96c6\u64cd\u4f5c\u2014\u521d\u59cb\u5316 \n    sort(e+1,e+m+1,cmp);\n    for(int i=1;i<=m&&tot<n-1;i++)//\u5bfb\u627en-1\u6761\u8fb9\u6784\u6210\u6700\u5c0f\u751f\u6210\u6811 \n        if(Find(e[i].u)!=Find(e[i].v)) \n        {\n            Union(e[i].u,e[i].v);\n            tot++;\n            ans+=e[i].w;//\u8bb0\u5f55\u9898\u76ee\u4e2d\u4fee\u6539\u5269\u4e0b\u7684\u8fb9\u7684\u6700\u5c0f\u6d41\u7545\u5ea6\u7684\u548c\uff1b \n        }\n    cout<<sum-ans;//\u7528\u603b\u6743\u503c-\u5269\u4e0b\u7684\u6700\u5c0f\u6d41\u7545\u5ea6\u7684\u548c =\u9664\u53bb\u7f51\u7ebf\u6d41\u7545\u5ea6\u7684\u6700\u5927\u503c \n    return 0;\n}\n\n```",
        "postTime": 1508915162,
        "uid": 51696,
        "name": "2er0n3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7ecf\u5178\u7684Kruska\u7b97\u6cd5\u7684\u6a21\u677f\u9898\uff0c\u53ea\u8981\u61c2\u5f97\u5982\u4f55\u8fd0\u7528Kruskal\u7b97\u6cd5\uff0c\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\uff0c\uff0c\uff0c\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm> \nusing namespace std;    \nint n,m,a,b,c,tot=0,v[10001],fa[10001],k[10001],num=0;\nstruct edge\n{\n    int from,to,next,data;\n}e[10001];\nbool comp(const edge &a,const edge &b)\n{\n    if(a.data<b.data)return 1;\n    else return 0;\n}\nvoid add(int x,int y)\n{\n    tot++;\n    e[tot].from=x;\n    e[tot].to=y;\n    e[tot].data=c;\n    e[tot].next=v[x];\n    v[x]=tot;\n}\nint find(int x)\n{\n    if(fa[x]!=x)return fa[x]=find(fa[x]);\n    return x;\n}\nvoid uni(int x,int y)\n{\n    int r1=find(x),r2=find(y);\n    if(r1!=r2)fa[r2]=r1;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a>>b>>c;\n        num+=c;\n        add(a,b);\n        add(b,a);\n    }\n    for(int i=1;i<=n;i++)k[i]=0x7fffffff;\n    k[1]=0;\n    for(int i=1;i<+n;i++)fa[i]=i;\n    sort(e+1,e+tot+1,comp);\n    int sum=0,p;\n    for(int i=1;i<=tot;i++)\n    {\n        if(find(e[i].to)!=find(e[i].from))\n        {\n            uni(e[i].from,e[i].to);\n            sum+=e[i].data;\n            p++;\n            if(p==n-1)break;\n        }\n    }\n    cout<<num-sum;\n    return 0;\n}\n```",
        "postTime": 1498719302,
        "uid": 29218,
        "name": "Miss\u706chxh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8981\u6c42\u6700\u5927\u5220\u8fb9\u6570\uff0c\u53ef\u8f6c\u5316\u4e3a\u8fb9\u7684\u548c-\u6700\u5c0f\u751f\u6210\u6811\uff0c\u7531\u6b64\u60f3\u5230\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5 \n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define q 109213\n#define p 2001   //\u5934\u6587\u4ef6\u4e0e\u5b8f\u5b9a\u4e49 \nusing namespace std;\nstruct node\n{\n\tint x;\n\tint y;\n\tint v;//x,y\u8868\u793a\u4e24\u4e2a\u8282\u70b9\uff0cv\u8868\u793a\u6743 \u4f7f\u7528\u7ed3\u6784\u4f53\u4fbf\u4e8e\u6392\u5e8f \n}\na[q];\nint f[q];\ninline int findx(int x);\ninline bool cmp(node a,node b)//\u5b9a\u4e49\u51fd\u6570 \nsigned main()\n{\n\tint n,k;\n\tcin>>n>>k; //\u8f93\u5165\u8ba1\u7b97\u673a\u6570\u53ca\u7f51\u7ebf\u8054\u901a\u6570 \n\tint ii,jj,m;\n\tint tt=0;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tcin>>ii>>jj>>m;\n\t\ta[i].x=ii;\n\t\ta[i].y=jj;\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u8282\u70b9 \n\t\ta[i].v=m;\n\t\ttt+=m;\u7b97\u51fa\u603b\u8fb9\u6570 \n\t}\n\tfor(int i=1;i<=n;i++)\n\tf[i]=i;\u521d\u59cb\u5316\u5e76\u67e5\u96c6 \n\tsort(a+1,a+1+k,cmp);\u4ee5\u8fb9\u4e3a\u4f9d\u636e\u6392\u5e8f \n\tint t=0,s=0;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tif(s==n)\n\t\tbreak;\u6700\u591a\u5408\u5e76n\u6b21 \n\t\tif(findx(a[i].x)!=findx(a[i].y))\n\t\t{\n\t\tf[findx(a[i].x)]=findx(a[i].y);\u5408\u5e76\u5757 \n\t\tt+=a[i].v;\u7edf\u8ba1\u6700\u5c0f\u751f\u6210\u6811\u7684\u5927\u5c0f \n\t\ts++;\u5408\u5e76\u6b21\u6570\u7edf\u8ba1 \n\t}\n\t}\n\tcout<<tt-t;\u7528\u603b\u8fb9\u6570-\u6700\u5c0f\u751f\u6210\u6811=\u6700\u591a\u5220\u8fb9\u6570 \n\treturn 0;\u8fd4\u56deac \n}\n\u51fd\u6570\u90e8\u5206 \ninline int findx(int x) \u5e76\u67e5\u96c6\u7684\u67e5\u51fd\u6570 \n{\n\tif(f[x]==x)\n\treturn x;         \u5982\u679cf[x]==x\u67e5\u627e\u7ed3\u675f\uff0c\u627e\u5230\u7956\u5148 \n\treturn f[x]=findx(f[x]);\u63a5\u7740\u5411\u4e0b\u67e5\u627e \n}\ninline bool cmp(node a,node b)\n{\n\treturn a.v<b.v; \u7528\u8fb9\u4e3a\u4f9d\u636e\u7531\u5c0f\u5411\u5927\u6392\u5e8f \n}\n```cpp",
        "postTime": 1576583849,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5ac\u2019\u5c40\u57df\u7f51\u2018"
    },
    {
        "content": "# Prim \u7b97\u6cd5\n\n\u770b\u5230\u597d\u591a\u5946\u4f6c\u5199\u7684\u90fd\u662fKruskal\uff0c\n\n~~\u672c\u849f\u84bb\u6839\u672c\u5c31\u4e0d\uff08bu\uff09\u60f3\uff08hui\uff09\u5199\uff08yong\uff09\uff01~~\n\n\n------------\n\n\n\u4e0b\u9762\u6765\u4ecb\u7ecd\u4e00\u4e0bPrim\u7b97\u6cd5\uff1a\n\n#### Prim\u7b97\u6cd5\u7684\u6838\u5fc3\uff1a\u6bcf\u6b21\u786e\u5b9a\u4e00\u4e2a\u70b9\u3002\n\u521d\u59cb\u5316\uff1a\n\n\u4ece\u56feF\u4e2d\u4efb\u53d6\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff08\u6700\u5c0f\u751f\u6210\u6811\u7684\u6839\uff09\uff0c\u5e76\u5c06\u5b83\u6807\u8bb0\u4e3a\u5df2\n\n\u786e\u5b9a\u7684\u70b9\uff08\u4e0b\u9762\u628a\u5df2\u786e\u5b9a\u7684\u70b9\u79f0\u4e3a\u767d\u70b9\uff0c\u672a\u786e\u5b9a\u7684\u70b9\u4e3a\u84dd\u70b9\uff09\u3002\n\n\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n\uff081\uff09\u679a\u4e3e\u6240\u6709\u767d\u70b9i\u4e0e\u84dd\u70b9j\uff0c\u9009\u62e9\u6700\u5c0f\u8fb9\u6743\u503c<i\uff0cj>\u3002\n\n\uff082\uff09\u5c06\u70b9j\u6807\u8bb0\u4e3a\u767d\u70b9\uff0c\u5c06\u8fb9<i\uff0cj>\u7684\u8fb9\u6743\u503c\u52a0\u5165\u7b54\u6848\uff08ans\uff09\u3002\n\n\u76f4\u5230\u56feF\u88ab\u6807\u8bb0\u8fc7n\u6b21\u4e3a\u6b62\uff0c\n###### \u6700\u5c0f\u751f\u6210\u6811\u5c31\u8fd9\u6837\u8bde\u751f\u4e86\uff01\uff01\uff01\n\n\n------------\n\n\n\u4e0b\u9762\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint sum,k;       //\u7d2f\u52a0\u548c \nbool vis[102];   //\u767d\u84dd\u70b9\nint n,dis[102];  //\u8bb0\u8fb9 \nint f[102][102]; //\u8bb0\u56fe \nlong  long ans=0;//\u6743\u503c \nvoid Prim(){\n\t//\u5f00\u59cb\u65f6\u5168\u662f\u84dd\u70b9 \n\tmemset(vis,true,sizeof(vis));\n\t//\u8bb0\u4e3a\u6700\u5927\u503c \n\tmemset(dis,0x7f,sizeof(dis));\n\t//\u5c061\u8bbe\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6839\uff0c\u8ddd\u79bb\u4e3a0\n\tdis[1]=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint h=0;\n\t\t//\u627e\u51fa\u4e0ei\u70b9\u76f8\u8fde\u7684\u6240\u6709\u70b9\u4e2d\u8fb9\u6743\u6700\u5c0f\u7684\u70b9 \n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(vis[j]&&dis[j]<dis[h]){\n\t\t\t\th=j;\n\t\t\t}\n\t\t}\n\t\t//\u52a0\u4e0a \n\t\tans+=dis[h];\n\t\t//\u628ah\u70b9\u8bb0\u4e3a\u767d\u70b9 \n\t\tvis[h]=false;\n\t\t//\u4fee\u6539\u6240\u6709\u84dd\u70b9\u5230\u751f\u6210\u6811\u7684\u8ddd\u79bb \n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(vis[j]&&f[h][j]<dis[j]){\n\t\t\t\tdis[j]=f[h][j];\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\t//\u8f93\u5165\uff0c\u4e0d\u7528\u591a\u8bf4\u3002\n\tcin>>n>>k;\n\tfor(int i=1;i<=k;i++){\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tf[x][y]=f[y][x]=z;\n\t\tsum+=z;//\u7d2f\u52a0\uff0c\u540e\u9762\u6709\u7528\n\t} \n   //\u4e00\u5b9a\u8981\u8bb0\u4f4f\u8fd9\u4e00\u6bb5\uff0c\u5c06\u6ca1\u8d4b\u503c\u7684\u8fb9\u8bbe\u4e3a\u65e0\u7a77\u5927\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(i!=j&&f[i][j]==0){\n\t\t\t\tf[i][j]=1e9;\n\t\t\t}\n\t\t}\n\t}\n\tPrim();//Prim\u7b97\u6cd5\n\t//\u56e0\u4e3a\u8981\u8f93\u51fa\u7684\u662f\u5220\u9664\u7684\u8fb9\uff0c\n\t//\u6240\u4ee5\u8981\u7528\u603b\u548c\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u503c\n\tcout<<sum-ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1570247841,
        "uid": 258196,
        "name": "CNF_Acceptance",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "Kuskal\u6a21(m\u00fa)\u677f\n\n\u53ea\u662f\u7a0d\u5fae\u53d8\u4e86\u4e0b\u5f62\u3002\u3002\u3002\n\nKuskal\u7b97\u6cd5\u9700\u8981\u5229\u7528\u5e76\u67e5\u96c6\uff0c\u8f83\u8be6\u7ec6\u7684\u89e3\u91ca\u5728\u4ee3\u7801\u91cc\u3002\n\n\n\u201c\u9700\u8981\u89e3\u51b3\u56de\u8def\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u9664\u53bb\u4e00\u4e9b\u8fde\u7ebf\uff0c\u4f7f\u5f97\u7f51\u7edc\u4e2d\u6ca1\u6709\u56de\u8def\uff0c\u5e76\u4e14\u88ab\u9664\u53bb\u7f51\u7ebf\u7684\u03a3f(i,j)\u6700\u5927\u201d\n\n\u8fd9\u662f\u4e00\u53e5\u975e\u5e38\u91cd\u8981\u7684\u63d0\u793a\uff0c\u5373\u5269\u4f59\u7684\u6240\u6709\u8fb9\u8fb9\u6743\u4e4b\u548c\u6700\u5c0f\uff0c\u6700\u5c0f\u751f\u6210\u6811\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u5148\u5efa\u6811\uff0c\u518d\u6c42\u9664\u53bb\u7684\u6700\u5927\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,ans;\nint f[1005];\nstruct aa{int l,r,w;}e[1050];//\u7ed3\u6784\u4f53\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u5b58\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u548c\u8fb9\u6743\nint cmp(aa a,aa b){return a.w<b.w;}\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);} //\u4e09\u76ee\u8fd0\u7b97\u7b26 \u82e5\uff1f\u524d\u6761\u4ef6\u4e3a\u771f\u6267\u884c\uff1a\u524d\u7684\u8bed\u53e5 \u4e3a\u5047\u6267\u884c\uff1a\u540e\u7684\uff1b\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5bfb\u627e\u7236\u8282\u70b9\u548c\u8def\u5f84\u538b\u7f29\nvoid K()\n{\n\tsort(e+1,e+1+k,cmp);//\u6309\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u8fd9\u6837\u8fde\u8fb9\u65f6\u5c31\u4f18\u5148\u8fde\u63a5\u8f83\u5c0f\u503c\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint x=find(e[i].l),y=find(e[i].r); \n\t\tif(x==y)continue;//\u5982\u679c\u8fde\u63a5\u5219\u8df3\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\n\t\tans+=e[i].w;//\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u52a0\n\t\tf[y]=x;//\u8fde\u8fb9\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)f[i]=i;//\u5148\u521d\u59cb\u5316\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u7236\u8282\u70b9 \u8fd9\u4e00\u6b65\u5bf9\u4e8e\u5e76\u67e5\u96c6\u7279\u522b\u91cd\u8981\n\tfor(int i=1;i<=k;i++)scanf(\"%d%d%d\",&e[i].l,&e[i].r,&e[i].w);\n\tK();//\u6267\u884c\u51fd\u6570\n\tint sum=0;\n\tfor(int i=1;i<=k;i++)sum+=e[i].w;\n\tprintf(\"%d\",sum-ans);\n}\n```\n\u849f\u84bb\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\u3002\u3002\u6c42\u8fc7qwq(\u5176\u5b9e\u7b2c\u4e8c\u6ca1\u8fc7)\n",
        "postTime": 1568815601,
        "uid": 142056,
        "name": "\u6e05\u8f89\u66ae\u7fca\u6668",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9898\uff0c\u9700\u8981\u61c2\u5f97\u6700\u5c0f\u751f\u6210\u6811\uff08MST\uff09\u548c\u5e76\u67e5\u96c6\n\n\u53ef\u4ee5\u81ea\u5df1\u5148\u770b\u4e00\u4e0b\u4e00\u672c\u901a\u7684\u76f8\u5173\u7ae0\u8282\n\n\u8fd9\u91cc\u7b80\u5355\u8bf4\u660e\u4e00\u4e0b\n\n\u5e76\u67e5\u96c6\u4fdd\u5b58\u6bcf\u4e2a\u70b9\u7684\u201c\u7956\u5148\u201d\uff0c\u800c\u5355\u7eaf\u7684\u4fdd\u5b58\u7956\u5148\u4f7f\u5f97\u904d\u5386\u65f6\u95f4\u8f83\u957f\uff0c\u6545\u66f4\u6539\u4fdd\u5b58\u65b9\u5f0f\uff1a\u628a\u8fd9\u4e00\u5bb6\u7684\u4eba\u7684\u7956\u5148\uff0c\u90fd\u8bbe\u4e3a\u6700\u8001\u7684\u90a3\u4e2a\n\n\u6bd4\u59821\uff0c2\uff0c3\uff0c4\uff0c5\n\n1\u662f\u6700\u8001\u7684\uff0c\u7136\u540e\u4f9d\u6b21\u9012\u51cf\n\n\u90a3\u4e48\u666e\u901a\u65b9\u6cd5\u662f1\u7684\u7956\u5148\u662f1\uff0c2\u7684\u7956\u5148\u662f1\uff0c3\u7684\u7956\u5148\u662f2,4\u7684\u7956\u5148\u662f3\u2026\u2026\n\n\u800c\u4f18\u5316\u65b9\u6cd5\u8868\u793a\u4e3a\uff1a1\u7684\u7956\u5148\u662f1\uff0c2\u7684\u7956\u5148\u662f1\uff0c3\u7684\u7956\u5148\u662f1\uff0c4\u7684\u7956\u5148\u662f1\u2026\u2026\n\n\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u5224\u65ad\u4e24\u4e2a\u4eba\u662f\u5426\u662f\u4eb2\u5c5e\u5173\u7cfb\u7684\u901f\u5ea6\n\n\u6700\u5c0f\u751f\u6210\u6811\u6307\uff1a\nn\u4e2a\u70b9\uff0c\u7528n-1\u6761\u8fb9\u76f8\u8fde\uff08\u5c31\u662f\u6811\uff09\uff0c\u4f7f\u5f97\u8fd9n-1\u6761\u8fb9\u7684\u8fb9\u6743\u548c\u6700\u5c0f\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u4f7f\u7528\u514b\u9c81\u65af\u5361\u5c14\uff08Kruskal\uff09\u7b97\u6cd5\u8f83\u597d\uff08\u7528\u5230\u5e76\u67e5\u96c6\uff09\n\n\u9996\u5148\u5c06\u6240\u6709\u7684\u8fb9\u6309\u8fb9\u6743\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u5224\u65ad\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u5408\u5e76\u8fd9\u4e24\u4e2a\u70b9\uff0c\u8fb9\u6570\u52a01\uff0c\u5f53\u8fb9\u6570\u7b49\u4e8en-1\u65f6\u9000\u51fa\u5faa\u73af\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u53ea\u8981\u7528\u603b\u8fb9\u6743\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u8fb9\u6743\u5c31\u884c\u4e86\n\n```cpp\n#include<iostream>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\nint n,k;\nstruct node{\n\tint x,y;//\u4e24\u70b9\n\tint cd;//\u8fb9\u6743\n}jsj[10007];\nint sum,ans,zh;\nbool cmp(node x,node y){\n\treturn x.cd<y.cd;//\u6309\u8fb9\u6743\u6392\u5e8f\n}\nint fa[107];\nint fi(int x){\n\tif(fa[x]!=x)fa[x]=fi(fa[x]);//\u5982\u679c\u5b83\u7684\u7956\u5148\u4e0d\u662f\u81ea\u5df1\uff0c\u66f4\u6539\u5b83\u7684\u7956\u5148\uff08\u6700\u540e\u4e3a\u6700\u8001\u7684\u90a3\u4e2a\u4eba\uff09\n\treturn fa[x];\n}\nvoid hb(int x,int y){\n\tfa[x]=y;//\u5408\u5e76\n\treturn;\n}\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\tfa[i]=i;//\u6bcf\u4e2a\u4eba\u7684\u7956\u5148\u5148\u4fdd\u5b58\u4e3a\u81ea\u5df1\n\tfor(int i=1;i<=k;i++){\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tjsj[i].x=a;\n\t\tjsj[i].y=b;\n\t\tjsj[i].cd=c;\n\t\tzh+=c;//\u8fb9\u6743\u603b\u548c\n\t}\n\tsort(jsj+1,jsj+k+1,cmp);\n\tfor(int i=1;i<=k;i++){\n\t\tint a=jsj[i].x;\n\t\tint b=jsj[i].y;//\u4e3a\u4e0b\u9762\u5199\u4ee3\u7801\u65b9\u4fbf\n\t\tif(fi(a)!=fi(b)){//\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\n\t\t\thb(fi(a),fi(b));//\u5408\u5e76\n\t\t\tsum++;//\u8fb9\u6570\u52a01\n\t\t\tans+=jsj[i].cd;//\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u52a0\u4e0a\u5f53\u524d\u8fb9\u7684\u8fb9\u6743\n\t\t}\n\t\tif(sum==n-1)break;//\u751f\u6210\u5b8c\u6bd5\n\t}\n\tcout<<zh-ans<<endl;//\u603b\u8fb9\u6743\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u6743\u548c\n\treturn 0;\n}\n```\n\n\u5199\u5f97\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\uff0c\u5373\u4f7f\u6ca1\u6709\u5b66\u8fc7\u4e5f\u5e94\u8be5\u61c2\u4e86\n\n~~\u4e0d\u70b9\u4e2a\u8d5e\u5417\uff1f~~\n",
        "postTime": 1566286173,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u840c\u65b0\u53d1\u7b2c\u4e00\u6b21\u9898\u89e3\nOrz\u5404\u4f4d\u5927\u4f6c\n\u8fd9\u9898\u5176\u5b9e\u5c31\u662f3366\u7684\u6539\u7f16\uff0c\u5404\u4f4d\u53ef\u4ee5\u53bb\u770b\u4e0b3366\n3366\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,st[200005],ans,bian;\nstruct node\n{\n\tint x,y,z;\n} shu[200005];\nbool cmp(node a,node b)\n{\n\treturn a.z<b.z;\n}//\u4e0a\u9762\u7684\u4e3a\u7ed3\u6784\u4f53\u5b9a\u4e49\u4ee5\u53ca\u6392\u5e8f\nint search(int a){return a!=st[a]?search(st[a]):a;}//\u67e5\u627ea\u5728\u54ea\u4e2a\u96c6\u5408\nvoid he (int a,int b)\n{\n\tint na=search(a),nb=search(b);\n\tif(na!=nb)\n\t{\n\t\tst[na]=min(na,nb);\n\t\tst[nb]=min(na,nb);\n\t}\n}//\u5408\u5e76\u96c6\u5408\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t\tst[i]=i;\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>shu[i].x>>shu[i].y>>shu[i].z;\n\n\t}\n\tsort(shu+1,shu+m+1,cmp);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint na=search(shu[i].x),nb=search(shu[i].y);\n\t\tif(na!=nb)\n\t\t{\n\t\t\the(na,nb);\n\t\t\tbian++;\n\t\t\tans+=shu[i].z;\n\t\t}\n\t}\n\tif(bian==n-1)\n\t\tcout<<ans<<endl;\n\telse cout<<\"orz\"<<endl;\n//\u636e\u8bf4\u6d1b\u8c37\u7684\u6570\u636e\u4e2d\u6ca1\u6709orz\uff0c\u6211\u4e5f\u6ca1\u6709\u6d4b\u8bd5\uff0c\u5404\u4f4d\u5927\u4f6c\u53ef\u4ee5\u53bb\u6d4b\u8bd5\u4e00\u4e0b\n\treturn 0;\n}\n```\n\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u9898emmmmmmmm\uff0c\u5c31\u662f\u628a\u5168\u90e8\u7684z\u52a0\u8d77\u6765\u7136\u540e\u51cf\u53bbans\uff0c\u62115\u5206\u949fa\u4e86\u4fe9\u9898\u4f60\u80fd\u4fe1\u3002\u3002\u3002\u3002\n\u4ee5\u4e0b\u662f\u6b64\u9898\u7684\u4ee3\u7801\uff0c\u4f60\u770b\u5b8c\u4e4b\u540e\u4e5f\u8bb8\u4f1a\u5927\u547c\u5367\u69fd\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,st[200005],ans,bian;\nstruct node\n{\n\tint x,y,z;\n} shu[200005];\nbool cmp(node a,node b)\n{\n\treturn a.z<b.z;\n}\nint search(int a)\n{\n\treturn a!=st[a]?search(st[a]):a;\n}\nvoid he (int a,int b)\n{\n\tint na=search(a),nb=search(b);\n\tif(na!=nb)\n\t{\n\t\tst[na]=min(na,nb);\n\t\tst[nb]=min(na,nb);\n\t}\n}\nint main()\n{\n\tint zong=0;\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t\tst[i]=i;\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>shu[i].x>>shu[i].y>>shu[i].z;\n\t\tzong+=shu[i].z;\n\t}\n\tsort(shu+1,shu+m+1,cmp);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint na=search(shu[i].x),nb=search(shu[i].y);\n\t\tif(na!=nb)\n\t\t{\n\t\t\the(na,nb);\n\t\t\tbian++;\n\t\t\tans+=shu[i].z;\n\t\t}\n\t}\n\tcout<<zong-ans<<endl;\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1565493725,
        "uid": 141330,
        "name": "0x\u5c0f\u98ce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "# \u53d1\u4e2aPrim\u7684\u9898\u89e3\n### \u5176\u5b9e\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u6539\u4e00\u4e0b\uff0c\u603b\u6743\u503c-\u6700\u5c0f\u751f\u6210\u6811=\u7b54\u6848\n## \u7ec6\u8282\u89c1\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint u[1005] ;//\u662f\u5426\u8fdb\u5165\u6811 \nint s[1005] ;//\u6ca1\u52a0\u5165\u6811\u7684\u8282\u70b9 \nint mp[1005][1005] ; //\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb \nint main()\n{\n\tmemset(mp, 1, sizeof(mp));//\u521d\u59cb\u5316mp \n\tint tot = 0 ;\n\tint n , m , ans = 0 ;\n\tcin >> n >> m ;\n\tfor(int i = 1 ; i <= m ; ++i)\n\t{\n\t\tint x , y , z ;\n\t\tcin >> x >> y >> z ;\n\t\tif(z < mp[x][y]) //\u9009\u62e9\u6743\u503c\u5c0f\u7684 \n\t\t\tmp[x][y] = mp[y][x] = z ;\n\t\ttot += z ;//\u8ba1\u7b97\u603b\u6743\u503c \n\t}\n\tmemset(s, 1, sizeof(s));\n\ts[1] = 0; //\u8bbe\u7f6e\u8d77\u70b9  \n\tfor(int i = 1 ; i <= n ; ++i)\n\t{\n\t\tint k = 0 ; \n\t\tfor(int j = 1 ; j <= n ; ++j)//\u5bfb\u627e\u8fd8\u6ca1\u6709\u8fdb\u5165\u6811\u4f46\u662fs\u6700\u5c0f\u7684\u70b9 \n\t\t\tif(u[j] == 0 && s[j] < s[k])\n\t\t\t\tk = j ;\n\t\tu[k] = 1 ;\n\t\tans += s[k] ;//\u8fdb\u5165\u6811 \n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && mp[k][j] < s[j])\n\t\t\t\ts[j] = mp[k][j] ;\n\t}\n\tcout << tot - ans ;//\u8f93\u51fa \n\treturn 0 ;\n}\n```\n## \u6ca1\u6709\u6ce8\u91ca\u7684\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\nint u[1005] ;\nint s[1005] ;\nint mp[1005][1005] ;\nint main()\n{\n\tmemset(mp, 1, sizeof(mp));\n\tint tot = 0 ;\n\tint n , m , ans = 0 ;\n\tcin >> n >> m ;\n\tfor(int i = 1 ; i <= m ; ++i)\n\t{\n\t\tint x , y , z ;\n\t\tcin >> x >> y >> z ;\n\t\tif(z < mp[x][y]) \n\t\t\tmp[x][y] = mp[y][x] = z ;\n\t\ttot += z ;\n\t}\n\tmemset(s, 1, sizeof(s));\n\ts[1] = 0;\n\tfor(int i = 1 ; i <= n ; ++i)\n\t{\n\t\tint k = 0 ; \n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && s[j] < s[k])\n\t\t\t\tk = j ;\n\t\tu[k] = 1 ;\n\t\tans += s[k] ;\n\t\tfor(int j = 1 ; j <= n ; ++j)\n\t\t\tif(u[j] == 0 && mp[k][j] < s[j])\n\t\t\t\ts[j] = mp[k][j] ;\n\t}\n\tcout << tot - ans ;\n\treturn 0 ;\n}\n```\n",
        "postTime": 1565161054,
        "uid": 99729,
        "name": "TYX180129",
        "ccfLevel": 0,
        "title": "P2820 \u5c40\u57df\u7f51 \u9898\u89e3"
    },
    {
        "content": "[\u67e5\u770b\u9898\u76ee\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P2820)  \n## \u4e00\u9053\u6700\u5c0f\u751f\u6210\u6811\u7684\u88f8\u9898\uff0c\u8fd9\u91cc\u6211\u4eec\u7528kruskal\u6765\u505a\n### kruskal \u662f\u4e00\u79cd\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn)\n#### \u5b83\u7684\u7b97\u6cd5\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a  \n\u6211\u4eec\u6839\u636e\u8fb9\u7684\u6743\u503c\u5c06\u6240\u6709\u8fb9\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u7528\u5e76\u67e5\u96c6\u53bb\u67e5\u8be2\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u5185\uff0c\u82e5\u5728\u540c\u4e00\u96c6\u5408\u5185\uff0c\u5219\u5220\u6389\u8fd9\u6761\u8fb9\uff0c\u82e5\u4e0d\u5728\u540c\u4e00\u7ed3\u5408\u5219\u52a0\u5165\u8fd9\u6761\u8fb9\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u7aef\u70b9\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\u3002  \n\u9644\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint n,m,q[6000];\n\nstruct lalala{\n\tint x,y,z,save;\n}a[210000];\n\nint mysort(lalala a,lalala b)\n{\n\treturn a.z < b.z;\n}\n\nint work(int x,int y)\n{\n\twhile(q[q[x]] != q[x]) q[x] = q[q[x]];\n\twhile(q[q[y]] != q[y]) q[y] = q[q[y]];\n\tif(q[x] == q[y]) return 1;\n\telse\n\t{\n\t\tq[q[y]] = q[x];\n\t\treturn 0;\n\t}\n}\n\nint main()\n{\n\tlong long ans = 0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) q[i]=i;\n\tfor(int i=1; i<=m; i++) \n\t{\n\t\tcin>>a[i].x>>a[i].y>>a[i].z;\n\t\tans += a[i].z;\n\t}\n\tsort(a+1,a+m+1,mysort);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(!work(a[i].x,a[i].y)) ans -= a[i].z;\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1550398451,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "P2820 \u5c40\u57df\u7f51 \u2014\u2014 \u6700\u5c0f\u751f\u6210\u6811"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528](hackblogs.home.blog)\n\n\u5bb9\u6613\u89c2\u5bdf\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053MST\uff0c\u6211\u4f7f\u7528\u4e86Prim\u6c42\u6700\u5c0f\u751f\u6210\u6811\u3002\n\nPirm\u7684\u6d41\u7a0b\u4e3a\uff1a\n\n```\n1.\u9009\u53d6\u4e00\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\u5e76\u5f00\u59cb\u904d\u5386\u3002\n2.\u627e\u5230\u8ddf\u8fd9\u4e2a\u6839\u8282\u70b9\u6709\u8fb9\u4e14\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\u3002\u5165\u961f\u3002\n3.\u5229\u7528\u8fd9\u4e2a\u70b9\u66f4\u65b0\u5176\u4ed6\u7684dis\u503c\n```\nPrim\u7b97\u6cd5\u6c42\u6700\u5c0f\u751f\u6210\u6811\u7684\u65f6\u5019\u548c\u8fb9\u6570\u65e0\u5173\uff0c\u548c\u9876\u70b9\u6811\u6709\u5173\uff0c\u6240\u4ee5\u9002\u5408\u6c42\u89e3\u7a20\u5bc6\u7f51\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\nPrim\u7b97\u6cd5\u7684\u6b65\u9aa4\u5305\u62ec\uff1a\n\n1. \u5c06\u4e00\u4e2a\u56fe\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5f52\u4e3a\u70b9\u96c6U\uff0c\u4e00\u90e8\u5206\u5f52\u4e3a\u70b9\u96c6V\uff0cU\u7684\u521d\u59cb\u96c6\u5408\u4e3a{V1}\uff0cV\u7684\u521d\u59cb\u96c6\u5408\u4e3a{ALL-V1}\u3002\n\n2. \u9488\u5bf9U\u5f00\u59cb\u627eU\u4e2d\u5404\u8282\u70b9\u7684\u6240\u6709\u5173\u8054\u7684\u8fb9\u7684\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u7136\u540e\u5c06\u5173\u8054\u7684\u8282\u70b9Vi\u52a0\u5165\u5230U\u4e2d\uff0c\u5e76\u4e14\u4eceV\u4e2d\u5220\u9664\uff08\u6ce8\u610f\u4e0d\u80fd\u5f62\u6210\u73af\uff09\u3002\n\n3. \u9012\u5f52\u6267\u884c\u6b65\u9aa42\uff0c\u76f4\u5230V\u4e2d\u7684\u96c6\u5408\u4e3a\u7a7a\u3002\n\n4. U\u4e2d\u6240\u6709\u8282\u70b9\u6784\u6210\u7684\u6811\u5c31\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n![](https://i.loli.net/2019/07/29/5d3e4383bea1d31198.png)\n\nPrim\u88f8\u9898\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x7fffffff/2,maxn=1000000;\nint n,m,ans,minn;\nint sum;\n//---\u90bb\u63a5\u77e9\u9635 \nint ljjz[2005][2005],d[10000005]/*\u8fb9\u957f*/,prt[10005]/*\u7236\u4eb2*/,vis[10000005];\nint dis[10000005];\n//---\nstruct EDGE{int next,to,v;}e[100005];\nint cnt,h[100005];\nvoid add(int x,int y)//\u524d\u5411\u661f \n{\n\te[++cnt].to=y;\n\te[cnt].next=h[x];\n\th[x]=cnt;\n\t//for(i=h[x];i;i=e[i].next){y=w[i].to......}\u904d\u5386x\u6307\u5411\u7684\u70b9y1\uff0cy2.... \n}\nvoid add2(int x,int y,int z)//\u524d\u5411\u661f \n{\n\te[++cnt].to=y;\n\te[cnt].next=h[x];\n\te[cnt].v=z;\n\th[x]=cnt;\n\t//for(i=h[x];i;i=e[i].next){y=w[i].to......}\u904d\u5386x\u6307\u5411\u7684\u70b9y1\uff0cy2.... \n}\n//----------->\n//\u4e71\u5165\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811(\u8d2a\u5fc3\u601d\u60f3)\nvoid Prim_ljjz(int v0)//\u9002\u7528\u4e8e\u70b9\u5c11\u7684\u56fe \n{\n\tint i,j,Min=0;\n\tfor(i=1;i<=n;i++)dis[i]=INF;\n\tdis[v0]=0;//\u521d\u59cb\n\tfor(i=1;i<=n;i++)//\u9009\u62e9n\u4e2a\u70b9\n\t{\n\t\tminn=INF;\n\t\tfor(j=1;j<=n;j++)//\u9009\u62e9\u8ddd\u79bb\u6700\u5c0f\u70b9\n\t\tif(minn>dis[j]&&vis[j]==0)\n\t\t{\n\t\t\tminn=dis[j];\n\t\t\tMin=j;\n\t\t}\n\t\tvis[Min]=1; \n\t\tans+=dis[Min];\t\n\t\tfor(j=1;j<=n;j++)//\u4fee\u6539dis\u6570\u7ec4 \n\t\tif(vis[j]==0&&ljjz[Min][j]<dis[j]&&ljjz[Min][j]!=0)dis[j]=ljjz[Min][j];\n\t}\n}\n//---------->\nint main()\n{\n\tint i,j;\n\tcin>>n>>m;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tadd(x,y);//\u524d\u5411\u661f\u5b58\u50a8\n\t\tadd2(x,y,z);//\u524d\u5411\u661f\u5b58\u50a8\n\t\tljjz[x][y]=ljjz[y][x]=z;//\u90bb\u63a5\u77e9\u9635\u5b58\u50a8 \n\t\tsum+=z;\n\t}\n\tPrim_ljjz(1);\n\tcout<<sum-ans;\n\treturn 0;\n}\n```",
        "postTime": 1546307585,
        "uid": 89490,
        "name": "AmadeusSG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u672c\u4eba\u662f\u849f\u84bb\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\uff0c\n\n\u8001\u9898\u76ee\uff0c\u4e0ekruskal\u7684\u6a21\u677f\u5f88\u76f8\u4f3c\uff0c\u5f88\u7b80\u5355\u7684\u4e00\u9898\uff0c\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\uff0c\u548c\u6700\u77ed\u7f51\u7edc\uff0c\u89e3\u6cd5\u51e0\u4e4e\u4e00\u81f4\uff0c\u53ea\u8981\u6539\u51e0\u4e2a\u70b9\u5c31\u884c\u4e86\uff0c\u5f88\u7b80\u5355\u7684\u4e00\u9898\uff0c\u8fde\u672c\u849f\u84bb\u90fd\u505a\u51fa\u6765\u4e86\uff0c\u563f\u563f\uff0c\u4ee5\u4e0b\u662f\u9119\u4eba\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u8981\u6284\u88ad\u54e6\uff0c\u4e0a\u4e00\u6b21\u4ea4\u9898\u89e3\u6ca1\u8fc7\u545c\u545c\u545c\u8bf4\u660e\u8fc7\u5c11\uff0c\u8fd9\u6b21\u7279\u5730\u5199\u8fd9\u4e48\u591a\uff0c\u5927\u5bb6\u53ef\u4ee5\u4ed4\u7ec6\u770b\u770b\u54e6\n\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iomanip>\n#include<iostream>//\u867d\u7136\u5199\u8fd9\u4e48\u591a\u6ca1\u4ec0\u4e48\u7528\u4f46\u662f\u719f\u6089\u719f\u6089\u5934\u6587\u4ef6\u5457\u4e0d\u60f3\u5199\u53ef\u4ee5\u7528<bits/stdc++.h>,\u4e07\u80fd\u7684\u5934\u6587\u4ef6 \nusing namespace std;\nint a[10001][3],fa[101];//\u8981\u8f93\u5165\u4e09\u4e2a\u6570\u561b\uff0c\u5c31\u8fd9\u6837\u8bbe\u5457\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e09\u4e2a\u4e00\u7ef4\u7684\uff0c\u6216\u8005\u5b9a\u4e09\u4e2a\u53d8\u91cf \nint x,tot,k=0;//k\u4e3a\u6211\u8bbe\u7684\u8ba1\u6570\u5668 \nint myfind(int poi);\nvoid mysort(int l,int r);//\u624b\u5199\u7684\u5feb\u6392\u54e6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528sort\uff0c\u518d\u6253\u4e00\u4e2a\u51fd\u6570void cmp\uff08\uff09{return a<b;},\u5c31\u53ef\u4ee5\u6392\u5e8f\u4e86//kruskal\u4e00\u5b9a\u8981\u6392\u5e8f\u5566\uff0c\u522b\u5fd8\u8bb0\u4e86\nint main()\n{ \n    int i,j,n,m,ta,tb,mitot=0,matot=0;\n    cin>>n>>m;//\u8f93\u5165 //\u6709\u52a0\u5feb\u7684\u65b9\u6cd5   ios::sync_with_stdio(false);\u5927\u81f4\u901f\u5ea6\u4e0escanf\u548cprintf\u7684\u901f\u5ea6\u5dee\u4e0d\u591a\n    for(i=1;i<=m;i++) \n    {\n       cin>>a[i][1]>>a[i][2]>>a[i][0];//\u8f93\u5165\n       matot+=a[i][0];//\u6240\u6709\u6743\u503c\u4e4b\u548c \n    }\n    for(i=1;i<=n;i++)fa[i]=i;//\u521d\u59cb\u5316 \n    mysort(1,m);//\u624b\u5199\u5feb\u6392 \n    k=0;//\u4ece0\u5f00\u59cb\u8bb0\u6570\u5457 \n    for(i=1;k!=n-1;i++)//kruskal\u7b97\u6cd5\u5f00\u59cb\u4e86\uff0c\u5c31\u4e0d\u8be6\u89e3\u4e86 \n    {\n        ta=myfind(a[i][1]);\n        tb=myfind(a[i][2]);\n        if(ta!=tb)//\u5e76\u67e5\u96c6\u7684\u4f7f\u7528\uff0c\u5e94\u8be5\u90fd\u61c2\u5427 \n        {\n            fa[tb]=ta;\n            k++;//\u8ba1\u6570 \n            mitot+=a[i][0];//\u751f\u6210\u6811\u7684\u6743\u503c\u4e4b\u548c \n        }\n    }\n    cout<<matot-mitot<<endl; \n    return 0;\n}\nint myfind(int poi)//\u5e76\u67e5\u96c6 \n{\n    if(fa[poi]!=poi)fa[poi]=myfind(fa[poi]);//\u8def\u5f84\u538b\u7f29\uff0c\u4f18\u5316\u7684\u6838\u5fc3\uff0c\u5f53\u7136\u5404\u4f4d\u4e5f\u53ef\u4ee5\u7528\u975e\u9012\u5f52\u7684\u65b9\u6cd5\u505a\uff0c\u4e0d\u8fc7\u6162\u4e00\u70b9\uff0c\u590d\u6742\u5ea6\u5927\u4e00\u70b9\n    return fa[poi];\n}\nvoid mysort(int l,int r)//\u624b\u5199\u5feb\u6392\uff0c\n{\n    int i,j,t,m;\n    i=l;j=r;\n    m=a[(l+r)/2][0];//\u7c7b\u4f3c\u5206\u6cbb\uff0c\u5c06\u5e8f\u5217\u4ece\u4e2d\u95f4\u5206\u9694 \n    do\n    {\n        while(a[i][0]<m)i++;//\u8fd9\u4e2a\u5730\u65b9\u5c31\u4e0d\u7528\u8bb2\u4e86\u5427\uff0c\u5de6\u8fb9\u5bfb\u6bd4\u4e2d\u95f4\u5927\u7684\u6570\u53f3\u8fb9\u5219\u5bfb\u5c0f\u6570 \n        while(a[j][0]>m)j--;//\u53f3\u8fb9\u5219\u5bfb\u5c0f\u6570\n        if (i<=j)\n```\n{//\u82e5\u627e\u5230\u76ee\u6807\u4e0d\u4e00\u81f4\u7684\u5c31\u4ea4\u6362\n\n```cpp\n            t=a[i][1];a[i][1]=a[j][1];a[j][1]=t;\n            t=a[i][2];a[i][2]=a[j][2];a[j][2]=t;\n            t=a[i][0];a[i][0]=a[j][0];a[j][0]=t;\n            i++;j--;//\u7ee7\u7eed\u627e \n        }\n    }\n    while(i<=j);//\u4e00\u5b9a\u8981\u5230\u7b49\u4e8e\uff0c\u4e0d\u8981\u5fd8\u8bb0\u4e86\u6709\u7684\u65f6\u5019\u4f1a\u641e\u6781\u54c1\u6570\u636e\u4e0d\u5199\u7b49\u4e8e\u4f1a\u5403\u4e8f\u7684\u54e6\n    if(i<r)mysort(i,r);\n    if(l<j)mysort(l,j);//\u9012\u5f52\u641c\u7d22 \n    return;\n}//\u6ca1\u4e86\uff0c\u5404\u4f4d\u540c\u5b66\u4eec\uff0cnoip\u52a0\u6cb9\u54e6\uff0c\u4e89\u53d6\u90fd\u62ff\u5956\uff0cfighting\uff0c\n```",
        "postTime": 1504016509,
        "uid": 50269,
        "name": "\u9f98\u9f98\u9f98\u9f98\u9f98\u9f98",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u7528\u603b\u957f\u5ea6\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u957f\u5ea6\uff0c\u7528prim\u7b97\u6cd5\u5c31\u597d\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\nusing namespace std;\nint main(){\n    int n,m,minn,i,j,k,t1,t2,t3,add=0;//add\u8bb0\u5f55\u539f\u672c\u7684\u603b\u957f\u5ea6 \n    int e[1000][1000],dis[1000],book[1000]={0};\n    int inf=99999999;\n    int count=0,sum=0;//count\u7528\u6765\u8bb0\u5f55\u9876\u70b9\u4e2a\u6570\uff0csum\u7528\u6765\u50a8\u5b58\u6700\u5c0f\u751f\u6210\u6811\u4e4b\u548c \n    cin>>n>>m;\n    for(i=1;i<=n;i++){\n        for(j=1;j<=n;j++){\n            if(i==j)\n             e[i][j]=0;\n             else e[i][j]=inf;\n             \n         }\n    }\n\n    for(i=1;i<=m;i++){\n        cin>>t1>>t2>>t3;\n        //\u6ce8\u610f\u662f\u65e0\u5411\u56fe\uff0c\u4e92\u8054\u7f51\u662f\u76f8\u901a\u7684\u3002 \n        e[t1][t2]=t3;\n        e[t2][t1]=t3;\n        add+=t3;//\u8fd9\u91cc\u8bb0\u5f55\u957f\u5ea6 \n    }\n    for(i=1;i<=n;i++)\n    dis[i]=e[1][i];//\u521d\u59cb\u5316dis\u6570\u7ec4\uff0c\u8fd9\u91cc\u662f1\u53f7\u9876\u70b9\u5230\u5404\u4e2a\u9876\u70b9\u7684\u521d\u59cb\u8ddd\u79bb\u3002 \n    \n    //prim\u7b97\u6cd5\u5f00\u59cb \n    \n    book[1]=1;//\u7528book\u6807\u8bb0\u4e00\u4e2a\u9876\u70b9\u662f\u5426\u5df2\u7ecf\u52a0\u5165\u751f\u6210\u6811\uff1b \n    count++;\n    while(count<n){\n        minn=inf;\n        for(i=1;i<=n;i++){\n            if(book[i]==0&&dis[i]<minn)\n            {\n                minn=dis[i];\n                j=i;\n            }\n        }\n        book[j]=1;\n        count++;\n        sum+=dis[j];\n        //\u626b\u63cf\u5f53\u524d\u9876\u70b9j\u6240\u6709\u7684\u8fb9\uff0c\u518d\u4ee5j\u4e3a\u4e2d\u95f4\u70b9\uff0c\u66f4\u65b0\u751f\u6210\u6811\u5230\u6bcf\u4e00\u4e2a\u975e\u6811\u9876\u70b9\u7684\u8ddd\u79bb \n        for(k=1;k<=n;k++){\n            if(book[k]==0&&dis[k]>e[j][k])\n            dis[k]=e[j][k];\n        }\n    }\n    cout<<add-sum;\n    return 0;\n}\n/*\n5 5\n1 2 8\n1 3 1\n1 5 3\n2 4 5\n3 4 2\n*/\n```",
        "postTime": 1503974624,
        "uid": 49684,
        "name": "UchihaItachi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e00\u9053\u7ecf\u5178\u7684\u5165\u95e8\u9898\n\n\u76f4\u63a5\u628a\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u7b97\u51fa\u6765\uff0c\u7136\u540e\u6574\u4e2a\u56fe\u8fb9\u7684\u6743\u503c\u4e4b\u548c-\u6700\u5c0f\u751f\u6210\u6811\u6743\u503c\u4e4b\u548c=\u7b54\u6848\u3002\n\n\u6211\u7528\u7684\u662fprim\u7b97\u6cd5\u7684\u5806\u4f18\u5316\n\n\u5173\u4e8e\u5efa\u56fe\u65b9\u9762\uff0c\u6211\u4e0d\u4e60\u60ef\u7528\u6307\u9488\u7684\u90bb\u63a5\u8868\uff0c\u4ece\u6765\u90fd\u7528\u7684\u662f\u6570\u7ec4\u4e0b\u6807**\uff08\u4f46\u662f\u542c\u8bf4\u6307\u9488\u7684\u5e38\u6570\u8981\u5feb\u4e00\u4e9b\uff1f\uff09**\u3002\u6240\u4ee5\u6211\u7684\u5806\u91cc\u9762\u5b58\u7684\u662f\u8fb9\u7684\u4e0b\u6807\uff0c\u4e0b\u6807\u6765\u4e0b\u6807\u53bb\u7684\u6709\u70b9\u522b\u626d\uff0c\u5dee\u70b9\u8fd8\u641e\u9519\u4e86\u2026\u2026\n\n\u4e0d\u8fc7\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0cn <= 100\u7684\u6570\u636e\u4e5f\u592a\u5f31\u4e86\u70b9\u5427\u2026\u2026\u597d\u50cf\u4e0d\u7528\u5806\u4f18\u5316\u968f\u968f\u4fbf\u4fbf\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u7684prim\u5c31\u53ef\u4ee50msAC\u554a\uff01\n\n\u4f46\u662f\u6211\u4eec\u65e2\u7136\u6709\u8fd9\u4e48\u597d\u7684\u4e00\u4e2a\u88f8\u9898\uff0c\u90a3\u4e48\u591a\u7ec3\u7ec3\u624b\u8fd8\u662f\u6ca1\u6709\u574f\u5904\u7684\uff01\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <stdio.h>\n#define INF 987654321\n#define MAXM 400\nstruct edge {\n    int s, e, v; \n    int next; \n}E[2*MAXM*MAXM]; \nint G[MAXM]; \nint cnt; \ninline void insert(int s, int e, int v) {\n    E[++cnt].s = s, E[cnt].e = e, E[cnt].v = v, E[cnt].next = G[s], G[s] = cnt; \n}\nstruct heap {\n    #define SWAP(x, y) (x ^= y, y ^= x, x ^= y)\n    #define MAXN MAXM\n    int data[MAXN], cnt; //\u6ce8\uff1a\u6b64\u5904\u7684data[]\u4ee3\u8868\u7684\u662fE[]\u7684\u4e0b\u6807 \n    void push(int p) {\n        data[++cnt] = p; \n        int i = cnt; \n        while(i && E[data[i]].v < E[data[i>>1]].v) {\n            SWAP(data[i], data[i>>1]); \n            i = i>>1; \n        }\n    }\n    int pop() {\n        int p = data[1], i = 1, j; \n        data[1] = data[cnt--]; \n        while(i<<1 <= cnt) {\n            if(i<<1 == cnt || E[data[i<<1]].v < E[data[(i<<1)|1]].v) j = i<<1; \n            else j = (i<<1)|1; \n            if(E[data[i]].v > E[data[j]].v) {\n                SWAP(data[i], data[j]); \n                i = j; \n            }\n            else break; \n        }\n        return p; \n    }\n    void build() {\n        cnt = 0; \n    }\n```\n#undef MAXN\n#undef SWAP\n\n```cpp\n}; \nint N, ans; \nvoid prim() {\n    heap H; \n    H.build(); \n    int p, n, i, j, A[MAXM] = {0, 1, 0}; \n    for(i = G[1]; i != 0; i = E[i].next)\n        H.push(i); \n    for(j = 2; j <= N; j++) {\n        for(p = H.pop(); A[E[p].e] == 1; p = H.pop()); \n        ans += E[p].v; \n        n = E[p].e; \n        A[n] = 1; \n        for(i = G[n]; i != 0; i = E[i].next) \n            if(A[E[i].e] == 0) \n                H.push(i); \n    }\n}\nint main() {\n    int s, e, v, i, j, S, tot = 0; \n    scanf(\"%d%d\", &N, &S); \n    for(i = 1; i <= S; i++) {\n        scanf(\"%d%d%d\", &s, &e, &v); \n        tot += v; \n        insert(s, e, v); \n        insert(e, s, v); \n    }\n    prim(); \n    printf(\"%d\", tot-ans); \n}\n\n```",
        "postTime": 1499101175,
        "uid": 22729,
        "name": "\u4ec7\u54e5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u7528\u7684\u514b\u9c81\u65af\u5361\u5c14\u52a0\u524d\u5411\u661f\u5b58\u50a8 \u5f53\u7136\u5e76\u67e5\u96c6\u5fc5\u987b\u5f97\u4f1a\n\n\u56e0\u4e3a\u8fb9\u6743\u8d8a\u5c0f\u8d8a\u901a\u7545 \u6240\u4ee5\u6211\u4eec\u8981\u5c3d\u91cf\u7684\u53bb\u6389\u5927\u7684\u8fb9\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u627e\u51fa\u6700\u5c0f\u751f\u6210\u6811\u4e4b\u540e**\u7528\u56fe\u7684\u603b\u8fb9\u6743\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u8fb9\u6743**\n\n\u8bbez\u662f\u6211\u4eec\u8f93\u5165\u7684\u6bcf\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\n\n\u7528\u4e00\u4e2alen+=z\u5f97\u51fa\u56fe\u7684\u603b\u8fb9\u6743\n\n\u7136\u540e\u7528\u4e00\u4e2aans+=\u6bcf\u6b21\u9009\u51fa\u6765\u7684 \u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u8fb9\u7684\u8fb9\u6743\n\n\u5f53\u5faa\u73af\u5230n-1\u6b21\u7684\u65f6\u5019 \u7531\u6811\u7684\u6027\u8d28\u53ef\u77e5 \u6211\u4eec\u5df2\u7ecf\u9009\u5b8c\u4e86\u6700\u5c0f\u751f\u6210\u6811\n\n\u7136\u540e\u8df3\u51fa\u5faa\u73af \u8f93\u51fa**len-ans**\u5373\u53ef\n\n\u5176\u4ed6\u6ce8\u91ca\u90fd\u5728\u4ee3\u7801\u4e2d\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define size 100001\nstruct point{\n    int x;\n    int y;\n    int z;\n};\npoint a[size];\nint father[size];\nint n,m;\nint total,ans,num,len;\ninline void output()\n{\n    cout<<len-ans<<endl;\n}\ninline void add(int from,int to,int dis)            //\u524d\u5411\u661f\u5b58\u50a8\n{\n    a[++num].x=from;\n    a[num].y=to;\n    a[num].z=dis;\n}\ninline int find(int x)     //\u8def\u5f84\u538b\u7f29\u627e\u6839\n{\n    if(father[x]!=x){\n        father[x]=find(father[x]);\n    }\n    return father[x];\n}\ninline void unionn(int x,int y)       //\u5e76\u96c6\n{\n    int xx=find(x);\n    int yy=find(y);\n    father[yy]=xx;\n}\nbool cmp(point a,point b)      //\u81ea\u5b9a\u4e49sort \u6309\u7167\u8fb9\u6743\u957f\u5ea6\u6392\u5e8f \u5bfb\u627e\u6700\u5c0f\u751f\u6210\u6811\n{\n    return a.z<b.z;\n}\ninline void work()\n{\n    sort(a+1,a+num+1,cmp);\n    for(int i=1;i<=num;i++){\n        int xx=a[i].x;\n        int yy=a[i].y;\n        if(find(xx)!=find(yy)){        //\u5df2\u7ecf\u6392\u597d\u5e8f\u540e \u5c06\u4e24\u4e2a\u5355\u72ec\u7684\u96c6\u5408\u5408\u5e76\n            unionn(xx,yy);\n            total++;        //\u8bb0\u5f55\u8fde\u4e86\u51e0\u6761\u8fb9\u4e86\n            ans+=a[i].z;\n            if(total==n-1){\n                break;\n            }\n        }\n    }\n}\ninline void input()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){       //\u521d\u59cb\u5316father\u6570\u7ec4 \u8ba9\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5148\u81ea\u5df1\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u96c6\u5408\n        father[i]=i;\n    }\n    int x,y,z;\n    for(int i=1;i<=m;i++){\n        cin>>x>>y>>z;\n        add(x,y,z);\n        add(y,x,z);         //\u53cc\u5411 \u6b63\u53cd\u5b58\u4e24\u6b21\n        len+=z;\n    }\n}\nint main()\n{\n    input();\n    work();\n    output();\n}\n```\n\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811 \u7a0d\u5fae\u6539\u4e00\u4e9b\u5730\u65b9\u5c31\u597d\u4e86\n\n//COYG",
        "postTime": 1495612979,
        "uid": 27394,
        "name": "ars4me",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u89e3\u51b3\u56de\u8def\u5c31\u662f\u628a\u591a\u4f59\u7684\u7f51\u7ebf\u62d4\u6389 \u53cd\u6b63\u53ea\u8981\u662f\u8054\u901a\u7684\u6ca1\u6709\u8282\u70b9\u5c11\u6389\n\n\n\u8fd9\u9053\u9898\u5c31\u662f\u975e\u5e38\u7ecf\u5178\u7684\u4e00prim\u7b97\u6cd5\n\n\u76f4\u63a5\u627e\u6700\u5c0f\u751f\u6210\u6811\u5c31\u597d\u4e86 \u7136\u540e\u518d\u7b97\u4e00\u4e0b\u8d39\u7528\n\n\u6ce8\u610f\uff01\u5176\u4e2d\u503c\u8d8a\u5c0f\u8d8a\u7545\u901a\uff08\u7535\u963b\u4e00\u6837\u7684\u73a9\u610f\uff09 \u53ea\u8981\u8ba9\u6240\u6709\u90fd\u8fde\u8fdb\u53bb\u5c31\u53ef\u4ee5\u4e86\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528Kruskal\uff08\u6211\u8fd8\u6ca1\u5b66\u8fd9\u73a9\u610f \u542c\u8bf4\u662f\u5e76\u67e5\u96c6\uff09\n\n\n\u7b97\u6cd5\u63cf\u8ff0\n\n1).\u8f93\u5165\uff1a\u4e00\u4e2a\u52a0\u6743\u8fde\u901a\u56fe\uff0c\u5176\u4e2d\u9876\u70b9\u96c6\u5408\u4e3aV\uff0c\u8fb9\u96c6\u5408\u4e3aE\uff1b\n\n2).\u521d\u59cb\u5316\uff1aVnew = {x}\uff0c\u5176\u4e2dx\u4e3a\u96c6\u5408V\u4e2d\u7684\u4efb\u4e00\u8282\u70b9\uff08\u8d77\u59cb\u70b9\uff09\uff0cEnew = {},\u4e3a\u7a7a\uff1b\n\n3).\u91cd\u590d\u4e0b\u5217\u64cd\u4f5c\uff0c\u76f4\u5230Vnew = V\uff1a\n\na.\u5728\u96c6\u5408E\u4e2d\u9009\u53d6\u6743\u503c\u6700\u5c0f\u7684\u8fb9<u, v>\uff0c\u5176\u4e2du\u4e3a\u96c6\u5408Vnew\u4e2d\u7684\u5143\u7d20\uff0c\u800cv\u4e0d\u5728Vnew\u96c6\u5408\u5f53\u4e2d\uff0c\u5e76\u4e14v\u2208V\uff08\u5982\u679c\u5b58\u5728\u6709\u591a\u6761\u6ee1\u8db3\u524d\u8ff0\u6761\u4ef6\u5373\u5177\u6709\u76f8\u540c\u6743\u503c\u7684\u8fb9\uff0c\u5219\u53ef\u4efb\u610f\u9009\u53d6\u5176\u4e2d\u4e4b\u4e00\uff09\uff1b\n\nb.\u5c06v\u52a0\u5165\u96c6\u5408Vnew\u4e2d\uff0c\u5c06<u, v>\u8fb9\u52a0\u5165\u96c6\u5408Enew\u4e2d\uff1b\n\n4).\u8f93\u51fa\uff1a\u4f7f\u7528\u96c6\u5408Vnew\u548cEnew\u6765\u63cf\u8ff0\u6240\u5f97\u5230\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u534e\u4e3d\u4e3d\u7684\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\nvar g:array[1..101,1..101] of longint; \u56fe\u7684\u90a3\u73a9\u610f g[i,j]\u8bb0\u5f55\u7b2ci\u4e2a\u8282\u70b9\u5230\u7b2cj\u4e2a\u8282\u70b9\u7684\u6743\u503c\n\n\n\n```cpp\n    b:array[1..101] of boolean;   \u662f\u5426\u8bbf\u95ee\n    d:array[0..1000] of longint;\n    i,j,k,m,n,total,min,max,sum:longint;      \u4e00\u5927\u5806\u7684\u6570\u7ec4\u81ea\u5df1\u60f3\nbegin\n    readln(n,k);\n    for total:=1 to k do\n    begin\n      readln(i,j,m);\n      g[i,j]:=m; g[j,i]:=m;   \u5343\u4e07\u4e0d\u8981\u5fd8\u4e86j\u5230i\u4e5f\u662f\u8fd9\u4e2a\u8ddd\u79bb \u6211\u539f\u672c\u5fd8\u8bb0\u8fd9\u73a9\u610f\u7136\u540e\u542c\u53d6WA\u58f0\u4e00\u7247\uff08\u5b66\u6821\u7684CENA\uff09\n      inc(max,m);    \u603b\u7684\u503c\n    end;\n    total:=0;\n    filldword(d,sizeof(d)>>2,maxlongint>>1);    maxlongint div 2\u6bd4\u8f83\u4fdd\u9669\u7206\u4e86\u5c31\u5c34\u5c2c\u4f60\u8bf4\u5bf9\u5427 \u5173\u4e8efilldword\u7684\u89e3\u91ca\u4e0b\u9762\u8d34\u51fa\n    fillchar(b,sizeof(b),true);\n    d[1]:=0;\n    for i:=1 to n do\n    begin\n      min:=maxlongint;  \u5c31\u8fd9\u6837\u4e0d\u591a\u8bf4\n      for j:=1 to n do\n      if b[j] and (d[j]<min) then \u6ca1\u8bbf\u95ee\u8fc7\u4e14\u6bd4\u5f53\u524d\u8981\u5c0f\u90a3\u4e48\u5c31\u6362\n      begin\n        min:=d[j];\n    k:=j;\n      end;\n      b[k]:=false;  \u5df2\u8bbf\u95ee\n      inc(sum,max);   \u52a0\u4e00\u4e0b\u5ef6\u5e74\u76ca\u5bff\n      for j:=1 to n do\n       if b[j] and (g[k,j]<d[j]) and (g[k,j]<>0) then d[j]:=g[k,j];     \u5982\u679c\u8fd9\u8fb9g[k,j]<>0\u90a3\u4e48\u4f1a\u5d29\u7684\u56e0\u4e3a\u539f\u672c\u5c31\u662f0 \u554a\n   end;\n   writeln(max-sum);   \nend.\n```\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014PS\uff1a\u6709bug\u8981\u81ea\u5df1\u6539\uff081\u5904\uff09\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u534e\u4e3d\u4e3d\u7684\u5206\u5272\u7ebf\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nfilldword\uff1a\n\nfillword(a , b ,c );\n\n\u4ee5\u5730\u5740a\u5f00\u59cb,word\u7684\u957f\u5ea6(2\u4e2a\u5b57\u8282)\u4e3a\u6b65\u957f \u7684 \u8fde\u7eedb\u4e2a\u5185\u5b58\u5757\u8fdb\u884c\u8d4b\u503cc.\n\n\u867d\u7136a\u53ef\u4ee5\u662f\u4efb\u4f55\u7684\u53d8\u91cf\u5730\u5740,\u4f46\u662f\u4e00\u822c\u90fd\u662f\u7528\u5728\u6570\u7ec4\u4e0a.\n\n\u6700\u5e38\u7528\u7684\u65b9\u5f0f,\u5c31\u662f\u586b\u5145\u4e00\u4e2ainteger\u7684\u6570\u7ec4\n\n\u6bd4\u5982\u5bf9\u4e8e\n\na:array[1..100]of integer;\n\n\u53ef\u4ee5\nfillchar(a,100,1234);\n\n\u7b49\u6548\u4e8e\n\nfor i:=1 to 100 do a[i]:=1234;\n\n\u5f53\u7136\u8fd9\u91cc\u76841234\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\u800c\u5df2\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u5b57.\n\n\u800c\u6570\u7ec4\u4e5f\u672a\u5fc5\u662finteger\u7c7b\u578b\u7684,\u5bf9\u4e8elongint\u4e00\u6837\u53ef\u4ee5,\u4e0d\u8fc7\u5bf9longint\u8d4b\u503c\u7684\u8bdd,\u7531\u4e8e\u628a\u4e24\u4e2a(4\u957f\u5ea6)\u7684integer\u6765\u586b\u5145\u4e00\u4e2alongint,\u6240\u4ee5\u6570\u5b57\u4f1a\u51fa\u9519,\u4e0d\u518d\u662fc\u4e86.\n\n\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u5f53\u521d\u5199\u7684\u65f6\u5019\u628a\u4f8b\u9898\u6a21\u6539\u4e00\u756a\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n",
        "postTime": 1489387762,
        "uid": 28595,
        "name": "Hydroxyl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u6700\u5c0f\u751f\u6210\u6811\\_\u6c34\u9898\\_\n\n\u5148\u7528\u5f04\u4e00\u904d\u6700\u5c0f\u751f\u6210\u6811\uff0c\u518d\u7528\u672c\u6765\u7684\u603b\u957f\u5ea6\u6765\u51cf\u53bb\u6700\u5c0f\u751f\u6210\u6811\u7684\u957f\u5ea6\\_\n\n\u53ea\u8981\u628a\u90a3\u9053\u3010\u6a21\u677f\u3011\u6700\u5c0f\u751f\u6210\u6811\u6539\u4e00\u6539\u5c31\u597d\u4e86\n\n\n\n\n```cpp\nvar\na:array[0..5000,0..5000] of longint;\nb:array[0..5000] of boolean;\nf:array[0..5000] of longint;\nx,y,z,n,m,i,j,k,min,max,ans,num:longint;\nbegin\nfillchar(a,sizeof(a),127);\nfillchar(f,sizeof(f),127);\nread(n,m);\nfor i:=1 to m do\nbegin\nread(x,y,z);\nmin:=min+z;//\u8bb0\u5f55\u539f\u6765\u7684\u603b\u957f\u5ea6\nif a[x,y]>z then\nbegin\na[x,y]:=z;\na[y,x]:=a[x,y]\nend;\nend;\nf[1]:=0;\n```\n{}\u6700\u5c0f\u751f\u6210\u6811}\n\n\n\n```cpp\nwhile true do\nbegin\nmax:=maxlongint div 3;\nfor i:=1 to n do\nif (f[i]<max) and (b[i]=false) then\nbegin\nmax:=f[i];\nnum:=i;\nend;\nif max=maxlongint div 3 then break;\nb[num]:=true;\nk:=k+max;\nfor i:=1 to n do\nif (f[i]>a[num,i]) and (b[i]=false) then\nf[i]:=a[num,i];\nend;\nwrite(min-k);\nend.\n```",
        "postTime": 1478841868,
        "uid": 6847,
        "name": "21336dxq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "\u6211\u8981\u54ed\u4e86\uff0c\u4ea4\u4e863\u904d\u90fd\u6ca1\u53d1\u73b0k\u5199\u6210n\u4e86\u3002\n\n\u5982\u679c\u6b63\u9762~~\u809b~~\u5199\u8fd9\u9053\u9898\uff0c\u6709\u70b9\u96be\u4e0b\u624b\uff0c\u90a3\u4e48\u5c31\u5012\u7740\u60f3\uff0c\u628a\u6240\u6709\u5c40\u57df\u7f51\u5185\u7684\u7535\u8111\u8fde\u901a\u5c31\u662f\u6c42\u6700\u5c0f\u751f\u6210\u6811\u554a\uff0c\u7136\u540e\u5176\u4ed6\u6240\u6709\u6ca1\u7528\u7684\u8fb9\u4e4b\u548c\u5c31\u662fans\u554a\u3002\u6b64\u9898end\u3002\u4e0b\u9762\u662f\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u3002\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=200;\nstruct edge{int u;int v;int w;};\nedge es[10000];\nint n,k,p[maxn];\nint ans=0;\nvoid read(int &n){\n    n=0;int f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    n=n*f;\n    return;\n}\nvoid write(int n){\n    if(n<0){\n        putchar('-');\n        n=0-n;\n    }\n    if(n>=10) write(n/10);\n    putchar((n % 10)+'0');\n    return;\n}\nint find(int x){\n    return x==p[x] ? x:p[x]=find(p[x]);\n}\nbool cmp(const edge &x,const edge &y){\n    return x.w<y.w;\n}\nint main(){\n    read(n);read(k);\n    for(int i=1;i<=n;i++) p[i]=i;\n    for(int i=1;i<=k;i++){\n        int u,v,w;\n        if(w==0) continue;\n        read(u);read(v);read(w);\n        es[i].u=u;es[i].v=v;es[i].w=w;\n        ans+=w;\n    }\n    sort(es+1,es+k+1,cmp);\n    for(int i=1;i<=k;i++){\n        int x=find(es[i].u);\n        int y=find(es[i].v);\n        if(x!=y){\n            ans-=es[i].w;\n            p[x]=y;\n        }\n    }    \n    write(ans);\n    return 0;\n}\n```",
        "postTime": 1471063168,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "## \u9898\u76ee\u601d\u8def\uff1a\n- \u5c06**\u6240\u6709\u7ebf\u8def**\u6309**\u6700\u5c0f\u751f\u6210\u6811**\u65b9\u6cd5\u627e\u51fa\u8fde\u63a5\u7684**\u6700\u4f18\u65b9\u6cd5\u3002**\uff08\u6d41\u7545\u503c\u5373\u4e3a\u8def\u7a0b\uff09\n- \u8bb0\u5f55\u6240\u6709\u7ebf\u8def\u7684\u6d41\u7545\u503c\u603b\u548c\u4e0e\u6700\u4f18\u7ebf\u8def\u7684\u6d41\u7545\u503c\u603b\u548c\uff0c**\u4e24\u8005\u4e4b\u5dee\u5373\u4e3a\u6240\u6c42\u3002**\n## AC\u4ee3\u7801\uff1a\n**<\u8bf7\u8ba4\u771f\u9605\u8bfb\u6bcf\u4e00\u4e2a\u6ce8\u91ca\u3002>**\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,f[5010],s,sum;\nint zqq(int k){\n\tif(f[k]==k)return k;\n\treturn f[k]=zqq(f[k]);//\u5e76\u67e5\u96c6\u57fa\u672c\u4ee3\u7801\u3002\n}\nstruct jd{\n\tint a,b,c;//\u4e24\u53f0\u8ba1\u7b97\u673a\u7f16\u53f7\uff0c\u6d41\u7545\u503c\u3002\n}jdd[200001];//\u6bcf\u6761\u7ebf\u8def\u3002\nbool qwq(jd x,jd y){\n\treturn x.c<y.c;//\u7ebf\u8def\u6309\u6d41\u7545\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n}\nint main(){\n\tcin>>n>>m;//\u8ba1\u7b97\u673a\u603b\u91cf\u548c\u7ebf\u8def\u603b\u91cf\u3002\n\tfor(int i=0;i<n;i++)\n\t\tf[i]=i;//\u5e76\u67e5\u96c6\u57fa\u672c\u4ee3\u7801\u3002\n\tfor(int i=0;i<m;i++){\n\t\tcin>>jdd[i].a>>jdd[i].b>>jdd[i].c;//\u5177\u4f53\u542b\u4e49\u8bf7\u770b\u7ed3\u6784\u4f53\u5b9a\u4e49\u3002\n\t\tsum=sum+jdd[i].c;//\u5373\u6240\u6709\u7ebf\u8def\u6d41\u7545\u503c\u603b\u548c\u3002\n\t}\n\tsort(jdd,jdd+m,qwq);//\u6309\u6d41\u7545\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\tfor(int i=0;i<m;i++)\n\t\tif(zqq(jdd[i].a)!=zqq(jdd[i].b)){\n\t\t\tf[zqq(jdd[i].a)]=zqq(jdd[i].b);//\u6700\u5c0f\u751f\u6210\u6811\u57fa\u672c\u4ee3\u7801\u3002\n\t\t\ts=s+jdd[i].c;//\u8ba1\u7b97\u6700\u4f18\u7ebf\u8def\u6d41\u7545\u503c\u3002\n\t\t}\n\tcout<<sum-s;//\u8f93\u51fa\u6240\u6709\u7ebf\u8def\u6d41\u7545\u503c\u4e0e\u6700\u4f18\u7ebf\u8def\u6d41\u7545\u503c\u7684\u5dee\u3002\n    return 0;//\u5b8c\u7f8e\u7ed3\u675f\u3002\n}\n```\n### \u6c42\u7ba1\u7406\u901a\u8fc7QWQ\u3002",
        "postTime": 1590796752,
        "uid": 179601,
        "name": "\u68a6\u6e38\u7684\u5c0f\u96ea\u7403",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "# \u601d\u8def\n\n1. \u9898\u76ee\u8981\u6c42\u4e0d\u80fd\u5728\u56fe\u4e2d\u5f62\u6210\u73af\uff0c\u6240\u4ee5\u53bb\u9664\u7f51\u7ebf\u6700\u540e\u7684\u7ed3\u679c\u5e94\u8be5\u662f\u5f62\u6210\u4e86**\u4e00\u68f5\u6811**\uff1b\n\n2. \u9898\u76ee\u7684\u7b54\u6848\u662f\u53bb\u9664\u7f51\u7ebf\u7684\u6700\u5927\u503c\uff0c\u5373\u53bb\u9664\u8fb9\u6743\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u4fdd\u7559\u7684\u7f51\u7ebf\u5f62\u6210\u7684\u5e94\u8be5\u662f\u4e00\u4e2a**\u6700\u5c0f\u751f\u6210\u6811**\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u91c7\u7528**$Kruskal$+\u5e76\u67e5\u96c6**\u7684\u65b9\u6cd5\u751f\u6210\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5e76\u7528\u4e00\u4e2a$bool$\u6570\u7ec4\u6807\u8bb0\u5df2\u7ecf\u4f7f\u7528\u7684\u8fb9\uff0c\u6700\u540e\u518d\u7edf\u8ba1\u672a\u4f7f\u7528\u7684\u8fb9\u6743\u4e4b\u548c\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n//\u4ee5\u4e0a\u662f\u5934\u6587\u4ef6\n\nstruct Node{\n\tint f,t,w;//f,t\u4e3a\u7f51\u7ebf\u4e24\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\uff0cw\u4e3a\u6743\u503c\n\tbool operator<(Node a)const{\n\t\treturn this->w<a.w;\n\t}//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6309w\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n};\n\nbool f[200001];//\u7528\u4e8e\u6807\u8bb0\u7684bool\u6570\u7ec4\nint n,k,ID[101];//ID[]\u4e3a\u5e76\u67e5\u96c6\u7684father\u6570\u7ec4\nlong long ans;//\u7ed3\u679c\uff0c\u8fb9\u6743\u4e4b\u548c\nNode r[200001];//\u8fb9\n\nvoid contact(int,int);//\u5e76\u67e5\u96c6\u7684\u5408\u5e76\u64cd\u4f5c\nbool search(int,int);//\u8fd4\u56de\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\nint find(int);\n\nint main(void){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;i++)\n\t\tID[i]=i;\n\tfor(int i=1;i<=k;i++)\n\t\tscanf(\"%d%d%d\",&r[i].f,&r[i].t,&r[i].w);//\u8bfb\u5165\n\tstd::sort(r+1,r+k+1);//\u6392\u5e8f\n\tfor(int i=1,c=1;i<=k&&c<=n-1;i++)//c\u7528\u4e8e\u8bb0\u5f55\u8fde\u8fb9\u7684\u6570\u91cf\uff0c\u53ea\u9700\u8fde\u63a5(n-1)\u6761\u8fb9\n\t\tif(!search(r[i].f,r[i].t))//\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u4e0d\u5728\u7528\u4e00\u4e2a\u96c6\u5408\n\t\t\tcontact(r[i].f,r[i].t),//\u8fde\u63a5\n\t\t\tc++,//\u7edf\u8ba1\n\t\t\tf[i]=true;//\u6807\u8bb0\u5df2\u9009\n\tfor(int i=1;i<=k;i++)//\u7edf\u8ba1\u8fb9\u6743\u4e4b\u548c\n\t\tif(!f[i])\n\t\t\tans+=r[i].w;\n\tprintf(\"%lld\",ans);//\u8f93\u51fa\n\treturn 0;\n}\n/*\n\u4ee5\u4e0b\u4e09\u4e2a\u51fd\u6570\u4e3a\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\n*/\n\nvoid contact(int a,int b){\n\tint ra=find(a),rb=find(b);\n\tif(ra!=rb)\n\t\tID[rb]=ra;\n\treturn;\n}\n\nbool search(int a,int b){\n\treturn find(a)==find(b);\n}\n\nint find(int x){\n\tif(ID[x]==x)\n\t\treturn x;\n\telse\n\t\treturn ID[x]=find(ID[x]);\n}\n```",
        "postTime": 1532173131,
        "uid": 38502,
        "name": "agicy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    },
    {
        "content": "****\u672c\u4eba\u849f\u84bb\uff0c\u7b2c\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\u554a\uff0c\u5982\u679c\u6709\u5199\u7684\u4e0d\u597d\u7684\u5927\u5bb6\u89c1\u8c05******\n\n//\u8fd9\u9053\u9898\u95ee\u51cf\u6389\u7f51\u7ebf\u7684\u6700\u5927\u503c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u7559\u4e0b\u6700\u77ed\u7684\u8def\uff08\u4f46\u4fdd\u8bc1\u56fe\u8fde\u901a\uff0c\u5373\u6700\u5c0f\u751f\u6210\u6811\uff09\uff0c\u7136\u540e\u7528\u8def\u7ebf\u603b\u957f-\u6700\u5c0f\u751f\u6210\u6811\u6240\u6709\u7684\u8fb9\u957f\n\n```cpp\n//\u5dee\u5373\u4e3a\u7b54\u6848\u3002\n#include<bits/stdc++.h>//\u4e07\u80fd\u6587\u4ef6\u5e93\uff0cc++\u5c31\u662f\u65b9\u4fbf\u554a:~)\nusing namespace std;\nstruct node{\n    int from;//\u8d77\u70b9\n    int to;//\u5230\u8fbe\u7684\u70b9\n    int w;//\u8fb9\u7684\u6743\u503c\n}a[205];\nint n,m,fa[205],k,sum,ans,tot;//sum\u662f\u8def\u7684\u603b\u957f\uff0cans\u662f\u6700\u7ec8\u7b54\u6848\uff0ctot\u662f\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u957f\uff08\u90fd\u662f\u82f1\u8bed\u7b80\u5199\uff0c\u5e94\u8be5\u6bd4\u8f83\u597d\u770b\u5427...\uff09\nint find(int x){\n    if(fa[x]!=x)fa[x]=find(fa[x]);\n    return fa[x];//\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\u51fd\u6570\uff0c\u9012\u5f52\u8c03\u7528\u4f1a\u6bd4\u8f83\u5feb\n}\nbool cmp(node b,node c){//c++\u5e93\u51fd\u6570\u2014\u2014sort\uff0c\u5b83\u9700\u8981\u4e00\u4e2a\u5224\u5b9a\u7684\u6807\u51c6\n    return b.w<c.w;\n}\nint main()\n{\n    cin>>n>>m;//\u867d\u7136\u9898\u91cc\u662fk\uff0c\u4f46\u6211\u8fd8\u662f\u4e60\u60ef\u7528m\u8868\u793a\u8fb9\u6570\n    sum=0;tot=0;ans=0;//\u6570\u636e\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++){\n        cin>>a[i].from>>a[i].to>>a[i].w;\n        sum+=a[i].w;//\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u8def\u5f84\u603b\u957f\n    }\n    for(int i=1;i<=n;i++){\n        fa[i]=i;\n```\n}//\u5e76\u67e5\u96c68\uff08fu\uff09\u8282\u70b9\u521d\u59cb\u5316\n```cpp\n    sort(a+1,a+m+1,cmp);//\u8fd9\u91cc\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\n    k=0;\n    for(int i=1;i<=m;i++){\n        int x=find(a[i].from),y=find(a[i].to);//\u5148\u628a\u4e24\u4e2a\u70b9\u7684fu\u8282\u70b9\u62ff\u51fa\u6765\uff0c\u65b9\u4fbf\u7528\uff08\u5176\u5b9e\u8fd9\u91cc\u5e94\u8be5\u6ca1\u5fc5\u8981\u518d\u89e3\u91ca\u4e86\uff09\n        if(x!=y){\n            fa[y]=x;\n            tot+=a[i].w;k++;\n        }\n    }\n    ans=sum-tot;//\u7ed3\u679c\n    cout<<ans;\n}//\u6700\u540e\u518d\u63d0\u9192\u4e00\u4e0b\u5927\u5bb6\uff0c\u8fd9\u4e2a\u8fb9\u6570\u7684\u8303\u56f4\u662f1~200\uff0c\u6570\u7ec4\u4e0d\u8981\u5f00\u5c0f\u4e86\n```",
        "postTime": 1506316657,
        "uid": 38533,
        "name": "emiyashilo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2820 \u3010\u5c40\u57df\u7f51\u3011"
    }
]