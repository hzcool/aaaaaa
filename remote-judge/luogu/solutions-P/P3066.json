[
    {
        "content": "\u9898\u610f:\u7ed9\u51fa\u4ee51\u53f7\u70b9\u4e3a\u6839\u7684\u4e00\u68f5\u6709\u6839\u6811,\u95ee\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u4e0e\u5b83\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8el\u7684\u70b9\u6709\u591a\u5c11\u4e2a\n\n\u6ce8\u610f\u8f93\u5165\u683c\u5f0f\u662f\u8f93\u5165fa[i]&dis[fa[i],i],\u56e0\u4e3a\u7279\u6b8a\u7684\u8f93\u5165\u683c\u5f0f,\u4f3c\u4e4e\u8fdeDFS\u90fd\u4e0d\u8981\n\n\u6cd51:\u5982\u679cdep[u]-dep[v]<=len\u90a3\u4e48u->v\u8def\u5f84\u4e0a\u7684\u70b9\u90fd\u8981+1,\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u500d\u589e\u6c42\u51fa\u6700\u8fdc\u7684\u70b9\u7136\u540e\u5dee\u5206\u5c31ok\u4e86\n\n\u6cd52:\u5148\u628adep,dfs\u5e8f\u7b97\u51fa,\u7136\u540e\u6309dep\u964d\u5e8f\u6392\u5e8f.\u5bf9\u4e8e\u6bcf\u4e2a\u70b9,\u9700\u8981\u5220\u9664\u6df1\u5ea6\u76f8\u5dee\u8d85\u8fc7L\u7684\u70b9,\u5e76\u52a0\u5165\u5f53\u524d\u70b9,\u5728\u5b50\u6811\u4e2d\u7edf\u8ba1\u7b54\u6848.(\u6811\u72b6\u6570\u7ec4)\n\n\u6cd53:\u4e3b\u5e2d\u6811,dep[v]-dep[u]<=L(v\u2208u)=>dep[v]<=L+dep[u]=>\u9759\u6001\u533a\u95f4\u67e5\u8be2\u5c0f\u4e8e\u67d0\u4e2a\u6570\u7684\u4e2a\u6570 \u4e0a\u4e3b\u5e2d\u6811\n\n\u6cd54:\u6811\u5957\u6811,\u5916\u5c42\u533a\u95f4\u7ebf\u6bb5\u6811,\u5185\u5c42\u6743\u503c\u7ebf\u6bb5\u6811 \u6765\u505a\u6cd53\u7684\u7b97\u6cd5\n\n\u6cd55:\u5de6\u504f\u6811,\u5148dfs\u6c42\u51fadep,\u518d\u6309dfs\u5e8f\u5012\u8fc7\u6765\u64cd\u4f5c\n\n\u4f3c\u4e4e\u597d\u50cf,\u6811\u5957\u6811\u7684\u505a\u6cd5\u662f\u53ef\u4ee5\u505a\u5e26\u4fee\u6539\u7684,\u4e3b\u5e2d\u6811\u7684\u505a\u6cd5\u662f\u53ef\u4ee5\u5728\u7ebf\u7ed9L\u505a\u7684\n",
        "postTime": 1506822946,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "$$\\color{cornflowerblue}{\\mathcal{Treaker}}$$\n\n\u6709\u4e00\u79cd\u6bd4\u8f83\u795e\u5947\u7684\u6811\u4e0a\u5dee\u5206\u7684\u601d\u8def\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u70b9\u4f1a\u88ab\u600e\u4e48\u6837\u7684\u70b9\u8ba1\u5165\u7b54\u6848\uff0c\u5f53\u4e14\u4ec5\u5f53\u90a3\u4e2a\u70b9\u662f\u4ed6\u7684\u7956\u5148\uff0c\u5e76\u4e14\u8ddd\u79bb$~\\le~$l\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6743\u503c\u662f\u6b63\u7684\uff0c\u90a3\u4e48\u8fd9\u4e9b\u70b9\u5728\u6811\u4e0a\u5fc5\u7136\u662f\u4e00\u6bb5\u533a\u95f4\uff08\u5728\u8fd9\u91cc\u4e00\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u7b97\u4f5c\u4e00\u6bb5\u533a\u95f4\uff09\u3002\n\n\u5bf9\u4e8e\u6811\u4e0a\u7684\u533a\u95f4\u4fee\u6539\u95ee\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u7528\u6811\u4e0a\u5dee\u5206\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u6700\u540e\u5728\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ntypedef long long ll;\ninline ll read()\n{\n\tll x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nconst int N = 2e5+5;\nint n;\nll l;\nint fa[N][20] , val[N];\nll dis[N];\nstruct Tree\n{\n\tvoid get_fa(int x) { for(int i = 1;i <= 19;i ++) fa[x][i] = fa[fa[x][i - 1]][i - 1];}\n\tinline void work(int x)\n\t{\n\t\tval[x] ++; ll tmp = l;\n\t\tfor(int i = 19;i >= 0;i --) if(dis[x] - dis[fa[x][i]] <= tmp) tmp -= dis[x] - dis[fa[x][i]] , x = fa[x][i];\n\t\tif(x != 1) val[fa[x][0]] --;\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read(); l = read(); fa[1][0] = 1;\n\t\tfor(int i = 2;i <= n;i ++) fa[i][0] = read() , dis[i] = dis[fa[i][0]] + read() , get_fa(i);\n\t\tfor(int i = 1;i <= n;i ++) work(i);\n\t\tfor(int i = n;i > 1;i --) val[fa[i][0]] += val[i];\n\t\tfor(int i = 1;i <= n;i ++) printf(\"%d\\n\",val[i]);\n\t}\n}DNF;\nint main() { return DNF.LOL() , 0;}\n```\n",
        "postTime": 1575936340,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\n\u8fd9\u9898\u4e5f\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u5176\u5b9e\u5e76\u4e0d\u7528\u53ef\u5e76\u5806\u3002\u7c7b\u4f3c\u4e8e\u4e0a\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fadfs\u5e8f\u548c\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\uff0c\u7136\u540e\u6309\u6df1\u5ea6\u964d\u5e8f\u6392\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u9700\u8981\u5220\u9664\u6df1\u5ea6\u76f8\u5dee\u8d85\u8fc7L\u7684\u70b9\uff0c\u5e76\u52a0\u5165\u5f53\u524d\u70b9\uff0c\u5728\u5b50\u6811\u4e2d\u7edf\u8ba1\u7b54\u6848\u3002\u800c\u8fd9\u4e9b\u7528\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\uff08\u5355\u70b9\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(N\\log N)$\n\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u79cd\u66f4\u52a0\u5de7\u5999\u7684\u65b9\u6cd5\u3002\u7528\u500d\u589e\u6c42\u51fa$2^i$\u6b65\u7956\u5148\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u8ddd\u79bb\u8d85\u8fc7L\u7684\u7956\u5148\uff0c\u7528\u5dee\u5206\u533a\u95f4\u52a0\uff0c\u6700\u540e\u5c31\u80fd\u7b97\u51fa\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f$O(N\\log N)$\uff0c\u4e0b\u9762\u63d0\u4f9b\u4e86\u5b98\u65b9\u9898\u89e3\u4e2d\u7684\u8fd9\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\u4f9b\u53c2\u8003\u3002\n\n\n## \u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=200005;\nint n,id[N],r[N],now,ans[N];\npair<long long,int> a[N];\nstruct BIT\n{\n    int tree[N];\n    void modify(int x,int val)\n    {\n        for(;x<=n;x+=x&-x)\n            tree[x]+=val;\n    }\n    int query(int x)\n    {\n        int ans=0;\n        for(;x;x-=x&-x)\n            ans+=tree[x];\n        return ans;\n    }\n}T;\n//\u6811\u72b6\u6570\u7ec4\u6a21\u677f\nvector<pair<int,long long>> mat[N];\nvoid dfs(int k)\n{\n    id[k]=++now;\n  //dfs\u5e8f\n    for(auto e:mat[k])\n    {\n        a[e.first]=make_pair(a[k].first+e.second,e.first);\n        dfs(e.first);\n    }\n    r[k]=now;\n  //\u7ed3\u675f\u65f6\u95f4\u6233\n}\nint main()\n{\n    long long l;\n    cin>>n>>l;\n    for(int i=2;i<=n;i++)\n    {\n        int p;\n        long long w;\n        cin>>p>>w;\n        mat[p].push_back(make_pair(i,w));\n    }\n    a[1]=make_pair(0ll,1);\n    dfs(1);\n    sort(a+1,a+n+1);\n    int j=n;\n    for(int i=n;i;i--)\n    {\n        for(;a[j].first-a[i].first>l;j--)\n            T.modify(id[a[j].second],-1);\n      //\u5220\u9664\u8d85\u8fc7\u8ddd\u79bb\u8d85\u8fc7L\u7684\u70b9\n        T.modify(id[a[i].second],1);\n      //\u63d2\u5165\u5f53\u524d\u70b9\n        ans[a[i].second]=T.query(r[a[i].second])-T.query(id[a[i].second]-1);\n      //\u7edf\u8ba1\u5b50\u6811\u7b54\u6848\n    }\n    for(int i=1;i<=n;i++)\n        cout<<ans[i]<<endl;\n    return 0;\n}\n```\n\n\u5b98\u65b9\u9898\u89e3\u4e2d\u7684\u4ee3\u7801\uff1a\n\n\n```pascal\nvar ans,d:array[0..200333]of int64;\n    i,n,j,v:longint;\n    len:int64;\n    p:array[0..200333,0..19]of longint;\n  begin\n    assign(input,'runaway.in');reset(input);\n    assign(output,'runaway.out');rewrite(output);\n    read(n,len);\n    ans[1]:=1;\n    for i:=2 to n do\n      begin\n        read(p[i,0]);\n        read(d[i]);\n        d[i]:=d[i]+d[p[i,0]];\n        //\u8ba1\u7b97\u6df1\u5ea6\n        for j:=1 to 18 do\n          p[i,j]:=p[p[i,j-1],j-1];\n          //\u500d\u589e\u6c42\u7956\u5148\n        v:=i;\n        for j:=18 downto 0 do\n          if d[i]-d[p[v,j]]<=len then v:=p[v,j];\n          //\u627e\u5230\u6700\u8fdc\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7L\u7684\u7956\u5148\n        inc(ans[i]);\n        dec(ans[p[v,0]]);\n        //\u5dee\u5206\n      end;\n    for i:=n downto 1 do\n      ans[p[i,0]]:=ans[p[i,0]]+ans[i];\n    for i:=1 to n do\n      Writeln(ans[i]);\n  end.\n```",
        "postTime": 1497502173,
        "uid": 9406,
        "name": "zhzh2001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u7b80\u8981\u6765\u8bf4\uff0c\u5de6\u504f\u6811\n\n\u5177\u4f53\u601d\u60f3\u662f\uff1a\u5148Dfs\u6c42\u51fa\u6839\u8282\u70b9\u5230\u5404\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u518d\u6309\u9006Dfs\u65f6\u95f4\u6233\u987a\u5e8f\u8fdb\u884c\u64cd\u4f5c\uff08\u4e3a\u4e86\u4f7f\u5f97\u5904\u7406\u7684\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5747\u88ab\u5904\u7406\u8fc7\uff0c\u81f3\u4e8e\u4e3a\u4f55\u4e0d\u6b63\u5411\uff0c\u5c31\u4e0d\u89e3\u91ca\u4e86\uff09\n\n\u5efa\u5927\u6839\u5806\uff0c\u6bcf\u6b21\u505a\u5b8c\u5408\u5e76\u64cd\u4f5c\u540e\uff0c\u5c06\u4e0d\u53ef\u884c\u7684\u8fb9\u4ece\u5806\u4e2d\u5f39\u51fa\uff08\u5373\u5806\u9876\u6240\u8868\u793a\u7684\u70b9\u5230\u5f53\u524d\u70b9\u7684\u8ddd\u79bb>L\uff08\u540c\u65f6\u4ee5\u64cd\u4f5c\u987a\u5e8f\u4e3a\u524d\u63d0\u7684\u6761\u4ef6\u4e0b\u5fc5\u6709\u201c\u76f8\u8ddd\u8ddd\u79bb=\u4e24\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u5dee\u201d\uff09\uff09\n\n\u53e6\u4e00\u4e2a\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6c42\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u9006Dfs\u5e8f\u6a21\u62df\u4e00\u4e2a\u56de\u6eaf\u8fc7\u7a0b\uff1a\u5c06\u6240\u4ee5pop\u6389\u7684\u503c\u548c\u5176\u5b50\u8282\u70b9\u7684\u503c\u7d2f\u52a0\uff0c\u518d\u76f8\u51cf\u5373\u53ef\u3002\n\n\u8be6\u89c1\uff08\u5b8c\u7f8e\u7684100\u884c\uff09\u53c8\u86c7\u53c8\u76ae\u7684\u4ee3\u7801\uff0c\u5fc5\u8981\u5904\u6709\u6ce8\u91ca\uff1a\n\n\n\n\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<ctime>\n#include<cstdio>\n#include<string>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n using namespace std;\nconst long long N=200000;\nstruct tt\n{\n    long long cost,next,to;\n}edge[2*N+5];//\u4fdd\u5b58\u8fb9\u7684\u4fe1\u606f \nlong long path[N+5],top;\nstruct node\n{\n    long long key,dist;\n    node *l,*r;\n    long long ldist() {return l ? l->dist:-1;}\n    long long rdist() {return r ? r->dist:-1;}\n}T[N+5],*root[N+5];//T[i]\u8868\u793a\u8282\u70b9i\u7684\u76f8\u5173\u4fe1\u606f;root[i]\u8868\u793a\u5e8f\u53f7\u4e3ai\u7684\u8282\u70b9\u6240\u5728\u5806\u7684\u6839\u7684\u5730\u5740 \nlong long n,l,a,b;\nlong long remain[N+5],tail,Rank[N+5];//remain[]\u8868\u793a\u9006Dfs\u987a\u5e8f,tail\u8868\u793aremain[]\u7684\u5927\u5c0f;Rank[]\u8868\u793aBfs\u5e8f \nlong long popnum[N+5],cnt[N+5];//popnum[i]\u4fdd\u5b58\u5728i\u8282\u70b9\u65f6,\u5f39\u51fa\u5143\u7d20\u7684\u6570\u91cf cnt[i]\u8868\u793a\u4ee5i\u4e3a\u6839\uff0c\u5176\u5b50\u6811\u8282\u70b9\u6570\u91cf(\u4e0d\u542b\u6839\u8282\u70b9) \nvoid Add(long long x,long long y,long long cost);\nvoid Dfs(long long x);\nnode* Merge(node* a,node* b);\nint main()\n{\n    scanf(\"%lld%lld\",&n,&l);\n    for (long long i=2;i<=n;i++)\n    {\n        scanf(\"%lld%lld\",&a,&b);\n        Add(a,i,b);\n        Add(i,a,b);\n```\n}//\u8fde\u53cc\u5411\u8fb9,\u6b63\u5411\u7528\u4e8eDfs\u7528,\u9006\u5411\u7528\u4e8e\u6c42\u89e3\u7528\n\n```cpp\n    Rank[1]=1;\n    Dfs(1);\n    for (long long i=1;i<=tail;i++) \n    {\n        for (long long j=path[remain[i]];j;j=edge[j].next)\n        {\n            if (Rank[remain[i]]==Rank[edge[j].to]+1)//\u627e\u5230\u524d\u9a71\u8282\u70b9 \n            {\n                root[edge[j].to]=Merge(root[remain[i]],root[edge[j].to]);//\u5c06\u5f53\u524d\u8282\u70b9\u6784\u6210\u7684\u5806\u5e76\u5165\u524d\u9a71\u8282\u70b9 \n                while(root[edge[j].to]->key-T[edge[j].to].key>l)//\u5f39\u51fa \n                {\n                    popnum[edge[j].to]++;\n                    root[edge[j].to]=Merge(root[edge[j].to]->l,root[edge[j].to]->r);\n                }\n            }\n        }\n    }\n    for (long long i=1;i<=tail;i++) //\u5bf9\u6700\u7ec8\u7b54\u6848\u6570\u636e\u7684\u5904\u7406 \n    {\n        for (long long j=path[remain[i]];j;j=edge[j].next)\n        {\n            if (Rank[remain[i]]==Rank[edge[j].to]+1)\n            {\n                cnt[edge[j].to]+=cnt[remain[i]]+1;\n                popnum[edge[j].to]+=popnum[remain[i]];\n            }\n        }\n    }\n    for (long long i=1;i<=n;i++) printf(\"%lld\\n\",cnt[i]+1-popnum[i]);\n    return 0;\n}\nvoid Add(long long x,long long y,long long cost)\n{\n    edge[++top].to=y;\n    edge[top].cost=cost;\n    edge[top].next=path[x];\n    path[x]=top;\n}\nvoid Dfs(long long x)\n{\n    root[x]=x+T;\n    for (long long i=path[x];i;i=edge[i].next) if (!Rank[edge[i].to])\n    {\n        Rank[edge[i].to]=Rank[x]+1;\n        T[edge[i].to].key=T[x].key+edge[i].cost;//key\u4fdd\u5b58\u7684\u662f\u6839\u8282\u70b9\u5230\u8be5\u70b9\u7684\u8ddd\u79bb \n        Dfs(edge[i].to);\n    }\n    remain[++tail]=x;\n}\nnode* Merge(node* a,node* b)\n{\n    if (!a||!b) return a ? a:b;\n    if (a->key<b->key) swap(a,b);\n    a->r=Merge(a->r,b);\n    if (a->ldist()<a->rdist()) swap(a->l,a->r);\n    a->dist=a->rdist()+1;\n    return a;\n}\n```",
        "postTime": 1493474171,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "## \u597d\u50cf\u5f88\u4e45\u6ca1\u6709\u5199\u4e3b\u5e2d\u6811\u4e86\uff0c\u4e34\u8fd1\u7701\u9009\u4e4b\u9645\u901a\u8fc7\u5199\u8fd9\u9053\u9898\u56de\u987e\u4e00\u4e0b\u4e00\u4e9b\u57fa\u7840\u505a\u6cd5\u3002\n\n**\u9898\u610f\uff1a** \u7ed9\u51fa\u4ee51\u53f7\u70b9\u4e3a\u6839\u7684\u4e00\u68f5\u6709\u6839\u6811,\u95ee\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u4e0e\u5b83\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8el\u7684\u70b9\u6709\u591a\u5c11\u4e2a\n\n**\u5206\u6790\uff1a**\n\n\u6839\u636e\u9898\u76ee$dep[v]<=L+dep[u]$\u4e00\u5f0f\u7684\u53d8\u5f62\uff0c\u6211\u4eec\u7684\u601d\u8def\u53ef\u4ee5\u5411\u627e\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u5728\u4e00\u4e2a\u5b50\u6811\u5185\u7ef4\u62a4$[dep[u],dep[u]+L]$\u533a\u95f4\u7684\u70b9\u6570\u91cf\u5e76\u5feb\u901f\u6c42\u51fa\u3002\n\n\u5982\u679c\u6ca1\u6709\u5b50\u6811\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528**\u7ebf\u6bb5\u6811\uff0c\u4ee5\u6df1\u5ea6\u4e3a\u4e0b\u6807\uff0c\u901a\u8fc7\u4e00\u4e2a$dfs$\u627e\u5230\u5e76\u987a\u624b\u7ef4\u62a4\u5f53\u524d\u6df1\u5ea6\u7684\u70b9\u4e2a\u6570**\uff0c\u7ed9\u4eba\u611f\u89c9\u662f\u8fd9\u6837\u7684\uff1a\n\n```cpp\n\nvoid dfs(int u)  //\u6709\u5411\u56fe\u4e0d\u5fc5\u5224\u7236\u4eb2\n{\n\tsize[u]=1; add(1,1,maxd,d[u],1);//\u5c06\u5f53\u524d\u6df1\u5ea6\u70b9\u4e2a\u6570\u52a01\n\tfor (int i=fir[u];i;i=e[i].next) {\n\t\taddt(e[i].u); size[u]+=size[e[i].u];\n\t} \n}\n```\n**\u53ef\u4ee5\u6ce8\u610f\u5230d[u]\u53ef\u80fd\u4f1a\u975e\u5e38\u975e\u5e38\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u5bf9\u5176\u79bb\u6563\u5316\u3002\u3002**\n\n\n\n\u4f46\u662f\u73b0\u5728\u6709\u4e86\u5b50\u6811\u9650\u5236~~\u5c31\u4e0d\u4f1a\u505a\u4e86~~\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230**\u4e3b\u5e2d\u6811**\u53ef\u4ee5\u652f\u6301\u5bf9\u4e8e\u5386\u53f2\u4fe1\u606f\u7684\u8ffd\u67e5\uff0c\u4ece\u800c\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u641e\u51fa\u4e00\u4e2a\u5b50\u6811\u7684\u4fe1\u606f\u3002\n\n~~\u4e0d\u7528\u8bf4\u6211\u90fd\u77e5\u9053\u4e0a\u9762\u7684\u8bdd\u5341\u5206\u7684\u62d7\u53e3\u96be\u61c2~~\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/55862.png)\n\n\u5982\u56fe\uff0c\u5047\u5982\u6211\u4eec\u8981\u6c42\u8282\u70b9\u4e3a2\u7684\u5b50\u6811\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u53bb\u5904\u7406\uff1f\n\n1. \u6211\u4eec\u901a\u8fc7dfs\u52301\uff0c\u5728\u6b64\u5904\u5efa\u4e00\u9897\u4e3b\u5e2d\u6811\uff0c\u7ef4\u62a4[1]\u7ec4\u6210\u7684\u5b50\u6811\uff0c\u53ef\u4ee5\u5f97\u5230\u6df1\u5ea6\u4e3a0\u7684\u67091\u4e2a\u3002\n\n2. \u6211\u4eec\u901a\u8fc7dfs\u52305\uff08\u62163\uff0c\u770b\u4f60\u600e\u4e48\u5efa\u56fe\uff09,\u518d\u5efa\u4e00\u9897\u4e3b\u5e2d\u6811\uff0c\u7ef4\u62a4[1,2,3,5]\u7684\u5b50\u6811\uff0c\u53ef\u4ee5\u5f97\u5230\u6df1\u5ea6\u4e3a0\u7684\u67091\uff0c\u6df1\u5ea6\u4e3a1\u7684\u67091\uff0c\u6df1\u5ea6\u4e3a2\u7684\u67092\u3002\n\n3. \u628a\u4e24\u9897\u4e3b\u5e2d\u6811\u60c5\u51b5\u4e00\u51cf\uff0c\u5f97\u5230\u4e00\u68f5\u7531[2,3,5]\u7ec4\u6210\u7684\u5b50\u6811\uff0c\u6df1\u5ea6\u4e3a1\u7684\u67091\uff0c\u6df1\u5ea6\u4e3a2\u7684\u67092\u3002\u8fd9\u6b63\u662f\u5b50\u6811\u7684\u4fe1\u606f\u3002\n\n\u5927\u6982\u5c31\u662f\u4ee5\u4e0a\u8fd9\u6837\u3002\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\u6b64\u65f6\u6211\u4eec\u662f\u4ee5**dfs\u5e8f\u4e3a\u65f6\u95f4\u8f74**\uff0c\u6240\u4ee5\u5728dfs\u65f6\u7684\u65f6\u5019\u8fd8\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u4ed6\u7684dfs\u5e8f\uff0c\u5426\u5219\u67e5\u8be2\u7684\u65f6\u5019\u4e0d\u65b9\u4fbf\u3002\n\n\u6b64\u5916\uff0c\u4e00\u4e2a\u70b9\u7684\u5b50\u6811dfs\u5e8f\u8303\u56f4\u4e3a$[dfs[i]-1,dfs[i]+size[i]-1]$\uff0c\u8fd9\u4e2a\u5e94\u8be5\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u3002\u3002\n\n**\u53ef\u80fd\u4f1a\u662f\u4e00\u4e9b\u5751\u70b9/\u4f18\u5316\uff1a**\n\n1. \u5176\u5b9e\u4f60\u79bb\u6563\u5316\u540e\u4e8c\u5206$L+dep[u]$\u53ef\u80fd\u56de\u6bd4\u6700\u5927\u6df1\u5ea6\u8fd8\u5927\u3002\u53ef\u4ee5\u901a\u8fc7\u5728\u79bb\u6563\u5316\u6570\u7ec4\u540e\u9762\u52a0\u4e00\u4e2a$inf$\uff0c\u5982\u679c\u4f60\u67e5\u5230inf\u4e86\u8bf4\u660e\u4f60\u7684\u5b50\u6811\u4f60\u90fd\u53ef\u4ee5\u8fbe\u5230\uff0c\u76f4\u63a5\u8f93\u51fa\u5b50\u6811\u5927\u5c0f\u5373\u53ef\u3002\n\n2. \u522b\u5fd8\u4e86$LL$...\n\n3. lower_bound\u7684\u8303\u56f4\u662f\u5c0f\u4e8e\uff0c\u9898\u76ee\u8981\u6c42\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u6240\u4ee5\u5224\u65ad\u4e0b\u4e00\u4e2a\u6df1\u5ea6\u80fd\u5426\u8fbe\u5230\uff0c\u82e5\u80fd\u5c31\u52a01.\n\n**\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a**\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#define maxn 200100\n#define midd (l+r)/2\nusing namespace std;\n\nstruct ed{\n\tlong long u,next;\n}e[maxn*2];\nlong long n,m,ll,st,cnt,fir[maxn],fa[maxn],size[maxn],d[maxn],a[maxn],ha[maxn];\nlong long dfn[maxn],t,w[maxn*30],ls[30*maxn],rs[30*maxn],rt[maxn*30];\nvoid add(long long x,long long y){\n\te[++st].u=y; e[st].next=fir[x]; fir[x]=st;\n}\n\nlong long buildd(long long l,long long r)\n{\n\tlong long now=++cnt; if (l==r) return now;\n\tls[now]=buildd(l,midd); rs[now]=buildd(midd+1,r);\n\treturn now;\n}\n\nlong long build(long long pre,long long l,long long r,long long x)\n{\n\tlong long now=++cnt; w[now]=w[pre]+1; ls[now]=ls[pre]; rs[now]=rs[pre];\n\tif (l==r) return now; \n\tif (x<=midd) ls[now]=build(ls[pre],l,midd,x);\n\telse rs[now]=build(rs[pre],midd+1,r,x);\n\treturn now;\n}\n\nlong long query(long long r1,long long r2,long long l,long long r,long long x,long long y)\n{\n\tif (r<x||l>y) return 0;\n\t\n\tif (x<=l&&r<=y) return w[r2]-w[r1];\n\treturn query(ls[r1],ls[r2],l,midd,x,y)+query(rs[r1],rs[r2],midd+1,r,x,y);\n}\n\nvoid addt(long long u)\n{\n\tsize[u]=1; long long dd=lower_bound(ha+1,ha+ll+1,d[u])-(ha+1)+1;\n\tdfn[u]=++t; rt[t]=build(rt[t-1],1,ll,dd);\n\tfor (long long i=fir[u];i;i=e[i].next) {\n\t\taddt(e[i].u); size[u]+=size[e[i].u];\n\t} \n}\n\nint main()\n{\n\tcin>>n>>m; long long dd; ha[1]=0;\n\tfor (long long i=2;i<=n;i++) \n\t\tcin>>fa[i]>>dd,ha[i]=d[i]=dd+d[fa[i]],add(fa[i],i);\n\tha[n+1]=2147483646;\n\tsort(ha+1,ha+n+2);\n\tll=unique(ha+1,ha+n+2)-(ha+1);\t\n\trt[0]=buildd(1,ll); addt(1);\n//building\n\n\tfor (long long i=1;i<=n;i++)\n\t{\n\t\tlong long k1=lower_bound(ha+1,ha+ll+1,d[i])-(ha+1);\n\t\tif (ha[k1+1]==d[i]) k1++;\n\t\tlong long k=lower_bound(ha+1,ha+ll+1,d[i]+m)-(ha+1);\n\t\tif (ha[k+1]==d[i]+m) k++;\n\t\tif (k==ll-1) cout<<size[i]<<endl;\n\t\telse cout<<query(rt[dfn[i]-1],rt[dfn[i]+size[i]-1],1,ll,k1,k)<<endl;\n\t}\n}\n```",
        "postTime": 1554392488,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684Barn\u3011\u3010\u4e3b\u5e2d\u6811\u3011"
    },
    {
        "content": "~~\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u826f\uff08d\u00fa\uff09\u5fc3\uff08li\u00fa\uff09\u7684\u9898\u76ee~~\n\n\u9996\u5148\uff0c\u5f53\u672c\u849f\u84bb\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u7684\u65f6\u5019\uff0c\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\uff1a\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u5408\u6cd5\u8282\u70b9\u4e2a\u6570\n\n\u4e0d\u8fc7\u663e\u7136\uff0c\u770b\u770b\u90a32 \u00d7 $10 ^ 5$\u7684\u6570\u636e\u8303\u56f4\uff0c\u66b4\u529b\u679a\u4e3e\u663e\u7136\u662f\u4f1aT\u70b8\u7684\n\n\u90a3\u4e48\u7a76\u7adf\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u6765\u5c06\u8fd9\u4e2a\u9898\u76ee\u6362\u6210\u4e00\u4e2a\u751f\u52a8\u5f62\u8c61\u7684\u8bf4\u6cd5\uff1a\n\n\u6709\u4e00\u6237\u4eba\u5bb6\uff0c\u7ed9\u5b9a\u4ed6\u4eec\u7684\u7236\u4eb2\u548c\u4ed6\u4eec\u7684\u7236\u4eb2\u6bd4\u4ed6\u4eec\u5927\u7684\u5c81\u6570\uff0c\u6c42\u5bb6\u4e2d\u6bcf\u4e2a\u4eba\u5728\u4ed6\u7684\u76f4\u7cfb\u540e\u4ee3\u6bd4\u4ed6\u5c0f\u4e86\u4e0d\u8d85\u8fc7t\u5c81\u7684\u4eba\u7684\u6570\u91cf\uff08\u63cf\u8ff0\u53ef\u80fd\u6709\u70b9\u4e0d\u51c6\u786e\uff0c\u4e86\u89e3\u5c31\u884c\uff09\n\n\u539f\u672c\u7684\u9898\u76ee\u4e2d\uff0c\u662f\u8ba9\u957f\u8f88\u4eec\u53bb\u627e\u540e\u8f88\uff1b\u4f46\u662f\uff0c\u5b5d\u987a\u662f\u4e2d\u534e\u540d\u65cf\u7684\u4f20\u7edf\u7f8e\u5fb7\uff0c\u8eab\u4e3a\u4e00\u4e2a\u5b5d\u987a\u7684\u597d\u5b69\u5b50\uff0c\u6211\u4eec\u600e\u4e48\u80fd\u8ba9\u957f\u8f88\u4eec\u627e\u6211\u4eec\u5462\uff1f\u6211\u4eec\u5e94\u8be5\u81ea\u5df1\u627e\u957f\u8f88\u3002\n\n\u597d\u5427\uff0c\u5f00\u73a9\u7b11\u7684\u3002\n\n\u4f46\uff0c\u6211\u4eec\u786e\u5b9e\u53ef\u4ee5\u901a\u8fc7\u9006\u5411\u601d\u7ef4\uff0c\u5c06\u7edf\u8ba1\u5b50\u6811\u4e2d\u5408\u6cd5\u8282\u70b9\u7684\u4e2a\u6570\uff0c\u6539\u4e3a\u4ece\u6bcf\u4e2a\u8282\u70b9\uff0c\u5c06\u5408\u6cd5\u7684\u7956\u5148\u8282\u70b9\u52a0\u4e0a1\n\n\u8ba9\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u9898\u76ee\u91cc\u7684\u6837\u4f8b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lebpkxe8.png)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6bcf\u8282\u70b9\u80fd\u4ea7\u751f\u8d21\u732e\u7684\u7956\u5148\uff0c\u90fd\u5728\u4ece\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\uff0c\u5e76\u4e14\u90fd\u662f\u4ece\u8be5\u8282\u70b9\u5f00\u59cb\u7684\u8fde\u7eed\u8282\u70b9\n\n\u9898\u76ee\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u6811\u4e0a\u5dee\u5206\u7684\u9898\u76ee\n\n#\u4e0d\u4f1a\u6811\u4e0a\u5dee\u5206\u7684\u540c\u5b66\u8bf7\u79fb\u6b65\u6b64\u5904\uff1a[\u6811\u4e0a\u5dee\u5206](https://www.cnblogs.com/gzh-red/p/11185914.html)\n\n\u63a5\u4e0b\u6765\uff0c\u627e\u51fa\u8ddd\u79bb\u6bcf\u4e2a\u8282\u70b9\u6700\u8fdc\uff0c\u4e14\u8ddd\u79bb\u4e0d\u8d85\u8fc7t\u7684\u8282\u70b9\uff0c\u518d\u8fdb\u884c\u5dee\u5206\u5373\u53ef\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u5c31\u80fdAC\u4e86\u5417\uff1f\n\n\u8ba1\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4ece\u6bcf\u4e2a\u8282\u70b9\u66b4\u529b\u627e\u7956\u5148\uff0c\u5982\u679c\u662f\u4e00\u6761\u94fe\u7684\u8bdd\uff0c\u5c31\u50cf\u8fd9\u6837:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6nev4zsk.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f O\uff08$n^2$\uff09\n\n~~\u55ef\uff0c\u5728\u672c\u9898\u826f\uff08d\u00fa\uff09\u5fc3\uff08li\u00fa\uff09\u7684\u6570\u636e\u9762\u524d\u8fd8\u662f\u4f1a\u5361\u6210\u5b59\u5b50~~\n\n\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8fd8\u5f97\u8fdb\u884c\u4f18\u5316\n\n\u600e\u4e48\u505a\u5462\uff1f\n\n\u8c01\u89c4\u5b9a\u4e00\u6b21\u53ea\u80fd\u8df3\u4e00\u683c\u4e86\uff1f\n\n\u53cd\u6b63\u4e5f\u53ea\u9700\u8981\u627e\u51fa\u6700\u8fdc\u7684\u90a3\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u500d\u589e\u8fdb\u884c\u4f18\u5316\uff0c\u4e00\u6b21\u8df3 $2^n$ \u683c\n\n#\u4e0d\u4f1a\u500d\u589e\u7684\u540c\u5b66\u8bf7\u79fb\u6b65\u8fd9\u91cc\uff1a[\u500d\u589e](https://blog.csdn.net/dong_qian/article/details/81702697)\n\n\u8fd9\u6837\uff0c\u4e16\u754c\u590d\u6742\u5ea6\u5c31\u80fd\u4f18\u5316\u4e3a\uff1aO(n logn) \u521a\u597d\u53ef\u4ee5\u8fc7\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 500005\n#define int long long\nstruct node{\n    int w,next,to;\n}a[maxn];\nint n,t,P,W,tot,head[maxn];\nint fa[maxn][30],h[maxn],s[maxn];\nint f[maxn],ans[maxn];\nvoid add(int l,int r,int w){\n    a[++tot].next = head[l];\n    a[tot].to = r;\n    a[tot].w = w;\n    head[l] = tot;\n}\nvoid build(int p,int last){\n    fa[p][0] = last;\n    h[p] = h[last] + 1;\n    for(int i = 1; i <= 20; i++)fa[p][i] = fa[fa[p][i - 1]][i - 1];\n    for(int i = head[p]; i; i = a[i].next){\n        if(a[i].to != last){\n            s[a[i].to] = s[p] + a[i].w;\n            build(a[i].to,p);\n        }\n    } \n    return;\n}\nint far(int p){\n    int k = p;\n    for(int i = 20; i >= 0; i--){\n        if(s[p] - s[fa[k][i]] <= t){\n            k = fa[k][i];\n        }\n    }\n    return k;\n}\nvoid query(int p,int last){\n    for(int i = head[p]; i; i = a[i].next){\n        if(a[i].to != last){\n            query(a[i].to,p);\n            ans[p] += ans[a[i].to];\n        }\n    }\n    ans[p] += f[p];\n    return;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&n,&t);\n    for(int i = 2; i <= n; i++){\n        scanf(\"%lld%lld\",&P,&W);\n        add(P,i,W);\n        add(i,P,W);\n    }\n    build(1,0);\n    s[0] = -99999999;\n    for(int i = 1; i <= n; i++){\n        int k = far(i);\n        f[i]++;\n        f[fa[k][0]]--;\n    }\n    query(1,0);\n    for(int i = 1; i <= n; i++) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1598972459,
        "uid": 78390,
        "name": "\u6ca7\u6d77\u6620\u7e41\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066"
    },
    {
        "content": "**\u535a\u5ba2\u5185\u98df\u7528\u66f4\u4f73\uff1a[qwq](https://blog.csdn.net/The_OIer/article/details/97908938)**\n\n**\u9898\u76ee\u94fe\u63a5\uff1a[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3066)**\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u51fa\u4ee5$1$\u53f7\u70b9\u4e3a\u6839\u7684\u4e00\u68f5\u6709\u6839\u6811\uff0c\u95ee\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u4e0e\u5b83\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e$L$\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u3002\n\n## \u5927\u81f4\u601d\u8def\n\n\u5728\u8282\u70b9\u5b50\u6811\u5185\uff0c\u60f3\u5230\u7528dfs\u5e8f\u3002\n\n\u8be2\u95ee\u8ddd\u79bb$<=L$\u7684\u70b9\uff0c\u60f3\u5230\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u53c8\u56e0\u4e3a\u8fd9\u91cc\u8be2\u95ee\u7684\u662f\u533a\u95f4\u5185\u8ddd\u79bb$<=L$\u7684\u70b9\uff0c\u56e0\u6b64\u8981\u53ef\u6301\u4e45\u5316\u3002\n\n## \u5177\u4f53\u64cd\u4f5c\n\n\u8003\u8651\u4e3b\u5e2d\u6811\u7684\u7ef4\u62a4\u548c\u67e5\u8be2\uff1a\n\n\u4ee4$dis[i]$\u8868\u793a\u7b2c$i$\u4e2a\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n\u7b2c$i$\u68f5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u7684\u662f$dfs$\u5e8f\u4e3a$1\uff5ei$\u7684\u8282\u70b9\u7684$dis$\u4fe1\u606f\u3002\n\n\u4ee4$dfn[x]$\u8868\u793a$dfs$\u5e8f\u4e2d$x$\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$out[x]$\u8868\u793a$x$\u7684\u5b50\u6811\u4e2d$dfs$\u5e8f\u7684\u6700\u5927\u503c\u3002\n\n\u90a3\u4e48$x$\u7684\u5b50\u6811\u7684\u533a\u95f4\u5c31\u662f$[dfn[x],out[x]]$\u3002\n\n\u7136\u540e\u6309\u7167$dfs$\u5e8f\u5efa\u4e00\u68f5\u4e3b\u5e2d\u6811\u3002\n\n\u5efa\u5b8c\u4e3b\u5e2d\u6811\u540e\uff0c\u5047\u8bbe\u5f53\u524d\u8282\u70b9\u5230\u6839\u8ddd\u79bb\u4e3a$dis[x]$\uff0c\n\n\u5219\u73b0\u5728\u9700\u8981\u8be2\u95ee\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u5230\u6839\u8ddd\u79bb$<=dis[x]+L$\u3002\n\n\u8003\u8651\u4e3b\u5e2d\u6811\u7684\u6027\u8d28\uff0c\u4e3b\u5e2d\u6811\u7ef4\u62a4\u4e86\u524d\u7f00\u4fe1\u606f\u3002\n\n\u56e0\u6b64\u7b54\u6848\u5c31\u662f\n\n(\u524d$out[x]$\u4e2a\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u5230\u6839\u8ddd\u79bb$<=dis[x]+L$)\n\n\u51cf\u53bb\n\n(\u524d$dfn[x]-1$\u4e2a\u8282\u70b9\u6709\u591a\u5c11\u4e2a\u5230\u6839\u8ddd\u79bb$<=dis[x]+L$)\u3002\n\n\u53e6\u5916\u8fd9\u91cc\u8ddd\u79bb\u5f88\u5927\uff0c\u79bb\u6563\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86qwq\u3002\n\n~~\u4e11\u964b\u7684~~\u4ee3\u7801\uff1a\n\n```cpp\n#include<stdio.h>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define re register int\n#define rl register ll\nusing namespace std;\ntypedef long long ll;\nll read() {\n\trl x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9') {\n\t\tif(ch=='-')\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9') {\n\t\tx=10*x+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nconst int Size=200005;\nconst int LOG=20;\nll n,L,maxn,a[Size],b[Size],T[Size];\nint cnt,tot,tim,head[Size],dfn[Size],out[Size];\nstruct Edge {\n\tint v,next;\n\tll t;\n} w[Size];\nvoid AddEdge(int u,int v,ll t) {\n\tw[++cnt].v=v;\n\tw[cnt].t=t;\n\tw[cnt].next=head[u];\n\thead[u]=cnt;\n}\nvoid dfs(int x,ll d) {\n\t//a[i]\u8868\u793adfs\u5e8f\u4e3ai\u7684\u8282\u70b9\u5230\u6839\u8ddd\u79bb \n\tdfn[x]=++tim;\n\ta[tim]=d;\n\tfor(int i=head[x]; i; i=w[i].next) {\n\t\tint nxt=w[i].v;\n\t\tdfs(nxt,d+w[i].t);\n\t}\n\tout[x]=tim;\n}\nint ls[Size*LOG],rs[Size*LOG],sum[Size*LOG];\nint update(int pre,int l,int r,int v) {\n\tint rt=++tot;\n\tls[rt]=ls[pre]; rs[rt]=rs[pre];\n\tsum[rt]=sum[pre]+1;\n\tif(l<r) {\n\t\tint mid=(l+r)>>1;\n\t\tif(v<=mid) {\n\t\t\tls[rt]=update(ls[pre],l,mid,v);\n\t\t} else {\n\t\t\trs[rt]=update(rs[pre],mid+1,r,v);\n\t\t}\n\t}\n\treturn rt;\n}\nint Query(int u,int v,int l,int r,int rt) {\n\t//\u4e3b\u5e2d\u6811\u533a\u95f4\u6c42\u548c \n\tif(u<=l && r<=v) {\n\t\treturn sum[rt];\n\t}\n\tint mid=(l+r)>>1,ans=0;\n\tif(u<=mid)\tans+=Query(u,v,l,mid,ls[rt]);\n\tif(v>mid)\tans+=Query(u,v,mid+1,r,rs[rt]);\n\treturn ans;\n}\nint main() {\n\tn=read();\n\tL=read();\n\tfor(re i=2; i<=n; i++) {\n\t\tint p=read();\n\t\tll t=read();\n\t\tAddEdge(p,i,t);\n\t}\n\tdfs(1,0);\n\t//\u79bb\u6563\u5316 \n\tmemcpy(b,a,sizeof(a));\n\tsort(b+1,b+1+n);\n\tmaxn=unique(b+1,b+1+n)-(b+1);\n\tfor(re i=1; i<=n; i++) {\n\t\tint k=lower_bound(b+1,b+1+maxn,a[i])-b;\n\t\t//\u6309\u7167dfs\u5e8f\u5efa\u51fa\u4e3b\u5e2d\u6811 \n\t\tT[i]=update(T[i-1],1,maxn,k);\n\t}\n\tfor(re i=1; i<=n; i++) {\n\t\tll maxd=a[dfn[i]]+L;\n\t\t//\u67e5\u627e\u4e00\u4e0ba[dfn[i]]+L\u5728\u53bb\u91cd\u540e\u5728\u79bb\u6563\u5316\u6570\u7ec4b\u4e2d\u7684\u4f4d\u7f6e \n\t\tint alb=upper_bound(b+1,b+1+maxn,maxd)-b-1;\n\t\tint ans1=Query(1,alb,1,maxn,T[out[i]]);\n\t\tint ans2=Query(1,alb,1,maxn,T[dfn[i]-1]);\n\t\tprintf(\"%d\\n\",ans1-ans2);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1564551113,
        "uid": 45108,
        "name": "Peter_Z",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u5f88\u591a\u9ad8\u7ea7\u7684\u505a\u6cd5~~\uff0c\u4f46\u662f\u6211\u90fd\u4e0d\u4f1a~~\n\n\u800c\u4e14\u8fd8\u6ca1\u6709\u500d\u589e+\u6811\u4e0a\u5dee\u5206\u7684\u9898\u89e3\uff0c\u8d76\u7d27\u6765\u8865\u4e00\u53d1~\n\n\u6211\u4eec\u5206\u6790\u9898\u76ee\u53ef\u4ee5\u5f97\u51fa\u8fd9\u6837\u4e00\u6761\u7ed3\u8bba\u2014\u2014\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9$u$\uff0c$u$\u7684\u5b50\u6811\u4e2d\u4e0e$u$\u7684\u8ddd\u79bb\u5927\u4e8e$l$\u7684\u70b9\u4e0e$u$\u7684\u6240\u6709\u7956\u5148\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e$l$($u$\u4e5f\u662f\u81ea\u5df1\u7684\u7956\u5148)\u3002\u6240\u4ee5\u4e0d\u96be\u60f3\u5230\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9$u$\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa$u$\u7684\u7b2c\u4e00\u4e2a\u4e0e\u5b83\u8ddd\u79bb\u5927\u4e8e$l$\u7684\u7956\u5148$anc$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u7956\u5148\uff0c\u5b83\u7684\u7b54\u6848\u5c31\u8981\u51cf\u53bb$size(u)$\u3002$size$\u8868\u793a\u5b50\u6811\u7684\u8282\u70b9\u6570\uff0c\u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u4e3a\u5b50\u6811\u7684\u8282\u70b9\u6570\u3002\u7136\u540e\u7ed3\u5408\u4e4b\u524d\u5f97\u5230\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u4e0a\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u628a\u8fd9\u4e2a\u51cf\u53bb\u7684$size(u)$\u7d2f\u52a0\u5230$anc$\u7684\u7956\u5148\u4e2d\u53bb\u3002\n\n\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\uff0c\u76f4\u63a5\u7b97\u662f\u6709\u95ee\u9898\u7684\u3002\n\n\u9996\u5148\u5bf9\u4e8e$u$\uff0c\u5b83\u5bf9$anc$\u7684\u7b54\u6848\u505a\u4e86\u503c\u4e3a$-size(u)$\u7684\u8d21\u732e\uff0c\u5e76\u4e14\u6211\u4eec\u8981\u5c06\u8fd9\u4e2a\u8d21\u732e\u7d2f\u52a0\u5230$anc$\u7684\u7956\u5148\u4e2d\u53bb\u3002\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e$u$\u7684\u7956\u5148\uff0c\u6bd4\u5982$u$\u7684\u7236\u4eb2$fa(u)$\uff0c\u7b2c\u4e00\u4e2a\u4e0e$fa(u)$\u8ddd\u79bb\u5927\u4e8e$l$\u7684\u7956\u5148\u4e5f\u5fc5\u5b9a\u662f$anc$\u7684\u7956\u5148\uff0c\u4f46\u6211\u4eec\u5c06$-size(fa(u))$\u52a0\u5230\u4e86\u8fd9\u4e2a\u7956\u5148\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u7956\u5148\u7684\u7b54\u6848\u7d2f\u52a0\u4e86\u4e24\u6b21$-size(u)$\uff0c\u7b54\u6848\u663e\u7136\u662f\u9519\u7684\u3002\u5982\u4f55\u907f\u514d\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5c06$size(fa(u))$\u51cf\u53bb$size(u)$\u5373\u53ef\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u5bf9\u4e8e\u6c42\u7b2c\u4e00\u4e2a\u8ddd\u79bb\u5927\u4e8e$l$\u7684\u7956\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u500d\u589e\u6765\u505a\uff0c\u90a3\u4e48\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(NlogN)$\u3002\n\n*\u7531\u4e8e$size(fa(u))$\u51cf\u53bb\u7684\u662f$size(u)$\u539f\u672c\u7684\u5927\u5c0f\uff0c\u800c\u6b64\u65f6$size(u)$\u53ef\u80fd\u5df2\u7ecf\u88ab$u$\u7684\u5b50\u8282\u70b9\u51cf\u53bb\u4e86\u4e00\u4e9b\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u518d\u5f00\u4e00\u4e2a$size$\u6570\u7ec4\u6765\u8bb0\u5f55\u539f\u672c\u7684$size$\u3002\n\n*\u4e0d\u5f00long long\u89c1\u7956\u5b97\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define maxn 200001\nusing namespace std;\n \nstruct edge{\n    int to,next; long long dis;\n    edge(){}\n    edge(const int &_to,const long long &_dis,const int &_next){ to=_to,dis=_dis,next=_next; }\n}e[maxn<<1];\nint head[maxn],k;\n \nint fa[maxn][20],size[maxn],size2[maxn],sum[maxn],maxdep;\nint n;\nlong long m,dis[maxn][20];\n \ninline long long read(){\n    register long long x(0),f(1); register char c(getchar());\n    while(c<'0'||'9'<c){ if(c=='-') f=-1; c=getchar(); }\n    while('0'<=c&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    return x*f;\n}\ninline void add(const int &u,const int &v,const long long &w){ e[k]=edge(v,w,head[u]),head[u]=k++; }\n \nvoid dfs(int u){\n    size[u]=1;\n    for(register int i=head[u];~i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa[u][0]) continue;\n        fa[v][0]=u,dis[v][0]=e[i].dis;\n        for(register int j=1;j<=maxdep;j++) fa[v][j]=fa[fa[v][j-1]][j-1],dis[v][j]=dis[v][j-1]+dis[fa[v][j-1]][j-1];\n        dfs(v),size[u]+=size[v];\n    }\n}\n \nvoid dfs_getsum(int u){\n    for(register int i=head[u];~i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa[u][0]) continue;\n        dfs_getsum(v);\n        long long len=0; int tmp=size[v],tmp2=size2[v];\n        for(register int j=maxdep;j>=0;j--) if(len+dis[v][j]<=m&&fa[v][j]) len+=dis[v][j],v=fa[v][j];\n        if(len+dis[v][0]>m&&fa[v][0]) sum[fa[v][0]]+=tmp,size[u]-=tmp2;\n    }\n}\n \nvoid dfs_getans(int u){\n    for(register int i=head[u];~i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa[u][0]) continue;\n        dfs_getans(v),sum[u]+=sum[v];\n    }\n}\n \nint main(){\n    memset(head,-1,sizeof head);\n    n=read(),m=read();\n    for(register int i=2;i<=n;i++){\n        int v=read(); long long w=read();\n        add(i,v,w),add(v,i,w);\n    }\n    maxdep=(int)log(n)/log(2),dfs(1);\n    for(register int i=1;i<=n;i++) size2[i]=size[i];\n     \n    dfs_getsum(1);\n    dfs_getans(1);\n     \n    for(register int i=1;i<=n;i++) printf(\"%d\\n\",size2[i]-sum[i]);\n    return 0;\n}\n```\n",
        "postTime": 1559305777,
        "uid": 114165,
        "name": "Akura",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u9898\u89e3\u533a\u4e00\u7247\u4e3b\u5e2d\u6811/\u5de6\u504f\u6811\uff0c\u5bb3\u6015\n\n\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u5176\u7956\u5148\u7684\u8d21\u732e\uff0c\u53d1\u73b0\u5bf9\u4e8e\u8282\u70b9 $i$ \uff0c\u5047\u8bbe\u5176\u6df1\u5ea6\u6700\u5c0f\u4e14\u4e0e $i$ \u6df1\u5ea6\u4e4b\u5dee $\\le L$ \u7684\u7956\u5148\u4e3a $j$ \uff0c\u90a3\u4e48 $i$ \u5bf9\u4e8e\u4ece $i$ \u5230 $j$ \u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u90fd\u4f1a\u4ea7\u751f\u8d21\u732e\u3002\n\n\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u548c\u8282\u70b9\u7956\u5148\u7684\u500d\u589e\u6570\u7ec4\uff0c\u5bf9\u4e8e\u8282\u70b9 $i$ \uff0c\u6bcf\u6b21\u627e\u5230\u6df1\u5ea6\u6700\u5927\u4e14\u4e0e $i$ \u6df1\u5ea6\u4e4b\u5dee $>L$ \u7684\u8282\u70b9\uff0c\u5c06\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u5dee\u5206\u6570\u7ec4\u503c -1\uff0c$i$ \u8282\u70b9\u5bf9\u5e94\u7684\u503c +1 \u5373\u53ef\u3002\n\n\u56e0\u4e3a\u8bfb\u5165\u65f6\u5df2\u7ecf\u786e\u5b9a\u4e86\u7236\u5b50\u5173\u7cfb\uff0c\u53ef\u4ee5\u52a8\u6001\u5730\u7ef4\u62a4\u6df1\u5ea6\u548c\u500d\u589e\u6570\u7ec4\u3002\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u521d\u59cb\u65f6\u8282\u70b9 1 \u7684\u5dee\u5206\u6570\u7ec4\u503c\u4e3a 1 \uff0c\u56e0\u4e3a 1 \u5728\u5b83\u81ea\u5df1\u7684\u5b50\u6811\u5185\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N=200005;\nint n;\nll m;\nint cnt;\nint head[N];\nstruct Edge{\n\tint nxt,to;\n}e[N];\nint idx;\nint poi[N];\nint f[N][23];\nll dis[N];\nint dlt[N];\nvoid add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\thead[u]=cnt;\n}\nint find(int x)\n{\n\tint now=x;\n\tfor(int j=20;j>=0;j--)\n\t\tif(dis[x]-dis[f[now][j]]<=m) now=f[now][j];\n\treturn f[now][0];\n}\nvoid dfs(int x)\n{\n\tidx++;\n\tpoi[idx]=x;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t\tdfs(e[i].to);\n}\nint main()\n{\n\tscanf(\"%d%lld\",&n,&m);\n\tdlt[1]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint x;ll w;\n\t\tscanf(\"%d%lld\",&x,&w);\n\t\tadd(x,i);\n\t\tf[i][0]=x;\n\t\tdis[i]=dis[x]+w;\n\t\tfor(int j=1;j<=20;j++)\n\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n\t\tdlt[i]++;\n\t\tdlt[find(i)]--;\n\t}\n\tdfs(1);\n\tfor(int i=n;i;i--)\n\t\tdlt[f[poi[i]][0]]+=dlt[poi[i]];\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",dlt[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1572866253,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "~~55\u884c\u5de6\u504f\u6811\u540a\u6253\u4e3b\u5e2d\u6811\u3001\u6811\u5957\u6811~~\n\n\n\u9898\u610f\uff1a\u7ed9\u51fa\u4ee51\u53f7\u70b9\u4e3a\u6839\u7684\u4e00\u68f5\u6709\u6839\u6811\uff0c\u95ee\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u4e0e\u5b83\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8el\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u3002\n\n\u6ce8\u610f\u5230\u7b54\u6848\u7684\u4e24\u4e2a\u6027\u8d28\uff1a\n\n- \u4e00\u4e2a\u70b9\u7684\u6240\u6709\u7b54\u6848\u4e00\u5b9a**\u5305\u542b**\u5728\u5176\u6240\u6709\u513f\u5b50\u7684\u7b54\u6848\u4e2d\n- \u5982\u679c\u8282\u70b9$i\u200b$\u5f53\u524d\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u6240\u6709\u8ddd\u79bb\uff08\u76f8\u5bf9\u4e8e\u6839\u8282\u70b9\uff09\u6bd4\u5b83\u5c0f\u7684\u8282\u70b9\u5f53\u524d\u4e5f\u90fd\u6ee1\u8db3\uff08\u6240\u4ee5\u5efa\u4e2a\u5927\u6839\u5806\uff09\n\n\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u5de6\u504f\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5efa\u4e2a\u5927\u6839\u5806\uff0c\u5728$dfs$\u65f6\u8ba1\u7b97\u51fa\u6240\u6709\u70b9\u6df1\u5ea6\uff0c\u518d\u5229\u7528\u8fd9\u4e9b\u6027\u8d28\u56de\u6eaf\u65f6\u4f9d\u6b21\u5408\u5e76\u6240\u6709\u5806\uff0c\u663e\u7136\u7b54\u6848\u5373\u4e3a\u5806\u7684\u5927\u5c0f\u3002\n\n\u6ce8\u610f`long long`~~\u5361\u4e86\u6211\u597d\u4e45~~\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define MAXN 200002\n#define LL long long\nusing namespace std;\nint n;long long l;\nint head[MAXN],nxt[MAXN*2],vv[MAXN*2],tot;\nLL ww[MAXN*2];\ninline void add_edge(int u, int v, LL w){\n    ww[++tot]=w;\n    vv[tot]=v;\n    nxt[tot]=head[u];\n    head[u]=tot;\n}\nLL val[MAXN];\nint root[MAXN],sz[MAXN],sl[MAXN],sr[MAXN],dis[MAXN];\nint merge(int a, int b){\n    if(a==0||b==0) return a+b;\n    if(val[a]<val[b]) swap(a,b);\n    sr[a]=merge(sr[a], b);\n    if(dis[sl[a]]<dis[sr[a]]) swap(sl[a], sr[a]);\n    dis[a]=dis[sr[a]]+1;\n    return a;\n}\nvoid dfs(int u, LL wnow){\n    root[u]=u;\n    val[u]=wnow;\n    sz[u]=1;\n    for(int i=head[u];i;i=nxt[i]){\n        int v=vv[i];\n        LL w=ww[i];\n        dfs(v, wnow+w);\n        root[u]=merge(root[u], root[v]);\n        sz[u]+=sz[v];\n        while(val[root[u]]-val[u]>l){\n            root[u]=merge(sl[root[u]], sr[root[u]]);\n            sz[u]--;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %lld\", &n, &l);\n    for(int i=2;i<=n;++i){\n        int fa;LL w;\n        scanf(\"%d %lld\", &fa, &w);\n        add_edge(fa,i,w);\n    }\n    dfs(1,0);\n    for(int i=1;i<=n;++i)\n        printf(\"%d\\n\", sz[i]);\n    return 0;\n}\n```",
        "postTime": 1560756347,
        "uid": 63896,
        "name": "Santiego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u663e\u7136\u60f3\u5230\u5982\u679c\u6700\u5927\u7684\u5c0f\u4e8e\u7b49\u4e8eL,\u90a3\u4e48\u6bd4\u6700\u5927\u503c\u5c0f\u7684\u4e00\u5b9a\u53ef\u4ee5.        \n\u6240\u4ee5\u91c7\u7528\u5de6\u504f\u6811\u7ef4\u62a4.     \n\u8003\u8651\u600e\u4e48\u6837\u7ef4\u62a4\u6743\u503c.    \n\u5de6\u504f\u6811\u53ef\u4ee5\u901a\u8fc7\u6253\u6807\u8bb0\u6765\u7ef4\u62a4\u8fd9\u4e2a\u70b9\u7684\u6743\u503c , \u56e0\u4e3a\u4ed6\u6ee1\u8db3\u5806\u7684\u6027\u8d28.    \n\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e2alazy\u6807\u8bb0\u8868\u793a\u8fd9\u4e2a\u70b9\u9700\u8981\u4e0b\u653e\u7684\u503c.   \n\u53ea\u9700\u8981\u5728\u5408\u5e76\u6216\u8005\u5220\u9664\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019,\u4e0b\u653e\u5373\u53ef.   \n\u5199\u7684\u592a\u4e11\u4e86.\u8dd1\u7684\u592a\u6162\u4e86(\u6342\u8138)   \n```cpp\n/*1037ms -> 864ms*/\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#define rep(i , x, p) for(int i = x;i <= p;++ i)\n#define sep(i , x, p) for(int i = x;i >= p;-- i)\nconst int maxN = 1000000 + 7;\n#define gc getchar()\n#define pc putchar\n#define ll long long\nusing std::min;\nusing std::max;\nusing std::swap;\n\ninline int read() {int x = 0,f = 1;char c = gc;while(c < '0' || c > '9') {if(c == '-')f = -1;c = gc;}while(c >= '0' && c <= '9') {x = x * 10 + c - '0';c = gc;}return x * f;}\ninline ll readll() {ll x = 0,f = 1;char c = gc;while(c < '0' || c > '9') {if(c == '-')f = -1;c = gc;}while(c >= '0' && c <= '9') {x = x * 10 + c - '0';c = gc;}return x * f;}\nvoid print(int x) {if(x < 0) {pc('-');x = -x;}if(x >= 10) print(x / 10);pc(x % 10 + '0');}\n\nstruct Node {\n    int ch[2] , dis;\n\tll key, lazy;\n}P[maxN];\n\nvoid pushdown(int a) {\n    ll lazy = P[a].lazy;\n    P[a].lazy = 0;\n    P[P[a].ch[0]].key += lazy;P[P[a].ch[1]].key += lazy;\n    P[P[a].ch[0]].lazy += lazy;P[P[a].ch[1]].lazy += lazy;\n    return ;\n}\n\nint Merge(int a , int b) {\n    if(!a || !b) return a + b;\n    if(P[a].key < P[b].key) swap(a , b);\n    pushdown(a) ;pushdown(b) ;\n    P[a].ch[1] = Merge(P[a].ch[1] , b);\n    if(P[P[a].ch[1]].dis > P[P[a].ch[0]].dis) swap(P[a].ch[1] , P[a].ch[0]);\n    P[a].dis = P[P[a].ch[1]].dis + 1;\n    return a;\n}\n\nstruct edge {\n    int v , nxt;\n\tll w;\n}Map[maxN];\nint head[maxN] , num , size[maxN];\n\nvoid add_Node(int u , int v, ll w) {\n    Map[++ num] = (edge) {v , head[u], w};\n    head[u] = num;\n}\n\nint Dele(int q) {\n    pushdown(q);\n    return Merge(P[q].ch[0] , P[q].ch[1]);\n}\n\nint n ;\nll L;\nint dfs(int now) {\n    size[now] = 1;int top = now;\n    for(int i = head[now];i;i = Map[i].nxt) {\n        int v = Map[i].v;\n\t\tll w = Map[i].w;\n        int q = dfs(v);\n        size[now] += size[v];\n        P[q].lazy += w;P[q].key += w;\n        top = Merge(top , q);\n    }\n    while(P[top].key > L) {\n        int q = Dele(top);\n        top = q;\n        size[now] --;\n    }\n    return top;\n}\n\nint main() {\n    n = read() , L = readll();\n    int v;\n\tll w;\n    rep(i , 2, n) {\n        v = read();w = readll();\n        add_Node(v , i, w);\n    }\n    dfs(1);\n    rep(i , 1, n) print(size[i]) , pc('\\n');\n    return 0;\n}\n```\n",
        "postTime": 1543667443,
        "uid": 131899,
        "name": "sdgzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u505a\u6cd5\u4e5f\u662f\u5343\u5343\u4e07\u4e07...\u500d\u589e+\u5dee\u5206/\u5de6\u504f\u6811/\u4e3b\u5e2d\u6811/...\n\n\u849f\u84bb\u6211\u5199\u7684\u4e3b\u5e2d\u6811\n\n\u5de6\u504f\u6811\u53ea\u5199\u8fc7\u4e00\u9053\u9898,\u6240\u4ee5\u5bf9\u8fd9\u9053\u9898\u601d\u8def\u4e0d\u662f\u5f88\u719f,\u7a0d\u5fae\u8bb2\u4e00\u4e0b\u500d\u589e+\u5dee\u5206\u7684\u601d\u8def\u5427,\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8eL\u7684\u8282\u70b9\u7684\u4e2a\u6570,\u6700\u6734\u7d20\u7684\u505a\u6cd5\u5c31\u662f\u66b4\u529b\u67e5\u627e,\u627e\u5230\u4e00\u4e2a\u6253\u6807\u8bb0,\u4f46\u662f\u8fd9\u6837\u7684\u4f18\u5316\u7a7a\u95f4\u5f88\u5927,\u5bfb\u627e\u6211\u4eec\u53ef\u4ee5\u7528\u500d\u589e\u4f18\u5316,\u6807\u8bb0\u53ef\u4ee5\u5dee\u5206,\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\n\u4e0b\u9762\u662f\u4e3b\u5e2d\u6811\u7684\u601d\u8def,\u6211\u4eec\u8981\u5bfb\u627e\u4e00\u4e2a\u8282\u70b9$u$\u5b50\u6811\u4e2d\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8eL\u7684\u8282\u70b9$v$\u7684\u4e2a\u6570,\u5373\u9700\u8981\u6ee1\u8db3\u8fd9\u6837\u7684\u6761\u4ef6:$dis[v]-dis[u]<=L\\to dis[u]>=dis[v]+L$\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42\u5b50\u6811\u5185\u5c0f\u4e8e\u4e00\u4e2a\u503c\u7684\u4e2a\u6570,\u4e3b\u5e2d\u6811\u554a\n\n\u5bf9\u6743\u503c\u5efa\u6811....\n\n**\u6ce8\u610f:dis[v]+L\u4e0d\u4e00\u5b9a\u5728\u539f\u5e8f\u5217\u4e2d\u51fa\u73b0\u8fc7,\u6240\u4ee5\u6211\u4eec\u7528upper_bound,\u627e\u7684\u65f6\u5019\u5c31\u53d8\u6210\u4e25\u683c<\u624d\u7edf\u8ba1\u7b54\u6848,\u6700\u540e\u4e3a\u4e86\u4e00\u5b9a\u80fd\u627e\u5230,\u6211\u4eec\u5728\u5e8f\u5217\u7684\u672b\u5c3e\u52a0\u4e00\u4e2ainf**\n\n# Code\n```cpp\n#include<bits/stdc++.h>\n#define mid ((l+r)>>1) \n#define in(i) (i=read())\n#define lol long long \nusing namespace std;\n\nconst lol N=2e5+10,inf=2e15;\n\nlol read()\n{\n    lol ans=0,f=1; char i=getchar();\n    while(i<'0' || i>'9') {if(i=='-') f=-1; i=getchar();} \n    while(i>='0' && i<='9') ans=(ans<<1)+(ans<<3)+i-'0',i=getchar();\n    return ans*f; \n}\n\nlol n,m,cur,tot,dfscnt,L;\nlol head[N],nex[N<<1],to[N<<1],w[N<<1];\nlol a[N],b[N],inc[N],ouc[N],rt[N];\n\nstruct Chair_Tree {\n    lol l,r,v;\n}t[N<<5];\n\nvoid add(lol a,lol b,lol c) {\n    to[++cur]=b,nex[cur]=head[a],w[cur]=c,head[a]=cur;\n    to[++cur]=a,nex[cur]=head[b],w[cur]=c,head[b]=cur;\n} \n\nvoid insert(lol &u,lol l,lol r,lol pre,lol p) {\n    t[u=++tot]=t[pre], t[u].v++;\n    if(l==r) return;\n    if(p<=mid) insert(t[u].l,l,mid,t[pre].l,p);\n    else insert(t[u].r,mid+1,r,t[pre].r,p);\n}\n\nlol query(lol u,lol v,lol l,lol r,lol k) {\n    if(r<k) return t[v].v-t[u].v;\n    if(l>=k) return 0;\n    if(k<=mid) return query(t[u].l,t[v].l,l,mid,k);\n    else return query(t[u].r,t[v].r,mid+1,r,k)+t[t[v].l].v-t[t[u].l].v;\n}\n\nvoid init(lol u,lol fa,lol now) {\n    inc[u]=++dfscnt, a[++m]=b[m]=now;\n    for (lol i=head[u];i;i=nex[i]) {\n        if(to[i]==fa) continue;\n        init(to[i],u,now+w[i]);\n    }ouc[u]=dfscnt;\n}\n\nint main()\n{\n    in(n), in(L);\n    for (lol i=2,f,c;i<=n;i++)\n        in(f), in(c), add(i,f,c);\n    init(1,0,0);\n    sort(b+1,b+1+m); m=unique(b+1,b+1+m)-b-1;\n    for (lol i=1;i<=n;i++) {\n        lol p=lower_bound(b+1,b+1+m,a[i])-b;\n        insert(rt[i],1,m,rt[i-1],p);\n    }\n    b[m+1]=inf;\n    for (lol i=1,ans;i<=n;i++) {\n        lol k=upper_bound(b+1,b+2+m,a[inc[i]]+L)-b;\n        ans=query(rt[inc[i]-1],rt[ouc[i]],1,m,k);\n        printf(\"%lld\\n\",ans);\n    }\n} \n```",
        "postTime": 1541290166,
        "uid": 45210,
        "name": "kikuss",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u6ca1\u9519\uff0c\u53c8\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u505a\u6cd5  \n\u53ea\u9700\u8981\u628a\u6df1\u5ea6\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u533a\u95f4\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86  \n\u8be6\u7ec6\u505a\u6cd5\u662f\u5728dfs\u5230\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6\u63d2\u5165\u8be5\u70b9\u5bf9\u5e94\u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5c06\u6240\u6709\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5230\u8be5\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\uff0c\u67e5\u8be2\u8be5\u70b9\u6df1\u5ea6\u5230\u8be5\u70b9\u6df1\u5ea6$+l$\u7684\u533a\u95f4\u4e0a\u6709\u51e0\u4e2a\u70b9\u5c31\u884c\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a   \n```cpp\n#include<bits/stdc++.h>\n#define lson tr[now].l\n#define rson tr[now].r\n#define pii pair<int,long long>\n#define mp make_pair\nusing namespace std;\n\nstruct tree\n{\n    int l,r,sum;\n}tr[5000020];\nvector<pii> g[400010];\nint n,cnt,cnt2,rt[400010],deep[400010],q[400010],ans[400010];\nlong long gg,tmp[400010],dis[400010];\nint N=400000;\n\nint push_up(int now)\n{\n    tr[now].sum=tr[lson].sum+tr[rson].sum;\n}\n\nint insert(int &now,int l,int r,int pos,int val)\n{\n    if(!now) now=++cnt;\n    if(l==r)\n    {\n        tr[now].sum+=val;\n        return 0;\n    }\n    int mid=(l+r)>>1;\n    if(pos<=mid)\n    {\n        insert(lson,l,mid,pos,val);\n    }\n    else\n    {\n        insert(rson,mid+1,r,pos,val);\n    }\n    push_up(now);\n}\n\nint query(int now,int l,int r,int ll,int rr)\n{\n    if(ll<=l&&r<=rr)\n    {\n        return tr[now].sum;\n    }\n    int mid=(l+r)>>1;\n    if(rr<=mid)\n    {\n        return query(lson,l,mid,ll,rr);\n    }\n    else\n    {\n        if(mid<ll)\n        {\n            return query(rson,mid+1,r,ll,rr);\n        }\n        else\n        {\n            return query(lson,l,mid,ll,mid)+query(rson,mid+1,r,mid+1,rr);\n        }\n    }\n}\n\nint merge(int a,int b,int l,int r)\n{\n    if(!a) return b;\n    if(!b) return a;\n    if(l==r)\n    {\n        tr[a].sum+=tr[b].sum;\n        return a;\n    }\n    int mid=(l+r)>>1;\n    tr[a].l=merge(tr[a].l,tr[b].l,l,mid);\n    tr[a].r=merge(tr[a].r,tr[b].r,mid+1,r);\n    push_up(a);\n    return a;\n}\n\nint dfs(int now,int fa,long long dep)\n{\n    dis[now]=dep;\n    tmp[++cnt2]=dep;\n    tmp[++cnt2]=dep+gg;\n    rt[now]=now;\n    ++cnt;\n    for(int i=0;i<g[now].size();i++)\n    {\n        if(g[now][i].first==fa) continue;\n        dfs(g[now][i].first,now,dep+g[now][i].second);\n    }\n}\n\nint solve(int now,int fa)\n{\n    insert(rt[now],1,N,deep[now],1);\n    for(int i=0;i<g[now].size();i++)\n    {\n        if(g[now][i].first==fa) continue;\n        solve(g[now][i].first,now);\n        merge(rt[now],rt[g[now][i].first],1,N);\n    }\n    ans[now]=query(rt[now],1,N,deep[now],q[now]);\n}\n\nint init()\n{\n\tsort(tmp+1,tmp+cnt2+1);\n\tint tot=unique(tmp+1,tmp+cnt2+1)-tmp-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdeep[i]=lower_bound(tmp+1,tmp+tot+1,dis[i])-tmp;\n\t}\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tq[i]=lower_bound(tmp+1,tmp+tot+1,dis[i]+gg)-tmp;\n\t}\n}\n\nint main()\n{\n\tios::sync_with_stdio(0);\n    cin>>n>>gg;\n    int from;\n\tlong long to;\n    for(int i=2;i<=n;i++)\n    {\n        cin>>from>>to;\n        g[i].push_back(mp(from,to));\n        g[from].push_back(mp(i,to));\n    } \n    dfs(1,0,0);\n\tinit();\n    solve(1,0);\n    for(int i=1;i<=n;i++)\n    {\n        cout<<ans[i]<<endl;\n    }\n}\n```",
        "postTime": 1539775976,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6ca1\u6709\u4e3b\u5e2d\u6811\u7684\u9898\u89e3\u2026\u2026\u6765\u4e00\u53d1\u597d\u4e86\u2026\u2026\u611f\u89c9\u697c\u4e0b\u8bb2\u7684\u4e5f\u4e0d\u662f\u5f88\u6e05\u695a\u2026\u2026\n\n\u5b89\u5229\u4e00\u53d1[blog](https://www.cnblogs.com/bztMinamoto/p/9395186.html)\n\n\u8c03\u4e86\u4e00\u4e2a\u4e0a\u5348\u4e00\u76f4WA\u2026\u2026\u72e0\u4e0b\u5fc3\u6765\u91cd\u6253\u4e00\u904d\u5c45\u7136\u76f4\u63a5\u4e00\u904d\u8fc7\u2026\u2026\n\n\u5148dfs\u4e00\u904d\uff0c\u628a\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\uff0c\u7136\u540e\u5efa\u51fa\u6811\u4e0a\u7684\u4e3b\u5e2d\u6811\n\n\u7136\u540e\u8003\u8651\uff0c$d[v]-d[u]<=L$\uff0c$d[v]<=L+d[u]$\n\n\u7136\u540e\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$d[u]+L$\u67e5\u8be2\u4e00\u4e0b\u533a\u95f4\u5185\u6709\u591a\u5c11\u6bd4\u5b83\u5c0f\u7684\u5c31\u597d\n\n\u7ec6\u8282\u95ee\u9898\uff1a\u56e0\u4e3a\u4e0d\u80fd\u4fdd\u8bc1$d[u]+L$\u5728\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\u5185\u5b58\u5728\uff0c\u6240\u4ee5\u8981\u7528upper_bound\uff0c\u5e76\u67e5\u8be2\u6bd4\u5b83\u5c0f\u7684\uff0c\u800c\u4e14\u8981\u5728\u79bb\u6563\u5316\u7684\u6570\u7ec4\u540e\u9762\u52a0\u4e00\u4e2ainf\n```\n//minamoto\n#include<bits/stdc++.h>\n#define N 200005\n#define M 4000005\n#define ll long long\n#define inf 0x3f3f3f3f\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline ll read(){\n    #define num ch-'0'\n    char ch;bool flag=0;ll res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar obuf[1<<24],*o=obuf;\nvoid print(int x){\n\tif(x>9) print(x/10);\n\t*o++=x%10+48;\n}\nint sum[M],L[M],R[M],rt[N];\nint ver[N<<1],Next[N<<1],head[N];ll edge[N<<1];\nint ls[N],rs[N];ll a[N],b[N];\nint n,m,cnt,tot;ll p;\nvoid update(int last,int &now,int l,int r,int x){\n    sum[now=++cnt]=sum[last]+1;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(x<=mid) R[now]=R[last],update(L[last],L[now],l,mid,x);\n    else L[now]=L[last],update(R[last],R[now],mid+1,r,x);\n}\nint query(int u,int v,int l,int r,int k){\n    if(r<k) return sum[v]-sum[u];\n    if(l>=k) return 0;\n    int mid=(l+r)>>1;\n    if(k<=mid) return query(L[u],L[v],l,mid,k);\n    else return query(R[u],R[v],mid+1,r,k)+sum[L[v]]-sum[L[u]];\n}\ninline void add(int u,int v,ll e){\n\tver[++tot]=v,Next[tot]=head[u],head[u]=tot,edge[tot]=e;\n}\nvoid dfs(int u,int fa,ll d){\n\tb[ls[u]=++m]=d,a[m]=d;\n\tfor(int i=head[u];i;i=Next[i])\n\tif(ver[i]!=fa) dfs(ver[i],u,d+edge[i]);\n\trs[u]=m;\n}\nint main(){\n\tn=read(),p=read();\n\tfor(int u=2;u<=n;++u){\n\t\tint v=read();ll e=read();\n\t\tadd(v,u,e);\n\t}\n\tdfs(1,0,0);\n\tsort(b+1,b+1+m);\n\tm=unique(b+1,b+1+m)-b-1;\n\tfor(int i=1;i<=n;++i){\n\t\tint k=lower_bound(b+1,b+1+m,a[i])-b;\n\t\tupdate(rt[i-1],rt[i],1,m,k);\n\t}\n\tb[m+1]=inf;\n\tfor(int i=1;i<=n;++i){\n\t\tint k=upper_bound(b+1,b+2+m,a[ls[i]]+p)-b;\n\t\tk=query(rt[ls[i]-1],rt[rs[i]],1,m,k);\n\t\tprint(k);\n\t\t*o++='\\n';\n\t}\n    fwrite(obuf,o-obuf,1,stdout);\n    return 0;\n}\n```",
        "postTime": 1533010301,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "### \u9898\u76ee\n\n[P3066 Running Away From the Barn G](https://www.luogu.com.cn/problem/P3066)\n\n\n### \u5206\u6790\n\n\u770b\u5230\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709\u76f4\u63a5\u7528STL\u5806\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u7684\uff0c\u6211\u6765\u5199\u4e00\u7bc7\u3002\n\n\u9898\u76ee\u95ee\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u8ddd\u79bb\u8be5\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7$t$\u7684\u70b9\u4e2a\u6570\uff08\u5305\u542b\u672c\u8eab\uff09\uff0c\u6211\u5c31\u60f3\u5230\u4e86\u5806\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a\u5927\u6839\u5806\uff08\u5806\u4e2d\u5b58\u7684\u662f\u8ddd\u79bb\uff09\u5e76\u4e14\u8bb0\u5f55$added$\u6807\u8bb0\uff08\u5f00\u5927\u6839\u5806\u7684\u539f\u56e0\u662f\u6211\u4eec\u9700\u8981\u5c0f\u4e8e\u7b49\u4e8e$t$\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u51e1\u662f\u5806\u9876\u52a0\u4e0a$added$\u5927\u4e8e$t$\u7684\u76f4\u63a5\u5f39\u6389\uff0c\u6700\u540e\u5806\u7684$size$\u5c31\u662f\u7b54\u6848\uff09.\n\n\u56e0\u4e3a\u662f\u6811\uff0c\u6211\u4eec\u5fc5\u7136\u8981\u5728dfs\u4e2d\u89e3\u51b3\u95ee\u9898\u3002\u6211\u4eec\u6bcf\u65b0\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u8be5\u70b9\u5bf9\u5e94\u7684\u5806push\u8fdb\u4e00\u4e2a$0$\uff08\u5176\u672c\u8eab\uff09.\u56e0\u4e3a\u5230\u6bcf\u4e2a\u8282\u70b9\u5f04\u7b54\u6848\u7684\u65f6\u5019\u9700\u8981\u5176\u4e0b\u9762\u6bcf\u4e2a\u8282\u70b9\u90fd\u5904\u7406\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u9012\u5f52\u5230\u5e95\uff0c\u7136\u540e\u56de\u6eaf\u7684\u65f6\u5019\u8fdb\u884c\u64cd\u4f5c\u3002\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u8282\u70b9\u662f$x$,\u5148\u6309\u4e0a\u6587\u6240\u8a00\u5904\u7406\u51fa$x$\u7684\u7b54\u6848\u3002\u628a$x$\u7684\u5806\u5408\u5e76\u5230\u5176\u7236\u8282\u70b9\u4e0a\u65f6\uff0c\u6240\u6709\u7684\u70b9\u9700\u8981\u7ecf\u8fc7\u8fde\u63a5$x$\u4e0e$fa_x$\u7684\u8fb9$edge$\uff0c\u6240\u4ee5$added$\u8981\u52a0\u4e0a$edge$\u7684\u8fb9\u6743\uff0c\u7136\u540e\u5411\u4e0a\u5408\u5e76\u7684\u65f6\u5019$x$\u5bf9\u5e94\u7684\u5806\u4e2d\u5143\u7d20\u52a0\u4e0a$added_x$\u518d\u51cf\u53bb$added_{fa_x}$,\u585e\u8fdb$fa_x$\u5bf9\u5e94\u7684\u5806\u5373\u53ef\u3002\n\n\u4f46\u662f\u76f4\u63a5\u8fd9\u4e48\u6574\u590d\u6742\u5ea6\u5bb9\u6613\u88ab\u5361\u6210$\\Theta(n^2)$\uff0c\u6240\u4ee5\u8981\u7528\u5806\u7684\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u5373\u5982\u679c$x$\u7684\u5806\u7684\u5927\u5c0f\u5927\u4e8e$fa_x$\u7684\u5806\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u4ea4\u6362\u8fd9\u4e24\u4e2a\u70b9\u7684\u5806\u548c$added$.\u6211\u8fd9\u91cc\u662f\u7528C++11\u76f4\u63a5\u628a\u4ea4\u6362\u7684\u590d\u6742\u5ea6\u4f18\u5316\u6210\u4e86$\\Theta(1)$,\u5982\u679c\u5f3a\u5236\u4f7f\u7528C++98\u7684\u65f6\u5019\u518d\u8bb0\u5f55\u4e2a\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u5806\u7684\u7f16\u53f7\u76f4\u63a5\u5373\u53ef.\n\n\u6ce8\uff1a\u5806\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u590d\u6742\u5ea6\u672c\u4eba\u4e0d\u662f\u5f88\u61c2\uff0c\u6b22\u8fce\u8865\u5145\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=200005;\nconst int MAXE=400005;\ninline int read()\n{\n    int weight=0,symbol=1;\n    char in=getchar();\n    while(!isdigit(in))\n    {\n        if(in=='-') symbol=-1;\n        in=getchar();\n    }\n    while(isdigit(in))\n    {\n        weight=weight*10+in-'0';\n        in=getchar();\n    }\n    return symbol*weight;\n}\nint n,t;\nint fa[MAXN];\nint head[MAXN];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nstruct EDGE\n{\n    int from,to;\n    int val;\n    int next;\n}edge[MAXE];\nint edge_cnt;\nvoid add_edge(int fr,int to,int val)\n{\n    edge[++edge_cnt].from=fr;\n    edge[edge_cnt].to=to;\n    edge[edge_cnt].val=val;\n    edge[edge_cnt].next=head[fr];\n    head[fr]=edge_cnt;\n}\npriority_queue<int>q[MAXN];//\u5bf9\u5e94\u4e0a\u6587\nint added[MAXN];\nint Ans[MAXN];//\u7b54\u6848\u6570\u7ec4\nvoid dfs(int x)\n{\n    q[x].push(0);//\u6bcf\u65b0\u5230\u4e00\u4e2a\u8282\u70b9\u5148\u585e\u8fdb\u81ea\u5df1\u7684\u8ddd\u79bb\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        int y=edge[i].to;\n        if(y==fa[x]) continue;\n        dfs(y);//\u5148\u9012\u5f52\u5230\u5e95\n    }\n    while(q[x].top()+added[x]>t) q[x].pop();//\u628a\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u4e22\u6389\n    Ans[x]=q[x].size();//\u8bb0\u5f55\u8be5\u8282\u70b9\u7684\u7b54\u6848\n    if(x==1) return ;//\u5230\u4e86\u6839\u8282\u70b9\u5c31\u4e0d\u9700\u8981\u4e0b\u9762\u7684\u5411fa\u5408\u5e76\u4e86\n    added[x]+=edge[(x<<1)-2].val;//\u8fd9\u662f\u5efa\u8fb9\u65f6\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u56e0\u4e3a\u662f\u6309\u4ece2\u5230n\u7684\u987a\u5e8f\u5efa\u8fb9\n    if(q[fa[x]].size()<q[x].size()) swap(q[fa[x]],q[x]),swap(added[fa[x]],added[x]);//\u54ea\u4e2a\u5143\u7d20\u6570\u91cf\u591a\u54ea\u4e2a\u5728\u4e0a\u9762\n    while(q[x].size())//\u5408\u5e76\n    {\n        q[fa[x]].push(q[x].top()+added[x]-added[fa[x]]);\n        q[x].pop();\n    }\n}\nsigned main()\n{\n    n=read(),t=read();\n    for(int i=2;i<=n;i++)\n    {\n        fa[i]=read();\n        int va=read();\n        add_edge(i,fa[i],va),add_edge(fa[i],i,va);\n    }\n    dfs(1);\n    for(int i=1;i<=n;i++) printf(\"%lld\\n\",Ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1598576270,
        "uid": 175072,
        "name": "lcy09",
        "ccfLevel": 0,
        "title": "P3066 Running Away From the Barn G \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u5f88\u6e05\u6670\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u8f6c\u5316\u4e00\u4e0b\uff0c\u8bbe$u$\u5230\u6839\u7684\u8ddd\u79bb\u4e3a$dis[u]$\uff0c\u5219\u5728$u$\u7684\u5b50\u6811\u4e2d\u6ee1\u8db3\u5230$u$\u7684\u8ddd\u79bb\u4e0d\u5927\u4e8e$t$\u7684\u70b9$v$\u6ee1\u8db3\n$$\ndis[v]-dis[u]\\leq t\n$$\n\u5373\n$$\ndis[u]+t\\geq dis[v]\n$$\n\u6211\u4eec\u5148\u8dd1\u4e00\u8fb9$dfs$\uff0c\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5c31\u5bf9\u5e94\u4e00\u6bb5\u533a\u95f4\uff0c\u7136\u540e\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\uff1a\u6c42\u4e00\u6bb5\u533a\u95f4\u5185\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u6570\u7684\u503c\u6709\u51e0\u4e2a\uff0c\u88f8\u7684\u4e3b\u5e2d\u6811\u3002\n\n\u7136\u540e\u4e0a\u677f\u5b50\u5373\u53ef\uff0c\u4f46\u7ec6\u8282\u6709\u70b9\u591a\u3002\n\n### $Code$\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=2e5+5;\n\nstruct edge\n{\n    int v,nxt;\n    ll w;\n    edge(int v=0,ll w=0,int nxt=0) :v(v),w(w),nxt(nxt){}\n}e[maxn<<1];\nint lc[maxn<<5],rc[maxn<<5],sum[maxn<<5];\nint rt[maxn],tot;\nint head[maxn],kt,dfn[maxn],siz[maxn],n,cnt,m,id[maxn];\nll dis[maxn],b[maxn],t;\n\ntemplate<typename T>\ninline void read(T &x)\n{\n    char c;int f=1;\n    while(!isdigit(c=getchar())) (c=='-')&&(f=-1);\n    x=c^48;\n    while(isdigit(c=getchar())) x=x*10+(c^48);\n    x*=f;\n}\n\ninline void add(int u,int v,ll w)\n{\n    e[++kt] = edge(v, w, head[u]);\n    head[u] = kt;\n}\n\nvoid dfs(int u,int fa,ll ds)\n{\n    dis[u] = ds;siz[u] = 1;\n    dfn[u] = ++cnt;id[cnt]=u;\n    for (int i = head[u];i;i=e[i].nxt)\n        if(e[i].v!=fa) {\n            dfs(e[i].v, u, ds + e[i].w);\n            siz[u] += siz[e[i].v];\n        }\n}\n\nvoid build(int &u,int l,int r)\n{\n    u=++tot;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    build(lc[u],l,mid);build(rc[u],mid+1,r);\n}\n\nvoid insert(int &u,int pre,int l,int r,int x)\n{\n    u=++tot;lc[u]=lc[pre];rc[u]=rc[pre];sum[u]=sum[pre]+1;\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    if(x<=mid) insert(lc[u],lc[pre],l,mid,x);\n    else insert(rc[u],rc[pre],mid+1,r,x);\n}\n\nint query(int u,int v,int l,int r,int x,int y)\n{\n    if(r<x||l>y) return 0;\n    if(x<=l&&r<=y) return sum[v]-sum[u];\n    int mid=(l+r)>>1;\n    return query(rc[u],rc[v],mid+1,r,x,y)+query(lc[u],lc[v],l,mid,x,y);\n}\n\nint main()\n{\n    int u;\n    ll w;\n    read(n);read(t);\n    for (int i=2;i<=n;++i)\n    {\n        read(u);read(w);\n        add(i,u,w);add(u,i,w);\n    }\n    dfs(1,0,0);\n    for(int i=1;i<=n;++i) b[i]=dis[i];\n    sort(b+1,b+n+1);b[n+1]=1e18;\n    m=unique(b+1,b+n+2)-b-1;\n    build(rt[0],1,m);\n    for(int i=1;i<=n;++i)\n        insert(rt[i],rt[i-1],1,m,lower_bound(b+1,b+m+1,dis[id[i]])-b);\n    for(int i=1;i<=n;++i)\n    {\n        int x=lower_bound(b+1,b+m+1,dis[i])-b-1,y=lower_bound(b+1,b+m+1,dis[i]+t)-b-1;\n        if(b[x+1]==dis[i]) ++x;if(b[y+1]==dis[i]+t) ++y;\n        if(y==m-1) printf(\"%d\\n\",siz[i]); \n        else printf(\"%d\\n\",query(rt[dfn[i]-1],rt[dfn[i]+siz[i]-1],1,m,x,y));\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1597736899,
        "uid": 199750,
        "name": "\u8bd5\u8bd5\u4e8b\u5b9e\u4e0a\u5417",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]Running Away From the Barn G\u3011"
    },
    {
        "content": "\u9996\u5148,\u901a\u8fc7\u8bfb\u9898\u6211\u4eec\u53ef\u4ee5\u77e5\u9053:\n\n1.\u65e0\u4fee\u6539\u64cd\u4f5c;\n\n2.\u6bcf\u4e2a\u8282\u70b9(\u9664\u53f6\u5b50)\u53ef\u7531\u5b50\u6811\u7b54\u6848\u7ecf\u5220\u51cf\u5f97\u5230.\n\n\u90a3\u4e48,\u5c31\u53ef\u4ee5\u7528dsu on tree(\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76)\u6765\u5207\u8fd9\u9053\u9898\u4e86:\n\n\u53ea\u9700\u8981\u66f4\u6539\u51e0\u4e2a\u5730\u65b9\u5c31\u53ef\u4ee5\u4e86,\u6240\u4ee5\u76f4\u63a5\u8d34\u4e0a\u4ee3\u7801(~~\u7801\u98ce\u6781\u4e11~~):\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\n#define ll long long\nconst int inf = 2147483647;\nconst int maxn = 2e5 + 7;\nint n,in_a,H,sum,tot;\nll m,in_b,lit;\nint head[maxn],size[maxn],h[maxn],ans[maxn];\nbool vis[maxn];\nstruct node{\n\tint id;\n\tll val;\n\tbool operator < (const node &A) const{\n\t\treturn val < A.val;\n\t}\n};\nmultiset<node> s;//\u8bb0\u5f55\u5728\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u96c6\u5408\u4e2d\u7684\u8282\u70b9\nll Dis[maxn];\nstruct edge{int nxt,v;ll dis;}e[maxn << 1];\ninline void add(int u,int v,ll dis){\n\te[++tot].nxt = head[u];\n\te[tot].v = v;\n\te[tot].dis = dis;\n\thead[u] = tot;\n\treturn;\n}\nvoid dfs1(int x){\n\tsize[x] = 1;\n\tint Max = 0;\n\tfor(rg int i = head[x];i; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tdfs1(v);\n\t\tsize[x] += size[v];\n\t\tif(size[v] > Max) Max = size[v],h[x] = v;\n\t}\n\treturn;\n}\nvoid update(int x,int ori_x,bool opt){\n\tif(opt){\n\t\tif(Dis[x] > lit) return;//\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n\t\tvis[x] = true;\n\t\ts.insert((node){x,Dis[x]});\n\t\tsum++;\n\t}//\u82e5\u8981\u52a0\u5165x\u8282\u70b9\n\telse if(vis[x]){//\u82e5\u8981\u5220\u9664x\u8282\u70b9,\u5982\u679c\u5728\u6709\u8d21\u732e\u7684\u96c6\u5408\u4e2d\n\t\ts.erase(s.find((node){x,Dis[x]}));\n\t\tvis[x] = false;\n\t\tsum--;\n\t}//\u5982\u679c\u4e0d\u5728\u7684\u8bdd,\u4ed6\u548c\u4ed6\u7684\u5b50\u5b59\u90fd\u4e0d\u4f1a\u5728\n\telse return;\n\tfor(rg int i = head[x];i; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tif(v == H) continue;\n\t\tupdate(v,ori_x,opt);\n\t}\n\treturn;\n}\nvoid dfs(int x,bool opt){\n\tint h_edge = 0;\n\tfor(rg int i = head[x];i; i = e[i].nxt){\n\t\tint v = e[i].v;\n\t\tDis[v] = Dis[x] + e[i].dis;\n\t\tif(v == h[x]) {h_edge = i;continue;}\n\t\tdfs(v,false);\n\t}\n\tif(h_edge) dfs(h[x],true),H = h[x];\n\tlit = m + Dis[x];//\u5bf9\u4e8e\u8282\u70b9x\u5230\u6839\u8ddd\u79bb\u6700\u5927\u503c\n\twhile(!s.empty()){\n\t\tnode Node = *(--s.end());\n\t\tif(Node.val > lit){\n\t\t\ts.erase(--s.end());\n\t\t\tvis[Node.id] = false; \n\t\t\tsum--;\n\t\t}\n\t\telse break;\n\t}//\u5c06\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u5220\u53bb\n\tupdate(x,x,true);\n\tans[x] = sum;H = 0;\n\tif(!opt) update(x,x,false),sum = 0;\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%lld\",&n,&m);\n\tfor(rg int i = 2;i <= n; i++) scanf(\"%d%lld\",&in_a,&in_b),add(in_a,i,in_b);\n\tdfs1(1);dfs(1,1);\n\tfor(rg int i = 1;i <= n; i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n\u4f46\u662f\u6ca1\u5f00O2\u8dd12.03s,\u5f00\u4e86O2\u8dd1580ms...",
        "postTime": 1573648514,
        "uid": 117324,
        "name": "Kushina_Anna",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\n## \u89e3\u9898\u601d\u8def\n\n\u65b9\u6cd5\u5f88\u591a\uff0c\u6bd4\u5982\u697c\u4e0a\u697c\u4e0b\u8bb2\u7684`\u5de6\u504f\u6811`\u3001`\u4e3b\u5e2d\u6811`\u3001`\u6811\u4e0a\u67e5\u5206`\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5 $\\large \\to$ **\u6811\u72b6\u6570\u7ec4+\u79bb\u6563\u5316**\uff08\u5e76\u4e0d\u7528\u8bb0\u5f55 $dfs$ \u5e8f\n\n### \u5206\u6790\n\n\u6c42\u5b50\u6811\u4e2d\u5230\u6839\u7684\u8ddd\u79bb\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u70b9\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u68f5\u5b50\u6811\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e2a\u6240\u6709\u70b9\u5230\u6839\u7684\u8ddd\u79bb\uff0c\u67e5\u8be2\u65f6\u67e5\u8be2\u4e00\u5b9a\u8303\u56f4\u5373\u53ef\n\n\u4f46\u662f\u660e\u663e\u8fd9\u662f\u4e0d\u884c\u7684\uff0c**\u7a7a\u95f4\u548c\u65f6\u95f4\u90fd\u4e0d\u5141\u8bb8**\n\n\u8003\u8651\u4e00\u4e0b\u4f18\u5316\uff0c**\u7edd\u5bf9\u8ddd\u79bb**\u662f\u6ca1\u5fc5\u8981\u7684\uff0c\u53ef\u4ee5\u6709**\u76f8\u5bf9\u8ddd\u79bb**\u6765\u8868\u793a\u4e24\u70b9\u95f4\u7684\u60c5\u51b5\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e24\u8005\u7684\u5927\u5c0f\u5173\u7cfb\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230 $root$ \u7684\u8ddd\u79bb\uff0c\u6392\u5e8f\u540e\u7ef4\u62a4\u5176\u79bb\u6563\u503c\u5373\u53ef\uff0c\u67e5\u8be2\u65f6\u4e5f\u53ef\u4ee5\u7528\u79bb\u6563\u503c\u6765\u4ee3\u66ff\n\n\u518d\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u7684\u4f18\u5316\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c$dfs$ \u5b9e\u73b0\u65f6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c$dfs$ \u5176\u5b50\u6811\u524d \u548c \u5b8c\u6210\u540e\uff0c\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u53ea\u6709\u5b50\u6811\u91cc\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ea\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4fe1\u606f\uff0c\u6bcf\u6b21\u8bb0\u5f55 $dfs$ \u524d\u540e\u7684\u7ed3\u679c\uff0c\u4e24\u8005\u4e4b\u5dee\u5373\u4e3a\u7b54\u6848\n\n### \u5b9e\u73b0\u8fc7\u7a0b\n\n1\u3001\u5148 $dfs$ \u8dd1\u4e00\u904d\uff0c\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u5230 $root(1)$ \u7684 $dis$ \u503c\uff0c\u7528 $p$ \u6570\u7ec4\u8bb0\u5f55\n\n2\u3001\u5c06 $p$ \u6570\u7ec4\u6309\u5347\u5e8f\u6392\u5e8f\n\n3\u3001\u518d\u6b21 $dfs$\uff0c\u7528\u6811\u72b6\u6570\u7ec4 $f$ \u8bb0\u5f55\u5404\u70b9\u5230 $root$ \u8ddd\u79bb\u7684\u79bb\u6563\u503c\uff0c\u6bcf\u6b21\u5728\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u524d\uff0c\u67e5\u8be2\u8be5\u70b9\u80fd\u5230\u6700\u8fdc\u8ddd\u79bb\u7684\u79bb\u6563\u503c\uff0c\u7136\u540e\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u6807\u8bb0\u8fd9\u4e2a\u70b9\u7684 $dis$\uff0c\u904d\u5386\u5b50\u6811\uff0c\u6700\u540e\u518d\u6b21\u67e5\u8be2\uff0c\u4e24\u6b21\u67e5\u8be2\u4e4b\u5dee\u5373\u4e3a\u8be5\u70b9\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u53ea\u5bf9\u8be5\u70b9\u5b50\u6811\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u4ea7\u751f\u989d\u5916\u7684\u5f71\u54cd\n\n```cpp\ncur=lower_bound(p+1,p+t+1,dis[k])-p;//\u5f53\u524d\u70b9\u7684\u79bb\u6563\u503c\npos=lower_bound(p+cur,p+t+1,dis[k]+R)-p;//\u6700\u8fdc\u80fd\u5230\u7684\u70b9\u7684\u79bb\u6563\u503c\nif(p[pos]>dis[k]+R) --pos;//\u8981\u6c42 \u5c0f\u4e8e\u7b49\u4e8e\nres=Query(pos),Modify(cur);//\u5148\u67e5\u8be2\uff0c\u518d\u4fee\u6539\n. . .\nAns[k]=Query(pos)-res;//\u518d\u6b21\u67e5\u8be2\uff0c\u8bb0\u5f55\u4e24\u6b21\u67e5\u8be2\u7684\u5dee\u4e3a\u7b54\u6848\n```\n\n### warning\n\n1\u3001\u8bb0\u5f97\u5f00 $long\\ long $\n\n2\u3001$1$ \u5230 $root$ \u7684 $dis$ \u503c\uff0c\u867d\u7136\u662f $0$ \u4e5f\u8981\u8bb0\u5f55\uff0c\u5426\u5219\u4f1a\u5f71\u54cd\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d $cur$ \u7684\u503c\uff0c\u95f4\u63a5\u5f71\u54cd\u7b54\u6848\uff0c\u5982\u4e0b\u56fe\u60c5\u51b5\uff0c\u82e5\u9898\u76ee\u4e2d\u7684 $L<10$ \u5219 $root$ \u7684\u7b54\u6848\u4f1a\u5c11 $1$ \uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7279\u5224\u89e3\u51b3\n\n![](https://hovnysilence.github.io/image/USACO12DEC-1.jpg)\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define rgt register\n#define LL long long\n#define N 200003\nusing namespace std;\nstruct Edge{\n\tint to,nxt;\n\tLL dis;\n\tEdge(int a,int b,LL c):to(a),nxt(b),dis(c){}\n\tEdge(){}\n}b[N];//\u8bb0\u5f55\u8fb9\nint head[N],n,t;\nint f[N],Ans[N];\nLL dis[N],p[N],R;\ninline LL read() {\n\trgt LL s=0;\n\trgt char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) s=(s<<1)+(s<<3)+c-'0',c=getchar();\n\treturn s;\n}\ninline void add(rgt int x,rgt int y) {\n\tb[++t]=Edge(y,head[x],read()),head[x]=t;\n}\ninline void built(rgt int k) {//\u9884\u5904\u7406dis\n\tp[++t]=dis[k];//1\u5230root\u7684\u8ddd\u79bb\u4e5f\u8981\u52a0\u5165\n\trgt int i,to;\n\tfor(i=head[k];i;i=b[i].nxt) {\n\t\tto=b[i].to,\n\t\tdis[to]=dis[k]+b[i].dis;\n\t\tbuilt(to);\n\t}\n}\ninline int Query(rgt int x) {\n\tint res=0;\n\tfor(;x;x-=x&(-x)) res+=f[x];\n\treturn res;\n}\ninline void Modify(rgt int x) {\n\tfor(;x<=t;x+=x&(-x)) ++f[x];\n}\ninline void solve(rgt int k) {\n\trgt int i,to,cur,res,pos;\n\tcur=lower_bound(p+1,p+t+1,dis[k])-p;\n\tpos=lower_bound(p+cur,p+t+1,dis[k]+R)-p;//\u5047\u88c5\u4ececur\u5f00\u59cb\u67e5\u80fd\u7701\u70b9\u65f6\u95f4\n\tif(p[pos]>dis[k]+R) --pos;\n\tres=Query(pos),Modify(cur);\n\tfor(i=head[k];i;i=b[i].nxt)\n\t\tto=b[i].to,solve(to);\n\tAns[k]=Query(pos)-res;\n}\nint main()\n{\n\tint i;\n\tn=read(),R=read();//n\u70b9\u6570\uff0cR\u8ddd\u79bb\n\tfor(i=2;i<=n;i++) add(read(),i);\n\tt=0,built(1),//\u7b2c\u4e00\u904ddfs\n\tsort(p+1,p+t+1),solve(1);//\u7b2c\u4e8c\u904ddfs\u5f97\u51fa\u7ed3\u679c\n\tfor(i=1;i<=n;i++) printf(\"%d\\n\",Ans[i]);\n\treturn 0;\n}\n```\n\n## \u6700\u540e\n\n\u5982\u679c\u9898\u76ee\u6ca1\u6709 `\u5b50\u6811\u4e2d`\u7684\u9650\u5236\u2026",
        "postTime": 1564388194,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    },
    {
        "content": "\u884c,\u6211\u5047\u8bbe\u8fd9\u9898\u771f\u6709\u7701\u9009\u96be\u5ea6.  \n\u6211\u611f\u89c9\u8fd9\u9898\u7684\u505a\u6cd5\u6570\u91cf\u975e\u5e38\u4e4b\u591a,\u63a5\u4e0b\u6765\u4ecb\u7ecd\u7b2c$5$\u79cd\u5947\u602a\u505a\u6cd5:\u6811\u4e0a\u4e8c\u5206.   \n\u8fd9\u4e2a\u505a\u6cd5\u8fd8\u662f\u57fa\u4e8e\u6811\u4e0a\u5dee\u5206\u7684,\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$u$,\u6211\u4eec\u8981\u627e\u5230\u5b83\u5411\u4e0a\u8df3$L$\u7684\u957f\u5ea6\u6700\u9ad8\u80fd\u591f\u8df3\u5230\u7684\u7956\u5148.(\u5f53\u7136\u500d\u589e\u6c42\u51fa\u8fd9\u4e2a\u8fde$dfs$\u90fd\u4e0d\u7528\u66f4\u52a0\u7c97\u66b4.)  \n\u56e0\u6b64\u6211\u4eec\u4e0d\u4ec5\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb$dis$,\u8fd8\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u8981\u7ecf\u8fc7\u8fb9\u7684\u8fb9\u6570,\u4e5f\u5373\u70b9\u7684\u6df1\u5ea6$dep$.  \n\u7136\u540e\u518d\u7528$tmp$\u6570\u7ec4\u8bb0\u5f55\u4ece\u6839\u8282\u70b9\u5230$u$\u7ecf\u8fc7\u7684\u6bcf\u4e00\u4e2a\u70b9,$tmp[i]$\u8868\u793a\u4ece\u6839\u8282\u70b9\u5230$u$\u7684\u8def\u5f84\u4e0a\u6df1\u5ea6\u4e3a$i$\u7684\u8282\u70b9\u7684\u7f16\u53f7,   \n\u53ea\u8981\u7528`tmp[dep[u]]=u`\u4e00\u53e5\u8bdd\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e86.   \n\u8bb0\u5f55\u4e86\u8def\u5f84\u4e0a\u7684\u70b9,\u63a5\u4e0b\u6765\u795e\u5947\u7684\u4e8b\u60c5\u53d1\u751f\u4e86.  \n\u53ef\u4ee5\u53d1\u73b0,\u8def\u5f84\u4e0a\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u662f\u5355\u8c03\u9012\u589e\u7684,\u6211\u4eec\u5728$tmp$\u6570\u7ec4\u91cc\u4e8c\u5206\u53ef\u4ee5\u627e\u5230\u79bb$u$\u8ddd\u79bb\u4e0d\u8d85\u8fc7$L$\u7684\u6700\u9ad8\u7956\u5148.\n\u8fd9\u6837\u5bf9\u6bcf\u4e2a\u70b9\u90fd\u5dee\u5206,\u6700\u540e$dfs$\u5904\u7406\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86.\n```cpp\n#include<bits/stdc++.h> //Ithea Myse Valgulious\n/*\u7701\u7565\u5feb\u8bfb\u5feb\u5199*/\nusing namespace std;\nconst int yuzu=2e5;\ntypedef int fuko[yuzu|10];\ntypedef ll rize[yuzu|10];\nstruct edge{int to; ll c;};\nvector<edge> lj[yuzu|10];\nfuko fa,ans,dep,tmp,cha;\nrize dis;\n\nvoid dfs(int u,ll len) {\ndep[u]=dep[fa[u]]+1; // \u6c42\u8282\u70b9u\u7684\u6df1\u5ea6\ntmp[dep[u]]=u; // \u8bb0\u5f55\u4ece\u6839\u8282\u70b9\u5230u\u6df1\u5ea6\u4e3adep[u]\u7684\u70b9.\nint l=1,r=dep[u],mid;\nfor (;l<r;dis[u]-dis[tmp[mid]]<=len?r=mid:l=mid+1) mid=l+r>>1;\n/*\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u4e8c\u5206\u80fd\u8df3\u5230\u7684\u6700\u9ad8\u7956\u5148*/\ncha[fa[tmp[l]]]--,cha[u]++; // \u5dee\u5206\nfor (edge i:lj[u]) \n  dis[i.to]=dis[u]+i.c,dfs(i.to,len);\n}\n\nint main() {\nint i,n; ll l,x;\nscanf(\"%d%lld\",&n,&l);\nfor (i=2;i<=n;++i) \n  scanf(\"%d%lld\",&fa[i],&x),\n  lj[fa[i]].push_back(edge{i,x});\ndfs(1,l);\nfor (i=n;i;--i) cha[fa[i]]+=cha[i]; \n/*\u7531\u4e8e\u6bcf\u4e2a\u70b9\u7684\u7236\u8282\u70b9\u5df2\u77e5\u5e76\u4e14\u80af\u5b9a\u6bd4\u539f\u8282\u70b9\u7f16\u53f7\u5c0f,\u53ef\u4ee5\u5012\u8fc7\u6765\u7528\u4e00\u4e2a\u5faa\u73af\u4ee3\u66ffdfs*/\nfor (i=1;i<=n;++i) printf(\"%d\\n\",cha[i]);\n}\n```",
        "postTime": 1539770593,
        "uid": 49371,
        "name": "Fuko_Ibuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3066 \u3010[USACO12DEC]\u9003\u8dd1\u7684BarnRunning Away From\u2026\u3011"
    }
]