[
    {
        "content": "\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u6027\u8d28\u662f\u7b54\u6848\u4e0d\u5927\u4e8e2\uff08\u89d2\u4e0a\u7684\u8df3\u86a4\u6700\u591a\u4e0e\u4e24\u4e2a\u76f8\u90bb\uff09\n\n\u7ee7\u800c\u53d1\u73b0\u7b54\u6848\u5176\u5b9e\u53ea\u53ef\u80fd\u662f-1\uff0c0\uff0c1\uff0c2~~\uff08\u5e9f\u8bdd\uff09~~\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n-1\uff1a$nm-c<2$\u6216\u8005$nm-c=2$\u4e14\u5269\u4e0b\u7684\u4e24\u53ea\u8df3\u86a4\u76f8\u90bb\uff1b\n\n0\uff1a\u539f\u56fe\u4e0d\u8fde\u901a\uff1b\n\n1\uff1a\u539f\u56fe\u8054\u901a\u4e14\u6709\u5272\u9876\uff1b\n\n\u5426\u5219\u4e3a2\u3002\n\n\u4f46$n,m\\le 10^9$\u8fd9\u79cd\u6570\u636e\u8303\u56f4\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u505a\u4e86\uff0c\u53d1\u73b0\u53ea\u6709\u86b1\u8722\u5468\u56f4\u7684\u8df3\u86a4\u53ef\u80fd\u662f\u5272\u9876\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u628a\u5b83\u4eec\u9009\u51fa\u6765\u5efa\u56fe\u5462\uff1f\n\nhack:\uff08\u4ee5\u4e0b\u5747\u7528#\u8868\u793a\u86b1\u8722\uff0c*\u8868\u793a\u9009\u51fa\u7684\u8df3\u86a4\uff0c.\u8868\u793a\u5176\u4f59\u8df3\u86a4\uff09\n\n```\n.**\n\n.*#\n\n.**\n```\n\n\n\u4e2d\u95f4\u7684*\u6210\u4e3a\u5047\u7684\u5272\u9876\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5411\u5916\u6269\u5c55\u4e24\u5708\uff0c\u7136\u540e\u5982\u679c\u5728\u7b2c\u4e00\u5708\u5185\u53d1\u73b0\u5272\u9876\uff0c\u90a3\u4e48\u624d\u771f\u6b63\u53d1\u73b0\u4e86\u5272\u9876\u3002\u8fd9\u4e2a\u53e6\u5916\u7684\u9898\u89e3\u4e5f\u6709\u8bb2\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4ed4\u7ec6\u8bf4\u4e86\u3002\n\n\u4f46\u662f\u5224\u8054\u901a\u6027\u4e5f\u6709\u8bb8\u591a\u5927\u5751\uff0c\u4f46\u8bb8\u591a\u9898\u89e3\u90fd\u6ca1\u63d0\uff0c\u6211\u6765\u63d0\u4e00\u4e0b\u6216\u8bb8\u662f\u6211\u592a\u849f\u4e86\n\n\u9996\u5148\u662f\u600e\u4e48\u5224\u3002\u4e0d\u80fd\u76f4\u63a5\u5728\u5efa\u597d\u7684\u56fe\u4e0a\u5224\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n```\n#**.**#\n```\n\n\u4f1a\u88ab\u5224\u4e3a\u4e0d\u8fde\u901a\u3002\u800c\u771f\u6b63\u7684\u4e0d\u8fde\u901a\u5177\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\u6211\u4eec\u53d1\u73b0\uff0c\u969c\u788d\u70b9\uff08\u86b1\u8722\uff09\u4f1a\u628a\u5b83\u5468\u56f4\u7684\u70b9\u5206\u6210\u81f3\u5c11\u4e24\u4e2a\u8054\u901a\u5757\uff0c\u7531\u6b64\u5f97\u5230\u7b97\u6cd51\uff1a\n\n**\u5bf9\u9009\u51fa\u7684\u7ed3\u70b9\u8fdb\u884c\u56db\u8054\u901afloodfill\uff0c\u68c0\u67e5\u6bcf\u4e2a\u969c\u788d\u5468\u56f4\u7684\u70b9\u662f\u5426\u5747\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\u3002**\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u5b98\u65b9\u6570\u636e\u4e86~~\uff0c\u4f46\u6211\u4eec\u8fd8\u6709\u4e07\u6076\u7684UOJ~~\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ef\u4ee5hack\u7684\uff1a\n\n```\n*###*\n```\n\n\u6bcf\u4e2a\u7ed3\u70b9\u5468\u56f4\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u8054\u901a\uff0c~~\u4e8e\u662f\u4f60WA\u7684\u4e00\u58f0\u54ed\u4e86\u51fa\u6765\uff0c~~\u6240\u4ee5\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u8fde\u5728\u4e00\u8d77\u7684\u969c\u788d\u4e00\u8d77\u5904\u7406\uff0c\u5f97\u5230\u7b97\u6cd52\uff1a\n\n**\u5bf9\u9009\u51fa\u7684\u7ed3\u70b9\u8fdb\u884c\u56db\u8054\u901afloodfill\uff0c\u5bf9\u969c\u788d\u8fdb\u884c\u516b\u8fde\u901afloodfill\uff0c\u68c0\u67e5\u6bcf\u4e2a\u969c\u788d\u5757\u5468\u56f4\u7684\u70b9\u662f\u5426\u5747\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\u3002**\n\n\u6ce8\u610f\uff0c\u5bf9\u7ed3\u70b9\u7684\u68c0\u67e5\u4e0d\u80fd\u5224\u91cd\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a\n\n```\n***\n###\n###\n###\n***\n*#*\n```\n\n\u5982\u679c\u5148\u68c0\u67e5\u4e86\u4e0b\u9762\u7684#\uff0c\u518d\u5728\u68c0\u67e5\u4e0a\u9762\u7684\u969c\u788d\u5757\u4f7f\u7701\u7565\u91cd\u590d\u8bbf\u95ee\uff0c\u90a3\u4e48\u5c06\u8fd4\u56de\u8054\u901a\u3002\n\n\u8fd9\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\n\u81f3\u4e8e\u5b9e\u73b0\u4e48\uff0c\u53cd\u6b63map\u4f1a\u88ab\u5361\uff0chash\u53c8\u4e0d\u96be\u6253\uff0c\u5f53\u7136\u9009\u62e9hash\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nconst int dx[4]={0,1,0,-1};\nconst int dy[4]={1,0,-1,0};\nconst int P=1000117;\nconst int N=100050;\nchar rB[1<<21],*rS,*rT;\ninline char gc(){return rS==rT&&(rT=(rS=rB)+fread(rB,1,1<<21,stdin),rS==rT)?EOF:*rS++;}\ninline int rd(){\n    char c=gc();\n    while(c<48||c>57)c=gc();\n    int x=c&15;\n    for(c=gc();c>=48&&c<=57;c=gc())x=(x<<3)+(x<<1)+(c&15);\n    return x;\n}\nint x[N],y[N],G[N*24],to[N*192],nxt[N*192],sz,cnt,pre[N*24],dfsc,n,m,c,tmpx[N*24],tmpy[N*24],ctmp;\nbool isok[N*24],iscut[N*24];\nstruct node{\n\tint x,y;\n\tnode(){}\n\tnode(int x,int y):x(x),y(y){}\n};\nqueue<node> Q,q;\nstruct Hash{  //\u7528hash\u5b9e\u73b0map\n\tint h[P],vx[N*25],vy[N*25],p[N*25],nxt[N*25],sz;\n\tinline void clear(){\n\t\tmemset(h,0,sizeof(h));sz=0;\n\t}\n\tinline void ins(int x,int y,int id){\n\t\tint pos=((ll)(x-1)*n+y-1)%P;\n\t\tvx[++sz]=x;vy[sz]=y;p[sz]=id;nxt[sz]=h[pos];h[pos]=sz;\n\t}\n\tinline int ask(int x,int y){\n\t\tfor(int k=h[((ll)(x-1)*n+y-1)%P];k;k=nxt[k])if(vx[k]==x&&vy[k]==y)return p[k];\n\t\treturn 0;\n\t}\n}h,col,tem;\ninline int Abs(int x){return x<0?-x:x;}\ninline int Max(int a,int b){return a>b?a:b;}\ninline void add(int u,int v){\n\tto[++sz]=v;nxt[sz]=G[u];G[u]=sz;\n\tto[++sz]=u;nxt[sz]=G[v];G[v]=sz;\n}\ninline bool check(){\n\tint i,j,k,tx,ty;\n\tfor(i=1;i<=n;++i)\n\t\tfor(j=1;j<=m;++j)if(!h.ask(i,j)){\n\t\t\tfor(k=0;k<4;++k)if((tx=i+dx[k])&&tx<=n&&(ty=j+dy[k])&&ty<=m&&!h.ask(tx,ty))return 1;\n\t\t\treturn 0;\n\t\t}\n}\ninline void bfs(int sx,int sy,int cl){  //\u7b2c\u4e00\u6b21floodfill\n\tint i,u,v,tx,ty;\n\tq.push(node(sx,sy));col.ins(sx,sy,cl);\n\twhile(!q.empty()){\n\t\tu=q.front().x;v=q.front().y;q.pop();\n\t\tfor(i=0;i<4;++i)if((tx=u+dx[i])&&tx<=n&&(ty=v+dy[i])&&ty<=m&&h.ask(tx,ty)>0&&!col.ask(tx,ty)){\n\t\t\tcol.ins(tx,ty,cl);  //\u7528col\u6765\u8bb0\u5f55\u6240\u5c5e\u8054\u901a\u5757\u7f16\u53f7\uff08\u4e5f\u6210\u4e3a\u989c\u8272\uff09\n\t\t\tq.push(node(tx,ty));\n\t\t}\n\t}\n}\ninline bool bfs2(int sx,int sy){\n\tint i,u,v,x,y,t;\n\tq.push(node(sx,sy));tem.ins(sx,sy,-1);\n\twhile(!q.empty()){\n\t\tu=q.front().x;v=q.front().y;q.pop();\n\t\tfor(x=Max(1,u-1);x<=n&&x<=u+1;++x)\n\t\t\tfor(y=Max(1,v-1);y<=m&&y<=v+1;++y)if((t=h.ask(x,y))&&!tem.ask(x,y))if(t==-1){\n\t\t\t\ttem.ins(x,y,-1);  //\u7528tem\u6765\u9632\u6b62\u5bf9\u969c\u788d\u7ed3\u70b9\u91cd\u590d\u8bbf\u95ee\n//\u5bf9\u8df3\u86a4\u7ed3\u70b9\u7684\u91cd\u590d\u8bbf\u95ee\u6700\u591a\u603b\u5171c*8\u4e2a\uff0c\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\n\t\t\t\tq.push(node(x,y));\n\t\t\t}else{tmpx[++ctmp]=x;tmpy[ctmp]=y;}\n\t}\n\tif(ctmp==-1)return 1;\n\tfor(i=1,t=col.ask(tmpx[0],tmpy[0]);i<=ctmp;++i)if(col.ask(tmpx[i],tmpy[i])!=t)return 0;\n\treturn 1;\n}\ninline bool ncon(){  //\u5224\u65ad\u662f\u5426\u4e0d\u8fde\u901a\n\tint i,u,v,ccl=0;\n\tcol.clear();\n\twhile(!Q.empty()){\n\t\tu=Q.front().x;v=Q.front().y;Q.pop();\n\t\tif(col.ask(u,v))continue;\n\t\tbfs(u,v,++ccl);\n\t}\n\ttem.clear();\n\tfor(i=0;i<c;++i)if(!tem.ask(x[i],y[i])){\n\t\tctmp=-1;\n\t\tif(!bfs2(x[i],y[i]))return 1;\n\t}\n\treturn 0;\n}\nint dfs(int u,int fa){  //dfs\u6c42\u5272\u9876\n\tint i,v,lowu=pre[u]=++dfsc,lowv,chd=0;\n\tfor(i=G[u];i;i=nxt[i])if((v=to[i])!=fa)if(!pre[v]){\n\t\t++chd;\n\t\tif((lowv=dfs(v,u))>=pre[u])iscut[u]=1;\n\t\tif(lowv<lowu)lowu=lowv;\n\t}else if(pre[v]<lowu)lowu=pre[v];\n\tif(!fa&&chd==1)iscut[u]=0;\n\treturn lowu;\n}\nint main(){\n\tint T=rd(),i,j,k,l,t,tt,tx,ty;\n\tbool ok;\n\twhile(T--){\n\t\tn=rd();m=rd();c=rd();\n\t\th.clear();\n\t\tfor(i=0;i<c;++i){\n\t\t\tx[i]=rd();y[i]=rd();\n\t\t\th.ins(x[i],y[i],-1);\n\t\t}\n\t\tif((ll)n*m-c<2ll){\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tif((ll)n*m-c==2ll){\n\t\t\tputs(check()?\"-1\":\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(G,0,sizeof(G));ok=sz=cnt=dfsc=0;\n\t\tmemset(pre,0,sizeof(pre));\n\t\tmemset(iscut,0,sizeof(iscut));\n\t\tmemset(isok,0,sizeof(isok));\n        //\u5efa\u56fe\n\t\tfor(i=0;i<c;++i)\n\t\t\tfor(j=Max(1,x[i]-2);j<=x[i]+2&&j<=n;++j)\n\t\t\t\tfor(k=Max(1,y[i]-2);k<=y[i]+2&&k<=m;++k)if(!(t=h.ask(j,k))){\n\t\t\t\t\th.ins(j,k,++cnt);Q.push(node(j,k));\n\t\t\t\t\tisok[cnt]=Max(Abs(j-x[i]),Abs(k-y[i]))<=1;\n\t\t\t\t\tfor(l=0;l<4;++l)if((tx=j+dx[l])&&tx<=n&&(ty=k+dy[l])&&ty<=m&&(tt=h.ask(tx,ty))>0)add(cnt,tt);\n\t\t\t\t}else if(t>0&&Max(Abs(j-x[i]),Abs(k-y[i]))<=1)isok[t]=1;\n\t\tif(ncon()){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(n==1||m==1){  //\u4e00\u884c\u6216\u4e00\u5217\u53ef\u4ee5\u7279\u5224\n\t\t\tputs(\"1\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(i=1;i<=cnt;++i){\n\t\t\tif(!pre[i])dfs(i,0);\n\t\t\tif(isok[i]&&iscut[i]){\n\t\t\t\tputs(\"1\");\n\t\t\t\tok=1;break;\n\t\t\t}\n\t\t}\n\t\tif(!ok)puts(\"2\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564987341,
        "uid": 57926,
        "name": "Thinking",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1173 \u3010[NOI2016]\u7f51\u683c\u3011"
    },
    {
        "content": "**UPD:\u88ab\u53c9\u4e86\uff0c\u52a0\u4e86\u4e00\u4e2a\u7279\u5224\uff0c\u679c\u7136\u8fd9\u9898\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u7279\u5224\u7684...**\n\n\u5c06\u6709\u86d0\u86d0\u7684\u770b\u505a\u9ed1\u70b9\uff0c\u6709\u8df3\u86a4\u7684\u770b\u505a\u767d\u70b9\u3002\n\n\u663e\u7136\u7b54\u6848\u53ea\u53ef\u4ee5\u662f\u65e0\u89e3\u6216\u8005 $0,1,2$\u3002\n\n- \u82e5\u6240\u6709\u56db\u8054\u901a\u7684\u767d\u8272\u683c\u5b50\u7ec4\u6210\u7684\u56fe\u4e0d\u8fde\u901a\uff0c\u5219\u7b54\u6848\u662f $0$\u3002\n\n- \u5426\u5219\u82e5\u56fe\u6709\u5272\u70b9\uff0c\u5219\u7b54\u6848\u4e3a $1$\n\n- \u5426\u5219\u82e5\u56fe\u53ea\u6709\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u70b9\uff0c\u5219\u65e0\u89e3\n\n- \u5426\u5219\u4e3a $2$\n\n\u524d\u4e09\u4e2a\u60c5\u51b5\u662f\u663e\u7136\u7684\uff0c\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u5206\u56fe\u6709 $3$ \u4e2a\u70b9\u548c\u8d85\u8fc7 $3$ \u4e2a\u5206\u522b\u8bc1\u660e\u3002\n\n\u4e8e\u662f\u76f4\u63a5\u5efa\u56fe\u8dd1 tarjan \u5373\u53ef $\\mathcal{O}(nm)$\u3002\n\n\u7136\u800c\u8fd9\u5f20\u56fe\u70b9\u5f88\u591a\u4f46\u662f\u7a7a\u4f4d\u5f88\u5c11\uff0c\u8003\u8651\u5c06\u5176\u7f29\u6210\u4e00\u4e2a\u70b9\u6570\u8fb9\u6570\u5747\u4e3a $\\mathcal{O}(c)$ \u7684\u56fe\u4f7f\u5f97\u7f29\u5b8c\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u8003\u8651\u53ea\u4fdd\u7559\u4ee5\u4e0b\u767d\u70b9\uff1a\n\n- \u4e0e\u7f51\u683c\u56db\u4e2a\u89d2\u7684\u81f3\u5c11\u4e00\u4e2a\u89d2\u7684 $x,y$ \u5750\u6807\u4e4b\u5dee $\\leq2$\n\n- \u4e0e\u67d0\u4e2a\u9ed1\u70b9\u516b\u8fde\u901a\n\n- \u5728\u7f51\u683c\u7684\u4e0a\u8fb9\u6216\u4e0b\u8fb9\u4e0a\uff0c\u4e14\u6240\u5728\u5217\u6709\u81f3\u5c11\u4e00\u4e2a\u9ed1\u70b9\n\n- \u5728\u7f51\u683c\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u4e0a\uff0c\u4e14\u6240\u5728\u884c\u6709\u81f3\u5c11\u4e00\u4e2a\u9ed1\u70b9\n\n\n\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u5269\u4e0b\u7684\u767d\u70b9\uff0c\u82e5\u4e24\u4e2a\u767d\u70b9\u70b9\u5728\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217\uff0c\u4e14\u4e2d\u95f4\u6ca1\u6709\u5176\u5b83\u70b9\uff08\u5305\u62ec\u9ed1\u70b9\u9ed1\u5269\u4e0b\u7684\u767d\u70b9\uff09\uff0c\u5c31\u8fde\u4e00\u6761\u8fb9\u3002\n\n**\u6ce8\u610f\u5e76\u4e0d\u662f\u53ea\u5efa\u56db\u8fde\u901a\u7684\u8fb9\u3002**\n\n\u4f8b\u5982\u8fd9\u6837\uff0c\u84dd\u8272\u7684\u683c\u5b50\u662f\u4fdd\u7559\u4e0b\u6765\u7684\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jpb2qvk5.png)\n\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u5f20\u56fe\u7684\u7b54\u6848\u4e0e\u539f\u56fe\u7684\u7b54\u6848\u5927\u591a\u6570\u60c5\u51b5\u662f\u4e00\u6837\u7684\uff0c\u4f46\u5224 $-1$ \u7684\u65f6\u5019\u9700\u8981\u7279\u5224\u4e00\u4e0b\u82e5\u56fe\u6709\u4e24\u4e2a\u70b9\u4f46\u8fd9\u4e24\u4e2a\u70b9\u867d\u7136\u6709\u8fb9\u4f46\u4e0d\u56db\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u5b9e\u9645\u4e0a\u4f1a\u6709\u81f3\u5c11\u4e09\u4e2a\u70b9\u5728\u91cc\u9762\uff0c\u7b54\u6848\u662f $1$\uff0c\u6216\u8005\u53ef\u4ee5\u5224\u4e00\u4e0b $n=1,m=1$ \u4e5f\u53ef\u4ee5\u3002\n\n\n~~\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5bf9\u7684\uff0c\u4ee5\u53ca\u5982\u679c\u662f\u5bf9\u7684\u548b\u8bc1\uff0c\u53cd\u6b63\u8fc7\u4e86\u6240\u6709 uoj hack \u6570\u636e~~\uff0c\u6b22\u8fce\u7ee7\u7eedhack\u3002\n\n\u800c\u4e14\u8003\u8651\u6bcf\u4e2a\u9ed1\u70b9\u53ea\u4f1a\u6700\u591a\u8d21\u732e\u5b83\u5468\u56f4 $8$ \u4e2a\uff0c\u4ee5\u53ca\u8fb9\u4e0a $4$ \u4e2a\u5171 $12$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u4e00\u5171 $\\mathcal{O}(c)$ \u4e2a\u70b9\u3002\n\n\u6240\u4ee5\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u5efa\u56fe\uff0c\u590d\u6742\u5ea6 $\\Theta(c\\log c)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//dengyaotriangle!\n\nint n,m,c;\n\nconst int maxn=2e7+10;\nstruct node{\n    int x,y,t;\n    node(){}\n    node(int x,int y,int t):x(x),y(y),t(t){}\n}a[maxn];\nint t,q;\n\nbool cmp1(const node&a,const node&b){\n    return a.x==b.x?(a.y==b.y?a.t<b.t:a.y<b.y):a.x<b.x;\n}\nbool cmp2(const node&a,const node&b){\n    return a.y==b.y?a.x<b.x:a.y<b.y;\n}\nvector<int> adj[maxn];\nint dfn[maxn],low[maxn],tfa[maxn],c1;\n\nbool gt0;\n\nvoid tarjan(int u){\n    dfn[u]=low[u]=++c1;\n    int cch=0;\n    for(int i=0;i<(int)adj[u].size();i++){\n        int v=adj[u][i];\n        if(!dfn[v]){\n            tfa[v]=u;\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n            if(low[v]>=dfn[u]){\n                if(tfa[u])gt0=1;\n                else cch++;\n            }\n        }else if(v!=tfa[u])low[u]=min(low[u],dfn[v]);\n    }\n    if(cch>1)gt0=1;\n}\nvoid addprem(int x,int y,int radx,int rady){\n    for(int dx=-radx;dx<=radx;dx++){\n        for(int dy=-rady;dy<=rady;dy++){\n            int cx=x+dx,cy=y+dy;\n            if(1<=cx&&cx<=n&&1<=cy&&cy<=m){\n                a[++t]=node(cx,cy,0);\n            }\n        }\n    }\n}\nint main(){\n    ios::sync_with_stdio(0);cin.tie(0);\n    int t_;\n    cin>>t_;\n    while(t_--){\n        cin>>n>>m>>c;\n        t=q=0;\n        for(int i=1;i<=c;i++){\n            int x,y;cin>>x>>y;\n            addprem(x,y,1,1);\n            addprem(1,y,0,0);addprem(n,y,0,0);addprem(x,1,0,0);addprem(x,m,0,0);\n            a[++t]=node(x,y,-1);\n        }\n        addprem(1,1,2,2);addprem(1,m,2,2);addprem(n,1,2,2);addprem(n,m,2,2);\n        sort(a+1,a+1+t,cmp1);\n        int cp=0;node buf(INT_MAX,INT_MAX,1);\n        for(int i=1;i<=t;i++){\n            if(a[i].x!=buf.x||a[i].y!=buf.y){\n                buf=a[i];a[++cp]=buf;\n            }\n        }\n        t=cp;\n        for(int i=1;i<=t;i++)if(a[i].t!=-1)a[i].t=++q;\n        for(int i=1;i<=q;i++)adj[i].clear(),dfn[i]=0;\n        c1=0;\n        for(int i=2;i<=t;i++){\n            if(a[i].x==a[i-1].x&&a[i].t!=-1&&a[i-1].t!=-1){\n                adj[a[i].t].push_back(a[i-1].t);\n                adj[a[i-1].t].push_back(a[i].t);\n            }\n        }\n        sort(a+1,a+1+t,cmp2);\n        for(int i=2;i<=t;i++){\n            if(a[i].y==a[i-1].y&&a[i].t!=-1&&a[i-1].t!=-1){\n                adj[a[i].t].push_back(a[i-1].t);\n                adj[a[i-1].t].push_back(a[i].t);\n            }\n        } \n        if(q<=1){\n            cout<< -1<<'\\n';\n            continue;\n        }\n        if(q==2&&adj[1].size()){\n            int id[2];\n            for(int i=1;i<=t;i++)if(a[i].t>=1&&a[i].t<=2)id[a[i].t-1]=i;\n            if(abs(a[id[0]].x-a[id[1]].x)+abs(a[id[0]].y-a[id[1]].y)==1){\n                cout<< -1<<'\\n';\n                continue;\n            }else{\n                cout<<1<<'\\n';\n                continue;\n            }\n        }\n        gt0=0;\n        tarjan(1);\n        if(c1!=q){\n            cout<< 0<<'\\n';\n        }else cout<<(gt0?1:2)<<'\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1624613447,
        "uid": 62598,
        "name": "dengyaotriangle",
        "ccfLevel": 10,
        "title": "\u3010\u9898\u89e3\u3011P1173 [NOI2016] \u7f51\u683c"
    },
    {
        "content": "# \u524d\u8a00\n\n\u8fd9\u4e2a\u7801\u91cf\u7edd\u5bf9\u662f\u4e1a\u754c\u5927\u6bd2\u7624......\n\n$300$ \u884c\uff0c$6.5$ k\uff0c\u70e6\u7684\u8981\u6b7b......\n\n\u597d\u5728\u7206\u809d\u4e09\u5929\u7ec8\u4e8e\u5199\u51fa\u6765\u4e86......\n\n\u63d0\u9192\u4e00\u4e0b\uff1a\u672c\u7bc7\u9898\u89e3\u8f83\u957f\uff0c\u8bf7\u4ed4\u7ec6\u9605\u8bfb\u3002\n\n# \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u91cc\u9762\u6709 $0$ \u6216$1$\u3002\u4f60\u9700\u8981\u628a\u4e00\u4e9b $0$ \u6362\u6210 $1$ \u4f7f\u5f97\u5b58\u5728\u67d0\u4e24\u4e2a $0$ \u4e0d\u56db\u8054\u901a\u3002\u8f93\u51fa\u6700\u5c0f\u7684\u6362\u7684\u6570\u91cf\u3002\u65e0\u89e3 $-1$\u3002\n\n# \u5206\u6790\u4e00\u4e0b\n\n\u9996\u5148\u770b\u6570\u636e\u8303\u56f4\uff0c$n,m<=1e9$,\u7f51\u683c\u4e2d $1$ \u7684\u6570\u91cf $<=1e5$,\u591a\u7ec4\u6570\u636e\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u591a\u53ea\u8981 $2$ \u5c31\u884c\u4e86(\u56f4\u4f4f\u4e00\u4e2a\u89d2\u843d)\uff0c\u6240\u4ee5\u7b54\u6848\u662f $[-1,2]$ \u4e2d\u7684\u6574\u6570\u3002\n\n\u7136\u540e\u8003\u8651\u4f55\u65f6\u4e3a $-1$\uff1a$0$ \u7684\u6570\u76ee\u5c0f\u4e8e $2$ \u6216\u7b49\u4e8e $2$ \u4e14\u76f8\u8fde\u3002\n\n\u4f55\u65f6\u4e3a $0$\uff1a\u56fe\u521d\u59cb\u5c31\u4e0d\u8fde\u901a\u3002\n\n\u4f55\u65f6\u4e3a $1$\uff1a\u56fe\u4e2d\u5b58\u5728\u5272\u70b9\u3002\n\n\u9664\u6b64\u4e4b\u5916\u5c31\u662f $2$ \u4e86\u3002\n\n\u7136\u540e\u53d1\u73b0\u56fe\u5f88\u5927\uff0c$c$ \u5f88\u5c0f\uff0c\u8003\u8651\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u53d1\u73b0\u6211\u4eec\u53ea\u8981\u628a\u6bcf\u4e2a $1$ \u5468\u56f4\u7684\u70b9\u63d0\u53d6\u51fa\u6765\u5373\u53ef\u3002\n\n\u63d0\u53d6 $3 \\times 3$ \u662f\u9519\u8bef\u7684\uff0c\u6709\u4e2a\u4f17\u4eba\u7686\u77e5\u7684\u6837\u4f8b\uff1a\n\n~~~\n0 0 0\n\n0 0 0\n\n0 0 1\n~~~\n\n\u663e\u7136\u63d0\u53d6\u4e4b\u540e\u4f1a\u6709\u4e00\u4e2a**\u5272\u70b9\u5728\u539f\u56fe\u6b63\u4e2d\u95f4\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5b83\u5e76\u4e0d\u662f\u5272\u70b9\u3002**\n\n\u7136\u540e\u6211\u4eec**\u66b4\u529b\u4e00\u70b9**\uff0c\u63d0\u53d6 $5 \\times 5$ \u5373\u53ef......\n\n\u7b97\u6cd5\u6d41\u7a0b\uff1a**\u63d0\u53d6\u70b9\uff0c\u7f16\u53f7\u3002**\u7136\u540e**\u5224\u65ad\u8054\u901a\u6027**\u3002\u7136\u540e\u505atarjan\uff0c\u5224\u65ad\u5272\u70b9\u3002\n\n\u7136\u540e\u53c8\u6709**\u597d\u591a\u5751\u70b9**...\u6bd4\u5982\u5272\u70b9\u5fc5\u987b\u5728\u67d0\u4e2a $1$ \u7684\u5468\u56f4 $3 \\times 3$\u533a\u57df(\u6613\u8bc1)\uff0c\u5982\u679c\u5ffd\u89c6\u8fd9\u4e2a\u5c31\u4f1a\u51fa\u73b0\u4e00\u79cd\u6bd2\u7624\u60c5\u51b5(\u7279\u522b\u63d0\u9192\uff0c\u672c\u4eba\u8c03\u4e86\u534a\u5929\u624d\u8c03\u51fa\u6765)\uff1a\n\n~~~\n1 0 0 0 0 0\n\n0 0 0 0 0 0\n\n0 0 0 0 0 0\n\n0 0 0 0 0 0\n\n0 0 0 0 0 1\n~~~\n\u53ef\u4ee5\u53d1\u73b0\u5728\u5947\u602a\u7684\u5730\u65b9\u51fa\u73b0\u4e86\u5272\u70b9...\n\n\u7136\u540e\u8fd8\u8981\u7279\u5224\uff0c$(n - 1)(m - 1) = 0$ \u7684\u65f6\u5019\u7b54\u6848\u4e0d\u53ef\u80fd\u4e3a $2$\u3002\n\n\u7136\u540e\u6012\u5199\u4e00\u5929\u534a\u7ec8\u4e8e\u5bf9\u4e86\uff0c\u53c8\u53d1\u73b0 $map$ \u592a\u6162\u8dd1\u4e0d\u8fc7......\u624b\u5199hash\u3002\n\n\u7ec8\u4e8eA\u4e86....\u7136\u540euoj\u65e5\u5e38 $97$ \u5206......\n\n\u5982\u4f55\u5224\u65ad\u7b54\u6848\u4e3a $0$\uff1a\u5bf9\u90a3\u4e9b\u63d0\u53d6\u51fa\u6765\u7684\u975e\u5173\u952e\u70b9\u8fdb\u884c\u5e76\u67e5\u96c6\u3002\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u5173\u952e\u70b9\u8fde\u901a\u5757\uff0c\u5982\u679c\u67d0\u4e2a\u5173\u952e\u70b9\u8fde\u901a\u5757\u8fde\u7740\u4e24\u4e2a\u5e76\u67e5\u96c6\uff0c\u7b54\u6848\u4e3a $0$\u3002\n\nAC code:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline void read(int &x) {\n     x = 0;\n     char c = getchar();\n     while(c < '0' || c > '9') {\n         c = getchar();\n     }\n     while(c >= '0' && c <= '9') {\n         x = (x << 3) + (x << 1) + c - 48;\n         c = getchar();\n     }\n     return;\n }\n \n const int N = 100010;\n const int dx[4] = {0, 1, 0, -1};\n const int dy[4] = {1, 0, -1, 0};\n \n const int MO = 19260817, B = 998244353;\n struct POS {\n     int x, y, h;\n     POS(int xx = 0, int yy = 0) {\n         x = xx;\n         y = yy;\n         h = (1ll * x * B + y) % MO;\n         if(h < 0) {\n             h += MO;\n         }\n     }\n     inline bool operator ==(const POS &d) const {\n         return x == d.x && y == d.y;\n     }\n };\n struct Node {\n     int nex, val;\n     POS p;\n }node[N * 30]; int top;\n struct MAP {\n     int e[MO];\n     inline void insert(const POS &d, const int &a) {\n         node[++top].val = a;\n         node[top].nex = e[d.h];\n         node[top].p = d;\n         e[d.h] = top;\n         return;\n     }\n     inline int find(const POS &d) { // if not exist  return 0\n         for(int i = e[d.h]; i; i = node[i].nex) {\n             if(node[i].p == d) {\n                 return node[i].val;\n             }\n         }\n         return 0;\n     }\n     inline void clear() {\n         memset(e, 0, sizeof(e));\n         return;\n     }\n }mp, use;\n \n int n, m, c, xi[N], yi[N], tot, num, root;\n int dfn[N * 25], low[N * 25], vis[N * 25];\n bool cut[N * 25], vis_c[N], OK;\n \n inline void np(int x, int y) {\n     if(!mp.find(POS(x, y)) && !use.find(POS(x, y))) {\n         mp.insert(POS(x, y), ++tot);\n     }\n     return;\n }\n \n inline int get(int x, int y) {\n     return mp.find(POS(x, y));\n }\n \n void tarjan(int s, int x, int y) {\n     dfn[s] = low[s] = ++num;\n     int temp = 0;\n     for(int i = 0; i < 4; i++) {\n         int t = get(x + dx[i], y + dy[i]);\n         if(!t) {\n             continue;\n         }\n         if(!dfn[t]) {\n             tarjan(t, x + dx[i], y + dy[i]);\n             low[s] = std::min(low[s], low[t]);\n             if(low[t] >= dfn[s]) {\n                 temp++;\n             }\n         }\n         else {\n             low[s] = std::min(low[s], dfn[t]);\n         }\n     }\n     if(temp >= 2 || (temp == 1 && s != root)) {\n         cut[s] = 1;\n     }\n     return;\n }\n \n void DFS_1(int s, int x, int y, int temp) {\n     vis[s] = temp;\n     for(int i = 0;i < 4; i++) {\n         int t = get(x + dx[i], y + dy[i]);\n         if(!t) {\n             continue;\n         }\n         if(!vis[t]) {\n             DFS_1(t, x + dx[i], y + dy[i], temp);\n         }\n     }\n     return;\n }\n \n bool fd;\n int number;\n \n bool DFS_2(int s, int x, int y) {\n     vis_c[s] = 1;\n     for(int i = 0; i < 4; i++) {\n         if(use.find(POS(x + dx[i], y + dy[i]))) {\n             int ed = use.find(POS(x + dx[i], y + dy[i]));\n             if(vis_c[ed]) {\n                 continue;\n             }\n             int t = DFS_2(ed, x + dx[i], y + dy[i]);\n             if(!t) {\n                 return 0;\n             }\n         }\n         else if(get(x + dx[i], y + dy[i])) {\n             if(!fd) {\n                 number = vis[get(x + dx[i], y + dy[i])];\n                 fd = 1;\n             }\n             else if(number != vis[get(x + dx[i], y + dy[i])]) {\n                 OK = 0;\n                 return 0;\n             }\n         }\n     }\n     return 1;\n }\n \n inline bool check() {\n     OK = 1;\n     int temp = 0;\n     for(int i = 1; i <= c; i++) {\n         for(int x = xi[i] - 2; x <= xi[i] + 2; x++) {\n             for(int y = yi[i] - 2; y <= yi[i] + 2; y++) {\n                 if(vis_c[i]) {\n                     continue;\n                 }\n                 if(mp.find(POS(x, y)) && !vis[get(x, y)]) {\n                     ++temp;\n                     DFS_1(get(x, y), x, y, temp);\n                     goto f1;\n                 }\n             }\n         }\n         f1:\n         if(!vis_c[i]) {\n             fd = 0;\n             DFS_2(i, xi[i], yi[i]);\n         }\n         if(!OK) {\n             break;\n         }\n     }\n     return !OK;\n }\n \n inline int solve() {\n     read(n);\n     read(m);\n     read(c);\n     if(!c) {\n         if(n == 1 && m == 1) {\n             return -1;\n         }\n         if(n == 1 || m == 1) {\n             if(n == 2 || m == 2) {\n                 return -1;\n             }\n             return 1;\n         }\n         return 2;\n     }\n     for(int i = 1; i <= c; i++) {\n         read(xi[i]);\n         read(yi[i]);\n         use.insert(POS(xi[i], yi[i]), i);\n     }\n     if(c + 1 >= 1ll * n * m) {\n         return -1;\n     }\n     for(int i = 1; i <= c; i++) {\n         for(int x = xi[i] - 2; x <= xi[i] + 2; x++) {\n             for(int y = yi[i] - 2; y <= yi[i] + 2; y++) {\n                 if(x > 0 && y > 0 && x <= n && y <= m && (x != xi[i] || y != yi[i])) {\n                     np(x, y);\n                 }\n             }\n         }\n     }\n     if(check()) {\n         return 0;\n     }\n     if(c + 2 == 1ll * n * m) {\n         return -1;\n     }\n     if(m == 1 || n == 1) {\n         return 1;\n     }\n     for(int i = 1; i <= c; i++) {\n         for(int x = xi[i] - 2; x <= xi[i] + 2; x++) {\n             for(int y = yi[i] - 2; y <= yi[i] + 2; y++) {\n                 if(!use.find(POS(x, y))) {\n                     root = get(x, y);\n                     if(dfn[root]) {\n                         continue;\n                     }\n                     tarjan(root, x, y);\n                 }\n             }\n         }\n     }\n \n     for(int i = 1; i <= c; i++) {\n         for(int x = xi[i] - 1; x <= xi[i] + 1; x++) {\n             for(int y = yi[i] - 1; y <= yi[i] + 1; y++) {\n                 int s = get(x, y);\n                 if(cut[s]) {\n                     return 1;\n                 }\n             }\n         }\n     }\n     return 2;\n }\n \n inline void clear() {\n     mp.clear();\n     use.clear();\n     memset(dfn + 1, 0, tot * sizeof(int));\n     memset(low + 1, 0, tot * sizeof(int));\n     memset(cut + 1, 0, tot * sizeof(bool));\n     memset(vis + 1, 0, tot * sizeof(int));\n     memset(vis_c + 1, 0, c * sizeof(bool));\n     tot = 0;\n     num = 0;\n     top = 0;\n     return;\n }\n \n int main() {\n     int T;\n     read(T);\n     while(T--) {\n         printf(\"%d\\n\", solve());\n         if(T) {\n             clear();\n         }\n     }\n     return 0;\n }\n\n```\n",
        "postTime": 1634129157,
        "uid": 464732,
        "name": "luqyou",
        "ccfLevel": 5,
        "title": "solution-p1173"
    },
    {
        "content": "[\u535a\u5ba2\u4e5f\u6709\u8be6\u89e3\uff0c\u6b22\u8fce\u6765\u8e29](https://www.cnblogs.com/NaVi-Awson/p/9261497.html)\n\n## Description\n\n\u7ed9\u51fa\u4e00\u5f20 $n\\times m$ \u7684\u7f51\u683c\uff0c\u5728\u5176\u4e2d\u5220\u53bb $c$ \u4e2a\u683c\u5b50\uff0c\u95ee\u81f3\u5c11\u518d\u5220\u53bb\u51e0\u4e2a\u80fd\u4f7f\u5f97\u56fe\u4e0a\u5b58\u5728\u4e24\u70b9\u4e0d\u8fde\u901a\uff0c\u6216\u8f93\u51fa\u65e0\u89e3\u3002\n\n\u591a\u7ec4\u8be2\u95ee\uff0c\u8be2\u95ee\u7ec4\u6570 $T$ \u3002\n\n$1\\leq T\\leq 20,1\\leq n,m\\leq 10^9,\\sum c\\leq 10^5$\n\n## Solution\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u53ea\u4f1a\u5728 $-1,0,1,2$ \u4e4b\u95f4~~\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u968f\u673a\u8f93\u51fa\u5176\u4e2d\u4e00\u4e2a\u6570\uff0c\u4ee5 $\\frac{1}{4^T}$ \u7684\u6982\u7387\u901a\u8fc7\u8fd9\u9053\u9898~~\u3002\n\n\u90a3\u4e48\u5206\u7c7b\u8ba8\u8bba\u3002\n\n - \u5982\u679c\u7b54\u6848\u4e3a $-1$ \uff0c\u663e\u7136\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u53ea\u6709\u5269\u4e00\u4e2a\u683c\u5b50\uff0c\u6216\u8005\u53ea\u6709\u4e24\u4e2a\u683c\u5b50\u4e14\u4e24\u4e2a\u683c\u5b50\u76f8\u90bb\u3002\u8fd9\u4e9b\u662f\u53ef\u4ee5\u76f4\u63a5\u7279\u5224\u7684\u3002\n - \u5982\u679c\u7b54\u6848\u4e3a $0$ \uff0c\u663e\u7136\u662f\u539f\u56fe\u5df2\u7ecf\u51fa\u73b0\u4e86\u4e0d\u8fde\u901a\u7684\u72b6\u51b5\u3002\n - \u82e5\u679c\u7b54\u6848\u4e3a $1$ \uff0c\u90a3\u4e48\u539f\u56fe\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5220\u53bb\u8fd9\u4e2a\u70b9\u540e\u56fe\u4e0d\u8054\u901a\uff0c\u5373\u539f\u56fe\u5b58\u5728\u5272\u70b9\u3002\n - \u5426\u5219\u7b54\u6848\u4e3a $2$ \u3002\n\n\u7531\u4e8e\u5750\u6807\u8fc7\u5927\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5728\u539f\u56fe\u4e0a\u6c42\u89e3\uff0c\u8003\u8651\u79bb\u6563\u3002\u5176\u5b9e\u6ce8\u610f\u5230\u7f51\u683c\u4e0a\u7559\u6709\u7684\u683c\u5b50\u6709\u7528\u7684\u53ea\u662f\u4e0e\u6bcf\u4e2a\u5220\u6389\u7684\u683c\u5b50\u516b\u8fde\u901a\u7684\u683c\u5b50\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u683c\u5b50\u7559\u4e0b\u6765\u5efa\u56fe\u3002\u4e0d\u8fc7\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u662f\u8fb9\u754c\u95ee\u9898\uff0c\u4e3e\u4e00\u4e2a\u4f8b\u5b50\n\n```\n.....\n...00\n...X1\n...00\n.....\n```\n\n\u5982\u9898\u539f\u672c\u662f\u4e00\u4e2a $5\\times 5$ \u7684\u683c\u5b50\uff0c\u5728 $(3,5)$ \u88ab\u5220\u6389\u4e86\u4e00\u4e2a\u683c\u5b50\uff0c\u5982\u679c\u6211\u4eec\u53ea\u8003\u8651\u516b\u8fde\u901a\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0 $\\text{X}$ \u662f\u4e00\u4e2a\u5272\u70b9\uff0c\u7136\u800c\u5728\u539f\u56fe\u4e2d\u5e76\u4e0d\u662f\uff0c\u6240\u4ee5\u5c31\u8003\u8651\u5c06\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u70b9\u7684\u5468\u56f4 $5\\times 5$ \u7684\u683c\u5b50\uff08\u5171 $24$ \u4e2a\uff09\u90fd\u62ff\u4e0b\u6765\u5efa\u65b0\u56fe\u3002\u8fd9\u6837\u70b9\u6570\u662f $O(24\\sum c)$ \u7684\u3002\n\n\u7279\u5224\u6389 $-1,0$ \u4e4b\u540e\uff0c\u5c31\u8dd1\u4e00\u904d $\\text{tarjan}$ \u5224\u662f\u5426\u6709\u5272\u70b9\u5373\u53ef\u3002\n\n## Code\n\n\u6211\u7528\u4e86 $\\text{map}$ \uff0c\u5728 $\\text{luogu}$ \u4e0a\u8fc7\u4e0d\u53bb...\uff08 $\\text{bzoj}$ \u8fc7\u4e86\u5c31\u82df\u4e14\u5077\u751f...233333...\n\n```cpp\n#include <bits/stdc++.h>\n#define pb push_back\nusing namespace std;\nconst int N = 100000+5;\nconst int w1[8] = {1, -1, 0, 0, 1, 1, -1, -1};\nconst int w2[8] = {0, 0, 1, -1, -1, 1, -1, 1};\nvoid gi(int &x) {\n\tchar ch = getchar(); x = 0;\n\tfor (; ch < '0' || ch > '9'; ch = getchar());\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar()) x = (x<<1)+(x<<3)+ch-48;\n}\n\nint n, m, c, u, v, idx, color[N<<3], cnt;\nstruct pii {\n\tint first, second;\n\tpii (int _first = 0, int _second = 0) {first = _first, second = _second; }\n\tbool operator < (const pii &b) const {\n\t\treturn first == b.first ? second < b.second : first < b.first;\n\t}\n\tbool operator == (const pii &b) const {return first == b.first && second == b.second; }\n};\npii a[N], t, t1;\nmap<pii, int>id, mp;\nqueue<pii>Q, P;\nstruct tt {int to, next; }edge[N<<6];\nint path[N<<3], top, rk[N<<3], iscut[N<<3], dfn[N<<3], low[N<<3], times;\n\nbool exist(int u, int v) {\n\tt = a[lower_bound(a+1, a+c+1, pii(u, v))-a];\n\treturn t.first == u && t.second == v;\n}\nbool outof(int x, int y, int u, int d, int l, int r) {\n\treturn x < u || x > d || y < l || y > r;\n}\nvoid add(int u, int v) {edge[++top] = (tt){v, path[u]}; path[u] = top; }\nbool judge() {\n\tif (1ll*n*m-c <= 1) return false;\n\tif (1ll*n*m-c >= 3) return true;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tif (!exist(i, j)) {\n\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\tif (outof(i+w1[k], j+w2[k], 1, n, 1, m)) continue;\n\t\t\t\t\tif (!exist(i+w1[k], j+w2[k])) return false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n}\nvoid bfs(pii t) {\n\tP.push(t); int u, v, u1, v1;\n\twhile (!P.empty()) {\n\t\tt = P.front(); P.pop(); u = t.first, v = t.second; int c = color[id[t]];\n\t\tfor (int k = 0; k < 4; k++)\n\t\t\tif (!outof(u1 = u+w1[k], v1 = v+w2[k], 1, n, 1, m) && !exist(u1, v1) && id.count(t1 = pii(u1, v1))) {\n\t\t\t\tif (color[id[t1]]) continue;\n\t\t\t\tcolor[id[t1]] = c; P.push(t1);\n\t\t\t}\n\t}\n}\nbool connect() {\n\twhile (!Q.empty()) {\n\t\tt = Q.front(); Q.pop();\n\t\tif (color[id[t]]) continue;\n\t\telse color[id[t]] = ++cnt, bfs(t);\n\t}\n\tfor (int Id = 1; Id <= c; Id++) {\n\t\tint u = a[Id].first, v = a[Id].second, c = -1;\n\t\tfor (int i = -2; i <= 2; i++)\n\t\t\tfor (int j = -2; j <= 2; j++) {\n\t\t\t\tif (outof(u+i, v+j, 1, n, 1, m) || exist(u+i, v+j)) continue;\n\t\t\t\tt = pii(u+i, v+j);\n\t\t\t\tif (c == -1) c = color[id[t]];\n\t\t\t\telse if (c != color[id[t]]) return false;\n\t\t\t}\n\t}\n\treturn true;\n}\nvoid build(int u, int v) {\n\tfor (int i = -2; i <= 2; i++)\n\t\tfor (int j = -2; j <= 2; j++) {\n\t\t\tif (outof(u+i, v+j, 1, n, 1, m) || exist(u+i, v+j)) continue;\n\t\t\tt = pii(u+i, v+j);\n\t\t\tint x = id.count(t) ? id[t] : (Q.push(t), id[t] = ++idx);\n\t\t\tif (!outof(u+i+1, v+j, max(1, u-2), min(n, u+2), max(1, v-2), min(m, v+2)) && !exist(u+i+1, v+j)) {\n\t\t\t \tt = pii(u+i+1, v+j);\n\t\t\t\tint y = id.count(t) ? id[t] : (Q.push(t), id[t] = ++idx);\n\t\t\t\tif (x > y) {if (!mp.count(pii(y, x))) add(x, y); add(y, x); mp[pii(y, x)] = 1; }\n\t\t\t\telse {if (!mp.count(pii(x, y))) add(x, y); add(y, x); mp[pii(x, y)] = 1; }\n\t\t\t}\n\t\t\tif (!outof(u+i, v+j+1, max(1, u-2), min(n, u+2), max(1, v-2), min(m, v+2)) && !exist(u+i, v+j+1)) {\n\t\t\t \tt = pii(u+i, v+j+1);\n\t\t\t\tint y = id.count(t) ? id[t] : (Q.push(t), id[t] = ++idx);\n\t\t\t\tif (x > y) {if (!mp.count(pii(y, x))) add(x, y); add(y, x); mp[pii(y, x)] = 1; }\n\t\t\t\telse {if (!mp.count(pii(x, y))) add(x, y); add(y, x); mp[pii(x, y)] = 1; }\n\t\t\t}\n\t\t\tif (abs(i) <= 1 && abs(j) <= 1) rk[x] = 1;\n\t\t}\n}\nvoid tarjan(int u, int fa) {\n\tiscut[u] = 0; dfn[u] = low[u] = ++times; int sz = 0, v;\n\tfor (int i = path[u]; i; i = edge[i].next) {\n\t\tif ((v = edge[i].to) == fa) continue;\n\t\tif (!dfn[v]) {\n\t\t\t++sz; tarjan(v, u);\n\t\t\tif (low[v] >= dfn[u]) iscut[u] = 1;\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}else low[u] = min(low[u], dfn[v]);\n\t}\n\tif (fa == 0 && sz == 1) iscut[u] = 0;\n}\nvoid work() {\n\tmemset(path, top = idx = 0, sizeof(path)); id.clear(), mp.clear();\n\tmemset(dfn, times = 0, sizeof(dfn)); memset(rk, 0, sizeof(rk));\n\tmemset(color, cnt = 0, sizeof(color));\n\tgi(n), gi(m), gi(c);\n\tfor (int i = 1; i <= c; i++) {\n\t\tgi(u), gi(v); a[i] = pii(u, v);\n\t}\n\tsort(a+1, a+c+1); a[c+1] = pii(0, 0);\n\tif (!judge()) {puts(\"-1\"); return; }\n\tfor (int i = 1; i <= c; i++) build(a[i].first, a[i].second);\n\tif (!connect()) {puts(\"0\"); return; }\n\tif (n == 1 || m == 1) {puts(\"1\"); return; }\n\tfor (int i = 1; i <= idx; i++) {\n\t\tif (!dfn[i]) tarjan(i, 0);\n\t\tif (rk[i] && iscut[i]) {puts(\"1\"); return; }\n\t}\n\tputs(\"2\");\n}\nint main() {\n\tint t; gi(t); while (t--) work();\n\treturn 0;\n}\n```",
        "postTime": 1530774904,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1173 \u3010[NOI2016]\u7f51\u683c\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1173)\n\n## \u9898\u76ee\u5927\u610f\n\n- $n\\times m$ \u7684\u7f51\u683c\uff0c\u7ed9\u51fa $c$ \u4e2a\u70b9\u4e3a\u9ed1\u70b9\uff0c\u5176\u4ed6\u70b9\u4e3a\u767d\u70b9\u3002\n\n- \u6c42\u81f3\u5c11\u6dfb\u52a0\u591a\u5c11\u9ed1\u70b9\u80fd\u4f7f\u767d\u70b9\u4e0d\u8054\u901a\uff08\u56db\u8054\u901a\uff09\uff0c\u6216\u5224\u65ad\u65e0\u89e3\u3002\n\n- $1\\leq n,m\\leq 10^9,\\ 0\\leq c \\leq \\min(nm,10^5)$\uff0c\u591a\u6d4b\u3002\n\n# Solution\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u5e73\u9762\u56fe\u6b27\u62c9\u516c\u5f0f\u7684\u505a\u6cd5\u3002\n\n\u7531\u4e8e\u7f51\u683c\u56fe\u603b\u5b58\u5728\u5ea6\u6570 $\\leq 2$ \u7684\u7ed3\u70b9\uff0c\u6240\u4ee5\u672c\u9898\u7b54\u6848\u53ea\u53ef\u80fd\u5c5e\u4e8e $\\{-1,0,1,2\\}$\u3002\n\n\u6ce8\u610f\u5230\u7f51\u683c\u56fe\u5c5e\u4e8e\u5e73\u9762\u56fe\uff0c\u800c\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5e73\u9762\u56fe\u6ee1\u8db3\u6b27\u62c9\u516c\u5f0f\n\n$$ |V|-|E|+|F|=1 $$\n\n\u5176\u4e2d $|V|$ \u4e3a\u70b9\u6570\uff0c$|E|$ \u4e3a\u8fb9\u6570\uff0c$|F|$ \u4e3a\u5212\u5206\u5e73\u9762\u4e2a\u6570\u3002\u8003\u8651\u901a\u8fc7\u7ef4\u62a4\u8fd9\u4e09\u4e2a\u91cf\u8ba1\u7b97\u8054\u901a\u5757\u4e2a\u6570\u3002\n\n\u4e00\u5f00\u59cb\u4e00\u4e2a\u4e2a\u628a $c$ \u4e2a\u9ed1\u70b9\u63d2\u5165\u5230\u5e73\u9762\u4e2d\uff0c$|V|$ \u80af\u5b9a\u4f1a\u81ea\u51cf $1$\uff0c$|E|$ \u51cf\u5c11\u91cf\u4e3a\u5468\u56f4\u767d\u70b9\u4e2a\u6570\uff0c$|F|$ \u5c31\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\u4e86\u3002\n\n\u521d\u59cb\u65f6 $F$ \u5bf9\u5e94\u4e3a $(n-1)(m-1)$ \u4e2a\u4e0d\u5728\u8fb9\u754c\u4e0a\u7684\u767d\u683c\u7684\u6b63\u65b9\u5f62\u9876\u70b9\uff0c\u7136\u540e\u7a81\u7136\u51fa\u73b0\u4e86\u4e00\u4e2a\u9ed1\u683c\u5b50\uff0c\u4ed6\u4f1a\u4f7f\u56db\u4e2a\u9876\u70b9\u5bf9\u5e94\u7684\u5212\u5206\u5e73\u9762\u8054\u901a\u6210\u4e00\u4e2a\uff0c\u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u5b58\u5728\u4e00\u4e2a\u9876\u70b9\u4e0e\u8fb9\u754c\u8054\u901a\uff0c\u5219\u53e6\u4e00\u4e2a\u5212\u5206\u5e73\u9762\u6d88\u5931\uff08\u90fd\u4e0e\u8fb9\u754c\u8054\u901a\u5219\u4e0d\u53d8\uff09\u3002\n\n2. \u90fd\u4e0d\u4e0e\u8fb9\u754c\u8054\u901a\uff0c\u5219\u51cf\u5c11\u4e00\u4e2a\u5212\u5206\u5e73\u9762\u3002\n\n\u5982\u679c\u4e00\u4e2a\u9876\u70b9\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u9ed1\u683c\u5b50\uff0c\u90a3\u5c31\u5e72\u8106\u4e0d\u7ef4\u62a4\u4e86\uff1b\u76f8\u53cd\uff0c\u52a0\u5165\u4e00\u4e2a\u9ed1\u683c\u5b50\u540e\u4ed6\u7684\u56db\u4e2a\u9876\u70b9\u90fd\u8981\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u90a3\u5c31\u65b0\u5efa\u7ed3\u70b9\u51fa\u6765\u5e76\u8d4b\u4e88\u7f16\u53f7\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u7b97\u51fa\u52a0\u5165 $c$ \u4e2a\u9ed1\u683c\u5b50\u540e\u7684\u8054\u901a\u5757\u4e2a\u6570\u4e86\u3002\n\n\u5982\u679c $ |V|-|E|+|F|>1 $\uff0c\u8bf4\u660e\u4e0d\u7528\u505a\u4efb\u4f55\u53d8\u5316\uff0c\u7b54\u6848\u4e3a $0$\uff1b\u5982\u679c $|V|=0$ \u6216 $|V|=1$ \u6216\uff08$|V|=2$ \u4e14 $|V|-|E|+|F|=1$\uff09\uff0c\u90a3\u80af\u5b9a\u65e0\u89e3\uff1b\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u7528\u5224\u65ad\u662f $1$ \u8fd8\u662f $2$\uff0c\u663e\u7136\u5224\u65ad\u662f\u5426\u4e3a $1$ \u597d\u505a\u3002\n\n\u6211\u4eec\u80af\u5b9a\u4f1a\u731c\u60f3\u518d\u653e\u4e00\u4e2a\u65b0\u9ed1\u683c\uff0c\u4ed6\u80af\u5b9a\u4f1a\u5728\u67d0\u4e2a\u5df2\u6709\u9ed1\u683c\u9644\u8fd1\uff08\u516b\u8054\u901a\uff09\u3002\u4e0d\u8fc7\u6709\u4e2a\u5c0f corner case \u662f $n=1$ \u6216 $m=1$ \u7684\u60c5\u51b5\uff0c\u5b58\u5728\u5468\u56f4\u6ca1\u6709\u5df2\u6709\u9ed1\u683c\u7b54\u6848\u4f9d\u7136\u4e3a $1$ \u60c5\u51b5\uff0c\u7279\u5224\u5373\u53ef\u3002\n\n\u4e4b\u540e\u7684\u505a\u6cd5\u4e0e\u524d\u9762\u7c7b\u4f3c\uff0c\u6ce8\u610f\u65b0\u9ed1\u683c\u52a0\u5165\u540e\u9700\u8981\u64a4\u9500\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\u5e76\u67e5\u96c6\u5c31\u53ea\u80fd\u7528\u6309\u79e9\u5408\u5e76\u3002\u7ef4\u62a4\u683c\u5b50\u7684\u7f16\u53f7\u4ee5\u53ca\u5b58\u5728\u6027\u7528 set/map \u5373\u53ef\u3002\n\n\u7136\u540e\u6d89\u53ca\u5230\u7684\u5212\u5206\u5e73\u9762\u4e2a\u6570\u53ef\u80fd\u9ad8\u8fbe $36c$\u2026\u2026\u6570\u7ec4\u5f00\u5927\u70b9\u5c31\u597d\u4e86\u3002\u590d\u6742\u5ea6 $O(c \\log c)$\u3002\n\n# Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXC=1e5,SIZE=MAXC*4*9;\nconst int dx[]={0,0,-1,-1,-1,1,1,1};\nconst int dy[]={-1,1,-1,0,1,-1,0,1};\n\nstruct Point\n{\n\tint x,y;\n\tinline void Scan() {scanf(\"%d %d\",&y,&x);}\n\tbool operator == (const Point &a) const\n\t{return x==a.x && y==a.y;}\n\tbool operator < (const Point &a) const\n\t{return x==a.x ? y<a.y : x<a.x;}\n\tbool operator > (const Point &a) const\n\t{return x==a.x ? y>a.y : x>a.x;} \n}ver[MAXC+5];\n\nll n,m;int C;\nll V,E,F;\n\nint fa[SIZE+5],Size[SIZE+5],tot,Outside[SIZE+5];\ninline void Clean() {tot=0;}\ninline int New() {++tot,fa[tot]=tot,Size[tot]=1,Outside[tot]=0;return tot;}\nint Find(int x) {return fa[x]==x ? x : Find(fa[x]);}\npair<int,int> Record[10];int rnum;\ninline void Union(int a,int b)\n{\n\ta=Find(a),b=Find(b);\n\tif(a==b) return;\n\tif(Size[a]<Size[b]) swap(a,b);\n\tSize[a]+=Size[b];\n\tfa[b]=a;\n\tOutside[a]+=Outside[b];\n\t\n\tRecord[++rnum]=make_pair(a,b);\n}\ninline void Cut(int a,int b)\n{\n\tSize[a]-=Size[b];\n\tfa[b]=b;\n\tOutside[a]-=Outside[b];\n}\n\nset<Point> mapn;//\u9ed1\u70b9\u77e9\u9635\nmap<Point,int> Code;//\u9ed1\u70b9\u7684\u89d2\u7684\u7f16\u53f7 \n\ninline bool OnEdge(int x,int y) {return x==1 || x==m+1 || y==1 || y==n+1;}\n\nint Q[10],Tail;\ninline void Insert(int x,int y)\n{\n\t--V,mapn.insert(Point{x,y});\n\t\n\tif(x>1 && mapn.find(Point{x-1,y})==mapn.end()) --E;\n\tif(x<m && mapn.find(Point{x+1,y})==mapn.end()) --E;\n\tif(y>1 && mapn.find(Point{x,y-1})==mapn.end()) --E;\n\tif(y<n && mapn.find(Point{x,y+1})==mapn.end()) --E;\n\t\n\tif(Code.find(Point{x,y})==Code.end()) Code[Point{x,y}]=New(),Outside[tot]=OnEdge(x,y);\n\tif(Code.find(Point{x+1,y})==Code.end()) Code[Point{x+1,y}]=New(),Outside[tot]=OnEdge(x+1,y);\n\tif(Code.find(Point{x,y+1})==Code.end()) Code[Point{x,y+1}]=New(),Outside[tot]=OnEdge(x,y+1);\n\tif(Code.find(Point{x+1,y+1})==Code.end()) Code[Point{x+1,y+1}]=New(),Outside[tot]=OnEdge(x+1,y+1);\n\tTail=rnum=0;\n\tQ[++Tail]=Find(Code[Point{x,y}]);\n\tQ[++Tail]=Find(Code[Point{x+1,y}]);\n\tQ[++Tail]=Find(Code[Point{x,y+1}]);\n\tQ[++Tail]=Find(Code[Point{x+1,y+1}]);\n\tsort(Q+1,Q+Tail+1),Tail=unique(Q+1,Q+Tail+1)-Q-1;\n\tint delta=0;\n\tfor(int i=1;i<=Tail;i++) delta-=(!Outside[Q[i]]);\n\tfor(int i=2;i<=Tail;i++) Union(Q[1],Q[i]);\n\tfor(int i=1;i<=Tail;i++) Q[i]=Find(Q[i]);\n\tsort(Q+1,Q+Tail+1),Tail=unique(Q+1,Q+Tail+1)-Q-1;\n\tfor(int i=1;i<=Tail;i++) delta+=(!Outside[Q[i]]);\n\tF+=delta;\n}\n\ninline ll Unicom() {return V-E+F;}\n\nint main()\n{\n\tint T;scanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%lld %lld %d\",&n,&m,&C);\n\t\tV=n*m,E=n*(m-1)+(n-1)*m,F=(n-1)*(m-1);\n\t\tClean(),mapn.clear(),Code.clear();\n\t\t\n\t\tfor(int i=1;i<=C;i++) ver[i].Scan(),Insert(ver[i].x,ver[i].y);\n\t\tif(Unicom()>1) {printf(\"0\\n\");continue;}\n\t\tif(!V || V==1 || (V==2 && Unicom()==1)) {printf(\"-1\\n\");continue;}\n\t\tif(n==1 || m==1) {printf(\"1\\n\");continue;}\n\t\t//\u53ea\u6dfb\u4e00\u4e2a\u9ed1\u683c\u5b50\n\t\tbool OK=0;\n\t\tfor(int i=1;i<=C;i++)\n\t\t{\n\t\t\tfor(int j=0;j<8;j++)\n\t\t\t{\n\t\t\t\tint x=ver[i].x+dx[j],y=ver[i].y+dy[j];\n\t\t\t\tif(x<1 || m<x || y<1 || n<y) continue;\n\t\t\t\tif(mapn.find(Point{x,y})!=mapn.end()) continue;\n\t\t\t\tll v=V,e=E,f=F;\n\t\t\t\tInsert(x,y);\n\t\t\t\tif(Unicom()>1) {OK=1;break;}\n\t\t\t\t//\u64a4\u9500 \n\t\t\t\tV=v,E=e,F=f;\n\t\t\t\tmapn.erase(Point{x,y});\n\t\t\t\tfor(int k=rnum;k;k--) Cut(Record[k].first,Record[k].second);\n\t\t\t}\n\t\t\tif(OK) break;\n\t\t}\n\t\tif(OK) printf(\"1\\n\");\n\t\telse printf(\"2\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1659433526,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "[NOI2016] \u7f51\u683c \u7684\u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e24\u53ea\u8df3\u86a4\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4\u5fc5\u987b\u6709\u81f3\u5c11\u4e00\u4e2a\u7a7a\u683c\uff0c\u5426\u5219\u5b83\u4eec\u5c31\u662f\u8fde\u901a\u7684\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u5047\u8bbe\u5f53\u524d\u4e8c\u5206\u5230\u7684\u7b54\u6848\u4e3a $k$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e24\u53ea\u8df3\u86a4\u4e0d\u8fde\u901a\uff0c\u4e14\u66ff\u6362\u7684\u8df3\u86a4\u6570\u91cf\u4e0d\u8d85\u8fc7 $k$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e24\u53ea\u8df3\u86a4\u4e0d\u8fde\u901a\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8df3\u86a4\u770b\u6210\u4e00\u4e2a\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u76f8\u90bb\u7684\u8df3\u86a4\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65e0\u5411\u56fe\u3002\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u56fe\u4e2d\u627e\u5230\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fd9\u4e2a\u56fe\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u8df3\u86a4\u770b\u6210\u4e00\u4e2a\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u628a\u76f8\u90bb\u7684\u8df3\u86a4\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\u8d77\u6765\u3002\u6700\u540e\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u662f\u4e0d\u8fde\u901a\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5224\u65ad\u66ff\u6362\u7684\u8df3\u86a4\u6570\u91cf\u662f\u5426\u4e0d\u8d85\u8fc7 $k$\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u7a7a\u683c\u770b\u6210\u4e00\u4e2a\u4e2a\u70b9\uff0c\u7136\u540e\u628a\u76f8\u90bb\u7684\u7a7a\u683c\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65e0\u5411\u56fe\u3002\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u7684\u72ec\u7acb\u96c6\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u6240\u6709\u7684\u7a7a\u683c\u5206\u6210\u4e24\u7c7b\uff0c\u4e00\u7c7b\u4e3a\u9ed1\u8272\uff0c\u4e00\u7c7b\u4e3a\u767d\u8272\uff0c\u7136\u540e\u628a\u76f8\u90bb\u7684\u7a7a\u683c\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u4e8c\u5206\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u7684\u72ec\u7acb\u96c6\u3002\n\n\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a\u5927\u5c0f\u4e0d\u8d85\u8fc7 $k$ \u7684\u72ec\u7acb\u96c6\uff0c\u90a3\u4e48\u8bf4\u660e\u5b58\u5728\u4e24\u53ea\u8df3\u86a4\u4e0d\u8fde\u901a\uff0c\u4e14\u66ff\u6362\u7684\u8df3\u86a4\u6570\u91cf\u4e0d\u8d85\u8fc7 $k$\uff0c\u5426\u5219\u8bf4\u660e\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u4e8c\u5206\u7b54\u6848\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u5e76\u67e5\u96c6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(c\\alpha(nm))$\uff0c\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)k)$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(T(\\log n+c\\alpha(nm)+(n+m)k))$\uff0c\u5176\u4e2d $\\alpha$ \u662f\u963f\u514b\u66fc\u51fd\u6570\uff0c$k$ \u662f\u4e8c\u5206\u7b54\u6848\u7684\u4e0a\u754c\u3002\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, m, c, T, fa[N], ans;\nstruct node {\n    int x, y;\n} a[N];\nint find(int x) {\n    return fa[x] == x ? x : fa[x] = find(fa[x]);\n}\nint main() {\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%d%d%d\", &n, &m, &c);\n        ans = 0;\n        for (int i = 1; i <= c; i++) {\n            scanf(\"%d%d\", &a[i].x, &a[i].y);\n            fa[(a[i].x - 1) * m + a[i].y] = (a[i].x - 1) * m + a[i].y;\n        }\n        for (int i = 1; i <= n * m; i++) {\n            if (fa[i] == 0) {\n                fa[i] = i;\n            }\n            int x = (i - 1) / m + 1, y = (i - 1) % m + 1;\n            if (x > 1 && fa[i - m]) {\n                fa[find(i)] = find(i - m);\n            }\n            if (y > 1 && fa[i - 1]) {\n                fa[find(i)] = find(i - 1);\n            }\n        }\n        int cnt = 0;\n        for (int i = 1; i <= n * m; i++) {\n            if (fa[i] == i) {\n                cnt++;\n            }\n        }\n        if (cnt == 1) {\n            printf(\"-1\\n\");\n            continue;\n        }\n        for (int i = 1; i <= c; i++) {\n            int x = (a[i].x - 1) * m + a[i].y;\n            fa[x] = 0;\n            int cnt = 0;\n            for (int j = 1; j <= n * m; j++) {\n                if (fa[j] == j) {\n                    cnt++;\n                }\n            }\n            if (cnt > 1) {\n                ans++;\n                fa[x] = x;\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1683943949,
        "uid": 602624,
        "name": "liuhaodong2021",
        "ccfLevel": 0,
        "title": "\u9898\u89e3"
    },
    {
        "content": "\u89e3\u6790\uff1a\n\n~~\u770b\u8d77\u6765\u5f88\u4e0d\u7801\u519c\u4f46\u5199\u8d77\u6765\u5176\u5b9e\u8fd8\u884c\u7684\u4e00\u9053\u9898\u3002~~\n\u4e3b\u8981\u4e5f\u662f\u56e0\u4e3a\u6211\u8d3a\u9898\u89e3\u628a\u6240\u6709\u7684\u96f7\u90fd\u907f\u8fc7\u53bb\u4e86\n\n\u9996\u5148\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff1a\u901a\u8fc7\u5835\u89d2\u4e0a\u7684\uff0c\u7b54\u6848\u4e0d\u8d85\u8fc7 2\u3002\n\u6240\u4ee5\u672c\u9898\u53ea\u8981\u628a\u7b54\u6848\u662f -1\uff0c0\uff0c1\uff0c2 \u7684\u60c5\u51b5\u5224\u51fa\u6765\u5373\u53ef\u3002\n\n-1 \u662f\u53ea\u6709\u4e00\u4e2a\u7a7a\u4f4d\u6216\u53ea\u6709\u4e24\u4e2a\u76f8\u90bb\u7a7a\u4f4d\u3002\n0 \u662f\u539f\u56fe\u4e0d\u8fde\u901a\u3002\n1 \u662f\u539f\u56fe\u5b58\u5728\u5272\u70b9\u3002\n\u5176\u4ed6\u90fd\u662f 2\u3002\n\n\u505a\u5b8c\u4e86\uff1f\u592a\u5929\u771f\u4e86\u3002\n\n$N$ , $M$  $\\leq$  $10^9$\n \n\u90a3\u548b\u529e\uff1f\n\u6ce8\u610f\u5230\uff0c$C$ $\\leq$ $10 ^ 5$\uff0c\n\n\u8fd9\u5f20\u56fe\u975e\u5e38\u7a00\u758f\uff0c\u5728\u7a7a\u7f51\u683c\u4e0a\u66b4\u529b tarjan \u770b\u8d77\u6765\u975e\u5e38\u7684\u8822\u3002\n\u90a3\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u5c1d\u8bd5\u5bf9\u4e8e\u6bcf\u4e2a\u86d0\u86d0\uff0c\u63d0\u53d6\u51fa\u5b83\u5468\u56f4\u7684\u683c\u5b50\uff0c\u8fd9\u6837\u7684\u8282\u70b9\u6570\u5c31\u53d8\u6210\u4e86 $O(C)$ \u7ea7\u522b\u3002\uff08\u611f\u89c9\u6709\u4e9b\u50cf\u534e\u5bb9\u9053\u90a3\u4e2a\u9898\uff09\n\u7136\u540e\u5728\u65b0\u7684\u56fe\u4e0a tarjan \u5c31\u597d\u4e86\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u4ebf\u70b9\u70b9\u5751\u70b9\uff1a\n\n\u63d0\u51fa\u7684\u201c\u5468\u56f4\u4e00\u5708\u201d\u5e94\u8be5\u662f $5 \u00d7 5$  \u800c\u4e0d\u662f $3 \u00d7 3$\uff0c\u540c\u65f6\u53ea\u6709\u8ddd\u79bb\u6700\u8fd1\u86d0\u86d0\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a 1 \u7684\u70b9\u662f\u5272\u70b9\u624d\u7b97\u5272\u70b9\u3002\n\u5224\u8054\u901a\u7684\u65f6\u5019\u8981\u628a 8 \u8054\u901a\u7684\u86d0\u86d0\u5168\u627e\u51fa\u6765\u4e00\u8d77\u5224\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u5199\u51fa\u6765\u4e86\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\nusing namespace std;\n\nconst int N=1e5+100;\n\nconst int mod=1333331;\nconst double inf=1e9;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\n\nint n,m,c;\nbool flag=0;\n\nstruct node{\n  int to,nxt;\n}p[N*25*4*2];\nint fi[N*25],cnt;\ninline void addline(int x,int y){\n  p[++cnt]=(node){y,fi[x]};fi[x]=cnt;\n}\n\nstruct Hash{\n  node p[N*25];\n  int fi[mod+1],tot,cnt;\n  ll key[N*25];\n  int id[N*25];\n  void ins(int x,int y,int Id){\n    ll w=1ll*x*(m+1)+y,o=w%mod;\n    ++tot;id[tot]=Id;key[tot]=w;    \n    p[++cnt]=(node){tot,fi[o]};fi[o]=cnt;\n    //debug(\"add o=%lld fi=%d\\n\",o,fi[o]);\n  }\n  int find(int x,int y){\n    ll w=1ll*x*(m+1)+y,o=w%mod;\n    for(int i=fi[o];~i;i=p[i].nxt){\n      //debug(\"o=%lld i=%d\\n\",o,i);\n      //ok;\n      if(key[p[i].to]==w) return id[p[i].to];\n    }\n    return 0;\n  }\n  void init(){\n    tot=0;\n    memset(fi,-1,sizeof(fi));cnt=-1;\n  }\n}mp;\n\nint tot;\n\nint x[N],y[N];\nbool jd[N*25];\nint d24x[25]={0,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,0,0,0,0,1,1,1,1,1,2,2,2,2,2},d24y[25]={0,-2,-1,0,1,2,-2,-1,0,1,2,-2,-1,1,2,-2,-1,0,1,2,-2,-1,0,1,2};\nint d8x[9]={0,-1,-1,-1,0,0,1,1,1},d8y[9]={0,-1,0,1,-1,1,-1,0,1};\nint d4x[5]={0,-1,0,0,1},d4y[5]={0,0,-1,1,0};\n\nint cut;\nint dfn[N*25],low[N*25],tim,bel[N*25],Id;\nvoid tarjan(int x,int rt=0){\n  dfn[x]=low[x]=++tim;bel[x]=Id;\n  int son(0);\n  for(int i=fi[x];~i;i=p[i].nxt){\n    int to=p[i].to;\n    //if(to<=c) continue;\n    if(!dfn[to]){\n      tarjan(to);\n      son++;\n      if(low[to]>=dfn[x]){\n\tcut+=jd[x];\n      }\n      low[x]=min(low[x],low[to]);\n    }\n    else low[x]=min(low[x],dfn[to]);\n  }\n  if(rt&&son==1) cut-=jd[x];\n  return;\n}\n\nbool vis[N];\nint nowId;\nvoid dfs(int x,int y){\n  int now=mp.find(x,y);\n  vis[now]=1;\n  for(int d=1;d<=8;d++){\n    int nx=x+d8x[d],ny=y+d8y[d];\n    if(nx<1||nx>n||ny<1||ny>m) continue;\n    int to=mp.find(nx,ny);\n    if(to>c){\n      if(nowId==0) nowId=bel[to];\n      else if(nowId!=bel[to]) nowId=-1;\n    }\n    else if(!vis[to]) dfs(nx,ny);    \n  }\n}\n\nvoid clear(){\n  mp.init();\n  memset(fi,-1,sizeof(int)*(tot+1));cnt=-1;\n  memset(jd,0,sizeof(int)*(tot+1));\n  cut=tim=Id=0;\n  memset(dfn,0,sizeof(int)*(tot+1));\n  memset(low,0,sizeof(int)*(tot+1));\n  memset(bel,0,sizeof(int)*(tot+1));\n  memset(vis,0,sizeof(int)*(c+1));\n  tot=0;\n}\n\nvoid work(){\n  n=read();m=read();tot=c=read();\n  for(int i=1;i<=c;i++){\n    x[i]=read();y[i]=read();\n    mp.ins(x[i],y[i],i);    \n  }\n  for(int i=1;i<=c;i++){\n    for(int d=1;d<=24;d++){\n      int nx=x[i]+d24x[d],ny=y[i]+d24y[d];\n      if(nx<1||nx>n||ny<1||ny>m) continue;      \n      if(!mp.find(nx,ny)){\n\tmp.ins(nx,ny,++tot);\n\tint x=tot;\n\tfor(int d=1;d<=4;d++){\n\t  int nnx=nx+d4x[d],nny=ny+d4y[d];\n\t  int to=mp.find(nnx,nny);\n\t  if(to&&to>c){\n\t    //printf(\"d=%d (%d %d) -> (%d %d)\\n\",d,nx,ny,nnx,nny);\n\t    addline(x,to);addline(to,x);\n\t  }\n\t}\n      }\n      int to=mp.find(nx,ny);\n      if(to<=c) continue;\n      if(abs(nx-x[i])<=1&&abs(ny-y[i])<=1) jd[to]=1;\n    }\n  }\n  if(flag) for(int i=1;i<=n;i++){\n    for(int j=1;j<=m;j++) printf(\"%d \",mp.find(i,j));\n    puts(\"\");\n  }\n  for(int i=c+1;i<=tot;i++){\n    if(!dfn[i]){\n      ++Id;tarjan(i,1);\n    }\n  }\n  if(1ll*n*m-c<2||(1ll*n*m-c==2&&(Id==1||n*m==2))){\n    puts(\"-1\");return;\n  }\n  for(int i=1;i<=c;i++){\n    if(!vis[i]){\n      nowId=0;\n      dfs(x[i],y[i]);\n      if(nowId==-1){\n\tputs(\"0\");return;\n      }\n    }\n  }\n  if(cut||n==1||m==1) puts(\"1\");\n  else puts(\"2\");\n  return;\n}\n\nsigned main(){\n  #ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n  #endif\n  memset(fi,-1,sizeof(fi));cnt=-1;\n  int T=read();\n  while(T--){\n    clear();\n    work();\n  }\n  return 0;\n}\n\n\n```\n",
        "postTime": 1668143700,
        "uid": 616872,
        "name": "A_better_world",
        "ccfLevel": 3,
        "title": "P1173"
    }
]