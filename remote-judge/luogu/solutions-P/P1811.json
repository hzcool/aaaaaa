[
    {
        "content": "Codeforces\u4e0a\u6709\u4e00\u9053\u548c\u8fd9\u9898\u9898\u9762\u4e00\u6837\u5e76\u4e14\u6709spj\u7684\u9898,\u5982\u679c\u4f60\u4e0d\u5e78\u88abspj\u5361\u4e86\u53ef\u4ee5\u53bb\u4ea4\u4e00\u4e0b.  \n[Codeforces 59E Shortest Path](https://www.luogu.org/problemnew/show/CF59E)  \n\u4e0d\u8fc7\u6211\u8fd9\u4e2a\u4ee3\u7801\u6ca1\u6709spj\u4e5f\u53ef\u4ee5\u8fc7.\n\u636e@hehe_54321\u5927\u4f6c\u8bf4\u9898\u89e3\u7684\u590d\u6742\u5ea6\u662f\u5047\u7684,\u4f1a\u88ab\u5361\u6210\u6307\u6570\u7ea7?  \n\u6211\u7528\u6211\u7684AC\u4ee3\u7801\u8dd1\u4e86\u4e00\u4e0b\u5927\u4f6c\u7684\u6570\u636e,\u8dd1\u5f97\u98de\u5feb.  \n\u6240\u4ee5\u8fd9\u662f\u7b2c\u4e00\u7bc7~~\u6b63\u786e\u7684\u9898\u89e3~~?  \n\u6211\u4eec\u8003\u8651\u7528\u8fb9\u8dd1$bfs$.  \n\u4ee5\u524d\u6211\u4eec\u5199\u7684$bfs$\u90fd\u662f\u7528\u70b9\u8dd1\u7684,\u8fd9\u4e00\u6b21\u6211\u4eec\u7528\u8fb9\u8dd1.  \n\u4e3a\u4ec0\u4e48\u8981\u7528\u8fb9\u8dd1?  \n\u8fd9\u9898\u4e2d\u4e0d\u80fd\u901a\u8fc7\u7684\u4e09\u5143\u7ec4\u5982\u679c\u7528\u70b9\u6765\u8dd1$bfs$,\u975e\u5e38\u96be\u8fd0\u7528\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6.  \n\u4f46\u662f\u5982\u679c\u5316\u8fb9\u4e3a\u70b9(~~\u7ebf\u56fe(\u9003)~~\u601d\u60f3),\u8fd9\u4e9b\u4e09\u5143\u7ec4\u5c31\u53d8\u6210\u4e86\u4e0d\u80fd\u4ece\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9,\u975e\u5e38\u9002\u5408\u8fd0\u7528\u9898\u76ee\u7684\u6761\u4ef6\u4e86.    \n\u4ee5\u4e0a\u662f@Styx\u5927\u4f6c\u7684\u601d\u8def,\u611f\u8c22\u4ed6\u7684\u9ad8\u5999\u601d\u8def.  \n\u6211\u4eec\u7528$d[u][v]$\u8868\u793a\u4ece$(0\\to 1)$(\u6211\u4eec\u865a\u6784\u7684\u521d\u59cb\u8fb9)\u7684\u8fb9\u8d70\u5230$(u\\to v)$\u7684\u8fd9\u4e00\u6761\u8fb9\u6240\u7528\u7684\u6700\u5c11\u6b65\u6570; \u7528$pre[u][v]=last$\u8868\u793a$u\\to v$\u8d70\u8fc7\u7684\u524d\u4e00\u6761\u8fb9\u662f$last\\to u$(\u7531\u4e8e\u8fb9\u4e4b\u95f4\u5fc5\u987b\u5171\u70b9\u624d\u7b97\u505a\u6709\u8fde\u8fb9,\u56e0\u6b64$pre$\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u70b9,\u5b83\u6307\u5411\u7684\u70b9\u85cf\u5728\u6570\u7ec4\u4e0b\u6807\u91cc).  \n\u7528$vector$\u50a8\u5b58\u6bcf\u4e2a\u70b9\u8fde\u5411\u54ea\u4e9b\u8fb9,$set$\u5b58\u50a8\u4e0d\u80fd\u8d70\u7684\u4e09\u5143\u7ec4,$bfs$\u7684\u65f6\u5019$queue$\u91cc\u88c5$pair<int,int>$,\u8868\u793a\u5f53\u524d\u641c\u7d22\u7684\u70b9\u548c\u8fd9\u6761\u8fb9\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9.  \n\u5269\u4e0b\u7684\u5c31\u5728\u4ee3\u7801\u91cc\u8bf4\u4e86.  \n(\u7701\u7565\u5feb\u8bfb\u5feb\u5199,\u5927\u5bb6\u80af\u5b9a\u770b\u5f97\u61c2)\n```cpp\ntypedef pair<int,int> pii;\nconst int aoi=3058;\ntypedef int fuko[aoi][aoi];\nfuko d,pre; \nvector<int> lj[aoi];\nset<pii> ban[aoi];\nint main() {\n  int i,n,m,k,u,v,a;\n  read(n),read(m),read(k);\n  for (i=1;i<=m;++i) { // \u52a0\u8fb9\n    read(u),read(v);\n    lj[u].push_back(v);\n    lj[v].push_back(u);\n  }\n  for (i=1;i<=k;++i) { \n    read(u),read(v),read(a);\n    ban[u].insert(pii(v,a)); // \u5b58\u50a8\u4e0d\u80fd\u8d70\u7684\u4e09\u5143\u7ec4\n  }\n  queue<pii> q; q.push(pii(1,0)); // \u52a0\u51650->1 \u7684\u8fb9\n  for (;!q.empty();) {\n    pii now=q.front(); q.pop();\n    int u=now.first,lat=now.second; // \u8868\u793a\u5f53\u524d\u7684\u8fb9\u662flat->u\u7684,\u5e76\u4e14\u4eceu\u8fd9\u4e2a\u70b9\u5411\u5916\u6269\u5c55.\n    if (u==n) { // u=n,\u6807\u660e\u6709\u89e3\u5e76\u8f93\u51fa\u8def\u5f84\n      write(d[lat][n]),pl; // \u6ce8\u610fu=n,\u5c31\u662f\u5230\u8fd9\u6761\u8fb9\u7684\u6700\u77ed\u8def\u957f\u5ea6.\n      int stk[aoi<<5]={0},fa=n,tmp; \n      for (;;) {  // \u63a5\u4e0b\u6765\u597d\u597d\u601d\u8003\u8f93\u51fa\u8def\u5f84\u7684\u65b9\u6cd5\n        stk[++*stk]=fa; // \u5f53\u524d\u8d70\u5230\u7684\u70b9.\n        if (fa==1) break; // \u52301\u4e86\u5c31\u8dd1\n        tmp=lat,lat=pre[lat][fa],fa=tmp; \n        /*\n        \u5f53\u524d\u8fb9\u662flat\u8fde\u5411fa\u7684,\u5b83\u7684\u4e0a\u4e00\u6761\u8fb9\u5c31\u5e94\u8be5\u662fpre[lat][fa]\u8fde\u5411lat\u7684.\n        \u6240\u4ee5\u8fd9\u4e48\u5f80\u56de\u8df3.\n        */\n      }\n      for (;*stk;--*stk) write(stk[*stk]),p32; \n      // \u5012\u5e8f\u8f93\u51fa\u5e76\u7ed3\u675f.\u89e3\u91ca\u4e00\u4e0b,*stk=stk[0]\n      return 0;\n    }\n    for (int v:lj[u]) {  // \u904d\u5386u\u80fd\u591f\u5230\u8fbe\u7684\u6bcf\u4e00\u4e2a\u70b9.\n      if (!ban[lat].count(pii(u,v))&&!d[u][v]) { //lat->u->v\u7684\u8fd9\u4e2a\u4e09\u5143\u7ec4\u6ca1\u6709\u88ab\u7981,\u5e76\u4e14u->v\u7684\u8fd9\u6761\u8fb9\u7684\u8ddd\u79bb\u4e5f\u6ca1\u6709\u6807\u8bb0\n        pre[u][v]=lat; // \u6807\u8bb0pre\n        d[u][v]=d[lat][u]+1; // \u52a0\u8ddd\u79bb\n        q.push(pii(v,u)); // \u63a8\u5165\u961f\u5217\n      }\n    }\n  }\n  puts(\"-1\"); // \u65e0\u89e3.\n}\n```\n\u8c22\u8c22\u5927\u5bb6.",
        "postTime": 1541576195,
        "uid": 49371,
        "name": "Fuko_Ibuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1811 \u3010\u6700\u77ed\u8def_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0801\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u6709\u70b9\u5751\u554a\uff0c\u8bf4\u597d\u7684Check\u5462\uff1f\uff1f\n\n\u8fb9\u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\u76f4\u63a5\u7528f[x][y]\u8868\u793a\u4ecex\u5230y\u540e\u4e0d\u80fd\u8d70\u5230\u7684\u70b9\uff0c\n\n\u56e0\u4e3a\u8981\u8bb0\u5f55\u8def\u5f84\uff0c\u6240\u4ee5\u7528\u5e7f\u641c\u627e\u6700\u77ed\u8def\uff0c\u5e7f\u641c\u7684\u72b6\u6001\u91cc\u52a0\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u70b9\uff0c\u6700\u540edfs\u8f93\u51fa\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u9898\u76ee\u6ca1\u6709Check\uff0c\u6240\u4ee5\u8981\u628a\u8fb9\u6309\u8d77\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\u548c\u7ec8\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u8bcd\u6392\u5e8f\u518d\u52a0\u8fb9\uff0c\u7136\u540e\u5c31\u662f\u4e71\u641e\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <map>\n#include <vector>\n#include <stack>\n#include <list>\n#define rep(i,m,n) for(int i=m;i<=n;i++)\n#define dop(i,m,n) for(int i=m;i>=n;i--)\n#define lowbit(x) (x&(-x))\n#define ll long long\n#define INF 2147483647\n#define Open(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);\n#define Close fclose(stdin);fclose(stdout);\nusing namespace std;\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nconst int maxn=3010;\nconst int maxm=20010;\nstruct Edge{\n    int next,to;\n}e[maxm<<2];\nint head[maxn],n,m,k,no[maxn],num,f[maxn][maxn],h,t=1;\nvoid Add(int from,int to){\n    e[++num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n}\nstruct SL{\n    int last,now,time,from;\n}s[maxm];\nvoid dfs(int now){\n    if(s[now].from) dfs(s[now].from);\n    printf(\"%d \",s[now].now);\n}\nstruct Q{\n    int a,b;\n    bool operator < (const Q &A) const{    //\u6309\u8d77\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u8bcd\u548c\u7ec8\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u8bcd\u6392\u5e8f\n         return a==A.a?b<A.b:a<A.a;\n    }\n}x[maxm<<1];\nint main(){\n    n=read();m=read();k=read();\n    rep(i,1,m) x[i].a=read(),x[i].b=read(),x[i+m].a=x[i].b,x[i+m].b=x[i].a;     //\u628a\u8fb9\u8bb0\u5f55\u4e0b\u6765\n    sort(x+1,x+m+1);\n    rep(i,1,2*m) Add(x[i].a,x[i].b);\n    rep(i,1,k) f[read()][read()]=read();     //\u7b80\u6d01\u5199\u6cd5\n    s[1]=(SL){0,1,0,0};\n    while(h<=t){\n      ++h;\n      SL now=s[h];\n      for(int i=head[now.now];i;i=e[i].next){\n         if(f[now.last][now.now]!=e[i].to&&e[i].to!=now.now){       //\u5982\u679c\u80fd\u8d70\u5230\u8fd9\u4e14\u4e0d\u662f\u539f\u5730\u8d70\u7684\u8bdd\uff08\u597d\u50bb\u54e6\uff09\n           s[++t]=(SL){now.now,e[i].to,now.time+1,h};      //\u5165\u961f\n           if(e[i].to==n){ \n             printf(\"%d\\n\",now.time+1);\n             dfs(t);\n             return 0;\n           }\n         }\n      }\n    }\n    return 0;\n}\n```",
        "postTime": 1506903079,
        "uid": 54636,
        "name": "Riven_Yasuo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1811 \u3010\u6700\u77ed\u8def_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0801\uff09\u3011"
    }
]