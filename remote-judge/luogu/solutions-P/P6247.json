[
    {
        "content": "\u6211\u4eec\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u667a\u6167\uff1a\n\n\u5c06\u6240\u6709\u70b9\u6309 $x$ \u5750\u6807\u6392\u5e8f\u3002\n\n\u6839\u636e\u6570\u5b66\u76f4\u89c9\uff0c\u5728\u6392\u5e8f\u540e\uff0c\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u5728\u6570\u7ec4\u4e2d\u80af\u5b9a\u4e0d\u4f1a\u79bb\u5f97\u592a\u8fdc\uff0c\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u5728\u6570\u7ec4\u4e2d\u80af\u5b9a\u4e0d\u4f1a\u79bb\u5f97\u592a\u8fd1\u3002\n\n\u6240\u4ee5\u53ea\u53d6\u6bcf\u4e2a\u70b9\u5411\u540e\u7684 $3$ \u4e2a\u70b9\u66f4\u65b0\u6700\u8fd1\u8ddd\u79bb\uff0c\u5e76\u53d6\u6700\u540e\u5411\u524d\u7684 $13$ \u4e2a\u70b9\u66f4\u65b0\u6700\u8fdc\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u901f\u5ea6\u5feb\u5f97\u98de\u8d77\uff0c\u76f4\u63a5\u62ff\u5230\u4e86\u6b64\u9898\u7684\u6700\u4f18\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint s1=3,s2=13,n;\ndouble mn=1e20,mx=0;\nstruct d{double x,y;}a[200005];\nbool cmp(d X,d Y){return X.x<Y.x;}\ndouble dis(int n,int m){return (a[n].x-a[m].x)*(a[n].x-a[m].x)+(a[n].y-a[m].y)*(a[n].y-a[m].y);}\nint main(){\n\tcin>>n;for(int i=0;i<n;i++)\n    \tprintf(\"%lf %lf\",&a[i].x,&a[i].y);\n    sort(a,a+n,cmp);\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=i+1;j<n&&j<i+s1;j++)\tmn=min(mn,dis(i,j)); \n\t\tfor(int j=n-1;j>=i&&j>=n-s2;j--)\tmx=max(mx,dis(i,j)); \n\t}printf(\"%.2lf %.2lf\",sqrt(mn),sqrt(mx));\n}\n```",
        "postTime": 1647398950,
        "uid": 540715,
        "name": "A_I_Skeleton",
        "ccfLevel": 0,
        "title": "P6247"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/aday526/p/solution-p6247.html)\n\n\n> $\\text{K-D Tree}$ \u5f88\u7b80\u5355\u3002 \u2014\u2014$\\texttt{zwj}$\n\n## Solution\n\n\u4e00\u79cd\u65b9\u6cd5\u662f\u5148\u628a\u6574\u68f5 $\\text{K-D Tree}$ \u5efa\u597d\uff0c\u7136\u540e\u518d\u8be2\u95ee\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u6700\u8fdc\u70b9\uff08\u6ce8\u610f\u526a\u679d\uff09\uff0c\u867d\u7136\u53ef\u4ee5\u4f18\u5316\u5efa\u6811\u4f7f\u7a7a\u95f4\u5207\u5272\u66f4\u5e73\u5747\uff0c\u4f46\u662f\u8fd9\u6837\u6bcf\u5bf9\u70b9\u4f1a\u8ba1\u7b97\u4e24\u6b21\uff0c\u5e38\u6570 $\\times 2$\u3002\n\n\u8fd8\u53ef\u4ee5\u52a8\u6001\u63d2\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5148\u8be2\u95ee\u5f53\u524d $\\text{K-D Tree}$ \u4e2d\u7684\u6700\u8fd1\u6700\u8fdc\u70b9\uff0c\u518d\u63d2\u5165\uff0c\u5c31\u80fd\u4fdd\u8bc1\u6bcf\u5bf9\u70b9\u53ea\u7b97\u4e00\u6b21\u3002\n\n\u4e0d\u8fc7\u53ef\u80fd\u51fa\u9898\u4eba\u4f1a\u5361\u4f60\u8fd9\u79cd\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7384\u5b66\u4f18\u5316\uff1a\u968f\u673a\u5316\u63d2\u70b9\u987a\u5e8f\uff0c\u6548\u679c\u5341\u5206\u660e\u663e\u3002\n\u4f46\u603b\u4f53\u6765\u8bf4\u8fd8\u662f\u7b2c\u4e00\u79cd\u597d\u4e00\u70b9\uff08\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nint n,now,ls[maxn],rs[maxn],rt;\ndouble mxx[maxn],mxy[maxn],mnx[maxn],mny[maxn],ans1=9e18,ans2;\nstruct node{\n\tdouble x,y;\n}a[maxn];\nvoid pushup(int u){\n\tmxx[u]=max(mxx[u],a[now].x);mxy[u]=max(mxy[u],a[now].y);\n\tmnx[u]=min(mnx[u],a[now].x);mny[u]=min(mny[u],a[now].y);\n}\ndouble sqr(double x){\n\treturn x*x;\n}\ndouble dis(int u){\n\treturn sqr(a[now].x-a[u].x)+sqr(a[now].y-a[u].y);\n}\ndouble mindis(int u){//\u5b50\u6811u\u4e2d\u6700\u5c0f\u8ddd\u79bb\n\treturn sqr(max(a[now].x-mxx[u],0.0)+max(mnx[u]-a[now].x,0.0))+sqr(max(a[now].y-mxy[u],0.0)+max(mny[u]-a[now].y,0.0));\n}\ndouble maxdis(int u){//\u5b50\u6811u\u4e2d\u6700\u5c0f\u8ddd\u79bb\n    return max(sqr(a[now].x-mxx[u]),sqr(mnx[u]-a[now].x))+max(sqr(a[now].y-mxy[u]),sqr(mny[u]-a[now].y));\n}\nvoid ins(int &u,bool op){\n\tif(!u)return u=now,void();\n\tif(!op)ins(a[now].x<=a[u].x?ls[u]:rs[u],1);\n\telse ins(a[now].y<=a[u].y?ls[u]:rs[u],0);\n\tpushup(u);\n}\nvoid askmin(int u){\n    if(!u)return;\n    if(u!=now)ans1=min(ans1,dis(u));\n    double l=mindis(ls[u]),r=mindis(rs[u]);\n    if(l<r){//\u526a\u679d\uff1a\u5982\u679c\u6bd4\u7b54\u6848\u5927\u5c31\u4e0d\u641c\u4e86\n        if(l<ans1)askmin(ls[u]);\n        if(r<ans1)askmin(rs[u]);\n    }else{\n        if(r<ans1)askmin(rs[u]);\n        if(l<ans1)askmin(ls[u]);\n    }\n}\nvoid askmax(int u){\n    if(!u)return;\n    ans2=max(ans2,dis(u));\n    double l=maxdis(ls[u]),r=maxdis(rs[u]);\n    if(l>r){\n        if(l>ans2)askmax(ls[u]);\n        if(r>ans2)askmax(rs[u]);\n    }else{\n        if(r>ans2)askmax(rs[u]);\n        if(l>ans2)askmax(ls[u]);\n    }\n}\nint main(){\n    srand(20201213);//\u4eca\u5929\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n        scanf(\"%lf%lf\",&a[i].x,&a[i].y);\n    random_shuffle(a+1,a+n+1);\n    for(int i=1;i<=n;i++){\n        mxx[i]=mnx[i]=a[i].x;\n        mxy[i]=mny[i]=a[i].y;\n        now++;askmin(rt);askmax(rt);ins(rt,0);\n    }printf(\"%.2lf %.2lf\\n\",sqrt(ans1),sqrt(ans2));\n\treturn 0;\n}\n```\n\n\u7ba1\u7406\u5458\u5927\u5927\u8f9b\u82e6\u4e86\uff01",
        "postTime": 1607832761,
        "uid": 312393,
        "name": "ADay",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u5176\u5b9e\u8fd9\u9898\u505a\u6cd5\u86ee\u591a\uff0c\u672c\u8d28\u5c31\u662f[P1429](https://www.luogu.com.cn/problem/P1429)\u4e0e[P1452](https://www.luogu.com.cn/problem/P1452)\u7684\u7ed3\u5408\u3002\n\n\u4e24\u9898\u90fd\u53ef\u4ee5\u4e71\u641e\uff0c\u56e0\u6b64\u6211\u4eec\u8c08\u4e00\u8c08**\u5982\u4f55\u4e71\u641e\u8fc7\u8fd9\u9898**\u3002\n\n**\u6700\u6b63\u89c4\u7684\u505a\u6cd5\u662f\u5206\u6cbb**\uff0c\u4f46\u8fd9**\u9700\u8981\u4e00\u5b9a\u7684\u8ba1\u7b97\u51e0\u4f55\u6280\u5de7**\u3002\n\n**\u6700\u6b63\u89c4\u7684\u4e71\u641e\u505a\u6cd5\u662fKDT**\uff0c\u4f46\u8fd9\u53ea\u662f\u671f\u671b\u590d\u6742\u5ea6\u53ef\u884c\uff0c**\u5b9e\u9645\u6700\u574f\u590d\u6742\u5ea6\u4f9d\u65e7\u4f1a\u6302**\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8fd8\u8981**\u53d1\u626c\u4eba\u7c7b\u667a\u6167**\uff0c\u4e86\u89e3**\u975e\u5e38\u89c4**\u7684\u4e71\u641e\u505a\u6cd5\u2014\u2014**\u968f\u673a\u5316**\u3002\n\n---\n---\n### \u4e71\u641e\u505a\u6cd5\n\n#### Part 1 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\n\n\u5148\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u6211\u4eec\u628a\u4e0b\u6807\u4ee5 $x$ \u4e3a\u5173\u952e\u5b57\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u53ef\u4ee5\u4f7f\u7528`STL`\u81ea\u5e26\u7684`std::pair`\uff0c[OI wiki\u8d44\u6599](https://oi-wiki.net/lang/csl/pair/)\uff09\uff0c\n\u7136\u540e\u4ec5\u8ba1\u7b97**\u6bcf\u4e2a\u70b9\u4e0e\u4e0b\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb**\uff0c\u8ba1\u5165\u7b54\u6848\u3002\n\n\u8fd9\u663e\u7136\u662f\u4e2a\u5047\u505a\u6cd5\uff0c[\u53cd\u4f8b](https://www.luogu.com.cn/paste/hwz62ds2)\u3002\n\n\u8003\u8651\u4ec5\u8ba1\u7b97**\u6bcf\u4e2a\u70b9\u4e0e\u4e0b $d$ \u4e2a\u70b9\u7684\u8ddd\u79bb**\uff08$d$ \u662f\u4e00\u4e2a\u4f60\u81ea\u5df1\u5b9a\u7684\u5c0f\u5e38\u6570\uff0c\u53d6 $5-10$ \u5373\u53ef\uff09\uff0c\u8ba1\u5165\u7b54\u6848\uff0c\u6b63\u786e\u7387\u5927\u5927\u63d0\u9ad8\uff08\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a\u4e0d\u8981\u81ea\u5df1\u548c\u81ea\u5df1\u6c42\u8ddd\u79bb\uff09\u3002\n\n\u4f46\u5982\u679c\u51fa\u9898\u4eba\u523b\u610f\u5361\u4f60\u548b\u529e\uff1f\n\n\u8003\u8651\u968f\u673a\u5316\u8c03\u6574\u6570\u636e\uff0c\u8b6c\u5982\u6bcf\u4e2a\u70b9\u7ed5\u539f\u70b9\u65cb\u8f6c\u67d0\u4e2a\u76f8\u540c\u89d2\u5ea6\u5565\u7684\uff08[\u600e\u4e48\u8fdb\u884c\u5411\u91cf\u65cb\u8f6c\uff1f](https://oi-wiki.net/math/vector/#_24)\uff09\u3002\n\n\u5982\u679c\u4e0d\u653e\u5fc3\uff0c**\u591a\u8dd1\u51e0\u904d**\u65cb\u8f6c\uff0b\u8d2a\u5fc3\uff0c\u6b63\u786e\u7387\u66f4\u9ad8\uff0c\u4f46\u901a\u5e38\u6ca1\u5fc5\u8981\u3002\n\n\u5229\u7528\u968f\u673a\u5316\u63d0\u9ad8\u8d2a\u5fc3\u6b63\u786e\u7387\uff0c\u79f0\u4f5c**\u968f\u673a\u5316\u8d2a\u5fc3\u7b97\u6cd5**\uff0c\u7b80\u79f0**\u968f\u8d2a**\u3002\n\n\u968f\u8d2a\u4e60\u9898\uff1a\n* [P1284 \u4e09\u89d2\u5f62\u7267\u573a](https://www.luogu.com.cn/problem/P1284)\u3002[\u968f\u8d2a\u9898\u89e3](https://www.luogu.com.cn/blog/firstfan/solution-p1284)\u3002\n* [P2392 kkksc03\u8003\u524d\u4e34\u65f6\u62b1\u4f5b\u811a](https://www.luogu.com.cn/problem/P2392)\u3002\n\n#### Part 2 \u5e73\u9762\u6700\u8fdc\u70b9\u5bf9\uff08\u51f8\u5305\u76f4\u5f84\uff09\n\n\u4f60\u4f9d\u65e7\u53ef\u4ee5\u6cbf\u7528\u4e0a\u9898\u65b9\u6cd5\uff0c\u4f46\u662f $d$ \u5e94\u8c03\u5230 $100$ \u5de6\u53f3\uff0c\u53d6 $\\max$\u3002\n\n\u4e0d\u8fc7\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u5999\u7684\u968f\u673a\u5316\u505a\u6cd5\uff0c\u5373**\u968f\u673a\u5316\u53cd\u590d\u8fed\u4ee3**\u3002\n\n\u5148\u968f\u673a\u53d6\u4e00\u4e9b\u70b9\uff08\u8fed\u4ee3\u70b9\uff09\uff0c\u6c42\u51fa\u5176\u4e0e\u6240\u6709\u70b9\u7684\u8ddd\u79bb\uff0c\u53d6\u6700\u8fdc\u7684\u66f4\u65b0\u7b54\u6848\u540c\u65f6\u4ee5\u5176\u66f4\u65b0\u5e76\u4ee5\u6b64\u70b9\u66f4\u65b0\u8fed\u4ee3\u70b9\u7ee7\u7eed\u8fed\u4ee3\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n---\n---\n### Code\n\n\u5176\u5b9e\u662f\u628a\u4e24\u9898\u62fc\u8d77\u6765\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\u6709\u70b9\u4e71\uff08\n\n\u5e26\u4e00\u4e2a`double`\u5feb\u8bfb\u6a21\u677f\u3002\n\n```cpp\n#include <algorithm>\n#include <math.h>\n#include <random>\n#include <stdio.h>\ntypedef long long llt;\ntypedef unsigned uint;typedef unsigned long long ullt;\ntypedef bool bol;typedef char chr;typedef void voi;\ntypedef double dbl;\ntemplate<typename T>bol _max(T&a,T b){return(a<b)?a=b,true:false;}\ntemplate<typename T>bol _min(T&a,T b){return(b<a)?a=b,true:false;}\nstd::pair<dbl,dbl>P[100000];dbl X[100000],Y[100000];\ndbl d(dbl x1,dbl y1,dbl x2,dbl y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}\ndbl read()\n{\n    dbl x=0,t=0;int s=0,f=1;chr c;\n    do c=getchar();while((c<'0'||c>'9')&&c!='-'&&c!='.');\n    if(c=='-')f=-1,c=getchar();\n    while(c>='0'&&c<='9'&&c!='.')x=c-'0'+x*10,c=getchar();\n    if(c=='.')c=getchar();else return x*f;\n    while(c>='0'&&c<='9')t=t*10+c-'0',++s,c=getchar();\n    while(s--)t/=10;return(x+t)*f;\n}\nconst dbl alpha=1.14514;\nint main()\n{\n    const dbl SIN=sin(alpha),COS=cos(alpha);\n    std::mt19937 rng(19260817);\n    uint n,p,q;dbl ans=1145141919810,wil;scanf(\"%u\",&n);\n    for(uint i=0;i<n;i++)X[i]=read(),Y[i]=read(),P[i].first=X[i]*COS-Y[i]*SIN,P[i].second=X[i]*SIN+Y[i]*COS;\n    std::sort(P,P+n);\n    for(uint i=0;i<n;i++)\n        for(uint j=1;j<=5&&i+j<n;j++)\n            _min(ans,d(P[i].first,P[i].second,P[i+j].first,P[i+j].second));\n    printf(\"%.2lf \",ans);\n    for(uint w=0;w<8;w++)\n    {\n        q=p=rng()%n;\n        for(uint t=0;t<5;t++)\n        {\n            wil=0;\n            for(uint i=0;i<n;i++)if(_max(wil,d(X[p],Y[p],X[i],Y[i])))q=i;\n            _max(ans,wil);\n            p=q;\n        }\n    }\n    printf(\"%.2lf\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1625187855,
        "uid": 105050,
        "name": "myee",
        "ccfLevel": 7,
        "title": "6247"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684 $n$ \u4e2a\u70b9\uff0c\u5206\u522b\u6c42\u51fa\u6700\u8fd1\u70b9\u5bf9\u548c\u6700\u8fdc\u70b9\u5bf9\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002\n\n## \u89e3\u6cd5\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u770b\u4f5c\u628a\u4e24\u4e2a\u9898\u7f1d\u5408\u5728\u4e00\u8d77\u4e86\u3002\n\n[P1429 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.com.cn/problem/P1429) \u548c [P1452 \\[USACO03FALL\\]Beauty Contest G /\u3010\u6a21\u677f\u3011\u65cb\u8f6c\u5361\u58f3](https://www.luogu.com.cn/problem/P1452)\u3002\n\n### \u6c42\u6700\u8fd1\u70b9\u5bf9\n\n\u4f7f\u7528 **\u5206\u6cbb** \u6765\u6c42\u89e3\u3002\n\n\u9996\u5148\u6309 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57 $y$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5c06\u6240\u6709\u70b9\u6392\u5e8f\u3002\n\n\u4ee4 `solve(l,r)` \u8868\u793a\u6c42\u7b2c $l$ \u5230\u7b2c $r$ \u4e2a\u70b9\u8303\u56f4\u5185\u7684\u6700\u8fd1\u70b9\u5bf9\u5b50\u95ee\u9898\u3002\n\n\u9996\u5148\u8003\u8651\u8fb9\u754c\u60c5\u51b5\uff0c\u5bf9\u4e8e $[l,r]$ \u533a\u95f4\u8f83\u5c0f\u7684\u65f6\u5019\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\uff0c\u9632\u6b62\u9012\u5f52\u8fc7\u591a\u635f\u5931\u6548\u7387\u3002\n\n\u7136\u540e\u8003\u8651\u5bf9\u4e8e $[l,mid]$ \u548c $[mid + 1,r]$ \u4e24\u4e2a\u533a\u95f4\u5904\u7406\u5b8c\u6bd5\u540e\u5982\u4f55\u5408\u5e76\u7b54\u6848\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e2a\u70b9\u5728 $[l,mid]$ \u53e6\u4e00\u4e2a\u70b9\u5728 $[mid + 1,r]$ \u7684\u70b9\u5bf9\u3002\n\n\u9996\u5148 $[l,r]$ \u8fd9\u4e2a\u533a\u95f4\u70b9\u5df2\u7ecf\u6309\u7167\u5750\u6807\u6392\u5e8f\uff0c\u4ee4\u76ee\u524d\u6c42\u5f97\u4e24\u70b9\u6700\u8fd1\u8ddd\u79bb\u4e3a $d$,\u5219\u53ea\u9700\u8981\u8003\u8651 $x \\in [x_{mid} - d,x_{mid} + d]$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u7136\u540e\u628a\u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u7684\u70b9\u518d\u4ee5\u7eb5\u5750\u6807\u6392\u5e8f\u7136\u540e\u679a\u4e3e\u70b9\u5bf9\uff0c\u6bcf\u6b21\u5f53 $(i,j)$ \u8ddd\u79bb\u8d85\u8fc7 $d$ \u65f6\u505c\u6b62\u5bf9\u4e8e $i$ \u7684\u679a\u4e3e\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u9e3d\u5de2\u539f\u7406\u8bc1\u660e\u5bf9\u4e8e\u6bcf\u4e2a\u5728 $[x_{mid} - d,x_{mid} + d]$ \u5185\u7684\u70b9 $i$ \uff0c\u6ee1\u8db3\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $d$ \u7684\u70b9 $j$ \u4e0d\u8d85\u8fc7 $6$ \u4e2a.\n\n\u7136\u540e\u662f\u590d\u6742\u5ea6\u5206\u6790 \uff1a\n\n\u5982\u679c\u5728\u5408\u5e76\u65f6\u6309\u7eb5\u5750\u6807\u6392\u5e8f\u4f7f\u7528\u7684\u662f `std::sort`\uff0c\u6709 \uff1a \n\n$$\n\nT(n) = 2T(\\frac{n}{2}) + \\mathcal{O} ( n \\log n) = \\mathcal{O} (n \\log^2 n)\n\n$$\n\n\u4f46\u662f\u5982\u679c\u4ee5\u7eb5\u5750\u6807\u4e3a\u5173\u952e\u5b57\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\u5b9e\u73b0 \uff1a \n\n$$\n\nT(n) = 2T(\\frac{n}{2}) + \\mathcal{O} ( n) = \\mathcal{O} (n \\log n)\n\n$$\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528 `std::merge` \u5b9e\u73b0\uff0c\u6bd4\u624b\u5199\u5f52\u5e76\u8fc7\u7a0b\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n### \u6c42\u6700\u8fdc\u70b9\u5bf9\n\n\u4f7f\u7528 **\u65cb\u8f6c\u5361\u58f3** \u6765\u6c42\u89e3\u3002\n\n\u6b64\u9898\u6570\u636e\u975e\u5e38\u9760\u8c31\uff0c\u5b9e\u73b0\u6709\u5c0f\u95ee\u9898\u7684\u65cb\u8f6c\u5361\u58f3\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6700\u8fdc\u70b9\u5bf9\uff0c\u4e00\u5b9a\u5728\u8fd9\u4e9b\u70b9\u5f62\u6210\u7684\u51f8\u5305\u4e0a\uff0c\u5148\u6c42\u51fa\u51f8\u5305\uff0c\u7136\u540e\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u51f8\u5305\u76f4\u5f84\u3002\n\n\u6c42\u51fa\u51f8\u5305\u540e\uff0c\u6211\u4eec\u5f97\u5230\u6309\u7167\u9006\u65f6\u9488\u6392\u5217\u7684\u51f8\u5305\u4e0a\u70b9\u7684\u5e8f\u5217\u3002\n\n\u7136\u540e\u6309\u7167\u9006\u65f6\u9488\u679a\u4e3e\u51f8\u5305\u4e0a\u7684\u8fb9\uff0c\u6b64\u65f6\u53ef\u4ee5\u53d1\u73b0\u8ddd\u79bb\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fb9\u6700\u8fdc\u7684\u70b9\u4e5f\u662f\u5728\u51f8\u5305\u4e0a\u9006\u65f6\u9488\u65cb\u8f6c\u7684\u3002\n\n\u4ee4\u679a\u4e3e\u5230\u7684\u8fb9\u4e3a $(i,i + 1)$\uff0c\u7ef4\u62a4\u7684\u6700\u8fdc\u70b9\u4e3a $j$\uff0c\u6bcf\u6b21\u5224\u65ad $(i,i + 1)$ \u5230 $j + 1$ \u7684\u8ddd\u79bb\u662f\u5426\u5927\u4e8e $(i,i + 1)$ \u5230 $j$ \u7684\u8ddd\u79bb\uff0c\u5982\u679c\u6210\u7acb\u5219\u5c06 $j$ \u52a0\u4e00\uff0c\u5426\u5219\u70b9 $j$ \u5c31\u662f\u5bf9\u4e8e $(i,i + 1)$ \u6700\u4f18\u7684\uff0c\u53ef\u4ee5\u679a\u4e3e\u4e0b\u4e00\u6761\u8fb9\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u70b9\u5230\u8fb9\u8ddd\u79bb\u5927\u5c0f\u5173\u7cfb\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 $i,i + 1,j$ \u4e09\u4e2a\u70b9\u5f62\u6210\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u548c $i,i + 1,j + 1$ \u4e09\u4e2a\u70b9\u5f62\u6210\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u6765\u5224\u65ad\uff0c\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u5916\u79ef\u7b80\u4fbf\u5730\u6c42\u9762\u79ef\u3002\n\n\u5206\u6cbb\u548c\u6c42\u51f8\u5305\u590d\u6742\u5ea6\u5747\u4e3a $\\mathcal{O} (n \\log n)$ \u4e8e\u662f\u603b\u4f53\u590d\u6742\u5ea6\u4e3a $\\mathcal{O} (n \\log n)$\u3002\n\n\u6bd4 KD-Tree \u5feb\u3002\n\n## \u4ee3\u7801\n\n```cpp\nstruct Node {\n\tdouble x,y;\n\tinline bool operator < (const Node &oth) const {\n\t\treturn (x != oth.x) ? x < oth.x : y < oth.y;\n\t}\n\t\n\tinline Node operator + (const Node &oth) const {\n\t\treturn (Node) {x + oth.x,y + oth.y};\n\t}\n\t\n\tinline Node operator - (const Node &oth) const {\n\t\treturn (Node) {x - oth.x,y - oth.y};\n\t}\n\t\n\tinline double operator * (const Node &oth) const {\n\t\treturn x * oth.y - y * oth.x;\n\t}\n}p[N];\n\n#define sq(x) ((x) * (x))\ninline double dist(const Node &a,const Node &b) {\n\treturn std::sqrt(sq(a.x - b.x) + sq(a.y - b.y));\n}\n\nint stk[N];\nbool vis[N];\n\ninline int Andrew(int n) {\n\tmems(vis,0);\n\tstd::sort(p + 1,p + n + 1);\n\tint top = 0;\n\tstk[++top] = 1;\n\tfor(int i = 2;i <= n;++i) {\n\t\twhile(top >= 2 && ((p[stk[top]] - p[stk[top - 1]]) * (p[i] - p[stk[top]]) < 0))\n\t\t\tvis[stk[top--]] = 0;\n\t\tvis[i] = 1;\n\t\tstk[++top] = i;\n\t}\n\tint tmp = top;\n\tfor(int i = n - 1;i >= 1;--i) if(!vis[i]) {\n\t\twhile(top > tmp && (p[stk[top]] - p[stk[top - 1]]) * (p[i] - p[stk[top]]) < 0)\n\t\t\tvis[stk[top--]] = 0;\n\t\tvis[i] = 1;\n\t\tstk[++top] = i;\n\t}\n\tstk[0] = stk[top];\n\treturn top;\n}\n\ninline double sqr(const Node &a,const Node &b,const Node &c) {\n\treturn std::abs((b - a) * (c - b));\n}\n\ninline double RotatingCalipers(int n) {\n\tdouble ans = 0;int j = 3;\n\tif(n <= 3)\n\t\treturn std::max(dist(p[stk[1]],p[stk[2]]),dist(p[stk[0]],p[stk[1]]));\n\tfor(int i = 1;i < n;++i) {\n\t\twhile(sqr(p[stk[i]],p[stk[i + 1]],p[stk[j]]) <= sqr(p[stk[i]],p[stk[i + 1]],p[stk[j % n + 1]]))\n\t\t\tj = j % n + 1;\n\t\tans = std::max(ans,std::max(dist(p[stk[i]],p[stk[j]]),dist(p[stk[i + 1]],p[stk[j]])));\n\t}\n\treturn ans;\n}\n\ninline bool cmpy(const Node &a,const Node &b) {\n\treturn a.y < b.y;\n}\n\ndouble ans = 1e10;\ninline void update(int x,int y) {\n\tans = std::min(ans,std::sqrt(sq(p[x].x - p[y].x) + sq(p[x].y - p[y].y)));\n}\n\nvoid solve(int l,int r) {\n\tif(r - l <= 3) {\n\t\tfor(int i = l;i <= r;++i) for(int j = i + 1;j <= r;++j)\n\t\t\tupdate(i,j);\n\t\tstd::sort(p + l,p + r + 1,cmpy);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;double midx = p[mid].x;\n\tsolve(l,mid),solve(mid + 1,r);\n\tstatic Node tmp[N];\n\tstd::merge(p + l,p + mid + 1,p + mid + 1,p + r + 1,tmp,cmpy);\n\tstd::copy(tmp,tmp + r - l + 1,p + l);\n\tint siz = 0;static int q[N];\n\tfor(int i = l;i <= r;++i) if(std::abs(p[i].x - midx) < ans) {\n\t\tfor(int j = siz;j >= 1;--j) {\n\t\t\tif(p[i].y - p[q[j]].y >= ans) break;\n\t\t\tupdate(i,q[j]);\n\t\t}\n\t\tq[++siz] = i;\n\t}\n}\n```",
        "postTime": 1642318771,
        "uid": 122520,
        "name": "\u671b\u6708Asta",
        "ccfLevel": 6,
        "title": "P6247 \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P6247 [SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9](https://www.luogu.com.cn/problem/P6247)**\n\n\u5efa\u8bae\u5148\u53bb\u505a[P1429 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.com.cn/problem/P1429)\u518d\u6765\u505a\u8fd9\u9898\u3002\n\n\u8fd9\u9898\u8ddf[P1429](https://www.luogu.com.cn/problem/P1429)\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u8981\u591a\u6c42\u51fa\u8ddd\u79bb\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u5c31\u5728\u539f\u6765\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2a\u6c42\u6700\u5927\u7684\u5c31\u597d\u4e86\u3002\uff08 $n\\le10^5$ \uff0c\u6570\u7ec4\u8fd8\u53ef\u4ee5\u5f00\u5c0f\u4e00\u70b9\uff08P1429\u662f $2\\times10^5$ \uff09\uff09\u3002\n\n\u7a0d\u5fae\u8bb2\u4e00\u4e0b\u968f\u673a\u8d2a\u5fc3\u7684\u601d\u8def\uff1a\u5c06\u6240\u6709\u70b9\u6309 $x$ \u6392\u5e8f\uff0c\u5927\u6982\u7387\u76f8\u90bb\u7684\u8ddd\u79bb\u6700\u5c0f\uff0c\u4e4b\u540e\u53ef\u4ee5\u65cb\u8f6c\u51e0\u6b21\u56fe\u518d\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\u3002\uff08\u9700\u8981\u7528\u5230\u5750\u6807\u65cb\u8f6c\u516c\u5f0f\uff09\u5982\u679c\u60f3\u5177\u4f53\u4e86\u89e3\u53ef\u4ee5\u53bbP1429\u7684\u9898\u89e3\u533a\u770b\u4e00\u770b\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u867d\u7136\u4e0d\u7a33\u5b9a\uff0c\u4f46\u662f\u6b63\u786e\u7387\u4e5f\u7b97\u662f\u5f88\u9ad8\u4e86\u3002\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<ctime>\nconst double pi=atan(1)*4;\nstruct point{\n\tdouble x,y;\n}p[100001];\ninline bool cmp(point a,point b){\n\treturn a.x<b.x;\n}\ndouble ansa=1e15,ansn;\nint n;\nvoid around(double t){\n\tt=t/180*pi;\n\tfor(register int i=1;i<=n;i++){\n\t\tdouble x=p[i].x,xx,y=p[i].y,yy;\n\t\txx=x*cos(t)-y*sin(t);\n\t\tyy=x*sin(t)+y*cos(t);\n\t\tp[i].x=xx;\n\t\tp[i].y=yy;\n\t}\n\tstd::sort(p+1,p+1+n,cmp);\n\tfor(register int i=1;i<n;i++)\n\t\tfor(register int j=i+1;j<=std::min(i+100,n);j++)\n\t\t\tansa=std::min(ansa,(p[i].x-p[j].x)*(p[i].x-p[j].x)+(p[i].y-p[j].y)*(p[i].y-p[j].y));//\u6700\u5927\n\tfor(register int i=1;i<=std::min(n,100);i++)\n\t\tfor(register int j=std::max(1,n-100);j<=n;j++)\n\t\t\tansn=std::max(ansn,(p[i].x-p[j].x)*(p[i].x-p[j].x)+(p[i].y-p[j].y)*(p[i].y-p[j].y));//\u6700\u5c0f\n}//\u5f80\u540e\u627e\u4e86100\u4e2a\u6570\uff08\u8c8c\u4f3c\u4e0d\u9700\u8981\u8fd9\u4e48\u591a\uff09\nint main(){\n\tsrand(time(NULL));\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++)\n\t\tscanf(\"%lf%lf\",&p[i].x,&p[i].y);\n\taround(0);\n\taround(rand()%360);\n\taround(rand()%360);\n\taround(rand()%360);//\u968f\u673a\u8f6c\n\tprintf(\"%.2lf %.2lf\",sqrt(ansa),sqrt(ansn));\n\treturn 0;\n}\n```\n\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u4e0d\u5230 $400ms$ \uff0c\u53ef\u4ee5\u7b97\u662f\u6bd4\u8f83\u5feb\u4e86\u3002",
        "postTime": 1621665367,
        "uid": 478461,
        "name": "lfxxx",
        "ccfLevel": 7,
        "title": "P6247 [SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9"
    },
    {
        "content": "\u6700\u5c0f\u8ddd\u79bb\u662f\u53ef\u4ee5\u7528kd-tree\u89e3\u51b3\u7684\u7ecf\u5178\u6a21\u578b\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u8fd8\u8981\u6c42\u4e00\u4e2a\u6700\u5927\u8ddd\u79bb\uff0c\u8be5\u600e\u4e48\u6c42\u5462\uff1f\n\n\u4eff\u7167\u6c42\u6700\u5c0f\u8ddd\u79bb\u7684\u4f30\u4ef7\u51fd\u6570\uff0c\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u6700\u5927\u8ddd\u79bb\u7684\u4f30\u4ef7\u51fd\u6570\uff0c\u5373\n\n$maxdis(p)=\\sqrt{\\sum\\limits_{i=0}^{degree}max((p_i-mn_i)^2,\\ (p_i-mx_i)^2)}$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u548c\u6c42\u6700\u5c0f\u8ddd\u79bb\u4e00\u6837\u5730\u53bb\u6c42\u4e86\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u95ee\u9898\uff1a\u5982\u679c\u63d0\u524d\u5c31\u628a\u6574\u68f5\u6811\u5efa\u597d\uff0c\u6c42\u6700\u5c0f\u8ddd\u79bb\u7684\u65f6\u5019\uff0c\u4f1a\u6536\u5230\u81ea\u5df1\u7684\u5f71\u54cd\u3002\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u5199\u7684\u8fc7\u7a0b\u4e2d\u6ce8\u610f\u4e00\u70b9\uff0c\u628a\u8fd9\u4e2a\u5f71\u54cd\u6d88\u9664\uff1b\u4f46\u662f\u6211\u91c7\u7528\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u81ea\u8ba4\u4e3a\u66f4\u597d\u5199\uff08~~\u8dd1\u7684\u4e5f\u633a\u5feb\u7684~~\uff09\uff1a**\u52a8\u6001\u63d2\u5165\u70b9\uff0c\u5148\u67e5\u8be2\u5f53\u524d\u70b9\u548c\u4e4b\u524d\u5df2\u7ecf\u63d2\u5165\u7684\u70b9\u7684\u8d21\u732e\uff0c\u518d\u63d2\u5165\u5f53\u524d\u70b9\u3002**\n\n\u7136\u800c\u80af\u5b9a\u662f\u61d2\u5f97\u53bb\u5199\u66ff\u7f6a\u7f8a\u91cd\u6784\u7684\u5566\uff0c\u53ef\u4ee5\u91c7\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u2014\u2014 random_shuffle \u968f\u673a\u6253\u4e71\u3002\u4f17\u6240\u5468\u77e5\uff0c\u5728\u968f\u5373\u60c5\u51b5\u4e0b\uff0c\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u6548\u7387\u662f\u5f88\u9ad8\u7684\uff1b\u7c7b\u4f3c\u5730\uff0c\u628a\u63d2\u5165\u70b9\u7684\u987a\u5e8f\u968f\u673a\u6253\u4e71\uff0ckd-tree\u7684~~\u671f\u671b~~\u6548\u7387\u4e5f\u5f88\u9ad8\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef double db;\nconst int N=1e5+5, DG=2;\nconst db inf=4e18;\nint n;\ndb min_ans=inf, max_ans=-inf;\nstruct point{\n\tdb x[DG];\n\tinline point(){\n\t\tfor(int i=0; i<DG; ++i)\n\t\t\tx[i]=0;\n\t}\n\tinline void init(){\n\t\tfor(int i=0; i<DG; ++i)\n\t\t\tscanf(\"%lf\", &x[i]);\n\t}\n}p[N];\ninline db dist(const point &a, const point &b){\n\tdb ans=0;\n\tfor(int i=0; i<DG; ++i)\n\t\tans+=(a.x[i]-b.x[i])*(a.x[i]-b.x[i]);\n\treturn ans;\n}\nstruct kdt{\n\tprivate:\n\t\tdb mi_ans, ma_ans;\n\t\tpoint p[N], mi[N], ma[N], _p;\n\t\tint tot, rt, ls[N], rs[N];\n\t\tinline int nw(const point &_p){\n\t\t\tp[++tot]=_p;\n\t\t\tfor(int i=0; i<DG; ++i)\n\t\t\t\tmi[tot].x[i]=ma[tot].x[i]=_p.x[i];\n\t\t\tls[tot]=rs[tot]=0;\n\t\t\treturn tot;\n\t\t}\n\t\tinline void upd(int u, const point &_p){\n\t\t\tfor(int i=0; i<DG; ++i){\n\t\t\t\tmi[u].x[i]=min(mi[u].x[i], _p.x[i]);\n\t\t\t\tma[u].x[i]=max(ma[u].x[i], _p.x[i]);\n\t\t\t}\n\t\t}\n\t\tinline void ins(int &u, bool d){\n\t\t\tif(!u) return void(u=nw(_p));\n\t\t\tins(_p.x[d]<=p[u].x[d]?ls[u]:rs[u], d^1);\n\t\t\tupd(u, _p);\n\t\t}\n\t\tinline db min_dis(int u, const point &_p){\n\t\t\tif(!u) return inf;\n\t\t\tdb dis=0;\n\t\t\tfor(int i=0; i<DG; ++i){\n\t\t\t\tdb tmp=max(_p.x[i]-ma[u].x[i], 0.0)\n\t\t\t\t\t+max(mi[u].x[i]-_p.x[i], 0.0);\n\t\t\t\tdis+=tmp*tmp;\n\t\t\t}\n\t\t\treturn dis;\n\t\t}\n\t\tinline db max_dis(int u, const point &_p){\n\t\t\tif(!u) return -inf;\n\t\t\tdb dis=0;\n\t\t\tfor(int i=0; i<DG; ++i){\n\t\t\t\tdb tmp=max(fabs(_p.x[i]-ma[u].x[i]), fabs(mi[u].x[i]-_p.x[i]));\n\t\t\t\tdis+=tmp*tmp;\n\t\t\t}\n\t\t\treturn dis;\n\t\t}\n\t\tinline void query_min(int u){\n\t\t\tif(!u) return;\n\t\t\tmi_ans=min(mi_ans, dist(p[u], _p));\n\t\t\tdb lv=min_dis(ls[u], _p), rv=min_dis(rs[u], _p);\n\t\t\tif(lv>rv){\n\t\t\t\tif(rv<mi_ans) query_min(rs[u]);\n\t\t\t\tif(lv<mi_ans) query_min(ls[u]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(lv<mi_ans) query_min(ls[u]);\n\t\t\t\tif(rv<mi_ans) query_min(rs[u]);\n\t\t\t}\n\t\t}\n\t\tinline void query_max(int u){\n\t\t\tif(!u) return;\n\t\t\tma_ans=max(ma_ans, dist(p[u], _p));\n\t\t\tdb lv=max_dis(ls[u], _p), rv=max_dis(rs[u], _p);\n\t\t\tif(lv<rv){\n\t\t\t\tif(rv>ma_ans) query_max(rs[u]);\n\t\t\t\tif(lv>ma_ans) query_max(ls[u]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(lv>ma_ans) query_max(ls[u]);\n\t\t\t\tif(rv>ma_ans) query_max(rs[u]);\n\t\t\t}\n\t\t}\n\tpublic:\n\t\tinline void ins(const point &P){\n\t\t\t_p=P;\n\t\t\tins(rt, 0);\n\t\t}\n\t\tinline db ask_min(const point &P){\n\t\t\t_p=P;\n\t\t\tmi_ans=inf;\n\t\t\tquery_min(rt);\n\t\t\treturn mi_ans;\n\t\t}\n\t\tinline db ask_max(const point &P){\n\t\t\t_p=P;\n\t\t\tma_ans=-inf;\n\t\t\tquery_max(rt);\n\t\t\treturn ma_ans;\n\t\t}\n}tr;\nint main(){\n\tscanf(\"%d\", &n);\n\tfor(int i=1; i<=n; ++i)\n\t\tp[i].init();\n\tsrand(time(0));\n\trandom_shuffle(p+1, p+1+n);\n\tfor(int i=1; i<=n; ++i){\n\t\tmin_ans=min(min_ans, tr.ask_min(p[i]));\n\t\tmax_ans=max(max_ans, tr.ask_max(p[i]));\n\t\ttr.ins(p[i]);\n\t}\n\tprintf(\"%.4lf %.4lf\\n\", sqrt(min_ans), sqrt(max_ans));\n\treturn 0;\n}\n```\n",
        "postTime": 1593133667,
        "uid": 68203,
        "name": "wyt2357",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "K-D Tree\u677f\u5b50\u9898 \u5b66\u4e60\u89c1[\u6211\u7684kdtree\u89c1\u89e3](https://www.luogu.com.cn/blog/van/qian-tan-pian-xu-wen-ti-yu-k-d-tree)\n\n\u9996\u5148\u5982\u679c\u6709\u76f8\u540c\u5750\u6807\u7684\u70b9\u4e4b\u95f4\u5f00\u4e2aset\u6216\u8005map\u5224\u91cd\n\n\u7136\u540e\u6839\u636e\u4f30\u4ef7\u51fd\u6570\u5957\u677f\u5b50\u5c31\u597d\u4e86 \u8be6\u89e3\u5c31\u70b9\u5f00\u94fe\u63a5\u770b\u5427\n\n\u81f3\u4e8e\u539f\u7406\u5c31\u50cf\u6811\u4e0aA*\uff0c\u4f18\u5316\u7684\u66b4\u529b\uff0c\u901a\u8fc7\u4f30\u4ef7\u51fd\u6570(\u67e5\u8be2\u70b9\u5f53\u524d\u5b50\u6811\u53ef\u80fd\u7684\u6700\u5c0f/\u6700\u5927\u503c)\u6765\u5224\u65ad\u7b54\u6848\u6709\u6ca1\u6709\u53ef\u80fd\u5728\u5b50\u6811\u4e2d\u4ee5\u5b9e\u73b0\u526a\u679d\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(n\\sqrt n)$ \u4e0d\u8fc7\u662f\u5f88\u5bb9\u6613\u5361\u6389\u4e86 \u56e0\u4e3a\u8fd9\u73a9\u610f\u5f88\u7384\u5b66\n```cpp\n#include<set>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing std::set;\nusing std::pair;\nusing std::make_pair;\nusing std::nth_element;\nconst int k(2),N(1e5+5);\ntypedef double dbl;\nconst dbl inf(1e9);\ntemplate<class type>inline const type max(const type &a,const type &b){return a>b?a:b;}\ntemplate<class type>inline const type min(const type &a,const type &b){return a<b?a:b;}\nbool f;\ninline const dbl sqr(const dbl &x){return x*x;}\nstruct point\n{\n\tdbl d[k];\n\tinline point(){}\n\tinline point(const dbl &x,const dbl &y){d[0]=x;d[1]=y;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\tif (d[f]!=p.d[f])return d[f]<p.d[f];\n\t\tfor (int i(0);i<k;i++)if (d[i]!=p.d[i])return d[i]<p.d[i];\n\t\treturn 0;\n\t}\n\tinline const bool operator!=(const point &p)const\n\t{\n\t\tfor (int i(0);i<k;i++)if (d[i]!=p.d[i])return 1;\n\t\treturn 0;\n\t}\n\tinline const friend dbl distance(const point &x,const point &y)\n\t{\n\t\tdbl dis(0);\n\t\tfor (int i(0);i<k;i++)dis+=sqr(x.d[i]-y.d[i]);\n\t\treturn dis;\n\t}\n}a[N];\ndbl ans_min(inf),ans_max;\nstruct tree\n{\n\tpoint range,mn,mx;\n\ttree *son[2];\n\tstatic tree *null;\n\tvoid *operator new(size_t size);\n\tinline tree()\n\t{\n\t\tson[0]=son[1]=null;\n\t}\n\tinline tree(const point &p):range(p),mn(p),mx(p)\n\t{\n\t\tstatic bool init(0);\n\t\tif (!init)\n\t\t\tinit=1,\n\t\t\tnull=new tree,\n\t\t\tnull->son[0]=null->son[1]=null,\n\t\t\tnull->mn.d[0]=null->mn.d[1]=inf;\n\t\tson[0]=son[1]=null;\n\t}\n\tinline const void pushup()\n\t{\n\t\tfor (int i(0);i<k;i++)\n\t\t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i])),\n\t\t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i]));\n\t}\n\tinline const dbl evalue_min(const point &p)\n\t{\n\t\tif (this==null)return inf;\n\t\tdbl f(0);\n\t\tfor (int i(0);i<k;i++)\n\t\t\tf+=sqr(max(mn.d[i]-p.d[i],0.0))+sqr(max(p.d[i]-mx.d[i],0.0));\n\t\treturn f;\n\t}\n\tinline const dbl evalue_max(const point &p)\n\t{\n\t\tif (this==null)return 0;\n\t\tdbl f(0);\n\t\tfor (int i(0);i<k;i++)\n\t\t\tf+=max(sqr(mn.d[i]-p.d[i]),sqr(mx.d[i]-p.d[i]));\n\t\treturn f;\n\t}\n\tinline const void query_min(const point &p)\n\t{\n\t\tif (this==null)return;\n\t\tif (p!=range)ans_min=min(ans_min,distance(range,p)); //\u5148\u5224\u4e00\u4e0b\u5f53\u524d\u8282\u70b9\u662f\u4e0d\u662f\u4ee3\u8868\u7740\u67e5\u8be2\u70b9\u81ea\u5df1\n\t\tconst dbl f[k]={son[0]->evalue_min(p),son[1]->evalue_min(p)};\n\t\tconst bool t(f[0]>=f[1]);\n\t\tif (f[t]<ans_min)son[t]->query_min(p);\n\t\tif (f[!t]<ans_min)son[!t]->query_min(p);\n\t}\n\tinline const void query_max(const point &p)\n\t{\n\t\tif (this==null)return;\n\t\tans_max=max(ans_max,distance(range,p)); //\u6700\u5927\u503c\u4e0d\u7528\u5224\u56e0\u4e3a\u67e5\u5230\u81ea\u5df1\u6ca1\u5f71\u54cd\n\t\tconst dbl f[k]={son[0]->evalue_max(p),son[1]->evalue_max(p)};\n\t\tconst bool t(f[0]<=f[1]);\n\t\tif (f[t]>ans_max)son[t]->query_max(p);\n\t\tif (f[!t]>ans_max)son[!t]->query_max(p);\n\t}\n}*root,*tree::null;\n#define null tree::null\nchar memory_pool[N*sizeof(tree)],*tail(memory_pool+sizeof memory_pool);\ninline void *tree::operator new(size_t size){return tail-=size;}\ninline tree *build(const int &l,const int &r,const bool &d)\n{\n\tif (l>r)return null;\n\tconst int mid(l+r>>1);f=d;\n\tnth_element(a+l,a+mid,a+r+1);\n\ttree *p(new tree(a[mid]));\n\tif (l==r)return p;\n\tp->son[0]=build(l,mid-1,!d);\n\tp->son[1]=build(mid+1,r,!d);\n\tp->pushup();\n\treturn p;\n}\nset<point>s;\nint n;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i(1);i<=n;i++)\n\t{\n\t\tfor (int j(0);j<k;j++)scanf(\"%lf\",&a[i].d[j]);\n\t\tif (!s.insert(a[i]).second)ans_min=0;\n\t}\n\troot=build(1,n,0);\n\tif (ans_min)for (int i(1);i<=n;i++)root->query_min(a[i]); //\u6709\u91cd\u70b9\u5c31\u4e0d\u7528\u518d\u53bb\u7b97\u4e86\n\tfor (int i(1);i<=n;i++)root->query_max(a[i]);\n\tprintf(\"%.2f %.2f\\n\",sqrt(ans_min),sqrt(ans_max));\n\treturn 0;\n}\n```",
        "postTime": 1585531199,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "\u5927\u6982\u662f\u6a21\u677f\u9898\uff1f\n\n\u4e24\u95ee\u90fd\u53ef\u4ee5 K-D Tree \u7136\u800c\u6211\u9009\u62e9\u968f\u673a\u65cb\u8f6c\u5750\u6807\u7cfb\u3002\u597d\u5199\uff0c\u8dd1\u5f97\u98de\u5feb\u3002\n\n\u968f\u673a\u65cb\u8f6c $5$ \u6b21\u5750\u6807\u7cfb\u7136\u540e\u627e\u6a2a\u5750\u6807\u76f8\u90bb\u7684 $10$ \u4e2a\u70b9\u66f4\u65b0\u7b54\u6848\u3002\u6700\u8fdc\u70b9\uff0c\u5c31\u9009\u6a2a\u5750\u6807\u6700\u8fdc\u7684 $100$ \u4e2a\u66f4\u65b0\u3002\n\n\u770b\u4f3c\u5f88\u4e0d\u9760\u8c31\uff1f\u5b9e\u9645\u4e0a\u6b63\u786e\u7387\u8d3c\u9ad8\uff0c\u53cd\u6b63\u6211\u4ece\u6ca1\u89c1\u4ed6\u9519\u8fc7\u3002\n\n\u6ce8\u610f\u5f00 `double`\u3002\u3002\u3002\u6211\u4e4b\u524d\u6ca1\u5f00 `double` WA \u4e86\u56db\u53d1\u3002\n\n\u76ee\u524d\u52a0\u4e0a\u5feb\u8bfb\u662f Rank 1\u3002\n\n\u6709 `freopen` \u5e76\u4e14\u6709\u5f88\u591a\u591a\u4f59\u6570\u7ec4\uff08\u56e0\u4e3a\u61d2\u5f97\u5220\uff09\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<ctime>\n#include<cstdio>\nusing namespace std;\nint n,st[100005],top;\ndouble xx[100005],yy[100005];\nstruct Point2{\n\tdouble x,y;\n\tbool operator <(const Point2 yy) const {\n\t\treturn x<yy.x;\n\t}\n}a[100005];\ndouble anss=1e20,ans=0;\ndouble Dist(Point2 i,Point2 j){\n\treturn sqrt((i.x-j.x)*(i.x-j.x)+(i.y-j.y)*(i.y-j.y));\n}\nvoid Calc(int arg){\n\tfor(int i=1;i<=n;i++){\n\t\tdouble x=a[i].x,y=a[i].y;\n\t\ta[i].x=cos(arg)*x-sin(arg)*y;\n\t\ta[i].y=sin(arg)*x+cos(arg)*y;\n\t}\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=i+100&&j<=n;j++)anss=min(anss,Dist(a[i],a[j]));\n\t}\n\tfor(int i=1;i<=10;i++){\n\t\tfor(int j=n-9;j<=n;j++)ans=max(ans,Dist(a[i],a[j]));\n\t}\n}\nint main() {\n\tfreopen(\"P6247_1.in\",\"r\",stdin);\n\tsrand(time(0));\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%lf%lf\",&a[i].x,&a[i].y),xx[i]=a[i].x,yy[i]=a[i].y;\n\tCalc(0);\n\tCalc(rand()%360);\n\tCalc(rand()%360);\n\tCalc(rand()%360);\n\tprintf(\"%.5lf \",anss);\n\tprintf(\"%.5lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1585402812,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "2020.4.9\n\n~~233\u53c8\u6c34\u4e86\u4e00\u9053\u84dd\u9898~~\n\n\u770b\u7740\u662f\u4e0d\u662f\u548c P1429 \u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\uff08\u52a0\u5f3a\u7248\uff09\u5f88\u50cf\uff1f\n\n\u6ca1\u9519\u51e0\u4e4e\u4e00\u6837\uff0c\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u6c42\u6700\u5927\u503c\u3002\n\n\u90a3\u9053\u9898\u6211\u4e5f\u5199\u4e86\u4e00\u7bc7\u9898\u89e3 ~~\uff0c\u53ef\u60dc\u6ca1\u4eba\u770b~~ \u3002\n\nhttps://www.luogu.com.cn/blog/2-6-5-3-5/solution-p1429\n\n\u5927\u610f\u662f\uff1a\u6309 $x$ \u5750\u6807\u6392\u5e8f\uff0c\u6309\u7167\u76f4\u89c9\u76f8\u8fd1\u7684\u70b9\u5e94\u8be5\u9760\u5728\u4e00\u8d77\u3002\u7136\u540e\u6bcf\u4e2a\u70b9\u5f80\u540e\u53d6 $s$ \u4e2a\u70b9/\u4ece\u6700\u540e\u8d77\u53d6 $s$ \u4e2a\u70b9\uff0c\u6bd4\u8f83\u8ddd\u79bb\uff0c\u66f4\u65b0\u6700\u5927/\u6700\u5c0f\u503c\u3002$s$ \u662f\u4e2a\u5e38\u6570\u3002P1429 \u7684\u6570\u636e\u8f83\u5f31\uff0c$s$ \u53d6 $4$ \u5c31\u884c\u3002\u8fd9\u9053\u9898 $s$ \u6700\u5c0f\u53d6 $13$\u3002\n\n\u7136\u540e\u6211\u5361\u5e38\u5361\u4e0d\u8fc7 Fee\uff0c\u53ea\u62ff\u4e86 rank2\u3002\n\n\uff08\u5176\u5b9e Fee \u7684\u505a\u6cd5\u8fd8\u8981\u65cb\u8f6c\uff0c\u8fd9\u6837\u6b63\u786e\u7387\u9ad8\u4e00\u4e9b\uff0c\u867d\u8bf4\u5e26 $\\sin,\\cos$ \u7684\u5e38\u6570\u3002\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define max(a,b) a>b?a:b\n#define min(a,b) a<b?a:b\nusing namespace std;\nconst int s=13;\nstruct note\n{\n\tdouble x,y;\n\tfriend bool operator<(const note &qwq,const note &qaq)\n\t{\n\t\treturn qwq.x<qaq.x;\n\t}\n}a[200005];\nint main()\n{\n\tregister int i,j,n;\n\tregister double mn=1e20,mx=0;\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].y); \n\tsort(a,a+n);\n\tfor(i=0;i<n;i++)\n\t{\n\t\tfor(j=i+1;j<n&&j<i+s;j++)\n\t\t\tmn=min(mn,(a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y)); \n\t\tfor(j=n-1;j>=i&&j>=n-s;j--)\n\t\t\tmx=max(mx,(a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y)); \n\t}\n\tprintf(\"%.2f %.2f\",sqrt(mn),sqrt(mx));\n} \n```\n",
        "postTime": 1586404909,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u597d\u50cf\u9898\u89e3\u533a\u88ab KDT \u5360\u9886\u4e86\uff0c\u4f46\u662f KDT \u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\sqrt n)$ \u7684\uff0c\u6211\u6765\u5199\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$ \u7684\u505a\u6cd5\uff08\u5e76\u4e14\u53ef\u4ee5\u7a0d\u4f5c\u6539\u52a8\u53d8\u6210 $O(n\\log n)$ \u7684\uff09\u3002\n\n\u5173\u952e\u8bcd\uff1a\u5206\u6cbb\u3001\u51f8\u5305\u3001\u65cb\u8f6c\u5361\u58f3\u3002\n\n\u9898\u610f\u662f\u7ed9\u5b9a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0a\u82e5\u5e72\u70b9\uff0c\u6c42\u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\u8fd9\u9898\u5f88\u663e\u7136\u662f\u4e24\u9053\u7ecf\u5178\u9898\u7684\u7f1d\u5408\u9898\uff0c\u4e00\u9053\u662f[\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9](https://www.luogu.com.cn/problem/P7883)\uff0c\u4e00\u9053\u662f[[USACO03FALL]Beauty Contest G /\u3010\u6a21\u677f\u3011\u65cb\u8f6c\u5361\u58f3](https://www.luogu.com.cn/problem/P1452)\uff0c\u4e0b\u9762\u6211\u5bf9\u8fd9\u4e24\u4e2a\u90e8\u5206\u5206\u522b\u8bb2\u89e3\u3002\n\n\u5728\u8bb2\u89e3\u4e4b\u524d\uff0c\u6211\u8981\u5148\u628a\u8fd9\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\u9700\u8981\u7684\u51fd\u6570\u548c\u7ed3\u6784\u4f53\uff08\u70b9\u548c\u5411\u91cf\uff09\u653e\u51fa\u6765\uff1a\n\n```cpp\nint sgn(long double x){\n  if(std::fabs(x)<eps) return 0;\n  return x<0?-1:1;\n}\nlong double hypot(long double x,long double y){\n  return std::sqrt(x*x+y*y);\n}\nstruct point{\n  long double x,y;\n  point operator+(const point &a)const{ return point{x+a.x,y+a.y}; }\n  point operator-(const point &a)const{ return point{x-a.x,y-a.y}; }\n  bool operator==(const point &a)const{\n    return sgn(x-a.x)==0&&sgn(y-a.y)==0;\n  }\n  bool operator<(const point &a)const{\n    return sgn(x-a.x)<0||(sgn(x-a.x)==0&&sgn(y-a.y)<0);\n  }\n  long double dist(const point &a){\n    return hypot(x-a.x,y-a.y);\n  }\n}f0[sz],f1[sz],g[sz],mgbuf[sz];\nstruct vector:virtual public point{\n  vector(point a){ x=a.x,y=a.y; }\n  long double operator*(const vector &a){\n    return x*a.y-y*a.x;\n  }\n};\n```\n\n**\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9**\n\n\u4f7f\u7528\u5206\u6cbb\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\u5148\u628a\u6240\u6709\u7684\u70b9\u5bf9\u6309\u7167 x \u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u9012\u5f52\u5206\u6cbb\uff0c\u9012\u5f52\u5230\u53ea\u6709\u4e00\u4e2a\u70b9\u65f6\u505c\u6b62\uff08\u6ce8\u610f\u7ec6\u8282\uff1a\u6b64\u65f6\u7a0b\u5e8f\u5e94\u8fd4\u56de $+\\infty$\uff09\uff0c\u4e4b\u540e\u4e24\u4e2a\u5206\u6cbb\u7684\u533a\u95f4\u5408\u5e76\u662f\u4e00\u4e2a\u96be\u70b9\uff0c\u6211\u4eec\u9664\u4e86\u5f97\u5230\u5de6\u53f3\u4e24\u4e2a\u5206\u6cbb\u533a\u95f4\u5185\u90e8\u7684\u6700\u8fd1\u70b9\u5bf9\u8ddd\u79bb $d$ \u4e4b\u5916\uff0c\u4e24\u533a\u95f4\u4ea4\u754c\u9644\u8fd1\u7684\u70b9\u4e5f\u6709\u53ef\u80fd\u6210\u4e3a\u6700\u8fd1\u70b9\u5bf9\uff0c\u56e0\u6b64\u6211\u4eec\u9009\u53d6\u4e24\u4e2a\u5206\u6cbb\u533a\u95f4\u7684\u5206\u754c\u5904\u7684\u70b9 $P$\uff0c\u4e4b\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u66b4\u529b\u5bfb\u627e\u548c\u70b9 $P$ \u7684 $x$ \u5750\u6807\u76f8\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 $d$ \u7684\u70b9\uff0c\u5c06\u8fd9\u4e9b\u70b9\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u8fd9\u4e9b\u70b9\u7684 $x$ \u5750\u6807\u548c $P$ \u76f8\u8fd1\uff0c\u63a5\u4e0b\u6765\u518d\u628a\u8fd9\u4e9b\u70b9\u6309 $y$ \u5750\u6807\u6392\u5e8f\uff0c\u66b4\u529b\u679a\u4e3e\u6240\u6709\u7684\u548c $P$ \u7684 $y$ \u5750\u6807\u76f8\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 $d$ \u7684\u70b9\uff0c\u66f4\u65b0 $d$ \u5373\u53ef\uff0c\u6700\u7ec8\u51fd\u6570\u8fd4\u56de $d$ \u5373\u53ef\u3002\n\n```cpp\nlong double getNearest(int ln,int rn,point *f){\n  if(ln>=rn) return finf;\n  int mid=(ln+rn)>>1;\n  long double d=std::min(getNearest(ln,mid,f),getNearest(mid+1,rn,f));\n  int mgpp=0;\n  for(int cx=ln;cx<=rn;++cx)\n    if(std::fabs(f[mid].x-f[cx].x)<d)\n      mgbuf[mgpp]=f[cx],mgpp++;\n  std::sort(mgbuf,mgbuf+mgpp,[](point a,point b){\n              return sgn(a.y-b.y)<0;\n            });\n  for(int cx=0;cx<mgpp;++cx){\n    for(int cy=cx+1;cy<mgpp;++cy){\n      if(std::fabs(mgbuf[cy].y-mgbuf[cx].y)>d) break;\n      d=std::min(d,mgbuf[cx].dist(mgbuf[cy]));\n    }\n  }\n  return d;\n}\n```\n\n**\u5e73\u9762\u6700\u8fdc\u70b9\u5bf9**\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5e73\u9762\u6700\u8fdc\u70b9\u5bf9\u4e00\u5b9a\u5728\u5e73\u9762\u6240\u6709\u70b9\u6784\u6210\u7684\u51f8\u5305\u4e0a\uff0c\u5bfb\u627e\u6700\u8fdc\u70b9\u5bf9\uff0c\u53ea\u9700\u5728\u51f8\u5305\u4e0a\u4ece\u6700\u9760\u8fd1\u5de6\u4e0b\u65b9\u7684\u70b9\u5f00\u59cb\u9006\u65f6\u9488\u4f9d\u6b21\u679a\u4e3e\u6240\u6709\u7684\u8fb9\uff0c\u7136\u540e\u4e0d\u65ad\u8fed\u4ee3\uff0c\u4e0d\u65ad\u66f4\u65b0\u7ed3\u679c\uff0c\u7ee7\u7eed\u9006\u65f6\u9488\u5bfb\u627e\u6700\u8fdc\u7684\u70b9\uff0c\u76f4\u5230\u51f8\u5305\u4e0a\u7684\u8fb9\u5168\u90e8\u88ab\u679a\u4e3e\u5b8c\u6bd5\u5373\u53ef\u3002\n\n```cpp\nint convexHull(int n,point *f,point *g){\n  std::sort(f,f+n);\n  n=std::unique(f,f+n)-f;\n  int v=0;\n  for(int cx=0;cx<n;++cx){\n    while(v>1&&sgn(vector(g[v-1]-g[v-2])*vector(f[cx]-g[v-2]))<=0) v--;\n    g[v]=f[cx],v++;\n  }\n  int upc=v;\n  for(int cx=n-2;~cx;--cx){\n    while(v>upc&&sgn(vector(g[v-1]-g[v-2])*vector(f[cx]-g[v-2]))<=0) v--;\n    g[v]=f[cx],v++;\n  }\n  if(n>1) v--;\n  return v;\n}\nlong double getDiameter(int n,point *f){\n  long double d=-1;\n  int cur=2;\n  if(n<3) return f[0].dist(f[1]);\n  for(int cx=0;cx<n;++cx){\n    while(std::fabs(vector(f[cx+1]-f[cx])*vector(f[cur]-f[cx+1]))\n          <=std::fabs(vector(f[cx+1]-f[cx])*vector(f[cur%n+1]-f[cx+1])))\n      cur=cur%n+1;\n    d=std::max({d,f[cx+1].dist(f[cur]),f[cx].dist(f[cur])});\n  }\n  return d;\n}\n```\n\n\u505a\u5b8c\u8fd9\u4e24\u90e8\u5206\u4e4b\u540e\uff0c\u4e3b\u51fd\u6570\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u8c03\u7528\u521a\u521a\u5199\u7684\u51fd\u6570\u5373\u53ef\u3002\n\n```cpp\nint main(){\n  std::cin.tie(nullptr)->sync_with_stdio(false);\n  std::cout.tie(nullptr)->sync_with_stdio(false);\n  std::cin>>n;\n  for(int cx=0;cx<n;++cx)\n    std::cin>>f0[cx].x>>f0[cx].y;\n  std::copy(f0,f0+n,f1);\n  std::sort(f0,f0+n);\n  long double mnans=getNearest(0,n-1,f0);\n  int v=convexHull(n,f1,g);\n  long double mxans=getDiameter(v,g);\n  std::cout<<std::setprecision(6)<<std::fixed;\n  std::cout<<mnans<<' '<<mxans<<std::endl;\n  return 0;\n}\n```\n\n**\u590d\u6742\u5ea6\u5206\u6790**\n\n\u6211\u6c42\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\u65f6\uff0c\u4e00\u5171\u5206\u6cbb\u4e86 $O(\\log n)$ \u5c42\uff0c\u6bcf\u5c42\u7528 `std::sort` \u6392\u5e8f $O(n\\log n)$\uff0c\u5bf9\u4e8e\u66b4\u529b\uff0c\u7531\u4e8e\u6211\u4eec\u5411\u4e0a\u5408\u5e76\u5206\u6cbb\u533a\u95f4\u65f6\uff0c$d$ \u4f1a\u4e0d\u65ad\u66f4\u65b0\u800c\u53d8\u5c0f\uff0c\u7531\u9e3d\u5de2\u539f\u7406\uff0c\u6bcf\u6b21\u66b4\u529b\u7684\u70b9\u4e2a\u6570\u662f $O(1)$ \u7ea7\u522b\u7684\uff0c\u56e0\u6b64\u66b4\u529b\u90e8\u5206\u662f $O(1)$ \u7684\uff0c\u56e0\u6b64\u5e73\u9762\u6700\u8fd1\u70b9\u5bf9\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u7531 $T(n)=2T(\\frac n 2)+O(n\\log n)$ \u5f97\u5230\uff0c\u5373 $O(n\\log^2 n)$\uff0c\u5982\u679c\u60f3\u8981\u7cbe\u7ec6\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u8fd9\u6837\u7684\u8bdd\u7531 $T(n)=2T(\\frac n 2)+O(n)$ \u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u66f4\u4f18\u89e3\u6cd5\u3002\n\n\u6211\u6c42\u5e73\u9762\u6700\u8fdc\u70b9\u5bf9\u65f6\uff0c\u6c42\u51f8\u5305\u7684 `convexHull` \u51fd\u6570\u662f $O(n\\log n)$ \u7684\uff0c\u74f6\u9888\u6765\u81ea `std::sort`\uff0c\u65cb\u8f6c\u5361\u58f3\u7684 `getDiameter` \u51fd\u6570\u662f $O(n)$ \u7684\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u56e0\u6b64\u672c\u9898\u7684\u672c\u89e3\u6cd5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\u3002\n\n\u53e6\u9644\uff1a[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/75408023)\uff0c\u60f3\u8981\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u627e\u6211\u3002",
        "postTime": 1652091061,
        "uid": 496840,
        "name": "SAMSHAWCRAFT",
        "ccfLevel": 0,
        "title": "[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9 - \u9898\u89e3"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\u5728n\u4e2a\u70b9\u4e2d\u627e\u6700\u8fdc\u3001\u6700\u8fd1\u70b9\u5bf9\n\n## \u3010\u5206\u6790\u3011\n\u5982\u679c\u505a\u8fc7 [P1429](https://www.luogu.com.cn/problem/P1429) \u4f60\u5c31\u77e5\u9053\u6b64\u9898\u548c\u65cb\u8f6c\u6709\u5173\n\n\u90a3\u4e48\u7b2c\u4e00\u95ee\u5c31\u662f\u6a21\u677f\u4e86\n\n\u5bf9\u4e8e\u6700\u8fd1\u70b9\u5bf9\u6765\u8bf4\uff0c\u4ece\u67d0\u4e2a\u89d2\u5ea6\u770b\u4ed6\u4eec\uff0c\u4ed6\u4eec\u662f\u76f8\u9760\u8fd1\u7684\n\n\u89c6\u89d2\u7684\u8f6c\u6362\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u5750\u6807\u6a21\u62df\n\n\u6700\u8fdc\u70b9\u5bf9\u4e5f\u662f\u7c7b\u4f3c\u7684\u505a\u6cd5\n\n\u4ece\u67d0\u4e2a\u89d2\u5ea6\u770b\u4ed6\u4eec\uff0c\u4ed6\u4eec\u5728\u89c6\u91ce\u4e24\u8fb9\n\n\u8fd9\u9898\u6570\u636e\u8fc7\u6c34\uff0c\u76f4\u63a5\u6392\u5e8f\u679a\u4e3e\u5c31\u8fc7\u4e86\n\n\u4f46\u6211\u4eec\u8ffd\u6c42\u7684\u4e0d\u4ec5\u4ec5\u662f\u8fd9\u6837\n\n\u56e0\u4e3a\u65cb\u8f6c\u7684\u89d2\u5ea6\u662f\u968f\u673a\u7684\uff0c\u5b9e\u9645\u4e0a\u65e0\u6cd5\u4fdd\u8bc1\u6b63\u786e\u6027\n\n\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7\u591a\u679a\u4e3e\u89d2\u5ea6\u63d0\u9ad8\u6b63\u786e\u6027\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e9b\u8f83\u4f18\u7684\u5c0f\u6280\u5de7\n\n\n## \u3010\u7b97\u6cd5\u3011\n\u65cb\u8f6c\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define DB double\nusing namespace std;\nconst int maxn=1e5+5,maxh=maxn<<1;\nint n;\nstruct data{\n\tDB x,y;\n}p[maxn],a[maxn];\nbool cmp1(data x,data y){\n\treturn x.x<y.x||(x.x==y.x&&x.y<y.y);\n}\nDB ans1=1e20,ans2;\nDB sqr(DB x){return x*x;}\nDB dis(data x,data y){return sqr(x.x-y.x)+sqr(x.y-y.y);}\nint main(){\n\tfreopen(\"P6247.in\",\"r\",stdin);\n\tfreopen(\"P6247.out\",\"w\",stdout);\n\tsrand(20050205);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n\tint len=sqrt(n);\n\twhile((DB)clock()/CLOCKS_PER_SEC<0.9){//\u5361\u4e2a\u65f6\u628a\u65f6\u95f4\u5229\u7528\u5230\u6781\u81f4\n\t\tDB r=(DB)rand()/RAND_MAX*3.1415926*2,SIN=sin(r),COS=cos(r);//\u5f00\u53d8\u91cf\u907f\u514d\u53cd\u590d\u8c03\u7528\u51fd\u6570\n\t\tfor(int i=1;i<=n;i++){\n\t\t\ta[i].x=p[i].x*COS-p[i].y*SIN;\n\t\t\ta[i].y=p[i].x*SIN+p[i].y*COS;\n\t\t}\n\t\tsort(a+1,a+1+n,cmp1);\n\t\tfor(int i=1;i<n;i++)\n\t\tfor(int j=1;j<=10&&i+j<=n;j++)\n\t\tans1=min(ans1,dis(a[i],a[i+j]));//\u6700\u5c0f\u503c\u76f8\u8fd1\u4f46\u4e0d\u4e00\u5b9a\u76f8\u90bb\uff0c\u5f80\u540e\u591a\u63a8\u51e0\u4e2a\uff0c\u51cf\u5c0f\u5076\u7136\u6027\n\t\tfor(int i=1;i<=len;i++)//\u6700\u5927\u503c\u5728\u4e24\u8fb9\u4f46\u4e0d\u4e00\u5b9a\u5728\u4e24\u7aef\uff0c\u5404\u679a\u4e3esqrt(n)\u4e2a\uff0c\u4e0e\u8ba1\u7b97\u524d\u8005\u7684\u590d\u6742\u5ea6\u5c3d\u91cf\u4fdd\u6301\u4e00\u81f4\uff0c\u5408\u7406\u5229\u7528\u65f6\u95f4\n\t\tfor(int j=n;j>=n-len;j--) ans2=max(ans2,dis(a[i],a[j]));\n\t}\n\tprintf(\"%.3lf %.3lf\\n\",sqrt(ans1),sqrt(ans2));//\u8ba1\u7b97\u7b54\u6848\u7684\u5e73\u65b9\u6700\u540e\u518d\u5f00\u6839\uff0c\u907f\u514d\u53cd\u590dsqrt\n\treturn 0;\n}\n```\n",
        "postTime": 1612497367,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\uff0c\u6211\u4e0d\u4f1a\u8ba1\u51e0\uff0c\u4e0d\u4f1a$\\texttt{K-D Tree}$\uff0c\u4e8e\u662f\u6211\u7528\u4e71\u641e\u8fc7\u4e86\u3002\n\n~~\u9762\u5411\u6570\u636e\u7f16\u7a0b~~\n\n\u8fd9\u7bc7\u9898\u89e3\u91cc\u9762\u4f1a\u7528\u5230\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u66b4\u529b\u53eb\u505a\u5361\u65f6\u66b4\u529b\uff0c\u5373\u9650\u5b9a\u6b64\u66b4\u529b\u6240\u7528\u7684\u65f6\u95f4\uff0c\u5982\u679c\u65f6\u95f4\u8d85\u4e86\uff0c\u5c31\u76f4\u63a5\u9000\u51fa\u5f53\u524d\u5faa\u73af\uff0c\u63a5\u4e0b\u6765\u7684\u66b4\u529b\u7686\u6307\u5361\u65f6\u66b4\u529b\u3002\n\n\u5148\u6765\u770b\u5c0f\u6570\u636e\u7684\u505a\u6cd5\uff08\u5c0f\u6570\u636e\u65e2\u6307$n$\u5c0f\uff0c\u8fd8\u6307X\u5750\u6807\u548cY\u5750\u6807\u7684\u5c0f\u65e0\u9700\u79bb\u6563\uff09\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6240\u6709\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u66b4\u529b\u4e00\u904d\uff0c\u6bcf\u6b21\u9009\u62e9\u7684\u8bdd\u6700\u5c0f\u503c\u90fd\u5c3d\u91cf\u9009\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\u76f8\u8fd1\u7684\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u6837\u80fd\u4f7f\u5176\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5c3d\u53ef\u80fd\u76f8\u8fd1\uff0c\u6700\u5927\u503c\u53cd\u4e4b\uff0c\u9009\u62e9\u6392\u5e8f\u540e\u4f4d\u7f6e\u76f8\u5dee\u8f83\u5927\u7684\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u663e\u7136\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u662f\u6700\u4e3a\u76f8\u8fd1\u7684\uff0c\u4f46\u8d77\u7801\u53ef\u4ee5\u4f5c\u4e00\u4e2a\u8fd1\u4f3c\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u6240\u6709\u70b9\u6309\u6a2a\u5750\u6807\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5e76\u91cd\u590d\u4e0a\u8ff0\u66b4\u529b\u3002\n\n\u63a5\u4e0b\u6765\u65e2\u7136\u6a2a\u5750\u6807\u6392\u4e86\u5e8f\u4e86\u66b4\u4e86\u529b\u4e86\uff0c\u4e8e\u662f\u7eb5\u5750\u6807\u6309\u540c\u6837\u7684\u65b9\u6cd5\u518d\u641e\u4e00\u6b21\u3002\n\n\u4f3c\u4e4e\u8dd1\u5f97\u8fd8\u4e0d\u9519\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u4e2d\u6709$4$\u6b21\u66b4\u529b\uff0c\u6240\u4ee5\u6bcf\u6b21\u66b4\u529b\u7684\u65f6\u95f4\u8bbe$230ms$\u5de6\u53f3\u5373\u53ef\u3002\n\n\u5927\u6570\u636e\u4ee4\u4eba\u5f88\u96be\u53d7\u554aqwq\uff0c\u4f7f\u7528\u4e0a\u8ff0\u505a\u6cd5\u7684\u8bdd\u6bcf\u6b21\u66b4\u529b\u5b9e\u9645\u4e0a\u904d\u53ca\u4e0d\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u653e\u5f03\u6309\u6a2a\u5750\u6807\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u548c\u6309\u7eb5\u5750\u6807\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e9b\u4e1c\u897f\u53ef\u80fd\u4f1a\u6d89\u53ca\u5197\u4f59\u7684\u70b9\u5bf9\uff0c\u800c\u6211\u4eec\u4e13\u5fc3\u641e\u4e00\u79cd\u6216\u8005\u4e24\u79cd\u6392\u5e8f\u7684\u66b4\u529b\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c\u5f53\u7136\u8fd9\u4e2a\u505a\u6cd5\u53ea\u9650\u4e8e\u5927\u6570\u636e\u5965\uff0c\u56e0\u4e3a\u5c0f\u6570\u636e\u7684\u8bdd\u636e\u6211\u6240\u77e5\u51fa\u9898\u4eba\u9020\u7684\u6570\u636e\u5e76\u4e0d\u968f\u673a\uff0c\u5f88\u5f3a\uff0c\u5927\u6570\u636e\u7684\u8bdd\u51fa\u9898\u4eba\u4f3c\u4e4e\u5c31\u624b\u9020\u4e0d\u51fa\u6765\u4e86\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86\u968f\u673a\u6570\u636e\uff0c\u8fd9\u4e2a\u5927\u6570\u636e\u505a\u6cd5\u5728\u968f\u673a\u6570\u636e\u4e0b\u8dd1\u7684\u6548\u679c\u5f88\u597d\uff0c\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528\u6b64\u505a\u6cd5\u6765\u641e\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u7684\u5927\u6570\u636e\u505a\u6cd5\u4e2d\u6709$2$\u6b21\u66b4\u529b\uff0c\u6240\u4ee5\u6bcf\u6b21\u66b4\u529b\u7684\u65f6\u95f4\u8bbe$480ms$\u5de6\u53f3\u5373\u53ef\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u4e71\uff0c\u4f46\u662f\u8003\u8651\u5230\u5927\u5bb6\u53ef\u80fd\u6709\u4e9b\u542c\u4e0d\u61c2\uff0c\u653e\u4e00\u4e0b\u4ee3\u7801\u5427awa\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\npair<double, double> p, a[200005];\nint tot, n;\ndouble minn = 0x7fffffffffff, maxx;\ninline double Dis(pair<double, double> a, pair<double, double> b)\n{\n    return (a.first - b.first) * (a.first - b.first) + (a.second - b.second) * (a.second - b.second);\n}\nbool cmp(pair<double, double> a, pair<double, double> b)\n{\n    return a.first < b.first;\n}\nbool cmp2(pair<double, double> a, pair<double, double> b)\n{\n    return a.second < b.second;\n}\nint main()\n{\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> p.first >> p.second;\n        a[++tot] = p;\n    }\n    if (n >= 50000 && abs(a[1].first) >= 1000)\n    {\n        sort(a + 1, a + tot + 1, cmp);\n        int i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.5 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i]));\n        sort(a + 1, a + tot + 1, cmp2);\n        i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.97 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i]));\n        printf(\"%.4f %.4f\", sqrt(minn), sqrt(maxx));\n    }\n    else\n    {\n        sort(a + 1, a + tot + 1, cmp);\n        int i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.25 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i - (j - i - 1) + 1]));\n        reverse(a + 1, a + tot + 1);\n        i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.47 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i - (j - i - 1) + 1]));\n        sort(a + 1, a + tot + 1, cmp2);\n        i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.7 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i - (j - i - 1) + 1]));\n        reverse(a + 1, a + tot + 1);\n        i = 0;\n        while ((double)clock() / CLOCKS_PER_SEC <= 0.98 && ++i && i <= tot)\n            for (int j = i + 1; j <= tot; j++)\n                minn = min(minn, Dis(a[j], a[j - i])), maxx = max(maxx, Dis(a[j - i], a[tot - i - (j - i - 1) + 1]));\n        printf(\"%.4f %.4f\", sqrt(minn), sqrt(maxx));\n    }\n}\n```\n",
        "postTime": 1600428247,
        "uid": 223797,
        "name": "Remake_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6247 \u3010[SDOI2012]\u6700\u8fd1\u6700\u8fdc\u70b9\u5bf9\u3011"
    }
]