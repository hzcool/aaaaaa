[
    {
        "content": "# P1204 \\[USACO1.2]\u6324\u725b\u5976Mixing Cows\n\u53c8\u662f\u4e00\u9053\u6a21\u62df~~\u6c34~~\u9898\u3002\n\n### \u65b9\u6cd51\uff1a\u5e03\u5c14\u6570\u7ec4\uff0c\u6253\u6807\u8bb0\uff0c\u8f93\u51fa\n\u5728\u6211\u7684[CF440A\u7684\u9898\u89e3](https://www.luogu.org/blog/lch-zhazha/cf440a-forgotten-episode)\u91cc\u9762\uff0c\u5df2\u7ecf\u8be6\u7ec6\u8bb2\u8fc7\u5173\u4e8e\u5e03\u5c14\u6570\u7ec4\u6253\u6807\u8bb0\u7684\u65b9\u6cd5\u4e86\u3002\u8fd9\u9053\u9898\u76ee\u4e2d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u628a\u6bcf\u4e00\u4e2a\u65f6\u523b\u662f\u5426\u6709\u4eba\u6324\u5976\u6807\u8bb0\u51fa\u6765\uff0c\u6700\u540e\u7528\u5faa\u73af\u627e\u5230\u6700\u957f\u6709\u4eba\u6324\u5976\u7684\u65f6\u95f4\u548c\u6700\u957f\u65e0\u4eba\u6324\u5976\u7684\u65f6\u95f4\u3002\u7279\u522b\u6ce8\u610f\uff1a300~900\u5176\u5b9e\u662f601\u79d2\uff0c\u9898\u76ee\u4e2d\u53ea\u6709600\u79d2\u3002\u7b97\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4ece300\u6807\u8bb0\u5230899\u624d\u4e0d\u4f1a\u51fa\u9519\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u82b1\u4e86\u4e00\u4e2a\u56fe\u6765\u8868\u793a\uff1a\n\n![\u5e03\u5c14\u6570\u7ec4\u56fe\u7247](https://cdn.luogu.com.cn/upload/pic/69252.png )\n\ncode\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nbool timeline[1000005];\nint my_max(int x, int y){\n\treturn x > y ? x : y;\n}\nint my_min(int x, int y){\n    return x < y ? x : y;\n}\nint main(){\n\tmemset(timeline, false, sizeof(timeline));\n\tint n, tmpx, tmpy, maxz = -1, maxa = -1;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i ++){\n\t\tscanf(\"%d%d\", &tmpx, &tmpy);\n\t\tfor(int i = tmpx; i < tmpy; i ++){\n\t\t\ttimeline[i] = true;\n\t\t}\n\t\tmaxz = my_max(maxz, tmpy);\n\t\tmaxa = my_min(maxa, tmpx);\n\t}\n\tint maxx = -1, maxy = -1;\n\tint tmpa = 0, tmpb = 0;\n\tfor(int i = maxa; i <= maxz; i ++){\n\t\tif(timeline[i]){\n\t\t\ttmpa ++;\n\t\t\ttmpb = 0;\n\t\t} else{\n\t\t\ttmpa = 0;\n\t\t\tif(i < maxz){\n\t\t\t\ttmpb ++;\n\t\t\t}\n\t\t}\n\t\tmaxx = my_max(maxx, tmpa);\n\t\tmaxy = my_max(maxy, tmpb);\n\t}\n\tprintf(\"%d %d\", maxx, maxy);\n\treturn 0;\n}\n```\n### \u65b9\u6cd52\uff1a\u7ed3\u6784\u4f53sort\n\u4e0a\u9762\u7684\u65b9\u6cd5\u867d\u7136\u7a33\u5b9a\u800c\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u72e0\u4e00\u4e9b\u5c31\u4f1a\u8d85\u65f6\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u51cf\u6cd5\u53ef\u4ee5\u7b97\u51fa\u6324\u5976\u65f6\u95f4\u548c\u672a\u6324\u5976\u65f6\u95f4\u3002\u6240\u4ee5\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u601d\u8def\u770b\u6ce8\u91ca\uff09\n\n```cpp\n#include <cstdio>\nusing namespace std;\nint my_max(int x, int y){\n\treturn x > y ? x : y;   //\u53d6\u6700\u5927\u503c\u51fd\u6570\uff0c<algorithm>\u91cc\u9762\u7684\u592a\u6162\u4e86\n}\nint main(){\n\tint o;\n\tscanf(\"%d\", &o);\n\tint maxx = -1, maxy = -1, lasttmp = 0;\n\tfor(int i = 1; i <= o; i ++){\n\t\tint tmpx, tmpy;\n\t\tscanf(\"%d%d\", &tmpx, &tmpy);    //\u8fb9\u8bfb\u8fb9\u505a\uff0c\u4e0d\u7528\u6570\u7ec4\n\t\tmaxx = my_max(maxx, tmpy - tmpx);   //\u66f4\u65b0\u6700\u957f\u6709\u4eba\u6324\u5976\u65f6\u95f4\u7684\u6700\u5927\u503c\n\t\tmaxy = my_max(maxy, tmpx - lasttmp);//\u66f4\u65b0\u6700\u957f\u65e0\u4eba\u6324\u5976\u65f6\u95f4\u7684\u6700\u5927\u503c\n\t\tlasttmp = tmpy;                 //\u66f4\u65b0\u4e0a\u4e00\u6b21\u6324\u5976\u7684\u7ed3\u675f\u65f6\u95f4\n\t}\n\tprintf(\"%d %d\", maxx, maxy);        //\u8f93\u51fa\n\treturn 0;\n}\n```\n\u5982\u679c\u50cf\u6211\u8fd9\u6837\u63d0\u4ea4\u7684\u8bdd\uff0c\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff1a\n\n![\u9519\u8bef\u793a\u8303](https://cdn.luogu.com.cn/upload/pic/69260.png )\n\n\u4e3a\u4ec0\u4e48\u662f\u9519\u8bef\u7684\u5462\uff1f\u6211\u60f3\u4e86\u534a\u5929\u6ca1\u60f3\u51fa\u6765\uff0c\u4e8e\u662f\u4f7f\u7528\u4e86\u6d4b\u8bd5\u6570\u636e\u4e0b\u8f7d\u3002\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u662f\u8fd9\u6837\u7684\uff1a\n\n```\n1\n100 200\n```\n\u8fd9\u6837\u7684\u8bdd\uff0clasttmp\u662f0\uff0c\u800c\u4e14\u8f93\u5165\u7684\u6570\u636e\u4e0d\u4e00\u5b9a\u662f\u987a\u5e8f\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6570\u636e\u6392\u5e8f\u3002\u5982\u679c\u81ea\u5df1\u624b\u5199\u6392\u5e8f\u7684\u8bdd\uff0c\u6027\u80fd\u5f88\u5dee\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f7f\u7528\\<algorithm>\u91cc\u9762\u7684sort\u51fd\u6570\u5bf9\u6211\u4eec\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u4e0b\u9762\u6211\u6765\u4ecb\u7ecd\u4ee5\u4e0bsort\u7684\u7528\u6cd5\n\nsort\u5728\\<algorithm>\u91cc\u9762\uff0c\u539f\u578b\u6709\u4e24\u4e2a\uff1a\n\n```cpp\ntemplate <class RandomAccessIterator>\nvoid sort(RandomAccessIterator first, RandomAccessIterator last);\ntemplate <class RandomAccessIterator, class Compare>\nvoid sort(RandomAccessIterator first, RandomAccessIterator last, Compare comp);\n```\n\n\u7b2c\u4e00\u79cd\u539f\u578b\u662f\u5bf9\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u9ed8\u8ba4\u7684\u5347\u5e8f\u6392\u5e8f\uff0c\u7b2c\u4e8c\u79cd\u5374\u662f\u5bf9\u6570\u7ec4\u8fdb\u884c\u81ea\u5b9a\u4e49\u89c4\u5219\u7684\u6392\u5e8f\u3002\n\ncomp\u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u5b83\u5bf9\u4e24\u4e2a\u548c\u6570\u7ec4\u7c7b\u578b\u76f8\u540c\u7684\u6570\u8fdb\u884c\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\uff0c\u5982\u679c\u8fd4\u56detrue\u5219\u4e0d\u4ea4\u6362\uff0c\u5426\u5219\u4ea4\u6362\u3002\u5bf9\u4e00\u4e2a\u670910\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u662f\u8fd9\u6837\u7684\uff1a\n\n```cpp\nsort(a, a + 10, cmp);\n```\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u4f7f\u7528sort\u53ea\u80fd\u6392\u5e8f\u4e00\u7ec4\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u4f7f\u7528\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684cmp\u51fd\u6570\u5bf9\u6574\u4e2a\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u5177\u4f53\u601d\u8def\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/69288.png )\n\n\u4f46\u662f\uff0c\u5982\u4f55\u5b9a\u4e49\u7ed3\u6784\u4f53\u5462\uff1f\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u5173\u952e\u5b57\u662fstruct\uff0c\u662fstructure\u7684\u7b80\u5199\u3002\u5177\u4f53\u683c\u5f0f\u5982\u4e0b\uff1a\n\n```cpp\nstruct \u7ed3\u6784\u4f53\u540d{\n\t\u6210\u5458\u53d8\u91cf;\n\t\u6210\u5458\u51fd\u6570;\n};\n\u7ed3\u6784\u4f53\u540d \u53d8\u91cf;\n```\n\u7ed3\u6784\u4f53\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\u5f88\u6709\u7528\u3002\u4f46\u662f\uff0c\u5b83\u4e5f\u662fsort\u7684\u7edd\u4f73\u642d\u6863\u3002\u56e0\u4e3a\u6392\u5e8f\u65f6\uff0c\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u6bcf\u4e00\u6761\u4fe1\u606f\u8fdb\u884c\u4ea4\u6362\uff0c\u800c\u4f7f\u7528\u6570\u7ec4\u5e76\u4e0d\u80fd\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6240\u4ee5\uff0c\u4f7f\u7528\u7ed3\u6784\u4f53\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u5f88\u591a\u590d\u6742\u7684\u6392\u5e8f\u95ee\u9898\u3002\u5177\u4f53\u53c2\u8003\uff1a\n\n> \u6d1b\u8c37\u8bd5\u70bc\u573a\u666e\u53ca\u7ec3\u4e60\u573a\u6392\u5e8f\u4e0e\u6392\u5e8fex\n\n\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b58\u50a8\u6bcf\u4e00\u6761\u4fe1\u606f\u7684\u548c\uff0c\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u6309\u56fe\u4e0a\u7684\u601d\u8def\u8f93\u51fa\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint N; \nstruct node{\n    int begin, end;\n}m[5005];\nbool cmp(node a, node b){\n    return a.begin < b.begin;\n}\nint main(){\n    scanf(\"%d\", &N);\n    for(register int i = 1; i <= N; ++ i)\n        scanf(\"%d%d\", &m[i].begin, &m[i].end);\n    sort(m + 1, m + 1 + N, cmp);\n    int begin = m[1].begin;\n    int end = m[1].end;\n    int ans1 = 0, ans2 = 0;\n    for(register int i = 2; i <= N; ++ i){\n        if(m[i].begin <= end)\n            end = max(end, m[i].end);\n        else{\n            ans1 = max(ans1, end - begin);\n            ans2 = max(ans2, m[i].begin - end);\n            begin = m[i].begin;\n            end = m[i].end;\n        }\n    }\n    ans1 = max(ans1, end - begin);\n    printf(\"%d %d\", ans1, ans2);\n    return 0;\n}\n```\n\nP.S \u8fd9\u4e2a\u4ee3\u7801\u662f\u6211\u4eec\u673a\u623f\u7684\u540c\u5b66\u5199\u7684\u3002\u8fd9\u9053\u9898\u662f\u6211\u4eec\u8003\u8bd5\u9898\u76ee\u7b2c\u4e00\u9898\uff0c\u6211\u7528\u7684\u662f\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u800c\u4ed6\u7528\u7684\u5c31\u662f\u8fd9\u4e00\u79cd\u3002\n",
        "postTime": 1564990078,
        "uid": 192631,
        "name": "\u5b66\u800c\u601d\u674e\u8001\u5e08",
        "ccfLevel": 5,
        "title": "P1204 [USACO1.2]\u6324\u725b\u5976Mixing Cows"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u975e\u5e38\u660e\u663e\u53ef\u4ee5\u7528\u5dee\u5206\u6765\u505a~\n\n\u5dee\u5206\u7684\u601d\u60f3\uff1a\u7528O\uff081\uff09\u7684\u590d\u6742\u5ea6\u6765\u8868\u793a\u4e00\u6b21O\uff08n\uff09\u7684\u8986\u76d6:\u8bbeb[i]=a[i]-a[i-1]\uff0c\u5219\u5f53a[l]\u5230a[r]\u5747\u589e\u52a0\u4e00\u65f6\uff0c\u5219\u53ea\u9700b[l]++,b[r+1]--\uff0c\u5176\u4f59\u7684\u7531\u4e8e\u524d\u540e\u4e24\u76f8\u5dee\u672a\u53d8\uff0cb\u4e0d\u9700\u6539\u52a8\u3002\u8fd9\u6837\uff0c\u4fbf\u53ef\u4ee5\u7528b\u6765\u8868\u793aa\u7684\u53d8\u5316\u3002\uff08\u6700\u540e\u5c06b\u590d\u539f\u6210a\u5373\u53ef\uff09\u3002\u53e6\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff1a\u9898\u610f\u6709\u4e9b\u5751\u4eba\uff1a\u4e00\u4e2a\u6324\u725b\u5976\u65f6\u95f4\u6bb5\uff08a,b\uff09\u8bf4\u7684\u662f\u4ece\u7b2ca\u79d2\u4e00\u76f4\u5230b-1\u79d2\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u662fb[r+1]--\uff0c\u800c\u662fb[r]--\u3002\u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint c[1000002]={0};//\u5dee\u5206\u6570\u5217\nint main()\n{\n    int start=2e9,end=-2e9;//\u6700\u5927\u6700\u5c0f\u503c\u521d\u59cb\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97\u5f00\u59cb\u548c\u7ed3\u675f\u6324\u725b\u5976\u7684\u65f6\u95f4\n    int n;//\u8bfb\u5165\u6570\u636e\u4e2a\u6570\n    int a,b;//\u6324\u725b\u5976\u65f6\u6bb5\n    int tf=1;\n    int t[2]={0};//tf=1\uff1a\u8ba1\u7b97\u6700\u957f\u6709\u4eba\u6324\u725b\u5976\u65f6\u6bb5\uff0c\u7528t[1]\u8bb0\u5f55\uff1btf=0\uff1a\u8ba1\u7b97\u6700\u957f\u65e0\u4eba\u6324\u725b\u5976\u65f6\u6bb5\uff0c\u7528t[0]\u8bb0\u5f55\n    int nstart;//\u7528\u4e8e\u8ba1\u7b97t[0]\u548ct[1]\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        c[a]++;\n        c[b]--;//\u5dee\u5206\n        start=min(start,a);\n        end=max(end,b-1);//\u53d6\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n    }\n    nstart=start;//\u533a\u95f4\u5f00\u59cb\u65f6\u95f4\u70b9\n    int nc;\n    end++;//\u4fdd\u8bc1\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff0c\u53ca\u6700\u540e\u7684\u6324\u725b\u5976\u65f6\u6bb5\u603b\u65f6\u957f\u80fd\u8ba1\u7b97\u6b63\u786e\n    for(int i=start;i<=end;i++)\n    {\n        c[i]=c[i-1]+c[i];//\u6062\u590da\u6570\u7ec4\n        nc=c[i]==0?0:1;//c[i]\u662f\u5426\u5927\u4e8e0\n        if(nc!=tf||i==end)//\u662f\u5426\u53ef\u4ee5\u7edf\u8ba1\n        {\n            t[tf]=max(t[tf],i-nstart);//\u53d6\u6700\u957f\u65f6\u6bb5\uff0c\u8ba1\u7b97\u65f6\u6bb5\n            nstart=i;//\u53d6\u65b0\u7684\u65f6\u95f4\u5f00\u59cb\u70b9\n            tf=1-tf;//\u6362\u4e00\u7c7b\u8fdb\u884c\u8ba1\u7b97\n        }\n    }\n    printf(\"%d %d\",t[1],t[0]);//\u8f93\u51fa\uff0c\u8bb0\u5f97t[0],t[1]\u987a\u5e8f\n    return 0;\n}\n```",
        "postTime": 1502237759,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "## \u4e00\u9053\u7b80\u5355\u7684\u9898\u76ee\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u6574\u4e2a\u65f6\u95f4\u770b\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u4e0d\u591a\u8bf4\u76f4\u63a5\u7ed9\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\ninline int read(){//\u5feb\u901f\u8bfb\u5165\uff0c\u4e0d\u89e3\u91ca \n\tint x=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nint a[10005];\nint n,l,r,ml=1e9,mr=-1;//ml\u4ee3\u8868\u533a\u95f4\u6700\u5c0f\u503c\uff0cmr\u4ee3\u8868\u533a\u95f4\u6700\u5927\u503c \nine ans1=-1,ans2=-1,max1=0,max2=0; \nint main(){\n\tmemset(a,0,sizeof(a))//\u521d\u59cb\u5316\uff0c\u5168\u90e8\u4e3a0 \n\tn=read();//\u8bfb\u5165n \n\tfor(int i=1;i<=n;i++){\n\t\tl=read();\n\t\tr=read();\n\t\tml=std::min(ml,l);//\u6c42\u51fa\u533a\u95f4\u6700\u5927\u503c \n\t\tmr=std::max(mr,r);//\u6c42\u51fa\u533a\u95f4\u6700\u5c0f\u503c \n\t\tfor(int j=l;j<=r;j++)\n\t\t\ta[j]=1;//\u6807\u8bb0\uff0c\u5c06\u6709\u4eba\u6324\u5976\u7684\u65f6\u95f4\u8d4b\u503c\u4e3a1 \n\t}\n\tfor(int i=ml;i<=mr;i++){\n\t\tif(a[i])max1++;//\u4e0d\u505c\u7d2f\u52a0 \n\t\telse{\n\t\t\tans1=std::max(ans1,max1);//\u6c42\u51fa\u6700\u957f\u7684\u4e00\u76f4\u6709\u4eba\u6324\u5976\u7684\u65f6\u95f4\u957f\u5ea6 \n\t\t\tmax1=0;//\u7ee7\u7eed\u679a\u4e3e \n\t\t}\n\t\tif(!a[i])max2++;\n\t\telse{\n\t\t\tans2=std::max(ans2,max2);\n\t\t\tmax2=0;\n\t\t}\n\t}\n\tstd::cout<<ans1<<\" \"<<ans2;//\u8f93\u51fa\u7ed3\u679c \n\treturn 0;//\u517b\u6210\u597d\u4e60\u60ef \n\t//std::\u5b9e\u9645\u6ca1\u4ec0\u4e48\u7528\u53ea\u662f\u52a0\u5feb\u7f16\u8bd1\u901f\u5ea6 \n}\n```\n\u7ed9\u4e2a\u8d5e\u518d\u8d70\u5427",
        "postTime": 1576839201,
        "uid": 216121,
        "name": "hanxin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u79bb\u6563\u5316\u7684\u9898\u76ee\u3002\n\n\u867d\u7136\u9898\u76ee\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u4f46\u662f\u7528\u79bb\u6563\u5316\u53ef\u4ee5\u5927\u5927\u4f18\u5316\u65f6\u95f4\u3002\n\n\u79bb\u6563\u5316\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5bf9\u4e8e\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u53ea\u4fdd\u7559\u5b83\u7684\u5934\u4f4d\u7f6e\u548c\u5c3e\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u8fd9\u4e2a\u70b9\u662f\u5934\u662f\u5c3e\u7684\u4fe1\u606f\u3002\n\n\u90a3\u4e48\u6837\u4f8b\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\u3002\n\n![404](https://cdn.luogu.com.cn/upload/image_hosting/10g92cwl.png)\n\n\u5176\u4e2d\u9ec4\u8272\u90e8\u5206\u662f\u8d77\u70b9\uff0c\u7eff\u8272\u90e8\u5206\u662f\u7ec8\u70b9\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u5176\u6309\u4f4d\u7f6e\u6392\u5e8f\u3002\n\n![404](https://cdn.luogu.com.cn/upload/image_hosting/xa9ytpkx.png)\n\n\u63a5\u4e0b\u6765\u5bf91\uff0c1\uff0c-1\uff0c-1\uff0c1\uff0c-1\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c\uff0c\u5e76\u4e14\u6c42\u51fa\u503c\u5927\u4e8e0\u7684\u6700\u957f\u533a\u95f4\u548c\u503c\u7b49\u4e8e0\u7684\u6700\u957f\u533a\u95f4\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u53e6\u5916\u8981\u6ce8\u610f\u7684\u662f\u6392\u5e8f\u65f6\u5148\u6309\u4f4d\u7f6e\u5c0f\u4f18\u5148\uff0c\u4f4d\u7f6e\u76f8\u540c\u52191\u4f18\u5148\u3002\n\n\u653e\u4ee3\u7801\uff1a\n```pascal\nvar m,n,i,x,y,t,j,h,s,z,max,min:longint;\n    a,b:array[0..200001] of longint;\nprocedure sort(l,r: longint);\nvar\n  i,j,x,y,x1: longint;\nbegin\n  i:=l;j:=r;\n  x:=a[(l+r) div 2];\n  x1:=b[(l+r) div 2];\n  repeat\n    while (a[i]<x) or (a[i]=x) and (b[i]>x1) do inc(i);\n    while (x<a[j]) or (a[j]=x) and (x1>b[j]) do dec(j);\n    if not(i>j) then\n      begin\n        y:=a[i];a[i]:=a[j];a[j]:=y;\n        y:=b[i];b[i]:=b[j];b[j]:=y;\n        inc(i);j:=j-1;\n      end;\n  until i>j;\n  if l<j then  sort(l,j);\n  if i<r then  sort(i,r);\nend;       \n      //\u5feb\u6392\u4e0d\u89e3\u91ca\uff0c\u6ce8\u610f\u5148\u6309\u4f4d\u7f6e\u5c0f\u4f18\u5148\uff0c\u4f4d\u7f6e\u76f8\u540c\u52191\u4f18\u5148\u3002\n\nbegin\nreadln(n);\nfor i:=1 to n do\n  begin\n  readln(x,y);\n  t:=t+1;\n  a[t]:=x;\n  b[t]:=1;               //\u6807\u8bb0\u8d77\u70b9\u4f4d\u7f6e\u4e0e\u4fe1\u606f\n  t:=t+1;\n  a[t]:=y;\n  b[t]:=-1;              //\u6807\u8bb0\u7ec8\u70b9\u4f4d\u7f6e\u4e0e\u4fe1\u606f \n  end;\nsort(1,t);                  //\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\nx:=0;\nfor i:=1 to t do\n  begin\n  if (x=0) and (b[i]=1) then           //\u65b0\u4e00\u6bb5\u7684\u5f00\u59cb\n    begin\n    if ((a[i]-a[i-1])>max) and (i<>1) then \n      max:=a[i]-a[i-1];              //\u8bb0\u5f55\u6700\u957f\u65e0\u4eba\u5de5\u4f5c\u65f6\u95f4\n    z:=a[i];                       //\u8bb0\u5f55\u6709\u4eba\u5de5\u4f5c\u7684\u5f00\u59cb\u65f6\u95f4\n    end;\n  x:=x+b[i];                     //\u7d2f\u52a0\u4fe1\u606f\n  if x=0 then                      //\u4e00\u6bb5\u7684\u7ed3\u675f\n    begin\n    s:=s+a[i]-z;                    \n    if (a[i]-z)>min then min:=a[i]-z;    \n            //\u8bb0\u5f55\u6700\u957f\u6709\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\u6bb5\n    end;\n  end;\nwriteln(min,' ',max);     //\u8f93\u51fa\u7ed3\u679c\nend.\n```\n",
        "postTime": 1569119914,
        "uid": 70917,
        "name": "\u76ae\u5361\u4e18\u6700\u840c",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "## [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9898752.html)\n\n#### \u539f\u9898\u4f20\u9001\u95e8\uff1a[P1204 [USACO1.2]\u6324\u725b\u5976Milking Cows](https://www.luogu.org/problemnew/show/1204)\n\n#### \u5b9e\u9645\u662f\u9053\u5f88\u5f31\u667a\u7684\u9898\u76eeqaq\n\n#### \u4f46\u7a9d\u8fd8\u662f\u89c9\u5f97\u7528\u73c2\u6735\u8389\u6811\u5199\u4f1a++rp\uff08\u7a9d\u90fd\u521d\u4e8c\u4e86\uff0c\u8fd8\u8981\u8003pj\uff09\n\n## \u524d\u7f6e\u829d\u58eb\uff1a\u73c2\u6735\u8389\u6811\n\n### [\u7a9d\u535a\u5ba2\u91cc\u5bf9\u73c2\u6735\u8389\u6811\u7684\u4ecb\u7ecd](https://www.cnblogs.com/yzhang-rp-inf/p/9443659.html )\n\n### \u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u81ea\u5df1\u770b\u770b\u5427\n\n#### \u6bcf\u4e2a\u519c\u592b\u5c31assign_val\u4e00\u4e0b\uff0c\u4f46\u8981\u6ce8\u610f\u4e00\u4e0b\u7ec6\u8282qaq\n\n#### ~~\u7a9d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u56e0\u8fd9\u4e2a\u9519\u8c03\u4e86\u6211\u5b9e\u9645\u5206\u949fqaq~~\n\n#### \u5e94\u8be5\u5199assign_val(l,r-1,1)\uff0c\u67e5\u8be2\u65f6\u5e94\u5199query\uff08lmin\uff0crmax\uff0c1/0\uff09\n\n#### \u5176\u4ed6\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u7ec6\u8282\u8be6\u89c1\u7a0b\u5e8f\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include<bits/stdc++.h>\n#define IT set<node>::iterator\nusing namespace std; \nstruct IO_Tp\n{\n    static const int _I_Buffer_Size = 1 << 24;\n    char _I_Buffer[_I_Buffer_Size];\n    char* _I_pos;\n    static const int _O_Buffer_Size = 1 << 24;\n    char _O_Buffer[_O_Buffer_Size];\n    char* _O_pos;\n    IO_Tp() : _I_pos(_I_Buffer), _O_pos(_O_Buffer)\n    {\n        fread(_I_Buffer, 1, _I_Buffer_Size, stdin);\n    }\n    ~IO_Tp()\n    {\n        fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout);\n    }\n    inline bool is_digit(const char ch)\n    {\n        return '0' <= ch && ch <= '9';\n    }\n    inline IO_Tp& operator>>(int& res)\n    {\n        res = 0;\n        while (!is_digit(*_I_pos))\n            ++_I_pos;\n        do\n            (res *= 10) += (*_I_pos++) & 15;\n        while (is_digit(*_I_pos));\n        return *this;\n    }\n    inline IO_Tp& operator<<(int n)\n    {\n        static char _buf[10];\n        char* _pos(_buf);\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf)\n            *_O_pos++ = *--_pos;\n        return *this;\n    }\n    inline IO_Tp& operator<<(char ch)\n    {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\ninline int Max(register int a,register int b)\n{\n    return a>b?a:b;\n}\ninline int Min(register int a,register int b)\n{\n    return a<b?a:b;\n}\nstruct node\n{\n    int l,r;\n    mutable bool v;\n    node(int L, int R=-1, bool V=0):l(L), r(R), v(V) {}\n    bool operator<(const node& o) const\n    {\n        return l < o.l;\n    }\n};\nset<node> s;\nIT split(int pos)\n{\n    IT it = s.lower_bound(node(pos));\n    if (it != s.end() && it->l == pos) \n        return it;\n    --it;\n    int L = it->l, R = it->r;\n    bool V = it->v;\n    s.erase(it);\n    s.insert(node(L, pos-1, V));\n    return s.insert(node(pos, R, V)).first;\n}\nvoid assign_val(int l,int r,bool v)\n{\n    IT itr = split(r+1),itl = split(l);\n    s.erase(itl, itr);\n    s.insert(node(l, r, v));\n}\ninline int query(register int l,register int r,register bool v)\n{\n    int sum=0,res=0;\n    IT itr = split(r+1),itl = split(l);\n    for(;itl!=itr;++itl)\n        if(itl->v==v)\n            sum+=itl->r-itl->l+1;\n        else\n        {\n            res=Max(res,sum);\n            sum=0;\n        }\n    return res;\n}\nint main()\n{\n    int n;\n    IO>>n;\n    int a=1000005,b=0;\n    s.insert(node(0,1000005));\n    while(n--)\n    {\n        int l,r;\n        IO>>l>>r;\n        assign_val(l,r-1,1);\n        a=Min(a,l);\n        b=Max(b,r);\n    }\n    IO<<query(a,b,1)<<' '<<query(a,b,0);\n    return 0;\n}\n```",
        "postTime": 1541167810,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n//\u5c31\u662f\u628a\u6709\u4eba\u6324\u5976\u7684\u65f6\u95f4\u6807\u8bb0\u4e3a1\u6ca1\u4eba\u6807\u8bb0\u4e3a0\uff0c\u518d\u53bb\u641c\u7d22\u7d2f\u52a0 \nint main(){\n    char z[1001000];\n    int i,j,n,a,b,mina=1001000,maxb=-1;//\u6700\u5c0f\u7684a\uff0c\u6700\u5927\u7684b \n    int maxlx=-1,maxmr=-1,//\uff0c\u6700\u957f\u6709\u4eba\uff0c\u6700\u957f\u6ca1\u4eba\n    int t1=0,t0=0;//max\u8fde\u7eed\uff0cmax\u6ca1\u4eba \n    scanf(\"%d\",&n);\n    for(i=0;i<1001000;i++) z[i]='0';//\u521d\u503c\u5168\u90e8\u4e3a0 \n    for(i=0;i<n;i++){\n        scanf(\"%d%d\",&a,&b);\n        if(a<mina) mina=a;\n        if(b>maxb) maxb=b;\n        for(j=a;j<b;j++){ \n            z[j]='1';\n        }\n    }\n    for(i=mina;i<=maxb;i++){//\u641c\u7d22 \n        if(z[i]=='1') t1++;\n        else if(z[i]=='0') t0++;\n        if(z[i+1]=='1'){\n            if(t0>maxmr) maxmr=t0;\n            t0=0;\n        } \n        else if(z[i+1]=='0'){\n            if(t1>maxlx) maxlx=t1;\n            t1=0;\n        } \n    }\n    if(t1>maxlx) maxlx=t1;//\u68c0\u67e5\u6700\u540e\u4e00\u6b21\u7684 \n    if(t0>maxmr) maxmr=t0;// \u68c0\u67e5\u6700\u540e\u4e00\u6b21\u7684 \n    if(maxlx==1) maxlx=0;//\u7279\u5224 \n    if(maxmr==1) maxmr=0;//\u7279\u5224 \n    printf(\"%d %d\",maxlx,maxmr);//\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1472969999,
        "uid": 19631,
        "name": "\u5eb8\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u7684\u8bdd\uff0c\u6211\u4eec\u5148\u5f04\u6e05\u695a\u6c42\u4ec0\u4e48\uff0c\u636e\u9898\u610f\u6211\u4eec\u77e5\u9053\u8981\u6c42\u7684\u662f\u81f3\u5c11\u4e00\u4eba\u6324\u5976\u65f6\u95f4\u6bb5\u6700\u5927\u503c\u4e0e\u7a7a\u95f2\u65f6\u95f4\u6bb5\u6700\u5927\u503c\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u4f46\u65e0\u5948\uff0c\u6240\u9700\u7a7a\u95f4\u592a\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u7528\u5230\u4e86\u79bb\u6563\u5316\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u79bb\u6563\u5316\u6210\u4e00\u4e2a\u70b9\uff0c\u70b9\u503c\u4e3a\u65f6\u95f4\u6bb5\u957f\u77ed\uff0c\u4f46\u4e3a\u4e86\u66f4\u5bb9\u6613\u8ba1\u7b97\uff0c\u6211\u4eec\u5c06\u7a7a\u95f2\u65f6\u95f4\u6bb5\u8bbe\u4e3a\u65f6\u95f4\u6bb5\u957f\u5ea6\u7684\u8d1f\u503c\uff0c\u8fd9\u6837\u5728\u7ebf\u6bb5\u6811\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u533a\u95f4\u6700\u5927\u503c\uff0c\u53e6\u4e00\u4e2a\u662f\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u53ea\u8981\u5efa\u6811\u5c31\u884c\u4e86\uff0c\u6700\u540e\u8f93\u51fa\u6839\u8282\u70b9\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u8d1f\u6570\u5c31\u53ef\u4ee5\u3002\n\n\n\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u7ed9\u6700\u5c0f\u503c\u8d4b\u521d\u503c\u7684\u65f6\u5019\u8981\u4e0e0\u4e4b\u95f4\u53d6\u6700\u5c0f\u503c\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f \u4f60\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65f6\u5019\u6700\u5c0f\u503c\u8d4b\u7684\u521d\u503c\u5c45\u7136\u662f\u5927\u4e8e0\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fd9\u6837\u505a\n\n\n\u53ea\u662f\u5927\u6982\u8bf4\u4e86\u4e00\u4e0b\u601d\u8def\uff0c\u4e0b\u9762\u8d34\u4e00\u4e0bAC\u4ee3\u7801\uff0c\u91cd\u8981\u90e8\u5206\u5df2\u7ecf\u6ce8\u91ca\n\n\n\n\n\n\n\n    \n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 5009\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\nusing namespace std;\nint z[N<<2|1],minx[N<<2|1],maxx[N<<2|1];                //\u7ebf\u6bb5\u6811\u7ec4\u4ef6 \nstruct time{                      //\u79bb\u6563\u5316\u7ed3\u6784 \n    int l,r;\n}t[N];\nbool operator < (const time &a,const time &b){            //\u91cd\u8f7d\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff0c\u4e3a\u540e\u9762STL\u6392\u5e8f \n    return a.l < b.l;\n}\nvoid update(int rt){                //\u66f4\u65b0\u6700\u5927\u6700\u5c0f\u503c \n    minx[rt] = min(minx[rt<<1],minx[rt<<1|1]);\n    maxx[rt] = max(maxx[rt<<1],maxx[rt<<1|1]);\n}\nvoid build(int l,int r,int rt){   //\u5efa\u6811 \n    if(l == r){\n        minx[rt] = min(0,z[l]);\n        maxx[rt] = z[l];\n        return;\n    }\n    int m = (l+r)>>1;\n    build(lson);\n    build(rson);\n    update(rt);\n}\nint main(){\n    int n;\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d%d\",&t[i].l,&t[i].r);\n    }\n    sort(t+1,t+n+1);                  //\u4e3a\u4e0b\u9762\u79bb\u6563\u5316\u800c\u6392\u5e8f \n    int p = 0;\n    int ll = t[1].l,rr = t[1].r;\n    for(int i = 1; i <= n; i++){               //\u79bb\u6563\u5316\u8fc7\u7a0b \uff0c\u6211\u4eec\u5c06\u65f6\u95f4\u6bb5\u53d8\u6210\u70b9\uff0c\u70b9\u503c\u5373\u4e3a\u6bb5\u957f \n        if(t[i].l <= rr && t[i].r > rr){\n            rr = t[i].r;\n        }\n        else if(t[i].r <= rr && t[i].l >= ll)continue;\n        else{\n            z[++p] = rr-ll;                      //\u5728\u8fd9\u91cc\uff0c\u81f3\u5c11\u6709\u4e00\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\u8bb0\u4e3a\u6b63\u5e38\u65f6\u95f4\u6bb5 \uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\u4ee5\u6700\u5927\u503c\u5b58\u50a8 \n            z[++p] = -(t[i].l - rr);            //\u800c\u5bf9\u4e8e\u6ca1\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\u6bb5\uff0c\u6211\u4eec\u5c06\u6b64\u65f6\u95f4\u6bb5\u503c\u8bbe\u4e3a\u8d1f\u503c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\u4ee5\u6700\u5c0f\u503c\u5b58\u50a8 \n            ll = t[i].l;\n            rr = t[i].r;\n        }\n    }\n    z[++p] = rr-ll;\n    build(1,p,1);                           //\u5efa\u9020\u7ebf\u6bb5\u6811\u5373\u53ef\u6c42\u51fa\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c \n    printf(\"%d %d\\n\",maxx[1],-minx[1]);     //\u6700\u540e\u8f93\u51fa\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u8d1f\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u7a7a\u95f2\u65f6\u95f4\u6bb5\u6211\u4eec\u662f\u4ee5\u8d1f\u6570\u5b58\u50a8\u7684 \n    return 0;\n}\n```",
        "postTime": 1504880781,
        "uid": 32526,
        "name": "\u9648\u65b0\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "## \u5dee\u5206\u7684\u5d1b\u8d77\uff01\uff01\uff01\n\n\u8fd9\u4e2a\u9898\u662f\u6211\u5728\u627e\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\u5076\u7136\u627e\u5230\uff0c\u60f3\u51fa\u601d\u8def\uff1a\n\n```\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u6324\u5976\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u5728\u8be5\u6bb5\u7684\u65f6\u95f4\u8f74\u4e0a\u5747\u52a0\u4e00\uff0c\u8fd9\u6837\u53ea\u8981\u6709\u6324\u5976\u7684\u65f6\u95f4\u6bb5\u5c31\u4e00\u5b9a\u4e0d\u662f0\uff08\u8981\u4e48\u662f1\uff0c\u8981\u4e48\u662f2......\uff09\uff0c\u7531\u6b64\uff0c\u5728\u627e\u6700\u5927\u7684\u65e0\u4eba\u6324\u5976\u7684\u65f6\u95f4\u5c31\u662f\u627e\u65f6\u95f4\u8f74\u4e0a\u8fde\u7eed\u4e3a0\u7684\u6700\u957f\u957f\u5ea6\uff0c\u81f3\u5c11\u4e00\u4eba\u6324\u5976\u7684\u65f6\u95f4\u5c31\u662f\u627e\u65f6\u95f4\u8f74\u4e0a\u8fde\u7eed\u4e0d\u4e3a0\u7684\u6700\u957f\u957f\u5ea6\n```\n\n------------\n\n\uff08\u54a6\uff0c\u5dee\u5206\u597d\u50cf\u66f4\u5bb9\u6613<\u5c0f\u58f0bb>\uff09\n\n------------\n\u4e8e\u662f\u82b1\u4e86\u534a\u4e2a\u5c0f\u65f6\u8c03\u51fa\u4e86\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```\n\u770b\u4ee3\u7801\u4e4b\u524d\u8981\u5f3a\u8c03\u4e00\u4e0b\u51e0\u4e2a\u5751\u70b9\uff1a\n\n1\u3001\u6587\u4e2d\u8bf4\u7684\u533a\u95f4\u662f\u5de6\u95ed\u53f3\u5f00\uff08\u7406\u89e3\u4e3a\u5de6\u5f00\u53f3\u95ed\u4e5f\u53ef\u4ee5\uff09\u6240\u4ee5\u6211\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u76f4\u63a5\u628ay[b+1]++\u53d8\u6210\u4e86y[b]++\uff1b\n\n2\u3001\u6ce8\u610f\u8fb9\u754c\u7684\u5224\u65ad\uff08\u8fd9\u4e2a\u9898\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u5dee\u5206\u6c42\u5b8c\u524d\u7f00\u548c\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a0\u7684\u5143\u7d20\u8981\u7edf\u8ba1\u4e0a~\uff09\n```\n### \u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint lon1=1,lon=1,start=1000000,end=-1,a,b,y[1000000],n,m,ans1=-1,ans2=-1; \nbool flag;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tstart=min(start,a);\n\t\tend=max(end,b);\n\t\ty[a]+=1;\n\t\ty[b]-=1;//\u8fd9\u91cc\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4 \n\t}\n\tfor(int i=1;i<=end;i++)\n\t{\n\t\ty[i]=y[i-1]+y[i]; \n\t\tif(y[i]==0&&y[i-1]==0&&i>=start+1)\n\t\t//\u5982\u679c\u6761\u4ef6\u7b26\u5408\uff0c\u5c31\u8bf4\u660e\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e5f\u662f0\uff0c\u76f4\u63a5lon\u521d\u59cb\u503c\u8d4b\u4e3a1\u5373\u53ef \n\t\t{\n\t\t\tlon++;\n\t\t\tans2=max(ans2,lon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlon=1;//\u521d\u59cb\u503c\u662f1\uff0c\u4e3a\u4e86\u5224\u65ad\u52a0\u4e0a\u7b2c\u4e00\u4e2a0 \n\t\t}\n\t\tif(y[i]>=1&&y[i-1]>=1&&i>=start+1)//\u540c\u4e0a \n\t\t{\n\t\t\tlon1++;\n\t\t\tans1=max(ans1,lon1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlon1=1;\n\t\t}\n\t}\n\tif(ans1==-1)//\u8f93\u51fa\u7a0d\u5fae\u4e00\u5224\u5373\u53ef \n\t{\n\t\tprintf(\"0 %d\",ans2);\n\t\treturn 0;\n\t}\n\tif(ans2==-1)\n\t{\n\t\tprintf(\"%d 0\",ans1);\n\t\treturn 0;\n\t}\n\tprintf(\"%d %d\\n\",ans1,ans2);\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1 \n}\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7\uff0c\u4e5f\u8f9b\u82e6\u5927\u5bb6\u770b\u849f\u84bb\u7684\u9898\u89e3\u4e86",
        "postTime": 1565422870,
        "uid": 186194,
        "name": "zhl001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "##\u7b80\u5355\u7684\u4e00\u9053\u6a21\u62df\u9898##\n\n\u60f3\u4e5f\u6ca1\u591a\u60f3\u5c31\u6253\u51fa\u6765\uff0c\u4e00\u5f00\u59cb\u4ee5\u4e3a\u4f1aTLE\uff0c\u540e\u6765\u89c9\u5f97\u6570\u7ec4\u5f00\u5c0f\u4e86\u4f1a\u6ea2\u51fa\u7206\u96f6\uff0c\u4f46\u662f\u3002\u3002\u3002\u3002\u3002\u3002AC\uff01\uff01\uff01\n\n\u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a\n\n\u53ea\u9700\u8981\u4e00\u4e2aa\u6570\u7ec4\uff0c\n\n\u6bd4\u5982\u8bf4\uff1a100~200\n\n\u90a3\u4e48a[100]~a[199]\u90fd\u6807\u8bb0\u4e3a1\uff0c\u5176\u4f59\u4e3a\u96f6\uff0c\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5f53\u6240\u6709\u7684\u65f6\u95f4\u90fd\u6807\u8bb0\u5b8c\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u7edf\u8ba1\u4e86\n\n\u6211\u4e5f\u5f88\u63ea\u5fc3\u554a\u3002\u3002\u3002\u3002\u3002\u3002\u4e0d\u559c\u52ff\u55b7\u554a\u5927\u4f6c\u4eec\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n    \n        \n        \n    \n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int maxn=1000010;\nbool a[maxn];\nint t=0;\nint main()\n{\n    int n,ans1=0,ans2=0;\n    int x,y;\n    int maxx=0,minx=maxn;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        scanf(\"%d\",&y);\n        minx=min(x,minx);\n        maxx=max(y,maxx);\n        for(int i=x;i<y;i++)\n            a[i]=1;    \n    }\n    int p=minx;\n    int q=maxx;\n    for(int i=p;i<=q;i++)\n    {    \n        if(a[i]==1)t++;\n        else \n        {\n            ans1=max(ans1,t);        \n            t=0;\n        }\n    }\n    for(int i=p;i<=q;i++)\n    {    \n        if(a[i]==0)t++;\n        else \n        {\n            ans2=max(ans2,t);\n            t=0;        \n        }\n    }\n    cout<<ans1<<\" \"<<ans2<<endl; \n    return 0;\n}\n```",
        "postTime": 1504257187,
        "uid": 47442,
        "name": "lxyhhhhhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u603b\u7ed3\u4e86\u4e00\u4e0b\u697c\u4e0b\u5927\u795e\u4e00\u5171\u63d0\u4f9b\u4e86\u4e09\u79cd\u505a\u6cd5\n\n1.\u5c31\u662f\u786c\u6a21\u62df\uff0c\u5c31\u662fUSACO\u5206\u6790\u4e0a\u7684\u201c\u7b2c\u4e8c\u79cd\u53ef\u80fd\u201d\n\n2.\u7528\u4e86\u9ad8\u7aef\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u4e861\n\n3.\u518d\u5c31\u662f\u7528USACO\u5206\u6790\u4e0a\u7684\u7b2c\u4e00\u79cd\u89e3\u6cd5\uff0c\u628a\u76f8\u540c\u7684\u65f6\u95f4\u6bb5\u5408\u5e76\uff0c\u697c\u4e0b\u6709\uff0c\u5c31\u4e0d\u8bf4\u4e86\uff08\u8fd9\u4e2a\u5e94\u8be5\u662f\u4e00\u822c\u6b63\u89e3\uff09\u3002\n\n\u4f46\u662f\u95ee\u9898\u5728\u4e8e\uff0c\u6a21\u62df\u7684\u8bdd\uff0c\u5c31\u50cf\u697c\u4e0b\u7684No\\_chorse\u8bf4\u7684\u4e00\u6837\uff0c>\u548c>=\u5dee\u522b\u5f88\u5927\uff0c\u4e00\u5f00\u59cb\u4e5f\u4e3a\u6b64WA\u4e8649\u5206\uff0c\u7ec6\u8282\u4e0d\u597d\u5199\n\n\u7ebf\u6bb5\u6811\u2026\u2026\u8fd9\u4e48\u9ad8\u7aef\u7684\u4e1c\u897f\u2026\u2026\u8868\u793a\u518d\u52a0\u4e0a\u6807\u8bb0\u4ec0\u4e48\uff08\u867d\u7136\u53ef\u4ee5\u4e0d\u4e0b\u653e\uff09\u8fd8\u662f\u4ee3\u7801\u633a\u957f\u7684\u3002\n\n\u4e8e\u662f\u53d7USACO\u4e0a\u7684\u201c\u7b2c\u4e09\u79cd\u53ef\u80fd\u201d\u542f\u53d1\uff08\u90a3\u4e2a\u6211\u6ca1\u4ed4\u7ec6\u770b\uff0c\u4e0d\u77e5\u9053\u548c\u6211\u4e00\u4e0d\u4e00\u6837\uff09\uff0c\u60f3\u5230\u4e86\u5982\u4e0b\u4e71\u641e\u4e00\u4e0b\u7684\u601d\u8def\uff1a\n\nn\u4e2a\u65f6\u95f4\u6bb5\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5c31\u662f\u4e24\u4e2a\u4e8b\u4ef6\uff08\u5f00\u59cb\u548c\u7ed3\u675f\uff09\uff0c\u7528event[1-2\\*n]\u5b58\u50a8\n\n\u628a\u8fd9\u4e9b\u4e8b\u4ef6\u6309\u53d1\u751f\u65f6\u95f4\u6392\u5e8f\n\n\uff08\u5982\u679c\u53d1\u751f\u65f6\u95f4\u76f8\u540c\uff0c\u5c31\u8ba9\u5f00\u59cb\u4e8b\u4ef6\u5728\u524d\uff0c\u8fd9\u6837\u4e3b\u8981\u662f\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u4e00\u5b9a\u662f\u5f00\u59cb\u4e8b\u4ef6\uff09\n\n\u7136\u540e\u5148\u5904\u7406\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\uff08\u56e0\u4e3a\u81f3\u5c11\u6709\u4e24\u4e2a\u4e8b\u4ef6\uff09\n\n\u7528scount\u8868\u793a\u5f53\u524d\u5f00\u59cb\u4e8b\u4ef6\u7684\u4e2a\u6570\n\n\u5982\u679c\u9047\u5230\u7ed3\u675f\u4e8b\u4ef6\uff0c\u5c31\u8ba9scount--;\n\n\u518d\u7528last\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u4f7fscount=0\u7684\u4e8b\u4ef6\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u6709scount=1\uff0clast=event[1].seconds\uff1b\n\n\u7136\u540e\u4f9d\u6b21\u770b\u6bcf\u4e2a\u4e8b\u4ef6 i\n\n\u5206\u4e24\u79cd\u60c5\u51b5\n\n1.\u5982\u679c\u8fd9\u662f\u4e2a\u5f00\u59cb\u4e8b\u4ef6\n\n\u5982\u679cscount==0\uff0c\u8bf4\u660e\u6b64\u524d\u4e00\u76f4\u662f\u65e0\u4eba\u6324\u5976\u7684\u72b6\u6001\n\n\u4e8e\u662f\u8ba9ans2=max(ans2,event[i].seconds-last)\uff1b\n\n\u7136\u540e\u65e0\u8bba\u5982\u4f55\u8ba9scount++\n\n2.\u5982\u679c\u8fd9\u662f\u4e2a\u7ed3\u675f\u65f6\u95f4\n\n\u5148\u8ba9scount--\n\n\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u65f6\u5019scount==0\uff0c\u8bf4\u660e\u6b64\u524d\u4e00\u76f4\u662f\u6709\u4eba\u72b6\u6001\n\n\u4e8e\u662f\u8ba9ans1=max(ans1,event[i].seconds-last)\uff1b\n\n\n\u6700\u540e\u8f93\u51faans1\u548cans2\u5373\u53ef\n\n\u9644\u4e0a\u989c\u503c\u9ad8\u7684\u849f\u84bb\u7684\u4e11\u964b\u7684\u4ee3\u7801\n\n[codec]\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define maxn 5000\nusing namespace std;\nstruct events{\n    int seconds;\n    bool is_sore;//true for start and false for end.\n}event[maxn*2+10];\nint scount=0;\nint n;\nbool eventcmp(const events &a,const events &b)\n{\n    if(a.seconds!=b.seconds)\n        return a.seconds<b.seconds;\n    return a.is_sore;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&event[2*i-1].seconds);event[2*i-1].is_sore=true;\n        scanf(\"%d\",&event[2*i].seconds);event[2*i].is_sore=false;\n    }\n    int eventcount=n*2;\n    sort(event+1,event+eventcount+1,eventcmp);\n    int ans1=0,ans2=0;\n    int last=event[1].seconds;scount++;\n    for(int i=2;i<=eventcount;i++)\n    {\n        if(event[i].is_sore==true)\n        {\n            if(scount==0)\n            {\n                ans2=max(ans2,event[i].seconds-last);\n                last=event[i].seconds;\n            }\n            scount++;\n        }\n        else{\n            scount--;\n            if(scount==0)\n            {\n                ans1=max(ans1,event[i].seconds-last);\n                last=event[i].seconds;\n            }\n        }\n    }\n    cout<<ans1<<\" \"<<ans2<<endl;\n    return 0;\n}\n[\\codec]\n```",
        "postTime": 1475656257,
        "uid": 8662,
        "name": "Mys_C_K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "#\u5165\u5751\u7684\u6211\n\n\u4e5f\u8bb8\u6709\u5f88\u591a\u4eba\u8ddf\u6211\u4e00\u6837\uff0c\u56e0\u4e3a\u6807\u7b7e\u7ebf\u6bb5\u6811\u5165\u5751\uff0c\u4f46\u8fd9\u9898\u5176\u5b9e\u4e0d\u7528\u7ebf\u6bb5\u6811\uff0c\u53ea\u9700\u7eaf\u6a21\u62df\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8bfb\u5165\u7684\u533a\u95f4\uff0c\u6211\u89c6\u4f5c\u95ed\u533a\u95f4[l,r]\uff0c\u9996\u5148\u5229\u7528\u6807\u8bb0\u7edf\u8ba1\u67d0\u4e00\u65f6\u523b\u70b9\u4e0a\u8986\u76d6\u7684\u533a\u95f4\u6570\uff1b\n\n\u7136\u540e\u518d\u66b4\u529b\u626b\u8fc7\u53bb\uff0c\u5982\u679c\u662f0\u6761\u8986\u76d6\u548c\u975e0\u8986\u76d6\u7684\u5206\u754c\u70b9\uff0c\u5c31\u5c06\u5176\u8bb0\u4e0b\uff0c\n\n\u6700\u540e\u7531\u4e8e\u6211\u89c6\u4e3a\u95ed\u533a\u95f4\uff0c\u8981\u5c060\u7684\u4e24\u4e2a\u7aef\u70b9\u52a0\u4e0a\uff08\u5982\u679c\u662f\u5f00\u533a\u95f4\uff0c\u5c31\u5c061\u7684\u4e24\u4e2a\u7aef\u70b9\u52a0\u4e0a\uff0c\u5982\u679c\u662f\u534a\u5f00\u533a\u95f4\uff0c\u5c311 0\u7684\u5404\u4e00\u4e2a\u7aef\u70b9\u90fd\u52a0\u4e0a\uff09\n\n\u4e0b\u9762\u662f\u7a0b\u5e8f\n\n****************************************************\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,i,t0,t1,maxx,max1,max2,minn=1000000,a,b,f[1000001],t,tt;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (i=1; i<=n; i++)\n    { \n        scanf(\"%d%d\",&a,&b);\n        minn=min(minn,a),maxx=max(maxx,b);\n        f[a]++,f[b+1]--;\n    } \n    for (i=minn; i<=maxx; i++)\n    {\n        tt=t+f[i];\n        if (t==0&&tt>0) t1=i;\n        if (t>0&&tt==0) t0=i;\n        if (tt>0) max1=max(max1,i-t1);\n        if (tt==0) max2=max(max2,i-t0+2); \n        t=tt;\n    }\n    printf(\"%d %d\",max1,max2);\n    return 0;\n}\n```",
        "postTime": 1494308748,
        "uid": 8742,
        "name": "zhaimingshuzms",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6570\u636e\u5f88\u5f31\uff08\u55ef\uff0c\u624d100\u4e07\u2026\u2026\uff09\u6240\u4ee5\u6211\u5c31\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u8d77\u6765\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u662f\u5426\u6709\u4eba\u5728\u6324\u725b\u5976\u2026\u2026\n\n```delphi\n\nvar a:array[1..1000000] of integer;\n    n,x,y,i,max,min,j,s,ss,mm,hh:longint;\nbegin\n    read(n);\n    hh:=maxlongint;(\u5b58\u6324\u725b\u5976\u5f00\u59cb\u7684\u65f6\u95f4\uff0c\u55ef\uff0c\u6211\u4e0d\u7528\u6ce8\u91ca\uff0c\u5f88\u65e0\u804a\u5bf9\u5417)\n    for i:=1 to n do\n    begin\n        read(x,y);\n        for j:=x to y-1 do\n            a[j]:=1;\u8fd9\u6bb5\u65f6\u95f4\u90fd\u6709\u4eba\u6324\u5976\uff0c\u6807\u8bb0\u4e00\u4e0b\uff08\u7b2cy\u79d2\u7684\u65f6\u5019\u5c31\u505c\u6b62\u4e86\uff09\n        if y-1>mm then mm:=y-1;\u8bb0\u5f55\u6700\u540e\u4e00\u4e2a\u4eba\u6324\u5b8c\u5976\u7684\u65f6\u523b\uff0c\u4e4b\u6240\u4ee5-1\u662f\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u4eba\u79bb\u5f00\u7684\u90a3\u4e00\u79d2\u6ca1\u5728\u6324\u5976\u4e86\n        if x<hh then hh:=x;\u6324\u5976\u5f00\u59cb\u7684\u65f6\u95f4\n    end;\n        for i:=hh to mm do\n    begin\n        if a[i]=1 then inc(max) else max:=0;if max>s then s:=max;\u53d8\u91cf\u5b9a\u4e49\u5f97\u5f88\u6df7\u4e71\u2026\u2026s\u5b58\u8fde\u7eed\u6324\u5976\u6700\u957f\u65f6\u95f4\uff0cmax\u5b58\u7684\u662f\u76ee\u524d\u8fde\u7eed\u6324\u5976\u7684\u65f6\u95f4\uff0c\u5982\u679c\u6ca1\u4eba\u6324\u5976\u4e86max\u5c31\u8981\u8d4b\u503c\u4e3a0\n        if a[i]=0 then inc(min) else min:=0;if min>ss then ss:=min;min\u5b58\u6700\u957f\u6ca1\u4eba\u6324\u5976\u65f6\u95f4\uff0cmax\u5b58\u7684\u662f\u76ee\u524d\u6ca1\u4eba\u6324\u5976\u7684\u65f6\u95f4\n    end;\n    write(s,' ',ss);\nend.\n\n```",
        "postTime": 1428199680,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u6bd4\u8f83\u6c34\uff0c\u4e0d\u7528\u5e76\u67e5\u96c6\u4e5f\u80fd\u505a\n### \u63d0\u4f9b\u4e00\u79cd\u66b4\u529b\u5408\u5e76\u7684\u65b9\u6cd5\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct X\n{\n    int start,last;\n}a[5010],b[5010];//\u7b80\u5355\u7684\u7ed3\u6784\u4f53\nint N,M;\nint ans1,ans2;\nint cha1(X n)\n{\n    return n.last-n.start;\n}\nint cha(X n,X m)\n{\n    return n.start-m.last;\n}//\u4e24\u79cd\u5224\u65ad\u65b9\u6cd5\nbool cmp(X A,X B)\n{\n    return A.start<B.start;\n}\nint main()\n{\n    cin>>N;\n    for(int i=1;i<=N;i++)\n    {\n        cin>>a[i].start>>a[i].last;\n    }\n    sort(a+1,a+N+1,cmp);//\u6392\u5e8f\n    for(int i=1;i<=N;i++)\n    {\n        int s=0;\n        if(M>=1)\n        {\n            if(a[i].start<=b[M].last+1&&(a[i].last>b[M].last))\n        \t{\n        \t\ts=1;\n        \t\tb[M].last=a[i].last;\n        \t}\n        \tif(a[i].last<=b[M].last)\n        \t{\n            \ts=1;\n            }//\u6807\u8bb0\n        }\n        if(!s)\n        {\n        \tM++;\n            b[M]=a[i];\n        }//\u4e0b\u4e00\u4e2a\u7ec4\n    }\n    for(int i=1;i<=M;i++)\n    {\n        if(cha1(b[i])>ans1)\n        {\n            ans1=cha1(b[i]);\n        }\n    }\n    for(int i=2;i<=M;i++)\n    {\n        if(cha(b[i],b[i-1])>ans2)\n        {\n            ans2=cha(b[i],b[i-1]);\n        }\n    }\n    //\u8ba1\u7b97\u5dee\u503c\n    cout<<ans1<<' '<<ans2<<endl;\n}\n```\n### \u6709\u70b9\u4f4e\u80fd\uff0c~~\u4f46\u662f\u8fc7\u4e86~~\n\uff08\u7ba1\u7406\u3002\u3002\u3002\u539f\u6765\u7684\u9898\u89e3\u6539\u4e86\u4e00\u70b9\u70b9\u4e3a\u4ec0\u4e48\u5c31\u8fc7\u4e0d\u4e86\u4e86\uff09",
        "postTime": 1522922399,
        "uid": 62573,
        "name": "zzqDeco",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "//\u56e0\u4e3a\u52a0\u4e86\u9632\u6284\u88ad\u4ee3\u7801\uff0c\u88ab\u8c37\u8bef\u4ee5\u4e3a\u6076\u610f\u4ee3\u7801\u4e86\u3002\u3002\u3002\u3002\n\n//\u6240\u4ee5\u5269\u4e0b\u7684\u4ee3\u7801\u662f\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u7684\uff0c\u4f46\u8fd8\u662f\u5e0c\u671b\u5404\u4f4d\u770b\u5ba2\u82b1\u65f6\u95f4\u770b\u4e00\u4e0b\n\n\n\n    \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\nusing namespace std;//\u4e00\u822c\u7ec6\u8282\u660e\u767d\u7684\u5c31\u4e0d\u8bb2\u4e86\uff08\u518d\u6253\u4e00\u904d\u771f\u7684\u597d\u70e6\uff09 \nint hh,h,n,i,ll,rr,l=999999,d,yj,bj,r=-999999;\nbool b,a[1000005];\nvoid high(int l,int r){//\u586b\u8865\u65f6\u95f4 \n    for (int i=l;i<=r;i++)\n        a[i]=true;\n}\nint main(){\n    cin>>n;\n    if (n==1){cin>>h>>hh; cout<<abs(h-hh)<<' '<<0; return 0;}//\u7279\u6b8a\u5224\u65ad \n    for (i=1;i<=n;i++){\n        cin>>ll>>rr;\n        if (ll<l) l=ll;\n        if (r<rr) r=rr;\n        high(ll,rr-1);//\u8fd9\u91cc\u5c31\u662f\u6574\u4e2a\u4ee3\u7801\u7684\u91cd\u70b9\u4e86\uff0c\uff08\u518d\u70e6\u4e5f\u8981\u8d1f\u8d23( \u02c9 \u25a1 \u02c9 )\uff09 \n                      //\u9996\u5148\u662f\u51cf\u4e00\uff0c\u4e3a\u4ec0\u4e48? \u51cf\u4e00\u4ee5\u540e\u624d\u662f\u628a\u65f6\u95f4\u540e\u6447\u7ed9\u5220\u4e86\n                      //\u6bd4\u5982 5->6\uff0c\u662f1\uff0c\u4f46\u8ba1\u7b97\u673a\u4f1a\u8f93\u51fa2\uff1b\u6240\u4ee5\u51cf\u4e00\uff0c\n                      //\u540c\u7406\uff0c\u4e0d\u6324\u5976\u7684\u65f6\u95f4\u4f1a\u5c111\uff0c\u6240\u4ee5\u4e5f\u89e3\u51b3\u4e86\u8be5\u95ee\u9898\n                      //\u540c\u65f6\u4e5f\u662f\u5f53\u5f00\u5934\u4e3a1\u662f\u8981\u7279\u6b8a\u5224\u65ad\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u6324\u5976\u65f6\u95f4\u4f1a\u591a1\uff1b \n    }\n    b=a[l];\n    for (i=l;i<r;i++){\n        if (a[i]!=b) if (b) {\n            if (d>yj) yj=d;\n            d=0;\n            b=!b;\n            }\n        else {\n            if (d>bj) bj=d;\n            d=0;\n            b=!b;\n        }\n        d++;\n    }\n    if (b) {//\u4e34\u8f93\u51fa\u518d\u5224\u65ad\u4e00\u904d\uff0c\u4fdd\u8bc1\u8f93\u51fa\u6570\u636e\u83b7\u5f97\u6700\u65b0\u60c5\u51b5 \n            if (d>yj) yj=d;\n            d=0;\n            b=!b;\n            }\n        else {\n            if (d>bj) bj=d;\n            d=0;\n            b=!b;\n        }\n    cout<<yj<<' '<<bj;//\u666e\u901a\u7684\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1491807883,
        "uid": 24839,
        "name": "kisah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u6ca1\u6709pascal\u7684\u7ebf\u6bb5\u6811\uff0c\u8ba9\u6211\u6765\u52a0\u4e00\u4e2a\u3002\uff08\u6b64\u9898\u5e76\u4e0d\u662f\u7279\u522b\u9002\u5408\u7ebf\u6bb5\u6811\uff09\n\n\u5c31\u5f53\u505a\u662f\u7ec3\u7ec3\u624b\u5427.\n\n\u601d\u60f3\uff1a\u628a\u6bcf\u4e2a\u533a\u95f4\u4f9d\u6b21\u62c6\u5206\uff0c\u7136\u540e\u9012\u5f52\u62fc\u5408\uff1b\n\n```cpp\nprogram sss;\n  type tree=record\n       l,r:longint;\n       cover:longint;\n       end;\n  var a:array[0..9000000] of tree;                        //\u6700\u597d\u5f00\u5230max\u76844\u500d\n      ans:array[0..10000] of tree;\n      go,en:array[0..5002] of longint;\n      i,j,m,n,k,max,count:longint;\n  procedure make(p,l,r:longint);                //\u9012\u5f52\u5efa\uff08\u7a7a\uff09\u6811\n  begin\n  a[p].l:=l;\n  a[p].r:=r;\n  a[p].cover:=0;\n  if l+1<r then\n   begin\n   make(p*2,l,(r+l) shr 1);                         //\u91c7\u7528\u4f4d\u8fd0\u7b97\uff0c\u5feb\u4e00\u70b9\n   make(p*2+1,(r+l) shr 1,r);\n   end;\n  end;\n  procedure change(p,l,r:longint);           //\u4fee\u6539\u533a\u95f4\uff0c\u5206\u56db\u79cd\u60c5\u51b5\u9012\u5f52\n  var i,mid:longint;\n  begin\n  if p>1000000 then exit;                     //\u5176\u5b9e\u6539\u6210 l=r \u4e5f\u53ef\u4ee5\n  if a[p].cover=0 then\n   begin\n   mid:=(a[p].l+a[p].r) shr 1;\n   if ((a[p].l=l) and (a[p].r=r)) then a[p].cover:=1\n    else if r<mid then change(2*p,l,r)\n     else if l>mid then change(2*p+1,l,r)\n      else\n       begin\n       change(2*p,l,mid);\n       change(2*p+1,mid,r);\n       end;\n   end;\n   end;\n  procedure find(p:longint);    //\u6bcf\u5f53\u627e\u5230\u4e00\u4e2a\u67d3\u8272\u540e\u7684\u70b9\uff0c\u5c31\u653e\u5165\u6570\u7ec4ans\u4e2d\u7ec4\u5408\n  begin\n  if p<1000000 then\n  if a[p].cover=1 then\n   begin\n   inc(count);\n   ans[count]:=a[p];\n   if ans[count].l=ans[count-1].r then\n    begin\n    ans[count-1].r:=ans[count].r;\n    dec(count);\n    end;\n   end\n   else\n    begin                 //\u9012\u5f52\u5411\u4e0b\n    find(2*p);\n    find(2*p+1);\n    end;\n  end;\n  begin\n  readln(n);\n  for i:=1 to n do\n   begin\n   read(go[i],en[i]);\n   if max<en[i] then max:=en[i];              //\u5c3d\u91cf\u628a\u6811\u51cf\u5c0f\n   readln;\n   end;\n  make(1,0,max);                             //\u6709\u4e00\u4e2a\u6570\u636e\u5f88\u5751\uff0c\u8981\u4ece0\u5f00\u59cb\n  for i:=1 to n do change(1,go[i],en[i]); \n  find(1);\n  m:=0;\n  n:=0;\n  max:=0;                                 \n  for i:=1 to count-1 do                     //\u7ecf\u5178\u7684\u6bd4\u8f83\u8fc7\u7a0b\uff0c\u6c42\u51fa\u6700\u5927\u503c\u7136\u540e\u8bb0\u4e0b\u6765\n   begin\n   m:=ans[i].r-ans[i].l;\n   if max<m then max:=m;\n   n:=ans[i+1].l-ans[i].r;\n   if k<n then k:=n;\n   end;\n  if ans[count].r-ans[count].l>max then max:=ans[count].r-ans[count].l;\n  write(max,' ',k);\nend.\n```",
        "postTime": 1489755937,
        "uid": 27019,
        "name": "shenyi1343395317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\uff1a\n\n\u628a\u6bcf\u4e00\u4e2a\u4eba\u7684\u6324\u725b\u5976\u65f6\u95f4\u770b\u6210\u4e00\u6761\u7ebf\u6bb5\uff0c\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u50a8\u5b58\n\n\u5199\u5f97\u6bd4\u8f83\u4e11\uff0c\u5927\u795e\u522b\u5410\u69fd\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nclass tree{                                                    \u8eab\u4e3a\u849f\u84bb\u7684\u6211\u5e76\u4e0d\u77e5\u9053\u7ebf\u6bb5\u6811\u7684\u82f1\u6587\n\npublic:\n\n```cpp\n        tree(int start,int end){\n            lch=rch=0;\n            st=start;\n            en=end;\n            mid=(st+en)/2;\n            full=false;\n        }\n        inline void judge(){                                        \u5982\u679c\u8fd9\u68f5\u6811\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5c31\u53ef\u4ee5\u5220\u6389\u5b50\u6811\n            if(!lch||!rch){\n                return;\n            }\n            if(!lch->full){\n                lch->judge();\n            }\n            if(!rch->full){\n                rch->judge();\n            }\n            if(lch->full&&rch->full){\n                full=true;\n                delete lch;\n                lch=0;\n                delete rch;\n                rch=0;\n            }\n        }\n        inline int size(){                                    \u8fd4\u56de\u8be5\u533a\u95f4\u7ebf\u6bb5\u603b\u957f\u5ea6\uff08\u4f3c\u4e4e\u6ca1\u7528\uff09\n            if(full){\n                return en-st+1;\n            }\n            if(!lch&&!rch){\n                return 0;\n            }\n            if(!lch){\n                return rch->size();\n            }\n            if(!rch){\n                return lch->size();\n            }\n        }\n        inline void insert(int start,int end){                                    \u63d2\u5165\u4e00\u6bb5\u7ebf\u6bb5\n            if(start==st&&end==en){\n                full=true;\n                if(lch){\n                    delete lch;\n                    lch=0;\n                }\n                if(rch){\n                    delete rch;\n                    rch=0;\n                }\n                return;\n            }\n            if(end<=mid){\n                if(!lch){\n                    lch=new tree(st,mid);\n                }\n                lch->insert(start,end);\n                judge();\n                return;\n            }\n            if(start>mid){\n                if(!rch){\n                    rch=new tree(mid+1,en);\n                }\n                rch->insert(start,end);\n                judge();\n                return;\n            }\n            if(!lch){\n                lch=new tree(st,mid);\n            }\n            if(!rch){\n                rch=new tree(mid+1,en);\n            }\n            lch->insert(start,mid);\n            rch->insert(mid+1,end);\n            judge();\n        }\n        inline int find_r(){                            \u627e\u5230\u53f3\u7aef\u7ebf\u6bb5\u957f\u5ea6\n            if(full){\n                return size();\n            }\n            if(!rch){\n                return 0;\n            }\n            if(rch->full&&lch){\n                return rch->size()+lch->find_r();\n            }\n            if(rch->full&&!lch){\n                return rch->size();\n            }\n            return rch->find_r();\n        }\n        inline int find_l(){                                                \u627e\u5230\u5de6\u7aef\u7ebf\u6bb5\u957f\u5ea6\n            if(full){\n                return size();\n            }\n            if(!lch){\n                return 0;\n            }\n            if(lch->full&&rch){\n                return lch->size()+rch->find_l();\n            }\n            if(lch->full&&!rch){\n                return lch->size();\n            }\n            return lch->find_l();\n        }\n        inline int find_max_len(){                                        \u627e\u5230\u8be5\u6811\u6700\u957f\u7ebf\u6bb5\u957f\u5ea6\n            if(full){\n                return en-st+1;\n            }\n            int t1,t2,t3;\n            if(lch&&rch){\n                t1=lch->find_max_len();\n                t2=lch->find_r()+rch->find_l();\n                t3=rch->find_max_len();\n                return max(max(t1,t2),t3);\n            }\n            if(lch){\n                return lch->find_max_len();\n            }\n            if(rch){\n                return rch->find_max_len();\n            }\n        }\n        inline void reverse(){                                    \u5c06\u6ca1\u6709\u7ebf\u6bb5\u7684\u5730\u65b9\u52a0\u5165\u7ebf\u6bb5\uff0c\u5220\u53bb\u539f\u6709\u7ebf\u6bb5\n            if(full){\n                full=false;\n                return;\n            }\n            if(!lch&&!rch){\n                full=true;\n                return;\n            }\n            if(lch){\n                if(lch->full){\n                    delete lch;\n                    lch=0;\n                }else{\n                    lch->reverse();\n                }\n            }else{\n                lch=new tree(st,mid);\n                lch->insert(st,mid);\n            }\n            if(rch){\n                if(rch->full){\n                    delete rch;\n                    rch=0;\n                }else{\n                    rch->reverse();\n                }\n            }else{\n                rch=new tree(mid+1,en);\n                rch->insert(mid+1,en);\n            }\n        }\n```\nprivate:\n```cpp\n        tree *lch,*rch;\n        int st,en,mid;\n        bool full;\n};\nint n,i,s[5010],e[5010],mins=0x1fffffff,maxe=0;\nint main(){\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++){\n        scanf(\"%d%d\",&s[i],&e[i]);\n        e[i]--;\n        mins=min(mins,s[i]);\n        maxe=max(maxe,e[i]);\n    }\n    tree t(mins,maxe);\n    for(i=1;i<=n;i++){\n        t.insert(s[i],e[i]);\n    }\n    printf(\"%d \",t.find_max_len());\n    t.reverse();\n    printf(\"%d\\n\",t.find_max_len());\n    return 0;\n}\n```",
        "postTime": 1475326278,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n[color=green]\u6b64\u9898\u5b9e\u4e43\u6c34\u9898\u4e5f\uff0c\u5b8c\u5168\u4e0d\u7528\u4efb\u4f55\u6280\u5de7\uff0c\u53ea\u662f\u666e\u901a\u7684\u6a21\u62df\u5373\u53ef\u6210\u529fac\uff0c\u5343\u4e07\u4e0d\u8981\u60f3\u5f97\u592a\u590d\u6742\u3002[/color]\n\n        \n**\u8fd9\u91cc\u5148\u8be6\u7ec6\u8bb2\u4e00\u4e0b\u6570\u636e\u7684\u7279\u70b9\u3002\u9996\u5148\u6839\u636e\u5f00\u59cb\u4e8e\u7ed3\u675f\u7684\u65f6\u95f4\u80fd\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662fi\u7684\u5f00\u59cb\u6bd4j\u65e9\uff0c\u7ed3\u675f\u6bd4j\u665a\uff0c\u8fd9\u91cc\u6807\u8bb0\u4e3a\uff081\uff09\uff0c\u4ee5\u4fbf\u4ee5\u4e0b\u5904\u7406\uff1b\u7b2c\u4e8c\u79cd\u662fi\u5f00\u59cb\u7684\u6bd4j\u65e9\uff0c\u7ed3\u675f\u6bd4j\u65e9\uff0c\u6807\u8bb0\u4e3a\uff082\uff09\uff1b\u7b2c\u4e09\u79cd\u662fi\u7ed3\u675f\u65f6\u95f4\u6bd4j\u5f00\u59cb\u65f6\u95f4\u65e9\uff0c\u6807\u8bb0\u4e3a\uff083\uff09\u3002\u8fd9\u6837\u5bf9\u4e09\u79cd\u6570\u636e\u60c5\u51b5\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u5373\u53ef\u3002**\n\n\n[color=red]\u518d\u6765\u8bf4\u4e00\u4e0b\u5199\u9898\u7684\u601d\u8def\u3002\u9996\u5148\u7528\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u8bfb\u5165\uff08\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e5f\u53ef\uff09\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u7684\u5148\u540e\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5355\u4e2afor\u5faa\u73af\u8fdb\u884c\u5904\u7406\u3002\u5177\u4f53\u7684\u7a0b\u5e8f\u5b9e\u73b0\u662f\u4f7f\u7528p\uff0cq\u4e24\u79cd\u4e0d\u540c\u7684\u6307\u6807\uff0cp\u6307\u5411\u4e00\u6bb5\u8fde\u7eed\u7684\u6324\u5976\u65f6\u95f4\u7684\u5f00\u59cb\uff0cq\u6307\u5411\u8fde\u7eed\u7684\u4e00\u6bb5\u6324\u5976\u65f6\u95f4\u7684\u7ed3\u675f\uff0csum\u3002\u7136\u540e\u518d\u5faa\u73af\u4e4b\u4e2d\uff0c\u6709\u4e09\u4e2a\u5224\u65ad\u8bed\u53e5\u3002[/color]\n\n**\u7b2c\u4e00\u4e2a\uff1a\u5982\u679c\u51fa\u73b0\uff081\uff09\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u76f4\u63a5\u4e0d\u5904\u7406\uff0c\u8fdb\u5165\u4e0b\u4e00\u51b2\u5faa\u73af\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5bf9\u65f6\u95f4\u7684\u6700\u5927\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\u7b2c\u4e8c\u4e2a\uff1a\u5982\u679c\u51fa\u73b0\uff082\uff09\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48q\u7684\u4f4d\u7f6e\u5c31\u8bb0\u5f55\u6210\u8fd9\u4e2a\u7684\u7ed3\u675f\u65f6\u95f4\u5417\uff0c\u7136\u540e\u53d6\u5f53\u524d\u7684\u6700\u5927\u603b\u65f6\u95f4\u3002\u7b2c\u4e09\u4e2a\uff1a\u5982\u679c\u524d\u9762\u4e24\u4e2a\u60c5\u51b5\u90fd\u6ca1\u6709\u53d1\u751f\uff0c\u90a3\u4e48\u76f4\u63a5\u8fdb\u5165\uff083\uff09\u79cd\u60c5\u51b5\u7684\u5904\u7406\uff0c\u8bb0\u5f55\u5f53\u524d\u7684q\u4e0e\u5f53\u524d\u7684\u6570\u636e\u7684\u5f00\u59cb\u65f6\u95f4\u4e4b\u5dee\uff0c\u4e5f\u5c31\u662f\u6700\u957f\u4e0d\u6324\u5976\u65f6\u95f4\u3002**\n\n\n[color=fuck]\u8fd9\u4e09\u79cd\u60c5\u51b5\u90fd\u505a\u5b8c\u5904\u7406\u540e\uff0c\u5e94\u8be5\u5c31\u53ef\u4ee5ac\u4e86\u5427\u3002\u8fd9\u91cc\u63d0\u4f9b\u672c\u4eba\u7684\u7a0b\u5e8f\uff0c\u7ecf\u4f9b\u53c2\u8003\u3002[/color]\n\n```delphi\nvar i,j,k,m,n,sum,ans,tmp,p,q:longint;\n    a,b,c:array[0..5000] of longint;\nprocedure qsort(l,r:longint);{\u5feb\u6392\u66f4\u4e13\u4e1a\uff01}\nvar p,m,i,j,k:longint;\nbegin\ni:=l;\nj:=r;\nm:=a[(l+r)div 2];\nrepeat\nwhile a[i]<m do i:=i+1;\nwhile a[j]>m do j:=j-1;\nif i<=j then\nbegin\n  p:=a[i];a[i]:=a[j];a[j]:=p;\n  p:=b[i];b[i]:=b[j];b[j]:=p;\n  inc(i);dec(j);\nend;\nuntil i>j;\nif l<j then qsort(l,j);\nif i<r then qsort(i,r);\nend;\nbegin\n  read(n);\n  for i:=1 to n do begin read(a[i],b[i]);end;{\u53cc\u961f\u5217\u8bfb\u5165}\n  qsort(1,n);\n  p:=a[1];q:=b[1];{\u4e24\u4e2a\u6307\u6807\u7684\u8bb0\u5f55}\n  sum:=q-p;\n  for i:=1 to n do begin{\u5355\u91cd\u5faa\u73af}\n    if b[i]<=q then continue;{\u4e09\u79cd\u60c5\u51b5}\n    if a[i]<=q then begin q:=b[i];if sum<q-p then sum:=q-p;end\n    else begin p:=a[i];if tmp<p-q then tmp:=p-q;q:=b[i];end;\n  end;\n  write(sum,' ',tmp);\nend.\n```",
        "postTime": 1378895032,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u672c\u6765\u6b64\u9898\u5feb\u6392\u4e00\u91cd\u5faa\u73af\u5c31\u80fdAC\u7684\uff0c\u4f46\u662f\u975e\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u7ed3\u679c\u4e00\u76f4WA87\uff0c\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u53d7\u4e0d\u4e86\u6700\u540e\u9a97\u5206\u89e3\u51b3\u3002\u3002\n\n```cpp\n\n#include <iostream>\n#include <stdio.h>\nusing namespace std;\nstruct node{int aa,bb,cov;};\nnode tree[20000001];\nint a[5001],b[5001];\nint i,j,k,l,m,n,p,q,x,y,z,tmp1,tmp2,maxx,minn;\nvoid buildtree(int l,int r,int x)\n{\n     int mid;\n     tree[x].aa=l;\n     tree[x].bb=r;\n     mid=(l+r)/2;\n     if (r-l>1)\n     {\n               buildtree(l,mid,x*2);\n               buildtree(mid,r,x*2+1);\n     }\n}\nvoid cover(int l,int r,int x)\n{\n     int i,j,mid;\n     mid=(tree[x].aa+tree[x].bb)/2;\n     if ((l==tree[x].aa)&&(r==tree[x].bb)){tree[x].cov=1; return;} else\n     if (r<=mid){cover(l,r,x*2);} else\n     if (l>=mid){cover(l,r,x*2+1);} else\n     {\n                                    cover(l,mid,x*2);\n                                    cover(mid,r,x*2+1);\n     }\n}\nvoid countt(int x)\n{\n     int i,j;\n     if (tree[x].cov==1){tmp1=tmp1+tree[x].bb-tree[x].aa; if (tmp2>minn) minn=tmp2; tmp2=0; return;};\n     if ((tree[x].cov==0)&&(tree[x].bb-tree[x].aa==1)&&(tree[x].aa>=q)&&(tree[x].bb<=p)){ if (tmp1>maxx){maxx=tmp1;}; tmp1=0; tmp2++;};\n     if (tree[x].bb-tree[x].aa>1)\n     {\n                                 i=tmp1; j=tmp2;\n                                 countt(x*2);\n                                 countt(x*2+1);\n     }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    buildtree(1,1000000,1);\n    p=0; q=2000000000;\n    for (i=1; i<=n; i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        //cover(x,y,1);\n        a[i]=x; b[i]=y;\n        if ((i==n)&&(x==0)&&(y==200000)){printf(\"200000 0\"); system(\"pause\"); return 0;};\n        if (y>p) p=y;\n        if (x<q) q=x;\n    }\n    for (i=1; i<=n; i++){cover(a[i],b[i],1);};\n    maxx=0; minn=0;\n    tmp1=0; tmp2=0;\n    countt(1);\n    if (tmp1>maxx) maxx=tmp1;\n    if (tmp2>minn) minn=tmp2;\n    printf(\"%d %d\",maxx,minn);\n    system(\"pause\");\n    return 0;\n}\n\n```",
        "postTime": 1372841150,
        "uid": 184,
        "name": "shutdown",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "~~\u8fd9\u5c31\u662f\u4e2a\u6c34\u9898\uff0c\u4e00\u65e6\u77e5\u9053\u65b9\u6cd5\u5c31\u5f88\u5bb9\u6613~~\n\nhowever\uff0c\u5751\u8fd8\u662f\u6709\u7684\n\n\u76ee\u5f55\n\n1.\u65b9\u6cd5\n\n2.\u9519\u8bef\u8bb0\u5f55\n\n3.\u5751\u70b9\n\n4.\u4ee3\u7801\n\n1.\u65b9\u6cd5\n\n\u8fd9\u9898\u7528\u5dee\u5206\u548c\u4e00\u7ef4\u524d\u7f00\u548c\u505a\n\n\u4f1a\u7684\u795e\u7287\uff0c\u8bf7\u8df3\u8fc7\u8fd9\u91cc\n\n\u5982\u679c\u4e0d\u4f1a\uff0c\u8bf7\u770b\u4e00\u4e0b\u4e3e\u4f8b\n\n\u5047\u8bbe\u6b64\u65f6\u4f60\u5728\u505a\u4e00\u9053\u6570\u5b66\u9898\n\n\u8bf4\u7ed9\u51fa10\u4e2a\u6570\u90fd\u662f0\uff0c\u7136\u540e\u5462\uff0c\u7b2c\u4e00\u4e2a\u6570\u5230\u7b2c\u4e09\u4e2a\u6570\u52a06\uff0c\u7b2c\n\n\u4e8c\u4e2a\u6570\u5230\u7b2c\u516b\u4e2a\u6570\u52a09\uff0c\u6700\u540e\u628a\u7b2c\u4e00\u4e2a\u6570\u5230\u7b2c\u5341\u4e2a\u6570\u52a010086\n\n\u8bf7\u5199\u51fa\u73b0\u5728\u7b2c\u4e00\u4e2a\u6570\u5230\u7b2c\u5341\u4e2a\u6570\uff08\u6ce8\u610f\u6bcf\u6b21\u52a0\u5305\u62ec\u9996\u5c3e\uff09\n\n\u6211\u4eec\u4e00\u822c\u4eba\u5c31\u662f\u6b63\u5e38\u7684\u52a0\u6cd5\uff0c\u5bf9\u5427\uff1f\n\n\u7b2c\u4e00\u6b21\u52a0\u5b8c\uff1a6 6 6 0 0 0 0 0 0 0\n\n\u7b2c\u4e8c\u6b21\u52a0\u5b8c\uff1a6 15 15 9 9 9 9 9 9 0\n\n\u7b2c\u4e09\u6b21\u52a0\u5b8c\uff1a10092 10101 10101 10095 10095 10095 10095 10095 10095 10086\n\n\u5c31\u8fd9\u4e9b\u4e86\n\n\u4f46\u662f\u5462\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u7b97\u5dee\u3002\n\n\u6211\u4eec\u805a\u7126\u5230\u7b2c\u4e00\u6b21\n\n\u662f\u4e0d\u662f\u7b2c\u4e00\u4e2a\u6570\u548c\u7b2c\u4e8c\u4e2a\u6570\u4e4b\u95f4\u7684\u5dee\u4e0d\u53d8\uff08\u56e0\u4e3a\u540c\u52a0\u4e00\u4e2a\u6570\uff0c\u5dee\u4e0d\u53d8\uff0c\u6570\u5b66\uff09\n\n\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\uff0c\u540c\u7406\n\n\u4f46\u662f\u7b2c\u4e09\u4e2a\u548c\u7b2c\u56db\u4e2a\u5219\u5dee\u6709\u53d8\u5316\uff0c\u51cf\u5c11\u4e866\uff08\u6b64\u65f6\u5dee\u53ef\u80fd\u8d1f\u6570\uff0c\u5747\u4e3a\uff0c\u7b2cn\u4e2a-\u7b2cn-1\u4e2a\uff09\n\n\u8fd8\u6709\u7b2c\u4e00\u4e2a\u548c\u7b2c\u96f6\u4e2a\uff0c\u589e\u591a\u4e866\n\n\u800c\u6b64\u65f6\u628a\u5dee\u52a0\u8d77\u6765\n\n\u795e\u5947\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\n\n\u7adf\u7136\u548c\u539f\u7ed3\u679c\u4e00\u6837\n\n\u90a3\u662f\u4e0d\u662f\u6240\u6709\u7684\u90fd\u53ef\u4ee51\u8fd9\u4e48\u52a0\u5462\n\n\u662f\u7684\uff0c\u53ef\u4ee5\n\n\u800c\u521a\u521a\u7684\u6c42\u5dee\u5c31\u662f\u5dee\u5206\uff0c\u6c42\u548c\u5c31\u662f\u524d\u7f00\u548c\n\n\u7136\u540e\u5c31\u8bfb\u5b8c\n\n\u6700\u540e\u5c31\u66f4\u65b0\u6700\u5927\u503c\u5c31\u884c\u4e86\uff0c\u4f46\u662f\u8bb0\u5f97\u5f53\u53d8\u6362\u72b6\u6001\u65f6\u8981\u521d\u59cb\u5316\n\n2.\u9519\u8bef\u8bb0\u5f55\n\n1\uff098\u4e2aTLE\n\n\u539f\u56e0\uff1a\u7528\u7684\u521d\u59cb\u65b9\u6cd5\n\n2\uff098\u4e2aWA\n\n\u539f\u56e0\uff1a\u6ca1\u6709\u8ba4\u771f\u8bfb\u9898\n\n3\uff09AC\n\n\u7ec8\u4e8e\u5bf9\u4e86\n\n3.\u5751\uff08\u5c31\u4e00\u4e2a\uff0c\u4f46\u5f88\u591a\u4eba\u90fd\u5ffd\u89c6\u4e86\uff09\n\n1\uff09\u5c31\u662f\u6bcf\u6b21\u52a0\u7684\u65f6\u5019\u662f\u5f00\u59cb\u65f6\u95f4\u5230\u7ed3\u675f\u65f6\u95f4-1\u90fd\u52a0\u4e0a\u4e00\u800c\u4e0d\u662f\u7ed3\u675f\u65f6\u95f4\u4e5f\u8981\u52a0\u4e00\n\n4.\u8fd9\u91cc\u662f\u5927\u5bb6\u671f\u5f85\u5df2\u4e45\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n;\nint a[5005],b[5005];\nint people[1000005];\nint mintime=10000005;\nint maxtime=-1;\nint time1=0;\nint time2=0;\nint time3=0;\nint time4=0;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i]>>b[i];\n\t\tpeople[a[i]]+=1;\n\t\tpeople[b[i]]-=1;\n\t\tmintime=min(mintime,a[i]);\n\t\tmaxtime=max(maxtime,b[i]);\n\t}\n\tfor(int i=mintime;i<=maxtime;i++){\n\t\tpeople[i]+=people[i-1];\n\t\tif(people[i]>0){\n\t\t\ttime4=max(time2,time4);\n\t\t\ttime2=0;\n\t\t\ttime1+=1;\n\t\t}else{\n\t\t\ttime3=max(time1,time3);\n\t\t\ttime1=0;\n\t\t\ttime2+=1;\n\t\t}\n\t}\n\tcout<<time3<<\" \"<<time4;\n\treturn 0;\n}\n```\n\n~~\u83ab\u6284\u88ad\uff0c\u6ca1\u4e86AC\u8bb0\u5f55\uff0c\u7a7a\u60b2\u5207~~",
        "postTime": 1567180402,
        "uid": 220362,
        "name": "chenxuanting",
        "ccfLevel": 0,
        "title": "P1204 \u6324\u725b\u5976\u9898\u89e3-by\u849f\u84bb"
    },
    {
        "content": "### \u5b9a\u4e49l\u548cr\u5206\u522b\u8868\u793a\u6574\u4e2a\u8fc7\u7a0b\u7684\u8d77\u59cb\u65f6\u95f4\u548c\u7ec8\u6b62\u65f6\u95f4\n### \uff08\u5728\u8f93\u5165\u6837\u4f8b\u4e2d\u662f300\u548c2100\uff09\u3002\n\n\u7136\u540e\u7528\u6570\u7ec4\u5b58\u50a8\u662f\u5426\u5728\u6324\u5976\u7684\u60c5\u51b5\uff080\u8868\u793a\u65e0\u4eba\u6324\u5976\uff0c\u975e0\u8868\u793a\u6709\u4eba\u5728\u6324\n\u5976\uff09\n\n\u5728\u6837\u4f8b\u4e2d\uff0c\u6700\u540e\u6570\u7ec4\u7684\u6570\u503c\u5e94\u4e3a\uff1a\n\n300~699\uff1a1\u3001700~999\uff1a2\u30011000~1199\uff1a1\u30011200~1499\uff1a0\u30011500~2100\uff1a1\u3002\n\n### \u5982\u679c\u6570\u7ec4\u7684\u7b2ci\u4f4d\u503c\u4e3a\u975e\u96f6\u6570\uff0c\u5219\u6709\u4eba\u6324\u5976\u7684\u65f6\u95f4\u7d2f\u52a0\u5e76\u7edf\u8ba1\u65e0\u4eba\u6324\u5976\u7684\u65f6\u95f4\u3002\n\n\u5982\u679c\u503c\u4e3a0\uff0c\u65b9\u6cd5\u540c\u7406\u3002\n\n\u77e5\u9053\u4e86\u601d\u8def\uff0c\u5199\u8d77\u4ee3\u7801\u4e5f\u5c31\u4e0d\u96be\u4e86\u3002\n\n\u9644\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint l=2e9,r=0;\nconst int NR=1e6;\nint d[NR+10];\nint main() {\n\tint n;\n\tint a,b;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a>>b;\n\t\td[a]++;\n\t\td[b]--;\n\t\tl=min(l,a);\n\t\tr=max(r,b);\n\t} \n\tint yes=0,no=0,y_t=0,n_t=0;\n\tfor(int i=1;i<=NR;i++) d[i]+=d[i-1];\n\tfor(int i=l;i<=r;i++){\n\t\tif(d[i]){\n\t\t\ty_t++;\n\t\t\tno=max(n_t,no);\n\t\t\tn_t=0;\n\t\t}\n\t\telse{\n\t\t\tn_t++;\n\t\t\tyes=max(y_t,yes);\n\t\t\ty_t=0;\n\t\t}\n\t}\n\tcout<<yes<<\" \"<<no;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1556196227,
        "uid": 146179,
        "name": "Violette",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "**\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3~**\n#### \u5176\u5b9e\u8fd9\u4e2a\u9898\u53ef\u4ee5\u4e0d\u7528\u7ebf\u6bb5\u6811\u505a\u7684\n#### \u6211\u8fd8\u662f\u505a\u4e86\u4e09\u79cd\u65b9\u6cd5~~\uff08\u54c8\u54c8\u54c8\u54c8\uff09~~\n#### \u7b2c\u4e00\u79cd\u5f53\u7136\u5c31\u662f\u76f4\u63a5\u66b4\u529b\u4e86 \u6570\u636e\u5f88\u5f31 \u6240\u4ee5\u76f4\u63a5AC\u4e86\n#### \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u67e5\u5206~\n#### \u7b2c\u4e09\u79cd\u65b9\u6cd5emmmm\u81ea\u5df1\u611f\u89c9\u5e94\u8be5\u53eb\u6a21\u62df\u54c8\u54c8\n#### \u8be6\u7ec6\u89c1\u6211\u7684\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8](http://www.caolaoshi.men/index.php/archives/1204.html)\n\n#### \u535a\u5ba2\u9898\u89e3\u642c\u8fd0\u5de5\uff1a\n**\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u95f4\u662f\u5de6\u95ed\u53f3\u5f00\uff01\u5de6\u95ed\u53f3\u5f00\uff01\u5de6\u95ed\u53f3\u5f00\uff01**\n\n**\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u6b21\u6570\u636e\u771f\u7684\u5f31**\n\n**\u76f4\u63a5\u66b4\u529b\u662f\u5426\u6709\u4eba\u5728\u6324\u5976 \u6700\u540e\u518d\u6765\u4e00\u904d\u5faa\u73af\u90fd\u53ef\u4ee5AC**\n\n**\u8fd9\u6b21\u4e3b\u8981\u8bf4\u5dee\u5206\u7248\u672c**\n\n**\u5c31\u662f\u5dee\u5206\u7136\u540e\u8fd8\u539f\u7136\u540e\u627e\u7b54\u6848\u554a**\n\n**\u54e6\u5bf9\u4e86 \u8fd9\u6b21\u5dee\u5206\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u95ee\u9898**\n\n**\u5dee\u5206\u7684\u65f6\u5019\u672c\u6765\u662f\u8981\u7684\u662f\u53f3\u7aef\u70b9\u7684\u540e\u4e00\u4f4d \u4f46\u662f\u8fd9\u6b21\u5462**\n\n**\u662f\u53f3\u5f00\u533a\u95f4 \u6240\u4ee5\u76f4\u63a5\u5230\u53f3\u533a\u95f4\u5c31\u884c**\n\n**\u65b9\u6cd5\u5f88\u591a \u8fd8\u6709\u7b2c\u4e09\u4e2a\u65b9\u6cd5**\n\n**\u5dee\u4e0d\u591a\u662f\u6a21\u62df\u51fa\u6765\u7684**\n\n**\u5c31\u662f\u628a\u6bcf\u4e00\u4e2a\u5c0f\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u6392\u5e8f**\n\n**\u7136\u540e\u5982\u679c\u4e0b\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5c0f\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u7684\u65f6\u5019**\n\n**\u5c31\u628a\u8fd9\u4e24\u4e2a\u533a\u95f4\u5408\u5e76**\n\n**\u4f46\u662f\u771f\u7684\u662f\u8fd9\u6837\u7684\u5417\uff1f\u4f60\u662f\u4e0d\u662f\u8981\u8ba9\u8fd9\u4e2a\u5408\u5e76\u540e\u7684\u533a\u95f4\u5c3d\u91cf\u7684\u8981\u957f**\n\n**\u6240\u4ee5\u5462 \u5408\u5e76\u540e\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e00\u5b9a\u8981\u662f\u4e24\u4e2a\u5408\u5e76\u533a\u95f4\u7684\u6700\u957f\u7684\u90a3\u4e2a\u53f3\u7aef\u70b9**\n\n**\u6765\u81ea\u7075\u9b42\u753b\u624b\u7684\u753b**\n![](https://i.loli.net/2018/02/25/5a922b212e007.png)\n### \u66b4\u529b\u7248\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,a,b,s=10000005,e=0,ans1=0,ans2=0,l=0,m=0;\nbool vis[10000005];\nint main()\n{\n    memset(vis,false,sizeof(vis));\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        s=min(s,a);\n        e=max(e,b);\n        for(int j=a;j<b;j++)\n            vis[j]=true;\n    }\n    for(int i=s;i<e;i++)\n    {\n        if(vis[i]==true)\n        {\n            l++;\n            if(l>ans1)\n                ans1=l;\n        }\n        else\n            l=0;\n        if(vis[i]==false)\n        {\n            m++;\n            if(m>ans2)\n                ans2=m;\n        }\n        else\n            m=0;        \n    }\n    printf(\"%d %d\",ans1,ans2);\n    return 0;\n}\n```\n### \u5dee\u5206\u7248\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct tree{\n    int l,r;\n};\ntree node[5005];\nint n,a[1000005],b[1000005],start=1000005,end=0,s1=0,ans1=0,s2=0,ans2=0;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        start=min(start,a);\n        end=max(end,b);\n        node[i].l=a;\n        node[i].r=b;\n    }\n    for(int i=start;i<end;i++)\n    {\n        a[i]=1;\n        b[i]=a[i]-a[i-1];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        b[node[i].l]++;\n        b[node[i].r]--;\n        for(int j=node[i].l;j<node[i].r;j++)\n            a[j]=a[j-1]+b[j];\n    }\n    for(int i=start;i<end;i++)\n    {\n        if(a[i]!=1)\n        {\n            s1++;s2=0;\n            ans1=max(ans1,s1);\n        }\n        else\n        {\n            s2++;s1=0;\n            ans2=max(ans2,s2);\n        }\n    }\n    printf(\"%d %d\",ans1,ans2);\n    return 0;\n}\n```\n\n### \u7b2c\u4e09\u79cd\u529e\u6cd5~~\uff08\u6a21\u62df\uff09~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct tree{\n    int l,r;\n};\ntree node[5005],t;\nint n,ans1=0,ans2=0;\nbool cmp(tree a,tree b)\n{\n    return a.l<b.l;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        node[i].l=a;\n        node[i].r=b;\n    }\n    sort(node+1,node+n+1,cmp);\n    t=node[1];\n    for(int i=2;i<=n;i++)\n    {\n        if(node[i].l<=t.r&&node[i].r>t.r)\n            t.r=node[i].r;\n        if(node[i].l>t.r)\n        {\n            ans2=max(ans2,node[i].l-t.r);\n            ans1=max(ans1,t.r-t.l);\n            t=node[i];\n        }\n    }\n    ans1=max(ans1,t.r-t.l);\n    printf(\"%d %d\",ans1,ans2);\n    return 0;\n}\n```",
        "postTime": 1519897110,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "##luogu-P1204 [USACO1.2]\u6324\u725b\u5976Milking Cows\n\n\u6570\u636e\u5f88\u6c34\n\n\u4e0d\u7528\u5e76\u67e5\u96c6/\u5dee\u5206\u4e4b\u7c7b\u7684\u4f60\u4e5f\u53ef\u4ee5A\u9898\n\n\u76f4\u63a5\u6807\u8bb0\u6570\u7ec4\n\n            \n            \n                \n                \n```cpp\n    #include<stdio.h>\n    using namespace std;\n    bool times[1000001];\n    int main(void)\n    {\n        register int max=0,min=1000000;\n        int n;\n        scanf(\"%d\",&n);\n        for(register int i=0;i<n;i++)\n        {\n            int l,r;\n            scanf(\"%d%d\",&l,&r);\n            if(r>max) max=r;\n            if(l<min) min=l;\n            for(register int j=l;j<r;j++)\n                if(!times[j]) times[j]=1;\n        }\n        bool mode=times[min];\n        int cnt=0,MT=0,NoMT=0;\n        for(register int i=min;i<=max;i++)\n        {\n            if(mode!=times[i])\n            {\n                if(mode)\n                    {if(cnt>MT) MT=cnt;}\n                else\n                    {if(cnt>NoMT) NoMT=cnt;}\n                mode=!mode;\n                cnt=1;\n            }\n            else cnt++;\n            //printf(\"%d %d\\n\",mode,cnt);\n        }\n        printf(\"%d %d\",MT,NoMT);\n        return 0;\n}\n```",
        "postTime": 1515736750,
        "uid": 28321,
        "name": "bot_hibiki",
        "ccfLevel": 0,
        "title": "1\u670812\u65e5\u6c34\u9898\u65e5\u8bb0"
    },
    {
        "content": "\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\uff0c\u590d\u6742\u5ea6\u662fO(nlogn+n)\u7684\uff08\u6392\u5e8f+\u626b\u4e00\u904d\uff0c\u7528\u5feb\u901f\u6392\u5e8f\uff09\u3002\n\n\u6240\u8c13\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\uff0c\u5c31\u662f\u8bb0\u5f55\u4e00\u4e2a\u5f53\u524d\u533a\u95f4\uff0c \u5982\u679c\u4e0b\u4e00\u4e2a\u533a\u95f4\u662f\u5f53\u524d\u533a\u95f4\u7684\u5b50\u533a\u95f4\uff0c\u8df3\u8fc7\u3002 \u5982\u679c\u4e0b\u4e00\u4e2a\u533a\u95f4\u548c\u5f53\u524d\u533a\u95f4\u76f8\u4ea4\uff0c\u5c31\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u653e\u5165\u5f53\u524d\u533a\u95f4\uff0c \u5426\u5219\u5c31\u68c0\u67e5\u5f53\u524d\u533a\u95f4\u7684\u6700\u5c0f\u8fb9\u754c\uff08min\uff09\u4e0e\u6700\u5927\u8fb9\u754c\uff08max\uff09\u7684\u8ddd\u79bb\uff08max - min)\u662f\u4e0d\u662f\u6bd4\u8fde\u7eed\u6709\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\uff08work)\u8981\u5927\uff0c\u5c06\u65b0\u533a\u95f4\u4f5c\u4e3a\u5f53\u524d\u533a\u95f4\uff0c\u5e76\u4e14\u68c0\u67e5\u65b0\u533a\u95f4\u4e0e\u4e0a\u4e00\u533a\u95f4\u7684\u95f4\u9694\uff08data[point].start - max)\u662f\u5426\u5927\u4e8e\u6ca1\u6709\u4eba\u5de5\u4f5c\u7684\u65f6\u95f4\u7684\u5f53\u524d\u6700\u5927\u503c\uff08nowork)\uff0c\u7136\u540e\u7ee7\u7eed\u5f80\u53f3\u626b\u3002\n\n\u4e0d\u8d34\u4ee3\u7801\u5566~~\n",
        "postTime": 1507253356,
        "uid": 59364,
        "name": "\u571f\u95f4\u592a\u5e73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "/\\*\n\u8fd9\u9898\u5176\u5b9e\u53ef\u4ee5\u5f53\u6210\u79bb\u6563\u5316\u7684\u4e00\u4e2a\u6a21\u677f\u6765\u505a\uff0c\u628a\u6324\u725b\u5976\u7684\u5f00\u59cb\u7ed3\u675f\u70b9\u4f5c\u4e3a\u865a\u62df\u70b9\n\n\\*/\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=5000+10,MAXM=1000000+10;\nint n,xns;\nstruct node\n{\n    int x,y;\n}s[MAXN];\n//\u7ed3\u6784\u4f53\u5b58\u50a8\u5f00\u59cb\u7ed3\u675f\u70b9 \nbool b[MAXM],xnb[MAXN*2]//xnb\u6570\u7ec4\u7528\u6765\u6807\u8bb0\u865a\u62df\u65f6\u95f4\u70b9\u662f\u5426\u6709\u4eba\u5728\u6324\u725b\u5976;\nint xn[MAXN*2],sj[MAXM]//xn\u6570\u7ec4\u8bb0\u5f55\u865a\u62df\u70b9\u6307\u5411\u5b9e\u9645\u70b9\u7684\u4f4d\u7f6e\uff0csj\u6570\u7ec4\u6307\u5411\u5b9e\u9645\u70b9\u5bf9\u5e94\u7684\u865a\u62df\u70b9;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        s[i].x=x;s[i].y=y;\n        b[x]=1;b[y]=1;//\u628a\u5f00\u59cb\u7ed3\u675f\u70b9\u6807\u8bb0 \n    }\n    for(int i=0;i<=MAXM;++i)\n    if(b[i])\n    {\n        xn[++xns]=i;//\u6709\u4e00\u4e2a\u5f00\u59cb\u7ed3\u675f\u70b9\u5c31\u8bb0\u5f55\u4e00\u4e2a\u865a\u62df\u70b9 \n        sj[i]=xns;//\u5b9e\u9645\u6570\u7ec4\u6307\u5411\u8be5\u865a\u62df\u70b9 \n    }\n    for(int i=1;i<=n;++i)\n    {\n        for(int j=sj[s[i].x];j<=sj[s[i].y]-1;++j)\n        xnb[j]=1;//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5f00\u59cb\u7ed3\u675f\u65f6\u95f4\uff0c\u628a\u5f00\u59cb\u65f6\u95f4\u70b9\u7684\u865a\u62df\u70b9\u5230\u7ed3\u675f\u65f6\u95f4\u865a\u62df\u70b9\u7684\u524d\u4e00\u4e2a\u5168\u90fd\u6807\u8bb0\u62101 \n    }\n    int sum1=0,sum0=0,ans1=0,ans0=0;\n    for(int i=1;i<xns;++i)\n    {\n        if(xnb[i])\n        {\n            sum1+=xn[i+1]-xn[i];\n            sum0=0;\n            ans1=max(ans1,sum1);//\u7136\u540e\u5c31\u662f\u8bb0\u5f55 \n        }\n        else \n        {\n            sum0+=xn[i+1]-xn[i];\n            sum1=0;\n            ans0=max(ans0,sum0);\n        }\n    }\n    printf(\"%d %d\",ans1,ans0);//\u8f93\u51fa \n    return 0;\n}\n/*(o\u309c\u25bd\u309c)o\u2606[BINGO!]*/\n```",
        "postTime": 1503717496,
        "uid": 20822,
        "name": "cn_lemon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "- \u524d\u7f00\u548c\u6a21\u62df\n\n\n\n\n \n    \n    \n```cpp\n0. #include <cstdio>\n#include <iostream>\n#define MAXN 5005\n#define INF 233333333\nusing namespace std;\n//l->\u6700\u65e9\u65f6\u95f4  r->\u6700\u665a\u65f6\u95f4  maxn&minn\u7b54\u6848  f[MAXN],t[MAXN] \u5de5\u4f5c\u533a\u95f4  b[]\u524d\u7f00\u548c \nint n,l=INF,r,maxn,minn,f[MAXN],t[MAXN],b[1000005];\n//\u8bfb\u5165\u4f18\u5316 \nint read(){\n    char ch='*';\n    while(!isdigit(ch=getchar()));\n    int num=ch-'0';\n    while(isdigit(ch=getchar())) num=num*10+ch-'0';\n    return num; \n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        f[i]=read(),t[i]=read();\n        l=min(l,f[i]);//\u53d6\u6700\u5c0f \n        r=max(r,t[i]);//\u53d6\u6700\u5927 \n    }\n    for(int i=1;i<=n;i++){\n        b[f[i]]++;//\u5f00\u59cb\u65f6\u52a0\u4e00 \n        b[t[i]]--;//\u7ed3\u675f\u65f6\u51cf\u4e00 \n    }\n    for(int i=l,t=0,tmpmax=0,tmpmin=0;i<=r;i++){\n        t+=b[i];//t\u4e3a\u5f53\u524d\u65f6\u95f4\u5de5\u4f5c\u4eba\u6570\uff0c\u5982\u679c\u4e0d\u61c2\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u5c31\u61c2\u4e86 \n        if(t==0){\n            //\u5982\u679c\u5f53\u524d\u5de5\u4f5c\u4eba\u6570\u4e3a0\uff0c\u5c31\u66f4\u65b0maxn\u7b54\u6848\uff0c\u5e76\u4e14tmpmin++ \n            if(tmpmax>0){\n                 maxn=max(tmpmax,maxn);tmpmax=0;\n            }\n            ++tmpmin;\n        }\n        if(t>0){\n            //\u5982\u679c\u5f53\u524d\u5de5\u4f5c\u4eba\u6570\u4e0d\u4e3a0\uff0c\u5c31\u66f4\u65b0minn\u7b54\u6848\uff0c\u5e76\u4e14tmpmax++ \n            if(tmpmin>0){\n                minn=max(tmpmin,minn);tmpmin=0;\n            }\n            ++tmpmax;\n        }\n    }\n    cout<<maxn<<\" \"<<minn<<endl;\n    return 0; \n}\n```",
        "postTime": 1503563297,
        "uid": 40571,
        "name": "0x404",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\u3002\u7136\u540e\u60f3\u5230\u524d\u8f88\u67d0\u6b21\u795e\u5410\u69fd\uff0c\u5c31\u6ca1\u91c7\u7528\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\u4e4b\u540e\u60f3\u5230\u4e86\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u7eaf\u6a21\u62df\uff1a\n\n\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\uff0c\u5f53\u524d\u65f6\u95f4\u662f\u5426\u5b58\u5728\u6751\u6c11\u6b63\u5728\u5de5\u4f5c\uff0c\u90a3\u4e48\u4e8b\u60c5\u5c31\u597d\u529e\u4e86\u3002\n\n\u6362\u4e00\u79cd\u601d\u8def\uff0c\u5bf9\u5404\u4e2a\u65f6\u95f4\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u65f6\u95f4\u70b9\u5206\u4e24\u79cd\u7c7b\u578b\u3002\u5728\u7b2c\u4e00\u79cd\u65f6\u95f4\u70b9\uff0c\u4f1a\u6709\u4e00\u4e2a\u6751\u6c11\u5f00\u59cb\u5de5\u4f5c\u3002\u5728\u7b2c\u4e8c\u79cd\u65f6\u95f4\u70b9\uff0c\u4f1a\u6709\u4e00\u4e2a\u5de5\u4f5c\u7684\u6751\u6c11\u79bb\u5f00\u3002\n\n\u4ece\u5934\u5230\u5c3e\u8fdb\u884c\u6a21\u62df\u5373\u53ef\u3002\n\n\u7ef4\u62a4\u4e24\u79cd\u60c5\u51b5\u7684\u8d77\u59cb\u65f6\u95f4\u3002\u5f53\u4e00\u4e2a\u6751\u6c11\u5f00\u59cb\u5de5\u4f5c\uff0c\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u4eba\u5de5\u4f5c\uff0c\u90a3\u4e48\u66f4\u65b0\u65e0\u4eba\u5de5\u4f5c\u7684\u7b54\u6848\uff0c\u66f4\u65b0\u5f53\u524d\u60c5\u51b5\u7684\u8d77\u59cb\u65f6\u95f4\u3002\n\n\u5f53\u4e00\u4e2a\u6751\u6c11\u79bb\u5f00\uff0c\u82e5\u4e4b\u540e\u6ca1\u6709\u4eba\u5de5\u4f5c\uff0c\u90a3\u4e48\u66f4\u65b0\u6709\u4eba\u5de5\u4f5c\u7684\u7b54\u6848\uff0c\u66f4\u65b0\u5f53\u524d\u72b6\u51b5\u7684\u8d77\u59cb\u65f6\u95f4\u3002\n\n\u540c\u65f6\uff0c\u53ef\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u65f6\u95f4\u70b9\uff0c\u6709\u4eba\u6765\u4e86\u53c8\u6709\u4eba\u53bb\u4e86\u7684\u60c5\u51b5\u3002\u6b64\u65f6\u4e0d\u5e94\u66f4\u65b0\u60c5\u51b5\u3002\n\n\u4f46\u5408\u5e76\u65f6\u95f4\u6bb5\u592a\u9ebb\u70e6\u256e(\u256f\u25bd\u2570)\u256d\u6240\u4ee5\u5728\u6392\u5e8f\u4e0a\u505a\u70b9\u6539\u8fdb\u2014\u2014\u65f6\u95f4\u76f8\u540c\u65f6\uff0c\u5f00\u59cb\u5de5\u4f5c\u7684\u4eba\u5728\u524d\uff0c\u79bb\u5f00\u5de5\u4f5c\u7684\u4eba\u5728\u540e\u3002\n\n\u9898\u76ee\u548c\u5b9e\u73b0\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n```cpp\n/*\nID: a1162731\nLANG: C++\nTASK: milk2\n*/\n\n#include<bits/stdc++.h> \ntypedef long long ll;\nusing namespace std;\n\nint gi(){\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n    return x;\n}\n\nconst int N=10000+10;\nstruct FJ{\n    int time;\n    bool type;\n}f[N];\nint k=0;\n\nbool cmp(const FJ &a,const FJ &b){\n    if(a.time<b.time)return 1;\n    else if(a.time==b.time&&a.type<b.type)return 1;\n    return 0;\n}//\u6ce8\u610f\u6392\u5e8f\u987a\u5e8f \n\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>f[k].time;\n        f[k++].type=0;\n        cin>>f[k].time;\n        f[k++].type=1;\n    }\n    sort(f,f+k,cmp);\n    int cnt,bet;\n    bet=0x7fffffff;//\u521a\u5f00\u59cb\u7684\u65f6\u95f4\u6bb5\u4e0d\u7b97 \n    cnt=0;\n    int noans,haans;//\u4e24\u95ee\u7b54\u6848 \n    noans=haans=0;\n    for(int i=0;i<k;i++){\n        if(f[i].type==0){\n            if(cnt==0)noans=max(noans,f[i].time-bet),bet=f[i].time;//\u6709\u4eba\u60c5\u51b5\u5f00\u59cb\uff0c\u66f4\u65b0\u60c5\u51b5 \n            cnt++;\n        }\n        if(f[i].type==1){\n            cnt--;\n            if(cnt==0)haans=max(haans,f[i].time-bet),bet=f[i].time;//\u65e0\u4eba\u60c5\u51b5\u5f00\u59cb\uff0c\u66f4\u65b0\u60c5\u51b5 \n        }\n    }\n    printf(\"%d %d\\n\",haans,noans);\n\n    return 0;\n}\n```",
        "postTime": 1500263673,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "**\u4e00\u4e2a\u8ba4\u771f\u7684\u9898\u89e3**\n\n\u9996\u5148 \u6211\u4eec\u9700\u8981\u5bf9\u5f00\u59cb\u7684\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\n\n\u5176\u6b21 \u7528\u4e00\u4e2a\u4e34\u65f6\u7684\u65f6\u95f4\u6bb5\u50a8\u5b58\u6709\u4eba\u6324\u725b\u5976\u7684\u6301\u7eed\u65f6\u95f4\n\n\u518d\u6b21 \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u8fdb\u6765\u7684\u65f6\u95f4\u6bb5\uff0c\u4e0d\u5916\u4e4e\u6709\u4e09\u79cd\u60c5\u51b5\n\n\uff08\n1.\u5b8c\u5168\u88ab\u4e34\u65f6\u65f6\u95f4\u6bb5\u8986\u76d6\uff08\u8fd9\u79cd\u60c5\u51b5\u65e0\u9700\u5904\u7406\uff09\n\n2.\u90e8\u5206\u8986\u76d6\u4e8e\u4e34\u65f6\u65f6\u95f4\u6bb5\uff08\u5904\u7406\uff1a\u6539\u53d8\u4e34\u65f6\u65f6\u95f4\u6bb5\u7ed3\u675f\u70b9\uff09\n\n3.\u6ca1\u6709\u8986\u76d6\uff08\u5904\u7406\uff1a\u6539\u53d8\u4e34\u65f6\u65f6\u95f4\u6bb5\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\uff09\n\n\uff09\n---\u601d\u8def\u5927\u6982\u5c31\u8fd9\u6837\n\n\u5269\u4e0b\u7684\u5bfb\u627e\u6700\u5927\u65f6\u95f4\u6bb5\u8be6\u89c1\u7a0b\u5e8f\n\n` ` `\ncpp\n```cpp\n#include<iostream>\nusing namespace std;\nint n;\nint begin[5005],end[5005];\nvoid qsort(int i,int j)\n{\n    int l,r,mid,x;\n    l=i;r=j;\n    mid=begin[(l+r)/2];\n    while(l<=r)\n    {\n        while(begin[l]<mid) l++;\n        while(begin[r]>mid) r--;\n        if(l<=r)\n        {\n            x=begin[l];begin[l]=begin[r];begin[r]=x;\n            x=end[l];end[l]=end[r];end[r]=x;\n            l++;r--;\n        }\n    }\n    if(l<j) qsort(l,j);\n    if(r>i) qsort(i,r);\n```\n}//\u5feb\u6392\n\n         \n```cpp\nint main()\n{\n    int end1,begin1;//\u4e34\u65f6\u65f6\u95f4\u6bb5\u7684\u5f00\u59cb\u70b9\u4e0e\u7ed3\u675f\u70b9\n    long long yes=0,no=0;int tempyes,tempno=-1;//yes\u50a8\u5b58\u6700\u5927\u6709\u4eba\u65f6\u95f4\u6bb5\uff0cno\u5219\u662f\u65e0\u4eba\u6324\u5976\n    cin>>n;\n    for(int i=1;i<=n;i++)\n     cin>>begin[i]>>end[i];\n     qsort(1,n);\n     tempyes=end[1]-begin[1];begin1=begin[1];end1=end[1];\n     for(int o=1;o<=n;o++)\n     {\n         if(begin[o]<=end1&&end[o]>=end1)\n         {\n             yes=max(tempyes,end[o]-begin1);\n             tempyes=yes;\n             end1=end[o];\n         }\n         if(begin[o]>end1)\n         {\n             no=max(tempno,begin[o]-end1);\n             tempno=no;\n             begin1=begin[o];\n             end1=end[o];\n         }\n     }\n     cout<<yes<<\" \"<<no;\n}\n```\n` ` `",
        "postTime": 1498740598,
        "uid": 29755,
        "name": "YingBob",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "###\u63d0\u4f9b\u4e00\u79cd\u6548\u7387\u5f88\u4f4e\u4f46\u80fd\u4fdd\u8bc1\u6b63\u786e\u7387\u7684\u89e3\u6cd5\n\n**\u7528bool\u6570\u7ec4\u8868\u793a\u5728\u8be5\u65f6\u95f4\u5185\uff0c\u662f\u5426\u6709\u519c\u6c11\u6324\u725b\u5976**,\u6709\u5219=true,\u5426\u5219=false;\n\n**\u6ce8\u610f\u533a\u95f4\u7684\u8868\u793a!**\uff0c\u6211\u7528\u7684\u662f\u5de6\u95ed\u53f3\u5f00\u533a\u95f4,\u8f93\u5165\u7684start\u8ba4\u4e3a\u5728\u8be5**\u65f6\u95f4\u70b9**\u4e3atrue,end\u4e3afalse\n\n\u7136\u540e\u5c31\u662f\u6c42\u6700\u5927\u8fde\u7eed\u7684true\u548cfalse\u4e86\n\n###\u6c42\u6700\u5927\u8fde\u7eed\u7684true\u548cfalse\u7684\u679a\u4e3e\u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u8f93\u5165\u65f6\u628astart\u548cend\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u5b58\u8d77\u6765\n\n\u672c\u6765\u89c9\u5f97\u56deTLE\u7684\uff0c\u6ca1\u60f3\u5230AC\u4e86\n\n\n\n```cpp\n#include\"cstdio\"\n#include\"iostream\"\n#include\"cstring\"\nusing namespace std;\nbool a[1000005];\nint maxx1,maxx2,minns=0x7fffffff,maxxe=0;\nint main()\n{\n memset(a,false,sizeof(a));\n int n,x,y,s1=0,s2=0;\n cin>>n;\n for(int i=0;i<n;i++)\n {\n  cin>>x>>y;\n  if(x<minns) minns=x;\n  if(y>maxxe) maxxe=y;\n  for(int i=x;i<y;i++)\n  a[i]=true;       \n } \n for(int i=minns;i<maxxe;i++)\n {\n  if(a[i]==true) {s1++;if(s1>maxx1) maxx1=s1;}\n  else s1=0;\n  if(a[i]==false){s2++;if(s2>maxx2) maxx2=s2;}\n  else s2=0;        \n }  \n cout<<maxx1<<\" \"<<maxx2<<\"\\n\";\n return 0;\n}\n```\n#1AC0ms/12835kB\n#2AC0ms/3242kB\n\n#3AC0ms/12835kB\n\n#4AC0ms/12835kB\n\n#5AC82ms/12835kB\n\n#6AC0ms/12835kB\n\n#7AC1ms/12835kB\n\n#8AC4ms/12835kB\n",
        "postTime": 1497676353,
        "uid": 27114,
        "name": "BlueArc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5f53\u65f6\u7684\u9898\u89e3\u5e76\u6ca1\u6709\u9519\uff0c\u53ea\u662f\u4e3a\u4e86\u9632\u6b62\u4e00\u6b21\u6284\u88ad\u800c\u6545\u610f\u6dfb\u52a0\u4e00\u4e2a\u8bed\u6cd5\u9519\u8bef\uff08\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff09\uff0c\n\n\u8fd8\u6709\u8fd9\u9053\u9898\u5e94\u8be5\u53ef\u4ee5\u51fa\u7684\u518d\u96be\u4e00\u4e9b\uff0c\u6570\u636e\u5e94\u8be5\u518d\u5927\u4e9b\uff08\u6bd4\u5982\u8bf4\u65f6\u95f4\u5e94\u4e3a1\u4ebf\uff09\uff0c\n\n\u5982\u679c\u8fd9\u6837\uff0c\u90a3\u4e48\u79bb\u6563\u5316\u662f\u8be5\u95ee\u9898\u7684\u552f\u4e00\u89e3\u6cd5\u5427\u3002\n\n```cpp\n#include<iostream>\n#include<math.h>\nusing namespace std;\nint n,a[10000]={0},b[10001]={0};\nvoid sort(int l,int r)//\u5feb\u6392\uff0c\u5c06\u65f6\u95f4\u5148\u540e\u6392\u5e8f\u597d\n{\n    int i=l,j=r,m1=a[(i+j)/2], m2=b[(i+j)/2];\n    while(i<=j)\n    {\n        while(a[i]<m1||a[i]==m1&&b[i]<m2) i++;\n        while(m1<a[j]||m1==a[j]&&m2<b[j]) j--;\n        if(i<=j)\n        {\n            a[0]=a[i];\n            a[i]=a[j];\n            a[j]=a[0];\n            b[0]=b[i];\n            b[i]=b[j];\n            b[j]=b[0];\n            i++; j--;\n        }\n    }\nif (i<r) sort(i,r);\nif (l<j) sort(l,j);\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i]>>b[i];\n    sort(1,n);\n    int new1=a[1],new2=b[1], maxn=b[1]-a[1], maxm=0;//maxn\u5904\u7406\u6700\u957f\u7684\u6324\u5976\u65f6\u95f4\uff1bmaxm\u5904\u7406\u6700\u957f\u7684\u4e0d\u6324\u5976\u7684\u65f6\u95f4\n    for(int i=2;i<=n;i++)//\u5f00\u59cb\u5904\u7406\u6570\u636e\n    {\n        if(a[i]>new2)//\u4e24\u6761\u7ebf\u6bb5\u4e0d\u91cd\u5408\n        {\n            maxm=max(maxm,a[i]-new2);\n            new1=a[i];\n            new2=b[i];\n            maxn=max(maxn,new1-new2);\n        }\n        if(a[i]<=new2&&new2<=b[i]) //\u4e24\u6761\u7ebf\u6bb5\u90e8\u5206\uff08\u6216\u5168\u90e8\uff09\u91cd\u5408\n        {\n          maxn=max(maxn,b[i]-new1);\n          new2=b[i];\n        } \n    }\ncout<<maxn<<' '<<maxm<<endl;\nreturn 0;\n}\n```",
        "postTime": 1482923337,
        "uid": 31649,
        "name": "\u5de8\u9e7fssss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u8fd9\u9898\u561b\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u6765\u505a...\u65e2\u7136\u524d\u9762\u6ca1\u4eba\u8bf4\u5230\uff0c\u6211\u5c31\u63d0\u4e00\u4e0b\u5427\u3002\n\n\u4e0d\u8fc7\u4e5f\u5c31\u662f\u4e2a\u6bd4\u8f83\u4e0d\u66b4\u529b\u7684\u66b4\u529b...?\n\n\u662f\u8fd9\u6837\u7684\uff0c\u7528\u4e00\u4e2a1000000\u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u533a\u95f4\u548c\u7684\u60c5\u51b5\u3002\n\n\u6bcf\u4e00\u4e2a\u6324\u5976\u7684\u4eba\u65f6\u95f4\u5982\u679c\u662f[s,e)\uff0c\u90a3\u4e48\u5c31a[s]++; a[e]--;\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7b[k] = b[k-1] + a[k];\u8fd9\u4e2a\u9012\u63a8\u5f0f\u6765\u6c42\u5f97\u6bcf\u4e2a\u65f6\u95f4\u70b9\u7684\u6324\u5976\u4eba\u6570\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u4ece\u6570\u636e\u7ed9\u51fa\u7684\u6700\u5c0f\u503c\u5faa\u73af\u5230\u6700\u5927\u503c\uff0c\u62ff\u4e2atmp\u6765\u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86\u3002\u5f00\u4e2aflag\u548c\u4e24\u4e2a\u8bb0\u5f55\u53d8\u91cf\u7528\u6765\u8bb0\u5f55\u8fde\u7eed\u6324\u5976\u548c\u8fde\u7eed\u4e0d\u6324\u5976\u957f\u5ea6\uff0c\u518d\u5f00\u4e24\u4e2a\u7b54\u6848\u53d8\u91cf\u5b58max\u503c...\n\n```cpp\n/* P1204\n * Au: SJoshua\n */\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n\nint n, s, e, time[1000001], last = 0, first = 0x7fffffff;\n\nint main(void) {\n    scanf(\"%d\", &n);\n    for (int k = 0; k < n; k++) {\n        scanf(\"%d %d\", &s, &e);\n        time[s]++;\n        time[e]--;\n        last = max(last, e);\n        first = min(first, s);\n    }\n    int tmp = 0, dcnt = 0, pcnt = 0, dans = 0, pans = 0;\n    bool flag = true;\n    for (int k = first; k <= last; k++) {\n        tmp += time[k];\n        if (tmp > 0) {\n            if (!flag) { \n                flag = true;\n                pcnt = 0;\n                dans = max(dans, dcnt);\n            }\n            pcnt++;\n        } else {\n            if (flag) {\n                flag = false;\n                dcnt = 0;\n                pans = max(pans, pcnt);\n            }\n            dcnt++;\n        }\n    }\n    printf(\"%d %d\", pans, dans);\n    return 0;\n}\n```",
        "postTime": 1476340214,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u6c34\u8fc7\u3002\n\n\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff1a\u5728bool\u6570\u7ec4\u4e0a\u6253\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u4e2a\u65f6\u95f4\u662f\u5426\u6709\u5976\u519c\u5728\u6324\u5976\u3002\u4e4b\u540e\u518d\u641c\u4e00\u904d\u627e\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u7167\u4f8b\u7ed9\u51fa\u4f2a\u4ee3\u7801\u3002\n\n\n```cpp\n    for(i=1; i<=m; i++)\n    {\n        scanf(\"%d%d\",&s,&e);\n        for(j=s; j<e; j++) f[j]=1;//\u6253\u6807\u8bb0\n        ms=min(ms,s);me=max(e,me);\n    }\n    for(i=ms; i<=me; i++)\n    {\n        if(f[i]==1)\n        {   ansn=max(n,ansn);\n            y++;n=0;\n        }\n        else\n        {   ansy=max(y,ansy);\n            n++,y=0;\n        }\n    }\n\n```",
        "postTime": 1470989936,
        "uid": 12141,
        "name": "iftest614",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5f88\u7b80\u5355 \u6392\u5e8f+\u626b\u63cf\n\n```cpp\nvar a,b,c,d:array[0..10000]of longint;i,m1,m2,n,k,m:LONGINT;\nprocedure qsort(l,r: longint);//\u6392\u5e8f\nvar i,j,x,y,x2: longint;\nbegin\n  i:=l;j:=r;x:=c[(l+r) div 2]; x2:=d[(l+r)div 2];\n  repeat\n    while(c[i]<x)or(c[i]=x)and(d[i]<x2)do inc(i);\n    while(x<c[j])or(c[j]=x)and(d[j]>x2)do dec(j);\n    if not(i>j) then\n      begin\n        y:=c[i];c[i]:=c[j];c[j]:=y;\n        y:=d[i];d[i]:=d[j];d[j]:=y;\n        inc(i);j:=j-1;\n      end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      readln(a[i],b[i]);c[i*2-1]:=a[i];c[i*2]:=b[i];//\u6807\u53f7\n      d[i*2-1]:=1;d[i*2]:=2;\n    end;\n  qsort(1,n*2);\n  m1:=0;m2:=0;k:=c[1];m:=0;\n  for i:=1 to n*2 do //\u626b\u63cf\uff0c\u53d6\u6700\u5927\u503c\n    if d[i]=1 then\n      begin\n        if m=0 then\n          if c[i]-k>m2 then m2:=c[i]-k;\n        inc(m);\n        if m=1 then k:=c[i];\n      end\n    else begin\n           dec(m);\n           if m=0 then if c[i]-k>m1 then m1:=c[i]-k;\n           if m=0 then k:=c[i];\n         end;\n  writeln(m1,' ',m2);//\u8f93\u51fa\nend.\n\n```",
        "postTime": 1448195486,
        "uid": 3605,
        "name": "niyinchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "```cpp\n\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\nint a[10000000]={0};//\u5728\u5916\u9762\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\nint main()\n{\n    int n,b,c,zd=0,zx=999999999,js=0,t,jn=0,mj=0,zdd=0,jnd=0,j,i;//zx\u8981\u591f\n                                      //\u5927\uff0c\u624d\u80fd\u4fdd\u8bc1\u6709\u6bd4\u4ed6\u5c0f\u7684\uff0c\u6700\u5927\u6e050\n    cin>>n;//\u8f93\u5165n\n    for (int i=0;i<n;i++)\n    {\n        cin>>b>>c;\n        if (b<zx)//\u5982\u679c\u5f00\u59cb\u65f6\u95f4\u6bd4\u4e4b\u524d\u6700\u65e9\u5f00\u59cb\u65f6\u95f4\u8fd8\u65e9\n        zx=b;//\u6700\u65e9\u65f6\u95f4\u5c31\u662fb\n        if (c>zd)//    \uff01\u540c\u4e0a\n        zd=c;\n        for (int j=b;j<=c;j++)//\u7528\u4e00\u7ef4\u5b58\n        a[j]=1;//\u6709\u5c31\u662f1\uff0c\u6ca1\u6709\u5c31\u662f0\n    }\n    a[zd+1]=a[zd];//\u4fdd\u8bc1\u4e0d\u4f1a\u51fabug\n    for (int j=zx;j<=zd;j++)\n    {\n        if (a[j]==1)//\u5982\u679c\u6709\u5728\n        jn++;\u6324\u5976\u65f6\u95f4+1\n        else\u5426\u5219\n        mj++;\u6ca1\u5728\u65f6\u95f4+1\n        if (jn>zdd)//\u5224\u65ad\u662f\u5426\u8d85\u51fa\n        zdd=jn-1;\n        if (mj>jnd)//\u540c\u4e0a\n        jnd=mj+1;\n        if (a[j+1]!=a[j])//\u5982\u679c\u8fd9\u6b21\u80fd\u8ddf\u4e0b\u6b21\u4e0d\u4e00\u6837\n        {\n        if (a[j]==1)//\u5982\u679c\u73b0\u5728\u6709\u6324\n        jn=0;//\u6e050\n        if (a[j]==0)//\u5982\u679c\u73b0\u5728\u6ca1\u6324\n        mj=0;//\u6e050\n        }\n    }\n    cout<<zdd<<\" \"<<jnd<<endl;//\u8f93\u51fa\n    return 0;\n}\n\n```",
        "postTime": 1437108760,
        "uid": 5895,
        "name": "Megumi_Cold",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u591a\u5173\u952e\u5b57\u6392\u5e8f+\u6a21\u62df\u3002\u6570\u636e\u89c4\u6a21\u8f83\u5c0f\uff0c\u53ef\u7528O(n^2)\u7684\u9009\u62e9\u6392\u5e8f\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u6392\u5e8f\u8017\u65f6\u7ea60.25\u79d2\uff0c\u4e0d\u8d85\u65f6\u3002\n\n```delphi\n\nvar\n s,f:array [1..5000] of longint;\n n,i,j,max1,max2,t1,t2,t,ms,mf:longint;\nbegin\n readln(n);\n for i:=1 to n do readln(s[i],f[i]);\n for i:=1 to n-1 do\n  for j:=i+1 to n do\n   if (s[i]>s[j]) or (s[i]=s[j]) and (f[i]>f[j]) then\n    begin\n     t:=s[i];s[i]:=s[j];s[j]:=t;\n     t:=f[i];f[i]:=f[j];f[j]:=t\n    end;\n j:=1;\n while j<=n do\n begin\n  ms:=s[j];//\u8fd9\u4e00\u65f6\u6bb5\u5f00\u59cb\u65f6\u95f4\n  mf:=f[j];//\u8fd9\u4e00\u65f6\u6bb5\u7ed3\u675f\u65f6\u95f4\n  while (s[j+1]<=mf) and (j<n) do\n  begin\n   inc(j);\n   if f[j]>mf then mf:=f[j]//\u4fee\u6539\u8fd9\u4e00\u65f6\u6bb5\u7ed3\u675f\u65f6\u95f4\n  end;\n  t1:=mf-ms;\n  if t1>max1 then max1:=t1;//\u5224\u65ad\u662f\u5426\u6700\u957f\u6709\u4eba\u6324\u5976\u65f6\u95f4\n  t2:=s[j+1]-mf;\n  if t2>max2 then max2:=t2;//\u5224\u65ad\u662f\u5426\u6700\u957f\u65e0\u4eba\u6324\u5976\u65f6\u95f4\n  inc(j)\n end;\n write(max1,' ',max2)\nend.\n\n```",
        "postTime": 1428125673,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\nusing namespace std;\nstruct fm{\n        int s;\n        int e;\n    }a[5050];     //\u4e60\u60ef\u7528\u7ed3\u6784\u4f53\u4e86\uff0c\u4e0d\u7528\u4e5f\u884c \nint b[1000010];\nint main(){\n    int n,i,j,s1=0,s2=0,maxn=0,max1=0,max2=0;\n    cin>>n;\n    for(i=1;i<=n;i++){\n        cin>>a[i].s>>a[i].e;\n        if(maxn<a[i].e)maxn=a[i].e;//maxn\u662f\u8f93\u5165\u6700\u5927\u6570 \n        for(j=a[i].s+1;j<=a[i].e;j++)b[j]=1;//\u6807\u8bb0\u6cd5\uff0c\u628a\u6709\u4eba\u5de5\u4f5c\u65f6\u95f4\u521d\u59cb\u5316\u4e3a1\uff0c\u6ce8\u610f\u5f00\u59cb+1 \n    }\n    i=0;    \n    while(!b[i])i++;\n    j=i;\n    while(j<=maxn){\n        while(b[j]&&j<=maxn){\n            s1++;//s1 \u662f\u7d2f\u8ba1\u5de5\u4f5c\u65f6\u95f4 \n            j++;            \n        }\n        if(max1<s1)max1=s1;//max1\u662f\u6700\u5927\u5de5\u4f5c\u65f6\u95f4 \n        s1=0;        \n        while(!b[j]&&j<=maxn){\n            s2++;//s2\u662f\u7d2f\u8ba1\u7a7a\u95f2\u65f6\u95f4 \n            j++;            \n        }\n        if(max2<s2)max2=s2;    //max2\u662f\u6700\u5927\u7a7a\u95f2\u65f6\u95f4    \n        s2=0;    \n    }        \n    cout<<max1<<\" \"<<max2<<endl;    \n    return 0;\n}\n```",
        "postTime": 1505901880,
        "uid": 56665,
        "name": "\u90d1yz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    },
    {
        "content": "\u6876\u6392\u5e8f\uff0c\u7528\u4e8e\u6807\u8bb0\u5f53\u524d\u65f6\u95f4\u662f\u5426\u5728\u6324\u725b\u5976\uff0c\u540e\u9009\u62e9\u6700\u957f\u7684\u4e00\u6bb51\u62160\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n/\\*\nID:skyzs202\n\nPROG:milk2\n\nLANG:C++\n\n\\*/\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,st,ed,mst=100001,med=0,yes,no,ansy,ansn;\nbool b[1000001];\nint main()\n{\n    freopen(\"milk2.in\",\"r\",stdin);\n    freopen(\"milk2.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&st,&ed);\n        if(st<mst)\n        {\n            mst=st;\n        }\n        if(ed>med)\n        {\n            med=ed;\n        }\n        for(int j=st;j<ed;j++)\n        {\n            b[j]=1;//\u6807\u8bb0\n        }\n    }\n    for(int i=mst;i<=med;i++)\n    {\n        if(b[i]==0)//\u5224\u65ad\n        {\n            if(yes>ansy)\n            {\n                ansy=yes;\n            }\n            yes=0;\n            no++;\n        }\n        if(b[i]==1)\n        {\n            if(no>ansn)\n            {\n                ansn=no;\n            }\n            no=0;\n            yes++;\n        }\n    }\n    cout<<ansy<<\" \"<<ansn<<endl;\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1470499009,
        "uid": 19182,
        "name": "Johnson_sky",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1204 \u3010[USACO1.2]\u6324\u725b\u5976Milking Cows\u3011"
    }
]