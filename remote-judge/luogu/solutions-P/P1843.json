[
    {
        "content": "## C++\u9898\u89e3 \u4e8c\u5206\u7b54\u6848\n\n\u9898\u5916\u8bdd\uff1a\u672c\u849f\u84bb\u7b2c\u4e09\u7bc7\u9898\u89e3\uff08\u524d\u4e24\u7bc7\u90fd\u5199\u7684\u4e0d\u597d \u4eca\u5929\u8ba4\u771f\u5199\u4e00\u7bc7\uff09\n\n\nQ & A \n\nQuestion 1:\u4e3a\u4ec0\u4e48\u80fd\u7528\u4e8c\u5206\uff1f\n\nAnswer\uff1a\u7ed3\u679c\u6709\u5355\u8c03\u6027 \u5373\u8981\u5f97\u51fa\u7b54\u6848 \u4f60\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u7b54\u6848 \u4f46\u662f\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\u3002\u3002\u3002\uff08\u81ea\u884c\u8111\u8865\uff09\n\nQuestion 2:\u4e8c\u5206\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\n\nAnswer\uff1a\u9ed8\u8ba4\u5927\u5bb6\u90fd\u5b66\u8fc7\u65b9\u7a0b \u4e3e\u4e2a\u6817\u5b50?\uff1a\u5217\u65b9\u7a0b\u65f6\uff0c\u603b\u662f\u628a\u95ee\u9898\u8981\u6c42\u7684\u91cf\u8bbe\u6210X\uff0c\u4e8c\u5206\u7b54\u6848\u4e5f\u662f\u4e00\u6837\uff0c\u4e8c\u5206\u65f6\u95f4\u5c31\u884c\u4e86\n\n~~\u4e8c\u5206\u8fd8\u4e0d\u4f1a\u7684\u8bf7\u7ffb\u4e66\u6216\u770b\u5176\u4ed6\u9898\u89e3~~\n\n\u4e0a\u4ee3\u7801\uff08\u91cd\u8981\u4ee3\u7801\u6709\u6ce8\u91ca\uff09\uff1a\n```cpp\nint c[500005];\nint n,a,b,i,j,k,y,l,r,m;\n\n//\u6b64\u5904\u662f\u68c0\u67e5\u80fd\u5426\u5728\u4f60\u8bbe\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u667e\u8863\u670d\u7684\u4efb\u52a1\nbool check(int x)\n{\n    k=0;\n    for(i=1;i<=n;i++)\n    {\n    \tj=c[i]-a*m;//\u65e2\u7136\u7528X\u7684\u65f6\u95f4\u5b8c\u6210\u667e\u8863\u670d \u90a3\u4e48\n        \t\t   //\u5982\u679c\u4e0d\u8fdb\u70d8\u5e72\u673a \u4e5f\u80fd\u51cf\u8f7bA*M\u7684\u6e7f\u5ea6\n        if(j<=0) continue;//\u5373\u5df2\u7ecf\u5e72\u4e86\n        y=j/b;//\u5982\u679c\u6ca1\u5e72 \u8981\u8fdb\u70d8\u5e72\u673a\uff0cY\u5373\u4e3a\u70d8\u5e72\u65f6\u95f4\n        if(j%b!=0) y++;\n        k+=y;\n        if(k>m) return 0;\n    }\n    if(k<=m) return 1;\n    else return 0;\n}\n\nint main()\n{\n    cin>>n>>a>>b;\n    for(i=1;i<=n;++i) scanf(\"%d\",&c[i]);\n    //\u4ee5\u4e0b\u662f\u6807\u51c6\u4e8c\u5206 \u4e0d\u8981\u5199\u9519\u4e86\n    l=0,r=500010;\n    while(l!=r)\n    {\n        m=(l+r)/2;\n        if(check(m)) r=m;\n        else l=m+1;\n    }\n    cout<<l;\n    return 0;\n}\n```\n~~\u4e0d\u8981\u8bd5\u56fe\u76f4\u63a5\u590d\u5236 \u6211\u7701\u7565\u4e86\u5934\u6587\u4ef6~~",
        "postTime": 1532245016,
        "uid": 37124,
        "name": "_bql",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "### \u3010\u7b97\u6cd5\u601d\u8def\u3011\n\u7531\u4e8e\u5f04\u5e72\u6240\u6709\u8863\u670d\u9700\u8981\u7684\u65f6\u95f4\u662f\u7531\u6700\u540e\u4e00\u4ef6\u70d8\u5e72\u7684\u8863\u670d\u6240\u9700\u8981\u7684\u65f6\u95f4\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u90fd\u5bf9\u5269\u4f59\u6240\u9700\u65f6\u95f4\u6700\u957f\u7684\u90a3\u4ef6\u8863\u670d\u4f7f\u7528\u70d8\u8863\u673a\u3002\n### \u3010\u6ce8\u610f\u4e8b\u9879\u3011\n\u7531\u4e8e\u6211\u4eec\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4**\u975e\u5e38\u7684\u5927**\uff0c\u5982\u679c\u7528sort\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f7f\u7528\u5806\u6765\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\u3002\n### \u3010\u6807\u51c6\u7a0b\u5e8f\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\npriority_queue<int> sta;\n\nint main(){\n    int t=0,i,j,k,m,n,a,b;\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(i=1;i<=n;i=-~i){\n        scanf(\"%d\",&k);\n        sta.push(k);\n    }\n    t+=a;\n    k=sta.top();\n    sta.pop();\n    k-=b;\n    sta.push(k);\n    while(1){\n        k=sta.top();\n        sta.pop();\n        if(k-t<=0){\n            printf(\"%d\",t/a);\n            return 0;\n        }\n        t+=a;\n        k-=b;\n        sta.push(k);\n    }\n    return 0;\n}\n```\n### \u3010\u7a0b\u5e8f\u89e3\u91ca\u3011\n1\u3001\u7531\u4e8e\u81f3\u5c11\u9700\u8981\u4e00\u5929\u65f6\u95f4\uff0c\u6211\u4eec\u5148\u9884\u5904\u7406\u4e00\u5929\u7684\u7ed3\u679c\u3002\n\n2\u3001t\u8868\u793a\u5f53\u524d\u65f6\u95f4\u81ea\u7136\u6652\u5e72\u7684\u6e7f\u5ea6\uff0c\u5f53\u67d0\u4e00\u65f6\u523b\uff0ct\u5927\u4e8e\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u7684\u6e7f\u5ea6\uff0c\u5219\u8f93\u51fat/a\uff08\u8868\u793a\u5929\u6570\uff09\u3002\n\n3\u3001t\u5c0f\u4e8e\u5927\u4e8e\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u7684\u6e7f\u5ea6\uff0c\u5219\u6211\u4eec\u628a\u5b83\u7684\u6e7f\u5ea6\u51cf\u53bb\u70d8\u8863\u673a\u5355\u4f4d\u65f6\u95f4\u7684\u70d8\u5e72\u91cf\uff0c\u7136\u540e\u518d\u628a\u5b83\u91cd\u65b0\u52a0\u5165\u5806\u4e2d\u3002",
        "postTime": 1533284585,
        "uid": 8595,
        "name": "FLASH_CM",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u6807\u51c6\u7684\u4e8c\u5206\u7b54\u6848\u3002\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\u505a\u6cd5\uff0c\u5373\u679a\u4e3e\u6700\u7ec8\u7b54\u6848ans\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u53ef\u884c\u7684ans\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\uff08\u5728ans\u65f6\u95f4\u5185\u53ef\u4ee5\u70d8\u5e72\u5728ans+t(t>=0)\u7684\u65f6\u95f4\u5185\u4e5f\u5c31\u4e00\u5b9a\u53ef\u4ee5\u70d8\u5e72\uff09\u7531\u4e8eN<=500000\u7684\u6570\u636e\u8303\u56f4\u7edd\u5bf9\u4f1aTLE\uff0c\u56e0\u6b64\u9700\u8981\u4f18\u5316\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\uff0c\u7531\u4e8e\u4e4b\u524d\u63d0\u5230\u7684\u6027\u8d28\uff0c\u8bbef(i)\u8868\u793a\u5728i\u65f6\u95f4\u5185\u6709\u65e0\u53ef\u80fd\u70d8\u5e72\uff0c\u90a3\u4e48f\u6570\u7ec4\u5fc5\u5b9a\u6ee1\u8db3**\u5355\u8c03\u6027**\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u7ec8\u7b54\u6848ans\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2aans\u5bf9\u5176\u8fdb\u884c\u66b4\u529bcheck\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4ef6\u8863\u670d\uff0c\u5982\u679c\u5b83\u80fd\u5728ans\u5929\u5185\u70d8\u5e72\uff08\u6e7f\u5ea6<=ans*a\uff09\uff0c\u90a3\u4e48\u5c31\u4e0d\u5fc5\u4f7f\u7528\u70d8\u5e72\u673a\uff0c\u63a5\u4e0b\u6765\u5904\u7406\u5fc5\u987b\u4f7f\u7528\u70d8\u5e72\u673a\u7684\u60c5\u51b5\uff0c\u5f53i\u53f7\u8863\u670d\u4e0d\u80fd\u88ab\u76f4\u63a5\u70d8\u5e72\u65f6\uff0c\u6211\u4eec\u9700\u8981\u7528```((clothes[i]-a*mid)%b==0?(clothes[i]-a*mid)/b:(clothes[i]-a*mid)/b+1;)```\u6b21\u70d8\u5e72\u673a\u8fdb\u884c\u70d8\u5e72\uff08\u5b9e\u9645\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u6211\u66f4\u63a8\u8350if-else\uff09\uff0c\u6700\u540e\u53ea\u9700\u770b\u70d8\u5e72\u673a\u4f7f\u7528\u603b\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8emid\u5373\u53ef\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u53c2\u8003\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#define int long long\nusing namespace std;\nint n,a,b,clothes[600006];\nbool check(int mid)\n{\n\tint tot=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(clothes[i]<=mid*a)continue;\n\t\telse \n\t\t{\n\t\t\t\n\t\t\tif((clothes[i]-mid*a)%b==0)tot+=(clothes[i]-mid*a)/b;\n\t\t\telse tot+=((clothes[i]-mid*a)/b+1);\n\t\t}\n\t}\n\treturn tot<=mid;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0);\n\tcin>>n>>a>>b;\n\tfor(int i=1;i<=n;i++)cin>>clothes[i];\n\tint l=0,r=1e9,mid;\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif(check(mid))r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tcout<<l<<endl;\n\treturn 0;\n} \n```\n\u559c\u6b22\u6211\u7684\u9898\u89e3\u522b\u5fd8\u4e86\u70b9\u4e2a\u8d5e\u54e6~",
        "postTime": 1563026810,
        "uid": 179600,
        "name": "shao0320",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "# \u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\uff08\u524d\u51e0\u4e2a\u90fd\u6ca1\u8fc7\u5ba1\uff09\u9898\u89e3\n\n\n[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1843)\n\n\n[\u672c\u849f\u84bb](https://www.luogu.org/space/show?uid=107215)\n\n\u8fd9\u9053\u9898\u6700\u6734\u7d20\u7684\u7801\u80fdA5\u4e2a\u70b9\n\n\u5982\u4e0b\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,tim,a[500002],nat,hon;\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&nat,&hon);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\t\t\n\t}\n\twhile(1)\n\t{\n\t\t++tim;\n\t\tsort(a+1,a+n+1);\t\t\n\t\ta[n]-=hon;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\ta[i]=a[i]-nat;\n\t\t}\n\t\tif(a[n]<=0&&a[n-1]<=0)\n\t\t{\n\t\t\tcout<<tim;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u6734\u7d20\u4ee3\u7801\u8fdb\u884c~~\u9b54\u6539~~\u4f18\u5316\n\n#####  _~~\u600e\u4e48\u8bf4\u5462\uff0c\u7b2c\u4e00\u6b21\u5bf9sort\u7684\u6548\u7387\u5931\u53bb\u4fe1\u5fc3~~_ \n~~\u4f60\u4ee5\u4e3a\u6211\u4f1a\u544a\u8bc9\u4f60\u8fd9\u4e2a\u9898\u6211\u662f\u641c\u7d22\u4e8c\u5206\u6807\u7b7e\u6765\u7684\u5374\u7528\u8d2a\u5fc3\u52a0\u6a21\u62df\u505a\u51fa\u6765\u7684\u5417\uff1f~~\n\u4e0b\u9762\u9644\u4e0aAK\u4ee3\u7801\uff08\u770b\u6ce8\u91ca\u98df\u7528\u6781\u4f73\uff09\n```cpp\n#include<iostream> //\u4e0d\u60f3\u7528printf\n#include<cstdio>//\u7528scanf\u4f1a\u6bd4cin\u5feb\u4e0d\u5c11\uff0c\u56e0\u4e3a 1 \u2264 N \u2264 500000\n#include<algorithm> //\u8981\u7528sort\u7684\n#include<cmath>//\u7528swap\u5199\u63d2\u5165\u6392\u5e8f\nusing namespace std; \nint n,tim,a[500002],nat,hon;//\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e0b\u53d8\u91cf\u4eec\nint main()\n{\n\tscanf(\"%d %d %d\",&n,&nat,&hon);//\u8f93\u8f93\u8f93\u5165\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&a[i]);\u8f93 ...\u8f93(n)\u5165\t\t\n\t}\n\tsort(a+1,a+n+1);//\u6392\u4e00\u6b21\u5c31\u597d\uff0c\u540e\u9762\u6392\u5e8f\u7b80\u5355\uff0c\u8fd9\u6b21\u8f83\u4e3a\u7279\u6b8a\u56e0\u4e3a\u76ee\u524d\u6570\u636e\u6ca1\u6709\u591a\u5c11\u7279\u70b9\n\twhile(1)//\u6807\u51c6\u6b7b\u5faa\u73af \n\t{\n\t\t++tim;//\u8fc7\u4e86\u4e00\u5929\t\t\n\t\ta[n]-=hon;//\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u628a\u6700\u6e7f\u7684\u8863\u670d\u70d8\u4e00\u4e0b\n\t\tfor(int i=n;i>=1;--i)\n\t\t{\n\t\t\tif(a[i]<a[i-1]) swap(a[i],a[i-1]);//\u63d2\u5165\u6392\u5e8f\uff0c\u7528sort\u7684\u8bdd\t\u4f1aTLE4\u4e2a\u70b9\u5de6\u53f3\n           \t\t\t\t\t\t\u56e0\u4e3a\u8fd9\u91cc\u53ea\u5bf9a[n]\u8fdb\u884c\u4e86-hon\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u6bd4\u4e00\u4e0ba[n]\u4e0e\u540e\u9762\u7684\u53d8\u91cf\u7684\u5927\u5c0f\uff0c\n         \t\t\t         \t\t\u56e0\u4e3aa[1]~a[n-1]\u90fd\u662f\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u63d2\u5165\u6392\u5e8f\u53ef\u4ee5\u8282\u7ea6\u5927\u6982n\u7684\u590d\u6742\u5ea6\uff08\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\uff09\u3002\n\t\t\telse break;//\u5982\u679c\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684a[n]>a[i-1]\u8bf4\u660e\u4e4b\u524d\u7684a[n]\u5df2\u7ecf\u5230\u4e86\u5408\u9002\u7684\u4f4d\u7f6e\uff0cbreak\u51fa\u6765\u5c31\u884c\u4e86\u3002\n\t\t}\n\t\tif(a[n]-tim*nat<=0&&a[n-1]-tim*nat<=0)\n        \t//\u8fd9\u91cc\u501f\u9274\u4e86@\u79df\u9165\u96e8 dalao\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u8bf4\u4e0d\u5fc5\u6bcf\u6b21\u7528o[n]\u7684\u590d\u6742\u5ea6\u5bf9\u6574\u4e2a\u6570\u7ec4\u6574\u4f53\u64cd\u4f5c\uff0c\n       \t\t \u800c\u662f\u7528\u81ea\u7136\u70d8\u5e72\u5ea6*\u65f6\u95f4\uff0c\u5728@\u79df\u9165\u96e8 dalao\u7684\u57fa\u7840\u4e0a\u518d\u6539\u4e00\u6539\uff0c\u5c31\u662f\u4e0d\u5fc5o[n]\u53bb\u68c0\u6d4b\u6bcf\u4e2a\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\n                 \u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u5e8f\uff0c\u90a3\u5c31\u53ea\u9700\u8981\u770ba[n]\u548ca[n-1]\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u56e0\u4e3aa[n]\u662f\u552f\u4e00\u70d8\u8fc7\u7684\uff0ca[n-1]\u53c8\u662f\u6ca1\u88ab\u70d8\u8fc7\u7684\u6700\u5927\u503c\uff08\u56e0\u4e3a\u4e00\u5f00\u59cb\u5c31\u662f\u6709\u5e8f\u7684\uff09\n\t\t{\n\t\t\tcout<<tim;//\u6109\u5feb\u8f93\u51fa\n\t\t\treturn 0;//\u597d\u4e60\u60ef\n\t\t}\n\t}\n\treturn 0;//\u5176\u5b9e\u8fd9\u53e5\u6839\u672c\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u53ea\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\n}\n```\n\nPS\uff1a\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u590d\u5236\uff08\u624b\u52a8\u6ed1\u7a3d\uff09\uff0c\u8fd8\u6709\uff0cswap\uff08x\uff0cy\uff09\u662f\u4ea4\u6362\u4f4d\u7f6e\n\n1\uff1a\u8981\u6ce8\u610f\u6392\u5e8f\u7684\u65f6\u5019\u4e0d\u53ef\u4ee5\u8fc7\u4e8e\u4f9d\u8d56sort\uff0c\u8981\u6839\u636e\u9898\u76ee\u6765\u9009\u62e9\u9002\u5408\u7684\u6392\u5e8f\u65b9\u6cd5\u3002\n\n2:\u5bf9\u6570\u7ec4\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6574\u4f53\u64cd\u4f5c\u7684\u65f6\u5019\u8981\u770b\u770b\u6709\u6ca1\u6709\u66f4\u5feb\u66f4\u597d\u7684\u65b9\u5f0f\uff08\u6bd5\u7adfo\uff08n\uff09\u4e0d\u662f\u8bf4\u7740\u73a9\u7684\n\n3:\u4e0d\u8981\u88ab\u9898\u76ee\u6807\u7b7e\u6240\u8ff7\u60d1\uff08~~\u8fd9\u5c31\u662f\u4f60\u4e0d\u4f1a\u5199\u4e8c\u5206\u7684\u7406\u7531\uff1f~~\uff09\n\n4\uff1a\u5b9a\u4e49\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u4e0e\u5934\u6587\u4ef6\u5305\u542b\u7684\u51fd\u6570\u540d\u91cd\u590d\uff01\uff08\u4f1a\u5bfc\u81f4\u9690\u79d8\u7684\u9519\u8bef\uff09\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7528tim\u4e0d\u7528time\uff01",
        "postTime": 1563415833,
        "uid": 107215,
        "name": "\u51db\u8f66\u6f02\u79fb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "# \u5199\u5728\u9898\u89e3\u4e4b\u524d\n###### \u8fd9\u9898\u7528\u7684\u7384\u5b66\u6570\u5b66\u65b9\u6cd5\n###### \u540c\u6837\u7384\u5b66\u7684\u590d\u6742\u5ea6O(n)\n# \u5907\u6ce8\n# \u672c\u9898\u662f\u6211\u68212011\u5e74\u67d0\u6b21\u8003\u8bd5\u539f\u9898\n# \u7ed3\u679c\u6d1b\u8c37\u7b2c\u4e00\u6b21\u63d0\u4ea4\u57282013\u5e746\u6708\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint t[500001];//\u6876 \nint main()\n{\n\t/*freopen(\"dry.in\",\"r\",stdin);\n\tfreopen(\"dry.out\",\"w\",stdout);*/\n    //\u8003\u8bd5\u4e0d\u5f97\u4e0d\u5199\n\tint n,a,b,least=0,maxn=0;//least\u8868\u793a\u81ea\u7136\u70d8\u5e72\u7684\u6c34\u5206\uff0cmaxn\u4e3a\u76ee\u524d\u6700\u5927\u7684\u6c34\u5206 \n\tcin>>n>>a>>b;//\u8f93\u5165\u540c\u9898\u9762 \n\tfor(int i=0;i<n;++i)\n\t{\n\t\tint k;\n\t\tcin>>k;\n\t\tt[k]++;\n\t\tif(k>maxn)maxn=k;//\u6c42\u6700\u5927\u503c \n\t}\n\tint ans=0;//\u65f6\u95f4 \n\twhile(least<maxn)//\u5982\u679c\u81ea\u7136\u6652\u5e72\u7684\u6c34\u5206\u4f4e\u4e8e\u6700\u5927\u7684\u6c34\u5206\uff0c\u8bf4\u660e\u8fd8\u6709\u6ca1\u6652\u5e72\u7684\uff0c\u53cd\u4e4b\u8bf4\u660e\u5168\u90e8\u6652\u5e72 \n\t{\n\t\tleast+=a;//\u81ea\u7136\u6652\u5e72\u7684\u6c34\u5206\u589e\u52a0 \n\t\tt[maxn]--;//\u8d2a\u5fc3\uff0c\u6700\u5927\u6e7f\u5ea6\u7684\u51cf\u6389\u70d8\u5e72\u7684\u6c34\u5206 \n\t\tif(maxn-b>0)t[maxn-b]++;//\u9632\u6b62\u6570\u7ec4\u8d8a\u754c \n\t\twhile(!t[maxn])maxn--;//\u66f4\u65b0\u6700\u5927\u503c\uff0c\u56e0\u4e3a\u662f\u6876\uff0c\u6240\u4ee5\u76f4\u63a5\u7ebf\u6027\u66f4\u65b0 \n\t\tans++;//\u65f6\u95f4\u52a01 \n\t}\n\tcout<<ans;//\u8f93\u51fa \n}\n```",
        "postTime": 1538372108,
        "uid": 79926,
        "name": "chenlingxi",
        "ccfLevel": 7,
        "title": "\u8003\u9898\u9898\u89e3\uff08\u610f\u5916\u53d1\u73b0\u662f\u6d1b\u8c37\u539f\u9898\uff09"
    },
    {
        "content": "# \u8fd9\u91cc\u6211\u7528\u4e86\u9664\u4e86\u4e8c\u5206\u7684\u53e6\u4e00\u79cd\u5199\u6cd5:\n\n\u8fd9\u91cc\u6211\u662f\u7528\u4f18\u5148\u961f\u5217\u6765\u5b58\u5404\u4e2a\u6e7f\u5ea6\u7684\uff0c\u7528\u4e00\u4e2a\u7d2f\u52a0\u5668ant\u6765\u5b58\u6bcf\u4e2a\u65f6\u95f4\u81ea\u7136\u70d8\u5e72\u7684\u603b\u6e7f\u5ea6\uff0c\u4f46\u662f\u4e0d\u80fd\u5148\u53bb\u51cf\u961f\u5217\u91cc\u7684\u6e7f\u5ea6\uff0c\u6211\u4eec\u7528\u6765\u5224\u65ad\uff0c\u6bcf\u6b21\u5224\u65ad\u524d\u628a\u4f18\u5148\u961f\u5217\u91cc\u7684\u6700\u5934\u4e0a\u4e00\u4e2a\u53d6\u51fa\u6765\uff0c\u7528\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cfans\u50a8\u5b58\uff0c\u7528\u70d8\u5e72\u673a\u80fd\u70d8\u5e72\u7684\u6e7f\u5ea6\u53bb\u51cf\u53bbans\uff0c\u5728\u653e\u56de\u53bb\uff0c\uff08\u8fd9\u91cc\u4e00\u5b9a\u8981\u7528\u653e\u8fdb\u53bb\u4e4b\u540e\u5728\u53d6\u51fa\u6765\u7684ans\uff09\u5728\u53d6\u6700\u5934\u4e0a\u7684\uff0c\u53bb\u5224\u65adif\uff08ans<=ant\uff09\u5c31\u8f93\u51fa\u8fd9\u662f\u7b2c\u591a\u5c11\u65f6\u95f4\uff0c\u7136\u540ereturn 0\uff1b\n\n\n```cpp\n#include<bits/stdc++.h>\n//#pragma GCC optimize(2)//O2\u4f18\u5316\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\nconst int N=500000+10;\nll n,a,b,x;\nll ans,ant,num;\npriority_queue<int> q;\nll read()\n{\n    ll res=0,chr=getchar(),st=1;\n    if(chr=='-')\n    {\n        st=-1;\n    }\n    while(!isdigit(chr)&&chr!=EOF)\n    {\n    \tchr=getchar();\n\t}\n    while(isdigit(chr))\n    {\n        res=(res*10)+(chr-'0');\n        chr=getchar();\n    }\n    return res*st;\n}\nint main()\n{\n\tn=read();\n\ta=read();\n\tb=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx=read();\n\t\tq.push(x);\n\t}\n\twhile(1)\n\t{\n\t\tant+=a;//\u81ea\u7136\u5e72\u7684\u603b\u6e7f\u5ea6\n\t\tnum++;//\u65f6\u95f4\n\t\tans=q.top();//\u53d6\u6700\u5934\u4e0a\u7684\n\t\tq.pop();\n\t\tans-=b;//\u51cf\u53bb\u70d8\u5e72\u673a\u6e7f\u5ea6\n\t\tq.push(ans);//\u653e\u8fdb\u53bb\n\t\tans=q.top();//\u5728\u53d6\u51fa\u6765,\u8fd9\u91cc\u4e0d\u4e00\u5b9a\u662f\u7528\u4e00\u4e2a\u6570\n\t\tif(ans<=ant)\u6ee1\u8db3\u6700\u5927\u7684\u5c31\u8f93\u51fa,\u7ed3\u675f\n\t\t{\n\t\t\tcout<<num;\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1565701878,
        "uid": 156734,
        "name": "dfydada\u26a1\u26a1\u26a1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u4e0d\u96be\u770b\u51fa \u6700\u6613\u7684\u89e3\u6cd5\u5c31\u662f\u8d2a\u5fc3\u9898\u6ca1\u9519\uff01\uff01\u5206\u4eab\u4e00\u4e0b\u6211\u662f\u600e\u4e48\u601d\u8003\u7684\u3002\n\n\u8d2a\u5fc3\u7684\u601d\u8def\u5c31\u662f\u6267\u884c\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u6bcf\u4e00\u6b21\u5faa\u73af\u7ed9\u6240\u6709\u8863\u670d\u7684\u6e7f\u5ea6\u51cf\u53bb$A$\uff08\u81ea\u7136\u6d88\u8017\u7684\uff09\uff0c\u51cf\u8fc7\u540e\u627e\u51fa\u91cc\u9762\u6e7f\u5ea6\u6700\u5927\u7684\u7ed9\u5b83\u7528\u70d8\u5e72\u673a\u51cf\u53bb$B$\u70b9\u6e7f\u5ea6\u3002\u51cf\u53bb\u540e\u518d\u627e\u51fa\u91cc\u9762\u6e7f\u5ea6\u6700\u5927\u7684\uff0c\u5982\u679c**\u6e7f\u5ea6\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8e$0$** \uff0c\u8bf4\u660e\u6240\u6709\u8863\u670d\u90fd\u5e72\u4e86\uff0c\u6b64\u65f6\u9000\u51fa\u5faa\u73af\uff0c\u8f93\u51fa\u5faa\u73af\u6b21\u6570\u3002\n\n\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u5b58\u5728\u8d85\u65f6\u7684\u95ee\u9898\uff1a\n1. \u6bcf\u6b21\u5faa\u73af\u91cc\u9762\u8981\u5faa\u73af$n$\u6b21\u7ed9\u8863\u670d\u51cf\u53bb\u81ea\u7136\u6d88\u8017\u7684\u6e7f\u5ea6\n1. \u6bcf\u6b21\u5faa\u73af\u91cc\u53c8\u8981\u5faa\u73af\u4e24\u6b21\u627e\u4e24\u6b21\u6700\u5927\u503c\n\n\n\u9488\u5bf9\u8fd9\u4e24\u4e2a\u95ee\u9898\u6211\u4eec\u60f3\u51fa\u5bf9\u5e94\u7684\u4f18\u5316\u65b9\u6cd5\uff1a\n1. \u5bf9\u4e8e\u7b2c1\u4e2a\u95ee\u9898\uff0c\u65e2\u7136\u6240\u6709\u8863\u670d\u90fd\u4f1a\u51cf\u53bb\u4e00\u4e2a\u76f8\u5e94\u7684\u6e7f\u5ea6\u518d\u8fdb\u884c\u4e4b\u540e\u7684\u6bd4\u8f83\uff0c\u6211\u4eec\u4e0d\u59a8\u4e0d\u6d6a\u8d39\u65f6\u95f4\u53bb\u51cf\uff0c\u4f9d\u65e7\u4e0d\u5f71\u54cd\u6bd4\u8f83\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6570\u5217${5,7,3,1}$\uff0c\u6700\u5927\u503c\u662f\u7b2c\u4e8c\u4e2a\u5143\u7d20$7$\uff0c\u628a\u6240\u6709\u5143\u7d20\u90fd\u51cf\u53bb2\uff0c\u6570\u5217\u53d8\u4e3a${3,5,1,-1}$\uff0c\u6700\u5927\u503c\u4f9d\u65e7\u662f\u7b2c\u4e8c\u4e2a\u5143\u7d20\u3002\u90a3\u4e48\u9488\u5bf9\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5e72\u8106\u5c31\u4e0d\u4e00\u4e2a\u4e00\u4e2a\u53bb\u51cf\uff0c\u4f9d\u65e7\u80fd\u627e\u5230\u6211\u4eec\u8981\u53bb\u5bfb\u627e\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u7ed9\u5b83\u7528\u70d8\u5e72\u673a\uff0c\u7ed9\u5b83\u51cf\u53bb$B$\u3002\u56e0\u4e3a\u6ca1\u6709\u7ed9\u6bcf\u4e2a\u5143\u7d20\u51cf\u53bb\u81ea\u7136\u6e7f\u5ea6\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u6700\u540e\u627e\u5230\u7684\u6700\u5927\u6e7f\u5ea6\uff08\u4e0a\u9762\u7684\u52a0\u7c97\u90e8\u5206\uff09\u5728\u51cf\u53bb\u5e94\u5f53\u51cf\u53bb\u7684\u81ea\u7136\u6e7f\u5ea6\u4e4b\u540e\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\u5373\u53ef\u51b3\u5b9a\u662f\u5426\u8df3\u51fa\u5faa\u73af\u3002\n1. \u5bf9\u4e8e\u7b2c2\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u91c7\u7528\u5927\u6839\u5806\uff08C++ STL\u91cc\u5185\u7f6epriority_queue\uff09\uff0c\u8bfb\u5165\u6570\u636e\u65f6\u628a\u6240\u6709\u5143\u7d20\u653e\u8fdb\u5806\u4e2d\uff0c\u7136\u540e\u5faa\u73af\u65f6\u53ef\u4ee5\u76f4\u63a5\u53d6\u51fa\u6700\u5927\u503c\uff0c\u53d6\u51fa\u6700\u5927\u503c\u51cf\u53bb$B$\uff0c\u518d\u653e\u56de\u5806\u4e2d\uff0c\u7136\u540e\u518d\u68c0\u67e5\u4e00\u4e0b _\u5f53\u524d\u7684\u6700\u5927\u503c\u5728\u51cf\u53bb\u5e94\u5f53\u51cf\u53bb\u7684\u81ea\u7136\u6e7f\u5ea6\u4e4b\u540e\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\u5373\u53ef\u51b3\u5b9a\u662f\u5426\u8df3\u51fa\u5faa\u73af_ \uff08\u89c1\u4f18\u5316\u65b9\u6cd5\u7b2c1\u6761\uff09\u3002\n\n\u4e0d\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u5e26\u6570\u636e\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\npriority_queue<int> pq; //\u58f0\u660e\u4e00\u4e2a\u5927\u6839\u5806\n\n//n a b\u89c1\u9898\u76ee\u63cf\u8ff0\uff0ccnt\u662f\u5faa\u73af\u53d8\u91cf\nint n, a, b, cnt; \n\nint main()\n{\n    cin >> n >> a >> b;\n    for (int i = 1; i <= n; i++) {\n    \tint x;\t\t//\u8f93\u5165\u8fd9\u4ef6\u8863\u670d\u7684\u6e7f\u5ea6\n        cin >> x;\n        pq.push(x);\t//\u628a\u6e7f\u5ea6\u503c\u653e\u5165\u5927\u6839\u5806\u4e2d\n    }\n    while (1) {\n        cnt++;\t\t//\u6267\u884c\u5929\u6570\uff08\u5faa\u73af\u53d8\u91cf\uff09\n        int x = pq.top();\t//\u53d6\u51fa\u5f53\u524d\u6700\u5927\u503c\uff08\u5806\u9876\uff09\u8863\u670d\u7684\u6e7f\u5ea6\n        pq.pop();\n        x -= b;\t\t//\u51cf\u53bbb\u4e4b\u540e\u518d\u653e\u56de\u5806\u4e2d\n        pq.push(x);\n        if (pq.top() - cnt * a <= 0) { //\u5224\u65ad\u51cf\u53bb\u5e94\u5f53\u51cf\u53bb\u7684\u81ea\u7136\u6e7f\u5ea6\u540e\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u5982\u679c\u662f\u5219\u9000\u51fa\u7a0b\u5e8f\n            cout << cnt << endl;\n            return 0;\n        }\n    }\n}\n```\n\n\u672c\u4eba\u849f\u84bb\u4e00\u679a\uff0c\u671b\u5927\u4f6c\u6279\u8bc4\u6307\u6b63\uff1a\uff09\n",
        "postTime": 1563595403,
        "uid": 151117,
        "name": "AnicoderAndy",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u6807\u7b7e\u8bf4\u662f\u5206\u6cbb\uff0c\u5f53\u7136\u7528\u4e8c\u5206\u7b54\u6848\u4e5f\u53ef\u4ee5\u505a\uff0c\u4f46\u4e2a\u4eba\u89c9\u5f97\u7528\u8d2a\u5fc3\u66f4\u5bb9\u6613\u7406\u89e3\n\n\u8d2a\u5fc3\u7b56\u7565\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6bcf\u4e00\u6b21\u70d8\u5e72\u6700\u6f6e\u6e7f\u7684\u90a3\u4ef6\u8863\u670d\n\n\u6240\u4ee5\u5c31\u5b58\u5728\u4e00\u4e2a\u6392\u5e8f\u7684\u95ee\u9898\n\n\u7b2c\u4e00\u6b21\u6392\u5e8f\u662f\u5b8c\u5168\u6392\u5e8f\uff0c\u56e0\u4e3a\u6ca1\u6709\u6ce8\u660e\u8f93\u5165\u6570\u636e\u662f\u5426\u6709\u5e8f\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5728O\uff08nlogn\uff09\u5de6\u53f3\uff08\u8fd9\u91cc\u7528\u7684\u662fsort\uff09\n\n\u7136\u540e\u6bcf\u4e00\u6b21\u70d8\u5e72\u5b8c\u540e\u8981\u628a\u70d8\u5e72\u7684\u90a3\u4ef6\u653e\u5165\u961f\u5217\uff0c\u8fd9\u65f6\u7528\u63d2\u5165\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\uff09\n\n\u6709\u7684\u7ae5\u978b\u60f3\u6bcf\u4e00\u6b21\u53bb\u7528\u81ea\u7136\u70d8\u5e72\u91cf\u51cf\u6bcf\u4e00\u4ef6\u8863\u670d\uff0c\u90a3\u4e48\u8fd9\u6837\u53c8\u52a0\u4e86O\uff08n\uff09\n\n\u8fd9\u91cc\u6709\u4e00\u624b\u64cd\u4f5c\uff1a\u56e0\u4e3a\u961f\u5217\u662f\u6709\u5e8f\u7684\uff08\u4ece\u5927\u5230\u5c0f\uff09\uff0c\u65f6\u95f4\u662f\u8bb0\u5f55\u4e86\u7684\uff0c\u5c31\u53ef\u4ee5\u6bcf\u4e00\u6b21\u5faa\u73af\u65f6\uff0c\n\n\u7528\u65f6\u95f4t\\*\u5355\u4f4d\u65f6\u95f4\u81ea\u7136\u70d8\u5e72\u91cfa\uff0c\u548c\u6700\u6f6e\u6e7f\u7684\u90a3\u4ef6\u8863\u670d\u6bd4\u8f83\n\n\u82e5\u5927\u4e8e\u7b49\u4e8e\uff0c\u8bf4\u660e\u6bcf\u4e00\u4ef6\u8863\u670d\u90fd\u53ef\u4ee5\u88ab\u70d8\u5e72\uff0c\u76f4\u63a5break\u51fa\u6765\uff0c\u5426\u5219\u5c31\u7ee7\u7eed\u5faa\u73af\n\n\n\n\n\n    \n```cpp\n0. #include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,a,b,t=0,p;\nint r[500001];\nint i,j;\nint cmp(int a,int b)\n{\n    return a>b;\n}\nint main()\n{\n    scanf(\"%d %d %d\",&n,&a,&b);\n    for (i=1;i<=n;i++) scanf(\"%d\",&r[i]);\n    sort(r+1,r+n+1,cmp);//\u4ece\u5927\u5230\u5c0f\u6392\u961f\n    while(1)\n    {\n        if (r[1]<=t*a) break;\n        r[1]-=b;\n        p=r[1];\n        for (j=2;r[j]>p&&j<=n;j++)\n           r[j-1]=r[j];\n        r[j-1]=p;\n        t++;\n    }\n    printf(\"%d\",t);\n    return 0;\n}\n```",
        "postTime": 1498905918,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\nusing namespace std;\nint n,a,b;\nint w[500001];\nint l,r,mid,sum,ans,maxx;\nbool add(int s)//0\u4ee3\u8868\u5047,1\u4ee3\u8868\u771f\uff1b\n{\n    int k=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(w[i]<=a*s)\n            continue;\n        int y=w[i]-a*s;//\u6652\u5e72a\u540e\u5269\u7684\u6c34\u5206\uff1b\n        k+=(y+(b-1))/b;//\u7b97\u51fa\u8fd8\u8981\u70d8\u5e72\u591a\u5c11\u6b21\uff0c\u662f\u5426\u5728s\u7684\u8303\u56f4\u5185\uff0c\u82e5\u662f\u5219\uff0c\u82e5\u4e0d\u662f\u5219\uff1b\n        }\n        return (k<=s?1:0);//\u76f8\u5f53\u4e8eif(k<=s)\u5219;\u8f93\u51fa\u771f\u53731\uff1b\u5426\u5219\u8f93\u51fa\u5047\u53730\uff1b\n        //s\u5c31\u662fmid;\n    }\nint main()\n{\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&w[i]);\n    l=1;r=9999999;\n    while(l<=r)\n    {\n        mid=(l+r)/2;\n        if(add(mid))\n        {\n            r=mid-1;\n            ans=mid;\n        }\n        else\n        l=mid+1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1495453419,
        "uid": 38457,
        "name": "\u6b64\u7965\u975e\u5f7c\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "**\u65e2\u7136\u9898\u89e3\u533a\u90fd\u662f\u7528STL\u81ea\u5e26\u7684\u4f18\u5148\u961f\u5217\u5199\u7684\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u4e2a\u624b\u5199\u7684\u5806\u5427**\n\n\u57fa\u672c\u601d\u8def\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6bcf\u6b21\u4ece\u5806\u9876\u53d6\u51fa\u6e7f\u5ea6\u6700\u5927\u7684\u90a3\u4ef6\u8863\u670d\u7528\u70d8\u8863\u673a\u5439\uff0c\u76f4\u5230\u6e7f\u5ea6\u6700\u5927\u7684\u90a3\u4ef6\u8863\u670d\u80fd\u591f\u81ea\u7136\u5439\u5e72\u5c31\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f<=time * A\u3002\n\n\u9644\u4e0a\u4ee3\u7801:\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\nint n, a, b, lenth, timer, x;\nint s[1000010];\nvoid swap(int x, int y){//\u624b\u5199\u7684swap\u51fd\u6570\n    int save = s[x];\n    s[x] = s[y];\n    s[y] = save;\n}\nvoid up(int i){//\u4ecei\u8282\u70b9\u5411\u4e0a\u66f4\u65b0\u7684\u51fd\u6570\n    while(i / 2){//\u5982\u679c\u7236\u8282\u70b9\u4e0d\u4e3a\u7a7a\n        if(s[i / 2] < s[i]){//\u5982\u679c\u7236\u8282\u70b9\u5c0f\u4e8e\u5b50\u8282\u70b9\uff0c\u5c31\u4ea4\u6362\n            swap(i, i / 2);\n            i = i / 2;\n        }\n        else    break;\n    }\n}\nvoid down(int i){//\u4ecei\u8282\u70b9\u5411\u4e0b\u66f4\u65b0\u7684\u51fd\u6570\n    while(i * 2 <= lenth){//\u5982\u679c\u5b50\u8282\u70b9\u8865\u4f4d\u7a7a\n        int tmp = i * 2;//\u9ed8\u8ba4\u5de6\u513f\u5b50\u66f4\u5c0f\n        if(tmp + 1 <= lenth && s[tmp + 1] > s[tmp]) tmp++;//\u5982\u679c\u53f3\u513f\u5b50\u4e0d\u4e3a\u7a7a\u5e76\u4e14\u53f3\u513f\u5b50\u5c0f\u4e8e\u5de6\u513f\u5b50\uff0c\u5c31\u5c06\u7236\u8282\u70b9\u4e0e\u53f3\u513f\u5b50\u8fdb\u884c\u6bd4\u8f83\n        if(s[i] < s[tmp]){//\u5982\u679c\u7236\u8282\u70b9\u5c0f\u4e8e\u513f\u5b50\u8282\u70b9\n            swap(i, tmp);\n            i = tmp;\n        }\n        else    break;\n    }\n}\nvoid push(int x){//\u5165\u5806\u7684\u51fd\u6570\n    s[++ lenth] = x;//\u52a0\u5165\u961f\u5c3e\n    up(lenth);//\u8fdb\u884c\u5411\u4e0a\u66f4\u65b0\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i = 1; i <= n; i ++){\n        scanf(\"%d\", &x);\n        push(x);//\u5165\u5806\n    }\n    while(s[1] > timer * a){//\u5982\u679c\u5806\u9876\u6e7f\u5ea6\u6700\u5927\u7684\u90a3\u4ef6\u8863\u670d\u65e0\u6cd5\u88ab\u81ea\u7136\u70d8\u5e72\uff0c\u5c31\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb\n        timer ++;//\u5929\u6570++\n        s[1] -= b;//\u5c06\u5806\u9876\u6e7f\u5ea6\u6700\u5927\u7684\u90a3\u4ef6\u8863\u670d\u70d8\u5e72\n        down(1);//\u56e0\u4e3a\u5806\u9876\u88ab\u66f4\u6539\u4e86\uff0c\u6240\u4ee5\u5c06\u5806\u9876\u5411\u4e0b\u66f4\u65b0\n    }\n    printf(\"%d\", timer);//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```\n",
        "postTime": 1573775487,
        "uid": 222635,
        "name": "_Andrea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\uff0d\uff0d\u8d2a\u5fc3\u3002\u56e0\u4e3a\u6bcf\u6b21\u5904\u7406\u7684\u65f6\u5019\u6211\u4eec\u90fd\u5904\u7406\u6700\u4e0d\u5e72\u7684\u90a3\u4e00\u4ef6\u3002\u800c\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\u6211\u4eec\u62ff\u5806\u6765\u7ef4\u62a4(stl\u76f4\u63a5\u62ff\u4f18\u5148\u961f\u5217\u5c31\u597d)\uff0c\u6bcf\u6b21\u5904\u7406\u6700\u6e7f\u2642\u7684\u3002\u8fd9\u4e2a\u91cc\u9762\u6709\u4e2a\u5c0f\u7ec6\u8282\u5c31\u662f\u3002\u5728\u5904\u7406\u7684\u65f6\u5019\u8981\u6ce8\u610f\u3002\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u84b8\u5e72\u673a\u7684\u6e7f\u5ea6\u5c31\u597d\u3002\u800c\u6574\u4e2a\u81ea\u7136\u84b8\u5e72\u7684\u6e7f\u5ea6\u6211\u4eec\u76f4\u63a5\u7528\u65f6\u95f4\uff0aA\u3002\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u4e0d\u662f\u84b8\u5e72\u7684\u3002\u3002\u3002\u5c31\u662f\u8fd9\u4e2a\u5730\u65b9\u3002\u6ca1\u6709\u5fc5\u8981\u5904\u7406\u7684\u5c31\u4e0d\u7528\u5904\u7406\u3002\n#### \u653e\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<int> q;int n,a,b,k,t;\nint main(){\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&k),q.push(k);\n    while(!q.empty()){\n\t\tk=q.top();\n\t\tif(k<=t*a) break;\n\t\tq.pop();k-=b;q.push(k);t++;\n    }\n    return printf(\"%d\\n\",t);0;\n}\n```\n",
        "postTime": 1551104768,
        "uid": 112109,
        "name": "Alphaban",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u7bc7\u6b63\u513f\u516b\u7ecf\u7684\u9898\u89e3\n---\n\n**\u5148\u770b\u9898\u76ee\u63cf\u8ff0**\n\n**\u53d1\u73b0\u672c\u9898\u4e3b\u8981\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898**\n\n```\n\u7ed9\u51fa\u4e00\u4e2a\u6570\u5217,\u5728\u5355\u4f4d\u4e00\u7684\u65f6\u95f4\u5185\u53ef\u540c\u65f6\u505a\u4ee5\u4e0b\u64cd\u4f5c\n\n\u00b7\u5bf9\u6240\u6709\u7684\u6570\u51cfA\n\u00b7\u5bf9\u6307\u5b9a\u6570\u51cfB\n\n\u6c42\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u4f7f\u8fd9\u4e2a\u6570\u5217\u7684\u6240\u6709\u6570\u5747<=0\n```\n**\u4e0d\u96be\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u8d2a\u5fc3\u9898**\n\n**\u6bcf\u6b21\u64cd\u4f5c\u53ea\u9700\u5c06\u4e0a\u4e00\u6b21\u64cd\u4f5c\u540e\u4ea7\u751f\u7684\u6700\u5927\u7684\u6570\u51cfB,\u5176\u4f59\u6570\u5747\u51cfA\u5373\u53ef**\n\n**\u7136\u800c\u8fd9\u5e76\u4e0d\u662f\u4e00\u9053\u6a21\u62df\u9898,\u5982\u679c\u53ea\u7b80\u5355\u5730\u5730\u6a21\u62df\u4e0a\u8ff0\u7b56\u7565\u662f\u4e00\u5b9a\u4f1aTLE\u7684**\n\n**\u7ecf\u8fc7\u518d\u6b21\u8bfb\u9898\u53d1\u73b0**\n\n```\n\u00b7\u5bf9\u6240\u6709\u7684\u6570\u51cfA\n```\n\n**\u6b64\u64cd\u4f5c\u64cd\u4f5c\u662f\u6bcf\u4e00\u6b21\u90fd\u4f1a\u5728\u6bcf\u4e00\u4e2a\u6570\u4e0a\u8fdb\u884c\u7684\u5355\u8c03\u64cd\u4f5c**\n\n**\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u6b64\u64cd\u4f5c\u7edf\u4e00\u5b58\u5728\u4e00\u4e2a\u53d8\u91cf\u4e0a\u4f9b\u6240\u6709\u6570\u4f7f\u7528**\n\n~~\u987a\u4fbf\u7528\u4e00\u4e0b\u5806\u4f18\u5316~~\n\n**\u5206\u6790\u5b8c\u6210,\u5f00\u59cb\u6253\u4ee3\u7801**\n\n----\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\npriority_queue<int> a; //\u672c\u9898\u9700\u8981\u5927\u6839\u5806,\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u5927\u6839\u5806\nint t=0; \nint k,n,A,B,m;\nint sum=0;\nint main(){\n    \n    cin>>n>>A>>B;\n    for(int i=1;i<=n;i++){\n        cin>>m;\n        a.push(m);\n    }\n    while(true){\n        k=a.top();\n        if(k-sum<=0)\n        {\n            cout<<t;\n            return 0;\n        }\n        a.pop();\n        sum+=A;\n        a.push(k-B);\n        t++;\n    }\n    return 0;\n}\n```\n---\n_\u534e\u4e3d\u7684\u7ed3\u5c3e_ \n",
        "postTime": 1556695195,
        "uid": 91729,
        "name": "XJack",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "[P1843\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1843)\n\n\u6b64\u9898\u6211\u7528\u7684\u662f**\u8d2a\u5fc3+\u4f18\u5148\u961f\u5217**\n\n**\u8d2a\u5fc3\uff1a**\u7531\u4e8e\u70d8\u5e72\u673a\u53ea\u6709\u4e00\u53f0\uff0c\u6240\u6709\u6bcf\u6b21\u5c06\u6700\u5927\u6e7f\u5ea6\u7684\u8863\u670d\u4ea4\u7ed9\u70d8\u5e72\u673a\uff0c\u5269\u4e0b\u8863\u7269\u81ea\u7136\u98ce\u5e72\u5c31\u884c\u3002\n\n**\u4f18\u5148\u961f\u5217\uff08\u5927\u9876\u5806\uff09:**\u5c06\u6bcf\u4e2a\u9636\u6bb5\u7684\u6700\u5927\u6e7f\u5ea6\u653e\u5728\u961f\u9876\u3002\n\n\u601d\u8def\u86ee\u7b80\u5355\uff0c\u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u89e3\u91ca~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint N, A, B, ans, n;\npriority_queue<int> q;//\u5efa\u7acb\u5927\u9876\u5806\u961f\u5217\nint main()\n{\n\twhile (cin >> N >> A >> B)\n\t{\n\t\twhile (!q.empty()) q.pop();\n\t\tfor (int i = 1; i <= N; i++)\n\t\t\tcin >> ans, q.push(ans);//\u5c06\u6bcf\u4ef6\u8863\u670d\u7684\u6e7f\u5ea6\u538b\u5165\u961f\u5217\n\t\tn = ans = 0;//\u4e4b\u540e\u7684n\u8868\u793a\u6700\u5c11\u65f6\u95f4\uff0cans\u8868\u793a\u73b0\u5728\u8fd9\u4e2a\u9636\u6bb5\u4e4b\u524d\u5df2\u7ecf\u8fdb\u884c\u4e86\"\u81ea\u7136\u98ce\u5e72\"\u7684\u603b\u4ee3\u4ef7\uff08\u5373A\u7684\u500d\u6570\uff09\n\t\tint x = q.top();//\u5148\u53d6\u51fa\u961f\u9876\uff0c\u5bf9\u4e8e\u4e0d\u9700\u8981\u7528\u70d8\u5e72\u673a\u7684\u60c5\u51b5\u505a\u7279\u5224\u3002\u4e0d\u8981\u52a0q.pop()\uff0c\u4e0d\u7136\u5728\u4e0b\u9762\u7684else\u4f1a\u5c11\u4e00\u4e2a\u5143\u7d20\n\t\tif (x <= A)//\u5982\u679c\u6700\u5927\u6e7f\u5ea6\u7684\u8863\u670d\u4ecd\u53ef\u4ee5\u81ea\u7136\u98ce\u5e72\u800c\u4e0d\u9700\u8981\u70d8\u5e72\u673a\uff0c\u5219\u8f93\u51fa\u65f6\u95f4\"1\"\n\t\t\tcout << \"1\" << endl;\n\t\telse//\u4e0d\u7136\u5c31\u8981\u98ce\u5e72\u673a\u4e86\n\t\t{\n\t\t\twhile (!q.empty())\n\t\t\t{\n\t\t\t\tx = q.top();//\u53d6\u6bcf\u4e2a\u9636\u6bb5\u7684\u6700\u5927\u6e7f\u5ea6\n\t\t\t\tq.pop();\n\t\t\t\tif (x <= ans)//\u5982\u679c\u5f53\u524d\u7684\u6700\u5927\u6e7f\u5ea6\u5728\u8fd9\u4e4b\u524d\u5c31\u5df2\u7ecf\u5c0f\u4e8e\u7b49\u4e8e\u4e86\u4e4b\u524d\u6240\u81ea\u7136\u98ce\u5e72\u7684\u603b\u548c\uff0c\u5219\u8bf4\u660e\u6b64\u65f6\u6240\u6709\u8863\u7269\u90fd\u5df2\u7ecf\u5e72\u4e86\n\t\t\t\t\tbreak;\n\t\t\t\tq.push(x - B), ans += A, n++;//\u6700\u5927\u6e7f\u5ea6x\u7528\u98ce\u5e72\u673a\u98ce\u5e72\u4e86B\uff1b\"\u81ea\u7136\u98ce\u5e72\"\u603b\u4ee3\u4ef7ans+=A\uff0c\u6700\u5c0f\u65f6\u95f4++\n\t\t\t}\n\t\t\tcout << n << endl;\n\t\t}\n\t}\n}\n```",
        "postTime": 1550069251,
        "uid": 178665,
        "name": "\u5927\u5934\u51b2\u950b\u8f66\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u7b54\u6848\u7684\u9898\u3002\n```\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint n,a,b,k[500001],l,r,mid,ans,m,ks,j[500001];\nint kuai(int m)\n{\n    \n    ks=m;   // 0 no   1 yes\n    for(int i=1;i<=n;i++)\n    {\n        j[i]=k[i]-a*m;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(j[i]>=0)\n        {\n            ks=ks-ceil(j[i]*1.0/b);\n            \n        }\n        \n        if(ks<0)\n        return 0;\n    }\n\n    return 1;\n\n    \n    \n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&k[i]);\n    }\n\n    sort(k+1,k+1+n);\n    l=k[1];\n    r=k[n];\n    while(l<=r)\n    {\n        mid=(l+(r-l)/2);\n        if(kuai(mid)==0)\n        {\n            l=mid+1;\n        }\n        else\n        {\n            r=mid-1; \n            ans=mid;\n        }\n        \n    }\n    printf(\"%d\",ans);\n    return 0;\n    \n} \n```\n\u4e8c\u5206\u7684\u662f\u5929\u6570\uff0c\u8981\u6ce8\u610f\n1 \u4e8c\u5206\u7684\u7b54\u6848\u5b58\u5728\u53ef\u884c\u8303\u56f4\u91cc\u3002\n2 \u5982\u4f55\u5224\u65ad\u53ef\u884c\uff1f \n  \u51cf\u53bb\u81ea\u7136\u667e\u5e72\u7684\uff0c\u9664\u4ee5\u667e\u8863\u673a\u7684\u5929\u6570\uff0c\u5411\u4e0a\u53d6\u6574\uff0c\u7528\u603b\u5929\u6570\u51cf\u53bb\n  \u5269\u4e0b\u7684\u6bd40\u5927\u5c31\u53ef\u884c\u3002",
        "postTime": 1546576577,
        "uid": 157488,
        "name": "kuaituo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u672c\u6765\u70b9\u5f00\u8fd9\u4e00\u9898\u60f3\u7ec3\u4e8c\u5206\u7684\uff0c\u7136\u800c\u7b2c\u4e00\u5373\u89c6\u611f\u662f\u8d2a\u5fc3\uff0c\u7136\u540e\u5176\u5b9e\u7a0d\u5fae\u60f3\u4e00\u60f3\u8fd9\u4e00\u9898\u548c\u5408\u5e76\u679c\u5b9e\u5dee\u4e0d\u591a=-=\uff0c\u4e8e\u662f\u7528\u4f18\u5148\u73a9\u4e86\u73a9\u770b\u770b\u53ef\u4ee5\u9a97\u51e0\u4e2a\u70b9\uff0c\u7136\u540eA\u4e86...\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528stl\uff0c\u7528\u4f18\u5148\u961f\u5217\u6765\u505a\n\n\u53ef\u4ee5\u80af\u5b9a\u6bcf\u4e00\u6b21\u7528\u70d8\u5e72\u673a\u70d8\u5e72\u6700\u6e7f\u7684\uff0c\u6069\uff0c\u4f18\u5148\u961f\u5217\u7b80\u76f4\u5b8c\u7f8e\u3002\n\n\u4e0d\u8fc7\u4e0d\u592a\u4f1a\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f18\u5148\u961f\u52170.3S A\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint yifu[500005]={0};priority_queue<int> yi;//\u4e00\u5f00\u59cb\u6211\u60f3\u7528\u6570\u7ec4\u6392\u5e8f\u7684\uff0c\u53ef\u4ee5\u770b\u51fa\u67652333\nint main(){\n    int n,a,b;scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=0,ii;i<n;i++) {\n        scanf(\"%d\",&ii);yi.push(ii);//\u653e\u5165\u4f18\u5148\u961f\u5217\n    }\n    int dayy=0,tot=0;//tot\u8bb0\u5f55\u4e00\u5171\u81ea\u7136\u70d8\u5e72\u4e86\u591a\u5c11\uff0c\u8282\u7701\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e34\u65f6\u60f3\u51fa\u6765\u7684\u65b9\u6cd5\n    while(++dayy){//\u8bb0\u5f55\u5929\u6570\n        int maxx=yi.top();yi.pop();\n        tot+=a;maxx=maxx-b;//\u673a\u5668\u70d8\u5e72\u6700\u6e7f\u7684\n        if(tot>=maxx&&tot>=yi.top())break;//\u5168\u90e8\u70d8\u5e72\u8df3\u51fa\n        yi.push(maxx);\n    }\n    printf(\"%d\",dayy);\n}\n\u5176\u5b9e\u8fd8\u662f\u4e0d\u8981\u62d8\u6ce5\u6807\u7b7e\uff0c\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u7b80\u5355\u7684A\u63892333\n```",
        "postTime": 1490333276,
        "uid": 29610,
        "name": "SGOI_Aromyase",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u7b80\u5355\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u628a\u6700\u5927\u503c\u653e\u8fdb\u70d8\u5e72\u673a\n\n\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u53ef\u4ee5\u7528\u5806\u6765\u7ef4\u62a4\n\n\u56e0\u4e3a\u5806\u6bd4\u8f83\u96be\u5199\uff0c\u6240\u4ee5\u5176\u5b9e\u53ea\u8981\u7528STL\u4e2d\u7684\u4f18\u5148\u7ea7\u5bf9\u5217\u5c31\u884c\u4e86\u3002\n\n\nAC\u7a0b\u5e8f\uff1a\n\n\n    \n    \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nint main()\n{\n    priority_queue<int>q;\n    int n,a,b,k=0;\n    cin>>n>>a>>b;\n    for (int i=1;i<=n;i++)\n    {\n        int x;\n        cin>>x;\n        q.push(x);\n    }\n    for (;q.top()>k*a;k++)\n    {\n        int u=q.top();\n        q.pop();\n        u-=b;\n        q.push(u);\n    }\n    cout<<k<<endl;\n    return 0;\n}\n```",
        "postTime": 1475671097,
        "uid": 20367,
        "name": "CRRaphael",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u662f\u8d2a\u5fc3+\u5806\u4f18\u5316\uff0c\u4e8c\u662f\u6211\u4f7f\u7528\u7684\u4e8c\u5206\u7b54\u6848\uff08\u6211\u73b0\u5728\u4e5f\u4e0d\u4f1a\u7b2c\u4e00\u79cd\u505a\u6cd5\uff0c\u836f\u4e38\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6652\u8863\u670d\u7684\u65f6\u95f4\uff0c\u518d\u5728 check \u51fd\u6570\u4e2d\u5c06\u6bcf\u4ef6\u8863\u670d\u4ece $ 1 $ \u5230 $ n $ \u626b\u4e00\u904d\uff0c\u770b\u770b\u6bcf\u4e00\u4ef6\u8863\u670d\u80fd\u5426\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u81ea\u7136\u6652\u5e72\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u5c06\u7528\u70d8\u8863\u673a\u70d8\u5e72\u8fd9\u4ef6\u8863\u670d\u7684\u65f6\u95f4\u52a0\u8d77\u6765\u3002\u6700\u540e\uff0c\u5982\u679c\u7528\u70d8\u8863\u673a\u7684\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e\u89c4\u5b9a\u65f6\u95f4\uff0c\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false.\n\n$ \\rm code $\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\nconst int maxN(500005); \nint n, a, b, clo[maxN];\nbool check(int);\nint main() {\n    cin >> n >> a >> b;\n    int l(1), r = maxN;\n    for(int i = 1; i <= n; ++i)\n        cin >> clo[i];\n    int ans = r;\n    while(l <= r) {\n        int mid = l + r >> 1;\n        check(mid) ? r = mid - 1, ans = mid : l = mid + 1;\n    }\n    cout << ans << '\\n';\n    return 0;\n}\nbool check(int x) {\n    int sum(0);\n    for(int i = 1; i <= n; ++i) {\n        int t = clo[i] - a * x;\n        if(t <= 0) continue;\n        sum += t / b;\n        if(t % b) ++sum;\n        if(sum > x) return false;\n    }\n    return true;\n}\n```\n",
        "postTime": 1561377979,
        "uid": 46747,
        "name": "Aehnuwx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u65b9\u6cd5\uff1a\u8d2a\u5fc3\n\n\u7b56\u7565\uff1a\u7528\u5e72\u8863\u673a\u70d8\u70e4\u6e7f\u5ea6\u6700\u9ad8\u7684\u8863\u670d\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\u5982\u679c\u6bcf\u6b21\u5904\u7406\u4e4b\u540e\u90fd\u7528sort\uff08\u6216\u5176\u4ed6\uff09\u6392\u5e8f\u4e00\u6b21\u7684\u8bdd\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u65e0\u6cd5\u627f\u53d7\n\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528\u5806\u6216\u4f18\u5148\u961f\u5217\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=5000010;\nint a,b,s,n,x,k,t,i;\npriority_queue<int>q;\nint main(){\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&x);\n        q.push(x);\n    }\n    t+=a;k=q.top();\n    q.pop();k-=b;q.push(k);\n    while (true){\n        k=q.top();q.pop();\n        if (k<=t){\n            cout<<t/a;\n            return 0;\n        }\n        t+=a;k-=b;q.push(k);\n    }\n    return 0;\n}\n```",
        "postTime": 1547944394,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u601d\u8def\uff1a\u6bcf\u6b21\u9009\u6700\u5927\u6e7f\u5ea6\u7684\u8863\u670d\u70d8\u5e72\uff0c\u8bb0\u5f55\u65f6\u95f4t\uff0c\u5f53A\\*t>=\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u65f6\uff0c\u7b97\u6cd5\u7ed3\u675f\uff08\u56e0\u4e3a\u90fd\u5e72\u4e86\u561b\uff09\u3002\n\n\u7528\u6876\u7ef4\u62a4\uff0c\u8c8c\u4f3c\u6bd4\u5806\u5feb\uff08\u5212\u6389\uff09\n\nF[i]\u8868\u793a\u6e7f\u5ea6\u4e3ai\u7684\u8863\u670d\u6709\u591a\u5c11\u4ef6\u3002\n\n```cpp\n    while(Ans * A < Maxi) {\n        ++Ans;\n        F[Maxi]--;\n        if(Maxi - B > 0)\n            F[Maxi - B]++;\n        while(!F[Maxi])\n            Maxi--;\n    }\n```",
        "postTime": 1476196860,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e8c\u5206\u7b54\u6848\u4e5f\u80fd\u8fc7\uff08\u6211\u628a\u4e0a\u53d6\u6574\u5199\u9519\u4e86\u7136\u540e\u70b8\u4e86\uff0c\u591a\u4e00\u4f4d\u795e\u7287\u5e2e\u6211debug\uff09\n\n\n    \n    \n    \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 500001;\nint data[MAXN],N,A,B;\nint Ans = (1 << 30),Max = -1;\nint check(int M)\n{\n    int Num = M;\n    for(int i = 1; i <= N; i++)\n    {\n        if(data[i] - M*A <= 0)\n           continue;\n        else \n            Num -= ((data[i]-M*A+B-1)/B);\n    }\n    if(Num < 0) return 0;\n    return 1;\n}\nint main(){\n    scanf(\"%d%d%d\",&N,&A,&B);\n    for(int i = 1; i <= N; i++)\n    {\n        scanf(\"%d\",&data[i]);\n        Max = max(data[i],Max);\n    }\n    sort(data+1,data+N+1);\n    int i = 1,j = Max;\n    while(i <= j)\n    {\n        int mid = (i+j) / 2;\n        if(check(mid) == 1)\n        {\n            if(mid < Ans)\n               Ans = mid;\n            j = mid -1;\n        }\n        else\n            i  = mid + 1;\n    }\n    cout << j+1 << endl;\n    //cout << Ans << endl;\n    return 0;\n}\n```",
        "postTime": 1476196449,
        "uid": 6982,
        "name": "xuan__xuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u65b9\u6cd5\u4e00\uff1a\u8bbea[i]\u4e3a\u7b2ci\u4ef6\u8863\u670d\u7684\u6e7f\u5ea6\uff0c\u5f53\u524d\u7b54\u6848\u8303\u56f4\u662f[L\uff0cR]\u3002(\u4e00\u5f00\u59cb\u7b54\u6848\u8303\u56f4\u662f[1\uff0c500000])\n\n\u9996\u5148\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848ans\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4ef6\u8863\u670d\uff0c\u82e5a[i]\u2264ans\\*A\uff0c\u5219\u8868\u793a\u7b2ci\u4ef6\u8863\u670d\u53ef\u4ee5\u81ea\u7136\u6652\u5e72\uff0c\u5426\u5219\u8868\u793a\u9700\u8981\u7528(a[i] -ans\\*A)/B\uff08\u53d6\u4e0a\u6574\uff09\u4e2a\u5355\u4f4d\u65f6\u95f4\u7684\u70d8\u8863\u673a\uff0c\u6211\u4eec\u7528time\u7d2f\u8ba1\u70d8\u8863\u673a\u6240\u7528\u7684\u65f6\u95f4\u3002\n\n\u82e5\u6700\u540etime\u2264ans\uff0c\u5219\u8868\u793a\u8be5\u7b54\u6848\u53ef\u884c\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u7ee7\u7eed\u5728[L\uff0cans-l]\u5185\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\u3002\n\n\u82e5\u6700\u540etime>ans\uff0c\u5219\u8868\u793a\u8be5\u7b54\u6848\u4e0d\u884c\uff0c\u7ee7\u7eed\u5728[ans+l\uff0cR]\u5185\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\u3002\n\n\u76f4\u5230L>R\u505c\u6b62\u3002\n\n\u65b9\u6cd5\u4e8c\uff1a\u5229\u7528\u8d2a\u5fc3\u7b56\u7565\u6a21\u62df\u6574\u4e2a\u70d8\u8863\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\uff0c\u6211\u4eec\u663e\u7136\u7528\u70d8\u8863\u673a\u53bb\u5904\u7406\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u4f1a\u4f7f\u5f97\u7b54\u6848\u66f4\u4f18\u3002\n\n\u8bbek\u8868\u793a\u5f53\u524d\u6240\u6709\u8863\u670d\u7684\u6e7f\u5ea6\u51cf\u5c11\u4e86\u591a\u5c11\uff0ca [i]\u8868\u793a\u5728\u70d8\u5e72\u673a\u4f5c\u7528\u4e0b\u5f53\u524d\u6e7f\u5ea6\u4e3ai\u7684\u8863\u670d\u6709\u591a\u5c11\u4ef6\uff08\u6ce8\u610f\u8fd9\u91cc\u7684a[i]\u4e0e\u65b9\u6cd5\u4e00\u4e0d\u540c\uff09\uff0cmax\u8868\u793a\u5728\u70d8\u5e72\u673a\u4f5c\u7528\u4e0b\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u7684\u6e7f\u5ea6\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u65f6\u523b\u6211\u4eec\u6240\u6709\u8863\u670d\u7684\u6e7f\u5ea6\u90fd\u9700\u51cf\u5c11A\uff0c\u6240\u4ee5\u6bcf\u4e2a\u65f6\u523bk\u5c31\u7d2f\u8ba1\u4e00\u4e2aA\u3002\u540c\u65f6\u6211\u4eec\u7684\u70d8\u5e72\u673a\u4f1a\u5bf9\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u8fdb\u884c\u70d8\u5e72\uff0c\u6240\u4ee5a[max]\u4f1a\u51cf\u5c111\uff0c\u8868\u793a\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u5c11\u4e86\u4e00\u4ef6\uff0c\u5e76\u4e14a[max-B]\u4f1a\u589e\u52a01\uff0c\u8868\u793a\u539f\u6765\u90a3\u4ef6\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u70d8\u5e72\u540e\u6210\u4e86\u6e7f\u5ea6\u4e3amax-B\u7684\u8863\u670d\u4e86\u3002\u82e5[max]=0\uff0c\u5219\u4ee3\u8868\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u6ca1\u6709\u4e86\uff0cmax\u9012\u51cf\uff0c\u76f4\u5230a[max]<>0\u4e3a\u6b62\u3002\n\n\u5f53\u67d0\u4e2a\u65f6\u523bmax\u2264k\uff0c\u5c31\u8868\u793a\u6211\u4eec\u6240\u6709\u8863\u670d\u5df2\u7ecf\u70d8\u5e72\u4e86\uff0c\u5e76\u4e14\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u5c0f\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08\u6700\u5927\u6e7f\u5ea6+\u8863\u670d\u4e2a\u6570\uff09\u3002\n\n\n\u4ee5\u4e0b\u662f\u4e8c\u5206\u65b9\u6cd5\u624d\uff0c\u7a0b\u5e8f\u4e0d\u96be\u81ea\u884c\u9605\u8bfb\n\n\n\n\n\n```cpp\nvar\n  n,a,b,i,p,ans:longint;\n  f:array[0..500000]of longint;\nprocedure erfen(l,r:longint);\nvar\n  i,time,p:longint;\nbegin\n  if l<=r then\n  begin\n  p:=(l+r) div 2;\n  time:=0;\n  for i:=1 to n do if p*a<f[i] then begin if abs((f[i]-p*a)/b)-trunc((f[i]-p*a)/b)>0.0000001 then inc(time); time:=time+trunc((f[i]-p*a)/b); end;\n  if time<=p then begin ans:=p; erfen(l,p-1) end else erfen(p+1,r);\n  end;\nend;\nbegin\n  readln(n,a,b);\n  for i:=1 to n do\n   read(f[i]);\n  erfen(1,500000);\n  writeln(ans);\nend.\n\n```",
        "postTime": 1382439434,
        "uid": 266,
        "name": "Your_Y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint w=0,q=1;char c=getchar();\n\twhile(c<'0'||c>'9'){c=getchar();}\n\twhile(c>='0'&&c<='9'){w=(w<<3)+(w<<1)+c-'0';c=getchar();}\n\treturn w*q;\n}\nint ans,wet[500005],sum;\nint main()\n{\n//\tfreopen(\"dry.in\",\"r\",stdin);\n//\tfreopen(\"dry.out\",\"w\",stdout);\n\tint n=read(),a=read(),b=read(),maxx=0;\n\tfor(int i=1;i<=n;i++){int w=read();wet[w]++;maxx=max(maxx,w);}\n\tfor(int i=maxx;i>=1;i--)\n\t{\n\t\twhile(wet[i]&&i>sum)\n\t\t{\n\t\t\twet[i]--;\n\t\t\twet[max(i-b,0)]++;\n\t\t\tans++;\n\t\t\tsum+=a;\n\t\t}\n\t\tif(i<=sum) break;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u5229\u7528\u8d2a\u5fc3\u7684\u7b56\u7565\u6a21\u62df\u6574\u4e2a\u70d8\u8863\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65f6\u523b\uff0c\u6211\u4eec\u663e\u7136\u7528\u70d8\u8863\u673a\u53bb\u5904\u7406\u6e7f\u5ea6\u6700\n\u5927\u7684\u8863\u670d\u4f1a\u4f7f\u5f97\u7b54\u6848\u66f4\u4f18\u3002\n\n\u8bbesum\u8868\u793a\u5f53\u524d\u6240\u6709\u8863\u670d\u7684\u6e7f\u5ea6\u51cf\u5c11\u4e86\u591a\u5c11\uff0cwet[i]\u8868\u793a\u5728\u70d8\u5e72\u673a\u4f5c\u7528\u4e0b\u5f53\u524d\u6e7f\u5ea6\u4e3a i \u7684\u8863\u670d\u6709\u591a\u5c11\u4ef6\uff0cmax \u8868\u793a\u5728\u70d8\u5e72\u673a\u4f5c\u7528\u4e0b\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u7684\u6e7f\u5ea6\u3002\n\n\u90a3\u4e48\u6bcf\u4e2a\u65f6\u523b\u6211\u4eec\u6240\u6709\u8863\u670d\u7684\u6e7f\u5ea6\u90fd\u9700\u51cf\u5c11A\uff0c\u6240\u4ee5\u6bcf\u4e2a\u65f6\u523bsum\u5c31\u7d2f\u8ba1\u4e00\u4e2a A\u3002\u540c\u65f6\u6211\u4eec\u7684\u70d8\u5e72\u673a\u4f1a\u5bf9\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u8fdb\u884c\u70d8\u5e72\uff0c\u6240\u4ee5wet[max]\u4f1a\u51cf\u5c11\u4e00\uff0c\u8868\u793a\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u5c11\u4e86\u4e00\u4ef6\u4e86\uff0c\u5e76\u4e14 wet[max-B]\u4f1a\u589e\u52a0\u4e00\uff0c\u8868\u793a\u539f\u6765\u90a3\u4ef6\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u70d8\u5e72\u540e\u6210\u4e86\u6e7f\u5ea6\u4e3a max-B\u7684\u8863\u670d\u4e86\u3002\u82e5 wet[max]=0\uff0c\u5219\u4ee3\u8868\u6e7f\u5ea6\u6700\u5927\u7684\u8863\u670d\u6ca1\u6709\u4e86\uff0cmax \u9012\u51cf\uff0c\u76f4\u5230 max==1 \u4e3a\u6b62\u3002\n\n\u5f53\u67d0\u4e2a\u65f6\u523b max<=sum \u4e86\uff0c\u5c31\u8868\u793a\u6211\u4eec\u6240\u6709\u8863\u670d\u5df2\u7ecf\u70d8\u5e72\u4e86\uff0c\u5e76\u4e14\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6700\u5c0f\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u8d2a\u5fc3\u7b97\u6cd5\u7684\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff08\u6700\u5927\u6e7f\u5ea6+\u8863\u670d\u4e2a\u6570\uff09\u3002\n\n\u600e\u4e48\u8bf4\u5462  \u8003\u5b8c\u8bd5\u4e4b\u540e\\\n\u4e0d\u60f3\u4e8c\u5206\u6539\u6b63\\\n\u4e5f\u4e0d\u60f3\u7528\u4f18\u5148\u961f\u5217\\\n500000\\\n\u6570\u7ec4\u653e\u5f97\u4e0b\u554a",
        "postTime": 1563268555,
        "uid": 141940,
        "name": "muse_umbra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "**\u6709\u4eba\u7528\u5806\u6c34\u8fc7\u8fd9\u9898\u5417**\n\n~~\uff08\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u60f3\u7684\u662fDP QWQWQWQ\uff09~~\n\u597d\u4e86\uff0c\u8a00\u5f52\u6b63\u4f20\uff0c\u6211\u4eec\u5047\u8bbe\u8863\u670d\u7684\u6e7f\u5ea6\u662f\u4e00\u4e2a\u4e2a\u67f1\u5f62\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u662f\u8fd9\u6837\u5b50\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/31848.png)\n\n~~\uff08\u672c\u4eba\u7f8e\u672f\u5f31\u7206\uff09~~\n\n~~\uff08\u80fd\u770b\u5c31\u884c\u4e86\uff09~~\n\n\u6bcf\u5355\u4f4d\u65f6\u95f4\u90fd\u4f1a\u96c6\u4f53\u51cf\u5c11A\u4e2a\u203b\uff0c\u6211\u4eec\u7528\u4e00\u4e2acost\u6765\u8bb0\u5f55\u5230\u5f53\u524d\u4e3a\u6b62\u81ea\u7136\u98ce\u5e72\u7684\u203b\u7684\u6570\u91cf\u3002\n\n\u73b0\u5728\u6211\u4eec\u518d\u6765\u8003\u8651\u90a3\u53f0~~\u8be5\u6b7b\u7684~~\u70d8\u5e72\u673a\u3002\u7531\u4e8e\u70d8\u5e72\u673a\u4e0d\u4f1a\u5e72\u6270\u81ea\u7136\u98ce\u5e72\uff0c\u56e0\u6b64\u70d8\u5e72\u673a\u5728\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u80af\u5b9a\u4f1a\u7528\u5728\u6700\u6e7f\u7684\u8863\u670d\u4e0a\u3002\u91cd\u70b9\u6765\u4e86\uff1a\n\n\u5982\u4f55\u6c42\u51fa\u6bcf\u4e2a\u5355\u4f4d\u65f6\u95f4\u5185\u6700\u6e7f\u7684\u8863\u670d\u5462\uff1f\u6211\u4eec\u9009\u62e9\u7528\u4e00\u4e2a[\u5927\u6839\u5806](https://blog.csdn.net/sofia_m/article/details/79117088)\u6765\u7ef4\u62a4\u3002\u6bcf\u6b21\u63d2\u5165\u6216\u4fee\u6539\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3alogn\u3002\n\n\u9898\u76ee\u8bf4\u4e86\uff0c1<=\u6e7f\u5ea6,A,B<=500000\uff0c\u56e0\u6b64---------\u563f\u563f\uff0c\u5927\u6839\u5806\u6c34\u8fc7\u53bb\u4e86\u3002\n\n\u4f8b\u884c\u653e\u4ee3\u7801\u3002\n```\nvoid heapup(int v)\n{\n\theap[++top]=v;\n\tint i=top;\n\twhile(i>1&&heap[i]>heap[i/2])swap(heap[i],heap[i/2]),i/=2;\n}\nvoid heapdown()\n{\n\tint i=1,j;\n\twhile(i*2<=top)\n\t{\n\t\tif(i*2==top||heap[i*2]>heap[i*2+1])j=i*2;\n\t\telse j=i*2+1;\n\t\tif(heap[i]<heap[j])\n\t\t{\n\t\t\tswap(heap[i],heap[j]);\n\t\t\ti=j;\n\t\t}\n\t\telse break;\n\t}\n}\n\n```\n\u4ee5\u4e0a\u662f\u5411\u4e0a\u5806\u5316\u4e0e\u5411\u4e0b\u5806\u5316\u3002\n\n\n```\n\tn=read();a=read();b=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tnum[i]=read();\n\t\theapup(num[i]);//\u628a\u6bcf\u4e2a\u5143\u7d20\u653e\u8fdb\u5806\u91cc\n\t}\n\twhile(heap[1]>cost)//\u5806\u9876\u5143\u7d20\u5373\u6700\u6e7f\u7684\u8863\u670d\uff0c\u5982\u679c\u5806\u9876\u5143\u7d20\u5e72\u4e86\u5c31\u90fd\u5e72\u4e86\u3002\n\t{\n\t\tcost+=a;total++;//cost\u8bb0\u5f55\u81ea\u7136\u98ce\u5e72\uff0ctotal\u8bb0\u5f55\u82b1\u8d39\u65f6\u95f4\n\t\theap[1]-=b;//\u5c06\u5806\u9876\u5143\u7d20\u7528\u70d8\u5e72\u673a\u70d8\u4e00\u904d\n\t\tif(heap[1]<cost)\n\t\t{\n\t\t\theap[1]=heap[top];\n\t\t\ttop--;//\u5982\u679c\u5806\u9876\u5143\u7d20\u5728\u7ecf\u5386\u4e86\u70d8\u5e72\u673a\u7684\u6467\u6b8b\u4e4b\u540e\u5e72\u4e86\uff0c\u90a3\u4e48\u5c06\u5806\u9876\u5f39\u51fa\u3002\n\t\t}\n\t\theapdown();//\u7ef4\u62a4\u5806\n\t}\n\tprintf(\"%d\",total);\n\treturn 0;\n```\n\u4ee5\u4e0a\u662f\u4e3b\u51fd\u6570",
        "postTime": 1535962686,
        "uid": 23908,
        "name": "C201914",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u4e24\u79cd\u89e3\u6cd5\n\n1 \u4e8c\u5206\u67e5\u627e\n\n2 \u4f18\u5148\u961f\u5217\n\n\u6211\u7684\u4ee3\u7801\u4f7f\u7528\u7684\u662f\u7b2c\u4e8c\u79cd\u65b9\u6cd5\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\npriority_queue<int>q;\nint n,a,b,num;\nint main() {\n    cin>>n>>a>>b;\n    for (int i=1; i<=n; i++) {\n        scanf(\"%d\",&num);\n        q.push(num);\n    }//\u8bfb\u5165\n    int time=0;//\u8bb0\u5f55\u5929\u6570\n    while(q.top()>time*a) {\n        int wzx=q.top();\n        wzx-=b;\n        q.pop();\n        q.push(wzx);\n        time++;\n    }//\u6bcf\u6b21\u53d6\u6700\u5927\u503c,\u5904\u7406\u5b8c\u5728\u91cd\u65b0\u5165\u961f\n    cout<<time<<endl;\n}\n```\n",
        "postTime": 1533373421,
        "uid": 12076,
        "name": "Floating__Dream",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u672c\u9898\u7b97\u6cd5\u5c31\u662f\u4e8c\u5206\u6240\u9700\u7684\u65f6\u95f4\u5566\n\n\u4e8c\u5206\u7b54\u6848\u7684\u96be\u70b9\u5927\u90e8\u5206\u90fd\u5728check\u51fd\u6570\u4e0a\u5427\n\n~~\u7136\u800c\u6211\u5c45\u7136\u628a\u4e8c\u5206\u6a21\u677f\u6253\u9519\u4e86\u597d\u56e7\u554a~~\n\n\u603b\u7684\u6765\u8bf4\u8fd9\u9898\u8fd8\u662f\u4e0d\u96be\u7684\u554a\uff0c\u4ee3\u7801\u5448\u4e0a~\n\n```cpp\n#include<cstdio>\nconst int N=500005;\nint n,a,b,t[N],l=0,r=N;\nbool check(int x)\n{\n    int ret=x; //x-ret\u8868\u793a\u9700\u8981\u7684\u70d8\u5e72\u673a\u70d8\u5e72\u7684\u5929\u6570\u3002\n    for(int i=1;i<=n;i++)\n    {\n        int tmp=t[i]-a*x; //tmp\u8868\u793a\u4e00\u4ef6\u8863\u670dx\u5929\u81ea\u7136\u70d8\u5e72\u540e\u7684\u6e7f\u5ea6\n        if(tmp>0) ret-=(tmp/b+(tmp%b!=0)); //\u5982\u679c\u81ea\u7136\u672a\u70d8\u5e72\uff0c\u5219\u9700\u8981tmp/b\uff08\u4e0a\u53d6\u6574\uff09\u5929\u6765\u7528\u70d8\u5e72\u673a\u70d8\u5e72\n        if(ret<0) return false; //\u5982\u679c\u70d8\u5e72\u673a\u70d8\u5e72\u8863\u670dx\u5929\u4e0d\u591f\uff0c\u5c31return false\u3002\n    }\n    return true;\n}\nint main()\n{\n    freopen(\"P1843.in\",\"r\",stdin);\n    freopen(\"P1843.out\",\"w\",stdout);\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&t[i]);\n    while(l<=r) //\u4e8c\u5206\u7b54\u6848\n    {\n        int m=(l+r)/2;\n        if(check(m))r=m-1; //\u6ce8\u610f\uff1a\u5982\u679c\u7b54\u6848\u7b26\u5408\u8981\u6c42\u5c31\u8c03\u6574\u53f3\u8fb9\u754c\uff0c\u4f7f\u533a\u95f4\u91cc\u7684\u503c\u66f4\u5c0f\n        else l=m+1;\n    }\n    printf(\"%d\",r+1); //\u6ce8\u610f\u8fd9\u91cc\u8f93\u51fa\u53f3\u8fb9\u754c\u554a\uff08\u849f\u84bb\u7684\u6211\u5f53\u65f6\u5c31\u8fd9\u91cc\u9519\u4e86QAQ\uff09\n}\n```",
        "postTime": 1489123002,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u867d\u7136\u548c\u524d\u9762\u5404\u4f4d\u795e\u7287\u7684\u601d\u8def\u662f\u57fa\u672c\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u6211\u6709\u4e09\u4e2a\u7a0b\u5e8f\uff0cC++,pas\uff0cC++\u4e2d\u6709\u7528stl\u7684\uff0c\u6ca1\u89c1\u8fc7\u7684\u53ef\u4ee5\u5b66\u4e00\u5b66\n\n\n\u6709\u6587\u4ef6\u64cd\u4f5c\uff0c\u522b\u95ee\u6211\u6211\u4e3a\u4ec0\u4e48\u4e0d\u5220\uff0c\u56e0\u4e3a\u6211\u9632\u6284\u88ad\u554a\uff01\n\n\n\u3010\u53c2\u8003\u7a0b\u5e8f\u3011{ C++}\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n, dx, dy, i, left, right, mid;\nint a[500010];\nbool ok(int mid)\n{\nint count, x, y, i;\n   count = 0;\nfor(i=1; i<=n; i++) {\n      x = a[i] \u2013 mid * dx;   // \u6bcf\u4ef6\u8863\u670d\u56e0\u81ea\u7136\u98ce\u5e72\u800c\u51cf\u5c11\u7684\u6e7f\u5ea6\u503c\n      if (x<=0)  continue;   // \u6e7f\u5ea6\u503c\u5c0f\u4e8e0\u5219\u4e3a\u5e72\u4e86\n      y =x / dy;               // \u4f59\u4e0b\u7684\u6e7f\u5ea6\u518d\u70d8\u5e72\u8fd8\u9700\u7684\u79d2\u6570\n      if (x % dy!=0)  y++;\n      count += y;\n      if (count > mid)  return false;\n   }\nif ( count <= mid )\n    return true;\n   else \nreturn false;\n}\nint main()\n{\nfreopen(\u201cdry.in\u201d, \u201cr\u201d, stdin);\nfreopen(\u201cdry.out\u201d, \u201cw\u201d, stdout);\ncin >> n >> dx >> dy;   //N=3, A=2, B=1\nfor(i=1; i<=n; i++)  cin>>a[i];\nleft = 0;\nright = 500010;\nwhile (left!=right) {\nmid = (left + right) >> 1;\n       if ( ok(mid) ) \n           right = mid;\n       else\nleft = mid + 1;\n}\ncout << left << endl;\nfclose(stdin);\nfclose(stdout);\nreturn 0;\n}\n```\n\u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n\n```cpp\nvar\nn, dx, dy, i, left, right, mid: longint;\na: array[0..500010] of longint;\nfunction ok(mid: longint): boolean;\nvar\ncount, x, y, i: longint;\nbegin\n   count:=0;\n   for i:=1 to n do\n   begin\n      x := a[i] - mid*dx;\n      if x<=0 then continue;\n      y:=x div dy;\n      if x mod dy<>0 then inc(y);\n      inc(count,y);\n      if count>mid then exit(false);\n   end;\nif count<=mid then\n   exit(true)\n   else \nexit(false);\nend;\nbegin\nreadln(n, dx, dy);\nfor i:=1 to n do read(a[i]);\nleft:=0;\nright:=500010;\nwhile left<>right do\nbegin \nmid:=(left+right) shr 1;\n      if ok(mid) then\n         right:=mid\n      else \nleft:=mid+1;\nend;\nwriteln(left);\nend.\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<cctype>\nusing namespace std;\nint main()\n{\n    priority_queue<int>heap;\n    int n,a,b;\n    cin>>n>>a>>b; \n    for(int i=1;i<=n;i++){\n        int u;\n        cin>>u;\n        heap.push(u);\n    }\n    int k=1;\n    for(;heap.top()>k*a;k++){\n        int u=heap.top();\n        heap.pop();\n        u-=b;\n        heap.push(u);\n    }\n    cout<<k<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1479302119,
        "uid": 23845,
        "name": "Red_w1nE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u601d\u8def\u540c\u697c\u4e0b\uff0c\u6bcf\u6b21\u90fd\u7528\u6d17\u8863\u673a\u70d8\u5e72\u6700\u5927\u503c\u3002\n\n\u7528\u7ebf\u6bb5\u6811\uff08\u4e71\u641e\uff09\n\n\u6709\u4e9b\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7ebf\u6bb5\u6811\u5b58\u7684\u662f\u533a\u95f4\u6700\u5927\u8282\u70b9\u7684\u7f16\u53f7\uff08\u597d\u6539\uff09\n\nPascal\uff1a\n\n\n```cpp\nvar sd:array[1..500000] of longint;\n     f:array[1..1500000] of longint;\n     n,a,b,t,p,i:longint;\nprocedure buildtree(l,r,k:longint);\nvar mid:longint;\nbegin\n if l=r then\n  begin\n   f[k]:=l;\n   exit;\n  end;\n mid:=(l+r) shr 1;\n buildtree(l,mid,k shl 1);\n buildtree(mid+1,r,k shl 1+1);\n if sd[f[k shl 1]]>sd[f[k shl 1+1]] then f[k]:=f[k shl 1]\n                                         else f[k]:=f[k shl 1+1];\nend;\nprocedure updata(l,r,k:longint);\nvar mid:longint;\nbegin\n if l=r then exit;\n mid:=(l+r) shr 1;\n if p<=mid then updata(l,mid,k shl 1)\n             else updata(mid+1,r,k shl 1+1);\n if sd[f[k shl 1]]>sd[f[k shl 1+1]] then f[k]:=f[k shl 1]\n                                         else f[k]:=f[k shl 1+1];\nend;\nbegin\n read(n,a,b);\n for i:=1 to n do\n  read(sd[i]);\n buildtree(1,n,1);\n t:=0;\n while t*a<sd[f[1]] do\n  begin\n   inc(t);\n   dec(sd[f[1]],b);\n   p:=f[1];\n   updata(1,n,1);\n  end;\n write(t);\nend .\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(tlogn) (\u8fd8\u597d\u5b83\u6ca1\u641e\u4ec0\u4e48\u4e1c\u897f\u5361\u6211)\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a<=10m \uff08\u7ebf\u6bb5\u6811\u7684\u60b2\u5267\uff09\n\n#\u5b66\u597d\u6570\u636e\u7ed3\u6784\uff0c\u8d70\u904d\u5929\u4e0b\u90fd\u4e0d\u6015\uff01\uff01\uff01\n",
        "postTime": 1478529058,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u53ef\u4ee5\u7528C++STL\u4e2d\u7684\u4f18\u5148\u7ea7\u961f\u5217\u6765\u4f18\u5316\u8d2a\u5fc3\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    priority_queue<int>q;\n    int n,a,b,i,k=0;\n    cin>>n>>a>>b;\n    int num[n+1];\n    for(i=1;i<=n;i++){\n        cin>>num[i];\n        q.push(num[i]);\n    }\n    for(;q.top()-k*a>0;k++){\n        int x;\n        x=q.top();\n        q.pop();\n        x-=b;\n        q.push(x);\n    }\n    cout<<k;\n    return 0;\n}\n```",
        "postTime": 1475670856,
        "uid": 20337,
        "name": "Only_My_Whisper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1843 \u3010\u5976\u725b\u6652\u8863\u670d\u3011"
    }
]