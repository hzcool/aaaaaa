[
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u4e0d\u592a\u4f1a\u7528emm\u5c06\u5c31\u4e00\u4e0b\u5427\u3002\n\u6b65\u5165\u6b63\u9898\uff1a\u5e7f\u641c+map\u53bb\u91cd\n\u53ef\u4ee5\u5148\u628a\u5b83\u5f53\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u518d\u627e\u51faABC\u4e09\u79cd\u64cd\u4f5c\u7684\u89c4\u5f8b\uff0c\u7528\u51fd\u6570\u6a21\u62df\u3002map\u91cc\u5b58\u64cd\u4f5c\u5e8f\u5217\u3002\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring a;\nmap<string,string>m;\nqueue<string>q;\nvoid A(string x){\n\tstring xx=x;\n\tfor(int i=0;i<4;i++){\n\t\tchar x1=x[i];\n\t\tx[i]=x[7-i];\n\t\tx[7-i]=x1;\n\t}\n\tif(m.count(x)==0){//\u6ca1\u6709\u51fa\u73b0\u8fc7\n\t\tq.push(x);\n\t\tm[x]=m[xx]+'A';\n\t}\n\treturn;\n}\nvoid B(string x){\n\tstring xx=x;\n\tx[0]=xx[3],x[1]=xx[0],x[2]=xx[1],x[3]=xx[2],x[4]=xx[5],x[5]=xx[6],x[6]=xx[7],x[7]=xx[4];\n\tif(m.count(x)==0){\n\t\tq.push(x);\n\t\tm[x]=m[xx]+'B';\n\t}\n\treturn;\n}\nvoid C(string x){\n\tstring xx=x;\n\tx[1]=xx[6],x[2]=xx[1],x[5]=xx[2],x[6]=xx[5];\n\tif(m.count(x)==0){\n\t\tq.push(x);\n\t\tm[x]=m[xx]+'C';\n\t}\n\treturn;\n}\nvoid bfs(){\n\tq.push(\"12345678\");\n\tm[\"12345678\"]=\"\";\n\twhile(q.empty()==false){\n\t\tA(q.front());\n\t\tB(q.front());\n\t\tC(q.front());\n\t\tif(m.count(a)!=0){//\u5f53\u51fa\u73b0\u76ee\u6807\u5e8f\u5217\n\t\t\tcout<<m[a].size()<<endl<<m[a];\n\t\t\treturn;\n\t\t}\n\t\tq.pop();\n\t}\n\treturn;\n}\nint main(){\n\tfor(int i=0;i<8;i++){\n\t\tchar a1;\n\t\tcin>>a1;\n\t\ta+=a1;\n\t\tgetchar();\n\t}\n\tbfs();\n\treturn 0;\n}\n```",
        "postTime": 1545522307,
        "uid": 102754,
        "name": "getchar123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u4e00\u9053\u7ecf\u5178\u7684\u641c\u7d22\u9898\n\n\n- \u5927\u5bb6\u90fd\u80fd\u60f3\u5230\u7528\u5e7f\u641c\u5427\n\n- \u4f46\u96be\u70b9\u5728\u5224\u91cd\u4e0a\uff1a\n\n- \u9700\u8981\u628a\u6bcf\u4e2a\u641c\u7d22\u5230\u7684\u9b54\u677f\u72b6\u6001\u52a0\u5165bfs\u7684\u961f\u5217\u91cc\u9762\n\n- 1\u3001\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\u5230\u5c06\u9b54\u677f\u76848\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u76f4\u63a5\u8f6c\u6362\u4e3a8\u4f4d\u6570\u52a0\u5165\u961f\u5217\n\n- \u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e2a\u9b54\u677f\u76848\u4f4d\u7f6e\u72b6\u6001\u8f6c\u6362\u4e3a\u4e00\u4e2a8\u4f4d\u6570\n\n- \u5224\u91cd\u65f6\u9700\u8981\u957f\u5ea6\u8fd110^8\u7684\u5e03\u5c14\u6570\u7ec4\uff0c\u7a7a\u95f4\u5c06\u8fd1200M\uff0c\u80af\u5b9a\u662f\u8fc7\u4e0d\u4e86\u7684\n\n- 2\u3001\u7ee7\u7eed\u601d\u8003\uff1a\u9b54\u677f\u7684\u6240\u6709\u6392\u5217\u65b9\u5f0f\u5171\u67098\uff01=40320\u79cd\uff0c\u5982\u679c\u628a\u9b54\u677f\u7684\u6bcf\u4e00\u79cd\u6392\u5217\u65b9\u5f0f\u90fd\u7528\u67d0\u79cd\u65b9\u6cd5\u904d\u4e0a\u4e00\u4e2a\u5e8f\u53f7\n\n\uff0c\u90a3\u4e48\u5224\u91cd\u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u957f\u5ea6\u7565\u5927\u4e8e40000\u7684\u5e03\u5c14\u6570\u7ec4\uff0c\u7a7a\u95f4\u5c11\u4e86\u5f88\u591a\n\n- \u90a3\u4e48\u5230\u5e95\u5e94\u8be5\u600e\u4e48\u7f16\u53f7\uff1f\n\n- \u6211\u4eec\u5148\u4ece\u7b80\u5355\u4e00\u70b9\u7684\u4f8b\u5b50\u770b\u8d77\uff1a\n\n- \u5f53\u9700\u8981\u6392\u5217\u7684\u6570\u5b57\u53ea\u67092\u4e2a:1,2\u7684\u65f6\u5019\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u627e\u51fa\u6240\u6709\u7684\u6392\u5217\u65b9\u5f0f\uff1a\uff081,2\uff09\uff0c\uff082,1\uff09\uff1b\u53ea\u6709\u4e24\u79cd\uff1b\n\n- \u5982\u679c\u6392\u5217\u7684\u6570\u5b57\u67093\u4e2a:1,2,3\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u6392\u5217\u7684\u7b2c\u4e00\u4f4d\u6570\u5b57\u8fdb\u884c\u5206\u7c7b\uff1a\n\n- \u7b2c\u4e00\u4f4d\u4e3a1\u7684\u6392\u5217:(1,2,3),(2,1,3),\n\n- \u7b2c\u4e00\u4f4d\u4e3a2\u7684\u6392\u5217:(2,1,3),(2,3,1),\n\n- \u7b2c\u4e00\u4f4d\u4e3a3\u7684\u6392\u5217:(3,1,2),(3,2,1);\n\n- \u90a3\u4e48\u89c4\u5f8b\u5c31\u51fa\u6765\u4e86\uff1a\u5bf9\u4e8e\u4ece1\u5230n\u7684\u6392\u5217\uff0c\u5982\u679c\u7b2c1\u4f4d\u6570\u5b57\u4e3ai\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6392\u5217\u7684\u7f16\u53f7\u80af\u5b9a\u5728\uff08i-1)\\*(n-1)!-i\\*(n-1)!\u7684\u8303\u56f4\u5185\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u95ee\u9898\u7684\u89c4\u6a21\u7f29\u5c0f\u3002\n\n- \u4f46\u662f\u7559\u4e0b\u6765\u7684\u6570\u5b57\u5e76\u4e0d\u4e00\u5b9a\u662f1\u5230\uff08n-1\uff09\uff0c\u9700\u8981\u91cd\u65b0\u7ed9\u5b83\u4eec\u6392\u5e8f\u5417\uff1f\n\n- \u5176\u5b9e\u4e0a\u9762\u7684\u89c4\u5f8b\u4e5f\u53ef\u4ee5\u8fd9\u6837\u89e3\u91ca\uff1a\u5f53\u6392\u5217\u7684\u7b2c\u4e00\u4f4d\u6570\u5b57\u4e3a\u6240\u6709\u5143\u7d20\u4e2d\u7b2ci\u5927\u7684\u6570\u5b57\u65f6\uff0c\u8fd9\u4e2a\u6392\u5217\u7684\u7f16\u53f7\u5728\uff08i-1)(n-1)!-i(n-1)!\u4e4b\u95f4\u3002\n\n- \u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5bfb\u627e\u5f53\u524d\u6392\u5217\u4e2d\u67d0\u4e2a\u6570\u7684\u540e\u65b9:\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u4e0e\u5b83\u4e0d\u7ec4\u6210\u5347\u5e8f\u5e8f\u5217\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5b83\u662f\u5728\u540e\u9762\u6240\u6709\u5143\u7d20\u4e2d\u7684\u7b2c\u51e0\u4f4d\n\n- \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7f16\u53f7\u7528\u7684\u65b9\u7a0b:\n\n**X=a[n]\\*(n-1)!+a[n-1]\\*(n-2)!+...+a[i]\\*(i-1)!+...+a[1]\\*0!**\u5176\u4e2d**a[i]**\u4e3a\u5f53\u524d\u672a\u51fa\u73b0\u7684\u5143\u7d20\u4e2d\u662f\u6392\u5728\u7b2c\u51e0\u4e2a\uff08\u4ece0\u5f00\u59cb\uff09\u3002\n\n\u5176\u5b9e\u8fd9\u5c31\u662f\u5eb7\u6258\u5c55\u5f00\u3002\n\n\n\u8fd9\u4e2a\u96be\u70b9\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nbool bb[9],b[50000];//\u5224\u91cd\u6570\u7ec4 \nint MS[9];//\u6211\u4eec\u9700\u8981\u8f6c\u6362\u5230\u7684\u9b54\u677f\u72b6\u6001 \nchar re[10];//\u7528\u4e8e\u8f93\u51fa \nstruct node{    //\u6bcf\u4e2a\u7ed3\u70b9\u8868\u793a\u8be5\u9b54\u677f\u7684\u72b6\u6001 \n    int a[9];    //\u9b54\u677f\u4e0a\u7684\u6570\u5b57 \n    int step,father;//\u5df2\u53d8\u6362\u6b65\u6570\u548c\u5176\u524d\u9a71 \n    char c;//\u4e0a\u4e00\u6b65\u505a\u7684\u8f6c\u6362 \n}l[50000];//\u603b\u5171\u53ea\u670940000\u591a\u79cd\u6392\u5217\uff0c\u6240\u4ee5\u961f\u5217\u4e0d\u5fc5\u5f00\u5f88\u5927 \n\nvoid print(node x){\n    int s=0;\n    while(x.father!=0){\n        re[++s]=x.c;\n        x=l[x.father];\n    }\n    for(int i=s;i>=1;i--){\n        printf(\"%c\",re[i]);\n    }\n    return;\n}//\u901a\u8fc7\u53cd\u590d\u8c03\u7528\u76ee\u6807\u8282\u70b9\u7684\u524d\u9a71\u8fdb\u884c\u56de\u6eaf\u8f93\u51fa \n\nint fc(int x){        //\u9636\u4e58 \n    if(x==0)return 0;\n    if(x==1)return 1;\n    return x*fc(x-1);\n}\ninline int KT(node x){        //\u5eb7\u62d3\u5c55\u5f00\u5728\u8fd9\u91cc \n    int num=0;\n    for(int i=1;i<=8;i++){\n        int s=0;\n        for(int j=i+1;j<=8;j++){\n            if(x.a[i]>x.a[j])s++;\n        }\n        num+=s*fc(8-i);\n    }\n    return num;\n}\ninline void swapp(int &a,int &b) \n{int c=a;a=b;b=c;}\nnode A(node),B(node),C(node);\n\nint main(){\n    for(int i=1;i<=8;i++)scanf(\"%d\",&MS[i]);\n    int head=0,tail=1;\n    for(int i=1;i<=9;i++)l[1].a[i-1]=i-1;\n    l[1].step=0;\n    l[1].father=0;//\u521d\u59cb\u5316 \n    do\n    {\n        head++;\n        int flag=1;\n        for(int i=1;i<=8;i++){\n            if(l[head].a[i]!=MS[i]){\n                flag=0;break;\n            }\n        }\n        if(flag){\n            printf(\"%d\\n\",l[head].step);\n            print(l[head]);\n            return 0;\n        }\n        \n        for(int i=1;i<=3;i++){\n            node k;\n            if(i==1)k=A(l[head]);\n            if(i==2)k=B(l[head]);\n            if(i==3)k=C(l[head]);\n            int kk=KT(k);\n            if(!b[kk]){\n                b[kk]=1;\n                tail++;\n                l[tail]=k;\n                l[tail].step++;\n                l[tail].father=head;//\u8bb0\u5f55\u8be5\u72b6\u6001\u7684\u524d\u9a71\uff08\u524d\u4e00\u6b65\uff09 \n                l[tail].c=i+'A'-1;\n            }\n        }\n    }while(head<tail);//bfs\u7684\u677f\u5b50 \n    printf(\"0\");\n    return 0;\n}\nnode A(node x){\n    for(int i=1;i<=4;i++)\n        swapp(x.a[i],x.a[9-i]);\n    return x;\n}\nnode B(node x){\n    for(int i=4;i>=2;i--){\n        swapp(x.a[i-1],x.a[i]);\n        swapp(x.a[9-i],x.a[10-i]);\n    }\n    return x;\n}\nnode C(node x){\n    swapp(x.a[3],x.a[2]);\n    swapp(x.a[7],x.a[6]);\n    swapp(x.a[2],x.a[6]);\n    return x;//\u9898\u76ee\u6240\u8bf4\u4e09\u79cd\u53d8\u6362 \n}\n```",
        "postTime": 1500888820,
        "uid": 47641,
        "name": "fdfdf",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\n\u6ca1\u770b\u8fc7\u9898\u7684\u7ae5\u978b\u8bf7\u53bb\u770b\u4e00\u4e0b\u9898-->[P2730 \u9b54\u677f Magic Squares](https://www.luogu.org/problemnew/show/P2730)\n\n\u4e0d\u4e86\u89e3\u5eb7\u6258\u5c55\u5f00\u7684\u8bf7\u6765\u8fd9\u91cc-->[\u6211\u8fd9\u91cc](https://rpdreamer.blog.luogu.org/p2524)\n\n## \u5e7f\u544a\uff1a [\u5b89\u5229blog](https://www.luogu.org/blog/RPdreamer/#)\n\n\u81f3\u4e8e\u8fd9\u9898**\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u5eb7\u6258\u5c55\u5f00**?~~(\u778e\u8bf4\u65f6\u95f4\u5230.~~\n\n\u56e0\u4e3a\u53ea\u67098\u4e2a\u6570\u5b57,\u4e14\u53ea\u67091~8\u8fd98\u4e2a\u6570\u5b57,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6700\u591a\u60c5\u51b5\u67098\uff01=40320\u4e2a.\n\n\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5f00\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e9b\u72b6\u6001\u5e76\u4e14\u8bb0\u5f55\u8fd9\u4e9b\u7b54\u6848.\n\n\u5eb7\u6258\u5c55\u5f00\u7684\u4f5c\u7528\u5c31\u662f**\u628a\u8fd9\u4e9b\u6392\u5217\u6620\u5c04\u6210\u4e00\u4e2a\u6392\u540d**.\n\n\u5982\u679c\u6211\u4eec\u5b58\u50a8\u6392\u5217,\u90a3\u6781\u9650\u60c5\u51b5\u5e94\u8be5\u662f87654321,\u5f88\u5bb9\u6613\u5c31\u70b8\u6389\u7684.\n\n\u800c\u6620\u5c04\u6210\u6392\u540d\u7684\u8bdd,\u6211\u4eec\u5f00\u7684\u6781\u9650\u53ea\u670940320,\u5927\u7ea6\u662f1/2173\u7684\u7a7a\u95f4.\n\n\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u53bb\u5b58\u50a8\u72b6\u6001.\n\n\u5373\n\t \n    vis[i]\u4ee3\u8868\u6392\u540d\u4e3ai\u7684\u6392\u5217\u5b58\u5728\n    to[i]\u4ee3\u8868\u4ece\u521d\u72b6\u6001\u5230\u8fbe\u6392\u540d\u4e3ai\u7684\u72b6\u6001\u7684\u64cd\u4f5c\u5e8f\u5217.//\u8981\u5f00\u6210string\u7c7b\u578b.\n\n\n**\u6c42\u89e3\uff1a**\n\n\u90a3\u4e48\u5982\u4f55\u6c42\u89e3\u5462\uff1f\n\n\u5bf9\u4e8e\u521d\u72b6\u6001{1,2,3,4,5,6,7,8}\u662f\u4e0d\u53d8\u7684,\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528bfs\u9884\u5904\u7406\u51fa\u6765\u5176\u4ed6\u72b6\u6001.\n\n\u800c\u8981\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f,\u6211\u4eec\u53ef\u4ee5\u5148\u5c1d\u8bd5\u8fdb\u884cA\u64cd\u4f5c,B\u64cd\u4f5c,C\u64cd\u4f5c\u5373\u53ef\u3002\u5176\u4ed6\u64cd\u4f5c\u5c31\u548c\u666e\u901a\u7684bfs\u5dee\u4e0d\u591a\u4e86\u3002\n\n\u5bf9\u64cd\u4f5c\u4e4b\u540e\u7684\u5e8f\u5217,\u6211\u4eec\u53bb\u6c42\u4e00\u4e0b\u4ed6\u7684\u6392\u540d,\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230 \u53d8\u6210\u4ed6\u7684\u64cd\u4f5c\u5e8f\u5217.\u628a\u64cd\u4f5c\u5e8f\u5217\u5b58\u50a8\u8fdbto[]\u6570\u7ec4\u5373\u53ef\u3002\n\n**ps:\u5b57\u7b26\u4e32string\u7c7b\u578b\u652f\u6301\u62fc\u63a5\u64cd\u4f5c**\n\n\u800c\u6211\u4eec**\u4e0d\u8981\u5fd8\u8bb0\u628a\u5e8f\u5217\u8fd8\u539f**\u3002\n\n\u5373\u6539\u53d8\u4e00\u4e2a\u5e8f\u5217\u6709\u4e09\u79cd\u64cd\u4f5c,\u6211\u4eec\u4e0d\u80fd\u8fde\u7eed\u8fdb\u884cA,B,C\u64cd\u4f5c,\u9700\u8981\u5bf9\u5f53\u524d\u7684\u5e8f\u5217\u64cd\u4f5c.\n\n\u56e0\u6b64\u5c31\u9884\u5904\u7406\u51fa\u6765\u4e86\u3002\n\n**\u89e3\u51b3\uff1a**\n\n\u7136\u540e\u6211\u4eec\u5982\u4f55\u8f93\u5165\uff1f(\u8fd9\u91cc\u5361\u4e86\u597d\u4e45\u7684QwQ\n\ngetchar()\u53ef\u4ee5\u8bfb\u4e00\u5207\u5b57\u7b26~~(\u5e94\u8be5\u662f~~\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5**\u6bcf\u6b21\u653e\u4e00\u4e2agetchar()**!\n\n\u800c\u53bb\u4e00\u4f4d\u4e00\u4f4d\u7684\u5b58\u50a8\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u7684\u89e3\u51b3\u8fd9\u4e2a\u9898\u5566\uff01\n\n\u90e8\u5206\u4ee3\u7801\u53c2\u8003-->[ @qiqi_starsky](https://blog.csdn.net/qiqi_skystar/article/details/49493357)\n\n-------------------\u4ee3\u7801---------------------\n\n```\n#include<bits/stdc++.h>\n#define IL inline\n#define RI register int\nusing namespace std;\nconst int fac[]={1,1,2,6,24,120,720,5040,40320,362880};//\u9636\u4e58\nstruct code\n{\n\tstring st,step;\n}s,ss;\nstring to[666666];\nbool vis[666666];\nIL int Contor(string &s)//\u8fd9\u91cc\u672c\u5e94\u8be5\u4e0d\u52a0&\u5c31\u53ef\u4ee5\u6b63\u786e\u7684.\n\t\t\t\t\t\t//\u4f46\u4e0d\u52a0\u4f1aWa\n                        //\u5e94\u8be5\u662f\u4f60\u8c37\u8bc4\u6d4b\u673a\u7684\u9505.\n                        //\u5df2\u7ecf\u5c1d\u8bd5\u8fc7\u5728bzoj\u63d0\u4ea4,\u4e0d\u52a0&\u662f\u53ef\u4ee5\u8fc7\u7684\n{\n    int ans=0;\n    for(RI i=0;i<8;i++)\n    {\n        //std::cout<<ans<<std::endl;\n        int smaller=0;\n        for(RI j= i+1 ;j<8;j++)\n        {\n            if(s[i] > s[j])smaller++;\n        }\n        ans += smaller*fac[8-i-1];\n    }\n    return ans+1;\n}\nIL void A(string &s)\n{\n\tfor(RI i=0;i<4;i++)\n\t\tswap(s[i],s[8-i-1]);\n}\nIL void B(string &s)\n{\n\tint t=s[3];\n\tfor(RI i=3;i>=1;i--)\n\t\ts[i]=s[i-1];\n\ts[0]=t;\n\tint tt=s[4];\n\tfor(RI i=4;i<=6;i++)\n\t\ts[i]=s[i+1];\n\ts[7]=tt;\n}\nIL void C(string &s)\n{\n    int t=s[6];\n    s[6]=s[5];\n    s[5]=s[2];\n    s[2]=s[1];\n    s[1]=t;\n}\n\n/*\n1 2 3 4\n5 6 7 8\n\u2193 \u2193 \u2193 \u2193\n1 7 2 4\n8 6 3 5\n*/\nIL void bfs()\n{\n\tstd::queue<code>q;\n\ts.st=\"12345678\";\n\ts.step=\"\";\n\tq.push(s);\n\tvis[Contor(s.st)]=true;\n\twhile(!q.empty())\n\t{\n\t\ts=q.front();q.pop();\n\t\tss=s;\n\t\tA(ss.st);//A\u64cd\u4f5c\n\t\tint cnt=Contor(ss.st);//\u5bf9\u4e8e\u6539\u53d8\u7684\u64cd\u4f5c\u5e8f\u5217\u6c42\u51fa\u4ed6\u7684\u6392\u540d\n\t\tif(!vis[cnt])\n\t\t{\n\t\t\tss.step+=\"A\";\n\t\t\tto[cnt]=ss.step;//\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f4\u63a5\u6574\u4e2a\u8d4b\u8fc7\u53bb\n\t\t\tq.push(ss);//\u628a\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u653e\u8fc7\u53bb,\u63a5\u4e0b\u6765\u6269\u5c55\n\t\t\tvis[cnt]=true;//\u6807\u8bb0\n\t\t}\n\t\tss=s;//\u8fd8\u539f\u7684\u64cd\u4f5c\uff01\uff01\uff01\u5f88\u91cd\u8981\uff01\n\t\tB(ss.st);//B\u64cd\u4f5c\n\t\tcnt=Contor(ss.st);\n\t\tif(!vis[cnt])\n\t\t{\n\t\t\tss.step+=\"B\";\n\t\t\tto[cnt]=ss.step;\n\t\t\tq.push(ss);\n\t\t\tvis[cnt]=true;\n\t\t}\n\t\tss=s;\n\t\tC(ss.st);//C\u64cd\u4f5c\n\t\tcnt=Contor(ss.st);\n\t\tif(!vis[cnt])\n\t\t{\n\t\t\tss.step+=\"C\";\n\t\t\tto[cnt]=ss.step;\n\t\t\tq.push(ss);\n\t\t\tvis[cnt]=true;\n\t\t}\n\t}\n}\nint main()\n{\n\tbfs();\n\tstring str;\n\tcin>>str[0];getchar();cin>>str[1];getchar();\n    cin>>str[2];getchar();cin>>str[3];getchar();\n    cin>>str[4];getchar();cin>>str[5];getchar();\n    cin>>str[6];getchar();cin>>str[7];getchar();\n    //\u8fd9\u8f93\u5165\u5389\u5bb3\u4e0d\u5389\u5bb3\uff01\n\tint cnt=Contor(str);\n\tcout<<to[cnt].length()<<endl;//\u5b57\u7b26\u4e32\u7528.length()\n\tcout<<to[cnt]<<endl;\n}\n```\n**\u540e\u8bdd**\n\n\u5982\u679c\u7ed9\u5b9a\u7684\u521d\u59cb\u5e8f\u5217\u4e0d\u662f{1,2,3,4,5,6,7,8}\u600e\u4e48\u529e?\n\n\u628a\u521d\u59cb\u5e8f\u5217\u770b\u6210{1,2,3,4,5,6,7,8}\u5373\u53ef\n\n\n## Upd\n\n**2018.09.03**\n\n**\u56de\u6765\u586b\u5751**\n\n\u5f53\u6211\u4eec\u7684\u521d\u59cb\u5e8f\u5217\u4e0d\u662f{1,2,3,4,5,6,7,8}\u8be5\u600e\u4e48\u505a\uff1f\n\n    \u4f8b\u5982\uff1a   \u778e\u51fa\u7684\u4f8b\u5b50emmmm\n     \u521d\u59cb\u72b6\u6001\uff1a65783241\u2014\u2014>12345678\n     \u5bf9\u5e94\u4f4d\u7f6e\u5f97\u5230\u8fd9\u79cd\u72b6\u6001\u2193\n     \u7ec8\u6b62\u72b6\u6001\uff1a13486572\u2014\u2014>85741236\n\u66f4\u8be6\u7ec6\u4e00\u70b9\u2193\n\n\u770b\u597d\u5982\u4f55\u5bf9\u5e94\u3002\n       \n      \u521d\u72b6\u6001 6 5 7 8 3 2 4 1\n             \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193\n      \u5bf9\u5e94\u4e3a 1 2 3 4 5 6 7 8\n      \u5373\u6211\u4eec\u8981\u628a\u60f3\u5f97\u5230\u7684\u72b6\u6001\n            1 3 4 8 6 5 7 2\n      \u7528\u4e0a\u9762\u7684\u5bf9\u5e94\u5173\u7cfb\u8f6c\u5316\n      \n  **\u8fc7\u7a0b\u2193**\n  \n         1 \u53d1\u73b0 1->8\n         3 \u53d1\u73b0 3->5\n         4 \u53d1\u73b0 4->7\n         8 \u53d1\u73b0 8->4\n         6 \u53d1\u73b0 6->1\n         5 \u53d1\u73b0 5->2\n         7 \u53d1\u73b0 7->3\n         2 \u53d1\u73b0 2->6\n      \u6700\u7ec8\u5f97\u52308 5 7 4 1 2 3 6\n\u5982\u679c\u4e0d\u7406\u89e3,\u8bf7\u4ed4\u7ec6\u518d\u770b\u4e00\u4e0b\u3002\n\n\u8fd9\u6837\u6211\u4eec\u6c42\u89e3{6,5,7,8,3,2,4,1}\u5230{1,3,4,8,6,5,7,2}\u7684\u64cd\u4f5c,\n\n\u5c31\u8f6c\u53d8\u4e3a\u4e86{1,2,3,4,5,6,7,8}\u5230{8,5,7,4,1,2,3,6}\u7684\u64cd\u4f5c.\n\n\u4ee3\u7801\u5b9e\u73b0\u8f6c\u5316\u2193(\u5c1d\u8bd5\u7406\u89e3\u4e00\u4e0b,~~\u61d2\u5f97\u7801\u5b57\u4e86 emmm~~\n```cpp\n for (int i=0; i<8 ; i++)\n    num[s[i]-'0']=i+1;\n //\u770b\u770b\u6211\u4eec\u7684\u679a\u4e3e,\u6240\u4ee5\u9700\u8981i+1\u5f97\u52301,2,3.....8\n //get\u5173\u7cfb\u2191.s\u5b58\u50a8\u521d\u72b6\u6001\n \n //\u8f6c\u5316\u5173\u7cfb\u2193.str\u5b58\u50a8\u672b\u72b6\u6001\n for (int i=0; i<8 ; i++)\n \tstr[i]=num[str[i]-'0']+'0';\n```\n\u5982\u679c\u6709\u65b0\u7684\u77e5\u8bc6,\u6211\u8fd8\u4f1a\u6765Upd\u7684\n\n**~~(\u9003~~**\n\n## Upd:\n\n**2018.09.05**\n\n\u5173\u4e8e**\u5eb7\u6258\u5c55\u5f00\u90a3\u91cc\u7684\u5b57\u7b26\u4e32\u662f\u5426\u9700\u8981\u52a0&**\u4e0d\u77e5\u9053\u662f\u5426\u4f1a\u6709\u7591\u95ee?\n\n\u611f\u8c22[@cellur925](https://www.luogu.org/space/show?uid=60124)\n\u7684\u63d0\u95ee\n\n\u5df2\u7ecf\u5728bzoj\u5c1d\u8bd5\u4e0d\u52a0&,\u662f\u53ef\u4ee5AC\u7684.\n\n\u5e76\u901a\u8fc7\u5728\u6211\u8c37\u4e0b\u8f7d\u6570\u636e\u5e76\u5c1d\u8bd5debug,\u53d1\u73b0\u8f93\u51fa\u662f\u4e00\u6837\u7684.\n\nContor\u51fd\u6570\u5e76\u6ca1\u6709\u6d89\u53ca\u5230\u4fee\u6539\u539f\u4e32,\u56e0\u6b64\u4e0d\u52a0&\u5e94\u8be5\u662f\u6b63\u786e\u7684.\n\n~~\u611f\u89c9\u5e94\u8be5\u662f\u4f60\u8c37\u8bc4\u6d4b\u673a\u7684\u9505~~\n\n\u800c\u5176\u4ed6A,B,C\u64cd\u4f5c\u662f\u9700\u8981\u4fee\u6539\u539f\u4e32\u7684,\u9700\u8981\u52a0&.\n\nPS\uff1a\u52a0&\u662f\u53ef\u4ee5\u5f15\u7528\u53d8\u91cf\u7684.",
        "postTime": 1535855954,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u9053\u84dd\u9898\u2026\u2026~~\u597d\u50cf\u4e5f\u6ca1\u6709\u84dd\u7684\u7a0b\u5ea6~~\n\n## \u4e00\u7bc7\u65e0STL\u7684\u8d85\u5f31\u9898\u89e3\uff08\u5165\u95e8\u5199\u6cd5\u65e0\u8bef\u4e86QAQ\n\n### [\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2730)\n\n###### \u5f88\u7ecf\u5178\u7684\u4e00\u9053BFS\n\n#### \u8fd9\u662f\u521d\u59cb\u72b6\u6001\u3002\n\n![\u8fd9\u662f\u521d\u59cb\u72b6\u6001](http://media.openjudge.cn/images/upload/1475147151.png)\n\n### \u64cd\u4f5cA\n\n![qwq\u4fb5\u5220](http://media.openjudge.cn/images/upload/1475147420.png)\n\n### \u64cd\u4f5cB\n\n![qwq\u4fb5\u5220](http://media.openjudge.cn/images/upload/1475147463.png)\n\n### \u64cd\u4f5cC\n\n![qwq\u4fb5\u5220](http://media.openjudge.cn/images/upload/1475147491.png)\n\n#### \u601d\u8def1 \u4e0d\u4f7f\u7528cantor\u5c55\u5f00\u7684\u60c5\u51b5\n\n### 1. \u5bf9\u4e8e\u5b58\u50a8\u8fd9\u4e2a\u64cd\u4f5c\u5e8f\u5217\n- ~~\u4e00\u4e2a\u6ca1\u6709\u4ec0\u4e48\u7528\u7684\u7a7a\u95f4\u5c0f\u4f18\u5316~~\n#### ~~\uff08\u7136\u540e\u65f6\u95f4\u5c31\u70b8\u4e86\uff09~~\n\n- \u5b58\u50a8\u4e00\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u9700\u89811\u4e2aByte\u3002\u90a3\u4e48\u6211\u4eec\u5b58\u50a8\u4e00\u4e2a\u9b54\u677f\u5e8f\u5217\u65f6\uff0c\u5c31\u9700\u89818\u4e2aByte\u3002\n\n- \u9b54\u677f\u7684\u72b6\u6001\u67098\uff01=40320\u79cd\uff0c\u90a3\u6211\u4eec\u5728\u4e0d\u65ad\u7684\u5b58\u50a8\u8bb8\u591a\u65b0\u7684\u72b6\u6001\u65f6\uff0c\u9700\u8981\u9884\u5148\u5f00\u81f3\u5c118*40320\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\u3002\n\n- \u5982\u679c\u6211\u4eec\u4f7f\u7528int\u7c7b\u578b\u8fdb\u884c\u5b58\u50a8\uff0c\u6bcf\u4e2aint\u7c7b\u578b\u53ea\u9700\u89814Byte\uff0c\u90a3\u4e48\u5c31\u53ea\u9700\u89814*40320\u4e2a\u5b57\u8282\u3002~~\uff08\u4e5f\u6ca1\u4f18\u5316\u591a\u5c11\u554a\uff09~~\n\n### 2.\u8fdb\u884c\u6269\u5c55\n- \u5efa\u7acb\u4e00\u4e2a\u961f\u5217\uff0c\u521d\u59cb\u7684\u72b6\u6001\u4e3a\u961f\u5217[1][1]=12345678\n\n- \u63a5\u7740\u6211\u4eec\u5224\u65ad\uff0c\u5982\u679c\u521d\u59cb\u72b6\u6001\u5df2\u7ecf\u7b49\u4e8e\u76ee\u6807\u72b6\u6001\uff0c\u76f4\u63a5\u8f93\u51fa0\uff0c\u5373\u4e0d\u9700\u8981\u64cd\u4f5c\n\n- \u8fd9\u4e2a\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4e2a\u7a7a\u95f4\uff0c\u5206\u522b\u5b58\u50a8\u9b54\u677f\u7684\u72b6\u6001\uff0c\u9b54\u677f\u7684\u7236\u4eb2\u4f4d\u7f6e\uff08\u5c31\u662f\u73b0\u5728\u9b54\u677f\u7684\u72b6\u6001\u662f\u7531\u961f\u5217\u4e2d\u54ea\u4e2a\u4e0b\u6807\u7684\u72b6\u6001\u8fdb\u884c\u4e00\u6b21\u53d8\u5316\u800c\u6765\u7684\uff09\uff0c\u4ee5\u53ca\u9b54\u677f\u662f\u7531\u9b54\u677f\u7236\u4eb2\u72b6\u6001\u7ecf\u8fc7\u4ec0\u4e48\u64cd\u4f5c\u6765\u8fbe\u5230\u73b0\u5728\u72b6\u6001\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u79cd\u64cd\u4f5c\u7b80\u5199\u4e3a1\uff0c2\uff0c3\u3002\n\n- \u5bf9\u9b54\u677f\u72b6\u6001\u8fdb\u884c\u6269\u5c55\u3002\u5373\u5c06\u9b54\u677f\u5206\u522b\u8fdb\u884c\u4e09\u79cd\u64cd\u4f5c\u3002\n\n- PS\uff1a\u7531\u4e8e\u6211\u4eec\u5b58\u50a8\u4e86int\u7c7b\u578b\uff0c\u53ef\u4ee5\u624b\u63a8\u4e00\u4e0b\u4e09\u79cd\u64cd\u4f5c\u7684\u516c\u5f0f\u3002\u63a8\u8350\u53c2\u8003\u4e0a\u9762\u4e09\u5e45\u56fe\u7247\u3002\n\n- \u6bcf\u4e00\u79cd\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5224\u65ad\u73b0\u5728\u9b54\u677f\u72b6\u6001\u662f\u5426\u5728\u4e4b\u524d\u6709\u51fa\u73b0\u8fc7\u3002\uff08\u5224\u91cd\uff09\n\n- PS\uff1a\u5224\u91cd\u4e0d\u4f7f\u7528\u5eb7\u6258\u5c55\u5f00\uff0c\u5f0087654322\u5927\u7684\u6570\u7ec4\u5373\u53ef\u3002\u4eb2\u6d4b\u53ef\u8fc7\u3002\n\n- \u4e00\u65e6\u5224\u65ad\u5df2\u7ecf\u8fbe\u5230\u76ee\u6807\u72b6\u6001\uff0c\u8f93\u51fa\u3002\n\n### 3.\u8f93\u51fa\n- \u6211\u4eec\u5728\u961f\u5217\u4e2d\u5df2\u7ecf\u5b58\u50a8\u8fc7\u9b54\u677f\u7684\u7236\u4eb2\u4f4d\u7f6e\u3002\u73b0\u5728\u8981\u5229\u7528\u8fd9\u4e2a\u4f4d\u7f6e\u6765\u9006\u63a8\u6211\u4eec\u7684\u6b65\u9aa4\u3002\n\n- \u5efa\u7acb\u4e00\u4e2away\u6570\u7ec4\u3002\u4e0d\u65ad\u7684\u5b58\u50a8\u7236\u4eb2\u4f4d\u7f6e\u3002\n\n- \u9006\u5411\u8f93\u51fa\u3002\u8f93\u51fa\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u64cd\u4f5c\u3002\n\n- \u8be6\u60c5\u67e5\u770b\u4ee3\u7801\u3002\n\n## \u8bf7\u4ece\u53d8\u91cf\u5b9a\u4e49\u53ca\u4e3b\u51fd\u6570\u5f00\u59cb\u9605\u8bfb\n\n```cpp\n#include <cstdio>\n#include <cmath>//pow\u51fd\u6570\u7684\u5934\u6587\u4ef6\n\nint tl[100000][3],maxn=100000;//tl\u662f\u6211\u4eec\u5b58\u50a8\u72b6\u6001\u7684\u961f\u5217\u3002tl[i][1]\u662f\u6307\u7b2ci\u4e2a\u60c5\u51b5\u7684\u9b54\u677f\u72b6\u6001\uff0ctl[i][0]\u662f\u7b2ci\u4e2a\u60c5\u51b5\u7684\u7236\u4eb2\u4f4d\u7f6e\uff0ct[i][2]\u662f\u6307\u7b2ci\u4e2a\u60c5\u51b5\u7684\u7236\u4eb2\u7684\u64cd\u4f5c\uff08\u80fd\u5f97\u5230i\u60c5\u51b5\uff09\n\nint now=12345678,finish=0;//\u521d\u59cb\u72b6\u6001&\u76ee\u6807\u72b6\u6001\n\nint way[100000];//\u7528\u4e8e\u6700\u540e\u9006\u63a8\u8fc7\u7a0b\u7684\u65f6\u5019\u5b58\u50a8\u7236\u4eb2\u4f4d\u7f6e\n\nbool book[87654322]={};//\u5224\u91cd\uff08\u771f\u7684\u4e0d\u4f1aM\u53ef\u80fd\u662f\u56e0\u4e3a\u6700\u5f00\u59cb\u5b58int\n\n//\u4e0b\u9762\u4e09\u4e2a\u64cd\u4f5c\u51fd\u6570\u90fd\u5f88\u4e71\uff0c\u5efa\u8bae\u624b\u7b97\u516c\u5f0f<qwq>\n\nvoid A(int j)//A\u64cd\u4f5c\uff01\n{\n\tint qwq=0;\n\tfor (int i=8;i>=1;i--)\n\t{\n\t\tqwq+=((tl[j][1]%10)*pow(10,i-1));\n\t\ttl[j][1]/=10;\n\t}\n\ttl[j][1]=qwq;\n\treturn;\n}\n\n\nvoid B(int j)//B\u64cd\u4f5c\uff01\n{\n\ttl[j][1]=(tl[j][1]%100000/10000)*10000000+(tl[j][1]/100000)*10000+tl[j][1]%1000*10+tl[j][1]%10000/1000;\n}\n\n\nvoid C(int j)//C\u64cd\u4f5c\uff01\n{\n\ttl[j][1]=tl[j][1]-((tl[j][1]/100000)%100)*100000-(tl[j][1]%1000)/10*10+tl[j][1]/1000000%10*100000+tl[j][1]/100000%10*100+tl[j][1]/100%10*10+tl[j][1]/10%10*1000000;//2367->7236\n}\n\n///////////////////////////////////\u5206\u5272\u7ebf\u6b63\u5e38\u9605\u8bfb\n\n\nbool look_for(int n)//\u5224\u91cd\uff0c\u5373\u65b0\u60c5\u51b5\u7684\u6a21\u7248\u72b6\u6001\u6709\u6ca1\u6709\u5728\u961f\u5217\u4e2d\u51fa\u73b0\u8fc7\n{\n\treturn book[ tl[n][1] ];\n}\n\n\n\nbool found(int w)//\u5224\u65ad\u662f\u5426\u8fbe\u5230\u76ee\u6807\u72b6\u6001\n{\n\tif ( tl[w][1] == finish )\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\nvoid print(int zt)//\u6253\u5370\u51fd\u6570\u3002zt\u662f\u6307\u961f\u5217\u7b2czt\u79cd\u60c5\u51b5\n{\n\tif ( zt == 1 )//\u8bf7\u8054\u7cfbstart\u51fd\u6570\u7684\u7b2c\u4e00\u53e5\u201cif\u2026\u2026\u201d\u7406\u89e3\n\t{\n\t\tprintf(\"0\");\n\t\treturn;\n\t}\n\tint k=0,z=zt;\n\twhile (z>0)//\u9006\u63a8\uff01\u6bd4\u8f83\u96be\u7406\u89e3\u53ef\u4ee5\u8bd5\u7740\u624b\u753b\u4e00\u4e0b\u793a\u610f\n\t{\n\t\tk++;\n        \n\t\tway[k] = z;\n\t\tz = tl[z][0];\n\t}\n\tprintf(\"%d\\n\",k-1);\n\tfor (int i=k-1;i>0;i--)\n\t{\n\t\tz = way[i];\n        \n\t\tprintf(\"%c\",tl[z][2]+'A'-1);//\u8f6c\u5316\u4e3a\u5b57\u7b26\u8f93\u51fa\uff01\u539f\u672c\u662f\u7528123\u8868\u793aABC\u64cd\u4f5c\n\t}\n\treturn;\n}\nvoid start()//\u5f00\u59cb\u5566\uff01\n{\n\tif ( found(1) )//\u5982\u679c\u521d\u59cb\u72b6\u6001==\u76ee\u6807\u72b6\u6001\n\t{\n\t\tprint(1);\n        \n\t\treturn;\n\t}\n\tint i=1,j=2;\n\twhile ( i<j && j<maxn )//\u4ecd\u6709\u72b6\u6001\u53ef\u4ee5\u6269\u5c55&\u672a\u6ea2\u51fa\u4e0a\u9650\n\t{\n\t\tfor (int k=1;k<=3;k++)\n\t\t{\n        \n\t\t\ttl[j][1]=tl[i][1];//\u9884\u5165\u961f!\n            \n            \n\t\t\tif (k==1){  A(j);  }//A\u64cd\u4f5c\n            \n\t\t\tif (k==2){  B(j);  }//B\u64cd\u4f5c\n            \n\t\t\tif (k==3){  C(j);  }//C\u64cd\u4f5c\n            \n            \n\t\t\tif ( ! look_for(j) )//\u5982\u679c\u8fd9\u79cd\u72b6\u6001\u5728\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\n\t\t\t{\n            \n\t\t\t\ttl[j][0]=i;//tl[j][0]\uff1a\u6211\u7236\u4eb2\u53ebi\uff01\n                \n\t\t\t\ttl[j][2]=k;//tl[j][2]:\u6211\u662fi\u548ck\u7684\u5b69\u5b50\uff01\n                \n                \n                if (found(j))//\u5982\u679c\u5df2\u7ecf\u8fbe\u5230\u4e86\u76ee\u6807\u72b6\u6001\n\t\t\t\t{\n\t\t\t\t\tprint(j);//\u8f93\u51fa\uff01\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {  book[ tl[j][1] ]=1;  j++;  }//\u6807\u8bb0\u8fd9\u79cd\u72b6\u6001\u5df2\u7ecf\u51fa\u73b0\u8fc7&\u961f\u5c3e+1\n\t\t\t}\n\t\t}\n\t\ti++;//\u4e00\u79cd\u60c5\u51b5\u7684\u6269\u5c55\u5b8c\u6bd5\uff0c\u961f\u9996+1\n\t}\n}\nint main()\n{\n\tfor (int i=8;i>=1;i--)//\u8f93\u5165\uff0c\u8f6c\u6362\u6210int\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tfinish+=(x*pow(10,i-1));\n\t}\n    \n\ttl[1][1]=now; tl[1][0]=0;//\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u72b6\u6001\u5c31\u662f\u521d\u59cb\u72b6\u6001now\uff0cta\u7684\u7236\u4eb2\u6ca1\u6709\u4e86\u2026\u2026\n    \n\tstart();//\u5f00\u59cb\u5427\uff01\n    \n\treturn 0;//\u5706\u6ee1\u7684\u7ed3\u675f\u2026\u2026\n}\n```\n#### \u601d\u8def2 cantor\u5c55\u5f00\n\n### \u4ec0\u4e48\u662f\u5eb7\u6258\u5c55\u5f00\uff1f\n\n- \u5bf9\u4e8en\u7684\u4e00\u4e2a\u6392\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5eb7\u6258\u5c55\u5f00\uff0c\u6620\u5c04\u51fa\u8fd9\u4e2a\u6392\u5217\u5728n\u7684\u5168\u6392\u5217\u4e2d\u5360\u7b2c\u51e0\u5c0f\u3002\n\n- \u90a3\u4e48\u6211\u4eec\u672c\u6765\u4f7f\u752887654322\u5927\u7684\u6570\u7ec4\u6765\u6807\u8bb0\u51fa\u73b0\u8fc7\u7684\u72b6\u6001\uff0c\u8fd9\u65f6\u5c31\u53ea\u9700\u8981\u5f008\uff01=40320\u5927\u7684\u6570\u7ec4\u8fdb\u884c\u6807\u8bb0\u3002\n\n- \u6ce8\u610f\uff01\u4f7f\u7528\u5eb7\u6258\u5c55\u5f00\u9700\u8981\u5c06\u6570\u4f4d\u4e00\u4f4d\u4f4d\u5206\u79bb\u3002\u8bf7\u614e\u91cd\u8003\u8651\u8981\u4f7f\u7528\u4ec0\u4e48\u7c7b\u578b\u5b58\u50a8\u3002\u63a8\u8350\u4f7f\u7528\u5b57\u7b26\u5b58\u50a8\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u6b63\u5411\u5eb7\u6258\u5c55\u5f00\u7684\u4ee3\u7801\u3002 \u5177\u4f53\u53ef\u4ee5[\u6233\u8fd9\u91cc](https://baike.baidu.com/item/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/7968428?fr=aladdin)\n```cpp\nint factorial[11]={1,1,2,6,24,120,720,5040,40320,362880};//0-10\u7684\u9636\u4e58\uff01\n\n\nint cantor(int a[]){//\u6b63\u5411\u5eb7\u6258\u5c55\u5f00\uff0c\u6c42\u6392\u5217a[]\u57281~8\u7684\u5168\u6392\u5217\u4e2d\u5360\u7b2c\u51e0\u5c0f\n\n    int ans=0,sum=0;\n    for(int i=1;i<=7;i++)//\u6700\u540e\u4e00\u4f4d\u4e0d\u7528\u8ba1\u7b97(0*0!) \n\t{\n        for(int j=i+1;j<=8;j++)//\u5bfb\u627e\u8fd9\u4e2a\u6392\u5217\u7684\u7b2ci\u4f4d\u7684\u540e\u9762\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8eta \n        {\n        \n        \tif(a[j]<a[i]) sum++;\n            \n        }\n        \n        ans+=sum*factorial[8-i];//ans+=sum*(8-1)! \n        \n        sum=0;//\u8ba1\u6570\u5f52\u96f6 \n    }\n    \n    \n    return ans+1;//\u8fd9\u91cc\u8ba1\u7b97\u7684ans\u662f\u6bd4a[]\u6392\u5217\u5c0f\u7684\u6392\u5217\u7684\u4e2a\u6570\uff0c\u6240\u4ee5a[]\u6392\u5217\u662f\u7b2cans+1\u5c0f\u7684\uff01 \n}\n```\n\u5176\u4f59\u7684\u601d\u8def\u57fa\u672c\u662f\u76f8\u540c\u7684\u3002**\u4e0d\u8fc7**\u5bf9\u4e8eABC\u4e09\u79cd\u64cd\u4f5c\u8bf7\u4f7f\u7528swap\u6765\u5b9e\u73b0\u3002\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3qwq \u6c42\u8fc7\u9e2d\n~~\u51c6\u5907\u88ab\u6b8b\u5fcd\u62d2\u7edd~~",
        "postTime": 1548827170,
        "uid": 135926,
        "name": "Kan_kiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "# \u6734\u7d20\u7684\u849f\u84bb\u89e3\u6cd5\n\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u662f\u4e00\u9053**\u5e7f\u641c\u9898**\uff08\u5047\u88c5\u5927\u7287\u4eec\u90fd\u4f1a\u5e7f\u641c ~~\u600e\u4e48\u53ef\u80fd\u4e0d\u4f1a~~\uff09\n\u90a3\u4e48\u672c\u9898\u7684\u5927\u4f53\u601d\u8def\u5c31\u660e\u786e\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u8010\u5fc3\u5730\u89e3\u51b3\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\u3002~~\u4e0d\u4f1a\u5eb7\u62d3QAQ~~\n\n- #### \u964d\u7ef4\u6253\u51fb\uff01\uff01\uff01\uff08~~\u6211\u4e0d\u77e5\u9053\u7231\u9171~~\uff09\n\u9b54\u677f\u539f\u672c\u662f2X4\u7684\u77e9\u9635\uff0c\u4f46\u4e00\u7ef4\u5904\u7406\u8d77\u6765\u4e00\u5b9a\u6bd4\u4e8c\u7ef4\u65b9\u4fbf\uff0c\u4e8e\u662f\u4fbf\u53ef\u4ee5\u964d\u7ef4\uff0c**\u4f46**\uff0c\u8981\u6ce8\u610f\u6280\u5de7\u3002\n\n  \u4ee5\u6837\u4f8b\u6765\u8bf4\uff0c\u62ec\u53f7\u91cc\u9762\u4ee3\u8868\u8fd9\u4e2a\u6570\u50a8\u5b58\u7684\u4e00\u7ef4\u6570\u7ec4\u7684\u4f4d\u7f6e\n\n| 2\uff08a1\uff09 | 6\uff08a2\uff09 | 8\uff08a3\uff09 | 4\uff08a4\uff09 |\n| :----------: | :----------: | :----------: | :----------: |\n| 5\uff08a5\uff09 | 7\uff08a6\uff09 | 3\uff08a7\uff09 | 1\uff08a8\uff09 |\n\u5177\u4f53\u5b9e\u73b0\u8bf7\u770b\u4ee3\u7801\uff1a\n```cpp\n for(int i=1;i<=8;i++){//\u57fa\u672c\u72b6\u6001\n    \tif(i<=4) sak[1].before[i]=i;\n    \tif(i>4) sak[1].before[i]=13-i;\n    }\n```\n\n```cpp\nfor(int i=1;i<=4;i++)//\u53cc\u5faa\u73af\u8f93\u5165\u76ee\u6807\u72b6\u6001\uff08\u771f~~\u6734\u7d20~~\uff09\n    \tscanf(\"%d\",&after[i]);\n    for(int i=8;i>=5;i--)\n    \tscanf(\"%d\",&after[i]);\n```\n- #### \u5224\u91cd\u95ee\u9898\n8\u4e2a\u6570\u6392\u5217\u7ec4\u5408\u4e00\u5b9a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u5b9a\u524d\u4e03\u4e2a\u6570\u5c31\u4e00\u5b9a\u80fd\u77e5\u9053\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8d85\u51fa\u5185\u5b58\u9650\u5236\u5566\u3002\u7136\u540e\u7528\u6807\u8bb0\u6570\u7ec4\u7ed9\u8fd9\u4e2a\u4e03\u4f4d\u6570\u6253\u4e2a\u6807\u8bb0\u3002\n```cpp\nint pan(int a[]){//\u81ea\u5b9a\u4e49pan\u51fd\u6570\u7528\u6765\u5224\u91cd \n\tint ans=0;\n\tfor(int i=7;i>=1;i--)\n\t\tans=ans*10+a[i];\n\treturn ans;\n}\n```\n- #### \u4e09\u79cd\u64cd\u4f5c\n\u65e0\u8111\u6a21\u62df\u3002\n- #### \u5408\u7406\u4f7f\u7528\u7ed3\u6784\u4f53\u4f7f\u4ee3\u7801\u4e0d\u590d\u6742\n- #### \u5c3d\u91cf\u4fdd\u8bc1\u5e7f\u641c\u6846\u67b6\u5b8c\u6574\n- #### \u5176\u4ed6\u7ec6\u8282\u95ee\u9898\uff08\u5404\u4f4ddalao\u4e00\u5b9a\u80fd\u81ea\u6211\u89e3\u51b3\uff09\n\n\u4e0b\u9762\u5c31\u662f~~\u5927\u5bb6\u671f\u5f85~~\u7684\u4ee3\u7801\u5566\uff0c\u795d\u5927\u5bb6\u9898\u9898AC\uff01\uff08~~\u4ee3\u7801\u521a\u597d100\u884c~~\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint after[9],ans,o,jishu;//after\u6570\u7ec4\u4e3a\u76ee\u6807\u72b6\u6001\uff0co\u548cjishu\u4e3a\u7d2f\u52a0\u5668\u8f85\u52a9\u5224\u65ad\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f \nbool fla[9000005],k;\nstruct sakura{//\u7ed3\u6784\u4f53 \n\tint before[9],f;char step;\n}sak[100086];\n\nint pan(int a[]){//\u81ea\u5b9a\u4e49pan\u51fd\u6570\u7528\u6765\u5224\u91cd \n\tint ans=0;\n\tfor(int i=7;i>=1;i--)\n\t\tans=ans*10+a[i];\n\treturn ans;\n}\n\nbool judge(int a[]){\n\tfor(int i=1;i<=8;i++)\n\t\tif(a[i]!=after[i])\n\t\t\treturn 0;\n\treturn 1;\n}\n\nvoid print(int a){//\u9012\u5f52\u8f93\u51fa \n\tif(sak[a].f!=0){\n\t\to++;\n\t\tprint(sak[a].f);\n\t}\n\tif(!sak[a].f) return;\n\tif(!k){//\u8f93\u51fa\u6b65\u6570 \n\t\tprintf(\"%d\\n\",o);\n\t\tk=1;\n\t}\n\tprintf(\"%c\",sak[a].step);\n\tjishu++;\n\tif(!jishu%60)//\u969460\u4e2a\u6362\u884c \n\t\tprintf(\"\\n\");\n}\nvoid bfs(){\n\tint h=0,t=1;sak[t].f=0;\n\twhile(h<t){\n\t\th++;\n\t\tfor(int i=1;i<=3;i++){//\u4fdd\u8bc1\u6846\u67b6\u5b8c\u6574 \n\t\t\tint bit[9];\n\t\t\tif(i==1){//A\u64cd\u4f5c \n\t\t\t\tfor(int i=1;i<=4;i++){\n\t\t\t\t\tbit[i]=sak[h].before[i+4];\n\t\t\t\t\tbit[i+4]=sak[h].before[i];\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\n\t\t\tif(i==2){//B\u64cd\u4f5c \n\t\t\t\tbit[1]=sak[h].before[4];bit[5]=sak[h].before[8];\n\t\t\t\tbit[2]=sak[h].before[1];bit[6]=sak[h].before[5];\n\t\t\t\tbit[3]=sak[h].before[2];bit[7]=sak[h].before[6];\n\t\t\t\tbit[4]=sak[h].before[3];bit[8]=sak[h].before[7];\n\t\t\t}\n\t\t\tif(i==3){//C\u64cd\u4f5c \n\t\t\t\tbit[1]=sak[h].before[1];\n\t\t\t\tbit[2]=sak[h].before[6];\n\t\t\t\tbit[3]=sak[h].before[2];\n\t\t\t\tbit[4]=sak[h].before[4];\n\t\t\t\tbit[5]=sak[h].before[5];\n\t\t\t\tbit[8]=sak[h].before[8];\n\t\t\t\tbit[7]=sak[h].before[3];\n\t\t\t\tbit[6]=sak[h].before[7];\n\t\t\t}\n\t\t\tif(!fla[pan(bit)]){\n\t\t\t\tt++;\n\t\t\t\tif(i==1) sak[t].step='A';\n\t\t\t\tif(i==2) sak[t].step='B';\n\t\t\t\tif(i==3) sak[t].step='C';\n\t\t\t\tfla[pan(bit)]=1;//\u6807\u8bb0 \n\t\t\t\tsak[t].f=h;//\u8bb0\u5f55\u7238\u7238 \n\t\t\t\tfor(int i=1;i<=8;i++)\n\t\t\t\t\tsak[t].before[i]=bit[i];\n\t\t\t\tif(ans==pan(bit)){\n\t\t\t\t\tprint(t);\n\t\t\t\t\texit(0);//\u4e07\u6076\u4e4b\u6e90\u7ed3\u675f\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n    for(int i=1;i<=8;i++){//\u964d\u7ef4\u6253\u51fb\uff01\uff01\uff01 \n    \tif(i<=4) sak[1].before[i]=i;\n    \tif(i>4) sak[1].before[i]=13-i;\n    }\n    fla[pan(sak[1].before)]=1;\n    for(int i=1;i<=4;i++)\n    \tscanf(\"%d\",&after[i]);\n    for(int i=8;i>=5;i--)\n    \tscanf(\"%d\",&after[i]);\n\tans=pan(after);\n    if(ans==pan(sak[1].before)){//\u7279\u5224\uff08\u8c8c\u4f3c\u5e76\u4e0d\u9700\u8981\uff09 \n    \tprintf(\"0\\n\");\n    \treturn 0;\n    }\n    bfs();//\u4e07\u6076\u4e4b\u6e90\u5f00\u59cb \n    return 0;\n}\n```",
        "postTime": 1535357744,
        "uid": 111674,
        "name": "Silent_E",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "**P\u515a\u9898\u89e3\u6765\u88ad\uff01**\n\n\u8bdd\u8bf4\u8fd9\u9053\u9898\u76ee\u6df1\u641c\u548c\u5bbd\u641c\u7684\u65f6\u95f4\u5dee\u597d\u5927\u554a\uff0c\u6df1\u641c\u53ea\u6709\u4e00\u4e2a\u70b9A\uff0c\u5176\u4ed6\u5168TLE\u4e86(\u53ef\u80fd\u662f\u6211\u6df1\u641c\u6b7b\u5faa\u73af\u4e86\u5427)\n\n\u6765\u770b\u4e00\u770b\u9898\u76ee\u5427\uff0c\u8fd9\u9053\u9898\u76ee\u4e00\u770b\u5c31\u662f\u641c\u7d22\uff0c\u4f46\u662f\u600e\u4e48\u5224\u91cd\u662f\u4e00\u4e2a\u95ee\u9898\uff0chash\u662f\u4e00\u79cd\u5f88\u4f18\u79c0\u7684\u5224\u91cd\u65b9\u6cd5\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u4e86BKDRHash\u3002\u542c\u8d77\u6765\u5f88\u9ad8\u5927\u4e0a\uff0c\u5176\u5b9e\u5f88\u7b80\u5355.\n\n```\nseed:=31; point:=0;\nfor i:=1 to length(s) do\n  point:=(point*seed+ord(s[i])) and $FFFF;\n```\n**\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684hash,\u51b2\u7a81\u5c11\uff0c\u70b9\u7d27\u51d1\uff0c\u800c\u4e14\u8fd8\u597d\u8bb0\u3002\u6bd4\u8d5b\u4e2d\u552f\u4e00\u8981\u6539\u7684\u5730\u65b9\u5c31\u662f\u540e\u9762and \u7684\u90e8\u5206\u3002$\u8868\u793a\u540e\u9762\u7684\u6570\u5b57\u662f16\u8fdb\u5236\u6570\uff0cand $FFFF\u5c31\u53ef\u4ee5\u628a\u6570\u636e\u8303\u56f4\u63a7\u5236\u57286\u4e07\u591a\u4ee5\u5185\uff0c\u800c\u8fd9\u9898\u7684\u72b6\u6001\u6570\u53ea\u67094\u4e07\u591a\uff0c\u53ef\u4ee5\u6ee1\u8db3\u3002    \u5176\u4ed6\u9898\u76ee\u53ef\u4ee5\u6839\u636e\u72b6\u6001\u6570\u6539\u53d8F\u7684\u4e2a\u6570\uff0c\u8fd9\u4e2a\u8981\u81ea\u5df1\u7b97**\n\n\u7136\u540e\u5c31\u662f\u5bbd\u641c\u4e86,\u76f8\u4fe1\u6765\u505a\u8fd9\u9053\u9898\u76ee\u7684\u4eba\u90fd\u4f1a\uff0c\u5c0f\u5fc3\u4e00\u70b9\u90fd\u53ef\u4ee5\u8fc7\u4e86\uff0c\u8fd8\u6709\u4e00\u4e2a\u96be\u70b9\u662f\u600e\u4e48\u8f93\u51fa\u65b9\u6848\uff0c\u6211\u8fd9\u91cc\u7528pro\u8868\u793a\u8fd9\u4e2a\u72b6\u6001\u662f\u7531\u961f\u5217\u91cc\u7b2c\u51e0\u4e2a\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u7684\uff0cnow\u8868\u793a\u8f6c\u79fb\u5230\u8fd9\u4e2a\u72b6\u6001\u7528\u4e86\u54ea\u4e00\u79cd\u65b9\u6848\uff0c\u7136\u540e\u9012\u5f52\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\u732e\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff0cdalao\u4eec\u968f\u4fbf\u770b\u770b\u5427\n```\nvar\n  head,tail,seed:longint;\n  ans,a2,a1,i,j,m,n,k,p:longint;\n  hash:array[0..70000]of string;\n  a5,s,aim,t,a4:string;\n  now:array[0..70000]of char;\n  f:array[0..70000]of string;\n  num,pro:array[0..70000]of longint;\nfunction ha(t:string):longint;//hash\nvar\n  point:longint;\nbegin\n  point:=0;\n  for i:=1 to 8 do\n    point:=(point*seed+ord(t[i])) and $FFFF;\n  while (hash[point]<>'%')and(hash[point]<>t) do\n    begin\n      inc(point);\n      if point=70000 then point:=0;\n    end;\n  exit(point);\nend;\nbegin\n  seed:=31;\n  for i:=1 to 8 do\n    begin\n      read(a1);\n      aim:=aim+chr(a1+48);\n    end;\n  s:='12345678';\n  for i:=0 to 70000 do\n    hash[i]:='%';\n  a2:=ha(s);\n  hash[a2]:=s;\n  if s=aim then//\u7279\u5224\u4e00\u5f00\u59cb\u5c31\u76f8\u540c\u7684\u60c5\u51b5(\u7b2c2\u4e2a\u70b9\u5c31\u662f\u8fd9\u6837\u7684)\n    begin\n      writeln('0');\n      exit; \n    end;\n  head:=0; tail:=1; f[1]:=s; num[1]:=0;//\u4ee4\u4eba\u7a92\u606f\u7684\u5bbd\u641c\n  while head<tail do\n    begin\n      inc(head);\n      a4:='';\n      a4:=f[head][8]+f[head][7]+f[head][6]+f[head][5]+f[head][4]\n      +f[head][3]+f[head][2]+f[head][1];\n      p:=ha(a4);\n      if hash[p]='%' then\n        begin\n          hash[p]:=a4;\n          inc(tail); f[tail]:=a4; num[tail]:=num[head]+1;\n          now[tail]:='A'; pro[tail]:=head;\n          if a4=aim then\n            begin\n              ans:=tail; break;\n            end;\n        end;\n\n      a4:='';\n      a4:=f[head][4]+f[head][1]+f[head][2]+f[head][3]+f[head][6]\n      +f[head][7]+f[head][8]+f[head][5];\n      p:=ha(a4);\n      if hash[p]='%' then\n        begin\n          hash[p]:=a4;\n          inc(tail); f[tail]:=a4; num[tail]:=num[head]+1;\n          now[tail]:='B'; pro[tail]:=head;\n          if a4=aim then\n            begin\n              ans:=tail; break;\n            end;\n        end;\n\n      a4:='';\n      a4:=f[head][1]+f[head][7]+f[head][2]+f[head][4]+f[head][5]\n      +f[head][3]+f[head][6]+f[head][8];\n      p:=ha(a4);\n      if hash[p]='%' then\n        begin\n          hash[p]:=a4;\n          inc(tail); f[tail]:=a4; num[tail]:=num[head]+1;\n          now[tail]:='C'; pro[tail]:=head;\n          if a4=aim then\n            begin\n              ans:=tail; break;\n            end;\n        end;\n    end;\n  writeln(num[ans]);\n  a5:='';\n  while ans<>1 do\n    begin\n      a5:=a5+now[ans];\n      ans:=pro[ans];\n    end;\n  for i:=length(a5) downto 1 do\n    write(a5[i]);\nend.\n\n```\ndalao\u4eec\u7ed9\u4e2a\u8d5e\u5457\uff0c\u8c22\u8c22",
        "postTime": 1533129496,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "# \u4e0d\u4f1a\u5eb7\u62d3\u7684\u540c\u5b66\u4eec\u770b\u8fd9\u91cc\uff01\uff01  \n### \u8868\u793a\u4f5c\u8005\u7684\u670b\u53cb\u90fd\u592a\u5389\u5bb3\u4e86\uff0c\u7ecf\u8fc7\u4e3a\u65f630\u5206\u949f\u7684\u601d\u8003\u5c31\u60f3\u51fa\u4e86\u5eb7\u62d3\u5c55\u5f00\uff08\u4ed6\u5728\u6b64\u4e4b\u524d\u90fd\u8fd8\u4e0d\u4e86\u89e3\u5eb7\u62d3[@wasa855](https://www.luogu.org/space/show?uid=70780)\uff09  \n### \u4f46\u4f5c\u8005\u662f\u4e00\u4e2a\u4e0d\u4f1a\u5eb7\u62d3\u7684\u849f\u84bb\uff0c\u6240\u4ee5\u600e\u4e48\u529e\u5462\uff1f  \n### \u672c\u9898\u5341\u5206\u660e\u663e\uff0c\u5982\u679c\u75288\u8fdb\u5236\u7684\u6743\u503c\u8bb0\u5f55\uff0c\u8fdb\u884c\u5224\u91cd\uff0c\u6709\u767e\u5206\u4e4b80\u7684\u51e0\u7387MLE\uff08\u53ef\u80fd\u66f4\u9ad8\uff0c\u4f5c\u8005\u6ca1\u6709\u5c1d\u8bd5\u8fc7\uff09\u3002  \n### \u6240\u4ee5\u4f5c\u8005\u5c31\u60f3\u51fa\u4e86\u4e00\u79cd\u795e\u5947\u7684\u65b9\u6cd5\uff0c\u800c\u5e94\u7528\u7684\u77e5\u8bc6\uff0c\u4ec5\u4ec5\u662f\uff1a\n## \u4e8c\u5206\u67e5\u627e  \n### \u4e0b\u9762\u5c31\u8fdb\u5165\u6b63\u9898\uff0c\u5982\u4f55\u4e8c\u5206\u5462\uff1f  \n### \u5f53\u7136\u662f~~\u6253\u4e00\u5f20\u5de8\u8868~~\u4e86  \n### \u8d34\u4ee3\u7801\uff1a  \n```cpp\nfor(int i=1;i<=8;++i)\n{\n    s[l].a[i]=i;\n}\nfor(int i=1;i<=40320;++i)\n{\n    for(int j=1;j<=8;++j)\n    {\n        f[i].a[j]=s[l].a[j];\n    }\n    next_permutation(s[l].a+1,s[l].a+1+8);\n}\n```  \n### \u4f20\u8bf4\u4e2d\u7684\u5de8\u8868\uff01\uff01\uff01  \n### \u773c\u5c16\u7684\u540c\u5b66\u53ef\u80fd\u53d1\u73b0\u4e86\uff0cnext_permutation\u662f\u4ec0\u4e48\u5462\uff1f  \n### \u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u795e\u5947\u7684\u5168\u6392\u5217\u51fd\u6570\uff0c\u53ef\u4ee5\u5e2e\u4f60\u6c42\u4e0b\u4e00\u4e2a\u6392\u5217\uff0c\u662fC++\u7684STL\u5e93< algorithm >\u4e2d\u7684\u51fd\u6570\u3002\uff08\u8bf7\u5927\u5bb6\u6253\u5f00P1088\uff0c\u7528\u8fd9\u4e2a\u51fd\u6570\u6c34\u8fc7\uff09  \n### \u518d\u8fdb\u884c\u4e8c\u5206\uff1a  \n```cpp\nint big_small(int a[],int b[])\n{\n    for(int i=1;i<=8;++i)\n    {\n        if(a[i]>b[i])\n        return 1;\n        if(a[i]<b[i])\n        return -1;\n    }\n    return 0;\n}\nbool used(int a[])\n{\n    int l=1,r=40320,mid,t;\n    while(l<=r)\n    {\n        mid=(l+r)/2;\n        t=big_small(f[mid].a,a);\n        if(t>0)\n        r=mid-1;\n        if(t<0)\n        l=mid+1;\n        if(t==0)\n        break;\n    }\n    if(f[mid].n==false)\n    {\n        f[mid].n=true;\n        return false;\n    }\n    else\n    return true;\n}\n```  \n### \u4ee5\u4e0a\u5c31\u662f\u5224\u91cd\u7684\u601d\u8def\uff0c\u7136\u800c\u6700\u91cd\u8981\u7684\uff0c\u5176\u5b9e\u662f\u5e7f\u641c\uff08\u4e0d\u8981\u544a\u8bc9\u6211\u4f60\u4e0d\u4f1a\uff01\uff01\uff01\uff09  \n### \u5927\u4f6cwasa855\u8bf4\uff0c\u6df1\u641c\u548c\u5e7f\u641c\u5c31\u662f\u50bb\u5b50\u548c\u806a\u660e\u4eba\u8d70\u8ff7\u5bab\u7684\u533a\u522b\u3002  \n### \u6df1\u641c\u5c31\u662f\u50bb\u5b50\u4e00\u4e2a\u52b2\u7684\u5f80\u91cc\u51b2\uff0c\u78b0\u5230\u4e0d\u80fd\u8d70\u6216\u8005\u8fb9\u754c\uff08\u8fb9\u754c\u597d\u50cf\u4e5f\u4e0d\u80fd\u8d70\uff09\uff0c\u5c31\u5f80\u56de\u8d70\uff08\u56de\u6eaf\uff09\u5e7f\u641c\u5462\uff0c\u5c31\u662f\u806a\u660e\u4eba\uff0c\u4ed6\u4eec\u628a\u80fd\u8d70\u7684\u90fd\u5148\u770b\u4e00\u904d\uff0c\u518d\u5f80\u4e0b\u8d70\u3002  \n### \u4e0d\u8fc7\u50bb\u5b50\u548c\u806a\u660e\u4eba\u5404\u6709\u6240\u957f\uff0c\u5927\u5bb6\u8981\u56e0\u9898\u800c\u5f02\u3002\uff08\u4e0d\u8981\u56e0\u4e3a\u6211\u8bf4\u6df1\u641c\u662f\u50bb\u5b50\u5c31\u4e0d\u7528\uff09  \n### \u6700\u540e\u8d34\u4ee3\u7801\uff0c\u795d\u5927\u5bb6\u9898\u9898AC\uff1a  \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct Squares\n{\n    int a[9];\n    int n;\n    char p[100];\n}s[40321];\nstruct squares\n{\n    int a[9];\n    bool n;\n}f[40321];\nint ans[9];\nint l=0,r=1;\nint t1,t2;\nbool cmp(int a[])\n{\n    for(int i=1;i<=8;++i)\n    {\n        if(a[i]!=ans[i])\n        return false;\n    }\n    return true;\n}\nint big_small(int a[],int b[])\n{\n    for(int i=1;i<=8;++i)\n    {\n        if(a[i]>b[i])\n        return 1;\n        if(a[i]<b[i])\n        return -1;\n    }\n    return 0;\n}\nbool used(int a[])\n{\n    int l=1,r=40320,mid,t;\n    while(l<=r)\n    {\n        mid=(l+r)/2;\n        t=big_small(f[mid].a,a);\n        if(t>0)\n        r=mid-1;\n        if(t<0)\n        l=mid+1;\n        if(t==0)\n        break;\n    }\n    if(f[mid].n==false)\n    {\n        f[mid].n=true;\n        return false;\n    }\n    else\n    return true;\n}\nvoid A()\n{\n    s[r]=s[l];\n    for(int i=1;i<=4;++i)\n    {\n        t1=s[r].a[i];\n        s[r].a[i]=s[r].a[8-i+1];\n        s[r].a[8-i+1]=t1;\n    }\n    if(used(s[r].a)==true)\n    {\n        return ;\n    }\n    s[r].p[s[r].n]='A';\n    ++s[r].n;\n    ++r;\n}\nvoid B()\n{\n    s[r]=s[l];\n    t1=s[r].a[4];\n    t2=s[r].a[5];\n    for(int i=4;i>=2;--i)\n    {\n        s[r].a[i]=s[r].a[i-1];\n        s[r].a[8-i+1]=s[r].a[8-i+2];\n    }\n    s[r].a[1]=t1;\n    s[r].a[8]=t2;\n    if(used(s[r].a)==true)\n    {\n        return ;\n    }\n    s[r].p[s[r].n]='B';\n    ++s[r].n;\n    ++r;\n}\nvoid C()\n{\n    s[r]=s[l];\n    t1=s[r].a[2];\n    s[r].a[2]=s[r].a[7];\n    s[r].a[7]=s[r].a[6];\n    s[r].a[6]=s[r].a[3];\n    s[r].a[3]=t1;\n    if(used(s[r].a)==true)\n    {\n        return ;\n    }\n    s[r].p[s[r].n]='C';\n    ++s[r].n;\n    ++r;\n}\nint main()\n{\n    for(int i=1;i<=8;++i)\n    {\n        scanf(\"%d\",&ans[i]);\n    }\n    f[1].n==true;\n    for(int i=1;i<=8;++i)\n    {\n        s[l].a[i]=i;\n    }\n    for(int i=1;i<=40320;++i)\n    {\n        for(int j=1;j<=8;++j)\n        {\n            f[i].a[j]=s[l].a[j];\n        }\n        next_permutation(s[l].a+1,s[l].a+1+8);\n    }\n    for(int i=1;i<=8;++i)\n    {\n        s[l].a[i]=i;\n    }\n    while(1)\n    {\n        if(cmp(s[l].a)==true)\n        break;\n        A();\n        B();\n        C();\n        ++l;\n    }\n    printf(\"%d\",s[l].n);\n    for(int i=0;i<s[l].n;++i)\n    {\n        if(i%60==0)\n        printf(\"\\n\");\n        printf(\"%c\",s[l].p[i]);\n    }\n}\n```  \n### \u4e0d\u77e5\u662f\u6570\u636e\u592a\u6c34\u8fd8\u662f\u6b63\u89e3\uff0c\u53cd\u6b63AC\uff01\uff01\uff01",
        "postTime": 1528783531,
        "uid": 72468,
        "name": "\u300c\u3000\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u770b\u5230\u90fd\u662f\u5eb7\u62d3\uff0cset\u4e4b\u7c7b\u7684\u3002\u8fd9\u9898\u7684\u7b2c\u4e00\u773c\u60f3\u6cd5\u4e0d\u5e94\u8be5\u662ftrie\u5b57\u5178\u6811\u5417\uff1f\u65e2\u5feb\u53c8\u597d\u5199\uff0c\u7a7a\u95f4\u8fd8\u5c0f\uff0c\u65b0\u4eba\u80af\u5b9a\u90fd\u559c\u6b22\u8fd9\u4e48\u5199\u3002\u53d1\u7bc7\u9898\u89e3\u987a\u4fbf\u5410\u69fd\u4e0b\u3002\n```cpp\n#include <iostream>\n#include <queue>\n#include <algorithm>\n#define lemon(i,a,b) for(int i=(a);i<=(b);i++)\n#define Lemon(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nstruct stage\n{\n\tint a[10];\n};\nstage tar;\nstage start;\nstage tr[10000001];\nint top=1;\nvoid ins(stage now,int dep,int rt)//\u5b57\u5178\u6811\u63d2\u5165 \n{\n\tif(dep>8) return;\n\tif(tr[rt].a[now.a[dep]]) ins(now,dep+1,tr[rt].a[now.a[dep]]);\n\telse\n\t{\n\t\ttr[rt].a[now.a[dep]]=++top;\n\t\tins(now,dep+1,tr[rt].a[now.a[dep]]);\n\t}\n}\nbool check(stage now)\n{\n\tlemon(i,1,8) if(now.a[i]!=tar.a[i]) return false;//lemon(i,1,8)=for(int i=1;i<=8;i++)\n\treturn true;\n}\nstage cA(stage now)//A\u64cd\u4f5c \n{\n\tlemon(i,1,4) swap(now.a[i],now.a[8-i+1]);\n\treturn now;\n}\nstage cB(stage now)//B\u64cd\u4f5c \n{\n\tint tmp[4];\n\ttmp[1]=now.a[4];tmp[2]=now.a[5];\n\tlemon(i,5,7) now.a[i]=now.a[i+1];\n\tLemon(i,4,2) now.a[i]=now.a[i-1];//Lemon(i,4,2)=for(int i=4;i>=2;i--)\n\tnow.a[1]=tmp[1];\n\tnow.a[8]=tmp[2];\n\treturn now;\n}\nstage cC(stage now)//C\u64cd\u4f5c \n{\n\tint tmp;\n\ttmp=now.a[2];\n\tnow.a[2]=now.a[7];\n\tnow.a[7]=now.a[6];\n\tnow.a[6]=now.a[3];\n\tnow.a[3]=tmp;\n\treturn now;\n}\nbool find(stage now,int dep,int rt)//\u5b57\u5178\u6811\u67e5\u8be2 \n{\n\tif(dep>8) return true;\n\tif(tr[rt].a[now.a[dep]]) return find(now,dep+1,tr[rt].a[now.a[dep]]);\n\telse return false;\n}\nint main()\n{\n\tlemon(i,1,8) start.a[i]=i;\n\tlemon(i,1,8) cin >> tar.a[i];\n\tins(start,1,1);\n\tqueue <pair<stage,string> > q;\n\tstring s;\n\tq.push(make_pair(start,s));\n\twhile(!q.empty())\n\t{\n\t\tstage now=q.front().first;\n\t\tstring nows=q.front().second;\n\t\tq.pop();\n\t\tif(check(now))\n\t\t{\n\t\t\tcout << nows.length() << endl;\n\t\t\tcout << nows << endl;\n\t\t\treturn 0;\n\t\t}\n\t\tstage tmp;\n\t\ttmp=cA(now);\n\t\tif(!find(tmp,1,1)) q.push(make_pair(tmp,nows+\"A\")),ins(tmp,1,1);//A\u8f6c\u6362\u53ef\u4ee5\u5219\u5165\u961f\uff0c\u8ba1\u5165\u6811\u4e2d\uff0c\u5e76\u4e14\u7d2f\u52a0\u5b57\u7b26A \n\t\ttmp=cB(now);\n\t\tif(!find(tmp,1,1)) q.push(make_pair(tmp,nows+\"B\")),ins(tmp,1,1);//\u540c\u4e0a \n\t\ttmp=cC(now);\n\t\tif(!find(tmp,1,1)) q.push(make_pair(tmp,nows+\"C\")),ins(tmp,1,1);//\u540c\u4e0a \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539773604,
        "uid": 76399,
        "name": "\u5434\u601d\u4f59",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u5176\u5b9e\u662f\u666e\u901a\u7684bfs\u3002\u4f46\u662f\u4e09\u79cd\u60c5\u51b5\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\n\n\u5224\u91cd\u54b1\u7528\u7684\u662fmap\u3002\n\n\u7136\u540e12345678\u662f\n1234\n8765\n\u7136\u540e\u5b58\u752812345678\u7684\u8bdd\u5c31\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u5b58\u7684\u8bdd\u5c31\u662f12348765\uff0c\u5904\u7406\u8d77\u6765\u4e5f\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n\u8bfb\u5165\u7684\u76ee\u6807\u72b6\u6001\u6211\u4eec\u5b58\u7684\u65f6\u5019\u4e5f\u505a\u4e0b\u5904\u7406\uff0c\u5982\u6837\u4f8b\uff1a26845731\uff0c\u6211\u4eec\u5b58\u7684\u8bdd\u662f26841375\u3002\u8fd9\u6837\u5224\u65ad\u662f\u5426\u641c\u5230\u7684\u65f6\u5019\u4f1a\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u4e09\u79cd\u60c5\u51b5\u7684\u5904\u7406\u8bdd\u81ea\u5df1\u63a8\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\uff0c\u89c1\u4ee3\u7801\u3002\u2018\n\n```cpp\n#include<set> \n#include<map> \n#include<list> \n#include<queue> \n#include<stack> \n#include<string> \n#include<math.h> \n#include<time.h> \n#include<vector> \n#include<bitset> \n#include<memory> \n#include<utility> \n#include<stdio.h> \n#include<sstream> \n#include<iostream> \n#include<stdlib.h> \n#include<string.h> \n#include<algorithm>\n#define LL unsigned long long  \nusing namespace std;\nmap<int,bool> f;//\u5224\u91cd\u7528\nint i,l,r;\nint x,xx;\nint fff=0;\nstruct haha\n{\n    int pred;//\u5b58\u4e0a\u4e00\u4e2a\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\n    char c;//\u5b58\u64cd\u4f5c\u65b9\u5f0f\u7684\n    int n;//\u5b58\u5f53\u524d\u72b6\u6001\u7684\n    int sum;//\u5b58\u5f53\u524d\u64cd\u4f5c\u7684\u957f\u5ea6\n} a[500000];\nvoid digui(int k)//\u9012\u5f52\u5012\u7740\u8f93\u51fa\n{\n    if (a[k].pred!=-1)digui(a[k].pred);\n    if (a[k].pred!=-1)printf(\"%c\",a[k].c);\n    return;\n}\nvoid sc(int x)//\u8f93\u51fa\n{\n    printf(\"%d\\n\",a[x].sum);\n    fff=1;\n    digui(x);\n    printf(\"\\n\");\n    return;\n}\nvoid aa(int k)//\u64cd\u4f5cA\n{\n    int an=k/10000;//\u7b2c\u4e00\u884c\n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    int d=bn*10000+an;//\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e8c\u884c\u8fdb\u884c\u4ea4\u6362\n    if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"A:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0\n    r++;//\u5165\u961f\n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a\n    a[r].c='A';//\u6807\u8bb0\u4e3a\u64cd\u4f5cA\n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570\n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa\n    return;\n}\n \nvoid bb(int k)//\u64cd\u4f5cB\n{\n    int an=k/10000;//\u7b2c\u4e00\u884c\n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    an=(an%10)*1000+(an/10);//\u6700\u540e\u4e00\u5217\u63d2\u5165\u5230\u7b2c\u4e00\u5217\n    bn=(bn%10)*1000+(bn/10);//\u6700\u540e\u4e00\u5217\u63d2\u5165\u5230\u7b2c\u4e00\u5217\n    int d=an*10000+bn;\n    if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"B:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0\n    r++;//\u5165\u961f\n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a\n    a[r].c='B';//\u6807\u8bb0\u4e3a\u64cd\u4f5cB\n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570\n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa \n    return;\n}\n \nvoid cc(int k)//\u64cd\u4f5cC\uff0c\u597d\u5751\u554a\u3002\n{\n    int an=k/10000;//\u7b2c\u4e00\u884c\n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    int rr=an;//\u5b58an\u4fee\u6539\u524d\u7684\u503c\n    an=(an/1000*1000)/*\u7b2c\u4e00\u4f4d\u4e0d\u53d8*/\n    +(bn/100%10*100)/*\u7b2c\u4e8c\u4f4d\u6765\u81ea\u7b2c\u4e8c\u884c*/\n    +(an/100%10*10)/*\u7b2c\u4e8c\u4f4d\u6210\u7b2c\u4e09\u4f4d*/\n    +(an%10);/*\u6700\u540e\u4e00\u4f4d\u4e0d\u53d8*/\n    bn=(bn/1000*1000)/*\u7b2c\u4e00\u4f4d\u4e0d\u53d8*/\n    +(bn%100/10*100)/*\u7b2c\u4e09\u4f4d\u53d8\u6210\u7b2c\u4e8c\u4f4d*/\n    +(rr%100/10*10)/*\u6765\u81ea\u7b2c\u4e00\u884c\u7684\u7b2c\u4e09\u4f4d*/\n    +(bn%10);/*\u6700\u540e\u4e00\u4f4d\u4e0d\u53d8*/\n    //\u8fd9\u5904\u7406\uff0c\u6211TM\u8981\u70b8\u4e86\u3002\n    int d=an*10000+bn;\n    if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"C:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0\n    r++;//\u5165\u961f\n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a\n    a[r].c='C';//\u6807\u8bb0\u4e3a\u64cd\u4f5cB\n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570\n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa \n    return;\n}\nint main()\n{\n    freopen(\"msquare.in\",\"r\",stdin);\n    freopen(\"msquare.out\",\"w\",stdout);\n    int xxx=0;\n    for (i=1;i<=8;i++)\n    {\n        scanf(\"%d\",&xx);//\u8bfb\u5165\n        xxx=xxx*10+xx;\n    }\n    x=xxx/10000;\n    xxx=xxx%10000;//\u4fdd\u7559\u6700\u540e\u56db\u4f4d\n    x=x*10000//\u524d4\u4f4d\u4e0d\u53d8\n    +(xxx%10*1000)\n    +(xxx%100/10*100)\n    +(xxx/100%10*10)\n    +(xxx/1000);\n    if (x==12348765)//\u4e0d\u9700\u8981\u53d8\u52a8\n    {\n        printf(\"0\\n\\n\");\n        return 0;\n    }\n    //printf(\"x:%d\\n\",x);\n    f[12348765]=1;//\u6807\u8bb0\n    l=0;\n    r=1;\n    a[1].n=12348765;\n    a[1].pred=-1;\n    while (l!=r)\n    {\n        l++;\n        aa(a[l].n);//\u4e09\u79cd\u64cd\u4f5c\n        if (fff==1) return 0;\n        bb(a[l].n);\n        if (fff==1) return 0;\n        cc(a[l].n);\n        if (fff==1) return 0;\n    }\n    return 0;\n}\n``                      \n         ",
        "postTime": 1565134825,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u83dcOJ\u9898\u53f7\uff1a[1047](http://caioj.cn/problem.php?id=1047)\n\n\u6d1b\u8c37\u9898\u53f7\uff1a[P2730](https://www.luogu.org/problemnew/show/P2730)\n\n\u9898\u76ee\u8bf7\u81ea\u5df1\u5411\u4e0a\u770b\u3002\u8fd9\u91cc\u6ca1\u6709\u3002\n\n\u6b64\u9898\u5f88\u660e\u663e\u662f\u5bbd\u641c\uff08\u5e7f\u641c\uff09\u3002\n\n\u5e76\u4e14\u8fd8\u8981\u7528\u5eb7\u6258\u5c55\u5f00\u3002\n\n[\u83dcOJ\u5eb7\u6258\u5c55\u5f00\uff08\u5185\u542b\u6587\u6863\uff09](http://caioj.cn/problem.php?id=1220)\n\n\u5eb7\u6258\u4e0d\u4f1a\u5c31\u770b\u4e0a\u9762\u5427\uff0c\u5bbd\u641c\u4e0d\u4f1a\u5c31\u522b\u6765\u4e86\u5427\u3002\u3002\u3002\n\n##### \u6211\u7684\u601d\u8def\uff1a\n\n\u9996\u5148\u9b54\u677f\u8bfb\u5165\u65f6\u5019\u4e0b\u9762\u4e00\u884c\u53cd\u7740\u8bfb\uff0c\u5c31\u4f1a\u8ba9\u8868\u8fbe\u7684\u65b9\u5f0f\u8f6c\u6362\u6210\u6211\u4eec\u5e73\u5e38\u7684\u8868\u8fbe\u65b9\u5f0f\n\n\u4f8b\u5982\uff1a\n\n1 2 3 4\n\n8 7 6 5     \u7528{{1,2,3,4},{8,7,6,5}}\u8868\u793a\u800c\u4e0d\u662f{{1,2,3,4},{5,6,7,8}}\n\n\u5efa\u4e00\u4e2a\u64cd\u4f5c\uff08A\u3001B\u3001C\uff09\u51fd\u6570\uff0c\u7ed9\u5b9aA\u6216B\u6216C\u548c\u4e00\u4e2a\u9b54\u677f\u7ed3\u6784\u4f53\uff0c\u8fd4\u56de\u64cd\u4f5c\u540e\u7684\u7ed3\u6784\u4f53\u3002\n\n\u64cd\u4f5c\u90fd\u50a8\u5b58\u5728\u7ed3\u6784\u4f53\u91cc\uff0c\u6bcf\u4e2a\u7ed3\u6784\u4f53\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u6bcf\u6b21\u90fd\u7ee7\u627f\u5217\u8868\u91cc\u4e0a\u6b21\u7684\u64cd\u4f5c\u5e76\u52a0\u4e0a\u81ea\u5df1\u7684\n\n\u7528\u5eb7\u6258\u548c\u5bbd\u641c\u4f60\u4eec\u4e5f\u5e94\u8be5\u77e5\u9053\u600e\u4e48\u505a\u4e86\n\n##### \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n    int a[3][5],dep;\n    char st[500];\n}list[110000];\nint head,tail;\nint d[10];\nbool myhash[400000];\nint kangtuo(node tno)\n{\n    int sum=0,b[10],len=0;\n    for(int i=1;i<=2;i++)\n        for(int j=1;j<=4;j++)\n            b[++len]=tno.a[i][j]+1;\n    bool bo[20];memset(bo,0,sizeof(bo));\n    for(int i=1;i<=7;i++)\n    {\n        int k=0;\n        for(int j=1;j<b[i];j++)\n            if(bo[j]==false) k++;\n        sum+=k*d[8-i];bo[b[i]]=true;\n    }\n    return sum+1;\n}\nnode Cz(node tno,char mode)\n{\n    if(mode=='A')\n    {\n        int a;\n        for(int i=1;i<=4;i++)\n            {a=tno.a[1][i];\n            tno.a[1][i]=tno.a[2][i];\n            tno.a[2][i]=a;}\n        return tno;\n    }\n    if(mode=='B')\n    {\n        int a[2];\n        a[1]=tno.a[1][4];a[2]=tno.a[2][4];\n        for(int i=4;i>=2;i--)\n        {tno.a[1][i]=tno.a[1][i-1];\n        tno.a[2][i]=tno.a[2][i-1];}\n        tno.a[1][1]=a[1];tno.a[2][1]=a[2];\n        return tno;\n    }\n    if(mode=='C')\n    {\n        int a[5];\n        a[1]=tno.a[1][2];a[2]=tno.a[1][3];\n        a[3]=tno.a[2][3];a[4]=tno.a[2][2];\n        tno.a[1][2]=a[4];tno.a[1][3]=a[1];\n        tno.a[2][3]=a[2];tno.a[2][2]=a[3];\n        return tno;\n    }\n}\nmain()\n{\n    int tt;\n    memset(myhash,false,sizeof(myhash));\n    d[0]=1;\n    for(int i=1;i<=8;i++) d[i]=d[i-1]*i;\n    list[1].a[1][1]=1;list[1].a[1][2]=2;list[1].a[1][3]=3;list[1].a[1][4]=4;\n    list[1].a[2][1]=8;list[1].a[2][2]=7;list[1].a[2][3]=6;list[1].a[2][4]=5;\n    list[1].dep=0;\n    myhash[kangtuo(list[1])]=true;\n    for(int j=1;j<=4;j++) scanf(\"%d\",&list[0].a[1][j]);\n    for(int j=4;j>=1;j--) scanf(\"%d\",&list[0].a[2][j]);\n    int ed=kangtuo(list[0]);\n    if(myhash[ed]==true) {printf(\"0\");return 0;}\n    int head=1,tail=1;\n    node tno;\n    while(head<=tail)\n    {\n        for(char i='A';i<='C';i++)\n        {\n            tno=Cz(list[head],i);\n            tno.dep=list[head].dep+1;\n            int now=kangtuo(tno);\n            if(myhash[now]==false)\n            {\n                strcpy(list[head].st,tno.st);\n                tno.st[tno.dep]=i;\n                if(now==ed)\n                {\n                    printf(\"%d\\n\",tno.dep);\n                    for(int i=1;i<=strlen(tno.st+1);i++)\n                        {printf(\"%c\",tno.st[i]);\n                        if(i%60==0) printf(\"\\n\");}\n                    return 0;\n                }\n                list[++tail]=tno;\n                myhash[now]=true;\n            }\n        }\n        head++;\n    }\n}\n```",
        "postTime": 1514441052,
        "uid": 59140,
        "name": "Zimo",
        "ccfLevel": 0,
        "title": "P2730 \u9b54\u677f Magic Square"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u601d\u60f3\u7684\u5199\u6cd5\n\n###  \u57fa\u672c\u601d\u8def\n\n\u9996\u5148\u8fd9\u9898\u770b\u4e00\u773c\u611f\u89c9\u6570\u636e\u5f88\u5c0f\u662f\u4e2a\u5e7f\u641c~~\u867d\u7136\u6211\u8fd8\u662f\u5199\u4e86\u8fea\u6770\u65af\u7279\u62c9\u4e0d\u8fc7\u8fd9\u4e0d\u91cd\u8981~~\uff0c\u5173\u952e\u95ee\u9898\u8fd8\u662f\u5728\u4e8e\u5982\u4f55\u5224\u91cd\u4ee5\u53ca\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff08\u5c31\u662f\u4e09\u79cd\u64cd\u4f5c\uff09\u3002\n\n\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u7528\u5b57\u7b26\u4e32\u8868\u793a\u8868\u793a\u6bcf\u4e2a\u9b54\u677f\uff0c\u4f46\u662f\u6211\u611f\u89c9\u5b57\u7b26\u4e32\u64cd\u4f5c\u5f88\u9ebb\u70e6\u6240\u4ee5\u5c31\u7528\u4e86\u4e00\u79cd\u66f4\u52a0\u8212\u670d~~\u5947\u5947\u602a\u602a~~\u7684\u65b9\u6cd5\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08\u5176\u5b9estl\u91cc\u9762\u90a3\u4e9b\u5bb9\u5668\u80fd\u5f53\u505a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u4e5f\u662f\u56e0\u4e3a\u9762\u5411\u5bf9\u8c61\uff0c\u6240\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u628a\u5f88\u591a\u590d\u6742\u7684\u72b6\u6001\u53d8\u6210\u4e00\u4e2astruct\u6216\u8005class\u4f20\u9012\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8212\u670d\u7684\u5e7f\u641c\u4e86\uff08\u6bd4\u5982[\u5b64\u5c9b\u8425\u6551\u884c\u52a8](https://www.luogu.org/problem/P4011)\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a\u96cf\u5f62\n\n```cpp\nstruct Block {\n\tint arr[2][4];\n\t\n\tBlock() {} // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n\tBlock(const Block& p) {} // \u590d\u5236\u6784\u9020\u51fd\u6570\n\t\n\tbool operator < (const Block &b) const {} //\u4ee5\u4e0b\u662f\u6240\u6709\u6bd4\u8f83\u8fd0\u7b97\u7b26\n\tbool operator > (const Block &b) const {}\n\tbool operator <= (const Block &b) const {}\n\tbool operator >= (const Block &b) const {}\n\tbool operator == (const Block &b) const {}\n\tbool operator != (const Block &b) const {}\n\t\n\tinline Block operateA() {} // \u64cd\u4f5cA\n\tinline Block operateB() {} // \u64cd\u4f5cB\n\tinline Block operateC() {} // \u64cd\u4f5cC\n};\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5728stl\u961f\u5217\u91cc\u9762\u76f4\u63a5\u4f20\u9012Block\u7c7b\u8fdb\u884cbfs\n\n### struct\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\n\n~~\u4f3c\u4e4estruct\u4e2d\u7684\u6210\u5458\u51fd\u6570\u662f\u9ed8\u8ba4inline\u53ef\u4ee5\u4e0d\u5199emmm\u4f46\u662f\u6211\u8fd8\u662f\u5199\u4e86~~\n\n\u9996\u5148\u8003\u8651\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u628a\u9b54\u677f\u8bbe\u7f6e\u6210\u521d\u59cb\u72b6\u6001\uff0c\u4e8e\u662f\u7b80\u5355\u6a21\u62df\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\n\n```cpp\nBlock() {\n    int cnt = 1;\n    for (int i = 0; i < 4; ++i) arr[0][i] = cnt++;\n    for (int i = 3; i >= 0; --i) arr[1][i] = cnt++;\n} // \u5728\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u4e2d\uff0cthis\u662f\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u7701\u7565\u4e0d\u5199\n```\n\n\u7136\u540e\u662f\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u628a\u9b54\u677fA\u53d8\u6210\u9b54\u677fB\uff0c\u76f8\u5f53\u4e8e\u8d4b\u503c\uff0c\u4e5f\u662f\u76f4\u63a5\u6a21\u62df\n\n```cpp\nBlock(const Block& p) {\n    for (int i = 0; i < 2; ++i) {\n        for (int j = 0; j < 4; ++j) {\n            arr[i][j] = p.arr[i][j];\n\t\t}\n\t}\n}\n```\n\n\u63a5\u4e0b\u6765\u8003\u8651\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\uff08\u5212\u91cd\u70b9\uff09\n\n\u867d\u7136\u5728\u6700\u540e\u63d0\u4ea4\u7684\u4ee3\u7801\u4e2d\u662f\u7528\u54c8\u5e0c\u6765\u5224\u91cd\u7684\uff0c\u4f46\u662f\u5199\u4ee3\u7801\u96cf\u5f62\u5c31\u7528\u54c8\u5e0c\u5b9e\u5728\u592a\u9ebb\u70e6\uff0c\u7528set\u5f80\u5f80\u4f1a\u66f4\u8212\u670d\uff0c\u7136\u800cset\u9700\u8981\u63d0\u4f9b\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u8fd8\u662f\u5199\u4e00\u4e0b\u516d\u79cd\u6bd4\u8f83\u8fd0\u7b97\u7b26\n\n\u6839\u636e\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u4e00\u4e9b\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53ea\u5199\u5c0f\u4e8e\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u6240\u6709\u7684\u516d\u79cd\u8fd0\u7b97\u7b26\u3002\n\n\u9996\u5148\u63d0\u4f9b\u5c0f\u4e8e\u7684\u5b9e\u73b0\u65b9\u5f0f\uff08\u5b9e\u73b0\u65b9\u6cd5\u4e0d\u552f\u4e00\uff0c\u6839\u636e\u4e2a\u4eba\u9700\u8981\u81ea\u884c\u9009\u62e9\uff09\n\n```cpp\nbool operator < (const Block &b) const {\n    for (int i = 0; i < 4; ++i) if (this->arr[0][i] != b.arr[0][i]) return this->arr[0][i] < b.arr[0][i];\n    for (int i = 3; i >= 0; --i) if (this->arr[1][i] != b.arr[1][i]) return this->arr[1][i] < b.arr[1][i];\n\t\treturn false;\n\t}\n```\n\n\u73b0\u5728\u6709\u4e86\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff0c\u5176\u4ed6\u7684\u8fd0\u7b97\u7b26\u53ef\u4ee5\u6839\u636e\u4e0d\u7b49\u5f0f\u7684\u6027\u8d28\u63a8\u51fa\n\n```cpp\nbool operator > (Block b) const {\n    return b < *this;// a\u5927\u4e8eb\u5373b\u5c0f\u4e8ea\n}\nbool operator <= (Block b) const {\n    return !(*this > b); // a\u5c0f\u4e8e\u7b49\u4e8eb\u5373a\u4e0d\u5927\u4e8eb\n}\nbool operator >= (Block b) const {\n    return !(*this < b); // a\u5927\u4e8e\u7b49\u4e8eb\u5373a\u4e0d\u5c0f\u4e8eb\n}\nbool operator == (Block b) const {\n    return !(*this < b || *this > b); // a\u7b49\u4e8eb\u5373a\u4e0d\u5927\u4e8eb\u4e14a\u4e0d\u5c0f\u4e8eb\n}\nbool operator != (Block b) const {\n    return *this < b || *this > b; //a\u4e0d\u7b49\u4e8eb\u5373a\u5927\u4e8eb\u6216a\u5c0f\u4e8eb\n    // \u4e5f\u53ef\u4ee5\u5199\u6210!(*this == b)\uff0c\u5373\u76f4\u63a5\u5b9e\u73b0a\u4e0d\u7b49\u4e8eb\n}\n```\n\n\u63a5\u4e0b\u6765\u7684\u4e09\u79cd\u64cd\u4f5c\u4ecd\u7136\u662f\u901a\u8fc7\u6a21\u62df\u5b9e\u73b0\uff0c\u90a3\u4e48\u76f4\u63a5\u4e0a\u4ee3\u7801\u5c31\u597d\u4e86\n\n```cpp\ninline Block operateA() {\n    Block ret = *this;\n    int temp;\n    for (int i = 0; i < 4; ++i) {\n        temp = ret.arr[1][i]; ret.arr[1][i] = ret.arr[0][i]; ret.arr[0][i] = temp;\n    }\n    return ret;\n}\ninline Block operateB() {\n    Block ret = *this;\n    int temp[] = { ret.arr[0][3], ret.arr[1][3] };\n    for (int i = 0; i < 2; ++i) {\n        for (int j = 3; j > 0; --j) {\n            ret.arr[i][j] = ret.arr[i][j - 1];\n        }\n    }\n    ret.arr[0][0] = temp[0], ret.arr[1][0] = temp[1];\n    return ret;\n}\ninline Block operateC() {\n    Block ret = *this;\n    int temp = ret.arr[0][1];\n    ret.arr[0][1] = ret.arr[1][1];\n    ret.arr[1][1] = ret.arr[1][2];\n    ret.arr[1][2] = ret.arr[0][2];\n    ret.arr[0][2] = temp;\n    return ret;\n}\n```\n\n\u6709\u4e86\u8fd9\u4e09\u79cd\u64cd\u4f5c\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7Block tmp = k.operatorA()\uff08\u6216\u8005B\uff0cC\uff09\u5f97\u5230\u64cd\u4f5c\u540e\u7684\u9b54\u677f\uff0c\u4e8e\u662f\u5728\u641c\u7d22\u7684\u65f6\u5019\u80fd\u591f\u66f4\u52a0\u65b9\u4fbf\u3002\n\n### \u4e24\u79cd\u6d41\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\n\n\u4e8e\u662f\u5199\u7740\u5199\u7740\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a\u597d\u50cf\u8bfb\u5165\u5f88\u9ebb\u70e6\uff0c\u8fd8\u8981\u5faa\u73af\u8bfb\u5165\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u4e5f\u5f88\u9ebb\u70e6\u3002\n\n\u6240\u4ee5\u6839\u636ec++\u6d41\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7doperator>>\u548coperator<<\u8fdb\u884c\u66f4\u52a0\u65b9\u4fbf\u7684\u8bfb\u5165\u8f93\u51fa\u3002\uff08\u8be6\u7ec6\u5185\u5bb9\u53c2\u89c1\u535a\u5ba2[\u8bfb\u5165\u8f93\u51fa\u6d41\u7684\u4e00\u4e9b\u4ecb\u7ecd](https://from.blog.luogu.org/guan-yu-cin-di-ren-shi-yi-ji-shou-xie-du-ru-liu-lei-xing)\uff09\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u7684\u8f93\u5165\u683c\u5f0f\u8fdb\u884c\u8bfb\u5165\n\n```cpp\nistream& operator >> (istream& in, Block &p) {\n    for (int i = 0; i < 4; ++i) cin >> p.arr[0][i];\n        for (int i = 3; i >= 0; --i) cin >> p.arr[1][i];\n    return in; // \u4e00\u5b9a\u8981\u8bb0\u5f97return\uff0c\u5426\u5219\u4f1a\u539f\u5730\u53bb\u4e16\n}\n\nostream& operator << (ostream& out, const Block &p) {\n    for (int i = 0; i < 2; ++i) {\n        for (int j = 0; j < 4; ++j) {\n            out << p.arr[i][j] << ' ';\n        }\n        out << '\\n';\n    }\n    return out; // \u540c\u4e0a\n}\n```\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6b22\u4e50\u7684\u641c\u7d22\u4e86\uff0c\u800c\u4e14\u4f1a\u53d1\u73b0\u5728\u9762\u5411\u5bf9\u8c61\u9884\u5904\u7406\u4e4b\u540e\uff0c\u641c\u7d22\u8fc7\u7a0b\u4f1a\u53d8\u5f97\u5f88\u77ed\uff08\u56e0\u4e3a\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u7c7b\u4e2d\u5b9e\u73b0\u5b8c\u6bd5\u4e86\uff0c\u53ea\u8981\u8c03\u7528\u5c31\u53ef\u4ee5\u4e86\uff09\u3002\n\n### \u5b8c\u6574\u4ee3\u7801\n\n~~\u8ddf\u4e0a\u9762\u7684\u7f29\u8fdb\u597d\u50cf\u4e0d\u592a\u4e00\u6837emmm\uff0c\u8fd9\u91cc\u662f\u4e24\u683c\u7f29\u8fdb\u7684~~\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\n#include <string>\n#include <vector>\n#include <set>\n#include <map> // \u4e00\u5806\u5934\u6587\u4ef6\n\nusing namespace std;\n\nstruct Block { // \u9762\u5411\u5bf9\u8c61\n  int arr[2][4];\n  \n  Block() {\n    int cnt = 1;\n    for (int i = 0; i < 4; ++i) arr[0][i] = cnt++;\n    for (int i = 3; i >= 0; --i) arr[1][i] = cnt++;\n  }\n  Block(const Block& p) {\n        for (int i = 0; i < 2; ++i) {\n      for (int j = 0; j < 4; ++j) {\n        arr[i][j] = p.arr[i][j];\n      }\n    }\n  }\n  \n  bool operator < (const Block &b) const {\n      for (int i = 0; i < 4; ++i) if (this->arr[0][i] != b.arr[0][i]) return this->arr[0][i] < b.arr[0][i];\n    for (int i = 3; i >= 0; --i) if (this->arr[1][i] != b.arr[1][i]) return this->arr[1][i] < b.arr[1][i];\n    return false;\n  }\n  bool operator > (const Block &b) const {\n    for (int i = 0; i < 4; ++i) if (this->arr[0][i] != b.arr[0][i]) return this->arr[0][i] > b.arr[0][i];\n    for (int i = 3; i >= 0; --i) if (this->arr[1][i] != b.arr[1][i]) return this->arr[1][i] > b.arr[1][i];\n    return false;\n  }\n  bool operator <= (const Block &b) const {\n    return !(*this > b);\n  }\n  bool operator >= (const Block &b) const {\n    return !(*this < b);\n  }\n  bool operator == (const Block &b) const {\n    return !(*this < b || *this > b);\n  }\n  bool operator != (const Block &b) const {\n    return *this < b || *this > b;\n  }\n  \n  inline Block operateA() {\n    Block ret = *this;\n    int temp;\n    for (int i = 0; i < 4; ++i) {\n      temp = ret.arr[1][i]; ret.arr[1][i] = ret.arr[0][i]; ret.arr[0][i] = temp;\n    }\n    return ret;\n  }\n  inline Block operateB() {\n    Block ret = *this;\n    int temp[] = { ret.arr[0][3], ret.arr[1][3] };\n    for (int i = 0; i < 2; ++i) {\n      for (int j = 3; j > 0; --j) {\n        ret.arr[i][j] = ret.arr[i][j - 1];\n      }\n    }\n    ret.arr[0][0] = temp[0], ret.arr[1][0] = temp[1];\n    return ret;\n  }\n  inline Block operateC() {\n    Block ret = *this;\n    int temp = ret.arr[0][1];\n    ret.arr[0][1] = ret.arr[1][1];\n    ret.arr[1][1] = ret.arr[1][2];\n    ret.arr[1][2] = ret.arr[0][2];\n    ret.arr[0][2] = temp;\n    return ret;\n  }\n};\n\nistream& operator >> (istream& in, Block &p) {\n  for (int i = 0; i < 4; ++i) cin >> p.arr[0][i];\n    for (int i = 3; i >= 0; --i) cin >> p.arr[1][i];\n  return in;\n}\n\nostream& operator << (ostream& out, const Block &p) {\n  for (int i = 0; i < 2; ++i) {\n    for (int j = 0; j < 4; ++j) {\n      out << p.arr[i][j] << ' ';\n    }\n    out << '\\n';\n  }\n  return out;\n}\n\nstruct Node {\n  Block pos;\n  int step;\n  string vec;\n  \n  Node(Block b, int s, string vec): pos(b), step(s), vec(vec) {}\n}; // \u641c\u7d22\u4e2d\u961f\u5217\u9700\u8981\u7684\u5185\u5bb9\uff0cvec\u662f\u7528\u6765\u8bb0\u5f55\u7b54\u6848\u7684\uff0c\u672c\u6765\u662f\u4e2avector\u540e\u6765\u53d1\u73b0string\u66f4\u65b9\u4fbf\uff0c\u53d8\u91cf\u540d\u8fd8\u662f\u6ca1\u6539\u56de\u6765\n\nstruct cmp {\n  bool operator() (const Node &a, const Node &b) const {\n    return (a.step > b.step) || (a.step == b.step && a.vec > b.vec);\n  }\n}; // \u4f18\u5148\u961f\u5217\u4e2d\u7684\u6bd4\u8f83functional\n\nBlock pos; // \u76ee\u6807\nset<Block> vis; // \u5224\u91cd\uff08\u6bd4\u8f83\u8fd0\u7b97\u91cd\u8f7d\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a\uff09\nmap<Block, int> dist; // \u8bb0\u5f55\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\npriority_queue<Node, vector<Node>, cmp> que; // \u641c\u7d22\u65f6\u7528\u7684\u961f\u5217\n\ninline string getStr(string str, char ch) {\n  str.push_back(ch);\n  return str;\n} // \u8fd9\u4e2a\u51fd\u6570\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0d\u5199\u4e5f\u884c\n\ninline void dijkstra() { // \u6211\u7684\u641c\u7d22\u8ddf\u522b\u4eba\u5199\u7684\u53ef\u80fd\u4e0d\u592a\u4e00\u6837\uff0c\u88abB\u7ad9\u6d17\u8111\n  que.push(Node(Block(), 0, string()));\n  while (!que.empty()) {\n    Node u = que.top(); que.pop(); // \u53d6\u961f\u9996\u4e0d\u89e3\u91ca\n    if (vis.count(u.pos)) continue; // \u61d2\u60f0\u5220\u9664\u4e0d\u89e3\u91ca\n    dist[u.pos] = u.step; //\u533a\u522b\u5728\u8fd9\u91cc\uff0c\u6bcf\u6b21\u627e\u5230\u6700\u77ed\u7684\u4e4b\u540e\u624d\u8fdb\u884c\u66f4\u6539\n    vis.insert(u.pos);\n    if (u.pos == pos) { // \u5f97\u51fa\u7ed3\u679c\u540e\u4e00\u987f\u64cd\u4f5c\n      printf(\"%d\\n\", dist[pos]);\n      for (int i = 0, cnt = 0; i < u.vec.size(); ++i, ++cnt) {\n        if (cnt == 60) {\n          puts(\"\");\n          cnt = 0;\n        }\n        printf(\"%c\", u.vec[i]);\n      }\n      return;\n    }\n    Block k1 = u.pos.operateA(); // \u8fdb\u884c\u4e09\u79cd\u64cd\u4f5c\u5e76\u5165\u961f\n    if (dist.find(k1) == dist.end()) que.push(Node(k1, u.step + 1, getStr(u.vec, 'A')));\n    Block k2 = u.pos.operateB();\n    if (dist.find(k2) == dist.end()) que.push(Node(k2, u.step + 1, getStr(u.vec, 'B')));\n    Block k3 = u.pos.operateC();\n    if (dist.find(k3) == dist.end()) que.push(Node(k3, u.step + 1, getStr(u.vec, 'C')));\n  }\n  dist[pos] = -1; // \u641c\u7d22\u5b8c\u6bd5\uff0c\u65e0\u6cd5\u5230\u8fbe\n}\n\nint main() {\n  cin >> pos;\n  dijkstra();\n  return 0;\n  // \u975e\u5e38\u77ed\u7684\u4e3b\u51fd\u6570\n}\n```\n\n",
        "postTime": 1565406764,
        "uid": 129528,
        "name": "____\u849f\u84bb____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "### \u6309\u7167\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u8ddf\u5168\u6392\u5217\u6302\u4e0a\u94a9\n\n## \u90a3\u4e48\u5982\u4f55\u5224\u91cd\u5c31\u6210\u4e86\u5f88\u91cd\u8981\u7684\u95ee\u9898\n\n### \u5728\u6211\u52aa\u529b\u7684\u5b66\u4e60\u4e4b\u540e\uff0c\u6211\u627e\u5230\u4e86\u5eb7\u6258\u5c55\u5f00\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u8be5\u9898\u8fce\u5203\u800c\u89e3\n\n _ __ _ \n------------\n\n## \u5c0f\u4f18\u5316\uff1a\n\n### \u9b54\u677f\u539f\u672c\u662f2X4\u7684\u77e9\u9635\uff0c\u964d\u81f3\u4e00\u7ef4\u6570\u7ec4\n\n\u4ee5\u6837\u4f8b\u8bf4\u660e\n\n```\n1234\n\n8765 \u261e 12348765\n```\n\n------------\n\n\n------------\n\n\n------------\n\n## \u4ee3\u7801\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nchar a[10];\nlong long fac(int t)//\u9636\u4e58 \n{\n\tif(t==0||t==1) return 1;\n\tlong long sum=1;\n\tfor(int i=2;i<=t;i++) sum*=i;\n\treturn sum;\n}\nlong long ct(char a[])//\u5eb7\u6258\u5c55\u5f00\n{\n    long long ans=0,sum=0;\n    for(int i=0;i<7;i++)\n\t{\n        for(int j=i+1;j<8;j++)\n            if(a[j]<a[i]) sum++;\n        ans=ans+sum*fac(7-i);\n        sum=0;\n    }\n    return ans+1;\n}\nbool book[40321];\nqueue<int> q;\nchar step[40321][1001];\nint step1[40321];\nint main()\n{\n    for(int i=0;i<8;i++)\n\t{\n\t\ta[i]=getchar();\n\t\tgetchar();\n\t}\n    q.push(12345678);\n    book[1]=1;\n\tint key=ct(a);//\u5eb7\u6258\u5c55\u5f00\u2014\u2014\u76ee\u6807\u6b65 \n    while(!book[key])//\u672a\u8d70\u5230\u76ee\u6807\u6b65\u65f6\uff08\u9006\u63a8\uff1a\u4ece\u6700\u7ec8\u6b65\u63a8\u76ee\u6807\u6b65\uff09 \n    {\n    \tint t=q.front();\n    \tq.pop();\n    \tchar a[10],b[10],c[10];\n    \tsprintf(a,\"%08d\\n\",t);//\u5c06\u5934\u5b58\u5165\u5f53\u524d\u6b65 \n    \tsprintf(b,\"%08d\\n\",t);\n    \tsprintf(c,\"%08d\\n\",t);\n    \tint cnt=ct(a);//\u5eb7\u6258\u5c55\u5f00\n    \t\n    \t//\u5c1d\u8bd5A \n    \tint k;\n    \tfor(int j=0;j<4;j++)//\u5f00\u59cb\u8d70\u4e00\u6b65\n    \t\tswap(a[j],a[8-j-1]);\n    \tk=ct(a);//\u5eb7\u6258\u5c55\u5f00\u2014\u2014\u5f53\u524d\u6b65 \n    \tif(!book[k])//\u5224\u65ad\u8d70\u6ca1\u8d70\u8fc7\u8fd9\u4e00\u6b65 \n\t\t{\n\t\t\tfor(int i=0;i<step1[cnt];i++) step[k][i]=step[cnt][i];//\u63a5\u4e0a\u4e4b\u524d\u8d70\u8fc7\u7684\u6b65 \n\t\t\tstep[k][step1[cnt]]='A';//\u63a5\u4e0a\u5f53\u524d\u6b65 \n\t\t\tstep1[k]=step1[cnt]+1;//\u6b65\u957f+1 \n\t\t\tint newn=0;\n\t\t\tfor(int i=0;i<8;i++) newn=newn*10+a[i]-'0';//\u5c06\u65b0\u6570\u8f6c\u6210\u6574\u578b\u5165\u961f\n\t\t    q.push(newn);\n\t\t    book[k]=1;\n\t\t}\n\t\t\n\t\t//\u5c1d\u8bd5B \n\t\tfor(int j=3;j>0;j--)//\u5185\u5bb9\u540c\u4e0a \n\t\t{\n\t\t\tswap(b[j],b[j-1]);\n\t\t\tswap(b[8-j-1],b[8-j]);\n\t\t}\n\t\tk=ct(b);\n    \tif(!book[k])\n\t\t{\n\t\t\tfor(int i=0;i<step1[cnt];i++) step[k][i]=step[cnt][i];\n\t\t\tstep[k][step1[cnt]]='B';\n\t\t\tstep1[k]=step1[cnt]+1;\n\t\t\tint newn=0;\n\t\t\tfor(int i=0;i<8;i++) newn=newn*10+b[i]-'0';\n\t\t    q.push(newn);\n\t\t    book[k]=1;\n\t\t}\n\t\t\n\t\t//\u5c1d\u8bd5C \n\t\tchar s=c[1];\n\t\tc[1]=c[6];c[6]=c[5];c[5]=c[2];c[2]=s;\n\t\tk=ct(c);\n    \tif(!book[k])\n\t\t{\n\t\t\tfor(int i=0;i<step1[cnt];i++) step[k][i]=step[cnt][i];\n\t\t\tstep[k][step1[cnt]]='C';\n\t\t\tstep1[k]=step1[cnt]+1;\n\t\t\tint newn=0;\n\t\t\tfor(int i=0;i<8;i++) newn=newn*10+c[i]-'0';\n\t\t    q.push(newn);\n\t\t    book[k]=1;\n\t\t}\n\t}\n\tcout<<step1[key]<<endl;\n\tfor(int i=0;i<step1[key];i++) cout<<step[key][i];\n}\n```\n",
        "postTime": 1563261566,
        "uid": 86005,
        "name": "\u6ca7\u6d77\u4e4b\u8000",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u975e\u5e38\u7ecf\u5178\u7684BFS\u9898\u76ee\n\n### \u5982\u679c\u628a\u6240\u6709\u90fd\u626b\u63cf\u4e00\u904d\uff0c\u5c06\u4f1a\u9762\u4e34\u6307\u6570\u7ea7\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u8981\u53e6\u60f3\u529e\u6cd5\n\n\u6240\u4ee5\u4e00\u822c\u7684\u5e7f\u641c\u90fd\u4f1a\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u3002\u6570\u7ec4\u4e0b\u6807\u8fd0\u7528\u4e00\u4e2aHash\u51fd\u6570\u6765\u8bbe\u8ba1\uff0c\u6240\u4ee5\u91cd\u70b9\u653e\u5728Hash\u51fd\u6570\u4e0a\u3002\n\n### \u6982\u5ff5\n\n\u5c06\u4efb\u610f\u957f\u5ea6\u7684\u8f93\u5165\u53d8\u6362\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u51fa\u7684\u4e0d\u53ef\u9006\u7684\u5355\u5411\u5bc6\u7801\u4f53\u5236\n\nHash\u51fd\u6570\u5728\u6570\u5b57\u7b7e\u540d\u548c\u6d88\u606f\u5b8c\u6574\u6027\u68c0\u6d4b\u7b49\u65b9\u9762\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\n\nHash\u51fd\u6570\u540c\u65f6\u662f\u4e00\u79cd\u5177\u6709\u538b\u7f29\u7279\u6027\u7684\u5355\u5411\u51fd\u6570\uff0c\u5176\u50cf\u901a\u5e38\u79f0\u4e3a\u6570\u5b57\u6307\u7eb9\uff0c\u6d88\u606f\u6458\u8981\u6216\u6563\u5217\u503c\u3002\n\n\u6563\u5217\u503c\u7684\u751f\u6210\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a\n\nh = H(M)\n\n\u5176\u4e2dh\u662f\u5b9a\u957f\u7684\u6563\u5217\u503c\uff0cH\u662f\u54c8\u5e0c\u51fd\u6570\uff0cM\u662f\u4e00\u4e2a\u53d8\u957f\u6d88\u606f\n\n\u6563\u5217\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u6d88\u606f\u8ba4\u8bc1\u548c\u6570\u5b57\u7b7e\u540d\uff0c\u56e0\u6b64\u9700\u8981\u5177\u5907\u4ee5\u4e0b\u7279\u6027\n\nH\u53ef\u5e94\u7528\u4e8e\u4efb\u610f\u957f\u5ea6\u7684\u6d88\u606f\n\nH\u4ea7\u751f\u5b9a\u957f\u7684\u8f93\u51fa\n\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u6d88\u606fx\uff0c\u8ba1\u7b97H(x)\u6bd4\u8f83\u5bb9\u6613\uff0c\u7528\u786c\u4ef6\u8f6f\u4ef6\u5747\u53ef\u5b9e\u73b0\n\n\u5355\u5411\u6027\uff1a\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u6563\u5217\u503ch\uff0c\u627e\u5230\u6ee1\u8db3H(x) = h \u7684x\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\n\n\u6297\u5f31\u78b0\u649e\u6027\uff1a\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684\u6d88\u606fx\uff0c\u627e\u5230x != y\u5e76\u4e14H(x) = H(y)\u7684\u6d88\u606fy\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\n\n\u6297\u5f3a\u78b0\u649e\u6027\uff1a\u627e\u5230\u4efb\u4f55\u6ee1\u8db3H(x) = H(y) \u7684\u5076\u5bf9\uff08x,y\uff09\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\n\n### \u5e94\u7528\n\u6570\u5b57\u7b7e\u540d\n\n\u7531\u4e8e\u6d88\u606f\u6563\u5217\u503c\u901a\u5e38\u6bd4\u6d88\u606f\u672c\u8eab\u77ed\u7684\u591a\uff0c\u56e0\u6b64\u5bf9\u6d88\u606f\u6563\u5217\u503c\u8fdb\u884c\u6570\u5b57\u7b7e\u540d\u5728\u5904\u7406\u4e0a\u6bd4\u5bf9\u6d88\u606f\u672c\u8eab\u8fdb\u884c\u7b7e\u540d\u8981\u9ad8\u6548\u7684\u591a\u3002\n\n\u751f\u6210\u7a0b\u5e8f\u6216\u6587\u6863\u7684\u6570\u5b57\u6307\u7eb9\n\nhash\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u4fdd\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\u3002\u9996\u5148\uff0c\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u53d8\u6362\u5f97\u5230\u7a0b\u5e8f\u6216\u6587\u6863\u7684\u6563\u5217\u503c\uff0c\u7136\u540e\u5c06\u6563\u5217\u503c\u5b58\u50a8\uff0c\u5bf9\u7a0b\u5e8f\u6216\u6587\u6863\u8fdb\u884c\u5b9a\u65f6\u7684\u68c0\u6d4b\uff0c\u4e0e\u5df2\u5b58\u50a8\u7684\u6563\u5217\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u5b8c\u6574\u6027\u9a8c\u8bc1\u3002\n\n\u7528\u4e8e\u5b89\u5168\u4f20\u8f93\u548c\u7528\u6237\u53e3\u4ee4\n\n\u7528\u4e8e\u4fdd\u5b58\u7528\u6237\u767b\u9646\u53e3\u4ee4\uff08\u5bc6\u7801\uff09\uff0c\u901a\u8fc7\u7528\u6237id\u53ca\u53e3\u4ee4\u751f\u6210\u76f8\u5e94\u7684\u6563\u5217\u503c\uff0c\u7136\u540e\u4fdd\u5b58\uff0c\u7528\u6237\u5728\u8fdb\u5165\u7cfb\u7edf\u8f93\u5165\u53e3\u4ee4\u65f6\uff0c\u751f\u6210\u6563\u5217\u503c\u4e0e\u5b58\u50a8\u7684\u6563\u5217\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u7528\u6237\u53e3\u4ee4\u4e0d\u88ab\u7ba1\u7406\u5458\u6216\u653b\u51fb\u8005\u83b7\u53d6\u5230\n\n![](https://img2018.cnblogs.com/blog/1387012/201901/1387012-20190109121820782-592441859.png)\n\nHash\u51fd\u6570\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u3002\n\n\u5173\u4e8e\u672c\u4f53Hash\u51fd\u6570\u7684\u8bbe\u8ba1\uff1a\u6211\u4eec\u5bb9\u6613\u60f3\u52308\u4e2a\u6570\u5b57\u987a\u65f6\u9488\u987a\u5e8f\u7ec4\u5408\u62108\u8fdb\u5236\uff0c\u6240\u4ee5\u8981\u5f15\u5165\u5eb7\u6258\u5c55\u5f00\u3002\n\n\u5b9a\u4e49\uff1a\n\u5eb7\u6258\u5c55\u5f00\u662f\u4e00\u4e2a\u5168\u6392\u5217\u5230\u4e00\u4e2a\u81ea\u7136\u6570\u7684\u53cc\u5c04\uff0c\u5e38\u7528\u4e8e\u6784\u5efa\u54c8\u5e0c\u8868\u65f6\u7684\u7a7a\u95f4\u538b\u7f29\u3002 \u5eb7\u6258\u5c55\u5f00\u7684\u5b9e\u8d28\u662f\u8ba1\u7b97\u5f53\u524d\u6392\u5217\u5728\u6240\u6709\u7531\u5c0f\u5230\u5927\u5168\u6392\u5217\u4e2d\u7684\u540d\u6b21\uff0c\u56e0\u6b64\u662f\u53ef\u9006\u7684\u3002\n\n\u539f\u7406\u4ecb\u7ecd\n**X = A[0] * (n-1)! + A[1] * (n-2)! + \u2026 + A[n-1] * 0! **\n\nA[i] \u6307\u7684\u662f\u4f4d\u4e8e\u4f4d\u7f6ei\u540e\u9762\u7684\u6570\u5c0f\u4e8eA[i]\u503c\u7684\u4e2a\u6570,\u540e\u9762\u4e58\u7684\u5c31\u662f\u540e\u9762\u8fd8\u6709\u591a\u5c11\u4e2a\u6570\u7684\u9636\u4e58\n\n\u8bf4\u660e \uff1a\u8fd9\u4e2a\u7b97\u51fa\u6765\u7684\u6570\u5eb7\u62d6\u5c55\u5f00\u503c\uff0c\u662f\u5728\u6240\u6709\u6392\u5217\u6b21\u5e8f - 1\u7684\u503c\uff0c\u56e0\u6b64X+1\u5373\u4e3a\u5728\u5168\u6392\u5217\u4e2d\u7684\u6b21\u5e8f\n\u5217 \uff1a\n\u5728\uff081\uff0c2\uff0c3\uff0c4\uff0c5\uff095\u4e2a\u6570\u7684\u6392\u5217\u7ec4\u5408\u4e2d\uff0c\u8ba1\u7b97 34152\u7684\u5eb7\u6258\u5c55\u5f00\u503c\u3002\n\u5e26\u5165\u4e0a\u9762\u7684\u516c\u5f0f\n\nX = 2 * 4! + 2 * 3! + 0 * 2! + 1 * 1! + 0 * 0!\n=>X = 61\n\n\u672c\u9898\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint jc[10]={1,1,2,6,24,120,720,5040};\nint g,st,prt[50005],b[1000000]={0},step[50005];\nchar a[50005];\nstruct mb{int a[2][4];}start,goal,q[90000];\n\n\nint Turn(mb x)\n{\n\tint i,j,res=0,t[8],s;\n\tfor(i=0;i<4;i++) t[i]=x.a[0][i];\n\tfor(i=3;i>=0;i--) t[7-i]=x.a[1][i];\n\tfor(i=0;i<8;i++)\n\t{\n\t\ts=0;\n\t\tfor(j=i+1;j<=7;j++) if(t[j]<t[i]) s++;\n\t\tres+=jc[7-i]*s;\n\t}\t\n\treturn res;\n} \n\nmb Change(int way,int num)\n{\n\tmb temp;\n\tif(way==1)\n\t{\n\t\tfor(int i=0;i<4;i++) temp.a[0][i]=q[num].a[1][i];\n\t\tfor(int i=0;i<4;i++) temp.a[1][i]=q[num].a[0][i];\n\t\treturn temp;\n\t}\n\tif(way==2)\n\t{\n\t\ttemp.a[0][0]=q[num].a[0][3];\n\t\ttemp.a[1][0]=q[num].a[1][3];\n\t\tfor(int i=1;i<4;i++) temp.a[0][i]=q[num].a[0][i-1];\n\t\tfor(int i=1;i<4;i++) temp.a[1][i]=q[num].a[1][i-1];\n\t\treturn temp;\n\t}\n\tif(way==3)\n\t{\n\t\ttemp.a[0][0]=q[num].a[0][0];temp.a[0][3]=q[num].a[0][3];\n\t\ttemp.a[1][0]=q[num].a[1][0];temp.a[1][3]=q[num].a[1][3];\n\t\ttemp.a[0][1]=q[num].a[1][1];temp.a[0][2]=q[num].a[0][1];\n\t\ttemp.a[1][2]=q[num].a[0][2];temp.a[1][1]=q[num].a[1][2];\n\t\treturn temp;\n\t}\n}\n\nvoid Print(int num)\n{\n\tif(num==1) return;\n\tPrint(prt[num]);\n\tcout<<a[num];\n}\n\nvoid Bfs()\n{\n\tint op=1,cl=1,i,t;\n\tmb temp;\n\tq[1]=start;\n\tstep[1]=0;\n\tprt[1]=1;\n\twhile(op<=cl)\n\t{\n\t\tfor(i=1;i<=3;i++)\n\t\t{\n\t\t\ttemp=Change(i,op);\n\t\t\tt=Turn(temp);\n\t\t\tif(!b[t])\n\t\t\t{\n\t\t\t\tq[++cl]=temp;\n\t\t\t\tstep[cl]=step[op]+1;\n\t\t\t\tb[t]=1;\n\t\t\t\tprt[cl]=op;\n\t\t\t\ta[cl]=char('A'+i-1);\n\t\t\t\tif(t==g) \n\t\t\t\t{\n\t\t\t\t\tcout<<step[cl]<<endl;\n\t\t\t\t\tPrint(cl);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\n\t\t}\n\top++;\n\t} \n}\nint main()\n{\n\tint i;\n\tfor(i=0;i<4;i++) start.a[0][i]=i+1;\n\tfor(i=3;i>=0;i--) start.a[1][i]=8-i;\n\tst=Turn(start);\n\tb[st]=1;\n\tfor(i=0;i<4;i++) cin>>goal.a[0][i];\n\tfor(i=3;i>=0;i--) cin>>goal.a[1][i];\n\tg=Turn(goal);\n\tif(g==st) \n\t{\n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\tBfs();\n\treturn 0;\n}\n```\n## \u675c\u7edd\u4f5c\u5f0a\uff0c\u8bf7\u52ff\u6284\u88ad\n\n",
        "postTime": 1563245657,
        "uid": 156297,
        "name": "\u77ed\u77ed_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "~~\u54c8\u54c8\u770b\u89c1\u9898\u89e3\u670929\u7bc7\uff0c\u9a6c\u4e0a\u8981\u8fbe\u523030\u7684\u4e34\u754c\u503c\u4e86\uff0c\u6545\u6765\u51d1\u4e2a\u6574~~\n\n\u5176\u5b9e\u662f\u770b\u89c1\u5404\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801\u90fd\u5f88\u96be\u61c2\uff08~~\u6211\u592a\u849f\u4e86~~\uff09\uff0c\u6240\u4ee5\u6765\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u54c8\uff01\u5e0c\u671b\u5927\u5bb6\u559c\u6b22\n\n### \u65f6\u95f4\u6548\u7387\uff1a46ms, 3972KB \uff0c~~\u5e94\u8be5\u8fd8\u4e0d\u9519~~\n\n\u4e2a\u4eba\u601d\u8def\u5f88\u7b80\u5355\uff0c\u901a\u8fc7$BFS$\u6765\u5bfb\u627e\u6700\u4f18\u65b9\u6848\uff0c\u5173\u4e8e\u5224\u91cd\u4f7f\u7528\u7684\u662f$\\text{\u5eb7\u62d3\u5c55\u5f00}$\uff0c\u5177\u4f53\u5b9e\u8df5\u770b\u4ee3\u7801\u5427\uff01\n\n\u8fd9\u91cc\u63d0\u51fa\u4e00\u4e2a\u8282\u7701\u7a7a\u95f4\u7684\u601d\u8def\uff1a\u56e0\u4e3a\u6570\u5b57\u53ea\u6709$0\\sim8$\uff0c\u53ef\u4ee5\u7528`char[]`\u6765\u4ee3\u66ff`int[]`\uff0c\u8d77\u5230\u8282\u7701$3/4$\u7a7a\u95f4\u7684\u4f5c\u7528\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 12;\nconst int S = 50000; // S > 8!\n/*\nA, B, C \u4e09\u79cd\u65b9\u6cd5\u7684\u64cd\u4f5c\n\u4ee5TA\u4e3a\u4f8b TA[i]\u8868\u793a\u7684\u662f\u4ee5A\u65b9\u6cd5\u64cd\u4f5c\u4e00\u6b21\u540e\u7b2ci\u4f4d\u4e0a\u7684\u662f\u539f\u6765\u7b2cTA[i]\u4f4d\u4e0a\u7684\u6570 \n*/\nconst int TA[S] = { 0, 8, 7, 6, 5, 4, 3, 2, 1 };\nconst int TB[S] = { 0, 4, 1, 2, 3, 6, 7, 8, 5 };\nconst int TC[S] = { 0, 1, 7, 2, 4, 5, 3, 6, 8 };\n\nint fact[N], cnt = 1; // fact\u4e3a\u5eb7\u62d3\u5c55\u5f00\u7684\u9636\u4e58\u6570\u7ec4\nbool vis[S]; // \u5224\u91cd\u6570\u7ec4 \nchar state[S][N], goal[N]; // state[]\u7528\u6765\u8bb0\u5f55\u6240\u6709\u7684\u72b6\u6001\uff0cgoal\u662f\u76ee\u6807 \nstring way[S]; // way[i]\u4ee3\u8868\u7f16\u53f7\u4e3ai\u7684\u72b6\u6001\u5bf9\u5e94\u7684\u64cd\u4f5c\u4e32  \n\nvoid calc_fact() // \u5eb7\u62d3\u5c55\u5f00\u7684\u9884\u5904\u7406 \n{\n    fact[0] = 1;\n    for (int i = 1; i <= 9; i++) fact[i] = fact[i - 1] * i;\n}\nint contor(char *perm) // \u5eb7\u62d3\u5c55\u5f00\uff1a\u5c06\u5168\u6392\u5217perm[]\u6620\u5c04\u4e3a\u4e00\u4e2a\u7f16\u7801code \n{\n    int code = 0;\n    for (int i = 1; i <= 8; i++) \n\t{\n        int cnt = 0;\n        for (int j = i + 1; j <= 8; j++) cnt += perm[i] > perm[j];\n        code += fact[8 - i] * cnt;\n    }\n    return code;\n}\n\nvoid bfs() \n{\n    queue<int> que; // \u6ce8\u610f\uff0cque\u91cc\u9762\u5b58\u653e\u7684\u4e0d\u662f\u72b6\u6001\uff0c\u800c\u662f\u72b6\u6001\u7f16\u53f7 \n    que.push(1); // \u52a0\u5165\u521d\u59cb\u72b6\u6001 \n    vis[0] = true; // 1,2...8 \u7684contor\u503c\u4e3a0 \n    while (!que.empty()) \n\t{\n        int u = que.front(); // \u53d6\u51fa\u5f53\u524d\u72b6\u6001 \n        que.pop();\n        char A[S], B[S], C[S]; // \u5b58\u653e\u4e09\u79cd\u64cd\u4f5c\u540e\u7684\u72b6\u6001 \n        for (int i = 1; i <= 8; i++) // \u8ba1\u7b97\u72b6\u6001 \n\t\t{\n            A[i] = state[u][TA[i]];\n            B[i] = state[u][TB[i]];\n            C[i] = state[u][TC[i]];\n        }\n        int cA = contor(A), cB = contor(B), cC = contor(C); // \u6c42\u51facontor\u503c \n        if (!vis[cA]) // \u5982\u679c\u8fd8\u6ca1\u8bbf\u95ee\u8fc7 \n\t\t{\n            strcpy(state[++cnt] + 1, A + 1); // \u5c06\u65b0\u72b6\u6001\u5b58\u5165 \n            way[cnt] = way[u] + 'A'; // \u901a\u8fc7\u5f53\u524d\u7f16\u53f7\u7684\u64cd\u4f5c\u4e32\u63a8\u51fa\u65b0\u7f16\u53f7\u7684\u64cd\u4f5c\u4e32 \n            vis[cA] = true; // \u53bb\u91cd \n            que.push(cnt); // \u5165\u961f \n            if (!strcmp(A + 1, goal + 1)) // \u53d1\u73b0\u76ee\u6807 \n                return;\n        }\n        // \u4e0b\u6587B, C\u540c\u7406 \n        if (!vis[cB]) \n\t\t{\n            strcpy(state[++cnt] + 1, B + 1);\n            way[cnt] = way[u] + 'B';\n            vis[cB] = true;\n            que.push(cnt);\n            if (!strcmp(B + 1, goal + 1))\n                return;\n        }\n        if (!vis[cC]) \n\t\t{\n            strcpy(state[++cnt] + 1, C + 1);\n            way[cnt] = way[u] + 'C';\n            vis[cC] = true;\n            que.push(cnt);\n            if (!strcmp(C + 1, goal + 1))\n                return;\n        }\n    }\n}\nint main() \n{\n    calc_fact(); // \u9884\u5904\u7406 \n    for (int i = 1; i <= 8; i++) \n\t{\n        scanf(\"%d\", &goal[i]);\n        goal[i] += 48; // \u6570\u5b57\u8f6c\u5b57\u7b26 \n        state[1][i] = i + 48; // \u5b58\u5165\u521d\u59cb\u5168\u6392\u5217 \n    }\n    if (!strcmp(goal + 1, state[1] + 1)) // \u7279\u5224\uff1a\u5982\u679c\u76ee\u6807\u5c31\u662f\u521d\u59cb\u5168\u6392\u5217\u5c31\u76f4\u63a5\u9000\u51fa \n        return puts(\"0\") && 0;\n    bfs();\n    printf(\"%d\\n\", way[cnt].size());\n    for (int i = 0; i < way[cnt].size(); i++) \n\t{\n        printf(\"%c\", way[cnt][i]);\n        if ((i + 1) % 60 == 0) // \u6362\u884c\u5904\u7406 \n            puts(\"\");\n    }\n    return 0;\n}\n```\n\n~~\u5982\u679c\u559c\u6b22\u6211\u7684\u7801\u98ce\uff0c\u9ebb\u70e6\u70b9\u4e2a\u8d5e\u54c8~~\n\n## Update\n\u6211\u6765\u8865\u5145\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u51e0\u79cd\u4e0d\u540c\u7684\u5224\u91cd\u65b9\u6cd5\u4f9b\u5927\u5bb6\u53c2\u8003\n\n### $1.\\text{\u5eb7\u62d3\u5c55\u5f00}$\n \u672c\u6587\u5373\u662f\n### $2.hash$\n \u901a\u8fc7\u5c06\u516b\u4f4d\u6570\u5b57\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6570\u5b58\u5165\u54c8\u5e0c\u8868\u5185\u8fdb\u884c\u5224\u91cd\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u6211[P1379 \u516b\u6570\u7801\u96be\u9898](https://www.luogu.org/problemnew/show/P1379)\u7684[\u4ee3\u7801](https://www.luogu.org/paste/bnqaod4i)\n### $3.M\\!AP$\n\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u5708\uff0c\u53d1\u73b0 @[getchar123](https://www.luogu.org/space/show?uid=102754)\u7684[\u9898\u89e3](https://www.luogu.org/blog/getchar123/solution-p2730)\u5c31\u662f\u8fd9\u4e48\u5199\u7684\uff0c~~\u4e0d\u8fc7\u5e38\u6570\u6bd4\u8f83\u5927~~\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b",
        "postTime": 1558017592,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "  \u5173\u4e8e\u8fd9\u9053\u9898\uff0c\u53d1\u73b0\u522b\u7684dalao\u4eec\u4ee3\u7801\u5f88\u957f\uff0c\u5176\u5b9e\u7528\u4e0d\u4e86\u90a3\u4e48\u591a\uff0c50\u884c\u5185\u5c31\u53ef\u4ee5\u89e3\u51b3\u7684\n\n  ~~\u7801\u98ce\u4e0d\u597d\uff0c\u4e0d\u559c\u52ff\u55b7~~\n  # \u601d\u8def\n\n  \u8fd9\u9053\u9898\u4e00\u773c\u671b\u53bb\uff0c\u5c31\u770b\u5230\u4e86 \u201c**\u6700\u5c11\u7684\u64cd\u4f5c**\u201d \u8fd9\u51e0\u4e2a\u5b57\uff0c\u6240\u4ee5\u663e\u800c\u6613\u89c1\u662fBFS\n\n  \u5173\u4e8eBFS\u7684\u4ee3\u7801\uff0c\u6211\u89c9\u5f97\u4e0d\u6210\u95ee\u9898\uff0c\u4e3b\u8981\u7684\u662f\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u987a\u5e8f\uff0c\u53ef\u80fd\u6709\u4e9b\u4eba\u4e0d\u6653\n\n  \u5f97\u5982\u4f55\u8bb0\u5f55\uff0c\u5176\u5b9e\u5f00\u4e00\u4e2a\u5b57\u7b26\u4e32\u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86\n\n  \u7136\u540e\u7531\u4e8e\u53ea\u6709\u516b\u4e2a\u65b9\u5757\uff0c\u6240\u4ee5 bool \u578b\u5f008\u7ef4\u4e5f\u6ca1\u5173\u7cfb\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6240\u6709\u7684\u72b6\u6001\n  \n ~~\u8fd9\u9053\u9898\u597d\u6c34\u554a\uff0c\u4e3a\u4ec0\u4e48\u662f\u84dd\u9898\uff0c\u4e0d\u5c31\u9ebb\u70e6\u70b9\u5417~~\n\n  # \u4ee3\u7801\n  ```\n  #include<iostream>\n  #include<cstdio>\n  #include<algorithm>\n  #include<queue>\n  using namespace std;\n  struct aq\n  {\n      int t,y,u,i,g,h,j,k,time;     //\u516b\u4e2a\u683c\u5b50\uff08\u4f60\u4eec\u53ef\u4ee5\u770b\u4e0b\u81ea\u5df1\u7684\u952e\u76d8\u4e0a\u7684\u90a38\u4e2a\u6309\u952e\uff09\u548c\u8fd0\u8f6c\u7684\u6b21\u6570\n      string c;\t\t\t\t     //\u4fdd\u5b58\u8def\u5f84\u7684\u5b57\u7b26\u4e32\n  }m,z;\n  bool ok[9][9][9][9][9][9][9][9];  //\u5224\u91cd\u7684bool\u6570\u7ec4\n  queue<aq>qa;\t\t\t\t      //\u521b\u5efa\u961f\u5217\u8fdb\u884cBFS\n  int main()\n  {\n  \t//\u8bfb\u5165\u76ee\u6807\u6570\u636e\uff0c\u5c06\u521d\u59cb\u72b6\u6001\u8c03\u6574\u5e76\u538b\u5165\u961f\u5217\uff0c\u5f00\u59cbBFS\u5faa\u73af\n      cin>>m.t>>m.y>>m.u>>m.i>>m.k>>m.j>>m.h>>m.g;\n      m.time=0;\n      qa.push((aq){1,2,3,4,8,7,6,5,0,\"\"});\n      ok[1][2][3][4][8][7][6][5]=1;\n      while(!qa.empty())\n      {\n      \t//\u53d6\u51fa\u961f\u9996\u5143\u7d20\u5e76\u5f39\u51fa\n          z=qa.front();qa.pop();\n          //\u5224\u65ad\u662f\u5426\u8fbe\u5230\u76ee\u6807\u72b6\u6001\uff0c\u6ee1\u8db3\u6761\u4ef6\u540e\u8f93\u51fa\u5e76\u7ed3\u675f\u7a0b\u5e8f\n          if(z.t==m.t&&z.y==m.y&&z.u==m.u&&z.i==m.i&&z.g==m.g&&z.h==m.h&&z.j==m.j&&z.k==m.k)\n          {\n              cout<<z.time<<\"\\n\"<<z.c;\n              return 0;\n          }\n          //\u6a21\u62df\u4e09\u4e2a\u64cd\u4f5c\uff0c\u5e76\u5c06\u64cd\u4f5c\u4fdd\u5b58\u5728c\u5b57\u7b26\u4e32\u4e2d\n          if(!ok[z.g][z.h][z.j][z.k][z.t][z.y][z.u][z.i])\n          {\n              ok[z.g][z.h][z.j][z.k][z.t][z.y][z.u][z.i]=1;\n              qa.push((aq){z.g,z.h,z.j,z.k,z.t,z.y,z.u,z.i,z.time+1,z.c+\"A\"});\n          }\n          if(!ok[z.i][z.t][z.y][z.u][z.k][z.g][z.h][z.j])\n          {\n              ok[z.i][z.t][z.y][z.u][z.k][z.g][z.h][z.j]=1;\n              qa.push((aq){z.i,z.t,z.y,z.u,z.k,z.g,z.h,z.j,z.time+1,z.c+\"B\"});\n          }\n          if(!ok[z.t][z.h][z.y][z.i][z.g][z.j][z.u][z.k])\n          {\n              ok[z.t][z.h][z.y][z.i][z.g][z.j][z.u][z.k]=1;\n              qa.push((aq){z.t,z.h,z.y,z.i,z.g,z.j,z.u,z.k,z.time+1,z.c+\"C\"});\n          }\n      }\n  }\n  ```",
        "postTime": 1539342416,
        "uid": 89785,
        "name": "\u7a7a\u306e\u8ecc\u8de1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "# P2730 / USACO 3.2 \u9b54\u677f~~(\u6a21\u677f)~~\n### \u7b97\u6cd5\uff1aBFS\n###### 135ms, 77584KB\n _\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3_ \n \n[\u672c\u9898\u94fe\u63a5](https://www.luogu.org/problemnew/show/P2730)\n\n\u8fd9\u4e2a\u9b54\u677f\u5171\u6709 8 \u4f4d\uff0c\u6240\u4ee5\u6700\u591a\u4e5f\u5c31\u4f1a\u51fa\u73b0 8\uff01\u79cd\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u662f\u6c42\u53d8\u5316\u6b21\u6570\u6700\u5c11\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u91cd\u590d\u7684\u60c5\u51b5\u4e0d\u7528\u518d\u6b21\u641c\u7d22\uff0c\u5e7f\u641c O(8!) \u7684\u590d\u6742\u5ea6\u662f\u4e0d\u4f1aT\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u6700\u521d12345678\u5f00\u59cb\u641c\u7d22\uff0c\u8fbe\u5230\u8bfb\u5165\u7684\u76ee\u6807\u4e3a\u6b62\u3002\u6bcf\u6b21\u641c\u7d22\u4e09\u79cd\u64cd\u4f5c\u80fd\u5230\u7684\u72b6\u6001\u3002\n\n\u8bb0\u5f55\u7684\u8bdd\u5c31\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e00\u4e2a 8 \u4f4d\u6574\u6570\u8bb0\u5f55\u9b54\u677f\u7684\u72b6\u6001 _(\u4f46\u662f\u4f1a\u6709\u8bb8\u591a\u7a7a\u95f4\u662f\u6d6a\u8d39\u7684\uff0c\u7528 \u5eb7\u6258\u5c55\u5f00 \u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff0c\u4f46\u662f\u672c\u849f\u84bb\u4e0d\u4f1a)_ \uff0c\u4e00\u4e2a\u6570\u8bb0\u5f55\u5230\u8fbe\u8fd9\u4e2a\u72b6\u6001\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u8bb0\u5f55\u8fbe\u5230\u8fd9\u6b65\u8fdb\u884c\u7684\u64cd\u4f5c\u3002\n\n![](https://s1.ax1x.com/2018/09/11/ikkv80.png)\n# \u56fe\u4e2dA\u540e\u9762\u7b2c\u4e00\u884c\u662f8765\uff0c\u624b\u6ed1\u6253\u9519\u4e86\uff0c\u611f\u8c22 @\u64a9\u59b9\u51db\u9171 \u7684\u63d0\u9192\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n\tbool b[87654322];//\u5224\u65ad\u91cd\u590d\u3002\u5982\u679c\u518d\u6b21\u8fbe\u5230\uff0c\u5df2\u7ecf\u4e0d\u662f\u6700\u4f18\uff0c\u800c\u4e14\u4f1a\u6b7b\u5faa\u73af\n\tint t,h,a\uff0c\n    \tgol,\t//\u56e0\u4e3a\u8f93\u5165\u662f\u7528\u7a7a\u683c\u9694\u5f00\u7684\uff0c\u8fd9\u91cc\u7528\u4e00\u4e2a\u6574\u6570\u8bb0\u5f55\u76ee\u6807\u72b6\u6001\n        nxt,\t//\u8bb0\u5f55\u72b6\u6001\uff0c\u7528\u4e8e\u6bcf\u6b21\u641c\u7d22\u524d\u5bf9\u4e8e\u4e0b\u4e00\u6b65\u53ef\u884c\u6027\u7684\u5224\u65ad \u4ee5\u53ca\u4e3a\u4e0b\u4e00\u72b6\u6001\u8d4b\u503c\n        ansstep;//\u6700\u5c0f\u6b65\u6570\n\tstruct bfs\t//\u7528\u4e8e\u5e7f\u641c\u7684\u961f\u5217\n\t{\n\t\tint z,step;\t//z\u662f\u72b6\u6001\uff0cstep\u662f\u672c\u72b6\u6001\u6700\u5c0f\u6b65\u6570\n\t\tstring cz;\t//\u5df2\u7ecf\u8fdb\u884c\u7684\u64cd\u4f5c\n\t}dl[40325];\t\t//8\uff01\u5e94\u8be5\u5df2\u7ecf\u591f\u7528\u4e86\n\tstring ans;\t\t//\u8bb0\u5f55\u8981\u8f93\u51fa\u7684\u65b9\u6848\n\t\nint A(int a)\n{\n\tint b = 0;\n\tfor(int i = 1; i <= 8; i++)\n\t{\n\t\tb = b*10+a%10;\n\t\ta /= 10;\n\t}\n\treturn b;\n}\nint B(int a)\n{\n\tint w[10]={0},b = 0;\n\tfor(int i = 1; i <= 8; i++)\n\t{\n\t\tw[i] = a%10;\n\t\ta /= 10;\n\t}\t\t\t\t\t//\u628a\u6bcf\u4e00\u4f4d\u53d6\u51fa\uff0c\u8f6c\u6362\u6210\u4e0b\u4e00\u6b65\u7684\u72b6\u6001\n\tb = w[5]*10000000\n\t   +w[8]*1000000\n       +w[7]*100000\n       +w[6]*10000\n       +w[3]*1000\n       +w[2]*100\n       +w[1]*10\n       +w[4];\n\treturn b;\n}\nint C(int a)\n{\n\tint w[10]={0},b = 0;\n\tfor(int i = 1; i <= 8; i++)\n\t{\n\t\tw[i] = a%10;\n\t\ta /= 10;\n\t}\n\tb = w[8]*10000000\n       +w[2]*1000000\n\t   +w[7]*100000\n\t   +w[5]*10000\n\t   +w[4]*1000\n\t   +w[6]*100\n       +w[3]*10\n       +w[1];\n\treturn b;\n}\nstring s()\n{\n\tdl[++t].z=12345678;\n\tb[12345678] = 1;\n\twhile(h<t)\n\t{\n\t\th++;\n\t\tif(dl[h].z == gol)\t//\u5982\u679c\u5230\u8fbe\u76ee\u6807\uff0c\u8f93\u51fa\u6b65\u6570\u5e76\u8fd4\u56de\u65b9\u6848\n\t\t{\n\t\t\tansstep = dl[h].step;\n\t\t\tcout<<dl[h].step<<endl;\n\t\t\treturn dl[h].cz;\n\t\t}\n\t\tif(!b[nxt = A(dl[h].z)])\n\t\t{\n\t\t\tdl[++t].z = nxt;\n\t\t\tdl[t].cz = dl[h].cz + \"A\";\n\t\t\tb[dl[t].z] = 1;\n\t\t\tdl[t].step = dl[h].step + 1;\n\t\t}\n\t\tif(!b[nxt = B(dl[h].z)])\n\t\t{\n\t\t\tdl[++t].z = nxt;\n\t\t\tdl[t].cz = dl[h].cz + \"B\";\n\t\t\tb[dl[t].z] = 1;\n\t\t\tdl[t].step = dl[h].step + 1;\n\t\t}\n\t\tif(!b[nxt = C(dl[h].z)])\n\t\t{\n\t\t\tdl[++t].z = nxt;\n\t\t\tdl[t].cz = dl[h].cz + \"C\";\n\t\t\tb[dl[t].z] = 1;\n\t\t\tdl[t].step = dl[h].step + 1;\n\t\t}\n\t}\n}\nint main()\n{\nios::sync_with_stdio(false);\t//\u6211\u5c31\u662f\u6d41\u8f93\u5165T\u6389\uff0c\u4f18\u5316ce\uff0c\u4e5f\u4e0d\u4f1a\u518d\u78b0\u683c\u5f0f\u5316\u8f93\u5165\u8f93\u51fa\u4e00\u6b21\uff01 ~~\u771f\u9999~~\n\tfor(int i = 1; i <= 8; i++)\n\t{\n\t\tcin>>a;\n\t\tgol = gol*10 + a;\t\t//\u628a\u8f93\u5165\u7684 8 \u4e2a\u6570\u53d8\u4e3a\u4e00\u4e2a\u6574\u6570\n\t}\n\tans = s();\n\tfor(int i = 0; i <= ansstep; i+=60)//\u6bcf60\u4e2a\u5b57\u7b26\u6362\u4e00\u6b21\u884c\n\t{\n\t\tcout<<ans.substr(i,i+59)<<endl;\n        /*\n        cout<<str.substr(i,i+n)\n        \u8f93\u51fa str[i] \u5230 str[i+n] \u95ed\u533a\u95f4\uff0c\u5171 n+1 \u4f4d \n\t\t*/\n    }\nreturn 0;\n}\n```\n _\u7b2c\u4e00\u6b21\u5199\uff0c\u4e0d\u592a\u4f1a\u7528\uff0c\u611f\u89c9\u683c\u5f0f\u597d\u5947\u602a\u554a\u3002\u3002\u3002_ ",
        "postTime": 1536666493,
        "uid": 57702,
        "name": "0Zero\u4e36\u7d2b\u77b3",
        "ccfLevel": 0,
        "title": "P2730 \u9b54\u677f"
    },
    {
        "content": "\u770b\u5230dalao\u4eec\u90fd\u7528\u4e86\u5eb7\u6258\u5c55\u5f00\uff1f\uff1f\uff1f\njuruo\u8868\u793a\u6839\u672c\u6ca1\u542c\u8bf4\u8fc7\u8fd9\u4e2a\u73a9\u610f\u513f \n\u4e8e\u662f\u76f4\u63a5\u7528\u54c8\u5e0c+map\u82df\u8fc7\u53bb\u4e86\uff1f\uff1f\uff1f\uff1f\uff1f\uff08\u5927\u96fe\n\u6bd5\u7adf\u53ea\u662f\u4e2a8\u4f4d\u6570\u561bint\u90fd\u80fd\u8868\u793a\n\n\n------------\n\u4e0d\u9519\u7684\u641c\u7d22\u9898\uff0c\u4e00\u5f00\u59cb\u5dee\u70b9\u60f3\u6210dfs\uff0c\u4f46\u4ed4\u7ec6\u7422\u78e8\u7422\u78e8\u4f3c\u4e4ebfs\u66f4\u597d\u4e00\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b65\u64cd\u4f5c\u7684\u4ee3\u4ef7\u90fd\u4e3a1\u561b\u3002\u3002\u3002\n\u4e3a\u4e86\u65b9\u4fbf\u5199\u4e86\u4e00\u4e2astruct\u7528\u6765\u8bb0\u5f55\uff1a\u5f53\u524d\u7684\u56fecur\uff08\u6ce8\u610f\u6211\u7684\u6570\u7ec4\u90fd\u662f\u6309\u7167\u4e00\u5f00\u59cb\u662f1 2 3 4 5 6 7 8\u5199\u7684\u3002\u5373\u9898\u56fe\u4e2d\u86c7\u5f62\u7684\u987a\u5e8f\u3002\uff09\u3001\u5f53\u524d\u6240\u7528\u6b65\u6570step\uff08\u5176\u5b9e\u8fd9\u4e2a\u53d8\u91cf\u65f6\u591a\u4f59\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528ans.size()\u8868\u793a\uff09\u4ee5\u53ca\u8bb0\u5f55\u5f53\u524d\u64cd\u4f5c\u6b65\u9aa4\u7684\u5b57\u7b26\u4e32ans\uff08\u611f\u89c9\u8fd9\u4e2a\u6bd4\u8bb0\u5f55\u6bcf\u4e00\u6b65\u7684\u524d\u9a71\u7136\u540e\u9012\u5f52\u8f93\u51fa\u65b9\u4fbf\u8bb8\u591a\u5509\u3002\u3002\uff09\u3002\n\u7136\u540e\u57fa\u672c\u4e0a\u5c31\u662f\u6838\u5fc3\u7684bfs\u90e8\u5206\u4e86\u3002\u3002\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u76f4\u63a5\u770b\u4ee3\u7801\u54272333\n\u81f3\u4e8eA B C\u7684\u64cd\u4f5c\u90e8\u5206\u8fd9\u91cc\u8fd0\u7528\u4e86swap\u3002\u3002\u3002\u7a0d\u5fae\u753b\u4e0b\u56fe\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u65b9\u6cd5\n\u6c42dalao\u8f7b\u8650\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct graph{ //\u524d\u6587\u4e2d\u63d0\u5230\u7684struct\n    int cur[8];\n    int step;\n    string ans;\n};\n\nqueue <graph> q; //\u7528\u4e8ebfs\u7684\u961f\u5217\nmap <int,bool> vis;  //\u7528\u6765\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee\u8fc7\u7684map\uff08\u7ed3\u5408\u54c8\u5e0c\u4f7f\u7528\uff09\n\nint goal;\n\nint Hash(int a[]) { //\u54c8\u5e0c\n    int ret=0;\n    for (int i=0;i<8;i++) ret=ret*10+a[i];\n    return ret;\n}\n\nint main(){\n    graph a;\n    a.step=0;\n    a.ans=\"\";\n    for (int i=0;i<8;i++) {\n        int x;\n        scanf(\"%d\",&x);\n        goal=goal*10+x;\n        a.cur[i]=i+1; //\u4e4b\u524d\u5fd8+1\u4e86\u3002\u3002\u3002\u7ed3\u679c\u4e00\u76f4\u6b7b\u5faa\u73af\u8c03\u4e86\u597d\u4e00\u4f1a\u513f\u624d\u53d1\u73b0\n    }\n    q.push(a);\n    while (q.size()){\n        graph p=q.front();\n        q.pop();\n        int tmp=Hash(p.cur);\n        if (tmp==goal) {\n            cout<<p.step<<endl<<p.ans<<endl;\n            return 0;\n        }\n        if (vis[tmp]==true) continue;\n        vis[tmp]=true;\n        graph x=p;\n        //A\n        for (int i=0;i<4;i++) swap(x.cur[i],x.cur[7-i]);\n        x.step=p.step+1;\n        x.ans+=\"A\";\n        q.push(x);\n        //B\n        x=p;\n        swap(x.cur[0],x.cur[3]);\n        swap(x.cur[2],x.cur[3]);\n        swap(x.cur[1],x.cur[2]);\n        swap(x.cur[7],x.cur[4]);\n        swap(x.cur[5],x.cur[4]);\n        swap(x.cur[5],x.cur[6]);\n        x.step=p.step+1;\n        x.ans+=\"B\";\n        q.push(x);\n        //C\n        x=p;\n        swap(x.cur[2],x.cur[5]);\n        swap(x.cur[1],x.cur[2]);\n        swap(x.cur[1],x.cur[6]);\n        x.step=p.step+1;\n        x.ans+=\"C\";\n        q.push(x);\n    }\n    return 0;\n}\n```",
        "postTime": 1527510416,
        "uid": 65566,
        "name": "Myrcella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "##**\u5206\u6790** \u54c8\u5e0c\u8868 + \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\n- \u770b\u5230\u8fd9\u6837\u7684\u9898\u76ee\u5e94\u8be5\u5f88\u5bb9\u6613\u60f3\u5230\u641c\u7d22\uff0c\u4f46\u5982\u679c\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u505a\uff0c\u5219\u53ef\u80fd\u4f1a\u4e00\u76f4\u65e0\u6cd5\u53d8\u6362\u5230\u76ee\u6807\u72b6\u6001\uff0c\u4ece\u800c\u5bfc\u81f4\u6b7b\u5faa\u73af\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u90a3\u4e48\u6700\u5148\u641c\u5230\u7684\u6b65\u6570\u80af\u5b9a\u6700\u5c11\u3002\u800c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5bf9\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u72b6\u6001\u8fdb\u884c\u5224\u91cd\uff0c\u4e8e\u662f\u5bf9\u4e8e\u8fd9\u4e00\u7c7b\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u54c8\u5e0c\u8868\u3002\n\n- \u8003\u8651\u4e00\u79cd\u6700\u4e3a\u7b80\u5355\u7684\u601d\u8def\uff0c\u628a\u4e00\u79cd\u72b6\u6001\u4e2d\u7684\u516b\u4e2a\u6570\u5b57\u5bf9\u5e94\u8f6c\u6362\u6210\u516b\u4f4d\u5341\u8fdb\u5236\u6570\u4e0a\u7684\u67d0\u4e00\u4f4d\u4e0a\uff0c\u4f46\u8fd9\u6837\u662f\u5b58\u50a8\u4e0d\u4e0b\u7684\u3002\u6211\u4eec\u60f3\u5230\u9664\u4f59\u6cd5\uff0c\u53d1\u73b0\u5171\u6709\u5168\u6392\u5217$8!=40320$\u4e2a\u60c5\u51b5\u3002\u4e8e\u662f\u6211\u4eec\u8bbe\u7684\u6a21\u6570\u5927\u6982\u662f\u6bd4$40320$\u7a0d\u5927\u7684\u7d20\u6570\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u79cd\u60c5\u51b5\u5bf9\u5e94\u5230\u54c8\u5e0c\u8868\u4e2d\u3002\uff08\u819c\u62dc\u7528\u5eb7\u6258\u5c55\u5f00\u505a\u7684\u5927\u795e\uff09\n\n- \u9274\u4e8e\u672c\u9898\u7684\u7279\u6b8a\u6027\uff0c\u5176\u5b9e\u6211\u4eec\u8fd8\u53ef\u4ee5\u8003\u8651\u53e6\u4e00\u79cd\u8f83\u4e3a\u7b80\u4fbf\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u56e0\u4e3a\u72b6\u6001\u53ea\u5305\u542b\u8fd9\u516b\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u7edf\u4e00\u4ee4\u5176\u51cf\u4e00\uff0c\u5219\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8fd9\u516b\u4e2a\u6570\u5b57\u4f5c\u4e3a\u4e00\u4e2a\u516b\u4f4d\u516b\u8fdb\u5236\u6570\u4e0a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f**\u57fa\u6570\u8f6c\u6362\u6cd5**\u3002\n\n- \u8fd9\u6837\u505a\u7684\u4f18\u70b9\u5728\u54ea\u5462\uff1f\u6211\u4eec\u4f1a\u53d1\u73b0\u6700\u5927\u7684\u72b6\u6001$(76543210)_8=(16434824)_{10}$\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5f00\u4e00\u4e2a\u5927\u7ea6$1650$\u4e07\u7684$bool$\u6570\u7ec4\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u6765\u5224\u91cd\u4e86\uff0c\u800c\u4e0d\u9700\u8981\u518d\u4f7f\u7528\u9664\u4f59\u6cd5\u7b49\u7b49\u7684\u64cd\u4f5c\u3002\u5e76\u4e14\u6bcf\u4e00\u79cd\u72b6\u6001\u662f\u552f\u4e00\u7684\uff0c\u4e5f\u4e0d\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u7684\u60c5\u51b5\uff0c\u53e6\u5916\u8f6c\u6210\u516b\u8fdb\u5236\u6570\u7684\u4e58\u4ee5$8$\u4e5f\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u4e2d\u7684\u53f3\u79fb\u6765\u5feb\u901f\u5b9e\u73b0\u3002\n\n##**\u4ee3\u7801**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\nconst int N = 5e4 + 5, M = 165e5;\nconst int G[3][9] = {{0, 8, 7, 6, 5, 4, 3, 2, 1}, \n                     //\u64cd\u4f5cA\uff1a\u4ea4\u6362\u4e0a\u4e0b\u4e24\u884c \n                      {0, 4, 1, 2, 3, 6, 7, 8, 5}, \n                     //\u64cd\u4f5cB\uff1a\u5c06\u6700\u53f3\u8fb9\u7684\u4e00\u5217\u63d2\u5165\u6700\u5de6\u8fb9 \n                      {0, 1, 7, 2, 4, 5, 3, 6, 8}};\n                     //\u64cd\u4f5cC\uff1a\u9b54\u677f\u4e2d\u592e\u56db\u683c\u4f5c\u987a\u65f6\u9488\u65cb\u8f6c \n\n//\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e38\u91cf\u6570\u7ec4\u6765\u7b80\u5355\u5730\u8868\u793aABC\u4e09\u79cd\u64cd\u4f5c \n//\u5373\u7ecf\u8fc7\u8fd9\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u73b0\u5728\u72b6\u6001\u4e2d\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\u662f\u6709\u539f\u5148\u7684\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u53d8\u6362\u6765\u7684 \n\nint h[N][9], a[9], pf[N][2]; char stk[N];\nint t, w = 1, x, edt, now, top;\nbool vis[M]; //\u7528\u4e8e\u5224\u91cd\u7684bool\u6570\u7ec4 \n                     \nint main()\n{\n    for (int i = 1; i <= 8; ++i)\n     scanf(\"%d\", &x), edt = (edt << 3) + x - 1;\n    //\u540c\u6837\u5c06\u76ee\u6807\u72b6\u6001\u8f6c\u6362\u4e3a\u516b\u8fdb\u5236\u6570\uff0c\u4fbf\u4e8e\u6211\u4eec\u76f4\u63a5\u5224\u65ad \n    for (int i = 1; i <= 8; ++i) \n     now = (now << 3) + (h[1][i] = i - 1);\n    //\u201c<< 3\u201d\u5373\u8868\u793a\u4f4d\u8fd0\u7b97\u7684\u53f3\u79fb\u4e09\u4f4d\uff0c\u4e5f\u5c31\u662f\u4e58\u4ee58 \n    vis[now] = true; //\u6ce8\u610f\u521d\u59cb\u72b6\u6001\u4e5f\u8981\u6807\u8bb0\u4e3a\u5df2\u7ecf\u641c\u7d22\u8fc7 \n    if (now == edt) return puts(\"0\"), 0;\n    //\u6ce8\u610f\u5982\u679c\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\u76f8\u540c\u5e94\u76f4\u63a5\u9000\u51fa \n    while ((t++) < w)\n    {\n        for (int i = 0; i < 3; ++i)\n        //\u5bf9\u4e8e\u7b54\u6848\u4e2d\u7684\u64cd\u4f5c\u5b57\u5178\u5e8f\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u6309\u7167\u64cd\u4f5cABC\u7684\u987a\u5e8f\u641c\u7d22\n        //\u8fd9\u6837\u5148\u641c\u7d22\u5230\u7684\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 \n        {\n            now = 0;\n            for (int j = 1; j <= 8; ++j) \n             now = (now << 3) + (a[j] = h[t][G[i][j]]);\n            //\u8ba1\u7b97\u7ecf\u8fc7\u8f6c\u6362\u540e\u7684\u72b6\u6001 \n            \n            if (vis[now]) continue; //\u5224\u91cd \n            vis[now] = true;\n            pf[++w][0] = t; pf[w][1] = i + 'A';\n            //\u56e0\u4e3a\u9898\u76ee\u4e2d\u8981\u6c42\u8f93\u51fa\u64cd\u4f5c\u5e8f\u5217\n            //\u8bb0\u5f55\u961f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u662f\u7531\u4e4b\u524d\u7684\u54ea\u4e00\u4e2a\u5143\u7d20\u3001\u7ecf\u8fc7\u54ea\u4e00\u4e2a\u64cd\u4f5c\u8f6c\u6362\u6765\u7684\n            //\u7136\u540e\u6309\u7740\u5f53\u524d\u641c\u5230\u7684\u76ee\u6807\u72b6\u6001\u5012\u7740\u627e\u56de\u53bb\uff0c\u518d\u987a\u7740\u8f93\u51fa\u64cd\u4f5c\u5c31\u662f\u7b54\u6848\u4e86 \n            h[w][0] = h[t][0] + 1;\n            for (int j = 1; j <= 8; ++j) h[w][j] = a[j];\n        \n            if (now == edt) //\u8f6c\u6362\u5230\u4e86\u76ee\u6807\u72b6\u6001 \n            {\n                printf(\"%d\\n\", h[w][0]); x = w;\n                while (pf[x][0]) stk[++top] = pf[x][1], x = pf[x][0];\n                //\u6570\u7ec4stk\u5373\u8bb0\u5f55\u8f6c\u6362\u5230\u76ee\u6807\u72b6\u6001\u4f9d\u6b21\u8fdb\u884c\u7684\u64cd\u4f5c \n                for (int i = top; i >= 1; --i) putchar(stk[i]);\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1503119226,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u53ef\u4ee5\u7528\u5e7f\u641c\uff0c\u5728\u641c\u51fa\u6bcf\u4e2a\u72b6\u6001\u4e4b\u540e\u53ef\u4ee5\u7528\u5eb7\u6258\u5c55\u5f00\u6765\u5224\u91cd\uff08\u5eb7\u6258\u5c55\u5f00\u5176\u5b9e\u662f\u53e6\u4e00\u79cd\u54c8\u5e0c\uff0c\u4ed6\u628a\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\u4fe1\u606f\u4e0e\u503c\u8054\u7cfb\u8d77\u6765\uff09\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u7528map\u4f5c\u4e3aVIS\u6570\u7ec4\uff0c\u56e0\u4e3a\u5eb7\u6258\u4f1a\u5f88\u5927\u3002\n\n\u5269\u4e0b\u7684\u524d\u8f88\u4eec\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u662f\u5f3a\u8c03\u4e00\u4e0bmap\uff0c\u8981\u4e0d\u7136\u4ea4\u5230USACO\u4e0a\u4f1aRE\n\n\n/\\*\nID: linda\\_f1\n\nPROG: msquare\n\nLANG: C++\n\n\\*/\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <map>\nusing namespace std;\nint fac[9]={1,1,2,6,24,120,720,5040,40320};//contor \nstruct point\n{\n    int a[10];\n    int n;\n    int step;\n}p[80000];\nint goal,bas,tot=0;\nint f[50320];\nmap<int,bool> vis;\nint contor(int t)\n{\n    int num=0,k=0;\n    for(int i=1;i<=8;i++)\n    {\n        k=0;\n        for(int j=i+1;j<=8;j++)\n            if(p[t].a[i]>p[t].a[j]) \n                k++;\n        num+=k*fac[8-i];\n    }\n    return num;\n}\nvoid init()\n{\n    for(int i=1;i<=4;i++)\n        p[1].a[i]=i;\n    for(int i=5;i<=8;i++)\n        p[1].a[i]=13-i;\n    vis[contor(1)]=true;\n}\nvoid out(int t)\n{\n    if(t==1)\n        return;\n    out(f[t]);\n    if(f[t]==1)\n        cout<<tot<<endl;\n    if(p[t].n==1)\n        cout<<\"A\";\n    if(p[t].n==2)\n        cout<<\"B\";\n    if(p[t].n==3)    \n        cout<<\"C\";\n}\nvoid A(int t)\n{\n    swap(p[t].a[1],p[t].a[5]);\n    swap(p[t].a[2],p[t].a[6]);\n    swap(p[t].a[3],p[t].a[7]);\n    swap(p[t].a[4],p[t].a[8]);\n}\nvoid B(int t)\n{\n    swap(p[t].a[4],p[t].a[3]);swap(p[t].a[8],p[t].a[7]);\n    swap(p[t].a[3],p[t].a[2]);swap(p[t].a[7],p[t].a[6]);\n    swap(p[t].a[2],p[t].a[1]);swap(p[t].a[6],p[t].a[5]);\n}\nvoid C(int t)\n{\n    swap(p[t].a[2],p[t].a[3]);\n    swap(p[t].a[2],p[t].a[7]);\n    swap(p[t].a[2],p[t].a[6]);\n}\nvoid bfs()\n{\n    int h=0,t=1;\n    p[1].step=0;\n    while(h<=t)\n    {\n        h++;\n        for(int i=1;i<=3;i++)\n        {\n            t++;\n            for(int j=1;j<=8;j++)\n                p[t].a[j]=p[h].a[j];\n            if(i==1) A(t);\n            if(i==2) B(t);\n            if(i==3) C(t);\n            bas=contor(t);\n            if(vis[bas]) t--;\n            else\n            {\n                vis[bas]=1;\n                p[t].step=p[h].step+1;\n                p[t].n=i;\n                tot=p[t].step;\n                f[t]=h;\n                if(goal==bas)\n                {\n                    out(t);\n                    return ;                    \n                }\n            }                            \n        }\n    }\n}\nint main()\n{\n    freopen(\"msquare.in\",\"r\",stdin);\n    freopen(\"msquare.out\",\"w\",stdout);\n    init();//\u5efa\u7acb\u57fa\u672c\u6001\n    for(int i=1;i<=4;i++)\n        cin>>p[0].a[i];\n    for(int i=5;i<=8;i++)\n        cin>>p[0].a[13-i];\n    goal=contor(0);\n    int ff=0;\n    if(vis[goal]) \n    {\n        cout<<0<<endl;\n        ff=1;\n    //    return 0;\n    }\n    if(!ff)\n    bfs();\n    cout<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1500862277,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "#### \u6211\u592a\u83dc\u4e86\u554a\uff0c\u4e0d\u4f1a\u5eb7\u6258\u5c55\u5f00~~~\n\n\u4e0d\u8fc7\u6211\u4e5f\u6709\u6211\u81ea\u5df1\u7684\u65b9\u6cd5\u628a\u8fd9\u9053\u9898A\u6389\n\n\u6211\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u77ac\u95f4\u60f3\u8d77[P1379 \u516b\u6570\u7801\u96be\u9898](https://www.luogu.com.cn/problem/P1379)\u3002\u5176\u5b9e\u90a3\u9053\u9898\u6211\u5c31\u662f \u5b57\u7b26\u4e32 + $map$ \u54c8\u5e0c + \u53cc\u5411\u5e7f\u641c\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u53ea\u6709 $8$ \u4f4d\u6570\uff0c\u6211\u5c31\u673a($zuo$)\u667a($si$)\u5730\u7528\u4e86\u72b6\u538b\u3002\n\n\u4f46\u662f\u516b\u4f4d\u6570\u5f00\u6570\u7ec4\u4e0d\u4f1a\u7206\u5417\uff1f \u522b\u5fd8\u4e86\u6211\u4eec\u5730\u6570\u5b57\u53ea\u6709$1$ ~ $8$ \n\u6240\u4ee5\u5b8c\u5168\u53ef\u4ee5\u7528\u516b\u8fdb\u5236\u6765\u8868\u3002\u8fd9\u6837\u7b97\u4e0a\u8868\u793a\u65b9\u5f0f\u6700\u5927\u7684\u6570\uff0c\u4e5f\u53ea\u6709$1e7$+$6e6$\u7684\u6570\u7ec4\u5927\u5c0f\uff0c\u5bf9\u4e8e$125MB$\u7684\u5185\u5b58\u4e5f\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\u554a\u3002\u6240\u4ee5\u5f00\u6570\u7ec4\u65b9\u9762\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u3002\n\n\u73b0\u5728\u5c31\u5f00\u59cb\u5bf9\u89e3\u9898\u8fdb\u884c\u4e00\u6b65\u6b65\u7684\u601d\u8003\u4e86\u3002\n\n1. \u9996\u5148\u8fd9\u9053\u9898\u7684\u60c5\u5883\u5b9e\u5728\u4e8c\u7ef4\u7684\u73af\u5883\u4e0b\uff0c\u5f00\u59cb\u6211\u4eec\u8981\u601d\u8003\u7684\u5c31\u662f\u5982\u4f55\u5c06\u4e8c\u7ef4\u64cd\u4f5c\u8f6c\u5316\u6210\u4e00\u7ef4\u4e2d\u5bf9\u5e8f\u5217\u7684\u64cd\u4f5c\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u975e\u4e8c\u8fdb\u5236\u7684\u72b6\u538b\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\u6765\u83b7\u53d6\u6570\u5b57\u7684\u67d0\u4e00\u4f4d\uff1a\n```cpp\ninline int getN(int st, int x)\n{\n    return st / p[x - 1] % 8; //p[i]\u4e3a8\u7684i\u6b21\u65b9,\u53ef\u4ee5\u9884\u5904\u7406\u51fa\n//\u8fd9\u91cc\u7684\u662f\u516b\u8fdb\u5236\uff0cx\u4ee3\u8868\u4ece\u4f4e\u5230\u9ad8\u7684\u7b2cx\u4f4d\uff0c\u5176\u4ed6\u8fdb\u5236\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\n}\n```\n**\u5bf9\u4e8e$A$:**\n\n\t1  2  3  4  5  6  7  8\n\t|  |  |  |  |  |  |  | \n\tV  V  V  V  V  V  V  V\n\t8  7  6  5  4  3  2  1\n\u53ef\u4ee5\u53d1\u73b0$A$\u64cd\u4f5c\u5c31\u662f\u628a\u6574\u4e2a\u5e8f\u5217\u7ffb\u8f6c\u4e00\u4e0b\uff0c\u7b97\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u4e86\uff0c\u5728\u516b\u8fdb\u5236\u72b6\u538b\u4e0b\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u4ee3\u7801\uff1a\n```cpp\nint A(int st)\n{\n    rep(i, 0, 3)\n    {\n        int l = getN(st, i + 1), r = getN(st, 8 - i);//\u53d6\u4f4e\u4f4d\u548c\u9ad8\u4f4d\u4ea4\u6362\u3002\n        st += (l - r) * p[7 - i]; st += (r - l) * p[i];\n    }\n    return st;\n}\n```\n**\u5bf9\u4e8e$B$:**\n\n\t1  2  3  4  5  6  7  8\n\t|  |  |  |  |  |  |  |\n\tV  V  V  V  V  V  V  V\n\t4  1  2  3  6  7  8  5\n   \n\n$B$\u4e5f\u5f88\u6709\u89c4\u5f8b\uff0c\u5c31\u662f\u628a\u7b2c3\u30014\u4f4d\u79fb\u52a8\u5230\u7b2c1\u30018\u4f4d\u3002\n\u5728\u7ffb\u8f6c\u65f6\u6ce8\u610f\u672a\u7ffb\u8f6c\u90e8\u5206\u7684\u5de6\u79fb\u53f3\u79fb\u3002\n```cpp\nint B(int st)\n{\n    int r1 = getN(st, 4), r2 = getN(st, 5), //r1 r2\u5b58\u53f3\u6392\u4e24\u4e2a\n        h = st / p[4] / 8, l = st % p[3]; //l, h\u5b58\u5de6\u4e09\u5217\u4e0a\u4e0b\u4e24\u6392\n    return r1 + r2 * p[7] + h * p[4] + 8 * l;\n}\n```\n\n**\u5bf9\u4e8e$C$:**\n\n\t1  2  3  4  5  6  7  8\n\t|  |  |  |  |  |  |  |\n\tV  V  V  V  V  V  V  V\n\t1  7  2  4  5  3  6  8\n$C$\u4e2d\u7684\u53ea\u9700\u8981\u5c06$2$\uff0c$3$\uff0c$6$\uff0c$7$\u4f4d\u6309\u7167\u4e8c\u7ef4\u4e2d\u7684\u987a\u65f6\u9488\u79fb\u52a8\u5c31\u884c\u4e86\n\u6240\u4ee5\u7edf\u8ba1\u56db\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u518d\u5c06\u5176\u79fb\u5230\u76ee\u6807\u4f4d\u7f6e\u5c31\u884c\u4e86\uff1b\n```cpp\nint C(int st)\n{\n    int lu = getN(st, 2), ru = getN(st, 3),\n        ld = getN(st, 7), rd = getN(st, 6);\n    st += (ld - lu) * p[1]; st += (lu - ru) * p[2];\n    st += (ru - rd) * p[5]; st += (rd - ld) * p[6];\n    return st;\n}\n```\n- \u8fdb\u884c\u4e86\u8fd9\u4e9b\u64cd\u4f5c\u4e4b\u540e\uff0c\u5e7f\u641c\u5c31\u4e0d\u662f\u95ee\u9898\u4e86\uff0c\u7528\u6700\u7b80\u5355\u7684\u5c31\u884c\u4e86\u3002\u8fd9\u9053\u9898\u7684\u91cd\u70b9\u4e0d\u5728\u5e7f\u641c\u3002\n\n\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#define RG register int\n#define rep(i,a,b)  for(RG i=a;i<=b;++i)\n#define per(i,a,b)  for(RG i=a;i>=b;--i)\nusing namespace std;\nint s, e;\nint p[9] = {1, 8, 64, 512, 4096, 32768, 262144, 2097152, (int)2e9};\n//\u6253\u4e00\u4e2a8\u76840~7\u6b21\u65b9\u7684\u8868\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u5668\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\nshort int vis[16434830]; //luogu\u4e0a\u53ef\u4ee5\u5f00int \u4f46\u662f\u4e00\u672c\u901a\u4e0a\u5185\u5b58\u66f4\u5c0f\uff0c\u53ea\u80fd\u5f00short int\ninline int getN(int st, int x)\n{\n    return st / p[x - 1] % 8;\n}\nint A(int st)\n{\n    for(int i = 0; i < 4; ++i)\n    {\n        int l = getN(st, i + 1), r = getN(st, 8 - i);\n        st += (l - r) * p[7 - i]; st += (r - l) * p[i];\n    }\n    return st;\n}\nint B(int st)\n{\n    int r1 = getN(st, 4), r2 = getN(st, 5),\n        h = st / p[4] / 8, l = st % p[3];\n    return r1 + r2 * p[7] + h * p[4] + 8 * l;\n}\nint C(int st)\n{\n    int lu = getN(st, 2), ru = getN(st, 3),\n        ld = getN(st, 7), rd = getN(st, 6);\n    st += (ld - lu) * p[1]; st += (lu - ru) * p[2];\n    st += (ru - rd) * p[5]; st += (rd - ld) * p[6];\n    return st;\n}\nvoid bfs()\n{\n    queue<pair<int, string> > q;\n    q.push(make_pair(s, \"\"));\n    vis[s] = 0;\n    while(!q.empty())\n    {\n        int n = q.front().first;\n        string str = q.front().second;\n        q.pop();\n        if(n == e)\n        {\n            printf(\"%d\\n\", vis[n]); cout << str << '\\n';\n            return;\n        }\n        int tn = A(n); //\u8fdb\u884c\u6bcf\u4e00\u79cd\u64cd\u4f5c\u3002\n        if(vis[tn] > str.size() + 1)\n            vis[tn] = str.size() + 1, \n            q.push(make_pair(tn, str + \"A\"));\n        tn = B(n);\n        if(vis[tn] > str.size() + 1)\n            vis[tn] = str.size() + 1, \n            q.push(make_pair(tn, str + \"B\"));\n        tn = C(n);\n        if(vis[tn] > str.size() + 1)\n            vis[tn] = str.size() + 1, \n            q.push(make_pair(tn, str + \"C\"));\n    }\n}\nint main()\n{\n    memset(vis, 0x6f, sizeof vis);\n    s = 16434824; //\u516b\u8fdb\u5236\u521d\u59cb\u72b6\u6001\u7684\u5341\u8fdb\u5236\u8868\u793a\n    //cout << A(s) << endl << B(s) << endl << C(s) << endl;\n    rep(i, 0, 7)\n    {\n        int a;\n        cin >> a;\n        e += (a - 1) * p[i]; //\u8bfb\u5165\u7ec8\u6b62\u72b6\u60010\n    }\n    bfs();\n    return 0;\n}\n```\n\u7136\u540e\u3002\u3002\u3002**\u6ca1\u4e86**\n\n\n",
        "postTime": 1577502755,
        "uid": 41545,
        "name": "Brainless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "##  \u6ca1\u6709\u7528\u5eb7\u6258\u5c55\u5f00\u7684\u7b97\u6cd5\n ~~\u83ab\u540dAC~~\n\n\u849f\u84bb\u770b\u4e0d\u61c2\u5eb7\u6258\u5c55\u5f00 \u4e0d\u8fc7\u81ea\u5df1\u505a\u51fa\u6765\u4e86\n\n\u5982\u679c\u6211\u4eec\u4e0d\u7528\u6570\u7ec4\u53bb\u5b58\u72b6\u6001\n\n\u90a3\u5185\u5b58\u5c31\u4e0d\u4f1a\u7206\u4e86\u554a\n\n**\u8fd9\u91cc\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793a\u73b0\u5728\u7684\u72b6\u6001\uff0c\u7701\u53bb\u4e86\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4**\n\n**\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528map\u6765\u5224\u91cd**\n\n**\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684bfs\u4e86**\n\n\u4e2a\u4eba\u89c9\u5f97\u5eb7\u6258\u5c55\u5f00\u53ef\u80fd\u77e5\u9053\u7684\u4eba\u5c11\n\n\u6240\u4ee5\u5199\u4e86\u8fd9\u9053\u9898\u540e\u6700\u597d\u4e86\u89e3\u4e00\u4e0b\u5eb7\u6258\u5c55\u5f00\n\n\u800c\u7528\u5b57\u7b26\u4e32\u8868\u793a\u72b6\u6001\u6bd4\u8f83\u597d\u60f3\u5230\n\n\u4e0a\u4ee3\u7801~~\u5176\u5b9e\u5f88\u7b80\u5355\u5c31\u662f\u4e2abfs~~\n```cpp\n#include<iostream>//\u624b\u6253\u5934\u6587\u4ef6\u662f\u4e2a\u597d\u4e60\u60ef\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<string>\nusing namespace std;\nstring goal=\"\",start=\"12348765\";//\u521d\u59cb\u72b6\u6001\nstruct Magic{\n\tstring now;int step;//\u73b0\u5728\u9b54\u677f\u7684\u6837\u5b50 \u6b65\u6570\n\tstring op;//\u64cd\u4f5c\u7684\u5e8f\u5217 \n};\nqueue<Magic> q;\nmap<string,bool> vis;//\u6ce8\u610fbfs\u4e00\u5b9a\u8981\u5224\u91cd\uff01\uff01\uff01\nstring change(int opp,string s){\t//\u6a21\u62df\u4e09\u79cd\u8f6c\u6362\n\tswitch(opp){\n\t\tcase 0:{\t//A\n\t\t\tstring temp1=\"\",temp2=\"\";\n\t\t\tfor(int i=0;i<4;i++) temp1=temp1+s[i];\n\t\t\tfor(int i=4;i<8;i++) temp2=temp2+s[i];\n\t\t\ts=temp2+temp1;\n\t\t\tbreak;\n\t\t}\n\t\tcase 1:{\t//B\n\t\t\tstring temp=\"\";\n\t\t\ttemp=temp+s[3]+s[0]+s[1]+s[2]+s[7]+s[4]+s[5]+s[6];\n\t\t\ts=temp;\n\t\t\tbreak;\n\t\t}\n\t\tcase 2:{\t//C\n\t\t\tstring temp=s;\n\t\t\ts[1]=temp[5];s[2]=temp[1];s[5]=temp[6];s[6]=temp[2];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn s;\n}\nvoid bfs(){\n\tMagic s;\n\ts.now=start;s.step=0;s.op=\"\";\n\tq.push(s);vis[start]=1;\t\t//bfs\u7684\u5f00\u59cb\n\twhile(!q.empty()){\n\t\tMagic u=q.front();q.pop();\n\t\tif(u.now==goal){\t//\u627e\u5230\u76ee\u6807\u72b6\u6001\n\t\t\tprintf(\"%d\\n\",u.step);\n\t\t\tfor(int i=0;i<u.op.size();i++){\n\t\t\t\tprintf(\"%c\",u.op[i]);\n\t\t\t\tif(i%60==59&&i!=0) printf(\"\\n\");\n     //\u9898\u4e2d\u8bf4\uff1aLine 2: \u5728\u5b57\u5178\u5e8f\u4e2d\u6700\u65e9\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\n     //\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u8f93\u51fa60\u4e2a\u5b57\u7b26\u3002\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=0;i<3;i++){\t//\u4e09\u79cd\u64cd\u4f5c\n\t\t\tstring ss=change(i,u.now);\n\t\t\tif(vis[ss]) continue;\n            Magic v\uff1b\t//\u5165\u961f\n\t\t\tv.now=ss;v.step=u.step+1;\n            v.op=u.op+(char)(i+'A')\uff1b//\u64cd\u4f5c\u5e8f\u5217\u66f4\u65b0\n\t\t\tvis[ss]=1;\n\t\t\tq.push(v);\n\t\t}\n\t}\n}\nint main(){\n\tfor(int i=1;i<=4;i++){\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tgoal=goal+(char)(a+'0');\n\t}\n\tstring sx=\"\";\n\tfor(int i=1;i<=4;i++){\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tsx=(char)(a+'0')+sx;\n\t}\n\tgoal=goal+sx;\n   //\u8fd9\u4e2a\u8bfb\u5165\u662f\u56e0\u4e3a\u6211\u770b\u9519\u9898\u76ee\u4e86\n\tbfs();\n\treturn 0;//\u7ed3\u675f~\n}\n```\n~~\u5927\u6982\u662f\u6570\u636e\u7684\u95ee\u9898 \u7adf\u7136AC~~\n\n #8 171ms/4176KB\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u7ed9\u51fa\u4e86\u521d\u59cb\u548c\u76ee\u6807\u72b6\u6001\uff0c\u53ef\u4ee5\u7528\u53cc\u5411\u5bbd\u641c\uff0c\u4f1a\u66f4\u5feb\n\n\u4f46\u662f\u64cd\u4f5c\u5e8f\u5217\u53ef\u80fd\u4e0d\u592a\u597d\u6253 \u8fd9\u91cc\u5c31\u4e0d\u7528\u53cc\u5411\u4e86",
        "postTime": 1545294001,
        "uid": 103655,
        "name": "\u4e00\u53ea\u840c\u65b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "**\u849f\u84bb\u5199\u4e8e\u9636\u6bb5\u4e8c\u8003\u8bd5\u540e6\u5c0f\u65f6~~~**\n\n\u8fd9\u9898\u4e00\u770b\u662f\u5230\u84dd\u9898\u5c31\u6709\u70b9\u72b9\u8c6b\uff0c\u4f46\u6211\u8fd8\u662f\u786c\u7740\u5934\u76ae\u5199\u4e0b\u6765\u4e86\n\n\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\n\n------------\n\u641c\u7d22\u663e\u800c\u6613\u89c1\uff0c\u867d\u7136\u53ea\u67098\u4e2a\u65b9\u5757\uff0c\u4f46\u5176\u60c5\u51b5\u6570\u663e\u7136\u8d85\u51fa\u666e\u901a\u6df1\u641c\u8981\u6c42\uff08~~\u5176\u5b9e\u6211\u4e0d\u4f1a\u6253\u9ad8\u7ea7\u7684\u6df1\u641c\u526a\u679d~~\uff09\n\n\u5927\u81f4\u601d\u8def\u662f\u7528\u7ed3\u6784\u4f53\u961f\u5217\u5b58\u50a8\u6bcf\u4e00\u79cd\u60c5\u51b5\u53ca\u5176\u64cd\u4f5c\n\n```cpp\nstruct magic{int shu,k;string s;};\nqueue<magic> q;\n```\nk\u662f\u64cd\u4f5c\u6b21\u6570\uff0cs\u662f\u5bf9\u5e94\u64cd\u4f5c\uff08AABBCC\u4e4b\u7c7b\u7684\uff09\uff0cshu\u662f\u8fd9\u79cd\u60c5\u51b5\u987a\u65f6\u9488\u90fd\u51fa\u6765\u7684\u6570\n\n\u6bcf\u6b21\u8ba9\u961f\u9996\u51fa\u961f\uff0c\u5bf9\u5b83\u8fdb\u884cA,B,C\u4e09\u79cd\u64cd\u4f5c\n\n\u7136\u540e\u8ba9\u8fd9\u4e09\u79cd\u60c5\u51b5\u5165\u961f\n\n```cpp\nmagic mag=q.front();q.pop();\nq.push((magic){A(mag.shu),mag.k+1,mag.s+'A'});\nq.push((magic){B(mag.shu),mag.k+1,mag.s+'B'});\nq.push((magic){C(mag.shu),mag.k+1,mag.s+'C'});\n```\nABC\u6211\u5199\u7684\u4e09\u79cd\u8f6c\u6362\u51fd\u6570\n```cpp\ninline int A(int x)\n{\n\tfor(int i=8;i>=1;i--) lin[i]=x%10,x/=10;\n\tfor(int i=8;i>=1;i--) x=x*10+lin[i];\n\treturn x;\n}\ninline int B(int x){return x/10000%10*10000000+x/100000*10000+x%10000/1000+x%1000*10;}\ninline int C(int x)\n{\n\tfor(int i=8;i>=1;i--) lin[i]=x%10,x/=10;\n\tlin[0]=lin[2];lin[2]=lin[7];lin[7]=lin[6];\n\tlin[6]=lin[3];lin[3]=lin[0];\n\tfor(int i=1;i<=8;i++) x=x*10+lin[i];\n\treturn x; \n}\n```\n\u8fd9\u5c31\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff1a**\u91cd\u590d\u60c5\u51b5\u600e\u4e48\u529e\uff1f**\n\n\u7528**map**\n\n\u5f00\u4e00\u4e2amap\u5b58\u50a8\u76f8\u5e94\u5230\u8fbe\u76f8\u5e94\u60c5\u51b5\u6240\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570\n\n\u5982\u679c\u641c\u5230\u60c5\u51b5\u76f8\u540c\u4e14\u6b65\u6570\u4e0d\u5c0f\u4e8e\u4f46\u524d\u6700\u5c11\u6b65\u6570\u5219\u8df3\u8fc7\n```cpp\n\t\tif(mag.k>1+m[mag.shu]&&m[mag.shu]!=0) continue;\n```\n\u6700\u540e\u641c\u5230\u7b54\u6848\u7ed3\u675f\n```cpp\n\t\tif(mag.shu==z)\n\t\t{\n\t\t\tif(mag.k<ans) {ans=mag.k;anss=mag.s;}\n\t\t\telse if(mag.k==ans) if(mag.s<anss) anss=mag.s;\n\t\t\tcontinue;\n\t\t}\n```\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\u4e0d\u592a\u7406\u89e3\u7684\u770b\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmap<int,int> m;\nstruct magic{int shu,k;string s;};\nqueue<magic> q;//\u7ed3\u6784\u4f53\u961f\u5217\nstring anss;//\u7b54\u6848\nint ss,z,ans=1e5,len,p,lin[10];\n//\u4e09\u79cd\u64cd\u4f5c\ninline int A(int x)\n{\n\tfor(int i=8;i>=1;i--) lin[i]=x%10,x/=10;\n\tfor(int i=8;i>=1;i--) x=x*10+lin[i];\n\treturn x;\n}\ninline int B(int x) {return x/10000%10*10000000+x/100000*10000+x%10000/1000+x%1000*10;}\ninline int C(int x)\n{\n\tfor(int i=8;i>=1;i--) lin[i]=x%10,x/=10;\n\tlin[0]=lin[2];lin[2]=lin[7];lin[7]=lin[6];\n\tlin[6]=lin[3];lin[3]=lin[0];\n\tfor(int i=1;i<=8;i++) x=x*10+lin[i];\n\treturn x; \n}\nint main()\n{\n\t//\u8bfb\u5165\u76ee\u6807\u72b6\u6001\n\tfor(int i=1;i<=8;i++) cin>>ss,z=z*10+ss;\n\tq.push((magic){12345678,0,\"\"});\n\twhile(!q.empty())\n\t{\n\t\tmagic mag=q.front();q.pop();\n\t\tif(mag.k>ans) continue;//\u8d85\u8fc7\u6700\u5c11\u6b65\u6570\n\t\tif(mag.shu==z)//\u4e0e\u6700\u7ec8\u76ee\u6807\u76f8\u540c\n\t\t{\n        \t//\u5224\u65ad\u662f\u5426\u6b65\u6570\u66f4\u5c11\u4ee5\u53ca\u5b57\u5178\u5e8f\u66f4\u5c0f\n\t\t\tif(mag.k<ans) {ans=mag.k;anss=mag.s;}\n\t\t\telse if(mag.k==ans) if(mag.s<anss) anss=mag.s;\n\t\t\tcontinue;\n\t\t}\n        //\u82e5\u6bd4\u5df2\u77e5\u6700\u5c11\u6b65\u6570\u591a\u5219\u8df3\u8fc7\uff08map\u521d\u59cb\u503c\u4e3a0\uff09\n\t\tif(mag.k>1+m[mag.shu]&&m[mag.shu]!=0) continue;\n\t\tif(!m[A(mag.shu)])\n\t\t{\n\t\t\tm[A(mag.shu)]=mag.k;\n\t\t\tq.push((magic){A(mag.shu),mag.k+1,mag.s+'A'}); \n\t\t}\n\t\tif(!m[B(mag.shu)])\n\t\t{\n\t\t\tm[B(mag.shu)]=mag.k;\n\t\t\tq.push((magic){B(mag.shu),mag.k+1,mag.s+'B'}); \n\t\t}\n\t\tif(!m[C(mag.shu)])\n\t\t{\n\t\t\tm[C(mag.shu)]=mag.k;\n\t\t\tq.push((magic){C(mag.shu),mag.k+1,mag.s+'C'}); \n\t\t}\n\t}\n    //\u8f93\u51fa\u7b54\u6848\u53ca\u6b65\u6570\n\tcout<<ans<<endl;len=anss.size();\n\twhile(p<len)\n\t{\n\t\tcout<<anss[p++];\n        //\u6ce8\u610f\u6362\u884c\n\t\tif(p%60==0) cout<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\u4e0d\u4f1a\u7684\u53ef\u4ee5\u7559\u8a00\u6216\u79c1\u4fe1\u6211~~~\n\n\u671b\u7ba1\u7406\u5458\u901a\u8fc7~~~\n\n\u613f\u6bb5\u4e8c\u4e0d\u8981\u7206\u70b8\u592a\u72e0\n\n------------\n",
        "postTime": 1544194458,
        "uid": 121563,
        "name": "\u5149\u660e\u6b63\u5927",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "bfs   \u52a0\u5eb7\u6258\u5c55\u5f00\u5224\u91cd  \uff0c\u8f93\u5165\u7684\u65f6\u5019\u8981\u6ce8\u610f\u987a\u5e8f\uff0c\u7528\u4e00\u7ef4\u6570\u7ec4\u5b58\u50a8\u72b6\u6001\uff0c\u64cd\u4f5c\u8fc7\u7a0b\u7528\u4e09\u4e2a\u51fd\u6570\u5373\u53ef\uff0c\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u96be\u3002\n\n\u4f46\u8981\u6ce8\u610f\u8fd9\u9b3c\u755c\u7684\u6570\u636e\uff0c\u6709\u4e00\u4e2a\u5c31\u662f\u521d\u6001\uff0c\u8fd9\u91cc\u8981\u7279\u5224\u4e00\u4e0b\uff1b\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\nconst int fac[9]={1,1,2,6,24,120,720,5040,40320};\nstruct node{\n    int a[10];//\u63cf\u8ff0\u6570\u5b57\u5206\u5e03\uff1b\n    node(){\n        memset(a,0,sizeof(a));\n    } \n    int n;int step;\n}p[800000];\nbool gg[5040*8];\nint f[5040*8];\nint goal=0;\ninline void swapp(int &a,int &b)\n{\n    int c=a;\n    a=b;b=c;\n}\nvoid A(node &s)\n{\n    swapp(s.a[1],s.a[5]);\n    swapp(s.a[2],s.a[6]);\n    swapp(s.a[3],s.a[7]);\n    swapp(s.a[4],s.a[8]);\n}\nvoid B(node &s)\n{\n    swapp(s.a[4],s.a[3]);swapp(s.a[8],s.a[7]);\n    swapp(s.a[3],s.a[2]);swapp(s.a[7],s.a[6]);\n    swapp(s.a[2],s.a[1]);swapp(s.a[6],s.a[5]);\n}\nvoid C(node &s)\n{\n    swapp(s.a[2],s.a[3]);swapp(s.a[2],s.a[7]);swapp(s.a[2],s.a[6]);\n}\nint tot=0;\nint KT(node s)\n{\n    int num=0;\n    for(int i=1;i<=8;i++)\n    {\n        int k=0;\n        for(int j=i+1;j<=8;j++)\n        {\n            if(s.a[i]>s.a[j]) k++;\n        }\n        num+=k*fac[8-i];\n    }\n    return num;\n}\nvoid out(int T)//\u9012\u5f52\u8f93\u51fa\n{\n    if(T==1) return ;\n    out(f[T]);\n    if(f[T]==1) cout<<tot<<endl;\n    if(p[T].n==1) cout<<\"A\";\n    if(p[T].n==2) cout<<\"B\";\n    if(p[T].n==3) cout<<\"C\";\n}\nvoid bfs()\n{\n    int h=0;int t=1;p[1].step=0;\n    do{\n        h++;\n        for(int i=1;i<=3;i++)\n        {\n            t++;\n            for(int j=1;j<=8;j++)\n            p[t].a[j]=p[h].a[j];\n            if(i==1) A(p[t]);\n            if(i==2) B(p[t]);\n            if(i==3) C(p[t]);\n            int g=KT(p[t]);\n            if(gg[g]==true) t--;\n            else {\n                gg[g]=true;p[t].step=p[h].step+1;//\u8bb0\u5f55\u6b65\u6570 \n                p[t].n=i;//\u8868\u793a\u8fd9\u4e00\u72b6\u6001\u662f\u901a\u8fc7\u54ea\u4e2a\u6b65\u9aa4\u5f97\u6765\u7684; \n                f[t]=h;//\u8bb0\u5f55\u8def\u5f84;\n                if(g==goal)\n                {\n                    tot=p[t].step;\n                    out(t);\n                    return ;\n                 } \n            }\n        }\n    }while(h<t);\n}\nint main()\n{\n    for(int i=1;i<=4;i++) p[1].a[i]=i;\n    for(int i=5;i<=8;i++) p[1].a[i]=13-i;\n    memset(gg,0,sizeof(gg));\n    gg[KT(p[1])]=true;\n    node zhong;\n    for(int i=1;i<=4;i++)\n    {\n        cin>>zhong.a[i];\n    }\n    for(int i=5;i<=8;i++)\n    {\n        cin>>zhong.a[13-i];//\u5206\u4e0a\u4e0b\u5904\u7406\u8f93\u5165\n    }\n    goal=KT(zhong);\n    if(gg[goal]==true){//\u7279\u5224\n        cout<<0<<endl;return 0;\n    }\n    bfs();\n    return 0;\n}\n```",
        "postTime": 1500169984,
        "uid": 47803,
        "name": "NeosKnight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u672c\u9898\u5176\u5b9e\u9898\u76ee\u8bf4\u660e\u5c31\u7ed9\u4e86\u63d0\u793a\uff0c\u53ef\u4ee5\u8fdb\u884c\u90e8\u5206\u6253\u8868\n\n\n\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6bd4\u4e00\u822c\u7684\u8981\u597d\u5199\u4e00\u4e9b\n\n\n\u4e00\u770b\u9898\u5c31\u662f\u641c\u7d22\uff0c\u6211\u7528\u7684\u662fbfs\n\n\n\u7528map\u5224\u91cd\n\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\nint A[8]={8,7,6,5,4,3,2,1},B[8]={4,1,2,3,6,7,8,5},C[8]={1,7,2,4,5,3,6,8};//\u90e8\u5206\u6253\u8868\uff0cA,B,C\u4e09\u79cd\u60c5\u51b5\nstruct point{\n    int c[8];\n    point workA(){\n        point b;\n        for(int i=0;i<8;i++)\n            b.c[i]=c[A[i]-1];\n        return b;\n    }//\u5904\u7406A\n    point workB(){\n        point b;\n        for(int i=0;i<8;i++)\n            b.c[i]=c[B[i]-1];\n        return b;\n    }//\u5904\u7406B\n    point workC(){\n        point b;\n        for(int i=0;i<8;i++)\n            b.c[i]=c[C[i]-1];\n        return b;\n    }//\u5904\u7406C\n    bool operator <(const point &rhs) const{\n        for(int i=0;i<8;i++)\n            if(c[i]!=rhs.c[i])\n                return c[i]<rhs.c[i];\n        return false;\n    }//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4e0d\u7136map\u4f1a\u51fa\u9519\n    bool operator == (const point &rhs) const{\n        return !(\\*this<rhs) && !(rhs<\\*this);\n    }//\u91cd\u8f7d\u7b49\u4e8e\u53f7\n};\npoint a;\nmap<point,string> mp;//map\u5224\u91cd\nqueue<point> q;//\u961f\u5217\u5199bfs\nint main(){\n    for(int i=0;i<8;i++)\n        scanf(\"%d\",&a.c[i]);\n    point k;\n    for(int i=0;i<8;i++)\n        k.c[i]=i+1;//\u521d\u59cb\u4e3a1~8\n    if(k==a){\n        printf(\"0\\n\");\n        return 0;\n    }\n    q.push(k);//bfs\n    mp[k]=\"\";\n    while(!q.empty()){\n        point hyj=q.front();\n        q.pop();\n        point ls=hyj.workA();\n        if(mp[ls]==\"\"){\n            mp[ls]=mp[hyj]+'A';\n            if(ls==a){\n                cout<<mp[ls].length()<<endl;\n                for(int i=0;i<int(mp[ls].length());++i){\n                    if(i && i%60==0) putchar('\\n');\n                    putchar(mp[ls][i]);\n                }//\u957f\u5ea6\u523060\u6362\u884c\n                return 0;\n            }\n            q.push(ls);//\u76f4\u63a5\u9000\u51fa\n        }\n        ls=hyj.workB();\n        if(mp[ls]==\"\"){\n            mp[ls]=mp[hyj]+'B';\n            if(ls==a){\n                cout<<mp[ls].length()<<endl;\n                for(int i=0;i<int(mp[ls].length());++i){\n                    if(i && i%60==0) putchar('\\n');\n                    putchar(mp[ls][i]);\n                }//\u957f\u5ea6\u523060\u6362\u884c\n                return 0;//\u76f4\u63a5\u9000\u51fa\n            }\n            q.push(ls);\n        }\n        ls=hyj.workC();\n        if(mp[ls]==\"\"){\n            mp[ls]=mp[hyj]+'C';\n            if(ls==a){\n                cout<<mp[ls].length()<<endl;\n                for(int i=0;i<int(mp[ls].length());++i){\n                    if(i && i%60==0) putchar('\\n');\n                    putchar(mp[ls][i]);\n                }//\u957f\u5ea6\u523060\u6362\u884c\n                return 0;//\u76f4\u63a5\u9000\u51fa\n            }\n            q.push(ls);\n        }\n    }\n    return 0;\n}",
        "postTime": 1499412970,
        "uid": 8398,
        "name": "zhou888",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u5176\u5b9e\u662f\u666e\u901a\u7684bfs\u3002\u4f46\u662f\u4e09\u79cd\u60c5\u51b5\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\n\n\n\u5224\u91cd\u54b1\u7528\u7684\u662fmap\u3002\n\n\n\u7136\u540e12345678\u662f\n\n1234\n8765\n\u7136\u540e\u5b58\u752812345678\u7684\u8bdd\u5c31\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u5b58\u7684\u8bdd\u5c31\u662f12348765\uff0c\u5904\u7406\u8d77\u6765\u4e5f\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n\n\u8bfb\u5165\u7684\u76ee\u6807\u72b6\u6001\u6211\u4eec\u5b58\u7684\u65f6\u5019\u4e5f\u505a\u4e0b\u5904\u7406\uff0c\u5982\u6837\u4f8b\uff1a26845731\uff0c\u6211\u4eec\u5b58\u7684\u8bdd\u662f26841375\u3002\u8fd9\u6837\u5224\u65ad\u662f\u5426\u641c\u5230\u7684\u65f6\u5019\u4f1a\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\n\u4e09\u79cd\u60c5\u51b5\u7684\u5904\u7406\u8bdd\u81ea\u5df1\u63a8\u4e00\u4e0b\u5c31\u51fa\u6765\u4e86\uff0c\u89c1\u4ee3\u7801\u3002\n\n```cpp\n/*\nID: ylx14274\nPROG: msquare\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nmap<int,bool> f;//\u5224\u91cd\u7528 \nint i,l,r;\nint x,xx;\nint fff=0;\nstruct haha\n{\n    int pred;//\u5b58\u4e0a\u4e00\u4e2a\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e \n    char c;//\u5b58\u64cd\u4f5c\u65b9\u5f0f\u7684 \n    int n;//\u5b58\u5f53\u524d\u72b6\u6001\u7684 \n    int sum;//\u5b58\u5f53\u524d\u64cd\u4f5c\u7684\u957f\u5ea6 \n} a[500000];\nvoid digui(int k)\n{\n    if (a[k].pred!=-1)digui(a[k].pred);\n    if (a[k].pred!=-1)printf(\"%c\",a[k].c);\n    return;\n} \nvoid sc(int x)//\u8f93\u51fa\n{\n    printf(\"%d\\n\",a[x].sum);\n    fff=1;\n    digui(x);\n    printf(\"\\n\");\n    return;\n}\n/**************************************************/\nvoid aa(int k)//\u64cd\u4f5cA \n{\n    int an=k/10000;//\u7b2c\u4e00\u884c \n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    int d=bn*10000+an;//\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e8c\u884c\u8fdb\u884c\u4ea4\u6362\n    if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"A:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0 \n    r++;//\u5165\u961f\n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a \n    a[r].c='A';//\u6807\u8bb0\u4e3a\u64cd\u4f5cA \n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570 \n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa \n    return;\n}\n\nvoid bb(int k)//\u64cd\u4f5cB\n{\n    int an=k/10000;//\u7b2c\u4e00\u884c \n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    an=(an%10)*1000+(an/10);//\u6700\u540e\u4e00\u5217\u63d2\u5165\u5230\u7b2c\u4e00\u5217 \n     bn=(bn%10)*1000+(bn/10);//\u6700\u540e\u4e00\u5217\u63d2\u5165\u5230\u7b2c\u4e00\u5217 \n     int d=an*10000+bn;\n     if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"B:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0\n    r++;//\u5165\u961f \n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a \n    a[r].c='B';//\u6807\u8bb0\u4e3a\u64cd\u4f5cB\n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570 \n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa  \n    return;\n}\n\nvoid cc(int k)//\u64cd\u4f5cC\uff0c\u597d\u5751\u554a\u3002 \n{\n    int an=k/10000;//\u7b2c\u4e00\u884c \n    int bn=k%10000;//\u7b2c\u4e8c\u884c\n    int rr=an;//\u5b58an\u4fee\u6539\u524d\u7684\u503c \n    an=(an/1000*1000)/*\u7b2c\u4e00\u4f4d\u4e0d\u53d8*/\n    +(bn/100%10*100)/*\u7b2c\u4e8c\u4f4d\u6765\u81ea\u7b2c\u4e8c\u884c*/\n    +(an/100%10*10)/*\u7b2c\u4e8c\u4f4d\u6210\u7b2c\u4e09\u4f4d*/\n    +(an%10);/*\u6700\u540e\u4e00\u4f4d\u4e0d\u53d8*/\n    bn=(bn/1000*1000)/*\u7b2c\u4e00\u4f4d\u4e0d\u53d8*/\n    +(bn%100/10*100)/*\u7b2c\u4e09\u4f4d\u53d8\u6210\u7b2c\u4e8c\u4f4d*/\n    +(rr%100/10*10)/*\u6765\u81ea\u7b2c\u4e00\u884c\u7684\u7b2c\u4e09\u4f4d*/\n    +(bn%10);/*\u6700\u540e\u4e00\u4f4d\u4e0d\u53d8*/ \n    //\u8fd9\u5904\u7406\uff0c\u6211TM\u8981\u70b8\u4e86\u3002\n    int d=an*10000+bn;\n     if (f[d]==1) return;//\u53bb\u91cd\n    //printf(\"C:%d %d sum:%d\\n\",r+1,d,a[l].sum+1);\n    f[d]=1;//\u6807\u8bb0\n    r++;//\u5165\u961f \n    a[r].pred=l;//\u6807\u8bb0\u4e0a\u4e00\u4e2a \n    a[r].c='C';//\u6807\u8bb0\u4e3a\u64cd\u4f5cB\n    a[r].n=d;\n    a[r].sum=a[l].sum+1;//\u8bb0\u64cd\u4f5c\u6b21\u6570 \n    if (d==x) sc(r);//\u627e\u5230\u4e86\u5c31\u8f93\u51fa  \n    return;\n}\n/**************************************************/\nint main() \n{\n    int xxx=0;\n    for (i=1;i<=8;i++)\n    {\n        scanf(\"%d\",&xx);//\u8bfb\u5165 \n        xxx=xxx*10+xx;\n    }\n    x=xxx/10000;\n    xxx=xxx%10000;//\u4fdd\u7559\u6700\u540e\u56db\u4f4d\n    x=x*10000//\u524d4\u4f4d\u4e0d\u53d8\n    +(xxx%10*1000)\n    +(xxx%100/10*100)\n    +(xxx/100%10*10)\n    +(xxx/1000);\n    if (x==12348765)//\u4e0d\u9700\u8981\u53d8\u52a8 \n    {\n        printf(\"0\\n\\n\");\n        return 0;\n    }\n    //printf(\"x:%d\\n\",x);\n    f[12348765]=1;//\u6807\u8bb0 \n    l=0;\n    r=1;\n    a[1].n=12348765;\n    a[1].pred=-1;\n    \n    while (l!=r)\n    {\n        l++;\n        aa(a[l].n);//\u4e09\u79cd\u64cd\u4f5c \n        if (fff==1) return 0;\n        bb(a[l].n);\n        if (fff==1) return 0;\n        cc(a[l].n);\n        if (fff==1) return 0;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1499314483,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u6a21\u62df\u4e00\u4e0b\u5b83\u7684\u4e09\u79cd\u64cd\u4f5c\uff0c\u5bbd\u641c\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u5224\u91cd\uff0c\u5b83\u672c\u6765\u662f\u5413\u5230\u6211\u4e86\uff0c\u8d85\u8fc760\u4e2a\u5b57\u7b26\u6362\u884c\uff0c\u7c97\u7565\u4e00\u7b973^60+\u5450\uff0c\u5176\u5b9e\u6700\u591a\u5e94\u8be5\u662f22\u6b65\uff0c\u72b6\u6001\u670940320\u79cd\uff08\u8dd1\u4e86\u4e00\u904d\u5168\u6392\u5217\uff09\u3002\n\n\u81f3\u4e8e\u5224\u91cd\uff0c\u5efa\u8bae\u7528map\uff0c\u7136\u800c\u6211\u975e\u5e38\u6d6a\u8d39\u7a7a\u95f4\u7684\u628abool\u6570\u7ec4\u5f00\u5230\u4e8610^8.\n\n\u4ee3\u7801\u5b9e\u73b0\uff08\u53cb\u597d\u7684\u6807\u4e0a\u4e86\u5e8f\u53f7\uff0c\u8001\u5b9e\u6572\u5427\uff09\uff1a\n\n\u00b7\u00b7\u00b7cpp\n\n```cpp\n 1 #include<cstdio>\n 2 const int maxn=40321;\n 3 int ans,n,s,head,tail,e;\n 4 int a[]={10000000,1000000,100000,10000,1000,100,10,1};\n 5 int b[]={10,100,1000,1,10000000,10000,100000,1000000};\n 6 int c[]={1,1000000,10,1000,10000,100,100000,10000000};\n 7 char ch[30];\n 8 bool v[100000000];\n 9 struct nate{\n10     int now,step;//now\u662f\u76ee\u524d\u72b6\u6001\uff0cstep\u662f\u6b65\u6570\u3002\n11     char ts[30];//\u8bb0\u5f55\u64cd\u4f5c\u6307\u4ee4\u7f16\u7801\u3002\n12 }q[maxn];\n13 void write(int x){//\u8f93\u51fa\u90e8\u5206\n14     printf(\"%d\\n\",q[x%maxn].step);\n15     for(int i=1;i<=q[x%maxn].step;i++)\n16     printf(\"%c\",q[x%maxn].ts[i]);\n17 }\n18 int main(){\n19     for(int i=0,j;i<8;i++){\n20         scanf(\"%d\",&j);\n21         ans*=10;\n22         ans+=j;\n23     }\n24     q[head++].now=12345678;\n25     v[q[0].now]=1;\n26     if(q[0].now==ans){write(0);return 0;}\n27     while(head>tail){\n28         n=q[tail%maxn].now;\n29         s=q[tail%maxn].step;\n30         for(int i=1;i<=s;i++) ch[i]=q[tail%maxn].ts[i];\n31         tail++;\n32         for(int i=0,j=1;i<8;i++){e+=n/j%10*a[i];j*=10;}\n33         if(!v[e]){//\u64cd\u4f5cA\n34             q[head%maxn].now=e;v[e]=1;\n35             for(int i=1;i<=s;i++) q[head%maxn].ts[i]=ch[i];\n36             q[head%maxn].step=s+1;q[head%maxn].ts[s+1]='A';\n37             if(q[head%maxn].now==ans){write(head);return 0;}\n38             head++;\n39         }\n40         e=0;\n41         for(int i=0,j=1;i<8;i++){e+=n/j%10*b[i];j*=10;}\n42         if(!v[e]){//\u64cd\u4f5cB\n43                q[head%maxn].now=e;v[e]=1;\n44                for(int i=1;i<=s;i++) q[head%maxn].ts[i]=ch[i];\n45                q[head%maxn].step=s+1;q[head%maxn].ts[s+1]='B';\n46                if(q[head%maxn].now==ans){write(head);return 0;}\n47                head++;\n48         }\n49         e=0;\n50         for(int i=0,j=1;i<8;i++){e+=n/j%10*c[i];j*=10;}\n51         if(!v[e]){//\u64cd\u4f5cC\n52             q[head%maxn].now=e;v[e]=1;\n53                for(int i=1;i<=s;i++) q[head%maxn].ts[i]=ch[i];\n54                q[head%maxn].step=s+1;q[head%maxn].ts[s+1]='C';\n55                if(q[head%maxn].now==ans){write(head);return 0;}\n56                head++;\n57         }\n58         e=0;\n59     }\n60 }\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1486276600,
        "uid": 21020,
        "name": "Long\u00b7J\u00b7William",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "**\u770b\u4e86\u5927\u4f6c\u4eec\u7684blog\uff0c\u53d1\u73b0\u90fd\u7528\u4e86map QAQ\uff01\uff01\u4e8e\u662f\u6765\u5199\u4e00\u7bc7hash**\r\n\r\n---\r\n\r\n\u5206\u6790\uff1a\u8be5\u9898\u76ee\u5f88\u660e\u663e\u662f\u7528\u641c\u7d22\u505a\uff0c\u5982\u679c\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5219\u53ef\u80fd\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u800c\u4e14\u65f6\u95f4\u5f88\u957f\uff0c\u6240\u4ee5\u53ea\u80fd\u7528\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u3002\u4f46\u662f\u5982\u679c\u6ca1\u6709\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u6765\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u52a0\u5165\u5217\u8868\uff0c\u65f6\u95f4\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\uff0c\u6211\u60f3\u5230\u4e86\u54c8\u5e0c\u8868\u3002\u6309\u7167\u521d\u59cb\u72b6\u6001\u6807\u53f7\uff0c\u5219\u5171\u67098\uff01=40320\u4e2a\u60c5\u51b5\u3002\u53ef\u4ee5\u5c06\u6bcf\u4e00\u79cd\u60c5\u51b5\u552f\u4e00\u5bf9\u5e94\u52300~40319\u4e2d\u7684\u4e00\u4e2a\u6570\u3002\u518d\u7528\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5b9e\u73b0\u8fd9\u4e00\u7b97\u6cd5\u3002\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<string>\r\nusing namespace std;\r\nconst int maxx=100003; \r\nconst int rule[3][8]={{8,7,6,5,4,3,2,1},{4,1,2,3,6,7,8,5},{1,7,2,4,5,3,6,8}};\r\nint father[maxx],num[maxx],xx,head,tail; \r\nstring state[maxx],ss,hs[maxx];\r\nchar lq[maxx];\r\n\r\nbool hash(string s)  //\u5224\u65ad\u5b57\u72b6\u6001s\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u8fd4\u56deTrue,\u4e0d\u5b58\u5728\u6dfb\u52a0\u5728hash\u8868\u4e2d\r\n{\r\n\tint ans=0; \r\n\tfor (int i=0;i<8;i++)\r\n\t ans=(ans<<3)+(ans<<1)+s[i]-48; \r\n\tint i=0; ans%=maxx; \r\n\twhile (i<maxx&&hs[(i+ans)%maxx]!=\"\"&&hs[(i+ans)%maxx]!=s) \r\n\t i++; \r\n\tif (hs[(i+ans)%maxx]==\"\")\r\n\t{\r\n\t\ths[(i+ans)%maxx]=s; \r\n\t\treturn false; \r\n\t} else return true; \r\n}\r\nvoid bfs()  //\u5e7f\u641c\r\n{\r\n\thash(\"12345678\"); \r\n\tstate[1]=\"12345678\"; \r\n\thead=0; tail=1; \r\n\tdo\r\n\t{\r\n\t\thead++; \r\n\t\tfor (int i=0;i<3;i++)\r\n\t\t{\r\n\t\t\ttail++; \r\n\t\t\tfather[tail]=head; \r\n\t\t\tstate[tail]=\"\"; \r\n\t\t\tnum[tail]=num[head]+1; \r\n\t\t\tif (i==0) lq[tail]='A'; else\r\n\t\t\tif (i==1) lq[tail]='B'; else\r\n\t\t\tif (i==2) lq[tail]='C'; \r\n\t\t\tfor (int j=0;j<8;j++)\r\n\t\t\t state[tail]+=state[head][rule[i][j]-1];\r\n\t\t\tif (hash(state[tail])) tail--;//\u5229\u7528hash\u8868\u5224\u91cd\r\n\t\t\t else if (state[tail]==ss) return;\r\n\t\t}\r\n\t} while (head<tail); \r\n}\r\nvoid write(int x)\r\n{\r\n   if (x==1) return; \r\n    write(father[x]); \r\n   printf(\"%c\",lq[x]); \r\n}\r\n\r\nint main()\r\n{\r\n   \tfor (int i=0;i<8;i++)\r\n\t {scanf(\"%d\",&xx);ss+=xx+48; }\r\n\tif (ss==\"12345678\") printf(\"0\"); else \r\n\t{\r\n\t\tbfs(); \r\n\t\tprintf(\"%d\\n\",num[tail]); \r\n\t\twrite(tail);\r\n\t}\r\n}\r\n\r\n```\r\n              ",
        "postTime": 1595165473,
        "uid": 216909,
        "name": "Viktley",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u8fd9\u9898\u662f\u4e00\u9053\u5e7f\u641c\u9898\u3002\n\n\u5e7f\u641c\u80af\u5b9a\u662f\u8981\u5224\u91cd\u7684\uff0c\u4f46\u662f\u600e\u4e48\u5224\u91cd\u5462\uff1f\n\n\u7b54\u66f0\uff1a\u7528STL set\u3002\n\nset\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ea2\u9ed1\u6811\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\uff0c\u6b63\u597d\u7528\u6765\u5224\u91cd\u3002\n\n\u5728set\u5185find\u4e00\u4e0b\uff0c\u4e5f\u5c31\u662f\u5728\u6574\u4e2aset\u4e2d\u5bfb\u627e\u8fd9\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u8fd4\u56des.end()\uff0c\u90a3\u5c31\u662f\u6ca1\u627e\u5230\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u641c\u7d22\u5230\u8fd9\u79cd\u72b6\u6001\u3002\u6211\u4eec\u5c31\u628a\u8fd9\u79cd\u72b6\u6001push\u5230\u961f\u5217\u91cc\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u7528\u5b57\u7b26\u4e32\uff08STL string\uff09\u4fdd\u5b58\u72b6\u6001\uff0c\u56e0\u4e3a\u5b83\u81ea\u5e26\u6bd4\u8f83\u51fd\u6570\uff0c\u53ef\u4ee5\u4e22\u8fdbset\u91cc\u9762\u53bb\u3002string\u4e2d\u5e94\u67098\u4f4d\uff0c\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u6309\u987a\u65f6\u9488\u6392\u5217\u3002\n\n\u4e0d\u8fc7\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u624b\u51993\u79cd\u64cd\u4f5c\u5457\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u5206\u6790\u6027\u8d28\u4e4b\u540e\u53d1\u73b0\u76f4\u63a5reverse\u6574\u4e2a\u5b57\u7b26\u4e32\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c2\u53f3\u63d2\u5de6\uff0c1~3\u4f4d\u6574\u4f53\u540e\u79fb\uff0c6~8\u4f4d\u524d\u79fb\uff08\u4ece1\u5f00\u59cb\u6807\u53f7\uff09\uff0c\u7528\u4e24\u4e2a\u4e34\u65f6\u53d8\u91cf\u8bb0\u5f55\u518d\u4ea4\u6362\u5de6\u53f3\u4e24\u5217\u5373\u53ef\u3002\n\n\u64cd\u4f5c3\u76f4\u63a5\u4e34\u65f6\u53d8\u91cf\u8bb0\u5f55\uff0c\u66b4\u529b\u4ea4\u6362\u5373\u53ef\u3002\n\n\u8fd9\u9898\u601d\u7ef4\u96be\u5ea6\u4e0d\u7b97\u5f88\u9ad8\uff0c\u5e72\u5c31\u662f\u4e86\u3002\u5f88\u7ec3\u7801\u529f\u3002\n```cpp\n#include <bits/stdc++.h>\n#define rgi register int\nusing namespace std;\nset<string> uni;\nstring s,e,emp;\nqueue<string> op,st;\ninline string op1(string t)\n{\n\treverse(t.begin(),t.end());\n\treturn t;\n}\ninline string op2(string t)\n{\n\tchar t1=t[3],t2=t[4];\n\tfor(rgi i=3;i>=1;--i)\n\t\tt[i]=t[i-1];\n\tfor(rgi i=4;i<=6;++i)\n\t\tt[i]=t[i+1];\n\tt[0]=t1,t[7]=t2;\n\treturn t;\n}\ninline string op3(string t)\n{\n\tchar t1=t[1],t2=t[2],t5=t[5],t6=t[6];\n\tt[1]=t6,t[2]=t1,t[5]=t2,t[6]=t5;\n\treturn t;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tfor(rgi i=1;i<=8;++i)\n\t{\n\t\tchar c;\n\t\tcin>>c;\n\t\ts.push_back(i+'0');//\u521d\u72b6\u6001\n\t\te.push_back(c);\n\t}\n\tst.push(s),op.push(emp);//st\u8868\u793a\u5f53\u524d\u9b54\u677f\u72b6\u6001\uff0cop\u662f\u64cd\u4f5c\u5e8f\u5217\n\twhile(!st.empty())\n\t{\n\t\tstring tst=st.front(),top=op.front();//top=temporary op\n\t\tst.pop(),op.pop();\n\t\tif(tst==e)//\u641c\u5230\u4e86\n\t\t{\n\t\t\tcout<<top.size()<<endl<<top<<endl;\n\t\t\tbreak;\n\t\t}\n\t\tstring tr1=op1(tst),tr2=op2(tst),tr3=op3(tst);//\u5f003\u4e2a\u5b57\u7b26\u4e32\u4fdd\u5b583\u79cd\u64cd\u4f5c\u540e\u7684\u72b6\u6001\n\t\tif(uni.find(tr1)==uni.end())//set\u91cc\u6ca1\u627e\u5230\uff0c\u4ee5\u524d\u6ca1\u641c\u8fc7\uff0cpush\u8fdb\u961f\n\t\t{\n\t\t\tuni.insert(tr1);\n\t\t\tstring top1=top;\n\t\t\ttop1.push_back('A');\n\t\t\tst.push(tr1),op.push(top1);\n\t\t}\n\t\tif(uni.find(tr2)==uni.end())\n\t\t{\n\t\t\tuni.insert(tr2);\n\t\t\tstring top2=top;\n\t\t\ttop2.push_back('B');\n\t\t\tst.push(tr2),op.push(top2);\n\t\t}\n\t\tif(uni.find(tr3)==uni.end())\n\t\t{\n\t\t\tuni.insert(tr3);\n\t\t\tstring top3=top;\n\t\t\ttop3.push_back('C');\n\t\t\tst.push(tr3),op.push(top3);\n\t\t}//\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5148\u5224A\u518d\u662fB\u548cC\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573103209,
        "uid": 78302,
        "name": "gznpp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u6570\u636e\u5c0f\u3002  \n\u5148\u5bfb\u627e\u52300\u7684\u4f4d\u7f6e\u3002  \n\u518d\u5f80\u76f8\u90bb\u56db\u683c\u4e92\u6362\uff0c\u6a21\u62df\u6bcf\u4e00\u79cd\u60c5\u51b5\u3002  \n\u518d\u7528\u7528bfs\u7206\u641c\uff0c\u518d\u7528map\u8bb0\u5f55\u5c31\u884c\u4e86\u3002  \n\u5176\u4e2d\u672c\u849f\u84bb\u628a\u8fd9\u51e0\u4e2a\u6570\u5b57\u62fc\u63a5\u8d77\u6765\u4f5c\u4e3amap\u7684\u4e0b\u6807\uff0c\u5199\u4e86turn_\u51fd\u6570\u505a\u8fd9\u4e2a\u5de5\u4f5c \nmap\u4e3a\u7a7a\u4ee3\u8868\u7740\u8fd9\u4e2a\u60c5\u51b5\u6ca1\u6709\u53d1\u751f\u3002  \n\u7136\u540e\u518d\u7528yes\u51fd\u6570\u5224\u65adstruct\u7c7b\u578b\u7684\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u76f8\u540c\u3002\u5c31\u53ef\u4ee5\u6a21\u62df\u6574\u4e00\u4e2abfs\u7684\u8fc7\u7a0b\u3002  \n\u5f53\u7136\u6700\u5f00\u59cb\u5fc5\u987b\u624b\u52a8\u7684\u6253\u4e00\u904d\u521d\u59cb\u60c5\u51b5\u3002\u3002\u3002  \n\u4f46\u662f\u6211\u7528\u4e862\u4e2afor\u641e\u5b9a\u4e86\u3002\u3002\u3002  \n\u5f88\u663e\u7136\u6211\u7684\u4e0d\u662f\u6700\u597d(\u4ee3\u7801\u77ed)\u7684\u65b9\u6cd5\u3002\u3002\u3002  \n\u4f46\u662f\u80fdAC:  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tchar ch[3][5];\n\tint number;\n}k,AC;\nstruct\n{\n\tint last;\n\tchar plan;\n}father[50010];\nint f=1,r=1;\nqueue <node> q;\nmap <string,bool> _map;\nint yes(node a,node b)\n{\n\tint key=1;\n\tfor(int i=1;i<=2;++i)\n\t\tfor(int j=1;j<=4;++j)\n\t\tif(a.ch[i][j]!=b.ch[i][j])\n\t\t{\n\t\t\tkey=0;\n\t\t\tbreak;\n\t\t}\n\treturn key;\n}\nstring turn_(node a)\n{\n\tstring str=\"\";\n\tstr=str+a.ch[1][1]+a.ch[1][2]+a.ch[1][3]+a.ch[1][4]+a.ch[2][1]+a.ch[2][2]+a.ch[2][3]+a.ch[2][4];\n\treturn str; \n}\nvoid do_A(node &a)\n{\n\tchar tmp[5];\n\tfor(int i=1;i<=4;++i) tmp[i]=a.ch[1][i];\n\tfor(int i=1;i<=4;++i) a.ch[1][i]=a.ch[2][i];\n\tfor(int i=1;i<=4;++i) a.ch[2][i]=tmp[i];\n}\nvoid do_B(node &a)\n{\n\tchar ch1=a.ch[1][4],ch2=a.ch[2][4];\n\tfor(int i=4;i>=1;--i)\n\t\ta.ch[1][i]=a.ch[1][i-1],a.ch[2][i]=a.ch[2][i-1];\n\ta.ch[1][1]=ch1;\n\ta.ch[2][1]=ch2;\n}\nvoid do_C(node &a)\n{\n\tchar ch1=a.ch[1][3];\n\ta.ch[1][3]=a.ch[1][2];\n\ta.ch[1][2]=a.ch[2][2];\n\ta.ch[2][2]=a.ch[2][3];\n\ta.ch[2][3]=ch1;\n}\nvoid dfs(int x)\n{\t\t\n\tif(x==1) return;\n\tif(father[x].last==1) \n\t{\n\t\tcout<<father[x].plan;\n\t\treturn;\n\t}\n\tdfs(father[x].last);\n\tcout<<father[x].plan;\n}\nint main()\n{\n\tfor(int i=1;i<=4;++i) cin>>AC.ch[1][i];\n\tfor(int i=4;i>=1;--i) cin>>AC.ch[2][i];\n\tfor(int i=1;i<=4;++i) k.ch[1][i]=i+'0';\n\tfor(int i=4;i>=1;--i) k.ch[2][i]=9-i+'0';\n\tq.push(k);\n\t_map[turn_(k)]=1;\n\twhile(q.empty()==false)\n\t{\n\t\tif(yes(q.front(),AC)==1) \n\t\t{\n\t\t\tcout<<q.front().number<<endl;\n\t\t\tdfs(f);\n\t\t\treturn 0;\n\t\t}\n\t\tk=q.front();\n\t\tdo_A(k);\n\t\tk.number=q.front().number+1;\n\t\tif(_map[turn_(k)]==0)\n\t\t\t++r,q.push(k),_map[turn_(k)]=1,father[r].last=f,father[r].plan='A';\n\t\t//B\n\t\tk=q.front();\n\t\tdo_B(k);\n\t\tk.number=q.front().number+1;\n\t\tif(_map[turn_(k)]==0)\n\t\t\t++r,q.push(k),_map[turn_(k)]=1,father[r].last=f,father[r].plan='B';\n\t\t//C\n\t\tk=q.front();\n\t\tdo_C(k);\n\t\tk.number=q.front().number+1;\n\t\tif(_map[turn_(k)]==0)\n\t\t\t++r,q.push(k),_map[turn_(k)]=1,father[r].last=f,father[r].plan='C';\t\n\t\tq.pop();\n\t\t++f;\n\t}\n\treturn 0;\n}\n//1 2 3 4 5 6 7 8\n```\n",
        "postTime": 1564542772,
        "uid": 149175,
        "name": "\u5343\u706f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00BFS\n\n\u96be\u70b9\u5728\u4e8e\u5224\u91cd\u548c\u50a8\u5b58\n\n\u672c\u6765\u60f3\u5199\u54c8\u5e0c\n\n\u4f46\u70b8\u4e86\n\n\u7136\u540e\u5199\u4e86map\u60f3\u8bd5\u8bd5\n\n\u5bb9\u6613\u70b8\u7a7a\u95f4\n\u4e8e\u662f\u6211\u5c31\u628a\u4e00\u6570\u7ec4\u538b\u6210\u4e86\u4e00\u4e2a\u6570\n\n\u76f4\u63a5\u66f4\u6539\u6570\n\n\u81f3\u4e8e\u8f93\u51fa\u6b65\u6570 \u6211\u5728\u961f\u5217\u91cc\u52a0\u4e86\u4e00\u4e2astring\n\n\u81f3\u4e8e\u4e09\u4e2a\u64cd\u4f5c\n\nA\u64cd\u4f5c\u662f\u628a\u8be5\u6570\u7ffb\u8f6c\u4e00\u4e0b\n\n1 2 3 4\n\n8 7 6 5\n\n\u538b\u7f29\u6210\u6570\u662f 12345678\n\n\u8fdb\u884c A\u64cd\u4f5c\u540e\u662f\n\n8 7 6 5 \n\n1 2 3 4\n\n\u538b\u7f29\u6210\u6570\u662f 87654321\n\n```cpp\ninline node A(node x)\n{\n\tunsigned int s = x.a;\n\tint a = s % 10 * 10000000, f = s / 10 % 10 * 1000000, g = s / 100 % 10 * 100000, h = s / 1000 % 10 * 10000;\n\tint b = s / 10000000, c = s / 1000000 % 10 * 10, d = s / 100000 % 10 * 100, e = s / 10000 % 10 *1000;//\u53d6\u51fa\u6bcf\u4e00\u6570\u4f4d \u5e76\u8ba1\u7b97\u51fa\u4e4b\u540e\u5e94\u5728\u7684\u6570\u4f4d \n\tx.a = a + b + c + d + e + f + g + h;//\u7ffb\u8f6c \n\tx.s += \"A\";\n\treturn x;\n}\n```\n\n\u8fdb\u884cB\u64cd\u4f5c\u540e\u662f\n\n4 1 2 3 \n\n5 8 7 6\n\n\u538b\u7f29\u6210\u6570\u662f 41236785\n\n```cpp\ninline node B(node x)\n{ \n\tunsigned int s = x.a;\n\tint a = s / 10000 % 10 * 10000000, b = s % 10000 / 1000;\n\tint c = s / 100000 * 10000, d = s % 1000 * 10;// \u8ba1\u7b97\u51fa\u6bcf\u4e00\u90e8\u5206\u5e94\u5728\u54ea\u91cc \n\tx.a = a + b + c + d; \n\tx.s += \"B\";\n\treturn x;\n}\n```\n\nC\u64cd\u4f5c\u540e\u662f \n\n1 7 2 4\n\n8 6 3 5\n\n17245368\n```cpp\ninline node C(node x)\n{\n\tunsigned int s = x.a;\n\tunsigned int a = s / 10 % 10, b = s / 100 % 10, c = s / 100000 % 10, d = s / 1000000 % 10;\n\ts -= (a * 10 + b * 100 + c * 100000 + d * 1000000);\n\ta *= 1000000; b *= 10; c *= 100; d *= 100000;\n\tx.a = a + b + c + d + s;\n\tx.s += \"C\";\n\treturn x;\n}\n```\n\n\u6700\u540e\u5957\u8fdb\u4e00\u4e2aBFS\u6846\u67b6\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<queue>\n#include<ctime>\n#include<deque>\n#include<set>\n#include<bitset>\n#include<vector>\n#include<list>\n#include<stack>\n#include<map>\n#include<cmath>\n#define ull unsigned long long\n#define ll long long\n#define inf 99999999\n#define N 1010000\n#define mod 1000009\nusing namespace std;\ninline ll read()\n{\n \tll res=0,bo=1;\n \tchar ch=getchar();\n \twhile(ch<'0'||ch>'9'){if(ch=='-')bo=-1;ch=getchar();}\n \twhile(ch>='0'&&ch<='9'){res=(res<<1)+(res<<3)+ch-'0';ch=getchar();}\n \treturn bo*res;\n}\nstruct node{\n\tunsigned int a;\n\tstring s;\n}a, z;\ninline node A(node x)\n{\n\tunsigned int s = x.a;\n\tint a = s % 10 * 10000000, f = s / 10 % 10 * 1000000, g = s / 100 % 10 * 100000, h = s / 1000 % 10 * 10000;\n\tint b = s / 10000000, c = s / 1000000 % 10 * 10, d = s / 100000 % 10 * 100, e = s / 10000 % 10 *1000;//\u53d6\u51fa\u6bcf\u4e00\u6570\u4f4d \u5e76\u8ba1\u7b97\u51fa\u4e4b\u540e\u5e94\u5728\u7684\u6570\u4f4d \n\tx.a = a + b + c + d + e + f + g + h;//\u7ffb\u8f6c \n\tx.s += \"A\";\n\treturn x;\n}\ninline node B(node x)\n{ \n\tunsigned int s = x.a;\n\tint a = s / 10000 % 10 * 10000000, b = s % 10000 / 1000;\n\tint c = s / 100000 * 10000, d = s % 1000 * 10;// \u8ba1\u7b97\u51fa\u6bcf\u4e00\u90e8\u5206\u5e94\u5728\u54ea\u91cc \n\tx.a = a + b + c + d; \n\tx.s += \"B\";\n\treturn x;\n}\ninline node C(node x)\n{\n\tunsigned int s = x.a;\n\tunsigned int a = s / 10 % 10, b = s / 100 % 10, c = s / 100000 % 10, d = s / 1000000 % 10;\n\ts -= (a * 10 + b * 100 + c * 100000 + d * 1000000);\n\ta *= 1000000; b *= 10; c *= 100; d *= 100000;\n\tx.a = a + b + c + d + s;\n\tx.s += \"C\";\n\treturn x;\n}\nqueue <node> q;\nmap <int, int> m;//\u7528\u6765\u5224\u91cd\nint minn(int a, int b){\n\treturn a < b ? a : b;\n}\ninline void print(node a)\n{\n\tprintf(\"%d\\n\", a.s.size());\n\tfor(int i = 0; i < minn(60, a.s.size()); ++i)//\u8981\u6c42\u53ea\u8f93\u51fa\u524d60\u6b21\u64cd\u4f5c\n\t\tputchar(a.s[i]);\n\treturn;\n}\ninline void BFS()\n{\n\tq.push(a);\n\twhile(!q.empty()){\n\t\tnode k = q.front();\n\t\tq.pop();\n\t\tnode a = A(k);\n\t\tif(a.a == z.a) {print(a); return;}\n\t\tnode b = B(k);\n\t\tif(b.a == z.a) {print(b); return;}\n\t\tnode c = C(k);\n\t\tif(c.a == z.a) {print(c); return;}//\u5224\u65ad\u662f\u5426\u641c\u8fc7\u4e86\n\t\tif(m[a.a] == 0) {\n\t\t\tq.push(a);\n\t\t\tm[a.a] = 1;//\u6807\u8bb0\u5df2\u7ecf\u641c\u8fc7\u4e86\n\t\t}\n\t\tif(m[b.a] == 0){\n\t\t\tq.push(b);\n\t\t\tm[b.a] = 1;\n\t\t}\n\t\tif(m[c.a] == 0){\n\t\t\tq.push(c);\n\t\t\tm[c.a] = 1;\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tfor(int i = 1; i <= 8; ++i){\n\t\tint p = read();\n\t\tz.a = (z.a << 1) + (z.a << 3) + p;\n\t\ta.a = (a.a << 1) + (a.a << 3) + i;\n\t}\n\tif(z.a == a.a) putchar('0');//\u7279\u5224\u5982\u679c\u76ee\u6807\u72b6\u6001\u662f\u521d\u59cb\u72b6\u6001\u5219\u8f93\u51fa0\n\telse BFS();\n//\tfclose(stdin);fclose(stdout);\n    return 0;\n}\n```\n",
        "postTime": 1548943065,
        "uid": 162451,
        "name": "__wfx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "bfs+map 308ms AC  \n\u849f\u84bb\u4e0d\u77e5\u9053\u5eb7\u6258\u5c55\u5f00 \u4e0d\u4f1a\u54c8\u5e0c\u8868 \u4f46\u662f\u849f\u84bb\u786c\u662f\u7528bfs\u548cmap\u6c34\u8fc7\u4e86\u8fd9\u9053\u9898\u3002  \n\u5177\u4f53\u601d\u8def\u5c31\u662f\u628a\u4e8c\u7ef4\u7684\u9b54\u677f\u964d\u7ef4~~\u6253\u51fb~~\u6210\u4e3a\u5b57\u7b26\u4e32\uff0c\u7136\u540ebfs\u679a\u4e3e\u64cd\u4f5c map\u6620\u5c04\u5b57\u7b26\u4e32\u6765\u5224\u65ad\u662f\u5426\u91cd\u590d \u540c\u65f6\u961f\u5217\u4e2d\u8bb0\u5f55\u64cd\u4f5c \u6781\u5176\u6613\u4e8e\u7406\u89e3\u3002  \n\u800c\u4e14\u672c\u9898\u89e3\u53ea\u7528\u4e86map \u6ca1\u6709\u54c8\u5e0c\u8868 \u548c\u4e4b\u524d\u7684dalao\u4eec\u4e0d\u4e00\u6837orz\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#define re register\nusing namespace std;\nstruct node\n{\n\tstring p;//\u50a8\u5b58\u5b57\u7b26\u4e32\n\tstring opr;//\u50a8\u5b58\u64cd\u4f5c\n};\nstring str = \"12345678\";//\u8d77\u59cb\u72b6\u6001\nstring st;//\u76ee\u6807\u72b6\u6001\nmap<string, bool> m;\n//ABC\u4e09\u79cd\u64cd\u4f5c\u5728\u964d\u7ef4\u4e4b\u540e\u53ef\u4ee5\u627e\u5230\u89c4\u5f8b \u4e4b\u524d\u7684dalao\u4eec\u8bb2\u7684\u5f88\u8be6\u7ec6\u4e86 \u849f\u84bb\u5c31\u4e0d\u732e\u4e11\u4e86\nstring movea(string s)//\u64cd\u4f5cA\n{\n\tfor(re int i = 0; i < 4; ++i) swap(s[i], s[7 - i]);//\u6ce8\u610fstring\u4e0b\u6807\u4ece0\u5f00\u59cb\n\treturn s;\n}\nstring moveb(string s)//\u64cd\u4f5cB\n{\n\tswap(s[0], s[3]), swap(s[4], s[7]), swap(s[1], s[3]), swap(s[4], s[5]), swap(s[2], s[3]), swap(s[5], s[6]);\n\treturn s;\n}\nstring movec(string s)//\u64cd\u4f5cC\n{\n\tswap(s[1], s[6]), swap(s[2], s[6]), swap(s[5], s[6]);\n\treturn s;\n}\nvoid bfs(string istart)//\u76ee\u6807\u5b57\u7b26\u4e32\n{\n\tqueue<node> q;\n\tq.push((node){istart, \".\"});//\u52a0\u5165\u521d\u59cb\u72b6\u6001 \u4e00\u5f00\u59cb\u6ca1\u6709\u64cd\u4f5c \u968f\u4fbf\u653e\u4e00\u4e2a\u5b57\u7b26\u5c31\u884c\n\twhile(!q.empty())\n\t{\n\t\tstring s = q.front().p, opr = q.front().opr;\n\t\tq.pop();\n\t\tif(s == st)//\u5982\u679c\u76f8\u540c\n\t\t{\n\t\t\tprintf(\"%d\\n\", opr.size() - 1);//\u8f93\u51fa\u64cd\u4f5c\u4e2a\u6570 \u6ce8\u610f\u4e00\u5f00\u59cb\u7684\".\"\u4e0d\u7b97\u5728\u64cd\u4f5c\u4e2a\u6570\u4e2d\n\t\t\tfor(re int i = 1; i < opr.size(); ++i) cout << opr[i];//\u4e0d\u8981\u8f93\u51fa\".\"\n\t\t\treturn;//\u9000\u51fa\n\t\t}\n\t\tstring a = movea(s), b = moveb(s), c = movec(s);//\u5404\u79cd\u64cd\u4f5c\n\t\tif(!m[a] && opr[opr.size() - 1] != 'A') m[a] = true, q.push((node){a, opr + \"A\"});//\u52a0\u4e86\u4e00\u4e2a\u5c0f\u5c0f\u7684\u526a\u679d A\u4e0d\u53ef\u80fd\u8fde\u7eed\u51fa\u73b0\u4e24\u6b21(\u56e0\u4e3a\u90a3\u76f8\u5f53\u4e8e\u6ca1\u52a8)\n\t\tif(!m[b]) m[b] = true, q.push((node){b, opr + \"B\"});//\u6807\u51c6bfs \u6ce8\u610fopr\u91cc\u628a\u64cd\u4f5c\u52a0\u4e0a\n\t\tif(!m[c]) m[c] = true, q.push((node){c, opr + \"C\"});\n\t}\n}\nint main()\n{\n\tstring s;\n\twhile(cin >> s) st += s;//\u6211\u4eec\u53ea\u8981\u6570\u5b57\n\tbfs(str);\n\treturn 0;\n}\n```",
        "postTime": 1540723309,
        "uid": 55683,
        "name": "QianhanOfficial",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u5eb7\u6258\u5c55\u5f00\uff1f\u4e0d\u5b58\u5728\u7684\uff0c\u56db\u4e07\u591a\u4e2a\u6570\u5b57\u800c\u5df2\uff0c\u76f4\u63a5map\u641e\u5b9a\u7684\u3002\n\u6a21\u62df\u4e09\u79cd\u64cd\u4f5c\uff0c\u6211\u5199\u7684\u662f\u6784\u9020\u51fd\u6570\uff08\u5443\uff0c\u5e0c\u671b\u6211\u6ca1\u8bb0\u9519\u540d\u5b57\uff09\u3002\n\u5bbd\u641c\u7684\u5730\u65b9\u90fd\u662f\u4e92\u76f8\u590d\u5236\u7684\uff0c\u56e0\u4e3a\u4ee3\u7801\u57fa\u672c\u76f8\u4f3c\u3002\u6ca1\u5199\u5b50\u7a0b\u5e8f\u3002\n\u4e24\u4e2a\u7ed3\u6784\u4f53\u7ed5\u4e86\u4e00\u70b9\uff0csta\u662fstate\u7684\u7f29\u5199\uff0c\u653e\u5728\u961f\u5217\u91cc\u9762\uff0c\u8bb0\u5f55\u72b6\u6001\u3002node\u8868\u793a\u9b54\u677f\uff0c\u7528\u4e8c\u7ef4\u6570\u7ec4\u50a8\u5b58\u3002\n\u51d1\u5408\u7740\u770b\u770b\u5427\u3002\n\u6ce8\u610f\u7279\u5224\uff0c\u5f53\u4e00\u5f00\u59cb\u7684\u72b6\u6001\u5c31\u662f\u7ed3\u675f\u72b6\u6001\u7684\u65f6\u5019\uff0c\u8f93\u51fa0\u3002\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint ans=0;\nstring astr;\nint en;\n\nmap<int,bool>M;\n\nstruct node{\n\tint rec[3][5];\n\tnode(){\n\t\tmemset(rec,0,sizeof(rec));\n\t}\n\tnode A(){\n\t\tnode tp;\n\t\ttp=*this;\n\t\tswap(tp.rec[1],tp.rec[2]);\n\t\treturn tp;\n\t}\n\tnode B(){\n\t\tnode tp;\n\t\ttp=*this;\n\t\tint ta,tb;\n\t\tta=tp.rec[1][1];\n\t\ttb=tp.rec[2][1];\n\t\ttp.rec[1][1]=tp.rec[1][4];\n\t\ttp.rec[2][1]=tp.rec[2][4];\n\t\tswap(ta,tp.rec[1][2]);\n\t\tswap(tb,tp.rec[2][2]);\n\t\tswap(ta,tp.rec[1][3]);\n\t\tswap(tb,tp.rec[2][3]);\n\t\tswap(ta,tp.rec[1][4]);\n\t\tswap(tb,tp.rec[2][4]);\n\t\treturn tp;\n\t}\n\tnode C(){\n\t\tnode tp;\n\t\ttp=*this;\n\t\tswap(tp.rec[2][2],tp.rec[2][3]);\n\t\tswap(tp.rec[1][2],tp.rec[2][3]);\n\t\tswap(tp.rec[1][3],tp.rec[2][3]);\n\t\treturn tp;\n\t}\n\tint ha(){\n\t\tint res=0;\n\t\tfor (int i=1;i<=4;++i)\n\t\t\tres=res*10+rec[1][i];\n\t\tfor (int i=4;i;--i)\n\t\t\tres=res*10+rec[2][i];\n\t\treturn res;\n\t}\n};\n\nstruct sta{\n\tint step;\n\tstring s;\n\tnode no;\n};\nqueue<sta>que;\n\nvoid bfs(node be){\n\tsta a,nx;\n\ta.step=0;\n\ta.no=be;\n\ta.s=\"\";\n\tque.push(a);\n\tnode tp;\n\tint temp=0;\n\twhile (!que.empty()){\n\t\ta=que.front();\n\t\ttp=a.no.A();\n\t\ttemp=tp.ha();\n\t\tif (!M[temp]){\n\t\t\tM[temp]=1;\n\t\t\tnx.s=a.s;\n\t\t\tnx.s=nx.s+'A';\n\t\t\tnx.no=tp;\n\t\t\tnx.step=a.step+1;\n\t\t\tque.push(nx);\n\t\t}\n\t\tif (temp==en){\n\t\t\tans=nx.step;\n\t\t\tastr=nx.s;\n\t\t\treturn ;\n\t\t}\n\t\ttp=a.no.B();\n\t\ttemp=tp.ha();\n\t\tif (!M[temp]){\n\t\t\tM[temp]=1;\n\t\t\tnx.s=a.s;\n\t\t\tnx.s=nx.s+'B';\n\t\t\tnx.no=tp;\n\t\t\tnx.step=a.step+1;\n\t\t\tque.push(nx);\n\t\t}\n\t\tif (temp==en){\n\t\t\tans=nx.step;\n\t\t\tastr=nx.s;\n\t\t\treturn ;\n\t\t}\n\t\ttp=a.no.C();\n\t\ttemp=tp.ha();\n\t\tif (!M[temp]){\n\t\t\tM[temp]=1;\n\t\t\tnx.s=a.s;\n\t\t\tnx.s=nx.s+'C';\n\t\t\tnx.no=tp;\n\t\t\tnx.step=a.step+1;\n\t\t\tque.push(nx);\n\t\t}\n\t\tif (temp==en){\n\t\t\tans=nx.step;\n\t\t\tastr=nx.s;\n\t\t\treturn ;\n\t\t}\n\t\tque.pop();\n\t}\n}\n\t\t\nint main(){\n\tfreopen(\"msquare.in\",\"r\",stdin);\n//\tfreopen(\"msquare.out\",\"w\",stdout);\n\tnode enn,be;\n\tfor (int i=1;i<=4;++i)\n\t\tcin>>enn.rec[1][i];\n\tfor (int i=4;i;--i)\n\t\tcin>>enn.rec[2][i];\n\ten=0;\n\ten=enn.ha();\n\tfor (int i=1;i<=4;++i)\n\t\tbe.rec[1][i]=i;\n\tbe.rec[2][4]=5;\n\tfor (int i=3;i;--i)\n\t\tbe.rec[2][i]=be.rec[2][i+1]+1;\n\tif (en!=12345678)\n\t\tbfs(be);\n\telse{\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\tcout<<ans<<endl<<astr<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1537782119,
        "uid": 36399,
        "name": "blackjack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u65e2\u7136\u697c\u4e0b\u8bf4\u4e86\u5eb7\u6258\u7684\u5730\u5740\uff0c\u6211\u4e5f\u4e0d\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u4e86\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n    int a[3][5],len;\n    char st[210];\n}list[410000];\nint head,tail;int ed;\nbool myhash[410000];\nint d[11];bool bk=false;\nint kangtuo(node tno)//\u5eb7\u6258\u5c55\u5f00 \n{\n    int a[11],L,k,i,j;\n    L=0;\n    for(i=1;i<=2;i++)\n        for(j=1;j<=4;j++)\n        {\n            L++;\n            a[L]=tno.a[i][j];\n        }\n    bool bo[10];\n    memset(bo,true,sizeof(bo));\n    int sum=0;\n    for(i=1;i<=7;i++)\n    {\n        k=0;\n        for(j=1;j<a[i];j++) if(bo[j]==true) k++;\n        sum=sum+k*d[8-i];\n        bo[a[i]]=false;\n    }\n    return sum+1;\n}\nvoid mb_a()//\u4ea4\u6362\u4e0a\u4e0b\u4e24\u884c \n{\n    node tno=list[head];int i,j;\n    for(i=1;i<=4;i++) {int t=tno.a[1][i];tno.a[1][i]=tno.a[2][i];tno.a[2][i]=t;}//\u6539\u53d8 \n    int k=kangtuo(tno);//\u5eb7\u6258 \n    tno.len=list[head].len+1;\n    tno.st[tno.len]='A';\n    if(myhash[k]==true)//\u5982\u679c\u6ca1\u6709\u627e\u8fc7\u7684\u8bdd \n    {\n        myhash[k]=false;//\u53d8\u4e3a\u627e\u8fc7 \n        tail++;list[tail]=tno;//\u5f80\u4e0b\u641c\u7d22 \n        if(k==ed)//\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a \n        {\n            printf(\"%d\\n\",tno.len);\n            for(i=1;i<=tno.len;i++)\n            {\n                printf(\"%c\",tno.st[i]);\n                if(i%60==0) printf(\"\\n\");\n            }\n            bk=true;\n        }\n    }\n}\nvoid mb_b()//\u5c06\u6700\u53f3\u8fb9\u7684\u4e00\u5217\u63d2\u5165\u6700\u5de6\u8fb9 \n{\n    node tno=list[head];int i,j;\n    tno.a[1][1]=list[head].a[1][4];\n    for(i=2;i<=4;i++) tno.a[1][i]=list[head].a[1][i-1];\n    tno.a[2][1]=list[head].a[2][4];\n    for(i=2;i<=4;i++) tno.a[2][i]=list[head].a[2][i-1];\n    int k=kangtuo(tno);\n    tno.len=list[head].len+1;\n    tno.st[tno.len]='B';\n    if(myhash[k]==true)\n    {\n        myhash[k]=false;\n        tail++;list[tail]=tno;\n        if(k==ed)\n        {\n            printf(\"%d\\n\",tno.len);\n            for(i=1;i<=tno.len;i++)\n            {\n                printf(\"%c\",tno.st[i]);\n                if(i%60==0) printf(\"\\n\");\n            }\n            bk=true;\n        }\n    }\n}\nvoid mb_c()//\u9b54\u677f\u4e2d\u592e\u56db\u683c\u4f5c\u987a\u65f6\u9488\u65cb\u8f6c \n{\n    node tno=list[head];int i,j;\n    tno.a[1][2]=list[head].a[2][2]; tno.a[1][3]=list[head].a[1][2];\n    tno.a[2][2]=list[head].a[2][3]; tno.a[2][3]=list[head].a[1][3];\n    int k=kangtuo(tno);\n    tno.len=list[head].len+1;\n    tno.st[tno.len]='C';\n    if(myhash[k]==true)\n    {\n        myhash[k]=false;\n        tail++;list[tail]=tno;\n        if(k==ed)\n        {\n            printf(\"%d\\n\",tno.len);\n            for(i=1;i<=tno.len;i++)\n            {\n                printf(\"%c\",tno.st[i]);\n                if(i%60==0) printf(\"\\n\");\n            }\n            bk=true;\n        }\n    }\n}\nint main()\n{\n    int i,j;d[0]=1;for(i=1;i<=8;i++) d[i]=d[i-1]*i;\n    int gg[10];for(i=1;i<=8;i++) scanf(\"%d\",&gg[i]);\n    bool bbb=true;\n    for(i=1;i<=8;i++) if(gg[i]!=i) bbb=false;\n    if(bbb==true) \n    {\n        printf(\"0\");\n        return 0;\n    }\n    list[0].a[1][1]=gg[1];list[0].a[1][2]=gg[2];//\u4e00\u5f00\u59cb\u8bb0\u5f55\u9b54\u677f\u7684\u72b6\u6001 \n    list[0].a[1][3]=gg[3];list[0].a[1][4]=gg[4];//\u6211\u7528for\u4f1a\u7384\u5b66\u9519\u8bef \n    list[0].a[2][1]=gg[8];list[0].a[2][2]=gg[7];\n    list[0].a[2][3]=gg[6];list[0].a[2][4]=gg[5];\n    list[0].len=0;\n    list[1].a[1][1]=1;\n    list[1].a[1][2]=2;list[1].a[1][3]=3;\n    list[1].a[1][4]=4;list[1].a[2][1]=8;\n    list[1].a[2][2]=7;list[1].a[2][3]=6;\n    list[1].a[2][4]=5;\n    ed=kangtuo(list[0]);//\u8bb0\u5f55\u5c3e \n    head=tail=1;\n    memset(myhash,true,sizeof(myhash));myhash[kangtuo(list[1])]=false;\n    while(head<=tail)\n    {\n        mb_a();if(bk==true) return 0;\n        mb_b();if(bk==true) return 0;\n        mb_c();if(bk==true) return 0;\n        head++;\n    }\n    return 0;\n}\n```",
        "postTime": 1525438715,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u521d\u770b\u6b64\u9898\u7684\u65f6\u5019\u5c31\u60f3\u5230\u7528\u5e7f\u641c\uff0c\u7136\u540e\u5c31\u89c9\u5f97\u9700\u8981\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u80fd\u591f\u7ed9\u5b9a\u5168\u6392\u5217\u7684\u5b57\u5178\u5e8f\u6b21\u5e8f\u80fd\u591f\u6c42\u51fa\u8fd9\u4e2a\u5168\u6392\u5217\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7ed9\u5b9a\u5168\u6392\u5217\u6c42\u5b83\u7684\u5b57\u5178\u5e8f\u6b21\u5e8f\uff0c\u641e\u4e86\u597d\u957f\u65f6\u95f4\u7ec8\u987b\u809d\u51fa\u6765\u4e86\uff0c\u7ed3\u679c\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\u6709\u73b0\u6210\u7684\u7b97\u6cd5(\u5eb7\u6258\u5c55\u5f00)\uff0c\u8bef\u6253\u8bef\u649e\u5199\u51fa\u6765\u4e86233333\uff0c\u90a3\u4e48\u4e0b\u9762\u5c31\u7ed9\u5927\u5bb6\u770b\u770b\u6211\u7684\u4e71\u641e\u7b97\u6cd5\u5427\n```cpp\n/*\nID: z8493331\nLANG: C++\nTASK: msquare\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing std::swap; \nusing std::next_permutation;\nusing std::queue;\nint fac[20];\nint target[20];\nstruct node{\n\tint pre,order;\n\tchar opt;\n\tvoid init(int ord,int p,int o){\n\t\torder=ord;pre=p;opt=o;\n\t}\n};\nint get_order(int a[]){\n\tint ans=0;\n\tfor(int i=1;i<=8;i++){\n\t\tint cnt=0;\n\t\tfor(int j=1;j<i;j++){\n\t\t\tif(a[j]<a[i])\n\t\t\t\tcnt++;\n\t\t}\n\t\tans+=(a[i]-cnt-1)*(fac[8-i]);\n\t}\n\treturn ans+1;\n}\nvoid get_per(int order,int a[]){\n\tbool vis_[9];\n\tmemset(vis_,0,sizeof(vis_));\n\tfor(int i=1;i<=8;i++){\n\t\tint k;\n\t\tfor(k=1;k<=8&&order>(k-1)*fac[8-i];k++);\n\t\tk--;\n\t\tint z=k;\n\t\tint j=1;\n\t\twhile(1){\n\t\t\tif(vis_[j])\n\t\t\t\tk++;\n\t\t\tif(j==k)\n\t\t\t\tbreak;\n\t\t\tj++;\n\t\t}\n\t\ta[i]=j;\n\t\tvis_[j]=true;\n\t\torder-=(z-1)*fac[8-i]; \n\t}\n}\nbool vis[40321];\nqueue<node> q;\nvoid init(){\n\tmemset(vis,0,sizeof(vis));\n\tfac[0]=1;\n\tfor(int i=1;i<=8;i++){\n\t\tfac[i]=i*fac[i-1];\n\t}\n\tfor(int i=1;i<=8;i++){\n\t\tscanf(\"%d\",&target[i]);\n\t}\n}\nvoid opt_A(int a[]){\n\tfor(int i=1;i<=4;i++){\n\t\tswap(a[i],a[8-i+1]);\n\t}\n}\nvoid opt_B(int a[]){\n\tint x=a[4],y=a[5];\n\tfor(int i=4;i>1;i--){\n\t\ta[i]=a[i-1];\n\t}\n\tfor(int i=5;i<8;i++){\n\t\ta[i]=a[i+1];\n\t}\n\ta[1]=x;\n\ta[8]=y;\n}\nvoid opt_C(int a[]){\n\tint x=a[2];\n\ta[2]=a[7];\n\ta[7]=a[6];\n\ta[6]=a[3];\n\ta[3]=x;\n}\nchar pre_opt[40321];\nint pre_node[40321];\nvoid print(int order, int ans_){\n\tif(order==1){\n\t\tprintf(\"%d\\n\",ans_);\n\t\treturn ;\n\t}\n\tprint(pre_node[order],ans_+1);\n\tprintf(\"%c\",pre_opt[order]);\n}\nvoid bfs(){\n\twhile(!q.empty()) q.pop();\n\tnode a;a.init(1,0,' ');\n\tq.push(a);\n\tvis[1]=true;\n\tint tar=get_order(target);\n\tif(tar==1){\n\t\tprintf(\"0\\n\");\n\t\treturn;\n\t}\n\twhile(!q.empty()){\n\t\tint per[9];\n\t\tnode f=q.front();q.pop();\n\t\tget_per(f.order,per);\n\t\tint p_=get_order(per);\n\t\tint per_[9];\n\t\tmemcpy(per_,per,sizeof(per));\n\t\topt_A(per_);\n\t\tint x=get_order(per_);\n\t\tif(!vis[x]){\n\t\t\tnode p;p.init(x,p_,'A');\n\t\t\tpre_opt[x]='A';\n\t\t\tpre_node[x]=p_;\n\t\t\tq.push(p);\n\t\t\tvis[x]=true;\n\t\t\tif(x==tar){\n\t\t\t\tprint(x,0);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t}\n\t\tmemcpy(per_,per,sizeof(per));\n\t\topt_B(per_);\n\t\tx=get_order(per_);\n\t\tif(!vis[x]){\n\t\t\tnode p;p.init(x,p_,'B');\n\t\t\tpre_opt[x]='B';\n\t\t\tpre_node[x]=p_;\n\t\t\tq.push(p);\n\t\t\tvis[x]=true;\n\t\t\tif(x==tar){\n\t\t\t\tprint(x,0);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t}\n\t\tmemcpy(per_,per,sizeof(per));\n\t\topt_C(per_);\n\t\tx=get_order(per_);\n\t\tif(!vis[x]){\n\t\t\tnode p;p.init(x,p_,'C');\n\t\t\tpre_opt[x]='C';\n\t\t\tpre_node[x]=p_;\n\t\t\tq.push(p);\n\t\t\tvis[x]=true;\n\t\t\tif(x==tar){\n\t\t\t\tprint(x,0);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tfreopen(\"msquare.in\",\"r\",stdin);\n\tfreopen(\"msquare.out\",\"w\",stdout);\n\tinit();\n\tbfs();\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1521170627,
        "uid": 20342,
        "name": "Sarah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u849f\u84bb\uff0c\u5404\u4f4d\u5927\u4f6c\u7684\u89e3\u6cd5\u770b\u5f97\u5f88\u7d2f......\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u89e3\u6cd5\u6700\u597d\u7528\u5bbd\u641c\u800c\u4e0d\u662f\u53cc\u5411\u5e7f\u641c\uff08\u5b57\u5178\u5e8f\uff09\u3002\n\n\u4ee3\u7801\u4e11\u5f97\u51fa\u5947\uff0c\u4f46\u662f\u601d\u8def\u5f88\u597d\u7406\u89e3\uff0c\u5728\u51fd\u6570\u4e2d\u6781\u5176\u66b4\u529b\u7684\u628a\u60c5\u51b5\u624b\u5199\u51fa\u6765\uff0c\n\n\u4f46\u76f8\u4fe1\u5bf9\u7231\u597d\u66b4\u529b\u89e3\u9898\u7684\u540c\u5b66\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002\n\nps\uff1abfs\u7684\u5730\u65b9\u6709\u70b9\u4e71\uff0c\u4f46\u770b\u5b8cmain\uff08\uff09\u91cc\u7684\u4ee3\u7801\u5c31\u80fd\u660e\u767d\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint b[40320][2][4],c[40320],bi[2][4];\nint n[40320][3],l[40320];\nchar r[5000];\nbool se[9][9][9][9][9][9][9];\nint ans;\nint h=-1,t=0;\nint bfs(){//\u53ef\u4ee5\u7565\u8fc7\uff0c\u53ea\u662f\u628a\u539f\u59cb\u601d\u60f3\u66b4\u529b\u624b\u5199\u51fa\u6765\uff0c\u6ca1\u6709\u5077\u61d2\u3002\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n    c[0]=0; \n    do{\n        h++;\n        t++;\n        b[t][0][0]=b[h][1][0];b[t][0][1]=b[h][1][1];\n        b[t][0][2]=b[h][1][2];b[t][0][3]=b[h][1][3];\n        b[t][1][0]=b[h][0][0];b[t][1][1]=b[h][0][1];\n        b[t][1][2]=b[h][0][2];b[t][1][3]=b[h][0][3];\n        if(se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]           [b[t][1][0]][b[t][1][1]][b[t][1][2]]){\n            t--;\n        }\n        else{\n            se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]                [b[t][1][0]][b[t][1][1]][b[t][1][2]]=1;\n            c[t]=c[h]+1;\n            n[h][0]=t;\n            l[t]=h;\n            if(b[t][0][0]==bi[0][0]&&b[t][0][1]==bi[0][1]&&b[t]                [0][2]==bi[0][2]&&b[t][0][3]==bi[0][3]&&b[t][1]                    [0]==bi[1][0]&&b[t][1][1]==bi[1][1]&&b[t][1]                    [2]==bi[1][2]&&b[t][1][3]==bi[1][3]){\n                return c[t];\n            }\n        }\n        t++;\n        b[t][0][0]=b[h][0][3];b[t][0][1]=b[h][0][0];\n        b[t][0][2]=b[h][0][1];b[t][0][3]=b[h][0][2];\n        b[t][1][0]=b[h][1][3];b[t][1][1]=b[h][1][0];\n        b[t][1][2]=b[h][1][1];b[t][1][3]=b[h][1][2];\n        if(se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]            [b[t][1][0]][b[t][1][1]][b[t][1][2]]){\n            t--;\n        }\n        else{\n            se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]                [b[t][1][0]][b[t][1][1]][b[t][1][2]]=1;\n            c[t]=c[h]+1;\n            n[h][1]=t;\n            l[t]=h;\n            if(b[t][0][0]==bi[0][0]&&b[t][0][1]==bi[0][1]&&b[t]                [0][2]==bi[0][2]&&b[t][0][3]==bi[0][3]&&b[t][1]                    [0]==bi[1][0]&&b[t][1][1]==bi[1][1]&&b[t][1]                    [2]==bi[1][2]&&b[t][1][3]==bi[1][3]){\n                return c[t];\n            }\n        }\n        t++;\n        b[t][0][0]=b[h][0][0];b[t][0][1]=b[h][1][1];\n        b[t][0][2]=b[h][0][1];b[t][0][3]=b[h][0][3];\n        b[t][1][0]=b[h][1][0];b[t][1][1]=b[h][1][2];\n        b[t][1][2]=b[h][0][2];b[t][1][3]=b[h][1][3];\n        if(se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]            [b[t][1][0]][b[t][1][1]][b[t][1][2]]){\n            t--;\n        }\n        else{\n            se[b[t][0][0]][b[t][0][1]][b[t][0][2]][b[t][0][3]]                [b[t][1][0]][b[t][1][1]][b[t][1][2]]=1;\n            c[t]=c[h]+1;\n            n[h][2]=t;\n            l[t]=h;\n            if(b[t][0][0]==bi[0][0]&&b[t][0][1]==bi[0][1]&&b[t]                [0][2]==bi[0][2]&&b[t][0][3]==bi[0][3]&&b[t][1]                    [0]==bi[1][0]&&b[t][1][1]==bi[1][1]&&b[t][1]                    [2]==bi[1][2]&&b[t][1][3]==bi[1][3]){\n                return c[t];\n            }\n        }\n    }while(h<t);\n}\nint main(){\n    memset(se,0,sizeof(se));\n    memset(n,0,sizeof(n));\n    memset(c,0,sizeof(c));//\u6570\u7ec4\u6e050\n    b[0][0][0]=1;b[0][0][1]=2;\n    b[0][0][2]=3;b[0][0][3]=4;\n    b[0][1][0]=8;b[0][1][1]=7;\n    b[0][1][2]=6;b[0][1][3]=5;//\u76ee\u6807\u60c5\u51b5\n    cin>>bi[0][0]>>bi[0][1]>>bi[0][2]>>bi[0][3]>>bi[1][3]>>bi[1]    [2]>>bi[1][1]>>bi[1][0];\n    if(b[0][0][0]==bi[0][0]&&b[0][0][1]==bi[0][1]&&b[0][0]            [2]==bi[0][2]&&b[0][0][3]==bi[0][3]&&b[0][1][0]==bi[1]            [0]&&b[0][1][1]==bi[1][1]&&b[0][1][2]==bi[1][2]&&b[0][1]        [3]==bi[1][3]){\n        cout<<\"0\"<<endl;//\u76f4\u63a5\u4e3a\u76ee\u6807\u60c5\u51b5\n    }\n    else{\n        ans=bfs();\n        cout<<ans<<endl;\n        int e=0;\n        while(1){\n            for(int i=0;i<3;i++){\n                if(n[l[t]][i]==t){//\u5224\u65ad\u5e94\u8be5\u8fdb\u884c\u7684\u64cd\u4f5c\n                    if(i==0) r[e]='A';\n                    else if(i==1) r[e]='B';\n                    else r[e]='C';\n                    break;\n                }\n            }\n            e++;\n            if(t==0) break;\n            t=l[t];\n        }\n        for(int i=e-2;i>=0;i--) cout<<r[i];//\u8f93\u51fa\n        cout<<endl;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1515477097,
        "uid": 39533,
        "name": "Rocket_raccoon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "**\u770b\u5230\u9898\u76ee\u7b2c\u4e00\u773c\uff0c\u81ea\u7136\u800c\u7136\u5730\u60f3\u5230\u4e86\u5eb7\u6258\u5c55\u5f00\u3002\u3002\uff08\u4ec0\u4e48\uff1f\u4e0d\u77e5\u9053\u5eb7\u6258\u5c55\u5f00\uff1f\uff1f\u4e0b\u9762\u7684\u795e\u7287\u4eec\u6709\u89e3\u91ca\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u767e\u5ea6\u4e00\u4e0b\uff0c\u7c7b\u4f3c\u54c8\u5e0c\u3002\u3002\u6211\u8fd9\u79cd\u82e3\u84bb\u5c31\u4e0d\u8bb2\u4e86\uff08\u56e0\u4e3a\u8bb2\u4e0d\u6765\u3002\u3002\uff09\uff09**\n\n**\u77e5\u9053\u5eb7\u6258\uff0cbfs\uff0c\u770b\u7740\u9898\u76ee\u89c9\u7740\u601d\u8def\u5f88\u5bb9\u6613\uff0c\u5c31\u51c6\u5907\u64cd\u4f5c\u4e86\uff0c\u7136\u540e\u4e00\u756a\u626b\u64cd\u4f5c\u4e4b\u540e\uff0c\u53d1\u73b0GG\u3002\u3002\u90a3\u4e48\u5230\u5e95\u662f\u5982\u4f55\u51fa\u62d0\u7684\u5462\uff1f\u6211\u5728\u4ee3\u7801\u91cc\u9762\u89e3\u91ca\u4e86233**\n\n//\u819c\u677f\uff08\u6ed1\u7a3d\uff09 \n\n/\\*\n\u8fd9\u9898\u987a\u7740\u601d\u8defBFS\u5c31\u884c\u4e86\uff0c\u5173\u952e\u662f\u4ed6\u8981\u8ba9\u4f60\u8f93\u51fa\u6b65\u9aa4\uff0c\u4f60\u5982\u679c\u6bcf\u4e2a\u7ed3\u6784\u4f53\u90fd\u7528string\u50a8\u5b58\u5230\u8fd9\u4e00\u6b65\u7684\u6240\u6709\u6b65\u9aa4\n\n\u7684\u8bdd\u5c31\u4f1a\u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u7ed3\u6784\u4f53\u91cc\u9762\u5b9a\u4e49op\u4e3a\u8fd9\u6b21\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u7528\u6307\u9488\u5b58\u50a8\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\uff0c\u6700\u540e\u518d\u7528\n\n\u9012\u5f52\u8f93\u51fa\u6700\u5148\u4e00\u4e2a\u72b6\u6001\u7684op\uff0c\u7136\u540e\u5f80\u540e\u6765\u3002\n\n\\*/\n\n\n\n        \n\n        \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=362809;//\u95f2\u5f97\u614c\u7528\u76849\uff01\u3002\u3002\u6d6a\u8d39\u7a7a\u95f4\uff0c\u522b\u5b66\u6211\u3002 \nstruct node{\n    int a[10],step; \n    char op;\n    node *pre;  //\u6307\u9488 \n    node():step(0),op(0),pre(NULL){ }\n}st,ed;\nint fac[15]={1},vis[N],kt;\nint kangtuo(node x){\n    int w[10]={0},sum=0;\n    for(int i=1;i<=8;i++)\n    for(int j=i+1;j<=8;j++){\n        if(x.a[i]>x.a[j]) w[i]++;\n    }\n    for(int i=1;i<=8;i++)\n    sum+=w[i]*fac[8-i];\n    return sum+1; \n    //\u5eb7\u6258\u5c55\u5f00 \n} \nvoid print(node *k){\n    //\u9012\u5f52\u8f93\u51fa\u6b65\u9aa4 \n    if(k->pre==NULL) return;//\u627e\u5230\u6700\u539f\u59cb\u7684\u72b6\u6001\uff08\u4e5f\u5c31\u662fst\uff09\u4e86\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a \n    print(k->pre);\n    printf(\"%c\",k->op);\n}\nint main(){\n    for(int i=1;i<=8;i++) fac[i]=fac[i-1]*i;//\u5b9a\u4e49\u9636\u4e58 \n    for(int i=1;i<=8;i++)\n    st.a[i]=i;\n    st.step=0;\n    for(int i=1;i<=8;i++)\n    scanf(\"%d\",&ed.a[i]);\n    kt=kangtuo(ed);//\u5148\u8bb0\u5f55\u4e0bend\u72b6\u6001\u7684\u5eb7\u6258 \n    queue <node> q;\n    q.push(st);\n    vis[kangtuo(st)]=1;\n    node *k; \n    while(!q.empty()){\n        k=new node;//\u6ce8\u610f\uff0c\u4f60\u6bcf\u6b21\u90fd\u8981\u65b0\u5efa\u4e00\u4e2anode\u5355\u5143\uff0c\u5982\u679c\u5355\u5355\u662fk=q.front()\u7684\u8bdd\u4ed6\u6c38\u8fdc\u90fd\u6307\u7684\u662f\u8fd9\u4e2a\u5355\u5143 \uff1b \n        *k=q.front();\n        q.pop();\n        if(kangtuo(*k)==kt){\n            //\u641c\u5230\u7ed3\u679c\uff0c\u5c31\u8f93\u51fa\u6b65\u9aa4\u548c\u987a\u5e8f \n            printf(\"%d\\n\",k->step);\n            print(k);\n            break;\n        }\n        node x;\n        //A\u6b65\u9aa4\n        {\n        x=*k;\n        for(int i=1;i<=4;i++)\n        swap(x.a[i],x.a[8-i+1]);\n        x.step++; //\u6b65\u9aa4+1 \n        x.op='A';//\u8bb0\u5f55\u6b65\u9aa4 \n        x.pre=k;//\u8bb0\u5f55\u6307\u9488 \n        int ktt=kangtuo(x);\n        if(!vis[ktt]){\n            q.push(x);\n            vis[ktt]=1;\n            }\n        }\n        //B\u6b65\u9aa4\n        {\n        x=*k;\n        swap(x.a[1],x.a[4]);\n        swap(x.a[5],x.a[8]);\n        swap(x.a[2],x.a[4]);\n        swap(x.a[7],x.a[5]);\n        swap(x.a[3],x.a[4]);\n        swap(x.a[6],x.a[5]);\n        x.step++;\n        x.op='B';\n        x.pre=k;\n        int ktt=kangtuo(x);\n        if(!vis[ktt]){\n            q.push(x);\n            vis[ktt]=1;\n        }\n        }\n        //C\u6b65\u9aa4 \n        {\n        x=*k;\n        swap(x.a[2],x.a[3]);\n        swap(x.a[2],x.a[7]);\n        swap(x.a[7],x.a[6]);\n        x.step++;\n        x.op='C';\n        x.pre=k;\n        int ktt=kangtuo(x);\n        if(!vis[ktt]){\n            q.push(x);\n            vis[ktt]=1;\n        }\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1508643554,
        "uid": 41185,
        "name": "JayYee",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    },
    {
        "content": "\u7528\u5b57\u7b26\u4e32\u505a\u4f1a\u7b80\u4fbf\u4e00\u4e9b\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u53ef\u4ee5\u968f\u4fbf\u6362\u2026\u2026\n\n\u8fd9\u4e48\u70b9\u72b6\u6001\u641c\u4e00\u4e2a\u52a0\u4e00\u4e2a\u5c31\u8ba1\u4e00\u4e2a(map)\u5c31\u597d\u4e86\u2026\u2026\n\n\u96be\u70b9\u5728\u4e8e\u5b58\u64cd\u4f5c\u4e32\u2026\u2026\n\n\u5f00\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4(m[])\u4e13\u95e8\u5b58\u8fd9\u4e2a\uff0c\u7136\u540emap\u5224\u91cd\u7684\u4e1c\u897f(d[])\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\u4ece\u800c\u4ee3\u8868\u8fd9\u4e2a\u72b6\u6001(m[d[string]])\u662f\u7531m\u6240\u5b58\u7684\u64cd\u4f5c\u4e32\u5f97\u5230\u7684\u2026\u2026\n\n\u63a8\u8350\u5148\u53bb\u770b\u6700\u4e0b\u9762\u90a3\u4e2a\u9898\u89e3\uff0cdalao\u8bf4\u5230\uff1a\u64cd\u4f5c\u4e32\u4e0d\u8d85\u8fc722\u4e2a\u5b57\u7b26(\u6700\u591a\u5e94\u8be5\u662f22\u6b65)\uff0c\u6240\u4ee5\u6839\u672c\u4e0d\u7528\u6362\u884c\u2026\u2026\n\n```cpp\n//\u5f53\u7136\u5176\u5b9e\u5927\u5bb6\u90fd\u6ca1\u5199\u6362\u884c\u2026\u2026\n#include<iostream>\n#include<string>\n#include<map>\nusing namespace std;\nstring qs[50010],m[50010],s,c,a=\"12345678\",b=\"\";\nint u,tim[50010],head=0,tail=1,t,x,k,ss,cnt;\nchar cc,p;\nmap<string,int>d;\nvoid sap(int x,int y)\n{\n    p=s[x],s[x]=s[y],s[y]=p;//\u8fd9\u53ea\u662f\u4ea4\u6362\u64cd\u4f5c\n}\nint main()\n{\n    for(int i=1;i<=8;i++){cin>>cc;b=b+cc;}\n    if(a==b){cout<<\"0\";return 0;}\n    qs[1]=a,tim[1]=0;\n    while(head!=tail)\n    {\n        head++,c=qs[head],t=tim[head],k=d[c];//\u53d6\u51fa\u72b6\u6001\n        s=c;\n        sap(0,7);//A\u64cd\u4f5c\n        sap(1,6);\n        sap(2,5);\n        sap(3,4);\n        if(s==b)\n        {\n            cout<<t+1<<\"\\n\";\n            for(int i=0;i<m[k].size();i++)//\u9010\u4f4d\u8f93\u51fa\n            {\n                cout<<m[k][i];\n                ss++;\n                if(ss==60)//\u65e2\u7136\u90fd\u5199\u4e86\uff0c\u90a3\u5c31\u4e0d\u5220\u4e86\u2026\u2026\n                {\n                    cout<<\"\\n\";\n                    ss=ss-60;\n                }\n            }\n            cout<<'A';//\u4e00\u5b9a\u8981\u8f93\u51fa\u5f53\u524d\u7684\u64cd\u4f5c\n            return 0;\n        }\n        if(!d[s])//\u8fd9\u5c31\u662f\u5224\u91cd\n        {\n            cnt++, m[cnt]=m[k]+\"A\",/*\u4ece\u4e0a\u4e2a\u72b6\u6001\u8bb0\u5f55\u4e0b\u6765*/d[s]=cnt,//\u8fd9\u4e5f\u662f\u5224\u91cd\n            tail++,qs[tail]=s,tim[tail]=t+1;//\u8fd9\u4e5f\u662f\u8bb0\u5f55\u72b6\u6001\n        }\n        s=c;\n        sap(0,3);//B\u64cd\u4f5c\n        sap(1,3);//\u57fa\u672c\u5b8c\u5168\u540c\u4e0a\u2026\u2026\n        sap(2,3);//\u6240\u4ee5\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca\u4e86\u2026\u2026\n        sap(4,7);\n        sap(4,6);\n        sap(4,5);\n        if(s==b)\n        {\n            cout<<t+1<<\"\\n\";\n            for(int i=0;i<m[k].size();i++)\n            {\n                cout<<m[k][i];\n                ss++;\n                if(ss==60)\n                {\n                    cout<<\"\\n\";\n                    ss=ss-60;\n                }    \n            }\n            cout<<'B';\n            return 0;\n        }\n        if(!d[s])\n        {\n            cnt++, m[cnt]=m[k]+\"B\",d[s]=cnt,\n            tail++,qs[tail]=s,tim[tail]=t+1;\n        }\n        s=c;\n        sap(1,6);//C\u64cd\u4f5c\n        sap(2,6);\n        sap(5,6);\n        if(s==b)\n        {\n            cout<<t+1<<\"\\n\";\n            for(int i=0;i<m[k].size();i++)\n            {\n                cout<<m[k][i];\n                ss++;\n                if(ss==60)\n                {\n                    cout<<\"\\n\";\n                    ss=ss-60;\n                }\n            }\n            cout<<'C';\n            return 0;\n        }\n        if(!d[s])\n        {\n            cnt++, m[cnt]=m[k]+\"C\",d[s]=cnt,\n            tail++,qs[tail]=s,tim[tail]=t+1;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502623450,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2730 \u3010\u9b54\u677f Magic Squares\u3011"
    }
]