[
    {
        "content": "#### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u73af\u5f62\u5e8f\u5217\uff0c\u88ab\u5206\u4e3a $m$ \u6bb5\u3002\u6709 $n$ \u4e2a\u56fd\u5bb6\uff0c\u5e8f\u5217\u7684\u7b2c $i$ \u6bb5\u5c5e\u4e8e\u56fd\u5bb6 $o_i$\u3002\u63a5\u4e0b\u6765\u6709 $k$ \u6b21\u4e8b\u4ef6\uff0c\u6bcf\u6b21\u7ed9\u73af\u5f62\u5e8f\u5217\u4e0a\u7684\u4e00\u4e2a\u533a\u95f4\u52a0\u4e0a\u4e00\u4e2a\u6b63\u6574\u6570\u3002\u6bcf\u4e2a\u56fd\u5bb6\u6709\u4e00\u4e2a\u671f\u671b $p_i$\uff0c\u6c42\u51fa\u6bcf\u4e2a\u56fd\u5bb6\u5728\u5e8f\u5217\u4e0a\u6240\u6709\u4f4d\u7f6e\u7684\u503c\u7684\u548c\u5230\u8fbe $p_i$ \u7684\u6700\u65e9\u65f6\u95f4\uff08\u6216\u62a5\u544a\u65e0\u6cd5\u8fbe\u5230\uff09\u3002\n\n#### \u9650\u5236\n\n$1\\le n,m,k\\le 3\\cdot10^5$\u3002\n\n#### \u9898\u89e3\n\n\u4e0b\u9762\u8ba4\u4e3a $n,m,k$ \u540c\u9636\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4ee5 $n$ \u8868\u793a\u3002\n\n\u5ffd\u7565\u73af\u7684\u6761\u4ef6\uff0c\u8de8\u8d8a\u9996\u5c3e\u7684\u4e8b\u4ef6\u53ef\u4ee5\u62c6\u6210\u4e24\u4e2a\u3002\n\n\u8003\u8651\u4e8c\u5206\u6bcf\u4e2a\u56fd\u5bb6\u7684\u65f6\u95f4\uff0c\u6bcf\u6b21\u4e8c\u5206\u540e\u6267\u884c\u4e8c\u5206\u4f4d\u7f6e\u4e4b\u524d\u7684\u6240\u6709\u4e8b\u4ef6\uff0c\u5224\u65ad\u662f\u5426\u8fbe\u5230\u671f\u671b\u3002\u7136\u800c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u56fd\u5bb6\u4e00\u8d77\u4e8c\u5206\uff0c\u8fd9\u6837\u6bcf\u4e00\u8f6e\u53ea\u7528\u5b8c\u6574\u5730\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u5e8f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n(\\log n)^2)$\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u64cd\u4f5c\u518d\u7ed3\u5408\u4e00\u5b9a\u7684\u5e38\u6570\u4f18\u5316\u5df2\u7ecf\u8db3\u4ee5\u901a\u8fc7\u8be5\u9898\uff0c\u4f46\u8fd8\u6709\u590d\u6742\u5ea6\u66f4\u4f18\u79c0\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u626b\u63cf\u5e8f\u5217\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u65f6\u95f4\u3002\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u64cd\u4f5c $([l_i,r_i),a_i)$\uff0c\u626b\u5230 $l_i$ \u65f6\u5728\u4f4d\u7f6e $i$ \u52a0 $a_i$\uff0c\u626b\u5230 $r_i$ \u65f6\u51cf $a_i$\u3002\u8fd9\u6837\u76f4\u63a5\u7528\u6574\u4f53\u4e8c\u5206\u7684\u65b9\u6cd5\u5e76\u4e0d\u80fd\u6539\u5584\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u5728\u5c06\u7ebf\u6bb5\u6811\u53ef\u6301\u4e45\u5316\u540e\u628a\u4e00\u4e2a\u56fd\u5bb6\u7684\u6240\u6709\u4f4d\u7f6e\u4e00\u8d77\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5c31\u80fd\u505a\u5230 $O(n\\log n)$ \u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u3002\u7136\u800c\u672c\u9898\u7684\u7a7a\u95f4\u9650\u5236\u5f88\u7d27\uff0c\u8fd9\u79cd\u505a\u6cd5\u5e76\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u6cbf\u7528\u4e4b\u524d\u6574\u4f53\u4e8c\u5206\u548c\u5dee\u5206\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u5047\u8bbe\u76ee\u524d\u5728\u533a\u95f4 $[l_v,r_v)$ \u5185\u4e8c\u5206\uff0c\u5728\u4fdd\u6301\u64cd\u4f5c\u548c\u5e8f\u5217\u4f4d\u7f6e\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 two-pointers \u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709\u56fd\u5bb6\u5728\u7ed9\u5b9a\u64cd\u4f5c\u96c6\u5408\uff08\u5373 $[l_v,\\lfloor\\frac{l_v+r_v}{2}\\rfloor)$ \u4e2d\u7684\u64cd\u4f5c\uff09\u4e2d\u7684\u6743\u503c $\\mathrm{val}_i$\u3002\u5982\u679c $\\mathrm{val}_i\\ge p_i$\uff0c\u5411\u5de6\u9012\u5f52\uff1b\u5982\u679c $\\mathrm{val}_i<p_i$\uff0c\u5c06 $p_i$ \u51cf\u53bb $\\mathrm{val}_i$\uff0c\u5411\u53f3\u9012\u5f52\u3002\u7531\u4e8e\u9012\u5f52\u5c42\u6570\u4e3a $O(\\log n)$\uff0c\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <cctype>\nconstexpr int N = 300'000;\nint n, m, q, qn;\nint o[N], p[N], s[N], ans[N], tmp[N];\nlong long sum[N];\nstruct Query {\n    int x, y, v;\n    Query() {}\n    Query(int x, int y, int v) : x(x), y(y), v(v) {}\n    friend bool operator<(const Query &lhs, const Query &rhs) {\n        return lhs.x < rhs.x;\n    }\n};\nQuery queries[3 * N], temp[3 * N];\nchar buf[1 << 22], *p1, *p2;\nchar get() {\n    if (p1 == p2) {\n        p1 = buf;\n        p2 = buf + fread(buf, 1, sizeof(buf), stdin);\n    }\n    if (p1 == p2)\n        return EOF;\n    return *p1++;\n}\nint readInt() {\n    int x = 0;\n    char c = get();\n    while (!std::isdigit(c))\n        c = get();\n    while (std::isdigit(c)) {\n        x = 10 * x + c - '0';\n        c = get();\n    }\n    return x;\n}\nvoid print(int x) {\n    static char stk[20];\n    int top = 0;\n    while (x > 0) {\n        stk[top++] = x % 10 + '0';\n        x /= 10;\n    }\n    for (int i = top - 1; i >= 0; --i)\n        *p2++ = stk[i];\n    *p2++ = '\\n';\n}\nvoid nie() {\n    *p2++ = 'N';\n    *p2++ = 'I';\n    *p2++ = 'E';\n    *p2++ = '\\n';\n}\nvoid solve(int vl, int vr, int sl, int sr, int ql, int qr) {\n    if (sl == sr)\n        return;\n    for (int i = sl; i < sr; ++i)\n        sum[o[s[i]]] = 0;\n    if (vr - vl == 1) {\n        int qi = ql;\n        long long curSum = 0;\n        for (int i = sl; i < sr; ++i) {\n            while (qi < qr && queries[qi].x <= s[i]) {\n                curSum += queries[qi].v;\n                ++qi;\n            }\n            if (sum[o[s[i]]] < p[o[s[i]]])\n                sum[o[s[i]]] += curSum;\n        }\n        for (int i = sl; i < sr; ++i) {\n            if (sum[o[s[i]]] >= p[o[s[i]]]) {\n                ans[o[s[i]]] = vr;\n            } else {\n                ans[o[s[i]]] = -1;\n            }\n        }\n        return;\n    }\n    int vm = (vl + vr) / 2;\n    int qm = ql, nqr = qr;\n    std::copy(queries + ql, queries + qr, temp + ql);\n    for (int i = ql; i < qr; ++i) {\n        if (temp[i].y < vm) {\n            queries[qm++] = temp[i];\n        } else {\n            queries[--nqr] = temp[i];\n        }\n    }\n    std::reverse(queries + qm, queries + qr);\n    int qi = ql;\n    long long curSum = 0;\n    for (int i = sl; i < sr; ++i) {\n        while (qi < qm && queries[qi].x <= s[i]) {\n            curSum += queries[qi].v;\n            ++qi;\n        }\n        if (sum[o[s[i]]] < p[o[s[i]]])\n            sum[o[s[i]]] += curSum;\n    }\n    std::copy(s + sl, s + sr, tmp + sl);\n    int sm = sl, nsr = sr;\n    for (int i = sl; i < sr; ++i) {\n        if (sum[o[tmp[i]]] >= p[o[tmp[i]]]) {\n            s[sm++] = tmp[i];\n        } else {\n            s[--nsr] = tmp[i];\n        }\n    }\n    std::reverse(s + sm, s + sr);\n    for (int i = sm; i < sr; ++i) {\n        if (sum[o[s[i]]] != -1) {\n            p[o[s[i]]] -= sum[o[s[i]]];\n            sum[o[s[i]]] = -1;\n        }\n    }\n    solve(vl, vm, sl, sm, ql, qm);\n    solve(vm, vr, sm, sr, qm, qr);\n}\nint main() {\n    n = readInt();\n    m = readInt();\n    std::fill(ans, ans + n, -1);\n    std::iota(s, s + m, 0);\n    for (int i = 0; i < m; ++i)\n        o[i] = readInt() - 1;\n    for (int i = 0; i < n; ++i)\n        p[i] = readInt();\n    q = readInt();\n    for (int i = 0; i < q; ++i) {\n        int l, r, a;\n        l = readInt() - 1;\n        r = readInt();\n        a = readInt();\n        if (l < r) {\n            queries[qn++] = Query(l, i, a);\n            if (r != m)\n                queries[qn++] = Query(r, i, -a);\n        } else {\n            queries[qn++] = Query(0, i, a);\n            if (l != r) {\n                queries[qn++] = Query(r, i, -a);\n                queries[qn++] = Query(l, i, a);\n            }\n        }\n    }\n    std::sort(queries, queries + qn);\n    solve(0, q, 0, m, 0, qn);\n    p1 = p2 = buf;\n    for (int i = 0; i < n; ++i) {\n        if (ans[i] == -1) {\n            nie();\n        } else{\n            print(ans[i]);\n        }\n    }\n    fwrite(buf, 1, p2 - p1, stdout);\n    return 0;\n}\n```\n\n",
        "postTime": 1578753766,
        "uid": 149656,
        "name": "jiangly",
        "ccfLevel": 10,
        "title": "P3527 [POI2011]MET-Meteors \u9898\u89e3"
    },
    {
        "content": "\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u8fd9\u9053\u9898\u662f\u6574\u4f53\u4e8c\u5206\u7684\u7ecf\u5178\u4f8b\u9898\uff0c\u6211\u4eec\u5148\u629b\u5f00\u6574\u4f53\u4e8c\u5206\uff0c\u601d\u8003\u4e8c\u5206\u600e\u4e48\u505a\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u56e0\u4e3a\u7b54\u6848\u6709\u5355\u8c03\u6027\uff0c\u5982\u679c$x$\u65f6\u523b\u4e3a\u6700\u5c0f\u53ef\u4ee5\u65f6\u523b\uff0c\u5219\u6bd4$x$\u5c0f\u7684\u65f6\u523b\u90fd\u4e0d\u53ef\u4ee5\uff0c\u6bd4$x$\u5927\u7684\u65f6\u523b\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u5e76\u52a0\u4ee5\u9a8c\u8bc1\u3002\u5148\u4e0d\u8bf4\u600e\u6837\u9a8c\u8bc1\uff0c\u5c31\u5355\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e0d\u80fd\u63a5\u53d7\uff0c$O(nmlog_2n)$\u3002\r\n\r\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5982\u679c\u4e00\u4e2a\u4e00\u4e2a\u8fdb\u884c\u4e8c\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u5141\u8bb8\uff0c\u4e14\u8fd9\u4e9b\u8be2\u95ee\u4e0d\u662f\u5f3a\u5236\u5728\u7ebf\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u6574\u4f53\u8fdb\u884c\u4e8c\u5206\uff0c\u6211\u4eec\u628a\u6240\u6709\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u8fdb\u884c\u4e8c\u5206\u3002\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570$solve(l,r,x,y)$\uff0c\u8868\u793a\u5f53\u524d\u8be2\u95ee\u5e8f\u5217$[x,y]$\u7684\u7b54\u6848\u5728\u5f53\u524d\u7b54\u6848$[l\uff0cr]$\u533a\u95f4\u3002\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u4e3a\u4ec0\u4e48\u7b54\u6848\u5728\u7b54\u6848\u533a\u95f4$[l,r]$\u7684\u6240\u6709\u8be2\u95ee\u4f1a\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5728\u8be2\u95ee\u5e8f\u5217\u7684\u8fde\u7eed\u4e00\u6bb5\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u653e\u5728\u540e\u9762\uff0c\u5148\u7f6e\u4e4b\u4e0d\u7406\u3002\u6211\u4eec\u601d\u8003\uff0c\u600e\u6837\u8fdb\u884c\u4e8c\u5206\u3002\r\n\r\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e8c\u5206\u7b54\u6848\u7684\u601d\u60f3\u662f\u53d6\u51fa\u5f53\u524d\u7b54\u6848\u533a\u95f4\u7684\u4e2d\u95f4\u503c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5982\u679c\u6bd4\u7b54\u6848\u5c0f\uff0c\u5219\u8ba9\u7b54\u6848\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e3a\u4e2d\u95f4\u503c\u52a0\u4e00\uff0c\u53cd\u4e4b\u8ba9\u7b54\u6848\u7684\u53f3\u7aef\u70b9\u4e3a\u4e2d\u95f4\u503c\u3002\u6309\u7167\u4e8c\u5206\u7b54\u6848\u7684\u601d\u60f3\uff0c\u6211\u4eec\u4e5f\u8fdb\u884c\u4e2d\u95f4\u503c\u9a8c\u8bc1\u3002\u770b\u4f8b\u9898\uff0c\u6211\u4eec\u601d\u8003\u600e\u4e48\u9a8c\u8bc1\u3002\r\n\r\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u5f53\u524d\u7b54\u6848\u533a\u95f4$[l,r]$\uff0c\u6211\u4eec\u628a\u7b2c$[l,mid]$\u573a\u6d41\u661f\u96e8\u5168\u90e8\u843d\u4e0b\uff0c\u770b\u5728\u5f53\u524d\u7b54\u6848\u533a\u95f4$[l,r]$\u6240\u5c5e\u7684\u6240\u6709\u8be2\u95ee\u662f\u5426\u5728\u7b2c$[l,mid]$\u573a\u6d41\u661f\u96e8\u4e0b\u8fc7\u4e4b\u540e\u5df2\u7ecf\u6536\u96c6\u8db3\u591f\u7684\u9668\u77f3\uff0c\u5982\u679c\u5f53\u524d\u8be2\u95ee\u5df2\u7ecf\u6536\u96c6\u591f\uff0c\u6211\u4eec\u628a\u5b83\u5f52\u4e3a\u7b54\u6848\u533a\u95f4$[l,mid]$\u4e2d\uff0c\u53cd\u4e4b\u6211\u4eec\u628a\u5b83\u5f52\u4e3a\u7b54\u6848\u533a\u95f4$[mid+1,r]$\u4e2d\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5f52\u4e3a\u7b54\u6848\u533a\u95f4$[mid+1,r]$\u7684\u8be2\u95ee\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4fee\u6539\uff0c\u5bf9\u4e8e\u5176\u5e0c\u671b\u8981\u6536\u96c6\u7684\u9668\u77f3\u6570\u8981\u51cf\u53bb$[l,mid]$\u573a\u6d41\u661f\u96e8\u7684\u9668\u77f3\u603b\u6570\uff0c\u6b64\u5904\u7406\u89e3\u4e00\u4e0b\u3002\r\n\r\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u73b0\u5728\u89e3\u51b3\u4e00\u4e0b\u4e0a\u9762\u7559\u4e0b\u7684\u95ee\u9898\uff0c\u6211\u4eec\u600e\u4e48\u80fd\u5c06\u7b54\u6848\u90fd\u5728$[x,y]$\u533a\u95f4\u7684\u6240\u6709\u8be2\u95ee\u90fd\u653e\u5728\u4e00\u8d77\u5462\uff1f\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5212\u5206\uff0c\u90fd\u5c06\u8fd9\u4e9b\u8be2\u95ee\u8fdb\u884c\u62f7\u8d1d\uff0c\u5e76\u4e14\u4fee\u6539\uff0c\u7136\u540e\u91cd\u65b0\u6309\u5de6\u53f3\u6392\u5e03\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u8ba9\u8fd9\u4e9b\u7b54\u6848\u5728\u540c\u4e00\u533a\u95f4\u7684\u8be2\u95ee\u5728\u4e00\u8d77\u4e86\u3002 \r\n\r\n\u200b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6211\u4eec\u8fd0\u7528\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\u8fdb\u884c\u5206\u6790\uff0c\u6211\u4eec\u4e00\u5171\u6709$log_2{r-l+1}$\u5c42\uff0c\u5728\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u7684$r$\u8868\u793a\u7b54\u6848\u53ef\u80fd\u5230\u8fbe\u7684\u6700\u5927\u503c\uff0c\u53cd\u4e4b$l$\u8868\u793a\u7684\u5c31\u662f\u7b54\u6848\u53ef\u80fd\u5230\u8fbe\u7684\u6700\u5c0f\u503c\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u7684$r=n\uff0cl=1$\uff0c\u4f46\u662f\u4e0b\u65b9\u7684\u4ee3\u7801\u6700\u5f00\u59cb\u7684\u4f20\u53c2\u4e3a$r=n+1$\uff0c\u8fd9\u8868\u793a\u524d$n$\u573a\u6d41\u661f\u96e8\u90fd\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u8be2\u95ee\uff0c\u6240\u4ee5\u6700\u540e\u843d\u5728$n+1$\u7684\u6240\u6709\u8be2\u95ee\u8868\u793a\u4e0d\u80fd\u5728\u6240\u6709$n$\u4e2a\u6d41\u884c\u96e8\u4e2d\u7684\u5230\u6ee1\u8db3\uff0c\u6545\u8f93\u51fa$-1$\u3002\u6bcf\u4e00\u5c42\u4e2d\u6211\u4eec\u8fd0\u7528\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\uff0c\u77e5\u9053\u904d\u5386\u6bcf\u4e00\u5c42\u7684\u6240\u6709\u6d41\u661f\u96e8\uff0c\u4e00\u5171\u662f\u7ebf\u6027\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u6bcf\u4e00\u5c42\u6b63\u6b63\u597d\u597d\u644a\u5206\u6240\u6709$m$\u4e2a\u8be2\u95ee\uff0c\u5728\u6bcf\u4e00\u5c42\u4e2d\u6211\u4eec\u6bcf\u4e00\u4e2a\u8be2\u95ee\u548c\u6d41\u661f\u96e8\u90fd\u4f1a\u8fd0\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O((n+m)log_2{n}log_2{r-l+1})$\u3002\r\n\r\n\r\n```c++\r\n#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define N 300010\r\nstruct Per {int head,id;long long need;}per[N],per_[N<<1];\r\nint n,m,k,L[N],R[N];long long A[N];int ans[N],nxt[N],to[N],idx;long long tmp[N<<1];\r\nvoid add(int a,int b) {nxt[++idx]=per[a].head,to[idx]=b,per[a].head=idx;}\r\nvoid change(int x,long long y) {while(x<=2*m) tmp[x]+=y,x+=x&-x;}\r\nlong long find(int x) {long long sum=0;while(x) sum+=tmp[x],x-=x&-x;return sum;}\r\nvoid solve(int l,int r,int x,int y)\r\n{\r\n    if(l==r) {for(int i=x;i<=y;i++) ans[per[i].id]=l;return;}\r\n    int mid=(l+r)>>1,tl=0,tr=n;\r\n    for(int i=l;i<=mid;i++) change(L[i],A[i]),change(R[i]+1,-A[i]);\r\n    for(int i=x;i<=y;i++)\r\n    {\r\n        long long tmp1=0;\r\n        for(int j=per[i].head;j&&tmp1<=per[i].need;j=nxt[j])\r\n            tmp1+=find(to[j]+m)+find(to[j]);\r\n        if(tmp1>=per[i].need) per_[++tl]=per[i];\r\n        else per_[++tr]=per[i],per_[tr].need-=tmp1;\r\n    }\r\n    for(int i=l;i<=mid;i++) change(L[i],-A[i]),change(R[i]+1,A[i]);\r\n    for(int i=1;i<=tl;i++) per[x+i-1]=per_[i];\r\n    for(int i=n+1;i<=tr;i++) per[x+tl+i-n-1]=per_[i];\r\n    solve(l,mid,x,x+tl-1),solve(mid+1,r,y-tr+n+1,y);\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(int i=1,a;i<=m;i++) scanf(\"%d\",&a),add(a,i);\r\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&per[i].need),per[i].id=i;\r\n    scanf(\"%d\",&k);for(int i=1;i<=k;i++) scanf(\"%d%d%lld\",&L[i],&R[i],&A[i]);\r\n    for(int i=1;i<=k;i++) if(R[i]<L[i]) R[i]+=m; solve(1,k+1,1,n);\r\n    for(int i=1;i<=n;i++) (ans[i]==k+1)?printf(\"NIE\\n\"):printf(\"%d\\n\",ans[i]);\r\n}\r\n```",
        "postTime": 1550153665,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "### 0.\u5f15\u8ff0\n\n\u6765\u770b\u8fd9\u6837\u4e00\u9053\u9898\uff1a\n\n> \u591a\u6b21\u8be2\u95ee\uff0c\u67e5\u8be2\u9759\u6001\u533a\u95f4k\u5c0f\uff0c**\u53ef\u79bb\u7ebf**\u3002\n\n\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u60f3\u5230\u4e86\u4e3b\u5e2d\u6811\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u9898\u4e2d\u53ef\u4ee5\u79bb\u7ebf\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e86\u4e00\u79cd\u5e38\u6570\u5c0f\uff0cdebug\u65b9\u4fbf\uff0c\u7801\u91cf\u5c0f\u7684\u65b9\u6cd5:\n\n$\\Huge\\text{\u6574\u4f53\u4e8c\u5206}$\n\n---\n\n### 1.\u5f15\u8ff0\n\n\u6574\u4f53\u4e8c\u5206\uff0c\u662f\u6307\u5c06\u8be2\u95ee\uff0c\u4fee\u6539\u7b49\u64cd\u4f5c\u4e00\u8d77\u4e8c\u5206\uff0c\u57fa\u4e8e\u503c\u57df\u3002\n\n\u4f20\u5165\u7684\u65f6\u5019\u4f20\u56db\u4e2a\u53c2\u6570\uff1al,r,L,R\u3002\n\n\u8868\u793a\u503c\u57df\u5728l\u5230r\u5185\uff0c\u64cd\u4f5c\u5728L\u5230R\u5185\u7684\u64cd\u4f5c\u7b54\u6848\u3002\n\n\u5904\u7406\u7684\u65f6\u5019\u628a\u64cd\u4f5c\u5206\u6cbb\uff0c\u5206\u5230\u5de6\u53f3\u533a\u95f4\u91cc\u3002\n\n\u540c\u65f6\uff0c\u8981\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\uff0c\u5bf9\u5de6\u533a\u95f4\u64cd\u4f5c\u3002\n\n\u5f80\u4e0b\u5206\u6cbb\u65f6\uff0c\u8bb0\u4f4f\u8981\u64a4\u9500\u4e0a\u6b21\u64cd\u4f5c\u7684\u5f71\u54cd\uff0c\u5373\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u3002\n\n\u6574\u4f53\u4e8c\u5206\u8fd8\u662f\u5f88\u5957\u8def\u7684\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u6811\u72b6\u6570\u7ec4\u4e2d\u7ef4\u62a4\u7684\u5185\u5bb9\u3002\n\n```cpp\ninline void solve(int l,int r,int L,int R)\n{\n\tif(L>R) return;//\u9632\u8d8a\u754c\n\tif(l==r)\n\t{\n\t\tfor(int i=L;i<=R;i++) if(q[i].op==2) ans[q[i].id]=l;\n\t\t//\u5f53\u533a\u95f4\u7f29\u5c0f\u4e3a1\u65f6\uff0c\u8868\u793a[L,R]\u5185\u7684\u67e5\u8be2\u7b54\u6848\u90fd\u662f\u5f53\u524d\u7684\u6570\uff0c\u76f4\u63a5\u8d4b\u503c\u5c31\u597d\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,cnt1=0,cnt2=0;\n\tfor(int i=L;i<=R;i++)\n\t{\n\t\tif(q[i].op==1)\n\t\t{\n\t\t\t//\u4fee\u6539\u64cd\u4f5c\uff0c\u82e5\u5f53\u524d\u7684\u6570\u5c0f\u4e8e\u5de6\u8fb9\u754c\u7684\u6700\u5927\u503c\uff0c\u5219\u7edf\u8ba1\u5de6\u533a\u95f4\u4e2a\u6570\u65f6\u53ef\u4ee5\u7b97\u4e0a\n\t\t\tif(q[i].l<=mid) q1[++cnt1]=q[i],add(q[i].id,q[i].r);\n\t\t\telse q2[++cnt2]=q[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//\u67e5\u8be2\u64cd\u4f5c\uff0c\u5982\u679c\u67e5\u8be2\u7684k\u5927\u4e8e\u5de6\u533a\u95f4\u7684\u4e2a\u6570\uff0c\u5c31\u5206\u5230\u53f3\u8fb9\n\t\t\tint tmp=ask(q[i].r)-ask(q[i].l-1);//\u5de6\u533a\u95f4\u4e2a\u6570\n\t\t\tif(q[i].k<=tmp) q1[++cnt1]=q[i];\n\t\t\telse q[i].k-=tmp,q2[++cnt2]=q[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt1;i++) if(q1[i].op==1) add(q1[i].id,-q1[i].r);//\u64a4\u9500\u64cd\u4f5c\n\tfor(int i=1;i<=cnt1;i++) q[L+i-1]=q1[i];//\u5206\u6cbb\u4e0b\u53bb\u64cd\u4f5c\n\tfor(int i=1;i<=cnt2;i++) q[L+cnt1+i-1]=q2[i];\n\tsolve(l,mid,L,L+cnt1-1);\n\tsolve(mid+1,r,L+cnt1,R);\n}\n```\n\n---\n\n### 2.\u4f8b\u9898\n\n\u91cd\u8981\u7684\u8fd8\u662f\u4f8b\u9898~~\u3002\n\n- **[P1533 \u53ef\u601c\u7684\u72d7\u72d7](https://www.luogu.com.cn/problem/P1533)**\n\n\u6a21\u677f\u9898\uff0c\u6811\u72b6\u6570\u7ec4\u4e3a\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff0c\u67e5\u8be2\u53ef\u4ee5\u76f4\u63a5\u4eff\u7167\u4e3b\u5e2d\u6811\u7684\u505a\u6cd5\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst int N=2e5+9,INF=0x3f3f3f3f;\n#define lowbit(x) (x&-x)\nstruct Query\n{\n\tint l,r,k,id,op;\n} q[N*3],q1[N*3],q2[N*3];\nint n,m,a[N],cnt,cntq,ans[N],tr[N];\nchar op[2];\ninline void add(int x,int c){while(x<=n){tr[x]+=c,x+=lowbit(x);}}\ninline int ask(int x){int res=0;while(x){res+=tr[x],x-=lowbit(x);}return res;}\n\ninline void solve(int l,int r,int L,int R)\n{\n\tif(L>R) return;//\u9632\u8d8a\u754c\n\tif(l==r)\n\t{\n\t\tfor(int i=L;i<=R;i++) if(q[i].op==2) ans[q[i].id]=l;\n\t\t//\u5f53\u533a\u95f4\u7f29\u5c0f\u4e3a1\u65f6\uff0c\u8868\u793a[L,R]\u5185\u7684\u67e5\u8be2\u7b54\u6848\u90fd\u662f\u5f53\u524d\u7684\u6570\uff0c\u76f4\u63a5\u8d4b\u503c\u5c31\u597d\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,cnt1=0,cnt2=0;\n\tfor(int i=L;i<=R;i++)\n\t{\n\t\tif(q[i].op==1)\n\t\t{\n\t\t\t//\u4fee\u6539\u64cd\u4f5c\uff0c\u82e5\u5f53\u524d\u7684\u6570\u5c0f\u4e8e\u5de6\u8fb9\u754c\u7684\u6700\u5927\u503c\uff0c\u5219\u7edf\u8ba1\u5de6\u533a\u95f4\u4e2a\u6570\u65f6\u53ef\u4ee5\u7b97\u4e0a\n\t\t\tif(q[i].l<=mid) q1[++cnt1]=q[i],add(q[i].id,q[i].r);\n\t\t\telse q2[++cnt2]=q[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//\u67e5\u8be2\u64cd\u4f5c\uff0c\u5982\u679c\u67e5\u8be2\u7684k\u5927\u4e8e\u5de6\u533a\u95f4\u7684\u4e2a\u6570\uff0c\u5c31\u5206\u5230\u53f3\u8fb9\n\t\t\tint tmp=ask(q[i].r)-ask(q[i].l-1);//\u5de6\u533a\u95f4\u4e2a\u6570\n\t\t\tif(q[i].k<=tmp) q1[++cnt1]=q[i];\n\t\t\telse q[i].k-=tmp,q2[++cnt2]=q[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=cnt1;i++) if(q1[i].op==1) add(q1[i].id,-q1[i].r);//\u64a4\u9500\u64cd\u4f5c\n\tfor(int i=1;i<=cnt1;i++) q[L+i-1]=q1[i];//\u5206\u6cbb\u4e0b\u53bb\u64cd\u4f5c\n\tfor(int i=1;i<=cnt2;i++) q[L+cnt1+i-1]=q2[i];\n\tsolve(l,mid,L,L+cnt1-1);\n\tsolve(mid+1,r,L+cnt1,R);\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);//\u521d\u59cb\u5e8f\u5217\u89c6\u4e3a\u4fee\u6539\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),q[++cnt]=(Query){a[i],1,0,i,1};\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l,r,k;\n\t\tscanf(\"%s\",op);\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(op[0]=='Q')\n\t\t\tscanf(\"%d\",&k),q[++cnt]=(Query){l,r,k,++cntq,2};\n\t\telse q[++cnt]=(Query){a[l],-1,0,l,1},q[++cnt]=(Query){r,1,0,l,1},a[l]=r;\n\t}\n\tsolve(-INF,INF,1,cnt);\n\tfor(int i=1;i<=cntq;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n---\n\n- [P3527 [POI2011]MET-Meteors](https://www.luogu.com.cn/problem/P3527)\n\n\u8fd9\u9898\u5c31\u6bd4\u8f83\u7ecf\u5178\u4e86\u3002\n\n\u64cd\u4f5c\u4e3a\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u5230\u8fbe\u67d0\u4e2a\u503c\u7684\u65f6\u95f4\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u8981\u628a\u533a\u95f4\u52a0\u548c\u5355\u70b9\u67e5\u8fdb\u884c\u6574\u4f53\u4e8c\u5206\u3002\n\n\u5f00\u59cb\u65f6\uff0c\u5148\u628a[l,mid]\u7684\u533a\u95f4\u52a0\u8fdb\u884c\u5b9e\u73b0\u3002\n\n\u5728\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u5f53\u524d\u56fd\u5bb6\u7684\u5c01\u5730\u80fd\u91cf\u603b\u5408\u5df2\u7ecf\u5927\u4e8e\u671f\u671b\uff0c\u90a3\u4e48\u8bc1\u660e\u8fbe\u5230\u6ee1\u8db3\u5b83\u7684\u671f\u671b\u7684\u65f6\u95f4\u4e00\u5b9a\u5728[l,mid]\u7684\u533a\u95f4\u52a0\u5185\u3002\n\n\u53cd\u6b63\uff0c\u5219\u5728\u53f3\u533a\u95f4\u3002\n\n\u8bb0\u5f97\u8981\u4fdd\u5b58\u6bcf\u4e2a\u56fd\u5bb6\u7684\u5c01\u5730\u6709\u54ea\u4e9b\uff0c\u53ef\u4ee5\u7528vector\u6216\u8005\u90bb\u63a5\u8868\u3002\n\n\u8fd8\u6ce8\u610f\u7834\u73af\u6210\u94fe\uff0c\u67e5\u8be2\u65f6\u8bb0\u4f4f\u628av\u548cv+i\u7684\u7b54\u6848\u90fd\u7b97\u4e0a\u3002\n\n\u8bb0\u5f97\u64a4\u9500\u64cd\u4f5c\u3002\n\n**Warning\uff1a\u90bb\u63a5\u8868\u7684\u8868\u5934\u8981\u548c\u67e5\u8be2\u6253\u5305\u5230\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cc\uff0c\u5426\u5219\u5728\u64cd\u4f5c\u4e0b\u653e\u7684\u65f6\u5019\u65e0\u6cd5\u628a\u8868\u5934h\u4f20\u9012\u4e0b\u53bb\uff0c\u5373q[i]=q1[...]\u65f6\u8981\u4f20\u9012\u8868\u5934\u3002**\n\n\u4ee3\u7801\u6211\u5c31\u653e\u5728\u8fd9\u91cc????\uff1a\n\n[$\\huge\\text{Code}$](https://www.luogu.com.cn/paste/jhe625l5)\n\n",
        "postTime": 1596464362,
        "uid": 237308,
        "name": "AlanSP",
        "ccfLevel": 0,
        "title": "\u6574\u4f53\u4e8c\u5206 \u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "~~\u5728\u53d1\u73b0\u6b64\u9898\u524d\uff0c\u6211\u4ee5\u4e3a\u6574\u4f53\u4e8c\u5206\u53ea\u80fd\u6c42\u7b2cK\u5927\u6765\u7740\uff0c\u6211\u8fd8\u662f\u592a\u83dc\u4e86~~\n\n\u6211\u4eec\u5148\u4e0d\u8003\u8651\u591a\u7ec4\u8be2\u95ee\uff0c\u5047\u8bbe\u53ea\u6709\u4e00\u7ec4\u8be2\u95ee\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7b54\u6848\u5177\u6709\u660e\u663e\u7684\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e8c\u5206\u6765\u505a\n\n\u5bf9\u4e8e\u6211\u4eec\u4e8c\u5206\u7684\u503c$mid$\uff0c\u6211\u4eec\u5148\u5047\u8bbe$l-mid$\u7684\u96e8\u5168\u90e8\u4e0b\u4e0b\u6765\n\n\u5982\u679c\u5f53\u524d\u7684\u964d\u96e8\u91cf\u5927\u4e8e\u6211\u4eec\u6240\u9700\u8981\u7684\uff0c\u90a3\u4e48\u7b54\u6848\u5927\u4e86\uff0c\u5426\u5219\u7b54\u6848\u5c0f\u4e86\uff0c\u5c31\u628a\u6240\u9700\u8981\u7684\u964d\u96e8\u91cf\u53d8\u4e3a\uff1a\u539f\u672c\u6240\u9700\u8981\u7684\u964d\u96e8\u91cf$-(l-mid$\u7684\u964d\u96e8\u91cf$)$\n\n\u90a3\u4e48\u6709\u591a\u7ec4\u8be2\u95ee\u8981\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u6574\u4f53\u4e8c\u5206\uff0c\u6211\u4eec\u5b9a\u4e49\u51fd\u6570solve(l, r, L, R)\u4e3a\u6211\u4eec\u4e8c\u5206\u7684\u503c\u4e3a$[l, r]$\uff08\u4e5f\u5c31\u662f\u5355\u7ec4\u8be2\u95ee\u7684$l, r$\uff09\uff0c\u76ee\u524d\u7684\u64cd\u4f5c\u533a\u95f4\u4e3a$[L,R]$\uff08\u5982\u679c\u662f\u5355\u7ec4\u8be2\u95ee\u7684\u8bdd\u5c31\u662f$[L==R]$\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u5c06$[L, R]$\u533a\u95f4\u5185\u6240\u6709\u7684\u64cd\u4f5c\u8fdb\u884c\u5206\u7c7b\uff1a\u5206\u6210\u7b54\u6848\u5927\u7684\u548c\u7b54\u6848\u5c0f\u7684\uff08\u89c1\u5355\u7ec4\u4e8c\u5206\u7684\u5206\u7c7b\uff09\uff0c\u5c06\u7b54\u6848\u5c0f\u7684\u653e\u5728\u524d\u9762\uff08\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6392\u5e8f\uff09\uff0c\u5c06\u7b54\u6848\u5927\u7684\u653e\u5728\u540e\u9762\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u4e8c\u5206\u9012\u5f52\u4e86\n\n\u6211\u4eec\u5047\u8bbe\u5728$[L, R]$\u5185\u6709$cnt1$\u4e2a\u64cd\u4f5c\u6bd4\u7b54\u6848\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u9012\u5f52\u5e94\u8be5\u662f\uff1a\n\n\tsolve(l, mid, L, L + cnt1 - 1), solve(mid + 1, r, L + cnt1, R);\n\n\u6700\u540e\uff0c\u6211\u4eec\u6700\u5f00\u59cb\u7684\u5047\u8bbe$[l, mid]$\u7684\u96e8\u5168\u90e8\u4e0b\u4e0b\u6765\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u5728\u6bcf\u6b21\u9012\u5f52\u8fdb\u5165\u4e0b\u4e00\u6b21\u7684\u65f6\u5019\uff0c\u6811\u72b6\u6570\u7ec4\u9700\u8981\u6e05\u7a7a\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9700\u8981$memset$\uff0c\u53ea\u9700\u8981\u628a\u8fd9\u4e00\u5c42\u9012\u5f52\u4fee\u6539\u7684\u503c\u6539\u56de\u6765\u5c31\u884c\u4e86\n### $Code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define int long long\n#define inf 1000000000 \nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define lb(x) (x)&(-(x))\n#define maxn 300005\nint n, m, ans[maxn], tr[maxn * 2], T;\nstruct ques {\n\tint l, r, a, id;\n}e[maxn];\nstruct node {\n\tint ned, id;\n}p[maxn], p1[maxn], p2[maxn];\nvector<int> q[maxn];\nil void add(int x, int v) {\n\tfor(re int i = x; i <= 2 * m; i += lb(i)) tr[i] += v;\n}\nil int query(int x) {\n\tint ans = 0;\n\tfor(re int i = x; i; i -= lb(i)) ans += tr[i];\n\treturn ans;\n}\nil int Query(int x) {\n\tint ans = 0;\n\tfor(re int i = 0; i < q[p[x].id].size(); ++ i) {\n\t\tans += query(q[p[x].id][i]) + query(q[p[x].id][i] + m);\n\t\tif(ans >= p[x].ned) return ans;\n\t}\n\treturn ans;\n}\nil void solve(int l, int r, int L, int R) {\n\tif(L > R) return;\n\tif(l == r) {\n    \t//\u5982\u679c\u4e8c\u5206\u5230\u4e86\u7ec8\u70b9\uff0c\u663e\u7136\u5f53\u524d\u64cd\u4f5c\u533a\u95f4\u7684\u7b54\u6848\u90fd\u7b49\u4e8e\u4e8c\u5206\u7684\u7b54\u6848\n\t\trep(i, L, R) ans[p[i].id] = l;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1, cnt1 = 0, cnt2 = 0;\n    //\u5dee\u5206\uff0c\u5047\u8bbe[l, mid]\u7684\u96e8\u5168\u90e8\u4e0b\u4e0b\u6765\n\trep(i, l, mid) add(e[i].l, e[i].a), add(e[i].r + 1, -e[i].a);\n    //\u5224\u65ad\u54ea\u4e9b\u7b54\u6848\u5927\u4e86\uff0c\u90a3\u4e9b\u5c0f\u4e86\n\trep(i, L, R) {\n\t\tint temp = Query(i);\n\t\tif(temp >= p[i].ned) p1[++ cnt1] = p[i];\n\t\telse p[i].ned -= temp, p2[++ cnt2] = p[i];\n\t}\n    //\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\n\trep(i, l, mid) add(e[i].l, -e[i].a), add(e[i].r + 1, e[i].a);\n    //\u5f52\u5e76\u6392\u5e8f\n\trep(i, L, L + cnt1 - 1) p[i] = p1[i - L + 1];\n\trep(i, L + cnt1, R) p[i] = p2[i - L - cnt1 + 1];\n    //\u7ee7\u7eed\u4e8c\u5206\n\tsolve(l, mid, L, L + cnt1 - 1), solve(mid + 1, r, L + cnt1, R);\n}\nsigned main() {\n\tn = read(), m = read();\n\trep(i, 1, m) q[read()].push_back(i);\n\trep(i, 1, n) p[i].ned = read(), p[i].id = i;\n\tT = read();\n\trep(i, 1, T) {\n\t\te[i].l = read(), e[i].r = read(), e[i].a = read(), e[i].id = i;\n\t\tif(e[i].r < e[i].l) e[i].r += m;\n\t}\n\t++ T, e[T].id = T, e[T].l = 1, e[T].r = 2 * m, e[T].a = inf;\n\tsolve(1, T, 1, n);\n\trep(i, 1, n) ans[i] == T ? puts(\"NIE\") : printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1567306962,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "[P3527 [POI2011] MET-Meteors](https://www.luogu.com.cn/problem/P3527)\r\n\r\n\u7ed9\u51fa\u4e00\u79cd\u4e0d\u540c\u4e8e jiangly \u7684\u66f4\u5bb9\u6613\u7406\u89e3\u4e14\u66f4\u597d\u5199\u7684\u5355 $\\log$ \u505a\u6cd5\u3002\r\n\r\n\u8bbe $n, m, k$ \u540c\u9636\uff0c\u5f88\u663e\u7136\u6211\u4eec\u6709\u4e3b\u5e2d\u6811 + \u76f4\u63a5\u4e8c\u5206\u7684\u505a\u6cd5\uff0c\u4f46\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f18\u79c0\u3002\r\n\r\n\u8003\u8651\u6574\u4f53\u4e8c\u5206\uff0c\u5219 $\\mathrm{solve}$ \u76f8\u5f53\u4e8e\u8fdb\u884c\u6240\u6709\u533a\u95f4\u52a0\u4e4b\u540e\u5355\u70b9\u67e5\u8be2\uff0c\u901a\u8fc7\u5dee\u5206\u505a\u5230\u7ebf\u6027\u3002\u95ee\u9898\u5728\u4e8e\u5411\u4e0b\u9012\u5f52\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4e0b\u4f20\u539f\u6709\u5750\u6807\uff0c\u5426\u5219\u6bcf\u4e2a\u533a\u95f4\u5904\u7406\u7684\u590d\u6742\u5ea6\u5747\u4e3a $\\mathcal{O}(n)$\u3002\r\n\r\n\u89e3\u51b3\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u5728\u5904\u7406\u6bcf\u4e2a $\\mathrm {solve}$ \u524d\uff0c\u5c06\u6240\u6709\u76f8\u5173\u4e0b\u6807\u79bb\u6563\u5316\u3002\u8fd9\u91cc\u79bb\u6563\u5316\u53ef\u4ee5\u76f4\u63a5\u7528\u6876\u7ef4\u62a4\u800c\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u56e0\u4e3a\u590d\u6742\u5ea6\u548c\u5b83\u7236\u533a\u95f4\u79bb\u6563\u5316\u540e\u7684\u503c\u57df\u76f8\u5173\uff0c\u52a0\u8d77\u6765\u8fd8\u662f $\\mathcal{O}(n\\log n)$ \u7684\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u56e0\u4e3a\u5e38\u6570\u5c0f\u6240\u4ee5\u8dd1\u5f97\u4e5f\u5f88\u5feb\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\r\n\r\nconstexpr int N = 3e5 + 5;\r\nint n, m, k, cnt, p[N], ans[N];\r\nint id[N], _id[N];\r\nlong long d[N], res[N];\r\nvector<int> buc[N];\r\nstruct shower {\r\n  int id, l, r, a;\r\n} c[N << 1];\r\nvoid solve(int l, int r, int cl, int cr, int range) {\r\n  if(cl > cr) return;\r\n  if(l == r) {\r\n    for(int i = cl; i <= cr; i++) ans[id[i]] = l;\r\n    return;\r\n  }\r\n\r\n  // relabel\r\n  for(int i = 1; i <= range; i++) d[i] = 0;\r\n  for(int i = cl; i <= cr; i++) for(int it : buc[id[i]]) d[it] = 1;\r\n  for(int i = 1; i <= range; i++) d[i] += d[i - 1];\r\n  for(int i = cl; i <= cr; i++) for(int &it : buc[id[i]]) it = d[it];\r\n  for(int i = l; i <= r; i++) c[i].l = d[c[i].l - 1] + 1, c[i].r = d[c[i].r];\r\n  range = d[range];\r\n  \r\n  // binary search\r\n  int m = l + r >> 1, cm = cl - 1, cd;\r\n  for(int i = 1; i <= range; i++) d[i] = 0;\r\n  for(int i = l; i <= m; i++) d[c[i].l] += c[i].a, d[c[i].r + 1] -= c[i].a;\r\n  for(int i = 2; i <= range; i++) d[i] += d[i - 1];\r\n  for(int i = cl; i <= cr; i++) {\r\n    res[i] = 0;\r\n    for(int it : buc[id[i]]) res[i] = min(0x3f3f3f3fll, res[i] + d[it]);\r\n    if(res[i] >= p[id[i]]) _id[++cm] = id[i];\r\n  }\r\n  cd = cm;\r\n  for(int i = cl; i <= cr; i++)\r\n    if(res[i] < p[id[i]])\r\n      p[id[i]] -= res[i], _id[++cm] = id[i];\r\n  for(int i = cl; i <= cr; i++) id[i] = _id[i];\r\n\r\n  solve(l, m, cl, cd, range);\r\n  solve(m + 1, r, cd + 1, cr, range);\r\n}\r\nint main() {\r\n  #ifdef ALEX_WEI\r\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\r\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\r\n  #endif\r\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n  cin >> n >> m;\r\n  for(int i = 1, o; i <= m; i++) cin >> o, buc[o].push_back(i);\r\n  for(int i = 1; i <= n; i++) cin >> p[i];\r\n  cin >> k;\r\n  for(int i = 1; i <= k; i++) {\r\n    int l, r, a;\r\n    cin >> l >> r >> a;\r\n    if(l <= r) c[++cnt] = {i, l, r, a};\r\n    else c[++cnt] = {i, l, m, a}, c[++cnt] = {i, 1, r, a};\r\n  }\r\n  for(int i = 1; i <= n; i++) id[i] = i;\r\n  solve(1, cnt + 1, 1, n, m);\r\n  for(int i = 1; i <= n; i++)\r\n    if(ans[i] > cnt) cout << \"NIE\\n\";\r\n    else cout << c[ans[i]].id << \"\\n\";\r\n  return cerr << \"Time: \" << TIME << \" ms\\n\", 0;\r\n}\r\n```",
        "postTime": 1668730604,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P3527 [POI2011] MET-Meteors"
    },
    {
        "content": "\u8fd9\u9898\u601d\u8def\u662f\u6574\u4f53\u4e8c\u5206\uff0c\u5c31\u662f\u628a\u6240\u6709\u67e5\u8be2\u4e22\u5230\u961f\u5217\u91cc\u540e\u4e8c\u5206\uff0c\n\n$mid=(L+R)/2$,\u628amid\u524d\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\u7684\u56fd\u5bb6 \u4e22\u5230\u5de6\u8fb9\u7684\u961f\u5217\uff0c\u4e0d\u80fd\u7684\u4e22\u5230\u53f3\u8fb9\uff0c\u5982\u679c\u8fbe\u5230\u8fb9\u754c $(L==R) $\uff0c\u5c31\u628a\u961f\u5217\u91cc\u7684\u8be2\u95ee\u7b54\u6848\u8d4b\u503c\u4e3a$L$,\u6bcf\u6b21\u7528\u6811\u72b6\u6570\u7ec4\u4fee\u6539\u548c\u6c42\u524d\u7f00\u548c\u5c31\u884c\uff1b\n\n\u53e6\u5916\uff0c\u6211\u5728\u53e6\u5916\u4e00\u4e2aoj\u4ea4\u4e86\u4e0b\u697c\u4e0b\u51e0\u4f4d\u7684\u9898\u89e3\uff0c\u53d1\u73b0wa\u4e86\u51e0\u4e2a\u70b9\uff0c\n\n\u56e0\u4e3a\u6570\u636e\u662f\u53ef\u80fd\u7206long long\u7684\uff0c\u60f3\u4e00\u4e0b\uff0c$m$\u4e2a\u8282\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u56fd\u5bb6\uff0c\u6bcf\u6b21\u90fd\u628a$1-m$\u7684\u8282\u70b9\u52a0$1e9$;\u6240\u4ee5\u5224\u65ad\u7684\u65f6\u5019\uff0c\u5982\u679c\u6536\u96c6\u6570\u5927\u4e8e\u76ee\u6807\uff0c\u5c31\u7ec8\u6b62\uff1b\u5177\u4f53\u770b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#define ll long long\nusing namespace std;\nconst int N=1000055;\nint m,n,k,ans[N],cnt,mb[N];\nll sum[N];//\u6811\u72b6\u6570\u7ec4\nvector<int> G[N];// \u5b58\u6bcf\u4e2a\u56fd\u5bb6\u7684\u8282\u70b9\ninline int read()\n{\n    int k=0,f=1;char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar()) k=k*10+c-'0';return f*k; \n}\nstruct que\n{\n    int l,r,opt,id;\n    ll k;\n}q[N],q1[N],q2[N];// opt=1 \u662f\u6bcf\u4e2a\u56fd\u5bb6\u7684\u4efb\u52a1\n// opt=2 \u662fl<=r\u7684\u9668\u77f3\u96e8 opt=3 \u662fl>r\u7684\u9668\u77f3\u96e8\nvoid add(int x,ll v)\n{\n    for(;x<=m;x+=x&-x) sum[x]+=v;\n}\nll query(int x)\n{\n    ll anss=0;for(;x;x-=x&-x) anss+=sum[x];return anss;\n}\nvoid ef(int s,int t,int l,int r)\n{\n    if(s>t) return;\n    if(l==r) \n    {\n        for(int i=s;i<=t;i++) if(q[i].opt==1) ans[q[i].id]=l;return;// \u8fbe\u5230\u8fb9\u754c\uff0c\u8ddf\u65b0\u7b54\u6848\n    }\n    int mid=l+r>>1,s1=0,s2=0;\n    for(int i=s;i<=t;i++)\n    {\n        if(q[i].opt==1)\n        {\n            ll tmp=0;\n            for(int j=0;j<G[q[i].id].size();j++)\n            {\n                tmp+=query(G[q[i].id][j]);\n                if(tmp>q[i].k) break;// \u7edf\u8ba1\uff0c\u5982\u679c\u8d85\u8fc7\u76ee\u6807\u5c31\u7ec8\u6b62\uff0c\u9632\u6b62\u7206long long\n            }\n            if(tmp>=q[i].k) q1[++s1]=q[i];//\u4e22\u5de6\u8fb9\n            else q[i].k-=tmp,q2[++s2]=q[i];//\u51cf\u53bbl-mid\u7684\u6570\u91cf\uff0c\u4e22\u53f3\u8fb9\n        }\n        else \n        {// \u533a\u95f4\u4fee\u6539\n            if(q[i].id<=mid)\n            {\n                if(q[i].opt==2)\n                {\n                    add(q[i].l,q[i].k);add(q[i].r+1,-q[i].k);\n                }\n                else \n                {\n                    add(1,q[i].k);add(q[i].r+1,-q[i].k);add(q[i].l,q[i].k); \n                }\n                q1[++s1]=q[i];\n            }\n            else q2[++s2]=q[i];\n        }\n    }\n    for(int i=s;i<=t;i++)// \u6e05\u7a7a\u6811\u72b6\u6570\u7ec4 if(q[i].id<=mid&&q[i].opt!=1)\n    {\n        if(q[i].opt==2)\n        {\n            add(q[i].l,-q[i].k);add(q[i].r+1,q[i].k);\n        }\n        else \n        {\n            add(1,-q[i].k);add(q[i].r+1,q[i].k);add(q[i].l,-q[i].k); \n        }\n    }\n    int f=0,fl=0;\n    for(int i=1;i<=s1;i++) \n    {\n        q[s+i-1]=q1[i],f=1;\n    }\n    for(int i=1;i<=s2;i++) \n    {\n        q[s+s1+i-1]=q2[i],fl=1;\n    }\n    if(f) ef(s,s+s1-1,l,mid);if(fl) ef(s+s1,t,mid+1,r);\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++) G[read()].push_back(i);\n    for(int i=1;i<=n;i++) mb[i]=read();\n    k=read();\n    for(int i=1;i<=k;i++)\n    {\n        q[i].l=read();q[i].r=read();q[i].k=read();\n        if(q[i].r>=q[i].l) q[i].opt=2;else q[i].opt=3;\n        q[i].id=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        q[i+k].k=mb[i];q[i+k].opt=1;\n        q[i+k].id=i;\n    }\n    ef(1,k+n,1,k+1);\n    for(int i=1;i<=n;i++)\n    if(ans[i]!=k+1) printf(\"%d\\n\",ans[i]);\n    else puts(\"NIE\");\n    return 0;\n}\n```",
        "postTime": 1515246942,
        "uid": 36103,
        "name": "wxgwxg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u5c0f\u849f\u84bbJf\u5199\u6c34\u9898\u5212\u6c34\u906d\u5230\u6bd2\u7624\u6012\u65a5QAQAQ \u518d\u4e5f\u4e0d\u6562\u4e86.jpg\n~~\u9898\u89e3\u8fd8\u662f\u8981\u6c34\u4e00\u53d1\u7684~~\n\n## \u9898\u662f\u6574\u4f53\u4e8c\u5206\u9898\uff0c \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u5206\u5757\u505a\u6cd5qwq\n\n**\u601d\u8def\u5982\u4e0b\uff1a**\n\u5bf9\u64cd\u4f5c\uff08\u533a\u95f4\u52a0\uff09\u8fdb\u884c\u5206\u5757\uff0c \u8bbe\u6bcfT\u4e2a\u64cd\u4f5c\u4e3a\u4e00\u7ec4\uff0c \u6bcf\u6b21\u52a0\u5165\u4e00\u7ec4\u7684\u64cd\u4f5c\uff0c \u5728\u5e8f\u5217\u4e0a\u5dee\u5206\u4e00\u4e0b\u6c42\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u5f53\u524d\u7684\u7b54\u6848\u3002  \u7136\u540e\u626b\u4e00\u4e0b\u6240\u6709\u7684\u56fd\u5bb6\uff08\u56fd\u5bb6\u7528vector\u4fdd\u5b58\u8fd9\u4e2a\u56fd\u5bb6\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e), \u5982\u679c\u8fd9\u4e2a\u56fd\u5bb6\u7684\u7b54\u6848\u5df2\u7ecf\u88ab\u6c42\u51fa\u6765\u4e86\uff0c \u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e2a\u56fd\u5bb6\uff1b \u5426\u5219\u5c31\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u56fd\u5bb6\u6240\u6709\u4f4d\u7f6e\u7684\u7b54\u6848\u4e4b\u548c\u662f\u5426\u5927\u4e8e\u9700\u6c42\uff0c \u5982\u679c\u5927\u4e8e\u5219\u8bf4\u660e\u4f7f\u5176\u8fbe\u6210\u9700\u6c42\u7684\u64cd\u4f5c\u4e00\u5b9a\u5728\u8fd9\u4e00\u7ec4\u91cc\u9762\uff08\u4e0d\u8d85\u8fc7T\u4e2a\uff09\uff0c \u8fd9\u65f6\u5019\u5012\u7740\u626b\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u53ea\u4f1a\u88ab\u5012\u7740\u626b\u4e00\u6b21\uff0c \u6ca1\u6b21\u4e0d\u4f1a\u626b\u8d85\u8fc7T\u4e2a\u64cd\u4f5c\uff0c \u4e14\u4e00\u5171\u8981\u505an/T\u6b21\u5dee\u5206\u3002 \u6240\u4ee5\u5f53T\u53d6sqrt(n)\u65f6\uff0c \u603b\u590d\u6742\u5ea6\u4e3am sqrt(n) + n sqrt(m)\u3002\n\n\u7136\u540e\u5c31\u6ca1\u4ec0\u4e48\u5566qwq\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u53ef\u4ee5\u79c1\u4fe1\u5c0f\u849f\u84bbJf\u3002 \n\n**\u90a3\u4e48\u4ee3\u7801\u5982\u4e0b**\uff1a\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <iostream>\n#include <vector>\n#define maxn 300010\n#define re register\n#define FOR(i, l, r) for(re int i = l; i <= r; ++i)\n#define DFR(i, l, r) for(re int i = l; i >= r; --i)\nusing namespace std;\n\nint n, m, c, r, t, x, y, z, k;\nint sq;\nint a[maxn], ned[maxn], bl[maxn], siz[maxn], of[maxn], anss[maxn];\nlong long qwq[maxn], cha[maxn], res[maxn]; \nvector<int> ve[maxn];\nstruct hz {\n\tint l, r, k;\n}q[maxn]; \n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tFOR(i, 1, m) {\n\t\tscanf(\"%d\", &t);\n\t\tve[t].push_back(i),\n\t\t++siz[t],\n\t\tof[i] = t; \n\t}\n\tFOR(i, 1, n)\n\t  scanf(\"%d\", &ned[i]);\n\tscanf(\"%d\", &k);\n\t\n\tsq = sqrt(k)*2.5; //\u53ef\u8c03\u53c2 \n\tFOR(i, 1, (k-1)/sq+1) {\n\t\tint l = (i-1)*sq+1, r = min(k, i*sq);\n\t\tFOR(j, l, r) {\n\t\t\tscanf(\"%d%d%d\", &q[j].l, &q[j].r, &q[j].k);\n\t\t\tif(q[j].l > q[j].r)\n\t\t\t  qwq[q[j].l] += q[j].k, qwq[m+1] -= q[j].k, qwq[1] += q[j].k, qwq[q[j].r+1] -= q[j].k; \n\t\t\telse \n\t\t\t  qwq[q[j].l] += q[j].k, qwq[q[j].r+1] -= q[j].k;\n\t\t}\n\t\tFOR(j, 1, m) {\n\t\t\tcha[j] = qwq[j];\n\t\t\tcha[j] += cha[j-1];\n\t\t\tres[of[j]] += cha[j];  \n\t\t}\n\t\t\n\t\tFOR(u, 1, n) {\n\t\t\tlong long pt = res[u];\n\t\t\tif(anss[u] || pt < ned[u])\n\t\t\t  continue;\n\t\t\tDFR(j, r, l) {\n\t\t\t\tFOR(xx, 0, siz[u]-1)\n\t\t\t\t  if(q[j].l <= q[j].r) {\n\t\t\t\t  \t  if(q[j].l <= ve[u][xx] && ve[u][xx] <= q[j].r)\n\t\t\t\t        pt -= q[j].k;\n\t\t\t\t  }\n\t\t\t\t  else \n\t\t\t\t    if(q[j].l <= ve[u][xx] || ve[u][xx] <= q[j].r)\n\t\t\t\t\t  pt -= q[j].k; \n\t\t\t\t    \n\t\t\t\tif(pt < ned[u]) {\n\t\t\t\t\tanss[u] = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t\tmemset(res, 0, sizeof(res));\n\t}\n\tFOR(i, 1, n) \n\t  if(anss[i] == 0)\n\t    puts(\"NIE\");\n\t  else \n\t    printf(\"%d\\n\", anss[i]);\n} \n```",
        "postTime": 1566741287,
        "uid": 66965,
        "name": "Juan_feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u6574\u4f53\u4e8c\u5206\u4ec0\u4e48\u7684\u795e\uff08qi\uff09\u4ed9\uff08ji\uff09\u64cd\uff08yin\uff09\u4f5c\uff08qiao\uff09\u6211\u53cd\u6b63\u662f\u5b66\u4e0d\u4f1a\u7684\u3002\n\n\u5206\u5757\u6211\u6765\u5199\u80af\u5b9a\u4e5f\u4f1a\u88ab\u5361\u5230\u81ea\u95ed\u3002\n\n\u6240\u4ee5\u5c31\u7528\u4e3b\u5e2d\u6811\u6c34\u8fc7\u5566\u3002\n\n------------\n\u9996\u5148\uff0c\u843d\u4e00\u4e2a\u9668\u77f3\u770b\u4e00\u904d\u663e\u7136\u662f\u4f1aT\u98de\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e8c\u5206\u3002\n\n\u4e00\u4e2a\u4e2a\u4e8c\u5206\u7684\u8bdd\u5c31\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5feb\u901f\u67e5\u8be2\u6bcf\u573a\u9668\u77f3\u843d\u4e0b\u4e4b\u540e\u6bcf\u6bb5\u5df2\u83b7\u5f97\u6837\u672c\u4e2a\u6570\u3002\n\n\u5148\u4e0d\u8c08\u53ef\u6301\u4e45\u5316\uff0c\u5219\u8fd9\u662f\u4e00\u4e2a\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u3002\u5dee\u5206\u4e00\u4e0b\uff0c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5355\u70b9\u52a0\u524d\u7f00\u548c\u67e5\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u6811\u72b6\u6570\u7ec4\u663e\u7136\u662f\u4e0d\u597d\u6301\u4e45\u5316\u7684\uff08~~\u5176\u5b9e\u662f\u6211\u81ea\u5df1\u4e0d\u4f1a~~\uff09\uff0c\u6240\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5373\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u6bcf\u6bb5\u81f3\u591a\u88ab\u67e5$\\log k$\u6b21\uff0c\u6bcf\u6b21\u662f$O(\\log m)$\u65f6\u95f4\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(m\\log m\\log k)$\u3002\n\ncode\uff1a\n```cpp\n#include<vector>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ninline int readint(){\n\tint x=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nconst int M=3e5+5;\nstruct node{\n\tint l,r;\n\tlong long sumv;\n\tnode* ch[2];\n\tnode(int l,int r):l(l),r(r),sumv(0){\n\t\tif(l==r) ch[0]=ch[1]=0;\n\t\telse{\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tch[0]=new node(l,mid);\n\t\t\tch[1]=new node(mid+1,r);\n\t\t}\n\t}\n\tnode(node* nd){*this=*nd;}\n\tvoid update(int x,int k,node* nd){\n\t\tif(ch[0]&&x<=ch[0]->r){\n\t\t\tif(ch[0]==nd->ch[0]) ch[0]=new node(nd->ch[0]);\n\t\t\tch[0]->update(x,k,nd->ch[0]);\n\t\t}\n\t\telse if(ch[1]){\n\t\t\tif(ch[1]==nd->ch[1]) ch[1]=new node(nd->ch[1]);\n\t\t\tch[1]->update(x,k,nd->ch[1]);\n\t\t}\n\t\tsumv+=k;\n\t}\n\tlong long query(int l,int r){\n\t\tif(l==this->l&&r==this->r) return sumv;\n\t\telse{\n\t\t\tif(r<=ch[0]->r) return ch[0]->query(l,r);\n\t\t\telse if(l>=ch[1]->l) return ch[1]->query(l,r);\n\t\t\telse return ch[0]->query(l,ch[0]->r)+ch[1]->query(ch[1]->l,r);\n\t\t}\n\t}\n};\nint n,m,k;\nvector<int> o[M];\nint p[M];\nvector<node*> rt;\nint main(){\n\t#ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    m=readint();\n    for(int i=1;i<=m;i++) o[readint()].push_back(i);\n    for(int i=1;i<=n;i++) p[i]=readint();\n    k=readint();\n    rt.push_back(new node(1,m));\n    for(int i=1;i<=k;i++){\n    \tint l,r,a;\n    \tl=readint();\n    \tr=readint();\n    \ta=readint();\n    \trt.push_back(new node(rt[i-1]));\n    \tif(l<=r){\n    \t\trt[i]->update(l,a,rt[i-1]);\n    \t\tif(r<m) rt[i]->update(r+1,-a,rt[i-1]);\n\t\t}\n\t\telse{\n\t\t\trt[i]->update(l,a,rt[i-1]);\n\t\t\trt[i]->update(1,a,rt[i-1]);\n\t\t\tif(r<m) rt[i]->update(r+1,-a,rt[i-1]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint l=1,r=k+1;\n\t\twhile(l<r){\n\t\t\tint mid=l+(r-l)/2;\n\t\t\tlong long ans=0;\n\t\t\tbool ok=0;\n\t\t\tfor(int j=0;j<o[i].size();j++){\n\t\t\t\tans+=rt[mid]->query(1,o[i][j]);\n\t\t\t\tif(ans>=p[i]){ok=1;break;}\n\t\t\t}\n\t\t\tif(ok) r=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tif(r<=k) printf(\"%d\\n\",r);\n\t\telse printf(\"NIE\\n\");\n\t}\n    return 0;\n}\n```\n\n\n------------\n\u5565\uff1f\u4f60\u5c31\u76f4\u63a5ctrl+c\u4e86\uff1f\n\n\u7136\u540e\u53d1\u73b0M\u4e86\u516b\u4e2a\u70b9\u53ea\u670927\u5206\uff1f\n\n\u54b3\u54b3\u54b3\uff0c~~\u6211\u8bf4\u4e86\u8fd9\u4ee3\u7801\u53ef\u4ee5AC\u5417\uff1f~~\n\n\u4f60\u7b97\u4e00\u4e0b\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u4f1a\u53d1\u73b0\u662f$O(k\\log m)$\uff08\u5927\u6982\u5427\uff09\u3002\u518d\u770b\u4e00\u4e0b\u6bd2\u7624\u7684\u7a7a\u95f4\u9650\u523662.50MB\uff0c\u4e0dM\u624d\u602a\u597d\u5427\u3002\n\n~~\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u628a\u6570\u7ec4\u6539\u6210\u4e86`vector`\uff0c\u60f3\u7740\u5e94\u8be5\u6ca1\u7528\uff0c\u7ed3\u679c\u679c\u7136\u6ca1\u7528\u3002~~\n\n\u6240\u4ee5\u8bf4\uff0c\u8001\u8001\u5b9e\u5b9e\u7528\u6574\u4f53\u4e8c\u5206\u53bb\u5427\u3002\n\n\u5565\uff1f\u4f60\u8ddf\u6211\u4e00\u6837\u4e0d\u4f1a\u6574\u4f53\u4e8c\u5206\uff1f\n\n\u90a3\u4f60\u53ef\u4ee5\u8bd5\u8bd5[\u8fd9\u9053\u9898](https://www.luogu.org/problem/SP10264)\u3002\n\n\u53cc\u500d\u7ecf\u9a8c\u4ec0\u4e48\u4e0d\u5b58\u5728\u7684\uff0c\u9664\u975e\u4f60\u7528\u6574\u4f53\u4e8c\u5206\u3002\n\n~~\u4e0d\u8fc7\u90a3\u9898\u662f\u9ed1\u9898\uff0c\u7ecf\u9a8c\u591a\u591a\u4e86\u3002~~",
        "postTime": 1566706409,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9996\u5148\u4e00\u770b\u9898\uff1a\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u6ce2\u5c31\u53ef\u4ee5\u6536\u96c6\u5230\u4f4d\u3002\u90a3\u8fd9\u80af\u5b9a\u662f**\u4e8c\u5206**\u6ca1\u5f97\u8dd1\u4e86\u2014\u2014\u7b54\u6848$t$\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5728$t$\u5929\u524d\u90fd\u6536\u96c6\u4e0d\u5230\u4f4d\uff0c\u5728$t$\u5929\u540e\u90fd\u53ef\u4ee5\u6536\u96c6\u5230\u6570\u3002\u6240\u4ee5\u80af\u5b9a\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u4e86\u3002\n\n\u8981\u662f\u8fd9\u4e2a\u9898\u53ea\u6c42\u67d0\u4e00\u4e2a\u56fd\u5bb6\u7684\u5929\u6570\uff0c\u8fd9\u9898\u4f30\u8ba1\u5c31\u6389\u5230\u9ec4\u9898\u53bb\u4e86\u2014\u2014\u76f4\u63a5\u5173\u5fc3\u8fd9\u4e00\u4e2a\u56fd\u5bb6\u7684\u9668\u77f3\u6570\u3002\u679a\u4e3e\u6ce2\u6570$mid$\uff0c\u7136\u540e\u7528$O(n)$\u7684\u65f6\u95f4\u53bb\u6a21\u62df\u524d$mid$\u573a\u9668\u77f3\uff0c\u770b\u5230\u6ca1\u5230\u6570\u5c31\u884c\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(klogk)$\n\n\u53ef\u95ee\u9898\u662f\u8fd9\u6bcf\u4e00\u4e2a\u56fd\u5bb6\u90fd\u8981\u770b\u554a\uff01\u5982\u679c\u662f\u628a\u521a\u521a\u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d$n$\u6b21\uff0c\u90a3\u7b49\u7684\u9ec4\u82b1\u83dc\u90fd\u51c9\u4e86\u2014\u2014$O(nklogk)$\uff0c\u5341\u4e07\u7ea7\u522b\u7684$n^2$\u90fd\u4e0d\u884c\u4e86\u8fd9\u8fd8\u6709\u4e2a\u5bf9\u6570\u3002\u56e0\u6b64\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u90a3\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u5176\u5b9e\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\u513f\uff1a\u5982\u679c\u7528\u521a\u521a\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u5176\u5b9e\u505a\u4e86\u5f88\u591a\u91cd\u590d\u7684\u4e8b\u60c5\u3002\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u6781\u7aef\u60c5\u51b5\uff1a\u4e24\u4e2a\u56fd\u5bb6$i,j$\u6700\u7ec8\u5929\u6570\uff08\u7b54\u6848\uff09\u76f8\u540c\u3002\u6211\u4eec\u4f1a\u505a\u4ec0\u4e48\u4e8b\u60c5\u5462\uff1f\n\n\u5bf9$i$\u56fd\u7684\u8ba8\u8bba\uff1a\u9996\u5148\u662f\u7b2c\u4e00\u6b21\u5927\u7684\u4e8c\u5206$\\displaystyle \\frac{k+1}{2}$\uff0c\u4e3a\u6b64\u524d\u9762\u8fd9\u4e48\u591a\u6ce2\u9668\u77f3\u5168\u90e8\u7838\u4e0b\u6765\u7b97\u4e00\u904d\uff0c\u7136\u540e\u6311\u51fa\u7b2c$i$\u56fd\u8981\u7684\u4e00\u4e9b\u8282\u70b9\uff0c\u7b97\u51fa\u6765\u4e00\u4e2a\u603b\u9668\u77f3\u6570$tot$\uff0c\u7ee7\u7eed\u4e8c\u5206\u3002\u5047\u8bbe\u8fd9\u6ce2\u53bb\u5de6\u8fb9\u4e86\uff0c\u90a3\u4e48\u4e0b\u4e00\u6ce2\u4e8c\u5206\u5c31\u662f$\\displaystyle \\frac{k+1}{4}$\uff0c\u6211\u4eec\u518d\u4e00\u6b21\u7684\u8ba1\u7b97\u8fd9\u4e00\u90e8\u5206\u7684\u9668\u77f3\u6570\uff0c\u7136\u540e\u518d\u5224\u65ad\u53bb\u54ea\u8fb9\u2026\u2026\n\n\u8fd9\u91cc\u8fc7\u7a0b\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u7a00\u677e\u5e73\u5e38\u7684\u4e8c\u5206\u7b54\u6848\u7684\u6d41\u7a0b\uff0c\u6ca1\u4ec0\u4e48\u597d\u4f18\u5316\u7684\u3002\n\n\u7136\u540e\u662f\u5bf9$j$\u56fd\u7684\u8ba8\u8bba\uff1a\u9996\u5148\u662f\u7b2c\u4e00\u6b21\u5927\u7684\u4e8c\u5206$\\displaystyle \\frac{k+1}{2}$\uff0c\u4e3a\u6b64\u524d\u9762\u8fd9\u4e48\u591a\u6ce2\u9668\u77f3\u5168\u90e8\u7838\u4e0b\u6765\u7b97\u4e00\u904d\uff0c\u7136\u540e\u6311\u51fa\u7b2c$j$\u56fd\u8981\u7684\u4e00\u4e9b\u8282\u70b9\uff0c\u7b97\u51fa\u6765\u4e00\u4e2a\u603b\u9668\u77f3\u6570$tot$\uff0c\u7ee7\u7eed\u4e8c\u5206\u3002\u5047\u8bbe\u8fd9\u6ce2\u53bb\u5de6\u8fb9\u4e86\uff0c\u90a3\u4e48\u4e0b\u4e00\u6ce2\u4e8c\u5206\u5c31\u662f$\\displaystyle \\frac{k+1}{4}$\uff0c\u6211\u4eec\u518d\u4e00\u6b21\u7684\u8ba1\u7b97\u8fd9\u4e00\u90e8\u5206\u7684\u9668\u77f3\u6570\uff0c\u7136\u540e\u518d\u5224\u65ad\u53bb\u54ea\u8fb9\u2026\u2026\n\n~~\uff08\u522b\u627e\u4e0d\u540c\u4e86\uff0c\u9664\u4e86$i,j$\u4e4b\u5916\u90fd\u662f\u590d\u5236\u7684\u3002\u597d\u5bb6\u4f19\u4f5c\u8005\u4f60\u5c45\u7136\u7528\u76f4\u63a5\u590d\u5236\u8fd9\u79cd\u65b9\u6cd5\u6c34\u957f\u5ea6\uff09~~\n\n\u5176\u5b9e\u5e76\u4e0d\u662f\u6c34\u957f\u5ea6\uff0c\u800c\u662f\u8fd9\u79cd\u66b4\u529b\u505a\u6cd5\u5c31\u4f1a\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6211\u4eec\u5176\u5b9e\u5728\u7b2c\u4e8c\u6ce2\u7684\u65f6\u5019\u505a\u4e86\u592a\u591a\u7684\u65e0\u7528\u529f\u2014\u2014\u5728$i$\u56fd\u7684\u65f6\u5019\u524d$\\displaystyle \\frac{k+1}{2}$\u6ce2\u7b97\u8fc7\u7684\u9668\u77f3\u6570\u73b0\u5728\u53c8\u5f97\u518d\u7b97\u4e00\u904d\uff0c\u7136\u540e\u662f\u7b2c\u4e8c\u6b21\u4e8c\u5206\u53c8\u91cd\u590d\u7b97\u4e86\u4e00\u904d\uff0c\u63a5\u4e0b\u6765\u8fd8\u6709\u7b2c\u4e09\u6b21\u7b2c\u56db\u6b21\u2026\u2026\n\n\u90a3\u8fd9\u4e2a\u5176\u5b9e\u4f18\u5316\u60f3\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u91cd\u590d\u8fd9\u4e48\u591a\u6b21\u90a3\u5f53\u7136\u662f\u8bb0\u5fc6\u5316\u4e86\u3002\u8fd9\u662f\u4e00\u6761\u8def\uff1a\u50cf\u4e3b\u5e2d\u6811\u90a3\u6837\uff0c\u6bcf\u4e0b\u6765\u4e00\u6ce2\u9668\u77f3\u8bb0\u4e00\u4e0b\u5f53\u524d\u5404\u4e2a\u7ad9\u7684\u9668\u77f3\u60c5\u51b5\uff0c\u7136\u540e\u8981\u54ea\u4e2a\u56fd\u5bb6\u76f4\u63a5\u53bb\u7b97\u5c31\u884c\u3002\u4f46\u662f\u6ce8\u610f\u7a7a\u95f4\uff0c\u53ef\u6ca1\u6709\u5e73\u65f6\u7684128MB\u3002\u5f53\u7136\u4e3b\u5e2d\u6811\u4f18\u5316\u4e86\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u8fd9\u7bc7\u9898\u89e3\u7684\u5185\u5bb9\u3002\n\n\u90a3\u4e0d\u8003\u8651\u8bb0\u5fc6\u5316\u90a3\u600e\u4e48\u5904\u7406\u5462\uff1f\u5f88\u7b80\u5355\uff0c**\u628a\u76f8\u540c\u6027\u8d28\u7684\u56fd\u5bb6\u7ed1\u8d77\u6765\u4e00\u8d77\u5904\u7406**\u3002\n\n\u56de\u8fc7\u5934\u6765\u770b\u6211\u4eec\u6574\u4e2a\u7684\u6734\u7d20\u4e8c\u5206\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5bf9\u4e8e**\u6bcf\u4e00\u4e2a\u56fd\u5bb6**\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u6b21\u4e8c\u5206\u90fd\u662f\u679a\u4e3e$[1,\\displaystyle \\frac{k+1}{2}]$\u6ce2\u9668\u77f3\uff0c\u6734\u7d20\u7b97\u6cd5\u76f8\u5f53\u4e8e\u5728\u8fd9\u91cc\u5c31\u591a\u91cd\u590d\u4e86$n-1$\u6b21\u3002\u90a3\u6211\u4eec\u5b8c\u5168\u6ca1\u5fc5\u8981\u6bcf\u6b21\u90fd\u7b97\u8fd9\u51e0\u6ce2\u7838\u4e0b\u6765\u7684\u9668\u77f3\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba9\u8fd9\u6ce2\u5168\u90e8\u7838\u4e0b\u6765\uff0c\u6240\u6709\u56fd\u5bb6\u4e00\u8d77\u5904\u7406\uff0c\u90fd\u53bb\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u56fd\u5bb6\u5230\u5e95\u662f\u5206\u5230\u54ea\u8fb9\u2014\u2014\u8fd9\u4e48\u591a\u6ce2\u9668\u77f3\u4e0b\u6765\u81ea\u5df1\u8981\u591f\u4e86\u6ca1\u3002\u663e\u7136\u8fd9\u4e9b\u56fd\u5bb6\u4f1a**\u88ab\u5206\u6210\u4e24\u534a**\uff0c\u4e00\u90e8\u5206\u662f\u5f53\u524d\u8fd9\u6ce2\u5df2\u7ecf\u591f\u4e86\u7684\uff0c\u548c\u5f53\u524d\u8fd9\u6ce2\u8fd8\u4e0d\u591f\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e9b\u591f\u4e86\u7684\u56fd\u5bb6\uff0c\u7b54\u6848\u53ea\u4f1a\u66f4\u5c0f\uff0c\u5b83\u4eec\u5c31**\u6574\u4f53**\u5206\u53bb\u5de6\u8fb9\uff0c\u53bb\u679a\u4e3e\u66f4\u5c0f\u7684\u6ce2\u6570\uff0c\u770b\u591f\u4e0d\u591f\uff1b\u8fd9\u6ce2\u4e0d\u591f\u7684\uff0c**\u6574\u4f53**\u53bb\u53f3\u8fb9\u66f4\u5927\u7684\u6ce2\u6570\u3002\u56e0\u4e3a\u6734\u7d20\u7b97\u6cd5\u4e2d\u6bcf\u4e2a\u56fd\u5bb6\u4e5f\u8981\u591a\u6b21\u9762\u4e34\u8fd9\u79cd\u9009\u62e9\uff0c\u800c\u6bcf\u6b21\u8fd9\u79cd\u9009\u62e9\uff08\u5224\u5b9a\uff09\u7684\u65f6\u95f4\u4ee3\u4ef7\u662f$O(n)$\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u6211\u4eec\u8ba9\u9009\u62e9\u7684\u65f6\u95f4\u4ee3\u4ef7\u538b\u7f29\u5230\u4e00\u8d77\u53bb\u4e86\uff0c\u56e0\u800c\u5c31\u53d8\u5feb\u4e86\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f**\u6574\u4f53\u4e8c\u5206**\u2014\u2014\u4e00\u79cd**\u79bb\u7ebf\u5316**\u7b97\u6cd5\uff0c\u901a\u8fc7\u5c06**\u540c\u7c7b\u8be2\u95ee\u6574\u5408**\u6765\u7f29\u77ed**\u5224\u5b9a**\u7528\u65f6\uff0c\u4ece\u800c\u8282\u7ea6\u65f6\u95f4\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4ee3\u7801\u90e8\u5206\u4e86\uff0c\u53ea\u653e\u4e3b\u4f53\u51fd\u6570\u7684\u4ee3\u7801\u3002\n\n\u4e0b\u9762\u4e00\u4e9b\u53d8\u91cf\u7684\u7ea6\u5b9a\u3002\n\n```cpp\nlong long sum[600005], need[300005];//sum\uff1a\u8be5\u7a7a\u95f4\u7ad9\u7684\u9668\u77f3\u6570\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002need\u6570\u7ec4\uff1a\u8be5\u56fd\u5bb6\u6240\u9700\u9668\u77f3\u6570\nint n, m, ans[300005];//n\uff1a\u56fd\u5bb6\u6570\u3002m\uff1a\u7a7a\u95f4\u7ad9\u6570\u3002ans\u6570\u7ec4\uff1a\u6bcf\u4e2a\u56fd\u5bb6\u6240\u9700\u6700\u5c11\u65f6\u95f4\uff0ck+1\u5219\u5224\u5b9aNIE\nstruct aerolite//\u4e00\u6ce2\u9668\u77f3\n{\n    int left;\n    int right;\n    long long k;//\u9668\u77f3\u6570\n    bool opt;//\u5224\u5b9aleft\u548cright\u5173\u7cfb\u30020\u5219\u662fleft-right,1\u5219\u662fleft-n-1-right\n};\nstruct aerolite que[300005];\nvector<int> belong[300005];//\u5b58\u50a8\u56fd\u5bb6\u7a7a\u95f4\u7ad9\u7684\u4f4d\u7f6e\uff0cbelong[i]\u8868\u793a\u7b2ci\u4e2a\u56fd\u5bb6\u7684\u7a7a\u95f4\u7ad9\u4f4d\u7f6e\n```\n\u5173\u4e8e\u7838\u9668\u77f3\u4e0b\u6765\u7edf\u8ba1\u7684\u65b9\u6cd5\uff1a\u56e0\u4e3a\u662f\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u56e0\u800c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u914d\u4e0a\u524d\u7f00\u548c\u3002\u4e00\u4e2a\u975e\u5e38\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u56e0\u800c\u7701\u53bb\u8be5\u90e8\u5206\u4ee3\u7801\u3002\n\n\u7136\u540e\u662f\u4e3b\u4f53\u51fd\u6570solve\uff1a\n\n```cpp\nvoid solve(int left,int right,queue<int>country)//left\u4e0eright\uff1a\u7b54\u6848\u533a\u95f4\u7684\u8303\u56f4\u3002country\u961f\u5217\uff1a\u7b54\u6848\u5728\u8be5\u533a\u95f4\u7684\u56fd\u5bb6\u3002\u521d\u59cb\u662f\u5168\u4f53\u56fd\u5bb6\uff0c\u7b54\u6848\u8303\u56f4\u662f1-k+1\n{\n    if(country.empty())//\u6ca1\u56fd\u5bb6\u4e86\uff0c\u6563\u4e86\u5427\u3002\u4fdd\u9669\u63aa\u65bd\u3002\n        return;\n    if(left==right)//\u8fb9\u754c\u6761\u4ef6\uff1a\u7b54\u6848\u8303\u56f4\u53ea\u6709\u4e00\u4e2a\u4e86\uff0c\u90a3\u76f4\u63a5\u628a\u8fd9\u8303\u56f4\u5185\u6240\u6709\u56fd\u5bb6\u7684ans\u5168\u5b9a\u4e0b\u6765\n    {\n        while(!country.empty())\n        {\n            ans[country.front()] = left;\n            country.pop();\n        }\n        return;\n    }\n    int mid = (left + right) >> 1;//\u5f00\u59cb\u4e8c\u5206\n    for (int i = left; i <= mid;i++)//\u8be5\u90e8\u5206\u9668\u77f3\u5168\u90e8\u8981\u7838\u4e0b\u6765\uff0c\u7edf\u8ba1\u5230\u6811\u72b6\u6570\u7ec4\u91cc\n        if(!que[i].opt)\n        {\n            change(que[i].left, que[i].k);\n            change(que[i].right + 1, -que[i].k);\n        }\n        else\n        {\n            change(que[i].left, que[i].k);\n            change(1, que[i].k);\n            change(que[i].right + 1, -que[i].k);\n        }\n    queue<int> q_left, q_right;\n    while(!country.empty())//\u5c06\u56fd\u5bb6\u5206\u7c7b\u5230q_left\u548cq_right\u53bb\n    {\n        int now = country.front();\n        country.pop();\n        long long tot = 0;\n        for (int i = 0; i < belong[now].size() && tot < need[now]; i++)\n        \ttot += query(belong[now][i]);//\u7edf\u8ba1\u4e00\u4e2a\u56fd\u5bb6\u6240\u6709\u7a7a\u95f4\u7ad9\u8fd9\u6ce2\u7684\u6536\u83b7\n        if(tot>=need[now])\n            q_left.push(now);\n        else\n        {\n            need[now] -= tot;//\u6ce8\u610f\u8981\u51cf\uff1a\u56e0\u4e3a\u5bf9\u4e8e\u4e0b\u4e00\u6b21\u4e8c\u5206\u6765\u8bf4mid+1\u524d\u7684\u9668\u77f3\u4e0d\u4f1a\u518d\u7edf\u8ba1\u4e86\uff0c\u8d77\u59cb\u70b9\u5c31\u662fmid+1\uff0c\u6240\u4ee5\u5b83\u5bf9\u5e94\u7684\u524d\u9762\u90e8\u5206\u7684\u9668\u77f3\u6570\u4e5f\u8981\u51cf\u53bb\u3002\n            q_right.push(now);\n        }\n    }\n    for (int i = left; i <= mid;i++)//\u8bb0\u5f97\u8fd8\u539f\uff0c\u4e3a\u4e0b\u4e00\u6b21\u505a\u51c6\u5907\u3002\u6bcf\u4e00\u6b21\u6811\u72b6\u6570\u7ec4\u91cc\u53ea\u6709\u533a\u95f4[left,mid]\u7684\u9668\u77f3\u88ab\u7edf\u8ba1\n        if(!que[i].opt)//\u5c31\u662f\u8ba1\u7b97\u7684\u9006\u8fc7\u7a0b\n        {\n            change(que[i].left, -que[i].k);\n            change(que[i].right + 1, que[i].k);\n        }\n        else\n        {\n            change(que[i].left, -que[i].k);\n            change(1, -que[i].k);\n            change(que[i].right + 1, que[i].k);\n        }\n    if(!q_left.empty())//\u5de6\u8fb9\u5b58\u5728\u56fd\u5bb6\uff0c\u8fd9\u4e00\u90e8\u5206\u5c31\u5212\u53bb\u5de6\u8fb9\u5904\u7406\n        solve(left, mid, q_left);\n    if(!q_right.empty())\n        solve(mid + 1, right, q_right);//\u53f3\u8fb9\u6709\u56fd\u5bb6\uff0c\u5c31\u53bb\u53f3\u8fb9\u5904\u7406\n    return;\n}\n```\n",
        "postTime": 1613310190,
        "uid": 80026,
        "name": "walk_alone",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6570\u636e\u66f4\u65b0\u8fc7\u4e86\u554a\uff0c\u539f\u6765\u7684\u9898\u89e3\u90fd\u8fc7\u4e0d\u4e86\u4e86\u554a\uff0c\u641e\u4e86\u4e00\u4e2a\u4e0b\u5348\u624d\u67e5\u51fa\u95ee\u9898\u5728\u54ea\u91cc\u3002\n\n## \u5927\u81f4\u601d\u8def\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u7528\u4e86\u6574\u4f53\u4e8c\u5206\uff08\u53c8\u5b66\u4e86\u4e00\u62db\uff09\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u4e8c\u5206 $mid$ \uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u83ab\u961f\u7684\u65b9\u6cd5\uff0c\u7528 **$update$** \u53bb\u7ef4\u62a4\u6389\u4e86 **$mid$** \u6b21\u9668\u77f3\u540e\u7684\u72b6\u6001\uff0c\u7136\u540e\u5728 **$BIT$** \u91cc\u9762\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u3002\n\n\u5176\u5b9e\u601d\u8def\u4e5f\u4e0d\u662f\u975e\u5e38\u590d\u6742\uff0c\u4f46\u8fd8\u662f\u82b1\u4e86\u4e00\u4e2a\u4e0b\u5348 A \u9898\uff0c\u6211\u8fd8\u662f\u592a\u5f31\u4e86...\n\n## \u8981\u70b9\uff1a\u6574\u4f53\u4e8c\u5206\u7684\u601d\u60f3\n\n\u90a3\u4e48\u6574\u4f53\u4e8c\u5206\u7684\u8bdd\u5c31\u662f\u628a\u6ee1\u8db3\u6761\u4ef6\u7684\u653e\u5230\u5de6\u8fb9\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u653e\u5230\u53f3\u8fb9\uff0c\u7ee7\u7eed\u5411\u4e0b\u5904\u7406\uff0c\u548c\u5feb\u6392\u7684\u5904\u7406\u65b9\u5f0f\u4e5f\u662f\u86ee\u50cf\u7684(\u4f46\u662f\u7531\u4e8e\u6574\u4f53\u4e8c\u5206\u662f\u4f20\u56db\u4e2a\u53c2\u6570\uff1a$s\\ t\\ l\\ r$ \u7684, \u6240\u4ee5\u9012\u5f52\u5c42\u6570\u6700\u591a\u4e5f\u5c31\u662f log \u7ea7\u522b\uff0c\u4e0d\u4f1a\u50cf \u5feb\u6392 \u90a3\u6837\u4f1a\u88ab\u5361\u6210 $n^2$ )\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\uff08\u5176\u5b9e\u6211\u7684\u4ee3\u7801\u8dd1\u7684\u8fd8\u662f\u86ee\u5feb\u7684\uff09\n\n```cpp\n//by Judge\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int M=3e5+11;\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline ll read(){\n    ll x=0; char c=getchar(); while(!isdigit(c)) c=getchar();\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x;\n} int n,m,k,now; vector<int> G[M];\nint u[M],v[M],w[M],t1[M],t2[M],p[M],s[M],ans[M]; ll f[M];\ninline int lowbit(int x){ return x&-x; }\ninline void add(int x,int val){ for(;x<=m;x+=x&-x) f[x]+=val; }\ninline ll query(int x,ll ans=0){ for(;x;x-=x&-x) ans+=f[x]; return ans; }\ninline bool check(int x,ll ans=0){ //\u6700\u540e\u4e00\u4e2a\u6570\u636e\u70b9\u4e3b\u8981\u5c31\u662f\u5361\u8fd9\u91cc\n    for(int i=0;i<G[x].size();++i){\n        ans+=query(G[x][i]);\n\t\tif(ans>=s[x]) return true; //\u4e5f\u5c31\u662f\u8bf4\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u6570\u636e\u662f\u4f1a\u70b8long long \u7684,\u6240\u4ee5\u8981\u968f\u65f6\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n\t} return false;\n} inline void update(int x,int val){ //\u8fd9\u91cc\u662f\u533a\u95f4\u66f4\u65b0\n    add(u[x],val),add(v[x]+1,-val);\n\tif(u[x]>v[x]) add(1,val),add(m+1,-val);\n} void solv(int s,int t,int l,int r){ //\u8fd9\u4e2a\u5c31\u662f\u6574\u4f53\u4e8c\u5206\n    if(s>t || l>r) return ; int mid=l+r>>1,l1=0,l2=0;\n    if(l==r){ for(int i=s;i<=t;++i) ans[p[i]]=l; return ; }\n    while(now<mid)++now,update(now,w[now]); while(now>mid)update(now,-w[now]),--now;\n    for(int i=s;i<=t;++i) if(check(p[i])) t1[++l1]=p[i]; else t2[++l2]=p[i];\n    for(int i=1;i<=l1;++i)p[s+i-1]=t1[i]; for(int i=1;i<=l2;++i)p[s+i-1+l1]=t2[i];\n    if(l1) solv(s,s+l1-1,l,mid); if(l2) solv(s+l1,t,mid+1,r);\n} int main(){\n    n=read(),m=read();\n    for(int i=1;i<=m;++i) G[read()].push_back(i);\n    for(int i=1;i<=n;++i) p[i]=i,s[i]=read();\n    k=read()+1; for(int i=1;i<k;++i)\n        u[i]=read(),v[i]=read(),w[i]=read();\n    u[k]=1,v[k]=m,w[k]=1e9+9,solv(1,n,1,k);\n    for(m=1;m<=n;++m) ans[m]==k?puts(\"NIE\"):printf(\"%d\\n\",ans[m]);\n    return 0;\n}\n```",
        "postTime": 1538825395,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u6d1b\u8c37\u4e0a\u5f88\u65e9\u5c31\u8fc7\u4e86\uff0c\uff0c\u7136\u800c\u5728\u6211\u5b66\u6821\u7684OJ\u4e0a\u7684\u6570\u636e\u5f88\u5f3a\uff0c\u8feb\u4e0d\u5f97\u5df2\u91cd\u6784\u4e86\u4e24\u6b21\u4ee3\u7801orz\uff0c\u8fd8\u8c03\u6574\u4e86\u4e00\u4e0b\u7b97\u6cd5orz\n//[\u849f\u84bb\u535a\u5ba2Newuser\u5c0f\u7ad9\u540c\u6b65](http://www.newuser.top/2018/06/16/%e3%80%90poi2011met-meteors%e3%80%91%e6%95%b4%e4%bd%93%e4%ba%8c%e5%88%86%e4%b8%80%e4%ba%9b%e7%a5%9e%e5%a5%87%e4%bc%98%e5%8c%96/)\n\n\u8fd9\u9053\u9898\u6709\u4e2a\u5341\u5206\u663e\u7136\u7684\u505a\u6cd5\uff08\u4f3c\u4e4e\u697c\u4e0b\u4eec\u7684\u9898\u89e3\u597d\u591a\u662f\u8fd9\u6837\u7684\uff09\uff0c\u5c31\u662f\u76f4\u63a5\u5957\u5165\u4e00\u4e2a\u6811\u72b6\u5dee\u5206\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u4e8c\u5206\uff0c\u7136\u540e\u6bcf\u6b21\u52a0\u5165\u524dmid\u4e2a\uff0c\u67e5\u8be2\uff0c\u641e\u5b8c\u8fd8\u539f\u6811\u72b6\u6570\u7ec4\u3002\u770b\u4e0a\u53bb\u65f6\u95f4\u590d\u6742\u5ea6\u5e76\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u7136\u540e\uff0c\u6109\u5feb\u7684\u88ab\u5361\u5361\u5361\u5361\u5e38(\u5fae\u7b11\uff09\u3002\n\n\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u83ab\u961f\u91cc\u9762\u7684\u5de6\u79fb\u53f3\u79fb\u7684\u4e1c\u897f\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0b\u9668\u77f3\u548c\u8be2\u95ee\u5206\u5f00\u770b\uff0c\u8bbe\u5b9a\u4e00\u4e2a\u7c7b\u4f3c\u83ab\u961fR\u7684 \u4e1c\u897f\uff08\u672c\u9898\u662f\u524d\u7f00\u548c\u6ca1\u6709L\uff09\uff0c\u5bf9R\u8dd1\u5230\u5f53\u524dmid\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u753b\u4e00\u4e2a\u56fe\uff0c\u5c31\u4f1a\u60ca\u8bb6\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6574\u4e2a\u6574\u4f53\u4e8c\u5206\u6700\u591a\u6bcf\u5c42\u4f1a\u79fb\u52a8n\u6b21\u3002\n\n\u770b\u4f3c\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u5f71\u54cd\u4e0d\u5927\uff0c\u5176\u5b9e\u4e0d\u7136\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53cd\u590d\u7528\u4e86\u4e0a\u4e00\u6b21\u7684\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u540e\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8282\u7701\u4e86\u5f88\u591a\u91cd\u590d\u7684\uff0c\u5197\u6742\u7684\u5de5\u4f5c\uff0c\u6700\u540e\u5199\u51fa\u4ee3\u7801\u4e5f\u5176\u5b9e\u66f4\u52a0\u7cbe\u7b80\u6613\u61c2\uff08\u4e0d\u7528\u5904\u7406\u961f\u5217\u7c7b\u578b\uff09\u3002\n\ntalk is cheap , show the code:\n\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\n#define lowbit(x) ((x)&(-x))\nusing namespace std;\nconst int maxn = 300005;\nint n,m,k;\nint bit[maxn];\nvector<int>ve[maxn];\nvoid add(int x,int d) { for(;x<=m+2;x+=lowbit(x)) bit[x]+=d; }\nint getsum(int x) { int sum=0; for(;x;x-=lowbit(x)) sum+=bit[x]; return sum; }\nint ans[maxn];\nstruct node\n{ int id,ned; };\nstruct chan\n{\n\tint l,r,cha;\n}z[maxn];\nvoid modify(int po,int knd)\n{\n\tif(knd)\n\t{\n\t\tif(z[po].r>=z[po].l)\n\t\t{\n\t\t\tadd(z[po].l,z[po].cha); \n\t\t\tadd(z[po].r+1,-z[po].cha);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(1,z[po].cha);\n\t\t\tadd(z[po].r+1,-z[po].cha);\n\t\t\tadd(z[po].l,z[po].cha);\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(z[po].r>=z[po].l)\n\t\t{\n\t\t\tadd(z[po].l,-z[po].cha); \n\t\t\tadd(z[po].r+1,z[po].cha);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(1,-z[po].cha);\n\t\t\tadd(z[po].r+1,z[po].cha);\n\t\t\tadd(z[po].l,-z[po].cha);\n\t\t}\n\t}\n}\nint cur;\nvoid query(vector<node>q,int l,int r)\n{\n\tif(!q.size()) return;\n\tif(l==r)\n\t{\n\t\tint ss = q.size();\n\t\tfor(int i=0;i<ss;i++) ans[q[i].id] = l;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\twhile(cur<mid) ++cur,modify(cur,1);\n\twhile(cur>mid) modify(cur,0),--cur;\n\tint ss=q.size();\n\tvector<node>q1,q2;\n\tfor(int i=0;i<ss;i++)\n\t{\n\t\tint x = q[i].id;\n\t\tint  sd = ve[x].size();\n\t\tint summ = 0; \n\t\tfor(int j=0;j<sd;j++)\n\t\t{\n\t\t\tsumm+=getsum(ve[x][j]);\n\t\t\tif(summ>=q[i].ned) break;\n\t\t}\n\t\tif(summ>=q[i].ned) q1.push_back(q[i]);\n\t\telse q2.push_back((node){q[i].id,q[i].ned});\n\t}\n\tquery(q1,l,mid);\n\tquery(q2,mid+1,r);\n}\nint main()\n{\n\tvector<node>q;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tve[x].push_back(i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tq.push_back((node){i,x});\n\t}\n\tscanf(\"%d\",&k);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint ll,rr,aa;\n\t\tscanf(\"%d%d%d\",&ll,&rr,&aa);\n\t\tz[i].l = ll ;z[i].r = rr; z[i].cha = aa;\n\t}\n\t++k; z[k].l=1; z[k].r=m; z[k].cha = 0x3f3f3f3f;\n\tquery(q,1,k);\n\tfor(int i=1;i<=n;i++) if(ans[i]!=k)  printf(\"%d\\n\",ans[i]);\n\telse printf(\"NIE\\n\"); \n}\n```",
        "postTime": 1529085866,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "[$\\Large\\texttt{P3527}$](https://www.luogu.com.cn/problem/P3527)\n\n[$\\texttt{In my cnblogs}$](https://www.cnblogs.com/RedreamMer/p/14403375.html)\n\n## \u9898\u610f\n\n\u4e00\u4e2a\u73af\u5f62\u88ab\u5206\u4e3a $m$ \u4efd\uff0c\u6bcf\u4efd\u90fd\u5c5e\u4e8e $n$ \u4e2a\u56fd\u5bb6\u4e4b\u4e00\uff0c\u6709 $k$ \u573a\u9668\u77f3\uff0c\u6bcf\u573a\u5bf9\u5e94\u73af\u4e0a\u4e00\u6bb5\u533a\u95f4\uff0c\u4e3a\u6b64\u533a\u95f4\u4e0a\u6bcf\u4efd\u7684\u96b6\u5c5e\u56fd\u5bb6\u589e\u52a0 $a_i$ \u7684\u8d21\u732e\uff0c\u6bcf\u4e2a\u56fd\u5bb6\u671f\u671b\u5f97\u5230 $p_i$ \u7684\u9668\u77f3\uff0c\u95ee\u7b2c\u51e0\u6ce2\u9668\u77f3\u8fc7\u540e\u80fd\u591f\u8fbe\u6210\u76ee\u6807\uff1f\n\n$n,m,k\\le 3e5$\n\n## \u601d\u8def\n\n\u56e0\u4e3a\u7b54\u6848\u5177\u6709\u53ef\u4e8c\u5206\u6027\uff0c\u5373\u53ef\u4ee5\u4e8c\u5206\u5728\u7b2c\u51e0\u6ce2\u9668\u77f3\u8fbe\u6210\u76ee\u6807\uff0c\u56e0\u4e3a\u6709\u4fee\u6539\uff0c\u4e00\u4e2a\u4e00\u4e2a\u56fd\u5bb6\u4e8c\u5206\u663e\u5f97\u6709\u70b9\u6d6a\u8d39\uff0c\u53ef\u4ee5\u8054\u60f3\u5230\u6574\u4f53\u4e8c\u5206\uff0c\u4e8c\u5206\u6240\u6709\u56fd\u5bb6\u7684\u5b8c\u6210\u65f6\u95f4\uff0c\u800c\u4fee\u6539\u64cd\u4f5c\u53ef\u4ee5\u7531\u6811\u72b6\u6570\u7ec4\uff08\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff09\u6765\u5b9e\u73b0\uff0c\u6ce8\u610f\u8981\u5728\u6700\u540e\u52a0\u4e00\u6ce2\u65e0\u9650\u5927\u7684\u9668\u77f3\u7279\u5224 $\\texttt{NIE}$ \u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u67e5\u8be2**\u5f53\u524d\u5757\u5185**\u6240\u6709\u56fd\u5bb6\u7684\u6240\u6709\u73af\u5f62\u4e0a\u7684\u533a\u57df\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N\\log^2N)$ \u3002\n\n\u4ee5\u4e0b\u7ed9\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\u3002\n\n## \u8bc1\u660e\n\n\u4e3b\u8981\u65f6\u95f4\u590d\u6742\u5ea6\u4ea7\u751f\u5728\u4fee\u6539\u548c\u67e5\u8be2\u4e24\u79cd\u64cd\u4f5c\u4e0a\u3002\n\n\u6ce8\u610f $n,m,k$ \u540c\u9636\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff1a\u7b2c $i$ \u573a\u9668\u77f3\u5728\u6574\u7406\u4e8c\u5206\u4e2d\u662f\u4ece $[1,k+1]$ \u8fd9\u4e2a\u533a\u95f4\u5230 $[i,i]$ \u8fd9\u4e2a\u533a\u95f4\uff0c\u4e00\u5171\u7ea6\u6709 $\\log_2 k$ \u5c42\uff0c\u6bcf\u5c42\u90fd\u5bf9\u5176\u6267\u884c\u4e24\u904d\uff08\u4e00\u904d\u4fee\u6539\uff0c\u4e00\u904d\u6e05\u9664\uff09\u4fee\u6539\u64cd\u4f5c\uff0c\u4fee\u6539\u64cd\u4f5c\u590d\u6742\u5ea6\u7ea6\u4e3a $O(\\log_2 m)$ \uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u7ea6\u4e3a $O(N\\log^2N)$ \u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff1a\u770b\u8d77\u6765\u662f\u66b4\u529b\u4e00\u4e2a\u4e00\u4e2a\u67e5\u8be2\uff0c\u4f46\u662f\u5bf9\u4e8e\u73af\u5f62\u4e0a\u6bcf\u4e2a\u533a\u57df\uff0c\u4e5f\u90fd\u662f\u5728 $\\log_2 k$ \u5c42\u4e0a\u6bcf\u5c42\u90fd\u90fd\u505a\u4e00\u6b21 $O(\\log_2 m)$ \u7684\u67e5\u8be2\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e5f\u662f $O(N\\log^2N)$ \u3002\n\n## \u4ee3\u7801\n\n```cpp\nint a, b, c, p[N + 10], s[N + 10], ans[N + 10];\nvector<int> st[N + 10], Q, L, R;\nstruct node\n{\n    int opt, id, x, y, z;\n} ask[N + 10];\n\ninline void add(int n, int k)\n{\n    if (!n)\n        return;\n    for (; n <= b; n += n & -n)\n        p[n] += k;\n}\n\ninline int query(int n)\n{\n    int res = 0;\n    for (; n; n -= n & -n)\n        res += p[n];\n    return res;\n}\n\ninline void change(int l, int r, int val)\n{\n    if (l <= r)\n        add(l, val), add(r + 1, -val);\n    else\n        add(1, val), add(r + 1, -val), add(l, val);\n}\n\ninline void solve(int l, int r)\n{\n    if (l == r)\n    {\n        for (int i = 0; i < Q.size(); i++)\n            if (ask[Q[i]].opt == 2)\n                ans[ask[Q[i]].id] = l;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    for (int i = 0; i < Q.size(); i++)\n    {\n        int n = Q[i];\n        if (ask[n].opt == 1)\n        {\n            if (ask[n].id <= mid)\n                change(ask[n].x, ask[n].y, ask[n].z), L.PB(n);\n            else\n                R.PB(n);\n        }\n        else\n        {\n            int tmp = 0;\n            for (int j = 0; j < st[ask[n].id].size(); j++)\n            {\n                int m = st[ask[n].id][j];\n                tmp += query(m);\n                if (tmp >= s[ask[n].id])\n                    break;\n            }\n            if (s[ask[n].id] <= tmp)\n                L.PB(n);\n            else\n                R.PB(n), s[ask[n].id] -= tmp;\n        }\n    }\n    for (int i = 0; i < L.size(); i++)\n    {\n        int n = L[i];\n        if (ask[n].opt != 1)\n            continue;\n        change(ask[n].x, ask[n].y, -ask[n].z);\n    }\n    vector<int> tmp = R;\n    Q = L;\n    R.clear();\n    L.clear();\n    solve(l, mid);\n    Q = tmp;\n    solve(mid + 1, r);\n}\n\nsigned main()\n{\n    // freopen(\"in1.in\", \"r\", stdin);\n    a = read();\n    b = read();\n    for (int i = 1; i <= b; i++)\n        st[read()].PB(i);\n    for (int i = 1; i <= a; i++)\n        s[i] = read();\n    c = read();\n    for (int i = 1; i <= c; i++)\n    {\n        ask[i].opt = 1;\n        ask[i].id = i;\n        ask[i].x = read();\n        ask[i].y = read();\n        ask[i].z = read();\n    }\n    ask[++c].opt = 1;\n    ask[c].id = c;\n    ask[c].x = 1;\n    ask[c].y = b;\n    ask[c].z = 1e9;\n    for (int i = 1; i <= a; i++)\n        ask[i + c].opt = 2, ask[i + c].id = i;\n    c += a;\n    for (int i = 1; i <= c; i++)\n        Q.PB(i);\n    solve(1, c - a);\n    for (int i = 1; i <= a; i++)\n        if (ans[i] != c - a)\n            printf(\"%d\\n\", ans[i]);\n        else\n            puts(\"NIE\");\n    return 0;\n}\n```",
        "postTime": 1613357758,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a $n$ \u4e2a\u4e3b\u4f53\uff0c\u6bcf\u4e2a\u4e3b\u4f53\u6709\u4e00\u4e2a\u6307\u6807\u3002\u7ed9\u5b9a $m$ \u4e2a\u533a\u57df\uff08\u73af\u5f62\uff09\uff0c\u6bcf\u4e2a\u533a\u57df\u90fd\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u4e3b\u4f53\uff0c\u6709 $k$ \u4e2a\u533a\u95f4\u52a0\u6cd5\uff0c\u95ee\u6bcf\u4e2a\u4e3b\u4f53\u5728\u7b2c\u51e0\u6b21\u533a\u95f4\u4fee\u6539\u540e\u8fbe\u6210\u6307\u6807\u3002\n\n## \u9898\u89e3\n\n\u8fd9\u9053\u9898\u6709\u4e00\u70b9\u7ed5\uff0c\u9996\u5148\u6211\u4eec\u641e\u6e05\u695a\u6982\u5ff5\uff0c\u5177\u4f53\u770b\u9898\u610f\u7b80\u8ff0\u3002\n\n\u663e\u7136\u6bcf\u4e2a\u8be2\u95ee\u90fd\u80fd\u591f\u4e8c\u5206\u89e3\u51b3\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528\u6574\u4f53\u4e8c\u5206\u6765\u6574\u8fd9\u9053\u9898\u3002\n\n\u9996\u5148\u786e\u5b9a\u6574\u4f53\u4e8c\u5206\u7684\u503c\u57df\u5373\u6211\u4eec\u4e8c\u5206\u7684\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u8be2\u95ee\u95ee\u7684\u662f\u5929\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7528 1 \u5230 $k$ \u4f5c\u4e3a\u6211\u4eec\u6574\u4f53\u4e8c\u5206\u7684\u503c\u57df\u3002\n\n\u6211\u4eec\u8bbe\u6574\u4f53\u4e8c\u5206\u7684\u51fd\u6570\u4e3a $\\mathrm{solve}(L,R,l,r)$\uff0c\u5176\u4e2d $L,R$ \u8868\u793a\u503c\u57df\uff0c$l,r$ \u8868\u793a\u8be2\u95ee\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u4e8c\u5206\u5230\u7684\u503c\u57df\u533a\u95f4 $L,R,M=(L+R)/2$\uff0c\u5982\u679c $[L,M]$ \u7684\u4fee\u6539\u64cd\u4f5c\u80fd\u591f\u76f4\u63a5\u4f7f\u5f97\u8be2\u95ee\u8fbe\u6210\u6307\u6807\uff0c\u5219\u6211\u4eec\u628a\u8fd9\u4e2a\u8be2\u95ee\u653e\u8fdb\u8be2\u95ee\u533a\u95f4 $[l,m]$ \u91cc\uff0c\u5176\u4e2d $m=(l+r)/2$\u3002\n\n\u6700\u540e\u8fd8\u539f\u4e00\u4e0b\u4fee\u6539\u5373\u53ef\u3002\n\n\u4fee\u6539\u64cd\u4f5c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4+\u5dee\u5206\u6765\u5b9e\u73b0\uff0c\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u3002\n\n\u5982\u4f55\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4e00\u4e2a\u865a\u62df\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u5373\u8ba9\u533a\u95f4 $[1,m]$ \u52a0\u4e0a\u65e0\u7a77\u5927\uff0c\u8ba9\u4fee\u6539\u64cd\u4f5c\u7684\u4e2a\u6570 $k$ \u52a0\u4e00\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u5224\u65ad\u5982\u679c\u7b49\u4e8e $k$ \u5373\u662f\u65e0\u89e3\u3002\n\n```cpp\n#include <cstdio>\n#include <vector>\n#define int long long\n#define vec(x) (Q[x].G)\n\nusing namespace std;\n\nconst int Maxn = 3e5 + 5;\nint n, m, k, qls[Maxn], qrs[Maxn], qva[Maxn], ans[Maxn], isa[Maxn];\nstruct Query_Node\n{\n\tint w, id;\n\tvector < int > G;\n} Q[Maxn], lq[Maxn], rq[Maxn];\nstruct Fenwick_Tree\n{\n\tint bit[Maxn];\n\t\n\tvoid ins(int x, int v)\n\t{\n\t\tfor (; x <= m; x += x & -x) \tbit[x] += v;\n\t}\n\t\n\tint ret(int x)\n\t{\n\t\tint res = 0;\n\t\tfor (; x; x -= x & -x)\tres += bit[x];\n\t\treturn res;\n\t}\n} fwt;\n\nvoid solve(int lval, int rval, int st, int ed)\n{\n\tif (lval > rval || st > ed) \treturn ;\n\tif (lval == rval)\n\t{\n\t\tfor (int i = st; i <= ed; ++i)\tans[Q[i].id] = lval;\n\t\treturn ;\n\t}\n\tint mid = (lval + rval) >> 1;\n\tint lt = 0, rt = 0;\n\tfor (int i = lval; i <= mid; ++i)\n\t{\n\t\tif (qls[i] <= qrs[i])\n\t\t{\n\t\t\tfwt.ins(qls[i], qva[i]);\n\t\t\tfwt.ins(qrs[i] + 1, -qva[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfwt.ins(qls[i], qva[i]);\n\t\t\tfwt.ins(m + 1, -qva[i]);\n\t\t\tfwt.ins(1, qva[i]);\n\t\t\tfwt.ins(qrs[i] + 1, -qva[i]);\n\t\t}\n\t}\n\tfor (int i = st; i <= ed; ++i)\n\t{\n\t\tint lim = 0;\n\t\tfor (unsigned j = 0; j < vec(i).size(); ++j)\n\t\t{\n\t\t\tint mbr = vec(i)[j];\n\t\t\tint xxx = fwt.ret(mbr);\n\t\t\tlim += xxx;\n\t\t\tif (xxx > 1e9)\tbreak;\n\t\t}\n\t\tif (lim >= Q[i].w)\tlq[++lt] = Q[i];\n\t\telse\trq[++rt] = Q[i];\n\t}\n\tfor (int i = 1; i <= lt; ++i)\tQ[st + i - 1] = lq[i];\n\tfor (int i = 1; i <= rt; ++i)\tQ[st + lt + i - 1] = rq[i];\n\tif (rt) \tsolve(mid + 1, rval, st + lt, ed);\n\tfor (int i = lval; i <= mid; ++i)\n\t{\n\t\tif (qls[i] <= qrs[i])\n\t\t{\n\t\t\tfwt.ins(qls[i], -qva[i]);\n\t\t\tfwt.ins(qrs[i] + 1, qva[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfwt.ins(qls[i], -qva[i]);\n\t\t\tfwt.ins(m + 1, qva[i]);\n\t\t\tfwt.ins(1, -qva[i]);\n\t\t\tfwt.ins(qrs[i] + 1, qva[i]);\n\t\t}\n\t}\n\tif (lt) \tsolve(lval, mid, st, st + lt - 1);\n}\n\nsigned main()\n{\n\tscanf(\"%lld %lld\", &n, &m);\n\tfor (int i = 1, x; i <= m; ++i)\n\t{\n\t\tscanf(\"%lld\", &x);\n\t\tvec(x).push_back(i);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%lld\", &Q[i].w);\n\t\tQ[i].id = i;\n\t}\n\tscanf(\"%lld\", &k);\n\tfor (int i = 1; i <= k; ++i)\tscanf(\"%lld %lld %lld\", &qls[i], &qrs[i], &qva[i]);\n\tqls[++k] = 1, qrs[k] = n, qva[k] = 1e9;\n\tsolve(1, k, 1, n);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (ans[i] == k)\tputs(\"NIE\");\n\t\telse\tprintf(\"%lld\\n\", ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595808049,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u9053\u4e8c\u5206\u9898\uff0c\u7136\u800c\u4e8c\u5206\u5f88\u5de7\u5999\u3002\n\n\u5982\u679c\u5355\u4e2a\u8be2\u95ee\uff0c\u663e\u7136\u53ef\u4ee5O(logk)\u4e8c\u5206\u7136\u540e\u8f7b\u677e\u5224\u5b9a\u3002\n\n\u4f46\u662f\u591a\u4e2a\u8be2\u95ee\u5c31\u4e0d\u597d\u89e3\u51b3\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u6574\u4f53\u4e8c\u5206\u7684\u601d\u60f3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206k\uff0c\u7136\u540e\u53ef\u884c\u7684\u653e\u4e00\u8fb9\uff0c\u4e0d\u53ef\u884c\u7684\u653e\u53e6\u5916\u4e00\u8fb9\n\n\u5982\u4f55\u5224\u5b9a\u5462\uff0c\u6811\u72b6\u6570\u7ec4\u626b\u8fc7\u53bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u9700\u8981\u5229\u7528\u4e0a\u4e00\u6b21\u7684\u7ed3\u679c\n\n\u7136\u540e\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u9996\u5148\uff0c\u4e8c\u5206\u548c\u53ef\u884c\u4e0d\u53ef\u884c\u7684\u626b\u63cf\u5408\u8d77\u6765\u662fO(mlogk)\n\n\u7136\u540e\u6811\u72b6\u6570\u7ec4\u6bcf\u6b21\u626b\u8fc7\u53bb\u7684\u8bdd\uff0c\u603b\u5171\u4f1a\u628a\u6574\u4e2a\u533a\u95f4\u626b\u4e00\u904d\uff08\u8fd9\u4e2a\u4e00\u6307\u7684\u662f\u5e38\u6570\u904d\uff09\n\n\u7136\u540e\u6548\u7387\u662fO(n\\*logn\\*logn)\n\n\u9644\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<cstdlib>\nusing namespace std;\nint n,m,k,a[300002],s[300002],u[300002],v[300002],w[300002];\nint t1[300002],t2[300002],p[300002],ans[300002],now;\nlong long f[300002];\nvector<int>g[300002];\nvoid gengxin(int x,int y){\n    for (;x>=1;x-=x&-x)f[x]+=y;\n}\nlong long chaxun(int x){\n    long long ans=0;\n    for (;x<=m;x+=x&-x)ans+=f[x];\n    return ans;\n}\nbool pd(int a){\n    long long ans=0;\n    for (int i=0;i<g[a].size();i++)\n    ans+=chaxun(g[a][i]);\n    return ans>=s[a];\n}\nvoid ccj(int x,int y,int l,int r){//\u6574\u4f53\u4e8c\u5206\n    if (x>y)return;\n    if (l==r){for (int i=x;i<=y;i++)ans[p[i]]=l;return;}\n    int mid=(l+r)/2;\n    while(now<mid)\n    {\n        now++;\n        if (u[now]<=v[now])\n        {\n            gengxin(v[now],w[now]);gengxin(u[now]-1,-w[now]);\n        }\n        else\n        {\n            gengxin(m,w[now]);gengxin(u[now]-1,-w[now]);\n            gengxin(v[now],w[now]);\n        }\n    }\n    while(now>mid)\n    {\n        if (u[now]<=v[now])\n        {\n            gengxin(v[now],-w[now]);gengxin(u[now]-1,w[now]);\n        }\n        else\n        {\n            gengxin(m,-w[now]);gengxin(u[now]-1,w[now]);\n            gengxin(v[now],-w[now]);\n        }\n        now--;\n    }\n    int l1=0,l2=0;\n    for (int i=x;i<=y;i++)\n    if (pd(p[i]))t1[++l1]=p[i];else t2[++l2]=p[i];\n    for (int i=x;i<x+l1;i++)p[i]=t1[i-x+1];\n    for (int i=x+l1;i<=y;i++)p[i]=t2[i-x-l1+1];\n    ccj(x,x+l1-1,l,mid);ccj(x+l1,y,mid+1,r);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++)\n    {scanf(\"%d\",&a[i]);g[a[i]].push_back(i);}\n    for (int i=1;i<=n;i++)\n    {p[i]=i;scanf(\"%d\",&s[i]);}\n    scanf(\"%d\",&k);\n    for (int i=1;i<=k;i++)\n    scanf(\"%d%d%d\",&u[i],&v[i],&w[i]);\n    ccj(1,n,0,k+1);\n    for (int i=1;i<=n;i++)\n    if (ans[i]<=k)printf(\"%d\\n\",ans[i]);else puts(\"NIE\");\n    return 0;\n}\n```",
        "postTime": 1503751731,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n$n$ \u4e2a\u56fd\u5bb6\uff0c\u6bcf\u4e2a\u56fd\u5bb6\u90fd\u6709\u4e00\u4e2a\u6307\u6807\u3002\n\n\u5728\u67d0\u9897\u884c\u661f\u4e0a\u6709\u73af\u5f62\u7684 $m$ \u4e2a\u5751\uff0c\u6bcf\u4e2a\u5751\u90fd\u5c5e\u4e8e\u4e00\u4e2a\u56fd\u5bb6\u3002\n\n\u6709 $k$ \u6b21\u6d41\u661f\u96e8\uff0c\u6bcf\u6b21\u5c06\u9009\u62e9\u4e00\u6bb5\u533a\u95f4\u52a0\u4e0a\u67d0\u4e2a\u6570\u3002\n\n\u95ee\u6bcf\u4e2a\u56fd\u5bb6\u5728\u7b2c\u51e0\u6b21\u65f6\u5230\u8fbe\u76ee\u6807\u3002\n\n$n,m,k\\le 3\\cdot10^5$\n\n### \u7b97\u6cd5\u8bb2\u89e3\n\n\u6574\u4f53\u4e8c\u5206\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u5c06\u591a\u4e2a\u4e8c\u5206\u4e00\u8d77\u8003\u8651\uff0c\u5177\u4f53\u7684\uff0c\u6709 $q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u90fd\u53ef\u4ee5\u4e8c\u5206\uff0c\u5c06\u8fd9\u4e9b\u8be2\u95ee\u4e00\u8d77\u8003\u8651\u3002\n\n\u8003\u8651 $\\text{solve}(l,r,L,R)$ \u8003\u8651 $[l,r]$ \u7684\u8be2\u95ee\uff0c\u7b54\u6848\u7684\u503c\u57df\u4e3a $[L,R]$ \uff0c\u8bbe $mid=\\left\\lfloor\\frac{L+R}2\\right\\rfloor$\uff0c\u901a\u8fc7\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u5c06 $[l,r]$ \u8be2\u95ee\u5206\u6210\u4e24\u7ec4\uff0c\u5728\u8fdb\u884c\u9012\u5f52\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(n\\log w)$ \u5176\u4e2d $w$ \u4e3a\u7b54\u6848\u7684\u503c\u57df\uff0c\u5047\u8bbe\u6570\u636e\u7ed3\u6784\u662f $\\Theta(1)$ \u7684\u3002\n\n### \u9898\u89e3\n\n\u672c\u9898\u5c31\u662f\u4e2a\u6a21\u677f\u9898\u5566\uff0c\u7ef4\u62a4\u7684\u6570\u636e\u7ed3\u6784\u662f\u6811\u72b6\u6570\u7ec4\uff0c\u6ce8\u610f\u4ee5\u4e0b\u4e8b\u9879\uff1a\n\n+ \u6811\u72b6\u6570\u7ec4\u6e05\u7a7a\u4e0d\u80fd\u66b4\u529b $\\Theta(n)$ \u6e05\u7a7a\uff0c\u8981\u5728 $\\Theta((R-L)\\log n)$ \u7684\u590d\u6742\u5ea6\u6e05\u7a7a\u3002\n+ \u5148\u9012\u5f52 $\\text{solve}(l+x,r,mid+1,R)$ \u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u7684\u8d21\u732e\u53ef\u4ee5\u7d2f\u52a0\u3002\n+ \u4e2d\u9014\u8981\u5f00 long long,\u8fd8\u8981\u6ce8\u610f\u7206 long long\n+ \u5c3d\u91cf\u4f18\u5316\u5e38\u6570\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\Theta(m\\log k\\log m+n+k)$\n\n### code\n\n```c++\n//my code head for OI\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,n) for (int i=a;i<=n;i++)\n#define per(i,a,n) for (int i=a;i>=n;i--)\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(),(x).end()\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\ntypedef vector<int> VI;\ntypedef long long ll;\ntypedef pair<int,int> PII;\nconst int mod=1000000007;\nconst ll mod2=1ll*mod*mod;\nconst int maxn=3e5+10;\nint quick(int a,int b){int res=1;a%=mod;assert(b>=0); for(;b;b>>=1){if(b&1)res=1ll*res*a%mod;a=1ll*a*a%mod;}return res;}\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint n,m,k,num1,num2,ans[maxn],aa[maxn],bb[maxn],cc[maxn];\nnamespace io{\n\tinline int read(){\n\t\tint X=0,w=0;char ch=0;\n\t\twhile(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n\t\twhile(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n\t\treturn w?-X:X;\n\t}\n\tinline void write(int x){\n\t\tif(x<0) putchar('-'),x=-x;\n\t\tif(x>9) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nstruct opera{\n\tint w,id;\n\tvector<int> vc;\n}ope[maxn],ope1[maxn],ope2[maxn];\nstruct BIT{\n\tll c[maxn];\n\tvoid add(int x,ll y){\n\t\tfor(;x<=m;x+=x&-x) c[x]+=y;\n\t}\n\tll query(int x){\n\t\tll res=0;\n\t\tfor(;x;x-=x&-x) res+=c[x];\n\t\treturn res;\n\t}\n}bit;\nvoid solve(int l,int r,int L,int R){\n\tif(l>r||L>R) return ;\n\tif(L==R){\n\t\trep(i,l,r) ans[ope[i].id]=L;\n\t\treturn ;\n\t}\n\tnum1=0,num2=0;\n\tint mid=(L+R)/2;\n\trep(i,L,mid){\n\t\tif(aa[i]<=bb[i]) bit.add(aa[i],cc[i]),bit.add(bb[i]+1,-cc[i]);\n\t\telse bit.add(aa[i],cc[i]),bit.add(m+1,-cc[i]),bit.add(1,cc[i]),bit.add(bb[i]+1,-cc[i]);\n\t}\n\trep(i,l,r){\n\t\tll res=0;\n\t\tfor(auto x:ope[i].vc){\n\t\t\tll xx=bit.query(x);\n\t\t\tres+=xx;\n\t\t\tif(xx>1e9) break;\n\t\t}\n\t\tif(res>=ope[i].w) ope1[++num1]=ope[i];\n\t\telse ope2[++num2]=ope[i];\n\t}\n\tcopy(ope1+1,ope1+num1+1,ope+l);\n\tcopy(ope2+1,ope2+num2+1,ope+l+num1);\n\tint orz=num1,moo=num2;\n\tif(moo) solve(l+orz,r,mid+1,R);\n\trep(i,L,mid){\n\t\tif(aa[i]<=bb[i]) bit.add(aa[i],-cc[i]),bit.add(bb[i]+1,cc[i]);\n\t\telse bit.add(aa[i],-cc[i]),bit.add(m+1,cc[i]),bit.add(1,-cc[i]),bit.add(bb[i]+1,cc[i]);\n\t}\n\tif(orz) solve(l,l+orz-1,L,mid);\n}\nint main(){\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout);\n\tn=io::read(),m=io::read();\n\tint tmp=0;\n\trep(i,1,m){\n\t\tope[io::read()].vc.pb(i);\n\t}\n\trep(i,1,n){\n\t\tope[i].w=io::read();\n\t\tope[i].id=++tmp;\n\t}\n\tcin>>k;\n\trep(i,1,k) aa[i]=io::read(),bb[i]=io::read(),cc[i]=io::read();\n\tk++;\n\taa[k]=1,bb[k]=n,cc[k]=1e9;\n\tsolve(1,n,1,k);\n\trep(i,1,tmp){\n\t\tif(ans[i]==k) puts(\"NIE\");\n\t\telse io::write(ans[i]),putchar('\\n');\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1573650697,
        "uid": 27209,
        "name": "hepan",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    },
    {
        "content": "[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cqwq](https://www.goldenpotato.cn/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/luogu-p3527-poi2011met-meteors/)\n\n---\n# Solution\n~~\u6211\u662f\u4e00\u76f4\u5949\u884c\u575a\u51b3\u4e0d\u5199\u6811\u72b6\u6570\u7ec4\u53ea\u5199\u7ebf\u6bb5\u6811\u7406\u8bba\u7684\uff0c\u76f4\u5230\u8fd9\u9898.......~~\n\n\u8fd9\u9898\u662f\u4e00\u9053\u6574\u4f53\u4e8c\u5206\u7684\u6a21\u677f\u9898\u3002\n\n.\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u56fd\u5bb6\u7684\u60c5\u51b5\u3002~~\u8fd9\u4e0dSB\u95ee\u9898\u4e48~~\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u66b4\u529b\u6a21\u62df\uff0c\u66b4\u529bCheck,\u590d\u6742\u5ea6$O(mlogn)$\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u4e00\u4e2a\u56fd\u5bb6\u90fd\u8fd9\u4e48\u641e\u4e00\u8f6e\uff0c\u590d\u6742\u5ea6\u8fbe\u5230\u4e86\u60ca\u4eba\u7684$O(n\\cdot m logn)$\uff0c\u8fd9\u663e\u7136\u662f\u8981T\u98de\u7684\u3002\n\n.\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u5f97\u8bf7\u51fa\u4f1f\u5927\u7684\u6574\u4f53\u4e8c\u5206\u4e86\u3002\u6574\u4f53\u4e8c\u5206\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u628a\u6240\u6709\u8be2\u95ee\u4e00\u8d77\u4e8c\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\uff0c\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u5747\u5728$1,m+1$\u8fd9\u4e2a\u8303\u56f4\u5185(+1\u662f\u4e3a\u4e86\u65b9\u4fbf\u5224\u65ad\u4e0d\u53ef\u884c\u7684\u60c5\u51b5)\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a$mid$\uff0c\u7136\u540e\u628a\u6240\u6709\u7b54\u6848$<=mid$\u7684\u8be2\u95ee\u4e22\u5230$1,mid$\u533a\u95f4\uff0c\u628a\u6240\u6709\u5728mid\u65f6\u95f4\u5185\u4e0d\u80fd\u5b8c\u6210\u7684\u8be2\u95ee\u4e22\u5230\u53f3\u533a\u95f4\u3002\n\n\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u8be2\u95ee\u662f\u5426\u80fd\u5728mid\u65f6\u95f4\u5185\u5b8c\u6210\u5462\uff1f\u66b4\u529b\u554a\u3002\u6211\u4eec\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u66b4\u529b\u505a\u4e2amid\u6b21\u4fee\u6539\uff0c\u7136\u540e\u518d\u66b4\u529b\u770b\u6bcf\u4e2a\u56fd\u5bb6\u662f\u5426\u6ee1\u8db3\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u4e1c\u897f\u9012\u5f52\u4e0b\u53bb\u505a\uff0c\u76f4\u5230\u533a\u95f4\u957f\u5ea6\u4e3a$1$\u4e3a\u6b62\u3002\n\n.\n\n\u4ec0\u4e48\uff0c\u8fd9\u73a9\u610f\u590d\u6742\u5ea6\u5f88\u5927\uff1f\u7684\u786e\u5f88\u5927\uff0c$O(nlog^2n)$\u5462\u3002\n\n\u600e\u4e48\u8bc1\u5462\uff1f\u663e\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u9012\u5f52\u6700\u591alog\u5c42\uff0c\u6bcf\u5c42\u6211\u4eec\u4f1a\u628a\u6240\u6709\u7684\u4fee\u6539\u64cd\u4f5c\u90fd\u4f1a\u505a\u4e00\u904d\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e24\u4e2alog\u3002\n\n\u518d\u7ed9\u4e00\u4e2a\u53c2\u8003\u6570\u636e\uff0c30w\u6570\u636e\u4e0b\uff0c2\u4e2alog\u7b97\u51fa\u6765\u7684\u4e1c\u897f\u63a5\u8fd1\u4e24\u4e2a\u4ebf\u3002\u597d\u4e86\uff0c\u6211\u60f3\u4f60\u77e5\u9053\u4e86\u8981\u5199\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u4e86.......\n\n\u5565\uff1f\u6240\u4ee5\u8bf4\u4f60\u8fd8\u662f\u4e49\u65e0\u53cd\u9988\u7684\u5199\u4e86\u7ebf\u6bb5\u6811\uff1f[\u6765\u8bd5\u8bd5\u5728\u8fd9\u91cc\u4ea4\u5427](https://www.luogu.org/problemnew/show/U66611),\u53ef\u4ee5\u68c0\u9a8c\u4f60\u7684\u7a0b\u5e8f\u7684\u6b63\u786e\u6027  ~~\uff08\u4ee5\u53ca\u7a76\u7adf\u8981\u8dd1\u4e2a\u591a\u4e45\uff09~~\n\n.\n\n\u5c31\u9171\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u9898\u7ed9\u5207\u6389\u5566(\uff5e\uffe3\u25bd\uffe3)\uff5e \n\n~~\u4f60\u5f88\u6709\u53ef\u80fd\u88ab\u5361\u5e38\u53ca\u5361\u7a7a\u95f4\uff0c\u5f53\u7136\uff0c\u8fd9\u5c31\u662f\u540e\u8bdd\u4e86~~\n\n---\n# Code\n```cpp\n//Luogu P3527 [POI2011]MET-Meteors\n//Mar,27th,2019\n//\u6574\u4f53\u4e8c\u5206+\u6811\u72b6\u6570\u7ec4\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<ctime>\nusing namespace std;\nint read()\n{\n\tint x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=300000+100;\nconst int inf=0x3f3f3f3f;\nint n,m,K,ans[N],w[N];//w[i]\u7b2ci\u4e2a\u56fd\u5bb6\u9700\u8981\u591a\u5c11\u4e2a\u9668\u77f3\nstruct BIT\n{\n\tlong long t[N<<2];\n\tinline int lowbit(int &x){return x&(-x);}\n\tvoid Init()\n\t{\n\t\tmemset(t,0,sizeof t);\n\t}\n\tlong long Query(int x)\n\t{\n\t\tlong long sum=0;\n\t\twhile(x>0)\n\t\t{\n\t\t\tsum+=t[x];\n\t\t\tx-=lowbit(x);\n\t\t}\n\t\treturn sum;\n\t}\n\tvoid update(int x,int dlt)\n\t{\n\t\twhile(x<=m)\n\t\t{\t\n\t\t\tt[x]+=dlt;\n\t\t\tx+=lowbit(x);\n\t\t}\n\t}\n\tvoid Change(int l,int r,int w)\n\t{\n\t\tupdate(r+1,-w);\n\t\tupdate(l,w);\n\t}\n}bit;\nstruct OP\n{\n\tint l,r,w;\n}op[N];\nvector <int> a[N];\nstruct DL\n{\n\tint l,r;\n\tvector <int> c;\n}mqueue[N+5000];\nint main()\n{\n\t//int t=clock();\n\t//freopen(\"3527.in\",\"r\",stdin);\n\t//freopen(\"3527.out\",\"w\",stdout);\n\t\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t\ta[read()].push_back(i);\n\tfor(int i=1;i<=n;i++)\n\t\tw[i]=read();\n\tK=read();\n\tfor(int i=1;i<=K;i++)\n\t\top[i].l=read(),op[i].r=read(),op[i].w=read();\n\t\n\tint front=0,tail=0,T=1;//T:\u5f53\u524d\u6267\u884c\u5230\u4e86T\u65f6\u523b\n\tmqueue[tail].l=1,mqueue[tail].r=K+1;\n\tfor(int i=1;i<=n;i++)\n\t\tmqueue[tail].c.push_back(i);\n\ttail++;\n\twhile(tail!=front)\n\t{\n\t\tif(mqueue[front].l==mqueue[front].r)\n\t\t{\n\t\t\tfor(int i=0;i<int(mqueue[front].c.size());i++)\n\t\t\t\tans[mqueue[front].c[i]]=mqueue[front].l;\n\t\t\tfront=(front+1)%(K+5000);\n\t\t\tcontinue;\n\t\t}\n\t\tint mid=(mqueue[front].l+mqueue[front].r)/2;\n\t\tif(T>mid)\n\t\t\tT=1,bit.Init();\n\t\tfor(;T<=mid;T++)\n\t\t\tif(op[T].l<=op[T].r)\n\t\t\t\tbit.Change(op[T].l,op[T].r,op[T].w);\n\t\t\telse\n\t\t\t\tbit.Change(op[T].l,m,op[T].w),\n\t\t\t\tbit.Change(1,op[T].r,op[T].w);\n\t\tvector <int> l,r;\n\t\tfor(int i=0;i<int(mqueue[front].c.size());i++)\n\t\t{\n\t\t\tlong long t_ans=0,now=mqueue[front].c[i];\n\t\t\tfor(int j=0;j<int(a[now].size());j++)\n\t\t\t{\n\t\t\t\tt_ans+=bit.Query(a[now][j]);\n\t\t\t\tif(t_ans>inf) break;\n\t\t\t}\n\t\t\tif(t_ans>=w[now])\n\t\t\t\tl.push_back(now);\n\t\t\telse\n\t\t\t\tr.push_back(now);\n\t\t}\n\t\tmqueue[tail].l=mqueue[front].l,mqueue[tail].r=mid,mqueue[tail++].c=l;\n\t\ttail%=(K+5000);\n\t\tmqueue[tail].l=mid+1,mqueue[tail].r=mqueue[front].r,mqueue[tail++].c=r;\n\t\ttail%=(K+5000);\n\t\tfront=(front+1)%(K+5000);\n\t}\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tif(ans[i]==K+1)\n\t\t\tprintf(\"NIE\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\",ans[i]);\n\t//cerr<<clock()-t<<endl;\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1553672477,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3527 \u3010[POI2011]MET-Meteors\u3011"
    }
]