[
    {
        "content": "\u8fdf\u5230\u4e86\u7684\u51fa\u9898\u4eba\u9898\u89e3\u3002\n\n------------\n\n\n\u90e8\u5206\u5206\u5982\u4e0b\uff1a\n\n- Subtask 2\uff1a\u679a\u4e3e\u4e00\u4e0b\u52a0\u54ea\u6761\u8fb9\uff0c\u7136\u540e\u6309\u7167\u6709\u5411\u56fe\u535a\u5f08\u53bb\u505a\u3002\n- Subtask 4\uff1a\u5728\u4e00\u4e2a\u81ea\u5df1\u80fd\u5230\u8fbe\u7684\u5fc5\u8d25\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u5230\u540e\u9762\u7684\u53e6\u4e00\u4e2a\u5fc5\u8d25\u70b9\u3002\u53ef\u4ee5\u540e\u7f00 min \u5904\u7406\u3002\n- Subtask 5\uff1a\u5148\u624b\u5219 0\uff0c\u540e\u624b\u5219 -1\u3002\n\n------------\n\n\u8003\u8651\u5fc5\u80dc\u70b9\u548c\u5fc5\u8d25\u70b9\u7684\u601d\u60f3\u3002\u5f53\u4e00\u4e2a\u70b9\u6307\u5411\u7684\u6240\u6709\u70b9\u90fd\u662f\u5fc5\u80dc\u70b9\uff0c\u8fd9\u4e2a\u70b9\u662f\u5fc5\u8d25\u70b9\u3002\u5426\u5219\u662f\u5fc5\u80dc\u70b9\u3002\u53f6\u5b50\u8282\u70b9\u662f\u5fc5\u8d25\u70b9\u3002\n\n\u5148\u4e0d\u8003\u8651\u52a0\u8fb9\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u662f\u5fc5\u80dc\u70b9\u8fd8\u662f\u5fc5\u8d25\u70b9\u3002\u63a5\u7740\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7684\u6539\u53d8\u4f1a\u4e0d\u4f1a\u5f71\u54cd\u5230\u6839\u7684\u6539\u53d8\u3002\n\n\u5148\u8003\u8651\u52a0\u8fb9\u5f62\u6210\u73af\u7684\u60c5\u51b5\uff0c\u662f\u4e0d\u4f1a\u4f7f\u5f97\u5fc5\u8d25\u53d8\u6210\u5fc5\u80dc\u7684\u3002\u53ea\u4f1a\u4f7f\u5c40\u9762\u53d8\u6210\u5e73\u5c40\u6216\u4e0d\u53d8\u3002[\u8bc1\u660e](https://www.luogu.com.cn/paste/tbca17f9)\u3002\n\n\u4e0d\u5f62\u6210\u73af\u7684\u60c5\u51b5\uff0c\u5c31\u662f $v$ \u4e0d\u5728 $u$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u3002**\u8003\u8651\u4e00\u4e2a $u$ \u6539\u53d8\u4f1a\u5f71\u54cd\u6839**\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u662f\u5fc5\u80dc\u70b9\uff0c\u80af\u5b9a\u662f\u65e0\u6cd5\u6539\u53d8\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u662f\u5fc5\u8d25\u70b9\uff0c\u53ea\u8981\u628a\u5b83\u8fde\u5230\u4e00\u4e2a\u5fc5\u8d25\u70b9\u4e0a\u53bb\uff0c\u5b83\u5c31\u80fd\u6539\u53d8\u3002\u8981\u8ba1\u7b97\u51fa\u6700\u5c0f\u7684\u4e0d\u5728\u8fd9\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u5fc5\u8d25\u70b9\u3002\n\n**\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u8981\u8ba1\u7b97\u51fa\u6700\u5c0f\u7684\u4e0d\u5728\u8fd9\u4e2a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u7684\u5fc5\u8d25\u70b9\u3002**\n\n- Subtask 3\uff1a\u6bcf\u6b21\u66b4\u529b\u626b\u4e00\u904d\u3002\n- Subtask 6\uff1a\u53d1\u73b0\u8981\u7ef4\u62a4\u5355\u70b9\u63d2\u5165\u3001\u5220\u9664\u548c\u6574\u4f53 min\uff0c\u7528 multiset \u7b49\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n- Subtask 7\uff1a\u5728\u6811\u4e0a\u8dd1\u4e24\u904d dfs\uff0c\u4e00\u904d\u4ece\u5de6\u5f80\u53f3\uff0c\u4e00\u904d\u4ece\u53f3\u5f80\u5de6\u3002\u6bcf\u6b21\u4fbf\u904d\u5386\u987a\u5e8f\u662f\u5148\u513f\u5b50\u518d\u7236\u4eb2\u3002\u4f1a\u53d1\u73b0\u5728\u7b2c\u4e00\u6b21\u904d\u5386 $x$ \u8282\u70b9\u524d\u7684\u6240\u6709\u70b9\u662f\u6811\u4e0a\u5728 $x$ \u5de6\u8fb9\u7684\u70b9\u548c $x$ \u5b50\u6811\u7684\u70b9\uff0c\u7b2c\u4e8c\u6b21\u904d\u5386 $x$ \u8282\u70b9\u524d\u7684\u6240\u6709\u70b9\u662f\u6811\u4e0a\u5728 $x$ \u53f3\u8fb9\u7684\u70b9\u548c $x$ \u5b50\u6811\u7684\u70b9\u3002\u4e24\u6b21\u7684\u5e76\u5c31\u662f\u4e0d\u5728 $x$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u70b9\u3002\u505a\u4e2a\u524d\u7f00 min \u5373\u53ef\u3002\n- \u4e5f\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u7684\u7ebf\u6027\u505a\u6cd5\u3002\n\n\n\u6b63\u89e3\u590d\u6742\u5ea6\u7ebf\u6027\u3002\u8c8c\u4f3c\u88ab\u5806\u7684 log \u8fc7\u53bb\u4e86\uff0c\u4f46\u662f\u6211\u4e0d\u60f3\u5361\u4e86\u3002\n\n\u4ee3\u7801\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u4f46\u662f\u601d\u8def\u7b97\u662f\u6e05\u6670\u7684\u3002\u5199\u5f97\u6bd4\u8f83\u4e11\uff0c\u5c31\u4e0d\u7ed9\u4ee3\u7801\u4e86\u3002",
        "postTime": 1616770317,
        "uid": 151475,
        "name": "Little09",
        "ccfLevel": 8,
        "title": "P7443 \u300cEZEC-7\u300d\u52a0\u8fb9 \u9898\u89e3"
    },
    {
        "content": "[\u70b9\u51fb\u6b64\u5904\u4ee5\u83b7\u5f97\u66f4\u4f73\u7528\u6237\u4f53\u9a8c](https://www.macesuted.cn/article/lg7443/)\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P7443)\n\n~~\u6bd4\u8d5b\u65f6\u4e00\u6025\u4ee5\u4e3a\u53ef\u4ee5\u52a0\u591a\u6761\u8fb9\u5bfc\u81f4\u6ca1\u5199\u51fa\u6765\uff08\uff08~~\n\n# \u5206\u6790\n\n\u8003\u8651 $f[i][j](1 \\le i \\le n,j \\in \\{0,1\\})$ \u8868\u793a\u5c06 $i$ \u53f7\u70b9\u53d8\u4e3a\u5148\u624b\u5fc5\u8d25/\u5fc5\u80dc\u6240\u9700\u8981\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u521d\u59cb\u65f6\u5148\u624b\u5fc5\u80dc\u7684\u70b9 $f[i][1]=0$\uff0c\u521d\u59cb\u65f6\u5148\u624b\u5fc5\u8d25\u7684\u70b9 $f[i][0]=0$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u52a0\u8fb9\u7684\u60c5\u51b5\u3002\u663e\u7136\u5982\u679c\u4e00\u4e2a\u5148\u624b\u5fc5\u8d25\u70b9\u8981\u4f5c\u4e3a\u8fd9\u6761\u52a0\u4e0a\u53bb\u7684\u8fb9\u7684\u8d77\u70b9\uff0c\u90a3\u4e48\u7ec8\u70b9\u4e00\u5b9a\u662f\u6811\u4e0a\u6240\u6709**\u975e\u7956\u5148**\u5148\u624b\u5fc5\u8d25\u70b9\u4e2d $B \\times a_i$ \u6700\u5c0f\u7684\u70b9\u3002\u56e0\u4e3a\u4e00\u4e2a\u5148\u624b\u5fc5\u8d25\u70b9\u8fde\u5230\u53e6\u4e00\u4e2a\u5148\u624b\u5fc5\u8d25\u70b9\u4e0a\u540e\uff0c\u8fd9\u4e2a\u70b9\u5c31\u4f1a\u53d8\u4e3a\u5148\u624b\u5fc5\u80dc\u70b9\u3002\u800c\u5148\u624b\u5fc5\u80dc\u70b9\u518d\u5f80\u5916\u8fde\u8fb9\u4e0d\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u5411\u81ea\u5df1\u7684\u4e00\u4e2a\u7956\u5148\u8fde\u8fb9\u4e5f\u5e76\u4e0d\u4f1a\u4f7f\u7b54\u6848\u66f4\u4f18\uff08\u663e\u7136\u5982\u679c\u4f60\u60f3\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u81ea\u5df1\u66f4\u4f18\uff0c\u5bf9\u624b\u5728\u4e0b\u4e00\u8f6e\u4e5f\u4f1a\u901a\u8fc7\u76f8\u540c\u7684\u65b9\u6cd5\u4f7f\u81ea\u5df1\u66f4\u4f18\uff0c\u9020\u6210\u65e0\u9650\u5faa\u73af\uff09\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5728 DFS \u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u3002\u5148\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u6240\u6709 $f[i][0]=0$ \u7684\u70b9\uff08\u5148\u624b\u5fc5\u8d25\u70b9\uff09\u7684 $f[i][1]$ \u8d4b\u4e0a\u503c\u3002\n\n\u63a5\u7740\u8003\u8651\u8f6c\u79fb\u3002\u5f53\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u5b69\u5b50\u8282\u70b9\u5747\u4e3a\u5fc5\u80dc\u70b9\u65f6\u8fd9\u4e2a\u70b9\u4e3a\u5fc5\u8d25\u70b9\uff1b\u5f53\u4e00\u4e2a\u70b9\u5b58\u5728\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\u4e3a\u5fc5\u8d25\u70b9\u65f6\u8fd9\u4e2a\u70b9\u4e3a\u5fc5\u80dc\u70b9\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u4e3a\u5fc5\u8d25\u70b9\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5fc5\u8d25\u7684\u5b69\u5b50\u8282\u70b9\uff0c\u7528\u5b83\u7684\u503c\u6765\u66f4\u65b0\u81ea\u5df1\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$$f[i][1]=\\min\\{f[son_i][0]\\}$$\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u8981\u4e3a\u5fc5\u80dc\u70b9\uff0c\u5219\u6240\u6709\u5b69\u5b50\u90fd\u5fc5\u987b\u4e3a\u5fc5\u8d25\u70b9\u3002\u5982\u679c\u539f\u6765\u6709\u4e24\u4e2a\u751a\u81f3\u66f4\u591a\u7684\u5b69\u5b50\u8282\u70b9\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u663e\u7136\u8fd9\u6b21\u5c31\u5c06\u65e0\u6cd5\u8f6c\u79fb\uff08\u56e0\u4e3a\u6211\u4eec\u6700\u591a\u53ea\u80fd\u8ba9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b69\u5b50\u8282\u70b9\u8f6c\u53d8\u72b6\u6001\uff09\u3002\u5982\u679c\u539f\u6765\u6ca1\u6709\u5b69\u5b50\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u5219\u8d4b\u521d\u503c\u65f6\u5df2\u7ecf\u8003\u8651\u8be5\u60c5\u51b5\u3002\u4ec5\u5f53\u6709\u4e00\u4e2a\u5b69\u5b50\u662f\u5148\u624b\u5fc5\u80dc\u65f6\u6211\u4eec\u9700\u8981\u5728\u8fd9\u91cc\u8fdb\u884c\u8f6c\u79fb\u3002\u4e0b\u9762\u4ee4 $son$ \u8868\u793a\u8fd9\u4e2a\u513f\u5b50\u3002\n\n$$f[i][0]=f[son][1]$$\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\n\n\u5b9e\u73b0\u5e76\u4e0d\u662f\u5f88\u7b80\u5355\u3002\n\n~~\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u80fd\u529b\u6bd4\u8f83\u5f31~~\n\n```cpp\n/**\n * @author Macesuted\n * @date 2021-03-22\n * \n * @copyright Copyright (c) 2021\n * \n */\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nusing io::getch;\nusing io::putch;\nusing io::read;\nusing io::write;\n\n#define maxn 200005\n#define inf 4000000000000000000LL\n\nvector<vector<int> > graph;\nint a[maxn];\nlong long f[maxn][2], minVal[maxn];\nint n, t;\nlong long A, B;\n\nvoid dfs(int p) {\n    for (vector<int>::iterator i = graph[p].begin(); i != graph[p].end(); i++) {\n        dfs(*i);\n        if (f[*i][0] == 0) f[p][1] = 0;\n        minVal[p] = min(minVal[p], minVal[*i]);\n    }\n    if (f[p][1]) f[p][0] = 0, minVal[p] = min(minVal[p], B * a[p]);\n    return;\n}\nvoid update(int p, long long val) {\n    long long best1 = inf, best2 = inf;\n    for (vector<int>::iterator i = graph[p].begin(); i != graph[p].end(); i++)\n        if (minVal[*i] < best1)\n            best2 = best1, best1 = minVal[*i];\n        else if (minVal[*i] < best2)\n            best2 = minVal[*i];\n    int cnt1 = 0;\n    long long cntVal = 0;\n    for (vector<int>::iterator i = graph[p].begin(); i != graph[p].end(); i++) {\n        update(*i, min(val, minVal[*i] == best1 ? best2 : best1));\n        f[p][1] = min(f[p][1], f[*i][0]);\n        if (!f[*i][0]) {\n            cnt1++;\n            cntVal = f[*i][1];\n        }\n    }\n    for (vector<int>::iterator i = graph[p].begin(); i != graph[p].end(); i++)\n        val = min(val, minVal[*i]);\n    f[p][1] = min(f[p][1], A * a[p] + val);\n    if (cnt1 == 1) f[p][0] = min(f[p][0], cntVal);\n    return;\n}\n\nint main() {\n    int T = read<int>();\n    while (T--) {\n        n = read<int>(), t = read<int>(), A = read<long long>(), B = read<long long>();\n\n        for (register int i = 1; i <= n; i++) f[i][0] = f[i][1] = minVal[i] = inf;\n\n        graph.resize(n + 1);\n        for (register int i = 2; i <= n; i++) graph[read<int>()].push_back(i);\n        for (register int i = 1; i <= n; i++) a[i] = read<int>();\n\n        dfs(1), update(1, inf);\n\n        write(f[1][!t] == inf ? -1 : f[1][!t]), putch('\\n');\n\n        graph.clear();\n    }\n    return 0;\n}\n```",
        "postTime": 1616743678,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P7443"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u4e2a\u4eba\u535a\u5ba2\uff1a[Link](https://www.watertomato.com/p7443-%e3%80%8cezec-7%e3%80%8d%e5%8a%a0%e8%be%b9-%e9%a2%98%e8%a7%a3/)\u3002\n\nupdate 21/3/24\uff1a\u66f4\u65b0\u4e86\u90e8\u5206 latex\u3002\n\n## \u9898\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7443)\n\n\u6811\u4e0a\u7684\u68cb\u5b50\u535a\u5f08\uff0c\u6bcf\u4e2a\u70b9\u6709\u6743\u503c\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0\u4e00\u6761\u8fb9\u4ee5\u8bd5\u56fe\u53cd\u8d25\u4e3a\u80dc\uff0c\u4e0d\u540c\u7684\u52a0\u8fb9\u65b9\u6cd5\u6839\u636e\u6743\u503c\u6709\u4e00\u4e2a\u4ee3\u4ef7\uff0c\u9700\u8981\u6700\u5c0f\u5316\u8fd9\u4e2a\u4ee3\u4ef7\u3002\n\n## \u89e3\u6790\n\n\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u70b9\u5148\u624b\u5fc5\u8d25\u662f lose\uff0c\u5148\u624b\u5fc5\u80dc\u662f win\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u53f6\u5b50\u7ed3\u70b9\u4e00\u5b9a\u662f \u200blose\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\uff0c\u53ea\u8981\u5b83\u6709\u4e00\u4e2a\u513f\u5b50\u662f \u200blose\uff0c\u5b83\u5c31\u662f win\uff0c\u5426\u5219\uff0c\u8be5\u7ed3\u70b9\u4e5f\u662f lose\u3002\u4e00\u904d dfs \u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u521d\u59cb\u72b6\u6001\uff0c\u4ece\u800c\u5224\u65ad\u662f\u5426\u8f93\u51fa\u96f6\u3002\n\n\u5bf9\u4e8e\u8f93\u51fa\u975e\u96f6\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u8fd9\u68f5\u5c1a\u672a\u52a0\u8fb9\u7684\u6811\uff0c\u4ece\u8d77\u70b9\u5f00\u59cb\u8d70\u7684\u8bdd\uff0cwin \u7ed3\u70b9\u4e00\u5b9a\u662f\u5bf9\u65b9\u4f1a\u8d70\uff0c\u4e14\u4f1a\u8d70\u5411\u4e00\u4e2a lose \u7ed3\u70b9\uff0c\u800c lose \u7ed3\u70b9\u65f6\u6211\u4eec\u5728\u8d70\u3002\u6211\u4eec\u8003\u8651\u600e\u4e48\u8fde\u8fb9\u3002\u663e\u7136\uff0c\u6211\u4eec\u4f1a\u4ece\u4e00\u4e2a lose \u7ed3\u70b9\u5411\u5916\u8fde\u8fb9\uff0c\u56e0\u4e3a win\u200b \u7ed3\u70b9\u662f\u5bf9\u65b9\u5728\u8d70\uff0c\u8fde\u4e86\u8fb9\u662f\u6ca1\u610f\u4e49\u7684\u3002\n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u4e00\u5b9a\u4e0d\u4f1a\u8fde\u4e00\u6761\u8fd4\u7956\u8fb9\u3002\u56e0\u4e3a\u6211\u4eec\u8fde\u4e86\u8fd4\u7956\u8fb9\u4e4b\u540e\uff0c\u5982\u679c\u8d70\u5230\u4e00\u4e2a win \u7ed3\u70b9\uff0c\u5c31\u662f\u5bf9\u65b9\u5728\u8d70\uff0c\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u80dc\u5229\uff0c\u5982\u679c\u8fde\u5230\u4e00\u4e2a lose\u200b \u7ed3\u70b9\uff0c\u90a3\u4e48\u5c31\u4f7f\u5bf9\u65b9\u53d8\u6210\u4e86\u6211\u4eec\u5728\u90a3\u4e2a\u70b9\u65f6\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5bf9\u65b9\u8d70\u5230\u8fde\u51fa\u8fb9\u7684\u8fd9\u4e2a\u7ed3\u70b9\u65f6\u53c8\u53ef\u4ee5\u901a\u8fc7\u8fd4\u7956\u8fb9\u8d70\u5230\u7956\u5148\uff0c\u6e38\u620f\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u7ed3\u675f\u3002\n\n\u56e0\u6b64\uff0c\u5728\u653e\u5f03\u4e86\u8fd4\u7956\u8fb9\u4e4b\u540e\uff0c\u6211\u4eec\u8fde\u5b8c\u4e00\u6761\u8fb9\u540e\uff0c\u80af\u5b9a\u4ecd\u7136\u662f\u4e00\u5f20 DAG\uff08\u867d\u7136\u4e0d\u662f\u6811\u4e86\uff09\uff0c\u663e\u7136\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fde\u5411\u4e00\u6761 lose\u200b \u8fb9\uff0c\u5e76\u8d70\u5230\u90a3\u6761\u8fb9\uff0c\u5c31\u53ef\u4ee5\u83b7\u80dc\u3002\n\n\u63a5\u7740\u8003\u8651\u600e\u4e48\u4f7f\u4ee3\u4ef7\u6700\u5c0f\u3002\u6211\u4eec\u4ece $1$ \u53f7\u70b9\u5f00\u59cb dfs\uff0cdfs \u65f6\u6211\u4eec\u8d70\u5230\u82e5\u5e72\u4e2a\u70b9\uff0c\u5982\u679c\u662f\u4e00\u4e2a lose \u70b9\uff0c\u90a3\u4e48\u5c31\u662f\u6211\u4eec\u8d70\uff0c\u6211\u4eec\u5c06\u4ed6\u8bd5\u56fe\u8fde\u5411\u975e\u7956\u70b9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\uff1b\u5982\u679c\u662f\u4e00\u4e2a win \u70b9\uff0c\u90a3\u4e48\u662f\u5bf9\u65b9\u5728\u8d70\uff0c\u9996\u5148\u4ed6\u80af\u5b9a\u4e0d\u4f1a\u5411 win \u70b9\u8d70\uff0c\u7136\u540e\u6211\u4eec\u89c2\u5bdf\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u4e2d\u6709\u51e0\u4e2a lose \u70b9\uff0c\u5982\u679c\u6709\u81f3\u5c11\u4e24\u4e2a\uff0c\u90a3\u5c31\u4e0d\u7528\u7ee7\u7eed dfs \u4e0b\u53bb\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8fd9\u4e2a\u70b9\u540e\u9762\u64cd\u4f5c\u4e00\u5b9a\u8f93\uff0c\u65e0\u8bba\u6211\u4eec\u600e\u4e48\u52a0\u8fb9\uff0c\u4ed6\u90fd\u53ef\u4ee5\u9009\u62e9\u8d70\u5b50\u6811\u4e2d\u6ca1\u6709\u52a0\u8fb9\u7684\u90a3\u4e2a lose \u70b9\u3002\u5982\u679c\u513f\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a lose \u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u8d70\u90a3\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u63a5\u7740\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u600e\u4e48\u7ef4\u62a4\u975e\u7956\u70b9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\uff1fdead_X \u8bf4\u53ef\u4ee5\u4e24\u904d dfs \u6216 ST \u8868\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u4f1a\u4e24\u904d dfs \uff0c\u4e5f\u4e0d\u60f3\u5199 ST \u8868\u3002\u4e8e\u662f\u6211\u7528\u4e86\u53e6\u4e00\u79cd\u7ef4\u62a4\u65b9\u6cd5\uff1a\u7b2c\u4e00\u904d dfs \u65f6\uff0c\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a lose \u70b9\u6dfb\u52a0\u5230\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u7b2c\u4e8c\u904d dfs \u65f6\uff0c\u6211\u4eec\u6bcf dfs \u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u5c06\u8fd9\u4e2a\u70b9\u6807\u8bb0\u4e00\u4e0b\uff0c\u7136\u540e\u6211\u4eec\u5f39\u51fa\u4f18\u5148\u961f\u5217\u961f\u9996\u7684\u82e5\u5e72\u4e2a\u6807\u8bb0\u8fc7\u7684\u5143\u7d20\uff0c\u518d\u53d6\u5f39\u51fa\u540e\u7684\u961f\u9996\uff0c\u8fd9\u4e2a\u5143\u7d20\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\u975e\u7956\u70b9\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\uff0c\u7136\u540e\u518d dfs \u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5c06\u6807\u8bb0\u53d6\u6d88\uff0c\u4e14\u7531\u4e8e\u8fd9\u4e2a\u70b9\u53ef\u80fd\u88ab\u5f39\u51fa\u4e86\uff0c\u6211\u4eec\u7d22\u6027\uff1a\u5982\u679c\u8fd9\u4e2a\u70b9\u662f lose \u7684\u8bdd\uff0c\u5c31\u518d\u6b21\u628a\u8fd9\u4e2a\u70b9\u6254\u8fdb\u4f18\u5148\u961f\u5217\u91cc\u53bb\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\uff0c\u4f46\u662f\u5e76\u8dd1\u4e0d\u6ee1\uff0c\u56e0\u6b64\u901a\u8fc7\u8fd9\u9898\u4e0d\u6210\u95ee\u9898\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define getchar()(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nusing namespace std;\nconst int N=2e5+5;\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate <typename T>\ninline void read(T& r) {//\u5feb\u8bfb\n    r=0;bool w=0; char ch=getchar();\n    while(ch<'0'||ch>'9') w=ch=='-'?1:0,ch=getchar();\n    while(ch>='0'&&ch<='9') r=r*10+(ch^48), ch=getchar();\n    r=w?-r:r;\n}\nint T,n,t,A,B,a[N];\nstruct edge{\n\tint to,nxt;\n}e[N<<1];\nint head[N],cnt,fl[N];//1=win 0=lose\ninline void add(int u,int v){\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nstruct node{\n\tint id,val;\n\tbool operator<(const node &x)const{\n\t\treturn x.val<val;\n\t}\n};\npriority_queue<node> q;\nbool vis[N];\ninline void dfs1(int u){//dfs1 \u5224\u65ad\u521d\u59cb\u72b6\u6001\n\tfl[u]=0;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tdfs1(v);if(!fl[v]) fl[u]=1;\n\t}\n\tif(!fl[u]) q.push((node){u,a[u]});\n}\nint ans;\ninline void dfs2(int u){\n\tvis[u]=1;//\u6807\u8bb0\u4e00\u4e0b\n\tif(fl[u]==0){//lose \u70b9\uff0c\u81ea\u5df1\u8d70\n\t\twhile(!q.empty()&&vis[q.top().id]) q.pop();\n\t\tif(q.empty()){//\u6ca1\u6709\u53ef\u4ee5\u7528\u7684\u70b9\u4e86\u5c31\u9000\u51fa\n\t\t\tvis[u]=0;\n\t\t\tif(!fl[u]) q.push((node){u,a[u]});\n\t\t\treturn;\n\t\t}\n\t\tans=min(ans,A*a[u]+B*a[q.top().id]);\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;dfs2(v);\n\t\t}\n\t}\n\telse{//win \u70b9\uff0c\u5bf9\u65b9\u8d70\n\t\tint CNT=0;\n\t\tfor(int i=head[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(fl[v]) continue;\n\t\t\tCNT++;\n\t\t}\n\t\tif(CNT>=2) return;//\u6709\u4e24\u4e2a lose \u513f\u5b50\uff0c\u9000\u51fa\n\t\tfor(int i=head[u];i;i=e[i].nxt){//\u4ec5\u6709\u4e00\u4e2a lose \u513f\u5b50\uff0c\u8d70\n\t\t\tint v=e[i].to;\n\t\t\tif(fl[v]) continue;dfs2(v);\n\t\t}\n\t}\n\tvis[u]=0;//\u64a4\u9500\u6807\u8bb0\n\tif(!fl[u]) q.push((node){u,a[u]});//\u8fd9\u4e2a\u70b9\u5904\u7406\u5b8c\u4e86\u518d\u52a0\u56de\u53bb\n}\nsigned main(){\n\tread(T);\n\twhile(T--){\n\t\twhile(!q.empty()) q.pop();\n\t\tread(n);read(t);read(A);read(B);cnt=0;ans=2e18+5;\n\t\tfor(int i=1;i<=n;i++) head[i]=0;\n\t\tfor(int i=1;i<=n;i++) vis[i]=0;\n\t\tfor(int i=2,x;i<=n;i++){\n\t\t\tread(x);add(x,i);\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tread(a[i]);\n\t\t}\n\t\tdfs1(1);\n\t\tif(t==0){\n\t\t\tif(fl[1]==1){//\u521d\u59cb\u5c31\u80fd\u8d62\n\t\t\t\tprintf(\"0\\n\");continue;\n\t\t\t}\n\t\t\tdfs2(1);\n\t\t\tif(ans==2e18+5) printf(\"-1\\n\");//ans \u6ca1\u6709\u53ef\u4ee5\u66f4\u65b0\u7684\uff0c\u8f93\u51fa -1\n\t\t\telse printf(\"%lld\\n\",ans);\n\t\t}\n\t\telse{\n\t\t\tif(fl[1]==0){\n\t\t\t\tprintf(\"0\\n\");continue;\n\t\t\t}\n\t\t\tdfs2(1);\n\t\t\tif(ans==2e18+5) printf(\"-1\\n\");\n\t\t\telse printf(\"%lld\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1616508179,
        "uid": 195229,
        "name": "water_tomato",
        "ccfLevel": 7,
        "title": "P7443 \u300cEZEC-7\u300d\u52a0\u8fb9 \u9898\u89e3"
    },
    {
        "content": "B\u00b7\u4e0d\u4f1a\u6e05\u6570\u7ec4\u00b7H\n\n\u9996\u5148\u6211\u4eec\u6c42\u51fa\u539f\u6811\u7684 $SG$ \u51fd\u6570\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5f88\u5bb9\u6613\uff1a$SG(\\text{leaves})=0,SG(x)\\text{ or\\_eq }SG(y\\in\\text{son}(x))\\text{ xor }1$\u3002\n\n\u7136\u540e\u8003\u8651\u679a\u4e3e\u9644\u52a0\u8fb9\u7684\u8d77\u70b9 $u$\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7ed3\u8bba\uff1a\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fde\u8fd4\u7956\u8fb9\u3002\n\n\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff08\u53ea\u8003\u8651 Alice \u5148\u624b\uff0c\u540e\u624b\u540c\u7406\uff09\uff0c\u5f53 $SG(u)=1$ \u4e5f\u5c31\u662f\u5728 $u$ \u6211\u4eec\u662f\u5148\u624b\u5fc5\u80dc\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fde\u8fb9\uff1b\u5f53 $SG(u)=0$\uff0c\u6b64\u65f6\u5148\u624b\u5fc5\u8d25\uff0c\u5982\u679c\u4f60\u8fde\u4e00\u4e2a\u5076\u73af\u6ca1\u6709\u610f\u4e49\uff0c\u8fde\u4e00\u4e2a\u5947\u73af\u7684\u8bdd Alice \u8dd1\u5b8c\u6210\u5fc5\u80dc\u5219 Bob \u4e5f\u53ef\u4ee5\u8dd1\u4e00\u6b21\u4ece\u5fc5\u8d25\u53d8\u6210\u5fc5\u80dc\uff0c\u4f1a\u5f62\u6210\u65e0\u610f\u4e49\u7684\u65e0\u9650\u5faa\u73af\uff0c\u8bc1\u6bd5\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u7ec8\u70b9\u5c31\u662f**\u6811\u4e0a\u9664\u4e86 $u$ \u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u6ee1\u8db3 $SG$ \u51fd\u6570\u503c\u4e3a $0$ \u7684\u70b9\u4e2d\u7684\u4e00\u4e2a**\uff0c\u6211\u4eec\u5f53\u7136\u8d2a\u5fc3\u9009\u62e9\u70b9\u6743\u6700\u5c0f\u7684\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f $1~\\log$ \u7684\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u8fd8\u6709\u5c31\u662f\u7ef4\u62a4\u6700\u5c0f\u548c\u6b21\u5c0f\uff0c\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n$\\mathcal{O}(n\\log_{2}n)$ \uff0860 points\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nvector<int> pri;\nLL T,n,t,A,B,poi[200010],head[200010],nxt[400010],to[400010],cntot,sg[200010],mx,expoi[200010],mp[200010];\nvoid dfs(LL x){sg[x]=0; for(LL i=head[x];i;i=nxt[i])\tdfs(to[i]),sg[x]|=(!sg[to[i]]);}\nLL nodes[800010];\nvoid ins(LL l,LL r,LL x,LL pos,LL val)\n{\n\tif(l^r)\n\t{\n\t\tLL mid=(l+r)>>1;\n\t\tif(mid>=pos)\tins(l,mid,x<<1,pos,val);\n\t\telse\tins(mid+1,r,x<<1|1,pos,val);\n\t\tnodes[x]=nodes[x<<1]+nodes[x<<1|1];\n\t}\n\telse\tnodes[x]+=val;\n}\nLL find(LL l,LL r,LL x)\n{\n\tif(l^r)\n\t{\n\t\tLL mid=(l+r)>>1;\n\t\tif(nodes[x<<1])\treturn find(l,mid,x<<1);\n\t\telse\treturn find(mid+1,r,x<<1|1);\n\t}\n\telse\treturn mp[l];\n}\nLL getans(LL x,LL ty)\n{\n\tif(!ty)\n\t{\n\t\tif(!sg[x])\n\t\t{\n\t\t\tins(1,mx,1,expoi[x],-1);\n\t\t\tLL s=find(1,mx,1);\n\t\t\tif(!nodes[1])\ts=-1;\n\t\t\tif(s==-1)\treturn ins(1,mx,1,expoi[x],1),-1; \n\t\t\tLL res=A*poi[x]+B*s,tmp=0;\n\t\t\tfor(LL i=head[x];i;i=nxt[i]) res=min(res,(tmp=getans(to[i],ty^1))==-1?LL(1e18):tmp);\n\t\t\tins(1,mx,1,expoi[x],1);\n\t\t\treturn res;\n\t\t}\n\t\telse\treturn 0;\n\t}\n\telse\n\t{\n\t\tLL num=0;\n\t\tfor(LL i=head[x];i;i=nxt[i])\tif(!sg[to[i]])\t++num;\n\t\tif(num>1)\treturn -1;\n\t\tLL tmp=1e18;\n\t\tfor(LL i=head[x];i;i=nxt[i]) if(!sg[to[i]])\ttmp=min(tmp,getans(to[i],ty^1));\n\t\treturn tmp;\n\t}\n}\nint main()\n{\n\tscanf(\"%lld\",&T); while(T--)\n\t{\n\t\tscanf(\"%lld %lld %lld %lld\",&n,&t,&A,&B);\n\t\tfor(LL i=2,f;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%lld\",&f);\n\t\t\tnxt[++cntot]=head[f];\n\t\t\tto[cntot]=i;\n\t\t\thead[f]=cntot;\n\t\t}\n\t\tfor(LL i=1;i<=n;++i)\tscanf(\"%lld\",&poi[i]),mx=max(mx,poi[i]),pri.push_back(poi[i]);\n\t\tsort(pri.begin(),pri.end()),pri.erase(unique(pri.begin(),pri.end()),pri.end());\n\t\tmx=pri.size();\n\t\tfor(LL i=1;i<=n;++i)\tmp[expoi[i]=lower_bound(pri.begin(),pri.end(),poi[i])-pri.begin()+1]=poi[i];\n\t\tdfs(1);\n\t\tif(sg[1]^t)\tputs(\"0\");\n\t\telse\n\t\t{\n\t\t\tfor(LL i=1;i<=n;++i)\tif(!sg[i]) ins(1,mx,1,expoi[i],1);\n\t\t\tprintf(\"%lld\\n\",getans(1,t));\n\t\t}\n\t\tcntot=0,pri.clear();\n\t\tfor(LL i=1;i<=n;++i)\thead[i]=poi[i]=expoi[i]=0;\n\t\tfor(LL i=1;i<=(n<<2);++i)\tnodes[i]=0;\n\t}\n\treturn 0;\n}\n```\n\n$\\mathcal{O}(n)$ \uff08100 points\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst LL INF=1e18;\nLL T,n,t,A,B,poi[200010],head[200010],nxt[400010],to[400010],cntot,sg[200010],_fmin[200010],smin[200010];\nvoid dfs(LL x)\n{\n\tsg[x]=0,_fmin[x]=smin[x]=INF;\n\tfor(LL i=head[x];i;i=nxt[i])\n\t{\n\t\tLL y=to[i];\n\t\tdfs(y),sg[x]|=(!sg[y]);\n\t\tif(_fmin[y]<_fmin[x])\n\t\t{\n\t\t\tsmin[x]=min(_fmin[x],smin[y]);\n\t\t\t_fmin[x]=_fmin[y];\n\t\t}\n\t}\n\tif(!sg[x]&&poi[x]<_fmin[x])\tsmin[x]=_fmin[x],_fmin[x]=poi[x];\n\telse if(!sg[x]&&poi[x]<smin[x])\tsmin[x]=poi[x];\n}\nLL getans(LL x,LL ty,LL ho)\n{\n\tif(!ty)\n\t{\n\t\tif(!sg[x])\n\t\t{\n\t\t\tLL tmp=ho,fmn=INF,smn=INF,pos=0;\n\t\t\tfor(LL i=head[x];i;i=nxt[i])\n\t\t\t{\n\t\t\t\tLL y=to[i];\n\t\t\t\ttmp=min(tmp,_fmin[y]);\n\t\t\t\tif(_fmin[y]<fmn)\tsmn=fmn,fmn=_fmin[y],pos=y;\n\t\t\t\telse if(_fmin[y]<smn)\tsmn=_fmin[y];\n\t\t\t}\n\t\t\tif(tmp==INF)\treturn -1;\n\t\t\tLL res=A*poi[x]+B*tmp;\n\t\t\tfor(LL i=head[x];i;i=nxt[i])\n\t\t\t{\n\t\t\t\tLL y=to[i];\n\t\t\t\tLL extmp=0;\n\t\t\t\tif(pos^y)\textmp=getans(y,ty^1,min(ho,fmn));\n\t\t\t\telse\textmp=getans(y,ty^1,min(ho,smn));\n\t\t\t\tif(~extmp)\tres=min(res,extmp);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\telse\treturn 0;\n\t}\n\telse\n\t{\n\t\tLL num=0;\n\t\tfor(LL i=head[x];i;i=nxt[i])\tif(!sg[to[i]])\t++num;\telse ho=min(ho,_fmin[to[i]]);\n\t\tif(num>1)\treturn -1;\n\t\tfor(LL i=head[x];i;i=nxt[i]) if(!sg[to[i]])\treturn getans(to[i],ty^1,ho);\n\t}\n}\nint main()\n{\n\tscanf(\"%lld\",&T); while(T--)\n\t{\n\t\tscanf(\"%lld %lld %lld %lld\",&n,&t,&A,&B);\n\t\tfor(LL i=2,f;i<=n;++i)\n\t\t{\n\t\t\tscanf(\"%lld\",&f);\n\t\t\tnxt[++cntot]=head[f];\n\t\t\tto[cntot]=i;\n\t\t\thead[f]=cntot;\n\t\t}\n\t\tfor(LL i=1;i<=n;++i)\tscanf(\"%lld\",&poi[i]);\n\t\t_fmin[0]=INF,dfs(1);\n\t\tif(sg[1]^t)\tputs(\"0\");\n\t\telse\tprintf(\"%lld\\n\",getans(1,t,INF));\n\t\tcntot=0;\n\t\tfor(LL i=1;i<=n;++i)\thead[i]=poi[i]=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616247334,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "solution-p7443"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4e0d\u52a0\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u5728\u4f55\u65f6\u4e00\u68f5\u6811\u6ee1\u8db3\u5148\u624b\u5fc5\u80dc\uff1f\n\n**\u5f53\u4e14\u4ec5\u5f53 TA \u7684\u6240\u6709\u513f\u5b50\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002**\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u5f80\u5148\u624b\u5fc5\u8d25\u7684\u513f\u5b50\u90a3\u91cc\u8d70\uff0c\u5bf9\u624b\u5c31\u5b8c\u86cb\u4e86\u3002\n\n**\u5982\u679c TA \u7684\u6bcf\u4e00\u4e2a\u513f\u5b50\u90fd\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u90a3\u4ed6\u5c31\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002**\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u4f60\u5f80\u54ea\u91cc\u8d70\uff0c\u4f60\u90fd\u53ea\u80fd\u773c\u7741\u7741\u770b\u7740\u5bf9\u624b\u83b7\u80dc\u3002\n\n\u90a3\u4e48\u8fb9\u754c\u6761\u4ef6\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f\n\n**\u663e\u800c\u6613\u89c1\uff0c\u53f6\u5b50\u8282\u70b9\u4e00\u5b9a\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002**\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u51fa\u6765\u6bcf\u4e00\u4e2a\u70b9\u662f\u5148\u624b\u5fc5\u80dc\u8fd8\u662f\u5148\u624b\u5fc5\u8d25\u3002\n\n\u7531\u4e8e\u4ece\u6839\u51fa\u53d1\uff0c\u6240\u4ee5\u5982\u679c**\u6839\u8282\u70b9\u5148\u624b\u5fc5\u80dc**\uff0c\u800c\u4e14 **Alice \u662f\u5148\u624b**\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $0$\u3002\n\n\u5982\u679c**\u6839\u8282\u70b9\u5148\u624b\u5fc5\u8d25**\uff0c\u800c\u4e14 **Alice \u662f\u540e\u624b**\uff0c\u90a3\u4e48\u7b54\u6848\u4e5f\u662f $0$\u3002\n\n\u5982\u679c\u4e0d\u662f\u4e0a\u8ff0\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\u5462\uff1f\n\n\u52a0\u8fb9\uff01\u52a0\u8fb9\uff01\u52a0\u8fb9\uff01\n\n\u52a0\u7684\u8fb9\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u5462\uff1f\n\n\u9996\u5148\uff0c\u8fd9\u6761\u8fb9**\u4e0d\u80fd\u6784\u6210\u73af**\uff0c\u5426\u5219\u6e38\u620f\u5c31\u7ed3\u675f\u4e0d\u4e86\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c**\u4e0d\u80fd\u4ece\u5b50\u5b59\u8fde\u5230\u7956\u5148**\u3002\n\n\u5176\u6b21\uff0c\u8fd9\u6761\u8fb9\u5fc5\u987b**\u53ea\u80fd\u8ba9 Alice \u8d70**\u3002\n\n\u518d\u6b21\uff0cAlice \u5fc5\u987b\u80fd\u5230\u8fbe**\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9**\u3002\n\n\u6700\u540e\uff0c\u7531\u4e8e Alice \u8d70\u5b8c\u8fd9\u6761\u8fb9\u4ee5\u540e\u662f Bob \u8d70\uff0c\u6240\u4ee5\u8fd9\u6761\u8fb9\u7684**\u7ec8\u70b9\u4e00\u5b9a\u8981\u662f\u5148\u624b\u5fc5\u8d25\u7684**\u3002\n\n\u7efc\u4e0a\uff1a\n\n1. Alice \u5fc5\u987b\u53ef\u4ee5\u5230\u8fbe\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\u3002\n1. \u8fd9\u6761\u8fb9\u7684\u7ec8\u70b9\u4e00\u5b9a\u8981\u662f\u5148\u624b\u5fc5\u8d25\u7684\u70b9\u3002\n1. \u8fd9\u6761\u8fb9\u4e0d\u80fd\u4ece\u5b50\u5b59\u8fde\u5230\u7956\u5148\u3002\n\n\u540e\u4e24\u6761\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u4f46\u662f\u7b2c\u4e00\u6761\u5c31\u6709\u4e9b\u96be\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cBob \u4f1a~~\u4e0d\u8bb2\u6b66\u5fb7~~\u4e3b\u52a8\u907f\u5f00 Alice \u8fde\u7684\u8fb9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c DFS\uff0c\u6a21\u62df Alice \u548c Bob \u8f6e\u6d41\u8d70\u7684\u8fc7\u7a0b\u3002\n\n1. \u5982\u679c\u5f53\u524d\u662f Alice \u8d70\uff0c\u90a3 TA \u53ef\u4ee5\u5411\u6240\u6709\u65b9\u5411\u8d70\u3002\n1. \u5982\u679c\u5f53\u524d\u662f Bob \u8d70\uff0c\u800c\u4e14\u8be5\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u6216\u8005\u6240\u6709\u513f\u5b50\u4e2d\u53ea\u6709\u4e00\u4e2a\u53ef\u4ee5\u8ba9 Bob \u83b7\u80dc\uff0c\u90a3 TA \u53ea\u80fd\u8d70\u8fd9\u91cc\u3002\n1. \u5982\u679c\u5f53\u524d\u662f Bob \u8d70\uff0c\u800c\u4e14\u8be5\u8282\u70b9\u7684\u513f\u5b50\u4e2d\u6709\u591a\u4e2a\u53ef\u4ee5\u4f7f Bob \u83b7\u80dc\uff0c\u90a3\u4e48\u5c31\u505c\u6b62 DFS \uff0c\u56e0\u4e3a Bob \u4f1a\u6311 Alice \u6ca1\u6709\u52a0\u8fb9\u7684\u5b50\u6811\u8d70\u3002\n\n\u5982\u679c**\u6ca1\u6709\u8fb9\u7b26\u5408\u4e0a\u8ff0\u6761\u4ef6**\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $-1$\u3002\n\n\u5426\u5219\uff0c\u7b54\u6848\u5c31\u662f\u5176\u4e2d**\u4ee3\u4ef7\u6700\u5c0f**\u7684\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7\u3002\n\n\u7528**\u8d2a\u5fc3**\uff0c\u5177\u4f53\u65b9\u6cd5\u5c31\u4e0d\u5c55\u5f00\u8bf4\u4e86\u3002\n\n\u53e6\u5916\uff0c\u8bf4\u660e\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\uff1a`win` \u8868\u793a\u4f7f\u5f97\u5148\u624b\u5fc5\u80dc\u7684**\u65b9\u6848\u6570**\u3002\n\n`vis` \u8868\u793a\u8be5\u8282\u70b9 **Alice \u662f\u5426\u53ef\u8fbe**\u3002\n\n\u6211\u4f7f\u7528**\u5de6\u5b50\u53f3\u5144**\u7684\u65b9\u6cd5\u5b58\u50a8\u8fd9\u68f5\u6811\u3002\n\n\u8fd8\u6709\uff1a\n\n$$\\Large{\\texttt{\u5341\u5e74 OI \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 long long \u89c1\u7956\u5b97!!!}}$$\n\n```cpp\n#include <bits/stdc++.h>\n#define _ 5000010\nusing namespace std;\nint T, n, t, f[_], w[_], dep[_], lson[_], rbro[_], mxu[_], mxv[_], siz[_], win[_];\nbool vis[_];\nlong long a, b, ans;\n\ninline int read()\n{\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\ts=s*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn s*f;\n}\n\ninline void write(long long x)\n{\n    if(x<0){\n    \tputchar('-');\n\t\tx=-x;\n\t}\n    if(x>9) \n\t\twrite(x/10);\n    putchar(x%10+'0');\n}\n\nvoid dfs(int p, bool a) {\n\tvis[p] = a;\n\tif (siz[p] == 0) return;\n\tif (a || win[p] == 1) {\n\t\tfor (int i = lson[p]; i; i = rbro[i]) if (a || !win[i]) dfs(i, !a);\n\t}\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tT = read();\n\twhile (T--) {\n\t\tn = read();\n\t\tt = read();\n\t\ta = read();\n\t\tb = read();\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tvis[i] = dep[i] = win[i] = siz[i] = lson[i] = rbro[i] = 0;\n\t\t\tmxu[i] = mxv[i] = 0x3F3F3F3F;\n\t\t}\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\tf[i] = read();\n\t\t\tdep[i] = dep[f[i]] + 1;\n\t\t\trbro[i] = lson[f[i]];\n\t\t\tlson[f[i]] = i;\n\t\t\tsiz[f[i]]++;\n\t\t}\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tw[i] = read();\n\t\t}\n\t\tfor (int i = n; i >= 1; i--) {\n\t\t\tif (!win[i]) win[f[i]]++;\n\t\t}\n\t\tif ((win[1]!=0) ^ t) {\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tdfs(1, !t);\n\t\tans = 0x3F3F3F3F3F3F3F3Fll;\n\t\tfor (int i = n; i >= 1; i--) {\n\t\t\tif (vis[i]) mxu[i] = min(mxu[i], w[i]);\n\t\t\tif (!win[i]) mxv[i] = min(mxv[i], w[i]);\n\t\t\tif (siz[i]) {\n\t\t\t\tint mmxu = mxu[lson[i]], mmxv = mxv[lson[i]];\n\t\t\t\tfor (int j = rbro[lson[i]]; j; j = rbro[j]) {\n\t\t\t\t\tif (mmxu != 0x3F3F3F3F && mxv[j] != 0x3F3F3F3F) ans = min(ans, a*mmxu+b*mxv[j]);\n\t\t\t\t\tif (mmxv != 0x3F3F3F3F && mxu[j] != 0x3F3F3F3F) ans = min(ans, a*mxu[j]+b*mmxv);\n\t\t\t\t\tmmxu = min(mmxu, mxu[j]);\n\t\t\t\t\tmmxv = min(mmxv, mxv[j]);\n\t\t\t\t}\n\t\t\t\tmxu[i] = min(mxu[i], mmxu);\n\t\t\t\tmxv[i] = min(mxv[i], mmxv);\n\t\t\t\tif (vis[i] && mmxv != 0x3F3F3F3F) ans = min(ans, a*w[i]+b*mmxv);\n\t\t\t}\n\t\t}\n\t\tif (ans != 0x3F3F3F3F3F3F3F3Fll) write(ans), puts(\"\");\n\t\telse puts(\"-1\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1616511153,
        "uid": 153422,
        "name": "0x3F",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7443 \u3010\u300cEZEC-7\u300d\u52a0\u8fb9\u3011"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u8003\u573a\u4e0a\u4e0d\u5230\u5341\u5206\u949f\u5c31\u80e1\u51fa\u6765\u4e86\uff0c\u7136\u540e\u4e0d\u60f3\u5199\u4e86\uff0c\u4e8b\u5b9e\u8bc1\u660e\u4ee5\u6211\u73b0\u5728\u7684\u7801\u529b\u4f30\u8ba1\u4e5f\u5199\u4e0d\u51fa\u6765\u4e86 /kk\n\n\u5047\u8bbe\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5c06\u6bcf\u4e2a\u70b9\u7684\u80dc\u8d25\u60c5\u51b5\u5904\u7406\u51fa\u6765\u4e86\uff0c\u5e76\u4e14 Alice \u8fd8\u4e0d\u80fd\u83b7\u80dc\uff0c\u9700\u8981\u52a0\u8fb9\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u8fd4\u7956\u8fb9\u7684\u95ee\u9898\u3002\u5982\u679c\u52a0\u4e86\u4e00\u6761\u8fd4\u7956\u8fb9\uff0c\u90a3\u4e48\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\u3002\u82e5\u5fc5\u80dc\u7b56\u7565\u662f\u8d70\u5230\u73af\u4e0a\uff0c\u90a3\u4e48\u5fc5\u5b9a\u4f1a\u5728\u67d0\u4e2a\u5730\u65b9\u8df3\u51fa\u73af\u8d70\u5230\u4e00\u4e2a\u5fc5\u8d25\u70b9\uff0c\u4f46\u662f\u52a0\u7684\u8fd9\u6761\u8fb9\u5728\u73af\u4e0a\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u662f\u90a3\u6761\u8df3\u51fa\u73af\u8d70\u5230\u5fc5\u8d25\u70b9\u4e0a\u7684\u8fb9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u6761\u8fb9\u6211\u4eec\u4e0d\u52a0\uff0cAlice \u4e00\u6837\u80fd\u5fc5\u80dc\uff0c\u77db\u76fe\uff01\u6240\u4ee5\u4e0d\u53ef\u80fd\u52a0\u4e00\u6761\u8fd4\u7956\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5982\u4f55\u6539\u53d8\u4e00\u4e2a\u7ed3\u70b9\u7684\u80dc\u8d25\u72b6\u6001\u3002\u5206\u5fc5\u80dc\u6001\u8f6c\u5fc5\u8d25\u6001\u548c\u5fc5\u8d25\u6001\u8f6c\u5fc5\u80dc\u6001\u8ba8\u8bba\u3002\n\n\u5982\u679c\u662f\u5fc5\u80dc\u6001\u8f6c\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5c06\u5b83\u7684\u6240\u6709\u5b50\u7ed3\u70b9\u90fd\u53d8\u6210\u5fc5\u80dc\u6001\u3002\u663e\u7136\u6211\u4eec\u52a0\u4e00\u6761\u8fb9\u6700\u591a\u80fd\u6539\u53d8\u5176\u4e00\u4e2a\u5b50\u7ed3\u70b9\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u8003\u8651\u5b83\u53ea\u6709\u4e00\u4e2a\u5fc5\u8d25\u5b50\u7ed3\u70b9\u7684\u60c5\u51b5\u3002\u8fd9\u65f6\u5019\u95ee\u9898\u5c31\u662f\u6539\u53d8\u8fd9\u4e2a\u5fc5\u8d25\u5b50\u7ed3\u70b9\u7684\u72b6\u6001\uff0c\u53d8\u4e3a\u5fc5\u80dc\u3002\n\n\u7136\u540e\u5904\u7406\u5fc5\u8d25\u6001\u8f6c\u5fc5\u80dc\u6001\u3002\u663e\u7136\u6211\u4eec\u8981\u505a\u7684\u662f\u4ece\u8fd9\u4e2a\u5fc5\u8d25\u70b9\u5411\u4e00\u4e2a\u975e\u5176\u7956\u5148\u7684\u5fc5\u8d25\u70b9\u8fde\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7\u548c\u5c06\u5176\u67d0\u4e2a\u5b50\u7ed3\u70b9\u53d8\u6210\u5fc5\u8d25\u7684\u4ee3\u4ef7\u53d6\u6700\u5c0f\u503c\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u5904\u7406\u51fa\u9664\u8fd9\u4e2a\u70b9\u53ca\u5176\u7956\u5148\u5916\u6240\u6709\u5fc5\u8d25\u70b9\u6743\u503c\u7684\u6700\u5c0f\u503c\u5c31\u80fd\u505a\u51fa\u7b2c\u4e00\u90e8\u5206\uff0c\u7b2c\u4e8c\u90e8\u5206\u7b49\u540c\u4e8e\u5fc5\u80dc\u6001\u8f6c\u5fc5\u8d25\u6001\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u8981 `dfs` \u4e00\u4e0b\u5c31\u53ef\u4ee5\u505a\u5230\u3002\n\n\u95ee\u9898\u662f\u5982\u4f55\u5feb\u901f\u5904\u7406\u51fa\u9664\u4e86\u67d0\u4e2a\u5fc5\u8d25\u70b9\u53ca\u5176\u7956\u5148\u5916\u6240\u6709\u5fc5\u8d25\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\u3002\u663e\u7136\u5b83\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u9664\u5b83\u4ee5\u5916\u7684\u5fc5\u8d25\u70b9\u6743\u503c\u6700\u5c0f\u503c\u548c\u8fd9\u4e2a\u70b9\u7684\u67d0\u4e2a\u7956\u5148\u7684\u6240\u6709\u5b50\u7ed3\u70b9\u4e2d\u9664\u53bb\u540c\u4e3a\u5b83\u7684\u7956\u5148\uff08\u6216\u5b83\u81ea\u5df1\uff09\u7684\u5b50\u7ed3\u70b9\u5916\u5176\u4ed6\u6240\u6709\u5b50\u7ed3\u70b9\u5b50\u6811\u91cc\u7684\u6743\u503c\u6700\u5c0f\u503c\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u50cf\u4e0b\u9762\u8fd9\u4e2a\u56fe\u8fd9\u6837\uff0c\u6211\u4eec\u8981\u7684\u5c31\u662f\u6240\u6709\u4e09\u89d2\u5f62\u533a\u91cc\u7684\u6743\u503c\u6700\u5c0f\u503c\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cadko11k.png?x-oss-process=image/resize,m_lfit,h_1700,w_2250)\n\n\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\uff0c\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u5b50\u7ed3\u70b9\u8bbe\u5e8f\uff0c\u5e76\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5b50\u6811\u5185\u7684\u5fc5\u8d25\u70b9\u6743\u503c\u6700\u5c0f\u503c\uff0c\u518d\u6c42\u51fa\u5b50\u7ed3\u70b9\u5b50\u6811\u6700\u5c0f\u503c\u7684\u524d\u7f00\u6700\u5c0f\u503c\u548c\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u5c31\u80fd $O(1)$ \u5904\u7406\u51fa\u6211\u4eec\u8981\u7684\u6700\u5c0f\u503c\u3002\u663e\u7136\u8fd9\u4e9b\u90fd\u80fd\u5728\u6700\u5f00\u59cb\u5904\u7406\u80dc\u8d25\u72b6\u6001\u7684\u90a3\u6b21\u641c\u7d22\u91cc\u9884\u5904\u7406\u51fa\u6765\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\nCode:\n```cpp\n#include<cstdio>\n#define rg register\n#define ll long long\n#define min(a,b) (((a)<(b))?(a):(b))\nconst ll INF=3e18;\nconst int inf=1e9+7;\ninline char rc()\n{\n\tstatic char buf[524288],*pn=buf,*pe=buf;\n\treturn (pn==pe)&&(pe=(pn=buf)+fread(buf,1,524288,stdin),pn==pe)?EOF:*pn++;\n}\ninline int read()\n{\n\tint x=0;\n\tchar cc=rc();\n\twhile(cc<'0'||cc>'9')cc=rc();\n\twhile(cc>='0'&&cc<='9')x=x*10+cc-'0',cc=rc();\n\treturn x;\n}\ninline ll _read()\n{\n\tll x=0;\n\tchar cc=rc();\n\twhile(cc<'0'||cc>'9')cc=rc();\n\twhile(cc>='0'&&cc<='9')x=x*10+cc-'0',cc=rc();\n\treturn x;\n}\nll a,b;\nint t,n,opt,f;\nint v[200003];//\u7ed3\u70b9\u6743\u503c\nint mn[200003];//\u5b50\u6811\uff08\u9664\u81ea\u8eab\u5916\uff09\u5185\u5fc5\u8d25\u7ed3\u70b9\u7684\u6743\u503c\u6700\u5c0f\u503c\nint ls[200003];//\u5fc5\u8d25\u5b50\u7ed3\u70b9\u5bf9\u5e94\u5165\u8fb9\u7684\u7f16\u53f7\nint sc[200003];//\u5b50\u7ed3\u70b9\u6570\nint lsc[200003];//\u5fc5\u8d25\u5b50\u7ed3\u70b9\u6570\nint win[200003];//\u80dc\u8d25\u72b6\u6001\nint head[200003],cnt;\nstruct edge\n{\n\tint nxt,pre,to;\n\tint lmn,rmn;//\u524d\u7f00\u6700\u5c0f\u503c\uff0c\u540e\u7f00\u6700\u5c0f\u503c\n}e[200003];\ninline void add(int x,int y)\n{\n\te[++cnt].nxt=head[x],e[head[x]].pre=cnt,e[cnt].pre=0;\n\te[cnt].to=y,head[x]=cnt;\n}\ninline void dfs(int x)\n{\n\tmn[x]=inf;\n\twin[x]=lsc[x]=0;\n\tif(!sc[x])return;\n\tfor(rg int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint y=e[i].to;\n\t\tdfs(y);\n\t\tint mnv=mn[y];\n\t\tif(!win[y])\n\t\t{\n\t\t\twin[x]=1;\n\t\t\t++lsc[x],ls[x]=i;\n\t\t\tmnv=min(mnv,v[y]);\n\t\t}\n\t\te[i].lmn=e[i].rmn=mnv;\n\t\tmn[x]=min(mn[x],mnv);\n\t}\n\tif(sc[x]>1)//\u9884\u5904\u7406\u524d\u7f00\u540e\u7f00\u6700\u5c0f\u503c\n\t{\n\t\trg int i;\n\t\tfor(i=head[x];e[i].nxt;i=e[i].nxt)e[e[i].nxt].lmn=min(e[e[i].nxt].lmn,e[i].lmn);\n\t\tfor(;i!=head[x];i=e[i].pre)e[e[i].pre].rmn=min(e[e[i].pre].rmn,e[i].rmn);\n\t}\n}\ninline ll solve(int x,int mnv)\n{\n\tll res=INF;\n\tif(!sc[x])(mnv<inf)&&(res=a*v[x]+b*mnv);\n\telse if(mnv<inf||mn[x]<inf)\n\t{\n\t\tres=a*v[x]+b*min(mnv,mn[x]);\n\t\tfor(rg int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint y=e[i].to,pr=e[i].pre,nx=e[i].nxt;\n\t\t\tint z=e[ls[y]].to,pe=e[ls[y]].pre,nt=e[ls[y]].nxt;\n\t\t\tif(lsc[y]>1)continue;\n\t\t\tint tmv=min(mnv,min(\\\n\t\t\tmin(((pr)?e[pr].lmn:inf),((nx)?e[nx].rmn:inf)),\\\n\t\t\tmin(((pe)?e[pe].lmn:inf),((nt)?e[nt].rmn:inf))));\n\t\t\tres=min(res,solve(z,tmv));\n\t\t}\n\t}\n\treturn res;\n}\nint main()\n{\n\tt=read();\n\twhile(t--)\n\t{\n\t\tn=read(),opt=read(),a=_read(),b=_read();\n\t\tfor(rg int i=2;i<=n;++i)f=read(),++sc[f],add(f,i);\n\t\tfor(rg int i=1;i<=n;++i)v[i]=read();\n\t\tdfs(1);\n\t\tif(win[1]^opt)puts(\"0\");\n\t\telse if(opt)\n\t\t{\n\t\t\tif(lsc[1]>1)puts(\"-1\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tll mnv=min(((e[ls[1]].pre)?e[e[ls[1]].pre].lmn:inf),((e[ls[1]].nxt)?e[e[ls[1]].nxt].rmn:inf));\n\t\t\t\tll res=solve(e[ls[1]].to,mnv);\n\t\t\t\tif(res<INF)printf(\"%lld\\n\",res);\n\t\t\t\telse puts(\"-1\");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tll res=solve(1,inf);\n\t\t\tif(res<INF)printf(\"%lld\\n\",res);\n\t\t\telse puts(\"-1\");\n\t\t}\n\t\tfor(rg int i=1;i<n;++i)head[i]=0;\n\t\tcnt=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1616479771,
        "uid": 59388,
        "name": "VinstaG173",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7443 \u3010\u300cEZEC-7\u300d\u52a0\u8fb9\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u8003\u8651\u5148 DP \u4e00\u904d\u6c42\u51fa\u5728\u4e0d\u52a0\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u8282\u70b9\u662f\u5fc5\u80dc\u6001\u8fd8\u662f\u5fc5\u8d25\u6001\u3002\n\n\u9996\u5148\u663e\u7136\u5728\u6839\u8282\u70b9\u4e0e Alice \u7684\u5148\u540e\u624b\u64cd\u4f5c\u72b6\u6001\u76f8\u7b26\u5408\u65f6\u6839\u672c\u4e0d\u9700\u8981\u52a0\u8fb9\u3002\n\n\u7136\u540e\u9700\u8981\u8bc1\u660e\u4e00\u4e2a\u7ed3\u8bba\uff1a**\u52a0\u7684\u8fd9\u4e00\u6761\u8fb9\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u662f\u4e00\u6761\u56de\u8fb9\u3002**\n\n\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5982\u679c\u662f\u56de\u8fb9\u7684\u8bdd\uff0c\u90a3\u4e48\u5728\u8fd9\u6761\u52a0\u5165\u7684\u8fb9\u8d77\u70b9\u4e0a\uff0c\u5982\u679c\u662f\u5fc5\u80dc\u6001\uff0c\u90a3\u4e48\u5f53\u524d\u64cd\u4f5c\u8005\u4e00\u5b9a\u4e0d\u4f1a\u8fdb\u5165\u56de\u8fb9\uff0c\u5982\u679c\u662f\u5fc5\u8d25\u6001\uff0c\u5f53\u524d\u64cd\u4f5c\u8005\u4e00\u5b9a\u4f1a\u9009\u62e9\u8d70\u5411\u56de\u8fb9\uff0c\u7136\u540e\u6784\u6210\u5faa\u73af\u3002\n\n\u56e0\u6b64\uff0c\u52a0\u5165\u56de\u8fb9\uff0c\u8981\u4e48\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c\u8981\u4e48\u4f1a\u4f7f\u5f97\u64cd\u4f5c\u8fc7\u7a0b\u9677\u5165\u6b7b\u5faa\u73af\u3002\n\n**\u5982\u4f55\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\uff1f**\n\n\u8003\u8651\u52a0\u8fb9\u7684\u5f71\u54cd\uff0c\u52a0\u8fd9\u6761\u8fb9\u53ea\u53ef\u80fd\u5c06\u4e00\u4e2a\u5fc5\u8d25\u70b9\u8f6c\u53d8\u4e3a\u5fc5\u80dc\u70b9\u3002\n\n\u5c06\u4e00\u4e2a\u5fc5\u8d25\u8282\u70b9\u8f6c\u4e3a\u5fc5\u80dc\u6001\uff0c\u53ea\u9700\u8981\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u8f6c\u53d8\u4e3a\u5fc5\u8d25\u6001\uff0c\u6216\u8005\u52a0\u4e00\u6761\u8fb9\u8fde\u63a5\u4e00\u4e2a\u5408\u6cd5\u7684\u5fc5\u8d25\u6001\u8282\u70b9\u5373\u53ef\u3002\n\n\u5c06\u4e00\u4e2a\u5fc5\u80dc\u8282\u70b9\u8f6c\u4e3a\u5fc5\u8d25\u8282\u70b9\u3002\u4e00\u4e2a\u5fc5\u80dc\u8282\u70b9\u80fd\u88ab\u6539\u4e3a\u5fc5\u8d25\u8282\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5b50\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5fc5\u8d25\u8282\u70b9\uff0c\u4fee\u6539\u7684\u4ee3\u4ef7\u4e3a\u5c06\u8fd9\u4e2a\u5fc5\u8d25\u5b50\u8282\u70b9\u8f6c\u53d8\u4e3a\u5fc5\u80dc\u70b9\u7684\u4ee3\u4ef7\u3002\n\n\u90a3\u4e48\uff0c\u5728\u904d\u5386\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5bf9\u4e8e\u5fc5\u80dc\u8282\u70b9\uff0c\u5904\u7406\u4e00\u4e0b\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u5fc5\u8d25\u5b50\u8282\u70b9\u4ee5\u53ca\u8fd9\u4e2a\u5b50\u8282\u70b9\u7684\u7f16\u53f7\u3002\n\n\u5bf9\u4e8e\u5fc5\u8d25\u8282\u70b9\uff0c\u5219\u53ea\u9700\u5bf9\u6240\u6709\u5b50\u8282\u70b9\u4ee3\u4ef7\u53d6\u6700\u5c0f\u503c\uff0c\u7136\u540e\u518d\u4e0e\u76f4\u63a5\u52a0\u8fb9\u53d6\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n**\u5982\u4f55\u6c42\u76f4\u63a5\u52a0\u8fb9\u7684\u4ee3\u4ef7**\n\n\u53d1\u73b0\u9898\u76ee\u4e2d\u7684\u5f0f\u5b50\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u7684\u8d77\u70b9\uff0c$a$ \u7684\u503c\u548c\u7cfb\u6570\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u8981\u53d6\u7684\u70b9\u4e00\u5b9a\u662f $b$ \u503c\u6700\u5c0f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5fc5\u8d25\u6001\u8282\u70b9\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\u6bcf\u6b21\u5c06\u5728\u641c\u7d22\u6808\u4e2d\u7684\u8282\u70b9\u6807\u8bb0\u4e3a\u4e0d\u53ef\u62b5\u8fbe\uff08\u5373\u5c06\u7ebf\u6bb5\u6811\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6743\u503c\u6807\u8bb0\u4e3a\u65e0\u7a77\u5927\uff09\u8bbf\u95ee\u5b8c\u6bd5\u65f6\u518d\u5355\u70b9\u4fee\u6539\u56de\u6765\u5373\u53ef\u3002\u67e5\u8be2\u65f6\u8bbf\u95ee\u5168\u5c40\u6700\u5c0f\u503c\u3002\n\n\u7ebf\u6bb5\u6811\u5e38\u6570\u592a\u5927\uff1f\u88ab\u5361\u6210 90pts\u3002\u56e0\u4e3a\u53ea\u9700\u8981\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u5168\u5c40\u6700\u503c\uff0c\u90a3\u5c31\u7528 zkw \u6811\u3002\u590d\u6742\u5ea6\u5e26 $\\log$ \u4f46\u662f\u5e38\u6570\u5f88\u5c0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n**Ex\uff1a\u8fd9\u4e2a\u6b65\u9aa4\u4e00\u79cd\u7ebf\u6027\u5b9e\u73b0\u7684\u65b9\u5f0f**\n\n\u904d\u5386\u65f6\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5904\u7406\u51fa\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u6240\u6709\u51fa\u70b9\u6309\u904d\u5386\u987a\u5e8f\u7684\u524d\u540e\u7f00\u6700\u5c0f\u503c\u3002\n\n\u7b2c\u4e8c\u6b21\u904d\u5386\u7684\u65f6\u5019\u8fdb\u5165\u4e0b\u4e00\u5c42\u5b50\u8282\u70b9\u7684\u65f6\u5c06 \u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848 \u4e0e\u5373\u5c06\u8fdb\u5165\u8282\u70b9\u904d\u5386\u987a\u5e8f $\\pm 1$ \u4f4d\u7f6e\u7684 \u524d/\u540e\u7f00\u6700\u5c0f\u503c \u53d6\u4e2a\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u5bf9\u5f53\u524d\u8282\u70b9\u67e5\u8be2\u7684\u65f6\u5019\u53d6\u7684\u70b9\u4e3a \u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848 \u4e0e \u6240\u6709\u5b50\u8282\u70b9\u7684\u5b50\u6811\u7684\u6700\u5c0f\u503c \u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6bb5\u8bdd\u8bf4\u7684\u597d\u4e71\u554a\uff0c\u5e0c\u671b\u65ad\u53e5\u6709\u70b9\u5e2e\u52a9\u5427\u3002\n\n\u4ee3\u7801\uff1a\n\n\u53ea\u6709\u7528\u4e86 zkw \u6811\u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#define LL __int128\n\nusing namespace std;\n\ntemplate <typename Temp> inline void read(Temp & res) {\n\tTemp fh = 1; res = 0; char ch = getchar();\n\tfor(; !isdigit(ch); ch = getchar()) if(ch == '-') fh = -1;\n\tfor(; isdigit(ch); ch = getchar()) res = (res << 3) + (res << 1) + (ch ^ '0');\n\tres = res * fh;\n}\ntemplate <typename Temp> inline void Checkmin(Temp & num, Temp comp) {\n\tif(comp < num) num = comp;\n}\n\nconst int Maxn = 2e5 + 5;\nconst LL INF = 0x7fffffffffffffff / 2;\n\nstruct e {\n\tint to, nxt;\n} b[Maxn];\nint head[Maxn], ecnt;\nvoid add(int u, int v) {b[++ecnt] = (e) {v, head[u]}; head[u] = ecnt;}\n\nbool g[Maxn], h[Maxn]; LL f[Maxn];\n\nint n, w, x, L;\nLL A, B, a[Maxn];\n\n#define ls t << 1\n#define rs t << 1 | 1\nLL data[Maxn << 2];\nvoid modify(int pos, LL d) {\n\tpos += L; data[pos] = d;\n    while(pos >>= 1) data[pos] = min(data[pos << 1], data[pos << 1 | 1]);\n}\n#undef ls\n#undef rs\n\nvoid dfs1(int t) {\n\tint cnt = 0;\n\tfor(int i = head[t]; i; i = b[i].nxt) {\n\t\tdfs1(b[i].to);\n\t\tif(!g[b[i].to]) cnt++;\n\t}\n\tif(cnt == 0) g[t] = 0, h[t] = 0;\n\telse g[t] = 1, h[t] = (cnt == 1);\n\treturn;\n}\n\nvoid dfs2(int t) {\n\tif(g[t] == 0) modify(t, INF);\n\tfor(int i = head[t]; i; i = b[i].nxt) {\n        dfs2(b[i].to);\n        if(!g[t]) Checkmin(f[t], f[b[i].to]);\n        else if(h[t]) {\n            if(!g[b[i].to]) f[t] = f[b[i].to];\n        }\n    }\n \tif(!g[t]) Checkmin(f[t], A * a[t] + B * data[1]);\n\tif(g[t] == 0) modify(t, a[t]);\n}\n\ninline void Main() {\n\tread(n); read(w); read(A); read(B); ecnt = 0; L = 1; while(L <= n) L <<= 1;\n\tfor(int i = 1; i <= n; ++i) head[i] = 0, f[i] = INF;\n  \tfor(int i = 1; i <= (n << 2); ++i) data[i] = INF;\n\tfor(int i = 2; i <= n; ++i) read(x), add(x, i);\n\tfor(int i = 1; i <= n; ++i) read(a[i]);\n\tdfs1(1);\n  \tif((w == 0 && g[1]) || (w == 1 && (!g[1]))) {printf(\"0\\n\"); return;}\n\tfor(int i = 1; i <= n; ++i) if(!g[i]) modify(i, a[i]);\n\tdfs2(1);\n\tprintf(\"%lld\\n\", (f[1] != INF ? f[1] : -1));\n\treturn;\n}\n\nint main() {\n\tint T; read(T);\n\twhile(T--) Main();\n\treturn 0;\n}\n```",
        "postTime": 1617695375,
        "uid": 118196,
        "name": "zimujun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7443 \u3010\u300cEZEC-7\u300d\u52a0\u8fb9\u3011"
    }
]