[
    {
        "content": "[P2509 [SCOI2008]\u8b66\u544a - \u6d1b\u8c37 | \u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u80b2\u65b0\u751f\u6001 (luogu.com.cn)](https://www.luogu.com.cn/problem/P2509)\n\n# \u5199\u5728\u524d\u9762\u7684\u8bdd\n\n\u7b2c\u4e00\u7bc7 c++ \u9898\u89e3\u3002\n\n\u89c1\u8fc7\u771f\u6b63\u6076\u5fc3\u7684\u6a21\u62df\u9898\u5417\uff0c\u8fd9\u9053\u5c31\u662f\u4e86\u3002\uff08\u6211\u8d21\u732e\u4e86 4 \u9875\u63d0\u4ea4\u8bb0\u5f55\uff08\u6211\u6572 \u52c7 \u7684\u3002\n\n~~\u8fd9\u53ef\u4ee5\u4e3a\u4f60\u4ee5\u540e\u7684\u5f00\u53d1\u5de5\u4f5c\u6253\uff08\u63d0\uff09\u4e0b\uff08\u524d\uff09\u57fa\uff08\u529d\uff09\u7840\uff08\u9000\uff09~~\n\n\u603b\u4e4b\u9898\u76ee\u5c31\u662f\u60f3\u8ba9\u4f60\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u7f16\u8bd1\u5668\uff0c\u652f\u6301\u8f93\u51fa\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\u548c\u4e0d\u53ef\u5230\u8fbe\u7684\u884c\u4e24\u79cd\u8b66\u544a\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u53ea\u60f3\u8bf4\u5b83\u4e0d\u4ec5\u8003\u9a8c\u4e86\u4e00\u4e2a OIer \u7684\u4ee3\uff08\u5fc3\uff09\u7801\uff08\u7406\uff09\u80fd\uff08\u7d20\uff09\u529b\uff08\u8d28\uff09\uff0c\u8fd8\u6709\u4f60\u7684\u4ee3\u7801\u4e60\u60ef\uff0c\u7279\u522b\u662f\u6a21\u5757\u5316\u7f16\u7a0b\u7684\u601d\u60f3\uff08\u5982\u679c\u6709\u4eba\u80fd\u5728\u4e00\u4e2a main \u91cc\u9762\u641e\u5b8c\u6211\u5c31\u4f5b\u4e86\uff09\u3002\n\n------\n\n# \u51e0\u4e2a\u5751\u70b9\n\n\u5148\u653e\u524d\u9762\uff0c\u4ee5\u4fbf\u8c03\u9898\u81ea\u95ed\u7684\u4eba\u6765\u5eb7\u5eb7\uff1a\n\n1. \u5982\u679c IF \u4e2d\u4e24\u4e2a\u5206\u652f\u5747\u5b9a\u4e49\u4e86\u67d0\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u5728 IF \u540e\u4e5f\u7b97\u5b9a\u4e49\u4e86\uff08\u5206\u652f\u4e2d RETURN \u5219\u7b97\u6240\u6709\u53d8\u91cf\u90fd\u5b9a\u4e49\u8fc7\uff09\n2. \u5982\u679c\u4e00\u4e2a IF \u7684\u4e24\u4e2a\u6761\u4ef6\u5206\u652f\u90fd RETURN\uff0c\u8fd9\u4e2a IF \u540e\u7684\u8bed\u53e5\u4f5c\u5e9f\n3. ELSE & END IF \u4e0d\u7b97 unreachable line\n4. RETURN \u540e\u5373\u4f7f\u6709\u53d8\u91cf\u672a\u521d\u59cb\u5316\u4e5f\u4e0d\u8003\u8651\u4e86\n5. \u4e00\u884c\u5185\u4e00\u4e2a\u53d8\u91cf\u6700\u591a\u7b97\u4e00\u6b21\u672a\u5b9a\u4e49\n\n------\n\n# \u9898\u76ee\u505a\u6cd5\n\n## \u8bfb\u5165\n\n\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a ```get(i, pos)``` \u51fd\u6570\uff0c\u8868\u793a\u4ece\u8bfb\u5165\u7684\u4ee3\u7801\u6587\u672c\u4e2d\u7b2c i \u884c\u7b2c pos \u5217\u5f00\u59cb\u8fde\u7eed\u7684\u4e00\u6bb5\u6587\u672c\uff0c\u8fd4\u56de\u503c\u4e3a string \u3002\uff08\u663e\u7136\u4e00\u4e2a\u8fde\u7eed\u6587\u672c\u6bb5\u7684\u524d\u540e\u90fd\u662f\u4e0d\u5408\u6cd5\u5b57\u7b26\uff08\u5982\u7a7a\u683c\uff09\u3002\uff09\n\n\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a\n\n```cpp\nbool check(char x)\n{\n\tif((x >= 'A' && x <= 'Z') || (x >= '0' && x <= '9') || (x == '+' || x == '-' || x == '*' || x == '/') || (x == '>' || x == '<' || x == '='))\n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nstring get(int i, int &pos)\n{\n\tint num = (pos ? 0 : 1);//\u8fd9\u91cc\u662f\u56e0\u4e3a 0 \u4f4d\u7f6e\u524d\u9762\u4e5f\u5f97\u7b97\u4f5c\u4e00\u4e2a\u4e0d\u5408\u6cd5\u4f4d\n\tstring ret;\n\tfor(; pos < s[i].size(); pos++)\n\t{\n\t\tif(check(s[i][pos]))\n\t\t{\n\t\t\tret.push_back(s[i][pos]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(++num == 2)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n```\n\n\u8fd9\u6837\u6211\u4eec\u8c03\u7528\u4e00\u6b21 get \u5c31\u53ef\u4ee5\u5f97\u5230\u8fde\u7eed\u7684\u4e00\u6bb5\u6587\u672c\u4e86\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u5904\u7406\u3002\n\n\u7136\u540e\u6211\u4eec\u5206\u522b\u8003\u8651\u5904\u7406\u6bcf\u4e00\u79cd\u8bed\u53e5\u3002\n\n\u56e0\u4e3a\u53d8\u91cf\u6700\u591a\u6709 26 \u4e2a\uff08 A - Z \uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u578b\u7684\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a\u5bf9\u5e94\u7684\u53d8\u91cf\u51fa\u73b0\u60c5\u51b5\u3002\n\n\u4ee4\u51fd\u6570 ```work(i, j, defined)``` \u5bf9\u6587\u672c\u6bb5\u4e2d\u884c\u6570\u4e3a $[i,j]$\u200b \uff08\u5305\u542b i \u548c j \uff09\uff0c\u4e14\u4e4b\u524d\u7684\u53d8\u91cf\u5b9a\u4e49\u72b6\u6001\u4e3a defined \u7684\u6587\u672c\u8fdb\u884c\u5904\u7406\u3002\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08 int \uff09\u8868\u793a\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u8fc7\u7684\u53d8\u91cf\uff08\u5982\u679c\u5904\u7406\u7684\u8fd9\u4e00\u6bb5\u5fc5\u5b9a  RETURN \u8fd4\u56de ```0x7fffffff``` \uff09\u3002\n\n\u73b0\u5728\u53ea\u9700\u8981\u8003\u8651\u5206\u522b\u5904\u7406\uff1a\n\n- PARAM\n- IF THEN & ELSE & END IF & \u6761\u4ef6\u5224\u65ad\u8bed\u53e5\n- \u8d4b\u503c\u8bed\u53e5\n- RETURN\n\n## \u5904\u7406 PARAM \u8bed\u53e5\n\nPARAM \u8bed\u53e5\u540e\u7684\u53d8\u91cf\u5728\u5168\u5c40\u5747\u8981\u7b97\u4f5c\u5df2\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u9010\u4e2a\u8bfb\u5165\u6240\u6709\u53d8\u91cf\uff0c\u4fee\u6539 defined \u5bf9\u5e94\u4f4d\u5373\u53ef\u3002\n\n```cpp\nif(newword == \"PARAM\")\n{\n    for(; pos < s[idx].size(); )\n    {\n        newword = get(idx, pos);\n        if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n        {\n            defined |= (1 << (newword[0] - 'A'));\n        }\n    }\n}\n```\n\n\u5176\u4e2d\uff1aidx \u8868\u793a\u904d\u5386\u5230\u7684\u884c\u53f7\uff0cpos \u8868\u793a\u5f53\u524d\u884c\u679a\u4e3e\u5230\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u662f\u6700\u597d\u5904\u7406\u7684\u8bed\u53e5\u4e86\u3002\n\n## \u5904\u7406 IF \u8bed\u53e5 & \u6761\u4ef6\u5224\u65ad\u8bed\u53e5\n\n\u8fd9\u662f\u6700\u96be\u7684\u8bed\u53e5\uff0c\u9700\u8981 72 \u884c 1425 \u957f\u5ea6\u3002\n\nIF \u8bed\u53e5\u53ef\u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u5b8c\u5c31\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5751\u70b9 1 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5904\u7406\u5230\u8fd9\u4e2a IF \u5bf9\u5e94\u7684 END IF \u4e3a\u6b62\u3002\n\n\u5e76\u4e14\u5982\u679c\u4e2d\u95f4\u6709 ELSE \u8fd8\u8981\u7279\u6b8a\u5904\u7406\u6761\u4ef6\u5206\u652f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff08\u6216\u8005 RETURN \u6807\u8bb0\uff08\u5751\u70b9 2 \uff09\uff09\u3002\n\n\u5b9a\u4e49 $shown$ \u4e2d\u9010\u4f4d\u4fdd\u5b58\u6761\u4ef6\u5206\u652f\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff08 RETURN \u6807\u8bb0\u8bb0\u5728 27 \u4f4d\uff0c\u56e0\u4e3a\u53ea\u6709 26 \u4e2a\u5355\u8bcd\uff08\u5176\u5b9e 26 \u4f4d\u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a\u4ece 0 \u5f00\u59cb\uff09\uff09\n\n$shown$\u200b \u521d\u503c\u8bbe\u7f6e\u4e3a ```0xffffffff``` \u5373\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d\u90fd\u662f 1 \uff08\u56e0\u4e3a\u8981\u505a & \u8fd0\u7b97\uff09\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u652f\uff0c```shown &= work(\u00b7\u00b7\u00b7)```\u200b\uff08\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6761\u4ef6\u5206\u652f\uff0c```shown = 0xffffffff``` \uff09\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u5224\u65ad\u8fd9\u4e2a IF \u5bf9\u5e94\u7684 ELSE \u548c END IF \u4f4d\u7f6e\uff0c\u76f8\u4fe1\u6562\u6765\u5199\u8fd9\u9898\u7684\u90fd\u77e5\u9053 stack \u662f\u4ec0\u4e48\u5427\u3002\n\n```cpp\nelse if(newword == \"IF\")\n{\n    int vis = 0;//\u8fd9\u91cc vis \u662f\u8bb0\u5f55 IF \u540e\u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u4e2d\u672a\u5b9a\u4e49\u53d8\u91cf\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u81f3\u591a 1 \u6b21\u3002\n    for(; pos < s[idx].size(); )\n    {\n        newword = get(idx, pos);\n        if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n        {\n            if(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n            {\n                E[++cnt].id = newword[0];\n                E[cnt].line = idx;\n                E[cnt].opt = 2;\n                vis |= (1 << (newword[0] - 'A'));\n            }\n        }\n    }\n    int i, wz, flag = 0;\n    string nw;\n    stack<int> st;\n    st.push(idx);\n    for(i = idx + 1; i <= r && !st.empty(); i++)\n    {\n        wz = 0;\n        nw = get(i, wz);\n        if(nw == \"IF\")\n        {\n            st.push(i);\n        }\n        else if(nw == \"ELSE\" && st.size() == 1)\n        {\n            flag = i;\n            if(shown == 0xffffffff)\n            {\n                shown = work(st.top() + 1, i - 1, defined);\n            }\n            else\n            {\n                shown &= work(st.top() + 1, i - 1, defined);\n            }\n        }\n        else if(nw == \"END\")\n        {\n            st.pop();\n        }\n    }\n    if(flag)\n    {\n        shown &= work(flag + 1, i - 2, defined);\n    }\n    else\n    {\n        shown = 0xffffffff;\n        work(idx + 1, i - 2, defined);\n    }\n    idx = i - 1;\n    if((shown & (1 << 27)) && shown != 0xffffffff)//\u5982\u679c\u6240\u6709\u6761\u4ef6\u5206\u652f\u5fc5\u5b9a RETURN\uff0c\u5219\u540e\u9762\u8bed\u53e5 unreachable\n    {\n        idx++;\n        for(; idx <= r; idx++)\n        {\n            wz = 0;\n            nw = get(idx, wz);\n            if(nw != \"ELSE\" && nw != \"END\")\n            {\n                E[++cnt].line = idx;\n                E[cnt].opt = 1;\n            }\n        }\n        shown = 0x7fffffff;//\u8fd9\u65f6\u89c6\u4e3a\u6240\u6709\u53d8\u91cf\u90fd\u5df2\u5b9a\u4e49\u8fc7\n    }\n}\n```\n\n## \u5904\u7406\u8d4b\u503c\u8bed\u53e5\n\n\u8d4b\u503c\u8bed\u53e5\u5176\u5b9e\u5f88\u597d\u5904\u7406\uff0c\u6709\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\u4f5c\u4e3a\u5de6\u503c\u7684\u53d8\u91cf\u5982\u679c\u5728\u53f3\u503c\u4e2d\u51fa\u73b0\uff0c\u89c6\u4e3a\u672a\u5b9a\u4e49\uff0c\u5982 ```C = C + 1``` \u3002\n\n\u6ce8\u610f\u8981\u5224\u65ad\u6587\u672c\u957f\u5ea6\u4e00\u5b9a\u4e3a 1\uff0c\u7136\u540e\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n\n```cpp\nelse if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n{\n    int vis = 0;\n    char mem = newword[0];\n    for(; pos < s[idx].size(); )\n    {\n        newword = get(idx, pos);\n        if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n        {\n            if(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n            {\n                E[++cnt].id = newword[0];\n                E[cnt].line = idx;\n                E[cnt].opt = 2;\n                vis |= (1 << (newword[0] - 'A'));\n            }\n        }\n    }\n    defined |= (1 << (mem - 'A'));//\u6700\u540e\u5c06\u5de6\u503c\u53d8\u91cf\u8bb0\u4e3a\u5df2\u5b9a\u4e49\n}\n```\n\n## \u5904\u7406 RETURN \u8bed\u53e5\n\n\u5230\u4e86\u8fd9\u91cc\u521a\u624d\u5b9a\u4e49 ```work```  \u7684 $[l,r]$\u200b  \u7684\u597d\u5904\u5c31\u51f8\u663e\u51fa\u6765\u4e86\uff0cRETURN \u8bed\u53e5\u81f3\u591a\u53ea\u80fd\u5f71\u54cd\u5230 r \u884c\u3002\n\n\u9047\u89c1 RETURN\uff0c\u9996\u5148\u5224\u65ad\u8fd4\u56de\u503c\uff08\u662f\u53d8\u91cf\u7684\u8bdd\uff09\u662f\u5426\u5b9a\u4e49\uff0c\u7136\u540e\u5c06\u8bed\u53e5\u540e\u9762\u7684\u5168\u90e8\u8f93\u51fa\u8b66\u544a\u3002\n\n```cpp\nelse if(newword == \"RETURN\")\n{\n    int vis = 0;\n    for(; pos < s[idx].size(); )\n    {\n        newword = get(idx, pos);\n        if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n        {\n            if(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n            {\n                E[++cnt].id = newword[0];\n                E[cnt].line = idx;\n                E[cnt].opt = 2;\n                vis |= (1 << (newword[0] - 'A'));\n            }\n        }\n    }\n    int wz;\n    string nw;\n    idx++;\n    for(; idx <= r; idx++)\n    {\n        wz = 0;\n        nw = get(idx, wz);\n        if(nw != \"ELSE\" && nw != \"END\")\n        {\n            E[++cnt].line = idx;\n            E[cnt].opt = 1;\n        }\n    }\n    shown = 0x7fffffff;\n}\n```\n\n## \u5bf9\u4e8e defined \u7684\u66f4\u65b0\n\n\u6bcf\u6b21\u5904\u7406\u5b8c\u4e00\u5757\u8bed\u53e5\u540e\uff0c\u5982\u679c ```shown != 0xffffffff``` \u5219 ```defined |= shown```\u3002\n\n```cpp\nif(shown != 0xffffffff)\n{\n    defined |= shown;\n}\n```\n\n# Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct error\n{\n\tint opt, line;\n\tchar id;\n};\nerror E[10005];\nbool cmp(error a, error b)\n{\n\tif(a.line != b.line)\n\t{\n\t\treturn a.line < b.line;\n\t}\n\treturn a.id < b.id;\n}\nint tot, cnt;\nstring s[10005];\nbool check(char x)\n{\n\tif((x >= 'A' && x <= 'Z') || (x >= '0' && x <= '9') || (x == '+' || x == '-' || x == '*' || x == '/') || (x == '>' || x == '<' || x == '='))\n\t{\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nstring get(int i, int &pos)\n{\n\tint num = (pos ? 0 : 1);\n\tstring ret;\n\tfor(; pos < s[i].size(); pos++)\n\t{\n\t\tif(check(s[i][pos]))\n\t\t{\n\t\t\tret.push_back(s[i][pos]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(++num == 2)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\nint work(int l, int r, int defined)\n{\n\tint pos, shown = 0xffffffff;\n\tstring newword;\n\tfor(int idx = l; idx <= r; idx++)\n\t{\n\t\tpos = 0;\n\t\tnewword = get(idx, pos);\n\t\tif(newword == \"PARAM\")\n\t\t{\n\t\t\tfor(; pos < s[idx].size(); )\n\t\t\t{\n\t\t\t\tnewword = get(idx, pos);\n\t\t\t\tif(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tdefined |= (1 << (newword[0] - 'A'));\n\t\t\t\t}\n            }\n\t\t}\n\t\telse if(newword == \"IF\")\n\t\t{\n\t\t\tint vis = 0;\n\t\t\tfor(; pos < s[idx].size(); )\n\t\t\t{\n\t\t\t\tnewword = get(idx, pos);\n\t\t\t\tif(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tif(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n\t\t\t\t\t{\n\t\t\t\t\t\tE[++cnt].id = newword[0];\n\t\t\t\t\t\tE[cnt].line = idx;\n\t\t\t\t\t\tE[cnt].opt = 2;\n\t\t\t\t\t\tvis |= (1 << (newword[0] - 'A'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint i, wz, flag = 0;\n\t\t\tstring nw;\n\t\t\tstack<int> st;\n\t\t\tst.push(idx);\n\t\t\tfor(i = idx + 1; i <= r && !st.empty(); i++)\n\t\t\t{\n\t\t\t\twz = 0;\n\t\t\t\tnw = get(i, wz);\n\t\t\t\tif(nw == \"IF\")\n\t\t\t\t{\n\t\t\t\t\tst.push(i);\n\t\t\t\t}\n\t\t\t\telse if(nw == \"ELSE\" && st.size() == 1)\n\t\t\t\t{\n\t\t\t\t\tflag = i;\n\t\t\t\t\tif(shown == 0xffffffff)\n\t\t\t\t\t{\n\t\t\t\t\t\tshown = work(st.top() + 1, i - 1, defined);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshown &= work(st.top() + 1, i - 1, defined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(nw == \"END\")\n\t\t\t\t{\n\t\t\t\t\tst.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tshown &= work(flag + 1, i - 2, defined);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tshown = 0xffffffff;\n\t\t\t\twork(idx + 1, i - 2, defined);\n\t\t\t}\n\t\t\tidx = i - 1;\n\t\t\tif((shown & (1 << 27)) && shown != 0xffffffff)\n\t\t\t{\n\t\t\t\tidx++;\n\t\t\t\tfor(; idx <= r; idx++)\n\t\t\t\t{\n\t\t\t\t\twz = 0;\n\t\t\t\t\tnw = get(idx, wz);\n\t\t\t\t\tif(nw != \"ELSE\" && nw != \"END\")\n\t\t\t\t\t{\n\t\t\t\t\t\tE[++cnt].line = idx;\n\t\t\t\t\t\tE[cnt].opt = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshown = 0x7fffffff;\n\t\t\t}\n\t\t}\n\t\telse if(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n\t\t{\n\t\t\tint vis = 0;\n\t\t\tchar mem = newword[0];\n\t\t\tfor(; pos < s[idx].size(); )\n\t\t\t{\n\t\t\t\tnewword = get(idx, pos);\n\t\t\t\tif(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tif(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n\t\t\t\t\t{\n\t\t\t\t\t\tE[++cnt].id = newword[0];\n\t\t\t\t\t\tE[cnt].line = idx;\n\t\t\t\t\t\tE[cnt].opt = 2;\n\t\t\t\t\t\tvis |= (1 << (newword[0] - 'A'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefined |= (1 << (mem - 'A'));\n\t\t}\n\t\telse if(newword == \"RETURN\")\n\t\t{\n\t\t\tint vis = 0;\n\t\t\tfor(; pos < s[idx].size(); )\n\t\t\t{\n\t\t\t\tnewword = get(idx, pos);\n\t\t\t\tif(newword.size() == 1 && newword[0] >= 'A' && newword[0] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tif(!(defined & (1 << (newword[0] - 'A'))) && !(vis & (1 << (newword[0] - 'A'))))\n\t\t\t\t\t{\n\t\t\t\t\t\tE[++cnt].id = newword[0];\n\t\t\t\t\t\tE[cnt].line = idx;\n\t\t\t\t\t\tE[cnt].opt = 2;\n\t\t\t\t\t\tvis |= (1 << (newword[0] - 'A'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint wz;\n\t\t\tstring nw;\n\t\t\tidx++;\n\t\t\tfor(; idx <= r; idx++)\n\t\t\t{\n\t\t\t\twz = 0;\n\t\t\t\tnw = get(idx, wz);\n\t\t\t\tif(nw != \"ELSE\" && nw != \"END\")\n\t\t\t\t{\n\t\t\t\t\tE[++cnt].line = idx;\n\t\t\t\t\tE[cnt].opt = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshown = 0x7fffffff;\n\t\t}\n\t\tif(shown != 0xffffffff)\n\t\t{\n\t\t\tdefined |= shown;\n\t\t}\n\t\t//printf(\"!!%d %d %d %d!!\\n\", l, r, shown, defined);\n\t}\n\treturn defined;\n}\nsigned main()\n{\n\twhile(getline(cin, s[++tot]));\n\twork(1, tot - 1, 0);\n\tsort(E + 1, E + cnt + 1, cmp);\n\tfor(int i = 1; i <= cnt; i++)\n\t{\n\t\tif(E[i].opt == 1)\n\t\t{\n\t\t\tprintf(\"Line %d: unreachable code\\n\", E[i].line);\n\t\t}\n\t\telse if(E[i].opt == 2)\n\t\t{\n\t\t\tprintf(\"Line %d: variable %c might not have been initialized\\n\", E[i].line, E[i].id);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n# \u5f69\u86cb\n\n\u5728\u6821\u5185 OJ \u4e0a A \u4e86\u8fd9\u9053\u9898\u540e\uff0c\u6211\u7ec8\u4e8e\u53ef\u4ee5\u770b\u89c1\u6211\u8001\u5e08\u7684\u795e\u4ed9\u4ee3\u7801\u4e86\uff0c\u6211\u5199 4.21k \u4ed6\u5199 1.87k\n\n% \u5c31\u5b8c\u4e86\u3002\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n \nint n, poz;\nvector<string> code;\n \nvoid output(int s, int v) {\n  if(s & (1 << 26)) return;\n  for(int i = 0; i < 26; i++) if(!(s & (1 << i)) && (v & (1 << i)))\n    printf(\"Line %d: variable %c might not have been initialized\\n\",poz + 1,'A' + i);\n}\n \nint readValue(const string &s) {\n  char c = s[0];\n  if(isupper(c)) return 1 << (c - 'A');\n  else return 1 << 27;\n}\n \nint parseArgs(const string &s) {\n  istringstream is(s);\n  string s2;\n  is >> s2;\n  int v = 0;\n  for(;;) {\n    is >> s2;\n    if(!is) break;\n    v |= 1 << (s2[0] - 'A');\n  }\n  return v;\n}\n \nint go(int s) {\n  for(;;) {\n    if(poz >= n) return s;\n    istringstream is(code[poz]);\n    string com; is >> com;\n    if(com == \"END\" || com == \"ELSE\") return s;\n    if(s & (1 << 26))\n      printf(\"Line %d: unreachable code\\n\", poz + 1);\n    if(com == \"RETURN\") {\n      string s2; is >> s2;\n      int v = readValue(s2);\n      output(s,v);\n      s |= (1 << 30) - 1;\n      ++poz;\n    }\n    else if(com == \"IF\") {\n      string s2; is >> s2;\n      int v = readValue(s2);\n      is >> s2; is >> s2;\n      v |= readValue(s2);\n      output(s,v);\n      ++poz;\n      int then1 = go(s);\n      int else1 = 0;\n      istringstream is2(code[poz]);\n      is2 >> s2; ++poz;\n      if(s2==\"ELSE\") {\n        else1 = go(s);\n        ++poz;\n      }\n      s |= then1 & else1;\n    }\n    else { // assigment\n      int left = readValue(com);\n      string s2; is >> s2;\n      is >> s2;\n      int v = readValue(s2);\n      is >> s2;\n      if(is){\n        is >> s2;\n        v |= readValue(s2);\n      }\n      output(s, v);\n      s |= left;\n      ++poz;\n    }\n  }\n  return -1;\n}\n \nint main() {\n\tchar line[100];\n\twhile(fgets(line, 100, stdin) != NULL)\n\t\tcode.push_back(line);\n    n = code.size();\n    int v = parseArgs(code[0]);\n    poz = 1;\n    go(v | (1<<27));\n\treturn 0;\n}\n```",
        "postTime": 1627310621,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P2509 [SCOI2008]\u8b66\u544a \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u771f\u662f\u70e6\u4eba\uff0c\u7f16\u5b8c\u7a0b\u5e8f\u8c03\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\u624d\u8c03\u51fa\u6765\u3002\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u6781\u5176\u9ebb\u70e6\u7684\u6a21\u62df\u9898\u3002\n\n\u7b2c\u4e8c\uff0c\u6211\u4eec\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u53d1\u73b0\u603b\u5171\u53ea\u6709\u516d\u79cd\u8bed\u53e5\uff0c\u5206\u522b\u4e3a\uff1aparam\u8bed\u53e5\uff0c\u8d4b\u503c\u8bed\u53e5\uff0creturn\u8bed\u53e5\uff0cif\u8bed\u53e5\uff0celse\u8bed\u53e5\u548cend if\u8bed\u53e5\u3002\u6211\u4eec\u5bf9\u6bcf\u4e00\u6761\u8bed\u53e5\u8fdb\u884c\u904d\u5386\u3002\n\nparam\u8bed\u53e5\uff1a\u5728\u8f93\u5165\u5f00\u5934\uff0c\u53ea\u9700\u8981\u7528\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5df2\u7ecf\u5b9a\u4e49\u7684\u53d8\u91cf\u3002\n\n\u8d4b\u503c\u8bed\u53e5\uff1a\u8bb0\u5f55\u7b49\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\uff0c\u5e76\u5224\u65ad\u7b49\u53f7\u53f3\u8fb9\u7684\u53d8\u91cf\u662f\u5426\u51fa\u73b0\u3002\n\nreturn\u8bed\u53e5\uff1a\u5148\u5224\u65adreturn\u540e\u7684\u53d8\u91cf\u662f\u5426\u51fa\u73b0\uff0c\u518d\u5c06\u540e\u9762\u7684\u8bed\u53e5\u8f93\u51fa\u8b66\u544a\u3002\n\nif\u8bed\u53e5\uff1a\u8fdb\u884c\u9012\u5f52\uff0c\u5c06if\u5d4c\u5957\u7684\u5185\u5bb9\u5f53\u4f5c\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\uff0c\u8fdb\u884c\u5982\u4e0a\u64cd\u4f5c\u3002\n\nelse\u548cend if\u8bed\u53e5\uff1a\u8df3\u51fa\u9012\u5f52\u3002\n\n\u6700\u540e\uff0c\u8fd9\u9898\u6709\u51e0\u4e2a\u6bd4\u8f83\u5751\u7684\u5730\u65b9\uff1a\n\n1\u3001\u4f1a\u51fa\u73b0A=A+1\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5148\u5224\u65ad\u7b49\u5f0f\u53f3\u8fb9\uff0c\u518d\u5224\u65ad\u7b49\u5f0f\u5de6\u8fb9\uff1b\n\n2\u3001end if\u548celse\u4e0d\u80fd\u8b66\u544a\uff1b\n\n3\u3001\u6709\u65f6\u5019\u7a0b\u5e8f\u505a\u5230\u4e00\u534a\u5c31return\u4e86\uff0c\u800c\u4e14\u662f\u5728if\u4e2dreturn\uff0c\u5982\u4e0b\u4f8b\u5b50\uff1a\n\nIF A=1 THEN\n\nRETURN A\n\nELSE\nRETURN A\n\nEND IF\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u5f62\uff0c\u9700\u8981\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55if\u548celse\u4e2dreturn\u7684\u60c5\u51b5\uff1b\n\n4\u3001\u6709\u7684\u53d8\u91cf\u5728if\u548celse\u90fd\u51fa\u73b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5df2\u7ecf\u88ab\u8bb0\u5f55\uff0c\u4e0b\u6b21\u51fa\u73b0\u4e0d\u80fd\u8b66\u544a\uff0c\u5982\u4e0b\u4f8b\u5b50\uff1a\n\n```cpp\nIF A=1 THEN\nQ=1\nELSE\nQ=2\nEND IF\n```\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cQ\u5df2\u7ecf\u88ab\u5b9a\u4e49\uff1b\n5\u3001if\u6216else\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u5916\u90e8\u53ef\u80fd\u88ab\u8b66\u544a\uff1b\n\n\u4e0b\u9762\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nprogram p2509;\ntype arr=array[1..26] of boolean;\nvar tot:longint;\n    s:array[1..100] of ansistring;\n    b:arr;\nprocedure init;\nbegin\n  tot:=0;\n  while not eof do\n  begin\n    inc(tot);\n    readln(s[tot]);\n  end;\nend;\nprocedure warn1(n:longint;c:char);\nbegin\n  writeln('Line ',n,': variable ',c,' might not have been initialized');\nend;\nprocedure warn2(n:longint);\nbegin\n  writeln('Line ',n,': unreachable code');\nend;\nfunction judge(str:ansistring):longint;\nbegin\n  if str[2]='F' then\n    exit(3)\n  else if str[2]='E' then\n    exit(2)\n  else if str[2]='L' then\n    exit(4)\n  else if str[2]='N' then\n    exit(5)\n  else\n    exit(1);\nend;\nfunction dfs(var k:longint;var c:arr):boolean;\nvar d,e,c1,c2:arr;\n    str:ansistring;\n    i,j,sum:longint;\n    a:array[1..26] of longint;\n    b1,b2:boolean;\nbegin\n  d:=c;\n  while k<=tot do\n  begin\n    str:=s[k];\n    if judge(str)=1 then                                                                                                 //\u8d4b\u503c\u8bed\u53e5\n    begin\n      fillchar(a,sizeof(a),0);\n      for i:=5 to length(str) do\n        if (str[i]>='A') and (str[i]<='Z') and not c[ord(str[i])-64] then\n          inc(a[ord(str[i])-64]);\n      for i:=1 to 26 do\n        if a[i]>0 then\n          warn1(k,chr(i+64));\n      c[ord(str[1])-64]:=true;\n    end\n    else if judge(str)=2 then                                                                                        //return\u8bed\u53e5\n    begin\n      fillchar(a,sizeof(a),0);\n      for i:=8 to length(str) do\n        if (str[i]>='A') and (str[i]<='Z') and not c[ord(str[i])-64] then\n          inc(a[ord(str[i])-64]);\n      for i:=1 to 26 do\n        if a[i]>0 then\n          warn1(k,chr(i+64));\n      sum:=0;\n      j:=k;\n      inc(k);\n      while k<=tot do\n      begin\n        str:=s[k];\n        if judge(str)=3 then inc(sum);\n        if sum=0 then\n        if (str[2]='L') or (str[2]='N') then\n        begin\n          for i:=j+1 to k-1 do\n            if judge(s[i])<=3 then warn2(i);\n          c:=d;\n          exit(true);\n        end;\n      if str[2]='N' then dec(sum);\n      inc(k);\n    end;\n    if k>tot then\n      for i:=j+1 to tot do\n        if judge(s[i])<=3 then warn2(i);\n    end\n    else if judge(str)=3 then                                                                                      //if\u8bed\u53e5\n    begin\n      j:=3;\n      while copy(str,j,4)<>'THEN' do\n        inc(j);\n      fillchar(a,sizeof(a),0);\n      for i:=3 to j-1 do\n        if (str[i]>='A') and (str[i]<='Z') and not c[ord(str[i])-64] then\n          inc(a[ord(str[i])-64]);\n      for i:=1 to 26 do\n        if a[i]>0 then\n          warn1(k,chr(i+64));\n      e:=c;\n      inc(k);\n      b1:=dfs(k,c);\n      c1:=c;\n      c:=e;\n      if judge(s[k])=4 then\n      begin\n        inc(k);\n        b2:=dfs(k,c);\n        c2:=c;\n        c:=e;\n        if b1 and not b2 then\n          c:=c2\n        else if not b1 and b2 then\n          c:=c1\n        else if not b1 and not b2 then\n        begin\n          for i:=1 to 26 do\n            if c1[i] and c2[i] then c[i]:=true;\n        end;\n        b1:=b1 and b2;\n      end\n      else\n        b1:=false;\n      if b1 then\n      begin\n        sum:=0;\n        j:=k;\n        inc(k);\n        while k<=tot do\n        begin\n          str:=s[k];\n          if judge(str)=3 then inc(sum);\n          if sum=0 then\n          if (str[2]='L') or (str[2]='N') then\n          begin\n            for i:=j+1 to k-1 do\n              if judge(s[i])<=3 then warn2(i);\n            c:=d;\n            exit(true);\n          end;\n          if str[2]='N' then dec(sum);\n          inc(k);\n        end;\n        if k>tot then\n          for i:=j+1 to tot do\n            if judge(s[i])<=3 then warn2(i);\n      end;\n    end\n    else if judge(str)=4 then                                                                             //else\u8bed\u53e5\n    begin\n      exit(false);\n    end\n    else if judge(str)=5 then                                                                              //end if\u8bed\u53e5\n    begin\n      exit(false);\n    end;\n    inc(k);\n  end;\nend;\nprocedure main;\nvar i,l:longint;\n    bool:boolean;\nbegin\n  l:=length(s[1]);\n  fillchar(b,sizeof(b),false);\n  for i:=7 to l do\n    if (s[1][i]>='A') and (s[1][i]<='Z') then\n      b[ord(s[1][i])-64]:=true;\n  i:=2;\n  bool:=dfs(i,b);\nend;\nbegin\n  init;\n  main;\nend.\n```",
        "postTime": 1492959303,
        "uid": 27469,
        "name": "xh2010",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2509 \u3010[SCOI2008]\u8b66\u544a\u3011"
    }
]