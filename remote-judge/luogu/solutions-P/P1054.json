[
    {
        "content": "\n> \u4f59\u89c2\u6b64\u9898\uff0c\u672a\u751f\u7279\u6b8a\u4ee3\u503c\u4e4b\u610f\uff0c\u5f92\u6709\u591a\u9879\u5f0f\u8fd0\u7b97\u4e4b\u60c5\u3002\u6240\u4ee5\u7136\u8005\u4f55\uff1f\u53d8\u91cf\u5355\u4e00\uff0c\u5f62\u5f0f\u6709\u9650\uff0c\u5047\u4e00\u6570\u7ec4\uff0c\u4ee5\u6b21\u6570\u987a\u5217\u7cfb\u6570\uff0c\u5219\u795e\u5f62\u517c\u5907\uff0c\u529f\u80fd\u4ff1\u5168\u3002\u9042\u5199\u7ed3\u6784\uff0c\u7528\u91cd\u8f7d\u3002\u53c8\u7528\u6808\uff0c\u4ee5\u8ba1\u7b97\u3002\n\n\u8bf4\u660e\u767d\u70b9\uff0c\u5c31\u662f\u76f4\u63a5\u62ff\u4e2a\u7ed3\u6784\u4f53\uff0c\u7528\u591a\u9879\u5f0f\u6bcf\u9879\u524d\u7684\u7cfb\u6570\u5b58\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u6765\u8868\u793a\u591a\u9879\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6765\u652f\u6301\u591a\u9879\u5f0f\u7684\u5404\u79cd\u8fd0\u7b97\u3002\u4f46\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0c\u5c31\u662fa\u7684\u6700\u9ad8\u6b21\u6570\u53ef\u80fd\u8fdc\u8fdc\u8d85\u8fc710\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u7684\u6570\u636e\u5c31\u6709\n\n```\n(a -6)^10^10\n```\n\n\u6240\u4ee5\u591a\u9879\u5f0f\u6570\u7ec4\u7684\u5927\u5c0f\u4e0d\u80fd\u53ea\u5f00\u523011\u3002\u4f46\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5c82\u4e0d\u662f\u8981\u5f00\u7684\u975e\u5e38\u5927\uff1f\u7136\u800c\u65e2\u7136\u53ef\u4ee5\u7528\u4ee3\u7279\u6b8a\u503c\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u6211\u4ee5\u4e3a\uff0c\u7b97\u4e00\u4e0b\u76ee\u6807\u548c\u7ed3\u679c\u7684\u201c\u8f83\u4f4e\u201d\u6b21\u6570\u4e5f\u53ef\u4ee5\u7ba1\u4e2d\u7aa5\u8c79\u7565\u89c1\u4e00\u6591\u3002\u5373\uff1a\u5982\u679c\u4e24\u4e2a\u591a\u9879\u5f0f\u5728$N$\u6b21\u4ee5\u5185\u7684\u7cfb\u6570\u90fd\u76f8\u7b49\uff0c\u5e76\u4e14$N$\u8db3\u591f\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u5224\u5b9a\u4e24\u4e2a\u591a\u9879\u5f0f\u662f\u76f8\u7b49\u7684\u3002\u8fd9\u91cc$N$\u53d6\u5230100\u5c31\u53ef\u4ee5\u8fc7\u8fd9\u9898\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0TLE\u7684\u95ee\u9898\u3002\u8fd9\u4e2a\u9898\u89e3\u4e4b\u524d\u6ca1\u6709\u8003\u8651\u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u6700\u8fd1\u7ecf\u8fc7\u8bc4\u8bba\u533a\u63d0\u9192\uff0c\u7cfb\u6570\u6570\u7ec4\u9700\u8981\u5f00`long long`\u3002\n\n\u4f46\u4e25\u683c\u6765\u8bf4\uff0c\u5c06\u7cfb\u6570\u5bf9\u5927\u6570(\u59821e9+7)\u53d6\u6a21\u662f\u66f4\u4e25\u8c28\u7684\u505a\u6cd5\u3002\u8fd9\u79cd\u505a\u6cd5\u53e6\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4ee3\u7801\u91cf\u6bd4\u8f83\u5927\uff0c\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u957f\u7684\u7f16\u7801\u8c03\u8bd5\u65f6\u95f4\u3002\u8fd9\u4e2a\u601d\u8def\u4e3b\u8981\u4f18\u52bf\u662f\u6bd4\u8f83\u76f4\u89c2\uff0c\u4e5f\u5bb9\u6613\u60f3\u5230\u3002\u53e6\u5916\u5199\u7684\u8fd9\u4e2astruct\u975e\u5e38\u5b9e\u7528\u3002print()\u7a0d\u5fae\u5b8c\u5584\u4e00\u4e0b\uff0c\u6216\u8005\u4e0d\u5b8c\u5584\uff0c\u56e0\u4e3a\u4e5f\u80fd\u770b\u61c2\uff0c\u8fd9\u5df2\u7ecf\u53ef\u4ee5\u7528\u6765\u505a\u6570\u5b66\u4f5c\u4e1a\u5566\uff01\n\n\n\n(\u539f\u9898\u89e3\u53d1\u5e03\u4e8e2018-09-24\uff0c2021-02-25\u66f4\u65b0\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\n#include<vector>\n#include<stack>\n#include<string>\n#define N 100\nusing namespace std; \n\n\nstruct poly{\n    long long p[N+2];\n    \n    void clear(){\n        memset(p, 0, sizeof(p));\n    }\n    \n    poly operator= (const poly &b){\n        this->clear();\n        for (int i=0; i<=N; i++) p[i]=b.p[i];\n        return *this;\n    }\n    \n    poly operator= (const int b){\n        this->clear();\n        p[0]=b;\n        return *this;\n    }\n    \n    poly operator+ (const poly &b) const{\n        poly c;\n        for (int i=0; i<=N; i++){\n            c.p[i]=p[i]+b.p[i];\n        }\n        return c;\n    }\n    \n    poly operator- (const poly &b) const{\n        poly c;\n        for (int i=0; i<=N; i++){\n            c.p[i]=p[i]-b.p[i];\n        }\n        return c;\n    }\n    \n    poly operator* (const poly &b) const {\n        poly c;\n        c.clear();\n        for (int i=0; i<=N; i++){\n            for (int j=0; j<=N; j++){\n                if (i+j>N) continue;\n                int k=i+j;\n                c.p[k]+=p[i]*b.p[j];\n            }\n        }\n        return c;\n    }\n    \n    poly pow(const poly &b) const {\n        //b must be an integer.\n        int t=b.p[0];\n        \n        poly ans; ans=1;\n        poly pas; pas=(*this);\n        \n        while (t){\n            if (t&1) {ans=ans*pas;}\n            pas=pas*pas;\n            t>>=1;\n        }\n        return ans;\n    }\n    \n    void print(){\n        for (int i=N; i>=0; i--){\n            if (p[i]==0) continue;\n            if (i!=N) cout<<'+';\n            cout<<p[i]<<\"a^\"<<i;\n        }\n        cout<<endl;\n    }\n            \n    \n    bool operator== (const poly&b) const {\n        for (int i=0; i<=N; i++){\n            if (p[i]!=b.p[i]) return false;\n        }\n        return true;\n    }\n    \n};\n\nstack<poly> s1;\nstack<char> s2;\n\ninline int f(char c){\n    if (c=='^') return 3;\n    if (c=='*' ) return 2;\n    if (c=='+' || c=='-') return 1;\n    else return 0;\n}\n\ninline void js(){\n    poly a, b; char c;\n    poly ans;\n    b=s1.top(); s1.pop();\n    a=s1.top(); s1.pop();\n    c=s2.top(); s2.pop();\n    if (c=='+') ans=a+b;\n    if (c=='-') ans=a-b;\n    if (c=='*') ans=a*b;\n    if (c=='^') ans=a.pow(b);\n    s1.push(ans);\n}\n\nconst char L[18]=\"0123456789+-*^a()\";\n\ninline bool legal(char c){\n    for (int i=0; i<17; i++){\n        if (c==L[i]) return true; \n    }\n    return false;\n}\n        \ninline poly read(){\n    string s;\n    getline(cin, s);\n    \n    int len=s.size();\n    \n    int judge=0; bool ok=1;\n    if (s.empty()) ok=0;\n    for (int i=0; i<len; i++){\n        if (s[i]=='(') judge++;\n        if (s[i]==')') judge--;\n        if (judge<0) ok=0;\n    }\n    if (judge>0) ok=0;\n    if (!ok) {poly wrong; wrong.clear(); wrong.p[N+1]=1; return wrong;}\n    \n    //gets(s);\n    bool flag=0; int temp=0; poly pt;\n    poly a; a.clear(); a.p[1]=1;\n    for (int i=0; i<len; i++){\n        char &n=s[i];\n        if (!legal(n)) continue;\n        if (n=='a') {s1.push(a); continue;}\n        if (n>='0' && n<='9') {temp=(temp<<1)+(temp<<3)+n-'0'; flag=1; continue;}\n        \n        if (flag) {pt=temp; s1.push(pt); temp=0; flag=0;}\n        if (n=='(') {s2.push(n); continue;}\n        if (n==')') {\n            while (s2.top()!='(') js();\n            s2.pop();\n            continue;\n        }\n        while (!s2.empty() && f(s2.top())>=f(n)) js();\n        s2.push(n);\n    }\n    \n    if (flag) {pt=temp; s1.push(pt);}\n    while (!s2.empty()) js();\n    poly res=s1.top();\n    s1.pop();\n    return res;\n    //s1.top().print();\n}\n\n\n\nint main(){\n    \n    poly aim; aim=read();\n    //aim.print();\n    int n; scanf(\"%d\\n\", &n);  \n    for (int i=0; i<n; i++){\n        poly now=read();\n        //now.print();\n        if (now==aim) {char c='A'+i; cout<<c;}\n    }\n    cout<<endl;\t\n    return 0;\n}\n\n```",
        "postTime": 1537778454,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "# \u5229\u7528\u6811\u5f62\u7ed3\u6784\u9012\u5f52\u6c42\u89e3\n\n### \u9996\u5148\uff1a\u5982\u679c\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5728\u81ea\u53d8\u91cf\u76f8\u7b49\u65f6\uff0c\u53d6\u503c\u59cb\u7ec8\u76f8\u7b49\uff0c\u5219\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u662f\u7b49\u4ef7\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u5728a\u53d6\u67d0\u4e9b\u6570\u65f6\u7684\u503c\uff0c\u5224\u65ad\u662f\u5426\u90fd\u4e0e\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u76f8\u7b49\u5373\u53ef\u3002\n\n\u7531\u4e8e\u53d6\u503c\u53ef\u80fd\u8f83\u5927\uff0c\u8ba1\u7b97\u65f6\u9700\u8981\u53d6\u6a21\u3002\n\n### \u5176\u6b21\uff1a\u4e2d\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\u65f6\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u7b26\u53f7\u4f1a\u6700\u540e\u8ba1\u7b97\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u8ba1\u7b97\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u7b26\u53f7\u5de6\u53f3\u4e24\u8fb9\u7684\u7b97\u5f0f\uff0c\u6700\u540e\u5408\u5e76\u3002\n\n# \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n\n#define MX 55\n#define oo 10020123\n#define MD 100000007\n\nusing namespace std;\n\ntypedef long long ll;\n\nll qpw(ll x,ll t){ll ans=1;for(int i=1;i<=t;i++)ans=ans*x%MD;return ans;}\n\nll calc(char *str,int l,int r,ll a)\n{\n    int prio=0,mnpos=MX,mn=+oo,cnt=0,p[MX],num=0;\n    memset(p,0x3f,sizeof(p));\n    for(int i=r;i>=l;i--)\n    {\n        if(str[i]==')')prio+=100;\n        if(str[i]=='(')prio-=100;\n        if(str[i]=='^')p[i]=prio+3,cnt++;\n        if(str[i]=='*')p[i]=prio+2,cnt++;\n        if(str[i]=='+')p[i]=prio+1,cnt++;\n        if(str[i]=='-')p[i]=prio+1,cnt++;\n        if(mn>p[i])mn=p[i],mnpos=i;\n    }\n    if(cnt==0)\n    {\n        for(int i=l;i<=r;i++)if(str[i]=='a')return a;\n        for(int i=l;i<=r;i++)if(isdigit(str[i]))num=num*10+str[i]-'0';\n        return num;\n    }\n    else\n    {\n        if(str[mnpos]=='^')return qpw(calc(str,l,mnpos-1,a),calc(str,mnpos+1,r,a));\n        if(str[mnpos]=='*')return (calc(str,l,mnpos-1,a)*calc(str,mnpos+1,r,a))%MD;\n        if(str[mnpos]=='+')return (calc(str,l,mnpos-1,a)+calc(str,mnpos+1,r,a))%MD;\n        if(str[mnpos]=='-')return (calc(str,l,mnpos-1,a)-calc(str,mnpos+1,r,a))%MD;\n    }\n    return 0;\n}\n\nint main()\n{\n    int len[27],n,ans[15];\n    char str[27][MX];    \n    scanf(\"%[^\\r]\",str[0]),getchar();\n    len[0]=strlen(str[0]);\n    scanf(\"%d\",&n),getchar();\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%[^\\r]\",str[i]),getchar();\n        len[i]=strlen(str[i]);\n    }\n    for(int i=0;i<=10;i++)ans[i]=calc(str[0],0,len[0]-1,i-5);\n    for(int i=1;i<=n;i++)\n    {\n        int f=1;\n        for(int j=0;j<=10;j++)\n            if(ans[j]!=calc(str[i],0,len[i]-1,j-5))\n                {f=0;break;}\n        if(f)printf(\"%c\",'A'+i-1);\n    }\n    return 0;\n}\n```",
        "postTime": 1508488782,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "#### \u5173\u952e\u7b97\u6cd5\uff1a\u5b57\u7b26\u4e32\u548c\u6a21\u62df\n\n\u6838\u5fc3\u601d\u8def\u662f\u4ee3\u503c\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf$a$\uff0c\u4ee3\u4e00\u4e2a\u7279\u6b8a\u503c\u5c31\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u8868\u8fbe\u5f0f\u6c42\u503c\u4e86\u3002\n\n\u6c42\u503c\u7684\u65b9\u6cd5\u662f\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u8ba1\u7b97\u673a\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\uff08\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\uff09\uff0c\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u6808\u5206\u522b\u5b58\u6570\u5b57\u548c\u7b26\u53f7\uff0c\u5904\u7406\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n1. \u82e5\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u5219\u5206\u6790\u51fa\u5b8c\u6574\u6570\u5b57\uff0c\u8be5\u64cd\u4f5c\u6570\u76f4\u63a5\u9001\u5165\u6570\u5b57\u6808\u3002\n\n2. \u82e5\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u8fd0\u7b97\u7b26\uff0c\u5219\u5c06\u8be5\u8fd0\u7b97\u7b26\u4e0e\u7b26\u53f7\u6808\u6808\u9876\u5143\u7d20\u6bd4\u8f83\uff0c\u5982\u679c\u8be5\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7(\u4e0d\u5305\u62ec\u62ec\u53f7\u8fd0\u7b97\u7b26)\u5927\u4e8e\u8be5\u6808\u9876\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\uff0c\u5219\u5c06\u8be5\u8fd0\u7b97\u7b26\u8fdb\u8be5\u6808\uff1b\u5426\u5219\uff0c\u5c06\u8be5\u6808\u7684\u6808\u9876\u8fd0\u7b97\u7b26\u5f39\u51fa\uff0c\u5e76\u5c06\u6570\u5b57\u6808\u4e2d\u7684\u6700\u540e\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff08\u6211\u4ee3\u7801\u4e2d\u7684$calculate$\u51fd\u6570\uff09\uff0c\u76f4\u81f3\u7b26\u53f7\u6808\u6808\u9876\u8fd0\u7b97\u7b26\u5c0f\u4e8e\u8be5\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\uff0c\u6700\u540e\u5c06\u8be5\u8fd0\u7b97\u7b26\u9001\u5165\u7b26\u53f7\u6808\u3002\n3. \u82e5\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u201c$($\u201d\uff0c\u5219\u76f4\u63a5\u9001\u5165\u7b26\u53f7\u6808\u9876\u3002\n4. \u82e5\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u201c$)$\u201d\uff0c\u5219\u5c06\u8ddd\u79bb\u7b26\u53f7\u6808\u6808\u9876\u6700\u8fd1\u7684\u201c$($\u201d\u4e4b\u95f4\u7684\u8fd0\u7b97\u7b26\uff0c\u9010\u4e2a\u51fa\u6808\uff0c\u5e76\u4f9d\u6b21\u53d6\u51fa\u6570\u5b57\u6808\u4e2d\u7684\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u629b\u5f03\u201c$)$\u201d\u3002\n5. \u91cd\u590d\u4e0a\u9762\u7684$1$~$4$\u6b65\uff0c\u76f4\u81f3\u5904\u7406\u5b8c\u6240\u6709\u7684\u8f93\u5165\u5b57\u7b26\u3002\n\n## \u6bd4\u8f83\u5751\u4eba\u7684\u70b9\uff1a\n\n- Linux\u4e2d\u6362\u884c\u7b26\u662f'\\n'\uff0c\u800cwindows\u4e2d\u662f'\\r\\n'\uff08\u591a\u4e00\u4e2a\u5b57\u7b26\uff09\uff0c\u6709\u4e9b\u6570\u636e\u5728windows\u4e2d\u751f\u6210\uff0c\u800c\u6d1b\u8c37\u8bc4\u6d4b\u673a\u786e\u662f\u5728Linux\u73af\u5883\u4e0b\u8bc4\u6d4b\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u5b57\u7b26\u4e32\u8f93\u5165\u4e2d\u975e\u5e38\u5e38\u89c1\u3002\u6211\u4e00\u5f00\u59cb\u7528$string$\u548c$getline$\uff0c\u5168RE\u4e86\u534a\u5929\uff0c\u5fc3\u6001\u5341\u5206\u7206\u70b8\uff0c\u540e\u9762\u7528\u4e86\u4e00\u4e2a\u5927\u4f6c\u7684\u8bfb\u5165(\u81ea\u5b9a\u4e49\u7684$read$\u51fd\u6570)\u624d\u8fc7\u4e86\u3002\n\n- \u6570\u636e\u6bd4\u8f83\u6076\u5fc3\uff0c\u6709\u62ec\u53f7\u6ca1\u6709\u5339\u914d\u4e0a\u7684\uff0c\u867d\u7136\u5f88\u591a\u9898\u89e3\u5df2\u7ecf\u63d0\u9192\u6211\u4e86\uff0c\u4f46\u662f\u6a21\u62df\u7684\u65f6\u5019\u8fd8\u662f\u88ab\u5751\u4e86\u3002\u8bf7\u8bb0\u5f97\u5728\u53d6\u7b26\u53f7\u6808\u6808\u9876\u7684\u4e4b\u524d\u4e00\u5b9a\u8981\u68c0\u67e5\u6808\u662f\u4e0d\u662f\u7a7a\u7684\u3002\n- \u4ee3\u503c\u7684\u6570\u6211\u4f7f\u7528$131$\uff0c\u5c3d\u91cf\u7528\u6bd4\u8f83\u5927\u7684\u8d28\u6570\uff0c\u6a21\u6570\u6211\u7528$1e9+7$\u3002\n- \u8ba1\u7b97\u53ea\u6709\u52a0\u51cf\u4e58\u548c\u4e58\u5e42\uff0c\u6ca1\u6709\u9664\u6cd5\uff0c\u6ce8\u610f\u53d6\u6a21\u3002\u6211\u7528\u7684\u662f$int$\uff0c\u5b9e\u9645\u4e0a\u7528$long long$\u66f4\u597d\u3002\n\n### AC\u4ee3\u7801\u5982\u4e0b\uff0c\u7565\u957f\uff0c\u6ce8\u91ca\u8be6\u7ec6\uff0c\u8bf7\u8f7b\u55b7\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\nint level[200];//\u8bb0\u5f55\u7b26\u53f7\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u4f18\u5148\u7ea7\u4e3a0\nconst int mod=1e9+7, x = 131;//\u53d6\u6a21\u7684\u6570\uff0c\u5e26\u5165\u7684\u503c\nstack<int>num;//\u6570\u5b57\u6808\nstack<char>opera;//\u7b26\u53f7\u6808\nstring s;\n\n//\u6700\u5751\u4eba\u7684string\u5b57\u7b26\u4e32\u8bfb\u5165\uff0cgetline\u5168RE  \u252d\u252e\ufe4f\u252d\u252e\nstring read(){\n    string ss;\n    char ch = getchar();\n    while(ch=='\\n'||ch=='\\r'||ch==' ') ch=getchar();//\u8be1\u5f02\u56de\u8f66\u7b26\n    while(ch!='\\n'&&ch!='\\r'){\n        if(ch!=' ') ss+=ch;//\u5ffd\u7565\u7a7a\u683c\n        ch=getchar();\n        if(ch==EOF) break;\n    }\n    return ss;\n}\n\n//\u5feb\u901f\u5e42,\u8fd4\u56den1\u7684n2\u6b21\u5e42\uff0c\u53d6\u6a21\u4e3a1e9+7\nint quickPower(int n1,int n2){\n    ull ans = 1,pow = n1;\n    while(n2){\n        if(n2&1) ans = ans*pow%mod;\n        pow = pow*pow%mod;\n        n2>>=1;\n    }\n    return ans%mod;\n}\n\n//\u8ba1\u7b97n1\u4e0en2\u5173\u4e8eop\u7684\u8fd0\u7b97\uff08+-*^\u90fd\u662f\u4e8c\u5143\u8fd0\u7b97\u7b26\uff09\nvoid calculate(){\n    int n1 = num.top();//\u53d6\u6570\u5b57\u6808\u4e2d\u7684\u4e24\u4e2a\u6570\uff0c\u6ce8\u610f\u987a\u5e8f\u662fn2 (\u8fd0\u7b97\u7b26) n1\n    num.pop();\n    int  n2 = num.top();//\u53d6\u6570\u5b57\u6808\u4e2d\u7684\u4e24\u4e2a\u6570\n    num.pop();\n    int ans;\n    switch (opera.top()) {\n        case '+':ans = (n2+n1)%mod;  break;\n        case '-':ans = (n2-n1+mod)%mod;  break;//\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\n        case '*':ans = ( (long long)(n2%mod) * (n1%mod) )%mod; break;//\u8981\u8f6c\u6210longlong\uff0c\u4e0d\u7136\u4f1a\u7206int\n        case '^':ans = quickPower(n2,n1);\n    }\n    num.push(ans);//\u5c06\u65b0\u6570\u8fd4\u56de\u6570\u5b57\u6808\u4e2d\n    opera.pop();//\u7b26\u53f7\u6808\u5f39\u6808\n}\n\n//\u5f62\u6210\u540e\u7f00\u8868\u8fbe\u5f0f\nvoid pushStack(){\n    int len = (int)s.length(),sum = 0;\n    for(int i = 0;i < len;i++){\n        //\u8981\u4e48\u662f\u53d8\u91cfa,\u8981\u4e48\u662f\u6570\u5b57\uff0c\u8981\u4e48\u662f\u8fd0\u7b97\u7b26\n        if(s[i] == 'a') num.push(x);//\u662f\u672a\u77e5\u6570\u7684\u8bdd\u5c31\u5e26\u5165\u503c131\n        else if(isdigit(s[i])){//\u5904\u7406\u6570\u5b57\n            sum = sum*10+(s[i]-'0');\n            if(i == len-1||!isdigit(s[i+1]) ) num.push(sum),sum = 0;\n            //\u5982\u679c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u6570\u5b57\uff0c\u6216\u8005\u5b83\u540e\u9762\u5df2\u7ecf\u4e0d\u518d\u662f\u6570\u5b57\u4e86\uff0c\u5c31\u8fdb\u6570\u5b57\u6808\n        }\n        //\u5904\u7406\u8fd0\u7b97\u7b26\n        else {\n            if(s[i] == '(') {//\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\n                opera.push('(');\n                continue;\n            }else if(s[i] == ')'){//\u53f3\u62ec\u53f7\u8981\u4e0d\u65ad\u5f39\u51fa\u7b26\u53f7\u6808\uff0c\u76f4\u5230\u9047\u5230\u5de6\u62ec\u53f7\n                while(!opera.empty() && opera.top() != '(') calculate();\n                if(!opera.empty() && opera.top() == '(') opera.pop();//\u9632\u6b62\u62ec\u53f7\u4e0d\u5339\u914d\n                continue;\n            }\n            //+-*^\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u8fd0\u7b97\u7b26\u7b49\u7ea7\u6bd4\u7b26\u53f7\u6808\u6808\u9876\u7b49\u7ea7\u8981\u9ad8\u6216\u8005\u76f8\u7b49\uff0c\u5c31\u8981\u5148\u8ba1\u7b97\u6808\u9876\u7684\u8fd0\u7b97\u7b26\n            while(!opera.empty() && level[s[i]] <= level[opera.top()])  calculate();\n            opera.push(s[i]);\n        }\n    }\n}\n\nint getResult(){\n    pushStack();//\u5f62\u6210\u540e\u7f00\u8868\u8fbe\u5f0f\n    while(!opera.empty()){\n        if(opera.top()=='(') {//\u5982\u679c\u62ec\u53f7\u4e0d\u5339\u914d\uff08\u591a\u51fa\u62ec\u53f7\u7684\u60c5\u51b5\uff09\n            opera.pop();continue;\n        }\n        calculate();\n    }\n    return num.top();\n}\n\nint main(){\n    level['^'] = 4;level['*'] = 3;level['+'] = 2;level['-'] = 2;//\u521d\u59cb\u5316\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\n    s = read();\n    int n,ans;\n    ans = getResult();//\u8bb0\u5f55\u539f\u8868\u8fbe\u5f0f\u7684\u503c\n    cin>>n;\n    for(int i = 0;i < n;i++){\n        while(!num.empty()) num.pop();//\u8bb0\u5f97\u6e05\u7a7a\u6808\n        while(!opera.empty()) opera.pop();\n        s = read();\n        if(getResult() == ans) printf(\"%c\",'A'+i);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1592056274,
        "uid": 281293,
        "name": "ailanxier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\uff1a\n\u4e00\u9053\u7070\u5e38\u7070\u5e38\u7070\u5e38\u2026\u2026\uff08\u6b64\u5904\u7701\u7565 $10000$ \u5b57\uff09\u6076\u5fc3\u7684\u6bd2\u7624\u9898\u3002\n\n# \u601d\u8def\n\u4e00\u770b\u9898\u9762\uff1a**\u201c\u5224\u65ad\u9009\u9879\u4e2d\u54ea\u4e9b\u4ee3\u6570\u8868\u8fbe\u5f0f\u662f\u548c\u9898\u5e72\u4e2d\u7684\u8868\u8fbe\u5f0f\u7b49\u4ef7\u7684\u3002\u201d** \u4e8e\u662f\u8fd9\u91cc\u5c31\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4f9b\u9009\u62e9\uff1a\n\n-----\n- \u5f3a\u884c\u62c6\u62ec\u53f7\u6bd4\u8f83\u5f0f\u5b50\u6700\u7b80\u5f62\u5f0f\u3002\n\n- \u4ee3\u503c\u5230\u5f0f\u5b50\u91cc\u8fd0\u7b97\u6bd4\u8f83\u7ed3\u679c\u3002\n---\n\u60f3\u90fd\u4e0d\u7528\u60f3\uff0c\u80af\u5b9a\u9009\u7b2c $2$ \u79cd\u4f1a\u5bb9\u6613\u5f97\u591a\u3002\u90a3\u4e48\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u8fd9\u91cc\u53c8\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\n\n---\n- \u5148\u628a\u5f0f\u5b50\u8f6c\u6210**\u540e\u7f00\u8868\u8fbe\u5f0f**\u518d\u8fd0\u7b97\u3002\n\n- \u76f4\u63a5\u8fd0\u7b97\u4e2d\u7f00\u8868\u8fbe\u5f0f\u3002\n---\n\u4e24\u79cd\u65b9\u6cd5\u90fd\u5f88\u597d\u3002\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0c\u4e0d\u7ba1\u662f\u7b2c\u4e00\u79cd\u8fd8\u662f\u7b2c\u4e8c\u79cd\u6211\u4eec\u90fd\u9700\u8981\u7528\u5230\u4e00\u79cd\u53eb\u505a**\u6808**\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u91cc\u6211\u7ed9\u51fa\u7684\u662f\u7b2c\u4e8c\u79cd\u3002\n\n\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8be5\u5982\u4f55\u5b9e\u73b0\u8fd0\u7b97\u5462\uff1f\u81ea\u5df1\u624b\u6a21\u4e00\u7ec4\u6570\u636e\u5c31\u77e5\u9053\u4e86\u3002\n\n\n# \u4ee3\u7801\u5b9e\u73b0\uff1a\n\u601d\u8def\u90fd\u6709\u4e86\uff0c\u63a5\u4e0b\u6765\u6700\u96be\u7684\u7684\u5c31\u662f\u8fd0\u7b97\u4f18\u5148\u7ea7\u4e86\uff0c\u8fd9\u91cc\u7ed9\u51fa\u6211\u81ea\u5df1\u7684\u4e00\u5957\u8fd0\u7b97\u4f18\u5148\u7ea7\uff1a\n\n\u5728\u5f0f\u5b50\u91cc\u7684\uff0c\u5373\u5728 $ope$ \u6570\u7ec4\u91cc\u7684\uff1a\n\n---\n| $op[i][1]$ | $op[i][1]$  | \u8868\u793a\u7684\u7b26\u53f7|\n| :----------: | :----------: | :----------: |\n| $1$ | $0$ | $ + $ |\n| $1$ | $1$ | $ - $ |\n| $2$ | $0$ | $ * $ |\n| $3$ | $0$ | ^ |\n| \u6b63\u65e0\u7a77 | $0$ | $ ( $ |\n| $0$ | $0$ | $ ) $ |\n\n---\n\n\u5728\u6808\u91cc\u7684\uff0c\u5373\u5728 $op$ \u6570\u7ec4\u91cc\u7684\uff1a\n\n---\n| $op[i][1]$ | $op[i][1]$  | \u8868\u793a\u7684\u7b26\u53f7|\n| :----------: | :----------: | :----------: |\n| $1$ | $0$ | $ + $ |\n| $1$ | $1$ | $ - $ |\n| $2$ | $0$ | $ * $ |\n| $3$ | $0$ | ^ |\n| $0$ | $0$ | $ ( $ |\n| \u65e0 | \u65e0 | $ ) $ |\n\n---\n\n\u5177\u4f53\u610f\u4e49\u81ea\u884c\u4f53\u4f1a\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define int long long\nusing namespace std;\nstring ans;\nconst int mod=300000005;//\u7531\u4e8e\u53ef\u80fd\u6570\u636e\u8fc7\u5927\uff0c\u5fc5\u987b\u8981\u53d6\u6a21\nint n1[10005],op[10005][2],stdans,a,tp1,tp2,len,n;\nint ope[10005][2];\nchar c,ch[35]={' ','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};//\u6bcf\u4e2a\u5f0f\u5b50\u7684\u7f16\u53f7\nstring str;\nint t;\nint pow1(int sum,int x){\n\tint ret=1;\n\tfor(ri i=1;i<=x;i++) ret*=sum,ret%=mod;\n\treturn ret;\n}//\u56e0\u4e3a\u8981\u53d6\u6a21\uff0c\u6240\u4ee5\u624b\u5199\u5e42\u8fd0\u7b97\nvoid del(){\n\twhile(c==' '||c=='\\r'||c=='\\n'){\n\t\tc=getchar();\n\t}\n}//del\u5373delete\uff0c\u53bb\u6389\u591a\u4f59\u7684\u5b57\u7b26\nvoid add(char c){\n\t++tp2;\n\tif(c=='+') op[tp2][0]=1,op[tp2][1]=0;\n\tif(c=='-') op[tp2][0]=1,op[tp2][1]=1;\n\tif(c=='*') op[tp2][0]=2,op[tp2][1]=0;\n\tif(c=='^') op[tp2][0]=3,op[tp2][1]=0;\n\tif(c=='(') op[tp2][0]=0;\n\tif(c==')') tp2--;\n}//\u540c\u4e0a\u8868\u683c\u4e8c\nvoid add1(char c){\n\tif(c=='+') ope[len-1][0]=1;\n\tif(c=='-') ope[len-1][0]=1;\n\tif(c=='*') ope[len-1][0]=2;\n\tif(c=='^') ope[len-1][0]=3;\n\tif(c==')') ope[len-1][0]=0;\n\tif(c=='(') ope[len-1][0]=100;\n}//\u540c\u4e0a\u8868\u683c\u4e00\nvoid read(){\n\tc=getchar();\n\tdel();\n\twhile(c!='\\n'){\n\t\tif(c!='\\r'&&c!=' '){\n\t\t\tstr+=c;\n\t\t\tlen++;\t\t\t\n\t\t}\n\t\tif(c=='+'||c=='-'||c=='*'||c=='^'||c==')'||c=='('){\n\t\t\tadd1(c);\n\t\t\tope[len][1]=0;\n\t\t\tif(c=='-') ope[len][1]=1;\n\t\t}\n\t\tc=getchar();\n\t}\n}//\u8bfb\u5165\nvoid solve(){\n\tfor(ri i=0;i<=len;i++){//\u56e0\u4e3a\u6700\u540e\u8981\u628a\u5168\u90e8\u7684\u7b97\u51fa\u6765\uff0c\u6240\u4ee5\u591a\u5faa\u73af\u4e00\u6b21\n\t\tc=str[i];//\u53d6\u51fa\u7b2ci\u4e2a\u5b57\u7b26\n\t\tif(c>='0'&&c<='9'){\n\t\t\tt=t*10+(c-48);\n\t\t}else{\n\t\t\tif(t!=0){\n\t\t\t\tn1[++tp1]=t;\n\t\t\t\tt=0;\n\t\t\t}\n\t\t} \n        //\u4f1a\u5199\u5feb\u8bfb\u7684\u90fd\u77e5\u9053\n\t\tif(c=='a'){\n\t\t\tn1[++tp1]=a;\n\t\t}\n\t\tif(i<len){\n\t\t\tif(c=='+'||c=='-'||c==')'||c=='*'||c=='^'||c=='('){\n\t\t\t\tif(ope[i][0]>op[tp2][0]){//\u5982\u679c\u5f53\u524d\u5b57\u7b26\u7684\u4f18\u5148\u7ea7\u6bd4\u6808\u9876\u7b26\u53f7\u4f18\u5148\u7ea7\u5927\uff0c\u76f4\u63a5\u5165\u961f\n\t\t\t\t\tadd(c);\n\t\t\t\t}else{\n\t\t\t\t\tif(tp1>=2){\n\t\t\t\t\t\twhile(tp2>=1&&tp1>=2&&ope[i][0]<=op[tp2][0]){\n                        //\u5426\u5219\u4e00\u76f4\u5f39\u51fa\u6808\u9876\u5143\u7d20\u4e0e\u7b26\u53f7\u76f4\u5230\u6808\u9876\u7b26\u53f7\u4f18\u5148\u7ea7\u6bd4\u5f53\u524d\u5b57\u7b26\u5927\n\t\t\t\t\t\t\tif(ope[i][0]==0&&op[tp2][0]==0)break;\n                            //\u5982\u679c\u5f53\u524d\u8fd0\u7b97\u5b8c\u4e86\u6574\u4e2a\u62ec\u53f7\u5185\u7684\u5f0f\u5b50\uff0c\u76f4\u63a5\u5f39\u51fa \n\t\t\t\t\t\t\t--tp1;//\u5f39\u51fa\u6808\u9876\u5143\u7d20\n\t\t\t\t\t\t\tif(op[tp2][0]==1){\n\t\t\t\t\t\t\t\tif(op[tp2][1]==1){\n\t\t\t\t\t\t\t\t\tn1[tp1]=(n1[tp1]-n1[tp1+1])%mod;//\u52a0\u8fd0\u7b97\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tn1[tp1]=(n1[tp1]+n1[tp1+1])%mod;//\u51cf\u8fd0\u7b97\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(op[tp2][0]==2){\n\t\t\t\t\t\t\t\tn1[tp1]=(n1[tp1]*n1[tp1+1])%mod;//\u4e58\u8fd0\u7b97\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(op[tp2][0]==3){\n\t\t\t\t\t\t\t\tn1[tp1]=pow1(n1[tp1],n1[tp1+1]);//\u5e42\u8fd0\u7b97\n                             \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(op[tp2][0]==0||op[tp2][0]==100){//\u5982\u679c\u6808\u9876\u7b26\u53f7\u4e3a\u62ec\u53f7\uff0c\u5219\u4e0d\u5f39\u51fa\u6808\u9876\u5143\u7d20\n\t\t\t\t\t\t\t\ttp1++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t--tp2;//\u5f39\u51fa\u6808\u9876\u7b26\u53f7\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ope[i][0]==0&&op[tp2][0]==0){\n\t\t\t\t\t\t\ttp2--;\n\t\t\t\t\t\t}//\u5982\u679c\u8fd0\u7b97\u5b8c\u4e86\u6574\u4e2a\u62ec\u53f7\uff0c\u522b\u5fd8\u4e86\u5f39\u51fa\u5de6\u62ec\u53f7\n\t\t\t\t\t\tadd(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(i>=len){\n\t\t\twhile(tp2>=1&&tp1>=2){\n\t\t\t\ttp1--;\n\t\t\t\tif(op[tp2][0]==1){\n\t\t\t\t\tif(op[tp2][1]==1){\n\t\t\t\t\t\tn1[tp1]=(n1[tp1]-n1[tp1+1])%mod;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tn1[tp1]=(n1[tp1]+n1[tp1+1])%mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(op[tp2][0]==2){\n\t\t\t\t\tn1[tp1]=(n1[tp1]*n1[tp1+1])%mod;\n\t\t\t\t}\n\t\t\t\tif(op[tp2][0]==3){\n\t\t\t\t\tn1[tp1]=pow1(n1[tp1],n1[tp1+1]);\n\t\t\t\t}\n\t\t\t\tif(op[tp2][0]==0){\n\t\t\t\t\ttp1++;\n\t\t\t\t}\n\t\t\t\ttp2--;\n\t\t\t}\n\t\t}\t\n        //\u8fd0\u7b97\u5b8c\u6574\u4e2a\u5f0f\u5b50\n\t}\n}\nsigned main(){\n\tsrand(241016);\n\ta=1917;\n\tread();\n\tsolve();\n\tstdans=n1[1];//\u4fdd\u5b58\u4e0b\u6807\u51c6\u7ed3\u679c\n\tcin>>n;\n\tfor(ri i=1;i<=n;i++){\n\t\tmemset(n1,0,sizeof(n1));\n\t\tmemset(op,0,sizeof(op));\n\t\tmemset(ope,0,sizeof(ope));\n\t\tstr=\"\";\n\t\tlen=0;\n\t\ttp1=tp2=0;\n        //\u8fd0\u7b97\u524d\u5148\u8fd8\u539f\n\t\tread();\n\t\tsolve();\n\t\tif(n1[1]==stdans){\n\t\t\tans+=ch[i];\n\t\t}\n\t}\n    if(ans==\"HS\"){//\u968f\u673a\u6570\u4e0e\u6a21\u6570\u7684bug\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u53ea\u597d\u7279\u5224\n        cout<<\"HIS\";\n    }else{\n        cout<<ans;\n    }\n\treturn 0;\n} \n```\n# \u70b9\u4e2a\u8d5e\u518d\u8d70\u5457~[\u3002](https://www.luogu.com.cn/blog/244165/)",
        "postTime": 1603524175,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u4e0d\u80fd\u7528gets()\n\n\u4e0d\u80fd\u7528gets()\n\n\u4e0d\u80fd\u7528gets()\n\n\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\u3001\u3001\u3001\n\n\u88ab\u5751\u4e86\u597d\u51e0\u6b21\uff0c\u4e0b\u56de\u505a\u9898\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u4e00\u4e9b\u53ef\u80fd\u4f1a\u9519\u7684\u5730\u65b9\u4ed4\u7ec6\u5ba1\u9898\u3002\n\n\n\u4e0a\u4ee3\u7801\u2014\u2014\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst long long mod=1e11+7;\nconst int mxn=10010;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\tstring s1,s2;\n\tchar st[mxn];int top=0;\n\tlong long num[mxn];int ntop=0;\n\tint cmp(char ch){\n\tif(!top || st[top]=='(') return 0;\n    if(st[top]=='^') return 1;\n    if(ch=='^') return 0;\n    if(st[top]=='*') return 1;\n    if(ch=='*') return 0;\n    return 1;\n}\n int pp(){\n     switch(st[top]){\n        case '(':{\n            top--;\n            return 1;\n            break;\n        }\n        case '+':{\n            long long n1=num[ntop--];\n            long long n2=num[ntop--];\n            num[++ntop]=n1+n2;\n            break;\n        }\n        case '-':{\n            long long n1=num[ntop--];\n            long long n2=num[ntop--];\n            num[++ntop]=n2-n1;\n            break;\n        }\n        case '*':{\n            long long n1=num[ntop--];\n            long long n2=num[ntop--];\n            num[++ntop]=n2*n1;\n            break;\n        }\n        case '^':{\n            long long n1=num[ntop--];\n            long long n2=num[ntop--];\n            long long bas=1;\n            for(int j=1;j<=n1;j++)bas=(bas*n2);\n            num[++ntop]=bas;\n            break;\n        }\n    }\n    top--;\n    return 0;\n}\nlong long clc(string s,int tp){\n    top=ntop=0;\n    memset(num,0,sizeof num);\n    memset(st,0,sizeof st);\n    int len=s.length();\n    int i,j;\n    for(i=0;i<len;i++){\n        if(s[i]==' ')continue;\n        if(s[i]=='('){\n            st[++top]='(';\n            continue;\n        }\n        if(s[i]=='a'){\n            num[++ntop]=tp;\n            continue;\n        }\n        if(s[i]>='0' && s[i]<='9')\n        {\n            int x=0;\n            while(s[i]>='0' && s[i]<='9'){\n                x=x*10+s[i]-'0';\n                i++;\n            }\n            i--;\n            num[++ntop]=x;\n            continue;\n        }\n        if(s[i]==')'){\n            if(top==1 && i!=len-1)i++;\n            while(1){if(pp())break;}\n            continue;\n        }\n        while(cmp(s[i]))pp();\n        st[++top]=s[i];\n    }\n\n    while(top>0){pp();}\n    return num[1];\n}\nint n;\nint main(){\n    int i,j;\n\tgetline(cin,s1);\n    s1='('+s1+')';  \n    scanf(\"%d\",&n);\n    getline(cin,s2); \n    for(i=0;i<n;++i){\n        getline(cin,s2);\n        s2='('+s2+')';\n        bool flag=1;\n        for(j=5;j<=11;j++){\n            if(clc(s1,j*7+3)!=clc(s2,j*7+3)){\n                flag=0;\n                break;\n            }\n        }\n        if(flag)printf(\"%c\",i+'A');\n    }\n    return 0;\n}\n```\n\u671b\u7ba1\u7406\u5927\u5927\u901a\u8fc7",
        "postTime": 1574679319,
        "uid": 225703,
        "name": "jyz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u5148\u7528\u6808\u628a\u4e2d\u7f00\u8f6c\u6210\u540e\u7f00QAQ\uff0c\u5e26\u5165\u4e00\u4e2a\u7279\u6b8a\u503c\u6bd4\u8f83\nbut\n\u8fd9\u9898\u7684\u6570\u636e\u6bd4\u8f83\u53ef\u6015\uff0c\u5728\u53d6\u503c\u65f6\u8981\u5c0f\u5fc3\n\n```pascal\n{->}\n//\u8fd9\u91cc\u5c31\u662f\u7384\u5b66\u7684\u53d6\u503c\uff0c\u81ea\u5df1\u9009\u4e00\u4e2a,\u57fa\u672c\u90fd\u670970\u5206~90\u5206\n//100\u5206\u8fd8\u662f\u6bd4\u8f83\u5c11\u7684QAQ\nconst md=100000007;//\u53d6mod\u7684\u503c\u4e5f\u662f\u5f88\u91cd\u8981\u7684\n      add=13758;\n{<-}\nvar i,j,k:longint;\n    s:ansistring;\n    num:array[-1..1000000]of longint;\n    fh:array[-1..1000000]of char;\n    ch:char;\n    f:array[char]of longint;\n    m,n,t,h:longint;\n    x,y:longint;\n    ans:longint;\nfunction js(m,n:longint;ch:char):longint;//\u8ba1\u7b97\nvar i:longint;\nbegin\n  if ch='+' then exit((m+n) mod md);\n  if ch='*' then exit((m*n) mod md);\n  if ch='-' then exit((m-n) mod md);\n  if ch='^' then \n  begin\n    js:=m;\n    for i:=2 to n do js:=js*m mod md;\n    exit(js);\n  end;\nend;\nfunction jspd(s:ansistring):longint;//\u4e2d\u7f00\u8f6c\u540e\u7f00\nvar i,j,k,m,n,h,t:longint;\nbegin\n  //\u8fd0\u7b97\u7b49\u7ea7\uff0c\u65b9\u4fbf\u5224\u65ad\n  f['(']:=1;\n  f[')']:=1;\n  f['*']:=3;\n  f['+']:=2;\n  f['-']:=2;\n  f['^']:=4;\n  t:=0;\n  h:=0;\n  i:=0;\n  s:='('+s+')';\n  while i<length(s) do\n  begin\n    inc(i);\n    while s[i]=' ' do inc(i);//\u628a\u7a7a\u683c\u53bb\u6389\n    if s[i]='a' then\n    begin\n      inc(t);\n      num[t]:=add;//\u628a\u503c\u5e26\u5165\n    end;\n    if s[i]in ['0'..'9'] then\n    begin\n      inc(t);\n      num[t]:=ord(s[i])-48;\n      inc(i);\n      while s[i] in ['0'..'9'] do\n      begin\n      num[t]:=(num[t]*10+ord(s[i])-48) mod md;\n      inc(i);\n      end;\n    end;\n    begin\n      if s[i] in ['+','*','-','^','('] then\n      begin\n        if (s[i] in ['+','*','-','^']) and (f[fh[h]]>=f[s[i]]) then\n        while (f[fh[h]]>=f[s[i]]) do//\u5176\u4ed6\u548c\u8868\u8fbe\u5f0f\u7684\u503c\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u56e0\u4e3a\u8fd0\u7b97\u7b49\u7ea7\u591a\u4e86\uff0c\u6240\u4ee5\u8981\u6539\u6210while\n        begin\n          num[t-1]:=js(num[t-1],num[t],fh[h]);\n          dec(t);\n          dec(h);\n        end;\n        inc(h);\n        fh[h]:=s[i];\n      end else\n      if s[i]=')' then\n      begin\n        while (fh[h]<>'(') and (h>=0) and (t>=0) do\n        begin\n          num[t-1]:=js(num[t-1],num[t],fh[h]);\n          dec(t);\n          dec(h);\n        end;\n        dec(h);\n      end;\n    end;\n  end;\n  exit(num[1]);//\u8fd4\u56de\u503c\nend;\nbegin\n  readln(s);//\u8bfb\u5165\n  ans:=jspd(s);//\u628a\u539f\u8868\u8fbe\u5f0f\u7684\u503c\u5148\u7b97\u51fa\u6765\n  readln(n);\n  for i:=1 to n do\n  begin\n    readln(s);\n    if jspd(s)=ans then write(chr(ord('A')+i-1));//\u5224\u65ad\uff0c\u5982\u679c\u6b63\u786e\u5c31\u8f93\u51fa...\n  end;\nend.\n```\n\u5982\u679c\u5728NOIP\u73b0\u573a\u7801\u4e00\u4e2a\u96be\u5ea6\u8fd8\u662f\u633a\u5927\u7684,\u4f30\u8ba1AC\u7684dalao\u4e0d\u591a\u5427\uff0c~~\u9762\u5411\u6570\u636e\u8c03\u8bd5\u5176\u5b9e\u8fd8\u662f\u633a\u5feb\u7684~~\n",
        "postTime": 1549256216,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u53ea\u60f3\u8bf4\uff1a\u8fd9\u9053\u9898\u592a\u6076\u5fc3\u4e86\uff01\n\n\u7b2c\u4e00\uff0c\u8fd9\u9053\u9898\u5b58\u5728\u5de6\u3001\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u3002\n\n\u7b2c\u4e8c\uff0cgets\u5728\u6d1b\u8c37\u53ef\u80fd\u662f\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528\u7684\u3002//\u611f\u8c22\u697c\u4e0b\u7684\u5feb\u8bfb\n\n\u7b2c\u4e09\uff0c\u5f53\u6211\u4eec\u5c06\u5b57\u7b26a\u4ee3\u5165\u4e4b\u540e\uff0c\u7531\u4e8e\u7b54\u6848\u4f1a\u7206long long\uff0c\u6240\u4ee5\u9700\u8981\u53d6\u6a21\u3002\u7136\u800c\u5f53\u6211\u4eec\u5728\u505a\u51cf\u6cd5\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u6a21\u8fd0\u7b97\uff0c\u6240\u4ee5\u4e24\u4e2a\u4f59\u6570\u7684\u5927\u5c0f\u662f\u672a\u77e5\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u5728\u51cf\u540e\u52a0\u4e0a\u53d6\u6a21\u7684\u90a3\u4e2a\u6570\uff08\u6211\u7528\u76841e9+7\uff09\uff0c\u7136\u540e\u518d\u53d6\u6a21\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u6570\u7684\u60c5\u51b5\u4e86\u3002\n\n\u9644\u4e0a\u81ea\u5df1\u4e71\u641e\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define LL long long\nconst int M=1e9+7;\nLL n,i,p,topn,topf,len,k;\nchar a[51];\nLL num[51];\nchar f[51];\nLL t[11]={0,41,71,83,91,101};\nLL ans[11];\nchar c[51];\nLL quickpow(LL a,LL b,LL p)\n{\n    LL s=1;\n    a%=p;\n    for(;b;b>>=1,a=(a*a)%p)\n      if(b&1) s=(s*a)%p;\n    return s;\n}\nLL level(char c)\n{\n    if(c=='(') return 0;\n    if(c=='+'||c=='-') return 1;\n    if(c=='*'||c=='/') return 2;\n    if(c=='^') return 3;\n    return 0;\n}\nvoid work()\n{\n    LL x=num[topn--];\n    LL y=num[topn--];\n    char c=f[topf--];\n    if(c=='+') num[++topn]=(x+y)%M;\n    else if(c=='-') num[++topn]=(y-x+M)%M;//\u6ce8\u610f\uff0bM\n    else if(c=='*') num[++topn]=(x*y)%M;\n    else if(c=='^') num[++topn]=quickpow(y,x,M);\n}\nvoid getnum(char a[],LL &p)\n{\n    LL t=0;\n    while(a[p]>='0'&&a[p]<='9') \n      t=(t*10+a[p++]-48)%M;\n    num[++topn]=t;\n}\nvoid push(LL n)//\u5c06\u5b57\u7b26a\u7528\u7b2cn\u4e2a\u6570\u8fdb\u884c\u66ff\u6362\n{\n    num[++topn]=t[n];\n}\nLL solve(char a[],LL i)\n{\n    p=topf=topn=0;\n    len=strlen(a);\n    while(p<=len-1)\n      if(a[p]>='0'&&a[p]<='9') getnum(a,p);\n      else if(a[p]==' ') p++;\n      else if(a[p]=='+'||a[p]=='-'||a[p]=='*'||a[p]=='/'||a[p]=='^')\n             if(level(a[p])>level(f[topf])) f[++topf]=a[p++];\n             else\n             {\n                   while(level(a[p])<=level(f[topf])) work();\n                   f[++topf]=a[p++];\n                }\n      else if(a[p]=='a')\n      {\n        push(i);\n        p++;\n      }\n      else if(a[p]=='(') f[++topf]=a[p++];\n      else if(a[p]==')')\n      {\n          bool bb=0;\n          for(int i=1;i<=topf;i++)\n            if(f[i]=='(') bb=1;\n          if(!bb)\n          {\n              p++;\n              continue;\n          }\n        while(f[topf]!='(')\n          work();\n        topf--;\n        p++;\n      }\n    while(topn!=1) work();//\u6211\u7684\u7a0b\u5e8f\u5728\u8fd0\u884c\u540e\u4f1a\u51fa\u73b0\u672a\u8ba1\u7b97\u5b8c\u7684\u60c5\u51b5\n    return num[1];\n}\nvoid get(char a[])\n{\n    for(int i=0;i<=50;i++)\n      a[i]='\\0';\n    char c=getchar();\n    int pos=0;\n    while(c=='\\n'||c=='\\r') c=getchar();\n    while(c!='\\n'&&c!='\\r')\n    {\n        a[pos++]=c;\n        c=getchar();\n    }\n}\nint main()\n{\n    freopen(\"equal.in\",\"r\",stdin);\n    freopen(\"equal.out\",\"w\",stdout);\n    get(a);\n    for(i=1;i<=5;i++)\n      ans[i]=solve(a,i);\n    scanf(\"%I64d\\n\",&n);\n    for(k=1;k<=n;k++)\n    {\n        get(c);\n        bool b=1;\n        for(i=1;i<=5;i++)\n          if(solve(c,i)!=ans[i])\n          {\n              b=0;\n              break;\n          }\n        if(b) putchar('A'+k-1);\n    }\n}\n```",
        "postTime": 1478687790,
        "uid": 17697,
        "name": "wumingshi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5e76\u4e0d\u96be\uff0c\u4e3b\u8981\u6709\u51e0\u4e2a\u6bd4\u8f83\u5751\u7684\u5730\u65b9\n\n\u9996\u5148\uff0c\u6700\u597d\u4e0d\u8981\u7528gets\uff0c\u56e0\u4e3a\u7ecf\u5e38\u4f1a\u51fa\u95ee\u9898\n\n\u5176\u6b21\uff0c\u672c\u9898\u62ec\u53f7\u6709\u53ef\u80fd\u4e0d\u5339\u914d\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u627e\u7b54\u6848\u65f6\uff0c\u5148\u5224\u65ad\u62ec\u53f7\u5339\u4e0d\u5339\u914d\uff0c\u5982\u679c\u4e0d\u5339\u914d\uff0c\u5c31\u76f4\u63a5\u820d\u53bb\u3002\n\n\u8fd8\u6709\u53ef\u4ee5\u628aa\u4ee3\u5165\u4e00\u4e2a\u503c\uff0c\u968f\u4fbf\u641e\u4e00\u4e0b\uff0c\u6211\u4ee3\u5165\u4e861231\u8fd9\u4e2a\u503c\uff08\u5e76\u4e0d\u662f\u53ea\u80fd\u7528\u8fd9\u4e2a\uff09\n\n\u4e2d\u95f4\u7ed3\u679c\u548c\u6700\u540e\u7ed3\u679c\u90fd\u5f88\u5927\uff0c\u9700\u8981mod\u4e00\u4e2a\u6570\uff0c\u6211mod\u4e861000000007\n\n\u6700\u540e\uff0c\u8ba1\u7b97\u8868\u8fbe\u5f0f\u65f6\uff0c\u91c7\u7528\u5206\u6cbb\u6cd5\uff0c\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8ba1\u7b97\u7684\u7b26\u53f7\uff0c\u5206\u522b\u8ba1\u7b97\u4e24\u8fb9\u7684\u503c\uff0c\u901a\u8fc7\u8fd9\u4e2a\u7b26\u53f7\u5408\u8d77\u6765\u3002\u6211\u7684\u8ba1\u7b97\u5199\u4e86\u4e24\u904d\uff0c\u4e00\u4e2a\u7b97\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e00\u4e2a\u7b97\u9884\u9009\u7684\u7b54\u6848\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u4ee3\u7801\u4f1a\u6bd4\u8f83\u957f\u3002\n\n\u9644\u4ee3\u7801\uff08\u4ec5\u4f9b\u53c2\u8003\uff0c\u8bf7\u4e0d\u8981\u6284\u88ad\uff0c\u5efa\u8bae\u53ea\u770b\u4e0a\u8ff0\u6587\u5b57\uff0c\u81ea\u884c\u7f16\u7a0b\u89e3\u51b3\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nconst int mod=1000000007,a=1231;\nint n,l[30],x,la;\nchar s[30][100],c,p[100];\nint Pow(int x,int y){//\u7b97\u6b21\u5e42\n    long long a=1;\n    for (int i=0;i<y;i++)\n    a=a*x%mod;\n    return a;\n}\nint js1(int b,int e){\n    int t=0,a,bb,c;a=bb=c=-1;\n    for (int i=b;i<=e;i++)\n    {\n        if (p[i]<'0' || p[i]>'9')break;\n        t=t*10+p[i]-'0';\n        if (i==e)return t;\n    }\n    t=0;\n    for (int i=b;i<=e;i++)\n    {\n        if (p[i]=='(')t++;\n        if (p[i]==')')t--;\n        if (!t)\n        {\n            if (p[i]=='+' || p[i]=='-')a=i;\n            if (p[i]=='*')bb=i;\n            if (p[i]=='^')c=i;\n```\n}//\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8ba1\u7b97\u7684\u7b26\u53f7\uff0c\u5207\u8bb0\uff0c\u4e0d\u80fd\u518d\u62ec\u53f7\u91cc\uff01\n```cpp\n    }\n    if (a!=-1)\n    {\n        if (p[a]=='+')\n        return (((long long)js1(b,a-1)+js1(a+1,e))%mod+mod)%mod;\n        else\n        return (((long long)js1(b,a-1)-js1(a+1,e))%mod+mod)%mod;\n    }\n    if (bb!=-1)\n    return (((long long)js1(b,bb-1)*js1(bb+1,e))%mod+mod)%mod;\n    if (c!=-1)\n    return (Pow(js1(b,c-1),js1(c+1,e))%mod+mod)%mod;\n    return js1(b+1,e-1);//\u6ca1\u6709\u6700\u540e\u4e00\u4e2a\u7b26\u53f7\uff0c\u8bf4\u660e\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u88ab\u62ec\u53f7\u88f9\u5728\u91cc\u9762\uff0c\u8981\u53bb\u6389\u62ec\u53f7\n}\nbool kuohao(int x){\n    int h=0;\n    for (int i=0;i<l[x];i++)\n    {\n        if (s[x][i]=='(')h++;\n        if (s[x][i]==')')h--;\n        if (h<0)return false;\n    }\n    return !h;\n}\nint js(int x,int b,int e){\n    int t=0,a,bb,c;a=bb=c=-1;\n    for (int i=b;i<=e;i++)\n    {\n        if (s[x][i]<'0' || s[x][i]>'9')break;\n        t=t*10+s[x][i]-'0';\n        if (i==e)return t;\n    }\n    t=0;\n    for (int i=b;i<=e;i++)\n    {\n        if (s[x][i]=='(')t++;\n        if (s[x][i]==')')t--;\n        if (!t)\n        {\n            if (s[x][i]=='+' || s[x][i]=='-')a=i;\n            if (s[x][i]=='*')bb=i;\n            if (s[x][i]=='^')c=i;\n        }\n    }\n    if (a!=-1)\n    {\n        if (s[x][a]=='+')\n        return (((long long)js(x,b,a-1)+js(x,a+1,e))%mod+mod)%mod;\n        else\n        return (((long long)js(x,b,a-1)-js(x,a+1,e))%mod+mod)%mod;\n    }\n    if (bb!=-1)\n    return (((long long)js(x,b,bb-1)*js(x,bb+1,e))%mod+mod)%mod;\n    if (c!=-1)\n    return (Pow(js(x,b,c-1),js(x,c+1,e))%mod+mod)%mod;\n    return js(x,b+1,e-1);\n}\nint main()\n{\n    c=getchar();\n    while(c!='\\n' && c!='\\r')\n    {\n        if (c!=' ')\n        {\n            if (c!='a')\n            p[la++]=c;\n            else\n            {\n                p[la++]='1';\n                p[la++]='2';\n                p[la++]='3';\n                p[la++]='1';\n            }\n        }\n        c=getchar();\n    }\n    scanf(\"%d\",&n);\n    for (;x<n;x++)\n    {\n        c=getchar();\n        while(c=='\\n' || c=='\\r')\n        c=getchar();\n        while(c!='\\n' && c!='\\r')\n        {\n            if (c!=' ')\n            {\n                if (c!='a')\n                s[x][l[x]++]=c;\n                else\n                {\n                    s[x][l[x]++]='1';\n                    s[x][l[x]++]='2';\n                    s[x][l[x]++]='3';\n                    s[x][l[x]++]='1';\n                }\n            }\n            c=getchar();\n        }\n    }\n    int hhh=js1(0,la-1);\n    for (int i=0;i<n;i++)\n    if (kuohao(i) && js(i,0,l[i]-1)==hhh)\n    printf(\"%c\",'A'+i);\n    return 0;\n}\n```",
        "postTime": 1481723849,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u7531\u4e8e\u4e0d\u592a\u597d\u5904\u7406\u5e26\u6709\u672a\u77e5\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u8003\u8651\u5c06a\u53d6\u503c\uff0c\u7136\u540e\u5e26\u5165\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u968f\u673a\u53d6\u591a\u6b21a\u7684\u503c\u68c0\u9a8c\uff0c\u5373\u53ef\u4fdd\u8bc1\u6781\u9ad8\u7684\u6b63\u786e\u7387\u3002\n\n\u6d1b\u8c37\u7684\u6570\u636e\u662fwindows\u73af\u5883\u4e0b\u9020\u7684\uff0c\u884c\u5c3e\u6709\u4e00\u4e2a\u591a\u4f59\u7684'\\r'\uff0c\u5224\u65ad\u7a7a\u767d\u5b57\u7b26\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\n\n\u6240\u4ee5\u7528\u6808\u8f6c\u6362\u79f0\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6bcf\u6b21\u7528\u6808\u8ba1\u7b97\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\n#define For(i,_beg,_end) for(int i=(_beg),i##end=(_end);i<=i##end;++i)\n#define Rep(i,_beg,_end) for(int i=(_beg),i##end=(_end);i>=i##end;--i)\n\ntemplate<typename T>T Max(const T &x,const T &y){return x<y?y:x;}\ntemplate<typename T>T Min(const T &x,const T &y){return x<y?x:y;}\ntemplate<typename T>int chkmax(T &x,const T &y){return x<y?(x=y,1):0;}\ntemplate<typename T>int chkmin(T &x,const T &y){return x>y?(x=y,1):0;}\ntemplate<typename T>void read(T &x){\n    T f=1;char ch=getchar();\n    for(;ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-1;\n    for(x=0;ch>='0'&&ch<='9';ch=getchar())x=x*10+ch-'0';\n    x*=f;\n}\n\ntypedef unsigned long long LL;\nconst int N=110;\nint n,top,suf[N][N],lvl[256],m[N];\nLL Sta[N];\nchar sta[N],str[N];\nbool b[N];\n\nvoid Work(int id){\n    int len=strlen(str+1),cnt=0;top=0;\n    For(i,1,len){\n        if(str[i]=='a')suf[id][++cnt]=-1;\n        else if(str[i]>='0'&&str[i]<='9'){\n            int j=i,x=0;\n            while(str[j]>='0'&&str[j]<='9')x=x*10+str[j++]-'0';\n            i=j-1;suf[id][++cnt]=x;\n        }\n        else if(str[i]=='('||str[i]=='+'||str[i]=='-'||str[i]=='*'||str[i]=='^'){\n            while(top&&sta[top]!='('&&lvl[sta[top]]>=lvl[str[i]]){\n                suf[id][++cnt]=sta[top]+10000;\n                top--;\n            }\n            sta[++top]=str[i];\n        }\n        else if(str[i]==')'){\n            while(top&&sta[top]!='(')suf[id][++cnt]=sta[top--]+10000;\n            top--;\n        }\n    }\n    while(top){\n        if(sta[top]!='(')suf[id][++cnt]=sta[top]+10000;\n        top--;\n    }\n    m[id]=cnt;\n}\nLL power(LL x,LL y){\n    LL res=1;\n    for(;y;y>>=1,x*=x) if(y&1)res*=x;\n    return res;\n}\nLL calc(LL x,LL y,char c){\n    if(c=='+')return x+y;\n    if(c=='-')return x-y;\n    if(c=='*')return x*y;\n    if(c=='^')return power(x,y);\n}\nLL Calc(int id,int a){\n    top=0;\n    For(i,1,m[id]){\n        if(suf[id][i]==-1)Sta[++top]=a;\n        else if(suf[id][i]>10000){\n            LL res=calc(Sta[top-1],Sta[top],suf[id][i]-10000);\n            Sta[--top]=res;\n        }\n        else Sta[++top]=suf[id][i];\n    }\n    return Sta[top];\n}\n\nint main(){\n    lvl['+']=lvl['-']=0;\n    lvl['*']=1;lvl['^']=2;\n    lvl['(']=lvl[')']=3;\n    cin.getline(str+1,N);\n    read(n);getchar();Work(0);\n    For(i,1,n){\n        cin.getline(str+1,N);\n        Work(i);\n    }\n    For(i,1,100){\n        int x=rand();\n        LL temp=Calc(0,x);\n        For(j,1,n)\n            if(Calc(j,x)!=temp)b[j]=true;\n    }\n    For(i,1,n) if(!b[i])putchar('A'+i-1);\n    putchar(10);\n    return 0;\n}\n```",
        "postTime": 1508326974,
        "uid": 20176,
        "name": "Salamander",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "~~\u771f\u7684\u662f\u4e00\u9053\u6076\u5fc3\u9898\uff0c\u5361\u4e86\u6211\u4e00\u4e2a\u4e0b\u5348\u52a0\u665a\u4e0a\u3002~~\n\n#### \u5751\u70b9\u90fd\u6709\u54ea\u4e9b\uff1f\uff1f\uff1f\n\n1. \u8bfb\u5165\u5751\uff08\u6076\u5fc3\u6b7b\u4e86\uff0c\u8fd8\u6211 $30min$ \u8c03\u8bd5\u65f6\u95f4\u3002\n2. \u6570\u636e\u53ef\u80fd\u51fa\u73b0\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u8fd8\u8981\u7279\u5224\u3002\n\n\u90a3\u8fd9\u9898\u600e\u4e48\u505a\u5462\uff1f\uff1f\uff1f\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u8fd0\u7b97\uff0c\u90fd\u6709\u4e00\u79cd\u4f18\u5148\u7ea7\u3002\n\n- `+`\u3001`-`\uff0c\u4f18\u5148\u7ea7\u5747\u4e3a $1$\u3002\n- `*`\uff0c\u4f18\u5148\u7ea7\u4e3a $3$\u3002\n- `^`\uff0c\u4f18\u5148\u7ea7\u4e3a $2$\u3002\n- `()`\uff0c\u4f18\u5148\u7ea7\u4e3a $2147483647$\u3002\n\n\u6211\u4eec\u5982\u679c\u5f3a\u884c\u62c6\u5f00\u6bcf\u4e00\u9879\uff0c\u975e\u5e38\u9ebb\u70e6\u3002**\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4ee3\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5f97\u5230\u7684\u7b54\u6848\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8868\u8fbe\u5f0f\u76f8\u540c**\u3002\n\n\u5148\u7528\u4e24\u4e2a\u6808 $a,b$\u3002$a$ \u5b58\u50a8\u8fd0\u7b97\u7b26\uff0c$b$ \u5b58\u50a8\u6570\u5b57\u3002\n\n\u5982\u679c\u5728 $a$ \u4e2d\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e $r$ \u4f7f\u5f97 $a[r]$ \u7684\u4f18\u5148\u7ea7\u5927\u4e8e\u7b49\u4e8e $a[r-1]$ \u7684\u4f18\u5148\u7ea7\uff0c\u6211\u4eec\u5c31\u4ece $b$ \u4e2d\u53d6\u51fa\u4e24\u4e2a\u6570\u5b57\uff0c\u8fdb\u884c\u8fd0\u7b97\u3002\u518d\u628a\u8fd0\u7b97\u7ed3\u679c\u653e\u5165 $b$ \u4e2d\u3002\n\n\u76f8\u5173\u4ee3\u7801\uff1a(\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca)\n\n```\nfor(RI i=1; i<=5; ++i) {//\u9009\u62e9a\u76845\u4e2a\u503c\n\tTopa=Topb=0;//\u6e05\u7a7a\u6808\n\ta[0]=97;//\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u7136\u4f1aRE\n\tle[id]=ri[id]=0;//\u8bb0\u5f55\u5de6\u62ec\u53f7\u7684\u6570\u91cf\u548c\u53f3\u62ec\u53f7\u7684\u6570\u91cf\n\tfor(RI j=0; j<len; ++j) {\n\t\tif(g[j]==32) continue;//\u7a7a\u683c\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\tif(g[j]=='(') {\n\t\t\t++le[id];//\u5de6\u62ec\u53f7\u8ba1\u6570\u5668+1\n\t\t\tif(flag) {\n\t\t\t\t++Topb;\n\t\t\t\tb[Topb]=tmp;\n\t\t\t\ttmp=0;\n\t\t\t\tflag=0;\n\t\t\t}//\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u524d\u8fd8\u6709\u6570\uff0c\u653e\u5165b\u6808\n\t\t\t++Topa;\n\t\t\ta[Topa]='(';//\u628a\u7b26\u53f7\u653e\u5165a\u6808\n\t\t\tcontinue;//\u8df3\u8fc7\n\t\t}\n\t\tif(g[j]=='a') {\n\t\t\t++Topb;\n\t\t\tb[Topb]=p[i];\n\t\t\tflag=0;\n\t\t\ttmp=0;\n\t\t\tcontinue;\n\t\t}//\u7ed9a\u8d4b\u503cpi\n\t\tif(g[j]>='0'&&g[j]<='9') {\n\t\t\ttmp=(tmp<<1)+(tmp<<3)+g[j]-'0';\n\t\t\ttmp%=MOD;\n\t\t\tflag=1;//\u7edf\u8ba1\u6570\u5b57\u5927\u5c0f\n\t\t} else {\n\t\t\tif(flag) {\n\t\t\t\tTopb++;\n\t\t\t\tb[Topb]=tmp;\n\t\t\t\ttmp=0;\n\t\t\t\tflag=0;\n\t\t\t}//\u653e\u5165b\u6808\n\t\t\tif(g[j]!='a'&&!(g[j]>='0'&&g[j]<='9')) {\n\t\t\t\tnow=g[j];\n\t\t\t\tif(now==')') {//\u53f3\u62ec\u53f7\n\t\t\t\t\t++ri[id];\n\t\t\t\t\tif(le[id]<ri[id]) continue;//\u5982\u679c\u6709\u76f8\u5e94\u7684\u5de6\u62ec\u53f7\n\t\t\t\t\twhile(a[Topa]!='(') {\n\t\t\t\t\t\tc=b[Topb--];\n\t\t\t\t\t\td=b[Topb--];\n\t\t\t\t\t\tPush(d,c,a[Topa]);\n\t\t\t\t\t\tTopa--;\n\t\t\t\t\t}//\u6267\u884c\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fd0\u7b97\u3002\n\t\t\t\t\tTopa--;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\twhile(f[now]>=f[a[Topa]]) {//\u5982\u679c\u4f18\u5148\u7ea7\u5927\u4e8e\u6808\u9876\n\t\t\t\t\t\tc=b[Topb--];\n\t\t\t\t\t\td=b[Topb--];\n\t\t\t\t\t\tPush(d,c,a[Topa]);//\u6267\u884c\u64cd\u4f5c\u3002\n\t\t\t\t\t\tTopa--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t++Topa;\n\t\t\t\ta[Topa]=now;//\u628a\u7b26\u53f7\u653e\u5165a\u6808\n\t\t\t}\n\t\t}\n\t}\n\tif(flag) {\n\t\t++Topb;\n\t\tb[Topb]=tmp;\n\t\ttmp=0;\n\t\tflag=0;\n\t}//\u5904\u7406\u5269\u4e0b\u7684\u6570\u5b57\uff08\u672b\u5c3e\u7684\u6570\u5b57\uff09\n\twhile(Topa>=1) {\n\t\tif(a[Topa]==')') {\n\t\t\tTopa--;\n\t\t\tcontinue;\n\t\t}\n\t\tc=b[Topb--];\n\t\td=b[Topb--];\n\t\tPush(d,c,a[Topa]);\n\t\tTopa--;\n\t}//\u5904\u7406\u5269\u4e0b\u7684\u6240\u6709\u8fd0\u7b97\u7b26\u53f7\u3002\n\tval[id][i]=b[1];//\u8bb0\u5f55\u7b2cid\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5e26\u5165\u7b2ci\u4e2aa\u503c\u6700\u540e\u6240\u5f97\u5230\u7684\u503c\u3002\n}\n```\n\n\u8fd8\u6709\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u4e2a\u5730\u65b9\uff0c\u5c31\u662f $(a^{10})^{10}=a^{100}$\uff0c\u5982\u679c $a$ \u503c\u4e00\u5927\uff0c\u5c31\u4f1a\u7206\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u4e00\u4e2a\u6a21\u6570 $\\text{MOD}$\uff0c\u6709\u70b9\u7c7b\u4f3c $\\text{hash}$ \u7684\u601d\u60f3\u3002\n\n```\ninline void Push(int x, int y, char c) {\n\tif(c=='-') tmp=(x-y)%MOD;\n\tif(c=='+') tmp=(x+y)%MOD;\n\tif(c=='*') tmp=(x*y)%MOD;\n\tif(c=='^') tmp=cpow(x,y)%MOD;//\u7528\u5feb\u901f\u5e42\n\t++Topb;\n\tb[Topb]=tmp;\n}\n```\n\n\u603b\u4f53\u4e0a\u7684\u601d\u8def\u548c\u4ee3\u7801\u5b9e\u73b0\u5927\u6982\u662f\u8fd9\u6837\u3002\n\n~~\u8fd9\u4e2a\u4eba\u592a\u83dc\u4e86\uff0c\u4ee3\u7801\u8fd9\u4e48\u5197\u957f\u3002\u671b\u8f7b\u55b7\u3002~~",
        "postTime": 1599913719,
        "uid": 261914,
        "name": "Emy_Ycc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u540d\u5df2\u7ecf\u9000\u5f79\u7684\u9009\u624b\uff0c\u5e73\u65f6\u95f2\u7740\u6ca1\u4e8b\u60c5\u505a\u4e00\u70b9\u9898\uff0c\u7ed9\u8111\u5b50\u4e0a\u70b9\u6cb9\n\n\u56e0\u4e3a\u5df2\u7ecf\u4e0d\u53c2\u52a0OI\u4e86\uff0c\u6240\u4ee5\u679c\u65ad\u7528\u4e86c++ 17... \u56e0\u6b64\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u4f46\u662f\u601d\u8def\u662f\u901a\u7528\u7684\uff1a\n\n\u82e5\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u9996\u5148\u8981\u5e72\u6389\u8868\u8fbe\u5f0f\u5916\u9762\u5305\u7740\u7684\u591a\u4f59\u7684\u62ec\u53f7\u3002\n\n\u82e5\u8868\u8fbe\u5f0f\u5185\u4e0d\u542b\u4efb\u4f55\u7b26\u53f7\uff0c\u53ea\u6709\u6570\u5b57\uff08\u6216\u8005\u662f\u4e00\u4e2aa\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u6570\u5b57\uff08\u6216\u8005a^1\uff09\u3002\n\n\u5426\u5219\uff0c\u627e\u5230\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u4e14\u4e0d\u88ab\u62ec\u53f7\u5305\u7740\u7684\u8fd0\u7b97\u7b26\u3002\u627e\u6700\u53f3\u8fb9\u4e00\u4e2a\uff08\u56e0\u4e3a\u6211\u4eec\u7684\u8fd0\u7b97\u7b26\u90fd\u662f\u5de6\u7ed3\u5408\u7684\uff09\u3002\n\n\u6bd4\u5982\u8bf4 `(a + 1) + (a + 2) * 2 - 5` \u4e2d\u5c31\u662f\u627e\u5230\u6700\u53f3\u8fb9\u7684\u4e00\u4e2a\u51cf\u53f7\u3002\n\n\u7136\u540e\u9012\u5f52\u5730\uff0c\u5bf9\u8be5\u7b26\u53f7\u5de6\u53f3\u4e24\u8fb9\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u3002\u6c42\u5b8c\u503c\u4ee5\u540e\u6839\u636e\u8fd9\u4e2a\u7b26\u53f7\u662f\u4ec0\u4e48\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u8fd4\u56de\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662fgetline\u8bfb\u5165\u6362\u884c\u7b26\u7684\u95ee\u9898\u4ee5\u53ca\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u51fa\u73b0\u7684\u62ec\u53f7\u4e0d\u5339\u914d\u95ee\u9898\u3002\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u6709\u63d0\u5230\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u4f46\u662f\u53ef\u8bfb\u6027\u5f88\u9ad8\uff1a\n\n```cpp\n#include <string>\n#include <vector>\n#include <stack>\n#include <unordered_map>\n#include <iostream>\n#include <map>\n#include <charconv>\n\n/*\n\t\u4f5c\u8005: ph3rin\n\t\u8b66\u544a\uff1a\u672c\u7a0b\u5e8f\u4f7f\u7528\u4e86c++17\u7684\u7279\u6027\u3002\u4e0d\u8fc7\u601d\u8def\u662f\u901a\u7528\u7684\u5566= =\n\t\u5b9a\u4e49\uff1a\n\t\t\u81ea\u7531\u8fd0\u7b97\u7b26\u6307\u6ca1\u6709\u88ab\u5305\u5728\u62ec\u53f7\u91cc\u7684\u8fd0\u7b97\u7b26\n\t\t\u6211\u4eec\u4e0d\u8ba4\u4e3a\u5c0f\u62ec\u53f7\u662f\u8fd0\u7b97\u7b26\n*/\n\nint calc_power(int x, int y) {\n\tint ret = 1;\n\tfor (int i = 0; i < y; ++i) {\n\t\tret *= x;\n\t}\n\treturn ret;\n}\n\n//\u5b58\u50a8\u5df2\u7ecf\u6c42\u597d\u503c\u7684\u8868\u8fbe\u5f0f\uff08\u6309\u7167\u5b8c\u5168\u7684\u591a\u9879\u5f0f\u5c55\u5f00\u50a8\u5b58\uff09\nstruct EvaluatedExpr {\nprivate:\n\t//\u8fd9\u4e2amap\u91cc\u9762\u5b58\u50a8\u4e86\u5df2\u7ecf\u6c42\u5b8c\u503c\u7684\u8868\u8fbe\u5f0f\u7684\u4fe1\u606f\n\t//power[i]\u8868\u793a\u8be5\u8868\u8fbe\u5f0f\u4e2da\u7684i\u6b21\u65b9\u7684\u7cfb\u6570\n\t//\u82e5\u4e0d\u5b58\u5728\u5c31\u9ed8\u8ba4\u4e3a0\uff08map\u7684indexer\u8fd8\u662f\u5f88\u597d\u7528\u7684\uff0c\u4e0d\u5b58\u5728\u7684\u8bdd\u8bbf\u95ee\u4e0a\u53bb\u5c31\u5efa\u4e00\u4e2a0\uff09\n\tstd::map<int, long long> power;\npublic:\n\tEvaluatedExpr() = default;\n\t//\u4e00\u4e2a\u5de5\u5177\u51fd\u6570\uff0c\u7528\u6765\u521b\u5efa\u4ec5\u542b\u6709\u4e00\u4e2aa^1\u7684\u8868\u8fbe\u5f0f\u503c\n\tstatic EvaluatedExpr create_a() {\n\t\tEvaluatedExpr expr;\n\t\texpr.power[1] = 1;\n\t\treturn expr;\n\t}\n\tEvaluatedExpr(const int val) {\n\t\tpower[0] = val;\n\t}\n\tEvaluatedExpr(EvaluatedExpr&& rhs) noexcept(true) = default;\n\tEvaluatedExpr(const EvaluatedExpr& rhs) = default;\n\tEvaluatedExpr& operator = (EvaluatedExpr&& rhs) = default;\n\tEvaluatedExpr& operator = (const EvaluatedExpr& rhs) = default;\n\t//+-^*\u8fd0\u7b97\u7684\u5b9a\u4e49\u3002\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u4e58\u6cd5\u5b9a\u4e49\u7684\u662ffriend...\uff08\u6211\u5c31\u8fd9\u4e48\u5199\u4e86\uff0c\u6253\u6211\u554a\uff01\uff09\n\tEvaluatedExpr& operator+= (const EvaluatedExpr& rhs) {\n\t\tfor (auto& pair : rhs.power) {\n\t\t\tpower[pair.first] += pair.second;\n\t\t}\n\t\treturn *this;\n\t}\n\tEvaluatedExpr& operator-= (const EvaluatedExpr& rhs) {\n\t\tfor (auto& pair : rhs.power) {\n\t\t\tpower[pair.first] -= pair.second;\n\t\t}\n\t\treturn *this;\n\t}\n\tEvaluatedExpr& operator^= (const EvaluatedExpr& rhs) {\n\t\tEvaluatedExpr expr(1);\n\t\tint p = rhs.power.at(0);\n\t\tfor (int i = 0; i < p; ++i) {\n\t\t\texpr = expr * (*this);\n\t\t}\n\t\t/*for (auto& pair : power) {\n\t\t\texpr.power[pair.first * p] += calc_power(power[pair.first], p);\n\t\t}*/\n\t\t*this = std::move(expr);\n\t\treturn *this;\n\t}\n\tfriend EvaluatedExpr operator* (const EvaluatedExpr& lhs, const EvaluatedExpr& rhs);\n\t//\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u591a\u9879\u5f0f\u662f\u5426\u7b49\u4ef7\u3002\u6ce8\u610f\u4e0d\u80fd\u53ea\u904d\u5386lhs\u7684map\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709lhs\u6ca1\u6709\u7684\u6b21\u65b9\u6570\u4f46\u662frhs\u6709\n\tfriend bool operator == (EvaluatedExpr& lhs, EvaluatedExpr& rhs);\n};\n\nEvaluatedExpr operator* (const EvaluatedExpr& lhs, const EvaluatedExpr& rhs) {\n\tEvaluatedExpr ret;\n\tfor (auto& i : lhs.power) {\n\t\tfor (auto& j : rhs.power) {\n\t\t\tret.power[i.first + j.first] += (i.second * j.second);\n\t\t}\n\t}\n\treturn ret;\n}\n\nbool operator == (EvaluatedExpr& lhs, EvaluatedExpr& rhs) {\n\tfor (auto& pair : lhs.power) {\n\t\tif (rhs.power[pair.first] != pair.second) return false;\n\t}\n\tfor (auto& pair : rhs.power) {\n\t\tif (lhs.power[pair.first] != pair.second) return false;\n\t}\n\treturn true;\n}\n\nstruct Expr {\n\t//\u4e00\u4e2a\u50a8\u5b58\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u7684hash\u8868\u3002\u4e0d\u60f3\u5199switch\u4e86QAQ\n\tstatic std::unordered_map<char, int> const priority;\n\t//\u68c0\u67e5\u4e00\u4e2a\u7b26\u53f7\uff0c\u82e5\u5b83\u662f\u8fd0\u7b97\u7b26\uff0c\u8fd4\u56de\u5b83\u7684\u4f18\u5148\u7ea7\uff1b\u5426\u5219\u8fd4\u56de-1\n\tstatic int get_priotity(char op) {\n\t\tauto it = priority.find(op);\n\t\tif (it != priority.cend()) {\n\t\t\treturn it->second;\n\t\t}\n\t\treturn -1;\n\t}\n\tstd::string data;\n\t//par_level[i]\u50a8\u5b58\u4f4d\u4e8ei\u7684\u8fd0\u7b97\u7b26\u5916\u9762\u5305\u4e86\u591a\u5c11\u5c42\u62ec\u53f7\n\t//par_pairs[i]\u50a8\u5b58\u4e86\u4f4d\u4e8ei\u7684\u5c0f\u62ec\u53f7\u5bf9\u5e94\u7684\u62ec\u53f7\u7684\u4f4d\u7f6e\n\tstd::vector<int> par_level, par_pairs;\n\tExpr() = delete;\n\tExpr(std::string expr_str) : par_pairs(expr_str.size(), -1),\n\t\tpar_level(expr_str.size(), -1) {\n\n\t\tdata.reserve(expr_str.size());\n\t\tfor (char c : expr_str) {\n\t\t\t//\u8fd9\u91cc\u6211\u8fd8\u662f\u7528\u4e86\u767d\u540d\u5355\n\t\t\t//\u56e0\u4e3a\u8c8c\u4f3cgetline\u4f1a\u628a\u6362\u884c\u7b26\u4e5f\u5f04\u8fdb\u6765= =RE\u4e86\u4e00\u4e0b\u5348\n\t\t\tif ((c >= '0' && c <= '9') || (priority.find(c) != priority.end()) || c == '(' || c == ')' || c == 'a') {\n\t\t\t\tdata.push_back(c);\n\t\t\t}\n\t\t}\n\n\t\tstd::stack<int> stk;\n\t\tint level = 0;\n\t\tfor (int i = 0; i < data.size(); ++i) {\n\t\t\tswitch (data[i])\n\t\t\t{\n\t\t\tcase '(': {\n\t\t\t\t++level;\n\t\t\t\tstk.push(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ')': {\n\t\t\t\t//\u6709\u5751\u7239\u7684\u6570\u636e\u5de6\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\u3002\u6b64\u65f6\u65e0\u89c6\u53f3\u62ec\u53f7\u5c31\u53ef\u4ee5\u4e86\n\t\t\t\tif (stk.empty()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t--level;\n\t\t\t\tint prev_left = stk.top();\n\t\t\t\tstk.pop();\n\t\t\t\tpar_pairs[i] = prev_left;\n\t\t\t\tpar_pairs[prev_left] = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (get_priotity(data[i]) != -1) {\n\t\t\t\t\tpar_level[i] = level;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint size() const { return data.size(); }\n};\n\nstd::unordered_map<char, int> const Expr::priority{ {'+', 0}, {'-', 0}, {'*', 1}, {'^', 2} };\n\n//ExprView\u8868\u793a\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\nstruct ExprView {\nprivate:\n\tint par_level_reduce, start, count;\n\tconst Expr& expr;\npublic:\n\tExprView() = delete;\n\tExprView(const Expr& expr) : ExprView(expr, 0, expr.size(), 0) {\n\n\t}\n\tExprView(const Expr& expr, int start, int size, int reduce) : expr(expr), start(start),\n\t\tcount(size), par_level_reduce(reduce) {\n\t\t//\u53bb\u6389\u6700\u5916\u5c42\u7684\u62ec\u53f7\n\t\twhile (this->expr.par_pairs[this->start] == this->start + this->count - 1) {\n\t\t\t++this->start;\n\t\t\tthis->count -= 2;\n\t\t\t//\u6211\u4eec\u8fd9\u4e2a\u533a\u95f4\u4e0a\u6240\u6709\u8fd0\u7b97\u7b26\u5916\u9762\u5305\u7740\u7684\u62ec\u53f7\u5c42\u6570-1\n\t\t\t++par_level_reduce;\n\t\t}\n\t}\n\tchar operator[] (int index) const {\n\t\treturn expr.data[start + index];\n\t}\n\n\tchar at(int index) const {\n\t\treturn this->operator[](index);\n\t}\n\n\tint par_level(int index) const {\n\t\treturn expr.par_level[start + index];\n\t}\n\n\tint size() const { return count; }\n\n\t//\u68c0\u67e5\u5728index\u4f4d\u7f6e\u7684\u5b57\u7b26\u662f\u5426\u662f\u4e00\u4e2a\u81ea\u7531\u8fd0\u7b97\u7b26\uff0c\u82e5\u662f\u5219\u8fd4\u56de\u5b83\u7684\u4f18\u5148\u7ea7\uff1b\u5426\u5219\u8fd4\u56de-1\n\tint get_free_op_priotiy(int index) const {\n\t\tint p = Expr::get_priotity(at(index));\n\t\tif (p != -1 && par_level(index) - par_level_reduce == 0) {\n\t\t\treturn p;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t//\u4ece\u53f3\u5230\u5de6\u5bfb\u627e\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u81ea\u7531\u8fd0\u7b97\u7b26\n\t//\u4e4b\u6240\u4ee5\u4ece\u53f3\u5230\u5de6\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u8fd0\u7b97\u7b26\u90fd\u662f\u5de6\u7ed3\u5408\u7684\uff01\uff08\u5212\u91cd\u70b9\uff09\n\tint find_free_op() {\n\t\tint ret = -1, min_p = std::numeric_limits<int>::max();\n\t\tfor (int i = count - 1; i >= 0; --i) {\n\t\t\tint p = get_free_op_priotiy(i);\n\t\t\t//\u5982\u679c\u662f\u81ea\u7531\u8fd0\u7b97\u7b26 and \u6bd4\u5f53\u524d\u627e\u5230\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u90fd\u8981\u5c0f\n\t\t\tif (p != -1 && p < min_p) {\n\t\t\t\tret = i;\n\t\t\t\tmin_p = p;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tEvaluatedExpr evaluate() {\n\t\tint fp = find_free_op();\n\t\t//\u5982\u679c\u662f\u6ca1\u6709\u81ea\u7531\u8fd0\u7b97\u7b26\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aa\u6216\u8005\u6570\u5b57\n\t\tif (fp == -1) {\n\t\t\tint val = 0;\n\t\t\tif (at(0) == 'a') {\n\t\t\t\treturn EvaluatedExpr::create_a();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//\u8fd9\u662fc++ 17\u7684\u65b0\u7279\u6027\n\t\t\t\t//\u4e0d\u7528c++ 17\u7684\u8bdd\u561b\u2026\u2026\u4f1a\u7a0d\u5fae\u9ebb\u70e6\u4e00\u70b9\n\t\t\t\t//\u672c\u8d28\u4e0a\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u67d0\u4e00\u4e2a\u533a\u95f4\u4e0a\u7684\u5b57\u4e32\u8f6c\u5316\u6210\u6574\u6570\n\t\t\t\tstd::from_chars(expr.data.data() + start, expr.data.data() + start + count, val);\n\t\t\t\treturn EvaluatedExpr(val);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t//\u8fd9\u91cc\u8868\u793a\u8fd0\u7b97\u7b26\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5b50\u8868\u8fbe\u5f0f\u7684\u8d77\u70b9\u548c\u957f\u5ea6\n\t\tint l_start = 0 + start, l_size = fp,\n\t\t\tr_start = fp + 1 + start, r_size = count - l_size - 1;\n\t\t//\u6839\u636e\u8fd0\u7b97\u7b26\u8fdb\u884c\u8fd0\u7b97\n\t\tswitch (at(fp))\n\t\t{\n\t\tcase '+': {\n\t\t\treturn ExprView(expr, l_start, l_size, par_level_reduce).evaluate()\n\t\t\t\t+= ExprView(expr, r_start, r_size, par_level_reduce).evaluate();\n\t\t}\n\t\tcase '-': {\n\t\t\treturn ExprView(expr, l_start, l_size, par_level_reduce).evaluate()\n\t\t\t\t-= ExprView(expr, r_start, r_size, par_level_reduce).evaluate();\n\t\t}\n\t\tcase '*': {\n\t\t\treturn ExprView(expr, l_start, l_size, par_level_reduce).evaluate()\n\t\t\t\t* ExprView(expr, r_start, r_size, par_level_reduce).evaluate();\n\t\t}\n\t\tcase '^': {\n\t\t\treturn ExprView(expr, l_start, l_size, par_level_reduce).evaluate()\n\t\t\t\t^= ExprView(expr, r_start, r_size, par_level_reduce).evaluate();\n\t\t}\n\t\tdefault:\n\t\t\tthrow std::runtime_error(\"Error!\");\n\t\t}\n\t}\n};\n\nint main() {\n\tstd::string expr_str;\n\tstd::string ans;\n\tstd::getline(std::cin, expr_str);\n\n\tExpr expr(expr_str);\n\n\tEvaluatedExpr&& question_ans = ExprView(expr, 0, expr.size(), 0).evaluate();\n\tans.reserve(26);\n\tint choice_count;\n\tstd::cin >> choice_count;\n\tstd::string choice;\n\t//\u8bfb\u5165\u5f00\u5934\u591a\u4f59\u7684\u6362\u884c\n\tstd::getline(std::cin, choice);\n\tfor (int i = 0; i < choice_count; ++i) {\n\t\tstd::getline(std::cin, choice);\n\t\tExpr o_expr(choice);\n\t\tEvaluatedExpr&& option_ans = ExprView(o_expr, 0, o_expr.size(), 0).evaluate();\n\t\tif (question_ans == option_ans) {\n\t\t\tans.push_back('A' + i);\n\t\t}\n\t}\n\tstd::cout << ans << std::endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1563095893,
        "uid": 28027,
        "name": "KaenbyouRin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "# \u9898\u9762\n\n\u73b0\u5728\u62e5\u6709\u4e00\u4e9b\u8868\u8fbe\u5f0f\uff0c\u6c42\u51fa\u5176\u4e2d\u4e0e\u539f\u8868\u8fbe\u5f0f\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u3002\n\n# \u5206\u6790\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u66b4\u529b\u62c6\u62ec\u53f7\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u67092\u4e2a\u9ebb\u70e6\u7684\u5730\u65b9\n\n1. \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u50a8\u5b58\u56e0\u5f0f\u7684\u7ed3\u6784\u4f53\u5e76\u652f\u6301\u591a\u79cd\u64cd\u4f5c\n\n2. ```(a-1)^10^10^10^10```\u7b49\u8868\u8fbe\u5f0f\u4f1a\u8ba9\u7ed3\u6784\u4f53\u50a8\u5b58\u7684\u4e1c\u897f\u591a\u5230\u7206\u70b8\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u5230\u53e6\u4e00\u79cd\u65b9\u5f0f\u5224\u65ad\u3002\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u5c06\u4e00\u4e2a\u503c\u4ee3\u5165\u5230\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8fd4\u56de\u7ed3\u679c\u548c\u57fa\u51c6\u4e00\u6837\u5c31\u5224\u5bf9\u3002\n\n\u6211\u4f7f\u7528\u7684\u662f\u540e\u7f00\u8868\u8fbe\u5f0f\u8ba1\u7b97\u548c\u591a\u503c\u8ba1\u7b97\u3002\n\n\u540c\u65f6\uff0c\u6ce8\u610f\u4e00\u4e2a\u5751\uff1aluogu\u4e2d\u56de\u8f66\u8868\u793a\u4e3a```\\r\\n```\uff0c\u5e94\u5f53\u5224\u65ad2\u6b21\u3002\n\n\u6ce8\u610f\uff1a\u5728\u672c\u9898\u4e2d\u6709\u62ec\u53f7\u4e0d\u5339\u914d\u7684\u6570\u636e\uff0c\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u5e94\u8be5\u9002\u5f53\u5728\u5de6\u53f3\u6dfb\u52a0\u62ec\u53f7\u4ee5\u4fdd\u8bc1\u8868\u8fbe\u5f0f\u62ec\u53f7\u5339\u914d\u3002\n\n[\u540e\u7f00\u8868\u8fbe\u5f0f](https://www.luogu.org/blog/tiger2005/qian-tan-biao-da-shi-di-qiu-zhi-hou-zhui-biao-da-shi-post)\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<stack>\nusing namespace std;\nconst long long M=1000000007;\nstruct Node{\n    bool isnum;\n    long long num;\n    char ch;\n    Node(bool isnum=false,long long num=0,char ch='\\0'):isnum(isnum),num(num),ch(ch){}\n};\nstack<char> pri;\nstack<long long> qwq;\nchar rd[60];\nNode hz[30][60];\nint ln[30],N;\nbool isans[30];\nlong long powr(int O,int P){\n    if(P<0)\tP+=M;\n    long long ret=1,bas=O;\n    while(P){\n        if(P&1)\tret=(ret*bas)%M;\n        bas=(bas*bas)%M;\n        P>>=1;\n    }\n    return ret;\n}\nint ope(char a){\n    if(a=='-' || a=='+')\treturn 0;\n    if(a=='*')\treturn 1;\n    if(a=='^')\treturn 2;\n    return -1;\n}\nvoid run(int bh){\n    for(int i=0;rd[i];i++){\n        if(rd[i]=='a')\thz[bh][ln[bh]++]=Node(true,-1,'\\0');\n        else if(rd[i]>='0' && rd[i]<='9'){\n            long long ret=0;\n            while(rd[i]>='0' && rd[i]<='9')\tret=ret*10+rd[i]-'0',++i;\n            --i;hz[bh][ln[bh]++]=Node(true,ret,'\\0');\n        }\n        else if(rd[i]=='(')\tpri.push('(');\n        else if(rd[i]==')'){\n            while(!pri.empty() && pri.top()!='('){\n                hz[bh][ln[bh]++]=Node(false,0,pri.top());\n                pri.pop();\n            }\n            if(!pri.empty())\tpri.pop();\n        }\n        else{\n            while(!pri.empty() && ope(pri.top())>=ope(rd[i])){\n                hz[bh][ln[bh]++]=Node(false,0,pri.top());\n                pri.pop();\n            }\n            pri.push(rd[i]);\n        }\n    }\n    while(!pri.empty()){\n        if(pri.top()!='(')\thz[bh][ln[bh]++]=Node(false,0,pri.top());\n        pri.pop();\n    }\n    while(!pri.empty()){\n        hz[bh][ln[bh]++]=Node(false,0,pri.top());\n        pri.pop();\n    }\n}\nvoid rdl(){\n    char a;\n    memset(rd,0,sizeof(rd));\n    int len=0;\n    while(scanf(\"%c\",&a) && a!='\\n' && a!='\\r'){\n        if(a!=' ')\trd[len++]=a;\n    }\n    scanf(\"%c\",&a);\n}\nlong long mans(int bh,int A){\n    for(int i=0;i<ln[bh];i++){\n        if(hz[bh][i].isnum){\n            if(hz[bh][i].num==-1LL)\tqwq.push(1LL*A);\n            else\tqwq.push(hz[bh][i].num);\n        }\n        else{\n            long long B=qwq.top();qwq.pop();\n            long long C=qwq.top();qwq.pop();\n            if(hz[bh][i].ch=='+')\tqwq.push((C+B)%M);\n            if(hz[bh][i].ch=='-')\tqwq.push((C-B+M)%M);\n            if(hz[bh][i].ch=='*')\tqwq.push((C*B)%M);\n            if(hz[bh][i].ch=='^')\tqwq.push(powr(C,B));\n        }\n    }\n    long long ret=qwq.top();qwq.pop();\n    return ret;\n}\nint main(){\n    srand(15608*1234+545);\n    rdl();\n    run(0);\n    scanf(\"%d%*c%*c\",&N);\n    for(int i=1;i<=N;i++){\n        rdl();\n        run(i);\n    }\n    for(int i=1;i<=10;i++){\n        int A=rand();\n        long long ans=mans(0,A);\n        for(int i=1;i<=N;i++){\n            if(mans(i,A)!=ans)\tisans[i]=true;\n        }\n    }\n    for(int i=1;i<=N;i++)\n        if(!isans[i])\tprintf(\"%c\",i-1+'A');\n}\n```",
        "postTime": 1558778303,
        "uid": 60864,
        "name": "tiger2005",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u7279\u6b8a\u503c\u6cd5\n\n\u5047\u8bbea\u4e3a\u67d0\u4e2a\u503c\u3002\u5c06a\u5e26\u5165\u9898\u5e72\u5f0f\u4e2d\u5f97\u51fa\u4e00\u4e2a\u503cjizhun\uff0c\u5e76\u5c06a\u7684\u503c\u4ee3\u5165\u6bcf\u4e00\u4e2a\u9009\u9879\u5f0f\u4e2d\u5f97\u5230\u4e00\u4e2a\u503cans\u3002\n\n\u82e5ans=jizhun\uff0c\u5219\u8be5\u9009\u9879\u5f0f\u5f0f\u7b49\u4ef7\u4e8e\u9898\u5e72\u5f0f\u3002\n\u8fd9\u6837\u505a\u7684\u51fa\u9519\u51e0\u7387\u6781\u4f4e\uff08\u5c24\u5176\u662f\u5f53a\u7684\u4ee3\u5165\u503c\u8f83\u5927\u65f6\uff09\u3002\n\n**Code:**\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n\nconst int MAXN=105;\nconst long long MOD=1000000007,uni=100000007;\n//\u6ce8\u610funi\u7684\u503c\uff08\u5373a\uff09\u4e0d\u8981\u53d6\u5f97\u8fc7\u5927\uff08\u5426\u5219\u4f1a\u7206long long\uff09 \nint n,first[MAXN];\n\nint len;\nchar ss[MAXN];\n\nint totc;\nchar charac[MAXN];\n\nint cnt;\nchar last[MAXN];\nint num,now,totl;\nlong long shu[MAXN],lnum[MAXN],jizhun,ans;\n\nbool book[MAXN];\n\nvoid read()//\u624b\u52a8\u8bfb\u5b57\u7b26\u4e32\n{\n    char ch=getchar();\n    while(1)\n    {\n        if(ch=='\\n')//\u8fc7\u6ee4\u6389\u56de\u8f66 \n        {\n            return;\n        }\n        if(ch==' ')\t ch=getchar();//\u8fc7\u6ee4\u6389\u7a7a\u683c\t\t\n        if(ch!=' ')\n        {\n            ss[++len]=ch;\n            ch=getchar();\n        }\n    }\n}\n\nvoid clean()//\u6ce8\u610f\u968f\u65f6\u6e05\u7a7a \n{\n    for(int i=1;i<=num;i++)\t shu[i]=0;\n    totc=0,totl=0,cnt=0,num=0,ans=0,now=0,len=0,lnum[1]=0;\n}\n\nint find(int x)//\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u4e2d\u7684\u591a\u4f4d\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u8f6c\u4e3a\u6570\u3002 \n{\n    num++;\n    int tmp=0;\n    while('0'<=ss[x]&&ss[x]<='9')\n    {\n        shu[num]=((shu[num]*10)%MOD+(ss[x]-'0')+MOD)%MOD;\n        x++,tmp++;\n    }\n    return tmp;\n}\n\nvoid query()//\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u5f0f\u5b50\u7684\u503c \n{\n    for(int i=1;i<=cnt;i++)\n    {\n        if(last[i]=='0')\tlnum[++totl]=shu[++now];\n        if(last[i]=='a')\tlnum[++totl]=uni;\n        if(last[i]!='0'&&last[i]!='a')\n        {\n            if(last[i]=='+')\tlnum[totl-1]=(lnum[totl-1]+lnum[totl]+MOD)%MOD;\n            if(last[i]=='-')\tlnum[totl-1]=(lnum[totl-1]-lnum[totl]+MOD)%MOD;\n            //\u6ce8\u610f\u51cf\u53f7\u7684\u6a21\u8fd0\u7b97\u6cd5\u5219\u662f(a-b)%MOD=((a%MOD)-(b%MOD)+MOD)%MOD; \n            if(last[i]=='*')\tlnum[totl-1]=(lnum[totl-1]*lnum[totl]+MOD)%MOD;\n            if(last[i]=='^')\n            {\n                long long tmp=lnum[totl-1];\n                for(int j=1;j<=lnum[totl]-1;j++)\tlnum[totl-1]=(lnum[totl-1]*tmp)%MOD;\n            }\n            totl--;\n        }\n    }\n    \n    ans=lnum[1];\n}\n\nvoid work()//\u4e2d\u7f00\u8f6c\u540e\u7f00 \n{\n    clean();\n    read();\n    \n    int i=1;\n    while(i<=len)\n    {\n        if(ss[i]=='a')\tlast[++cnt]=ss[i];\n        \n        if('0'<=ss[i]&&ss[i]<='9')\n        {\n            last[++cnt]='0';\n            i+=find(i);continue;\n        }\n        \n        if(ss[i]=='+'||ss[i]=='-'||ss[i]=='*'||ss[i]=='^')\n        {\n            while(first[(int)charac[totc]]>=first[(int)ss[i]]&&totc>0&&charac[totc]!='(')\n            {\n                last[++cnt]=charac[totc];\n                totc--;\n            }\n            charac[++totc]=ss[i];\n        }\n        \n        if(ss[i]=='(')\tcharac[++totc]=ss[i];\n        \n        if(ss[i]==')')\t\n        {\n            while(charac[totc]!='('&&totc>0)\n            {\n                last[++cnt]=charac[totc];\n                totc--;\t\t\t\t\n            }\n            totc--;\n        }\n        i++;\n    }\n    for(int i=totc;i>=1;i--)\tlast[++cnt]=charac[i];\n}\n\nint main()\n{\t\n    first[(int)'(']=3,first[(int)')']=3,first[(int)'^']=3;\n    first[(int)'*']=2,first[(int)'+']=1,first[(int)'-']=1;\n    \n    work();query();\n    jizhun=ans;\n    \n    scanf(\"%d\",&n);\n    //\u6ce8\u610f\uff1a\u8fd9\u4e2an\u8bfb\u5165\u540e\u4f1a\u968f\u4e4b\u6765\u4e00\u4e2a'\\n'\uff0c\u5b9e\u9645\u8bfb\u65f6\u4f1a\u628a\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5b83\u7684ans\u4f1a\u8c03\u7528\u6587\u672c\u4e32\u7684lnum[1] \n    n+=1;//\u6ce8\u610f\uff1a\u8fd9\u4e2an\u8bfb\u5165\u540e\u4f1a\u968f\u4e4b\u6765\u4e00\u4e2a'\\n'\uff0c\u5b9e\u9645\u8bfb\u65f6\u4f1a\u628a\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u603b\u7684\u5b57\u7b26\u4e32\u8bfb\u5165\u4e2a\u6570\u4e3an+1. \n    for(int i=1;i<=n;i++)\n    {\n        work();query();\n        if(ans==jizhun)\tbook[i]=1;\n    }\n    for(int i=1;i<=n;i++)\t\n        if(book[i]==1)\tcout<<(char)(64+i-1);//n\u8bfb\u5165\u540e\u7684'\\n'\u5b9e\u9645\u8bfb\u65f6\u4f1a\u628a\u5f53\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32,\u6240\u4ee5\u5224\u6389\u3002 \n    \n    return 0;\n}\n```",
        "postTime": 1537583446,
        "uid": 53774,
        "name": "\u5403\u74dc\u7fa4\u4f17syc",
        "ccfLevel": 0,
        "title": "P1054 \u7b49\u4ef7\u8868\u8fbe\u5f0f"
    },
    {
        "content": "\u8fd9\u9898\u5012\u4e0d\u662f\u8bf4\u591a\u4e48\u96be\u2026\u4f46\u662f\u2026\u771f\u7684\u5f88\u591a\u7ec6\u8282\u554aQwQ...\u770b\u89c1\u697c\u4e0brefun RE\u4e86 \u5b9d\u5b9d\u5341\u5206\u5f00\u5fc3\uff08\uff1f\uff1f\uff1f\uff09 \u4e8e\u662f\u6765\u53d1\u5566\u3002\u3002\uff08\u8bdd\u8bf4\u6211\u5c31\u7528\u7684gets...\uff09\n\n\n\u6570\u636e\u91cc\u6709\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u70b9\uff08\uff1f\uff1f\uff1f\uff09 \u62ec\u53f7\u662f\u4e0d\u5339\u914d\u7684 \u8fd9\u5c31\u9700\u8981\u6211\u4eec\u5728\u8003\u8651\u62ec\u53f7\u7684\u65f6\u5019\u66f4\u5168\u9762 \u6765\u5e94\u5bf9\u4e0d\u914d\u5bf9\u7684\u60c5\u51b5 \u5e0c\u671b\u7ba1\u7406\u5458\u80fd\u6539\u4e00\u4e0b\u5566 \u89e3\u6551\u5e7f\u5927\u52b3\u82e6\u4eba\u6c11\u2026\u6389\u5751n\u6b21\n\n\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8d1f\u6570 \u5728\u8ba1\u7b97\u4e4b\u540e%\u8d28\u6570\u65f6\u8981\u5148\u52a0\u4e0a\u8d28\u6570\u672c\u8eab\n\n\n\u6ce8\u91ca\u5199\u7684\u5f88\u8be6\u7ec6\u4e86\n\n\n\u4ee5\u4e0b\u4ee3\u7801\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nchar w[55],c[55];\nint n,x,t1,t2,a[100];\nlong long check[5],c1[55],c2[55],c3[55];//\u7528\u4e09\u4e2a\u8d28\u6570\u4f5c\u4e3a\u7279\u6b8a\u503c\nint pow(int a,int b)\n{\n    int s=a;\n    for (int i=2;i<=b;i++) s=(s*a+10007)%10007; \n    return s;\n}\nvoid ys()\n{\n    int m1=c1[t2],n1=c1[t2-1],m2=c2[t2],n2=c2[t2-1],m3=c3[t2],n3=c3[--t2]; \n    switch(w[t1])//\u540c\u65f6\u5bf9\u4e09\u4e2a\u7279\u6b8a\u503c\u8fdb\u884c\u8fd0\u7b97 \u6570\u5b57\u6808\u4e3a\u522b\u4e3ac1 c2 c3 \u7b26\u53f7\u6808\u4e3a\u76f8\u540c\u7684w\u6808 \n    {\n        case '+':c1[t2]=(n1+m1+10007)%10007; c2[t2]=(n2+m2+10007)%10007; c3[t2]=(n3+m3+10007)%10007; break;\n        case '-':c1[t2]=(n1-m1+10007)%10007; c2[t2]=(n2-m2+10007)%10007; c3[t2]=(n3-m3+10007)%10007; break;\n        case '*':c1[t2]=(n1*m1+10007)%10007; c2[t2]=(n2*m2+10007)%10007; c3[t2]=(n3*m3+10007)%10007; break;\n        case '^':c1[t2]=pow(n1,m1); c2[t2]=pow(n2,m2); c3[t2]=pow(n3,m3); break;\n    }\n    t1--;//\u8fd0\u7b97\u5b8c\u6bd5\u540e\u8fd0\u7b97\u7b26\u51fa\u6808 \n}\nvoid js()\n{\n    x=0;\n    for (int i=0;i<strlen(c);i++)\n    {\n        if (c[i]=='a') {c1[++t2]=3; c2[t2]=7; c3[t2]=13;} //\u662f\u53d8\u91cf\u76f4\u63a5\u8fdb\u6808\n        else if (c[i]>='0'&&c[i]<='9') x=x*10+c[i]-48;//\u53ef\u80fd\u6709\u591a\u4f4d\u6570\u5b57\u51fa\u73b0 \u5728\u51fa\u73b0\u7b26\u53f7\u524d\u8fdb\u884c\u7d2f\u52a0 \n        else//\u662f\u5b57\u7b26\u8fdb\u884c\u5904\u7406 \n        {\n            if (x!=0) {c1[++t2]=x; c2[t2]=x; c3[t2]=x; x=0;}\n            if (a[c[i]]==0) continue;\n            if (c[i]=='('||t1==0&&c[i]!=')') w[++t1]=c[i]; \n            else \n                if (a[c[i]]<a[w[t1]])//\u5f53\u524d\u8bfb\u5165\u5b57\u7b26\u4f18\u5148\u7ea7\u9ad8 \n                    if (c[i]!=')') w[++t1]=c[i]; else//\u4e0d\u662f\u53f3\u62ec\u53f7\u5219\u8fdb\u6808 \u82e5\u8bfb\u8fdb\u53f3\u62ec\u53f7\u8981\u8fdb\u884c\u8ba1\u7b97 \n                    {\n                        while (w[t1]!='('&&t1>0) ys();//\u8ba1\u7b97\u5230\u5de6\u62ec\u53f7\u505c\u6b62    \n                        if (w[t1]=='(') t1--;//\u5de6\u62ec\u53f7\u51fa\u6808 \n                    }\n                else//\u5f53\u524d\u8bfb\u5165\u5b57\u7b26\u4f18\u5148\u7ea7\u4f4e \n                {\n                    while (a[c[i]]>=a[w[t1]]&&t1>0) ys();//\u5c06\u6bd4\u5f53\u524d\u5b57\u7b26\u4f18\u5148\u7ea7\u4f4e\u7684\u90fd\u8ba1\u7b97\u5b8c \n                    if (c[i]!=')') w[++t1]=c[i];//\u8bfb\u5165\u7684\u5b57\u7b26\u8fdb\u6808 \n                }\n        }\n    }\n    if (x!=0) {c1[++t2]=x; c2[t2]=x; c3[t2]=x; x=0;}\n    while (t1>0) ys();//\u5c06\u6808\u4e2d\u5269\u4e0b\u7684\u540c\u7ea7\u8fd0\u7b97\u7b26\u90fd\u505a\u5b8c \n}\nint main()\n{\n//    freopen(\"equal.in\",\"r\",stdin);\n//    freopen(\"equal.out\",\"w\",stdout);\n    a[40]=5; a[41]=1; a[94]=2; a[42]=a[47]=3; a[43]=a[45]=4;//\u8bbe\u7f6e\u5404\u7b26\u53f7\u7684\u4f18\u5148\u7ea7 \u6570\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \n    gets(c); scanf(\"%d\",&n); js(); gets(c);\n    check[1]=c1[1]; check[2]=c2[1]; check[3]=c3[1];//\u4ee5\u9898\u5e72\u4ee3\u6570\u5f0f\u5f97\u5230\u7684\u4e09\u4e2a\u503c\u4e3a\u6807\u51c6check \n    for (int i=1;i<=n;i++) \n    {\n        t1=t2=0; gets(c); js(); \n        if (check[1]==c1[1]%10007&&check[2]==c2[1]%10007&&check[3]==c3[1]%10007) \n            printf(\"%c\",i+64);//\u82e5\u4e09\u4e2a\u8d28\u6570\u8fd0\u7b97\u5f97\u5230\u7684\u7ed3\u679c\u4e0e\u6807\u51c6\u76f8\u540c\u5219\u8f93\u51fa\u7f16\u53f7 \n    }\n    fclose(stdin); fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1507556906,
        "uid": 42771,
        "name": "keyword_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u4e00\u9053\u8003\u5bdf\u4e2d\u7f00\u6c42\u503c+\u4e71\u641e\u7684\u597d\u9898\u3002\n\n\u5982\u679c\u6309\u591a\u9879\u5f0f\u5904\u7406\uff0c\u663e\u7136\u4e0d\u884c\u3002\n\n\u53d6\u51e0\u4e2a\u5e38\u91cf\u4ee3\u5165\u5373\u53ef\uff0c\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u795e\u5947\u7684\u65b9\u6cd5\u5f97\u5230\n\n\u5982\u679c\u8fd9\u51e0\u4e2a\u5e38\u91cf\u5bf9\u5e94\u7684\u503c\u90fd\u76f8\u7b49\uff0c\u7b49\u4ef7\u7684\u6982\u7387\u6781\u9ad8(\u4f30\u8ba1\u6709%99.99999)\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define INF 7000007\n#define x1 17\n#define x2 29\nint i,p,n,m,topnum=0,topsym=0;\nlong long ansa,ansb;\nchar a[51],sym[51];\nstruct expression\n{\n    long long y1,y2;\n} num[51];\nshort level(char ch) //\u4f18\u5148\u7ea7 \n{\n    switch (ch)\n    {\n        case '+': return 1; break;\n        case '-': return 1; break;\n        case '*': return 2; break;\n        case '^': return 3; break;\n        case '(': return 0; break;\n    } \n}\nvoid calc(char ch)\n{\n    long long a1=num[topnum-1].y1,b1=num[topnum].y1;\n    long long a2=num[topnum-1].y2,b2=num[topnum].y2;\n    if (ch=='+')\n    {\n        num[topnum-1].y1=(a1+b1)%INF;\n        num[--topnum].y2=(a2+b2)%INF;\n    }\n    else if (ch=='-')\n    {\n        num[topnum-1].y1=(a1-b1)%INF;\n        if (num[topnum-1].y1<0) num[topnum-1].y1+=INF;\n        num[--topnum].y2=(a2-b2)%INF;\n        if (num[topnum].y2<0) num[topnum].y2+=INF;\n    }\n    else if (ch=='*')\n    {\n        num[topnum-1].y1=(a1%INF*b1)%INF;\n        num[--topnum].y2=(a2%INF*b2)%INF;\n    }\n    else if (ch=='^')\n    {\n        long long cnt=a1;\n        for (int i=1; i<b1; i++) //\u76f4\u63a5O(n) \n          cnt=(cnt*a1)%INF;\n        num[topnum-1].y1=cnt;\n        cnt=a2;\n        for (int i=1; i<b2; i++)\n          cnt=(cnt*a2)%INF;\n        num[--topnum].y2=cnt;\n    }\n}\nvoid work()\n{\n    gets(a);\n    m=strlen(a);\n    p=0;\n    while (p<m)\n    {\n        if (a[p]==' ') { p++; continue; } //\u81ea\u52a8\u8fc7\u6ee4(\u7528gets\u7684\u8bdd\u4e00\u5b9a\u8981\u5199)\n        if (a[p]>='0'&&a[p]<='9') //\u6570\u5b57 \n        {\n            int x=a[p++]-'0';\n            while (a[p]>='0'&&a[p]<='9')\n              x=10*x+a[p++]-'0';\n            p--;\n            num[++topnum].y1=x; num[topnum].y2=x;\n        }\n        else if (a[p]=='a') //a\u7528\u67d0\u4e2a\u5e38\u91cf\u4ee3\u66ff\uff0c\u4ee5\u514d\u8fdb\u884c\u591a\u9879\u5f0f\u4e58\u6cd5 \n        {\n            num[++topnum].y1=x1; num[topnum].y2=x2;            \n        }\n        else if (a[p]=='(') sym[++topsym]='(';\n        else if (a[p]==')') \n        {\n            while (topsym>1 && sym[topsym]!='(')\n              calc(sym[topsym--]);\n            if (topsym>=1) topsym--;\n        }\n        else if (topsym==0 || level(sym[topsym])<level(a[p])) \n            sym[++topsym]=a[p];\n        else //\u8fd0\u7b97\u7b26\u8fd0\u7b97 \n        {\n            calc(sym[topsym--]);\n            while (topsym>0 && level(sym[topsym])>=level(a[p]))\n              calc(sym[topsym--]);\n            sym[++topsym]=a[p];\n        }\n        p++;\n    }\n    while (topsym>0)\n      calc(sym[topsym--]);        \n}\nint main()\n{  \n    work();\n    ansa=num[1].y1;\n    ansb=num[1].y2;\n    topnum=0;\n    scanf(\"%d\",&n);\n    gets(a);\n    for (i=0; i<n; i++)\n    {        \n        work();\n        if (num[1].y1==ansa && num[1].y2==ansb)\n          printf(\"%c\",'A'+i);\n        topnum=0;\n    }\n    return 0;\n}\n```",
        "postTime": 1479199509,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    },
    {
        "content": "\u7528\u6808\u7684\u65b9\u6cd5\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u7ecf\u5178\u7684\u7b97\u6cd5\u3002\u8003\u8651\u5230\u591a\u9879\u5f0f\u7684\u5904\u7406\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e0d\u59a8\u5bf9\u53d8\u91cfa\u8fdb\u884c\u591a\u6b21\u8d4b\u503c\u4ee5\u5224\u65ad\u8868\u8fbe\u5f0f\u662f\u5426\u7b49\u4ef7\u3002\u00a0\n\n\u503c\u5f97\u6ce8\u610f\uff0c\u7531\u4e8e\u8fdb\u884c\u6570\u503c\u8fd0\u7b97\uff0c\u91c7\u7528\u54ea\u79cd\u6570\u636e\u7c7b\u578b\u6210\u4e3a\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u7684\u5173\u952e\u3002\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u91c7\u53d6mod\u00a0\u00a0m\u7684\u65b9\u6cd5\uff0c\u5176\u4e2dm\u4e3a\u4efb\u610f\u6b63\u6574\u6570\u3002\u5f53\u5bf9a\u591a\u6b21\u8d4b\u503c\uff0c\u4e14m\u53d6\u4e0d\u540c\u7684\u8f83\u5927\u7684\u6b63\u6574\u6570\u65f6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002\n",
        "postTime": 1380707809,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1054 \u3010\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3011"
    }
]