[
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u865a\u6811\u7684\u505a\u6cd5\uff0c\u6bd4\u8d77\u5176\u4ed6\u505a\u6cd5\u7ec6\u8282\u5c11\u4e86\u5f88\u591a\uff0c\u5e76\u4e14\u53ef\u4ee5\u6269\u5c55\u5230 $\\sum k\\le 10^5$\u3002\n\n\u524d\u9762\u7684\u90e8\u5206\u548c\u5176\u4ed6\u505a\u6cd5\u4e00\u6837\uff0c\u5148 tarjan \u8f6c DAG\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\u53d8\u6210\u53f6\u5411\u6811\uff0c\u53d8\u6210\u6811\u4e0a\u95ee\u9898\u3002\n\n\u968f\u7740 $k$ \u7684\u589e\u957f\uff0c\u5206\u7c7b\u8ba8\u8bba\u53d8\u5f97\u9ebb\u70e6\uff0c\u8003\u8651\u865a\u6811\u3002\n\n\u5c06 $s,t$ \u4ee5\u53ca\u6240\u6709\u65b0\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u62ff\u51fa\u6765\uff0c\u5efa\u7acb\u865a\u6811\uff0c\u4ece\u7956\u5148\u5230\u540e\u4ee3\u8fde\u5355\u5411\u8fb9\uff08\u56e0\u4e3a\u662f\u53f6\u5411\u6811\uff09\u3002\u540c\u65f6\u70b9\u5e26\u70b9\u6743\u4e3a\u6811\u4e0a\u7684\u70b9\u6743\uff0c\u8fb9\u5e26\u8fb9\u6743\u4e3a\u4e24\u70b9\u4e4b\u95f4\u4e0d\u542b\u4e24\u4e2a\u7aef\u70b9\u7684\u70b9\u6743\u548c\u3002\u5bf9\u4e8e\u65b0\u52a0\u7684\u8fb9\uff0c\u6839\u636e\u5b9a\u4e49\u5728\u865a\u6811\u4e0a\u9762\u591a\u8fde\u4e00\u4e2a\u8fb9\u6743\u4e3a 0 \u7684\u8fb9\u3002\n\n\u73b0\u5728\u53d8\u6210\u548c\u4e00\u5f00\u59cb\u4e00\u6837\u7684\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7684\u6709\u5411\u56fe\uff0c\u6c42 $s$ \u5230 $t$ \u53ef\u80fd\u7ecf\u8fc7\u7684\u6743\u503c\u548c\uff0c\u53ea\u4e0d\u8fc7\u70b9\u8fb9\u8f83\u5c11\u3002\n\n\u65e2\u7136\u70b9\u8fb9\u8f83\u5c11\uff0c\u90a3\u4e48\u539f\u6765\u7684 35 \u5206\u66b4\u529b\u505a\u6cd5\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\uff1a\u5efa\u539f\u56fe\u8dd1\u51fa $s$ \u5230\u8fbe\u7684\u70b9\u8fb9\uff0c\u5efa\u53cd\u56fe\u8dd1\u51fa $t$ \u5230\u8fbe\u7684\u70b9\u8fb9\uff0c\u6700\u540e\u53d6\u4e00\u4e2a\u4ea4\u7d2f\u52a0\u8fdb\u7b54\u6848\u3002\n\n\u4ee3\u7801\u8f83\u957f\uff0c\u4f46\u662f\u5404\u90e8\u5206\u4e92\u76f8\u72ec\u7acb\u6bd4\u8f83\u597d\u8c03\uff0c\u8c03\u8bd5\u65f6\u53ea\u9700\u8981\u68c0\u67e5\u5404\u79cd\u65b0\u56fe\u662f\u4e0d\u662f\u5bf9\u7684\u5c31\u884c\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#include<unordered_map>\n#include<map>\nusing namespace std;\ninline int read()\n{\n    char c=getchar();int x=0;bool f=0;\n    for(;!isdigit(c);c=getchar())f^=!(c^45);\n    for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n    if(f)x=-x;return x;\n}\nconst int N=3e5+5;\nint n,m,q,k,head[N],cnt,d[N];\nstruct Graph\n{\n\tint head[N],cnt;\n\tstruct edge\n\t{\n\t\tint to,nxt;\n\t}e[N*2];\n\tvoid add(int u,int v)\n\t{\n\t\te[++cnt].to=v;\n\t\te[cnt].nxt=head[u];\n\t\thead[u]=cnt;\n\t}\n}G1,G2;\nstruct graph\n{\n\tint head[20],cnt;\n\tstruct edge\n\t{\n\t\tint to,nxt,v;\n\t}e[30*2];\n\tvoid add(int u,int v,int w)\n\t{\n//\t\tcout<<u<<\" \"<<v<<\" \"<<w<<endl;\n\t\te[++cnt].to=v;\n\t\te[cnt].nxt=head[u];\n\t\thead[u]=cnt;\n\t\te[cnt].v=w;\n\t}\n\tvoid clear()\n\t{\n\t\tcnt=0;\n\t\tmemset(head,0,sizeof head);\n\t}\n}G3,G4;\nstruct edge\n{\n\tint to,nxt;\n}e[N*2];\nvoid add(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint dfn[N],low[N],v[N],col[N],colw[N],tot,s[N],top,Sum,st,ed,h[15],sum[N],lg[N],f[N][20],dep[N],Tot,L[N],ind[N];\n#define sum Sum\nvoid dfs(int now)//\u539f\u56fe tarjan \n{\n\tdfn[now]=low[now]=++tot;\n\ts[++top]=now;\n\tv[now]=1;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\tif(!dfn[e[i].to]) dfs(e[i].to),low[now]=min(low[now],low[e[i].to]);\n\telse if(v[e[i].to]) low[now]=min(low[now],dfn[e[i].to]);\n\tif(low[now]==dfn[now])\n\t{\n\t\tint x;\n\t\tsum++;\n\t\tdo\n\t\t{\n\t\t\tx=s[top--];\n\t\t\tcol[x]=sum;\n\t\t\tv[x]=0;\n\t\t\tcolw[sum]++;\n\t\t}while(now!=x);\n\t}\n}\nvoid topo()//G1DAG->G2 tree \n{\n\tqueue<int> q;\n\tfor(int i=1;i<=sum;i++)\n\tif(!d[i]) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=G1.head[now];i;i=G1.e[i].nxt)\n\t\t{\n\t\t\td[G1.e[i].to]--;\n\t\t\tif(d[G1.e[i].to]==0)\n\t\t\t{\n\t\t\t\tG2.add(now,G1.e[i].to);\n\t\t\t\tind[G1.e[i].to]++;\n\t\t\t//\tcout<<now<<\" \"<<G1.e[i].to<<endl;\n\t\t\t\tq.push(G1.e[i].to);\n\t\t\t}\n\t\t}\n\t}\n}\n#undef sum\nstruct Hash\n{\n\tunordered_map<int,int> mp;\n\tint cnt;\n\tvoid clear()\n\t{\n\t\tmp.clear();\n\t\tcnt=0;\n\t}\n\tint get(int x)\n\t{\n\t\tif(mp[x]==0) mp[x]=++cnt;\n\t\treturn mp[x];\n\t}\n}H;\nvoid dfs1(int now,int fa)//G2 tree dfs \uff1alca\uff0cdfn\uff08L\uff09\uff0c\u6743\u503c\u524d\u7f00\u548c\uff08sum\uff09 \n{\n\tf[now][0]=fa;\n\tL[now]=++Tot;\n\tdep[now]=dep[fa]+1;\n\tfor(int i=1;i<=lg[dep[now]];i++)\n\tf[now][i]=f[f[now][i-1]][i-1];\n\tsum[now]=sum[fa]+colw[now];\n\tfor(int i=G2.head[now];i;i=G2.e[i].nxt)\n\t{\n\t\tif(G2.e[i].to!=fa)\n\t\tdfs1(G2.e[i].to,now);\n\t}\n}\nint LCA(int x,int y)\n{\n\tif(dep[x]<dep[y]) swap(x,y);\n\twhile(dep[x]>dep[y]) x=f[x][lg[dep[x]-dep[y]]-1];\n\tif(x==y) return x;\n\tfor(int i=lg[dep[x]];i>=0;i--) \n\tif(f[x][i]!=f[y][i])\n\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nbool cmp(int x,int y)\n{\n\treturn L[x]<L[y];\n}\nint vis[30],vis2[30],vp[30],val[30];\nint work()\n{\n\tmemset(vis,0,sizeof vis);\n\tmemset(vp,0,sizeof vp);\n\tqueue<int> q;\n//\tcout<<H.get(st)<<\" \"<<H.get(ed)<<endl;\n\tq.push(H.get(st));\n\twhile(!q.empty())//G3 bfs\n\t{\n\t\tint now=q.front();q.pop();\n\t\tvp[now]=1;\n\t\tfor(int i=G3.head[now];i;i=G3.e[i].nxt)\n\t\t{\n\t\t\tif(!vis[i])\n\t\t\t{\n\t\t\t\tvis[i]=1;\n\t\t\t\tq.push(G3.e[i].to);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tmemset(vis2,0,sizeof vis2);\n\tq.push(H.get(ed));\n\twhile(!q.empty())//G4 bfs\n\t{\n\t\tint now=q.front();q.pop();\n\t\tif(vp[now]) ans+=val[now],vp[now]=0;\n\t\tfor(int i=G4.head[now];i;i=G4.e[i].nxt)\n\t\t{\n\t\t\tif(!vis2[i])\n\t\t\t{\n\t\t\t\tvis2[i]=1;\n\t\t\t\tif(vis[i]) ans+=G4.e[i].v,vis[i]=0; \n\t\t\t\tq.push(G4.e[i].to);\n\t\t\t}\n\t\t}\n\t}\n\tmemset(val,0,sizeof val);\n\treturn ans;\n}\nint main()\n{\n\tn=read();m=read();q=read();k=read();\n\tfor(int i=1;i<=n;i++)\n\tlg[i]=lg[i/2]+1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(!dfn[i]) dfs(i);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=head[i];j;j=e[j].nxt)\n\tif(col[i]!=col[e[j].to])\n\tG1.add(col[i],col[e[j].to]),d[col[e[j].to]]++;\n\ttopo();\n\tint root=0;\n\tfor(int i=1;i<=Sum;i++)\n\tif(ind[i]==0) root=i;\n\tdfs1(root,0);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tG3.clear();G4.clear();H.clear();\n\t\tst=read();ed=read();\n\t\tst=col[st];ed=col[ed];\n\t\th[1]=st;h[2]=ed;\n\t\ttop=0;\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\tu=col[u];v=col[v];\n\t\t\tif(u==v) continue;\n\t\t\tG3.add(H.get(u),H.get(v),0);\n\t\t\tG4.add(H.get(v),H.get(u),0);\n\t\t\th[j*2+1]=u;h[j*2+2]=v;\n\t\t}\n\t\tsort(h+1,h+(k+1)*2+1,cmp);\n\t\tint qwq=unique(h+1,h+(k+1)*2+1)-h-1;\n\t\tfor(int j=1;j<=qwq;j++)\n\t\tval[H.get(h[j])]=colw[h[j]];\n\t\ts[++top]=h[1];\n\t\tfor(int j=2;j<=qwq;j++)\n\t\t{\n\t\t\tint lca=LCA(h[j],s[top]);\n\t\t\tval[H.get(lca)]=colw[lca];\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tif(dep[lca]>=dep[s[top-1]])\n\t\t\t\t{\n\t\t\t\t\tif(lca!=s[top])\n\t\t\t\t\t{\n\t\t\t\t\t\tG3.add(H.get(lca),H.get(s[top]),sum[f[s[top]][0]]-sum[lca]);\n\t\t\t\t\t\tG4.add(H.get(s[top]),H.get(lca),sum[f[s[top]][0]]-sum[lca]);\n\t\t\t\t\t\tif(lca!=s[top-1])\n\t\t\t\t\t\ts[top]=lca;\n\t\t\t\t\t\telse top--;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tG3.add(H.get(s[top-1]),H.get(s[top]),sum[f[s[top]][0]]-sum[s[top-1]]);\n\t\t\t\t\tG4.add(H.get(s[top]),H.get(s[top-1]),sum[f[s[top]][0]]-sum[s[top-1]]);\n\t\t\t\t\ttop--;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts[++top]=h[j];\n\t\t}\n\t\twhile(top-1)\n\t\t{\n\t//\t\tcout<<\"qwq\";\n\t\t\tG3.add(H.get(s[top-1]),H.get(s[top]),sum[f[s[top]][0]]-sum[s[top-1]]);\n\t\t\tG4.add(H.get(s[top]),H.get(s[top-1]),sum[f[s[top]][0]]-sum[s[top-1]]);\n\t\t\ttop--;\n\t\t}\n\t\tprintf(\"%d\\n\",work());\n\t}\n\treturn 0;\n}\n/*\n7 6 1 1\n1 2\n1 3\n2 4\n3 5\n2 6\n6 7\n6 4 7 1\n*/\n/*\n5\n*/\n```\n",
        "postTime": 1629096968,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "P7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "\u53f2\u4e0a\u6700\u7b80\u5355 D1T3\uff0c\u4e5f\u8bb8\u53c8\u662f\u548c\u5176\u4ed6\u4eba\u505a\u6cd5\u90fd\u4e0d\u540c\u3002\n\n\u663e\u7136 SCC \u7f29\u70b9\u540e\u662f\u4e00\u4e2a\u6811\uff0c\u6ce8\u610f\u6784\u9020\u6811\u7684\u7ec6\u8282\uff1a\u91c7\u7528 tarjan \u7b97\u6cd5\u7b97\u51fa SCC \u540e\u4ece\u96f6\u5165\u5ea6\u70b9 DFS\uff0c\u4f18\u5148\u52a0\u5165\u7f16\u53f7\u5927\u7684\u513f\u5b50\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u3002\n\n$k=0$ \u53ea\u9700\u7edf\u8ba1\u6811\u4e0a\u8def\u5f84\u548c\u3002\n\n$k=1$ \u53ea\u9700\u5206\u51e0\u7c7b\u8ba8\u8bba\u3002\n\n\u4f46\u662f $k$ \u8f83\u5927\u65f6\u5206\u7c7b\u8ba8\u8bba\u663e\u8457\u4e4f\u529b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66f4\u597d\u7684\u523b\u753b\u3002\n\n\u5982\u679c\u5bf9\u4e8e $2\\times k$ \u4e2a\u70b9\u4e2d\u7684\u67d0\u4e2a\u70b9 $p$\uff0c\u6ee1\u8db3 $s$ \u53ef\u4ee5\u5230\u8fbe $p$\uff0c$p$ \u53ef\u4ee5\u5230\u8fbe $t$\uff0c\u5c31\u79f0\u5b83\u4e3a\u597d\u70b9\uff0c$s,t$ \u4e5f\u662f\u597d\u70b9\u3002\n\n\u7ed3\u8bba\uff1a\u4e00\u4e2a\u70b9\u53ef\u4ee5\u88ab\u7ecf\u8fc7\uff0c\u5f53\u524d\u4ec5\u5f53\u6709\u4e00\u4e2a\u597d\u70b9\u662f\u5b83\u7684\u7956\u5148\uff0c\u4e14\u6709\u4e00\u4e2a\u597d\u70b9\u662f\u5b83\u7684\u540e\u4ee3\u3002\n\n\u8bc1\u660e\uff1a\u8003\u8651 $s$ \u5230\u5b83\u518d\u5230 $t$ \u7684\u8def\u5f84\uff0c\u5b83\u4e0a\u9762\u548c\u4e0b\u9762\u90fd\u4f1a\u6709\u4e00\u4e2a\u597d\u70b9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u597d\u70b9\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u7c7b\u4f3c\u865a\u6811\u6784\u9020\u7684\u4e1c\u897f\uff08\u4f46\u5982\u679c\u6808\u4e3a\u7a7a\u5c31\u4e0d\u7edf\u8ba1\u5f53\u524d\u8d21\u732e\uff09\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u7b97\u51fa\u7b54\u6848\u3002\n\n$k=2$ \u65f6\u7684\u597d\u70b9\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff08\u60c5\u51b5\u6570\u6bd4\u76f4\u63a5\u5206\u7c7b\u5c11\u4e86\u4e00\u4e2a\u6570\u91cf\u7ea7\uff09\uff0c$k>2$ \u65f6\u4e5f\u53ef\u4ee5\u7528 $O(k^2)$ \u7684\u505a\u6cd5\u6c42\u51fa\uff0c\u66f4\u597d\u7684\u529e\u6cd5\u6ca1\u6709\u4ed4\u7ec6\u601d\u8003\u8fc7\u3002\n\n\u4f7f\u7528 $O(1)$ LCA\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n+q)$\u3002",
        "postTime": 1627350702,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "NOI 2021 D1T3 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u7f29\u70b9\u628a\u73af\u7f29\u6389\uff0c\u53d8\u6210\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u7136\u540e\u518d\u770b\u4e00\u4e0b\u9898\u76ee\uff1a\n\n> \u5bf9\u4e8e\u4e09\u5ea7\u57ce\u5e02 $x$\uff0c$y$\uff0c$z$\uff0c\u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u90a3\u4e48\u6709 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $x$\uff0c\u5047\u8bbe\u6709\u4e24\u6761\u4e0e\u4e4b\u76f8\u8fde\u7684\u8fb9 $(a,x)$ \u548c $(b,x)$\uff0c\u4e0d\u59a8\u8bbe $b\\Rightarrow a$\uff0c\u90a3\u4e48\u5c06 $(b,x)$ \u5220\u53bb\uff0c$b$ \u4e5f\u80fd\u5148\u8d70\u5411 $a$ \u518d\u8d70\u5230 $x$\u3002\n\n\u56e0\u6b64\u5728\u62d3\u6251\u6392\u5e8f\u65f6\u5bf9\u6bcf\u4e2a\u70b9\u4fdd\u7559\u6700\u540e\u4e00\u6761\u4e0e\u4e4b\u76f8\u8fde\u7684\u5165\u8fb9\u4e0d\u4f1a\u5bf9\u539f\u56fe\u8fde\u901a\u6027\u6709\u5f71\u54cd\u3002\n\n\u6b64\u65f6\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u6ce8\u610f\u662f\u6709\u5411\u56fe\uff0c\u6240\u4ee5\u80fd\u4ece $u$ \u5230\u8fbe $v$ \u7684\u524d\u63d0\u662f $v$ \u5728 $u$ \u5b50\u6811\u4e2d\u3002\n\n\u7136\u540e\u8003\u8651\u8be2\u95ee\u64cd\u4f5c\uff1a\n\n\u53d1\u73b0\u6bcf\u6b21\u65b0\u589e\u7684\u8fb9\u6570 $k$ \u5f88\u5c0f\uff0c\u611f\u89c9\u53ef\u4ee5\u66b4\u529b\uff0c\u8003\u8651 bfs\u3002\n\n\u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u5916\u6269\u5c55\u80fd\u8d70\u5230\u7684\u65b0\u589e\u7684\u8fb9\u7684\u7aef\u70b9\uff0c\u5e76\u8bb0\u5f55\u4e0b\u8d70\u8fc7\u7684\u8def\u5f84\u3002\n\n\u6bcf\u6b21\u6269\u5c55\u524d\u5148\u5224\u65ad\u6b64\u65f6\u80fd\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9\uff0c\u82e5\u80fd\u8d70\u5230\uff0c\u5c31\u5148\u5c06\u8d70\u8fc7\u7684\u8def\u5f84\u4e22\u5165\u6876\u4e2d\uff0c\u540e\u9762\u518d\u6c42\u5e76\u96c6\u3002\n\n\u7136\u800c\u53d1\u73b0\u4f1a\u8d70\u5f88\u591a\u6b21\u91cd\u590d\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u5c06\u6269\u5c55\u7684\u6b21\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u8d85\u8fc7\u4e00\u5b9a\u6b21\u6570\u5c31\u4e0d\u7ee7\u7eed\u6269\u5c55\u3002\n\n\u53ef\u4ee5\u5148\u6811\u5256\u4e00\u904d\u5e76\u8bb0\u5f55\u4e0b dfs \u5e8f\uff0c\u8d70\u8fc7\u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u62c6\u6210\u4e00\u4e9b\u94fe\u6c42\u5e76\u3002\n\n\u5230\u8fd9\u91cc\u5c31\u57fa\u672c\u4e0a\u53ef\u4ee5\u8fc7\u4e86\uff0c\u53ea\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u4e9b\u4f18\u5316\uff1a\n\n- \u5982\u679c\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u5c31\u5c06\u4e4b\u524d\u8bb0\u5f55\u4e0b\u7684\u8def\u5f84\u6e05\u7a7a\uff0c\u4f18\u5316\u540e\u9762\u6269\u5c55\u65f6\u8bb0\u5f55\u8def\u5f84\u7684\u65f6\u95f4\u3002\n\n- \u5982\u679c\u4e00\u6761\u8def\u5f84\u5df2\u7ecf\u5728\u6876\u4e2d\uff0c\u5c31\u6ca1\u5fc5\u8981\u518d\u52a0\u4e00\u904d\u3002\n\n\u5b9e\u6d4b\u6269\u5c55\u6b21\u6570\u7b49\u4e8e $4$ \u65f6\u53ef\u8fc7\uff0c\u5c0f\u4e8e $4$ \u65e0\u6cd5\u627e\u5230\u6240\u6709\u8def\u5f84\uff0c\u5927\u4e8e $4$ \u4f1a\u8d85\u65f6\u3002\n\n\u4f46\u662f\u4e0b\u9762\u8fd9\u4e2a\u4f18\u5316\u53ef\u4ee5\u76f4\u63a5\u8fc7\uff1a\n\n- \u65b0\u589e\u7684\u8fb9\u7684\u8d77\u70b9\u4e0d\u9700\u8981\u5165\u961f\uff0c\u53ea\u9700\u8981\u7ec8\u70b9\u5165\u961f\u3002\n\n\u5b9e\u6d4b\u6269\u5c55\u6b21\u6570\u7b49\u4e8e $4$ \u65f6\u53ef\u4ee5\u8fc7\uff0c\u5982\u679c\u4e09\u4e2a\u4f18\u5316\u90fd\u52a0\u4e0a\u6269\u5c55\u6b21\u6570\u5728 $4\\sim 7$ \u65f6\u90fd\u53ef\u4ee5\u8fc7\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/hize4p0o)\u4e5f\u6bd4\u8f83\u597d\u5199\u3002",
        "postTime": 1627366723,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7737 \u3010[NOI2021] \u5e86\u5178\u3011"
    },
    {
        "content": "\u5148\u89c2\u5bdf\u9898\u76ee\u7ed9\u7684\u6761\u4ef6\uff0c\u663e\u7136\u7f29\u4e86\u70b9\u4e0d\u5f71\u54cd\u53ef\u8fbe\u6027\uff0c\u90a3\u5c31\u5148\u7f29\u70b9\u3002\n\n\u8bbe\u6709\u4e24\u6761\u8fb9\uff08\u7f29\u4e86\u70b9\u4e4b\u540e\uff09$(y,x),(z,x)$\uff0c\u90a3\u6839\u636e\u9898\u76ee\u8981\u4e48 $y$ \u80fd\u5230 $z$ \u8981\u4e48 $z$ \u80fd\u5230 $y$\u3002\u4e0d\u59a8\u8bbe $y$ \u80fd\u5230 $z$\uff0c\u5219\u6b64\u65f6\u5220\u53bb $(y,x)$ \u4e00\u5b9a\u4e0d\u5f71\u54cd\u8fde\u901a\u6027\u3002\n\n\u56e0\u6b64\uff0c\u8bbe\u4e00\u4e2a\u70b9 $x$ \u6709\u51e0\u6761\u5165\u8fb9 $(a,x),(b,x),\\dots$\uff0c**\u53ea\u4fdd\u7559\u8d77\u70b9\u62d3\u6251\u5e8f\u6700\u540e\u7684\u5165\u8fb9\u4e00\u5b9a\u4e0d\u5f71\u54cd\u8fde\u901a\u6027\u3002**\n\n\u6839\u636e\u4ee5\u4e0a\u6027\u8d28\uff0c\u53ef\u4ee5\u628a\u6574\u4e2a\u56fe\u7f29\u6210\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u5165\u5ea6\u90fd\u81f3\u591a\u4e3a $1$\uff0c\u8fd9\u5c31\u662f\u6811\u3002\u56e0\u6b64\u53ea\u9700\u8981\u89e3\u51b3 $m=n-1$ \u7684\u60c5\u51b5\u5373\u53ef\u3002\n\n-  $K=0$\uff1a\u76f4\u63a5\u5224\u65ad $y$ \u5728\u4e0d\u5728 $x$ \u5b50\u6811\u91cc\uff0c\u5728\u5c31\u8f93\u51fa $x,y$ \u94fe\u4e0a\u5f3a\u8054\u901a\u5206\u91cf\u5927\u5c0f\u4e4b\u548c\u3002\n-  $K=1$\uff1a\u8bbe\u52a0\u4e86 $(p,q)$\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u8d70\u4e86\u8fd9\u6761\u8fb9\u6216\u8005\u4e0d\u8d70\u8fd9\u6761\u8fb9\uff0c\u7a0d\u5fae\u8ba8\u8bba\u4e0b\uff0c\u7559\u4f5c\u7ec3\u4e60\u3002\n-  $K=2$\uff1a\u53ef\u4ee5\u8bc1\u660e\u8981\u8d70\u8fc7\u6bcf\u4e2a\u53ef\u80fd\u8d70\u8fc7\u7684\u70b9\uff0c\u6bcf\u6761\u65b0\u52a0\u7684\u8fb9\u81f3\u591a\u8d70\u4e24\u6b21\u3002\u5206\u7c7b\u8ba8\u8bba\u662f\u600e\u4e48\u8d70\u7684\uff0c\u53ca\u8d70\u7684\u987a\u5e8f\u3002\u5177\u4f53\u5730\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n    - \u4e0d\u8d70\u65b0\u52a0\u7684\u8fb9\u3002\n    - $x$ \u7ecf\u8fc7\u67d0\u4e00\u6761\u65b0\u52a0\u7684\u8fb9\u8d70\u5230 $y$\u3002\n    - $x$ \u6309\u987a\u5e8f\u7ecf\u8fc7\u7b2c\u4e00\u6761\u65b0\u8fb9\u3001\u7b2c\u4e8c\u6761\u65b0\u8fb9\uff08\u6216\u76f8\u53cd\uff09\u8d70\u5230 $y$\u3002\n    - $x$ \u5148\u8d70\u5230 $y$\uff0c\u7136\u540e\u7ecf\u8fc7 $1$ \u6216 $2$ \u6761\u65b0\u8fb9\u7ed5\u4e00\u5708\u8d70\u56de $x$ \u518d\u8d70\u5230 $y$\u3002\n    - $x$ \u5148\u8d70\u5230 $y$\uff0c\u7136\u540e\u7ecf\u8fc7 $1$ \u6216 $2$ \u6761\u65b0\u8fb9\u4e0d\u7ecf\u8fc7 $x$ \u7ed5\u4e00\u5708\u3002\n    - $x$ \u5148\u7ecf\u8fc7 $1$ \u6216 $2$ \u6761\u65b0\u8fb9\u4e0d\u7ecf\u8fc7 $y$ \u7ed5\u4e00\u5708\uff0c\u7136\u540e\u8d70\u5230 $y$\u3002\n    - $x$ \u5148\u8d70\u5230\u67d0\u4e2a\u65b0\u8fb9\u7684\u8d77\u70b9\uff0c\u5728\u8fd9\u4e2a\u70b9\u7ecf\u8fc7 $1$ \u6216 $2$ \u6761\u65b0\u8fb9\u4e0d\u7ecf\u8fc7 $x,y$ \u7ed5\u4e00\u5708\uff0c\u7136\u540e\u8d70\u5230 $y$\u3002\n    \n\u628a\u4ee5\u4e0a\u6240\u6709\u60c5\u51b5\u53ef\u80fd\u7ecf\u8fc7\u7684\u94fe\u6c42\u5e76\uff0c\u5e76\u4e0a\u7684\u70b9\u6570\u5c31\u662f\u7b54\u6848\u3002\u4f7f\u7528\u865a\u6811/\u6811\u5256\u90fd\u53ef\u4ee5\u505a\u5230 $O(n\\log n)$\uff0c\u5e38\u6570\u4e0d\u5927\u3002",
        "postTime": 1627305676,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "NOI2021 d1t3"
    },
    {
        "content": "\n\u6211\u4eec\u5148\u60f3\u60f3\u66b4\u529b\u505a\u6cd5\u600e\u4e48\u505a\u3002\u4e00\u4e2a\u57ce\u5e02\u5982\u679c\u53ef\u4ee5\u88ab\u7b97\u5165\u7b54\u6848\u91cc\u9762\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u65e2\u53ef\u4ee5\u88ab\u8d77\u70b9\u901a\u8fc7\u6b63\u5411\u8fb9\u5230\u8fbe\uff0c\u53c8\u53ef\u4ee5\u88ab\u7ec8\u70b9\u901a\u8fc7\u53cd\u5411\u8fb9\u5230\u8fbe\u3002\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u8d70\u6b63\u5411\u8fb9\u6807\u8bb0\u8d77\u70b9\u53ef\u8fbe\u7684\u9876\u70b9\uff0c\u518d\u8d70\u53cd\u5411\u8fb9\u6807\u8bb0\u7ec8\u70b9\u53ef\u8fbe\u7684\u9876\u70b9\uff0c\u7b54\u6848\u5373\u4e3a\u62e5\u6709\u53cc\u91cd\u6807\u8bb0\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n\u9898\u76ee\u7279\u522b\u8bf4\u4e86\u8fd9\u4e2a\u9053\u8def\u662f\u6709\u7279\u70b9\u7684\uff0c\u8bf4\u660e\u6b64\u5904\u4e00\u5b9a\u6709\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u7a0d\u7a0d\u6316\u6398\u4e00\u4e0b\u3002\u5982\u679c\u6211\u4eec\u628a\u6709\u5411\u56fe\u7f29\u70b9\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\u6b64\u56fe\u4e00\u5b9a\u4e0d\u5b58\u5728 $u\\rightarrow y,v\\rightarrow y$ \u8fd9\u6837\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u8fd9\u4e2a\u56fe\u4e00\u5b9a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u3002\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\uff0c\u4f1a\u53d1\u73b0\u6574\u4e2a\u56fe\u957f\u5f97\u50cf\u4e00\u68f5\u6811\uff0c\u6240\u6709\u8def\u5f84\u8981\u4e48\u4ece\u7236\u4eb2\u6307\u5411\u513f\u5b50\uff0c\u8981\u4e48\u4ece\u7956\u5148\u8de8\u4ee3\u6307\u5411\u513f\u5b59\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u77e5\u9053\u7684\u662f\u6b63\u56fe\u53cd\u56fe\u4e2d\u8d77\u70b9\u548c\u7ec8\u70b9\u6700\u591a\u53ef\u4ee5\u5230\u8fbe\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u79cd\u8de8\u4ee3\u7684\u8fb9\u663e\u7136\u6ca1\u6709\u4efb\u4f55\u7528\uff0c\u5220\u53bb\u6216\u5ffd\u7565\u5373\u53ef\u3002\n\n\u5173\u4e8e\u5982\u4f55\u5efa\u8fd9\u68f5\u6811\u548c\u53bb\u6389\u591a\u4f59\u8fb9\uff0c\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u6700\u540e\u4e00\u6761\u5220\u6389\u7684\u5165\u8fb9\u5bf9\u5e94\u9876\u70b9\u5373\u4e3a\u7236\u4eb2\u8282\u70b9\u3002\n\n![\u624b\u7a3f1](https://img-blog.csdnimg.cn/df7fd59e44424745a4717adf7f7eee3a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk2MDI4Nw==,size_16,color_FFFFFF,t_70)\n\n\u628a\u8fd9\u68f5\u6811\u5efa\u51fa\u6765\u4ee5\u540e\uff0c\u8d77\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\u548c\u7ec8\u70b9\u8dd1\u53cd\u8fb9\u53ef\u8fbe\u7684\u8303\u56f4\u90fd\u5341\u5206\u89c4\u8303\u4e86\u3002\u8d77\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u8303\u56f4\u5c31\u662f\u5b83\u7684\u5b50\u6811\uff0c\u7ec8\u70b9\u8dd1\u53cd\u8fb9\u53ef\u4ee5\u5230\u8fbe\u7684\u8303\u56f4\u5c31\u662f\u5b83\u5230\u6839\u8282\u70b9\u7684\u4e00\u6761\u8def\u5f84\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e0d\u989d\u5916\u52a0\u8fb9\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u5355\u6b21 $O(1)$ \u7684\u89e3\u51b3\u529e\u6cd5\uff1a\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u603b\u6570\uff08\u6ce8\u610f\u7f29\u8fc7\u70b9\u7684\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u539f\u56fe\u4e0a\u7684\u70b9\uff09\uff0c\u7136\u540e\u6bcf\u6b21\u5148\u7528DFS\u5e8f\u5224\u65ad\u7ec8\u70b9\u662f\u5426\u5728\u8d77\u70b9\u7684\u5b50\u6811\u5185\uff0c\u7136\u540e\u7b80\u5355\u5730\u51cf\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u989d\u5916\u52a0\u8fb9\u7684\u8be2\u95ee\u5462\uff1f\u5047\u8bbe\u52a0\u7684\u4e00\u6761\u8fb9\u4e3a $u\\rightarrow v$\uff0c\u5982\u679c $u$ \u5728\u8d77\u70b9\u7684\u5b50\u6811\u5185\uff0c\u90a3\u4e48 $v$ \u6240\u5728\u7684\u5b50\u6811\u4e5f\u53ef\u4ee5\u4ece\u8d77\u70b9\u5230\u8fbe\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8d77\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\u53ef\u80fd\u4f1a\u53d8\u6210\u4e0d\u5305\u542b\u7684\u4e24\u68f5\u5b50\u6811\u3002\u53cd\u8fc7\u6765\u5bf9\u4e8e\u7ec8\u70b9\uff0c\u5982\u679c $v$ \u5728\u7ec8\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u70b9 $u$ \u5230\u6839\u7684\u8def\u5f84\u4e5f\u4f1a\u53d8\u4e3a\u7ec8\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\uff0c\u6700\u7ec8\u5c31\u6709\u4e24\u6761\u8def\u5f84\u7684\u8303\u56f4\u3002\n\n\u6211\u4eec\u901a\u8fc7\u8fd9\u79cd\u6dfb\u52a0\u8303\u56f4\u7684\u65b9\u6cd5\u5904\u7406\u52a0\u5165\u7684\u4e24\u6761\u8fb9\uff0c\u5e76\u4e14\u628a\u8303\u56f4\u53bb\u91cd\u8fc7\u540e\uff0c\u8d77\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\u6700\u591a\u4e3a\u4e09\u68f5\u5b50\u6811\uff0c\u7ec8\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\u6700\u591a\u4e3a\u4e09\u6761\u5230\u6839\u7684\u8def\u5f84\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\uff0c\u628a\u6bcf\u68f5\u5b50\u6811\u4e0b\u4e0e\u8def\u5f84\u91cd\u5408\u7684\u90e8\u5206\u7684\u8d21\u732e\u90fd\u7b97\u4e0a\u3002\u4e00\u6b21\u8be2\u95ee\u7b97\u4e0a\u6c42 $\\rm LCA$ \u7684\u65f6\u95f4\uff0c\u6700\u574f\u4e5f\u5c31 $O(27\\cdot\\log n)$\uff0c\u597d\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u5faa\u73af\u548c $O(1)\\,\\rm LCA$ \u505a\u5230 $O(9)$\u3002\n\n![\u624b\u7a3f2](https://img-blog.csdnimg.cn/870830b711f742648002762e96c53be7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk2MDI4Nw==,size_16,color_FFFFFF,t_70)\n\n\u4f46\u662f\u5982\u679c\u9047\u5230\u4e0a\u56fe\u7684\u60c5\u51b5\uff0c\u5148\u52a0\u5165\u8fb9 $b$ \u518d\u52a0\u5165\u8fb9 $a$ \u7684\u8bdd\uff0c\u7531\u4e8e\u5f00\u59cb\u65f6 $U_b$ \u4e0d\u5728\u8d77\u70b9\u53ef\u8fbe\u7684\u8303\u56f4\uff0c$V_b$ \u7684\u5b50\u6811\u4e0d\u4f1a\u7b97\u8fdb\u53bb\u3002\u8fd9\u4e2a\u597d\u529e\uff0c\u4f60\u628a\u4e24\u6761\u8fb9\u6765\u56de\u591a\u52a0\u5165\u51e0\u6b21\u3002\u53cd\u6b63\u53ea\u6709\u4e24\u6761\u8fb9\uff0c\u505a\u6cd5\u591a\u66b4\u529b\u90fd\u8fc7\u5f97\u53bb\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\log n+q\\cdot 9)\\sim O(n\\log n+q\\log n\\cdot 27)$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>//JZM yyds!!\n#define ll long long\n#define MAXN 300005\n#define uns unsigned\nusing namespace std;\ninline ll read(){\n\tll x=0;bool f=1;char s=getchar();\n\twhile((s<'0'||s>'9')&&s>0){if(s=='-')f^=1;s=getchar();}\n\twhile(s>='0'&&s<='9')x=(x<<1)+(x<<3)+s-'0',s=getchar();\n\treturn f?x:-x;\n}\nint n,m,Q,k;\nint u1,v1,u2,v2;\nvector<int>G[MAXN],G_[MAXN],G__[MAXN];\n\nint dfn[MAXN],NN,low[MAXN],bl[MAXN];\nbool ist[MAXN];\nstack<int>st;\nint du[MAXN],num,siz[MAXN];\n\nint fa[MAXN],f[MAXN][25],hd[MAXN],tl[MAXN],dp[MAXN],dep[MAXN],IN;\n\ninline void tarjan(int x){\n\tlow[x]=dfn[x]=++NN,st.push(x),ist[x]=1;\n\tfor(uns i=0;i<G__[x].size();i++){\n\t\tint v=G__[x][i];\n\t\tif(!dfn[v])tarjan(v),low[x]=min(low[x],low[v]);\n\t\telse if(ist[v])low[x]=min(low[x],dfn[v]);\n\t}\n\tif(low[x]==dfn[x]){num++;\n\t\twhile(!st.empty()&&dfn[st.top()]>=dfn[x])\n\t\t\tbl[st.top()]=num,ist[st.top()]=0,st.pop();\n\t}\n}\nqueue<int>q;\nint root;\ninline void topu(){\n\tfor(int i=1;i<=num;i++)if(!du[i])q.push(i),root=i;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(uns i=0;i<G_[u].size();i++){\n\t\t\tint v=G_[u][i];du[v]--;\n\t\t\tif(!du[v])\n\t\t\t\tG[u].push_back(v),fa[v]=u,q.push(v);\n\t\t}\n\t}\n}\ninline void dfs(int x){\n\thd[x]=++IN,f[x][0]=fa[x];\n\tdp[x]=dp[fa[x]]+siz[x],dep[x]=dep[fa[x]]+1;\n\tfor(int i=1;i<20;i++)f[x][i]=f[f[x][i-1]][i-1];\n\tfor(uns i=0;i<G[x].size();i++)dfs(G[x][i]);\n\ttl[x]=IN;\n}\ninline int lca(int u,int v){\n\tif(dep[u]<dep[v])swap(u,v);\n\tfor(int i=19;i>=0;i--)if(dep[f[u][i]]>=dep[v])u=f[u][i];\n\tif(u!=v){\n\t\tfor(int i=19;i>=0;i--)\n\t\t\tif(f[u][i]!=f[v][i])u=f[u][i],v=f[v][i];\n\t\tu=fa[u];\n\t}\n\treturn u;\n}\nvector<int>a,b;\ninline void addedge(int u,int v){\n\tbool ok=0;\n\tfor(uns i=0;i<a.size();i++)\n\t\tif(hd[u]>=hd[a[i]]&&hd[u]<=tl[a[i]])ok=1;\n\tif(ok){\n\t\tint h=0;\n\t\tfor(uns i=0;i<a.size()&&h>=0;i++){\n\t\t\tif(hd[v]>=hd[a[i]]&&hd[v]<=tl[a[i]])h=-1;\n\t\t\tif(h>=0&&hd[a[i]]>hd[v]&&hd[a[i]]<=tl[v])h=1,a[i]=v;\n\t\t}\n\t\tfor(uns i=0;i<a.size();i++){\n\t\t\tbool ok=1;\n\t\t\tfor(uns j=0;j<i;j++)if(a[j]==a[i])ok=0;\n\t\t\tif(!ok)a.erase(a.begin()+i,a.begin()+i+1),i--;\n\t\t}\n\t\tif(h==0)a.push_back(v);\n\t}\n\t\n\tok=0;\n\tfor(uns i=0;i<b.size();i++)\n\t\tif(hd[b[i]]>=hd[v]&&hd[b[i]]<=tl[v])ok=1;\n\tif(ok){\n\t\tint h=0;\n\t\tfor(uns i=0;i<b.size()&&h==0;i++){\n\t\t\tif(hd[b[i]]>=hd[u]&&hd[b[i]]<=tl[u])h=-1;\n\t\t\tif(h==0&&hd[u]>hd[b[i]]&&hd[u]<=tl[b[i]])h=1,b[i]=u;\n\t\t}\n\t\tif(h==0)b.push_back(u);\n\t}\n}\nsigned main()\n{\n// \tfreopen(\"celebration.in\",\"r\",stdin);\n// \tfreopen(\"celebration.out\",\"w\",stdout);\n\tn=read(),m=read(),Q=read(),k=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tG__[u].push_back(v);\n\t}\n\tfor(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n\tfor(int x=1;x<=n;x++){\n\t\tsiz[bl[x]]++;\n\t\tfor(uns i=0;i<G__[x].size();i++){\n\t\t\tint v=G__[x][i];\n\t\t\tif(bl[v]!=bl[x])\n\t\t\t\tG_[bl[x]].push_back(bl[v]),du[bl[v]]++;\n\t\t}\n\t}\n\ttopu(),dfs(root);\n\tfor(int D=1;D<=Q;D++){\n\t\tint s=read(),t=read();\n\t\ta.clear(),b.clear(),u1=v1=u2=v2=0;\n\t\ta.push_back(bl[s]),b.push_back(bl[t]);\n\t\tif(k>0)u1=bl[read()],v1=bl[read()];\n\t\tif(k>1)u2=bl[read()],v2=bl[read()];\n\t\tif(u1==v1)u1=v1=0;\n\t\tif(u2==v2)u2=v2=0;\n\t\tif(u1)addedge(u1,v1);\n\t\tif(u2)addedge(u2,v2);\n\t\tif(u1)addedge(u1,v1);\n\t\tint ans=0;\n\t\tfor(uns i=0;i<a.size();i++){\n\t\t\tfor(uns j=0;j<b.size();j++){\n\t\t\t\tint c=a[i],d=b[j];\n\t\t\t\tif(hd[d]>=hd[c]&&hd[d]<=tl[c]){\n\t\t\t\t\tint lc=fa[c],glc;\n\t\t\t\t\tfor(uns l=0;l<j;l++){\n\t\t\t\t\t\tglc=lca(b[l],d);\n\t\t\t\t\t\tif(dep[glc]>dep[lc])lc=glc;\n\t\t\t\t\t}\n\t\t\t\t\tans+=dp[d]-dp[lc];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1627475845,
        "uid": 404407,
        "name": "OUYE2020",
        "ccfLevel": 10,
        "title": "[NOI2021] \u5e86\u5178  \u9898\u89e3"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff08\u540e\u7eed\u4f9d\u6b21\u4f7f\u7528\u5230\uff09\uff1a\n\n[tarjan\u7f29\u70b9](https://www.luogu.com.cn/problem/B3609)\n\n[\u62d3\u6251\u6392\u5e8f](https://www.luogu.com.cn/problem/P4017)\n\n[tarjan\u7f29\u70b9 + \u62d3\u6251\u6392\u5e8f](https://www.luogu.com.cn/problem/P3387)\n\n[LCA](https://www.luogu.com.cn/problem/P3379)\uff08\u6811\u5256\uff0c\u500d\u589e\u90fd\u53ef\u4ee5\uff09\n\n[\u865a\u6811](https://www.luogu.com.cn/problem/P2495)\n\n\u9898\u610f\u63cf\u8ff0\n \n\u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u53ea\u80fd\u8d70\u4e00\u6761\u8def\uff0c\u5c31\u76f8\u5f53\u4e8e\u6709\u4e00\u961f\u961f\u4f0d\uff0c\u8d70\u5230\u7ec8\u70b9\u5c31\u7ed3\u675f\u3002\u7136\u800c\u4ed6\u662f\u6240\u6709\u80fd\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\u8def\u90fd\u8981\u7b97\u4e0a\u3002\u76f8\u5f53\u4e8e\u5f88\u591a\u961f\u4f0d\u4e00\u8d77\u8d70\uff0c\u7136\u540e\u5c31\u5361\u4e86\u597d\u4e45\uff0c\u66b4\u529b\u4e5f\u5199\u4e0d\u51fa\u4e86\u3002\n\n\u5269\u4e0b\u7684\u9898\u610f\u5c31\u5bb9\u6613\u7406\u89e3\u4e86\u3002\n\n\u5f00\u59cb\u8fdb\u5165\u6b63\u9898\n\n\u56e0\u4e3a\u6bcf\u4e2a\u57ce\u5e02\u53ef\u4ee5\u91cd\u590d\u7684\u8d70\uff0c\u4e00\u770b\u5c31\u9700\u8981\u7f29\u70b9\uff0c\u5c06\u4e92\u76f8\u53ef\u4ee5\u8d70\u5230\u7684\u57ce\u5e02\u7f29\u4e3a\u4e00\u4e2a\u70b9\uff0c\u8bb0\u5f55\u70b9\u6743\u4e3a\u70b9\u96c6\u5185\u57ce\u5e02\u7684\u4e2a\u6570\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u7684\u56fe\u53d8\u4e3a\u4e86\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e48\u4e00\u6bb5\u8bdd\n\n- \u5982\u679c\u4ece $x$ \u53f7\u57ce\u5e02\u51fa\u53d1\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6761\u9053\u8def\u540e\u80fd\u5230\u8fbe $y$ \u53f7\u57ce\u5e02\uff0c\u90a3\u4e48\u6211\u4eec\u79f0 $x$ \u53f7\u57ce\u5e02\u53ef\u5230\u8fbe $y$ \u53f7\u57ce\u5e02\uff0c\u8bb0\u4f5c $x\\Rightarrow y$\u3002C \u56fd\u7684\u9053\u8def\u6709\u4e00\u4e2a\u7279\u70b9\uff1a\u5bf9\u4e8e\u4e09\u5ea7\u57ce\u5e02 $x$\uff0c$y$\uff0c$z$\uff0c\u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u90a3\u4e48\u6709 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\u3002\n\n\u8fd9\u610f\u5473\u8fd9\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u591a\u753b\u51e0\u4e2a\u56fe\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e86\uff0c\u6211\u4eec\u7684\u6709\u5411\u65e0\u73af\u56fe\u56e0\u4e3a\u8fd9\u4e2a\u6027\u8d28\u53ef\u4ee5\u53d8\u6210\u4e00\u68f5\u6811\uff01\n\n\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u8ba9\u961f\u4f0d\u8d70\u8fc7\u7684\u70b9\u5c3d\u53ef\u80fd\u7684\u591a\uff0c\u90a3\u4e48\u5f53\u6709 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$ \u7684\u65f6\u5019\uff0c\u5fc5\u5b9a\u6709 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\uff0c\u90a3\u6211\u4eec\u628a\u56fe\u5b58\u4e3a $x \\Rightarrow y\\Rightarrow z$ \u6216\u8005 $y \\Rightarrow x\\Rightarrow z$ \u4e00\u5b9a\u6bd4\u76f4\u63a5\u5b58 $x\\Rightarrow z$ \u548c $y\\Rightarrow z$ \u4e24\u6761\u8fb9\u66f4\u597d\u3002\u6240\u4ee5\u6bcf\u4e2a\u70b9\u53ea\u53ef\u80fd\u6709\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\uff0c\u800c\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u5c31\u662f\u5220\u8fb9\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\u6700\u540e\u5220\u53bb\u7684\u5165\u5ea6\u5bf9\u5e94\u7684\u70b9\u3002\u518d\u5b58\u4e00\u4e2a\u65b0\u56fe\uff0c\u4e3a\u4e00\u68f5\u6811\u3002\n\n\u6ce8\u610f\u5728\u62d3\u6251\u6392\u5e8f\u7684\u65f6\u5019\u987a\u9053\u5904\u7406\u597d\u4ece\u6839\u7ed3\u70b9\u5230\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ef\u4ee5\u7ecf\u8fc7\u591a\u5c11\u4e2a\u70b9\uff08\u6ce8\u610f\uff1a\u6b64\u65f6\u52a0\u4e0a\u7684\u662f\u7f29\u70b9\u540e\u7684\u70b9\uff0c\u6709\u70b9\u6743\uff09\u3002\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6811\u4e0a\u7684\u524d\u7f00\u548c\u3002\u8fd9\u6837\u50a8\u5b58\u597d\uff0c\u8981\u662f $x$ \u548c $y$ \u7684 $LCA$ \u4e3a $x$\uff0c\u90a3\u4e48 \u4ece $x$ \u5230 $y$ \u5c31\u6700\u591a\u7ecf\u8fc7 $dp[y]-dp[x]+si[x]$ \u4e2a\u70b9\uff0c$si[x]$ \u4e3a $x$ \u7684\u70b9\u6743\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\n\u6709\u4e24\u4e2a\u9009\u62e9\n\n1. \u6211\u53ea\u62ff\u90e8\u5206\u5206 $36$ \u5206\n\n2. \u8fd8\u662f\u5199\u6b63\u89e3\u5427\uff01\n\n\u5982\u679c\u9009\u62e9 1\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u5199 $k=0$ \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u68f5\u6811\u4e86\uff0c\u663e\u7136\u53ef\u4ee5\u77e5\u9053\u4e00\u68f5\u6811\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\u800c\u4e14\u8fd9\u662f\u4e00\u4e2a\u53f6\u5411\u6811\uff0c\u56e0\u6b64\u5f53 $x$ \u53ef\u4ee5\u8d70\u5230 $y$\uff0c\u5fc5\u987b\u6ee1\u8db3 $x$ \u548c $y$ \u7684 $LCA$ \u4e3a $x$\uff0c\u56e0\u6b64\u6211\u4eec\u5148\u5229\u7528\u6211\u4eec\u7684\u5728\u7ebf $LCA$ \u7b97\u6cd5\u5224\u65ad\u4e0a\u8ff0\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u7136\u540e\u5229\u7528\u6811\u4e0a\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u6c42\u51fa\u89e3\u4e86\u3002\u8fd9\u6837 $36$ \u5206\u8f7b\u677e\u5230\u624b\uff01\n\n[36 \u5206\u4ee3\u7801](https://www.luogu.com.cn/paste/tganq0mv)\n \n\n\u7136\u540e\u6211\u4eec\u601d\u8003\u6b63\u89e3\n\n\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u66b4\u529b\u601d\u8def\uff0c\u5206\u522b\u5efa\u7acb\u6b63\u5411\u7684\u56fe\u5bf9\u8d77\u70b9\u8fdb\u884c $bfs$\uff0c\u5efa\u7acb\u53cd\u5411\u56fe\u5bf9\u7ec8\u70b9\u8fdb\u884c $bfs$ \uff0c\uff08\u8bb0\u5f97\u65b0\u52a0\u7684\u8fb9\u4e5f\u8981\u53cd\u5411\u52a0\u8fdb\u53bb\uff01\uff09\uff0c\u8bb0\u5f55\u4ece\u8d77\u70b9\u53ef\u4ee5\u8d70\u5230\u54ea\u4e9b\u70b9\uff0c\u4ece\u7ec8\u70b9\u53ef\u4ee5\u8d70\u5230\u54ea\u4e9b\u70b9\uff0c\u7136\u540e\u7edf\u8ba1\u8d77\u70b9\u7ec8\u70b9\u90fd\u53ef\u4ee5\u8d70\u5230\u7684\u70b9\u5c31\u662f\u7b54\u6848\u3002\n\n\u6ca1\u5199\u8fc7\uff0c\u4e0d\u77e5\u9053\u53ef\u4ee5\u62ff\u591a\u5c11\u66b4\u529b\u5206 qwq\u3002\n\n\u4f46\u662f\u663e\u7136\u4f1a\u8d85\u65f6\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u7279\u6b8a\u70b9\u5f88\u5c11\uff0c\u5176\u5b9e\u6700\u591a\u5c31 $6$ \u4e2a\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u65b0\u52a0\u7684\u8fb9\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5efa\u7acb\u865a\u6811\n\n\u865a\u6811\u7684\u8fb9\u6743\u5c31\u662f\u52a0\u5230\u865a\u6811\u4e24\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u70b9\u6743\uff0c\uff08\u4e0d\u5305\u62ec\u4e24\u70b9\u7684\u70b9\u6743\uff09\u901a\u8fc7\u6811\u4e0a\u524d\u7f00 $dp$ \u53ef\u4ee5\u8f7b\u677e\u5f97\u5230 $dp[y]-dp[x]-si[y]$\u3002\u52a0\u4e0a\u65b0\u52a0\u7684 $k$ \u8fb9\uff0c\u7136\u540e\u8dd1\u4e0a\u9762\u7684\u66b4\u529b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u6e05\u7a7a\u865a\u6811\uff0c\u56e0\u4e3a\u6211\u4eec\u4e24\u6b21 $bfs$ \u90fd\u65e0\u6cd5\u4fdd\u8bc1\u53ef\u4ee5\u904d\u5386\u5230\u865a\u6811\u4e0a\u7684\u6240\u6709\u70b9\uff0c\uff08\u56e0\u4e3a\u8be2\u95ee\u8d77\u70b9\uff0c\u4e0d\u4e00\u5b9a\u662f\u865a\u6811\u7684\u6839\uff09\uff0c\u65e0\u6cd5\u5728 $bfs$ \u7684\u65f6\u5019\u53bb\u6e05\u7a7a\u865a\u6811\uff0c\u800c\u5982\u679c\u8981\u662f\u7528 memeset ,\u76f4\u63a5\u70b8\u88c2 $TLE$ \u3002\u56e0\u6b64\u6211\u4eec\u518d\u5355\u72ec\u5199\u4e00\u4e2a\u6e05\u7a7a\u7684 $dfs$\uff0c\u4ece\u865a\u6811\u7684\u6839\u904d\u5386\uff0c\u4e0d\u8fc7\u6b64\u65f6\u6211\u4eec\u52a0\u5165\u4e86 $k$ \u8fb9\uff0c\u5176\u5b9e\u73b0\u5728\u7684\u56fe\u4e0d\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\uff0c\u56e0\u6b64\u6211\u4eec $dfs$ \u7684\u65f6\u5019\u53ea\u904d\u5386\u5230\u6807\u53f7 $i > k$ \u7684\u8fb9\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u8fb9\u90fd\u662f\u90fd\u662f\u540e\u52a0 $k$ \u8fb9\u3002\u56e0\u4e3a\u6211\u4eec\u5148\u52a0\u7684 $k$ \u8fb9\u3002\n\n\u7136\u540e\u5c31 AC \u4e86\u3002\u8fd8\u662f\u5f88\u5feb\u7684\uff0c\u4e0d\u52a0\u5feb\u8bfb\u4e5f\u5c31 8.5s \u591a\uff0c\u52a0\u4e86\u5feb\u8bfb\u53ef\u4ee5 6.5s \u591a\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MA=300005;\nint n,m,q,k,head[MA],cnt=0,hed[MA],cn=0,hd[MA],co=0,hui[MA],cui=0,hei[MA],cei=0,dui[MA],sie;\nstruct zh{\n\tint x,y;\n}a[MA*2],b[MA*2],c[MA*2],f[MA*2];\nstruct zhh{\n\tint x,y,z;\n}g[MA*2];\nvoid cua(int x,int y){\n\ta[++cnt].x=head[x];a[cnt].y=y;head[x]=cnt;\n}\nvoid cub(int x,int y){\n\tb[++cn].x=hed[x];b[cn].y=y;hed[x]=cn; \n}\nvoid cuc(int x,int y){\n\tc[++co].x=hd[x];c[co].y=y;hd[x]=co;\n}\nvoid cud(int x,int y){\n\tf[++cui].x=hui[x];f[cui].y=y;hui[x]=cui;\n}\nvoid cue(int x,int y,int z){\n\tg[++cei].x=hei[x];g[cei].y=y;g[cei].z=z;hei[x]=cei;\n}\nstruct qwq{\n\tint x,y;\n}e[MA];\nbool pei(qwq x,qwq y){\n\tif(x.y!=y.y){\n\t\treturn x.y<y.y;\n\t}\n}\nint dfn[MA],lo[MA],dei[MA],bia[MA],si[MA],ci=0,ke=0,zu=0;\nbool bol[MA];\nvoid suo(int x){\n\tdfn[x]=lo[x]=++ci;dei[++ke]=x;bol[x]=1;\n\tfor(int i=head[x];i;i=a[i].x){\n\t\tint j=a[i].y;\n\t\tif(dfn[j]==0){\n\t\t\tsuo(j);lo[x]=min(lo[x],lo[j]);\n\t\t}\n\t\telse{\n\t\t\tif(bol[j]==1){\n\t\t\t\tlo[x]=min(lo[x],dfn[j]);\n\t\t\t}\n\t\t}\n\t}\n\tif(dfn[x]==lo[x]){\n\t\t++zu;int wo=0;\n\t\twhile(dei[ke]!=x){\n\t\t\t++wo;int wu=dei[ke];bol[wu]=0;bia[wu]=zu;--ke;\n\t\t}\n\t\tint ki=dei[ke];bol[ki]=0;bia[ki]=zu;--ke;si[zu]=wo+1;\n\t}\n}\nint ru[MA],she[MA];\nqueue<int> p;\nvoid tuo(){\n\tfor(int i=1;i<=zu;i++){\n\t\tif(ru[i]==0){\n\t\t\tsie=i;p.push(i);she[i]=si[i];\n\t\t}\n\t}\n\twhile(p.empty()==0){\n\t\tint x=p.front();p.pop();\n\t\tfor(int i=hed[x];i;i=b[i].x){\n\t\t\tint j=b[i].y;--ru[j];\n\t\t\tif(ru[j]==0){\n\t\t\t\tcuc(x,j);she[j]=she[x]+si[j];p.push(j);\n\t\t\t}\n\t\t}\n\t}\n}\nstruct tre{\n\tint shen,nu,topa,zhong,siz,fa;\n}d[MA];\nvoid dfa(int x,int fa){\n\td[x].fa=fa;d[x].shen=d[fa].shen+1;d[x].siz=1;int maxn=0;\n\tfor(int i=hd[x];i;i=c[i].x){\n\t\tint j=c[i].y;dfa(j,x);\n\t\tif(d[j].siz>maxn){\n\t\t\tmaxn=d[j].siz;d[x].zhong=j;\n\t\t}\n\t\td[x].siz+=d[j].siz;\n\t}\n}\nint kop=0;\nvoid dfb(int x,int topa){\n\td[x].topa=topa;d[x].nu=++kop;\n\tif(d[x].zhong!=0){\n\t\tdfb(d[x].zhong,topa);\n\t\tfor(int i=hd[x];i;i=c[i].x){\n\t\t\tint j=c[i].y;\n\t\t\tif(j!=d[x].zhong){\n\t\t\t\tdfb(j,j); \n\t\t\t}\n\t\t}\t\t\n\t}\n}\nint cha(int x,int y){\n\twhile(d[x].topa!=d[y].topa){\n\t\tif(d[d[x].topa].shen<d[d[y].topa].shen){\n\t\t\tswap(x,y);\n\t\t}\n\t\tx=d[d[x].topa].fa;\n\t}\n\tif(d[x].shen>d[y].shen){\n\t\tswap(x,y);\n\t}\n\treturn x;\n}\nbool bda[MA],bba[MA],bdb[MA],bbb[MA];\nvoid bfsa(int x){\n\tqueue<int> qw;qw.push(x);\n\twhile(qw.empty()==0){\n\t\tint ding=qw.front();qw.pop();bda[ding]=1;\n\t\tfor(int i=hui[ding];i;i=f[i].x){\n\t\t\tint j=f[i].y;bba[i]=1;\n\t\t\tif(bda[j]==0){\n\t\t\t\tbda[j]=1;qw.push(j);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid bfsb(int x){\n\tint ans=0;queue<int> qw;qw.push(x);\n\twhile(qw.empty()==0){\n\t\tint ding=qw.front();qw.pop();\n\t\tif(bda[ding]==1){\n\t\t\tans+=si[ding];bda[ding]=0;\n\t\t}\n\t\tbdb[ding]=1;\n\t\tfor(int i=hei[ding];i;i=g[i].x){\n\t\t\tint j=g[i].y;bbb[i]=1;\n\t\t\tif(bba[i]==1){\n\t\t\t\tans+=g[i].z;bba[i]=0;\n\t\t\t}\n\t\t\tif(bdb[j]==0){\n\t\t\t\tbdb[j]=1;qw.push(j);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint pan1=0,pan2=0;\nvoid qing(int x){\n\tfor(int i=hui[x];i;i=f[i].x){\n\t\tbba[i]=0;bbb[i]=0;int j=f[i].y;\n\t\tif(i>k){\n\t\t\tqing(j);\n\t\t}\n\t}\n\thui[x]=hei[x]=bol[x]=bda[x]=bdb[x]=0;\n}\nvoid kk(){\n\tcui=cei=pan1=pan2=0;int s,t,le=0;scanf(\"%d%d\",&s,&t);s=bia[s];t=bia[t];\n\te[++le].x=s;e[le].y=d[s].nu;bol[s]=1;\n\tif(bol[t]==0){\n\t\te[++le].x=t;e[le].y=d[t].nu;bol[t]=1;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);x=bia[x];y=bia[y];\n\t\tif(bol[x]==0){\n\t\t\te[++le].x=x;e[le].y=d[x].nu;bol[x]=1;\n\t\t}\n\t\tif(bol[y]==0){\n\t\t\te[++le].x=y;e[le].y=d[y].nu;bol[y]=1;\n\t\t}\n\t\tcud(x,y);cue(y,x,0);\n\t}\n\tsort(e+1,e+1+le,pei);int top=1;dui[1]=e[1].x;\n\tfor(int i=2;i<=le;i++){\n\t\tint xian=e[i].x;int gon=cha(xian,dui[top]);\n\t\twhile(1){\n\t\t\tif(d[gon].shen>=d[dui[top-1]].shen){\n\t\t\t\tif(gon!=dui[top]){\n\t\t\t\t\tcud(gon,dui[top]);\n\t\t\t\t\tcue(dui[top],gon,she[dui[top]]-she[gon]-si[dui[top]]);\n\t\t\t\t\tif(gon!=dui[top-1]){\n\t\t\t\t\t\tdui[top]=gon;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t--top;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcud(dui[top-1],dui[top]);\n\t\t\t\tcue(dui[top],dui[top-1],she[dui[top]]-she[dui[top-1]]-si[dui[top]]);\n\t\t\t\t--top;\n\t\t\t}\n\t\t}\n\t\tdui[++top]=xian;\n\t}\n\twhile(--top){\n\t\tcud(dui[top],dui[top+1]);\n\t\tcue(dui[top+1],dui[top],she[dui[top+1]]-she[dui[top]]-si[dui[top+1]]);\n\t}\n\tbfsa(s);bfsb(t);qing(dui[1]);\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&q,&k);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);cua(x,y);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(dfn[i]==0){\n\t\t\tsuo(i); \n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint hu=bia[i];\n\t\tfor(int j=head[i];j;j=a[j].x){\n\t\t\tint hy=bia[a[j].y];\n\t\t\tif(hu!=hy){\n\t\t\t\tcub(hu,hy);++ru[hy];\n\t\t\t}\n\t\t}\n\t}\n\ttuo();dfa(sie,0);dfb(sie,sie);\n\tfor(int i=1;i<=q;i++){\n\t\tif(k==0){\n\t\t\tint s,t;scanf(\"%d%d\",&s,&t);\n\t\t\tint he=bia[s],ha=bia[t];int oo=cha(he,ha);\n\t\t\tif(oo==he){\n\t\t\t\tif(oo==he){\n\t\t\t\t\tprintf(\"%d\\n\",she[ha]-she[he]+si[he]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\t\t\t\n\t\t}\n\t\telse{\n\t\t\tkk();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1655215210,
        "uid": 393748,
        "name": "JoyJoyGang",
        "ccfLevel": 0,
        "title": "P7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "\u6ce8\uff1a\u672c\u9898\u4e3a NOI2021 D1T3\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\uff0c\u672c\u9898\u53ea\u8003\u8651\u53ef\u8fbe\u5173\u7cfb\uff0c\u56e0\u6b64\u6beb\u4e0d\u72b9\u8c6b\u5730\u7f29\u70b9+\u62d3\u6251\u6392\u5e8f\u3002\n\n\u8bb0\u6240\u5f97\u56fe\u4e3a $G$\uff0c\u663e\u7136 $G$ \u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n\u7136\u540e\u8003\u8651\u9898\u76ee\u6761\u4ef6\uff1a\n\n1. \u5c06 C \u56fd\u539f\u6709\u7684\u6709\u5411\u9053\u8def\u89c6\u4e3a\u65e0\u5411\u9053\u8def\u540e\uff0c\u6240\u6709\u57ce\u5e02\u53ef\u4ee5\u4e92\u8fbe\u3002\n2. \u82e5 $x \\Rightarrow z$ \u4e14 $y \\Rightarrow z$\uff0c\u5219 $x \\Rightarrow y$ \u6216 $y \\Rightarrow x$\u3002\n\n\u53ef\u77e5\uff1a**$G$ \u4e2d\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u5b83\u80fd\u5230\u8fbe\u5176\u5b83\u6240\u6709\u70b9\uff0c\u5373 $G$ \u5f62\u6210\u4e00\u68f5\u5916\u5411\u6811**\u3002\n\n------------\n\n### \u8bc1\u660e\n\n\u53d6 $G$ \u4e2d\u5165\u5ea6\u4e3a $0$ \u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a $root$\u3002\n\n\u7531\u6761\u4ef6 1 \u77e5\uff0c\u5bf9\u4e8e\u4e0d\u540c\u4e8e $root$ \u7684\u4efb\u610f\u4e00\u4e2a\u70b9 $x$\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a\n\n1. $root \\Rightarrow x$\n1. $x \\Rightarrow root$\n1. \u5b58\u5728\u70b9 $y$ \u6ee1\u8db3 $x \\Rightarrow y$ \u4e14 $root \\Rightarrow y$\u3002\n1. \u5b58\u5728\u70b9 $y$ \u6ee1\u8db3 $y \\Rightarrow x$ \u4e14 $y \\Rightarrow root$\u3002\n\n\u7531\u4e8e $root$ \u5165\u5ea6\u4e3a $0$\uff0c\u7b2c 2,4 \u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u51fa\u73b0\u3002\n\n\u5bf9\u4e8e\u7b2c 3 \u79cd\u60c5\u51b5\uff0c\u7531\u6761\u4ef6 2 \u77e5 $x \\Rightarrow root$ \u6216 $root \\Rightarrow x$\u3002\n\n\u56e0\u6b64\u4e00\u5b9a\u6709 $root \\Rightarrow x$\uff0c\u5373 $root$ \u80fd\u5230\u8fbe\u5176\u5b83\u6240\u6709\u70b9\u3002\n\n------------\n\n\uff08\u4e0b\u6587\u4e0d\u518d\u8ba8\u8bba\u539f\u56fe\uff0c\u53ea\u8ba8\u8bba\u6240\u5f97\u7684\u5916\u5411\u6811\uff09\n\n\u518d\u8003\u8651\u9898\u76ee\u6240\u6c42\uff1a\u989d\u5916\u52a0\u5165 $k$ \u6761\u6709\u5411\u8fb9\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u70b9 $x$\uff0c\u6ee1\u8db3 $s \\Rightarrow x$ \u4e14 $x \\Rightarrow t$\u3002\n\n\u8bbe $S=\\{x|s\\Rightarrow x\\}$\uff0c$T=\\{x|x\\Rightarrow t\\}$\uff0c\u95ee\u9898\u5373\u6c42 $|S \\cap T|$\u3002\n\n\u8bb0 $x$ \u7684\u5b50\u6811\u4e2d\u70b9\u7ec4\u6210\u7684\u96c6\u5408\u4e3a $Sub_x$\uff0c$x$ \u5230\u6839\u8def\u5f84\u4e0a\u70b9\u7ec4\u6210\u7684\u96c6\u5408\u4e3a $R_x$\u3002\n\n\u5bf9\u4e8e $k=0$\uff0c\u6709 $S=Sub_s$\uff0c$T=R_t$\u3002\n\n\u8003\u8651\u65b0\u52a0\u5165\u4e00\u6761\u8fb9 $a \\to b$\uff1a\n\n- \u82e5 $a \\in S$\uff0c\u5219\u4ee4 $S \\leftarrow S \\cup Sub_b$\u3002\n- \u82e5 $b \\in T$\uff0c\u5219\u4ee4 $T \\leftarrow T \\cup R_a$\u3002\n\n\u6ce8\u610f\uff1a**\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a\u8fb9\u7684\u987a\u5e8f\uff0c\u9700\u8981 $O(k^2)$ \u5c1d\u8bd5\u52a0\u5165\u6bcf\u6761\u8fb9\u3002**\n\n------------\n\n\u90a3\u4e48\u5982\u4f55\u8bb0\u5f55 $S,T$ \u5e76\u6c42\u89e3 $|S \\cap T|$ \u5462\uff1f\n\n**$S$ \u548c $T$ \u5176\u4e2d\u4e00\u4e2a\u5728\u6811\u5256\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\uff0c\u53e6\u4e00\u4e2a\u7528\u6570\u7ec4\u8bb0\u5f55\u70b9\u7f16\u53f7\uff0c\u5728\u6811\u5256\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u5373\u53ef\u3002**\n\n\u5f53\u7136\u9700\u8981**\u5904\u7406\u91cd\u590d\u8ba1\u7b97**\u7684\u95ee\u9898\uff0c\u5904\u7406\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a\n\n1. \uff08\u9002\u7528\u4e8e $S$ \u5728\u6811\u5256\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\uff09\u5904\u7406\u5230\u6839\u8def\u5f84\u7684\u5e76\u96c6\uff1a\u8bb0 $T$ \u4e2d\u70b9\u6309\u6811\u5256\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4f9d\u6b21\u4e3a $T_1,T_2,\\cdots,T_{|T|}$\uff0c\u5219\u7b54\u6848\u4e3a $\\sum_{i=1}^{|T|}R_{T_i}-\\sum_{i=1}^{|T|-1}R_{\\operatorname{LCA}(T_i,T_{i+1})}$\u3002\n2. \uff08\u9002\u7528\u4e8e $T$ \u5728\u6811\u5256\u7ebf\u6bb5\u6811\u4e0a\u6253\u6807\u8bb0\uff09\u5904\u7406\u5b50\u6811\u7684\u5e76\u96c6\uff1a\u8bb0 $S$ \u4e2d\u70b9\u7684\u5b50\u6811\u7684\u6811\u5256\u5e8f\u533a\u95f4\uff0c\u6309\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u5de6\u7aef\u70b9\u5347\u5e8f\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u53f3\u7aef\u70b9\u964d\u5e8f\u6392\u5e8f\uff0c\u4f9d\u6b21\u4e3a $[l_1,r_1],[l_2,r_2],\\cdots,[l_{|S|},r_{|S|}]$\u3002\u7531\u4e8e\u4efb\u610f\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u8981\u4e48\u662f\u5305\u542b\u5173\u7cfb\uff0c\u8981\u4e48\u4ea4\u96c6\u4e3a\u7a7a\uff0c\u56e0\u6b64\u7b54\u6848\u4e3a $\\sum_{i=1}^{|S|}[i=1 \\lor l_i>r_{i-1}]Sub_i$\u3002\n3. \uff08\u4e24\u8005\u90fd\u9002\u7528\uff09\u6bcf\u6b21\u67e5\u8be2\u540e\u5c06\u6240\u67e5\u8be2\u533a\u95f4\u8d4b\u503c\u4e3a $0$\u3002\n\n\u4e09\u79cd\u65b9\u5f0f**\u65f6\u95f4\u590d\u6742\u5ea6**\u5747\u4e3a $O(m+(k^3+k^2\\log{n}+k\\log^2{n})q)$\u3002\n\n## \u4ee3\u7801\n\nP.S. \n\n1. \u672c\u9898\u8bfb\u5165\u91cf\u662f\u771f\u7684\u5927\uff0c\u5f3a\u70c8\u5efa\u8bae\u52a0 fread/fwrite\u3002\n2. \u7531\u4e8e\u4ee3\u7801\u5de8\u957f\uff0c\u6240\u4ee5\u90fd\u4e22\u5728\u526a\u8d34\u677f\u91cc\u4e86\u3002\n3. \u4e3a\u4e86\u8ba9\u8bfb\u8005\u611f\u53d7\u4e09\u79cd\u5904\u7406\u65b9\u5f0f\u7684\u6548\u7387\u5dee\u5f02\uff0c\u8fd8\u9644\u4e0a\u4e86\u5bf9\u5e94\u7684\u63d0\u4ea4\u8bb0\u5f55\u3002\n4. \u8bf7\u6ce8\u610f\uff1a**\u5728\u7b2c\u4e09\u79cd\u5904\u7406\u65b9\u5f0f\u4e2d\uff0c12~14 \u53ca 20~25 \u8fd9 9 \u4e2a\u6d4b\u8bd5\u70b9\u7528\u65f6\u5747\u8d85\u8fc7\u4e86 1s\uff0c\u5373\u4e0d\u4fdd\u8bc1\u7b2c\u4e09\u79cd\u5904\u7406\u65b9\u5f0f\u80fd\u5728\u539f\u9898 1s \u7684\u65f6\u9650\u4e0b\u901a\u8fc7\u3002**\n\n[\u7b2c\u4e00\u79cd\uff1a\u5904\u7406\u5230\u6839\u8def\u5f84\u7684\u5e76\u96c6](https://www.luogu.com.cn/paste/n14ln4pb)\n\n[\u7b2c\u4e8c\u79cd\uff1a\u5904\u7406\u5b50\u6811\u7684\u5e76\u96c6](https://www.luogu.com.cn/paste/mnd4vzws)\n\n[\u7b2c\u4e09\u79cd\uff1a\u6bcf\u6b21\u67e5\u8be2\u540e\u5c06\u6240\u67e5\u8be2\u533a\u95f4\u8d4b\u503c\u4e3a $0$](https://www.luogu.com.cn/paste/o9664fr0)",
        "postTime": 1627656644,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011\u6d1b\u8c37 P7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u8003\u8651\u8fde\u901a\u6027\uff0c\u8fd8\u662f\u6709\u5411\u56fe\uff0c\u6240\u4ee5\u5148\u7f29\u70b9\u3002\n\n\u7f29\u5b8c\u70b9\u4e4b\u540e\uff0c\u6839\u636e\u56fe\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5220\u53bb\u4e0d\u5f71\u54cd\u8fde\u901a\u6027\u7684\u8fb9\u5220\u9664\uff0c\u5177\u4f53\u7684\uff0c\u6bcf\u4e00\u4e2a\u70b9\u53ea\u4fdd\u7559\u62d3\u6251\u5e8f\u6700\u9760\u540e\u7684\u5165\u8fb9\uff0c\u4e8e\u662f\u8fd9\u6837\u5c31\u5c06\u539f\u56fe\u53d8\u6210\u4e86\u4e00\u68f5\u6811\u3002\n\n\u6811\u5256\u4e4b\u540e\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u627e\u5230\u67d0\u4e00\u4e2a\u70b9\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u70b9\u7684\u7956\u5148\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5927\u80c6\u5730\u66b4\u641c\uff0c\u627e\u5230\u6bcf\u4e00\u6761\u7b26\u5408\u8981\u6c42\u7684\u8def\u5f84\uff0c\u5bf9\u8def\u5f84\u8fdb\u884c\u8986\u76d6\uff1a\n1. \u5c06\u6709\u5173\u70b9\u80fd\u5426\u5230\u8fbe\u7ec8\u70b9\u7684\u4fe1\u606f\u6c42\u51fa\u6765\uff0c\u53ef\u4ee5\u4ece\u7ec8\u70b9\u53cd\u5411\u5e7f\u641c\uff1b\n2. \u4ece\u8d77\u70b9\u51fa\u53d1\u5e7f\u641c\uff0c\u4e00\u6761\u8def\u5f84\u88ab\u4f7f\u7528\u9700\u8981\u8981\u6c42\u5b83\u7684\u7ec8\u70b9\u53ef\u4ee5\u5230\u8fbe\u8def\u7a0b \u7684\u7ec8\u70b9\u3002\n\n\u8def\u5f84\u8986\u76d6\u53ef\u4ee5\u4f7f\u7528\u73c2\u6735\u8389\u6811\uff0c\u603b\u590d\u6742\u5ea6 $O(qk^2\\log_2n\\log_2\\log_2n)$\uff0c\u5e76\u6ca1\u6709\u865a\u6811\u90a3\u6837\u4f18\u79c0\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ST static\n#define STL ST inline\nconst int N=3e5+5;\nSTL char gc(){\n    ST char buf[N+5];ST int it,ed;\n    return (it==ed&&(ed=(it=0)+fread(buf,1,N,stdin),it==ed))?EOF:buf[it++];\n}\ntemplate<typename _T_p>\nSTL void read(_T_p &x){\n    bool f=0;char c=gc();\n    while(c<48){if(c=='-')f=!f;c=gc();}\n    for(x=0;c>47;x=x*10+(48^c),c=gc());\n    if(f)x=-x;\n}\nnamespace celebration{\n    int n,m,Q,k,dfn[N],low[N],inc[N],dlt,f[N];\n    int scc,sg[N],stk[N],t,sf[N],sct[N],ans;\n    vector<int>lk[N],eg[N];\n    void tarjan(int x){\n        dfn[x]=low[x]=++dlt,stk[++t]=x;\n        for(int y:lk[x])\n            if(dfn[y]){\n                if(!inc[y]&&dfn[y]<low[x])low[x]=dfn[y];\n            }else{\n                tarjan(y);if(low[y]<low[x])low[x]=low[y];\n            }\n        if(dfn[x]==low[x]){\n            ++scc;do inc[stk[t]]=scc,++sct[scc];\n                while(stk[t--]!=x);\n        }return;\n    }\n#define g(x) dfn[x]\n#define t(x) stk[x]\n#define s(x) sg[x]\n#define h(x) low[x]\n    void dfs1(int x=scc){\n        s(x)=1,h(x)=0;\n        for(int y:lk[x]){\n            f[y]=x,dfs1(y),s(x)+=s(y);\n            if(s(y)>s(h(x)))h(x)=y;\n        }\n    }\n    void dfs2(int x=scc){\n        g(x)=++dlt;\n        if(h(x)){\n            t(h(x))=t(x),dfs2(h(x));\n            for(int y:lk[x])\n                if(y!=h(x))\n                    t(y)=y,dfs2(y);\n        }\n    }\n    STL bool In(int x,int y){\n        return g(x)>=g(y)&&g(x)<g(y)+s(y);\n    }\n    struct ODT{\n        int l,r;mutable int d;\n        inline bool operator<(const ODT &z)\n        const{return l<z.l;}\n    };\n    set<ODT>st;\n    set<ODT>::iterator it,L,R;\n    inline void del(){\n        st.clear(),st.insert({1,scc,0});\n    }\n    inline set<ODT>::iterator split(int x){\n        if(x>scc)return st.end();\n        it=st.lower_bound({x});\n        if(it!=st.end()&&it->l==x)return it;\n        --it;int l=it->l,r=it->r,d=it->d;\n        st.erase(it);st.insert({l,x-1,d});\n        return st.insert({x,r,d}).first;\n    }\n    inline void mak(int l,int r){\n        R=split(r+1),L=split(l);\n        st.erase(L,R),st.insert({l,r,1});\n    }\n    inline void cg(int x,int y){\n        while(t(y)!=t(x))\n            mak(g(t(y)),g(y)),y=f[t(y)];\n        mak(g(x),g(y));\n    }\n    vector<int>tmp;\n    inline void sol(int x){\n        int i;for(i=1;i<x;i+=2)\n            if(!In(tmp[i],tmp[i-1]))return;\n        for(i=1;i<x;i+=2)cg(tmp[i-1],tmp[i]);\n    }\n    bitset<5>cn,vs;\n    int q[50],l,r;\n    int main(){\n        read(n),read(m),read(Q),read(k);\n        int i,x,y,u1,v1,u2,v2,p;\n        for(i=1;i<=m;++i){\n            read(x),read(y);\n            lk[x].push_back(y);\n        }\n        for(x=1;x<=n;++x)\n            if(!dfn[x])tarjan(x);\n        for(x=1;x<=n;++x){\n            for(int y:lk[x])\n                if(inc[y]<inc[x])\n                    eg[inc[x]].push_back(inc[y]),++sg[inc[y]];\n            lk[x].clear();\n        }\n        for(x=scc;x;--x)\n            for(int y:eg[x])\n                if(!--sg[y])lk[x].push_back(y);\n        dlt=0,dfs1(),t(scc)=scc,dfs2();\n        for(x=1;x<=scc;++x)\n            sf[g(x)]=sct[x];\n        for(x=2;x<=scc;++x)sf[x]+=sf[x-1];\n        while(Q--){\n            read(x),read(y),del();\n            x=inc[x],y=inc[y],u1=v1=u2=v2=1;\n            if(k){\n                read(u1),read(v1),u1=inc[u1],v1=inc[v1];\n                if(k==2)read(u2),read(v2),u2=inc[u2],v2=inc[v2];\n            }\n            q[l=r=1]=2,cn.reset(),cn[2]=1;\n            while(l<=r){\n                p=q[l++];\n                switch(p){\n                    case 1:if(!cn[3]&&In(x,v1))cn[q[++r]=3]=1;\n                        if(!cn[4]&&In(x,v2))cn[q[++r]=4]=1;break;\n                    case 2:if(In(y,x))cn[q[++r]=1]=1;\n                        if(In(y,v1))cn[q[++r]=3]=1;\n                        if(In(y,v2))cn[q[++r]=4]=1;break;\n                    case 3:if(!cn[1]&&In(u1,x))cn[q[++r]=1]=1;\n                        if(!cn[4]&&In(u1,v2))cn[q[++r]=4]=1;break;\n                    case 4:if(!cn[1]&&In(u2,x))cn[q[++r]=1]=1;\n                        if(!cn[3]&&In(u2,v1))cn[q[++r]=3]=1;\n                    default:break;\n                }\n            }q[l=r=1]=1,vs.reset();\n            while(l<=r){\n                if(vs[p=q[l++]])continue;\n                else vs[p]=1;\n                switch(p){\n                    case 1:if(cn[3]&&In(u1,x))q[++r]=3,cg(x,u1);\n                        if(cn[4]&&In(u2,x))q[++r]=4,cg(x,u2);\n                        if(cn[2]&&In(y,x))cg(x,y),q[++r]=2;break;\n                    case 2:if(cn[3]&&In(u1,y))q[++r]=3,cg(y,u1);\n                        if(cn[4]&&In(u2,y))q[++r]=4,cg(y,u2);\n                        if(cn[1]&&In(x,y))cg(y,x),q[++r]=1;break;\n                    case 3:if(cn[1]&&In(x,v1))q[++r]=1,cg(v1,x);\n                        if(cn[2]&&In(y,v1))q[++r]=2,cg(v1,y);\n                        if(cn[4]&&In(u2,v1))q[++r]=4,cg(v1,u2);break;\n                    case 4:if(cn[1]&&In(x,v2))q[++r]=1,cg(v2,x);\n                        if(cn[2]&&In(y,v2))q[++r]=2,cg(v2,y);\n                        if(cn[3]&&In(u1,v2))q[++r]=3,cg(v2,u1);\n                    default:break;\n                }\n            }ans=0;\n            for(ODT it:st)\n                if(it.d)ans+=sf[it.r]-sf[it.l-1];\n            printf(\"%d\\n\",ans);\n        }\n        return 0;\n    }\n}\nint main(){\n    return celebration::main();\n}\n```",
        "postTime": 1649057779,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u7f29\u70b9-\u6811\u5256-ODT"
    },
    {
        "content": "## \u9898\u610f\n\u80fd\u51fa $\\rm NOI$ \u7684\u795e\u4ed9\u9898\u610f\u8bb2\u5f97\u80af\u5b9a\u6bd4\u849f\u84bb\u597d\uff0c\u5c31\u4e0d\u81ea\u53d6\u5176\u8fb1\u4e86\n## \u9898\u89e3\n\u5c0f\u849f\u84bb\u505a\u8fd9\u9053\u9898\u573a\u4e0a\u53ea\u4f1a $1\\sim 14$ \u5dee\u4e00\u70b9\u5c31\u505a\u51fa\u6765\u4e86\uff0c\u679c\u7136\u6280\u4e0d\u5982\u4eba\u3002\n\n### $1\\sim 7$\n\u6709\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\uff0c\u7b97\u51fa $s$ \u80fd\u5230\u7684\u70b9\uff0c\u5728\u53cd\u56fe\u4e0a\u8dd1\u51fa $t$ \u80fd\u5230\u7684\u70b9\uff0c\u4e8e\u662f\u53d6\u4ea4\u96c6\u5c31\u662f\u7b54\u6848\u4e86\u3002$\\mathcal O(nq)$ \u80fd\u8fc7\u3002\n### $8\\sim 9$ \u662f\u4e00\u68f5\u6811\u5e76\u4e14 $k=0$\n\u51b7\u9759\u5206\u6790\u4e00\u4e0b\u4e00\u4e2a\u8282\u70b9\u5165\u5ea6\u4e0d\u53ef\u80fd\u5927\u4e8e $1$\uff0c\u8003\u8651\u82e5 $a\\to u,b\\to u$\uff0c\u6309\u7167\u9898\u610f $a\\Rightarrow b\\lor b\\Rightarrow a$\uff0c\u4f46\u5728\u6811\u4e0a\u5f53\u4e24\u8005\u90fd\u4e0e $u$ \u6709\u8fb9\u65f6\u4e0d\u73c2\u80fd\u5230\u8fbe\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8fd9\u68f5\u6811\u4e00\u5b9a\u662f\u4e00\u68f5\u5916\u5411\u6811\u4e86\u3002\n\n\u4e8e\u662f\u5982\u679c $t$ \u5728 $s$ \u7684\u5b50\u6811\u5185\u8f93\u51fa\u6df1\u5ea6\u5dee\uff0c\u5426\u5219\u5c31\u662f $0$\u3002\n### $10\\sim 14$ \u662f\u4e00\u68f5\u6811\uff0c\u6ca1\u6709\u5176\u4ed6\u9650\u5236\n\u5916\u5411\u6811\u7684\u7ed3\u8bba\u4e0d\u53d8\uff0c\u4f46\u662f\u4f1a\u52a0\u8fb9\u3002\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u60f3\u6cd5\uff0c\u7528\u4e00\u4e2a\u6811\u5256\u53bb\u7ef4\u62a4 $s$ \u73b0\u5728\u80fd\u5230\u90a3\u4e9b\u70b9\uff0c$t$ \u5728\u53cd\u56fe\u4e0a\u80fd\u5230\u90a3\u4e9b\u70b9\u3002\u5bf9\u4e8e $x\\to y$\uff0c\u5982\u679c $s$ \u80fd\u5230 $x$\uff0c\u90a3\u4e48 $y$ \u7684\u5b50\u6811\u4e5f\u80fd\u5230\u8fbe\u3002$t$ \u540c\u7406\uff0c\u662f\u4e00\u6761\u5230\u6839\u7684\u94fe\u3002\n\n\u53ef\u4ee5\u4e0d\u7528\u5206\u7c7b\u8ba8\u8bba\uff0c\u611f\u89c9\u662f\u53ea\u8981\u8dd1 $k$ \u904d\u4e00\u5b9a\u80fd\u628a\u8be5\u5230\u7684\u70b9\u5168\u90e8\u627e\u51fa\u6765\u3002\n\n\u6709\u4e00\u4e2a $\\rm Naive$ \u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u7528\u6811\u5256\u66b4\u529b\u7ef4\u62a4\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u4fee\u6539\u3002\u662f $\\mathcal O(n\\log^2n)$ \u7684\uff0c\u56e0\u4e3a\u8981\u8dd1\u597d\u51e0\u6b21\u5e38\u6570\u5de8\u5927\uff0c\u5728 $\\rm luogu$ \u7684 $\\rm 2s$ \u5bbd\u677e\u7684\u65f6\u9650\u4e0b\u53ea\u80fd\u5f97\u5230 $\\rm 44pts$\u3002\n\n\u6362\u4e00\u79cd\u601d\u8def\uff0c\u4e0d\u9700\u8981\u7528\u7ebf\u6bb5\u6811\uff0c\u56e0\u4e3a\u4fee\u6539\u548c\u67e5\u8be2\u7684\u533a\u95f4\u5176\u5b9e\u4e0d\u591a\uff0c\u4f46\u662f\u6bcf\u4e00\u6b21\u67e5\u8be2\u90fd\u662f $\\mathcal O(\\log n)$ \u7684\uff0c\u611f\u89c9\u8840\u4e8f\u3002\u628a\u533a\u95f4\u4fdd\u5b58\u4e0b\u6765\uff0c\u5f97\u5230\u4e00\u4e9b\u4e0d\u4ea4\u533a\u95f4\uff0c\u7136\u540e\u66b4\u529b\u8ba1\u7b97\u5f97\u5230\u4ea4\u96c6\u3002\n\n\u4e8e\u662f\u5c31\u80fd\u8fc7\u4e86\u3002\u5f97\u5230\u4e86 $\\rm 56pts$\n### $15\\sim 20$ \u6ca1\u6709\u4efb\u4f55\u9650\u5236\n\u73b0\u5728\u6ca1\u6709\u6811\u4e86\uff0c\u8003\u8651\u521a\u624d\u7684\u505a\u6cd5\uff0c\u552f\u4e00\u7684\u4f9d\u8d56\u5c31\u662f\u5165\u5ea6\u552f\u4e00\uff0c\u662f\u4e00\u9897\u5916\u5411\u6811\u3002\u5148\u7f29\u4e00\u6ce2\u70b9\u90a3\u4e48\u80af\u5b9a\u662f $\\rm DAG$\uff0c\u6839\u636e\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u5165\u5ea6 $x\\to u,y\\to u$\uff0c\u5047\u8bbe $x\\Rightarrow y$\uff0c\u90a3\u4e48 $x\\to u$ \u5c31\u88ab $x\\Rightarrow y,y\\to u$ \u6253\u7206\u4e86\uff01\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b8c\u5168\u53ef\u4ee5\u5220\u53bb $x\\to u$ \u800c\u4e0d\u5f71\u54cd\u56fe\u7684\u8fde\u901a\u6027\u3002\n\n\u73b0\u5728\u53ea\u9700\u8981\u80fd\u5224\u65ad\u662f $x\\Rightarrow y$ \u8fd8\u662f $y\\Rightarrow x$ \u5c31\u505a\u5b8c\u4e86\u3002\u56e0\u4e3a\u662f $\\rm DAG$ \u6240\u4ee5\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\uff0c\u6bd4\u4e00\u4e0b\u62d3\u6251\u5e8f\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u4ece\u8c01\u5230\u8c01\u4e86\u3002\n\n\u4e8e\u662f $\\rm NOI2021D1T3$ \u5c31\u88ab\u5b8c\u5168\u653b\u514b\u4e86\uff01\n## \u4ee3\u7801\n\u8dd1\u5f97\u5f88\u6162\u4ec5\u4f9b\u53c2\u8003\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<class T>\nvoid read(T&x){\n\tx=0;char c=getchar();for(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())x=x*10+c-'0';\n}\ntemplate<class T>void write(T x){if(x>=10)write(x/10);putchar(x%10+'0');}\ntemplate<class T>void write(T x,char end){write(x);putchar(end);}\nconst int N=300000+100;\nint n,m,q,k;\nnamespace Tarjan{\n\tvector<int>e[N];bool ins[N];stack<int>s;\n\tint dfn[N],low[N],col[N],sz[N];int cnt,tot;\n\tvoid dfs(int u){\n\t\tdfn[u]=low[u]=++cnt;s.push(u);ins[u]=1;\n\t\tfor(auto v:e[u]){\n\t\t\tif(!dfn[v])dfs(v),low[u]=min(low[u],low[v]);\n\t\t\telse if(ins[v])low[u]=min(low[u],dfn[v]);\n\t\t}\n\t\tif(low[u]==dfn[u]){\n\t\t\ttot++;int tmp=0;\n\t\t\twhile(tmp!=u){\n\t\t\t\ttmp=s.top();s.pop();ins[tmp]=0;\n\t\t\t\tcol[tmp]=tot;sz[tot]++;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint deg[N],dep[N],dfn[N],cnt=1;\nint sz[N],top[N];int fa[N];\nint x[3],y[3];\nset<int>G[N],GG[N];int si[N];\n\nvoid dfs1(int u){\n\tdep[u]=dep[fa[u]]+1;sz[u]=1;si[u]=Tarjan::sz[u];\n\tfor(auto v:G[u])\n\t\tfa[v]=u,dfs1(v),sz[u]+=sz[v],si[u]+=si[v];\n}\nvoid dfs2(int u){\n\tif(!top[u])top[u]=u;\n\tdfn[u]=cnt;cnt+=Tarjan::sz[u];\n\tif(sz[u]==1)return;\n\tpair<int,int>mx={0,0};\n\tfor(auto v:G[u])mx=max(mx,make_pair(sz[v],v));\n\ttop[mx.second]=top[u];\n\tdfs2(mx.second);\n\tfor(auto v:G[u])if(v!=mx.second)dfs2(v);\n}\nint rt;\nvector<pair<int,int>>S,T;vector<int>SP,TP;\nbool in(int x,int y){\n\treturn dfn[y]<=dfn[x]&&dfn[x]<=dfn[y]+si[y]-1;\n}\nvoid upd(int x){\n\twhile(x){\n\t\tT.push_back({dfn[top[x]],dfn[x]+Tarjan::sz[x]-1});\n\t\tx=fa[top[x]];\n\t}\n}\nvoid deal(vector<pair<int,int>>&A){\n\t//\u5bf9A\u53d8\u6210\u4e0d\u4ea4\u533a\u95f4\n\tsort(A.begin(),A.end());\n\tint l=A.front().first,r=A.front().second;\n\tvector<pair<int,int>>res;\n\tfor(int i=1;i<A.size();i++){\n\t\tassert(A[i].first<=A[i].second);\n\t\tif(r<A[i].first){\n\t\t\tres.push_back({l,r});\n\t\t\tl=A[i].first,r=A[i].second;\n\t\t}else if(A[i].second>r)r=A[i].second;\n\t}\n\tres.push_back({l,r});\n\tA=res;\n}\nint rk[N];\nvoid work(){\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;read(x);read(y);\n\t\tTarjan::e[x].push_back(y);\n\t}\n\tfor(int i=1;i<=n;i++)if(!Tarjan::dfn[i])Tarjan::dfs(i);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(auto j:Tarjan::e[i])\n\t\t\tif(Tarjan::col[i]!=Tarjan::col[j])\n\t\t\t\tG[Tarjan::col[i]].insert(Tarjan::col[j]),\n\t\t\t\tGG[Tarjan::col[j]].insert(Tarjan::col[i]);\n\tn=Tarjan::tot;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(auto j:G[i])deg[j]++;\n\tint rt=0;for(int i=1;i<=n;i++)if(!deg[i])rt=i;\n\tqueue<int>Q;Q.push(rt);int now=0;\n\twhile(Q.size()){\n\t\tint u=Q.front();Q.pop();rk[u]=++now;\n\t\tfor(auto v:G[u]){\n\t\t\tdeg[v]--;if(deg[v]==0)Q.push(v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\twhile(GG[i].size()>=2){\n\t\t\tint u=*GG[i].begin();GG[i].erase(GG[i].begin());\n\t\t\tint v=*GG[i].begin();GG[i].erase(GG[i].begin());\n\t\t\tif(rk[u]<rk[v])\n\t\t\t\tGG[i].insert(v),G[u].erase(i);\n\t\t\telse\n\t\t\t\tGG[i].insert(u),G[v].erase(i);\n\t\t}\n\t}\n\tdfs1(rt);\n\tdfs2(rt);\n\twhile(q--){\n\t\tint s,t;read(s);read(t);s=Tarjan::col[s];t=Tarjan::col[t];\n\t\tfor(int i=1;i<=k;i++)read(x[i]),read(y[i]),x[i]=Tarjan::col[x[i]],y[i]=Tarjan::col[y[i]];\n\t\tS.clear();T.clear();SP.clear();TP.clear();\n\t\t\n\t\tS.push_back({dfn[s],dfn[s]+si[s]-1});SP.push_back(s);\n\t\tTP.push_back(t);upd(t);\n\t\t\n\t\tstatic bool flag[10];\n\t\t\n\t\tmemset(flag,0,sizeof flag);\n\t\tfor(int SJYAKNOI=1;SJYAKNOI<=k;SJYAKNOI++){\n\t\t\tfor(int i=1;i<=k;i++){\n\t\t\t\tif(flag[i])continue;\n\t\t\t\tfor(auto A:SP)if(in(x[i],A)){\n\t\t\t\t\tSP.push_back(y[i]),S.push_back({dfn[y[i]],dfn[y[i]]+si[y[i]]-1});\n\t\t\t\t\tflag[i]=1;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(flag,0,sizeof flag);\n\t\tfor(int SJYAKNOI=1;SJYAKNOI<=k;SJYAKNOI++){\n\t\t\tfor(int i=1;i<=k;i++){\n\t\t\t\tif(flag[i])continue;\n\t\t\t\tfor(auto A:TP)if(in(A,y[i])){\n\t\t\t\t\tTP.push_back(x[i]),upd(x[i]);\n\t\t\t\t\tflag[i]=1;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdeal(S);deal(T);\n\t\tint ans=0;\n\t\tfor(auto [l,r]:T)\n\t\t\tfor(auto [ql,qr]:S)\n\t\t\t\tif(r>=ql&&qr>=l)\n\t\t\t\t\tans+=min(r,qr)-max(ql,l)+1;\n\t\twrite(ans,'\\n');\n\t}\n}\nsigned main(){\n\t//freopen(\"celebration.in\",\"r\",stdin);\n\t//freopen(\"celebration.out\",\"w\",stdout);\n\tread(n);read(m);read(q);read(k);\n\twork();\n}\n```",
        "postTime": 1627545508,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7737 \u3010[NOI2021] \u5e86\u5178\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u6709\u70b9\u957f\uff0c\u5c31\u4e0d\u653e\u4e86\u3002\n# \u9898\u89e3\n\u8003\u8651\u7f29\u70b9\uff1a\u6211\u4eec\u79f0 $x=y$\uff0c\u5f53\u4e14\u4ec5\u5f53 $x\\Rightarrow y$ \u4e14 $y\\Rightarrow x$\u3002\n\n\u5bf9\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u6027\u8d28\uff1a\u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u5219 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\u3002  \n\u6211\u4eec\u6709\u4e24\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u9006\u547d\u9898\uff1a\n- \u82e5 $x\\Rightarrow y$ \u4e14 $y\\Rightarrow z$\uff0c\u5219 $x\\Rightarrow z$ \u3002\n- \u82e5 $y\\Rightarrow x$ \u4e14 $x\\Rightarrow z$\uff0c\u5219 $y\\Rightarrow z$ \u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u6027\u8d28\u76f8\u5f53\u4e8e\u4ee5\u4e0a\u4e24\u4e2a\u9006\u547d\u9898\u5fc5\u6ee1\u8db3\u5176\u4e00\u3002  \n\u63a8\u5f97\uff0c\u5bf9\u4e8e\u56fe\u4e0a\u6240\u6709\u70b9 $z$\uff0c\u80fd\u5230\u8fbe $z$ \u7684\u6240\u6709\u70b9\u5fc5\u5b9a\u6309 $\\Rightarrow$ \u5f62\u6210\u4e00\u6761\u94fe\uff0c\u8bb0\u4e3a $l_z$\u3002\n\n\u8003\u8651\u8be5\u94fe\u4e0a\u67d0\u4e2a\u70b9 $x$\uff0c\u5219\u80fd\u5230\u8fbe $x$ \u7684\u6240\u6709\u70b9\u4e5f\u5f62\u6210\u4e00\u6761\u94fe $l_x$\uff0c\u4e14 $l_x$ \u4e3a $l_z$ \u7684\u524d\u7f00\u3002\n\n\u201c\u539f\u6709\u7684\u6709\u5411\u9053\u8def\u89c6\u4e3a\u65e0\u5411\u9053\u8def\u540e\uff0c\u6240\u6709\u57ce\u5e02\u53ef\u4ee5\u4e92\u8fbe\u201d\uff0c\u56e0\u6b64\uff0c  \n\u6240\u6709\u70b9\u5fc5\u5b9a\u4f1a\u6309\u7167 $\\Rightarrow$ \u5f62\u6210**\u4e00\u68f5\u5916\u5411\u6811**\uff0c\u53ef\u4ee5\u7f29\u70b9\u540e\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\uff0c\u5c06\u591a\u4f59\u7684\u8fb9\u526a\u6389\u540e\u6c42\u51fa\u3002\n\n------------------------------------------------\n\u56de\u7b54\u8be2\u95ee\u662f\u672c\u9898\u7684\u7b2c\u4e8c\u4e2a\u96be\u70b9\uff0c\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u4e0d\u4e00\u6837\u7684\u5206\u7c7b\u8ba8\u8bba\u601d\u8def\u3002  \n\n\u8bbe\u70b9 $u$ \u6240\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\u4e3a $\\mathrm{value}_u$\uff0c\u5176\u5b50\u6811\u4e3a $\\mathrm{sub}_u$\u3002\n\n\u8981\u8f93\u51fa\u7684\u662f $s$ \u5230 $t$ \u53ef\u80fd\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\uff0c\u8003\u8651\u627e\u51fa $s$ \u53ef\u4ee5\u5230\u8fbe\u7684\u6240\u6709\u70b9\uff08\u7ec4\u6210\u70b9\u96c6 $\\mathrm{begin}$\uff09\uff0c  \n\u53ca\u6240\u6709\u53ef\u4ee5\u5230\u8fbe $t$ \u7684\u70b9\uff08\u7ec4\u6210\u70b9\u96c6 $\\mathrm{end}$\uff09\uff0c\u5bf9\u4e24\u4e2a\u70b9\u96c6\u53d6\u5e76\u5373\u53ef\u3002\n\n\u82e5 $k=0$\uff0c$\\mathrm{begin}$ \u4e3a $s$ \u7684\u5b50\u6811 $\\mathrm{sub}_s$\uff0c  \n$\\mathrm{end}$ \u4e3a $t$ \u53ca\u5176\u7956\u5148\uff08\u5373\u94fe $l_t$\uff09,\u7b54\u6848\u5373 $\\displaystyle\\sum_{u\\in\\mathrm{sub}_s\\cap l_t}\\mathrm{value}_u$\n\n\u53d6\u5e76\u8fc7\u7a0b\u53ef\u4ee5\u6811\u5256\u89e3\u51b3\uff0c\u5206\u4e3a\u5982\u4e0b\u4e24\u6b65\uff1a\n- \u5bf9 $l_t$ \u4e0a\u6240\u6709\u70b9\u6253\u4e0a\u6807\u8bb0\u3002\n- \u67e5\u8be2\u5b50\u6811 $s$ \u4e0a\u6240\u6709\u6253\u6807\u8bb0\u70b9\u7684\u548c\u3002  \n  \n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5982\u4e0a\u4e24\u4e2a\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u82e5 $k\\not =0$\uff0c\u8003\u8651\u201c\u62d3\u5c55\u201d\u8fd9\u4e24\u4e2a\u70b9\u96c6\uff1a\n- \u5bf9\u4e8e $\\mathrm{end}$\uff0c\u6709\uff1a\n  - \u82e5 $b\\in\\mathrm{end}$\uff0c\u5219 $l_a\\subseteq\\mathrm{end}$ \u3002\n\n  \u6bcf\u6b21\u627e\u51fa\u4e00\u4e2a\u672a\u52a0\u5165\u4e14 $b\\in\\mathrm{end}$ \u7684\u8fb9 $(a,b)$\uff0c\u5bf9 $l_a$ \u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002  \n  $b\\in\\mathrm{end}$ \u5373\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2 $b$ \u662f\u5426\u6709\u6807\u8bb0\u3002\n- \u5bf9\u4e8e $\\mathrm{begin}$\uff0c\u6709\uff1a\n  - \u82e5 $a\\in\\mathrm{begin}$\uff0c\u5219 $\\mathrm{sub}_b\\subseteq\\mathrm{begin}$ \u3002\n    \n  $a\\in\\mathrm{begin}$ \u53ef\u4ee5\u6811\u5256\u540e\u76f4\u63a5 $\\Theta(1)$ \u67e5\u8be2\u3002  \n\n  \u6b64\u5904\u8981\u5904\u7406\u4ea4\u96c6\u7684\u60c5\u51b5\u3002\u4f46\u6211\u4eec\u6709\u5982\u4e0b\u5b9a\u7406\uff1a\n  - \u5bf9\u4e8e\u6811\u4e0a\u4e24\u70b9 $u,v$\uff0c\u8981\u4e48 $\\mathrm{sub}_u\\subseteq\\mathrm{sub}_v$ \u6216 $\\mathrm{sub}_u\\supseteq\\mathrm{sub}_v$\uff0c  \n    \u8981\u4e48 $\\mathrm{sub}_u\\cap\\mathrm{sub}_v=\\varnothing$ \u3002  \n\n  \u56e0\u6b64\u5f85\u67e5\u8be2\u7684\u5fc5\u5b9a\u662f\u82e5\u5e72\u68f5\u5b50\u6811\u3002\u63d2\u5165 $\\mathrm{sub}_b$ \u65f6\uff0c\n  - \u82e5 $\\exist u\\in\\mathrm{begin},\\mathrm{sub}_b\\subseteq\\mathrm{sub}_u$\uff0c\u5219 $b$ \u88ab\u5305\u542b\uff0c\u63d2\u5165\u5931\u8d25\u3002\n  - \u5426\u5219\uff0c\u63d2\u5165\u6210\u529f\uff0c\u62b9\u53bb\u6240\u6709\u88ab $b$ \u5305\u542b\u7684\u5f85\u67e5\u8be2\u5b50\u6811\u3002  \n  \n  \u6700\u540e\u6c42\u51fa\u6bcf\u4e2a\u5b50\u6811\u5185\u7b54\u6848\u7684\u548c\u5373\u53ef\u3002\n\n# Code\n```cpp\n/*\nthis code is made by wangrx\n2021-7-27 13:57\n*/\n#include<stdio.h>\n#include<string.h>\ntypedef unsigned int word;\ntypedef unsigned char byte;\nconst word siz=300005;\nstruct READ{//\u5feb\u8bfb\u5feb\u5199\n    char c,w;\n    inline READ(){c=getchar();}\n    template<typename type>\n    inline READ& operator >>(register type& num){\n        for(w=1;'0'>c||c>'9';c=getchar())\n            w=c=='-'? -1:1;\n        for(num=0;'0'<=c&&c<='9';c=getchar())\n            num=num*10+(c-'0');\n        return num*=w,*this;\n    }\n}cin;\nword n,m,q_,k,step,root;\nword head[siz],tail[siz];\nword to[siz<<1],next[siz<<1];\nword in[siz],fa[siz];\nword value[siz],segid[siz];\nstruct GRAPH{//\u539f\u6765\u7684\u56fe\n\tword dfn[siz],low[siz];\n\tword stack[siz],stacksize;\n\tword tosize[siz];\n\tinline void tarjan(word id){\n\t\tdfn[id]=low[id]=++step;\n\t\tstack[++stacksize]=id;\n\t\tfor(register word i=head[id];i;i=next[i]){\n\t\t\tif(dfn[to[i]]==0){\n\t\t\t\ttarjan(to[i]);\n\t\t\t\tif(low[id]>low[to[i]]) low[id]=low[to[i]];\n\t\t\t}else if(in[to[i]]==0&&low[id]>dfn[to[i]])\n\t\t\t\tlow[id]=dfn[to[i]];\n\t\t}\n\t\tif(dfn[id]==low[id]){\n\t\t\twhile(stack[stacksize]!=id)\n\t\t\t\tin[stack[stacksize--]]=id;\n\t\t\tin[stack[stacksize--]]=id;\n\t\t}\n\t}\n\tinline void connect(){//\u7f29\u70b9\n\t\tfor(register word id=1;id<=n;++value[in[id++]])\n\t\t\tif(in[id]==0) tarjan(id);\n\t\tfor(register word id=1;id<=n;++id)\n\t\t\tif(in[id]!=id){\n\t\t\t\tnext[tail[in[id]]]=head[id];\n\t\t\t\ttail[in[id]]=tail[id];\t\n\t\t\t}\n\t\tfor(register word id=1;id<=n;++id)\n\t\t\tif(in[id]==id) for(register word *i=head+id;*i;){\n\t\t\t\twhile(*i&&id==in[to[*i]]) *i=next[*i];\n\t\t\t\tif(*i) ++tosize[to[*i]=in[to[*i]]],i=next+*i;\n\t\t\t}\n\t}\n\tstruct queue{//\u961f\u5217\n\t\tword list[siz],head,tail;\n\t\tinline void flush(){head=tail=0;}\n\t\tinline void push(word in){\n\t\t\tlist[tail]=in;\n\t\t\tif(++tail==300000) tail=0;\n\t\t}\n\t\tinline void pop(){\n\t\t\tif(++head==300000) head=0;}\n\t\tinline word& top(){return list[head];}\n\t\tinline bool empty(){return head==tail;}\n\t}q;\n\tinline void bfs(){//\u62d3\u6251\u6392\u5e8f\n\t\tfor(register word id=1;id<=n;++id)\n\t\t\tif(in[id]==id&&tosize[id]==0) root=id;\n\t\tfa[root]=0,q.flush(),q.push(root);\n\t\tfor(register word id;!q.empty();){\n\t\t\tid=q.top(),q.pop();\n\t\t\tfor(register word *i=head+id;*i;)\n\t\t\t\tif(--tosize[to[*i]]) *i=next[*i];\n\t\t\t\telse fa[to[*i]]=id,q.push(to[*i]),i=next+*i;\n                //\u4ec5\u4fdd\u7559\u62d3\u6251\u5e8f\u6700\u540e\u7684\u8fb9\n\t\t}\n\t}\n\tinline void operator()(){\n\t\tcin>>n>>m>>q_>>k;\n\t\tfor(register word i=1,from;i<=m;++i){\n\t\t\tcin>>from>>to[i];\n\t\t\tif(head[from]==0) head[from]=i;\n\t\t\telse next[tail[from]]=i;\n\t\t\ttail[from]=i;\n\t\t}\n\t\tconnect(),bfs();\n\t}\n};\ntemplate<word size>\nstruct segment_tree{//\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6811\n\tsegment_tree<(size>>1)> l,r;\n\tword sum,max;\n\tbyte tag;\n\tinline void operator()(word id){//\u521d\u59cb\u5316\n\t\tl(id<<1),r(id<<1|1);\n\t\tsum=0,tag=0xff;\n\t\tmax=l.max+r.max;\n\t}\n\tinline void operator()(word f,word t,byte num){//\u6253\u6807\u8bb0\n\t\tif(sum==max*num) return;\n\t\tif(f==0&&t==(size<<1)-1)\n\t\t\treturn sum=max*num,void(tag=num);\n\t\tif(tag!=0xff){\n\t\t\tl(0,size-1,tag);\n\t\t\tr(0,size-1,tag);\n\t\t\ttag=0xff;\n\t\t}\n\t\tif(f&size) r(f&~size,t&~size,num);\n\t\telse if((t&size)^size) l(f,t,num);\n\t\telse l(f,size-1,num),r(0,t&~size,num);\n\t\tsum=l.sum+r.sum;\n\t}\n\tinline word operator()(word f,word t){//\u67e5\u8be2\n\t\tif(f==0&&t==(size<<1)-1) return sum;\n\t\tif(tag!=0xff){\n\t\t\tl(0,size-1,tag);\n\t\t\tr(0,size-1,tag);\n\t\t\ttag=0xff;\n\t\t}\n\t\tif(f&size) return r(f&~size,t&~size);\n\t\telse if((t&size)^size) return l(f,t);\n\t\treturn l(f,size-1)+r(0,t&~size);\n\t}\n};\ntemplate<>\nstruct segment_tree<0>{//\u7279\u5316\u6700\u5e95\u5c42\u7ed3\u70b9\n\tword sum,max;\n\tinline void operator()(word id){\n\t\tif(1<=id&&id<=step) sum=0,max=value[segid[id]];\n\t\telse sum=max=0;}\n\tinline void operator()(word f,word t,byte num){sum=max*num;}\n\tinline word operator()(word f,word t){return sum;}\n};\nstruct TREE{//\u5916\u5411\u6811\n\tword size[siz],floor[siz];\n\tword son[siz],topid[siz];\n\tword newid[siz];\n\tsegment_tree<(1<<18)> tree;\n\tinline void dfs1(word id){//\u6811\u5256\u6c42\u91cd\u513f\u5b50\n\t\tsize[id]=1,son[id]=0;\n\t\tfor(register word i=head[id];i;i=next[i]){\n\t\t\tfloor[to[i]]=floor[id]+1;\n\t\t\tdfs1(to[i]),size[id]+=size[to[i]];\n\t\t\tif(size[son[id]]<size[to[i]]) son[id]=to[i];\n\t\t}\n\t}\n\tinline void dfs2(word id){//\u6811\u5256\u91cd\u6807\u53f7\n\t\tsegid[newid[id]=++step]=id;\n\t\tif(son[id]) topid[son[id]]=topid[id],dfs2(son[id]);\n\t\tfor(register word i=head[id];i;i=next[i])\n\t\t\tif(to[i]!=son[id]) topid[to[i]]=to[i],dfs2(to[i]);\n\t}\t\n\tinline void operator()(){\n\t\tstep=0,dfs1(root);\n\t\ttopid[root]=root,dfs2(root);\n\t\ttree(0);\n\t}\n#define isin(rt,ch) (newid[rt]<=newid[ch]&&newid[ch]<newid[rt]+size[rt])\n#define ans(rt) tree(newid[rt],newid[rt]+size[rt]-1)\n\tinline void flush(word id){//\u6807\u8bb0\u94fe\n\t\twhile(id){\n\t\t\ttree(newid[topid[id]],newid[id],1);\n\t\t\tid=fa[topid[id]];\n\t\t}\n\t}\n\tword a[2],b[2],use;\n\tword out[3],outsize;\n\tinline bool can(word id){//\u67e5\u8be2\u662f\u5426\u5728 begin \u4e2d\n\t\tfor(register word i=0;i<outsize;++i)\n\t\t\tif(isin(out[i],id)) return 1;\n\t\treturn 0;\n\t}\n\tinline void insert(word id){//\u63d2\u5165\u5b50\u6811\u81f3 begin\n\t\tfor(register word i=0;i<outsize;++i)\n            if(isin(out[i],id)) return;//\u82e5 b \u88ab\u5305\u542b\uff0c\u63d2\u5165\u5931\u8d25\n            else if(isin(id,out[i])) out[i]=0;//\u62b9\u53bb b \u5305\u542b\u7684\u5b50\u6811\n\t\tout[outsize++]=id;\n\t}\n\tinline word operator()(word s,word t){//\u56de\u7b54\u8be2\u95ee\n\t\ts=in[s],flush(t=in[t]),use=0;\n\t\tfor(register word i=0;i<k;++i)\n\t\t\tcin>>a[i]>>b[i],a[i]=in[a[i]],b[i]=in[b[i]];\n\n\t\tfor(register word i=0;i<k;) for(i=0;i<k;++i)\n\t\t\tif(((use>>i&1)^1)&&tree(newid[b[i]],newid[b[i]])){\n\t\t\t\tflush(a[i]),use|=1<<i;break;}\n                //\u5904\u7406 end\n\t\tout[0]=s,outsize=1,use=0;\n\t\tfor(register word i=0;i<k;) for(i=0;i<k;++i)\n\t\t\tif(((use>>i&1)^1)&&can(a[i])){\n\t\t\t\tinsert(b[i]),use|=1<<i;break;}\n                //\u5904\u7406 begin\n\t\tregister word get=0;\n\t\tfor(register word i=0;i<outsize;++i)\n\t\t\tif(out[i]) get+=ans(out[i]);\n\t\treturn tree(1,step,0),get;\n\t}\n};\nunion{\n\tGRAPH graph;\n\tTREE tree;\n}block;\nint main(){\n\tblock.graph();\n\tblock.tree();\n\tfor(word s,t;q_;--q_)\n\t\tcin>>s>>t,printf(\"%u\\n\",block.tree(s,t));\n    return 0;\n}\n```",
        "postTime": 1627360043,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u5f3a\u8fde\u901a\u5206\u91cf](https://oi-wiki.org/graph/scc/)\u3001[\u62d3\u6251\u6392\u5e8f](https://oi-wiki.org/graph/topo/)\u3001[\u865a\u6811](https://oi-wiki.org/graph/virtual-tree/)\n\n\u770b\u5230\u6709\u5411\u56fe\u4e0d\u59a8\u5148\u7f29\u4e2a\u70b9\uff0c\u4e0d\u96be\u53d1\u73b0\u7f29\u70b9\u540e\u7684 DAG \u4ecd\u6ee1\u8db3\u9898\u8ff0\u6761\u4ef6\u3002\u6ce8\u610f\u5230\u539f\u56fe\u662f\u5f31\u8fde\u901a\u56fe\uff0c\u663e\u7136\u7f29\u70b9\u540e\u7684 DAG \u4ecd\u4e3a\u5f31\u8fde\u901a\u56fe\u3002\n\n\u611f\u89c9\u73b0\u5728\u4e0d\u662f\u5f88\u597d\u505a\u4e86\uff0c\u8003\u8651 $m = n - 1$ \u7684\u90e8\u5206\u5206\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5165\u5ea6 $> 1$ \u7684\u70b9 $z$\uff0c\u5047\u8bbe\u6709\u4e24\u6761\u8fb9 $x \\to z, y \\to z$\uff0c\u4e0d\u59a8\u5047\u8bbe $x \\Rightarrow y$\uff0c\u800c\u6b64\u65f6\u539f\u56fe\u4e3a\u4e00\u68f5\u201c\u5f31\u8fde\u901a\u6811\u201d\uff0c\u4e8e\u662f\u663e\u7136\u77db\u76fe\u3002\u56e0\u800c\u6211\u4eec\u6709\u7ed3\u8bba\uff1a**\u5f53\u539f\u56fe\u4e3a\u4e00\u68f5\u201c\u5f31\u8fde\u901a\u6811\u201d\uff0c\u539f\u56fe\u6240\u6709\u8282\u70b9\u7684\u5165\u5ea6 $\\leq 1$\uff0c\u5373\u539f\u56fe\u4e3a\u4e00\u68f5\u6811\u3002**\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u5bb9\u6613\u627e\u51fa\u5176\u6839\u3002\u73b0\u5728\u8003\u8651\u5982\u4f55\u56de\u7b54\u8be2\u95ee\u3002\u6ce8\u610f\u5230 $k$ \u5f88\u5c0f\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u5206\u7c7b\u8ba8\u8bba\u3002\n\n$k = 0$ \u65f6\uff0c\u5f53 $s$ \u4e0d\u4e3a $t$ \u7684\u7956\u5148\uff0c\u7b54\u6848\u4e3a $0$\uff1b\u5426\u5219\uff0c\u7b54\u6848\u4e3a $depth_s - depth_t + 1$\u3002\n\n$k = 1, 2$ \u65f6\uff0c\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff0c\u4f46\u6211 $k = 2$ \u8ba8\u8bba\u6302\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u600e\u4e48\u505a\u3002\n\n\u4e3a\u4e86\u51cf\u5c0f\u8ba8\u8bba\u89c4\u6a21\uff0c\u6211\u4eec\u5c06\u6839\u3001$s, t$ \u548c\u6240\u6709 $u, v$ \u6293\u51fa\u6765\u5f53\u5173\u952e\u70b9\u5efa\u865a\u6811\u3002\u6b64\u65f6\u6811\u7684\u89c4\u6a21\u51cf\u5c0f\u5230\u4e86 $O(k)$\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u62c6\u6389\u865a\u6811\u4e0a\u7684\u6811\u8fb9\uff0c\u5c06 $u \\to v$ \u62c6\u6210 $u \\to w \\to v$\uff0c\u5e76\u7ed9\u539f\u6811\u4e0a\u7684\u70b9\u8d4b\u6743\u4e3a $1$\uff0c\u7ed9\u62c6\u51fa\u6765\u7684\u70b9\u8d4b\u6743\u4e3a $u, v$ \u4e4b\u95f4\uff08\u4e0d\u542b $u, v$\uff09\u7684\u70b9\u6570\uff0c\u56e0\u4e3a\u4e2d\u95f4\u90a3\u4e9b\u70b9\u8981\u4e48\u90fd\u53ef\u4ee5\u8d70\u5230\uff0c\u8981\u4e48\u90fd\u4e0d\u53ef\u4ee5\u8d70\u5230\u3002\n\n\u73b0\u5728\u6211\u4eec\u628a\u90a3 $k$ \u6761\u975e\u6811\u8fb9\u6254\u5230\u865a\u6811\u91cc\uff0c\u95ee\u9898\u8f6c\u53d8\u4e3a\u6c42\u5728\u73b0\u5728\u7684\u56fe\u4e0a\u4ece $s$ \u8d70\u5230 $t$ \u6240\u80fd\u7ecf\u8fc7\u7684\u70b9\u6570\u3002\u8fd9\u53ef\u4ee5\u7f29\u70b9\u540e\u62d3\u6251\u6392\u5e8f\u89e3\u51b3\u3002\n\n\u56de\u5230\u4e00\u822c\u60c5\u51b5\u6765\uff0c\u76f4\u63a5\u5728 DAG \u4e0a\u5904\u7406\u539f\u95ee\u9898\u662f\u56f0\u96be\u7684\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u6811\u7684\u60c5\u51b5\uff0c\u4e0d\u59a8\u8003\u8651\u5c06 DAG \u8f6c\u5316\u4e3a\u4e00\u68f5\u6811\u5e76\u6cbf\u7528\u4e0a\u8ff0\u65b9\u6cd5\u3002\n\n\u4e0d\u59a8\u4eff\u7167\u524d\u6587\u8ba8\u8bba\u3002\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5165\u5ea6 $> 1$ \u7684\u70b9 $z$\uff0c\u5047\u8bbe\u6709\u4e24\u6761\u8fb9 $x \\to z, y \\to z$\uff0c\u4e0d\u59a8\u5047\u8bbe $x \\Rightarrow y$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5**\u8ba4\u4e3a $x \\to z$ \u8fd9\u6761\u8fb9\u662f\u65e0\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u53ea\u4fdd\u7559\u7b2c\u4e8c\u6761\u8fb9\u8fbe\u6210\u8ddf\u4e5f\u4fdd\u7559\u7b2c\u4e00\u6761\u8fb9\u4e00\u6837\u7684\u8fde\u901a\u6027**\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u6389\u4e00\u4e9b\u8fb9\u4f7f\u5f97\u539f\u56fe\u53d8\u6210\u4e00\u68f5\u6811\uff0c\u4ece\u800c\u6cbf\u7528\u524d\u8ff0\u65b9\u6cd5\u3002\n\n\u6839\u636e\u9898\u7ed9\u6761\u4ef6\u53ef\u77e5\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230**\u6070\u597d**\u4e00\u4e2a\u70b9 $R$\uff0c\u4f7f\u5f97\u5176\u5165\u5ea6 $= 1$\u3002\u6211\u4eec\u5148\u4ee5\u5b83\u4e3a\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7684\u6811\u7684\u6839\u3002\n\n\u73b0\u5728\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $z$\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u7559\u54ea\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u662f\u8c01\u3002\n\n\u8003\u8651\u7528\u62d3\u6251\u6392\u5e8f\u5efa\u6811\u3002$\\forall u \\neq R$\uff0c\u4ee4 $fa_u$ \u4e3a\u6240\u6709 $v \\to u$ \u4e2d\u62d3\u6251\u5e8f\u6700\u5927\u7684 $v$\u3002\u663e\u7136\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u4e14\u4e0d\u5b58\u5728\u4e0a\u6587\u63d0\u5230\u7684 $x = u$ \u65f6\u5bf9\u5e94\u7684 $y$\u3002\n\n\u51fa\u4e8e\u5e38\u6570\u539f\u56e0\uff0c\u5efa\u8bae\u4f7f\u7528 $O(1)$ LCA\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n + m + qk \\log k)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <cstdio>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef struct {\n\tint nxt;\n\tint start;\n\tint end;\n\tint dis;\n} Edge;\n\ntypedef struct Node_tag {\n\tint pos;\n\tint dfn;\n\tNode_tag(){}\n\tNode_tag(int pos_, int dfn_){\n\t\tpos = pos_;\n\t\tdfn = dfn_;\n\t}\n} Node;\n\nint cnt1 = 0, cnt2 = 0, cnt3 = 0;\nint u[600007], v[600007], head1[300007], dfn[300007], low[300007], belong1[300007], size1[300017], head2[300007], deg[300007], head3[300007], depth[300007], in[300007], fst[300007], euler[600007], out[300007], fa[300007], sum[300007], _log2[600007], st[600007][27], rnk[300017], size2[27], mark[27], belong2[27];\nbool vis1[300007], vis2[300007], vis3[300007], vis4[27];\nEdge edge1[600007], edge2[600007], edge3[300007];\nNode a[27];\nstack<int> stk;\nqueue<int> que;\n\nbool operator <(const Node a, const Node b){\n\treturn a.dfn < b.dfn;\n}\n\nbool operator ==(const Node a, const Node b){\n\treturn a.pos == b.pos;\n}\n\ninline int shallow(int u, int v){\n\treturn depth[u] < depth[v] ? u : v;\n}\n\ninline void init1(int n){\n\tint m;\n\tfor (register int i = 2; i <= n; i++){\n\t\t_log2[i] = _log2[i >> 1] + 1;\n\t}\n\tm = _log2[n];\n\tfor (register int i = 1; i <= n; i++){\n\t\tst[i][0] = euler[i];\n\t}\n\tfor (register int i = 1; i <= m; i++){\n\t\tint id = i - 1, t1 = n - (1 << i) + 1, t2 = 1 << id;\n\t\tfor (register int j = 1; j <= t1; j++){\n\t\t\tst[j][i] = shallow(st[j][id], st[j + t2][id]);\n\t\t}\n\t}\n}\n\ninline void init2(int n){\n\tcnt1 = cnt2 = 0;\n\tfor (register int i = 1; i <= n; i++){\n\t\thead1[i] = head2[i] = size2[i] = deg[i] = 0;\n\t\tmark[i] = 1 << (i - 1);\n\t\tvis1[i] = false;\n\t}\n}\n\ninline int read(){\n\tint ans = 0;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9'){\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9'){\n\t\tans = ans * 10 + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn ans;\n}\n\ninline void add_edge1(int start, int end){\n\tcnt1++;\n\tedge1[cnt1].nxt = head1[start];\n\thead1[start] = cnt1;\n\tedge1[cnt1].start = start;\n\tedge1[cnt1].end = end;\n}\n\nvoid tarjan(int u, int &id, int &scc_cnt){\n\tdfn[u] = low[u] = ++id;\n\tvis1[u] = vis2[u] = true;\n\tstk.push(u);\n\tfor (register int i = head1[u]; i != 0; i = edge1[i].nxt){\n\t\tint x = edge1[i].end;\n\t\tif (!vis1[x]){\n\t\t\ttarjan(x, id, scc_cnt);\n\t\t\tlow[u] = min(low[u], low[x]);\n\t\t} else if (vis2[x]){\n\t\t\tlow[u] = min(low[u], dfn[x]);\n\t\t}\n\t}\n\tif (dfn[u] == low[u]){\n\t\tint cur;\n\t\tscc_cnt++;\n\t\tdo {\n\t\t\tcur = stk.top();\n\t\t\tstk.pop();\n\t\t\tvis2[cur] = false;\n\t\t\tbelong1[cur] = scc_cnt;\n\t\t\tsize1[scc_cnt]++;\n\t\t} while (cur != u);\n\t}\n}\n\ninline void add_edge2(int start, int end){\n\tcnt2++;\n\tedge2[cnt2].nxt = head2[start];\n\thead2[start] = cnt2;\n\tedge2[cnt2].end = end;\n}\n\ninline void add_edge3(int start, int end){\n\tcnt3++;\n\tedge3[cnt3].nxt = head3[start];\n\thead3[start] = cnt3;\n\tedge3[cnt3].end = end;\n}\n\nvoid dfs1(int u, int father, int &id1, int &id2){\n\tdepth[u] = depth[father] + 1;\n\tin[u] = ++id1;\n\tid2++;\n\tfst[u] = id2;\n\teuler[id2] = u;\n\tfa[u] = father;\n\tsum[u] = sum[father] + size1[u];\n\tfor (register int i = head3[u]; i != 0; i = edge3[i].nxt){\n\t\tdfs1(edge3[i].end, u, id1, id2);\n\t\teuler[++id2] = u;\n\t}\n\tout[u] = id1;\n}\n\ninline int lca(int u, int v){\n\tint t;\n\tu = fst[u];\n\tv = fst[v];\n\tt = _log2[v - u + 1];\n\treturn shallow(st[u][t], st[v - (1 << t) + 1][t]);\n}\n\ninline bool check(int u, int v){\n\treturn in[u] <= in[v] && in[v] <= out[u];\n}\n\nvoid tarjan2(int u, int &id, int &scc_cnt){\n\tdfn[u] = low[u] = ++id;\n\tvis1[u] = vis2[u] = true;\n\tstk.push(u);\n\tfor (register int i = head1[u]; i != 0; i = edge1[i].nxt){\n\t\tint x = edge1[i].end;\n\t\tif (!vis1[x]){\n\t\t\ttarjan2(x, id, scc_cnt);\n\t\t\tlow[u] = min(low[u], low[x]);\n\t\t} else if (vis2[x]){\n\t\t\tlow[u] = min(low[u], dfn[x]);\n\t\t}\n\t}\n\tif (dfn[u] == low[u]){\n\t\tint cur;\n\t\tscc_cnt++;\n\t\tdo {\n\t\t\tcur = stk.top();\n\t\t\tstk.pop();\n\t\t\tvis2[cur] = false;\n\t\t\tbelong2[cur] = scc_cnt;\n\t\t} while (cur != u);\n\t}\n}\n\nvoid dfs2(int u){\n\tfor (register int i = head2[u]; i != 0; i = edge2[i].nxt){\n\t\tint x = edge2[i].end;\n\t\tif (!vis4[i]){\n\t\t\tvis4[i] = true;\n\t\t\tdeg[x]++;\n\t\t\tdfs2(x);\n\t\t}\n\t}\n}\n\nint main(){\n\tint n = read(), m = read(), q = read(), k = read(), dfn_id = 0, euler_id = 0, scc_cnt = 0, root;\n\tfor (register int i = 1; i <= m; i++){\n\t\tu[i] = read();\n\t\tv[i] = read();\n\t\tadd_edge1(u[i], v[i]);\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tif (!vis1[i]) tarjan(i, dfn_id, scc_cnt);\n\t}\n\tfor (register int i = 1; i <= m; i++){\n\t\tif (belong1[u[i]] != belong1[v[i]]){\n\t\t\tdeg[belong1[v[i]]]++;\n\t\t\tadd_edge2(belong1[u[i]], belong1[v[i]]);\n\t\t}\n\t}\n\tfor (register int i = 1; i <= scc_cnt; i++){\n\t\tif (deg[i] == 0){\n\t\t\troot = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tque.push(root);\n\twhile (!que.empty()){\n\t\tint cur = que.front();\n\t\tque.pop();\n\t\tfor (register int i = head2[cur]; i != 0; i = edge2[i].nxt){\n\t\t\tint x = edge2[i].end;\n\t\t\tif (--deg[x] == 0){\n\t\t\t\tadd_edge3(cur, x);\n\t\t\t\tque.push(x);\n\t\t\t}\n\t\t}\n\t}\n\tdfn_id = 0;\n\tdfs1(root, 0, dfn_id, euler_id);\n\tinit1(euler_id);\n\tfor (register int i = 1; i <= q; i++){\n\t\tint s = belong1[read()], t = belong1[read()], dot_cnt1 = 0, dot_cnt2, dot_cnt3, ans = 0;\n\t\ta[++dot_cnt1] = Node(s, in[s]);\n\t\ta[++dot_cnt1] = Node(t, in[t]);\n\t\tvis3[s] = vis3[t] = true;\n\t\tfor (register int j = 1; j <= k; j++){\n\t\t\tu[j] = belong1[read()];\n\t\t\tv[j] = belong1[read()];\n\t\t\ta[++dot_cnt1] = Node(u[j], in[u[j]]);\n\t\t\ta[++dot_cnt1] = Node(v[j], in[v[j]]);\n\t\t\tvis3[u[j]] = vis3[v[j]] = true;\n\t\t}\n\t\tsort(a + 1, a + dot_cnt1 + 1);\n\t\tdot_cnt1 = dot_cnt2 = unique(a + 1, a + dot_cnt1 + 1) - a - 1;\n\t\tfor (register int j = 1; j < dot_cnt1; j++){\n\t\t\tint cur = lca(a[j].pos, a[j + 1].pos);\n\t\t\tif (!vis3[cur]){\n\t\t\t\tvis3[cur] = true;\n\t\t\t\ta[++dot_cnt2] = Node(cur, in[cur]);\n\t\t\t}\n\t\t}\n\t\tif (!vis3[root]){\n\t\t\tvis3[root] = true;\n\t\t\ta[++dot_cnt2] = Node(root, 1);\n\t\t}\n\t\tdot_cnt3 = dot_cnt2 * 2 - 1;\n\t\tinit2(dot_cnt3);\n\t\tsort(a + 1, a + dot_cnt2 + 1);\n\t\twhile (!stk.empty()) stk.pop();\n\t\tfor (register int j = 1, x = dot_cnt2, y = n; j <= dot_cnt2; j++){\n\t\t\trnk[a[j].pos] = j;\n\t\t\twhile (!stk.empty() && !check(stk.top(), a[j].pos)) stk.pop();\n\t\t\tif (!stk.empty()){\n\t\t\t\tint cur = stk.top();\n\t\t\t\tx++;\n\t\t\t\ty++;\n\t\t\t\ta[x].pos = y;\n\t\t\t\trnk[y] = x;\n\t\t\t\tsize1[y] = sum[fa[a[j].pos]] - sum[cur];\n\t\t\t\tadd_edge1(rnk[cur], x);\n\t\t\t\tadd_edge1(x, j);\n\t\t\t}\n\t\t\tstk.push(a[j].pos);\n\t\t}\n\t\tfor (register int j = 1; j <= k; j++){\n\t\t\tadd_edge1(rnk[u[j]], rnk[v[j]]);\n\t\t}\n\t\tdfn_id = scc_cnt = 0;\n\t\tfor (register int j = 1; j <= dot_cnt3; j++){\n\t\t\tif (!vis1[j]) tarjan2(j, dfn_id, scc_cnt);\n\t\t}\n\t\tfor (register int j = 1; j <= dot_cnt3; j++){\n\t\t\tsize2[belong2[j]] += size1[a[j].pos];\n\t\t}\n\t\tfor (register int j = 1; j <= cnt1; j++){\n\t\t\tint x = edge1[j].start, y = edge1[j].end;\n\t\t\tif (belong2[x] != belong2[y]) add_edge2(belong2[x], belong2[y]);\n\t\t}\n\t\tdfs2(belong2[rnk[s]]);\n\t\tque.push(belong2[rnk[s]]);\n\t\twhile (!que.empty()){\n\t\t\tint cur = que.front();\n\t\t\tque.pop();\n\t\t\tfor (register int j = head2[cur]; j != 0; j = edge2[j].nxt){\n\t\t\t\tint x = edge2[j].end;\n\t\t\t\tmark[x] |= mark[cur];\n\t\t\t\tif (--deg[x] == 0) que.push(x);\n\t\t\t}\n\t\t}\n\t\tif (mark[belong2[rnk[t]]] >> (belong2[rnk[s]] - 1) & 1){\n\t\t\tfor (register int j = 1; j <= scc_cnt; j++){\n\t\t\t\tif (mark[belong2[rnk[t]]] >> (j - 1) & 1) ans += size2[j];\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t\tfor (register int j = 1; j <= dot_cnt2; j++){\n\t\t\tvis3[a[j].pos] = false;\n\t\t}\n\t\tfor (register int j = 1; j <= cnt2; j++){\n\t\t\tvis4[j] = false;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1661173176,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7737 \u3010[NOI2021] \u5e86\u5178\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8c03\u4e86 2 \u5929\u624d\u8fc7\u6389\u3002\u3002\u3002\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6574\u4e2a\u601d\u8003\u8fc7\u7a0b\u8fd8\u662f\u5f88\u6709\u501f\u9274\u610f\u4e49\u7684\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u6211\u4eec\u62ff\u5230\u7684\u662f\u4e00\u4e2a\u6709\u610f\u601d\u56fe\uff0c\u6211\u4eec\u8003\u8651\u4e00\u6b65\u4e00\u6b65\u5c06\u56fe\u8f6c\u5316\u3002\u6700\u597d\u5904\u7406\u7684\u56fe\u7c7b\u578b\u662f\u4ec0\u4e48\uff1f\u662f\u6811\uff0c\u6211\u4eec\u80fd\u5426\u628a\u539f\u56fe\u8f6c\u5316\u4e3a\u5728\u53f6\u5411\u6811\u4e0a\u7684\u95ee\u9898\u5462\uff1f\n\n### step 1\n\n\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u5c06\u4e00\u4e2a\u6709\u5411\u56fe\u901a\u8fc7\u7f29\u70b9\u8f6c\u5316\u4e3a DAG\u3002\u6211\u4eec\u8dd1\u4e00\u904d tarjan \u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bb9\u6613\u8bc1\u660e\uff0c\u7f29\u70b9\u540e\u7684 DAG \u8fd8\u6ee1\u8db3\u539f\u56fe\u6240\u6ee1\u8db3\u7684\u90a3\u4e2a\u5947\u602a\u7684\u6761\u4ef6\u3002\n\n### step 2\n\n\u6211\u4eec\u73b0\u5728\u6709\u4e86\u4e00\u4e2a DAG\uff0c\u53ef\u4ee5\u62d3\u6251\u6392\u5e8f\u4e86\u3002\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u56de\u987e\u9898\u76ee\u4e2d\u6709\u4e00\u4e2a\u5947\u602a\u7684\u6761\u4ef6\uff1a\n\n> \u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u90a3\u4e48\u6709 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\u3002\n\n\u5047\u8bbe\u6709 $x\\Rightarrow y$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u73b0\u5728\u901a\u8fc7 $x$ \u6709\u4e00\u6761\u76f4\u63a5\u7684\u8fb9\u53ef\u4ee5\u5230\u8fbe $z$\uff0c\u4e14 $y$ \u53ef\u4ee5\u5230\u8fbe $z$\u3002\u6211\u4eec\u6392\u5e8f\u80af\u5b9a\u5148\u6392 $x$ \u540e $y$\uff0c\u6700\u540e $z$\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5220\u6389 $x\\Rightarrow z$ \u8fd9\u6761\u8fb9\uff0c\u56e0\u4e3a\uff0c\u8fd9\u5bf9\u7b54\u6848\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u9897\u53f6\u5411\u6811\u3002\n\n### step 3\n\n\u6211\u4eec\u73b0\u5728\u5f97\u5230\u4e86\u4e00\u9897\u6811\uff0c\u5df2\u7ecf\u53ef\u4ee5\u66b4\u529b\u4e86\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u7531\u4e8e $k$ \u5f88\u5c0f\uff0c\u6211\u4eec\u8003\u8651\u5efa\u9020\u865a\u6811\u3002\n\n\u6211\u4eec\u5bf9 $s,t$ \u548c\u6bcf\u6761\u8fb9\u6d89\u53ca\u7684\u70b9\u5efa\u9020\u865a\u6811\uff08\u6ce8\u610f\u53ef\u80fd\u6709\u91cd\u590d\uff0c\u8981\u53bb\u91cd\uff09\u3002\u865a\u6811\u7684\u8fb9\u6743\u4e3a\u8fd9\u4e2a\u8fb9\u4e0a\u51fa\u4e24\u4e2a\u7aef\u70b9\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u6211\u4eec\u518d\u628a\u4e34\u65f6\u8fb9\u52a0\u5230\u865a\u6811\u91cc\uff0c\u8fb9\u6743\u4e3a $0$\uff0c\u987a\u624b\u5efa\u4e2a\u53cd\u5411\u56fe\u3002\u8ba9 $s,t$ \u53cc\u5411\u5954\u8d74\u4e00\u4e0b\uff0c\u8ba1\u7b97\u51fa\u6709\u591a\u5c11\u8fb9\u70b9\u53ef\u4ee5\u88ab\u540c\u65f6\u904d\u5386\u5230\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n\u672c\u9898\u96be\u70b9\u4e4b\u4e00\u53ef\u80fd\u5728\u4e8e\u5982\u4f55\u6e05\u7a7a\u865a\u6811\u548c\u5982\u4f55\u7406\u6e05\u6bcf\u4e2a\u56fe\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7406\u89e3\u4e86\u540e\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\uff08\u4ee3\u7801\u53c8\u957f\u53c8\u81ed\uff09\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\nchar read_char() {\n\tchar ch=getchar();\n\twhile(!isalpha(ch)) {\n\t\tch=getchar();\n\t}\n\treturn ch;\n}\n\nconst int MAXN=3e5+10;\n\nint n,m,q,k,rt,tms,tot,top,colcnt,ans;\nint ind[MAXN],f[MAXN][21],lst[15],mrk[15],dfn[MAXN],stk[MAXN],val[MAXN],sum[MAXN],cal[MAXN],dep[MAXN],dis[MAXN];\nint low[MAXN],col[MAXN],sz[MAXN],bel[MAXN];\nbool vis[MAXN];\nstack<int> s;\nstruct edge {\n\tint u,v,id,nxt;\n};\n\nstruct graph {\n\tedge e[MAXN<<2];\n\tint cnt,h[MAXN];\n\t\n\tvoid addedge(int u,int v,int w) {\n\t\te[++cnt].v=v;\n\t\te[cnt].id=w;\n\t\te[cnt].nxt=h[u];\n\t\th[u]=cnt;\n\t}\n}g0,g1,g2;\n\nstruct small_graph {\n\tedge e[500];\n\tint cnt,h[MAXN];\n\tbool vis[MAXN];\n\t\n\tvoid addedge(int u,int v,int w) {\n\t\te[++cnt].v=v;\n\t\te[cnt].id=w;\n\t\te[cnt].u=u;\n\t\te[cnt].nxt=h[u];\n\t\th[u]=cnt;\n\t}\n\t\n\tvoid dfs(int u) {\n\t\tcal[u]++;\n\t\tif(cal[u]==2) {\n\t\t\tans+=sz[u];\n\t\t}\n\t\tvis[u]=1;\n\t\tfor(int i=h[u];i;i=e[i].nxt) {\n\t\t\tsum[e[i].id]++;\n\t\t\tif(!vis[e[i].v])\n\t\t\t\tdfs(e[i].v);\n\t\t}\n\t}\n\tvoid clear() {\n\t\tfor(int i=1;i<=cnt;i++) {\n\t\t\th[e[i].u]=0;\n\t\t\tcal[e[i].u]=0;\n\t\t\tcal[e[i].v]=0;\n\t\t\tvis[e[i].u]=0;\n\t\t\tvis[e[i].v]=0;\n\t\t\te[i]=e[0];\n\t\t}\n\t\tcnt=0;\n\t}\n}g3,g4;\n\nbool cmp(int a,int b) {\n\treturn dfn[a]<dfn[b];\n}\nvoid get(int x,int y) {\n\tif(dis[y]<dis[x]) {\n\t\tswap(x,y);\n\t}\n\tval[++tot]=dis[y]-dis[x]-sz[y];\n}\nvoid tarjan(int u) {\n\tdfn[u]=low[u]=++tms;\n\tvis[u]=1;\n\ts.push(u);\n\tfor(int i=g0.h[u];i;i=g0.e[i].nxt) {\n\t\tint v=g0.e[i].v;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(vis[v]){\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(dfn[u]==low[u]) {\n\t\tcolcnt++;\n\t\twhile(!s.empty()&&low[s.top()]==dfn[u]) {\n\t\t\tint v=s.top();\n\t\t\ts.pop();\n\t\t\tvis[v]=0;\n\t\t\tcol[v]=colcnt;\n\t\t\tsz[colcnt]++;\n\t\t\tbel[v]=colcnt;\n\t\t}\n\t}\n}\nvoid topo() {\n\tqueue<int> q;\n\tfor(int i=1;i<=colcnt;i++) {\n\t\tif(!ind[i]) {\n\t\t\tq.push(i);\n\t\t\trt=i;\n\t\t}\n\t}\n\twhile(!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=g1.h[u];i;i=g1.e[i].nxt) {\n\t\t\tint v=g1.e[i].v;\n\t\t\tind[v]--;\n\t\t\tif(!ind[v]) {\n\t\t\t\tg2.addedge(u,v,0);\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dfs(int u,int fa) {\n\tf[u][0]=fa;\n\tdep[u]=dep[fa]+1;\n\tdis[u]=dis[fa]+sz[u];\n\tdfn[u]=++tms;\n\tfor(int i=g2.h[u];i;i=g2.e[i].nxt) {\n\t\tint v=g2.e[i].v;\n\t\tif(v!=fa) {\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n} \nvoid lca_init() {\n\tfor(int i=1;i<=20;i++) {\n\t\tfor(int j=1;j<=n;j++) {\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\t}\n\t}\n}\n\nint LCA(int u,int v) {\n\tif(dep[u]<dep[v]) {\n\t\tswap(u,v);\n\t}\n\tfor(int i=20;i>=0;i--) {\n\t\tif(dep[f[u][i]]>=dep[v]) {\n\t\t\tu=f[u][i];\n\t\t}\n\t}\n\tif(u==v) {\n\t\treturn u;\n\t}\n\tfor(int i=20;i>=0;i--) {\n\t\tif(f[u][i]!=f[v][i]) {\n\t\t\tu=f[u][i];\n\t\t\tv=f[v][i];\n\t\t}\n\t}\n\treturn f[u][0];\n}\n\nvoid build(int n) {\n\tsort(lst+1,lst+n+1,cmp);\n\tstk[++top]=lst[1];\n\tfor(int i=2;i<=n;i++) {\n\t\tint p=lst[i];\n\t\tint lca=LCA(lst[i],stk[top]);\n\t\twhile(1) {\n\t\t\tif(dep[lca]<=dep[stk[top]]&&dep[lca]>=dep[stk[top-1]]) {\n\t\t\t\tif(lca==stk[top]) {\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\telse if(lca==stk[top-1]) {\n\t\t\t\t\tget(stk[top-1],stk[top]);\n\t\t\t\t\tg3.addedge(stk[top-1],stk[top],tot);\n\t\t\t\t\tg4.addedge(stk[top],stk[top-1],tot);\n\t\t\t\t\ttop--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tget(lca,stk[top]);\n\t\t\t\t\tg3.addedge(lca,stk[top],tot);\n\t\t\t\t\tg4.addedge(stk[top],lca,tot);\n\t\t\t\t\tstk[top]=lca;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tget(stk[top-1],stk[top]);\n\t\t\t\tg3.addedge(stk[top-1],stk[top],tot);\n\t\t\t\tg4.addedge(stk[top],stk[top-1],tot);\n\t\t\t\ttop--;\n\t\t\t}\n\t\t}\n\t\tstk[++top]=lst[i];\n\t}\n\tfor(int i=1;i<top;i++) {\n\t\tget(stk[i+1],stk[i]);\n\t\tg3.addedge(stk[i],stk[i+1],tot);\n\t\tg4.addedge(stk[i+1],stk[i],tot);\n\t}\n\tfor(int i=1;i<=k;i++) {\n\t\tg3.addedge(mrk[i*2-1],mrk[i*2],0);\n\t\tg4.addedge(mrk[i*2],mrk[i*2-1],0);\n\t}\n}\n\nvoid clear1() {\n\tfor(int i=1;i<=n;i++) {\n\t\tdfn[i]=ind[i]=low[i]=0;\n\t}\n\ttms=0;\n}\nvoid clear2(int n) {\n\tfor(int i=0;i<=tot;i++) {\n\t\tsum[i]=0;\n\t\tval[i]=0;\n\t}\n\ttop=tot=ans=0;\n\tg3.clear();\n\tg4.clear();\n\tfor(int i=1;i<=n;i++) {\n\t\tcal[lst[i]]=0;\n\t\tg3.vis[lst[i]]=0;\n\t\tg4.vis[lst[i]]=0;\n\t\tg3.h[lst[i]]=0;\n\t\tg4.h[lst[i]]=0;\n\t}\n}\n\nint main() {\n\tfreopen(\"temp.in\",\"r\",stdin);\n\t//freopen(\"temp.out\",\"w\",stdout);\n\n\tcin>>n>>m>>q>>k;\n\tfor(int i=1;i<=m;i++) {\n\t\tint u,v;\n\t\tu=read(),v=read();\n\t\tind[v]++;\n\t\tg0.addedge(u,v,0);\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tif(!dfn[i]) {\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tclear1();\n\tfor(int u=1;u<=n;u++) {\n\t\tfor(int i=g0.h[u];i;i=g0.e[i].nxt) {\n\t\t\tint v=g0.e[i].v;\n\t\t\tif(bel[u]!=bel[v]) {\n\t\t\t\tg1.addedge(bel[u],bel[v],0);\n\t\t\t\tind[bel[v]]++;\n\t\t\t}\n\t\t}\n\t}\n\ttopo();\n\tdfs(rt,0);\n\tlca_init();\n\t\n\tfor(int i=1;i<=q;i++) {\n\t\tint s,t;\n\t\ts=bel[read()];t=bel[read()];\n\t\tfor(int j=1;j<=k;j++) {\n\t\t\tlst[j*2-1]=mrk[j*2-1]=bel[read()];\n\t\t\tlst[j*2]=mrk[j*2]=bel[read()];\n\t\t}\n\t\tlst[k*2+1]=s;\n\t\tlst[k*2+2]=t;\n\t\tint nm=k*2+2;\n\t\tsort(lst+1,lst+nm+1);\n\t\tnm=unique(lst+1,lst+nm+1)-lst-1;\n\t\t\n\t\tbuild(nm);\n\t\tg3.dfs(s);\n\t\tg4.dfs(t);\n\t\tfor(int j=1;j<=tot;j++) {\n\t\t\tans+=(sum[j]==2? 1:0)*val[j];\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\t\n\t\tclear2(nm);\n\t}\n\n\t//fclose(stdin);\n\t//fclose(stdout);\n\treturn 0;\n}\n/*\n5 6 3 0\n5 2\n3 5\n3 2\n2 4\n2 5\n3 1 \n3 2 \n4 5 \n4 3 \n*/\n```\n\n",
        "postTime": 1642342233,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "LG7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "# Description\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u6ee1\u8db3\u7279\u6b8a\u6027\u8d28\uff1a\u5bf9\u4e8e\u4e09\u5ea7\u57ce\u5e02 $x,y,z$\uff0c\u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u90a3\u4e48\u6709 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\uff08$x \\Rightarrow y$ \u8868\u793a\u4ece $x$ \u51fa\u53d1\u7ecf\u8fc7\u82e5\u5e72\u8fb9\u53ef\u5230\u8fbe $y$\uff09\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e34\u65f6\u52a0\u4e0a $k$ \u6761\u6709\u5411\u8fb9\uff08\u8be2\u95ee\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\uff09\uff0c\u95ee\u4ece $s_i$ \u51fa\u53d1\u5230\u8fbe $t_i$ \u53ef\u80fd\u88ab\u7ecf\u8fc7\u7684\u70b9\u6570\uff0c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u88ab\u91cd\u590d\u7ecf\u8fc7\u3002\n\n$n,q \\le 3 \\times 10^5, m \\le 6 \\times 10^5, k \\le 2$\uff0c\u65f6\u9650 2s\u3002\n\n# Solution\n\n\u663e\u7136\u53ef\u4ee5\u7528 Tarjan \u628a\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u70b9\uff0c\u5e76\u7ed9\u65b0\u56fe\u4e2d\u7684\u70b9\u8d4b\u4e00\u4e2a\u70b9\u6743\u8868\u793a\u8be5\u70b9\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff09\u5728\u539f\u56fe\u4e2d\u5305\u542b\u7684\u70b9\u6570\uff0c\u8ba1\u7b97\u7b54\u6848\u65f6\u7edf\u8ba1\u70b9\u6743\u5373\u53ef\u3002\n\n\u89c2\u5bdf\u9898\u76ee\u6027\u8d28\uff1a\u82e5 $x\\Rightarrow z$ \u4e14 $y\\Rightarrow z$\uff0c\u5219 $x\\Rightarrow y$ \u6216 $y\\Rightarrow x$\u3002\u4e0d\u59a8\u5047\u8bbe\u6b64\u65f6 $x \\Rightarrow y$\uff0c\u4e14 $x,y,z$ \u95f4\u7684\u8fde\u901a\u90fd\u662f\u76f4\u63a5\u6709\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\u5220\u53bb\u8fb9 $(x,z)$ \u540e\uff0c$x$ \u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4e2d\u8f6c\u70b9 $y$ \u95f4\u63a5\u5230\u8fbe $z$\uff0c\u4e0d\u5f71\u54cd\u56fe\u7684\u8fde\u901a\u6027\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7ee7\u7eed\u7b80\u5316\u65b0\u56fe\uff0c\u5bf9\u65b0\u56fe\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u53ea\u4fdd\u7559\u53e6\u4e00\u7aef\u70b9\u62d3\u6251\u5e8f\u6700\u5927\u7684\u5165\u8fb9\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u5165\u8fb9\uff0c\u4e0d\u96be\u77e5\u9053\u5f97\u5230\u7684\u662f\u4e00\u68f5\u5916\u5411\u6811\u3002\n\n\u5148\u8003\u8651\u6700\u66b4\u529b\u7684\u505a\u6cd5\uff1a\u4ece\u8d77\u70b9\u505a\u4e00\u6b21 BFS \u628a\u80fd\u5230\u8fbe\u7684\u70b9\u6253\u4e0a\u4e00\u4e2a\u6807\u8bb0\uff0c\u518d\u5728\u53cd\u56fe\u4e0a\u4ece\u7ec8\u70b9\u505a\u4e00\u6b21 BFS \u6253\u4e0a\u4e00\u4e2a\u65b0\u6807\u8bb0\uff0c\u6700\u540e\u7edf\u8ba1\u88ab\u6807\u8bb0\u4e86\u4e24\u6b21\u7684\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4f1a\u591a\u51fa\u5f88\u591a\u65e0\u7528\u70b9\u7684\u904d\u5386\u3002\u4e0d\u59a8\u628a $s_i,t_i$ \u4ee5\u53ca\u8fd9\u6b21\u8be2\u95ee\u52a0\u4e0a\u7684\u6bcf\u4e2a\u65b0\u8fb9\u7684\u7aef\u70b9\u62ff\u51fa\u6765\u5efa\u4e00\u68f5\u865a\u6811\u3002\u8fd9\u6837\u70b9\u6570\u7684\u89c4\u6a21\u53d8\u4e3a\u4e86 $\\mathcal O(k)$\u3002\n\n\u6211\u4eec\u628a\u865a\u6811\u4e0a\u7684\u70b9\u6743\u5b9a\u4e49\u4e3a\u539f\u56fe\u7684\u70b9\u6743\uff0c\u628a\u8fb9\u6743\u5b9a\u4e49\u4e3a\u539f\u56fe\u4e0a\u4e24\u70b9\u8def\u5f84\u4e0a\u6240\u7ecf\u8fc7\u7684\u70b9\u7684\u70b9\u6743\u548c\uff08\u4e0d\u542b\u4e24\u7aef\u70b9\uff09\u3002\u6700\u540e\u518d\u52a0\u4e0a\u8fb9\u6743\u4e3a $0$ \u7684\u65b0\u8fb9\u3002\u8fd9\u6837\u518d\u7528\u539f\u5148\u7684\u66b4\u529b\u505a\u6cd5\u8ba1\u7b97\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u505a\u5230 $\\mathcal O(qk \\log k)$\u3002\n\n\u6ce8\u610f\u5fc5\u987b\u8981\u5148\u5efa\u865a\u6811\u4e0a\u7684\u8fb9\u518d\u6dfb\u52a0\u65b0\u8fb9\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u8fb9\u7684\u60c5\u51b5\u8ba1\u7b97\u5c11\u4e86\u7b54\u6848\uff0c\u88ab\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e hack \u6389\u3002\n\n```cpp\n7 6 1 1\n1 2\n1 3\n3 4\n3 5\n2 6\n2 7\n1 4 1 4\n```\n\n\u6211\u4ee3\u7801\u4e2d\u7528\u7684\u662f\u90bb\u63a5\u94fe\u8868\u5efa\u56fe\uff0c\u904d\u5386\u987a\u5e8f\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u3002\u5982\u679c\u7528 ```vector``` \u5efa\u56fe\uff0c\u800c\u4e14\u4e0d\u628a\u5efa\u8fb9\u987a\u5e8f\u53cd\u8fc7\u6765\u7684\u8bdd\uff0c\u5c31\u4f1a WA on #5\u3002\n\n\u53e6\u5916\uff0c\u51fa\u4e8e\u5e38\u6570\u539f\u56e0\uff0c\u5c3d\u91cf\u4e0d\u8981\u7528\u500d\u589e LCA\uff0c\u6700\u597d\u4f7f\u7528 ST \u8868 LCA \u6216\u8005\u6811\u5256 LCA\uff0c\u5426\u5219\u4f1a TLE on #12\u3002\n\n# Code\n\n```cpp\n#define bg begin\n#define ed end\n#define pb emplace_back\n#define clr clear\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define ers erase\n#define umap unordered_map\n#define unq unique\n#define sze size\nconst int N=3e5+5;\nint n,m,Q,k,rt,sr,en,df[N],lo[N],in[N],tp,st[N],tim,bn,nw[15],ee[15],ttp[N],ee2[15],co[N],id[N],rrd[N],w[N],rd2[N],fa[N],d[N],s[N],zs[N],pr[N];\ninline char gc() {\n    static char buf[100],*p1(buf),*p2(buf);\n    return p1==p2 && (p2=(p1=buf)+fread(buf,1,100,stdin),p1==p2)?EOF:*p1++; \n}\ninline int rd() {\n\tint x(0);\n\tchar ch(gc());\n\twhile (ch<'0' || ch>'9') ch=gc();\n\twhile (ch>='0' && ch<='9') {\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=gc();\n\t}\n\treturn x;\n}\nstruct grp {\n\tint ne,fir[N];\n\tstruct edg {\n\t\tint v,w,nxt;\n\t}e[N*2];\n\tvoid clr() {\n\t\tfor (int i=1;i<=ne;i++) e[i]=(edg){0,0,0};\n\t\tne=0;\n\t}\n\tvoid ade(int u,int v,int w=0) {\n\t\te[++ne]=(edg){v,w,fir[u]};\n\t\tfir[u]=ne;\n\t}\n}g1,g2,g3;\nstruct grp2 {\n\tint ne,fir[15];\n\tstruct edg {\n\t\tint v,w,nxt;\n\t}e[15];\n\tvoid clr() {\n\t\tne=0;\n\t\tmemset(fir,0,sizeof(fir));\n\t}\n\tvoid ade(int u,int v,int w=0) {\n\t\te[++ne]=(edg){v,w,fir[u]};\n\t\tfir[u]=ne;\n\t}\n}g4,g5;\numap<int,int> o;\nint idn;\nvoid hclr() {\n\to.clr(),idn=0;\n}\nint I(int x) {\n\tif (!o[x]) o[x]=++idn;\n\treturn o[x];\n}\nvector<int> p;\nbool e[15];\nvoid trj(int x) {\n\tdf[x]=lo[x]=++tim,st[++tp]=x,in[x]=1;\n\tfor (int i=g1.fir[x];i;i=g1.e[i].nxt) {\n\t\tint v=g1.e[i].v;\n\t\tif (!df[v]) trj(v),lo[x]=min(lo[x],lo[v]);\n\t\telse if (in[v]) lo[x]=min(lo[x],df[v]);\n\t}\n\tif (df[x]==lo[x]) {\n\t\tbn++;\n\t\twhile (st[tp+1]!=x) co[st[tp]]=bn,in[st[tp--]]=0,w[bn]++;\n\t}\n}\nqueue<int> q;\nvoid tops() {\n\tfor (int i=1;i<=bn;i++)\n\t\tif (!rrd[i]) q.push(i);\n\twhile (!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (int i=g2.fir[u];i;i=g2.e[i].nxt) {\n\t\t\tint v=g2.e[i].v;\n\t\t\trrd[v]--;\n\t\t\tif (!rrd[v]) {\n\t\t\t\tg3.ade(u,v);\n\t\t\t\trd2[v]++;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs1(int x,int ft) {\n\tpr[x]=pr[ft]+w[x];\n\tfa[x]=ft,s[x]=1,d[x]=d[ft]+1;\n    for (int i=g3.fir[x];i;i=g3.e[i].nxt) \n    \tif (g3.e[i].v!=ft) {\n    \t\tdfs1(g3.e[i].v,x);\n\t\t\ts[x]+=s[g3.e[i].v];\n        \tif (s[zs[x]]<s[g3.e[i].v]) zs[x]=g3.e[i].v;\n\t\t}\n}\nvoid dfs2(int x,int ft) {\n\tttp[x]=ft;\n\tid[x]=++tim;\n    if (!zs[x]) return;\n\tdfs2(zs[x],ft);\n    for (int i=g3.fir[x];i;i=g3.e[i].nxt)\n      \tif (g3.e[i].v!=fa[x] && g3.e[i].v!=zs[x])\n\t\t\tdfs2(g3.e[i].v,g3.e[i].v);\n}\nint LCA(int x,int y) {\n\twhile (ttp[x]!=ttp[y]) {\n\t\tif (d[ttp[x]]<d[ttp[y]]) swap(x,y);\n\t\tx=fa[ttp[x]];\n\t}\n\tif (d[x]>d[y]) swap(x,y);\n\treturn x;\n}\nbool cmp(int x,int y) {\n\treturn id[x]<id[y];\n}\nint calc() {\n\tmemset(ee,0,sizeof(ee));\n\tmemset(ee2,0,sizeof(ee2));\n\tmemset(e,0,sizeof(e));\n\twhile (!q.empty()) q.pop();\n\tq.push(I(sr));\n\twhile (!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\te[u]=1;\n\t\tfor (int i=g4.fir[u];i;i=g4.e[i].nxt) {\n\t\t\tint v=g4.e[i].v;\n\t\t\tif (!ee[i]) {\n\t\t\t\tee[i]=1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tq.push(I(en));\n\twhile (!q.empty()) {\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tif (e[u]) ans+=nw[u],e[u]=0;\n\t\tfor (int i=g5.fir[u];i;i=g5.e[i].nxt) {\n\t\t\tint v=g5.e[i].v,w=g5.e[i].w;\n\t\t\tif (ee2[i]) continue;\n\t\t\tee2[i]=1;\n\t\t\tif (ee[i]) ans+=w,ee[i]=0;\n\t\t\tq.push(v);\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tn=rd(),m=rd(),Q=rd(),k=rd();\n\tfor (int i=1;i<=m;i++) {\n\t\tint u(rd()),v(rd());\n\t\tg1.ade(u,v);\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tif (!df[i]) trj(i);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=g1.fir[i];j;j=g1.e[j].nxt) {\n\t\t\tint v=g1.e[j].v;\n\t\t\tif (co[i]!=co[v])\n\t\t\t\tg2.ade(co[i],co[v]),rrd[co[v]]++;\n\t\t}\n\ttops();\n\tfor (int i=1;i<=bn;i++)\n\t\tif (!rd2[i]) {\n\t\t\trt=i;\n\t\t\tbreak;\n\t\t}\n\ttim=0;\n\tdfs1(rt,0),dfs2(rt,rt);\n\tfor (int tt=1;tt<=Q;tt++) {\n\t\tmemset(nw,0,sizeof(nw));\n\t\thclr();\n\t\tp.clr();\n\t\tsr=co[rd()],en=co[rd()];\n\t\tp.pb(sr),p.pb(en);\n\t\tfor (int i=1;i<=k;i++) {\n\t\t\tint u(co[rd()]),v(co[rd()]);\n\t\t\tif (u==v) continue;\n\t\t\tp.pb(u),p.pb(v);\n\t\t\tg4.ade(I(u),I(v),0);\n\t\t\tg5.ade(I(v),I(u),0);\n\t\t}\n\t\tsort(p.bg(),p.ed(),cmp);\n\t\tp.ers(unq(p.bg(),p.ed()),p.ed());\n\t\tint pn=p.sze();\n\t\tfor (int i=1;i<pn;i++) p.pb(LCA(p[i],p[i-1]));\n\t\tsort(p.bg(),p.ed(),cmp);\n\t\tp.ers(unq(p.bg(),p.ed()),p.ed());\n\t\tfor (int v:p) nw[I(v)]=w[v];\n\t\tfor (int i=1;i<p.sze();i++) {\n\t\t\tint t=LCA(p[i-1],p[i]);\n\t\t\tnw[I(t)]=w[t];\n\t\t\tg4.ade(I(t),I(p[i]),pr[fa[p[i]]]-pr[t]);\n\t\t\tg5.ade(I(p[i]),I(t),pr[fa[p[i]]]-pr[t]);\n\t\t}\n\t\tprintf(\"%d\\n\",calc());\n\t\tg4.clr(),g5.clr();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1663390706,
        "uid": 283913,
        "name": "ZillionX",
        "ccfLevel": 6,
        "title": "\u3010Tarjan\uff0c\u89c2\u5bdf\uff0c\u6811\u5256\uff0c\u865a\u6811\u3011P7737 [NOI2021] \u5e86\u5178"
    },
    {
        "content": "## \u653e\u5728\u524d\u9762\n\u672c\u849f\u84bb\u5728\u672c\u9898\u5361\u4e86\u4e00\u5929\u534a\u624d\u505a\u51fa\u6765\uff08\u539f\u56e0\u662f\u505a\u6cd5\u4f2a\u4e86\u7136\u800c\u81ea\u5df1\u5374\u6d51\u7136\u4e0d\u77e5\uff0c\u770b\u9898\u89e3\u4e5f\u6ca1\u592a\u8bf4\u6e05\u695a\uff0c\u6700\u540e\u7167\u7740\u522b\u4eba\u7684\u4ee3\u7801\u624d\u770b\u51fa\u81ea\u5df1\u7684\u9519\u8bef\uff09\n\n\u56e0\u6b64\u6253\u7b97\u5199\u4e00\u7bc7\u6bd4\u8f83\u6613\u61c2\u7684\u6811\u5256\u9898\u89e3\uff08\u56e0\u6b64\u4e5f\u4f1a\u6bd4\u8f83\u5570\u55e6\uff09\n\n## \u6b65\u5165\u6b63\u9898\n\u9996\u5148\u7f29\u70b9\u81ea\u4e0d\u5fc5\u8bf4\u3002\n\n\u4e4b\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\u56fe\u7684\u7279\u70b9\u5f88\u5173\u952e\u3002\u5982\u679c $x$ \u80fd\u5230 $z$ \u4e14 $y$ \u80fd\u5230 $z$\uff0c\u90a3\u4e48 $x$ \u548c $y$ \u4e2d\uff0c\u4e00\u5b9a\u53ef\u4ee5\u4ece\u4e00\u4e2a\u8d70\u5230\u53e6\u4e00\u4e2a\u3002\u540c\u65f6\uff0c\u8fd9\u9053\u9898\u663e\u7136\u662f\u8981\u5c3d\u53ef\u80fd\u8d70\u5230\u66f4\u591a\u7684\u70b9\uff0c\u800c\u4e0d\u5173\u5fc3\u4ece\u54ea\u6761\u8fb9\u8d70\u3002\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u7f29\u5b8c\u70b9\u540e\u6709\u4e09\u6761\u8fb9 $x\\rightarrow z,y\\rightarrow z,x\\rightarrow y$\uff0c\u90a3\u4e48 $x\\rightarrow z$ \u8fd9\u6761\u8fb9\u663e\u7136\u662f\u53ef\u4ee5\u5220\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u8d70\u8fd9\u6761\u8fb9\u3002\n\n\u66f4\u5e7f\u6cdb\u5730\u8bf4\uff0c\u6bcf\u4e2a\u70b9\u53ea\u6709\u62d3\u6251\u5e8f\u7684\u6700\u540e\u4e00\u6761\u8fb9\u624d\u662f\u6709\u7528\u7684\uff0c\u5269\u4e0b\u7684\u90fd\u53ef\u4ee5\u5220\u4e86\uff0c\u53cd\u6b63\u6211\u4eec\u4e5f\u4e0d\u4f1a\u8d70\u90a3\u4e9b\u8fb9\u3002\u5982\u4e0b\u56fe\uff0c\u7ea2\u8272\u7684\u8fb9\u90fd\u662f\u53ef\u4ee5\u5220\u6389\u7684\u3002\n\n![\u7ea2\u8272\u7684\u8fb9\u90fd\u662f\u53ef\u4ee5\u5220\u7684](https://cdn.luogu.com.cn/upload/image_hosting/77r5dspf.png)\n\n\u8fd9\u6837\u641e\u5b8c\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u68f5\u6811\u3002\u4e0d\u59a8\u5148\u8003\u8651 $k=0$ \u7684\u60c5\u51b5\uff0c\u8fd9\u65f6 $x\\Rightarrow y$ \u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f $y$ \u5728 $x$ \u7684\u5b50\u6811\u5185\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u6811\u5256\u7684\u7f16\u53f7 $O(1)$ \u5224\u65ad\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u524d\u7f00\u548c\u6c42\u51fa\u6bcf\u4e00\u6bb5\u91cd\u8def\u5f84\u4e0a\u70b9\u7684 $\\text{size}$ \u4e4b\u548c\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u8be2\u95ee $s,t$\uff0c\u5c31\u662f\u5148\u770b\u662f\u5426\u6ee1\u8db3 $s\\Rightarrow t$\uff0c\u6ee1\u8db3\u7684\u8bdd\u5c31\u5728\u6811\u4e0a\u8d70\u4e00\u904d\u3002\n\n### \u7136\u540e\uff0c\u672c\u849f\u84bb\u7684\u5669\u68a6\u5f00\u59cb\u4e86\u2026\u2026\n\u8003\u8651 $k>0$ \u7684\u60c5\u51b5\u3002\u4ee5 $k=1$ \u4e3e\u4f8b\uff0c\u672c\u849f\u84bb\u5929\u771f\u5730\u4ee5\u4e3a\uff0c\u53ea\u9700\u8981\u8ba8\u8bba\u662f\u5426\u7ecf\u8fc7\u65b0\u52a0\u7684\u8fb9\u5c31\u884c\u4e86\uff0c\u5373\u8bb0\u65b0\u52a0\u8fb9\u4e3a $u\\rightarrow v$\uff0c\u5219\u6211\u4eec\u53ea\u9700\u8ba8\u8bba $s\\Rightarrow t$\uff08\u4e0d\u7ecf\u8fc7 $u\\rightarrow v$\uff09\u4e0e $(s\\Rightarrow u , v\\Rightarrow t)$ \u4e24\u79cd\u60c5\u51b5\u3002\u7136\u800c\u5728\u8c03\u4e86\u4e00\u5929\u540e\uff0c\u672c\u849f\u84bb\u624d\u53d1\u73b0\u8fd9\u4e2a\u7ed3\u8bba\u662f\u9519\u7684\u2026\u2026\u53cd\u4f8b\u5982\u56fe\n\n![\u53cd\u4f8b](https://cdn.luogu.com.cn/upload/image_hosting/3rzxozc4.png)\n\n\u5982\u679c\u8fd9\u6837\u8ba8\u8bba\uff0c\u8282\u70b9 $x$ \u5c31\u4e0d\u4f1a\u88ab\u7ecf\u8fc7\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece $s$ \u5f00\u59cb $\\text{BFS}$ \u5e76\u8bb0\u5f55\u8d70\u8fc7\u7684\u8def\u5f84\uff0c\u5982\u679c\u80fd\u8d70\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48\u5c31\u628a\u81ea\u5df1\u8d70\u8fc7\u7684\u8def\u5f84\u5168\u90e8\u52a0\u8fdb\u6570\u7ec4\u3002\u641c\u7d22\u7ed3\u675f\u4e4b\u540e\u7edf\u4e00\u6811\u5256\uff0c\u8bb0\u5f55\u54ea\u4e9b\u533a\u95f4\u88ab\u8d70\u8fc7\u4e86\uff0c\u6700\u540e\u6c42\u51fa\u8fd9\u4e9b\u533a\u95f4\u7684\u5e76\u96c6\uff0c\u7528\u524d\u7f00\u548c\u8ba1\u7b97\u8fd9\u4e9b\u533a\u533a\u95f4\u4e2d\u70b9\u7684\u6570\u91cf\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u9632\u6b62\u65e0\u9650\u7684\u641c\u7d22\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6bcf\u6761\u8def\u5f84\u5728 $\\text{BFS}$ \u4e2d\u88ab\u66f4\u65b0\u6b21\u6570\u7684\u4e0a\u9650\uff0c\u56e0\u4e3a $k\\le 2$\uff0c\u51ed\u611f\u89c9\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u754c\u8bbe\u4e3a $5\\sim6$\uff08\u81f3\u4e8e\u4e25\u8c28\u7684\u8bc1\u660e\uff0c\u6211\u592a\u83dc\u4e86\uff0c\u4e0d\u4f1a\uff09\n\n\u8fd9\u4e2a\u9898\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u6240\u4ee5\u4ee3\u7801\u5c3d\u91cf\u5199\u6f02\u4eae\u70b9\u4f1a\u6bd4\u8f83\u597d\u3002\u4e3a\u4e86\u9632\u6b62\u4e00\u5806\u53d8\u91cf\u5f15\u8d77\u7684\u547d\u540d\u56f0\u96be\uff0c\u5168\u5c40\u53d8\u91cf\u524d\u9762\u57fa\u672c\u90fd\u52a0\u4e86\u4e0b\u5212\u7ebf\u3002\u4e3a\u4e86\u8282\u7701\u7bc7\u5e45\uff0c\u90e8\u5206\u7b80\u5355\u51fd\u6570\u5df2\u7701\u7565\u5185\u5bb9\u3002\n\n```cpp\n#include <functional>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n#include <cstdio>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#define gc getchar()\n\nconst int MAXN=3e5+9;\nusing namespace std;\n\nstruct Path {\n    int u,v;\n    inline bool operator < (const Path& other) const {\n        return (u==other.u)?(v<other.v):u<other.u;\n    }\n    inline Path(int U=0, int V=0){ u=U,v=V;}\n};\nstruct Node {\n    int pos, updated;\n    vector<Path> path;\n    inline Node()=default;\n    inline Node(int POS, int UPDATED, vector<Path> PATH){\n        pos=POS, updated=UPDATED;\n        path=PATH;\n    }\n};\n\nvector<int> G1[MAXN],G2[MAXN],G3[MAXN];\nint _dfn[MAXN],_low[MAXN],_team[MAXN],_teamSize[MAXN],_in[MAXN],_teamCnt=0,N,M,Q,K,_root;\nbool _insta[MAXN];\nstack<int> _stack;\n\nint _fa[MAXN],_top[MAXN],_size[MAXN],_son[MAXN],_dep[MAXN],_seg[MAXN],_segtot=0;\nint _sum[MAXN];\n\nvector<Path> _paths;\nPath _tmp[2];\n\ninline int read(); //\u5feb\u8bfb\ninline void Read(){\n    N=read(), M=read(), Q=read(), K=read();\n    for(int i=0,u,v; i<M; i++){\n        u=read(),v=read();\n        G1[u].push_back(v);\n    }\n}\n\nvoid Tarjan(int now); //Tarjan\u7f29\u70b9\uff08\u5e94\u8be5\u90fd\u4f1a\u5427\uff09\ninline void ZipNodes(){ //\u7f29\u70b9\uff0c\u628a\u539f\u56fe\u7f29\u6210DAG\n    for(int u=1; u<=N; u++){\n        for(int v:G1[u]){\n            if(_team[u]!=_team[v]) {\n                _in[_team[v]]++;\n                G2[_team[u]].push_back(_team[v]);\n            }\n        }\n    }\n}\ninline void Topo(){ //\u5220\u53bb\u65e0\u7528\u8fb9\uff0c\u628a\u56fe\u5f04\u6210\u6811\n    queue<int> q;\n    for(int i=1; i<=_teamCnt; i++){\n        if(!_in[i]) {\n            _root=i;\n            q.push(i);\n            break;\n        }\n    }\n    for(int now; !q.empty(); q.pop()){\n        now=q.front();\n        for(int to:G2[now]){\n            if(!--_in[to]){\n                G3[now].push_back(to);\n                q.push(to);\n            }\n        }\n    }\n}\ninline void RebuildGraph(){ //\u91cd\u65b0\u5efa\u56fe\n    for(int i=1; i<=N; i++){\n        if(!_dfn[i]) Tarjan(i);\n    }\n    ZipNodes();\n    Topo();\n}\n\nvoid Dfs1(int now, int fa); //\u6811\u5256\u57fa\u64cd\ninline void AddSeg(int now){ //\u5411\u524d\u7f00\u548c\u4e2d\u6dfb\u52a0\u8282\u70b9\u3002\u4e60\u60ef\u4e86\u53ebseg\uff0c\u867d\u7136\u4e0d\u662f\u7ebf\u6bb5\u6811\n    _seg[now]=++_segtot;\n    _sum[_segtot]=_sum[_segtot-1]+_teamSize[now]; //\u8ba1\u7b97\u524d\u7f00\u548c\n}\nvoid Dfs2(int now);\ninline void TreeSeperate(){ //\u6811\u94fe\u5256\u5206\n    Dfs1(_root,0);\n    AddSeg(_root);\n    _top[_root]=_root;\n    Dfs2(_root);\n}\n\ninline bool CanGo(int s, int t){ //\u4eces\u80fd\u4e0d\u7ecf\u8fc7\u4e34\u65f6\u8fb9\u5230\u8fbet\uff0c\u5373t\u5728s\u5b50\u6811\u5185\n    return _seg[s]<=_seg[t] && _seg[t]<_seg[s]+_size[s];\n}\ninline void Walk(int s, int t){ //\u4eces\u8d70\u5230t\uff0c\u628a\u7ecf\u8fc7\u7684\u8def\u5f84\u62c6\u6210\u94fe\n    while(_top[s]!=_top[t]){\n        _paths.push_back(Path(_seg[_top[t]], _seg[t]));\n        t=_fa[_top[t]];\n    }\n    _paths.push_back(Path(_seg[s],_seg[t]));\n}\ninline int Sum(int l, int r); //\u524d\u7f00\u548c\nint Solve(int s, int t){\n    _paths.clear();\n    set<Path> pathsSet;\n    queue<Node> q; q.push(Node(s,0,vector<Path>()));\n    for(Node now; !q.empty(); q.pop()){ //BFS\n        now=q.front();\n        now.updated++;\n        if(CanGo(now.pos,t)){ //\u80fd\u5230\u7ec8\u70b9\u5c31\u66f4\u65b0\u7b54\u6848\n            now.path.push_back(Path(now.pos,t));\n            for(Path p:now.path){\n                if(!pathsSet.count(p)){ //\u4f18\u5316\uff0c\u9632\u6b62\u4e00\u6761\u8def\u5f84\u88ab\u53cd\u590d\u6dfb\u52a0\n                    pathsSet.insert(p);\n                    Walk(p.u,p.v);\n                }\n            }\n            now.path.clear(); //\u5230\u7ec8\u70b9\u4e86\uff0c\u540e\u9762\u600e\u4e48\u8d70\u4e0e\u524d\u9762\u65e0\u5173\uff0c\u53ef\u4ee5\u5220\u4e86\u6765\u4f18\u5316\u65f6\u95f4\n        }\n        if(now.updated >= 5) continue; //\u8d85\u8fc7\u4e0a\u754c\u5c31\u8df3\u8fc7\n        for(int i=0; i<K; i++){ //\u6a21\u62df\u8d70\u8fc7\u4e34\u65f6\u9053\u8def\n            if(CanGo(now.pos, _tmp[i].u)){\n                vector<Path> newpath=now.path;\n                newpath.push_back(Path(now.pos, _tmp[i].u));\n                q.push(Node(_tmp[i].v,now.updated,newpath));\n            }\n        }\n    }\n    sort(_paths.begin(),_paths.end()); //\u6240\u6709\u533a\u95f4\u6309L\u6392\u5e8f\n    int r=0, sum=0;\n    for(Path p : _paths){ //\u8ba1\u7b97\u94fe\u6240\u5728\u533a\u95f4\u7684\u5e76\u96c6\uff0c\u5e76\u8ba1\u7b97\u7b54\u6848\n        if(p.v <= r) continue;\n        if(p.u <= r){\n            sum += Sum(r+1,p.v);\n        } else {\n            sum += Sum(p.u,p.v);\n        }\n        r=p.v;\n    }\n    return sum;\n}\n\nint main(){\n    Read();\n    RebuildGraph();\n    TreeSeperate();\n    int s,t;\n    while(Q--){\n        s=_team[read()],t=_team[read()];\n        for(int i=0; i<K; i++){\n            _tmp[i].u=_team[read()], _tmp[i].v=_team[read()];\n        }\n        printf(\"%d\\n\",Solve(s,t));\n    }\n    return 0;\n}\n```\n",
        "postTime": 1630235696,
        "uid": 130256,
        "name": "jia_shengyuan",
        "ccfLevel": 9,
        "title": "P7737\u9898\u89e3"
    }
]