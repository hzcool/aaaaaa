[
    {
        "content": "\u6c42\u8054\u901a\u5757\u90e8\u5206\u540c\uff0cdfs\u626b\n\n\u7136\u540e\u770b\u662f\u4e0d\u662f\u76f8\u4f3c\u7528\u4e86\u4e00\u79cd\u5f88\u795e\u5947\u7684\u65b9\u5f0f\uff1a\u6c42\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u52a0\u8d77\u6765\u3002\n\n\u7136\u540e\u53ef\u4ee5AC\u4e86\n\n```cpp\n/*\nID: ylx14271\nPROG: starry \nLANG: C++     \n*/\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint a[510][110];\nchar f[510][110];\n\nint x4[510][110],y4[510][110];\ndouble s[510];//\u8ddd\u79bb\u548c \nchar c[510];\nint n1,n2;\n\nint t[510];\nchar ch;\ndouble d(int x2,int y2,int x3,int y3)\n{\n    return sqrt((x2-x3)*(x2-x3)+(y2-y3)*(y2-y3));\n}\nint check(int h)//\u6c42\u8ddd\u79bb\n{\n    for (int i1=1;i1<=n2;i1++)\n        for (int j1=1;j1<=n2;j1++)\n        s[h]+=d(x4[n1][i1],y4[n1][i1],x4[n1][j1],y4[n1][j1]);\n    for (int ii=1;ii<n1;ii++)//\u662f\u5426\u5b58\u5728\u76f8\u540c\u7684\u56fe\u5f62\n        if (fabs(s[h]-s[ii])<=0.00001) return ii;\n    return 0;\n}\nvoid dfs(int x,int y)//dfs\u6807\u8054\u901a\u5757\n{\n    int xx,yy;\n    for (int i1=-1;i1<=1;i1++)\n        for (int j1=-1;j1<=1;j1++)\n        {\n            if (i1==0&&j1==0) continue;\n            xx=x+i1;yy=y+j1;\n            if (xx<=0||yy<=0||xx>n||yy>m||a[xx][yy]==0||f[xx][yy]!='0') continue;\n            f[xx][yy]=ch;.//\u6807\u8bb0\n            n2++;\n            x4[n1][n2]=xx;//\u628a\u8054\u901a\u5757n1\u7684\u6240\u6709\u70b9\u90fd\u5b58\u8d77\u6765\u7b97\u8ddd\u79bb\n            y4[n1][n2]=yy;\n            dfs(xx,yy);\n        }\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for (int i=1;i<=n;i++)//\u8bfb\u5165 \n        for (int j=1;j<=m;j++)\n        {\n            ch=getchar();\n            while (ch!='0'&&ch!='1') ch=getchar();\n            if (ch=='0') a[i][j]=0; else a[i][j]=1;\n        }\n    ch='a'-1;\n    memset(f,'0',sizeof(f));\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=m;j++)\n        if (f[i][j]=='0'&&a[i][j]==1) \n        {\n            n2=1,n1++;\n            x4[n1][n2]=i,y4[n1][n2]=j;//\u6807\u8bb0\u8d77\u6765\u6c42\u8ddd\u79bb \n            ch++;\n            c[n1]=ch;\n            f[i][j]=ch,dfs(i,j);\n            int flag=0;\n            flag=check(n1); \n            if (flag!=0)//\u5b58\u5728\u76f8\u540c\u7684\u8054\u901a\u5757\n            {\n                ch--;\n                for (int i1=1;i1<=n2;i1++) f[x4[n1][i1]][y4[n1][i1]]=c[flag];//\u4e00\u4e2a\u4e00\u4e2a\u70b9\u7684\u6539\u6807\u8bb0\n            } \n        }\n    //for (int i=1;i<=n1;i++) printf(\"%.4f \",s[i]); \n    //cout<<endl;\n    for (int i=1;i<=n;i++)//\u8f93\u51fa\n    {\n        for (int j=1;j<=m;j++) printf(\"%c\",f[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1499260794,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "USACO\u7684\u641c\u7d22\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u548c\u4e8c\u7ef4\u51f8\u5305\u626f\u4e0a\u5173\u7cfbQAQ\n\u521a\u770b\u5230\u8fd9\u9053\u9898\u65f6\u65e0\u4ece\u4e0b\u624b...\u8c8c\u4f3c\u5f88\u96be\u5440\uff0c~~\u5927\u6982\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3~~...**\u53d1\u73b0\u4e86\u4e00\u4e2a\u7384\u5b66\u5b9a\u7406:** *\u6bcf\u4e00\u4e2a\u70b9\u548c\u522b\u7684\u70b9\u7684\u8ddd\u79bb\u76f8\u52a0\uff0c\u4e00\u6837\u7684\u56fe\u5f62\u603b\u662f\u4e00\u6837\u7684*\n\nQAQ \u524d\u65b9~~\u6c34\u9898~~\u8b66\u544a\n\u63a5\u4e0b\u6765\u5c31\u7b80\u5355\u4e86...\n\n```pascal\nconst z:array[1..8,1..2]of -1..1=((1,0),(0,1),(-1,0),(0,-1),(1,1),(1,-1),(-1,1),(-1,-1));\nvar i,j,k:longint;\n    m,n:longint;\n    ans:array[0..101,0..101]of longint;\n    boo:array[0..101,0..101]of boolean;\n    num:array[0..501]of real;\n    sum2:array[0..501]of longint;\n    x,y:array[0..161]of longint;\n    lastx,lasty:array[0..501]of array[0..161]of longint;\n    sum,add:longint;\n    ch:char;\n    out:array[0..26]of char;\nprocedure same(p,q:longint);//\u7b2cp\u4e2a\u56fe\u5f62\u548c\u7b2cq\u4e2a\u56fe\u5f62\u5168\u7b49\uff0c\u4e14\u7b2cq\u4e2a\u56fe\u5f62\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7\nvar i:longint;\nbegin\n  for i:=1 to sum2[q] do \n  ans[lastx[q][i],lasty[q][i]]:=ans[lastx[p][1],lasty[p][1]];//\u628a\u7b54\u6848\u8d4b\u503c\u6210\u4e00\u6837\u7684\nend;\nprocedure new(p:longint);//\u7b2cp\u4e2a\u56fe\u5f62\u5728\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\nvar i:longint;\nbegin\n  inc(add);//\u79cd\u6570++\n  for i:=1 to sum2[p] do\n  ans[lastx[p][i],lasty[p][i]]:=add;//\u628a\u8be5\u56fe\u5f62\u8d4b\u503c\u6210\u8fd9\u4e2a\nend;\nfunction long(x1,y1,x2,y2:longint):real;//\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\nbegin\n  exit(sqrt(sqr(x1-x2)+sqr(y1-y2)));\nend;\nprocedure bfs(fx,fy:longint);//BFS\u6700\u559c\u6b22\u4e86\uff0c\u5176\u5b9edfs\u4e5f\u53ef\u4ee5\nvar i,j,k,h,t:longint;\n    have:boolean;\n    from:longint=0;\nbegin\n  h:=1;\n  t:=1;\n  x[1]:=fx;\n  y[1]:=fy;\n  boo[fx,fy]:=false;\n  repeat\n    for i:=1 to 8 do\n    if boo[x[t]+z[i,1],y[t]+z[i,2]] then\n    begin\n      inc(h);\n      x[h]:=x[t]+z[i,1];\n      y[h]:=y[t]+z[i,2];\n      boo[x[h],y[h]]:=false;\n    end;\n    inc(t);\n  until t>h;\n  inc(sum);\n  num[sum]:=0;\n  for i:=1 to h do\n  for j:=1 to h do\n  num[sum]:=num[sum]+long(x[i],y[i],x[j],y[j]);//\u8ba1\u7b97\u51fa\u4e00\u4e2a\u70b9\u548c\u522b\u7684\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\n  lastx[sum]:=x;//\u628a\u7ecf\u8fc7\u7684\u4f4d\u7f6e\u4fdd\u7559\u4e0b\u6765\n  lasty[sum]:=y;\n  have:=false;\n  sum2[sum]:=h;\n  for i:=1 to sum-1 do\n  if abs(num[i]-num[sum])<0.0001 then//\u5229\u7528\u8fd9\u4e2a\u5b9a\u7406\u5224\u65ad\u8fd9\u4e24\u4e2a\u56fe\u5f62\u5168\u7b49\n  begin\n  same(i,sum);\n  have:=true;\n  from:=i;\n  break;\n  end;\n  if not have then new(sum);//\u5728\u4e4b\u524d\u6ca1\u6709\u5168\u7b49\u7684\u56fe\u5f62\nend;\nbegin\n  readln(n);\n  readln(m);\n  for i:=1 to m do\n  begin\n    for j:=1 to n do\n    begin\n      read(ch);\n      if ch='1' then boo[i,j]:=true;\n    end;\n    readln;\n  end;\n  for i:=1 to m do\n  for j:=1 to n do\n  if boo[i,j] then\n  bfs(i,j);\n  out[0]:='0';//\u8fd9\u6837\u8f93\u51fa\u7b80\u5355\n  for i:=1 to 26 do out[i]:=chr(i+96);\n  for i:=1 to m do\n  begin\n    for j:=1 to n do write(out[ans[i,j]]);//QAQ\n    writeln;\n  end;\nend.\n```\n\u5076\u5c14\u80cc\u4e00\u4e9b\u5b9a\u7406\u5bf9\u4e8e\u505a\u9898\u8fd8\u662f\u6709\u597d\u5904\u7684QAQ",
        "postTime": 1549348605,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u641c\u7d22\u90e8\u5206\u5c31\u4e0d\u8bf4\u4e86\uff0c\u611f\u89c9\u4e5f\u5c31\u666e\u53ca\u7ec4\u7684\u641c\u7d22\u96be\u5ea6\u2026\u2026  \n\n\u8fd8\u662f\u6765\u8bf4\u8bf4\u5224\u56fe\u5f62\u5168\u7b49\u5427\uff01  \n\n\u770b\u5230\u4e4b\u524d\u5927\u4f6c\u4eec\u7684\u7528\u8ddd\u79bb\u4e4b\u548c\u5224\u5168\u7b49\u7684\u65b9\u6cd5\uff0c\u611f\u89c9\u5bf9\u6211\u8fd9\u7b49\u849f\u84bb\u597d\u7384QAQ  \n\n\u7136\u800c\u5224\u5168\u7b49\u8fd8\u6709\u4e00\u4e2a\u66f4\u597d\u60f3\u7684\u601d\u8def  \n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u56fe\u5f62\uff08\u4e0d\u8003\u8651\u65cb\u8f6c\uff09\uff0c\u5c06\u5176\u4e2d\u6240\u6709\u70b9\u6309\u7eb5\u5750\u6807\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u6a2a\u5750\u6807\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u540e\uff0c\u5f97\u5230\u4e86\u552f\u4e00\u7684\u4e00\u4e2a\u683c\u70b9\u5e8f\u5217\u3002  \n\n\u800c\u5f53\u4e24\u4e2a\u56fe\u5f62\u5168\u7b49\u4e14\u65b9\u5411\u76f8\u540c\u65f6\uff0c\u5176\u5bf9\u5e94\u70b9\u4e4b\u95f4\u7684\u6a2a\u7eb5\u5750\u6807\u5dee\u90fd\u662f\u76f8\u7b49\u7684\u3002\u663e\u7136\u6392\u8fc7\u5e8f\u7684\u70b9\u4e00\u4e00\u5bf9\u5e94\uff0c\u56e0\u6b64\u53ea\u8981\u8ba1\u7b97\u5404\u5bf9\u5e94\u70b9\u95f4\u6a2a\u7eb5\u5750\u6807\u5dee\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\u5bf9\u4e8e\u65cb\u8f6c\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u8981\u5c06\u5176\u4e2d\u4e00\u4e2a\u56fe\u5f62\u7ed5$x$\u8f74\u3001$y$\u8f74\u548c\u5bf9\u89d2\u7ebf\u8fdb\u884c\u7ffb\u8f6c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7684\u516b\u79cd\u60c5\u51b5\u3002\u5bf9\u6bcf\u79cd\u60c5\u51b5\u4e00\u4e00\u5224\u65ad\u5c31\u884c\u4e86\u3002  \n\n\u4ee3\u7801\u91cf\u7565\u5927\uff0c\u4f46\u57fa\u672c\u662f\u65e0\u8111\u590d\u5236\uff0c\u601d\u7ef4\u590d\u6742\u5ea6\u76f8\u6bd4\u5176\u4ed6\u5224\u91cd\u65b9\u6cd5\u660e\u663e\u4e0b\u964d\u3002\u540c\u65f6\u5355\u6b21\u5224\u65ad\u7684\u590d\u6742\u5ea6\u7531$\\Theta(n^2)$($n$\u6307\u5355\u4e2a\u661f\u5ea7\u5185\u7684\u70b9\u6570)\u4e0b\u964d\u5230\u4e86$\\Theta(nlogn)$\uff08\u5e38\u6570\u5de8\u5927\uff01\uff09\uff0c\u8fd8\u6ca1\u6709\u7cbe\u5ea6\u95ee\u9898\uff08\u6211\u4eec\u73ed\u6709\u4eba\u7528$sqrt$\u7206\u7cbe\u5ea6\u4e86\uff09\uff0c\u4e0d\u4f1a\u649e\u54c8\u5e0c\uff08\u6211\u4eec\u73ed\u6709\u4eba\u8003\u8bd5\u4ee3\u7801\u54c8\u5e0c\u51b2\u7a81GG\uff09\uff0c\u771f\u7684\u597d\u5403\u7684\u4e00\u6279\u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e  \n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nchar readchar()\n{\n    char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    return c;\n}\nstruct syt//\u5c31\u662fpair,\u4e00\u5f00\u59cb\u6ca1\u6253using namespace std,CE,\u4e8e\u662f\u624b\u5199\uff08\u4e0d\u8981\u95ee\u6211\u8fd9\u662f\u8c01\u7684\u540d\u5b57\uff09\n{\n    char first,second;\n    syt(char aa=0,char bb=0):first(aa),second(bb) {}\n    bool operator<(syt b)\n    {\n        if(first!=b.first)return first<b.first;\n        return second<b.second;\n    }\n};\nchar skymap[105][105];\nint dx[8]={-1,0,1,-1,1,-1,0,1};\nint dy[8]={1,1,1,0,0,-1,-1,-1};\nstruct clu//\u7ed3\u6784\u4f53\u5b58\u661f\u5ea7\u8212\u670d\n{\n    int size;//\u8bb0\u5f55\u661f\u661f\u4e2a\u6570\n    syt shape[170];//\u5b58\u4e0b\u661f\u5ea7\u4e2d\u6240\u6709\u661f\u661f\n    void clear(){size=0;}\n};\nclu temp;\nbool cmp(clu a,clu b)//\u5224\u65ad\u4e24\u56fe\u5f62\u662f\u5426\u4e92\u4e3a\u5e73\u79fb\u5173\u7cfb\n{\n    int s=a.size;\n    int xx=a.shape[0].first-b.shape[0].first;//\u4e24\u56fe\u6a2a\u5750\u6807\u5dee\n    int yy=a.shape[0].second-b.shape[0].second;//\u4e24\u56fe\u7eb5\u5750\u6807\u5dee\n    for(int i=0;i<s;++i)\n    {\n        if(a.shape[i].first-b.shape[i].first!=xx)return 0;//\u76f4\u63a5\u626b\u4e00\u904d\n        if(a.shape[i].second-b.shape[i].second!=yy)return 0;\n    }\n    return 1;\n}\nbool operator==(clu a,clu b)//\u5224\u65ad\u4e24\u56fe\u5f62\u662f\u5426\u5168\u7b49\n{\n    if(a.size!=b.size)return 0;//\u5148\u770b\u662f\u4e0d\u662f\u4e00\u6837\u5927\n    bool f=0;\n    int s=a.size;\n    sort(a.shape,a.shape+s);//x,y //\u6ca1\u6709\u65cb\u8f6c\u3001\u5bf9\u79f0\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].first=-b.shape[i].first;//-x,y //\u5173\u4e8ey\u8f74\u5bf9\u79f0\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].second=-b.shape[i].second;//-x,-y //\u4e0b\u540c\uff0c\u76f4\u5230\u679a\u4e3e\u5b8c8\u79cd\u60c5\u51b5\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].first=-b.shape[i].first;//x,-y\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)swap(b.shape[i].first,b.shape[i].second);//-y,x\n    sort(b.shape,b.shape+s);\n    f|=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].first=-b.shape[i].first;//y,x\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].second=-b.shape[i].second;//y,-x\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    for(int i=0;i<s;++i)b.shape[i].first=-b.shape[i].first;//-y,-x\n    sort(b.shape,b.shape+s);\n    f=cmp(a,b);\n    if(f)return 1;\n    return 0;\n}\nbool check1(int x,int y)\n{\n    return x<0||x>=n||y<0||y>=m||skymap[x][y]!='1';//\u4e3a\u7b2c\u4e00\u904d\u641c\u7d22\u5224\u65ad\n}\nbool check2(int x,int y)\n{\n    return x<0||x>=n||y<0||y>=m||skymap[x][y]!='2';//\u4e3a\u7b2c\u4e8c\u904d\u641c\u7d22\u5224\u65ad\n}\nvoid dfs1(int x,int y)\n{\n    skymap[x][y]='2';//\u67d3\u8272\u6807\u8bb0\u5df2\u641c\u8054\u901a\u5757\n    temp.shape[temp.size++]=syt(x,y);//\u5c06\u5f53\u524d\u70b9\u52a0\u5165\u4e34\u65f6\u661f\u5ea7temp\u4e2d\n    for(int j=0;j<8;++j)\n        {\n            if(check1(x+dx[j],y+dy[j]))continue;\n            dfs1(x+dx[j],y+dy[j]);\n        }\n}\nvoid dfs2(int x,int y,char nm)//\u7528\u4e8e\u5c06\u8054\u901a\u5757\u53d8\u6210\u5bf9\u5e94\u7684\u5b57\u6bcd\n{\n    skymap[x][y]=nm;\n \u00a0 \u00a0temp.shape[temp.size++]=syt(x,y);//\u4f9d\u7136\u8981\u52a0\u5165temp\uff0c\u4ee5\u4fbf\u8bb0\u5f55\u65b0\u7684\u661f\u5ea7\n    for(int j=0;j<8;++j)\n        {\n            if(check2(x+dx[j],y+dy[j]))continue;\n            dfs2(x+dx[j],y+dy[j],nm);\n        }\n}\nclu sim[26];//\u8bb0\u5f55\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u661f\u5ea7\nchar totnm='a';\nint tot;\nint main()\n{\n    scanf(\"%d%d\",&m,&n);//\u6ce8\u610f\u987a\u5e8f\uff01\n    for(int i=0;i<n;++i)\n        for(int j=0;j<m;++j)\n            skymap[i][j]=readchar();\n    for(int i=0;i<n;++i)\n        for(int j=0;j<m;++j)\n        {\n            if(skymap[i][j]=='1')\n            {\n                temp.size=0;\n                dfs1(i,j);\n                bool f=0;//\u8bb0\u5f55\u662f\u5426\u6709\u91cd\u590d\n                for(int k=0;k<tot;++k)\n                {\n                    if(sim[k]==temp)//\u5224\u65ad\u56fe\u5f62\u662f\u5426\u5168\u7b49\n                    {\n                        temp.size=0;//\u91cd\u7f6e\u4e34\u65f6\u661f\u5ea7\n                        f=1;\n                        dfs2(i,j,'a'+k);//\u67d3\u6210\u5bf9\u5e94\u7684\u540d\u5b57\n                        break;\n                    }\n                }\n                if(!f)\n                {\n                    temp.size=0;\n                    dfs2(i,j,'a'+tot);\n                    sim[tot++]=temp;//\u53d1\u73b0\u65b0\u7684\u661f\u5ea7\uff0c\u5219\u52a0\u5165\u5df2\u77e5\u661f\u5ea7\u4e2d\n                }\n            }\n        }\n    for(int i=0;i<n;++i)puts(skymap[i]);\n}\n```\n\n~~\u4f9d\u7136\u611f\u89c9\u8fd9\u9898\u84dd\u5f97\u6709\u70b9\u8fc7\u5206~~",
        "postTime": 1548056325,
        "uid": 60489,
        "name": "\u5c0f\u83dc\u9e1f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P2749"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u53ef\u4ee5\u8bf4\u662f\u57ce\u5821\u7684\u5347\u7ea7\u7248\uff0c\u8fd8\u8981\u5224\u65ad\u662f\u5426\u65cb\u8f6c\n\n\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u96be\u70b9\n\n\u66b4\u529b\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5f88\u9ebb\u70e6\n\n\u4f18\u5316\u4e00\u4e0b\uff1a\n\n\u6bcf\u4e00\u4e2a\u70b9\u548c\u522b\u7684\u70b9\u7684\u8ddd\u79bb\u76f8\u52a0\uff0c\u4e00\u6837\u7684\u56fe\u5f62\u603b\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4e2a\u6211\u4eec\u5965\u6570\u8001\u5e08\u597d\u50cf\u8bb2\u8fc7\n\n\u6700\u540e\u5224\u65ad\u4e00\u4e0b\uff0c\u6ce8\u610f\u8bef\u5dee\uff0c\u5982\u679c\u662f\u5728\u6bd4\u8d5b\u91cc\u9762\uff0c\u5c31\u6700\u597d\u628a\u5e26\u6839\n\n\u53f7\u7684\u5355\u72ec\u7528\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u6837\u624d\u4fdd\u9669\u70b9\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint cnt;//\u661f\u5ea7\u7684\u5927\u5c0f \n\tint x[210],y[210];//\u6bcf\u4e00\u4e2a\u70b9\u7684\u5750\u6807 \n\tint zuji;//\u7956\u7c4d\uff0c\u8bb0\u5f55\u662f\u54ea\u4e00\u79cd\u661f\u5ea7 \n\tdouble s;//\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u4e0e\u522b\u7684\u70b9\u7684\u8ddd\u79bb\u603b\u548c \n}f[510];//\u8bb0\u5f55\u661f\u5ea7 \nint len,now;//len\u8868\u793af\u7684\u957f\u5ea6\uff0cnow\u8868\u793a\u73b0\u5728\u661f\u5ea7\u7684\u6570\u91cf \nint n,m;\nbool a[110][110];//\u8fd9\u4e2a\u70b9\u662f\u5426\u6709\u5929\u4f53 \nint bk[110][110];//bk\u8bb0\u5f55\u8fd9\u4e00\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e00\u4e2af\u96c6\u5408 \ninline int _(int x){return x*x;}\ninline double find(int x1,int y1,int x2,int y2)//\u67e5\u627e\u8ddd\u79bb \n{\n\treturn sqrt(double(_(x1-x2)+_(y1-y2)));\n}\ninline int check(int k)\n{\n\tint i,j;f[len].s=0.0;\n\tfor(i=1;i<=f[k].cnt;i++) for(j=1;j<=f[k].cnt;j++) f[len].s=f[len].s+find(f[len].x[i],f[len].y[i],f[len].x[j],f[len].y[j]);//\u67e5\u627e\u8ddd\u79bb \n\tfor(i=1;i<k;i++)\n\t{\n\t\tif(fabs(f[i].s-f[k].s)<=0.00001)//\u5982\u679c\u662f\u540c\u4e00\u661f\u5ea7\uff08\u4e0d\u662f\u5f88\u4fdd\u9669\uff09 \n\t\t{\n\t\t\treturn f[i].zuji;//\u8fd4\u8fd8 \n\t\t}\n\t}\n\treturn 0;//\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u661f\u5ea7 \n}\nvoid dfs(int x,int y)//\u5bbd\u641c\u7684\u6570\u7ec4\u6709\u4e9b\u9ebb\u70e6\uff0c\u5c31\u8981dfs\u5427\uff0c\u65f6\u95f4\u5dee\u4e0d\u591a \n{\n\tint t=++f[len].cnt,xx,yy;\n\tf[len].x[t]=x;f[len].y[t]=y;\n\tbk[x][y]=len;\n\tfor(int i=-1;i<=1;i++)//\u5468\u56f4\u7684\u5929\u4f53 \n\t{\n\t\tfor(int j=-1;j<=1;j++)\n\t\t{\n\t\t\tif(i==j && i==0) continue;//\u4e0d\u80fd\u662f\u81ea\u5df1 \n\t\t\txx=x+i;yy=y+j;\n\t\t\tif(xx>=1 && xx<=n && yy>=1 && yy<=m)//\u6ca1\u6709\u5dee\u8ddd \n\t\t\t{\n\t\t\t\tif(a[xx][yy]==true)//\u5982\u679c\u6709\u5929\u4f53 \n\t\t\t\t{\n\t\t\t\t\tif(bk[xx][yy]==0)//\u5982\u679c\u8fd9\u4e2a\u5929\u4f53\u6ca1\u6709\u8bb0\u5f55\u8fc7 \n\t\t\t\t\t{\n\t\t\t\t\t\tdfs(xx,yy);//\u5f80\u4e0b\u641c\u7d22 \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tint i,j,t;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%1d\",&t);//\u4ec5\u8f93\u5165\u4e00\u4e2a\u6570 \n\t\t\tif(t==1) a[i][j]=true;\n\t\t\telse\t a[i][j]=false;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)//\u66b4\u529b\u641c\u4e00\u904d \n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]==true && bk[i][j]==0)//\u5982\u679c\u6709\u5929\u4f53\uff0c\u5e76\u4e14\u6ca1\u6709\u8bb0\u5f55\u8fc7\uff0c \n\t\t\t{\n\t\t\t\tlen++;//\u957f\u5ea6+1 \n\t\t\t\tdfs(i,j);//\u4ee5\u8fd9\u4e00\u4e2a\u70b9\u4f4d\u8d77\u70b9\u641c\u7d22\u4e00\u4e0b \n\t\t\t\tt=check(len);//\u68c0\u67e5 \n\t\t\t\tif(t==0)//\u5982\u679c\u662f\u4e00\u79cd\u65b0\u7684\u5929\u4f53 \n\t\t\t\t{\n\t\t\t\t\tnow++;\n\t\t\t\t\tf[len].zuji=now;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf[len].zuji=t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)//\u8f93\u51fa \n\t{\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]==false) printf(\"0\");\n\t\t\telse printf(\"%c\",f[bk[i][j]].zuji+'a'-1);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1527252353,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u70e6\u5f88\u66b4\u529b\u3002\u3002\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u66b4\u529b\u704c\u6c34\u641c\u51fa\u6bcf\u5f20\u5b50\u56fe\uff0c\u5e76\u4e14\u5224\u91cd\u3002\n\n\u6837\u4f8b\u5f88\u5b8c\u5584\u4e86\uff0c\u5224\u91cd\u9700\u8981\u8003\u8651\u65cb\u8f6c\u548c\u5bf9\u79f0\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u5b50\u7a0b\u5e8f\u89e3\u51b3\n\nTIP\uff1asizex,sizey\u8868\u793a\u5b50\u56fe\u7684\u5927\u5c0f\uff0cmap\u63cf\u8ff0\u5b50\u56fe\n\n\u65cb\u8f6c\uff1a\n\n```cpp\ninline node xz(node graph)\n{\n    node cha;\n    cha.sizex=graph.sizey;\n    cha.sizey=graph.sizex;\n    for(int i=1;i<=cha.sizex;i++)\n        for(int j=1;j<=cha.sizey;j++)\n        {\n            cha.map[i][j]=graph.map[j][graph.sizey-i+1];\n        }\n    return cha;\n}\n```\n\u5bf9\u79f0\uff1a\n```cpp\ninline node fz(node graph)\n{\n    node cha;\n    cha.sizex=graph.sizex;\n    cha.sizey=graph.sizey;\n    for(int i=1;i<=cha.sizex;i++)\n        for(int j=1;j<=cha.sizey;j++)\n            cha.map[i][j]=graph.map[graph.sizex-i+1][j];\n    return cha;\n}\n```\n\u7136\u540e\u5224\u65ad\u91cd\u590d\u5373\u53ef\u3002\n\u8981\u6ce8\u610f\uff0c\u704c\u6c34\u7684\u65f6\u5019\u9700\u8981\u4e24\u6b21DFS,\u7b2c\u4e00\u6b21\u6c42\u51fa\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\uff0c\u7b2c\u4e8c\u6b21\u67d3\u8272\u5e76\u8bb0\u5f55\u5b50\u56fe\n\n\u4e0b\u9762\u9644\u4ee3\u7801\uff1a\n\n            \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int map[101][101];\n    int sizex,sizey;\n}stmap;\nint tmp[101][101];\nint n,m,tot=0,cnt=0;\nint kind[101][101];\nnode save[30];\nint mx,my;\nint num[1000];\nint dx[9]={0,0,1,0,-1,1,1,-1,-1};\nint dy[9]={0,1,0,-1,0,-1,1,-1,1};\nint vis[101][101],st[101][101];\nstring s;\nint x,y;\ninline void dfs(int yx,int yy,int k)\n{\n    vis[yx][yy]=1;\n    kind[yx][yy]=k;x=min(yx,x);y=min(yy,y);\n    mx=max(yx,mx);my=max(yy,my);\n    for(int i=1;i<=8;i++)\n    {\n        int tx=yx+dx[i];int ty=yy+dy[i];\n        if(tx<1||tx>n||ty<1||ty>m)    continue;\n        if(!vis[tx][ty]&&st[tx][ty])    dfs(tx,ty,k);\n    }\n}\ninline void dfs1(int yx,int yy,int k)\n{\n    vis[yx][yy]=2;\n    for(int i=1;i<=8;i++)\n    {\n        int tx=yx+dx[i];int ty=yy+dy[i];\n        if(tx<1||tx>n||ty<1||ty>m)    continue;\n        if((vis[tx][ty]==1)&&st[tx][ty])    dfs1(tx,ty,k);\n    }\n    stmap.map[yx-x+1][yy-y+1]=1;\n}\ninline void out(node graph)\n{\n    for(int i=1;i<=graph.sizex;i++)\n    {\n        for(int j=1;j<=graph.sizey;j++)\n            cout<<graph.map[i][j];\n        cout<<endl;\n    }\n    cout<<endl;\n}\ninline node xz(node graph)\n{\n    node cha;\n    cha.sizex=graph.sizey;\n    cha.sizey=graph.sizex;\n    for(int i=1;i<=cha.sizex;i++)\n        for(int j=1;j<=cha.sizey;j++)\n        {\n            cha.map[i][j]=graph.map[j][graph.sizey-i+1];\n        }\n    return cha;\n}\ninline node fz(node graph)\n{\n    node cha;\n    cha.sizex=graph.sizex;\n    cha.sizey=graph.sizey;\n    for(int i=1;i<=cha.sizex;i++)\n        for(int j=1;j<=cha.sizey;j++)\n            cha.map[i][j]=graph.map[graph.sizex-i+1][j];\n    return cha;\n}\ninline bool dif(node map1,node map2)\n{\n    if(map1.sizex!=map2.sizex||map1.sizey!=map2.sizey)\n        return 0;\n    for(int i=1;i<=map1.sizex;i++)\n        for(int j=1;j<=map1.sizey;j++)\n            if (map1.map[i][j]!=map2.map[i][j])    return 0;\n    return 1;\n}\ninline bool check(node map1,node map2)\n{\n    node tmap=map2;\n    for(int i=1;i<=4;i++)\n    {\n        if(dif(map1,tmap))    return 1;\n        tmap=xz(tmap);\n    }    \n    tmap=fz(map2);\n    for(int i=1;i<=4;i++)\n    {\n        if(dif(map1,tmap))    return 1;\n        tmap=xz(tmap);\n    }    \n    return 0;\n}\ninline void solve(node stmap,int cnt)\n{\n    for(int i=1;i<=tot;i++)\n    {\n        if(check(save[i],stmap))\n        {\n            num[cnt]=i;\n            return;\n        }\n    }\n    tot++;\n    save[tot]=stmap;\n    num[cnt]=tot;\n}\nint main()\n{\n    cin>>m>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s;\n        for(int j=0;j<=m-1;j++)\n            if(s[j]=='1')    st[i][j+1]=1;else st[i][j+1]=0;\n    }\n    for(int i=1;i<=n;i++)    for(int j=1;j<=m;j++)    vis[i][j]=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(st[i][j]&&!vis[i][j])\n            {\n                stmap.sizex=stmap.sizey=1;\n                cnt++;\n                x=i;y=j;\n                mx=0;my=0;\n                dfs(i,j,cnt);\n                dfs1(i,j,cnt);\n                stmap.sizex=mx-x+1;stmap.sizey=my-y+1;\n                //for(int i=x;i<=x+stmap.sizex;i++)    for(int j=y;j<=y+stmap.sizey;j++)    stmap.map[i-x+1][j-y+1]=tmp[i][j];\n                //out(stmap);\n                solve(stmap,cnt);    for(int ii=1;ii<=mx;ii++)    for(int jj=1;jj<=my;jj++)    stmap.map[ii][jj]=0;\n            }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            if(st[i][j])\n                printf(\"%c\",num[kind[i][j]]+'a'-1);\n                else printf(\"0\");\n        printf(\"\\n\");\n    }\n}\n```",
        "postTime": 1486105033,
        "uid": 19028,
        "name": "VCVCVCFop_zz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u9898\u89e3\u90a3\u4e48\u5c11\uff0c\u53d1\u4e2a\u4e00\u4efd\n\n\n\u849f\u84bb\u9898\u89e3\uff0c\u53ef\u80fd\u6709\u5f88\u591a\u4e1c\u897f\u4e0d\u9700\u8981\uff0c\u5927\u7287\u4e0d\u8981\u592a\u8ba1\u8f83\u4e86\n\n\n\u5148\u7528\u704c\u6c34\u704c\u51fa\u8054\u901a\u5757\uff0c\u53d6\u51fa\u6574\u4e2a\u77e9\u9635\uff0c\u7136\u540e\u7528HASH\u5224\u91cd\uff08\u8fd9\u6b65\u5360\u4e86\u4e00\u534a\u957f\u5ea6\uff09\uff0c\u5982\u679c\u6ca1\u51fa\u73b0\u5c31\u65cb\u8f6c8\u6b21\u52a0\u5165\n\n\n\u66ff\u6362\u65f6\u76f4\u63a5\u66ff\u6362\u6389\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u77e9\u9635\u91cc\u5176\u4ed6\u8fde\u901a\u5757\u90e8\u5206\u4e0d\u80fd\u53d6\u51fa\uff08\u75280\u5360\u4f4d\uff09\n\n\n    \n    \n    \n    \n    \n    \n    \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool b[105][105];\nchar ch[105][105];\nint i,j,n,m,mx,my,sx,sy;\nchar x,k;\nint dx[9]={0,1,1,1,-1,-1,-1,0,0};\nint dy[9]={0,0,1,-1,0,1,-1,1,-1};\nstring hash[80005];\nint kuan[80005];\nchar c[80005];\nvoid get(int x,int y)//\u704c\u6c34\u8fde\u901a\u5757\n{\n    if(b[x][y])return;\n    mx=max(x,mx);\n    my=max(y,my);\n    sx=min(sx,x);\n    sy=min(sy,y);\n    b[x][y]=true;\n    for(int i=1;i<=8;i++){\n        int tx=dx[i]+x;\n        int ty=dy[i]+y;\n        if(ch[tx][ty]=='1')get(tx,ty);\n    }\n    return;\n}\nvoid addto()//\u52a0\u51658\u79cd\u60c5\u51b5\n{\n    k++;\n    string s;\n    s.clear();\n    for(int i=sx;i<=mx;i++)\n        for(int j=sy;j<=my;j++)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    int z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=mx-sx;\n    s.clear();\n    for(int i=mx;i>=sx;i--)\n        for(int j=sy;j<=my;j++)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=mx-sx;\n    s.clear();\n    for(int i=sx;i<=mx;i++)\n        for(int j=my;j>=sy;j--)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=mx-sx;\n    s.clear();\n    for(int i=mx;i>=sx;i--)\n        for(int j=my;j>=sy;j--)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=mx-sx;\n    s.clear();\n    for(int j=sy;j<=my;j++)\n        for(int i=sx;i<=mx;i++)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=my-sy;\n    s.clear();\n    for(int j=sy;j<=my;j++)\n        for(int i=mx;i>=sx;i--)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=my-sy;\n    s.clear();\n    for(int j=my;j>=sy;j--)\n        for(int i=sx;i<=mx;i++)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    c[z]=k;\n    kuan[z]=my-sy;\n    s.clear();\n    for(int j=my;j>=sy;j--)\n        for(int i=mx;i>=sx;i--)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\")z=z%80000+1;\n    hash[z]=s;\n    kuan[z]=my-sy;\n    c[z]=k;\n    return;\n}\nchar pd()//\u5224\u65ad\u662f\u4e0d\u662f\u5df2\u51fa\u73b0\u8fc7\n{\n    string s;\n    s.clear();\n    for(int i=sx;i<=mx;i++)\n        for(int j=sy;j<=my;j++)\n            if(b[i][j]&&ch[i][j]=='1'||ch[i][j]=='0')s=s+ch[i][j];\n            else s=s+'0';\n    int z=0;\n    for(int i=0;i<=s.length()-1;i++)\n        z=(z*26+s[i]-'0')%80000+1;\n    while(hash[z]!=\"!\"&&(hash[z]!=s||kuan[z]!=mx-sx))z=z%80000+1;\n    if(hash[z]==\"!\")addto();\n//    cout<<s<<' '<<c[z]<<endl;\n    return c[z];\n}\nvoid change(char x)//\u6539\u53d8\u77e9\u9635\n{\n    for(int i=sx;i<=mx;i++)\n        for(int j=sy;j<=my;j++)\n            if(b[i][j]){\n                ch[i][j]=x;\n                b[i][j]=false;\n            }\n    return;\n}\nint main()\n{\n    std::ios::sync_with_stdio(false);//\u52a0\u5febcin,cout\u901f\u5ea6\n    cin>>n>>m;\n    for(int i=1;i<=80004;i++)hash[i]=\"!\";\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            cin>>ch[i][j];\n    k='a'-1;\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            if(ch[i][j]=='1'){\n                mx=my=0;\n                sx=sy=10000;\n                get(i,j);\n                x=pd();\n                change(x);\n            }\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++)\n            cout<<ch[i][j];\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1486099983,
        "uid": 34604,
        "name": "\u5c0f\u624b\u51b0\u51c9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e2a\u70b9\u96c6\u7684\u6709\u5411\u54c8\u5e0c\uff1a\n\n - \u53eb\u70b9\u96c6\u7684 $x$ \u6700\u5c0f\u503c\u4e3a $m_x$\uff0c$y$ \u6700\u5c0f\u503c\u4e3a $m_y$\uff1b\n - \u6784\u9020\u4e00\u4e2a\u5e8f\u5217 $[x_0-m_x,y_0-m_y,x_1-m_x,y_1-m_y,\\dots]$\uff0c\u628a\u8fd9\u4e2a\u5e8f\u5217\u968f\u4fbf\u54c8\u5e0c\u3002\n\n\u518d\u5b9a\u4e49\u4e00\u4e2a\u70b9\u96c6\u7684\u65e0\u5411\u54c8\u5e0c\uff1a\n\n - \u7b97\u51fa\u6765 8 \u4e2a\u54c8\u5e0c\u503c\uff1a\n \t1. \u539f\u70b9\u96c6\u7684\u54c8\u5e0c\n    2. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u7684\u54c8\u5e0c\n    3. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 180 \u5ea6\u7684\u54c8\u5e0c\n    4. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 270 \u5ea6\u7684\u54c8\u5e0c\n    5. \u539f\u70b9\u96c6\u6a2a\u5750\u6807\u7ffb\u8fc7\u6765\u7684\u54c8\u5e0c\n    6. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u6a2a\u5750\u6807\u7ffb\u8fc7\u6765\u7684\u54c8\u5e0c\n    7. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 180 \u5ea6\u6a2a\u5750\u6807\u7ffb\u8fc7\u6765\u7684\u54c8\u5e0c\n    8. \u539f\u70b9\u96c6\u987a\u65f6\u9488\u65cb\u8f6c 270 \u5ea6\u6a2a\u5750\u6807\u7ffb\u8fc7\u6765\u7684\u54c8\u5e0c\n  - \u65e0\u5411\u54c8\u5e0c\u7b49\u4e8e\u8fd9\u516b\u4e2a\u54c8\u5e0c\u91cc\u9762\u7684\u6700\u5c0f\u503c\u3002\n\n\u73b0\u5728\u5c31\u5f88\u8f7b\u677e\u4e86\uff0c\u505a dfs \u6765\u7edf\u8ba1\u6240\u6709\u8fde\u901a\u5757\u7684\u683c\u5b50\u5750\u6807\uff0c\u5bf9\u6240\u6709\u5750\u6807\u70b9\u96c6\u7b97\u51fa\u6765\u65e0\u5411\u54c8\u5e0c\uff0c\u7528\u65e0\u5411\u54c8\u5e0c\u5224\u65ad\u4e24\u4e2a\u8fde\u901a\u5757\u662f\u5426\u76f8\u540c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n \n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst ll MOD = 1000000000039ll;\n\nvector<pii> dt;\nll hazh() {\n    ll ans = 0;\n    for(pii& v:dt) {\n        ans = (ans * (157 + v.fi) + 1 + v.fi) % MOD;\n        ans = (ans * (163 + v.se) + 1 + v.se) % MOD;\n    }\n    return ans;\n}\nvoid rotate() {\n    int mxy = 0;\n    for(pii& v:dt) mxy = max(mxy, v.se);\n    for(pii& v:dt) {\n        int ps = v.se;\n        v.se = v.fi;\n        v.fi = mxy-ps;\n    }\n    sort(all(dt));\n}\nvoid flip() {\n    int mxx = 0;\n    for(pii& v:dt) mxx = max(mxx, v.fi);\n    for(pii& v:dt) v.fi = mxx-v.fi;\n    sort(all(dt));\n}\nll canonise() {\n    int mx = 105, my = 105;\n    for(pii& v:dt) {\n        mx = min(mx, v.fi);\n        my = min(my, v.se);\n    }\n    for(pii& v:dt) {\n        v.fi -= mx;\n        v.se -= my;\n    }\n    sort(all(dt));\n    ll h1 = hazh();\n    rotate();\n    ll h2 = hazh();\n    rotate();\n    ll h3 = hazh();\n    rotate();\n    ll h4 = hazh();\n    rotate();\n    flip();\n    ll h5 = hazh();\n    rotate();\n    ll h6 = hazh();\n    rotate();\n    ll h7 = hazh();\n    rotate();\n    ll h8 = hazh();\n    return min(min(min(h1, h2), min(h3, h4)), min(min(h5, h6), min(h7, h8)));\n}\n\nmap<ll, char> canon;\nint n, m;\nchar may[105][105];\nint ans[105][105];\nchar ltkid[505];\n\nconst int dx[8] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst int dy[8] = {1, 1, 0, -1, -1, -1, 0, 1};\n\nvoid dfs(int x, int y, int rx, int ry, int ltk) {\n    may[x][y] = '0';\n    ans[x][y] = ltk;\n    dt.pb({rx, ry});\n    rep(d, 8) {\n        int nx = x+dx[d], ny = y+dy[d];\n        if(0 <= nx && nx < n && 0 <= ny && ny < m && may[nx][ny] == '1')\n            dfs(nx, ny, rx+dx[d], ry+dy[d], ltk);\n    }\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    cin >> m >> n;\n    rep(i, n) rep(j, m) {\n        cin >> may[i][j];\n        ans[i][j] = 0;\n    }\n    ltkid[0] = '0';\n    int ltk = 1;\n    char ggg = 'a';\n    rep(i, n) rep(j, m) if(may[i][j] == '1') {\n        dt.clear();\n        dfs(i, j, 0, 0, ltk++);\n        ll hz = canonise();\n        if(canon.count(hz) == 0) canon[hz] = ggg++;\n        ltkid[ltk-1] = canon[hz];\n    }\n    rep(i, n) {\n        rep(j, m) cout << ltkid[ans[i][j]];\n        cout << endl;\n    }\n}\n\n```",
        "postTime": 1594013318,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2749"
    },
    {
        "content": "```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar ss[501],KD[501][501],ch,c[501];\ndouble ans,jay[501];\nint i,j,k,ii,xx1,xx2,yy1,yy2,ii1,jj1,n,m,a[501][501],now/*\u661f\u5ea7\u7684\u6570\u91cf*/,sum/*\u8fd9\u4e2a\u56fe\u5f62\u6709\u51e0\u4e2a\u70b9*/,qx[501][10001],qy[501][10001];\nconst int dx[8]={-1,-1,-1,0,0,1,1,1};//\u6a2a\u7684\u65b9\u5411\nconst int dy[8]={-1,0,1,-1,1,-1,0,1};//\u7eb5\u7684\u65b9\u5411 \ndouble dis(int x1,int x2,int y1,int y2)//\u8ba1\u7b97\u8ddd\u79bb\u7684\u51fd\u6570\uff08\u8ddd\u79bb\u516c\u5f0f\uff09 \n{\n\treturn sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));//\u8ba1\u7b97\u8ddd\u79bb\u7684\u51fd\u6570\uff08\u8ddd\u79bb\u516c\u5f0f\uff09\n}\nvoid dfs(int x,int y)//\u6a2a\u7eb5\u5750\u6807x,y \n{\n  int i,j,ii;\n  for (ii=0; ii<8; ii++)\n  {\n    i=x+dx[ii]; \n    j=y+dy[ii];\n     if (i>0 && i<=n && j>0 && j<=m && a[i][j]==1 && KD[i][j]=='0')\n      {\n          KD[i][j]=ch;\t\n          sum++;\n          qx[now][sum]=i; \n          qy[now][sum]=j;\n          dfs(i,j);\n     }\n   }\t\t\n}\n\nint main()\n{\n   freopen(\"star.in\",\"r\",stdin);\n   freopen(\"star.out\",\"w\",stdout);\n   now=0; \n   ch='a'-1;\n   scanf(\"%d%d\",&m,&n);\n   for (i=1; i<=n; i++)\n   for (j=1; j<=m; j++) \n     KD[i][j]='0';\n     gets(ss);\t\n   for (i=1; i<=n; i++)\n   {\n     gets(ss);\n     for (j=1; j<=m; j++)\n     a[i][j]=ss[j-1]-48;//\u8f6c\u6362\u5c0f\u5199\u5b57\u6bcd\n    }\t\n    for (i=1; i<=n; i++)\n    for (j=1; j<=m; j++)\n      if (a[i][j]==1 && KD[i][j]=='0')\n      {\n        sum=1;\n        now++;\n        ch++;\n        c[now]=ch;\n        qx[now][sum]=i;\n        qy[now][sum]=j;\n        KD[i][j]=ch;\n        dfs(i,j);\n        ans=0;\t\n        for (ii1=1; ii1<=sum; ii1++)\t\n        for (jj1=1; jj1<=sum; jj1++)\n        {\n           xx1=qx[now][ii1]; \n           yy1=qy[now][ii1];\n           xx2=qx[now][jj1]; \n           yy2=qy[now][jj1]; \n           ans=ans+dis(xx1,xx2,yy1,yy2); //\u8ba1\u7b97\u8ddd\u79bb \n        }\n        jay[now]=ans;//\u50a8\u5b58\u5404\u4e2a\u661f\u5ea7\u7684\u8ddd\u79bb\uff0c\u5224\u662f\u5426\u76f8\u4f3c\n        for (k=1; k<now; k++)\n        if (fabs(jay[k]-jay[now])<=0.0000001)\t//\u96f6\u4e0d\u80fd\u592a\u591a\uff0c\u4e0d\u8981\u4ee5\u4e3a\u96f6\u8d8a\u591a\u8d8a\u51c6\u786e\uff0c\u8981\u4e0d\u7136\u4f1a\u7206\u7cbe\u5ea6 \n        {\n            ch--;\n            c[now]=c[k];\n            for (ii=1; ii<=sum; ii++)\n            KD[qx[now][ii]][qy[now][ii]]=c[k];\n            break;\n        }\n     }\n  for (i=1; i<=n-1; i++)\n  {\n    for (j=1; j<=m; j++)\n    printf(\"%c\",KD[i][j]);//\u8f93\u51fa\u53d8\u5316\u540e\u7684\u7ed3\u679c \n    puts(\" \");\n  }\n    for (j=1; j<=m; j++)\n    printf(\"%c\",KD[n][j]);//\u8f93\u51fa\u53d8\u5316\u540e\u7684\u7ed3\u679c \n    return 0;\n}\n\n\n```",
        "postTime": 1548056986,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "HASH\u5224\u91cd\n\n\u6211\u7684\u65b9\u6cd5\u53ef\u80fd\u6bd4\u8f83\u5947\u602a\n\n\u6ce8\u610f\u4e00\u5b9a\u8981\u5224\u65ad\u622a\u51fa\u6765\u77e9\u5f62\u7684\u5f62\u72b6\u548c\u56fe\u5f62\u5185\u90e8\u5176\u4ed6\u56fe\u5f62\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N = 110, M = 510, dx[8] = {1, 1, 1, -1, -1, -1, 0, 0},\n\t\t  dy[8] = {-1, 0, 1, -1, 0, 1, -1, 1};\nconst ll key[5] = {998244353, 1004535809, 1000000007, 1000000009, 123468723167};\nchar s[N][N], ans[M], c = 'a';\nll ht[M][8][5];\nint vis[N][N], k1[M], k2[M], k3[M], k4[M], cnt, n, m;\n\nvoid dfs(int x, int y)\n{\n\tk1[cnt] = min(k1[cnt], x);\n\tk2[cnt] = max(k2[cnt], x);\n\tk3[cnt] = min(k3[cnt], y);\n\tk4[cnt] = max(k4[cnt], y);\n\tvis[x][y] = cnt;\n\ts[x][y] = '0';\n\tfor (int i = 0; i < 8; ++i)\n\t{\n\t\tint tx = x + dx[i], ty = y + dy[i];\n\t\tif (~tx && tx < n && ~ty && ty < m && s[tx][ty] == '1') dfs(tx, ty);\n\t}\n}\n\nvoid hash1(int k)\n{\n\tfor (int i = k1[k]; i <= k2[k]; ++i)\n\t\tfor (int j = k3[k]; j <= k4[k]; ++j)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][0][p] = ((ht[k][0][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash2(int k)\n{\n\tfor (int i = k2[k]; i >= k1[k]; --i)\n\t\tfor (int j = k3[k]; j <= k4[k]; ++j)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][1][p] = ((ht[k][1][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash3(int k)\n{\n\tfor (int i = k1[k]; i <= k2[k]; ++i)\n\t\tfor (int j = k4[k]; j >= k3[k]; --j)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][2][p] = ((ht[k][2][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash4(int k)\n{\n\tfor (int i = k2[k]; i >= k1[k]; --i)\n\t\tfor (int j = k4[k]; j >= k3[k]; --j)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][3][p] = ((ht[k][3][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash5(int k)\n{\n\tfor (int j = k3[k]; j <= k4[k]; ++j)\n\t\tfor (int i = k1[k]; i <= k2[k]; ++i)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][4][p] = ((ht[k][4][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash6(int k)\n{\n\tfor (int j = k3[k]; j <= k4[k]; ++j)\n\t\tfor (int i = k2[k]; i >= k1[k]; --i)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][5][p] = ((ht[k][5][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash7(int k)\n{\n\tfor (int j = k4[k]; j >= k3[k]; --j)\n\t\tfor (int i = k1[k]; i <= k2[k]; ++i)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][6][p] = ((ht[k][6][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nvoid hash8(int k)\n{\n\tfor (int j = k4[k]; j >= k3[k]; --j)\n\t\tfor (int i = k2[k]; i >= k1[k]; --i)\n\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\tht[k][7][p] = ((ht[k][7][p] << 1) + (vis[i][j] == k)) % key[p];\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &m, &n);\n\tfor (int i = 0; i < n; ++i) scanf(\"%s\", s[i]);\n\tmemset(k1, 127, sizeof k1);\n\tmemset(k3, 127, sizeof k3);\n\tfor (int i = 0; i < n; ++i)\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\tif (s[i][j] == '1') ++cnt, dfs(i, j);\n\tfor (int i = 1; i <= cnt; ++i)\n\t{\n\t\thash1(i);\n\t\thash2(i);\n\t\thash3(i);\n\t\thash4(i);\n\t\thash5(i);\n\t\thash6(i);\n\t\thash7(i);\n\t\thash8(i);\n\t}\n\tfor (int i = 1; i <= cnt; ++i)\n\t\tif (!ans[i])\n\t\t{\n\t\t\tans[i] = c++;\n\t\t\tfor (int j = i + 1; j <= cnt; ++j)\n\t\t\t\tif (k2[j] - k1[j] == k2[i] - k1[i]\n\t\t\t\t\t|| k2[j] - k1[j] == k4[i] - k3[i]\n\t\t\t\t\t|| k4[j] - k3[j] == k2[i] - k1[i]\n\t\t\t\t\t|| k4[j] - k3[j] == k4[i] - k3[i])\n\t\t\t\t\tfor (int k = 0; k < 8; ++k)\n\t\t\t\t\t{\n\t\t\t\t\t\tbool flag = true;\n\t\t\t\t\t\tfor (int p = 0; p < 5; ++p)\n\t\t\t\t\t\t\tif (ht[i][0][p] != ht[j][k][p])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (flag)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tans[j] = ans[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t}\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tfor (int j = 0; j < m; ++j)\n\t\t\tputchar(ans[vis[i][j]] ? ans[vis[i][j]] : '0');\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548052547,
        "uid": 39146,
        "name": "\u9762\u5411\u5927\u6d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u9898\u89e3\u524d\u6765\u8d34\u4e00\u4efd\n\n\u539f\u601d\u8def\u6765\u81ea\u4e8eNOCOW\u67d0\u795e\u7287\n\n\u7b80\u5355\u8bf4\u4e00\u4e0b\uff1a\n\n\u8fd9\u9898\u641c\u7d22\u627e\u51fa\u661f\u661f\u8fd8\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u662f\u5982\u4f55\u5224\u65ad\u662f\u5426\u76f8\u7b49\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5927\u90e8\u5206\u4eba\u7684\u610f\u601d\u662f\u628a\u8fd9\u90e8\u5206\u661f\u661f\u5f04\u51fa\u53bb\u7ffb\u8f6c\u627e\u548c\u4e4b\u524d\u7684\u662f\u5426\u80fd\u591f\u91cd\u5408\uff0c\u4e0d\u8fc7\u6211\u4eec\u7684\u795e\u7287\u975e\u5e38\u5389\u5bb3\u60f3\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u529e\u6cd5\uff0c\u90a3\u5c31\u662f\u628a\u8fd9\u4e2a\u661f\u661f\u56fe\u5f62\u91cc\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\u7136\u540e\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u5dee\u4f4e\u4e8e0.00001\u5c31\u89c6\u4e3a\u76f8\u540c\uff0c\u7136\u540e\u8f7b\u677eAC\n\n\u5728\u6b64\u819c\u62dcNOCOW\u795e\u7287huhu1711\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n[code]\n/\\*\nID: herofox1\n\nLANG: C++\n\nTASK: starry\n\n\\*/\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cmath>\n#define scan(i,j) if(map[i][j]=='1')floodfill(i,j)\nusing namespace std;\nchar map[110][110], ansmap[110][110];\nint w, h;\ndouble dissum;\ndouble all[30];\nchar num;\nint alpha = 0;\nint coor[310][2];\nint EID = 0;\ninline void open()\n{\n    freopen(\"starry.in\", \"r\", stdin);\n    freopen(\"starry.out\", \"w\", stdout);\n}\ninline void close()\n{\n    fclose(stdin);\n    fclose(stdout);\n}\ninline bool eq(double a, double b)\n{\n    double abss;\n    if(a>b)\n        abss=a-b;\n    else\n        abss=b-a;\n    if(abss<=0.00001)\n        return true;\n    else\n        return false;\n}\ninline void floodfill(int x, int y)\n{\n    map[x][y] = '0';\n    coor[++EID][0] = x;\n    coor[EID][1] = y;\n    scan(x+1,y);\n    scan(x+1,y-1);\n    scan(x+1,y+1);\n    scan(x,y+1);\n    scan(x,y-1);\n    scan(x-1,y);\n    scan(x-1,y-1);\n    scan(x-1,y+1);\n}\ninline double dis(int a, int b)\n{\n    return sqrt(((coor[a][0] - coor[b][0])*(coor[a][0] - coor[b][0])) + ((coor[a][1] - coor[b][1])*(coor[a][1] - coor[b][1])));\n}\ninline void scanff()\n{\n    scanf(\"%d%d\", &w, &h);\n    for(int i = 1;i <= h;++i)\n        for(int j = 1;j <= w;++j)\n            cin>>map[i][j];\n}\ninline void print()\n{\n    for(int i = 1;i <= h;++i)\n    {\n        for(int j = 1;j <= w;++j)\n        {\n            if(ansmap[i][j] < 'a' || ansmap[i][j] > 'z')\n                cout<<\"0\";\n            else\n                cout<<ansmap[i][j];\n        }\n        cout<<endl;\n    }\n}\ninline void solve()\n{\n    for(int i = 1;i <= h;++i)\n        for(int j = 1;j <= w;++j)\n            if(map[i][j] == '1')\n            {\n                dissum = 0;\n                EID = 0;\n                floodfill(i, j);\n                for(int k = 1;k <= EID;k++)\n                    for(int p = k + 1;p <= EID;p++)\n                        dissum += dis(p, k);\n                bool flag = 0;\n                for(int k = 1;k <= alpha;++k)\n                {\n                    if(eq(dissum, all[k]))\n                    {\n                        num = 'a' + k - 1;\n                        flag = 1;\n                        break;\n                    }\n                }\n                if(flag == 0)\n                {\n                    all[++alpha] = dissum;\n                    num = alpha + 'a' - 1;\n                }\n                for(int k = 1;k <= EID;++k)\n                    ansmap[coor[k][0]][coor[k][1]] = num;\n            }\n}\nint main()\n{\n    //open();\n    scanff();\n    solve();\n    print();\n    //close();\n    return 0;\n}\n```\n[/codec]\n\u795d\u5927\u5bb6\u6109\u5feb\u5730AC\n",
        "postTime": 1483442660,
        "uid": 6201,
        "name": "herofox",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u96be\u70b9\u5728\u4e8e\u5224\u65ad\u56fe\u50cf\u662f\u5426\u76f8\u4f3c\uff0c\u6211\u4eec\u91c7\u7528\u5c06\u6bcf\u4e2a\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u8d77\u6765\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\uff08\u4e5f\u53ef\u7528$hash$\u3001\u76f4\u63a5\u5199\u5bf9\u79f0\u65cb\u8f6c\u51fd\u6570\u6216\u516b\u4e2a\u5faa\u73af\u5224\u65ad\uff09\uff0c\u5171$\\frac{n*(n-1)}{2}$\u6761\u7ebf\u6bb5\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u6b63\u786e\u6027\u4e0d\u96be\u8bc1\u660e\uff0c\u5f53\u548c\u76f8\u540c\u65f6\uff0c\u6bcf\u6761\u8fb9\u957f\u5ea6\u76f8\u7b49\uff08\u6b63\u786e\u6027\u4e0b\u9762\u518d\u8bc1\uff09\uff0c\u53ef\u4ee5\u5c06\u56fe\u50cf\u770b\u6210\u4e00\u4e2a\u591a\u8fb9\u5f62\uff0c\u8fde\u63a5\u70b9\u53ef\u4ee5\u770b\u6210\u5c06\u591a\u8fb9\u5f62\u5206\u6210\u8bb8\u591a\u4e09\u89d2\u5f62\uff0c\u6839\u636e\u4e09\u89d2\u5f62\u5168\u7b49\u5224\u5b9a\u6761\u4ef6\uff08$sss$\uff09\uff0c\u53ef\u4ee5\u5224\u5b9a\u6bcf\u4e2a\u4e09\u89d2\u5f62\u5168\u7b49\uff0c\u6839\u636e\u4e09\u89d2\u5f62\u5168\u7b49\u63a8\u51fa\u5bf9\u5e94\u8fb9\u76f8\u7b49\u3001\u5bf9\u5e94\u89d2\u76f8\u7b49\uff0c\u53ef\u8bc1\u591a\u8fb9\u5f62\u5168\u7b49\n\u5f53\u548c\u76f8\u7b49\uff0c\u6bcf\u6761\u8fb9\u4e5f\u76f8\u7b49\u7684\u8bc1\u660e\uff1a\u4e09\u89d2\u5f62\u5c06\u6bcf\u4e2a\u683c\u70b9\u7684\u8fb9\u957f\u8bbe\u4e3a$1$\uff0c\u6545\u6bcf\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6\u90fd\u4e3a\u6574\u6570\u6216\u4e00\u4e2a\u6574\u6570\u7684\u5f00\u65b9\uff0c\u6574\u6570\u7684\u5c0f\u6570\u90e8\u5206\u4e3a$0$\uff0c\u6574\u6570\u7684\u5f00\u6839\u5c0f\u6570\u90e8\u5206\u53d6\u503c\u5341\u5206\u6709\u9650\uff0c\u4f7f\u7528$long double$\u53ef\u4ee5\u5c06\u51fa\u9519\u7387\u5927\u5927\u964d\u4f4e\u3002\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint k,tail,tx[200000],ty[200000],n,m,a[300000],b[300000],dx[]={-1,-1,-1,0,0,1,1,1},dy[]={-1,0,1,-1,1,-1,0,1};\nchar s[3000][3000],p='a',u[3999];\nlong double t[39];\nvoid dfs(int x,int y,char q,char p){//\u6df1\u641c\u6c42\u8054\u901a\u5757\uff08\u5e7f\u641c\u4e5f\u53ef\uff09\n    for (int i=0;i<8;i++){//\u6839\u636e\u9898\u610f\u662f\u516b\u4e2a\u65b9\u5411\n        int xx=x+dx[i],yy=y+dy[i];\n        if (xx<1||xx>n||yy<0||yy>=m||s[xx][yy]!=p) continue;\n        tx[++tail]=xx;ty[tail]=yy;\n        s[xx][yy]=q;\n        dfs(xx,yy,q,p);\n    }\n}\nvoid check(int x,int y){\n    long double res=0;\n    for (int i=1;i<=tail;i++)\n        for (int j=1;j<=tail;j++)\n            res+=sqrt((tx[i]-tx[j])*(tx[i]-tx[j])+(ty[i]-ty[j])*(ty[i]-ty[j]));//\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\u548c\n    for (int i=1;i<=k;i++)\n        if (abs(res-t[i])<0.00001){//\u6d6e\u70b9\u6570\u7684\u5224\u5b9a\u76f8\u7b49\u7684\u65b9\u6cd5\n            p--;char o=s[x][y];\n            s[x][y]=u[i];\n            dfs(x,y,u[i],o);//\u82e5\u4e0e\u524d\u9762\u91cd\u590d\u5219\u91cd\u65b0\u8d4b\u503c\n            return;\n        }\n    t[++k]=res;u[k]=p;//\u4e0d\u91cd\u590d\u5219\u52a0\u5165\u6570\u7ec4\uff08\u4e5f\u53ef\u7528map\uff09\n}\nint main() {\n//    freopen(\"star.in\", \"r\", stdin), freopen(\"star.out\", \"w\", stdout);\n    cin>>m>>n;\n    for (int i=1;i<=n;i++)\n        scanf(\"%s\",s[i]);\n    for (int i=1;i<=n;i++)\n        for (int j=0;j<m;j++)\n            if (s[i][j]=='1'){\n                s[i][j]=p;\n                tx[1]=i;ty[1]=j;\n                tail=1;\n                dfs(i,j,p,'1');\n                check(i,j);\n                p++;\n            }\n    for (int i=1;i<=n;i++){\n        for (int j=0;j<m;j++) \n            cout<<s[i][j];\n        cout<<endl;\n    }\n}\n```",
        "postTime": 1548068536,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u4e00\u9053\u7a0d\u5fae\u6709\u96be\u5ea6\u7684\u5e7f\u641c\n\n\u5e7f\u641c\u7684\u90e8\u5206\u7a00\u677e\u5e73\u5e38\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u96be\u70b9\u5728\u5224\u91cd\n~~\uff08\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u5224\u91cd\u7684\u51fd\u6570\u5199\u4e86\u4e94\u516d\u4e2a\u624d\u8fc7\uff09~~\n\n\u5927\u4f53\u601d\u8def\u662f\uff1a\u5148\u6309\u6c42\u8054\u901a\u5757\u7684\u65b9\u6cd5\u626b\u4e00\u904d-->\u53d6\u51fa\u8054\u901a\u5757-->\u5224\u91cd-->\u8d4b\u503c\n\n\u6709\u51e0\u4e2a\u5c0f\u6280\u5de7\uff1a\u6bd4\u5982\u626b\u8054\u901a\u5757\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u4e00\u4e2a\u8054\u901a\u5757\u5185\u7684\u70b9\u653e\u5230\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u91cc\uff0c\u5224\u91cd\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u518d\u6c42\u4e00\u904d\u8054\u901a\u5757\uff0c\u8d4b\u503c\u4e5f\u597d\u505a\uff0c\u518d\u5c31\u662f\u7528map\u5224\u91cd~~\uff08stl\u7b80\u76f4\u4e0d\u8981\u592a\u597d\u7528\uff09~~\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<ctype.h>\n#include<queue>\n#include<map>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint dx[]={-1,-1,-1,0,0,1,1,1};\nint dy[]={-1,0,1,-1,1,-1,0,1};\ninline int read(){//\u5feb\u8bfb\uff0c\u53ef\u5feb\u4e86\uff0c\u867d\u7136\u53ea\u6709\u4e24\u4e2a\u6570\u6211\u8fd8\u662f\u8981\u7528\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch))f|=ch=='-',ch=getchar();\n    while(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n    return f?-x:x;\n}\nmap<long double,char> ma;//\u5224\u91cd\u7528\uff08\u903c\u5f97\u6211\u5f00double\uff09\nint n,m,cnt;//cnt\u5b58\u5f53\u524d\u8054\u901a\u5757\u7684\u70b9\u7684\u4e2a\u6570\nint vis[107][107];\nint zx[10007],zy[10007];//\u5224\u91cd\u5b58\u5750\u6807\u7684\u4e34\u65f6\u6570\u7ec4\nchar a[107][107],c='a'-1;//c\u5b58\u5f53\u524d\u7684\u5b57\u7b26\u662f\u4ec0\u4e48\nqueue<int> qx,qy;//\u5e7f\u641c\u5b58\u5750\u6807\u7684\nchar check(){//\u5224\u91cd\u51fd\u6570\n    long double ans=0.0;\n    for(int i=1;i<=cnt;++i)\n        for(int j=1;j<=cnt;++j)\n            ans+=sqrt((zx[i]-zx[j])*(zx[i]-zx[j])+(zy[i]-zy[j])*(zy[i]-zy[j]));\n\tif(!ma[ans])ma[ans]=++c;\n    return ma[ans];\n}\ninline void lfd(int sx,int sy){//\u6ca1\u4ec0\u4e48\u7279\u70b9\u7684\u5e7f\u641c\n    qx.push(sx),qy.push(sy);cnt=1;\n    zx[cnt]=sx,zy[cnt]=sy;\n    vis[sx][sy]=1;\n    while(!qx.empty()){\n        int x=qx.front(),y=qy.front();\n        qx.pop(),qy.pop();\n        for(int i=0;i<8;++i){//\u522b\u5fd8\u4e86\u662f\u516b\u8054\u901a\n            int xx=x+dx[i],yy=y+dy[i];\n            if(xx>0 && yy>0 && xx<=n && yy<=m && !vis[xx][yy] && a[xx][yy]=='1'){\n                vis[xx][yy]=1;\n                qx.push(xx),qy.push(yy);\n                zx[++cnt]=xx,zy[cnt]=yy;//\u5b58\u4e0b\u5f53\u524d\u8054\u901a\u5757\u7684\u5750\u6807\n            }\n        }\n    }\n    char cc=check();\n    for(int i=1;i<=cnt;++i)a[zx[i]][zy[i]]=cc;//\u8d4b\u503c\n}\nint main(){\n    m=read();n=read();\n    for(int i=1;i<=n;++i)scanf(\"%s\",a[i]+1);\n    for(int i=1;i<=n;++i)for(int j=1;j<=m;++j)if(a[i][j]=='1')lfd(i,j);\n    for(int i=1;i<=n;++i,puts(\"\"))//\u8f93\u51fa\uff08puts\u771f\u597d\u7528\uff09\n        for(int j=1;j<=m;++j)\n            cout<<a[i][j];\n    return 0;\n}\n\n```\n\u518d\u8bf4\u51e0\u79cd\u4e0d\u53ef\u884c\u7684\u5224\u91cd\u51fd\u6570\n```cpp\nans+=abs(zx[i]-zx[j])+abs(zy[i]-zy[j]);\n```\n\u6bd4\u5982\u6c42\u66fc\u54c8\u987f\u8ddd\u79bb\u663e\u7136\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u5f88\u5bb9\u6613\u627e\u51fa\u53cd\u4f8b\n\u8fd8\u6709\u8fd9\u4e2a\u548c\u8fd9\u4e2a\n\n```cpp\nans+=(zx[i]-zx[j])*(zx[i]-zx[j])+(zy[i]-zy[j])*(zy[i]-zy[j]);\n```\n\u6c42\u8ddd\u79bb\u5e73\u65b9\u4e5f\u662f\u4e0d\u884c\u7684\n```cpp\nans+=(zx[i]-zx[j])*(zx[i]-zx[j])+(zy[i]-zy[j])*(zy[i]-zy[j])+abs(zx[i]-zx[j])+abs(zy[i]-zy[j]);\n```\n\n\u5bf9\u628a\u5b83\u4eec\u63ba\u8d77\u6765\u4e5f\u4e0d\u884c\n```\nma[(long long)ans]=1;\n```\n\u5c31\u7b97\u6c42\u4e86\u8ddd\u79bb\uff0c\u6700\u540e\u5b58\u6210long long \u4e5f\u662f\u4e0d\u884c\u7684\n\u7b49\u7b49\u7b49\u7b49..\n",
        "postTime": 1540280740,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u6ca1\u6709\u697c\u4e0b\u8bf4\u7684\u90a3\u4e48\u9ebb\u70e6\uff0c\u6211\u4eec\u53ea\u8981\u7528\u8ddd\u79bb\u8868\u793a\u4e00\u4e2a\u56fe\u5c31\u597d\u4e86\uff0c\u4e00\u4e2a\u56fe\u76f8\u4f3c\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u70b9\u4e0e\u5176\u4ed6\u70b9\u7684\u8ddd\u79bb\u548c\u76f8\u540c\uff0c\u8fd9\u6837\u6211\u4eec\u5148DFS\u5904\u7406\u51fa\u6bcf\u4e2a\u56fe\uff0c\u7b97\u51fa\u8ddd\u79bb\u548c\uff0c\u7136\u540e\u5c31\u597d\u4e86\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nint n,m;\nchar a[110][110];\nint cnt,vis[110][110];\nmap<double,int>mp;\nmap<int,double>num;\ndouble dis;\ndouble get_dis(int x1,int y1,int x2,int y2)\n{\n    return sqrt((x1-x2) * (x1-x2) + (y1-y2) * (y1-y2));\n}\nstruct T\n{\n    int l,r;\n}q[100000];\nint ff;\nvoid dfs(int x,int y)\n{\n    if(vis[x][y])return ;\n    if(x < 1 || x > n || y < 1 || y > m || a[x][y] != '1')return ;\n    vis[x][y] = 1;\n    q[++ff].l = x,q[ff].r = y;\n    //cout<<x<<\" \"<<y<<endl;\n    dfs(x-1,y);dfs(x+1,y);dfs(x,y+1);dfs(x,y-1);\n    dfs(x-1,y+1);dfs(x-1,y-1);dfs(x+1,y+1);dfs(x+1,y-1);\n}\nvoid pre_hand()\n{\n    REP(i,1,ff)\n    {\n        REP(j,1,ff)\n        {\n            if(i == j)continue;\n            dis+=get_dis(q[i].l,q[i].r,q[j].l,q[j].r);\n        }\n    }\n}\nvoid change(int x)\n{\n    REP(i,1,ff)a[q[i].l][q[i].r] = char(x + 'a'-1);\n}\nint pd()\n{\n    REP(i,1,cnt)\n    {\n        double ans = abs(num[i] - dis);\n        if(ans <= 1e-3)return i;\n    }\n    num[++cnt] = dis;\n    return cnt;\n}\nint main()\n{\n    m = read(),n = read();\n    REP(i,1,n)\n        scanf(\"%s\",a[i]+1);\n    REP(i,1,n)\n    {\n        REP(j,1,m)\n        {\n            if(a[i][j] == '1' && !vis[i][j])\n            {\n                memset(q,0,sizeof(q));\n                dis = 0;ff = 0;\n                dfs(i,j);pre_hand();\n                change(pd());\n            }\n        }\n    }\n    //cout<<\"!!!\"<<cnt<<endl;\n    //REP(i,1,cnt)cout<<num[i]<<endl;\n    REP(i,1,n)\n    {\n        REP(j,1,m)\n            cout<<a[i][j];\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1494936224,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2749 \u3010[USACO5.1]\u591c\u7a7a\u7e41\u661fStarry Night\u3011"
    }
]