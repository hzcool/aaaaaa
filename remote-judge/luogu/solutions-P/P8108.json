[
    {
        "content": "## \u524d\u8a00\nCnoi \u6c38\u8fdc\u7684\u795e\uff01\n## \u601d\u8def\n\u9996\u5148\u6211\u4eec\u8003\u8651\u53ea\u6709\u4e24\u5217\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\u8fd9\u5c31\u662f\u6c42\u4e00\u4e2a LCS \u7684\u95ee\u9898\uff1a\u53ef\u4ee5\u4e00\u5217\u6d88\u4e00\u5757\uff0c\u6216\u8005\u4e24\u5217\u5e95\u90e8\u76f8\u540c\u7684\u65f6\u5019\u90fd\u6d88\u6389\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u63a8\u5e7f\u5230 $n$ \u5217\u7684\u65f6\u5019\u4e5f\u662f\u5bf9\u7684\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5c06\u4e00\u8d77\u6d88\u6389\u7684\u591a\u4e2a\u5143\u7d20\u8fde\u5728\u4e00\u8d77\uff0c\u8fde\u8fb9\u4e4b\u95f4\u4e0d\u80fd\u6709\u4ea4\uff0c\u7b54\u6848\u5373\u4e3a $n^2-\\sum f_i$\uff0c$f_i$ \u4e3a\u7b2c $i$ \u5217\u548c\u7b2c $i+1$ \u5217\u7684 LCS\u3002\n\n\u7136\u540e\u6ce8\u610f\u5230 LCS \u95ee\u9898\u5982\u679c\u4e0d\u662f\u6392\u5217\u53ea\u80fd\u505a\u5230 $O(n^2)$ \u554a\uff0c\u505a $n$ \u6b21\u5c31\u662f $O(n^3)$ \u7684\uff0c\u6839\u672c\u8fc7\u4e0d\u53bb\uff0c\u96be\u9053\u8fd9\u662f\u725b\u903c\u8bba\u6587\u9898\uff1f\n\n\u6211\u4eec\u7a81\u7136\u53d1\u73b0\u6570\u636e\u597d\u50cf\u662f\u968f\u673a\u7684\u554a\uff0c\u90a3\u4e48\u8fd9\u6709\u5565\u6027\u8d28\u5462\uff1f\n\n\u51b7\u9759\u5206\u6790\u4e00\u4e0b\u8fd9\u548c\u6392\u5217\u4e5f\u5dee\u4e0d\u591a\u554a\uff0c\u6bcf\u79cd\u989c\u8272\u53ea\u51fa\u73b0\u4e86 $O(1)$ \u6b21\uff0c\u5c06\u8fd9\u4e9b\u76f8\u540c\u7684 $(i,j)$ \u5168\u90e8\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u5c31\u8fd8\u662f\u76f8\u5f53\u4e8e\u4e00\u4e2a $O(n)$ \u4e2a\u70b9\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u505a\u5c31\u662f $O(n\\log n)$ \u7684\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002\n## \u4ee3\u7801\n```cpp\n// Problem: P8108 [Cnoi2021]\u7ec0\u73e0\u4f20\u8bf4\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P8108?contestId=46585\n// Memory Limit: 512 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n//And in that light,I find deliverance.\n#include<bits/stdc++.h>\n// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint tree[1003],n=read();\nint a[1003][1003];\nvector<int> v[1003][1003];\nvoid add(int x,int k)\n{\n\twhile(x<=n) tree[x]=max(tree[x],k),x+=x&(-x);\n\treturn ;\n}\nint find(int x)\n{\n\tint res=0;\n\twhile(x) res=max(res,tree[x]),x-=x&(-x);\n\treturn res;\n}\nsigned main()\n{\n\tfor(int j=n; j>=1; --j)\n\t\tfor(int i=1; i<=n; ++i)\t\n\t\t\tv[i][a[i][j]=read()].push_back(j);\n\tint ans=n*n;\n\tfor(int i=1; i<n; ++i)\n\t{\n\t\tfor(int j=1; j<=n; ++j) tree[j]=0;\n\t\tint q=0;\n\t\tfor(int j=1; j<=n; ++j) \n\t\t{\n\t\t\tvector<pair<int,int>> z;\n\t\t\tfor(int k:v[i][a[i+1][j]]) \n\t\t\t\tz.push_back(make_pair(k,find(k-1)));\n\t\t\tfor(auto k:z)\n\t\t\t\tq=max(q,k.second+1),add(k.first,k.second+1);\n\t\t}\n\t\tans-=q;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1646920665,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8108"
    },
    {
        "content": "\u7231\u8fc7\u4e0d\u8fc7\u3002\n\n\u679c\u7136\u6211\u8fd9\u6837\u7684\u5f69\u7b14\u5199\u51fa\u6765\u7684\u9898\u89e3\u5145\u65a5\u7740\u4e00\u80a1\u201c\u770b\u4e0a\u53bb\u597d\u50cf\u6ca1\u5565\u5927\u95ee\u9898\u4f46\u662f\u4e3a\u4ec0\u4e48\u603b\u89c9\u5f97\u662f\u4f4e\u8d28\u91cf\u9898\u89e3\u5982\u679c\u6211\u628a\u5b83\u653e\u8fc7\u4e86\u90a3\u4e48\u6d51\u8eab\u96be\u53d7\u4e0d\u81ea\u5728\u597d\u50cf\u6b20\u4e86\u6d1b\u8c37\u4e00\u4e2a\u4ebf\u201d\u7684\u611f\u89c9\u3002\n\n\u663e\u7136 $n^2$ \u6b21\u64cd\u4f5c\u53ef\u4ee5\u5e72\u7206\u8fd9\u4e9b\u7ec0\u73e0\uff0c\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u600e\u4e48\u8bf4\u90fd\u80fd\u6d88\u6389\u4e00\u4e2a\u70b9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5047\u8bbe\u5728\u6211\u4eec\u6700\u7ec8\u94a6\u5b9a\u7684\u64cd\u4f5c\u7ed3\u679c\u4e2d\uff0c\u5b83\u6d88\u6389\u4e86 $\\{S_{x_1,y_1},S_{x_2,y_2},\\cdots,S_{x_n,y_n}\\}$ \u8fd9\u4e9b\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u5148\u901a\u8fc7\u524d\u9762\u7684\u64cd\u4f5c\u628a $S_{x_n,y_n}$ \u6d88\u5230\u6700\u5e95\u5c42\uff0c\u7136\u540e\u5728\u524d\u9762\u7684\u5217\u6267\u884c $\\{S_{x_1,y_1},S_{x_2,y_2},\\cdots,S_{x_{n-1},y_{n-1}}\\}$ \u7684\u65f6\u5019\u4e00\u6ce2\u6d88\u987a\u4fbf\u5e26\u8d70\u6700\u540e\u4e00\u4e2a\u3002\n\n\u56e0\u6b64\u64cd\u4f5c\u662f\u53ef\u4ee5\u4ece\u5de6\u5f80\u53f3\u6269\u5c55\u7684\u3002\u4ece\u5de6\u5f80\u53f3\u94a6\u5b9a\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e24\u5217\uff08\u6211\u4eec\u59d1\u4e14\u8bbe\u4e3a $S_i=\\{S_{i,1},S_{i,2},\\cdots,S_{i,n}\\}$ \u548c $S_{i+1}=\\{\\texttt{\\small{\u6211\u61d2\u5f97\u5199\u4e86\uff0c\u540c\u7406}}\\}$\uff09\uff0c\u663e\u7136\u8981\u4e00\u8d77\u5e26\u8d70\u7684\u70b9\u5bf9\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4ea4\uff0c\u53c8\u8981\u5c3d\u53ef\u80fd\u591a\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u6c42 LCS\u3002\n\n\u56e0\u6b64\u7b54\u6848\u4e3a $n^2-\\sum{\\operatorname{lcs}(S_i,S_{i+1})}$\u3002\n\n\u95ee\u9898\u662f\uff0c\u672c\u9898\u597d\u50cf\u6ca1\u8bf4\u662f\u6392\u5217\uff0c\u4efb\u610f\u5e8f\u5217\u505a\u590d\u6742\u5ea6\u662f\u4e0d\u662f\u5e73\u65b9\u7684\u554a\uff0c\u662f\u4e0d\u662f\u6839\u672c\u5199\u4e0d\u4e86\u554a\uff0cbzy \u662f\u4e0d\u662f\u53c8\u559d\u4e86\u5047\u2468\u6765\u51fa\u9898\u6bd2\u7624\u6211\u8fd9\u6837\u7684\u5c0f\u670b\u53cb\u554a\u3002\n\n\u6ce8\u610f\u5230\u6570\u636e\u968f\u673a\u3002\u5f88\u663e\u7136\u8fd9\u9898\u53c8\u662f\u4e00\u9053\u5229\u7528\u968f\u673a\u6570\u636e\u6027\u8d28\u7684\u6ca1\u6709\u6b63\u89c4\u89e3\u6cd5\u7684\u9898\u76ee ~~bzy \u4f60\u574f\u4e8b\u505a\u5c3d~~\u3002\u5728\u968f\u673a\u6570\u636e\u4e0b\uff0c\u6bcf\u4e00\u5217\u671f\u671b\u6765\u770b\u662f\u6ca1\u6709\u591a\u5c11\u540c\u8272\u7684\u7ec0\u73e0\uff08\u6bcf\u79cd\u989c\u8272 $O(1)$\uff09\u7684\u3002\u90a3\u4e48\u5bf9\u4e8e\u540e\u4e00\u5217\u7684\u6bcf\u4e00\u4e2a\u7ec0\u73e0 $S_{i+1,j}$\uff0c\u8bb0\u4e0b\u524d\u4e00\u5217\u4e2d\u6bcf\u4e00\u4e2a\u548c\u5b83\u989c\u8272\u4e00\u81f4\u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651 LCS \u7684\u8fc7\u7a0b\uff1a\n\n$$dp_{i,j}=\\max\\{dp_{i-1,j},dp_{i,j-1},[a_i=b_j]\\times dp_{i-1,j-1}\\}$$\n\n\u7b2c\u4e09\u9879\u8f6c\u79fb\u7684\u6b21\u6570\u5373\u4e3a\u76f8\u540c\u70b9\u5bf9\u6570\uff0c\u671f\u671b\u4e3a\u7ebf\u6027\u3002\n\n\u9488\u5bf9\u7b2c\u4e09\u9879\u8f6c\u79fb\u7684\u60c5\u51b5\u5927\u529b\u641e\u4e00\u641e\uff0c\u7ef4\u62a4 $f_i$ \u8868\u793a\u5f53\u524d\u60c5\u51b5\u4e0b(\u626b\u5230\u7b2c\u4e8c\u5217\u7684\u524d $j$ \u4e2a\uff09\uff0c\u7b2c\u4e00\u5217\u4ee5\u7b2c $i$ \u4e2a\u7ed3\u5c3e\u7684\u5b50\u4e32\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\u3002\n\n$$f_i=\\max\\{f_i,\\max_{k<i}\\{f_k+1\\}\\}({\\forall S_{n',i}=S_{n'+1,j}})$$\n\n\u968f\u4fbf\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\uff0c\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n```cpp\nint work(int ans=n*n)\n{\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=n;++j)\n            _index[j][col[i][j]].push_back(i);\n    for(int i=1,ms=0;i<n;++i,memset(c,0,sizeof(c)),ms=0)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            tot=0;\n            for(auto k:_index[i][col[j][i+1]])\n                indexes[++tot]=k,val[tot]=query(k-1);\n            for(int k=1;k<=tot;++k)\n                ms=max(ms,val[k]+1),update(indexes[k],val[k]+1);\n        }\n        ans-=ms;\n    }\n    return ans;\n}\n```\n\u5988\u7684\uff0c`index` \u5c45\u7136\u662f\u4fdd\u7559\u5b57\n",
        "postTime": 1657209988,
        "uid": 100250,
        "name": "minstdfx",
        "ccfLevel": 7,
        "title": "\u95f2\u7740\u65e0\u804a\u5199\u9898\u89e3\u00d72"
    },
    {
        "content": "[P8108 [Cnoi2021]\u7ec0\u73e0\u4f20\u8bf4](https://www.luogu.com.cn/problem/P8108) \u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/xiaoziyao/p/15865051.html)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a $n\\times n$ \u7684\u7f51\u683c\uff0c\u7528 $n$ \u79cd\u989c\u8272\u67d3\u8272\uff0c\u6bcf\u79cd\u989c\u8272\u6070\u597d\u67d3 $n$ \u6b21\uff0c\u4fdd\u8bc1\u67d3\u8272\u5747\u5300\u968f\u673a\u3002\n\n\u4f60\u6bcf\u6b21\u53ef\u4ee5\u9009\u62e9\u5e95\u7aef\u67d0\u4e00\u884c\u8fde\u7eed\u7684\u4e00\u4e2a\u540c\u8272\u6bb5\uff0c\u5e76\u5c06\u5176\u6d88\u9664\uff0c\u5176\u4e0a\u9762\u7684\u989c\u8272\u90fd\u4f1a\u56e0\u4e3a\u91cd\u529b\u6389\u4e0b\u53bb\u3002\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\n\n\u6700\u5c0f\u5316\u64cd\u4f5c\u6b21\u6570\u3002\n\n$1\\leqslant n\\leqslant 1000$\u3002\n\n## \u5206\u6790\n\n\u5f88\u6709\u610f\u601d\u7684\u9898\u3002\n\n\u8003\u8651\u6bcf\u6b21\u6d88\u9664\u7684\u65f6\u5019\uff0c\u5c06\u76f8\u90bb\u7684\u683c\u5b50\u8fde\u8fb9\uff0c\u8003\u5bdf\u5b83\u5728\u6e38\u620f\u5f00\u59cb\u524d\u7684\u5f62\u6001\uff1a\n\n\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u76f8\u90bb\u7684\u5217\u4e4b\u95f4\u6709\u8fde\u8fb9\uff0c\u4e14\u8fde\u8fb9\u4e00\u5b9a\u662f\u4e0d\u4ea4\u7684\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u8fde\u8fb9\u6ee1\u8db3\u524d\u9762\u7684\u7ea6\u675f\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6d88\u9664\u65b9\u5f0f\u4f7f\u5f97\u8fde\u8fb9\u7684\u683c\u5b50\u5728\u4e00\u6b21\u64cd\u4f5c\u5185\u88ab\u6d88\u9664\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u6700\u5927\u5316\u8fde\u8fb9\u6570\u91cf\uff0c\u800c\u7531\u4e8e\u7b2c\u4e00\u6761\u6027\u8d28\uff0c\u4e0d\u540c\u5217\u7684\u8fde\u8fb9\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u7528\u8003\u8651\u4e24\u5217\u4e4b\u95f4\u7684\u8fde\u8fb9\u3002\n\n\u6211\u4eec\u5c06\u8fb9 $(i,a)-(i+1,b)$ \u4f5c\u4e3a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9 $(a,b)$\uff0c\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u5171\u5b58\u7684\u8fb9\u4e00\u5b9a\u4e24\u4e24\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\uff0c\u90a3\u4e48\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n\u7531\u4e8e\u989c\u8272\u662f\u5747\u5300\u968f\u673a\u7684\uff0c\u6bcf\u4e00\u5217\u671f\u671b\u7684\u989c\u8272\u6570\u91cf\u662f $O(1)$ \u7684\uff0c\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u4e3a $O(n^2\\log n)$\u3002\n\n## \u4ee3\u7801\n\n\u8bb0\u5f97\u4e0d\u8981\u628a\u884c\u548c\u5217\u5199\u53cd\uff08\n\n```\n#include<stdio.h>\n#include<algorithm>\n#define lowbit(x) (x&-x)\nusing namespace std;\nconst int maxn=1005;\nint n,ans;\nint a[maxn][maxn],t[maxn],tmp[maxn];\nvector<int>v[maxn][maxn];\nvector<int>p[maxn];\nvoid update(int x,int v){\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tt[i]=max(t[i],v);\n}\nint query(int x){\n\tint res=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\t\tres=max(res,t[i]);\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n),ans=n*n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\"%d\",&a[i][j]),v[j][a[i][j]].push_back(i);\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tfor(int a=0;a<v[i][j].size();a++)\n\t\t\t\tfor(int b=0;b<v[i+1][j].size();b++)\n\t\t\t\t\tp[v[i][j][a]].push_back(v[i+1][j][b]);\n\t\tint res=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=0;k<p[j].size();k++)\n\t\t\t\ttmp[k]=query(p[j][k]-1)+1,res=max(res,tmp[k]);\n\t\t\tfor(int k=0;k<p[j].size();k++)\n\t\t\t\tupdate(p[j][k],tmp[k]);\n\t\t\tp[j].clear();\n\t\t}\n\t\tans-=res;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tt[j]=0;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1644073226,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8108\u3010[Cnoi2021]\u7ec0\u73e0\u4f20\u8bf4\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5c31\u662f~~\u6d88\u6d88\u4e50~~\u561b\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u4e5f\u662f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u7684\uff0c\u4e0d\u8fc7\u5e0c\u671b\u8bb2\u7684\u6e05\u6670\u4e00\u4e9b\uff0c\u56e0\u4e3a\u522b\u7684\u9898\u89e3\u592a\u9ad8\u6df1\u4e86\uff0c\u54ed\u54ed\u3002\n\n# \u601d\u8def\n\u9996\u5148\u5982\u679c\u6bcf\u6b21\u53ea\u5220\u4e00\u4e2a\uff0c\u90a3\u5c31\u662f\u9700\u8981\u5220 $n^2$ \u6b21\u3002\n\n\u90a3\u6211\u4eec\u9700\u8981\u6c42\u7684\u5c31\u662f\u6709\u591a\u5c11\u7ec0\u73e0\u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\u5220\u6389\uff0c\u518d\u51cf\u53bb\u8fd9\u4e2a\u6570\u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\u3002\n\n**\u90a3\u6211\u4eec\u8981\u600e\u4e48\u6c42\u8fd9\u4e2a\u6570\u5462\uff1f**\n\t\n\u6bcf\u6761\u8fb9\u90fd\u662f\u5efa\u7acb\u5728\u76f8\u90bb\u7684\u4e24\u5217\u4e4b\u95f4\uff0c\u800c\u4e14\u8fb9\u4e0a\u7684\u4e24\u4e2a\u989c\u8272\u76f8\u540c\uff0c\u90a3\u5c31\u53ef\u4ee5\u7ed9\u76f8\u90bb\u4e24\u5217\u76f8\u540c\u989c\u8272\u7684\u7ec0\u73e0\u5efa\u8fb9\u3002\n\n**\u8981\u53d6\u54ea\u4e9b\u8fb9\uff0c\u600e\u4e48\u53d6\uff1f**\n\n\u6211\u4eec\u5e0c\u671b\u8981\u53d6\u5f97\u8fb9\u6570\u6700\u591a\u4e14\u5b83\u4eec\u90fd\u4e0d\u76f8\u4ea4\uff0c\u5982\u679c\u76f8\u4ea4\u7684\u8bdd\u5c31\u4e0d\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u53ef\u4ee5\u4f7f\u5b83\u4eec\u90fd\u51fa\u73b0\u5728\u540c\u4e00\u884c\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u4e0d\u5b58\u5728\u9006\u5e8f\u5bf9\u5c31\u662f\u5408\u6cd5\u7684\u60c5\u51b5\uff0c\u7136\u540e\u518d\u627e\u51fa\u5408\u6cd5\u60c5\u51b5\u4e0b\u6700\u591a\u7684\u4e00\u79cd\u5efa\u8fb9\u65b9\u5f0f\u5373\u53ef\u3002\n\n\u5177\u4f53\u5199\u6cd5\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\n# code\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nconst int MAXN = 1010;\nusing namespace std;\nint n, a[MAXN][MAXN], ans, sum, b[MAXN], w[MAXN];\nint head[MAXN], cnt;\nstruct edge{\n\tint to, next;\n}e[MAXN << 1];\nint lowbit(int x)\n{\n\treturn x & -x;\n}\nvoid add(int x, int v)\n{\n\twhile(x <= n)\n\t{\n\t\tb[x] = max(b[x], v);\n\t\tx += lowbit(x);\n\t}\n}\nint query(int x)\n{\n\tint res = 0;\n\twhile(x)\n\t{\n\t\tres = max(res, b[x]);\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nvector<int> v[MAXN][MAXN], g[MAXN];\nsigned main()\n{\n\tscanf(\"%lld\", &n);\n\tans = n * n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tscanf(\"%lld\", &a[i][j]);\n\t\t\tv[j][a[i][j]].push_back(i);//\u5b58\u7b2cj\u5217\u989c\u8272\u4e3aa[i][j]\u7684\u884c \n\t\t}\n\t}\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tfor (int p = 0; p < v[i][j].size(); p++)\n\t\t\t\tfor (int q = 0; q < v[i + 1][j].size(); q++)\n\t\t\t\t\tg[v[i][j][p]].push_back(v[i + 1][j][q]);//\u7b2ci\u5217\uff0c\u989c\u8272\u4e3aj\u7684\u7b2cp\u4e2a\u884c\uff0c\u5c06\u8fd9\u4e2a\u884c\u4e0e\u4e0b\u4e00\u5217\u8fd9\u4e2a\u989c\u8272\u7684\u884c\u5efa\u8fb9 \n\t\tsum = 0;\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tfor (int p = 0; p < g[j].size(); p++) \n\t\t\t{\n\t\t\t\tw[p] = query(g[j][p] - 1) + 1;//\u4e0b\u4e00\u5217\u4e0e\u7b2cj\u884c\u76f8\u8fde\u7684\u8fb9\uff0cw[p]\u662f\u4e00\u5171\u6d88\u53bb\u591a\u5c11 \n\t\t\t\tsum = max(sum, w[p]);\n\t\t\t}\n\t\t\tfor (int p = 0; p < g[j].size(); p++) add(g[j][p], w[p]);//\u52a0\u5230\u6811\u72b6\u6570\u7ec4\u91cc \n\t\t\tg[j].clear();//\u60c5\u51b5\uff0c\u65b9\u4fbf\u4e0b\u6b21\u8ba1\u7b97 \n\t\t}\n\t\tans -= sum;//\u51cf\u53bb\u53ef\u4ee5\u8fde\u7740\u6d88\u6389\u7684\uff0c\u4e5f\u5c31\u662f\u51cf\u6389\u6700\u5927\u7684\u90a3\u4e2a\u53ef\u4ee5\u6ee1\u8db3\u504f\u5e8f\u7684\u96c6\u5408 \n\t\tfor (int j = 1; j <= n; j++) b[j] = 0; \n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1668156509,
        "uid": 453100,
        "name": "Tzs_yousa",
        "ccfLevel": 4,
        "title": "P8108\u7ec0\u73e0\u4f20\u8bf4"
    },
    {
        "content": "## \u9898\u76ee\u7b80\u8ff0\n\n> - \u7ed9\u4e00\u4e2a $n\\times n$ \u7684\u65b9\u683c\u4e0a\u9762\u53ea\u80fd\u8fde\u7eed\u6d88\u5e95\u5c42\u7684\u6d88\u6d88\u4e50\u3002\n> - \u6c42\u6700\u5c0f\u6d88\u9664\u6b65\u6570\u3002\n> - $n,m\\leq 10^3$\uff0c**\u6570\u636e\u968f\u673a**\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u8003\u8651\u53ea\u6709\u4e24\u5217\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u6d88\u6700\u5e95\u4e0b\u7684\u4e00\u4e2a\u6216\u8005\u6d88\u5e95\u4e0b\u989c\u8272\u76f8\u540c\u7684\u4e24\u4e2a\uff0c\u8fd9\u663e\u7136\u662f _\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217_\u3002\u6269\u5c55\u5230 $n$ \u4e2a\u540c\u7406\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u662f\uff1a\n$$\nn^2-\\sum_{i=1}^{n-1} f(i,i+1)\n$$\n\u5176\u4e2d $f(i,i+1)$ \u8868\u793a $i,i+1$ \u5217\u7684 LCS\u3002\n\n\u5ba1\u89c6 LCS \u7684 dp \u6cd5\uff0c\u8f6c\u79fb\u65b9\u7a0b\u662f\uff1a\n$$\ndp[j]\\leftarrow \\max(dp[j],\\max_{k=1}^{j-1} dp[k]+1)(a[i]=b[j])\n$$\n\u8fd9\u4e2a\u5f0f\u5b50\u9700\u8981\u7ef4\u62a4\u524d\u7f00\u6700\u5927\uff0c\u663e\u7136\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\u3002\u6570\u636e\u968f\u673a\u53ef\u4ee5\u505a\u5230 $O(n^2\\log n)$\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\nconst int MAXN=1005;\nint n,ans;\nint a[MAXN][MAXN],g[MAXN];\nvector<int> ve[MAXN];\nnamespace func{\nint f[MAXN];\nint lowbit(int x){\n\treturn x&(-x);\n}\nvoid build(){\n\tfor(int i=1;i<=n;i++)\n\t\tf[i]=0;\n}\nvoid add(int x,int d){\n\twhile(x<=n){\n\t\tf[x]=max(f[x],d);\n\t\tx+=lowbit(x);\n\t}\n\treturn;\n}\nint ask(int x){\n\tint res=0;\n\twhile(x){\n\t\tres=max(res,f[x]);\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n}\nint main(){\n\tcin>>n;ans=n*n;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tcin>>a[i][j];\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=1;j<=n;j++) ve[j].clear(),g[j]=0;\n\t\tfor(int j=n;j>=1;j--) ve[a[j][i]].push_back(j);\n\t\tfunc::build();\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tfor(int k:ve[a[j][i+1]]){\n\t\t\t\tint d=func::ask(k-1);\n\t\t\t\tg[k]=max(g[k],d+1);\n\t\t\t\tfunc::add(k,g[k]);\n\t\t\t}\n\t\tans-=func::ask(n);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1674140815,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "P8108 [Cnoi2021]\u7ec0\u73e0\u4f20\u8bf4"
    },
    {
        "content": "\u8fd9\u7bc7\u9898\u89e3\u611f\u89c9\u662f\u4e2a\u7f1d\u5408\u602a\u3002\u559c\u63d0\u6700\u52a3\u89e3\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u4e0d\u57fa\u4e8e\u6570\u636e\u968f\u673a\u7684\u505a\u6cd5\u3002\n\n\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bb2\u5230\u8fc7\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u518d\u8be6\u8ff0\u3002\u5982\u679c\u6bcf\u6b21\u53ea\u5220\u9664 $ 1 $ \u4e2a\u5219\u4e00\u5171\u663e\u7136\u9700\u8981 $ n^2 $ \u6b21\u64cd\u4f5c\uff0c\u8003\u8651\u76f8\u90bb\u4e24\u5217\u7684\u60c5\u51b5\u53ef\u4ee5\u51cf\u53bb\u4e00\u4e2a LCS\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u5feb\u901f\u5730\u6c42 $ n $ \u4e2aLCS\u7684\u548c\u3002\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff1a\u4e0d\u4fdd\u8bc1\u7ed9\u5b9a\u7684\u6570\u7ec4\u662f\u6392\u5217\uff0c\u90a3\u4e48\u770b\u4e0a\u53bb\u53ea\u80fd\u6734\u7d20 dp \u505a\u5230 $ n^2 $\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $ n^3 $\uff0c\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\n\n\u4e8e\u662f\u8fd9\u91cc\u5c31\u9700\u8981\u5f15\u5165\u79d1\u6280\uff1abitset \u4f18\u5316 LCS\u3002\n\n\u53c2\u8003 [\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/kamino/solution-sp12076#) \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u57fa\u4e8e\u5b57\u7b26\u96c6\u9650\u5236\u7684\u60c5\u51b5\u4e0b $ \\mathcal{O}(\\frac{n^2}{w}) $ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42 LCS\uff0c\u8fd9\u91cc\u56e0\u4e3a\u624b\u5199\u6240\u4ee5\u53d6 $ w=32 $\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e00\u4e2a $ \\mathcal{O}(\\frac{n^3}{w}) $ \u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u5e76\u4e0d\u4f9d\u8d56\u4e8e\u6570\u636e\u968f\u673a\u3002\u6ce8\u610f\u4ee3\u7801\u91cc $ M $ \u7684\u53d6\u503c\u4e0d\u80fd\u592a\u5927\uff0c\u5e94\u8be5\u5728 $ \\frac{N}{32} $ \u7684\u7ea7\u522b\uff0c\u5426\u5219\u4f1a\u8d85\u65f6\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#import <bits/stdc++.h>  \nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nconst int N = 1010, M = 65;\nint n, m;\nint mapp[N][N];\nint a[N],b[N];\nstruct BitSet \n{\n    unsigned int a[M];\n} Ans, X, Y, A[N];\nBitSet operator&(BitSet a, BitSet b) \n{\n    for (int i = 0; i < M; i++) \n    a.a[i] &= b.a[i];\n    return a;\n}\nBitSet operator^(BitSet a, BitSet b) \n{\n    for (int i = 0; i < M; i++) \n    a.a[i] ^= b.a[i];\n    return a;\n}\nBitSet operator|(BitSet a, BitSet b) \n{\n    for (int i = 0; i < M; i++) \n    a.a[i] |= b.a[i];\n    return a;\n}\nvoid operator-=(BitSet &a, BitSet b) \n{\n    unsigned int last = 0;\n    for (int i = 0; i < M; i++)\n        if (a.a[i] >= b.a[i] + last)\n            a.a[i] -= b.a[i] + last, last = 0;\n        else\n            a.a[i] -= b.a[i] + last, last = 1;\n}\nvoid operator<<=(BitSet &a, BitSet b)  \n{\n    unsigned int last = 1;\n    for (int i = 0; i < M; i++) \n    {\n        unsigned int x = b.a[i] >> 31;\n        a.a[i] = (b.a[i] << 1 | last);\n        last = x;\n    }\n}\nvoid Insert(BitSet &A, int x) \n{ \nA.a[x >> 5] |= 1u << (x & 31); \n}\nint count(BitSet A) \n{\n    int ans = 0;\n    for (int i = 0; i < M; i++) \n    ans += __builtin_popcount(A.a[i]);\n    return ans;\n}\nint solve()\n{\n    for (int i = 1; i <= n; i++) \n        Insert(A[a[i]], i);\n    for (int i = 1; i <= m; i++) \n    {\n        Y <<= Ans;\n        Ans = Ans | A[b[i]];\n        X = Ans;\n        X -= Y;\n        Ans = Ans & (Ans ^ X);\n    }\n    int tmp=count(Ans);\n    for(int i=1;i<=n;i++)\n    memset(A[i].a,0,sizeof A[i].a);\n    Ans=Ans^Ans;\n    X=X^X;\n    Y=Y^Y;\n    return tmp;\n}\nint main() \n{\n    cin>>n;\n    m=n;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    mapp[i][j]=read();\n    int ans=n*n;\n    for(int j=1;j<n;j++)\n    {\n    for(int i=1;i<=n;i++)\n    a[i]=mapp[i][j];\n    for(int i=1;i<=n;i++)\n    b[i]=mapp[i][j+1];\n    ans-=solve();\n    }\n    cout<<ans;\n}\n```\n",
        "postTime": 1672703679,
        "uid": 714821,
        "name": "loser_seele",
        "ccfLevel": 4,
        "title": "P8108\u9898\u89e3"
    }
]