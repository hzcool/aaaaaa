[
    {
        "content": "## \u5b50\u4e32\u5468\u671f\u67e5\u8be2\n\n\u672c\u6587\u4ecb\u7ecd\u4e86\u5b57\u7b26\u4e32\u7ed3\u6784\u76f8\u5173\u7684\u82e5\u5e72\u6027\u8d28\u4e0e\u80fd\u591f\u5728 $O(n\\log n)$ \u9884\u5904\u7406\uff0c$O(\\log n)$ \u8be2\u95ee\u5b50\u4e32\u6240\u6709\u5468\u671f\u7684\u7b97\u6cd5\u3002\n\n\u540e\u6587\u4f1a\u8bc1\u660e\u5b50\u4e32\u7684\u6240\u6709\u5468\u671f\u80fd\u591f\u901a\u8fc7\u7279\u6b8a\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u6240\u4ee5\u8f93\u51fa\u4e0d\u4f1a\u6210\u4e3a\u74f6\u9888\u3002\n\n***\n\n#### \u7b26\u53f7\u5b9a\u4e49\u3002\n\n\u5b57\u7b26\u4e32\uff1a$s_{1\\ldots n}$\u3002\u4e32\u957f\u4e3a $|s|$\u3002\n\n\u5b50\u4e32\uff1a$s_{[l,r]}$\u3002\n\n\u524d\u7f00 $pre(s, i) = s_{1, i}$\u3002\u540e\u7f00 $suf(s, i)=s_{[|s|-i+1,|s|]}$\u3002\n\n***\n\n#### \u5468\u671f\u548c $\\text{border}$\u3002\n\n\u82e5 $0< p \\leq |s|$\uff0c\u5bf9\u4e8e $1\\leq i\\leq |s| - p$ \u6709 $s_i=s_{i+p}$\uff0c\u5c31\u79f0 $p$ \u4e3a $s$ \u7684\u4e00\u4e2a\u5468\u671f\uff0c\u6700\u5c0f\u5468\u671f\u5199\u4f5c $per(u)$\u3002\n\n\u82e5 $0\\leq r < |s|$\uff0c$pre(s, r) = suf(s, r)$\uff0c\u5c31\u79f0 $pre(s, r)$ \u662f $s$ \u7684 $\\text{border}$\u3002\n\n**\u672c\u6587\u6240\u8ff0 $\\text{border}$ \u5b9a\u4e49\u4e0e\u539f\u9898\u6709\u5dee\u522b\u3002**\n\n\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a$s_{1..k}$ \u4e3a $s$ \u7684 $\\text{border}\\rightleftharpoons|s| - k$ \u4e3a $s$ \u7684\u5468\u671f\u3002\n\n$\\textbf{Weak Periodicity Lemma}$\uff1a\u82e5 $p$ \u548c $q$ \u662f $s$ \u7684\u5468\u671f\uff0c$p+q\\leq |s|$\uff0c\u5219 $\\gcd(p, q)$ \u4e5f\u662f $s$ \u7684\u5468\u671f\u3002\n\n\u8bc1\u660e\uff1a\u4ee4 $d=q-p\\ (q > p)$\uff0c $i - p < 0$ \u548c $i + q \\leq |s|$ \u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u7acb\uff0c\u4e8e\u662f\u8981\u4e48\u5f97\u5230 $s_i=s_{i-p}=s_{i-p+q}=s_d$ \u8981\u4e48\u5f97\u5230 $s_i=s_{i+q}=s_{i+q-p}=s_d$\u3002\n\n\u4e8e\u662f $d$ \u548c $p$ \u90fd\u662f $s$ \u7684\u5468\u671f\uff0c$d+p\\leq |s|$\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u66f4\u76f8\u51cf\u635f\u7684\u8fc7\u7a0b\uff0c\u6700\u540e\u4fbf\u4f1a\u5f97\u5230 $\\gcd(p, q)$ \u4e5f\u4e3a $s$ \u7684\u5468\u671f\u3002\n\n$\\textbf{Periodicity Lemma}$\uff1a\u82e5 $p$ \u548c $q$ \u662f $s$ \u7684\u5468\u671f\uff0c$p+q-\\gcd(p, q)\\leq |s|$\uff0c\u5219 $\\gcd(p, q)$ \u4e5f\u662f $s$ \u7684\u5468\u671f\u3002\n\n***\n\n#### \u5b57\u7b26\u4e32\u5339\u914d\n\n\u719f\u77e5\u7684\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5\u6709 $\\text{KMP}$\u3002\n\n\u5176\u4e2d $fail_i$ \u8868\u793a\u4e86 $s_{1,i}$ \u7684\u6700\u957f $\\text{border}$\u3002\n\n\u800c\u5f88\u663e\u7136\u5730 $\\text{border}$ \u7684 $\\text{border}$ \u662f $\\text{border}$\u3002\n\n\u6240\u4ee5\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709 $\\text{border}$ \u4fbf\u4e3a $fail_{|s|},fail_{fail_{|s|}},fail_{fail_{fail_{|s|}}},\\ldots$\u3002\n\n**\u5f15\u7406**\uff1a\u5b57\u7b26\u4e32 $u$ \u548c $v$ \u6ee1\u8db3 $2|u| \\geq |v|$\uff0c\u5219 $u$ \u5728 $v$ \u4e2d\u7684\u6240\u6709\u5339\u914d\u4f4d\u7f6e\u7ec4\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u516c\u5dee\u4e3a $per(u)$\u3002\n\n\u8bc1\u660e\uff1a\u53ea\u8003\u8651\u5339\u914d\u6b21\u6570\u5927\u4e8e $2$ \u7684\u60c5\u51b5\u3002$2|u|\\geq|v|$ \u8868\u660e\u4e86\u4e24\u6b21\u5339\u914d\u4e4b\u95f4 $u$ \u7684\u4f4d\u7f6e\u5fc5\u6709\u4ea4\uff0c\u800c\u4e24\u6b21\u4f4d\u7f6e\u4e4b\u5dee\u5fc5\u5b9a\u4e3a $u$ \u7684\u4e00\u4e2a\u5468\u671f\u3002\n\n\u8003\u8651\u7b2c\u4e00\u6b21\u7b2c\u4e8c\u6b21\u548c\u6700\u540e\u4e00\u6b21\u5339\u914d\uff0c\u6839\u636e $\\textbf{Weak Periodicity Lemma}$ \u53ef\u77e5 $\\gcd$(\u7b2c\u4e00\u6b21\u548c\u7b2c\u4e8c\u6b21\u8ddd\u79bb\u4e4b\u5dee\uff0c\u7b2c\u4e8c\u6b21\u548c\u6700\u540e\u4e00\u6b21\u8ddd\u79bb\u4e4b\u5dee) \u4e3a $u$ \u7684\u5468\u671f\u3002\n\n\u901a\u8fc7\u7b80\u5355\u7684\u53cd\u8bc1\u6cd5\u53ef\u4ee5\u5f97\u51fa\u5b83\u4fbf\u662f $u$ \u7684\u6700\u5c0f\u5468\u671f\u3002\u4ece\u800c\u5f97\u5230 $v$ \u5728\u6b64\u7684\u7ed3\u6784\u4e3a $u$ \u7684\u6700\u5c0f\u5468\u671f\u7684\u4e0d\u65ad\u91cd\u590d\u3002\n\n***\n\n#### $\\text{border}$ \u7684\u7ed3\u6784\n\n**\u5f15\u7406**\uff1a\u5b57\u7b26\u4e32 $s$ \u7684\u6240\u6709\u4e0d\u5c0f\u4e8e $\\frac{|s|}2$ \u7684 $\\text{border}$ \u957f\u5ea6\u7ec4\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n\u8bc1\u660e\uff1a\u6709\u7b49\u4ef7\u7684\u8bf4\u6cd5\u4e3a\u672c\u8d28\u4e0d\u540c\u7684\u957f\u5ea6\u5c0f\u4e8e $\\frac{|s|}2$ \u7684 $s$ \u7684\u5468\u671f\u81f3\u591a\u53ea\u6709\u4e00\u4e2a\u3002\u7528\u7b80\u5355\u7684\u53cd\u8bc1\u6cd5\u4e0e $\\textbf{Weak Periodicity Lemma}$ \u53ef\u4ee5\u5f97\u5230\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c06 $\\text{border}$ \u6309\u7167\u957f\u5ea6\u5206\u7c7b\uff0c\u5206\u4e3a $[1, 2), [2, 4), [4, 8), \\ldots [2^{k-1}, 2^k), [2^k, |s|)$ \u8fd9\u4e9b\u96c6\u5408\u3002\n\n\u5bf9\u4e8e\u957f\u5ea6\u76f8\u540c\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32 $u, v$\uff0c\u8bb0 $PS(u, v)=\\{k|pre(u, k)=suf(v, k)\\}$\u3002\n\n\u8bb0 $LargePS(u, v)=\\{k\\in PS(u, v)|k \\geq \\frac{|u|}2\\}$\u3002\n\n\u5219\u4e00\u4e2a $\\text{border}$ \u96c6\u5408\u53ef\u4ee5\u8868\u793a\u4e3a \u3002$LargePS(pre(s, 2^i), suf(s, 2^i))$\u3002\n\n**\u5f15\u7406**\uff1a$LargePS(u, v)$ \u7ec4\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n\u8bc1\u660e\uff1a$\\text{border}$ \u7684 $\\text{border}$ \u662f $\\text{border}$\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u96c6\u5408\u91cc\u6700\u957f\u7684 $\\text{border}$ \u800c\u8a00\uff0c\u4e0d\u5c0f\u4e8e\u5b83\u957f\u5ea6\u4e00\u534a\u7684 $\\text{border}$ \u957f\u5ea6\u7ec4\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n**\u63a8\u8bba**\uff1a\u5b57\u7b26\u4e32 $s$ \u7684\u6240\u6709 $\\text{border}$ \u957f\u5ea6\u6392\u5e8f\u540e\u53ef\u5206\u6210 $O(\\log |s|)$ \u6bb5\uff0c\u6bcf\u6bb5\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u63a8\u8bba\uff0c\u53ef\u4ee5\u5c1d\u8bd5 [[WC2016]\u8bba\u6218\u6346\u7af9\u7aff](https://www.luogu.com.cn/problem/P4156)\u3002\n\n***\n\n#### \u5b50\u4e32\u5468\u671f\u67e5\u8be2\n\n* \u7ed9\u5b9a\u5b57\u7b26\u4e32 $str$\uff0c\u6bcf\u6b21\u8be2\u95ee $str$ \u4e00\u4e2a\u5b50\u4e32\u7684\u6240\u6709\u5468\u671f\uff0c\u7528 $O(\\log |str|)$ \u4e2a\u7b49\u5dee\u6570\u5217\u8868\u793a\u3002\n\n\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u603b\u662f\u5148\u6c42 $\\text{border}$ \u518d\u63a8\u51fa\u5468\u671f\u3002\n\n\u6211\u4eec\u8bbe\u7ed9\u5b9a\u7684\u5b50\u4e32\u4e3a $s$\u3002\n\n\u5148\u8003\u8651\u957f\u5ea6\u4e3a $[2^{i-1}, 2^i)$ \u7684\u96c6\u5408\u3002\n\n\u5047\u8bbe $\\text{border}$ \u4e3a $s_{1\\ldots k}$\uff0c\u79f0\u4ed6\u4e3a $t$\u3002\u5b83\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53 $pre(t, 2^{i-1})=pre(s, 2^{i-1}), suf(t, 2^{i-1})=suf(s, 2^{i-1})$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa $pre(s, 2^{i-1})$ \u5728 $pre(s, 2^i)$ \u4e2d\u7684\u5339\u914d\u4f4d\u7f6e\u4e0e $suf(s, 2^{i-1})$ \u5728 $suf(s, 2^i)$ \u4e2d\u7684\u5339\u914d\u4f4d\u7f6e\u7684\u4ea4\u96c6\uff08\u79fb\u4f4d\u540e\uff09\u3002\n\n\u800c\u5339\u914d\u4f4d\u7f6e\u4e3a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\u6211\u4eec\u53ea\u7528\u6c42\u7b2c\u4e00\u6b21\u5339\u914d\u7b2c\u4e8c\u6b21\u5339\u914d\u4e0e\u6700\u540e\u4e00\u6b21\u5339\u914d\u4fbf\u53ef\u77e5\u9053\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u3001\u516c\u5dee\u3001\u9879\u6570\u3002\u76f8\u5f53\u4e8e\u5b9e\u73b0\u4e00\u4e2a $succ(v, i)$ \u548c $pred(v, i)$ \u8868\u793a\u6c42 $v$ \u4ece\u4f4d\u7f6e $i$ \u5f00\u59cb\u5411\u524d/\u540e\u7684\u7b2c\u4e00\u6b21\u5339\u914d\u4f4d\u7f6e\u3002\n\n\u95ee\u9898\u53d8\u4e3a $str$ \u4e2d\u6240\u6709\u957f\u5ea6\u4e3a $2^{i-1}$ \u7684\u4e32\u6709\u54ea\u4e9b\u4f4d\u7f6e\u80fd\u591f\u4e0e\u4e4b\u5339\u914d\u3002\n\n\u53d1\u73b0\u8fd9\u5c31\u662f\u500d\u589e\u6c42\u540e\u7f00\u6570\u7ec4\u7684\u65f6\u5019\u628a\u6bcf\u4e00\u8f6e\u7ed3\u675f\u540e\u7684\u7ed3\u679c\u90fd\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u6700\u540e\u662f\u957f\u5ea6\u4e3a $[2^k, |s|)$ \u7684\u96c6\u5408\u3002\u505a\u6cd5\u5176\u5b9e\u4e00\u6837\uff0c\u628a\u4e0a\u9762\u6240\u6709 $2^i$ \u66ff\u6362\u4e3a $|s|$ \u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86 $O(n\\log n)$ \u9884\u5904\u7406\uff0c\u5355\u6b21\u8be2\u95ee $O(log^2n)$ \u7684\u4f18\u79c0\u505a\u6cd5\u3002\n\n\u5982\u4f55\u4f18\u5316\uff1f\u8003\u8651\u5c06 $O(log^2n)$ \u964d\u4f4e\u3002\u8fd9\u65f6\u74f6\u9888\u4e3a\u6c42\u51fa\u7b49\u5dee\u6570\u5217\u3001\u7b49\u5dee\u6570\u5217\u6c42\u4ea4\u3002\n\n\u7b49\u5dee\u6570\u5217\u6c42\u4ea4\u7684\u4f18\u5316\u80af\u5b9a\u5efa\u7acb\u5728\u5b57\u7b26\u4e32\u6027\u8d28\u4e0a\u3002\n\n**\u5f15\u7406**\uff1a\u56db\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3 $|x_1|=|y_1|\\geq|x_2|=|y_2|$\uff0c\u4e14 $x_1$ \u5728 $y_2y_1$ \u4e2d\u81f3\u5c11\u5339\u914d $3$ \u6b21\uff0c$y_1$ \u5728 $x_1x_2$ \u4e2d\u81f3\u5c11\u5339\u914d $3$ \u6b21\uff0c\u5219 $x_1$ \u548c $y_1$ \u7684\u6700\u5c0f\u5468\u671f\u76f8\u7b49\u3002\n\n\u8bc1\u660e\uff1a\u5426\u5219\u4e0d\u59a8\u8bbe $per(x_1) > per(y_1)$\uff0c\u8003\u8651 $x_1$ \u5728 $y_2y_1$ \u4e2d\u7684\u6700\u53f3\u8fb9\u4e00\u6b21\u5339\u914d, \u8bbe\u5b83\u4e0e $y_1$ \u7684\u91cd\u53e0\u90e8\u5206\u4e3a $z$\u3002\n\n\u5219 $|z| \\geq 2per(x_1) > per(x_1) + per(y_1)$, \u5219 $z$ \u62e5\u6709\u5468\u671f $d = \\gcd (per(x_1), per(y_1))|per(x_1)$, \u4e8e\u662f $d$ \u4e5f\u662f $x_1$ \u7684\u5468\u671f\u3002\u4f46 $d < per(x_1)$, \u77db\u76fe\u3002\n\n\u540c\u6837\uff0c$y_1$ \u5728 $x_1x_2$ \u91cc\u81f3\u5c11\u5339\u914d $3$ \u6b21\u4fdd\u8bc1\u4e86 $per(x_1)<per(y_1)$ \u77db\u76fe\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5408\u5e76\u7684\u4e24\u4e2a\u7b49\u5dee\u6570\u5217\u8981\u4e48\u957f\u5ea6\u4e0d\u8db3 $3$\uff0c\u8981\u4e48\u516c\u5dee\u76f8\u540c\u3002\u6240\u4ee5\u53ef\u4ee5 $O(1)$ \u5408\u5e76\u3002\n\n\u6c42\u51fa\u7b49\u5dee\u6570\u5217\u7684\u4f18\u5316\u5982\u4e0b\u3002\n\n\u6ce8\u610f\u5230\u5728\u6c42 $succ(v, i)$ \u7684\u65f6\u5019\uff0c$|v|$ \u662f\u4e8c\u7684\u5e42\uff0c\u6211\u4eec\u53ea\u5728\u610f\u8d77\u70b9\u5728 $[i, i+|v|]$ \u7684\u5339\u914d\u3002\n\n\u6211\u4eec\u628a\u539f\u4e32\u6309 $2^k$ \u4e3a\u6bb5\u957f\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u8003\u8651\u957f\u5ea6\u4e3a $2^k$ \u7684\u4e32\u7684\u5339\u914d\u4fe1\u606f\u3002\u8fd9\u6837 $[i, i + |v|]$ \u7684\u5339\u914d\u6700\u591a\u8de8\u8d8a\u4e24\u4e2a\u6bb5\u3002\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u5f97\u5230\u8fd9\u4e24\u4e2a\u6bb5\u7684\u4fe1\u606f\uff0c\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002\n\n\u5982\u4f55\u7ef4\u62a4\u5339\u914d\u4fe1\u606f\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u6700\u591a\u53ea\u6709 $O(n)$ \u4e2a\u957f\u5ea6\u4e3a $2^k$ \u7684\u4e32\u5728\u539f\u4e32\u4e2d\u5339\u914d\u4e86\u81f3\u5c11\u4e00\u6b21\u3002\u800c $k$ \u7684\u53d6\u503c\u6709 $O(\\log n)$ \u79cd\u3002\u6240\u4ee5\u5339\u914d\u4fe1\u606f\u7684\u7a7a\u95f4\u662f $O(n\\log n)$ \u7684\u3002\u6211\u4eec\u53ef\u4ee5\u7528 $\\text{hashtable}$ \u6765\u89e3\u51b3\u3002\u8bbe $h_{i,k}$ \u8868\u793a $S_{[i, i + 2^k]}$ \u7684\u54c8\u5e0c\u503c\uff0c\u53d1\u73b0 $h_{[i, k]}$ \u53ef\u4ee5\u7531 $h_{[i, k - 1]}$ \u548c $h_{[i+2^{k-1}, k-1]}$ \u5728 $O(1)$ \u7684\u65f6\u95f4\u6c42\u51fa\u3002\u6240\u4ee5\u9884\u5904\u7406\u65f6\u95f4\u4e3a $O(n\\log n)$\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(1)$ \u6c42\u51fa\u7b49\u5dee\u6570\u5217\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u6240\u6709\u7684\u5de5\u4f5c\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)-O(\\log n)$\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\u3002\n\n",
        "postTime": 1585234101,
        "uid": 49093,
        "name": "_sys",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": "\u4ece6\u6708\u4efd\u5495\u5495\u5495\u5230\u73b0\u5728\u7684\u4e00\u9053\u9898\n\n\u5bf9\u4e86\u7533\u8bf7\u589e\u5f3a\u6570\u636e\uff0c\u4f3c\u4e4e\u66b4\u529b\u86e4\u5e0c\u53ef\u4ee5\u901a\u8fc7\u73b0\u5728\u7684\u6570\u636e\n\n\u4e0d\u8fc7\u8fd8\u662f\u597d\u597d\u5199\u4f60\u7684samn\u8fde\u5427\n\n# \u6570\u636e\u8303\u56f4\u662f\u5047\u7684,$n,m<=2\u00d710^5$\n_____\n\n### \u524d\u7f6e\u829d\u58eb\uff1asam(\u540e\u7f00\u81ea\u52a8\u673a)\n\n~~\u86e4\uff1f\u4e0d\u4f1a\u540e\u7f00\u81ea\u52a8\u673a\uff1f\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u819c\u677f\u533a\uff0c\u5305\u6559\u4e0d\u5305\u4f1a~~\n\n### \u524d\u7f6e\u829d\u58eb\uff1a\u7ebf\u6bb5\u6811\u5408\u5e76\n\n~~\u86e4\uff1f\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u51fa\u95e8\u5de6\u8f6c\u5ea6\u5a18\uff0c\u5305\u6559\u4e0d\u5305\u4f1a~~\n\n## \u672c\u9898\u9898\u89e3\n\n\u4e00\u53e5\u8bdd\u9898\u610f:\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u6c42\u533a\u95f4\u7684border\n\n\u90a3\u4e48\u6211\u4eec\u89c1\u5230\u8fd9\u79cd\u9898\u8003\u8651\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u4e71\u641e\u51e0\u4e0b\u770b\u770b\u80fd\u4e0d\u80fd\u51fa\u6765\n\n\u90a3\u4e48\u5f53\u7136\u8981\u5bf9\u5148\u5bf9\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5efa\u4e00\u4e2a\u540e\u7f00\u81ea\u52a8\u673a\u51fa\u6765\uff0c\u7136\u540e\u63d0\u53d6\u8fd9\u53ea\u540e\u7f00\u81ea\u52a8\u673a\u7684parent\u6811\u770b\u770b\u6709\u6ca1\u6709\u4ec0\u4e48\u6027\u8d28\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6c42(l,r)\u7684border\u76f8\u5f53\u4e8e\u627e\u4e00\u4e2ai\u6ee1\u8db3\u9650\u5236$i-l+1 \\leq lcs(r,i), l<i \\leq r$\u5e76\u4e14\u8ba9i\u6700\u5927\n\n\u90a3\u4e48\u65e2\u7136\u6709\u8fd9\u4e2alcs(\u4e24\u4e2a\u524d\u7f00\u7684\u6700\u957f\u516c\u5171\u540e\u7f00)\u8fd9\u4e2a\u9650\u5236\u6761\u4ef6\u7684\u8bdd\u6211\u4eec\u5c31\u8003\u8651\u80fd\u4e0d\u80fd\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u5904\u7406\u8fd9\u4e2a\u6761\u4ef6\u4e86\n\n\u5148\u8ba9\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u90e8\u5206\u5206\uff0c\u4e32\u662f\u968f\u673a\u751f\u6210\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4parent\u6811\u7684\u9ad8\u5ea6\u662flog\u7684\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728parent\u6811\u4e0a\u66b4\u529b\u8df3r\u8fd9\u4e2a\u524d\u7f00\u5bf9\u5e94\u7684\u8282\u70b9\u5230\u7956\u5148\u7684\u8def\u5f84\u4e86\uff0c\u6b64\u65f6\u6211\u4eec\u5b9e\u9645\u4e0a\u5728\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u679a\u4e3elcs(r,i)\u7684\u503c\uff08\u56e0\u4e3aparent\u6811\u7684\u6027\u8d28\u662f\u4e24\u4e2a\u524d\u7f00\u8282\u70b9\u7684lca\u7684len\u503c\u5c31\u662f\u8fd9\u4e24\u4e2a\u70b9lcp\u7684len\u503c\uff09,\n\n\u90a3\u4e48\u6211\u4eec\u628a\u9650\u5236\u6761\u4ef6\u7b80\u5355\u505a\u4e2a\u8f6c\u5316\u5c31\u662f\u6c42\u5b50\u6811\u4e2d\u70b9\u7684\u533a\u95f4\u6700\u5927\u503c\u95ee\u9898(\u8981\u6c42i\u8fd9\u4e2a\u8282\u70b9\u5fc5\u987b\u5728\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d,\u9650\u5236\u6761\u4ef6\u5728lcs\u503c\u786e\u5b9a\u7684\u6761\u4ef6\u4e0b\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u95ee\u9898)\u8fd9\u4e2a\u4e1c\u897f\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684right\u96c6\u5408\u7684\u533a\u95f4\u6700\u5927\u503c\u5373\u53ef\u8f7b\u677e\u641e\u5b9a\n\n\u90a3\u4e48\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u90e8\u5206\u5206\u4e4b\u540e\u6765\u8003\u8651parent\u6811\u6811\u9ad8\u4e0d\u662flog\u7684\u60c5\u51b5\n\n\u5176\u5b9e\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u6b64\u65f6lcs\u7684\u503c\u7684\u79cd\u7c7b\u662f$O(n)$\u7ea7\u522b\u7684\u800c\u4e0d\u662f$O(logn)$\u7ea7\u522b\u7684\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5f3a\u884c\u7ed9\u521a\u624d\u7684\u66b4\u529b\u5957\u4e0a\u4e00\u4e2a\u6811\u5256\u770b\u770b\u80fd\u4e0d\u80fd\u505a\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0r\u5bf9\u5e94\u7684\u524d\u7f00\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4f1a\u88ab\u62c6\u5206\u6210\u82e5\u5e72\u6761\u91cd\u94fe\u7684**\u524d\u7f00**(\u524d\u7f00\u8fd9\u70b9\u76f8\u5f53\u91cd\u8981\uff0c\u4e0d\u7136\u8fd9\u9898\u4e0d\u80fd\u505a)\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u94fe\u524d\u7f00\u7684\u5e95\u90e8\u90a3\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6211\u4eec\u53ef\u4ee5\u5957\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6b64\u65f6\u7684\u590d\u6742\u5ea6\u662f$O(log^2n)$\u7684\n\n\u63a5\u4e0b\u6765\u662f\u6bcf\u6761\u91cd\u94fe\u524d\u7f00\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u987a\u7740\u8fd9\u4e2a\u91cd\u94fe\u628a\u6574\u68f5\u6811\u62ce\u8d77\u6765\uff0c\u5c31\u50cf\u8fd9\u5f20\u56fe\u4e00\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/43944.png)\n\n\u6211\u4eec\u91cd\u65b0\u4fee\u6539\u4e00\u4e0b\u9650\u5236\u6761\u4ef6\uff0c\u628a$i-l+1 \\leq lcs(r,i)$\u6539\u5199\u6210$i-lcs(r,i) < l$\n\n\u5047\u8bbe\u6211\u4eec\u4ee4key(i)=i-len(x)\u5176\u4e2dx\u662fi\u548c\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u91cd\u94fe\u7684lca\n\n\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u5176\u5b9e\u5c31\u662f\u6c42\u5728\\[l,r)\u8fd9\u4e2a\u533a\u95f4\u5f53\u4e2d\u5e76\u4e14key\u503c\u5c0f\u4e8el\u7684i\u7684\u6700\u5927\u503c\n\n\u4e4d\u4e00\u770b\u8fd9\u4e1c\u897f\u4f3c\u4e4e\u9700\u8981\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\u624d\u80fd\u5904\u7406\u2026\u2026\n\n\u4f46\u5176\u5b9e\u662f\u4e0d\u9700\u8981\u7684\u2026\u2026\u56e0\u4e3a\u6211\u4eec\u53d1\u73b0\u6709\u4e2a\u64cd\u4f5c\u53eb**\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206**,\u5982\u679c\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4key(i)\u7684\u533a\u95f4\u6700\u5c0f\u503c\u7684\u8bdd\uff0c\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u77e5\u9053\u8fd9\u4e2a\u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5408\u6cd5\u7684i\u503c\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u7ef4\u62a4key(i)\u7684\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u5728\u4e00\u4e2alog\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u8f7b\u677e\u51fa\u89e3\u4e86\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u5185\u9700\u8981\u5b58\u50a8\u8fd9\u4e2a\u91cd\u94fe\u524d\u7f00\u7684\u6240\u6709\u8f7b\u5b50\u6811\u7684\u4fe1\u606f\u624d\u80fd\u6b63\u786e\u7684\u51fa\u89e3\uff0c\u5982\u679c\u6211\u4eec\u91c7\u53d6\u66b4\u529bdfs\u7684\u65b9\u5f0f\u6765\u63d2\u5165\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u5417\uff1f\n\n(\u5176\u5b9e\u8fd9\u4e2a\u590d\u6742\u5ea6\u5bf9\u4e0d\u5bf9\u65e0\u6240\u8c13\u7684\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u4f60\u90fd\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u5f3a\u884c\u63d2\u5165\u70b9,\u4e0d\u8fc7\u8fd9\u91cc\u5176\u5b9e\u66b4\u529b\u63d2\u70b9\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba9\u4f60\u5c11\u5199\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5408\u5e76)\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u70b9\u7684\u88ab\u63d2\u5165\u6b21\u6570\uff0c\u663e\u7136\u4e00\u4e2a\u70b9\u53ea\u4f1a\u88ab\u63d2\u5165\u8fd9\u4e2a\u70b9\u7684\u8f7b\u8fb9\u6df1\u5ea6\u6b21\uff0c\u90a3\u4e48\u6bcf\u4e2a\u70b9\u7684\u8f7b\u8fb9\u6df1\u5ea6\u90fd\u662f$O(logn)$\u7684\u81ea\u7136\u603b\u7684\u63d2\u5165\u6b21\u6570\u5c31\u662f$O(nlogn)$\u7684\n\n\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5148\u5c06parent\u6811\u91cd\u94fe\u5256\u5206\u4e4b\u540e\u79bb\u7ebf\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5bf9\u4e8e\u91cd\u94fe\u5e95\u7aef\u7684\u70b9\u5c06\u8fd9log\u4e2a\u8be2\u95ee\u4e8c\u6b21\u79bb\u7ebf\u4e4b\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u89e3\u51b3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u91cd\u94fe\u524d\u7f00\u7684\u8be2\u95ee\u6211\u4eec\u5c06\u7740log\u4e2a\u8be2\u95ee\u4e8c\u6b21\u79bb\u7ebf\u4e4b\u540e\uff0c\u91c7\u7528\u4e0b\u9762\u8fd9\u4e2a\u7b97\u6cd5\u89e3\u51b3(\u5176\u5b9e\u5c31\u662f\u94fe\u5206\u6cbb\uff0c\u4e0d\u8fc7\u6709\u4eba\u53eb\u4ed6\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76,\u4e0d\u8fc7\u8fd9\u9898\u548c\u4f20\u7edf\u7684\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u4e0d\u4e00\u6837)\n\n\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u5904\u7406\u67d0\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u6240\u6709\u8be2\u95ee\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u9012\u5f52\u7684\u5206\u6cbb\u548c\u8fd9\u6761\u91cd\u94fe\u76f8\u5173\u7684\u6240\u6709\u91cd\u94fe\uff0c\u63a5\u4e0b\u6765\u4ece\u9ad8\u5230\u4f4e\u7684\u679a\u4e3e\u91cd\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u7684\u8f7b\u5b50\u6811\u66b4\u529bdfs\u4e00\u904d\u5728\u63d2\u5165\u5230\u7ef4\u62a4\u533a\u95f4key\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\u4e2d\u53bb,\u7136\u540e\u56de\u7b54\u6240\u6709\u548c\u5f53\u524d\u91cd\u94fe\u524d\u7f00\u76f8\u5173\u7684\u8be2\u95ee\n\n\u7136\u540e\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u8fd9\u9053\u9898\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\u7531\u4e8e\u6570\u636e\u6781\u5176\u6c34\u6240\u4ee5\u8dd1\u7684\u98de\u5feb\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;const int N=2*1e5+10;\nchar mde[N];int ans[N];int n;int m;int siz[2*N];int h[2*N];int top[2*N];\nint v[2*N];int x[2*N];int ct;int al[2*N];int len[2*N];int fa[2*N];int ql[N];int qr[N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\nstruct suffixautomaton//\u7b80\u6613\u540e\u7f00\u81ea\u52a8\u673a\u6a21\u677f\n{\n    int mp[2*N][30];int ct;\n    inline void ih(){for(int i=1;i<=n;i++)len[i]=i;ct=n+1;}\n    inline void ins(int i,int c)\n    {\n        int p=(i==1)?n+1:i-1;for(;p&&mp[p][c]==0;p=fa[p])mp[p][c]=i;\n        if(p==0){fa[i]=n+1;return;}int q=mp[p][c];\n        if(len[q]==len[p]+1){fa[i]=q;return;}len[++ct]=len[p]+1;\n        for(int j=1;j<=26;j++)mp[ct][j]=mp[q][j];\n        for(;p&&mp[p][c]==q;p=fa[p])mp[p][c]=ct;\n        fa[ct]=fa[q];fa[q]=fa[i]=ct;return;\n    }\n    inline void build(){for(int i=1;i<=ct;i++)add(fa[i],i);}\n}sam;\ninline int dfs1(int u)//\u91cd\u94fe\u5256\u5206\n{\n    for(int i=al[u];i;i=x[i])\n        siz[u]+=dfs1(v[i]),h[u]=(siz[h[u]]<siz[v[i]])?v[i]:h[u];return ++siz[u];\n}\ninline void dfs2(int u)\n{\n    top[u]=top[u]?top[u]:u;if(h[u])top[h[u]]=top[u],dfs2(h[u]);\n    for(int i=al[u];i;i=x[i])if(v[i]!=h[u])dfs2(v[i]);return;\n}\nnamespace lt1//\u7ebf\u6bb5\u6811\u5408\u5e76\n{\n    int s[20*N][2];int ct;int va[20*N];int ali[18*N];int nx[18*N];int mct;int tw[18*N];\n    inline void pb(int p,int tim){tw[++mct]=tim;nx[mct]=ali[p];ali[p]=mct;}\n    inline void ins(int p,int l,int r,int pos)\n    {\n        va[p]=pos;if(r-l==1)return;int mid=(l+r)/2;\n        if(pos<=mid)ins(s[p][0]=++ct,l,mid,pos);\n        else ins(s[p][1]=++ct,mid,r,pos);return;\n    }\t\n    inline int cmx(int p,int l,int r,int dl,int dr)\n    {\n        if((dl==l&&dr==r)||p==0){return va[p];}int mid=(l+r)/2;int res=0;\n        if(dl<mid)res=max(res,cmx(s[p][0],l,mid,dl,min(dr,mid)));\n        if(mid<dr)res=max(res,cmx(s[p][1],mid,r,max(dl,mid),dr));return res;\n    }\n    inline void mg(int p1,int p2,int l,int r)\n    {\n        if(r-l==1)return;int mid=(l+r)/2;\n        if(s[p1][0]&&s[p2][0])mg(s[p1][0],s[p2][0],l,mid);else if(s[p2][0])s[p1][0]=s[p2][0];\n        if(s[p1][1]&&s[p2][1])mg(s[p1][1],s[p2][1],mid,r);else if(s[p2][1])s[p1][1]=s[p2][1];\n        va[p1]=max(va[s[p1][0]],va[s[p1][1]]);\n    }\n    inline void ih(){ct=n;for(int i=1;i<=n;i++)ins(i,0,n,i);}\n    inline int dfs(int u)\n    {\n        int ret=(u<=n)?u:0;\n        for(int i=al[u];i;i=x[i])if(ret)mg(ret,dfs(v[i]),0,n);else ret=dfs(v[i]);\n        for(int i=ali[u],tv=tw[i];i;i=nx[i],tv=tw[i])\n        {\n        \tint R=min(ql[tv]+len[u],qr[tv]);\n        \tif(ql[tv]<R)ans[tv]=max(ans[tv],cmx(ret,0,n,ql[tv]-1,R-1));\n        }return ret;\n    }\n}\nnamespace lt2//\u94fe\u5206\u6cbb+\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\n{\n    int s[2*N][2];int ct;int va[2*N];int ali[18*N];int nx[18*N];int mct;int tw[18*N];\n    inline void pb(int p,int tim){tw[++mct]=tim;nx[mct]=ali[p];ali[p]=mct;}\n    inline void ih(){for(int i=0;i<=2*N-10;i++)va[i]=0x3f3f3f3f;}\n    inline void clr()\n    {\n        for(int i=1;i<=ct;i++)va[i]=0x3f3f3f3f;\n        for(int i=1;i<=ct;i++)s[i][0]=s[i][1]=0;ct=1;\n    }\n    inline void ins(int p,int l,int r,int pos,int val)\n    {\n        va[p]=min(va[p],val);if(r-l==1)return;int mid=(l+r)/2;\n        if(pos<=mid)ins(s[p][0]=s[p][0]?s[p][0]:++ct,l,mid,pos,val);\n        else ins(s[p][1]=s[p][1]?s[p][1]:++ct,mid,r,pos,val);\n    }\n    inline int cmx(int p,int l,int r,int dl,int dr,int lim)\n    {\n        if(va[p]>=lim)return -0x3f3f3f3f;if(r-l==1)return r;int mid=(l+r)/2;\n        if(mid<dr)\n        {\n            int ret=cmx(s[p][1],mid,r,max(dl,mid),dr,lim);\n            if(ret!=-0x3f3f3f3f)return ret;\n        }if(dl<mid)return cmx(s[p][0],l,mid,dl,min(dr,mid),lim);return -0x3f3f3f3f;\n    }\n    inline void subsolve(int u,int le)//\u66b4\u529bdfs\u63d2\u5165\n    \t{if(u<=n)ins(1,0,n,u,u-le);for(int i=al[u];i;i=x[i])subsolve(v[i],le);}\n    inline void solve(int u)//\u94fe\u5206\u6cbb\n    {\n        for(int p=u;p;p=h[p])\n            for(int i=al[p];i;i=x[i])if(v[i]!=h[p])solve(v[i]);clr();\n        for(int p=u;p;p=h[p])\n        {\n            for(int i=al[p];i;i=x[i])if(v[i]!=h[p])subsolve(v[i],len[p]);\n            if(p<=n)ins(1,0,n,p,p-len[p]);\n            for(int i=ali[p],tv=tw[i];i;i=nx[i],tv=tw[i])\n            \t{ans[tv]=max(ans[tv],cmx(1,0,n,ql[tv]-1,qr[tv]-1,ql[tv]));}\n        }\n    }\n}\ninline void stqr(int tim,int l,int r)//\u66b4\u529b\u8df3\u91cd\u94fe\uff0c\u5c06\u8be2\u95ee\u4e8c\u6b21\u79bb\u7ebf\n{\n    if(l==r)return;ql[tim]=l;qr[tim]=r;\n    for(int p=r;p;p=fa[top[p]]){lt1::pb(p,tim);lt2::pb(p,tim);}\n}\nint main()\n{\n    scanf(\"%s\",mde+1);for(n=1;mde[n+1]!='\\0';n++);sam.ih();lt2::ih();\n    for(int i=1;i<=n;i++)sam.ins(i,mde[i]-'a'+1);sam.build();\n    dfs1(n+1);dfs2(n+1);scanf(\"%d\",&m);\n    for(int i=1,l,r;i<=m;i++)scanf(\"%d%d\",&l,&r),stqr(i,l,r);\n    lt1::ih();lt1::dfs(n+1);lt2::solve(n+1);\n    for(int i=1;i<=m;i++)if(ans[i]==0)printf(\"0\\n\");else printf(\"%d\\n\",ans[i]-ql[i]+1);return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1542548177,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": " $ Q $ \u6b21\u8be2\u95ee\u5b50\u4e32\u7684\u6700\u957f Border.    $ |S|,Q\\le 2\\times 10^5 $ \n\n\u6c42 $ [l,r] $ \u7684 border \u7b49\u4ef7\u4e8e\u9009\u4e00\u4e2a\u6700\u5927\u7684 $ i\\in [l,r) $ ,\u4f7f $ \\text{LCS}([1,i],[1,r])\\ge i-l+1 $ \u3002\u6bd4\u8f83\u96be\u4ee5\u5904\u7406\u7684\u662f\uff0c\u8fd9\u4e2a\u6761\u4ef6\u6ca1\u6709\u5355\u8c03\u6027\u3002\n\n\u8003\u8651\u524d\u7f00\u7684 $ \\text{LCS} $ \u5728\u524d\u7f00\u6811\uff08\u4e5f\u662f SAM \u7684 parent \u6811\uff09\u4e0a\u5c31\u662f LCA \u8868\u793a\u7684\u72b6\u6001\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u4e00\u79cdnaive\u7684\u505a\u6cd5\u5c31\u662f\u5148\u7ebf\u6bb5\u6811\u5408\u5e76\u5904\u7406 endpos \u96c6\u5408\uff0c\u7136\u540e\u679a\u4e3e\u524d\u7f00\u6811\u4e0a\u7684\u6bcf\u4e2a\u7956\u5148 $ u $ \uff0c\u5728 $ u $ \u7684 endpos \u96c6\u5408\u4e2d\u627e\u4e00\u4e2a\u5728 $ [l,\\min(r-1,l+len(u)-1)] $ \u4e2d\u4e14\u6700\u5927\u7684\u4f4d\u7f6e\u3002  \n\u7406\u8bba\u6700\u574f\u662f\u5e73\u65b9\u3002~~\u4f46\u662f\u80fd\u8fc7~~\n\n\u5e38\u7528\u5957\u8def\u6811\u4e0a\u500d\u589e\u5728\u8fd9\u91cc\u4e5f\u6ca1\u6cd5\u7528\uff0c\u56e0\u4e3a\u4ece\u4e0b\u5230\u4e0a endpos \u96c6\u5408\u589e\u5927\uff0c\u4f46 $ len $ \u503c\u51cf\u5c0f\uff0c\u540c\u6837\u4e0d\u5355\u8c03\u3002\n\n\u5c06\u95ee\u9898\u8f6c\u5316\u4e00\u6b65\uff0c\u8bb0\u8868\u793a $ [1,r] $ \u7684\u8282\u70b9\u4e3a $ u $ .\u7b49\u4ef7\u4e8e\u4ece**\u6574\u4e2a\u524d\u7f00\u6811\u4e2d\u9009\u4e00\u4e2a\u524d\u7f00\u8282\u70b9** $ v $ (\u8bb0\u5176\u8868\u793a $ [1,i] $ )\uff0c\u8981\u6c42 $ len(\\text{LCA}(u,v))\\ge i-l+1 (\\ i-len(\\text{LCA}(u,v))<l)$\u4e14 $ i $ \u5c3d\u91cf\u5927\u3002\n\n\u7528\u94fe\u5206\u6cbb\u6765\u641e\u8fd9\u4ef6\u4e8b\u3002\u8003\u8651\u5148\u5212\u5206\u8f7b\u91cd\u94fe\uff0c\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u5212\u5206\u4e3a\u81f3\u591a $ \\log_2 n $ \u6bb5\uff08\u4e14\u6bcf\u4e00\u6bb5\u90fd\u662f\u4e00\u6761\u91cd\u94fe\u7684\u5b50\u6bb5\uff09\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u8bb0\u5176\u4e2d\u6700\u6df1\u7684\u70b9\uff08\u5c31\u662f\u8fdb\u53bb\u90a3\u4e2a\u70b9\uff09\u4e3a $ S $ ,\u94fe\u9876\u7aef\u4e3a $ top $ .\u5219\u8d21\u732e\u4e3a\uff1a\n\n- \u4ece $ S $ \u7684\u5b50\u6811\u4e2d\u53d6\u4e00\u4e2a\u70b9\n- \u4ece\u91cd\u94fe\u4e0a $S$ \u4e0a\u9762\u7684\u70b9\u4e2d\u9009\u4e00\u4e2a\u70b9\n- \u4ece\u91cd\u94fe\u4e0a $S$ \u4e0a\u9762\u7684\u70b9\u7684\u8f7b\u5b50\u6811\u4e2d\u9009\u4e00\u4e2a\u70b9\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5404\u6761\u91cd\u94fe\u7684\u8d21\u732e\u53ef\u80fd\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u4f46\u4e00\u5b9a\u6ca1\u6709\u9057\u6f0f\uff0c\u5177\u4f53\u5904\u7406\u5982\u4e0b\uff1a  \n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u540c\u6837\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u6bcf\u4e2a\u8be2\u95ee\u7684\u4ee3\u4ef7\u662f $ \\mathcal O(\\log^2 n) $ .  \n\u6240\u6709\u91cd\u94fe\u957f\u5ea6\u4e4b\u548c\u4e3a $ \\mathcal O(n) $ ,\u6240\u6709\u8f7b\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u662f $ \\mathcal O(n\\log n) $ ,\u6240\u4ee5\u540e\u4e24\u79cd\u8d21\u732e\u603b\u5171\u6d89\u53ca $ \\mathcal O(n\\log n) $ \u4e2a\u70b9\uff0c\u8fd9\u5f88\u597d\uff08\u56e0\u6b64\u6211\u4eec\u7684\u94fe\u5206\u6cbb\u624d\u662f\u6709\u610f\u4e49\u7684\uff0c\u5e76\u4e14\u7b2c\u4e00\u79cd\u60c5\u51b5\u5fc5\u987b\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\uff0c\u5426\u5219\u8fd9\u91cc\u7684\u70b9\u6570\u5c31\u7206\u70b8\u4e86\uff09\u3002  \n\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7b2c $i$ \u4e2a\u53f6\u5b50\u5b58 $ i-len(LCA(u,S)) $ \u7684\u503c\uff08$u$\u662f\u8868\u793a $[1,i]$ \u7684\u70b9\uff09\u3002\u5c06\u201c\u91cd\u94fe\u4e0a $S$ \u4e0a\u9762\u7684\u70b9\u53ca\u5176\u8f7b\u5b50\u6811\u201d\u4e2d\u7684\u524d\u7f00\u70b9\u5168\u90e8\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u3002\u5bf9\u4e8e $S$ \u4e0a\u7684\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u4e00\u4e2a\u6700\u5927\u7684 $i$ \u6ee1\u8db3 $i<r,i-len(LCA(u,S))<l$ \u3002\u8fd9\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u505a\u5230\u3002\n\n\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u653e\u5230\u6bcf\u4e2a\u6bb5\u6700\u6df1\u7684\u70b9\uff08\u8fdb\u53bb\u7684\u70b9\uff09\u4e0a\uff0c\u7edf\u4e00\u5904\u7406\u6240\u6709\u8be2\u95ee\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $ \\mathcal O((n+Q)\\log^2 n) $ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $ \\mathcal O((n+Q)\\log n) $ \n\n\u4e00\u4e9b\u7ec6\u8282\uff1a\u5904\u7406\u5b8c\u4e00\u6761\u91cd\u94fe\u540e\u8981\u64a4\u9500\u5176\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u4fee\u6539\u3002\n\n\u53e6\u5916\uff0c\u4f3c\u4e4e\u7f51\u4e0a\u7684\u597d\u51e0\u4efd\u4ee3\u7801\u90fd\u5728\u6211\u9020\u7684\u51e0\u7ec4$|S|=10,Q=50$,\u5b57\u7b26\u96c6\u4e3a$\\{a,b\\}$\u7684\u6570\u636e\u4e0b\u6302\u6389\u4e86\u3002\u597d\u50cf\u662f\u4ed6\u4eec\u7684\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5199\u7684\u4e0d\u592a\u5bf9\uff08\u6bd4\u5982\u533a\u95f4\u4e3a\u7a7a\u65f6\uff09\n\n```cpp\nconst int INF=1e9;\n#define MAXN 400011\nint n,root[MAXN],cnt=0;\nstruct Endp\n{\n    struct node{int lson,rson;}t[MAXN<<6|1];\n    #define rt t[num]\n    void insert(int& num,un pos,un l=1,un r=n)\n    {\n        if(!num)num=++cnt;\n        if(l==r)return;\n        un mid=(l+r)>>1;\n        if(pos<=mid)insert(rt.lson,pos,l,mid);\n        else insert(rt.rson,pos,mid+1,r);\n    }\n    int Query(int num,int upp,un l=1,un r=n)\n    {\n        if(!num||upp<1)return 0;\n        if(l==r)return l;\n        un mid=(l+r)>>1;\n        int res=0;\n        if(upp>mid)res=Query(rt.rson,upp,mid+1,r);\n        if(res)return res;\n        return Query(rt.lson,upp,l,mid);\n    }\n    int merge(int x,int y,un l=1,un r=n)\n    {\n        if(!x||!y)return x|y;\n        if(l==r)return x;\n        int num=++cnt;un mid=(l+r)>>1;\n        rt.lson=merge(t[x].lson,t[y].lson,l,mid);\n        rt.rson=merge(t[x].rson,t[y].rson,mid+1,r);\n        return num;\n    }\n    void debug(un l,un r,un num)\n    {\n        if(l==r){printf(\"%d \",l);return;}\n        un mid=(l+r)>>1;\n        if(rt.lson)debug(l,mid,rt.lson);\n        if(rt.rson)debug(mid+1,r,rt.rson);\n    }\n}endp;\n\nstruct Segment_Tree\n{\n    int t[MAXN<<2|1];\n    void build(un l=1,un r=n,un num=1)\n    {\n        rt=INF;\n        if(l==r)return;\n        else build(l,(l+r)>>1,num<<1),build(((l+r)>>1)+1,r,num<<1|1);\n    }\n    void modify(un pos,int val,un l=1,un r=n,un num=1)\n    {\n        if(l==r){rt=val;return;}\n        un mid=(l+r)>>1;\n        if(pos<=mid)modify(pos,val,l,mid,num<<1);\n        else modify(pos,val,mid+1,r,num<<1|1);\n        rt=min(t[num<<1],t[num<<1|1]);\n    }\n    int Query(int upp,int lim,un l=1,un r=n,un num=1)\n    {\n        if(rt>=lim)return 0;\n        if(l==r)return rt<lim?l:0;\n        un mid=(l+r)>>1;\n        int res=0;\n        if(upp>mid)res=Query(upp,lim,mid+1,r,num<<1|1);\n        if(res)return res;\n        return Query(upp,lim,l,mid,num<<1);\n    }\n    \n}sgt;\nstruct SAM\n{\n    \n    int t[MAXN][26],pre[MAXN],len[MAXN],End[MAXN];\n    int last,tot;\n    SAM(){last=tot=1;}\n#define from(u) for(int i=head[u],v=e[i].v;i;i=e[i].nxt,v=e[i].v)\n    void extend(int w,int dex)\n    {\n        int pos=last,cur=++tot;\n        len[cur]=len[pos]+1,last=cur,End[cur]=dex;\n        while(pos&&!t[pos][w])t[pos][w]=cur,pos=pre[pos];\n        if(!pos){pre[cur]=1;return;}\n        int nxt=t[pos][w];\n        if(len[nxt]==len[pos]+1)pre[cur]=nxt;\n        else\n        {\n            int tmp=++tot;\n            len[tmp]=len[pos]+1,memcpy(t[tmp],t[nxt],sizeof t[nxt]);\n            pre[tmp]=pre[nxt],pre[cur]=pre[nxt]=tmp;\n            while(pos&&t[pos][w]==nxt)t[pos][w]=tmp,pos=pre[pos];\n        }\n    }\n    \n    struct one{int l,r,dex;};\n    std::vector<one>q[MAXN];\n    int ans[MAXN];\n    struct edge{int v,nxt;}e[MAXN<<1|1];\n    int cnt,head[MAXN];\n    void adde(int u,int v){e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;}\n    int size[MAXN],dep[MAXN],mson[MAXN],top[MAXN];\n    void dfs1(int u)\n    {\n        size[u]=1;\n        if(End[u])endp.insert(root[u],End[u]);\n        from(u)\n        {\n            dep[v]=dep[u]+1,dfs1(v);\n            size[u]+=size[v];\n            if(size[v]>size[mson[u]])mson[u]=v;\n            root[u]=endp.merge(root[u],root[v]);\n        }\n    }\n    void dfs2(int u,int now_top)\n    {\n        top[u]=now_top;\n        if(mson[u])dfs2(mson[u],now_top);\n        from(u)\n            if(v!=mson[u])dfs2(v,v);\n    }\n    void build()\n    {\n        for(int i=2;i<=tot;++i)adde(pre[i],i);\n        dfs1(1),dfs2(1,1);\n    }\n\n    void push(int u,int k)\n    {\n        if(End[u])sgt.modify(End[u],End[u]-k);\n        from(u)push(v,k);\n    }\n    void back(int u)\n    {\n        if(End[u])sgt.modify(End[u],INF);\n        from(u)back(v);\n    }\n    void solve(int S)\n    {\n        for(int u=S;u;u=mson[u])\n        {\n            if(End[u])sgt.modify(End[u],End[u]-len[u]);\n            from(u)\n                if(v!=mson[u])push(v,len[u]);\n            // printf(\"consider %d,len=%d\\n\",u,len[u]);\n            for(auto x:q[u])\n            {\n                int res=endp.Query(root[u],min(x.r-1,x.l+len[u]-1));\n                if(res>=x.l)umax(ans[x.dex],res-x.l+1);\n                res=sgt.Query(x.r-1,x.l);\n                if(res>=x.l)umax(ans[x.dex],res-x.l+1);\n            }\n        }\n        for(int u=S;u;u=mson[u])\n        {\n            if(End[u])sgt.modify(End[u],INF);\n            from(u)\n                if(v!=mson[u])back(v);\n        }\n        for(int u=S;u;u=mson[u])\n            from(u)\n                if(v!=mson[u])solve(v);\n    }\n}sam;\nint ed[MAXN];\nchar s[MAXN];\nint main()\n{\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    for(int i=1;i<=n;++i)sam.extend(s[i]-'a',i),ed[i]=sam.last;\n    sam.build();\n    // endp.debug(1,n,root[ed[2]]);\n    // puts(\"?\");\n    // printf(\"Res=%d\\n\",endp.Query(root[1],1));\n    int query=read();\n    for(int i=1;i<=query;++i)\n    {\n        int l=read(),r=read();\n        if(l==r){sam.ans[i]=0;continue;}\n        int pos=ed[r];\n        while(pos)sam.q[pos].push_back({l,r,i}),pos=sam.pre[sam.top[pos]];\n    }\n    sgt.build();\n    sam.solve(1);\n    for(int i=1;i<=query;++i)printf(\"%d\\n\",sam.ans[i]);\n    return 0;\n}\n```\n\n",
        "postTime": 1601023831,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": "**\u9898\u610f** : \n\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$ ,\u6bcf\u6b21\u8be2\u95ee $S[l,r]$ \u7684\u6700\u957f $\\rm Border$ \u957f\u5ea6\u3002\n\n$n,m\\leq 2\\times 10^5$ ,\u65f6\u9650$\\texttt{5s}$\u3002\n\n------------\n\n\u8bb0 $lcs(i,j)$ \u4e3a\u524d\u7f00 $i,j$ \u7684\u6700\u957f\u516c\u5171\u540e\u7f00\u3002\n\n\u5219\u6c42 $s[l,r]$ \u7684 $\\rm Border$ \u76f8\u5f53\u4e8e\u627e\u5230\u4e00\u4e2a $[l,r]$ \u4e2d\u6700\u5927\u7684 $p$  \u6ee1\u8db3 $lcs(p,r)\\geq p-l$\u3002\n\n\u8fd9\u4e2a $lcs(p,r)$ \u6b63\u662f\u4e24\u4e2a\u524d\u7f00\u8282\u70b9 `parent` \u6811\u4e0a `LCA` \u7684 $len$ \u503c\u3002\n\n\u8fd9\u770b\u8d77\u6765\u5f88\u4e0d\u597d\u76f4\u63a5\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4,\u53ef\u80fd\u9700\u8981\u6811\u94fe\u5206\u6cbb\u3002\n\n\u5148\u6765\u8003\u8651\u66b4\u529b\u8df3 `parent` \u6811\u7684\u505a\u6cd5\u3002\n\n\u5f53\u8df3\u5230\u4e86\u67d0\u4e2a\u8282\u70b9,\u76f8\u5f53\u4e8e\u786e\u5b9a\u4e86\u5339\u914d\u957f\u5ea6 $len$ ,\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u9700\u8981\u6c42 $p\\leq l+len$ \u7684\u6700\u5927\u7684 $p$ ,\u8fd9\u53ef\u4ee5\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 `edp` \u7136\u540e\u533a\u95f4\u67e5\u8be2\u3002\n\n\u63a5\u7740,\u5c06\u6811\u6811\u5256,\u4e00\u4e2a\u8be2\u95ee\u5c31\u4f1a\u88ab\u62c6\u6210\u5bf9 $O(\\log n)$ \u6761\u91cd\u94fe\u7684\u8be2\u95ee\u3002\n\n\u5047\u8bbe\u4ece\u70b9 $u$ \u8fdb\u5165\u8be5\u91cd\u94fe,\u5219\u4ece\u4e0a\u5230 $u$ \u7684\u8def\u5f84,`LCA` \u4e3a\u4e0a\u65b9\u7684\u91cd\u94fe\u70b9, $u$ \u5411\u4e0b\u7684\u8def\u5f84,`LCA`\u4e3a $u$ \u672c\u8eab\u3002\n\n\u6ce8\u610f,\u8fd9\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e0a\u4e0b\u91cd\u590d\u7684\u8def\u5f84,\u4f46\u662f\u5bb9\u6613\u53d1\u73b0\u7b54\u6848\u66f4\u52a3,\u6240\u4ee5\u4e0d\u7528\u9664\u53bb\u3002\n\n\u73b0\u5728\u5c31\u8f6c\u5316\u6210\u4e86\u8fd9\u6837\u7684\u95ee\u9898 : \u7ed9\u51fa\u4e00\u6761\u94fe,\u6709\u4e00\u4e2a\u9012\u589e\u7684\u6570\u7ec4 $len[i]$ ,\u6709\u9012\u51cf\u7684\u96c6\u5408 $edp(i)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2aSAM\u524d\u7f00\u8282\u70b9 $i$ \u8bb0 $len[i]$ \u4e3a $i$ \u4e0e\u91cd\u94fe\u7684 `LCA` \u7684 $len$\u3002\n\n\u5148\u66b4\u529b\u8ba1\u7b97\u8fd9\u4e9b,\u6211\u4eec\u7684\u590d\u6742\u5ea6\u662f\u6bcf\u6761\u8f7b\u94fe\u5934\u7684\u5b50\u6811\u5927\u5c0f\u548c,\u4e3a $O(n\\log n)$\u3002\n\n\u6bcf\u6b21\u5bf9\u4e00\u4e2a\u524d\u7f00 $[1,u)$ ,\u8be2\u95ee $\\max\\limits_{i=1}^{u-1}\\max\\limits_{v\u2208edp(i)}[l\\leq v\\leq r][v\\leq l+len[v]]v$\n\n\u5bf9\u4e00\u4e2a\u540e\u7f00 $[u,m]$ ,\u8be2\u95ee $\\max\\limits_{i=u}^m\\max\\limits_{v\u2208edp(i)}[l\\leq v\\leq r][v\\leq l+len[u]]v$\n\n\u7b2c\u4e00\u7ef4 $[l\\leq u\\leq r]$ \u4e0d\u96be\u89e3\u51b3,\u4f7f\u7528\u533a\u95f4\u6570\u636e\u7ed3\u6784 : \u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7ef4 $[v\\leq l+len[v]]$ \u6216 $[v\\leq l+len[u]]$ ,\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u79cd\u8bb0\u4e0b $v-len[v]$ \u6216 $v$ \u7684\u533a\u95f4\u6700\u5c0f\u503c,\u5373\u53ef\u5224\u65ad\u67d0\u4e2a\u533a\u95f4\u5185\u662f\u5426\u53ef\u80fd\u6709\u89e3\u3002\n\n\u7136\u540e\u4f7f\u7528\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef,\u7531\u4e8e\u6709\u4e0a\u4e0b\u754c\u9650\u5236,\u5199\u6cd5\u53ef\u80fd\u6bd4\u8f83\u5947\u602a\u3002\n\n\u5199\u8d77\u6765\u5927\u6982\u5c31\u662f\u5148\u628a\u8be2\u95ee\u6302\u5230\u91cd\u94fe\u4e0a,\u7136\u540e\u5bf9\u6bcf\u6761\u91cd\u94fe,\u66b4\u529b `dfs` \u8f7b\u5b50\u6811\u3002\n\n\u7136\u540e\u79bb\u7ebf\u5904\u7406,\u5bf9\u6bcf\u6761\u91cd\u94fe\u524d\u540e\u626b\u63cf\u7ebf\u4e24\u6b21,\u5c06\u8f7b\u5b50\u6811\u4f9d\u6b21\u4ece\u4e0a\u5230\u4e0b\u52a0\u5165\u7ebf\u6bb5\u6811(\u4e0d\u5fc5\u52a8\u6001\u5f00\u70b9),\u5c31\u80fd\u5f97\u5230\u6bcf\u4e2a\u524d\u7f00/\u540e\u7f00\u7684\u72b6\u6001\u3002\n\n\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n)$ ,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$ ,\u5e38\u6570\u4e0d\u5927\u3002\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<map>\n#define ll long long\n#define MaxN 205000\nusing namespace std;\nstruct Node\n{int t[26],f,len,tf,son;}a[MaxN<<1];\nint tot,las;\nvoid ins(int c)\n{\n  int np=++tot,p=las;las=np;\n  a[np].len=a[p].len+1;\n  for (;p&&!a[p].t[c];p=a[p].f)a[p].t[c]=np;\n  if (!p)a[np].f=1;\n  else {\n    int v=a[p].t[c];\n    if (a[p].len+1==a[v].len)a[np].f=v;\n    else {\n      int nv=++tot;a[nv]=a[v];\n      a[nv].len=a[p].len+1;\n      for (;p&&a[p].t[c]==v;p=a[p].f)a[p].t[c]=nv;\n      a[v].f=a[np].f=nv;\n    }\n  }\n}\nvector<int> g[MaxN<<1];\nint siz[MaxN<<1];\nvoid pfs1(int u)\n{\n  siz[u]=1;\n  for (int i=0,v;i<g[u].size();i++){\n    pfs1(v=g[u][i]);\n    siz[u]+=siz[v];\n    if (siz[v]>siz[a[u].son])\n      a[u].son=v;\n  }\n}\nvoid pfs2(int u,int tf)\n{\n  a[u].tf=tf;\n  if (!a[u].son)return ;\n  pfs2(a[u].son,tf);\n  for (int i=0,v;i<g[u].size();i++)\n    if ((v=g[u][i])!=a[u].son)\n      pfs2(v,v);\n}\nint n,tn,to,wfc,t[MaxN<<2];\n#define INF 1000000000\nvoid clr(int l=1,int r=n,int u=1)\n{\n  if (t[u]==INF)return ;\n  t[u]=INF;\n  if (l==r)return ;\n  int mid=(l+r)>>1;\n  clr(l,mid,u<<1);\n  clr(mid+1,r,u<<1|1);\n}\nvoid add(int l=1,int r=n,int u=1)\n{\n  if (l==r){t[u]=wfc;return ;}\n  int mid=(l+r)>>1;\n  if (to<=mid)add(l,mid,u<<1);\n  else add(mid+1,r,u<<1|1);\n  t[u]=min(t[u<<1],t[u<<1|1]);\n}\nint wfr,wfx;\nint qry(int l=1,int r=n,int u=1)\n{\n  if (t[u]>wfx)return 0;\n  if (l==r)return l;\n  int mid=(l+r)>>1;\n  if (mid<wfr&&t[u<<1|1]<=wfx){\n    int sav=qry(mid+1,r,u<<1|1);\n    if (sav)return sav;\n  }return qry(l,mid,u<<1);\n}\nint tlen,w[MaxN<<1];\nvoid dfs2(int u)\n{\n  if (w[u]){to=w[u];wfc=w[u]-tlen;add();}\n  for (int i=0;i<g[u].size();i++)\n    dfs2(g[u][i]);\n}\nstruct QData {int l,r,p;};\nvector<QData> q[MaxN<<1];\nvoid addop(int u,int l,int r,int p)\n{\n  while(u){\n    q[u].push_back((QData){l,r,p});\n    u=a[a[u].tf].f;\n  }\n}\nint ans[MaxN],st[MaxN];\nvoid solve(int u)\n{\n  clr();\n  int tot=0,sf=a[u].tf;\n  for (;a[u].tf==sf;u=a[u].f)\n    st[++tot]=u;\n  clr();tlen=0;\n  for (int k=1;k<=tot;k++){\n    if (w[u=st[k]]){to=w[u];wfc=w[u];add();}\n    for (int i=0;i<g[u].size();i++)\n      if (g[u][i]!=a[u].son)\n        dfs2(g[u][i]);\n    for (int i=0;i<q[u].size();i++){\n      wfx=q[u][i].l+a[u].len-1;wfr=q[u][i].r-1;\n      if (wfr)ans[q[u][i].p]=max(ans[q[u][i].p],qry());\n    }\n  }clr();\n  for (int k=tot;k;k--){\n    tlen=a[u=st[k]].len;\n    if (w[u]){to=w[u];wfc=w[u]-tlen;add();}\n    for (int i=0;i<g[u].size();i++)\n      if (g[u][i]!=a[u].son)\n        dfs2(g[u][i]);\n    for (int i=0;i<q[u].size();i++){\n      wfx=q[u][i].l-1;wfr=q[u][i].r-1;\n      if (wfr)ans[q[u][i].p]=max(ans[q[u][i].p],qry());\n    }\n  }\n}\nchar str[MaxN];\nint m,sl[MaxN],sr[MaxN],edp[MaxN];\nint main()\n{\n  scanf(\"%s\",str+1);n=strlen(str+1);\n  tot=las=1;\n  for (int i=1;i<=n;i++)ins(str[i]-'a');\n  for (int i=1,p=1;i<=n;i++){\n    p=a[p].t[str[i]-'a'];\n    edp[w[p]=i]=p;\n  }for (int i=2;i<=tot;i++)\n    g[a[i].f].push_back(i);\n  pfs1(1);pfs2(1,1);\n  scanf(\"%d\",&m);\n  for (int i=1;i<=m;i++){\n    scanf(\"%d%d\",&sl[i],&sr[i]);\n    addop(edp[sr[i]],sl[i],sr[i],i);\n  }for (int i=1;i<=tot;i++)\n    if (!a[i].son)solve(i);\n  for (int i=1;i<=m;i++)\n    printf(\"%d\\n\",max(ans[i]-sl[i]+1,0));\n  return 0;\n}\n```\n\n\n\n",
        "postTime": 1591329160,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5927\u6982\u786e\u5b9e\u7b97\u6bd4\u8f83\u56f0\u96be\u7684\u540e\u7f00\u5b57\u7b26\u4e32\u9898\u76ee\u4e86\u3002\u94fe\u5206\u6cbb\u8fd9\u79cd\u65b9\u6cd5\u4ee5\u524d\u6ca1\u89c1\u8fc7\u771f\u7684\u60f3\u4e0d\u51fa\u6765\u3002~~\u53cd\u6b63\u6211\u662f\u8d3a\u7684\u9898\u89e3\u3002~~\n\n**\u4e2a\u4eba\u8bc4\u4ef7\uff1a\u5199\u51fa\u4e86\u505a\u9898\u601d\u8003\u7684\u5fc3\u8def\u5386\u7a0b\uff0c\u9010\u6e10\u5bfc\u5411\u6b63\u89e3\uff0c\u53ef\u80fd\u5bf9\u50cf\u6211\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u840c\u65b0\u66f4\u53cb\u597d\u4e00\u4e9b\u3002**\n\n\u9898\u610f\uff1a\u7ed9\u5b9a\u5b57\u7b26\u4e32 $s$\uff0c$q$ \u6b21\u8be2\u95ee\u67d0\u4e00\u5b50\u4e32\u7684\u6700\u957f Border \u957f\u5ea6\u3002\n\n\u8003\u8651\u600e\u4e48\u628a\u9898\u610f\u8f6c\u5316\u6210 SAM \u7684\u8bed\u8a00\u3002\u5bf9 $s$ \u5efa SAM \uff0c\u6bcf\u6b21\u8be2\u95ee\u627e\u5230\u5b50\u4e32 $[1,r]$ \u7684\u4f4d\u7f6e $x$\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\uff0c\u7b54\u6848\u80af\u5b9a\u662f $x$ \u5f80\u4e0a\u8df3\u8f6c\u540e\u7f00\u94fe\u63a5\u82e5\u5e72\u6b21\u6240\u5230\u7684\u8282\u70b9 $y$\uff0c$y$ \u6240\u4ee3\u8868\u7684\u7b49\u4ef7\u7c7b\u4e2d\u7684\u67d0\u4e00\u5b50\u4e32\uff08\u4e0d\u4e00\u5b9a\u662f\u6700\u957f\u7684\uff09\u3002\u5047\u8bbe\u7b54\u6848\u6240\u4ee3\u8868\u7684 Border \u662f $s_{l,l+1,...i}$\uff0c\u5219\u9700\u8981\u6ee1\u8db3\u7684\u8981\u6c42\u662f\uff1a$lcs(i,r)\\geq i-l+1,l\\leq i \\leq r - 1$\uff0c\u4e14 $i$ \u6700\u5927\u3002\n\n\u5148\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684 endpos \u96c6\u5408\uff0c\u90a3\u4e48\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u5728 link \u6811\u4e0a\u5f80\u4e0a\u722c\uff0c\u5e76\u5206\u522b\u5728\u6bcf\u4e2a\u8282\u70b9 $y$ \u4e0a\u6c42\u51fa\u533a\u95f4 $[l,l-1+len_y]$ \u7684\u6700\u5927\u503c\u5c31\u80fd\u5f97\u51fa\u6211\u4eec\u8981\u7684 $i$\u3002\n\n\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a link \u6811\u7684\u6df1\u5ea6\u6ca1\u6709\u4fdd\u8bc1\u3002\u5982\u4f55\u505a\u51fa\u4e00\u5b9a\u4f18\u5316\u5462\uff1f\n\n\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u3002\u9996\u5148\u628a\u6bcf\u4e2a\u8be2\u95ee\u6302\u5728\u63d2\u5165 $s_r$ \u65f6\u7684\u7ed3\u70b9\u4e0a\uff08\u5373\u8fd9\u4e2a\u8282\u70b9\u5305\u62ec\u4e86 $s_{1,2,...r}$ \u8fd9\u4e2a\u524d\u7f00\uff09\u3002\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c$lcs(i,r)$ \u80af\u5b9a\u662f\u5b83\u7684\u67d0\u4e2a\u7956\u5148\uff08\u4e0d\u80fd\u662f\u81ea\u8eab\uff0c\u4e0d\u8fc7\u8fd9\u662f\u4e0d\u91cd\u8981\u7684\u7ec6\u8282\uff09\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 link \u6811\uff0c\u5728\u4ece\u7ed3\u70b9 $x$ \u5f80\u513f\u5b50\u7ed3\u70b9 $v$ \u4e0b\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8003\u8651 $x$ \u4f5c\u4e3a\u8fd9\u4e2a $lcs(i,r)$ \u7684\u65f6\u5019\uff0c\u6709\u7528\u7684 $i$ \u5c31\u662f $x$ \u9664\u4e86 $v$ \u5b50\u6811\u4ee5\u5916\u6240\u6709\u5b50\u6811\u7684\u4fe1\u606f\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u521a\u8fdb\u5165 $x$ \u7684\u65f6\u5019\uff0c\u5c06 $x$ \u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u641c\u7d22\u4e00\u904d\u5168\u90e8\u52a0\u5165\u4e00\u9897\u7ef4\u62a4\u533a\u95f4\u5185 $i-lcs(i,r)$ \u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u8fdb\u5165\u513f\u5b50\u65f6\u518d\u4e34\u65f6\u5220\u53bb\u8fd9\u4e2a\u513f\u5b50\u4e2d\u7684\u6240\u6709\u7ed3\u70b9\uff0c\u56de\u6eaf\u65f6\u518d\u52a0\u5165\uff0c\u5c31\u53ef\u4ee5\u5728\u9047\u5230\u6bcf\u4e2a\u8be2\u95ee\u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u505a\u51fa\u8fd9\u9053\u9898\u76ee\u4e86\u3002\n\n\u5f88\u9057\u61be\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u662f $O(\\log n\\cdot \\sum)$\uff0c $\\sum$ \u662f\u6240\u6709\u5b50\u6811\u7684\u5927\u5c0f\u4e4b\u548c\uff0c\u53ef\u4ee5\u8fbe\u5230 $n^2$ \u7ea7\u522b\uff0c\u6240\u4ee5\u6309\u9053\u7406\u6765\u8bf4\u4e5f\u662f\u9519\u8bef\u7684\u3002\n\n\u4f46\u662f\uff0c\u53ef\u4ee5\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5 $+$ \u8f7b\u91cd\u94fe\u5256\u5206\u4f18\u5316\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002\n\n\u9996\u5148\uff0c\u5bf9 link \u6811\u8fdb\u884c\u8f7b\u91cd\u94fe\u5256\u5206\u3002\u6211\u4eec\u5148\u8bc1\u660e\u8f7b\u5b50\u6811\u7684\u5927\u5c0f\u4e4b\u548c\u4e0d\u8d85\u8fc7 $n\\log n$\uff0c\u539f\u56e0\u662f\u6bcf\u4e2a\u70b9\u7684\u5bf9\u603b\u548c\u7684\u8d21\u732e\u5373\u4e3a\u5b83\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u8f7b\u8fb9\u6570\u91cf\uff0c\u8fd9\u663e\u7136\u662f $\\log n$ \u7684\uff0c\u6240\u4ee5\u8f7b\u5b50\u6811\u7684\u5927\u5c0f\u4e4b\u548c\u5c31\u6709\u4fdd\u8bc1\u3002\n\n\u8fd9\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u5b50\u4e32 $[1,r]$ \u7684\u4f4d\u7f6e\u9884\u5904\u7406\u51fa\u6765\u662f $x$\uff0c\u7136\u540e\u5c06\u5b83\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u8fdb\u884c\u5256\u5206\uff0c\u5256\u6210\u82e5\u5e72\u91cd\u94fe\uff0c\u5e76\u628a\u8be2\u95ee\u6302\u5728\u6bcf\u4e00\u6761\u91cd\u94fe\u7b2c\u4e00\u6b21\u88ab\u5230\u8fbe\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u79bb\u7ebf\u540e\u4ece\u4e0a\u5f80\u4e0b\u641c\u7d22\u6bcf\u6761\u91cd\u94fe\uff0c\u5c06\u91cd\u94fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u548c\u5b83\u7684\u6240\u6709\u8f7b\u5b50\u6811\u7684\u4fe1\u606f\u66b4\u529b\u641c\u7d22\uff0c\u52a0\u5165\u7ebf\u6bb5\u6811\uff0c\u5957\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u89e3\u51b3\uff1a\u5bf9\u4e8e\u6bcf\u6761\u96f6\u6563\u7684\u91cd\u94fe\uff0c\u975e\u5e95\u7aef\u7684\u70b9\u4f5c\u4e3a $lcs(i,r)$ \u7684\u8bdd\uff0c $i$ \u53ea\u80fd\u662f\u91cd\u94fe\u4e0a\u7684\u70b9\u6216\u8f7b\u5b50\u6811\u4e2d\u7684\u70b9\uff0c\u5df2\u7ecf\u88ab\u8003\u8651\u6389\u4e86\uff1b\u552f\u4e00\u6f0f\u6389\u7684\u662f\u5e95\u7aef\u7684\u70b9\u4f5c\u4e3a $lcs(i,r)$ \u7684\u60c5\u51b5\uff0c\u6bcf\u4e2a\u8be2\u95ee\u4e2d\u8fd9\u79cd\u60c5\u51b5\u53ea\u4f1a\u51fa\u73b0 $O(\\log n)$ \u6b21\uff0c\u6240\u6709\u53ea\u9700\u8981\u76f4\u63a5\u5bf9 link \u6811\u8dd1\u4e00\u904d\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u663e\u5f0f\u5730\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u70b9\u6240\u4ee3\u8868\u7684 endpos \u96c6\u5408\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u5e76\u5224\u65ad\u5408\u6cd5\u6027\u5373\u53ef\u3002\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u7528\u5e73\u8861\u6811\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u597d\u50cf\u4e5f\u53ef\u4ee5\u3002\n\n\u7531\u4e8e\u8f7b\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u6709\u4fdd\u8bc1\uff0c\u800c\u6bcf\u4e2a\u8be2\u95ee\u7279\u6b8a\u5904\u7406\u7684\u70b9\u4e5f\u5f88\u6709\u9650\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O((n+q)\\log^2n)$\uff0c\u7528\u4e00\u4e9b\u7ebf\u6bb5\u6811\u5408\u5e76\u65b9\u9762\u7684\u6280\u5de7\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\n\n\u4ee3\u7801\uff1a\n\n[\u5dee\u70b9\u7a81\u7834\u7801\u957f\u8bb0\u5f55](https://www.luogu.com.cn/paste/7famymq9)",
        "postTime": 1659032440,
        "uid": 131591,
        "name": "\u849f\u84bb\u541bHJT",
        "ccfLevel": 7,
        "title": "P4482 [BJOI2018] Border \u7684\u56db\u79cd\u6c42\u6cd5 \u9898\u89e3"
    },
    {
        "content": "\u91cd\u70b9\u4e0d\u5728 Border Theory \u5185\u5bb9\u2026\u2026\u5355\u662f\u505a\u6cd5\u5c31\u5df2\u7ecf\u5f88\u6709\u610f\u601d\u4e86\u3002\n\n\u8bb0\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u957f\u4e3a $p$ \u7684\u524d\u7f00\u4e3a $\\operatorname{pre}(s,p)$\uff0c\u957f\u4e3a $q$ \u7684\u540e\u7f00\u4e3a $\\operatorname{suf}(s,q)$\u3002\u5b57\u7b26\u4e32 $s$ \u7684\u957f\u5ea6\u8bb0\u4e3a $|s|$\uff0c\u90a3\u4e48 $s$ \u53ef\u7531 $|s|$ \u4e2a\u5b57\u7b26\u62fc\u63a5\u8868\u793a\uff0c\u7b2c $i$ \u5b57\u7b26\u4e3a $s_i$\u3002\n\n---\n\n### \u5468\u671f\u4e0e Border\n\n\u5982\u679c $1 \\leq p < |s|$\uff0c\u4e14 $\\forall i,s_i=s_{i+p}$\uff0c\u79f0 $p$ \u4e3a $s$ \u7684\u5468\u671f\u3002$per(s)$ \u8868\u793a $s$ \u7684\u6700\u5c0f\u5468\u671f\u3002\n\n\u5982\u679c $1 \\leq q < |s|$\uff0c\u4e14 $\\operatorname{pre}(s,q)=\\operatorname{suf}(s,q)$\uff0c\u79f0 $q$ \u4e3a $s$ \u7684 Border\u3002\n\n\u663e\u7136\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u7684\u4e00\u4e2a Border $p$ \u4f1a\u5bf9\u5e94\u4e00\u4e2a\u5468\u671f $|s|-p$\u3002\n\n#### Weak Periodicity Lemma\n\n\u5982\u679c\u5b57\u7b26\u4e32 $s$ \u6709\u5468\u671f $p,q$\uff0c\u6ee1\u8db3 $p+q\\leq |s|$\uff0c\u5219 $\\gcd(p,q)$ \u4e5f\u4e3a $s$ \u7684\u5468\u671f\u3002 \n\n\u6839\u636e\u5468\u671f\u5b9a\u4e49\uff0c\u5047\u8bbe $p<q$\uff0c\u4e0d\u96be\u53d1\u73b0 $q-p$ \u4e3a\u5468\u671f\u3002\u7c7b\u4f3c\u4e8e\u66f4\u76f8\u51cf\u635f\uff0c\u53ef\u5f97\u5230 $\\gcd(p,q)$ \u4e3a\u5468\u671f\u3002\n\n\u60f3\u53bb\u6389 Weak \u7684\u8bdd\u628a\u9650\u5236\u7f29\u6210 $p+q-\\gcd(p,q) \\leq |s|$ \u5c31\u597d\u4e86\u3002\u867d\u7136\u5b9e\u9645\u5e94\u7528\u4e00\u822c\u3002\n\n\u63a8\u4e00\u4e2a\u5f15\u7406\uff1a\u5982\u679c\u5b57\u7b26\u4e32 $u,v$ \u6ee1\u8db3 $2|u| \\geq |v|$\uff0c\u5219 $u$ \u5728 $v$ \u91cc\u5339\u914d\u4f4d\u7f6e\u6784\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff1b\u5982\u679c\u9879\u6570\u4e0d\u5c0f\u4e8e $3$\uff0c\u90a3\u4e48\u516c\u5dee\u4e3a $per(u)$\u3002\n\n\u8bc1\u660e\u7684\u8bdd\uff0c\u8003\u8651\u7b2c\u4e00\u6b21\uff0c\u7b2c\u4e8c\u6b21\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u5339\u914d\u3002\u8bb0\u7b2c\u4e00\u6b21\u548c\u7b2c\u4e8c\u6b21\u5339\u914d\u4f4d\u7f6e\u4e4b\u5dee\u4e3a $d$\uff0c\u7b2c\u4e8c\u6b21\u548c\u6700\u540e\u4e00\u6b21\u5339\u914d\u4f4d\u7f6e\u4e4b\u5dee\u4e3a $q$\u3002\u663e\u7136 $d,q$ \u90fd\u662f $u$ \u7684\u5468\u671f\uff1b\u82e5 $u$ \u5b58\u5728\u6bd4 $\\gcd(d,q)$ \u66f4\u5c0f\u7684\u5468\u671f\uff0c\u90a3\u4e48 $d$ \u663e\u7136\u4f1a\u53d8\u5f97\u66f4\u5c0f\uff0c\u77db\u76fe\u3002\u6240\u4ee5 $per(u) = d \\leq p \\leq \\gcd(d,q)$\uff0c\u8bc1\u6bd5\u3002\n\n---\n\n### Border Theory\n\n\u51e0\u4e4e\u662f\u628a Border \u4e0e\u5468\u671f\u8054\u7cfb\u8bc1\u660e\u7684\uff0c\u5177\u4f53\u8bc1\u660e\u4e0d\u96be\uff0c\u6839\u636e\u4e0a\u9762\u7684\u5185\u5bb9\u6446\u7ed3\u8bba\u5c31\u597d\u4e86\u3002\n\n1. \u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\u5176\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $\\frac{|S|}{2}$ \u7684 Border \u6784\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff08\u8fd0\u7528\uff1a\u5931\u914d\u6811 10MiB \u7248\uff0cHNOI2019 JOJO\uff09\uff1b   \n2. \u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32 $u,v$\uff0c\u8bb0 $\\operatorname{LargePS}(u,v) = \\{k:\\operatorname{pre}(u,k)= \\operatorname{suf}(v,k),k \\geq \\frac{|u|}{2}\\}$\uff0c\u5219 $\\operatorname{LargePS}(u,v)$ \u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff1b    \n3. \u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709 Border \u53ef\u4ee5\u5212\u5206\u6210 $O(\\log n)$ \u4e2a\u7b49\u5dee\u6570\u5217\uff08\u8fd0\u7528\uff1aMivik \u7684\u6807\u9898\uff0c\u8bba\u6218\u6346\u7af9\u7aff\uff09\u3002\u5b9e\u9645\u8fd0\u7528\u7684\u65f6\u5019\u4e00\u822c\u6309\u957f\u5ea6 $[1,2),[2,4),\\cdots,[2^k,|s|)$ \u5206\u3002\n\n---\n\n\u7136\u540e\u56de\u5230\u8fd9\u4e2a\u9898\u4e0a\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5389\u5bb3\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u6c42\u51fa\u8fd9\u4e2a\u5b50\u4e32\u7684\u6240\u6709 Border\uff0c\u95ee\u9898\u5c31\u89e3\u51b3\u5566\uff01\n\n\u5176\u5b9e\u6839\u636e Border Theory\uff0c\u6211\u4eec\u5c06\u5176\u6240\u6709 Border \u6309\u503c\u57df\u5212\u5206\u6210 $O(\\log n)$ \u4e2a\u7b49\u5dee\u6570\u5217\u3002\u90a3\u6211\u4eec\u5c31\u5148\u679a\u4e3e\u5927\u7684\u503c\u57df\u7136\u540e\u6c42\u4e00\u4e2a Border \u7b49\u5dee\u6570\u5217\u5c31\u597d\u4e86\u3002\n\n\u6ce8\u610f\u5230\u9664\u4e86\u6700\u540e\u4e00\u4e2a $[2^k,|s|)$ \u6bd4\u8f83\u7279\u6b8a\uff0c\u4e8e\u662f\u6211\u4eec\u5206\u7c7b\uff0c\u5206\u6210 $[2^{i-1},2^i)$ \u548c $[2^k,|s|)$ \u4e24\u79cd\u3002\n\n\u8003\u8651\u5230\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u6709\u4e00\u4e2a Border $p \\in [2^{i-1},2^i)$\u3002\u60f3\u8981\u6c42\u51fa\u8fd9\u6837\u7684 Border\uff0c\u6211\u4eec\u5c06 $\\operatorname{pre}(s,2^{i-1})$ \u63d0\u51fa\u6765\uff0c\u5728 $\\operatorname{suf}(s,2^i)$ \u91cc\u9762\u5339\u914d\uff1b\u5bf9 $\\operatorname{suf}(s,2^{i-1})$ \u63d0\u51fa\u6765\u505a\u4e00\u6837\u7684\u4e8b\u60c5\u3002\u4e0d\u96be\u53d1\u73b0 Border \u5c31\u662f\u5bf9\u4e24\u4e2a\u5339\u914d\u5339\u914d\u4e0a\u7684\u4f4d\u7f6e\u6c42\u4ea4\u3002\u6ce8\u610f\u5230 Weak Periodicity Lemma \u91cc\u9762\u63d0\u5230\u7684\u4e00\u4e2a\u5f15\u7406\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e24\u4e2a\u5339\u914d\u5339\u914d\u51fa\u6765\u7684\u4f4d\u7f6e\u662f\u4e24\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u8981\u505a\u7684\u662f\u6c42\u51fa\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u3002\u800c\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u6700\u591a\u4e09\u9879\u5c31\u53ef\u4ee5\u5b8c\u5168\u63cf\u8ff0\uff08\u7b2c\u4e00\u9879\uff0c\u7b2c\u4e8c\u9879\u548c\u6700\u540e\u4e00\u9879\uff09\uff0c\u8981\u6c42\u7684\u662f\u7b2c\u4e00\u6b21\uff0c\u7b2c\u4e8c\u6b21\u548c\u6700\u540e\u4e00\u6b21\u5339\u914d\u3002\n\n\u4e8e\u662f\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a $\\operatorname{succ}(v,i)$ \u8868\u793a\u5b57\u7b26\u4e32 $v$ \u5728 $s$ \u4e2d\uff0c\u4f4d\u7f6e\u4e0d\u5c0f\u4e8e $i$ \u7684\u7b2c\u4e00\u6b21\u5339\u914d\uff1b\u7c7b\u4f3c\u5730\u5b9e\u73b0 $\\operatorname{pred}(v,i)$ \u8868\u793a\u5b57\u7b26\u4e32 $v$ \u5728 $s$ \u4e2d\uff0c\u4f4d\u7f6e\u4e0d\u5927\u4e8e $i$ \u7684\u7b2c\u4e00\u6b21\u5339\u914d\u3002\u4fdd\u8bc1 $|v|$ \u53ef\u8868\u793a\u4e3a $2^x$\u3002\n\n\u800c\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u53ef\u8868\u793a\u4e3a $2^x$\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u6574\u4e2a\u4e32\u6c42\u4e00\u4e2a\u540e\u7f00\u6570\u7ec4\u5e76\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u540e\u7f00\u6309\u524d $2^k$ \u4e2a\u5b57\u7b26\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002\u90a3\u4e48 $\\operatorname{succ}(v,i)$ \u548c $\\operatorname{pred}(v,i)$ \u672c\u8d28\u4e0a\u5c31\u662f\u63d0\u51fa\u4e00\u4e2a\u533a\u95f4\u51fa\u6765\u73a9\u4e8c\u5206\uff0c\u975e\u5e38 naive\u3002\n\n$[2^k,|s|)$ \u548c $[2^{i-1},2^i)$ \u5728\u601d\u8003\u4e4b\u540e\u77e5\u9053\u672c\u8d28\u76f8\u540c\u3002\n\n\u4e8e\u662f\u6709\u4e86 $O(n \\log^2 n)$ \u7684\u505a\u6cd5\u3002\n\n\u74f6\u9888\u5728\u7b49\u5dee\u6570\u5217\u6c42\u4ea4\u4e0a\u3002\u4e00\u822c\u7684\u95ee\u9898\u6ca1\u6709\u4f18\u5316\u601d\u8def\uff0c\u6211\u4eec\u5c06\u5176\u653e\u5230\u5b57\u7b26\u4e32\u4e0a\uff0c\u4ee3\u7528\u5b57\u7b26\u4e32\u7684\u6027\u8d28\u8003\u8651\u3002\u5728\u8fd9\u91cc\u6284\u93fc\u7684 ppt\u3002\n\n> \u5f15\u7406\uff1a\u56db\u4e2a\u5b57\u7b26\u4e32\u6ee1\u8db3 $|x_1| = |y_1| \\geq |x_2| = |y_2|$\uff0c\u4e14 $x_1$ \u5728 $y_2y_1$ \u4e2d\u81f3\u5c11\u5339\u914d $3$ \u6b21\uff0c\u5219 $per(x_1)=per(y_1)$\u3002   \n  \u8bc1\u660e\uff1a\u5426\u5219\u5047\u8bbe $per(x_1) \\geq per(y_1)$\uff0c\u8003\u8651 $x_1$ \u5728 $y_2y_1$ \u6700\u53f3\u8fb9\u4e00\u6b21\u5339\u914d\uff0c\u8bbe\u5176\u4e0e $y_1$ \u91cd\u53e0\u90e8\u5206\u4e3a $z$\uff0c\u5219 $|z| \\geq 2per(x_1)>per(x_1)+per(y_1)$\uff0c\u5219 $z$ \u5b58\u5728\u5468\u671f $d=\\gcd(per(x_1),per(y_1))$\uff0c\u663e\u7136 $d|per(x_1)$\uff0c\u56e0\u6b64 $d$ \u4e3a $x_1$ \u7684\u5468\u671f\uff0c\u4f46\u662f $d<per(x_1)$\uff0c\u77db\u76fe\u3002\n  \n\u8bc1\u660e\u5176\u5b9e\u6709\u70b9\u4e0d\u8bf4\u4eba\u8bdd\u2026\u2026\n\n\u7136\u540e\u662f\uff0c\u8fd9\u4e2a\u6027\u8d28\u5fc5\u987b\u8981\u5728\u4fdd\u8bc1\u5408\u5e76\u7684\u4e24\u4e2a\u7b49\u5dee\u6570\u5217\u90fd\u81f3\u5c11\u6709\u4e09\u9879\uff0c\u4e0d\u7136\u7684\u8bdd\u5c31\u76f4\u63a5\u66b4\u529b\u5408\u5e76\u5c31\u884c\u4e86\u3002\n\n\u4e8e\u662f\u6574\u4e2a\u95ee\u9898\u88ab\u4f18\u5316\u81f3 $O(n \\log n)$\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u662f $O(n \\log^2 n)$ \u7684\uff08\u56e0\u4e3a\u6211\u7684\u540e\u7f00\u6570\u7ec4\u83ab\u540d\u5176\u5999\u7684\u5c31\u6b7b\u4e86\u2026\u2026\u6240\u4ee5\u628a\u540e\u7f00\u6570\u7ec4\u6c42\u51fa\u6765\u4e4b\u540e\u66b4\u529b\u7403\u7684\u6bcf\u6b21\u5339\u914d\u540e\u7684\u72b6\u6001\uff0c\u7b49\u5dee\u6570\u5217\u4f18\u5316\u6c42\u4ea4\u7684\u90e8\u5206\u662f\u5199\u4e86\u7684\u3002\u5e76\u4e14\u5e94\u7528\u54c8\u5e0c\u8868\u4f18\u5316\u7684\u5730\u65b9\u662f\u76f4\u63a5\u66b4\u529b\u4e8c\u5206\u7684\uff0c\u6240\u4ee5\u662f $O(n \\log^2 n)$\uff09\u3002\n\n\u4f3c\u4e4e\u7528\u4e0d\u7740\u4ec0\u4e48\u54c8\u5e0c\u8868\uff1f\n\n```cpp\n/*\n\u4ed6\u51b3\u5b9a\u8981\u201c\u683c\u201d\u9662\u5b50\u91cc\u7684\u7af9\u5b50\u3002\u4e8e\u662f\u4ed6\u642c\u4e86\u4e00\u6761\u51f3\u5b50\u5750\u5728\u9662\u5b50\u91cc\uff0c\u9762\u5bf9\u7740\u7af9\u5b50\u786c\u60f3\u4e86\u4e03\u5929\uff0c\u7ed3\u679c\u56e0\u4e3a\u5934\u75db\u800c\u5ba3\u544a\u5931\u8d25\u3002\n\u4ed6\u51b3\u5b9a\u8981\u201c\u683c\u201d\u91d1\u7b56\u5b57\u7b26\u4e32\u9009\u8bb2\u91cc\u9762\u7684 Interval Pattern Matching\u3002\u4e8e\u662f\u4ed6\u642c\u4e86\u4e00\u4efd std \u5750\u5728\u673a\u623f\u91cc\uff0c\u9762\u5bf9\u7740\u673a\u623f\u786c\u60f3\u4e86\u4e00\u5929\uff0c\u7ed3\u679c\u56e0\u4e3a Para \u592a\u5f15\u8350\u800c\u5ba3\u544a\u5931\u8d25\u3002\nDONT NEVER AROUND . //\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\tc=getchar();\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x;\n}\nvoid write(int x)\n{\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nconst int MAXN=200005,MxLgs=19;\nint n,Q;\nchar str[MAXN];\nstruct SuffixArray{\n\tstruct STtable{\n\t\tint lgstr[MAXN],f[MxLgs][MAXN];\n\t\tvoid init(int *a)\n\t\t{\n\t\t\tfor(int i=2;i<=n;++i)\tlgstr[i]=lgstr[i>>1]+1;\n\t\t\tfor(int i=1;i<=n;++i)\tf[0][i]=a[i];\n\t\t\tfor(int i=1;i<MxLgs;++i)\tfor(int j=1;j+(1<<i)-1<=n;++j)\tf[i][j]=min(f[i-1][j],f[i-1][j+(1<<(i-1))]);\n\t\t}\n\t\tint query(int l,int r)\n\t\t{\n\t\t\tint d=lgstr[r-l+1];\n\t\t\treturn min(f[d][l],f[d][r-(1<<d)+1]);\n\t\t}\n\t\tvoid debug(){for(int i=1;i<=n;++i)\tfor(int j=i;j<=n;++j)\twrite(query(i,j)),putchar(' ');puts(\"\");}\n\t}st;\n\tint sa[MAXN],ht[MAXN],cnt[MAXN],x[MAXN],tmp1[MAXN],rk[MAXN],Sigma;\n\tvoid MakeSuffix()\n\t{\n\t\tSigma=128;\n\t\tfor(int i=1;i<=n;++i)\t++cnt[x[i]=str[i]];\n\t\tfor(int i=2;i<=Sigma;++i)\tcnt[i]+=cnt[i-1];\n\t\tfor(int i=n;i;--i)\tsa[cnt[x[i]]--]=i;\n\t\tfor(int k=1;k<=n;k<<=1)\n\t\t{\n\t\t\tint tmp=0;\n\t\t\tfor(int i=n-k+1;i<=n;++i)\ttmp1[++tmp]=i;\n\t\t\tfor(int i=1;i<=n;++i)\tif(sa[i]>k)\ttmp1[++tmp]=sa[i]-k;\n\t\t\tfor(int i=1;i<=Sigma;++i)\tcnt[i]=0;\n\t\t\tfor(int i=1;i<=n;++i)\t++cnt[x[i]];\n\t\t\tfor(int i=2;i<=Sigma;++i)\tcnt[i]+=cnt[i-1];\n\t\t\tfor(int i=n;i;--i)\tsa[cnt[x[tmp1[i]]]--]=tmp1[i],tmp1[i]=0;\n\t\t\tswap(x,tmp1);\n\t\t\ttmp=1;\n\t\t\tx[sa[1]]=1;\n\t\t\tfor(int i=2;i<=n;++i)\tx[sa[i]]=(tmp1[sa[i]]==tmp1[sa[i-1]] && tmp1[sa[i]+k]==tmp1[sa[i-1]+k])?tmp:++tmp;\n\t\t\tif(tmp==n)\tbreak;\n\t\t\tSigma=tmp; \n\t\t}\n\t}\n\tvoid MakeHeight()\n\t{\n\t\tint k=0;\n\t\tfor(int i=1;i<=n;++i)\trk[sa[i]]=i;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tif(rk[i]==1)\tcontinue;\n\t\t\tif(k)\t--k;\n\t\t\tint j=sa[rk[i]-1];\n\t\t\twhile(j+k<=n && i+k<=n && str[i+k]==str[j+k])\t++k;\n\t\t\tht[rk[i]]=k;\n\t\t}\n\t}\n\tint getLCP(int p,int q)\n\t{\n\t\tif(p==q)\treturn n-p+1;\n\t\tp=rk[p],q=rk[q];\n\t\treturn st.query(min(p,q)+1,max(p,q));\n\t}\n\tint compare(int l1,int r1,int l2,int r2)\n\t{\n\t\tassert(r1-l1==r2-l2);\n\t\tint len=r1-l1+1,lcp=getLCP(l1,l2);\n\t\tif(lcp>=len)\treturn 0;\n\t\treturn str[l1+lcp]<str[l2+lcp]?-1:1;\n\t}\n\tvoid init(){MakeSuffix(),MakeHeight(),st.init(ht);}\n\tvoid debug(){for(int i=1;i<=n;++i)\twrite(sa[i]),putchar(i==n?'\\n':' ');for(int i=1;i<=n;++i)\twrite(rk[i]),putchar(i==n?'\\n':' ');for(int i=1;i<=n;++i)\twrite(ht[i]),putchar(i==n?'\\n':' ');}\n}Sa;\nint CmpLen;\nbool cmp(int x,int y)\n{\n\tint rt=Sa.compare(x,x+CmpLen-1,y,y+CmpLen-1);\n\tif(!rt)\treturn x<y;\n\treturn rt<0;\n}\nnamespace IntervalPatternMatching{\n\tstruct matchSeq{\n\t\tint p0,p1,cnt;\n\t\tmatchSeq(){p0=p1=cnt=0;}\n\t\tmatchSeq(int a,int b,int c,int type)\n\t\t{\n\t\t\tif(type==1)\tp0=p1=a,cnt=1;\n\t\t\telse if(type==2)\tp0=a,p1=b,cnt=1+int(p0!=p1);\n\t\t\telse\tp0=a,p1=b,cnt=c;\n\t\t}\n\t\tmatchSeq(int *a,int c)\n\t\t{\n\t\t\tif(c<=0)\n\t\t\t{\n\t\t\t\tcnt=0;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif(c==1)\tp0=p1=a[0];\n\t\t\telse\tp0=a[0],p1=a[1],cnt=c;\n\t\t}\n\t\tinline bool isContain(int x)\n\t\t{\n\t\t\tif(!cnt)\treturn false;\n\t\t\tif(cnt<=2)\treturn (x==p0 || x==p1);\n\t\t\tx-=p0;\n\t\t\tint d=p1-p0;\n\t\t\treturn bool(x%d==0 && x/d>=0 && x/d<cnt);\n\t\t}\n\t\tinline int getIndex(int x)\n\t\t{\n\t\t\tif(!isContain(x))\treturn -1;\n\t\t\treturn (x-p0)/(p1-p0);\n\t\t}\n\t\tinline int getVal(int id){return p0+id*(p1-p0);}\n\t\tinline int getMax(){return getVal(cnt-1);}\n\t\tmatchSeq operator - (){return matchSeq(-p0,-p1,cnt,3);}\n\t\tmatchSeq operator + (int d){return matchSeq(p0+d,p1+d,cnt,3);}\n\t\tmatchSeq operator - (int d){return matchSeq(p0-d,p1-d,cnt,3);}\n\t\tinline void debug(){printf(\"%d %d %d\\n\",p0,p1,cnt);}\n\t};\n\tmatchSeq mov(matchSeq seq)\n\t{\n\t\tif(seq.cnt<=1)\treturn seq;\n\t\tint q0=seq.getVal(seq.cnt-1),q1=seq.getVal(seq.cnt-2);\n\t\treturn matchSeq(q0,q1,seq.cnt,3);\n\t}\n\tmatchSeq merge(matchSeq u,matchSeq v)\n\t{\n\t\tint tmp[6],cnt=0;\n\t\tif(!u.cnt || !v.cnt)\treturn matchSeq();\n\t\tif(u.cnt<3)\n\t\t{\n\t\t\tfor(int i=0,x=u.p0,d=u.p1-u.p0;i<u.cnt;++i,x+=d)\tif(v.isContain(x))\ttmp[cnt++]=x;\n\t\t\treturn matchSeq(tmp,cnt);\n\t\t}\n\t\tif(v.cnt<3)\n\t\t{\n\t\t\tfor(int i=0,x=v.p0,d=v.p1-v.p0;i<v.cnt;++i,x+=d)\tif(u.isContain(x))\ttmp[cnt++]=x;\n\t\t\treturn matchSeq(tmp,cnt);\n\t\t}\n\t\tassert(u.p1-u.p0==v.p1-v.p0);\n\t\tint l=u.getIndex(v.p0);\n\t\tif(l==-1)\treturn matchSeq();\n\t\tint r=l+v.cnt;\n\t\tr=min(r,u.cnt);\n\t\tif(l>=r)\treturn matchSeq();\n\t\treturn matchSeq(u.getVal(l),u.getVal(l+1),r-l,3);\n\t}\n\tint f[MxLgs][MAXN];\n\tvoid init()\n\t{\n\t\tSa.init();\n\t\tfor(int k=0;(1<<k)<=n;++k)\n\t\t{\n\t\t\tCmpLen=(1<<k);\n\t\t\tfor(int i=1;i+CmpLen<=n+1;++i)\tf[k][i]=i;\n\t\t\tsort(f[k]+1,f[k]+1+(n-CmpLen+1),cmp);\n\t\t}\n\t}\n\t#define mp make_pair\n\tpair<int,int> getRange(int s,int k)\n\t{\n\t\tint len=(1<<k),L=-1,R=-1;\n\t\tint l,r;\n\t\tl=1,r=n-len+1;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(Sa.compare(s,s+len-1,f[k][mid],f[k][mid]+len-1)>0)\tl=mid+1;\n\t\t\telse\tr=(L=mid)-1;\n\t\t}\n\t\tl=1,r=n-len+1;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(Sa.compare(s,s+len-1,f[k][mid],f[k][mid]+len-1)>=0)\tl=(R=mid)+1;\n\t\t\telse\tr=mid-1;\n\t\t}\n\t\treturn mp(L,R);\n\t}\n\t#undef mp\n\tint succ(int s,int k,int i,int L,int R)\n\t{\n\t\tif(L>R)\treturn MAXN*2;\n\t\tint l=L,r=R,ans=R+1;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(f[k][mid]>=i)\tr=(ans=mid)-1;\n\t\t\telse\tl=mid+1;\n\t\t}\n\t\tif(ans>R)\treturn MAXN*2;\n\t\treturn f[k][ans];\n\t}\n\tint pred(int s,int k,int i)\n\t{\n\t\tint L,R;\n\t\tpair<int,int> tmp=getRange(s,k);\n\t\tL=tmp.first,R=tmp.second;\n\t\tif(L>R)\treturn -MAXN;\n\t\tint l=L,r=R,ans=L-1;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(f[k][mid]<=i)\tl=(ans=mid)+1;\n\t\t\telse\tr=mid-1;\n\t\t}\n\t\tif(ans<L)\treturn -MAXN;\n\t\treturn f[k][ans];\n\t}\n\tmatchSeq query(int l,int r,int s,int k)\n\t{\n\t\tint len=(1<<k);\n\t\tpair<int,int> tmp=getRange(s,k);\n\t\tint L=tmp.first,R=tmp.second;\n\t\tint q0=succ(s,k,l,L,R);\n\t\tif(q0+len-1>r)\treturn matchSeq();\n\t\tint q1=succ(s,k,q0+1,L,R);\n\t\tif(q1+len-1>r)\treturn matchSeq(q0,q0,1,1);\n\t\tint qx=pred(s,k,r-len+1);\n\t\tmatchSeq ret=matchSeq(q0,q1,MAXN,3);\n\t\tret.cnt=ret.getIndex(qx)+1;\n\t\treturn ret;\n\t}\n\tvoid debug(){for(int i=0;i<MxLgs;++i,puts(\"\"))\tfor(int j=1;j<=n;++j)\tprintf(\"%d \",f[i][j]);puts(\"\");}\n}\n#define IPM IntervalPatternMatching\nint query(int l,int r)\n{\n\tint Slen=(r-l+2)/2,lim=0;\n\twhile((1<<lim)<Slen)\t++lim;\n\tfor(int i=lim;~i;--i)\n\t{\n\t\tint len=min(r-l,1<<(i+1)),slen=(1<<i);\n\t\tIPM::matchSeq st1=IPM::query(l,l+len-1,r-slen+1,i),st2=IPM::query(r-len+1,r,l,i);\n\t\tst1=st1-l+slen;\n\t\tst2=-IPM::mov(st2)+r+1;\n\t\tst1=IPM::merge(st1,st2);\n\t\tif(st1.cnt)\treturn st1.getMax();\n\t}\n\treturn int(str[l]==str[r] && (l^r));\n}\nint main(){\n\tscanf(\"%s\",str+1),n=strlen(str+1);\n\tIPM::init();\n\tQ=read();\n\twhile(Q-->0)\n\t{\n\t\tint l=read(),r=read();\n\t\twrite(query(l,r)),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1641602627,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u5b50\u4e32\u5468\u671f\u67e5\u8be2(IPM) \u677f\u5b50"
    },
    {
        "content": "\u5b50\u4e32\u5468\u671f\u67e5\u8be2\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u5b50\u4e32\u7684\u6700\u957f border\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u70b9\u5206\u6cbb + \u540e\u7f00\u81ea\u52a8\u673a + \u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u3002\n\n\u5b57\u7b26\u4e32\u5c31\u60f3\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u5bf9\u4e8e\u8be2\u95ee\u4e32 $s[l,r]$\uff0c\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u627e\u5230 $r$ \u6240\u5728\u7684\u8282\u70b9\u5411\u4e0a\u8df3\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u6ee1\u8db3\u6761\u4ef6 $p - len[Lca(p,ed[r])] + 1 \\le l$ \u548c $p < r$ \u6700\u5927\u7684 $p$\u3002\n\n\u4f60\u53ef\u4ee5\u66b4\u529b\u8df3 + \u7ebf\u6bb5\u6811\u67e5\u8be2\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\n\n\u8003\u8651\u6811\u5206\u6cbb\uff0c\u8fd9\u91cc\u6211\u4eec\u9009\u62e9\u70b9\u5206\u6cbb\u6765\u89e3\u51b3\uff0c\u8bbe\u5206\u6cbb\u91cd\u5fc3\u4e3a $x$\uff0c\u56e0\u4e3a\u662f\u6709\u6839\u6811\uff0c\u6211\u4eec\u5206\u4e3a\u4e0a\u534a\u90e8\u5206\u548c\u4e0b\u534a\u90e8\u5206\u3002\n\n\u8003\u8651\u4e0b\u534a\u90e8\u5206\u5bf9\u6574\u4f53\u7684\u8d21\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0b\u534a\u90e8\u5206\u6240\u6709\u7684\u4f4d\u7f6e $u$ \u63d2\u5165\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u90a3\u4e48 $u$ \u548c\u53e6\u4e00\u4e2a\u70b9 $v$ \u7684 $LCA$ \u5c31\u662f $v$ \u548c $x$ \u7684 $LCA$ \uff08\u5982\u679c $u$\uff0c$v$ \u5728\u540c\u4e00\u5b50\u6811\u6211\u4eec\u7b97\u7684\u8d21\u732e\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u4e3a\u9519\u7b97\u7684 $len[LCA]$ \u66f4\u5c0f\uff09\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u662f\u9884\u5904\u7406 p\uff0c\u7136\u540e\u679a\u4e3e $len[Lca(p,ed[r])]$\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u6ee1\u8db3\u6761\u4ef6\u6700\u5927\u7684 p \u5373\u53ef\u3002\n\n\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u4e0a\u534a\u90e8\u5206\u5bf9\u4e0b\u534a\u90e8\u5206\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u63d2\u5165\u7684\u65f6\u5019\u987a\u4fbf\u679a\u4e3e $len[Lca(p,ed[r])]$\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u7ebf\u6bb5\u6811\u4e8c\u5206\u5f97\u5230\u6700\u5927\u7684 p \u5373\u53ef\u3002\n\n\u5e38\u6570\u7565\u5927\uff0c\u4f46\u662f\u7a7a\u95f4\u8fbe\u5230\u4e86\u4f18\u79c0\u7684 $\\Theta(N\\Sigma)$ \n\n```cpp\n#include <bits/stdc++.h>\n#define MP make_pair\n#define ll long long\n#define fi first\n#define se second\nusing namespace std;\ntemplate <typename T>\ninline void Mx(T &x, T y) { x < y && (x = y); }\n\n#define ls p << 1\n#define rs ls | 1\nconst int N = 400050;\nconst int inf = 1145141919;\nint mn[N<<1];\nvoid build(int p, int l, int r) { mn[p] = inf; if (l == r) return; int mid = (l + r) >> 1; build(ls, l, mid), build(rs, mid + 1, r); }\nvoid change(int p, int l, int r, int x, int c) {\n\tif (l == r) return mn[p] = c, void();\n\tint mid = (l + r) >> 1;\n\tx <= mid ? change(ls, l, mid, x, c) : change(rs, mid + 1, r, x, c);\n\tmn[p] = min(mn[ls], mn[rs]);\n}\n\nint query(int p, int l, int r, int R, int lim) {\n\tif (mn[p] > lim) return 0;\n\tif (r <= R) {\n\t\tif (l == r) return l;\n\t\tint mid = (l + r) >> 1;\n\t\tif (mn[rs] <= lim) return query(rs, mid + 1, r, R, lim);\n\t\treturn query(ls, l, mid, R, lim); \n\t}\n\tint mid = (l + r) >> 1;\n\tif (R <= mid) return query(ls, l, mid, R, lim);\n\tint t = query(rs, mid + 1, r, R, lim); if (t) return t;\n\treturn query(ls, l, mid, R, lim);\n}\n\nint len[N], ch[N][26], f[N], cnt = 1, las = 1;\nint insert(int c) {\n\tint p = las, np = las = ++cnt; \n\tlen[np] = len[p] + 1;\n\tfor (; p && !ch[p][c]; p = f[p]) ch[p][c] = np;\n\tif (!p) return f[np] = 1, las;\n\tint q = ch[p][c];\n\tif (len[p] + 1 == len[q]) return f[np] = q, las;\n\tint nq = ++cnt; memcpy(ch[nq], ch[q], sizeof(ch[q]));\n\tlen[nq] = len[p] + 1, f[nq] = f[q], f[q] = f[np] = nq;\n\tfor (; ch[p][c] == q; p = f[p]) ch[p][c] = nq;\n\treturn las;\n}\n\nint siz[N], Siz, lim, rt, n;\nint ans[N], L[N], Ed[N], ed[N], vis[N], dep[N];\nint h[N], ne[N<<1], to[N<<1], tot;\nvoid getrt(int x, int fa) {\n\tsiz[x] = 1; int mn = 0;\n\tfor (int i = h[x], y; i; i = ne[i]) {\n\t\tif (vis[y = to[i]] || y == fa) continue;\n\t\tgetrt(y, x), siz[x] += siz[y], Mx(mn, siz[y]);\n\t}\n\tMx(mn, Siz - siz[x]);\n\tif (mn < lim) lim = mn, rt = x;\n}\n\ninline void add(int x, int y) { ne[++tot] = h[x], to[h[x] = tot] = y; }\nvoid Addin(int x, int t) {\n\tif (Ed[x]) change(1, 1, n, Ed[x], t ? Ed[x] : inf);\n\tfor (int i = h[x], y; i; i = ne[i]) \n\t\tif (!vis[y = to[i]] && dep[y] > dep[x]) Addin(y, t);\n}\n\nvector<pair<int, int> > vec[N];\nvoid Check(int x, int L, int fa) {\n\tif (dep[x] <= dep[L]) L = x;\n\tif (!len[L]) return;\n\tfor (int i = 0;i < (int)vec[x].size(); ++i) {\n\t\tint t = Ed[x] - vec[x][i].fi + 1;\n\t\tt = min(t, len[L]);\n\t\tMx(ans[vec[x][i].se], query(1, 1, n, vec[x][i].fi + t - 1, Ed[x] - 1));\n\t}\n\tfor (int i = h[x], y; i; i = ne[i]) \n\t\tif (!vis[y = to[i]] && y != fa) Check(y, L, x);\n}\n\nvoid Addin2(int x, int L, int fa, int t) {\n\tif (dep[x] <= dep[L]) L = x;\n\tif (!len[L]) return;\n\tif (Ed[x]) change(1, 1, n, Ed[x], t ? Ed[x] - len[L] + 1 : inf);\n\tfor (int i = h[x], y; i; i = ne[i]) \n\t\tif (!vis[y = to[i]] && y != fa) Addin2(y, L, x, t);\n}\n\nvoid Check2(int x) {\n\tfor (int i = 0;i < (int)vec[x].size(); ++i) \n\t\tMx(ans[vec[x][i].se], query(1, 1, n, Ed[x] - 1, vec[x][i].fi));\n\tfor (int i = h[x], y; i; i = ne[i]) \n\t\tif (!vis[y = to[i]] && dep[y] > dep[x]) Check2(y);\n}\n\nvoid solve(int x, int Sz) {\n\tlim = Siz = Sz, getrt(rt = x, 0), x = rt;\n\tvis[x] = 1, Addin(x, 1), Check(x, x, 0), Addin(x, 0);\n\tif (!vis[f[x]]) Addin2(f[x], f[x], 0, 1), Check2(x), Addin2(f[x], f[x], 0, 0);\n\tfor (int i = h[x], y; i; i = ne[i]) \n\t\tif (!vis[y = to[i]]) solve(y, siz[x] > siz[y] ? siz[y] : Sz - siz[x]);\n}\n\nvoid pre(int x, int fa) {\n\tdep[x] = dep[fa] + 1;\n\tfor (int i = h[x], y; i; i = ne[i])\n\t\tif ((y = to[i]) != fa) pre(y, x);\n}\n\nchar s[N]; int q;\nint main() {\n\tscanf (\"%s\", s + 1), n = strlen(s + 1), vis[0] = 1;\n\tfor (int i = 1;i <= n; ++i) Ed[ed[i] = insert(s[i] - 'a')] = i; \n\tscanf (\"%d\", &q);\n\tfor (int i = 1, l, r;i <= q; ++i) {\n\t\tscanf (\"%d%d\", &l, &r), L[i] = l;\n\t\tif (l != r) vec[ed[r]].push_back(MP(l, i));\n\t}\n\tfor (int i = 2;i <= cnt; ++i) add(f[i], i), add(i, f[i]);\n\tbuild(1, 1, n), pre(1, 0), solve(1, cnt);\n\tfor (int i = 1;i <= q; ++i) printf (\"%d\\n\", ans[i] == 0 ? 0 : max(0, ans[i] - L[i] + 1));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1615212513,
        "uid": 122144,
        "name": "hs_black",
        "ccfLevel": 0,
        "title": "4border"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u7a7a\u95f4\u5e38\u6570\u592a\u5927\u4e86\uff0c\u6709\u4e9b\u65f6\u5019\u4f1a\u88ab\u5361\u6389\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7a7a\u95f4\u5e38\u6570\u8f83\u5c0f\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u8be2\u95ee\u6309$r$\u9012\u51cf\u6392\u5e8f\uff0c\u7136\u540e\u626b\u8fc7\u53bb\uff0c\u6bcf\u6b21\u5904\u7406\u4e4b\u524d\u52a0\u8fdb\u53bb\u7684\u8be2\u95ee\uff0c\u770b\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u80fd\u88ab\u4f5c\u4e3a$i$\uff0c\u7136\u540e\u628a\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\u7684\u8be2\u95ee\u7ed9\u5220\u6389\uff0c\u518d\u52a0\u5165\u5f53\u524d\u8be2\u95ee\u3002\u73b0\u5728\u7684\u95ee\u9898\u8fd8\u662f\u5728\u5904\u7406\u8be2\u95ee\uff0c\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6761\u94fe\u6253\u4e00\u4e2a$l$\u7684\u6807\u8bb0\u5728\u6700\u6df1\u7684\u5730\u65b9\uff0c\u5904\u7406\u8be2\u95ee\u5c31\u67e5\u4e00\u4e0b$i$\u5230\u6839\u7684\u6700\u5927$mxlen(x)+l$\uff0c\u7136\u540e\u5220\u6389\u8be2\u95ee\u3002\u52a0\u5165\u8be2\u95ee\u5c31\u662f\u6cbf\u7740\u91cd\u94fe\u5f80\u4e0a\u8df3\uff0c\u653e\u6807\u8bb0\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u67e5\u8be2\u6700\u5927\u503c\u662f\u7ebf\u6bb5\u6811\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff0c\u7136\u540e\u4f60\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u4e2a$set$\u8bb0\u5f55\u8fd9\u4e2a\u7ed3\u70b9\u8fd8\u6709\u54ea\u4e9b\u6807\u8bb0\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u8ba8\u8bba\u4e00\u4e0b\u6807\u8bb0\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7a7a\u95f4\u5e38\u6570\u8f83\u5c0f\uff0c\u5927\u6982\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684$\\frac{1}{2}$\u751a\u81f3\u66f4\u5c0f\u3002\u56e0\u4e3a\u8fd9\u91cc\u7ebf\u6bb5\u6811\u4e0d\u7528\u591a\u5f00$log$\u7684\u7a7a\u95f4\uff0c\u7a7a\u95f4\u4e0a\u7684\u74f6\u9888\u662f\u5728$set$\u4e0a\uff0c\u800c\u8be2\u95ee\u662f\u52a8\u6001\u52a0\u51cf\u7684\uff0c\u5f88\u591a\u6570\u636e\u4e0b\u53ef\u80fd\u5f53\u65f6\u5b58\u5728\u5728$set$\u91cc\u7684\u6807\u8bb0\u5c31\u6ca1\u51e0\u4e2a\u3002",
        "postTime": 1572392940,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010BJWC2018\u3011Border \u7684\u56db\u79cd\u6c42\u6cd5"
    },
    {
        "content": "\u5b57\u7b26\u4e32\u795e\u9898\u3002\n\n\u72ec\u7acb\u505a\u51fa\u8fd9\u9898\u53ef\u80fd\u53ef\u4ee5\u8bf4\u660e\u4f60\u540e\u7f00\u6570\u636e\u7ed3\u6784\u57fa\u672c\u4e0a\u6bd5\u4e1a\u4e86\uff0c\u72ec\u7acb\u60f3\u51fa 1log \u505a\u6cd5\u8bf4\u660e\u4f60\u5bf9 border \u7406\u8bba\u90a3\u4e00\u5957\u57fa\u672c\u5b8c\u5168\u7406\u89e3\u4e86\u3002\n\n\u5f53\u7136\u6211\u5fc5\u7136\u662f\u4e0d\u4f1a border \u90a3\u4e00\u5957\u7406\u8bba\u7684\uff0c\u6240\u4ee5\u8fd9\u662f 2log \u9898\u89e3\u3002\u8fd9\u4e2a\u505a\u6cd5\u5e94\u8be5\u8ddf foreverlasting \u795e\u4ed9\u7684\u505a\u6cd5\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u6211\u8bf4\u5f97\u8be6\u7ec6\u4e00\u70b9\u3002\n\n------------\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u591a\u6b21\u8be2\u95ee\u533a\u95f4\u6700\u957f border\u3002\n\nborder \u8fd9\u4e2a\u4e1c\u897f\u4e00\u770b\u5c31\u5f88\u4e0d\u53ef\u505a\uff0c\u8003\u8651\u7528\u66f4\u8212\u670d\u4e00\u70b9\u7684\u65b9\u5f0f\u53bb\u523b\u753b\u5b83\u3002\u8bbe\u5f53\u524d\u8be2\u95ee\u662f $[l,r]$\uff0c$i$ \u662f\u4e00\u4e2a border \u7684\u5145\u8981\u6761\u4ef6\u662f $l+\\operatorname{lcs}(r,l+i-1)>l+i-1$\u3002lcs \u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u975e\u5e38\u8212\u670d\u5730\u7528 SAM \u8f6c\u5316\u6210 lca\uff0c\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u5c31\u662f\u9700\u8981\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u6c42\u51fa\u6700\u5927\u7684 $l+i-1<r$ \u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u3002\n\n\u8003\u8651\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u4ece\u53f3\u5f80\u5de6\u626b\u63cf\u7ebf\uff0c\u626b\u5230 $r$ \u7684\u65f6\u5019\u628a\u4ee5\u5b83\u4e3a\u53f3\u7aef\u70b9\u7684\u8be2\u95ee\u52a0\u5230\u672a\u5904\u7406\u7684\u8be2\u95ee\u91cc\u9762\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u8003\u8651\u7528\u4e00\u5b9a\u65f6\u95f4\u6c42\u51fa\u5b83\u80fd\u6210\u4e3a\u54ea\u4e9b\u672a\u5904\u7406\u8be2\u95ee\u7684 $l+i-1$\uff0c\u7136\u540e\u66b4\u529b\u628a\u8fd9\u4e9b\u8be2\u95ee\u5220\u6389\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u53f3\u5f80\u5de6\u626b\uff0c\u6240\u4ee5\u4ee5\u540e\u7684\u4f4d\u7f6e\u5fc5\u7136\u4e0d\u80fd\u66f4\u65b0\u7b54\u6848\u3002\n\n\u90a3\u4e48\u73b0\u5728\u770b\u770b\u6211\u4eec\u73b0\u5728\u628a\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u4ec0\u4e48\u6837\uff1a\u6bcf\u4e2a\u8be2\u95ee\u76f8\u5f53\u4e8e\u7ed9\u51fa $l$ \u548c $u$\uff0c\u6bcf\u6b21\u6211\u4eec\u9700\u8981\u5bf9 $x$ \u548c $v$\uff0c\u627e\u51fa\u6240\u6709\u672a\u5904\u7406\u8be2\u95ee\u6ee1\u8db3\uff1a$l+len_{\\operatorname{lca}(u,v)}>x$\u3002\u8fd9\u5c31\u662f\u5b8c\u5b8c\u5168\u5168\u7684\u4e00\u4e2a\u6811\u4e0a\u95ee\u9898\u4e86\u3002SAM \u7684\u95ee\u9898\u8f6c\u5316\u5230\u6b64\u7ed3\u675f\uff0c\u63a5\u4e0b\u6765\u662f\u6734\u5b9e\u65e0\u534e\u7684\u5957\u8def\u6811\u4e0a\u6570\u636e\u7ed3\u6784\u73af\u8282\u3002\n\n\u8003\u8651\u6811\u5256\u3002\u6bcf\u6b21\u6211\u4eec\u4ece $v$ \u5f80\u4e0a\u8df3\uff0c\u90a3\u4e48\u4e0e\u6700\u5f00\u59cb\u7684 $v$ \u7684 lca \u5728\u73b0\u5728\u7684 $(top_v,v)$ \u8fd9\u6761\u8def\u5f84\u4e0a\u7684 $u$ \u4e00\u5b9a\u6ee1\u8db3\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a$u$ \u5728 $v$ \u7684\u5b50\u6811\u5185\u6216\u5728 $(top_v,v)$ \u4e0a\u67d0\u4e2a\u70b9\u7684\u8f7b\u5b50\u6811\u5185\u3002\n\n\u5148\u6765\u89e3\u51b3\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684 lca \u4e00\u5b9a\u5728 $v$ \u7684\u5b50\u6811\u5185\uff0c\u6240\u4ee5\u867d\u7136 lca \u53ef\u80fd\u4e0d\u662f $v$\uff0c\u4f46\u662f lca \u7684 len \u4e00\u5b9a\u5927\u4e8e $len_v$\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u4e00\u5b9a\u5df2\u7ecf\u5728\u4e0b\u9762\u5c31\u88ab\u5904\u7406\u8fc7\u4e86\uff0c\u53ea\u9700\u8981\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u53f6\u5b50\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u5b58 $u$ \u4e3a\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u672a\u5904\u7406\u8be2\u95ee\uff0c\u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u8fd9\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u5185\u6240\u6709\u8be2\u95ee\u4e2d $l$ \u6700\u5927\u7684\u3002\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u53d6\u51fa\u5b50\u6811\u91cc\u6240\u6709\u672a\u5904\u7406\u8be2\u95ee\u4e2d $l$ \u6700\u5927\u7684\uff08\u5982\u679c\u5df2\u7ecf\u88ab\u5904\u7406\u8fc7\u76f4\u63a5 pop \u6389\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u5982\u679c\u53ef\u4ee5\u5904\u7406\u5c31\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\u7136\u540e\u5220\u6389\u8fd9\u4e2a\u8be2\u95ee\u7ee7\u7eed\u627e\uff0c\u5982\u679c\u4e0d\u80fd\u5904\u7406\u8bf4\u660e\u8fd9\u4e2a\u5b50\u6811\u5185\u6ca1\u6709\u53ef\u4ee5\u5904\u7406\u7684\u8be2\u95ee\u4e86\uff0c\u8df3\u51fa\u5faa\u73af\u3002\n\n\u73b0\u5728\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u4ece\u8be2\u95ee\u5b50\u6811\u8f6c\u800c\u8be2\u95ee $(top_v,v)$ \u8fd9\u6bb5\u8def\u5f84\u3002\u52a0\u5165\u8be2\u95ee\u65f6\uff0c\u4ece $u$ \u5f80\u4e0a\u8df3\u91cd\u94fe\uff0c\u8df3\u5230\u4e00\u4e2a\u70b9\u5c31\u628a\u8fd9\u4e2a\u8be2\u95ee\u6302\u5728\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u6837\u5982\u679c\u88ab\u8be2\u95ee\u5230\u4e86\uff0c\u8bf4\u660e lca \u5c31\u662f\u8fd9\u4e2a\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a\u4e00\u79cd\u60c5\u51b5\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u53ea\u662f\u6539\u4e3a\u7ef4\u62a4 $l+len_u$\uff08\u6ce8\u610f\u8fd9\u4e2a $u$ \u662f\u8df3\u5230\u7684 $u$ \u800c\u4e0d\u662f\u521d\u59cb\u7684 $u$\uff09\u6700\u5927\u7684\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5bb9\u6613\u5206\u6790\u51fa\u662f $O(n\\log^2n)$\uff08\u5ffd\u7565\u5efa SAM \u7684\u590d\u6742\u5ea6\uff09\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$\uff0c\u53ef\u80fd\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u4f18\u5316\u5230\u7ebf\u6027\uff0c\u4f46\u5df2\u7ecf\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int readint(){\n\tint x=0;\n\tbool f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)&&c!='-') c=getchar();\n\tif(c=='-'){\n\t\tf=1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nconst int maxn=2e5+5;\nint n,q,l[maxn];\nchar s[maxn];\nint sz=1,last=0,len[maxn*2],link[maxn*2],nxt[maxn*2][26];\nvector<int> ch[maxn*2];\nvoid extend(int c){\n\tint cur=sz++;\n\tlen[cur]=len[last]+1;\n\tint p=last;\n\twhile(p>=0&&!nxt[p][c]){\n\t\tnxt[p][c]=cur;\n\t\tp=link[p];\n\t}\n\tif(p>=0){\n\t\tint q=nxt[p][c];\n\t\tif(len[q]==len[p]+1) link[cur]=q;\n\t\telse{\n\t\t\tint clone=sz++;\n\t\t\tlink[clone]=link[q];\n\t\t\tmemcpy(nxt[clone],nxt[q],sizeof(nxt[0]));\n\t\t\tlen[clone]=len[p]+1;\n\t\t\twhile(p>=0&&nxt[p][c]==q){\n\t\t\t\tnxt[p][c]=clone;\n\t\t\t\tp=link[p];\n\t\t\t}\n\t\t\tlink[cur]=link[q]=clone;\n\t\t}\n\t}\n\tlast=cur;\n}\nint cur[maxn],size[maxn*2],hson[maxn*2];\nvoid dfs1(int u){\n\tsize[u]=1;\n\thson[u]=-1;\n\tfor(int v:ch[u]){\n\t\tdfs1(v);\n\t\tsize[u]+=size[v];\n\t\tif(hson[u]<0||size[v]>size[hson[u]]) hson[u]=v;\n\t}\n}\nint pos[maxn*2],top[maxn*2];\nvector<int> f;\nvoid dfs2(int u){\n\tpos[u]=f.size();\n\tf.push_back(u);\n\tif(hson[u]<0) return;\n\ttop[hson[u]]=top[u];\n\tdfs2(hson[u]);\n\tfor(int v:ch[u]){\n\t\tif(v==hson[u]) continue;\n\t\ttop[v]=v;\n\t\tdfs2(v);\n\t}\n}\nstruct item{\n\tint x,u;\n\tbool type;\n\tbool operator <(const item b)const{\n\t\tif(x<0||b.x<0) return x<0&&b.x>=0;\n\t\treturn type?l[x]+len[u]<l[b.x]+len[b.u]:l[x]<l[b.x];\n\t}\n};\nstruct node{\n\tint l,r;\n\tnode* ch[2];\n\titem v;\n\tpriority_queue<item> pq;\n\tvoid pushup(){\n\t\tv=max(ch[0]->v,ch[1]->v);\n\t}\n\tnode(int l,int r,bool type):l(l),r(r),v({-1,0,type}){\n\t\tif(l==r){\n\t\t\tpq.push({-1,0,type});\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+(r-l)/2;\n\t\tch[0]=new node(l,mid,type);\n\t\tch[1]=new node(mid+1,r,type);\n\t\tpushup();\n\t}\n\tvoid modify(int x,item k){\n\t\tif(l==r){\n\t\t\tif(k.x>=0) pq.push(k);\n\t\t\telse pq.pop();\n\t\t\tv=pq.top();\n\t\t\treturn;\n\t\t}\n\t\tif(x<=ch[0]->r) ch[0]->modify(x,k);\n\t\telse ch[1]->modify(x,k);\n\t\tpushup();\n\t}\n\titem query(int ql,int qr){\n\t\tif(ql<=l&&qr>=r) return v;\n\t\titem ans={-1,0,v.type};\n\t\tif(ql<=ch[0]->r) ans=max(ans,ch[0]->query(ql,qr));\n\t\tif(qr>=ch[1]->l) ans=max(ans,ch[1]->query(ql,qr));\n\t\treturn ans;\n\t}\n\tint debug(int x){\n\t\tif(l==r) return pq.size();\n\t\tif(x<=ch[0]->r) return ch[0]->debug(x);\n\t\telse return ch[1]->debug(x);\n\t}\n}*rt1,*rt2;\nvector<int> vec[maxn];\nint ans[maxn];\nint main(){\n\t#ifdef LOCAL\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\t#endif\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tlink[0]=-1;\n\tfor(int i=1;i<=n;i++){\n\t\textend(s[i]-'a');\n\t\tcur[i]=last;\n\t}\n\tfor(int i=1;i<sz;i++) ch[link[i]].push_back(i);\n\tdfs1(0);\n\tdfs2(0);\n\tq=readint();\n\tfor(int i=1;i<=q;i++){\n\t\tl[i]=readint();\n\t\tvec[readint()].push_back(i);\n\t}\n\trt1=new node(0,sz-1,0);\n\trt2=new node(0,sz-1,1);\n\tmemset(ans,-1,sizeof(ans));\n\tfor(int i=n;i>0;i--){\n\t\tint u=cur[i];\n\t\twhile(u>=0){\n\t\t\twhile(1){\n\t\t\t\titem res=rt1->query(pos[u],pos[u]+size[u]-1);\n\t\t\t\tif(res.x<0||l[res.x]+len[u]<=i) break;\n\t\t\t\tif(ans[res.x]<0) ans[res.x]=i-l[res.x]+1;\n\t\t\t\trt1->modify(pos[res.u],{-1,0,0});\n\t\t\t}\n\t\t\twhile(1){\n\t\t\t\titem res=rt2->query(pos[top[u]],pos[u]);\n\t\t\t\tif(res.x<0||l[res.x]+len[res.u]<=i) break;\n\t\t\t\tif(ans[res.x]<0) ans[res.x]=i-l[res.x]+1;\n\t\t\t\trt2->modify(pos[res.u],{-1,0,1});\n\t\t\t}\n\t\t\tu=link[top[u]];\n\t\t}\n\t\tfor(int j:vec[i]){\n\t\t\tint u=cur[i];\n\t\t\trt1->modify(pos[u],{j,u,0});\n\t\t\twhile(u>=0){\n\t\t\t\trt2->modify(pos[u],{j,u,1});\n\t\t\t\tu=link[top[u]];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1628060892,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": "SAM + \u6811\u94fe\u5256\u5206 + \u7ebf\u6bb5\u6811\n\n### Description\n\n\u7ed9\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c$q$ \u6b21\u8be2\u95ee $s[l:r]$ \u7684 border\u3002\n\n$n,q\\leq 2\\times 10^5$\u3002\n\n### Solution\n\n\u7b49\u4ef7\u4e8e\u6c42\u6700\u5927\u7684 $i\\in[l,r)$ \u4f7f\u5f97 $\\text{lcs}(i,r)\\geq i-l+1$\u3002\u653e\u5230 Parent \u6811\u4e0a\uff0c\u8bb0 $id_i$ \u4e3a $s[1:i]$ \u7684\u5bf9\u5e94\u8282\u70b9\uff0c\u90a3\u4e48 $i$ \u5408\u6cd5\u7b49\u4ef7\u4e8e $len_{\\text{lca}(id_i,id_r)}\\geq i-l+1$\u3002\n\n\u4e00\u4e2a\u66b4\u529b\uff1a\u679a\u4e3e $id_r$ \u7684\u7956\u5148 $t$ \u4f5c\u4e3a $\\text{lca}(id_i,id_r)$\uff0c\u90a3\u4e48\u7531\u4e8e $id_i$ \u5728 $t$ \u7684\u5b50\u6811\u5185\uff0c$t$ \u4e00\u5b9a\u6709\u4e00\u4e2a $\\text{endpos}$ \u662f $i$\uff08\u56e0\u4e3a SAM \u4e2d\u4e00\u4e2a\u70b9\u7684 $\\text{endpos}$ \u662f\u5b50\u6811 $\\text{endpos}$ \u7684\u5e76\uff09\u3002\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684 $\\text{endpos}$ \u96c6\u5408\u3002$len_t\\geq i-l+1\\Leftrightarrow i\\leq len_t+l-1$\uff0c\u4e8e\u662f\u5728 $t$ \u7684 $\\text{endpos}$ \u96c6\u5408\u4e2d\u4e8c\u5206\u51fa\u6700\u5927\u7684 $i\\in[l,r)$ \u4f7f\u5f97 $i\\leq len_t+l-1$ \u5373\u53ef\u3002\u8fd9\u6837 $id_i,id_r$ \u4e00\u5b9a\u5728 $t$ \u7684\u5b50\u6811\u5185\uff0c\u800c $\\text{lca}(id_i,id_r)$ \u662f $t$ \u7684\u5b50\u5b59\u7684\u60c5\u51b5\u4e00\u5b9a\u6bd4\u6700\u7ec8\u7684\u6700\u4f18\u7b54\u6848\u52a3\uff08\u56e0\u4e3a $len$ \u968f\u6df1\u5ea6\u7684\u51cf\u5c0f\u800c\u51cf\u5c0f\uff0c$len_t<len_{\\text{lca}(id_i,id_r)}$\uff0c\u9650\u5236\u66f4\u7d27\uff09\u3002\n\n\u4f18\u5316\u3002\u5bf9 Parent \u6811\u8f7b\u91cd\u94fe\u5256\u5206\uff0c$id_r$ \u7684\u7956\u5148\u88ab\u5212\u5206\u8fdb\u4e00\u4e9b\u5b8c\u6574\u91cd\u94fe\u548c $id_r$ \u6240\u5728\u91cd\u94fe\u7684\u4e00\u6bb5\u524d\u7f00\u3002\u79bb\u7ebf\uff0c\u5c06\u8be2\u95ee\u6302\u5728\u8fd9\u6bb5\u524d\u7f00\u7684\u672b\u5c3e\u8282\u70b9\u548c\u5176\u4ed6\u5b8c\u6574\u91cd\u94fe\u7684\u672b\u5c3e\u8282\u70b9\u4e0a\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u91cd\u94fe\u4e0a\u7684\u70b9 $t$\uff0c\u7531\u4e8e $\\text{lca}(id_i,id_r)=t$\uff1a\n\n- \u82e5 $id_r$ \u5728 $t$ \u7684\u91cd\u5b50\u6811\u5185\uff08\u4ec0\u4e48\u65f6\u5019\u4e0d\u5462\uff1f\u5f53 $t$ \u662f\u91cd\u94fe\u7684\u672b\u5c3e\u8282\u70b9\u65f6\uff09\uff1a$id_i$ \u80af\u5b9a\u5728 $t$ \u7684\u8f7b\u5b50\u6811\u5e76\u4e0a $t$\u3002$len_t\\geq i-l+1\\Leftrightarrow i-len_t+1\\leq l$\uff0c\u5bf9\u4e8e\u53ef\u80fd\u7684 $id_i$\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5bf9\u503c $i-len_t+1$ \u53d6 $\\min$\uff0c\u4ece\u4e0a\u5f80\u4e0b\u52a0\u5165\u6bcf\u4e2a $t$ \u5bf9\u5e94\u7684 $id_i$\uff0c\u8fd9\u6837\u5c31\u8003\u8651\u4e86\u91cd\u94fe\u4e00\u6bb5\u524d\u7f00\u4f5c\u4e3a $\\text{lca}$ \u7684\u60c5\u51b5\uff0c\u7136\u540e\u53d6\u51fa\u6302\u5728\u5f53\u524d $t$ \u7684\u8be2\u95ee\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u4f4d\u7f6e $[l,r)$ \u4e2d\u4e8c\u5206\u503c $\\leq l$ \u7684\u6700\u5927\u4f4d\u7f6e $i$ \u5373\u53ef\u3002\n- \u82e5 $id_r$ \u5728 $t$ \u7684\u8f7b\u5b50\u6811\u5185\uff1a$id_i$ \u8fd8\u53ef\u4ee5\u5728 $t$ \u7684\u91cd\u5b50\u6811\u3002\u800c $id_i$ \u548c $id_r$ \u5728\u540c\u4e2a $t$ \u7684\u8f7b\u5b50\u6811\u5185\u65f6\u80af\u5b9a\u6bd4\u6700\u7ec8\u7684\u6700\u4f18\u7b54\u6848\u52a3\uff0c\u6545\u76f4\u63a5\u6309\u66b4\u529b\u6240\u8bf4\u7684\u65b9\u6cd5\u5bf9\u8fd9\u6837\u7684 $t$ \u505a\u4e00\u904d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log^2 n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=4e5+5,M=N<<6;\nint n,m,l[N],r[N],x,tot=1,lst=1,id[N],ch[N][26],len[N],fa[N],sz[N],son[N],top[N],cnt,ed[N],lc[M],rc[M],mn[M],ans[N];\nchar s[N];\nvector<int>v[N],buc[N],q[N];\nvoid modify(int &p,int l,int r,int pos,int v){\n\tif(!p) mn[p=++cnt]=1e9;\n\tmn[p]=min(mn[p],v);\n\tif(l==r) return ;\n\tint mid=(l+r)/2;\n\tif(pos<=mid) modify(lc[p],l,mid,pos,v);\n\telse modify(rc[p],mid+1,r,pos,v);\n}\nint query(int p,int l,int r,int lx,int rx,int v){\n\tif(!p||lx>rx||mn[p]>v) return 0;\n\tif(l==r) return l;\n\tint mid=(l+r)/2,tmp=0;\n\tif(rx>mid&&(tmp=query(rc[p],mid+1,r,lx,rx,v))) return tmp;\n\treturn lx<=mid?query(lc[p],l,mid,lx,rx,v):0;\n}\nint merge(int x,int y){\n\tif(!x||!y) return x|y;\n\tint p=++cnt;\n\tmn[p]=min(mn[x],mn[y]);\n\tlc[p]=merge(lc[x],lc[y]),rc[p]=merge(rc[x],rc[y]);\n\treturn p;\n}\nvoid insert(int c){\n\tint p=lst,x=lst=++tot;\n\tlen[x]=len[p]+1;\n\twhile(p&&!ch[p][c]) ch[p][c]=x,p=fa[p];\n\tif(!p){fa[x]=1;return ;}\n\tint q=ch[p][c],Q;\n\tif(len[q]==len[p]+1){fa[x]=q;return ;}\n\tQ=++tot,copy(ch[q],ch[q]+26,ch[Q]);\n\tlen[Q]=len[p]+1,fa[Q]=fa[q],fa[q]=fa[x]=Q;\n\twhile(p&&ch[p][c]==q) ch[p][c]=Q,p=fa[p];\n} \nvoid dfs(int x){\n\tsz[x]=1;\n\tfor(int y:v[x]){\n\t\tdfs(y),sz[x]+=sz[y],ed[x]=merge(ed[x],ed[y]);\n\t\tif(sz[y]>sz[son[x]]) son[x]=y;\n\t}\n}\nvoid dfs2(int x,int tp){\n\ttop[x]=tp;\n\tif(son[x]) dfs2(son[x],tp);\n\tfor(int y:v[x]) if(y!=son[x]) dfs2(y,y);\n}\nsigned main(){\n\tscanf(\"%s%d\",s+1,&m),n=strlen(s+1);\n\tfor(int i=1;i<=n;i++) insert(s[i]-'a'),modify(ed[id[i]=lst],1,n,i,i);\n\tfor(int i=2;i<=tot;i++) v[fa[i]].push_back(i);\n\tdfs(1),dfs2(1,1);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&l[i],&r[i]),x=id[r[i]];\n\t\twhile(x){\n\t\t\tq[x].push_back(i);\n\t\t\tans[i]=max(ans[i],query(ed[x],1,n,l[i],r[i]-1,len[x]+l[i]-1)),x=fa[top[x]];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint x=id[i];\n\t\tbuc[x].push_back(i);\n\t\twhile(x) buc[fa[top[x]]].push_back(i),x=fa[top[x]];\n\t}\n\tfor(int i=1;i<=tot;i++) if(top[i]==i){\n\t\tint x=i,rt=0;\n\t\tfor(int j=0;j<=cnt;j++) lc[j]=rc[j]=0; cnt=0;\n\t\twhile(x){\n\t\t\tfor(int j:buc[x]) modify(rt,1,n,j,j-len[x]+1);\n\t\t\tfor(int j:q[x]) ans[j]=max(ans[j],query(rt,1,n,l[j],r[j]-1,l[j]));\n\t\t\tx=son[x];\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",max(ans[i]-l[i]+1,0));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1665745838,
        "uid": 171807,
        "name": "maoyiting",
        "ccfLevel": 7,
        "title": "P4482 [BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5"
    },
    {
        "content": "> [P4482 [BJWC2018] Border \u7684\u56db\u79cd\u6c42\u6cd5](https://www.luogu.com.cn/problem/P4482)\n\n\u5f88\u6709\u542f\u53d1\u6027\u7684\u4e00\u9053\u9898\u76ee\uff0c\u7231\u6765\u81ea\u74f7\u5668\u3002\n\n\u5047\u8bbe $n, q$ \u540c\u7ea7\u3002\n\n\u9996\u5148\u5efa\u51fa $s$ \u7684 SAM\uff0c\u90a3\u4e48\u6211\u4eec\u5e0c\u671b\u7528\u4e00\u79cd SAM \u5bb9\u6613\u523b\u753b\u7684\u65b9\u5f0f\u63cf\u8ff0 border\u3002\u56e0\u4e3a\u4e24\u5b57\u7b26\u4e32\u7684 LCS \u5373\u5b83\u4eec\u5728 link \u6811\u4e0a\u7684 LCA\uff0c\u6240\u4ee5\u5c1d\u8bd5\u4ece LCS \u89d2\u5ea6\u63cf\u8ff0 border\uff0c\u6613\u77e5\u7b54\u6848\u4e3a\n$$\n\\max\\left(l - 1, \\max\\limits_{i = l} ^ {r - 1} i[|lcs(s[l, i], s[l, r])| \\geq i - l + 1]\\right) - l + 1\n$$\n\u770b\u8d77\u6765\u76f8\u5f53\u96be\u4ee5\u7ef4\u62a4\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230 $\\mathcal{O}(n ^ 2)$ \u79cd\u5b50\u4e32\u3002\u5c1d\u8bd5\u7528\u7b49\u4ef7\u6761\u4ef6\u7b80\u5316\u7b54\u6848\u5f0f\uff1a\n\n- \u7531\u4e8e $s[l, i]$ \u548c $s[l, r]$ \u957f\u5ea6\u5747\u4e0d\u5c0f\u4e8e $i - l + 1$\uff0c\u6240\u4ee5\u53ef\u7528 $pref_i$ \u548c $pref_r$ \u4ee3\u66ff\u3002\n- \u7531\u4e8e\u5f53 $i < l$ \u65f6 $\\max$ \u5fc5\u7136\u53d6\u5230 $l - 1$\uff0c\u6240\u4ee5\u4e0b\u754c $l$ \u53ef\u6539\u4e3a $1$\uff0c\u8fd9\u6837 $i$ \u5c31\u662f\u4e00\u6bb5\u524d\u7f00\u3002\u4f46\u6700\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u3002\n\n\u91cd\u5199\u4e00\u4e0b\u7b54\u6848\u5f0f\uff0c\u4ee4 $ed_i$ \u8868\u793a $pref_i$ \u5728 SAM \u4e0a\u5bf9\u5e94\u8282\u70b9\uff0c\u5219\u5355\u7ec4\u8be2\u95ee\u7684\u7b54\u6848\u53ef\u8868\u793a\u4e3a\n$$\n\\max\\left(l - 1, \\max\\limits_{i = 1} ^ {r - 1} i [\\mathrm{len}(lca(ed_i, ed_r)) \\geq i - l + 1]\\right) - l + 1\n$$\n\u5176\u4e2d $\\mathrm{len}(x)$ \u5373 $x$ \u6240\u8868\u793a\u7684\u6700\u957f\u5b50\u4e32\u957f\u5ea6\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u53ea\u9700\u5bf9\u6bcf\u7ec4\u8be2\u95ee\u6c42\u51fa $\\max\\limits_{i = 1} ^ {r - 1} i [\\mathrm{len}(lca(ed_i, ed_r)) \\geq i - l + 1]$\u3002\u8fd9\u79cd\u5f62\u5f0f\u8ba9\u6211\u4eec\u60f3\u5230\u4e86 [[LNOI2014] LCA](https://www.luogu.com.cn/problem/P4211)\uff0c\u4f46\u662f\u5f88\u9057\u61be\uff0c\u6211\u4eec\u65e0\u6cd5\u5957\u7528\u90a3\u9898\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u56e0\u4e3a\u5916\u5c42\u662f $\\max$ \u800c\u975e\u548c\u5f0f\u3002\n\n\u63a5\u4e0b\u6765\u7ed9\u51fa\u4e00\u4e2a\u975e\u5e38\u5389\u5bb3\u7684\u6280\u5de7\uff1a\u6ce8\u610f\u5230\u4e00\u6b21\u8be2\u95ee\u6d89\u53ca\u5230\u7684\u8282\u70b9\u5747\u4e3a $ed_r$ \u7684\u7956\u5148\uff0c\u94fe\u67e5\u8be2\u5728\u6811\u4e0a\u524d\u7f00\u548c\u4e0d\u7ba1\u7528\u7684\u60c5\u51b5\u4e0b\u8003\u8651\u6811\u4e0a\u94fe\u5206\u6cbb\uff0c\u4e5f\u5c31\u662f\u6811\u5256\u3002\u4ece dsu on tree \u89d2\u5ea6\u51fa\u53d1\u53ef\u4ee5\u5f97\u5230\u672c\u8d28\u5dee\u4e0d\u591a\u7684\u4e1c\u897f\uff0c\u4f46\u9274\u4e8e\u6211\u4e0d\u592a\u719f\u6089 dsu on tree \u6240\u4ee5\u4f1a\u89c9\u5f97\u8fd9\u79cd\u6280\u5de7\u5f88\u5389\u5bb3\u3002\n\n\u5bf9\u4e8e\u4ece $ed_r$ \u5230\u6839\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u91cd\u94fe\uff0c\u8003\u8651\u5176\u4e0a\u67d0\u70b9 $x$\uff0c\u95ee\u9898\u5728 $x$ \u5904\u76f8\u5f53\u4e8e\u67e5\u8be2 $x$ \u7684\u8f7b\u5b50\u6811\u5185\u6240\u6709 $ed_i$ \u5bf9\u5e94\u7684\u6700\u5927\u7684 $i$ \u6ee1\u8db3 $i < r$ \u4e14 $\\mathrm{len}(x) \\geq i - l + 1$\uff0c\u53d8\u5f62\u4e00\u4e0b\u5373 $l\\geq i - \\mathrm{len}(x) + 1$\u3002\u6839\u636e\u6811\u5256\u7ecf\u5178\u7ed3\u8bba\uff1a\u6240\u6709\u8f7b\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\u4e3a $\\mathcal{O}(n\\log n)$\uff0c\u6545\u6240\u6709\u4e0d\u540c\u7684 $(x, ed_i)$ \u5bf9\u4ec5\u6709 $\\mathcal{O}(n\\log n)$ \u4e2a\u3002\u56de\u5230\u6574\u6761\u91cd\u94fe\u4e0a\u6765\uff0c\u53ef\u77e5\u95ee\u9898\u76f8\u5f53\u4e8e\u67e5\u8be2\u91cd\u94fe\u4e00\u6bb5 **\u524d\u7f00** \u4e0a\u6240\u6709\u70b9 $x$ \u7684\u7b54\u6848\uff0c\u5373\u5bf9\u4e00\u6bb5\u524d\u7f00\u505a\u4e8c\u7ef4\u6570\u70b9\uff0c\u5373\u9759\u6001\u4e09\u7ef4\u6570\u70b9\u3002\u590d\u6742\u5ea6\u644a\u4e00\u4e0b\u5c31\u662f $\\mathcal{O}(n\\log n)$ \u4e2a\u70b9\u7684\u4e09\u7ef4\u6570\u70b9\uff0c\u5f88\u6050\u6016\uff01\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mxzwmam1.png)\n\n\u5982\u56fe\uff0c\u7eff\u8272\u94fe\u662f $ed_r$ \u5230\u6839\u7684\u94fe\uff0c\u5b9e\u8fb9\u662f\u91cd\u8fb9\uff0c\u865a\u8fb9\u662f\u8f7b\u8fb9\uff0c\u5219\u5f53\u524d\u8be2\u95ee\u5728 $x$ \u8fd9\u6761\u91cd\u94fe\u4e0a\u7684\u67e5\u8be2\u5f62\u5982\uff1a\u5bf9\u6bcf\u4e2a $x_k$\uff0c\u6c42\u5176\u6240\u6709\u8f7b\u5b50\u6811\u5185\u6240\u6709 $ed_i$ \u5bf9\u5e94\u7684 $i$ \u7684\u6700\u5927\u503c\uff0c\u6ee1\u8db3 $i < r$ \u4e14 $l\\geq i - \\mathrm{len}(x_k) + 1$\u3002\n\n\u73b0\u5728\u5173\u952e\u95ee\u9898\u5728\u4e8e\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4ee3\u7801\u590d\u6742\u5ea6\u964d\u4e0b\u6765\uff08\u867d\u7136 $\\mathcal{O}(n\\log ^ 3 n)$ \u8bf4\u4e0d\u5b9a\u4e5f\u80fd\u8fc7\uff09\u3002\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u8981\u6c42\u6700\u5927\u7684\u7b26\u5408\u6761\u4ef6\u7684 $i$ \u800c\u4e0d\u662f\u6240\u6709 $i$ \u7684\u548c\uff0c\u6240\u4ee5\u53ef\u901a\u8fc7\u4e8c\u5206\u5c06\u4e00\u7ef4\u6d88\u6389\uff0c\u5373\u4e8c\u5206 $i$\uff0c\u8bbe\u5f53\u524d\u4e8c\u5206\u503c\u4e3a $i'$\uff0c\u5219\u67e5\u8be2\u6240\u6709 $i'\\leq j < r$ \u7684 $j - \\mathrm{len}(x_k) + 1$ \u7684\u6700\u5c0f\u503c $v$\uff0c\u82e5 $v \\leq l$ \u8bf4\u660e $i\\geq i'$\uff0c\u5426\u5219 $i < i'$\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u4e0d\u53d8\uff0c\u4f46\u662f\u5c06\u4e00\u7ef4\u8ba1\u6570\u8f6c\u5316\u6210\u4e00\u7ef4\u5224\u5b9a\u3002\u7528\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u4ee3\u66ff\u4e0a\u8ff0\u4e8c\u5206\u5373\u53ef\u505a\u5230 $\\mathcal{O}(n\\log ^ 2 n)$\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u4e0a\u8ff0\u64cd\u4f5c\u8003\u8651\u5230\u4e86\u54ea\u4e9b\u70b9\u4e0e $r$ \u4e4b\u95f4\u7684\u8d21\u732e\u3002\u6211\u4eec\u53d1\u73b0\u5b83\u591a\u7b97\u4e86\u4e00\u4e9b\u8d21\u732e\uff0c\u53c8\u5c11\u7b97\u4e86\u4e00\u4e9b\u8d21\u732e\uff1a\n\n- \u591a\u7b97\u7684\u8d21\u732e\u5728\u4e8e\u8003\u8651\u8def\u5f84\u91cd\u94fe\u672b\u7aef\uff08\u4e0a\u56fe\u4e2d\u7684 $x_3$\uff0c\u800c\u975e\u8be2\u95ee\u91cd\u94fe\u672b\u7aef $x_4$\uff09\u7684\u8f7b\u5b50\u6811\u76f4\u63a5\u628a\u8fd9\u6761\u8def\u5f84\u672b\u7aef\u7684\u524d\u4e00\u6761\u8f7b\u8fb9 $(x_3, y)$ \u7684\u6574\u68f5\u8f7b\u5b50\u6811\u7ed9\u7b97\u4e0a\u4e86\uff0c\u4f46\u7531\u4e8e\u8fd9\u6837\u53ea\u4f1a\u5c06 LCA \u7b97\u6d45\uff0c\u4f7f\u5f97 LCS \u957f\u5ea6\u5373 $\\mathrm{len}$ \u503c\u7b97\u5c0f\uff0c\u66f4\u4e0d\u5bb9\u6613\u6ee1\u8db3\u6761\u4ef6\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7b97\u5165\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u3002\n- \u5c11\u7b97\u7684\u8d21\u732e\u5728\u4e8e\u8def\u5f84\u91cd\u94fe\u672b\u7aef $x_3$ \u7684\u6574\u68f5\u91cd\u5b50\u6811\uff08$x_4$ \u7684\u5b50\u6811\uff09\u5747\u6ca1\u6709\u7b97\u4e0a\u3002\u4f46\u4ec5\u6709 $\\mathcal{O}(\\log n)$ \u4e2a\u8fd9\u6837\u7684\u5b50\u6811\uff0c\u6240\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76 + \u66b4\u529b\u67e5\u8be2\u3002\u6b64\u65f6 $l$ \u548c $\\mathrm{len}(x)$ \u5173\u4e8e\u6bcf\u4e2a $i$ \u4e3a\u5b9a\u503c\uff0c\u56e0\u6b64\u9650\u5236\u5f0f\u5f62\u5982 $l + \\mathrm{len}(x)\\geq i + 1$\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u503c\u4ece $i - \\mathrm{len}(x_k) + 1$ \u53d8\u6210\u4e86 $i + 1$\u3002\u6ce8\u610f\u5355\u6b21\u67e5\u8be2\u4e2d $\\mathrm{len}(x)$ \u53d6 $\\mathrm{len}(x_3)$\uff0c\u4f46\u5728 $x_4$ \u7684\u5b50\u6811\u4e2d\u67e5\u8be2\u3002\n\n\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u7ec6\u8282\uff1a\u82e5 $ed_i$ \u548c $ed_r$ \u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\uff0c\u8be5\u600e\u4e48\u529e\uff1f\u7531\u4e8e $ed_i$ \u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u8003\u8651\u65b0\u5efa\u865a\u70b9 $ed'_i$\uff0c$ed_i$ \u5411 $ed'_i$ \u8fde\u8fb9\uff0c\u7136\u540e\u5c06 $ed$ \u66f4\u65b0\u6210 $ed'$ \u5373\u53ef\u4fdd\u8bc1 $ed$ \u4e4b\u95f4\u65e0\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u3002\u5bb9\u6613\u53d1\u73b0\u4e0a\u8ff0\u64cd\u4f5c\u4e0d\u5f71\u54cd\u7b54\u6848\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u4ee5 $\\mathcal{O}(n\\log ^ 2 n)$ \u65f6\u95f4\uff0c$\\mathcal{O}(n\\log n)$ \u7a7a\u95f4\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u8fd9\u9898\u7528\u5230\u7684\u6280\u5de7\uff1a\n\n- \u5c06\u94fe\u67e5\u8be2\u8f6c\u5316\u4e3a $\\mathcal{O}(\\log n)$ \u6b21\u8f7b\u8fb9\u67e5\u8be2\u548c\u91cd\u94fe\u524d\u7f00\u67e5\u8be2\u3002\n- \u5f53\u6570\u70b9\u95ee\u9898\u6c42\u6700\u503c\u4e14\u70b9\u6743\u7b49\u4e8e\u67d0\u4e00\u7ef4\u7684\u503c\u65f6\uff0c\u53ef\u4ee5\u8ba1\u6570\u8f6c\u5224\u5b9a\uff0c\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u4e0b\u6807\u8868\u793a\u8be5\u7ef4\u5ea6\uff0c\u533a\u95f4\u7ef4\u62a4\u53e6\u5916\u67d0\u4e2a\u7ef4\u5ea6\u7684\u6700\u503c\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u4e8c\u5206\u4e0b\u6807\u53bb\u6389\u4e00\u4e2a $\\log$\u3002\u524d\u63d0\uff1a**\u53e6\u5916\u67d0\u7ef4\u7684\u9650\u5236\u53ea\u80fd\u662f\u524d\u540e\u7f00\u800c\u975e\u533a\u95f4**\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nbool Mbe;\nconstexpr int N = 6e5 + 5;\nconstexpr int S = 26;\nconstexpr int K = 2e7 + 5;\nint cnt = 1, fa[N], len[N], ed[N];\nnamespace SAM {\n  int las = 1, son[N][S];\n  void ins(int it) {\n    int p = las, cur = ++cnt;\n    ed[len[cur] = len[p] + 1] = cur;\n    las = cur;\n    while(!son[p][it]) son[p][it] = cur, p = fa[p];\n    if(!p) return fa[cur] = 1, void();\n    int q = son[p][it];\n    if(len[p] + 1 == len[q]) return fa[cur] = q, void();\n    int cl = ++cnt;\n    len[cl] = len[p] + 1;\n    memcpy(son[cl], son[q], S << 2);\n    fa[cl] = fa[q], fa[q] = fa[cur] = cl;\n    while(son[p][it] == q) son[p][it] = cl, p = fa[p];\n  }\n}\n\nint node, ls[K], rs[K], val[K];\nvoid clear() {\n  for(int i = 0; i <= node; i++) ls[i] = rs[i] = 0, val[i] = N;\n  node = 0;\n}\nvoid modify(int l, int r, int p, int v, int &x) {\n  if(!x) x = ++node;\n  val[x] = min(val[x], v);\n  if(l == r) return;\n  int m = l + r >> 1;\n  if(p <= m) modify(l, m, p, v, ls[x]);\n  else modify(m + 1, r, p, v, rs[x]);\n}\nint merge(int x, int y) {\n  if(!x || !y) return x | y;\n  int z = ++node;\n  ls[z] = merge(ls[x], ls[y]);\n  rs[z] = merge(rs[x], rs[y]);\n  return val[z] = min(val[x], val[y]), z;\n}\nint query(int l, int r, int qr, int lim, int x) {\n  if(val[x] > lim) return -1;\n  if(l == r) return l;\n  int m = l + r >> 1;\n  if(m < qr) {\n    int res = query(m + 1, r, qr, lim, rs[x]);\n    if(res != -1) return res;\n  }\n  return query(l, m, qr, lim, ls[x]);\n}\n\nchar s[N];\nvector<int> e[N], buc[N], qu[N];\nint n, q, R[N], l[N], r[N], ans[N];\nint son[N], sz[N], dep[N];\nint dn, rev[N], dfn[N], top[N];\nvoid dfs1(int id) {\n  sz[id] = 1;\n  dep[id] = dep[fa[id]] + 1;\n  for(int it : e[id]) {\n    dfs1(it), sz[id] += sz[it];\n    R[id] = merge(R[id], R[it]);\n    if(sz[it] > sz[son[id]]) son[id] = it;\n  }\n}\nvoid dfs2(int id, int tp) {\n  top[id] = tp;\n  rev[dfn[id] = ++dn] = id;\n  if(son[id]) dfs2(son[id], tp);\n  for(int it : e[id]) if(it != son[id]) dfs2(it, it);\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    freopen(\"1.in\", \"r\", stdin);\n    freopen(\"1.out\", \"w\", stdout);\n  #endif\n  memset(val, 0x3f, sizeof(val));\n  scanf(\"%s%d\", s + 1, &q), n = strlen(s + 1);\n  for(int i = 1; i <= n; i++) SAM::ins(s[i] - 'a');\n  for(int i = 1; i <= n; i++) e[ed[i]].push_back(++cnt), fa[cnt] = ed[i], ed[i] = cnt; // add fa[cnt] = ed[i]\n  for(int i = 1; i <= n; i++) modify(1, n, i, i + 1, R[ed[i]]);\n  for(int i = 2; i <= cnt; i++) e[fa[i]].push_back(i);\n  dfs1(1), dfs2(1, 1);\n  for(int i = 1; i <= n; i++) {\n    int x = fa[top[ed[i]]];\n    while(x) buc[x].push_back(i), x = fa[top[x]];\n  }\n  for(int i = 1; i <= q; i++) {\n    cin >> l[i] >> r[i];\n    if(l[i] == r[i]) continue;\n    int x = ed[r[i]];\n    while(x) qu[x].push_back(i), x = fa[top[x]];\n  }\n  for(int i = 1; i <= cnt; i++) {\n    if(!son[i]) continue;\n    for(int it : qu[i]) ans[it] = max(ans[it], query(1, n, r[it] - 1, l[it] + len[i], R[son[i]]));\n  }\n  for(int i = 1; i <= cnt; i++) {\n    if(top[i] != i) continue;\n    int x = i, R = 0;\n    clear();\n    while(x) {\n      for(int it : buc[x]) modify(1, n, it, it - len[x] + 1, R);\n      for(int it : qu[x]) ans[it] = max(ans[it], query(1, n, r[it] - 1, l[it], R));\n      x = son[x];\n    }\n  }\n  for(int i = 1; i <= q; i++) cout << max(0, ans[i] - l[i] + 1) << \"\\n\";\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/8/13\nAuthor: Alex_Wei\nstart coding at 8:25\nfinish debugging at 9:10\n*/\n```",
        "postTime": 1660358988,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P4482 [BJWC2018] Border \u7684\u56db\u79cd\u6c42\u6cd5"
    },
    {
        "content": "\u9898\u89e3\u533a\u5173\u4e8e\u91cd\u94fe\u4e0a\u7684\u505a\u6cd5\u8c8c\u4f3c\u505a\u70e6\u4e86\uff1f\n\n\u6211\u4eec\u5148\u628a\u8fd9\u4e2a border \u7528\u6709\u5173\u540e\u7f00\u7684\u4e1c\u897f\u8868\u793a\u51fa\u6765\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u6211\u4eec\u8981\u6c42 $\\max j$ \u4f7f\u5f97 $LCP(j,l)+j\\geq r+1$\uff0c\u4e14 $j\\in(l,r]$\u3002\n\n\u8003\u8651\u5c06\u5176\u653e\u5230 parent \u6811\u4e0a\uff0c\u5219 LCP \u76f8\u5f53\u4e8e\u4e24\u4e2a\u70b9\u5728\u6811\u4e0a\u7684\u6df1\u5ea6\uff0c\u7279\u522b\u7684\uff0c\u5982\u679c\u4e3a\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u90a3\u4e48\u662f\u7956\u5148\u5728\u539f\u4e32\u540e\u7f00\u7684\u957f\u5ea6\u3002\n\n\u6df1\u5ea6\u95ee\u9898\u8003\u8651\u6811\u5256\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u6bcf\u4e2a\u540e\u7f00\u8f6c\u5316\u6210 $O(\\log n)$ \u6b21\u8df3\u8f7b\u8fb9\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u6bcf\u6b21\u8df3\u8f7b\u8fb9\u90fd\u53ef\u4ee5\u786e\u5b9a\u51fa LCA\uff0c\u4e5f\u5373\u6df1\u5ea6\u3002\u540c\u7406\u8be2\u95ee\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u62c6\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e00\u6761\u91cd\u94fe\u4e0a\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u8bb0\u6bcf\u4e2a\u540e\u7f00\u7684\u4e8c\u5143\u7ec4\u4e3a $(j,lcp_j)$\uff0c\u8be2\u95ee\u7684\u4e09\u5143\u7ec4\u4e3a    $(l,r,dep_i)$ \u5219\u5982\u679c\u8fd9\u4e2a\u540e\u7f00\u80fd\u88ab\u7edf\u8ba1\u5165\u7b54\u6848\uff0c\u9700\u8981\u6ee1\u8db3\uff1a$j\\in(l,r],\\min(lcp_j,dep_i)+j\\geq r+1$\u3002\n\n\u628a $\\min(lcp_j,dep_j)$ \u62c6\u4e86\uff0c\u5f97\u5230 $lcp_j+j\\geq r+1$\uff0c\u4e14 $dep_i+j\\geq r+1$\u3002\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c06\u4e0a\u9762\u4e09\u4e2a\u5f0f\u5b50\u6574\u5408\u4ee5\u540e\u662f\u4e24\u7ef4\u7684\u95ee\u9898\uff0c\u4e5f\u5373\uff1a$j\\in [\\max(l+1,r+1-dep_i),r]$\uff0c\u4e14 $lcp_j+j\\geq r+1$\u3002\n\n\u8fd9\u4e2a\u662f\u5e73\u51e1\u7684\uff0c\u5c06\u540e\u7f00\u6309\u7167 $lcp_j+j$\uff0c\u8be2\u95ee\u6309\u7167 $r+1$ \u6392\u5e8f\u540e\u53cc\u6307\u9488\uff0c\u7136\u540e\u7528\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5927\u4e8e\u67d0\u4e2a\u6570\u7684\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u5199\u4f60\u4e5f\u53ef\u4ee5\u5199 set\uff0c\u53cd\u6b63\u8dd1\u5f97\u98de\u5feb\u3002\u603b\u65f6\u95f4\u590d\u6742\u5ea6   $O(n\\log^2 n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Gc() getchar() \n#define Me(x,y) memset(x,y,sizeof(x))\n#define Mc(x,y) memcpy(x,y,sizeof(x))\n#define d(x,y) ((m)*(x-1)+(y))\n#define R(n) (rnd()%(n)+1)\n#define Pc(x) putchar(x)\n#define LB lower_bound\n#define UB upper_bound\n#define PB push_back\nusing ll=long long;using db=double;using lb=long db;using ui=unsigned;using ull=unsigned ll;using LL=__int128;\nusing namespace std;const int N=4e5+5,M=N*4+5,K=50+5,mod=998244353,Mod=mod-1;const db eps=1e-9;const int INF=1e9+7;mt19937 rnd(time(0));\nint n,m,k,Le[N],Ip[N],X[N],Y[N],Ans[N];char c[N];vector<int> S[N];\nnamespace SAM{\n\tint son[N][26],link[N],Ct=1,La=1;\n\tvoid Ins(int c){\n\t\tLe[++Ct]=Le[La]+1;int p=La;La=Ct;while(p&&!son[p][c]) son[p][c]=La,p=link[p];if(!p){link[La]=1;return;}\n\t\tint q=son[p][c];if(Le[q]==Le[p]+1){link[La]=q;return;}Le[++Ct]=Le[p]+1;link[Ct]=link[q];Mc(son[Ct],son[q]);\n\t\tlink[q]=link[La]=Ct;while(p&&son[p][c]==q) son[p][c]=Ct,p=link[p]; \n\t}\n\tvoid BD(){for(int i=2;i<=Ct;i++) S[link[i]].PB(i);}\n}\nint fa[N],Tp[N],Si[N],Sn[N],d[N];\nvoid dfs1(int x,int La){fa[x]=La;Si[x]=1;for(int i:S[x]) dfs1(i,x),Si[x]+=Si[i],Si[i]>Si[Sn[x]]&&(Sn[x]=i);}\nvoid dfs2(int x,int La){Tp[x]=La;if(Sn[x]) dfs2(Sn[x],La);for(int i:S[x]) i^Sn[x]&&(dfs2(i,i),0);}\nstruct Node{int x,Ls;};vector<Node> P[N];bool C1(Node x,Node y){return x.Ls+x.x>y.Ls+y.x;}\nstruct Ques{int x,y,Ls,id;};vector<Ques> Q[N];bool C2(Ques x,Ques y){return x.y>y.y;}\nvoid II(int x,int id,int Ls){while(x)P[Tp[x]].PB((Node){id,Ls}),/*cerr<<\"Ins\"<<' '<<Tp[x]<<' '<<id<<' '<<Ls<<'\\n',*/x=fa[Tp[x]],Ls=Le[x];}\nvoid IQ(int x,int y,int id){int z=x,Ls=n-x+1;x=Ip[x];while(x) Q[Tp[x]].PB((Ques){z+1,y,Ls,id}),/*cerr<<\"Q\"<<' '<<Tp[x]<<' '<<z+1<<' '<<y<<' '<<Ls<<' '<<id<<'\\n',*/x=fa[Tp[x]],Ls=Le[x];}\nnamespace BIT{\n\tint f[N];void Ins(int x){while(x<=n) f[x]++,x+=x&-x;}\n\tvoid Cl(int x){while(x<=n&&f[x]) f[x]=0,x+=x&-x;}\n\tint Qry(int x){int Ans=0;while(x) Ans+=f[x],x-=x&-x;return Ans;}\n\tint Find(int x){int y=0;for(int i=19;~i;i--) y+(1<<i)<=n&&x>=f[y+(1<<i)]&&(y+=(1<<i),x-=f[y]);return y+1;}\n}\nint main(){\n\tfreopen(\"1.in\",\"r\",stdin);\n\tint i,j;scanf(\"%s\",c+1);n=strlen(c+1);for(i=n;i;i--) SAM::Ins(c[i]-'a'),Ip[i]=SAM::La;SAM::BD();\n\tdfs1(1,0);dfs2(1,1);for(i=1;i<=n;i++) II(Ip[i],i,n-i+1);\n\tscanf(\"%d\",&m);for(i=1;i<=m;i++) scanf(\"%d%d\",&X[i],&Y[i]),Ans[i]=Y[i]+1,IQ(X[i],Y[i],i);\n\tfor(i=1;i<=SAM::Ct;i++) if(Tp[i]==i){\n\t\tsort(P[i].begin(),P[i].end(),C1);sort(Q[i].begin(),Q[i].end(),C2);\n\t\tint R=0;for(Ques j:Q[i]){\n\t\t\twhile(R<P[i].size()&&P[i][R].Ls+P[i][R].x>=j.y+1) BIT::Ins(P[i][R].x),R++;\n\t\t\tint p=BIT::Find(BIT::Qry(max(j.x,j.y+1-j.Ls)-1));if(p<=j.y)Ans[j.id]=min(Ans[j.id],p);\n\t\t}\n\t\tfor(j=0;j<R;j++) BIT::Cl(P[i][j].x);\n\t}\n\tfor(i=1;i<=m;i++) printf(\"%d\\n\",Y[i]-Ans[i]+1);\n}\n```\n\n",
        "postTime": 1676377426,
        "uid": 181766,
        "name": "275307894a",
        "ccfLevel": 0,
        "title": "P4482 [BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5"
    },
    {
        "content": "Border \u8fd9\u79cd\u4e1c\u897f\u4e00\u770b\u5c31\u5f88\u96be\u76f4\u63a5\u641e\u533a\u95f4\uff0c\u8003\u8651\u8f6c\u5316\u6210\u6bd4\u8f83\u597d\u5904\u7406\u7684\u5f62\u5f0f\u3002\n\n\u6ce8\u610f\u5230\u5f53 $[l, i]$ \u4e3a\u5176 Border\uff0c\u5219 $[l, i] = [r - (i - l), r]$\u3002\u518d\u6362\u4e2a\u5f62\u5f0f\u8868\u793a\uff0c\u5219 $[1, i]$ \u548c $[1, r]$ \u7684 LCS \u957f\u5ea6 $\\geq i - l + 1$\uff0c\u6211\u4eec\u8bb0\u4f5c $lcs(i, r) \\geq i - l + 1$\u3002\n\n\u770b\u5230 LCS\uff0c\u8003\u8651\u5efa\u51fa SAM \u7684 fail \u6811\uff0c\u5219 $len_{lca(pos_i, pos_r)} \\geq i - l + 1$\u3002\n\n\u7136\u540e\u5c31\u6709\u4e00\u4e2a~~\u7b80\u5355\u7684~~\u66b4\u529b\u4e86\uff1a\n\n- \u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5408\u5e76\u9884\u5904\u7406\u6bcf\u4e2a\u5b50\u6811\u5185\u6240\u6709 $pos_i$ \u7684\u4fe1\u606f\u3002\n- \u679a\u4e3e $pos_r$ \u7684\u7956\u5148 $u$ \u4f5c\u4e3a $lca(pos_i, pos_r)$\uff0c\u5219 $l \\leq i \\leq \\min(l + len_u - 1, r - 1)$\u3002\u5728 $u$ \u7684\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u4e2d\u4e8c\u5206\u67e5\u8be2\u8be5\u533a\u95f4\u5185\u7684\u6700\u5927 $i$ \u5373\u53ef\u3002\n\n\u8fd9\u91cc\u770b\u4e0a\u53bb\u4f3c\u4e4e\u662f\u8981\u53bb\u91cd\u7684\uff0c\u4f46\u56e0\u4e3a\u8d8a\u5f80\u7956\u5148\u8d70 $i$ \u7684\u9650\u5236\u8d8a\u7d27\uff0c\u6240\u4ee5\u6ca1\u5f71\u54cd\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(qn \\log n)$\uff0c\u53ea\u6709 $50 \\operatorname{pts}$\u3002\n\n\u8003\u8651\u6811\u5256\u3002\u73b0\u5728\u6211\u4eec\u5c06 $pos_r$ \u5230\u6839\u7684\u8def\u5f84\u5212\u5206\u4e3a $O(\\log n)$ \u6761\u91cd\u94fe\u7684\u524d\u7f00\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u8003\u8651\u5176\u4e2d\u4e00\u6761 $x \\to top_x$\u3002\n\n\u65e2\u7136\u6811\u5256\u4e86\uff0c\u6211\u4eec\u5c31\u6765\u8003\u8651\u4e00\u4e0b\u8f7b\u91cd\u5b50\u6811\u5206\u522b\u7684\u8d21\u732e\u3002\n\n1. \u8f7b\u5b50\u6811\n\n- $x \\to top_x$ \u4e0a\u7684\u70b9\uff08\u4e0d\u5305\u62ec $x$\uff09\u7684\u8f7b\u5b50\u6811\u5e26\u6765\u7684\u8d21\u732e\u3002\u8003\u8651\u79bb\u7ebf\u4e0b\u6765 DSU on tree\uff0c\u628a\u8be2\u95ee\u6302\u5230 $x$ \u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u6bcf\u6761\u91cd\u94fe\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u5904\u7406\uff0c\u6bcf\u6b21\u6211\u4eec\u76f8\u5f53\u4e8e\u77e5\u9053 $lca(pos_i, pos_r) = u$\uff08$u$ \u4e3a\u5f53\u524d\u5904\u7406\u7684\u70b9\uff09\uff0c\u5219\u79fb\u9879\u53ef\u77e5 $l \\leq i < r$ \u4e14 $i - len_u + 1 \\leq l$\u3002\u627e\u51fa\u8f7b\u5b50\u6811\u4e2d\u4f5c\u4e3a\u539f\u4e32\u524d\u7f00\u7684 $[1, i]$ \u5e76\u628a $i - len_u + 1$ \u63d2\u5165\u7ebf\u6bb5\u6811 $i$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n- \u8fd9\u4e2a\u524d\u7f00\u5e95\u90e8 $x$ \u7684\u5b50\u6811\u5e26\u6765\u7684\u8d21\u732e\u3002\u8fdb\u884c\u4e00\u6b21\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u67e5\u8be2\u5373\u53ef\u3002\n\n2. \u91cd\u5b50\u6811\n\n- $x \\to top_x$ \u4e0a\u7684\u70b9\u5e26\u6765\u7684\u8d21\u732e\u3002\u5728 DSU on tree \u65f6\u4e00\u8d77\u52a0\u5165\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u8d21\u732e\u5373\u53ef\u3002\n- \u8fd9\u4e2a\u524d\u7f00\u5e95\u90e8 $x$ \u7684\u5b50\u6811\u5e26\u6765\u7684\u8d21\u732e\uff08\u5728\u8f7b\u5b50\u6811\u7684\u90e8\u5206\u5df2\u7ecf\u4e00\u8d77\u5904\u7406\u8fc7\u4e86\uff09\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((|S| + q) \\log^2 |S|)$\u3002\n\n\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u5e94\u7ba1\u7406\u5458\u8981\u6c42\u653e\u5728[\u526a\u8d34\u677f](https://www.luogu.com.cn/paste/8gkbh4no)\u91cc\u3002",
        "postTime": 1673224108,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4482 \u3010[BJWC2018] Border \u7684\u56db\u79cd\u6c42\u6cd5\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u6c42\u533a\u95f4 border\u3002\n\n\u9898\u89e3\uff1a\n\n\u8f6c\u5316\u4e3a\u6c42\u6700\u5927\u7684 $i$ \u4f7f\u5f97 $\\operatorname{lcs}(i, r) \\geq i - l + 1$\u3002\n\n\u518d\u8f6c\u5316\u4e3a $len[\\operatorname{lca}(ver[i], ver[r])] \\geq i - l + 1$\uff0c\u5176\u4e2d $ver[x]$ \u8868\u793a\u540e\u7f00\u81ea\u52a8\u673a\u4e2d\u8868\u793a $x$ \u8fd9\u4e2a\u524d\u7f00\u7684\u8282\u70b9\u3002\n\n\u7136\u540e\u6ce8\u610f\u5230\uff0c\u5982\u679c\u4ee4\u540e\u7f00\u6811\u4e0a\u7684\u4e00\u6761\u8fb9\u8fb9\u6743\u4e3a $len[x] - len[fa[x]]$\uff0c\u5219 $len[x]$ \u53ef\u4ee5\u8f6c\u5316\u4e3a $x$ \u5230\u6839\u7684\u8ddd\u79bb\u3002\n\n\u53c8\u56e0\u4e3a $dis(x, y) = dis[x] + dis[y] - 2 \\times dis[\\operatorname{lca}(x, y)]$\uff0c\u5219 $dis[\\operatorname{lca}(x, y)] = (dis[x] + dis[y] - dis(x, y)) / 2$\u3002\n\n\u4e8e\u662f\uff0c$\\operatorname{lcs}(i, r)$ \u53ef\u4ee5\u7528\u5404\u81ea\u7684 $dis$ \u548c\u4ed6\u4eec\u6811\u4e0a\u8ddd\u79bb\u8868\u793a\uff0c\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u4ee4 $dis_r[x]$ \u4e3a $x$ \u5230\u5206\u6cbb\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff0c\u5219\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f\uff1a\n\n$dis[ver[i]] + dis[ver[r]] - dis_r[ver[i]] - dis_r[ver[r]] \\geq 2 \\times (i - l + 1)$\n\n\u79fb\u9879\uff0c\u5c06\u4e0e $i$ \u6709\u5173\u7684\u653e\u5230\u4e00\u8d77\uff0c\u5f97\u5230\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff1a\n\n$dis[ver[i]] - dis_r[ver[i]] - 2 \\times i \\geq dis_r[ver[r]] - dis[ver[r]] - 2 \\times (l - 1)$\u3002\n\n\u4e8e\u662f\u5c06\u6240\u6709\u8868\u793a\u524d\u7f00\u7684\u70b9\u548c\u8be2\u95ee\u5217\u51fa\u6765\uff0c\u6392\u5e8f\uff0c\u7528 set \u7ef4\u62a4\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u624b\u5199\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\n#define ri register int\n#define ll long long\n#define fi first\n#define se second\nusing namespace std;\n//dis[ver[i]] - dis_[ver[i]] - 2 * i >= dis_[ver[r]] - dis[ver[r]] - 2 * (l - 1)\nconst int Maxn=2e5;\ntemplate <typename T> struct SAM {\n\tvector<int>len,fa;\n\tvector<map<T,int>>ch;\n\tint tot,las;\n\tinline int newnode() {\n\t\tlen.emplace_back(),fa.emplace_back(),ch.emplace_back();\n\t\treturn ++tot;\n\t}\n\tSAM() {tot=-1,newnode(),las=newnode();}\n\tinline void insert(T &c) {\n\t\tint now=newnode(),p=las;\n\t\tlen[now]=len[p]+1,las=now;\n\t\tfor(;p&&!ch[p][c];p=fa[p])ch[p][c]=now;\n\t\tif(!p) {fa[now]=1;return ;}\n\t\tint q=ch[p][c];\n\t\tif(len[p]+1==len[q]) {fa[now]=q;return ;}\n\t\tint cq=newnode();\n\t\tlen[cq]=len[p]+1,fa[cq]=fa[q];\n\t\tch[cq]=ch[q];\n\t\tfor(;p&&ch[p][c]==q;p=fa[p])ch[p][c]=cq;\n\t\tfa[q]=fa[now]=cq;\n\t}\n};\nSAM<char>sam;\nvector<pair<int,int>>adj[2*Maxn+5];\nvector<int>query[2*Maxn+5];\nint pos[2*Maxn+5];\nint l[Maxn+5],r[Maxn+5];\nint vis[2*Maxn+5],size[2*Maxn+5],mx[2*Maxn+5],dis[2*Maxn+5];\nint ans[Maxn+5];\nvector<pair<int,int>>s;\nvoid dfs(int u,int fa,int n) {\n\tsize[u]=1,mx[u]=0;\n\tfor(auto &e:adj[u]) {\n\t\tint v=e.fi;\n\t\tif(v!=fa&&!vis[v]) {\n\t\t\tdfs(v,u,n);\n\t\t\tsize[u]+=size[v];\n\t\t\tmx[u]=max(mx[u],size[v]);\n\t\t}\n\t}\n\tmx[u]=max(mx[u],n-size[u]);\n\ts.emplace_back(mx[u],u);\n}\nvoid dfs_dis(int u,int fa) {\n\tfor(auto &e:adj[u]) {\n\t\tint v=e.fi;\n\t\tif(v!=fa&&!vis[v]) {\n\t\t\tdis[v]=dis[u]+e.se;\n\t\t\tdfs_dis(v,u);\n\t\t}\n\t}\n}\nvoid solve(int u,int n) {\n\tdfs(u,0,n);\n\tauto p=min_element(s.begin(),s.end())->se;\n\tdis[p]=0,dfs_dis(p,0);\n\tvector<pair<int,int>>x;\n\tvector<pair<int,int>>y;\n\tfor(auto &t:s) {\n\t\tint u=t.se;\n\t\tif(pos[u]) {\n\t\t\tx.emplace_back(sam.len[u]-dis[u]-2*pos[u],pos[u]);\n\t\t}\n\t\tfor(auto x:query[u]) {\n\t\t\ty.emplace_back(dis[u]-sam.len[u]-2*(l[x]-1),x);\n\t\t}\n\t}\n\tsort(x.begin(),x.end(),greater<pair<int,int>>());\n\tsort(y.begin(),y.end(),greater<pair<int,int>>());\n\tset<int>mx;\n\tint now=0;\n\tfor(auto &t:y) {\n\t\tint id=t.se;\n\t\twhile(now<(int)x.size()&&x[now].fi>=t.fi) {\n\t\t\tmx.insert(x[now].se);\n\t\t\t++now;\n\t\t}\n\t\tauto it=mx.lower_bound(r[id]);\n\t\tif(it!=mx.begin()) {\n\t\t\tans[id]=max(ans[id],*prev(it));\n\t\t}\n\t}\n\ts.clear();\n\tvis[p]=1;\n\tfor(auto &e:adj[p]) {\n\t\tint v=e.fi;\n\t\tif(!vis[v]) {\n\t\t\tsolve(v,size[v]<size[p]?size[v]:n-size[p]);\n\t\t}\n\t}\n}\nint main() {\n\tstatic char str[Maxn+5];\n\tscanf(\"%s\",str+1);\n\tint n=strlen(str+1),q;\n\tscanf(\"%d\",&q);\n\tvector<int>ver(n+1);\n\tfor(ri i=1;i<=n;i++) {\n\t\tsam.insert(str[i]);\n\t\tver[i]=sam.las,pos[sam.las]=i;\n\t}\n\tfor(ri i=2;i<=sam.tot;i++) {\n\t\tint fa=sam.fa[i],len=sam.len[i]-sam.len[fa];\n\t\tadj[i].emplace_back(fa,len);\n\t\tadj[fa].emplace_back(i,len);\n\t}\n\tfor(ri i=1;i<=q;i++) {\n\t\tscanf(\"%d%d\",&l[i],&r[i]);\n\t\tquery[ver[r[i]]].push_back(i);\t\n\t}\n\tsolve(1,sam.tot);\n\tfor(ri i=1;i<=q;i++)printf(\"%d\\n\",max(0,ans[i]-l[i]+1));\n\treturn 0;\n}\n```\n",
        "postTime": 1673189803,
        "uid": 201278,
        "name": "xianggl",
        "ccfLevel": 0,
        "title": "[BJWC2018]Border \u7684\u56db\u79cd\u6c42\u6cd5 \u9898\u89e3"
    }
]