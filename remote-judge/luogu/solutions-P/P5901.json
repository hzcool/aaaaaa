[
    {
        "content": "[lnk](https://www.luogu.com.cn/problem/P5901)\u3002\n\n\u5927\u5bb6\u597d\u554a\u8fd9\u91cc\u662f\u4e00\u4e2a\u5728\u7ebf\u7684 $O(n^{1.5})$ \u7684\u505a\u6cd5\uff08\u5047\u8bbe $n,q,r$ \u540c\u9636\uff09\u3002\n\n\u5730\u533a\u4e0d\u597d\u542c\uff0c\u6362\u4e2a\u540d\u5b57\u53eb\u989c\u8272\u597d\u4e86\u3002\u5bfc\u5e08\u5173\u7cfb\u663e\u7136\u6784\u6210\u6811\u5f62\u7ed3\u6784\u3002\n\n\u9996\u5148\u8fd9\u79cd\u9898\u4e00\u773c\u8d77\u624b\u6839\u5206\uff0c\u628a\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e\u6839\u53f7\u7684\u989c\u8272\u6807\u8bb0\u4e3a\u201c\u91cd\u989c\u8272\u201d\uff0c\u5c0f\u4e8e\u7684\u6807\u8bb0\u4e3a\u201c\u8f7b\u989c\u8272\u201d\u3002\u90a3\u4e48\u6211\u4eec\u628a\u8be2\u95ee $(u,v)$\uff08\u5bf9\u5e94\u539f\u9898\u91cc\u7684 $(r1,r2)$\uff09\u5206\u4e3a\u4e09\u7c7b\u5904\u7406\u3002\n\n1. $v$ \u4e3a\u201c\u91cd\u989c\u8272\u201d\n\n\u6ce8\u610f\u5230\u6b64\u65f6\u6240\u6709\u53ef\u80fd\u7684\u8be2\u95ee\u4e00\u5171 $O(n^{1.5})$ \u79cd\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u628a\u5b83\u5b50\u6811\u5185\u7684\u201c\u91cd\u989c\u8272\u201d\u5206\u5e03\u8d21\u732e\u5230\u5b83\u5bf9\u5e94\u7684\u989c\u8272\u4e0a\u53bb\uff08\u8fd9\u4e2a\u5206\u5e03\u53ef\u4ee5\u6309\u513f\u5b50\u5411\u7236\u4eb2\u8f6c\u79fb\uff0c\u4e00\u904d dfs \u80fd\u641c\u5b8c\uff09\u3002\u4f46\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u7684\u7a7a\u95f4\u9700\u8981\u5f00\u4e24\u4e2a $O(n^{1.5})$ \u7684\u6570\u7ec4\u3002\u66f4\u4f18\u7684\u505a\u6cd5\u662f\u5728 $dfs$ \u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a\u201c\u91cd\u989c\u8272\u201d\u5206\u5e03\u7684\u8ba1\u6570\u5668\uff0c\u8fdb\u5165\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u66f4\u65b0\u8ba1\u6570\u5668\uff08**\u79bb\u5f00\u4e0d\u66f4\u65b0**\uff09\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u5b50\u6811\u5185\u90e8\u7684\u989c\u8272\u5206\u5e03\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fdb\u5165\u5b50\u6811\u524d\u548c\u79bb\u5f00\u5b50\u6811\u540e\u7684\u4e24\u6ce2\u8ba1\u6570\u5668\u4f5c\u5dee\u6c42\u51fa\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u5148\u628a\u8d21\u732e\u6302\u5728\u6bcf\u4e2a\u70b9\u4e0a\u518d\u8f6c\u7ed9\u989c\u8272\u8fd9\u4e00\u6b65\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ed9\u989c\u8272\u66f4\u65b0\u8d21\u732e\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n2. $v$ \u4e3a\u201c\u8f7b\u989c\u8272\u201d\u4e14 $u$ \u4e3a\u201c\u91cd\u989c\u8272\u201d\u3002\n\n\u6ce8\u610f\u5230\u6b64\u65f6\u6240\u6709\u53ef\u80fd\u7684\u8be2\u95ee\u8fd8\u662f\u4e00\u5171 $O(n^{1.5})$ \u79cd\uff0c\u4f9d\u65e7\u53ef\u4ee5\u9884\u5904\u7406\u3002\u6ce8\u610f\u5230\u5b9e\u9645\u4e0a\u6709\u4e24\u79cd\u7b97\u8d21\u732e\u7684\u65b9\u6cd5\uff1a\u5b69\u5b50\u628a\u8d21\u732e\u7ed9\u7956\u5148\uff0c\u6216\u8005\u7956\u5148\u4ece\u5b69\u5b50\u5904\u83b7\u5f97\u8d21\u732e\u3002\u5f88\u663e\u7136\uff0c\u8c01\u7684\u989c\u8272\u5206\u5e03\u7b80\u5355\uff0c\u5c31\u8be5\u7531\u8c01\u53bb\u4e3b\u52a8\u64cd\u4f5c\u8d21\u732e\uff08\u4e0d\u7136\u5f88\u96be\u7cbe\u51c6\u5b9a\u4f4d\u8d21\u732e\uff09\u3002\u6240\u4ee5\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\u662f\u7956\u5148\u4ece\u5b69\u5b50\u5904\u83b7\u53d6\uff0c\u90a3\u8fd9\u56de\u5c31\u662f\u5b69\u5b50\u628a\u8d21\u732e\u7ed9\u7956\u5148\u4e86\u3002\u6211\u4eec\u540c\u6837\u7ef4\u62a4\u4e00\u4e2a\u201c\u91cd\u989c\u8272\u201d\u5206\u5e03\u7684\u8ba1\u6570\u5668\uff0c\u8fdb\u5165\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u66f4\u65b0\u4e4b\uff0c\u79bb\u5f00\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u540c\u6837\u66f4\u65b0\u4e4b\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u904d\u5386\u5230\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u8ba1\u6570\u5668\u91cc\u5b58\u4e0b\u7684\u662f\u5b83\u7956\u5148\u4eec\u7684\u201c\u91cd\u989c\u8272\u201d\u5206\u5e03\u3002\u90a3\u6211\u4eec\u628a\u8fd9\u4e2a\u70b9\u7684\u8d21\u732e\u7ed9\u7956\u5148\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u79cd\u201c\u91cd\u989c\u8272\u201d\u7136\u540e\u6839\u636e\u5b83\u5728\u7956\u5148\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u52a0\u8d21\u732e\u5c31\u597d\u4e86\u3002\n\n3. $u,v$ \u5747\u4e3a\u201c\u8f7b\u989c\u8272\u201d\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\u4e24\u8fb9\u90fd\u53ea\u6709\u6839\u53f7\u91cf\u7ea7\u7684\u70b9\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e9b\u70b9\u62c9\u51fa\u6765\uff0c\u7136\u540e\u89c2\u5bdf\u5982\u4f55\u7ed9\u8fd9\u4e2a\u201c\u5b50\u6811\u5185\u201d\u53e6\u4e00\u4e2a\u523b\u753b\u3002\u4e0d\u96be\u60f3\u5230 dfs \u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u8bbe\u7b2c\u4e00\u4e2a\u5e8f\u5217\u662f $a_1,a_2,\\cdots,a_x$\uff0c\u7b2c\u4e8c\u4e2a\u662f $b_1,b_2,\\cdots,b_n$\uff0cdfs \u5e8f\u5217 \u4e3a $dfn$\uff0c\u4e00\u4e2a\u70b9\u5b50\u6811\u5185\u7684\u6700\u5927 dfs \u5e8f\u4e3a $ed$\uff0c\u90a3\u8981\u7edf\u8ba1\u7684\u5176\u5b9e\u662f\u8fd9\u4e48\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n$$\\sum_{i=1}^x\\sum_{j=1}^y[dfn_{a_i}\\le dfn_{b_j}\\le ed_{a_i}]$$\n\n\u6211\u4eec\u53d1\u73b0\u90a3\u4e2a\u53cc\u4e0d\u7b49\u53f7\u5f88\u96be\u5904\u7406\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u628a\u5b83\u62c6\u5f00\uff0c\u7136\u540e\u67ff\u5b50\u53d8\u6210\u4e86\uff1a\n\n$$\\sum_{i=1}^x\\sum_{j=1}^y[dfn_{b_j}\\le ed_{a_i}]-\\sum_{i=1}^x\\sum_{j=1}^y[dfn_{b_j}\\le dfn_{a_i}-1]$$\n\n\u6211\u4eec\u53d1\u73b0\u524d\u540e\u4e24\u4e2a\u67ff\u5b50\u6ca1\u5565\u5f62\u5f0f\u4e0a\u7684\u533a\u522b\u800c\u4e14\u90fd\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5f52\u5e76\u6c42\u9006\u5e8f\u5bf9\uff08\u6216\u8005\u987a\u5e8f\u5bf9\uff1f\uff09\u7684\u5f62\u5f0f\uff0c\u90a3\u663e\u7136\u662f\u626b\u63cf\u7ebf\u626b\u4e00\u626b\u5c31\u53ef\u4ee5\u7b97\u7684\u3002\u800c\u4e14\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u4e3a\u8fd9\u4e2a\u6392\u5e8f\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u2014\u2014\u5728 dfs \u7684\u8fc7\u7a0b\u4e2d\u523b\u753b\u8fd9\u4e2a\u5e8f\u5217\u7684\u8bdd\uff0c\u5b83\u5e94\u5f53\u5929\u7136\u662f\u6709\u5e8f\u7684\uff08\u4e0d\u8fc7\u8981\u770b\u600e\u4e48\u523b\u753b\uff0c\u4e5f\u6709\u53ef\u80fd\u5929\u7136\u5012\u5e8f\uff0c\u53cd\u6b63\u5c31\u4e00\u4e2a\u7ffb\u8f6c\u5e8f\u5217\u7684\u4e8b\uff09\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u53ef\u80fd\u8bb2\u7684\u6709\u70b9\u610f\u8bc6\u6d41\uff0c\u653e\u4ee3\u7801\u5427\uff0c\u6ca1\u6709\u7cbe\u7ec6\u5b9e\u73b0\uff0c\u5c31\u56fe\u4e00\u4e2a\u597d\u5199\u3002\u8dd1\u633a\u6162\u7684\u3002\u4e0d\u8ba4\u8bc6\u4e14\u7ed3\u5bf9\u51fa\u73b0\u4e14\u548c\u5e26 nxt \u7684\u6570\u7ec4\u5728\u4e00\u8d77\u7684\u6570\u7ec4\u53ef\u4ee5\u5168\u90e8\u5f52\u4e3a\u524d\u5411\u661f\uff08\u4e00\u5171\u4e09\u4e2a\uff1a\u5b58\u56fe\uff0c$dfn$\uff0c$ed$\u3002\u57fa\u672c\u4e0a\u5b58\u6cd5\u5404\u6709\u5343\u79cb\uff0c\u5efa\u8bae\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\u3002\u6ce8\u610f\u524d\u5411\u661f\u5bf9\u8fb9\u7684\u7f16\u53f7\u6ca1\u6709\u8981\u6c42\uff0c\u6240\u4ee5\u975e\u5e38\u653e\u98de\u81ea\u6211\uff0c\u65b9\u4fbf\u5c31\u5b8c\u4e8b\u4e86\uff0c\u5e0c\u671b\u4e0d\u8981\u6709\u8bfb\u8005\u88ab\u8bef\u5bfc\u3002\uff09\n\n\u6700\u540e\u518d\u8bf4\u4e00\u4e2a\u4ee3\u7801\u5c0f\u7ec6\u8282\u5427\uff0c\u672c\u6765\u8fd9\u9898\u6253\u7b97\u5f00 `long long` \u7684\uff08\u56e0\u4e3a\u867d\u7136\u9898\u76ee\u6709\u90a3\u4e2a\u4fdd\u8bc1\u4f46\u5176\u5b9e\u6ca1\u67e5\u5230\u7684\u5730\u65b9\u8fd8\u662f\u53ef\u80fd\u6ea2\u51fa\uff0c\u7b2c\u4e09\u7c7b\u60c5\u51b5\u4f9d\u8d56\u4f5c\u5dee\u4e5f\u5f88\u5bb9\u6613\u6ea2\u51fa\uff09\uff0c\u4f46\u8003\u8651\u5230\u4e0d\u5927\u7f8e\u89c2\uff0c\u4e8e\u662f\u5c31\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e38\u7528 trick\uff1a\u628a `unsigned` \u5f53 `long long` \u7528\uff0c\u8f93\u51fa\u6ca1\u95ee\u9898\u4e14\u8fc7\u7a0b\u6ca1 UB \u5c31\u597d\u4e86\uff08\n\n```cpp\n#include <bits/stdc++.h>\n#define getchar()                                                              \\\n  (p1 == p2 && (p2 = (p1 = buf) + (cin.read(buf, 1 << 23).gcount()), p1 == p2) \\\n       ? EOF                                                                   \\\n       : *p1++)\nusing namespace std;\ntypedef unsigned ll;\nchar buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 22], *O = obuf;\nint rd() {\n  char ch;\n  while (!isdigit(ch = getchar()))\n    ;\n  int x = ch & 15;\n  while (isdigit(ch = getchar())) x = x * 10 + (ch & 15);\n  return x;\n}\nvoid prtln(ll x) {\n  char s[15];\n  int tot = 0;\n  if (!x)\n    *O++ = '0';\n  else {\n    while (x) s[++tot] = x % 10 | '0', x /= 10;\n    while (tot) *O++ = s[tot--];\n  }\n  *O++ = '\\n';\n}\nconstexpr int N = 2e5 + 9, R = 2.5e4 + 9, Q = 2e5 + 9, B = 459;\nint n, r, q;\nint id[R], bel[N], ctot, cnt[R], tmp[B];\nint hd[N], nxt[N], etot;\nint dhd[R], dnxt[N];\nint ehd[R], eto[N], enxt[N];\nint tmpx[B], tmpy[B], totx, toty;\nll htl[B][R], occ[B], lth[R][B];\nvoid dfs(int x) {\n  int c = bel[x];\n  dnxt[++etot] = dhd[c], dhd[c] = etot;\n  for (int i = 1; i <= ctot; ++i) lth[c][i] -= occ[i];\n  if (int i = id[c]) ++occ[i], ++tmp[i];\n  for (int i = 1; i <= ctot; ++i) htl[i][c] += tmp[i];\n  for (int y = hd[x]; y; y = nxt[y]) dfs(y);\n  for (int i = 1; i <= ctot; ++i) lth[c][i] += occ[i];\n  enxt[x] = ehd[c], ehd[c] = x, eto[x] = etot;\n  if (int i = id[c]) --tmp[i];\n}\nll calcxy() {\n  ll ans = 0;\n  for (int i = 0, j = 0; j < toty; ++j) {\n    while (i < totx && tmpx[i] <= tmpy[j]) ++i;\n    ans += i;\n  }\n  return ans;\n}\nll calcans(int u, int v) {\n  if (id[v])\n    return lth[u][id[v]];\n  else if (id[u])\n    return htl[id[u]][v];\n  totx = 0, toty = 0;\n  for (int i = dhd[v]; i; i = dnxt[i]) tmpx[totx++] = i;\n  reverse(tmpx, tmpx + totx);\n  for (int i = ehd[u]; i; i = enxt[i]) tmpy[toty++] = eto[i];\n  reverse(tmpy, tmpy + toty);\n  ll ans = calcxy();\n  toty = 0;\n  for (int i = dhd[u]; i; i = dnxt[i]) tmpy[toty++] = i - 1;\n  reverse(tmpy, tmpy + toty);\n  return ans - calcxy();\n}\nint main() {\n  cin.tie(nullptr)->sync_with_stdio(false);\n  n = rd(), r = rd(), q = rd();\n  ++cnt[bel[1] = rd()];\n  for (int i = 2, s; i <= n; ++i) {\n    nxt[i] = hd[s = rd()], hd[s] = i;\n    ++cnt[bel[i] = rd()];\n  }\n  for (int i = 1; i <= r; ++i)\n    if (cnt[i] >= B) id[i] = ++ctot;\n  dfs(1);\n  while (q--) {\n    int u = rd(), v = rd();\n    prtln(calcans(u, v));\n  }\n  return cout.write(obuf, O - obuf).flush(), 0;\n}\n```",
        "postTime": 1652697942,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "\u6839\u53f7\u5206\u6cbb\u4e5f\u662f\u5206\u6cbb\uff01"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u5728\u7ebf $O(n\\sqrt{n\\log n})$ \u7684\u9898\u89e3\u3002\n\n\u8bbe\u6ee1\u8db3 $r_1$ \u5c5e\u6027\u7684\u70b9\u6709 $A$ \u4e2a\uff0c\u6ee1\u8db3 $r_2$ \u5c5e\u6027\u7684\u70b9\u6709 $B$ \u4e2a\u3002\n\n\u6240\u6709\u4ee5 $A$ \u4e2d\u7684\u6bcf\u4e2a\u70b9\u4e3a\u7956\u5148\u7684\u70b9\u5728 dfs \u5e8f\u4e2d\u90fd\u5bf9\u5e94\u4e00\u6bb5\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u6c42\u6bcf\u4e2a $B$ \u4e2d\u7684\u70b9\u88ab\u591a\u5c11\u4e2a\u533a\u95f4\u5305\u542b\u4e86\u3002\n\n\u8bbe\u4e00\u4e2a\u9608\u503c $C$\uff0c\u7136\u540e\u5206 $A,B$ \u7684\u5927\u5c0f\u8ba8\u8bba\uff1a\n\n1. $B\\ge C\\land A< C$ \u65f6 \uff0c\u679a\u4e3e $A$\uff0c\u5728 $B$ \u5c5e\u6027\u7684 vector \u91cc\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(A\\log B)$\u3002\n\n1. $A\\ge C\\land B< C$ \u65f6 \uff0c\u679a\u4e3e $B$\uff0c\u5728 dfs \u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u5f53\u524d\u70b9\u5230\u6839\u7684\u94fe\u4e0a\u5404\u4e2a\u5c5e\u6027\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5b9e\u9645\u4e0a\u662f\u4e2a\u6b27\u62c9\u5e8f\u7684\u6837\u5b50\uff08\u89c1\u4ee3\u7801\uff09\uff0c\u4e5f\u4e00\u6837\u53ef\u4ee5\u5728 vector\u91cc\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(B\\log A)$\u3002\n\n1. $A< C \\land B< C$ \u65f6\uff0c\u548c2.\u4e00\u6837\u505a\uff0c\u4e0d\u8fc7\u4e8c\u5206\u6362\u6210\u53cc\u6307\u9488\u5c31\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(A+B)$\u3002\n\n1. $A\\ge C \\land B\\ge C$ \u65f6\uff0c\u548c3.\u4e00\u6837\u505a\uff0c\u6ce8\u610f\u5230\u4e0d\u540c\u7684 $A,B$ \u51fa\u73b0\u6b21\u6570\u4e0d\u591a\uff0c\u8bb0\u5fc6\u5316\u4e00\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u9ad8 $O(nC)$\u3002\n\n$C$ \u5728\u53d6 $\\sqrt{n\\log n}$ \u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u6700\u5c0f\uff1a $O(n\\sqrt{n\\log n})$ \u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define PI pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define ui unsigned int\nusing namespace std;\nconst int N=200010,R=25010;\nint id[N],a[N],n,m,q;\nvector<int> to[N];\nstruct d{\n\tvector<int> id;\n\tvector<PI> ranges;\n\tint dep;\n}qwq[R];\nint dfs_num,dfn[N];\nvoid dfs(int u){\n\tdfn[u]=++dfs_num;\n\tqwq[a[u]].dep++;\n\tqwq[a[u]].id.push_back(dfs_num-1);\n\tqwq[a[u]].ranges.push_back(mp(dfs_num,qwq[a[u]].dep));\n\tfor(auto i:to[u])dfs(i);\n\tqwq[a[u]].dep--;\n\tqwq[a[u]].ranges.push_back(mp(dfs_num,qwq[a[u]].dep));\n}\nll query1(d x,d y){\n\tll sum=0;\n\tfor(auto i:y.id){\n\t\tvector<PI>::iterator it=lower_bound(x.ranges.begin(),x.ranges.end(),mp(i,n+1));\n\t\tif(it==x.ranges.begin())continue;\n\t\tit--;\n\t\tsum+=(*it).se;\n\t}\n\treturn sum;\n}\nll query2(d x,d y){\n\tll sum=0;\n\tfor(ui i=0;i+1<x.ranges.size();i++){\n\t\tint pos1=x.ranges[i].fi,pos2=x.ranges[i+1].fi,dep=x.ranges[i].se;\n\t\tvector<int>::iterator q1=lower_bound(y.id.begin(),y.id.end(),pos1);\n\t\tvector<int>::iterator q2=lower_bound(y.id.begin(),y.id.end(),pos2);\n\t\tsum+=dep*1ll*(q2-q1);\n\t}\n\treturn sum;\n}\nll query3(d x,d y){\n\tll sum=0;\n\tvector<int>::iterator it=y.id.begin();\n\tif(x.ranges.empty())return 0;\n\twhile(it!=y.id.end()&&(*it)<(*x.ranges.begin()).fi)it++;\n\tfor(ui i=0;i+1<x.ranges.size()&&it!=y.id.end();i++){\n\t\tint pos=x.ranges[i+1].fi,dep=x.ranges[i].se;\n\t\twhile(it!=y.id.end()&&(*it)<pos)it++,sum+=dep;\n\t}\n\treturn sum;\n}\nmap<PI,ll> ans;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tint K=sqrt(n*log2(n)*2);\n\tscanf(\"%d\",&a[1]);\n\tint fa;\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d%d\",&fa,&a[i]);\n\t\tto[fa].push_back(i);\n\t}\n\tdfs(1);\n\tfor(int i=1;i<=q;i++){\n\t\tint r1,r2;\n\t\tscanf(\"%d%d\",&r1,&r2);\n\t\tif(ans[mp(r1,r2)]){\n\t\t\t\n\t\t}\n\t\telse if(qwq[r1].id.size()>=K&&qwq[r2].id.size()<K){\n\t\t\tans[mp(r1,r2)]=query1(qwq[r1],qwq[r2])+1;\n\t\t}\n\t\telse if(qwq[r1].id.size()<K&&qwq[r2].id.size()>=K){\n\t\t\tans[mp(r1,r2)]=query2(qwq[r1],qwq[r2])+1;\n\t\t}\n\t\telse{\n\t\t\tans[mp(r1,r2)]=query3(qwq[r1],qwq[r2])+1;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans[mp(r1,r2)]-1);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1642472197,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "P5901"
    },
    {
        "content": "> [P5901 [IOI2009] Regions](https://www.luogu.com.cn/problem/P5901)\n\n\u540c\u65f6\u6d89\u53ca\u4e24\u4e2a\u96c6\u5408\u7684\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u6027\u8d28\uff0c\u57fa\u672c\u4e0a\u4e0d\u80fd $\\mathrm{polylog}$\uff1a\u6bcf\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u4e3a $\\sqrt n$\uff0c\u8be2\u95ee\u6bcf\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u7684\u7b54\u6848\uff0c\u81f3\u5c11\u4e5f\u5f97 $\\mathcal{O}(n\\sqrt n)$\u3002\n\n\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u79f0\u5927\u5c0f\u5927\u4e8e $\\sqrt n$ \u7684\u96c6\u5408\u4e3a\u5927\u96c6\u5408\uff0c\u5176\u5b83\u96c6\u5408\u4e3a\u5c0f\u96c6\u5408\u3002\n\n\u5f53 $r_1$ \u4e3a\u5927\u96c6\u5408\u65f6\uff0c\u8003\u8651\u9884\u5904\u7406\u6240\u6709\u8fd9\u6837\u7684\u8be2\u95ee\u7684\u7b54\u6848\u3002\u5bf9\u6bcf\u4e2a\u5927\u96c6\u5408 $r_1$\uff0c\u96c6\u5408 $r_2$ \u7684\u7b54\u6848\u4e3a $\\sum_{i\\in r_2} c_i$\uff0c\u5176\u4e2d $c_i$ \u8868\u793a\u96c6\u5408 $r_1$ \u4e2d $i$ \u7684\u7956\u5148\u7684\u6570\u91cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n)$\u3002\u56e0\u4e3a\u6709\u4e0d\u8d85\u8fc7 $\\sqrt n$ \u4e2a\u5927\u96c6\u5408\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt n)$\u3002\n\n\u5f53 $r_2$ \u4e3a\u5927\u96c6\u5408\u65f6\uff0c\u540c\u6837\u7684\uff0c\u9884\u5904\u7406\u6240\u6709\u8fd9\u6837\u7684\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u53ea\u9700\u8981\u5c06 $c_i$ \u7684\u5b9a\u4e49\u6539\u4e3a\u96c6\u5408 $r_2$ \u4e2d $i$ \u7684\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u5f53 $r_1, r_2$ \u5747\u4e3a\u5c0f\u96c6\u5408\u65f6\uff0c\u603b\u5171\u53ea\u4f1a\u6d89\u53ca\u5230 $\\mathcal{O}(\\sqrt n)$ \u4e2a\u70b9\u3002$r_1$ \u7684\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u65f6\u95f4\u6233\u533a\u95f4\uff0c$r_2$ \u7684\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u6bcf\u4e2a\u65f6\u95f4\u6233\u843d\u5728\u6bcf\u4e2a\u65f6\u95f4\u6233\u533a\u95f4\u90fd\u4f1a\u4ea7\u751f $1$ \u7684\u8d21\u732e\u3002\u76f8\u5f53\u4e8e\u5148\u8fdb\u884c\u82e5\u5e72\u6b21\u533a\u95f4\u52a0 $1$\uff0c\u518d\u8fdb\u884c\u82e5\u5e72\u6b21\u5355\u70b9\u67e5\u8be2\u3002 \u5bf9\u5750\u6807\u533a\u95f4\u626b\u63cf\u7ebf\uff0c\u9047\u5230\u5de6\u7aef\u70b9\u5c31\u5c06\u5f53\u524d\u533a\u95f4\u6570 $+1$\uff0c\u9047\u5230\u53f3\u7aef\u70b9\u5c31\u5c06\u5f53\u524d\u533a\u95f4\u6570 $-1$\u3002\u9884\u5904\u7406\u6392\u5e8f\u5373\u53ef\u505a\u5230\u5355\u6b21 $\\mathcal{O}(\\sqrt n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + q)\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n + R\\sqrt n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nbool Mbe;\nconstexpr int N = 2e5 + 5;\nconstexpr int R = 2.5e4 + 5;\nconstexpr int B = 450;\n\nint n, r, q, h[N], rlab[N];\nint c1[B][R], c2[B][R];\nint dn, fa[N], sz[N], dfn[N];\nvector<int> e[N], buc[N], eve[N];\nvoid dfs(int id) {\n  dfn[id] = ++dn, sz[id] = 1;\n  for(int it : e[id]) dfs(it), sz[id] += sz[it];\n}\n\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin); \n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n >> r >> q;\n  for(int i = 1; i <= n; i++) {\n    if(i > 1) cin >> fa[i], e[fa[i]].push_back(i);\n    cin >> h[i], buc[h[i]].push_back(i);\n  }\n  dfs(1);\n  for(int i = 1, c = 0; i <= r; i++)\n    if(buc[i].size() >= B) {\n      static int d[N];\n      memset(d, 0, sizeof(d)), rlab[i] = ++c;\n      for(int it : buc[i]) d[dfn[it]]++;\n      for(int j = 1; j <= n; j++) d[j] += d[j - 1];\n      for(int j = 1; j <= n; j++) {\n        if(h[j] == i) continue;\n        int l = dfn[j], r = l + sz[j] - 1;\n        c1[c][h[j]] += d[r] - d[l - 1];\n      }\n      memset(d, 0, sizeof(d));\n      for(int it : buc[i]) {\n        int l = dfn[it], r = l + sz[it] - 1;\n        d[l]++, d[r + 1]--;\n      }\n      for(int j = 1; j <= n; j++) d[j] += d[j - 1];\n      for(int j = 1; j <= n; j++) {\n        if(h[j] == i) continue;\n        c2[c][h[j]] += d[dfn[j]];\n      }\n    }\n    else {\n      for(int it : buc[i]) {\n        eve[i].push_back(dfn[it]);\n        eve[i].push_back(-(dfn[it] + sz[it]));\n      }\n      sort(eve[i].begin(), eve[i].end(), [&](int x, int y) {\n        return abs(x) < abs(y);\n      });\n      sort(buc[i].begin(), buc[i].end(), [&](int x, int y) {\n        return dfn[x] < dfn[y];\n      });\n    }\n  for(int i = 1; i <= q; i++) {\n    int r1, r2;\n    cin >> r1 >> r2;\n    if(rlab[r2]) cout << c1[rlab[r2]][r1] << endl;\n    else if(rlab[r1]) cout << c2[rlab[r1]][r2] << endl;\n    else {\n      int ans = 0, cur = 0, pt = 0;\n      for(int it : buc[r2]) {\n        while(pt < eve[r1].size()) {\n          int v = eve[r1][pt];\n          if(abs(v) > dfn[it]) break;\n          cur += v / abs(v), pt++;\n        }\n        ans += cur;\n      }\n      cout << ans << endl;\n    }\n  }\n  cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\n  return 0;\n}\n```",
        "postTime": 1678254768,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P5901 [IOI2009] Regions"
    },
    {
        "content": "\u6bcf\u79cd\u989c\u8272\u5305\u542b\u7684\u70b9\u6570\u4e0e\u603b\u989c\u8272\u6570\u76f8\u4e92\u5236\u7ea6\uff0c\u5f88\u663e\u7136\u662f\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u505a\u6cd5\u3002\n\n## \u79bb\u7ebf\n\n\u7b97\u6cd5\u4e00\uff1a\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u540c\u65f6\u7ef4\u62a4\u6839\u5230\u5f53\u524d\u70b9\u7684\u8def\u5f84\u4e0a\u6bcf\u79cd\u989c\u8272\u7684\u4e2a\u6570\u3002\u8bbe\u5f53\u524d\u70b9\u989c\u8272\u4e3a $col$\uff0c\u5982\u679c $r_2=col$ \u7684\u8be2\u95ee\u6b21\u6570\u5c11\u4e8e $\\sqrt q$\uff0c\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8fd9\u6837\u7684\u8be2\u95ee\u5e76\u8ba1\u5165\u8d21\u732e\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt q)$\u3002\n\n\u7b97\u6cd5\u4e8c\uff1a\u5982\u679c $r_2=col$ \u7684\u8be2\u95ee\u6b21\u6570\u5927\u4e8e $\\sqrt q$\uff0c\u90a3\u4e48\u8fd9\u6837\u7684 $col$ \u4e0d\u8d85\u8fc7 $\\sqrt q$ \u4e2a\u3002\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u8fd9\u6837\u7684 $col$\uff0c\u5206\u522b\u7528\u4e00\u6b21 dfs \u7edf\u8ba1\u51fa\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a $col$\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt q)$\u3002\n\n\u4e24\u79cd\u7b97\u6cd5\u7efc\u5408\u5373\u53ef\u56de\u7b54\u6240\u6709\u8be2\u95ee\u3002\u603b\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt q)$\u3002\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,T,r,q,app[200005],color[200005],ans[200005];\nvector<int>edge[200005];\npair<int,int>Q[200005];\nnamespace task1{\n\tint cnt[25005];\n\tvector<int>hang[25005];\n\tvoid dfs1(int id){\n\t\tcnt[color[id]]++;\n\t\tfor(int v:hang[color[id]])ans[v]+=cnt[Q[v].first];\n\t\tfor(int v:edge[id])dfs1(v);\n\t\tcnt[color[id]]--;\n\t}\n}\nnamespace task2{\n\tint cnt[25005],timer;\n\tvector<int>hang[25005];\n\tvoid dfs2(int id,int targ){\n\t\tint lst=timer;\n\t\tfor(int v:edge[id])dfs2(v,targ);\n\t\tif(color[id]==targ)timer++;\n\t\tcnt[color[id]]+=timer-lst;\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&r,&q,&color[1]);\n\tT=ceil(sqrt(q));\n\tfor(int i=2,tmp;i<=n;i++){\n\t\tscanf(\"%d\",&tmp);\n\t\tedge[tmp].emplace_back(i);\n\t\tscanf(\"%d\",&color[i]);\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d\",&Q[i].first,&Q[i].second);\n\t\tapp[Q[i].second]++;\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tif(app[Q[i].second]<=T)\n\t\ttask1::hang[Q[i].second].emplace_back(i);\n\t\telse task2::hang[Q[i].second].emplace_back(i);\n\t}task1::dfs1(1);\n\tfor(int i=1;i<=r;i++)if(app[i]>T){\n\t\ttask2::dfs2(1,i);\n\t\tfor(int v:task2::hang[i])ans[v]+=task2::cnt[Q[v].first];\n\t\tmemset(task2::cnt,0,sizeof(task2::cnt));\n\t}\n\tfor(int i=1;i<=q;i++)printf(\"%d\\n\",ans[i]);return 0;\n}\n```\n\n\n## \u5728\u7ebf\n\n\u4e3a\u65b9\u4fbf\uff0c\u4ee5\u4e0b\u79f0\u5305\u542b\u70b9\u6570\u5927\u4e8e $\\sqrt n$ \u7684\u989c\u8272\u4e3a\u201c\u91cd\u989c\u8272\u201d\uff0c\u53cd\u4e4b\u4e3a\u201c\u8f7b\u989c\u8272\u201d\u3002\n\n\u7b97\u6cd5\u4e00\uff08$r_2$ \u4e3a\u91cd\u989c\u8272\uff09\uff1a\u53ef\u4ee5\u7528\u7c7b\u4f3c\u79bb\u7ebf\u7b97\u6cd5\u4e8c\u7684\u65b9\u6cd5\u89e3\u51b3\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684 $r_2$ \u4e0d\u8d85\u8fc7 $\\sqrt n$ \u4e2a\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt n)$\u3002\n\n\u7b97\u6cd5\u4e8c\uff08$r_1$ \u4e3a\u91cd\u989c\u8272\uff0c$r_2$ \u4e3a\u8f7b\u989c\u8272\uff09\uff1a$r_1$ \u662f $r_2$ \u7684\u7956\u5148\u76f8\u5f53\u4e8e $r_2$ \u5728 $r_1$ \u7684 dfs \u5e8f\u5b50\u6811\u533a\u95f4\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u7ed9\u51fa $r_1$ \u7684\u6240\u6709\u5b50\u6811\u533a\u95f4\u548c $r_2$ \u7684\u6240\u6709\u70b9\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u88ab\u591a\u5c11\u4e2a\u533a\u95f4\u5305\u542b\uff0c\u518d\u6c42\u548c\u3002\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u91cd\u989c\u8272 $r_1$\uff0c\u7528\u5dee\u5206\u7684\u65b9\u5f0f\u63d2\u5165\u5176\u6240\u6709\u5b50\u6811\u533a\u95f4\uff0c\u518d\u524d\u7f00\u548c\u4e00\u4e0b\u5373\u53ef\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt n)$\u3002\n\n\u7b97\u6cd5\u4e09\uff08$r_1,r_2$ \u90fd\u662f\u8f7b\u989c\u8272\uff09\uff1a\u672c\u6b21\u8be2\u95ee\u603b\u5171\u6d89\u53ca\u5230\u7684\u70b9\u6570\u4e3a $\\mathbb O(\\sqrt n)$ \u7ea7\u522b\uff0c\u76f4\u63a5\u5efa\u51fa\u865a\u6811\u7136\u540e\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\u3002\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt n)$\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathbb O(n\\sqrt n)$\u3002\n\n\u7b97\u6cd5\u4e09\u7684\u5e38\u6570\u975e\u5e38\u5927\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u4f18\u5316\uff1a\n\n- \u5bf9\u5173\u952e\u70b9\u6392\u5e8f\u4e0d\u8981\u76f4\u63a5 sort\u3002\u53ef\u4ee5\u5bf9\u6bcf\u79cd\u989c\u8272\u7684\u70b9\u9884\u5148\u6392\u5e8f\u4e00\u6b21\uff0c\u8be2\u95ee\u7684\u65f6\u5019\u5bf9 $r_1,r_2$ \u7684\u70b9\u5f52\u5e76\u6392\u5e8f\uff0c\u53bb\u6389 $\\log$\u3002\n\n- \u5efa\u865a\u6811\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u786e\u5b9a\u7236\u4eb2\u7684\u70b9\u7684\u5b50\u6811\u4e0d\u4f1a\u518d\u53d1\u751f\u53d8\u5316\u3002\u56e0\u6b64\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a $cnt$\uff0c\u8868\u793a\u5f53\u524d\u5176\u5b50\u6811\u5185 $r_2$ \u7684\u6570\u91cf\u3002\u4e0e\u513f\u5b50 $v$ \u8fde\u8fb9\u65f6\uff0c\u66f4\u65b0\u81ea\u5df1\u7684 $cnt$\uff0c\u540c\u65f6 $v$ \u7684\u5b50\u6811\u5df2\u7ecf\u5b8c\u5168\u786e\u5b9a\uff0c\u5982\u679c $v$ \u7684\u989c\u8272\u4e3a $r_1$\uff0c\u5c06 $cnt[v]$ \u52a0\u5165\u7b54\u6848\u3002\u8fd9\u6837\u751a\u81f3\u6839\u672c\u4e0d\u9700\u8981\u5efa\u8fb9\uff0c\u6548\u679c\u663e\u8457\u3002\n\nCode\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int lim=160;\nint n,r,q,T,color[200005],mp[25003],flag;\nvector<int>edge[200005],b[25003];\nnamespace LCA{\n\tint depth[200005],dfn[200005],sz[200005],lg[400005],st[400005][20],timer,in[200005];\n\tvoid DFS(int id,int from){\n\t\tdepth[id]=depth[from]+(sz[id]=1);\n\t\tst[in[id]=++timer][0]=id;\n\t\tdfn[id]=++dfn[0];\n\t\tfor(int v:edge[id])\n\t\tDFS(v,id),sz[st[++timer][0]=id]+=sz[v];\n\t}\n\tinline void ST(){\n\t\tlg[0]=-1;\n\t\tfor(int i=1;i<=timer;i++)lg[i]=lg[i>>1]+1;\n\t\tfor(int len=1;len<=lg[timer];len++)\n\t\tfor(int i=1;i+(1<<len)-1<=timer;i++){\n\t\t\tint a=st[i][len-1],b=st[i+(1<<(len-1))][len-1];\n\t\t\tst[i][len]=(depth[a]<depth[b]?a:b);\n\t\t}\n\t}\n\tinline int lca(int u,int v){\n\t\tu=in[u],v=in[v];\n\t\tif(u>v)swap(u,v);\n\t\tint len=lg[v-u+1],a=st[u][len],b=st[v-(1<<len)+1][len];\n\t\treturn (depth[a]<depth[b]?a:b);\n\t}\n}using namespace LCA;\nnamespace task1{\n\tint ans[lim+3][25003],cnt[lim+3],lst[lim+3];\n\tvoid dfs(int id){\n\t\tfor(int i=1;i<=flag;i++)ans[i][color[id]]-=cnt[i];\n\t\tfor(int v:edge[id])dfs(v);\n\t\tcnt[mp[color[id]]]++;\n\t\tfor(int i=1;i<=flag;i++)ans[i][color[id]]+=cnt[i]-lst[i];\n\t}\n}\nnamespace task2{\n\tint sum[200005],ans[lim+3][25005];\n\tinline void init(){\n\t\tfor(int i=1;i<=r;i++)if(mp[i]){\n\t\t\tmemset(sum,0,sizeof(sum));\n\t\t\tfor(int v:b[i])sum[dfn[v]]++,sum[dfn[v]+sz[v]]--;\n\t\t\tfor(int j=1;j<=n;j++)sum[j]+=sum[j-1];\n\t\t\tfor(int j=1;j<=n;j++)ans[mp[i]][color[j]]+=sum[dfn[j]];\n\t\t}\n\t}\n}\nnamespace task3{\n\tint targ[200005],k,stk[200005],top,ans,cnt[200005];\n\tinline void build(int r1,int r2){\n\t\tauto add=[&](int u,int v){\n\t\t\tcnt[u]+=cnt[v];\n\t\t\tif(color[v]==r1)ans+=cnt[v];\n\t\t};\n\t\tauto clear=[&](int id){cnt[id]=(color[id]==r2);};\n\t\tk=ans=0;\n\t\tfor(int v:b[r1])targ[++k]=v;\n\t\tfor(int v:b[r2])targ[++k]=v;\n\t\tinplace_merge(targ+1,targ+b[r1].size()+1,targ+k+1,[&](int a,int b){return dfn[a]<dfn[b];});\n\t\tclear(stk[top=1]=1);\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tif(targ[i]==1)continue;\n\t\t\tint L=lca(stk[top],targ[i]);\n\t\t\tif(L!=stk[top]){\n\t\t\t\twhile(dfn[stk[top-1]]>dfn[L])\n\t\t\t\tadd(stk[top-1],stk[top]),top--;\n\t\t\t\tif(stk[top-1]!=L)\n\t\t\t\tclear(L),add(L,stk[top]),stk[top]=L;\n\t\t\t\telse add(L,stk[top--]);\n\t\t\t}clear(stk[++top]=targ[i]);\n\t\t}\n\t\twhile(top>1)add(stk[top-1],stk[top]),top--;\n\t\tadd(0,1),printf(\"%d\\n\",ans);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&r,&q,&color[1]);\n\tT=ceil(sqrt(n));\n\tfor(int i=2,tmp;i<=n;i++){\n\t\tscanf(\"%d\",&tmp);\n\t\tedge[tmp].emplace_back(i);\n\t\tscanf(\"%d\",&color[i]);\n\t}DFS(1,0),ST();\n\tfor(int i=1;i<=n;i++)b[color[i]].emplace_back(i);\n\tfor(int i=1;i<=r;i++)\n\tsort(b[i].begin(),b[i].end(),[&](int a,int b){return dfn[a]<dfn[b];});\n\tfor(int i=1;i<=r;i++)if(b[i].size()>T)mp[i]=++flag;\n\ttask1::dfs(1),task2::init();\n\twhile(q--){\n\t\tint r1,r2;\n\t\tscanf(\"%d%d\",&r1,&r2);\n\t\tif(mp[r2])printf(\"%d\\n\",task1::ans[mp[r2]][r1]);\n\t\telse if(mp[r1])printf(\"%d\\n\",task2::ans[mp[r1]][r2]);\n\t\telse task3::build(r1,r2);\n\t}return 0;\n}\n```\n",
        "postTime": 1672148553,
        "uid": 148226,
        "name": "Fan_sheng",
        "ccfLevel": 6,
        "title": "P5901 [IOI2009] regions"
    },
    {
        "content": "\u9898\u76ee\u610f\u601d\u5f88\u6e05\u695a\u4e0d\u7528\u8bf4\u3002\n\n\u770b\u5230\u6bcf\u4e2a\u70b9\u90fd\u6709\u989c\u8272\uff0c\u7136\u540e\u8be2\u95ee\u548c\u989c\u8272\u7684\u79cd\u7c7b\u6709\u5173\uff0c\u65f6\u9650\u5f00\u4e86\u5f88\u3010\u3011\u7684 8s\uff0c\u5c31\u53ef\u4ee5\u5f80\u6839\u53f7\u5206\u6cbb\u65b9\u9762\u60f3\u4e86\u3002\n\n\u6309\u7167\u5e38\u7406\uff0c\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a $B$\uff0c\u6240\u6709\u989c\u8272\u4e3a $i$ \u7684\u70b9\u7684\u96c6\u5408\u4e3a $col_i$\u3002\n\n\u5982\u679c $|col_x| \\le B$ \u4e14 $|col_y|<B$\uff0c\u5219\u4ed6\u4eec\u90fd\u662f\u5c0f\u5757\uff0c\u53ef\u4ee5\u76f4\u63a5\u5efa\u7acb\u51fa\u865a\u6811\u66b4\u529b\u8dd1\uff0c\u5355\u6b21\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{n})$\u3002\n\n\u5982\u679c $|col_x| > B$ \u4e14 $|col_y| \\le B$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u9884\u5904\u7406\u3002\u5bf9\u4e8e\u6240\u6709\u7684\u5927\u5757\uff08\u8bbe\u5176\u989c\u8272\u4e3a $c$\uff09\uff0c\u6211\u4eec\u5904\u7406\u5904\u5176 $up$ \u6570\u7ec4\uff0c$up_i$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u8282\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u4e0a\uff0c\u6709\u591a\u5c11\u4e2a\u989c\u8272\u4e3a $c$ \u7684\u8282\u70b9\uff0c\u7136\u540e\u5728\u8be2\u95ee\u7684\u65f6\u5019\u76f4\u63a5\u8ba1\u7b97 $\\sum\\limits_{v \\in col_y}up_v$ \u5373\u53ef\u3002\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\uff0c\u5355\u6b21\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{n})$\u3002\n\n\u540c\u7406\uff0c\u5982\u679c $|col_x| \\le B$ \u4e14 $|col_y| > B$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406 $dw_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u7684\u989c\u8272\u4e3a $c$\uff0c\u8be2\u95ee\u65f6\u8ba1\u7b97 $\\sum\\limits_{v \\in col_x}dw_v$\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u4e0a\u3002\n\n\u6700\u540e\uff0c\u5982\u679c $|col_x| > B$ \u4e14 $|col_y| > B$\uff0c\u90a3\u4e48\u548c\u5c0f\u5757\u5bf9\u5c0f\u5757\u4e00\u6837\uff0c\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u5927\u5757\u5bf9\u5efa\u51fa\u865a\u6811\u7b97\u4e00\u904d\u7b54\u6848\uff0c\u8be2\u95ee\u65f6\u76f4\u63a5\u8c03\u7528\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\u3002\n\n---\n\n\u4e0a\u8ff0\u5168\u90e8\u4e3a\u53e3\u80e1\uff0c\u5982\u679c\u5b9e\u73b0\u4e0d\u7cbe\u7ec6\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u5199\u6210 $O(n\\sqrt{nlogn})$ \u4e14\u5e38\u6570\u5de8\u5927\uff0c\u5bfc\u81f4\u4f60\u53ef\u80fd\u53ea\u6709 60pts \u7684\u597d\u6210\u7ee9\u3002\n\n---\n\n1. \u666e\u901a\u7684\u500d\u589eLCA\u7684\u8be2\u95ee\u662f $O(logn)$ \u7684\uff0c\u6211\u4eec\u8981\u7528 ST \u8868\u505a\u5230 $O(nlogn)$ \u9884\u5904\u7406\uff0c$O(1)$ \u6c42 LCA\u3002\n\n2. \u5728\u5efa\u7acb\u865a\u6811\u7684\u65f6\u5019\uff0c\u6709\u4e00\u6b65\u8981\u5bf9\u6240\u6709\u70b9\u6309\u7167 dfs \u5e8f\u6392\u5e8f\u3002\u5982\u679c\u4e0d\u60f3\u5199\u57fa\u6570\u6392\u5e8f\u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u5728\u8be2\u95ee\u524d\u5148\u5bf9\u6bcf\u4e2a $col_i$ \u4e2d\u7684\u5143\u7d20\u5148\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5728\u8be2\u95ee\u7684\u65f6\u5019\u7528\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u6cd5 merge \u4e24\u4e2a\u6709\u5e8f\u7684 $col_x$ \u548c $col_y$\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a $logn$ \u780d\u6389\u4e86\u3002\n\n---\n\n\u73b0\u5728\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u964d\u5230\u4e86\u6b63\u597d\u7684 $O(n\\sqrt{n})$\uff0c\u4f46\u662f\u5de8\u5927\u7684\u5e38\u6570\u4ecd\u8ba9\u4f60\u5728 94pts \u548c 97pts \u4e4b\u95f4\u5f98\u5f8a\u3002\n\n\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\uff1a\n\n1. \u52a0\u5165\u5feb\u8bfb\u5feb\u8f93\n\n2. \u5c0f\u5bf9\u5c0f\u548c\u5927\u5bf9\u5927\u4e2d\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\u7684dfs\u770b\u8d77\u6765\u5f88\u7d2f\u8d58\uff0c\u90a3\u4e48\u77ed\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u60f3\u529e\u6cd5\u628a\u8fd9\u4e00\u6b65\u653e\u5165\u5efa\u7acb\u865a\u6811\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u907f\u514d\u5b58\u865a\u6811\u7684\u8fb9\uff0c\u4ece\u800c\u5927\u5e45\u51cf\u5c0f\u5e38\u6570\uff08\u611f\u8c22 [w23c3c3](https://www.luogu.com.cn/user/109942) \u7684\u6307\u5bfc\uff09\n\n\u7136\u540e\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\u3002\n\n---\n\nTalk is cheap, show me the code.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define mp make_pair\n#define reg register\nconst int maxn=10005;        //\u5f88\u597d\u7684\u5feb\u8bfb\u677f\u5b50\nchar buffer[maxn],*S,*T;\ninline char Get_Char(){\n    if(S==T){\n        T=(S=buffer)+fread(buffer,1,maxn,stdin);\n        if(S==T)return EOF;\n    }\n    return *S++;\n}\ninline int read(){\n    reg char c;\n    reg int re=0,f=0;\n    for(c=Get_Char();c<'0' or c>'9';c=Get_Char())if(c=='-')f=1;\n    for(;c>='0' and c<='9';)re=(re<<1)+(re<<3)+(c-'0'),c=Get_Char();\n    if(f)return -re;\n    return re;\n}\ninline void read(int&x){\n    reg char c;\n    reg int re=0,f=0;\n    for(c=Get_Char();c<'0' or c>'9';c=Get_Char())if(c=='-')f=1;\n    for(;c>='0' and c<='9';)re=(re<<1)+(re<<3)+(c-'0'),c=Get_Char();\n    if(f)x=-re;\n    else x=re;\n}\ninline void read(ll&x){\n    reg char c;\n    reg ll re=0,f=0;\n    for(c=Get_Char();c<'0' or c>'9';c=Get_Char())if(c=='-')f=1;\n    for(;c>='0' and c<='9';)re=(re<<1)+(re<<3)+(c-'0'),c=Get_Char();\n    if(f)x=-re;\n    else x=re;\n}\ninline void print(int x){\n\tif(x<10){\n\t\tputchar(x+'0');\n\t\treturn;\n\t}\n\tprint(x/10);\n\tputchar(x%10+'0');\n}\nconst int mxn=2e5+5;\nvector<int>g[mxn];\nint n,R,q,r[mxn];\nint dep[mxn*2];\nint ord[mxn*2],cco,cord[mxn*2];\nint mi[mxn*2][22];\nint lg[mxn*2],co;\nint st[mxn*2],ed[mxn*2];\ninline void dfs(int x,int par=0,int deep=1){\n\tcord[++cco]=x;\n\tst[x]=cco;ed[x]=cco;\n\tdep[x]=deep;ord[x]=++co;\n\tfor(int y:g[x]){\n\t\tif(par==y)continue;\n\t\tdfs(y,x,deep+1);\n\t\tcord[++cco]=x;\n\t\ted[x]=cco;\n\t}\n}\ninline void init(){     //\u9884\u5904\u7406ST\u8868\n\tlg[1]=0;\n\tfor(int i=2;i<mxn*2;++i)lg[i]=lg[i>>1]+1;\n\tfor(int i=1;i<=cco;++i)mi[i][0]=cord[i];\n\tfor(int k=1;k<22;++k){\n\t\tfor(int i=1;i<=cco-(1<<k)+1;++i){\n\t\t\tint x=mi[i][k-1],y=mi[i+(1<<(k-1))][k-1];\n\t\t\tif(dep[x]<dep[y])mi[i][k]=x;\n\t\t\telse mi[i][k]=y;\n\t\t}\n\t}\n}\ninline int lca(int x,int y){\n\tint fx=st[x],fy=ed[y];\n\tif(fx>fy)swap(fx,fy);\n\tint ax=mi[fx][lg[fy-fx]],ay=mi[fy-(1<<lg[fy-fx])+1][lg[fy-fx]];\n\tif(dep[ax]<dep[ay])return ax;\n\telse return ay;\n} \ninline bool cmp(int x,int y){return ord[x]<ord[y];}\nint sta[mxn],top=0;\nint sz[mxn];\nint up[404][mxn],dw[404][mxn];\ninline vector<int>mer(vector<int>x,vector<int>y){  //\u7c7b\u4f3c\u5f52\u5e76\u7684\u64cd\u4f5c\n\tvector<int>rt;rt.clear();\n\tint i=0,j=0;\n\tfor(;i<x.size() and j<y.size();)\n\t\tif(cmp(x[i],y[j]))rt.push_back(x[i]),++i;\n\t\telse rt.push_back(y[j]),++j;\n\tfor(;i<x.size();++i)rt.push_back(x[i]);\n\tfor(;j<y.size();++j)rt.push_back(y[j]);\n\treturn rt;\n}\ninline void gen(vector<int>v,int y){  //\u5efa\u7acb\u865a\u6811\n\ttop=0;\n\tsta[++top]=1;\n\tsz[1]=r[1]==y;\n\tfor(int i:v){\n\t\tif(i!=1){\n\t\t\tint l=lca(sta[top],i);\n\t\t\tif(l!=sta[top]){\n\t\t\t\tfor(;ord[l]<ord[sta[top-1]];)sz[sta[top-1]]+=sz[sta[top]],--top;\n\t\t\t\tif(ord[l]>ord[sta[top-1]]){\n\t\t\t\t\tsz[l]=r[l]==y;\n\t\t\t\t\tsz[l]+=sz[sta[top]];\n\t\t\t\t\tsta[top]=l;\n\t\t\t\t}else sz[l]+=sz[sta[top]],top--;\n\t\t\t}\n\t\t\tsz[i]=r[i]==y;\n\t\t\tsta[++top]=i;\t\n\t\t}\n\t}\n\tfor(int i=top-1;i>=1;--i)sz[sta[i]]+=sz[sta[i+1]];\n}\nvector<int>col[mxn];\nvector<int>hea;\nint ans[404][404];\nint id[mxn];\n//inline void getans(int x,int fa,int cl){//on ng[]    //\u539f\u6765\u7684\u66b4\u529b\u7edf\u8ba1\u5c0f\u5bf9\u5c0f\u548c\u5927\u5bf9\u5927\u7684\u7b54\u6848\n//\tif(r[x]==cl)sz[x]=1;\n//\telse sz[x]=0;\n//\tfor(int y:ng[x])if(y!=fa)getans(y,x,cl),sz[x]+=sz[y];\n//}\ninline void prep(int x,int fa,int cl,int flg=0){   //\u9884\u5904\u7406\u5c0f\u5bf9\u5927\u548c\u5927\u5bf9\u5c0f\u7684up\u548cdw\u6570\u7ec4\n\tif(r[x]==hea[cl])dw[cl][x]=1,++flg;\n\tup[cl][x]=flg;\n\tfor(int y:g[x])if(y!=fa){\n\t\tprep(y,x,cl,flg);\n\t\tdw[cl][x]+=dw[cl][y];\n\t}\n}\ninline void solve(){\n\tmemset(id,-1,sizeof(id));\n\tread(n),read(R),read(q);\n\tread(r[1]);col[r[1]].push_back(1);\n\tfor(int i=2;i<=n;++i){\n\t\tint x;read(x),read(r[i]);\n\t\tg[x].push_back(i);\n\t\tg[i].push_back(x);\n\t\tcol[r[i]].push_back(i);\n\t}\n\tdfs(1);\n\tinit();\n\tint bound=500;\n\tfor(int i=1;i<=R;++i)if(col[i].size()>=bound)hea.push_back(i);  //\u8fd9\u91cc\u6211\u7684B\u5b9a\u4e3a\u4e86500\n\tfor(int i=0;i<hea.size();++i)id[hea[i]]=i;\n\tfor(int i=1;i<=n;++i)sort(col[i].begin(),col[i].end(),cmp);\n\tfor(int i=0;i<hea.size();++i)for(int j=0;j<hea.size();++j)if(i!=j){\n\t\tgen(mer(col[hea[i]],col[hea[j]]),hea[j]);\n//\t\tgetans(1,0,hea[j]);\n\t\tll res=0;\n\t\tfor(int f:col[hea[i]])res+=sz[f];\n\t\tans[i][j]=res;\n\t}\n\tfor(int i=0;i<hea.size();++i)prep(1,0,i);\n\tfor(;q--;){\n\t\tint x,y;read(x),read(y);\n\t\tif(~id[x] and ~id[y])print(ans[id[x]][id[y]]),putchar('\\n');\n\t\telse if(~id[x] and id[y]==-1){\n\t\t\tll res=0;\n\t\t\tfor(int i:col[y])res+=up[id[x]][i];\n\t\t\tprint(res),putchar('\\n');\n\t\t}else if(id[x]==-1 and ~id[y]){\n\t\t\tll res=0;\n\t\t\tfor(int i:col[x])res+=dw[id[y]][i];\n\t\t\tprint(res),putchar('\\n');\n\t\t}else{\n\t\t\tgen(mer(col[x],col[y]),y);\n//\t\t\tgetans(1,0,y);\n\t\t\tll res=0;\n\t\t\tfor(int f:col[x])res+=sz[f];\n\t\t\tprint(res),putchar('\\n');\n\t\t}\n\t}\n}\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tint T=1;\n\t//cin>>T;\n\tfor(;T--;)solve();\n\treturn 0;\n}\n```",
        "postTime": 1658409288,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "\u81f3\u4eca\u6211\u4eec\u4ecd\u4e0d\u77e5\u9053\u8fd9\u9898\u662f\u600e\u4e48\u5361\u8fc7\u7684"
    }
]