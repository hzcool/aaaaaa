[
    {
        "content": "# \u601d\u8def\n\n\n\u4e00\u4e2a\u6b63\u65b9\u5f62\u53ef\u4ee5\u7531\u5de6\u4e0a\u89d2\u5750\u6807\u548c\u8fb9\u957f\u786e\u5b9a\uff0c\u53ea\u8981\u679a\u4e3e\u6240\u6709\u6b63\u65b9\u5f62\u5c31\u80fd\u627e\u5230\u7b54\u6848\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6=\u679a\u4e3e\u5de6\u4e0a\u89d2\u5750\u6807\u7684\u65f6\u95f4\\*\u679a\u4e3e\u8fb9\u957f\u7684\u65f6\u95f4\\*\u7edf\u8ba1\u6b63\u65b9\u5f62\u5185\u7684\u8349\u573a\u7684\u65f6\u95f4\u3002\u539f\u9898$N\\le500$\uff0c\u5b9e\u9645\u4e0a$O(N^3)$\u5c31\u80fd\u8fc7\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u505a\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u5e76\u4e8c\u5206\u679a\u4e3e\u8fb9\u957f\uff0c\u5e76\u7528\u5355\u8c03\u6027\u5728$O(N^2)$\u7684\u65f6\u95f4\u5185\u5224\u65ad\uff0c\u603b\u7684\u590d\u6742\u5ea6\u662f$O(N^2\\log N)$\u7684\u3002\u4f46\u662f\u6211\u4e00\u5f00\u59cb\u4e24\u6b21\u4e8c\u5206\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6$O(N^2\\log^2N)$\uff0c\u975e\u5e38\u6162\u3002\n\n\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u53ef\u4ee5\u505a\u5230\u66f4\u5feb\u7684\u3002\u4e8c\u5206\u4ecd\u7136\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u800c\u5224\u5b9a\u6027\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u6210`USACO14MAR The Lazy Cow`(\u61d2\u60f0\u7684\u725b)\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6709\u81f3\u5c11\u4e00\u4e2a\u65b9\u683c\u88ab\u4ee5\u8349\u573a\u4e3a\u4e00\u89d2\u7684\u6b63\u65b9\u5f62\u8986\u76d6\u4e86\u8fbe\u5230$C$\u6b21\u5c31\u7b26\u5408\u8981\u6c42\u4e86\u3002\u800c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf+\u7ebf\u6bb5\u6811\u5728$O(N\\log N)$\u5185\u89e3\u51b3\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(N\\log^2N)$\u3002\u5b98\u65b9\u9898\u89e3\u4e2d\u5e76\u6ca1\u6709\u7ed9\u51fa\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u662f\u53d7\u5230\u61d2\u60f0\u7684\u725b(\u91d1\u7ec4)\u7684\u542f\u53d1\u624d\u60f3\u5230\u7684\u3002\n\n\n# \u4ee3\u7801\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 505;\nstruct clover\n{\n    int x, y;\n} a[N];\nstruct event\n{\n    int x, yl, yr, val;\n    bool operator<(const event &rhs) const\n    {\n        return x < rhs.x;\n    }\n} e[N * 2];\nint y[N * 2];\nstruct node\n{\n    int max, lazy;\n} tree[1 << 11];\n//\u6ce8\u610f\u79bb\u6563\u5316\u540e\u67092N\nvoid build(int id, int l, int r)\n{\n    tree[id].max = tree[id].lazy = 0;\n    if (l < r)\n    {\n        int mid = (l + r) / 2;\n        build(id * 2, l, mid);\n        build(id * 2 + 1, mid + 1, r);\n    }\n}\ninline void pushdown(int id, int l, int r)\n{\n    if (tree[id].lazy && l < r)\n    {\n        tree[id * 2].max += tree[id].lazy;\n        tree[id * 2].lazy += tree[id].lazy;\n        tree[id * 2 + 1].max += tree[id].lazy;\n        tree[id * 2 + 1].lazy += tree[id].lazy;\n        tree[id].lazy = 0;\n    }\n}\nvoid update(int id, int l, int r, int L, int R, int val)\n{\n    if (L <= l && R >= r)\n    {\n        tree[id].lazy += val;\n        tree[id].max += val;\n    }\n    else\n    {\n        pushdown(id, l, r);\n        int mid = (l + r) / 2;\n        if (L <= mid)\n            update(id * 2, l, mid, L, R, val);\n        if (R > mid)\n            update(id * 2 + 1, mid + 1, r, L, R, val);\n        tree[id].max = max(tree[id * 2].max, tree[id * 2 + 1].max);\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    int c, n;\n    cin >> c >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i].x >> a[i].y;\n    int l = 1, r = 1e4;\n    while (l < r)\n    {\n        int mid = (l + r) / 2, en = 0, yn = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            e[++en].x = a[i].x - mid + 1;\n            //\u4ee5\u8349\u573a\u4e3a\u53f3\u4e0b\u89d2\u7684\u6b63\u65b9\u5f62\n            y[++yn] = e[en].yl = a[i].y - mid + 1;\n            y[++yn] = e[en].yr = a[i].y;\n            e[en].val = 1;\n            e[++en].x = a[i].x + 1;\n            e[en].yl = a[i].y - mid + 1;\n            e[en].yr = a[i].y;\n            e[en].val = -1;\n        }\n        sort(e + 1, e + en + 1);\n        sort(y + 1, y + yn + 1);\n        build(1, 1, yn);\n        int now = 0;\n        for (int i = 1; i <= en; i++)\n        {\n            if (e[i].x != e[i - 1].x)\n                now = max(now, tree[1].max);\n            //\u540c\u4e00\u4e2ax\u90fd\u66f4\u65b0\u518d\u66f4\u65b0\u7b54\u6848\n            update(1, 1, yn, lower_bound(y + 1, y + yn + 1, e[i].yl) - y, lower_bound(y + 1, y + yn + 1, e[i].yr) - y, e[i].val);\n        }\n        if (now < c)\n            l = mid + 1;\n        else\n            r = mid;\n    }\n    cout << r << endl;\n    return 0;\n}\n```\n\n### \u9898\u5916\u8bdd\n\n\n\u8fd9\u9898\u867d\u7136\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u6bd4\u8f83\u5bb9\u6613\u5199\u9519\u7ec6\u8282\uff0c\u5f88\u9002\u5408\u7528\u4e8e\u51fa\u9898\u2026\u2026\u6211\u66fe\u7ecfT1\u51fa\u8fc7$N\\le3,000$\uff0c\u76f4\u63a5$O(N^2\\log N)$\u4f1a\u88ab\u5361\u5e38\uff0c\u9700\u8981\u7528\u5b98\u65b9\u7684\u795e\u5947\u4f18\u5316\u6216\u7528$O(N\\log^2N)$\u7684\u65b9\u6cd5\u3002\u5f53\u7136\uff0c\u73b0\u5728\u53ef\u4ee5$N\\le50,000$\uff0c\u4f5c\u4e3aT2\uff1f\u53e6\u5916\uff0c\u5b9e\u9645\u4e0a\\*std::lower\\_bound\\*\u786e\u5b9e\u6bd4\u8f83\u6162\uff0c\u8981\u6c42\u9ad8\u65f6\u8fd8\u662f\u81ea\u5df1\u5b9e\u73b0\u6bd4\u8f83\u597d\u3002\n\n\n\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u7684\u9898\u76ee\uff0cT3\u4e5f\u662f\u539f\u9898\uff1ahttps://zhzh2001.github.io/test/day2/\n",
        "postTime": 1509537665,
        "uid": 9406,
        "name": "zhzh2001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]\u628a\u725bCorral the Cows\u3011"
    },
    {
        "content": "\u54a6\uff0c\u6211\u7adf\u7136\u662f0ms\u8dd1\u8fc7\u7684\u6700\u4f18\u89e3\u3002\u3002\u3002\u90a3\u5c31\u53d1\u4e2a\u9898\u89e3\u603b\u7ed3\u4e00\u4e0b\u3002\n\n\u4e8c\u7ef4\u53cc\u6307\u9488\u6cd5\u7684\u5b8c\u7f8e\u7ed3\u5408\n\n\u53cc\u6307\u9488\u6cd5\u5c31\u662f\u4ee4l=1\uff0c\u4ece1\u5230n\u679a\u4e3e\u53f3\u6307\u9488r\uff0c\u7136\u540e\u59cb\u7ec8\u4fdd\u8bc1[l,r]\u7684\u533a\u95f4\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u533a\u95f4\uff0c\u4e0d\u6ee1\u8db3\u5c31\u4f7fl++\uff0c\u5e76\u6bcf\u6b21\u7528[l,r]\u66f4\u65b0\u7b54\u6848\uff08\u611f\u89c9\u5c31\u662f\u7b80\u5316\u7684\u5355\u8c03\u961f\u5217\uff09\n\n\u5982\u679c\u5750\u6807\u90fd\u662f\u4e00\u7ef4\u7684\uff0c\u6211\u4eec\u53ea\u7528\u53cc\u6307\u9488\u6cd5\u5c31\u80fd\u641e\u5b9a\uff0c\u4f46\u662f\u7531\u4e8e\u662f\u4e8c\u7ef4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u4e24\u91cd\u53cc\u6307\u9488\u6cd5\uff08\u56db\u6307\u9488\u6cd5\u3002\u3002\u3002\uff09\n\n\u5148\u4e8c\u5206\u7b54\u6848\uff0c\u5206\u522b\u7528\u53cc\u6307\u9488\u6cd5\u7ef4\u62a4\u7eb5\u5750\u6807\u548c\u6a2a\u5750\u6807\uff0c\u5177\u4f53\u8fd8\u662f\u770b\u4ee3\u7801\u5427~\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,m,nx,ny;\nstruct field\n{\n    int x,y;\n}p[510];\nint rx[510],ry[510],s[510];\nbool cmp1(field a,field b)\n{\n    return a.x<b.x;\n}\nbool cmp2(field a,field b)\n{\n    return a.y<b.y;\n}\nbool solve(int ml)\n{\n    int i,a,b,c,d,sc,sd;\n    a=b=0;\n    memset(s,0,sizeof(s));\n    while(b<n&&rx[p[b+1].x]-rx[1]+1<=ml)  s[p[++b].y]++;\n    for(;b<=n;s[p[++b].y]++)\n    {\n        while(rx[p[b].x]-rx[p[a+1].x]+1>ml)  s[p[++a].y]--;\n        c=d=sc=sd=0;\n        while(d<ny&&ry[d+1]-ry[1]+1<=ml)  sd+=s[++d];\n        for(;d<=ny;sd+=s[++d])\n        {\n            while(ry[d]-ry[c+1]+1>ml)    sc+=s[++c];\n            if(sd-sc>=m) return true;\n        }\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    int i;\n    rx[0]=ry[0]=-1;\n    for(i=1;i<=n;i++)    scanf(\"%d%d\",&p[i].x,&p[i].y);\n    sort(p+1,p+n+1,cmp2);\n    for(i=1;i<=n;i++)\n    {\n        if(p[i].y>ry[ny])    ry[++ny]=p[i].y;\n        p[i].y=ny;\n    }\n    sort(p+1,p+n+1,cmp1);\n    for(i=1;i<=n;i++)\n    {\n        if(p[i].x>rx[nx])    rx[++nx]=p[i].x;\n        p[i].x=nx;\n    }\n    int l=1,r=max(rx[nx],ry[ny]),mid;\n    while(l<r)\n    {\n        mid=l+r>>1;\n        if(solve(mid))  r=mid;\n        else    l=mid+1;\n    }\n    printf(\"%d\",r);\n    return 0;\n}\n\n```",
        "postTime": 1503059886,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]\u628a\u725bCorral the Cows\u3011"
    },
    {
        "content": "\u83dc\u9e21\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6709\u4ec0\u4e48\u4e0d\u8db3\u6b22\u8fce\u63d0\u51fa-w-\u3002\n\n\n------------\n\n## \u601d\u8def\n\u7531\u9898\u9762\u53ef\u77e5\u6211\u4eec\u8981\u6c42\u7684\u95ee\u9898\u662f\u5e73\u9762\u4e0a\u6709n\u4e2a\u70b9\uff08\u4f46\u662f\u662f\u5728\u683c\u5b50\u5185w\uff09\uff0c\u5728\u8fd9\u4e2a\u5e73\u9762\u4e0a\u5708\u51fa\u8fb9\u957f\u4e3alen\u7684\u6b63\u65b9\u5f62\u4f7f\u5f97\u6b63\u65b9\u5f62\u5185\u5305\u542bc\u4e2a\u70b9\u3002\u600e\u6837\u5708\u624d\u80fd\u4f7f\u5f97len\u6700\u5c0f\u3002\n\n\u8fd9\u9053\u9898\u76f4\u63a5\u505a\u5f88\u663e\u7136\u662f\u5f88\u96be\u505a\u7684\u3002\n\n\u90a3\u4e48\u6839\u636e\u9898\u610f\u6211\u4eec\u5f88\u5bb9\u6613\u628a\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5224\u5b9a\u95ee\u9898\uff1a\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fb9\u957flen\u7684\u6b63\u65b9\u5f62\uff0c\u5224\u65ad\u4e00\u4e0b\u8fb9\u957f\u4e3alen\u7684\u6b63\u65b9\u5f62\u5185\u5305\u4e0d\u5305\u542bc\u4e2a\u70b9\u3002\u800c\u76f4\u63a5\u679a\u4e3elen\u7684\u8bdd\uff0c\u5fc5\u7136\u4f1aT\u6389\u3002\u800c\u8fd9\u4e2a\u95ee\u9898\u5f88\u660e\u663e\u5177\u6709\u5355\u8c03\u6027\uff1a\u5373\u5927\u4e8e\u67d0\u4e2a\u503c\u7684len\u90fd\u53ef\u4ee5\u6ee1\u8db3\uff0c\u800c\u5c0f\u4e8e\u8fd9\u4e2a\u503c\u7684\u90fd\u4e0d\u6ee1\u8db3\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u89e3\u51b3\u3002\u5982\u679c\u8bb0\u70b9\u7684\u5750\u6807\u4e3a$(x,y)$\u7684\u8bdd\uff0c\u90a3\u4e48\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u4e3a$O(log\\ max(x,y))$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5224\u5b9a\u5462\uff1f\n\n1.\u4e8c\u7ef4\u524d\u7f00\u548c:\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7$O(max(x,y)^2)$\u7684\u65f6\u95f4\u9884\u5904\u7406\u51fa\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u5e76\u53ef\u4ee5\u5728$O(1)$\u7684\u65f6\u95f4\u5185\u8fdb\u884c\u5355\u70b9\u67e5\u8be2\u3002\u5982\u679c\u6211\u4eec\u679a\u4e3e\u6240\u6709\u8fb9\u957f\u4e3alen\u7684\u6b63\u65b9\u5f62\u7684\u8bdd\uff0c\u5224\u5b9a\u7684\u590d\u6742\u5ea6\u5c31\u8fd1\u4f3c\u4e3a$O(max(x,y)^2)$\n\n\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u4e3a$O(max(x,y)^2\\ log\\ max(x,y))$ \u4ee3\u5165\u6700\u5927\u89c4\u6a21\u53ef\u4ee5\u7b97\u51fa\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u8fd0\u7b97\u6b21\u6570\u4e3a$10^8*10 \\ =\\ 10^9$\u8fc7\u4e8e\u6781\u9650\uff0c\u5bb9\u6613\u88ab\u5361\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a10000\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u6570\u7ec4\u91cc\u505a\u4e8c\u5206\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5982\u4f55\u5904\u7406\uff1f\n\n2.\u79bb\u6563\u5316\n\n\u56e0\u4e3a$c<=n<=500$\uff0c\u6240\u4ee5\u81f3\u591a\u5b58\u57281000\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7$O(c+n)$\u7684\u65f6\u95f4\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u5c06\u6570x\u548cy\u7684\u636e\u89c4\u6a21\u867d\u5c0f\u5230$(1-1000)$\u5e76\u53ef\u4ee5\u5728$O(log\\ (c+n))$\u7684\u65f6\u95f4\u5185\u67e5\u8be2\u79bb\u6563\u5316\u7ed3\u679c\u3002\n\n\u90a3\u4e48\u5982\u679c\u5c06\u79bb\u6563\u5316\u7684\u6570\u636e\u89c4\u6a21\u4ee3\u5165\u4e00\u4e0b\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u8fd0\u7b97\u6b21\u6570\u4e3a$10^6*10=10^7$\u3002\n\n~~\u867d\u8bf4\u8fd8\u662f\u5f88\u9ad8\u800c\u4e14\u7565\u53bb\u4e86\u79bb\u6563\u5316\u7684\u590d\u6742\u5ea6~~\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u6211\u4eec\u8fd8\u662f\u80fd\u63a5\u53d7\u7684\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7$O((c+n)\\log\\ (c+n))$\u7684\u79bb\u6563\u5316\u4e4b\u540e\u901a\u8fc7$O(log\\ (c+n))$\u7684\u67e5\u8be2\u5904\u7406\u4e8c\u7ef4\u524d\u7f00\u548c$sum$\uff0c\u5e76\u7528\u957f\u5ea6\u6700\u591a\u4e3a1000\u7684\u4e8c\u7ef4\u524d\u7f00\u548c\u6570\u7ec4$sum$\u8fdb\u884c\u4e8c\u5206\uff0c\u8bbe\u79bb\u6563\u5316\u540e\u7684\u6700\u5927\u6570\u636e\u89c4\u6a21\u4e3am\u590d\u6742\u5ea6\u4e3a$O(m^2log\\ max(x,y))$\u3002\n## \u4ee3\u7801\n\u5bf9\u4e8e\u79bb\u6563\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u521d\u59cb\u5316\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4numbers\uff0c\u76f4\u63a5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5411\u91cc\u9762push_back(x)\u4e0epush_back(y)\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u53ea\u662f\u7f29\u5c0f\u89c4\u6a21\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e00\u7ef4\uff0c\u628ax\u548cy\u5b58\u5728\u540c\u4e00\u4e2avector\u5185\u8fdb\u884c\u67e5\u627e\u3002\n```cpp\nfor (int i = 0; i < n; i++){\n        int x,y;\n        cin >> x >> y;\n        numbers.push_back(x);\n        numbers.push_back(y);\n}\n```\n\n\u800c\u56e0\u4e3a\u6211\u4eec\u8981\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u5e76\u53bb\u91cd\u3002\n\n```cpp\nsort(numbers.begin(),numbers.end());\nnumbers.erase(unique(numbers.begin(),numbers.end()),numbers.end());\n```\n\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u539f\u5750\u6807\u79bb\u6563\u5316\u540e\u7684\u4f4d\u7f6e\u7528\u5176\u521d\u59cb\u5316\u4e8c\u7ef4\u524d\u7f00\u548c\u6570\u7ec4\u3002\n\n```cpp\nfor (int i = 0; i < n; i++){\n    int x = get(points[i].first),y = get(points[i].second);\n    sum[x][y]++;\n}\nfor (int i = 1; i < numbers.size(); i++){\n        for (int j = 1; j < numbers.size(); j++){\n            sum[i][j] += sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];\n     }\n}\n```\n\u5bf9\u4e8e\u4e8c\u5206\u7b54\u6848\n\n\u5982\u679cmid\u5408\u6cd5\u90a3\u4e48\u6700\u4f18\u89e3\u5fc5\u7136\u662f\u5728mid\u7684\u5de6\u8fb9\uff0c\u800c\u4e0d\u5408\u6cd5\u6700\u4f18\u89e3\u5219\u5728mid\u7684\u53f3\u8fb9\u3002\n```cpp\nint l = 1,r = 10000;\nwhile (l < r){\n        int mid = (l + r) >> 1;\n        if (check(mid)) r = mid;\n        else l = mid + 1;\n}\n```\n\n\n\u800c\u5bf9\u4e8echeck\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6240\u6709\u8fb9\u957f\u4e3amid\u7684\u77e9\u5f62\uff0c\u901a\u8fc7\u4e8c\u7ef4\u524d\u7f00\u548c\u5224\u65ad\u662f\u5426\u5b58\u5728c\u4e2a\u76ee\u6807\u3002\n\n\u800c\u6211\u4eec\u5728\u679a\u4e3e\u8fb9\u957f\u4e3amid\u7684\u77e9\u5f62\u65f6\uff0c\u6240\u7b97\u7684\u8fb9\u957f\u5fc5\u987b\u4e3a\u79bb\u6563\u5316\u4e4b\u524d\u7684\u8fb9\u957f\uff0c\u800c\u79bb\u6563\u5316\u4e4b\u524d\u7684\u8fb9\u957f\u5c31\u5b58\u5728numbers\u6570\u7ec4\u5185\u3002\n\n\u800c\u4ee5\u70b9$(i,j)$\u4e3a\u53f3\u4e0b\u89d2\u7684\u8fb9\u957f\u4e3alen\u7684\u6b63\u65b9\u5f62\u7684\u548c$S$\u4e3a\n\n$S[i][j]-S[i - len][j] - S[i][j -len]+S[i-len][j-len]$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e$x_1$,$x_2$\u4e0e$y_1$,$y_2$\u3002\n\n\u5176\u4e2d$x_1$\u76f8\u5f53\u4e8e$i-len$,$x_2$\u76f8\u5f53\u4e8e$i$,$y_1$\u76f8\u5f53\u4e8e$j-len$,$y_2$\u76f8\u5f53\u4e8e$j$\u3002\n\n\u800c\u56e0\u4e3a\u76ee\u6807\u662f\u5728\u683c\u5b50\u91cc\uff0c\u6240\u4ee5\u6709\uff1a\n\n```cpp\nwhile(numbers[x2] - numbers[x1 + 1] + 1 > len) x1++;\n```\n\n```cpp\nwhile(numbers[y2] - numbers[y1 + 1] + 1 > len)y1++;\n```\n\n\n\u800c\u5982\u679c$sum[x2][y2] - sum[x1][y2] - sum[x2][y1] + sum[x1][y1] >= c$\n\u5219$return\\ true$\u5426\u5219$return\\ false$\n\n```cpp\nbool check(int len){\n    for (int x1 = 0,x2 = 1; x2 < numbers.size(); x2++){\n        while(numbers[x2] - numbers[x1 + 1] + 1 > len)x1++;\n        for (int y1 = 0, y2 = 1; y2 < numbers.size(); y2++){\n            while(numbers[y2] - numbers[y1 + 1] + 1 > len)y1++;\n            if (sum[x2][y2] - sum[x1][y2] - sum[x2][y1] + sum[x1][y1] >= c) return true;\n        }\n    }\n    return false;\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\ntypedef pair<int,int> PII;\nint n,c;\nPII points[1010];\nvector<int> numbers;\nint sum[1010][1010];\nint get(int x){\n    return lower_bound(numbers.begin(),numbers.end(),x) - numbers.begin();\n}\nbool check(int len){\n    for (int x1 = 0,x2 = 1; x2 < numbers.size(); x2++){\n        while(numbers[x2] - numbers[x1 + 1] + 1 > len)x1++;\n        for (int y1 = 0, y2 = 1; y2 < numbers.size(); y2++){\n            while(numbers[y2] - numbers[y1 + 1] + 1 > len)y1++;\n            if (sum[x2][y2] - sum[x1][y2] - sum[x2][y1] + sum[x1][y1] >= c) return true;\n        }\n    }\n    return false;\n}\nint main(){\n    cin >> c >> n;\n    numbers.push_back(0);\n    for (int i = 0; i < n; i++){\n        int x,y;\n        cin >> x >> y;\n        points[i] = {x,y};\n        numbers.push_back(x);\n        numbers.push_back(y);\n    }\n    sort(numbers.begin(),numbers.end());\n    numbers.erase(unique(numbers.begin(),numbers.end()),numbers.end());\n    for (int i = 0; i < n; i++){\n       int x = get(points[i].first),y = get(points[i].second);\n       sum[x][y]++;\n    }\n    for (int i = 1; i < numbers.size(); i++){\n        for (int j = 1; j < numbers.size(); j++){\n            sum[i][j] += sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];\n        }\n    }\n    int l = 1,r = 10000;\n    while (l < r){\n        int mid = (l + r) >> 1;\n        if (check(mid)) r = mid;\n        else l = mid + 1;\n    }\n    cout << l;\n    return 0;\n}\n\n```\n\n",
        "postTime": 1587532791,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]Corral the Cows G\u3011\uff08\u4e8c\u5206\uff0c\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u79bb\u6563\u5316\uff09"
    },
    {
        "content": "\u5148orz\u7b2c\u4e00\u7684\u5927\u4f6c\u3002\u3002\u8fd9\u91cc\u6765\u7a0d\u5fae\u8bf4\u4e00\u4e0b\u6240\u8c13\u975e\u5e38\u6162\u7684$O(N^2logN)$\u7b97\u6cd5\u3002\u4e00\u5171\u7528\u4e866\u4e2a\u5c0f\u65f6\u5de6\u53f3\u628a\u8fd9\u9053\u9898A\u6389\uff0cWA\u4e86\u516b\u6b21\uff0c\u5404\u4f4d\u53ef\u4ee5\u5728\u8bb0\u5f55\u4e2d\u770b\u5230\u6211\u7684\u60e8\u6de1\u7ecf\u5386...\n\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9053\u9898\u50cf\u697c\u4e0b\u90a3\u6837\u8dd1\u56db\u6307\u9488\u662f\u975e\u5e38\u4e27\u75c5\u7684\u884c\u4e3a\uff0c\u867d\u7136\u8fd9\u6837\u6709\u52a9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u80fd\u529b\u3002\u522b\u95ee\u6211\u662f\u600e\u4e48\u77e5\u9053\u7684\u3002\n\n\u7b2c\u4e00\u6b65\u8fd8\u662f\u5bf9\u7b54\u6848\u4e8c\u5206\uff0c\u4f46\u5728\u6a2a\u5750\u6807\u7684\u679a\u4e3e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5316\u4e00\u4e0b\uff0c\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u533a\u95f4$[N, N + mid]$\uff0c\u8fd9\u6837\u5c31\u5c11\u4e86\u4e24\u4e2a\u6307\u9488\u3002\u90a3\u4e48\u600e\u4e48\u7edf\u8ba1\u51fa\u8fd9\u4e2a\u533a\u95f4\u5185\u6700\u5927\u7684\u70b9\u6570\u76ee\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u53e6\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u7ef4\u62a4\u4ee5\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u3001\u6a2a\u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u70b9\u3002\u7136\u540e\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u53ef\u4ee5\u53d6\u51fa\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u70b9\u7684\u7eb5\u5750\u6807\uff0c\u5e76\u5b58\u5728\u4e00\u4e2a\u65b0\u6570\u7ec4m\u4e2d\u3002\u8fd9\u6837\uff0cm\u4e2d\u4fdd\u5b58\u7684\u5c31\u662f\u6a2a\u5750\u6807\u5728\u533a\u95f4$[N, N + mid]$\u5185\u6240\u6709\u70b9\u4ee5\u7eb5\u5750\u6807\u6392\u5e8f\u7684\u7ed3\u679c\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c06p1p2\u4f5c\u4e3a\u4e24\u4e2a\u6307\u9488\u6307\u5411\u6570\u7ec4m\u7684\u6700\u524d\u9762\uff0c\u7136\u540e\u9996\u5148\u5c06p2\u6eda\u52a8\u5230\u79bbp1\u6700\u8fdc\u7684\u7b26\u5408\u6761\u4ef6\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u7684\u8bdd\u5c31\u5f88\u8212\u9002\u4e86\uff0c\u6211\u4eec\u4e0d\u65ad\u7684\u6eda\u52a8p2\uff0c\u5e76\u4fee\u6539p1\u4f7f\u4e4b\u7b26\u5408\u6761\u4ef6\uff0c\u76f4\u5230p2\u5230\u8fbem\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u5f53\u7136\u6709\u51e0\u4e2a\u7ec6\u8282\u5fc5\u987b\u6ce8\u610f\u3002\u5982\u679cWA\u4e86\u516b\u6b21\u5e76\u4e14\u6bcf\u6b21WA\u7684\u90fd\u662f\u4e0d\u540c\u70b9\u7684\u8bdd\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u4e0b\u9762\u7684\u6ce8\u91ca\u3002\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define N 503\n\nstruct node{\n\tint x, y;\n}le[N], cz[N];\nint m[N], cnt;\nint n, E;\n\nbool cmp1 (node a, node b) {\n\treturn a.x == b.x ? a.y < b.y : a.x < b.x;\n}\nbool cmp2 (node a, node b) {\n\treturn a.y == b.y ? a.x < b.x : a.y < b.y;\n}\n\nint getcnt(int l, int a) {\n\tint r = l + a - 1;\n\tcnt = 0;\n\tfor(int i = 1; i <= n; ++i) { //\u5904\u7406m\n\t\tif(cz[i].x <= r && cz[i].x >= l)\n\t\t\tm[++cnt] = cz[i].y;\n\t}\n\tint p1 = 1, p2 = 1;\n\twhile(m[p2] - m[p1] + 1 <= a && p2 <= cnt) ++p2;  //\u6eda\u52a8p2\n\tif(p2 > cnt || m[p2] - m[p1] + 1 > a) --p2;\n    //\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u91cc\uff01\u6307\u9488\u6709\u53ef\u80fd\u6eda\u8fc7\u5934\u4e86\uff0c\u8fd8\u8981\u8ba9\u5979\u6eda\u56de\u6765\uff01\uff01\uff01\n\tint ans = 0;\n\twhile(p1 <= p2 && p2 <= cnt) {\n\t\tans = max(ans, p2 - p1 + 1); //p2 - p1 + 1\u5c31\u662f\u5305\u542b\u7684\u70b9\u6570\n\t\t++p2;\n\t\twhile(m[p2] - m[p1] + 1 > a) ++p1; //\u6839\u636ep2\u6eda\u52a8p1\n\t}\n\treturn ans;\n}\n\nbool check(int mid) { //\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u5e76\u6c42\u51fa[L, L + mid]\u7684\u6700\u5927\u70b9\u6570\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(getcnt(le[i].x, mid) >= E) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nint erfen(int l, int r) { //\u4e8c\u5206\u7b54\u6848\n\tif(l == r) return l;\n\tint mid = l + r >> 1;\n\tif(check(mid)) erfen(l, mid);\n\telse erfen(mid + 1, r);\n} \n\nint main() {\n\tscanf(\"%d%d\", &E, &n);\n\tfor(int i = 1; i <= n; ++i) \n\t\tscanf(\"%d%d\", &le[i].x, &le[i].y), \n\t\t  cz[i].x = le[i].x, cz[i].y = le[i].y;\n\tsort(le + 1, le + n + 1, cmp1); //\u6a2a\u5750\u6807\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n\tsort(cz + 1, cz + n + 1, cmp2); //\u7eb5\u5750\u6807\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\n\tint ans = erfen(1, 10003);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1518600821,
        "uid": 37956,
        "name": "LiRewriter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]\u628a\u725bCorral the Cows\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206   \u4f46\u5982\u679c\u7528\u524d\u7f00\u548c\u7684\u8bdd\u597d\u50cf\u5e76\u4e0d\u80fdAC\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u60f3\uff0c\u51cf\u5c11\u4e00\u4e2a\u5750\u6807\u7684\u9650\u5236\u3002\n\n\n\u6240\u4ee5\uff0c\u6309 \u884c\u5750\u6807\u6392\u5e8f \uff0c\u540c\u6837\u4e8c\u5206\u7b54\u6848\uff0c \u518d\u53bb\u627e\u6ee1\u8db3\u6761\u4ef6\u7684 \u201c\u4e0a\u4e0b\u8fb9\u754c\u201d\uff0c\n\n\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u201c\u4e0a\u4e0b\u8fb9\u754c\u201d\u4e2d\uff0c\u627e\u4e00\u4e2a\"\u5de6\u53f3\u8fb9\u754c\"\uff0c\u518d\u53bb\u5224\u65ad\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<set>\n#include<bitset>\n#include<sstream>\n#include<cstdlib>\n#define QAQ int\n#define TAT long long \n#define ORZ double\n#define OwO bool\n#define SHO short\n#define F(i,j,n) for(QAQ i=j;i<=n;++i)\n#define E(i,j,n) for(QAQ i=j;i>=n;--i)\n#define MES(i,j) memset(i,j,sizeof(i))\n#define MEC(i,j) memcpy(i,j,sizeof(j))\nusing namespace std;\nconst QAQ N=1005;\nQAQ n,m,l,r,ans;\nQAQ t[N];\nstruct data{\n    QAQ x,y;\n    friend OwO operator < (const data &a,const data &b){//\u6309\u884c\u5750\u6807 \u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n        return a.x<b.x;\n    }\n}a[N];\nOwO ok(QAQ l,QAQ r,QAQ L){\n    if(r-l+1<m) return 0;\n    QAQ js=0;\n    F(i,l,r) t[++js]=a[i].y;//\u5c06 \u5750\u6807 \u5728\u4e0a\u4e0b\u8fb9\u4e4b\u5185\u7684\u70b9\u7684 \u5217\u5750\u6807 \u7edf\u8ba1\u8d77\u6765 \n    sort(t+1,t+js+1);//\u518d\u53bb\u627e \u4e8c\u5206\u7684\u8fb9\u957f\u5185 \u662f\u5426\u6709 m\u4e2a \n    F(i,m,js) if(t[i]-t[i-m+1]<=L) return 1;\n    return 0;\n}\nOwO pd(QAQ L){\n    QAQ js=1;\n    F(i,1,n) {//\u627e\u4e0a\u4e0b\u8fb9\u754c \u2014\u2014\u5373\u4e0b\u5e95\u548c\u4e0a\u5e95 \n        if(a[i].x-a[js].x>L){//\u82e5\u5f53\u524d\u7684\u5e95 \u6bd4 \u4e8c\u5206\u7684\u8fb9\u957f \u957f \n            if(ok(js,i-1,L)) return 1;//\u53bb\u5224\u65ad \u8fd9\u4e00\u6bb5\u533a\u95f4\u5185 \u662f\u5426\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 \u5de6\u53f3\u8fb9 \n        }\n        while(a[i].x-a[js].x>L) js++;\n    }\n    return ok(js,n,L);//\u6700\u540e\u522b\u5fd8\u8bb0\u518d\u5224\u65ad \n}\nQAQ main(){\n    scanf(\"%d%d\",&m,&n);\n    F(i,1,n) scanf(\"%d%d\",&a[i].x,&a[i].y);\n    sort(a+1,a+n+1);\n    r=10000;\n    while(l<=r){//\u4e8c\u5206\u7b54\u6848\uff1a\u8fb9\u957f \n        QAQ mid=l+r>>1;\n        if(pd(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",ans+1);//\u522b\u5fd8\u4e86\u52a0\u4e00  \u56e0\u4e3a\u4e8c\u5206\u7684\u662f\u70b9\u5230\u70b9\u4e4b\u95f4\u7ebf\u6bb5\u957f \u800c\u4e0d\u662f\u70b9\u5230\u70b9\u7684\u8ddd\u79bb \n    return 0;\n}\n```",
        "postTime": 1509693579,
        "uid": 36170,
        "name": "Fheiwn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]\u628a\u725bCorral the Cows\u3011"
    },
    {
        "content": "## \u628a\u725b\n\n**\u601d\u8def**:\u5148\u5c06\u6bcf\u5934\u725b\u7684\u7684\u51fa\u73b0\u6b21\u6570\u7edf\u8ba1\u4e00\u4e0b\uff0c\u518d\u5c06\u725b\u7684\u539f\u4f4d\u7f6e\u4f4d\u7f6e\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u79bb\u6563\u5316\u4e4b\u540e\u518d\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u51fa\u73b0\u6b21\u6570\u7edf\u8ba1\u8fdb\u524d\u7f00\u548c\u6570\u7ec4s\u4e2d\uff0c\u518d\u901a\u8fc7\u4e8c\u5206\u7b54\u6848\u627e\u5230\u5408\u9002\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u6211\u4eec\u6ca1\u6709\u79bb\u6563\u5316\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\u7684\u8bdd\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N ^ 2)\uff0c\u6b64\u65f6N\u7684\u6700\u5927\u8303\u56f4\u4e3a10000\uff0c\u663e\u7136\u4f1a\u70b8\uff01\n\n\u5982\u679c\u6211\u4eec\u79bb\u6563\u5316\u4e4b\u540e\u518d\u901a\u8fc7\u4e8c\u5206\u7b54\u6848\u5bfb\u6c42\u7b54\u6848\uff0c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u5219\u4e3aO(N + Nlog(N) + C ^ 2)\uff0c\u5373\u4f7f\u518d\u52a0\u4e0a\u6c42\u524d\u7f00\u548cS\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e0d\u4f1a\u8d85\u65f6\uff0c\u6bd5\u7adfC\u7684\u6700\u5927\u8303\u56f4\u4e3a500\u3002\n\n**\u5173\u4e8e\u4e8c\u5206\u7b54\u6848** \u5982\u679c\u6211\u4eec\u679a\u4e3e\u7684\u8fb9\u957f\u7b26\u5408\u6761\u4ef6\uff0c\u5f88\u663e\u7136\u6211\u4eec\u4e0b\u4e00\u6b65\u8be5\u505a\u7684\u5c31\u662f\u518d\u6b21\u7f29\u5c0f\u7b54\u6848\u8303\u56f4\u627e\u66f4\u4f18\u89e3\uff0c\u76f4\u5230\u679a\u4e3e\u7684\u7b54\u6848\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u5219\u4e0a\u89e3\u5219\u4e3a\u6700\u4f18\u3002\n\n\u5728\u8fd9\u91cc\u9700\u8981**\u6ce8\u610f**\u7684\u662f\uff1al\u548cr\u7684\u8303\u56f4\u4e00\u5b9a\u8981\u7b26\u5408\u7b54\u6848\u5b9a\u4e49\u57df\uff0c\u65e2\u4e0d\u80fd\u592a\u5927\uff0c\u4e5f\u4e0d\u80fd\u592a\u5c0f\uff0c\u4e0d\u7136\u679a\u4e3e\u7684\u7b54\u6848\u4f1a\u6709\u95ee\u9898 **~~QAQ~~** \u3002\n\n**\u9644\u4e0a\u4ee3\u7801**\uff1a\n\n```cpp\n#include <cstdio>\n\nusing namespace std;\nconst int N = 550;\nconst int MAX = 10050;\n\nint c, n, head_x, head_y;\nint s[N][N], ax[MAX], ay[MAX], bx[N], by[N];\n\nstruct cow{int x, y;} a[N];\n//\u79bb\u6563\u5316 \ninline void discrete(){\n\tfor(int i = 1; i <= 10000; ++i) {\n\t\tif(ax[i]) bx[++head_x] = i;\n\t\tax[i] = head_x;\n\t\tif(ay[i]) by[++head_y] = i;\n\t\tay[i] = head_y;\n\t}\n}\n//\u4e8c\u5206\u7b54\u6848 \ninline bool check(int x) {\n\tfor(int i = ax[x]; i <= head_x; ++i)\n\t\tfor(int j = ay[x]; j <= head_y; ++j) {\n\t\t\tint tx = 0, ty = 0;\n\t\t\tif(bx[i] - x >= 0) tx = ax[bx[i] - x];\n\t\t\tif(by[j] - x >= 0) ty = ay[by[j] - x];\n\t\t\tif(s[i][j] - s[tx][j] - s[i][ty] + s[tx][ty] >= c) return 1;\n\t\t}\n\treturn 0;\n}\n\nint main() {\n//\tfreopen(\"in.txt\", \"r\", stdin);\n\t\n\tscanf(\"%d %d\", &c, &n);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d %d\", &a[i].x, &a[i].y);\n\t\tax[a[i].x]++;\n\t\tay[a[i].y]++;\n\t}\n\t\n\tdiscrete();\n\t\n\tfor(int i = 1; i <= n; ++i) s[ax[a[i].x]][ay[a[i].y]]++;\n\t//\u6c42\u524d\u7f00\u548c\n\tfor(int i = 1; i <= head_x; ++i)\n\t\tfor(int j = 1; j <= head_y; ++j)\n\t\t\t s[i][j] += s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1];\n\t\n\tint l = 1, r = 10000, mid;//\u6ce8\u610f\uff0cl\u548cr\u7684\u8303\u56f4\u4e00\u5b9a\u8981\u7b26\u5408\u9898\u610f\uff0c\u65e2\u4e0d\u80fd\u592a\u5927\uff0c\u4e5f\u4e0d\u80fd\u592a\u5c0f\u3002 \n\twhile(l < r) {\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\t\n\tprintf(\"%d\\n\", l);\n\treturn 0;\n}\n```\n",
        "postTime": 1554557239,
        "uid": 56940,
        "name": "\u9677\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]\u628a\u725bCorral the Cows\u3011"
    },
    {
        "content": "## \u539f\u9898\u94fe\u63a5\n[P2862 [USACO06JAN]Corral the Cows G](https://www.luogu.com.cn/problem/P2862)\n\n## \u5206\u6790\n\uff08\u6587\u4e2d\u628a\u5750\u6807\u8303\u56f4$10000$\u79f0\u4e3a$SIZE$\uff09\n\n\u7b2c\u4e00\u53cd\u5e94\uff1a\u4e8c\u5206\u6b63\u65b9\u5f62\u8fb9\u957f\uff0c\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u524d\u7f00\u548c\u5224\u65ad\u3002\u65f6\u95f4\uff1aO($SIZE^2 \\log SIZE$)\u3002 \u7a7a\u95f4\uff1aO($SIZE^2$)\u3002\u7ed3\u679c\uff1a$\\color{white}\\colorbox{black}{TLE} \\color{red}{and} \\color{white}\\colorbox{black}{MLE}$\u3002\u4e0d\u592a\u884c\u7684\u6837\u5b50\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u867d\u7136\u9700\u8981\u679a\u4e3e\u7684\u6b63\u65b9\u5f62\u9876\u70b9\u53ef\u80fd\u6027\u5f88\u591a\uff0c\u4f46\u662f\u6709\u7684\u60c5\u51b5\u6839\u672c\u4e0d\u9700\u8981\u679a\u4e3e\uff0c\u6bd4\u5982\u5f53\u524d\u884c\u8fde\u4e00\u5757\u8349\u5730\u4e5f\u6ca1\u6709\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e2a\u6b63\u65b9\u5f62\u6574\u4f53\u5411\u4e0b\u632a\u4e00\u884c\uff0c\u5305\u542b\u7684\u8349\u5730\u6570\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u5c11\u3002\u800c\u4e00\u5171\u53ea\u6709\u6700\u591a$N$\u884c\u6709\u8349\u5730\u3002\u65f6\u95f4\u4f18\u5316\u4e3aO($SIZE \\times N \\times \\log SIZE$)\u3002\u7a7a\u95f4\u4e0d\u53d8\uff0c\u4e3aO($SIZE^2$)\u3002\u7ed3\u679c\uff1a$ \\color{white}\\colorbox{black}{MLE}$\u3002\u8fd8\u662f\u4e0d\u592a\u884c\u7684\u6837\u5b50\u3002\n\n\u8fd8\u6709\u6ca1\u6709\u7ee7\u7eed\u4f18\u5316\u7a7a\u95f4\u7684\u597d\u529e\u6cd5\u5462\uff1f\n\n\u6709\u7684\u3002\u6211\u4eec\u4f7f\u7528\u524d\u7f00\u548c\u662f\u4e3a\u4e86O(1)\u6c42\u51fa\u6bcf\u4e2a\u6b63\u65b9\u5f62\u5305\u542b\u7684\u8349\u5730\u6570\u3002\u800c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5feb\u901f\u77e5\u9053\u5728\u8fb9\u957f\u4e0d\u53d8\u7684\u9876\u70b9\u5728\u540c\u4e00\u884c\u7684\u6b63\u65b9\u5f62\u4e2d\u5305\u542b\u7684\u8349\u5730\u6570\u3002\u5e76\u4e0d\u9700\u8981O(1)\u3002\n\n\u7a81\u7136\u6709\u4e00\u4e2a\u6bd4\u524d\u7f00\u548c\u66f4\u52a0\u6734\u7d20\u7684\u65b0\u60f3\u6cd5\uff1a\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u5757\u8349\u5730\u662f\u5426\u5728\u6b63\u65b9\u5f62\u5185\u90e8\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\u8fd9\u6837\u505a\u7a7a\u95f4\u53d8\u6210\u4e86O(N)\uff0c\u65f6\u95f4\u5374\u53d8\u6162\u4e86\uff0c\u53d8\u6210\u4e86O($\\log SIZE \\times N^2 \\times SIZE$)\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u66f4\u5bb9\u6613\u4f18\u5316\u4e86\u3002\u5148\u6309\u7167$y$\u5750\u6807\u6392\u5e8f\u3002\u7136\u540e\uff0c\u65e2\u7136\u9876\u70b9\u5728\u540c\u4e00\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u627e\u51fa\u6240\u6709\u7b26\u5408\u884c\u6761\u4ef6\u7684\u8349\u5730\u3002\u63a5\u7740\uff0c\u4f7f\u7528\u4e24\u4e2a\u5355\u8c03\u6307\u9488\uff0c\u626b\u63cf\u6bcf\u5757\u8349\u5730\u7684$y$\uff0c\u8ba9$y$\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u53ea\u8981\u4e24\u4e2a\u6307\u9488\u4e4b\u5dee\u5927\u4e8e\u7b49\u4e8e$c$\u5c31\u53ef\u884c\u3002\u8fd9\u6837\u7684\u8bdd\u65f6\u95f4\u53d8\u6210\u4e86O($\\log SIZE \\times SIZE \\times N$)\uff0c\u53ea\u9700\u8981\u5927\u69822.5s\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u3002\n\n\u7ec8\u6781\u4f18\u5316\uff1a\u5982\u679c\u7b26\u5408\u884c\u6761\u4ef6\u7684\u8349\u5730\u6570\u91cf\u5df2\u7ecf\u5c0f\u4e8e$c$\uff0c\u8fd9\u4e00\u884c\u5c31\u53ef\u4ee5\u4e0d\u770b\u3002\u8fd9\u4e2a\u6761\u4ef6\u80fd\u591f\u5728$c$\u8f83\u5927\u65f6\u52a0\u901f\u8fd0\u884c\u3002\u800c\u5982\u679c$c$\u8f83\u5c0f\uff0c\u90a3\u4e48\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u6b63\u65b9\u5f62\u6ee1\u8db3\u6761\u4ef6\uff0ccheck\u5c31\u8fd4\u56detrue\u3002\u6240\u4ee5\u5b9e\u9645\u4e0a\u8fdc\u8fdc\u7528\u4e0d\u52302.5s\u3002\u7ecf\u6d4b\u8bd5\uff0c\u7528\u4e0a\u8ff0~~\u7384\u5b66~~\u7b97\u6cd5\u6700\u5927\u70b9\u53ea\u9700\u898134ms\u3002\n\n## \u89e3\u51b3\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#define R register\n#define il inline\n\nusing namespace std;\n\nconst int N = 505;\nstruct grass {\n\tint x, y;\n\tbool operator <(const grass &nxt) const { return y < nxt.y; }\n};\nint f[10005];\nbool exist[10005];\n\ninline void read(int &ret) {\n\tret = 0;\n\tR char c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\twhile (c >= '0' && c <= '9') ret = ret * 10 + c - '0', c = getchar();\n}\n\nint main() {\n    R int n, c, tot, ok;\n    R grass a[N], b[N];\n\tread(c), read(n);\n\tfor (R int i = 1; i <= n; i++) {\n\t\tread(a[i].x), read(a[i].y);\n\t\texist[a[i].x] = true;\n\t}\n\tfor (R int i = 1; i <= 10000; i++)\n\t\tif (exist[i])\n\t\t\tf[++tot] = i;\n\tsort(a + 1, a + n + 1);\n\tR int l = 1, r = 10000, ans = 0, mid;\n\twhile (l <= r) {\n \t\tR bool flag = false;\n\t\tmid = (l + r) / 2;\n\t\tfor (R int i = 1; i <= tot; i++) {\n\t\t\tif (flag)\n\t\t\t\tbreak;\n\t\t\tok = 0;\n\t\t\tfor (R int j = 1; j <= n; j++)\n\t\t\t\tif (a[j].x >= f[i] && a[j].x < f[i] + mid)\n\t\t\t\t\tb[++ok] = a[j];\n            if (ok < c)\n                continue;\n\t\t\tfor (R int j = 1, k = 1, l = 1; j <= 10000; j++) {\n\t\t\t\twhile (b[k].y < j && k <= ok) k++;\n\t\t\t\twhile (b[l].y < j + mid && l <= ok) l++;\n\t\t\t\tif (l - k >= c) {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (flag)\n\t\t\tans = mid, r = mid - 1;\n\t\telse\n\t\t\tl = mid + 1;\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n### THE END",
        "postTime": 1596014139,
        "uid": 253946,
        "name": "ClHg2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]Corral the Cows G\u3011"
    },
    {
        "content": "\u505a\u6cd5\uff1a\u6b64\u9898\u5e94\u628a\u6a2a\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u5bf9\u6b63\u65b9\u5f62\u8fb9\u957f\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\u5e76\u68c0\u9a8c\u3002\n\n**CAUTION:\u70b9\u7684\u5750\u6807\u5c31\u662f\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u5750\u6807,\u9762\u79ef\u4e3a1*1.\u6240\u4ee5\u68c0\u9a8c\u5f53\u9009\u5b9a\u4e24\u4e2ax,\u4e00\u4e2a\u4e0a\u9650,\u4e00\u4e2a\u4e0b\u9650,\u5dee<=L\u65f6,\u5176\u4e2d\u662f\u5426\u6709C\u4e2a\u70b9\u6ee1\u8db3\u7eb5\u5750\u6807\u4e4b\u5dee\u5c0f\u4e8e\u8fb9\u957f\u65f6\u8981\u52a01\uff01\uff01\uff01.**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint const M=505;\nint N,C;\nstruct node\n{\n    int x,y;\n}a[M];\nbool cmp(node aa,node bb)\n{\n    if(aa.x!=bb.x)return aa.x<bb.x;\n    else return aa.y<bb.y;;\n}\nint L,R,mid,ans,temp[M];\nbool pd(int l,int r)\n{\n    if(r-l+1<C)return 0;\n    for(int i=l;i<=r;++i)temp[i-l+1]=a[i].y;\n    std::sort(temp+1,temp+r-l+2);\n    for(int i=C;i<=r-l+1;++i)if(temp[i]-temp[i-C+1]+1<=mid)return 1;\n    return 0;\n}\nbool check()\n{\n    int last=1;\n    bool ret=0;\n    for(int i=1;i<=N;++i)\n    {\n        if(a[i].x-a[last].x+1>mid)ret|=pd(last,i-1);\n        if(ret)return ret;\n        while(a[i].x-a[last].x+1>mid)last++;\n    }\n    if(a[N].x-a[last].x+1<=mid)ret|=pd(last,N);\n    return ret;\n}\nint main(){\n    scanf(\"%d %d\",&C,&N);\n    for(int i=1;i<=N;++i)scanf(\"%d %d\",&a[i].x,&a[i].y),R=std::max(R,std::max(a[i].x,a[i].y));\n    sort(a+1,a+1+N,cmp);\n    L=1;\n    while(L<=R)\n    {\n        mid=(L+R)>>1;\n        check()?ans=mid,R=mid-1:L=mid+1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1535722682,
        "uid": 112388,
        "name": "dinic",
        "ccfLevel": 0,
        "title": "P2862\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u5927\u6982\u662f $O(n ^ 2 \\log^2 n )$ \u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u53ef\u4ee5\u4f18\u5316\u4f46\u662f\u6211\u5f88\u61d2\u5c31\u76f4\u63a5\u6254\u4e86\u3002               \n\n\u5177\u4f53\u7684\u6211\u4eec\u53d1\u73b0\u5982\u679c\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e9b\u70b9\uff0c\u6211\u4eec\u8981\u7528\u4e00\u4e2a\u6700\u5c0f\u6b63\u65b9\u5f62\u6765\u56ca\u62ec\u5b83\u4eec\uff0c\u5176\u8fb9\u957f\u4e3a\u8fd9\u4e9b\u70b9\u4e2d\u6a2a\u5750\u6807\u6781\u5dee\u4e0e\u7eb5\u5750\u6807\u6781\u5dee\u7684\u6700\u5927\u503c\u3002              \n\n\u7136\u540e\u5c31\u5f88\u5957\u8def\u4e86\uff0c\u5148\u6309 $x$ \u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u7b54\u6848\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a $x$ \u6700\u5c0f\u7684\u4e00\u4e2a\u70b9\u7136\u540e\u5411\u53f3\u5c3d\u91cf\u6269\u5c55\uff0c\u63a5\u7740\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\u5185\u9009\u62e9 $n$ \u4e2a\u70b9\u4f7f\u5f97 \n$y$ \u7684\u6781\u5dee\u4e0d\u8d85\u8fc7\u4e8c\u5206\u7684\u503c\uff0c\u8fd9\u4e2a\u76f4\u63a5\u5728\u5185\u90e8\u6392\u5e8f\u540e\u66b4\u529b\u679a\u4e3e\u5c31\u597d\u4e86\u3002                 \n\n```cpp \n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 505;\nint n,m;\nstruct node\n{\n\tint x,y;\n}Sec[Len],SSS[Len];\nbool cmpx(node x,node y){return x.x < y.x;}\nbool cmpy(node x,node y){return x.y < y.y;} \nbool check(int res)\n{\n\tfor(int i = 1 ; (i + n - 1) <= m ; i ++)//\u679a\u4e3ex\u6700\u5c0f\u7684\u70b9 \n\t{\n\t\tint idx = i;\n\t\twhile(idx <= m && Sec[idx].x - Sec[i].x + 1 <= res) idx ++;\n\t\tidx --; \n\t\tif(idx - i + 1 < n) continue;\n\t\tsort(Sec + i , Sec + idx + 1 , cmpy);\n\t\tfor(int j = i ; j + n - 1 <= idx ; j ++) \n\t\t\tif(Sec[j + n - 1].y - Sec[j].y + 1 <= res) \n\t\t\t{\n\t\t\t\tfor(int k = i ; k <= idx ; k ++) Sec[k] = SSS[k];\n\t\t\t\treturn true;\n\t\t\t}\n\t\tfor(int j = i ; j <= idx ; j ++) Sec[j] = SSS[j];\n\t}\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= m ; i ++) scanf(\"%d %d\",&Sec[i].x,&Sec[i].y);\n\tsort(Sec + 1 , Sec + 1 + m , cmpx);\n\tfor(int i = 1 ; i <= m ; i ++) SSS[i] = Sec[i];\n\tint l = 1 , r = 20000 , anss = 0;\n\twhile(l <= r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)) anss = mid , r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\\n\",anss);\n\treturn 0; \n} \n```",
        "postTime": 1621479226,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2862 [USACO06JAN]Corral the Cows G"
    },
    {
        "content": "\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u80fd\u5426\u7528\u8fb9\u957f\u4e3a$len$\u7684\u6b63\u65b9\u5f62\u6846\u4f4f\u5927\u4e8e\u7b49\u4e8e$c$\u4e2a\u8349\u573a\u3002\n\n\u7ee7\u7eed\u8f6c\u5316\u95ee\u9898\uff0c\u5373\u8fb9\u957f\u4e3a$len$\u7684\u6b63\u65b9\u5f62\u80fd\u6846\u4f4f\u7684\u6700\u591a\u8349\u573a\u6570\u662f\u5426\u5927\u4e8e$c$\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u53f3\u4e0b\u89d2$(x,y)$\uff0c\u5219\u6bcf\u4e00\u4e2a\u6a2a\u5750\u6807\u5728$[x-len+1,x]$\uff0c\u7eb5\u5750\u6807\u5728$[y,y+len-1]$\u4e2d\u7684\u8349\u573a\u90fd\u53ef\u4ee5\u88ab\u6846\u4f4f\u3002\n\n\u8f6c\u800c\u8003\u8651\u6bcf\u4e00\u4e2a\u8349\u573a$(x,y)$\u7684\u8d21\u732e\uff0c\u5b83\u5bf9\u6a2a\u5750\u6807\u5728$[x,x+len-1]$\uff0c\u7eb5\u5750\u6807\u5728$[y-len+1,y]$\u7684\u53f3\u4e0b\u89d2\u90fd\u6709\u8d21\u732e\u3002\n\n\u8003\u8651\u626b\u63cf\u7ebf\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8349\u573a\u53ef\u4ee5\u770b\u6210\u4e24\u4e2a\u7ebf\u6bb5\uff0c\u5373$\\{x,y-len+1,y,1\\}$\u548c$\\{x+len,y-len+1,y,-1\\}$\u3002\n\n\u5373\u8fd9\u4e2a\u8349\u573a\u4ece$x$\u8d77\u5728\u533a\u95f4$[y-len+1,y]$\u4e0a\u751f\u6548\uff0c\u4ece$x+len$\u8d77\u5931\u6548\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u503c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nlogn)$\uff08\u4e8c\u5206+\u626b\u63cf\u7ebf\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int maxn=1e4+10;\nconst int N=1e4+5;\nint n,m,ans,a[maxn],b[maxn],tot;\nstruct node{int pos,l,r,val;}p[maxn];\ninline int cmp(node x,node y){\n\tif(x.pos==y.pos)return x.val<y.val;\n\treturn x.pos<y.pos;\n}\nint tr[maxn<<4],lazy[maxn<<4];\ninline void build(int h,int l,int r){\n\ttr[h]=lazy[h]=0;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(h<<1,l,mid);\n\tbuild(h<<1|1,mid+1,r);\n}\ninline void pushup(int h,int z){\n\ttr[h]+=z;lazy[h]+=z;\n}\ninline void pushdown(int h){\n\tif(!lazy[h])return;\n\tpushup(h<<1,lazy[h]);\n\tpushup(h<<1|1,lazy[h]);\n\tlazy[h]=0;\n}\ninline void update(int h,int l,int r,int x,int y,int z){\n\tif(l>y||r<x)return;\n\tif(l>=x&&r<=y){pushup(h,z);return;}\n\tpushdown(h);\n\tint mid=(l+r)>>1;\n\tupdate(h<<1,l,mid,x,y,z);\n\tupdate(h<<1|1,mid+1,r,x,y,z);\n\ttr[h]=max(tr[h<<1],tr[h<<1|1]);\n}\ninline int check(int len){\n\tbuild(1,-N,N);tot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tp[++tot]=(node){a[i],b[i]-len+1,b[i],1};\n\t\tp[++tot]=(node){a[i]+len,b[i]-len+1,b[i],-1};\n\t}\n\tsort(p+1,p+1+tot,cmp);\n\tfor(int i=1;i<=tot;i++){\n\t\tupdate(1,-N,N,p[i].l,p[i].r,p[i].val);\n\t\tif(tr[1]>=m)return 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tm=read(),n=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read(),b[i]=read();\n\tint l=1,r=N;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u6df1\u6df1\u5730\u611f\u5230\u81ea\u5df1\u7684\u5f31\u5c0f\u3002\n",
        "postTime": 1605452307,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2862 \u3010[USACO06JAN]Corral the Cows G\u3011"
    },
    {
        "content": "# #### \u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff08~~\u5916\u52a0\u7b2c\u4e00\u6b21\u7528MARKDOWN~~\uff09\n\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u7684\u4e8c\u5206\u9898\n\u4e3b\u51fd\u6570\u4e2d\u4e8c\u5206\u679a\u4e3e\u7b54\u6848\uff0c\n\u5224\u65ad\u65f6\u6bcf\u6b21\u5c06\u5408\u7406x\u8f74\u8303\u56f4p[i].x\u5230p[i].x+qh-1\u5185\u6240\u6709\u70b9\u6309\u7167p[i].y\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u4ee5\u8981\u6c42\u7684\u4e2a\u6570\u5206\u7ec4\u5224\u65ad\u662f\u5426\u5728\u533a\u95f4\u5185\n\u6838\u5fc3\u4ee3\u7801\n### # if(p[sb[j]].y-p[sb[j-c+1]].y+1<=qh) return 1;\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<cstring>\nusing namespace std;\nconst double inf = 1e10;\nconst int maxn = 0x7f7f7f7f;\ninline void read(int &x)\n{\n    x=0;int f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1; c=getchar();}\n    while(c<='9'&&c>='0'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    x*=f;\n}\ninline void print(int x)\n{\n    if(x<0){x=-x;putchar('-');}\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\nstruct po{\n    int x,y;\n}p[555];\nint c,n;\nint sb[501];\ninline bool mmp(int a,int b)\n{\n\treturn p[a].y<p[b].y;\n}\ninline int check(int qh)\n{\n    for(register int i=1;i<=n;i++)\n    {\n    \tint tot=0,maxx=qh+p[i].x-1;\n    \tfor(register int j=i;j<=n;j++)\n\t\t{\n\t\t\tif(p[j].x<=maxx)\n\t\t\t{\n\t\t\t\ttot++;\n\t\t\t\tsb[tot]=j;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tif(tot<c) continue;\n\t\tstable_sort(sb+1,sb+tot+1,mmp);                                                \n    \tfor(int j=tot;j>=c;j--)\n    \t\tif(p[sb[j]].y-p[sb[j-c+1]].y+1<=qh) return 1;\n\t}\n    return 0;\n}\ninline bool cmp(po a,po b)\n{\n    if(a.x==b.x) return a.y<b.y;\n    return a.x<b.x;\n}\nint main()\n{\n\tint zuida=-maxn,zuixiao=maxn;\n    read(c);read(n);\n    for(register int ii=1;ii<=n;ii++)\n    { \n        read(p[ii].x);\n        read(p[ii].y);\n\t}\n    stable_sort(p+1,p+n+1,cmp);\n    int l=1,r=10001,ans=0,temp=-1,mid=-1;\n    for(int ii=1;ii<=100;ii++)\n    {\n    \ttemp=mid;\n      \tmid=(l+r)>>1;\n      \tif(temp==mid) break;\n        if(check(mid))\n        {\n            ans=mid;\n            r=mid;\n        }\n        else l=mid;\n    }\n    print(ans);\n}\n```\n\n",
        "postTime": 1545894225,
        "uid": 117726,
        "name": "Thomastine",
        "ccfLevel": 0,
        "title": "P2862 [USACO06JAN]\u628a\u725bCorral the Cows"
    }
]