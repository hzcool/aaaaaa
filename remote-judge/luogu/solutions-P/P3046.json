[
    {
        "content": "\u8fd9\u5927\u6982\u662f\u4e00\u9053\u6570\u5b66\u9898\uff1f\uff1f\u53cd\u6b63\u89c9\u5f97\u56de\u5230\u4e86\u521d\u4e09\u3002\n\n\u9996\u5148 $n^3$ \u5f88\u5bb9\u6613\u60f3\uff0c\u65e0\u975e $n^2$ \u679a\u4e3e\u4e24\u4e2a\u70b9\uff0c$O(n)$ \u5224\u65ad\u3002\n\n\u4e0d\u5982\u6765\u505a\u4e2a\u8111\u7b4b\u6025\u8f6c\u5f2f\u3002\u4e00\u4e2a\u6570\u96c6\u91cc\u6709\u51e0\u79cd\u6570\uff1f\u4e24\u79cd\uff0c\u7b49\u4e8e1\u7684\u548c\u4e0d\u7b49\u4e8e1\u7684\u3002\n\n\u7531\u6b64\uff0c\u6240\u6709\u5bf9\u79f0\u8f74\u6709\u51e0\u79cd\uff1f\u4e24\u79cd,\u7ecf\u8fc7\u70b91\u7684\u548c\u4e0d\u7ecf\u8fc7\u70b91\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u56fa\u5b9a\u4e00\u4e2a\u70b9 $1$ \uff0c\u679a\u4e3e\u4e00\u4e2a\u70b9 $i$ \u4e0e $1$ \u914d\u5bf9\u3002\u5047\u8bbe\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u5bf9\u79f0\u8f74\uff0c\u8fd9\u4e24\u4e2a\u70b9\u662f\u5173\u4e8e\u8fd9\u6761\u5bf9\u79f0\u8f74\u7684\u4e00\u5bf9\u5bf9\u79f0\u70b9\u3002\u5c31\u53ef\u4ee5\u6c42\u51fa\u8fd9\u6761\u5bf9\u79f0\u8f74\u7684\u65b9\u7a0b\u3002\u518d $O(n)$ \u5224\u65ad\uff0c\u662f\u4e0d\u662f\u5bf9\u79f0\u8f74\u3002 \n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u4e0d\u7ecf\u8fc7\u70b9 $1$ \u7684\u5bf9\u79f0\u8f74\u3002\u56e0\u4e3a\u5047\u8bbe\u6709\u4e00\u6761\u5bf9\u79f0\u8f74\u4e0d\u7ecf\u8fc7\u70b9 $1$ \uff0c\u65e2\u7136\u5b83\u5408\u6cd5\uff0c $1$ \u5c31\u4e00\u5b9a\u6709\u4e00\u4e2a\u5bf9\u79f0\u70b9\u3002\u4f46\u662f\u6211\u4eec\u5df2\u7ecf\u679a\u4e3e\u4e86\u6240\u6709\u7684\u70b9\u4e0e $1$ \u914d\u5bf9\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u5bf9\u79f0\u8f74\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u5373\u5f97\u8bc1\u3002\n\n\u90a3\u7ecf\u8fc7\u70b9 $1$ \u7684\u5bf9\u79f0\u8f74\u53c8\u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u518d\u56fa\u5b9a\u4e00\u4e2a\u70b9 $2$ \uff0c\u518d\u6c42\u4e00\u904d\u3002\u8fd9\u6b21\u8981\u6c42\u6240\u6709\u7684\u5bf9\u79f0\u8f74\u5408\u6cd5\u7684\u6761\u4ef6\u8fd8\u8981\u52a0\u4e0a\u7ecf\u8fc7\u70b9 $1$ \uff0c\u4e0d\u7136\u4f1a\u7b97\u91cd\u3002\n\n\u8fd9\u6837\u5c31\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8ba1\u7b97\u4e86\u6240\u6709\u4e0d\u7ecf\u8fc7\u70b9 $1$ \u7684\u3001\u7ecf\u8fc7\u70b9 $1$ \u4f46\u4e0d\u7ecf\u8fc7\u70b9 $2$ \u7684\uff0c\u6240\u6709\u53ef\u80fd\u7684\u5bf9\u79f0\u8f74\u3002\u8fd8\u6f0f\u4e86\u7ecf\u8fc7\u70b9 $1$ \u5e76\u4e14\u7ecf\u8fc7\u70b9 $2$ \u7684\u600e\u4e48\u529e\uff1f\u4e24\u70b9\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\uff0c\u5355\u72ec\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u67d0\u795e\u7287\u7ed3\u8bba\uff1a\u601d\u8def\u5f88\u660e\u4e86\uff0c\u5b9e\u73b0\u5f88\u8650\u5fc3\n\n\u9996\u5148\u8981\u624b\u63a8\u4e00\u53d1\u6570\u5b66\u7ed3\u8bba\uff0c\u5c31\u4e0d\u5728\u8fd9\u91cc\u8bc1\u4e86\u3002\n```\n\u4e24\u70b9(x1,y1)(x2,y2)\u6c42\u8fc7\u4e24\u70b9\u76f4\u7ebfAx+By+C=0\n  A=y2-y1 B=x1-x2 C=x2*y1-x1*y2 \n  \n\u4e24\u70b9(x1,y1)(x2,y2)\u6c42\u4e24\u70b9\u95f4\u7684\u5bf9\u79f0\u8f74Ax+By+C=0\n  A=x1-x2 B=y1-y2 C=-((x1+x2)(x1-x2)+(y1+y2)(y1-y2))/2\n  \n\u6c42(x',y')\u5173\u4e8e\u76f4\u7ebf Ax+By+C=0 \u7684\u5bf9\u79f0\u70b9(x0,y0) \n  \u8bbe k=-2*(A*x'+B*y'+C)/(A*A+B*B);\n  x0=x'+k*A; \n  y0=y'+k*B;\n\n```\n$O(n)$ \u5224\u65ad\u7684\u65b9\u6cd5\u662f\u679a\u4e3e\u4e00\u4e2a\u70b9\uff0c\u6c42\u51fa\u5b83\u7684\u5bf9\u79f0\u70b9\uff0c\u5982\u679c\u5bf9\u79f0\u70b9\u7684\u4f4d\u7f6e\u4e0a\u6709\u70b9\uff0c\u5c31\u7ee7\u7eed\uff1b\u5426\u5219\u8fd9\u6761\u76f4\u7ebf\u4e0d\u5408\u6cd5\uff1b\u6216\u8005\u5b83\u7684\u5bf9\u79f0\u70b9\u6839\u672c\u6ca1\u6709\u843d\u5230\u6574\u70b9\u4e0a\u6216\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u4e5f\u4f1a\u4e0d\u5408\u6cd5\n\u3002\n\n\u56e0\u4e3a\u5750\u6807\u6709\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u628a\u6240\u6709\u5750\u6807\u6574\u4f53\u52a0\u4e0a1w\u3002\n\n\u8981\u8bb0\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u6709\u70b9\uff0c\u8981\u5f00\u4e00\u4e2a2w*2w\u7684\u5e03\u5c14\u6570\u7ec4\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7206\u7a7a\u95f4(\u5927\u6982\u9760\u4fe1\u4ef0)\u3002\n\n\u53e6\u5916\uff0c\u7cbe\u5ea6\u8981\u5f00\u52301e-10\u6240\u6709\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define eps 1e-10\nusing namespace std;\nint n,cnt,x[100100],y[100100];\nbool map[20001][20001];\nbool dy(double x,double y){return ((x-y<=eps)||(y-x<=eps));}\nbool is(double A,double B,double C){//\u5224\u65ad\u67d0\u6761\u76f4\u7ebf\u662f\u5426\u662f\u5bf9\u79f0\u8f74 \n\tfor(int i=1;i<=n;i++){\n\t\t/*\n    \t\t\u6c42(x',y')\u5173\u4e8e\u76f4\u7ebf Ax+By+C=0 \u7684\u5bf9\u79f0\u70b9(x0,y0) \n    \t\t\u8bbe k=-2*(A*x'+B*y'+C)/(A*A+B*B);\n    \t\tx0=x'+k*A;\n    \t\ty0=y'+k*B;\n\t\t*/\n        double k=-2*(double)(A*x[i]+B*y[i]+C)/(A*A+B*B);\n        double xo=x[i]+k*A;int x0=round(xo);\n        double yo=y[i]+k*B;int y0=round(yo);\n        if(!dy(x0,xo)||!dy(y0,yo)) return 0;//\u4e0d\u662f\u6574\u70b9 \n        if(x0>20000||y0>20000) return 0;//\u8d8a\u754c \n        if(!map[x0][y0]) return 0;\n    }\n    return 1;\n}\nbool check(int a,int b){//\u4ee5\u4e24\u70b9\u4e3a\u4e00\u5bf9\u5bf9\u79f0\u70b9 \n    //A=x1-x2 B=y1-y2 C=-((x1+x2)(x1-x2)+(y1+y2)(y1-y2))/2\n    double A=x[a]-x[b];\n    double B=y[a]-y[b];\n    double C=(double)-((x[a]*x[a]-x[b]*x[b])+(y[a]*y[a]-y[b]*y[b]))/2;\n    if(a!=1&&A*x[1]+B*y[1]+C!=0) return 0;\n    return is(A,B,C);\n}\nbool ok(int a,int b){//\u4ee5\u4e24\u70b9\u6240\u5728\u76f4\u7ebf\u4e3a\u5bf9\u79f0\u8f74 \n    //A=y2-y1 B=x1-x2 C=x2*y1-x1*y2\n    int A=y[b]-y[a];\n    int B=x[a]-x[b];\n    int C=x[b]*y[a]-x[a]*y[b];\n    return is(A,B,C);\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    cin>>x[i]>>y[i],x[i]+=10000,y[i]+=10000,\n    map[x[i]][y[i]]=1;\n    for(int i=2;i<=n;i++) cnt+=check(1,i);\n    for(int i=2;i<n;i++) cnt+=check(i,n);\n    cout<<cnt+ok(1,n);\n}\n```",
        "postTime": 1535551041,
        "uid": 57304,
        "name": "jzzcjb",
        "ccfLevel": 0,
        "title": "\u5bf9\u79f0\u6027Symmetry \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\u697c\u4e0a\u5df2\u7ecf\u8bf4\u5f97\u662f\u5426\u8be6\u7ec6\u4e86,\u6211\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u79bb\u6563\u5316\n```\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int MAXX=2010;\nconst double eps=1e-8;\nint n,x[MAXX],y[MAXX],a[MAXX<<1];\nint xx[MAXX*10],yy[MAXX*10];\nint tot,ans;\nbool MAP[MAXX][MAXX];\ninline bool check(double a,double b){\n    if(fabs(a-b)<=eps)return 1;\n    else return 0;\n}\ninline void judge(int a,int b,double A,double B,double C){\n    bool flag=0;\n    for(int j=1;j<=n;++j){\n          if(j==a||j==b)continue;\n          double T=(A*(double)x[j]+B*(double)y[j]+C)/(A*A+B*B);\n          double x0=x[j]-2.0*A*T;\n          double xxx1=round(x0);\n          int xxx2=round(x0);\n          double y0=y[j]-2.0*B*T;\n          double yyy1=round(y0);\n          int yyy2=round(y0);\n          if(!check(x0,xxx1)||!check(y0,yyy1)){\n          \tflag=1;\n          \tbreak;\n          }\n          if(xxx2>10000||xxx2<-10000||yyy2>10000||yyy2<-10000){\n          \tflag=1;\n          \tbreak;\n          }\n          if(!MAP[xx[xxx2+10000]][yy[yyy2+10000]]){\n          \tflag=1;\n          \tbreak;\n          }\n      }\n      if(!flag)ans++;\n}//\u68c0\u67e5\u5bf9\u79f0\u8f74\u662f\u5426\u5408\u6cd5\nint main(){\n   scanf(\"%d\",&n);\n   for(int i=1;i<=n;++i){\n   \t  scanf(\"%d%d\",&x[i],&y[i]);\n   \t  a[++tot]=x[i];\n   \t  a[++tot]=y[i];\n   }\n   sort(a+1,a+tot+1);\n   int m=unique(a+1,a+tot+1)-a-1;\n   for(int i=1;i<=n;++i){\n   \t xx[x[i]+10000]=lower_bound(a+1,a+m+1,x[i])-a;\n   \t yy[y[i]+10000]=lower_bound(a+1,a+m+1,y[i])-a;\n   \t MAP[xx[x[i]+10000]][yy[y[i]+10000]]=1;\n   }\n   for(int i=2;i<=n;++i){\n   \t  double x1=(double)x[1];\n   \t  double y1=(double)y[1];\n   \t  double x2=(double)x[i];\n   \t  double y2=(double)y[i];\n      double A=x2-x1;\n      double B=y2-y1;\n      double C=0.5*((x1-x2)*(x1+x2)+(y1-y2)*(y1+y2));\n      judge(1,i,A,B,C);\n   }//ok\n   for(int i=3;i<=n;++i){\n      double x1=(double)x[2];\n   \t  double y1=(double)y[2];\n   \t  double x2=(double)x[i];\n   \t  double y2=(double)y[i];\n      double A=x2-x1;\n      double B=y2-y1;\n      double C=0.5*((x1-x2)*(x1+x2)+(y1-y2)*(y1+y2));\n      if(!check(A*x[1]+B*y[1]+C,0))continue;\n      judge(2,i,A,B,C);\n   }//ok\n   double B=x[2]-x[1];\n   double A=y[1]-y[2];\n   double C=x[1]*y[2]-y[1]*x[2];\n   judge(1,2,A,B,C);\n   cout<<ans<<endl;\n   return 0;\n}\n```",
        "postTime": 1536916589,
        "uid": 56838,
        "name": "wangjyqh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3046 \u3010[USACO12FEB]\u5bf9\u79f0\u6027Symmetry\u3011"
    }
]