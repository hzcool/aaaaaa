[
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u5e94\u8be5\u7b97\u4e8c\u5206\u56fe\u5339\u914d\u4e2d\u6bd4\u8f83\u6c34\u7684\u9898\u76ee\u4e86\u3002\n\n\u56e0\u4e3a\u5c06\u68cb\u76d8\u9ed1\u767d\u76f8\u95f4\u67d3\u8272\u540e\u53d1\u73b0\uff0c\u53ea\u6709\u4e0d\u540c\u989c\u8272\u7684\u4f4d\u7f6e\u7684\u653b\u51fb\u88c5\u7f6e\u624d\u4f1a\u4e92\u76f8\u653b\u51fb\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u6c42\u6700\u5927\u70b9\u6570\u72ec\u7acb\u96c6=\u603b\u70b9\u6570-\u6700\u5927\u5339\u914d\u6570\u3002\u7528dinic\u5957\u6a21\u677f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define MAXN 40030\n#define MAXM 400300\n#define Rint register int\n#define INF 0x7f7f7f7f\nusing namespace std;\nconst int dx[] = {-2, -1, 1, 2, 2, 1, -1, -2}, dy[] = {-1, -2, -2, -1, 1, 2, 2, 1};\ninline int min(int a, int b){return a < b ? a : b;}\nint n, m, s, t, oked[203][203], head[MAXN], to[MAXM], cap[MAXM], nxt[MAXM];\ninline int get(int i, int j){\n    return (i - 1) * n + j; \n}\ninline void add(int a, int b, int c){\n    static int cnt = -1;\n    to[++ cnt] = b;cap[cnt] = c;nxt[cnt] = head[a];head[a] = cnt;\n    to[++ cnt] = a;cap[cnt] = 0;nxt[cnt] = head[b];head[b] = cnt;\n}\nint cur[MAXN], dep[MAXN], front, rear, q[MAXN];\ninline bool bfs(){\n    memcpy(cur, head, sizeof cur);\n    memset(dep, -1, sizeof dep);\n    front = rear = 0;\n    q[rear ++] = s;\n    dep[s] = 0;\n    while(front < rear){\n        int now = q[front ++];\n        for(Rint i = head[now];~i;i = nxt[i])\n            if(dep[to[i]] == -1 && cap[i]){\n                dep[to[i]] = dep[now] + 1;\n                q[rear ++] = to[i];\n            }\n    }\n    return ~dep[t];\n}\ninline int dinic(int now, int limit){\n    if(!limit || now == t) return limit;\n    int flow = 0, f;\n    for(Rint i = cur[now];~i;i = nxt[i]){\n        cur[now] = i;\n        if(dep[to[i]] == dep[now] + 1 && (f = dinic(to[i], min(limit, cap[i])))){\n            flow += f;\n            limit -= f;\n            cap[i] -= f;\n            cap[i ^ 1] += f;\n            if(!limit) break;\n        }\n    }\n    return flow;\n}\nint maxflow;\nint main(){\n    scanf(\"%d\", &n);\n    memset(head, -1, sizeof head);\n    s = n * n + 1;t = s + 1;\n    char str[203];\n    for(Rint i = 1;i <= n;i ++){\n    \tscanf(\"%s\", str + 1);\n    \tfor(Rint j = 1;j <= n;j ++)\n    \t\tm += (oked[i][j] = str[j] - '0');\n    }\n    maxflow = n * n - m;\n    for(Rint i = 1;i <= n;i ++)\n        for(Rint j = 1;j <= n;j ++)\n            if(!oked[i][j]){\n                if((i + j) & 1){\n                    add(s, get(i, j), 1);\n                    for(Rint k = 0;k < 8;k ++){\n                        int nx = i + dx[k], ny = j + dy[k];\n                        if(nx >= 1 && nx <= n && ny >= 1 && ny <= n && !oked[nx][ny])\n                            add(get(i, j), get(nx, ny), INF);\n                    }\n                }\n                else add(get(i, j), t, 1);\n            }\n    while(bfs()) maxflow -= dinic(s, INF);\n    printf(\"%d\", maxflow);\n}\n```",
        "postTime": 1544840153,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u7528\u5230\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u8bf7\u53bb[P3386](https://www.luogu.org/problemnew/solution/P3386)\u5b66\u4e60\u4e00\u4e0b\n____\n1.\u8fd9\u9898\u9996\u5148\u8981\u60f3\u5230\u67d3\u8272\uff0c\u5c31\u662f\u628a\u77e9\u9635\u50cf\u68cb\u76d8\u4e00\u6837\u9ed1\u767d\u67d3\u8272\u3002\u4ee3\u7801\u5b9e\u73b0\u8003\u8651\u884c\u5217\u548c\u5947\u5076\u6027\uff08\u5411\u4e0a\u4e00\u683c\u4e0d\u540c\u8272\uff0c\u5411\u4e0a\u4e8c\u4e2a\u540c\u8272\uff1b\u659c\u4e0a\u65b9\uff0c\u4e5f\u5c31\u662f\u6a2a\u4e00\u7ad6\u4e00\u540c\u8272\uff09\u3002\n\n\u5224\u65ad\u9ed1\u767d\u4ee3\u7801\u5982\u4e0b:\n```cpp\nx+y&1//x\u662f\u884c\uff0cy\u662f\u5217\n```\n\n\u7136\u540e\u53d1\u73b0\u88c5\u7f6e\u53ea\u80fd\u653b\u51fb\u4e0d\u540c\u8272\u533a\u57df\uff08\u8fd9\u624d\u662f\u67d3\u8272\u7684\u76ee\u7684\uff1a\u5c06\u77e9\u9635\u8f6c\u5316\u4e3a\u4e8c\u5206\u56fe\uff09\n___\n2.\u5efa\u6a21\u8f6c\u6362\n\n\u6700\u540e\u80fd\u653e\u7684\u88c5\u7f6e\u6570 = \u521d\u59cb\u6ca1\u6709\u653e\u969c\u788d\u7684\u4f4d\u7f6e\u6570 - \u6700\u540e\u4e0d\u80fd\u653e\u88c5\u7f6e\u7684\u4f4d\u7f6e\u6570\n\n\u7531\u4e8e\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u663e\u7136\u6709\u4e8c\u5206\u56fe\u6700\u5c0f\u9876\u70b9\u8986\u76d6 = \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u8f6c\u6362\u4e3a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u6216\u7f51\u7edc\u6d41\u5747\u53ef\u89e3\u51b3\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u5308\u7259\u5229\u7b97\u6cd5\u3002\n___\n3.\u7b97\u6cd5\u8fc7\u7a0b\n\n(1)\u8bfb\u5165\u7684\u540c\u65f6\u7d2f\u52a0\u70b9\u7684\u7f16\u53f7/\u8ba1\u7b97\u65e0\u969c\u788d\u70b9\u7684\u4e2a\u6570/\u524d\u5411\u661f\u8fde\u8fb9\n\n(2)\u5224\u65ad\u884c\u5217\u548c\u7684\u5947\u5076\u6027\uff0c\u5982\u679c\u4e3a\u5947\u5c31\u8dd1\u4e00\u904dfind\u51fd\u6570\u3002\n\n(3)\u8f93\u51fa\n___\n4.\u7b97\u6cd5\u7ec6\u8282\n\n(1)\u8bfb\u5165\u77e9\u9635\u7528scanf\uff0c\u7c7b\u578b%1d\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\n\n(2)\u8fde\u8fb9\u53ea\u9700\u8981\u5411\u4e0b\u8fb9\u8fde\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u5df2\u7ecf\u8bfb\u5165\u4e86\uff1b\u8fd8\u6709\u8fde\u8fb9\u65f6\u5224\u4e00\u4e0b\u8fb9\u754c\u3002\n\n___\n5.\u4ee3\u7801(c++)\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct edge{int to,next;}e[400010];\nbool book[40050],map[205][205];\nint cnt,num[205][205],head[40050],match[40050];\nint dir1[4]={1,2,2,1},dir2[4]={2,1,-1,-2};\nvoid add(int x,int y)\n{\n    e[++cnt].next=head[x];\n    e[cnt].to=y;\n    head[x]=cnt;\n}\nbool dfs(int x)\n{\n    int y,i;\n    for(i=head[x];i;i=e[i].next)\n    {\n    \ty=e[i].to;\n        if(book[y])continue;\n        book[y]=1;\n        if(!match[y]||dfs(match[y]))\n        {\n            match[y]=x;\n            return 1;\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int n,sum=0,ans=0,tot=0,i,j,k;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;++i)\n    for(j=1;j<=n;++j)\n    {\n        scanf(\"%1d\",&map[i][j]);\n        num[i][j]=++tot;sum+=(!map[i][j]);\n        if(!map[i][j])\n        for(k=0;k<4;++k)\n        if((i>dir1[k])&&(j>dir2[k])&&(j-dir2[k]<=n)&&(!map[i-dir1[k]][j-dir2[k]]))\n        {\n            add(num[i][j],num[i-dir1[k]][j-dir2[k]]);\n            add(num[i-dir1[k]][j-dir2[k]],num[i][j]);\n        }\n    }\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    if((i+j&1)&&!map[i][j])\n    {\n    \tmemset(book,0,sizeof(book));\n        ans+=dfs(num[i][j]);\n    }\n    printf(\"%d\",sum-ans);\n    return 0;\n}\n```\n",
        "postTime": 1552481339,
        "uid": 53264,
        "name": "zhangyuxing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a $n \\times n$ \u7684 $01$ \u77e9\u9635\uff0c\u5176\u4e2d\u4f60\u53ef\u4ee5\u5728 $0$ \u7684\u4f4d\u7f6e\u653e\u7f6e\u653b\u51fb\u88c5\u7f6e\u3002\u6bcf\u4e00\u4e2a\u653b\u51fb\u88c5\u7f6e $(x,y)$ \u90fd\u53ef\u4ee5\u6309\u7167\u201c\u65e5\u201d\u5b57\u653b\u51fb\u5176\u5468\u56f4\u7684 $8$ \u4e2a\u4f4d\u7f6e\u3002\u6c42\u5728\u88c5\u7f6e\u4e92\u4e0d\u653b\u51fb\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u591a\u5c11\u4e2a\u88c5\u7f6e\u3002\n\n$(1 \\leq n \\leq 200)$\n\n## Solution\n\n\u4e0e **\u7f51\u7edc\u6d41 24 \u9898** \u4e2d\u7684 **\u9a91\u58eb\u5171\u5b58\u95ee\u9898** \u51e0\u4e4e\u4e00\u6837\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u68cb\u76d8\u67d3\u8272\uff0c\u5f97\u5230\n\n![VuqMYd.png](https://s2.ax1x.com/2019/05/29/VuqMYd.png)\n\n\u5bf9\u4e8e\u683c\u5b50 $(x,y)$\uff0c\u82e5 $x + y$ \u662f\u5947\u6570\uff0c\u5219\u8be5\u683c\u5b50\u4e3a\u767d\u8272\uff0c\u5426\u5219\u4e3a\u9ed1\u8272\u3002\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u653e\u5728\u767d\uff08\u9ed1\uff09\u8272\u683c\u5b50\u4e0a\u7684\u653b\u51fb\u88c5\u7f6e\u53ea\u80fd\u653b\u51fb\u5230\u9ed1\uff08\u767d\uff09\u8272\u683c\u5b50\u3002\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u6211\u4eec\u628a\u767d\u8272\u683c\u5b50\u548c\u9ed1\u8272\u683c\u5b50\u5206\u6210\u4e24\u90e8\u5206\u3002\n\n\u5982\u679c\u67d0\u4e2a\u767d\u8272\u683c\u5b50\u53ef\u4ee5\u653b\u51fb\u5230\u67d0\u4e2a\u9ed1\u8272\u683c\u5b50\uff0c\u5219\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u4e00\u6761\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u683c\u5b50\u53ea\u80fd\u53d6\u5176\u4e2d\u4e00\u4e2a\uff08\u5426\u5219\u4f1a\u4e92\u76f8\u653b\u51fb\uff09\uff0c\u6240\u4ee5\u95ee\u9898\u53d8\u4e3a\u6c42\u8fd9\u4e2a\u4e8c\u5206\u56fe\u7684 **\u6700\u5927\u72ec\u7acb\u96c6** \u3002\n\n**\u6700\u5927\u72ec\u7acb\u96c6 = \u603b\u70b9\u6570 - \u6700\u5c0f\u70b9\u8986\u76d6 = \u603b\u70b9\u6570 - \u6700\u5927\u5339\u914d\u6570**\n\n\u81f3\u4e8e\u4e0d\u80fd\u653e\u653b\u51fb\u88c5\u7f6e\u7684\u683c\u5b50\uff0c\u6211\u4eec\u4e0d\u628a\u5b83\u5f53\u505a\u4e8c\u5206\u56fe\u4e2d\u7684\u70b9\u5373\u53ef\uff0c\u6700\u540e\u7b54\u6848\u8981\u51cf\u53bb\u8fd9\u4e9b\u70b9\u3002\n\n\u6240\u4ee5\u7528 $\\rm dinic$ \u8dd1\u4e00\u904d\u6700\u5c0f\u5272\uff08\u6700\u5927\u6d41\uff09\u5c31\u80fd\u591f\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ninline void readDigit(bool &x) {\n    x = 0;\n    char c = getchar();\n    for (; !isdigit(c); c = getchar());\n    x = c ^ 48;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXP = 200, MAXN = 5e4, MAXM = 1e6, INF = 0x3f3f3f3f;\nconst int dx[8] = { 1, 2, -1, -2, -1, 2, 1, -2 };\nconst int dy[8] = { 2, 1, -2, -1, 2, -1, -2, 1 };\nint n, tot = 1, sum, id[MAXP + 5][MAXP + 5], head[MAXN + 5];\nint cur[MAXN + 5], depth[MAXN + 5];\nbool f[MAXP + 5][MAXP + 5];\nstruct Edge {\n    int next, to, dis;\n} e[MAXM + 5];\n\ninline void addEdge(int u, int v, int w) {\n    e[++tot] = (Edge) { head[u], v, w };\n    head[u] = tot;\n}\n\ninline void build(int x, int y) {\n    for (int i = 0; i < 8; ++i) {\n        int tx = x + dx[i], ty = y + dy[i];\n        if (tx < 1 || ty < 1 || tx > n || ty > n || f[tx][ty]) continue;\n        addEdge(id[x][y], id[tx][ty], INF), addEdge(id[tx][ty], id[x][y], 0);\n        //\u5982\u679c (x,y) \u80fd\u653b\u51fb\u5230\u70b9 (tx,ty)\uff0c\u5219\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9 \n    }\n}\n\ninline bool bfs(int s, int t) {//\u627e\u589e\u5e7f\u8def \n    for (int i = 0; i <= t; ++i) cur[i] = head[i];\n    memset(depth, 0, sizeof (depth));\n    queue<int> q;\n    depth[s] = 1;\n    q.push(s);\n    for (; !q.empty(); ) {\n        int u = q.front();\n        q.pop();\n        for (int v, w, i = head[u]; v = e[i].to, w = e[i].dis, i; i = e[i].next) {\n            if (depth[v] || !w) continue;\n            depth[v] = depth[u] + 1;\n            if (v == t) return 1;\n            q.push(v);\n        }\n    }\n    return 0;\n}\n\nint dinic(int u, int t, int flow) {\n    if (u == t) return flow;\n    int rest = flow;\n    for (int v, w, i = cur[u]; v = e[i].to, w = e[i].dis, i && rest; i = e[i].next) {\n        cur[u] = i;//\u5f53\u524d\u5f27\u4f18\u5316 \n        if (depth[v] != depth[u] + 1 || !w) continue;\n        int k = dinic(v, t, min(rest, w));\n        if (!k) depth[v] = 0;\n        else {\n            e[i].dis -= k;\n            e[i ^ 1].dis += k;\n            rest -= k;\n        }\n    }\n    return flow - rest;\n}\n\ninline int minCut(int s, int t) {//\u6c42\u6700\u5c0f\u5272 \n    int res = 0;\n    for (; bfs(s, t); ) res += dinic(s, t, INF);\n    return res;\n}\n\nint main() {\n    read(n);\n    int s = 0, t = n * n + 1;//\u8d85\u7ea7\u6e90\u70b9 s \u4e0e \u8d85\u7ea7\u6c47\u70b9 t \n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j) {\n            readDigit(f[i][j]);\n            sum += f[i][j];//\u4e0d\u80fd\u653e\u653b\u51fb\u88c5\u7f6e\u7684\u70b9\u7684\u6570\u91cf \n        }\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j) {\n            id[i][j] = (i - 1) * n + j;//\u70b9\u7684\u7f16\u53f7\n            if (f[i][j]) continue;\n            if ((i + j) & 1)//\u6e90\u70b9\u5411\u767d\u8272\u683c\u5b50\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9 \n                addEdge(s, id[i][j], 1), addEdge(id[i][j], s, 0);\n            else //\u9ed1\u8272\u683c\u5b50\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9 \n                addEdge(id[i][j], t, 1), addEdge(t, id[i][j], 0);\n        }\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= n; ++j)\n            if ((i + j) & 1) build(i, j);//\u767d\u8272\u683c\u5b50\u4e0e\u9ed1\u8272\u683c\u5b50\u8fde\u8fb9 \n    write(n * n - sum - minCut(s, t));//\u6700\u5927\u72ec\u7acb\u96c6 \n    putchar('\\n');\n    return 0;\n}\n```\n\n",
        "postTime": 1559136476,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "## P4304 [TJOI2013]\u653b\u51fb\u88c5\u7f6e\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/P4304)\n\n## \u9898\u610f\n- \u7ed9\u51fa\u4e00\u4e2a 01 \u77e9\u9635\uff0c\u53ef\u4ee5\u5728 0 \u5904\u653e\u7f6e\u653b\u51fb\u88c5\u7f6e\u3002\n\n- \u6bcf\u4e2a\u653b\u51fb\u88c5\u7f6e\u4ee5 \u201c \u65e5 \u201d \u5b57\u653b\u51fb\u5468\u56f4\uff0c\u8981\u6c42\u6240\u6709\u653b\u51fb\u88c5\u7f6e\u4e92\u76f8\u653b\u51fb\u4e0d\u5230\u3002\n\n## \u5206\u6790\n\u53ef\u4ee5\u628a\u8fd9\u4e2a 01 \u77e9\u9635\u5f53\u4f5c\u4e00\u4e2a\u9ed1\u767d\u76f8\u95f4\u7684\u68cb\u76d8\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/523gyu3z.png)\n\n\u4e0d\u96be\u53d1\u73b0\u540c\u989c\u8272\u7684\u70b9\u662f\u65e0\u6cd5\u4e92\u76f8\u653b\u51fb\u7684\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u628a\u9ed1\u70b9\u548c\u767d\u70b9\u5206\u4e3a\u4e24\u4e2a\u70b9\u96c6\uff0c\u8fd9\u5c31\u8f6c\u6362\u4e3a\u4e86\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u6700\u5927\u72ec\u7acb\u96c6 = \u603b\u70b9\u6570 - \u6700\u5927\u5339\u914d\uff0c\u8003\u8651\u5230\u8fd9\u9898\u8fd8\u6709\u4e9b\u70b9\u4e0d\u80fd\u8d70\uff0c\u6240\u4ee5\u8fd8\u8981\u51cf\u53bb\u4e0d\u80fd\u8d70\u7684\u70b9\u6570\u3002\n\n## \u505a\u6cd5\n- \u4ece\u9ed1\u8272\u7684\u70b9\u5411\u8d85\u7ea7\u6e90\u70b9\u8fde\u8fb9\uff0c\u767d\u8272\u7684\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u90fd\u4e3a 1\u3002\n\n- \u6bcf\u4e2a\u9ed1\u70b9\u5411\u80fd\u653b\u51fb\u5230\u7684\u767d\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a inf \u7684\u8fb9\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#define N 1000005\n#define M 4000005\n#define inf 1e9\n#define id(i,j) (i-1)*n+j//\u6c42\u51fa\u7f16\u53f7 \n\nusing namespace std;\n\nint ax[8]={1,1,-1,-1,2,2,-2,-2},ay[8]={2,-2,2,-2,1,-1,1,-1};//\u8d70\u65e5\u5b57 \nint n,m,s,t,tot=1,ans,sum,now,cn;\nint dep[N],head[N],lnk[N];\nbool map[1005][1005];\nstruct node{\n\tint next,to,val;\n}e[M];\n\ninline int read(){\n    int x=0,k=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')k=-1;c=getchar();}\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*k;\n}\n\ninline void add(int u,int v,int w){\n\te[++tot].to=v;\n\te[tot].val=w;\n\te[tot].next=head[u];\n\thead[u]=tot;\n\te[++tot].to=u;\n\te[tot].val=0;\n\te[tot].next=head[v];\n\thead[v]=tot;\n}\n\ninline int bfs(int s,int t){\n\tmemset(dep,0,sizeof(dep));\n\tmemcpy(lnk,head,sizeof(head));\n\tqueue <int> q;\n\tq.push(s);\n\tdep[s]=1;\n\tint u,v;\n\twhile(!q.empty()){\n\t\tu=q.front(); q.pop();\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tv=e[i].to;\n\t\t\tif(e[i].val && !dep[v]){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\n\nint dfs(int u,int t,int into){\n\tif(u==t) return into;\n\tint out=0,res;\n\tint v;\n\tfor(int i=lnk[u];i && out<into;i=e[i].next){\n\t\tv=e[i].to;\n\t\tif(e[i].val && dep[v]==dep[u]+1){\n\t\t\tres=dfs(v,t,min(e[i].val,into-out));\n\t\t\tif(res){\n\t\t\t\te[i].val-=res;\n\t\t\t\te[i^1].val+=res;\n\t\t\t\tout+=res;\n\t\t\t}\n\t\t}\n\t}\n\tif(out<into) dep[u]=-1;\n\treturn out;\n}\n\ninline int dinic(int s,int t){\n\tint ans=0;\n\twhile(bfs(s,t)){\n\t\tint x;\n\t\twhile((x=dfs(s,t,inf))) ans+=x;\n\t}\n\treturn ans;\n} \n\nint main(){\n\tn=read();\n\tint u,v,w,x,y;\n\ts=0; t=n*n+1;\n\tsum=n*n;//\u603b\u70b9\u6570 \n\tchar ch;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\t\n\t\t\tscanf(\" %c\",&ch);\n\t\t\tif(ch=='1'){\n\t\t\t\tcn++;//\u7edf\u8ba1\u4e0d\u80fd\u8d70\u7684\u70b9\u6570 \n\t\t\t\tmap[i][j]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(map[i][j]) continue;\n\t\t\tif((i+j)&1) add(s,id(i,j),1);//\u5047\u8bbe\u5947\u6570\u70b9\u5c31\u662f\u9ed1\u70b9 \n\t\t\telse add(id(i,j),t,1);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif((i+j)&1){\n\t\t\t\tfor(int k=0;k<8;k++){\n\t\t\t\t\tx=i+ax[k]; y=j+ay[k];\n\t\t\t\t\tif(x<1 || x>n || y<1 || y>n || map[x][y]) continue;\n\t\t\t\t\tadd(id(i,j),id(x,y),inf);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t}\n\tprintf(\"%d\",sum-cn-dinic(s,t));\n\treturn 0;\n}\n```",
        "postTime": 1628502427,
        "uid": 224926,
        "name": "\u8ba9\u98ce\u5ffd\u60a0\u4f60",
        "ccfLevel": 0,
        "title": "P4304 [TJOI2013]\u653b\u51fb\u88c5\u7f6e \u9898\u89e3"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\n\u5982\u60f3\u83b7\u53d6\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/88624189),\u4efb\u4f55\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4f5c\u8005\uff01\n\n\n# \u9898\u76ee\u94fe\u63a5\uff1a\nhttps://www.luogu.org/problemnew/show/P4304\n# \u5206\u6790\uff1a\n### \u6700\u5927\u72ec\u7acb\u96c6\n\n\u6700\u5927\u72ec\u7acb\u96c6=\u603b\u70b9\u6570-\u6700\u5927\u5339\u914d\u6570\n\n\u72ec\u7acb\u96c6\uff1a\u70b9\u96c6\uff0c\u56fe\u4e2d\u9009\u4e00\u5806\u70b9\uff0c\u8fd9\u5806\u70b9\u4e24\u4e24\u4e4b\u95f4\u6ca1\u6709\u8fde\u8fb9\n\n\u6700\u5927\u72ec\u7acb\u96c6\uff1a\u5c3d\u53ef\u80fd\u591a\u5f97\u9009\u70b9\uff0c\u4f7f\u5f97\u5176\u6ee1\u8db3\u72ec\u7acb\u96c6\u7684\u6027\u8d28\n\n\u8fd9\u662f\u7f51\u7edc\u6d41\u4e8c\u5206\u56fe\u7ecf\u5178\u9898\u76ee\uff0c\u503c\u5f97\u7ec3\u4e60\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<utility>\n#include<vector>\nusing namespace std;\nint x[9]={0,-1,-2,1,2,-1,-2,1,2};\nint y[9]={0,-2,-1,-2,-1,2,1,2,1};\nstruct ben\n{\n    int first,second;\n};\nvector<ben> v[205][205];\nint a[205][205]; \nben link[205][205];\nint vis[205][205]; \nint t;\nbool find(ben andd)\n{\n    int x=andd.first;\n    int y=andd.second;\n    for(int i=0;i<v[x][y].size();i++)\n    {\n        int p=v[x][y][i].first;\n        int q=v[x][y][i].second;\n        if(vis[p][q]!=t)\n        {\n            vis[p][q]=t;\n            int ls=link[p][q].first;\n            int ls2=link[p][q].second;\n            if((ls==0&&ls2==0)||find(link[p][q]))\n            {\n                link[p][q].first=x;\n                link[p][q].second=y;\n                return 1; \n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            scanf(\"%1d\",&a[i][j]);\n            if(a[i][j]==0)\n            ans++;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            for(int k=1;k<=8;k++)\n            {\n                int xx=i+x[k];\n                int yy=j+y[k];\n                if(xx<=0||xx>n||yy<=0||yy>n)\n                continue;\n                ben tmp;\n                tmp.first=xx;\n                tmp.second=yy;\n                if(a[xx][yy]==0)\n                {\n                    v[i][j].push_back(tmp);\n                }\n            }\n        }\n    }\n    int cnt=0;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(a[i][j]==1)\n            continue;\n            t++;\n            ben tmp;\n            tmp.first=i;\n            tmp.second=j;\n            if(find(tmp))\n            {\n                cnt++;\n            }\n            //else\n            //break;\n        }\n    }\n    printf(\"%d\\n\",ans-cnt/2);\n    return 0;\n} \n```\n\n",
        "postTime": 1552820240,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u7eaa\u5ff5\u4e00\u4e0b\u4e00\u904d\u8fc7~\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4304)\n\n**\u9898\u76ee\u5206\u6790**\uff1a\n\n\u5927\u610f\uff1a\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u9650\u5236\u7684\u524d\u63d0\u548c\u653b\u51fb\u8303\u56f4\u7684\u524d\u63d0\u4e0b\uff0c\u6c42\u80fd\u653e\u7f6e\u7684\u6700\u591a\u88c5\u7f6e\u6570\u3002\n\n\u5c06\u653b\u51fb\u8303\u56f4\u66f4\u76f4\u89c2\u7684\u8868\u793a\u51fa\u6765\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1q57l20q.png)\n\n\u55ef\u3002\u3002\u3002\u7136\u800c\u5e76\u6ca1\u6709\u795e\u9a6c\u7528\u3002\n\n\u770b\u9898\u610f\u5c06\u653b\u51fb\u5750\u6807\u8868\u793a\u51fa\u6765\uff0c\u80af\u5b9a\u6709\u7528\uff0c\u5c1d\u8bd5\u5c06\u6a2a\u7eb5\u5750\u6807\u7684\u503c\u52a0\u8d77\u6765\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0b\u6587\u4ee5**\u548c**\u4ee3\u66ff\u4e3a\u6a2a\u7eb5\u5750\u6807\u4e4b\u548c\uff09\uff1a\n\n\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\uff0c**\u653b\u51fb\u5750\u6807\u7684\u548c\u7684\u5947\u5076\u6027\u6070\u597d\u4e0e\u539f\u5750\u6807\u76f8\u53cd**\uff0c\u4e5f\u5c31\u610f\u5473\u7740**\u548c\u7684\u5947\u5076\u6027\u76f8\u540c\u7684\u4e24\u4e2a\u70b9\u5fc5\u7136\u4e0d\u4f1a\u76f8\u4e92\u653b\u51fb**\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u6e90\u6c47\u70b9\u5c06\u4e24\u79cd\u70b9\u533a\u5206\u5f00\u6765\u3002\n\n\u90a3\u4e48\u5efa\u56fe\u65b9\u5f0f\u5c31\u5f88\u663e\u7136\u4e86\uff1a\n\n- \u5982\u679c\u548c\u4e3a\u5947\u6570\uff0c\u4ece\u6e90\u70b9\u5411\u8be5\u8282\u70b9\u5efa\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a$1$(\u9898\u610f\u6c42\u7684\u662f\u6570\u91cf)\uff1b\n- \u53cd\u4e4b\uff0c\u4ece\u8be5\u8282\u70b9\u5411\u6c47\u70b9\u5efa\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a$1$;\n\n\u518d\u8003\u8651\u516b\u4e2a\u65b9\u5411\u7684\u653b\u51fb\uff1a\n\n\u56e0\u4e3a\u76f8\u4e92\u653b\u51fb\u7684\u70b9\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u6240\u4ee5\u5728\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5efa\u6709\u5411\u8fb9\uff0c\u8fb9\u6743\u4e3a $inf$\u3002\n\n\u8fb9\u6743\u4e3a\u6781\u5927\u503c\u7684\u539f\u56e0\uff1a\u6839\u636e\u7f51\u7edc\u6d41\u7684\u7279\u6027\uff0c\u6700\u5c0f\u5272\u4e0d\u80fd\u5728\u8fb9\u6743\u4e3a\u6781\u5927\u503c\u7684\u8fb9\u4e0a\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u5272\u8fb9\u4e00\u5b9a\u4e0e\u6e90\u70b9\u6216\u6c47\u70b9\u76f8\u8fde\uff0c\u8d4b\u4e3a\u6781\u5927\u503c\u3002\n\n\u6700\u540e\uff0c\u5c31\u662f\u6a21\u677f\u6c42\u6700\u5c0f\u5272\u4e86\u3002\n\n**\u5b8c\u6574\u4ee3\u7801**\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n#define rt register int\n#define int long long\nconst int N = 4e4 + 10, M = 1e6 + 10, inf = 1e10;\nstruct node {\n\tint to,nex;\n}e[M];\nint n,s,t,top,ed,dep[N],head[N],cur[N],tot = 1,f[M],q[N],ans;\nint a[8][2] = {{-1,-2},{-2,-1},{1,-2},{2,-1},{-1,2},{-2,1},{1,2},{2,1}};\nchar map[205][205];\ninline void add(int x,int y,int w) {\n\te[++tot] = (node) {y,head[x]}, f[tot] = w, head[x] = tot;\n\te[++tot] = (node) {x,head[y]}, head[y] = tot; \n}\ninline bool bfs() {\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s] = 0, cur[s] = head[s], q[top = 1] = s; ed = 1;\n\tint now,ver;\n\twhile(top <= ed) {\n\t\tnow = q[top++];\n\t\tfor(rt i = head[now]; i; i = e[i].nex) {\n\t\t\tver = e[i].to;\n\t\t\tif(dep[ver] == -1 && f[i]) {\n\t\t\t\tdep[ver] = dep[now] + 1, cur[ver] = head[ver];\n\t\t\t\tif(ver == t) return 1;\n\t\t\t\tq[++ed] = ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int find(int x,int limit) {\n\tif(x == t) return limit;\n\tint flow = 0, tmp, ver;\n\tfor(rt i = head[x]; i && flow < limit; i = e[i].nex) {\n\t\tver = e[i].to;\n\t\tif(dep[ver] == dep[x] + 1 && f[i]) {\n\t\t\ttmp = find(ver,min(limit - flow,f[i]));\n\t\t\tif(!tmp) dep[ver] = -1;\n\t\t\tf[i] -= tmp, f[i ^ 1] += tmp, flow += tmp; \n\t\t}\n\t}\n\treturn flow;\n}\ninline int dinic() {\n\tint flow;\n\twhile(bfs()) ans -= find(s,inf);\n\treturn ans;\n}\ninline void read(int &x) {\n\tx = 0;\n\tchar s = getchar();\n\twhile(s < '0' || s > '9') s = getchar();\n\twhile(s <= '9' && s >= '0') {x = x * 10 + s - '0', s = getchar(); }\n}\ninline int pos(int x,int y) {\n\treturn n * (x - 1) + y;\n} \nsigned main() {\n\tread(n);\n\ts = n * n + 1, t = s + 1;\n\tint tx,ty;\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tscanf(\"%s\",map[i] + 1);\n\t\tfor(rt j = 1; j <= n; j ++) {\n\t\t\tif(map[i][j] == '1') continue;\n\t\t\tans ++;\n\t\t\tif((i + j) & 1) {\n\t\t\t\tadd(s,pos(i,j),1);\n\t\t\t\tfor(rt k = 0; k < 8; k ++) {\n\t\t\t\t\ttx = i +a[k][0], ty = j +a[k][1];\n\t\t\t\t\tif(tx < 1 || ty < 1 || tx > n || ty > n || map[tx][ty] == '1') continue;//\u6ce8\u610f\u8981\u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u80fd\u653e\u7f6e\u88c5\u7f6e \n\t\t\t\t\tadd(pos(i,j),pos(tx,ty),inf);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse add(pos(i,j),t,1);\n\t\t}\n\t}\n\tprintf(\"%d\",dinic());\n\treturn 0; \n}\n```\n",
        "postTime": 1609321113,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013] \u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "### \u8fd9\u662fGD\u521d\u4e8c\u849f\u84bb $lolte$ \u7684\u9898\u89e3\n\n\u5728\u66b4\u5237\u7f51\u7edc\u6d4124\u9898\u7684\u65f6\u5019\uff0c\u4e00\u4f4ddalao\u8ddf\u6211\u8bf4\uff1a\n\n> \u6709\u4e00\u9053\u53cc\u500d\u7ecf\u9a8c\u9898\uff0c\u5c31\u662f\u8fd9\u9053\u4ec0\u4e48\u653b\u51fb\u88c5\u7f6e\n\n\u7136\u540e\u6211\u5c31\u8fc7\u6765\u8fd9\u4e86\u3002\n\n[P3355 \u9a91\u58eb\u5171\u5b58\u95ee\u9898(\u53cc\u500d\u7ecf\u9a8c)](https://www.luogu.org/problemnew/show/P3355)\n\n---\n\n### \u9898\u610f\uff1a\n- \u5728\u4e00\u4e2a $n*n$ \u7684\u68cb\u76d8\u4e2d\uff0c\u6709\u4e9b\u53ef\u4ee5\u653e\uff0c\u6709\u4e9b\u4e0d\u80fd\u653e\u3002\u6c42\u6700\u591a\u80fd\u653e\u591a\u5c11\u7269\u54c1\u4f7f\u5f97\u5b83\u4eec\u5404\u81ea\u4e0d\u5728\u201c\u65e5\u201d\u5b57\u5f62\u7684\u4f4d\u7f6e\u4e0a\u3002\n\n### \u8f6c\u6362\uff1a\n\n- \u5c06\u6bcf\u4e2a\u80fd\u653e\u7684\u70b9\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\uff0c\u4e0d\u96be\u53d1\u73b0\u82e5\u5404\u81ea\u4f1a\u4e92\u76f8\u653b\u51fb\uff0c\u5219\u5b83\u4eec\u5fc5\u5b9a\u4e0d\u540c\u8272\u3002\u663e\u7136\uff0c\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\u3002\n\n- \u6700\u540e\u80fd\u653e\u88c5\u7f6e\u6570 $=$ \u521d\u59cb\u80fd\u653e\u4f4d\u7f6e\u6570 $-$ \u6700\u540e\u4e0d\u80fd\u653e\u88c5\u7f6e\u7684\u4f4d\u7f6e\u6570\n\n- \u5219\u7531\u4e8e\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u663e\u7136\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\u6700\u5c0f\u9876\u70b9\u8986\u76d6 $=$ \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n- \u4e8c\u5206\u56fe\u6216\u8005\u7f51\u7edc\u6d41\u89e3\u51b3\u5373\u53ef\u3002\n\n\u6211\u7528\u4e86\u7f51\u7edc\u6d41\uff1a\n\n- \u5219\u8ba9\u53ef\u653e\u7f6e\u7684\u5f02\u8272\u70b9\u8fde\u8fb9\uff08\u5bb9\u91cf\u4e3a1\uff09\uff0c\u518d\u8ba9\u4e00\u8272\u7684\u70b9\u4e0e\u6e90\u70b9\u76f8\u8fde\uff08\u5bb9\u91cf\u4e3a1\uff09\uff0c\u53e6\u4e00\u8272\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff08\u5bb9\u91cf\u4e3a1\uff09\uff0c\u4e4b\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5373\u53ef\u3002\n\n### code\n\ndinic 99ms \u65e0O2\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;\n    char ch=getchar();\n    for (;ch<'0'||ch>'9';ch=getchar()) f^=(ch=='-');\n    for (;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-'0';\n    return f ? -x : x;\n}\nconst int inf=2147483600,maxn=40100,mov[8][2]={{1,2},{-1,2},{1,-2},{-1,-2},{2,1},{-2,1},{2,-1},{-2,-1}};\nint n,m,dep[maxn],cur[maxn],head[maxn];\nint maxflow=0,q[maxn*10],l,r,cnt=1,s,t;\nbool mp[210][210],inq[maxn],vis;\nstruct node{\n    int to,nxt,w;\n}e[600000];\ninline void add(int u,int v,int w) {\n    ++cnt;\n    e[cnt].to=v; e[cnt].w=w; e[cnt].nxt=head[u]; head[u]=cnt;\n    ++cnt;\n    e[cnt].to=u; e[cnt].w=0; e[cnt].nxt=head[v]; head[v]=cnt;\n}\nbool bfs(){\n    memset(dep,0x3f,sizeof(dep));\n    memset(inq,0,sizeof(inq));\n    memcpy(cur,head,sizeof(head));\n    l=1;r=0;\n    q[++r]=s; inq[s]=1; dep[s]=0;\n    while (l<=r) {\n        int u=q[l++];\n        inq[u]=0;\n        for (int i=head[u];i;i=e[i].nxt) {\n            int v=e[i].to;\n            if (e[i].w && dep[v]>dep[u]+1) {\n                dep[v]=dep[u]+1;\n                if (!inq[v]) {\n                    inq[v]=1;\n                    q[++r]=v;\n                }\n            }\n        }\n    }\n    return dep[t]<9999999;\n}\nint dfs(int u,int flow){\n    if (u==t) {\n        maxflow+=flow;\n        vis=1;\n        return flow;\n    }\n    int goflow=0,used=0;\n    for (int &i=cur[u];i;i=e[i].nxt) {\n        int v=e[i].to;\n        if (e[i].w && dep[v]==dep[u]+1) {\n            goflow=dfs(v,min(flow-used,e[i].w));\n            if (!goflow) continue;\n            e[i].w-=goflow;\n            e[i^1].w+=goflow;\n            used+=goflow;\n            if (used==flow) break;\n        }\n    }\n    return used;\n}\nvoid dinic(){\n    while (bfs()) {\n        vis=1;\n        while (vis) {\n            vis=0;\n            dfs(s,inf);\n        }\n    } \n}\nint main(){\n    n=read();\n    s=n*n+5;\n    t=s+1;\n    for (int i=1;i<=n;++i) {\n    \tfor (int j=1;j<=n;++j) {\n    \t\tscanf(\"%1d\",&mp[i][j]);\n    \t\tif (mp[i][j]) ++m;\n    \t}\n    }\n    for (int i=1;i<=n;++i) {\n        for(int j=1;j<=n;++j) {\n            int pos=(i-1)*n+j;\n            if (mp[i][j]) continue;\n            if ((i+j)&1) {\n                add(pos,t,1);\n                continue;\n            }\n            add(s,pos,1);\n            for (int k=0;k<8;++k) {\n                int nx=i+mov[k][0],ny=j+mov[k][1];\n                if (nx<1||ny<1||nx>n||ny>n||mp[nx][ny]) continue;\n                add(pos,(nx-1)*n+ny,1);\n            }\n        }\n    }\n    dinic();\n    printf(\"%d\\n\",n*n-maxflow-m);\n    return 0;\n}\n```",
        "postTime": 1545285449,
        "uid": 78752,
        "name": "lolte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "|2\t1\t2\t1\t2\t1\t2\t1\t2|\n| -----------------------------: |\n|1\t2\t1\t2\t1\t2\t1\t2\t1|\n|2\t1\t2\t1\t2\t1\t2\t1\t2|\n|1\t2\t1\t2\t1\t2\t1\t2\t1|\n|2\t1\t2\t1\t2\t1\t2\t1\t2|\n|1\t2\t1\t2\t1\t2\t1\t2\t1|\n|2\t1\t2\t1\t2\t1\t2\t1\t2|\n|1\t2\t1\t2\t1\t2\t1\t2\t1|\n|2\t1\t2\t1\t2\t1\t2\t1\t2|\n\n\u89c2\u5bdf\u4e00\u4e0b\uff0c\u53d1\u73b0\u6ee1\u8db3\n\n2\u70b9\u4e0e1\u70b9\u6070\u4e3a\u4e92\u76f8\u4e4b\u95f4\u53ef\u653b\u51fb\u7684\u70b9\n\u6240\u4ee5\u53ea\u8dd11\u70b9\uff08\uff08i^j\uff09&1\uff09\n\n\u5efa\u8fb9\u65f6\u53ea\u5411\u4e0a\u5efa\u53ef\u4ee5\u7701\u4e00\u4e9b\u4e8b\uff0c\u56e0\u4e3a\u4e0a\u65b9\u90fd\u88ab\u8bfb\u5165\u8fc7\n\n\u5269\u4e0b\u5c31\u4ee3\u7801\u4e86\n\n\n```\n//p4303\n#include<bits/stdc++.h>\n```\n```\nusing namespace std;\nstruct nw\n{\n\tint t,n;\n}nx[40050<<3];\nconst int d1[4]={1,2,2,1},d2[4]={2,1,-1,-2};\nbool vis[40050];\nint get_map[205][205],id[205][205],tot,cnt,h[40050],f[40050],n,m;\nint read()\n{\n\tchar c;\n\tc=getchar();\n\twhile(c>'9'||c<'0')\n\t\tc=getchar();\n\treturn c-'0';\n}\nvoid add(int u,int v)\n{\n\tnx[++cnt].n=h[u];\n\tnx[cnt].t=v;\n\th[u]=cnt;\n}\nbool dfs(int x)\n{\n\tfor(int i=h[x];i;i=nx[i].n)\n\t{\n\t\tif(vis[nx[i].t])continue;\n\t\tvis[nx[i].t]=1;\n\t\tif(!f[nx[i].t]||dfs(f[nx[i].t]))\n\t\t{\n\t\t\tf[nx[i].t]=x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint sum,ans;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tget_map[i][j]=read();\n\t\t\tid[i][j]=++tot;\n\t\t\tsum+=(1-get_map[i][j]);\n\t\t\tif(!get_map[i][j])for(int x=0;x<4;x++)\n\t\t\t\tif((i>d1[x])&&(j>d2[x])&&(j-d2[x]<=m)&&(!get_map[i-d1[x]][j-d2[x]]))\n\t\t\t\t{\n\t\t\t\t\tadd(id[i][j],id[i-d1[x]][j-d2[x]]);\n\t\t\t\t\tadd(id[i-d1[x]][j-d2[x]],id[i][j]);\n\t\t\t\t}\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\tif((i^j)&1&&!get_map[i][j])\n\t\t{\n\t\t\tfor(int ii=1;ii<=n*m;ii++)vis[ii]=0;\n\t\t\tans+=dfs(id[i][j]);\n\t\t}\n\tprintf(\"%d\\n\",sum-ans);\n}\n```\n",
        "postTime": 1543629692,
        "uid": 49447,
        "name": "\u6c38\u4e0d\u590d\u884c",
        "ccfLevel": 0,
        "title": "P4304 [TJOI2013]\u653b\u51fb\u88c5\u7f6e"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u67d3\u8272\u4e4b\u540e\u7684\u6700\u5927\u70b9\u72ec\u7acb\u96c6\n\u5148\u9ed1\u767d\u70b9\u67d3\u8272\nS\u5411\u9ed1\u70b9\u90fd\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\u767d\u70b9\u90fd\u5411\u9ed1\u70b9\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\u7136\u540e\u5982\u679c\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u4e3a\u9ed1\u70b9\u548c\u767d\u70b9\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e92\u76f8\u653b\u51fb\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u95f4\u8fde\u8fb9\n\u6700\u5927\u70b9\u72ec\u7acb\u96c6=\u70b9\u6570-\u6700\u5927\u5339\u914d\n\u6700\u5927\u5339\u914d\u7528dinic\u6700\u5927\u6d41\u5b9e\u73b0\n```\n#include<iostream>\n#include<algorithm>\n#include<math.h>\n#include<stdio.h>\n#include<queue>\n#include<string.h>\nusing namespace std;\nconst int S=40001,T=40002;\nconst int dx[23]={0,-2,-1,+1,+2,-2,-1,+1,+2};\nconst int dy[23]={0,-1,-2,-2,-1,+1,+2,+2,+1};\nint head[500003],to[3000003],nxt[3000003],w[3000003],tot;\nchar mp[303][303];\nint d[50005];\nint n;\ninline void add(int x,int y,int z){\n\tto[tot]=y,w[tot]=z,nxt[tot]=head[x],head[x]=tot++;\n\tto[tot]=x,w[tot]=0,nxt[tot]=head[y],head[y]=tot++;\n}\nbool bfs(){\n\tmemset(d,0,sizeof(d));\n\td[S]=1;\n\tqueue<int>q;\n\tq.push(S);\n\twhile(!q.empty()){\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[now];i!=-1;i=nxt[i]){\n\t\t\tif(d[to[i]]==0&&w[i]){\n\t\t\t\td[to[i]]=d[now]+1;\n\t\t\t\tq.push(to[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn d[T]!=0;\n}\nint dfs(int x,int flow){\n\tif(x==T){\n\t\treturn flow;\n\t}\n\tint res=flow;\n\tfor(int i=head[x];i!=-1;i=nxt[i]){\n\t\tif(d[to[i]]==d[x]+1&&w[i]){\n\t\t\tint mx=dfs(to[i],min(res,w[i]));\n\t\t\tres-=mx,w[i]-=mx,w[i^1]+=mx;\n\t\t\tif(!res){\n\t\t\t\treturn flow;\n\t\t\t}\n\t\t}\n\t}\n\treturn flow-res;\n}\ninline int dinic(){\n\tint ans=0;\n\twhile(bfs()){\n\t\tans+=dfs(S,999999);\n\t}\n\treturn ans;\n}\nint main(){\n\tmemset(head,-1,sizeof(head));\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tcin>>mp[i][j];\n\t\t\tif(mp[i][j]=='1'){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif((i+j)%2==1){\n\t\t\t\tadd(S,(i-1)*n+j,1);\n\t\t\t}else{\n\t\t\t\tadd((i-1)*n+j,T,1);\n\t\t\t}\n\t\t}\n\t}\n\tint sum=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(mp[i][j]=='0'){\n\t\t\t\tsum++;\n\t\t\t\tif((i+j)%2==1){\n\t\t\t\t\tfor(int k=1;k<=8;k++){\n\t\t\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\t\t\tif(x>=1&&x<=n&&y>=1&&y<=n&&mp[x][y]=='0'){\n\t\t\t\t\t\t\tadd((i-1)*n+j,(x-1)*n+y,1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<sum-dinic()<<endl;\n\treturn 0;\n}\n/*\n\nin:\n3\n010\n000\n100\n\n*/\n```",
        "postTime": 1521082700,
        "uid": 35083,
        "name": "SWWWWWWWWWind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u5e94\u8be5\u7b97\u4e0d\u4e0a\u7d2b\u5427\u3002~~\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u6709\u4e00\u4e2a01\u77e9\u9635\uff0c\u4f60\u53ef\u4ee5\u57280\u7684\u4f4d\u7f6e\u653e\u4e2d\u56fd\u8c61\u68cb\u4e2d\u7684\u4e00\u5339\u9a6c\uff0c\u6c42\u5728\u4e92\u4e0d\u653b\u51fb\u7684\u60c5\u51b5\u4e0b\u6700\u591a\u80fd\u653e\u591a\u5c11\u5339\u9a6c\u3002\n\n**\u601d\u8def\uff1a**\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u629b\u5f0001\u77e9\u9635\u7684\u95ee\u9898\u4e0d\u7ba1\u3002\n\n\u6211\u4eec\u5bf9\u56fe\u9ed1\u767d\u67d3\u8272\u540e\u770b\u8fd9\u4e2a\u9a6c\u7684\u8d70\u6cd5\u3002\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u4e00\u5339\u9a6c\u5728\u9ed1\u683c\u4e2d\uff0c\u90a3\u4e48\u5b83\u80fd\u653b\u51fb\u5230\u7684\u6240\u6709\u7684\u70b9\u4e00\u5b9a\u90fd\u662f\u767d\u70b9\u3002\u5982\u679c\u4e00\u5339\u9a6c\u5728\u767d\u683c\u4e2d\u540c\u7406\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u56fe\u53d8\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u628a\u53ef\u4ee5\u76f8\u4e92\u653b\u51fb\u7684\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u4e4b\u540e\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u53d8\u6210\u6c42\u6700\u5927\u72ec\u7acb\u70b9\u96c6\u4e86\u3002\n\n\u800c\u6211\u4eec\u77e5\u9053\u6700\u5927\u72ec\u7acb\u70b9\u96c6\u5c31\u7b49\u4e8e\u603b\u70b9\u6570\u51cf\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u4e4b\u540e\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u66f4\u591a\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u3002\n\n**code:**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=205;\nint head[N*N*2],to[N*N*8],nxt[N*N*8],cnt=1,n,ans,tot=0;\nint vis[N*N*2],cp[N*N*2];\nint fx[9]={0,-1,-2,1,2,-1,-2,1,2};\nint fy[9]={0,-2,-1,-2,-1,2,1,2,1};//\u63a7\u5236\u65b9\u5411\u6570\u7ec4\u3002 \nchar s[N][N];\nvoid add(int u,int v){\n\tto[cnt]=v;\n\tnxt[cnt]=head[u];\n\thead[u]=cnt++;\n} \nbool dfs(int x){\n\tfor(int i=head[x];i;i=nxt[i]){\n\t\tint v=to[i];\n\t\tif(vis[v]) continue;\n\t\tvis[v]=true;\n\t\tif(!cp[v]||dfs(cp[v])){\n\t\t    cp[v]=x;\n\t    \treturn true;\n\t\t}\n\t}\n\treturn false;\n}//\u5308\u7259\u5229\u7b97\u6cd5\u677f\u5b50 \nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>s[i]+1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(s[i][j]=='1'){\n\t\t\t    tot++;\n\t\t\t    continue;\n\t\t\t}//\u8bb0\u5f55\u4e0d\u80fd\u653e\u9a6c\u7684\u70b9\u7684\u4e2a\u6570\u3002 \n\t\t\tfor(int k=1;k<=8;k++){\n\t\t\t\tint x=i+fx[k],y=j+fy[k];\n\t\t\t\tif(s[x][y]=='1') continue; \n\t\t\t\tif(x>=1&&x<=n&&y>=1&&y<=n&&(i+j)%2==0) add((i-1)*n+j,(x-1)*n+y+n*n);\n\t\t\t\t//\u5728\u53ef\u4ee5\u76f8\u4e92\u653b\u51fb\u7684\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002 \n\t\t\t} \n\t\t}\n\t}\n\tfor(int i=1;i<=n*n;i++){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tint k=dfs(i);\n\t\tans+=k;//\u7edf\u8ba1\u6700\u5927\u5339\u914d\u6570\u3002 \n\t}\n\tprintf(\"%d\\n\",n*n-tot-ans);//\u8f93\u51fa\u6700\u5927\u72ec\u7acb\u70b9\u96c6=\u603b\u70b9\u6570-\u6700\u5927\u5339\u914d\u6570\u3002 \n\treturn 0;\n}\n```\n",
        "postTime": 1618201729,
        "uid": 300024,
        "name": "miao5",
        "ccfLevel": 4,
        "title": "P4304"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.luogu.com.cn/problem/P4304)\u3002\n# \u9898\u76ee\u7b80\u8ff0\n$n$ \u884c $n$ \u5217\u7684\u77e9\u9635\u4e2d\uff0c\u82e5\u8be5\u70b9\u4e3a $0$ \uff0c\u5219\u53ef\u4ee5\u5b89\u653e\u88c5\u7f6e $(x,y)$ \uff0c\u82e5\u88c5\u7f6e\u4f1a\u653b\u51fb$(x-1,y-2)$ \uff0c $(x-2,y-1)$ \uff0c $(x+1,y-2)$ \uff0c $(x+2,y-1)$ \uff0c $(x-1,y+2)$ \uff0c $(x-2,y+1)$ \uff0c $(x+1,y+2)$ \uff0c $(x+2,y+1)$ \u8fd9\u516b\u4e2a\u4f4d\u7f6e\u7684\u88c5\u7f6e\u3002\u6c42\u6700\u591a\u53ef\u4ee5\u653e\u591a\u5c11\u88c5\u7f6e\u3002\n# \u601d\u8def\n\u6700\u5f00\u59cb\u65f6\uff0c\u6ca1\u5565\u601d\u8def\uff0c\u5c06\u4e00\u4e2a\u88c5\u7f6e\u5728\u4e00\u5f20\u56fe\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u653b\u51fb\u8303\u56f4\u5982\u4e0b\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20201222201256561.png?x-oss-,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZhY2VfdGhlX0JsYXN0,size_16,color_FFFFFF,t_70)\n\n\u7eff\u8272\u70b9\u4e3a\u84dd\u8272\u70b9\u80fd\u591f\u653b\u51fb\u5230\u7684\u70b9\u3002\u53ef\u4ee5\u53d1\u73b0\u5f88\u50cf\u56fd\u9645\u8c61\u68cb\u7684\u68cb\u76d8\uff0c\u8fdb\u4e00\u6b65\u505a\u5982\u4e0b\u67d3\u8272\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20201222201633140.png?x-oss-,type_sYXN0,size_16,color_FFFFFF,t_70)\n\n\u8fd9\u6837\u5bf9\u6bd4\u4e24\u5f20\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u767d\u8272\u70b9\u53ef\u4ee5\u80fd\u591f\u653b\u51fb\u5230\u7684\u70b9\u5168\u90fd\u662f\u9ed1\u8272\u70b9\uff0c\u9ed1\u8272\u70b9\u53ef\u4ee5\u80fd\u591f\u653b\u51fb\u5230\u7684\u70b9\u5168\u90fd\u662f\u767d\u8272\u70b9\u3002\u767d\u8272\u70b9\u4e0e\u767d\u8272\u70b9\u3001\u9ed1\u8272\u70b9\u4e0e\u9ed1\u8272\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u6709\u8054\u7cfb\u3002\n\n\u8fd9\u6837\u7684\u4e24\u4e2a\u540c\u4e00\u96c6\u5408\u5185\u7684\u70b9\u4e92\u4e0d\u5173\u8054\uff0c\u4e14\u6709\u4e24\u4e2a\u96c6\u5408\u7684\u95ee\u9898\u4e0d\u96be\u8f6c\u6362\u6210\u4e8c\u5206\u56fe\u6765\u6c42\u89e3\u3002\u5176\u4e2d\uff0c\u4e0d\u59a8\u8bbe\u767d\u8272\u70b9\u4e3a\u5de6\u90e8\u70b9\uff0c\u9ed1\u8272\u70b9\u4e3a\u53f3\u90e8\u70b9\uff0c\u6784\u5efa\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u6c42\u89e3\u7684\u95ee\u9898\u662f\u6700\u5927\u7684\u4e92\u4e0d\u653b\u51fb\u7684\u88c5\u7f6e\uff0c\u5373\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u95ee\u9898\u3002\u800c\u6700\u5927\u72ec\u7acb\u96c6\u7684\u70b9\u6570\u7b49\u4e8e\u4e8c\u5206\u56fe\u4e2d\u6240\u6709\u70b9\u7684\u4e2a\u6570\u51cf\u53bb\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\uff0c\u8fdb\u800c\u7528\u7f51\u7edc\u6700\u5927\u6d41\u6765\u6c42\u89e3\u3002\n# C++\u4ee3\u7801\n```cpp\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\nusing namespace std;\n#define INF 0x3f3f3f3f\n#define Min(a, b) ((a) < (b) ? (a) : (b))\nvoid Quick_Read(int &N) {\n\tN = 0;\n\tint op = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\n\t\t\top = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tN = (N << 1) + (N << 3) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\tN *= op;\n}\nvoid Read_OneNumber(int &N) {\n\tN = 0;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t\tc = getchar();\n\tN = c ^ 48;\n}\nconst int MAXN = 2e2 + 5;\nconst int MAXM = 4e4 + 5;\nconst int MAXK = 10;\nint color[MAXN][MAXN];\nint addx[MAXK] = {0, -1, -2, 1, 2, -1, -2, 1, 2};\nint addy[MAXK] = {0, -2, -1, -2, -1, 2, 1, 2, 1};\nint n, Sum;\nstruct Node {\n\tint to, val, rev;\n\tNode() {}\n\tNode(int T, int V, int R) {\n\t\tto = T;\n\t\tval = V;\n\t\trev = R; \n\t} \n};\nvector<Node> v[MAXM];\nqueue<int> q;\nint be[MAXM], de[MAXM];\nint s, t;\nbool Bfs_Dinic() {//\u5c06\u6b8b\u91cf\u7f51\u7edc\u5206\u5c42\n\twhile(!q.empty())\n\t\tq.pop();\n\tmemset(de, 0, sizeof(de));\n\tq.push(s);\n\tde[s] = 1;\n\tbe[s] = 0;\n\twhile(!q.empty()) {\n\t\tint now = q.front(); q.pop();\n\t\tint SIZ = v[now].size();\n\t\tfor(int i = 0; i < SIZ; i++) {\n\t\t\tint next = v[now][i].to;\n\t\t\tif(!de[next] && v[now][i].val) {\n\t\t\t\tbe[next] = 0;\n\t\t\t\tde[next] = de[now] + 1;\n\t\t\t\tq.push(next);\n\t\t\t\tif(next == t)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;//\u627e\u4e0d\u5230\u589e\u5e7f\u8def\n}\nint Dfs_Dinic(int now, int flow) {//\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u5bfb\u627e\u589e\u5e7f\u8def\u5e76\u589e\u5e7f\n\tif(now == t || !flow)\n\t\treturn flow;\n\tint surp = flow;\n\tint SIZ = v[now].size();\n\tfor(int i = be[now]; i < SIZ && surp; i++) {\n\t\tbe[now] = i;//\u5f27\u4f18\u5316\n\t\tint next = v[now][i].to;\n\t\tif(v[now][i].val && de[next] == de[now] + 1) {\n\t\t\tint maxnow = Dfs_Dinic(next, Min(surp, v[now][i].val));\n\t\t\tif(!maxnow)\n\t\t\t\tde[next] = -1;\n\t\t\tv[now][i].val -= maxnow;\n\t\t\tv[next][v[now][i].rev].val += maxnow;\n\t\t\tsurp -= maxnow;\n\t\t}\n\t}\n\treturn flow - surp;\n}\nint Dinic() {//\u6700\u5927\u6d41\n\tint res = 0, flow;\n\twhile(Bfs_Dinic())\n\t\twhile(flow = Dfs_Dinic(s, INF))\n\t\t\tres += flow;\n\treturn res;\n}\nint Serial_Number(int i, int j) {//\u6c42\u8be5\u70b9\u7684\u8fb9\u53f7\uff0c\u52c9\u5f3a\u7b97\u4e2ahash\n\treturn (i - 1) * n + j;\n}\nvoid Read() {\n\tQuick_Read(n);\n\ts = 0; t = n * n + 1;\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tRead_OneNumber(color[i][j]);\n\t\t\tSum += !color[i][j];\n\t\t}\n\tfor(int i = 1; i <= n; i++)//\u6784\u5efa\u4e8c\u5206\u56fe\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(color[i][j] || !((i + j) & 1))\n\t\t\t\tcontinue;\n\t\t\tint now = Serial_Number(i, j);\n\t\t\tfor(int k = 1; k <= 8; k++) {\n\t\t\t\tif(i + addx[k] < 1 || i + addx[k] > n || j + addy[k] < 1 || j + addy[k] > n)\n\t\t\t\t\tcontinue;\n\t\t\t\tint next = Serial_Number(i + addx[k], j + addy[k]);\n\t\t\t\tif(color[i][j])\n\t\t\t\t\tcontinue;\n\t\t\t\tint id1 = v[now].size();\n\t\t\t\tint id2 = v[next].size();\n\t\t\t\tv[now].push_back(Node(next, 1, id2));\n\t\t\t\tv[next].push_back(Node(now, 0, id1));\n\t\t\t}\n\t\t}\n\tfor(int i = 1; i <= n; i++)//\u6784\u5efa\u7f51\u7edc\n\t\tfor(int j = 1; j <= n; j++) {\n\t\t\tif(color[i][j])\n\t\t\t\tcontinue;\n\t\t\tint now = Serial_Number(i, j);\n\t\t\tint idn = v[now].size();\n\t\t\tif((i + j) & 1) {\n\t\t\t\tint ids = v[s].size();\n\t\t\t\tv[s].push_back(Node(now, 1, idn));\n\t\t\t\tv[now].push_back(Node(s, 0, ids));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint idt = v[t].size();\n\t\t\t\tv[now].push_back(Node(t, 1, idt));\n\t\t\t\tv[t].push_back(Node(now, 0, idn));\n\t\t\t}\n\t\t}\n}\nvoid Write() {\n\tprintf(\"%d\", Sum - Dinic());//\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\n}\nint main() {\n\tRead();\n\tWrite();\n\treturn 0;\n}\n```",
        "postTime": 1608640498,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u9898\uff0c\u4ed4\u7ec6\u770b\u4e00\u4e0b\u9898\u76ee\uff1a**\u6c42\u5728\u88c5\u7f6e\u4e92\u4e0d\u653b\u51fb\u7684\u60c5\u51b5\u4e0b**\uff0c**\u6700\u591a\u53ef\u4ee5\u653e\u7f6e\u591a\u5c11\u4e2a\u88c5\u7f6e**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u753b\u4e2a\u56fe\uff1a\n\n---\n\n| $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n| $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n| $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ |\n| $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n| $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ |\n| $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n| $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ |\n| $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n| $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ |\n| $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ | $1$ | $0$ |\n\n---\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6807 $0$ \u7684\u70b9\u53ea\u80fd\u88ab\u6807 $1$ \u7684\u70b9\u653b\u51fb\u5230\uff0c\u6807 $1$ \u7684\u70b9\u53ea\u80fd\u88ab\u6807 $0$ \u7684\u70b9\u653b\u51fb\u5230\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u539f\u56fe\u62c6\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n## \u6ce8\u610f\uff01\uff01\uff01\n\u5982\u679c $a$ \u70b9\u53ef\u4ee5\u653b\u51fb\u5230 $b$ \u70b9\uff0c\u90a3\u4e48 $b$ \u70b9\u4e5f\u53ef\u4ee5\u653b\u51fb\u5230 $a$ \u70b9\uff0c\u6240\u4ee5\u5efa\u8fb9\u7684\u65f6\u5019\u8981\u5efa\u53cc\u5411\u8fb9\u3002\n# code\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define MAX_N 1000005\nusing namespace std;\nint n,m,e,cnt,sum,to[MAX_N],next[MAX_N],head[MAX_N],match[MAX_N],vis[MAX_N],o[MAX_N],ans;\nint dx[8]={-2,-2,-1,-1,2,2,1,1};\nint dy[8]={1,-1,2,-2,1,-1,2,-2};\nvoid add(int u,int v){//\u90bb\u63a5\u94fe\u8868\u5b58\u56fe\n\tcnt++;\n\tto[cnt]=v;\n\tnext[cnt]=head[u];\n\thead[u]=cnt;\n}\nbool dfs(int u,int tag){//\u5308\u7259\u5229\uff08\u589e\u5e7f\u8def\uff09\u7b97\u6cd5\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u8986\u76d6\n\tif(vis[u]==tag){\n\t\treturn 0;\n\t}\n\tvis[u]=tag;\n\tfor(int i=head[u];i;i=next[i]){\n\t\tif(!match[to[i]]||dfs(match[to[i]],tag)){\n\t\t\tmatch[to[i]]=u;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tchar x;\n\t\t\tcin>>x;\n\t\t\tif(x=='0'){\n\t\t\t\to[(i-1)*n+j]=1;//\u628a\u5730\u56fe\u538b\u6210\u4e00\u7ef4\n\t\t\t\tsum++;//\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55\u4e0b\u70b9\u6570\u3002\n\t\t\t}else{\n\t\t\t\to[(i-1)*n+j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(o[(i-1)*n+j]){\n\t\t\t\tfor(int k=0;k<8;k++){\n\t\t\t\t\tint u=i+dx[k],v=j+dy[k];\n\t\t\t\t\tif(u>=1&&v>=1&&u<=n&&v<=n&&o[(u-1)*n+v]){//\u5982\u679c\u5f53\u524d\u70b9\u548c\u6cd5\uff0c\u5373\u5f53\u524d\u70b9\u5728\u5730\u56fe\u5185\u4e14\u5f53\u524d\u70b9\u53ef\u4ee5\u653e\u7f6e\u653b\u51fb\u88c5\u7f6e\n\t\t\t\t\t\tadd((i-1)*n+j,(u-1)*n+v);\n\t\t\t\t\t\tadd((u-1)*n+v,(i-1)*n+j);\n                        //\u5219\u5efa\u53cc\u5411\u8fb9\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(dfs((i-1)*n+j,(i-1)*n+j)&&i+j&1){//\u5982\u679c\u5f53\u524d\u70b9\u627e\u5230\u4e86\u589e\u5e7f\u8def\uff0c\u4e14\u4e3a\u5de6\u90e8\u70b9\n\t\t\t\tans++;//\u4e8c\u5206\u56fe\u6700\u5927\u8986\u76d6+1\n\t\t\t}\n\t\t}\n\t}\n\tcout<<sum-ans;//\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6=\u9876\u70b9\u6570-\u4e8c\u5206\u56fe\u6700\u5927\u8986\u76d6\n\treturn 0;\n}\n```\n",
        "postTime": 1604056847,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u6709\u8fd9\u6837\u51e0\u4e2a\u70b9\uff1a\u201c\u6700\u591a\u7684\u201d\u201c\u4e92\u76f8\u4e0d\u653b\u51fb\u7684\u201d\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8fd9\u4e24\u70b9\u6211\u4eec\u5176\u5b9e\u5c31\u53ef\u4ee5\u60f3\u5230\u8fd9\u9053\u9898\u662f\u6c42\u4e00\u4e2a\u8fd9\u4e2a\u56fe\u4e2d\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u800c\u6700\u5927\u72ec\u7acb\u96c6\u5373\u662f\u603b\u70b9\u6570\u51cf\u53bb\u6700\u5927\u5339\u914d\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u5308\u7259\u5229\u628a\u6700\u5927\u5339\u914d\u6570\u6c42\u51fa\u6765\uff0c\u7136\u540e\u518d\u7528\u603b\u70b9\u6570\u51cf\u53bb\u6700\u5927\u5339\u914d\u6570\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u51cf\u53bb\u77e9\u9635\u4e2d\u6240\u67091\u7684\u6570\u91cf\uff0c\u56e0\u4e3a1\u7684\u4f4d\u7f6e\u4e0d\u53ef\u4ee5\u653e\u88c5\u7f6e\uff0c\u6240\u4ee5\u4e0d\u8ba1\u5165\u7b54\u6848\uff0c\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u4e0d\u61c2\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e00\u770b\u4ee3\u7801\u5185\u6ce8\u91ca\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef pair<int, int> PII;\nint dx[8] = {1, -1, 1, -1, 2, -2, 2, -2};\nint dy[8] = {2, -2, -2, 2, 1, -1, -1, 1};\nbool vis[205][205];\nbool aim[205][205];\nint ans;\nPII match[205][205];\nint n, m;\nbool already[205][205];\nbool find(int x,int y)\n{\n    for (int i = 0; i < 8;i++)\n    {\n        int xx = x + dx[i];\n        int yy = y + dy[i];\n        if(xx<1||xx>n||yy<1||yy>n||vis[xx][yy]||aim[xx][yy])\n            continue;//\u5224\u65ad\u8d8a\u754c\u6216\u8005\u662f\u8be5\u4f4d\u7f6e\u4e0d\u53ef\u653e\n        aim[xx][yy]=1;\n        if((match[xx][yy].first==0&&match[xx][yy].second==0)||find(match[xx][yy].first,match[xx][yy].second))//\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u6709\u914d\u5bf9\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a\u70b9\u914d\u5bf9\u7684\u70b9\u53ef\u4ee5\u91cd\u65b0\u914d\u5bf9\n        {\n            match[xx][yy] = {x, y};\n            return true;//\u5c06\u4e24\u4e2a\u70b9\u5339\u914d\uff0c\u6ee1\u8db3\u6761\u4ef6\u8fd4\u56detrue\n        }\n    }\n    return false;\n}\nint main()\n{\n    int cnt=0;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n;i++)\n    {\n        for (int j = 1; j <= n;j++)\n        {\n            char a;\n            cin >> a;\n            if(a=='1')\n                vis[i][j] = 1;\n        }\n    }//\u53ea\u67090\u7684\u5730\u65b9\u624d\u53ef\u4ee5\u653e\uff0c\u5c061\u7684\u5730\u65b9\u6807\u8bb0\u8d77\u6765\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            if (!vis[i][j] && ((i + j) & 1))//\u5efa\u4e8c\u5206\u56fe\u65f6\u6309\u7167\u884c\u6570+\u5217\u6570\u7684\u5947\u5076\u6027\u4e8c\u5206\n            {\n                memset(aim, 0, sizeof aim);\n                if (find(i, j))\n                    ans++;//\u6c42\u6700\u5927\u5339\u914d\u6570\n            }\n            else if (!already[i][j] && vis[i][j])\n                cnt++, already[i][j] = 1;//\u7b97\u51fa\u6240\u67091\u7684\u6570\u91cf\n        }\n    }\n    printf(\"%d\\n\", n*n-cnt-ans);//\u6700\u5927\u72ec\u7acb\u96c6\u70b9\u6570=\u603b\u70b9\u6570-\u6700\u5927\u5339\u914d\u6570-1\u7684\u4e2a\u6570\n}\n```\n",
        "postTime": 1603337016,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\u770b\u5230\u9898\u6211\u60ca\u5446\u4e86\uff0c\u8fd9\u4e0d\u662fP3355 \u9a91\u58eb\u5171\u5b58\u95ee\u9898\uff0c\u53c8\u53ef\u4ee5\u62ff\u53cc\u500d\u7ecf\u9a8c\u4e86\u3002\n\n\n\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u6c34\u9898\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\n\n\n|1|X|1|\n|---|---|---|\n|0|1|0|\n|X|0|1|\n\n\u7531\u4e8e\u6211\u4eec\u53d1\u73b0\u4ece0\u80fd\u653b\u51fb\u5230\u7684\u70b9\u53ea\u67091\uff1b\n\u800c\u4ece1\u53ea\u80fd\u653b\u51fb\u52300\n\n\u6211\u4eec\u53ea\u8981\u5bf9\u80fd\u653b\u51fb\u5230\u7684\u70b9\u505a\u6700\u5927\u6d41\uff0c\u7528\u603b\u7684\u51cf\u53bb\u5373\u53ef\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000005,Max=0x3f3f3f3f;\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nqueue<int>q;\nstruct edge\n{\n\tint v,w,nex;\n}e[maxn];\nint head[maxn],cnt=1,cur[maxn],dis[maxn],x,y,n,m,a,b,ans=0,k,p,Q,m1,m2,c,d,f[maxn],tag[maxn],to[maxn],tot=0;\nchar flag[505][505];\nvoid add(int u,int v,int w){e[++cnt].v=v,e[cnt].w=w,e[cnt].nex=head[u],head[u]=cnt;e[++cnt].v=u,e[cnt].w=0,e[cnt].nex=head[v],head[v]=cnt;};\nbool bfs()\n{\n\tmemset(dis,0x3f,sizeof dis);\n\twhile(!q.empty())q.pop();\n\tq.push(x),dis[x]=0;cur[x]=head[x];\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=head[u];i;i=e[i].nex)\n\t\t{ \n\t\t\tint v=e[i].v; //cout<<v<<\"A\"<<endl;\n\t\t\tif(e[i].w&&dis[v]==Max)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tq.push(v),cur[v]=head[v];\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tif(v==y)return 1;\n\t\t\t}\t\n\t\t} \n\t}\n\treturn 0;\n}\nint dfs(int u,int sum)\n{\n\t//cout<<u<<\" \"<<sum<<endl; \n\tif(u==y)return sum;\n\tint www=0;\n\tfor(int i=cur[u];i&&sum;i=e[i].nex)\n\t{\n\t\tcur[u]=i;int v=e[i].v;\n\t\tif((dis[v]==dis[u]+1)&&e[i].w)\n\t\t{\n\t\t\tint k=dfs(v,min(sum,e[i].w));\n\t\t\tif(k==0)dis[v]=Max;\n\t\t\telse\n\t\t\t{\n\t\t\t\tto[u]=v;\n\t\t\t\tif(u!=y)tag[v-n]=1;\n\t\t\t\te[i].w-=k,e[i^1].w+=k,sum-=k;www+=k;\n\t\t\t}\n\t\t}\n\t}\n\treturn www;\n}\nint main()\n{\n\tn=read();\n\tx=50005,y=50007;\n\tfor(int i=1;i<=n;i++)\n\t\tgets(flag[i]+1);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\t\n\t\t\tif(flag[i][j]=='1'){\n\t\t\t\ttot++;continue;\n\t\t\t}\n\t\t\tif((i+j)%2==0)\n\t\t\t{\n\t\t\t\tadd(x,i*n+j,1);\n\t\t\t\tif(i>=3&&j>=2)add(i*n+j,(i-2)*n+j-1,1);\n\t\t\t\tif(i>=3&&j<=n-1)add(i*n+j,(i-2)*n+j+1,1);\n\t\t\t\tif(i>=2&&j>=3)add(i*n+j,(i-1)*n+j-2,1);\n\t\t\t\tif(i>=2&&j<=n-2)add(i*n+j,(i-1)*n+j+2,1);\n\t\t\t\tif(i<=n-2&&j>=2)add(i*n+j,(i+2)*n+j-1,1);\n\t\t\t\tif(i<=n-2&&j<=n-1)add(i*n+j,(i+2)*n+j+1,1);\n\t\t\t\tif(i<=n-1&&j>=3)add(i*n+j,(i+1)*n+j-2,1);\n\t\t\t\tif(i<=n-1&&j<=n-2)add(i*n+j,(i+1)*n+j+2,1);\n\t\t\t}\n\t\t\tif((i+j)%2==1)add(i*n+j,y,1);\n\t\t}\n\twhile(bfs())ans+=dfs(x,Max);\n\tcout<<n*n-tot-ans;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1595057438,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u7ecf\u5178\u7684\u4e92\u4e0d\u653b\u51fb\u95ee\u9898\uff0c\u8fd9\u9053\u9898\u660e\u663e\u975e\u5e38\u6ca1\u6709\u8bda\u610f\uff0c\u8fde\u653b\u51fb\u65b9\u5f0f\u90fd\u6ca1\u6709\u53d8\uff0c\u548c\u9a91\u58eb\u5171\u5b58\u95ee\u9898\u4e00\u6bdb\u4e00\u6837\u2026\u2026\n\n\u6709\u8bda\u610f\u7684\u9898\u89c1\uff1a[`P5030 \u957f\u8116\u5b50\u9e7f\u653e\u7f6e`](https://www.luogu.org/problemnew/show/P5030)\n\n\u7136\u540e\u518d\u56de\u6765\u8bb2\u8fd9\u9053\u9898\u600e\u4e48\u505a\uff0c\u9996\u5148\u8fd9\u9053\u9898\u7684\u5efa\u6a21\u65b9\u5f0f\u4f9d\u7136\u662f\u683c\u5b50\u5e38\u7528\u7684\u9ed1\u767d\u67d3\u8272\u5efa\u8fb9\uff0c\u5bf9\u6bcf\u4e2a$i+j=1\\ (mod\\ 2)$\u7684\u70b9\uff0c\u4ece\u8d85\u7ea7\u6e90\u8fde\u8fc7\u6765\uff0c\u5e76\u4ece\u5b83\u5411\u80fd\u653b\u51fb\u7684\u683c\u5b50\u8fde\u4e00\u6761\u8fb9\uff0c\u518d\u4ece\u5176\u4ed6\u7684\u70b9\u8fde\u5411\u8d85\u7ea7\u6c47\uff0c\u5f53\u7136\uff0c\u4e0d\u80fd\u653e\u7f6e\u653b\u51fb\u88c5\u7f6e\u7684\u70b9\u5c31\u4e0d\u8981\u8fde\u4e86\uff0c\u76f4\u63a5$continue$\u6389\uff0c\u6700\u540e\u8dd1\u4e00\u904d$Dinic$\u6c42\u51fa**\u4e0d\u80fd\u653e\u88c5\u7f6e**\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u7528\u603b\u70b9\u6570\u51cf\u53bb\u4e0d\u80fd\u653e\u88c5\u7f6e\u7684\u70b9\u5373\u53ef\uff08\u6570\u5b57\u4e3a$1$\u7684\u70b9\u4e5f\u4e0d\u80fd\u653e\u88c5\u7f6e\uff09\n\n\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 2147400000\nusing namespace std;\nqueue <int> q;\nint cnt=1,fst[50005],nxt[1000005],to[1000005],w[1000005],fr[1000005],cur[50005];\nint n,m,S,T,dep[50005];\nint dx[]={0,-2,-1,1,2,-2,-1,1,2},dy[]={0,-1,-2,-2,-1,1,2,2,1};\nvoid AddEdge(int u,int v,int c)\n{\n    to[++cnt]=v;\n    fr[cnt]=u;\n    nxt[cnt]=fst[u];\n    fst[u]=cnt;\n    w[cnt]=c;\n}\nbool Bfs()\n{\n    memset(dep,0,sizeof(dep));\n    q.push(S);\n    dep[S]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=fst[u];i;i=nxt[i])\n        {\n            int v=to[i];\n            if(!dep[v] && w[i])\n            {\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[T];\n}\nint Dfs(int u,int flow)\n{\n    if(u==T || !flow) return flow;\n    int used=0;\n    for(int i=cur[u];i;i=nxt[i])\n    {\n        cur[u]=i;\n        int v=to[i];\n        if(dep[v]==dep[u]+1 && w[i])\n        {\n            int fl=Dfs(v,min(flow,w[i]));\n            if(fl)\n            {\n                used+=fl;\n                flow-=fl;\n                w[i]-=fl;\n                w[i^1]+=fl;\n                if(!flow) break;\n            }\n        }\n    }\n    return used;\n}\nint Dinic()\n{\n    int sum=0;\n    while(Bfs())\n    {\n        memcpy(cur,fst,sizeof(fst));\n        sum+=Dfs(S,inf);\n    }\n    return sum;\n}\nint main()\n{\n    int sum=0;\n    scanf(\"%d\",&n);\n    S=0;\n    T=n*n+1;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char ch;\n            cin>>ch;\n            if(ch=='1') continue;\n            int id=(i-1)*n+j;\n            sum++;\n            if((i+j)&1)\n            {\n                AddEdge(S,id,1);\n                AddEdge(id,S,0);\n                for(int k=1;k<=8;k++)\n                {\n                    int nx=i+dx[k],ny=j+dy[k];\n                    if(nx<1 || nx>n || ny<1 || ny>n) continue;\n                    AddEdge(id,(nx-1)*n+ny,1);\n                    AddEdge((nx-1)*n+ny,id,0);\n                }\n            }\n            else\n            {\n                AddEdge(id,T,1);\n                AddEdge(T,id,0);\n            }\n        }\n    }\n    int ans=sum-Dinic();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1545714749,
        "uid": 52734,
        "name": "vocaloid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u5341\u5206\u88f8\u7684\u6700\u5927\u72ec\u7acb\u96c6\u3002\u5308\u7259\u5229\u5373\u53ef\u3002\u6bcf\u6b21\u6570\u7ec4\u4e0d\u80fd\u6e05\u7a7a\uff0c\u6253\u65f6\u95f4\u6233\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=205,M=400005;\nint T,n,cnt,a[N][N];\nint dx[4]={1,1,2,2},dy[4]={2,-2,1,-1};\nchar s[N];\ninline void init(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tfor (int j=1;j<=n;j++){\n\t\t\tif (s[j]=='0') a[i][j]=++cnt;\n\t\t\t\telse a[i][j]=0;\n\t\t}\n\t}\n}\nstruct edge{\n\tint link,next;\n}e[M];\nint tot,link[N*N],vis[N*N],head[N*N];\ninline void add_edge(int u,int v){\n\te[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void insert(int u,int v){\n\tadd_edge(u,v);\n\tadd_edge(v,u); \n}\nbool find(int u){\n\tfor (int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].link;\n\t\tif (vis[v]!=T){\n\t\t\tvis[v]=T;\n\t\t\tif (find(link[v])||!link[v]){\n\t\t\t\tlink[v]=u;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline void solve(){\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=1;j<=n;j++){\n\t\t\tif (a[i][j]){\n\t\t\t\tfor (int k=0;k<4;k++){\n\t\t\t\t\tint x=i+dx[k],y=j+dy[k];\n\t\t\t\t\tif (x<1||x>n||y<1||y>n) continue;\n\t\t\t\t\tif (a[x][y]) insert(a[i][j],a[x][y]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor (int i=1;i<=cnt;i++){\n\t\tT++;\n\t\tif (find(i)){\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",cnt-ans/2);\n}\nint main(){\n\tinit(); \n\tsolve();\n\treturn 0;\n} \n```",
        "postTime": 1529326721,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u5339\u914d\n\n\u6c42\u6700\u5927\u72ec\u7acb\u96c6\n\n\u6700\u5927\u72ec\u7acb\u96c6=\u9876\u70b9\u6570-\u6700\u5927\u5339\u914d\u6570\n\n\u56e0\u4e3aA\u5339\u914d\u4e86B\uff0cB\u5c31\u4f1a\u5339\u914dA\n\n\u6240\u4ee5\u6700\u540e\u7684\u6700\u5927\u5339\u914d\u6570\u9700\u8981\u9664\u4ee52\n\n\u6700\u540e\u7528\u5308\u7259\u5229\u7b97\u6cd5\u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n\u6ce8\u610f\u8981\u7528\u94fe\u5f0f\u524d\u5411\u661f\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\n#define g(i,j) (i-1)*n+j\nconst int maxn=200*200+10,maxl=200000*10+10;\nint dx[10]={0,-1,-2,1,2,-1,-2,1,2};  \nint dy[10]={0,-2,-1,-2,-1,2,1,2,1};  \nint vis[maxn],n,m,lin[maxn],head[maxn],cnt=0;\nchar a[210][210];\nstruct data\n{\n\tint v,next;\n}e[maxl];\nvoid add(int u,int v)\n{\n\te[++cnt]=(data){v,head[u]};\n\thead[u]=cnt;\n}\nbool find(int u)\n{\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(!vis[v])\n\t\t{\n\t\t\tvis[v]=1;\n\t\t\tif(lin[v]==-1||find(lin[v]))\n\t\t\t{\n\t\t\t\tlin[v]=u;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main()\n{\n\tmemset(lin,-1,sizeof(lin));\n\tint ans=0,sum=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tgetchar();\n\t\tfor(int j=1;j<=n;j++)\n\t\ta[i][j]=getchar();\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tif(a[i][j]=='0')\n\tfor(int k=1;k<=8;k++){\n\t\tint x=i+dx[k],y=j+dy[k];  \n        if(x<1||x>n||y<1||y>n||a[x][y]=='1')continue;  \n        add(g(i,j),g(x,y));  \n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tif(a[i][j]=='0'){\n\t\tsum++;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(find(g(i,j)))ans++;\n\t}\n\tprintf(\"%d\\n\",sum-ans/2);\n}\n```",
        "postTime": 1520912395,
        "uid": 19951,
        "name": "Reaepita",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4304 \u3010[TJOI2013]\u653b\u51fb\u88c5\u7f6e\u3011"
    },
    {
        "content": "# Preface\n\n\u8fd9\u9053\u9898\u597d\u50cf\u66b4\u529b\u4e8c\u5206\u56fe\u5339\u914d\u90fd\u80fd\u8fc7\u5440\uff0c\u4e3a\u4ec0\u4e48\u6709\u7d2b\u9898\u96be\u5ea6\u3002\n\n# Description\n\n\u6211\u8ba4\u4e3a\u9898\u76ee\u8bf4\u7684\u591f\u6e05\u695a\u4e86\u3002\n\n# Method\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u9009\u4e86\uff0c\u53e6\u5916\u51e0\u4e2a\u4e0d\u80fd\u9009\uff0c\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u662f\u4e0d\u662f\u60f3\u5230\u4e862-SAT\uff0c\u4f46\u5f88\u53ef\u60dc\uff0c\u4ed6\u8981\u6c42\u7684\u662f\u6700\u591a\u53ef\u4ee5\u653e\u51e0\u4e2a\u88c5\u7f6e\uff0c\u6211\u4eec\u628a\u9898\u76ee\u8981\u6c42\u8f6c\u5316\uff0c\u5c31\u662f\u6700\u5c11\u80fd\u6709\u51e0\u4e2a\u4e92\u4e0d\u5f71\u54cd\u7684\u4e0d\u80fd\u5728\u4e00\u8d77\u7684\u70b9\u7684\u96c6\u5408\uff0c\u8fd9\u5c31\u662f\u5339\u914d\uff0c\u6240\u4ee5\u9700\u8981\u7528\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n### \u4e8c\u5206\u56fe\u5efa\u56fe\n\n\u8fd9\u4e2a\u5e94\u8be5\u5f88\u7b80\u5355\uff0c\u9996\u5148\u6211\u4eec\u6839\u636e\u9898\u76ee\u8981\u6c42\u628a\u4e00\u4e2a\u70b9\u4e0e\u4e0d\u80fd\u548c\u4ed6\u76f8\u90bb\u7684\u70b9\u8fde\u8fb9\uff0c\u4e4b\u540e\u9ed1\u767d\u67d3\u8272\u5373\u53ef\u3002\n\n### \u4e8c\u5206\u56fe\u5339\u914d\n\n\u8fd9\u4e2a\u5c31\u663e\u5f97\u5f88\u5957\u8def\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u4ed6\u662f $ 0 $ \uff0c\u90a3\u4e48\u505a\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5426\u5219\u76f4\u63a5 $ +1 $ \uff0c\u56e0\u4e3a\u4ed6\u4e00\u5b9a\u4e0d\u80fd\u9009\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int di[8][2]={{-1,-2},{-2,-1},{1,-2},{2,-1},{-1,2},{-2,1},{1,2},{2,1}};\ninline int read()\t\t\t\n{\n  int x=0,f=1;char ch=getchar();\n  while(!isdigit(ch)&&ch!='-')ch=getchar();\n  if(ch=='-')f=-1,ch=getchar();\n  while(isdigit(ch))x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n  return x*f;\n}\nbool uu[100000],exist[100000],visit[100000],edge[300][300];\nint ok[1000][1000],e3[200000],e4[200000],e1[200000],e2[200000],a[200000],b[200000],d[200000],match[200000];\nint xx,yy,k,xu,yu,xv,yv,ans3,ans4,ans2,ans1,sum,j,cnt,n,m,x,y,i,ans,color[100000];\nstring s;\nvoid add(int x,int y)\n{\n\tcnt++;a[cnt]=y;b[cnt]=d[x];d[x]=cnt;\n}\nbool check(int x)\n{\n\tint i;\n\tfor (i=d[x];i;i=b[i])\n\t    if (visit[a[i]]==false)\n\t         {\n\t         \tvisit[a[i]]=true;\n\t         \tif ((match[a[i]]==0)||(check(match[a[i]])))\n\t         \t     {\n\t         \t     \tmatch[a[i]]=x;\n\t         \t     \treturn true;\n\t\t\t\t\t  }\n\t\t\t }\n\treturn false;\n}\nvoid sc(int x,int y)\n{\n\tif (color[x]!=0) return;\n\tcolor[x]=y;\n\tint i;\n\tfor (i=d[x];i;i=b[i])\n\t     sc(a[i],3-y);\n}\nint main()\n{\n\tcin>>n;\n    for (i=1;i<=n;i++)\n         {\n         \tcin>>s;\n         \tfor (j=1;j<=n;j++)\n         \t     ok[i][j]=(s[j-1]-'0');\n\t\t }\n\tfor (i=1;i<=n;i++)\n\t   for (j=1;j<=n;j++)\n\t       if (ok[i][j]==0)\n\t           {\n\t           \tx=(i-1)*n+j;\n\t           \t   for (k=0;k<8;k++)\n\t           \t       {\n\t           \t       \txx=i+di[k][0];yy=j+di[k][1];\n\t           \t       \tif ((xx>=1)&(xx<=n)&(yy>=1)&(yy<=n))\n\t           \t       \t      if (ok[xx][yy]==0)\n\t           \t       \t          {\n\t           \t       \t          y=(xx-1)*n+yy;\n\t\t\t\t\t\t\t\t  add(x,y);\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t   }\n\t/*for (i=1;i<=n;i++)\n\t    for (j=1;j<=n;j++)\n\t       if ((edge[i][j]==false))\n\t        if (i!=j)\n\t           {\n\t           \tif ((e1[i]==e3[i])&(e1[j]==e3[j])) continue;\n\t           \tif ((e2[i]==e4[i])&(e2[j]==e4[j])) continue;\n\t           \tif (e1[i]==e3[i])\n\t           \t     {\n\t           \t     \tif ((e1[i]>=e1[j])&(e1[i]<=e3[j]))\n\t           \t     \t   if ((e2[i]<=e2[j])&(e4[i]>=e2[j]))\n\t           \t     \t         {\n\t           \t     \t         \tadd(i,j);add(j,i);exist[i]=true;exist[j]=true;\n\t           \t     \t         \tedge[i][j]=true;edge[j][i]=true;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t   }*/\n\t/*for (i=1;i<=n;i++) \n\t    {\n\t\tif (exist[i]==false) \n\t\t     {\n\t\t\t sum++;continue;\n\t\t     }\n\t\tans1=0;ans2=0;\n\t    if (color[i]==0) sc(i,1);\n\t\tans3=max(ans1,ans2);\n\t    ans+=ans3;\n\t    }*/\n\tfor (i=1;i<=n*n;i++)\n\t  if (ok[(i-1)/n+1][(i-1)%n+1]==0)\n\t     if (color[i]==0)\n\t        sc(i,1);\n    int LGCZ=0;\n\tfor (i=1;i<=n*n;i++)\n\t  if (ok[(i-1)/n+1][(i-1)%n+1]==0)\n\t     {\n\t     if (color[i]==1)\n\t     {\n\t     \tfor (j=1;j<=n*n;j++) visit[j]=false;\n\t     \tif (check(i)) ans++;\n\t      }\n\t    }\n\telse LGCZ++;\n\tprintf(\"%d\\n\",n*n-ans-LGCZ);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1621915999,
        "uid": 508480,
        "name": "Albedo",
        "ccfLevel": 0,
        "title": "[TJOI2013]\u653b\u51fb\u88c5\u7f6e \u9898\u89e3"
    }
]