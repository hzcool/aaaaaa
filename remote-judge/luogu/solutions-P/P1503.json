[
    {
        "content": "\u8fd9\u9898\u7528\u7ebf\u6bb5\u6811\uff0c\u5e73\u8861\u6811\u90fd\u80fd\u8fc7\n\n\u4f46\u662f\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528STL\u4e2d\u7684set\n\n\u8bbe\u4e00\u4e2aset\u8bb0\u5f55\u5f53\u524d\u88ab\u70b8\u7684\u623f\u5b50\u7f16\u53f7\uff0c\u5e76\u4e14\u7ef4\u62a4\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\uff0c\u5f53\u6211\u4eec\u67e5\u8be2x\u65f6\uff0c\u627e\u5230\u5728s\u4e2d\u6bd4x\u5927\u7684\u7b2c\u4e00\u4e2a\u548c\u6bd4x\u5c0f\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u4f4d\u7f6e\u4e4b\u5dee\u51cf1\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4ee3\u7801\u51fa\u5947\u7684\u77ed\n\n```cpp\n#include<bits/stdc++.h>\n#define M 50010\nusing namespace std;\nint q[M],tail,n,m;\nset<int> s;\nset<int>:: iterator it;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    s.insert(0);\n    s.insert(n+1);\n    for(int i=1;i<=m;i++)\n    {\n        char c;\n    cin>>c;//\u7528scanf\u4f1a\u628a\u7a7a\u683c\u8bfb\u8fdb\u6765\n        if(c=='D')\n        {\n            int x;                      // \u52a0\u5165x\n            scanf(\"%d\",&x);\n            s.insert(x);\n            q[++tail]=x;\n        }\n        if(c=='Q')\n        {\n            int x;                       //\u67e5\u8be2\n            scanf(\"%d\",&x);\n            it=s.lower_bound(x);\n            if(*it==x)\n            {\n                printf(\"0\\n\");\n                continue;\n            }\n            int ans=*it-*(--it);\n            printf(\"%d\\n\",ans-1);\n        }\n        if(c=='R')                    //\u5220\u9664\n        {\n            it=s.find(q[tail--]);\n            s.erase(it);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502958562,
        "uid": 20458,
        "name": "66666a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "~~\u9707\u60ca\uff0c\u5e73\u8861\u6811\u9898\u76ee\u6ca1\u4eba\u5199\u6734\u7d20treap\uff1f~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u770b\u5230\u524d\u4e24\u9879\u64cd\u4f5c\uff0c\u5f88\u81ea\u7136\u5730\u5c31\u80fd\u60f3\u5230\u7528\u6808\uff0c\u628a\u6bcf\u6b21$D$\u64cd\u4f5c\u70b8\u6bc1\u7684\u5c4b\u5b50\u8bb0\u5f55\u4e0b\u6765\uff0c$R$\u64cd\u4f5c\u5c31\u628a\u6808\u9876\u5143\u7d20\u5f39\u51fa\n\n\u90a3\u4e48\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u8003\u8651\u7528\u5e73\u8861\u6811\u8bb0\u5f55\u88ab\u70b8\u6bc1\u7684\u5c4b\u5b50\uff0c\u4e5f\u5c31\u662f\u5728\u6808\u64cd\u4f5c\u4e2d\u52a0\u4e0a\u5e73\u8861\u6811\u64cd\u4f5c\uff0c\u5c06\u88ab\u70b8\u6bc1\u7684\u5c4b\u5b50\u7684\u7f16\u53f7\u63d2\u5165\u5e73\u8861\u6811\u4e2d\u3002\n\n\u5728\u6c42\u89e3$Q$\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5e73\u8861\u6811\u67e5\u524d\u9a71\u540e\u7ee7\u7684\u64cd\u4f5c\u65b9\u4fbf\u7684\u6c42\u51fa\u56f4\u5835\u6bcf\u4e2a\u58eb\u5175\u7684\u4e24\u4e2a\u623f\u5b50\u7684\u7f16\u53f7\uff0c~~\u5229\u7528\u5c0f\u5b66\u6570\u5b66~~\u53ef\u4ee5\u5f97\u5230\u58eb\u5175$i$\u80fd\u5230\u8fbe\u7684\u6751\u5e84\u4e2a\u6570\u4e3a $\\text{nxt(i)}-\\text{pre(i)}-1$ \u3002\u4e3a\u4e86\u9632\u6b62\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898(\u5982\u8d8a\u754c)\uff0c\u9884\u5148\u63d2\u5165$0$\u53f7\u548c$n+1$\u53f7\u8282\u70b9\uff0c\u4e0e\u4e00\u822c\u7684\u63d2\u5165$\\infty$\u548c$-\\infty$\u4e0d\u540c\n\n\u7136\u540e\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6837\u4f8b\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\n\n>\u82e5\u58eb\u5175\u88ab\u56f4\u5835\u5728\u6467\u6bc1\u4e86\u7684\u623f\u5b50\u4e2d\uff0c\u90a3\u53ea\u80fd\u7b49\u6b7b\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u8fd9\u91cc\u53ea\u8981\u7528\u4e00\u4e2a$bool$\u6570\u7ec4\u8bb0\u5f55\u54ea\u4e9b\u5c4b\u5b50\u88ab\u70b8\u6389\u5c31\u884c\u4e86\n\n\u6734\u7d20treap\u4ee3\u7801\u5949\u4e0a\n\n```cpp\n#include<iostream>\n#include<ctime>\n#include<cstdlib>\n#include<stack>\nusing namespace std;\nconst int N=100005,inf=((1<<30)-1)<<1;\nint n,m,cnt,root;\t\nint son[N][2],val[N],wei[N],size[N],cpy[N];\t//\u5de6\u53f3\u513f\u5b50\uff0c\u6743\u503c\uff0c\u91cd\u91cf\uff0c\u5b50\u6811\u5927\u5c0f\uff0c\u76f8\u540c\u6743\u503c\u4e2a\u6570(\u4e0d\u9700\u8981)\nint add(int v){\t//\u65b0\u5efa\u8282\u70b9\n\tval[++cnt]=v;\n\tsize[cnt]=1;\n\tcpy[cnt]=1;\n\twei[cnt]=rand();\n\treturn cnt;\n\t}\nvoid mix(int id){\t//\u66f4\u65b0\u5b50\u6811\u5927\u5c0f\n\tsize[id]=size[son[id][0]]+size[son[id][1]]+cpy[id];\n\t}\nvoid build(){\t//\u521d\u59cb\u5316\uff0c\u63d2\u5165\u54e8\u5175\u8282\u70b9\n\troot=add(0);\n\tson[root][1]=add(n+1);\n\tmix(root);\n\t}\nvoid rotate(int &id,int d){\t//treap\u6838\u5fc3\u64cd\u4f5c\uff0c\u65cb\u8f6c\n\tint e=son[id][d^1];\n\tson[id][d^1]=son[e][d];\n\tson[e][d]=id;\n\tid=e;\n\tmix(son[id][d]);\n\tmix(id);\n\t}\t\nvoid insert(int &id,int v){\t//\u63d2\u5165\u6743\u503c\u4e3av\u7684\u8282\u70b9\n\tif(!id){\n\t\tid=add(v);\n\t\treturn;\n\t\t}\n\tif(v==val[id]){\n\t\tcpy[id]++;\n\t\t}\t\n\telse{\n\t\tint d=(v<val[id]?0:1);\n\t\tinsert(son[id][d],v);\n\t\tif(wei[id]<wei[son[id][d]]){\n\t\t\trotate(id,d^1);\n\t\t\t}\n\t\t}\n\tmix(id);\n\t}\t\nvoid remove(int &id,int v){\t//\u5220\u9664\u6743\u503c\u4e3av\u7684\u8282\u70b9\n\tif(!id){\n\t\treturn;\n\t\t}\n\tif(v==val[id]){\n\t\tif(cpy[id]>1){\n\t\t\tcpy[id]--;\n\t\t\tmix(id);\n\t\t\treturn;\n\t\t\t}\t\n\t\telse if(son[id][0]||son[id][1]){\n\t\t\tif(!son[id][1]||wei[son[id][0]]>wei[son[id][1]]){\n\t\t\t\trotate(id,1);\n\t\t\t\tremove(son[id][1],v);\n\t\t\t\t}\n\t\t\telse{\n\t\t\t\trotate(id,0);\n\t\t\t\tremove(son[id][0],v);\n\t\t\t\t}\t\n\t\t\t}\n\t\telse{\n\t\t\tid=0;\n\t\t\t}\t\n\t\treturn;\t\n\t\t}\t\n\telse if(v<val[id]){\n\t\tremove(son[id][0],v);\n\t\t}\n\telse{\n\t\tremove(son[id][1],v);\n\t\t}\t\n\tmix(id);\n\t}\t\nint rank(int id,int v){\t//\u67e5\u8be2v\u7684\u6392\u540d(\u4e0d\u9700\u8981)\n\tif(!id){\n\t\treturn 0;\n\t\t}\n\tif(v==val[id]){\n\t\treturn size[son[id][0]]+1;\n\t\t}\t\n\telse if(v<val[id]){\n\t\treturn rank(son[id][0],v);\n\t\t}\t\n\telse{\n\t\treturn size[son[id][0]]+cpy[id]+rank(son[id][1],v);\n\t\t}\t\n\t}\nint value(int id,int v){//\u67e5\u8be2\u7b2cv\u5927\u7684\u6743\u503c(\u4e0d\u9700\u8981)\n\tif(!id){\n\t\treturn inf;\n\t\t}\t\n\tif(v<=size[son[id][0]]){\n\t\treturn value(son[id][0],v);\n\t\t}\t\n\telse if(v<=size[son[id][0]]+cpy[id]){\n\t\treturn val[id];\n\t\t}\t\n\telse{\n\t\treturn value(son[id][1],v-size[son[id][0]]-cpy[id]);\n\t\t}\t\n\t}\nint pre(int v){\t//\u67e5\u8be2v\u7684\u524d\u9a71\n\tint id=root,prev;\n\twhile(id){\n\t\tif(val[id]<v){\n\t\t\tprev=val[id];\n\t\t\tid=son[id][1];\n\t\t\t}\n\t\telse{\n\t\t\tid=son[id][0];\n\t\t\t}\t\n\t\t}\n\treturn prev;\t\n\t}\nint nxt(int v){\t//\u67e5\u8be2v\u7684\u540e\u7ee7\n\tint id=root,next;\n\twhile(id){\n\t\tif(val[id]>v){\n\t\t\tnext=val[id];\n\t\t\tid=son[id][0];\n\t\t\t}\n\t\telse{\n\t\t\tid=son[id][1];\n\t\t\t}\t\n\t\t}\n\treturn next;\t\n\t}\nstack<int>des;\t//\u8bb0\u5f55\u7528\u7684\u6808\nbool vis[N];\t//\u548cbool\u6570\u7ec4\nint main(){\n\tsrand((int)time(0));\n\tcin>>n>>m;\n\tbuild();\n\tchar opt;\n\tint x;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>opt;\n\t\tif(opt=='D'){\t//\u6467\u6bc1\u623f\u5b50\n\t\t\tcin>>x;\n\t\t\tdes.push(x);\n\t\t\tvis[x]=1;\n\t\t\tinsert(root,x);\n\t\t\t}\n\t\tif(opt=='R'){\t//\u4fee\u590d\u623f\u5b50\n\t\t\tremove(root,des.top());\n\t\t\tvis[des.top()]=0;\n\t\t\tdes.pop();\n\t\t\t}\t\n\t\tif(opt=='Q'){\t//\u67e5\u8be2\u58eb\u5175\u80fd\u5230\u8fbe\u7684\u623f\u5b50\u4e2a\u6570\n\t\t\tcin>>x;\n\t\t\tif(vis[x]){\n\t\t\t\tcout<<0<<endl;\n\t\t\t\t}\n\t\t\telse{\t\n\t\t\t\tcout<<nxt(x)-pre(x)-1<<endl;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\treturn 0;\n\t}\n```\n\nGL\uff5e",
        "postTime": 1564557049,
        "uid": 178864,
        "name": "LordLeft",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "    \n    \n    \n    \n    \n    \n    \n```cpp\n    // \u6709\u70b9\u5c0f\u60ca\u8bb6\uff0c\u66b4\u529b\u6a21\u62df\u5c31A\u6389\u4e86\n    // \u9898\u76ee\u8bf4\u8fd9n\u4e2a\u623f\u5b50\uff0c\u5176\u4e2d\u7b2ci\u4e2a\u53ea\u4e0e\u7b2ci-1\u4e2a\u548c\u7b2ci+1\u4e2a\u76f8\u8fde\uff0c\u90a3\u4e48\u8fd9\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\n    // \u6837\u4f8b\u5f88\u8d34\u5fc3\uff0c\u8fde\u7eed\u4e24\u6b21\u4fee\u590d\u4e0a\u6b21\uff08\u6700\u540e\uff09\u88ab\u6467\u6bc1\u7684\u623f\u5b50\n    // \u8fd9\u5c31\u542f\u793a\u7740\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff0c\u5e76\u4e14\u8fd9\u4e9b\u88ab\u6467\u6bc1\u7684\u623f\u5b50\u4e00\u5b9a\u662f\u8d8a\u665a\u6467\u6bc1\u8d8a\u65e9\u88ab\u4fee\u597d\uff0c\u90a3\u5c31\u7528\u4e00\u4e2a\u6808\u5457\uff0c\u5148\u8fdb\u540e\u51fa\n    // \u88ab\u56f4\u56f0\u7684\u58eb\u5175\u53ea\u80fd\u5411\u4e24\u8fb9\u8d70\uff0c\u8d70\u5230\u4e0b\u4e00\u4e2a\u623f\u5b50\u88ab\u6467\u6bc1\u4e3a\u6b62\n    // \u6211\u4eec\u53ef\u4ee5\u626b\u4e00\u904dn\u4e2a\u623f\u5b50\uff0c\u9009\u53d6\u58eb\u5175\u6240\u5728\u7684\u8fd9\u6bb5\u533a\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u662f\u5f88\u4f18\u7f8e\n    // \u65e2\u7136\u58eb\u5175\u80fd\u591f\u6d3b\u52a8\u7684\u533a\u95f4\u7aef\u70b9\u662f\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff08\u5f00\u533a\u95f4\uff09\uff0c\u90a3\u6211\u4eec\u76f4\u63a5\u4ece\u6808\u91cc\u904d\u5386\u627e\u7aef\u70b9\u4e0d\u5c31\u597d\u4e86\u5417\n    //AC code\n    #include<bits/stdc++.h>\n    using namespace std;\n    #define R register\n    #define N 50005\n    #define max(a,b) (a)>(b) ? (a) : (b)\n    #define min(a,b) (a)<(b) ? (a) : (b)\n    int n,m;\n    int top,s[N];\n    bool vis[N];\n    inline int dy(){\n        scanf(\"%d%d\",&n,&m);\n        while(m--){\n            R char op[2]; scanf(\"%s\",op);\n            if(op[0]=='R'){vis[s[top--]]=0;continue;} // \u4fee\u597d\u4e0a\u4e00\u4e2a\u88ab\u6467\u6bc1\u7684\n            R int a; scanf(\"%d\",&a);\n            if(op[0]=='D') vis[a]=1,s[++top]=a;// \u88ab\u6467\u6bc1\n            else { // \u88ab\u56f4\u5835\n                R int l=0,r=n+1;\n                for(R int i=1;i<=top;++i){\n                    if(s[i]<=a) l=max(s[i],l);\n                    if(s[i]>=a) r=min(s[i],r);\n                }\n                if(l==r) printf(\"%d\\n\",0); // \u5f00\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u76f8\u540c\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e3a\u7a7a\n                else printf(\"%d\\n\",r-l-1); // \u5f00\u533a\u95f4\n            }\n        }\n        return 0;\n    }\n    int QAQ = dy();\n    int main(){;}\n\n```",
        "postTime": 1516242815,
        "uid": 36080,
        "name": "\u51cc\u5e7d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u89e3\u51b3\uff0c\u5efa\u4e00\u68f5\u6811\u6765\u7ef4\u62a4\u6bcf\u6bb5\u533a\u95f4\u7684\u6ca1\u88ab\u70b8\u6bc1\u7684\n\n\u623f\u5b50\u6570\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u70b8\u6bc1\uff0c\u5c31\u628a\u70b8\u6bc1\u7684\u8282\u70b9\u4fee\u6539\u4e3a\u96f6\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u590d\n\n\u5c31\u628a\u4fee\u590d\u8282\u70b9\u4fee\u6539\u4e3a\u4e00\uff08\u8fd9\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\uff09\n\n\u5173\u952e\u662f\u5982\u4f55\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u5411\u5de6\uff0c\u6700\u591a\u5230\u5b83\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u4e3a\u96f6\u7684\u8282\u70b9\n\n\u5b83\u5411\u53f3\uff0c\u6700\u591a\u5230\u5b83\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u4e3a\u96f6\u7684\u70b9\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u627e\u51fa\n\n\u8fd9\u4e24\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u7136\u540e\u4e00\u51cf\u518d\u52a0\u4e00\u5c31\u662f\u7b54\u6848\n\n\u5982\u4f55\u627e\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u533a\u95f4\u7684\u5b8c\u597d\u7684\u623f\u5b50\u6570\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\n\n\u5b83\u7684\u503c\uff0c\u6bd4\u5b83\u53f3\u7aef\u70b9-\u5de6\u7aef\u70b9+1\u5c0f\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u533a\u95f4\u91cc\u6709\u96f6\u4e86\uff0c\u6240\u4ee5\u6bcf\u6b21\n\n\u9012\u5f52\u7ebf\u6bb5\u6811\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\n\n\n------------\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint op=0;\nint h[500000];\nint n,m,ans,a,anst;\nint sl[500000];\nint cc1,cc2;\nchar si;\nstruct house\n{\n    int l;\n    int r;\n    int v;\n};\nstruct house T[500001*4];\n//\u5efa\u6811 \nvoid buildtree(int f,int ne,int poi)\n{\n    T[poi].l=f;\n    T[poi].r=ne;\n    if(f==ne)\n    {\n        T[poi].v=h[f];\n        return ;\n    }\n    buildtree(f,(f+ne)/2,poi*2);\n    buildtree((f+ne)/2+1,ne,poi*2+1);\n    T[poi].v=(T[poi*2].v+T[poi*2+1].v);\n}\n//\u4fee\u6539\u64cd\u4f5c \nvoid insert(int go,int val,int poi)\n{\n    if(T[poi].l==go&&T[poi].r==go)\n    {\n        T[poi].v=val;\n        h[go]=val;    \n        return ;\n    }\n    int mid=(T[poi].l+T[poi].r)/2;\n    if(go>mid) insert(go,val,poi*2+1);\n    else if(go<=mid) insert(go,val,poi*2);\n    T[poi].v=T[poi*2].v+T[poi*2+1].v;\n}\n/*\nqh\u51fd\u6570\u7528\u6765\u8ba1\u7b97\u8981\u627e\u7684\u533a\u95f4\u4e2d\u5b8c\u597d\u7684\u623f\u5b50\u6570\n\n\uff08\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\u5566\uff09\n\n*/\nvoid qh(int f,int ne,int poi)\n{\n    if(T[poi].l==f&&T[poi].r==ne)\n    {\n        anst+=T[poi].v;\n        return ;\n    }\n    int mid=(T[poi].l+T[poi].r)/2;\n    if(f>mid) qh(f,ne,poi*2+1);\n    else if(ne<=mid) qh(f,ne,poi*2);\n    else \n    {\n        qh(f,mid,poi*2);\n        qh(mid+1,ne,poi*2+1);\n    }\n}\nvoid search1(int f,int ne,int poi)\n{\n\tif(T[poi].l==f&&T[poi].r==ne&&T[poi].v==0&&f==ne)\n    {\n        cc1=f;//\u627e\u5230\u4e86\u5728\u8be2\u95ee\u70b9\u5de6\u7aef\u6700\u8fd1\u7684\u4e00\u4e2a\u96f6 \n        return ;\n    }\n    if(T[poi].l==f&&T[poi].r==ne&&T[poi].v==1&&f==ne)\n    {\n        cc1=0;//\u8fd9\u91cc\u6709\u4e00\u4e2a\u7279\u5224\uff0c\u5982\u679c\u627e\u5230\u6700\u540e\uff0c\u53d1\u73b0\u5de6\u8fb9\u6240\u6709\u7684\u70b9\u90fd\u662f1\uff0c\u90a3\u4e48\u6700\u5de6\u8fb9\u8bb0\u4e3a0 \n        return ;\n    }\n    int mid=(T[poi].r+T[poi].l)/2;\n    if(f>mid) search1(f,ne,poi*2+1);\n    else if(ne<=mid) search1(f,ne,poi*2);\n    else \n    {\n        anst=0;\n        qh(T[poi*2+1].l,ne,poi);//\u56e0\u4e3a\u6211\u4eec\u627e\u7684\u662f\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u5982\u679c\u73b0\u5728\u6240\u5728\u7684\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u4e2d\u90fd\u6709\u96f6\uff0c\u4f18\u5148\u5f80\u53f3\u8df3 \n        if(anst<ne-T[poi*2+1].l+1)\n            search1(mid+1,ne,poi*2+1);//\u5f80\u53f3\u8df3\uff0c\u7ee7\u7eed\u9012\u5f52 \n        else search1(f,mid,poi*2);\n    }\n}\n//\u5bf9\u4e8e\u5bfb\u627e\u5728\u8be2\u95ee\u70b9\u53f3\u8fb9\u6700\u8fd1\u4e3a\u96f6\u7684\u70b9\uff0c\u9053\u7406\u540c\u4e0a \nvoid search2(int f,int ne,int poi)\n{\n    if(T[poi].l==f&&T[poi].r==ne&&T[poi].v==0&&f==ne)\n    {\n        cc2=f;\n        return ;\n    }\n    if(T[poi].l==f&&T[poi].r==ne&&T[poi].v==1&&f==ne)\n    {\n        cc2=n+1;\n        return ;\n    }\n    int mid=(T[poi].l+T[poi].r)/2;\n    if(f>mid) search2(f,ne,poi*2+1);\n    else if(ne<=mid) search2(f,ne,poi*2);\n    else \n    {\n        anst=0;\n        qh(f,T[poi*2].r,poi);\n        if(anst<T[poi*2].r-f+1)//if(anst<T[poi*2].r-f+1)\n            search2(f,mid,poi*2);\n        else search2(mid+1,ne,poi*2+1);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        h[i]=1;\n    }\n    buildtree(1,n,1);\n    for(int i=1;i<=m;i++)\n    {\n        cin>>si;\n        //scanf(\"%c\",&si);\n        if(si=='D')\n        {\n            scanf(\"%d\",&a);\n            insert(a,0,1);\n            sl[++op]=a;\n        }\n        if(si=='Q')\n        {\n            ans=0;\n            scanf(\"%d\",&a);\n            if(!h[a])\n            {\n                printf(\"0\\n\");\n                continue ;\n            }\n            if(a==1) \n            {\n                search2(a+1,n,1);\n                cc1=0;\n            }\n            else if(a==n)\n            {\n                search1(1,a-1,1);\n                cc2=n+1;\n            }\n            else\n            {\n                search1(1,a-1,1);\n                //printf(\"* %d *\",cc1);\n                search2(a+1,n,1);\n                //printf(\"* %d *\",cc2);\n            }\n            printf(\"%d\\n\",cc2-cc1-1);\n        }\n        if(si=='R')\n        {\n            int t=sl[op--];\n            insert(t,1,1);\n        }\n    }\n    return 0;\n}\n```\n\n\n------------\n\n\u53ef\u80fd\u4e0d\u662f\u5f88\u597d\u7406\u89e3\u5427\uff0c\u4e0d\u61c2\u7684\u8bdd\u53ef\u4ee5\u753b\u51fa\u7ebf\u6bb5\u6811\u7684\u56fe\u6765\uff0c\u81ea\u5df1\u6a21\u62df\u7740\u8d70\u4e00\u904d\u3002\n\nRP++ \n",
        "postTime": 1493203305,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P1503 \u9b3c\u5b50\u8fdb\u6751"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8be2\u95ee\u6765\u8bf4\uff0c\u5176\u5b9e\u5c31\u662f\u60f3\u77e5\u9053\uff0c\u4eceX\u8fd9\u4e2a\u70b9\uff0c\u5411\u53f3\u80fd\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u7684\u70b9\uff0c\u5411\u5de6\u80fd\u6709\u591a\u5c11\u4e2a\u8fde\u7eed\u7684\u70b9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u65b9\u5411\u8003\u8651\uff0c\u53e6\u4e00\u4e2a\u65b9\u5411\u540c\u7406\u3002\u4ee5\u5411\u5de6\u4e3a\u4f8b\uff1a\n\n\u6211\u4eec\u7528a[i]=1\u4ee3\u8868i\u8fd9\u4e2a\u65b9\u5f0f\u6ca1\u6709\u88ab\u6467\u6bc1\uff0ca[i]=0\u8868\u793a\u5df2\u7ecf\u88ab\u6467\u6bc1\uff0c\u90a3\u4e48sum[i]\u5c31\u8868\u793a\u4ece1~i\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u623f\u5b50\u6ca1\u6709\u88ab\u6467\u6bc1\uff0c\u6709\u4e86\u8fd9\u4e2a\u4e1c\u897f\u4ee5\u540e\uff0c\u5219\u6709\u5982\u4e0b\u53d1\u73b0\uff1a\u5bf9\u4e8e0<=j<i\uff0c\u5982\u679csum[i]-sum[j]=i-j,\u5219\u8bf4\u660e[i+1,j]\u8fd9\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\u7684\u623f\u5b50\u90fd\u662f\u5b8c\u597d\u7684\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5426\u662f\u5b8c\u597d\u7684\uff0c\u5982\u679c\u4ece\u5b8c\u597d\u5230\u88ab\u6467\u6bc1\uff0c\u5219insert(i,-1),\u5982\u679c\u4ece\u6467\u6bc1\u5230\u4fee\u590d\uff0c\u5219insert(i,1)\u3002\u7ef4\u62a4\u4e86\u8fd9\u4e2a\u4e1c\u897f\u4ee5\u540e\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0cfor\u5faa\u73af\u4ecei\u5f00\u59cb\u5230\u5de6\u8fb9\uff0c\u627e\u5230\u6700\u8fdc\u7684sum[i]-sum[j]=i-j\u5373\u53ef\u3002\n\n\u8003\u8651\u5230\u5982\u679c\u6700\u8fdc\u7684\u90a3\u4e2a\u70b9\u662fk,\u90a3\u4e48k\u7684\u53f3\u8fb9\u4e00\u5b9a\u90fd\u6ee1\u8db3sum[i]-sum[j]=i-j\uff0c\u800ck\u7684\u5de6\u8fb9\u4e00\u5b9a\u90fd\u4e0d\u6ee1\u8db3\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e8c\u5206\u6765\u505a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(m\\*log(n)\\*log(n))\n",
        "postTime": 1415842365,
        "uid": 3432,
        "name": "dlhham",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\u9898\u76ee\u9700\u8981\u6211\u4eec\u7ef4\u62a4\u7684\u64cd\u4f5c\u662f1.\u5355\u70b9\u4fee\u6539\uff0c2.\u67e5\u8be2\u4e00\u4e2a\u70b9\u6240\u5728\u6700\u957f\u7684\u8fde\u7eed1\u533a\u95f4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u67e5\u8be2\u601d\u8def\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u90fd\u662f\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\u4e86\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u9700\u8981\u627e\u7684\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u5de6\u7b2c\u4e00\u4e2a0\u7684\u4f4d\u7f6el\uff0c\u548c\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u53f3\u7b2c\u4e00\u4e2a0\u7684\u4f4d\u7f6er\u3002\u6700\u7ec8\u6240\u6c42\u7b54\u6848\u65e2\u662f$r-l-1$\u3002\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u6570\u5747\u75310\u548c1\u7ec4\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5982\u679c\u662f0\u5219\u8bf4\u660e\u67090\uff0c\u5982\u679c\u662f1\u5219\u8bf4\u660e\u4e0d\u5305\u542b0\u3002\u4ee5\u67e5\u8be2\u5de6\u8fb9\u7b2c\u4e00\u4e2a0\u4e3a\u4f8b\uff0c\u6211\u4eec\u5728\u67e5\u8be2\u65f6\u5982\u679c\u53d1\u73b0\u533a\u95f4\u5728\u7ebf\u6bb5\u6811\u4e2d\u88ab\u5206\u4e3a\u4e86\u4e24\u6bb5\uff0c\u90a3\u4e48\u6211\u4eec\u80af\u5b9a\u4f18\u5148\u67e5\u8be2\u53f3\u8fb9\u90a3\u6bb5\u662f\u5426\u5305\u542b0\uff0c\u5982\u679c\u4e0d\u5305\u542b\u90a3\u4e48\u6211\u4eec\u518d\u67e5\u8be2\u5de6\u8fb9\u90a3\u6bb5\uff0c\u6211\u4eec\u5bf9\u4e8e\u5168\u90e8\u662f1\u7684\u533a\u95f4\u503c\u76f4\u63a5\u8fd4\u56de\u6781\u5927\u503c\uff0c\u7136\u540e\u8fdb\u884c\u5224\u65ad\u5373\u53ef\u3002\n\n```cpp\nint queryl(int t,int l,int r,int pos){\n\tif(tr[t].minn) return inf;\n\tif(l==r) return l;\n\tint mid=(l+r)>>1;\n\tif(r==pos){\n\t\tif(tr[t*2+1].minn==0) return queryl(t*2+1,mid+1,r,pos);\n\t\treturn queryl(t*2,l,mid,mid);\n\t}\n\tif(pos<=mid) return queryl(t*2,l,mid,pos);\n\telse{\n\t\tint flag=queryl(t*2+1,mid+1,r,pos);\n\t\tif(flag==inf) return queryl(t*2,l,mid,mid);\n\t\telse return flag;\n\t}\n}\n```\n\n\u5bf9\u4e8e\u67e5\u8be2\u53f3\u8fb9\u7b2c\u4e00\u4e2a0\u7684\u4f4d\u7f6e\u4e5f\u662f\u76f8\u540c\u7684\u539f\u7406\u3002\n\n\u6700\u7ec8\u6c42\u503c\u65f6\u6709\u4e00\u70b9\u5c0f\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u5f53\u524d\u67e5\u8be2\u7684\u662f1\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5de6\u8fb9\u7b2c\u4e00\u4e2a0\u7684\u4f4d\u7f6e\u67e5\u8be2\u51fa\u6765\u662finf\uff0c\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u5373\u53ef\u3002\n\nCode\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#define inf 0x7f7f7f7f\n#define N 50010\nusing namespace std;\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0' || ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nint n,m,a[N],stac[N],top;\nchar opt[2];\n\nstruct TR{\n\tint minn;\n}tr[N*4];\n\nvoid up(int t){\n\ttr[t].minn=min(tr[t*2].minn,tr[t*2+1].minn);\n}\n\nvoid build(int t,int l,int r){\n\tif(l==r){\n\t\ttr[t].minn=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(t*2,l,mid);build(t*2+1,mid+1,r);\n\tup(t);\n}\n\nvoid update(int t,int L,int R,int pos,int k){\n\tif(L==R){\n\t\ttr[t].minn=k;\n\t\treturn ;\n\t}\n\tint mid=(L+R)>>1;\n\tif(pos<=mid) update(t*2,L,mid,pos,k);\n\telse update(t*2+1,mid+1,R,pos,k);\n\tup(t);\n}\n\nint queryl(int t,int l,int r,int pos){\n\tif(tr[t].minn) return inf;\n\tif(l==r) return l;\n\tint mid=(l+r)>>1;\n\tif(r==pos){\n\t\tif(tr[t*2+1].minn==0) return queryl(t*2+1,mid+1,r,pos);\n\t\treturn queryl(t*2,l,mid,mid);\n\t}\n\tif(pos<=mid) return queryl(t*2,l,mid,pos);\n\telse{\n\t\tint flag=queryl(t*2+1,mid+1,r,pos);\n\t\tif(flag==inf) return queryl(t*2,l,mid,mid);\n\t\telse return flag;\n\t}\n}\n\nint queryr(int t,int l,int r,int pos){\n\tif(tr[t].minn) return inf;\n\tif(l==r) return l;\n\tint mid=(l+r)>>1;\n\tif(l==pos){\n\t\tif(tr[t*2].minn==0) return queryr(t*2,l,mid,pos);\n\t\telse return queryr(t*2+1,mid+1,r,mid+1);\n\t}\n\tif(pos>mid) return queryr(t*2+1,mid+1,r,pos);\n\telse{\n\t\tint flag=queryr(t*2,l,mid,pos);\n\t\tif(flag==inf) return queryr(t*2+1,mid+1,r,mid+1);\n\t\telse return flag;\n\t}\n}\n\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=1;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%s\",opt);\n\t\tif(opt[0]=='D'){\n\t\t\tint x=read();\n\t\t\ta[x]=0;\n\t\t\tupdate(1,1,n,x,0);\n\t\t\tstac[++top]=x;\n\t\t}\n\t\telse if(opt[0]=='R'){\n\t\t\ta[stac[top]]=1;\n\t\t\tupdate(1,1,n,stac[top--],1);\n\t\t}\n\t\telse{\n\t\t\tint x=read();\n\t\t\tif(a[x]==0){\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint l=max(queryl(1,1,n,x-1),0),r=min(queryr(1,1,n,x+1),n+1);\n\t\t\tl=(l==inf)?0:l;\n\t\t\tprintf(\"%d\\n\",r-l-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572936875,
        "uid": 111850,
        "name": "L______",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528treap\u6765\u5199\uff0c\u6211\u7528\u7684\u662ffhq-treap\uff0c\u867d\u7136\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u4f46\u662f\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff1a  \n\u5148\u628a0\u548cn+1\u63d2\u5165treap\uff0c\u4e4b\u540e\u6bcf\u6b21D\u64cd\u4f5c\u90fd\u628a\u5c0f\u9b3c\u5b50\u70b8\u6389\u7684\u623f\u5b50\u63d2\u5165treap\uff0c\u5e76\u7528\u4e00\u4e2a\u6808\u5b58\u50a8\u70b8\u6389\u7684\u623f\u5b50\uff0c\u6bcf\u6b21R\u64cd\u4f5c\u5c31\u628a\u6808\u91cc\u6700\u5916\u9762\u7684\u70b8\u6389\u7684\u623f\u5b50\u53d6\u51fa\uff0c\u4ecetreap\u4e2d\u5220\u9664\u3002  \n\u5bf9\u4e8eQ\u64cd\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5224\u65adx\u623f\u662f\u5426\u88ab\u70b8\u6389\u4e86\uff0c\u5982\u679c\u88ab\u70b8\u6389\u5c31\u8f93\u51fa0\uff0c\u53ea\u9700\u8981\u7528\u4e00\u4e2abool\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u88ab\u70b8\u6389\u5373\u53ef\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u70b8\u6389\uff0c\u5c31\u6c42\u51fax\u7684\u524d\u7f00\u548c\u540e\u7f00\uff0c\u7136\u540e\u7528\u540e\u7f00-\u524d\u7f00-1\u5373\u53ef\u3002\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn=100005,inf=1e9+1;\nint son[maxn][2],rnd[maxn],num[maxn],size[maxn];//son[x][0]\uff1ax\u7684\u5de6\u5b50\u7ed3\u70b9\uff0cson[x][1]\uff1ax\u7684\u53f3\u5b50\u7ed3\u70b9\uff0crnd[x]\uff1ax\u7684rand\u503c\uff0cnum[x]\uff1ax\u7684\u7ed3\u70b9\u503c\uff0csize[x]\uff1a\u4ee5x\u4e3a\u6839\u7684\u6811\u7684\u5927\u5c0f\nint root,tot;\nbool vis[maxn];//\u8bb0\u5f55x\u662f\u5426\u88ab\u70b8\nint stack[maxn],idx;//\u6808\u5b58\u50a8\u5df2\u70b8\u7684\u623f\u5b50\n\nvoid build(int &x,int delta){\t//\u5efa\u9020\u7ed3\u70b9\n    rnd[x=++tot]=rand();\n    num[x]=delta;\n    size[x]=1;\n}\t\n\nvoid update(int x){\t//\u5411\u4e0a\u63a8size\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684size=\u5de6\u5b50\u7ed3\u70b9\u7684size+\u53f3\u5b50\u7ed3\u70b9\u7684size+1\n    if(!x)\treturn;\n    size[x]=size[son[x][0]]+size[son[x][1]]+1;\n}\n\nvoid merge(int &x,int l,int r){//fhq-treap\u7684\u5408\u5e76\u64cd\u4f5c\uff0c\u5c06\u4e24\u9897\u6811\u5408\u5e76\u6210\u4e00\u68f5\n    if(!l or !r)\tx=l+r;\n    else if(rnd[l]<=rnd[r])\n        x=l,merge(son[x][1],son[x][1],r),update(x);\n    else\n        x=r,merge(son[x][0],l,son[x][0]),update(x);\n}\n\nvoid split(int x,int &l,int &r,int k){//fhq-treap\u7684\u5206\u88c2\u64cd\u4f5c\uff0c\u5c06\u4e24\u68f5\u6811\u4ee5\u7ed3\u70b9\u503c\u5e8f\u53f7\u5206\u88c2\uff0c\u5e8f\u53f7<=k\u7684\u5206\u5728\u5de6\u5b50\u6811\uff0c\u53cd\u4e4b\u5206\u5728\u53f3\u5b50\u6811\n    if(!k)\tl=0,r=x;\n    else if(k==size[x])\tl=x,r=0;\n    else if(k<=size[son[x][0]])\n        r=x,split(son[x][0],l,son[x][0],k),update(x);\n    else\n        l=x,split(son[x][1],son[x][1],r,k-size[son[x][0]]-1),update(x);\n}\n\nint rank(int x,int k){\t//\u5f97\u5230\u67d0\u4e2a\u6570\u5728\u6811\u4e2d\u7684\u5e8f\u53f7-1 \n    if(!x)\treturn 0;\n    if(k<=num[x])\t\n        return rank(son[x][0],k);\n    else\n        return rank(son[x][1],k)+size[son[x][0]]+1;\n}\n\nvoid insert(int delta){\t//\u63d2\u5165\u64cd\u4f5c\n    int x,y,z,rk=rank(root,delta);\n    split(root,x,y,rk);\n    build(z,delta);\n    merge(x,x,z);\n    merge(root,x,y);\n}\n\nvoid del(int delta){\t//\u5220\u9664\u64cd\u4f5c\n    int x,y,z,rk=rank(root,delta)+1;\n    split(root,x,y,rk);\n    split(x,x,z,rk-1);\n    merge(root,x,y);\n}\n\nint pre(int delta){ \t//\u6c42\u51fa\u503c\u4e3adelta\u7684\u7ed3\u70b9\u7684\u524d\u7f00\u7684\u503c\n    int x,y,z,rk=rank(root,delta);\n    split(root,x,y,rk);\n    split(x,x,z,rk-1);\n    int ans=num[z];\n    merge(x,x,z);\n    merge(root,x,y);\n    return ans;\n}\n\nint succ(int delta){ \t//\u6c42\u51fa\u503c\u4e3adelta\u7684\u7ed3\u70b9\u7684\u540e\u7f00\u7684\u503c\n    int x,y,z,rk=rank(root,delta+1);\n    split(root,x,y,rk+1);\n    split(x,x,z,rk);\n    int ans=num[z];\n    merge(x,x,z);\n    merge(root,x,y);\n    return ans;\n}\n\nint main(){ \n    int n,m;\n    scanf(\"%d %d\" ,&n,&m);\n    insert(0);\t\t\t\t//\u5148\u628a\u8fb9\u754c0\u548cn+1\u63d2\u5165treap\n    insert(n+1);\n    while(m--){\n        char opt;\n        int x;\n        scanf(\" %c \",&opt);\n        if(opt=='D'){\n        \tscanf(\"%d\",&x);\n        \tvis[x]=1;\n        \tinsert(x);\n        \tstack[++idx]=x;\n        }\n        else if(opt=='R'){\n        \tint tmp=stack[idx--];\n            del(tmp);\n        \tvis[tmp]=0;\n        }\n        else{\n        \tscanf(\"%d\",&x);\n        \tif(!vis[x])\n                printf(\"%d\\n\",succ(x)-pre(x)-1);\t//\u7b54\u6848\u4e3a\u540e\u7f00-\u524d\u7f00-1\n            else printf(\"0\\n\");\n        }\n    }\n    return 0;\n}\n```\n\u5982\u679c\u5bf9fhq-treap\u7684\u64cd\u4f5c\u6709\u4e0d\u7406\u89e3\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u79fb\u6b65\u6211\u7684\u535a\u5ba2[fhq-treap\u5b66\u4e60\u7b14\u8bb0](https://www.luogu.org/blog/2662945155-minions/fhq-treap-xue-xi-bi-ji)",
        "postTime": 1533609803,
        "uid": 49092,
        "name": "Hugo_Minion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9960345.html)\n\n### \u5e73\u8861\u6811\u597d\u9898\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1503)\n\n### \u8fd9\u9053\u9898\u8981\u7528Splay\uff0c\u6211\u535a\u5ba2\u91cc\u6709[\u5bf9Splay\u7684\u8be6\u7ec6\u4ecb\u7ecd](https://www.cnblogs.com/yzhang-rp-inf/p/9957906.html)\n\n\u8fd9\u9053\u9898\u601d\u7ef4\u6709\u70b9\u96be\uff0c\u8981\u628a\u88ab\u6467\u6bc1\u7684\u8282\u70b9\u63d2\u5165\u5e73\u8861\u6811\uff0c\u800c\u4e0d\u662f\u628a\u6ca1\u6709\u6467\u6bc1\u7684\u8282\u70b9\u63d2\u5165\n\n\u5148\u628a0\u548cn+1\u63d2\u5165\u5e73\u8861\u6811\uff0c\u4f5c\u4e3a\u8fb9\u754c\n\n\u64cd\u4f5c1\uff1a\u6467\u6bc1\u8282\u70b9\uff0c\u628a\u8be5\u70b9\u63d2\u5165\u5e73\u8861\u6811\n\n\u64cd\u4f5c2\uff1a\u4fee\u590d\u6700\u540e\u4e00\u4e2a\u88ab\u6467\u6bc1\u8282\u70b9\u7684\u4f4d\u7f6e\u7684\u53ef\u4ee5\u7528\u6808\u6765\u6c42\u51fa\uff0c\u5e76\u628a\u8be5\u70b9\u4f4d\u7f6e\u4ece\u5e73\u8861\u6811\u4e2d\u5220\u9664\n\n\u64cd\u4f5c\u4e09\uff1a\u641e\u4e00\u4e2avis\u6570\u7ec4\uff0c\u8bb0\u5f55\u662f\u5426\u88ab\u6467\u6bc1\uff0c\u5982\u679c\u88ab\u6467\u6bc1\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa0\uff0c\u6ca1\u88ab\u6467\u6bc1\u7684\u8bdd\uff0c\u8f93\u51fa\u8be5\u70b9\u540e\u7ee7\u7684\u4f4d\u7f6e-\u8be5\u70b9\u524d\u9a71\u7684\u4f4d\u7f6e-1\uff0c\u8fd9\u5e94\u8be5\u4e5f\u5f88\u597d\u7406\u89e3qaq\n\n\u5269\u4e0b\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86~~\uff08\u9664\u4e86\u4ee3\u7801\u6709\u70b9\u957f\uff09~~\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n#define root tree[0].ch[1]\n#define inf 1000000005\nusing namespace std;\ninline int read()\n{\n\tregister int x=0,f=1;register char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*f;\n}\ninline void write(register int x)\n{\n\tif(!x)putchar('0');if(x<0)x=-x,putchar('-');\n\tstatic int sta[36];int cnt=0;\n\twhile(x)sta[cnt++]=x%10,x/=10;\n\twhile(cnt)putchar(sta[--cnt]+48);\n}\ninline int Min(register int a,register int b)\n{\n\treturn a<b?a:b;\n}\ninline int Max(register int a,register int b)\n{\n\treturn a>b?a:b;\n}\nstruct Splay{\n\tint fa,ch[2],v,sum,rec;\n}tree[50005];\nint tot=0;\ninline bool findd(register int x)\n{\n\treturn x==tree[tree[x].fa].ch[0]?0:1;\n}\ninline void connect(register int x,register int fa,register int son)\n{\n\ttree[x].fa=fa;\n\ttree[fa].ch[son]=x;\n}\ninline void update(register int x)\n{\n\ttree[x].sum=tree[tree[x].ch[0]].sum+tree[tree[x].ch[1]].sum+tree[x].rec;\n}\ninline void rotate(register int x)\n{\n\tint Y=tree[x].fa;\n\tint R=tree[Y].fa;\n\tint Yson=findd(x);\n\tint Rson=findd(Y);\n\tint B=tree[x].ch[Yson^1];\n\tconnect(B,Y,Yson);\n\tconnect(Y,x,Yson^1);\n\tconnect(x,R,Rson);\n\tupdate(Y),update(x);\n}\ninline void splay(register int x,register int to)\n{\n\tto=tree[to].fa;\n\twhile(tree[x].fa!=to)\n\t{\n\t\tint y=tree[x].fa;\n\t\tif(tree[y].fa==to)\n\t\t\trotate(x);\n\t\telse if(findd(x)==findd(y))\n\t\t\trotate(y),rotate(x);\n\t\telse\n\t\t\trotate(x),rotate(x);\n\t}\n}\ninline int newpoint(register int v,register int fa)\n{\n\ttree[++tot].v=v;\n\ttree[tot].fa=fa;\n\ttree[tot].sum=tree[tot].rec=1;\n\treturn tot;\n}\ninline void Insert(register int x)\n{\n\tint now=root;\n\tif(root==0)\n\t{\n\t\tnewpoint(x,0);\n\t\troot=tot;\n\t}\n\telse\n\t{\n\t\twhile(19260817)\n\t\t{\n\t\t\t++tree[now].sum;\n\t\t\tif(x==tree[now].v)\n\t\t\t{\n\t\t\t\t++tree[now].rec;\n\t\t\t\tsplay(now,root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint nxt=x<tree[now].v?0:1;\n\t\t\tif(!tree[now].ch[nxt])\n\t\t\t{\n\t\t\t\tint p=newpoint(x,now);\n\t\t\t\ttree[now].ch[nxt]=p;\n\t\t\t\tsplay(p,root);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnow=tree[now].ch[nxt];\n\t\t}\n\t}\n}\ninline int find(register int x)\n{\n\tint now=root;\n\twhile(19260817)\n\t{\n\t\tif(x==tree[now].v)\n\t\t{\n\t\t\tsplay(now,root);\n\t\t\treturn now;\n\t\t}\n\t\tint nxt=x<tree[now].v?0:1;\n\t\tif(!tree[now].ch[nxt])\n\t\t\treturn 0;\n\t\tnow=tree[now].ch[nxt];\n\t}\n}\ninline void delet(register int x)\n{\n\tint pos=find(x);\n\tif(!pos)\n\t\treturn;\n\tif(tree[pos].rec>1)\n\t{\n\t\t--tree[pos].rec;\n\t\t--tree[pos].sum;\n\t}\n\telse\n\t{\n\t\tif(!tree[pos].ch[0]&&!tree[pos].ch[1])\n\t\t\troot=0;\n\t\telse if(!tree[pos].ch[0])\n\t\t{\n\t\t\troot=tree[pos].ch[1];\n\t\t\ttree[root].fa=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint left=tree[pos].ch[0];\n\t\t\twhile(tree[left].ch[1])\n\t\t\t\tleft=tree[left].ch[1];\n\t\t\tsplay(left,tree[pos].ch[0]);\n\t\t\tconnect(tree[pos].ch[1],left,1);\n\t\t\tconnect(left,0,1);\n\t\t\tupdate(left);\n\t\t}\n\t}\n}\ninline int lower(register int v)\n{\n\tint now=root,ans=-inf;\n\twhile(now)\n\t{\n\t\tif(tree[now].v<v&&tree[now].v>ans)\n\t\t\tans=tree[now].v;\n\t\tif(tree[now].v>v)\n\t\t\tnow=tree[now].ch[0];\n\t\telse\n\t\t\tnow=tree[now].ch[1];\n\t}\n\treturn ans;\n}\ninline int upper(register int v)\n{\n\tint now=root,ans=inf;\n\twhile(now)\n\t{\n\t\tif(tree[now].v>v&&tree[now].v<ans)\n\t\t\tans=tree[now].v;\n\t\tif(tree[now].v>v)\n\t\t\tnow=tree[now].ch[0];\n\t\telse\n\t\t\tnow=tree[now].ch[1];\n\t}\n\treturn ans;\n}\nbool vis[50005];\nint stac[50005],top=-1;\nint main()\n{\n\tmemset(vis,false,sizeof(vis));\n\tint n=read(),m=read();\n\tInsert(0);\n\tInsert(n+1);\n\twhile(m--)\n\t{\n\t\tchar ch=getchar();\n\t\twhile(ch!='D'&&ch!='R'&&ch!='Q')\n\t\t\tch=getchar();\n\t\tif(ch=='D')\n\t\t{\n\t\t\tint x=read();\n\t\t\tvis[x]=true;\n\t\t\tstac[++top]=x;\n\t\t\tInsert(x);\n\t\t}\n\t\telse if(ch=='R')\n\t\t{\n\t\t\tvis[stac[top]]=false;\n\t\t\tdelet(stac[top--]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x=read();\n\t\t\tif(vis[x])\n\t\t\t\tputs(\"0\");\n\t\t\telse\n\t\t\t{\n\t\t\t\twrite(upper(x)-lower(x)-1);\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542200577,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "![Peipei](http://img.blog.csdn.net/20180120093509502?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcHJldGVuZF9mYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\u4e0a\u9762\u662f\u6211\u7684 Logo  >\\_<\n\n\n~~\u8fd9\u4e2a\u6211\u4e0d\u4f1a\u7528\u5e73\u8861\u6811\uff0c\u7ebf\u6bb5\u6811\u4e4b\u7c7b\u7684\u641e~~\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u5e73\u8861\u6811\u4e86\uff0cfhq Treap\n\n\u4f46\u662f\u6211\u662f\u771f\u5fc3\u6ca1\u60f3\u5230\u600e\u4e48\u64cd\u4f5c\n\n\u6839\u636e\u67d0\u767d\u7684\u8bdd\n\n>\u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757  \n\n\u6240\u4ee5\n\u6211\u7528\u7684\u5206\u5757\u554a\n\n\u7b80\u5355\u66b4\u529b  \u800c\u4e14\u7a33\u5b9aO(nsqrt(n))\n\n\u8d85\u7ea7\u68d2\n\n\n```cpp\n#include <bits/stdc++.h>\n#define II int\n#define IL inline\n#define R register\n#define I 123456\nusing namespace std;\n\nIL void of(R II &a) {\n    R char c=getchar(); R II w=1,p=0;\n    while (c<'0' || c>'9') { if(c=='-') w=-1; c=getchar(); }\n    while (c>='0' && c<='9') { p=p*10+c-'0'; c=getchar(); }\n    a=p*w; \n}\n\n/* -------------------- Peipei -------------------- */\n\nII Stack[I], had[I], lazy[I], belong[I];\n\nII block,n,m,_top;\n\nIL II Ll(R II x) {\n    R II ans=0; \n    while (x>0 && !lazy[x/block]) ans+=min(x,block), x-=block;\n    while (x>0 && !had[x]) ans++, x--;\n    return ans;\n}\n\nIL II Rr(R II x) {\n    R II ans=0; if(x==n+1) return 0;\n    while (x<=n && !lazy[belong[x]]) ans+=block, x+=block;\n    if(x>n+1) ans-=block-(n-n/block*block);\n    while (x<=n && !had[x]) ans++, x++;\n    return ans;\n}\n\nIL II todo(R II x) {\n    R II ans=0,l=x,r=x,flag=0;\n    if(had[x]) return 0;\n    while (l && belong[l]==belong[x]) {\n        ans++; l--;\n        if(had[l]) { flag=1; break ; }\n    }\n    if(!flag) ans+=Ll(l);\n    flag=0;\n    r++;\n    while (r<=n && belong[r]==belong[x]) {\n        if(had[r]) { flag=1; break ; }\n        ans++; r++;\n    }\n    if(!flag) ans+=Rr(r);\n    return ans;\n}\n\nint main()\n{\n//    freopen(\"1.in\",\"r\",stdin);\n    \n    of(n); of(m); block=sqrt(n);\n    for(R II i=1;i<=n;i++) belong[i]=(i-1)/block+1;\n    R char opt; R II x;\n    while (m --) {\n        cin>> opt; \n        if(opt=='D') {\n            of(x); Stack[++_top]=x;\n            had[x]=1;\n            lazy[belong[x]]++;\n        }\n        if(opt=='R') {\n            x=Stack[_top--];\n            had[x]=0;\n            lazy[belong[x]]--;\n        }\n        if(opt=='Q') {\n            of(x);\n            printf(\"%d\\n\",todo(x));\n        }\n    }\n}\n```\n\n\u6839\u672c\u4e0d\u7528\u53bb\u8bb2\u7ec6\u8282\u5b9e\u73b0\n\n\u88f8\u7684\u5206\u5757\u5566\n",
        "postTime": 1516869327,
        "uid": 36716,
        "name": "wuzhoupei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u7ffb\u4e86\u516d\u9875\u9898\u89e3\uff0c\u5374\u6ca1\u6709\u4e00\u7bc7\u7528\u6811\u72b6\u6570\u7ec4\u800c\u4e14 $O(NlogN)$ \u7684\uff0c\u5927\u591a\u662f\u7ebf\u6bb5\u6811/\u5e73\u8861\u6811 $O(NlogN)$ \u548c\u6811\u72b6\u6570\u7ec4\u4e0a\u4e8c\u5206 $O(Nlog^2N)$ \u7684\u3002\u8fd9\u7bc7\u9898\u89e3\u5c31\u8bb2\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684 $O(NlogN)$ \u89e3\u6cd5\u3002\n\n\u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $N$ \u7684 $01$ \u5e8f\u5217 $a$\uff0c\u521d\u59cb\u4e3a\u5168 $0$\uff0c\u6709\u4e09\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662f\u4fee\u6539 $x$ \u4e3a $1$\uff0c\u4e00\u79cd\u662f\u64a4\u56de\u4e00\u6b21\u4fee\u6539\uff0c\u4e00\u79cd\u662f\u7ed9\u5b9a $x$ \u6c42\u7b2c $x$ \u4e2a\u5143\u7d20\u6240\u5728\u7684\u5168\u90e8\u662f $0$ \u7684\u8054\u901a\u5757\u7684\u5927\u5c0f\u3002\n\n\u9898\u76ee\u5206\u6790\uff1a\n\n\u9996\u5148\uff0c\u7531\u4e8e\u53ea\u4f1a\u64a4\u56de\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u628a\u8be5\u4f4d\u4fee\u6539\u4e3a $1$ \u540e\u628a\u4fee\u6539\u7684\u4f4d\u7f6e\u5165\u6808\uff0c\u6bcf\u6b21\u64a4\u56de\u64cd\u4f5c\u5f39\u51fa\u6808\u9876\u5143\u7d20\u5e76\u628a\u8be5\u4f4d\u4fee\u6539\u6210 $0$\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u524d\u4e24\u4e2a\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\u5355\u70b9\u4fee\u6539\uff08$0$ \u53d8 $1$\uff0c$1$ \u53d8 $0$\uff09\uff1b\n\n\u5176\u6b21\uff0c\u8981\u6c42\u7b2c $x$ \u4e2a\u5143\u7d20\u6240\u5728\u7684\u5168\u90e8\u662f $0$ \u7684\u8054\u901a\u5757\u5927\u5c0f\uff0c\u6211\u4eec\u8981\u627e\u5230\u5b83\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a $1$\uff0c\u5373\u6700\u5c0f\u7684 $y\\geq x$ \u6ee1\u8db3 $a_y=1$ \u548c\u6700\u5927\u7684 $z\\leq x$ \u6ee1\u8db3 $a_z=1$\uff0c\u5219 $y-z-1$ \u5c31\u662f\u7b54\u6848\uff1b\n\n\u8003\u8651 $y$ \u7684\u6c42\u6cd5\uff0c\u7b49\u4ef7\u4e8e\u6c42\u6700\u5927\u7684 $y'\\geq x$ \u4f7f\u5f97  $a_x$ \u5230 $a_{y'}$ \u5168\u90e8\u662f $0$\uff0c\u5219 $y=y'+1$\u3002\u56e0\u6b64\u8bbe $sum_t=\\sum_{i=1}^ta_i$\uff0c\u5219\u95ee\u9898\u7b49\u4ef7\u4e8e\u6c42\u6700\u5927\u7684 $y'\\geq x$ \u4f7f\u5f97 $sum_{y'}=sum_x$\u3002\u5f53\u7136\uff0c\u56e0\u4e3a $sum_x=sum_x$\uff0c$y'$ \u4e00\u5b9a $\\geq x$\uff0c\u6545\u6761\u4ef6\u53ef\u4ee5\u7701\u53bb\u3002\u6c42 $z$ \u4e5f\u540c\u7406\u6c42\u51fa\u4e00\u4e2a\u7c7b\u4f3c\u7684 $z'$\uff0c\u518d\u7528 $z=z'-1$ \u6c42\u51fa\u7b54\u6848\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u6837\u7684 $y'$ \u600e\u4e48\u6c42\u5462\uff1f\u53ef\u4ee5\u8003\u8651\u7528\u500d\u589e\u7684\u65b9\u6cd5\uff0c\u5148\u6c42\u51fa $sum_x$\uff0c\u5faa\u73af `i=logN...0`\uff0c\u7ef4\u62a4\u53d8\u91cf `ind` \u548c `cur`\uff08\u521d\u59cb\u5747\u4e3a0\uff09\uff0c\u6bcf\u6b21\u5982\u679c $ind+2^i\\leq N$ \u4e14 $cur+\\sum_{j=ind+1}^{ind+2^i}a_j\\leq sum_x$\uff0c\u5219\u628a $ind$ \u66f4\u65b0\u4e3a $ind+2^i$\uff0c$cur$ \u4e5f\u76f8\u5e94\u66f4\u65b0\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u7531\u4e8e $ind$ \u662f\u4ece\u9ad8\u5230\u4f4e\u4e00\u4f4d\u4f4d\u8003\u8651\u8fd9\u4e00\u4f4d\u662f $1$ \u8fd8\u662f $0$ \u7684\uff0c$ind+2^i$ \u7684\u4e8c\u8fdb\u5236\u6700\u4f4e\u4f4d\u4e00\u5b9a\u662f\u4ece\u53f3\u5230\u5de6\u7b2c $i+1$ \u4f4d\uff08\u4ece $1$ \u5f00\u59cb\u8ba1\u6570\uff09\uff0c\u56e0\u6b64 $lowbit(ind+2^i)$ \u4e00\u5b9a\u4e3a $2^i$\u3002\u6240\u4ee5\uff0c$\\sum_{j=ind+1}^{ind+2^i}a_j=\\sum_{j=lowbit(ind+2^i)}^{ind+2^i}a_j=bit_{ind+2^i}$\uff0c\u5176\u4e2d $bit_t$ \u8868\u793a\u6811\u72b6\u6570\u7ec4\u7b2c $t$ \u4f4d\u5b58\u50a8\u7684\u503c\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u4f18\u79c0\u505a\u6cd5\u3002\u5bf9\u6570\u7ec4 $a$ \u5efa\u6811\u72b6\u6570\u7ec4\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5148 $O(logN)$ \u67e5\u8be2 $sum_x$\uff0c\u518d $O(logN)$ \u7528\u4e0a\u8ff0\u65b9\u6cd5\u500d\u589e\uff0c\u5f97\u51fa $y'$\u3002\u5bf9\u4e8e $z'$ \u7684\u6c42\u6cd5\uff0c\u56e0\u4e3a\u548c $y'$ \u7684\u6c42\u6cd5\u662f\u5bf9\u79f0\u7684\uff0c\u53ef\u4ee5\u628a\u6570\u7ec4\u7ffb\u8f6c\u4e4b\u540e\uff0c\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u6c42\u51fa\uff0c\u6545\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\uff0c\u8be6\u60c5\u53ef\u89c1\u4ee3\u7801\u3002\u6700\u540e\u65e0\u9700\u7b97 $y$ \u548c $z$\uff0c\u7531 $answer=y-z-1=(y'+1)-(z'-1)-1=y'-z'+1$\uff0c\u7b97\u51fa $y'$ \u4e0e $z'$ \u5373\u53ef\u6c42\u51fa\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u5438\u6c27 $46ms$\uff0c\u4e0d\u5438\u6c27 $63ms$\uff0c\u53ef\u89c1\u5176\u5e38\u6570\u4e4b\u5c0f\uff09\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n\nconst int N=50000;\nconst int LOGN=15;\nconst int M=50000;\n\ninline void readi(int& i)\n{\n\tstatic char ch;\n\twhile ((ch=getchar())>'9'||ch<'0');\n\ti=ch-'0';\n\twhile ((ch=getchar())<='9'&&ch>='0')\n\t\ti=i*10+(ch-'0');\n\treturn;\n}\n\ninline void readc(char& ch)\n{\n\twhile ((ch=getchar())>'Z'||ch<'A');\n\treturn;\n}\n\nint n, m;\n\nbool del[N+10];\n\nstruct binaryit\n{\n\tint c[N+10];\n\tvoid modify(int i, int k)\n\t{\n\t\tfor (int j=i; j<=n; j+=j&-j)\n\t\t\tc[j]+=k;\n\t\treturn;\n\t}\n\tint query1(int i)\n\t{\n\t\tint tmpans=0;\n\t\tfor (int j=i; j; j&=j-1)\n\t\t\ttmpans+=c[j];\n\t\treturn tmpans;\n\t}\n\tint query2(int k)\n\t{\n\t\tint ind=0, cur=0;\n\t\tfor (int i=LOGN; i>=0; --i)\n\t\t\tif (ind+(1<<i)<=n&&cur+c[ind+(1<<i)]<=k)\n\t\t\t\tind+=(1<<i), cur+=c[ind];\n\t\treturn ind;\n\t}\n} b1, b2;\n\nint des[N+10], cnt=0;\n\nint main()\n{\n\treadi(n), readi(m);\n\tfor (int i=1; i<=m; ++i)\n\t{\n\t\tchar cmd;\n\t\treadc(cmd);\n\t\tint x;\n\t\tif (cmd=='D')\n\t\t{\n\t\t\treadi(x);\n\t\t\tdel[x]=true;\n\t\t\tb1.modify(x, 1);\n\t\t\tb2.modify(n-x+1, 1);\n\t\t\tdes[++cnt]=x;\n\t\t}\n\t\telse if (cmd=='R')\n\t\t{\n\t\t\tx=des[cnt--];\n\t\t\tdel[x]=false;\n\t\t\tb1.modify(x, -1);\n\t\t\tb2.modify(n-x+1, -1);\n\t\t}\n\t\telse if (cmd=='Q')\n\t\t{\n\t\t\treadi(x);\n\t\t\tif (del[x])\n\t\t\t{\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\", b1.query2(b1.query1(x))+b2.query2(b2.query1(n-x+1))-n);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"stupid yyc\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1579273691,
        "uid": 66287,
        "name": "\u6a31\u521d\u97f3\u6597\u6a61\u76ae",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u88ab\u6211\u62ff\u6765\u5f53Splay\u7684\u7ec3\u624b\u9898\u3002\u3002\u3002\u662f\u6211\u4f7f\u7528Splay AC\u7684\u7b2c\u4e00\u9053\u9898\u3002\n\n\u6709\u5173Splay\u53ef\u4ee5\u53c2\u7167\u8fd9\u4f4ddalao\u8be6\u5c3d\u7684\u89e3\u91ca->[Splay\u5165\u95e8\u89e3\u6790](https://blog.csdn.net/qq_30974369/article/details/77587168)\uff0c\u6216\u8005\u770b\u770b[\u672c\u849f\u84bb\u7684\u7406\u89e3](https://www.luogu.org/blog/xryjr233/post-20181024splay-shen-zhan-shu-shuo-ju-jie-gou-post)\n\n\u8fd9\u9898\u7684\u8be2\u95eex,\u5c31\u662f\u6c42\u76ee\u524d\u88ab\u70b8\u6bc1\u7684\u623f\u5b50\u4e2dx\u7684\u524d\u9a71\u548c\u540e\u7ee7,\u8bbe\u524d\u9a71\u4e3a$last$,\u540e\u7ee7\u4e3a$next$,\u5219\u7b54\u6848\u4e3a$next-last+1$\u3002\n\n\u4e8e\u662f\u5c31\u53d8\u6210\u4e86Splay\u88f8\u9898\u3002\n\n\u9700\u8981\u4f7f\u7528\u7684\u64cd\u4f5c\u6709:\u65cb\u8f6c(rotate)\u3001\u4f38\u5c55(splay)\u3001\u67e5\u627e(find)\u3001\u63d2\u5165(insert)\u3001\u5220\u9664(delete)\u3001\u524d\u9a71/\u540e\u7ee7(next/last\uff0c\u4ee3\u7801\u4e2d\u7edf\u4e00\u4e3anext)\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5cD x\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u503c\u4e3ax\u7684\u70b9\u63d2\u5165Splay;\n\n\u5bf9\u4e8e\u64cd\u4f5cR\uff0c\u7528\u6808\u8bb0\u5f55D\u64cd\u4f5c\u8fc7\u7684x\uff0c\u5e76\u5c06\u5806\u9996\u5143\u7d20\u4eceSplay\u4e2d\u5220\u9664\uff0c\u518d\u4ece\u6808\u4e2d\u5220\u9664\uff1b\n\n\u5bf9\u4e8e\u8be2\u95eeQ x\uff0c\u5982\u679c\u5b83\u5728Splay\u4e2d\uff0c\u7b54\u6848\u4e3a0\uff1b\u5426\u5219\u67e5\u8be2\u5b83\u5728Splay\u4e2d\u7684\u524d\u9a71$last$\u548c\u540e\u7ee7$next$\uff0c\u7b54\u6848\u4e3a$next-last+1$\u3002\n\n\u6ce8\u610f\u4ee3\u7801\u4e2d\u4e00\u4e9b\u64cd\u4f5c\u91cc\u7684x\u4ee3\u8868\u7684\u610f\u4e49\u4e0d\u4e00\u6837\u3002\n\n\u5177\u4f53\u7684\u4e00\u4e9b\u5c0f\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint f,c[2],val;\n}d[50010];\nint n,m,t,dest[50010],sz,rt,cnt;\nchar info;\nvoid getc(char &c){//\u9632\u6b62\u8bfb\u5165\u5947\u602a\u5b57\u7b26\n\tc=getchar();\n\twhile(c!='D'&&c!='R'&&c!='Q'){\n\t\tc=getchar();\n\t}\n}\nvoid Rotate(int x){//\u65cb\u8f6c\u7f16\u53f7\u4e3ax\u7684\u8282\u70b9\n\tint f=d[x].f;\n\tint gf=d[f].f;\n\tint ws=(d[f].c[1]==x),gws=(d[gf].c[1]==f);\n\td[gf].c[gws]=x;\n\td[x].f=gf;\n\td[f].c[ws]=d[x].c[ws^1];\n\td[d[x].c[ws^1]].f=f;\n\td[x].c[ws^1]=f;\n\td[f].f=x;\n}\nvoid Splay(int x,int fa){//\u5c06\u7f16\u53f7\u4e3ax\u7684\u8282\u70b9\u4f38\u5c55\u4e3afa\u7684\u513f\u5b50\uff0cfa=0\u4f38\u5c55\u5230\u6839\n\twhile(d[x].f!=fa){\n\t\tif(d[d[x].f].f==fa){\n\t\t\tRotate(x);\n\t\t}else{\n\t\t\tint f=d[x].f;\n\t\t\tint gf=d[f].f;\n\t\t\tint ws=(d[f].c[1]==x),gws=(d[gf].c[1]==f);\n\t\t\tif(ws==gws){\n\t\t\t\tRotate(f);\n\t\t\t}else{\n\t\t\t\tRotate(x);\n\t\t\t}\n\t\t\tRotate(x);\n\t\t}\n\t}\n\tif(!fa){\n\t\trt=x;\n\t}\n}\nvoid Find(int x){//\u67e5\u627e\u503c\u4e3ax\u7684\u8282\u70b9\n\tint nd=rt;\n\tif(!nd){\n\t\treturn;\n\t}\n\twhile(d[nd].val!=x){\n\t\tif(d[nd].val>x){\n\t\t\tif(!d[nd].c[0]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnd=d[nd].c[0];\n\t\t}else{\n\t\t\tif(!d[nd].c[1]){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnd=d[nd].c[1];\n\t\t}\n\t}\n\tSplay(nd,0);\n}\nvoid Insert(int x){//\u63d2\u5165\u503c\u4e3ax\u7684\u8282\u70b9\n\tint nd;\n\tif(!rt){\n\t\trt=++cnt;\n\t\td[rt].f=0;\n\t\td[rt].c[0]=0;\n\t\td[rt].c[1]=0;\n\t\td[rt].val=x;\n\t\tnd=cnt;\n\t}else{\n\t\tnd=rt;\n\t\twhile(d[nd].val!=x){\n\t\t\tif(d[nd].val>x){\n\t\t\t\tif(!d[nd].c[0]){\n\t\t\t\t\td[nd].c[0]=++cnt;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnd=d[nd].c[0];\n\t\t\t}else{\n\t\t\t\tif(!d[nd].c[1]){\n\t\t\t\t\td[nd].c[1]=++cnt;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnd=d[nd].c[1];\n\t\t\t}\n\t\t}\n\t\tif(d[nd].val!=x){\n\t\t\td[cnt].f=nd;\n\t\t\td[cnt].c[0]=0;\n\t\t\td[cnt].c[1]=0;\n\t\t\td[cnt].val=x;\n\t\t\tnd=cnt;\n\t\t}\n\t}\n\tSplay(nd,0);\n}\nint Next(int x,int op){//\u503c\u4e3ax\u7684\u524d\u9a71(op=0)\u3001\u540e\u7ee7(op=1)\u8282\u70b9\n\tFind(x);\n\tif(op==0&&d[rt].val<x){\n\t\treturn rt;\n\t}\n\tif(op==1&&d[rt].val>x){\n\t\treturn rt;\n\t}\n\tint nd=d[rt].c[op];\n\twhile(d[nd].c[op^1]){\n\t\tnd=d[nd].c[op^1];\n\t}\n\treturn nd;\n}\nvoid Delete(int x){//\u5220\u9664\u503c\u4e3ax\u7684\u8282\u70b9\n\tint lst=Next(x,0);\n\tint nxt=Next(x,1);\n\tSplay(lst,0);\n\tSplay(nxt,lst);\n\td[nxt].c[0]=0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tInsert(0);//\u5f00\u59cb\u5c060\u548cn+1\u52a0\u5165Splay\uff0c\u786e\u4fdd\u6bcf\u4e2a\u5143\u7d20\u5b58\u5728\u524d\u9a71\u540e\u7ee7\u3002\n\tInsert(n+1);\n\tfor(int i=1;i<=m;i++){\n\t\tgetc(info);\n\t\tif(info=='D'){//\u63d2\u5165\u64cd\u4f5c\n\t\t\tscanf(\"%d\",&t);\n\t\t\tInsert(t);\n\t\t\tdest[++sz]=t;\n\t\t}else if(info=='R'){//\u5220\u9664\u64cd\u4f5c\n\t\t\tDelete(dest[sz--]);\n\t\t}else{\n\t\t\tscanf(\"%d\",&t);\n\t\t\tFind(t);\n\t\t\tif(d[rt].val==t){//\u8fd9\u680b\u623f\u5b50\u88ab\u6467\u6bc1\u4e86\n\t\t\t\tputs(\"0\");\n\t\t\t}else{//\u8fd9\u680b\u623f\u5b50\u6ca1\u6709\u88ab\u6467\u6bc1\uff0c\u67e5\u627e\u524d\u9a71\u540e\u7ee7\u3002\n\t\t\t\tint nxt=Next(t,1);\n\t\t\t\tint lst=Next(t,0);\n\t\t\t\tprintf(\"%d\\n\",d[nxt].val-d[lst].val-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540379578,
        "uid": 26294,
        "name": "xryjr233",
        "ccfLevel": 9,
        "title": "[2018.10.24]\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011(\u6570\u636e\u7ed3\u6784/\u5e73\u8861\u6811/Splay)"
    },
    {
        "content": "\u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\uff0c\n# \u5c45\u7136\u6ca1\u4eba\u7528$STL$\uff1f\uff1f\uff1f\n\uff08\u8fd8\u662f\u6211\u778e\u4e86\uff09\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a$n(<=5e4)$\u7684$01$\u5e8f\u5217\uff0c\u4e00\u5f00\u59cb\u90fd\u662f$1$\u3002\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\uff1a\n1. \u4fee\u6539\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u4e3a$0$\n2. \u64a4\u9500\u4e0a\u4e00\u6b21\u4fee\u6539\n3. \u8be2\u95ee\u5305\u542b\u67d0\u4e2a\u4f4d\u7f6e\u7684\u6700\u957f\u7684\u8fde\u7eed\u7684$1$\u7684\u4e2a\u6570\u3002\n\n### \u601d\u8def\n\n$multiset$\u7ef4\u62a4\u4f4d\u7f6e\uff0c\u4e8c\u5206\u5f97\u5230\u5de6\u53f3\uff0c\u76f8\u51cf\u5373\u73c2\u3002\n\n### \u5b9e\u73b0\u6ce8\u610f\u70b9\n\n1. \u5de6\u53f3\u8fb9\u754c\u3002\u5de6\uff1a$upper\\_bound-1$\uff0c\u53f3:$lower\\_bound$\n2. \u5173\u4e8e\u64a4\u9500\u7684\u64cd\u4f5c\uff1a\u7528\u4e00\u4e2a\u6808\u7ef4\u62a4\u5220\u9664\u7684\u4f4d\u7f6e\uff0c\u6bcf\u4e00\u6b21\u64a4\u9500\u5c31\u662f\u53d6\u6808\u9876\u3002\uff08\u6211\u662f\u7528$vector$\u5b9e\u73b0\u7684\u6808\uff0c\u56e0\u4e3a\u6211\u4e0d\u662f\u5f88\u4f1a\u7528$stack$\uff0c\u4e0d\u8981\u5728\u610f\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace Flandre_Scarlet\n{\n    #define F(i,l,r) for(int i=l;i<=r;++i)\n    #define D(i,r,l) for(int i=r;i>=l;--i)\n    #define Fs(i,l,r,c) for(int i=l;i<=r;c)\n    #define Ds(i,r,l,c) for(int i=r;i>=l;c)\n    #define Tra(i,u) for(int i=G.Start(u),__v=G.To(i);~i;i=G.Next(i),__v=G.To(i))\n    #define MEM(x,a) memset(x,a,sizeof(x))\n    #define FK(x) MEM(x,0)\n    multiset<int> S;\n    multiset<int>::iterator it;\n    vector<int> D;\n    void Erase1(int x)\n    {\n        it=S.find(x);\n        S.erase(it);\n    }\n\n    int n,m;\n    void R1(int &x)\n    {\n        x=0;char c=getchar();int f=1;\n        while(c<'0' or c>'9') f=(c=='-')?-1:1,c=getchar();\n        while(c>='0' and c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\n        x=(f==1)?x:-x;\n    }\n    void Input_Soviet()\n    {\n        R1(n),R1(m);\n        S.insert(0);\n        S.insert(n+1);\n        F(i,1,m)\n        {\n            char o[4];scanf(\"%s\",o);\n            if (o[0]=='D')\n            {\n                int x;R1(x);\n                S.insert(x);\n                D.push_back(x);\n            }\n            if (o[0]=='R')\n            {\n                int last=*(D.end()-1);\n                if (S.find(last)!=S.end())\n                {\n                    Erase1(last);\n                    D.pop_back();\n                }\n            }\n            if (o[0]=='Q')\n            {\n                int x;R1(x);\n                it=S.upper_bound(x);it--;\n                int ll=*it;\n                int rr=*(S.lower_bound(x));\n                printf(\"%d\\n\",max(rr-ll-1,0));\n            }\n        }\n    }\n\n    #define Flan void\n    Flan IsMyWife()\n    {\n        Input_Soviet();\n    }\n}\nint main()\n{\n    Flandre_Scarlet::IsMyWife();\n    getchar();getchar();\n    return 0;\n}\n```",
        "postTime": 1572693954,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u90fd\u7528splay\u505a\u8fd9\u9898\n\n200+\u884c\u7684\u662fplay\u4ee4\u6211\u671b\u800c\u751f\u754f\n\n\u6211\u8fd8\u662f\u4e56\u4e56\u5730\u7528\u7ebf\u6bb5\u6811\u5427\n\n# \u601d\u8def\uff1a\n1.\u76f4\u63a5\u6539\u70b9\n\n2.\u901a\u8fc7\u6700\u5927\u6700\u5c0f\u503c\u6c42\u6700\u9760\u8fd1\u88ab\u56f4\u623f\u5b50\u7684\u4e24\u623f\u5b50\uff0c\n\n\u6700\u5927\u503c\u8868\u793a\u533a\u95f4\u5185\u7f16\u53f7\u6700\u5927\uff08\u6700\u53f3\uff09\u7684\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff0c\n\n\u6700\u5c0f\u503c\u8868\u793a\u533a\u95f4\u5185\u7f16\u53f7\u6700\u5c0f\uff08\u6700\u5de6\uff09\u7684\u88ab\u6467\u6bc1\u7684\u623f\u5b50\u3002\n\n# \u6ce8\u610f\uff1a\n\n1\u6ce8\u610f\u9898\u4e2d\u7684\u8bf4\u660e\uff1a\n\n\u82e5\u58eb\u5175\u88ab\u56f4\u5835\u5728\u6467\u6bc1\u4e86\u7684\u623f\u5b50\u4e2d\uff0c\u90a3\u53ea\u80fd\u7b49\u6b7b\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\uff08\u7279\u5224\uff0c\u8f93\u51fa0\uff09\n\n2.\u5bf9\u4e8ex\u4ee5\u5de6\u533a\u95f4\uff0c\u6700\u5927\u503c\uff08\u6700\u53f3\uff09\u6700\u9760\u8fd1x \u3002\u5bf9\u4e8ex\u4ee5\u53f3\u533a\u95f4\uff0c\u6700\u5c0f\u503c\uff08\u6700\u5de6\uff09\u6700\u9760\u8fd1x\u3002\n\n\u6211\u6c42\u7684\u662f\u6700\u9760\u8fd1x\u7684\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff0c\u6240\u4ee5\u4e24\u7f16\u53f7\u4e4b\u5dee-1\u624d\u662f\u7b54\u6848,\u76f8\u5f53\u4e8e\u690d\u6811\u95ee\u9898\u4e24\u8fb9\u90fd\u4e0d\u79cd\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\n#define M 50010\nint c[M],len=0,t=0,d[M],n,m;//c\u662f\u4fbf\u4e8e\u76f4\u63a5\u67e5\u770b\u623f\u5b50\uff0c\u8bb0\u5f55\u7b2ci\u4e2a\u623f\u5b50\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u7f16\u53f7 \nstruct tree{int l,r,lc,rc,c,maxx,minn;}tr[M<<1];\n\nvoid bt(int l,int r)//\u5efa\u6811 \n{\n\tint now=++len;tr[now].l=l;tr[now].r=r;\n\ttr[now].lc=tr[now].rc=tr[now].c=tr[now].maxx=0;tr[now].minn=n+1;\n\t//\u521d\u59cb\u5316 \uff0c\u4e00\u5f00\u59cb\u90fd\u6ca1\u6709\u88ab\u6467\u6bc1\uff0c\u6700\u5c0f\u7684\u662f0\uff0c\u6700\u5927\u7684\u662fn+1 \uff08\u6700\u5927\u503c\u521d\u59cb\u5316\u4e3a\u6700\u5c0f\uff0c\u6700\u5c0f\u503c\u521d\u59cb\u5316\u4e3a\u6700\u5927\uff09 \n\tif(l<r)\n\t{\n\t\tint mid=(l+r)>>1,lc,rc;\n\t\tlc=tr[now].lc=len+1;bt(l,mid);\n\t\trc=tr[now].rc=len+1;bt(mid+1,r);\n\t\ttr[now].c=tr[lc].c+tr[rc].c;\n\t}\n\telse c[l]=now,tr[now].c=1;//\u8bb0\u5f55\u7f16\u53f7\uff0c\u521d\u59cb\u5316 \n}\n\nvoid change(int now,int x,int k)//\u6539\u70b9 \uff0ck\u7b49\u4e8e0\u8868\u793a\u88ab\u6467\u6bc1 \uff0ck\u7b49\u4e8e1\u8868\u793a\u5b8c\u597d  \n{\n\tif(tr[now].l==tr[now].r)\n\t{\n\t\ttr[now].c=k;\n\t\t(!k)?(tr[now].maxx=tr[now].minn=x):(tr[now].maxx=0,tr[now].minn=n+1);//\uff01\u7b49\u4ef7\u4e8e==0  \n\t\t/*\n\t\t\u7b49\u4ef7\u4e8e\n\t\tif(k==0)\n\t\t{\n\t\t \ttr[now].maxx=x;tr[now].minn=x;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttr[now].maxx=0;tr[now].minn=n+1;//\u6ce8\u610f\u521d\u59cb\u5316 \n\t\t}\n\t\t*/ \n\t\treturn;\n\t}\n\tint lc=tr[now].lc,rc=tr[now].rc,mid=(tr[now].l+tr[now].r)>>1;\n\tif(x<=mid)change(lc,x,k);\n\telse change(rc,x,k);\n\ttr[now].c=tr[lc].c+tr[rc].c;\n\ttr[now].maxx=max(tr[lc].maxx,tr[rc].maxx);\n\ttr[now].minn=min(tr[lc].minn,tr[rc].minn);//\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c \n}\n\nint comp(int x,int y,bool v){return !v?min(x,y):max(x,y);}\n//emmmm...\u56e0\u4e3a\u61d2\u5f97\u6253\u4e24\u4e2afindsum\uff08\u4e00\u4e2a\u6c42\u6700\u5927\u503c\uff0c\u4e00\u4e2a\u6c42\u6700\u5c0f\u503c\uff09 \n\nint findsum(int now,int l,int r,bool v)//v\u7b49\u4e8e0\u8868\u793a\u6c42\u6700\u5c0f\u503c \uff0cv\u7b49\u4e8e1\u8868\u793a\u6c42\u6700\u5927\u503c  \n{\n\tif(tr[now].l==l&&tr[now].r==r)\n\t{\n\t\treturn !v?tr[now].minn:tr[now].maxx;\n\t}\n\tint lc=tr[now].lc,rc=tr[now].rc,mid=(tr[now].l+tr[now].r)/2;\n\tif(r<=mid)return findsum(lc,l,r,v);\n\telse if(l>mid)return findsum(rc,l,r,v);\n\telse {return comp(findsum(lc,l,mid,v),findsum(rc,mid+1,r,v),v);}\n}\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tlen=0;bt(1,n);char s[100];\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='D')\n\t\t{\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tchange(1,x,0);d[++t]=x;\n\t\t}\n\t\telse if(s[0]=='Q')\n\t\t{\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tif(tr[c[x]].c==0)\n\t\t\t{printf(\"0\\n\");continue;}\n\t\t\tprintf(\"%d\\n\",findsum(1,x,n,0)-findsum(1,1,x,1)-1);\n\t\t\t/*\n\t\t\t\u5bf9\u4e8ex\u4ee5\u5de6\u533a\u95f4\uff0c\u6700\u5927\u503c\uff08\u6700\u53f3\uff09\u6700\u9760\u8fd1x \u3002\u5bf9\u4e8ex\u4ee5\u53f3\u533a\u95f4\uff0c\u6700\u5c0f\u503c\uff08\u6700\u5de6\uff09\u6700\u9760\u8fd1x\u3002 \n\t\t\t\u6211\u6c42\u7684\u662f\u6700\u9760\u8fd1x\u7684\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff0c\u6240\u4ee5\u4e24\u7f16\u53f7\u4e4b\u5dee-1\u624d\u662f\u7b54\u6848,\u76f8\u5f53\u4e8e\u690d\u6811\u95ee\u9898\u4e24\u8fb9\u90fd\u4e0d\u79cd \n\t\t\t*/ \n\t\t}\n\t\telse\n\t\t{\n\t\t\tchange(1,d[t],1);--t;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1562316964,
        "uid": 35290,
        "name": "royzhu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "//\u7528\u4e00\u68f5\u5e73\u8861\u6811\u548c\u4e00\u4e2a\u6808\u5b58\u50a8\u88ab\u6467\u6bc1\u7684\u623f\u5c4b\u7f16\u53f7\u3002\n\n```cpp\n#include<ext/pb_ds/tree_policy.hpp>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<bits/stdc++.h> \nusing namespace  __gnu_pbds;\nusing namespace std; \ntree<long long,null_type,less<long long>,rb_tree_tag,tree_order_statistics_node_update>t;\nint main()\n{\n    long long n,m,i,x,l,r;\n    char ch;\n    stack<long long> s;\n    scanf(\"%lld%lld\",&n,&m);scanf(\"\\n\");\n    while(m--)\n    {\n        ch=getchar();\n        while(ch<'A'||ch>'Z')ch=getchar();//cout<<ch<<endl;\n        if(ch=='D')//\u9047\u5230D\u5c31\u6dfb\u7ed3\u70b9\u3001\u5165\u6808\u3002\n        {\n            scanf(\" %lld\",&i);scanf(\"\\n\");\n            i=i<<20;\n            t.insert(i);\n            s.push(i);\n        }\n        else if(ch=='R')//\u9047\u5230R\u5c31\u5220\u7ed3\u70b9\u3001\u5f39\u6808\u3002\n        {\n            i=s.top();\n            t.erase(i);\n            s.pop();\n            scanf(\"\\n\");\n        }\n        else//\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\n        {\n            scanf(\" %lld\",&i);scanf(\"\\n\");\n            long long j=((i+1)<<20);i=i<<20;\n            x=*t.find_by_order(s.size()-1);\n            if(i>x){printf(\"%d\\n\",n-(x>>20));continue;}\n            x=*t.find_by_order(0);\n            if(i<x){printf(\"%d\\n\",(x>>20)-1);continue;}\n            x=*t.find_by_order(t.order_of_key(i));\n            if(i==x){printf(\"%d\\n\",0);continue;}\n            t.insert(i);\n            l=*--t.lower_bound(i);\n            r=*t.lower_bound(j);\n            printf(\"%d\\n\",(r>>20)-(l>>20)-1);\n            t.erase(i);\n        }\n    }\n    return 0;\n}\n\u8fd9\u662fpbds\u5e93\u4e0estl\u7684\u4e00\u6b21\u5b8c\u7f8e\u5408\u4f5c\u3002\n```",
        "postTime": 1510634633,
        "uid": 2248,
        "name": "\u6c47\u6587\u5ba2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u5e73\u8861\u6811\u8fc7\u7684\u662f\u4e00\u822c\u5927\u4f6c\uff0c\u66b4\u529b\u8fc7\u7684\u624d\u662f\u5c40\u4f6c\n\n\u6570\u636e\u592a\u6c34\u4e86\n\n\u7136\u9e45\u6211\u7528\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\u8fc7\uff0c\u590d\u6742\u5ea6$\uff08n*logn^2\uff09$\n\n\u6811\u72b6\u6570\u7ec4\u597d\u623f\u5b50\u62531,\u574f\u623f\u5b50\u62530\n\n\u5bf9\u4e8e\u6bcf\u6b21Q\uff0c\u5206\u522b\u5f80\u5de6\u53f3\u4e8c\u5206\uff08\u7528\u6811\u72b6\u6570\u7ec4check\u4e2d\u95f4\u662f\u5426\u6709\u65ad\u70b9\uff09\uff0c\u6700\u8fdc\u6bb5\u70b9\u6c42\u8ddd\u79bb\u5c31\u884c\u4e86\n\n\u8fd8\u8981\u6ce8\u610f\u8f93\u5165\u7684\u65f6\u5019\u5c0f\u5fc3\u5904\u7406\uff08\u7528cin\u6700\u597d\uff0c\u81ea\u5df1getchar\u5bb9\u9519\u6027\u592a\u4f4e\uff09\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define lowbit(x) (x&-x)\n#define sum(l,r) (ask(r)-ask(l-1))\nusing namespace std;\n\nint read() {\n\tregister int x=1,ans=0;register char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') x*=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {ans=(ans<<3)+(ans<<1)+ch-48;ch=getchar();}\n\treturn x*ans;\n}\n\nconst int N=50005;\nint c[N],n,m;\n\nvoid add(int x,int val) {\n\tfor(;x<=n;x+=lowbit(x)) c[x]+=val;\n}\n\nint ask(int x) {\n\tint ans=0;\n\tfor(;x>=1;x-=lowbit(x)) ans+=c[x];\n\treturn ans;\n}\n\nint main() {\n\tn=read(); m=read();\n\tfor(register int i=1;i<=n;++i) add(i,1);\n\tstack<int> w;\n\twhile(m--) {\n\t\tchar ch; cin>>ch;\n\t\tif(ch=='D') {\n\t\t\tint x=read(); \n\t\t\tadd(x,-1);\n\t\t\tw.push(x);\n\t\t}\n\t\telse if(ch=='R') {\n\t\t\tint x=w.top(); w.pop(); add(x,1);\n\t\t} \n\t\telse {\n\t\t\tint x=read(); \n\t\t\tif(sum(x,x)==0) puts(\"0\");\n\t\t\telse {\n\t\t\t\tint l=1,r=x,res=0;\n\t\t\t\twhile(l<=r) {\n\t\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\t\tif(sum(mid,x)==x-mid+1) res=mid,r=mid-1;\n\t\t\t\t\telse l=mid+1;\n\t\t\t\t}\n\t\t\t\tint ll=res;\n\t\t\t\tl=x,r=n;\n\t\t\t\twhile(l<=r) {\n\t\t\t\t\tint mid=(l+r)>>1;\n\t\t\t\t\tif(sum(x,mid)==mid-x+1) res=mid,l=mid+1;\n\t\t\t\t\telse r=mid-1;\n\t\t\t\t}\n\t\t\t\tint rr=res;\n\t\t\t\tprintf(\"%d\\n\",rr-ll+1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1576391305,
        "uid": 92288,
        "name": "ChenHacker",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u7ed9\u4e00\u79cd~~\u65e0\u8111~~\u7684\u505a\u6cd5\n\n\u7528\u53ef\u56de\u9000\u5316\u7ebf\u6bb5\u6811~~\u4e0d\u662fhope~~\n\n### \u5148\u8003\u8651\u6ca1\u6709\u4fee\u590d\u623f\u5b50\u65f6\u600e\u4e48\u505a\uff1a\n\n\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5411\u5de6\u548c\u5411\u53f3\u53f3\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u623f\u5b50\u7684\u7f16\u53f7\uff0c\u8fd9\u5b9e\u9645\u5c31\u662f\u533a\u95f4\u8d4b\u503c\n\n\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u5c31\u628a\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u4e24\u4e2a\u8fb9\u754c\u76f8\u51cf\u518d\u52a01\uff08\u5c31\u662fr-l+1\uff09\n\n\u800c\u5bf9\u4e8e\u88ab\u6467\u6bc1\u7684\u623f\u5b50\uff0c\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u4e24\u4e2a\u8fb9\u754c\u7684\u6570\u503c\u6765\u4fdd\u8bc1\u8f93\u51fa\u4e3a0\uff08\u89c1\u4ee3\u7801\uff09\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u533a\u95f4\u5185\u7684\u503c\uff0c\u7528-1\u8868\u793a\u533a\u95f4\u5185\u503c\u4e0d\u4e00\u81f4\n\n\u4fee\u6539\u65f6\uff1a\n\n\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u88ab\u5b8c\u5168\u5305\u542b\uff0c\u5c31\u4fee\u6539\u8282\u70b9\u8bb0\u5f55\u7684\u503c\n\n\u5982\u679c\u5b8c\u5168\u4e0d\u88ab\u5305\u542b\uff0c\u5c31\u76f4\u63a5\u7ed3\u675f\n\n\u5426\u5219\uff0c\u5148\u4e0b\u653e\u6807\u8bb0\uff08\u5982\u6709\uff0c\u76f4\u63a5\u6539\u5de6\u53f3\u4e24\u4e2a\u8282\u70b9\u7684\u503c\uff09\uff0c\u518d\u9012\u5f52\u5904\u7406\n\n\u8be2\u95ee\u65f6\uff1a\n\n\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u4e00\u4e2a\u5e26\u6807\u8bb0\u7684\u533a\u95f4\uff08\u533a\u95f4\u5185\u503c\u76f8\u540c\uff09\uff0c\u5c31\u8fd4\u56de\u503c\n\n\u5426\u5219\uff0c\u6839\u636e\u4f4d\u7f6e\u9009\u62e9\u4e00\u4e2a\u5b69\u5b50\u9012\u5f52\uff08\u6ce8\u610f\u8fb9\u754c\uff09\n\n### \u7136\u540e\u5c31\u5230\u4e86\u6700\u5173\u952e\u7684\u4e00\u6b65\uff1a\u53ef\u56de\u9000\u5316\n\n\u53d1\u73b0\u6bcf\u6b21\u4fee\u590d\u90fd\u662f\u64a4\u9500\u64cd\u4f5c\uff0c\u5e76\u4e14\u8be2\u95ee\u4e0d\u4f1a\u5f71\u54cd\u7ebf\u6bb5\u6811\u7684\u6570\u636e\n\n\u6240\u4ee5\u5c31\u628a\u7ebf\u6bb5\u6811\u53ef\u6301\u4e45\u5316\u4e00\u4e0b\n\n\u5177\u4f53\u505a\u6cd5\uff1a\n\n\u6bcf\u6b21\u6267\u884c\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u8bb0\u5f55\u5e76\u4fee\u6539\u65f6\u95f4\u6233\uff0c\u5e76\u8bb0\u5f55\u6bcf\u6b65\u5bf9\u6570\u7ec4\u7684\u64cd\u4f5c\uff08\u8bb0\u5f55\u4f4d\u7f6e\u548c\u539f\u503c\uff09\n\n\u8be2\u95ee\u6b63\u5e38\u5904\u7406\n\n\u64a4\u9500\u65f6\uff0c\u5c31\u6309\u7167\u4e4b\u524d\u7684\u8bb0\u5f55\u628a\u6570\u7ec4\u7684\u5185\u5bb9\u6062\u590d\u5230\u5bf9\u5e94\u65f6\u95f4\u6233\n\n### \u6548\u7387&\u4ee3\u7801\u96be\u5ea6\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662f$O(n\\log n)$\uff0c\u7a7a\u95f4\u5f00\u9500\u504f\u5927\n\n\u51e0\u4e4e\u6ca1\u6709\u601d\u7ef4\u91cf\uff08\u4ee3\u7801\u5199\u5bf9\u5c31\u57fa\u672c\u968f\u4fbf\u641e\u4e86\uff09\n\n\u4ee3\u7801\u96be\u5ea6\u7565\u9ad8\n\n### \u4ee3\u7801\n\n\u4e3a\u4e86\u4fbf\u4e8e\u540c\u65f6\u5904\u7406\u4e24\u4e2a\u6570\u7ec4\uff0c\u6211\u5c01\u88c5\u4e86\u4e00\u4e0b\n\n```cpp\n#include<cstdio>\nconst int N=50007;\nclass seq {\n\tprivate:\n\t\tclass opt {\n\t\t\tpublic:\n\t\t\t\tint pl,num,t;\n\t\t\t\topt(int _pl,int _num,int _t) {\n\t\t\t\t\tpl=_pl;\n\t\t\t\t\tnum=_num;\n\t\t\t\t\tt=_t;\n\t\t\t\t}\n\t\t\t\topt() {}\n\t\t};\n\t\tint num[N*4];\n\t\topt list[N*4*20];\n\t\tint cnt;\n\t\tint time;\n\t\tint len;\n\n\t\tvoid set(int pl,int n) {\n        //\u8bb0\u5f55\u4e00\u6b21\u6570\u7ec4\u4fee\u6539\u64cd\u4f5c\n\t\t\tlist[cnt++]=opt(pl,num[pl],time);\n\t\t\tnum[pl]=n;\n\t\t}\n\t\tvoid _undo() {\n        //\u64a4\u9500\u4e00\u6b21\u6570\u7ec4\u4fee\u6539\u64cd\u4f5c\n\t\t\t--cnt;\n\t\t\tnum[list[cnt].pl]=list[cnt].num;\n\t\t}\n\t\tvoid rset(int l,int r,int n,int ll,int rr,int id) {\n        //\u533a\u95f4\u8d4b\u503c\n\t\t\tif(l<=ll&&rr<=r) {\n\t\t\t\tset(id,n);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(l>rr||ll>r)return;\n\t\t\tif(num[id]!=-1) {\n\t\t\t\tset(id<<1,num[id]);\n\t\t\t\tset((id<<1)|1,num[id]);\n\t\t\t\tset(id,-1);\n\t\t\t}\n\t\t\tint mid=((ll+rr)>>1);\n\t\t\trset(l,r,n,ll,mid,id<<1);\n\t\t\trset(l,r,n,mid+1,rr,(id<<1)|1);\n\t\t}\n\t\tint qnum(int ll,int rr,int id,int pl) {\n        //\u5355\u70b9\u67e5\u8be2\n\t\t\tif(num[id]!=-1)return num[id];\n\t\t\tif(ll==rr)return num[id];\n\t\t\tint mid=((ll+rr)>>1);\n\t\t\tif(pl<=mid)return qnum(ll,mid,id<<1,pl);\n\t\t\telse return qnum(mid+1,rr,(id<<1)|1,pl);\n\t\t}\n\tpublic:\n\t\tseq(int _len) {\n        //\u521d\u59cb\u5316\n\t\t\tfor(int i=0; i<=_len*4; i++)num[i]=-1;\n\t\t\tcnt=time=0;\n\t\t\tlen=_len;\n\t\t}\n\t\tvoid rset(int l,int r,int n) {\n        //\u8fd9\u91cc\u8d1f\u8d23\u8bb0\u5f55\u65f6\u95f4\u6233\uff0c\u4e0b\u540c\n\t\t\tif(l>r) {\n\t\t\t\ttime++;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trset(l,r,n,1,len,1);\n\t\t\ttime++;\n\t\t}\n\t\tvoid undo() {\n        //\n\t\t\ttime--;\n\t\t\twhile(cnt&&list[cnt-1].t==time)_undo();\n\t\t}\n\t\tint qnum(int pl) {\n\t\t\treturn qnum(1,len,1,pl);\n\t\t}\n};\nseq lb(0),rb(0);\nint n,m;\nchar c[1];\nint a;\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tlb=seq(n);\n\trb=seq(n);\n\tlb.rset(1,n,1);\n\trb.rset(1,n,n);\n\twhile(m--) {\n\t\tscanf(\"%s\",c);\n\t\tif(c[0]=='D') {\n\t\t\tscanf(\"%d\",&a);\n\t\t\tint l=lb.qnum(a);\n\t\t\tint r=rb.qnum(a);\n\t\t\tlb.rset(a,a,a);\n\t\t\trb.rset(a,a,a-1);//\u53ef\u4ee5\u4e0d\u5904\u7406\u7279\u6b8a\u60c5\u51b5\uff08\u5728\u88ab\u6467\u6bc1\u7684\u623f\u5b50\u91cc\uff09\n\t\t\tlb.rset(a+1,r,a+1);\n\t\t\trb.rset(l,a-1,a-1);\n            //\u6bcf\u4e2a\u6570\u7ec4\u4f1a\u6070\u597d\u4fee\u6539\u4e24\u6b21\u65f6\u95f4\u6233\uff0c\u4fbf\u4e8e\u64a4\u9500\n\t\t} else if(c[0]=='R') {\n\t\t\tlb.undo();\n\t\t\tlb.undo();\n\t\t\trb.undo();\n\t\t\trb.undo();\n\t\t} else {\n\t\t\tscanf(\"%d\",&a);\n\t\t\tint l=lb.qnum(a);\n\t\t\tint r=rb.qnum(a);\n\t\t\tprintf(\"%d\\n\",r-l+1);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1573653551,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e24\u79cd\u505a\u6cd5\uff0cfhq_treap\u548cset\n\n\u601d\u8def\uff1a\n- \u9996\u5148\u5728\u5e73\u8861\u6811\u4e2d\u52a0\u51650\u8282\u70b9\u548cn+1\u8282\u70b9\uff0c\u662f\u5de6\u53f3\u8fb9\u754c\n- 'D x':\u5728\u5e73\u8861\u6811\u4e2d\u52a0\u5165x\u8282\u70b9(\u4e3a\u4ec0\u4e48\u662f\u52a0\u5165\u800c\u4e0d\u662f\u5220\u9664\uff0c\u6211\u540e\u9762\u4f1a\u8be6\u7ec6\u8bb2\u5230)\n- 'R':\u65e2\u7136\u662f\u4e0a\u4e00\u4e2a\u70b9\u6062\u590d\u4e86\uff0c\u800c\u6837\u4f8b\u7684\u6700\u540e\u4e00\u4e2a\u8be2\u95ee\u4e3a\u6211\u4eec\u8d34\u5fc3\u5730\u8003\u8651\u4e86\u8fde\u7eed\u6062\u590d\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u662f\u8981\u7ef4\u62a4\u4e00\u4e2a\u540e\u8fdb\u5148\u51fa\u7684`\u6808`\u6765\u4fdd\u5b58\u60a8\u5220\u9664\u7684\u70b9\u5566~\n- 'Q x'\u67e5\u8be2x\u70b9\u7684\u524d\u9a71pre\u4e0a\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u70b9\uff09\uff0c\u548cx\u7684\u540e\u7ee7suc\u4e0b\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u70b9\uff0c\u90a3\u4e48x\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u4e2a\u6570\u5c31\u662fsuc-pre-1\u4e2a\uff08\u9898\u76ee\u7ed9\u7684\u662f\u4e00\u6761\u7f16\u53f7\u8fde\u7eed\u7684\u94fe\uff0c\u90a3\u4e48\u6839\u636e\u7f16\u53f7\u6765\u67e5\u627e\u4e2a\u6570\u5c31\u5f88\u65b9\u4fbf\u5566^ _ ^\uff09\n\n### fhq_treap\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i,a,b) for(int i=a;i<=b;++i)\n#define dwn(i,a,b) for(int i=a;i>=b;--i) \ntemplate <typename T> inline void rd(T &x){x=0;char c=getchar();int f=0;while(!isdigit(c)){f|=c=='-';c=getchar();}while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}x=f?-x:x;} \n\nconst int N=5e4+10;\nint tot,siz[N],val[N],rnd[N],son[N][2];\nint x,y,n,rt,m;  \n\ninline void upd(int x){siz[x]=siz[son[x][0]]+siz[son[x][1]]+1;}\ninline int new_node(int x){siz[++tot]=1;val[tot]=x;rnd[tot]=rand();return tot;}\n\ninline void split(int now,int k,int &x,int &y){\n\tif(!now)x=y=0;\n\telse{\n\t\tif(val[now]<=k)\n\t\t\tx=now,split(son[now][1],k,son[now][1],y);\n\t\telse\n\t\t\ty=now,split(son[now][0],k,x,son[now][0]);\n\t\tupd(now);\n\t}\n}\n\ninline int merge(int x,int y){\n\tif(!x || !y)return x^y;\n\tif(rnd[x]<rnd[y]){\n\t\tson[x][1]=merge(son[x][1],y);\n\t\tupd(x);\n\t\treturn x;\n\t}\n\telse{\n\t\tson[y][0]=merge(x,son[y][0]);\n\t\tupd(y);\n\t\treturn y;\n\t}\n}\n\nint kth(int x,int k){\n\twhile(1){\n\t\tif(siz[son[x][0]]>=k)\n\t\t\tx=son[x][0];\n\t\telse if(siz[son[x][0]]+1==k)\n\t\t\treturn x;\n\t\telse \n\t\t\tk-=siz[son[x][0]]+1,x=son[x][1];\n\t}\n}\n\nint del[N];\nstack<int>s;\n\nint main(){\n\t#ifdef WIN32\n\tfreopen(\"guizi.txt\",\"r\",stdin);  \n    #endif\n\tsrand((unsigned)time(NULL));\n    rd(n),rd(m);\n    split(rt,0,x,y);\n\trt=merge(merge(x,new_node(0)),y);\n    split(rt,(n+1),x,y);\n\trt=merge(merge(x,new_node((n+1))),y);\n    rep(i,1,m){\n    \tchar op[3];cin>>op;\n\t\tif(op[0]=='R'){\n\t\t\tint z=0;\n\t\t\tint last=s.top();\n\t\t\tsplit(rt,last,x,z);\n\t\t\tsplit(x,last-1,x,y);\n\t\t\ty=merge(son[y][0],son[y][1]);\n\t\t\trt=merge(merge(x,y),z);\n\t\t\ts.pop();\n\t\t\tdel[last]=0;\n\t\t}\n\t\telse if(op[0]=='D'){\n\t\t\tint a;rd(a); \n\t\t\tsplit(rt,a,x,y);\n\t\t\trt=merge(merge(x,new_node(a)),y);\n\t\t\ts.push(a);\n\t\t\tdel[a]=1;\n\t\t}\n\t\telse if(op[0]=='Q'){\n\t\t\tint a;rd(a);\n\t\t\tif(del[a]){\n\t\t\t\tputs(\"0\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsplit(rt,a-1,x,y);\n\t\t\tint pre=val[kth(x,siz[x])];\n//\t\t\tprintf(\"%d\u7684\u524d\u9a71\u4e3a%d\\n\",a,pre);\n\t\t\trt=merge(x,y);\n\t\t\tsplit(rt,a,x,y);\n\t\t\tint suc=val[kth(y,1)];\n\t\t\trt=merge(x,y);\n//\t\t\tprintf(\"%d\u7684\u540e\u7ee7\u4e3a%d\\n\",a,suc);\n\t\t\tprintf(\"%d\\n\",suc-pre-1);\n\t\t}\n    }\n    return 0;\n}\n```\n\n### set\n\u7528set\u771f\u662f\u592a\u592a\u592a\u65b9\u4fbf\u5566\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\ntemplate <typename T>inline void rd(T &x){x=0;char c=getchar();int f=0;while(!isdigit(c)){f|=c=='-';c=getchar();}while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}x=f?-x:x;} \n#define rep(i,a,b) for(int i=a;i<=b;++i)\n#define dwn(i,a,b) for(int i=a;i>=b;--i)\n#define mem(a,b) memset(a,b,sizeof(a))\n#define ee(i,u) for(int i=head[u];i;i=e[i].next)\n\nconst int M=5e4+10; \nint q[M],tail,n,m;\n\nset<int> s;\nset<int>:: iterator it;\nstack<int>sta;\n\nint main(){\n\t#ifdef WIN32\n\tfreopen(\"guizi.txt\",\"r\",stdin);  \n    #endif\n    rd(n),rd(m);\n\ts.insert(0);\n\ts.insert(n+1);\n\twhile(m--){\n        char c;cin>>c;\n        if(c=='D'){\n        \tint x;rd(x);\n        \ts.insert(x);\n        \tsta.push(x);\n\t\t}\n        else if(c=='Q'){\n            int x;rd(x);\n            it=s.lower_bound(x);\n            if(*it==x){\n            \tputs(\"0\");\n            \tcontinue;\n\t\t\t}\n            printf(\"%d\\n\",*it-*(--it)-1);\n        }\n        else if(c=='R'){\n        \tit=s.find(sta.top());\n        \tsta.pop();\n        \ts.erase(it);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1569489152,
        "uid": 109419,
        "name": "\u8bbe\u8ba1\u6d89\u53ca\u793e\u7a37",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "**\u5bf9\u4e8e\u975e\u6bd2\u7624\u6570\u636e\uff0c\u66ff\u7f6a\u7f8a\u6811\u662f\u6240\u6709\u5e73\u8861\u6811\u4e2d\u8dd1\u7684\u6700\u5feb\u7684**\n\n\u8fd9\u9053\u9898\u601d\u8def\u5c31\u662f\u5f00\u6808\u8bb0\u5f55\u6bcf\u6b21\u6bc1\u6389\u7684\u623f\u5b50\uff0c\u5f00\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u623f\u5b50\u662f\u5426\u88ab\u6bc1\uff0c\u6bcf\u6b21\u67e5\u8be2\u524d\u9a71\u548c\u540e\u7ee7\u5373\u53ef\u3002\n\n\u63d0\u4f9b\u6307\u9488\u7248\u66ff\u7f6a\u7f8a\u6811\u7684\u4ee3\u7801\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <stack>\n#include <vector>\n\nusing namespace std;\n\nconst int INF = 0x7f7f7f7f;\nconst int MAXN = 5e4 + 5;\nconst float Alpha = 0.7;\n\nint n, m;\nbool vis[MAXN];\nstack<int> stk;\nchar op[5];\n\nstruct Node{\n    int val, siz, cov;\n    bool exist;\n    Node *ch[2];\n    \n    Node(int val) : val(val) {\n        exist = true;\n        ch[0] = ch[1] = NULL;\n        siz = cov = 1;\n    }\n};\n\nNode *rt;\nvector<Node*> vec;\nstack<Node*> tsh;\n\nNode *newNode(int val) {\n\tif (tsh.empty()) return new Node(val);\n\tNode *ret = tsh.top(); tsh.pop();\n\t*ret = Node(val);\n\treturn ret;\n}\n\nvoid Update(Node *now) {\n    now->siz = now->exist + (now->ch[0] ? now->ch[0]->siz : 0) + (now->ch[1] ? now->ch[1]->siz : 0);\n    now->cov = 1 + (now->ch[0] ? now->ch[0]->cov : 0) + (now->ch[1] ? now->ch[1]->cov : 0);\n}\n\nbool Bad(Node *now) {\n    int ls = now->ch[0] ? now->ch[0]->cov : 0;\n    int rs = now->ch[1] ? now->ch[1]->cov : 0;\n    return (float)ls / now->cov > Alpha || (float)rs / now->cov > Alpha;\n}\n\nvoid Dfs(Node *now) {\n    if (!now) return;\n    Node *tmp = now;\n    Dfs(now->ch[0]);\n    if (now->exist) vec.push_back(now);\n    else tsh.push(now);\n    Dfs(now->ch[1]);\n    tmp->ch[0] = tmp->ch[1] = NULL;\n}\n\nvoid Rebuild(Node *&now, int l, int r) {\n    if (l > r) return;\n    int mid = l + r >> 1;\n    now = vec[mid];\n    Rebuild(now->ch[0], l, mid - 1);\n    Rebuild(now->ch[1], mid + 1, r);\n    Update(now);\n}\n\nvoid Insert(Node *&now, int k) {\n    if (!now) {\n        now = newNode(k);\n        return;\n    }\n    if (now->val == k) now->exist = true;\n    else if (k < now->val) Insert(now->ch[0], k);\n    else if (k > now->val) Insert(now->ch[1], k);\n    Update(now);\n    if (!Bad(now)) return;\n    vec.clear();\n    Dfs(now);\n    int len = vec.size();\n    Rebuild(now, 0, len - 1);\n}\n\nvoid Remove(Node *now, int k) {\n    if (!now) return;\n    if (now->val == k) now->exist = false;\n    else if (k < now->val) Remove(now->ch[0], k);\n    else if (k > now->val) Remove(now->ch[1], k);\n    Update(now);\n    if (!Bad(now)) return;\n    vec.clear();\n    Dfs(now);\n    int len = vec.size();\n    Rebuild(now, 0, len - 1);\n}\n\nint GetPre(Node *now, int k) {\n    if (!now) return -INF;\n    if (now->val >= k) return GetPre(now->ch[0], k);\n    int ret = GetPre(now->ch[1], k);\n    return ret == -INF ? (now->exist ? now->val : GetPre(now->ch[0], k)) : ret;\n}\n\nint GetSuc(Node *now, int k) {\n    if (!now) return INF;\n    if (now->val <= k) return GetSuc(now->ch[1], k);\n    int ret = GetSuc(now->ch[0], k);\n    return ret == INF ? (now->exist ? now->val : GetSuc(now->ch[1], k)) : ret;\n}\n\nint main() {\n    ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n    cin >> n >> m;\n    while (m--) {\n        cin >> op;\n        if (op[0] == 'D') {\n            int x;\n            cin >> x;\n            Insert(rt, x);\n            stk.push(x);\n            vis[x] = true;\n        } else if (op[0] == 'R') {\n            int x = stk.top(); stk.pop();\n            Remove(rt, x);\n            vis[x] = false;\n        } else if (op[0] == 'Q') {\n            int x;\n            cin >> x;\n            if (vis[x]) {\n                cout << '0' << endl;\n                continue;\n            }\n            int l = GetPre(rt, x), r = GetSuc(rt, x);\n            cerr << \"L:\" << l << ' ' << \"R:\" << r << endl;\n            cout << (r == INF ? n + 1 : r) - (l == -INF ? 0 : l) - 1 << endl;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1559479427,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "$Splay+$\u6808\n-\n\u5bf9\u4e8eD\uff08\u6467\u6bc1\uff09\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u5c06\u5f53\u524d\u6467\u6bc1\u8282\u70b9\u63d2\u5165\u5e73\u8861\u6811\uff0c\u5e76\u4e14\u5c06\u5176\u653e\u5728\u6808\u9876\u5373\u53ef\n\n\u5bf9\u4e8eR\uff08\u4fee\u590d\uff09\u64cd\u4f5c\uff0c\u5c06\u5f53\u524d\u6808\u9876\u8282\u70b9\u5728\u5e73\u8861\u6811\u4e2d\u5220\u9664\uff0c\u5e76\u4e14\u5220\u9664\u6808\u9876\n\n\u5bf9\u4e8eQ\uff08\u8be2\u95ee\uff09\u64cd\u4f5c\uff0c\u67e5\u8be2\u5f53\u524dx\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u5e76\u4e14\u6c42\u51fa\u5b83\u4eec\u5305\u542b\u7684\u533a\u95f4\u5927\u5c0f\u5373\u53ef\u3002\u4f46\u662f\u8981\u6ce8\u610f\u8fd9\u91cc\u7684\u524d\u9a71\u548c\u540e\u7ee7\u662f\u53ef\u4ee5\u5305\u542b\u4e0e\u67e5\u8be2\u6570\u76f8\u7b49\u7684\u6570\u7684\uff0c\u6240\u4ee5\u5982\u679cfind\u540e\u53d1\u73b0\u6811\u6839\u662f\u67e5\u8be2\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u3002\n\n$Ps:$\u5728\u6211\u7684\u4ee3\u7801\u4e2d\u7531\u4e8e\u5220\u9664\u64cd\u4f5c\u9700\u8981\u7528\u5230\u4e25\u683c\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u6240\u4ee5\u6211\u7684pre\u548csuc\u51fd\u6570\u90fd\u5206\u4e24\u7c7b\uff0czl=0\u662f\u4e0d\u4e25\u683c\u7684\u524d\u9a71\u540e\u7ee7\uff0czl=1\u662f\u4e25\u683c\u7684\n\n$Code:$~~(\u7801\u98ce\u4e11\u52ff\u602a\uff09~~\n```\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n,m,x;\nchar opt;\nint root,tot;\nint stack[100001],head;\nconst int INF=0x7fffffff;\nstruct tree{\n\tint val,siz,cnt;\n\tint son[2],fa;\n}a[100000];\nvoid update(int p){\n\tif(!p)return;\n\ta[p].siz=a[a[p].son[0]].siz+a[a[p].son[1]].siz+a[p].cnt;\n}\nint fson(int p){\n\treturn p==a[a[p].fa].son[1];\n}\nvoid contact(int son,int father,int lr){\n\ta[father].son[lr]=son;\n\ta[son].fa=father;\n}\nvoid rotate(int p){\n\tint father=a[p].fa,gfather=a[father].fa,lr=fson(p);\n\tcontact(a[p].son[!lr],father,lr);\n\tcontact(p,gfather,fson(father));\n\tcontact(father,p,!lr);\n\tupdate(p);update(father);update(gfather);\n}\nvoid splay(int p,int to){\n\tif(p==to||!p)return;\n\twhile(a[p].fa!=to){\n\t\tint father=a[p].fa,gfather=a[father].fa;\n\t\tif(gfather==to)rotate(p);\n\t\telse{\n\t\t\tif(fson(p)==fson(father))rotate(father);\n\t\t\telse rotate(p);\n\t\t}\n\t\tupdate(p);update(father);update(gfather);\n\t}\n\tif(!to)root=p;\n}\nvoid New(int val,int father){\n\ta[++tot].val=val;\n\ta[tot].siz=a[tot].cnt=1;\n\tcontact(tot,father,val>a[father].val);\n\tif(!root)root=tot;\n\tsplay(tot,0);\n}\nvoid find(int val){\n\tif(!root)return;\n\tint now=root;\n\twhile(a[now].son[val>a[now].val]&&a[now].val!=val)\n\tnow=a[now].son[val>a[now].val];\n\tsplay(now,0);\n}\nvoid ins(int p,int val,int las){\n\tif(!p){New(val,las);return;}\n\tif(a[p].val==val){a[p].cnt++;update(p);return;}\n\tins(a[p].son[val>a[p].val],val,p);\n\tupdate(p);\n}\nint precursor(int val,int zl){\n\tfind(val);\n\tif(zl==0&&val>=a[root].val)return root;\n\tif(zl==1&&val>a[root].val)return root;\n\tint now=a[root].son[0];\n\twhile(a[now].son[1])now=a[now].son[1];\n\treturn now;\n}\nint successor(int val,int zl){\n\tfind(val);\n\tif(zl==0&&val<=a[root].val)return root;\n\tif(zl==1&&val<a[root].val)return root;\n\tint now=a[root].son[1];\n\twhile(a[now].son[0])now=a[now].son[0];\n\treturn now;\n}\nvoid del(int val){\n\tint pre=precursor(val,1),suc=successor(val,1);\n\tsplay(pre,0);splay(suc,pre);\n\tint remove=a[suc].son[0];\n\tif(!suc)remove=a[pre].son[1];\n\tif(remove==root)root=0;\n\tif(a[remove].cnt>1){a[remove].cnt--;update(remove);splay(remove,0);}\n\telse a[a[remove].fa].son[fson(remove)]=0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tNew(0,0);New(n+1,1);\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>opt;\n\t\tif(opt=='D'){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tins(root,x,0);stack[++head]=x;\n\t\t}\n\t\tif(opt=='R'){\n\t\t\tdel(stack[head]);head--;\n\t\t}\n\t\tif(opt=='Q'){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tfind(x);\n\t\t\tif(a[root].val==x)printf(\"%d\\n\",0);\n\t\t\telse{\n\t\t\t\tprintf(\"%d\\n\",(a[successor(x,0)].val-a[precursor(x,0)].val-1));\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1554280253,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u6c42\u4ed6\u88ab\u56f4\u5835\u90fd\u58eb\u5175\u53ef\u4ee5\u5230\u8fbe\u51e0\u4e2a\u623f\u5b50\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u6bd4\u8fd9\u4e2a\u623f\u5b50\u7f16\u53f7\u5927\u5e76\u4e14\u88ab\u7684\u623f\u5b50\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u623f\u5b50\u7684\u7f16\u53f7-\u6bd4\u8fd9\u4e2a\u623f\u5b50\u7f16\u53f7\u5c0f\u5e76\u4e14\u88ab\u7684\u623f\u5b50\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u623f\u5b50\u7684\u7f16\u53f7-1\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u53ef\u4ee5\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002\u6bcf\u6b21\u67e5\u8be2\u5c31\u662f\u6c42min(x~n)-max(1~x)\u3002\n```\n#include<iostream>\n#include<cstdio>\n#include<stack>\nusing namespace std;\nint n,m,x,y,f1[200001],f2[200001];//f1\u4e3a\u6700\u5927\u503c\uff0cf2\u4e3a\u6700\u5c0f\u503c\u3002\nchar ch;\nbool t[50001];\nstack<int> st;\nvoid change1(int s,int l,int r,int v){//\u4fee\u590d\u3001\u7834\u574f\u5bf9max\u7684\u6539\u53d8(v==1\u4e3a\u7834\u574f\uff0cv==0\u4e3a\u4fee\u590d)\n\tif(l>x||r<x)return;\n\tif(l==r){\n\t\tif(v==0)f1[s]=0;\n\t\telse f1[s]=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tchange1(s*2,l,mid,v);\n\tchange1(s*2+1,mid+1,r,v);\n\tf1[s]=max(f1[s*2],f1[s*2+1]);\n}\nvoid change2(int s,int l,int r,int v){//\u4fee\u590d\u3001\u7834\u574f\u5bf9min\u7684\u6539\u53d8\n\tif(l>x||r<x)return;\n\tif(l==r){\n\t\tif(v==0)f2[s]=n+1;\n\t\telse f2[s]=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tchange2(s*2,l,mid,v);\n\tchange2(s*2+1,mid+1,r,v);\n\tf2[s]=min(f2[s*2],f2[s*2+1]);\n}\nint find1(int s,int l,int r){//\u6c421~x\u7684max\u503c\n\tif(1>r||x<l)return 0;\n    if(1<=l&&x>=r)return f1[s];\n    int mid=(l+r)/2;\n    int p1=find1(s*2,l,mid),p2=find1(s*2+1,mid+1,r);\n    return max(p1,p2);\n}\nint find2(int s,int l,int r){//\u6c42x~n\u7684min\u503c\n\tif(x>r||n<l)return 100000000;\n    if(x<=l&&n>=r)return f2[s];\n    int mid=(l+r)/2;\n    int p1=find2(s*2,l,mid),p2=find2(s*2+1,mid+1,r);\n    return min(p1,p2);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n*4;i++)f2[i]=n+1;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>ch;\n\t\tif(ch=='R'){\n\t\t\tif(!st.empty()){\n\t\t\t\tx=st.top();//\u4fee\u590d\u6700\u540e\u4e00\u4e2a\u88ab\u7834\u574f\u7684\u623f\u5b50\n\t\t\t\tt[x]=false;\n\t\t\t\tst.pop();\n\t\t\t\tchange1(1,1,n,0);\n\t\t\t\tchange2(1,1,n,0);\n\t\t\t}\n\t\t}else if(ch=='D'){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tst.push(x);//\u5c06\u6700\u540e\u4e00\u4e2a\u88ab\u7834\u574f\u7684\u623f\u5b50\u538b\u5165\u6808\n\t\t\tt[x]=true;\n\t\t\tchange1(1,1,n,1);\n\t\t\tchange2(1,1,n,1);\n\t\t}else{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(!t[x]){\n\t\t\t\tint p1=find1(1,1,n),p2=find2(1,1,n);\n\t\t\t\tprintf(\"%d\\n\",p2-p1-1);\n\t\t\t}else printf(\"0\\n\");\n\t\t}\n\t}\n}\n```",
        "postTime": 1547537626,
        "uid": 114149,
        "name": "suyiheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u601d\u8def\u8df3\u5f97\u5f88\u5feb\u3002\n\n\u4ee5\u6bcf\u4e2a\u6751\u5b50\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5efa\u7acb\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u3002\u521d\u59cb\u65f6\u6bcf\u4e2a\u6751\u5b50\u4e2dsum\u4e3a1\u3002\u6211\u4eec\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u770b\uff0c\u7406\u89e3D x\u4e3a\u5c06x\u53f7\u8282\u70b9\u66f4\u6539\u62100\uff0c\u8fd9\u6837R x\u548cD x\u90fd\u53ea\u4e0d\u8fc7\u662f\u70b9\u4fee\u6539\u3002\u6211\u4eec\u53ea\u9700\u8981\u67e5\u627e\u5305\u62ecx\u53f7\u6751\u5b50\u7684\u8fde\u7eed1\u7684\u4e2a\u6570\u3002\n\n\u600e\u4e48\u627e\u5462\uff1f\u6211\u4e00\u5f00\u59cb\u7684\u601d\u8def\u662f\u4eff\u7167\u7ef4\u62a4\u533a\u95f4\u548c\u6700\u503c\u7684\u7ef4\u62a4\u65b9\u6cd5\uff0c\u7ef4\u62a4\u524d\u7f00\u8fde\u7eed1\uff0c\u540e\u7f00\u8fde\u7eed1\uff0c\u4f46\u6211\u5f88\u5feb\u53d1\u73b0\u8fd9\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u5904\u3002(\u5f53\u7136\uff0c\u540e\u6765\u53d1\u73b0\uff0c\u8fd9\u5728\u6b63\u89e3\u4e2d\u662f\u53ef\u4ee5\u7684)\u3002\u7136\u540e\u6211\u53c8\u60f3\u5230\uff0c\u5bf9\u4e8e\u5305\u542bx\u53f7\u623f\u95f4\u7684\u8282\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u4e0a\u8fde\u7eed\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u627e\u8fd9\u4e2a\u533a\u95f4\u7684\u524d\u4e00\u4e2a\u533a\u95f4\u548c\u540e\u4e00\u4e2a\u533a\u95f4\uff0c\u52a0\u8d77\u6765\u3002\n\n\u7136\u540e\u8fd9\u91cc\u5c31\u5de7\u5999\u4e86\uff01\u7531\u4e8e\u6211\u4eec\u662f\u5728\u6ee1\u4e8c\u53c9\u6811\u4e0a\u9012\u5f52\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u4ec0\u4e48\u540c\u4e00\u5c42\u4e0a\u4e00\u6392\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u5bf9\u6211\u4eec\u5f53\u524d\u72b6\u6001\u6765\u8bf4\uff0c\u53ea\u6709\u4e09\u4e2a\u70b9\uff1a\u5f53\u524d\u8282\u70b9\uff0c\u5de6\u513f\u5b50\uff0c\u53f3\u513f\u5b50\u3002\u5047\u5b9ax\u8282\u70b9\u5728\u5de6\u513f\u5b50\uff0c\u6211\u4eec\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u4e0a1\u662f\u5426\u8fde\u7eed\uff0c\u5982\u679c\u4e0d\u8fde\u7eed\uff0c\u9012\u5f52\u7ee7\u7eed\u4ee5\u5de6\u513f\u5b50\u4e3a\u6839\u7ec6\u5206\u533a\u95f4\uff0c\u5982\u679c\u8fde\u7eed\uff0c\u6211\u4eec\u505c\u6b62\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u9012\u5f52\uff0c\u8f6c\u800c\u4ee5\u6700\u9760\u8fd1\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u4e0a\u7684\u53f6\u5b50\u8282\u70b9\u6240\u5bf9\u5e94\u623f\u95f4\u4e3ax\uff0c\u548c\u4ee5\u6700\u9760\u8fd1\u5de6\u513f\u5b50\u7684\u5de6\u8282\u70b9\u7684\u6700\u53f3\u8fb9\u7684\u53f6\u5b50\u8282\u70b9\u6240\u5bf9\u5e94\u623f\u95f4\u4e3ax\uff0c\u67e5\u627e\u5305\u542bx\u7684\u8fde\u7eed\u533a\u95f4\u6700\u5927\u503c\u3002\u5982\u6b64\u9012\u5f52\u4e0b\u53bb\uff0c\u6700\u7ec8\u6211\u4eec\u5c06\u4e0d\u91cd\u4e0d\u6f0f\u5730\u5f97\u5230\u8fde\u7eed\u533a\u95f4\u5927\u5c0f\u3002\n\n\u4e3a\u4e86\u4e0d\u91cd\u590d\u8bbf\u95ee\u533a\u95f4\uff0c\u6211\u4eec\u8981\u5728getsum\u51fd\u6570\u7684\u53c2\u6570\u4e0a\u52a0\u4e2adirection\uff0c\u8868\u793a\u6765\u7684\u65b9\u5411\uff0c\u4e0d\u8d70\u56de\u5934\u8def\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u6211\u4e00\u5f00\u59cb\u8ba4\u4e3a\u8fd9\u6837\u9012\u5f52\u53ef\u80fd\u4f1a\u6709\u8c03\u7528\u5f88\u591a\u6b21\u627e\u5176\u4ed6\u70b9\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u4f1a\u88ab\u5408\u5e76\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4ece\u8bbf\u95ee\u6811\u7684\u89d2\u5ea6\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800c\u5e94\u8be5\u4ece\u201c\u533a\u95f4\u88ab\u62c6\u5206\u62102\u8fdb\u5236\u6570\u201d\u7684\u89d2\u5ea6\u8fdb\u884c\u5206\u6790\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662fO((logn)^2)\uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u6570\u62c6\u5206\u662flogn\uff0c\u5728\u6811\u4e0a\u627e\u53c8\u662flogn\u3002\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n\uff08\u6b64\u9898\u5728POJ\u4e0a\u5361\u5e38\uff0c\u6211\u7684\u4ee3\u7801\u9700\u8981\u5feb\u8bfb\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u6211\u7684\u65b9\u6cd5\u592a\u9ebb\u70e6\u4e86\u5427\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<stack>\n \nusing namespace std;\n \nstack<int>sta;\n \nstruct node{\n   int left,right;\n   int sum;\n#define sum(x) (tree[x].sum)\n#define l(x) (tree[x].left)\n#define r(x) (tree[x].right)\n};\nnode tree[200001];\nint n;\n \nvoid readp(int &x){\n   x=0;\n   char c;\n   c=getchar();\n   while (c<'0' or c>'9')\n      c=getchar();\n   while (c<='9' and c>='0'){\n      x=x*10+c-'0';\n\n      c=getchar();\n   }\n}\n \nvoid build(int p,int l,int r){\n   l(p)=l;\n   r(p)=r;\n   if (l==r){\n      sum(p)=1;\n      return ;\n   }\n   build(p*2,l,(l+r)/2);\n   build(p*2+1,(l+r)/2+1,r);\n   sum(p)=sum(p*2)+sum(p*2+1);\n}\n \nvoid add_point(int p,int k,int d){\n   if (l(p)==r(p)){\n      sum(p)+=d;\n      return ;\n   }\n   int mid=(l(p)+r(p))/2;\n   if (k<=mid)\n      add_point(p*2,k,d);\n   else\n      add_point(p*2+1,k,d);\n   sum(p)=sum(p*2)+sum(p*2+1);\n}\n \nint getsum(int p,int k,int dir){\n   if (l(p)==r(p))\n      return sum(p);\n   if (!k or k>n)\n      return 0;\n   int ans=0;\n   int lc=p*2,rc=lc+1;\n   int mid=(l(p)+r(p))/2;\n   if (k<=mid){\n      if (sum(lc)==(r(lc)-l(lc)+1)){\n         ans+=sum(lc);\n         if (!dir or dir==-1)\n            ans+=getsum(1,r(lc)+1,-1);//\u66f4\u6539\u76ee\u6807\n         if (!dir or dir==1)\n            ans+=getsum(1,l(lc)-1,1);\n         return ans;\n      }\n      else\n         return getsum(p*2,k,dir);\n   }\n   else{\n      if(sum(rc)==(r(rc)-l(rc)+1)){\n         ans+=sum(rc);\n         if (!dir or dir==1)\n            ans+=getsum(1,l(rc)-1,1);\n         if (!dir or dir==-1)\n            ans+=getsum(1,r(rc)+1,-1);\n         return ans;\n      }\n      else\n         return getsum(p*2+1,k,dir);\n   }\n}\n\n\nint main(){\n   freopen(\"test.in\",\"r\",stdin);\n//   freopen(\"test.out\",\"w\",stdout);\n   int m,x,ans,last;\n   cin>>n>>m;\n   build(1,1,n);\n   char opt;\n   for (int i=1;i<=m;++i){\n      cin>>opt;\n      if (opt=='D'){\n         cin>>x;\n         add_point(1,x,-1);\n         sta.push(x);\n      }\n      if (opt=='Q'){\n         cin>>x;\n         ans=getsum(1,x,0);\n         cout<<ans<<'\\n';\n      }\n      if (opt=='R'){\n         last=sta.top();\n         sta.pop();\n         add_point(1,last,1);\n      }\n   }\n   return 0;\n}\n\n```",
        "postTime": 1541087384,
        "uid": 36399,
        "name": "blackjack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u5e94\u7528\u5e73\u8861\u6811\u53ef\u4ee5\u5728nlgn\u7684\u590d\u6742\u5ea6\u5185\u6c42\u89e3\n\n\u5e73\u8861\u6811\u7ef4\u62a4\u88ab\u6bc1\u7684\u5730\u65b9\uff0c\u6bcf\u6b21\u627e\u524d\u9a71\u540e\u7ee7\uff0c\u4e00\u51cf\u5c31\u662f\u7b54\u6848\u3002\n\n\u5f53\u7136\u8fd9\u4e2a\u9898\u4e5f\u53ef\u4ee5\u901a\u8fc7\u628a\u7ebf\u6bb5\u6811\u63d0\u51fa\u6765\uff0c\u6811\u4e0a\u4e8c\u5206\u590d\u6742\u5ea6\u4e5f\u662fnlgn\n\n\u7b2c\u4e00\u79cd\u601d\u8def\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 50005;\nint cnt,c[MAXN][2],fa[MAXN],sz[MAXN],v[MAXN],rt,pr,af,loc,n,m;\nint mes[MAXN],s;\nchar str[100];\nvoid pushup(int x){\n    int l=c[x][0],r=c[x][1];\n    sz[x]=sz[l]+sz[r]+1;\n}\nvoid rotate(int x,int &k){\n    int y=fa[x],z=fa[y],l,r;\n    if(c[y][0]==x)l=0;else l=1;r=l^1;\n    if(y==k)k=x;\n    else{if(c[z][0]==y)c[z][0]=x;else c[z][1]=x;}\n    fa[y]=x;fa[x]=z;fa[c[x][r]]=y;\n    c[y][l]=c[x][r];c[x][r]=y;\n    pushup(y);pushup(x);\n}\nvoid splay(int x,int &k){\n    int y,z;\n    while(x!=k){\n        y=fa[x];z=fa[y];\n        if(y!=k){\n            if((c[z][0]==y)^(c[y][0]==x))rotate(y,k);\n            else rotate(x,k);\n        }\n        rotate(x,k);\n    }\n}\nvoid getpr(int x,int val){\n    int l=c[x][0],r=c[x][1];\n    if(x==0)return;\n    if(v[x]<val){if(v[x]>pr){pr=v[x];loc=x;}getpr(r,val);}\n    else getpr(l,val);\n}\nvoid getaf(int x,int val){\n    int l=c[x][0],r=c[x][1];\n    if(x==0)return;\n    if(v[x]>val){if(v[x]<af){af=v[x];loc=x;}getaf(l,val);}\n    else getaf(r,val);\n}\nvoid dfs(int x){\n    if(x==0)return;\n    dfs(c[x][0]);\n    printf(\"%d \",v[x]);\n    dfs(c[x][1]);\n}\nbool find(int x,int k){\n    if(x==0)return 0;\n    if(v[x]==k)return 1;\n    if(k<v[x])return find(c[x][0],k);\n    else return find(c[x][1],k);\n}\nvoid del(int v){\n    pr=-0x3f3f3f3f;loc=0;\n    getpr(rt,v+1);\n    splay(loc,rt);\n    if(c[rt][0]*c[rt][1]==0)\n        rt=c[rt][0]+c[rt][1];\n    else{\n        pr=-0x3f3f3f3f;loc=0;\n        getpr(c[rt][0],0x3f3f3f3f);\n        splay(loc,c[rt][0]);\n        fa[c[rt][1]]=c[rt][0];\n        c[c[rt][0]][1]=c[rt][1];\n        rt=c[rt][0];\n    }\n}\nvoid ins(int &x,int val,int pr){\n    if(x==0){x=++cnt;v[x]=val;sz[x]=1;fa[x]=pr;splay(x,rt);return;}\n    if(val<v[x])ins(c[x][0],val,x);\n    else ins(c[x][1],val,x);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int a;\n        scanf(\"%s\",str);\n        if(str[0]=='D'){\n            scanf(\"%d\",&a);\n            ins(rt,a,0);\n            mes[++s]=a;\n        }else if(str[0]=='R'){\n            del(mes[s]);\n            s--;\n        }else{\n            scanf(\"%d\",&a);\n            af=0x3f3f3f3f;pr=-0x3f3f3f3f;\n            getaf(rt,a);getpr(rt,a);\n            if(af>n)af=n+1;\n            if(pr<1)pr=0;\n            af--;pr++;\n            if(find(rt,a))puts(\"0\");\n            else printf(\"%d\\n\",af-pr+1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1494057088,
        "uid": 41760,
        "name": "dqnstry",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u4eec\u62bd\u8c61\u6210\u57fa\u672c\u6a21\u578b\uff0c\u95ee\u9898\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u5f00\u59cb\u5168\u662f1\u7684\u5e8f\u5217\uff0c\u7136\u540e\u67092\u4e2a\u64cd\u4f5c\uff0c1\u662f\u5c06\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c xor 1\uff0c2\u662f\u8be2\u95eex\u8fd9\u4e2a\u4f4d\u7f6e\u6700\u5de6\u8fb9\u7684\u8fde\u7eed1\u7684\u4f4d\u7f6e\u548c\u6700\u53f3\u8fb9\u8fde\u7eed1\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u600e\u4e48\u505a\u5462\uff1f\u611f\u89c9\u4e00\u822c\u7684\u6570\u636e\u7ed3\u6784\u4e0d\u592a\u597d\u5f04\uff0c\u5373\u4f7f\u53ef\u4ee5\u4e5f\u8981\u5957\u4e00\u4e2a\u4e8c\u5206\u4ec0\u4e48\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5206\u5757\u6765\u505a\uff0c\u6211\u4eec\u5c06\u5176\u5206\u6210\u6839\u53f7n\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2aflag[i]\uff0cflag[i]=1\u8868\u793a\u7b2ci\u5757\u5168\u90e8\u662f1\uff0c\u5426\u5219\u8868\u793a\u5b58\u57280\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6b21\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u6839\u53f7n\u7684\u65f6\u95f4\u7ef4\u62a4flag[i]\uff0c\u5bf9\u4e8e\u4e00\u6b21\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u5148\u5c06x\u5230x\u6240\u5728\u5757\u7684\u53f3\u533a\u95f4\u626b\u4e00\u904d\uff0c\u5982\u679c\u53d1\u73b00\u5c31\u8fd4\u56de\uff0c\u5426\u5219\u6211\u4eec\u5f00\u59cb\u770bx\u6240\u5728\u5757\u7684\u4e0b\u4e00\u5757\u7684flag\u503c\uff0c\u5982\u679cflag[i]=1\uff0c\u8df3\u5230\u4e0b\u4e00\u5757\uff0c\u5426\u5219\u66b4\u529b\u7684\u626b\u627e\u52301\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6bcf\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e5f\u662f\u6839\u53f7n\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728m\u6839\u53f7n\u7684\u65f6\u95f4\u5185\u89e3\u51b3\uff0c\u800c\u4e14\u5e38\u6570\u975e\u5e38\u5c0f\u3002\n\n      \n      \n      \n      \n```cpp\n    #include<cstdio>  \n    #include<cstring>  \n    #include<algorithm>  \n    using namespace std;  \n    #define maxn 200005   \n    const int block=224;  \n    int a[maxn],L[450],R[450],b[maxn],cnt,n,m,last[maxn],tot;  \n    bool flag[450];  \n    int queryl(int x)  \n    {  \n        int temp=x-1;  \n        for (int i=x-1;i>=L[b[x]];i--)   \n            if (a[i]!=1) return temp-i;  \n        x=L[b[x]]-1;  \n        while (flag[b[x]]&&x>0) x=L[b[x]]-1;  \n        if (x<=0) return temp;  \n        for (int i=x;i>=L[b[x]];i--)   \n            if (a[i]!=1) return temp-i;  \n    }  \n    int queryr(int x)  \n    {  \n        int temp=x;  \n        for (int i=x;i<=R[b[x]];i++)   \n            if (a[i]!=1) return i-temp;  \n        x=R[b[x]]+1;  \n        while (flag[b[x]]&&x<=n) x=R[b[x]]+1;  \n        if (x>n) return n+1-temp;  \n        for (int i=x;i<=R[b[x]];i++)   \n            if (a[i]!=1) return i-temp;  \n    }  \n    void change(int x,int y)  \n    {  \n        a[x]=y;  \n        bool ok=1;  \n        for (int i=L[b[x]];i<=R[b[x]];i++)   \n        {  \n            if (a[i]!=1)   \n            {  \n                ok=0;  \n                break;    \n            }  \n        }  \n        if (ok) flag[b[x]]=1;  \n        else flag[b[x]]=0;  \n    }  \n    int main()  \n    {  \n        scanf(\"%d\",&n);  \n        for (int i=1;i<=n;i++) a[i]=1;  \n        for (int i=1;i<=n;i++)   \n        {  \n            b[i]=(i-1)/block+1;  \n            if (b[i]!=b[i-1]) L[b[i]]=i,R[b[i-1]]=i-1;    \n        }  \n        L[1]=1;R[b[n]]=n;  \n        for (int i=1;i<=b[n];i++)   \n        {  \n            bool ok=1;  \n            for (int j=L[i];j<=R[i];j++)  \n                if (a[j]!=1) {ok=0;break;}  \n            if (ok) flag[i]=1;    \n        }  \n        scanf(\"%d\",&m);  \n        for (int i=1;i<=m;i++)   \n        {  \n            char opt[3];  \n            int x;  \n            scanf(\"%s\",opt);      \n            if (opt[0]=='R')   \n            {  \n                change(last[tot],1);  \n                tot--;  \n                continue;  \n            }  \n            scanf(\"%d\",&x);  \n            if (opt[0]=='D') {change(x,0);last[++tot]=x;}  \n            if (opt[0]=='Q')   \n                if (a[x]==0) printf(\"0\\n\");  \n                else printf(\"%d\\n\",queryl(x)+queryr(x));  \n        }  \n        return 0;     \n}\n```",
        "postTime": 1477438612,
        "uid": 12736,
        "name": "LVYOUYW",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u6765[Dew](https://www.cnblogs.com/ppprseter/p/9600868.html)\u7684\u535a\u5ba2\u770b\u770b\uff1f\n\n\u8fd9\u9053\u9898\u65b9\u6cd5\u597d\u591a\u554aQAQ\n\n\u63d0\u4f9b\u4e00\u79cd\u70b9\u5206\u88c2\u5408\u5e76\u7684\u5e73\u8861\u6811\u505a\u6cd5\n\n\u5e73\u8861\u6811\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a$segl$\u548c\u4e00\u4e2a$segr$,\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u6240\u4ee3\u8868\u7684**\u8fde\u7eed**\u533a\u95f4\n\n\u8fd9\u6837\u6211\u4eec\u5728\u8be2\u95ee\u7684\u65f6\u5019\u53ea\u9700\u8981\u627e\u5230\u5bf9\u5e94\u7684\u70b9\uff0c\u770b\u770b\u8fd9\u4e2a\u70b9\u6709\u591a\u5927\u5c31\u884c\u4e86\n\n\u5bf9\u4e8e\u5220\u9664\uff0c\u6211\u4eec\u76f4\u63a5\u627e\u5230\u70b9\uff0c\u7136\u540e\u5206\u60c5\u51b5\u628a\u8fd9\u4e2a\u70b9\u5206\u88c2\u6389\u5220\u6389\u5c31\u884c\u4e86\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u6211\u4eec\u585e\u8fdb\u53bb\u7684\u65f6\u5019\u770b\u770b\u53ef\u4e0d\u53ef\u4ee5\u548c\u5de6\u53f3\u8282\u70b9\u8fdb\u884c\u5408\u5e76\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u628a\u8282\u70b9\u5408\u5e76\u6210\u4e00\u4e2a\n\n\u4e8b\u5b9e\u4e0a\u5b9e\u73b0\u8d77\u6765\u6709\u4e9b\u9ebb\u70e6\uff0c\u6211\u7528\u7684\u662ffhqtreap\uff0c\u5199\u8d77\u6765\u8fd8\u7b97\u65b9\u4fbf\u53ed\n\n-------------\n**Code:**\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#define ls ch[now][0]\n#define rs ch[now][1]\nconst int N=1e5+10;\nint ch[N][2],segl[N],segr[N],val[N],tot,root,s[N],n,m,tot0,in[N];\nvoid split(int now,int k,int &x,int &y)\n{\n    if(!now){x=y=0;return;}\n    if(k>=segl[now])\n        x=now,split(rs,k,rs,y);\n    else\n        y=now,split(ls,k,x,ls);\n}\nint Merge(int x,int y)\n{\n    if(!x||!y) return x+y;\n    if(val[x]<val[y])\n    {\n        ch[x][1]=Merge(ch[x][1],y);\n        return x;\n    }\n    else\n    {\n        ch[y][0]=Merge(x,ch[y][0]);\n        return y;\n    }\n}\nint New(int l,int r)\n{\n    val[++tot]=rand(),segl[tot]=l,segr[tot]=r;\n    return tot;\n}\nvoid Insert(int k)\n{\n    int x,y,z;\n    in[k]=0;\n    split(root,k,x,y);\n    split(y,k+1,z,y);\n    int now=x;while(rs) now=rs;\n    if(segr[now]==k-1)\n    {\n        ++segr[now];\n        if(segr[now]==segl[z]-1)\n        {\n            segr[now]=segr[z];\n            root=Merge(x,y);//\u4e09\u4e2a\u5168\u5408\u5e76\n        }\n        else\n            root=Merge(x,Merge(z,y));\n    }\n    else if(k==segl[z]-1)\n    {\n        --segl[z];\n        root=Merge(x,Merge(z,y));\n    }\n    else\n        root=Merge(Merge(x,New(k,k)),Merge(z,y));\n}\nint query(int k)\n{\n    int x,y,ans,now;\n    split(root,k,x,y);\n    now=x;while(rs) now=rs;\n    ans=segr[now]+1-segl[now];\n    root=Merge(x,y);\n    return ans;\n}\nvoid destroy(int k)\n{\n    int x,y,z;\n    in[k]=1;\n    split(root,k,x,y);\n    int now=x,rr;while(rs) now=rs;\n    rr=segr[now];\n    if(segl[now]==segr[now]) split(x,segl[now]-1,x,z);\n    else segr[now]=k-1;\n    if(k<rr) x=Merge(x,New(k+1,rr));\n    root=Merge(x,y);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    root=New(1,n);\n    char op[3];\n    for(int x,i=1;i<=m;i++)\n    {\n        scanf(\"%s\",op);\n        if(op[0]=='D')\n        {\n            scanf(\"%d\",&x);\n            destroy(s[++tot0]=x);\n        }\n        else if(op[0]=='R')\n            Insert(s[tot0--]);\n        else\n        {\n            scanf(\"%d\",&x);\n            if(in[x]) printf(\"0\\n\");\n            else printf(\"%d\\n\",query(x));\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1536238145,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u6307\u9488splay\n\n\u5c06\u88ab\u6467\u6bc1\u7684\u623f\u5b50\u5b58\u8fdb\u6811\u4e2d\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee \u67e5\u8be2\u5b83\u6811\u4e2d\u7684\u524d\u9a71\u548c\u540e\u7ee7\n\n\u5219\u7b54\u6848\u4e3a\u540e\u7ee7-\u524d\u9a71-1\n\n\u7279\u522b\u5730\uff0c\u5982\u679c\u5b83\u5728\u6811\u4e2d\u5c31\u8f93\u51fa0\u4e86\n\n\u6ce8\u610f\u6dfb\u52a0\u8fb9\u754c\u70b90\u548cn+1\n\n\u5f00\u4e2astack\u5b58\u88ab\u6467\u6bc1\u5c1a\u5f85\u4fee\u590d\u7684\u623f\u5b50\n\n\u6bcf\u6b21R\u91cd\u5efa\u5c31\u5728\u6811\u4e2d\u5220\u9664\u6808\u9876 \u5e76\u5f39\u51fa\n```cpp\n#include<stack>\n#include<cstdio>\nusing namespace std;\nclass Splay\n{\n\tpublic:\n\t\tstruct tree\n\t\t{\n\t\t\tint value,size;\n\t\t\ttree *fa,*son[2];\n\t\t\tinline tree(int key)\n\t\t\t{\n\t\t\t\tsize=1;\n\t\t\t\tvalue=key;\n\t\t\t\tfa=son[0]=son[1]=NULL;\n\t\t\t}\n\t\t\tinline void pushup()\n\t\t\t{\n\t\t\t\tsize=1;\n\t\t\t\tif (son[0])size+=son[0]->size;\n\t\t\t\tif (son[1])size+=son[1]->size;\n\t\t\t}\n\t\t}*root;\n\t\tinline bool relation(tree *p)\n\t\t{\n\t\t\tif (p&&p->fa)return p->fa->son[1]==p;\n\t\t}\n\t\tinline void connect(tree *&p,tree *&fa,bool which)\n\t\t{\n\t\t\tif (p)p->fa=fa;\n\t\t\tif (fa)fa->son[which]=p;\n\t\t}\n\t\tinline void rotate(tree *&p)\n\t\t{\n\t\t\ttree *fa=p->fa;\n\t\t\tbool lr=relation(p);\n\t\t\tconnect(p,fa->fa,relation(fa));\n\t\t\tconnect(p->son[lr^1],fa,lr);\n\t\t\tconnect(fa,p,lr^1);\n\t\t\tfa->pushup();p->pushup();\n\t\t}\n\t\tinline void splay(tree *&p,tree *goal)\n\t\t{\n\t\t\tfor (tree *fa;(fa=p->fa)!=goal;rotate(p))\n\t\t\t\tif (fa->fa!=goal)\n\t\t\t\t\trotate(relation(fa)==relation(p)?fa:p);\n\t\t\tif (goal==NULL)root=p;\n\t\t}\n\t\tinline void insert(int insertion)\n\t\t{\n\t\t\tif (root==NULL)\n\t\t\t{\n\t\t\t\troot=new tree(insertion);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttree *p=root;\n\t\t\twhile (1)\n\t\t\t{\n\t\t\t\tif (p->value==insertion)return;\n\t\t\t\ttree *fa=p;\n\t\t\t\tbool direction=p->value<insertion;\n\t\t\t\tp=fa->son[direction];\n\t\t\t\tif (p==NULL)\n\t\t\t\t{\n\t\t\t\t\tp=new tree(insertion);\n\t\t\t\t\tconnect(p,fa,direction);\n\t\t\t\t\tfa->pushup();\n\t\t\t\t\tsplay(p,NULL);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tinline void find(int key)\n\t\t{\n\t\t\ttree *p=root;\n\t\t\twhile (p->son[p->value<key]&&p->value!=key)\n\t\t\t\tp=p->son[p->value<key];\n\t\t\tsplay(p,NULL);\n\t\t}\n\t\tinline tree *precursor(int x)\n\t\t{\n\t\t\tfind(x);\n\t\t\tif (root->value<x)return root;\n\t\t\ttree *p=root->son[0];\n\t\t\twhile (p->son[1])p=p->son[1];\n\t\t\treturn p;\n\t\t}\n\t\tinline tree *successor(int x)\n\t\t{\n\t\t\tfind(x);\n\t\t\tif (root->value>x)return root;\n\t\t\ttree *p=root->son[1];\n\t\t\twhile (p->son[0])p=p->son[0];\n\t\t\treturn p;\n\t\t}\n\t\tinline void Delete(int x)\n\t\t{\n\t\t\ttree *pre=precursor(x),*nxt=successor(x);\n\t\t\tsplay(pre,NULL);splay(nxt,pre);\n\t\t\tdelete nxt->son[0];\n\t\t\tnxt->son[0]=NULL;\n\t\t\tnxt->pushup();\n\t\t}\n}splay;\nint n,m,last;\nstack<int>destruction;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tsplay.insert(0);splay.insert(n+1); //\u6ce8\u610f\u8fb9\u754c \u5426\u5219\u53ef\u80fd\u7206\u70b8\n\twhile (m--)\n\t{\n\t\tchar opt;int x;\n\t\tscanf(\" %c\",&opt);\n\t\tif (opt=='R')\n\t\t\tsplay.Delete(destruction.top()),\n\t\t\tdestruction.pop(); //\u53d6\u51fa\u6808\u9876\u5e76\u5f39\u51fa\n\t\tif (opt=='D')\n\t\t\tscanf(\"%d\",&x),\n\t\t\tsplay.insert(x),\n\t\t\tdestruction.push(x); //\u5165\u6808\n\t\tif (opt=='Q')\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tsplay.find(x);\n\t\t\tif (splay.root->value==x)puts(\"0\"); //\u7279\u5224\u4e3a0\n\t\t\telse\n\t\t\t{\n\t\t\t\tint pre=splay.precursor(x)->value,\n\t\t\t\t\tnxt=splay.successor(x)->value;\n\t\t\t\tprintf(\"%d\\n\",nxt-pre-1);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1533478693,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1503 \u3010\u9b3c\u5b50\u8fdb\u6751\u3011"
    }
]