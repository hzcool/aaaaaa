[
    {
        "content": "\u8fd9\u9053\u9898\u6807\u7b7e\u662f\u5e7f\u641c\uff0c\u4e8e\u662f\u6211\u5c31\u7528\u6df1\u641c\u6765\u505a\u3002\n\n~~\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u5feb\u8003CSP\u4e86\u8fd8\u6765\u53d1\u9898\u89e3~~\n## \u601d\u8def\n\u9996\u5148\u770b\u9898\uff1a\u767d\u70b9\u6216\u9ed1\u70b9\u90fd\u53ea\u9700\u8981\u65c1\u8fb9\u6709\u4e00\u4e2a\u53e6\u4e00\u79cd\u989c\u8272\u7684\u70b9\u5c31\u884c\u4e86\uff0c\u800c\u7070\u8272\u4e0d\u4e00\u6837\uff0c\u5b83\u9700\u8981\u4e00\u767d\u4e00\u9ed1\u3002\u663e\u7136\uff0c\u7070\u8272\u8981\u6c42\u66f4\u591a\uff0c\u4e5f\u5c31\u66f4\u96be\u5904\u7406\uff0c\u90a3\u4e48\uff0c\u5c31**\u4e0d\u6d82\u5b83**\u4e86\u5427\u3002\n\n\u4e00\u4e2a\u70b9\u767d\u70b9\u6216\u9ed1\u70b9\uff0c\u53ea\u8981\u6709\u70b9\u4e0e\u5b83\u76f8\u8fde\uff0c\u8fd9\u4e24\u4e2a\u70b9\u989c\u8272\u76f8\u53cd\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u3002\u800c\u5982\u679c\u4e00\u4e2a\u70b9\u4e0d\u4e0e\u5176\u4ed6\u4efb\u4f55\u70b9\u8fde\u901a\uff0c\u4e0d\u7ba1\u6d82\u4e0d\u6d82\u7070\u8272\uff0c\u90fd\u65e0\u6cd5\u6ee1\u8db3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4efb\u4f55\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5**\u4e0d\u6d82\u7070\u8272**\u3002\n\n\u4e16\u754c\u4e00\u4e0b\u5b50\u6e05\u9759\u4e86\u8bb8\u591a\uff1a\u53ea\u6709\u9ed1\u70b9\u548c\u767d\u70b9\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c**\u90fd\u641c\u4e00\u904d**\uff0c\u7b2c\u4e00\u4e2a\u70b9\u8bb0\u4e3a\u767d\u70b9\uff0c\u540e\u9762\u6bcf\u641c\u5230\u4e00\u4e2a\u70b9\uff0c\u90fd**\u6d82\u4e0a\u4e0e\u524d\u4e00\u4e2a\u70b9\u76f8\u53cd\u7684\u989c\u8272**\uff0c\u5982\u679c\u6d82\u8fc7\u5c31\u4e0d\u6d82\u4e86\u3002\u800c\u5982\u679c\u6709\u4e00\u4e2a\u8fde\u901a\u56fe\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48**\u4e00\u5b9a\u4e0d\u884c**\uff0c\u8f93\u51fa$NIE$\u5c31\u597d\u4e86\u3002\n## \u7ec6\u8282\n\u6709\u7684\u7ec6\u8282\u8fd8\u662f\u6709\u5fc5\u8981\u63d0\u4e00\u4e0b\u3002\n\n\u5728\u8bfb\u5165\u8fb9\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e2a\u8fb9**\u4e24\u4e2a\u7aef\u70b9\u90fd\u6807\u8bb0\u4e00\u4e0b**\uff0c\u8fd9\u6837\u53ea\u8981\u6709\u6ca1\u6807\u8bb0\u5230\u7684\u70b9\uff0c\u4e00\u5b9a\u662f\u5355\u72ec\u7684\uff0c\u5373\u65e0\u6cd5\u5b8c\u6210\u3002\n\n\u5efa\u8fb9\u65f6\uff0c\u8981\u7528**\u90bb\u63a5\u8868\u4f18\u5316**\u7a7a\u95f4\uff0c\u4e0d\u7136\u4f1a\u8d85\u7a7a\u95f4\u3002\n\n\u6df1\u641c\u65f6\uff0c\u4e00\u5b9a\u8981**\u6ca1\u6709\u641c\u5230**\uff08\u65b0\u7684\u8fde\u901a\u56fe\uff09\u518d\u7ee7\u7eed\u641c\uff0c\u4e0d\u7136\u7edd\u5bf9\u8d85\u65f6\u3002\n## \u6280\u5de7\n\u8fd9\u91cc\u7684\u6280\u5de7\u5c31\u662f\u5982\u4f55\u628a\u4ee3\u7801\u5199\u7684\u66f4\u7b80\u5355\uff08~~\u66f4\u77ed~~\uff09\n### \u5224\u65ad\u662f\u5426\u641c\u8fc7\n\u5f00\u4e00\u4e2a\u6574\u578b\u7684$color$\u6570\u7ec4\uff0c\u503c\u4e3a$0$\u8868\u793a\u672a\u67d3\u8272\uff08\u672a\u904d\u5386\uff09\uff0c$1$\u8868\u793a\u767d\u8272\uff0c$2$\u8868\u793a\u9ed1\u8272\u3002\n\n\u5224\u65ad\u53ea\u9700\u8981$color[i]==0$\n### \u6c42\u76f8\u53cd\u989c\u8272\n\u6c42\u76f8\u53cd\u989c\u8272\u65b9\u6cd5\uff1a$color[i]$%$2+1$\uff08$1$\u76f4\u63a5\u53d8$2$\uff0c$2$\u76f4\u63a5\u53d8$1$\uff09\u3002\n## \u4ee3\u7801\n\u76f8\u4fe1\u6ca1\u6709\u591a\u5c11\u4eba\u559c\u6b22\u4e0a\u9762\u7684\u4e00\u901a\u5206\u6790\u5427\uff0c\u90a3\u4e48\uff0c\u4f60\u4eec\u559c\u6b22\u7684\u4ee3\u7801\u6765\u4e86\u2014\u2014\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=200010,MAXM=1000010;//\u6ce8\u610f\u8fb9\u6570\u8981\u4e582\nint h[MAXN],color[MAXN],tot=0;//h\u4e3a\u90bb\u63a5\u8868\u4e2d\u7684head\uff0ctot\u4e3a\u603b\u8fb9\u6570\nbool vis[MAXN];//\u8bb0\u5f55\u662f\u5426\u6709\u8fde\u63a5\nstruct Edge{//\u8fb9\u7684\u7ed3\u6784\u4f53\n\tint v;\n\tint next;//next\u8bb0\u5f55\u8fd9\u6761\u8fb9\u5728\u90bb\u63a5\u8868\u4e2d\u6307\u5411\u540c\u7aef\u70b9\u7684\u53e6\u4e00\u6761\u8fb9\n}e[MAXM];\nvoid addEdge(int u,int v){//\u5efa\u8fb9\n\ttot++;\n\te[tot].v=v;\n\te[tot].next=h[u],h[u]=tot;\n}\nvoid dfs(int u){//\u6df1\u641c\uff0cu\u4e3a\u539f\u8282\u70b9\uff0c\u4fdd\u8bc1\u5df2\u67d3\u8272\n\tfor(int k=h[u];k;k=e[k].next){//\u90bb\u63a5\u8868\u67e5\u627e\n\t\tint v=e[k].v;\n\t\tcolor[v]=color[u]%2+1;//\u516c\u5f0f\n\t}\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m--){\n\t\tint uu,vv;\n\t\tscanf(\"%d%d\",&uu,&vv);\n\t\tvis[uu]=1,vis[vv]=1;//\u8bb0\u5f55\n\t\taddEdge(uu,vv);addEdge(vv,uu);//\u5efa\u8fb9\n\t}\n\tfor(int i=1;i<=n;i++)//\u5224\u65ad\u662f\u5426\u4e0d\u884c\n\t    if(!vis[i]){\n\t    \tprintf(\"NIE\\n\");//\u8f93\u51fa\n\t    \treturn 0;//\u8fd4\u56de\n\t\t}\n\tprintf(\"TAK\\n\");//\u76f4\u63a5\u8f93\u51fa\n\tfor(int i=1;i<=n;i++)//\u6bcf\u4e2a\u70b9\u90fd\u641c\u4e00\u904d\n\t\tif(!color[i]){//\u6ca1\u641c\u8fc7\n\t\t\tcolor[i]=1;//\u5148\u8bbe\u4e3a\u767d\u70b9\n\t\t\tdfs(i);//\u5f00\u641c\n\t\t}\n\tfor(int i=1;i<=n;i++){//\u8f93\u51fa\n\t\tif(color[i]==1) printf(\"K\\n\");\n\t\telse printf(\"S\\n\");\n\t}\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```\n\u5728CSP\u524d\u5199\u4e00\u7bc7\u9898\u89e3\u4e5f\u4e0d\u5bb9\u6613\uff0c\u522b\u5fd8\u4e86\u70b9\u4e2a\u8d5e\uff01",
        "postTime": 1573569522,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "> ### \u8fd9\u662f\u4e00\u4e2a\u975e\u9ed1\u5373\u767d\u7684\u4e16\u754c\u3002\n\n\u60f3\u5fc5\u5404\u4f4d\u90fd\u770b\u8fc7\u9898\u76ee\u4e86\uff0c\u9996\u5148\u7ffb\u8bd1\u4e0b\u9898\u610f\uff1a\n\n> ### \u7ed9\u4e00\u5e45\u65e0\u5411\u56fe\uff0c\u4f60\u53ef\u4ee5\u5bf9\u5176\u6bcf\u4e2a\u70b9\u67d3\u8272\uff0c\u8981\u6c42\u767d\u9ed1\u5fc5\u987b\u6328\u7740\uff0c\u7070\u8272\u5fc5\u987b\u548c\u9ed1\u767d\u6328\u7740\uff0c\u95ee\u80fd\u5426\u67d3\u8272\u4ee5\u53ca\u67d3\u8272\u65b9\u6848\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5230\uff0c\u7070\u8272\u70b9\u5fc5\u7136\u53ef\u4ee5\u88ab\u9ed1\u767d\u4ea4\u66ff\u7684\u6a21\u5f0f\u4ee3\u66ff\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u9ed1\u767d\u67d3\u8272\u5c31\u597d\uff0c\u7070\u8272\u53ef\u4ee5\u8bf7\u51fa\u53bb\u4e86\u3002\u600e\u4e48\u67d3\u8272\uff1f\u8981\u628a\u6bcf\u4e2a\u70b9\u90fd\u8981\u67d3\u5230\uff1f\u8fd8\u8981\u4ea4\u66ff\u67d3\uff1f\n\n\u6211\u4eec\u7acb\u5373\u60f3\u5230\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u8d8a\u5c11\u8d8a\u597d\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u5176\u5468\u56f4\u70b9\u7684\u5f71\u54cd\u6700\u5c0f\u3002\u5165\u5ea6\u6700\u5c0f\uff1f\u5982\u679c\u56fe\u8fde\u901a\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u964d\u4e3a1\u2014\u2014$\\color{red}\\sf\\large\\text{\u751f\u6210\u6811}$\u6070\u597d\u6ee1\u8db3\u8fd9\u4e00\u6027\u8d28\u3002\n\n`\u56fe\u4e0d\u8fde\u901a\u5462\uff1f`\u9898\u4e0a\u53ef\u662f\u8bf4\u4e86\uff0c\u5982\u679c\u4e0d\u80fd\u6210\u529f\u67d3\u8272\uff0c\u90a3\u4e48\u8f93\u51fa`NIE`\u9000\u51fa\u5c31\u597d\uff0c\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u8054\u901a\u7684\u56fe\u4e00\u5b9a\u662f\u53ef\u4ee5\u5b8c\u6210\u67d3\u8272\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5927\u80c6\u8f93\u51fa`TAK`\n\n\u90a3\u4e48\uff01\u6211\u4eec\u518d\u56de\u5934\u770b\u4e00\u773c\u9898\u76ee\uff0c\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n> ### \u7ed9\u4e00\u5e45\u65e0\u5411\u56fe\uff0c\u627e\u51fa\u91cc\u9762\u7684\u751f\u6210\u6811\uff0c\u5bf9\u5176\u4e0a\u7684\u6bcf\u4e2a\u70b9\u9ed1\u767d\u4ea4\u66ff\u67d3\u8272\uff0c\u95ee\u56fe\u662f\u5426\u8fde\u901a\uff0c\u82e5\u8fde\u901a\u5219\u8f93\u51fa\u6bcf\u4e2a\u70b9\u7684\u989c\u8272(\u6709SPJ)\n\n\u662f\u5426\u5f88\u660e\u4e86\u4e86\uff1f\u732e\u4e0a\u4e00\u4efd\u4ee3\u7801\uff08\u9644\u7b80\u6ce8\uff09\uff0c\u6b64\u5904\u6211\u7528\u7684\u662f\u5e38\u89c4\u5b58\u56fe+dfs\u67d3\u8272\u3002\n\n```cpp\n//\u5728\u8fd9\u4e2a\u56fe\u4e2d\u7684\u751f\u6210\u6811\u4e0a\u67d3\u8272\u5c31\u597d\uff0c\u767d\u9ed1\u4ea4\u66ff\u67d3\n#include <bits/stdc++.h>\n#define ri register int\n#define ll long long\nusing namespace std;\nint read()\n{\n\tint num=0;\n\tint flg=1;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tflg=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tnum=(num<<1)+(num<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn num*flg;\n}\nconst int maxn=1e6+7;\nstruct edge\n{\n\tint to;\n\tint nex;\n} e[maxn];\n\nint cnt=0;\nint head[maxn];\nvoid add(int u,int v)\n{\n\te[++cnt].to=v;\n\te[cnt].nex=head[u];\n\thead[u]=cnt;\n}\n\nbool col[maxn];\n//\u975e\u9ed1\u5373\u767d\nbool vis[maxn];\n//\u8fd9\u4e2avis[]\u8981\u7528\u4e24\u6b21\uff1a\n//\u7b2c\u4e00\u6b21\uff1a\u7528\u6765\u6392\u67e5\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u5b64\u7acb\u70b9\n//\u7b2c\u4e8c\u6b21\uff1a\u7528\u6765\u8bb0\u5f55\u8be5\u70b9\u662f\u5426\u4e0a\u8272\nvoid dfs(int nd,bool cur)\n//\u5f53\u524d\u7684\u70b9\uff0c\u5f53\u524d\u7684\u989c\u8272(\u9ed1/\u767d)\n//\u7070\u8272\u592a\u5c16\u9178\u4e86\uff0c\u4e0d\u5fc5\u53c2\u52a0\u67d3\u8272\u3002\n{\n\tvis[nd]=true;\n\tcol[nd]=cur;\n\tfor(ri i=head[nd]; i; i=e[i].nex)\n\t{\n\t\tint to=e[i].to;\n\t\tif(!vis[to])\n\t\t{\n\t\t\tdfs(to,!cur);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint n=read();\n\tint m=read();\n\tfor(ri i=1; i<=m; i++)\n\t{\n\t\tint u=read();\n\t\tint v=read();\n\t\tvis[u]=vis[v]=true;//\u4e0d\u662f\u5b64\u7acb\u70b9\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(ri i=1; i<=n; i++)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\t//\u663e\u7136\uff0c\u6709\u4e00\u4e2a\u70b9\u5b64\u7acb\uff0c\u4e0d\u53ef\u80fd\u5168\u90e8\u8fde\u4e0a\u3002\n\t\t\treturn 0&(int)printf(\"NIE\");\n\t\t}\n\t}\n\t//\u80fd\u5230\u8fd9\u91cc\uff0c\u5c31\u8bf4\u660e\u4e00\u5b9a\u53ef\u4ee5\u8fde\u901a.\n\tputs(\"TAK\");\n\tfill(vis+1,vis+n+1,0);\n\t//\u6e05\u7a7a\uff0c\u51c6\u5907\u8bb0\u5f55\u662f\u5426\u4e0a\u8272\n\tfor(ri i=1; i<=n; i++)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tdfs(i,0);\n\t\t}\n\t}\n\tfor(ri i=1; i<=n; i++)\n\t{\n\t\tif(col[i]==0)\n\t\t{\n\t\t\tputs(\"K\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tputs(\"S\");\n\t\t}\n\t}\n}\n```\n\n\u56de\u987e\u4e00\u4e0b\uff1a\u8fd9\u9053\u9898\u6211\u4eec\u9996\u5148\u6392\u9664\u6389\u4e86`\u4e0d\u53ef\u80fd\u5b58\u5728\u7684\u60c5\u51b5`\uff0c\u6216\u8005\u8bf4\u5b58\u5728\u4e86\u4ea6\u53ef\u4ee5\u88ab\u4ee3\u66ff\u7684\u60c5\u51b5\uff08\u56e0\u4e3a`SPJ`\uff09\uff1b\u968f\u540e\u6211\u4eec\u627e\u5230\u4e86`\u6811\u4e0a\u67d3\u8272`\u662f\u6700\u4f18\u7684\u60c5\u51b5\uff0c\u89e3\u51b3\u95ee\u9898\u3002",
        "postTime": 1561562641,
        "uid": 126484,
        "name": "first_fan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "\u867d\u7136\u9ed1\u767d\u7070\u70b9\u7684\u8bbe\u5b9a\u770b\u8d77\u6765\u5f88\u9ad8\u7aef\uff0c\u4f46\u6839\u636e\u63cf\u8ff0\uff0c\u9ed1\u70b9\u65c1\u8fb9\u53ea\u9700\u8981\u6709\u4e00\u4e2a\u767d\u70b9\uff0c\u767d\u70b9\u8fb9\u53ea\u9700\u8981\u6709\u4e00\u4e2a\u9ed1\u70b9\uff0c\u4e8e\u662f\u76f4\u63a5\u4ea4\u66ff\u67d3\u8272\u5c31\u884c\u4e86~~\uff08\u7070\u70b9\uff1a\uff1f\uff1f\uff1f\uff09~~\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u8fb9\u4e0a\u90fd\u81f3\u5c11\u5f97\u6709\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u5728\u8fde\u8fb9\u7684\u65f6\u5019\u6253\u4e2a\u6807\u8bb0\u5c31\u80fd\u5224\u65ad\u662f\u5426\u9700\u8981\u8f93\u51faNIE\u4e86\n\n\u5b9e\u73b0\u65b9\u9762\u76f4\u63a5bfs\u8dd1\u4e00\u904d\u5c31\u884c\u4e86\n\n\u7a0b\u5e8f\u5982\u4e0b\n\n~~\u6bd4\u8f83\u61d2\u7528\u7684vector\u5b58\u8fb9\u6240\u4ee5\u5e38\u6570\u6bd4\u8f83\u5927\uff0c\u4e0d\u8fc7\u53cd\u6b63\u8fc7\u4e86\u5c31\u884c\u4e86~~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\nqueue<int> q;\nvector<int> e[200010];\nint n,m,a,b,c[200010]={0},mark[200010]={0},ok=1;\n\nvoid bfs(int x){\n    mark[x]=1;\n    for(vector<int>::iterator it=e[x].begin();it!=e[x].end();it++){\n        int j=*it;\n        c[j]=c[x]^1; q.push(j); mark[j]=1;\n    }\n    while(!q.empty()){\n        int i=q.front(); q.pop();\n        for(vector<int>::iterator it=e[i].begin();it!=e[i].end();it++){\n            int j=*it;\n            if(!mark[j]) {c[j]=c[i]^1; q.push(j); mark[j]=1;}\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d %d\",&a,&b);\n        if(a==b) continue;\n        e[a].push_back(b); e[b].push_back(a);\n        mark[a]=mark[b]=1;\n    }\n    for(int i=1;i<=n && ok;i++) if(!mark[i]) ok=0;\n    if(!ok) printf(\"NIE\");\n    else{\n        printf(\"TAK\\n\");\n        memset(mark,0,sizeof(mark));\n        for(int i=1;i<=n;i++) if(!mark[i]) bfs(i);\n        for(int i=1;i<=n;i++)\n            if(c[i]) printf(\"K\\n\");\n            else printf(\"S\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1536236552,
        "uid": 100037,
        "name": "kkxhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "\u4f60\u53ea\u9700\u8981\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u6c42\u4efb\u610f\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u56e0\u4e3a\u751f\u6210\u6811\u662f\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u751f\u6210\u6811\u4e0a\u8fdb\u884c\u4e8c\u5206\u56fe\u67d3\u8272\uff0c\u663e\u7136\u8fd9\u4e00\u5b9a\u662f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u3002\n\n\u987a\u4fbf\u8bf4\u4e00\u53e5\u8fd9\u4e2a\u751f\u6210\u6811\u53ef\u4ee5\u76f4\u63a5\u62ff\u5e76\u67e5\u96c6\u8dd1\u51fa\u6765\u2026\u2026\u5927\u5bb6\u6709\u5174\u8da3\u53ef\u4ee5\u53bb\u505a\u4e00\u4e0b\u53e6\u4e00\u4e2aPOI\u6c34\u9898P3465\uff0c\u8ddf\u8fd9\u4e2a\u5dee\u4e0d\u591a\n\n\u5982\u679c\u4e0d\u80fd\u6ee1\u8db3\u6761\u4ef6\u600e\u4e48\u6837\uff1f\u5176\u5b9e\u5c31\u662f\u5b58\u5728\u4e00\u4e2a\u7ed9\u8c01\u90fd\u4e0d\u8fde\u8fb9\u7684\u5b64\u7acb\u7684\u70b9\u5c31\u662fNIE\u4e86\u2026\u2026\n\n\u8fd8\u6709\u6811\u4e0a\u7684\u9ed1\u767d\u67d3\u8272\u5f97\u62ffbfs\u8dd1\u51fa\u6765\u2026\u2026\u4e0d\u7136\u4f1a\u7206\u6808\u2026\u2026\u70b9\u633a\u591a\u7684\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar buf[100000000];int ptr=0;\ninline char get_char(){\n\tptr++;return(buf[ptr-1]);\n}\n#define getchar get_char\ninline int get(){\n\tint n;char c;while((c=getchar())||1)if(c>='0'&&c<='9')break;\n\tn=c-'0';while((c=getchar())||1){\n\t\tif(c>='0'&&c<='9')n=n*10+c-'0';\n\t\telse return(n);\n\t}\n}\nunsigned char col[200001];//\u67d3\u8272\nint ints[200001];//\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\nint find(int n){\n\tif(ints[n]==n)return(n);\n\treturn(ints[n]=find(ints[n]));\n}\nunsigned char bv[500001];//\u8fd9\u6761\u8fb9\u662f\u4e0d\u662f\u6811\u8fb9\ntypedef struct _b{\n\tint dest;int next;int num;\n}bian;bian memchi[1100001];int gn=1;int heads[200001];\nunsigned char bj[200001]; //\u70b9\u662f\u5426\u8fde\u8fb9\ninline void add(int s,int t,int num){memchi[gn].dest=t;\n\tmemchi[gn].num=num;memchi[gn].next=heads[s];heads[s]=gn;gn++;\n}\nint que[10000000];\nchar cjr[3]={'A','K','S'};\nint opp[3]={0,2,1};\ninline void bfs(int s){//bfs\u8dd1\u9ed1\u767d\u67d3\u8272\n\tregister int head=0,tail=1;que[0]=s;\n\tdo{\n\t\tint me=que[head];head++;\n\t\tfor(register int i=heads[me];i;i=memchi[i].next){\n\t\t\tif(!bv[memchi[i].num])continue;\n\t\t\tif(col[memchi[i].dest])continue;\n\t\t\tcol[memchi[i].dest]=opp[col[me]];\n\t\t\tque[tail]=memchi[i].dest;tail++;\n\t\t}\u54c8\u54c8\u54c8\u60a8\u522b\u60f3\u6284\u4ee3\u7801\n\t}while(head<tail);\n}\nint main(){\n\tfread(buf,1,100000000,stdin);\n\tint n=get(),m=get();\n\tfor(register int i=1;i<=n;i++)ints[i]=i;\n\tfor(register int i=1;i<=m;i++){\n\t\tint s=get(),t=get();add(s,t,i);add(t,s,i);\n\t\tint sa=find(s),sb=find(t);bj[s]=1;bj[t]=1;\n\t\tif(sa!=sb){\n\t\t\tints[sa]=sb;bv[i]=1;\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tif(!bj[i]){\n\t\t\tprintf(\"NIE\\n\");return(0);//\u6709\u5b64\u7acb\u70b9\u5219NIE\n\t\t}\n\t\tif(ints[i]==i){\n\t\t\tcol[i]=1;bfs(i);//\u9ed1\u767d\u67d3\u8272\n\t\t}\n\t}\n\tprintf(\"TAK\\n\");\n\tfor(register int i=1;i<=n;i++){\n\t\tputchar(cjr[col[i]]);putchar('\\n');\n\t}\n\treturn(0);\n}\n```",
        "postTime": 1527339832,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "### 1 \u601d\u8def\n\n##### \u5927\u4f53\u601d\u8def\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u679a\u4e3e\u89e3\u51b3\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7070\u8272\u70b9\u7684\u8981\u6c42\u592a\u9ad8\u4e86\uff0c\u90a3\u5c31\u4e0d\u6d82\u5b83\u4e86\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u4ec5\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6574\u5f20\u56fe\u4e0d\u53ef\u80fd\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u5426\u5219\uff0c\u5fc5\u6709\u4e00\u79cd\u6ee1\u8db3\u8981\u6c42\u7684\u70b9\u3002\n\n\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u8fd8\u6ca1\u88ab\u6d82\u8272\uff0c\u5c31\u628a\u5b83\u6d82\u6210\u767d\u8272\uff0c\u628a\u4e0e\u4e4b\u76f8\u90bb\u7684\u6240\u6709\u7684\u70b9\uff08\u65e0\u8bba\u5b83\u662f\u5426\u88ab\u6d82\u8272\uff09\uff0c\u5c06\u5176\u6d82\u6210\u9ed1\u8272\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u505a\u540e\uff0c\u4e00\u5b9a\u6ee1\u8db3\u8981\u6c42\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n##### \u601d\u8def\u8bc1\u660e\n\n\u5f88\u660e\u663e\uff0c\u5982\u679c\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9\u6ca1\u6d82\u8272\uff0c\u5c06\u5176\u6d82\u6210\u767d\u8272\uff0c\u53c8\u5c06\u6240\u6709\u4e0e\u4e4b\u76f8\u90bb\u7684\u70b9\u6d82\u6210\u9ed1\u8272\u540e\uff0c\u8fd9\u4e9b\u70b9\u5fc5\u5b9a\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u8003\u8651\u4e00\u4e0b\u4e0e\u4e4b\u76f8\u8fde\u7684\u70b9\u7684\u539f\u59cb\u989c\u8272\u3002\n\n\u5982\u679c\u539f\u6765\u6ca1\u6d82\u8272\uff0c\u5c31\u4e0d\u9700\u8981\u5728\u610f\u5b83\u6240\u76f8\u8fde\u7684\u70b9\u3002\u90a3\u4e9b\u70b9\u90fd\u6ee1\u8db3\u8981\u6c42\u4e86\u3002\n\n\u5982\u679c\u662f\u9ed1\u8272\uff0c\u90a3\u66f4\u4e0d\u7528\u7ba1\u4e86\uff0c\u6d82\u4e86\u7b49\u4e8e\u6ca1\u6d82\u3002\n\n\u800c\u4e14\uff0c\u5b83\u4e5f\u4e0d\u53ef\u80fd\u662f\u767d\u8272\uff0c\u4e0d\u7136\u201c\u6ca1\u6d82\u8272\u7684\u70b9\u201d\u65e9\u6d82\u9ed1\u8272\u4e86\u3002\n\n\u7efc\u4e0a\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\n\n### 2 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define max_n 200000\n#define max_m 1000000\nint n;\nint m;\nbool ap[max_n+2];\nstruct E{\n\tint v,nx;\n}e[max_m+2];\nint ei=0;\nint fir[max_n+2];\nint col[max_n+2];\ninline void addedge(int u,int v){\n\te[++ei]=(E){v,fir[u]}; fir[u]=ei;\n}\nvoid dfs(int u){\n\tfor(int i=fir[u],v;i;i=e[i].nx){\n\t\tv=e[i].v;\n\t\tcol[v]=3-col[u];\n\t}\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"P3496_1.in\",\"r\",stdin);\n\tfreopen(\"P3496_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(ap,0,sizeof(ap));\n\tmemset(fir,0,sizeof(fir));\n\tfor(int i=1,u,v;i<=m;++i){\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tap[u]=true;\n\t\tap[v]=true;\n\t\taddedge(u,v);\n\t\taddedge(v,u);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(!ap[i]){\n\t\t\tputs(\"NIE\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tmemset(col,0,sizeof(col));\n\tfor(int i=1;i<=n;++i){\n\t\tif(!col[i]){\n\t\t\tcol[i]=1;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tputs(\"TAK\");\n\tfor(int i=1;i<=n;++i){\n\t\tif(col[i]==1)puts(\"K\");\n\t\telse puts(\"S\");\n\t}\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/58887826)\n\nBy **dengziyue**",
        "postTime": 1633144530,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "P3496\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u662f\u5bf9\u4e00\u4e9b\u7ed3\u8bba\u7684\u8bf4\u660e\uff08\uff1f\n\n# \u5206\u6790\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6709\u4e09\u79cd\u989c\u8272\u2014\u2014\u8fd9\u975e\u5e38\u8ba8\u538c\uff0c\u8003\u8651\u5230\u8fd9\u91cc\u9762\u6700\u590d\u6742\u7684\u662f\u7070\u8272\uff0c\u6211\u4eec\u5c31\u5148\u6765\u8ba8\u8bba\u5b83\uff0c\u5f53\u6709\u4e00\u4e2a\u7070\u70b9\u65f6\u5927\u6982\u662f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i6btvq4o.png)\n\n\u8fd9\u4e2a\u6d82\u8272\u65b9\u6848\u7684\u6210\u7acb\u5176\u5b9e\u9690\u542b\u4e86\u4e00\u4e2a\u6761\u4ef6\uff1a\u56fe\u4e0a\u7684\u9ed1\u70b9\u548c\u767d\u70b9\u4e00\u5b9a\u548c\u53e6\u5916\u4e00\u4e2a\u70b9\u8fde\u63a5**\u5e76\u4e14\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\u6b63\u597d\u548c\u5176\u76f8\u53cd**\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u9ed1\u70b9\u4e00\u5b9a\u8fde\u4e86\u4e00\u4e2a\u767d\u70b9\uff0c\u767d\u70b9\u4e00\u5b9a\u8fde\u4e86\u4e00\u4e2a\u9ed1\u70b9\uff09\uff0c\u65e2\u7136\u662f\u8fd9\u6837\uff0c\u90a3\u5176\u5b9e\u7070\u70b9\u7684\u5b58\u5728\u4e0e\u5426\u6ca1\u6709\u610f\u4e49\uff0c\u6362\u6210\u4efb\u610f\u989c\u8272\u90fd\u662f\u6210\u7acb\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a**\u5047\u5982\u5b58\u5728\u5408\u6cd5\u7684\u65b9\u6848\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u4e0d\u4f7f\u7528\u7070\u8272**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u53bb\u8003\u8651\u9ed1\u8272\u548c\u767d\u8272\u5c31\u884c\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u8054\u901a\u5feb\u8ba8\u8bba\uff0c\u8bbe\u4e00\u4e2a\u8054\u901a\u5757\u6709 $n_i$ \u4e2a\u8282\u70b9\u3002\n\n\u5f53 $n_i =1$ \u7684\u65f6\u5019\uff0c\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u6ca1\u6709\u5408\u6cd5\u65b9\u6848\u7684\u3002\n\n\u5f53 $n_i \\neq 1$ \u7684\u65f6\u5019\uff0c\u6bd4\u8f83\u6709\u8da3\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u8054\u901a\u5757\u7684\u8fb9\u6570**\u81f3\u5c11\u4e3a**  $n_i - 1$\uff0c\u4e5f\u5c31\u662f\u6811\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u6765\u8ba8\u8bba\u6811\uff1a\n\n- \u6839\u8282\u70b9\u4e0e\u53f6\u5b50\u8282\u70b9\u7684\u5ea6\u4e3a $1$\u3002\n- \u5176\u5b83\u8282\u70b9\u5ea6\u5747\u5927\u4e8e $1$\u3002\n\n\u90a3\u4e48\u663e\u7136\uff0c\u8fd9\u68f5\u6811\u6709\u5408\u6cd5\u67d3\u8272\u65b9\u6848\uff0c\u53ea\u9700\u8981\u9ed1\u767d\u4ea4\u66ff\u7684\u67d3\u3002\n\n\u90a3\u4e48\u65e0\u8bba\u8fb9\u6570\u600e\u4e48\u589e\u52a0\uff0c\u8fd9\u4e2a\u65b9\u6848\u90fd\u6210\u7acb\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u53ea\u8981 $n_i \\neq 1$\uff0c\u5219\u4e00\u5b9a\u6709\u5408\u6cd5\u65b9\u6848\u3002**\u4e14\u9ed1\u767d\u4ea4\u66ff\u7684\u67d3\u4e00\u5b9a\u662f\u5408\u6cd5\u65b9\u6848**\u3002\n\n\u8fd9\u9053\u9898\u5c31\u601d\u8003\u5b8c\u4e86\uff0c\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n# \u4ee3\u7801\n\u5199\u7684\u5f88\u4e11\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n```cpp\n#include<bits/stdc++.h>\n#define maxn 2000000\nusing namespace std;\nint head[10000005],cnt,n,color[10000005];\nstruct Edge{\n\tint u,v,next;\n}e[50000005];\nbool flag=0;\nstruct Node{\n\tint w,now;\n\tinline bool operator <(const Node &x)const\n\t{\n\t\treturn w>x.w;\n\t} \n}; \ninline void add(int u,int v)\n{\n    e[++cnt].u=u;\n    e[cnt].v=v;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n}  \nbool vis[maxn];\nlong long d[maxn];\nvoid BFS_color(int num,int Color){\t\n\tcolor[num]=Color;\n\tqueue<int>q;\n\tq.push(num);\n\tvis[num]=1;\n\twhile(q.size()){\n\t\tint top=q.front();\n\t\tq.pop(); \n\t\tvis[top]=1;\n\t\tfor(int i=head[top];i;i=e[i].next){\n\t\t\tint tv=e[i].v;\n\t\t\tif(color[tv]==0){\n\t\t\t\tcolor[tv]=3-color[top];\n\t\t\t\tif(!vis[tv])\n\t\t\t\tq.push(tv);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tlong long m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\td[v]++;\n\t\td[u]++;\n\t\tadd(v,u);\n\t\tadd(u,v);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==0){\n\t\t\tif(d[i]==0){\n\t\t\t\tputs(\"NIE\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tBFS_color(i,1);\n\t\t}\n\t}\n\tputs(\"TAK\");\n\tfor(int i=1;i<=n;i++){\n\t\tif(color[i]==1)\n\t\tputs(\"K\");\n\t\telse\n\t\tputs(\"S\");\n\t}\n    return 0;\n}\n```",
        "postTime": 1602048784,
        "uid": 282751,
        "name": "cryozwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "## \u4e00\u9053\u4f18\u96c5\u7684bfs\u9898 \n\n\u9898\u76ee\u94fe\u63a5\uff1a[P3496](https://www.luogu.com.cn/problem/P3496)\n\n\u5927\u6982\u8bfb\u4e00\u4e0b\u9898\uff0c\u9ed1\u5757\u65c1\u8981\u6709\u767d\u5757\uff0c\u767d\u5757\u65c1\u8981\u6709\u9ed1\u5757\uff0c\u800c\u7070\u5757\u65c1\u65e2\u8981\u6709\u767d\u53c8\u8981\u6709\u9ed1\u3002\u90a3\u4e48\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53\u6ee1\u8db3\u7070\u5757\u7684\u6761\u4ef6\u65f6\uff0c\u6b64\u65f6\u5fc5\u7136\u53ef\u4ee5\u4f7f\u7528\u9ed1\u6216\u767d\u6765\u586b\u5145\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53ea\u8003\u8651\u9ed1\u767d\u800c\u820d\u6389\u7070\u5757\u3002\n\n---\n\n\u65e2\u7136\u767d\u5757\u65c1\u6709\u9ed1\uff0c\u9ed1\u5757\u65c1\u6709\u767d\uff0c\u90a3\u4e48\u53ea\u8981\u56fe\u4e2d\u5b58\u5728\u5b64\u7acb\u70b9\uff0c\u65e0\u89e3\uff1b\u53cd\u4e4b\u5219\u6709\u89e3\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u5b58\u8fb9\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u662f\u5426\u5230\u8fbe\u6765\u5224\u65ad\u662f\u5426\u6709\u89e3\u3002\n\nvector\u5b58\u8fb9\uff1a\n```cpp\nbool done[200005];\t//\u8fd9\u4e00\u6b65\u8be5\u6570\u7ec4\u7528\u4e8e\u662f\u5426\u5b58\u5230\u8be5\u70b9\nvector<int> a[200005];\t//\u5b58\u50a8\u8fb9\u7684vector \nvector<int>::iterator it;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= m;i ++){\t\t//\u5b58\u8fb9\u8fc7\u7a0b \n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x!=y){\n\t\t\ta[x].push_back(y);\n\t\t\ta[y].push_back(x);\n\t\t\tdone[x]=done[y]=1;\t//\u8bb0\u5f55\u5b58\u5230\u4e86\u8fd9\u4e2a\u70b9\n\t\t}\t\n\t}\n\t\n\tbool sure = 1;\n\tfor(int i=1; i<=n && sure ;i++)\n\t\tif(!done[i]) sure = 0;  //\u67e5\u8be2\u662f\u5426\u6709\u89e3\n\tif (sure) cout << \"TAK\\n\"; \t//\u4e0d\u5b58\u5728\u5b64\u7acb\u70b9\n\telse {cout << \"NIE\";return 0;}\t\t// \u5b58\u5728\u5b64\u7acb\u70b9 \u7ed3\u675f\u7a0b\u5e8f\n```\n\n---\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u5b8c\u6210\u4e86\u5b58\u8fb9\u548c\u662f\u5426\u6709\u89e3\u7684\u67e5\u8be2\uff0c\u4e0b\u6765\u8be5\u67d3\u8272\u4e86\u3002\u8981\u6c42\u662f\u9ed1\u7684\u65c1\u8fb9\u8981\u6709\u767d\uff0c\u767d\u7684\u65c1\u8fb9\u8981\u6709\u9ed1\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u70b9\u4e0e\u4ed6\u76f8\u90bb\u7684\u4e14\u6ca1\u88ab\u641c\u5230\u7684\u70b9\u67d3\u6210\u4e0e\u5b83\u989c\u8272\u4e0d\u4e00\u6837\u7684\u5373\u53ef\u3002\n\nbfs\u5b9e\u73b0\uff1a\n```cpp\nint c[200005]; //\u8bb0\u5f55\u989c\u8272\nvoid bfs(int); //\u58f0\u660ebfs\u51fd\u6570 \nqueue<int> b; //bfs\u961f\u5217\t\nvoid bfs(int k){\n    done[k]=1; \n    b.push(k);\n    while(!b.empty()){\n        int i=b.front(); b.pop();\n        for(it=a[i].begin();it!=a[i].end();it++){\n            int x=*it;\n            if(!done[x]) {\n\t\t\t     c[x]=c[i]^1;  //\u4f7f\u7528\u5f02\u6216\u6765\u67d3\u4e0d\u540c\u989c\u8272\n\t\t\t     b.push(x); \n\t\t\t     done[x]=1;\n\t\t\t  }\n         }\n     }    \n}\n```    \t\n\u4f46\u662f\u7531\u4e8e\u56fe\u53ef\u80fd\u4e0d\u5b8c\u5168\u8054\u901a\uff0c\u6240\u4ee5\u4e0d\u80fd\u53ea\u8c03\u7528\u4e00\u6b21bfs\u51fd\u6570\uff0c\u8981\u6bcf\u4e00\u4e2a\u6ca1\u6709\u641c\u5230\u7684\u70b9\u90fd\u8fdb\u884c\u4e00\u6b21bfs\u5373\u53ef\u3002\n\n---\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\nint n,m;\t//n,m\u5982\u9898\nbool done[200005];\t//\u662f\u5426\u641c\u5230\u8fc7 \nint c[200005];\nvoid bfs(int); //\u58f0\u660ebfs\u51fd\u6570 \nvector<int> a[200005];\t//\u5b58\u50a8\u8fb9\u7684vector \nvector<int>::iterator it;\nqueue<int> b;\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= m;i ++){\t\t//\u5b58\u8fb9\u8fc7\u7a0b \n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(x!=y){\n\t\t\ta[x].push_back(y);\n\t\t\ta[y].push_back(x);\n\t\t\tdone[x]=done[y]=1;\t\n\t\t}\t\n\t}\n\t\n\tbool sure = 1;\n\tfor(int i=1; i<=n && sure ;i++)\n\t\tif(!done[i]) sure = 0;\n\tif (sure) cout << \"TAK\\n\"; \t//\u4e0d\u5b58\u5728\u5b64\u7acb\u70b9\n\telse {cout << \"NIE\";return 0;}\t\t// \u5b58\u5728\u5b64\u7acb\u70b9 \u7ed3\u675f\u7a0b\u5e8f\n\t//\u5b58\u5b8c\u8fb9\uff0c\u8fdb\u884cbfs\n\tmemset(done,0,sizeof(done));\n\tfor(int i=1;i<=n; i++) \n\t\tif(!done[i]) bfs(i); //\u591a\u6b21\u8c03\u7528bfs\n\tfor(int i=1;i<=n;i++){\n        if(c[i]) printf(\"K\\n\");\n        else printf(\"S\\n\");\n    }\n    return 0;\n}\n\nvoid bfs(int k){\n    done[k]=1;\n    b.push(k);\n    while(!b.empty()){\n        int i=b.front(); b.pop();\n        for(it=a[i].begin();it!=a[i].end();it++){\n            int x=*it;\n            if(!done[x]) {\n\t\t\t     c[x]=c[i]^1; \n\t\t\t     b.push(x); \n\t\t\t     done[x]=1;\n\t\t\t }\n        }\n    }    \n}\n```    \t",
        "postTime": 1594872446,
        "uid": 293527,
        "name": "\u98ce\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "\n### \u4e0d\u96be\u53d1\u73b0\u5982\u679c\u4e24\u4e2a\u70b9\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u4e24\u4e2a\u70b9\u90fd\u4f1a\u6ee1\u8db3\u6761\u4ef6\u3002\n### \uff08\u56e0\u4e3a\u53d1\u73b0\u8fd9\u4e2a\u70b9\u4e0d\u6d82\u8272\u662f\u4e0d\u5212\u7b97\u7684\uff0c\u53ea\u8981\u4e24\u4e2a\u70b9\u6d82\u4e0a\u4e0d\u540c\u7684\u989c\u8272\u5373\u53ef\uff09\n### \u6240\u4ee5\u4efb\u52a1\u53d8\u4e3a\u56fe\u4e2d\u662f\u5426\u6709\u5b64\u7acb\u7684\u70b9,\u968f\u4fbf\u600e\u4e48\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u5199\u4e86~~\uff08\u4e3b\u8981\u662f\u4e0d\u60f3\u590d\u5236\u8fc7\u6765\uff09~~\uff0c\u5927\u5bb6\u53ef\u4ee5\u597d\u597d\u60f3\u4e00\u4e0b",
        "postTime": 1544885779,
        "uid": 69036,
        "name": "\u8c26\u8c26\u541b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3496 \u3010[POI2010]GIL-Guilds\u3011"
    },
    {
        "content": "\u9996\u5148\u662f\u8b66\u793a\u540e\u4eba\uff0c\u7531\u4e8e\u8fd9\u9053\u9898\u76ee\u592a\u6bd2\u7624\uff0c\u5bfc\u81f4 `vector` \u904d\u5386\u7adf\u7136\u8d85\u5185\u5b58\uff0c\u56e0\u6b64\u6211\u53ea\u80fd\u4f7f\u7528\u6211\u4e0d\u592a\u6536\u6089\u7684\u94fe\u5f0f\u524d\u5411\u661f\u4e86\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u70b9[\u8fd9\u91cc](https://blog.csdn.net/sugarbliss/article/details/86495945?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167939020616800182774115%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167939020616800182774115&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-86495945-null-null.142^v74^control_1,201^v4^add_ask,239^v2^insert_chatgpt&utm_term=%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F&spm=1018.2226.3001.4187)\u3002\n\n\u6839\u636e\u9898\u610f\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u800c\u4e14\u7531\u4e8e\u4e0d\u540c\u989c\u8272\u7684\u70b9\u7684\u4e0d\u540c\u6027\u8d28\u548c\u8981\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u60f3\u6e05\u695a\u5982\u4f55\u6d82\u8272\u3002\u5bf9\u6b64\u6700\u7b80\u5355\u7684\u601d\u8def\u662f\u4e0d\u6d82\u7070\u8272\u70b9\uff0c\u56e0\u4e3a\u592a\u9ebb\u70e6\u4e86\uff0c\u4e24\u7aef\u5fc5\u987b\u662f\u767d\u8272\u548c\u9ed1\u8272\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5047\u8bbe\u4e00\u4e2a\u6ca1\u6709\u989c\u8272\u7684\u70b9\u7684\u989c\u8272\u4e3a\u767d\u8272\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u5b83\u662f\u5076\u6570\u7684\u70b9\u4e5f\u6d82\u6210\u767d\u8272\uff0c\u90a3\u4e48\u6ca1\u6709\u6d82\u7684\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\uff0c\u76f4\u63a5\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\uff0c\u5f53\u6709\u4efb\u610f\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u4e00\u6761\u8fb9\u8fde\u63a5\uff0c\u90a3\u4e48\u6b64\u60c5\u51b5\u4e00\u5b9a\u65e0\u89e3\uff0c\u8f93\u51fa `NIE` \u5373\u53ef\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define F(i,j,n) for(int i=j;i<=n;i++)\n#define Tr(v,e) for(int v:e)\n#define D double\n#define ps push_back\n#define Test ios::sync_with_stdio(false),cin.tie(nullptr),cout.tie(nullptr)\nusing namespace std;\nconst int N=2e6+10,NN=1e4+10;\nll n,m,k,x,y,u,v,w,cnt=0,ans=0,t=0,l,r,len,T;\nll mini=INT_MAX,maxi=0,Mod;\nstring s1,s2;\nvector<int> tr[N];\nmap<int,int> mp;\nll c[N],head[N];\nstruct Node{\n\tll to,next;\n}edge[N];\nvoid add(ll u,ll v){\n\tcnt++;\n    edge[cnt].to=v;\n    edge[cnt].next=head[u];\n    head[u]=cnt;\n}\nvoid dfs(ll id){//\u94fe\u5f0f\u524d\u5411\u661f\n\tfor(int i=head[id];i;i=edge[i].next){//\u904d\u5386\u8fb9\n\t\tv=edge[i].to;\n\t\tc[v]=c[id]%2+1;//\u8ddd\u79bb\u4e3a\u5076\u6570\u7684\u67d3\u8272\u6210\u767d\u8272\n\t}\n}\nint main(){\n    Test;\n\tcin>>n>>m;\n\tF(i,1,m){\n\t\tcin>>u>>v;\n\t\tadd(u,v);//\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u8fb9\n\t\tadd(v,u)\n;\t\tmp[u]=mp[v]=1;//\u6807\u8bb0\n\t} \n\tF(i,1,n) if(!mp[i]){//\u6709\u70b9\u65e0\u51fa\u73b0\n\t\tcout<<\"NIE\";\n\t\treturn 0;\n\t}\t\n\tcout<<\"TAK\\n\";\n\tF(i,1,n) if(!c[i]) c[i]=1,dfs(i);//\u5047\u8bbe\u4e3a\u767d\u8272\n\tF(i,1,n) if(c[i]==1) cout<<\"K\\n\"; else cout<<\"S\\n\";//\u8f93\u51fa\u767d\u9ed1\u8272\n\t\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1679390817,
        "uid": 654958,
        "name": "Light_az",
        "ccfLevel": 0,
        "title": "P3496\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u5e7f\u641c+\u6df1\u641c\u3002\n\n#### \u5927\u81f4\u601d\u8def\n\n\u6211\u4eec\u53d1\u73b0\u5982\u679c\u53bb\u6d82\u7070\u8272\uff0c\u6574\u4e2a\u601d\u8def\u5c31\u4f1a\u975e\u5e38\u590d\u6742\u3002\n\n\u518d\u4e00\u770b\uff0c\u8bf6\uff0c\u6709SPJ\u3002\n\n\u90a3\u6211\u4eec\u5c31~~\u4e0d\u6d82\u7070\u8272\u5427~~\u3002\n\n\u53ea\u8003\u8651\u6d82**\u767d\u8272\u548c\u9ed1\u8272**\u3002\n\n\u5148\u7528\u6df1\u641c\u5c06\u6bcf\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u653e\u5165\u961f\u5217\u4e2d\u3002\n\n\u518d\u7528\u4e00\u904d\u5e7f\u641c\u6765\u8fdb\u884c\u6d82\u8272\u3002\n\n#### \u5173\u4e8e\u6b63\u786e\u6027\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c\u7528\u4e00\u4e2a\u70b9\u662f\u5355\u72ec\u7684\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e00\u5b9a\u662f\u9519\u8bef\u7684\uff0c\u65e0\u6cd5\u67d3\u8272\u3002\n\n\u90a3\u4e48\u81f3\u4e8e\u5176\u4ed6\u7684\u8054\u901a\u5757\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5b83\u662f\u4e00\u5b9a\u53ef\u4ee5\u9ed1\u767d\u67d3\u8272\u7684\u3002\n\n\u6240\u4ee5\u4ec5\u9700\u8981\u4e00\u4e2a\u8bb0\u5f55\u5ea6\u6570\u7684\u6570\u7ec4\uff0c\u6765\u5224\u65ad\u662f\u5426\u80fd\u6d82\u8272\u3002\n\n#### Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n , m , cnt , v[200010] , v1[200010] , du[200010] , head[200010] , colo[200010];\n\nstruct edge\n{\n    int to , nxt;\n}e[1000010];\n\nint read(){\n    int s = 0 , f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n    {\n        if(ch == '-') f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\n\nvoid add(int x , int y)\n{\n    e[++cnt] = (edge){y , head[x]};\n    head[x] = cnt;\n}\n\nvoid dfs(int now)\n{\n    v[now] = 1;\n    for(int i = head[now];i;i = e[i].nxt) if(v[e[i].to] == 0) dfs(e[i].to);\n    return;\n}\n\nint main()\n{\n    n = read() , m = read();\n    for(int i = 1;i <= m;i++)\n    {\n        int x = read() , y = read();\n        add(x , y) , add(y , x);\n        du[x]++ , du[y]++;\n    }\n    for(int i = 1;i <= n;i++)\n        if(du[i] == 0)\n        {\n            cout << \"NIE\";\n            return 0;\n        }\n    cout << \"TAK\" << endl;\n    queue<int> q;\n    for(int i = 1;i <= n;i++)\n    {\n        if(v[i] == 0) q.push(i) , dfs(i) , colo[i] = 1 , v1[i] = 1;\n    }\n    while(q.empty() == false)\n    {\n        int x = q.front(); q.pop();\n        for(int i = head[x];i;i = e[i].nxt)\n        {\n            int y = e[i].to;\n            if(v1[y]) continue;\n            else\n            {\n                if(colo[x] == 1) colo[y] = 2;\n                else colo[y] = 1;\n                v1[y] = 1;\n                q.push(y);\n            }\n        }\n    }\n    for(int i = 1;i <= n;i++)\n    {\n        if(colo[i] == 1) cout << \"K\" << endl;\n        else cout << \"S\" << endl;\n    }\n    \n    return 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1633683992,
        "uid": 320933,
        "name": "Mfeitveer",
        "ccfLevel": 0,
        "title": "P3496 [POI2010]GIL-Guilds \u9898\u89e3"
    }
]