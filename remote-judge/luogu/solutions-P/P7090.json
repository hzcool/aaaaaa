[
    {
        "content": "# \u4e00\u3001\u9898\u76ee\uff1a\n\n[\u6d1b\u8c37\u539f\u9898](https://www.luogu.com.cn/problem/P7090)\n\n[codeforces\u539f\u9898](https://codeforces.com/gym/100269)\n\n# \u4e8c\u3001\u601d\u8def\uff1a\n\n\u6211\u8ba4\u4e3a\u8fd9\u9053\u9898\u51fa\u7684\u5f88\u597d\uff0c\u4e0d\u4ec5\u8003\u9a8c\u4e86\u9009\u624b\u7684\u6570\u5b66\u7d20\u517b\uff0c\u4e5f\u8003\u9a8c\u4e86\u9009\u624b\u7684\u8ba1\u7b97\u673a\u529f\u5e95\u3002~~\uff08\u53cd\u6b63\u6211\u6ca1\u505a\u51fa\u6765\u3002\uff09~~\n\n\u6211\u4eec\u7a0d\u52a0\u601d\u8003\u5c31\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff08\u4e0d\u8bba\u662f\u6b63\u89c6\u56fe\u8fd8\u662f\u5de6\u89c6\u56fe\uff09\uff0c\u6211\u4eec\u90fd\u5728\u5bf9\u5e94\u7684\u7ad6\u5750\u6807\u5c06\u8fd9\u4e2a\u51e0\u4f55\u4f53\u201c\u62e6\u8170\u65a9\u65ad\u201d\uff0c\u90a3\u4e48\u6700\u7ec8\u4e00\u5b9a\u4f1a\u5f97\u5230\u4e00\u5806\u5c42\uff0c\u6bcf\u5c42\u90fd\u662f\u82e5\u5e72\u4e2a\u201c\u68af\u5f62\u4f53\u201d\u3002\n\n> \u4e0a\u3001\u4e0b\u9762\u5e73\u884c\u4e14\u4e3a\u957f\u65b9\u5f62\uff0c\u56db\u4e2a\u4fa7\u9762\u90fd\u662f\u68af\u5f62\uff0c\u7531\u6b64\u56f4\u6210\u7684\u7acb\u4f53\u56fe\u5f62\u53eb\u68af\u5f62\u4f53\u3002\n\n\u6ce8\u610f\u68af\u5f62\u4f53\u548c\u53f0\u4f53\u662f**\u6709\u533a\u522b\u7684**\u3002\u53f0\u4f53\u8981\u6c42\u4fa7\u68f1\u5fc5\u987b\u4ea4\u4e8e\u4e00\u70b9\uff0c\u4f46\u662f\u68af\u5f62\u4f53\u6ca1\u6709\u8fd9\u4e2a\u8981\u6c42\u3002\u6240\u4ee5\uff0c\u68af\u5f62\u4f53\u5f53\u7136\u4e5f\u5c31\u4e0d\u80fd\u7528\u53f0\u4f53\u4f53\u79ef\u7684\u8ba1\u7b97\u516c\u5f0f\u4e86\u3002\n\n\u90a3\u68af\u5f62\u4f53\u7684\u4f53\u79ef\u600e\u6837\u8ba1\u7b97\u5462\uff1f\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u5206\u5272\u6cd5\uff0c\u53c2\u89c1\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1b\u53e6\u4e00\u79cd\u662f\u5bf9\u68af\u5f62\u4f53\u7684\u9ad8\u79ef\u5206\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zukehg4y.png)\n$$\nV = \\dfrac{H}{3} \\times \\left(AB + ab + \\dfrac{Ab + aB}{2} \\right)\n$$\n\u5176\u4e2d\uff0c$A$ \u548c $B$ \u662f\u68af\u5f62\u4f53\u4e0b\u5e95\u9762\u7684\u957f\u548c\u5bbd\uff0c$a$ \u548c $b$ \u662f\u68af\u5f62\u4f53\u4e0a\u5e95\u9762\u7684\u957f\u548c\u5bbd\u3002$H$ \u662f\u68af\u5f62\u4f53\u7684\u9ad8\u3002\n\n\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u4e00\u5806\u7b49\u9ad8\u68af\u5f62\u4f53\u7684\u4e0a\u5e95\u9762\u548c\u4e0b\u5e95\u9762\u5206\u522b\u80fd\u62fc\u6210\u4e00\u4e2a\u5927\u7684\u77e9\u5f62\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6700\u7ec8\u62fc\u6210\u7684\u4e24\u4e2a\u5927\u77e9\u5f62\u5f53\u505a\u4e00\u4e2a\u65b0\u68af\u5f62\u4f53\u7684\u4e0a\u4e0b\u5e95\u9762\uff0c\u4ece\u800c\u80fd\u7b97\u51fa\u8fd9\u5806\u68af\u5f62\u4f53\u7684\u603b\u4f53\u79ef\u3002\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u7b80\u5355\u4e86\uff01\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u5c42\u7684\u4e0a\u4e0b\u5e95\u9762\u7684\u957f\u548c\u5bbd\u8fdb\u884c\u7d2f\u52a0\u5373\u53ef\u3002\u957f\u548c\u5bbd\u7684\u66f4\u65b0\u53ef\u4ee5\u7528\u659c\u7387\u7684\u5012\u6570\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u5bf9\u4e86\u8fd9\u9053\u9898\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u86cb\u75bc\u7684\u5730\u65b9\uff0c\u5c31\u662f\u7ad6\u5750\u6807\u53ef\u80fd\u4f1a\u76f8\u540c\u3002\u6211\u672c\u6765\u4f7f\u7528\u968f\u673a\u6296\u52a8\u6cd5\u6765\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u4ee5\u5931\u8d25\u544a\u7ec8\uff1b\u53ea\u80fd\u8001\u8001\u5b9e\u5b9e\u7279\u6b8a\u5904\u7406\u3002\u5177\u4f53\u8fc7\u7a0b\u89c1\u4ee3\u7801\u3002\n\n# \u4e09\u3001\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n#define FILEIN(s) freopen(s, \"r\", stdin);\n#define FILEOUT(s) freopen(s, \"w\", stdout)\n#define mem(s, v) memset(s, v, sizeof s)\n\n#define eps 1e-8\n\ninline int read(void) {\n    int x = 0, f = 1; char ch = getchar();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return f * x;\n}\n\nconst int MAXN = 100005;\n\nint tot, n[2];\n\nint changex[2][MAXN], maxx[2];\ndouble delta[2][MAXN];\n\nstruct Point {\n    int x, y;\n}p[2][MAXN];\n\nstruct Node {\n    int t, h, id;\n    inline friend bool operator <(const Node&a, const Node&b) {\n        return a.h > b.h;\n    }\n}height[MAXN << 1];\n\ninline void input(int t) {\n    n[t] = read();\n    for (int i = 1; i <= n[t]; ++ i) {\n        p[t][i].x = read();\n        p[t][i].y = read();\n        maxx[t] = max(maxx[t], p[t][i].y);\n        height[++ tot] = { t, p[t][i].y, i };\n    }\n}\n\ninline void get_changex(int t) { // \u5904\u7406\u7ad6\u5750\u6807\u76f8\u540c\u7684\u60c5\u51b5\u3002\n    for (int i = 2; i <= n[t]; ++ i)\n        if (p[t][i].y == p[t][i - 1].y)\n            changex[t][i] = p[t][i].x - p[t][i - 1].x;\n}\n\ninline void get_delta(int t) {\n    for (int i = 2; i < n[t]; ++ i) {\n        if (p[t][i].y != p[t][i - 1].y) {\n            delta[t][i] += 1.0 * (p[t][i].x - p[t][i - 1].x) / (p[t][i].y - p[t][i - 1].y);\n        }\n        if (p[t][i].y != p[t][i + 1].y) {\n            delta[t][i] += -1.0 * (p[t][i].x - p[t][i + 1].x) / (p[t][i].y - p[t][i + 1].y);\n        }\n    }\n}\n\ninline double get_volume(double a, double b, double A, double B, double H) {\n    return H / 3 * (A * B + a * b + 0.5 * (A * b + B * a));\n}\n\nint main() {\n    input(0);\n    get_changex(0);\n    get_delta(0);\n\n    input(1);\n    get_changex(1);\n    get_delta(1);\n\n    if (maxx[0] != maxx[1]) { puts(\"Invalid plan\"); return 0; }\n\n    sort(height + 1, height + tot + 1);\n\n    double L[2] = {0, 0}, k[2] = {0, 0}, nowh = height[1].h, ans = 0;\n\n    for (int i = 1; i <= tot; ++ i) {\n        if (nowh != height[i].h) {\n            double l[2];\n            l[0] = L[0] + k[0] * (nowh - height[i].h);\n            l[1] = L[1] + k[1] * (nowh - height[i].h);\n\n            ans += get_volume(L[0], L[1], l[0], l[1], nowh - height[i].h);\n\n            L[0] = l[0]; L[1] = l[1];\n            nowh = height[i].h;\n        }\n        L[height[i].t] += changex[height[i].t][height[i].id];\n        k[height[i].t] += delta[height[i].t][height[i].id];\n    }\n    printf(\"%.8lf\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1625059249,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P7090 [NWRRC2013]Lonely Mountain \u9898\u89e3"
    }
]