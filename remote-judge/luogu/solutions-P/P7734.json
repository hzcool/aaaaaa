[
    {
        "content": "\u51fa\u9898\u4eba\u7684\u5b98\u65b9\u9898\u89e3\n\n\u5b9e\u9645\u4e0a\u8fd9\u9898\u7684\u6838\u5fc3\u5728\u4e8e\u5c06\u7edd\u5927\u591a\u6570\u64cd\u4f5c\u8f6c\u6362\u4e3a\u4e00\u79cd\u64cd\u4f5c\uff1a\u6bcf\u6b21\u5c06\u4e00\u4e2a 1 \u79fb\u5230\u540e\u9762\u3002  \n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u666e\u904d\u60c5\u51b5 $\\texttt{**1*..111}$\uff08$\\texttt{**}$ \u8868\u793a\u4efb\u610f\u6570\u5b57\uff09\u3002\u8fc7\u7a0b\u5982\u4e0b\uff1a  \n$\\texttt{**1*..111} \\rightarrow \\texttt{*..**1111} \\rightarrow \\texttt{***..1111}$\u3002  \n$|S|$ \u5f88\u5c0f\u7684\u65f6\u5019\uff08\u5982\u6837\u4f8b\u4e8c\uff09\u53ef\u80fd\u4f1a\u4e0d\u53ef\u884c\uff0c\u5982\u679c\u5206\u7c7b\u8ba8\u8bba\u7684\u8bdd\u60c5\u51b5\u8f83\u591a\uff0c\u6240\u4ee5\u5e94\u8be5\u5199\u4e00\u4e2a\u66b4\u529b\u641c\u7d22\u7684\u7a0b\u5e8f\uff08  \n\u8fd8\u6709\u666e\u901a\u60c5\u51b5\u4e0b\u6700\u540e\u51e0\u6b65\u7684\u7279\u5224\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u5b9e\u73b0\u3002\n```cpp\n#include <algorithm>\n#include <cstring>\n#include <iomanip>\n#include <iostream>\n#include <numeric>\n#include <unordered_set>\n#include <vector>\nstd::size_t n;\nint a[2010];\nstd::string s;\nstd::unordered_set<std::string> st;\nstd::vector<std::pair<int, int>> v;\nbool Check(const std::string &s) {\n  int lst = 0;\n  for (std::size_t i = 0; i < s.size(); i++) {\n    if (s.at(i) == '.') continue;\n    if (s.at(i) - '0' < lst) return false;\n    lst = s.at(i) - '0';\n  }\n  return true;\n}\nvoid Dfs(std::string &s) {\n  if (Check(s)) {\n    for (auto &&i : v) std::cout << i.first + 1 << ' ' << i.second + 1 << '\\n';\n    std::exit(0);\n  }\n  std::size_t p = 0;\n  for (std::size_t i = 0; i < s.size(); i++)\n    if (s.at(i) == '.') {\n      p = i;\n      break;\n    }\n  for (std::size_t i = 0; i < s.size() - 1; i++)\n    if (i != p - 1 && i != p && i != p + 1) {\n      std::swap(s.at(i), s.at(p));\n      std::swap(s.at(i + 1), s.at(p + 1));\n      v.emplace_back(i, p);\n      if (!st.count(s)) {\n        st.emplace(s);\n        Dfs(s);\n      }\n      std::swap(s.at(i), s.at(p));\n      std::swap(s.at(i + 1), s.at(p + 1));\n      v.pop_back();\n    }\n}\nvoid Brute() {\n  Dfs(s);\n  std::cout << -1;\n}\nvoid Move(std::size_t f, std::size_t t) {\n  a[t] = a[f];\n  a[t + 1] = a[f + 1];\n  a[f] = a[f + 1] = -1;\n  std::cout << f << ' ' << t << '\\n';\n  // for (std::size_t i = 1; i <= n; i++) {\n  //   if (a[i] == -1) {\n  //     std::cerr << '.';\n  //   } else {\n  //     std::cerr << a[i];\n  //   }\n  // }\n  // std::cerr << '\\n';\n}\nint main(int argc, char const *argv[]) {\n  std::ios_base::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  std::cout.tie(nullptr);\n  std::cin >> s;\n  n = s.size();\n  if (n <= 10) {\n    Brute();\n    return 0;\n  }\n  for (std::size_t i = 1; i <= n - 2; i++) a[i] = s.at(i - 1) - '0';\n  a[n - 1] = a[n] = -1;\n  std::size_t p = n - 1, now = n - 2, np;\n  while (p > 4 && now > 1) {\n    if (a[now] != 1) {\n      now--;\n      continue;\n    }\n    Move(now - 1, p);\n    np = now - 1;\n    if (now - 1 == p - 2) {\n      Move(now - 3, now - 1);\n      np = now - 3;\n    }\n    Move(p - 1, np);\n    p--;\n  }\n  if (a[1] <= a[2] && a[2] <= a[3]) return 0;\n  if (a[2] == 1) {\n    Move(1, p);\n    return 0;\n  }\n  if (a[3])\n    if (p == 4) {\n      Move(2, p);\n      Move(p + 2, 2);\n      Move(1, p + 2);\n      Move(p, 1);\n      return 0;\n    } else {\n      Move(2, p);\n      Move(--p, 2);\n    }\n  if (p >= n - 2) {\n    Move(3, p);\n    Move(1, 3);\n    Move(p, 1);\n    Move(2, p);\n  } else if (p == 4) {\n    Move(2, p);\n    Move(p + 2, 2);\n    Move(1, p + 2);\n    Move(p, 1);\n  } else {\n    Move(p - 2, p);\n    Move(1, p - 2);\n    Move(p, 1);\n    Move(p - 3, p);\n  }\n  return 0;\n}\n```",
        "postTime": 1627190816,
        "uid": 68273,
        "name": "xyf007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7734 \u301001 \u4e32\u3011"
    },
    {
        "content": "\u611f\u89c9\u6ca1\u6709\u8fd9\u4e48\u56f0\u96be\uff0c\u9876\u591a\u662f\u4e2a\u7eff\u9898\uff0c\u5c24\u5176\u662f\u5e38\u6570\u5361\u5f97\u8fd9\u4e48\u4e0d\u6b7b\u7684\u60c5\u51b5\u4e0b\u3002\n\n\u4ee5\u9632\u4e07\u4e00\u5c0f\u7684\u60c5\u51b5\u76f4\u63a5\u8dd1\u66b4\u529b\u3002\n\n\u6211\u4eec\u8003\u8651\u4e0d\u65ad\u628a1\u632a\u5230\u6700\u540e\uff0c\u5047\u8bbe\u5f53\u524d\u4e32\u957f\u8fd9\u6837 `??1??..1111` \u90a3\u4e48\u8fdb\u884c\u64cd\u4f5c `?..???11111` $\\to$ `????..11111` \u5373\u53ef\u3002\n\n\u6700\u540e\u6709\u4e00\u79cd\u60c5\u51b5\u9700\u8981\u7279\u5224\u65ad\uff0c\u5373 `100000..11111` \u8fd9\u6837\u7684\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u628a\u67d0\u4e2a `11` \u6362\u5230\u6700\u524d\u9762\u53bb\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\u7684\u5904\u7406\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nstd :: string s;\nint n;\nstd :: map<std :: string, int> mp;\nstd :: vector<std :: pair<int, int>> ans;\nvoid move(int i, int j) {\n\tif (i == j) return;\n\tstd :: swap(s[i - 1], s[j - 1]);\n\tstd :: swap(s[i], s[j]);\n\tans.emplace_back(i, j);\n//\tstd :: cout << s << \"\\n\";\n}\nvoid undo() {\n\tint i = ans.back().first, j = ans.back().second;\n\tstd :: swap(s[i - 1], s[j - 1]);\n\tstd :: swap(s[i], s[j]);\n\tans.pop_back();\n}\nvoid dfs() {\n\tif (mp.find(s) != mp.end()) return;\n\tif (ans.size() > 10000) return;\n\tmp[s] = 1;\n\tbool ok = true, flg = false;\n\tfor (int i = 0; i < n; i++) {\n\t\tif (s[i] == '1') flg = true;\n\t\tif (s[i] == '0' && flg == true) ok = false;\n\t}\n\tif (ok) {\n\t\tprintf(\"%d\\n\", (int)ans.size());\n\t\tfor (auto x : ans) printf(\"%d %d\\n\", x.first, x.second);\n\t\texit(0);\n\t}\n\tint p = 0;\n\tfor (int i = n - 1; ~i; i--) {\n\t\tif (s[i] == '.') {\n\t\t\tp = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 1; i < p - 1; i++) {\n\t\tmove(i, p);\n\t\tdfs();\n\t\tundo();\n\t}\n\tfor (int i = p + 2; i < n; i++) {\n\t\tmove(i, p);\n\t\tdfs();\n\t\tundo();\n\t}\n}\nstd :: mt19937 rnd(time(0));\nint main() {\n\tstd :: cin >> s;\n\tn = s.length();\n\tif (n <= 10) {\n\t\tdfs();\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tint j;\n\tfor (j = n - 1; j >= 4; ) {\n\t\tbool flg = false;\n//\t\tprintf(\"%d\\n\", j);\n\t\tfor (int i = j - 2; i; i--) {\n\t\t\tif (s[i] == '1') {\n\t\t\t\tmove(i, j);\n\t\t\t\tif (i < j - 2) move(j - 1, i);\n\t\t\t\telse {\n\t\t\t\t\tif (i >= 3) {\n\t\t\t\t\t\tmove(1, i);\n\t\t\t\t\t\tmove(j - 1, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (s[0] != '0') {\n\t\t\t\t\t\t\tmove(n - 1, i);\n\t\t\t\t\t\t\tmove(1, n - 1);\n\t\t\t\t\t\t\tmove(j - 1, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj--;\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!flg) break;\n\t}\n\tif (s[0] != '0') {\n\t\tif (j == 3) {\n\t\t\tmove(1, j);\n\t\t\tmove(j + 1, 1);\n\t\t} else {\n\t\t\tmove(2, j);\n\t\t\tmove(j + 2, 2);\n\t\t\tmove(1, j + 2);\n\t\t\tmove(j, 1);\n\t\t\tmove(2, j);\n\t\t}\n\t\t\n\t}\n\tprintf(\"%d\\n\", (int)ans.size());\n\tfor (auto x : ans) printf(\"%d %d\\n\", x.first, x.second);\n\treturn 0;\n}\n\n```",
        "postTime": 1676713052,
        "uid": 328405,
        "name": "Gemini7X",
        "ccfLevel": 9,
        "title": "LG7734 01\u4e32"
    }
]