[
    {
        "content": "~~\u6253\u4e86\u51e0\u4e2a\u5c0f\u65f6\u7ec8\u4e8eA\u4e86\uff08\u6211\u771f\u662f\u592a\u84bb\u4e86\uff09\uff0c\u7b2c\u4e00\u6b21A\u9ed1\u9898\uff0c\u5174\u594b\u5730\u53d1\u4e86\u4e2a\u9898\u89e3~~\n\n[\u63a8\u8350\u4e00\u6ce2\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/ONE-PIECE/)\n\n# \u5f88\u597d\u7684\u7f51\u7edc\u6d41\u9898\n\n\u672c\u9898\u662f\u8d39\u7528\u6d41\u3002\uff08\u6839\u672c\u770b\u4e0d\u51fa\u6765\uff09\n\n### \u9996\u5148\u8981\u77e5\u9053\u600e\u4e48\u5224\u65ad\u56fe\u662f\u5426\u6f0f\u6c34\u3002\n\n\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n#### \u8003\u8651\u9ed1\u767d\u67d3\u8272\u6cd5\uff1a\n\n\u628a\u7f51\u683c\u67d3\u6210\u9ed1\u767d\u76f8\u95f4\u7684\u683c\u5b50\uff0c\u628a\u6bcf\u4e00\u4e2a\u767d\u8272\u5f53\u6210\u6e90\u70b9\uff0c\u6bcf\u4e00\u4e2a\u9ed1\u8272\u5f53\u6210\u6c47\u70b9\u3002\n\n\u628a\u6bcf\u4e2a\u683c\u5b50\u5468\u56f4\u5efa\u7acb\u56db\u4e2a\u70b9\uff0c\u767d\u8272\uff08\u6e90\u70b9\uff09\u8fde\u5411\u80fd\u901a\u7684\u5468\u56f4\u70b9\uff0c\u9ed1\u8272\u5468\u56f4\u70b9\u8fde\u5411\u6c47\u70b9\u3002\n\n\u628a\u767d\u8272\u7684\u5468\u56f4\u70b9\u8fde\u5411\u9ed1\u8272\u5468\u56f4\u70b9\u3002\n\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\uff1a![](https://cdn.luogu.com.cn/upload/pic/28114.png)\n\n\u5bf9\u4e8e\u4e00\u5f20\u4e0d\u4f1a\u6f0f\u7684\u56fe\uff0c\u5982\uff1a\uff08\u753b\u56fe\u6280\u672f\u6709\u9650\uff09\n![](https://cdn.luogu.com.cn/upload/pic/28117.png)\n\n\u6211\u4eec\u8fde\u4ee5\u4e0b\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28118.png)\n\n\u8fd9\u65f6\uff0c\u6ee1\u6d41\u5c31\u7b49\u4ef7\u4e8e\u4e0d\u4f1a\u6f0f\u3002\n\n### \u63a5\u4e0b\u6765\u8003\u8651\u65cb\u8f6c\u7684\u95ee\u9898\uff1a\n\n\u5148\u627e\u4e00\u5f20\u4f1a\u6f0f\u4f46\u7ecf\u8fc7\u65cb\u8f6c\u5c31\u4e0d\u4f1a\u6f0f\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28120.png)\n\n\u5c06\u5de6\u4e0a\u89d2\u65cb\u8f6c\u4e00\u6b21\u5c31\u4e0d\u4f1a\u6f0f\u3002\n\n\u90a3\u8f6c\u5316\u56de\u9ed1\u767d\u56fe\u662f\u4ec0\u4e48\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/pic/28123.png)\n\u4e3a\u4e86\u6ee1\u8db3\u65cb\u8f6c\uff0c\u6211\u4eec\u52a0\u5165\u4e00\u6761\u84dd\u8272\u7684\u8fb9\uff0c\u4ee3\u4ef7\u4e3a1\u3002\n\n\u7136\u540e\u6211\u4eec\u8dd1\u8d39\u7528\u6d41\uff0c\u7ea2\u8272\u7684\u6d41\u91cf\u4e3a1\uff0c\u4ee3\u4ef7\u4e3a0\uff0c\u84dd\u8272\u7684\u6d41\u91cf\u4e3a1\uff0c\u4ee3\u4ef7\u4e3a1\uff0c\u7b54\u6848\u5373\u662f1\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u3002\n\n\u8bb2\u5230\u8fd9\u91cc\uff0c\u5927\u6982\u4f60\u5c31\u61c2\u4e86\u3002\n\n\u6ca1\u9519\uff0c\u53ea\u8981\u628a\u6bcf\u4e2a\u683c\u5b50\u5bf9\u5e94\u7684\u7ea2\u8fb9\u84dd\u8fb9\u52a0\u597d\uff0c\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u9898\u76ee\u91cc\u7ed9\u7684\u6c34\u7ba1\u53ef\u4ee5\u5206\u4e3a5\u7c7b\uff1a\n\n### \u4ee5\u4e0b\u5168\u90e8\u9ed8\u8ba4\u767d\u683c\uff0c\u9ed1\u683c\u6240\u6709\u8fb9\u53cd\u5411\n\n1.\u76f4\u7ebf\u578b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28128.png)\uff1a\n\n\u7531\u4e8e\u4e0d\u7528\u65cb\u8f6c\uff0c\u53ea\u9700\u628a\u5bf9\u5e94\u7684\u7ea2\u8fb9\u52a0\u597d\uff0c\u65e2s\u6307\u5411\u4e0a\u548cs\u6307\u5411\u4e0b\u3002\n\n2.Q\u578b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28129.png)\n\n\u5bf9\u4e8e\u8fd9\u79cd\uff0c\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e00\u6761\u7ea2\u8fb9\uff0c\u4eces\uff08\u6e90\u70b9\uff09\u6307\u5411\u521d\u59cb\u65b9\u5411\uff08\u4ee5\u5411\u4e0a\u4e3a\u4f8b\uff09\uff0c\u52a0\u5165\u84dd\u8fb9\uff0c\u4e0a\u6307\u5411\u5de6\uff0c\u4ee3\u4ef7\u4e3a1\uff0c\u4e0a\u6307\u5411\u53f3\uff0c\u4ee3\u4ef7\u4e3a1\uff0c\u4e0a\u6307\u5411\u4e0b\uff0c\u4ee3\u4ef7\u4e3a2\uff08\u8981\u65cb\u8f6c\u4e24\u6b21\uff09\u3002\n\n3.\u4e01\u578b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28130.png)\n\n\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e09\u6761\u7ea2\u8fb9\uff1as\u6307\u5411\u4e0a\uff0cs\u6307\u5411\u5de6\uff0cs\u6307\u5411\u53f3\uff0c\n\u8fd8\u6709\u4e09\u6761\u84dd\u8fb9\uff1a\u4e0a\u6307\u5411\u4e0b\uff0c\u4ee3\u4ef7\u4e3a2\uff08\u65cb\u8f6c\u4e24\u6b21\uff09\uff0c\u5de6\u6307\u5411\u4e0b\uff0c\u4ee3\u4ef7\u4e3a1\uff08\u65cb\u8f6c\u4e00\u6b21\uff09\uff0c\u53f3\u6307\u5411\u4e0b\uff0c\u4ee3\u4ef7\u4e3a1\uff08\u65cb\u8f6c\u4e00\u6b21\uff09\u3002//\u8fd9\u4e2a\u5730\u65b9\u65cb\u8f6c\u8981\u81ea\u5df1\u753b\u56fe\u7406\u89e3\n\n4.L\u578b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28131.png)\n\n\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e24\u6761\u7ea2\u8fb9\uff1as\u6307\u5411\u4e0a\uff0cs\u6307\u5411\u53f3\uff0c\u518d\u52a0\u5165\u4e24\u6761\u84dd\u8fb9\uff1a\u4e0a\u6307\u5411\u4e0b,\u4ee3\u4ef7\u4e3a1\uff0c\uff08\u65cb\u8f6c\u4e00\u6b21\uff0c\u56e0\u4e3a\u65cb\u8f6c\u4e00\u6b21\u540e\uff0c\u4ecd\u6709\u6307\u5411\u53f3\u7684\uff0c\u6545\u53ea\u9700\u6539\u4e0a\u7684\uff09\u53f3\u6307\u5411\u5de6\uff0c\u4ee3\u4ef7\u4e3a1\u3002\n\n\u662f\u4e0d\u662f\u5f88\u5947\u602a\uff0c\u6ca1\u6709\u4ee3\u4ef7\u4e3a2\u7684\u8fb9\uff0c\u5176\u5b9e\u65cb\u8f6c\u4e24\u6b21\u76f8\u5f53\u4e8e\u4e24\u6761\u84dd\u8fb9\u90fd\u8d70\uff0c\u603b\u4ee3\u4ef7\u5c31\u662f2\u4e86\u3002\n\n5.+\u578b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/28134.png)\n\n\u7531\u4e8e\u8fd9\u79cd\u4e0d\u80fd\u65cb\u8f6c\uff0c\u76f4\u63a5\u52a04\u6761\u7ea2\u8fb9\u5373\u53ef\u3002\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5efa\u56fe\uff0c\u56fe\u5efa\u597d\u4e86\u8dd1\u8d39\u7528\u6d41\u5c31\u80fd\u8fc7\u4e86\u3002\n\n\u9644\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\u6253\u4e86\u4e09\u767e\u591a\u884c\u7d2f\u6b7b\u6211\u4e86\uff0c\u4e0d\u8fc7\u5176\u5b9e\u5f88\u591a\u60c5\u51b5\u53ef\u4ee5\u5408\u5e76\u7684\u3002\n\n```\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nconst int inf=1<<30;\nint Read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c>'9'||c<'0'){\n        if(c=='-')f=-1;\n    c=getchar();    \n    }\n    while(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n    return f==1?x:-x;\n}\nint maxflow=0;\nint mincost=0;\nint realflow=0;\nint n,m;\nint top=1,head[101010],inque[101010];\nint s,t;\nint dist[101010];\nstruct Node{\n    int v;\n    int val;\n    int next;\n    int cost;\n}node[101010];\nvoid addedge(int u,int v,int val,int cost){\n    node[++top].v=v;\n    node[top].val=val;\n    node[top].cost=cost;\n    node[top].next=head[u];\n    head[u]=top;\n}//\u52a0\u8fb9\u51fd\u6570 \nvoid add(int u,int v,int val,int cost){\n    addedge(u,v,val,cost);\n    addedge(v,u,0,-cost);\n}//\u7f51\u7edc\u6d41\u7684\u52a0\u8fb9\uff0c\u6b63\u5411\u548c\u53cd\u5411 \nbool spfa(){\n    memset(inque,0,sizeof(inque));\n    memset(dist,0x3f,sizeof(dist));\n    dist[s]=0;\n    inque[s]=1;\n    queue<int>q;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        inque[u]=0;\n        for(int i=head[u];i;i=node[i].next){\n            int d=node[i].v;\n            if(dist[d]>dist[u]+node[i].cost&&node[i].val){\n                dist[d]=dist[u]+node[i].cost;\n                if(inque[d]==0){\n                    q.push(d);\n                    inque[d]=1;\n                }\n            }\n        }\n    }\n    return dist[t]!=0x3f3f3f3f;\n}\ninline int min(int x,int y){\n    return x<y?x:y;\n}\nint dfs(int u,int low){\n    if(u==t){inque[t]=1;maxflow+=low;return low;}\n    int used=0;\n    inque[u]=1;\n    for(int i=head[u];i;i=node[i].next){\n        int d=node[i].v;\n        if((inque[d]==0||d==t)&&node[i].val!=0&&dist[d]==dist[u]+node[i].cost){\n            int minflow=dfs(d,min(low-used,node[i].val));\n            if(minflow!=0)\n            mincost+=node[i].cost*minflow,node[i].val-=minflow,node[i^1].val+=minflow,used+=minflow;\n            \n            if(used==low)break;\n        }\n    }\n    return used;\n}\nint Dinic(){\n    while(spfa()){\n        inque[t]=1;\n        while(inque[t]){\n        memset(inque,0,sizeof(inque));\n        dfs(s,inf);\n        } \n    }\n    return maxflow;\n}\ninline bool check(int i,int j){\n    return i>0&&i<=n&&j>0&&j<=m;\n}//\u5224\u65ad(i,j)\u662f\u5426\u9700\u8981\u52a0\u8282\u70b9 \ninline int up(int i,int j){\n    return 4*((i-1)*m+j);\n}//(i,j)\u7684\u4e0a\u8282\u70b9 \ninline int down(int i,int j){\n    return 4*((i-1)*m+j)+1;\n}//(i,j)\u7684\u4e0b\u8282\u70b9 \ninline int left(int i,int j){\n    return 4*((i-1)*m+j)+2;\n}//(i,j)\u7684\u5de6\u8282\u70b9 \ninline int right(int i,int j){\n    return 4*((i-1)*m+j)+3;\n}//(i,j)\u7684\u53f3\u8282\u70b9 \nint main() {\n    //freopen(\"cin.txt\",\"r\",stdin);\n    s=10010,t=10001;\n    n=Read(),m=Read();\n    int i,j;\n    int map,colur;\n    colur=0;\n    for(i=1;i<=n;i++){\n    \tcolur=i%2;\n        for(j=1;j<=m;j++){\n            map=Read();\n            colur^=1;\n            if(colur==0){\n            if(check(i,j-1))add(left(i,j),right(i,j-1),1,0);\n            if(check(i,j+1))add(right(i,j),left(i,j+1),1,0);\n            if(check(i-1,j))add(up(i,j),down(i-1,j),1,0);\n            if(check(i+1,j))add(down(i,j),up(i+1,j),1,0);\n            }//\u767d\u8272\u70b9\u56db\u5468\u4e0e\u9644\u8fd1\u7684\u9ed1\u8272\u70b9\u56db\u5468\u76f8\u8fde\n            if(map==1){//0001\n            realflow++;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(up(i,j),right(i,j),1,1);//\u5411\u53f3\u6d41\u8981\u8f6c\u4e00\u6b21\uff0c\u4ee3\u4ef7\u4e3a1\n            add(up(i,j),left(i,j),1,1);//\u5411\u5de6\u4ee3\u4ef7\u4e3a1\n            add(up(i,j),down(i,j),1,2);//\u5411\u4e0b\u4ee3\u4ef7\u4e3a2 \n            }//\u767d\u8272\u70b9s\u5411\u56db\u5468\u6d41 \n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(right(i,j),up(i,j),1,1);\n            add(left(i,j),up(i,j),1,1);\n            add(down(i,j),up(i,j),1,2);\n            }//\u9ed1\u8272\u70b9\u56db\u5468\u5411t\u6d41 \n            continue;\n            }\n            if(map==2){//0010\n            realflow++;\n            if(colur==0){\n            add(s,right(i,j),1,0);\n            add(right(i,j),up(i,j),1,1);\n            add(right(i,j),down(i,j),1,1);\n            add(right(i,j),left(i,j),1,2);\n            }\n            if(colur==1){\n            add(right(i,j),t,1,0);\n            add(up(i,j),right(i,j),1,1);\n            add(down(i,j),right(i,j),1,1);\n            add(left(i,j),right(i,j),1,2);\n            }\n            continue;\n            }\n            if(map==3){//0011\n            realflow+=2;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,right(i,j),1,0);\n            add(up(i,j),down(i,j),1,1);\n            add(right(i,j),left(i,j),1,1);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            add(down(i,j),up(i,j),1,1);\n            add(left(i,j),right(i,j),1,1);\n            }\n            continue;\n            }\n            if(map==4){//0100\n            realflow++;\t\n            if(colur==0){\n            add(s,down(i,j),1,0);\n            add(down(i,j),right(i,j),1,1);\n            add(down(i,j),left(i,j),1,1);\n            add(down(i,j),up(i,j),1,2);\n            }\n            if(colur==1){\n            add(down(i,j),t,1,0);\n            add(right(i,j),down(i,j),1,1);\n            add(left(i,j),down(i,j),1,1);\n            add(up(i,j),down(i,j),1,2);\n            }\n            continue;\n            }\n            if(map==5){//0101\n            realflow+=2;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,down(i,j),1,0);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            }\n            }//\u76f4\u7ebf\u578b\u4e0d\u53ef\u65cb\u8f6c\n            if(map==6){//0110\n            realflow+=2;\n            if(colur==0){\n            add(s,right(i,j),1,0);\n            add(s,down(i,j),1,0);\n            add(right(i,j),left(i,j),1,1);\n            add(down(i,j),up(i,j),1,1);\n            }\n            if(colur==1){\n            add(right(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(left(i,j),right(i,j),1,1);\n            add(up(i,j),down(i,j),1,1);\n            }\n            } \n            if(map==7){//0111\n            realflow+=3;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,right(i,j),1,0);\n            add(s,down(i,j),1,0);\n            add(up(i,j),left(i,j),1,1);\n            add(down(i,j),left(i,j),1,1);\n            add(right(i,j),left(i,j),1,2);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(left(i,j),up(i,j),1,1);\n            add(left(i,j),down(i,j),1,1);\n            add(left(i,j),right(i,j),1,2);\n            }\n            }\n            if(map==8){//1000\n            realflow++;\n            if(colur==0){\n            add(s,left(i,j),1,0);\n            add(left(i,j),up(i,j),1,1);\n            add(left(i,j),down(i,j),1,1);\n            add(left(i,j),right(i,j),1,2);\n            }\n            if(colur==1){\n            add(left(i,j),t,1,0);\n            add(up(i,j),left(i,j),1,1);\n            add(down(i,j),left(i,j),1,1);\n            add(right(i,j),left(i,j),1,2);\n            }\n            }\n            if(map==9){//1001\n            realflow+=2;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,left(i,j),1,0);\n            add(up(i,j),down(i,j),1,1);\n            add(left(i,j),right(i,j),1,1);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(left(i,j),t,1,0);\n            add(down(i,j),up(i,j),1,1);\n            add(right(i,j),left(i,j),1,1);\n            }\n            }\n            if(map==10){//1010\n            realflow+=2;\n            if(colur==0){\n            add(s,left(i,j),1,0);\n            add(s,right(i,j),1,0);\n            }\n            if(colur==1){\n            add(left(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            }\n            continue;//\u76f4\u7ebf\u578b \n            }\n            if(map==11){//1011\n            realflow+=3;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,left(i,j),1,0);\n            add(s,right(i,j),1,0);\n            add(left(i,j),down(i,j),1,1);\n            add(right(i,j),down(i,j),1,1);\n            add(up(i,j),down(i,j),1,2);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(left(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            add(down(i,j),left(i,j),1,1);\n            add(down(i,j),right(i,j),1,1);\n            add(down(i,j),up(i,j),1,2);\n            }\n            }\n            if(map==12){//1100\n            realflow+=2;\n            if(colur==0){\n            add(s,left(i,j),1,0);\n            add(s,down(i,j),1,0);\n            add(left(i,j),right(i,j),1,1);\n            add(down(i,j),up(i,j),1,1);\n            }\n            if(colur==1){\n            add(left(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(right(i,j),left(i,j),1,1);\n            add(up(i,j),down(i,j),1,1);\n            }\n            }\n            if(map==13){//1101\n            realflow+=3;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,down(i,j),1,0);\n            add(s,left(i,j),1,0);\n            add(up(i,j),right(i,j),1,1);\n            add(down(i,j),right(i,j),1,1);\n            add(left(i,j),right(i,j),1,2);\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(left(i,j),t,1,0);\n            add(right(i,j),up(i,j),1,1);\n            add(right(i,j),down(i,j),1,1);\n            add(right(i,j),left(i,j),1,2);\n            }\n            }\n            if(map==14){//1110\n            realflow+=3;\n            if(colur==0){\n            add(s,left(i,j),1,0);\n            add(s,down(i,j),1,0);\n            add(s,right(i,j),1,0);\n            add(left(i,j),up(i,j),1,1);\n            add(right(i,j),up(i,j),1,1);\n            add(down(i,j),up(i,j),1,2);\n            }\t\n            if(colur==1){\n            add(left(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            add(up(i,j),left(i,j),1,1);\n            add(up(i,j),right(i,j),1,1);\n            add(up(i,j),down(i,j),1,2);\t\n            }\n            }\n            if(map==15){//1111\n            realflow+=4;\n            if(colur==0){\n            add(s,up(i,j),1,0);\n            add(s,right(i,j),1,0);\n            add(s,left(i,j),1,0);\n            add(s,down(i,j),1,0);\t\n            }\n            if(colur==1){\n            add(up(i,j),t,1,0);\n            add(down(i,j),t,1,0);\n            add(left(i,j),t,1,0);\n            add(right(i,j),t,1,0);\n            }\n            }\n        }\n    }\n    Dinic();\n    if(maxflow*2!=realflow)printf(\"-1\");\n    else printf(\"%d\",mincost);\n    return 0;\n}\n```\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65e0\u8bba\u9ed1\u767d\uff0c\u5728\u7edf\u8ba1\u5e94\u8be5\u7684\u6d41\u91cf\uff08\u4ee3\u7801\u4e2d\u4e3arealflow\uff09\u65f6\u4e00\u89c6\u540c\u4ec1\uff0c\u6700\u540e\u53ea\u9700\u6700\u5927\u6d41\u7b49\u4e8e\u5e94\u8be5\u7684\u6d41\u91cf\u5373\u4e3a\u6ee1\u6d41\u3002\n# \u770b\u61c2\u4e86\u5c31\u7ed9\u4e2a\u8d5e\u5427\u3002\n\u6ca1\u770b\u61c2\u53ef\u4ee5\u53d1\u8ba8\u8bba\u3002",
        "postTime": 1534060799,
        "uid": 28088,
        "name": "\u94b1\u9038\u51e1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "\u8003\u8651\u72b6\u538bDP\uff0c\u66b4\u529b\u8bb0\u5f55\u4e4b\u524d\u4e00\u884c\u7684\u4e0b\u8fb9\u548c\u4e0a\u4e00\u4e2a\u683c\u5b50\u7684\u5de6\u8fb9\u6709\u6ca1\u6709\u63d2\u5934\uff0c\u679a\u4e3e\u8fd9\u4e2a\u683c\u5b50\u5982\u4f55\u65cb\u8f6c\uff08\u6ce8\u610f\u76f4\u7ebf\u4e0d\u80fd\u65cb\u8f6c\uff09\uff0c\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\uff0c\u8f6c\u79fb\u65f6\u9700\u8981\u7279\u5224\u5f53\u524d\u5728\u67d0\u4e00\u884c\u672b\u5c3e\u7684\u60c5\u51b5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nm2^{min(n,m)})$\uff0c\u671f\u671b\u5f97\u5206$40$\uff0c\u7136\u800c\u5b98\u65b9\u6570\u636e\u4e2d\u5b9e\u9645\u6709\u6548\u7684\u72b6\u6001\u6570\u5f88\u5c11\uff0c\u6240\u4ee5\u7528\u4e00\u4e2a`std::map`\u6216\u8005`std::unordered\\_map`\u6216\u8005\u5b83\u4eec\u5bf9\u5e94\u7684\u624b\u5199\u6570\u636e\u7ed3\u6784\u8bb0\u5f55\u4e0b\u6765\u6240\u6709\u7684\u6709\u6548\u72b6\u6001\u5c31\u53ef\u4ee5AC\u8fa3\u3002\n\n\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int MAXSIZE=10000020;\nconst int INF=0x3f3f3f3f;\nint bufpos;\nchar buf[MAXSIZE];\n#define NEG 0\nvoid init(){\n    // freopen(\"infinityloop.in\",\"r\",stdin);\n    // freopen(\"infinityloop.out\",\"w\",stdout);\n    buf[fread(buf,1,MAXSIZE,stdin)]='\\0';\n    bufpos=0;\n}\n#if NEG\nint readint(){\n    bool isneg;\n    int val=0;\n    for(;!isdigit(buf[bufpos]) && buf[bufpos]!='-';bufpos++);\n    bufpos+=(isneg=buf[bufpos]=='-');\n    for(;isdigit(buf[bufpos]);bufpos++)\n        val=val*10+buf[bufpos]-'0';\n    return isneg?-val:val;\n}\n#else\nint readint(){\n    int val=0;\n    for(;!isdigit(buf[bufpos]);bufpos++);\n    for(;isdigit(buf[bufpos]);bufpos++)\n        val=val*10+buf[bufpos]-'0';\n    return val;\n}\n#endif\nchar readchar(){\n    for(;isspace(buf[bufpos]);bufpos++);\n    return buf[bufpos++];\n}\nint readstr(char* s){\n    int cur=0;\n    for(;isspace(buf[bufpos]);bufpos++);\n    for(;!isspace(buf[bufpos]);bufpos++)\n        s[cur++]=buf[bufpos];\n    s[cur]='\\0';\n    return cur;\n}\nconst int cnt[4]={0,1,2,1};\nbool fix[16];\nint a[2002][2002];\n// int f[1<<15][2],g[1<<15][2];\nmap<ll,pair<int,int> > f,g;\ninline void relax(int &x,int y){\n    if (x>y)\n        x=y;\n}\nint main(){\n    init();\n    int n=readint(),m=readint();\n    fix[0]=fix[5]=fix[10]=1;\n    if (n>m){\n        for(int i=0;i<n;i++)\n            for(int j=0;j<m;j++)\n                a[i][j]=readint();\n    }else{\n        for(int i=0;i<n;i++)\n            for(int j=0;j<m;j++){\n                int x=readint();\n                a[j][n-i-1]=((x<<1)|(x>>3&1))&15;\n            }\n        swap(n,m);\n    }\n    /*for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++)\n            printf(\"%d \",a[i][j]);\n        putchar('\\n');\n    }*/\n    ll mask=(1LL<<m)-1;\n    f[0]=make_pair(0,INF);\n    for(int i=0;i<n;i++)\n        for(int j=0;j<m;j++){\n            for(map<ll,pair<int,int> >::iterator t=f.begin();t!=f.end();t++){\n                //printf(\"f[%d][0]=%d,f[%d][1]=%d\\n\",k,f[k][0],k,f[k][1]);\n                if (t->second.first==INF && t->second.second==INF)\n                    continue;\n                int w=a[i][j];\n                ll k=t->first;\n                pair<int,int> qwq=t->second;\n                for(int o=0;o<4;o++){\n                    if (o && fix[w])\n                        break;\n                    if ((w&1)==(k>>(m-1)&1) && (j!=m-1 || !(w>>1&1))){\n                        map<ll,pair<int,int> >::iterator it=g.insert(make_pair(((k<<1)|(w>>2&1))&mask,make_pair(INF,INF))).first;\n                        relax(w>>1&1?it->second.second:it->second.first,(w>>3&1?qwq.second:qwq.first)+cnt[o]);//fix j=m-1\n                    }\n                    w=(w>>1)|((w&1)<<3);\n                }\n            }\n            //fprintf(stderr,\"%d\\n\",f.size());\n            f.clear();\n            f.swap(g);\n        }\n    printf(\"%d\",f[0].first==INF?-1:f[0].first);\n    //fprintf(stderr,\"%d\",clock());\n}\n```",
        "postTime": 1515226770,
        "uid": 3720,
        "name": "q234rty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\uff08infinityloop\uff09\u3011"
    },
    {
        "content": "#### \u849f\u84bb\u8868\u793a\u8fd9\u662f\u4e00\u9053\u601d\u7ef4\u795e\u9898\u3002\u3002\u3002\u3002\u3002\u3002\n\n~~\u6709\u4eba\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u89c9\u5f97\u8fd9\u8981\u8dd1\u8d39\u7528\u6d41\u5417\uff1f~~\n\n\n\u7136\u800c\u53ea\u8981\u4f1a\u5efa\u56fe\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5957\u6a21\u677f\u7684\u4e8b\u4e86\u3002\n\n\n\u6211\u4eec\u8fd9\u6837\u6765\u7406\u89e3\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u65b9\u683c\u4e0a\u7684\u6c34\u7ba1\u7684\u6bcf\u4e00\u4e2a\u652f\u7ba1\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5176\u5b83\u65b9\u683c\u4e0a\u7684\u652f\u7ba1\u4e0e\u5176\u76f8\u8fde\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6f0f\u6c34\u4e86\u3002\u7528\u7f51\u7edc\u6d41\u77e5\u8bc6\u8868\u8ff0\uff0c\u5c31\u662f\u6bcf\u4e2a\u652f\u7ba1\u5bb9\u91cf\u53ea\u80fd\u4e3a1\uff0c\u4e14\u5168\u90fd\u8981\u6ee1\u6d41\u3002\n\n\n\u7136\u800c\u5373\u4f7f\u4ea7\u751f\u4e86\u6700\u4f18\u60c5\u51b5\uff0c\u6574\u4e2a\u7ba1\u7f51\u4e5f\u4e0d\u4e00\u5b9a\u662f\u4e00\u6574\u4e2a\u8054\u901a\u5757\uff0c\u800c\u53ef\u80fd\u88ab\u5206\u6210\u82e5\u5e72\u5757\u3002\u56e0\u6b64\uff0c\u600e\u6837\u5f3a\u5236\u4f7f\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u65b9\u683c\u4e0a\u90fd\u4ea7\u751f\u6d41\u91cf\u5462\uff1f\u5c31\u8981\u628a\u6e90\u6c47\u70b9\u8fde\u5230\u6bcf\u4e2a\u683c\u5b50\u4e0a\u3002\u800c\u4e14\uff0c\u8fd8\u8981\u5bf9\u6bcf\u4e2a\u683c\u70b9\u67d3\u8272\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u683c\u70b9\uff0c\u4e00\u4e2a\u8fde\u6e90\u70b9\uff0c\u4e00\u4e2a\u8fde\u6c47\u70b9\u3002\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u5c31\u8981\u5229\u7528\u683c\u70b9\u884c\u5217\u5750\u6807\u548c\u7684\u5947\u5076\u6027\u6765\u5224\u65ad\u3002\n\n\n\u800c\u4ea7\u751f\u7684\u8d39\u7528\u5462\uff1f\u5f53\u7136\u662f\u65cb\u8f6c\u9020\u6210\u7684\u5566\uff01\u771f\u6b63\u7684\u601d\u7ef4\u5c31\u4f53\u73b0\u5728\u8fd9\u91cc\u4e86\u3002\u56e0\u4e3a\u65cb\u8f6c\u8fd8\u4f1a\u9020\u6210\u63a5\u89e6\u70b9\u7684\u53d8\u5316\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u8981\u62c6\u70b9\u7684\uff0c\u4e00\u4e2a\u65b9\u683c\u62c6\u6210\u4e94\u4e2a\u70b9\uff0c\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u3002\u3002\u3002\u3002\u3002\u3002\u4e2d\u95f4\u70b9\u8fde\u4e0a\u6e90/\u6c47\u70b9\uff0c\u5e76\u6839\u636e\u652f\u7ba1\u60c5\u51b5\u5411\u56db\u5468\u8fde\u5bb9\u91cf1\uff0c\u8d39\u75280\u7684\u8fb9\u3002\u56db\u5468\u89c6\u4f5c\u63a5\u89e6\u70b9\uff0c\u4e0e\u5bf9\u5e94\u76f8\u90bb\u7684\u53e6\u4e00\u4e2a\u63a5\u89e6\u70b9\u8fde\u5bb9\u91cf1\uff0c\u8d39\u75280\u7684\u8fb9\u3002\u8ba8\u8bba\u76f8\u90bb\u4e24\u4e2a\u65b9\u683c\u683c\u56e0\u65cb\u8f6c\u800c\u4ea7\u751f\u7684\u6709\u8d39\u7528\u7684\u8fde\u8fb9\uff0c\u5b9e\u5728\u662f\u592a\u96be\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u731b\u7136\u53d1\u73b0\uff0c\u6240\u6709\u7684\u60c5\u51b5\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u5728\u5185\u90e8\u8fdb\u884c\u8f6c\u5316\u5c31\u597d\u4e86\u3002\n\n\n\u6240\u6709\u7684\u65b9\u683c\uff0c\u6211\u4eec\u5927\u81f4\u5206\u6210\u4ee5\u4e0b\u51e0\u7c7b\u8fdb\u884c\u8ba8\u8bba\u3002\n\n\n---\n#####\u7b2c\u4e00\u79cd\uff1a\u5c04\u7ebf\u578b\n\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/12752.png) \n\n\u8fd9\u79cd\u597d\u529e\u3002\u5c04\u7ebf\u6307\u5411\u4e0a\u9762\uff0c\u90a3\u4e48\u5c31\u8ba9\u5de6\u3001\u4e0b\u3001\u53f3\u63a5\u89e6\u70b9\u76f4\u63a5\u8fde\u63a5\u4e0a\u63a5\u89e6\u70b9\u3002\u5de6\uff0c\u53f3\u8fde\u4e0a\u53bb\uff0c\u8868\u793a\u53ea\u8981\u8f6c90\u5ea6\uff0c\u6240\u4ee5\u8d39\u7528\u4e3a1\u3002\u4e0b\u9762\u8fde\u4e0a\u53bb\u8d39\u7528\u5c31\u662f2\u3002\n\n\n---\n#####\u7b2c\u4e8c\u79cd\uff1a\u76f4\u89d2\u578b\n\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/12753.png) \n\n\u8fd9\u79cd\u7406\u89e3\u8d77\u6765\u5c31\u6709\u96be\u5ea6\u4e86\u3002\u5982\u679c\u987a\u65f6\u9488\u8f6c90\u5ea6\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\n\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/12754.png) \n\n\u76f8\u5f53\u4e8e\u539f\u6765\u8fde\u4e0a\u63a5\u89e6\u70b9\u7684\u652f\u7ba1\u8fde\u5230\u4e86\u4e0b\u9762\uff0c\u90a3\u4e48\u4e0a\u4e0e\u4e0b\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\u3002\u540c\u6837\u7684\u9053\u7406\uff0c\u9006\u65f6\u9488\u8f6c90\u5ea6\uff0c\u5de6\u4e0e\u53f3\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\u3002\u518d\u6765\u8ba8\u8bba\u8f6c180\u5ea6\uff0c\u8fd9\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7\u5df2\u6709\u7684\u8fb9\u7531\u5de6\u3001\u4e0b\u76f4\u63a5\u8f6c\u79fb\u5230\u53f3\u3001\u4e0a\uff0c\u8d39\u7528\u52a0\u8d77\u6765\u6b63\u597d\u662f2\uff0c\u6240\u4ee5\u4e0d\u7528\u8fde\u66f4\u591a\u8fb9\u4e86\u3002\n\n\n---\n#####\u7b2c\u4e09\u79cd\uff1aT\u5b57\u578b\n\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/12755.png) \n\n\u50cf\u524d\u9762\u4e00\u6837\u8ba8\u8bba\uff0c\u4e5f\u53ef\u4ee5\u5efa\u8fb9\u3002\u4ece\u4e0b\u5411\u5de6\u3001\u53f3\u5404\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u5411\u4e0a\u5efa\u4e00\u6761\u8d39\u7528\u4e3a2\u7684\u8fb9\u3002\u8fd9\u91cc\u5c31\u7559\u7ed9\u8bfb\u8005\u81ea\u5df1\u601d\u8003\u5566\u3002\n\n\n---\n\u4ee5\u4e0a\u4e09\u79cd\u60c5\u51b5\uff0c\u6bcf\u4e00\u79cd\u90fd\u67094\u4e2a\u5f62\u72b6\uff0c\u4f46\u8fde\u8fb9\u65b9\u6cd5\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\n\u8fd8\u6709\u76f4\u7ebf\u578b\uff0c\u5341\u5b57\u578b\u548c\u7a7a\u7684\uff0c\u8981\u4e48\u4e0d\u80fd\u8f6c\uff0c\u8981\u4e48\u8f6c\u4e86\u6ca1\u610f\u4e49\uff0c\u5c31\u4e0d\u7528\u5185\u90e8\u5efa\u8fb9\u4e86\u3002\n\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u849f\u84bb\u53ea\u4f1aSPFA\u589e\u5e7f\u8d39\u7528\u6d41\u3002\u3002\u3002\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\n#define R register int\n#define UP(U) U+turn*sum\n#define RI(U) U+((turn+1)&3)*sum\n#define DO(U) U+((turn+2)&3)*sum\n#define LE(U) U+((turn+3)&3)*sum\n#define MD(U) U+(sum<<2)//\u4e0a\u9762\u51e0\u4e2a\u7528\u6765\u8ba1\u7b97\u5bf9\u5e94\u70b9\u7684\u6570\u7ec4\u4e0b\u6807\uff0c\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u3002\u3002\u3002\nconst int INF=2147483647,N=20009,M=200009;\nint sum,P=1,S=0,T;//sum\u65b9\u683c\u603b\u6570\uff0cP\u5efa\u56fe\u5faa\u73af\u53d8\u91cf\uff0cS\u3001T\u4e3a\u6e90\u6c47\u70b9\nint he[N],ne[M],to[M],f[M],c[M];//f\u6d41\u91cf\uff0cc\u8d39\u7528\nint q[N],d[N],pre[N];//q\u961f\u5217\uff0cd\u8ddd\u79bb\uff0cpre\u8bb0\u5f55\u6700\u77ed\u8def\nbool inq[N];//\u6807\u8bb0\u662f\u5426\u5728\u961f\u5217\u4e2d\ninline void in(R&z)//\u5feb\u8bfb\n{\n    register char c=getchar();\n    while(c<'-')c=getchar();\n    z=c&15;c=getchar();\n    while(c>'-')z*=10,z+=c&15,c=getchar();\n}\ninline void add(R u,R v,R flow,R cost,R tp)//\u5efa\u8fb9\uff0ctp\u8868\u793a\u67d3\u8272\u5c5e\u6027\n{\n    if(tp){tp=u;u=v;v=tp;}//\u5982\u679c\u662f\u5947\u6570\u70b9\uff0c\u6240\u6709\u7684\u8fb9\u90fd\u8981\u53cd\u5411\uff0c\u8981\u6d41\u51fa\u53bb\n    to[++P]=v;ne[P]=he[u];he[u]=P;c[P]=cost;f[P]=flow;\n    to[++P]=u;ne[P]=he[v];he[v]=P;c[P]=-cost;\n}\n#define PB(X) q[t]=X;if(++t==N)t=0\n#define PF(X) if(--h<0)h=N-1;q[h]=v\ninline bool spfa()//\u6a21\u677f\uff0c\u52a0\u4e86\u4e24\u79cd\u4f18\u5316\n{\n    R h=0,t=1,i,u,v,dn,cnt=1,sum=0;\n    for(i=S+1;i<=T;++i)d[i]=INF;\n    q[0]=S;inq[0]=1;\n    while(h!=t)\n    {\n        u=q[h];\n        if(++h==N)h=0;\n        if(d[u]*cnt>sum){PB(u);continue;}//LLL\u4f18\u5316\n        --cnt;sum-=d[u];\n        for(i=he[u];i;i=ne[i])\n            if(f[i]&&d[v=to[i]]>(dn=d[u]+c[i]))\n            {\n                if(inq[v])sum-=d[v];\n                else\n                {\n                    inq[v]=1;++cnt;\n                    if(d[v]<d[q[h]]){PB(v);}\n                    else{PF(v);}//SLF\u4f18\u5316\n                }\n                pre[v]=i;\n                sum+=(d[v]=dn);\n            }\n        inq[u]=0;\n    }\n    return d[T]!=INF;\n}\nint main()\n{\n    R n,m,i,j,k=1,t,shape,turn,totf=0,mf=0,mc=0;//totf\u603b\u6d41\u91cf\uff0cmf\u6700\u5927\u53ef\u884c\u6d41\uff0cmc\u6700\u5c0f\u603b\u8d39\u7528\n    in(n);in(m);\n    sum=n*m;T=sum*5+1;\n    for(i=0;i<n;++i)\n        for(j=0;j<m;++j,++k)\n        {\n            turn=0;//turn\u4e0b\u9762\u4f1a\u7528\u6765\u7ffb\u8f6c\uff0c\u5c06\u540c\u7c7b\u578b\u7684\u6c34\u7ba1\u5f52\u7c7b\u5230\u4e00\u8d77\n            t=(i+j)&1;//t\u662f\u67d3\u8272\u5c5e\u6027\uff0c\u53ea\u8981\u5224\u65ad\u5947\u5076\n            if(t)add(S,MD(k),INF,0,0);\n            else add(MD(k),T,INF,0,0);\n            if(i)add(DO(k-m),UP(k),1,0,t);\n            if(j)add(RI(k-1),LE(k),1,0,t);\n            in(shape);\n            if(shape&1)add(UP(k),MD(k),1,0,t),++totf;//\u7edf\u8ba1\u603b\u6d41\u91cf\n            if(shape&2)add(RI(k),MD(k),1,0,t),++totf;//\u56e0\u4e3a\u6bcf\u4e2a\u6d41\u62c6\u6210\u4e86\u4e24\u6bb5\n            if(shape&4)add(DO(k),MD(k),1,0,t),++totf;//\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u4f1a\u662f\u5b9e\u9645\u7684\u4e24\u500d\n            if(shape&8)add(LE(k),MD(k),1,0,t),++totf;//\u4e2d\u70b9\u4e0e\u56db\u5468\u70b9\u8fde\u8fb9\n            switch(shape)\n            {\n            case 8:++turn;//1000 \u2190\n            case 4:++turn;//0100 \u2193\n            case 2:++turn;//0010 \u2192\n            case 1:       //0001 \u2191\n                add(RI(k),UP(k),1,1,t);\n                add(DO(k),UP(k),1,2,t);\n                add(LE(k),UP(k),1,1,t);\n                break;//\u8fd9\u56db\u79cd\u5f62\u72b6\u5185\u90e8\u8fde\u8fb9\u60c5\u51b5\u662f\u4e00\u6837\u7684\uff0c\u8f6c\u4e00\u4e0b\u7edf\u4e00\u5904\u7406\u5c31\u65b9\u4fbf\u4e9b\u4e86\uff0c\u4e0b\u9762\u540c\u7406\n            case 9:++turn; //1001 \u2518\n            case 12:++turn;//1100 \u2510\n            case 6:++turn; //0110 \u250c\n            case 3:        //0011 \u2514\n                add(DO(k),UP(k),1,1,t);\n                add(LE(k),RI(k),1,1,t);\n                break;\n            case 13:++turn;//1101 \u2524\n            case 14:++turn;//1110 \u252c\n            case 7:++turn; //0111 \u251c\n            case 11:       //1011 \u2534\n                add(DO(k),LE(k),1,1,t);\n                add(DO(k),UP(k),1,2,t);\n                add(DO(k),RI(k),1,1,t);\n                break;\n            }\n        }\n    while(spfa())\n    {\n        m=INF;//\u8fd9\u91ccm\u8bb0\u4e0b\u6d41\u91cf\n        for(i=T;i!=S;i=to[k^1])\n        {\n            k=pre[i];\n            if(m>f[k])m=f[k];\n        }\n        mf+=m;\n        for(i=T;i!=S;i=to[k^1])\n        {\n            k=pre[i];\n            f[k]-=m;f[k^1]+=m;\n            mc+=m*c[k];\n        }\n    }\n    printf(\"%d\",totf==mf<<1?mc:-1);//\u6ce8\u610f\u5982\u679c\u6ca1\u80fd\u6d41\u6ee1\u5c31\u8f93-1\n    return 0;\n}\n```",
        "postTime": 1515074087,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\uff08infinityloop\uff09\u3011"
    },
    {
        "content": "~~\u5982\u679c\u4e0d\u662f\u770b\u9898\u89e3\u8fd9\u8f88\u5b50\u4e5f\u5efa\u4e0d\u51fa\u6a21\u6765\u7684\u6bd2\u7624\u8d39\u7528\u6d41\u9898\u76ee~~\n\nflag:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tq452ljo.png)\n\n~~\u4e0d\u8fc7\u6211 A \u4e86\u4f60\u4eec\u770b\u4e0d\u5230\u6211\u5973\u88c5\u4e86\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8~~\n\n------\n\n\u8a00\u5f52\u6b63\u4f20\n\n\u6211\u4eec\u8ba4\u4e3a\u4e00\u4e2a\u6c34\u7ba1\u662f\u4e0d\u6f0f\u6c34\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e0e\u4ed6\u76f8\u90bb\u7684\u63d2\u5934\u4e0a\u4e5f\u6709\u4e00\u4e2a\u6c34\u7ba1\u548c\u5b83~~\u63a5\u543b~~\u5bf9\u63a5\n\n\u5f53\u6574\u4e2a\u6a21\u578b\u662f\u6ee1\u6d41\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u56fe\u5c31\u4e0d\u6f0f\u6c34\u4e86\n\n\u4e3a\u4e86\u5f3a\u5236\u8ba9\u76f8\u90bb\u7684\u501f\u53e3\u90fd\u4ea7\u751f\u8d21\u732e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6574\u4e2a\u56fe\u67d3\u8272\uff0c\u767d\u8272\u8fde\u6e90\uff0c\u9ed1\u8272\u8fde\u6c47\uff0c\u81f3\u4e8e\u6d41\u91cf\u8d39\u7528\u90fd\u5f88\u663e\u7136\uff0c~~\u7559\u7ed9\u8bfb\u8005\u81ea\u884c\u601d\u8003~~\n\n\u7136\u540e\u6211\u4eec\u8981\u8003\u8651\u600e\u6837\u5efa\u6a21\u624d\u80fd\u4fdd\u8bc1\u6ee1\u6d41\u65f6\u8fd9\u5f20\u56fe\u662f\u4e0d\u6f0f\u6c34\u7684\uff0c\u4e00\u4e2a\u70b9\u663e\u7136\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u4e86\n\n\u70b9\u4e0d\u591f\u548b\u529e\u5462\uff1f\n\n\u62c6\u5457\n\n\u6211\u4eec\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u4e94\u4e2a\u70b9\uff0c\u8fd9\u6837\u8981\u8868\u793a\u5bf9\u63a5\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ece\u4e00\u4e2a\u767d\u70b9\u5411\u76f8\u90bb\u7684\u9ed1\u70b9\u8fde\u8fb9\n\n\u6709\u4e86\u5efa\u6a21\u601d\u8def\uff0c\u6211\u4eec\u770b\u770b\u5177\u4f53\u600e\u4e48\u5904\u7406\u6bcf\u79cd\u6c34\u7ba1\n\n------\n\n\u9898\u76ee\u7ed9\u4e86 13 \u79cd\u7ba1\u5b50\u633a\u5413\u4eba\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u672c\u8d28\u4e0d\u540c\u7684\u7ba1\u5b50\u53ea\u6709 5 \u79cd\uff0c\u6211\u4eec\u4e00\u4e00\u8ba8\u8bba\uff1a\n\n**\uff08\u7531\u4e8e\u9ed1\u683c\u5b50\u548c\u767d\u683c\u5b50\u7684\u8fde\u8fb9\u60c5\u51b5\u662f\u5b8c\u5168\u76f8\u53cd\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7684\u540c\u65f6\u4e0d\u5f15\u8d77\u5927\u5bb6\u8bef\u89e3\uff0c\u8fd9\u91cc\u53ea\u8ba8\u8bba\u767d\u683c\u5b50\u7684\u8fde\u8fb9\u60c5\u51b5\uff09**\n\n**\u6211\u4eec\u9ed8\u8ba4\u4e0b\u65b9\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u90fd\u5148\u8981\u4ece\u683c\u5b50\u4e2d\u95f4\u5411\u6bcf\u4e00\u4e2a\u6709\u63a5\u53e3\u7684\u65b9\u5411\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u4e0b\u65b9\u6240\u6709\u7684\u8fb9\u6d41\u91cf\u5747\u4e3a $1$**\n\n## 1.\u65ad\u5934\u6c34\u7ba1\n\n\u4e5f\u5c31\u662f\u7b2c\u4e00\u5f20\u56fe\u4e2d\u5e26\u5706\u5708\u7684\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u51fa\u53e3\uff0c\u6211\u4eec\u8003\u8651\u600e\u6837\u8fde\u8fb9\n\n**\u6211\u4eec\u5047\u8bbe\u5f00\u53e3\u671d\u4e0a**\n\n\u7136\u540e\u8003\u8651\u7ffb\u8f6c\uff0c\u5982\u679c\u5411\u5de6/\u53f3\u7ffb\u8f6c $90\\degree$ \u63a5\u53e3\u5c31\u5230\u4e86\u5de6\u8fb9/\u53f3\u8fb9\uff0c\u6240\u4ee5\u4ece\u4e0a\u5411\u5de6\u3001\u53f3\u5404\u8fde\u4e00\u6761\u8d39\u7528 $1$ \u7684\u8fb9\n\n\u540c\u7406\uff0c\u4ece\u4e0a\u5230\u4e0b\u8fde\u4e00\u6761\u8d39\u7528 $2$ \u7684\u8fb9\n\n## 2.\u76f4\u7ebf\u6c34\u7ba1\n\n\u6211\u4eec\u53d1\u73b0\u76f4\u7ebf\u6c34\u7ba1\u5982\u679c\u5b83\u56db\u5468\u7684\u501f\u53e3\u4e0d\u662f\u76f4\u7ebf\uff0c\u5219\u4e00\u5b9a\u65e0\u89e3\uff0c\u800c\u5982\u679c\u662f\u76f4\u7ebf\uff0c\u90a3\u4e48\u76f4\u7ebf\u4e00\u5b9a\u5df2\u7ecf\u63a5\u597d\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5bf9\u76f4\u7ebf\u6c34\u7ba1\u8fdb\u884c\u5904\u7406\n\n## 3.\u76f4\u89d2\u6c34\u7ba1\n\n**\u5047\u8bbe\u5b83\u7684\u4e24\u4e2a\u63a5\u53e3\u5206\u522b\u5411\u4e0a\u3001\u5411\u53f3**\n\n\u90a3\u4e48\u6211\u4eec\u5411\u5de6\u8f6c $90\\degree$\uff0c\u7b49\u4ef7\u4e8e\u4e0a\u9762\u63a5\u53e3\u4e0d\u52a8\uff0c\u53f3\u8fb9\u63a5\u53e3\u5230\u5de6\u8fb9\uff0c\u6240\u4ee5\u4ece\u53f3\u5230\u5de6\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\n\n\u540c\u7406\uff0c\u5411\u53f3\u8f6c\u7684\u65f6\u5019\uff0c\u4ece\u4e0a\u5230\u4e0b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\n\n\u90a3\u4e48\u8f6c $180\\degree$ \u5462\uff1f\u6211\u4eec\u53d1\u73b0\u901a\u8fc7\u539f\u6709\u7684\u8fb9\u5b8c\u5168\u53ef\u4ee5\u8f6c\u79fb\uff0c\u6240\u4ee5\u4e0d\u7528\u5904\u7406\u3001\n\n## 4.T \u5f62\u6c34\u7ba1\n\n**\u5047\u8bbe\u4e0b\u65b9\u6ca1\u6709\u63a5\u53e3**\n\n\u6309\u7167\u5957\u8def\u753b\u56fe\u8bd5\u4e00\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u9700\u8981\u5206\u522b\u4ece\u5de6\u3001\u53f3\u5230\u4e0b\u5404\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u4ece\u4e0a\u5230\u4e0b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $2$ \u7684\u8fb9\n\n## 5.\u5341\u5b57\u82b1\u6c34\u7ba1\n\n~~\u4f46\u51e1\u6709\u8111\u5b50\u7684\u4eba\u4e5f\u80fd\u60f3\u5230\u8fd9\u4e2a\u4e0d\u7528\u8f6c\u5427~~\n\n\u90a3\u4e48\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u4ee3\u7801\u5c31\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a\n\n~~\u524d\u65b9350\u884c\u4ee3\u7801\u8b66\u544a~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\nstruct edge\n{\n\tint nxt,to,weight,value;\n}e[200001<<1];\nint n,m,tot=1,s,t,h[10005],dep[10005],cur[10005],ans,sum,cost,hg[10005];\nbool vis[10005];\n//\u4e2d0\u4e0a1\u53f32\u4e0b3\u5de64\nconst int dx[]={-1,0,1,0},dy[]={0,1,0,-1},cross[]={3,4,1,2};\ninline int read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\ninline int id(int x,int y,int num)\n{\n\treturn (x-1)*m+y+num*n*m;\n}\ninline void add(int x,int y,int w,int val)\n{\n\te[++tot].nxt=h[x];\n\th[x]=tot;\n\te[tot].to=y;\n\te[tot].weight=w;\n\te[tot].value=val;\n}\ninline bool dijkstra()\n{\n\tfor(register int i=0;i<=t;++i)\n\t{\n\t\tvis[i]=0;\n\t\tdep[i]=0x3f3f3f3f;\n\t\tcur[i]=h[i];\n\t}\n\t__gnu_pbds::priority_queue<pair<int,int>,greater<pair<int,int> >,pairing_heap_tag> q;\n\tq.push(make_pair(0,t));\n\tdep[t]=0;\n\twhile(!q.empty())\n\t{\n\t\tpair<int,int> k=q.top();\n\t\tq.pop();\n\t\tif(vis[k.second])\n\t\t\tcontinue;\n\t\tvis[k.second]=1;\n\t\tfor(register int i=h[k.second];i;i=e[i].nxt)\n\t\t\tif(e[i^1].weight&&dep[e[i].to]>dep[k.second]-e[i].value+hg[k.second]-hg[e[i].to])\n\t\t\t{\n\t\t\t\tdep[e[i].to]=dep[k.second]-e[i].value+hg[k.second]-hg[e[i].to];\n\t\t\t\tq.push(make_pair(dep[e[i].to],e[i].to));\n\t\t\t}\n\t}\n\treturn dep[s]!=dep[0];\n}\nint dfs(int k,int f)\n{\n\tif(k==t)\n\t{\n\t\tans+=f;\n\t\tvis[t]=1;\n\t\treturn f;\n\t}\n\tint r=0,used=0;\n\tvis[k]=1;\n\tfor(register int i=cur[k];i;i=e[i].nxt)\n\t{\n\t\tcur[k]=i;\n\t\tif((!vis[e[i].to]||e[i].to==t)&&e[i].weight&&dep[e[i].to]==dep[k]-e[i].value+hg[k]-hg[e[i].to])\n\t\t\tif((r=dfs(e[i].to,min(e[i].weight,f-used))))\n\t\t\t{\n\t\t\t\tcost+=r*e[i].value;\n\t\t\t\te[i].weight-=r;\n\t\t\t\te[i^1].weight+=r;\n\t\t\t\tused+=r;\n\t\t\t\tif(f==used)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t}\n\treturn used;\n}\ninline int dinic()\n{\n\twhile(dijkstra())\n\t{\n\t\tvis[t]=1;\n\t\twhile(vis[t])\n\t\t{\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tdfs(s,1<<30);\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));\n\t\tfor(register int i=0;i<=t;++i)\n\t\t\thg[i]+=dep[i];\n\t}\n\treturn ans<<1;\n}\ninline void build(int x,int y,int num)\n{\n\t//\u4e2d0\u4e0a1\u53f32\u4e0b3\u5de64\n\tif((x+y)&1)\n\t{\n\t\tadd(s,id(x,y,0),1<<30,0);\n\t\tadd(id(x,y,0),s,0,0);\n\t\tfor(register int i=0;i<4;++i)\n\t\t{\n\t\t\tint xx=x+dx[i],yy=y+dy[i];\n\t\t\tif(xx<=0||xx>n||yy<=0||yy>m)\n\t\t\t\tcontinue;\n\t\t\tadd(id(x,y,i+1),id(xx,yy,cross[i]),1,0);\n\t\t\tadd(id(xx,yy,cross[i]),id(x,y,i+1),0,0);\n\t\t}\n\t\tfor(register int i=0;i<4;++i)\n\t\t\tif(num&(1<<i))\n\t\t\t{\n\t\t\t\tadd(id(x,y,0),id(x,y,i+1),1,0);\n\t\t\t\tadd(id(x,y,i+1),id(x,y,0),0,0);\n\t\t\t\t++sum;\n\t\t\t}\n\t\t//\u4e2d0\u4e0a1\u53f32\u4e0b3\u5de64\n\t\tswitch(num)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tadd(id(x,y,1),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,2);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-2);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tadd(id(x,y,2),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,2);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-2);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,2);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-2);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tadd(id(x,y,4),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),1,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,2);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-2);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tadd(id(x,y,1),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,2);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-2);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,2);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-2);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 13:\n\t\t\t\tadd(id(x,y,1),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,2);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-2);\n\t\t\t\tbreak;\n\t\t\tcase 14:\n\t\t\t\tadd(id(x,y,2),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,2);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-2);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t}\n\t\t//\u4e2d0\u4e0a1\u53f32\u4e0b3\u5de64\n\t}\n\telse\n\t{\n\t\tadd(id(x,y,0),t,1<<30,0);\n\t\tadd(t,id(x,y,0),0,0);\n\t\tfor(register int i=0;i<4;++i)\n\t\t\tif(num&(1<<i))\n\t\t\t{\n\t\t\t\tadd(id(x,y,i+1),id(x,y,0),1,0);\n\t\t\t\tadd(id(x,y,0),id(x,y,i+1),0,0);\n\t\t\t\t++sum;\n\t\t\t}\n\t\tswitch(num)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tadd(id(x,y,2),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,2);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-2);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tadd(id(x,y,1),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,2);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-2);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,2);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-2);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tadd(id(x,y,1),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),1,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,2);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-2);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tadd(id(x,y,4),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),0,-1);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),1,2);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),0,-2);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 11:\n\t\t\t\tadd(id(x,y,3),id(x,y,1),1,2);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),0,-2);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),0,-1);\n\t\t\t\tadd(id(x,y,3),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,3),0,-1);\n\t\t\t\tbreak;\n\t\t\tcase 13:\n\t\t\t\tadd(id(x,y,2),id(x,y,1),1,1);\n\t\t\t\tadd(id(x,y,1),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,3),1,1);\n\t\t\t\tadd(id(x,y,3),id(x,y,2),0,-1);\n\t\t\t\tadd(id(x,y,2),id(x,y,4),1,2);\n\t\t\t\tadd(id(x,y,4),id(x,y,2),0,-2);\n\t\t\t\tbreak;\n\t\t\tcase 14:\n\t\t\t\tadd(id(x,y,1),id(x,y,2),1,1);\n\t\t\t\tadd(id(x,y,2),id(x,y,1),0,-1);\n\t\t\t\tadd(id(x,y,1),id(x,y,3),1,2);\n\t\t\t\tadd(id(x,y,3),id(x,y,1),0,-2);\n\t\t\t\tadd(id(x,y,1),id(x,y,4),1,1);\n\t\t\t\tadd(id(x,y,4),id(x,y,1),0,-1);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t//\u4e2d0\u4e0a1\u53f32\u4e0b3\u5de64\n}\nint main()\n{\n\tn=read(),m=read();\n\ts=n*m*5+1;\n\tt=s+1;\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=1;j<=m;++j)\n\t\t{\n\t\t\tint p=read();\n\t\t\tbuild(i,j,p);\n\t\t}\n\tif(dinic()!=sum)\n\t\tputs(\"-1\");\n\telse\n\t\tprintf(\"%d\\n\",cost);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1584624474,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u795e\u9898\uff01\uff01\uff01\uff01\n\n\u5207\u4e86\u8fd9\u9053\u9898\u8bf4\u660e\u4f60\u7684\u7f51\u7edc\u6d41\u5df2\u7ecf\u51fa\u795e\u5165\u5316\n\n\u9996\u5148\u89c2\u5bdf\u8fd9\u9053\u9898\uff0c\u6709\u4e00\u4e2a\u5f88\u5947\u602a\u7684\u8bbe\u5b9a\uff0c**\u76f4\u7ebf\u578b\u662f\u4e0d\u80fd\u8f6c\u7684**\n\n\u5982\u679c\u4ee5\u63d2\u5934dp\u7684\u601d\u8def\u6765\u770b\uff0c\u8fd9\u6839\u672c\u662f\u778e\u641e\n\n\u5728\u63d2\u5934dp\u773c\u91cc\u76f4\u7ebf\u578b\u65cb\u8f6c\uff0c\u5b83\u548c\u522b\u7684\u4e1c\u897f\u6ca1\u4efb\u4f55\u533a\u522b\n\n\u4f46\u662f\u4ed4\u7ec6\u770b\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u76f4\u7ebf\u578b\u65cb\u8f6c\uff0c\u5b83**\u540c\u65f6\u632a\u52a8\u4e86\u4e24\u4e2a\u70b9**\n\n\u4f60\u53ef\u80fd\u8bf4\uff0cL\u578b\u65cb\u8f6c\u4e5f\u662f\u554a\uff0c\u4f46\u662fL\u578b\u65cb\u8f6c\u7684\u5de6\u65cb\u548c\u53f3\u65cb**\u53ea\u79fb\u52a8\u4e00\u4e2a\u70b9**\n\n\u800c\u4e0b\u65cb\uff0c\u53ef\u4ee5\u770b\u6210**\u5de6\u65cb\u548c\u53f3\u65cb\u7684\u52a0\u548c**\n\n\u800c\u76f4\u7ebf\u578b\u65cb\u8f6c\u4e0d\u662f\uff0c\u5b83\u7684\u4e0b\u65cb\u6ca1\u6709\u610f\u4e49\uff0c\u800c\u5de6\u65cb\u548c\u53f3\u65cb\u9700\u8981\u632a\u52a8\u4e24\u4e2a\u70b9\n\n\u5148\u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684\u8bdd\n\n\u5982\u679c\u6211\u4eec\u8fd9\u6837\u8868\u793a\u4e00\u4e2a\u683c\u5b50\n\n\\--0\n1--2\n\\--3\n\u90a3\u4e48\u5c31\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2aL\u578b\u7684\u63a5\u53e3\uff0c\n\n\u5de6\u65cb\u76f8\u5f53\u4e8e\u5c06**0**\u53f7\u70b9\u79fb\u52a8\u5230**3**\u53f7\u70b9\n\n\u53f3\u65cb\u76f8\u5f53\u4e8e\u628a**2**\u53f7\u70b9\u79fb\u52a8\u5230**1**\u53f7\u70b9\u7684\u4f4d\u7f6e\n\n\u4e0b\u65cb\u5373\u5c06**0\u79fb\u81f33\uff0c2\u79fb\u81f31**\n\n\u76f8\u5f53\u4e8e\u540c\u65f6\u5de6\u65cb\uff0c\u53f3\u65cb\n\n\\*\u53c8\u53d1\u73b0\u76f4\u7ebf\u578b\u6839\u672c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff01\\*\n\n~~\u6240\u4ee5\u53ea\u80fd\u8bf4\u8fd9\u662fstd\u7684\u7f3a\u9677\u4e86\uff0c\u4e00\u5b9a\u662f\u56e0\u4e3astd\u5229\u7528\u4e86\u4e0a\u8ff0\u6027\u8d28\uff0c\u81f4\u4f7f\u4e0d\u53ef\u5904\u7406\u76f4\u7ebf\u578b\u7684\u60c5\u51b5~~\n\n~~\u6839\u672c\u4e0d\u4f1a\u662f\u63d2\u5934dp\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5927\u4e0d\u80fd\u7528\u63d2d\u7684\u95ee\u9898~~\n\n~~\u5f53\u7136\u63d2\u5934dp\u52a0map\u4f18\u5316\u4e5f\u884c\uff0c\u4f46\u95ee\u9898\u662f\u6839\u672c\u5c31\u4e0d\u4f1a\u6709\u8fd9\u79cd\u9650\u5236~~\n\n\u8fd9\u91cc\u4f60\u9700\u8981\u601d\u7ef4\u8fdb\u884c\u4e00\u4e0b\u8df3\u8dc3\uff0c\u60f3\u5230\u8fd9\u9053\u9898\u4e8b\u5b9e\u4e0a\u662f\u4e2a\u5339\u914d\u95ee\u9898\n\n\u56e0\u4e3a\u662f\u4e2a\u7f51\u683c\u56fe\uff0c\u91c7\u7528\u4e86\u5e38\u7528\u7684**\u9ed1\u767d\u67d3\u8272\u6280\u5de7**\n\n\u90a3\u4e48\u53d1\u73b0\uff0c\u201c\u6ca1\u6709\u6f0f\u6c34\u7684\u6c34\u7ba1\u201d\u7684\u610f\u601d\u662f\uff0c\u7f51\u683c\u4e2d\u6240\u6709\u7684\u683c\u5b50\u7684\u65ad\u5934\n\n**\u4e24\u4e24\u5339\u914d**\n\n\u53c8\u56e0\u4e3a\u9ed1\u767d\u67d3\u8272\u8fc7\uff0c\u8fd9\u4e2a\u5339\u914d\u7684\u884c\u4e3a\u53ea\u80fd\u5728\u9ed1\u767d\u4e24\u683c\u95f4\u5f62\u6210\n\n\u81f3\u6b64\u53d8\u6210\u4e86\u6211\u4eec\u719f\u6089\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709\u65cb\u8f6c\uff0c\u8fd9\u9053\u9898\u5df2\u7ecf\u53ef\u505a\n\n\u4e0b\u9762\u662f\u5982\u4f55\u5904\u7406\u65cb\u8f6c\n\n\u65cb\u8f6c\uff0c\u5982\u4e0a\u8ff0\u6240\u8bf4\uff0c\u5728\u4e0d\u8003\u8651\u76f4\u7ebf\u578b\u65f6\uff0c\u53ef\u4ee5\u770b\u4e3a\u662f\u5355\u70b9\u632a\u52a8\u6216\u8005\u662f\u5355\u70b9\u632a\u52a8\u7684\u52a0\u548c\n\n\u800c\u65cb\u8f6c\uff0c\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5efa\u7acb\u8d77\u8d39\u7528\u6d41\u6a21\u578b\n\n\u9996\u5148\u4e00\u4e2a\u70b9\u62c6\u4e3a4\u4e2a\u70b9\n\n\u6e90\u70b9\u5411\u6bcf\u4e00\u4e2a\u9ed1\u70b9\u65ad\u5934\u8fde\u4e00\u6761\u9650\u5236\u4e3a1\uff0c\u6743\u503c\u4e3a0\u7684\u8fb9\n\n\u6bcf\u4e00\u4e2a\u767d\u70b9\u65ad\u5934\u5411\u6c47\u70b9\u8fde\u4e00\u4e2a\u9650\u5236\u4e3a1\uff0c\u6743\u503c\u4e3a0\u7684\u8fb9\n\n\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\uff08\u4e0d\u8bba\u662f\u4e0d\u662f\u65ad\u5934\uff09\u76f8\u90bb\uff0c\u9ed1\u5411\u767d\u8fde\u4e00\u4e2a\u9650\u5236\u4e3a1\uff0c\u6743\u503c\u4e3a0\u7684\u8fb9\n\n//\u8fd9\u662f\u56e0\u4e3a\u901a\u8fc7\u65cb\u8f6c\u53ef\u4ee5\u66f4\u6539\u6d41\u7684\u65b9\u5411\uff0c\u4f46\u662f\u5339\u914d\u5173\u7cfb\u662f\u6b7b\u7684\n\n\u8fd9\u6837\u683c\u5b50\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u76f8\u90bb\u63a5\u5934\u5339\u914d\uff09\u5c31\u5904\u7406\u5e72\u51c0\u4e86\n\n\u4e0b\u9762\u5728\u683c\u5b50\u5185\u90e8\u8fde\u8fb9\uff0c\u4ee5\u5904\u7406\u65cb\u8f6c\u5173\u7cfb\n\n\u4e00\u5b57\u578b\n\n\u4ece\u552f\u4e00\u7684\u65ad\u5934\u50cf\u5de6\u53f3\u70b9\u5404\u8fde\u4e00\u4e2a\u6743\u503c\u4e3a1\uff0c\u9650\u5236\u4e3a1\u7684\u8fb9\uff0c\u6a21\u62df\u5de6\u65cb\u53f3\u65cb\n\n\u5411\u5bf9\u9762\u7684\u70b9\u8fde\u4e00\u4e2a\u6743\u503c\u4e3a2\u7684\u8fb9\uff0c\u6a21\u62df\u4e0b\u65cb\n\nL\u578b\n\u6bcf\u4e2a\u65ad\u5934\u5411\u5176\u5bf9\u9762\u70b9\u8fde\u4e00\u4e2a\u6743\u503c\u4e3a1\uff0c\u9650\u5236\u4e3a1\u7684\u8fb9\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u8fb9\u88ab\u6fc0\u6d3b\n\n\u6a21\u62df\u7684\u662f\u5de6\u65cb\u6216\u53f3\u65cb\uff0c\u5982\u679c\u540c\u65f6\u88ab\u6fc0\u6d3b\uff0c\u6a21\u62df\u4e0b\u65cb\n\nT\u578b\n\u5982\u679c\u8fd9\u4e2a\u65ad\u5934\u548c\u552f\u4e00\u7684\u7a7a\u70b9\u76f8\u8fde\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65ad\u5934\u5411\u7a7a\u70b9\u8fde\u4e00\u4e2a\u6743\u503c\u4e3a1\uff0c\u9650\u5236\u4e3a1\u7684\u8fb9\n\n\u6a21\u62df\u5de6\u65cb\u548c\u53f3\u65cb\uff0c\u7a7a\u70b9\u5bf9\u9762\u7684\u65ad\u5934\uff0c\u5411\u7a7a\u70b9\u8fde\u4e00\u4e2a\u6743\u503c\u4e3a2\uff0c\u9650\u5236\u4e3a1\u7684\u8fb9\uff0c\u6a21\u62df\u4e0b\u65cb\n\n0\uff0c\u76f4\u7ebf\u578b\uff0c\u548c\u5341\u5b57\u578b\n\n\u8981\u4e48\u4e0d\u80fd\u8f6c\uff0c\u8981\u4e48\u8f6c\u4e86\u548c\u6ca1\u8f6c\u4e00\u6837\uff0c\u4e0d\u52a0\u8fde\u8fb9\n\n\u7136\u540e\u5728\u8fd9\u4e0a\u9762\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\n\n\u8d39\u7528\u6d41\u5462\uff0c\u5c31\u662f\u628a\u6700\u5927\u6d41\u4e2d\u7684bfs\u53d8\u6210spfa\uff0c\u5e76\u4e14\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\n\n\u7136\u540e\u53bb\u589e\u5e7f\u8fd9\u6761\u8def\u5f84\u5373\u53ef\n\nPS\u4ee3\u7801\u4f1a\u6781\u5176\u6076\u5fc3\uff0c\u8bf7\u6ce8\u610f\u538b\u884c\n\n\u4e0a\u4ee3\u7801~\n\n\n\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<queue>\n    using namespace std;\n    int n;int m;int s;int t;int map[2010];\n    int d[9020];bool book[9020];int cnt=1;int alist[9020];\n    queue <int> q;struct data{int v;int nxt;int cot;int val;}edge[400050];\n    struct node{int v;int n;int c;}fr[8020];int flow;int expflow;int cost;\n    bool flag;bool pflag;//\u6ce8\u610f\u90bb\u63a5\u8868\u7684cnt\u8981\u8bbe\u4e3a1\n    inline void add2(int u,int v,int val)//\u8fd9\u91cc\u4e3a\u4e86\u907f\u514d\u9ed1\u70b9\u767d\u70b9\u8fb9\u5411\u76f8\u53cd\u7684\u95ee\u9898\u5199\u4e86\u4e24\u4e2aadd\n    {\n        //\u6b63\u5411\u53cd\u5411\u8fb9\u4e00\u8d77\u52a0\uff0c\u4e0d\u7136\u4ee3\u7801\u4f1a\u60e8\u4e0d\u5fcd\u7779\n        edge[++cnt].v=v;edge[cnt].nxt=alist[u];alist[u]=cnt;\n        edge[cnt].val=val;edge[cnt].cot=1;\n        edge[++cnt].v=u;edge[cnt].nxt=alist[v];alist[v]=cnt;\n        edge[cnt].val=-val;edge[cnt].cot=0;return;\n    }\n    inline void add(int u,int v,int val)\n    {\n        if(flag==true){add2(v,u,val);return;}//flag\u7528\u6765\u5224\u65ad\u662f\u9ed1\u8fd8\u662f\u767d\uff0c\u5982\u679c\u767d\u4e86\uff0c\u53cd\u5411\n        edge[++cnt].v=v;edge[cnt].nxt=alist[u];alist[u]=cnt;\n        edge[cnt].val=val;edge[cnt].cot=1;\n        edge[++cnt].v=u;edge[cnt].nxt=alist[v];alist[v]=cnt;\n        edge[cnt].val=-val;edge[cnt].cot=0;return;\n    }\n    inline int f(int i,int j){return i*(n*m+1)+j;}//\u4e00\u4e9b\u5904\u7406\u5751\u7239\u6570\u636e\u7684\u5c0f\u51fd\u6570\n    inline bool check(int i,int j){return 0<i&&i<=n&&0<j&&j<=m;}\n    inline int g(int i,int j){return (i-1)*m+j;}//\u540c\u6837\u662f\u4e3a\u4e86\u538b\u884c\n    inline bool spfa()//\u4e3a\u4e86\u538b\u884cspfa\u7684\u8fd4\u56de\u503c\u8bbe\u6210\u4e86bool\n    {\n        for(int i=1;i<=n*m*4+5;i++){d[i]=0x3f3f3f3f;book[i]=false;}\n        d[s]=0;q.push(s);book[s]=true;\n        while(!q.empty())\n        {\n            int now=q.front();q.pop();book[now]=false;\n            int nxt=alist[now];while(nxt)\n            {\n                int v=edge[nxt].v;int cot=edge[nxt].cot;int val=edge[nxt].val;\n                if(d[v]>d[now]+val&&cot!=0)\n        {d[v]=d[now]+val;fr[v].v=now;fr[v].c=cot;fr[v].n=nxt;if(!book[v])q.push(v);}\n                nxt=edge[nxt].nxt;//\u8bb0\u7740\u8bb0\u5f55\u65b9\u6848\n            }\n        }\n        if(d[t]==0x3f3f3f3f)return false;int mincot=0x3f3f3f3f;\n        for(int p=t;p!=s;p=fr[p].v){mincot=min(mincot,fr[p].c);}//\u627e\u51fa\u6d41\u91cf\u74f6\u9888    for(intp=t;p!=s;p=fr[p].v){edge[fr[p].n].cot=mincot;edge[fr[p].n^1].cot+=mincot;}\n        flow+=mincot;cost+=d[t]*mincot;return true;//\u589e\u5e7f\u548c\u8ba1\u7b97\u8d39\u7528\n    }\n    int main()\n    {\n        scanf(\"%d%d\",&n,&m);\n        s=n*m*4+4;t=n*m*4+5;\n        for(int i=1;i<=n;i++){for(int j=1;j<=m;j++)scanf(\"%d\",&map[(i-1)*m+j]);}\n        for(int i=1;i<=n;i++)//\u5f00\u59cb\u4e86\uff0c\u5efa\u56fe\uff01\n        {\n            for(int j=1;j<=m;j++)\n            {\n                int p=(i-1)*m+j;if((i+j)%2==1)//\u5224\u65ad\u662f\u9ed1\u70b9\u8fd8\u662f\u767d\u70b9\n                {flag=false;for(int k=0;k<=3;k++){if((map[p]>>k)&1\uff09{add(s,f(k,p),0);expflow++;}}}\n                else {flag=true;for(int k=0;k<=3;k++){if((map[p]>>k)&1){add(t,f(k,p),0);}}}\n                if(!flag)//\u66b4\u529b\u679a\u4e3e\u4e0a\u4e0b\u5de6\u53f3\u8fde\u8fb9\n                {\n                    if(check(i-1,j)){add(f(0,p),f(2,g(i-1,j)),0);}\n                    if(check(i+1,j)){add(f(2,p),f(0,g(i+1,j)),0);}\n                    if(check(i,j-1)){add(f(3,p),f(1,g(i,j-1)),0);}\n                    if(check(i,j+1)){add(f(1,p),f(3,g(i,j+1)),0);}\n                }\n                switch(map[p])//\u66b4\u529b\u679a\u4e3e\u683c\u5b50\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u53d6\u503c0-15\n                {\n                    case 0:{break;}//\u6ce8\u610f\u7279\u5224\u4e0d\u7528\u8fde\u8fb9\u7684\u683c\u5b50\n                    case 1:{add(f(0,p),f(1,p),1);add(f(0,p),f(2,p),2);add(f(0,p),f(3,p),1);break;}\n                    case 2:{add(f(1,p),f(0,p),1);add(f(1,p),f(2,p),1);add(f(1,p),f(3,p),2);break;}\n                    case 3:{add(f(0,p),f(2,p),1);add(f(1,p),f(3,p),1);break;}\n                    case 4:{add(f(2,p),f(1,p),1);add(f(2,p),f(0,p),2);add(f(2,p),f(3,p),1);break;}\n                    case 5:{break;}\n                    case 6:{add(f(2,p),f(0,p),1);add(f(1,p),f(3,p),1);break;}\n                    case 7:{add(f(0,p),f(3,p),1);add(f(1,p),f(3,p),2);add(f(2,p),f(3,p),1);break;}\n                    case 8:{add(f(3,p),f(0,p),1);add(f(3,p),f(1,p),2);add(f(3,p),f(2,p),1);break;}\n                    case 9:{add(f(0,p),f(2,p),1);add(f(3,p),f(1,p),1);break;}\n                    case 10:{break;}\n                    case 11:{add(f(0,p),f(2,p),2);add(f(1,p),f(2,p),1);add(f(3,p),f(2,p),1);break;}\n                    case 12:{add(f(2,p),f(0,p),1);add(f(3,p),f(1,p),1);break;}\n                    case 13:{add(f(0,p),f(1,p),1);add(f(2,p),f(1,p),1);add(f(3,p),f(1,p),2);break;}\n                    case 14:{add(f(1,p),f(0,p),1);add(f(2,p),f(0,p),2);add(f(3,p),f(0,p),1);break;}\n                    case 15:{break;}\n                }\n            }\n        }\n        while(spfa());//\u8d39\u7528\u6d41\n        if(flow!=expflow)printf(\"-1\");\n        else printf(\"%d\",cost);\n        return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n    }\n\n```",
        "postTime": 1515667777,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\uff08infinityloop\uff09\u3011"
    },
    {
        "content": "\u4f17\u6240\u5468\u77e5\uff0c\u9ed1\u8272\u7684\u7f51\u7edc\u6d41\u7684\u601d\u7ef4\u96be\u5ea6\u90fd\u6bd4\u8f83\u9ad8\uff0c\u5f88\u9002\u5408\u8bad\u7ec3\u7f51\u7edc\u6d41\u5efa\u6a21\uff0c\u8fd9\u9053\u80fd\u8bc4\u9ed1\u8272\u7f51\u7edc\u6d41\u9898\u8d28\u91cf\u524d\u4e09\uff0c~~\u5f53\u7136\u9ebb\u70e6\u7a0b\u5ea6\u6211\u8bc4\u7b2c\u4e00\u3002~~\n\n\u7136\u540e\u6211\u4eec\u4e00\u770b\u9898\uff0c\u901a\u8fc7 ~~\u7b97\u6cd5\u6807\u7b7e~~ **\u65b9\u683c\u9898\u767e\u5206\u4e4b\u4e94\u5341\u90fd\u662f\u8003\u7f51\u7edc\u6d41** \u8fd9\u4e00\u53e5\u81f3\u7406\u540d\u8a00\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u9053\u9898\u8981\u8003\u7f51\u7edc\u6d41\u3002\u4f46\u662f\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f\u5230\u8fbe\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u90a3\u4e48\u5c31\u662f\u8d39\u7528\u6d41\u3002\n\n\u8d39\u7528\u6d41\u7684\u8981\u6c42\u72b6\u6001\u5927\u591a\u6570\u65f6\u5019\u662f\u6700\u5927\u6d41\uff0c\u90a3\u4e48\u5c31\u4f9d\u7740\u7ba1\u5b50\u5168\u90e8\u63a5\u4e0a $=$ \u6700\u5927\u6d41\u8fd9\u4e2a\u601d\u8def\u6765\u5efa\u6a21\u3002\n\n\u9996\u5148\u6765\u60f3\u4e00\u4e0b\u5982\u679c\u6c34\u7ba1\u4e0d\u4f1a\u8f6c\u600e\u4e48\u5224\u65ad\u6709\u6ca1\u6709\u6c34\u7ba1\u6f0f\u4e86\u3002\n\n\u65b9\u683c\u7f51\u7edc\u6d41\u80af\u5b9a\u8981\u67d3\u8272\uff0c\u5c31\u9ed1\u767d\u67d3\u8272\u6765\u770b\u770b\uff08\u8d3c\u4e11\uff0c\u5c06\u5c31\u770b\u5427\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hp3yu7qi.png)\n\n\u4e00\u4e2a\u5e38\u89c4\u601d\u8def\u662f\u628a\u9ed1\u70b9\u8fde\u6e90\u767d\u70b9\u63a5\u6c47\uff0c\u7136\u540e\u628a\u683c\u5b50\u4e4b\u95f4\u6709\u8fde\u901a\u7684\u8fb9\u7684\u4e24\u4e2a\u683c\u5b50\u8fde\u8d77\u6765\u8dd1\u6700\u5927\u6d41\uff0c\u5047\u5982\u6700\u5927\u6d41$\\times 2 =$\u63a5\u53e3\u6570\u90a3\u5c31\u8bf4\u660e\u6ca1\u6709\u6f0f\u7684\u3002\n\n\uff08\u554a\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5224\u65ad\uff1f\u56e0\u4e3a\u6bcf\u4e2a\u9ed1\u70b9\u7684\u63a5\u53e3\u4e0e\u6bcf\u4e00\u4e2a\u767d\u70b9\u7684\u63a5\u53e3\u63a5\u5728\u4e00\u8d77\u53ef\u4ee5\u4ea7\u751f\u6d41\u91cf\u4e3a $1$ \u7684\u8d21\u732e\uff0c\u90a3\u4e48\u53c2\u4e0e\u8d21\u732e\u7684\u63a5\u53e3\u5c31\u662f\u6700\u5927\u6d41\u7684\u4e24\u500d\u5566\uff0c\u5047\u5982\u6700\u5927\u6d41\u4e24\u500d\u5c0f\u4e8e\u63a5\u53e3\u6570\uff0c\u90a3\u4e48\u8bf4\u660e\u6709\u63a5\u53e3\u6ca1\u6709\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5\u6ca1\u6709\u63a5\u53e3\u548c\u5b83\u914d\u5bf9\uff0c\u6240\u4ee5\u662f\u4e0d\u7b26\u5408\u7684\uff09\n\n\u597d\u4e86\uff0c\u73b0\u5728\u6765\u770b\u5982\u679c\u6c34\u7ba1\u8981\u8f6c\u4f1a\u600e\u4e48\u6837\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f1a\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e94\u4e2a\u70b9\uff0c\u5206\u522b\u662f\u4e0a\u4e0b\u5de6\u53f3\uff0c\u4ee5\u53ca\u4e2d\u95f4\u7684\uff0c\u5c31\u50cf\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/diazzu6p.png)\n\n\u521a\u521a\u8bf4\u7684\u9ed1\u70b9\u63a5\u6e90\u767d\u70b9\u63a5\u6c47\uff0c\u90a3\u4e48\u628a\u683c\u5b50\u4e2d\u7684\u4e2d\u5fc3\u90a3\u4e2a\u70b9\u63a5\u4e0a\u6e90\u4e0e\u6c47\u5c31\u53ef\u4ee5\u4e86\uff08\u6d41\u91cfINF\uff09\u3002\u7136\u540e\u628a\u9ed1\u70b9\u548c\u767d\u70b9\u901a\u8fc7\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u70b9\u8fde\u63a5\u8d77\u6765\uff08\u6d41\u91cf $1$ \uff0c\u80af\u5b9a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ea\u4f1a\u6328\u4e00\u6b21\u554a\uff09\u3002\u7136\u540e\u6839\u636e\u70b9\u5185\u7ba1\u5b50\u7684\u6837\u5f0f\uff0c\u628a\u4e2d\u5fc3\u7684\u70b9\u548c\u4e0a\u4e0b\u5de6\u53f3\u7684\u70b9\u8fde\u63a5\u8d77\u6765\uff08\u6d41\u91cf\u4e3a $1$ \uff0c\u4f60\u80af\u5b9a\u4e00\u4e2a\u65b9\u5411\u53ea\u80fd\u6d41\u4e00\u6b21\uff0c\u8fd8\u6709\u539f\u56e0\u4e0b\u9762\u8bf4\uff09\u3002\u6bd4\u65b9\u8bf4\u6709\u5411\u4e0a\u65b9\u5411\u7684\u7ba1\u5b50\u5c31\u628a\u4e2d\u5fc3\u70b9\u4e0e\u4e0a\u9762\u7684\u70b9\u8fde\u8d77\u6765\uff0c\u5982\u6b64\u5982\u6b64\u3002\n\n\u51c6\u5907\u5de5\u4f5c\u5c31\u7eea\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u8fdb\u5165\u5230\u8fd9\u4e2a\u9898\u771f\u6b63\u7384\u5999\u4e4b\u5904\u4e86\uff0c\u65cb\u8f6c\u7ba1\u5b50\u5e94\u8be5\u600e\u4e48\u5904\u7406\u3002\n\n\u5148\u6765\u770b\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u63a5\u53e3\u7684\u90a3\u4e2a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oootmap9.png)\n\n\u73b0\u5728\uff0c\u6211\u4eec\u8981\u8ba9\u5b83\u8f6c\u8d77\u6765\u4e86\u3002\u6bd4\u65b9\u8bf4\u6211\u4eec\u51c6\u5907\u8981\u8ba9\u5b83\u80fd\u5411\u53f3\u8f6c\u3002\u6211\u4eec\u5c31\u8fde\u4e00\u6761\u9644\u52a0\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zawwre37.png)\n\n\u7d2b\u8272\u7684\u8fb9\u6d41\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a $1$ \u3002\u4ec0\u4e48\u610f\u601d\uff1f\u5176\u5b9e\u53d1\u73b0\uff0c\u8d70\u9ed1\u8fb9-\u7d2b\u8fb9\u5c31\u7b49\u4e8e\u628a\u8fd9\u4e2a\u53ea\u6709\u4e00\u4e2a\u63a5\u53e3\u7684\u8f6c\u5230\u53f3\u8fb9\uff0c\u7136\u540e\u8d39\u7528\u4e3a $1=$ \u8f6c\u4e86\u4e00\u4e0b\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u628a\u4e2d\u5fc3\u70b9\u548c\u53f3\u8fb9\u7684\u70b9\u8fde\u8d77\u6765\u5462\uff1f\u5982\u679c\u771f\u7684\u8fd9\u4e48\u5e72\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u4f1a\u6d41\u51fa $2$ \u4e2a\u5355\u4f4d\u7684\u6d41\u91cf\uff0c\u5c31\u7b49\u4e8e\u6709\u4e24\u4e2a\u63a5\u53e3\uff0c\u5f88\u660e\u663e\u662f\u4e0d\u5408\u9898\u610f\u7684\u3002\u800c\u4e0a\u65b9\u7684\u63a5\u6cd5\u5176\u5b9e\u4fdd\u8bc1\u4e86\u6d41\u91cf\u9650\u5b9a\u4e3a $1$ \u3002\u7a0d\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u6240\u6709\u7684\u7ba1\u5b50\u90fd\u662f\uff1a\n\n- \u901a\u8fc7\u9ed1\u8fb9\u9650\u5236\u6d41\u91cf\u3002\n\n- \u901a\u8fc7\u7d2b\u8fb9\u8fbe\u6210\u65cb\u8f6c\uff0c\u8d39\u7528\u4e3a\u65cb\u8f6c\u6b21\u6570\u3002\n\n\u90a3\u4e48\u660e\u767d\u4e86\u53f3\u8fb9\u4e4b\u540e\uff0c\u5de6\u8fb9\u540c\u7406\uff1a\uff08\u4ee5\u4e0b\u6240\u6709\u7d2b\u8272\u8fb9\u7684\u6d41\u91cf\u90fd\u662f $1$ ,\u8d39\u7528\u5df2\u6807\u51fa\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gd2d7o0r.png)\n\n\u90a3\u4e48\u4e0b\u9762\u5462\uff1f\u4ece\u4e0a\u9762\u8f6c\u5230\u4e0b\u9762\u8981 $2$ \u6b21\uff0c\u90a3\u4e48\u8d39\u7528\u5c31\u662f $2$ \u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7bc3pb28.png)\n\n\u4e4b\u540e\u6240\u6709\u63a5\u53e3\u4e3a $1$ \u7684\u7ba1\u5b50\u90fd\u53ef\u4ee5\u8fd9\u6837\u5904\u7406\u3002~~\u7136\u540e\u5269\u4e0b\u7684\u7ba1\u5b50\u4f60\u53ef\u4ee5\u81ea\u5df1\u63a8\u6d4b\u51fa\u6765\u4e86\uff0c\u52a0\u6cb9=\uff09~~\u8fd8\u662f\u8981\u8bf4\u4e00\u4e0b\uff1a\n\nL\u578b\u7ba1\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0jzjbmwr.png)\n\n\uff08\u4f60\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8d39\u7528\u4e3a $2$ \u7684\u8fb9\uff0c\u4e5f\u5c31\u662f\u8f6c\u4e24\u6b21\u5462\uff1f\u5047\u5982\u4f60\u8f6c\u4e86\u4e24\u6b21\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u4e24\u6761\u7d2b\u8fb9\u90fd\u8981\u8d70\uff0c\u8d39\u7528\u5c31\u662f $2$\uff09\n\nT\u578b\u7ba1\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/234knshm.png)\n\n\uff08\u5047\u8bbe\u8f6c\u4e86\u4e00\u4e0b\uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u8fb9\u4e00\u5b9a\u8fd8\u5728\uff0c\u7136\u540e\u6210\u4e3a\u4e0b\u9762\u7684\u8fb9\u7684\u4e00\u5b9a\u662f\u5de6\u53f3\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u662f\u5de6\u53f3\u5411\u4e0b\u8fde\u8d39\u7528 $1$ \u7684\u8fb9\uff1b\u8f6c\u4e86\u4e24\u4e0b\u5c31\u662f\u4e0a\u9762\u7684\u8fb9\u6210\u4e3a\u4e86\u4e0b\u9762\u7684\u8fb9\u800c\u5de6\u53f3\u4e0d\u53d8\uff0c\u6240\u4ee5\u662f\u8fde\u8d39\u7528 $2$ \u7684\u8fb9\uff09\n\n\u76f4\u7ebf\u7ba1 & \u5341\u5b57\u7ba1\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eitz3wcf.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/evrvhfj3.png)\n\n\u8fd9\u4e24\u4e2a\u90fd\u4e0d\u80fd\u8f6c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8fde\u9644\u52a0\u8fb9\u3002\n\n\u7136\u540e\u5efa\u56fe\u5c31\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u53ef\u3002\u5224\u65ad\u662f\u5426\u7b26\u5408\u4e0a\u6587\u5df2\u8bb2\uff0c\u7136\u540e\u8fd9\u4e2a\u9ed1\u9898\u5c31\u6ca1\u6709\u4e86\u3002\n\ncode\uff1a~~\u5efa\u8fb9\u8ddf\u732a\u56fd\u6740\u6709\u4e00\u62fc~~\n\n```\n#include<bits/stdc++.h>\n#define S 999999\n#define T 1000000\n#define U 150000\n#define R 300000\n#define D 450000\n#define L 600000\nusing namespace std;\nint min_cost,max_flow,flows;\nint fi[1000001],nx[1000001],to[1000001],val[1000001],co[1000001],in[1000001],min_flow[1000001],pre[1000001],dis[1000001],tot=1;\nvoid link1(int a,int b,int c,int d)\n{\n\tnx[++tot]=fi[a];\n\tfi[a]=tot;\n\tto[tot]=b;\n\tval[tot]=c;\n\tco[tot]=d;\n\tnx[++tot]=fi[b];\n\tfi[b]=tot;\n\tto[tot]=a;\n\tval[tot]=0;\n\tco[tot]=-d;\n}\nvoid link2(int b,int a,int c,int d)\n{\n\tnx[++tot]=fi[a];\n\tfi[a]=tot;\n\tto[tot]=b;\n\tval[tot]=c;\n\tco[tot]=d;\n\tnx[++tot]=fi[b];\n\tfi[b]=tot;\n\tto[tot]=a;\n\tval[tot]=0;\n\tco[tot]=-d;\n}\ntypedef void l(int,int,int,int);\nbool spfa()\n{\n\tmemset(dis,0x3f3f3f,sizeof(dis));\n\tqueue<int>que;\n\tque.push(S);\n\tdis[S]=0;\n\tin[S]=1;\n\tmin_flow[S]=0x7fffffff;\n\twhile(!que.empty())\n\t{\n\t\tint x=que.front();\n\t\tque.pop();\n\t\tin[x]=0;\n\t\tfor(int i=fi[x];i;i=nx[i])\n\t\t{\n\t\t\tint v=to[i];\t\t\t\n\t\t\tif(val[i]&&dis[v]>dis[x]+co[i])\n\t\t\t{\n\t\t\t\tdis[v]=dis[x]+co[i];\n\t\t\t\tpre[v]=i;\n\t\t\t\tmin_flow[v]=min(val[i],min_flow[x]);\n\t\t\t\tif(!in[v])\n\t\t\t\t{\n\t\t\t\t\tque.push(v);\n\t\t\t\t\tin[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T]<0x73f3f3f;\n}\nvoid ek()\n{\n\twhile(spfa())\n\t{\n\t\tmax_flow+=min_flow[T];\n\t\tmin_cost+=(min_flow[T]*dis[T]);\n\t\tint x=T;\n\t\twhile(x!=S)\n\t\t{\n\t\t\tint i=pre[x];\t\n\t\t\tval[i]-=min_flow[T];\n\t\t\tval[i^1]+=min_flow[T];\n\t\t\tx=to[i^1];\n\t\t}\n\t}\n}\t\nl *link[2]={link2,link1};\n#define lk link[(i+j)%2]\nint main()\n{\n\tint n,m,k;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif((i+j)%2==1)\n\t\t\t{\n\t\t\t\tlk(S,i*300+j,0x7ffffff,0);\n\t\t\t\tif(i>1) lk(i*300+j+U,(i-1)*300+j+D,1,0);\n\t\t\t\tif(i<n) lk(i*300+j+D,(i+1)*300+j+U,1,0);\n\t\t\t\tif(j>1) lk(i*300+j+L,i*300+j-1+R,1,0);\n\t\t\t\tif(j<m)\tlk(i*300+j+R,i*300+j+1+L,1,0);\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlk(T,i*300+j,0x7ffffff,0);\n\t\t\t}\n\t\t\tcin>>k;\n\t\t\tint posi=i*300+j;\n\t\t\tif(k&1) lk(posi,posi+U,1,0),flows++;\n\t\t\tif(k&2) lk(posi,posi+R,1,0),flows++;\n\t\t\tif(k&4) lk(posi,posi+D,1,0),flows++;\n\t\t\tif(k&8) lk(posi,posi+L,1,0),flows++;\n\t\t\tswitch(k)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tlk(posi+U,posi+L,1,1);\n\t\t\t\t\tlk(posi+U,posi+R,1,1);\n\t\t\t\t\tlk(posi+U,posi+D,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tlk(posi+R,posi+U,1,1);\n\t\t\t\t\tlk(posi+R,posi+D,1,1);\n\t\t\t\t\tlk(posi+R,posi+L,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tlk(posi+U,posi+D,1,1);\n\t\t\t\t\tlk(posi+R,posi+L,1,1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tlk(posi+D,posi+L,1,1);\n\t\t\t\t\tlk(posi+D,posi+R,1,1);\n\t\t\t\t\tlk(posi+D,posi+U,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tlk(posi+D,posi+U,1,1);\n\t\t\t\t\tlk(posi+R,posi+L,1,1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tlk(posi+U,posi+L,1,1);\n\t\t\t\t\tlk(posi+D,posi+L,1,1);\n\t\t\t\t\tlk(posi+R,posi+L,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tlk(posi+L,posi+U,1,1);\n\t\t\t\t\tlk(posi+L,posi+D,1,1);\n\t\t\t\t\tlk(posi+L,posi+R,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tlk(posi+U,posi+D,1,1);\n\t\t\t\t\tlk(posi+L,posi+R,1,1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tlk(posi+L,posi+D,1,1);\n\t\t\t\t\tlk(posi+R,posi+D,1,1);\n\t\t\t\t\tlk(posi+U,posi+D,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tlk(posi+L,posi+R,1,1);\n\t\t\t\t\tlk(posi+D,posi+U,1,1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\tlk(posi+U,posi+R,1,1);\n\t\t\t\t\tlk(posi+D,posi+R,1,1);\n\t\t\t\t\tlk(posi+L,posi+R,1,2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 14:\n\t\t\t\t\tlk(posi+L,posi+U,1,1);\n\t\t\t\t\tlk(posi+R,posi+U,1,1);\n\t\t\t\t\tlk(posi+D,posi+U,1,2);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tek();\n\tif(max_flow*2<flows)\n\t{\n\t\tcout<<-1<<endl;\n\t}\n\telse\n\t{\n\t\tcout<<min_cost<<endl;\n\t}\n}\n```\n",
        "postTime": 1635948310,
        "uid": 167279,
        "name": "Danno0v0",
        "ccfLevel": 7,
        "title": "P4003"
    },
    {
        "content": "~~\u5c31\u6211\u7684\u5efa\u56fe\u8fd9\u4e48\u6e05\u5947\uff1f~~\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u7f51\u683c\u56fe\u800c\u4e14\u8fd8\u6709\u5404\u79cd\u5947\u602a\u7684\u5f62\u72b6\u548c\u9650\u5236\u4ee5\u53ca\u5947\u602a\u7684\u6570\u636e\u8303\u56f4\uff0c\u53ef\u4ee5\u5f80\u7f51\u7edc\u6d41\u8003\u8651\u3002\n\n\u5982\u679c\u4e00\u4e2a\u56fe\u4e0d\u6f0f\u6c34\uff0c\u90a3\u4e48\u6bcf\u4e2a\u683c\u5b50\u7684\u5ea6\u6570\u5fc5\u5b9a\u662f\u8fd9\u4e2a\u683c\u5b50\u7684\u6c34\u7ba1\u7684\u5206\u53c9\u6570\u3002\n\n\u5bf9\u7f51\u683c\u56fe\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\uff0c\u5219\u95ee\u9898\u53d8\u4e3a\u4ece\u9ed1\u70b9\u5411\u767d\u70b9\u63d0\u4f9b\u4e00\u4e9b\u5ea6\u6570\uff0c\u4f7f\u5f97\u6e90\u70b9\u5411\u9ed1\u70b9\u8fde\u7684\u8fb9\u548c\u767d\u70b9\u5411\u6c47\u70b9\u8fde\u7684\u8fb9\u5747\u6ee1\u6d41\u3002\n\n\u9898\u76ee\u8981\u6c42\u65cb\u8f6c\u6b21\u6570\u6700\u5c11\uff0c\u8003\u8651\u8d39\u7528\u6d41\u3002\n\n\u9996\u5148\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e94\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u5b83\u5f80\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u7684\u8fde\u8fb9\u548c\u5b83\u672c\u8eab\u3002\n\n\u4ee5\u4e0b\u53ea\u8ba8\u8bba\u9ed1\u683c\u5b50\u3002\n\n\u4ece $s$ \u5411\u8fd9\u4e2a\u683c\u5b50\u672c\u8eab\u7684\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8fd9\u4e2a\u683c\u5b50\u6c34\u7ba1\u5206\u53c9\u6570\uff08\u8bbe\u4e3a $x$\uff09\uff0c\u8d39\u7528\u4e3a $0$\u3002\u8868\u793a\u4e0d\u7ba1\u600e\u4e48\u65cb\u8f6c\u5b83\u90fd\u4f1a\u8fde\u63a5 $x$ \u4e2a\u65b9\u5411\u3002\n\n\u683c\u5b50\u6309\u7167\u5206\u53c9\u6570\u548c\u662f\u5426\u4e3a\u76f4\u7ebf\u5206\u4e3a\u4ee5\u4e0b $5$ \u79cd\u60c5\u51b5\uff1a\n\n## 1\u5206\u53c9\uff08\u5706\u5708\u5f62\uff09\n\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5411\u4e0a\u4e0b\u5de6\u53f3\u5404\u8fde\u4e00\u6761\u5bb9\u91cf $1$\uff0c \u8d39\u7528\u4e3a\u539f\u65b9\u5411\u65cb\u8f6c\u5230\u8fd9\u4e2a\u65b9\u5411\u7684\u65cb\u8f6c\u6b21\u6570\u5373\u53ef\u3002\n\n## 2\u5206\u53c9\uff08\u76f4\u7ebf\u5f62\uff09\n\n\u8fd9\u79cd\u60c5\u51b5\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u7ebf\u4e0d\u80fd\u8f6c\uff0c\u6839\u636e\u76f4\u7ebf\u662f\u6a2a\u7740\u7684\u8fd8\u662f\u7ad6\u7740\u7684\u5411\u4e0a\u4e0b\u5404\u8fde\u5bb9\u91cf $1$ \u8d39\u7528 $0$ \u7684\u8fb9\u6216\u5411\u5de6\u53f3\u8fde\u8fb9\u3002\n\n## 2\u5206\u53c9\uff08\u8f6c\u5f2f\u5f62\uff09\n\n\u8fd9\u79cd\u60c5\u51b5\u5fc5\u987b\u6a2a\u65b9\u5411\u6709\u4e00\u4e2a\u6c34\u7ba1\uff0c\u7ad6\u65b9\u5411\u6709\u4e00\u4e2a\u6c34\u7ba1\uff0c\u6240\u4ee5\u518d\u989d\u5916\u5efa\u7acb\u4e24\u4e2a\u70b9\u8868\u793a\u6a2a\u65b9\u5411\u548c\u7ad6\u65b9\u5411\uff0c\u7136\u540e\u5411\u6a2a\u70b9\u548c\u7ad6\u70b9\u5404\u8fde\u4e00\u6761\u5bb9\u91cf $1$ \u8d39\u7528 $0$ \u7684\u8fb9\u3002\n\n\u518d\u4ece\u6a2a\u70b9\u5411\u4e0a\u4e0b\u8fde\u8fb9\uff0c\u7ad6\u70b9\u5411\u5de6\u53f3\u8fde\u8fb9\uff0c\u5bb9\u91cf\u5747\u4e3a $1$\uff0c\u8d39\u7528\u4e3a\u5f00\u59cb\u6c34\u7ba1\u7684\u65b9\u5411\u662f\u5426\u671d\u5411\u4e86\u8fd9\u91cc\uff0c\u5982\u679c\u662f\u5219\u4e3a $0$\uff0c\u5426\u5219\u4e3a $1$\u3002\n\n## 3\u5206\u53c9\uff08T\u5b57\u5f62\uff09\n\n\u8fd9\u4e2a\u60c5\u51b5\u770b\u8d77\u6765\u5f88\u96be\u641e\u2026\u2026\n\n~~\u6ca1\u4e8b\u5927\u4e0d\u4e86\u6211\u9488\u5bf94\u79cdT\u5f62\u5404\u62c6\u4e00\u4e2a\u70b9\u5c31\u597d\u4e86~~\n\n\u4f46\u8fd9\u6837\u505a\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6d41\u91cf\u4f1a\u5230\u5904\u8dd1\uff0c~~\u800c\u4e14\u7801\u91cf\u6bd4\u8f83\u529d\u9000\u3002~~\n\n\u90a3\u6211\u4eec\u5c31\u76f4\u63a5\u6309\u7167 $1$ \u5206\u53c9\u7684\u8fde\u8fb9\u6539\u4e00\u6539\u8d39\u7528\uff01\n\n\u5047\u8bbe\u662f\u8fd9\u79cd\u671d\u4e0b\u7684T\u5f62\uff1a\n\n![](https://i.loli.net/2021/06/29/JSYfADvwcZpMBL8.jpg)\n\n\u8bbe\u5411\u4e0a\u9762\u8fde\u7684\u8fb9\u8d39\u7528\u4e3a $a_1$\uff0c\u5411\u5de6\u8fde\u7684\u8fb9\u8d39\u7528\u4e3a $a_2$\uff0c\u5411\u53f3\u8fde\u7684\u8fb9\u8d39\u7528\u4e3a $a_3$\uff0c\u5411\u4e0b\u4e3a $a_4$\u3002\n\n\u90a3\u4e48\u6839\u636e\u5b9e\u9645\u7684\u65cb\u8f6c\u6b21\u6570\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u8d39\u7528\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n$$\n\\begin{cases}\na_1+a_2+a_3=2\\\\\na_1+a_2+a_4=1\\\\\na_1+a_3+a_4=1\\\\\na_2+a_3+a_4=0\n\\end{cases}\n$$\n\n\u89e3\u4e00\u4e0b\u65b9\u7a0b\u53d1\u73b0 $a_1=4/3,a_2=a_3=1/3,a_4=-2/3$\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6280\u5de7\u53ef\u4ee5\u907f\u514d\u5c0f\u6570\u8d39\u7528\u6d41\u5e26\u6765\u7684\u5e38\u6570\uff0c\u56e0\u4e3a\u6574\u4e2a\u56fe\u4e2d\u53ea\u6709\u8fd9\u4e00\u4e2a\u5730\u65b9\u6709\u5206\u6570\u7684\u8d39\u7528\u5e76\u4e14\u5206\u6bcd\u90fd\u662f $3$\uff0c\u6240\u4ee5\u53ea\u8981\u628a\u6240\u6709\u8fb9\u7684\u8d39\u7528\u4e58 $3$\uff0c\u8f93\u51fa\u7684\u65f6\u5019\u9664\u56de\u6765\u5c31\u597d\u4e86\u3002\n\n## 4\u5206\u53c9\uff08\u5341\u5b57\u5f62\uff09\n\n\u5982\u679c\u770b\u61c2\u4e86\u4e0a\u9762\u7684\u8fde\u8fb9\u8fd9\u91cc\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\uff08\n\n\u5411\u4e0a\u4e0b\u5de6\u53f3\u5404\u8fde\u4e00\u6761\u5bb9\u91cf $1$ \u8d39\u7528 $0$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u767d\u70b9\u5c31\u662f\u628a\u4e0a\u9762\u7684\u8fde\u8fb9\u5168\u90e8\u53cd\u8fc7\u6765\u4e86\uff0c\u4e3a\u4e86\u907f\u514d\u590d\u5236\u7c98\u8d34\u4f7f\u5f97\u4ee3\u7801\u770b\u8d77\u6765\u5f88\u957f\u6211\u7528\u4e86rev\u53d8\u91cf\u6807\u8bb0\u3002\n\n\u7136\u540e\u6709\u4e2a\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u6bd4\u5982 $(x,y)$ \u7684\u9ed1\u70b9\u7684\u4e0a\u65b9\u8fde $(x-1,y)$ \u7684\u767d\u70b9\u7684\u4e0b\u65b9\u7b49\u7b49\uff0c\u5f88\u7b80\u5355\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n\u5b9e\u73b0\u975e\u5e38\u4e11\uff1a\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#define U 0\n#define D 1\n#define L 2\n#define R 3\n#define UD 4\n#define LR 5\n\nconst int INF = 1e9;\nconst int dx[] = {-1, 1, 0, 0};\nconst int dy[] = {0, 0, -1, 1};\ninline int min(const int x, const int y) {return x < y ? x : y;}\nstruct Edge {\n\tint to, cap, cost, nxt;\n} e[10000005];\nint head[100005], cur[100005], dis[100005];\nint tot = 1, s, t, Maxflow, Mincost;\nbool vis[100005], mark[100005];\nstd::queue<int> Q;\nbool rev;\ninline void AddEdge(int u, int v, int cap, int cost, bool mul = true) {\n\tif (rev) u ^= v ^= u ^= v;\n\tif (mul) cost *= 3;\n\te[++ tot].to = v, e[tot].nxt = head[u], head[u] = tot;\n\te[tot].cap = cap, e[tot].cost = cost;\n\te[++ tot].to = u, e[tot].nxt = head[v], head[v] = tot;\n\te[tot].cap = 0, e[tot].cost = -cost;\n}\nbool SPFA() {\n\tmemcpy(cur, head, sizeof cur);\n\tmemset(vis, 0, sizeof vis);\n\tmemset(dis, 0x3f, sizeof dis);\n\tmemset(mark, 0, sizeof mark);\n\tQ.push(s);\n\tdis[s] = 0;\n\twhile (Q.size()) {\n\t\tint u(Q.front());\n\t\tQ.pop();\n\t\tmark[u] = false;\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (e[i].cap && dis[u] + e[i].cost < dis[v]) {\n\t\t\t\tdis[v] = dis[u] + e[i].cost;\n\t\t\t\tif (!mark[v]) Q.push(v), mark[v] = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t] < INF;\n}\n\nint dfs(int u, int flow) {\n\tif (u == t) return flow;\n\tvis[u] = true;\n\tint used = 0, tmp;\n\tfor (int i = cur[u]; i && used <= flow; i = e[i].nxt) {\n\t\tcur[u] = i;\n\t\tif (e[i].cap && dis[u] + e[i].cost == dis[e[i].to]) {\n\t\t\tint v = e[i].to;\n\t\t\tif (!vis[v] && (tmp = dfs(v, min(flow - used, e[i].cap))))\n\t\t\t\tused += tmp, e[i].cap -= tmp, e[i ^ 1].cap += tmp;\n\t\t}\n\t}\n\treturn used;\n}\n\nvoid Dinic() {\n\tint flow = 0;\n\twhile (SPFA()) Maxflow += (flow = dfs(s, INF)), Mincost += flow * dis[t];\n}\n\nint n, m, id[2005][6], a[2005], cnt;\ninline int pos(int i, int j) {return (i - 1) * m + j;}\n\nint main() {\n\tint sum1 = 0, sum2 = 0;\n\tscanf(\"%d%d\", &n, &m);\n\ts = 0, t = 20000, cnt = n * m;\n\tfor (int i = 1; i <= n; ++ i)\n\tfor (int j = 1; j <= m; ++ j) {\n\t\tint p = pos(i, j);\n\t\tscanf(\"%d\", a + p);\n\t\tif (!a[p]) continue;\n\t\tint len = 0;\n\t\tfor (int k = 0; k <= 3; ++ k)\n\t\t\tif (a[p] & 1 << k) ++ len;\n\t\trev = i + j & 1;\n\t\tif (!rev) AddEdge(s, p, len, 0), sum1 += len;\n\t\telse AddEdge(t, p, len, 0), sum2 += len;\n\t\tswitch (a[p]) {\n\t\t\tcase 5:\n\t\t\t\tAddEdge(p, id[p][U] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][D] = ++ cnt, 1, 0);\n\t\t\t\tbreak;\n\t\t\tcase 10:\n\t\t\t\tAddEdge(p, id[p][L] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][R] = ++ cnt, 1, 0);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 4:\n\t\t\tcase 8:\n\t\t\t\tAddEdge(p, id[p][U] = ++ cnt, 1, (a[p] == 1 ? 0 : (a[p] == 4 ? 2 : 1)));\n\t\t\t\tAddEdge(p, id[p][D] = ++ cnt, 1, (a[p] == 4 ? 0 : (a[p] == 1 ? 2 : 1)));\n\t\t\t\tAddEdge(p, id[p][L] = ++ cnt, 1, (a[p] == 8 ? 0 : (a[p] == 2 ? 2 : 1)));\n\t\t\t\tAddEdge(p, id[p][R] = ++ cnt, 1, (a[p] == 2 ? 0 : (a[p] == 8 ? 2 : 1)));\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 6:\n\t\t\tcase 9:\n\t\t\tcase 12:\n\t\t\t\tAddEdge(p, id[p][UD] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][LR] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(id[p][UD], id[p][U] = ++ cnt, 1, !((bool)(a[p] & 1)));\n\t\t\t\tAddEdge(id[p][UD], id[p][D] = ++ cnt, 1, !((bool)(a[p] & 4)));\n\t\t\t\tAddEdge(id[p][LR], id[p][L] = ++ cnt, 1, !((bool)(a[p] & 8)));\n\t\t\t\tAddEdge(id[p][LR], id[p][R] = ++ cnt, 1, !((bool)(a[p] & 2)));\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\tcase 11:\n\t\t\tcase 13:\n\t\t\tcase 14:\n\t\t\t\tAddEdge(p, id[p][U] = ++ cnt, 1, (a[p] == 11 ? -2 : (a[p] == 14 ? 4 : 1)), 0);\n\t\t\t\tAddEdge(p, id[p][D] = ++ cnt, 1, (a[p] == 14 ? -2 : (a[p] == 11 ? 4 : 1)), 0);\n\t\t\t\tAddEdge(p, id[p][L] = ++ cnt, 1, (a[p] == 13 ? -2 : (a[p] == 7 ? 4 : 1)), 0);\n\t\t\t\tAddEdge(p, id[p][R] = ++ cnt, 1, (a[p] == 7 ? -2 : (a[p] == 13 ? 4 : 1)), 0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tAddEdge(p, id[p][U] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][D] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][L] = ++ cnt, 1, 0);\n\t\t\t\tAddEdge(p, id[p][R] = ++ cnt, 1, 0);\n\t\t}\n\t}\n\trev = false;\n\tfor (int i = 1; i <= n; ++ i)\n\tfor (int j = 1; j <= m; ++ j)\n\t\tif (!(i + j & 1) && a[pos(i, j)]) {\n\t\t\tint p = pos(i, j);\n\t\t\tfor (int k = 0; k <= 3; ++ k) {\n\t\t\t\tint x = i + dx[k], y = j + dy[k];\n\t\t\t\tif (x < 1 || y < 1 || n < x || m < y || !a[pos(x, y)]) continue;\n\t\t\t\tint p2 = pos(x, y);\n\t\t\t\tif (id[p][U] && id[p2][D] && k == 0) AddEdge(id[p][U], id[p2][D], 1, 0);\n\t\t\t\tif (id[p][D] && id[p2][U] && k == 1) AddEdge(id[p][D], id[p2][U], 1, 0);\n\t\t\t\tif (id[p][L] && id[p2][R] && k == 2) AddEdge(id[p][L], id[p2][R], 1, 0);\n\t\t\t\tif (id[p][R] && id[p2][L] && k == 3) AddEdge(id[p][R], id[p2][L], 1, 0);\n\t\t\t}\n\t\t}\n\tDinic();\n\tprintf(\"%d\", Maxflow == sum1 && sum1 == sum2 ? Mincost / 3 : -1);\n}\n```",
        "postTime": 1624971821,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P4003 \u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "# \u601d\u8def\n\u770b\u5230\u6c34\u7ba1\u4f1a\u60f3\u5230\u4ec0\u4e48\uff1f\u7f51\u7edc\u6d41\uff01\n\n\u770b\u5230\u6700\u5c0f\u65cb\u8f6c\u6b21\u6570\u4f1a\u60f3\u5230\u4ec0\u4e48\uff1f\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff01\n\n\u8fd9\u9053\u9898\u6211\u4eec\u8003\u8651\u9ed1\u767d\u67d3\u8272\u6cd5\uff0c\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e2d\u3001\u4e0a\u3001\u53f3\u3001\u4e0b\u3001\u5de6 $5$ \u4e2a\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u9ed1\u8272\u683c\u5b50\uff0c\u6211\u4eec\u628a\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u5b83\u7684\u4e2d\u70b9\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u767d\u8272\u683c\u5b50\uff0c\u6211\u4eec\u628a\u5b83\u7684\u4e2d\u70b9\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9\u3002\n\n\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u9ed1\u8272\u683c\u5b50\uff0c\u6211\u4eec\u8981\u5411\u5468\u56f4\u6709\u6c34\u7ba1\u7684\u683c\u5b50\u5efa\u8fb9\u3002\u5bf9\u4e8e\u6240\u6709\u6709\u6c34\u7ba1\u7684\u683c\u5b50\uff0c\u521d\u59cb\u65b9\u5411\u7684\u70b9\u5230\u7ec8\u70b9\u6709\u4e00\u6761\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u8ba8\u8bba\u6700\u6076\u5fc3\u7684\u683c\u5b50\u5185\u5efa\u8fb9\uff08\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4e0b\u9762\u7528\u4e8c\u8fdb\u5236\u548c\u7b26\u53f7\u8868\u793a\uff09\uff1a\n\n---\n\n- $0001$\uff08\u2191\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u5de6\u3001\u4e0b\u3001\u53f3\u70b9\u5206\u522b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$1$ \u7684\u8fb9\u3002\n\n- $0010$\uff08\u2192\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u53f3\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u4e0a\u3001\u5de6\u3001\u4e0b\u70b9\u5206\u522b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$1$ \u7684\u8fb9\u3002\n\n- $0011$\uff08\u2191\u2192\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u4e0b\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u628a\u53f3\u70b9\u5411\u5de6\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n- $0100$\uff08\u2193\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0b\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u5de6\u3001\u4e0a\u3001\u53f3\u5206\u522b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$1$\u3001$2$ \u7684\u8fb9\u3002\n\n- $0101$\uff08\u2191\u2193\uff09\uff1a\u4e0d\u505a\u5904\u7406\u3002\n\n- $0110$\uff08\u2193\u2192\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u53f3\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u5de6\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u628a\u4e0b\u70b9\u5411\u4e0a\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n- $0111$\uff08\u2191\u2192\u2193\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u3001\u53f3\u3001\u4e0b\u70b9\u5206\u522b\u4e0e\u5de6\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$1$ \u7684\u8fb9\u3002\n\n- $1000$\uff08\u2190\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u5de6\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u4e0a\u3001\u53f3\u3001\u4e0b\u70b9\u5206\u522b\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$2$ \u7684\u8fb9\u3002\n\n- $1001$\uff08\u2190\u2191\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u4e0b\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u628a\u5de6\u70b9\u5411\u53f3\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n- $1010$\uff08\u2190\u2192\uff09\uff1a\u4e0d\u505a\u5904\u7406\u3002\n\n- $1011$\uff08\u2190\u2191\u2192\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u5de6\u3001\u4e0a\u3001\u53f3\u70b9\u5206\u522b\u4e0e\u4e0b\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$1$ \u7684\u8fb9\u3002\n\n- $1100$\uff08\u2190\u2193\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u5de6\u70b9\u4e0e\u8fd9\u4e2a\u683c\u5b50\u7684\u53f3\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u628a\u4e0b\u70b9\u5411\u4e0a\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n- $1101$\uff08\u2191\u2190\u2193\uff09\uff1a\u628a\u8fd9\u4e2a\u683c\u5b50\u4e0a\u3001\u5de6\u3001\u4e0b\u70b9\u5206\u522b\u4e0e\u53f3\u70b9\u8fde\u4e00\u6761\u8d39\u7528\u4e3a $1$\u3001$2$\u3001$1$ \u7684\u8fb9\u3002\n\n- $1111$\uff08\u2190\u2191\u2193\u2192\uff09\uff1a\u4e0d\u505a\u5904\u7406\u3002\n\n---\n\u8fd9\u91cc\u662f\u9ed1\u683c\u5b50\u7684\u5efa\u8fb9\uff0c\u7136\u540e\u767d\u683c\u5b50\u5c31\u662f\u628a $u$\u3001$v$ \u4ea4\u6362\u4e00\u4e0b\u3002\n\n\u7136\u540e\u2026\u2026\n\n\u7136\u540e\u5c31\u6ca1\u6709\u4e86\uff0c\u8dd1\u88f8\u7684\u8d39\u7528\u6d41\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u522b\u5fd8\u4e86\u5224\u65ad\u662f\u5426\u6ee1\u6d41\u3002\n# code\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define N 10005\n#define M 100005\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n,m,s,t;\nint a[N][N];\nint head[M],w[M],c[M],to[M],next[M],cnt=1;\nint dis[N],pre[N],vis[N],in[N],tot,ans;\nint maxflow;\nbool spfa(){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tdis[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(ri i=head[u];i;i=next[i]){\n\t\t\tint v=to[i];\n\t\t\tif(dis[v]>dis[u]+c[i]&&w[i]){\n\t\t\t\tdis[v]=dis[u]+c[i];\n\t\t\t\tpre[v]=i;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[u]=0;\n\t}\n\treturn dis[t]!=INF;\n}\nint dfs(){\n\tint p,minn=INF,ans=0;\n\tfor(ri u=t;u!=s;u=to[p^1]){\n\t\tp=pre[u];\n\t\tminn=min(minn,w[p]);\n\t}\n\tfor(ri u=t;u!=s;u=to[p^1]){\n\t\tp=pre[u];\n\t\tw[p]-=minn;\n\t\tw[p^1]+=minn;\n\t\tans+=minn*c[p];\n\t}\n\tmaxflow+=minn;\n\treturn ans;\n}\nint dinic(){\n\tint ans=0;\n\twhile(spfa()){\n\t\tans+=dfs();\n\t}\n\treturn ans;\n}\nbool ok(int x,int y){\n\treturn (x>0&&y>0&&x<=n&&y<=m);\n}\nint hsh(int x,int y,int k){\n\treturn (x-1)*m+y+m*n*k;\n}\nvoid add(int u,int v,int k,int d){\n\tcnt++;\n\tw[cnt]=k;\n\tto[cnt]=v;\n\tc[cnt]=d;\n\tnext[cnt]=head[u];\n\thead[u]=cnt;\n}\nvoid addh(int u,int v,int k,int d){\n\tadd(u,v,k,d);\n\tadd(v,u,0,-d);\n}\nvoid addr(int u,int v,int k,int d){\n\taddh(v,u,k,d);\n}\nint main(){\n\tcin>>n>>m; \n\ts=n*m*5+1;\n\tt=s+1;\n\tfor(ri i=1;i<=n;i++){\n\t\tfor(ri j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(ri i=1;i<=n;i++){\n\t\tfor(ri j=1;j<=m;j++){\n\t\t\tif((i+j)%2){\n\t\t\t\taddh(s,hsh(i,j,0),INF,0);\n\t\t\t\tif(ok(i-1,j)){\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i-1,j,3),1,0);\n\t\t\t\t}\n\t\t\t\tif(ok(i,j-1)){\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j-1,2),1,0);\n\t\t\t\t}\n\t\t\t\tif(ok(i+1,j)){\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i+1,j,1),1,0);\n\t\t\t\t}\n\t\t\t\tif(ok(i,j+1)){\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j+1,4),1,0);\n\t\t\t\t}\n\t\t\t\tfor(int k=1;k<=4;k++){\n\t\t\t\t\tif(a[i][j]&(1<<(k-1))){\n\t\t\t\t\t\taddh(hsh(i,j,0),hsh(i,j,k),1,0);\n\t\t\t\t\t\ttot++;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==1){//0001 \n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==2){//0010\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==3){//0011\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==4){//0100\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==5);//0101\n\t\t\t\tif(a[i][j]==6){//0110\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==7){//0111\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==8){//1000\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==9){//1001\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==10);//1010\n\t\t\t\tif(a[i][j]==11){//1011\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==12){//1100\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,1);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==13){//1101\n\t\t\t\t\taddh(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==14){//1110\n\t\t\t\t\taddh(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t\t\taddh(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==15);//1111\n\t\t\t}else{\n\t\t\t\taddh(hsh(i,j,0),t,INF,0);\n\t\t\t\tfor(int k=1;k<=4;k++){\n\t\t\t\t\tif(a[i][j]&(1<<(k-1))){\n\t\t\t\t\t\taddr(hsh(i,j,0),hsh(i,j,k),1,0);\n\t\t\t\t\t\ttot++;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==1){//0001 \n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==2){//0010\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==3){//0011\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==4){//0100\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==5);//0101\n\t\t\t\tif(a[i][j]==6){//0110\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==7){//0111\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==8){//1000\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==9){//1001\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==10);//1010\n\t\t\t\tif(a[i][j]==11){//1011\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==12){//1100\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,1);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==13){//1101\n\t\t\t\t\taddr(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==14){//1110\n\t\t\t\t\taddr(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t\t\taddr(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\t}\n\t\t\t\tif(a[i][j]==15);//1111\n\t\t\t}\n\t\t}\n\t}\n\tint ans=dinic();\n\tif(maxflow*2==tot){\n\t\tcout<<ans;\n\t}else{\n\t\tcout<<-1;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605970306,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u8bf7\u70b9\u8fd9\u91cc**](https://www.cnblogs.com/BrianPeng/p/17069195.html)\r\n\r\n# Solution of Implementation: P4003 \u65e0\u9650\u4e4b\u73af \u8d39\u7528\u6d41\u5efa\u56fe\u7a76\u6781\u4ee3\u7801\u7b80\u5316\r\n\r\n## Preface\r\n\r\n\u8fd9\u662f\u4e00\u7bc7\u8d39\u7528\u6d41\u7684\u8f85\u52a9\u9898\u89e3\u3002\u5173\u4e8e\u5efa\u56fe\u7684\u601d\u8def\u548c\u6784\u9020\uff0c[\u9898\u89e3\u680f\u76ee](https://www.luogu.com.cn/problem/solution/P4003) \u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u7684\u8be6\u5c3d\u3002\r\n\r\n\u7136\u800c\uff0c\u8fd9\u4e9b\u9898\u89e3\u51e0\u4e4e\u90fd\u5bf9 16 \u79cd\u53ef\u80fd\u6027\u4e00\u4e00\u5efa\u56fe\uff0c\u800c\u4e14\u8fd8\u8981\u5bf9\u6e90\u6c47\u8fb9\u5206\u522b\u5199\u3002\u8fd9\u6837\u4e0b\u6765\u603b\u5171 32 \u79cd\u60c5\u51b5\uff0c\u4e0d\u4ec5\u7801\u91cf\u5de8\u5927\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u51fa\u9519\u3002\r\n\r\n\u672c\u6587\u5047\u8bbe\u8bfb\u8005\u5df2\u7ecf\u7406\u89e3\u5efa\u56fe\u7684\u89c4\u5219\u3002\u672c\u6587\u4ee5 [\u8fd9\u7bc7\u65e5\u62a5](https://www.luogu.com.cn/blog/wangqianlong463/qian-tan-wang-lao-liu-jian-mu-di-ji-ji-yin-qiao) \u7684 Part 3.3 \u4e2d\u7684\u5efa\u56fe\u601d\u8def\u4e3a\u53c2\u8003\u3002\r\n\r\n\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u7b80\u5355\u5462\uff1f\r\n\r\n---\r\n\r\n## \u6807\u53f7\u6cd5\r\n\r\n### \u65b9\u5411\u6807\u53f7\r\n\r\n\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u9898\u76ee\u7684\u6807\u53f7\uff1a\u8bb0 \u4e0a\uff0c\u53f3\uff0c\u4e0b\uff0c\u5de6 \u5206\u522b\u4e3a $0,1,2,3$\uff0c\u90a3\u4e48\u987a\u65f6\u9488\u65cb\u8f6c\u51e0\u4e2a $90^\\circ$ \u5c31\u662f\u5bf9\u5e94\u7684\u6570\u5b57\u52a0\u51e0\u7136\u540e $\\bmod 4$\uff08\u6bd2\u7624\u8005\u53ef\u8003\u8651 `&3`\uff09\u3002\r\n\r\n\u5bf9\u4e8e $[0,15]$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u7528\u4e00\u4e2a `vector` \u8bb0\u5f55\u8fd9\u4e2a\u6570\u5b57\u4e8c\u8fdb\u5236\u5305\u542b $1$ \u7684\u4f4d\uff0c\u4ece $0$ \u53f7\u4f4d\u5f00\u59cb\u3002\r\n\r\nE.g. $11=(1011)_2=2^0+2^1+2^3$\uff0c\u90a3\u4e48 $11$ \u5bf9\u5e94\u7684 `vector` \u5c31\u662f $\\{0,1,3\\}$\u3002\r\n\r\n\r\n\u56e0\u4e3a\u5728\u5206\u7c7b\u8ba8\u8bba\u65f6\uff0c\u4e3b\u8981\u7528\u7684\u662f\u8f93\u5165\u72b6\u6001\u7684\u4e8c\u8fdb\u5236\u4e2d $1$ \u7684\u6570\u91cf\uff0c\u6240\u4ee5\u8fd9\u4e2a `vector` \u7684 `size()` \u53ef\u4ee5\u76f4\u63a5\u5e2e\u6211\u4eec\u5224\u5b9a\u5206\u7c7b\u3002\r\n\r\n```cpp\r\nvector<int>dg[16];\r\nfor(i from 0 to 15)for(j from 0 to 3)\r\n    if(i&(1<<j))dg[i].push_back(j);\r\n```\r\n\r\n### \u70b9\u6807\u53f7\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u683c\u5b50 $(x,y),x\\in[1,n],y\\in[1,m]$\uff0c\u6211\u4eec\u5206\u51fa\u4e86 5 \u4e2a\u70b9\uff08\u4e0a\uff0c\u53f3\uff0c\u4e0b\uff0c\u5de6\uff0c\u4e2d\uff09\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e09\u5143\u7ec4 $(x,y,k)$ \u6765\u8868\u793a\u4e00\u4e2a\u70b9\uff0c\u5176\u4e2d $k\\in[0,4]$\u3002\u5982\u679c $k\\in[0,3]$\uff0c\u5219\u8868\u793a\u5bf9\u5e94\u7684\u65b9\u5411\u6807\u8bb0\uff1b\u5982\u679c $k=4$\uff0c\u5219\u8868\u793a\u4e2d\u70b9\u3002\r\n\r\nE.g. \u4e09\u5143\u7ec4 $(2,3,3)$ \u5c31\u8868\u793a $(2,3)$ \u683c\u5b50\u7684\u5de6\u70b9\u3002\r\n\r\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e09\u5143\u7ec4 $(x,y,k)$ \u7528\u4e00\u4e2a\u6574\u6570 $\\text{idx}(x,y,k)=5((x-1)m+y-1)+k$ \u6807\u8bb0\uff0c\u8fd9\u6837\u5c31\u628a\u6240\u6709\u7684\u70b9\u90fd\u552f\u4e00\u5730\u6807\u8bb0\u4e3a\u4e86 $[0,5nm-1]$ \u4e2d\u7684\u4e00\u4e2a\u6574\u6570\u3002\r\n\r\n---\r\n\r\n## $\\star$ \u8fde\u8fb9\u6cd5 $\\star$\r\n\r\n\u57fa\u4e8e $x+y$ \u7684\u5947\u5076\u6027\uff0c\u6211\u4eec\u628a $(x,y)$ \u5206\u4e3a\u6e90\u70b9\u4e00\u8fb9\u6216\u6c47\u70b9\u4e00\u8fb9\u3002\u672c\u6587\u5c06 $x+y$ \u4e3a\u5947\u6570\u7684\u683c\u5b50\u5206\u4e3a\u6e90\u70b9\u4e00\u8fb9\u3002\r\n\r\n\u5bf9\u4e8e\u76f8\u90bb\u683c\u5b50\u70b9\u7684\u8fde\u8fb9\uff0c\u56e0\u4e3a\u6d89\u53ca\u8fb9\u754c\u5224\u5b9a\u548c\u5750\u6807\uff0c\u6545\u4e0d\u505a\u7279\u6b8a\u7b80\u5316\u3002\u53ea\u8981\u7528 $\\text{idx}$ \u6807\u53f7\u51fd\u6570\u5c31\u53ef\u4ee5\u8db3\u591f\u7b80\u6d01\u3002\r\n\r\n\u4e3a\u4e86\u8868\u793a\u521d\u59cb\u72b6\u6001\u548c\u65cb\u8f6c\uff0c\u6211\u4eec\u4f1a\u5728\u683c\u5b50\u4e2d\u7684 5 \u4e2a\u5206\u70b9\u4e4b\u95f4\u4e92\u76f8\u8fde\u63a5\u5bb9\u91cf\u4e3a $1$ \u7684\u8d39\u7528\u8fb9\u3002\u6e90\u70b9\u4e00\u8fb9\u548c\u6c47\u70b9\u4e00\u8fb9\u4f1a\u4ee5\u76f8\u53cd\u7684\u65b9\u5f0f\u8fde\u63a5\u3002\r\n\r\n\u8fd9\u4fc3\u4f7f\u6211\u4eec\u628a\u683c\u5b50\u5185\u8fde\u8fb9\u7684\u8fc7\u7a0b\u6253\u5305\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8ba9\u51fd\u6570\u63a5\u6536\u683c\u5b50\u4f4d\u7f6e\uff0c\u8fde\u8fb9\u7684\u5206\u70b9\u548c\u8d39\u7528\uff0c\u7136\u540e\u6839\u636e\u683c\u5b50\u7684\u5750\u6807\u81ea\u884c\u5224\u5b9a\u8fde\u8fb9\u7684\u65b9\u5411\u3002\r\n\r\n\u4ee5\u4e0b\u7684\u5199\u6cd5\u4e2d\uff0c$(x,y)$ \u4e3a\u683c\u5b50\u5750\u6807\u3002\u5728\u6e90\u70b9\u4e00\u8fb9\u65f6\uff0c$k$ \u4e3a\u8d77\u59cb\u65b9\u5411\u6807\u8bb0\uff0c$l$ \u4e3a\u5230\u8fbe\u65b9\u5411\u6807\u8bb0\u3002$c$ \u4e3a\u8d39\u7528\u3002`adde(u,v,w,c)` \u662f\u6807\u51c6\u7684\u8d39\u7528\u6d41\u8fde\u8fb9\u51fd\u6570\uff1a\u8fde\u63a5 $u\\to v$\uff0c\u5bb9\u91cf\u4e3a $w$\uff0c\u8d39\u7528\u4e3a $c$\uff0c\u5e76\u4e14\u52a0\u5165\u53cd\u5411\u8fb9\u3002\r\n\r\n```cpp\r\nvoid ades(int x,int y,int k,int l,int c){\r\n    ((x+y)&1)?adde(idx(x,y,k),idx(x,y,l),1,c)\r\n        :adde(idx(x,y,l),idx(x,y,k),1,c);\r\n}\r\n```\r\n\r\n\u5bf9\u4e8e\u4ee5\u4e0b\u7684\u8fde\u8fb9\u6cd5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 $(x,y)$ \u662f\u6e90\u70b9\u4e00\u8fb9\u7684\u60c5\u51b5\u3002\r\n\r\n### \u521d\u59cb\u72b6\u6001\r\n\r\n\u8bbe\u70b9 $(x,y)$ \u7684\u8f93\u5165\u521d\u59cb\u72b6\u6001\u4e3a $a\\in[0,15]$\u3002\u90a3\u4e48\u5bf9\u4e8e $a$ \u5305\u542b\u7684\u6240\u6709\u65b9\u5411\uff0c\u4e5f\u5c31\u662f $a$ \u7684\u4e8c\u8fdb\u5236\u5c55\u5f00\u4e2d\u4e3a $1$ \u7684\u65b9\u5411\u6807\u53f7\uff0c\u6211\u4eec\u4ece\u4e2d\u70b9\u5411\u5bf9\u5e94\u65b9\u5411\u7684\u70b9\u8fde\u63a5\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\r\n\r\n```cpp\r\nfor(int k:dg[a])ades(i,j,4,k,0);\r\n```\r\n\r\n### \u65cb\u8f6c\r\n\r\n#### Case 0\uff1a\u4e0d\u7528\u8f6c\r\n\r\n\u8fd9\u5305\u542b\u6ca1\u6709\u6c34\u7ba1\uff1a$a=0$\r\n\r\n\u90fd\u662f\u6c34\u7ba1\uff1a$a=15$\r\n\r\n\u76f4\u7ebf\u6c34\u7ba1\uff1a$a=5,10$\r\n\r\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u60c5\u51b5\u5f53\u4e14\u4ec5\u5f53 $a$ \u662f $5$ \u7684\u500d\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5 $\\bmod 5$ \u5224\u5b9a\u3002\r\n\r\n#### Case 1\uff1a\u4e00\u4e2a\u6c34\u7ba1\uff0cQ \u5b57\u578b\r\n\r\n\u7528 `x=dg[a][0]` \u53ef\u4ee5\u76f4\u63a5\u53d6\u51fa\u552f\u4e00\u7684\u6709\u6c34\u7ba1\u7684\u65b9\u5411\u3002\r\n\r\n\u7528 $(x+k)\\bmod 4$ \u53ef\u4ee5\u83b7\u5f97\u987a\u65f6\u9488\u65cb\u8f6c $k$ \u4e2a $90^\\circ$ \u540e\u7684\u65b9\u5411\u6807\u53f7\u3002\u5982\u679c $k=2$\uff0c\u90a3\u4e48\u8d39\u7528\u4e3a $2$\u3002\u5982\u679c $k=1,3$\uff0c\u5219\u8d39\u7528\u4e3a $1$\u3002\r\n\r\n\u6240\u4ee5\u8bf4\u65cb\u8f6c $k$ \u7684\u7684\u8d39\u7528\u5c31\u662f $\\text{lowbit}(k)=$ `k&-k` \u4e86\uff01\r\n\r\n```cpp\r\nif(dg[a].size()==1){\r\n    int x(dg[a][0]);\r\n    for(k from 1 to 3)ades(i,j,x,(x+k)&3,k&-k);\r\n}\r\n```\r\n\r\n#### Case 2\uff1a\u4e24\u4e2a\u6c34\u7ba1\uff0cL \u5b57\u578b\r\n\r\n\u6211\u4eec\u5df2\u7ecf\u6392\u9664\u4e86\u76f4\u7ebf\u6c34\u7ba1\uff0c\u6240\u4ee5\u4e24\u4e2a\u6c34\u7ba1\u5fc5\u7136\u662f L \u5b57\u578b\u3002\r\n\r\n\u6bcf\u4e2a\u5b58\u5728\u6c34\u7ba1\u7684\u65b9\u5411 $k$ \u8981\u5411\u5bf9\u9762\u8fde\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff0c\u7528 $(k+2)\\bmod 4$ \u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u9762\u7684\u6807\u53f7\u3002\r\n\r\n```cpp\r\nfor(int k:dg[a])ades(i,j,k,(k+2)&3,1);\r\n```\r\n\r\n#### Case 3\uff1a\u4e09\u4e2a\u6c34\u7ba1\uff0cT \u5b57\u578b\r\n\r\n\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u6ca1\u6c34\u7ba1\u7684\u662f\u54ea\u4e2a\u65b9\u5411\u3002\u5982\u679c\u8f93\u5165\u7684\u662f $a$\uff0c\u90a3\u4e48 $a \\text{ xor } 15$ \u5c31\u53ef\u4ee5\u628a\u6ca1\u6c34\u7ba1\u7684\u65b9\u5411\u6807\u53f7\u7684\u4e8c\u8fdb\u5236\u4f4d\u53d8\u6210 $1$\u3002\u7528 `x=dg[a^15][0]` \u76f4\u63a5\u53d6\u51fa\u8fd9\u4e2a\u65b9\u5411\u3002\r\n\r\n\u7136\u540e\u7528\u7c7b\u4f3c Case 1 \u7684\u65b9\u6cd5\u8fde\u8fb9\u5373\u53ef\u3002\r\n\r\n```cpp\r\nint x(dg[a^15][0]);\r\nfor(k from 1 to 3)ades(i,j,(x+k)&3,x,k&-k);\r\n```\r\n\r\n\u603b\u4ee3\u7801\uff08\u5173\u4e8e\u5efa\u56fe\u7684\u90e8\u5206\u4ec5\u5927\u7ea6 30 \u884c\uff09\uff1a\r\n\r\n```cpp\r\n//This program is written by Brian Peng.\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define Rd(a) (a=rd())\r\n#define Gc(a) (a=getchar())\r\n#define Pc(a) putchar(a)\r\nint rd(){\r\n    int x;char c(getchar());bool k;\r\n    while(!isdigit(c)&&c^'-')if(Gc(c)==EOF)exit(0);\r\n    c^'-'?(k=1,x=c&15):k=x=0;\r\n    while(isdigit(Gc(c)))x=x*10+(c&15);\r\n    return k?x:-x;\r\n}\r\nvoid wr(int a){\r\n    if(a<0)Pc('-'),a=-a;\r\n    if(a<=9)Pc(a|'0');\r\n    else wr(a/10),Pc((a%10)|'0');\r\n}\r\nsigned const INF(0x3f3f3f3f),NINF(0xc3c3c3c3);\r\nlong long const LINF(0x3f3f3f3f3f3f3f3fLL),LNINF(0xc3c3c3c3c3c3c3c3LL);\r\n#define Ps Pc(' ')\r\n#define Pe Pc('\\n')\r\n#define Frn0(i,a,b) for(int i(a);i<(b);++i)\r\n#define Frn1(i,a,b) for(int i(a);i<=(b);++i)\r\n#define Frn_(i,a,b) for(int i(a);i>=(b);--i)\r\n#define Mst(a,b) memset(a,b,sizeof(a))\r\n#define File(a) freopen(a\".in\",\"r\",stdin),freopen(a\".out\",\"w\",stdout)\r\n#define N (10010)\r\nint n,m,s,t,cr[N],d[N],a,cst,s1,s0;\r\nbool vs[N];\r\nstruct E{int v,w,c,r;};\r\nvector<E>e[N];\r\nvector<int>dg[16];\r\nvoid adde(int u,int v,int w,int c);\r\nvoid ades(int x,int y,int k,int l,int c);\r\nbool spfa();\r\nint dfs(int u,int a);\r\nint mcmf();\r\nint idx(int x,int y,int k){return 5*((x-1)*m+y-1)+k;}\r\nsigned main(){\r\n    Rd(n),Rd(m),s=idx(n,m,4)+1,t=s+1;\r\n    //\u9884\u5904\u7406\u4e8c\u8fdb\u5236\u4f4d\r\n    Frn0(i,0,16)Frn0(j,0,4)if(i&(1<<j))dg[i].push_back(j);\r\n    Frn1(i,1,n)Frn1(j,1,m){\r\n        Rd(a);\r\n        if((i+j)&1){\r\n            adde(s,idx(i,j,4),dg[a].size(),0),s1+=dg[a].size();\r\n            //\u683c\u5b50\u95f4\u7684\u8fb9\r\n            if(i<n)adde(idx(i,j,2),idx(i+1,j,0),1,0);\r\n            if(i>1)adde(idx(i,j,0),idx(i-1,j,2),1,0);\r\n            if(j<m)adde(idx(i,j,1),idx(i,j+1,3),1,0);\r\n            if(j>1)adde(idx(i,j,3),idx(i,j-1,1),1,0);\r\n        }else adde(idx(i,j,4),t,dg[a].size(),0),s0+=dg[a].size();\r\n        //\u521d\u59cb\u72b6\u6001\uff0c0\u8d39\u8fb9\r\n        for(int k:dg[a])ades(i,j,4,k,0);\r\n        //Case 0: \u5982\u679c\u662f5\u7684\u500d\u6570\uff0c\u76f4\u63a5\u8df3\r\n        if(a%5){\r\n            if(dg[a].size()==1){\r\n                //Case 1: Q\u578b\r\n                int x(dg[a][0]);\r\n                Frn1(k,1,3)ades(i,j,x,(x+k)&3,k&-k);\r\n            }else if(dg[a].size()==2){\r\n                //Case 2: L\u578b\r\n                for(int k:dg[a])ades(i,j,k,(k+2)&3,1);\r\n            }else{\r\n                //Case 3: T\u578b\r\n                int x(dg[a^15][0]);\r\n                Frn1(k,1,3)ades(i,j,(x+k)&3,x,k&-k);\r\n            }\r\n        }\r\n    }\r\n    if(s0!=s1||mcmf()<s1)printf(\"-1\"),exit(0);\r\n    wr(cst),exit(0);\r\n}\r\nvoid adde(int u,int v,int w,int c){\r\n    e[u].push_back({v,w,c,(int)(e[v].size())});\r\n    e[v].push_back({u,0,-c,(int)(e[u].size())-1});\r\n}\r\n//\u683c\u5b50\u5185\u5206\u70b9\u52a0\u8fb9\u51fd\u6570\r\nvoid ades(int x,int y,int k,int l,int c){\r\n    ((x+y)&1)?adde(idx(x,y,k),idx(x,y,l),1,c)\r\n        :adde(idx(x,y,l),idx(x,y,k),1,c);\r\n}\r\nbool spfa(){\r\n    Mst(d,0x3f),d[s]=0,vs[s]=1;\r\n    queue<int>q({s});\r\n    while(!q.empty()){\r\n        int u(q.front());\r\n        q.pop(),vs[u]=0;\r\n        for(E i:e[u])if(i.w&&d[i.v]>d[u]+i.c){\r\n            d[i.v]=d[u]+i.c;\r\n            if(!vs[i.v])q.push(i.v),vs[i.v]=1;\r\n        }\r\n    }\r\n    return d[t]<INF;\r\n}\r\nint dfs(int u,int a){\r\n    #define V e[u][i].v\r\n    #define W e[u][i].w\r\n    #define C e[u][i].c\r\n    if(u==t||!a)return a;\r\n    vs[u]=1;\r\n    int tot(0),tmp;\r\n    for(int&i(cr[u]);i<e[u].size();++i)if(!vs[V]&&d[u]+C==d[V]){\r\n        tmp=dfs(V,min(a,W));\r\n        if(tmp){\r\n            W-=tmp,cst+=tmp*C,e[V][e[u][i].r].w+=tmp;\r\n            tot+=tmp,a-=tmp;\r\n            if(!a)break;\r\n        }\r\n    }\r\n    vs[u]=0;\r\n    return tot;\r\n}\r\nint mcmf(){\r\n    int f(0);\r\n    while(spfa())Mst(cr,0),f+=dfs(s,INF);\r\n    return f;\r\n}\r\n```\r\n\r\n---\r\n\r\n## Postscript\r\n\r\n\u80fd\u5e2e\u52a9\u5927\u5bb6\u51cf\u5c11\u7801\u91cf\u662f\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\r\n\r\nThanks for reading!",
        "postTime": 1674818364,
        "uid": 66199,
        "name": "Bring",
        "ccfLevel": 5,
        "title": "Solution of Implementation: P4003 \u65e0\u9650\u4e4b\u73af \u8d39\u7528\u6d41\u5efa\u56fe\u7a76\u6781\u4ee3\u7801\u7b80\u5316"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u6709\u4e00\u4e2a $n\\times m$ \u68cb\u76d8\uff0c\u68cb\u76d8\u4e0a\u6bcf\u4e2a\u683c\u5b50\u4e0a\u6709\u4e00\u4e2a\u6c34\u7ba1\u3002\u6c34\u7ba1\u5171\u6709$16$\u79cd\uff0c\u7528\u4e00\u4e2a $4$ \u4f4d\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u5f53\u524d\u6c34\u7ba1\u5411\u4e0a\u3001\u53f3\u3001\u4e0b\u3001\u5de6\u6709\u4e2a\u63a5\u53e3\u3002\u4f60\u53ef\u4ee5\u65cb\u8f6c\u9664\u4e86 $(0101)_2$ \u548c $(1010)_2$ \u7684\u5176\u4ed6\u6c34\u7ba1,\u6c42\u6700\u5c11\u7684\u65cb\u8f6c\u6b21\u6570\u4f7f\u5f97\u6c34\u7ba1\u7684\u6bcf\u4e00\u4e2a\u63a5\u53e3\u6240\u5728\u65b9\u5411\u90fd\u6709\u4e00\u4e2a\u76f8\u90bb\u7684\u6c34\u7ba1\u63a5\u53e3\u4e0e\u5176\u5bf9\u5e94\u3002\n\n## \u505a\u6cd5\n\n\u8fd9\u79cd\u63d2\u5934\u76f8\u5173\u7684\u9898\u4e00\u822c\u90fd\u662f\u7f51\u7edc\u6d41\uff0c~~\u867d\u7136\u636e\u8bf4\u63d2\u5934 dp \u53ef\u4ee5\u8fc7\u6b64\u9898~~\u3002\u8fd9\u9053\u9898\u91cc\u9762\u8981\u6c42\u4e0d\u5b58\u5728\u5355\u72ec\u7684\u63a5\u53e3\uff0c\u6240\u6709\u7684\u63a5\u53e3\u4e00\u4e00\u5bf9\u5e94\u7b49\u4ef7\u4e8e\u6d41\u91cf\u5e73\u8861\uff0c\u90a3\u4e48\u6700\u5c11\u7684\u65cb\u8f6c\u6b21\u6570\u5c31\u5e94\u8be5\u60f3\u5230\u8d39\u7528\u6d41\u3002\n\n\u9996\u5148\u628a\u6574\u4e2a\u68cb\u76d8\u67d3\u8272\uff0c\u9ed1\u70b9\u8fde\u6e90\u70b9\uff0c\u767d\u683c\u8fde\u6c47\u70b9\uff0c\u8fd9\u4e9b\u6e90\u6c47\u70b9\u7684\u8282\u70b9\u6d41\u91cf\u9650\u5236\u4e3a\u81ea\u5df1\u7684\u683c\u5b50\u5185\u7684\u63a5\u5934\u6570\u3002\u90a3\u4e48\u5982\u679c\u6d41\u91cf\u7f51\u7edc\u6ee1\u6d41\uff0c\u90a3\u5c31\u662f\u6b64\u9898\u6709\u89e3\uff0c\u53ef\u4ee5\u6784\u6210\u6d41\u91cf\u5e73\u8861\u7684\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u683c\u5b50\uff0c\u4e0a\u4e0b\u5de6\u53f3\u62c6\u6210\u56db\u4e2a\u70b9\uff0c\u8868\u793a\u8fd9\u4e2a\u683c\u5b50\u7684 $4$ \u4e2a\u65b9\u5411\uff0c\u4ed6\u4eec\u7684\u8282\u70b9\u5bb9\u91cf\u4e3a $1$ \uff0c\u7528\u6765\u8c61\u5f81\u5bf9\u5e94\u63a5\u53e3\u7684\u6d41\u91cf\u5e73\u8861\u3002\n\n\u5bf9\u4e8e\u4e00\u5f00\u59cb\u4e0d\u80fd\u5230\u8fbe\u7684\u65b9\u5411\uff0c\u4ece\u521d\u59cb\u65b9\u5411\u8fde\u8fb9\u81f3\u76ee\u6807\u65b9\u5411\uff0c\u8d39\u7528\u4e3a\u6700\u5c11\u65cb\u8f6c\u6b21\u6570\uff0c\u8fd9\u6837\u65e0\u8bba\u600e\u4e48\u65cb\u8f6c\uff0c\u63a5\u53e3\u5bf9\u5e94\u5173\u7cfb\u4f9d\u7136\u5b58\u5728\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register int\n#define in inline \n#define ak *\n#define inf 1e9\n#define loc(i,j) ((i-1)*m+j)\nint col,cnt=1,n,m,s,t,h[10005],dis[10005],l,r,q[10005],pre[10005],vis[10005],mp[10005],ans,maxflow,preflow;\nstruct did{\n\tint u,next,to,f,w;\n}e[1200005];\nchar qwq;\nin int read()\n{\n\tint yz=0,ioi=1;qwq=getchar();\n\twhile(qwq<'0'||qwq>'9') ioi=qwq=='-'?~ioi+1:1,qwq=getchar();\n\twhile(qwq>='0'&&qwq<='9') yz=(yz<<3)+(yz<<1)+(qwq^48),qwq=getchar();\n\treturn yz ak ioi;\n}\nin void add(re a,re b,re c,re d)\n{\n\tif(!col) swap(a,b);\n\te[++cnt]=(did){a,h[a],b,c,d},h[a]=cnt;\n\te[++cnt]=(did){b,h[b],a,0,-d},h[b]=cnt;\n}\nint spfa()\n{\n\tmemset(pre,0,sizeof(pre));memset(vis,0,sizeof(vis));\n\tfor(re i=s;i<=t;i++) dis[i]=i==s?0:inf;\n\tqueue<int>q;q.push(s);vis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tre i=q.front();vis[i]=0;q.pop();\n\t\tfor(re j=h[i],k;k=e[j].to,j;j=e[j].next)\n\t\tif(e[j].f&&dis[k]>dis[i]+e[j].w)\n\t\t{\n\t\t\tdis[k]=dis[i]+e[j].w;pre[k]=j;\n\t\t\tif(!vis[k]) q.push(k),vis[k]=1;\n\t\t}\n\t}\t\n\treturn dis[t]<inf;\n}\nin void solve()\n{\n\tre delta=inf;\n\tfor(re i=t,p;p=pre[i],i!=s;i=e[p^1].to)\n\tdelta=min(delta,e[p].f);\n\tfor(re i=t,p;p=pre[i],i!=s;i=e[p^1].to)\n\te[p].f-=delta,e[p^1].f+=delta;\n\tmaxflow+=delta;ans+=delta*dis[t];\n}\nin int f(re i,re j) {return i*(n*m+1)+j;}\nin int g(re i,re j) {return (i-1)*m+j;}\nin bool ok(re i,re j) {return (i>=1&&i<=n&&j>=1&&j<=m);}\nin void turn(re p,re x,re y,re z) {add(f(x,p),f(y,p),1,z);}\nint main()\n{\n//\tfreopen(\"infinityloop.in\",\"r\",stdin);\n//\tfreopen(\"infinityloop.out\",\"w\",stdout);\n\tn=read(),m=read(); s=0;t=4*(n*m+1)+4;\n\tfor(re i=1;i<=n;i++) for(re j=1;j<=m;j++) mp[g(i,j)]=read();\n\tfor(re i=1;i<=n;i++) for(re j=1;j<=m;j++)\n\t{\n\t\tre p=g(i,j);col=(i+j)%2;\n\t\tif(col)\n\t\t{\n\t\t\tfor(re k=0;k<=3;k++) \n\t\t\tif((mp[p]>>k)&1) add(s,f(k,p),1,0),preflow++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(re k=0;k<=3;k++) \n\t\t\tif((mp[p]>>k)&1) add(t,f(k,p),1,0);\n\t\t}\n\t\tif(col)\n        {\n            if(ok(i-1,j)) add(f(0,p),f(2,g(i-1,j)),1,0);\n            if(ok(i,j+1)) add(f(1,p),f(3,g(i,j+1)),1,0);\n            if(ok(i+1,j)) add(f(2,p),f(0,g(i+1,j)),1,0);\n            if(ok(i,j-1)) add(f(3,p),f(1,g(i,j-1)),1,0);\n        }\n        switch(mp[p])\n        {\n\t\t\tcase 0: break; // 0000\n\t\t\tcase 5: break; // 0101\n\t\t\tcase 10: break; // 1010\n\t\t\tcase 15: break; // 1111\n\t\t\tcase 1: turn(p,0,1,1);turn(p,0,2,2);turn(p,0,3,1);break; // 0001\n\t\t\tcase 2: turn(p,1,0,1);turn(p,1,3,2);turn(p,1,2,1);break; // 0010\n\t\t\tcase 4: turn(p,2,1,1);turn(p,2,0,2);turn(p,2,3,1);break; // 0100\n\t\t\tcase 8: turn(p,3,0,1);turn(p,3,1,2);turn(p,3,2,1);break; // 1000\n\t\t\tcase 3: turn(p,0,2,1);turn(p,1,3,1);break; // 0011\n\t\t\tcase 6: turn(p,1,3,1);turn(p,2,0,1);break; // 0110\n\t\t\tcase 9: turn(p,0,2,1);turn(p,3,1,1);break; // 1001\n\t\t\tcase 12: turn(p,2,0,1);turn(p,3,1,1);break; // 1100\n\t\t\tcase 7: turn(p,0,3,1);turn(p,1,3,2);turn(p,2,3,1);break; // 0111\n\t\t\tcase 11: turn(p,0,2,2);turn(p,1,2,1);turn(p,3,2,1);break; // 1011\n\t\t\tcase 13: turn(p,0,1,1);turn(p,2,1,1);turn(p,3,1,2);break; // 1101\n\t\t\tcase 14: turn(p,3,0,1);turn(p,2,0,2);turn(p,1,0,1);break; // 1110\n\t\t}\n\t}\n\twhile(spfa()) solve();\n\tif(maxflow!=preflow) return puts(\"-1\"),0;\n\tcout<<ans<<endl;\n}\n\n```\n\n\n",
        "postTime": 1562747647,
        "uid": 72679,
        "name": "disangan233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1ahttps://www.luogu.com.cn/problem/P4003\n\n\u7b80\u660e\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u77e9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u90fd\u6709\u4e00\u79cd\u6c34\u7ba1\uff0c\u6bcf\u79cd\u6c34\u7ba1\u53ef\u4ee5\u5411\u4e0a\u4e0b\u5de6\u53f3\u8fd9\u56db\u4e2a\u65b9\u5411\u4e2d\u7684\u82e5\u5e72\u4e2a\u7ed9\u5b9a\u7684\u65b9\u5411\u5ef6\u4f38\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06\u4e00\u4e2a\u683c\u5b50\u7684\u6c34\u7ba1\u987a\u6216\u9006\u65f6\u9488\u65cb\u8f6c90\u00b0\uff0c\u95ee\u4f7f\u6c34\u7ba1\u5168\u90e8\u95ed\u5408\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u770b\u8d77\u6765\u5c31\u975e\u5e38\u7684\u53ef\u4ee5\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u65e2\u7136\u662f\u77e9\u9635\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u9ed1\u767d\u67d3\u8272\uff0c\u5411\u6e90\u70b9\u8fde\u767d\u70b9\uff0c\u5411\u6c47\u70b9\u8fde\u9ed1\u70b9\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u62c6\u70b9\uff0c\u6bcf\u4e2a\u683c\u5b50\u591a\u62c6\u56db\u4e2a\u63a5\u53e3\u65b9\u5411\u7684\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u8868\u793a\u51fa\u6765\u73b0\u5728\u6c34\u7ba1\u7684\u72b6\u6001\uff0c\u5bf9\u4e8e\u65cb\u8f6c\u53ef\u4ee5\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n- \u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u7684\u70b9\uff1a\u8be5\u65b9\u5411\u548c\u548c\u5b83\u76f8\u5bf9\u7684\u65b9\u5411\u8fde\u8d39\u7528\u4e3a2\u7684\u8fb9\uff0c\u8bf4\u660e\u9700\u8981\u65cb\u8f6c2\u6b21\uff1b\u5269\u4e0b\u7684\u4e24\u4e2a\u65b9\u5411\u8fde\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u53ea\u9700\u8981\u65cb\u8f6c1\u6b21\u3002\n- \u6709\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\uff1a\u8fd9\u4e24\u4e2a\u65b9\u5411\u5206\u522b\u548c\u548c\u8be5\u65b9\u5411\u76f8\u5bf9\u7684\u8fb9\u8fde\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u65cb\u8f6c1\u6b21\u7684\u53ef\u4ee5\u8868\u793a\uff1b\u65cb\u8f6c2\u6b21\u7684\u53ef\u4ee5\u901a\u8fc7\u90fd\u6d41\u8fd9\u4e24\u4e2a\u8fb9\u8868\u793a\u3002\n- \u6709\u4e09\u4e2a\u65b9\u5411\u7684\u8fb9\uff1a\u5c06\u6709\u76f8\u5bf9\u8fb9\u7684\u8fb9\u548c\u5bf9\u8fb9\u8fde\u8d39\u7528\u4e3a2\u7684\u8fb9\uff0c\u8bf4\u660e\u9700\u8981\u65cb\u8f6c2\u6b21\uff1b\u5269\u4e0b\u7684\u4e24\u4e2a\u8fb9\u5411\u6ca1\u6709\u65b9\u5411\u7684\u8fb9\u8fde\u8d39\u7528\u4e3a1\u7684\u8fb9\uff0c\u53ea\u9700\u8981\u65cb\u8f6c1\u6b21\u3002\n- \u56db\u4e2a\u65b9\u5411\u7684\u8fb9\u4e0d\u9700\u8981\u65cb\u8f6c\uff0c\u53ea\u6709\u5bf9\u7740\u7684\u65b9\u5411\u7684\u8fb9\u4e0d\u80fd\u65cb\u8f6c\u3002\n\n\u76f8\u90bb\u7684\u683c\u5b50\u5728\u5bf9\u5e94\u65b9\u5411\u4e0a\u8fde\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u8bb0\u5f55\u4e0b\u6240\u6709\u683c\u5b50\u65b9\u5411\u7684\u4e2a\u6570\u548c$tot$\uff0c$tot/2=flow$\u8bf4\u660e\u6709\u89e3\uff0c\u56e0\u4e3a\u4e24\u4e2a\u6c34\u7ba1\u7684\u63a5\u53e3\u5408\u4e0a\u6210\u4e00\u4e2a\u4e86\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u521a\u624d\u7684\u8fde\u8fb9\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u628a\u65cb\u8f6c\u4e2d\u91cd\u5408\u7684\u8fb9\u7565\u53bb\u4e86\uff0c\u753b\u753b\u56fe\u5c31\u53ef\u4ee5\u5f88\u597d\u7406\u89e3\u4e86\u3002\n\n\u6211\u662f\u5206\u60c5\u51b5\u8ba8\u8bba\u7684\uff0c\u6ca1\u6709\u7528\u4e5f\u4e0d\u4f1a\u7528\u4ec0\u4e48\u9ad8\u8d85\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7QAQ\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nconst int N = 2e3;\nconst int M = 114514;\nconst int inf = 19260817;\nusing namespace std;\nstruct edges\n{\n\tint to,cost,f;\n}edge[M * 2 + 5];\nint nc,tot,num[M + 5],mf,p[M + 5],n,m,a[N + 5],ans,mp[N + 5][N + 5],id[N + 5][N + 5],id_cnt,co[N + 5][N + 5],S,T,nxt[M + 5],head[M + 5],edge_cnt = 1,dis[M + 5],vis[M + 5],q[M + 5],cur[M + 5];\nvoid add_edge(int u,int v,int w,int f)\n{\n\tedge[++edge_cnt] = (edges){v,w,f};\n\tnxt[edge_cnt] = head[u];\n\thead[u] = edge_cnt;\n}\nvoid add(int u,int v,int w,int f)\n{\n\tif (!nc)\n\t\tswap(u,v);\n\tadd_edge(u,v,w,f);\n\tadd_edge(v,u,0,-f);\n}\nvoid add_chai(int S,int x)\n{\n\tadd(S,x * 5,inf,0);\n\tif (a[x] & 1)\n\t\tadd(x * 5,x * 5 + 1,1,0);\n\tif (a[x] & 2)\n\t\tadd(x * 5,x * 5 + 2,1,0);\n\tif (a[x] & 4)\n\t\tadd(x * 5,x * 5 + 3,1,0);\n\tif (a[x] & 8)\n\t\tadd(x * 5,x * 5 + 4,1,0);\t\n}\nvoid rev(int x)\n{\n\tif (a[x] == 1)\n\t\tadd(x * 5 + 1,x * 5 + 2,1,1),add(x * 5 + 1,x * 5 + 4,1,1),add(x * 5 + 1,x * 5 + 3,1,2);\n\telse\n\tif (a[x] == 2)\n\t\tadd(x * 5 + 2,x * 5 + 1,1,1),add(x * 5 + 2,x * 5 + 3,1,1),add(x * 5 + 2,x * 5 + 4,1,2);\n\telse\n\tif (a[x] == 3)\n\t\tadd(x * 5 + 1,x * 5 + 3,1,1),add(x * 5 + 2,x * 5 + 4,1,1);\n\telse\n\tif (a[x] == 4)\n\t\tadd(x * 5 + 3,x * 5 + 2,1,1),add(x * 5 + 3,x * 5 + 4,1,1),add(x * 5 + 3,x * 5 + 1,1,2);\n\telse\n\tif (a[x] == 6)\n\t\tadd(x * 5 + 3,x * 5 + 1,1,1),add(x * 5 + 2,x * 5 + 4,1,1);\n\telse\n\tif (a[x] == 7)\n\t\tadd(x * 5 + 2,x * 5 + 4,1,2),add(x * 5 + 1,x * 5 + 4,1,1),add(x * 5 + 3,x * 5 + 4,1,1);\n\telse\n\tif (a[x] == 8)\n\t\tadd(x * 5 + 4,x * 5 + 1,1,1),add(x * 5 + 4,x * 5 + 3,1,1),add(x * 5 + 4,x * 5 + 2,1,2);\n\telse\n\tif (a[x] == 9)\n\t\tadd(x * 5 + 1,x * 5 + 3,1,1),add(x * 5 + 4,x * 5 + 2,1,1);\n\telse\n\tif (a[x] == 11)\n\t\tadd(x * 5 + 1,x * 5 + 3,1,2),add(x * 5 + 4,x * 5 + 3,1,1),add(x * 5 + 2,x * 5 + 3,1,1);\n\telse\n\tif (a[x] == 12)\n\t\tadd(x * 5 + 4,x * 5 + 2,1,1),add(x * 5 + 3,x * 5 + 1,1,1);\n\telse\n\tif (a[x] == 13)\n\t\tadd(x * 5 + 4,x * 5 + 2,1,2),add(x * 5 + 1,x * 5 + 2,1,1),add(x * 5 + 3,x * 5 + 2,1,1);\n\telse\n\tif (a[x] == 14)\n\t\tadd(x * 5 + 3,x * 5 + 1,1,2),add(x * 5 + 4,x * 5 + 1,1,1),add(x * 5 + 2,x * 5 + 1,1,1);\n}\nint dfs(int u,int flow)\n{\n\tif (u == T)\n\t\treturn flow;\n\tint sum = 0;\n\tp[u] = 1;\n\tfor (int &i = cur[u];i;i = nxt[i])\n\t{\n\t\tint v = edge[i].to,w = edge[i].cost,f = edge[i].f;\n\t\tif (w && dis[u] + f == dis[v] && !p[v])\n\t\t{\n\t\t\tint res = dfs(v,min(flow,w));\n\t\t\tedge[i].cost -= res;\n\t\t\tedge[i ^ 1].cost += res;\n\t\t\tflow -= res;\n\t\t\tsum += res;\n\t\t\tmf += res * f;\n\t\t\tif (!flow)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn sum;\n}\nint spfa()\n{\n\tfor (int i = 1;i <= id_cnt * 5 + 4;i++)\n\t\tcur[i] = head[i],vis[i] = 0,dis[i] = inf,p[i] = 0;\n\tdis[S] = 0;\n\tvis[S] = 1;\n\tint l = 1,r = 0;\n\tq[++r] = S;\n\twhile (l <= r)\n\t{\n\t\tint u = q[l++];\n\t\tvis[u] = 0;\n\t\tfor (int i = head[u];i;i = nxt[i])\n\t\t{\n\t\t\tint v = edge[i].to,w = edge[i].cost,f = edge[i].f;\n\t\t\tif (w && dis[u] + f < dis[v])\n\t\t\t{\n\t\t\t\tdis[v] = dis[u] + f;\n\t\t\t\tif (!vis[v])\n\t\t\t\t{\n\t\t\t\t\tq[++r] = v;\n\t\t\t\t\tvis[v] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[T];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i = 1;i <= n;i++)\n\t\tfor (int j = 1;j <= m;j++)\n\t\t\tid[i][j] = ++id_cnt,co[i][j] = (i + j) % 2;\n\tfor (int i = 1;i <= n;i++)\n\t\tfor (int j = 1;j <= m;j++)\n\t\t\tscanf(\"%d\",&a[id[i][j]]);\n\tfor (int i = 1;i <= 15;i++)\n\t\tfor (int j = 0;j < 4;j++)\n\t\t\tif (i & (1 << j))\n\t\t\t\tnum[i]++;\n\tS = 1;\n\tT = 2;\n\tfor (int i = 1;i <= n;i++)\n\t\tfor (int j = 1;j <= m;j++)\n\t\t{\n\t\t\tnc = co[i][j];\n\t\t\tif (co[i][j] == 1)\n\t\t\t\tadd_chai(S,id[i][j]);\n\t\t\telse\n\t\t\t\tadd_chai(T,id[i][j]);\n\t\t\ttot += num[a[id[i][j]]];\n\t\t\trev(id[i][j]);\n\t\t\tif (id[i - 1][j])\n\t\t\t\tadd(id[i][j] * 5 + 1,id[i - 1][j] * 5 + 3,1,0);\n\t\t\tif (id[i][j - 1])\n\t\t\t\tadd(id[i][j] * 5 + 4,id[i][j - 1] * 5 + 2,1,0);\t\t\n\t\t}\n\tint ans = 0;\n\twhile (spfa() != inf)\n\t\tans += dfs(S,inf);\n\tif (tot / 2 == ans)\n\t\tprintf(\"%d\\n\",mf);\n\telse\n\t\tprintf(\"-1\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1594348054,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "1\u5468\u524dAC\u7684\u9898\u6765\u8865\u4e00\u53d1\u9898\u89e3\u3002\n\n\u5728\u7ecf\u8fc7 $n$ \u4e2a\u5c0f\u65f6\u7684\u594b\u6597\u540e\uff0cLsWn \u7ec8\u4e8e AC \u4e86\u8fd9\u4e2a\u6bd2\u7624\u9898\u3002\n\n\n\uff08\u8fd9\u91cc\u7684\u622a\u56fe\u90fd\u662f\u4ece\u539f\u65e0\u9650\u4e4b\u73af\u6e38\u620f\u4e2d\u622a\u56fe\u7684\u2026\u2026\u5728\u505a\u8fd9\u9898\u524d\u4f53\u9a8c\u4e86\u4e00\u6ce2\u65e0\u9650\u4e4b\u73af\u3002\uff09\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4003)  \n\n\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u6b63\u786e\u53ef\u4ee5\u6d41\u901a\u7684\u56fe \uff08\u52a0\u4e0a\u4e86\u9ed1\u767d\u76f8\u95f4\u67d3\u8272\uff0c\u7136\u540e\u9ec4\u8272\u65b9\u5757\u4ee3\u8868\u8fd9\u4e2a\u683c\u5b50\u7684\u4e0a\u65b9\uff0c\u7ea2\u8272\u4ee3\u8868\u4e0b\u65b9\uff0c\u7d2b\u8272\u662f\u5de6\uff0c\u7070\u8272\u662f\u53f3\uff09\uff08\u6700\u540e\u4e00\u884c\u7684\u4e0a\u4e0b\u753b\u53cd\u4e86\u2026\u2026\u51d1\u6d3b\u51d1\u6d3b\uff09\u3002\n\n![image.png](https://public.noi.top/image/1588644580997.png)\n\n\u9ed1\u767d\u67d3\u8272\u7f51\u7edc\u6d41\u4e00\u8d2f\u7684\u5957\u8def\uff0c\u5c06\u9ed1\u70b9\u6d41\u5411\u767d\u70b9\uff0c\u6e90\u70b9\u6d41\u5411\u9ed1\u70b9\uff0c\u767d\u70b9\u6d41\u5411\u6c47\u70b9\uff0c\u7136\u540e\u6839\u636e\u62c6\u70b9\u4e00\u8d2f\u7684\u5957\u8def\uff0c\u5185\u90e8\u8fde\u8fb9\u3002\uff08\u6307\u4e00\u4e2a\u70b9\u62c6\u6210\u4e94\u4e2a\u70b9\uff0c\u4e2d\u95f4\u548c\u4e0a\u4e0b\u5de6\u53f3\uff09\n\n\u663e\u7136\uff0c\u5408\u7406\u7684\u65b9\u6848\u5c31\u662f\u6240\u6709\u7684\u9ed1\u70b9\u548c\u767d\u70b9\u4e92\u76f8\u5339\u914d\uff0c\u5373\u6709\u5b8c\u5907\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u6ee1\u6d41\uff0c\u6ca1\u6709\u4e00\u6ef4\u6c34\u6f0f\u51fa\u6765\u3002\u4ece\u9ed1\u70b9\u6d41\u51fa\u7684\u70b9\u90fd\u6709\u53bb\u5904\u3002\n\n![image.png](https://public.noi.top/image/1588645628919.png)\n\n\n\u8fd9\u662f\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848\u3002\u90a3\u4e48\u5982\u679c\u51fa\u4e86\u70b9\u5c0f\u5dee\u9519\uff0c\u9700\u8981\u65cb\u8f6c\u5462\uff1f\n\n![image.png](https://public.noi.top/image/1588645644232.png)\n\n\u8fd9\u5c31\u5f88\u8c14\u8c14\uff0c\u53f3\u4e0b\u89d2\u6ca1\u6cd5\u8fde\u901a\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u65cb\u8f6c\u3002\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u5de6\u65cb\u4e00\u6b21\uff0c\u76f8\u5f53\u4e8e\u628a\u53f3\u63d2\u5934\u6362\u6210\u5de6\u63d2\u5934\u3002\u4e8e\u662f\u8fde\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u53f3\u65cb\u4e00\u6b21\uff0c\u76f8\u5f53\u4e8e\u628a\u4e0b\u63d2\u5934\u6362\u6210\u4e0a\u63d2\u5934\uff0c\u4e8e\u662f\u8fde\u8fb9\u3002\u3002\u65cb\u8f6c\u4e24\u6b21\uff0c\u8d70\u4e24\u6b21\u65cb\u8f6c\u4e00\u6b21\uff0c\u6545\u4e0d\u8fde\u8fb9\u3002\n\n![image.png](https://public.noi.top/image/1588645661591.png)\n\n\u73b0\u5728\u8ba8\u8bba\u8fde\u8fb9\u60c5\u51b5\uff1a\n\n1. \u7c7b\u4f3c\u4e8e \u250c  \n\u4e0a\u9762\u5df2\u7ecf\u8bb2\u8fc7\uff0c\u4e0d\u518d\u9648\u8ff0\u3002\n2. \u7c7b\u4f3c\u4e8e Q  \n\u5982\u679c\u5de6/\u53f3\u7ffb\u8f6c\uff0c\u90a3\u4e48\u5c31\u7b49\u4e8e\u63d2\u5934\u5411\u5de6/\u53f3\u6362\u3002\u7ffb\u8f6c\u4e24\u6b21\u5c31\u662f\u4e0a\u4e0b\u6362\uff0c\u5de6\u53f3\u6362\u3002\u6362\u4e24\u6b21\u7684\u8fde\u8fb9\u7684\u8d39\u7528\u662f $2$\u3002\n3. \u7c7b\u4f3c\u4e8e\u4e28  \n\u4e0d\u5904\u7406\uff0c\u56e0\u4e3a\u4e0d\u80fd\u8f6c\u3002\n4. \u7c7b\u4f3c\u4e8e T  \n\u548c \u250c \u6bd4\u8f83\u76f8\u4f3c\u3002\u4e0d\u8fc7\u9700\u8981\u8fde\u4e0a\u4e0b\u8fb9\u3002  \n5 \u7c7b\u4f3c\u4e8e \u5341  \n\u4e0d\u5904\u7406\uff0c\u56e0\u4e3a\u8f6c\u4e86\u4e5f\u6ca1\u7528\u3002\n    \n\u7136\u540e\u603b\u4f53 $15$ \u79cd\u60c5\u51b5\u8fd8\u9700\u4e00\u4e00\u5206\u6790\u2026\u2026\u8fd9\u5c31\u5f88\u6bd2\u7624\u3002\u8fd9\u5c31\u653e\u5728\u4ee3\u7801\u4e2d\u4e86\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\uff1a  \n1. \u4e0d\u8981\u91cd\u590d\u5efa\u8fb9\uff01\u4e0d\u8981\u91cd\u590d\u5efa\u8fb9\uff01\u4e0d\u8981\u91cd\u590d\u5efa\u8fb9\uff01\uff08\u5426\u5219\u4f60\u7b97\u51fa\u6765\u7684\u7b54\u6848\u4f1a\u5c0f\u4e8e\u6807\u51c6\u7b54\u6848\uff09  \n2. \u6bd2\u7624\u5efa\u8fb9\u9898\u7684\u7f51\u7edc\u6d41\u771f\u7684\u4e0d\u80fd\u7801\u9519\uff01\u771f\u7684\u4e0d\u80fd\uff01  \n3. hsh \u51fd\u6570\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e6+9,inf=0x3f3f3f3f3f3f3f3f;\nint n,m,a[2009][2009],debugger;\n\nstruct edge{int to,nxt,c,w;}e[N*2]; int hd[N],tot=1;\nvoid add(int u,int v,int c,int w){e[++tot]=(edge){v,hd[u],c,w};hd[u]=tot;}\nvoid addh(int u,int v,int c,int w){\n\t//cout<<u<<\" \"<<v<<\" \"<<c<<\" \"<<w<<endl;\n\tdebugger+=w;\n\tadd(u,v,c,w),add(v,u,0,-w);\n}\nvoid addr(int u,int v,int c,int w){addh(v,u,c,w);}\n\nint s,t,flow,cost,tmp,ans;\nint d[N]; bool in[N]; \nbool spfa(){\n\tqueue<int>q; q.push(s); memset(d,0x3f,sizeof(d)); d[s]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop(); in[u]=0;\n\t\tfor(int i=hd[u],v;i;i=e[i].nxt)\n\t\t\tif(e[i].c&&d[v=e[i].to]>d[u]+e[i].w){\n\t\t\t\td[v]=d[u]+e[i].w;\n\t\t\t\tif(!in[v]) q.push(v),in[v]=1;\n\t\t\t}\n\t}\n\treturn d[t]<inf;\n}\nint dinic(int u,int flow){\n\tint rest=flow; if(u==t) return flow; in[u]=1;\n\tfor(int i=hd[u],v;i&&rest;i=e[i].nxt)\n\t\tif(!in[v=e[i].to]&&e[i].c&&d[v]==d[u]+e[i].w){\n\t\t\tint used=dinic(v,min(e[i].c,rest));\n\t\t\tif(!used) d[v]=-1;\n\t\t\trest-=used; e[i].c-=used,e[i^1].c+=used,cost+=used*e[i].w; \n\t\t}\n\tin[u]=0;\n\treturn flow-rest;\n}\n\n// 0:\u4e2d  1:\u4e0a  2:\u53f3  3:\u4e0b  4:\u5de6 \nint hsh(int x,int y,int loc){return (x*m-m+y)+loc*m*n;}\nbool ok(int x,int y){return x>0&&x<=n&&y>0&&y<=m;}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m); s=n*m*5+1,t=n*m*5+2;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%lld\",&a[i][j]);\n\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++){\n\t\tif((i+j)%2){ //\u9ed1\u683c\u5b50 \n\t\t\taddh(s,hsh(i,j,0),inf,0);\n\t\t\tif(ok(i-1,j))\n\t\t\t\taddh(hsh(i,j,1),hsh(i-1,j,3),1,0);\n\t\t\tif(ok(i,j+1))\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j+1,4),1,0);\n\t\t\tif(ok(i+1,j))\t\n\t\t\t\taddh(hsh(i,j,3),hsh(i+1,j,1),1,0);\n\t\t\tif(ok(i,j-1))\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j-1,2),1,0);\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t\tif(a[i][j]&(1ll<<(k-1))){\n\t\t\t\t\taddh(hsh(i,j,0),hsh(i,j,k),1,0);\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\tif(a[i][j]==15);\t //\u5168 \n\t\t\telse if(a[i][j]==1){ //\u4e0a \n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==2){ //\u53f3\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t} \n\t\t\telse if(a[i][j]==3){ //\u4e0a\u53f3 \n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t}\n\t\t\telse if(a[i][j]==4){ //\u4e0b \n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t} \n\t\t\telse if(a[i][j]==5); //\u4e0a\u4e0b \n\t\t\telse if(a[i][j]==6){ //\u53f3\u4e0b \n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t}\n\t\t\telse if(a[i][j]==7){ //\u4e0a\u53f3\u4e0b \n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==8){ //\u5de6 \n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==9){ //\u4e0a\u5de6 \n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,1); \n\t\t\t}\n\t\t\telse if(a[i][j]==10);//\u53f3\u5de6 \n\t\t\telse if(a[i][j]==11){//\u4e0a\u53f3\u5de6 \n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==12){//\u4e0b\u5de6 \n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,1); \n\t\t\t}\n\t\t\telse if(a[i][j]==13){//\u4e0a\u4e0b\u5de6 \n\t\t\t\taddh(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==14){//\u53f3\u4e0b\u5de6 \n\t\t\t\taddh(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\taddh(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\taddh(hsh(i,j,0),t,inf,0);\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t\tif(a[i][j]&(1<<(k-1))){\n\t\t\t\t\taddr(hsh(i,j,0),hsh(i,j,k),1,0);\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\tif(a[i][j]==15);\t //\u5168 \n\t\t\telse if(a[i][j]==1){ //\u4e0a \n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==2){ //\u53f3\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t} \n\t\t\telse if(a[i][j]==3){ //\u4e0a\u53f3 \n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t}\n\t\t\telse if(a[i][j]==4){ //\u4e0b \n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t} \n\t\t\telse if(a[i][j]==5); //\u4e0a\u4e0b \n\t\t\telse if(a[i][j]==6){ //\u53f3\u4e0b \n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,1);\n\t\t\t}\n\t\t\telse if(a[i][j]==7){ //\u4e0a\u53f3\u4e0b \n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,4),1,1);\n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,4),1,1);\n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,4),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==8){ //\u5de6 \n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==9){ //\u4e0a\u5de6 \n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,1); \n\t\t\t}\n\t\t\telse if(a[i][j]==10);//\u53f3\u5de6 \n\t\t\telse if(a[i][j]==11){//\u4e0a\u53f3\u5de6 \n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,3),1,1);\n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,3),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==12){//\u4e0b\u5de6 \n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,1); \n\t\t\t}\n\t\t\telse if(a[i][j]==13){//\u4e0a\u4e0b\u5de6 \n\t\t\t\taddr(hsh(i,j,1),hsh(i,j,2),1,1);\n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,2),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,2),1,2);\n\t\t\t}\n\t\t\telse if(a[i][j]==14){//\u53f3\u4e0b\u5de6 \n\t\t\t\taddr(hsh(i,j,2),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,4),hsh(i,j,1),1,1);\n\t\t\t\taddr(hsh(i,j,3),hsh(i,j,1),1,2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(spfa()) while(tmp=dinic(s,inf)) flow+=tmp;\n\tif(flow*2==ans) printf(\"%lld\\n\",cost);\n\telse puts(\"-1\");\n\treturn 0;\n}\n```\n\n\u542c\u8bf4\u597d\u50cf\u5927\u4f6c\u6709\u66f4\u77ed\u7684\u89e3\u6cd5\u2026\u2026\u849f\u84bb\u6ca1\u6709\u600e\u4e48\u591a\u60f3\u3002\u8fd9\u4e2a\u4ee3\u7801\u770b\u4f3c\u957f\uff0c\u5176\u5b9e\u7b2c\u4e8c\u6bb5\u52a0\u8fb9\u548c\u7b2c\u4e00\u6bb5\u52a0\u8fb9\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff08addh -> addr\uff0c\u7136\u540e\u5220\u6389\u4e00\u6bb5\u4e1c\u897f\uff09\u3002\u6240\u4ee5\u590d\u5236\u9ecf\u8d34\u8fc7\u6765+\u7f16\u8bd1\u5668\u7684\u67e5\u627e\u66ff\u6362\u529f\u80fd\u5c31\u80fd\u5f88\u5feb\u89e3\u51b3\u3002",
        "postTime": 1588635384,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4003 \u3010\u65e0\u9650\u4e4b\u73af\u3011"
    },
    {
        "content": "\u4f60\u8c37\u5e26\u601d\u7ef4\u9898\u3002\n\n## \u9898\u9762\n\n\u9898\u76ee\u4f20\u9001\u95e8\uff1a[Link to Luogu](https://www.luogu.com.cn/problem/P4003)\u3002\n\n> \u7ed9\u5b9a $n\\times m$ \u7684\u7f51\u683c\uff0c\u7f51\u683c\u4e0a\u6709\u4e9b\u6c34\u7ba1\uff08\u6c34\u7ba1\u6837\u5f0f\u89c1\u539f\u9898\uff09\u3002\u6c42\u6700\u5c11\u65cb\u8f6c\u6c34\u7ba1\uff08\u4e0d\u80fd\u65cb\u8f6c\u76f4\u7ebf\u578b\u7ba1\u9053\uff09\u6b21\u6570\u4f7f\u5176\u4e0d\u4f1a\u6f0f\u6c34\uff0c\u6216\u5224\u65ad\u65e0\u89e3\u3002\u4e00\u6b21\u65cb\u8f6c\u53ea\u80fd\u65cb\u8f6c $90^\\circ$ \u800c\u4e0d\u80fd\u4e00\u6b21\u65cb\u8f6c $180^\\circ$\u3002\n>\n> $nm\\leqslant 2000$\u3002\n\n\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u628a $nm\\leqslant 2000$ \u770b\u6210 $n,m\\leqslant 2000$ \u4ee5\u81f3\u4e8e\u6211\u5f00\u9898\u89e3\u7684\u65f6\u5019\u90fd\u5728\u8d28\u7591\u9898\u89e3\u590d\u6742\u5ea6\u6b63\u786e\u6027\u3002\uff09\n\n## \u9898\u89e3\n\n\u4e0b\u6587\u7684\u914d\u56fe\u5168\u90e8\u6765\u81ea\u539f\u9898\u7684\u56fe\uff0c\u62c6\u89e3\u51fa\u6bcf\u4e2a\u7ba1\u5b50\u4e4b\u540e\u5728 Excel \u91cc\u9762\u62fc\u8d77\u6765\u3002\u5f88\u591a\u63a5\u53e3\u53ef\u80fd\u6ca1\u5bf9\u9f50 QAQ\u3002\n\n### \u4e0d\u4f1a\u65cb\u8f6c\n\n\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e2a\u4e0d\u4f1a\u6f0f\u6c34\u7684\u60c5\u51b5\uff1a\n\n![](https://pic.imgdb.cn/item/62157d6b2ab3f51d918beb8d.png)\n\n\uff08\u4e3a\u4ec0\u4e48\u753b\u4e00\u4e2a\u8fd9\u4e2a\u56fe\uff1f\u5b83\u597d\u5c31\u597d\u5728\u6240\u6709\u6837\u5f0f\u7684\u7ba1\u5b50\u90fd\u7528\u8fc7\u2026\u2026\uff09\n\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u5f88\u96be\u6709\u4ec0\u4e48\u601d\u8def\u3002\u4f46\u662f\u5982\u679c\u8003\u8651\u7f51\u7edc\u6d41\uff0c\u4e0d\u96be\u5f97\u5230\u6240\u8c13\u201c\u4e0d\u4f1a\u6f0f\u6c34\u201d\u7684\u6761\u4ef6\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6ee1\u6d41\u7684\u95ee\u9898\uff0c\u5373\u6bcf\u4e2a\u6c34\u7ba1\uff08\u7684\u5206\u652f\u53e3\uff09\u5bb9\u91cf\u90fd\u4e3a $1$\uff0c\u6700\u7ec8\u8981\u4fdd\u8bc1\u6ee1\u6d41\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5148\u8003\u8651\u5982\u4f55\u5bf9\u4e00\u4e2a\u4e0d\u9700\u8981\u65cb\u8f6c\u7684\u56fe\u5efa\u6a21\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u56fe\u7684\u6bcf\u4e2a\u6c34\u7ba1\u7684\u652f\u53e3\u6ee1\u6d41\u3002\u53ef\u4ee5\u8003\u8651\u62c6\u70b9\uff0c\u5982\u679c\u4f60\u548c\u6211\u4e00\u6837 naive \u5730\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\uff0c\u4f60\u53d1\u73b0\u662f\u5b8c\u5168\u4e0d\u53ef\u884c\u7684\u3002\u4e8e\u662f\u6211\u4eec\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\uff1a\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u3001\u4e2d\u4e94\u4e2a\u70b9\u3002\u5176\u4e2d\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u662f\u201c\u8fde\u63a5\u70b9\u201d\uff0c\u8d1f\u8d23\u548c\u522b\u7684\u683c\u5b50\u76f8\u8fde\uff0c\u4e2d\u95f4\u70b9\u662f\u201c\u4e3b\u8981\u70b9\u201d\uff0c\u8d1f\u8d23\u63a5\u53e3\u6e90/\u6c47\u70b9\uff0c\u5e76\u6839\u636e\u6c34\u7ba1\u5f62\u72b6\u5411\u8fde\u63a5\u70b9\u8fde\u8fb9\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5b9a\u5411\u3001\u5982\u4f55\u5206\u5e03\u6e90\u6c47\u70b9\uff0c\u8003\u8651\u5c06\u683c\u5b50\u9ed1\u767d\u67d3\u8272\uff0c\u9ed1\u8272\u683c\u5b50\u7531\u6e90\u70b9\u8fde\u5411\u5176\u4e3b\u8981\u70b9\uff0c\u767d\u8272\u683c\u5b50\u7684\u4e3b\u8981\u70b9\u8fde\u5411\u5176\u6c47\u70b9\u3002\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u5927\u6d41\u4e0b\u63a5\u53e3\u90fd\u6709\u6d41\u91cf\u4e86\u3002\n\n\u4e8e\u662f\u5173\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684\u5efa\u8fb9\uff1a\n\n![](https://pic.imgdb.cn/item/6215853a2ab3f51d9196142e.png)\n\n\u5f53\u7136\u8fd9\u91cc\u5ffd\u7565\u4e86\u4e00\u4e9b\u6ca1\u6709\u7528\u5230\u7684\u8fde\u63a5\u70b9\uff0c\u800c\u4e14\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u91cd\u5408\u7684\u8fde\u63a5\u70b9\u53ea\u753b\u4e86\u4e00\u4e2a\u2026\u2026\u8fd9\u90fd\u662f\u4ee3\u7801\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u8fd9\u5f20\u56fe\u8db3\u4ee5\u89e3\u91ca\u95ee\u9898\u3002\n\n\u5c06\u6e90\u70b9\u8fde\u63a5\u5230\u6240\u6709\u7684\u7d2b\u8272\u70b9\uff0c\u5bb9\u91cf\u4e3a\u65e0\u9650\uff1b\u5c06\u6240\u6709\u9ec4\u8272\u70b9\u8fde\u63a5\u5230\u6c47\u70b9\uff0c\u5bb9\u91cf\u4e3a\u65e0\u9650\uff1b\u6240\u6709\u56fe\u4e2d\u7684\u9ed1\u8272\u8fb9\u5bb9\u91cf\u4e3a $1$\u3002\u90a3\u4e48\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u6d41\u5c31\u662f\u6bcf\u4e2a\u63a5\u53e3\u6ee1\u6d41\u7684\u3002\n\n### \u600e\u4e48\u8f6c\n\n\u6ce8\u610f\u5230\u5341\u5b57\u5f62\u7684\u7ba1\u9053\u8f6c\u4e0d\u8f6c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u5341\u5b57\u5f62\u7ba1\u9053\u600e\u4e48\u8f6c\u3002\u8fd8\u8981\u6ce8\u610f\u9898\u9762\u4e2d\u5199\u5230\u4e86\u76f4\u7ebf\u578b\u7ba1\u9053\u4e0d\u80fd\u8f6c\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u56fe\u6539\u9020\u4e00\u4e0b\uff0c\u5206\u522b\u8003\u8651\u5982\u4f55\u65cb\u8f6c Q \u578b\u3001T \u578b\u3001L \u578b\u7ba1\u9053\u3002\n\n![](https://pic.imgdb.cn/item/6215894d2ab3f51d919c14aa.png)\n\n\u56e0\u4e3a\u201c\u6d41\u91cf\u201d\u5df2\u7ecf\u7528\u6765\u5224\u662f\u5426\u6ee1\u6d41\uff08\u6709\u89e3\uff09\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u52a0\u4e00\u4e2a\u201c\u8d39\u7528\u201d\u6765\u4ee3\u8868\u65cb\u8f6c\u6b21\u6570\u3002\n\n\u53ef\u4ee5\u660e\u786e\u7684\u662f\uff0c\u5f53\u524d\u56fe\u4e0a\u6240\u6709\u7684\u8fb9\uff08\u9ed1\u8272\u8fb9\u3001\u6e90/\u6c47\u70b9\u4e0e\u7d2b/\u9ec4\u8272\u70b9\u7684\u8fde\u8fb9\uff09\u8d39\u7528\u90fd\u662f $0$\u3002\u8fd9\u662f\u4e0d\u9700\u8981\u65cb\u8f6c\u5c31\u80fd\u5f97\u5230\u7684\u5c40\u9762\u3002\n\n\u53e6\u5916\uff0c\u56e0\u4e3a\u540c\u79cd\u7c7b\u7684\u6c34\u7ba1\uff0c\u8fde\u8fb9\u65b9\u5f0f\u662f\u7b49\u4ef7\u7684\u3002\u56e0\u6b64\u5728\u672c\u6587\u4e2d\u6211\u4eec\u53ea\u8ba8\u8bba\u6309\u7167\u4e0a\u9762\u8fd9\u4e2a\u56fe\u91cc\u88ab\u6253\u4e71\u7684\u65b9\u5411\u8003\u8651\u3002\u5bf9\u4e8e\u540c\u7c7b\u578b\u3001\u4e0d\u540c\u65b9\u5411\u7684\u6c34\u7ba1\uff0c\u8f6c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002\u5f53\u7136\u8fd8\u8981\u6ce8\u610f\u8fde\u8fb9\u65b9\u5411\u548c\u9ed1\u767d\u67d3\u8272\u5bf9\u5e94\u7684\u989c\u8272\u6709\u5173\u3002\n\n\u4f8b\u5982\u4e0a\u56fe\uff0c\u6211\u4eec\u5e94\u8be5\u8981\u52a0\u5165\u4e00\u4e9b\u6709\u8d39\u7528\u7684\u8fb9\uff08\u4e0b\u56fe\u4e2d\u6a59\u8272\u7684\u8fb9\uff09\uff0c\u4f7f\u5176\u53d8\u4e3a\u4e00\u4e2a\u80fd\u6ee1\u6d41\u7684\u56fe\u3002\u4e0d\u96be\u53d1\u73b0\u5e94\u8be5\u662f\u5982\u4e0b\u7684\u60c5\u51b5\uff1a\n\n![](https://pic.imgdb.cn/item/62158cda2ab3f51d91a19d9d.png)\n\n\u7136\u540e\u5c31\u5bf9\u7740\u8fd9\u4e2a\u56fe\u5f00\u59cb\u5206\u8ba8\u5427 =.=\n\n------\n\n#### Q \u578b\n\n\u89c1\u4e0a\u56fe\u4e2d\u7b2c\u4e09\u884c\u7b2c\u4e09\u5217\uff0c\u6211\u4eec\u4ee5\u671d\u4e0a\u7684 Q \u578b\u6c34\u7ba1\u4e3a\u4f8b\u5b50\u8ba8\u8bba\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u63a5\u53e3\uff0c\u8fd9\u5f88\u597d\u505a\u3002\u5f80\u5de6\u3001\u5f80\u53f3\u90fd\u662f\u65cb\u8f6c\u4e00\u6b21\uff0c\u5f80\u4e0b\u9700\u8981\u65cb\u8f6c\u4e24\u6b21\u3002\u56e0\u6b64\u4ece\u4e0a\u8fde\u63a5\u70b9\u5411\u5de6\u3001\u53f3\u8fde\u63a5\u70b9\u8fde\u63a5\u6d41\u91cf $1$\uff0c\u8d39\u7528 $1$ \u7684\u8fb9\uff1b\u5411\u4e0b\u8fde\u63a5\u70b9\u8fde\u63a5\u6d41\u91cf $1$\uff0c\u8d39\u7528 $2$ \u7684\u8fb9\u3002\n\n#### L \u578b\n\n\u89c1\u4e0a\u56fe\u4e2d\u7b2c\u4e00\u884c\u7b2c\u56db\u5217\uff0c\u6211\u4eec\u4ee5\u8fde\u63a5\u53f3\u3001\u4e0b\u4e24\u4e2a\u4e24\u4e2a\u65b9\u5411\u7684 L \u578b\u6c34\u7ba1\u4e3a\u4f8b\u5b50\u8ba8\u8bba\u3002\n\n\u6211\u4eec\u8003\u8651\u5c06\u5176\u65cb\u8f6c\u4e3a\u8fde\u63a5\u5de6\u3001\u4e0b\u4e24\u4e2a\u65b9\u5411\u7684\u6c34\u7ba1\uff0c\u53ef\u4ee5\u89c6\u4e3a\u4e0b\u9762\u7684\u6c34\u7ba1\u6ca1\u52a8\uff0c\u628a\u53f3\u8fb9\u7684\u6c34\u7ba1\u63a5\u5230\u5de6\u8fb9\u6765\u3002\u800c\u65cb\u8f6c\u5230\u53f3\u3001\u4e0a\u65b9\u5411\u540c\u7406\u3002\u56e0\u6b64\u4ece\u53f3\u8fde\u63a5\u70b9\u5411\u5de6\u8fde\u63a5\u70b9\u8fde\u6d41\u91cf $1$\uff0c\u8d39\u7528 $1$ \u7684\u8fb9\uff0c\u4e0b\u8fde\u63a5\u70b9\u5411\u4e0a\u8fde\u63a5\u70b9\u8fde\u6d41\u91cf $1$\uff0c\u8d39\u7528 $1$ \u7684\u8fb9\u3002\n\n\u5982\u679c\u8981\u65cb\u8f6c\u5230\u5de6\u3001\u4e0a\u65b9\u5411\uff1f\u76f8\u5f53\u4e8e\u4e0b\u9762\u7684\u6c34\u7ba1\u63a5\u5230\u4e0a\u9762\u3001\u53f3\u8fb9\u7684\u6c34\u7ba1\u63a5\u5230\u5de6\u8fb9\u3002\u6070\u597d\u662f\u4e0a\u8ff0\u4e24\u4e2a\u8fde\u8fb9\u65b9\u5411\u7684\u603b\u548c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u8003\u8651\u3002\n\n### T \u578b\n\n\u89c1\u4e0a\u56fe\u7b2c\u800c\u884c\u7b2c\u4e00\u5217\uff0c\u6211\u4eec\u4ee5\u4e0b\u7aef\u6ca1\u6709\u63a5\u53e3\u7684 T \u578b\u6c34\u7ba1\u4e3a\u4f8b\u5b50\u8ba8\u8bba\u3002\n\n\u5982\u679c\u8981\u628a\u5b83\u53d8\u6210\u5de6\u7aef\u6216\u53f3\u7aef\u6ca1\u6709\u63a5\u53e3\u7684\u6c34\u7ba1\uff0c\u53ea\u9700\u8981\u65cb\u8f6c\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86\uff1b\u5982\u679c\u8981\u53d8\u6210\u4e0a\u7aef\u6ca1\u6709\u63a5\u53e3\u7684\u6c34\u7ba1\uff0c\u5219\u9700\u8981\u65cb\u8f6c\u4e24\u6b21\u3002\u56e0\u6b64\u7531\u4e0b\u8fde\u63a5\u70b9\u5411\u5de6\u3001\u53f3\u8fde\u63a5\u70b9\u8fde\u6d41\u91cf $1$\uff0c\u8d39\u7528 $1$ \u7684\u8fb9\uff1b\u5411\u4e0a\u8fde\u63a5\u70b9\u8fde\u6d41\u91cf $1$\uff0c\u8d39\u7528 $2$ \u7684\u8fb9\u3002\n\n------\n\n\u4e8e\u662f\u6240\u6709\u7684\u60c5\u51b5\u90fd\u5df2\u7ecf\u8ba8\u8bba\u5b8c\u4e86\uff0c\u5efa\u5b8c\u8fb9\u4e4b\u540e\uff0c\u8dd1\u4e00\u904d\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\u82e5\u6ca1\u6709\u6ee1\u6d41\uff0c\u5219\u8bf4\u660e\u65e0\u89e3\uff1b\u5426\u5219\u65cb\u8f6c\u6b21\u6570\u5c31\u662f\u6700\u5c0f\u8d39\u7528\u3002\n\n\u5efa\u6a21\u5b9e\u5728\u96be\u5199\u3001\u60c5\u51b5\u771f\u591a\u2026\u2026\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u5f88\u957f\uff0c\u914c\u60c5\u9605\u8bfb\u3002\n\n\u6211\u4e5f\u662f\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u5f00 O2 \u624d\u80fd\u8fc7\u2026\u2026\n\n[Link](https://www.luogu.com.cn/paste/vx9ui5mm)\u3002",
        "postTime": 1645580939,
        "uid": 181776,
        "name": "_Arahc_",
        "ccfLevel": 7,
        "title": "P4003 \u65e0\u9650\u4e4b\u73af"
    },
    {
        "content": "## Tag\n\n\u72b6\u6001\u538b\u7f29\uff0c\u52a8\u6001\u89c4\u5212\u3002\n\n## Preface\n\n\u788e\u788e\u5ff5\uff1a\n\n\u8003\u573a\u4e0a\u770b\u5230\u8fd9\u4e2a\u9898\u7684\u4e00\u77ac\u95f4\u60f3\u5230\u4e86\u8981\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u4e0d\u4f1a\u5efa\u56fe\u3002\n\n\u521a\u521a\u51c6\u5907\u81ea\u95ed\u7684\u65f6\u5019\u7a81\u7136\u53d1\u73b0\u597d\u50cf\u53ef\u4ee5\u72b6\u6001\u538b\u7f29\u3002\n\n\u72b6\u538b\u6253\u5b8c\u4e86\u53d1\u73b0\u8fd9\u73a9\u610f\u72b6\u6001\u597d\u5c11\u554a\u2026\u2026\n\n\u679c\u7136\u62ff\u4e2a map \u5b58\u4e00\u4e0b\u5c31\u8fc7\u4e86\u2026\u2026\n\n## Description\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P4003)\n\n\u7ed9\u5b9a\u4e00\u4e2a $n \\times m$ \u7684\u7f51\u683c\u56fe\uff0c\u6709 $15$ \u79cd\u5f62\u72b6\u7684\u6c34\u7ba1\u6392\u5e03\u5728\u91cc\u9762\uff0c\u9700\u8981\u8fd9\u4e9b\u6c34\u7ba1\u4e92\u76f8\u76f8\u8fde\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8f6c\u52a8 $90^\\circ$\uff0c\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n$\\texttt{data range}: n\\times m \\leq 2\\times 10^3$.\n\n## Solution\n\n\u5bf9\u4e8e\u672c\u9898\u7684\u8d39\u7528\u6d41\u89e3\u6cd5\u7b14\u8005\u4e0d\u60f3\u5728\u8fd9\u91cc\u8d58\u8ff0\uff0c\u8fd9\u4e2a\u5730\u65b9\u8ba8\u8bba\u7684\u662f\u672c\u9898\u7684**\u72b6\u6001\u538b\u7f29**\u89e3\u6cd5\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u51fa\u6765\u4e00\u4e2a $O(nm2^{\\min(n,m)})$ \u7684\u90e8\u5206\u5206\u505a\u6cd5\uff0c\u4e5f\u5c31\u662f\u672c\u9898 40pts \u7684\u90e8\u5206\u5206\uff0c\u4e5f\u5c31\u662f\u7528\u8f6e\u5ed3\u7ebf dp \u6765\u8f6c\u79fb\u72b6\u6001\uff0c\u53ef\u4ee5\u8bbe\u4e00\u4e2a 01 \u72b6\u6001\u4e3a\u4e00\u4e2a\u68cb\u76d8\u7684\u8f6e\u5ed3\u7ebf\u5f62\u72b6\uff0c\u4ee4 $2^i$ \u4e3a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u662f\u5426\u6709\u5411\u4e0b\u63d2\u7684\u7ba1\u5b50\uff0c$2^0$ \u4e3a\u6709\u6ca1\u6709\u5411\u53f3\u63d2\u7684\u7ba1\u5b50\uff0c\u7136\u540e\u76f4\u63a5\u8f6c\u79fb\u5c31\u53ef\u4ee5\u505a\u51fa\u90e8\u5206\u5206\u4e86\u3002\n\n\u4f46\u662f\u7b14\u8005\u5728\u8003\u573a\u4e0a\u5199\u4e0d\u51fa\u8d39\u7528\u6d41\u7684\u60c5\u51b5\u4e0b\u5199\u4e86\u4e00\u4e2a\u72b6\u6001\u538b\u7f29\uff0c\u7136\u540e\u4ed4\u7ec6\u4e00\u60f3\u2026\u2026\n\n\u521d\u59cb\u72b6\u6001\u4e00\u4e2a\uff0c\u8f6c\u79fb\u51fa\u6765\u7684\u72b6\u6001\u96be\u9053\u4f1a\u5f88\u591a\u5417\uff1f\n\n\u4e8e\u662f\u4e0d\u4e25\u8c28\u7684\u4f30\u8ba1\u4e86\u4e00\u4e0b\u6211\u4eec\u9898\u76ee\u6240\u80fd\u591f\u8f6c\u79fb\u51fa\u6765\u7684\u72b6\u6001\u6570\u91cf\uff0c\u6211\u4eec\u7c97\u7565\u7684\u8003\u8651\u6bcf\u4e00\u79cd\u60c5\u51b5\u4f1a\u8f6c\u79fb\u51fa\u591a\u5c11\u79cd\u72b6\u6001\u4ee5\u53ca\u5176\u53ef\u4ee5\u63a5\u53d7\u591a\u5c11\u79cd\u5408\u6cd5\u7684\u72b6\u6001\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u4e00\u4e2a\u683c\u5b50\u53ea\u80fd\u63a5\u53d7\u6700\u591a\u56db\u79cd\u4e0e\u5176\u76f4\u63a5\u76f8\u5173\u7684\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u5176\u4e0a\u9762\u6709\u6ca1\u6709\u7ba1\u5b50\uff0c\u5176\u5de6\u8fb9\u6709\u6ca1\u6709\u7ba1\u5b50\u8fd9\u56db\u79cd\u72b6\u6001\uff0c\u6211\u4eec\u7528 $0/1,0/1$  \u6765\u8868\u793a\u8fd9\u4e9b\u72b6\u6001\u3002\n\n\u518d\u5bf9\u4e8e\u6240\u6709\u7684\u60c5\u51b5\u5206\u7c7b\u8ba8\u8bba\uff0c\n\n1. \u4e00\u4e2a\u63a5\u53e3\u7684\u7edf\u4e00\u8ba8\u8bba\u3002\u4e0d\u96be\u53d1\u73b0\u5176\u53ef\u4ee5\u63a5\u53d7 $01,10,00$ \u8fd9 $3$ \u79cd\u72b6\u6001\uff0c\u5bf9\u4e8e\u524d\u4e24\u79cd\u72b6\u6001\uff0c\u5176\u53ea\u80fd\u5bfc\u51fa\u4e00\u4e2a\u72b6\u6001\u3002\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u5bfc\u51fa $2$ \u79cd\u72b6\u6001\u3002\u6240\u4ee5\u8fd9\u4e2a\u60c5\u51b5\u53ef\u4ee5\u662f**\u72b6\u6001\u589e\u52a0\u70b9**\uff0c\u4e5f\u53ef\u4ee5\u662f**\u72b6\u6001\u51cf\u5c11\u70b9**\u3002\n2. \u5bf9\u4e8e\u4e00\u4e2a\u6760\u6760\u7684\u5206\u522b\u53ea\u80fd\u63a5\u53d7\u4e00\u79cd\u72b6\u6001\u548c\u5bfc\u51fa\u4e00\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f**\u72b6\u6001\u51cf\u5c11\u70b9**\u3002\n3. \u5bf9\u4e8e\u4e00\u4e2a\u5f2f\u9053\u7684\u60c5\u51b5\u7edf\u4e00\u8ba8\u8bba\uff0c\u4e0d\u96be\u53d1\u73b0\u5176\u53ef\u4ee5\u63a5\u53d7\u6240\u6709\u7684\u72b6\u6001\uff0c\u4f46\u662f\u5bf9\u4e8e\u6bcf\u79cd\u72b6\u6001\u53ea\u80fd\u5bfc\u51fa\u4e00\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u662f**\u72b6\u6001\u4e0d\u53d8\u70b9**\uff0c\u53ea\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n4. \u5bf9\u4e8e\u4e00\u4e2a\u4e09\u4e2a\u9053\u7684\u60c5\u51b5\u7edf\u4e00\u8ba8\u8bba\uff0c\u4e0d\u96be\u53d1\u73b0\u5176\u53ef\u4ee5\u63a5\u53d7 $10,01,11$ \u8fd9\u4e09\u79cd\u72b6\u6001\u3002\u76f8\u540c\u7684\uff0c\u5bf9\u4e8e\u524d\u4e24\u79cd\u72b6\u6001\u53ea\u80fd\u5bfc\u51fa\u4e00\u79cd\u72b6\u6001\uff0c\u6700\u540e\u4e00\u4e2a\u53ef\u4ee5\u5bfc\u51fa\u4e24\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u662f\u5373\u662f**\u72b6\u6001\u589e\u52a0\u70b9**\uff0c\u4e5f\u662f**\u72b6\u6001\u51cf\u5c11\u70b9**\u3002\n5. \u5bf9\u4e8e\u5341\u5b57\u8def\u53e3\uff0c\u5176\u53ea\u80fd\u63a5\u53d7\u4e00\u79cd\u72b6\u6001\u5e76\u4e14\u5bfc\u51fa\u4e00\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f**\u72b6\u6001\u51cf\u5c11\u70b9**\u3002\n\n\u6700\u540e\u6211\u4eec\u53d1\u73b0\u4e86\uff0c\u53ea\u6709 $1$ \u60c5\u51b5\u548c $4$ \u60c5\u51b5\u4f1a\u589e\u5927\u72b6\u6001\u3002\n\n\u6211\u4eec\u5927\u80c6\u731c\u6d4b\uff0c\u4ed6\u7684\u6570\u636e\u5f88\u626f\u6de1\uff0c\u6240\u4ee5\u4f60\u7528\u4e2a map \u5b58\u4e00\u4e0b\u72b6\u6001\u7136\u540e\u5c31\u8fc7\u4e86\u2026\u2026\u8fd8\u8dd1\u7684\u98de\u5feb\u3002\n\n\u5b9e\u9645\u4e0a\u6211\u4eec\u60f3\u8981\u5361\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u7528\u7b2c\u4e00\u884c\u5168\u90fd\u662f\u7b2c\u4e00\u79cd\u72b6\u6001\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u505a\u6cd5\u5361\u5230\u4e0a\u754c\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4f30\u8ba1\u51fa\u9898\u4eba\u5b9e\u5728\u662f\u6ca1\u6709\u60f3\u5230\u8fd8\u6709\u8fd9\u79cd\u4eba\u7c7b\u667a\u6167\u505a\u6cd5\uff0c\u6240\u4ee5\u538b\u6839\u6ca1\u5361\u3002\n\n\u4e8b\u5b9e\u4e0a UOJ \u4e0a\u9762\u6709\u6570\u636e hack \u4e86\u8fd9\u79cd\u505a\u6cd5\uff0c\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u7ec3\u4e60\u7684\u65f6\u5019\u591a\u5b66\u6b63\u89e3~~\u8003\u8bd5\u7684\u65f6\u5019\u591a\u5199\u4e71\u641e~~\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u9ad8\u81ea\u5df1\u7684\u5b9e\u529b\u4e86\uff01\n\n## Code\n\n\u7ed9\u51fa\u6211\u4e71\u641e\u7684\u4ee3\u7801\u3002\n\n```cpp\nusing ll = long long;\n\nconst int INF = 1e9;\nconst int N = 2e3 + 10 ;\n\nint n, m;\nint a[N][N];\n\nbool up(const int x) {return x & 1;}\nbool ri(const int x) {return (x >> 1) & 1;}\nbool dn(const int x) {return (x >> 2) & 1;}\nbool le(const int x) {return (x >> 3) & 1;}//\u4e0a\u4e0b\u5de6\u53f3\nint l90(const int x) {return (x >> 1) | ((x & 1) << 3);}\nint r90(const int x) {return ((x << 1) & 15) | ((x >> 3) & 1);}\nint t18(const int x) {\n    return (dn(x) << 0) | (le(x) << 1) | (up(x) << 2) | (ri(x) << 3);\n}//\u65cb\u8f6c\nbool sps(const int x) { return x == 5 || x == 10; }//\u76f4\u7ebf\u578b\u7279\u5224\n\nint b[N][N];\nvoid rotate() {\n    FOR(i, 1, n) FOR(j, 1, m) b[m - j + 1][i] = l90(a[i][j]);\n    swap(n, m);\n    memset(a, 0, sizeof(a));\n    FOR(i, 1, n) FOR(j, 1, m) a[i][j] = b[i][j];\n    return ;\n}\n\ninline void input() {\n    n = rd, m = rd;\n    FOR(i, 1, n) FOR(j, 1, m) a[i][j] = rd;\n    return ;\n}\n\ninline ll To(ll x, ll S, int pos) {\n    if(((S >> pos) & 1) ^ up(x)) return -1;\n    if((S & 1) ^ le(x)) return -1;\n    if(pos == m && ri(x)) return -1;\n    ll ret = (((ll) 1ll << pos) ^ -1ll) & S;\n    ret = ret & (1ll ^ -1ll);\n    return ret | ((ll)dn(x) << pos) | ri(x);\n}\nunordered_map<ll, int> f, g;\n\ninline void work() {\n    if(n < m) rotate();\n    f[0] = 0;\n    FOR(i, 1, n) FOR(j, 1, m) {\n        for(auto x : f) {\n            if(x.second == INF) continue;\n            int w = a[i][j];\n            ll S = x.first, tem;\n            tem = To(w, S, j);\n            if(~tem) {\n                auto it = g.insert(make_pair(tem, INF));\n                cmin(it.first->second, x.second);\n            }\n            if(sps(w)) continue;\n            \n            tem = To(l90(w), S, j);\n            if(~tem) {\n                auto it = g.insert(make_pair(tem, INF));\n                cmin(it.first->second, x.second + 1);\n            }\n            \n            tem = To(r90(w), S, j);\n            if(~tem) {\n                auto it = g.insert(make_pair(tem, INF));\n                cmin(it.first->second, x.second + 1);\n            }\n            \n            tem = To(t18(w), S, j);\n            if(~tem) {\n                auto it = g.insert(make_pair(tem, INF));\n                cmin(it.first->second, x.second + 2);\n            }\n        }\n        f.clear(), f.swap(g);\n    }\n    auto it = f.insert(make_pair(0, INF));\n    if(it.second) cout << -1 << '\\n';\n    else cout << it.first->second << '\\n';\n    return ;\n}\n\ninline void solve() {\n    input();\n    work();\n    return ;\n}\n```\n\n## Final\n\n* \u51fa\u9898\u4eba\uff1a\u5982\u679c\u76f4\u7ebf\u578b\u6c34\u7ba1\u53ef\u4ee5\u65cb\u8f6c\uff0c\u5982\u4f55\u5efa\u56fe\uff1f\n* KAMIYA\uff1a\u4f60\u4e0d\u8ba9\u6211\u52a8\u76f4\u7ebf\u578b\u6211\u4e0d\u662f\u53c8\u8981\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u7279\u5224\uff0c~~\u6de6\u4f60\u5a18~~\u3002",
        "postTime": 1641455668,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P4003 \u65e0\u9650\u4e4b\u73af \u9898\u89e3"
    },
    {
        "content": "**\u524d\u8a00**\n\n------------\n\n\u7801\u529b\u9898\u3002\n\n2021.10.29\uff0cJJH\u8bf4\u4ed6\u8981A\u4e86\u65e0\u9650\u4e4b\u73af\uff0c\u7136\u540e\u8f70\u8f70\u70c8\u70c8\u6253\u4e86 $200$ \u884c\u6ca1\u8fc7\u6837\u4f8b\uff0c\u4e8e\u662f\u5728\u4ed6AC\u4e4b\u540e\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\nupd on 11.12\uff1a\u6211\u6253\u4e86 $13$ \u5c0f\u65f6\uff0c\u6253\u4e86 $1200$ \u4f59\u884c\u7ec8\u4e8eA\u5566\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u5e86\u795dJJH\u65e9\u8fc7\u4e86\u7684\u751f\u65e5\u2026\u2026\n\n**\u601d\u8def**\n\n------------\n\n\u6211\u662f\u770b\u8d39\u7528\u6d41\u6807\u7b7e\u627e\u5230\u8fd9\u9053\u9898\u7684\uff0c\u6240\u4ee5\u6211\u80af\u5b9a\u662f\u8981\u7528\u8d39\u7528\u6d41\u6765\u89e3\u672c\u9898\u7684\u3002\n\n1. \u53d1\u73b0\u5f53\u4e0d\u5b58\u5728\u6f0f\u6c34\u7684\u5730\u65b9\u65f6\uff0c\u76f8\u63a5\u7684\u6c34\u7ba1\u6570\u91cf\u4e00\u5b9a\u662f\u6700\u591a\u7684\uff0c\u8fd9\u4fbf\u8bf4\u660e\u6b64\u9898\u4f7f\u7528\u6700\u5927\u6d41\u3002\n1. \u4e00\u4e2a\u6c34\u7ba1\u76f8\u63a5\uff0c\u53ef\u4ee5\u89c6\u4f5c\u53e6\u4e00\u4e2a\u6c34\u7ba1\u51fa\u6c34\uff0c\u800c\u53e6\u4e00\u4e2a\u6c34\u7ba1\u5219\u5165\u6c34\uff0c\u90a3\u4e48\u53ef\u5c06\u8dd1\u5b8c\u6700\u5927\u6d41\u540e\u7684\u6700\u5927\u6d41\u89c6\u4e3a\u76f8\u63a5\u6c34\u7ba1\u6570\u91cf\u9664\u4ee5 $2$ \u540e\u7684\u7ed3\u679c\u3002\n1. \u4f7f\u7528\u8d39\u7528\u6d41\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u6211\u4eec\u8981\u4f7f\u5f97\u8f6c\u52a8\u7ba1\u5b50\u6b21\u6570\u6700\u5c11\u3002\n\n\u901a\u4fd7\u6765\u8bb2\uff0c\u6211\u4eec\u5c06\u76f8\u90bb\u7684\u683c\u5b50\u89c6\u4f5c\u4e00\u4e2a\u51fa\u6c34\u53e3\u548c\u5165\u6c34\u53e3\uff0c\u800c\u5b83\u4eec\u4e4b\u95f4\u7684\u6c34\u7ba1\u5219\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8fb9\u3002\n\n\u9898\u610f\u6307\u51fa\uff0c\u6c34\u7ba1\u7684\u65b9\u5411\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u770b\u5982\u4f55\u52a0\u8fb9\u80fd\u591f\u5b9e\u73b0\u6c34\u7ba1\u8f6c\u5411\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u683c\u5b50\u89c6\u4f5c\u4e94\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u4e2d\u95f4\u7684\u51fa\u6c34/\u5165\u6c34\u53e3\uff0c\u56db\u4e2a\u65b9\u5411\u4e0a\u7684\u7ba1\u5b50\uff08\u53ef\u4ee5\u662f\u865a\u7684\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u76f8\u90bb\u683c\u5b50\u7684\u5bf9\u5e94\u7ba1\u5b50\u76f8\u8fde\uff0c\u8d39\u7528\u8bbe\u4e3a $0$\u3002\n\n\u7136\u540e\u5bf9\u4e0d\u540c\u79cd\u7c7b\u7684\u683c\u5b50\u8fdb\u884c\u8ba8\u8bba\u3002\n\n**\u8ba8\u8bba**\n\n------------\n\n\u53ea\u6709\u4e09\u79cd\u683c\u5b50\u9700\u8981\u8ba8\u8bba\uff0c\u5176\u4f59\u53ef\u4ee5\u76f4\u63a5\u5efa\u8fb9\u3002\n\n- \u53ea\u6709\u4e00\u4e2a\u7ba1\u5b50\uff1a\u6211\u4eec\u8981\u4f7f\u5f97\u8fd9\u4e00\u4e2a\u7ba1\u5b50\u8f6c\u5411\u5176\u5b83\u65b9\u5411\u53ea\u80fd\u76f4\u63a5\u65cb\u8f6c\uff0c\u6240\u4ee5\u7528\u8fd9\u4e2a\u7ba1\u5b50\u5411\u5176\u5b83\u65b9\u5411\u7ba1\u5b50\u8fde\u8fb9\u5373\u53ef\uff0c\u8d39\u7528\u8bbe\u4e3a $1$\uff0c\u7279\u6b8a\u5730\uff0c\u4e0e\u8fd9\u4e2a\u7ba1\u5b50\u76f8\u53cd\u7684\u8fb9\u8d39\u7528\u4e3a $2$\u3002\n\n- \u6709\u4e24\u4e2a\u76f8\u90bb\u7ba1\u5b50\uff1a\u9996\u5148\u770b\u53ea\u8f6c\u4e00\u6b21\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u603b\u4f1a\u6709\u4e00\u4e2a\u7ba1\u5b50\u7684\u4f4d\u7f6e\u6ca1\u6709\u53d8\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u4e24\u4e2a\u53d8\u5316\u7684\u7ba1\u5b50\u8fde\u4e00\u6761\u8fb9\uff0c\u8d39\u7528\u4e3a $1$\uff0c\u53e6\u4e00\u6761\u8fb9\u540c\u7406\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u8fd9\u4e24\u6761\u8fb9\u5c31\u8db3\u591f\u4e86\u3002\n\n- \u6709\u4e09\u4e2a\u7ba1\u5b50\uff1a\u540c\u6837\u7684\u601d\u8003\u65b9\u6cd5\uff0c\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6709\u4e09\u79cd\u60c5\u51b5\u8f6c\u5316\u6709\u7684\u7ba1\u5b50\u548c\u865a\u7684\u7ba1\u5b50\uff0c\u8fde\u4e09\u6761\u8fb9\u5373\u53ef\u3002\n\n**code:**\n\n------------\n\n\u849f\u84bb\u81ea\u77e5\u8bed\u6587\u4e0d\u597d\uff0c\u4e8e\u662f\u4f9b\u4e0a\u81ea\u5df1\u7684\u4ee3\u7801\u5e2e\u52a9\u7406\u89e3\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define max(x,y) x>y?x:y\n#define min(x,y) x<y?x:y\nconst int INF=1e9;\nconst int MAXN=2e5+5,N=2e4+5;\nbool vis[N];\nint n,m,s,t,x,y,z,f,dis[N],pre[N],last[N],flow[N],maxflow,mincost;\nstruct node {\n\tint to,next,flow,dis;\n}edge[MAXN];\nint head[N],cnt; \nqueue<int> q;\nvoid add(int from,int to,int flow,int dis) {\n\tedge[++cnt].next=head[from];\n\tedge[cnt].to=to;\n\tedge[cnt].flow=flow;\n\tedge[cnt].dis=dis;\n\thead[from]=cnt;\n//\tprintf(\"%d %d\\n\",from,to);\n}\nbool spfa(int s,int t) {\n\tmemset(dis,0x7f,sizeof(dis));\n\tmemset(flow,0x7f,sizeof(flow));\n\tmemset(vis,0,sizeof(vis));\n\tq.push(s);vis[s]=1;dis[s]=0;pre[t]=-1;\n\twhile(!q.empty()) {\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tvis[now]=0;\n\t\tfor(int i=head[now];~i;i=edge[i].next) {\n\t\t\tif(edge[i].flow>0&&dis[edge[i].to]>dis[now]+edge[i].dis) {\n\t\t\t\tdis[edge[i].to]=dis[now]+edge[i].dis;\n\t\t\t\tpre[edge[i].to]=now;\n\t\t\t\tlast[edge[i].to]=i;\n\t\t\t\tflow[edge[i].to]=min(flow[now],edge[i].flow);\n\t\t\t\tif(!vis[edge[i].to]) {\n\t\t\t\t\tvis[edge[i].to]=1;\n\t\t\t\t\tq.push(edge[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ~pre[t];\n}\nvoid MCMF() {\n\twhile(spfa(s,t)) {\n\t\tint now=t;\n\t\tmaxflow+=flow[t];\n\t\tmincost+=flow[t]*dis[t];\n\t\twhile(now!=s) {\n\t\t\tedge[last[now]].flow-=flow[t];\n\t\t\tedge[last[now]^1].flow+=flow[t];\n\t\t\tnow=pre[now];\n\t\t}\n\t}\n}\n//^>v<\nint sum,di[4][2]={{-1,0},{0,1},{1,0},{0,-1}};\nint col,bk[4]={2,3,0,1},rol;\nint num(int x,int y,int way) {\n\treturn (x-1)*m+y+way*sum;\n}\nvoid addt(int from,int to,int flow,int dis) {\n\tif(!col) swap(from,to);\n\tadd(from,to,flow,dis);\n\tadd(to,from,0,-dis);\n}\nint rans;\nint main() {\n//\tfreopen(\"cao.in\",\"r\",stdin);\n\tmemset(head,-1,sizeof(head));cnt=-1;\n\tscanf(\"%d %d\",&n,&m);\n\tsum=n*m;\n\ts=5*sum+1,t=5*sum+2;\n\tfor(int i=1;i<=n;++i) {\n\t\tcol=i&1;\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tscanf(\"%d\",&rol);\n\t\t\tcol^=1;\n\t\t\tif(col) {\n\t\t\t\taddt(s,num(i,j,4),INF,0);\n\t\t\t\tfor(int k=0;k<4;++k) {\n\t\t\t\t\tint dx=i+di[k][0],dy=j+di[k][1];\n\t\t\t\t\tif(dx<1||dx>n||dy<1||dy>m) continue;\n\t\t\t\t\taddt(num(i,j,k),num(dx,dy,bk[k]),1,0);\n//\t\t\t\t\tprintf(\"%d %d %d %d\\n\",i,j,dx,dy);\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<4;++k) {\n\t\t\t\t\tif(rol&(1<<k)) {\n\t\t\t\t\t\taddt(num(i,j,4),num(i,j,k),1,0);\n\t\t\t\t\t\t++rans;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddt(t,num(i,j,4),INF,0);\n\t\t\t\tfor(int k=0;k<4;++k) {\n\t\t\t\t\tif(rol&(1<<k)) {\n\t\t\t\t\t\taddt(num(i,j,4),num(i,j,k),1,0);\n\t\t\t\t\t\t++rans;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(rol==8) {//\u2190 \n\t\t\t\taddt(num(i,j,3),num(i,j,0),1,1);\n\t\t\t\taddt(num(i,j,3),num(i,j,2),1,1);\n\t\t\t\taddt(num(i,j,3),num(i,j,1),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==4) {//\u2193 \n\t\t\t\taddt(num(i,j,2),num(i,j,1),1,1);\n\t\t\t\taddt(num(i,j,2),num(i,j,3),1,1);\n\t\t\t\taddt(num(i,j,2),num(i,j,0),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==2) {//\u2192 \n\t\t\t\taddt(num(i,j,1),num(i,j,0),1,1);\n\t\t\t\taddt(num(i,j,1),num(i,j,2),1,1);\n\t\t\t\taddt(num(i,j,1),num(i,j,3),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==1) {//\u2191 \n\t\t\t\taddt(num(i,j,0),num(i,j,1),1,1);\n\t\t\t\taddt(num(i,j,0),num(i,j,3),1,1);\n\t\t\t\taddt(num(i,j,0),num(i,j,2),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==3) {//\u2514 \n\t\t\t\taddt(num(i,j,1),num(i,j,3),1,1);\n\t\t\t\taddt(num(i,j,0),num(i,j,2),1,1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==6) {//\u250c\n\t\t\t\taddt(num(i,j,1),num(i,j,3),1,1);\n\t\t\t\taddt(num(i,j,2),num(i,j,0),1,1);\n\t\t\t\tcontinue;\n\t\t\t} \n\t\t\tif(rol==9) {//\u2518\n\t\t\t\taddt(num(i,j,3),num(i,j,1),1,1);\n\t\t\t\taddt(num(i,j,0),num(i,j,2),1,1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==12) {//\u2510\n\t\t\t\taddt(num(i,j,3),num(i,j,1),1,1);\n\t\t\t\taddt(num(i,j,2),num(i,j,0),1,1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==7) {//\u251c\n\t\t\t\taddt(num(i,j,0),num(i,j,3),1,1); \n\t\t\t\taddt(num(i,j,2),num(i,j,3),1,1);\n\t\t\t\taddt(num(i,j,1),num(i,j,3),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==11) {//\u2534\n\t\t\t\taddt(num(i,j,3),num(i,j,2),1,1); \n\t\t\t\taddt(num(i,j,1),num(i,j,2),1,1);\n\t\t\t\taddt(num(i,j,0),num(i,j,2),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==13) {//\u2524\n\t\t\t\taddt(num(i,j,0),num(i,j,1),1,1); \n\t\t\t\taddt(num(i,j,2),num(i,j,1),1,1);\n\t\t\t\taddt(num(i,j,3),num(i,j,1),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(rol==14) {//\u252c\n\t\t\t\taddt(num(i,j,3),num(i,j,0),1,1); \n\t\t\t\taddt(num(i,j,1),num(i,j,0),1,1);\n\t\t\t\taddt(num(i,j,2),num(i,j,0),1,2);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t}\n\tMCMF();\n//\tprintf(\"%d %d\\n\",maxflow,mincost);\n\tif(maxflow*2==rans) printf(\"%d\",mincost);\n\telse printf(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1635508009,
        "uid": 271260,
        "name": "PosVII",
        "ccfLevel": 7,
        "title": "P4003 \u65e0\u9650\u4e4b\u73af \u9898\u89e3"
    },
    {
        "content": "\u9898\u9762\u81ea\u5df1\u770b\u5427\u3002\u3002\u3002\n\n#### std\n\n\u5bf9\u4e8e\u8fd9\u79cd\u6bd2\u7624\u7684\u6700\u5c0f\u8d39\u7528\u5339\u914d\u95ee\u9898\uff0c\u4e00\u822c\u8003\u8651\u7f51\u7edc\u8d39\u7528\u6d41\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6c34\u7ba1\u7684\u6bcf\u4e00\u4e2a\u652f\u7ba1\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5176\u5b83\u65b9\u683c\u4e0a\u7684\u6c34\u7ba1\u7684\u5176\u4e2d\u4e00\u4e2a\u652f\u7ba1\u4e0e\u5176\u76f8\u8fde\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6f0f\u6c34\u4e86\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6c34\u7ba1\u7684\u6bcf\u4e2a\u652f\u7ba1\u5bb9\u91cf\u53ea\u80fd\u4e3a $1$\uff0c\u4e14\u90fd\u8981\u6ee1\u6d41\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u7528\u7f51\u7edc\u6d41\uff0c\u53c8\u8003\u8651\u5230\u53ea\u6709\u76f8\u90bb\u7684\u4e24\u4e2a\u6c34\u7ba1\u53c8\u53ef\u80fd\u4ea7\u751f\u6d41\u91cf\uff0c\u4e8e\u662f\u8003\u8651\u5c06\u56fe\u9ed1\u767d\u67d3\u8272\u3002\n\n\u8fd9\u6837\u9ed1\u70b9\u53ea\u80fd\u8fde\u5411\u767d\u70b9\uff0c\u767d\u70b9\u53ea\u80fd\u8fde\u5411\u9ed1\u70b9\u3002\n\n\u7136\u540e\u5c06\u4e00\u4e2a\u65b9\u683c\u62c6\u6210 $5$ \u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\u4e2d\u3002\n\n##### \u6a21\u578b\u5efa\u7acb\n\n$s$ \u5411\u767d\u70b9\u7684\u4e2d\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u652f\u7ba1\u6570\u91cf\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u9ed1\u70b9\u7684\u4e2d\u70b9\u5411 $t$ \u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u652f\u7ba1\u6570\u91cf\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u6839\u636e\u652f\u7ba1\u60c5\u51b5\u5411\u56db\u5468\u8fde\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u5206\u6c34\u7ba1\u7684\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n###### 1\n\n![](https://img-blog.csdnimg.cn/300be03369d64b09acb4b43c6a7b386e.png)\n\n\u4e0a\u70b9\u5206\u522b\u5411\u5de6\uff0c\u53f3\u70b9\u5411\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\uff08\u8f6c $90$ \u5ea6\uff09\u3002\n\n\u4e0a\u70b9\u5411\u4e0b\u70b9\u8fde\u5411\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $2$ \u7684\u8fb9\uff08\u8f6c $180$ \u5ea6\uff09\u3002\n\n###### 2\n\n![](https://img-blog.csdnimg.cn/5b8ccfd8ef1c4c7885f602a179a6b804.png)\n\n\u7531\u4e8e\u4e0d\u7528\u65cb\u8f6c\uff0c\u90a3\u4e48\u53ea\u9700\u8ba9\u4e2d\u70b9\u5206\u522b\u5411\u4e0a\u3001\u4e0b\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff08\u4e0a\u9762\u8bf4\u8fc7\u4e86\uff09\u3002\n\n###### 3\n\n![](https://img-blog.csdnimg.cn/2ad5fa63f0c44a3cb8ae0faa26838a51.png)\n\n\u987a\u65f6\u9488\u8f6c $90$ \u5ea6\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://img-blog.csdnimg.cn/425158725bbe48e391da4f8921fcb916.png)\n\n\u8fd9\u76f8\u5f53\u4e8e\u539f\u6765\u7684\u4e0a\u70b9\u53d8\u6210\u4e86\u4e0b\u70b9\uff0c\u53f3\u70b9\u4e0d\u53d8\uff0c\u90a3\u4e48\u8ba9\u4e0a\u70b9\u5411\u4e0b\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u9006\u65f6\u9488\u8f6c $90$ \u5ea6\u540c\u7406\uff0c\u8ba9\u53f3\u70b9\u5411\u5de6\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u8f6c $180$ \u5ea6\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://img-blog.csdnimg.cn/2127e02dc47b4fe4b8d8320df38cc1ec.png)\n\n\u8fd9\u76f8\u5f53\u4e8e\uff0c\u4f60\u5c06\u524d\u9762\u8bf4\u7684\u4e24\u6761\u8fb9\u4e00\u8d77\u7528\u4e86\u3002\n\n###### 4\n\n![](https://img-blog.csdnimg.cn/28dd4dcc7e444eada43b5ad693f25388.png)\n\n\u987a\u65f6\u9488\u8f6c $90$ \u5ea6\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://img-blog.csdnimg.cn/1f03f7f95faa4d0ab2a71e08685c5fae.png)\n\n\u8fd9\u76f8\u5f53\u4e8e\u4e0a\u3001\u53f3\u70b9\u4e0d\u53d8\uff0c\u5de6\u70b9\u53d8\u6210\u4e86\u4e0b\u70b9\uff0c\u4e8e\u662f\u8ba9\u5de6\u70b9\u5411\u4e0b\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u9006\u65f6\u9488\u8f6c $90$ \u5ea6\u540c\u7406\uff0c\u8ba9\u53f3\u70b9\u5411\u4e0b\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$ \u7684\u8fb9\u5373\u53ef\u3002\n\n\u8f6c $180$ \u5ea6\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\uff1a\n\n![](https://img-blog.csdnimg.cn/f51c851e96f64943b2e3c3f80b3745ae.png)\n\n\u8fd9\u76f8\u5f53\u4e8e\u5de6\u3001\u53f3\u70b9\u4e0d\u53d8\uff0c\u4e0a\u70b9\u53d8\u6210\u4e86\u4e0b\u70b9\uff0c\u4e8e\u662f\u8ba9\u4e0a\u70b9\u5411\u4e0b\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $2$ \u7684\u8fb9\u5373\u53ef\u3002\n\n###### 5\n\n![](https://img-blog.csdnimg.cn/cba7e5dc8dc64f98a01b06ea1a4996f6.png)\n\n\u7531\u4e8e\u8fd9\u8f6c\u4e86\u76f8\u5f53\u4e8e\u6ca1\u8f6c\uff0c\u90a3\u4e48\u4e0d\u7ba1\u4ed6\u3002\n\n$\\text{231ms / 1.71MB / 7.49KB C++20 O2}$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9')\n    {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n    {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\n\ninline void write(int x)\n{\n    if (x < 0)\n    {\n        putchar('-');\n        x = -x;\n    }\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\n\ntypedef int tp;\n\nconst int _ = 6e4 + 10, inf = 947483647;\n\nint n, m, s, t, lv[_], cur[_];\n\ntp maxflow, mincost;\n\nint tot = 1, head[_], to[_ << 1], nxt[_ << 1];\n\ntp dis[_], w[_ << 1], fl[_ << 1];\n\ninline void add(int u, int v, tp dis, tp c)\n{\n    to[++tot] = v;\n    nxt[tot] = head[u];\n    fl[tot] = dis;\n    w[tot] = c;\n    head[u] = tot;\n}\n\ninline void Add(int u, int v, tp dis, tp c)\n{\n    add(u, v, dis, c);\n    add(v, u, 0, -c);\n}\n\ninline bool bfs()\n{\n    memset(lv, 0, sizeof(lv));\n    for (int i = 0; i < _; ++i)\n        dis[i] = inf;\n    lv[s] = 1;\n    dis[s] = 0;\n    memcpy(cur, head, sizeof(head));\n    queue<int> q;\n    q.push(s);\n    while (!q.empty())\n    {\n        int p = q.front();\n        q.pop();\n        lv[p] = 0;\n        for (int eg = head[p]; eg; eg = nxt[eg])\n        {\n            int v = to[eg];\n            tp vol = fl[eg];\n            if (vol > 0 && dis[v] > dis[p] + w[eg])\n            {\n                dis[v] = dis[p] + w[eg];\n                if (!lv[v])\n                {\n                    q.push(v);\n                    lv[v] = 1;\n                }\n            }\n        }\n    }\n    return dis[t] != inf;\n}\n\ntp dfs(int p = s, tp flow = inf)\n{\n    if (p == t)\n        return flow;\n    lv[p] = 1;\n    tp rmn = flow;\n    for (int eg = cur[p]; eg && rmn; eg = nxt[eg])\n    {\n        cur[p] = eg;\n        int v = to[eg];\n        tp vol = fl[eg];\n        if (vol > 0 && !lv[v] && dis[v] == dis[p] + w[eg])\n        {\n            tp c = dfs(v, min(vol, rmn));\n            rmn -= c;\n            fl[eg] -= c;\n            fl[eg ^ 1] += c;\n        }\n    }\n    lv[p] = 0;\n    return flow - rmn;\n}\n\ninline void dinic()\n{\n    while (bfs())\n    {\n        tp flow = dfs();\n        maxflow += flow;\n        mincost += dis[t] * flow;\n    }\n}\n\ninline int id(int x, int y, int num)\n{\n    return (x - 1) * m + y + num * n * m;\n}\n\nint sum;\n\nconst int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1}, cross[] = {3, 4, 1, 2};\n\ninline void build(int x, int y, int num)\n{\n    if ((x + y) & 1)\n    {\n        Add(s, id(x, y, 0), 1 << 30, 0);\n        for (int i = 0; i < 4; ++i)\n        {\n            int xx = x + dx[i], yy = y + dy[i];\n            if (xx <= 0 || xx > n || yy <= 0 || yy > m)\n                continue;\n            Add(id(x, y, i + 1), id(xx, yy, cross[i]), 1, 0);\n        }\n        for (int i = 0; i < 4; ++i)\n            if (num & (1 << i))\n            {\n                Add(id(x, y, 0), id(x, y, i + 1), 1, 0);\n                ++sum;\n            }\n        switch (num)\n        {\n        case 1:\n            Add(id(x, y, 1), id(x, y, 2), 1, 1);\n            Add(id(x, y, 1), id(x, y, 3), 1, 2);\n            Add(id(x, y, 1), id(x, y, 4), 1, 1);\n            break;\n        case 2:\n            Add(id(x, y, 2), id(x, y, 1), 1, 1);\n            Add(id(x, y, 2), id(x, y, 3), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 2);\n            break;\n        case 4:\n            Add(id(x, y, 3), id(x, y, 1), 1, 2);\n            Add(id(x, y, 3), id(x, y, 2), 1, 1);\n            Add(id(x, y, 3), id(x, y, 4), 1, 1);\n            break;\n        case 8:\n            Add(id(x, y, 4), id(x, y, 1), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 2);\n            Add(id(x, y, 4), id(x, y, 3), 1, 1);\n            break;\n        case 3:\n            Add(id(x, y, 1), id(x, y, 3), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 1);\n            break;\n        case 6:\n            Add(id(x, y, 3), id(x, y, 1), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 1);\n            break;\n        case 9:\n            Add(id(x, y, 1), id(x, y, 3), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 1);\n            break;\n        case 12:\n            Add(id(x, y, 3), id(x, y, 1), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 1);\n            break;\n        case 7:\n            Add(id(x, y, 1), id(x, y, 4), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 2);\n            Add(id(x, y, 3), id(x, y, 4), 1, 1);\n            break;\n        case 11:\n            Add(id(x, y, 1), id(x, y, 3), 1, 2);\n            Add(id(x, y, 2), id(x, y, 3), 1, 1);\n            Add(id(x, y, 4), id(x, y, 3), 1, 1);\n            break;\n        case 13:\n            Add(id(x, y, 1), id(x, y, 2), 1, 1);\n            Add(id(x, y, 3), id(x, y, 2), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 2);\n            break;\n        case 14:\n            Add(id(x, y, 2), id(x, y, 1), 1, 1);\n            Add(id(x, y, 3), id(x, y, 1), 1, 2);\n            Add(id(x, y, 4), id(x, y, 1), 1, 1);\n            break;\n        }\n    }\n    else\n    {\n        Add(id(x, y, 0), t, 1 << 30, 0);\n        for (int i = 0; i < 4; ++i)\n            if (num & (1 << i))\n            {\n                Add(id(x, y, i + 1), id(x, y, 0), 1, 0);\n                ++sum;\n            }\n        switch (num)\n        {\n        case 1:\n            Add(id(x, y, 2), id(x, y, 1), 1, 1);\n            Add(id(x, y, 3), id(x, y, 1), 1, 2);\n            Add(id(x, y, 4), id(x, y, 1), 1, 1);\n            break;\n        case 2:\n            Add(id(x, y, 1), id(x, y, 2), 1, 1);\n            Add(id(x, y, 3), id(x, y, 2), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 2);\n            break;\n        case 4:\n            Add(id(x, y, 1), id(x, y, 3), 1, 2);\n            Add(id(x, y, 2), id(x, y, 3), 1, 1);\n            Add(id(x, y, 4), id(x, y, 3), 1, 1);\n            break;\n        case 8:\n            Add(id(x, y, 1), id(x, y, 4), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 2);\n            Add(id(x, y, 3), id(x, y, 4), 1, 1);\n            break;\n        case 3:\n            Add(id(x, y, 3), id(x, y, 1), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 1);\n            break;\n        case 6:\n            Add(id(x, y, 1), id(x, y, 3), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 1);\n            break;\n        case 9:\n            Add(id(x, y, 3), id(x, y, 1), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 1);\n            break;\n        case 12:\n            Add(id(x, y, 1), id(x, y, 3), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 1);\n            break;\n        case 7:\n            Add(id(x, y, 4), id(x, y, 1), 1, 1);\n            Add(id(x, y, 4), id(x, y, 2), 1, 2);\n            Add(id(x, y, 4), id(x, y, 3), 1, 1);\n            break;\n        case 11:\n            Add(id(x, y, 3), id(x, y, 1), 1, 2);\n            Add(id(x, y, 3), id(x, y, 2), 1, 1);\n            Add(id(x, y, 3), id(x, y, 4), 1, 1);\n            break;\n        case 13:\n            Add(id(x, y, 2), id(x, y, 1), 1, 1);\n            Add(id(x, y, 2), id(x, y, 3), 1, 1);\n            Add(id(x, y, 2), id(x, y, 4), 1, 2);\n            break;\n        case 14:\n            Add(id(x, y, 1), id(x, y, 2), 1, 1);\n            Add(id(x, y, 1), id(x, y, 3), 1, 2);\n            Add(id(x, y, 1), id(x, y, 4), 1, 1);\n            break;\n        }\n    }\n}\n\nsigned main()\n{\n    n = read(), m = read();\n    s = 0, t = _ - 1;\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= m; ++j)\n        {\n            int p = read();\n            build(i, j, p);\n        }\n    dinic();\n    write(maxflow * 2 == sum ? mincost : -1);\n    return 0;\n}\n```\n\n",
        "postTime": 1646287258,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P4003 \u65e0\u9650\u4e4b\u73af"
    }
]