[
    {
        "content": "\u6765[\u9732\u8fed\u6708](https://www.cnblogs.com/ppprseter/p/9582277.html)\u7684\u535a\u5ba2\u9605\u8bfb\u83b7\u53d6\u8239\u65b0\u4f53\u9a8c\n\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u77e9\u5f62\u4fee\u6539\u77e9\u5f62\u67e5\u8be2\u6700\u5927\u503c\u7684\u6240\u6709\u4f4d\u7f6e\u4e0a\u7684\u503c\u662f\u975e\u51cf\u7684\uff0c\u5426\u5219\u6211\u4eec\u6ca1\u6cd5\u4f7f\u7528\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u914d\u5408\u6807\u8bb0\u6c38\u4e45\u5316\u5b8c\u6210\u3002\n\n------------\n\u5148\u8003\u8651\u4e00\u7ef4\u7684\u60c5\u51b5\uff0c\u533a\u95f4\u6c42\u6700\u5927\u503c\uff0c\u533a\u95f4\u8d4b\u503c\u6700\u5927\u503c\u52a0\u4e0a\u67d0\u4e2a\u6b63\u6570\n\n\u5728\u7ebf\u6bb5\u6811\u4e2d\u7ef4\u62a4\u4e00\u4e2a$mx$\u548c\u4e00\u4e2a$tag$\uff0c\u5206\u522b\u8868\u793a\u533a\u95f4\u6700\u5927\u503c\u548c\u4fee\u6539\u540e\u7684\u503c\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5bf9\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u7528\u5f85\u4fee\u6539\u7684\u503c\u5c1d\u8bd5\u66f4\u65b0$mx$\u6570\u7ec4\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8282\u70b9\u4e00\u5b9a\u5305\u542b\u8fd9\u4e2a\u5c0f\u533a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u66f4\u65b0\n\n\u4f46$tag$\u64cd\u4f5c\u53ea\u6709\u533a\u95f4\u5b8c\u5168\u88ab\u8986\u76d6\u65f6\u624d\u66f4\u65b0\uff0c\u4e0d\u4e0b\u4f20\u4e00\u76f4\u5446\u5728\u8fd9\u4e2a\u533a\u95f4\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u5bf9\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5c1d\u8bd5\u4f7f\u7528$tag$\u6570\u7ec4\u66f4\u65b0\u7b54\u6848\uff0c\u56e0\u4e3atag\u662f\u5bf9\u6574\u4e2a\u533a\u95f4\u6253\u7684\uff0c\u6240\u4ee5\u5b50\u533a\u95f4\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\n\n\u5728\u533a\u95f4\u5b8c\u5168\u88ab\u8986\u76d6\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u7528$mx$\u6570\u7ec4\u66f4\u65b0\u7b54\u6848\n\n\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6807\u8bb0\u6c38\u4e45\u5316\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u7ef4\u7684\u6811\u662f\u6ca1\u6cd5\u4f7f\u7528\u5b50\u8282\u70b9\u5feb\u901f\u66f4\u65b0\u7b54\u6848\u7684\uff0c\u4e5f\u4e0d\u597d\u4e0b\u4f20\n\n------------\n\u518d\u8003\u8651\u7b2c\u4e8c\u7ef4\u7684\u60c5\u51b5\uff0c\u7b2c\u4e8c\u7ef4\u7684\u7ebf\u6bb5\u6811\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u653e\u7740\u4e24\u9897\u9897\u7b2c\u4e00\u7ef4\u7ebf\u6bb5\u6811\n\n\u4e00\u9897\u4ee3\u8868$mx$\u6811\uff0c\u4e00\u9897\u4ee3\u8868$tag$\u6811\n\n\u7136\u540e\u5269\u4e0b\u7684\u5c31\u548c\u7b2c\u4e00\u7ef4\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c\u4e86\n\n------------\n**Code:**\n```cpp\n#include <cstdio>\nconst int N=2050;\nint n,m;\nint max(int x,int y){return x>y?x:y;}\n#define ls id<<1\n#define rs id<<1|1\nstruct segy\n{\n    int mx[N],tag[N];\n    void change(int id,int l,int r,int L,int R,int val)\n    {\n        mx[id]=max(mx[id],val);\n        if(l==L&&r==R)\n        {\n            tag[id]=max(tag[id],val);\n            return;\n        }\n        int Mid=L+R>>1;\n        if(r<=Mid) change(ls,l,r,L,Mid,val);\n        else if(l>Mid) change(rs,l,r,Mid+1,R,val);\n        else change(ls,l,Mid,L,Mid,val),change(rs,Mid+1,r,Mid+1,R,val);\n    }\n    int query(int id,int l,int r,int L,int R)\n    {\n        if(l==L&&r==R)\n            return mx[id];\n        int ans=tag[id],Mid=L+R>>1;\n        if(r<=Mid) ans=max(ans,query(ls,l,r,L,Mid));\n        else if(l>Mid) ans=max(ans,query(rs,l,r,Mid+1,R));\n        else ans=max(ans,max(query(ls,l,Mid,L,Mid),query(rs,Mid+1,r,Mid+1,R)));\n        return ans;\n    }\n};\nstruct segx\n{\n    segy mx[N],tag[N];\n    void change(int id,int l,int r,int L,int R,int ll,int rr,int val)\n    {\n        mx[id].change(1,ll,rr,1,m,val);\n        if(l==L&&r==R)\n        {\n            tag[id].change(1,ll,rr,1,m,val);\n            return;\n        }\n        int Mid=L+R>>1;\n        if(r<=Mid) change(ls,l,r,L,Mid,ll,rr,val);\n        else if(l>Mid) change(rs,l,r,Mid+1,R,ll,rr,val);\n        else change(ls,l,Mid,L,Mid,ll,rr,val),change(rs,Mid+1,r,Mid+1,R,ll,rr,val);\n    }\n    int query(int id,int l,int r,int L,int R,int ll,int rr)\n    {\n        if(l==L&&r==R)\n            return mx[id].query(1,ll,rr,1,m);\n        int ans=tag[id].query(1,ll,rr,1,m),Mid=L+R>>1;\n        if(r<=Mid) ans=max(ans,query(ls,l,r,L,Mid,ll,rr));\n        else if(l>Mid) ans=max(ans,query(rs,l,r,Mid+1,R,ll,rr));\n        else ans=max(ans,max(query(ls,l,Mid,L,Mid,ll,rr),query(rs,Mid+1,r,Mid+1,R,ll,rr)));\n        return ans;\n    }\n}t;\nint main()\n{\n    int d,s,h,x,y,k;\n    scanf(\"%d%d%d\",&n,&m,&k);\n    while(k--)\n    {\n        scanf(\"%d%d%d%d%d\",&d,&s,&h,&x,&y),++x,++y;\n        t.change(1,x,x+d-1,1,n,y,y+s-1,t.query(1,x,x+d-1,1,n,y,y+s-1)+h);\n    }\n    printf(\"%d\\n\",t.query(1,1,n,1,n,1,m));\n    return 0;\n}\n\n```\n",
        "postTime": 1536015818,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u7bc7\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u9898\u89e3(\u7b80\u4ecb)\n\u9996\u5148\u9898\u610f\u5c31\u4e0d\u5206\u6790\u4e86,\u65e0\u975e\u662f\u4e8c\u7ef4\u533a\u95f4\u4fee\u6539,\u4e8c\u7ef4\u533a\u95f4\u67e5\u8be2\n\n\u524d\u7f6e\u77e5\u8bc6:\n\n1.\u4e00\u7ef4\u7ebf\u6bb5\u6811(\u56e0\u4e3a\u63a5\u4e0b\u6765\u8981\u8fdb\u884c\u7c7b\u6bd4\u8bb2\u89e3)\n\n2.\u7ebf\u6bb5\u6811\u67d3\u8272\u64cd\u4f5c(\u5bf9\u5e94\u9898\u76ee\u91cc\u7684\u4fee\u6539)~~\u5e9f\u8bdd\u771f\u591a~~\n\n---\n\n## \u4e00.\u4ec0\u4e48\u662f\u4e8c\u7ef4\u7ebf\u6bb5\u6811(\u56db\u53c9\u6811)\n\u4e00\u7ef4\u7684\u7ebf\u6bb5\u6811\u4e5f\u53eb\u533a\u95f4\u6811(\u4e8c\u53c9\u6811),\u987e\u540d\u601d\u4e49\u4e5f\u5c31\u662f\u4e00\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4,\u50cf\u662f\u957f\u6210\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/pic/66651.png)\n\n\u90a3\u4e8c\u7ef4\u81ea\u7136\u662f\u52a0\u4e00\u4e2a\u7ef4\u5ea6,\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u4e2a\u77e9\u9635,\u5b83\u957f\u6210\u8fd9\u4e2a\u6837\u5b50(\u5b9e\u5728\u753b\u4e0d\u597d\u6211\u5c31\u53bb\u7f51\u4e0a\u627e\u4e86\u4e00\u5f20\u56fe)\n![](https://cdn.luogu.com.cn/upload/pic/66652.png)\n\n#### \u4e5f\u5c31\u662f\u6bcf\u4e2a\u7ed3\u70b9\u6709\u56db\u4e2a\u5143\u7d20$[l,r,u,d]$~~left,right,up,down~~\n#### \u5206\u522b\u8868\u793a\u8fd9\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u7684\u662f\u6a2a\u5411$[l,r]$\u548c\u7eb5\u5411$[u,d]$\u8fd9\u4e00\u6bb5\u77e9\u9635\u7684\u4fe1\u606f\n#### \u6bd4\u5982\u4e0a\u56fe\u6700\u5927\u7684\u90a3\u4e2a\u77e9\u9635\u5c31\u662f$[1,4,1,3]$,\u53f3\u8fb9\u7d2b\u7070\u4e00\u8d77\u7684\u5c0f\u7ed3\u70b9\u5c31\u662f$[3,4,3,3]$\n\n## \u4e8c.\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u5404\u4e2a\u513f\u5b50\n\u7531\u4e0a\u56fe\u6211\u4eec\u80fd\u770b\u51fa\u6765,\u5982\u679c\u4e24\u4e2a\u7ef4\u5ea6\u5206\u522b\u53d6\u4e2a\u4e00\u534a\u7684\u8bdd,\u90a3\u6211\u4eec\u6709\u4e9b\u60c5\u51b5\u4e0b\u662f\u56db\u4e2a\u513f\u5b50,\u6709\u4e9b\u60c5\u51b5\u662f\u4e24\u4e2a,\u90a3\u4e48\u5177\u4f53\u5e94\u8be5\u600e\u4e48\u53bb\u5bfb\u627e\u6839\u8282\u70b9\u7684\u6bcf\u4e2a\u513f\u5b50\u5462\n\n\u4e00\u7ef4\u7684\u7ebf\u6bb5\u6811\u91cc\u9762\u4f30\u8ba1\u5f88\u591a\u4eba\u90fd\u662f\u4e60\u60ef\u6700\u4e0a\u9762\u4e00\u4e2a\u6839\u8282\u70b9\u4ece1\u7f16\u53f7,\u8fd9\u6837\u6b63\u597d\u7b26\u5408\u4e8c\u53c9\u6811\u7684\u6027\u8d28\n\n\u4f46\u662f\u4e8c\u7ef4\u7684\u91cc\u9762\u6211\u4eec\u8981\u6539\u4e00\u6539,\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u5982\u679c\u6700\u4e0a\u9762\u7684\u6839\u8282\u70b9\u4ece0\u5f00\u59cb\u7f16\u53f7,\u5c31\u4f1a\u6b63\u597d\u6ee1\u8db3\u4e00\u4e2a\u6027\u8d28\n\n\u5373:\n```cpp\n#define son_left_up ((o<<2)+1)\n#define son_right_up ((o<<2)+2)\n#define son_left_down ((o<<2)+3)\n#define son_right_down ((o<<2)+4)\n```\n~~\u8bf7\u4e0d\u8981\u5410\u69fd\u6211\u7ed8\u56fe\u4e11QAQ~~\n![](https://cdn.luogu.com.cn/upload/pic/66656.png)\n\n---\n\n## \u4e8c~~\u70b9\u4e94~~.\u8bb2\u89e3\u4e0b\u9762\u4ee3\u7801\u91cc\u7684\u53c2\u6570\u542b\u4e49 \n1. $honoka(a,b)$\u5373\u8fd4\u56de$a,b$\u7684\u6700\u5927\u503c\n\n2. $l,r,u,d$\u4e3a\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u4fe1\u606f\n\n3. \u5de6\u4e0a\u7684\u513f\u5b50(\u4e00\u53f7\u513f\u5b50)\u662f$slu$,\u53f3\u4e0a\u4e3a$sru$,\u5de6\u4e0b\u4e3a$sld$,\u53f3\u4e0b\u4e3a$srd$\n\n4. $ql,qr,qu,qr$\u662f\u67e5\u8be2\u7684\u533a\u95f4,\u5373$query\\_l,query\\_r$\n\n5. $midx,midy$\u5206\u522b\u4e3a\u6a2a\u5411\u548c\u7eb5\u5411\u4e0a\u7684\u533a\u95f4\u4e2d\u70b9\n\n---\n\n## \u4e09.\u5efa\u6811\u64cd\u4f5c(\u4e0b\u9762\u5148\u8d34\u4ee3\u7801\u518d\u914d\u5408\u8bb2\u89e3)\n### \u6b64\u5904\u662f\u7ef4\u62a4\u6700\u5927\u503c\u7684\u5efa\u6811\n```cpp\ninline void buildtree(int l,int r,int u,int d,int o)\n{\n  tree[o].lazy=0;//\u521d\u59cb\u5316lazytag\n  \n  if(l==r && u==d)//\u9012\u5f52\u5230\u5355\u4e2a\u77e9\u9635\u5143\u7d20\n  {\n    tree[o].maxx=0;\n    return;\n  }\n  int midx,midy;\n  midx=(l+r)>>1;\n  midy=(u+d)>>1;//\u6c42\u51fa\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u4e2d\u70b9\n  \n  buildtree(l,midx,u,midy,slu);\n  tree[o].maxx=honoka(tree[o].maxx,tree[slu].maxx);//\u5148\u9012\u5f52\u5de6\u4e0a\u89d2\u7684\u513f\u5b50\n  \n  if(l!=r)//\u5224\u65ad\u53f3\u4e0a\u89d2\u7684\u513f\u5b50\u662f\u5426\u5b58\u5728\n  {\n    buildtree(midx+1,r,u,midy,sru);\n    tree[o].maxx=honoka(tree[o].maxx,tree[sru].maxx);\n  }\n  \n  if(u!=d)//\u5de6\u4e0b\u89d2\n  {\n    buildtree(l,midx,midy+1,d,sld);\n    tree[o].maxx=honoka(tree[o].maxx,tree[sld].maxx);\n  }\n  \n  if(l!=r && u!=d)//\u53f3\u4e0b\u89d2\n  {\n    buildtree(midx+1,r,midy+1,d,srd);\n    tree[o].maxx=honoka(tree[o].maxx,tree[srd].maxx);\n  }\n  return;\n}\n```\n\n\u521a\u5f00\u59cb\u548c\u4e00\u7ef4\u4e00\u6837,\u53ea\u4e0d\u8fc7\u9012\u5f52\u4e2d\u6b62\u6761\u4ef6\u662f\u4e24\u4e2a\u7ef4\u5ea6\u7684\n\n\u7136\u540e\u5c31\u662f\u548c\u4e00\u7ef4\u4e0d\u592a\u4e00\u6837\u7684\u5207\u5206\u533a\u95f4\n\n\u4e00\u7ef4\u91cc\u9762\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u65b9\u5411\u5207\u4e00\u534a\u5c31\u597d\n\n\u4e8c\u7ef4\u5219\u9700\u8981\u4e24\u4e2a\u65b9\u5411\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9\u5c31\u4f1a\u88ab\u5207\u6210\u56db\u5757,\u5de6\u4e0a\u89d2\u7684\u513f\u5b50\u662f\u4e00\u5b9a\u4f1a\u6709\u7684,\u6240\u4ee5\u5148\u9012\u5f52\u4e00\u6b21\u5de6\u4e0a\u65b9\n\n\u7136\u540e\u53bb\u5224\u65ad\u53f3\u4e0a\u89d2\u7684\u513f\u5b50\u662f\u5426\u5b58\u5728(\u5373\u73b0\u5728\u7684\u77e9\u9635\u662f\u5426\u662f\u5982\u4e0b\u7684\u6837\u5b50)\n\n![](https://cdn.luogu.com.cn/upload/pic/66665.png)\n\n\u82e5\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50$l!=r$\u5c31\u76f4\u63a5\u9012\u5f52,\u5982\u679c\u662f\u8fd9\u6837$l==r$\u90a3\u8bf4\u660e\u6ca1\u6709\u53f3\u4e0a\u65b9\u7684\u513f\u5b50\n\n---\n\n\u7136\u540e\u53bb\u5224\u65ad\u5de6\u4e0b\u89d2\u7684\u513f\u5b50\u662f\u5426\u5b58\u5728(\u5373\u73b0\u5728\u7684\u77e9\u9635\u662f\u5426\u662f\u5982\u4e0b\u7684\u6837\u5b50)\n![](https://cdn.luogu.com.cn/upload/pic/66667.png)\n\n\u82e5\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50$u!=d$\u5c31\u76f4\u63a5\u9012\u5f52,\u5982\u679c\u662f\u8fd9\u6837$u==d$\u90a3\u8bf4\u660e\u6ca1\u6709\u5de6\u4e0b\u65b9\u7684\u513f\u5b50\n\n\u6700\u540e\u4e00\u4e2a$l!=r$\u548c$u!=d$\u5224\u65ad\u7684\u5219\u662f\u53f3\u4e0b\u65b9\u7684\u513f\u5b50\n\n\u7136\u540e\u5bf9\u4e8e\u56db\u4e2a\u513f\u5b50\u7684\u533a\u95f4\u6211\u4eec\u4e5f\u7528\u56fe\u6765\u89e3\u91ca\u4e00\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/pic/66668.png)\n\n$slu [l,midx,u,midy]$\n\n$sru [midx+1,r,u,midy]$\n\n$sld [l,midx,midy+1,d]$\n\n$srd [mix+1,r,midy+1,d]$\n\n### \u7136\u540e\u5efa\u6811\u5c31\u5b8c\u6210\u4e86,\u8fd9\u4e00\u6bb5\u8ba4\u771f\u7406\u89e3\u4e86\u4e0b\u9762\u5c31\u5f88\u65b9\u4fbf\u4e86\n\n---\n\n## \u56db.pushdown\u51fd\u6570(\u67d3\u8272\u7c7b\u7684pushdown)\n```cpp\ninline void pushdown(int l,int r,int u,int d,int o)\n{\n  tree[slu].maxx=tree[o].lazy;\n  tree[slu].lazy=tree[o].lazy;//slu\n  \n  if(l!=r)//sru\n  {\n    tree[sru].maxx=tree[o].lazy;\n    tree[sru].lazy=tree[o].lazy;\n  }\n  \n  if(o!=d)//sld\n  {\n    tree[sld].maxx=tree[o].lazy;\n    tree[sld].lazy=tree[o].lazy;\n  }\n  \n  if(l!=r && o!=d)//srd\n  {\n    tree[srd].maxx=tree[o].lazy;\n    tree[srd].lazy=tree[o].lazy;\n  }\n  \n  tree[o].lazy=0;\n  return;\n}\n```\n\u5de6\u4e0a\u89d2\u7684\u513f\u5b50\u76f4\u63a5\u4e0b\u653e,\u5176\u4ed6\u4e09\u4e2a\u548c\u5efa\u6811\u4e00\u6837\u5224\u65ad,\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0\n\n---\n\n## \u4e94.\u4fee\u6539\u64cd\u4f5c\n```cpp\ninline void update(int ql,int qr,int qu,int qd,int l,int r,int u,int d,int o,int add)\n{\n  if(l>=ql && r<=qr && u>=qu && d<=qd)\n  {\n    tree[o].maxx=add;\n    tree[o].lazy=add;\n    return;\n  }\n  pushdown(l,r,u,d,o);\n    \n  int midx,midy;\n  midx=(l+r)>>1;\n  midy=(u+d)>>1;\n    \n  if(ql<=midx && qu<=midy)//\u5de6\u4e0a\u89d2\n  {\n    update(ql,qr,qu,qd,l,midx,u,midy,slu,add);\n    tree[o].maxx=honoka(tree[slu].maxx,tree[o].maxx);\n  }\n    \n  if(qr>midx && qu<=midy && l!=r)//\u53f3\u4e0a\u89d2\n  {\n    update(ql,qr,qu,qd,midx+1,r,u,midy,sru,add);\n    tree[o].maxx=honoka(tree[sru].maxx,tree[o].maxx);\n  }\n    \n  if(ql<=midx && qd>midy && u!=d)//\u5de6\u4e0b\u89d2\n  {\n    update(ql,qr,qu,qd,l,midx,midy+1,d,sld,add);\n    tree[o].maxx=honoka(tree[sld].maxx,tree[o].maxx);\n  }\n    \n  if(qr>midx && qd>midy && l!=r && o!=d)//\u53f3\u4e0b\u89d2\n  {\n    update(ql,qr,qu,qd,midx+1,r,midy+1,d,srd,add);\n    tree[o].maxx=honoka(tree[srd].maxx,tree[o].maxx);\n  }\n  return;\n}\n```\n\u4e00\u7ef4\u7684\u7ebf\u6bb5\u6811\u91cc\u9762\u533a\u95f4\u88ab\u5b8c\u5168\u5305\u62ec\u7684\u60c5\u51b5\u662f$l>=ql$\u4e14$r<=qr$\n\n\u90a3\u4e8c\u7ef4\u7684\u5c31\u662f\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u9762\u5305\u62ec\u5c31\u884c\u4e86$l>=ql,r<=qr,u>=qu,d<=qd$\n\n\u7136\u540e\u5c31\u662f\u9012\u5f52\u5b50\u6811\n\n\u9996\u5148\u5148\u770b\u6700\u540e\u7684$l,r,u,d$\u7684\u5224\u65ad,\u90a3\u662f\u5224\u65ad\u5b50\u6811\u662f\u5426\u5b58\u5728\u7684\n\n\u8fd9\u4e2a\u65f6\u5019\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6bd4\u5982\u7ad6\u6761\u7684\u77e9\u9635$l==r$,\u8fd9\u4e2a\u65f6\u5019$midx+1$\u5df2\u7ecf\u8d85\u8fc7\u4e86$r$\u7684\u8303\u56f4\n\n\u4f46\u662f\u6ca1\u6709\u5f71\u54cd\u554a,\u56e0\u4e3a\u5728\u5b50\u6811\u5224\u65ad\u91cc\u9762\u8fd9\u79cd\u5b50\u77e9\u9635\u6ca1\u6709\u53f3\u4e0a\u89d2\u7684\u513f\u5b50,\u4ed6\u4f1a\u88abban\u6389\u7684\n\n\u7136\u540e\u56db\u4e2a\u65b9\u5411\u7c7b\u6bd4\u4e00\u7ef4\u53bb\u9012\u5f52\u4fee\u6539\u5373\u53ef\n\n\u6bd4\u5982\u7b2c\u4e00\u4e2a\u5982\u679c$ql<=midx,qu<=midy$\u5c31\u662f\u5de6\u4e0a\u89d2\n\n\u7b2c\u4e8c\u4e2a$qr>midx,qu<=midy$\u5c31\u662f\u53f3\u4e0a\u89d2\n\n\u8fd9\u6837\u56db\u4e2a\u65b9\u5411\u641e\u5b8c\u4fee\u6539\u4e5f\u5b8c\u6210\u4e86\n\n---\n\n## \u516d.\u67e5\u8be2\n```cpp\ninline int query(int ql,int qr,int qu,int qd,int l,int r,int u,int d,int o)\n{\n  if(l>=ql && r<=qr && u>=qu && d<=qd)return tree[o].maxx;\n  pushdown(l,r,u,d,o);\n  int ans=-1;\n    \n  int midx,midy;\n  midx=(l+r)>>1;\n  midy=(u+d)>>1;\n    \n  if(ql<=midx && qu<=midy)//\u5de6\u4e0a\n  ans=honoka(query(ql,qr,qu,qd,l,midx,u,midy,slu),ans);\n    \n  if(qr>midx && qu<=midy && l!=r)//\u53f3\u4e0a\n  ans=honoka(query(ql,qr,qu,qd,midx+1,r,u,midy,sru),ans);\n    \n  if(ql<=midx && qd>midy && u!=d)//\u5de6\u4e0b\n  ans=honoka(query(ql,qr,qu,qd,l,midx,midy+1,d,sld),ans);\n    \n  if(qr>midx && qd>midy && l!=r && u!=d)//\u53f3\u4e0b\n  ans=honoka(query(ql,qr,qu,qd,midx+1,r,midy+1,d,srd),ans);\n  return ans;\n}\n```\n\n\u9012\u5f52\u65b9\u5411,\u5177\u4f53\u64cd\u4f5c\u548c\u4e0a\u9762\u5f88\u50cf\u4e86,\u8fd9\u91cc\u5c31\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0\n\n---\n\n## \u4e03.\u4e3b\u51fd\u6570\u63a5\u53e3\n```cpp\nint main()\n{\n  int D,S,N;\n  maki(D),maki(S),maki(N);\n  buildtree(1,D,1,S,0);\n  while(N--)\n  {\n    int d,s,h,x,y;\n    maki(d),maki(s),maki(h),maki(x),maki(y);\n    int add=query(x+1,x+d,y+1,y+s,1,D,1,S,0);\n    add+=h;\n    update(x+1,x+d,y+1,y+s,1,D,1,S,0,add);\n  }\n  printf(\"%d\\n\",query(1,D,1,S,1,D,1,S,0));\n  return 0;\n}\n```\n\n\u5bf9\u5e94\u9898\u9762\u91cc\u9762\u7684\u4fee\u6539,\u6211\u4eec\u5148\u67e5\u8be2\u51fa\u6700\u5927\u503c,\u7136\u540e\u52a0\u4e0ah\u518d\u7ed9\u4fee\u6539\u56de\u53bb\u5c31\u597d\n\n---\n\n## \u516b.\u6742\u8c08\n### \u9996\u5148\n\u8fd9\u4e2a\u4e8c\u7ef4\u7ebf\u6bb5\u6811,\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\u7684\n\n\u5efa\u6811\u7684\u590d\u6742\u5ea6\u662f$O(n^2)$\n\n\u5728\u8fd9\u9898\u91cc\u9762\u80af\u5b9a\u5403\u4e0d\u6d88,\u4e8b\u5b9e\u4e0a\u5f88\u591a\u5730\u65b9\u788d\u4e8e\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u9ad8\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6,\u5e76\u4e0d\u4f1a\u53bb\u4f7f\u7528\n\n\u4f46\u662f\u6d1b\u8c37\u4e0a\u9762\u6ca1\u627e\u5230\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\u9898,\u8fd9\u4e00\u9898\u7a0d\u5fae\u50cf\u4e00\u70b9,\u54b1\u5c31\u7a0d\u5fae\u786c\u5361\u4e00\u4e0b,\u987a\u4fbf\u628a\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5199\u6e05\u695a(\u7f51\u4e0a\u8be6\u7ec6\u7684\u4ecb\u7ecd\u8fd8\u662f\u5f88\u5c11\u7684,\u8fd8\u6709\u4e00\u90e8\u5206\u5f88\u4e0d\u53cb\u597d\u7684\u6307\u9488\u7c7b\u4ee3\u7801)\n\n\u5728\u8fd9\u4e00\u9898\u91cc\u9762,\u6211\u4eec\u6ce8\u610f\u5230\u521a\u5f00\u59cb\u6240\u6709\u503c\u90fd\u662f0,\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4e0d\u5efa\u6811,\u4ece\u800c\u7701\u65f6\u95f4(\u5168\u5c40\u6570\u7ec4\u9ed8\u8ba4\u4e3a0)\n\n### \u5176\u6b21\n\n\u5c31\u662finline~~\u7684\u5fc3\u7406\u4f5c\u7528~~,\u5feb\u901f\u8bfb\u5165~~\u6211\u59ec\u8d5b\u9ad8~~,\u6c27\u6c14\u4f18\u5316~~\u6765,\u723d\u4e00\u53e3~~\n\n\u5373\u4f7f\u8fd9\u6837\u6211\u4eec\u4f9d\u65e7\u6709\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\n\n\u4e2d\u95f4\u7684\u5b50\u6811\u5224\u65ad,\u6839\u672c\u6ca1\u5fc5\u8981\u90a3\u4e48\u591a\u7684\u5224\u65ad,\u53ef\u4ee5\u9002\u5f53\u5730\u5199\u5728\u4e0d\u540c\u7684\u5224\u65ad\u91cc\u9762\n\n\u4f18\u5316\u5224\u65ad\u7ed3\u6784\u6765\u4f18\u5316\u65f6\u95f4(\u6709\u6548\u679c\u7684)\n\n### \u7b2c\u4e09\n\n\u5c31\u662f$define$\u589e\u52a0\u53ef\u8bfb\u6027\n\n\u6240\u4ee5\u6700\u540e\u5199\u51fa\u6765\u4e86\u7684\u7248\u672c\u5e76\u4e0d\u662f\u4e0a\u9762\u7684\u7248\u672c(\u91cc\u9762\u6709\u5224\u65ad\u7ed3\u6784\u7684\u4f18\u5316\u548cdefine,\u4f46\u662f\u5177\u4f53\u7684\u903b\u8f91\u7ed3\u6784\u662f\u4e00\u6837\u7684)\n\n\u4e0b\u9762\u8d34\u5b8c\u6574\u4ee3\u7801,\u5e0c\u671b\u5bf9\u5404\u4f4d\u6709\u5e2e\u52a9\n\n---\n\n## \u4e5d.\u5b8c\u6574\u4ee3\u7801\u548c\u51e0\u6b21\u4e0d\u540c\u7684\u63d0\u4ea4\u60c5\u51b5\n\n\u5dee\u70b9\u5fd8\u4e86\u8fd8\u6709\u4e2a\u6570\u7ec4\u504f\u79fb\n\n\u9898\u76ee\u7ed9\u7684\u4e0d\u662f0\u5f00\u59cb\u7684\u561b,\u6211\u4eec\u5168\u90e8\u52a01\u5c31\u597d\u4e86\n\n~~\u867d\u8bf4\u5efa\u6811\u53ef\u4ee5\u4e0d\u5199,\u4f46\u662f\u6211\u8fd8\u662f\u89c9\u5f97\u52a0\u4e0a\u6bd4\u8f83\u597d,\u5584\u59cb\u5584\u7ec8~~\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define maxn 1010\n#define slu ((o<<2)+1)\n#define sru ((o<<2)+2)\n#define sld ((o<<2)+3)\n#define srd ((o<<2)+4)\n#define midx ((l+r)>>1)\n#define midy ((u+d)>>1)\nusing namespace std;\n\n\nstruct segtree{\n  int maxx,lazy;\n}tree[(maxn<<2)*(maxn<<2)];\n\n\ninline void maki(int &s)\n{\n  s=0;char c=getchar();while(c>'9' || c<'0') c=getchar();\n  while(c<='9' && c>='0')s*=10,s+=c-'0',c=getchar();return;\n}\ninline int honoka(int a,int b)\n{return a>b?a:b;}\n\n\ninline void buildtree(int l,int r,int u,int d,int o)\n{\n  tree[o].lazy=0;\n  \n  if(l==r && u==d)\n  {\n    tree[o].maxx=0;\n    return;\n  }\n  \n  buildtree(l,midx,u,midy,slu);\n  tree[o].maxx=honoka(tree[o].maxx,tree[slu].maxx);\n  \n  if(l!=r)\n  {\n    buildtree(midx+1,r,u,midy,sru);\n    tree[o].maxx=honoka(tree[o].maxx,tree[sru].maxx);\n    \n    if(u!=d)//\u6b64\u5904\u9690\u542b\u4e86l!=r\u8fd9\u4e2a\u6761\u4ef6\n    {\n      buildtree(midx+1,r,midy+1,d,srd);\n      tree[o].maxx=honoka(tree[o].maxx,tree[srd].maxx);\n    }\n  }\n  \n  if(u!=d)\n  {\n    buildtree(l,midx,midy+1,d,sld);\n    tree[o].maxx=honoka(tree[o].maxx,tree[sld].maxx);\n  }\n  return;\n}\n\n\ninline void pushdown(int l,int r,int u,int d,int o)\n{\n  if(tree[o].lazy==0)\n  return;\n  \n  tree[slu].maxx=tree[o].lazy;\n  tree[slu].lazy=tree[o].lazy;\n  \n  if(l!=r)\n  {\n    tree[sru].maxx=tree[o].lazy;\n    tree[sru].lazy=tree[o].lazy;\n      \n    if(u!=d)//\u540c\u5efa\u6811\u91cc\u9762\u7684\u7ed3\u6784\u4f18\u5316\n    {\n      tree[srd].maxx=tree[o].lazy;\n      tree[srd].lazy=tree[o].lazy;\n    }\n  }\n  \n  if(u!=d)\n  {\n    tree[sld].maxx=tree[o].lazy;\n    tree[sld].lazy=tree[o].lazy;\n  }\n  tree[o].lazy=0;\n  return;\n}\n\n\ninline void update(int ql,int qr,int qu,int qd,int l,int r,int u,int d,int o,int add)\n{\n  if(l>=ql && r<=qr && u>=qu && d<=qd)\n  {\n    tree[o].maxx=add;\n    tree[o].lazy=add;\n    return;\n  }\n    \n  pushdown(l,r,u,d,o);\n    \n  if(ql<=midx)\n  {\n    if(qu<=midy)\n    {\n      update(ql,qr,qu,qd,l,midx,u,midy,slu,add);\n      tree[o].maxx=honoka(tree[slu].maxx,tree[o].maxx);\n    }\n      \n    if(qd>midy && u!=d)\n    {\n      update(ql,qr,qu,qd,l,midx,midy+1,d,sld,add);\n      tree[o].maxx=honoka(tree[sld].maxx,tree[o].maxx);\n    }\n  }\n    \n  if(qr>midx && l!=r)\n  {\n    if(qu<=midy)\n    {\n      update(ql,qr,qu,qd,midx+1,r,u,midy,sru,add);\n      tree[o].maxx=honoka(tree[sru].maxx,tree[o].maxx);\n    }\n      \n    if(qd>midy && u!=d)\n    {\n      update(ql,qr,qu,qd,midx+1,r,midy+1,d,srd,add);\n      tree[o].maxx=honoka(tree[srd].maxx,tree[o].maxx);\n    }\n  }\n  return;\n}\n\n\ninline int query(int ql,int qr,int qu,int qd,int l,int r,int u,int d,int o)\n{\n  if(l>=ql && r<=qr && u>=qu && d<=qd)return tree[o].maxx;\n  pushdown(l,r,u,d,o);\n  int ans=-1;\n    \n  if(ql<=midx)\n  {\n    if(qu<=midy)\n    ans=honoka(query(ql,qr,qu,qd,l,midx,u,midy,slu),ans);\n      \n    if(qd>midy && u!=d)\n    ans=honoka(query(ql,qr,qu,qd,l,midx,midy+1,d,sld),ans);\n  }\n    \n  if(qr>midx)\n  {\n    if(l!=r)\n    {\n      if(qu<=midy)\n        ans=honoka(query(ql,qr,qu,qd,midx+1,r,u,midy,sru),ans);\n        \n        if(qd>midy && u!=d)\n        ans=honoka(query(ql,qr,qu,qd,midx+1,r,midy+1,d,srd),ans);\n    }\n  }\n    return ans;\n}\n\n\nint main()\n{\n  int D,S,N;\n  maki(D),maki(S),maki(N);\n  while(N--)\n  {\n    int d,s,h,x,y;\n    maki(d),maki(s),maki(h),maki(x),maki(y);\n    int add=query(x+1,x+d,y+1,y+s,1,D,1,S,0);\n    add+=h;\n    update(x+1,x+d,y+1,y+s,1,D,1,S,0,add);\n  }\n  printf(\"%d\\n\",query(1,D,1,S,1,D,1,S,0));\n  return 0;\n}\n```\n\n\u7a7a\u884c\u4e3b\u8981\u662f\u60f3\u628a\u4e0d\u540c\u903b\u8f91\u7684\u4ee3\u7801\u5757\u5206\u9694\u5f00\n\n\u4e24\u683c\u7f29\u8fdb\u515a~~\u4f60\u8c37\u535a\u5ba2\u5403\u6389\u4e86\u6211\u90e8\u5206\u7f29\u8fdb\u554aQAQ~~\n\n![](https://cdn.luogu.com.cn/upload/pic/66674.png)\n![](https://cdn.luogu.com.cn/upload/pic/66675.png)\n![](https://cdn.luogu.com.cn/upload/pic/66676.png)\n\n\u6211\u53c8\u53bb\u5404\u4e2a\u7fa4\u91cc\u9762\u95ee\u4e86\u4e00\u4e0b\u8fd9\u4e9b\u4e2a\u60c5\u51b5\u662f\u4e3a\u4ec0\u4e48(\u6307\u540c\u4e00\u4efd\u4ee3\u7801\u591a\u6b21\u63d0\u4ea4\u7ed3\u679c\u4e0d\u540c)\n\n\u7136\u540edalao\u7684\u56de\u7b54\u662f\u6d4b\u8bc4\u8bef\u5dee,\u6b63\u5e38\u73b0\u8c61~~\u4e5f\u5c31\u662f\u8bf4\u6211\u662f\u5361\u7740\u65f6\u9650\u8fc7\u7684XD~~\n\n~~\u636e\u8bf4\u4f60\u8c37\u7684\u6d4b\u8bc4\u59ec\u51fa\u4e86\u540d\u7684\u6ce2\u52a8~~\n\n\u561b\u91cd\u70b9\u4e5f\u4e0d\u662f\u4e3a\u4e86\u5361\u8fc7\u8fd9\u9053\u9898~~\u8fc7\u4e86\u80af\u5b9a\u66f4\u597d~~\n\n\u4e3b\u8981\u662f\u60f3\u4ecb\u7ecd\u4e00\u4e0b\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u60c5\u51b5~~\u5df2\u7ecf\u6709\u90a3\u4e48\u591a\u4eba\u5199\u6811\u5957\u6811\u7684\u9898\u89e3\u4e86QAQ~~\n\n\n~~\u7531\u4e8e\u6392\u7248\u548c\u9519\u5b57\u60c5\u51b5\u591a\u4ea4\u4e86\u51e0\u6b21QAQ,\u3054\u3081\u3093\u306a\u3055\u3044!~~\n\n~~\u5176\u5b9e\u90a3\u4e00\u4efd\u8fc7\u4e86\u7684\u4ee3\u7801\u662f\u5728\u624b\u673a\u4e0a\u628abuildtree\u6ce8\u91ca\u6389\u4e4b\u540e\u4ea4\u4e0a\u53bb\u4e00\u4e0b\u8fc7\u6389\u76842333333~~\n\n---\n\n\u4e0b\u9762\u548c\u9898\u76ee\u65e0\u5173(\u4e3b\u8981\u662f\u6211\u60f3\u518d\u8bd5\u8bd5\u4eba\u54c1)\n\n#### \u679c\u7136\n\n#### ~~\u6d4b\u8bc4\u59ec\u7528\u8fd9\u4efdAC\u7ed9\u4e86\u6211\u6700\u597d\u7684\u665a\u5b89XD~~\n![](https://cdn.luogu.com.cn/upload/pic/66678.png)",
        "postTime": 1564411020,
        "uid": 58134,
        "name": "Methylene_Blue",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "\u6765\u6c34\u7bc7\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u9898\u89e3~\n\n## Analysis:\n\n\u9996\u5148\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u7acb\u65b9\u4f53\u6389\u843d\uff0c\u505c\u7559\u7684\u90a3\u4e2a\u9ad8\u5ea6\u80af\u5b9a\u662f\u6700\u5148\u78b0\u5230\u7684\u90a3\u4e2a\u65b9\u5757\u7684\u9ad8\u5ea6\uff0c\u5176\u5b9e\u5c31\u662f\u5e95\u9762\u5185\u7684\u6700\u5927\u9ad8\u5ea6 $h=\\max\\limits_{x\\leq i<x+d,y\\leq j<y+s}a_{i,j}$\uff1b\n\n\u843d\u4e0b\u4e4b\u540e\uff0c\u6574\u4e2a\u7acb\u65b9\u4f53\u4e0d\u4f1a\u6563\u67b6\uff0c\u6240\u4ee5\u5728\u5e95\u9762\u533a\u57df\u4e4b\u5185\u7684\u9ad8\u5ea6\u90fd\u4f1a\u53d8\u6210 $h+w_i$\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e2a\u77e9\u5f62\u8d4b\u503c\u77e9\u5f62 RMQ\uff0c\u4e14\u4fdd\u8bc1\u4efb\u610f\u4f4d\u7f6e\u7684\u9ad8\u5ea6\u5355\u8c03\u4e0d\u51cf\u3002\n\n## Solution 1:\n\n\u53ef\u4ee5\u76f4\u63a5\u5199\u4e00\u4e2a\u56db\u5206\u6811\u7ef4\u62a4\u8fd9\u4e2a\u5e73\u9762\uff0c\u590d\u6742\u5ea6\u662f $O(nq)\\approx O(2\\times 10^7)$ \u7684\uff0c\u5361\u5361\u5e38\u5e94\u8be5\u80fd\u8fc7\uff0c\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u4ecb\u7ecd\u3002\n\n## Solution 2:\n\n\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u7684\u65b9\u5f0f\u7ef4\u62a4\u3002\n\n\u5148\u8003\u8651\u4e00\u7ef4\uff0c\u8f6c\u53d8\u6210\u533a\u95f4\u8d4b\u503c\u533a\u95f4 RMQ\uff0c\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811+\u6807\u8bb0\u6c38\u4e45\u5316\u3002\u5728\u4fee\u6539\u64cd\u4f5c\u4e2d\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u4e00\u4e2a\u533a\u95f4\u6253\u4e0a tag\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u5728\u8def\u5f84\u4e0a\u53d6 tag \u7684\u6700\u5927\u503c\u3002\u56e0\u4e3a\u4efb\u610f\u4f4d\u7f6e\u7684\u9ad8\u5ea6\u5355\u8c03\u4e0d\u51cf\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u6700\u5927\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u6269\u5c55\u5230\u4e8c\u7ef4\uff0c\u8fd9\u65f6\u7684 tag \u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e0a\u9762\u8fdb\u884c\u4e00\u6b21\u533a\u95f4 RMQ \u6765\u53d6\u51fa\u9700\u8981\u7684\u503c\uff0c\u6bcf\u6b21\u6253 tag \u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e0a\u9762\u8fdb\u884c\u4e00\u6b21\u533a\u95f4\u8d4b\u503c\u3002\n\n\u6240\u4ee5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u4e00\u4e0b tag\uff0c\u5269\u4e0b\u7684\u5c31\u548c\u7b2c\u4e00\u7ef4\u7684\u60c5\u51b5\u4e00\u6837\u4e86~\n\n\u8fd9\u4e2a\u7684\u590d\u6742\u5ea6\u662f $O(n\\log d\\log s)\\approx O(2\\times 10^6)$ \u7684\uff0c\u53ef\u4ee5\u968f\u4fbf\u8fc7\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nint d, s, n;\n\nstruct Segy {\n\tint tag[3505], val[3505];\n\tinline void Modify(int p, int pl, int pr, int l, int r, int v) {\n\t\tval[p] = Max(val[p], v);\n\t\tif (pl == l && pr == r) {\n\t\t\ttag[p] = Max(tag[p], v);\n\t\t\treturn;\n\t\t}\n\t\tregister int mid = pl + pr >> 1;\n\t\tif (mid >= r) Modify(p << 1, pl, mid, l, r, v);\n\t\telse if (mid + 1 <= l) Modify(p << 1 | 1, mid + 1, pr, l, r, v);\n\t\telse {\n\t\t\tModify(p << 1, pl, mid, l, mid, v);\n\t\t\tModify(p << 1 | 1, mid + 1, pr, mid + 1, r, v);\n\t\t}\n\t}\n\tinline int Query(int p, int pl, int pr, int l, int r) {\n\t\tif (pl == l && pr == r) return val[p];\n\t\tregister int mid = pl + pr >> 1;\n\t\tif (mid >= r) return Max(Query(p << 1, pl, mid, l, r), tag[p]);\n\t\telse if (mid + 1 <= l) return Max(Query(p << 1 | 1, mid + 1, pr, l, r), tag[p]);\n\t\telse return Max(Max(Query(p << 1, pl, mid, l, mid), Query(p << 1 | 1, mid + 1, pr, mid + 1, r)), tag[p]);\n\t}\n};\nstruct Segx {\n\tSegy tag[3505], val[3505];\n\tinline void Modify(int p, int pl, int pr, int l, int r, int _y0, int _y1, int v) {\n\t\tval[p].Modify(1, 1, s, _y0, _y1, v);\n\t\tif (pl == l && pr == r) {\n\t\t\ttag[p].Modify(1, 1, s, _y0, _y1, v);\n\t\t\treturn;\n\t\t}\n\t\tregister int mid = pl + pr >> 1;\n\t\tif (mid >= r) Modify(p << 1, pl, mid, l, r, _y0, _y1, v);\n\t\telse if (mid + 1 <= l) Modify(p << 1 | 1, mid + 1, pr, l, r, _y0, _y1, v);\n\t\telse {\n\t\t\tModify(p << 1, pl, mid, l, mid, _y0, _y1, v);\n\t\t\tModify(p << 1 | 1, mid + 1, pr, mid + 1, r, _y0, _y1, v);\n\t\t}\n\t}\n\tinline int Query(int p, int pl, int pr, int l, int r, int _y0, int _y1) {\n\t\tif (pl == l && pr == r) return val[p].Query(1, 1, s, _y0, _y1);\n\t\tregister int mid = pl + pr >> 1, tmpv = tag[p].Query(1, 1, s, _y0, _y1);\n\t\tif (mid >= r) return Max(tmpv, Query(p << 1, pl, mid, l, r, _y0, _y1));\n\t\telse if (mid + 1 <= l) return Max(tmpv, Query(p << 1 | 1, mid + 1, pr, l, r, _y0, _y1));\n\t\telse return Max(Max(Query(p << 1, pl, mid, l, mid, _y0, _y1), Query(p << 1 | 1, mid + 1, pr, mid + 1, r, _y0, _y1)), tmpv);\n\t}\n};\n\nSegx sgt;\n\ninline void Solve() {\n\td = qread(); s = qread(); n = qread();\n\twhile (n--) {\n\t\tregister int _d = qread(), _s = qread(), _w = qread(), _x = qread(), _y = qread();\n\t\tregister int val = sgt.Query(1, 1, d, _x + 1, _x + _d, _y + 1, _y + _s);\n\t\tsgt.Modify(1, 1, d, _x + 1, _x + _d, _y + 1, _y + _s, val + _w);\n\t}\n\tprintf(\"%d\", sgt.Query(1, 1, d, 1, d, 1, s));\n}\n\nint main() {\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1587996071,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "\u4e3b\u8981\u5185\u5bb9\u5728\u4ee3\u7801\u540e\u65b9\u7684\u6ce8\u91ca\u91cc\n\n\u4e3b\u8981\u5bf9\u8be5\u9898\u7684\u6d41\u7a0b\u8fdb\u884c\u4e00\u4e2a\u68b3\u7406\u5e76\u5bf9\u6709\u4e89\u8bae\u7684\u5730\u65b9\u8fdb\u884c\u89e3\u91ca\n\n\u5e76\u63d0\u4f9b\u4e00\u4e2a\u7b97\u597d\u61c2\u7684\u4ee3\u7801\u5427\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nint read()\n{\n\tchar ch=getchar();int h=0,t=1;\n\twhile(ch!='-'&&(ch>'9'||ch<'0'))ch=getchar();\n\tif(ch=='-')t=-1,ch=getchar();\n\twhile(ch>='0'&&ch<='9'){h=h*10+ch-'0';ch=getchar();}\n\treturn h*t;\t\n}\nconst int MAXN=1010;\nint N,M,TT;\nstruct Seg1//\u5185\u5c42\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4y\u8f74\n{\n\tint t[MAXN<<2],tag[MAXN<<2];\n\tint Query(int now,int l,int r,int gl,int gr)\n\t\t{\n\t\t\tif(l>gr||r<gl) return -1e9;\n\t\t\tif(l>=gl&&r<=gr) return max(t[now],tag[now]);//\u53d6max\n\t\t\tint mid=(l+r)>>1,Tag=tag[now];\n\t\t\treturn max(Tag,max(Query(now<<1,l,mid,gl,gr),//\u6807\u8bb0\u6c38\u4e45\u5316\u540e\u8981\u548c\u7956\u5148\u7684tag\u53d6max\n\t\t\t\t\t\t\t   Query(now<<1|1,mid+1,r,gl,gr)));\n\t\t}\n\tvoid Replace(int now,int l,int r,int gl,int gr,int k)\n\t\t{\n\t\t\tif(l>gr||r<gl) return;\n\t\t\tt[now]=max(t[now],k);//\u4e3a\u4e86\u65b9\u4fbf\u90fd\u53d6max\n\t\t\tif(l>=gl&&r<=gr) {tag[now]=max(tag[now],k);return;}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tReplace(now<<1,l,mid,gl,gr,k);\n\t\t\tReplace(now<<1|1,mid+1,r,gl,gr,k);\n\t\t}\n};\nstruct Seg2//\u5916\u5c42\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4x\u8f74\n{\n\tSeg1 t[MAXN<<2],tag[MAXN<<2];\n\tint Query(int now,int l,int r,int gl,int gr,int dn,int up)\n\t\t{\n\t\t\tif(l>gr||r<gl) return -1e9;\n\t\t\tif(l>=gl&&r<=gr) return t[now].Query(1,1,M,dn,up);//\u6253\u6807\u8bb0\u7684\u65f6\u5019\u5df2\u7ecf\u53d6\u4e86max\uff0c\u6240\u4ee5\u4e0d\u7528\u548ctag\u53d6max\u4e86\n\t\t\tint mid=(l+r)>>1,Tag=tag[now].Query(1,1,M,dn,up);\n\t\t\treturn max(Tag,max(Query(now<<1,l,mid,gl,gr,dn,up),//\u8981\u548c\u7956\u5148\u7684tag\u53d6max\n\t\t\t\t\t\t\t\tQuery(now<<1|1,mid+1,r,gl,gr,dn,up)));\n\t\t}\n\tvoid Replace(int now,int l,int r,int gl,int gr,int dn,int up,int k)\n\t\t{\n\t\t\tif(l>gr||r<gl) return;\n\t\t\tt[now].Replace(1,1,M,dn,up,k);//\u8981\u628a\u7956\u5148\u7684tag\u4e5f\u66f4\u65b0\n\t\t\tif(l>=gl&&r<=gr) {tag[now].Replace(1,1,M,dn,up,k);return;}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tReplace(now<<1,l,mid,gl,gr,dn,up,k);\n\t\t\tReplace(now<<1|1,mid+1,r,gl,gr,dn,up,k);\n\t\t}\n}T;\nint main()\n{\n\tN=read(),M=read(),TT=read();\n\twhile(TT--)\n\t{\n\t\tint d=read(),s=read(),h=read(),x=read()+1,y=read()+1;\n\t\th+=T.Query(1,1,N,x,x+d-1,y,y+s-1);\n\t\tT.Replace(1,1,N,x,x+d-1,y,y+s-1,h);\n\t}\n\tprintf(\"%d\\n\",T.Query(1,1,N,1,N,1,M));\n\treturn 0;\n}\n/*\n  \u7406\u89e3\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\n  \u9996\u5148\u8fd9\u9898\u80af\u5b9a\u4f1a\u60f3\u5230\u7528\u533a\u95f4\u8986\u76d6\u6807\u8bb0\n  \u5916\u5c42\u7ebf\u6bb5\u6811\u8868\u793ax\u8f74\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u53c8\u4ee3\u8868\u4e00\u68f5\u5185\u5c42\u7ebf\u6bb5\u6811\uff0c\u5185\u5c42\u8868\u793ay\u8f74\n  \u4e3a\u4e86\u65b9\u4fbf\uff0c\u8981\u6807\u8bb0\u6c38\u4e45\u5316\uff08\u4f60\u4e0d\u77e5\u9053\u4e0b\u653e\u7684\u4f4d\u7f6e\uff09\n  \u6d41\u7a0b\u5c31\u662f\uff1a\n  St1 \u533a\u95f4\u8986\u76d6\u7684\u65f6\u5019\u8981\u628a\u6240\u6709\u7684\u6bcd\u533a\u95f4\u7684value\u6811\u66f4\u65b0\n  \n  \u8fd9\u6837\u53ef\u4ee5\u4e0d\u7528pushup\uff0cvalue\u6811\u4e2d\u7684value\u548ctag\u90fd\u662f\u53d6max\n  \u5728value\u6811\u4e2d\u7684tag\u5904\u53d6max\u8fd9\u4e2a\u5730\u65b9\u7ea0\u7ed3\u4e86\u5f88\u4e45\n  \u6bd4\u5982\u8bf4\u4fee\u6539x\u8f74\u4e0a[3,5]\u7684[4,6]\u4e3a1\n  \u4f46\u662f\u5df2\u7ecf\u4fee\u6539\u8fc7[7,9]\u7684[4,6]\u4e3a8\n  \u90a3\u4e48\u5728\u4fee\u6539[1,10]\u7684[4,6]\u533a\u95f4\u65f6\uff0ctag\u5df2\u7ecf\u4e3a8\u4e86\n  \u90a3\u4e48\u4e0d\u80fd\u5c06\u5b83\u6539\u62101\n  \u56e0\u4e3a\u8be2\u95ee\u662f\u628a\u533a\u95f4\u5361\u6b7b\u7684\uff0c\u5982\u679c\u4f1a\u8be2\u95ee\u5230[1,10]\u4e2d\u7684[4,6]\u7684tag\n  \u5c31\u8bf4\u660e\u4e00\u5b9a\u4f1a\u53d6\u52308\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u6240\u4ee5\u90fd\u8981\u53d6max\n\n  St2 \u7136\u540e\u518d\u628a\u5361\u6b7b\u7684\u533a\u95f4tag\u6811\u66f4\u65b0\n\n  tag\u6811\u7684value\u548ctag\u90fd\u662f\u76f4\u63a5\u8d4b\u503c\u800c\u4e0d\u662f\u53d6max\n  \u4f46\u662f\u8fd9\u9053\u9898\u80fd\u591f\u4fdd\u8bc1\u4e00\u4e2a\u5730\u65b9\u7684\u503c\u53ea\u4f1a\u4e0d\u65ad\u589e\u5927\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u4ee3\u7801\u91cf\u5c31\u548c\u4e0a\u9762\u7684\u64cd\u4f5c\u4e00\u5e76\u5199\u4e86\n  \u4e5f\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6027\u8d28\uff0c\u624d\u8ba9\u6211\u4ee5\u4e3avalue\u6811\u4e2d\u7684tag\u4e5f\u662f\u4e0d\u65ad\u589e\u5927\u7136\u540e\u5220\u6389maxWA\u4e00\u7247\n\n  St1 \u533a\u95f4\u8be2\u95ee\u7684\u65f6\u5019\u4e0d\u65ad\u548c\u8fd9\u4e2a\u533a\u95f4\u7684Tag\u53d6\u6700\u503c\n\n  \u8fd9\u6837\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c\u5728\u53d6\u4e0d\u53d6max\u4e0a\u7ea0\u7ed3\u4e86\u4e00\u4e2a\u4e0b\u5348 TOT\n */\n```",
        "postTime": 1522838357,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "\u65f6\u9694\u591a\u65e5\u849f\u84bb\u6211\u7ec8\u4e8e\u5f04\u61c2\u4e86\u5565\u53eb\u6807\u8bb0\u6c38\u4e45\u5316\uff08~~\u5e76\u4e14hack\u6389\u4e86\u4e00\u7247\u9898\u89e3\u7684\u4ee3\u7801~~\n\n\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u601d\u8def\n\n1.\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u77e9\u5f62\u56db\u5206\u601d\u60f3\n\n\u987e\u540d\u601d\u4e49\u5c31\u662f\u628a\u4e00\u5927\u5757\u77e9\u5f62\u6cbf\u5bf9\u8fb9\u4e2d\u70b9\u8fde\u7ebf\u5207\u5f00\uff0c\u7136\u540e\u5206\u6cbb\u3002\n\n\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(n^2 log^2 n)\u7684\uff0c\u4f46\u662f**\u81ea\u5e26\u56db\u500d\u5e38\u6570\uff01\uff01**\n\n\u5438\u6c2792\u5206\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u2193\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint d,s,n,a,b,c,x,y;\nint maxn[2048][2048],all[2048][2048];\n\nvoid cchg(int x,int k1,int k2,int lx,int ly,int rx,int ry,int x1,int y1,int x2,int y2){\n\t\n\tif(x1<=lx&&y1<=ly&&rx<=x2&&ry<=y2){\n\t\tmaxn[k1][k2]=x;\n\t\tall[k1][k2]=x;\n\t\treturn;\n\t}\n\t\n\tint i1=k1<<1,i2=k2<<1,xmid=(lx+rx)>>1,ymid=(ly+ry)>>1,maxx=0;\n\t\n\tif(x1<=xmid){\n\t\tif(y1<=ymid) cchg(x,i1,i2,lx,ly,xmid,ymid,x1,y1,x2,y2);\n\t\tif(ymid<y2) cchg(x,i1,i2|1,lx,ymid+1,xmid,ry,x1,y1,x2,y2);\n\t}if(xmid<x2){\n\t\tif(y1<=ymid) cchg(x,i1|1,i2,xmid+1,ly,rx,ymid,x1,y1,x2,y2);\n\t\tif(ymid<y2) cchg(x,i1|1,i2|1,xmid+1,ymid+1,rx,ry,x1,y1,x2,y2);\n\t}\n\t\n\tmaxn[k1][k2]=max(maxn[k1][k2],x);\n}\nint ask(int x,int k1,int k2,int lx,int ly,int rx,int ry,int x1,int y1,int x2,int y2){\n\t\n\tif(x1<=lx&&y1<=ly&&rx<=x2&&ry<=y2) return max(x,maxn[k1][k2]);\n\t\n\tint i1=k1<<1,i2=k2<<1,xmid=(lx+rx)>>1,ymid=(ly+ry)>>1,maxx=0,q=max(x,all[k1][k2]);\n\t\n\tif(x1<=xmid){\n\t\tif(y1<=ymid) maxx=max(maxx,ask(q,i1,i2,lx,ly,xmid,ymid,x1,y1,x2,y2));\n\t\tif(ymid<y2) maxx=max(maxx,ask(q,i1,i2|1,lx,ymid+1,xmid,ry,x1,y1,x2,y2));\n\t}if(xmid<x2){\n\t\tif(y1<=ymid) maxx=max(maxx,ask(q,i1|1,i2,xmid+1,ly,rx,ymid,x1,y1,x2,y2));\n\t\tif(ymid<y2) maxx=max(maxx,ask(q,i1|1,i2|1,xmid+1,ymid+1,rx,ry,x1,y1,x2,y2));\n\t}\n\treturn maxx;\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&d,&s,&n);\n\twhile(n--){\n\t\tscanf(\"%d%d%d%d%d\",&a,&b,&c,&x,&y);\n\t\tcchg(ask(0,1,1,1,1,d,s,x+1,y+1,x+a,y+b)+c,1,1,1,1,d,s,x+1,y+1,x+a,y+b);\n\t}\n\tprintf(\"%d\",maxn[1][1]);\n\treturn 0;\n}\n```\n\n\u4e8e\u662f\u6211\u4eec\u601d\u8003\u4e00\u79cd**\u4e0d\u5e26\u56db\u500d\u5e38\u6570**\u7684\u65b9\u6cd5\n\nAC\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint d,s,n,a,b,c,x,y;\nstruct treey{\n\tint maxn[1<<11],all[1<<11];\n\tvoid cchg(int x,int k,int ly,int ry,int y1,int y2){\n\t\tmaxn[k]=max(maxn[k],x);\n\t\tif(y1<=ly&&ry<=y2){\n\t\t\tall[k]=max(all[k],x);\n\t\t\treturn;\n\t\t}\n\t\tint i=k<<1,ymid=(ly+ry)>>1,maxx=0;\n\t\t\n\t\tif(y1<=ymid) cchg(x,i,ly,ymid,y1,y2);\n\t\tif(ymid<y2) cchg(x,i|1,ymid+1,ry,y1,y2);\n\t}\n\tint ask(int k,int ly,int ry,int y1,int y2){\n\t\tif(y1<=ly&&ry<=y2) return maxn[k];\n\t\t\n\t\tint i=k<<1,ymid=(ly+ry)>>1,maxx=all[k];\n\t\t\n\t\tif(y1<=ymid) maxx=max(maxx,ask(i,ly,ymid,y1,y2));\n\t\tif(ymid<y2) maxx=max(maxx,ask(i|1,ymid+1,ry,y1,y2));\n\t\treturn maxx;\n\t}\n};\nstruct treex{\n\ttreey maxn[1<<11],all[1<<11];\n\tvoid cchg(int x,int k,int lx,int rx,int x1,int x2){\n\t\tmaxn[k].cchg(x,1,1,s,y+1,y+b);\n\t\tif(x1<=lx&&rx<=x2){\n\t\t\tall[k].cchg(x,1,1,s,y+1,y+b);\n\t\t\treturn;\n\t\t}\n\t\tint i=k<<1,xmid=(lx+rx)>>1,maxx=0;\n\t\t\n\t\tif(x1<=xmid) cchg(x,i,lx,xmid,x1,x2);\n\t\tif(xmid<x2) cchg(x,i|1,xmid+1,rx,x1,x2);\n\t}\n\tint ask(int k,int lx,int rx,int x1,int x2){\n\t\tif(x1<=lx&&rx<=x2) return maxn[k].ask(1,1,s,y+1,y+b);\n\t\t\n\t\tint i=k<<1,xmid=(lx+rx)>>1,maxx=all[k].ask(1,1,s,y+1,y+b);\n\t\t\n\t\tif(x1<=xmid) maxx=max(maxx,ask(i,lx,xmid,x1,x2));\n\t\tif(xmid<x2) maxx=max(maxx,ask(i|1,xmid+1,rx,x1,x2));\n\t\treturn maxx;\n\t}\n}Tree;\n\nint main(){\n\tscanf(\"%d%d%d\",&d,&s,&n);\n\twhile(n--){\n\t\tscanf(\"%d%d%d%d%d\",&a,&b,&c,&x,&y);\n\t\tTree.cchg(Tree.ask(1,1,d,x+1,x+a)+c,1,1,d,x+1,x+a);\n\t}\n\tprintf(\"%d\",Tree.maxn[1].maxn[1]);\n\treturn 0;\n}\n```\n\n\u5438\u6c27\u6700\u4f18\u89e3\u524d\u5341\uff0c\u6548\u7387\u8fd8\u4e0d\u9519\u3002",
        "postTime": 1521080681,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "> *[P3437 [POI2006]TET-Tetris 3D](https://www.luogu.com.cn/problem/P3437)\n>\n> [POI \u5408\u96c6](https://www.cnblogs.com/alex-wei/p/POI.html)\u3002\n\n\u5bf9\u4e8e\u4e00\u822c\u7684\u533a\u95f4\u53d6 $\\max$ \u533a\u95f4\u67e5\u8be2 $\\max$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u666e\u901a\u5e26 `lazytag` \u7684\u7ebf\u6bb5\u6811\u5b8c\u6210\u3002\u4f46\u82e5\u8981\u6c42**\u4e0d\u80fd\u4e0b\u4f20\u6807\u8bb0**\uff08\u5426\u5219\u7a7a\u95f4\u70b8\uff09\uff0c**\u4e0d\u80fd `pushup`**\uff08\u5426\u5219\u65f6\u95f4\u70b8\uff0c\u56e0\u4e3a\u4e00\u6b21 `pushup` \u8981\u8fdb\u884c\u5927\u5c0f\u4e3a $V$ \u7684\u7ebf\u6bb5\u6811\u5408\u5e76\uff09\uff0c\u90a3\u5c31\u6709\u4e9b\u68d8\u624b\u4e86\u3002\n\n\u4e00\u4e2a\u60f3\u6cd5\u662f\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u5728\u66f4\u65b0\u8def\u5f84\u4e0a\u5c06\u7ef4\u62a4\u7684\u533a\u95f4 $\\max$ $val_i$ \u5bf9\u4fee\u6539\u503c $v$ \u53d6 $\\max$\uff0c\u5728\u6240\u6709\u62c6\u5206\u533a\u95f4\u5904\u5c06\u61d2\u6807\u8bb0 $laz_i$ \u5bf9 $v$ \u53d6 $\\max$\u3002\u67e5\u8be2\u65f6\u6c42\u9012\u5f52\u8def\u5f84\u4e0a\u6240\u6709\u61d2\u6807\u8bb0\u7684\u6700\u5927\u503c\uff0c\u518d\u4e0e\u62c6\u5206\u533a\u95f4\u5904\u7ef4\u62a4\u7684\u533a\u95f4 $\\max$ \u53d6\u6700\u5927\u503c\u3002\n\n\u5b9e\u9645\u610f\u4e49\uff1a$val_i$ \u8868\u793a\u7ef4\u62a4\u7684\u533a\u95f4 $\\max$\uff0c\u800c $laz_i$ \u8868\u793a**\u6ca1\u6709\u88ab\u4e0b\u4f20\u7684\u4fee\u6539\u503c**\u7684 $\\max$\uff0c\u6240\u4ee5\u533a\u95f4 $[l_i,r_i]$ \u7684\u6700\u5927\u503c\u4e3a **$val_i$ \u4e0e $i$ \u5230\u7ebf\u6bb5\u6811\u7684\u6839\u4e0a\u6240\u6709\u7ed3\u70b9\u7684 $laz_i$ \u7684\u6700\u5927\u503c**\u3002\u56e0\u6b64\u67e5\u8be2\u65f6\u9700\u8981\u6574\u4e2a\u9012\u5f52\u8def\u5f84\u7684 $\\max laz_i$\u3002\u65f6\u7a7a\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log S\\log D)$\u3002\n\n```cpp\nconst int N = 1e3 + 5;\nint n, D, S;\nnamespace ST {\n\tint node, val[N << 11], laz[N << 11], ls[N << 11], rs[N << 11];\n\tvoid modify(int l, int r, int ql, int qr, int &x, int v) {\n\t\tif(!x) x = ++node; cmax(laz[x], v);\n\t\tif(ql <= l && r <= qr) return cmax(val[x], v), void();\n\t\tint m = l + r >> 1;\n\t\tif(ql <= m) modify(l, m, ql, qr, ls[x], v);\n\t\tif(m < qr) modify(m + 1, r, ql, qr, rs[x], v);\n\t}\n\tint query(int l, int r, int ql, int qr, int x) {\n\t\tif(!x) return 0;\n\t\tif(ql <= l && r <= qr) return max(laz[x], val[x]);\n\t\tint m = l + r >> 1, ans = val[x];\n\t\tif(ql <= m) cmax(ans, query(l, m, ql, qr, ls[x]));\n\t\tif(m < qr) cmax(ans, query(m + 1, r, ql, qr, rs[x]));\n\t\treturn ans;\n\t}\n}\n\nint laz[N << 2], val[N << 2];\nvoid modify(int l, int r, int ql, int qr, int u, int d, int x, int v) {\n\tST :: modify(1, S, u, d, laz[x], v);\n\tif(ql <= l && r <= qr) return ST :: modify(1, S, u, d, val[x], v), void();\n\tint m = l + r >> 1;\n\tif(ql <= m) modify(l, m, ql, qr, u, d, x << 1, v);\n\tif(m < qr) modify(m + 1, r, ql, qr, u, d, x << 1 | 1, v);\n}\nint query(int l, int r, int ql, int qr, int u, int d, int x) {\n\tint ans = ST :: query(1, S, u, d, val[x]);\n\tif(ql <= l && r <= qr) return max(ans, ST :: query(1, S, u, d, laz[x]));\n\tint m = l + r >> 1;\n\tif(ql <= m) cmax(ans, query(l, m, ql, qr, u, d, x << 1));\n\tif(m < qr) cmax(ans, query(m + 1, r, ql, qr, u, d, x << 1 | 1));\n\treturn ans;\n}\n\nint main(){\n\tcin >> D >> S >> n;\n\tfor(int i = 1; i <= n; i++) {\n\t\tint d, s, w, x, y; cin >> d >> s >> w >> x >> y;\n\t\tint ht = query(1, D, x + 1, x + d, y + 1, y + s, 1);\n\t\tmodify(1, D, x + 1, x + d, y + 1, y + s, 1, ht + w);\n\t} cout << query(1, D, 1, D, 1, S, 1) << endl;\n\treturn 0;\n}\n```",
        "postTime": 1639376393,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P3437 [POI2006]TET-Tetris 3D"
    },
    {
        "content": "$n*m(n,m\\le1000)$ \u7684\u77e9\u5f62\uff0c\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1\u3001\u5b50\u77e9\u5f62\u6700\u5927\u503c\n\n2\u3001\u5b50\u77e9\u5f62\u8d4b\u503c\n\n\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u88f8\u9898\u3002\n\n\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff1a\n\n\u597d\u50cf\u5e76\u4e0d\u662f\u60f3\u8c61\u4e2d\u7684\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\uff0c\u800c\u662f\u4e00\u79cd **\u56db\u53c9\u6811**\n\n\u6bcf\u4e2a\u8282\u70b9\u6709\u56db\u4e2a\u513f\u5b50\uff0c\u628a\u4e00\u4e2a\u77e9\u5f62\u5206\u6210\u56db\u4efd\u3002\n\n\u7136\u540e\u5199\u4e00\u4e2a\u533a\u95f4\u7c7b\uff0c\u5c31\u53ef\u4ee5\u50cf\u4e00\u7ef4\u7ebf\u6bb5\u6811\u4e00\u6837\u64cd\u4f5c\u4e86\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n^2)$ \uff0c\u6bcf\u6b21\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6 $O(log^2n)$\n\n\u9700\u8981\u5361\u5e38\uff0c\u4e00\u4e2a\u5c0f\u526a\u679d\u5c31\u662f\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c $\\le$ \u5df2\u7ecf\u67e5\u8be2\u7684\u6700\u5927\u503c\uff0c\u5c31\u76f4\u63a5 $return$  \u3002\n\n\u56e0\u4e3a $tag$ \u6807\u8bb0\u5355\u8c03\u4e0d\u51cf\uff0c\u6bcf\u6b21\u4e0d\u7528\u4e0b\u653e\uff0c\u76f4\u63a5\u53d6\u4e2a $max$ \u5c31\u884c\u4e86\u3002\u597d\u50cf\u53eb\u505a\u6807\u8bb0\u6c38\u4e45\u5316\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1005\n#define M N*N<<2\n#define son(x) ((p<<2)+(x-2))\nusing namespace std;\n\ninline void rd(int &x){\n    x=0;char ch=0;\n    while(!isdigit(ch)) ch=getchar();\n    while( isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\n\nint n,m,q,V;\nint mx[M],tag[M];\nstruct nd{\n    int l,r;\n    inline nd(int L,int R){l=L;r=R;}\n    inline int mid(){return (l+r)>>1;}\n    inline nd r1(){return (nd){ l ,mid()};}\n    inline nd r2(){return (nd){mid()+1,r};}\n};\nvoid ask(int p,nd X,nd Y,nd x=nd(1,n),nd y=nd(1,m)){\n    if(x.r<X.l or x.l>X.r or y.r<Y.l or y.l>Y.r or mx[p]<=V) return ;\n    if(X.l<=x.l and x.r<=X.r and Y.l<=y.l and y.r<=Y.r) \n        return (void)(V=max(V,mx[p]));\n    V=max(V,tag[p]);\n    ask(son(0),X,Y,x.r1(),y.r1());\n    ask(son(1),X,Y,x.r1(),y.r2());\n    ask(son(2),X,Y,x.r2(),y.r1());\n    ask(son(3),X,Y,x.r2(),y.r2());\n}\nvoid change(int p,int v,nd X,nd Y,nd x=nd(1,n),nd y=nd(1,m)){\n    if(x.r<X.l or x.l>X.r or y.r<Y.l or y.l>Y.r) return ;\n    if(X.l<=x.l and x.r<=X.r and Y.l<=y.l and y.r<=Y.r) \n        {mx[p]=tag[p]=v;return ;}\n    change(son(0),v,X,Y,x.r1(),y.r1());\n    change(son(1),v,X,Y,x.r1(),y.r2());\n    change(son(2),v,X,Y,x.r2(),y.r1());\n    change(son(3),v,X,Y,x.r2(),y.r2());\n    for(int i=0;i<4;i++) mx[p]=max(mx[p],mx[son(i)]);\n}\nsigned main(){\n    rd(n);rd(m);rd(q);\n    while(q--){\n        int x,y,lx,ly,h;V=0;\n        rd(lx);rd(ly);rd(h);rd(x);rd(y);x++;y++;\n        ask(1,nd(x,x+lx-1),nd(y,y+ly-1));\n        change(1,V+h,nd(x,x+lx-1),nd(y,y+ly-1));\n    }\n    printf(\"%d\",mx[1]);\n}\n```",
        "postTime": 1543237656,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "http://www.neptuuz.com/wordpress/?p=129\n\n\u8fd9\u9053\u9898\u5bf9\u7a7a\u95f4\u9650\u5236\u7279\u522b\u4e25\u683c\uff0c\u4ec5\u4ec5128M\uff01\n\n\u6240\u4ee5\u9700\u8981\u5c06\u7a7a\u95f4\u5f00\u7684\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6bcf\u9897\u7ebf\u6bb5\u6811\u5806\u7ed3\u6784\u5728\u6700\u591a\u7528O(2^(\u2308logn\u2309+1))\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u6570\u7ec4\u53ea\u7528\u5f002048\n\n\u5176\u4f59\u4e4b\u5916\u5c31\u662f\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u6a21\u7248\u9898\uff0c\u6ce8\u610f\u8981\u7528\u6807\u7b7e\u6c38\u4e45\u5316\u7684\u66f4\u65b0\u65b9\u5f0f\u4e86\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\n\nint D, S, N;\n\nstruct segy {\n    int v[2048], tag[2048];\n    \n    void change(int p, int l, int r, int ll, int rr, int d) {\n        v[p] = max(v[p], d);\n        if (ll <= l && r <= rr) {\n            tag[p] = max(tag[p], d);\n            return;\n        }\n        int mid = (l+r)/2;\n        if (ll < mid) change(p<<1, l, mid, ll, rr, d);\n        if (rr > mid) change(p<<1|1, mid, r, ll, rr, d);\n    }\n    \n    int query(int p, int l, int r, int ll, int rr) {\n        if (ll <= l && r <= rr) {\n            return v[p];\n        }\n        int mid = (l+r)>>1, ans = tag[p];\n        if (ll < mid) ans = max(ans, query(p<<1, l, mid, ll, rr));\n        if (rr > mid) ans = max(ans, query(p<<1|1, mid, r, ll, rr));\n        return ans;\n    }\n};\n\nstruct segx {\n    segy v[2048], tag[2048];\n    \n    void change(int p, int l, int r, int ll, int rr, int y1, int y2, int d) {\n        v[p].change(1, 1, S, y1, y2, d);\n        if (ll <= l && r <= rr) {\n            tag[p].change(1, 1, S, y1, y2, d);\n            return;\n        }\n        int mid = (l+r)/2;\n        if (ll < mid) change(p<<1, l, mid, ll, rr, y1, y2, d);\n        if (rr > mid) change(p<<1|1, mid, r, ll, rr, y1, y2, d);\n    }\n    \n    int query(int p, int l, int r, int ll, int rr, int y1, int y2) {\n        if (ll <= l && r <= rr) {\n            return v[p].query(1, 1, S, y1, y2);\n        }\n        int mid = (l+r)>>1, ans = tag[p].query(1, 1, S, y1, y2);\n        if (ll < mid) ans = max(ans, query(p<<1, l, mid, ll, rr, y1, y2));\n        if (rr > mid) ans = max(ans, query(p<<1|1, mid, r, ll, rr, y1, y2));\n        return ans;\n    }\n} T;\n\nint main() {\n    scanf(\"%d%d%d\", &D, &S, &N);\n    for (int i = 1, d, s, w, x, y, now; i <= N; ++i) {\n        scanf(\"%d%d%d%d%d\", &d, &s, &w, &x, &y);\n        int t = T.query(1, 0, D, x, x+d, y, y+s);\n        T.change(1, 0, D, x, x+d, y, y+s, t+w);\n    }\n    printf(\"%d\\n\", T.query(1, 0, D, 0, D, 0, S));\n    return 0;\n}\n```",
        "postTime": 1499176220,
        "uid": 2008,
        "name": "AmamiyaUmi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "# \u7b80\u8981\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u77e9\u9635\uff0c\u521d\u59cb\u65f6\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u90fd\u662f $0$\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u6700\u5927\u503c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5b50\u77e9\u9635\u7684\u6240\u6709\u6570\u4fee\u6539\u4e3a\u6700\u5927\u503c\u52a0 $w$\uff0c\u8f93\u51fa\u6700\u540e\u6574\u4e2a\u77e9\u9635\u7684\u6700\u5927\u503c\u3002\n\n# \u601d\u8def\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\u5916\u5c42\u7ebf\u6bb5\u6811\u7ef4\u62a4\u884c\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u4e2a\u533a\u95f4\u4e3a $[l, r]$ \u7684\u7ed3\u70b9\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6811\u4e3a\u77e9\u9635\u7b2c $l$ \u884c\u5230\u7b2c $r$ \u884c\u7684\u6700\u5927\u503c\u3002\u56e0\u4e3a\u9700\u8981\u533a\u95f4\u4fee\u6539\uff0c\u8fd8\u9700\u8981\u7ef4\u62a4\u61d2\u6807\u8bb0\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5916\u5c42\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\u662f\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\n\n\u7531\u4e8e\u5916\u5c42\u7ebf\u6bb5\u6811\u66f4\u65b0\u7ed3\u70b9\u4fe1\u606f\u548c\u4e0b\u4f20\u6807\u8bb0\u90fd\u76f8\u5f53\u4e8e\u4e24\u68f5\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6240\u4ee5\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u4f1a T \u98de\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u3002\n\n## \u6807\u8bb0\u6c38\u4e45\u5316\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u7ef4\u7ebf\u6bb5\u6811\u6765\u5e2e\u52a9\u7406\u89e3\u6807\u8bb0\u6c38\u4e45\u5316\u3002\u5047\u5982\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7ef4\u62a4\u5e8f\u5217\u7684\u533a\u95f4\u52a0\u3001\u533a\u95f4\u6c42\u548c\uff0c\u6211\u4eec\u5728\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\u4fbf\u4fee\u6539\u7ecf\u8fc7\u7ed3\u70b9\u7684\u6743\u503c\uff0c\u7136\u540e\u5bf9\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\u6253\u6807\u8bb0\uff1b\u5728\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u8bb0\u5f55\u7ecf\u8fc7\u7ed3\u70b9\u7684\u6807\u8bb0\u4e4b\u548c\uff0c\u5bf9\u4e8e\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\uff0c\u8fd9\u4e2a\u533a\u95f4\u5b9e\u9645\u7684\u548c\u4e3a\u8bb0\u5f55\u7684\u548c\u52a0\u4e0a\u533a\u95f4\u957f\u5ea6\u4e58\u6807\u8bb0\u3002\u5bf9\u5e94\u7684\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff08\u4ee3\u7801\u4e2d $l$ \u548c $r$ \u8868\u793a\u5f53\u524d\u7ed3\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u4e3a $[l, r]$\uff0c$L$ \u548c $R$ \u8868\u793a\u67e5\u8be2/\u4fee\u6539\u7684\u533a\u95f4\u4e3a $[L, R]$\uff09\uff1a\n\n```cpp\nvoid update(int pos, int l, int r, int L, int R, int val) {\n    sum[pos] += (R - L + 1) * val;\n    if (L == l && R == r) {\n        tag[pos] += val;\n        return;\n    }\n    int mid = (l + r) / 2;\n    if (L <= mid)\n        update(ls[pos], l, mid, L, min(R, mid), val);\n    if (R > mid)\n        update(rs[pos], mid + 1, r, max(L, mid + 1), R, val);\n}\nint query(int pos, int l, int r, int L, int R, int val) {\n    if (L <= l && R >= r)\n        return sum[pos] + (r - l + 1) * val;\n    val += tag[pos];\n    int mid = (l + r) / 2;\n    if (R <= mid)\n        return query(ls[pos], l, mid, L, R, val);\n    if (L > MID)\n        return query(rs[pos], mid + 1, r, L, R, val);\n    return query(ls[pos], l, mid, L, R, val) + query(rs[pos], mid + 1, r, L, R, val);\n}\n```\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u6c38\u4e45\u5316\uff0c\u548c\u4e00\u7ef4\u7ebf\u6bb5\u6811\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5916\u5c42\u7ef4\u62a4\u7684\u6700\u5927\u503c\u548c\u61d2\u6807\u8bb0\u90fd\u662f\u4e00\u4e2a\u4e00\u7ef4\u7ebf\u6bb5\u6811\u3002\n\n~~\u5bb9\u6613\u770b\u51fa~~ \u7ecf\u8fc7\u4ebf\u4e9b\u601d\u8003\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u4e9b\u4fe1\u606f\u662f\u4e0d\u80fd\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u7ef4\u62a4\u7684\u3002\u56e0\u4e3a\u4f20\u7edf\u7684\u5199\u6cd5\u4e2d\u4e00\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u901a\u8fc7\u5b50\u533a\u95f4\u7684\u4fe1\u606f\u5408\u5e76\u5f97\u6765\uff0c\u800c\u6807\u8bb0\u6c38\u4e45\u5316\u662f\u5728\u66f4\u65b0\u7684\u65f6\u5019\u8ba1\u7b97\u5bf9\u6709\u5173\u7ed3\u70b9\u4fe1\u606f\u7684\u6539\u53d8\u3002\u5982\u679c\u662f\u968f\u673a\u7684\u533a\u95f4\u4fee\u6539\u4e0e\u533a\u95f4\u6c42\u6700\u5927\u503c\u662f\u4e0d\u80fd\u7528\u6807\u8bb0\u6c38\u4e45\u5316\u7ef4\u62a4\u7684\uff0c\u56e0\u4e3a\u5f53\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u7f29\u5c0f\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\u5f97\u77e5\u7ecf\u8fc7\u7ed3\u70b9\u4fe1\u606f\u5e94\u8be5\u5982\u4f55\u53d8\u5316\u3002\n\n\u8fd9\u9053\u9898\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u533a\u95f4\u4fee\u6539\u7684\u503c\u6bd4\u4fee\u6539\u524d\u7684\u6700\u5927\u503c\u8981\u5927\uff0c\u56e0\u6b64\u5bf9\u7ecf\u8fc7\u7ed3\u70b9\u7684\u5f71\u54cd\u662f\u53ef\u4ee5\u8ba1\u7b97\u7684\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u5bf9\u7ed3\u70b9\u7ef4\u62a4\u7684\u4fe1\u606f\u53d6\u6700\u5927\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#define LP pos << 1\n#define RP LP | 1\n#define MID (l + r >> 1)\n#define LS l, MID\n#define RS MID + 1, r\n#define THIS pos, l, r\nusing namespace std;\nconst int MAXN = 2e4 + 5;\nint n, m, q, tot, ls[MAXN * 100], rs[MAXN * 100], num[MAXN * 100], tag[MAXN * 100];\nclass SegmentTree1D {\nprivate:\n    int root;\n    void update(int &pos, int l, int r, int L, int R, int val) {\n        if (!pos)\n            pos = ++tot;\n        num[pos] = max(num[pos], val);\n        if (L <= l && R >= r)\n            return tag[pos] = max(tag[pos], val), void(); // \u8fd9\u91cc\n        if (L <= MID)\n            update(ls[pos], LS, L, R, val);\n        if (R > MID)\n            update(rs[pos], RS, L, R, val);\n    }\n    int query(int pos, int l, int r, int L, int R, int val) {\n        if (L <= l && R >= r)\n            return max(num[pos], val);\n        val = max(val, tag[pos]);\n        if (R <= MID)\n            return query(ls[pos], LS, L, R, val);\n        if (L > MID)\n            return query(rs[pos], RS, L, R, val);\n        return max(query(ls[pos], LS, L, R, val), query(rs[pos], RS, L, R, val));\n    }\n\npublic:\n    void update(int l, int r, int x) { update(root, 1, m, l, r, x); }\n    int query(int l, int r) { return query(root, 1, m, l, r, 0); }\n};\nclass SegmentTree2D {\nprivate:\n    SegmentTree1D num[MAXN * 4], tag[MAXN * 4];\n    void update(int pos, int l, int r, int L, int R, int a, int b, int val) {\n        num[pos].update(a, b, val);\n        if (L <= l && R >= r)\n            return tag[pos].update(a, b, val);\n        if (L <= MID)\n            update(LP, LS, L, R, a, b, val);\n        if (R > MID)\n            update(RP, RS, L, R, a, b, val);\n    }\n    int query(int pos, int l, int r, int L, int R, int a, int b, int val) {\n        if (L <= l && R >= r)\n            return max(num[pos].query(a, b), val);\n        val = max(val, tag[pos].query(a, b));\n        if (R <= MID)\n            return query(LP, LS, L, R, a, b, val);\n        if (L > MID)\n            return query(RP, RS, L, R, a, b, val);\n        return max(query(LP, LS, L, R, a, b, val), query(RP, RS, L, R, a, b, val));\n    }\n\npublic:\n    void update(int l, int r, int a, int b, int x) { update(1, 1, n, l, r, a, b, x); }\n    int query(int l, int r, int a, int b) { return query(1, 1, n, l, r, a, b, 0); }\n} t;\nint main() {\n    ios::sync_with_stdio(false), cin.tie(0);\n    cin >> n >> m >> q;\n    for (int i = 1, d, s, w, x, y; i <= q; ++i)\n        cin >> d >> s >> w >> x >> y, t.update(x + 1, x + d, y + 1, y + s, t.query(x + 1, x + d, y + 1, y + s) + w);\n    cout << t.query(1, n, 1, m) << \"\\n\";\n}\n```\n\n## \u5173\u4e8e\u5185\u5c42\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\u4e3a\u4ec0\u4e48\u662f\u53d6\u6700\u5927\u503c\u800c\u4e0d\u662f\u76f4\u63a5\u8d4b\u503c\n\n\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5904\u662f\u5185\u5c42\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\uff0c\u8fd9\u91cc\u5fc5\u987b\u5199\u6210\u53d6\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u5916\u5c42\u7ebf\u6bb5\u6811\uff0c\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u5bf9\u7ecf\u8fc7\u7ed3\u70b9\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6811\u7684\u66f4\u65b0\u7684\u542b\u4e49\u662f\u53d6\u6700\u5927\u503c\uff0c\u800c\u4e0d\u662f\u533a\u95f4\u4fee\u6539\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u7684\u7279\u6b8a\u6027\uff0c\u533a\u95f4\u4fee\u6539\u76f8\u5f53\u4e8e\u533a\u95f4\u4e2d\u7684\u6240\u6709\u6570\u5bf9\u4e00\u4e2a\u6570\u53d6\u6700\u5927\u503c\u3002\u56e0\u6b64\u5185\u5c42\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\u5fc5\u987b\u662f\u53d6\u6700\u5927\u503c\u3002\uff08~~\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u4e00\u4e0b~~ \u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u5904\u4e0a\u6570\u7b2c\u4e8c\u884c\u5199\u6210 `num[pos] = val;` \u5bf9\u4e8e\u4e00\u7ef4\u7ebf\u6bb5\u6811\u7684\u5f71\u54cd\uff0c\u76f8\u5f53\u4e8e\u6ce8\u91ca\u5904\u5199\u6210\u8d4b\u503c\u5bf9\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u7684\u5f71\u54cd\uff09",
        "postTime": 1674196775,
        "uid": 241100,
        "name": "Emertyst",
        "ccfLevel": 6,
        "title": "P3437 Tetris 3D"
    },
    {
        "content": "\u56db\u5206\u6811\u5361\u5e38\u5dee\u70b9\u6ca1\u628a\u6211\u4eba\u5361\u6b7b\u3002\u3002\u3002\n\n\u5927\u6982\u5c31\u662f\u6bcf\u4e2a\u70b9\u6709 $4$ \u4e2a\u513f\u5b50\uff0c\u7136\u540e\u76f4\u63a5\u4eff\u7167\u666e\u901a\u7ebf\u6bb5\u6811\u5c31\u597d\u4e86\u3002\n\n\u8f6c\u79fb\u7684\u5224\u65ad\u6709\u4e00\u4e9b\u6076\u5fc3\uff0c\u53cd\u6b63\u6211\u5199\u4e86 $4K+$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int NR=1005;\nint max(int a,int b){return (a>b)?a:b;}\nvoid Max(int& x,int y){x=max(x,y);}\nint mmax(int a,int b,int c,int d){\n\treturn max(max(a,b),max(c,d));\n}\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint D,S,n,mx;\nstruct Segment\n{\n\tint tr[NR<<2][NR<<2],lz[NR<<2][NR<<2];\n\tvoid update(int rt1,int rt2){\n\t\ttr[rt1][rt2]=mmax(tr[rt1<<1][rt2<<1],tr[rt1<<1|1][rt2<<1|1]\n\t\t\t\t\t,tr[rt1<<1|1][rt2<<1],tr[rt1<<1][rt2<<1|1]);\n\t}\n\tvoid push_down(int rt1,int rt2)\n\t{\n\t\tif(!lz[rt1][rt2])return;\n\t\tMax(lz[rt1<<1][rt2<<1],lz[rt1][rt2]);\n\t\tMax(lz[rt1<<1|1][rt2<<1],lz[rt1][rt2]);\n\t\tMax(lz[rt1<<1][rt2<<1|1],lz[rt1][rt2]);\n\t\tMax(lz[rt1<<1|1][rt2<<1|1],lz[rt1][rt2]);\n\t\tMax(tr[rt1<<1][rt2<<1],lz[rt1][rt2]);\n\t\tMax(tr[rt1<<1|1][rt2<<1],lz[rt1][rt2]);\n\t\tMax(tr[rt1<<1][rt2<<1|1],lz[rt1][rt2]);\n\t\tMax(tr[rt1<<1|1][rt2<<1|1],lz[rt1][rt2]);\n\t\tlz[rt1][rt2]=0;\n\t}\n\tvoid change(int rt1,int rt2,int l1,int l2,int r1,int r2,int L1,int L2,int R1,int R2,int v)\n\t{\n\t\tif(l1==L1&&l2==L2&&r1==R1&&r2==R2){Max(tr[rt1][rt2],v),Max(lz[rt1][rt2],v);return;}\n\t\tint mid1=(l1+r1)>>1,mid2=(l2+r2)>>1;push_down(rt1,rt2);\n\t\tif(R1<=mid1){\n\t\t\tif(R2<=mid2)change(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,R1,R2,v);\n\t\t\telse if(L2>mid2)change(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,L2,R1,R2,v);\n\t\t\telse change(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,R1,mid2,v),\n\t\t\t\t change(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,mid2+1,R1,R2,v);\n\t\t}\n\t\telse if(L1>mid1){\n\t\t\tif(R2<=mid2)change(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,L1,L2,R1,R2,v);\n\t\t\telse if(L2>mid2)change(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,L1,L2,R1,R2,v);\n\t\t\telse change(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,L1,L2,R1,mid2,v),\n\t\t\t\t change(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,L1,mid2+1,R1,R2,v);\n\t\t}\n\t\telse{\n\t\t\tif(R2<=mid2)change(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,mid1,R2,v),\n\t\t\t\t\t\tchange(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,mid1+1,L2,R1,R2,v);\n\t\t\telse if(L2>mid2)change(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,L2,mid1,R2,v),\n\t\t\t\t\t\t\tchange(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,mid1+1,L2,R1,R2,v);\n\t\t\telse change(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,mid1,mid2,v),\n\t\t\t\t change(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,mid2+1,mid1,R2,v),\n\t\t\t\t change(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,mid1+1,L2,R1,mid2,v),\n\t\t\t\t change(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,mid1+1,mid2+1,R1,R2,v);\n\t\t}\n\t\tupdate(rt1,rt2);\n\t}\n\tvoid query(int rt1,int rt2,int l1,int l2,int r1,int r2,int L1,int L2,int R1,int R2)\n\t{\n\t\tif(tr[rt1][rt2]<=mx)return;\n\t\tif(l1==L1&&l2==L2&&r1==R1&&r2==R2){Max(mx,tr[rt1][rt2]);return;}\n\t\tint mid1=(l1+r1)>>1,mid2=(l2+r2)>>1;push_down(rt1,rt2);\n\t\tif(R1<=mid1){\n\t\t\tif(R2<=mid2)return query(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,R1,R2);\n\t\t\telse if(L2>mid2)return query(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,L2,R1,R2);\n\t\t\telse return query(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,R1,mid2),\n\t\t\t\t  query(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,mid2+1,R1,R2);\n\t\t}\n\t\telse if(L1>mid1){\n\t\t\tif(R2<=mid2)return query(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,L1,L2,R1,R2);\n\t\t\telse if(L2>mid2)return query(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,L1,L2,R1,R2);\n\t\t\telse return query(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,L1,L2,R1,mid2),\n\t\t\t\t  query(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,L1,mid2+1,R1,R2);\n\t\t}\n\t\telse{\n\t\t\tif(R2<=mid2)return query(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,mid1,R2),\n\t\t\t\t\t\t query(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,mid1+1,L2,R1,R2);\n\t\t\telse if(L2>mid2)return query(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,L2,mid1,R2),\n\t\t\t\t\t\t\tquery(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,mid1+1,L2,R1,R2);\n\t\t\telse return query(rt1<<1,rt2<<1,l1,l2,mid1,mid2,L1,L2,mid1,mid2),\n\t\t\t\tquery(rt1<<1,rt2<<1|1,l1,mid2+1,mid1,r2,L1,mid2+1,mid1,R2),\n\t\t\t\tquery(rt1<<1|1,rt2<<1,mid1+1,l2,r1,mid2,mid1+1,L2,R1,mid2),\n\t\t\t\tquery(rt1<<1|1,rt2<<1|1,mid1+1,mid2+1,r1,r2,mid1+1,mid2+1,R1,R2);\n\t\t}\n\t}\n}T;\nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tD=read()+1,S=read()+1,n=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint d=read(),s=read(),w=read(),x=read()+1,y=read()+1;mx=0;\n\t\tT.query(1,1,1,1,D,S,x,y,x+d-1,y+s-1);\n\t\tT.change(1,1,1,1,D,S,x,y,x+d-1,y+s-1,mx+w);\n\t}mx=0,T.query(1,1,1,1,D,S,1,1,D,S);printf(\"%d\\n\",mx);\n\treturn 0;\n}\n```\n\n\u5f00O2\u80fd\u8279\u8fc7\u53bb",
        "postTime": 1619308296,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "P3437 [POI2006]TET-Tetris 3D"
    },
    {
        "content": "\u3010POI\u8865\u5168\u8ba1\u5212#21 POI2006 TET\u3011\n\n\u65e0\u667a\u5546\u9009\u624boscar\u53c8\u6765\u5199\u9898\u89e3\u5566\uff01\n\n\u8fd9\u9053\u9898\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u88f8\u7684\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff0c\u7136\u800c\u5199\u5230\u4e00\u534a\u53d1\u73b0\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u4e0a\u53d1\u4e0d\u4e86lazy\n\n\u4e8e\u662f\u6211\u53bb\u8bf7\u6559\u4e86h*****5\u5de8\u795e\uff0c\u4ed6\u8bf4\u53ef\u4ee5\u7528\u56db\u53c9\u6811\u505a\uff0c\u5c31\u662f\u4e0d\u77e5\u9053O(nq)\u80fd\u4e0d\u80fd\u8dd1\u8fc7\uff0c\u4e8e\u662f\u6211\u5c31\u5199\u4e86\u4e00\u68f5\u56db\u53c9\u6811\uff01\n\n\u4ee3\u7801\uff1a<http://paste.ubuntu.com/25659343/>\n\n\u7136\u800cTLE\u4e86...\n\n\u4e8e\u662f\u6211\u53c8\u53bb\u8bf7\u6559o********d\u5de8\u795e\uff0c\u4ed6\u8bf4\u53ef\u4ee5\u6807\u8bb0\u6c38\u4e45\u5316....\n\n\u6545\u4e8b\u90e8\u5206\u5b8c\u4e86\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u201c\u6807\u8bb0\u6c38\u4e45\u5316\u201d\u662f\u4e2a\u5565\n\n\u753b\u5916\u97f3\uff1a\u5c31\u662f\u4e0d\u53d1lazy\uff08\n\n\u90a3\u4e48**\u6574\u4f53\u601d\u8def\u5c31\u662f\u5efa\u4e00\u68f5\u6811\u5957\u6811\uff0c\u5916\u5c42\u8282\u70b9\u7684lazy\u548cmaxx\u4fe1\u606f\u7528\u4e00\u68f5\u5185\u5c42\u6811\u7ef4\u62a4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6b63\u5e38\u5730\u4fee\u6539\u548c\u67e5\u8be2\u4e86\u3002\u3002**\n\n**\u4fee\u6539\u65f6\u66f4\u65b0\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684maxx\u4fe1\u606f\uff0c\u66f4\u65b0\u6700\u4e0b\u5c42\u8282\u70b9\u7684lazy\u4fe1\u606f**\n\n**\u67e5\u8be2\u65f6\u7528\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684lazy\u4fe1\u606f\u548c\u6700\u4e0b\u5c42\u8282\u70b9\u7684maxx\u4fe1\u606f\u6765\u66f4\u65b0\u7b54\u6848**\n\n**\u6b63\u786e\u6027\u8bf7\u8bfb\u8005\u81ea\u5df1\u601d\u8003\uff08\u9003\uff09**\n\n\u4e8e\u662f\u6211\u4eec\u53c8\u5199\u4e86\u4e00\u8bfe\u6307\u9488\u7248\u7684\u6811\u5957\u6811\uff0c\u4ee3\u7801\uff1a<http://paste.ubuntu.com/25659399/>\n\n\u7136\u800cMLE\u4e86...\n\n\u4e8e\u662f\u6211\u5c31\u53bb\u8bf7\u6559\u4e86o***r\u849f\u84bb\uff0c\u51b3\u5b9a\u53bb\u6389\u8282\u70b9\u5185\u90e8\u7684l\u548cr\u4fe1\u606f\uff0c\u56e0\u4e3a\u8bbf\u95ee\u5230\u8282\u70b9\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u4ece\u4e0a\u5c42\u8282\u70b9\u4e0b\u6765\u7684\uff0c\u6240\u4ee5l\u548cr\u53ef\u4ee5\u901a\u8fc7\u7236\u8282\u70b9\u8ba1\u7b97\u51fa\u6765\n\n\u4ee3\u7801\uff1a<http://paste.ubuntu.com/25659376/>\n\n\u7136\u800c\u8fd8\u662fMLE...\n\n\u4e8e\u662f\u6211\u53c8\u53bb\u8bf7\u6559\u4e86o***r\u849f\u84bb\uff0c\u51b3\u5b9a\u6539\u4e3a**\u5806\u5f0f\u5b58\u50a8**\uff0c\u4e8e\u662f\u5c31\u6109\u5feb\u5730AC\u4e86\uff01\n\n\uff08\u8c8c\u4f3c\u591a\u5f00\u4e86\u4e00\u4e2a\u6beb\u65e0\u7528\u5904\u7684\u6570\u7ec4\uff09\n\n\u6700\u7ec8AC\u4ee3\u7801\uff1a<http://paste.ubuntu.com/25659418/>\n\n**\u592a\u957f\u4e0d\u770b\u7248\uff1a\u4e0a\u9762\u7684\u52a0\u7c97\u5b57**\n",
        "postTime": 1506930616,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "\u76f4\u63a5\u628a\u77e9\u9635\u6240\u6709\u7684\u70b9\u62ff\u51fa\u6765\u5efakd-tree\u3002\n\n\u7ef4\u62a4max\u548c\u52a0\u6cd5tag\u3002\n\n\u590d\u6742\u5ea6\u662fN\\*log^2(D\\*S)\n\n\u4f46\u662f\u8fc7\u4e0d\u4e86\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing std::max;\nusing std::nth_element;\n\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define gc (c=getchar())\nint read()\n{\n    char c;\n    while(gc<'0');\n    int x=c-'0';\n    while(gc>='0')x=x*10+c-'0';\n    return x;\n}\nvoid chmax(int &x,int y)\n{\n    if(x<y)x=y;\n}\nvoid chmin(int &x,int y)\n{\n    if(x>y)x=y;\n}\nvoid chmax(short &x,short y)\n{\n    if(x<y)x=y;\n}\nvoid chmin(short &x,short y)\n{\n    if(x>y)x=y;\n}\n\nconst int N=1e6+5;\nshort px[N],py[N];\nint id[N];\nint c[N][2];short mxx[N],mnx[N],mxy[N],mny[N];\nint w[N],same[N],mxw[N];\n\nint nw;short x1,Y1,x2,y2;\nint ans;\n\n#define in(x) (mnx[x]>=x1&&mxx[x]<=x2&&mny[x]>=Y1&&mxy[x]<=y2)\n#define _in(x) (px[x]>=x1&&px[x]<=x2&&py[x]>=Y1&&py[x]<=y2)\n#define out(x) (mnx[x]>x2||mxx[x]<x1||mny[x]>y2||mxy[x]<Y1)\n\nvoid make_same(int x,int nw)\n{\n    same[x]=w[x]=mxw[x]=nw;\n}\n#define up(x) {mxw[x]=max(w[x],max(mxw[c[x][0]],mxw[c[x][1]]));}\nvoid down(int x)\n{\n    if(same[x])\n    {\n        if(c[x][0])make_same(c[x][0],same[x]);\n        if(c[x][1])make_same(c[x][1],same[x]);\n        same[x]=0;\n    }\n}\nvoid qiu(int x)\n{\n    if(out(x)||mxw[x]<ans) return ;\n    if(in(x)) {ans=mxw[x];return ;}\n    \n    if(_in(x)) chmax(ans,w[x]);\n    down(x);\n    qiu(c[x][0]);qiu(c[x][1]);\n}\nvoid make_same(int x)\n{\n    if(out(x)) return ;\n    if(in(x)) \n    {\n        make_same(x,nw);\n        return ;\n    }\n    \n    if(_in(x)) w[x]=nw;\n    down(x);\n    make_same(c[x][0]);make_same(c[x][1]);\n    up(x);\n}\n\nvoid sc(int y,int x,bool d)\n{\n    c[y][d]=x;\n    chmax(mxx[y],mxx[x]);\n    chmax(mxy[y],mxy[x]);\n    chmin(mnx[y],mnx[x]);\n    chmin(mny[y],mny[x]);\n}\nbool px_xiao(int x,int y)\n{\n    return px[x]<px[y];\n}\nbool py_xiao(int x,int y)\n{\n    return py[x]<py[y];\n}\nint build(int l,int r,bool d)\n{\n    int mid=l+r>>1;\n    nth_element(id+l,id+mid,id+r+1,d?px_xiao:py_xiao);\n    \n    int rt=id[mid];\n    mxx[rt]=mnx[rt]=px[rt];\n    mxy[rt]=mny[rt]=py[rt];\n    \n    if(l!=mid)sc(rt,build(l,mid-1,!d),0);\n    if(r!=mid)sc(rt,build(mid+1,r,!d),1);\n    return rt;\n}\n\nint main()\n{\n    int n=read(),m=read(),q=read();\n    \n    int tot=0;\n    rep(i,1,n)\n    rep(j,1,m)\n    {\n        px[++tot]=i;\n        py[tot]=j;\n    }\n    rep(i,1,tot)id[i]=i;\n    int rt=build(1,tot,0);\n    \n    while(q--)\n    {\n        short dx=read(),dy=read();\n        nw=read();x1=read();Y1=read();\n        x2=x1+dx;y2=Y1+dy;\n        ++x1;++Y1;\n        \n        ans=0;\n        qiu(rt);\n        nw+=ans;\n        make_same(rt);\n    }\n    \n    printf(\"%d\\n\",mxw[rt]);\n}\n```",
        "postTime": 1497257619,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3437 \u3010[POI2006]TET-Tetris 3D\u3011"
    },
    {
        "content": "### Description\n\n\u4e00\u5757 $D \\times S$ \u7684\u5730\u9762\uff0c\u6700\u5f00\u59cb\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u73b0\u5728\u4ece\u4e0a\u9762\u5f80\u4e0b\u9762\u653e $N$ \u4e2a\u7acb\u65b9\u4f53\u3002\n\n\u7acb\u65b9\u4f53\u4f1a\u7ad6\u76f4\u4e0b\u843d\u76f4\u5230\u78b0\u5230\u5730\u9762\u6216\u8005\u5df2\u653e\u7f6e\u7684\u7acb\u65b9\u4f53\u65f6\u505c\u6b62\u6389\u843d\uff0c\u4ece\u6b64\u4fdd\u6301\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0d\u52a8\u3002\n\n\u95ee\u6240\u6709\u7acb\u65b9\u4f53\u653e\u7f6e\u5b8c\u6bd5\u4e4b\u540e\u7684\u6700\u9ad8\u9ad8\u5ea6\u3002\n\n$N \\le 20000, D,S \\le 1000$\n\n### Solution\n\n~~\u53cc\u500d\u7ecf\u9a8c\uff1aSP1741\uff08\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u4e00\u4e2a\u84dd\u4e00\u4e2a\u7d2b\uff09~~\n\n\u6807\u8bb0\u6c38\u4e45\u5316\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u3002\n\n\u663e\u7136\uff0c\u7acb\u65b9\u4f53\u6700\u7ec8\u505c\u7559\u7684\u4f4d\u7f6e\u7684\u6700\u9ad8\u9ad8\u5ea6\u662f\u5176\u5e73\u9762\u4e0a\u7684\u6295\u5f71\u5f62\u6210\u7684\u77e9\u5f62\u5f53\u4e2d\u7684\u6700\u5927\u9ad8\u5ea6\u52a0\u4e0a\u5176\u672c\u8eab\u7684\u9ad8\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u4e8c\u7ef4\u533a\u95f4\u4fee\u6539\u548c\u4e8c\u7ef4RMQ\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230~~\u56db\u5206\u6811~~\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u3002\n\n\u5177\u4f53\u7684\uff0c\u5916\u5c42\u7ebf\u6bb5\u6811\u7ef4\u62a4 $x$ \u8f74\uff0c\u5185\u5c42\u7ebf\u6bb5\u6811\u7ef4\u62a4 $y$ \u8f74\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5916\u5c42\u7ebf\u6bb5\u6811\u7684\u7ed3\u70b9\uff0c\u8bbe\u5b83\u8868\u793a\u7684\u533a\u95f4\u4e3a $[L,R]$\uff0c\u5219\u8fd9\u4e2a\u7ed3\u70b9\u4e0a\u7ef4\u62a4\u7684\u5c31\u662f\u7b2c $L$ \u5217\u5230\u7b2c $R$ \u5217\u4e4b\u95f4\u7684\u6700\u5927\u503c\u3002\n\n\u7531\u4e8e\u6b64\u5904\u6807\u8bb0\u4e0d\u65b9\u4fbf\u4e0b\u4f20\uff08\u82e5\u5916\u5c42\u6811\u4e0b\u4f20\u6807\u8bb0\u5c06\u4f1a\u5bfc\u81f4\u6574\u4e2a\u533a\u95f4\u88ab\u8d4b\u503c\uff09\uff0c\u56e0\u6b64\u8003\u8651\u6807\u8bb0\u6c38\u4e45\u5316\u3002\n\n\u53e6\u5916\u8fd9\u9053\u9898\u7ef4\u62a4\u7684\u662f\u5e73\u9762\u4e0a\u7684\u9762\u4e0d\u662f\u70b9\uff0c\u56e0\u6b64\u6240\u6709\u5750\u6807 $+1$\uff08\u6b63\u597d\u89c4\u907f\u4e86\u8fd9\u9053\u9898\u7684\u5750\u6807 $=0$ \u7684\u60c5\u51b5\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n \\log D \\log S)$\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nconst int M=1e3+5;\ninline int read(){int x(0),op(0);char ch=getchar();while(ch<'0'||ch>'9')op|=(ch==45),ch=getchar();while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();return op?-x:x;}\nint n,m,q;\nnamespace SGTinSGT{\n    #define ls (p<<1)\n    #define rs ((p<<1)|1)\n    #define mid ((s+t)>>1)\n    struct SGT{//\u5185\u5c42\u7ebf\u6bb5\u6811\n        int T[M<<2],tag[M<<2];\n        void modify(int l,int r,int x,int p=1,int s=1,int t=m){//\u867d\u7136\u8fd9\u91cc\u6253\u6210n\u4e5f\u80fd\u8fc7\uff0c\u4f46\u662f\u8981\u517b\u6210\u597d\u4e60\u60ef\uff08\u6ed1\u7a3d\n            T[p]=std::max(T[p],x);\n            if(l<=s&&t<=r){\n                tag[p]=std::max(x,tag[p]);\n                return;\n            }\n            if(l<=mid)modify(l,r,x,ls,s,mid);\n            if(r>mid)modify(l,r,x,rs,mid+1,t);\n        }\n        int query(int l,int r,int p=1,int s=1,int t=m){\n            if(l<=s&&t<=r)return T[p];\n            int ans=tag[p];\n            if(l<=mid)ans=std::max(query(l,r,ls,s,mid),ans);\n            if(r>mid)ans=std::max(query(l,r,rs,mid+1,t),ans);\n            return ans;\n        }\n    }T[M<<2],tag[M<<2];\n    //\u5916\u5c42\u7ebf\u6bb5\u6811\n    void modify(int l,int r,int d,int u,int x,int p=1,int s=1,int t=n){\n        T[p].modify(d,u,x);\n        if(l<=s&&t<=r){\n            tag[p].modify(d,u,x);\n            return;\n        }\n        if(l<=mid)modify(l,r,d,u,x,ls,s,mid);\n        if(r>mid)modify(l,r,d,u,x,rs,mid+1,t);\n    }\n    int query(int l,int r,int d,int u,int p=1,int s=1,int t=n){\n        if(l<=s&&t<=r)return T[p].query(d,u);\n        int ans=tag[p].query(d,u);\n        if(l<=mid)ans=std::max(query(l,r,d,u,ls,s,mid),ans);\n        if(r>mid)ans=std::max(query(l,r,d,u,rs,mid+1,t),ans);\n        return ans;\n    }\n}\nint main(){\n    n=read(),m=read(),q=read();\n    while(q--){\n        int d=read(),s=read(),w=read(),x=read(),y=read();\n        int add=SGTinSGT::query(x+1,x+d,y+1,y+s)+w;\n        SGTinSGT::modify(x+1,x+d,y+1,y+s,add);\n    }\n    printf(\"%d\\n\",SGTinSGT::T[1].query(1,n));\n    return 0;\n}\n```\n\n",
        "postTime": 1668156151,
        "uid": 188716,
        "name": "pokefunc",
        "ccfLevel": 6,
        "title": "P3437"
    }
]