[
    {
        "content": "\n~~\u7a81\u7136\u7279\u522b\u60f3\u9a82\u4eba\uff0c\u672c\u6765\u6211\u8003\u573a\u73b0\u5207\u4e86\u7684\uff0c\u7ed3\u679cWA\u4e86\u51e0\u4e2a\u70b9\uff0c\u521a\u521a\u62ff\u4ee3\u7801\u4e00\u770b\u6709\u4e2a\u5730\u65b9\u5fd8\u8bb0\u53d6\u6a21\u4e86\u3002~~\n\n\u9996\u5148\u53d1\u73b0\u7ec8\u6b62\u6001\u4e00\u5b9a\u662f\u6240\u6709\u70b9\u90fd\u5411$n$\u8fde\u8fb9(\u770b\u6837\u4f8b\u56fe\u89e3\u5c31\u77e5\u9053\u4e86)    \n\u90a3\u4e48\u5927\u529b\u731c\u60f3\u4e00\u4e0b\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4e00\u5b9a\u662f$n-3-$\u548c$n$\u53f7\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u6570\u3002  \n\u624b\u73a9\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1a\u548c$n$\u76f4\u63a5\u76f8\u8fde\u7684\u6240\u6709\u8fb9\u628a\u591a\u8fb9\u5f62\u5206\u5272\u6210\u4e86\u82e5\u5e72\u4e2a\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u90fd\u7528$[l,r]$\u8868\u793a\u3002    \n\u5bf9\u4e8e$[l,r]$\u8fd9\u4e2a\u533a\u95f4\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5206\u5272\u51fa\u6765\u4e86\uff0c\u4e5f\u5c31\u662f\u9664\u4e86$l-n,r-n$\u4e4b\u5916\uff0c\u6ca1\u6709\u76f4\u63a5\u548c$n$\u76f8\u8fde\u7684\u8fb9\uff0c\u90a3\u4e48\u53d1\u73b0\u8fd9\u91cc\u6267\u884c\u4e00\u6b21\u65cb\u8f6c\u64cd\u4f5c\u5fc5\u5b9a\u4f1a\u9009\u62e9\u5230$(l,r)$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u627e\u5230$b$\u70b9\uff0c\u663e\u7136$b$\u4e5f\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u5728$l$\u7684\u51fa\u8fb9\u4e2d\u627e\u5230\u5c0f\u4e8e$r$\u7684\u6700\u5927\u503c\u5c31\u884c\u4e86\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f$b$\u3002    \n\u53d1\u73b0\u8fd9\u6b21\u64cd\u4f5c\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u8fd9\u4e2a\u533a\u95f4\u88ab\u5212\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c\u53ea\u9700\u8981\u9012\u5f52\u5904\u7406\u5c31\u884c\u4e86\u3002    \n\u4e8e\u662f\uff0c\u9664\u4e86\u4e00\u5f00\u59cb\u5c31\u548c$n$\u53f7\u70b9\u76f4\u63a5\u76f8\u8fde\u7684\u8fb9\u4e4b\u5916\uff0c\u6bcf\u6b21\u5212\u5206\u4e00\u5b9a\u628a\u533a\u95f4\u5206\u5272\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u5e76\u4e14\u5206\u5272\u64cd\u4f5c\u552f\u4e00\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u7528\u4e00\u4e2a\u4e8c\u53c9\u6811\u6765\u8868\u793a\u3002  \n\u8003\u8651\u8ba1\u7b97\u65b9\u6848\u6570\uff0c\u4e00\u4e2a\u8282\u70b9\u8868\u793a\u8fd9\u4e2a\u70b9\u6240\u4ee3\u8868\u7684\u64cd\u4f5c\u5fc5\u987b\u5728\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u4e4b\u524d\u8fdb\u884c\uff0c\u800c\u5206\u5272\u5b8c\u8fd9\u6b21\u4e4b\u540e\uff0c\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u4e4b\u95f4\u5c31\u72ec\u7acb\u4e86\uff0c\u56e0\u6b64\u7b49\u4ef7\u4e8e\u5de6\u4fa7\u6709\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u53f3\u4fa7\u6709\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u9700\u8981\u628a\u4ed6\u4eec\u4e24\u5408\u5e76\uff0c\u8fd9\u91cc\u8d21\u732e\u7684\u65b9\u6848\u6570\u5c31\u662f\u4e00\u4e2a\u7ec4\u5408\u6570\u3002\u6240\u4ee5\u65b9\u6848\u6570\u5c31\u662f\u6bcf\u4e2a\u8282\u70b9\u5408\u5e76\u4e24\u4e2a\u513f\u5b50\u7684\u65b9\u6848\u6570\u7684\u4e58\u79ef\u3002\u6700\u540e\u518d\u628a\u6240\u6709\u88ab\u548c$n$\u76f8\u8fde\u7684\u8fb9\u5212\u5206\u51fa\u6765\u7684\u533a\u95f4\u518d\u4e58\u4e00\u4e0b\u62fc\u63a5\u7684\u7ec4\u5408\u6570\u5c31\u662f\u7b54\u6848\u3002  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5355\u6b21\u8be2\u95ee\u4e86\u3002    \n\u7ee7\u7eed\u8003\u8651\u63d0\u524d\u6267\u884c\u4e00\u6b21\u65cb\u8f6c\u64cd\u4f5c\u5bf9\u4e8e\u7b54\u6848\u7684\u5f71\u54cd\uff0c\u7c7b\u4f3c$Splay$\uff0c\u53d1\u73b0\u8fd9\u6b21\u64cd\u4f5c\u5c31\u662f\u628a\u4e00\u4e2a\u70b9$rotate$\u4e00\u4e0b(\u611f\u6027\u7406\u89e3\u6216\u8005\u624b\u73a9\u4e00\u4e0b\u5c31\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e86)\u3002  \n\u90a3\u4e48\u8fd9\u91cc\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5b58\u5728\u7236\u4eb2\uff0c\u76f4\u63a5$rotate$\u5c31\u884c\u4e86\uff0c\u9664\u6389\u539f\u672c\u7684\u8d21\u732e\u518d\u4e58\u4e0a\u65b0\u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u5426\u5219\u8fd9\u4e2a\u70b9\u4e0d\u5b58\u5728\u7236\u4eb2\uff0c\u5373\u8fd9\u4e2a\u70b9\u662f\u5212\u5206\u7684\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u63d0\u524d\u65cb\u8f6c\u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u548c$n$\u76f8\u8fde\u7684\u8fb9\uff0c\u8fd9\u91cc\u4f1a\u628a\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u51cf\u4e00\uff0c\u7136\u540e\u628a\u539f\u672c\u7684\u65b9\u6848\u6570\u9664\u6389\uff0c\u518d\u4e58\u4e0a\u76f4\u63a5\u628a\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u5f53\u6210\u88ab\u548c$n$\u76f8\u8fde\u7684\u8fb9\u5206\u5272\u7684\u65b9\u6848\u6570\u5c31\u884c\u4e86\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u4e2a$log$\u3002\uff08\u56e0\u4e3a\u6211\u8981\u7528$map$\u50a8\u5b58\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u662f\u54ea\u6761\u8fb9\uff0c\u4ee5\u53ca\u5728\u5efa\u6811\u7684\u65f6\u5019\u9700\u8981$lower\\_bound$\uff09  \n\u4e0b\u9762\u662f\u8003\u573a\u4ee3\u7801\uff08\u628a\u90a3\u4e2a\u9b3c\u53d6\u6a21\u7ed9\u8865\u4e0a\u4e86  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<map>\nusing namespace std;\n#define ll long long\n#define MAX 200200\n#define MOD 1000000007\ninline int read()\n{\n\tint x=0;char ch=getchar();bool fl=false;\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-')fl=true,ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn fl?-x:x;\n}\nint W,n,ans,Ans=1;\nint jc[MAX],inv[MAX],jv[MAX];\nint C(int n,int m){if(n<0||m<0||n<m)return 0;return 1ll*jc[n]*jv[m]%MOD*jv[n-m]%MOD;}\nint InvC(int n,int m){return 1ll*jv[n]*jc[m]%MOD*jc[n-m]%MOD;}\nint Merge(int n,int m){return C(n+m,n);}\nint InvMerge(int n,int m){return InvC(n+m,n);}\nstruct Edge{int u,v;}p[MAX];\nint ch[MAX][2],tot,sz[MAX],fa[MAX];\nint rt[MAX];\nvector<int> E[MAX],bE[MAX];\nmap<pair<int,int>,int> M;\nvoid Divide(int &x,int ff,int l,int r)\n{\n\tif(r-l<=1)return;x=++tot;sz[x]=1;fa[x]=ff;\n\tint p=lower_bound(E[r].begin(),E[r].end(),l+1)-E[r].begin();\n\tp=E[r][p];M[make_pair(l,r)]=x;\n\tDivide(ch[x][0],x,l,p);Divide(ch[x][1],x,p,r);\n\tsz[x]+=sz[ch[x][0]]+sz[ch[x][1]];\n\tAns=1ll*Ans*Merge(sz[ch[x][0]],sz[ch[x][1]])%MOD;\n}\nint main()\n{\n\tfreopen(\"polygon.in\",\"r\",stdin);\n\tfreopen(\"polygon.out\",\"w\",stdout);\n\tW=read();n=read();\n\tjc[0]=jv[0]=inv[0]=inv[1]=1;\n\tfor(int i=2;i<=n+n;++i)inv[i]=1ll*inv[MOD%i]*(MOD-MOD/i)%MOD;\n\tfor(int i=1;i<=n+n;++i)jc[i]=1ll*jc[i-1]*i%MOD;\n\tfor(int i=1;i<=n+n;++i)jv[i]=1ll*jv[i-1]*inv[i]%MOD;\n\tfor(int i=1;i<=n-3;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\tE[u].push_back(v);\n\t\tE[v].push_back(u);\n\t}\n\tfor(int i=2;i<n;++i)E[i].push_back(i-1),E[i].push_back(i+1);\n\tE[1].push_back(2);E[1].push_back(n);\n\tE[n].push_back(1);E[n].push_back(n-1);\n\tfor(int i=1;i<=n;++i)sort(E[i].begin(),E[i].end());\n\tfor(int i=0,l=E[n].size();i<l-1;++i)Divide(rt[i],0,E[n][i],E[n][i+1]);\n\tint SS=0;\n\tfor(int i=0,l=E[n].size();i<l-1;++i)Ans=1ll*Ans*Merge(SS,sz[rt[i]])%MOD,SS+=sz[rt[i]];\n\tint cnt=n-1-E[n].size();\n\tif(!W)printf(\"%d\\n\",cnt);\n\telse printf(\"%d %d\\n\",cnt,Ans);\n\tint Q=read();\n\twhile(Q--)\n\t{\n\t\tint a=read(),b=read();if(b<a)swap(a,b);\n\t\tint p=M[make_pair(a,b)];\n\t\tint pcnt=cnt-(fa[p]?0:1);\n\t\tif(!W){printf(\"%d\\n\",pcnt);continue;}\n\t\telse printf(\"%d \",pcnt);\n\t\tint pans=Ans;\n\t\tif(fa[p])\n\t\t{\n\t\t\tint f=fa[p],k=ch[f][1]==p;\n\t\t\tpans=1ll*pans*InvMerge(sz[ch[p][0]],sz[ch[p][1]])%MOD;\n\t\t\tpans=1ll*pans*InvMerge(sz[ch[f][0]],sz[ch[f][1]])%MOD;\n\t\t\tpans=1ll*pans*Merge(sz[ch[f][k^1]],sz[ch[p][k^1]])%MOD;\n\t\t\tpans=1ll*pans*Merge(sz[f]-sz[p]+sz[ch[p][k^1]],sz[ch[p][k]])%MOD;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpans=1ll*pans*InvMerge(sz[ch[p][0]],sz[ch[p][1]])%MOD;\n\t\t\tpans=1ll*pans*InvMerge(SS-sz[p],sz[p])%MOD;\n\t\t\tpans=1ll*pans*Merge(SS-sz[p],sz[ch[p][0]])%MOD;\n\t\t\tpans=1ll*pans*Merge(SS-sz[p]+sz[ch[p][0]],sz[ch[p][1]])%MOD;\n\t\t}\n\t\tprintf(\"%d\\n\",pans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554690271,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5288 \u3010[HNOI2019]\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "# HNOI2019 \u591a\u8fb9\u5f62 polygon\n\n---\n\n\u56e0\u4e3a\u662f\u4ececnblogs\u8d34\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u56fe\u4f1a\u6302\uff0c\u8bf7\u53bb\u539f\u5730\u5740\u770bhttps://www.cnblogs.com/xzz_233/p/10672208.html\n\nhttps://www.luogu.org/problemnew/show/P5288\n\n\u8fd9\u9898\u956a\u554a\u3002\u3002\u3002\n\n\u9996\u5148\u5806\u7ed3\u8bba\uff1a\n\n\u663e\u7136\u7ec8\u6b62\u72b6\u6001\u4e00\u5b9a\u662f\u6240\u6709\u8fb9\u90fd\u8fde\u5411n\u4e86\n\n\u6839\u636e\u6837\u4f8b\u53ca\u6253\u8868\u731c\u4e2a\u7ed3\u8bba\uff0c\u6bcf\u4e00\u6b65\u4e00\u5b9a\u53ef\u4ee5\u65b0\u8fde\u4e00\u6761\u5230n\u7684\u8fb9\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u4e5f\u5f88\u597d\u8bc1\n\n\u7136\u540e\u53ef\u4ee5\u628a\u591a\u8fb9\u5f62\u5206\u6210\u82e5\u5e72\u533a\u95f4\uff0c\u8fd9\u4e9b\u533a\u95f4\u5f62\u6210\u4e00\u68f5\u6811\u3002\u5177\u4f53\u5212\u5206\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7528\u4e00\u4e9b\u73b0\u6709\u7684\u70b9\u548c\u4e2d\u95f4\u6240\u6709\u8fb9\u6784\u6210\u7684\u591a\u8fb9\u5f62\u7f29\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e9b\u70b9\u8981\u6ee1\u8db3\uff1a\u7f16\u53f7\u8fde\u7eed\uff0c\u548c\u53ea\u6709\u7f16\u53f7\u6700\u5c0f\u6700\u5927\u7684\u70b9\u4e0en\u6709\u8fde\u8fb9\u3002\u6bd4\u5982\u6837\u4f8b\u4e2d[1,3],[3,5],[1,5]\u3002\n\n\u5de6\u53f3\u7aef\u70b9\u5bf9\u5e94\u7f16\u53f7\u6700\u5c0f\u6700\u5927\u7684\u70b9\uff0c\u7136\u540e\u8fd9\u4e9b\u533a\u95f4\u53ef\u4ee5\u6839\u636e\u5305\u542b\u5173\u7cfb\u8fde\u6210\u4e00\u68f5\u6811\uff0c\u800c\u4e14\u8fd9\u68f5\u6811\u9664\u4e86\u6839\u90fd\u662f\u4e8c\u53c9\u7684\u3002\u4ee3\u7801\u53ef\u4ee5\u6a21\u62df\n\n\u7136\u540e\u6bcf\u4e00\u6b65\u4f1a\u65b0\u8fde\u4e00\u6761\u5230n\u7684\u8fb9\uff0c\u5bf9\u5e94\u5230\u533a\u95f4\u4e0a\uff0c\u4f1a\u628a\u5f53\u524d\u533a\u95f4\u5206\u5f00\u6210\u56fa\u5b9a\u7684\uff0c\u4e92\u4e0d\u5e72\u6270\u7684\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u53d1\u73b0\u8fd9\u5c31\u662f\u4e2a\u88f8\u7684dp\u662f\u5427\uff0c$f[l][r]$\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u7684\u65b9\u6848\u6570\uff0c\u73b0\u5728\u7403\u51fa\u4e86\u8fd9\u4e2adp\uff0c\u7b2c1\u95ee\u5c31\u89e3\u51b3\u4e86\n\n\u5f00\u59cb\u505a\u7b2c\u4e8c\u95ee\u3002\u7b2c\u4e8c\u95ee\u505a\u4e86\u4e00\u4e2a\u53d8\u6362\uff0c\u5047\u8bbe\u662f\u5bf9$l,t,k,r$\u56db\u4e2a\u70b9\u8fdb\u884c$l,k$\u53d8\u6362\uff08\u819clk\uff09\uff0c\u800c\u4e14k!=n\uff0c\u90a3\u4e48\u7531\u4e0a\u9762\u77e5\u9053\u7b2c\u4e00\u95ee\u7b54\u6848\u4e0d\u4f1a\u53d8\uff0c\u800c\u4e14\u8fd9\u68f5\u6811\u7684\u5c40\u90e8\u4f1a\u8fd9\u6837\u53d8\u5316\uff1a\n\n![](https://img2018.cnblogs.com/blog/1117947/201904/1117947-20190408175116843-323451578.png)\n\n\u53d8\u6210\n\n![](https://img2018.cnblogs.com/blog/1117947/201904/1117947-20190408175100065-386152532.png)\n\n\u5206\u6790\u4e00\u6ce2\uff0c\u4e0b\u9762\u4e09\u4e2a\u53f6\u5b50\u90fd\u6ca1\u53d8\uff0c\u6240\u4ee5\u53d8\u7684\u53ea\u662f\u4e2d\u95f4\u4e58\u7684\u7ec4\u5408\u6570\u3002\u90a3\u4e48\u7167\u7740\u8fd9\u4e2a\u6811\uff0c\u7206\u7b97\u4e00\u6ce2\uff0c\u7b54\u6848\u662f\u539f\u7b54\u6848\u4e58$(C^{r-t-2}_{k-t-1}C^{r-l-2}_{t-l-1})\\cdot (C^{k-l-2}_{t-l-1}C^{r-l-2}_{r-k-1})^{-1}$\n\n\u6ce8\u610f\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u53d8\u6362\u7684k=n\u65f6\uff0c\u7b2c\u4e00\u95ee\u7b54\u6848-1\uff0c\u7b2c\u4e8c\u95ee\u7b54\u6848\u662f\u539f\u7b54\u6848\u4e58$C^{ans1}_{k-l-1}(C^{ans1-1}_{k-l-2})^{-1}$\uff0c\u53ef\u4ee5\u770b\u6210\u662f1\u53f7\u70b9\u6700\u540e\u5408\u5e76\u7684\u65f6\u5019\u6700\u540e\u5408\u5e76\u8fd9\u4e2a\u70b9\u5e76\u4e14\u5c11\u5408\u5e761\uff08ans1\u662f\u539f\u95ee\u9898\u7684\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define rg register\n#define vd void\n#define mod 1000000007\nil int gi(){\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch))f^=ch=='-',ch=getchar();\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return f?-x:x;\n}\nint n,x[100010],y[100010];\nint s[100010],m;\nstd::vector<int>G[100010];\nint L[100010],R[100010],ch[100010][2],cnt;\nstd::vector<int>ch0;\nil int build(int l,int r){\n    if(r-l<2)return 0;\n    ++cnt;L[cnt]=l,R[cnt]=r;\n    int ret=cnt,t=*--std::lower_bound(G[l].begin(),G[l].end(),r);\n    ch[ret][0]=build(l,t);\n    ch[ret][1]=build(t,r);\n    return ret;\n}\nint p[100010],ip[100010];\nil int C(int n,int m){\n    if(n<m)return 0;\n    return 1ll*p[n]*ip[m]%mod*ip[n-m]%mod;\n}\nil int invC(int n,int m){\n    if(n<m)return 0;\n    return 1ll*ip[n]*p[m]%mod*p[n-m]%mod;\n}\nint f[100010];\nil vd dp(int x){\n    if(!ch[x][0]&&!ch[x][1]){f[x]=1;return;}\n    if(!ch[x][0]||!ch[x][1]){dp(ch[x][0]|ch[x][1]);f[x]=f[ch[x][0]|ch[x][1]];return;}\n    dp(ch[x][0]),dp(ch[x][1]);\n    f[x]=1ll*f[ch[x][0]]*f[ch[x][1]]%mod*C(R[x]-L[x]-2,R[ch[x][0]]-L[ch[x][0]]-1)%mod;\n}\nint main(){\n// \tfreopen(\"polygon.in\",\"r\",stdin);\n// \tfreopen(\"polygon.out\",\"w\",stdout);\n    int W=gi();\n    n=gi();\n    int ans1=n-3;\n    for(int i=1;i<n;++i)G[i].push_back(i+1);G[1].push_back(n);\n    for(int i=1;i<=n-3;++i){\n        x[i]=gi(),y[i]=gi();\n        if(x[i]>y[i])std::swap(x[i],y[i]);\n        if(y[i]==n)--ans1,s[++m]=x[i];\n        G[x[i]].push_back(y[i]);\n    }\n    for(int i=1;i<=n;++i)std::sort(G[i].begin(),G[i].end());\n    int Q=gi();\n    s[++m]=1,s[++m]=n-1;\n    std::sort(s+1,s+m+1);\n    for(int i=1;i<m;++i)ch0.push_back(build(s[i],s[i+1]));\n    p[0]=1;ip[0]=1;\n    for(int i=1;i<=n;++i)p[i]=1ll*p[i-1]*i%mod;\n    ip[1]=1;for(int i=2;i<=n;++i)ip[i]=mod-1ll*ip[mod%i]*(mod/i)%mod;\n    for(int i=1;i<=n;++i)ip[i]=1ll*ip[i-1]*ip[i]%mod;\n    int ans=1,siz=0;\n    for(auto i:ch0)if(i)dp(i),ans=1ll*ans*C(siz+R[i]-L[i]-1,siz)%mod*f[i]%mod,siz+=R[i]-L[i]-1;\n    if(W)printf(\"%d %d\\n\",ans1,ans);\n    else printf(\"%d\\n\",ans1);\n    while(Q--){\n        int l=gi(),r,k=gi(),t;if(l>k)std::swap(l,k);\n        r=*std::upper_bound(G[l].begin(),G[l].end(),k);\n        t=*--std::lower_bound(G[l].begin(),G[l].end(),k);\n        if(r==n){\n            if(W)printf(\"%d %d\\n\",ans1-1,1ll*ans*invC(ans1,k-l-1)%mod*C(ans1-1,k-l-2)%mod);\n            else printf(\"%d\\n\",ans1-1);\n            continue;\n        }\n        if(W)printf(\"%d %d\\n\",ans1-(r==n),1ll*ans*invC(k-l-2,t-l-1)%mod*invC(r-l-2,r-k-1)%mod*C(r-t-2,k-t-1)%mod*C(r-l-2,t-l-1)%mod);\n        else printf(\"%d\\n\",ans1-(r==n));\n    }\n    return 0;\n}\n```",
        "postTime": 1554717727,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5288 \u3010[HNOI2019]\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P5288)\n\n### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/10946415.html)\n\n#### ~~HN\u7684\u9898\u76ee\u5c31\u662f\u6bd2\u7624~~\n\n#### \u6211\u4eec\u6709\u4ee5\u4e0b\u731c\u60f3\uff1a\n\n#### 1.\u6700\u540e\u6240\u6709\u7684\u7ebf\u90fd\u8fde\u5230\u4e86n\u53f7\u70b9\u4e0a\n\n#### 2.\u6700\u5c0f\u6b65\u6570\u5e94\u8be5\u4e3an-3-\u5df2\u7ecf\u8fde\u5230n\u53f7\u70b9\u7684\u7ebf\u6bb5\u6570\u91cf\n\n#### \u672c\u6765\u6709\u4e9b\u8fb9$(a_i,n)$\u4f1a\u5c06\u6574\u4e2a\u56fe\u5206\u5272\u6210\u5f88\u591a\u4e2a\u533a\u95f4\u3002\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4$[l,r]$\uff0c$l,r$\u4e4b\u95f4\u5fc5\u5b9a\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u5e76\u4e14\u4e00\u5b9a\u5b58\u5728\u70b9$mid$\u6709$(mid,l),mid(mid,r)$\u7684\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u73c2\u4ee5\u7528\u4e00\u6b21\u65cb\u8f6c\u4f7f\u5f97$(l,r)$\u53d8\u6210$(mid,n)$\uff0c\u8fd9\u6837\u8fd9\u4e2a\u533a\u95f4\u6709\u73c2\u4ee5\u5206\u6210\u4e24\u4e2a\u5b50\u533a\u95f4\uff0c\u73c2\u4ee5\u5efa\u51fa\u4e8c\u53c9\u6811\u3002\u4e00\u76f4\u5982\u6b64\uff0c\u76f4\u5230$r=l+1$\u4e3a\u6b62\u3002\u6211\u4eec\u73b0\u5728\u5c31\u8981\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u65b9\u6848\u6570\uff0c\u7236\u8282\u70b9\u7684\u65cb\u8f6c\u4e00\u5b9a\u5728\u5b50\u8282\u70b9\u7684\u65cb\u8f6c\u4e4b\u524d\uff0c\u4f46\u5b50\u8282\u70b9\u95f4\u4e92\u4e0d\u5e72\u6270\uff0c\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u63d2\u5165\u6392\u5e8f\u65b9\u6848\u6570\u7684\u95ee\u9898\uff0c\u660e\u663e\u4e24\u4e2a\u5b50\u6811\u987a\u5e8f\u5f71\u54cd\u5c31\u662f\u628a\u7b54\u6848\u4e58\u4e0a$\\frac{(size(ls)+size(rs))!}{size(ls)!size(rs)!}$\n\n#### \u6700\u540e\u8981\u8bb0\u5f97\u4e0d\u540c\u533a\u95f4\u4e4b\u95f4\u4e5f\u6709\u5408\u5e76\u7684\u8d21\u732e\n\n#### \u6211\u4eec\u73b0\u5728\u8981\u8003\u8651\u4fee\u6539\uff1a\n\n#### 1.$(a,c)$\u65cb\u8f6c\u540e\u6b63\u597d\u4e3a$(b,n)$\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06\u4e00\u68f5\u6811\u6839\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u6811\u4f5c\u4e3a\u65b0\u7684\u6811\uff0c\u5e76\u4e14\u5220\u9664\u539f\u6765\u7684\u6839\u8282\u70b9\uff0c\u5bf9\u6700\u5c0f\u6b65\u6570\u7684\u5f71\u54cd\u4e3a-1\uff0c\u5bf9\u6b21\u6570\u7684\u5f71\u54cd\u4e5f\u5f88\u7b80\u5355\uff08\u6b64\u5904\u5c31\u4e0d\u8d58\u8ff0\uff0c\u4e0d\u4f1a\u7684\u73c2\u4ee5\u770b\u4ee3\u7801\uff09\n\n#### 2.$(a,c)$\u65cb\u8f6c\u540e\u53d8\u6210\u4e86$(b,d) (d \\neq n)$\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u50cfsplay\u7684rotate\uff0c\u5177\u4f53\u89c1\u56fe\u7247\uff0c\u5bf9\u6700\u5c0f\u6b65\u6570\u6ca1\u6709\u5f71\u54cd\uff0c\u5bf9\u6b21\u6570\u7684\u5f71\u54cd\u89c1\u4ee3\u7801\n\n#### ![](https://files-cdn.cnblogs.com/files/yzhang-rp-inf/hnoi1.gif)\n\n#### ![](https://files-cdn.cnblogs.com/files/yzhang-rp-inf/hnoi2.gif)\n\n```cpp\n#include <bits/stdc++.h>\n#define N 100005\n#define mod 1000000007 \n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register int x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\ninline int fastpow(register int a,register int b)\n{\n\tint res=1;\n\twhile(b)\n\t{\n\t\tif(b&1)\n\t\t\tres=1ll*res*a%mod;\n\t\ta=1ll*a*a%mod;\n\t\tb>>=1;\n\t}\n\treturn res;\n}\nvector<int> E[N];\ninline void add(register int u,register int v)\n{\n\tE[u].push_back(v),E[v].push_back(u);\n}\nint W,n,m;\nint fac[N],invf[N];\nint fa[N],ls[N],rs[N],sz[N];\nint tot=0,sum=0,ans=1;\nmap<pair<int,int>,int> M;\ninline int calc(register int n,register int m)\n{\n\treturn 1ll*fac[n+m]*invf[n]%mod*invf[m]%mod;\n}\ninline int calcinv(register int n,register int m)\n{\n\treturn 1ll*invf[n+m]*fac[n]%mod*fac[m]%mod;\n}\ninline void dfs(register int &x,register int l,register int r,register int f)\n{\n\tif(l+1==r)\n\t\treturn;\n\tx=++tot;\n\tM[make_pair(l,r)]=x;\n\tfa[x]=f;\n\tint mid=*(--lower_bound(E[l].begin(),E[l].end(),r));\n\tdfs(ls[x],l,mid,x),dfs(rs[x],mid,r,x);\n\tsz[x]=sz[ls[x]]+sz[rs[x]]+1;\n\tans=1ll*ans*calc(sz[ls[x]],sz[rs[x]])%mod;\n}\nint main()\n{\n\tfac[0]=1;\n\tfor(register int i=1;i<N;++i)\n\t\tfac[i]=1ll*fac[i-1]*i%mod;\n\tinvf[N-1]=fastpow(fac[N-1],mod-2);\n\tfor(register int i=N-1;i;--i)\n\t\tinvf[i-1]=1ll*invf[i]*i%mod;\n\tW=read(),n=read();\n\tfor(register int i=1;i<n;++i)\n\t\tadd(i,i+1);\n\tadd(1,n);\n\tfor(register int i=1;i<=n-3;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t}\n\tfor(register int i=1;i<=n;++i)\n\t\tsort(E[i].begin(),E[i].end());\n\tfor(register int i=0;i<E[n].size()-1;++i)\n\t{\n\t\tint x=0;\n\t\tdfs(x,E[n][i],E[n][i+1],0);\n\t\tans=1ll*ans*calc(sum,sz[x])%mod;\n\t\tsum+=sz[x];\n\t}\n\tif(W)\n\t\twrite(sum),putchar(' '),write(ans),puts(\"\");\n\telse\n\t\twrite(sum),puts(\"\");\n\tm=read();\n\twhile(m--)\n\t{\n\t\tint a=read(),b=read(),x=M[make_pair(a,b)];\n\t\tif(fa[x])\n\t\t{\n\t\t\tint f=fa[x],now=ans;\n\t\t\tnow=1ll*now*calcinv(sz[ls[x]],sz[rs[x]])%mod;\n\t\t\tnow=1ll*now*calcinv(sz[ls[f]],sz[rs[f]])%mod;\n\t\t\tnow=1ll*now*calc(sz[rs[x]],sz[rs[f]])%mod;\n\t\t\tnow=1ll*now*calc(sz[ls[x]],sz[rs[x]]+sz[rs[f]]+1)%mod;\n\t\t\tif(W)\n\t\t\t\twrite(sum),putchar(' '),write(now),puts(\"\");\n\t\t\telse\n\t\t\t\twrite(sum),puts(\"\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint now=ans;\n\t\t\tnow=1ll*now*calcinv(sz[ls[x]],sz[rs[x]])%mod;\n\t\t\tnow=1ll*now*calcinv(sum-sz[x],sz[x])%mod;\n\t\t\tnow=1ll*now*calc(sum-sz[x],sz[ls[x]])%mod;\n\t\t\tnow=1ll*now*calc(sum-sz[x]+sz[ls[x]],sz[rs[x]])%mod;\n\t\t\tif(W)\n\t\t\t\twrite(sum-1),putchar(' '),write(now),puts(\"\");\n\t\t\telse\n\t\t\t\twrite(sum-1),puts(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1559139402,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5288 \u3010[HNOI2019]\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "[my submission on loj.ac](https://loj.ac/submission/790203)\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u65e0\u6cd5\u7ee7\u7eed\u65cb\u8f6c\u7684\u591a\u8fb9\u5f62\uff0c\u6211\u4eec\u8003\u8651\u5b83\u4e0a\u9762\u7684\u4e00\u4e2a\u56db\u8fb9\u5f62\uff0c\u5176\u9876\u70b9\u4f9d\u6b21\u4e3a $A,B,C,D$\uff08$O$ \u70b9\u8868\u793a\u591a\u8fb9\u5f62\u7684 $1$ \u53f7\u9876\u70b9\uff09\uff1a\n\n![0.jpg](https://i.loli.net/2020/04/18/rAujCUZgbMqxNYH.jpg)\n\n\u4ece $C$ \u5230 $D$ \u7684\u8fd9\u4e00\u6bb5\uff1a\n\n- \u5047\u8bbe\u4ee5 $CD$ \u4e3a\u4e00\u8fb9\u7684\u53e6\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e3a $\\triangle CDT_1$\uff08\u663e\u7136 $T_1\\in (C,D)$\uff0c$CD$ \u65e0\u6cd5\u518d\u65cb\u8f6c\uff09\n- \u4e0d\u53ef\u80fd\u6709\u4ee5 $T_1C$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle CDT_1$ \u7684\u4e09\u89d2\u5f62\uff08\u5426\u5219 $CT_1$ \u5c06\u53ef\u4ee5\u65cb\u8f6c\uff09\n- \u53ef\u4ee5\u6709\u4ee5 $T_1D$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle CDT_1$ \u7684\u4e09\u89d2\u5f62\uff0c\u8bbe\u4e3a $\\triangle DT_1T_2$\n- \u4e0d\u53ef\u80fd\u6709\u4ee5 $T_2T_1$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle DT_1T_2$ \u7684\u4e09\u89d2\u5f62\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u4ee5 $DT_1$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle DT_1T_2$ \u7684\u4e09\u89d2\u5f62\uff0c\u8bbe\u4e3a $\\triangle DT_2T_3$\n- \u2026\u2026\n\n\u4ece $B$ \u5230 $D$ \u8fd9\u4e00\u6bb5\uff1a\u4e0d\u53ef\u80fd\u6709\u4ee5 $BC$ \u4e3a\u8fb9\u4e14\u4e0d\u540c\u4e8e $\\triangle BCD$ \u7684\u4e09\u89d2\u5f62\uff0c\u5426\u5219 $BC$ \u5c06\u53ef\u4ee5\u65cb\u8f6c\u3002\u4ece $A$ \u5230 $B$ \u7684\u8fd9\u4e00\u6bb5\u540c\u7406\u3002\n\n\u4ece $D$ \u5230 $A$ \u7684\u8fd9\u4e00\u6bb5\uff1a\n\n- \u5982\u679c\u6709\u4ee5 $AD$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle ABD$ \u7684\u4e09\u89d2\u5f62\uff0c\u8bbe\u4e3a $\\triangle ADP_1$\uff1a\n  -  $P_1\\in (D,n]$\uff0c\u90a3\u4e48 $AD$ \u5c31\u53ef\u4ee5\u65cb\u8f6c\u4e86\n  -  \u5982\u679c $P_1\\in [1, A-1)$ \u5219\u662f\u5408\u6cd5\u7684\n- \u4e0d\u53ef\u80fd\u6709\u4ee5 $P_1A$ \u4e3a\u4e00\u8fb9\u5f02\u4e8e $\\triangle AP_1D$ \u7684\u4e09\u89d2\u5f62\uff0c\u56e0\u4e3a\u8fd9\u6837 $P_1A$ \u5c31\u53ef\u4ee5\u65cb\u8f6c\u4e86\n- \u53ef\u4ee5\u6709\u4ee5 $P_1D$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle AP_1D$ \u4e14\u53e6\u4e00\u9876\u70b9 $\\in [1,P_1)$\u7684\u4e09\u89d2\u5f62\uff0c\u8bbe\u4e3a $\\triangle DP_1P_2(P_2 \\in [1,P_1))$\n- \u4e0d\u53ef\u80fd\u6709\u4ee5 $P_1P_2$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle DP_1P_2$ \u7684\u4e09\u89d2\u5f62\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u4ee5 $DP_2$ \u4e3a\u4e00\u8fb9\u7684\u5f02\u4e8e $\\triangle DP_1P_2$ \u4e14\u53e6\u4e00\u9876\u70b9\u4f4d\u4e8e $[1,P_2)$ \u7684\u4e09\u89d2\u5f62\uff0c\u8bbe\u4e3a $\\triangle DP_2P_3$\n- \u2026\u2026\n\n![1.jpg](https://i.loli.net/2020/04/18/91LQVh7Tgq8PREG.jpg)\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u4e2a\u591a\u8fb9\u5f62\u5982\u679c\u65e0\u6cd5\u7ee7\u7eed\u65cb\u8f6c\uff0c\u90a3\u4e48\u9664\u4e86 $n$ \u53f7\u70b9\u4ee5\u5916\u7684\u6bcf\u4e2a\u70b9\u5fc5\u987b\u76f4\u63a5\u548c $n$ \u53f7\u70b9\u76f8\u8fde\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u53d1\u73b0\u5b83\u4e0d\u76f4\u63a5\u8fde\u63a5 $n$ \u548c\u5176\u5b83\u70b9\u7684\u8fb9\u4f1a\u5f62\u6210\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff08\u5b9e\u9645\u4e0a\u662f\u4e2a\u4e8c\u53c9\u6811\u68ee\u6797\uff09\uff1a\n\n![2.jpg](https://i.loli.net/2020/04/18/JPl9guIyODTzkfV.jpg)\n\n![3.jpg](https://i.loli.net/2020/04/18/1DrkNOBKEcub2Pp.jpg)\n\n\u6700\u5c0f\u7684\u64cd\u4f5c\u6b21\u6570\u5c31\u662f\u6811\u4e0a\u7684\u70b9\u6570\uff08\u5373\u591a\u8fb9\u5f62\u4e2d\u4e0d\u76f4\u63a5\u8fde\u63a5 $n$ \u548c\u5176\u5b83\u70b9\u7684\u8fb9\u6570\uff09\uff1b\u64cd\u4f5c\u7684\u65b9\u6848\u6570\u4e5f\u5c31\u662f\u5c06\u6811\u4e2d\u7684\u70b9\u6392\u5217\u4f7f\u5f97\u7956\u5148\u603b\u662f\u5728\u81ea\u5df1\u4e4b\u524d\u51fa\u73b0\u7684\u65b9\u6848\u6570\u3002\u4e00\u4e2a\u7ecf\u5178\u7ed3\u8bba\u662f\u8fd9\u6837\u7684\u6392\u5217\u65b9\u6848\u6570\u4e3a\u70b9\u6570\u7684\u9636\u4e58\u9664\u4ee5\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u8003\u8651\u5728\u521d\u59cb\u72b6\u6001\u4e0a\u8fdb\u884c\u4e00\u6b21\u65cb\u8f6c\u4f1a\u9020\u6210\u4ec0\u4e48\u6837\u7684\u5f71\u54cd\uff1a\n\n![4.jpg](https://i.loli.net/2020/04/18/3IOwP9UaCG6qntv.jpg)\n\n\u53d1\u73b0\u53ea\u6709\u88ab\u65cb\u8f6c\u7684\u90a3\u6761\u8fb9\u7684\u5b50\u6811\u5927\u5c0f\u6539\u53d8\u4e86\u3002\u9884\u5904\u7406\u51fa\u521d\u59cb\u72b6\u6001\u7684\u64cd\u4f5c\u65b9\u6848\u6570\uff0c\u5c31\u80fd\u5feb\u901f\u5730\u5f97\u5230\u65cb\u8f6c\u4e4b\u540e\u7684\u7b54\u6848\u3002\u6ce8\u610f\u7279\u5224\u88ab\u65cb\u8f6c\u7684\u8fb9\u4e3a\u6839\u7684\u60c5\u51b5\u3002",
        "postTime": 1587189863,
        "uid": 40534,
        "name": "zhongyuwei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5288 \u3010[HNOI2019]\u591a\u8fb9\u5f62\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u5efa\u8bae\u628a\u9898\u76ee\u4ed4\u7ec6\u8bfb\u4e00\u904d\uff0c~~\u6211\u7edd\u5bf9\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u770b\u9519\u4e86\u9898\u610f\u3002~~\n\n## \u601d\u8def\n\n\u6211\u4eec\u8003\u8651 $w = 0, m = 0$ \u7684\u60c5\u51b5\u4e0b\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u9898\u3002\n\n\u7531\u4e8e\u9898\u76ee\u8981\u6c42 $1 < a < b < c < d \\le n$\uff0c\u89c2\u5bdf\u6837\u4f8b\u89e3\u91ca\u5373\u53ef\u53d1\u73b0\u6700\u7ec8\u72b6\u6001\u4e00\u5b9a\u662f\u90fd\u8fde\u5411 $n$ \u7684\u3002\n\n\u8003\u8651\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u4e00\u5b9a\u662f\u6bcf\u6b21\u90fd\u628a\u4e00\u6761\u4e0d\u8fde\u5411 $n$ \u7684\u8fb9\u8fde\u5411 $n$\uff0c\u8fd9\u4e00\u5b9a\u662f\u6700\u4f18\u4e14\u7b26\u5408\u6761\u4ef6\u7684\u3002\u6240\u4ee5\u8fd9\u4e00\u95ee\u7684\u7b54\u6848\u5373\u4e3a $n - 1 - p$\uff0c$p$ \u4e3a\u5df2\u8fde\u5411 $n$ \u7684\u70b9\u6570\uff08\u7b97 $1$ \u548c $n - 1$\uff09\uff0c$1$ \u8868\u793a\u53bb\u9664 $n$ \u672c\u8eab\u3002\u8fd9\u4e2a\u4e1c\u897f\u5f88\u597d\u641e\uff0c\u7528\u4e2a vector \u5b58\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u8003\u8651 $w = 1, m = 0$ \u7684\u60c5\u51b5\u3002\n\n\u8bbe\u4e0e $n$ \u5df2\u7ecf\u76f8\u8fde\u7684\u70b9\u4e3a $a_1, a_2, ..., a_k$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u9664\u4e86 $n$ \u4ee5\u5916\u7684\u70b9\u5206\u4e3a\u82e5\u5e72\u4e2a\u533a\u95f4\uff1a$[1, a_1], [a_1, a_2], ... [a_k, n - 1]$\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u82e5\u5e72\u4e2a\u533a\u95f4\u5185\u9664\u4e86\u4e24\u8fb9\u5916\uff0c\u5176\u4ed6\u4efb\u4f55\u70b9\u90fd\u6ca1\u6709\u8fde\u5411 $n$\uff0c\u800c\u4e14\u540c\u65f6\u53d1\u73b0\u4e00\u4e2a\u4f18\u7f8e\u7684\u6027\u8d28\uff0c\u60f3\u8ba9\u4efb\u610f\u4e00\u4e2a\u533a\u95f4\u6ee1\u8db3\u6700\u7ec8\u72b6\u6001\uff0c\u90a3\u4e48\u64cd\u4f5c\u7684 $a, b, c, d$ \u4e00\u5b9a\u90fd\u662f\u5728\u533a\u95f4\u5185\u7684\uff08\u9664\u4e86 $d$ \u6709\u53ef\u80fd\u662f $n$ \u5916\uff09\u3002\n\n\u6211\u4eec\u8bbe\u7b2c $i$ \u4e2a\u533a\u95f4\u7684\u6240\u6709\u65cb\u8f6c\u64cd\u4f5c\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a $siz_i$\uff0c\u90a3\u4e48 $[a_{i - 1}, a_i], [a_i, a_{i + 1}]$ \u8fd9\u4e24\u4e2a\u533a\u95f4\u90fd\u8fbe\u5230\u6700\u7ec8\u72b6\u6001\u7684\u65b9\u6848\u6570\u4fbf\u4e3a $C_{siz_i + siz_{i + 1}}^{siz_i}$\u3002\u8fd9\u91cc\u8981\u4ed4\u7ec6\u60f3\u60f3\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $siz_i$ \u5c31\u884c\u4e86\uff0c\u8003\u8651\u600e\u4e48\u6c42\u3002\u6211\u4eec\u53ef\u4ee5\u628a $[a_{i - 1}, a_i]$ \u4e0d\u65ad\u5206\u6cbb\u4e0b\u53bb\uff0c\u5f62\u6210\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u6b64\u65f6 $siz_i = siz_l + siz_r + 1$\uff0c\u4f46\u662f\u6211\u4eec\u8981\u628a $[a_{i - 1}, a_i]$ \u5206\u6210\u4e24\u4e2a\u4ec0\u4e48\u533a\u95f4\u5462\uff1f\u6216\u8005\u8bf4\uff0c$mid$ \u662f\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u662f\u7b2c\u4e00\u4e2a**\u5927\u4e8e** $l$ \u4e14\u4e0e $r$ \u8fde\u8fb9\u7684\u70b9\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u628a\u8fd9\u6761\u8fb9\u7ed9\u65ad\u5f00\uff0c\u7136\u540e\u518d\u4e0e $n$ \u70b9\u8fde\u63a5\uff0c\u56e0\u4e3a\u5982\u679c\u6362\u505a\u5176\u4ed6\u7684\u8fb9\uff0c\u5219\u4f1a\u4ea7\u751f\u4ea4\u53c9\u7684\u73b0\u8c61\uff08\u53ef\u4ee5\u81ea\u5df1\u52a8\u624b\u753b\u56fe\uff09\u3002\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u628a $[a_{i - 1}, a_i]$ \u5206\u6210 $[a_{i - 1}, mid], [mid, a_i]$\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u5206\u6210\u4e86\u4e8c\u53c9\u6811\uff0c\u6700\u7ec8\u7684\u65b9\u6848\u6570\u5e94\u8be5\u8981\u4e58\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u65b9\u6848\u6570\u3002\u6bcf\u4e2a\u8282\u70b9\u7684\u65b9\u6848\u6570\u5219\u53ef\u4ee5\u7531\u5b50\u8282\u70b9\u7684 $siz$ \u6309\u7167\u4e0a\u8ff0\u65b9\u5f0f\u8ba1\u7b97\u3002~~\u6211\u5e94\u8be5\u8bf4\u6e05\u695a\u4e86\u5427\u3002~~\n\n\u81f3\u4e8e\u6c42\u51fa $mid$\uff0c\u7528\u4e8c\u5206\u5c31 OK \u4e86\u3002\n\n\u7136\u540e\u8003\u8651 $w = 0, m > 0$ \u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u6b64\u65f6\u6240\u5728\u533a\u95f4\u6709\u7236\u4eb2\uff08\u4e0d\u96be\u770b\u51fa\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u662f\u67d0\u4e00\u4e2a\u533a\u95f4\u7684\u8fb9\u754c\uff09\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u770b\u63d0\u9898\u89e3\u533a\u7684\u56fe\uff0c\u53d1\u73b0\u5176\u5b9e\u5bf9\u4e8e\u6574\u68f5\u6811\u800c\u8a00\uff0c\u7c7b\u4f3c\u4e8e\u5e73\u8861\u6811\u7684\u65cb\u8f6c\u64cd\u4f5c\uff0c\u5e76\u6ca1\u6709\u6539\u53d8 $siz$ \u7684\u7ed3\u679c\uff0c\u6216\u8005\u8bf4\uff0c\u5e76\u4e0d\u5bf9\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u5982\u679c\u6ca1\u6709\u7236\u4eb2\uff0c\u610f\u5473\u7740\u8fd9\u662f\u4e0a\u8ff0\u7684\u5927\u533a\u95f4\uff0c\u6b64\u65f6\u5982\u679c\u65cb\u8f6c\uff0c\u5c31\u4f1a\u628a\u672c\u6765\u8fde\u5411 $n$ \u7684\u8fb9\u6539\u4e3a\u4e0d\u8fde\u5411\u4e86\uff0c\u6240\u4ee5\u7b54\u6848\u5f97 $ - 1$\u3002\u5c31\u89e3\u51b3\u5b8c\u4e86\u3002\n\n\u6700\u540e\u8003\u8651 $w = 1, m > 0$ \u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21\u65cb\u8f6c\u64cd\u4f5c\u662f\u5e76\u4e0d\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u8d21\u732e\u90fd\u6709\u5f71\u54cd\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u5bf9\u65cb\u8f6c\u4f4d\u7f6e\u6709\u5f71\u54cd\u7684\u8282\u70b9\u4ea7\u751f\u4e0d\u540c\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u8282\u70b9\u7684\u8d21\u732e\u5148\u7ed9\u9664\u6389\uff0c\u7136\u540e\u518d\u4e58\u4e0a\u65b0\u7684\u8d21\u732e\u5c31 OK \u4e86\u3002\u4e00\u6837\u7684\u50cf\u7b2c\u4e09\u79cd\u60c5\u51b5\u5206\u4e24\u7c7b\u8ba8\u8bba\u3002\n\n\u6700\u540e\u9898\u89e3\u63d0\u9192\u60a8\uff1a\n\n- \u591a\u6d4b\u4e0d\u5f00 $tmp$\uff0c\u4eb2\u4eba\u4e24\u884c\u6cea\u3002\n- \u6ca1\u6709\u5224\u8fb9\u754c\uff0c\u4eb2\u4eba\u4e24\u884c\u6cea\u3002\n- \u6ca1\u6709\u5f00 long long\uff0c\u4eb2\u4eba\u4e24\u884c\u6cea\u3002",
        "postTime": 1684215698,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "P5288 [HNOI2019]\u591a\u8fb9\u5f62 \u9898\u89e3"
    },
    {
        "content": "\u4e24\u5929\u4e0b\u6765\u559c\u95fb\u4e50\u89c1\u7684\u7b7e\u5230\u9898\n\n\u53ea\u8981\u4e09\u9053\u9898\u770b\u4e0b\u6765\u5e94\u8be5\u80fd\u770b\u51fa\u6765\u8fd9\u4e2aT3\u662f\u6700\u53ef\u5199\u7684\u5427\n\n\u7ec8\u6b62\u72b6\u6001\u663e\u7136\u662f\u6240\u6709\u8fb9\u4e3a $(i,n)$\n\n\u7b2c\u4e00\u95ee\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u6211\u4eec\u663e\u7136\u6bcf\u6b21\u53ea\u80fd\u5c06\u4e00\u6761\u8fb9\u53d8\u6210 $(i,n)$ \u5e76\u4e14\u6211\u4eec\u6bcf\u6b21\u90fd\u80fd\u505a\u5230\n\n\u5c06\u6bcf\u6761\u76f4\u7ebf\u7528\u4e8c\u5143\u7ec4$(l,r)$\u6765\u8868\u793a\uff0c\u82e5\u76f4\u7ebf $a$ \u88ab $b$ \u5168\u5305\u542b\uff0c\u4e14 $b_r$ \u4e0d\u4e3a $n$\n\n\u663e\u7136\u9700\u8981\u5148\u64cd\u4f5c $b$ \u624d\u80fd\u64cd\u4f5c $a$\n\n\u4e8e\u662f\u6240\u6709\u7684\u76f4\u7ebf\u5c31\u6784\u6210\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\n\u5047\u8bbe\u6709 $n$ \u4e2a\u70b9\uff0c$sz_i$ \u8868\u793a\u5b50\u6811 $i$ \u7684\u5927\u5c0f\n\n$ans=\\prod_{i=1}^nC_{sz_{ls}+sz_{rs}}^{sz_{ls}}$\n\n\u753b\u4e00\u4e0b\u5bb9\u6613\u53d1\u73b0\u4fee\u6539\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c $rorate$ \u7684\u8fc7\u7a0b\n\n\u753b\u4e00\u4e0b $rorate$ \u5de6\u5b50\u6811\u7684\u60c5\u51b5\uff1a\n\n![](https://img-blog.csdnimg.cn/20190409153628437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExMDM1NzE5NDMw,size_16,color_FFFFFF,t_70)\n\n\u53d8\u6210\uff1a\n![](https://img-blog.csdnimg.cn/20190409154002151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExMDM1NzE5NDMw,size_16,color_FFFFFF,t_70)\n\n\u53ea\u8981\u66f4\u65b0\u4e00\u4e0b$A,B$\u7684\u7b54\u6848\u5c31\u884c\u4e86\n\n\u5982\u679c\u4f60\u5199\u7684\u65f6\u5019\u628a $(i,n)$ \u4e5f\u52a0\u5230\u6811\u91cc\u9762\u7684\u8bdd\uff0c\u5f97\u6ce8\u610f $rorate$ \u7684\u65f6\u5019 $(i,n)\\rightarrow(i,j)$ \u548c $(i,j)\\rightarrow(i,n)$ \u7684\u60c5\u51b5\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace io {\n\tconst int SIZE = (1 << 21) + 1;\n\tchar ibuf[SIZE], *iS, *iT, obuf[SIZE], *oS = obuf, *oT = oS + SIZE - 1, c, qu[55]; int f, qr;\n\t// getchar\n\t#define gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\t// print the remaining part\n\tinline void flush () {\n\t\tfwrite (obuf, 1, oS - obuf, stdout);\n\t\toS = obuf;\n\t}\n\t// putchar\n\tinline void putc (char x) {\n\t\t*oS ++ = x;\n\t\tif (oS == oT) flush ();\n\t}\n\t// input a signed integer\n\ttemplate <class I>\n\tinline void gi (I &x) {\n\t\tfor (f = 1, c = gc(); c < '0' || c > '9'; c = gc()) if (c == '-') f = -1;\n\t\tfor (x = 0; c <= '9' && c >= '0'; c = gc()) x = x * 10 + (c & 15); x *= f;\n\t}\n\t// print a signed integer\n\ttemplate <class I>\n\tinline void print (I &x) {\n\t\tif (!x) putc ('0'); if (x < 0) putc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10;\n\t\twhile (qr) putc (qu[qr --]);\n\t}\n\t//no need to call flush at the end manually!\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n}\nusing io :: gi;\nusing io :: putc;\nusing io :: print;\n#define rep(i,j,k) for(int i = j;i <= k;++i)\n#define repp(i,j,k) for(int i = j;i >= k;--i)\n#define ll long long\n#define fr first\n#define se second\n#define ls ch[rt][0]\n#define rs ch[rt][1]\n#define mp make_pair\n#define pb push_back\n#define SZ(x) ((int)(x.size()))\n#define hash Hash\nconst int p = 1e9+7;\nint fk,n,tot,fa[101000];\nint fac[101000],inv[101000],sz[101000];\nint ans,cnt;\nint ch[101000][2],up[101000],down[101000];\npair<int,int>a[101000];\nset<int>L[101000],R[101000];\nset<int>::iterator it;\nmap< pair<int,int> ,int>hash;\ninline int mul(int a,int b){return 1ll*a*b%p;}\ninline int ksm(int a,int x){int now = 1;for(;x;x>>=1,a=1ll*a*a%p) if(x&1) now = 1ll*now*a%p;return now;}\ninline int C(int x,int y) {return (y<0||y>x) ? 0 : (mul( fac[x] , mul( inv[y] , inv[x-y] ) ));}\nint division(int l,int r) {\n\tint rt = ++tot,x,y,sl=0,sr=0; hash[mp(l,r)] = tot;\n\tcnt += r != n; a[rt] = mp(l,r); up[rt] = down[rt] = 1;\n\tit = L[l].end();\n\tif(it != L[l].begin()) {\n\t\tit--; x = l; y = *it;\n\t\tL[x].erase(L[x].lower_bound(y));\n\t\tR[y].erase(R[y].lower_bound(x));\n\t\tls = division(x,y);\n\t\tsl = sz[ls]; fa[ls] = rt;\n\t}\n\tit = R[r].begin();\n\tif(it != R[r].end()) {\n\t\ty = r; x = *it;\n\t\tL[x].erase(L[x].lower_bound(y));\n\t\tR[y].erase(R[y].lower_bound(x));\n\t\trs = division(x,y);\n\t\tsr = sz[rs]; fa[rs] = rt;\n\t}\n\tsz[rt] = sl+sr+(r!=n);\n\tint res = C(sl+sr,sl),inv = ksm(res,p-2);\n\tans = mul( ans , res );\n\tup[ls] = mul( inv , C(sl+sr+1,sl+1) );   up[rs] = mul( inv , C(sl+sr+1,sr+1) );\n\tdown[ls] = mul( inv , C(sl+sr-1,sl-1) ); down[rs] = mul( inv , C(sl+sr-1,sr-1) );\n\treturn rt;\n}\nvoid dfs(int rt){\n    up[rt] = mul(up[rt],up[fa[rt]]); down[rt] = mul(down[rt],down[fa[rt]]);\n\tif(ls)dfs(ls);if(rs)dfs(rs);\n}\nvoid init() {\n\trep(i,1,n-3) {int x,y; gi(x); gi(y); L[x].insert(y); R[y].insert(x);}\n\tans = 1; division(1,n); up[0] = down[0] = 1; dfs(1);\n\tif(fk == 0) printf(\"%d\\n\",cnt);\n\telse printf(\"%d %d\\n\",cnt,ans);\n}\nint main(){\n\tfreopen(\"polygon.in\",\"r\",stdin);\n\tfreopen(\"polygon.out\",\"w\",stdout);\n\tgi(fk); gi(n);\n\tfac[0] = inv[0] = 1;      rep(i,1,n) fac[i] = 1ll*fac[i-1]*i%p;\n\tinv[n] = ksm(fac[n],p-2); repp(i,n-1,1) inv[i] = 1ll*inv[i+1]*(i+1)%p;\n\tinit();\n\tint m; gi(m);\n\trep(i,1,m) {\n\t\tint l,r,f1,f2; gi(l); gi(r);\n\t\tint y = hash[mp(l,r)],x = fa[y],k = ch[x][1] == y,res = 0,tmp = ans;\n\t    res += r == n;\n\t\tf1 = r == n;\n\t\tans = mul( ans , ksm( C( sz[ch[y][0]] + sz[ch[y][1]] , sz[ch[y][0]] ) , p-2 ) );\n\t\tans = mul( ans , ksm( C( sz[ch[x][0]] + sz[ch[x][1]] , sz[ch[x][0]] ) , p-2 ) );\n\t\tif(k == 1) {\n\t\t\tif(ch[y][0]) r = a[ch[y][0]].se;\n\t\t\tif(ch[y][1]) r = a[ch[y][1]].fr;\n\t\t\tif(!ch[y][0] && !ch[y][1]) r = l+1;\n\t\t\tl = a[x].fr;\n\t\t\tans = mul( ans , C( sz[ch[x][0]] + sz[ch[y][0]] , sz[ch[x][0]] ) );\n\t\t\tans = mul( ans , C( sz[ch[x][0]] + sz[ch[y][0]] + (r != n) + sz[ch[y][1]] , sz[ch[y][1]] ) );\n\t\t}\n\t\telse {\n\t\t\tif(ch[y][0]) l = a[ch[y][0]].se;\n\t\t\tif(ch[y][1]) l = a[ch[y][1]].fr;\n\t\t\tif(!ch[y][0] && !ch[y][1]) l = r-1;\n\t\t\tr = a[x].se;\n\t\t\tans = mul( ans , C( sz[ch[y][1]] + sz[ch[x][1]] , sz[ch[x][1]] ) );\n\t\t\tans = mul( ans , C( sz[ch[y][1]] + sz[ch[x][1]] + (r != n) + sz[ch[y][0]] , sz[ch[y][0]] ) );\n\t\t}\n\t\tres -= r == n;\n\t\tf2 = r == n;\n\t\tif(f1 ^ f2) {\n\t    \tif(!f1) ans = mul( ans , down[x] );\n\t\t\telse ans = mul( ans , up[x] );\n\t\t}\n    \tif(fk == 0) printf(\"%d\\n\",cnt+res);\n\t    else printf(\"%d %d\\n\",cnt+res,ans);\n\t\tans = tmp;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1554795753,
        "uid": 49236,
        "name": "a1035719430",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5288 \u3010[HNOI2019]\u591a\u8fb9\u5f62\u3011"
    }
]