[
    {
        "content": "#### \u5173\u4e8e\u672c\u9898\n\u7531\u4e8e\u4f5c\u8005\u6bd4\u8f83\u849f\u84bb\uff0c\u6240\u4ee5\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u8c03\u8bd5\u4e86\u975e\u5e38\u4e4b\u4e45......\u7136\u540e\u88ab\u5361\u5e38\u4e86\uff1f\uff1f\uff1f\n\n\u53cd\u6b63\u7531\u4e8e\u5e38\u6570\u95ee\u9898\uff0c\u6700\u540e\u4e0d\u5f97\u4e0d\u5c06cin\u6539\u4e3a\u5feb\u8bfb\uff0c\u624d\u5728400ms\u7684\u65f6\u5dee\u4e0b\u60ca\u9669\u901a\u8fc7\u6b64\u9898\u3002\u3002\u3002\n\n\u56e0\u4e3a\u672c\u9898\u9898\u89e3\u5927\u90e8\u5206\u90fd\u770b\u4e0d\u61c2\uff0c\u6240\u4ee5\u7279\u610f\u5199\u4e00\u7bc7\u6765\u8ba9\u5927\u5bb6\u7406\u89e3\n### \u5173\u4e8e\u505a\u6cd5\n\n  \u672c\u9898\u56e0\u4e3a\u6811\u7684\u5750\u6807\u5747\u4e3a\u7ed9\u5b9a\u7684\uff0c \u800c\u67e5\u8be2\u6bd4\u8f83\u591a\uff0c \u6240\u4ee5\u8003\u8651\u4f7f\u75282\u7ef4\u524d\u7f00\u548cQAQ\uff0c \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u6211\u4eec\u90fd\u5efa\u7acb\u4e00\u4e2a$S_{i,j}$\u8868\u793a\u4ee5($0$,$0$)\u4e3a\u5de6\u4e0b\u5750\u6807\uff0c($i$,$j$)\u4e3a\u53f3\u4e0a\u5750\u6807\u7684\u77e9\u9635\u5185\u90e8\u6709\u591a\u5c11\u8bfe\u6811\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67e5\u8be2\u5de6\u4e0b\u4e3a\u70b9($a$, $b$)\uff0c\u53f3\u4e0a\u4e3a\u70b9($c$, $d$)\u7684\u77e9\u9635\u7684\u67e5\u8be2\uff0c\u53ef\u4ee5\u5c06\u4e4b\u8fdb\u884c\u62c6\u5206\u3002\u5982\u4e0b\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/24264.png)\n\n> \u5219\u56fe\u4e2d\u7684\u9ed1\u8272\u90e8\u5206\u4e3a\u6574\u4e2a\u5927\u7684\u9ed1\u8272\u90e8\u5206\u4e5f\u5c31\u662fS_{c,d}\u51cf\u53bb\u65c1\u8fb9\u4e24\u4e2a\u7ea2\u8272\u8fb9\u6240\uff08\u81ea\u884c\u60f3\u8c61\u4e00\u4e0b\uff09\u5f62\u6210\u7684\u77e9\u5f62\uff0c\u4e5f\u5c31\u662f $S_{a,d}$\u548c $S_{c,b}$ ; \u6ce8\u610f\u5230\u56fe\u4e2d\u7070\u8fb9\u77e9\u5f62\u88ab\u51cf\u53bb\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u8fd8\u5e94\u5f53\u88ab\u52a0\u4e0a\u4e0a\u4e00\u6b21\uff0c\u6240\u4ee5\u6709\uff1a\u9ed1\u8272\u77e9\u5f62\u4e2d\u7684\u6811\u7684\u6570\u91cf\u4e3a\u4e0b\u5f0f\uff1a\n> #### \u9ed1\u8272\u77e9\u5f62 $=$  $S_{c,d}$ + $S_{a-1,b-1} $- $S_{a-1,d}$-$S_{c,b-1}$\n(\u81ea\u884c\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u662f$a$ - $1$\u548c$b$ - $1$)\n\n> (\u4e0a\u9762\u90a3\u4e00\u4e32\u8bdd\u6bd4\u8f83\u62d7\u53e3\u641e\u4e0d\u61c2\u7684\u8bdd\uff0c\u5176\u5b9e\u60a8\u53ef\u4ee5\u8003\u8651\u753b\u4e00\u5f20\u7c7b\u4f3c\u7684\u5982\u4e0a\u7684\u56fe\uff0c\u7136\u540e\u6839\u636e$S_{i,j}$\u7684\u5b9a\u4e49\u6765\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u4e0a\u5f0f\u7684\u8ba1\u7b97\u8fc7\u7a0b)\n\n\u6240\u4ee5\u76ee\u524d\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e3a\u4e86\u6c42\u51fa\u4e0a\u8ff0\u76842\u7ef4\u524d\u7f00\u548c\u4e86\u3002\n\n\u4f46\u7531\u4e8e\u672c\u9898\u6570\u636e\u8303\u56f4\u8fc7\u5927\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u80af\u5b9a\u662f\u4f1a\u70b8\u7684\uff08\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b83\u662f$2$\u7ef4\uff0c\u8fd8\u6709\u56e0\u4e3a\u8fd9\u91cc\u7684\u524d\u7f00\u548c\u5bf9\u5e94\u7684\u662f\u9898\u4e2d\u5750\u6807\uff0c\u800c\u5750\u6807\u8fc7\u4e8e\u5e7f\u6cdb\uff09\uff0c\u6240\u4ee5\u8003\u8651\u5148\u5bf9\u5750\u6807\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u5750\u6807\uff08\u5305\u62ec\u8be2\u95ee\u5750\u6807\uff09\u6309\u7167$x$\u8f74\u8fdb\u884c\u6392\u5e8f\uff0c\n\n\u6309\u7167$x$\u5750\u6807\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u524d\u7f00\u548c\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u8003\u8651$x$\u5750\u6807\u4e86\uff0c\u7136\u540e\u540c\u65f6\u5c06$y$\u5750\u6807\u79bb\u6563\u5316\u6389\uff08\u6211\u662f\u7528\u6392\u5e8f\u79bb\u6563\u5316\u6389y\u7684\uff09\n\n> Q1\uff1a\u4e3a\u4ec0\u4e48\u6309$x$\u5750\u6807\u6392\u5e8f\u540e\u5c31\u4e0d\u9700\u8981\u8003\u8651$x$\u5750\u6807\u4e86\n\n> A1:\u56e0\u4e3a\u6392\u5e8f\u540e\u4e00\u5b9a\u6709\u540e\u9762\u6765\u7684\u70b9\u7684$x$\u5750\u6807\u4e00\u5b9a\u6bd4\u524d\u9762\u6240\u6709\u7684$x$\u5750\u6807\u90fd\u5927\uff0c\u6545\u5f53\u8fd9\u4e2a\u70b9\u4e3a\u8be2\u95ee\u65f6\u53ea\u9700\u8981\u5224\u65ad\u6bd4\u8be5\u70b9\u7684$y$\u5750\u6807\u5c0f\u7684\u70b9\u6709\u591a\u5c11\u4e2a\u5373\u53ef\u3002\n\n\u6240\u4ee5\u4e4b\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6309\u7167$x$\u5750\u6807\u987a\u5e8f\u8bfb\u5165\u7684\u6811\u70b9\uff0c\u53ef\u4ee5\u5c06\u4e4b\u5206\u4e3a\u4e24\u7c7b\u64cd\u4f5c\uff1a\n\n(1):\u52a0\u5165\u4e00\u4e2a\u6811\u70b9\n\n(2):\u8be2\u95ee\u6bd4\u8be5\u70b9$y$\u5750\u6807\u8981\u5c0f\u7684\u70b9\u6570\u91cf\n\n\u4ecb\u4e8e\u4e0a\u8ff0\u4e24\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u64cd\u4f5c\u3002\uff08\u6811\u72b6\u6570\u7ec4\u8fd9\u4e48\u77ed\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5b83\u5462\uff1f\uff09\n\n\u6240\u4ee5\uff0c\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\u4e86\uff1a\uff08\u76f4\u63a5\u6284\u662f\u80af\u5b9a\u4e0d\u4f1a\u5bf9\u7684\u5566\u3002\uff09\n ```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 3000000 + 5;\nconst int M = 1e7 + 5;\nint tree[N], n, m;\nstruct node\n{\n\tint x, y, id, qs, ut;\n}t[N];\nint cnt;\nint qy[N], ans[N];\n//\u5218\u6c0f\u5feb\u8bfb\n#define Finline __inline__ __attribute__ ((always_inline))\nFinline char get_char()\n{\n    static char buf[200000001], *p1 = buf, *p2 = buf + fread(buf, 1, 200000000, stdin);\n    return p1 == p2 ? EOF : *p1 ++;\n}\ninline int read(){\n    int num = 0;\n    char c;\n    while((c = get_char()) < 48);\n    while(num = num * 10 + c - 48, (c = get_char()) >= 48);\n    return num;\n}\n//\u4ee5\u4e0a\u5747\u4e3a\u5218\u6c0f\u5feb\u8bfb\u4f18\u5316 \nbool cmp(node r1, node r2)\n{\n\tif(r1.x == r2.x) \n\t\tif(r1.y == r2.y) return r1.qs <= r2.qs;//x,y\u5747\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u4f18\u5148\u5904\u7406\u6811\u70b9\u800c\u4e0d\u662f\u8be2\u95ee\u70b9\n\tif(r1.x == r2.x)\n\t\treturn r1.y < r2.y;//x\u76f8\u540c\u5219\u6309y\u6392\u5e8f\n\treturn r1.x < r2.x ; \n}\nint lowbit(int x)//\u6811\u72b6\u6570\u7ec4\n{\t\n\treturn x&(-x);\n}\nint find1(int x)// 2\u5206\u67e5\u627e\u627e\u51fa\u79bb\u6563\u5316\u540e\u7684y\n{\n\tint l = 1, r = cnt;\n\twhile(l < r)\n\t{\n\t\tint mid = (l + r) / 2;\n\t\tif(qy[mid] < x)\n\t\t\tl = mid + 1;\n\t\telse\n\t\t\tr = mid - 1;\n\t}\n\treturn l;\n}//\u8003\u8651\u4f18\u5316find1\uff1f\uff1f\uff1f\u4e0d\u77e5\u9053\u600e\u4e48\u4f18\u5316\u554aQAQ\uff1f\uff1f\uff1f\u79bb\u6563\u5316\uff1f\uff1f\uff1f \nvoid add(int root, int rx, int ry, int rq)\n{\n\tcnt++;\n\tt[cnt].x = rx;\n\tt[cnt].y = ry;\n\tt[cnt].id = root;\n\tt[cnt].qs = rq;\n\tqy[cnt] = ry;\n}//\u52a0\u5165\u4e00\u4e2a\u70b9\nvoid add_tree(int root, int k)//\u6811\u72b6\u6570\u7ec4\u52a0\u5165\u70b9\n{\n\tfor(int i = root; i <= cnt; i += lowbit(i))//\u4ece\u7f16\u53f7\u5f00\u59cb\uff0c\u6bcf\u6b21\u5411\u4e0a\u4f9d\u6b21\u4f20\u503c\u3002\u3002\u3002 \n\t\ttree[i] += k;\n}\nint find(int root)\u67e5\u627e\u6bd4\u8be5\u70b9y\u5c0f\u7684\u70b9\u6709\u591a\u5c11\u4e2a\n{\n\tint num = 0;\n\tfor(int i = root; i != 0; i -= lowbit(i))\n\t\tnum += tree[i];//\u4ece\u8282\u70b9x\u5f00\u59cb\uff0c\u4f9d\u6b21\u627e\u5230\u4e0b\u8def \n\treturn num;\n}\nvoid q_read()\n{\n\tint p;\n\tn = read();\n\tm = read();\n\tint sx, sy;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tsx = read(); sy = read();\n\t\tadd(i, sx, sy, 0);//\u8bfb\u5165 \n\t}\n\tint a, b, c, d;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\ta = read(); b = read(); c = read(); d = read();\n\t\tp = m ;\n\t\tadd(i, a - 1, b - 1, 1);//0,1\u8868\u793a\u8fd9\u4e2a\u6570\u662f\u5426\u4e3a\u95ee\u9898 \n\t\tadd(i + p, c, d, 1);\n\t\tadd(i + 2 * p, a - 1, d, 1);\n\t\tadd(i + 3 * p, c, b - 1, 1);\n\t}\n}\nvoid doit()\n{\n\tsort(t + 1, t + cnt + 1, cmp);//\u901a\u8fc7\u5173\u4e8ex\u7684\u6392\u5e8f\u79bb\u6563\u5316\u6389x\n\tsort(qy + 1, qy + cnt + 1);//\u901a\u8fc7\u5173\u4e8ey\u7684\u6392\u5e8f\u79bb\u6563\u5316\u6389y\n\tfor(int i = 1; i <= cnt; i++)\n\t{\n\t\tint tof = find1(t[i].y);//\u67e5\u627e\u503c\u4e3at[i].y\u7684\u5750\u6807\u7684\u70b9\u5728\u79bb\u6563\u5316\u540e\u7684y\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\n\t\tif(t[i].qs == 0)//\u662f\u6811\u70b9\n\t\t\tadd_tree(tof, 1);//\u52a0\u5165\u4e00\u4e2a\u70b9\n\t\telse//\u662f\u8be2\u95ee\n\t\t\tans[t[i].id]+=find(tof);//\u8bb0\u5f55\u7b54\u6848\n\t}\n}\nint qans(int x)\n{\n\tint p = m ;\n\treturn ans[x] + ans[x + p] - ans[x + 2 * p] - ans[x + 3 * p];//\u4e4b\u524d\u8bb2\u7684\u524d\u7f00\u548c\uff0c\u628a\u6700\u540e\u4e00\u4e2a1 * p\u6539\u4e3a3 * p\u5373\u53efA\u4e86\n}\nvoid write()//\u8f93\u51fa\u7a0b\u5e8f\n{\n\tfor(int i = 1; i <= m; i++)\n\t\tcout << qans(i) <<endl;\n}\n//\u4ee5\u4e0b\u662f\u4f18\u7f8e\u7684\u4e3b\u7a0b\u5e8f \nint main()\n{\n\tq_read();\n\tdoit();\n\twrite();\n\treturn 1;//\u9632\u6b62\u6284\u88ad\n}\n``` ",
        "postTime": 1531973717,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u56ed\u4e01\u7684\u70e6\u607c-\u9898\u89e3"
    },
    {
        "content": "CDQ\u7684\u9898\u89e3\uff0c\u4e00\u4e2a\u88f8\u7684\u4e8c\u7ef4\u6570\u70b9\uff0c\u6548\u7387nlogn\uff0c\u6309x\u8f74\u6392\u5e8f\uff0c\u7136\u540e\u4e71\u641e\u4e00\u901aCDQ\u5c31\u597d\u4e86\u3002\n\u6ce8\u610f\uff1a\u6bcf\u4e2a\u8be2\u95ee\u62c6\u62104\u4e2a\u8be2\u95ee\uff0c\u518d\u52a0\u4e0an\u4e2a\u70b9\uff0c\u6240\u4ee5\u7a7a\u95f4\u8981\u5f005\u500d\u3002\nQAQ\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 5000005 * 5\nusing namespace std;\ninline int read()\n{\n    char x = getchar();\n    int lin = 0, f = 1;\n    while(x < '0' || x > '9')\n    {\n        if(x == '-') f = -1;\n        x = getchar();\n    }\n    while(x >= '0' && x <= '9')\n    {\n        lin = lin * 10 + x - '0';\n        x = getchar();\n    }\n    return lin * f;\n}\nstruct st{\n    int x,y,typ,add,id,ans;\n}s[maxn],ce[maxn];\nint n,m,x,y,tot,a,b,c,d,ans[maxn];\nvoid add(int x,int y,int typ,int add,int id,int ans)\n{\n    s[++tot] = (st) {x,y,typ,add,id,ans};\n}\nbool com(st a,st b)\n{\n    if(a.x == b.x)\n        if(a.y == b.y)\n            return a.typ < b.typ;\n        else return a.y < b.y;\n    return a.x < b.x;\n}\nvoid cdq(int l,int r)\n{\n    if(l == r) return;\n    int mid = l + r >> 1;\n    cdq(l,mid);\n    cdq(mid + 1,r);\n    int le = l,re = mid + 1,pos = 0,ans = 0;\n    while(le <= mid || re <= r)\n    {\n        if(re > r || (le <= mid && s[le].y <= s[re].y))\n        {\n            if(s[le].typ == 1) ++ans;\n            ce[++pos] = s[le++];\n        }\n        else\n        {\n            if(s[re].typ == 2) s[re].ans += ans;\n            ce[++pos] = s[re++];\n        }\n    }\n    for(int i = 1; i <= pos; i++)\n        s[l + i - 1] = ce[i];\n}\n\nint main(){\n    n = read(); m = read();\n    for(int i = 1; i <= n; i++)\n    {\n        x = read(); y = read();\n        add(x,y,1,0,0,0);\n    }\n    \n    for(int i = 1; i <= m; i++)\n    {\n        a = read(); b = read();\n        c = read(); d = read();\n        add(a - 1,b - 1,2,1,i,0);\n        add(c,d,2,1,i,0);\n        add(a - 1,d,2,-1,i,0);\n        add(c,b - 1,2,-1,i,0);\n    }\n    sort(s + 1,s + 1 + tot,com);\n    \n    cdq(1,tot);\n    for(int i = 1; i <= tot; i++)\n        if(s[i].typ == 2)\n            ans[s[i].id] += s[i].add * s[i].ans;\n    for(int i = 1; i <= m; i++)\n        printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1534298110,
        "uid": 48421,
        "name": "cc123321",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u829d\u58eb\n\n \u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u3002\n\n[\u9898\u9762](https://www.luogu.com.cn/paste/ueskwrtc)\n\n\u76f8\u4fe1\u8fd9\u9053\u9898\u76ee\u5927\u5bb6\u90fd\u4f1a\u505a\uff0c\u53ea\u8981\u5c06\u661f\u661f\u7684\u5750\u6807\u6309 $x$ \u6392\u5e8f\uff0c\u5373\u53ef\u964d\u6389\u4e00\u7ef4\uff0c\u63a5\u4e0b\u6765\u8981\u5904\u7406\u7684\u5c31\u662f $n$ \u4e2a\u8be2\u95ee\uff0c\u5c06\u6570\u7ec4\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u626b\u4e00\u904d\uff0c\u6bcf\u6b21\u7528 `ask(y)` \u8be2\u95ee\u6bcf\u9897\u661f\u661f\u5de6\u4e0b\u89d2\u7684\u661f\u661f\u4e2a\u6570\uff0c\u518d\u5c06\u8be5\u9897\u661f\u661f\u7684 y \u5750\u6807\u653e\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u5219\u53ef\u5904\u7406\u51fa\u6bcf\u4e2a\u661f\u661f\u7684\u7b49\u7ea7\uff0c\u8fdb\u4e00\u6b65\u5f97\u51fa\u7b54\u6848\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/4i7bg8ob)\n\n## \u5206\u6790\u9898\u610f\n\n\u53d7\u5230\u521a\u624d\u9898\u76ee\u7684\u542f\u53d1\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5f97\u5230\u4e86 `ask(y)` \u7684\u51e0\u4f55\u610f\u4e49\uff0c\u5373\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8868\u793a\u7ea2\u8272\u77e9\u5f62\u4e2d\u6811\u7684\u68f5\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mdqak2j0.png)\n\n\u7c7b\u4f3c\u7684\uff0c\u6839\u636e\u9898\u610f\uff0c\u9898\u76ee\u4e2d\u67e5\u8be2\u7684\u4e3a\u4ee5 $(a, b)$ \u4e3a\u5de6\u4e0b\u89d2\uff0c$(c, d)$ \u4e3a\u53f3\u4e0a\u89d2\u7684\u77e9\u5f62\u5185\u90e8\uff08\u5305\u62ec\u8fb9\u754c\uff09\u6709\u591a\u5c11\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9898\u610f\u753b\u51fa\u7b26\u5408\u9898\u610f\u7684\u56fe\u5f62\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3mfw7ck9.png)\n\n\u5982\u56fe\uff0c\u8be5\u56fe\u5f62\u4ee3\u8868\u4e00\u6b21\u8be2\u95ee\uff0c\u5219\u56fe\u4e2d\u7c89\u8272\u90e8\u5206\u7684\u77e9\u5f62\u5185\u6240\u542b\u6709\u7684\u6811\u7684\u68f5\u6570\u5373\u4e3a\u6211\u4eec\u6240\u8981\u6c42\u7684\u7684\u7b54\u6848\uff0c\u6545\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u7b54\u6848\u53ef\u7528\u6211\u4eec\u4e0a\u4e00\u9898\u7684\u601d\u8def\u6765\u7edf\u8ba1\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u53ef\u80fd\u6709\u540c\u5b66\u4f1a\u95ee\uff1a\u7edf\u8ba1\u7c89\u8272\u77e9\u5f62\u5185\u7684\u6811\u7684\u68f5\u6570\u4e0d\u662f\u6267\u884c\u4e86\u4e24\u6b21 `ask(d)` \u4e0e `ask(b-1)` \u5417\uff1f\u5f97\u51fa\u7684\u7ed3\u679c\u4e0d\u662f\u4e0d\u6b63\u786e\u5417\uff1f\u5176\u5b9e\u4e0d\u7136\u4e24\u6b21 `ask(d)` \u4e0e `ask(b-1)` \u5e76\u4e0d\u662f\u5728\u540c\u4e00\u65f6\u95f4\u8fdb\u884c\u7684\uff0c\u6545\u4ee3\u8868\u7684\u610f\u4e49\u4e0d\u540c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u4e5f\u4e0d\u540c\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n\u8bbe\u5728\u70b9 $(a-1,d)$ \u65f6\uff0c `ask(d)=sum2` \uff0c\u5728\u70b9 $(a-1,b-1)$ \u65f6\uff0c `ask(b-1)=sum1` \uff0c\u5728\u70b9 $(c,b-1)$ \u65f6\uff0c `ask(b-1)=sum3` \uff0c\u5728\u70b9 $(c,d)$ \u65f6\uff0c `ask(d)=sum4` \u6211\u4eec\u4fbf\u53ef\u4ee5\u5f97\u51fa `ans=sum4-sum2-sum3+sum1` \u81ea\u6b64\uff0c\u6211\u4eec\u4fbf\u5f97\u51fa\u4e86\u601d\u8def\u3002\n\n\u5173\u4e8e\u5728\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u4e0a\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8be2\u95ee\u88c2\u6210\u56db\u4e2a**\u865a\u70b9**\uff0c\u5373\u653e\u5165\u626b\u63cf\u6570\u7ec4\uff0c\u4f46\u4e0d\u6dfb\u52a0\u81f3\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u5219\u8fd9\u6837\u53ef\u4ee5\u5f97\u51fa\u6211\u4eec\u7684\u6b63\u786e\u7b54\u6848\u4e14\u4e0d\u5f71\u54cd\u6811\u72b6\u6570\u7ec4\u7684\u7edf\u8ba1\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6309 $x$ \u6392\u5e8f\u540e\uff0c\u5bf9 $y$ \u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\u3002\u8fd8\u6709\u4e0d\u8981\u5fd8\u8bb0\u5bf9  `n=0,m!=0` \u7684\u60c5\u51b5\u8fdb\u884c\u7279\u5224~~\u5e76\u4e14\u6ce8\u610f\u5361\u5e38~~\n\n\u653e\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define reg register\nusing namespace std;\nint n;\nint c[2500005];\nstruct star{\n    int x,y;\n    int pos;//pos\u7528\u6765\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\u4e0e\u5224\u5b9a\u662f\u5426\u4e3a\u865a\u70b9\n};\nstar st[2500005];\nint ans[500005][5];\nint tot[500005];\nint x1_[500005],x2_[500005],y1_[500005],y2_[500005];//\u4e0d\u8981\u8f7b\u6613\u7528x1,x2,y1,y2...\nint b[2500005],p;\nbool cmp(star x,star y)\n{\n    if(x.x!=y.x)return x.x<y.x;\n    if(x.y!=y.y)return x.y<y.y;\n    return x.pos<y.pos;\n}\ninline void add(int x,int y)\n{\n    for(reg int i=x;i<=n;i+=i&-i)c[i]+=y;\n}\ninline int ask(int x)\n{\n    int ans=0;\n    for(reg int i=x;i>=1;i-=i&-i)ans+=c[i];\n    return ans;\n}\ninline int lsh(int x)\n{\n\treturn lower_bound(b+1,b+p+1,x)-b;\n}\nint main()\n{\n\t//printf(\"%d\",sizeof(ans)/1024/1024);\n\tint m;\n    scanf(\"%d%d\",&n,&m);\n    if(n==0){\n    \tfor(reg int i=1;i<=m;i++)printf(\"0\\n\");\n    \treturn 0;\n    }\n    if(m==0)\n    {\n        return 0;\n    }\n    for(reg int i=1;i<=n;i++)scanf(\"%d%d\",&st[i].x,&st[i].y),st[i].pos=0;\n    for(reg int i=1;i<=m;i++){\n    \tscanf(\"%d%d%d%d\",&x1_[i],&y1_[i],&x2_[i],&y2_[i]),st[++n].x=x1_[i]-1,st[n].y=y1_[i]-1,st[n].pos=i;\n\t\tst[++n].x=x2_[i],st[n].y=y2_[i],st[n].pos=i;\n\t\tst[++n].x=x2_[i],st[n].y=y1_[i]-1,st[n].pos=i;\n\t\tst[++n].y=y2_[i],st[n].x=x1_[i]-1,st[n].pos=i;\n    }\n    sort(st+1,st+n+1,cmp);\n    for(reg int i=1;i<=n;i++)b[i]=st[i].y;\n    sort(b+1,b+n+1);\n    p=unique(b+1,b+n+1)-(b+1);\n    for(reg int i=1;i<=n;i++)\n    {\n    \tif(st[i].pos)ans[st[i].pos][++tot[st[i].pos]]=ask(lsh(st[i].y));\n    \t//printf(\"%d\\n\",ask(lsh(st[i].y)));\n    \telse if(st[i].pos==0)add(lsh(st[i].y),1);\n\t\t//printf(\"st[i].y=%d,ask(st[i].y)=%d\\n\",lsh(st[i].y),ask(st[i].y));\n    }\n    for(reg int i=1;i<=m;i++)\n      printf(\"%d\\n\",ans[i][4]-ans[i][3]-ans[i][2]+ans[i][1]);\n    return 0;\n}\n```\n\n\n\n## \u540e\u8a00\n\n\u653e\u4e0a\u4e2a\u968f\u673a\u5c0f\u6570\u636e\u751f\u6210\u5668\uff0c\u65b9\u4fbf\u5927\u5bb6\u8c03\u8bd5\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tfreopen(\"data.in\",\"w\",stdout);\n\tsrand((unsigned)(time(0)));\n\tint n=rand()%10,m=1;\n\tprintf(\"%d %d\\n\",n,m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=rand()%10,y=rand()%10;\n\t\tprintf(\"%d %d\\n\",x,y);\n\t}\n\tfor(int i=1;i<=1;i++)\n\t{\n\t\tint x=rand()%10,y=rand()%10;\n\t\tint x2=rand()%10,y2=rand()%10;\n\t\tif(x>x2)swap(x,x2);\n\t\tif(y>y2)swap(y,y2);\n\t\tprintf(\"%d %d %d %d\\n\",x,y,x2,y2);\n\t\t\n\t}\n\treturn 0;\n}\n```\n\n[\u987a\u4fbf\u63a8\u9500\u4e00\u6ce2\u535a\u5ba2](https://mywkj.github.io/)\n\n",
        "postTime": 1597406856,
        "uid": 240405,
        "name": "wkjwkj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316\uff0c\u5bf9x\u6392\u5e8f\n\u8f6c\u5316=F(x2,y2)\u2212F(x1\u22121,y2)\u2212F(x2,y1\u22121)+F(x1\u22121,y1\u22121)\n\u76f8\u5f53\u4e8e\u6709\u56db\u4e2a\u67e5\u8be2\n\u8bb0\u4e0b\u6bcf\u4e2ax\u7684\u67e5\u8be2\uff0c\u4e0e\u6dfb\u52a0\n\u6ca1\u6709\u4fee\u6539\uff0c\u7136\u540e\u626b\u63cf\u7ebf\uff0c\u964d\u6389\u4e00\u7ef4\n\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\u5c31\u884c\u4e86\n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN=500004;\nstruct node{int x,y,xx,yy;}a[MAXN];vector<int>V[MAXN],Q[MAXN],q[MAXN];\nint n,m,N,M,sum[MAXN],x[MAXN],y[MAXN],tmpx[MAXN*3],tmpy[MAXN*3],totx,toty,ans[MAXN];\nvoid modify(int x){for(;x<=M;x+=x&-x)sum[x]++;}\nint query(int x){int ans=0;for(;x;x-=x&-x) ans+=sum[x];return ans;}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) scanf(\"%d%d\",&x[i],&y[i]),tmpx[++totx]=x[i],tmpy[++toty]=y[i];\n    for(int i=1;i<=m;i++) {\n        scanf(\"%d%d%d%d\",&a[i].x,&a[i].y,&a[i].xx,&a[i].yy);a[i].x--;a[i].y--;\n        tmpx[++totx]=a[i].x;tmpx[++totx]=a[i].xx;tmpy[++toty]=a[i].y;tmpy[++toty]=a[i].yy;\n    }\n    sort(tmpx+1,tmpx+totx+1);sort(tmpy+1,tmpy+toty+1);\n    N=unique(tmpx+1,tmpx+totx+1)-tmpx-1;M=unique(tmpy+1,tmpy+toty+1)-tmpy-1;\n    for(int i=1;i<=n;i++){\n        x[i]=lower_bound(tmpx+1,tmpx+N+1,x[i])-tmpx;\n        y[i]=lower_bound(tmpy+1,tmpy+M+1,y[i])-tmpy;\n        V[x[i]].push_back(y[i]);\n    }\n    for(int i=1;i<=m;i++){\n        a[i].x=lower_bound(tmpx+1,tmpx+N+1,a[i].x)-tmpx;\n        a[i].y=lower_bound(tmpy+1,tmpy+M+1,a[i].y)-tmpy;\n        a[i].xx=lower_bound(tmpx+1,tmpx+N+1,a[i].xx)-tmpx;\n        a[i].yy=lower_bound(tmpy+1,tmpy+M+1,a[i].yy)-tmpy;\n        Q[a[i].x].push_back(i);q[a[i].xx].push_back(i);\n    }\n    for(int i=1;i<=N;i++){\n        for(int j=0;j<V[i].size();j++) modify(V[i][j]);\n        for(int j=0;j<Q[i].size();j++) ans[Q[i][j]]+=query(a[Q[i][j]].y)-query(a[Q[i][j]].yy);\n        for(int j=0;j<q[i].size();j++) ans[q[i][j]]+=query(a[q[i][j]].yy)-query(a[q[i][j]].y);\n    }\n    for(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1521943734,
        "uid": 18371,
        "name": "alpq010815",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u4f3c\u4e4e\u597d\u50cf\u8fd8\u6ca1\u6709\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u5199\u7684\u554a\uff0c\u6765\u4e00\u53d1\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u4e8c\u7ef4\u504f\u5e8f\uff08\u9006\u5e8f\u5bf9\uff09\u95ee\u9898\uff0c\u76f4\u63a5\u7528\u4e00\u7ef4\u6570\u72b6\u6570\u7ec4\u6765\u6c42\n\n\u5148\u5c06\u8be2\u95ee\u7684\u77e9\u9635\u62c6\u6210\u56db\u4e2a\u70b9\uff0c\u7136\u540e\u6309\u5176\u4e2d\u4e00\u7ef4\u6392\u5e8f\uff0c\u53e6\u4e00\u7ef4\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\u76f4\u63a5\u6c42\u5c31\u53ef\u4ee5\u4e86\n\n\u56e0\u4e3a\u5206\u4e3a\u8be2\u95ee\u7684\u70b9\u548c\u539f\u6709\u7684\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e24\u4e2a\u6570\u7ec4\u505a\uff0c\u4e0d\u7136\u5bb9\u6613\u4e71\u6389\n\n\u6700\u540e\u5bb9\u65a5\u4e00\u4e0b\u5c31\u597d\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ninline ll read(){\n    char ch=getchar();ll x=0,f=1;\n    while(ch<'0' || ch>'9') {\n       if(ch=='-') f=-1;\n      \t  ch=getchar();\n    }\n    while(ch<='9' && ch>='0') {\n       x=x*10+ch-'0';\n       ch=getchar();\n    }\n    return x*f;\n}\n\nstruct node{\n    int x,y;\n}t[40404004];\n\nstruct nod{\n    int x,y,id,w;\n}a[20200222];\n\n\nint tr[10000020];\n\nint lowbit(int x){\n    return x&-x;\n}\n\nvoid add(int x,int k){\n    x++;\n    while(x<=10000010){\n        tr[x]+=k;\n        x+=lowbit(x);\n    }\n}\n\nint sum(int x){\n    x++;\n    int s=0;\n    while(x){\n        s+=tr[x];\n        x-=lowbit(x); \n    }\n    return s;\n}\n\nbool cmp(node a,node b){\n    return a.x<b.x;\n}\n\nbool cmpp(nod a,nod b){\n    return a.x<b.x;\n}\n\nint ans[2020022];\n\nint main(){\n    int n=read(),m=read();\n    for(int i=1;i<=n;i++){\n        t[i].x=read(),t[i].y=read();\n    }\n    int cnt=0;\n    for(int i=1;i<=m;i++){//\u8be2\u95ee\u77e9\u9635\u62c6\u6210\u56db\u4e2a\u70b9\n        int xa=read(),ya=read(),xb=read(),yb=read();\n        cnt++;a[cnt].id=cnt;a[cnt].w=1;a[cnt].x=xb;a[cnt].y=yb;\n        cnt++;a[cnt].id=cnt;a[cnt].w=1;a[cnt].x=xb;a[cnt].y=ya-1;\n        cnt++;a[cnt].id=cnt;a[cnt].w=1;a[cnt].x=xa-1;a[cnt].y=yb;\n        cnt++;a[cnt].id=cnt;a[cnt].w=1;a[cnt].x=xa-1;a[cnt].y=ya-1;\n    }\n    sort(t+1,t+n+1,cmp);//\u5206\u522b\u6309 x \u6392\u5e8f\n    sort(a+1,a+cnt+1,cmpp);\n    int now=1;\n    for(int i=1;i<=cnt;i++){//\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n        while(t[now].x<=a[i].x && now<=n) {;\n            add(t[now].y,1);\n            now++;\n        }\n        ans[a[i].id]+=sum(a[i].y);\n    }\n    for(int i=1;i<=cnt;i+=4){//\u5bb9\u65a5\u8f93\u51fa\n        printf(\"%d\\n\",ans[i]-ans[i+1]-ans[i+2]+ans[i+3]);\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1547687416,
        "uid": 60136,
        "name": "chengni",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "## \u4e3b\u5e2d\u6811\u88f8\u9898\n\u4e00\u53e5\u8bdd\u9898\u610f:\u7ed9\u51fa$n$\u4e2a\u70b9$(x_i,y_i)$,\u4ee5\u53cam\u4e2a\u8be2\u95ee$a,b,c,d$,\u6bcf\u4e2a\u8be2\u95ee\u6c42\u6ee1\u8db3$a<=x_i<=b$\u4e14$c<=y_i<=d$\u7684\u70b9\u7684\u4e2a\u6570,\u4e0d\u4f1a\u4e3b\u5e2d\u6811\u7684[\u51fa\u95e8\u53f3\u8f6c](https://www.luogu.org/problemnew/show/P3834)\n\n\u56de\u5230\u8fd9\u9898,\u6211\u4eec\u53ea\u9700\u8981\u5341\u5206\u5957\u8def\u5730\u628a\u6240\u6709\u70b9\u7684\u5750\u6807\u6309$x$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u7136\u540e\u4f9d\u6b21\u63d2\u5165,\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee,\u5c31\u51482\u6b21\u4e8c\u5206\u51fa$a$\u548c$c$\u5bf9\u5e94\u7684\u70b9\u7684\u8303\u56f4$l$\u5230$r$,\u53d6\u51fa$root[r]$\u548c$root[l-1]$,\u67e5\u8be2\u6811\u4e2d$b$\u5230$d$\u7684\u6570\u91cf,\u76f8\u51cf\u5c31\u662f\u7b54\u6848.\u590d\u6742\u5ea6$O(nlog_2(R))$,\u7a7a\u95f4\u590d\u6742\u5ea6$O(nlog_2(R))$($R$\u4e3a\u503c\u57df).\u5e38\u6570\u7565\u5927,\u4f46\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\n\n#### \u4ee3\u7801&\u6ce8\u91ca\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define getchar() (p1==p2 and (p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#define MN 500005\n#define INF 10000000\n#define Ls Tree[x].ls\n#define Rs Tree[x].rs\n#define mid ((l+r)>>1)\nchar buf[1<<24],*p1=buf,*p2=buf;\ninline int read(){\n    int a=0;char c=getchar();\n    while(c>57 or c<48)c=getchar();\n    while(47<c and c<58){\n        a=a*10+c-48;\n        c=getchar();\n    }\n    return a;\n}//\u5feb\u8bfb\nstruct tree{\n    int ls,rs,sum;\n}Tree[MN<<5];//\u52a8\u6001\u5f00\u70b9,\u56e0\u4e3a\u503c\u57df1e7,\u6240\u4ee5log\u504f\u5927,\u7a7a\u95f4\u8981\u5f00\u5927\u70b9\nstruct data{\n    int x,y;\n}w[MN];\nint n,m,a,b,c,d,root[MN],cnt;\nbool cmp(data a,data b){\n    return a.x<b.x;\n}//\u7ed3\u6784\u4f53,\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\ninline int low_bnd(int x){\n    int l=0,r=n;\n    while(l+1<r)\n        (w[mid].x>=x)?r=mid:l=mid;\n    return r;\n}//\u627el\u7684\u8303\u56f4,\u8981\u5927\u4e8e\u7b49\u4e8ea\ninline int sma_bnd(int x){\n    int l=1,r=n+1;\n    while(l+1<r)\n        (w[mid].x<=x)?l=mid:r=mid;\n    return l;\n}//\u627er\u7684\u8303\u56f4,\u8981\u5c0f\u4e8e\u7b49\u4e8ec\nvoid pluss(int &x,int l,int r,int v){\n    Tree[++cnt]=Tree[x];x=cnt;\n    ++Tree[x].sum;\n    if(l==r)return;\n    (mid>=v)? pluss(Ls,l,mid,v):pluss(Rs,mid+1,r,v);\n}//\u52a8\u6001\u5f00\u70b9\nint ask(int x,int l,int r,int b,int e){\n    if(l>e||r<b||!x)return 0;\n    if(b<=l&&r<=e)return Tree[x].sum;\n    return ask(Ls,l,mid,b,e)+ask(Rs,mid+1,r,b,e);\n}//\u67e5\u8be2\u533a\u95f4\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;++i){\n        w[i].x=read();w[i].y=read();\n    }\n    sort(w+1,w+1+n,cmp);\n    for(int i=1;i<=n;++i){\n        root[i]=root[i-1];\n        pluss(root[i],0,INF,w[i].y);//\u4f9d\u6b21\u5efa\u6811\n    }\n    for(int i=1;i<=m;++i){\n        a=read();b=read();c=read();d=read();\n        int l=low_bnd(a),r=sma_bnd(c);//\u6c42\u51fa\u533a\u95f4\n        printf(\"%d\\n\",ask(root[r],0,INF,b,d)-ask(root[l-1],0,INF,b,d));//\u5dee\u5206\u76f8\u51cf\n    }\n    return 0;\n} \n\n```",
        "postTime": 1557028430,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "#### \u5176\u5b9e\u662f\u4e0d\u7528\u628a\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u56db\u4e2a\u7684\n\n\u628a\u8be2\u95ee\u8f6c\u5316\u4e3a\u6570\u5b66\u8bed\u8a00\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u8be2\u95ee\u6ee1\u8db3$a<=x<=b$\u4e14$c<=y<=d$\u7684\u70b9$x,y$\u7684\u4e2a\u6570\n\n~~\u81ea\u7136~~\u60f3\u5230**\u504f\u5e8f\u95ee\u9898**\uff0c\u770b\u5230\u6709\u4e24\u4e2a\u5f0f\u5b50\uff0c\u4e8c\u7ef4\u504f\u5e8f\uff1f\u597d\u50cf\u529e\u4e0d\u5230\uff0c\u53cd\u6b63\u6211\u4e0d\u4f1a\n\n\u5982\u4f55**\u5347\u7ef4**\uff0c\u62c6\u5206\u5373\u53ef\n\n\u628a\u539f\u5f0f\u62c6\u6210$a<=x,x<=b,c<=y,y<=d$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u56db\u7ef4\u504f\u5e8f\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u80fd\u4fdd\u8bc1\u7684\n\n\u5c1d\u8bd5**\u964d\u7ef4**\n\n\u5982\u679c\u8fd9\u6837\u5462$a<=x,x<=b,c<=y<=d$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u5176\u4e09\u4e2a\u7ef4\u5ea6\u4e3a\uff1a\n\n$a,b->x$\u5373\u4ee5\u6a2a\u5750\u6807\u4f5c\u4e3a\u7b2c\u4e00\u7ef4\u548c\u7b2c\u4e8c\u7ef4\n\n$c->y$\u5373\u4ee5\u7eb5\u5750\u6807\u4f5c\u4e3a\u7b2c\u4e09\u7ef4\n\n\u800c\u67e5\u8be2\uff0c\u4f9d\u7167\u4e0a\u5f0f\uff0c\u6211\u4eec\u5b9a\u4e49\u5176\u7ef4\u5ea6\n\n\u4ee5$a$\u4e3a\u7b2c\u4e00\u7ef4\uff0c$c$\u4e3a\u7b2c\u4e8c\u7ef4\uff0c$b,d$\u4e3a\u4e09\u7ef4\u548c\u56db\u7ef4\uff08\u67e5\u8be2\u7528\uff09\n\n\u6240\u4ee5\u4e09\u7ef4\u504f\u5e8f\u7684\u5f0f\u5b50\u5c31\u662f\n\n$a_i<=a_j,b_i>=b_j,c_i<=c_j<=d_i$\n\n\u8003\u8651\u91cd\u590d\u5143\u7d20\u7684\u8d21\u732e\u95ee\u9898\uff0c\u8bb0\u5f97\u6392\u5e8f\u65f6\u52a0\u4e0a$c$\u76f8\u540c\uff0c\u6309$d$\u6392\n\n#### \u4e0a\u4ee3\u7801\uff08\u5176\u5b9e\u662f\u8981\u5199\u79bb\u6563\u5316\u7684\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\uff0c\u62ff$O2$\u66ff\u4e86\uff09\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn=5e5+10,maxl=1e7+10;\nstruct node{\n    int a,b,c,d,w,mp;\n}v[2*maxn];\nint n,m,c[maxl],ans[maxn];\nbool cmpy(const node &a,const node &b)\n{\n    return a.b==b.b?(a.c==b.c?a.d<b.d:a.c>b.c):a.b<b.b;\n}\nbool cmpx(const node &a,const node &b)\n{\n    return a.a==b.a?cmpy(a,b):a.a>b.a;\n}\nint lowbit(int x)\n{\n    return x&-x;\n}\nvoid add(int x,int ch)\n{\n    while(x<=maxl-9)\n    {\n        c[x]+=ch;\n        x+=lowbit(x);\n    }\n}\nint sum(int x)\n{\n    int ret=0;\n    while(x)\n    {\n        ret+=c[x];\n        x-=lowbit(x);\n    }\n    return ret;\n}\nvoid cdq(int l,int r)\n{\n    if(l==r)\n        return;\n    int mid=l+r>>1;\n    cdq(l,mid),cdq(mid+1,r);\n    sort(v+l,v+mid+1,cmpy),sort(v+mid+1,v+r+1,cmpy);\n    int i=l,j=mid+1;\n    for(;j<=r;j++)\n    {\n        while(v[i].b<=v[j].b&&i<=mid)\n            add(v[i].c,v[i].w),i++;\n        ans[v[j].mp]+=sum(v[j].d)-sum(v[j].c-1);\n    }\n    for(j=l;j<i;j++)\n        add(v[j].c,-v[j].w);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&v[i].a,&v[i].c);\n        v[i].a++,v[i].c++;\n        v[i].b=v[i].a,v[i].w=1,v[i].d=v[i].mp=0;\n    }\n    for(int i=n+1;i<=n+m;i++)\n    {\n    \tscanf(\"%d%d%d%d\",&v[i].a,&v[i].c,&v[i].b,&v[i].d);\n    \tv[i].a++,v[i].b++,v[i].c++,v[i].d++;\n    \tv[i].w=0,v[i].mp=i-n;\n\t}\n\tsort(v+1,v+n+m+1,cmpx);\n    cdq(1,n+m);\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1540113221,
        "uid": 57045,
        "name": "communist",
        "ccfLevel": 7,
        "title": "P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u5927\u5bb6\u4e3a\u4ec0\u4e48\u628a\u4ed6\u5f53\u6210\u4e00\u4e2a\u9ad8\u7ef4\u95ee\u9898\u505a\u4e86\u3002\n\n\u65e2\u8981cdq\u53c8\u8981\u6570\u636e\u7ed3\u6784\u4ec0\u4e48\u7684\u3002\u3002\n\n\u96be\u9053\u4e0d\u662f\u4e00\u5c42cdq\u5c31\u597d\u4e86\u561b\u3002\n\n\u628a\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u56db\u4e2a\uff0c\u672c\u8d28\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u3002\u3002\u8fd9\u4e2a\u771f\u7684\u6ca1\u4eba\u60f3\u5230\u561b\u3002\u3002\uff1f\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nconst int maxn = 3e6+10;\nstruct qwq {\n\tint x,y,type,ind;\n}query[maxn],tmp[maxn];\nbool cmp (qwq a,qwq b) {\n\tif(a.x==b.x) {\n\t\tif(a.y==b.y) {\n\t\t\treturn a.type<b.type;\n\t\t}\n\t\treturn a.y<b.y;\n\t}\n\treturn a.x<b.x;\n}\nint n,m;\nint cnt = 0;\nint ans[maxn];\ninline void add(int x,int y,int type,int ind) {\n\tquery[cnt].x=x;\n\tquery[cnt].y=y;\n\tquery[cnt].type=type;\n\tquery[cnt].ind=ind;\n\t++cnt;\n}\nvoid cdq(int L,int R) {\n\tif(R-L<=1) return;\n\tint M = (R+L)>>1;\n\tcdq(L,M);cdq(M,R);\n\tint q = L,p = M,o=0;\n\tint sum=0;\n\twhile(q<M&&p<R) {\n\t\tif(query[q].y<=query[p].y) {\n\t\t\tif(query[q].type==0)\n\t\t\t\t++sum;\n\t\t\ttmp[o++]=query[q++];\n\t\t}\n\t\telse {\n\t\t\tif(query[p].type==1) {\n\t\t\t\tans[query[p].ind]-=sum;\n\t\t\t}else if(query[p].type==2) {\n\t\t\t\tans[query[p].ind]+=sum;\n\t\t\t}\n\t\t\ttmp[o++]=query[p++];\n\t\t}\n\t}\n\twhile(q<M) {\n\t\ttmp[o++]=query[q++];\n\t}\n\twhile(p<R) {\n\t\tif(query[p].type==1) {\n\t\t\tans[query[p].ind]-=sum;\n\t\t}else if(query[p].type==2) {\n\t\t\tans[query[p].ind]+=sum;\n\t\t}\n\t\ttmp[o++]=query[p++];\n\t}\n\tfor(int i = 0;i<o;++i) {\n\t\tquery[i+L]=tmp[i];\n\t}\n\treturn;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 0;i<n;++i) {\n\t\tscanf(\"%d%d\",&query[cnt].x,&query[cnt].y);\n\t\tquery[cnt].type=0;\n\t\t++cnt;\n\t}\n\tfor(int i = 0;i<m;++i) {\n\t\t int x1,y1,x2,y2;\n\t\t scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\n\t\t add(x1-1,y1-1,2,i);\n\t\t add(x2,y2,2,i);\n\t\t add(x1-1,y2,1,i);\n\t\t add(x2,y1-1,1,i);\n\t}\n\tstd::sort(query,query+cnt,cmp);\n\tcdq(0,cnt);\n\tfor(int i = 0;i<m;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1544422215,
        "uid": 64618,
        "name": "\u6587\u6587\u6bbf\u4e0b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u5bf9\u4e8e$(x_1,y_1,x_2,y_2)$\u8fd9\u4e2a\u77e9\u5f62\u5185\u7684\u6563\u70b9\n\n\u8bbeF(x,y)\u662f\u6709\u591a\u5c11\u4e2a\u6563\u70b9(a,b)\u6ee1\u8db3a<=x\u4e14b<=y\n\n\u90a3\u4e48\u8fd9\u4e2a\u77e9\u5f62\u4e2d\u70b9\u7684\u6570\u91cf=$F(x_2,y_2)-F(x_1-1,y_2)-F(x_2,y_1-1)+F(x_1-1,y_1-1)$\n\n\u53ef\u4ee5\u628a\u4e00\u4e2a\u67e5\u8be2\u6362\u6210\u56db\u4e2a\u66f4\u7b80\u5355\u7684\u67e5\u8be2\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\n\n\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u6563\u70b9\u4ee5\u53ca\u67e5\u8be2\u7684x\u5750\u6807\u79bb\u6563\u5316\uff0c\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u79bb\u7ebf\u7ef4\u62a4\u6bcf\u4e2a\u7684\u7b54\u6848\n\n\u590d\u6742\u5ea64Nlogn\uff0c\u56e0\u4e3a\u79bb\u6563\u5316\u4ec0\u4e48\u7684\u8fd9\u9898\u5e38\u6570\u7279\u522b\u5927\n\n\u6570\u636e\u4e5f\u7279\u522b\u5927...\n\n\u6700\u540e\u8feb\u4e0d\u5f97\u5df2\u6392\u5e8f\u7528\u6876\u6392(1E7\u7684\u6876)\n\n\u5f00\u4e24\u4e2a\u6876\u6765\u4ee3\u66ff\u79bb\u6563\u5316\u7684lower\\_bound\n\n\u624d\u52c9\u5f3aA\u6389\n\n\u53e6\u5916\u611f\u8c22zhouyonglong\u5927\u5927\u653e\u5bbd\u65f6\u9650\n\n[\u9119\u4eba\u810f\u4e71\u5dee\u7684\u4ee3\u7801](http://paste.ubuntu.com/25444703/)\n",
        "postTime": 1504271572,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]Tree \u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "[\u53e6\u4e00\u79cd\u98df\u7528\u65b9\u5f0f](https://www.cnblogs.com/hhhhalo/p/13811571.html)\n\n## \u9898\u76ee\u63cf\u8ff0\n[\u8fd9\u4e0d\u662f\u4e2a\u94fe\u63a5](https://www.luogu.com.cn/problem/P2163)\n## \u601d\u8def\u5206\u6790\n* \u4e8c\u7ef4\u504f\u5e8f\u9898\uff0c\u5e38\u7528\u65b9\u6cd5\u4e3a\u6811\u72b6\u6570\u7ec4(~~\u7136\u800c\u5e38\u6570\u6709\u4ebf\u70b9\u5927\u9700\u8981\u5438\u53e3\u6c27~~)\n* \u4e3a\u4ec0\u4e48\u662f\u4e8c\u7ef4\u504f\u5e8f\u5462\uff0c\u56e0\u4e3a\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(x,y)$\uff0c\u5176\u5b83\u70b9 $(i,j)$ ,\u53ea\u6709\u540c\u65f6\u6ee1\u8db3 $i<x,j<y$ \u624d\u80fd\u4ea7\u751f\u8d21\u732e\u3002\u5bf9\u4e8e\u6bcf\u4e2a $(x,y)$ \u6211\u4eec\u53ea\u9700\u67e5\u524d\u9762\u6709\u591a\u5c11\u4e2a\u7eb5\u5750\u6807\u5c0f\u4e8e $y$ \u7684\u4e86\uff0c\u7136\u540e\u518d\u66f4\u65b0\u4e00\u4e0b\uff0c\u90fd\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\n* \u4f46\u8fd9\u9898\u8981\u6c42\u662f\u4e00\u4e2a\u77e9\u9635\u8303\u56f4\u5185\uff0c\u53ef\u4ee5\u7c7b\u4f3c\u4e8e\u77e9\u9635\u524d\u7f00\u548c\u7684\u5904\u7406\uff0c\u5c06\u77e9\u9635\u62c6\u6210 $4$ \u4e2a\u70b9\uff1a$(c,d),(c,b-1),(a-1,d),(a-1,b-1)$\u3002\u8003\u8651\u6709\u91cd\u590d\u52a0\u51cf\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\n$$\nquery(c,d)-query(c,b-1)-query(a-1,d)+query(a-1,b-1)\n$$\n* \u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u5c31\u662f\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u7eb5\u5750\u6807\u7684\u5177\u4f53\u503c\uff0c\u6240\u4ee5\u5148\u5c06\u5176\u79bb\u6563\u5316;\u67e5\u8be2\u62c6\u6210\u7684\u5750\u6807\u548c\u6811\u7684\u5750\u6807\u4e00\u8d77\u5b58\u50a8\uff0c\u4e00\u8d77\u6392\u5e8f\uff0c\u7528\u4e00\u4e2a $flag$ \u533a\u5206\u5f00\u662f\u5426\u662f\u67e5\u8be2\u5c31\u597d;\u56e0\u4e3a\u6bcf\u6b21\u67e5\u8be2\u62c6\u6210\u4e86\u56db\u4e2a\u70b9\uff0c\u6240\u4ee5\u52a0\u4e0a\u4e0d\u662f\u67e5\u8be2\u7684\u4e00\u5171\u8981\u5f00**\u4e94\u500d\u7a7a\u95f4**\uff0c\u6211\u56e0\u4e3a\u8fd9\u91cc\u4e00\u76f4 $RE$\n## $Code$\n```c++\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define N 2500005\n#define R register\nusing namespace std;\ninline int read(){\n\tint x = 0,f = 1;\n\tchar ch = getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint n,m,ed,b[N],c[N];\nint ans[N][5],cnt[N];\ninline void update(int x,int val){\n\tfor(;x<=n;x+=x&(-x))c[x] += val;\n}\ninline int query(int x){\n\tint res = 0;\n\tfor(;x;x-=x&(-x))res += c[x];\n\treturn res;\n}\nstruct data{\n\tint x,y,flag;\n\tdata(){}\n\tdata(int _x,int _y,int _flag){x = _x,y = _y,flag = _flag;}\n\tinline bool operator <(const data &a)const{\n\t\tif(x!=a.x)return x<a.x;\n\t    return y==a.y ? flag < a.flag : y < a.y;\n\t}\n}tr[N<<1];\nint main(){\n\tn = read(),m = read();\n\tfor(R int i = 1;i <= n;i++){\n\t\ttr[i].x = read(),tr[i].y = read(),tr[i].flag = 0;\n\t}\n\tfor(R int i = 1;i <= m;i++){\n\t\tint a = read(),b = read(),c = read(),d = read();\n\t\ttr[++n] = data(a-1,b-1,i);\n\t\ttr[++n] = data(c,d,i);\n\t\ttr[++n] = data(c,b-1,i);\n\t\ttr[++n] = data(a-1,d,i);\n\t}\n\tsort(tr+1,tr+1+n);\n\tfor(R int i = 1;i <= n;i++)b[i] = tr[i].y;\n\tsort(b+1,b+1+n);\n\ted = unique(b+1,b+1+n)-(b+1);\n\tfor(R int i = 1;i <= n;i++){\n\t\tint tmp = lower_bound(b+1,b+1+ed,tr[i].y)-b;\n\t\tif(tr[i].flag)ans[tr[i].flag][++cnt[tr[i].flag]] = query(tmp);//\u7528\u4e00\u4e2acnt\u65b9\u4fbf\u8bb0\u5f55\u662f\u62c6\u6210\u7684\u7b2c\u51e0\u4e2a\u70b9\n\t\telse update(tmp,1);\n\t}\n\tfor(R int i = 1;i <= m;i++)printf(\"%d\\n\",ans[i][4]-ans[i][3]-ans[i][2]+ans[i][1]);\n\treturn 0;\n}\n```",
        "postTime": 1602596650,
        "uid": 322491,
        "name": "HH_Halo",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u9996\u5148\u8981\u8ba9\u6811\u7684 $x$ \u5750\u6807\u5728\u4e24\u4e2a\u67e5\u8be2\u70b9\u7684 $x$ \u5750\u6807\u4e4b\u95f4\uff0c\u8fd9\u4e2a\u7684\u8bdd\uff0c\u5c06\u6811\u7684\u7684\u5750\u6807\u6309 $x$ \u5750\u6807\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u4e8c\u5206\u67e5\u627e\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u67e5\u8be2\u8fd9\u4e2a\u533a\u95f4\u5185\u6709\u591a\u5c11 $l,r$ \u4e4b\u95f4\u7684\u6570\u3002\n\n~~\u7136\u540e\u5230\u8fd9\u91cc\u5c31\u5b8c\u4e86\uff0c\u968f\u4fbf\u83ab\u961f/\u4e3b\u5e2d\u6811/\u6811\u5957\u6811\u5c31\u884c\u4e86~~\n\n\u9996\u5148\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u4e8b\u5b9e\u5c31\u662f\u4e0a\u9762\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f $\\le r$ \u7684\u6570\u7684\u4e2a\u6570\uff0c\n\u51cf $\\le l-1$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u53e6\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u4e8b\u5b9e\u5c31\u662f\u5982\u679c\u8fd9\u4e2a\u67e5\u8be2\u7684\u533a\u95f4\u662f $[x,y]$ \u90a3\u4e48\u7b54\u6848\u5c31\u662f $[1,y]-[1,x-1]$\u3002\n\n\u91cd\u70b9\u662f\u7b2c\u4e8c\u70b9\uff0c\u6ee1\u8db3\u533a\u95f4\u53ef\u51cf\u6027\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u5f62\u5982 $[x,y]$ \u7684\u8be2\u95ee\u62c6\u6210 $[1,y]-[1,x-1]$ \u7684\u5f62\u5f0f\uff0c\u626b\u8fc7\u53bb\uff0c\u7136\u540e\u5bf9\u4e8e\u5f62\u5982 $[1,k]$ \u7684\u8be2\u95ee\u6211\u4eec\u4e00\u8d77\u5904\u7406\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff08\u4ee5\u6c42\u533a\u95f4\u7b49\u4e8e $x$ \u7684\u6570\u4e3a\u4f8b\uff09\uff1a\n\n```\nn=5,m=3\n1 2 3 2 1\n1 5 3\n1 5 2\n1 5 1\n```\n\u8fd9\u65f6\u5019\u6211\u4eec\u626b\u5230\u4e86 $5$\uff0c\u53d1\u73b0\u4e86\u6709\u4e09\u4e2a\u5bf9\u4e8e $5$ \u7684\u8be2\u95ee\u3002\n\n\u6211\u4eec\u5e94\u8be5\u7528\u4ec0\u4e48\u7ef4\u62a4 $[1,5]$ \u4e2d\u6709\u591a\u5c11\u4e2a $1,2,3$ \u5462\uff1f\u6570\u7ec4\u8ba1\u6570\uff01\n\n\u90a3\u4e48\u73b0\u5728\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n```\n1 2 3\n2 2 1\n```\n\u505a\u5b8c\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u518d\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u626b\u8fc7\u53bb\u7684\u540c\u65f6\u4e0d\u65ad\u52a0\u5165 $a_k$ \u7684\u5f71\u54cd\uff0c\u7136\u540e\u67e5\u8be2\u6240\u6709\u5f62\u5982 $[1,k]$ \u7684\u8be2\u95ee\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\times \\text{\u52a0\u5165\u590d\u6742\u5ea6}+m\\times \\text{\u67e5\u8be2\u590d\u6742\u5ea6})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u672c\u9898\u5c31\u5e94\u8be5\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e86\u3002\n\n\u6ce8\u610f\u79bb\u6563\u5316\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define lowbit(x) (x&-x)\nusing namespace std;\nstruct node\n{\n\tint x,y;\n\tvoid get()\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t}\n}a[500005];\nint h[1500005];\nbool cmp(node x,node y)\n{\n\treturn x.x<y.x;\n}\nint le;\nvector<pair<int,bool> > lx[1500005];\nnode x[500005],y[500005];\nint t[1500005];\nint l[500005],r[500005];\nint ans[500005];\nvoid add(int x,int v)\n{\n\tfor(;x<=le;x+=lowbit(x))\n\t\tt[x]+=v;\n}\nint ask(int x)\n{\n\tint s=0;\n\tfor(;x;x-=lowbit(x))\n\t\ts+=t[x];\n\treturn s;\n}\nint main()\n{\n\tint n,m,i,j,wz=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t\ta[i].get();\n\tfor(i=0;i<m;i++)\n\t\tx[i].get(),y[i].get();\n\tsort(a+1,a+1+n,cmp);\n\tfor(i=1;i<=n;i++)\n\t\th[i]=a[i].y;\n\twz=n;\n\tfor(i=0;i<m;i++)\n\t\th[++wz]=x[i].y,h[++wz]=y[i].y;\n\tsort(h+1,h+1+wz);\n\tle=unique(h+1,h+1+wz)-h-1;\n\tfor(i=1;i<=n;i++)\n\t\ta[i].y=lower_bound(h+1,h+le+1,a[i].y)-h;\n\tfor(i=0;i<m;i++)\n\t\tx[i].y=lower_bound(h+1,h+le+1,x[i].y)-h,y[i].y=lower_bound(h+1,h+le+1,y[i].y)-h;\n\tfor(i=0;i<m;i++)\n\t{\n\t\tl[i]=lower_bound(a+1,a+1+n,x[i],cmp)-a,r[i]=upper_bound(a+1,a+1+n,y[i],cmp)-a-1;\n\t\tlx[l[i]-1].push_back({i,0});\n\t\tlx[r[i]].push_back({i,1});\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tadd(a[i].y,1);\n\t\tfor(j=0;j<lx[i].size();j++)\n\t\t{\n\t\t\twz=lx[i][j].first;\n\t\t\tif(lx[i][j].second==0)\n\t\t\t\tans[wz]-=ask(y[wz].y)-ask(x[wz].y-1);\n\t\t\telse\n\t\t\t\tans[wz]+=ask(y[wz].y)-ask(x[wz].y-1);\n\t\t}\n\t}\n\tfor(i=0;i<m;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n}\n```\n",
        "postTime": 1600753561,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "# P2163\n## \u9898\u9762\n\u6c42\u4e00\u4e2a\u77e9\u5f62\u7684\u5185\u70b9\u6570\n## \u601d\u8003\n\u8fd9\u4e2a\u9898\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u6a21\u677f\u9898\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e8c\u4f4d\u524d\u7f00\u548c\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u4e00\u4e2a\u67e5\u8be2\u62c6\u4e3a\u56db\u4e2a\u70b9\n\n\u5206\u522b\u662f(x1-1,y1-1),(x1-1,y2),(x2,y1-1),(x2,y2);\n\n\u7136\u540e\u6211\u4eec\u5c06y\u79bb\u6563\u5316\n\n\u5c06\u6240\u6709\u70b9\u548c\u67e5\u8be2\u4f9d\u7167X\u6392\u5e8f\n\n\u4f9d\u6b21\u626b\u8fc7\u53bb\n\n\u7136\u540e\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\uff08\u6811\u72b6\u6570\u7ec4\u4e5f\u884c\uff09\u7ef4\u62a4\u6b64\u523by\u65b9\u5411\u7684\u70b9\n\n\u5c06\u626b\u5230\u7684\u70b9\u52a0\u5165\u6811\u4e2d\n\n## \u4ee3\u7801\n\uff08\u697c\u4e3b\u4f7f\u7528\u4e86\u4e00\u4e2asplay\u6765\u79bb\u6563\u5316\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1500005;\nint f[N],cnt[N],value[N],sons[N][2],sub_size[N],whole_size,root,sumsize;\ninline int read(){\n    register int res=0,k=1;\n    char c=getchar();\n    while(!isdigit(c)){\n        if(c=='-')k=-1;\n        c=getchar();\n    }\n    while(isdigit(c)){\n        res=(res<<1)+(res<<3)+c-48;\n        c=getchar();\n    }\n    return res*k;\n}\ninline void S_Clear(int x){\n    sons[x][0]=sons[x][1]=f[x]=sub_size[x]=cnt[x]=value[x]=0; \n} \ninline bool get_which(int x){\n\treturn sons[f[x]][1]==x;\n} \ninline void update(int x){\n\tif(x){\n\t\tsub_size[x]=cnt[x];\n\t\tif(sons[x][0]) sub_size[x]+=sub_size[sons[x][0]];  \n\t\tif(sons[x][1]) sub_size[x]+=sub_size[sons[x][1]];\n\t}\n\treturn;\n}  \ninline void rotate(int x){\n\tint father=f[x],g_father=f[father],which_son=get_which(x);\n\tsons[father][which_son]=sons[x][which_son^1];\n\tf[sons[father][which_son]]=father;\n\tsons[x][which_son^1]=father;\n\tf[father]=x;\n\tf[x]=g_father;\n\tif(g_father){\n\t\tsons[g_father][sons[g_father][1]==father]=x;\n\t}\n\tupdate(father);\n\tupdate(x);\n}\ninline void splay(int x){\n\tfor(int fa;fa=f[x];rotate(x))\n\t\tif(f[fa])\n\t\t\trotate((get_which(x)==get_which(fa)?fa:x));\n\troot=x; \n}\ninline void insert(int x){\n\tif(!root){\n        whole_size++;\n        sons[whole_size][0]=sons[whole_size][1]=f[whole_size]=0;\n        root=whole_size;\n        sub_size[whole_size]=cnt[whole_size]++;\n        value[whole_size]=x;\n        return ;\n    } \n    int now=root,fa=0;\n    while(1){\n        if(x==value[now]){\n        \tsumsize--;\n        \tbreak; \n        }\n        fa=now;\n        now=sons[now][value[now]<x];\n        if(!now){\n            whole_size++;\n            sons[whole_size][0]=sons[whole_size][1]=0;\n            f[whole_size]=fa;\n            sub_size[whole_size]=cnt[whole_size]=1;\n            sons[fa][value[fa]<x]=whole_size;\n            value[whole_size]=x;\n            update(fa);\n            splay(whole_size);\n            break; \n        }\n    }\n} \ninline int find_rank(int x){\n    int now=root,ans=0;  \n    while(1){  \n        if (x<value[now])  \n          now=sons[now][0];  \n        else{  \n            ans+=(sons[now][0]?sub_size[sons[now][0]]:0);  \n            if (x==value[now]){  \n                splay(now); return ans+1;  \n            }  \n            ans+=cnt[now];  \n            now=sons[now][1];  \n        }  \n    }  \n} \nconst int maxn=500005;\nint sum[N<<2];\ninline void pushup(int o){\n\tsum[o]=sum[o<<1]+sum[o<<1|1];\n\treturn ;\n}\ninline void change(int o,int l,int r,int q,int k){\n\tif(l==r){\n\t\tsum[o]+=k;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(q<=mid) change(o<<1,l,mid,q,k);\n\tif(q>mid) change(o<<1|1,mid+1,r,q,k);\n\tpushup(o);\n}\nint query(int o,int l,int r,int ql,int qr){\n\tif(ql<=l&&qr>=r)return sum[o];\n\tint ans=0;\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) ans+=query(o<<1,l,mid,ql,qr);\n\tif(qr>mid) ans+=query(o<<1|1,mid+1,r,ql,qr);\n\treturn ans;\n}\nint n,m,x[maxn],y[maxn],a[maxn],b[maxn],c[maxn],d[maxn],ans[maxn][4],tot;\nstruct _node{\n\tint x,y,o,wh;\n\tfriend bool operator <(_node aa,_node bb){\n\t\tif(aa.x==bb.x) return aa.o<bb.o;\n\t\treturn aa.x<bb.x;\n\t}\n}node[maxn*5];\nvoid work(){\n\tsort(node+1,node+tot+1);\n\tfor(int i=1;i<=tot;i++){\n\t\tif(!node[i].o)change(1,1,sumsize,node[i].y,1);\n\t\telse{\n\t\t\tif(node[i].y==0) ans[node[i].o][node[i].wh]=0;\n\t\t\telse ans[node[i].o][node[i].wh]=query(1,1,sumsize,1,node[i].y);\n\t\t}\n\t}\n}\nint main(){\n\tn=read();m=read();\n    for(int i=1;i<=n;i++){\n    \tx[i]=read();\n    \ty[i]=read();\n    \tinsert(y[i]);\n    \tsumsize++;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\ta[i]=read();\n\t\tb[i]=read();\n\t\tc[i]=read();\n\t\td[i]=read();\n\t\tinsert(b[i]-1);\n\t\tinsert(d[i]);\n\t\tsumsize+=2;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tnode[++tot].x=x[i];\n\t\tnode[tot].y=find_rank(y[i]);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tnode[++tot].x=a[i]-1;node[tot].y=find_rank(b[i]-1);node[tot].o=i;node[tot].wh=0;\n\t\tnode[++tot].x=a[i]-1;node[tot].y=find_rank(d[i]);node[tot].o=i;node[tot].wh=1;\n\t\tnode[++tot].x=c[i];node[tot].y=find_rank(b[i]-1);node[tot].o=i;node[tot].wh=2;\n\t\tnode[++tot].x=c[i];node[tot].y=find_rank(d[i]);node[tot].o=i;node[tot].wh=3;\n\t}\n\twork();\n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%d\\n\",ans[i][0]+ans[i][3]-ans[i][1]-ans[i][2]);\n\t}\n    return 0;\n}\n```\n\u795d\u5927\u5bb6csps.rp++\n",
        "postTime": 1573378399,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "## \u770b\u672c\u9898\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\uff0c\u672c\u849f\u84bb\u6765\u6c34\u4e00\u6ce2\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\n### \u672c\u9898\u601d\u8def\n![\u5982\u56fe](https://i.loli.net/2019/07/07/5d218043a598612737.png)\n  \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u77e9\u5f62\uff08\u7ea2\u8272\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5176\u5de6\u8fb9\u81f3\u7eb5\u5750\u6807\u7684\u4e00\u4e2a\u77e9\u5f62\uff08\u7eff\u8272\uff09\uff0c\u7528\u7ea2\u8272\u77e9\u5f62\u548c\u7eff\u8272\u77e9\u5f62\u4e2d\u6240\u6709\u7684\u70b9\uff08\u5373\u6811\u6728\uff09\u51cf\u53bb\u7eff\u8272\u77e9\u5f62\u4e2d\u7684\u6240\u6709\u70b9\uff08\u5373\u6811\u6728\uff09\uff0c\u6240\u5f97\u5230\u7684\u7b54\u6848\u5373\u4e3a\u7ed9\u5b9a\u77e9\u5f62\u4e2d\u7684\u6570\u76ee\u4e2a\u6570\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u51cf\u53bb\u7eff\u8272\u77e9\u5f62\u4e2d\u70b9\u7684\u6811\u6728\uff0c\u5728\u52a0\u4e0a\u7eff\u8272\u77e9\u5f62\u4e0e\u7ea2\u8272\u77e9\u5f62\u4e2d\u70b9\u7684\u603b\u6570\u76ee\u3002\n  \n  \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811+\u626b\u63cf\u7ebf~~\u5f88\u8f7b\u677e~~\u7684\u8fc7\u6389\u3002\n  \n  \u6ce8\uff1a\u7ea2\u8272\u77e9\u5f62\u7684\u5de6\u8fb9\u5373\u4e3a\u7eff\u8272\u77e9\u5f62\u7684\u53f3\u8fb9\uff0c\u5c11\u753b\u4e86......\n  \n###   \u672c\u9898\u5199\u6cd5\n\u5148\u79bb\u6563\u5316\uff0c\u5728\u4ece\u5de6\u5f80\u53f3\u8fd0\u7528\u626b\u63cf\u7ebf\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u70b9\u7684\u4e2a\u6570\n\n## code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,ans[1000001],len[4000001];//len\u7528\u6765\u5b9e\u73b0\u79bb\u6563\u5316\nstruct data{\n    int x,y;\n};\ndata xy[1000001];//\u8bb0\u5f55\u70b9\u7684\u5750\u6807\nstruct data1{\n    int p1,q1,p2,q2,f;\n} num[1000001];//\u8bb0\u5f55\u7ed9\u5b9a\u77e9\u5f62\u7684\u5750\u6807\nstruct node{\n    int sum;\n} tree[4000001];\nint cmp(const data &p,const data &q) {//\u6309\u6a2a\u5750\u6807\u4e3a\u70b9\u7684\u5750\u6807\u6392\u5e8f\n    return p.x<q.x;\n}\nint cmp2(const data1 &p,const data1 &q) {\n    return p.p1<q.p1;\n}\nint cmp3(const data1 &p,const data1 &q) {\n    return p.p2<q.p2;\n}\nvoid push_up(int rt) {\n    tree[rt].sum=tree[rt*2].sum+tree[rt*2+1].sum;\n}\nvoid add(int rt,int l,int r,int x) {  //\u52a0\u70b9\n    if(l==r) {\n        if(l==x) tree[rt].sum+=1;\n        return ;\n    }\n    int mid=(l+r)/2;\n    if(x<=mid) add(rt*2,l,mid,x);\n    if(x>mid) add(rt*2+1,mid+1,r,x);\n    push_up(rt);\n}\nint ask(int rt,int l,int r,int x,int y) { //\u6c42\u51fa\u5f53\u524d\u77e9\u5f62\u4e2d\u70b9\u7684\u603b\u6570\n    if(x<=l && y>=r) {\n        return tree[rt].sum;\n    }\n    int mid=(l+r)/2;\n    int ret=0;\n    if(x<=mid) ret+=ask(rt*2,l,mid,x,y);\n    if(y>mid) ret+=ask(rt*2+1,mid+1,r,x,y);\n    push_up(rt);\n    return ret;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    int sum=0;\n    for(int i=1;i<=n;i++) {\n        scanf(\"%d%d\",&xy[i].x,&xy[i].y);\n        xy[i].x+=1;xy[i].y+=1;\n        len[++sum]=xy[i].x;len[++sum]=xy[i].y;\n    }\n    for(int i=1;i<=m;i++) {\n        int a,b,c,d;\n        scanf(\"%d%d%d%d\",&a,&b,&c,&d);\n        a+=1;b+=1;c+=1;d+=1;\n        num[i].p1=a;num[i].q1=b;num[i].p2=c;num[i].q2=d;num[i].f=i;\n        len[++sum]=a;len[++sum]=b;\n        len[++sum]=c;len[++sum]=d;\n    } //\u79bb\u6563\u5316\n    sort(len+1,len+sum+1);\n    int size=unique(len+1,len+sum+1)-len-1;\n    for(int i=1;i<=n;i++) {\n        xy[i].x=lower_bound(len+1,len+size+1,xy[i].x)-len;\n        xy[i].y=lower_bound(len+1,len+size+1,xy[i].y)-len;\n    }\n    for(int i=1;i<=m;i++) {\n     \tnum[i].p1=lower_bound(len+1,len+size+1,num[i].p1)-len;\n     \tnum[i].q1=lower_bound(len+1,len+size+1,num[i].q1)-len;\n     \tnum[i].p2=lower_bound(len+1,len+size+1,num[i].p2)-len;\n     \tnum[i].q2=lower_bound(len+1,len+size+1,num[i].q2)-len;\n    }\n    sort(xy+1,xy+n+1,cmp);\n    sort(num+1,num+m+1,cmp2);\n    int tot=0;\n    for(int i=1;i<=m;i++) { //\u51cf\u53bb\u7eff\u8272\u77e9\u5f62\u4e2d\u70b9\u7684\u6570\u76ee\n        while(num[i].p1>xy[tot+1].x && tot<=n) {\n            tot+=1;\n            add(1,1,n,xy[tot].y);\n        }\n        ans[num[i].f]-=ask(1,1,n,num[i].q1,num[i].q2);\n    }\n    memset(tree,0,sizeof(tree));\n    sort(num+1,num+m+1,cmp3);\n    tot=0;\n    for(int i=1;i<=m;i++) {//\u52a0\u4e0a\u7ea2\u8272\u77e9\u5f62\u4e0e\u7eff\u8272\u77e9\u5f62\u4e2d\u70b9\u7684\u603b\u6570\n        while(num[i].p2>=xy[tot+1].x && tot<=n) {\n            tot+=1;\n            add(1,1,n,xy[tot].y);\n        }\n        ans[num[i].f]+=ask(1,1,n,num[i].q1,num[i].q2);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1562482565,
        "uid": 55844,
        "name": "x122",
        "ccfLevel": 0,
        "title": "P2163 [SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u9898\u89e3"
    },
    {
        "content": "\u3002\u3002\u3002\u5c45\u7136\u6ca1\u6709\u770b\u5230\u4e3b\u5e2d\u6811\u9898\u89e3\u3002\n\n\u8fd9\u5dee\u4e0d\u591a\u5c31\u662f\u4e00\u9053\u4e3b\u5e2d\u6811\u7684\u677f\u9898\u4e86\u3002\n\n\u9996\u5148\u5bf9x\u6392\u5e8f\uff0c\u7136\u540e\u52a8\u6001\u5f00\u70b9\u4e00\u4e2a\u4e00\u4e2a\u7684insert\u8fdb\u53bb\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u76f4\u63a5\u5c31\u4e8c\u5206\u53d6\u51fa\u6a2a\u8f74\u7684\u8303\u56f4l\u548cr\n\n\u7136\u540e\u8be2\u95eeroot[r]-root[l-1]\u5c31\u597d\u4e86\n\n```cpp\n#pragma GCC diagnostic error \"-std=c++11\"\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#define ls (data[rt].l)\n#define rs (data[rt].r)\n#define SIZE_CHECKER(x, y) ((size[son[x]] < size[y]) && (son[x] = y))\n#define PII pair < int , int >\n#define PLL pair < LL, LL >\n#define mid ((l + r) >> 1)\n#define mp make_pair\n#define fir first\n#define sec second\n#define pb push_back\n#define R register\n\nusing namespace std;\n#ifndef __int8\n\ttypedef char __int8;\n#endif\n#ifndef __uint8\n\ttypedef unsigned char __uint8;\n#endif\n#ifndef __int16\n\ttypedef short __int16;\n#endif\n#ifndef __uint16\n\ttypedef unsigned short __uint16;\n#endif\n#ifndef __int32\n\ttypedef int __int32;\n#endif\n#ifndef __int64\n\ttypedef long long __int64;\n#endif\n#ifndef __uint32\n\ttypedef unsigned int __uint32;\n#endif\n#ifndef __uint64\n\ttypedef unsigned long long __uint64;\n#endif\n\n#define io_e '\\0'\n#define io_s ' '\n#define io_l '\\n'\n #define _DEBUG_ 1 // debug toggle\nnamespace Fast_IO {\n    #ifndef _DEBUG_\n        #define gc() (iS == iT ? (iT = (iS = ibuff) + fread(ibuff, 1, SIZ, stdin), (iS == iT ? EOF : *iS++)) : *iS++)\n    #else\n        #define gc() getchar()\n    #endif\n    const int SIZ = 1 << 21 | 1;\n    char *iS, *iT, ibuff[SIZ], obuff[SIZ], *oS = obuff, *oT = oS + SIZ - 1, fu[110], c;\n    int fr;\n    inline void ioout() {\n        fwrite(obuff, 1, oS - obuff, stdout);\n        oS = obuff;\n    }\n    template <class Type>\n    inline void read(Type& x) {\n        x = 0;\n        Type y = 1;\n        for (c = gc(); (c > '9' || c < '0') && c ^ '-'; c = gc())\n            ;\n        c == '-' ? y = -1 : x = (c & 15);\n        for (c = gc(); c >= '0' && c <= '9'; c = gc()) x = x * 10 + (c & 15);\n        x *= y;\n    }\n    inline bool blank(char ch) { return ch == ' ' || ch == '\\n' || ch == '\\r' || ch == '\\t'; }\n    inline void read(char* s) {\n        register char ch = gc();\n        for (; blank(ch); ch = gc())\n            ;\n        for (; !blank(ch); ch = gc()) *s++ = ch;\n        *s = 0;\n    }\n    inline void read(char& c) {\n        for (c = gc(); blank(c); c = gc())\n            ;\n    }\n    template <typename Type, typename... Args>\n    inline void read(Type& t, Args&... args) {\n        read(t), read(args...);\n    }\n    template <typename... Args>\n    inline void read(char* t, Args&... args) {\n        read(t), read(args...);\n    }\n    template <typename... Args>\n    inline void read(char& t, Args&... args) {\n        read(t), read(args...);\n    }\n    template <class Type>\n    inline void write(char lastChar, Type x) {\n        if (x < 0)\n            *oS++ = '-', x = -x;\n        if (x == 0)\n            *oS++ = '0';\n        while (x) fu[++fr] = x % 10 + '0', x /= 10;\n        while (fr) *oS++ = fu[fr--];\n        *oS++ = lastChar;\n        ioout();\n    }\n    inline void write(char lastChar, char x[]) {\n        for (register int i = 0; x[i]; ++i) *oS++ = x[i];\n        *oS++ = lastChar;\n        ioout();\n    }\n    inline void write(char lastChar, char x) {\n        *oS++ = x;\n        *oS++ = lastChar;\n        ioout();\n    }\n    template <typename Type, typename... Args>\n    inline void write(char midChar, Type t, Args... args) {\n        write(midChar, t), write(midChar, args...);\n    }\n}  // namespace Fast_IO\n\nusing Fast_IO::read;\nusing Fast_IO::write;\n\nconst int SIZE = 5e5 + 5;\nconst int INF = 1e7;\nint n, m, tot, rt[SIZE];\nstruct TreeNode {\n\tint l, r;\n\tint sum;\n} data[SIZE << 5];\nstruct TwoNode {\n\tint x, y;\n} ints[SIZE];\nstruct BinarySeach {\n\tint upper_bound(int x) {\n\t\tint l = 1, r = n + 1;\n\t\twhile (l < r - 1) if (ints[mid].x > x) r = mid; else l = mid;\n\t\treturn l;\n\t}\n\t\n\tint lower_bound(int x) {\n\t\tint l = 0, r = n;\n\t\twhile (l < r - 1) if (ints[mid].x >= x) r = mid; else l = mid;\n\t\treturn r;\n\t}\n} BS;\n\nbool cmp(const TwoNode& x, const TwoNode& y) {\n\treturn x.x < y.x;\n}\n\nvoid update(int &rt, int l, int r, int x) {\n\tdata[++tot] = data[rt];\n\t++data[rt = tot].sum;\n\tif (l ^ r) if (mid >= x) update(ls, l, mid, x); else update(rs, mid + 1, r, x); else return ;\n}\n\nint queryf(int rt, int l, int r, int x, int y) {\n\tif (l > y || r < x || !rt) return 0;\n\telse if (l >= x && r <= y) return data[rt].sum;\n\telse return queryf(ls, l, mid, x, y) + queryf(rs, mid + 1, r, x, y);\n}\n\nsigned main() {\n\tread(n, m);\n\tfor (int i = 1; i <= n; ++i) read(ints[i].x, ints[i].y);\n\tsort(ints + 1, ints + 1 + n, cmp);\n\tfor (int i = 1; i <= n; ++i) update(rt[i] = rt[i - 1], 0, INF, ints[i].y);\n\tfor (int i = 1, a, b, c, d; i <= m; ++i) {\n\t\tread(a, b, c, d);\n\t\twrite(io_l, queryf(rt[BS.upper_bound(c)], 0, INF, b, d) - queryf(rt[BS.lower_bound(a) - 1], 0, INF, b, d));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1581576193,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u4e00\u773c\u770b\u4e0a\u53bb\u5c31\u5f88\u6c34\u554a\u3002\u3002\u5750\u6807\u80af\u5b9a\u662f\u8981\u79bb\u6563\u5316\u7684\u3002\u3002\u8be2\u95ee\u8ddf\u7740\u4e00\u8d77\u79bb\u6563\u5316\u3002\u3002\u7136\u540e\u4ee5y\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cx\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u5de6\u4e0b\u89d2\u6709\u591a\u5c11\u4e2a\u70b9\u3002\u7136\u540e\u52a0\u52a0\u51cf\u51cf\u3002\u3002\n\n\n\u79bb\u6563\u5316\u7684\u7ec6\u8282\u8c8c\u4f3c\u5f88\u6076\u5fc3\u3002\u3002\u8c03\u7740\u8c03\u7740\u5c31A\u4e86\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nchar buf[20000000],*pt=buf,*o=buf;\n\ninline int getint(){\n    int s=0,f=1; while((*pt!='-')&&(*pt<'0'||*pt>'9'))pt++;\n    if(*pt=='-')f=-1,pt++; while(*pt>='0'&&*pt<='9')s=s*10+*pt++-48; return s*f;\n}\ninline void print(int x){\n    char str[30],*p=str; if(!x)*o++=48;\n    else{ while(x) *p++=x%10+48,x/=10; while(p--!=str)*o++=*p;}\n}\n\nstruct point{\n    int x,y,id;\n    point(){\n        id = -1;\n    };\n    point(int _x,int _y,int _id){\n        x = _x, y = _y, id = _id;\n    }\n}p[2800010];\n\nbool cmp(point a,point b){\n    if(a.y == b.y){\n        if(a.x == b.x)  return a.id < b.id;\n        else    return a.x < b.x;\n    }\n    return a.y < b.y;\n}\n\nint n,m,N,P,pc = 0;\nint X[810000],Y[810000],bx[810000],by[810000],bit[2800000],cnt[2800000];\n\nvoid upd(int x){\n    for(;x <= N;x += x & -x)    bit[x] ++;\n}\nint query(int x){\n    int r = 0;\n    for(;x;x -= x & -x) r += bit[x];\n    return r;\n}\n\nint main(){\n    fread(buf,1,20000000,stdin);\n    n = getint(); m = getint();\n    bx[0] = by[0] = 0;\n    N = n + 1;\n    P = (m << 2) + n;\n    bx[N] = by[N] = 12345678;\n    \n    for(int i = 1;i <= n;i ++){\n        X[i] = getint();\n        Y[i] = getint();\n        bx[i] = ++ X[i];  \n        by[i] = ++ Y[i];\n    }\n    sort(bx + 1, bx + n + 1);\n    sort(by + 1, by + n + 1);\n    int cx = unique(bx , bx + n + 2) - bx -1;\n    int cy = unique(by , by + n + 2) - by -1;\n    for(int i = 1;i <= n;i ++){\n        p[(m << 2) + i - 1].x = upper_bound(bx,bx + cx,X[i]) - bx;\n        p[(m << 2) + i - 1].y = upper_bound(by,by + cy,Y[i]) - by;\n    }\n    int x1,y1,x2,y2,X1,X2,X3,Y1,Y2,Y3;\n    for(int i = 1;i <= m;i ++){\n        x1=  getint(); y1=getint();x2=getint();y2=getint();\n        X1 = upper_bound(bx,bx + cx,x1) - bx;\n        X2 = upper_bound(bx,bx + cx,x2) - bx;\n        X3 = upper_bound(bx,bx + cx,x2 + 1) - bx;\n        Y1 = upper_bound(by,by + cy,y1) - by;\n        Y2 = upper_bound(by,by + cy,y2) - by;\n        Y3 = upper_bound(by,by + cy,y2 + 1) - by;\n        p[pc] = point(X3,Y3,pc ++);\n        p[pc] = point(X1,Y3,pc ++);\n        p[pc] = point(X3,Y1,pc ++);\n        p[pc] = point(X1,Y1,pc ++);\n    }\n    \n    sort(p,p + P,cmp);\n    for(int i = 0;i < P;i ++){\n        if(~ p[i].id)   cnt[p[i].id] = query(p[i].x);\n        else    upd(p[i].x);\n    }\n    \n    for(int i = 1;i <= m;i ++)\n       print(cnt[i - 1 << 2] - cnt[(i - 1 << 2) + 1] - cnt[(i - 1 << 2) + 2] + cnt[(i - 1 << 2) + 3]),*o++='\\n';\n        \n    return fwrite(buf,1,o-buf,stdout),0;\n}\n```",
        "postTime": 1445258375,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]Tree \u56ed\u4e01\u7684\u70e6\u607c\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u626b\u63cf\u7ebf\u505a\u6cd5\n\n\u9996\u5148\u80af\u5b9a\u662f\u8981\u79bb\u6563\u5316\u7684\uff0c\u4e4b\u540e\u5c06\u70b9\u4e0e\u6240\u6c42\u77e9\u5f62\u6309x\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5199\u4e86\n\n\u53ef\u4ee5\u5148\u770b\u8fd9\u9053\uff1a[P1856 [USACO5.5]\u77e9\u5f62\u5468\u957fPicture](https://www.luogu.org/problemnew/show/P1856)\n\n\u6ce8\u610f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\u7684\u5904\u7406\u4e2d\u8981\u5148\u5c06\u7b2c\u4e8c\u6761\u8fb9\u7ed3\u7b97\u6389\n\n\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\u7684\u4e0a\u8fb9\u4e0e\u4e0b\u8fb9\uff0c\u8981\u5206\u522b\u8bb0\u4e0b\u5f53\u65f6\u7684\u533a\u95f4\u548c\uff0c\u6700\u540e\u505a\u5dee\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500001\n#define rint register int \nusing namespace std;\n\nstruct node{\n    int x, y, y2, z, ans, num;\n    bool operator < (const node &a) const\n    {\n        return x < a.x || (x == a.x && z < a.z);\n    }\n}q[N * 2];\n\nstruct data{\n    int x, y;\n    bool operator < (const data &a) const\n    {\n        return x < a.x;\n    }\n}d[N];\n\nint n, m, l1, l2;\nint tx[3 * N], ty[3 * N], tree[N << 2];\n\nvoid read(rint &a)\n{\n    int res = 0, zf = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n    {\n        ch = getchar();\n        if(ch == '-') zf = -1;\n    }\n    while(ch >= '0' && ch <= '9') res = res * 10 + ch - '0', ch = getchar();\n    a = res * zf;\n}\n\nvoid out(rint a)\n{\n    if(a < 10)\n    {\n        putchar(a % 10 + '0');\n        return;\n    }\n    out(a / 10);\n    putchar(a % 10 + '0');\n}\n\nint js(rint x)\n{\n    return (x & -x);\n}\n\nint lower_bound(rint *a, rint l, rint r, rint x)//\u624b\u5199\uff0c\u4e0d\u7136\u8d85\u65f6\n{\n    while(l <= r)\n    {\n        rint mid = (l + r) >> 1;\n        if(a[mid] > x) r = mid - 1;\n        else if(a[mid] < x) l = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\n\nvoid zx(rint &x)\n{\n    x = lower_bound(tx, 1, l1, x);\n}\n\nvoid zy(rint &y)\n{\n    y = lower_bound(ty, 1, l2, y);\n}\n\nvoid change(rint x, rint y)\n{\n    for(; x <= n; x += js(x))\n        tree[x] += y;\n}\n\nint query(rint x)\n{\n    int ret = 0;\n    for(; x; x -= js(x)) ret += tree[x];\n    return ret;\n}\n\nbool cmp(node l, node r)\n{\n    return l.num < r.num;\n}\n\nint main()\n{\n    read(n), read(m);\n    for(rint i = 1; i <= n; i++) read(d[i].x), read(d[i].y), tx[++l1] = d[i].x, ty[++l2] = d[i].y;\n    for(rint i = 1; i <= m; i++)\n    {\n        read(q[i].x), read(q[i].y), read(q[m + i].x), read(q[m + i].y2);\n        q[i].z = 1, q[m + i].z = 2, q[i].num = m + i, q[m + i].num = i;\n        q[i].y2 = q[m + i].y2, q[m + i].y = q[i].y;\n        tx[++l1] = q[i].x, tx[++l1] = q[m + i].x;\n        ty[++l2] = q[i].y, ty[++l2] = q[m + i].y2;\n    }\n    sort(tx + 1, tx + l1 + 1), sort(ty + 1, ty + l2 + 1);\n    l1 = unique(tx + 1, tx + l1 + 1) - tx - 1, l2 = unique(ty + 1, ty + l2 + 1) - ty - 1;\n    //\u79bb\u6563\u5316\n    for(rint i = 1; i <= n; i++) zx(d[i].x), zy(d[i].y);\n    for(rint i = 1; i <= 2 * m; i++) zx(q[i].x), zy(q[i].y), zy(q[i].y2);\n    sort(d + 1, d + n + 1), sort(q + 1, q + m + m + 1);\n    for(rint i = 1, j = 1; j <= 2 * m; )\n    {\n        if(q[j].z == 2)//\u7b2c\u4e8c\u6761\u8fb9\n        {\n            if(i <= n && d[i].x <= q[j].x) change(d[i].y, 1), i++;\n            else q[j].ans = query(q[j].y2) - query(q[j].y - 1), j++;\n        }\n        else//\u7b2c\u4e00\u6761\u8fb9\n        {\n            if(i <= n && d[i].x < q[j].x) change(d[i].y, 1), i++;\n            else q[j].ans = query(q[j].y2) - query(q[j].y - 1), j++;\n        }\n    }\n    sort(q + 1, q + m + m + 1, cmp);\n    for(rint i = 1; i <= m; i++) out(q[i].ans - q[m + i].ans), putchar('\\n');\n    return 0;\n}\n```\n",
        "postTime": 1562416124,
        "uid": 98468,
        "name": "abs001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2163 \u3010[SHOI2007]\u56ed\u4e01\u7684\u70e6\u607c\u3011"
    }
]