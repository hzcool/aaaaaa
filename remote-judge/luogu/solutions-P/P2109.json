[
    {
        "content": "\u6807\u7b7e: \u77e9\u9635\u6811\u5b9a\u7406, \u9ad8\u65af\u6d88\u5143, \u77e9\u9635\u5feb\u901f\u5e42.\n\n(\u5c31\u6211\u4e00\u4e2a\u8001\u5b9e\u4eba\u771f\u7684\u6309\u7167\u9898\u76ee\u8bb2\u7684\u77e9\u9635\u6811\u5b9a\u7406\u505a\u7684\u5417?\n\n#### Part 1 \u89c2\u5bdf\u77e9\u9635\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba8\u8bba, \u4ee4 $k=3$ , \u5176\u4f59\u60c5\u51b5\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u63a8\u5e7f.\n\n\u6211\u4eec\u8003\u8651 $n=9$ \u65f6\u7684\u57fa\u5c14\u970d\u592b\u77e9\u9635(\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf~~\u61d2\u5f97\u6253~~,\u503c\u4e3a $0$ \u7684\u4f4d\u7f6e\u7528\u7a7a\u8868\u793a):\n$$\n\\left[\n\\begin {matrix}\n3&-1&-1&-1&&&&&\\\\\n-1&4&-1&-1&-1&&&&\\\\\n-1&-1&5&-1&-1&-1&&&\\\\\n-1&-1&-1&6&-1&-1&-1&&\\\\\n&-1&-1&-1&6&-1&-1&-1&\\\\\n&&-1&-1&-1&6&-1&-1&-1\\\\\n&&&-1&-1&-1&5&-1&-1\\\\\n&&&&-1&-1&-1&4&-1\\\\\n&&&&&-1&-1&-1&3\n\\end {matrix}\n\\right]\n$$\n\n\u60ca\u8bb6(\u5e76\u4e0d)\u5730\u53d1\u73b0\u77e9\u9635\u7684 $k+1\\sim n-k$ \u884c\u90fd\u662f\u7531 $k$ \u4e2a $-1$ , \u4e00\u4e2a $2k$ \u548c  $k$ \u4e2a $-1$ \u62fc\u63a5\u800c\u6210\u7684.\n\n\u6c42\u884c\u5217\u5f0f\u901a\u5e38\u9700\u8981\u5c06\u77e9\u9635\u6d88\u6210\u4e0a\u4e09\u89d2\u7684\u5f62\u5f0f, \u5e76\u5c06\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u76f8\u4e58, \u6211\u4eec\u901a\u8fc7\u82e5\u5e72\u6b21\u4ea4\u6362\u4e24\u884c\u5c06\u77e9\u9635\u53d8\u6210\u5982\u4e0b\u5f62\u5f0f:\n$$\n\\left[\n\\begin {matrix}\n-1&-1&-1&6&-1&-1&-1&&\\\\\n&-1&-1&-1&6&-1&-1&-1&\\\\\n3&-1&-1&-1&&&&&\\\\\n-1&4&-1&-1&-1&&&&\\\\\n-1&-1&5&-1&-1&-1&&&\\\\\n&&-1&-1&-1&6&-1&-1&-1\\\\\n&&&-1&-1&-1&5&-1&-1\\\\\n&&&&-1&-1&-1&4&-1\\\\\n&&&&&-1&-1&-1&3\n\\end {matrix}\n\\right]\n$$\n\u8fd9\u91cc\u77e9\u9635\u6709\u70b9\u5c0f, \u53ef\u80fd\u770b\u4e0d\u51fa\u8fd9\u4e48\u4ea4\u6362\u7684\u76ee\u7684, \u8003\u8651\u4e00\u4e2a $n$ \u8f83\u5927\u7684\u60c5\u51b5( $n=17$ ):\n$$\n\\left[\n\\begin {matrix}\n-1&-1&-1&6&-1&-1&-1&&\\\\\n&-1&-1&-1&6&-1&-1&-1&\\\\\n&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n&&&&&&&&&-1&-1&-1&6&-1&-1&-1&\\\\\n3&-1&-1&-1&&&&&\\\\\n-1&4&-1&-1&-1&&&&\\\\\n-1&-1&5&-1&-1&-1&&&\\\\\n&&&&&&&&&&-1&-1&-1&6&-1&-1&-1\\\\\n&&&&&&&&&&&-1&-1&-1&5&-1&-1\\\\\n&&&&&&&&&&&&-1&-1&-1&4&-1\\\\\n&&&&&&&&&&&&&-1&-1&-1&3\n\\end {matrix}\n\\right]\n$$\n\u6211\u4eec\u53d1\u73b0\u77e9\u9635\u7684\u524d $n-2k-1$ \u884c\u5df2\u7ecf\u5f62\u6210\u4e86\u4e00\u4e2a '\u5929\u7136' \u7684\u4e0a\u4e09\u89d2, \u5e76\u4e14\u8fd9 $n-2k-1$ \u884c\u7684\u5f62\u5f0f\u90fd\u5341\u5206\u76f8\u4f3c: $k$ \u4e2a $-1$ , $1$ \u4e2a $2k$ \u548c $k$ \u4e2a$-1$ \u4e00\u6b21\u62fc\u63a5\u800c\u6210. \n\n#### Part 2 \u9ad8\u65af\u6d88\u5143\n\n\u6211\u4eec\u8003\u8651\u5c06\u77e9\u9635\u7684\u7528\u524d $n-2k-1$ \u884c\u53bb\u6d88\u5143\u7b2c $n-2k\\sim n-k-1$ \u884c\u8fc7\u7a0b. \u7531\u4e8e\u524d $n-2k-1$ \u884c\u975e $0$ \u4f4d\u7f6e\u4e2a\u6570\u90fd\u4e3a $2k+1$ \u4e14\u975e $0$ \u7684\u4f4d\u7f6e\u5177\u6709\u7279\u6b8a\u6027, \u6240\u4ee5\u6d88\u5143\u7684\u8fc7\u7a0b\u4e2d\u88ab\u6d88\u7684\u884c\u5411\u91cf\u975e $0$ \u4f4d\u7f6e\u6570\u91cf\u59cb\u7ec8\u4e0d\u5927\u4e8e $2k$ (\u4f46\u662f\u6bcf\u6d88\u4e00\u6b21\u6574\u4f53\u5411\u53f3\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e), \u8003\u8651**\u4e00\u6b21\u6d88\u5143**\u8fd9 $2k$ \u4e2a\u7684\u503c\u662f\u5982\u4f55\u53d8\u5316\u7684: \u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u884c\u5411\u91cf\n\n\n$$\n\\left[\n\\begin {matrix}\na_0&a_1&a_2&a_3&a_4&a_5&0\n\\end {matrix}\n\\right]\n$$\n\n\u4e3a\u4e86\u6d88\u53bb $a0$ , \u52a0\u4e0a\u5982\u4e0b\u884c\u5411\u91cf:\n$$\na_0\\left[\n\\begin {matrix}\n-1&-1&-1&6&-1&-1&-1\n\\end {matrix}\n\\right]\n$$\n\u4ece\u800c\u5f97\u5230:\n$$\n\\left[\n\\begin {matrix}\n0&a_1-a_0&a_2-a_0&a_3+6a_0&a_4-a_0&a_5-a_0&-a_0\n\\end {matrix}\n\\right]\n$$\n\u8bb0\u4e3a:\n\n$$\n\\left[\n\\begin {matrix}\n0&a'_0&a'_1&a'_2&a'_3&a'_4&a'_5\n\\end {matrix}\n\\right]\n$$\n\n\u663e\u7136\u8fd9\u4e2a\u6d88\u5143\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u6765\u8f6c\u79fb: \n\n$$\n\\left[\n\\begin {matrix}\na'_0&a'_1&a'_2&a'_3&a'_4&a'_5\n\\end {matrix}\n\\right]=\n\\left[\n\\begin {matrix}\na_0&a_1&a_2&a_3&a_4&a_5\n\\end {matrix}\n\\right]\n\\left[\n\\begin {matrix}\n-1&1&0&0&0&0\\\\\n-1&0&1&0&0&0\\\\\n6&0&0&1&0&0\\\\\n-1&0&0&0&1&0\\\\\n-1&0&0&0&0&1\\\\\n-1&0&0&0&0&0\n\\end {matrix}\n\\right]\n$$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5feb\u901f\u5e42\u6765\u52a0\u901f\u9ad8\u65af\u6d88\u5143. \u6211\u4eec\u9700\u8981\u6d88 $k$ \u884c, \u6240\u4ee5\u8fd9\u4e2a\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(k^4\\log n)$ .\n\n\u5c06\u7b2c $n-2k\\sim n-k-1$ \u884c\u7528\u524d $n-2k-1$ \u884c\u6d88\u5143\u8fc7\u540e, \u975e $0$ \u4f4d\u7f6e\u90fd\u5206\u5e03\u5728 $n-k\\sim n$ \u884c, \u6211\u4eec\u66b4\u529b\u5bf9\u5269\u4f59\u90e8\u5206($n-2k\\sim n-1$ \u884c)\u6d88\u5143\u5373\u53ef, \u8fd9\u4e2a\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(k^3)$.\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(k^4\\log n)$.\n\n#### Part 3 \u7ec6\u8282\n\n`Part 1` \u4e2d\u6211\u4eec\u8fdb\u884c\u4e86\u82e5\u5e72\u6b21\u4ea4\u6362\u4e24\u884c\u7684\u64cd\u4f5c, \u8fd9\u4f1a\u4f7f\u884c\u5217\u5f0f\u4e58\u4e0a\u82e5\u5e72\u4e2a $-1$ , \u4e0d\u8981\u5fd8\u8bb0\u8ba1\u7b97.\n\n\u6700\u540e\u7b97\u884c\u5217\u5f0f\u65f6\u4e0d\u8981\u5fd8\u8bb0\u5c06 '\u5929\u7136' \u7684\u4e0a\u4e09\u89d2\u4e2d\u7684 $-1$ \u7684\u8d21\u732e\u7b97\u4e0a.\n\n\u6ce8\u610f\u8981\u8ba1\u7b97\u7684\u662f\u4e3b\u4f59\u5b50\u5f0f, \u4e0d\u8981\u5fd8\u8bb0\u53bb\u6389\u4e00\u884c\u4e00\u5217.\n\n$n\\leqslant 2k$ \u65f6\u4e0d\u5b58\u5728'\u5929\u7136'\u7684\u4e0a\u4e09\u89d2, \u4f46\u662f\u6b64\u65f6\u76f4\u63a5\u66b4\u529b\u6d88\u5143\u662f $\\mathcal O(k^3)$ , \u7279\u6b8a\u5904\u7406\u5373\u53ef.\n\n#### Part 4 Code\n\n```cpp\n#include <bits/stdc++.h>\n#define mod 65521\nusing namespace std;\nlong long read();\nint M(int x) { return x >= mod ? x - mod : x; }\nvoid Add(int& x, int y) { (x += y) >= mod ? x -= mod : x; }\nint fsp(unsigned bs, int p) {\n    int rt = 1;\n    while (p) {\n        if (p & 1) rt = bs * rt % mod;\n        bs = bs * bs % mod, p >>= 1;\n    }\n    return rt;\n}\n\nlong long n;\nint k, lim;\n\nint b[102][102];\nvoid work1() {\n    for (int i = 1; i <= n; ++i)\n        for (int j = i + 1; j <= min(i + k, (int)n); ++j)\n            ++b[i][i], ++b[j][j], b[i][j] = b[j][i] = mod - 1;\n    lim = n - 1;\n}\n\nint K;\nstruct Mat {\n    int a[21][21];\n    int* operator[](int p) { return a[p]; }\n    Mat operator*(Mat& b) {\n        static Mat rt;\n        for (int i = 1; i <= K; ++i)\n            for (int j = 1; j <= K; ++j) {\n                rt[i][j] = 0;\n                for (int k = 1; k <= K; ++k)\n                    Add(rt[i][j], 1ll * a[i][k] * b[k][j] % mod);\n            }\n        return rt;\n    }\n} bs, res;\n\nint c[21];\n\nvoid work2() {\n    K = k << 1;\n    for (int i = 1; i <= K; ++i)\n        bs[i][1] = mod - 1, bs[i][i + 1] = res[i][i] = 1;\n    bs[k][1] = K;\n    for (long long p = n - K - 1; p; p >>= 1)\n        (p & 1) ? res = res * bs : res, bs = bs * bs;\n\n    for (int i = 1; i <= k; ++i) {\n        memset(c, 0, sizeof c);\n        for (int j = 1; j <= i + k; ++j) c[j] = mod - 1;\n        c[i] = k + i - 1;\n        for (int j = 1; j <= K; ++j)\n            for (int k = 1; k <= K; ++k)\n                Add(b[i][j], 1ll * res[j][k] * c[k] % mod);\n    }\n\n    for (int i = k + 1; i <= K; ++i) {\n        for (int j = i - k; j <= K; ++j) b[i][j] = mod - 1;\n        b[i][i] = 3 * k - i + 1;\n    }\n\n    lim = K;\n    if (1ll * (n - K - 1) * (k + 1) & 1)\n        for (int i = 1; i <= K; ++i) b[1][i] = mod - b[1][i];\n}\n\nvoid solve() {\n    int res = 1, ny;\n    for (int i = 1; i <= lim; ++i) {\n        if (!b[i][i])\n            for (int j = i; j <= lim; ++j)\n                if (b[j][i]) {\n                    swap(b[i], b[j]), res = mod - res;\n                    break;\n                }\n        res = 1ll * res * b[i][i] % mod, ny = fsp(b[i][i], mod - 2);\n        for (int j = i; j <= lim; ++j) b[i][j] = 1ll * b[i][j] * ny % mod;\n        for (int j = i + 1; j <= lim; ++j)\n            for (int k = lim; k >= i; --k)\n                Add(b[j][k], mod - 1ll * b[j][i] * b[i][k] % mod);\n    }\n    printf(\"%d\\n\", M(res));\n}\nint main() {\n    k = read(), (n = read()) <= 20 ? work1() : work2(), solve();\n    return 0;\n}\n\nlong long read() {\n    long long x = 0;\n    char c = getchar();\n    while (c < '0' || c > '9') c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x;\n}\n```\n\n",
        "postTime": 1588897894,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/79749248)\n\n\u4e00\u4e2a$n$\u4e2a\u70b9\u7684\u6811,\u70b9$i$\u53ea\u80fd\u5411$[i-k,i-1]$\u5185\u7684\u70b9\u8fde\u8fb9,\u6c42\u6709\u6807\u53f7\u751f\u6210\u6811\u7684\u4e2a\u6570\n\n$n\\le10^{15},k\\le5$\n\n---\n\n## \u9898\u89e3\n\n\u9898\u9762\u8bef\u5bfc\u5411\u7cfb\u5217,\u663e\u7136\u4e0d\u80fd\u50cf\u4ed6\u8bf4\u7684\u90a3\u6837\u505a\u5427\n\n\u56e0\u4e3a\u53d1\u73b0$k$\u7279\u522b\u5c0f,\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528\u72b6\u538b\u8868\u793a$i$\u548c\u524d$k-1$\u4e2a\u70b9\u7684\u8054\u901a\u60c5\u51b5\n\n\u8003\u8651$DP,f[i][j]$\u8868\u793a\u524d$i$\u4e2a\u70b9,$[i-k,i]$\u8fd9\u4e9b\u70b9\u7684\u8fde\u901a\u6027\u662f$j$\u7684\u65b9\u6848\u6570\n\n\u8003\u8651\u5230\u6709\u4e9b\u72b6\u6001\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684($e.g.\\ 1\\to2\\to3=1\\to3\\to2$)\n\n\u6240\u4ee5\u8003\u8651\u7528\u6700\u5c0f\u8868\u793a\u6cd5\u6765\u5b58\u72b6\u6001\n\n>\u5982$k=3$\u65f6\u6709$5$\u79cd\u72b6\u6001$:111,112,121,122,123$\n\n>\u6570\u5b57\u8868\u793a\u7b2c$i$\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u96c6\u5408\n\n>\u5982$121$\u8868\u793a$\\{1,3\\},\\{2\\}$\u5373$1,3$\u8054\u901a\n\n\u901a\u8fc7\u7206\u641c\u641c\u51fa\u6240\u6709\u6ee1\u8db3[\u6700\u5c0f\u8868\u793a\u6cd5](https://wenku.baidu.com/view/df40d5287375a417866f8f7e.html)\u7684\u72b6\u6001$(k=5$\u65f6\u6709$52$\u79cd$)$\n\n>\u8fd9\u91cc\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b,\u5c31\u662f\u5047\u8bbe\u5f53\u524d\u70b9\u6240\u5728\u7684\u6700\u5927\u7684\u96c6\u5408\u7f16\u53f7\u662f$i$\n\n>\u90a3\u4e48\u4e0b\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u80fd\u5728\u7b2c$i+1$\u4e2a\u96c6\u5408,\u5426\u5219\u5c31\u662f\u975e\u6cd5\u7684,\u4e0d\u7136\u5c31\u66f4\u65b0\u6700\u5927\u503c\n\n>\u8fd9\u4e2a\u7206\u641c\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u6bcf\u4e2a\u70b9\u5f00\u4e00\u4e2a\u6570\u7ec4\u53bb\u5224\u65ad,\u4ee3\u7801\u91cc\u7528\u538b\u4f4d\u4e8c\u8fdb\u5236\u5199\u7684\n\n\u7136\u540e\u4e00\u4e2a\u6700\u5c0f\u8868\u793a\u6cd5\u5b9e\u9645\u4e0a\u5bf9\u5e94\u5f88\u591a\u79cd\u6811$(n$\u4e2a\u70b9\u7684\u6709\u6807\u53f7\u65e0\u6839\u6811\u4e2a\u6570\u7684$n^{n-2})$\n\n>$e.g.\\ 11122$\u8868\u793a$\\{1,2,3\\},\\{4,5\\}$\u5bf9\u5e94\u7684\u6811\u7684\u79cd\u6570\u662f$3^{3-2}\\times2^{2-2}=3$\n\n\u66b4\u529b\u679a\u4e3e\u65b0\u52a0\u5165\u4e00\u4e2a\u70b9\u4e4b\u540e\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u79fb\n\n\u4e5f\u5c31\u662f$2^k$\u679a\u4e3e\u65b0\u7684\u70b9\u548c\u524d\u9762\u7684\u90a3\u4e9b\u70b9$([i-k,i-1])$\u662f\u5426\u8fde\u8fb9\n\n>$1.$\u4e0b\u4e00\u72b6\u6001\u4e0d\u80fd\u6709\u73af\n\n>$2.$\u4e0b\u4e00\u72b6\u6001\u5fc5\u987b\u4e0e\u5f53\u524d\u72b6\u6001\u6240\u6709\u7684\u70b9\u90fd\u8fde\u901a\n\n>$3.$\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u5e76\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u8f6c\u79fb\u6570\n\n>$4.$\u8f6c\u79fb\u7684\u65f6\u5019\u628a\u70b9$i-k-1$\u5f53\u505a$0$\u53f7\u70b9,$i$\u70b9\u5f53\u505a$k$\u53f7\u70b9,\u4f1a\u6bd4\u8f83\u597d\u8f6c\u79fb\u4e00\u4e9b\n\n\u8bbe$g[j][k]$\u8868\u793a\u4ece$j$\u72b6\u6001\u8f6c\u79fb\u5230$k$\u72b6\u6001\u7684\u65b9\u6848\u6570\n\n\u8bbe$Cnt$\u4e3a\u72b6\u6001\u6570,\u90a3\u4e48\u6709\n\n$$f[i][j]=\\sum_{k=0}^{Cnt}f[i-1][k]\\times g[k][j]$$\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u4e00\u6b65,\u6240\u4ee5\u628a$g$\u8868\u793a\u6210\u77e9\u9635\u7136\u540e\u76f4\u63a5\u77e9\u9635\u5feb\u901f\u5e42\u5c31\u597d\u4e86\n\n\u6700\u540e\u628a\u77e9\u9635\u5feb\u5e42\u5f97\u5230\u7684\u77e9\u9635\u4e58\u4e0a$f[k]$\u8fd9\u4e2a\u77e9\u9635\u7684\u548c\u5c31\u662f\u7b54\u6848\u4e86\n\n\u56e0\u4e3a\u6700\u540e\u7684\u72b6\u6001\u5fc5\u987b\u662f$1\\ldots1$(\u6240\u6709\u70b9\u90fd\u8981\u8054\u901a),\u6240\u4ee5\u53ea\u8981\u7b97\u4e0a\u7b2c\u4e00\u4e2a\u72b6\u6001\u7684\u7b54\u6848\u5c31\u597d\u4e86\n\n~~\u8fd9\u4e2a\u4ee3\u7801\u53ef\u80fd\u8981\u8ba4\u771f\u770b\u51e0\u904d\u624d\u80fd\u770b\u5f97\u61c2~~\n\n~~\u611f\u89c9\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684~~\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nconst int K=6,S=55,P=65521,T[]={1,1,1,3,16,125};\ntypedef long long ll;\nint k,Cnt,ans,sum[K],fa[K],f[S],sta[S],pos[1<<16];ll n;\ninline int pls(int a,int b){return a+=b,a<P?a:a-P;}\nstruct matrix{\n    int a[S][S];\n    matrix(int x=0){memset(a,0,sizeof a);if(x)fp(i,1,Cnt)a[i][i]=1;}\n    inline int*operator[](int x){return a[x];}\n    inline matrix operator*(matrix b){\n        matrix c;\n        fp(i,1,Cnt)fp(k,1,Cnt)if(a[i][k])fp(j,1,Cnt)\n            c[i][j]=pls(c[i][j],(ll)a[i][k]*b[k][j]%P);\n        return c;\n    }\n    inline matrix operator^(ll b){\n        matrix x(1),a=*this;\n        for(;b;b>>=1,a=a*a)if(b&1)x=x*a;\n        return x;\n    }\n}g;\ninline bool chk(int s){\n    int tp=1;\n    for(int i=0;i<3*k;tp|=1<<(((s>>i)&7)),i+=3)\n        fp(j,0,((s>>i)&7)-1)if(!(tp&(1<<j)))return 0;\n    return 1;\n}\nvoid dfs(int d,int s){\n    if(d==k){if(chk(s))sta[++Cnt]=s,pos[s]=Cnt;return;}\n    fp(i,1,k)dfs(d+1,s|(i<<(3*d)));\n}\nint gf(int x){return fa[x]==x?x:fa[x]=gf(fa[x]);}\ninline void Getnx(int i,int s,int nw){\n    fp(j,0,k)fa[j]=j;\n    fp(j,0,k)fp(l,j+1,k)\n        if(((nw>>(3*j))&7)==((nw>>(3*l))&7))fa[gf(j)]=gf(l);\n    fp(j,0,k)if(s&(1<<j)){\n        if(gf(j)^gf(k))fa[fa[j]]=k;\n        else return;\n    }\n    int tp=0,nx=0,fg=0;\n    fp(j,1,k)if(gf(0)==gf(j)){fg=1;break;};\n    if(!fg)return;\n    fp(j,0,k-1)if(!(nx&(7<<(j*3)))){\n        nx|=++tp<<(j*3);\n        fp(l,j+1,k-1)if(gf(j+1)==gf(l+1))\n            nx|=tp<<(l*3);\n    }\n    ++g[i][pos[nx]];\n}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    scanf(\"%d%lld\",&k,&n);dfs(0,1);\n    fp(i,1,Cnt){\n        f[i]=1;int nw=sta[i];\n        memset(sum,0,sizeof sum);\n        fp(j,0,k-1)++sum[(nw>>(j*3))&7];\n        fp(j,1,k)f[i]*=T[sum[j]];\n        fp(s,0,(1<<k)-1)Getnx(i,s,nw);\n    }g=g^(n-k);\n    fp(i,1,Cnt)ans=pls(ans,f[i]*g[i][1]%P);\n    printf(\"%d\",ans);\nreturn 0;\n}\n```",
        "postTime": 1522340228,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "# \u751f\u6210\u6811\u8ba1\u6570 Berlekamp-Massey\u7b97\u6cd5\n\n## \u72b6\u6001\u538b\u7f29Dp\n\u6b64\u9898\u5b58\u5728\u4e00\u79cd\u72b6\u6001\u538b\u7f29Dp\u7684\u89e3\u6cd5\uff0c\u8be5\u505a\u6cd5\u7684\u5b58\u5728\u5f97\u76ca\u4e8e\u77e9\u9635\u5feb\u901f\u5e42\u7684\u4f18\u5316\u3002\u7531\u4e8e\u7528\u5230\u4e86\u77e9\u9635\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u662f\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd\u9f50\u6b21\u7ebf\u6027\u5e38\u7cfb\u6570\u9012\u63a8\u7684\u3002\n\n## \u9f50\u6b21\u7ebf\u6027\u5e38\u7cfb\u6570\u9012\u63a8\n\u8fd9\u79cd\u9012\u63a8\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u79cd\u7c7b\u4f3c\u5377\u79ef\u7684\u8fc7\u7a0b\uff1a\n\n\u5df2\u77e5\u6570\u5217$F$\u7684\u524d$N$\u9879\uff0c\u548c\u957f\u5ea6\u4e3a$M$\u7684\u7ebf\u6027\u9012\u63a8\u65b9\u7a0b$G$\uff0c\u6709\uff1a\n\n$$\\forall i>M,\\ \\ F_i = \\sum_{j=1}^{M}F_{i-j}G_j$$\n\n## Berlekamp-Massey\u7b97\u6cd5\n\u8fd9\u79cd\u7b97\u6cd5\u5c31\u662f\u901a\u8fc7\u4e00\u6bb5\u7ed9\u5b9a\u7684$F$\uff0c\u6c42\u51fa\u6700\u77ed\u7684$G$\uff0c\u4f7f\u5f97\uff1a\n$$\\forall deg(F)\\geq i>deg(G),\\ F_i = \\sum_{j=1}^{deg(G)}G_jF_{i-j}$$\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6559\u7a0b\u53ef\u4ee5\u53c2\u8003https://www.k-xzy.xyz/ \u4e2d\u7684\u51e0\u7bc7(\u63a8\u8350)\uff0c\u6216\u8005\u7f51\u4e0a\u5176\u4ed6\u6559\u7a0b\u3002\n\n## \u95ee\u9898\u7684\u89e3\u51b3\n\u77e5\u9053\u4e86\u8fd9\u4e9b\u7406\u8bba\u57fa\u7840\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u5229\u7528\u6700\u7b80\u5355\u7684$Matrix-Tree$\u5b9a\u7406\u6c42\u51fa\u6570\u5217\u7684\u524d\u51e0\u9879\uff0c\u7136\u540e\u7528$Berlekamp-Massey$\u7b97\u6cd5\u6c42\u51fa\u9012\u63a8\u65b9\u7a0b\uff0c\u6700\u540e\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u8be5\u9012\u63a8\u65b9\u7a0b\u7684\u6c42\u89e3\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u907f\u5f00\u6700\u590d\u6742\u7684\u72b6\u6001\u538b\u7f29Dp\u7684\u8fc7\u7a0b\u3002\n\n\u8fd9\u79cd\u7b97\u6cd5\u5728**\u72b6\u6001\u538b\u7f29Dp\u7684\u8f6c\u79fb\u65b9\u7a0b\u975e\u5e38\u590d\u6742**\uff0c\u6216**\u9012\u63a8\u65b9\u5f0f\u4e0d\u660e\u663e**\u65f6\u975e\u5e38\u6709\u7528\u3002\n## \u4ee3\u7801\u5b9e\u73b0\n\u6211\u8be5\u9898\u7684\u4ee3\u7801\u5206\u4e3a\u4e09\u4e2a\u6a21\u5757\uff1a1.\u77e9\u9635\u6811\u5b9a\u7406\u6253\u8868\u30012.Berlekamp-Massey\u7b97\u6cd5\u6c42\u9012\u63a8\u65b9\u7a0b\u30013.\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u9012\u63a8\u65b9\u7a0b\u7684\u6c42\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define MX 5005\n#define MOD 65521LL\n\nusing namespace std;\n\ntypedef long long ll;\n\nll N, K;\n\nll qpow(ll x, ll t)\n{\n\tll ans = 1;\n\twhile(t)\n\t{\n\t\tif(t & 1) ans = ans*x%MOD;\n\t\tx = x*x%MOD;\n\t\tt >>= 1;\n\t}\n\treturn ans;\n}\n\nll inv(ll x)\n{\n\treturn qpow(x, MOD-2);\n}\n\nnamespace Table\n{\n\tstruct mat\n\t{\n\t\tint n;\n\t\tll x[MX][MX];\n\t\t\n\t\tvoid init() {memset(x, 0, sizeof(x));}\n\t\t\n\t\tvoid gauss()\n\t\t{\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t{\n\t\t\t\tint pos = i;\n\t\t\t\tif(!x[i][i])\n\t\t\t\t{\n\t\t\t\t\tfor(int j=i+1; j<=n; j++) \n\t\t\t\t\t{\n\t\t\t\t\t\tif(x[j][i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpos = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tswap(x[i], x[pos]);\n\t\t\t\t}\n\t\t\t\tfor(int j=i+1; j<=n; j++)\n\t\t\t\t{\n\t\t\t\t\tif(x[j][i])\n\t\t\t\t\t{\n\t\t\t\t\t\tll mul = x[j][i]*inv(x[i][i])%MOD;\n\t\t\t\t\t\tfor(int k=i; k<=n; k++) x[j][k] = (x[j][k]-x[i][k]*mul+MOD*MOD)%MOD;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tll det()\n\t\t{\n\t\t\tgauss();\n\t\t\tll ans = 1;\n\t\t\tfor(int i=1; i<=n; i++) ans = ans*x[i][i]%MOD;\n\t\t\treturn ans<0 ? -ans : ans;\n\t\t}\n\t} T;\n\t\n\tvoid calc()\n\t{\n\t\tT.init();\n\t\tfor(int i=1; i<=N; i++)\n\t\t\tfor(int j=1; j<=K; j++)\n\t\t\t\tif(i+j<=N)\n\t\t\t\t\tT.x[i+j][i] = T.x[i][i+j] = -1, T.x[i][i] ++, T.x[i+j][i+j] ++;\n\t\tT.n = N-1;\n\t\tprintf(\"%lld\\n\", T.det());\n\t}\n};\n\nnamespace Belekamp_Massey\n{\n\tll A[MX], F[MX], G[MX];\n\tint lenA, lenF, lenG;\n\t\n\tll calc(int p, int len, ll* x)\n\t{\n\t\tll ret = 0;\n\t\tfor(int i=1; i<=len; i++)\n\t\t\tret += A[p-i]*x[i];\n\t\treturn ret%MOD;\n\t}\n\t\n\tvoid work()\n\t{\n\t\tG[1] = inv(A[1]), lenG = 1;\n\t\tF[1] = 0, lenF = 1;\n\t\tfor(int i=2; i<=lenA; i++)\n\t\t{\n\t\t\tll delta = (A[i]-calc(i, lenF, F)+MOD)%MOD;\n\t\t\tif(!delta)\n\t\t\t{\n\t\t\t\tmemmove(G+2, G+1, sizeof(ll)*lenG);\n\t\t\t\tG[1] = 0;\n\t\t\t\tlenG ++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswap(lenG, lenF);\n\t\t\t\tswap(G, F);\n\t\t\t\tfor(int j=1; j<=lenF; j++) F[j] = (F[j]*delta+G[j])%MOD;\n\t\t\t\tmemmove(G+2, G+1, sizeof(ll)*lenG);\n\t\t\t\tG[1] = MOD-1;\n\t\t\t\tlenG ++;\n\t\t\t\tll now = inv(calc(i+1, lenG, G));\n\t\t\t\tfor(int j=1; j<=lenG; j++) G[j] = G[j]*now%MOD;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1; i<=lenF; i++) printf(\"%lld \", F[i]);\n\t\tputchar('\\n');\n\t}\n\t\n\tvoid input()\n\t{\n\t\tscanf(\"%d\", &lenA);\n\t\tfor(int i=1; i<=lenA; i++) scanf(\"%lld\", &A[i]);\n\t}\n};\n\nnamespace Matrix\n{\n\tint n;\n\t\n\tstruct mat\n\t{\n\t\tll x[50][50];\n\t\t\n\t\tvoid init() {memset(x, 0, sizeof(x));}\n\t\t\n\t\tvoid E() {init(); for(int i=1; i<=n; i++) x[i][i] = 1;}\n\t\t\n\t\tvoid output()\n\t\t{\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t{\n\t\t\t\tfor(int j=1; j<=n; j++) printf(\"%lld \", x[i][j]);\n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t};\n\t\n\tmat operator * (const mat& a, const mat& b)\n\t{\n\t\tmat c; c.init();\n\t\tfor(int k=1; k<=n; k++)\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t{\n\t\t\t\tint t = a.x[i][k];\n\t\t\t\tfor(int j=1; j<=n; j++)\n\t\t\t\t\tc.x[i][j] += t*b.x[k][j];\n\t\t\t}\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tfor(int j=1; j<=n; j++)\n\t\t\t\tc.x[i][j] %= MOD;\n\t\treturn c;\n\t}\n\t\n\tmat qpow(const mat& a, ll t)\n\t{\n\t\tmat x = a; mat ans; ans.E();\n\t\twhile(t)\n\t\t{\n\t\t\tif(t & 1) ans = ans*x;\n\t\t\tx = x*x;\n\t\t\tt >>= 1;\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tll calc(ll mi, ll si, ll* s, ll* f)\n\t{\n\t\tmat a; a.init();\n\t\tn = si;\n\t\tif(mi <= si) return s[mi];\n\t\tfor(int i=1; i<=n; i++) a.x[1][i] = f[i];\n\t\tfor(int i=2; i<=n; i++) a.x[i][i-1] = 1;\n\t\ta = qpow(a, mi-si);\n\t\tll ans = 0;\n\t\tfor(int i=1; i<=n; i++) ans += a.x[1][i]*s[n+1-i];\n\t\treturn ans%MOD;\n\t}\n};\n\nll S1[10] = {1,1};\nll S2[10] = {3,1,1,3};\nll S3[10] = {7,1,1,3,16,75,336,1488};\nll S4[20] = {17,1,1,3,16,125,864,5635,35840,29517,48795,64376,52310,4486,28336,8758,64387,31184};\nll S5[50] = {45,1,1,3,16,125,1296,12005,38927,26915,65410,9167,63054,58705,18773,9079,38064,46824,48121,50048,47533,30210,24390,51276,45393,357,44927, 15398,15923,31582,56586,25233,41258,21255,21563,16387,39423,26418,10008,6962,42377,50881,54893,50452,23715,53140};\n\nll F1[10] = {1,1};\nll F2[10] = {3,3,65520,0};\nll F3[10] = {7,5,65518,3,65516,1,0,0};\nll F4[20] = {17,7,65520,65496,31,65469,65437,300,65437,65469,31,65496,65520,7,65520,0,0,0};\nll F5[50] = {45,8,5,65489,40,364,63172,62845,2793,7304,50170,14272,13974,32712,27590,63226,30516,31431,62449,44809,2992,62529,20712,3072, 34090,35005,2295,37931,32809,51547,51249,15351,58217,62728,2676,2349,65157,65481,32,65516,65513,1,0,0,0,0};\n\nint main()\n{\n\tscanf(\"%lld%lld\", &K, &N);\n\tif(K == 1) printf(\"%lld\\n\", Matrix::calc(N, F1[0], S1, F1));\n\tif(K == 2) printf(\"%lld\\n\", Matrix::calc(N, F2[0], S2, F2));\n\tif(K == 3) printf(\"%lld\\n\", Matrix::calc(N, F3[0], S3, F3));\n\tif(K == 4) printf(\"%lld\\n\", Matrix::calc(N, F4[0], S4, F4));\n\tif(K == 5) printf(\"%lld\\n\", Matrix::calc(N, F5[0], S5, F5));\n\t/*int lim = 80;\n\t\n\tfreopen(\"3.in\", \"w\", stdout);\n\tprintf(\"%d\\n\", lim);\n\tfor(int i=1; i<=lim; i++)\n\t{\n\t\tN = i;\n\t\tK = 3;\n\t\tTable::calc();\n\t\tif(i%100 == 0) fprintf(stderr, \"%d\\n\", i/100);\n\t}\n\tfreopen(\"ans3\", \"w\", stdout);\n\tfreopen(\"3.in\", \"r\", stdin);\n\tBelekamp_Massey::input();\n\tBelekamp_Massey::work();*/\n\treturn 0;\n}\n```",
        "postTime": 1534553310,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "~~\u611f\u89c9\u662f\u4e00\u9053\u5f88\u7b80\u5355\u7684\u9898\u76ee\u3002\u3002\u3002~~\n\n$k$ \u53ea\u6709 $5$\uff0c\u90a3\u4e48\u8003\u8651 $k$ \u4e2a $k$ \u4e2a\u9012\u63a8\n\n\u90a3\u4e48\u53ef\u4ee5\u8bbe $f[i][j]$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684 $k$ \u4e2a\u7684\u72b6\u6001\u4e3a $j$(\u8fde\u901a\u6027)\n\n\u6bcf\u6b21\u5411\u540e\u79fb\u52a8\u53bb\u6389\u524d\u9762\u4e00\u4e2a\u70b9\uff0c\u52a0\u5165\u540e\u9762\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u53bb\u6389\u7684\u70b9\u5fc5\u987b\u548c\u540e\u9762\u7684\u4e00\u4e2a\u70b9\u8fde\u901a\n\n\u800c $j$ \u7206\u641c\u51fa\u6765\u7528\u6700\u5c0f\u8868\u793a\u6cd5\u8868\u793a\u53ea\u6709 $52$ \u4e2a\u6709\u7528\u7684\u72b6\u6001\n\n\u90a3\u4e48\u53ea\u8981\u9884\u5904\u7406\u51fa $g[i][j]$ \u8868\u793a\u72b6\u6001 $i$ \u8f6c\u79fb\u5230\u72b6\u6001 $j$ \u7684\u65b9\u6848\u6570\u5c31\u53ef\u4ee5\u77e9\u4e58\u4e86\n\n#### \u72b6\u6001\u6570\u624d 52!!!\n\n~~\u600e\u4e48\u66b4\u529b\u600e\u4e48\u5199~~\n\n\u76f4\u63a5\u66b4\u529b\u5c31\u597d\u4e86\uff0c\u679a\u4e3e\u4e00\u4e2a\u72b6\u6001\uff0c$2^k$ \u679a\u4e3e\u52a0\u5165\u70b9\u7684\u8fde\u8fb9\uff0c\u6bcf\u6b21\u66b4\u529b\u5e76\u67e5\u96c6\u5224\u65ad\u4e00\u4e0b\uff0c\u7136\u540e\u66b4\u529b\u626b\u4e00\u904d\u6c42\u51fa\u6700\u5c0f\u8868\u793a\u6cd5\u5c31\u597d\u4e86\n\n\u6700\u540e\u6307\u6570\u7ea7\u66b4\u529b\u679a\u4e3e\u6700\u5f00\u59cb\u7684 $k$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u6c42\u51fa\u521d\u59cb\u7684\u72b6\u6001\n\n\u7136\u540e\u5927\u529b\u77e9\u4e58\n\n~~\u611f\u89c9\u8fd8\u662f\u5f88\u7b80\u5355\u3002\u3002\u3002~~\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nnamespace IO {\n    const int maxn(1 << 21 | 1);\n\n    char ibuf[maxn], *iS, *iT, c;\n    int f;\n\n    inline char Getc() {\n        return iS == iT ? (iT = (iS = ibuf) + fread(ibuf, 1, maxn, stdin), (iS == iT ? EOF : *iS++)) : *iS++;\n    }\n\n    template <class Int> inline void In(Int &x) {\n        for (f = 1, c = Getc(); c < '0' || c > '9'; c = Getc()) f = c == '-' ? -1 : 1;\n        for (x = 0; c >= '0' && c <= '9'; c = Getc()) x = (x << 1) + (x << 3) + (c ^ 48);\n        x *= f;\n    }\n}\n\nusing IO :: In;\n\nconst int mod(65521);\n\nint id[555555], st[53], p[20], v[20], fa[20], tot, k;\nll n;\n\nstruct Matrix {\n\tll a[53][53];\n\n\tinline Matrix() {\n\t\tmemset(a, 0, sizeof(a));\n\t}\n\n\tinline ll* operator [](int x) {\n\t\treturn a[x];\n\t}\n\n\tinline Matrix operator *(Matrix b) const {\n\t\tMatrix c;\n\t\tfor (int i = 1; i <= tot; ++i)\n\t\t\tfor (int j = 1; j <= tot; ++j)\n\t\t\t\tfor (int k = 1; k <= tot; ++k) c[i][k] += a[i][j] * b[j][k];\n\t\tfor (int i = 1; i <= tot; ++i)\n\t\t\tfor (int j = 1; j <= tot; ++j) c[i][j] %= mod;\n\t\treturn c;\n\t}\n} f, trs;\n\nvoid Dfs(int x) {\n\tif (x > k) {\n\t\tint cnt = 0, sta = 0;\n\t\tfor (int i = 1; i <= k; ++i) v[i] = 0;\n\t\tfor (int i = 1; i <= k; ++i) if (!v[p[i]]) v[p[i]] = ++cnt;\n\t\tfor (int i = 1; i <= k; ++i) sta = sta * 10 + v[p[i]];\n\t\tif (!id[sta]) id[sta] = ++tot, st[tot] = sta;\n\t\treturn;\n\t}\n\tfor (int i = 1; i <= k; ++i) p[x] = i, Dfs(x + 1);\n}\n\ninline int Find(int x) {\n\treturn fa[x] == x ? x : fa[x] = Find(fa[x]);\n}\n\ninline void Pre_Work(int s) {\n\tfor (int i = 1; i <= k; ++i) fa[i] = i;\n\tfor (int i = 1, c = 0; i <= k; ++i)\n\t\tfor (int j = 1; j < i; ++j, ++c)\n\t\t\tif (s & (1 << c)) {\n\t\t\t\tif (Find(i) == Find(j)) return;\n\t\t\t\tfa[Find(i)] = Find(j);\n\t\t\t}\n\tint cnt = 0, sta = 0;\n\tfor (int i = 1; i <= k; ++i) v[i] = 0, p[i] = Find(i);\n\tfor (int i = 1; i <= k; ++i) if (!v[p[i]]) v[p[i]] = ++cnt;\n\tfor (int i = 1; i <= k; ++i) sta = sta * 10 + v[p[i]];\n\t++f[1][id[sta]];\n}\n\ninline void Add(int fr, int s) {\n\tfor (int i = 1; i <= k; ++i) fa[i] = i;\n\tfa[k + 1] = k + 1, v[k + 1] = 0;\n\tfor (int st = fr, i = k; i; --i) p[i] = st % 10 + k, st /= 10;\n\tfor (int i = 1; i <= k; ++i)\n\t\tfor (int j = i + 1; j <= k; ++j)\n\t\t\tif (p[i] == p[j] && Find(i) != Find(j)) fa[Find(j)] = Find(i);\n\tfor (int i = 1; i <= k; ++i)\n\t\tif (s & (1 << (i - 1))) {\n\t\t\tif (Find(i) == Find(k + 1)) return;\n\t\t\tfa[Find(k + 1)] = Find(i);\n\t\t}\n\tint flg = 0;\n\tfor (int i = 1; i <= k; ++i) if (Find(1) == Find(i + 1)) flg = 1;\n\tif (!flg) return;\n\tint cnt = 0, sta = 0;\n\tfor (int i = 1; i <= k; ++i) v[i] = 0, p[i] = Find(i + 1);\n\tfor (int i = 1; i <= k; ++i) if (!v[p[i]]) v[p[i]] = ++cnt;\n\tfor (int i = 1; i <= k; ++i) sta = sta * 10 + v[p[i]];\n\t++trs[id[fr]][id[sta]];\n}\n\nint main() {\n\tIn(k), In(n), n -= k, Dfs(1);\n\tint s = 1 << (k * (k - 1) >> 1);\n\tfor (int i = 0; i < s; ++i) Pre_Work(i);\n\ts = 1 << k;\n\tfor (int i = 1; i <= tot; ++i)\n\t\tfor (int j = 0; j < s; ++j) Add(st[i], j);\n\tfor (; n; n >>= 1, trs = trs * trs)\n\t\tif (n & 1) f = f * trs;\n\tprintf(\"%lld\\n\", f[1][1]);\n    return 0;\n}\n```",
        "postTime": 1539779159,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u5176\u4e2d\u4ec5\u7f16\u53f7\u5dee\u4e0d\u8d85\u8fc7 $k$ \u7684\u70b9\u95f4\u6709\u552f\u4e00\u4e00\u6761\u65e0\u5411\u8fb9\uff0c\u6c42\u8be5\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u3002\n\n$k\\le 5,n\\le 10^{15},k\\le n$\n\n## \u9898\u89e3\n\n$n$ \u5f88\u5927\uff0c$k$ \u5f88\u5c0f\u3002\u8003\u8651\u5bf9\u4e8e\u8fde\u7eed\u7684 $k$ \u4e2a\u70b9\u8fdb\u884c\u5173\u4e8e\u8fde\u901a\u6027\u7684\u72b6\u538b DP\uff0c\u5728\u4e00\u6b21 DP \u8fc7\u7a0b\u4e2d\u6784\u9020\u51fa\u8f6c\u79fb\u77e9\u9635\uff0c\u7136\u540e\u901a\u8fc7\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u51fa\u7b54\u6848\u3002\n\n\u4e3a\u4ec0\u4e48\u662f $k$ \u4e2a\u70b9\uff1a\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u65b0\u52a0\u5165\u7684\u70b9\u4e0e\u8be5\u72b6\u6001\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u6709\u8fb9\u3002\n\n\u8bbe $f_{i,s}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u70b9\uff0c\u5176\u4e2d $(i-k,i]$ \u4e2d\u7684 $k$ \u4e2a\u70b9\u5728\u524d $i$ \u4e2a\u70b9\u5df2\u7ecf\u8fde\u6210\u7684\u56fe\u4e2d\u7684\u8fde\u901a\u6027\u5f62\u5982 $s$\uff0c\u7684\u65b9\u6848\u6570\u3002\u4e14\u4fdd\u8bc1 $\\le i-k$ \u7684\u70b9\u5168\u90e8\u8fde\u901a\u3002\n\n$s$ \u5e76\u4e0d\u662f\u4e00\u4e2a\u96c6\u5408\u7684\u8868\u793a\u3002\u4e3a\u4e86\u8868\u8fbe\u8fde\u901a\u6027\uff0c\u6211\u4eec\u8bbe $s$ \u4e3a\u4e00\u4e2a $k$ \u4f4d $k$ \u8fdb\u5236\u6570\u3002\u4e24\u4e2a\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u76f8\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u70b9\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u3002\n\n\u4f8b\u5982 $(012)_3$\uff0c\u8868\u793a\u4e09\u4e2a\u70b9\u90fd\u4e0d\u8fde\u901a\u3002$(112)_3$\uff0c\u8868\u793a $1$ \u548c $2$ \u8fde\u901a\uff0c$3$ \u72ec\u7acb\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\n\u53d1\u73b0\u5728 $k^k$ \u4e2a\u72b6\u6001\u4e2d\u6709\u5927\u91cf\u91cd\u590d\u7684\u3002\u5982 $(112)_3$ \u548c $(220)_3$ \u8868\u793a\u540c\u4e00\u79cd\u60c5\u51b5\u3002\u8003\u8651\u53bb\u91cd\u3002\n\n\u4ee4\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\u6309 $0,1\\cdots$ \u4f9d\u6b21\u51fa\u73b0\uff0c\u4e14 $i$ \u7684\u9996\u6b21\u51fa\u73b0\u4e00\u5b9a\u65e9\u4e8e $j(j>i)$ \u7684\u9996\u6b21\u51fa\u73b0\u5373\u53ef\u3002\n\n\u5904\u7406\u5b8c\u4e4b\u540e\u53d1\u73b0\u5f53 $k=5$ \u65f6\u6709\u6548\u72b6\u6001\u4ec5\u6709 $52$ \u4e2a\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651 DP\u3002\u4ece $f_{i,s}$ \u5411\u540e\u63a8\uff1a\n\n\u679a\u4e3e $2^k$ \u7684\u72b6\u6001\u8868\u793a $i+1$ \u5411\u524d\u9762 $k$ \u4e2a\u70b9\u7684\u8fde\u8fb9\u60c5\u51b5\u3002\n\n\u5982\u679c\u4e00\u5bf9 $s$ \u4e2d\u540c\u8272\u7684\u70b9\u540c\u65f6\u8fde\u4e86\u8fb9\uff0c\u5c31\u4e0d\u5408\u6cd5\u3002\n\n\u53e6\u5916\uff0c\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a\u7b2c $i-k+1$ \u4e2a\u70b9\u5728 $s$ \u4e2d\u72ec\u7acb\u6210\u8fde\u901a\u5757\u3002\u56e0\u4e3a\u4e4b\u540e\u5b83\u4e0d\u518d\u6709\u8fb9\u53ef\u8fde\uff0c\u6240\u4ee5\u6b64\u65f6\u5fc5\u987b\u8fde\u8fb9\u3002\n\n\u6574\u7406\u597d\u72b6\u6001\u4e4b\u540e\uff0c\u82e5\u6709\u8f6c\u79fb $f_{i,s}\\rightarrow f_{i+1,t}$\uff0c\u6211\u4eec\u4ee4\u8f6c\u79fb\u77e9\u9635\u7684 $(t,s)$ \u9879\u52a0\u4e00\u3002\u8003\u8651\u77e9\u9635\u4e58\u6cd5\u7684\u4e00\u9879\u5373\u53ef\u3002\u8fd9\u91cc\u6211\u4eec\u8bbe $f_i$ \u7684\u5411\u91cf\u4e3a\u5217\u5411\u91cf\uff0c$(f_{i,1}\\cdots f_{i,x})^T$\uff08\u72b6\u6001\u4ece $1$ \u6807\u5230 $x$\uff09\uff0c\u77e9\u9635\u662f\u5de6\u4e58\u5411\u91cf\u3002\n\n\u8003\u8651\u5230\u5bf9\u4e8e\u524d $k-1$ \u4e2a\u70b9\uff0c\u4e0d\u597d\u5904\u7406\u5b83\u4eec\u7684\u8f6c\u79fb\u3002\u56e0\u6b64\u76f4\u63a5\u6784\u9020 $f_k$\uff1a\n\n\u82e5 $s$ \u7684\u975e\u5355\u70b9\u8fde\u901a\u5757\u5927\u5c0f\u5206\u522b\u4e3a $a_1\\cdots a_m(a_i>1)$\uff0c\u56e0\u4e3a\u524d $k$ \u4e2a\u70b9\u4e24\u4e24\u6709\u8fb9\uff0c\u6240\u4ee5\u6839\u636e\u51ef\u83b1\u5b9a\u7406\uff08\u9898\u4e2d\u7ed9\u51fa\uff09\uff0c\u5176\u65b9\u6848\u6570\u4e3a\uff1a\n$$\nf_{k,s}=\\prod_{i=1}^ma_i^{a_i-2}\n$$\n\u6700\u540e\u77e9\u9635\u5feb\u901f\u5e42\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $\\Theta((2k)^kk+v^3\\log n)$\uff0c$v$ \u4e3a\u72b6\u6001\u6570 $52$\u3002\u5b9e\u73b0\u4e0a\u5dee\u522b\u5f71\u54cd\u4e0d\u5927\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <vector>\n\nconst int S = 3125;\nconst int T = 55;\nconst int p = 65521;\n\ntypedef long long ll;\nchar buf[1 << 25] ,*p1 = buf ,*p2 = buf;\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf ,1 ,1 << 21 ,stdin) ,p1 == p2) ? EOF : *p1++)\ninline ll read() {\n    ll x = 0, f = 1; char ch = getchar();\n    while(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n    while(ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n    return x * f;\n}\n\ninline int Pow(int a,int b) {\n    int r = 1;\n    while(b--) r *= a;\n    return r;\n}\n\nint k,U,val[S],sta[S],m,f[S],g[S]/*,f[100][S]*/; ll n;\nint tmp[5],b[5],vis[5];\n\nint c[5],q[5],map[5];\nint Reduce(int x) {\n    for(int i = 0;i < k;i++) c[i] = x % k, x /= k;\n    int t = 0;\n    for(int i = 0;i < k;i++) q[i] = 0;\n    for(int i = 0;i < k;i++) {\n        if(!q[c[i]]) map[c[i]] = t++, q[c[i]] = 1;\n        c[i] = map[c[i]];\n    }\n    for(int i = k - 1;i >= 0;i--) x = x * k + c[i];\n    return x;\n}\n\nvoid Init() {\n    for(int i = 0;i <= U;i++) if(Reduce(i) == i) sta[++m] = i, val[i] = m;\n    for(int i = 1;i <= m;i++) {\n        int x = sta[i]; \n        for(int j = 0;j < k;j++) x /= k;\n    }\n    return;\n}\n\nint res[T][T],mat[T][T];\n\nint r[T][T];\nvoid Mul(int a[T][T],int b[T][T]) {\n    for(int i = 1;i <= m;i++)\n        for(int j = 1;j <= m;j++) {\n            r[i][j] = 0;\n            for(int k = 1;k <= m;k++) r[i][j] = (r[i][j] + 1ll * a[i][k] * b[k][j]) % p;\n        }\n    for(int i = 1;i <= m;i++)\n        for(int j = 1;j <= m;j++) a[i][j] = r[i][j];\n    return;\n}\n\nint main() {\n    k = read(), n = read(), U = Pow(k,k) - 1;\n    Init();\n    // std::printf(\"%d\\n\",m); m = 52 status\n    for(int id = 1;id <= m;id++) {\n        int s = sta[id], x = s;\n        for(int i = 0;i < k;i++) tmp[i] = 0;\n        for(int i = 0;i < k;i++) tmp[x % k]++, x /= k;\n        f[id] = 1;\n        for(int i = 0;i < k;i++) if(tmp[i] > 1)\n            f[id] *= Pow(tmp[i],tmp[i] - 2);\n    }\n    for(int id = 1;id <= m;id++) {\n        for(int t = 0;t < (1 << k);t++) {\n            int s = sta[id], x = s;\n            for(int i = 0;i < k;i++) tmp[i] = 0;\n            for(int i = 0;i < k;i++) tmp[b[i] = x % k]++, x /= k;\n            if(tmp[b[0]] == 1 && !(t & 1)) continue;\n            int c = -1, flag = true;\n            for(int i = 0;i < k;i++) vis[i] = 0;\n            for(int i = 0;i < k;i++) if(((t >> i) & 1)) {\n                c = b[i];\n                if(vis[b[i]]) flag = false;\n                vis[b[i]] = true;\n            }\n            if(!flag) continue;\n            if(c == -1) {\n                for(int i = 0;i < k;i++) if(!tmp[i]) c = i;\n            } else for(int i = 0;i < k;i++) if(vis[b[i]]) b[i] = c;\n            int _t = c;\n            for(int i = k - 1;i >= 1;i--) _t = _t * k + b[i];\n            _t = Reduce(_t);\n            mat[val[_t]][id] = (mat[val[_t]][id] + 1) % p;\n        }\n    }\n    ll b = n - k;\n    for(int i = 1;i <= m;i++) res[i][i] = 1;\n    while(b) {\n        if(b & 1) Mul(res,mat);\n        Mul(mat,mat);\n        b >>= 1;\n    }\n    for(int i = 1;i <= m;i++)\n        for(int j = 1;j <= m;j++) g[i] = (g[i] + 1ll * res[i][j] * f[j]) % p;\n    std::printf(\"%d\\n\",g[1]);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1636034923,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u72b6\u538b DP+\u77e9\u9635\u5e42--\u9898\u89e3\u3010[NOI2007] \u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "\u72b6\u538b dp + \u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\u3002\n\n~~\u611f\u89c9\u9898\u89e3\u533a\u51e0\u7bc7\u9898\u89e3\u8bf4\u5f97\u4e91\u91cc\u96fe\u91cc\u7684\u2026\u2026\u4e5f\u6ca1\u6709\u4e00\u5b9a\u7684\u8bc1\u660e\u2026\u2026~~\n\n[Link.](https://www.luogu.com.cn/problem/P2109)\n\n## Solution\n\n### Part1 dp \u72b6\u6001\u8bbe\u8ba1\n\n\u53d1\u73b0 $k$ \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u5177\u6709\u5f88\u5f3a\u7684\u6307\u5411\u6027\u2014\u2014\u72b6\u538b dp\u3002\n\n\u7ed3\u5408\u9898\u9762\uff0c\u53d1\u73b0\u4e00\u4e2a\u70b9 $i$ \u53ea\u53ef\u80fd\u548c $j\\in (i-k,i)$ \u7684\u70b9\u8fde\u8fb9\uff0c\u5373 $i-k+1$ \u4e4b\u524d\u7684\u70b9\u6211\u4eec\u6839\u672c\u4e0d\u7528\u8003\u8651\u5b83\u548c $i$ \u7684\u8fde\u63a5\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981**\u4fdd\u8bc1 $[1,i-k]$ \u8fd9\u4e9b\u70b9\u8fde\u901a**\u5373\u53ef\u3002\n\n\u6545\u53ef\u4ee5\u8bbe\u8ba1\u72b6\u6001 $f(i,sta)$ \u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u70b9 $i$\uff0c\u4e14 $(i-k,i]$ \u8fd9 $k$ \u4e2a\u70b9\u7684\u8fde\u901a\u72b6\u6001\u4e3a $sta$ \u65f6\uff0c\u751f\u6210\u6811\u7684\u65b9\u6848\u6570\u3002\n\n\u56e0\u4e3a\u6700\u540e\u8981\u6c42\u7684\u662f\u751f\u6210\u6811\uff0c\u800c\u751f\u6210\u6811\u7684\u5fc5\u8981\u6761\u4ef6\u662f $[1,n]$ \u90fd\u662f\u8fde\u901a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u4ece $f(i-1,sta')$ \u8f6c\u79fb\u5230 $f(i, sta)$ \u65f6\uff0c\u90fd\u8981**\u4fdd\u8bc1 $i-k$ \u548c $j\\in (i-k,i]$ \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u662f\u8fde\u901a\u7684**\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1 $f(n,sta_{final})$ \u7684\u65b9\u6848\u6570\uff08\u5176\u4e2d $sta_{final}$ \u4ee3\u8868 $(n-k,n]$ \u90fd\u8fde\u901a\u7684\u72b6\u6001\uff09\u90fd\u662f\u5408\u6cd5\u7684\uff08\u5373 $[1,n]$ \u90fd\u662f\u8fde\u901a\u7684\uff09\uff1f\n\n\u6b64\u5904~~\u53e3\u80e1~~\u4e00\u4e2a\u53cd\u8bc1\u6cd5\u3002\u6613\u77e5\uff0c\u82e5 $[1,n]$ \u4e0d\u8fde\u901a\uff0c\u5373\u6709\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u67d0\u4e2a\u8fde\u901a\u5757\u4e2d\uff0c\u7f16\u53f7\u6700\u5927\u7684\u8282\u70b9 $i$\uff0c\u6ee1\u8db3\u5b83\u548c $(i,i+k]$ \u4e00\u5b9a\u90fd\u4e0d\u8fde\u901a\u3002\u6545\u6211\u4eec\u5982\u679c\u4fdd\u8bc1\u4e86\u8f6c\u79fb\u65f6\u6bcf\u4e00\u4e2a $i-k$ \u548c $j\\in (i-k,i]$ \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u662f\u8fde\u901a\u7684\uff0c\u90a3\u8fd9\u4e2a\u56fe\u6700\u7ec8\u4e00\u5b9a\u5c31\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u3002\n\n### Part2 \u72b6\u6001\u538b\u7f29\n\n\u7136\u540e\u8003\u8651\u72b6\u6001\u4e2d $sta$ \u7684\u8868\u8ff0\u3002\n\n\u5176\u4f59\u4f17\u591a\u9898\u89e3\u90fd\u63d0\u53ca\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u8868\u793a\u6cd5\uff0c\u5c06\u6bcf\u79cd $k$ \u70b9\u8fde\u63a5\u72b6\u6001\u90fd\u8868\u793a\u51fa\u6765\u3002\u5177\u4f53\u5730\uff0c\u7ed9\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u90fd\u8d4b\u4e0a\u540c\u4e00\u6570\u503c\u5373\u53ef\uff0c\u4e0d\u540c\u8fde\u901a\u5757\u6570\u503c\u4e0d\u540c\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u79cd\u8fde\u63a5\u72b6\u6001\uff0c\u9884\u5904\u7406 `dfs()` \u51fa\u6765\u5373\u53ef\uff0c\u72b6\u6001\u603b\u6570\u4e0d\u8d85 $60$\u3002\n\n### Part3 dp \u72b6\u6001\u8f6c\u79fb\n\n\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u3002\n\n\u8bb0 $g[sta'][sta]$ \u8868\u793a\u4ece\u72b6\u6001 $sta'$ \u8f6c\u79fb\u5230 $sta$ \u7684\u65b9\u6848\u6570\u3002\u5373\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5f85\u8f6c\u79fb\u7684\u70b9 $i+1$\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7 $g[sta'][sta]$ \u79cd\u65b9\u6848\uff0c\u548c $j\\in [i - k+2,i]$ \u7684\u70b9\u8fde\u8fb9\uff0c\u4f7f\u5f97\u539f\u5148 $[i-k+1,i]$ \u8fd9\u4e9b\u70b9\u6784\u6210\u7684\u72b6\u6001 $sta'$\uff0c\u80fd\u8f6c\u53d8\u4e3a\u73b0\u5728 $(i-k+1,i+1]$ \u8fd9\u4e9b\u70b9\u6784\u6210\u7684\u72b6\u6001 $sta'$\u3002\n\n\u5982\u4f55\u4fdd\u8bc1\u6700\u7ec8\u7b54\u6848\u7684\u5408\u6cd5\u6027\uff1f\u6613\u77e5\u751f\u6210\u6811\u4e00\u5b9a\u662f\u4e00\u4e2a\u65e0\u73af\u7684\u8fde\u901a\u56fe\u3002\u8fde\u901a\u6027\u7684\u4fdd\u8bc1\u5728 Part1 \u4e2d\u5df2\u7ecf\u8bb2\u89e3\u4e86\uff0c\u73b0\u5728\u4fdd\u8bc1\u56fe\u4e2d\u4e00\u5b9a\u4e0d\u51fa\u73b0\u73af\u3002\u6240\u4ee5\u6211\u4eec\u5728\u4e24\u4e24\u72b6\u6001\u8f6c\u79fb\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u4e0d\u80fd\u51fa\u73b0\u73af\uff0c\u5426\u5219\u5f53\u524d\u72b6\u6001\u4e0d\u5408\u6cd5\u3002\n\n\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u5341\u5206\u663e\u7136\u7684\u8f6c\u79fb\uff1a\n\n$$f(i,sta)=\\sum_{sta'} f(i-1,sta')\\times g(sta',sta)$$\n\n\u7136\u540e\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u5f62\u5f0f\u5b9e\u9645\u4e0a\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u3002\u6545\u6211\u4eec\u5728\u6c42\u51fa\u4e86 $g[][]$ \u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6c42\u51fa\u6700\u7ec8\u65b9\u6848\u6570\u3002\n\n\u8fdb\u4e00\u6b65\u5730\uff0c\u4e0d\u96be\u5f97\u51fa\u53ef\u4ee5\u7701\u53bb $f$ \u7684\u7b2c\u4e00\u7ef4\u3002\u56e0\u77e9\u9635\u5feb\u901f\u5e42\u7684\u4f7f\u7528\uff0c$f$ \u53ef\u7b80\u5316\u4e3a $f(1,sta)$\u3002\n\n### Part4 $f$ \u6570\u7ec4\u521d\u59cb\u5316\n\n\u6ce8\u610f\uff0c$f$ \u4e0d\u80fd\u76f4\u63a5\u91c7\u7528 `dfs()` \u4e2d\u66b4\u529b\u63a8\u51fa\u6765\u7684\u72b6\u6001\u79cd\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u3002\n\n\u539f\u56e0\u662f\u4e0d\u540c\u7684\u8fde\u8fb9\u65b9\u5f0f\u53ef\u80fd\u5bfc\u81f4\u540c\u6837\u7684\u8fde\u901a\u72b6\u6001\u3002\n\n\u6545\uff0c\u6211\u4eec\u8fd9\u6837\u521d\u59cb\u5316 $f$\uff1a\u5bf9\u4e8e\u524d $k$ \u4e2a\u70b9\uff0c\u4e00\u5171\u6709 $\\dbinom{k}{2}$ \u6761\u8fb9\uff0c\u800c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8fde\u6216\u4e0d\u7ec3\uff0c\u6545\u4e00\u5171\u6709 $2^{\\frac{k\\times (k-1)}{2}}$ \u4e2d\u8fde\u8fb9\u65b9\u5f0f\u3002\u5bf9\u4e8e\u6bcf\u79cd\u8fde\u8fb9\u65b9\u5f0f\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u8fde\u8fb9\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u8fde\u901a\u72b6\u6001\u3002\n\n\u603b\u590d\u6742\u5ea6\u53ef\u8fc7\u3002\n\n------------\n\nThanks for reading.",
        "postTime": 1678884997,
        "uid": 469672,
        "name": "\u4f0d\u53c1\u58f9",
        "ccfLevel": 7,
        "title": "\u3010P2109 [NOI2007]\u3011 \u751f\u6210\u6811\u8ba1\u6570"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u628a\u9898\u76ee\u4e2d\u8bf4\u7684\u77e9\u9635\u6784\u9020\u51fa\u6765\uff1a\n\n\u7531\u4e8e\u4f60\u8981\u662f\u76f4\u63a5\u5199\u7684\u8bdd\u4f1a\u5f88\u56f0\u96be\uff0c\u90a3\u4e48\u6211\u4eec\u89c2\u5bdf $n=10,k=3$ \u7684\u60c5\u51b5\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u628a 0 \u7701\u7565\u3002\n\n$A=\\left[\\begin{matrix}3&-1&-1&-1\\\\-1&4&-1&-1&-1\\\\-1&-1&5&-1&-1&-1\\\\-1&-1&-1&6&-1&-1&-1\\\\&-1&-1&-1&6&-1&-1&-1\\\\&&-1&-1&-1&6&-1&-1&-1\\\\&&&-1&-1&-1&6&-1&-1&-1\\\\&&&&-1&-1&-1&5&-1&-1\\\\&&&&&-1&-1&-1&4&-1\\\\&&&&&&-1&-1&-1&3\\end{matrix}\\right]$\n\n\n\u6211\u4eec\u5148\u628a\u6700\u540e\u4e00\u884c\u548c\u6700\u540e\u4e00\u5217\u5ffd\u7565\u6389\n\n$B=\\left[\\begin{matrix}3&-1&-1&-1\\\\-1&4&-1&-1&-1\\\\-1&-1&5&-1&-1&-1\\\\-1&-1&-1&6&-1&-1&-1\\\\&-1&-1&-1&6&-1&-1&-1\\\\&&-1&-1&-1&6&-1&-1&-1\\\\&&&-1&-1&-1&6&-1&-1\\\\&&&&-1&-1&-1&5&-1\\\\&&&&&-1&-1&-1&4\\end{matrix}\\right]$\n\n\u7136\u540e\u8981\u6c42\u884c\u5217\u5f0f\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u6c42\u884c\u5217\u5f0f\u7684\u65f6\u5019\u6211\u4eec\u8981\u628a\u77e9\u9635\u6d88\u5143\u6210\u4e09\u89d2\u77e9\u9635\uff0c\u90a3\u4e48\u5bf9\u8fd9\u4e2a\u77e9\u9635\u76f4\u63a5\u6d88\u5143\u80af\u5b9a\u8fc7\u4e0d\u4e86\uff0c\u8003\u8651\u4f18\u5316\u9ad8\u65af\u6d88\u5143\u7684\u8fc7\u7a0b\u3002\n\n\u6211\u4eec\u6700\u4e0a\u9762\u7684 $k$ \u884c\u4ea4\u6362\u4e0b\u6765\uff0c\u53ef\u4ee5\u901a\u8fc7\u6bcf\u6b21 $n-2$ \u6b21\u4ea4\u6362\u628a\u7b2c\u4e00\u884c\u6362\u4e0b\u6765\u7136\u540e\u91cd\u590d $k$ \u6b21\uff1a\n\n$\\left[\\begin{matrix}-1&-1&-1&6&-1&-1&-1\\\\&-1&-1&-1&6&-1&-1&-1\\\\&&-1&-1&-1&6&-1&-1&-1\\\\&&&-1&-1&-1&6&-1&-1\\\\&&&&-1&-1&-1&5&-1\\\\&&&&&-1&-1&-1&4\\\\3&-1&-1&-1\\\\-1&4&-1&-1&-1\\\\-1&-1&5&-1&-1&-1\\end{matrix}\\right]$\n\n\u6211\u4eec\u628a\u77e9\u9635\u5206\u6210\u4e09\u90e8\u5206\uff1a\n\n$\\left[\\begin{matrix}{\\color{blue}-1}&{\\color{blue}-1}&-{\\color{blue}1}&{\\color{blue}6}&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}-1}\\\\&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}6}&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}-1}\\\\&&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}6}&{\\color{blue}-1}&{\\color{blue}-1}&{\\color{blue}-1}\\\\&&&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}6}&{\\color{red}-1}&{\\color{red}-1}\\\\&&&&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}5}&{\\color{red}-1}\\\\&&&&&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}-1}&{\\color{red}4}\\\\3&-1&-1&-1\\\\-1&4&-1&-1&-1\\\\-1&-1&5&-1&-1&-1\\end{matrix}\\right]$\n\n\u84dd\u8272\u7684\u90e8\u5206\uff08$n-2k-1$ \u884c\uff09\u90fd\u662f\u5148 $k$ \u4e2a $-1$\uff0c$1$ \u4e2a $2k$ \u548c $k$ \u4e2a $-1$\u3002\n\n\u7ea2\u8272\u7684\u90e8\u5206\uff08$k$ \u884c\uff09\u4e2d\u7684\u7b2c $i$ \u884c\u662f\u5148 $k$ \u4e2a $-1$\uff0c\u7136\u540e\u4e00\u4e2a $2k-i+1$\uff0c\u6700\u540e $k-i$ \u4e2a $-1$\u3002\n\n\u9ed1\u8272\u7684\u90e8\u5206\uff08$k$ \u884c\uff09\u4e2d\u7684\u7b2c $i$ \u884c\u662f\u5148 $i-1$ \u4e2a $-1$\uff0c\u4e00\u4e2a $k+i-1$\uff0c\u6700\u540e $k$ \u4e2a $-1$\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6d88\u5143\u7684\u8fc7\u7a0b\u5c31\u662f\u5148\u7528\u84dd\u8272\u7684\u90e8\u5206\u6d88\u5143\uff0c\u518d\u7528\u7ea2\u8272\u7684\u90e8\u5206\u6d88\u5143\u3002\n\n\u6211\u4eec\u53d1\u73b0\u84dd\u8272\u7684\u90e8\u5206\u5f62\u5f0f\u90fd\u4e00\u6837\u800c\u4e14\u6570\u91cf\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u8d77\u6267\u884c\u7136\u540e\u518d\u66b4\u529b\u6d88\u5143\u540e\u9762\u7684\u90e8\u5206\uff08\u4e00\u5171\u5c31 $2k$ \u884c\uff09\u3002\n\n\u6211\u4eec\u628a\u9ed1\u8272\u90e8\u5206\u7684\u67d0\u4e00\u884c\u5199\u6210\u4e0b\u9762\u7684\u683c\u5f0f\uff1a\n\n$$\\left[\\begin{matrix}a_0&a_1&\\cdots&a_{2k-1}&0\\end{matrix}\\right]$$\n\n\u90a3\u4e48\u84dd\u8272\u90e8\u5206\u7684\u6240\u6709\u884c\u90fd\u662f\u8fd9\u6837\uff1a\n\n$$\\left[\\begin{matrix}-1&-1&\\cdots&2k&\\cdots&-1&-1\\end{matrix}\\right]$$\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8981\u6d88\u6389 $a_0$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u84dd\u8272\u90e8\u5206\u7684\u90a3\u4e00\u884c\u4e58\u4ee5 $a_0$ \u7136\u540e\u52a0\u5230\u9ed1\u8272\u90e8\u5206\uff0c\u6211\u4eec\u5bf9\u9f50\u5199\u4e00\u4e0b\uff1a\n\n$$\\begin{matrix}[&a_0&a_1&\\cdots&a_k&\\cdots&a_{2k-1}&0&]\\\\ [&-a_0&-a_0&\\cdots&2ka_0&\\cdots&-a_0&-a_0&]\\\\ [&0&a_1-a_0&\\cdots&a_k+2ka_0&\\cdots&a_{2k-1}-a_0&-a_0&]\\end{matrix}$$\n\n\u7136\u540e\u6211\u4eec\u628a\u6d88\u5143\u4e00\u6b21\u540e\u7684\u7ed3\u679c\u8bb0\u4e3a\n\n$$\\left[\\begin{matrix}0&b_0&b_1&\\cdots&b_{2k-1}\\end{matrix}\\right]$$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\u8f6c\u79fb\u516c\u5f0f\u4e86\uff1a\n\n$b_i=\\begin{cases}a_{i+1}-a_0&i\\not=k-1\\\\a_k+2ka_0&i=k-1\\end{cases}$\n\n\u8fd9\u91cc\u6211\u4eec\u8ba4\u4e3a $a_{2k}=0$\u3002\n\n\u6211\u4eec\u628a\u5b83\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u77e9\u9635 $M$ \u4f7f\u5f97\n\n$$\\left[\\begin{matrix}b_0&b_1&\\cdots&b_{2k-1}\\end{matrix}\\right]=\\left[\\begin{matrix}a_0&a_1&\\cdots&a_{2k-1}\\end{matrix}\\right]M$$\n\n\u6839\u636e\u4e0a\u9762\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u5199\u51fa $M$\uff1a\n\n$$M=\\left[\\begin{matrix}-1&-1&\\cdots&2k&\\cdots&-1&-1\\\\1\\\\&1\\\\&&\\ddots\\\\&&&1\\\\&&&&\\ddots\\\\&&&&&1\\end{matrix}\\right]$$\n\n\u6bd4\u5982\u6211\u4eec\u628a $k=3$ \u7684\u77e9\u9635\u5199\u51fa\u6765\uff1a\n\n$$M=\\left[\\begin{matrix}-1&-1&6&-1&-1&-1\\\\1\\\\&1\\\\&&1\\\\&&&1\\\\&&&&1\\end{matrix}\\right]$$\n\n\u7136\u540e\u8981\u6d88\u5143 $n-2k-1$ \u6b21\uff0c\u6211\u4eec\u5c31\u8ba1\u7b97\u51fa $M^{n-2k-1}$ \u7136\u540e\u4e0e \u9ed1\u8272\u90e8\u5206\u7684\u6bcf\u4e00\u884c\u5206\u522b\u4e58\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u6700\u540e\uff0c\u66b4\u529b\u8ba1\u7b97\u7ea2\u8272\u7684\u90e8\u5206\u5373\u53ef\u3002\n\n\u6700\u540e\u8981\u6ce8\u610f\u628a\u84dd\u8272\u90e8\u5206\u7684 $n-2k-1$ \u4e2a $-1$ \u5904\u7406\u4e00\u4e0b\uff08\u5c31\u662f\u884c\u5217\u5f0f\u4e58 $(-1)^{n-2k-1}$\uff09\uff0c\u8fd8\u6709\u6211\u4eec\u6700\u5f00\u59cb\u8fdb\u884c\u4e86 $k(n-2)$ \u6b21\u884c\u4ea4\u6362\u3002\n\n```cpp\n#include <cstdio>\nusing namespace std;\ntypedef long long ll;\nconst ll p = 65521;\n// \u9898\u76ee\u4e2d\u8f93\u5165\u7684 n, k \n// \u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0, \u5c31\u5f00\u5230\u4e86\u5168\u5c40 \nll n;\nint k;\nstruct Matrix { // \u4e00\u4e2a\u77e9\u9635 \n\tint n, m;\n\tll mat[10][10];\n\tMatrix() { // \u81ea\u52a8\u6e05\u96f6 \n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tfor (int j = 0; j < 10; j++) {\n\t\t\t\tmat[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tll * operator[](const int & a) { // \u8fd9\u91cc\u662f\u4e3a\u4e86\u65b9\u4fbf a[i][j] \u7684\u8bbf\u95ee\u65b9\u5f0f \n\t\treturn mat[a];\n\t}\n};\nMatrix operator * (const Matrix & a, const Matrix & b) { // \u77e9\u9635\u4e58\u6cd5 \n\tMatrix c;\n\tc.n = a.n;\n\tc.m = b.m;\n\tfor (int i = 0; i < c.n; i++) {\n\t\tfor (int j = 0; j < c.m; j++) {\n\t\t\tfor (int k = 0; k < a.m; k++) {\n\t\t\t\tc.mat[i][j] += a.mat[i][k] * b.mat[k][j];\n\t\t\t}\n\t\t\tc.mat[i][j] %= p;\n\t\t}\n\t}\n\treturn c;\n}\nMatrix pow(Matrix a, ll b) { // \u77e9\u9635\u5feb\u901f\u5e42 \n\tMatrix ans;\n\tans.n = ans.m = a.n;\n\tfor (int i = 0; i < a.n; i++) {\n\t\tans.mat[i][i] = 1;\n\t}\n\twhile (b != 0) {\n\t\tif ((b & 1) == 1) {\n\t\t\tans = ans * a;\n\t\t}\n\t\ta = a * a;\n\t\tb /= 2;\n\t}\n\treturn ans;\n}\nnamespace DetSolver {\nMatrix a;\nvoid swap(ll & a, ll & b) {\n\ta ^= b ^= a ^= b;\n}\n// \u5bf9 a \u8fd9\u4e2a\u77e9\u9635\u6c42\u884c\u5217\u5f0f \n// \u4e0b\u9762\u662f\u6211\u4ece\u884c\u5217\u5f0f\u677f\u5b50\u590d\u5236\u7c98\u8d34\u8fc7\u6765\u7684 \nll det(int n) {\n\tll ans = 1;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\twhile (a[i][i] != 0) {\n\t\t\t\tll div = a[j][i] / a[i][i];\n\t\t\t\tfor (int k = i; k < n; k++) {\n\t\t\t\t\ta[j][k] = (a[j][k] - div * a[i][k] % p + p) % p;\n\t\t\t\t}\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tswap(a[i][k], a[j][k]);\n\t\t\t\t}\n\t\t\t\tans = p - ans;\n\t\t\t}\n\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\tswap(a[i][k], a[j][k]);\n\t\t\t}\n\t\t\tans = p - ans;\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tans = ans * a[i][i] % p;\n\t}\n\treturn ans;\n} // DetSolver\n}\nnamespace solve1 { // \u7b2c\u4e00\u79cd\u60c5\u51b5, n <= 2 * k \nint abs(int x) {\n\treturn x < 0 ? -x : x;\n}\nvoid main() {\n\t// \u6784\u9020\u77e9\u9635, \u8fd9\u91cc\u76f4\u63a5\u66b4\u529b\u6784\u9020 \n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\tif (i != j && abs(i - j) <= k) {\n\t\t\t\tDetSolver::a[i][j] = p - 1;\n\t\t\t\tDetSolver::a[i][i]++;\n\t\t\t}\n\t\t}\n\t}\n\t// \u884c\u5217\u5f0f\u5c31\u662f\u7b54\u6848 \n\t// \u6ce8\u610f\u8fd9\u91cc\u4f20\u8fdb\u53bb\u7684\u662f n - 1, \u5c31\u662f\u81ea\u52a8\u5ffd\u7565\u4e86\u6700\u540e\u4e00\u884c\u548c\u6700\u540e\u4e00\u5217 \n\tprintf(\"%lld\", DetSolver::det(n - 1));\n}\n} // solve1\nnamespace solve2 { // \u7b2c\u4e8c\u79cd\u60c5\u51b5 \nvoid main() {\n\t// \u8fd9\u91cc\u7684 fix \u662f\u6700\u540e\u8981\u4e58\u5728\u884c\u5217\u5f0f\u4e0a\u7684\u503c \n\tll fix = 1;\n\t// \u524d\u9762\u7684\u4e24\u4e2a\u5904\u7406 \n\tif (k * (n - 2) % 2 == 1) {\n\t\tfix = p - fix;\n\t}\n\tif ((n - 2 * k - 1) % 2 == 1) {\n\t\tfix = p - fix;\n\t}\n\t// \u6784\u9020\u77e9\u9635 M \n\tMatrix M;\n\tM.n = M.m = 2 * k;\n\tfor (int i = 0; i < M.n; i++) {\n\t\tM[0][i] = p - 1;\n\t}\n\tM[0][k - 1] = 2 * k;\n\tfor (int i = 1; i < M.n; i++) {\n\t\tM[i][i - 1] = 1;\n\t}\n\tM = pow(M, n - 2 * k - 1);\n\t// \u6784\u9020\u9ed1\u8272\u90e8\u5206 \n\tMatrix black[k];\n\tfor (int i = 0; i < k; i++) {\n\t\tMatrix & row = black[i];\n\t\trow.n = 1;\n\t\trow.m = 2 * k;\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\trow[0][j] = p - 1;\n\t\t}\n\t\trow[0][i] = k + i;\n\t\tfor (int j = i + 1; j <= i + k; j++) {\n\t\t\trow[0][j] = p - 1;\n\t\t}\n\t}\n\tfor (int i = 0; i < k; i++) {\n\t\tblack[i] = black[i] * M;\n\t}\n\t// \u6784\u9020\u7ea2\u8272\u90e8\u5206, \u5e76\u4e14\u628a\u9ed1\u8272\u90e8\u5206\u548c\u5b83\u62fc\u5728\u4e00\u8d77 \n\t// \u7531\u4e8e\u6700\u540e\u662f\u8981\u6c42\u884c\u5217\u5f0f\u7684, \u6240\u4ee5\u662f\u4e00\u4e2a\u5f15\u7528 \n\tMatrix & red = DetSolver::a;\n\tred.n = red.m = 2 * k;\n\tfor (int i = 0; i < k; i++) { // \u6784\u9020\u4e0a\u534a\u90e8\u5206 (\u7ea2\u8272\u90e8\u5206) \n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tred[i][j] = 0;\n\t\t}\n\t\tfor (int j = 0; j < k; j++) {\n\t\t\tred[i][j + i] = p - 1;\n\t\t}\n\t\tred[i][k + i] = 2 * k - i;\n\t\tfor (int j = k + i + 1; j < 2 * k; j++) {\n\t\t\tred[i][j] = p - 1;\n\t\t}\n\t}\n\t// \u628a\u9ed1\u8272\u90e8\u5206\u62fc\u5728\u4e00\u8d77 \n\tfor (int i = 0; i < k; i++) {\n\t\tfor (int j = 0; j < 2 * k; j++) {\n\t\t\tred[i + k][j] = black[i][0][j];\n\t\t}\n\t}\n\t// \u6c42\u884c\u5217\u5f0f\u5e76\u4e14\u8f93\u51fa \n\tll ans = DetSolver::det(2 * k) * fix % p;\n\tprintf(\"%lld\", ans);\n}\n} // solve2\nint main() {\n\tscanf(\"%d %lld\", &k, &n);\n\t// \u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570 \n\tif (n <= 2 * k) {\n\t\tsolve1::main();\n\t} else {\n\t\tsolve2::main();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1645419688,
        "uid": 448887,
        "name": "cancan123456",
        "ccfLevel": 0,
        "title": "P2109 \u751f\u6210\u6811\u8ba1\u6570\u9898\u89e3"
    },
    {
        "content": "\u6211\u4e3a\u4ec0\u4e48\u5199\u7684\u8fd9\u4e48\u4e11\u3002\r\n\r\n[Link](https://www.luogu.com.cn/problem/P2109)\r\n\r\n## \u9898\u76ee\u5927\u610f\r\n\r\n\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6570 $k$\uff0c\u8868\u793a\u4e0b\u6807\u4e4b\u5dee\u4e0d\u8d85\u8fc7 $k$ \u7684\u70b9\u5bf9\u4e4b\u95f4\u6709\u8fde\u8fb9\uff0c\u6c42\u751f\u6210\u6811\u4e2a\u6570\u3002\r\n\r\n$1\\leq n \\leq 10^{15},2\\leq k \\leq \\min(5,n)$\u3002\r\n\r\n## \u9898\u76ee\u5206\u6790\r\n\r\n\u53d1\u73b0 $k$ \u5f88\u5c0f\uff0c\u6240\u4ee5\u5148\u4ece $k$ \u5165\u624b\uff0c\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u53ea\u6709\u524d $k$ \u4e2a\u70b9\u4f1a\u5bf9\u8fd9\u4e2a\u70b9\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u8003\u8651\u72b6\u538b\u51fa\u524d $k$ \u4e2a\u70b9\u7684\u8fde\u901a\u72b6\u6001\uff0c\u5177\u4f53\u7684\uff0c\u4ee4 $b_i$ \u8868\u793a\u6240\u5c5e\u96c6\u5408\uff0c\u82e5 $b_i$ \u76f8\u540c\u5219\u8bf4\u660e\u8fde\u901a\uff0c\u4f46\u662f\u72b6\u6001\u6570\u6709\u70b9\u591a\u4e86\u3002\r\n\r\n\u6709\u8bb8\u591a\u72b6\u6001\u662f\u5197\u4f59\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u8868\u793a\u6cd5\u53bb\u51cf\u5c11\u72b6\u6001\u6570\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u66b4\u641c\u9884\u5904\u7406\u51fa\u6765\uff0c\u5f53 $k=5$ \u65f6\uff0c\u72b6\u6001\u6570\u4ec5\u6709 $52$ \u79cd\uff0c\u8003\u8651\u8f6c\u79fb\u3002\r\n\r\n\u8bbe $g_{i,j}$ \u8868\u793a\u7531 $i$ \u72b6\u6001\u5728\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u70b9\uff0c\u8f6c\u79fb\u6210 $j$ \u72b6\u6001\u7684\u65b9\u6848\u6570\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u540e\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u524d\u9762\u7684\u6bcf\u4e2a\u70b9\u90fd\u53ef\u80fd\u6709\u8fde\u8fb9\uff0c\u6240\u4ee5\u679a\u4e3e $2^k$ \u4e2a\u8fde\u8fb9\u65b9\u6848\uff0c\u5229\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u6700\u540e\u7684\u6240\u5c5e\u96c6\u5408\uff0c\u4ee5\u53ca\u662f\u5426\u8fde\u51fa\u73af\u5373\u53ef\uff0c\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u82e5 $i$ \u72b6\u6001\u4e2d\u7b2c\u4e00\u4e2a\u70b9\u81ea\u5df1\u5355\u72ec\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u6b21\u52a0\u5165\u7684\u65b0\u70b9\u4e00\u5b9a\u8981\u5411\u8fd9\u4e2a\u70b9\u8fde\u8fb9\uff0c\u5426\u5219\u7684\u8bdd\u4f1a\u5bfc\u81f4\u4e0d\u8fde\u901a\u800c\u4e0d\u662f\u751f\u6210\u6811\uff0c\u5176\u4ed6\u9898\u89e3\u8c8c\u4f3c\u6ca1\u8bf4\uff0c\u6211\u5728\u8fd9\u91cc\u5361\u4e86\u5f88\u4e45\u3002\r\n\r\n\u6240\u4ee5\u7279\u6b8a\u5224\u65ad\u4e00\u4e0b\u6ee1\u8db3\u4e0a\u9762\u90a3\u4e2a\u6761\u4ef6\u7684\u96c6\u5408\uff0c\u6240\u80fd\u591f\u8f6c\u79fb\u7684\u72b6\u6001\u65b9\u6848\u6570\u5168\u90e8\u51cf\u534a\u5373\u53ef\u3002\r\n\r\n\u90a3\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 $g_{i,j}$\uff0c\u66b4\u529b\u679a\u4e3e\u5f53\u524d\u9009\u62e9\u4e86\u524d $x$ \u4e2a\u70b9\u65f6\u7684\u65b9\u6848\uff0c\u8bbe $f_{x,y}$ \u8868\u793a\u8003\u8651\u4e86\u524d $x$ \u4e2a\u70b9\uff0c\u72b6\u6001\u4e3a $y$ \u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u63a8\u51fa\u5982\u4e0b\u8f6c\u79fb\u5f0f\u5b50\u3002\r\n\r\n$f_{x,y}=\\sum\\limits_{S}(f_{x-1,S}\\times g_{S,y})$\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u72b6\u6001\u89c6\u4f5c\u4e0b\u6807\uff0c\u5219\u4e0a\u8ff0\u8f6c\u79fb\u7684\u5f62\u5f0f\u5c31\u662f\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u3002\r\n\r\n\u6ce8\u610f\u5230\u4e86\u5f62\u5f0f\u662f\u77e9\u9635\u4e58\u6cd5\uff0c\u90a3\u4e48 $n$ \u5f88\u5927\u7684\u95ee\u9898\u4e5f\u89e3\u51b3\u4e86\uff0c\u56e0\u4e3a\u8f6c\u79fb\u65f6\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u505a\u4e00\u904d\u77e9\u9635\u5feb\u901f\u5e42\u5373\u53ef\uff0c\u6ce8\u610f\u521d\u59cb $x\\leq k$ \u7684\u60c5\u51b5\u4e0d\u4e00\u6837\uff0c\u9700\u8981\u9884\u5904\u7406\u51fa\u6765\u521d\u59cb\u72b6\u6001\uff0c\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e $\\frac{k(k-1)}{2}$ \u6761\u8fb9\u7684\u8fde\u8fb9\u65b9\u6848\uff0c\u9884\u5904\u7406\u51fa\u6765\u6240\u6709\u7684\u60c5\u51b5\u5373\u53ef\uff0c\u6700\u540e\u4e58\u4e0a\u8f6c\u79fb\u77e9\u9635\u7684 $n-k$ \u6b21\u65b9\u5373\u53ef\u3002\r\n\r\n\u6ce8\u610f\u6700\u540e\u8981\u6c42\u7684\u5408\u6cd5\u65b9\u6848\u53ea\u6709\u5f53\u6240\u6709\u6570\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u60c5\u51b5\u3002\r\n\r\n## Code\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <queue>\r\n#define int long long\r\nusing namespace std;\r\nint read(){\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*f;\r\n}\r\nconst int N = 65;\r\nint Mod = 65521;\r\nint bel[N],n,k;\r\nint zt[N][10],top;\r\nint vis[10];\r\nvoid dfs(int cs,int up){\r\n\tif(cs==k+1){\r\n\t\ttop++;\r\n\t\tfor(int i=1;i<=k;i++){\r\n\t\t\tzt[top][i] = bel[i];\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tif(i>up+1){\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbel[cs] = i;\r\n\t\tdfs(cs+1,max(up,i));\r\n\t}\r\n}\r\nint fa[N],b[N],lsh[N];\r\nint find(int x){\r\n\tif(fa[x]!=x){\r\n\t\tfa[x] = find(fa[x]);\r\n\t}\r\n\treturn fa[x];\r\n}\r\nbool check(int x,int y,int S){\r\n\tfor(int i=0;i<=k;i++){\r\n\t\tfa[i] = i;\r\n\t}\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tfor(int j=i+1;j<=k;j++){\r\n\t\t\tif(zt[x][i]==zt[x][j]){\r\n\t\t\t\tint u = find(i-1),v = find(j-1);\r\n\t\t\t\tif(u!=v){\r\n\t\t\t\t\tfa[v] = u;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<k;i++){\r\n\t\tif((S>>i)&1){\r\n\t\t\tint u = find(i),v = find(k);\r\n\t\t\tif(u!=v){\r\n\t\t\t\tfa[v] = u;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tmemset(vis,0,sizeof(vis));\r\n\tint ct = 0;\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tb[i] = find(i);\r\n\t\tif(!vis[b[i]]){\r\n\t\t\tvis[b[i]] = ++ct;\r\n\t\t}\r\n\t\tb[i] = vis[b[i]];\r\n\t}\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tif(zt[y][i]!=b[i]){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\nstruct Mat{\r\n\tint val[N][N];\r\n\tvoid clear(){\r\n\t\tfor(int i=1;i<=top;i++){\r\n\t\t\tfor(int j=1;j<=top;j++){\r\n\t\t\t\tval[i][j] = 0;\r\n\t\t\t} \r\n\t\t}\r\n\t}\r\n\tMat operator*(const Mat&x)const{\r\n\t\tMat res;\r\n\t\tres.clear();\r\n\t\tfor(int i=1;i<=top;i++){\r\n\t\t\tfor(int j=1;j<=top;j++){\r\n\t\t\t\tfor(int k=1;k<=top;k++){\r\n\t\t\t\t\tres.val[i][j] = (res.val[i][j]+val[i][k]*x.val[k][j]%Mod)%Mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n}I,g,f;\r\nMat ksm(Mat x,int y){\r\n\tMat res = I;\r\n\twhile(y){\r\n\t\tif(y&1){\r\n\t\t\tres = res*x;\r\n\t\t}\r\n\t\ty>>=1;\r\n\t\tx = x*x;\r\n\t}\r\n\treturn res;\r\n}\r\nvoid add(int x){\r\n\tint tt=0;\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tfa[i] = i;\r\n\t}\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tfor(int j=i+1;j<=k;j++){\r\n\t\t\tif((x>>tt)&1){\r\n\t\t\t\tint u = find(i),v = find(j);\r\n\t\t\t\tif(u!=v){\r\n\t\t\t\t\tfa[v] = u;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttt++;\r\n\t\t}\r\n\t}\r\n\tmemset(vis,0,sizeof(vis));\r\n\tint ct = 0;\r\n\tfor(int i=1;i<=k;i++){\r\n\t\tb[i] = find(i);\r\n\t\tif(!vis[b[i]]){\r\n\t\t\tvis[b[i]] = ++ct;\r\n\t\t}\r\n\t\tb[i] = vis[b[i]];\r\n\t}\r\n\tfor(int i=1;i<=top;i++){\r\n\t\tfor(int j=1;j<=k+1;j++){\r\n\t\t\tif(j==k+1){\r\n\t\t\t\tf.val[1][i]++;\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tif(b[j]!=zt[i][j]){\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nsigned main(){\r\n\tk = read();n = read();\r\n\tdfs(1,0);\r\n\tfor(int i=1;i<=top;i++){//\u7531i\u53d8j\u7684\u65b9\u6848\u6570 \r\n\t\tint cnt = 0;\r\n\t\tfor(int j=1;j<=k;j++){\r\n\t\t\tcnt+=(zt[i][j]==1);\r\n\t\t}\r\n\t\tfor(int j=1;j<=top;j++){\r\n\t\t\tfor(int S=0;S<(1<<k);S++){\r\n\t\t\t\tg.val[i][j]=(g.val[i][j]+check(i,j,S))%Mod;\r\n\t\t\t}\r\n\t\t\tif(cnt==1){\r\n\t\t\t\tg.val[i][j]/=2;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tI.clear();f.clear();\r\n\tfor(int i=1;i<=top;i++){\r\n\t\tI.val[i][i] = 1;\r\n\t}\r\n\tint up = k*(k-1)/2;\r\n\tfor(int i=0;i<(1<<up);i++){\r\n\t\tadd(i);\r\n\t} \r\n\tg = ksm(g,n-k);\r\n\tint ans = 0;\r\n\tfor(int i=1;i<=top;i++){\r\n\t\tans = (ans+f.val[1][i]*g.val[i][1]%Mod)%Mod;\r\n\t}\r\n\tcout<<ans<<\"\\n\";\r\n\treturn 0;\r\n}\r\n\r\n```\r\n",
        "postTime": 1683169795,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P2109 [NOI2007] \u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "# \u53cc\u500d\u7ecf\u9a8c\u543c\u554a\uff01\uff01\n\n## [\u539f\u9898](http://www.lydsy.com/JudgeOnline/problem.php?id=1494)\n\n# [\u6b64\u9898\u9898\u89e3CSDN\u535a\u5ba2\u94fe\u63a5](https://blog.csdn.net/jzc20080511/article/details/86317689)\n\n#### \u601d\u8def\uff1a\n\n```\u4ece\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u96be\u770b\u51fa\u8981\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6765\u786e\u5b9a\u524dk\u4e2a\u70b9\u7684\u72b6\u6001\u3002\n\n\u539f\u672c\u60f3\u7528\u4e00\u4e2ak\u4f4d\u4e8c\u8fdb\u5236\u6570\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u8ddf\u5b83\u524d\u9762\u7684k\u4e2a\u70b9\u7684\u8fde\u63a5\u60c5\u51b5\uff0c\n\n\u4f46\u662f\u8fd9\u6837\u5904\u7406\u4e0d\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u4f55\u6392\u9664\u73af\u7684\u5b58\u5728\u3002\n\n\u6240\u4ee5\u501f\u9274\u4e86\u4e00\u4e9b\u89e3\u9898\u62a5\u544a\uff0c\u53d1\u73b0\u53ef\u4ee5\u5728\u75311~n\u4f9d\u6b21\u5904\u7406\u8282\u70b9\u65f6\uff0c\n\n\u7528\u4e00\u4e2ak\u4f4dk\u8fdb\u5236\u6570\u6765\u8bb0\u5f55\u6700\u8fd1k\u4e2a\u70b9\u6240\u5728\u7684\u8054\u901a\u5757\u7684\u60c5\u51b5\uff0c\n\n\u8fd9\u6837\u7684\u72b6\u6001\u5176\u5b9e\u5e76\u4e0d\u591a\uff0cn=5\u7684\u65f6\u5019\u670952\u4e2a\u3002\n\n\u4e3a\u4e86\u907f\u514d\u72b6\u6001\u7684\u5197\u4f59\uff0c\u5c31\u8981\u4fdd\u8bc1\u4e00\u4e2a\u72b6\u6001\u53ea\u6709\u4e00\u79cd\u8868\u793a\u5f62\u5f0f\uff0c\n\n\u4e3a\u6b64\u6211\u5b66\u4e60\u4e86\u975e\u5e38\u5de7\u5999\u7684\u201c\u6700\u5c0f\u8868\u793a\u6cd5\u201d(SOJ 3296)\u3002\n\n\u4f46\u5176\u5b9e\u672c\u9898\u4e0e\u6700\u5c0f\u8868\u793a\u6cd5\u5e76\u65e0\u5173\u7cfb\uff0c\n\n\u6700\u5c0f\u8868\u793a\u6cd5\u6c42\u7684\u662f\u4e00\u4e2a\u4e32\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5faa\u73af\u8868\u793a\u3002\n\n\u800c\u672c\u9898\u4e2d\u663e\u7136\u4e0d\u80fd\u5bf9\u72b6\u6001\u8fdb\u884c\u5faa\u73af\u8868\u793a\uff0c\n\n\u800c\u53ea\u80fd\u5728\u5df2\u77e5\u54ea\u51e0\u4e2a\u8282\u70b9\u5904\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5757\u7684\u60c5\u51b5\u4e0b\uff0c\u6539\u53d8\u8054\u901a\u5757\u7684\u6807\u53f7\uff0c\u4f7f\u5f97\u5f97\u5230\u7684\u72b6\u6001\u6700\u5c0f\u3002\n\n\u5f53\u6211\u4eec\u679a\u4e3e\u51fa\u4e86\u521d\u59cb\u7684\u72b6\u6001\u540e\uff0c\u4f8b\u5982\u8282\u70b91,2,3\u5c5e\u4e8e\u8054\u901a\u57570\uff0c\u8282\u70b94,5\u5c5e\u4e8e\u8054\u901a\u57571\u3002\n\n\u90a3\u4e48\uff0c\u540c\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff0c\u751f\u6210\u6811\u7684\u5f62\u6001\u4ecd\u7136\u6709\u5f88\u591a\u3002\n\n\u5728\u540e\u9762\u7684\u72b6\u6001\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u8fb9\u6765\u81ea\u7136\u7684\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u4f46\u662f\u521d\u59cb\u72b6\u6001\u5374\u6ca1\u529e\u6cd5\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff0c\u6211\u4eec\u65e0\u6cd5\u5f97\u77e5\u6709\u591a\u5c11\u79cd\u8fde\u8fb9\u65b9\u5f0f\u53ef\u4ee5\u5f97\u5230\u5b83\u3002\n\n\u672c\u9898\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5229\u7528\u77e9\u9635\u8ba1\u7b97\u751f\u6210\u6811\u4e2a\u6570(HDOJ 4305)\u7684\u65b9\u6cd5\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u5468\u51ac\u7684\u300a\u751f\u6210\u6811\u7684\u8ba1\u6570\u53ca\u5176\u5e94\u7528\u300b\uff1a\n\n\u5bf9\u4e8e\u6709n\u4e2a\u70b9\u7684\u56fe\uff0c\u6784\u9020\u4e00\u4e2a\u77e9\u9635\uff0c\u4f7f\u5f97\uff1a\n\n\u82e5i==j\uff0ca[i][j]=dex[i]\u3002\uff08dex[i]\u4e3a\u8282\u70b9i\u7684\u5ea6\u6570\uff09\u3002\n\n\u5426\u5219\uff0c\u82e5\u70b9i\u548c\u70b9j\u95f4\u6709\u8fb9\u76f8\u8fde\uff0ca[i][j]=-1\u3002\n\n\u82e5\u65e0\u8fb9\u76f8\u8fde\uff0ca[i][j]=0\u3002\n\n\u7136\u540e\u6c42\u8fd9\u4e2a\u77e9\u9635\u7684\u884c\u5217\u5f0f\uff0c\u5f97\u5230\u7684\u5373\u662f\u8fd9\u4e2a\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u8ba1\u7b97\u7684\u884c\u5217\u5f0f\u7684\u503c\u975e\u5e38\u5927\uff0c\u81ea\u7136\u5c31\u8981\u5bf9\u67d0\u4e2a\u6570\u53d6\u6a21\uff08\u672c\u9898\u4e2dK<=5\uff0c\u6ca1\u6709\u8fd9\u4e2a\u5fc5\u8981\uff09\u3002\n\n\u5bf9\u4e8e\u884c\u5217\u5f0f\u6a21\u4efb\u610f\u503c\u7684\u89e3\u6cd5\uff0cbjin\u7684\u8bba\u6587\u300a\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u7684\u5e94\u7528\u300b\u4e2d\u6709\u4ecb\u7ecd\u3002\n\n\u53e6\u5916\uff0c\u4e2a\u4eba\u89c9\u5f97bjin\u7684\u4e24\u9053\u9898\uff1a SPOJ DETER3\uff08\u884c\u5217\u5f0f\u6a21\uff09 \u548c SPOJ MSTS\uff08\u6700\u5c0f\u751f\u6210\u6811\u8ba1\u6570\uff0cHDOJ 4408\u4e0e\u6b64\u9898\u7c7b\u4f3c\uff09\uff0c\n\n\u975e\u5e38\u9002\u5408\u4f5c\u4e3a\u672c\u9898\u7684\u540e\u7eed\u7ec3\u4e60\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u3002\n\n\u5047\u8bbe\u76f8\u90bbK\u4e2a\u70b9\u4e2d\uff0c\u6709x\u4e2a\u70b9\u540c\u5c5e\u4e8e1\u53f7\u8054\u901a\u5757\n\n\u90a3\u4e48\u8fd9x\u4e2a\u70b9\u4e2d\u4e24\u4e24\u95f4\u90fd\u5fc5\u7136\u662f\u53ef\u4ee5\u8fde\u8fb9\u7684\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u662fx\u4e2a\u70b9\u7684\u5b8c\u5168\u56fe\u7684\u751f\u6210\u6811\u79cd\u6570\uff0c\n\n\u5f97\u5230\u7684\u5373\u662f\u8054\u901a\u57571\u5728\u5f53\u524d\u7684K\u4e2a\u70b9\u8fd9\u4e2a\u90e8\u5206\uff0c\u6240\u80fd\u5f97\u5230\u7684\u751f\u6210\u6811\u79cd\u6570\u3002\n\n\u5f53\u7136\uff0c\u5176\u5b9e\u4e0d\u5fc5\u771f\u7684\u53bb\u8ba1\u7b97\u884c\u5217\u5f0f\uff0c\u9898\u76ee\u7684\u5f00\u5934\u5df2\u7ecf\u544a\u8bc9\u6211\u4eec\u4e86\uff0cn\u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u662fn^(n-2)\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u7528cayley\u5b9a\u7406\u6765\u8bc1\u660e\u3002\n\n\u5904\u7406\u4e86\u521d\u59cb\u72b6\u6001\u4e4b\u540e\uff0c\u518d\u6765\u770b\u4e00\u4e0b\u72b6\u6001\u7684\u8f6c\u79fb\u3002\n\n\u4ece\u5e8f\u53f7\u7531\u5c0f\u5230\u5927\u5904\u7406\u5404\u8282\u70b9\u3002\n\n\u6bcf\u5904\u7406\u4e00\u4e2a\u8282\u70b9x\u65f6\uff0c\u7528\u4e00\u4e2ak\u4f4d\u4e8c\u8fdb\u5236\u6570\u679a\u4e3e\u8fd9\u4e2a\u70b9\u8ddf\u5b83\u524d\u9762\u7684k\u4e2a\u70b9\u7684\u8fde\u63a5\u60c5\u51b5\uff0c\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u7531[x-k-1,x-1]\u7684\u539f\u72b6\u6001\u8f6c\u5316\u5230[x-k,x]\u7684\u65b0\u72b6\u6001\u3002\n\n\u5f53\u7136\uff0c\u8fd9\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u73af\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\uff0c\u5982\u679c\u51fa\u73b0\u73af\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u5c31\u662f\u65e0\u6548\u7684\u3002\n\n\u663e\u7136\uff0c\u6309\u8282\u70b9\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u5904\u7406\uff0c\u6bcf\u6b21\u5728\u6807\u8bb0\u4e00\u4e2a\u65b0\u7684\u8054\u901a\u5757\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u5f53\u524d\u672a\u4f7f\u7528\u7684\u6700\u5c0f\u6807\u53f7\u5373\u53ef\u3002\n\n\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0c\u72b6\u6001\u8f6c\u79fb\u65f6\u7684\u500d\u6570\u5173\u7cfb\uff0c\u53ea\u4e0e\u539f\u72b6\u6001\u548c\u65b0\u72b6\u6001\u6709\u5173\uff0c\u8ddf\u70b9\u7684\u5e8f\u53f7\u65e0\u5173\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u521d\u59cb\u5411\u91cf\u548c\u4e00\u4e2a\u8f6c\u79fb\u77e9\u9635\u3002\n\n\u6211\u6784\u9020\u7684\u521d\u59cb\u5411\u91cfg[]\u662f\u4e00\u4e2a\u884c\u5411\u91cf\u3002\u6bcf\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u4e00\u79cd\u521d\u59cb\u72b6\u6001\u3002\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5c31\u662f\u524dk\u4e2a\u70b9\u6709\u591a\u5c11\u79cd\u8fde\u63a5\u65b9\u5f0f\u80fd\u591f\u8fbe\u6210\u8fd9\u79cd\u72b6\u6001\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\u77e9\u9635f[][]\uff0c\u7b2ci\u884c\u7b2cj\u5217\u8868\u793a\u7531\u72b6\u6001i\u8f6c\u79fb\u5230\u72b6\u6001j\u6709\u591a\u5c11\u79cd\u5408\u6cd5\u7684\u8fde\u63a5\u65b9\u5f0f\uff08\u4e0d\u6210\u73af\u4e14\u7b2cx-k\u4e2a\u70b9\u81f3\u5c11\u4e0ex-k+1~x\u4e2d\u7684\u4e00\u4e2a\u70b9\u540c\u4e00\u4e2a\u8054\u901a\u5757\uff09\u3002\n\n\u6c42\u51fag*pow(f,n-k)\u4e4b\u540e\uff0c\u5bf9\u4e8e\u5f97\u5230\u7684\u884c\u5411\u91cf\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6570\u503c\uff0c\u5c31\u4ee3\u8868\u4e86\u6709\u591a\u5c11\u79cd\u8fbe\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u65b9\u6cd5\u3002\n\n\u7136\u800c\uff0c\u8fd9\u4e9b\u72b6\u6001\u5e76\u4e0d\u90fd\u662f\u6709\u7528\u7684\u3002\n\n\u53ea\u6709\u6240\u6709\u70b9\u5904\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5feb\u7684\u90a3\u4e2a\u72b6\u6001\u662f\u6709\u7528\u7684\uff0c\u4e5f\u5c31\u662f\u72b6\u60010\u3002\n\n\u6240\u4ee5\u8f93\u51fag[0][0]\u5373\u53ef\u3002\n\nPS\uff1a\n\n\u505a\u8fd9\u9053\u9898\u7684\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u53c2\u8003\u4e86\u4fde\u534e\u7a0b\u7684\u8bba\u6587\u300a\u77e9\u9635\u4e58\u6cd5\u5728\u4fe1\u606f\u5b66\u4e2d\u7684\u5e94\u7528\u300b\u548c\u9648\u4e39\u7426\u7684\u8bba\u6587\u300a\u57fa\u4e8e\u8fde\u901a\u6027\u72b6\u6001\u538b\u7f29\u7684\u52a8\u6001\u89c4\u5212\u95ee\u9898\u300b\uff08\u6070\u597d\u4ee5\u4e0a\u4e24\u4f4d\u4e5f\u662fOI\u754c\u6709\u540d\u7684\u8d5b\u573a\u4f09\u4fea\uff0c\u6709\u6728\u6709\u6709\u6728\u6709\uff01\uff09\uff0c\u4ee5\u53caACMonster\u548cwhjpji\u7684\u89e3\u9898\u62a5\u544a\u3002\n\n\u975e\u5e38\u611f\u8c22\uff01\n\n\u8fd8\u8981\u8c22\u8c22\u9002\u725b\u501f\u7ed9\u6211\u4ed6\u8d85\u7ea7\u957f\u957f\u957f\u957f\u957f\u957f\u957f\u957f\u957f\u957f\u7684\u77e9\u9635\u7c7b\u6a21\u677f\u54df~~~~~~~~\n```\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\nconst int Mx=200;\nconst int p=65521;\nusing namespace std;\nll n;\nint K,tot/*\u72b6\u6001\u603b\u6570*/,Tr_siz[]={1,1,1,3,16,125}/*\u5b8c\u5168\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570*/;\nint fa[Mx],siz[Mx]/*\u7b2ci\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f*/,status[600],hash[1<<16]/*hash[S]=\u72b6\u6001S\u7684\u7f16\u53f7*/;\n\nstruct Matrix\n{\n    int n,m; ll num[Mx][Mx];\n    Matrix() { n=m=0; memset(num,0,sizeof(num)); }\n}A,trans;\nMatrix operator*(Matrix a,Matrix b)\n{\n    Matrix c;\n    c.n=a.n,c.m=b.m;\n    for(int k=1;k<=a.m;k++)\n        for(int i=1;i<=c.n;i++)\n            for(int j=1;j<=c.m;j++)\n                c.num[i][j]=(c.num[i][j]+a.num[i][k]*b.num[k][j]%p)%p;\n    return c;\n}\nvoid Pow(ll c)\n{\n    while(c)\n    {\n        if(c&1) A=A*trans;\n        trans=trans*trans;\n        c>>=1;\n    }\n}\n\nvoid dfs(int x,int sta) //\u5f53\u524d\u8981\u52a0\u5165\u7b2cx\u4e2a\u70b9\u7684\u8054\u901a\u72b6\u6001\uff0c\u5f53\u524d\u7684\u72b6\u6001\u4e3asta\n{\n    if(x==K+1)\n    {\n        memset(siz,0,sizeof(siz));\n        A.num[1][++tot]=1;\n        for(int i=1;i<=K;i++)\n            siz[sta>>((i-1)*3)&7]++;\n        for(int i=0;i<K;i++)\n            A.num[1][tot]*=Tr_siz[siz[i]];\n        status[tot]=sta;\n        hash[sta]=tot;\n        return;\n    }\n    int tmp=-1; //\u8054\u901a\u5757\u7684\u6700\u5927\u7f16\u53f7,\u8054\u901a\u5757\u7f16\u53f7\u7684\u533a\u95f4\u662f[0,K-1]\n    for(int i=1;i<x;i++) //!!!\u5f53\u524d\u7684sta\u91cc\u53ea\u4fdd\u5b58\u4e861~pos-1\u8fd9\u4e9b\u70b9\u7684\u8fde\u901a\u6027\n        tmp=max(tmp,sta>>((i-1)*3)&7);\n    for(int i=0;i<=tmp+1&&i<K;i++)\n        dfs(x+1,sta<<3|i);\n}\n\nint find(int x) \n{\n    if(fa[x]==x) return x;\n    return fa[x]=find(fa[x]);\n}\n\nint Get_Status() //\u7528\u5f53\u524d\u7684\u5e76\u67e5\u96c6\u6765\u6c42\u51fa\u65b0\u7684\u70b92\u5230\u70b9k+1\u7684\u6700\u5c0f\u8868\u793a\n{\n    int sta=0,tot=0;\n    bool vis[Mx]; memset(vis,false,sizeof(vis));\n    for(int i=K+1;i>=2;i--)\n        if(!vis[i])\n        {\n            vis[i]=true,sta|=tot<<((i-2)*3);\n            for(int j=i-1;j>=2;j--)\n                if(find(i)==find(j))\n                    vis[j]=true,sta|=tot<<((j-2)*3);\n            tot++;\n        }\n    return hash[sta];\n}\n\nvoid cal(int sta,int addsta) //\u7528\u52a0\u8fb9\u72b6\u6001addsta\u53bb\u66f4\u65b0\u6700\u5c0f\u8868\u793a\u6cd5sta,addsta\u91cc\u7684\u7b2ci\u4f4d\u4e3a1\u8868\u793a\u7b2ck+1\u4e2a\u70b9\u8981\u548c\u70b9i+1\u8fde\u65b0\u8fb9\n{\n    for(int i=0;i<=K+1;i++) fa[i]=i;\n    for(int i=1;i<=K;i++) //\u679a\u4e3e\u70b9\u5bf9(i,j)\u662f\u5426\u5728\u6700\u5c0f\u8868\u793a\u6cd5\u91cc\u7684\u540c\u4e00\u8054\u901a\u5757\u5185\uff0c\u5c06\u6700\u5c0f\u8868\u793a\u6cd5\u4e2d\u7684\u8fde\u901a\u6027\u7528\u5e76\u67e5\u96c6\u8868\u793a\n        for(int j=i+1;j<=K;j++)\n            if((status[sta]>>((i-1)*3)&7)==(status[sta]>>((j-1)*3)&7))\n            {\n                int rooti=find(i),rootj=find(j);\n                if(rooti!=rootj) fa[rooti]=rootj;\n            }\n    for(int i=1;i<=K;i++)\n        if(addsta&(1<<(i-1)))\n        {\n            int rooti=find(i),rootj=find(K+1);\n            if(rooti==rootj) return; //\u5224\u73af\uff0c\u52a0\u7684\u65b0\u8fb9\u7684\u4e24\u7aef\u70b9\u539f\u6765\u5c31\u662f\u8054\u901a\u7684\uff0c\u52a0\u5165\u65b0\u8fb9\u540e\u4f1a\u51fa\u73b0\u73af\n            fa[rooti]=rootj;\n        }\n    bool flag=false; //flag=true\u8868\u793a\u6709\u70b9\u548c\u70b91\u8054\u901a\n    for(int i=2;i<=K+1;i++)\n        if(find(i)==find(1))\n        {\n            flag=true; break;\n        }\n    if(!flag) return; //\u70b91\u4e0d\u94fe\u63a5\u540e\u9762\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u751f\u6210\u6811\u4e0d\u8054\u901a\n    trans.num[sta][Get_Status()]++;\n}\n\nint main()\n{\n    scanf(\"%d%lld\",&K,&n);\n    dfs(1,0); A.n=1; A.m=trans.n=trans.m=tot;\n    for(int i=1;i<=tot;i++)\n        for(int j=0;j<(1<<K);j++) cal(i,j);\n    Pow(n-K); printf(\"%lld\\n\",A.num[1][1]);\n    return 0;\n}\n```",
        "postTime": 1547211169,
        "uid": 154004,
        "name": "Jiang_zi_chuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007]\u751f\u6210\u6811\u8ba1\u6570\u3011"
    },
    {
        "content": "### Description\n\n\u6700\u8fd1\uff0c\u5c0f\u680b\u5728\u65e0\u5411\u8fde\u901a\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u8ba1\u7b97\u65b9\u9762\u6709\u4e86\u60ca\u4eba\u7684\u8fdb\u5c55\uff0c\u4ed6\u53d1\u73b0\uff1a\n\n>$n$\u4e2a\u7ed3\u70b9\u7684\u73af\u7684\u751f\u6210\u6811\u4e2a\u6570\u4e3a$n$\u3002\n\n>$n$\u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u4e3a$n^{n-2}$\u3002\n\n\n\u8fd9\u4e24\u4e2a\u53d1\u73b0\u8ba9\u5c0f\u680b\u6b23\u559c\u82e5\u72c2\uff0c\u7531\u6b64\u66f4\u52a0\u575a\u5b9a\u4e86\u4ed6\u7ee7\u7eed\u8ba1\u7b97\u751f\u6210\u6811\u4e2a\u6570\u7684\u60f3\u6cd5\uff0c\u4ed6\u8981\u8ba1\u7b97\u51fa\u5404\u79cd\u5404\u6837\u56fe\u7684\u751f\u6210\u6811\u6570\u76ee\u3002\u4e00\u5929\uff0c\u5c0f\u680b\u548c\u540c\u5b66\u805a\u4f1a\uff0c\u5927\u5bb6\u56f4\u5750\u5728\u4e00\u5f20\u5927\u5706\u684c\u5468\u56f4\u3002\u5c0f\u680b\u770b\u4e86\u770b\uff0c\u9a6c\u4e0a\u60f3\u5230\u4e86\u751f\u6210\u6811\u95ee\u9898\u3002\u5982\u679c\u628a\u6bcf\u4e2a\u540c\u5b66\u770b\u6210\u4e00\u4e2a\u7ed3\u70b9\uff0c\u90bb\u5ea7\uff08\u7ed3\u70b9\u95f4\u8ddd\u79bb\u4e3a1\uff09\u7684\u540c\u5b66\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u73af\u3002\u53ef\u662f\uff0c\u5c0f\u680b\u5bf9\u73af\u7684\u8ba1\u6570\u5df2\u7ecf\u5341\u5206\u5a34\u719f\u4e14\u4e0d\u518d\u611f\u5174\u8da3\u3002\n\n\u4e8e\u662f\uff0c\u5c0f\u680b\u53c8\u628a\u56fe\u53d8\u4e86\u4e00\u4e0b\uff1a\u4e0d\u4ec5\u628a\u90bb\u5ea7\u7684\u540c\u5b66\u4e4b\u95f4\u8fde\n\u4e00\u6761\u8fb9\uff0c\u8fd8\u628a\u76f8\u9694\u4e00\u4e2a\u5ea7\u4f4d\uff08\u7ed3\u70b9\u95f4\u8ddd\u79bb\u4e3a2\uff09\u7684\u540c\u5b66\u4e4b\u95f4\u4e5f\u8fde\u4e00\u6761\u8fb9\uff0c\u5c06\u7ed3\u70b9\u95f4\u6709\u8fb9\u76f4\u63a5\u76f8\u8fde\u7684\u8fd9\u4e24\u79cd\u60c5\u51b5\u7edf\u79f0\n\u4e3a\u6709\u8fb9\u76f8\u8fde\uff0c\u5982\u56fe1\u6240\u793a\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/12787.png)\n\n\u5c0f\u680b\u4ee5\u524d\u6ca1\u6709\u8ba1\u7b97\u8fc7\u8fd9\u7c7b\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\uff0c\u4f46\u662f\uff0c\u4ed6\u60f3\u8d77\u4e86\u8001\u5e08\u8bb2\u8fc7\u7684\u8ba1\u7b97\u4efb\u610f\u56fe\u7684\u751f\u6210\u6811\u4e2a\u6570\u7684\u4e00\u79cd\u901a\u7528\u65b9\u6cd5\uff1a\n\u6784\u9020\u4e00\u4e2a$n\u00d7n$\u7684\u77e9\u9635$A$={$a_{ij}$},\u5176\u4e2d\n\n![](https://cdn.luogu.com.cn/upload/pic/12788.png)\n\n\n\u5176\u4e2d$di$\u8868\u793a\u7ed3\u70b9i\u7684\u5ea6\u6570\u3002\u4e0e\u56fe1\u76f8\u5e94\u7684$A$\u77e9\u9635\u5982\u4e0b\u6240\u793a\u3002\u4e3a\u4e86\u8ba1\u7b97\u56fe1\u6240\u5bf9\u5e94\u7684\u751f\u6210\u6570\u7684\u4e2a\u6570\uff0c\u53ea\u8981\u53bb\u6389\u77e9\u9635A\u7684\u6700\n\u540e\u4e00\u884c\u548c\u6700\u540e\u4e00\u5217\uff0c\u5f97\u5230\u4e00\u4e2a$(n-1)\u00d7(n-1)$\u7684\u77e9\u9635$B$\uff0c\u8ba1\u7b97\u51fa\u77e9\u9635$B$\u7684\u884c\u5217\u5f0f\u7684\u503c\u4fbf\u53ef\u5f97\u5230\u56fe1\u7684\u751f\u6210\u6811\u7684\u4e2a\u6570\n\n![](https://cdn.luogu.com.cn/upload/pic/12789.png)\n\n\u6240\u4ee5\n\u751f\u6210\u6811\u7684\u4e2a\u6570\u4e3a$|B|=3528$\u3002\u5c0f\u680b\u53d1\u73b0\u5229\u7528\u901a\u7528\u65b9\u6cd5\uff0c\u56e0\u8ba1\u7b97\u8fc7\u4e8e\u590d\u6742\u800c\u5f88\u96be\u7b97\u51fa\u6765\uff0c\u800c\u4e14\u7528\u5176\u4ed6\u65b9\u6cd5\u4e5f\u96be\u4ee5\u627e\u5230\u66f4\n\u7b80\u4fbf\u7684\u516c\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4e8e\u662f\uff0c\u4ed6\u5c06\u56fe\u505a\u4e86\u7b80\u5316\uff0c\u4ece\u4e00\u4e2a\u5730\u65b9\u5c06\u5706\u684c\u65ad\u5f00\uff0c\u8fd9\u6837\u6240\u6709\u7684\u540c\u5b66\u5f62\u6210\u4e86\u4e00\u6761\u94fe\uff0c\u8fde\u63a5\u8ddd\u79bb\n\u4e3a1\u548c\u8ddd\u79bb\u4e3a2\u7684\u70b9\u3002\u4f8b\u5982\u516b\u4e2a\u70b9\u7684\u60c5\u5f62\u5982\u4e0b\uff1a\n\n\n![](https://cdn.luogu.com.cn/upload/pic/12790.png)\n\n\u8fd9\u6837\u751f\u6210\u6811\u7684\u603b\u6570\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u3002\u5c0f\u680b\u4e0d\u505c\u7684\u601d\u8003\uff0c\u4e00\u76f4\u5230\u805a\u4f1a\u7ed3\u675f\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86\u4e00\u79cd\u5feb\u6377\u7684\u65b9\u6cd5\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u56fe\u7684\n\u751f\u6210\u6811\u4e2a\u6570\u3002\u53ef\u662f\uff0c\u5982\u679c\u628a\u8ddd\u79bb\u4e3a3\u7684\u70b9\u4e5f\u8fde\u8d77\u6765\uff0c\u5c0f\u680b\u5c31\u4e0d\u77e5\u9053\u5982\u4f55\u5feb\u6377\u8ba1\u7b97\u4e86\u3002\u73b0\u5728\uff0c\u8bf7\u4f60\u5e2e\u52a9\u5c0f\u680b\u8ba1\u7b97\u8fd9\u7c7b\n\u56fe\u7684\u751f\u6210\u6811\u7684\u6570\u76ee\u3002\n\n\n\n### HINT\n\n\n\u56e0\u4e3a$k$\u5f88\u5c0f\uff0c\u6240\u4ee5\u8003\u8651**\u72b6\u6001\u538b\u7f29**\n\n\u6bcf\u4e00\u4e2a\u72b6\u6001\u8868\u793a$i$\u7684\u524d$k$\u4e2a\u70b9\u5404\u81ea\u5c5e\u4e8e\u54ea\u4e2a**\u8fde\u901a\u5757**\n\n\u7528\u4e00\u4e2a$k$\u4f4d\u7684$k$\u8fdb\u5236\u6570\u8868\u793a\u72b6\u6001\n\n\u7136\u800c\u72b6\u6001\u5f88\u591a\uff0c\u7528**\u6700\u5c0f\u8868\u793a\u6cd5**\n\n\u5373$122$\u4e0e$233$\u662f**\u7b49\u4ef7**\u7684\n\n\u8fd9\u6837\u72b6\u6001\u4e0d\u8d85\u8fc752\n\n\u7136\u540e\u5c31\u53ef\u4ee5$dp$\n\n$f[i]$ $[S]$ $=$ $\u2211_{Slast}$ $f$ $[i\u22121]$  $[Slast]$\n\n\u663e\u7136\u53ef\u4ee5\u7528**\u77e9\u9635\u5feb\u901f\u5e42**\n\n\u5b9e\u73b0\u679a\u4e3e$S$\uff0c\u627e\u5230\u901a\u8fc7\u53d8\u6362\u80fd\u5f62\u6210\u7684\u6240\u6709\u72b6\u6001\n\n\u5177\u4f53\u901a\u8fc7\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u8868\u793a\u7b2c$k+1$\u4e2a\u70b9\u5411\u54ea\u4e9b\u70b9\u8fde\u8fb9\n\n\u7528**\u5e76\u67e5\u96c6**\u5224\u65ad\uff0c\u5e76\u5c06\u65b0\u7684\u72b6\u6001\u6539\u4e3a\u6700\u5c0f\u8868\u793a\n\n## $Code$\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ntypedef long long lol;\nlol cnt,n,Mod=65521,k,id[100001],vis[201],set[201];\nlol h[201],v[201];\nstruct Matrix\n{\n  lol a[201][201];\n  Matrix operator * (const Matrix &x) const\n  {\n    Matrix res;\n    memset(res.a,0,sizeof(res.a));\n    for(int i=1;i<=cnt;++i)\n      for(int j=1;j<=cnt;++j)\n        for(int k=1;k<=cnt;++k)\n        res.a[i][j]=(res.a[i][j]+(a[i][k]*x.a[k][j])%Mod)%Mod;\n    return res;\n  }\n}ans,Mat;\nint find(int x)\n{\n  if (set[x]!=x) set[x]=find(set[x]);\n  return set[x];\n}\nlol pow(lol x,lol y)\n{\n  lol res=1;\n  while (y)\n    {\n      if (y&1) res=res*x%Mod;\n      x=x*x%Mod;\n      y>>=1;\n    }\n  return res;\n}\nMatrix qpow(lol y)\n{int i;\n  Matrix res;\n  memset(res.a,0,sizeof(res.a));\n  for (i=1;i<=cnt;i++)\n    res.a[i][i]=1;\n  while (y)\n    {\n      if (y&1) res=res*Mat;\n      Mat=Mat*Mat;\n      y>>=1;\n    }\n  return res;\n}\nvoid dfs(int x,int ed,int S)\n{int i;\n  if (x==k+1)\n    {\n      id[S]=++cnt;\n      h[cnt]=S;\n      return;\n    }\n  for (i=1;i<=ed;i++)\n    dfs(x+1,ed+(i==ed),(i<<(3*(x-1)))+S);\n}\nint get_id()\n{\n  memset(vis,-1,sizeof(vis));\n  int cc=0,i;\n  for (i=2;i<=k+1;i++)\n    if (vis[find(i)]==-1) vis[find(i)]=++cc;\n  int x=0;\n  for (i=2;i<=k+1;i++)\n    {\n      x+=(vis[find(i)]<<(3*(i-2)));\n    }\n  return id[x];\n}\nvoid build_Mat(int now,int add)\n{int i,j,flag;\n  for (i=0;i<=k+1;i++)\n    set[i]=i;\n  for (i=1;i<=k;i++)\n    {\n      for (j=i+1;j<=k;j++)\n    if ((now>>((i-1)*3)&7)==(now>>((j-1)*3)&7))\n    {\n      int p=find(i),q=find(j);\n      if (p!=q) set[p]=q;\n    }\n    }\n  for (i=1;i<=k;i++)\n    if (add&(1<<i-1))\n      {\n    int p=find(i),q=find(k+1);\n    if (p==q) return;\n    set[p]=q;\n      }\n  flag=0;\n  for (i=2;i<=k+1;i++)\n    {\n      if (find(1)==find(i)) {flag=1;break;}\n    }\n  if (!flag) return;\n  Mat.a[id[now]][get_id()]++;\n}\nint main()\n{int i,j;\n  cin>>k>>n;\n  dfs(1,1,0);\n  for (i=1;i<=cnt;i++)\n    {\n      for (j=0;j<(1<<k);j++)\n    {\n      build_Mat(h[i],j);\n    }\n    }\n  for (i=1;i<=cnt;i++)\n    {\n      memset(v,0,sizeof(v));\n      int x=h[i];\n      int as=1;\n      for (j=1;j<=k;j++)\n    {\n      v[x>>(3*(j-1))&7]++;\n    }\n      for (j=1;j<=k;j++)\n    if (v[j]>=2)\n    {\n      as*=pow(v[j],v[j]-2);\n    }\n      ans.a[1][i]=as;\n    }\n  ans=ans*qpow(n-k);\n  cout<<ans.a[1][1]<<endl;\n}\n```",
        "postTime": 1609037578,
        "uid": 227049,
        "name": "\u9f9a\u7956\u8c6a\u66fe\u7528\u53f7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2109 \u3010[NOI2007] \u751f\u6210\u6811\u8ba1\u6570\u3011"
    }
]