[
    {
        "content": "> Update on 2020.10.8\uff1a\u6dfb\u52a0\u4e86\u4e00\u4e9b\u53c2\u8003\u94fe\u63a5\u3002\n\n\u5e0c\u671b\u770b\u5230\u8fd9\u4e00\u7bc7\u5e2e\u5fd9\u9876\u4e00\u4e0b\uff0c\u4e0d\u7136\u771f\u5c31\u5168\u7f51\u4eba\u7c7b\u667a\u6167 kdt \u6cdb\u6ee5\u4e86\u3002\u3002\u3002\n\n\u6709\u4e24\u4e2a **\u590d\u6742\u5ea6\u6b63\u786e** \u7684\u89e3\u6cd5\u54e6\uff01\n\n\u4ee3\u7801\u8be6\u89c1 https://www.luogu.com.cn/paste/tlbnzyno\n\n### Description\n\n\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684 $n$ \u4e2a\u5706\uff0c\u7528\u4e09\u4e2a\u53c2\u6570 $(x, y, R)$ \u8868\u793a\u5706\u5fc3\u5750\u6807\u548c\u534a\u5f84\u3002\n\n\u6bcf\u6b21\u9009\u53d6\u6700\u5927\u7684\u4e00\u4e2a\u5c1a\u672a\u88ab\u5220\u9664\u7684\u5706\u5220\u9664\uff0c\u5e76\u540c\u65f6\u5220\u9664\u6240\u6709\u4e0e\u5176\u76f8\u5207\u6216\u76f8\u4ea4\u7684\u5706\u3002\n\n\u6700\u540e\u8f93\u51fa\u6bcf\u4e2a\u5706\u5206\u522b\u662f\u88ab\u90a3\u4e2a\u5706\u6240\u5220\u9664\u7684\u3002\n\n### Hint\n\n- $1\\le n\\le 3\\times 10^5$\n- $0\\le |x|, |y|, R \\le 10^9$\n\n### Solution 1\n\n\u540e\u6765\u5728 Codeforces \u4e0a\u627e\u5230\u7684\u5b98\u65b9\u9898\u89e3 [Link here](http://codeforces.com/blog/entry/59650)\u3002\u5982\u679c\u5bf9\u9898\u89e3\u4e2d\u67d0\u4e9b\u8bf4\u660e\u65e0\u6cd5\u7406\u89e3\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u5185\u5bb9\u3002\u505a\u6cd5\u53c2\u8003\uff1a[Link here](https://www.cnblogs.com/clrs97/p/10340285.html#4662153)\u3002\n\n\u6709\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 $O(n^2)$ \u66b4\u529b\uff0c\u7531\u4e8e\u6bcf\u6b21\u90fd\u8981\u626b\u4e00\u904d\u6240\u6709\u5706\u6240\u4ee5\u590d\u6742\u5ea6\u7206\u70b8\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u526a\u679d\uff0c\u7f29\u5c0f\u679a\u4e3e\u7684\u8303\u56f4\u3002\n\n\u82e5\u5f53\u524d\u6700\u5927\u5706\u7684\u534a\u5f84\u4e3a $R$\uff0c\u90a3\u4e48\u6211\u4eec\u505a\u4e00\u4e2a\u5206\u5757\u64cd\u4f5c\uff1a\u5c06\u6574\u4e2a\u5e73\u9762 **\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u65b9\u683c**\uff0c\u65b9\u683c\u7684\u8fb9\u957f\u4e3a $2R$\uff0c\u521a\u597d\u201c\u6846\u4f4f\u201d\u8fd9\u4e2a\u6700\u5927\u5706\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u8fd9\u4e2a\u5706\uff0c\u6211\u4eec\u53ea\u8981\u641c\u7d22 **\u5176\u6240\u5728\u683c\u5b50\u53ca\u5176\u76f8\u90bb\u7684** \u5373\u53ef\uff08\u4e24\u4e2a\u683c\u5b50\u76f8\u90bb\u5b9a\u4e49\u4e3a\u6240\u5728\u884c\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 1\uff0c\u4e14\u5217\u8ddd\u79bb\u4e5f\u4e0d\u8d85\u8fc7 1\uff0c\u6362\u8a00\u4e4b\uff0c\u4e00\u4e2a\u683c\u5b50\u6240\u6709\u76f8\u90bb\u7684\u5c31\u662f\u5468\u56f4\u4e00\u5708 8 \u4e2a\uff09\u3002\u663e\u7136\u8fd9\u6837\u662f\u4e0d\u4f1a\u6f0f\u8bb0\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u5706\u7684\u534a\u5f84\u90fd\u4e0d\u8d85\u8fc7\u65b9\u683c\u5927\u5c0f\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u4e24\u4e2a\u5706\u76f8\u4ea4\u6216\u76f8\u5207\uff0c\u4f46\u5374\u4e0d\u5728\u76f8\u90bb\u4e24\u4e2a\u65b9\u683c\u5185\u3002\n\n\u4f46\u6211\u4eec\u603b\u4e0d\u80fd\u6bcf\u6b21\u90fd\u641c\u600e\u4e48\u5927\u7684\u683c\u5b50\uff0c\u6700\u5927\u5706\u7684\u5927\u5c0f\u5982\u679c\u975e\u5e38\u5927\u800c\u5176\u4ed6\u5706\u53c8\u5f88\u5c0f\u7684\u8bdd\u8fd9\u4e2a\u526a\u679d\u6ca1\u6709\u4e1d\u6beb\u7528\u5904\u3002\u56e0\u6b64\u6211\u4eec\u5f15\u5165\u4e00\u4e2a **\u91cd\u6784\u673a\u5236**\uff1a\u8bbe\u73b0\u5728\u8003\u8651\u5230\u7684\u5706\u7684\u534a\u5f84\u4e3a $R^\\prime$\uff0c\u539f\u6765\u65b9\u683c\u5927\u5c0f\u4e3a $L$\u3002\u82e5 $R^\\prime < L$\uff0c\u90a3\u4e48 **\u91cd\u6784\u6574\u4e2a\u65b9\u683c**\uff0c\u5e76\u4ee5 $2R^\\prime$ \u4f5c\u4e3a\u65b0\u7684\u65b9\u683c\u5927\u5c0f $L$\u3002\n\n\u91cd\u6784\u7684\u590d\u6742\u5ea6\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898\uff1f\u89c2\u5bdf\u5230\uff0c\u5f53\u534a\u5f84\u4e0d\u8db3\u65b9\u683c\u5927\u5c0f\u7684\u4e00\u534a\u65f6\u624d\u4f1a\u91cd\u6784\uff0c\u91cd\u6784\u4e4b\u540e\u5982\u679c\u53c8\u6765\u4e00\u6b21\u90a3\u53c8\u5f97\u4e00\u534a\u3002\u4e8e\u662f\u6574\u4e2a\u7b97\u6cd5\u4e0d\u4f1a\u6709\u8d85\u8fc7 $O(\\log R)$ \u6b21\u91cd\u6784\uff0c\u800c\u4e00\u6b21\u91cd\u6784\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230 $O(n\\log n)$\uff08\u6392\u5e8f\u65f6\u91cd\u6784\uff0c\u641c\u7d22\u65f6\u4e8c\u5206\uff09\uff0c\u6240\u4ee5\u603b\u5171\u6700\u591a\u4e5f\u5c31\u4e24\u53ea $\\log$\uff0c\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u6bcf\u4e2a\u5706\u88ab\u68c0\u67e5\u7684\u6b21\u6570\u4e3a\u5e38\u6570\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u5706\uff0c\u4e00\u4e2a\u65b9\u683c\u4e2d\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u5927\u5c0f\u76f8\u4f3c\u7684\u5927\u5706\u5bf9\u5b83\u8fdb\u884c\u68c0\u67e5\uff0c\u8fd9\u4e9b\u5927\u5706\u4f1a\u5728\u4e4b\u524d\u5c31\u4f1a\u88ab\u4e92\u76f8\u6d88\u9664\u6389\u3002\n\n\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log n\\log R)$\u3002\n\n\u4f46\u5176\u5b9e\u91cd\u6784\u662f\u53ef\u4ee5\u505a\u5230\u4e00\u6b21 $O(n)$ \u7684\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f\u4f18\u79c0\u7684 $O(n(\\log n+\\log R))$\u3002\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4e0a\u8ff0\u94fe\u63a5\u3002\n\n### Solution 2\n\n*\u867d\u7136\u4e5f\u662f\u6709\u7406\u6709\u636e\u7684 $\\log^2$ \u4f46\u8dd1\u7684\u771f\u7684\u5f88\u6162\u3002* \u505a\u6cd5\u53c2\u8003\uff1a[Link here](https://www.cnblogs.com/ywwyww/p/9083228.html)\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5706 $(x, y, R)$\uff0c\u8003\u8651\u5982\u4f55\u5f97\u5230\u6bd4\u5b83\u5927\u7684\u4e0e\u4e4b\u76f8\u4ea4\u6216\u76f8\u5207\uff0c\u5e76\u4e14 **\u4e0d\u662f\u56e0\u4e3a\u5176\u4ed6\u5706\u800c\u88ab\u5e26\u8d70\u7684\u5706**\u3002\n\n\u8fd9\u4e9b\u5706\u4e4b\u95f4 **\u4e0d\u53ef\u80fd\u53c8\u6709\u516c\u5171\u90e8\u5206**\uff0c\u5426\u5219\u5b83\u4eec\u4e4b\u95f4\u4f1a\u4e92\u76f8\u6d88\u9664\u3002\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4e1c\u897f\uff1a\u8fd9\u4e9b\u5706\u4e00\u5b9a\u5728\u77e9\u5f62 $(x-R, y-R) \\sim (x + R, y + R)$ \u7684 **\u8fb9\u6846** \u4e0a\u3002\u4e0d\u4f1a\u51fa\u73b0\u5728\u5185\u90e8\u662f\u56e0\u4e3a\u8fd9\u4e9b\u5706\u662f\u6bd4\u5f53\u524d\u5706\u5927\u7684\u3002\n\n\u5bf9\u4e8e $x$ \u65b9\u5411\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b\u524d\u9762\u7684\u626b\u63cf\u7ebf\uff0c\u90a3\u4e48\u524d\u9762\u6bcf\u4e2a\u5706\u4f1a\u6709 $x+R, x-R$ \u4e24\u6761\u3002\u7136\u540e\u5411\u540e\u505a\uff0c\u6bcf\u6b21\u52a0\u5165\u662f\u5c06 $y$ \u65b9\u5411\u7684\u4e24\u6761\u626b\u63cf\u7ebf\u52a0\u8fdb\u53bb\uff0c\u67e5\u8be2\u662f\u67e5\u8be2 $y$ \u65b9\u5411\u7684 **\u524d\u9a71\u540e\u7ee7** \u5373\u53ef\u3002\u8fd9\u4e2a\u7528\u5e73\u8861\u6811\uff08```set```\uff09\u663e\u7136\u53ef\u4ee5\u641e\u3002\n\n\u7136\u800c\u53d1\u73b0\u8fd9\u6837\u53ea\u662f\u6c42\u51fa\u4e00\u4e2a\u5706\u7684\u7b54\u6848\u3002\u73b0\u5b9e\u76f8\u5f53\u4e8e\u8981\u591a\u7ec4\u8be2\u95ee\uff0c\u90a3\u4e48\u6211\u4eec **CDQ \u5206\u6cbb**\uff01\n\n\u9996\u5148\u80af\u5b9a\u662f\u6309 $R$ \u6392\u5e8f\u3002\u7136\u540e\u5148\u9012\u5f52\u5de6\u4fa7\uff0c\u5904\u7406\u5b8c\u5de6\u4fa7\u5927\u7684\u5bf9\u53f3\u4fa7\u5c0f\u7684\u5f71\u54cd\uff0c\u7136\u540e\u9012\u5f52\u53f3\u4fa7\u3002\u5982\u679c\u662f\u9012\u5f52\u5230\u91cd\u70b9 $l=r$ \u7684\u8bdd\uff0c\u53d1\u73b0\u8fd9\u91cc\u8fd8\u6ca1\u6709\u5220\u9664\u90a3\u5c31\u81ea\u5df1\u5220\u6389\uff0c**\u6807\u8bb0\u4e00\u4e0b\u8fd9\u4e2a\u4e0d\u662f\u88ab\u5e26\u8d70\u7684**\u3002\n\n\u4e3b\u8981\u600e\u4e48\u505a\u5de6\u4fa7\u5bf9\u53f3\u4fa7\u7684\u5f71\u54cd\u3002\u9996\u5148\u5bf9\u4e8e\u5de6\u8fb9\u7684\uff0c\u6211\u4eec\u53d6\u51fa\u6240\u6709 **\u4e0d\u662f\u88ab\u5e26\u8d70\u7684** \u5706\u7684\u626b\u63cf\u7ebf\uff0c\u4f5c\u4e3a\u201c\u4fee\u6539\u201d\uff1b\u53f3\u4fa7\u5219\u53d6\u51fa\u5168\u90e8\uff0c\u4f5c\u4e3a\u201c\u67e5\u8be2\u201d\u3002\u4fee\u6539\u90e8\u5206\uff0c\u5f62\u5982 $x-R$ \u7684\u662f\u201c\u63d2\u5165\u201d\uff0c$x+R$ \u662f\u201c\u5220\u9664\u201d\uff0c\u5206\u522b\u8868\u793a\u52a0\u5165\u53ef\u80fd\u7684\u7b54\u6848\u548c\u79fb\u9664\u8fd9\u4e2a\u5df2\u7ecf\u6ca1\u6709\u7684\u7b54\u6848\u3002\u67e5\u8be2\u90e8\u5206\u663e\u7136\u4e24\u8fb9\u90fd\u662f\u8981\u67e5\u8be2\u7684\u3002\n\n\u6700\u540e\u5f97\u5230\u4e86\u4e00\u5806\u626b\u63cf\u7ebf\uff0c\u7136\u540e\u6309\u5750\u6807\u5927\u5c0f\u7684\u987a\u5e8f\u53bb\u505a\u3002\u63d2\u5165\u65f6\u5c06\u8fd9\u4e2a\u5706\u7684 $y$ \u5750\u6807\u63d2\u5165\uff0c\u5220\u9664\u65f6\u4e5f\u5c06\u8fd9\u4e2a\u5706\u7684 $y$ \u5750\u6807\u5220\u9664\u3002\u67e5\u8be2\u5c31\u662f $y$ \u5750\u6807\u7684\u524d\u9a71\u540e\u7ee7\u5373\u53ef\u3002\u6ce8\u610f\u7b54\u6848\u5bf9\u7f16\u53f7\u53d6 min\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n\\log^2 n)$ \u7684\uff0c~~\u7136\u800c\u88ab\u968f\u673a\u9009\u62e9 KDT \u540a\u8d77\u6765\u6253 QAQ~~\n\n### Solution 3\n\n\u65e2\u7136\u662f\u201c\u4e8c\u7ef4\u5e73\u9762\u201d\uff0c\u90a3\u4e48\u53ef\u4ee5 **KDT** \u66b4\u529b\u641e\u3002\n\n\u9996\u5148\u4e00\u4e2a\u5706\u5fc3\u4e3a $(x, y)$\uff0c\u534a\u5f84\u4e3a $R$ \u7684\u5706\uff0c\u6211\u4eec\u53ef\u4ee5\u7c97\u7565\u5730\u8ba4\u4e3a\u662f\u4e00\u4e2a\u77e9\u5f62\u533a\u57df $(x-R, y-R)\\sim (x+R, y+R)$\u3002\n\n\u90a3\u4e48\u8003\u8651\u7528 KDT \u7ef4\u62a4\u8fd9\u4e9b\u77e9\u5f62\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5706\uff0c\u641c\u7d22\u53ef\u80fd\u4e0e\u4e4b\u6709\u4ea4\u96c6\u7684\u533a\u57df\u5373\u53ef\u3002\n\n\u4f46\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(\\text{\u7384\u5b66})$ \u800c\u4e14\u53ef\u80fd\u88ab\u5361\u3002\n\n\u4e8e\u662f\u53d1\u626c\u4eba\u7c7b\u667a\u6167\uff0c\u5c06\u6240\u6709\u7684\u70b9 **\u968f\u673a\u65cb\u8f6c** \u4e00\u4e2a\u89d2\u5ea6\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u8fc7 LOJ \u6570\u636e\u4e86\u3002\n\n\u4e0d\u8fc7 Luogu \u4e0d\u9700\u8981\u65cb\u8f6c qwq\u3002\n\n\u601d\u7ef4\u96be\u5ea6\u3001\u4ee3\u7801\u96be\u5ea6\u548c\u901f\u5ea6\u5168\u65b9\u4f4d\u78be\u538b Sol 1 & 2\u3002\n\n### Code\n\nhttps://www.luogu.com.cn/paste/tlbnzyno",
        "postTime": 1597828281,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4631 \u3010[APIO2018] Circle selection \u9009\u5706\u5708\u3011"
    },
    {
        "content": "\u9898\u76ee\u592a\u706b\uff0c\u6b63\u89e3\u65e0\u4ece\u60f3\u8c61\uff0c\u51c6\u5907\u66b4\u529b\u9a97\u5206\u3002\n\n\u4ec0\u4e48\u4e1c\u897f\u80fd\u591f\u5feb\u901f\u7ef4\u62a4\u5e73\u9762\u4e0a\u7684\u4e1c\u897f\uff1f\n\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u3001\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff1f\u849f\u84bb\u4e0d\u4f1a\u3002\u3002\u3002\n\u4e8e\u662f\u5c31\u53ea\u5269$kd-tree$\u4e86\u3002\n\n$kd-tree$\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u7ecf\u8fc7\u4f18\u5316\u7684\u66b4\u529b\uff08\u4f18\u5316\u5728\u7f29\u5c0f\u641c\u7d22\u8303\u56f4\uff0c\u53ea\u5bf9\u8fd1\u90bb\u8fdb\u884c\u641c\u7d22\uff09\uff0c\u662f\u9760\u526a\u679d\u5403\u996d\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u7ef4\u62a4\u6bcf\u4e2a\u5706\u5728$x,y$\u8f74\u7684\u8303\u56f4\uff0c\u5373$[x-r,x+r],[y-r,y+r]$\u3002\n\n\u8fd9\u6837\u76f8\u5f53\u4e8e\u7ef4\u62a4\u4e00\u4e2a\u77e9\u5f62\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u6f0f\u6389\u7b54\u6848\uff0c\u5e76\u4e14\u7ef4\u62a4\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\n\n\u4e8e\u662f\u5efa\u5b8c\u6811\u540e\uff0c\u4ece\u524d\u5f80\u540e\u5bf9\u6bcf\u4e2a\u5706\u901a\u8fc7$kd-tree$\u66b4\u529b\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u7136\u800c\u8fd9\u6837\u53ea\u6709$42pts$\uff0c\u6211\u4eec\u9700\u8981\u66f4\u591a\u526a\u679d\u3002\n\n\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5982\u679c\u641c\u5230\u4e00\u4e2a\u5706\uff0c\u5728\u5f53\u524d\u7edf\u8ba1\u7b54\u6848\u7684\u5706\u7684\uff08\u77e9\u5f62\uff09\u8303\u56f4\u4e4b\u5916\uff0c\u8fd9\u4e2a\u5706\u663e\u7136\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u53ef\u4ee5\u8df3\u8fc7\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d1b\u8c37\u6570\u636e\u4e86\uff1f\u7136\u800c$loj$\u4e0a\u8dd1\u4e0d\u8fc7\u6700\u540e\u4e00\u6863\u3002\n\n\u628a\u6bcf\u4e2a\u70b9\u8f6c\u4e00\u4e2a\u89d2\u5ea6\u5e94\u8be5\u53ef\u4ee5\u8fc7\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#define re register\n#define il inline\n#define ll long long\n#define db double\n#define ls t[k].l\n#define rs t[k].r\n#define eps 1e-6\n#define pf(x) ((db)(1.0)*(x)*(x))\n#define max(a,b) (((a)>(b)?(a):(b)))\n#define min(a,b) (((a)<(b)?(a):(b)))\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nconst int N=3e5+100;\nint now,n,rt,ans[N];\nstruct dat\n{\n  int d[2],r,id;\n  bool operator < (const dat &o) const {return d[now]<o.d[now];}\n}a[N];\nstruct node\n{\n  dat a;\n  int l,r,mn[2],mx[2];\n}t[N];\nil int gi()\n{\n   re int x=0,t=1;\n   re char ch=getchar();\n   while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n   if(ch=='-') t=-1,ch=getchar();\n   while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n   return x*t;\n}\nil void cmax(re int &x,re int y){x=max(x,y);}\nil void cmin(re int &x,re int y){x=min(x,y);}\nil bool cmp(dat x,dat y){return (x.r==y.r)?(x.id<y.id):(x.r>y.r);}\nstruct kd_tree\n{\n  il void upd(re int k,re int p)\n  {\n    cmin(t[k].mn[0],t[p].mn[0]);cmax(t[k].mx[0],t[p].mx[0]);\n    cmin(t[k].mn[1],t[p].mn[1]);cmax(t[k].mx[1],t[p].mx[1]);\n  }\n  il void pushup(re int k)\n  {\n        re int x=t[k].a.d[0],y=t[k].a.d[1],r=t[k].a.r;\n    t[k].mn[0]=x-r;t[k].mx[0]=x+r;\n    t[k].mn[1]=y-r;t[k].mx[1]=y+r;\n    if(ls) upd(k,ls);if(rs) upd(k,rs);\n  }\n  il void Build(re int &k,re int l,re int r,re int tag)\n  {\n    re int mid=l+r>>1;now=tag;\n    nth_element(a+l,a+mid,a+r+1);k=mid;\n    t[k].a=a[mid];\n    if(l<mid) Build(ls,l,mid-1,tag^1);else ls=0;\n    if(mid<r) Build(rs,mid+1,r,tag^1);else rs=0;\n    pushup(k);\n  }\n  il int check(re int k,re dat A)\n  {\n    re int x=A.d[0],y=A.d[1],r=A.r+t[k].a.r,xx=t[k].a.d[0],yy=t[k].a.d[1];\n    return pf(1ll*x-xx)+pf(1ll*y-yy)-eps<=pf(r);\n  }\n  il int far(re int k,re dat A)\n  {\n    re int x=A.d[0],y=A.d[1],r=A.r;\n    if(x+r<t[k].mn[0]) return 1;\n    if(y+r<t[k].mn[1]) return 1;\n    if(x-r>t[k].mx[0]) return 1;\n    if(y-r>t[k].mx[1]) return 1;\n    return 0;\n  }\n  il void Query(re int k,re dat A)\n  {\n    if(far(k,A)) return;\n    if(!ans[t[k].a.id]&&check(k,A)) ans[t[k].a.id]=A.id;\n    if(ls) Query(ls,A);if(rs) Query(rs,A);\n  }\n}kd;\nint main()\n{\n  n=gi();\n  fp(i,1,n)\n    {\n      a[i].d[0]=gi();a[i].d[1]=gi();a[i].r=gi();a[i].id=i;\n    }\n  kd.Build(rt,1,n,0);\n  sort(a+1,a+1+n,cmp);\n  fp(i,1,n) if(!ans[a[i].id]) kd.Query(rt,a[i]);\n  fp(i,1,n) printf(\"%d \",ans[i]);puts(\"\");\n  return 0;\n}\n```",
        "postTime": 1534855692,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4631 \u3010[APIO2018] Circle selection \u9009\u5706\u5708\u3011"
    },
    {
        "content": "\u795e\u5947\u526a\u679d\u3002\n\n\u628a\u6bcf\u4e2a\u5706\u7684\u6700\u5de6\u548c\u6700\u53f3\u53d6\u51fa\u6765\u4f5c\u4e3a\u4e24\u4e2a\u70b9\uff0c\u5373 $x_i-r_i$ \u548c $x_i+r_i$\uff0c\u603c\u5230\u6570\u7ec4\u91cc\u6392\u5e8f\u3002\u6bcf\u6b21\u5220\u9664\u7684\u65f6\u5019\u6c42\u51fa\u5f53\u524d\u7684\u5706\u7684\u8fd9\u4e24\u4e2a\u70b9\u4f5c\u4e3a $L,R$\u3002\u6bcf\u6b21\u8981\u5220\u9664\u7684\u5706\u7684\u4e24\u4e2a\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u5728\u533a\u95f4 $[L,R]$ \u4e2d\u3002\n\n\u7136\u540e\u6bcf\u6b21\u5728\u6392\u5e8f\u7684\u6570\u7ec4\u91cc\u4e8c\u5206\u51fa\u533a\u95f4\u66b4\u529b\u626b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint x[300005],y[300005],r[300005],del[300005];\ninline int read()\n{\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\npair<int,int> a[300005];\nbool cmp(pair<int,int> x,pair<int,int> y)\n{\n\tif(x.first==y.first) return x.second<y.second;\n\treturn x.first>y.first;\n}\ninline ll _(ll x)\n{\n\treturn x*x;\n} \nbool cd(int wx,int wy)\n{\n\treturn _(r[wx]+r[wy])>=_(x[wx]-x[wy])+_(y[wx]-y[wy]);\n}\npair<int,int> t[600005];\nbool v[600005];\nint cnt;\nvoid erase(int l,int r,int b)\n{\n\tfor(int i=lower_bound(t+1,t+1+cnt,make_pair(l,0))-t;i<=cnt&&t[i].first<=r;i++)\n\t{\n\t\tif(v[i]) continue;\n\t\tif(cd(b,t[i].second)||del[t[i].second]) v[i]=1;\n\t\tif(cd(b,t[i].second)&&!del[t[i].second]) del[t[i].second]=b;\n\t}\t\n}\nint main()\n{\n\tint n=read(),i,mn,w,b;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tx[i]=read(),y[i]=read(),r[i]=read(),a[i]=make_pair(r[i],i);\n\t\tt[++cnt]={x[i]-r[i],i};\n\t\tt[++cnt]={x[i]+r[i],i};\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tsort(t+1,t+1+cnt);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tb=a[i].second;\n\t\tif(del[b]) continue;\n\t\terase(x[b]-r[b],x[b]+r[b],b);\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%d \",del[i]);\n}\n```\n",
        "postTime": 1610692608,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4631 \u3010[APIO2018] Circle selection \u9009\u5706\u5708\u3011"
    },
    {
        "content": "# P4631 [APIO2018] \u9009\u5706\u5708 \u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4631)\n\n\u770b\u5230\u9898\u76ee\uff0c\u662f\u5e73\u9762\u4e0a\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u4f1a\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u5462\uff1f\n\n\u4e8c\u7ef4\u7ebf\u6bb5\u6811\uff1f\u5b83\u663e\u7136\u4e0d\u80fd\u7ef4\u62a4\u4e0e\u5706\u5f62\u6709\u5173\u7684\u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4f7f\u7528 $\\text{K-D Tree}$ \u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u4e0e\u4e00\u822c $\\text{K-D Tree}$ \u4e0d\u540c\u7684\u662f\uff0c\u4e00\u4e2a\u5b50\u6811\u6240\u5bf9\u5e94\u7684\u77e9\u5f62\uff0c\u5e76\u4e0d\u662f\u5305\u542b\u6240\u6709\u5706\u5fc3\u7684\u77e9\u5f62\uff0c\u800c\u662f\u5305\u542b\u6240\u6709\u5706\u7684\u77e9\u5f62\u3002\n\n\u7136\u540e\u6211\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a $\\text{K-D Tree}$ \u5982\u4f55\u526a\u679d\uff1f\n\n\u9996\u5148\u60f3\u5230\u7684\u80af\u5b9a\u662f\u5305\u542b\u5173\u7cfb\uff0c\u5373\u5982\u679c\u4f60\u8981\u67e5\u8be2\u7684\u5706\u5305\u542b\u5f53\u524d\u6574\u4e2a\u5b50\u6811\uff0c\u76f4\u63a5\u5c06\u5b50\u6811\u4fbf\u5229\u7136\u540e\u5220\u5149\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u4e1c\u897f\u4e00\u70b9\u7528\u90fd\u6ca1\u6709\uff0c\u56e0\u4e3a\u4f60\u4e00\u8d77\u5220\u4e5f\u662f\u5220\uff0c\u4e00\u4e2a\u4e2a\u5220\u4e5f\u662f\u5220\uff0c\u6839\u672c\u65e0\u6cd5\u4f18\u5316\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u5224\u65ad\u4e24\u4e2a\u5706\u662f\u5426\u76f8\u4ea4\u7684\u516c\u5f0f $(r_1 + r_2)^2 \\ge (x_2-x_1) ^2+(y_2-y_1)^2$\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u516c\u5f0f\u7684\u542b\u4e49\u5b9e\u9645\u4e0a\u662f\u5224\u65ad\u4e24\u70b9\u95f4\u8ddd\u79bb\u548c\u534a\u5f84\u7684\u5173\u7cfb\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f60\u8981\u67e5\u8be2\u7684\u5706\u7684\u5706\u5fc3\u5230\u5176\u5b50\u6811\u6240\u5bf9\u5e94\u77e9\u5f62\u7684\u8ddd\u79bb\u526a\u679d\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5 $\\text{AC}$ \u4e86\u3002\n\n$\\text{Code}$\n\n```cpp\n#include <bits/stdc++.h>\n#define lc(x) (w[x].ls)\n#define rc(x) (w[x].rs)\nusing namespace std;\nconst double alpha = 0.7;\nconstexpr int N = 3e5 + 10;\nstruct Point {\n    long long x, y, r;\n    int ls, rs, siz, delsiz, id, bedel, d, maxpos;\n    long long L, R, U, D;\n    inline void read() { scanf(\"%lld %lld %lld\", &x, &y, &r); }\n    inline bool operator>(const Point &b) const { return r != b.r ? r > b.r : id < b.id; }\n} w[N];\nint g[N], total, n, delby[N];\ninline double sqr(double x) { return x * x; }\ninline long long sqr(long long x) { return x * x; }\ninline long long sqr(int x) { return 1ll * x * x; }\ninline bool bad(int x) { return (w[x].siz - w[x].delsiz) <= w[x].siz * alpha || (alpha * w[x].siz <= max(w[lc(x)].siz, w[rc(x)].siz)); }\ninline bool cmp1(int x, int y) { return w[x].x < w[y].x; }\ninline bool cmp2(int x, int y) { return w[x].y < w[y].y; }\nvoid print(int u) {\n    if (!u) return;\n    print(lc(u));\n    if (!w[u].bedel) g[++total] = u;\n    print(rc(u));\n}\ninline void delNode(int &u) { w[u] = {}, u = 0; }\ninline void pushup(int &u) {\n    w[u].siz = w[lc(u)].siz + w[rc(u)].siz + 1;\n    w[u].delsiz = w[lc(u)].delsiz + w[rc(u)].delsiz + w[u].bedel;\n    if (w[u].delsiz == w[u].siz) {\n        delNode(u);\n        return;\n    }\n    if (!w[u].bedel) {\n        w[u].maxpos = u;\n        w[u].L = w[u].x - w[u].r, w[u].R = w[u].x + w[u].r;\n        w[u].D = w[u].y - w[u].r, w[u].U = w[u].y + w[u].r;\n    } else {\n        w[u].maxpos = 0;\n        w[u].L = w[u].D = 1000000000000000000ll;\n        w[u].R = w[u].U = -1000000000000000000ll;\n    }\n    if (lc(u)) {\n        w[u].L = min(w[u].L, w[lc(u)].L), w[u].R = max(w[u].R, w[lc(u)].R);\n        w[u].D = min(w[u].D, w[lc(u)].D), w[u].U = max(w[u].U, w[lc(u)].U);\n        if (w[w[lc(u)].maxpos] > w[w[u].maxpos]) w[u].maxpos = w[lc(u)].maxpos;\n    }\n    if (rc(u)) {\n        w[u].L = min(w[u].L, w[rc(u)].L), w[u].R = max(w[u].R, w[rc(u)].R);\n        w[u].D = min(w[u].D, w[rc(u)].D), w[u].U = max(w[u].U, w[rc(u)].U);\n        if (w[w[rc(u)].maxpos] > w[w[u].maxpos]) w[u].maxpos = w[rc(u)].maxpos;\n    }\n}\nint build(int l, int r) {\n    if (l > r) return 0;\n    int mid = l + r >> 1;\n    double av1 = 0, av2 = 0, va1 = 0, va2 = 0;\n    for (int i = l; i <= r; i++) av1 += w[g[i]].x, av2 += w[g[i]].y;\n    av1 /= r - l + 1, av2 /= r - l + 1;\n    for (int i = l; i <= r; i++) va1 += sqr(w[g[i]].x - av1), va2 += sqr(w[g[i]].y - av2);\n    if (va1 > va2)\n        nth_element(g + l, g + mid, g + r + 1, cmp1), w[g[mid]].d = 1;\n    else\n        nth_element(g + l, g + mid, g + r + 1, cmp2), w[g[mid]].d = 2;\n    lc(g[mid]) = build(l, mid - 1), rc(g[mid]) = build(mid + 1, r);\n    pushup(g[mid]);\n    return g[mid];\n}\ninline void rebuild(int &u) { total = 0, print(u), u = build(1, total); }\ninline bool meet(const Point &a, const Point &b) { return sqr(a.r + b.r) >= sqr(a.x - b.x) + sqr(a.y - b.y); }\ninline long long dis(const Point &a, const Point &b) { return sqr(a.x - b.x) + sqr(a.y - b.y); }\ninline long long f(int u, const Point &b) {\n    long long ret = 0;\n    if (w[u].L > b.x) ret += sqr(w[u].L - b.x);\n    if (b.x > w[u].R) ret += sqr(b.x - w[u].R);\n    if (w[u].D > b.y) ret += sqr(w[u].D - b.y);\n    if (b.y > w[u].U) ret += sqr(b.y - w[u].U);\n    return ret;\n}\nvoid del(int &u, Point x) {\n    if (!u) return;\n    if (f(u, x) > sqr(x.r)) return;\n    if (!w[u].bedel && meet(w[u], x)) w[u].bedel = 1, delby[w[u].id] = x.id;\n    del(lc(u), x), del(rc(u), x);\n    pushup(u);\n    if (!u) return;\n    if (bad(u)) rebuild(u);\n}\nint rt;\nint main() {\n    cin >> n;\n    for (int i = 1; i <= n; i++) w[i].read(), g[i] = i, w[i].id = i;\n    rt = build(1, n);\n    while (rt) del(rt, w[w[rt].maxpos]);\n    for (int i = 1; i <= n; i++) printf(\"%d \", delby[i]);\n    return 0;\n}\n```",
        "postTime": 1664930257,
        "uid": 615348,
        "name": "zhouershan",
        "ccfLevel": 7,
        "title": "P4631 [APIO2018] \u9009\u5706\u5708 \u9898\u89e3"
    },
    {
        "content": "## KDtree\n\n[\u535a\u5ba2\u9605\u8bfb](https://www.cnblogs.com/wljss/p/12627526.html)\n\n\u8003\u8651\u548c\u4e00\u4e2a\u5706\u6709\u4ea4\u96c6\u7684\u5706\uff0c\u662f\u5e73\u9762\u4e0a\u7684\u4e00\u5757\u533a\u57df\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528 $KDtree$ \u7ef4\u62a4\u3002\n\n\u4e24\u4e2a\u5706\u76f8\u4ea4\u7684\u6761\u4ef6 $\\displaystyle (X_i-X_j)^2+(Y_i-Y_j)^2 \\leqslant (R_i+R_j)^2$\n\n\u8003\u8651\u600e\u4e48\u526a\u679d\uff0c\u76f4\u63a5\u7ef4\u62a4 $X,Y,R$ \u7684\u8bdd\u4e0d\u597d\u7ef4\u62a4\u3002\u6211\u4eec\u77e5\u9053\u5706 $i$ \u548c\u5706 $j$ \u6709\u4ea4\u96c6\u7684\u8bdd\u80af\u5b9a\u4f1a\u548c\u6846\u4f4f\u5706 $j$ \u7684\u6700\u5c0f\u7684\u6b63\u65b9\u5f62\u6709\u4ea4\u96c6\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4 $KDtree$ \u4e00\u4e2a\u5b50\u6811\u91cc\u6240\u6709\u5706\u5bf9\u5e94\u7684\u6b63\u65b9\u5f62 $X,Y$ \u7684\u6700\u503c\u6765\u526a\u679d\u5373\u53ef\u3002\n\n$yuan$ \u91cc\u7684 $l,r$ :\u5bf9\u5e94\u7684\u6b63\u65b9\u5f62\u7684\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u7684\u5750\u6807\u3002\n\n$shu$ \u91cc\u7684 $l,r$ :\u5b50\u6811\u91cc\u6b63\u65b9\u5f62 $x,y$ \u5750\u6807\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#define int long long\n#define lson tr[k].ls\n#define rson tr[k].rs\nusing namespace std;\nint n, nowk, cnt, root;\nconst int N = 300010;\nint s[N], ans[N];\nstruct dian {int x, y;};\nstruct yuan {int x, y, R, id; dian l, r;} cir[N];\nstruct shu {int ls, rs, id; dian l, r;} tr[N];\nint my1(yuan a, yuan b) {return a.R == b.R ? a.id<b.id: a.R>b.R;}\nint my2(int a, int b) {return nowk ? cir[a].x < cir[b].x : cir[a].y < cir[b].y;}\nvoid pushup(int k)\n{\n\ttr[k].l = cir[tr[k].id].l; tr[k].r = cir[tr[k].id].r;\n\tif (lson)tr[k].l.x = min(tr[k].l.x, tr[lson].l.x), tr[k].l.y = min(tr[k].l.y, tr[lson].l.y), tr[k].r.x = max(tr[k].r.x, tr[lson].r.x), tr[k].r.y = max(tr[k].r.y, tr[lson].r.y);\n\tif (rson)tr[k].l.x = min(tr[k].l.x, tr[rson].l.x), tr[k].l.y = min(tr[k].l.y, tr[rson].l.y), tr[k].r.x = max(tr[k].r.x, tr[rson].r.x), tr[k].r.y = max(tr[k].r.y, tr[rson].r.y);\n}\nvoid build(int &k, int l, int r, int now)\n{\n\tif (l > r)return;\n\tint mid = (l + r) >> 1;\n\tnowk = now; nth_element(s + l, s + mid, s + r + 1, my2);\n\tk = ++cnt; tr[k].id = s[mid];\n\tbuild(lson, l, mid - 1, now ^ 1); build(rson, mid + 1, r, now ^ 1);\n\tpushup(k);\n}\nint p2(int x) {return x * x;}\nint jiao(int i, int j) {return p2(cir[i].x - cir[j].x) + p2(cir[i].y - cir[j].y) <= p2(cir[i].R + cir[j].R);}\nvoid change(int k, int id)\n{\n\tif (!k)return;\n\tif (cir[id].r.x < tr[k].l.x || tr[k].r.x < cir[id].l.x || cir[id].r.y < tr[k].l.y || tr[k].r.y < cir[id].l.y)return;\n\tif (!ans[cir[tr[k].id].id] && jiao(tr[k].id, id))ans[cir[tr[k].id].id] = cir[id].id;\n\tif (lson)change(lson, id); if (rson)change(rson, id);\n}\nsigned main()\n{\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%lld%lld%lld\", &cir[i].x, &cir[i].y, &cir[i].R);\n\t\tcir[i].l.x = cir[i].x - cir[i].R; cir[i].l.y = cir[i].y - cir[i].R; cir[i].r.x = cir[i].x + cir[i].R; cir[i].r.y = cir[i].y + cir[i].R;\n\t\tcir[i].id = i; s[i] = i;\n\t}\n\tsort(cir + 1, cir + 1 + n, my1); build(root, 1, n, 0);\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (!ans[cir[i].id])change(root, i);\n\tfor (int i = 1; i <= n; ++i)printf(\"%lld \", ans[i]);\n\treturn 0;\n}\n``` \n\n\u7136\u800c $uoj$ \u548c $loj$ \u4e0a\u6709 $hack$ \u6570\u636e\uff0c\u6211\u4eec\u53ea\u8981\u5145\u5206\u53d1\u6325\u4eba\u7c7b\u667a\u6167\u65cb\u8f6c\u4e00\u4e0b\u5750\u6807\u7cfb\u5c31\u884c\u4e86\u3002\u8bb0\u5f97\u5f00 $long \\space double$.[\u4ee3\u7801\u5728\u8fd9](http://uoj.ac/submission/390647)",
        "postTime": 1585904782,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4631 \u3010[APIO2018] Circle selection \u9009\u5706\u5708\u3011"
    },
    {
        "content": "\u6211\u4eec\u66b4\u529b\u7684\u601d\u60f3\u80af\u5b9a\u662f\uff0c\u679a\u4e3e\u4e00\u4e2a\u5f53\u524d\u6ca1\u6709\u88ab\u5220\u9664\u7684\u6700\u5927\u7684\u5706\uff0c\u6765\u64cd\u4f5c\u3002\u8fd9\u6837\u662f$O(n^2)$\n\n\u90a3\u4e48\u8003\u8651\u4f18\u5316\u679a\u4e3e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5706\u6309\u7167\u534a\u5f84\u4ece\u5927\u5230\u5c0f\u6765\u6392\u5e8f\u3002\u90a3\u5c31\u5c31\u4ece\u524d\u5f80\u540e\u679a\u4e3e\u5373\u53ef\u3002\n\n\u518d\u8003\u8651\u600e\u4e48\u5220\u9664\u8fc7\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u7528KD-Tree\u6765\u4f18\u5316\u3002\u5c31\u662f\uff0c\u6211\u4eec\u628a\u5706\u60f3\u8c61\u6210\u4e00\u4e2a\u77e9\u5f62\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e24\u4e2a\u77e9\u5f62\u90fd\u6ca1\u6709\u4ea4\u96c6\u7684\u8bdd\uff0c\u5706\u4e5f\u80af\u5b9a\u6ca1\u6709\u4ea4\u96c6\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4f30\u4ef7\u51fd\u6570\u3002\u90a3\u4e48\u901a\u8fc7\u4e86\u8fd9\u4e2a\u4f30\u4ef7\u51fd\u6570\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u4e24\u4e2a\u5706\u662f\u5426\u76f8\u4ea4\u4e86\u3002\n\n\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nnamespace IO\n{\n\tchar buf[1 << 20 | 1] , *f1 = buf , *f2 = buf , pbuf[1 << 24 | 1] , *f3 = pbuf , sta[100];\n\t#define gc() ((f1 == f2) && (f2 = (f1 = buf) + fread(buf,1,sizeof buf,stdin),f1 == f2) ? EOF : *f1 ++)\n\t#define gt() getchar()\n\tinline int read()\n\t{\n\t\tint x = 0 , f = 1; char ch = gt();\n\t\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = gt();}\n\t\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = gt();}\n\t\treturn x * f;\n\t}\n\ttemplate <class T> inline void write(T x)\n\t{\n\t\tif(!x) return (void)(*f3 ++ = 48 , *f3 ++ = ' ');\n\t\tif(x < 0) *f3 ++ = '-' , x = ~x + 1;\n\t\tchar *top = sta;\n\t\twhile(x) *top ++ = x % 10 + 48 , x /= 10;\n\t\twhile(top != sta) *f3 ++ = *-- top;\n\t\t*f3 ++ = ' ';\n\t}\n\tinline void put(std::string s)\n\t{\n\t\tint len = s.length();\n\t\tfor(int i = 0;i < len;i ++) *f3 ++ = s[i];\n\t\t*f3 ++ = ' ';\n\t}\n\tinline void endline() { *f3 ++ = '\\n';}\n\t#define flush() fwrite(pbuf,1,f3 - pbuf,stdout)\n\ttemplate <class T> inline T abs(T a) { return a < 0 ? -a : a;}\n\ttemplate <class T> inline T max(T a,T b) { return a > b ? a : b;}\n\ttemplate <class T> inline T min(T a,T b) { return a < b ? a : b;}\n\ttemplate <class T> inline void swap(T &a,T &b) { T t = a; a = b; b = t;}\n}\nusing namespace IO;\nconst int N = 3e5 + 5;\nconst long double eps = 1e-5 , Cos = cos(2.33) , Sin = sin(2.33);\nint n , d;\nint ans[N];\nstruct point \n{\n\tlong double x[2] , r; int id;\n} p[N];\ninline bool operator < (const point &a,const point &b) { return a.x[d] < b.x[d];}\ninline bool cmp(const point &a,const point &b) { return a.r == b.r ? a.id < b.id : a.r > b.r;}\ninline long double sqr(long double x) { return x * x;}\nnamespace SMT\n{\n\tstruct node\n\t{\n\t\tnode *ls , *rs; long double maxn[2] , minn[2]; point tr;\n\t\tnode(point tr = p[0]) : tr(tr) { ls = rs = NULL; memset(maxn,0,sizeof maxn); memset(minn,0,sizeof minn);}\n\t\tinline void up()\n\t\t{\n\t\t\tfor(int i = 0;i <= 1;i ++)\n\t\t\t{\n\t\t\t\tmaxn[i] = tr.x[i] + tr.r; minn[i] = tr.x[i] - tr.r;\n\t\t\t\tif(ls) maxn[i] = max(maxn[i],ls -> maxn[i]) , minn[i] = min(minn[i],ls -> minn[i]);\n\t\t\t\tif(rs) maxn[i] = max(maxn[i],rs -> maxn[i]) , minn[i] = min(minn[i],rs -> minn[i]);\n\t\t\t}\n\t\t}\n\t\tinline bool check1(point k)\n\t\t{\n\t\t\tif(k.x[0] + k.r < minn[0] + eps) return 1;\n\t\t\tif(k.x[0] - k.r > maxn[0] - eps) return 1;\n\t\t\tif(k.x[1] + k.r < minn[1] + eps) return 1;\n\t\t\tif(k.x[1] - k.r > maxn[1] - eps) return 1;\n\t\t\treturn 0;\n\t\t}\n\t\tinline bool check2(point k)\n\t\t{\n\t\t\treturn sqr(tr.r + k.r) + eps >= sqr(tr.x[0] - k.x[0]) + sqr(tr.x[1] - k.x[1]);\n\t\t}\n\t} *root , pool[N] , *tail = pool;\n\tvoid build(node *&o,int l,int r,int op)\n\t{\n\t\tif(l > r) return; int mid = (l + r) >> 1;\n\t\td = op; std::nth_element(p + l,p + mid,p + r + 1);\n\t\to = new (tail ++) node(p[mid]);\n\t\tbuild(o -> ls,l,mid - 1,op ^ 1); build(o -> rs,mid + 1,r,op ^ 1);\n\t\to -> up();\n\t}\n\tvoid query(node *o,point k)\n\t{\n\t\tif(o -> check1(k)) return ;\n\t\tif(!ans[o -> tr.id] && o -> check2(k)) ans[o -> tr.id] = k.id;\n\t\tif(o -> ls) query(o -> ls,k);\n\t\tif(o -> rs) query(o -> rs,k);\n\t}\n}\nusing namespace SMT;\nint main()\n{\n\tn = read();\n\tfor(int i = 1;i <= n;i ++)\n\t{\n\t\tlong double x = read() , y = read(); \n\t\tp[i].x[0] = x * Cos - y * Sin; p[i].x[1] = x * Sin + y * Cos; p[i].r = read() , p[i].id = i;\n\t} \n\tbuild(root,1,n,0);\n\tstd::sort(p + 1,p + 1 + n,cmp);\n\tfor(int i = 1;i <= n;i ++) if(!ans[p[i].id]) query(root,p[i]);\n\tfor(int i = 1;i <= n;i ++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1585907411,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4631 \u3010[APIO2018] Circle selection \u9009\u5706\u5708\u3011"
    }
]