[
    {
        "content": "\u9898\u76ee\u8981\u6c42\u4f60\u7ef4\u62a4\u4e00\u6bb5\u5e8f\u5217\uff0c\u652f\u6301\u64cd\u4f5c\u5305\u62ec\uff1a\n\n1 \u533a\u95f4\u4fee\u6539\u4e3a\u540c\u4e00\u4e2a\u6570\n\n2 \u4ee4s[i] \u8868\u793a\u5f53\u524d\u524d\u7f00\u548c\uff0c\u6700\u5c0f\u7684i\u4f7f\u5f97h<=s[i]\u5e76\u8f93\u51fai-1\uff1b\n\n\u5927\u6982\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u80fd\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002\n\n\u9996\u5148\u662f\u533a\u95f4\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u4e0d\u8c08\u3002\n\n\u7136\u540e\u662f\u600e\u4e48\u5904\u7406\u64cd\u4f5c2\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5b58\u4e0a\n\nsum \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u4e0b\u6570\u503c\u548c\n\nlsum \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u4ece\u5de6\u5f00\u59cb\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5904\u7406\u4e86\u3002\u3002\u3002\n\n\u8bbe\u8ba1\u4e00\u4e2a\u201c\u722c\u201d\u51fd\u6570\uff0c\u6839\u8282\u70b9\u5f00\u59cb\u722c\u3002\n\n\u5982\u679clson\u7684lsum\u5927\u4e8eh\uff0c\u5219\u722c\u5411lson\uff1b\u5426\u5219\u722c\u5411rson\uff0ch-=lson\u7684sum\u3002\n\n\u8fd9\u91cc\u7684\u6b63\u786e\u6027\u771f\u7684\u662f\u5f88\u663e\u7136\u7684\uff0c\u5efa\u8bae\u624b\u73a9\u3002\n\n\u4f46\u662f\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u8fc7\u4e0d\u4e86\u8fd9\u9898\u3002\u6709n=1e9\u7684\u74f6\u9888\uff0c\u7a7a\u95f4\u4f1a\u70b8\u3002\n\n\u6709\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e00\u9650\u5236\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u548c\u79bb\u6563\u5316\u3002\u6211\u4f7f\u7528\u7684\u662f\u524d\u8005\uff0c\u76f8\u5bf9\u597d\u6253\u4e00\u70b9\u3002\n\n\u7136\u540e\u6709\u5f88\u6e29\u67d4\u7684\u5c0f\u54e5\u54e5\u8ba9\u6211\u6559\u600e\u4e48\u6253\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u3002\u5176\u5b9e\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u771f\u7684\u5f88\u597d\u6253\u597d\u60f3\u3002\u6211\u4eec\u8fdb\u884c\u7684\u662f\u533a\u95f4\u4fee\u6539\uff0c\u56e0\u4e3a\u6709\u61d2\u6807\u8bb0\u7684\u5b58\u5728\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u8bbf\u95ee\u5230\u53f6\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f88\u591a\u63d0\u524d\u5f00\u51fa\u6765\u7684\u8282\u70b9\u51e0\u4e4e\u4ece\u6765\u4e0d\u4f1a\u88ab\u8bbf\u95ee\uff01\u8fd9\u5c31\u5f88\u4e8f\uff0c\u5f88\u70e6\u3002\n\n\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7684\u60f3\u6cd5\uff1a\u968f\u7740\u6211\u7684\u8bbf\u95ee\u53bb\u5f00\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u6211\u662f\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5b83\uff0c\u6211\u5c31\u628a\u5b83\u8bbe\u4e3a++tot\uff0c\u4e0d\u7136\u5b83\u7684\u5b58\u5728\u4e0e\u5426\u5c31\u4e0d\u91cd\u8981\u3002\n\n\u8fd9\u5c31\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u601d\u8def\uff0c\u5b9e\u9645\u4e0a\u901a\u8fc7\u8fd9\u79cd\u64cd\u4f5c\uff0c\u4f60\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u4e0d\u518d\u4e0e\u5e8f\u5217\u957f\u5ea6\u6302\u94a9\uff0c\u800c\u662f\u4e0e\u64cd\u4f5c\u6b21\u6570\u6302\u94a9\u3002\u975e\u5e38\u7684\u8212\u670d\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define re register int \n#define il inline\n#define ll int\n#define ls t[k].lson\n#define rs t[k].rson\nusing namespace std;\nconst int inf=1e9;\nil int read(){\n\tchar c=getchar();int z=0,f=1;\n\twhile(c!='-'&&(c>'9'||c<'0')) c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(c>='0'&&c<='9') z=(z<<1)+(z<<3)+c-'0',c=getchar();\n\treturn z*f;\n}\nint tot=1;\nstruct TREE{\n\tint l,r,lson,rson;\n\tll lsum,sum,add;\n\tbool book;\n}t[4500005];\nil void check(int k){//\u52a8\u6001\u5f00\u70b9 \n\tint mid=t[k].l+t[k].r>>1;\n\tif(!ls){ls=++tot;t[ls].l=t[k].l,t[ls].r=mid;}\n\tif(!rs){rs=++tot;t[rs].r=t[k].r,t[rs].l=mid+1;}\n}\nil void spread(int k){//\u57fa\u672c\u64cd\u4f5c\u4e0b\u4f20\u4fe1\u606f \n\tif(!t[k].book) return ;t[k].book=0;\n\tt[ls].add=t[rs].add=t[k].add;t[ls].book=t[rs].book=1;\n\tt[ls].sum=(t[ls].r-t[ls].l+1)*t[k].add;\n\tt[rs].sum=(t[rs].r-t[rs].l+1)*t[k].add;\n\tif(t[ls].sum>0) t[ls].lsum=t[ls].sum;\n\telse t[ls].lsum=t[k].add;\n\tif(t[rs].sum>0) t[rs].lsum=t[rs].sum;\n\telse t[rs].lsum=t[k].add;\n}\nil void change(int k,int l,int r,ll d){//\u57fa\u672c\u64cd\u4f5c\u4fee\u6539 \n\tif(t[k].r<l||t[k].l>r) return;\n\tif(t[k].l>=l&&t[k].r<=r){\n\t\tt[k].add=d;t[k].sum=d*(t[k].r-t[k].l+1);t[k].book=1;\n\t\tif(t[k].sum>0) t[k].lsum=t[k].sum;\n\t\telse t[k].lsum=t[k].add;\n\t\treturn ;\n\t}\n\tcheck(k);//\u9632\u6b62\u8d8a\u754c\u52a8\u6001\u5f00\u70b9 \n\tspread(k);\n\tchange(ls,l,r,d);change(rs,l,r,d);\n\tt[k].sum=t[ls].sum+t[rs].sum;//\u66f4\u65b0\u5173\u952e\u4fe1\u606f \n\tt[k].lsum=max(t[ls].sum+t[rs].lsum,t[ls].lsum);//\u66f4\u65b0\u5173\u952e\u4fe1\u606f \n}\nint ans;\nil void pa(int k,ll h){//\u722c \n\tif(t[k].l==t[k].r){\n\t\tif(h>=t[k].lsum) ans=t[k].l;\n\t\telse ans=t[k].l-1;\n\t\treturn ;\n\t}\n\tcheck(k);spread(k);\n\tif(h>=t[ls].lsum) pa(rs,h-t[ls].sum);\n\telse pa(ls,h);\n}\nint n;char c;\nint main (){\n\tn=read();t[1].l=1,t[1].r=n;\n\twhile(1){\n\t\tcin>>c;if(c=='E') return 0;\n\t\tif(c=='Q'){\n\t\t\tll h=read();pa(1,h);\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t\tif(c=='I'){\n\t\t\tint l=read(),r=read(),d=read();\n\t\t\tchange(1,l,r,d);\n\t\t}\n\t}\n\treturn 0;\n} \n```\n\u8fd9\u7bc7\u4ee3\u7801\u53ef\u4ee5\u62ff\u4e0b96\u5206\uff0c\u4e0d\u80fdAC\uff0c\u8fd8\u662f\u4f1a\u88ab\u5361\u7a7a\u95f4\u3002\n\n\u8fd9\u7bc7\u4ee3\u7801\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u8fd8\u80fd\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u4e3a\u4e86\u4fbf\u4e8e\u521d\u5b66\u8005\u7406\u89e3\uff0c\u6211\u5b58\u4e86\u6bcf\u4e2a\u8282\u70b9\u7684l\uff0cr\u3002\n\n\u8fd9\u4e2a\u7a7a\u95f4\u5f00\u9500\u662f\u591a\u4f59\u7684\uff0c\u53ef\u4ee5\u5728\u51fd\u6570\u4e2d\u4fdd\u7559l\uff0cr\u4fe1\u606f\uff0c\u4e0d\u9700\u8981\u5b58\u4e0b\u6765\u3002\n\n\u628a\u8fd9\u4e00\u70b9\u4f18\u5316\u4e86\u4ee5\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684AC\u4e86\u3002\u5e0c\u671b\u5bf9\u8bfb\u8005\u6709\u5e2e\u52a9\u5427\u3002\n",
        "postTime": 1586529866,
        "uid": 220007,
        "name": "xzx34",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5848 \u3010[IOI2005]mou\u3011"
    },
    {
        "content": "\u8fd9\u9898\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u524d\u9762\u7684\u5927\u4f6c\u5df2\u7ecf\u8bb2\u4e86\uff0c\u4f46\u662f\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7a7a\u95f4\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230 \u64cd\u4f5c\u6b21\u6570 * log1e9\uff0c\u800c\u8fd9\u9898\u64cd\u4f5c\u6b21\u6570\u67091e5\u4e2a\uff0c\u6240\u4ee5\u6700\u574f\u60c5\u51b5\u4e0b\u9700\u89812 * 1e5 * log1e9 \u7ea6\u7b49\u4e8e\u516d\u767e\u4e07\u4e2a\u7ed3\u6784\u4f53\uff0c\u7a7a\u95f4\u662f\u975e\u5e38\u7d27\u5f20\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u7528\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u52a0\u79bb\u6563\u5316\uff0c\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n1\u3001\u5c06\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\uff0c\u5e76\u8bb0\u5f55\u6240\u6709a\u3001b\u3002\n\n2\u3001\u5c06\u6240\u6709a\u3001b\u6392\u5e8f\u5e76\u53bb\u91cd\uff0c\u5f97\u5230\u79bb\u6563\u5316\u540e\u7684\u5e8f\u5217\uff0c\u7136\u540e\u7528hash\u8868\u6216map\u5b9e\u73b0\u5bf9\u5e94\u3002\n\uff08\u8fd9\u91cc\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff1a\u79bb\u6563\u5316\u540e\u7684\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u70b9\u5bf9\u5e94 \u4ece\u5b83\u5230\u524d\u9762\u90a3\u4e2a\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u9053\u8def\u3010\u542b\u53f3\u4e0d\u542b\u5de6\u3011\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e2aa\u503c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u79bb\u6563\u5316\u5e8f\u5217\u4e2d\u63d2\u5165a-1\uff0c\u4fbf\u4e8e\u4fee\u6539\u64cd\u4f5c\uff09\n\n3\u3001\u548c\u697c\u4e0a\u5927\u4f6c\u4e00\u6837\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4 \u533a\u95f4\u9053\u8def\u9ad8\u5ea6\u6700\u5927\u503c \u548c \u533a\u95f4\u6bcf\u6761\u9053\u8def\u7684d\u503c\u603b\u548c\u3002\u6ce8\u610f\u8fd9\u91cc\u7684d\u503c\u662f\u5bf9\u5e94\u79bb\u6563\u5316\u4e4b\u524d\u7684d\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u53f6\u5b50\u8282\u70b9\u957f\u5ea6\u4e5f\u4e0d\u4e00\u5b9a\u4e3a0\u3002\n\n4\u3001\u5bf9\u79bb\u7ebf\u4e0b\u6765\u7684I\u64cd\u4f5c\uff0c\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u3002\uff08\u6ce8\u610f\u8d4b\u503c\u6807\u8bb0\u548c\u52a0\u6cd5\u6807\u8bb0\u7684\u4e0d\u540c\uff01\u8d4b\u503c\u6807\u8bb00\u662f\u6709\u610f\u4e49\u7684\uff01\uff09\n\n5\u3001\u5bf9\u4e8eQ\u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u8bbe\u5f53\u524d\u53ef\u4ee5\u8fbe\u5230h\u9ad8\u5ea6\uff0c\u5982\u679c\u5de6\u513f\u5b50\u6700\u5927\u503c\u5927\u4e8eh\uff0c\u90a3\u4e48\u8fdb\u5165\u5de6\u513f\u5b50\uff0c\u5426\u5219\u5c06h\u51cf\u53bb\u5de6\u513f\u5b50\u7684d\u503c\u603b\u548c\uff0c\u8fdb\u5165\u53f3\u513f\u5b50\u3002\u4e8c\u5206\u5230\u53f6\u5b50\u8282\u70b9\u540e\uff0c\u5982\u679ch\u6709\u5269\u4f59\uff0c\u8ba1\u7b97\u7edf\u8ba1\u63a5\u4e0b\u6765\u7684\u7b54\u6848\uff08\u56e0\u4e3a\u8be5\u70b9\u5230\u524d\u4e00\u70b9\u95f4\u6240\u6709\u9053\u8def\u7684d\u503c\u4e00\u5b9a\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u505a\u6574\u9664\u8fd0\u7b97\uff09\n\n\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u666e\u901a\u7ebf\u6bb5\u6811A\u4e86\u8fd9\u9053\u9898\u4e86\uff0c\u800c\u4e14\u7a7a\u95f4\u975e\u5e38\u5145\u88d5\uff0c\u56e0\u4e3a\u666e\u901a\u7ebf\u6bb5\u6811\u7a7a\u95f4\u590d\u6742\u5ea6\u662f 4 * n \u7684\uff0c\u53ea\u9700\u8981\u4e00\u767e\u4e8c\u5341\u4e07\u6570\u7ec4\u3002\n\n\u5176\u5b9e\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u6bd4\u79bb\u6563\u5316\u597d\u7528\u4e5f\u66f4\u597d\u5199\uff08\u53ea\u662f\u6211\u4e0d\u4f1a\uff09\uff0c\u8fd9\u91cc\u4ec5\u63d0\u4f9b\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u8fd8\u662f\u66f4\u503c\u5f97\u63a8\u8350\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\n#include<tr1/unordered_map>\n#pragma GCC optimize(2)\n#define ls (o<<1)\n#define rs (o<<1|1)\n#define mid (ll+lr>>1)\nusing namespace std;\nconst int N=401010;\nint n,cl,num[N],cnt;\nint sum[N<<2|1],mx[N<<2|1],fl[N<<2|1],l,r,k;\nbool book[N<<2|1];\ntr1::unordered_map<int,int> mp;\nstruct aa\n{\n\tint a,b,d;\n}que[N];\nint read()\n{\n\tint res=0,fl=0;\n\tchar a=getchar();\n\twhile(a<'0'||a>'9') {if(a=='-') fl=1;a=getchar();}\n\twhile(a>='0'&&a<='9') res=res*10+a-'0',a=getchar();\n\treturn fl? -res:res;\n}\nvoid pushr(int o,int ll,int lr,int lk) {sum[o]=(num[lr]-num[ll-1])*lk,mx[o]=max(0,sum[o]),fl[o]=lk,book[o]=1;}\nvoid push_down(int o,int ll,int lr) {if(book[o]) pushr(ls,ll,mid,fl[o]),pushr(rs,mid+1,lr,fl[o]),book[o]=0;}\nvoid update(int o,int ll,int lr)\n{\n\tif(l<=ll&&lr<=r) return pushr(o,ll,lr,k);\n\tpush_down(o,ll,lr);\n\tif(l<=mid) update(ls,ll,mid);\n\tif(r>mid) update(rs,mid+1,lr);\n\tsum[o]=sum[ls]+sum[rs],mx[o]=max(mx[ls],mx[rs]+sum[ls]); //\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\u7684\u66f4\u65b0\u51fd\u6570\n}\nint query(int o,int ll,int lr,int lk)\n{\n\tif(o==1&&lk>=mx[o]) return n; //\u7279\u5224 \n\tif(ll==lr) return sum[o]? num[ll-1]+lk/(sum[o]/(num[ll]-num[ll-1])):num[ll]; //\u53f6\u5b50\u7ed3\u70b9\u7edf\u8ba1\u7b54\u6848\n\tpush_down(o,ll,lr);\n\tif(mx[ls]>lk) return query(ls,ll,mid,lk);\n\treturn query(rs,mid+1,lr,lk-sum[ls]); //\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\n}\nvoid add(int lx) {num[++cl]=lx,num[++cl]=lx-1;} //\u63d2\u5165\u79bb\u6563\u5316\u6570\u7ec4\uff08\u8bb0\u5f97\u63d2\u5165lx-1\uff09\nint main()\n{\n//\tfreopen(\"mou.in\",\"r\",stdin);\n//\tfreopen(\"mou.out\",\"w\",stdout);\n\tint i,j,li,lj;\n\tn=read();\n\twhile(1)\n\t{\n\t\tchar a=getchar();\n\t\twhile(a<'A'||a>'Z') a=getchar();\n\t\tif(a=='E') break;\n\t\tif(a=='I') add(que[++cnt].a=read()),add(que[cnt].b=read()),que[cnt].d=read();\n\t\tif(a=='Q') que[++cnt].d=read(); //\u5c06\u8bfb\u5165\u79bb\u7ebf\u4e0b\u6765\n\t}\n\tnum[++cl]=n,sort(num+1,num+cl+1),cl=unique(num+1,num+cl+1)-num-1; //\u79bb\u6563\u5316\n\tif(num[1]==0) {for(i=1;i<cl;i++) num[i]=num[i+1];cl--;} //\u9ed8\u8ba4num[0]=0\n\tfor(i=1;i<=cl;i++) mp[num[i]]=i; //\u53cd\u8fc7\u6765\u5bf9\u5e94\n\tfor(i=1;i<=cnt;i++)\n\t\tif(que[i].a) l=mp[que[i].a],r=mp[que[i].b],k=que[i].d,update(1,1,cl);\n\t\telse cout<<query(1,1,cl,que[i].d)<<'\\n';\n\treturn 0;\n}\n```\n",
        "postTime": 1586533714,
        "uid": 223768,
        "name": "Yukikaze_",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5848 \u3010[IOI2005]mou\u3011"
    }
]