[
    {
        "content": "\u66f4\u6728\u68d2\u7684\u9605\u8bfb\u4f53\u9a8c `/se` $\\to $[`George1123`](https://www.cnblogs.com/George1123/p/13741786.html)\n\n---\n## \u9898\u9762\n\n> [NOI2003 \u667a\u7834\u8fde\u73af\u9635](https://www.luogu.com.cn/problem/P1526)\n\n> \u6709 $m$ \u4e2a\u9776\u5b50 $(ax_j,ay_j)$ \u548c $n$ \u4e2a\u7bad\u5854 $(bx_i,by_i)$\u3002\u6bcf\u4e2a\u7bad\u5854\u53ef\u4ee5\u5c04\u4e2d\u8ddd\u79bb\u5728 $k$ \u4ee5\u5185\u7684\u9776\u5b50\u3002\u7b2c $i+1$ \u53ea\u6709\u7b2c $i$ \u4e2a\u9776\u5b50\u88ab\u5c04\u4e2d\u65f6\u624d\u80fd\u88ab\u5c04\u4e2d\u3002\u6bcf\u4e2a\u7bad\u5854\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u73b0\u5728\u53ef\u4ee5\u5b89\u6392\u6bcf\u4e2a\u7bad\u5854\u7684\u5c04\u51fb\u987a\u5e8f\uff0c\u6c42\u6700\u5c11\u9700\u8981\u51e0\u4e2a\u7bad\u5854\u53ef\u4ee5\u5c04\u5149 $m$ \u9776\u5b50\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1\\le m,n\\le 100$\uff0c$1\\le k\\le 1000$\uff0c$1\\le ax_j,ay_j,bx_i,by_i\\le 10000$\u3002\n\n---\n## \u849f\u84bb\u8bed\n\n\u7206\u641c\u795e\u9898\uff0c\u53ef\u60dc\u9898\u89e3\u90fd\u5f88\u6666\u6da9\uff0c\u849f\u84bb\u56e0\u4e3a\u4e00\u4e2a\u5c0f\u9519\u8bef\u6298\u817e\u4e86\u4e00\u4e2a\u665a\u4e0a\uff0c\u73b0\u5728\u62ff\u5230\u4e86\u6700\u4f18\u89e3\uff0c\u4e8e\u662f\u51c6\u5907\u5199\u4e2a\u900a\u900a\u7684\u9898\u89e3\u3002\n\n---\n## \u849f\u84bb\u89e3\n\n\u9996\u5148\u6bcf\u4e2a\u7bad\u5854\u89e3\u51b3\u4e00\u4e2a\u9776\u5b50\u533a\u95f4\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7206\u641c\u6bcf\u4e2a\u533a\u95f4\u548c\u7bad\u5854\u5339\u914d\uff0c\u8fd9\u5f88\u660e\u663e\u662f\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u5f88\u591a\u7ec6\u8282\uff0c\u8bbe\u6240\u6709 $i$ \u4e3a\u7bad\u5854\u7684\u4e0b\u6807\uff0c$j$ \u4e3a\u9776\u5b50\u7684\u4e0b\u6807\u3002\n\n\u8bbe `bool` $con_{i,j}$ \u8868\u793a\u7bad\u5854 $i$ \u4e0e\u9776\u5b50 $j$ \u8054\u901a\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u7bad\u5854\u7684\u6bcf\u4e2a\u8d1f\u8d23\u533a\u95f4\u53ea\u9700\u7528\u540e\u7f00\u5c31\u53ef\u4ee5\u6709\u89e3\uff0c\u6240\u4ee5\u8bb0\u5f55 $nex_{i,j}$ \u8868\u793a\u7bad\u5854 $i$ \u5728\u9776\u5b50 $j$ \u540e\u9762\u7b2c\u4e00\u4e2a\u5c04\u4e0d\u5230\u7684\u9776\u5b50\uff08\u5373\u53ef\u7528\u5c04\u5230\u6700\u53f3\u8fb9\u7684\u9776\u5b50\u4e0b\u6807 $+1$\uff09\u3002\n\n```cpp\n// \u8fd9\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u9012\u63a8\nR(i,0,n)L(j,0,m) con[i][j]&&(nex[i][j]=max(j+1,nex[i][j+1]));\n```\n\n\u4e3a\u4e86\u540e\u9762 `A*` \u505a\u51c6\u5907\uff0c\u8fd8\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a $mn_j$ \u8868\u793a\u6253\u5230\u9776\u5b50 $j$ \u7684\u5269\u4f59\u6b65\u6570\u4e0b\u9650\u3002\n\n```cpp\nL(j,0,m)R(i,0,n) con[i][j]&&(mn[j]=min(mn[j],mn[nex[i][j]]+1));\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u60ca\u5fc3\u52a8\u9b44\u7684 `Dfs` \u4e86\u3002\n\n\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5148\u7528 $mn_j$ \u6765\u526a\u679d `A*` \u4e00\u4e0b\uff0c\u7136\u540e\u7528 $nex_{i,j}$ \u679a\u4e3e\u4e0b\u4e00\u4e2a\u533a\u95f4\u7aef\u70b9\uff0c\u7528\u8fc7\u7684\u7bad\u5854\u6253\u4e2a\u6807\u8bb0\uff0c\u5339\u914d\u4e00\u4e2a\u6ca1\u7528\u8fc7\u7684\u7bad\u5854\u3002\n\n\u524d\u6587\u8bf4\u8fc7\u8fd9\u662f\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u6240\u4ee5\u6709\u4e2a\u91ce\u86ee\u64cd\u4f5c\uff08\u4e8c\u5206\u56fe\u4f18\u5316\uff09\uff1a\u6bcf\u6b21\u533a\u95f4\u627e\u597d\u540e\uff0c\u76f4\u63a5\u5308\u7259\u5229\u5339\u914d\u770b\u770b\u80fd\u4e0d\u80fd\u5339\u914d\u5f97\u5230\u7bad\u5854\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8d77\u539f\u6765\u64cd\u4f5c\u662f\u4e0d\u589e\u7684\u3002\n\n\u4f46\u662f\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8981\u914d\u4e0a\u53e6\u4e00\u4e2a\u9a9a\u64cd\u4f5c\uff1a\u9006\u5e8f\u679a\u4e3e\u4e0b\u4e00\u4e2a\u533a\u95f4\u5f00\u59cb\u7aef\u70b9\u3002\n\n\u7531\u4e8e\u7528\u4e86\u5308\u7259\u5229\u540e\u5b8c\u7f8e\u5339\u914d\u6982\u7387\u53d8\u9ad8\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5c3d\u65e9\u627e\u5230\u4f18\u7684\u7b54\u6848\uff0c\u8fdb\u4e00\u6b65 `A*` \u526a\u679d\u3002\n\n\u7136\u540e\u5c31\u7ed3\u675f\u4e86\uff0c\u65f6\u9650 $2s$ \u7684\u9898\u8dd1\u5f97\u6700\u6162\u7684\u70b9 $4ms$\uff0c\u603b\u65f6\u95f4 $31ms$\u3002\n\n\u6ce8\u610f `Dfs` \u56de\u6eaf\u7b97\u6cd5\u4e24\u4e2a\u5751\uff1a\u56de\u6eaf\u4e0d\u5f7b\u5e95\u3001\u56de\u6eaf\u7528\u4e86\u5168\u5c40\u53d8\u91cf\u3002\n\n---\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//Start\ntypedef long long ll;\ntypedef double db;\n#define mp(a,b) make_pair((a),(b))\n#define x first\n#define y second\n#define be(a) (a).begin()\n#define en(a) (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define R(i,a,b) for(int i=(a),I=(b);i<I;i++)\n#define L(i,a,b) for(int i=(b)-1,I=(a)-1;i>I;i--)\nconst int iinf=0x3f3f3f3f;\nconst ll linf=0x3f3f3f3f3f3f3f3f;\n\n/*\n\u6ce8\u610f\uff1a i \u662f\u7bad\u5854\uff0cj \u662f\u9776\u5b50\uff0cs \u662f\u533a\u95f4\n*/\n\n//Data\nconst int N=1e2;\nint m,n,k;\npair<int,int> a[N],b[N];\nbitset<N> con[N];\n#define f(x) ((x)*(x))\n\n//Dfs\nbitset<N> e[N],vis;\nint nex[N][N+1],mn[N+1],mat[N],ans;\nbool match(int s){ // \u5308\u7259\u5229\u5339\u914d\n\tR(i,0,n)if(e[s][i]&&!vis[i]){\n\t\tvis[i]=true;\n\t\tif(!~mat[i]||match(mat[i]))\t\n\t\t\treturn mat[i]=s,true;\n\t}\n\treturn false;\n}\nvoid dfs(int j,int s){\n\tif(ans<=s+mn[j]) return; //A*\n\tif(j==m) return void(ans=s);\n\tint cmat[N]; copy(mat,mat+n,cmat); // \u8fd9\u91cc\u7684 cmat \u4f60\u8981\u662f\u8bbe\u4e3a\u5168\u5c40\u53d8\u91cf\u5c31\u6b7b\u4e86\uff0c\u6211\u5728\u8fd9\u91cc\u6b7b\u4e86 2 \u4e2a\u5c0f\u65f6\n\tL(J,j+1,m+1){\n\t\tR(i,0,n) con[i][j]&&nex[i][j]>=J&&(e[s][i]=true);\n\t\tR(i,0,n) vis[i]=false; match(s)?dfs(J,s+1):void();\n\t\tR(i,0,n) con[i][j]&&nex[i][j]>=J&&(e[s][i]=false); //\u83ab\u5fd8\u56de\u6eaf\n\t\tcopy(cmat,cmat+n,mat);\n\t}\n}\n\n//Main\nint main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>m>>n>>k;\n\tR(j,0,m) cin>>a[j].x>>a[j].y;\n\tR(i,0,n) cin>>b[i].x>>b[i].y;\n\tR(i,0,n)R(j,0,m) con[i][j]=(f(a[j].x-b[i].x)+f(a[j].y-b[i].y)<=f(k));\n\tR(i,0,n) fill(nex[i],nex[i]+m+1,-1);\n\tR(i,0,n)L(j,0,m) con[i][j]&&(nex[i][j]=max(j+1,nex[i][j+1]));\n\tR(j,0,m) mn[j]=iinf;\n\tL(j,0,m)R(i,0,n) con[i][j]&&(mn[j]=min(mn[j],mn[nex[i][j]]+1));\n\tfill(mat,mat+n,-1),ans=min(n,m),dfs(0,0);\n\t// \u5939\u6742\u70b9\u9a9a\u64cd\u4f5c\uff08\u6b63\u786e\u6027\u4e0d\u4fdd\u8bc1\uff0c\u4ec5\u7528\u6765\u62a2\u6700\u4f18\u89e3\uff1a\u731c\u6d4b\u6700\u7ec8 ans<=mn[0]+5\uff09\uff0c\u628a ans \u7684\u521d\u59cb\u503c\u548c mn[0]+5 \u53d6 min\n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n---\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1601269819,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1526 \u3010[NOI2003]\u667a\u7834\u8fde\u73af\u9635\u3011"
    },
    {
        "content": "## \u667a\u7834\u8fde\u73af\u9635\n\n\u8fd9\u9898\u662f\u9ed1\u9898~~\u4f46\u6c34\u7684\u4e00\u6279~~\u3002\n\n#### \u9898\u76ee\u63cf\u8ff0\n\n> \u7ed9\u4f60 $m$ \u4e2a\u6b66\u5668\u7684\u5750\u6807\u3001$n$ \u4e2a\u70b8\u5f39\u7684\u5750\u6807\uff0c\u7528\u70b8\u5f39\u70b8\u8303\u56f4\u534a\u5f84\u4e3a $k$ \u5185\u7684\u6b66\u5668\uff0c\u70b8\u5f39\u7528\u5b8c\u4e86\u5c31\u6ca1\u4e86\uff0c\u53ef\u4ee5\u6539\u53d8\u70b8\u5f39\u987a\u5e8f\uff0c\u6c42\u6700\u5c11\u8981\u591a\u5c11\u70b8\u5f39\u624d\u80fd\u5c06\u6b66\u5668\u70b8\u5b8c\u3002\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1526)\n\n\u9996\u5148\u53d1\u73b0\u6bcf\u4e00\u4e2a\u70b8\u5f39\u80fd\u70b8\u7684\u6b66\u5668\u4e00\u5b9a\u662f\u7f16\u53f7\u8fde\u7eed\u7684\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u524d\u4e00\u4e2a\u6b66\u5668\u88ab\u6467\u6bc1\uff0c\u540e\u4e00\u4e2a\u624d\u80fd\u88ab\u6467\u6bc1\uff0c\u5e76\u4e14\u4e00\u4e2a\u70b8\u5f39\u80fd\u6301\u7eed5\u5206\u949f\uff0c\u8fd9\u6ce8\u5b9a\u4e86\u6bcf\u4e2a\u70b8\u5f39\u4e00\u5b9a\u80fd\u5c06**\u80fd\u6467\u6bc1\u7684\u90fd\u6467\u6bc1\u6389**\u3002\n\n\u7528 dfs \u7684\u8bdd\uff0c\u53ef\u4ee5\u5c06 $1\\backsim m$ \u4e2a\u6b66\u5668\u5206\u4e3a\u82e5\u5e72\u5c0f\u5757\uff0c\u6bcf\u4e2a\u5c0f\u5757\u7531\u5404\u81ea\u4e00\u4e2a\u7684\u70b8\u5f39\u70b8\u3002\n\n\u90a3\u4e48\u679a\u4e3e\u5728\u54ea\u91cc\u5206\u6bb5\u3002\n\n\u90a3\u4e48\u5148\u7ef4\u62a4\u51fa\u6765\u6bcf\u4e00\u4e2a\u70b8\u5f39**\u80fd\u70b8\u5230\u7684\u6b66\u5668**\uff0c\u7528\u4f60\u521d\u4e2d\u5b66\u8fc7\u7684\u52fe\u80a1\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7**\u9012\u63a8**\u65b9\u5f0f\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b8\u5f39\u80fd\u70b8\u5230\u7684**\u7f16\u53f7\u6700\u5927**\u7684\u6b66\u5668\uff08\u6b63\u7740\u679a\u4e3e\u70b8\u5f39\uff0c\u5012\u7740\u679a\u4e3e\u6b66\u5668\uff0c\u663e\u7136\u7b2c $i$ \u4e2a\u70b8\u5f39\u70b8\u5230\u7b2c $j$ \u4e2a\u6b66\u5668\u65f6\uff0c\u80fd\u591f\u8f6c\u79fb\u8fc7\u6765\u8fd9\u4e2a\u70b8\u5f39\u80fd\u70b8\u5230\u7684\u6700\u8fdc\u7684\u6b66\u5668\uff09\u3002\n\n\u5df2\u7ecf\u9012\u63a8\u51fa\u6bcf\u4e2a\u70b8\u5f39\u80fd\u70b8\u7684\u533a\u95f4\u4e86\u3002~~\u5c31\u53ef\u4ee5\u6109\u5feb\u7684 dfs \u4e86~~\u3002\n\n\u5f53\u7136\u8981\u526a\u679d\uff1a\n\n\u8bbe\u4e00\u4e2a\u6570\u7ec4 $g$\u3002\n\n\u7528\u6765\u8ba1\uff1a\u5728\u70b8\u5f39\u53ef\u4ee5\u65e0\u9650\u91cd\u590d\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u7b2c $i$ \u4e2a\u6b66\u5668\u5230\u6700\u540e\u4e00\u4e2a\u6b66\u5668\u6700\u5c11\u7528\u591a\u5c11\u4e2a\u70b8\u5f39\uff0c\u5373\u9884\u4f30\u7684\u8fd8\u8981\u7528\u7684\u6700\u5c11\u70b8\u5f39\u6570\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5f53\u6211\u4eec dfs \u5230\u4e00\u4e2a\u65b0\u7684\u72b6\u6001\u65f6\uff0c\u53ea\u9700\u8981\u63d0\u524d\u5224\u65ad\u5f53\u524d\u5df2\u7528\u7684\u70b8\u5f39\u52a0\u4e0a\u9884\u4f30\u7684\u8fd8\u8981\u7684\u6700\u5c11\u7684\u70b8\u5f39\u6570\u662f\u5426\u5c0f\u4e8e\u5df2\u6709\u7684\u7b54\u6848\uff0c\u82e5\u5426\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6709\u6709\u8bb8\u591a\u70b8\u5f39\u5bf9\u5e94\u4e00\u6bb5\u533a\u95f4\u7684\u60c5\u51b5\u3002\n\n\u7528\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u89e3\u51b3\u3002 \n\n\u4e8e\u662f\u6d41\u7a0b\u5c31\u662f\uff1a\u5904\u7406\u5904\u6bcf\u4e2a\u70b8\u5f39\u80fd\u70b8\u7684\u6b66\u5668\u3001\u5730\u63a8\u51fa\u6bcf\u4e2a\u70b8\u5f39\u6700\u8fdc\u80fd\u70b8\u591a\u8fdc\u3001\u4ece\u6bcf\u4e2a\u4f4d\u7f6e\u70b8\u5230\u6700\u540e\u6700\u5c11\u7528\u7684\u70b8\u5f39\u6570\u3001 dfs \u3001\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n~~\u4e8e\u662f\u4f60\u5c31\u53ef\u4ee5\u6c34\u6389\u4ed6\u4e86~~\u3002\n\n\u4ee3\u7801\u6ce8\u91ca\u89c1\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read () \n{\n\tint x = 0 , f = 1 ; char ch = getchar () ; \n\twhile ( ! isdigit ( ch ) ) { if ( ch == '-' ) f = -1 ; ch = getchar () ; }\n\twhile ( isdigit ( ch ) ) { x = ( x << 3 ) + ( x << 1 ) + ch - 48 ; ch = getchar () ; } \n\treturn x * f ; \n}\n\nint m , n , k , ans , tmp [ 101 ] , f [ 101 ] [ 101 ] , g [ 101 ] , J [ 101 ] [ 101 ]  ; \nbool vis [ 101 ] , fl [ 101 ] [ 101 ] ;\n\nstruct node { \n\tint x  , y ; \n} a [ 101 ] , b [ 101 ] ; \n\nint fang ( int x ) \n{\n\treturn x * x ; \n}\nbool found ( int x ) // \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d \n{\n\tfor ( int i = 1 ; i <= n ; i ++ ) \n\t\tif ( fl [ i ] [ x ] && vis [ i ] ) \n\t\t{\n\t\t\tvis [ i ] = 0 ; \n\t\t\tif ( tmp [ i ] == -1 || found ( tmp [ i ] ) ) \n\t\t\t{\n\t\t\t\ttmp [ i ] = x ; \n\t\t\t\treturn 1 ; \n\t\t\t}\n\t\t}\n\treturn 0 ; \n}\nvoid dfs ( int x , int y ) // \u5206\u5230\u7b2c x \u4e2a\u6b66\u5668\uff0c\u5df2\u7ecf\u5206\u4e86 y \u4e2a\u5757 \n{\n\t if ( y + g [ x ] >= ans ) return ; // \u63d0\u524d\u9884\u77e5\u4e0d\u4f18\uff0c\u8fd4\u56de \n\t if ( x > m ) \n\t {\n\t \tans = y ; // \u66f4\u65b0\u7b54\u6848 \n\t \treturn ; \n\t }\n\t int tmpp [ 101 ] ; \n\t for ( int i = x ; i <= m ; i ++ ) // \u679a\u4e3e\u4ece\u54ea\u91cc\u5206\u5f00 \n\t {\n\t \tfor ( int j = 1 ; j <= n ; j ++ ) \n\t \t{\n\t \t\ttmpp [ j ] = tmp [ j ] ; // \u8bb0\u5f55\u526f\u672c\uff0c\u65b9\u4fbf\u8fd8\u539f\u73b0\u573a \n\t \t\tif ( J [ j ] [ x ] && f [ j ] [ x ] >= i ) \n\t \t\tfl [ j ] [ y + 1 ] = 1 ; \n\t \t}\n\t \tmemset ( vis , 1 , sizeof ( vis ) ) ; \n\t \tif ( found ( y + 1 ) ) dfs ( i + 1 , y + 1 ) ; // \u7ee7\u7eed\u9012\u5f52 \n\t \tfor ( int j = 1 ; j <= n ; j ++ ) // \u8fd8\u539f\u73b0\u573a \n\t \t{\n\t \t\ttmp [ j ] = tmpp [ j ] ; \n\t \t\tif ( J [ j ] [ x ] == 1 && f [ j ] [ x ] >= i ) \n\t \t\t\tfl [ j ] [ y + 1 ] = 0 ; \n\t\t}\n\t}\n}\n\t \t\t\nint main () \n{\n\tm = read () ; n = read () ; k = read () ; \n\tfor ( int i = 1 ; i <= m ; i ++ ) b [ i ] . x = read () , b [ i ] . y = read () ;\n\tfor ( int i = 1 ; i <= n ; i ++ ) a [ i ] . x = read () , a [ i ] . y = read () ; \n\tfor ( int i = 1 ; i <= m ; i ++ ) \n\t \tfor ( int j = 1 ; j <= n ; j ++ ) \n\t \t\tif ( fang ( a [ j ] . x - b [ i ] . x ) + fang ( a [ j ] . y - b [ i ] . y ) <= fang ( k ) ) J [ j ] [ i ] = 1 ; // \u5224\u65ad\u80fd\u5426\u70b8\u5230 \n\tfor ( int i = 1 ; i <= n ; i ++ ) \n\t\tfor ( int j = m ; j >= 1 ; j -- ) \n\t\t\tif ( J [ i ] [ j ] ) f [ i ] [ j ] = max ( j , f [ i ] [ j + 1 ] ) ; //\u9012\u63a8\u6c42\u6700\u5927\u80fd\u70b8\u5230\u7684\u6b66\u5668 \n\tmemset ( g , 0x3f , sizeof ( g ) ) ; \n\tg [ m + 1 ] = 0 ; \n\tfor ( int i = m ; i >= 1 ; i -- )\n\t \tfor ( int j = 1 ; j <= n ; j ++ ) \n\t\t\tif ( J [ j ] [ i ] ) g [ i ] = min ( g [ i ] , g [ f [ j ] [ i ] + 1 ] + 1 ) ; // \u9012\u63a8\u6c42\u4ece\u8be5\u70b9\u6b66\u5668\u70b8\u5230\u6700\u540e\u6b66\u5668\u6700\u5c11\u7528\u7684\u70b8\u5f39 \n\tans = n ; // \u6700\u5dee\u8981\u7528 n \u4e2a\u70b8\u5f39\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u4e3a n  \n\tmemset ( tmp , -1 , sizeof ( tmp ) ) ; \n\tdfs ( 1 , 0 ) ;  // dfs \n\tcout << ans << endl ; \n\treturn 0 ; \n}\n\n```\n\n#### \u540e\u8bb0\n\n\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u671b\u901a\u8fc7 $QwQ$\u3002",
        "postTime": 1629036716,
        "uid": 478024,
        "name": "LL__LILOG",
        "ccfLevel": 0,
        "title": "P1526"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1526)\n\n---\n\n\u6839\u636e\u52fe\u80a1\u5b9a\u7406\uff1a\n\n> \u4e00\u4e2a\u6b66\u5668 $(x,y)$ \u80fd\u88ab\u70b8\u5f39 $(u,v)$ \u653b\u51fb\u5230 $\\Leftrightarrow (x-u)^2+(y-v)^2\\leq k^2$ \n\n\u901a\u8fc7\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5bf9\u6bcf\u4e2a\u70b8\u5f39\u6c42\u51fa\u4e00\u4e2a $m$ \u4f4d\u7684 *bitset* \u8868\u793a\u8303\u56f4\u5185\u6b66\u5668\u96c6\u5408\u3002\n\n---\n\n\u6211\u4eec\u8003\u8651\u7b80\u5316\u6467\u6bc1\u6b66\u5668\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u6bcf\u6b21\u90fd\u662f\u6467\u6bc1\u4e00\u6bb5\u8fde\u7eed\u533a\u95f4\u5185\u7684\u6b66\u5668\u3002\u5373\uff1a\u5c06 $m$ \u4e2a\u6b66\u5668\u5206\u6210\u82e5\u5e72\u4e2a\u8fde\u7eed\u533a\u95f4\uff0c\u6309\u987a\u5e8f\u6bcf\u6b21\u6467\u6bc1\u5176\u4e2d $1$ \u4e2a\u3002\n\n\u90a3\u4e48\u5c31\u60f3\u5230**\u641c\u7d22**\u3002\u641c\u7d22\u533a\u95f4\u7684\u5212\u5206\u65b9\u6848\u3002\n\n- $\\operatorname{dfs}(i,cnt,lst)$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff0c\u5f53\u524d\u533a\u95f4\u5de6\u7aef\u70b9\u662f $lst$\uff0c$lst$ \u4e4b\u524d\u5212\u5206\u4e86 $cnt$ \u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u7b54\u6848\u3002\n- \u6bcf\u6b21\u8003\u8651\u5f53\u524d\u662f\u5426\u5f00\u4e00\u4e2a\u65b0\u533a\u95f4\uff0c\u8f6c\u79fb\u5230 $\\operatorname{dfs}(i+1,cnt,lst)$ \u548c $\\operatorname{dfs}(i+1,cnt+1,i+1)$\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u5212\u5206\u65b9\u6848\uff0c\u6bcf\u4e2a\u533a\u95f4\u90fd\u5bf9\u5e94\u4e00\u4e2a\u552f\u4e00\u7684\u70b8\u5f39\u3002\u90a3\u4e48\u53ef\u4ee5\u5c06 $n$ \u4e2a\u70b8\u5f39\u548c $cnt$ \u4e2a\u533a\u95f4\u770b\u4f5c\u8282\u70b9\u3002\u82e5\u70b8\u5f39\u53ef\u4ee5\u6467\u6bc1\u4e00\u4e2a\u533a\u95f4\uff0c\u5219\u4e24\u8005\u8fde\u8fb9\uff0c\u6784\u9020**\u4e8c\u5206\u56fe**\u3002\u82e5\uff1a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570 = $cnt$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5212\u5206\u65b9\u6848\u5c31\u662f\u5408\u6cd5\u7684\uff0c\u4f7f\u7528\u70b8\u5f39\u4e2a\u6570 = $cnt$\u3002\n\n\u5bf9\u4e8e\u4e8c\u5206\u56fe\u7684\u5339\u914d\uff0c\u6211\u4eec\u7528**\u5308\u7259\u5229\u7b97\u6cd5**\u89e3\u51b3\u3002~~\u8fd9\u91cc\u5c31\u4e0d\u89e3\u91ca\u5308\u7259\u5229\u7b97\u6cd5\u4e86\uff0c\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\u3002~~ \u5728\u641c\u7d22\u7684\u540c\u65f6\uff0c\u6bcf\u6b21\u65b0\u5f00\u4e00\u4e2a\u533a\u95f4 $[lst,i]$\uff0c\u5c31\u7528\u5308\u7259\u5229\u7b97\u6cd5\u53bb\u627e\u662f\u5426\u5b58\u5728\u70b8\u5f39\u53ef\u4ee5\u548c\u8fd9\u4e2a\u533a\u95f4\u5339\u914d\u3002\u5982\u679c\u662f\uff0c\u5c31\u53ef\u4ee5\u8f6c\u79fb\u3002\u6700\u540e\u7b54\u6848\u5c31\u662f\u6700\u5c0f\u533a\u95f4\u4e2a\u6570\u3002\n\n---\n\n**\u4ee5\u4e0a\u662f\u641c\u7d22\u7684\u601d\u8def\uff0c\u5728\u5b9e\u73b0\u65f6\u8fd8\u8981\u52a0\u5165\u4f18\u5316\u3002**\n\n1. \u53ef\u4ee5\u63d0\u524d $O(nm^2)$ \u9884\u5904\u7406,\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u5305\u542b $[l,r]$ \u7684\u70b8\u5f39\u5217\u8868\u3002\u82e5\u5f53\u524d\u8981\u5c06 $[lst,i]$ \u5212\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u5728\u4e8c\u5206\u56fe\u4e0a\u5c31\u5bf9\u5e94\u8fd9\u4e2a\u5217\u8868\u91cc\u7684\u6240\u6709\u70b8\u5f39\uff0c\u5b9e\u65f6\u5308\u7259\u5229\u7b97\u6cd5 check \u4e00\u4e0b\uff0c\u5982\u679c $\\operatorname{check}(lst,i)=false$\uff0c\u90a3\u4e48\u5c31\u526a\u679d\u3002\u56e0\u4e3a\u5f53\u524d $[lst,i]$ \u65e0\u6cd5\u5339\u914d\uff0c\u8bf4\u660e\u540e\u9762 $[lst,i+j],\\forall{0<=j<=m-i}$ \u4e5f\u4e00\u5b9a\u65e0\u6cd5\u5339\u914d\u3002\u4e0d\u5b58\u5728\u5408\u6cd5\u65b9\u6848\u3002\n\n2. A* \u526a\u679d\uff0c\u5012\u5e8f\u9884\u5904\u7406 $mn[1...m]$\uff0c\u8868\u793a\u4ece $i$ \u5f00\u59cb\uff0c$[i,m]$ \u8fd9\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6b66\u5668\u6700\u5c0f\u8981\u7528\u51e0\u4e2a\u70b8\u5f39\u7206\u7834\uff08\u76f8\u540c\u70b8\u5f39\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\uff09\u3002\u53ef\u4ee5 $O(m^2)$ \u66b4\u529b\u9884\u5904\u7406 $mn$ \u6570\u7ec4\uff0cdfs \u65f6\u82e5 $cnt+mn[lst]>=ans$\uff0c\u5176\u4e2d $ans$ \u8868\u793a\u5f53\u524d\u6700\u4f18\u7b54\u6848\u3002\u8bf4\u660e\u7b54\u6848\u4e0d\u4f1a\u66f4\u4f18\uff0c\u8fdb\u884c\u6700\u4f18\u6027\u526a\u679d\u3002\n\n3. \u6bcf\u4e2a $\\operatorname{dfs}$ \u72b6\u6001\uff0c\u5982\u679c $\\operatorname{check}(lst,i)=true$\uff0c\u53ef\u4ee5\u8f6c\u79fb\uff0c\u90a3\u4e48\u5148\u641c\u7d22 $\\operatorname{dfs}(i+1,cnt,lst)$\uff0c\u518d\u641c\u7d22 $\\operatorname{dfs}(i+1,cnt+1,i+1)$\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u5148\u641c\u5230\u6700\u4f18\u7b54\u6848\u3002\n\n\u52a0\u4e0a\u8fd9\u4e9b\u4f18\u5316\u540e\u5c31\u80fd\u9ad8\u6548\u5730 ~~\u6c34\u8fc7~~ \u901a\u8fc7\u3002\n\n---\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define pb push_back\n#define pii pair<int,int>\n#define mp make_pair\n#define F first\n#define S second\nusing namespace std;\nint n,m,K,x[205],y[205],to[105][105],mn[105],ans;//to\u8868\u793a\u4e8c\u5206\u56fe\u5339\u914d\u4e2d\u533a\u95f4\u5bf9\u5e94\u7684\u70b8\u5f39\npii mch[105];//\u70b8\u5f39\u5728\u4e8c\u5206\u56fe\u5339\u914d\u4e2d\u5bf9\u5e94\u7684\u533a\u95f4\nbitset<105> a[105];\nvector<int> v[105][105];\nbool used[105],link[105][105];\nbool check(int l,int r,bool f=1)//\u5308\u7259\u5229\u7b97\u6cd5\u6838\u5fc3\u4ee3\u7801\n{\n\tif (f)//\u521d\u59cb\u5316used\u6570\u7ec4\n\t\tfill(used,used+m,0);\n\tfor(auto u:v[l][r])\n\t\tif (!used[u])\n\t\t{\n\t\t\tused[u]=1;\n\t\t\tif (mch[u].F==-1||check(mch[u].F,mch[u].S,0))//\u5982\u679c\u5f53\u524d\u70b8\u5f39\u6ca1\u6709\u7528\u8fc7\u6216\u5176\u5bf9\u5e94\u7684\u533a\u95f4\u53ef\u4ee5\u7528\u522b\u7684\u70b8\u5f39\u5904\u7406\uff0c\u5219\u53ef\u4ee5\u7528\u8fd9\u4e2a\u70b8\u5f39\u5904\u7406\u5f53\u524d\u533a\u95f4[l,r]\n\t\t\t{\n\t\t\t\tmch[u]=mp(l,r);\n\t\t\t\tto[l][r]=u;\n\t\t\t\treturn 1; \n\t\t\t}\n\t\t}\n\treturn 0;\n}\nvoid dfs(int i,int cnt,int lst)\n{\n\tif (i==n-1)\n\t{\n\t\tif (check(lst,i))\n\t\t{\n\t\t\tans=min(ans,cnt+1);\n\t\t\tmch[to[lst][i]]=mp(-1,-1);\n\t\t}\n\t\treturn;\n\t}\n\tif (cnt+mn[lst]>=ans)//A*\u6700\u4f18\u6027\u526a\u679d\n\t\treturn;\n\tif (check(lst,i))//\u53ef\u4ee5\u8f6c\u79fb\n\t{\n\t\tmch[to[lst][i]]=mp(-1,-1);\n\t\tdfs(i+1,cnt,lst);//\u4e0d\u65b0\u589e\u533a\u95f4\n\t}\n\tif (check(lst,i))\n\t{\n\t\tdfs(i+1,cnt+1,i+1);//\u65b0\u589e\u533a\u95f4\n\t\tmch[to[lst][i]]=mp(-1,-1);//\u56de\u6eaf\n\t}\n}\nint main()\n{\n\tios::sync_with_stdio(false),cin.tie(nullptr);\n\tcin>>n>>m>>K;//\u4ee3\u7801n\u548cm\u7684\u5b9a\u4e49\u4e0e\u9898\u9762\u76f8\u53cd\n\tfor(int i=0;i<n+m;i++)\n\t\tcin>>x[i]>>y[i];\n\tfor(int i=0;i<m;i++)\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif ((x[n+i]-x[j])*(x[n+i]-x[j])+(y[n+i]-y[j])*(y[n+i]-y[j])<=K*K)\n\t\t\t\ta[i][j]=1;//\u5904\u7406bitset\n\tfor(int i=0;i<m;i++)//\u9884\u5904\u7406\u533a\u95f4[l,r]\u53ef\u4ee5\u5bf9\u5e94\u7684\u70b8\u5f39\u5217\u8868\n\t{\n\t\tfor(int l=0;l<n;l++)\t\n\t\t\tfor(int r=0;r<n;r++)\n\t\t\t\tlink[l][r]=0;\n\t\tfor(int l=0;l<n;l++)\n\t\t\tif (a[i][l])\n\t\t\t{\n\t\t\t\tlink[l][l]=1;\n\t\t\t\tv[l][l].pb(i);\n\t\t\t}\n\t\tfor(int r=1;r<n;r++)\n\t\t\tfor(int l=r-1;l>=0;l--)\n\t\t\t\tif (link[l][r-1]&&a[i][r])\n\t\t\t\t{\n\t\t\t\t\tlink[l][r]=1;\n\t\t\t\t\tv[l][r].pb(i);\n\t\t\t\t}\n\t}\n\tfor(int i=n-1,j=n-1,cnt=0;i>=0;i--)//\u9884\u5904\u7406mn\u6570\u7ec4\n\t{\n\t\twhile(j>=i)\n\t\t{\n\t\t\tint p=j;\n\t\t\twhile(p>=0&&!v[p][j].empty())//\u8d2a\u5fc3\uff0c\u6bcf\u6b21\u53d6\u53ef\u80fd\u5927\u7684\u533a\u95f4\u8986\u76d6\u5f53\u524d\u4f4d\u7f6e\n\t\t\t\t--p;\n\t\t\tj=p;\n\t\t\t++cnt;\n\t\t}\n\t\tmn[i]=cnt;\n\t}\n\tmemset(mch,-1,sizeof(mch));\n\tmemset(to,-1,sizeof(to));\n\tans=m;\n\tdfs(0,0,0);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1657086681,
        "uid": 209168,
        "name": "FelFa_1414666",
        "ccfLevel": 7,
        "title": "P1526 \u667a\u7834\u8fde\u73af\u9635 \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u653e\u5728\u9ed1\u9898\u91cc\u9762\u5176\u5b9e\u8fd8\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a\u9664\u4e86\u641c\u7d22\u548c\u526a\u679d\uff0c\u5e76\u6ca1\u6709\u6d89\u53ca\u5230\u591a\u5c11\u5176\u5b83\u7684\u9ed1\u9898\u96be\u5ea6\u7684\u77e5\u8bc6\u70b9\u3002\u6240\u4ee5\u8bf4\u53ea\u8981\u628a\u641c\u7d22\u548c\u526a\u679d\u638c\u63e1\u5230\u4e86\u8d85\u795e\u7684\u5730\u6b65\u5c31\u80fd\u505a\u5bf9\uff0c\u66f4\u4f55\u51b5\u662f\u6211\u8fd9\u6837\u7684\u521d\u4e00\u849f\u84bb\u5462\uff1f\n\n\u7ffb\u8bd1\u4e00\u4e0b\u9898\u76ee\uff1a\u6709 $n$ \u4e2a\u70b9\u9700\u8981\u88ab\u8986\u76d6\uff0c\u4f60\u6709 $m$ \u4e2a\u534a\u5f84\u4e3a $k$ \u7684\u5706\uff0c\u6bcf\u4e2a\u5706\u8986\u76d6\u7684\u70b9\u662f\u5706\u5185\uff08\u5305\u62ec\u8fb9\u754c\uff09\u7f16\u53f7\u8fde\u7eed\u7684\u4e00\u4e9b\u70b9\uff0c\u4e14\u6bcf\u4e2a\u5706\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u95ee\u81f3\u5c11\u8981\u9009\u62e9\u51e0\u4e2a\u5706\u624d\u80fd\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u9996\u5148\u6211\u8bb2\u4e00\u4e0b\u5e76\u4e0d\u80fd\u8fc7\u7684\u666e\u901a\u641c\u7d22\uff0c\u60f3\u5fc5\u6211\u4e0a\u6218\u573a\u7684\u65f6\u5019\u4e5f\u6700\u591a\u8fbe\u5230\u8fd9\u79cd\u5730\u6b65\u3002\u526a\u679d\u6211\u501f\u9274\u4e86\u4e00\u4e0b\u5927\u4f6c\u7684\u9898\u89e3\u624d\u5bf9\u7684\u3002\u5927\u5bb6\u4e0d\u8981\u5b66\u4e60\u8fd9\u79cd\u574f\u4e60\u60ef\u3002\n\n\u5176\u5b9e\u672c\u9898\u53ef\u4ee5\u5206\u800c\u6cbb\u4e4b\uff0c\u53d8\u6210\u4e24\u4e2a\u5b50\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u662f\u5c06 $n$ \u4e2a\u70b9\u6839\u636e\u7f16\u53f7\u62c6\u6210 $k$ \u6bb5\uff0c\u7b2c\u4e8c\u4e2a\u5219\u662f\u5224\u65ad $m$ \u4e2a\u5706\u4e0e\u8fd9 $k$ \u6bb5\u7684\u6700\u5927\u5339\u914d\u662f\u5426\u662f $k$\u3002\n\n\u4ed4\u7ec6\u770b\uff0c\u53d1\u73b0\u7b2c\u4e8c\u4e2a\u5b50\u95ee\u9898\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u597d\u89e3\u51b3\uff0c\u5c31\u662f\u7528\u4e8c\u5206\u56fe\u5b8c\u6210\uff0c\u8be6\u7ec6\u4e00\u70b9\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u8fd9\u4e2a\u4e3b\u8981\u4f5c\u7528\u8fd8\u662f\u6709\u4e00\u70b9\u7684\u4f18\u5316\u6210\u5206\u3002\n\n[\u4e8c\u5206\u56fe\u8be6\u60c5](https://blog.csdn.net/qq_38956769/article/details/80238896)\n\n\u7136\u800c\u7b2c\u4e00\u4e2a\u5b50\u95ee\u9898\u6211\u4eec\u53ea\u80fd\u786c\u641c\u7d22\u3002\n\n\u4e0d\u8fc7\u8fd9\u6837\u7684\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8fbe $O(2^m)$\uff0c\u53ef\u8c13\u662f\u76f8\u5f53\u52a3\u8d28\u4e86\u3002\n\n\u8fd9\u4e2a\u4ee3\u7801\u6211\u7ed9\u5927\u5bb6\u54c1\u4e00\u54c1\uff1a\n```\nvoid dfs(int now,int sum)\n{\n    if(now>n)\n    {\n        ans=sum;\n        return;\n    }\n    int C[105];\n    int top;\n    for(int i=n;i>=now;i--)\n    {\n        if(!have[now][i]) continue;\n        top=0;\n        for(int j=1;j<=m;j++)\n        {\n            if(mx[j][now]==i)\n            {\n                M[sum+1][j]=1;\n                C[++top]=j;\n            }\n        }\n        memset(vis,0,sizeof(vis));\n        if(find(sum+1)) dfs(i+1,sum+1);\n    }\n}\n```\n\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\u6ca1\u6709\u8d85\u65f6\u7684\u70b9\u3002\n\n\u641c\u7d22\u526a\u679d\u8fd9\u4e2a\u4e1c\u897f\u5bf9\u6211\u800c\u8a00\u6bd4\u8f83\u9760\u6c34\u5e73\u3002\n\n\u7b2c\u4e00\u4e2a\u526a\u679d\u6211\u4e00\u4e0b\u5b50\u5c31\u60f3\u5230\u4e86\u52a8\u6001\uff0c\u6c42\u51fa\u540e\u9762\u51e0\u4e2a\u70b9\u81f3\u5c11\u9700\u8981\u51e0\u4e2a\u5706\u8986\u76d6\uff0c\u5e76\u4ee5\u6b64\u6765\u8fdb\u884c\u6700\u4f18\u6027\u526a\u679d\u3002\u7136\u540e\u4e00\u8fb9\u641c\u7d22\uff0c\u4e00\u8fb9\u5339\u914d\u5224\u65ad\u6b64\u65f6\u7684\u5206\u7ec4\u662f\u5426\u5f00\u884c\u5373\u53ef\u3002\n\n\u53ef\u662f\u6211\u53d1\u73b0\u5b83\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u53e6\u4e00\u4e2a\u7684\u526a\u679d\u3002\n\n\u8fd9\u91cc\u5229\u7528\u4e00\u4e0b\u8d2a\u5fc3\u601d\u60f3\uff1a\u5982\u679c\u5706 $a$ \u8986\u76d6\u4e86\u70b9 $i$ \u4e14\u5305\u542b\u70b9 $i+1$\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u4e00\u7ec4\u6700\u4f18\u89e3\u4e2d $a$ \u8986\u76d6\u70b9 $i+1$\u3002\u6240\u4ee5\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u7528\u6765\u5f53\u4e00\u4e2a\u526a\u679d\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k;\nint mx[105][105];\nint ans;\nint need[105];\nint P[105];\nbool ok[105][105],have[105][105],M[105][105],vis[105];\nstruct node\n{\n    int x,y;\n}wq[105],zd[105];\ninline int len(node u,node v)\n{\n    return (u.x-v.x)*(u.x-v.x)+(u.y-v.y)*(u.y-v.y);\n}\nbool find(int x)\n{\n    for(int i=1;i<=m;i++)\n    {\n        if(vis[i]||!M[x][i])   continue;\n        vis[i]=1;\n        if(!P[i]||find(P[i]))\n        {\n            P[i]=x;\n            return 1;\n        }\n    }\n    return 0;\n}\nvoid dfs(int now,int sum)\n{\n    if(need[now]+sum>ans)   return;//\u8d2a\u5fc3\u7684\u526a\u679d\n    if(now>n)\n    {\n        ans=sum;\n        return;\n    }\n    int C[105];\n    int top;\n    for(int i=n;i>=now;i--)\n    {\n        if(!have[now][i]) continue;\n        top=0;\n        for(int j=1;j<=m;j++)\n        {\n            if(mx[j][now]==i)\n            {\n                M[sum+1][j]=1;\n                C[++top]=j;\n            }\n        }\n        memset(vis,0,sizeof(vis));\n        if(find(sum+1)) dfs(i+1,sum+1);//\u5173\u952e\u7684\u641c\u7d22\n        for(int j=1;j<=top;j++)\n        {\n            M[sum+1][C[j]]=0;\n            if(P[C[j]]==sum+1) P[C[j]]=0;\n        }\n    }\n}\nint main()\n{\n    memset(need,0x3f,sizeof(need));\n    cin>>n>>m>>k;\n    k*=k;\n    for(int i=1;i<=n;i++) cin>>wq[i].x>>wq[i].y;\n    for(int i=1;i<=m;i++) cin>>zd[i].x>>zd[i].y;\n    need[n+1]=0;\n    for(int j=n;j>=1;j--)\n    {\n        for(int i=1;i<=m;i++)\n        {\n            if(len(zd[i],wq[j])<=k)\n            {\n                ok[i][j]=1;\n                ok[i][j+1]?mx[i][j]=mx[i][j+1]:mx[i][j]=j;\n                have[j][mx[i][j]]=1;\n                need[j]=min(need[j],need[mx[i][j]+1]+1);\n            }\n        }\n    }\n    ans=min(n,m);\n    dfs(1,0);\n    //1\u5c31\u662fnow\uff0c0\u5c31\u662fsum\u521d\u59cb\u5316\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1644388811,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "P1526\u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u548c\u4e4b\u524d\u767e\u5ea6\u4e4b\u661f\u90a3\u9898\u662f\u5dee\u4e0d\u591a\u5957\u8def\u5427\uff0c\u90fd\u662f\u641c\u7d22\u5957\u4e0a\u4e00\u4e2a\u4e8c\u5206\u56fe\u4f18\u5316\n\n\u5f88\u5bb9\u6613\u77e5\u9053\uff0c\u6bcf\u4e2a\u70b8\u5f39\u90fd\u662f\u70b8\u6389\u8fde\u7eed\u7684\u4e00\u6bb5\n\n\u7136\u540e\u4f60\u5c31\u641c\u7d22\u4e00\u4e0b\u54ea\u4e9b\u6bb5\n\n\u7136\u540e\u4e8c\u5206\u56fe\u5224\u5b9a\u4e00\u4e0b\n\n\u6ce8\u610f\u8981\u8fb9\u641c\u7d22\u8fb9\u5224\u5b9a\uff0c\u8fd9\u6837\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u53ef\u884c\u6027\u526a\u679d\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u8fc7\u53bb\u4e86\n\n\u5176\u5b9e\u5728\u5206\u6bb5\u7684\u65f6\u5019\u4e5f\u6709\u6280\u5de7\uff0c\u5c31\u662f\u80af\u5b9a\u662f\u5728\u6bcf\u4e2a\u70b8\u5f39\u7aef\u70b9\u7684\u65f6\u5019\u5206\uff0c\u4f46\u662f\u6211\u6bd4\u8f83\u61d2\uff0c\u6ca1\u6709\u52a0\uff0c\u53cd\u6b63\u4e5f\u8fc7\u4e86\n\n\u56e0\u4e3a\u8fd9\u9898\u6570\u636e\u968f\u673a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int N=105;\nint m,n,k;//\u6b66\u5668   \u70b8\u5f39   \u653b\u51fb\u8303\u56f4\nstruct qq\n{\n    int x,y;\n}a[N],b[N];\nint dis (qq a,qq b)\n{\n    return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);\n}\nint ans;\nbool ok[N][N];\nbool s[N][N];//\u80fd\u4e0d\u80fd\u70b8\u5230\nint tt[N][N];//\u8fd9\u4e2a\u70b9\u5982\u679c\u662ftrue\u7684\u8bdd\u4e0b\u4e00\u4e2a\u662f\u4ec0\u4e48\nint f[N];//\u8fd9\u4e2a\u70b8\u5f39\u914d\u5bf9\u4e86\u8c01 \nbool vis[N];\nbool find (int x)\n{\n    for (int u=1;u<=n;u++)\n        if (ok[u][x]&&vis[u])\n        {\n            vis[u]=false;\n            if (f[u]==-1||find(f[u]))\n            {\n                f[u]=x;\n                return true;\n            }\n        }\n    return false;\n}\nint dist[N];\nvoid dfs (int y,int z)//\u5212\u5206\u5230\u7b2c\u51e0\u4e2a\u70b9   \u5212\u5206\u4e86\u591a\u5c11\u6bb5 \n{\n    if (z+dist[y]>=ans) return ;\n    if (y>m)\n    {\n        ans=z;\n        return ;\n    }\n    int ff[N];\n    for (int i=y;i<=m;i++)//\u8fd9\u4e00\u6bb5\u5212\u5728\u54ea\u91cc \n    {\n        for (int j=1;j<=n;j++)\n        {\n            ff[j]=f[j];\n            if (s[j][y]==true&&tt[j][y]>=i)\n                ok[j][z+1]=true;\n        }\n        memset(vis,true,sizeof(vis));\n        if (find(z+1)) dfs(i+1,z+1);\n        for (int j=1;j<=n;j++)\n        {\n            f[j]=ff[j];\n            if (s[j][y]==true&&tt[j][y]>=i)\n                ok[j][z+1]=false;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&m,&n,&k);\n    for (int u=1;u<=m;u++)  scanf(\"%d%d\",&a[u].x,&a[u].y);\n    for (int u=1;u<=n;u++)  scanf(\"%d%d\",&b[u].x,&b[u].y);\n    memset(s,false,sizeof(s));\n    for (int u=1;u<=n;u++)\n        for (int i=1;i<=m;i++)\n            if (dis(b[u],a[i])<=k*k)\n                s[u][i]=true;\n    for (int u=1;u<=n;u++)\n        for (int i=m;i>=1;i--)\n        {\n            if (s[u][i]==false) continue;\n            tt[u][i]=max(i,tt[u][i+1]);\n        }\n    memset(dist,127,sizeof(dist));\n    dist[m+1]=0;\n    for (int u=m;u>=1;u--)\n    {\n        for (int i=1;i<=n;i++)\n        {\n            if (s[i][u]==false) continue;\n            dist[u]=min(dist[u],dist[tt[i][u]+1]+1);\n        }\n    }\n    memset(f,-1,sizeof(f));\n    memset(ok,false,sizeof(ok));\n    ans=n;\n    dfs(1,0);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1528894072,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1526 \u3010[NOI2003]\u667a\u7834\u8fde\u73af\u9635\u3011"
    },
    {
        "content": "\u521d\u6b65\u5206\u6790\uff1a\n\nA\u56fd\u70b8\u5f39I\u53ef\u4ee5\u70b8\u5230B\u56fd\u6b66\u5668J\u7684\u6761\u4ef6: (u[i]-x[j])2+(v[i]-y[j])2<=r2\n\n\u7ed3\u8bba\uff1a\u5f88\u96be\u627e\u5230\u6c42\u6700\u4f18\u89e3\u7684\u591a\u9879\u5f0f\u7b97\u6cd5\u3002\n\n\u9762\u5bf9\u6b64\u7c7b\u95ee\u9898\uff0c\u4e00\u822c\u53ea\u6709\u641c\u7d22\u7b56\u7565\u3002\n\n\u8fdb\u4e00\u6b65\u5206\u6790\uff1a\n\n\u6bcf\u4e00\u9897\u70b8\u5f39\u5fc5\u5b9a\u70b8\u6389B\u56fd\u6b66\u5668\u4e2d\u7f16\u53f7\u8fde\u7eed\u7684\u4e00\u6bb5\u3002\n\n5\u5206\u949f\u53ea\u662f\u8868\u660e\u6bcf\u4e00\u9897\u70b8\u5f39\u53ef\u4ee5\u70b8\u6389\u4efb\u610f\u591a\u4e2a\u7f16\u53f7\u8fde\u7eed\u7684B\u56fd\u6b66\u5668\u3002\n\n\u90e8\u5206\u641c\u7d22\uff1a\n\n\u6b64\u9898\u4f7f\u7528\u90e8\u5206\u641c\u7d22\u7684\u7b97\u6cd5\u9700\u8981\u4e00\u4e9b\u8f6c\u5316\uff1a\u5982\u679c\u5df2\u7ecf\u5c06B\u56fd\u6b66\u5668\u6839\u636e\u7f16\u53f7\u5206\u4e3ax\n\n\u6bb5\uff0c[Si,Ti] (S1=1,Ti>=Si,Ti+1=Si+1)\u3002\u7136\u540e\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4eceA\u56fd\u7684N\u9897\u70b8\u5f39\u4e2d\u9009\u51fax\n\n\u9897\uff0c\u5206\u522b\u53ef\u4ee5\u70b8\u6389\u5176\u4e2d\u7684\u4e00\u6bb5\u3002\n\n\u5176\u5b9e\u6211\u4eec\u628a\u641c\u7d22\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\uff0c\u5148\u901a\u8fc7\u641c\u7d22\u5c06B\u56fd\u6b66\u5668\u6839\u636e\u7f16\u53f7\u5206\u4e3ax\u6bb5\uff0c\u518d\n\n\u901a\u8fc7\u641c\u7d22\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4eceA\u56fd\u7684N\u9897\u70b8\u5f39\u4e2d\u9009\u51fax\u9897\uff0c\u5206\u522b\u53ef\u4ee5\u70b8\u6389\u5176\u4e2d\u7684\u4e00\u6bb5\u3002\n\n\u5176\u5b9e\u7b2c\u4e8c\u90e8\u5206\u53ef\u4ee5\u7528\u5339\u914d\u6765\u89e3\u51b3\u3002\n\nC[T] \u8868\u793aA\u56fd\u70b8\u5f39I\u662f\u5426\u53ef\u4ee5\u70b8\u5230B\u56fd\u6b66\u5668S,S+1..T-1,T\u3002\n\nC=((u-x)2+(v-y)2<=R2)\n\nC[T]=C[T-1] & C[T][T] (S<T)\n\n\u6c42C\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N3)\u3002\n\n\u5efa\u56fe\uff1a\u5de6\u8fb9x\u4e2a\u70b9\uff0c\u8868\u793aB\u56fd\u6b66\u5668\u6839\u636e\u7f16\u53f7\u5206\u4e3a\u7684x\u6bb5\uff0c\u53f3\u8fb9N\u4e2a\u70b9\uff0c\u8868\u793aA\u56fd\n\n\u7684N\u9897\u70b8\u5f39\u3002\u5de6\u8fb9\u7b2ci\u4e2a\u70b9\u5230\u53f3\u8fb9\u7b2cj\u4e2a\u70b9\u6709\u8fb9\u7684\u6761\u4ef6\u5373\uff1aC[Si][Ti][j]\u3002\n\n\u641c\u7d22\u7684\u4efb\u52a1\u5c31\u662f\u5c06B\u56fd\u6b66\u5668\u6839\u636e\u7f16\u53f7\u5212\u5206\u4e3a\u82e5\u5e72\u6bb5+\u4e8c\u5206\u56fe\u5339\u914d\u5224\u65ad\u3002\n\n\u6027\u80fd\u5206\u6790\uff081\uff09\uff1a\n\n\u641c\u7d22\u7684\u57fa\u672c\u6846\u67b6\u5df2\u7ecf\u5efa\u7acb\uff0c\u867d\u7136\u6570\u636e\u662f\u968f\u673a\u751f\u6210\u7684\uff0c\u4f46\u662fM\u4e2aB\u56fd\u6b66\u5668\u7684\u5212\u5206\n\n\u65b9\u6848\u8fd8\u662f\u975e\u5e38\u591a\u7684\uff0c\u6709\u65f6\u53ef\u80fd\u9ad8\u8fbe2m\u3002\u65f6\u95f4\u4e0a\u5f88\u96be\u627f\u53d7\uff0c\u5982\u679c\u4f7f\u7528\u5361\u65f6\uff0c\u6b63\u786e\u6027\n\n\u53d7\u5230\u5f71\u54cd\uff0c\u6548\u679c\u4e0d\u4f1a\u5f88\u597d\u3002\n\n\u53ea\u67094\u4e2a\u6570\u636e\u53ef\u4ee5\u5728\u65f6\u9650\u5185\u51fa\u89e3\uff0c\u53e6\u59166\u4e2a\u5982\u679c\u5361\u65f6\uff0c\u67091\u4e2a\u4e5f\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\n\n\u89e3\u3002\n\u4f18\u5316\uff1a\n\n\u4f18\u5316\u53ef\u4ee5\u901a\u8fc7\u53ef\u884c\u6027\u548c\u6700\u4f18\u6027\u4e24\u65b9\u9762\u5206\u6790\u3002\n\n\u4f18\u5316\u4e00\uff08\u6700\u4f18\u6027\uff09\uff1a\u5982\u679cA\u56fd\u70b8\u5f39\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u8bbe\uff1a\n\nDist[i]=\u70b8\u6389B\u56fd\u6b66\u5668i\uff0dm\u7684\u6700\u5c11\u4f7f\u7528\u70b8\u5f39\u6570\u3002\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u8ba1\u7b97Dist\u503c\uff0c\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a\n\nDist[m+1]=0\u3002\n\nDist[i]=Min(Dist[j]+1 | Can[i][j-1][k](1<=k<=n)) (1<=i<=n)\n\n(i<j<=n+1)\n\n\u6c42Dist\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N3)\u3002\n\n\u4ece\u800c\u4ea7\u751f\u4e86\u4e00\u4e2a\u6700\u4f18\u6027\u526a\u679d\u6761\u4ef6\uff1a\n\nif \u5f53\u524d\u5df2\u7ecf\u4f7f\u7528\u7684\u70b8\u5f39\u6570+Dist[\u5f53\u524d\u5df2\u7ecf\u70b8\u6389\u7684B\u56fd\u6b66\u5668\u6570+1]>=\u5f53\u524d\u627e\u5230\n\n\u7684\u6700\u4f18\u89e3 then \u526a\u679d\uff1b\n\n\u4f18\u5316\u4e8c\uff08\u53ef\u884c\u6027\uff09\uff1a\n\n\u6b64\u641c\u7d22\u65b9\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u7528\u4e24\u4e2a\u6548\u679c\u5f88\u597d\u7684\u53ef\u884c\u6027\u4f18\u5316\uff1a\n\n(1)\u63d0\u524d\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5339\u914d\u6210\u529f\uff0c\u907f\u514d\u591a\u4f59\u7684\u641c\u7d22\u3002\n\n(2)\u6bcf\u6b21\u5339\u914d\u53ef\u4ee5\u4ece\u4ee5\u524d\u7684\u5339\u914d\u5f00\u59cb\u6269\u5c55\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u5f00\u59cb\u3002\n\n\u5982\u679c\u5f53\u524d\u7684\u5212\u5206\u65b9\u6cd5\u5df2\u7ecf\u65e0\u6cd5\u5339\u914d\u6210\u529f\uff0c\u5c31\u6ca1\u6709\u641c\u7d22\u4e0b\u53bb\u7684\u5fc5\u8981\u4e86\uff0c\u53ea\u8981\u6bcf\n\n\u641c\u7d22\u65b0\u7684\u4e00\u6bb5\u65f6\u7acb\u5373\u901a\u8fc7\u5339\u914d\u5224\u65ad\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u6c42\u5339\u914d\u53ea\u8981\u4ece\u539f\u6765\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u901a\u8fc7\u4e0a\u8ff0\u4e24\u4e2a\u4f18\u5316\uff0c\u7a0b\u5e8f\u7684\u6548\u7387\u6709\u4e86\u5f88\u5927\u7684\u63d0\u9ad8\u3002\n\n\u6027\u80fd\u5206\u6790\uff082\uff09\uff1a\n\n\u867d\u7136\u901a\u8fc7\u4e0a\u8ff0\u4e24\u4e2a\u4f18\u5316\uff0c\u7a0b\u5e8f\u7684\u6548\u7387\u8f83\u539f\u6765\u7684\u641c\u7d22\u6709\u4e86\u5f88\u5927\u7684\u63d0\u9ad8\u300210\u4e2a\u6d4b\n\n\u8bd5\u6570\u636e\u4e2d\u67098\u4e2a\u53ef\u4ee5\u5728\u65f6\u9650\u5185\u51fa\u89e3\uff0c\u53e6\u59162\u4e2a\u5982\u679c\u5361\u65f6\uff0c\u67091\u4e2a\u4e5f\u53ef\u4ee5\u5f97\u5230\u6700\u4f18\u89e3\u3002\n\n\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a\n\n\u4f18\u5316\u4e8c\u867d\u7136\u6392\u9664\u4e86\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u5212\u5206\uff0c\u4f46\u662f\u5728\u5224\u65ad\u65f6\u6d6a\u8d39\u4e86\u4e0d\u5c11\u65f6\u95f4\u3002\n\n\u56e0\u6b64\uff0c\u5728\u679a\u4e3e\u5212\u5206\u957f\u5ea6\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u524d\u7684\u5212\u5206\u548c\u5339\u914d\u60c5\u51b5\uff08\u88ab\u5339\u914d\u7684\u8fb9\uff09\uff0c\n\n\u7528O(n2)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u8ba1\u7b97\u51fa\u4e0b\u4e00\u4e2a\u5212\u5206\u7684\u6700\u5927\u957f\u5ea6maxL\uff0c\u663e\u7136\n\n\u4e0b\u4e00\u4e2a\u5212\u5206\u7684\u957f\u5ea6\u5728[1\uff0cmaxL]\u90fd\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u53ef\u884c\u7684\u5339\u914d\u3002\u8fd9\u6837\u65e2\u8282\u7701\u4e86\u5224\u65ad\n\n\u7684\u65f6\u95f4\uff0c\u53c8\u53ef\u4ee5\u4f7f\u6bcf\u6b21\u5212\u5206\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u679a\u4e3e\uff0c\u4f7f\u7a0b\u5e8f\u5c3d\u5feb\u903c\u8fd1\u6700\u4f18\u89e3\uff0c\u540c\u65f6\u589e\n\n\u5f3a\u4e86\u526a\u679d\u6761\u4ef6\u4e00\u7684\u6548\u679c\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u7684\u5b9e\u73b0\uff0c\u9996\u5148\u9700\u8981\u6c42MaxT\u3002\n\nMaxT=\u70b8\u5f39i\uff0c\u4eceS\u5f00\u59cb\u70b8\uff0c\u53ef\u4ee5\u70b8\u5230\u7684\u6700\u5927\u7f16\u53f7\u3002\n\n\u5982\u679c\uff0c\u70b8\u5f39i\u70b8\u4e0d\u5230S\uff0c\u5219MaxT=S-1\u3002\n\n\u6c42MaxT\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u89e3\u51b3\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\nMaxT= \u70b8\u5f39i\u70b8\u4e0d\u5230S S-1\n\n\u70b8\u5f39i\u70b8\u5f97\u5230S MaxT[i]\n\nMaxT[i][m+1]=m\n\n\u6c42MaxT\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N2)\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff0c\u8003\u8651\u4e8c\u5206\u56fe\u53f3\u8fb9\u7684n\u4e2a\u7ed3\u70b9\uff08n\u9897\u70b8\u5f39\uff09\uff0c\u5982\u679c\u7ed3\u70b9i\u6ca1\u6709\u5339\u914d\uff0c\n\ni\u88ab\u8ba4\u4e3a\u53ef\u4ee5\u4f7f\u7528\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u5339\u914d\u7684\u7ed3\u70b9i\uff0c\u5982\u679c\u4ece\u4efb\u4f55\u4e00\u4e2a\u6ca1\u6709\u5339\u914d\u7684\u7ed3\u70b9\n\n\u51fa\u53d1\u5b58\u5728\u4e00\u6761\u5230\u8fbei\uff0c\u800c\u4e14i\u4e3a\u5916\u70b9\u7684\u4ea4\u9519\u8def\uff0ci\u4e5f\u88ab\u8ba4\u4e3a\u53ef\u4ee5\u4f7f\u7528\u3002\n\n\u8ba1\u7b97\u6240\u6709\u4ece\u6ca1\u6709\u5339\u914d\u70b9\u51fa\u53d1\u7684\u4ea4\u9519\u8def\uff08\u6ca1\u6709\u5339\u914d\u70b9i\u51fa\u53d1\u7684\u4ea4\u9519\u8def\u6ca1\u6709\u88ab\u5339\n\n\u914d\u70b9i\u4e00\u5b9a\u4e3a\u5916\u70b9\uff09\u6240\u80fd\u5230\u8fbe\u7684\u5339\u914d\u7684\u7ed3\u70b9\uff0c\u53ea\u8981\u4ece\u6bcf\u4e00\u4e2a\u6ca1\u6709\u5339\u914d\u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\n\n\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u53ea\u8981O(N2)\u7684\u65f6\u95f4\u3002\u6ce8\u610f\u5224\u65ad\u91cd\u590d\uff08\u5982\u679c\u4e00\u4e2a\u5df2\u7ecf\u5339\u914d\u7684\u7ed3\u70b9\u5df2\n\n\u7ecf\u88ab\u786e\u5b9a\u4e3a\u53ef\u4ee5\u4f7f\u7528\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u5bf9\u5b83\u518d\u6269\u5c55\u4e00\u6b21\uff0c\u56e0\u4e3a\u5f53\u628a\u8fd9\u4e2a\u5df2\u7ecf\u5339\u914d\u7684\u7ed3\n\n\u70b9\u786e\u5b9a\u4e3a\u53ef\u4ee5\u4f7f\u7528\u7684\u7ed3\u70b9\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u4ece\u8fd9\u4e2a\u7ed3\u70b9\u6269\u5c55\u8fc7\uff0c\u5982\u679c\u518d\u6269\u5c55\u5fc5\u5c06\u4ea7\u751f\n\n\u65e0\u8c13\u7684\u91cd\u590d\uff09\n\n\u6240\u4ee5MaxL=Max(MaxT | i\u53ef\u4ee5\u4f7f\u7528)\uff1b\n\n\u6027\u80fd\u5206\u6790\uff083\uff09\uff1a\n\n\u901a\u8fc7\u4ee5\u4e0a\u7684\u4f18\u5316\uff0c\u6240\u6709\u6570\u636e\u90fd\u662f\u77ac\u95f4\u51fa\u89e3\uff0c\u5e76\u4e14\u6240\u6709\u7ed3\u679c\u90fd\u662f\u6700\u4f18\u89e3\u3002\n\n\u751a\u81f3\u5bf9n=200\u7684\u968f\u673a\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5728\u77ac\u95f4\u51fa\u89e3\uff0c\u53ef\u89c1\u7a0b\u5e8f\u7684\u6548\u7387\u6709\u4e86\u5f88\u5927\u7684\n\n\u63d0\u9ad8\u3002\n\n\u7cbe\u76ca\u6c42\u7cbe\uff1a\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e24\u4e2a\u4f18\u5316\uff0c\u4f46\u662f\u6709\u65f6\u6548\u679c\u4e0d\u597d\uff0c\u4f46\u4e5f\u503c\u5f97\u4e00\u63d0\u3002\n\n\u4f18\u5316\u4e09\uff1a\u5206\u652f\u5b9a\u754c\u3002\u8fd9\u6837\u53ef\u4ee5\u589e\u5f3a\u526a\u679d\u6761\u4ef6\u4e00\u7684\u6548\u679c\uff0c\u4f46\u662f\u5f53\u6700\u4f18\u89e3\u4e0e\n\nDist[1]\u76f8\u5dee\u6bd4\u8f83\u8fdc\u7684\u65f6\u5019\uff0c\u4f1a\u6d6a\u8d39\u4e00\u5b9a\u7684\u65f6\u95f4\u3002\n\n\u4f18\u5316\u56db\uff1a\u4f18\u5316\u4e00\u4e2dDist[i]\u7684\u503c\u6709\u65f6\u5e76\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u901a\u8fc7\u6d4b\u8bd5\uff0c\u53d1\u73b0\u5982\u679c\n\nDist[i]\u7684\u503c\u4e0e\u6700\u4f18\u503c\u76f8\u5dee1\uff0c\u7279\u522b\u662f\u5f53i \u5c0f\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u7684\u901f\u5ea6\u90fd\u4f1a\u6709\u660e\u663e\u7684\n\n\u5f71\u54cd\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u901a\u8fc7\u540c\u6837\u7684\u641c\u7d22\u6765\u8ba1\u7b97Dist[i]\uff0c\uff08\u672c\u9898\u7684\u7b54\u6848\u5c31\u662fDist[1]\uff09\u3002\n\n\u8fd9\u6837\u505a\u53ef\u4ee5\u589e\u5f3a\u526a\u679d\u6761\u4ef6\u4e00\u7684\u6548\u679c\uff0c\u4f46\u662f\u540c\u65f6\u5bf9\u6bcf\u4e2ai\u90fd\u8981\u641c\u7d22\u4e5f\u6d6a\u8d39\u4e86\u4e00\u5b9a\u7684\n\n\u65f6\u95f4\u3002\n\n\u7a0b\u5e8f\u7ed3\u679c\u6bd4\u8f83\uff1a\n\n1 2 3 4 5 6 7 8 9 10\n\n\u6700\u7b80\u5355\u7684\n\n\u641c\u7d22\n0.00 0.00 0.50\n\nTime\nOver\n0.65\nTime\nOver\nTime\nOver\nTime\nOver\nTime\nOver\nTime\nOver\n\u4f18\u5316\u7684\u641c\n\n\u7d22\n0.01 0.01 0.10\n\nTime\nOver\n0.50 0.80\n\nTime\nOver\n0.55 0.30 0.80\n\n\u8fdb\u4e00\u6b65\u4f18\n\n\u5316\u7684\u641c\u7d22\n\n0.01 0.01 0.02 0.03 0.00 0.02 0.02 0.01 0.02 0.02\n\n\u6b64\u641c\u7d22\u65b9\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u7528\u4e24\u4e2a\u6548\u679c\u5f88\u597d\u7684\u53ef\u884c\u6027\u4f18\u5316\uff1a\n\n(1)\u63d0\u524d\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6210\u529f\uff0c\u907f\u514d\u591a\u4f59\u7684\u641c\u7d22\u3002\n\n(2)\u6bcf\u6b21\u5224\u65ad\u5c3d\u91cf\u591a\u5229\u7528\u4ee5\u524d\u7684\u5224\u65ad\u7ed3\u679c\u3002\n\n\u697c\u6559\u4e3b\u7684\u8bba\u6587\u539f\u6587\n\n  \n  \n  \n  \n```cpp\nvar  \n  i,ans,n,m,d:longint;  \n  x1,x2,y1,y2:array[0..105] of longint;  \n  can:array[0..105,0..105,0..105] of boolean;  \n  res,from,reach,dis:array[0..105] of longint;  \n  ta,tb,max:array[0..105,0..105] of longint;  \n  v:Array[0..105] of boolean;  \n  q:array[0..105*105] of longint;  \n  g,bobo:array[0..105,0..105] of boolean;  \nprocedure init;  \nvar i,j,k,t:longint;  \nbegin  \n  readln(m,n,d);  \n  for i:=1 to m do readln(x1[i],y1[i]);  \n  for i:=1 to n do readln(x2[i],y2[i]);  \n  for i:=1 to m do  \n   for j:=1 to n do  \n    if d*d>=sqr(x1[i]-x2[j])+sqr(y1[i]-y2[j]) then  \n     bobo[i,j]:=true;  \n  for i:=1 to m do  \n   begin  \n     for j:=1 to n do can[i,i,j]:=bobo[i,j];  \n     for j:=i+1 to m do  \n      for k:=1 to n do  \n       can[i,j,k]:=can[i,j-1,k]and bobo[j,k];  \n     for j:=1 to n do  \n     begin  \n      max[i,j]:=i-1;  \n      for k:=i to m do  \n      if can[i,k,j] then max[i,j]:=k;  \n     end;  \n   end;  \n  dis[m+1]:=0;  \n  for i:=m downto 1 do  \n   begin  \n   t:=i-1;  \n   for j:=1 to n do  \n    if max[i,j]>t then t:=max[i,j];  \n   dis[i]:=dis[t+1]+1;  \n   end;  \nend;  \nfunction change(x:longint):boolean;//\u5339\u914d\u4e0b  \nvar i:longint;  \nbegin  \n for i:=1 to n do if (not v[i] )and(g[x,i])then  \n begin  \n   v[i]:=true;  \n   if (from[i]=0)or(change(from[i])) then  \n   begin  \n     from[i]:=x;  \n     reach[x]:=i;  \n     exit(true);  \n   end;  \n end;  \n exit(false);  \nend;  \nprocedure dfs(used,s:longint);  \nvar x,maxl,i,h,l:longint;  \nbegin  \n  if  used+dis[s]>=ans then exit;  \n  if s=m+1 then  \n  begin  \n   ans:=used;  \n   res:=reach;  \n  end;  \n  fillchar(v,sizeof(v),false);  \n  maxl:=s-1;  \n  l:=0;  \n  for i:=1 to n do if from[i]=0 then  \n  begin  \n   v[i]:=true;inc(l);q[l]:=i;  \n  end;  \n  h:=0;  \n  repeat//bfs\u6c42\u51fa\u4e0b\u4e00\u6bb5\u6700\u8fdc\u5230\u54ea\u91cc  \n    inc(h);  \n    x:=q[h];  \n    if max[s,x]>maxl then maxl:=max[s,x];  \n    for i:=1 to used do  \n     if (g[i,x]) and(v[reach[i]]=false) then  \n     begin  \n      inc(l);  \n      q[l]:=reach[i];  \n      v[q[l]]:=true;  \n     end;  \n  until h>=l;  \n  if maxl=s-1 then exit;  \n  inc(used);  \n  ta[s]:=reach;tb[s]:=from;  \n  g[used]:=can[s,maxl];  \n  fillchar(v,sizeof(v),false);  \n  change(used);  \n  for i:=maxl downto s do  \n  begin  \n   g[used]:=can[s,i];  \n   dfs(used,i+1);  \n  end;  \n  reach:=ta[s];from:=tb[s];  \nend;  \nbegin  \n init;  \n ans:=35535;  \n dfs(0,1);  \n writeln(ans);  \n //for i:=1 to ans do  write(res[i],' ');  \nend.\n```",
        "postTime": 1383108884,
        "uid": 1443,
        "name": "21002tyj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1526 \u3010\u667a\u7834\u8fde\u73af\u9635\u3011"
    },
    {
        "content": "\u5148\u53bb\u770b\u4e86\u4e00\u4e0b\u697c\u5929\u57ce\u548c\u6731\u6cfd\u56ed\u4e24\u4f4d\u795e\u4ed9\u7684\u8bba\u6587\n\n\u88ab\u5404\u79cd\u9a9a\u64cd\u4f5c\u540a\u6253\u5f97\u6000\u7591\u4eba\u751f\n\n\u9996\u5148\u6bcf\u679a\u70b8\u5f39\u70b8\u6bc1\u7684\u6b66\u5668\u5e94\u8be5\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u6b66\u5668\u5212\u5206\u6210$ans$\u6bb5\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u6b66\u5668\uff0c\u90fd\u7528\u4e00\u679a\u70b8\u5f39\u53bb\u70b8\u6bc1\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u6837\u6c42\u51fa\u6700\u5c0f\u7684$ans$\n\n\u76f4\u63a5\u641c\u7d22\u80af\u5b9a\u8d85\u65f6\uff0c\u8003\u8651\u526a\u679d\u4f18\u5316\n\n\u628a\u6bcf\u6bb5\u6b66\u5668\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u6bcf\u679a\u70b8\u5f39\u770b\u6210\u4e00\u4e2a\u70b9\n\n\u641c\u7d22\u7684\u65f6\u5019\u7528\u4e8c\u5206\u56fe\u4f18\u5316\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\nusing namespace std;\nint m,n,k,ans,u[101],v[101],x[101],y[101],f[101],vis[101],step[101],ok[101][101],to[101][101];\ninline bool check (int a,int b)\n{ return (u[a]-x[b])*(u[a]-x[b])+(v[a]-y[b])*(v[a]-y[b])<=k*k; }\ninline bool find (int x) {\n\tfor(register int i=1;i<=n;++i)\n\t    if(!vis[i]&&ok[i][x]) {\n\t    \tvis[i]=true;\n\t    \tif(!f[i]||find(f[i])) {\n\t    \t\tf[i]=x;\n\t    \t\treturn true;\n\t\t\t}\n\t\t}\n\treturn false;\n}\ninline int read () {\n\tchar ch=getchar(); int num=0;\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) num=(num<<3)+(num<<1)+(ch^'0'),ch=getchar();\n\treturn num;\n}\ninline void dfs (int now,int sum) {\n\tif(ans<=sum+step[now]) return ;\n\tif(now>m) { ans=sum; return ; }\n\tint g[101]; memcpy(g,f,sizeof(g));\n\tfor(register int i=now;i<=m;++i) {\n\t\tfor(register int j=1;j<=n;++j)\n\t\t    if(check(j,i)&&to[j][now]>=i) ok[j][sum+1]=true;\n\t\tmemset(vis,false,sizeof(vis));\n\t\tif(find(sum+1)) dfs(i+1,sum+1);\n\t\tfor(register int j=1;j<=n;++j)\n\t\t    if(check(j,i)&&to[j][now]>=i) ok[j][sum+1]=false;\n\t\tmemcpy(f,g,sizeof(f));\n\t}\n}\nint main () {\n\tm=read(),n=read(),k=read(); ans=n;\n\tfor(register int i=1;i<=m;++i) x[i]=read(),y[i]=read();\n\tfor(register int i=1;i<=n;++i) u[i]=read(),v[i]=read();\n\tfor(register int i=1;i<=n;++i)\n\t    for(register int j=m;j;--j)\n\t\t\tif(check(i,j)) to[i][j]=max(j,to[i][j+1]);\n\tfor(register int i=1;i<=m;++i) step[i]=INF;\n\tfor(register int i=m;i;--i)\n\t    for(register int j=1;j<=n;++j)\n\t        if(check(j,i)) step[i]=min(step[i],step[to[j][i]+1]+1);\n\tdfs(1,0); printf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564496008,
        "uid": 110198,
        "name": "RicardoShips",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1526 \u3010[NOI2003]\u667a\u7834\u8fde\u73af\u9635\u3011"
    }
]