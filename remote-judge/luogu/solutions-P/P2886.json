[
    {
        "content": "### \u4e00\u9053\u500d\u589efloyd\u7684\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u77e9\u9635\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u77e9\u9635\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7x\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u53e6\u5916\u4e00\u4e2a\u77e9\u9635\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7y\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u90a3\u4e48\u5c06\u8fd9\u4e24\u4e2a\u77e9\u9635\u5408\u5e76\u5c31\u4ee3\u8868\u6070\u597d\u7ecf\u8fc7x+y\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u600e\u4e48\u5408\u5e76\u5462\uff1f\u7ed3\u5408\u4e0b\u9762\u8fd9\u4e2a\u5f0f\u5b50\u7406\u89e3\u4e00\u4e0b\uff1a\n###  c[i][j]=min(c[i][j],a[i][k]+b[k][j]);\n\u5176\u4e2di,j,k\u5c31\u662ffloyd\u4e09\u5c42\u5faa\u73af\u91cc\u7684i,j,k ;\u800ca\u77e9\u9635\u662f\u7ecf\u8fc7x\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0cb\u77e9\u9635\u662f\u7ecf\u8fc7y\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u90a3\u4e48c\u77e9\u9635\u5c31\u662f\u6211\u4eec\u5f97\u5230\u7684\u7ecf\u8fc7x+y\u6761\u8fb9\u7684\u6700\u77ed\u8def\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u4f9d\u636e\u521d\u59cb\u8f93\u5165\u7684\u6570\u7ec4\uff08\u4e5f\u5c31\u662f\u53ea\u7ecf\u4e00\u6761\u8fb9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff09,\u8fd9\u6837\u8f6c\u79fbn-1\u6b21\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u4e86\uff1b\n### \u7136\u800c\n\u8fd9\u6837\u663e\u7136\u4f1a\u70b8\u554a\uff01\u90a3\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u7c7b\u4f3c\u5feb\u901f\u5e42\u7684\u64cd\u4f5c\u53bb\u5b9e\u73b0\u3002\n\n\u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u7f16\u53f7\u79bb\u6563\u5316\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint num[1000005];\nint n,s,t,e,tol;\nstruct map\n{\n    int a[500][500];\n    map operator * (const map &x) const //\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4e00\u4f1a\u513f\u8981\u7528\n    {\n        map c;\n        memset(c.a,0x3f3f3f3f,sizeof(c.a));//\u53d6min\uff0c\u663e\u7136\u7f6e\u5927\u6570\n        for(int k=1;k<=tol;k++)\n            for(int i=1;i<=tol;i++)\n                for(int j=1;j<=tol;j++)\n                    c.a[i][j]=min(c.a[i][j],a[i][k]+x.a[k][j]);\n        return c;\t\t\n    }\n}dis,ans;\nvoid init()\n{\n    memset(dis.a,0x3f3f3f3f,sizeof(dis.a));\n    int x,y,z;\n    cin>>n>>t>>s>>e;\n    for(int i=1;i<=t;i++)\n    {\n        scanf(\"%d %d %d\",&x,&y,&z);\n        if(!num[y])  //\u8fd9\u91cc\u505a\u4e00\u4e2a\u79bb\u6563\u5316\n            num[y]=++tol;\n        if(!num[z])\n            num[z]=++tol;\n        dis.a[num[y]][num[z]]=dis.a[num[z]][num[y]]=x;\n    }\n}\nvoid doit() //\u5feb\u901f\u5e42\n{\n    n--;\n    ans=dis;\n    while(n)\n    {\n        if(n&1)\n            ans=ans*dis;\n        dis=dis*dis;\n        n>>=1;\n    }\n}\nint main()\n{\n    init();\n    doit();\n    cout<<ans.a[num[s]][num[e]];\n}\n```",
        "postTime": 1521532498,
        "uid": 59026,
        "name": "player",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "# \u6d45\u8c08\u77e9\u9635\u52a0\u901f\u4f18\u5316\u52a8\u6001\u89c4\u5212\n~~\u672c\u6587\u53ea\u9002\u7528\u4e8eOI\u5b66\u4e60~~\n## \u77e9\u9635\u4e58\u6cd5\n\n\u7ed9\u5b9a\u4e24\u4e2a\u77e9\u9635\n\n$A=\\begin{bmatrix}1 &2 &3  \\\\ 4& 0&1\\end{bmatrix}$\n\n$B=\\begin{bmatrix}1 &2 \\\\ 2 &0 \\\\ 3 &1\\end{bmatrix}$\n\n\u90a3\u4e48,$A \\times B=C$\n\n$C=\\begin{bmatrix}1\\times1+2\\times2+3\\times3 & 1\\times 2 +2\\times0+3\\times1 \\\\ 4\\times1+0\\times 2 + 1\\times3 & 4\\times2+0\\times 0 +1\\times 1\\end{bmatrix}$\n \n\u7528\u6570\u5b66\u516c\u5f0f\u8868\u8ff0\u90a3\u5c31\u662f\uff1a\n$C_{ij}=\\sum_{k=1}^{n}A[i][k]*B[k][j]$\n\n\u4e00\u822c\u6765\u8bf4\uff0c$A$\u7684\u884c\u6570$B$\u7684\u5217\u6570\uff0c$B$\u7684\u884c\u6570\u4e5f\u7b49\u4e8e$A$\u7684\u5217\u6570\uff0c\u5f53\u4e24\u4e2a\u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u77e9\u9635\u76f8\u4e58\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7**\u8865\u96f6**\u7684\u65b9\u5f0f\u4f7f\u4ed6\u4eec\u6ee1\u8db3\u3002\n> \u7531\u4e8e\u77e9\u9635\u4e58\u6cd5\u6ee1\u8db3\u5206\u914d\u7387\uff0c\u7ed3\u5408\u5f8b\uff08**\u4f46\u662f\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff01**\uff09,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7**\u77e9\u9635\u5feb\u901f\u5e42**\u7684\u65b9\u6cd5\u6765\u52a0\u901f\n\n$tips:$\u77e9\u9635\u52a0\u901f\u5229\u7528\u7684\u662f\u77e9\u9635\u4e58\u6cd5\u6ee1\u8db3\u7ed3\u5408\u5f8b\n\n---\n## Floyd\n$Floyd$\u662f\u4e00\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u70b9\u6570\u8f83\u5c11\u7684\u56fe\n\n$Floyd$\u7684\u672c\u8d28\u662f**\u52a8\u6001\u89c4\u5212**,\u5b83\u7684\u72b6\u6001\u5b9a\u4e49\u4ee5\u53ca\u8f6c\u79fb\uff1a\n> \u8bbe$f[i][j]$\u4e3a$i$\u5230$j$\u7684\u6700\u77ed\u8ddd\u79bb\n\n> $f[i][j]=min(f[i][j],f[i][k]+f[k][j])$\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tf[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n``` \n\u6211\u4eec\u9b54\u6539\u4e00\u4e0b\uff1a\n```cpp\n\tint C[N][N];\n\tmemset(C,127,sizeof C); // inf\n\tfor(int k=1;k<=n;j++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tC[i][j]=min(C[i][j],A[i][k]+A[k][j]);\n\t}\n\tmemcpy(A,C,sizeof C);\t\n```\n$Q$:\u8fd9\u4e24\u79cd\u5199\u6cd5\u7b49\u4ef7\u5417\uff1f\n\n$A$:\u5f53\u7136\u4e0d\u662f\uff0cfloyd\u662f\u52a8\u6001\u89c4\u5212```f[i][k]+f[k][j]```\u662f\u5df2\u77e5\u7684\u6700\u4f18\u72b6\u6001\u7684\u8f6c\u79fb\uff0c\u4f46\u662f\u7b2c\u4e8c\u79cd\u5374\u662f\u4e24\u4e2a\u521d\u59cb\u77e9\u9635\u7b80\u5355\u7684\u76f8\u4e58\u3002\n\n$tips:$\u8fd9\u91cc\u7684\u77e9\u9635\u4e58\u6cd5\u7531\u539f\u6765\u7684$C[i][j]=A[i][k]+B[k][i]$,\u53d8\u6210\u4e86$C[i][j]=\\color{red} {min(C[i][j],A[i][k]+A[k][j])}$\n\u4e4b\u6240\u4ee5\u53ef\u4ee5\u52a0$\\color{red} min$\uff0c\u662f\u56e0\u4e3a$min$\u4e5f\u6ee1\u8db3\u7ed3\u5408\u5f8b:$min(min(a,b),c)=min(a,b,c)=min(a,min(b,c))$\n\n\n\u90a3\u4e48\u5b83\u4ee3\u8868\u7684\u610f\u4e49\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\n\u5148\u653e\u51fa[\u4f8b\u9898](https://www.luogu.org/problem/P2886)\n\n\u8ba9\u6211\u4eec\u505a\u4e0b\u5217\u8fd9\u4e2a\u5b9e\u9a8c\uff1a\n\u5b9e\u9a8c\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint A[1001][1001];\nint C[1001][1001];\nsigned main()\n{\n\tfreopen(\"data.in\",\"r\",stdin);\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tmemset(A,50,sizeof A);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%d %d %d\", &a,&b,&c);\n\t\tA[a][b]=A[b][a]=c;\n\t\tA[i][i]=0;\n\t}\n\tint tmp=1;// \u770b\u8fd9\u91cc\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\twhile(tmp--)\n\t{\n\t\tmemset(C,127 , sizeof C);\n\n\t\tfor(int k=1;k<=n;k++)\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tC[i][j]=min(C[i][j],A[i][k]+A[k][j]);\n\t\t}\n\t\tmemcpy(A,C,sizeof C);\t\n\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(A[i][j]<100)\n\t\t\t\t\tprintf(\"%d \",A[i][j]);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tprintf(\"X \");\n\t\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n}\n```\n\u7ed9\u51fa\u4e00\u6761\u94fe\uff1a\n\n$1-2-3->4-5\\dots-10$\n\n\u8f93\u5165\u7684\u90bb\u63a5\u77e9\u9635$A$\uff0c\u53ef\u4ee5\u7406\u89e3\u6210**\u7ecf\u8fc7\u4e00\u6761\u8fb9\u7684\u6700\u77ed\u8def**\uff0c\u6211\u4eec\u8bb0\u505a$A^{1}$.\n\n$C=A\\times A, C= A^{2}$\uff0c\u7136\u540e\u628a$A$\u8d4b\u503c\u6210\u4e3a$C$\uff0c\u4e5f\u5c31\u662f$A^{2}$\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53$tmp=x$\u65f6\uff0c$C$\u4e3a$A^{2^{x}}$\n\n> \u4e0b\u9762\u662f\u6211\u8bb0\u5f55\u7684\u5b9e\u9a8c\u6570\u636e:\n\n| tmp | \u90bb\u63a5\u77e9\u9635\u7b2c\u4e00\u884c\uff08\u4e5f\u5c31\u662f\u70b91\u5230\u5404\u4e2a\u70b9\u8ddd\u79bb\uff09$X$\u4e3a\u4e0d\u8fde\u901a|\n|---  | -------------------------------------------|\n| 1   | 0 1 2 X X X X X X X |\n| 2   | 0 1 2 3 4 X X X X X |\n| 3\t  | 0 1 2 3 4 5 6 7 8 X |\n-----\n\n\u5bb9\u6613\u53d1\u73b0\uff0c${A^{x}}$\u662f\u8868\u793a$A$\u7ecf\u8fc7\u4e86$x$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\n\u4e8e\u662f\u4e0a\u8fb9\u7684\u4f8b\u9898\u5c31\u80fd\u901a\u8fc7\u77e9\u9635\u5feb\u901f\u5e42\u8f7b\u677e\u89e3\u51b3\uff01\n\n",
        "postTime": 1564209876,
        "uid": 81372,
        "name": "guodong",
        "ccfLevel": 0,
        "title": "\u6d45\u8c08\u77e9\u9635\u52a0\u901f\u4f18\u5316\u52a8\u6001\u89c4\u5212"
    },
    {
        "content": "[\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/alan-zhao-2007/p/p2886-sol.html)\u3002\n\n\u672c\u6587\u53c2\u8003\u9ad8\u9038\u6db5\u7684\u300a\u90e8\u5206\u8d2a\u5fc3\u601d\u60f3\u5728\u4fe1\u606f\u5b66\u7ade\u8d5b\u4e2d\u7684\u5e94\u7528\u300b\u3002\n\n## \u4e00\u79cd $\\mathcal{O}(T^2)$ \u7684\u505a\u6cd5\n\n\u9996\u5148\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff1a\u5f53 $N$ \u5f88\u5927\u7684\u65f6\u5019\uff0c\u6700\u4f18\u7b56\u7565\u4e00\u5b9a\u662f\u5728\u67d0\u4e2a\u8fb9\u6743\u5f88\u5c0f\u7684\u8fb9\u4e0a\u7ed5\u5708\u3002\n\n---\n\n**\u6027\u8d28 1**\uff1a\u53ea\u6709\u53ef\u80fd\u5728\u8def\u5f84\u4e0a\u4e00\u6761\u6700\u77ed\u7684\u8fb9\u4e0a\u8fde\u7eed\u8d70\u591a\u6b21\u3002\n\n**\u8bc1\u660e**\uff1a\u5047\u5982\u5728\u5176\u4ed6\u8fb9\u4e0a\u8fde\u7eed\u8d70\u4e86\u591a\u6b21\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5c06\u8def\u5f84\u4e0a\u6765\u56de\u8d70\u7684\u4e00\u5bf9\u8fb9 $(u\\to v,v\\to u)$ \u5220\u53bb\uff0c\u6362\u6210\u5728\u6700\u77ed\u7684\u8fb9\u4e0a\u6765\u56de\u8d70\uff0c\u8fd9\u6837\u4e00\u5b9a\u4e0d\u52a3\u3002\n\n---\n\n**\u6027\u8d28 2**\uff1a\u53ea\u6709\u8def\u5f84\u4e0a\u7684\u4e00\u6761\u6700\u77ed\u8fb9\u53ef\u80fd\u88ab\u5728\u540c\u4e00\u65b9\u5411\u7ecf\u8fc7\u4e09\u6b21\u53ca\u4ee5\u4e0a\uff0c\u8fd9\u91cc\u201c\u7ecf\u8fc7\u201d\u4e0d\u8981\u6c42\u8fde\u7eed\u3002\n\n**\u8bc1\u660e**\uff1a\u5047\u5982\u53e6\u5916\u4e00\u6761\u8fb9\u88ab\u5728\u540c\u4e00\u65b9\u5411\u7ecf\u8fc7\u4e09\u6b21\u53ca\u4ee5\u4e0a\uff0c\u90a3\u4e48\u8def\u5f84\u4e0a\u4e00\u5b9a\u6709\u5305\u542b\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u73af\u3002\u82e5\u8fd9\u4e24\u4e2a\u73af\u4e2d\u6709\u81f3\u5c11\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u5220\u53bb\u8fd9\u4e2a\u73af\u5e76\u5728\u6700\u77ed\u8fb9\u4e0a\u6765\u56de\u8d70\uff1b\u5426\u5219\uff0c\u4e24\u4e2a\u73af\u7684\u957f\u5ea6\u90fd\u662f\u5947\u6570\uff0c\u628a\u4e24\u4e2a\u73af\u90fd\u5220\u53bb\uff0c\u6362\u6210\u5728\u6700\u77ed\u8fb9\u4e0a\u6765\u56de\u8d70\u5373\u53ef\u3002\n\n---\n\n**\u7ed3\u8bba**\uff1a\u6700\u4f18\u65b9\u6848\u4e0b\uff0c\u53ea\u4f1a\u6709\u81f3\u591a\u4e00\u6761\u8fb9\u88ab\u7ecf\u8fc7 $>2$ \u6b21\u3002\n\n\u8bbe $f_{u,d}$ \u8868\u793a\u4ece $S$ \u5230 $u$\uff0c\u7ecf\u8fc7\u7684\u8fb9\u6570\u4e3a $d$ \u7684\u6700\u77ed\u8def\u3002\u7531\u4e8e\u6bcf\u6761\u8fb9\u90fd\u88ab\u7ecf\u8fc7 $\\le 2$ \u6b21\uff0c\u53ea\u9700\u7b97\u51fa $d\\le 2T$ \u7684 $f$ \u5373\u53ef\u3002\u4e8e\u662f\u53ef\u4ee5 $\\mathcal{O}(T^2)$ \u9884\u5904\u7406\u3002\u540c\u7406\uff0c\u9884\u5904\u7406 $g_{u,d}$ \u8868\u793a\u4ece $E$ \u7684\u3002\n\n\u679a\u4e3e\u6bcf\u6761\u8fb9\u4f5c\u4e3a\u90a3\u6761\u88ab\u591a\u6b21\u7ecf\u8fc7\u7684\u8fb9\uff0c\u5e76 $\\mathcal{O}(T)$ \u7b97\u51fa\u6700\u5c0f\u503c\u5373\u53ef\u3002\u5177\u4f53\u8ba1\u7b97\u65b9\u5f0f\u53ef\u89c1\u4ee3\u7801\u4e2d\u7684 `Calc` \u51fd\u6570\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n#define For(Ti,Ta,Tb) for(int Ti=(Ta);Ti<=(Tb);++Ti)\n#define Dec(Ti,Ta,Tb) for(int Ti=(Ta);Ti>=(Tb);--Ti)\ntypedef long long ll;\nconst int N=1005,M=105,Inf=0x3f3f3f3f;\nint n;\nint Get(int u){\n\tstatic int num[N]{};\n\tif(!num[u]) return num[u]=++n;\n\treturn num[u];\n}\nint t,m,S,T,f[M][M<<1],g[M][M<<1];\nstruct Edge{int u,v,w;}edge[M];\nint Calc(int u,int len){\n\tint res=Inf;\n\tFor(c,0,1){\n\t\tint mn=Inf,k=(t+c)%2-2;\n\t\tfor(int j=m*2+c;j>=0;j-=2){\n\t\t\twhile(k<m*2&&t-j-k>1){\n\t\t\t\tk+=2,mn+=2*len;\n\t\t\t\tmn=min(mn,g[u][k]);\n\t\t\t}\n\t\t\tif(mn>=Inf||f[u][j]>=Inf) continue;\n\t\t\tres=min(res,mn+f[u][j]+(t-j-k)*len);\n\t\t}\n\t}\n\treturn res;\n}\nint main(){\n\tcin>>t>>m>>S>>T;\n\tS=Get(S),T=Get(T);\n\tFor(i,1,m){\n\t\tcin>>edge[i].w>>edge[i].u>>edge[i].v;\n\t\tedge[i].u=Get(edge[i].u),edge[i].v=Get(edge[i].v);\n\t}\n\tmemset(f,0x3f,sizeof f),memset(g,0x3f,sizeof g);\n\tf[S][0]=0,g[T][0]=0;\n\tFor(i,1,m*2){\n\t\tFor(j,1,m){\n\t\t\tf[edge[j].u][i]=min(f[edge[j].u][i],f[edge[j].v][i-1]+edge[j].w);\n\t\t\tf[edge[j].v][i]=min(f[edge[j].v][i],f[edge[j].u][i-1]+edge[j].w);\n\t\t\tg[edge[j].u][i]=min(g[edge[j].u][i],g[edge[j].v][i-1]+edge[j].w);\n\t\t\tg[edge[j].v][i]=min(g[edge[j].v][i],g[edge[j].u][i-1]+edge[j].w);\n\t\t}\n\t}\n\tint ans=Inf;\n\tFor(i,1,m){\n\t\tans=min({ans,Calc(edge[i].u,edge[i].w),Calc(edge[i].v,edge[i].w)});\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1637245873,
        "uid": 225625,
        "name": "Alan_Zhao",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2886\u3010Cow Relays\u3011"
    },
    {
        "content": "\u5148\u5410\u69fd\u4e00\u4e0b\u9898\u76ee\u7684\u7ffb\u8bd1\uff0c\u6807\u9898\u4f30\u8ba1\u662f\u673a\u7ffb\uff0c\u9898\u5e72\u5185\u5bb9\u8fc7\u4e8e\u7b80\u6d01\uff0c\u4e0d\u8fc7\u65e0\u6240\u8c13\u4e86\u3002\n\n\u5927\u4f6c\u4eec\u90fd\u8bf4\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u8fd9\u91cc\u6211\u60f3\u8865\u5145\u4e00\u4e9b\u3002\n\n\u8bfb\u5b8c\u9898\u540e\uff0c\u770b\u5230\u6570\u636e\u89c4\u6a21\u70b9\u6570n<=101\uff08\u6700\u591a100\u6761\u8fb9\u7684\u8fde\u901a\u56fe\uff09\uff0c\u53c8\u662f\u6700\u77ed\u8def\uff0c\u5e94\u8be5\u80fd\u611f\u89c9\u8fd9\u662f\u7528Floyd\n\n\u4f46\u662f\uff01\u4f60\u8ddf\u6211\u8bf4\u8981\u7ecf\u8fc7k\u6761\u8fb9(k<=1e6) (\u256f\u2035\u25a1\u2032)\u256f\ufe35\u253b\u2501\u253b   \u8fd9\u5c31\u4e0d\u662f\u666e\u901a\u7684\u6700\u77ed\u8def\u4e86\n\n\u6ca1\u5b66\u8fc7\u6570\u5b66\u4e2d \u56fe\u7684\u77e9\u9635\u8868\u793a \u53ef\u80fd\u4f1a\u60f3\u5230\u66b4\u529bspfa+dp\uff0c\u4e0d\u8fc7\u53ea\u80fd\u8fc7\u4e00\u534a\u70b9\n\n### \u9898\u5916\u8bdd\n\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u672c\u8d28\u662f\u77e9\u9635\uff08\u770b\u540d\u5b57\u5c31\u77e5\u9053\u4e86\uff0c\u6ca1\u5b66\u8fc7\u77e9\u9635\u7684\u5de6\u8f6c\u9009\u4fee4-2\uff09\n\n\u5b83\u6709\u4e00\u79cd\u6700\u57fa\u672c\u7684\u8868\u793a\u5185\u5bb9\uff1a\u4e24\u70b9\u4e4b\u95f4\u7ecf\u8fc7k\u6761\u8fb9\u7684\u8def\u5f84\u6570\u3002\u539f\u59cb\u77e9\u9635\u5c31\u662f\u4e24\u70b9\u95f4\u7ecf\u8fc71\u6761\u8fb9\u7684\u8def\u5f84\u6570\u3002\n\n\u8bbe\u77e9\u9635$A$\u8868\u793a\u7ecf\u8fc7$k1$\u6761\u8fb9\u7684\u8def\u5f84\u6570\uff0c$B$\u8868\u793a\u7ecf\u8fc7$k2$\u6761\u8fb9\u7684\u8def\u5f84\u6570\uff0c\u5219$A*B$\u8868\u793a\u7ecf\u8fc7$(k1+k2)$\u6761\u8fb9\u7684\u8def\u5f84\u6570\u3002\n\n\u76f4\u63a5\u6839\u636e\u5b9a\u4e49 $C_{ij}=\\sum_{k=1}^n (A_{ik}*B_{kj})$  \n\n\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u7528\u7684\u5c31\u662f\u4e58\u6cd5\u539f\u7406\u548c\u52a0\u6cd5\u539f\u7406\u3002\u8fd9\u4e2a\u8fd0\u7b97\u672c\u8eab\u5c31\u662f\u6807\u6807\u51c6\u51c6\u7684\u77e9\u4e58\uff0ck\u5f88\u5927\u7684\u65f6\u5019\u7528\u5feb\u901f\u5e42\u5373\u53ef\u3002\n\n### \u56de\u5230\u672c\u9898\n\u5982\u679c\u6709\u4e0a\u8ff0\u77e5\u8bc6\u50a8\u5907\uff0c\u5e94\u8be5\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u8fd9\u9898\u80fd\u548c\u77e9\u4e58\u6302\u94a9\u3002\n\n\u9898\u76ee\u6c42\u7684\u4e0d\u662f\u8def\u5f84\u6570\uff0c\u800c\u662f\u8def\u5f84\u957f\u5ea6\uff0c\u90a3\u5c31\u76f4\u63a5\u8f6c\u5316\u5457\uff0c\u628a\u6c42\u548c\u6539\u6210\u6c42\u6700\u503c\n$$C_{ij}=\\min_{k=1}^n (A_{ik}+B_{kj})$$\n\n\u5982\u679c\u80fd\u7406\u89e3\u4e0a\u9762\u90a3\u4e2a\u516c\u5f0f\uff0c\u5e94\u8be5\u80fd\u89c9\u5f97\u8fd9\u4e2a\u6709\u9053\u7406\uff0c\u4e5f\u662f\u679a\u4e3e\u51fa\u4e86\u6240\u6709\u4e2d\u8f6c\u70b9\u3002\u4f9d\u65e7\u662f\u77e9\u4e58\uff0c\u4e0d\u8fc7\u4e58\u7684\u8fd0\u7b97\u6709\u6240\u6539\u53d8\u3002\n\n\u56e0\u4e3a\u5728\u6c42C\u7684\u8fc7\u7a0b\u4e2d\uff0cC\u7684\u6bcf\u9879\u4ec5\u4f5c\u4e3a\u5de6\u503c\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u4f1a\u5f97\u5230\u4e00\u4e2a\u5f88\u6df7\u4e71\u7684\u77e9\u9635\n\n\u8fd9\u4e2a\u516c\u5f0f\u548cFloyd\u5f88\u50cf\uff0c\u4f46\u4e0d\u540c\uff0cFloyd\u8981\u6c42k\u5faa\u73af\u5fc5\u987b\u5728\u6700\u5916\u5c42\uff0c\u4e14\u59cb\u7ec8\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u3002\u518d\u8bf4Floyd\u662f\u4e2adp\uff0c\u4e0d\u5173\u5fc3\u8def\u662f\u600e\u4e48\u8d70\u7684\u3002\u6240\u4ee5\u5176\u5b9e\u8ddfFloyd\u5173\u7cfb\u5e76\u4e0d\u5927\uff0c\u4e0d\u662f\u8bf4\u4f60\u60f3\u5230Floyd\u5c31\u80fd\u968f\u968f\u4fbf\u4fbf\u5f97\u51fa\u8fd9\u4e2a\u516c\u5f0f\u3002\n\n```cpp\n//\u548c\u901a\u5e38\u4f7f\u7528\u7684\u5b57\u6bcd\u7edf\u4e00\uff0c\u8fd9\u91cc\u7684\u53d8\u91cf\u540d\u4e0d\u540c\u4e8e\u9898\u76ee\u4e2d\u7684\n#include <cstdio>\n#include <cstring>\n#define MAXN 110\nusing namespace std;\nint n,m,k;\nstruct matrix {\n\tint dat[MAXN][MAXN];\n\tmatrix() {\n\t\tmemset(dat,0x3f,sizeof(dat));\n\t}\n\tinline int* operator [](const int i) { //\u66b4\u529b\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\t\treturn dat[i];\n\t}\n} g;\ninline int min(int a,int b) {\n\treturn a<b ? a : b;\n}\nmatrix operator *(matrix &a,matrix &b) { //\u4fee\u6539\u7684\u77e9\u4e58\n\tmatrix c;\n\tfor (register int i=1;i<=n;i++) {\n\t\tfor (register int j=1;j<=n;j++) {\n\t\t\tfor (register int k=1;k<=n;k++) {\n\t\t\t\tc[i][j]=min(c[i][j],a[i][k]+b[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn c;\n}\nmatrix mpow(matrix a,int n) { //\u8fd9\u5e94\u8be5\u7b97\u538b\u884c\u4e0d\u9519\u7684\u5feb\u901f\u5e42\u4e86\n\tmatrix ans=a;\n\tfor (n--;n;a=a*a,n>>=1) {\n\t\tif (n&1) ans=ans*a;\n\t}\n\treturn ans;\n}\nint main() {\n\tint s,t;\n\tscanf(\"%d%d%d%d\",&k,&m,&s,&t);\n\tint id[1010]={}; //\u79bb\u6563\n\tfor (int i=0;i<m;i++) {\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&w,&u,&v);\n\t\tu=id[u] ? id[u] : id[u]=++n;\n\t\tv=id[v] ? id[v] : id[v]=++n;\n\t\tg[u][v]=g[v][u]=min(g[u][v],w);\n\t}\n\ts=id[s];\n\tt=id[t];\n\tmatrix ans=mpow(g,k);\n\tprintf(\"%d\\n\",ans[s][t]);\n\treturn 0;\n}\n```",
        "postTime": 1531836963,
        "uid": 32771,
        "name": "\u554a\u561e\u561e\u561e\u561e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "## \u80e1\u626f\n\n\u53ef\u80fd\u5927\u4f6c\u4eec\u90fd\u4f1a\u8fd9\u9898\uff0c\u4f46\u662f\u5982\u679c\u6709\u5927\u4f6c\u4e0d\u77e5\u9053\uff08tan90\u00b0\uff09\u8fd9\u79cd\u5f88\u6709\u8da3\u53c8\u611f\u89c9\u5f88\u5b9e\u7528\u7684\u77e5\u8bc6\u70b9\u7684\u8bdd\u8bf4\u4e0d\u5b9a\u80fd\u5e2e\u70b9\u5fd9\u3002\n\n## \u7406\u89e3\n\n\\* \u770b\u5230\u8fd9\u4e2a\u8fb9\u7684\u6570\u91cf\uff0c\u4e00\u4e0b\u5b50\u2192Floyd\u3002\n\n\\* \u90a3\u4e48\u5bf9\u4e8eFloyd\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u70b9\u6269\u5c55\u662f\u4e0d\u662f\u5c31\u591a\u4e86\u4e00\u6761\u8fb9\u5462\uff1f\u6240\u4ee5\u4f1a\u60f3\u5230\u6269\u5c55k\u6b21\u70b9\u6765\u5f97\u5230\u6700\u77ed\u8def\u3002\u4f46\u662fk\u5f88\u5927\uff0c\u90a3\u4e48\u8003\u8651\u4e00\u4e0b\uff0c**\u5bf9\u4e8e\u4e00\u4e2a\u56fe\u7684\u90bb\u63a5\u77e9\u9635G\u800c\u8a00(\u521d\u59cb\u8fde\u901a1\uff0c\u4e0d\u8fde\u901a0)\u4e00\u5f00\u59cb\u7684\u8bfb\u5165\u540e\u5f97\u5230\u7684G\u5c31\u662f\u8868\u793a\u4e24\u70b9\u662f\u5426\u76f4\u63a5\u53ef\u8fbe\u3002**\n\n\\* \u6bcf\u4e00\u6b21\u9009\u62e9\u4e2d\u95f4\u6269\u5c55\u70b9k\u7684\u65f6\u5019\uff0c[i,k]+[k,j]\u662f\u4e0d\u662f\u5f88\u773c\u719f\uff1ffloyed\u7684\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u7c7b\u4f3c\u4e8e**\u77e9\u9635\u4e58\u6cd5**\u7684,\u53ea\u4e0d\u8fc7\u8981\u6c42\u677e\u5f1b\u800c\u5df2\u3002\u4f7f\u7528\u77e9\u4e58\uff0c\u5c31\u53ef\u4ee5\u6a21\u62df\u6269\u5c55\u70b9\u7684\u65f6\u5019\u8ba1\u7b97\u6b64\u65f6\u7ecf\u8fc7\u4e86n\u6761\u8fb9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002\n\n\\* \u4e00\u6b21floyed\u540e\u6240\u6c42\u7684\u77e9\u9635\u5c31\u662f\u5728i,j\u4e2d\u63d2\u5165\u4e00\u4e2a\u70b9\u7684k\u3002\u90a3\u4e48\u4e0d\u65ad\u63d2\u5165\uff0c\u5c31\u80fd\u4e00\u76f4\u63a8\u4e0b\u53bb\u63a8\u5230\u7ecf\u8fc7k\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u8981\u6ce8\u610f**\u6bcf\u6b21\u90fd\u4f7f\u7528\u65b0\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u524d\u7684\u6570\u7ec4\u8fdb\u884c\u66f4\u65b0**\uff0c\u624d\u80fd\u4fdd\u8bc1\uff0c\u6bcf\u6b21\u53ea\u7528\u5230\u4e86\u4e00\u4e2a\u70b9\u6765\u66f4\u65b0\u3002\n\n\\* \u7136\u540e\u52a0\u4e0a\u79bb\u6563\u5316\uff01\u52a0\u4e0a\u5feb\u901f\u5e42\uff01\u5feb\u4e50AC\uff08\u5176\u5b9e\u54b8\u9c7c\u60f3\u4e86\u534a\u5929\u624d\u60f3\u660e\u767d\n\n> \u5bf9\u4e8e\u8fd9\u9898\u601d\u60f3\u62d3\u5c55\u63a8\u8350\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b\u56fd\u5bb6\u961f\u8bba\u6587\u300a\u77e9\u9635\u4e58\u6cd5\u5728\u4fe1\u606f\u5b66\u4e2d\u7684\u5e94\u7528\u300b\uff0c\u5341\u5206\u5b9e\u7528\u3002   \n\u5bf9\u4e8e\u77e9\u9635\u548c\u9012\u63a8\u7684\u5173\u7cfb\u53ef\u4ee5\u53bb\u770b\u4e00\u4e9b\u76f8\u5173\u535a\u5ba2\n\n\u5bf9\u4e8e**\u57fa\u672c**\u7684\u77e9\u4e58\u64cd\u4f5c\u63a8\u8350\u535a\u5ba2http://blog.csdn.net/wust\\_zzwh/article/details/52058209\uff0c\u66f4\u6df1\u5c42\u6b21\u7684\u5c31\u641c\u4e00\u641c\u81ea\u5df1get\u5427\\_(:\u0437\u300d\u2220)\\_\n\n   \n\u4e0b\u9762\u4ee3\u7801\uff0c\u6ca1\u5565\u597d\u6ce8\u91ca\u7684\uff0c\u62fc\u97f3\u53d6\u540d\u89e3\u51b3\u4e00\u5207\u7591\u95ee\uff08\u3002\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define re register int\n#define fp(i,a,b) for(re i=a,I=b;i<=I;++i)\n#define min(a,b) a<b?a:b\ntypedef struct juzhen\n{\n    long long v[210][210];\n}M;\nM Gra,ans;\nint K,T,S,E;\nlong long n;\nlong long p[2010];\nM floyd(M a,M b)\n{\n    M c;\n    memset(c.v,0x3f,sizeof(c.v));\n    int i,j,k;\n    fp(k,1,n)fp(i,1,n)fp(j,1,n) c.v[i][j]=min(c.v[i][j],a.v[i][k]+b.v[k][j]);\n    return c;\n}\nvoid chen(int x)\n{\n    while(x)\n    {\n        if(x&1) ans=floyd(ans,Gra);\n        Gra=floyd(Gra,Gra);\n        x>>=1;\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&K,&T,&S,&E);\n    memset(Gra.v,0x3f,sizeof(Gra.v));\n    memset(ans.v,0x3f,sizeof(ans.v));\n    fp(i,1,T){\n        re x,y,z;\n        scanf(\"%d%d%d\",&z,&x,&y);\n        if(!p[x]) p[x]=++n;if(!p[y]) p[y]=++n;\n        Gra.v[p[x]][p[y]]=Gra.v[p[y]][p[x]]=min(z,Gra.v[p[y]][p[x]]);\n    }\n    for(int i=1;i<=n;i++) ans.v[i][i]=0;\n    chen(K);\n    printf(\"%lld\",ans.v[p[S]][p[E]]);\n    return 0;\n}\n\n```",
        "postTime": 1508371919,
        "uid": 21700,
        "name": "\u4e09\u9152\u9152\u9152",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "\u9996\u5148\u7531\u4e8e\u53ea\u6709100\u6761\u8fb9\u4e5f\u5c31\u662f\u53ea\u7528\u5230\u4e86200\u4e2a\u70b9\uff0c\u800c\u4e00\u5171\u67091000\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u79bb\u6563\u5316\u4e00\u4e0b\uff0c \u7528map\u79bb\u6563\u5316\u5230200\u4e2a\u70b9\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20200717161630878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTY5Nzc3NA==,size_16,color_FFFFFF,t_70)\n\n\u4e0a\u56fe\u4e2d\u7684\u7b2c\u4e00\u884c\u662f\u7ecf\u5178\u7684Floyd\u7b97\u6cd5\u7684\u601d\u60f3\u3002\n\n\u4e0b\u9762\u4e00\u884c\u662f\u672c\u9898\u7684\u53d8\u5f62\u601d\u60f3\u3002\n\u5176\u4e2d $d[a,i,k]$ \u4e2d\u7684 $k$ \u4e0d\u662f\u4ec0\u4e48\u7b2c $k$ \u6761\u8fb9\uff0c\u800c\u662f\u8868\u793a\u4ece $i$ \u8d70\u4e86 $a$ \u6761\u8fb9\uff08\u5c31\u662f\u76f8\u5f53\u4e8e\u8d70\u4e86$a$\u6b65\uff09\u4ee5\u540e\u5230\u8fbe\u7684\u7ed3\u70b9 $k$ \uff0c\u56e0\u6b64\u8fd9\u4e2a $k$ \u662f\u5728 $1$ ~ $N$ \u4e4b\u95f4\u7684\u4e00\u4e2a\u70b9\u3002\n\n\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u8868\u793a\u4ece $i$ \u5230 $j$ \u8d70 $a+b$ \uff08$x$\uff09\u6761\u8fb9\uff0c\u7b49\u4e8e\u5728\u6240\u6709\u4ece $i$ \u8d70 $a$ \u6761\u8fb9\u5230 $k$ \uff0c\u518d\u4ece $k$ \u8d70 $b$ \uff08$x-a$\uff09 \u6761\u8fb9\u5230 $j$ \u4e2d\u53d6\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u8981\u6c42\u7684\u662f\u7ecf\u8fc7 $N$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u6700\u5f00\u59cb\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u90fd\u662f1\u6761\u8fb9\uff08\u7ecf\u8fc7\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5f97\u5230\u7ecf\u8fc7N\u6761\u8fb9\u5c31\u53ef\u4ee5\u6309\u7167\u4e0a\u8ff0\u7684\u65b9\u7a0b\uff0c\u52a0 $N-1$ \u6b21 $\uff08d[2,i,j] = d[1,i,k] + d[1,k,j]\uff09$\n\n\u7531\u4e8e**\u6bcf\u4e00\u90e8\u5206\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5173\u8054\uff0c** \u6240\u4ee5\u6574\u4e2a\u7b54\u6848\u7684\u6c42\u89e3\u53ef\u4ee5\u770b\u6210\u662f\u52a0\u6cd5\u8fd0\u7b97\uff0c\u6ee1\u8db3**\u7ed3\u5408\u5f8b**\u3002\u56e0\u6b64\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6765\u5904\u7406\u3002(\u5feb\u901f\u5e42\u5c31\u662f\u5229\u7528\u500d\u589e\u7684\u601d\u60f3\uff0c\u4e58 $log_k$ \u6b21\u5f97\u5230\u4e86$x^k$\uff0c\u8fd9\u91cc\u8981\u52a0 $N$ \u6b21\uff0c\u4f46\u662f $N$ \u6bd4\u8f83\u5927\uff0c\u6211\u4eec\u7528\u6a21\u62df\u5feb\u901f\u5e42\u6765\u8fdb\u884c\u4f18\u5316\uff0c\u5e76\u7528\u52a0\u6cd5\u4ee3\u66ff\u4e58\u6cd5\uff0c\u8fd9\u6837\u53ea\u9700\u8981 $log_N$ \u6b21\u5c31\u53ef\u4ee5\u5f97\u5230\u52a0 $N$ \u6b21\u7684\u7ecf\u8fc7 $N$ \u6761\u8fb9\u7684\u6700\u77ed\u8def)\n\n\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(T^3log_N)$\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<map>\n\n#define x first\n#define y second\nusing namespace std;\ntypedef pair<int,int> PII;\n\nconst int N =  507;\n\nint k,n,m,S,E;\nint g[N][N];\nint d[N][N];\n\nvoid mul(int c[][N],int a[][N],int b[][N]){\n    static int temp[N][N];\n    memset(temp,0x3f,sizeof temp);\n    for(int k = 1;k <= n;++k)\n        for(int i = 1;i <= n;++i)\n            for(int j = 1;j <= n;++j)\n                temp[i][j] = min(temp[i][j],a[i][k] + b[k][j]);\n    memcpy(c,temp,sizeof temp);\n}\n\nvoid qpow(){\n    memset(d,0x3f,sizeof d);\n    for(int i = 1;i <= n;++i)\n        d[i][i] = 0;\n    while(k){\n        if(k & 1)mul(d, d, g);//d = d * g;\n        mul(g, g, g);//g = g * g;\n        k >>= 1;\n    }\n}\n\nint main(){\n    cin>>k>>m>>S>>E;\n    memset(g,0x3f,sizeof g);\n    //\u8fd9\u91ccg[i][i]\u4e0d\u80fd\u7f6e\u4e3a0\uff0c\u56e0\u4e3a\u8fd9\u91ccg[i][j]\u8868\u793a\u7684\u662f\u4ecei\u8d701\u6761\u8fb9\u5230\u8fbej,i\u4e0d\u80fd\u7ecf\u8fc71\u6761\u8fb9\u5230i,\u56e0\u6b64\u5e94\u8be5\u4e5f\u662fINF\n    map<int,int>ids;\n    while(m--){\n        int a,b,c;\n        scanf(\"%d%d%d\",&c,&a,&b);\n        if(!ids.count(a))ids[a] = ++n;\n        if(!ids.count(b))ids[b] = ++n;\n        a = ids[a],b = ids[b];\n\n        g[a][b] = g[b][a] = min(g[a][b],c);\n    }\n    if(!ids[S])ids[S] = ++n;\n    if(!ids[E])ids[E] = ++n;\n    S = ids[S],E = ids[E];\n\n    qpow();\n\n    cout<<d[S][E]<<endl;\n    return 0;\n\n}\n\n```\n",
        "postTime": 1594976489,
        "uid": 262605,
        "name": "fanfansann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]Cow Relays G\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P2886)\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u786e\u8fd9\u91cc\u7684\u6700\u77ed\u8def\u662f\u5728\u7ecf\u8fc7n\u6761\u8def\u5f84\u7684\u524d\u63d0\u4e0b\u7684\u6700\u77ed\u8def\uff0c\u56e0\u4e3a\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u4e00\u5b9a\u6709\u89e3\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u6734\u7d20\u7684Floyd\u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int k = 1; k <= n; k++)\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tf[i][j] = min(f[i][j],f[i][k] + f[k][j]);\n```\n\n\u5176\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u662f\u679a\u4e3ek\u5e76\u7528ta\u53bb\u5f53\u4e2d\u8f6c\u70b9\u53bb\u66f4\u65b0\u6bcf\u4e00\u4e2ai->j\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u4e48\uff0c\u5f53k\u7b49\u4e8en/2\u65f6\u8fd9\u6bb5\u4ee3\u7801\u5b8c\u6210\u4e86\u4ec0\u4e48\u5462\uff1f\n\n\u90a3\u5c31\u662f\u6211\u4eec\u5c1d\u8bd5\u4e86\u7528[1,n/2]\u7684\u70b9\u53bb\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6700\u77ed\u8def\u6700\u591a\u5305\u542bk+1\u6761\u8def\u5f84\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u6700\u591ak+1\u6761\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u7528k\u53bb\u5c1d\u8bd5\u66f4\u65b0i->j\u7684\u6700\u77ed\u8def\u662f\u4e0d\u4e00\u5b9a\u6210\u529f\uff08\u5373f[i][j]<=f[i][k]+f[k][j]\uff09\n\n~~\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528Floyd+dp+\u500d\u589e\u53bb\u5207\u6389\u8fd9\u9053\u9898~~\n\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int k = 1; k <= n; k++)\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tc[i][j] = c[i][j] + a[i][k] * b[k][j];\n```\n\n\u662f\u4e0d\u662f\u548cFloyd\u7684\u4ee3\u7801\u6709\u70b9\u76f8\u4f3c\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u8fd9\u4e2a\u77e9\u9635\u4e58\u6cd5\u9b54\u6539\u4e00\u4e0b\uff1a\n\n```cpp\nmemset(c,0x7f,sizeof(c));\nfor(int k = 1; k <= n; k++)\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tc[i][j] = min(c[i][j],a[i][k] + a[k][j]);\n```\n\n\u662f\u4e0d\u662f\u548cFloyd\u8d8a\u6765\u8d8a\u76f8\u4f3c\u4e86\u2026\u2026\n\n\u4f46\u662f\u5728\u8fd9\u91cc\uff0cc[i][j]\u7684\u521d\u503c\u4e3aINF\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u679a\u4e3ek\u90fd\u4f1a\u9009\u62e9\u4e00\u6761\u8fb9\u53bb\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u7528\u90bb\u63a5\u77e9\u9635map\uff08\u4e0d\u662fSTL\u7684\u90a3\u4e2amap\uff09\u53bb\u5b58\u8fb9\uff0c\u90a3\u4e48map\u7684n\u6b21\u65b9\u5b58\u7684\u5c31\u662f\u7ecf\u8fc7n\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define rep(i,a,b) for(int i = (a); i <= (b); i++)\n#define qwq printf(\"qwq\\n\");\n\nusing namespace std;\n\nlong long read()\n{\n\tregister long long x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\n\nlong long n,m,t,sta,End,cnt,siz,u,d[100005];\n\nstruct edge{\n\tint fro,to,l;\n}e[100005];\n\nstruct juzhen{\n\tlong long a[105][105];\n\tjuzhen operator * (const juzhen &x) const\n    {\n        juzhen c;\n        memset(c.a,0x7f,sizeof(c.a));\n        for(int k = 1; k <= siz; k++)\n            for(int i = 1; i <= siz; i++)\n                for(int j = 1; j <= siz; j++)\n                    c.a[i][j] = min(c.a[i][j],a[i][k]+x.a[k][j]);\n        return c;       \n    }\n}ans,map; \n\nvoid ksm(int b)\n{\n\twhile(b > 0)\n\t{\n\t\tif(b & 1) ans = ans * map;\n\t\tmap = map * map;\n\t\tb >>= 1;\n\t}\n}\n\nbool cmp(int a,int b){return a < b;}\n\nint main()\n{\n\tn = read(); m = read(); sta = read(); End = read();\n    for(int i = 1; i <= m; i++)\n    {\n    \te[i].l = read(); e[i].fro = read(); e[i].to = read();\n    \td[++cnt] = e[i].fro; d[++cnt] = e[i].to;\n\t}\n\tsort(d + 1, d + cnt + 1, cmp);\n\tsiz = unique(d + 1, d + cnt + 1) - d - 1;\n\tfor(int i = 1; i <= siz; i++)\n\t\tfor(int j = 1; j <= siz; j++)\n\t\t\tmap.a[i][j] = INF;\n  \tfor(int i = 1; i <= m; i++)\n\t{\n\t\te[i].fro = lower_bound(d + 1, d + siz + 1, e[i].fro) - d;\n\t\te[i].to = lower_bound(d + 1, d + siz + 1, e[i].to) - d;\n\t\tmap.a[e[i].fro][e[i].to] = e[i].l;\n\t\tmap.a[e[i].to][e[i].fro] = e[i].l;\n\t}\n\tsta = lower_bound(d + 1, d + siz + 1, sta) - d;\n\tEnd = lower_bound(d + 1, d + siz + 1, End) - d;// li san hua \n\tfor(int i = 1; i <= siz; i++)\n\t\tfor(int j = 1; j <= siz; j++)\n\t\t\tans.a[i][j] = map.a[i][j];\n\tksm(n - 1);\n\tprintf(\"%d\\n\",ans.a[sta][End]);\n    return 0;\n}\n\n```",
        "postTime": 1571274786,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u662f\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u800c\u4e14\u53ea\u6709$100$\u6761\u8fb9\uff0c\u90a3\u4e48\u70b9\u4e5f\u5f88\u5c11\n\n\u7f16\u53f7\u662f\u4e71\u7684\uff0c\u5148\u8fdb\u884c\u4e00\u6ce2\u79bb\u6563\u5316\uff0c\u4e0a$map$\u5373\u53ef(~~STL\u5927\u6cd5\u597d~~)\n\n\u79bb\u6563\u5316\u540e\uff0c\u8f6c\u5316\u6210\u90bb\u63a5\u77e9\u9635\uff0c\u8fd9\u4e2a\u77e9\u9635\u5b9e\u9645\u4e0a\u8868\u793a\u7684\u662f$i$\u5230$j$\u53ea\u7ecf\u8fc7$1$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u77e9\u9635\u3002\u8fd9\u65f6\u53d1\u73b0\uff0c\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u662f\u4e00\u4e2a$st$\u5230$ed$\u4e14\u53ea\u7ecf\u8fc7$n$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u77e9\u9635\u3002\n\n\u8003\u8651\u5982\u4f55\u4ece\u5c0f\u77e9\u9635\u63a8\u5411\u5927\u77e9\u9635\uff1a\u8bbe\u77e9\u9635$A$\u662f\u4e00\u4e2a\u4efb\u610f\u4e24\u70b9\u7ecf\u8fc7$x$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u77e9\u9635\uff0c\u8bbe\u77e9\u9635$B$\u662f\u4e00\u4e2a\u4efb\u610f\u4e24\u70b9\u7ecf\u8fc7$y$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u77e9\u9635\n\n$A$ $\\times$ $B$\u5f97\u5230\u77e9\u9635$C$\uff0c\u90a3\u4e48\u77e9\u9635$C$\u662f\u4e00\u4e2a\u7ecf\u8fc7$(x+y)$\u6761\u8fb9\u7684\u77e9\u9635\n\n\u91cd\u8f7d\u4e58\u6cd5\uff0c\u56e0\u4e3a\u77e9\u9635\u8f6c\u79fb\u65f6\u7684\u5b9e\u8d28\u4e3a$Floyd$\u677e\u5f1b\uff1a$C$($i,j$) $=$ $min$ ($A$($i,k$) $+$ $B$($k,j$) ) ($1$ $<=$ $k$ $<=$ $n$)\n\n\u7b54\u6848\u5c31\u662f\u521d\u59cb\u77e9\u9635\u7684$k$\u6b21\u65b9\uff0c\u77e9\u9635\u5feb\u901f\u5e42\u52a0\u901f\u5373\u53ef \n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define oo (1e18)\n#define int long long\n#define LL unsigned long long\n#define hh puts(\"\")\nusing namespace std;\nint k,m,st,ed,cnt=0;\nmap<int,int> mp;\nstruct matrix{\n\tint ma[105][105];\n\tvoid init(){memset(ma,0x3f,sizeof(ma));}\n}f,ans;\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-1;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+(ch^48);ch=getchar();}\n    return ret*ff;\n}\nmatrix mul(matrix a,matrix b){\n\tmatrix res;\n\tres.init();\n\tfor(int kk=1;kk<=cnt;kk++)\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tfor(int j=1;j<=cnt;j++)\n\t\t\t\tres.ma[i][j]=min(res.ma[i][j],a.ma[i][kk]+b.ma[kk][j]);\n\treturn res;\n}\nvoid ksm(int p){\n\twhile(p){\n\t\tif(p&1) ans=mul(ans,f);\n\t\tp>>=1;\n\t\tf=mul(f,f);\n\t}\n}\nsigned main(){\n\tk=read(),m=read(),st=read(),ed=read();\n\tf.init(),ans.init();\n\tfor(int i=1;i<=m;i++){\n\t\tint v=read();\n\t\tint x=read(),y=read();\n\t\tif(!mp[x]) mp[x]=++cnt;\n\t\tif(!mp[y]) mp[y]=++cnt;\n\t\tf.ma[mp[x]][mp[y]]=f.ma[mp[y]][mp[x]]=min(f.ma[mp[x]][mp[y]],v);\n\t}\n\tfor(int i=1;i<=cnt;i++) ans.ma[i][i]=0;\n\tksm(k);\n\tprintf(\"%lld\",ans.ma[mp[st]][mp[ed]]);\n    return 0;\n}\n```\n",
        "postTime": 1552615913,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "# \u65b9\u6cd51\n\u7528 $n$ \u4e2a\u77e9\u9635\u6765\u8868\u793a\uff0c\u7b2c $k$ \u4e2a\u77e9\u9635\u7684\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u8868\u793a\u4ece\u8282\u70b9 $i$ \u5230\u8282\u70b9 $j$\uff0c\u6070\u597d\u7ecf\u8fc7 $k$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u7b2c $k$ \u4e2a\u77e9\u9635\u4e0e\u7b2c $p$ \u4e2a\u77e9\u9635\u7684\u201c\u79ef\u201d\uff0c\u5c31\u662f\u7b2c $k+p$ \u4e2a\u77e9\u9635\u3002\n\n\u7c7b\u4f3c\u4e8e\u77e9\u9635\u4e58\u6cd5\uff0c\u4f46**\u4e24\u4e2a\u6570\u4e4b\u79ef\u7684\u548c**\u5e94\u53d8\u4e3a**\u4e24\u4e2a\u6570\u7684\u548c\u7684\u6700\u5c0f\u503c**\u8fd9\u91cc\u65e2\u53ef\u4ee5\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u3002  \n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u6765\u5b9e\u73b0\u4e86\u3002\n\n\u5f53\u7136\uff0c\u7531\u4e8e\u8fb9\u6570\u5f88\u5c11\uff0c\u4f46\u70b9\u7f16\u53f7\u8f83\u5927\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\u4e00\u4e0b\u3002\u4e8e\u662f\u5c31\u5b8c\u7f8e\u7684 AC \u4e86\u3002\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define INF 0x3f3f3f3f\nstruct node\n{\n    int sq[105][105];\n};\nint n,t,s,e;//\u7ed9\u5b9a\u4e00\u5f20 T \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42\u4ece S \u5230 E \u7ecf\u8fc7 N \u6761\u8fb9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\nint map[105][105];\nbool app[1001];\nint as[1001];\nint cnt=0;\nint l[101],u[101],v[101];\nnode mult(node a,node b)\n{\n    node ret;\n    memset(ret.sq,0x3f,sizeof(ret.sq));\n    for(int i=1;i<=cnt;i++)\n    for(int j=1;j<=cnt;j++)\n    for(int x=1;x<=cnt;x++)\n    {\n        ret.sq[i][j]=min(ret.sq[i][j],a.sq[i][x]+b.sq[x][j]);\n    }\n    return ret;\n}//\"\u77e9\u9635\u4e58\u6cd5\"\nnode quick(node x,int y)\n{\n    if(y==1)return x;\n    node ret;\n    memset(ret.sq,0,sizeof(ret.sq));\n    if(y==0)\n    {\n        return ret;\n    }\n    ret=quick(x,y>>1);\n    return y%2==1?mult(x,mult(ret,ret)):mult(ret,ret);\n}//\u77e9\u9635\u5feb\u901f\u5e42\nint main()\n{\n    cin>>n>>t>>s>>e;\n    memset(map,0x3f,sizeof(map));\n    for(int i=1;i<=t;i++)\n    {\n        cin>>l[i]>>u[i]>>v[i];\n        app[u[i]]=1;\n        app[v[i]]=1;\n    }\n    for(int i=1;i<=1001;i++)\n    {\n        if(app[i])as[i]=++cnt;\n    }\n    for(int i=1;i<=t;i++)\n    {\n        map[as[u[i]]][as[v[i]]]=l[i];\n        map[as[v[i]]][as[u[i]]]=l[i];\n    }\n    node x;\n    for(int i=1;i<=cnt;i++)\n    {\n        for(int j=1;j<=cnt;j++)\n        {\n            x.sq[i][j]=map[i][j];\n        }\n    }\n    x=quick(x,n);\n    cout<<x.sq[as[s]][as[e]]<<endl;\n    return 0;\n}\n```\n# \u65b9\u6cd52\n\u500d\u589e+Floyd.\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff08~~\u5176\u5b9e\u662f\u61d2~~\uff09\n\n(~~\u4ed4\u7ec6\u60f3\u60f3~~\u4f1a\u53d1\u73b0\uff0c\u4e24\u79cd\u65b9\u6cd5\u5176\u5b9e\u5e76\u6ca1\u6709\u672c\u8d28\u533a\u522b)\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define INF 0x3f3f3f3f\nusing namespace std;\nint n,t,s,e;//\u7ed9\u5b9a\u4e00\u5f20 T \u6761\u8fb9\u7684\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42\u4ece S \u5230 E \u7ecf\u8fc7 N \u6761\u8fb9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\nint map[105][105];\nbool app[1001];\nint as[1001];\nint cnt=0;\nint l[101],u[101],v[101];\nint f[20][101][101],g[101][101],ans[101],nean[101];\nint main()\n{\n    cin>>n>>t>>s>>e;\n    memset(map,0x3f,sizeof(map));\n    for(int i=1;i<=t;i++)\n    {\n        cin>>l[i]>>u[i]>>v[i];\n        app[u[i]]=1;\n        app[v[i]]=1;\n    }\n    for(int i=1;i<=1001;i++)\n    {\n        if(app[i])as[i]=++cnt;\n    }\n    for(int i=1;i<=t;i++)\n    {\n        map[as[u[i]]][as[v[i]]]=l[i];\n        map[as[v[i]]][as[u[i]]]=l[i];\n    }\n    memset(f,0x3f,sizeof(f));\n    for(int i=1;i<=cnt;i++)\n        for(int j=1;j<=cnt;j++)\n            f[0][i][j]=map[i][j];\n    for(int _=1;1<<_<=n;_++)\n        for(int i=1;i<=cnt;i++)\n            for(int j=1;j<=cnt;j++)\n                for(int k=1;k<=cnt;k++)\n                    f[_][i][j]=min(f[_][i][j],f[_-1][i][k]+f[_-1][k][j]);\n    memset(ans,0x3f,sizeof(ans));\n    ans[as[s]]=0;\n    for(int i=0;n;i++,n>>=1)\n    {\n        if(!(n&1))continue;\n        for(int j=1;j<=cnt;j++)\n        {\n            nean[j]=INF;\n            for(int k=1;k<=cnt;k++)\n            {\n                nean[j]=min(ans[k]+f[i][j][k],nean[j]);\n            }\n        }\n        for(int j=1;j<=cnt;j++)\n        {\n            ans[j]=nean[j];\n        }\n    }\n    cout<<ans[as[e]]<<endl;\n    return 0;\n}\n```",
        "postTime": 1590845489,
        "uid": 182519,
        "name": "_Helium",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]Cow Relays G\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6211\u7528\u4e86\u500b\u4e0d\u592a\u6b63\u78ba\u7684\u65b9\u6cd5\u4f86\u904e\u9019\u984c\uff1f\n\n\u6211\u7b2c\u4e00\u773c\u770b\u5230\u7684\u5176\u5be6\u4e0d\u662f\u500d\u589e floyd (\u56e0\u70ba\u6211\u5c0d\u77e9\u9663\u9084\u4e0d\u592a\u719f\u6089)\uff0c\u800c\u662f\u4e00\u7a2e\u985e\u4f3c dijk \u7684\u505a\u6cd5\u3002\n\n#### \u984c\u76ee\u5206\u6790\n\n\u6211\u5011\u8a2d $f_{i,j}$ \u70ba\u9577\u5ea6\u70ba $i$ \u4e14\u7d42\u9ede\u70ba $j$ \u7684\u6700\u8def\u8def\u5f91\u3002\n\n\u90a3\u9ebd\u5bb9\u6613\u5f97\u51fa $f_{i,v} = min (f_{i-1,u} + map_{u,v})$\u3002\n\n\u7b54\u6848\u81ea\u7136\u5c31\u662f$f_{n,E}$\u3002\n\n\u7576\u7136\u7a7a\u9593\u4e00\u5b9a\u6703\u7206\u6240\u4ee5\u6211\u5011\u8981\u7528\u6efe\u52d5\u6578\u7d44\u3002\u800c\u6642\u9593\u8907\u96dc\u5ea6\u65b9\u9762\uff0c\u56e0\u70ba\u53ea\u6709\u7576\u5169\u500b\u9ede\u6709\u76f4\u63a5\u8def\u5f91\u6642\u624d\u6703\u5c0d $dp$ \u6578\u7d44\u9032\u884c\u66f4\u65b0\uff0c\u8def\u5f91\u4e00\u5171\u6709 $t$ \u689d\uff0c\u4e00\u5171\u8981\u8d70 $n$ \u6bb5\uff0c\u6240\u4ee5\u6642\u9593\u8907\u96dc\u5ea6\u662f $O(nt)$ \uff0c\u5927\u7d04\u6703\u662f $10^8$ (\u525b\u525b\u597d\u4e0d\u7206)\u3002\n\n\u5176\u5be6\u6211\u4e5f\u61f7\u7591\u9019\u500b\u505a\u6cd5\u6703\u4e0d\u6703\u6709\u4e00\u4e9b\u6211\u6c92\u60f3\u5230\u7684\u5730\u65b9\u6703\u5c0e\u81f4WA\uff0c \u56e0\u70ba\u6211\u4e00\u958b\u984c\u89e3\u5168\u90e8\u90fd\u662f\u77e9\u9663\u642d\u914dfloyd\uff0c\u4f46\u5e78\u597d\u9084\u662f\u904e\u4e86OuO\u3002\u53ef\u80fd\u6703\u6709\u4e00\u4e9b\u6578\u64da\u6703\u5361\u6389\u6211\u7684\u4ee3\u78bc\uff0c\u6b61\u8fce\u63d0\u51fa\u3002\n\n\u4ee3\u78bc:\n```cpp\n#include <iostream>\nusing namespace std;\nlong long int cnt,st,en,n,t,map[10005][3],dp[100005][2],tag[1005],num[10005];\nint main()\n{\n\tcin>>n>>t>>st>>en;\n\tfor(int i=1;i<=t;i++)\n\t{\n\t\tcin>>map[i][0]>>map[i][1]>>map[i][2];\n\t\tif(tag[map[i][1]]==0)\n\t\t{\n\t\t\ttag[map[i][1]]=1;\n\t\t\tcnt++;\n\t\t\tnum[cnt]=map[i][1];\n\t\t}\n\t\tif(tag[map[i][2]]==0)\n\t\t{\n\t\t\ttag[map[i][2]]=1;\n\t\t\tcnt++;\n\t\t\tnum[cnt]=map[i][2];\n\t\t}\n\t}\n\tfor(int i=1;i<=1000;i++)\n\t{\n\t\tdp[i][1]=9999999999999999;\n\t}\n\tdp[st][1]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t{\n\t\t\tdp[num[j]][0]=dp[num[j]][1];\n\t\t\tdp[num[j]][1]=9999999999999999;\n\t\t}\n\t\tfor(int j=1;j<=t;j++)\n\t\t{\t\n\t\t\tdp[map[j][2]][1]=min(dp[map[j][2]][1],dp[map[j][1]][0]+map[j][0]);\n\t\t\tdp[map[j][1]][1]=min(dp[map[j][1]][1],dp[map[j][2]][0]+map[j][0]);\n\t\t}\n\t}\n\tcout<<dp[en][1];\n}\n```\n",
        "postTime": 1588250362,
        "uid": 68023,
        "name": "\u5929\u7fbd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]Cow Relays G\u3011"
    },
    {
        "content": "floyd\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u4f18\u5316\uff0c\u56e0\u4e3a\u6ee1\u8db3\u7ed3\u5408\u7387\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u778e\u641e\u4e86\n\n/\\*\nID:Agreement\n\nLANG:C++\n\n\\*/\n```cpp\n// Invincible\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <cstdlib> \n#define rep( i , l , r ) for( int i = (l) ; i <= (r) ; ++i )\n#define per( i , r , l ) for( int i = (r) ; i >= (l) ; --i )\n#define erep( i , u ) for( int i = head[(u)] ; ~i ; i = e[i].nxt )\nusing namespace std;\nconst int maxn = 1000 + 5 , INF = 0x3f3f3f3f;\nint K , M , S , T;\nint ans[maxn][maxn] , mp[maxn][maxn] , tmp[maxn][maxn] , dis[maxn][maxn];\nint vis[maxn] , v[maxn] , num;\nvoid floyd( int c[][maxn] , int a[][maxn] , int b[][maxn] ){\n    rep( k , 0 , num - 1 ) rep( i , 0 , num - 1 ) rep( j , 0 , num - 1 )\n        if( c[v[i]][v[j]] > a[v[i]][v[k]] + b[v[k]][v[j]] )\n            c[v[i]][v[j]] = a[v[i]][v[k]] + b[v[k]][v[j]];\n}\nvoid copy( int a[][maxn] , int b[][maxn] ){\n    rep( i , 0 , num - 1 )\n        rep( j , 0 , num - 1 )\n         a[v[i]][v[j]] = b[v[i]][v[j]] , b[v[i]][v[j]] = INF;\n}\nvoid solve( int k ){\n    for( ; k ; k >>= 1 ){\n        if( k & 1 ){\n            floyd( dis , ans , mp );\n            copy( ans , dis );\n        }\n        floyd( tmp , mp , mp );\n        copy( mp , tmp );\n    }\n}\nint main(){\n    int x , y , w;\n    scanf(\"%d %d %d %d\" , &K , &M , &S , &T);\n    memset( mp , 0x3f , sizeof mp );\n    memset( tmp , 0x3f , sizeof tmp );\n    memset( dis , 0x3f , sizeof dis );\n    memset( ans , 0x3f , sizeof ans );\n    rep( i , 0 , maxn - 5 ) ans[i][i] = 0;\n    num = 0;\n    rep( i , 0 , M - 1 ){\n        scanf(\"%d %d %d\" , &w , &x , &y );\n        if( !vis[x] ) vis[x] = 1 , v[num++] = x;\n        if( !vis[y] ) vis[y] = 1 , v[num++] = y;\n        if( mp[x][y] > w ) mp[x][y] = mp[y][x] = w;\n    }\n    solve( K );\n    printf(\"%d\\n\" , ans[S][T]);\n    return 0;\n}\n```",
        "postTime": 1475406437,
        "uid": 22733,
        "name": "eternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u5f20\u65e0\u5411\u8054\u901a\u56fe\uff0c\u6c42\u51fa\u4ece $S$ \u5230 $E$ \u7ecf\u8fc7**\u6070\u597d** $N$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\n## \u5206\u6790\n\n\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u9650\u5236\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 $u,v\\leq 1000$\u3002\u8fd9\u4e48\u5c0f\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u90bb\u63a5\u77e9\u9635\u6765\u50a8\u5b58\uff0c\u800c\u53c8\u53d1\u73b0 $n$ \u7684\u8303\u56f4\u5728 $1e6$\uff0c\u4e0d\u96be\u60f3\u5230 $n\\log n$ \u7ea7\u522b\u7684\u7b97\u6cd5\u3002\n\n\u7136\u540e\u6211\u4eec\u5728\u7ec6\u7ec6\u5206\u6790\uff1afloyd \u7b97\u6cd5\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a dp \u8f6c\u79fb\u65b9\u7a0b\u4e3a $dis_{i,j,x+y}=\\min\\{dis_{i,j,x+y},dis_{i,k,x}+dis_{j,k,y}\\}$ \uff0c\u8fd9\u548c\u77e9\u9635\u4e58\u6cd5\u7684\u8f6c\u79fb\u5f88\u50cf\uff0c\u80fd\u4e0d\u80fd\u7528\u77e9\u9635\u6765\u52a0\u901f\u5462\uff1f\n\n\u90a3\u600e\u4e48\u5904\u7406**\u6070\u597d** $N$ \u6761\u8fb9\u8fd9\u4e00\u4e2a\u6761\u4ef6\u5462\uff1f\u6ce8\u610f\u5230\u6211\u5728\u8f6c\u79fb\u65b9\u7a0b\u7684\u65f6\u5019\u989d\u5916\u52a0\u4e86\u4e00\u4e2a\u7ef4\u5ea6 ${i,j,x}$ \u8fd9\u4e2a\u610f\u601d\u662f**\u521a\u597d**\u8d70\u4e86 $x$ \u6b65\u4e4b\u540e\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u8ddd\u79bb\u77e9\u9635\u8fdb\u884c\u6211\u4eec\u4fee\u6539\u540e\u7684\u5feb\u901f\u5e42\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5feb\u901f\u6c42\u5f97\u7b54\u6848\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3\\log N)$\uff0c$n$ \u662f\u8282\u70b9\u6570\uff0c$N$ \u662f\u6b65\u9aa4\u6570\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\n```c++\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int SIZE = 1000 + 10, MOD = 19260817;\nstruct Matrix {\n\tint val[SIZE][SIZE];\n\tvoid BuildEpsilon(int n) {\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                val[i][j]=INT_MAX;;\n\t}\n}g;\nMatrix Mul(Matrix x, Matrix y, int n) { //\u4fee\u6539\u540e\u7684\u77e9\u9635\u4e58\u6cd5\n\tMatrix result;result.BuildEpsilon(n);\n\tfor(int k = 1; k <= n; k ++) {\n\t\tfor(int i = 1; i <= n; i ++) {\n\t\t\tfor(int j = 1; j <= n; j ++) {\n\t\t\t\tresult.val[i][j] = min(result.val[i][j], x.val[i][k] + y.val[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nMatrix Qpow(Matrix base, int top, int n) {//\u5feb\u901f\u5e42\n\tMatrix result=base;top--;\n\twhile(top) {\n\t\tif(top & 1) result = Mul(result, base, n);\n\t\tbase = Mul(base, base, n);\n\t\ttop >>= 1;\n\t}\n\treturn result;\n}\nsigned main() {//\u6ce8\u610f\u8282\u70b9\u8981\u79bb\u6563\u5316\n\tint k,e,s,t;cin>>k>>t>>s>>e;\n\tint lisan[1010]={},nodetot=0;\n\tg.BuildEpsilon(1000);\n\tfor(int i=1,u,v,w;i<=t;i++){\n\t\tcin>>w>>u>>v;\n        if(u==v)continue;\n\t\tif(lisan[u]==0) lisan[u]=++nodetot;\n\t\tif(lisan[v]==0) lisan[v]=++nodetot;\n\t\tg.val[lisan[u]][lisan[v]]=g.val[lisan[v]][lisan[u]]=w;\n\t}\n\tMatrix res=Qpow(g,k,nodetot);\n\tcout<<res.val[lisan[s]][lisan[e]]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1637372646,
        "uid": 112275,
        "name": "Gloaming",
        "ccfLevel": 0,
        "title": "P2886 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u6c42$s$\u5230$t$\u7ecf\u8fc7$n$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\n### \u5206\u6790\n\n\u9996\u5148\u6839\u636e\u8f93\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u94fe\u63a5\u77e9\u9635\uff0c\u5047\u8bbe\u662f$A$\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u77e9\u9635\u7684\u4e58\u6cd5\n\n```c++\nmat mul(mat A,mat B)\n{   \n    mat res;\n    for(int k = 1; k <= cnt; k++) \n    {\n        for(int j = 1; j <= cnt; j++) \n        {\n            for(int i = 1; i <= cnt; i++) \n            {\n                res.a[i][j] = min(res.a[i][j],A.a[i][k]+B.a[k][j]);\n            }\n        }\n    }\n    return res;\n}\n```\n\u90a3\u4e48$A^k \\times A$\u7b49\u4ef7\u4e8e\u8d70\u4e86k\u6761\u8fb9\u4e4b\u540e\uff0c\u518d\u8d70\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa$A^n$\u6b21\u65b9\u6765\u5c31\u53ef\u4ee5\u5f97\u5230$s$\u5230$t$\u7ecf\u8fc7$n$\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002",
        "postTime": 1592616901,
        "uid": 277692,
        "name": "horz",
        "ccfLevel": 0,
        "title": "P2886 [USACO07NOV]Cow Relays G"
    },
    {
        "content": "**\u6613\u9519\u70b9\uff1a**\n\n* \u7531\u4e8e\u662f\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff0cmul(Mat a,Mat b)\u65b9\u6cd5\u4e2d\u7684\u5c40\u90e8\u53d8\u91cfans\u4e0d\u80fd\u4f7f\u7528memcpy\u76f4\u63a5\u590d\u5236\u77e9\u9635a\u6216b\u7684\u6570\u636e.\n\n------------\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<map>\nusing namespace std;\nconst int MAXN=2e2;\nstruct Mat{\n\tint a[MAXN][MAXN];\n\tvoid pre(){\n\t\tmemset(a,0x3f,sizeof(a));\n\t}\n};\nint nodeCnt=0;\nMat mul(Mat a,Mat b){\n\tMat ans;\n\tans.pre();\n\tfor(int i=1;i<=nodeCnt;i++){\n\t\tfor(int j=1;j<=nodeCnt;j++){\n\t\t\tfor(int k=1;k<=nodeCnt;k++){\n\t\t\t\tans.a[i][j]=min(ans.a[i][j],a.a[i][k]+b.a[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nMat poww(Mat a,int x){\n\tMat ans;\n\tmemcpy(ans.a,a.a,sizeof(ans.a));\n\tx--;\n\twhile(x){\n\t\tif(x&1)ans=mul(ans,a);\n\t\ta=mul(a,a);\n\t\tx>>=1;\n\t}\n\treturn ans;\n}\nmap<int,int> m;\nint main(){\n\tint n,t,s,e;\n\tscanf(\"%d%d%d%d\",&n,&t,&s,&e);\n\tMat a;//defult graph\n\ta.pre();\n\tfor(int i=1;i<=t;i++){\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&w,&u,&v);\n\t\tu=m[u]?m[u]:(m[u]=++nodeCnt);\n\t\tv=m[v]?m[v]:(m[v]=++nodeCnt);\n\t\ta.a[u][v]=a.a[v][u]=min(a.a[u][v],w);\n\t}\n\tMat ans=poww(a,n);\n\tprintf(\"%d\\n\",ans.a[m[s]][m[e]]);\n\treturn 0;\n}\n```\n",
        "postTime": 1568038385,
        "uid": 115758,
        "name": "Object_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "\n\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u63a8\u5bfc$dp$\u65b9\u7a0b,$dp(k,i,j)$\u8868\u793a\u7ecf\u8fc7$k$\u6761\u8fb9\u4ece$i$\u5230$j$\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u5219\uff0c$dp(k,i,j)=min(dp(k-1,i,p)+dp(1,p,j))$\u3002\n\n\u800c$(i,p),(p,j),(i,j)$\u53d1\u73b0\u4e86\u4ec0\u4e48\uff0c\u8fd9\u4e0d\u662f\u77e9\u9635\u5417\uff0c$dp(1,i,j)$\u4e3a\u521d\u59cb\u77e9\u9635($1$\u6b21\u5e42),$dp(2,i,j)$\u4e3a$2$\u6b21\u5e42\uff0c$dp(3,i,j)$\u4e3a$3$\u6b21\u5e42\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u77e9\u9635\u5feb\u901f\u5e42\u4e00\u4e0b\u5373\u53ef\u3002\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#define int long long\nusing namespace std;\ninline int read(){\n    int f=1,ans=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){ans=ans*10+c-'0';c=getchar();}\n    return f*ans;\n}\nconst int MAXN=101;\nstruct matrix{\n    int st[MAXN][MAXN];\n}a,F,ans;\nstruct node{\n    int u,v,w;\n}x[MAXN];\nint Map[1000001],n,k,m,S,T,cnt;\nmatrix mul(matrix s1,matrix s2){\n    matrix s3;\n    memset(s3.st,127/3,sizeof(s3.st));\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            for(int p=1;p<=n;p++){\n                s3.st[i][p]=min(s3.st[i][p],s1.st[i][j]+s2.st[j][p]);\n            }\n    return s3;\n}\nmatrix qpow(int b){\n    if(b==0) return a;\n    ans=a;\n    while(b){\n        if(b&1) ans=mul(ans,a);\n        a=mul(a,a);b>>=1;\n    }return ans;\n}\nsigned main(){\n    k=read(),m=read(),S=read(),T=read();\n    memset(a.st,127/3,sizeof(a.st));\n    for(int i=1;i<=m;i++){\n        int w=read(),u=read(),v=read();\n        if(Map[u]==0) Map[u]=++cnt;\n        if(Map[v]==0) Map[v]=++cnt;\n        u=Map[u],v=Map[v];\n        x[i].w=w,x[i].u=u,x[i].v=v;\n        a.st[u][v]=a.st[v][u]=min(a.st[u][v],w);\n    }\n    n=cnt;\n    F=qpow(k-1);\n    printf(\"%lld\",F.st[Map[S]][Map[T]]);\n}\n/*\n3 1 3\n1 2\n2 3\n1 3\n*/\n```",
        "postTime": 1546007871,
        "uid": 87382,
        "name": "_sry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "\u8fd9\u5e76\u4e0d\u662f\u5bf9\u52b2\u7684\u9898\u89e3\u2026\u80e1\u626f\u4e00\u53e5\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4eba\u559c\u6b22\u73a9\u627e\u4e0d\u540c\n\n\u9898\u610f\u5c31\u662f\u7ed9\u4e00\u5f20\u65e0\u5411\u6709\u8fb9\u6743\u7684\u56fe\u3001\u8d77\u70b9\u3001\u7ec8\u70b9\uff0c\u6c42\u8d77\u70b9\u5230\u7ec8\u70b9\u7ecf\u8fc7n\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002n<=10^6\uff0c\u70b9\u7684\u7f16\u53f7<=10^3\uff0c\u8fb9\u6570<=10^2\u3002\n\n\n\u8fd9\u4e2a\u8fb9\u6570\u8ba9\u4eba\u4e0d\u7531\u81ea\u4e3b\u5730\u60f3\u5230\u4e86floyd\uff0c\u7136\u540e\u53d1\u73b0floyd\u6bcf\u6b21\u76f8\u5f53\u4e8e\u52a0\u5165\u4e86\u4e00\u4e2a\u70b9\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u4e00\u6b21\u201d\u4e5f\u662fO(\u70b9\u6570^3)\u7684\uff0c\u4f46\u662f\u5728\u8fd9\u4e00\u6b21floyd\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u66f4\u65b0\u7ed3\u679c\u3002\uff09\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u6b21floyd\u6c42\u51fa\u6765\u4e86\u4e24\u70b9\u4e4b\u95f4\u53ea\u8d70\u4e00\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u7b2c\u4e8c\u6b21\u6c42\u51fa\u6765\u4e86\u4e24\u70b9\u4e4b\u95f4\u53ea\u8d70\u4e24\u6761\u8fb9\u7684\u6700\u77ed\u8def\u2026\u2026\uff0c\u7b2cn\u6b21\u6c42\u51fa\u6765\u4e86\u53ea\u8d70n\u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\u8fd9\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\uff0cn\u904d\u4e0d\u5728\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u7b54\u6848\u7684floyd\u540e\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u4e86\u3002\n\n\n\u597d\u4e0d\u5bb9\u6613\u63a8\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u53d1\u73b0\u4e86n<=10^6\u7684\u6570\u636e\u8303\u56f4\uff0c\u60f3\u5fc5\u5fc3\u4e2d\u662f\u6709\u4e9b\u5d29\u6e83\u7684\u3002\u4f46\u662f\u90bb\u63a5\u77e9\u9635\u662f\u4ec0\u4e48\uff1f\u662f\u77e9\u9635\uff01\u8fd9\u6837\u5c31\u53ef\u4ee5\u601d\u8003\u7528\u77e9\u9635\u5feb\u901f\u5e42\u7684\u65b9\u6cd5\u3002\u53d1\u73b0floyd\u7684\u8f6c\u79fb\u65f6c[i][j] = min { dis[i][k] + dis[k][j] | i,k,j\u4e3a\u56fe\u4e2d\u70b9\u7684\u7f16\u53f7}\uff0c\u548c\u77e9\u9635\u5feb\u901f\u5e42\u7684\u8f6c\u79fb\u6709\u70b9\u50cf\uff0c\u800c\u4e14\u8f6c\u79fb\u65f6\u4e5f\u662f\u4e0a\u4e00\u6b65\u6c42\u51fa\u7684\u7b54\u6848\u5bf9\u4e8e\u6700\u521d\u7684\u90bb\u63a5\u77e9\u9635\u4f5c\u8fd0\u7b97\u3002\u8fd9\u65f6\u5c31\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e9b\u4e0d\u5bf9\u52b2\u7684\u65b9\u6cd5\u6539\u9020\u77e9\u9635\u4e58\u6cd5\u3002\n\n\n\u5c06\u77e9\u9635\u5feb\u901f\u5e42\u4e2d\u7684\u4e58\u6cd5\u6539\u6210\u4e0a\u9762\u90a3\u6837\u7684\u8f6c\u79fb\u65b9\u6cd5\uff0c\u5c31\u4f1a\u53d1\u73b0\u53ea\u8981\u6c42\u51fa\u90bb\u63a5\u77e9\u9635^n\u5c31\u597d\u4e86\u3002\n\n\n\u8fd9\u6837\u5c31\u5b8c\u4e86\uff1f\u5f53\u7136\u4e0d\u662f\u3002\n\n\n\u9898\u76ee\u4e2d\uff0c\u70b9\u7684\u7f16\u53f7<=10^3\uff0c\u76f4\u63a5floyd\u80af\u5b9a\u4f1a\u65f6\u95f4\u8d85\u9650\u3002\u6ce8\u610f\u5230\u8fb9\u6570<=10^2\uff0c\u800c\u6bcf\u6761\u8fb9\u9876\u591a\u8fde\u4e24\u4e2a\u4e0e\u4e4b\u524d\u4e0d\u540c\u7684\u70b9\uff0c\u90a3\u4e48\u51fa\u73b0\u7684\u4e0d\u540c\u7684\u70b9\u9876\u591a\u6709200\u4e2a\u3002\u5c06\u70b9\u8fdb\u884c\u79bb\u6563\u5316\u5c31\u89e3\u51b3\u4e86\u3002\n\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u7f16\u7684\u65f6\u5019\u90fd\u80fd\u60f3\u5f97\u5230\uff0c\u5728\u8fd9\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<iomanip>\n#include<cstdlib>\nusing namespace std;\ntypedef struct node\n{\n    int mat[210][210];\n}Matrix;\nMatrix rd,dis;\nint n,t,s,e,siz,mc[1010];\nint read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(isdigit(ch)==0 && ch!='-')ch=getchar();\n    if(ch=='-')f=-1;\n    while(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nMatrix mul(Matrix a,Matrix b)\n{\n    Matrix c;memset(c.mat,0x3f,sizeof(c.mat));\n    for(int k=1;k<=siz;k++)\n    {\n        for(int i=1;i<=siz;i++)\n        {\n            for(int j=1;j<=siz;j++)\n            {\n                c.mat[i][j]=min(c.mat[i][j],a.mat[i][k]+b.mat[k][j]);\n            }\n        }\n    }\n    return c;\n}\nvoid pow(int tim)\n{\n    while(tim)\n    {\n        if(tim&1)\n            rd=mul(rd,dis);\n        dis=mul(dis,dis);\n        tim>>1;\n    }\n}\nint main()\n{\n    //freopen(\".in\",\"r\",stdin);\n    //freopen(\".out\",\"w\",stdout);\n    n=read(),t=read(),s=read(),e=read();\n    memset(rd.mat,0x3f,sizeof(rd.mat));\n    memset(dis.mat,0x3f,sizeof(dis.mat));\n    memset(mc,-1,sizeof(mc));\n    for(int i=1;i<=t;i++)\n    {\n        int w=read(),u=read(),v=read();\n        if(mc[u]==-1)mc[u]=++siz;\n        if(mc[v]==-1)mc[v]=++siz;\n        u=mc[u],v=mc[v];\n        dis.mat[v][u]=min(dis.mat[u][v],w);\n        dis.mat[u][v]=min(dis.mat[u][v],w);\n    }\n    for(int i=1;i<=siz;i++)\n    {\n        rd.mat[i][i]=0;\n    }\n    pow(n);\n    cout<<rd.mat[mc[s]][mc[e]];\n    return 0;\n}\n\n```",
        "postTime": 1516867263,
        "uid": 33242,
        "name": "echo6342",
        "ccfLevel": 0,
        "title": "\u5e76\u4e0d\u5bf9\u52b2\u7684Cow Relays"
    },
    {
        "content": "## \u9898\u610f\u5206\u6790\uff1a\n- \u9898\u76ee\u7ffb\u8bd1\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\uff08\u8fd8\u6ca1\u770b\u7684\u8d70\u8fd9\u91cc -> [P2886](https://www.luogu.com.cn/problem/P2886))\u3002\u8fd9\u662f\u4e00\u9053\u77e9\u9635\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\uff08\u4e0d\u4f1a\u77e9\u9635\u4e58\u6cd5\u7684\u6765\u8fd9\u91cc -> [\u4f20\u9001\u95e8](https://www.yiibai.com/cplusplus/matrix-multiplication-in-cpp.html#:~:text=C%2B%2B%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95.%20%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%202%20%E4%B8%AA%E7%9F%A9%E9%98%B5%E4%B8%8A%E6%89%A7%E8%A1%8C%E5%8A%A0%EF%BC%8C%E5%87%8F%EF%BC%8C%E4%B9%98%E5%92%8C%E9%99%A4%E8%BF%90%E7%AE%97%E3%80%82.%20%E4%BB%8E%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E4%B8%80%E8%A1%8C%E6%95%B0%E5%AD%97%E5%92%8C%E5%88%97%E5%8F%B7%EF%BC%8C%E7%BB%84%E6%88%90%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%9F%A9%E9%98%B5%E5%85%83%E7%B4%A0%E5%92%8C%E7%AC%AC%E4%BA%8C%E4%B8%AA%E7%9F%A9%E9%98%B5%E5%85%83%E7%B4%A0%E3%80%82.%20%E7%84%B6%E5%90%8E%EF%BC%8C%E5%AF%B9%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%9A%84%E7%9F%A9%E9%98%B5%E6%89%A7%E8%A1%8C%E4%B9%98%E6%B3%95%E3%80%82.%20%E5%9C%A8%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E7%AC%AC%E4%B8%80%E7%9F%A9%E9%98%B5%E4%B8%AD%EF%BC%8C%E4%B8%80%E4%B8%AA%E8%A1%8C%E5%85%83%E7%B4%A0%E4%B9%98%E4%BB%A5%E7%AC%AC%E4%BA%8C%E7%9F%A9%E9%98%B5%E6%89%80%E6%9C%89%E5%88%97%E5%85%83%E7%B4%A0%E3%80%82.%20%E8%AE%A9%E6%88%91%E4%BB%AC%E9%80%9A%E8%BF%87%E4%B8%8B%E9%9D%A2%E7%9A%84%E5%9B%BE%E6%9D%A5%E7%90%86%E8%A7%A3,%2A%203%20%E5%92%8C%203%20%2A%203%20%E7%9F%A9%E9%98%B5%E7%9A%84%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%EF%BC%9A.%20%E4%B8%8B%E9%9D%A2%E6%9D%A5%E7%9C%8B%E7%9C%8B%E7%9C%8BC%2B%2B%E4%B8%AD%E7%9A%84%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95%E7%A8%8B%E5%BA%8F%E3%80%82.)\uff09\u3002\n\n### \u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\uff1a\n- \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u5728\u77e9\u9635\u4e58\u6cd5\u4e2d$C_{ij}=\\sum_{k=1}^nA_{ik} \\times A_{kj}$  \u8868\u793a\u4ece $i$ \u5230 $j$ \u7ecf\u8fc7 $2$ \u6761\u8fb9\u7684\u8def\u5f84\u6570\uff0c\u8fd9\u4e2a\u662f\u6839\u636e\u4e58\u6cd5\u539f\u7406\u5f97\u5230\uff0c\u73b0\u5728\u9898\u76ee\u8981\u6c42\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6765\u7684\u77e9\u9635\u4e58\u6cd5\u6539\u52a8\u4e00\u4e0b\uff0c\u53d8\u6210\uff1a  $C_{ij}=\\min_{k=1}^n(A_{ik}+A_{kj})$ \uff0c\u8fd9\u91cc\u77e9\u9635\u91cc\u7684 $A_{ij}$ \u8868\u793a\u7684\u4e0d\u518d\u662f\u8def\u5f84\u6570\uff0c\u800c\u662f\u6700\u77ed\u8def\uff0c\u5047\u8bbe $A_{ik}$ \u8868\u793a $i$ \u5230 $k$ \u7ecf\u8fc7 $x$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c $A_{kj}$ \u8868\u793a $k$ \u5230 $j$ \u7ecf\u8fc7 $y$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u90a3\u4e48 $C_{ij}$ \u5c31\u8868\u793a $i$ \u5230 $j$ \u7ecf\u8fc7 $x+y$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u3002\n```cpp\nmatrix operator *(matrix &a, atrix &b) {\n\tmatrix c;\n\tfor (register int i = 1; i <= cnt; i++)\n\t\tfor (register int j = 1; j <= cnt; j++)\n\t\t\tfor (register int k = 1; k <= cnt; k++)\n\t\t\t\tc[i][j] = min(c[i][j], a[i][k] + b[k][j]);\n\treturn c;\n}\n```\n   - \u4f46\u5982\u679c\u4f60\u518d\u8ba4\u771f\u770b\u770b\u9898\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\u660e\u663e\u4f1a\u70b8\u554a!\u4e8e\u662f\u6211\u4eec\u8981\u4f18\u5316\uff0c\u628a\u6570\u636e\u79bb\u6563\u5316\u3002\n```cpp\nmemset(mat.a, 0x3f3f3f3f, sizeof(co.a));\ncin >> n >> t >> s >> e;\nfor(int i = 1; i <= t; i++)\n{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(!num[y]) num[y] = ++cnt;//cnt\u662f\u7f16\u53f7\uff0c\u7528\u4e8e\u6807\u8bb0\u79bb\u6563\u5316\u4e2d\u6570\u636e\u7684\u7f16\u53f7\n\t\tif(!num[z]) num[z] = ++cnt;//cnt\u4e00\u5b9a\u8981\u5148\u52a0\uff0c\u4e0d\u7136\u4f1awa\u4e00\u4e2a\u70b9\n\t\tmat.a[num[y]][num[z]] = mat.a[num[z]][num[y]] = x;//\u5bf9\u77e9\u9635\u7684\u9884\u5148\u5904\u7406\n}\n```\n\u5b8c\u6574\u65e0\u6ce8\u91ca\u5065\u5eb7\u98df\u7528\u7248\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint num[1000005], n, s, t, e, cnt;\nstruct matrix\n{\n\t\tint a[500][500];\n\t\tmatrix operator * (const matrix &x) const\n\t\t{\n\t\t\tmatrix c;\n\t\t\tmemset(c.a, 0x3f3f3f3f, sizeof(c.a));\n\t\t\tfor(int k = 1; k <= cnt; k++)\n \t\t\t\tfor(int i = 1; i <= cnt; i++)\n\t\t\t\t\tfor(int j = 1; j <= cnt; j++)\n\t\t\t\t\t\tc.a[i][j] = min(c.a[i][j], a[i][k] + x.a[k][j]);\n\t\t\treturn c;\t\t\n\t\t}\n}mat, ans;\nvoid power()\n{\n\t\tn--, ans = mat;\n\t\twhile(n)\n\t\t{\n\t\t\tif(n & 1) ans = ans * mat;\n\t\t\tmat = mat * mat, n >>= 1;\n\t\t}\n}\nint main()\n{\n\t\tmemset(mat.a, 0x3f3f3f3f, sizeof(mat.a));\n\t\tint x, y, z;\n\t\tcin >> n >> t >> s >> e;\n\t\tfor(int i = 1; i <= t; i++)\n\t\t{\n\t\t\tscanf(\"%d %d %d\",&x,&y,&z);\n\t\t\tif(!num[y]) num[y] = ++cnt;\n\t\t\tif(!num[z]) num[z] = ++cnt;\n\t\t\tmat.a[num[y]][num[z]] = mat.a[num[z]][num[y]] = x;\n\t\t}\n\t\tpower();\n\t\tcout << ans.a[num[s]][num[e]];\n\t\treturn 0;\n}\n```",
        "postTime": 1642578894,
        "uid": 501287,
        "name": "YuanZihan1225",
        "ccfLevel": 0,
        "title": "P2886"
    },
    {
        "content": "[\u66f4\u597d\u7684\u89c2\u770b\u4f53\u9a8c](https://www.cnblogs.com/zhenglier/p/11155878.html)\n\n## \u77e9\u9635\u4e58\u6cd5\uff08\u5feb\u901f\u5e42\uff09\n\n\u4e3a\u8bf4\u660e\u65b9\u4fbf\uff0c\u8fd9\u91cc\u8ba9$k$\u4e3a\u70b9\u6570\uff0c$n$\u4e3a\u8def\u5f84\u957f\u5ea6\u3002\n\n\u5148\u5c06\u70b9\u90fd\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u6700\u540e\u7684\u70b9\u53ea\u6709$2k$\u4e2a\u3002\n\n\u5148\u8003\u8651\u4e00\u79cd\u66b4\u529b\uff0c\u6bcf\u6b21\u7528$O(k^3)$\u7684\u590d\u6742\u5ea6\u6765\u66b4\u529b\u66f4\u65b0\uff0c\u8bbe\u5f53\u524d\u957f\u5ea6$l$\u70b9\u7684\u4e24\u4e24\u6700\u77ed\u8def\u77e9\u9635\u4e3a$S$\uff0c\u73b0\u5728\u8981\u8f6c\u79fb\u5230$l+1$\u65f6\u7684\u6700\u77ed\u8def\u77e9\u9635$T$\u3002\u6211\u4eec\u8003\u8651\u7528\u6bcf\u6761\u8fb9\u66f4\u65b0\uff0c\u5bf9\u4e8e\u67d0\u6761\u4ece$x$\u8fde\u5411$y$\u7684\u957f\u5ea6\u4e3a$z$\u7684\u8fb9\uff0c\u5bf9\u4e8e\u4efb\u4e00\u70b9$i$,\u6709\uff1a\n\n$$T[i][y]=min(T[i][y],T[i][x]+z)$$\n\n\u53e6\u5916\uff0c\u6bcf\u6b21\u66f4\u65b0\u65f6\uff0c$T$\u77e9\u9635\u7684\u521d\u59cb\u503c\u4e3a\u65e0\u9650\u5927\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$O(nk^3)$\u7684\u590d\u6742\u5ea6\u53bb\u505a\u8fd9\u9053\u9898\u4e86\u3002\u4f46\u8fd9\u660e\u663e\u4e0d\u884c\u3002\n\n\u6211\u4eec\u8bbe\u6ca1\u6709\u76f4\u63a5\u8fde\u901a\u7684\u4e24\u4e2a\u70b9\u8ddd\u79bb\u4e3a\u65e0\u9650\u5927\uff0c\u6784\u5efa\u51fa\u90bb\u63a5\u77e9\u9635$D$,\u5c31\u53ef\u4ee5\u9b54\u6539\u4e00\u4e0b\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u6539\u6210\uff1a\n\n$$T[i][j]=min(T[i][x]+D[x][j])$$\n\n\u5176\u4e2d$x$\u4e3a\u81ea\u5df1\u679a\u4e3e\u7684\u4e2d\u95f4\u8282\u70b9\uff0c\u7136\u540e\u5c31\u51fa\u73b0\u7684\u5982\u4e0b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=0;i<k;++i){\n    for(int j=0;j<k;++j){\n        for(int l=0;l<k;++l){\n            ret.a[i][j]=min(ret.a[i][j],a.a[i][l]+b.a[l][j]);\n\t\t}\n\t}\n}\n```\n\u53d1\u73b0\uff0c\u8fd9\u4e0d\u662f\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u5417\uff1f\n\n\u56e0\u4e3a\u53d6\u6700\u5c0f\u503c\u6ee1\u8db3\u53ef\u52a0\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u77e9\u9635\u5feb\u901f\u5e42\u662f\u53ef\u884c\u7684\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u628a\u590d\u6742\u5ea6\u4f18\u5316\u4e3a$O(lognk^3)$\n\n\u7136\u540e\uff0c\u6211\u5c31\u4e0d\u5f00O2\u8fc7\u4e0d\u4e86\u4e86\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4ece\u6e90\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u6570\u6700\u591a\u53ea\u6709$k+1$\uff08\u56e0\u4e3a\u5373\u4f7f\u8d70\u8fc7\u6bcf\u6761\u8fb9\u90fd\u53d1\u73b0\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u4e5f\u53ea\u80fd\u53d1\u73b0\u8fd9\u4e48\u591a\u70b9\u3002\uff09\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u7528\u6e90\u70b9\u80fd\u5230\u7684\u70b9\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u53ef\u4ee5\u5c06\u70b9\u6570\u4ece$2k$\u5230$k$\uff0c\u4ece\u800c\u5728\u77e9\u9635\u4e58\u6cd5\u65f6\u7701\u6389**8\u500d**\u5e38\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e0d\u5f00O2AC\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=1000010,M=200;\nint n,k,s,t;\nstruct data{\n    ll a[M][M];\n    data(){memset(a,0,sizeof a);}\n}a;\ndata operator*(const data&a,const data&b){\n    data ret;\n    memset(ret.a,0x3f,sizeof ret.a);\n    for(int i=0;i<k;++i){\n        for(int j=0;j<k;++j){\n            for(int l=0;l<k;++l){\n                ret.a[i][j]=min(ret.a[i][j],a.a[i][l]+b.a[l][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\ndata mpow(data a,int n){\n    data ret=a;\n    n--;\n    while(n){\n         if(n&1)ret=ret*a;\n         n/=2;\n         a=a*a;\n\t}\n\treturn ret;\n}\nint tot,bian[N],nxt[N],head[N];\nvoid add(int x,int y){\n    tot++,bian[tot]=y,nxt[tot]=head[x],head[x]=tot;\n}\nstruct edge{\n    int x,y;\n    ll z;\n}e[M];\nint vis[N];\nvector<int>v;\nvoid dfs(int x){\n    if(vis[x])return;\n    v.push_back(x);\n    vis[x]=1;\n\tfor(int i=head[x];i;i=nxt[i]){\n\t    int y=bian[i];\n\t    dfs(y);\n\t}\n}\nint main(){\n    cin>>n>>k>>s>>t;\n    memset(a.a,0x3f,sizeof a.a);\n    for(int i=1;i<=k;++i){\n        scanf(\"%lld%d%d\",&e[i].z,&e[i].x,&e[i].y);\n        add(e[i].x,e[i].y);\n        add(e[i].y,e[i].x);\n\t}\n\tdfs(s);\n\tsort(v.begin(),v.end());\n\tfor(int i=1;i<=k;++i){\n\t\tif(!vis[e[i].x])continue;\n\t\tint x=lower_bound(v.begin(),v.end(),e[i].x)-v.begin(),\n\t\t    y=lower_bound(v.begin(),v.end(),e[i].y)-v.begin();\n\t    a.a[y][x]=a.a[x][y]=min(a.a[x][y],e[i].z);\n\t    \n\t}\n    data ret=mpow(a,n);\n    s=lower_bound(v.begin(),v.end(),s)-v.begin();\n    t=lower_bound(v.begin(),v.end(),t)-v.begin();\n    cout<<ret.a[s][t]<<endl;\n}\n```",
        "postTime": 1562640070,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    },
    {
        "content": "# \u8fd9$TM$\u662f$floyd$ \uff01\uff01\uff01\n\u8bef\u4eba\u5b50\u5f1f\u3002\n\u8fd9\u662f\u65b0\u7684\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\u800c\u5df2\u3002\n\u6211\u4eec\u6765\u5bf9\u6bd4\u4e00\u4e0b\u3002\n## $$f[i][j] = min(f[i][j],f[i][k] + f[k][j])$$\n$This\\ Floyd$\n\n# $but$\n\n\u8fd9\u9053\u9898\u7684\u60c5\u51b5\u662f\u3002\n\n\u5047\u8bbe$A_{(n * n)},B_{(n * n)},C_{(n * n)}$s\u662f\u4e09\u4e2a\u77e9\u9635\n\n\u5b9a\u4e49\u65b0\u8fd0\u7b97\u3002 $A*B$ \u4e3a\n\n# $$C[i,j] = \\min_{k = 1}^{b}{A[i,k] + B[k,j]}$$\n\n\u7136\u540e\u77e9\u9635\u5feb\u901f\u5e42\u3002\n\n# \u6211\u771f\u7684\u662f\u4f5b\u4e86\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int Maxn = 100 + 10;\nint L , m , S , T , mp[Maxn * 10] , n;\nvoid id(int x){ if(!mp[x]) mp[x] = ++n;}\nstruct Matrix{\n\tint mat[Maxn][Maxn];\n\tMatrix(){memset(mat,0x3f,sizeof(mat));}\n\tinline Matrix operator *(const Matrix & a)const{\n\t\tMatrix b;\n\t\tfor(int k = 1;k <= n;k++)\n\t\t\tfor(int i = 1;i <= n;i++)\n\t\t\t\tfor(int j = 1;j <= n;j++){\n\t\t\t\tb.mat[i][j] = min(b.mat[i][j] ,mat[i][k] + a.mat[k][j]);\n\t\t\t}\n\t\treturn b;\n\t}\n\n};\nMatrix st;\nMatrix q_pow(Matrix a , int p){\n\tif(p == 1)return a;\n\tMatrix t = a;p--;\n\twhile(p){\n\t\tif(p & 1)t = t * a;\n\t\ta = a * a;\n\t\tp >>= 1;\n\t}\n\treturn t;\n}\nint main()\n{ \n\tscanf(\"%d%d%d%d\",&L,&m,&S,&T);\n\tfor(int i = 1;i <= m;i++){\n\t\tint w  ,u , v;\n\t\tscanf(\"%d%d%d\",&w,&u,&v);\n\t\tid(u)  , id(v);\n\t\tst.mat[mp[u]][mp[v]] = w;\n\t\tst.mat[mp[v]][mp[u]] = w;\n\t}\n\tst = q_pow(st,L);\n\tprintf(\"%d\\n\",st.mat[mp[S]][mp[T]]);\n\treturn 0;\n}\n```",
        "postTime": 1538810245,
        "uid": 12066,
        "name": "star_eternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2886 \u3010[USACO07NOV]\u725b\u7ee7\u7535\u5668Cow Relays\u3011"
    }
]