[
    {
        "content": "\u6ce8\u610f\u5230\uff0c\u672c\u9898\u7684\u7a7a\u95f4\u9650\u5236\u5341\u5206\u7684\u7d27\uff0c\u65e0\u6cd5\u652f\u6301\u6211\u4eec\u5b58\u4e0b\u6574\u68f5 trie\uff0c\u4f46\u662f\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5f88\u5c0f\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u79bb\u7ebf\u7684\u7c7b\u4f3c\u6574\u4f53\u4e8c\u5206\u548c tarjan \u6c42 LCA \u90a3\u6837\u7684\u7b97\u6cd5\uff0c\u628a\u6240\u6709\u7684\u6570\u636e\u653e\u5728\u4e00\u8d77\u904d\u5386\u4e00\u904d trie\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002\r\n\r\n\u5148\u8003\u8651\u5982\u4f55\u627e\u5230\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5728\u5b57\u7b26\u96c6\u4e2d\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff1a\u5f53\u5b57\u5178\u6811\u5efa\u7acb\u5230\u7b2c $n$ \u5c42\uff0c\u800c\u5b57\u5178\u4e2d\u5339\u914d\u81f3\u5f53\u524d\u7ed3\u70b9\u7684\u96c6\u5408\u4e3a $S$\uff0c\u8be2\u95ee\u4e2d\u5339\u914d\u5230\u5f53\u524d\u7ed3\u70b9\u7684\u96c6\u5408\u4e3a $T$\uff0c\u663e\u7136 $S$ \u4e0e $T$ \u4e2d\u4efb\u610f\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u524d $n$ \u4f4d\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u5c06 $S$ \u548c $T$ \u6309\u7167\u7b2c $n+1$ \u4f4d\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u5b57\u7b26\u96c6\u628a\u5b83\u4eec\u62c6\u5f00\uff0c\u7ee7\u7eed\u5f80\u4e0b\u9012\u5f52\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u53ef\u4ee5\u53c2\u8003\u6574\u4f53\u4e8c\u5206\u76f8\u5173 blog\uff0c\u8bb0\u5f55\u5f97\u5230\u7684\u7b54\u6848\u4e3a $goal$\uff1a\r\n\r\n```cpp\r\nvoid qry(int n, int l, int r, int dl, int dr) {\r\n    if (l > r || dl > dr) return;\r\n    stable_sort(S + l, S + r + 1, [&n](int a, int b) { return s[a][n] < s[b][n]; });\r\n    stable_sort(T + dl, T + dr + 1, [&n](int a, int b) { return t[a][n] < t[b][n]; });\r\n\r\n    for (int now = 0, i = l, j, u = dl, v; j = i, v = u, now < 27; i = j, u = v, now++) {\r\n        while (j <= r && s[S[j]][n] == ug[now]) j++;\r\n        while (v <= dr && t[T[v]][n] == ug[now]) v++;\r\n        if (!now && i < j)\r\n            for (int x = u; x < v; x++) goal[T[x]] = S[i];\r\n        else qry(n + 1, i, j - 1, u, v - 1);\r\n    }\r\n}\r\n```\r\n\r\n\u63a5\u4e0b\u6765\u7edf\u8ba1\u53e6\u4e00\u90e8\u5206\u7b54\u6848\uff0c\u4e0e\u4e0a\u9762\u7684\u505a\u6cd5\u76f8\u540c\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u5982\u679c\u5b57\u7b26\u4e32 $s$ \u80fd\u8d21\u732e\u5230 $t$\uff0c\u5e94\u6709 $index(s)\\le goal(t)$\uff0c\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u4ee3\u7801\u5982\u4e0b\uff0c\u8bb0\u5f55\u5f97\u5230\u7684\u7b54\u6848\u4e3a $ans$\uff1a\r\n\r\n```cpp\r\nvoid work(int n, int l, int r, int dl, int dr) {\r\n    if (l > r || dl > dr) return;\r\n    stable_sort(S + l, S + r + 1, [&n](int a, int b) { return s[a][n] < s[b][n]; });\r\n    stable_sort(T + dl, T + dr + 1, [&n](int a, int b) { return t[a][n] < t[b][n]; });\r\n    for (int now = 0, i = l, j, u = dl, v; j = i, v = u, now < 27; i = j, u = v, now++) {\r\n        while (j <= r && s[S[j]][n] == ug[now]) j++;\r\n        while (v <= dr && t[T[v]][n] == ug[now]) v++;\r\n        if (!now) continue;\r\n        for (int x = i; x < j; x++) add(S[x], 1);\r\n        for (int x = u; x < v; x++) ans[T[x]] += get(goal[T[x]]);\r\n        clr();\r\n        work(n + 1, i, j - 1, u, v - 1);\r\n    }\r\n}\r\n```\r\n\r\n\u5219\u6700\u7ec8\u7b54\u6848\u4e3a $goal+ans$\uff0c\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 30010, M = 900010;\r\nint n, q, S[N], T[N], goal[N], stk[N], tree[N], ans[N];\r\nchar s[N][32], t[N][32], ug[27];\r\ninline int lowbit(int x) { return x & -x; }\r\ninline void add(int x, int v) {\r\n    if (v == 1) stk[++stk[0]] = x;\r\n    for (; x <= n; x += lowbit(x)) tree[x] += v;\r\n}\r\ninline int get(int x, int res = 0) {\r\n    for (; x; x -= lowbit(x)) res += tree[x];\r\n    return res;\r\n}\r\ninline void clr() {\r\n    while (stk[0]) add(stk[stk[0]--], -1);\r\n}\r\ntemplate<typename V>\r\nvoid solve(int n, int l, int r, int dl, int dr, V &&f) {\r\n    if (l > r || dl > dr) return;\r\n    stable_sort(S + l, S + r + 1, [&n](int a, int b) { return s[a][n] < s[b][n]; });\r\n    stable_sort(T + dl, T + dr + 1, [&n](int a, int b) { return t[a][n] < t[b][n]; });\r\n    for (int now = 0, i = l, j, u = dl, v; j = i, v = u, now < 27; i = j, u = v, now++) {\r\n        while (j <= r && s[S[j]][n] == ug[now]) j++;\r\n        while (v <= dr && t[T[v]][n] == ug[now]) v++;\r\n        f(now, i, j, u, v);\r\n        if (now) solve(n + 1, i, j - 1, u, v - 1, f);\r\n    }\r\n}\r\nint main() {\r\n    scanf(\"%d\", &n), iota(ug + 1, ug + 27, 'a'), iota(S, S + N, 0), iota(T, T + N, 0);\r\n    for (int i = 1; i <= n; i++) scanf(\" %s\", s[i]);\r\n    scanf(\"%d\", &q);\r\n    for (int i = 1; i <= q; i++) scanf(\" %s\", t[i]);\r\n    solve(0, 1, n, 1, q, [](int now, int i, int j, int u, int v) {\r\n        if (!now && i < j)\r\n            for (int x = u; x < v; x++) goal[T[x]] = S[i];\r\n    });\r\n    iota(S, S + N, 0), iota(T, T + N, 0), for_each(goal + 1, goal + q + 1, [](int &x) { x = x ? x : n; });\r\n    solve(0, 1, n, 1, q, [](int now, int i, int j, int u, int v) {\r\n        if (!now) return;\r\n        for (int x = i; x < j; x++) add(S[x], 1);\r\n        for (int x = u; x < v; x++) ans[T[x]] += get(goal[T[x]]);\r\n        clr();\r\n    });\r\n    for (int i = 1; i <= q; i++) printf(\"%d\\n\", goal[i] + ans[i]);\r\n    return 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1667454880,
        "uid": 369207,
        "name": "Watware",
        "ccfLevel": 5,
        "title": "P7937 [COCI2007-2008#5] BAZA \u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u662f\u76ee\u524d\u65f6\u95f4\u6700\u52a3\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u7a7a\u95f4\u53ea\u9700\u8981 5MB \u800c\u4e14\u4ee3\u7801\u8f83\u77ed\u3002\n\n\u6821\u5185\u6a21\u62df\u8d5b\u51fa\u8fc7\u65e0\u4e25\u82db\u7a7a\u95f4\u9650\u5236\u4f46\u9700\u8981\u65f6\u95f4\u5c0f\u4e8e 300ms \u7684~~\u6bd2\u7624\u5361\u5e38~~\u7248\u672c\uff0c\u53ef\u4ee5\u79bb\u7ebf\u540e\u7528\n`trie` + `std::unordered_map ` \u505a\u8fc7\u53bb\uff0c\u5176\u5b9e\u6211\u4e0d\u89c9\u5f97\u8fd9\u4e2a\u7248\u672c\u7b80\u5355\uff08\uff09\u3002\n\n\n## \u5206\u6790\n\n\u672c\u9898\u7684\u4e00\u4e2a\u7279\u2191\u6027\u2193\u662f\u7a7a\u95f4\u9650\u523632MB\uff0c\u8fd9\u4f7f\u672c\u9898\u65e0\u6cd5\u5efa\u7acb\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a  $ \\mathcal{O}(N \\cdot \\left|S\\right| \\cdot c) $ \u7684 `trie` \u6811\uff08$\\left|S\\right|$  \u4e3a\u6240\u6709\u5b57\u7b26\u4e32\u6700\u5927\u957f\u5ea6\uff0c$c$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff09\uff0c\u53ea\u80fd\u5f00\u4e00\u4e9b\u6570\u7ec4\u3002\n   \n\u9996\u5148\u8003\u8651\u5c06\u67e5\u8be2\u79bb\u7ebf\uff0c\u5e76\u6839\u636e\u9898\u610f\u89c2\u5bdf\u53d1\u73b0\u7b54\u6848\u548c\u5b57\u7b26\u4e32\u524d\u7f00\u6709\u5173\uff0c\u800c\u4e14 $\\left|S\\right|<30$\u3002\n\n\u4e0d\u96be\u60f3\u5230\u6539\u53d8\u679a\u4e3e\u987a\u5e8f\uff0c\u957f\u5ea6\u4ece $1$ \u5230 $30$ \u6bcf\u6b21\u5c06\u6570\u636e\u5e93\u4e2d\u5b57\u7b26\u4e32\u6309**\u957f\u5ea6\u4e3a** $i$ **\u7684\u524d\u7f00\u5b50\u4e32**\u7684**\u5b57\u5178\u5e8f**\u6392\u5e8f\uff08\u4ee5\u4e0b\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff09\uff0c\u5e76\u5c06\u957f\u5ea6\u4e0d\u8db3\u7684\u5b57\u7b26\u4e32\u672b\u5c3e\u7528\u5b57\u6bcd\u4e4b\u5916\u7684\u5b57\u7b26\u8865\u9f50\u3002\u8ba1\u7b97\u5728\u5339\u914d\u6210\u529f\u524d\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u4e0e\u5f53\u524d\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u5b58\u5728\u957f\u5ea6\u4e3a $i$ \u7684**\u516c\u5171\u524d\u7f00\u5b50\u4e32**\u3002\n\n\u6392\u5e8f\u4f9d\u636e\u548c\u7ed3\u6784\u4f53\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\nint cmp(const char *a,const char *b){\n\tfor(int i=0;i<len;++i){\n\t\tif(a[i]>b[i]) return 0;\n\t\tif(a[i]<b[i]) return 1;\n\t}\n\treturn 2; //\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u76f8\u540c\u8fd4\u56de 2\n}\n\nstruct str{\n\tchar s[32];\n\tint id;\n\tbool friend operator <(const str &a,const str &b){\n\t\treturn cmp(a.s,b.s)==2 ? a.id<b.id : cmp(a.s,b.s);\n\t}\n}b[N];\n```\n\n\n\u56e0\u4e3a\u5339\u914d\u6210\u529f\u540e\u5c31\u505c\u6b62\u4e86\uff0c\u6240\u4ee5\u8981\u9884\u5148\u5904\u7406\u6bcf\u4e2a\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\u4f1a\u5339\u914d\u5230\u6570\u636e\u5e93\u4e2d**\u7b2c\u51e0\u4e2a\u5b57\u7b26\u4e32**\u540e\u505c\u6b62\uff0c\u53ef\u4ee5\u7528\u7a7a\u95f4\u5e76\u4e0d\u5927\u7684 `std::unordered_map ` \u914d\u5408\u5b57\u7b26\u4e32\u54c8\u5e0c\u5904\u7406\uff0c\u7528\u6570\u7ec4 $pos$ \u8bb0\u5f55\u3002\n\n\u4e4b\u540e\u67e5\u627e\u4e0b\u6807\u6700\u5c0f\u7684\u62e5\u6709**\u957f\u5ea6\u4e3a** $i$ **\u7684\u516c\u5171\u524d\u7f00\u5b50\u4e32**\u7684\u5b57\u7b26\u4e32\u5728\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\uff0c\u7528\u6570\u7ec4 $pre$ \u8bb0\u5f55\uff0c\u4ee5\u53ca\u7528 $npos_j$ \u8bb0\u5f55 $pos_j$ \u7684\u5f53\u524d\u4f4d\u7f6e\u3002\u5219\u5bf9\u4e8e\u7b2c $j$ \u4e2a\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\uff0c\u5f53\u524d\u957f\u5ea6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $npos_j-pre_j+1$\u3002\n\n\u5982\u679c\u7b2c $j$ \u4e2a\u5b57\u7b26\u4e32\u65e0\u6cd5\u5728\u6570\u636e\u5e93\u4e2d\u627e\u5230\u5339\u914d\u7684\uff08\u4e5f\u5c31\u662f**\u6ca1\u6709** $pos_j$ \u7684\u60c5\u51b5\uff09\uff0c\u5c31\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230\u4e0b\u6807\u6700\u5927\u7684\u62e5\u6709**\u957f\u5ea6\u4e3a** $i$ **\u7684\u516c\u5171\u524d\u7f00\u5b50\u4e32**\u7684\u5b57\u7b26\u4e32\u5728\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e $r$\uff0c\u5f53\u524d\u957f\u5ea6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $r-pre_j+1$\u3002\n\n\u7edf\u8ba1\u5b8c\u8d21\u732e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nbool ST;\nusing std::lower_bound;\n#define lrb lower_bound\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N=3e4+5,inf=0x3f3f3f3f;\n\nstd::unordered_map<ull,int> ump;\nint n,q,len,pos[N],p[N],minp[N],ans[N];\n\nint cmp(const char *a,const char *b){\n\tfor(int i=0;i<len;++i){\n\t\tif(a[i]>b[i]) return 0;\n\t\tif(a[i]<b[i]) return 1;\n\t}\n\treturn 2;\n}\n\nstruct str{\n\tchar s[32];\n\tint id;\n\tbool friend operator <(const str &a,const str &b){\n\t\treturn cmp(a.s,b.s)==2 ? a.id<b.id : cmp(a.s,b.s);\n\t}\n}b[N],tp;\nchar c[N][35];\n\nvoid sol(char *s){for(int i=0;i<32;++i) if(!isalpha(s[i])) s[i]='z'+1;}\null mkhash(char *s){\n\tull res=0;\n\tfor(int i=0;i<32;++i){\n\t\tif(isalpha(s[i])) res*=27,res+=s[i]-'a'+1;\n\t\telse return res;\n\t}\n}\n\nbool ED;\nint main(){\n\tstd::cerr<<(&ED-&ST)*1.0/1024.0/1024.0<<'\\n'\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%s\",b[i].s),b[i].id=ump[mkhash(b[i].s)]=i,sol(b[i].s);\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;++i) scanf(\"%s\",c[i]),pos[i]=ump[mkhash(c[i])];\n\tfor(len=1;len<=30;++len){\n\t\tstd::sort(b+1,b+1+n);\n\t\tmemset(minp,0,sizeof minp);\n\t\tmemset(p,0,sizeof p)\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tp[b[i].id]=i;\n\t\t\tminp[b[i].id]= cmp(b[i].s,b[i-1].s)==2 ? minp[b[i-1].id] : i;\n\t\t}\n\t\t\t\n\t\tfor(int i=1,l,r;i<=q;++i){\n\t\t\tif(!isalpha(c[i][len-1])) continue;\n\t\t\tif(!pos[i]){\n\t\t\t\tfor(int j=0;j<len;++j) tp.s[j]=c[i][j];\n\t\t\t\tsol(tp.s);\n\t\t\t\ttp.id=0,l=lrb(b+1,b+1+n,tp)-b;\n\t\t\t\ttp.id=n+1,r=lrb(b+1,b+1+n,tp)-b-1;\n\t\t\t\tans[i]+=r-l+1;\n\t\t\t}else{\n\t\t\t\tans[i]+=p[pos[i]]-minp[pos[i]]+1;\n\t\t\t} \n\t\t}\n\t}\n\tfor(int i=1;i<=q;++i) printf(\"%d\\n\",ans[i]+(pos[i] ? pos[i] : n));\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(\\left|S\\right| \\cdot (N+Q \\cdot \\log N)) $ \u8dd1\u5f97\u597d\u6162\u3002\n",
        "postTime": 1667406635,
        "uid": 411778,
        "name": "aleksey_RoFtaCD",
        "ccfLevel": 0,
        "title": "P7937 [COCI2007-2008#5] BAZA \u9898\u89e3"
    },
    {
        "content": "\u80cc\u666f\uff1a\u6821\u5185\u6a21\u62df\u8d5b\u51fa\u8fc7\u8fd9\u9898\u7684\u5f31\u5316\u7248\uff0c\u5f53\u65f6 **trie+unrodered_map** \u8fd9\u79cd\u5927\u7a7a\u95f4\u7684\u4e1c\u897f\u90fd\u653e\u8fc7\u4e86\uff0c\u65f6\u95f4\u7f29\u7d27\u4e86\uff0c\u8981\u6c42 $O(|\\sum|)$ \u3002\u73b0\u5728\u56de\u6765\u505a\u8fd9\u4e2a\u5361\u7a7a\u95f4\u7684\u7248\u672c\u3002\n## \u89e3\u6cd5\n\u628a\u6bcf\u4e2a\u4e32\u90fd\u7528 **'{'** \u586b\u5145\u4e3a\u957f\u5ea6 $30$ \u7684\u4e32\uff08\u5176\u4ed6\u5b57\u7b26\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u6ee1\u8db3\u7b54\u6848\uff0c**'{'** \u7684 **ASCII** \u7801\u6bd4 **'z'** \u5927 $1$\uff09\u3002\n\n\u628a\u6240\u6709\u4e32\u6309\u524d $1$ \u4f4d\u524d\u7f00\uff0c\u524d $2$ \u4f4d\u524d\u7f00\uff0c...\uff0c\u524d $30$ \u4f4d\u524d\u7f00\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u548c\u539f\u6765\u7b2c $j$ \u4e2a\u4e32\u524d $i$ \u4e3a\u524d\u7f00\u76f8\u540c\u7684\u4e32\uff08\u5305\u62ec\u81ea\u5df1\uff09\uff0c\u8bb0\u5f55\uff1a\u8fd9\u6837\u7684\u4e32\u7684\u4e2a\u6570\uff08\u76f4\u63a5\u6c42\u5373\u53ef\uff09\uff0c\u8bb0\u4e3a $f_{i,j}$\uff1b\u8fd9\u6837\u7684\u4e32\u6709\u591a\u5c11\u4e2a\u5728 $j$ \u524d\u9762\uff08\u5305\u62ec\u81ea\u5df1\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6c42\uff09\uff0c\u8bb0\u4e3a $g_{i,j}$\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u4e5f\u50cf\u4e0a\u9762\u90a3\u6837\u586b\u5145\u3002\u5148\u4e8c\u5206\u524d $30$ \u4f4d\u524d\u7f00\u5224\u65ad\u7ed9\u5b9a\u4e32\u4e2d\u7b49\u4e8e\u67e5\u8be2\u4e32\u7684\u4e32\u6700\u5c0f\u7684\u4f4d\u7f6e\uff08\u6216\u62a5\u544a\u6ca1\u6709\uff09\u3002\n\n### 1.\u82e5\u7ed9\u5b9a\u4e32\u4e2d\u6709\u7b49\u4e8e\u67e5\u8be2\u4e32\u7684\u4e32\u3002\n\u8bbe\u6700\u5c0f\u4f4d\u7f6e\u4e3a $x$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709 $i$ \u7edf\u8ba1\u7ed9\u5b9a\u7684\u4e32\u6709\u591a\u5c11\u4e2a\u548c\u67e5\u8be2\u4e32**\u6070\u6709**\u524d $i$ \u4f4d\u90fd\u4e00\u6837\uff0c\u4e14\u4f4d\u7f6e\u5728 $x$ \u524d\u9762\u3002\u8fd9\u4e2a\u4e2a\u6570\u8bbe\u4e3a $F_i$ \u3002\u5219\u7b54\u6848\u5c31\u662f $\\sum\\limits_{i=1}^{30} i\\times F_i+x$\u3002\n\n\u521a\u624d\u8bb0\u5f55\u7684 $g_{i,x}$ \u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e32\u6070\u6709\u524d $i,i+1,...,30$ \u4f4d\u4e0e $x$ \u76f8\u540c\u4e14\u4f4d\u7f6e $\\le j$\u3002\u5bf9 $g_{,x}$ \u505a\u5dee\u5206\uff08\u5373 $g_{i,x}$ \u51cf\u53bb $g_{i+1,x}$\uff09\u540e $g_{,x}$ \u5c31\u662f $F$ \u4e86\u3002\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u8bbe\u67e5\u8be2\u4e32\u5927\u5c0f\u4e3a $len$\uff0c\u8fd9\u91cc\u7b2c $x$ \u4e2a\u4e32\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u53d8\u6210\u4e86 $30$\uff0c\u56e0\u4e3a\u6211\u4eec\u586b\u5145\u4e86\u3002\u628a $F_{len}$ \u52a0\u4e0a $1$ \uff0c$F_{30}$ \u51cf $1$ \u4e3a $0$\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\uff0c\u8fd9\u91cc\u4e32\u957f\u662f**\u5c0f\u4e8e** $30$ \u4e8e\u662f\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002 \n\n### 2.\u82e5\u7ed9\u5b9a\u4e32\u4e2d\u6ca1\u6709\u7b49\u4e8e\u67e5\u8be2\u4e32\u7684\u4e32\u3002\n\u5bf9\u4e8e\u6240\u6709 $i$ \u4e8c\u5206\u524d $i$ \u4f4d\u524d\u7f00\u627e\u51fa**\u4efb\u610f\u4e00\u4e2a**\u524d $i$ \u4f4d\u524d\u7f00\u548c\u67e5\u8be2\u4e32\u76f8\u540c\u7684\u4e32\uff0c\u8bb0\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a $y$\uff08\u6ca1\u6709\u7684\u8bdd\u5c31\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u4e86\uff09\uff0c\u8bbe $u_{i}=f_{i,y}$\u3002\n\n\u628a $u$ \u5dee\u5206\uff0c\u628a $u_{len}$ \u52a0\u4e0a $1$ \uff0c$u_{30}$ \u51cf $1$ \u4e3a $0$\u3002\u540c\u4e0a\u80fd\u5f97\u5230\u7b54\u6848\u4e3a\uff1a$\\sum\\limits_{i=1}^{30} i\\times u_i+n$\u3002\u76f4\u63a5\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log^2 n)$ (\u628a $30$ \u89c6\u4f5c\u4e0e $\\log n$ \u540c\u9636)\uff0c\u7a7a\u95f4\u662f $O(n)$\uff0c\u6709 $30$ \u500d\u5e38\u6570\u3002\n\n\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define P pair<int,int>\n#define fi first\n#define se second\nusing namespace std;\nconst int N=3e4+5;\nint n,m,t,b[35][N],c[35][N],tt[35],fir[N],d[N],e[35][N],ans,u[35],L,v[35][N];\nchar a[N][35],f[35];\nvector<P>g;\ninline int lb(int x){return x&-x;}\ninline void add(int wz,int x){for(;wz<=n;wz+=lb(wz)) d[wz]+=x;}\ninline int ask(int wz){int s=0;for(;wz;wz-=lb(wz)) s+=d[wz];return s;}\ninline bool cmp(int x,int y){return a[x][t]<a[y][t];}\ninline bool eq(char *A,char *B,int x)\n{\n\tfor(int i=0;i<=x;i++) if(A[i]!=B[i]) return 0;\n\treturn 1;\n}\ninline bool xd(char *A,char *B,int x)\n{\n\tfor(int i=0;i<=x;i++)\n\t{\n\t\tif(A[i]<B[i]) return 1;\n\t\tif(A[i]>B[i]) return 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]),t=strlen(a[i]);\n\t\tfor(int j=t;j<30;j++) a[i][j]='{';\n\t}\n\tfor(int i=1;i<=n;i++) b[0][i]=i;g.push_back({1,n});\n\tfor(t=0;t<30;t++)\n\t{\n\t\tfor(int i=1;i<=n;i++) b[t+1][i]=b[t][i];//\u53ea\u6709b\u7684t +1 \n\t\tfor(P &i:g) sort(b[t+1]+i.fi,b[t+1]+i.se+1,cmp);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(i==1||!eq(a[b[t+1][i-1]],a[b[t+1][i]],t)) c[t][++tt[t]]++,fir[tt[t]]=i;\n\t\t\telse c[t][tt[t]]++;\n\t\t}g.clear();\n\t\tfor(int i=1;i<=tt[t];i++) g.push_back({fir[i],fir[i]+c[t][i]-1});\n\t\tfor(P &i:g)\n\t\t{\n\t\t\tfor(int j=i.fi;j<=i.se;j++) add(b[t+1][j],1);\n\t\t\tfor(int j=i.fi;j<=i.se;j++) e[t][b[t+1][j]]=ask(b[t+1][j]),v[t][b[t+1][j]]=i.se-i.fi+1;\n\t\t\tfor(int j=i.fi;j<=i.se;j++) add(b[t+1][j],-1);\n\t\t}\n\t}\n\tscanf(\"%d\",&m);\n\twhile(m--)\n\t{\n\t\tscanf(\"%s\",f);L=strlen(f);for(int i=L;i<30;i++) f[i]='{';ans=0;\n\t\tint l=1,r=n,mid;\n\t\twhile(l<=r)\n\t\t{\n\t\t\tmid=(l+r)>>1;\n\t\t\tif(xd(f,a[b[30][mid]],29)) r=mid-1,t=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tif(!eq(f,a[b[30][t]],29)) t=-1;memset(u,0,sizeof(u));\n\t\tif(t!=-1)\n\t\t{\n\t\t\tt=b[30][t];for(int i=0;i<30;i++) u[i]=e[i][t];\n\t\t\tfor(int i=0;i<29;i++) u[i]-=u[i+1];u[L-1]+=u[29];u[29]=0;\n\t\t\tfor(int i=0;i<30;i++) ans+=(i+1)*u[i];\n\t\t\tprintf(\"%d\\n\",ans+t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int i=0;i<30;i++)\n\t\t\t{\n\t\t\t\tint l=1,r=n,mid;\n\t\t\t\twhile(l<=r)\n\t\t\t\t{\n\t\t\t\t\tmid=(l+r)>>1;\n\t\t\t\t\tif(xd(f,a[b[i+1][mid]],i)) r=mid-1,t=mid;\n\t\t\t\t\telse l=mid+1;\n\t\t\t\t}\n\t\t\t\tif(eq(f,a[b[i+1][t]],i)) t=b[i+1][t],u[i]=v[i][t];\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tfor(int i=0;i<29;i++) u[i]-=u[i+1];\n\t\t\tfor(int i=0;i<30;i++) ans+=(i+1)*u[i];\n\t\t\tprintf(\"%d\\n\",ans+n);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1667349761,
        "uid": 365021,
        "name": "masterhuang",
        "ccfLevel": 4,
        "title": "P7937 [COCI2007-2008#5] BAZA \u9898\u89e3"
    }
]