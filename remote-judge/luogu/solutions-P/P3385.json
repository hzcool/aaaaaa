[
    {
        "content": "\u4e0d\u8be6\u7ec6\u89e3\u91ca\u4e86\uff0c\u9700\u8981\u7684\u53ef\u4ee5\u770b\u770b\u522b\u7684\u9898\u89e3\u3002\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u7528spfa\u5224\u65ad\u5165\u961f\u6b21\u6570\u662f\u5426>=n\uff0c\u5982\u679c\u662f\u5219\u8bf4\u660e\u6709\u8d1f\u73af\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7531spfa\u7684\u677e\u5f1b\u7b97\u6cd5\u539f\u7406\u63a8\u5bfc\u6765\u3002\n\n\u6ce8\u610f\u4e00\u5b9a\u8981\u5224**\u5165\u961f\u6b21\u6570**\u800c\u4e0d\u662f\u677e\u5f1b\u6b21\u6570\uff0c\u6211\u770b\u51e0\u4e4e\u73b0\u6709\u6bcf\u4e00\u7bc7\u9898\u89e3\u5224\u7684\u90fd\u662f\u677e\u5f1b\u6b21\u6570\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u4e2a[hack](https://www.luogu.com.cn/discuss/show/202226)\u3002\n\nhack\u539f\u7406\u5f88\u7b80\u5355\uff1a\u5982\u679c\u5b58\u5728\u91cd\u8fb9\u5bfc\u81f4\u4e86\u591a\u6b21\u677e\u5f1b\uff0c\u90a3\u4e48\u5bf9\u677e\u5f1b\u6b21\u6570\u7684\u5224\u65ad\u5c31\u4f1a\u4ea7\u751f\u5f71\u54cd\u3002\u89e3\u51b3\u65b9\u5f0f\u5c31\u662f\u5224**\u5165\u961f\u6b21\u6570**\uff0c\u867d\u7136\u7565\u6162\uff0c\u4f46\u662f\u66f4\u7a33\u3002\n\n---\n\nupdate[2020.7.26]\uff1a\u5728\u5199\u5dee\u5206\u7ea6\u675f\u7684\u65f6\u5019\u60f3\u7528spfa\u5224\u65e0\u89e3\uff0c\u7136\u540e\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u601d\u8003\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u7ec4\u65b0\u7684hack\u6570\u636e\uff1a\n\n```\ninput:\n1\n4 6\n1 2 -3\n1 3 -2\n1 4 -1\n2 3 -6\n2 4 -5\n3 4 -4\noutput:\nNO\n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b9ryg21s.png)\n\n\n\u6ce8\u610f\u8fd9\u7ec4hack\u53ea\u5bf9\u7528**\u94fe\u5f0f\u524d\u5411\u661f**\uff08\u800c\u975evector\uff09\u5b58\u8fb9\u4e14\u5224\u7684\u662f**\u677e\u5f1b\u6b21\u6570**\uff08\u800c\u975e\u5165\u961f\u6b21\u6570\uff09\u7684\u6709\u6548\uff0c\u800c\u4e14\u8be5\u6570\u636e\u65e0\u91cd\u8fb9\u65e0\u81ea\u73af\uff0c\u6bd4discuss\u91cc\u9762\u7684\u90a3\u4e2a\u6570\u636e\u66f4\u6709\u8bf4\u670d\u529b\u3002\n\n\u9996\u5148hack\u539f\u7406\u5c31\u662f\u5bf9n\u53f7\u8282\u70b9\u8fdb\u884cn-1\u8f6e\u677e\u5f1b\uff0c\u6bcf\u8f6e\u90fd\u6709x($x \\in [1,n-1]$\uff09\u6b21\u677e\u5f1b\uff0c\u8fd9\u6837\u5c31\u80fd\u4ea7\u751fn^2\u7ea7\u522b\u7684\u677e\u5f1b\u6b21\u6570\u3002\n\n\u4f46\u662f\u5224\u5165\u961f\u6b21\u6570\u5c31hack\u4e0d\u6389\u4e86\uff0c\u6bcf\u8f6e\u7684\u7b2c\u4e00\u6b21\u677e\u5f1b\u4f1a\u8ba9n\u8282\u70b9\u5165\u961f\uff0c\u4f46n\u8282\u70b9\u53ea\u6709\u5728\u4e0b\u4e00\u8f6e\u624d\u4f1a\u51fa\u961f\uff1b\u56e0\u6b64\u672c\u8f6e\u7684\u5176\u4f59\u6240\u6709\u677e\u5f1b\u5168\u90e8\u65e0\u6cd5\u5bfc\u81f4\u5165\u961f\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define inf 0x3f3f3f3f\nusing namespace std;\nconst int MAXN=2010;\nconst int MAXM=3010;\nint n,m;\n\nint en=-1,eh[MAXN];\nstruct edge\n{\n\tint u,v,w,next;\n\tedge(int U=0,int V=0,int W=0,int N=0):u(U),v(V),w(W),next(N){}\n};edge e[MAXM<<1];\ninline void add_edge(int u,int v,int w)\n{\n\te[++en]=edge(u,v,w,eh[u]);eh[u]=en;\n}\nvoid input()\n{\n\tscanf(\"%d %d\",&n,&m);\n\ten=-1;\n\tmemset(eh,-1,sizeof(eh));\n\tint u,v,w;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d %d %d\",&u,&v,&w);\n\t\tadd_edge(u,v,w);\n\t\tif(w>=0)add_edge(v,u,w);\n\t}\n}\n\nint dis[MAXN],cnt[MAXN];\nbool vis[MAXN];\nqueue<int> q;\nvoid spfa()\n{\n\tfill(dis+1,dis+n+1,inf);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(vis,0,sizeof(vis));\n\t\n\twhile(!q.empty())q.pop();\n\tdis[1]=0;vis[1]=1;q.push(1);\n\t\n\tint u,v,w;\n\twhile(!q.empty())\n\t{\n\t\tu=q.front();vis[u]=0;q.pop();\n\t\tfor(int i=eh[u];i!=-1;i=e[i].next)\n\t\t{\n\t\t\tv=e[i].v;w=e[i].w;\n\t\t\tif(dis[u]+w<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tif(++cnt[v]>=n)//\u6ce8\u610f\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5224\u65ad\u3002\u4e00\u5b9a\u8981\u4fdd\u8bc1\u5728\u5224vis\u4e4b\u540e\uff0c\u5373\u5224\u5165\u961f\u6b21\u6570\uff1b\u800c\u4e0d\u662f\u5728\u5224vis\u4e4b\u524d\uff0c\u5373\u5224\u677e\u5f1b\u6b21\u6570\uff01\uff01\uff01\n\t\t\t\t\t{\n\t\t\t\t\t\tprintf(\"YES\\n\");return;\n\t\t\t\t\t}\n\t\t\t\t\tvis[v]=1;q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n}\n\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int i=1;i<=t;++i)\n\t{\n\t\tinput();\n\t\tspfa();\n\t}\n\treturn 0;\n}\n```\n\n---\n\nupdate[2020.7.28]\uff1a\u611f\u8c22AK\u65b0\u624b\u6751dalao\u63d0\u4f9b\u7684\u5224\u6700\u77ed\u8def\u5f84\u8fb9\u6570\u7684\u601d\u8def\n\n\u5728[fyy2603\u63d0\u4f9b\u7684hack](https://www.luogu.com.cn/discuss/show/168472)\u4e2d\uff0c\u63d0\u5230\u4e86\u6781\u9650\u6570\u636e\u53ef\u80fd\u7206int\u7684\u95ee\u9898\uff0c\u5176\u539f\u56e0\u5728\u4e8e\u8981\u8ba9\u5165\u961f\u6b21\u6570\u8fbe\u5230\u4e0a\u754cn\uff0c\u5219\u904d\u5386\u8fb9\u7684\u603b\u4e2a\u6570\u6700\u5927\u53ef\u8fbe$n^2$\u3002\n\n\u8003\u8651\u6362\u4e00\u79cd\u601d\u8def\uff0c\u6211\u4eec\u77e5\u9053\u5982\u679c\u6ca1\u6709\u8d1f\u73af\uff0c\u4ece1\u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5e94\u5f53\u662f\u4e0d\u5b58\u5728\u73af\u7684\uff1b\u800c\u5982\u679c\u5b58\u5728\u73af\u90a3\u5b83\u53ea\u53ef\u80fd\u662f\u8d1f\u73af\uff0c\u4e14\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u4f1a\u5728\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u65e0\u9650\u589e\u5927\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5224\u65ad1\u53f7\u70b9\u5230i\u53f7\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u662f\u5426<n\uff08\u5373\u7ecf\u8fc7\u7684\u70b9\u6570<=n\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u70b9\u88ab\u91cd\u590d\u7ecf\u8fc7\uff09\uff0c\u6765\u66f4\u9ad8\u6548\u5730\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\u3002\n\n\u800c\u8fd9\u4e5f\u5c31\u5b8c\u7f8e\u907f\u514d\u4e86\u6781\u9650\u6570\u636e\u7206int\u7684\u95ee\u9898\u3002\uff08~~\u76f4\u63a5\u5f00ll\u4e0d\u9999\u5417~~\uff09\n\n```cpp\n//\u5176\u4ed6\u90e8\u5206\u6ca1\u6709\u533a\u522b\nvoid spfa()\n{\n\tfill(dis+1,dis+n+1,inf);\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(vis,0,sizeof(vis));\n\t\n\twhile(!q.empty())q.pop();\n\tdis[1]=0;vis[1]=1;q.push(1);\n\t\n\tint u,v,w;\n\twhile(!q.empty())\n\t{\n\t\tu=q.front();vis[u]=0;q.pop();\n\t\tfor(int i=eh[u];i!=-1;i=e[i].next)\n\t\t{\n\t\t\tv=e[i].v;w=e[i].w;\n\t\t\tif(dis[u]+w<dis[v])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tcnt[v]=cnt[u]+1;//\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u7684\u8fb9\u6570 \n\t\t\t\tif(cnt[v]>=n)//\u6700\u77ed\u8def\u5f84\u8fb9\u6570>=n\uff0c\u5373\u5b58\u5728\u88ab\u91cd\u590d\u904d\u5386\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u5b58\u5728\u8d1f\u73af\n\t\t\t\t{\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tvis[v]=1;q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n}\n```\n\n",
        "postTime": 1588227062,
        "uid": 239241,
        "name": "Singercoder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "### \u5224\u65ad\u8d1f\u73af\n\n\u82e5\u56fe\u4e2d\u5b58\u5728\u4e00\u4e2a\u73af\uff0c\u73af\u4e0a\u5404\u8fb9\u7684\u8fb9\u6743\u548c\u4e3a\u8d1f\u6570\uff0c\u5219\u79f0\u8be5\u73af\u4e3a**\u8d1f\u73af**\u3002\n\n\u542b\u6709\u8d1f\u73af\u7684\u56fe\u663e\u7136\u662f\u6ca1\u6709\u6700\u77ed\u8def\u7684\uff0c\u56e0\u4e3a\u6bcf\u8d70\u4e00\u6b21\u8fd9\u4e2a\u8d1f\u73af\uff0c\u603b\u6743\u503c\u5c31\u4f1a\u66f4\u5c0f\uff0c\u5bfc\u81f4\u9677\u5728\u73af\u91cc\u51fa\u4e0d\u6765\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528 Bellman-Ford \u6216 SPFA \u6765\u5224\u65ad\u8d1f\u73af\u3002\n\n#### Bellman-Ford \u5224\u65ad\u8d1f\u73af\n\nBellman-Ford \u7b97\u6cd5\u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\u8ba1\u7b97\u6700\u77ed\u8def\uff0c\u6bcf\u8f6e\u8fed\u4ee3\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9\u5f97\u5230\u4e86\u6700\u77ed\u8def\u3002\u6240\u4ee5\uff0c\u82e5\u56fe\u4e2d\u6ca1\u6709\u8d1f\u73af\uff0c\u5219\u6700\u591a\u7ecf\u8fc7 $n-1$ \u8f6e\u8fed\u4ee3\u540e\u7b97\u6cd5\u7ed3\u675f\u3002**\u82e5\u7b2c $n$ \u8f6e\u8fed\u4ee3\u4ecd\u6709\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u80fd\u88ab\u66f4\u65b0\uff0c\u5219\u56fe\u4e2d\u6709\u8d1f\u73af**\u3002\u590d\u6742\u5ea6\u4e3a   $O(nm)$\u3002\n\n#### SPFA \u5224\u65ad\u8d1f\u73af\n\nSPFA \u662f\u961f\u5217\u4f18\u5316\u7684 Bellman-Ford\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4 Bellman-Ford \u5224\u65ad\u8d1f\u73af\u3002\u7136\u800c SPFA \u4f7f\u7528\u961f\u5217\uff0c\u65e0\u6cd5\u76f4\u63a5\u5f97\u77e5\u5728\u8fdb\u884c\u7b2c\u51e0\u8f6e\u8fed\u4ee3\u3002\u518d\u89c2\u5bdf Bellman-Ford\uff0c\u6211\u4eec\u53d1\u73b0\u7b2c $i$ \u8f6e\u8fed\u4ee3\u5b9e\u9645\u662f\u5728\u8ba1\u7b97\u6700\u77ed\u8def\u5305\u542b $i$ \u6761\u8fb9\u7684\u7ed3\u70b9\u3002\u6240\u4ee5\u6211\u4eec**\u7528 $cnt[x]$ \u8868\u793a $1$ \u5230 $x$ \u7684\u6700\u77ed\u8def\u5305\u542b\u7684\u8fb9\u6570**\uff0c$cnt[1]=0$\u3002\u6bcf\u6b21\u7528 $dis[x]+w(x,y)$ \u66f4\u65b0 $dis[y]$ \u65f6\uff0c\u4e5f\u7528 $cnt[x]+1$ \u66f4\u65b0 $cnt[y]$\u3002\u6b64\u8fc7\u7a0b\u4e2d**\u82e5\u51fa\u73b0 $cnt[y]\\ge n$\uff0c\u5219\u56fe\u4e2d\u6709\u8d1f\u73af**\u3002\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e5f\u662f $O(nm)$\u3002\n\n\u4e5f\u53ef\u4ee5\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u7406\u89e3\uff1a$1$ \u5230 $x$ \u7684\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\u6570\u4e00\u5b9a\u4e0d\u591a\u4e8e $n-1$\u3002\u5426\u5219\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9\u88ab\u91cd\u590d\u7ecf\u8fc7\uff0c\u8fd9\u8bf4\u660e\u5b58\u5728\u73af\uff0c\u4e14\u7ecf\u8fc7\u8be5\u73af\u80fd\u66f4\u65b0\u8be5\u7ed3\u70b9\u7684 $dis$ \u503c\uff0c\u5373\u5b58\u5728\u8d1f\u73af\u3002\n\nSPFA \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\u5224\u65ad\u8d1f\u73af\uff0c\u82e5\u6709\u8282\u70b9\u5165\u961f\u6b21\u6570 $\\ge n$\uff0c\u5219\u6709\u8d1f\u73af\u3002\u8fd9\u79cd\u65b9\u5f0f\u6548\u7387\u4f1a\u7565\u4f4e\u3002\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6\u9898\u89e3\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5229\u7528\u4e86 SPFA \u8bb0\u5f55\u6700\u77ed\u8def\u7ecf\u8fc7\u8fb9\u6570\u7684\u65b9\u6cd5\u5224\u8d1f\u73af\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int maxn=2e3+10;\nconst int maxm=6e3+10;\nint n,m;\nstruct Edge{\n\tint to,w,next;\n}edge[maxm];        //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nint head[maxn],tot;\ninline void Init(){     //\u6709\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6bcf\u6b21\u521d\u59cb\u5316\n\tfor(int i=0;i<maxm;i++) edge[i].next=0;\n\tfor(int i=0;i<maxn;i++) head[i]=0;\n\ttot=0;\n}\ninline void addedge(int u,int v,int w){\n\tedge[++tot].to=v;\n\tedge[tot].w=w;\n\tedge[tot].next=head[u];\n\thead[u]=tot;\n}\n#include<queue>\nusing std::queue;\nqueue<int> Q;\nint dis[maxn],vis[maxn],cnt[maxn];\nbool spfa(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(cnt,0,sizeof(cnt));\n\tdis[1]=0; vis[1]=true;\n\tQ.push(1);\n\twhile(!Q.empty()){\n\t\tint x=Q.front();\n\t\tQ.pop();\n\t\tvis[x]=false;\n\t\tfor(int i=head[x];i;i=edge[i].next){\n\t\t\tint y=edge[i].to,z=edge[i].w;\n\t\t\tif(dis[y]>dis[x]+z){\n\t\t\t\tdis[y]=dis[x]+z;  //\u66f4\u65b0\u6700\u77ed\u8def\n\t\t\t\tcnt[y]=cnt[x]+1;  //\u66f4\u65b0\u5305\u542b\u8fb9\u6570\n\t\t\t\tif(cnt[y]>=n) return true;  //\u5224\u5b9a\u5b58\u5728\u8d1f\u73af\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tQ.push(y);\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tInit();\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint u,v,w;\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\t\taddedge(u,v,w);\n\t\t\tif(w>=0) addedge(v,u,w);\n\t\t}\n\t\tputs(spfa()?\"YES\":\"NO\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595757575,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "\u8fd9\u6a21\u677f\u9898\u600e\u4e48\u6ca1\u4eba\u53d1\u9898\u89e3\u554a\u3002\u3002\n\n## \u7b2c\u4e00\u6b65 \u8bfb\u9898\n\n#### \u9898\u5e72\uff1a\n\n>\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6709\u5411\u56fe\uff0c\u8bf7\u6c42\u51fa\u56fe\u4e2d\u662f\u5426\u5b58\u5728**\u4ece\u9876\u70b9 $1$ \u51fa\u53d1\u80fd\u5230\u8fbe**\u7684\u8d1f\u73af\u3002\n\n>\u8d1f\u73af\u7684\u5b9a\u4e49\u662f\uff1a\u4e00\u6761\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u6570\u7684\u56de\u8def\u3002\n\n\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u5427\u3002\u3002\u91cd\u8981\u7684\u5730\u65b9\u9898\u76ee\u4e5f\u52a0\u7c97\u4e86\uff0c\u8fd9\u662f\u4ece\u9876\u70b9 $1$ \u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u8d1f\u73af\u3002\u90a3\u4e48**\u4ece\u9876\u70b9 $1$ \u51fa\u53d1\u4e0d\u80fd\u5230\u8fbe\u7684\u8d1f\u73af\u5c31\u4e0d\u7b97\u8d1f\u73af\u3002**\n\n------------\n\n#### \u8f93\u5165\u8f93\u51fa\uff1a\n\n>\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570 $T$\uff0c\u8868\u793a\u6d4b\u8bd5\u6570\u636e\u7684\u7ec4\u6570\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\u7684\u683c\u5f0f\u5982\u4e0b\uff1a\n\n>\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u56fe\u7684\u70b9\u6570 $n$ \u548c\u63a5\u4e0b\u6765\u7ed9\u51fa\u8fb9\u4fe1\u606f\u7684\u6761\u6570 $m$\u3002\n\n>\u63a5\u4e0b\u6765 $m$ \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6574\u6570 $u$,$v$,$w$\u3002\n\n> - \u82e5 $w \\geq 0$\uff0c\u5219\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $u$ \u81f3 $v$ \u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\uff0c\u8fd8\u5b58\u5728\u4e00\u6761\u4ece $v$ \u81f3 $u$ \u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u3002\n> - \u82e5 $w\\lt0$\uff0c\u5219\u53ea\u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $u$ \u81f3 $v$ \u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u3002\n\n\u4e5f\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\uff0c\u548c\u6211\u4eec\u6253\u7684\u6a21\u677f\u5dee\u4e0d\u591a\u3002\u4e0b\u9762\u6211\u6765\u626f\u53e5\u9898\u5916\u8bdd\uff1a\uff08\u4ec5\u5c5e\u4e8e\u731c\u6d4b\uff0c\u4e0d\u8981\u5c31\u8fd9\u4e2a\u95ee\u7b54\u505a\u6587\u7ae0\u3002\uff09\n\n>$Q:$\u4e3a\u4ec0\u4e48\u5efa $1$ \u6761\u8fb9\u8fd8\u662f $2$ \u6761\u8fb9\u4e0e $w$ \u6709\u5173\uff1f\n\n>$A:$\u56e0\u4e3a\u5f53 $w \\lt 0$ \u65f6\u5efa $2$ \u6761\u8fb9\u4f1a\u76f4\u63a5\u51fa\u73b0\u8d1f\u73af\u3002\n\n## \u7b2c\u4e8c\u6b65 \u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u4e2a\u9898\u662f\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\uff08\u53d8\u5f62\u7684\uff09\u3002\u7531\u4e8e\u51fa\u73b0\u4e86\u8d1f\u73af\uff0c\u6240\u4ee5 $Floyed$ \uff08\u5e9f\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e0d\u884c\uff09\u4e0e $Dijkstra$ \u90fd\u662f\u65e0\u6cd5\u5904\u7406\u7684\u8d1f\u73af\u7684\u3002\u90a3\u4e48\u6211\u4eec\u8fd9\u91cc\u63a8\u51fa\u4e24\u4e2a\u7b97\u6cd5\uff1a $Bellman-Ford$ \u4ee5\u53ca\u5b83\u7684\u5347\u7ea7\u7248 $SPFA$\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4ee5 $SPFA$ \u4f5c\u4e3a\u91cd\u70b9\u8bb2\u89e3\u3002\n\n### Bellman-ford\n\n\u7531\u4e8e\u7bc7\u5e45\u9650\u5236\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3\u53ef\u4ee5\u6765[\u8fd9\u91cc](https://baike.baidu.com/item/Bellman-Ford%E7%AE%97%E6%B3%95/1089090?fromtitle=bellman-ford&fromid=6039406&fr=aladdin)\u5b66\u4e60\u3002\uff08\u5f53\u7136\u770b\u5b8c $SPFA$ \u7684\u8bb2\u89e3\u4e5f\u5c31\u57fa\u672c\u80fd\u7406\u89e3\u4e86\uff09\n\n### SPFA\n\n\u5148\u63a8\u8350\u4e00\u4e2a\u8bb2\u7684\u6bd4\u8f83\u597d\u7684[\u535a\u6587](https://blog.csdn.net/qq_41593380/article/details/81025079)\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u4f5c\u4e3a\u6211\u4eec\u7684\u91cd\u70b9\u6765\u8bb2\u89e3\u3002$SPFA$\uff0c\u5168\u79f0\u53eb\u505a Shortest Path Faster Algorithm\uff08\u5c31\u662f\u53d6\u4e86\u9996\u5b57\u6bcd\u9632\u6b62\u592a\u957f\uff09\u3002\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u8d1f\u8fb9\u6743\u3001\u8d1f\u73af\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u5148\u53e3\u80e1\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u7684\u57fa\u7840\u601d\u8def\uff1a\n\n\u6211\u4eec\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4 $dis$ \u6765\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u503c\uff08\u5f53\u7136\u8fc7\u7a0b\u4e2d\u4e3a\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u5e76\u975e\u6700\u7ec8\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f $dis$ \u6570\u7ec4\u662f\u5728\u4e0d\u65ad\u66f4\u65b0\u4f18\u5316\u7684\uff09\uff0c\u7136\u540e\u6211\u4eec\u7528\u90bb\u63a5\u8868\u6765\u5b58\u50a8\u56fe\u3002\u6211\u4eec\u91c7\u53d6\u52a8\u6001\u903c\u8fd1\u6cd5\uff1a\u8bbe\u7acb\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u7528\u6765\u4fdd\u5b58\u6ca1\u6709\u4f18\u5316\u7684\u7ed3\u70b9\uff0c\u4f18\u5316\u65b9\u5f0f\u4e3a\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\u7ed3\u70b9 $u$\uff0c\u7136\u540e\u7528 $u$ \u7684\u5f53\u524d\u6700\u4f18\u503c\u5bf9\u79bb\u5f00 $u$ \u70b9\u6240\u6307\u5411\u7684\u7ed3\u70b9 $v$ \u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u5982\u679c $v$ \u70b9\u7684\u76ee\u524d\u6700\u4f18\u503c\u6709\u8c03\u6574\uff0c\u4e14 $v$ \u4e0d\u5728\u5f53\u524d\u7684\u961f\u5217\u4e2d\uff0c\u5c31\u5c06 $v$ \u70b9\u653e\u5165\u961f\u5c3e\u3002\u8fd9\u6837\u4e0d\u65ad\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u4e3a\u6b62\u3002\u6700\u540e $dis$ \u6570\u7ec4\u5b58\u50a8\u7684\u5c31\u662f\u7b54\u6848\u3002\n\n\u5f53\u7136\u8fd9\u4e2a\u601d\u8def\u662f\u9700\u8981\u6c42\u6700\u7ec8\u7684\u7b54\u6848\u7684\uff0c\u6211\u4eec\u672c\u9898\u4e0d\u9700\u8981\u6c42\u51fa\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u9700\u8981\u4e00\u6b21\u4e00\u6b21\u66f4\u65b0\u6700\u4f18\u89e3\u540c\u65f6\u83b7\u53d6\u7ed3\u70b9\u677e\u5f1b\u7684\u6b21\u6570\u3002\n\n\u6211\u4eec\u8981\u77e5\u9053\u5e26\u6709\u8d1f\u73af\u7684\u56fe\u662f\u6ca1\u6709\u6700\u77ed\u8def\u5f84\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6267\u884c\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u8981\u5224\u65ad\u56fe\u662f\u5426\u5e26\u6709\u8d1f\u73af\uff0c\u4e00\u822c\u7684\u65b9\u6cd5\u5c31\u662f\u6c42\u4e00\u4e2a\u70b9\u7684\u8fdb\u961f\u6b21\u6570\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u8fdb\u961f\u6b21\u6570\u8d85\u8fc7 $n$ \u5373\u51fa\u73b0\u8d1f\u73af\u3002\n\n## \u7b2c\u4e09\u6b65 \u4ee3\u7801\n\n\u4e0a\u9762\u53e3\u80e1\u4e86\u90a3\u4e48\u591a\uff0c\u7ec8\u4e8e\u5230\u4ee3\u7801\u90e8\u5206\u4e86\u3002\u3002\uff08**\u8b66\u544a\uff1a\u5feb\u8bfb\u8f83\u957f\uff0c\u5efa\u8bae\u8df3\u8fc7**\uff09\n\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934233\nusing namespace std; \nusing std::cin;\nusing std::cout;\nusing std::endl;\nnamespace IN{//\u5feb\u8bfb\n    const int MAX_INPUT = 1000000;\n    #define getc() (p1==p2&&(p2=(p1=buf)+inbuf->sgetn(buf,MAX_INPUT),p1==p2)?EOF:*p1++)\n    char buf[MAX_INPUT],*p1,*p2;\n    template<typename T>inline bool read(T &x) {\n        static std::streambuf *inbuf=cin.rdbuf();\n        x=0;\n        register int f=0,flag=false;\n        register char ch=getc();\n        while(!isdigit(ch)){\n            if (ch=='-') f=1;\n        \tch=getc();\n        }\n        if(isdigit(ch)) x=x*10+ch-'0',ch=getc(),flag=true;\n        while(isdigit(ch)) {\n            x=x*10+ch-48;\n            ch=getc();\n        }\n        x=f?-x:x;\n        return flag;\n    }\n    template<typename T,typename ...Args>inline bool read(T& a,Args& ...args) {\n       return read(a)&&read(args...);\n    }\n    #undef getc\n}\n\nnamespace OUT{//\u5feb\u5199\n    template<typename T>inline void put(T x){\n        static std::streambuf *outbuf=cout.rdbuf();\n        static char stack[21];\n        static int top=0;\n        if(x<0){\n            outbuf->sputc('-');\n            x=-x;\n        }\n        if(!x){\n            outbuf->sputc('0');\n            outbuf->sputc('\\n');\n            return;\n        }\n        while(x){\n            stack[++top]=x%10+'0';\n            x/=10;\n        }\n        while(top){\n            outbuf->sputc(stack[top]);\n            --top;\n        }\n        outbuf->sputc('\\n');\n    }\n    inline void putc(const char ch){\n        static std::streambuf *outbuf=cout.rdbuf();\n        outbuf->sputc(ch);\n    }\n    inline void putstr(string s){\n    \tfor(register int i=0;i<s.length();i++) putc(s[i]);\n\t}\n    template<typename T>inline void put(const char ch,T x){\n        static std::streambuf *outbuf=cout.rdbuf();\n        static char stack[21];\n        static int top = 0;\n        if(x<0){\n            outbuf->sputc('-');\n            x=-x;\n        }\n        if(!x){\n            outbuf->sputc('0');\n            outbuf->sputc(ch);\n            return;\n        }\n        while(x){\n            stack[++top]=x%10+'0';\n            x/=10;\n        }\n        while(top){\n            outbuf->sputc(stack[top]);\n            --top;\n        }\n        outbuf->sputc(ch);\n    }\n    template<typename T,typename ...Args> inline void put(T a,Args ...args){\n        put(a);put(args...);\n    }\n    template<typename T,typename ...Args> inline void put(const char ch,T a,Args ...args){\n        put(ch,a);put(ch,args...);\n    }\n}\nusing IN::read;\nusing OUT::put;\nusing OUT::putc;\nusing OUT::putstr;\n//\u5b9a\u4e49\u4e00\u4e32\n#define maxn 3005\n#define inf 0xffffff\nstruct edge{//\u5b58\u50a8\u56fe\uff0c\u90bb\u63a5\u8868\n\tint v,w,nxt;\n}e[maxn<<1];\nint head[maxn],n,m,T,qnum[maxn],dis[maxn],cnt; \nbool vis[maxn];\nqueue<int> q;\ninline void add(int u,int v,int w){//\u5efa\u56fe\uff0c\u4e0d\u4f1a\u53ef\u4ee5bfs\u4e00\u4e0b\n\te[++cnt]=(edge){v,w,head[u]},head[u]=cnt;\n}\ninline void buildedge(){//\u8bfb\u5165\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u8bfb\u5165\u8fd9\u4e2a\u56fe\n\tfor(int i=1,x,y,z;i<=m;i++){\n\t\tread(x,y,z);//\u8bfb\u5165\n\t\tif(z>=0) add(x,y,z),add(y,x,z);//\u522b\u5fd8\u4e86\u5efa\u53cc\u5411\u56fe\n\t\telse add(x,y,z);//\u5426\u5219\u5355\u5411\u56fe\n\t} \n}\ninline bool spfa(int s){//spfa\u5b9a\u4e49\u4e3abool\u7c7b\u578b\uff0c\u5982\u679c\u8d1f\u73af\u8fd4\u56de0\n\twhile(!q.empty()) q.pop();//\u6e05\u7a7a\u961f\u5217\uff08\u5176\u5b9e\u6ca1\u5fc5\u8981\uff09\n\tq.push(s);//\u5148\u52a0\u5165\u7ed3\u70b9\uff0c\u7136\u540e\u8bb0\u5f55\n\tvis[s]=1,qnum[s]++,dis[s]=0;\n\twhile(!q.empty()){//\u5982\u679c\u961f\u5217\u975e\u7a7a\n\t\tint u=q.front();//\u53d6\u51fa\u961f\u9996\u5143\u7d20\n\t\tq.pop(),vis[u]=0;//\u64cd\u4f5c\u4e00\u4e0b\n\t\tfor(int i=head[u];i;i=e[i].nxt){//\u4e00\u4e2a\u4e00\u4e2a\u5730\u8fdb\u884c\u8bbf\u95ee\n\t\t\tint v=e[i].v;//\u6c42\u51fa\u6307\u5411\n\t\t\tif(dis[v]>dis[u]+e[i].w){//\u5982\u679c\u4e0d\u662f\u6700\u4f18\n\t\t\t\tdis[v]=dis[u]+e[i].w;//\u66f4\u65b0\n\t\t\t\tif(!vis[v]){//\u5982\u679c\u4e0d\u5728\u961f\u5217\u91cc\n\t\t\t\t\tvis[v]=1;//\u5165\u961f\u64cd\u4f5c\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tqnum[v]++;\n\t\t\t\t\tif(qnum[v]>n) return 0;//\u8fd4\u56de0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 1;//\u522b\u5fd8\u4e86\u8fd4\u56de1\u554a\n}\nint main(int argc, char const *argv[]){\n    std::ios::sync_with_stdio(false);//\u5173\u95ed\u540c\u6b65\u6d41\n    cin.tie(NULL);\n    cout.tie(NULL);\n    read(T);//\u8bfb\u5165\n    while(T--){//T\u6b21\n    \tread(n,m);//\u8bfb\u5165n,m\n    \tcnt=0;//\u521d\u59cb\u5316\u4e00\u6ce2\n    \tmemset(head,0,sizeof(head));\n    \tmemset(qnum,0,sizeof(qnum));\n    \tfor(int i=1;i<=n;i++) dis[i]=inf;//\u5148\u5f04\u6210inf\n    \tmemset(vis,0,sizeof(vis));\n    \tbuildedge();//\u5efa\u56fe\n    \tif(!spfa(1)) putstr(\"YES\\n\");//\u5982\u679c\u6709\u8d1f\u73af\u8f93\u51faYES\n    \telse putstr(\"NO\\n\");//\u5426\u5219\u8f93\u51faNO\n\t}\n    return 0;//\u4e0b\u6b21\u89c1233\n}\n```\n\n### \u7b2c\u56db\u6b65 \u5176\u4ed6\n\n- \u64b0\u6587\u4e0d\u6613\uff0c\u5927\u4f6c\u52ff\u55b7\uff01\n- \u6587\u7ae0\u82e5\u6709`bug`\u8bf7\u79c1\u4fe1\u4f5c\u8005\uff0c\u611f\u6fc0\u4e0d\u5c3d\uff01\n- \u5982\u679c\u6709\u5e2e\u52a9\uff0c\u8bf7\u5e2e\u5fd9\u70b9\u4e0b\u8d5e\uff0c\u611f\u8c22\uff01\n",
        "postTime": 1591616019,
        "uid": 172370,
        "name": "fzj2007",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "\u6a21\u677f\u9898\u4e3a\u5565\u6ca1\u4eba\u6765\u53d1\u9898\u89e3\u554a\u2026\u2026\n\n\u53cd\u6b63 SPFA \u4e5f\u5df2\u7ecf\u662f $O(VE)$ \u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5199 BellmanFord \u4e5f\u53ea\u662f\u5dee\u4e2a\u5e38\u6570\u800c\u5df2\u3002\n\nBellmanFord \u7684\u7b97\u6cd5\u6d41\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\n1. \u521d\u59cb\u5316\uff0c\u8bbe $d_i$ \u4e3a 1 \u5230 n \u7684\u6700\u77ed\u8def\u8ddd\u79bb\uff0c\u80af\u5b9a\u662f $d_1 = 0, d_{2 \\cdots n} = \\operatorname{inf}$\u3002\n\n2. \u8fdb\u884c $n-1$ \u6b21\u677e\u5f1b\u64cd\u4f5c\u3002\u6211\u4eec\u6bcf\u6b21\u5c31\u66f4\u65b0\u4e00\u5c42\u6570\u7684\u6700\u77ed\u8def\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qhc5gpzq.png)\n\n\u6bd4\u5982\u8fd9\u4e2a\u5783\u573e\u56fe\uff0c\u7b2c\u4e00\u6b21\uff0c\u6211\u4eec\u5c31\u4f1a\u628a $d_B$ \u66f4\u65b0\u4e3a $f$ \uff0c\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u65f6\u5c31\u4f1a\u628a $d_C$ \u66f4\u65b0\u4e3a $f+g$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u5c31\u53ef\u4ee5\u7528 for \u5faa\u73af\u626b\u4e00\u904d\u6240\u6709\u7684\u8fb9\u3002\u5f53\u7136\u4f60\u7528\u4ec0\u4e48 SPFA \u7684\u5c31\u662f\u7528\u961f\u9996\u66f4\u65b0\u70b9\u3002\n\n3. \u5230\u4e86\u6211\u4eec\u5224\u65ad\u8d1f\u73af\u7684\u65f6\u95f4\u4e86\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u8fb9\u626b\u4e00\u904d\uff0c\u7531\u4e8e\u9898\u76ee\u8bf4 **\u4ece\u9876\u70b9 1 \u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u8d1f\u73af**\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u63a0\u8fc7\u9876\u70b9 1 \u65e0\u6cd5\u5230\u8fbe\u7684\u70b9\uff0c\uff08$d_i = \\operatorname{inf}$\uff09\u3002\u6309\u7406\u8bf4\uff0c$n-1$ \u6b21\u677e\u5f1b\u4e4b\u540e\u6211\u4eec\u4e00\u5b9a\u65e0\u6cd5\u83b7\u5f97\u66f4\u77ed\u7684\u8def\u4e86(\u90fd\u88ab\u677e\u5f1b\u8fc7\u4e86)\u3002\u7136\u800c\uff0c\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u5c31\u6ca1\u6709\u6700\u77ed\u8def\u4e86\uff0c\u56e0\u4e3a\u5728\u8d1f\u73af\u4e0a\u80fd\u591f\u8d8a\u8d70\u8d8a\u77ed\uff0c**\u6240\u4ee5\u6b64\u65f6\u5982\u679c\u80fd\u591f\u677e\u5f1b\uff0c\u4e00\u5b9a\u5b58\u5728\u8d1f\u73af**\n\n\u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\n#include <iostream>\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2e6 + 1000;\nint cnt = 0;\nstruct node{\n\tint x , y , v;\n}e[N];\nvoid add(int x ,int y , int v) {e[++cnt] = {x , y , v};}\nvoid addd(int x, int y , int v) {\n\tif(v < 0)add(x , y , v);\n\tif(v >= 0) add(x , y , v) , add(y , x , v);\n}\nint n;\nbool bellman() {\n\tstatic int d[N];\n\td[1] = 0;\n\tfor(int i = 2; i <= n; i++)\n\t\td[i] = 0x7fffffff;\n\tfor(int i = 1 ; i <= n - 1; i++)\n\t\tfor(int j = 1; j <= cnt; j++) {\n\t\t\tif(d[e[j].x] != 0x7fffffff && \n\t\t\td[e[j].x] + e[j].v < d[e[j].y])\n\t\t\t\td[e[j].y] = d[e[j].x] + e[j].v;\n\t\t}\n\tfor(int i = 1; i <= cnt; i++) {\n\t\tif(d[e[i].x] == 0x7fffffff || d[e[i].y] == 0x7fffffff)continue;\n\t\tif(d[e[i].x] + e[i].v < d[e[i].y])return true;// \u8d1f\u6743\u56de\u8def\n\t}\n\treturn false;\n}\nsigned main() {\n\tint t;scanf(\"%d\" , &t);\n\twhile(t--) {\n\t\tmemset(e , 0 , sizeof(e));\n\t\tcnt = 0;\n\t\tint m;scanf(\"%d%d\" , &n, &m);\n\t\tfor(int i = 1; i <= m; i++) {\n\t\t\tint x , y , v;scanf(\"%d%d%d\" , &x , &y , &v);\n\t\t\taddd(x , y , v);\n\t\t}\n\t\tif(bellman())printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\t\t\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1598167252,
        "uid": 226148,
        "name": "Suuon_Kanderu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "## \u9898\u89e3 P3385 \u8d1f\u73af\n$\\rightarrow$[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3385)\n\n\u6211\u6765\u5199\u7bc7\u603b\u7ed3\u9644\u5e26\u6c42\u51fa\u5177\u4f53\u8d1f\u73af\u7684\u5427\u3002\n\n### \u9898\u89e3\uff1a\u5224\u65ad\u8d1f\u73af\n----\n\u65e2\u7136\u5224\u65ad\u8d1f\u73af\u7684\u51e0\u79cd\u65b9\u6cd5\u5176\u4ed6\u9898\u89e3\u90fd\u5df2\u7ecf\u63d0\u5230\u8fc7\uff0c\u90a3\u6211\u5c31\u59d1\u4e14\u53ea\u5927\u6982\u505a\u4e2a\u603b\u7ed3\u5427\u3002\n\n1. Floyd \u7b97\u6cd5\u6c42\u8d1f\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O (n^3)$\uff1a\n\n\u53ef\u4ee5\u8003\u8651\u5efa\u7acb\u539f\u56fe\u7684\u53cd\u5411\u56fe\u8bb0\u5f55 $1$ \u5411\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u66f4\u65b0\u6765\u6e90\u518d\u4ece\u70b9 $1$ \u5f00\u59cb dfs \u770b\u662f\u5426\u80fd\u8fdb\u5165\u73af\u4e2d\u3002\n\n\u6b64\u5916\u56e0\u4e3a Floyd \u7684\u7ed3\u679c\u4e2d\u8d1f\u73af\u4e0a\u7684\u70b9\u5230\u81ea\u8eab\u8ddd\u79bb\u5c0f\u4e8e $0$\uff0c\u6240\u4ee5\u53ef\u4ee5\u540c\u65f6\u4f20\u4e0b\u95ed\u5305\uff08Floyd \u4e00\u904d\u4ee5\u540e\u518d\u4ece $1$ \u5f00\u59cb dfs \u4e00\u904d\u5224\u65ad\u53ef\u8fbe\u70b9\u5230\u81ea\u8eab\u7684\u8ddd\u79bb\u662f\u5426\u6709\u5c0f\u4e8e $0$ \u7684\u4e5f\u53ef\uff09\u3002\n\n\u672c\u9898\u4e2d\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u800c\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u4ee3\u7801\uff08\u81ea\u8eab\u8ddd\u79bb+\u95ed\u5305\uff09\uff1a\n```cpp\nint dis[MAXN][MAXN];\nbool vis[MAXN][MAXN];\nbool Floyd(int s)\n{\n\tvis[s][s]=1;\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tvis[i][j]|=vis[i][k]&&vis[k][j];\n\t\t\t\tif(dis[i][j]>dis[i][k]+dis[k][j])\n\t\t\t\t\tdis[i][j]=dis[i][k]+dis[k][j];\n\t\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(vis[s][i]&&dis[i][i]<0)\n\t\t\treturn 1;//\u5b58\u5728\u8d1f\u73af\n\treturn 0;\n}\n```\n```cpp\n//\u8bfb\u5165&\u521d\u59cb\u5316\nmemset(dis,0x3f,sizeof(dis));//\u4e0d\u80fd0x7f\nmemset(vis,0,sizeof(vis));\ncin>>n>>m;\nfor(int i=1;i<=n;i++)\n\tdis[i][i]=0,\n\tvis[i][i]=0;\nfor(int i=0,u,v,w;i<m;i++)\n{\n\tcin>>u>>v>>w;\n\tdis[u][v]=min(dis[u][v],w);\n\tvis[u][v]=1;\n\tif(w>=0)\n\t\tvis[v][u]=1,\n\t\tdis[v][u]=min(dis[v][u],w);\n}\n```\n\n2. SPFA \u7b97\u6cd5\u6c42\u8d1f\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O (kn)$\uff1a\n\n\u6ca1\u6709\u8d1f\u73af\u7684\u56fe\u4e2d\u4e00\u4e2a\u6700\u591a\u88ab\u5176\u4ed6 $n-1$ \u4e2a\u70b9\u677e\u5f1b $n-1$ \u6b21\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u4ece $1$ \u51fa\u53d1\u7684 SPFA \u677e\u5f1b\u4e86 $n$ \u6b21\u53ca\u4ee5\u4e0a\uff0c\u5219\u5b58\u5728\u7531 $1$ \u53ef\u8fbe\u7684\u8d1f\u73af\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff08\u5982\u679c\u6709\u4eba\u4e4b\u524d\u5b66\u7684 SPFA \u50cf\u6211\u5b66\u7684\u4e00\u6837\uff09\uff0c\u4e0d\u540c\u4e8e\u6c42\u6700\u77ed\u8def\u65f6\uff0c\u8fd9\u91cc\u5982\u679c\u5728\u677e\u5f1b\u5b8c\u70b9 $u$ \u7684\u53ef\u677e\u5f1b\u8fb9\u540e\u624d\u6807\u8bb0 $u$ \u51fa\u961f\uff0c\u5c31\u4f1a\u5ffd\u7565\u6389\u7531\u81ea\u73af\u5f62\u6210\u7684\u8d1f\u73af\u3002 \n\n\u4ee3\u7801\uff1a\n```cpp\nint cnt[MAXN],dis[MAXN];\nqueue<int>q;\nbool vis[MAXN];\nint spfa(int s)\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x7f,sizeof(dis));\n\tmemset(cnt,0,sizeof(cnt));\n\twhile(!q.empty())\n\t\tq.pop();\n\tvis[s]=1;\n\tdis[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tvis[u]=0;\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[v]>dis[u]+e[i].w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].w;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tif(++cnt[v]>n)\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n3. DFS-SPFA \u6c42\u8d1f\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O (n^2)$\uff1a\n\n\u636e\u8bf4\u53ea\u662f\u5224\u65ad\u8d1f\u73af\u7684\u8bdd\u5f88\u5feb\uff0c\u4f46\u8981\u6c42\u89e3\u7684\u8bdd\u5f88\u6162\u3002\n\n\u53ef\u4ee5\u641c\u7d22\u5b9e\u73b0\uff0c\u677e\u5f1b\u5230\u8fd8\u672a\u9000\u51fa\u7684\u70b9\u5373\u5b58\u5728\u8d1f\u73af\u3002\n\n\u4e5f\u53ef\u4ee5\u50cf\u8fd9\u6837\u628a\u666e\u901a SPFA \u91cc\u7684\u961f\u5217\u6539\u4e3a\u6808\uff0c\u6a21\u62df\u6df1\u641c\uff0c\u4f46\u8981\u6ce8\u610f\u8fd9\u65f6 `vis[]` \u8868\u793a\u7684\u662f\u5426\u6b63\u5728\u641c\u7d22\u7ecf\u8fc7\u800c\u975e\u662f\u5426\u5728\u6808\u5185\u3002\n\n\u4f5c\u4e3a\u201cSPFA\u201d\u4e00\u5982\u65e2\u5f80\u5730\u5bb9\u6613\u88ab\u5361\uff08\u6b64\u9898\u4e2d\u88ab #9 \u5361\uff09\u3002\n\n\u4ee3\u7801\uff08\u5176\u5b9e\u8fd9\u4e2a\u6a21\u62df\u4f46\u6ca1\u5b8c\u5168\u6a21\u62df\uff0c\u53cd\u800c\u663e\u5f97\u9ebb\u70e6\u4e86\uff09\uff1a\n```cpp\nint dis[MAXN];\nint stk[MAXN],sp;\nint pre[MAXN],cnt[MAXN];//\u4ece\u54ea\u4e2a\u70b9\u641c\u8fc7\u6765\u7684 / \u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u7684\u641c\u7d22\u5206\u652f\u6570\nbool vis[MAXN],instk[MAXN];\nint dfs_spfa(int s)\n{\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x7f,sizeof(dis));\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(instk,0,sizeof(instk));\n\tsp=0;\n\tstk[++sp]=s;\n\tdis[s]=0;\n\tinstk[s]=1;\n\twhile(sp)\n\t{\n\t\tint u=stk[sp--];instk[u]=0;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[v]>dis[u]+e[i].w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+e[i].w;\n\t\t\t\tif(vis[v])\n\t\t\t\t\treturn 1;\n\t\t\t\tif(!instk[v])\n\t\t\t\t\tstk[++sp]=v,\n\t\t\t\t\tcnt[u]++,\n\t\t\t\t\tpre[v]=u,\n\t\t\t\t\tinstk[v]=1;\n\t\t\t}\n\t\t}\n\t\twhile(u&&cnt[u]==0)\n\t\t{\n\t\t\tvis[u]=0;\n\t\t\tu=pre[u];\n\t\t\tcnt[u]--;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n4. Bellman-Ford \u7b97\u6cd5\u6c42\u8d1f\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O (mn)$\uff1a\n\n\u5373 SPFA \u7b97\u6cd5\u7684\u672c\u8d28\u3002\n\nBellman-Ford \u7b97\u6cd5\u5728\u6ca1\u6709\u8d1f\u73af\u65f6\uff0c\u6700\u574f\u60c5\u51b5\uff08\u4e00\u6761\u94fe\uff09\u4e0b\u4e5f\u53ea\u9700 $n-1$ \u6b21\u5373\u53ef\u5b8c\u6210\u6240\u6709\u677e\u5f1b\u64cd\u4f5c\u627e\u5230\u6700\u77ed\u8def\uff0c\u5982\u679c\u7b2c $n$ \u6b21\u4ecd\u6709\u53ef\u677e\u5f1b\u7684\u8fb9\uff0c\u5219\u56fe\u4e2d\u6709\u8d1f\u73af\u3002\n\n\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u76f4\u63a5\u5224\u65ad\u662f\u5426\u7531 $1$ \u53ef\u8fbe\uff0c\u53ef\u4ee5\u8003\u8651\u7b2c $n$ \u6b21\u5faa\u73af\u6765\u4e00\u6b21\u4e07\u80fd\u7684 dfs \u6216\u8005\u5728\u677e\u5f1b\u65f6\u987a\u5e26\u4f20\u4e0b\u95ed\u5305\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\nint dis[MAXN],vis[MAXN];\nint bellman_ford(int s)\n{\n\tmemset(dis,0x7f,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tdis[s]=0;\n\tvis[s]=1;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tbool flag=1;\n\t\tfor(int j=1;j<=tot;j++)//tot:\u8fb9\u6570\n\t\t\tif(dis[e[j].v]>dis[e[j].u]+e[j].w)\n\t\t\t{\n\t\t\t\tdis[e[j].v]=dis[e[j].u]+e[j].w;\n\t\t\t\tvis[e[j].v]|=vis[e[j].u];\n\t\t\t\tflag=0;\n\t\t\t}\n\t\tif(flag)\n\t\t\treturn 0;\n\t}\n\tfor(int j=1;j<=tot;j++)\n\t\tif(dis[e[j].v]>dis[e[j].u]+e[j].w)\n\t\t{\n\t\t\tdis[e[j].v]=dis[e[j].u]+e[j].w;\n\t\t\tif(vis[e[j].u])\n\t\t\t\treturn 1;\n\t\t}\n\treturn 0;\n}\n```\n\n\u6b64\u5916\uff0c\u672c\u9898\u4e2d\u8fd8\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662f\uff0c\u672c\u9898\u662f\u4e00\u9053\u4e2a\u6d4b\u8bd5\u70b9\u6709\u591a\u7ec4\u6570\u636e\u70b9\u7684\u56fe\u8bba\u9898\uff0c\u56e0\u6b64\u8981\u91cd\u7f6e\u94fe\u5f0f\u5411\u524d\u661f\u7684 `head[]` \u6570\u7ec4\u548c\u52a0\u8fb9\u8ba1\u6570\uff08\u4e4b\u524d\u81ea\u5df1\u5c45\u7136\u72af\u4e86\u8fd9\u79cd\u9519\u8bef\u2026\u2026\uff09\u3002\n\n\u8bf4\u8d77\u6765\u7f29\u70b9\u66b4\u529b\u628a\u8fb9\u6743\u53d8\u70b9\u6743\u6c42\u8d1f\u73af\u4f3c\u4e4e\u53ef\u80fd\u56e0\u6b63\u73af\u52a0\u8d1f\u73af\u6784\u6210\u7684 $8$ \u5f62\u56fe\u800c\u4e0d\u901a\u7528\uff1f\u7c7b\u4f3c\u4e0b\u56fe\uff1a\uff08\u6709\u5176\u4ed6\u65b9\u6cd5\u6b22\u8fce\u8bc4\u8bba\u6307\u51fa\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/k81i8v3u.png)\n\n### \u6269\u5c55\uff1a\u6c42\u51fa\u8d1f\u73af\n----\n~~\u867d\u7136\u597d\u50cf\u4f7f\u7528\u4ef7\u503c\u4e0d\u662f\u5f88\u5927\uff08\u603b\u4e0d\u80fd\u7528\u8d1f\u73af\u7f29\u70b9\u5427\uff09\u3002~~\n\n1. Floyd \u7b97\u6cd5\uff1a\n\n\u4e0a\u9762\u6c42\u8d1f\u73af\u7684\u524d\u4e00\u79cd\u65b9\u6848\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u3002\n\n\u6216\u8005\u7531\u4e0a\u9762\u63d0\u5230\u7684\u7ed3\u8bba\uff0c\u54ea\u4e9b\u70b9\u5728\u8d1f\u73af\u4e0a\u4e00\u76ee\u4e86\u7136\u3002\u5982\u679c\u8981\u5206\u51fa\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8d1f\u73af\uff0c\u8003\u8651 dfs\u3002\n\n2. SPFA\uff08Bellman-Ford\uff09\u7b97\u6cd5\uff1a\n\n\u8fd9\u91cc\u4e0d\u518d\u5206\u5f00\u4ecb\u7ecd\u3002\n\n\u5728\u677e\u5f1b\u65f6\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u6765\u6e90\uff08SPFA \u7684\u8bdd\u4e5f\u53ef DFS-SPFA \u5b9e\u73b0\uff09\uff0c\u56de\u6eaf\u5230\u73af\u4e0a dfs\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f SPFA \u4e2d `cnt[v]>n` \u7684\u70b9 $v$ \u548c Bellman-Ford \u7b97\u6cd5\u4e2d\u7b2c $n$ \u6b21\u53ef\u677e\u5f1b\u7684\u8fb9 $i$ \u4e0d\u4e00\u5b9a\u5728\u8d1f\u73af\u4e0a\uff08\u5982\u4e0b\u56fe\uff09\uff0c\u56e0\u6b64\u9700\u5411\u524d\u56de\u6eaf $n$ \u6b21\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rqmavufl.png)\n\n\u4e0d\u8fc7\u4e0a\u9762\u63d0\u5230\u7684\u51e0\u79cd\u65b9\u6cd5\uff0c\u591a\u534a\u53ef\u80fd\u5728\u4e24\u4e2a\u8d1f\u73af\u6784\u6210\u7684 $8$ \u5f62\u56fe\u4e2d\u6f0f\u89e3\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e2a\u4eba\u6682\u65f6\u65e0\u89e3 emmmm\u3002\n\n\u6b64\u5916\u8fd8\u5728\u7f51\u4e0a\u770b\u5230\u53e6\u4e00\u79cd\u5efa\u7acb\u201c\u6700\u77ed\u8def\u5f84\u6811\u201d\u5224\u73af\u7684\u65b9\u6cd5\uff0c\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u53c2\u8003[\u94fe\u63a5](https://www.zhihu.com/question/264951302)\u3002\n\n### \u5176\u4ed6\n----\n\u5173\u4e8e\u4e0a\u6587\u63d0\u5230\u7684\u201cFloyd \u7b97\u6cd5\u7ed3\u679c\u4e2d\u8d1f\u73af\u4e0a\u7684\u70b9\u5230\u81ea\u8eab\u8ddd\u79bb\u5c0f\u4e8e $0$\u201d\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u4e2a\u4eba\u7684\u7406\u89e3\u662f\uff1aFloyd \u6700\u5916\u5c42\u7ecf\u8fc7 $k$ \u6b21\u63d2\u70b9\u5faa\u73af\u7684\u7ed3\u679c\u662f\uff0c\u6700\u591a\u7ecf\u8fc7 $1 \\cdots k$ \u7684\u70b9\u4e0b\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u5373\u4fbf\u4ee5\u53ca\u4e0d\u6ee1\u8db3\u52a8\u6001\u89c4\u5212\u7684\u6700\u4f18\u5316\u539f\u7406\uff0c\u4f46\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4f1a\u88ab\u4e00\u6761\u7ecf\u8fc7\u8d1f\u73af\u81f3\u5c11\u4e00\u5708\uff08\u4e00\u90e8\u5206\uff09\u7684\u8def\u5f84\u53d6\u4ee3\uff0c\u56e0\u6b64\u8d1f\u73af\u4e0a\u7684\u70b9\u5230\u81ea\u8eab\u8ddd\u79bb\u5c0f\u4e8e $0$\u3002\n\n\u5982\u6709\u4e0d\u5bf9\u6216\u6709\u5176\u4ed6\u66f4\u4e25\u8c28/\u66f4\u597d\u7406\u89e3\u7684\u60f3\u6cd5\u6b22\u8fce\u6307\u51fa\uff0c\u5176\u4ed6\u5730\u65b9\u4e5f\u662f\u3002\n",
        "postTime": 1628416654,
        "uid": 274209,
        "name": "AzzyZhe",
        "ccfLevel": 4,
        "title": "\u51e0\u5929\u6765\u5173\u4e8e\u8d1f\u73af\u95ee\u9898\u7684\u4e00\u70b9\u7814\u7a76"
    },
    {
        "content": "\u8d1f\u73af\u7684\u5b9a\u4e49\u662f\uff1a\u4e00\u6761\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u6570\u7684\u56de\u8def\u3002\u6240\u4ee5\u5728\u8d1f\u73af\u7684\u56fe\u4e0a\u662f\u4e0d\u5b58\u5728\u6700\u77ed\u8def\u7684\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u8003\u8651\u8fd9\u6837\u7684\u601d\u8def\uff1a\u5148\u8bd5\u7740\u6c42\u51fa $1$ \u5230\u5176\u4ed6\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5b58\u5728\u5408\u6cd5\u8def\u5f84\uff0c\u5c31\u8bf4\u660e\u6709\u8d1f\u73af\u5b58\u5728\u3002\n\n- \u65b9\u6cd5\u4e00\uff1a\u5f17\u6d1b\u4f0a\u5fb7\n\n\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a\u8d1f\u6570\uff0c\u5c31\u8bf4\u660e\u5b58\u5728\u8d1f\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(TN^3)$\uff0c\uff08~~\u5173\u4e8e\u5f17\u6d1b\u4f0a\u5fb7\uff1a\u5b83\u6b7b\u4e86~~\uff09\n\n- \u65b9\u6cd5\u4e8c\uff1aSPFA\n\n![](https://cdn.luogu.com.cn/upload/pic/25108.png)\n\n\u5f00\u73a9\u7b11\uff0c\u5f00\u73a9\u7b11\u3002\u5176\u5b9e\u6b63\u89e3\u5c31\u662f SPFA\u3002\n\nSPFA \u672c\u8d28\u4e0a\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u53d8\u5f62\u7684 BFS\uff0c\u6211\u4eec\u60f3\u60f3\u5b83\u7684\u7b97\u6cd5\u6d41\u7a0b\uff08\u53c2\u8003\u4e86\u84dd\u4e66\uff09\uff1a\n\n1. \u7528 $dis_i$ \u8868\u793a\u70b9 $i$ \u5230\u8d77\u70b9\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u503c\u8bbe\u4e3a\u65e0\u7a77\u5927\uff0c\u8d77\u70b9\u8bbe\u4e3a $0$\uff0c\u5e76\u628a\u5b83\u653e\u5165\u4e00\u4e2a\u961f\u5217\u4e2d\u3002\n\n2. \u6bcf\u6b21\u4ece\u961f\u5934\u53d6\u51fa\u70b9 $x$\uff0c\u626b\u63cf\u5b83\u6240\u6709\u7684\u9886\u5c45\u70b9 $y$\uff0c\u4e24\u70b9\u7684\u8ddd\u79bb\u4e3a $z$\uff0c\u5982\u679c $dis_x+z<dis_y$\uff0c\u5219\u66f4\u65b0 $dis_y$\uff0c\u540c\u65f6\u5982\u679c $y$ \u4e0d\u5728\u961f\u5217\u4e2d\u5219\u8ba9 $y$ \u5165\u961f\u3002\n\n3. \u91cd\u590d\u6267\u884c\u76f4\u5230\u961f\u7a7a\u3002\n\n\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u8d1f\u8fb9\uff0c\u8fd9\u6837\u7684\u8bdd\u6709\u4e9b\u70b9\u5c31\u4f1a\u88ab\u4e00\u76f4\u66f4\u65b0\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u8d85 $N$ \u4e2a\u70b9\u66f4\u65b0\u8fc7\uff0c\u90a3\u5c31\u8bf4\u660e\u6709\u8d1f\u73af\u3002\n\n\u6216\u8005\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6700\u77ed\u8def\u7684\u8fb9\u6570\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8d1f\u73af\uff0c\u56fe\u7684\u6700\u77ed\u8def\u662f\u4e0d\u4f1a\u53cd\u590d\u7ecf\u8fc7\u4e00\u6761\u8fb9\u7684\u3002\n\n\u66f4\u65b0\u6b21\u6570\u5224\u8d1f\u73af\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <cstring> \nusing namespace std;\nint T, n, m, u, v, w;\nvector <pair<int, int> > G[2001];\nint dis[2001], cnt[2001];\nbool in[2001];\nvoid spfa(){\n\tmemset(dis, 0x3f3f, sizeof(dis));\n\tmemset(in, 0, sizeof(in));\n\tmemset(cnt, 0, sizeof(cnt));\n\tqueue <int> q;\n\tq.push(1);\n\tdis[1] = 0;\n\tin[1] = true;\n\tcnt[1] = 1;\n\twhile (!q.empty()){\n\t\tu = q.front();\n\t\tq.pop();\n\t\tin[u] = false;\n\t\tfor (int i = 0; i < G[u].size(); i++){\n\t\t\tv = G[u][i].first;\n\t\t\tw = G[u][i].second;\n\t\t\tif (dis[v] > dis[u] + w){\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tif (!in[v]){\n\t\t\t\t\tcnt[v]++;\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tin[v] = true;\n\t\t\t\t\tif (cnt[v] >= n){\n\t\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n}\nint main(){\n\tscanf(\"%d\", &T);\n\tfor (int  t = 0; t < T; t++){\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tfor (int i = 1; i <= n; i++){\n\t\t\tG[i].clear();\n\t\t}\n\t\tfor (int i = 0; i < m; i++){\n\t\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\t\tG[u].push_back(make_pair(v, w));\n\t\t\tif (w >= 0){\n\t\t\t\tG[v].push_back(make_pair(u, w)); \n\t\t\t} \n\t\t}\n\t\tspfa();\n\t}\n\treturn 0;\n}\n```\n\u6700\u77ed\u8def\u8def\u5f84\u6570\u5224\u8d1f\u73af\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <cstring> \nusing namespace std;\nint T, n, m, u, v, w;\nvector <pair<int, int> > G[2001];\nint dis[2001], cnt[2001], sum;\nbool in[2001];\nvoid spfa(){\n\tmemset(dis, 0x3f3f, sizeof(dis));\n\tmemset(in, 0, sizeof(in));\n\tmemset(cnt, 0, sizeof(cnt));\n\tqueue <int> q;\n\tq.push(1);\n\tdis[1] = 0;\n\tin[1] = true;\n\tcnt[1] = 0;\n\twhile (!q.empty()){\n\t\tu = q.front();\n\t\tq.pop();\n\t\tin[u] = false;\n\t\tfor (int i = 0; i < G[u].size(); i++){\n\t\t\tv = G[u][i].first;\n\t\t\tw = G[u][i].second;\n\t\t\tif (dis[v] > dis[u] + w){\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tcnt[v] = cnt[u] + 1;\n\t\t\t\tif (cnt[v] >= sum){\n\t\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!in[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tin[v] = true; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n}\nint main(){\n\tscanf(\"%d\", &T);\n\tfor (int  t = 0; t < T; t++){\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tsum = 0;\n\t\tfor (int i = 1; i <= n; i++){\n\t\t\tG[i].clear();\n\t\t}\n\t\tfor (int i = 0; i < m; i++){\n\t\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\t\tG[u].push_back(make_pair(v, w));\n\t\t\tsum++;\n\t\t\tif (w >= 0){\n\t\t\t\tsum++;\n\t\t\t\tG[v].push_back(make_pair(u, w)); \n\t\t\t} \n\t\t}\n\t\tspfa();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628909412,
        "uid": 347839,
        "name": "Daniel_001",
        "ccfLevel": 0,
        "title": "P3385 \u8d1f\u73af"
    },
    {
        "content": " \u4ece[P5960 \u3010\u6a21\u677f\u3011\u5dee\u5206\u7ea6\u675f\u7b97\u6cd5](https://www.luogu.com.cn/problem/P5960)\u9898\u89e3\u533a\u91cc\u7684\u5927\u4f6c\u6307\u8def\u5230\u6765\uff0c\u5efa\u8bae\u5927\u5bb6\u505a\u5b8c\u8fd9\u9898\u518d\u7528\u90a3\u9898\u6765\u5f53\u4e00\u4e2a\u590d\u4e60\u3002\n\n###  \u8d1f\u73af\n\n\u4e00\u4e2a\u6240\u6709\u8fb9\u7684\u8fb9\u6743\u548c\u4e3a\u8d1f\u6570\u7684\u73af\u53eb\u505a\u8d1f\u73af\u3002\u5982\u679c\u4e00\u4e2a\u56fe\u4e2d\u51fa\u73b0\u4e86\u8d1f\u73af\uff0c\u4f1a\u5bfc\u81f4\u6700\u77ed\u8def\u6c38\u8fdc\u8d70\u4e0d\u51fa\u53bb\u3002\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u8d70\u8fc7\u4e86 $n-1$ \u6b21\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\u3002\n\n###  \u5982\u4f55\u5224\u65ad\u8d1f\u73af\uff1f\n \n \u7528 `spfa` \u8dd1\u6700\u77ed\u8def\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u5224\u65ad\u961f\u9996\u70b9\u7684\u5165\u961f\u6b21\u6570\u662f\u5426\u5df2\u7ecf\u8fbe\u5230 $n-1$ \u3002\u82e5\u6709\u4e00\u6b21\u6ee1\u8db3\u8be5\u6761\u4ef6\uff0c\u5219\u6709\u8d1f\u73af\uff0c\u76f4\u63a5\u8f93\u51fa `YES` \u3002\u82e5\u6ca1\u6709\u4e00\u6b21\u6ee1\u8db3\u8be5\u6761\u4ef6\uff0c\u5219\u65e0\u8d1f\u73af\uff0c\u8f93\u51fa `NO` \u3002\n \n### \u5176\u4ed6\u6ce8\u610f\u4e8b\u9879\n\n- \u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u6570\u636e\uff0c\u6e05\u7a7a\u6389\u6709\u5173\u7684\u6570\u7ec4\u3002\n- \u94fe\u63a5\u8868\u8981\u5f00\u4e24\u500d $M$\n- \u66f4\u591a\u7cbe\u5f69\u5c3d\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u3002\n\n### CODE\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int gin(){//\u5feb\u8bfb\n\tchar c=getchar();\n\tint s=0,f=1;\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-')f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\ts=(s<<3)+(s<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn s*f;\n}\n\nconst int N=5e3+5;//\u672c\u9898\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u4e60\u60ef\u5f00\u5927\u4e00\u70b9\u3002\nint n,m,cnt[N],d[N],tot=0,head[N];\n//cnt\u8bb0\u5f55\u5df2\u7ecf\u5165\u961f\u7684\u6b21\u6570\u3002\nbool h[N],t;\n//\u5c0f\u5199\u5b57\u6bcdt\u7528\u6765\u5b58\u662f\u5426\u5b58\u5728\u8d1f\u73af\uff0c\u5b58\u5728\u5219\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002\nqueue<int> q;\n\nstruct edge{//\u7528\u7ed3\u6784\u4f53\u5b58\u94fe\u63a5\u8868\n\tint dis,ne,to;\n}e[N<<1];\n\ninline void add(int u,int v,int w){//\u8fde\u8fb9\n\te[++tot].dis=w;\n\te[tot].to=v;\n\te[tot].ne=head[u];\n\thead[u]=tot;\n}\n\ninline void spfa(){//\u6700\u77ed\u8def\u6a21\u677f\n\tmemset(h,0,sizeof h);\n\tmemset(cnt,0,sizeof cnt);\n\tmemset(d,63,sizeof d);//\u8bb0\u5f97\u6bcf\u6b21\u521d\u59cb\u5316\n\th[1]=1,t=0,d[1]=0;\n\tq.push(1);\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();h[u]=0;\n\t\tif(cnt[u]==n-1){t=1;return;}//\u5982\u679c\u5728\u6b64\u4e4b\u524d\u5df2\u7ecf\u6709n-1\u6b21\u5165\u961f\u4e86\u5219\u6709\u8d1f\u73af\u3002\n\t\tcnt[u]++;\n\t\tfor(int i=head[u];i;i=e[i].ne){\n\t\t\tint v=e[i].to,w=e[i].dis;\n\t\t\tif(d[v]>d[u]+w){\n\t\t\t\td[v]=d[u]+w;\n\t\t\t\tif(!h[v])h[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t} \n}\n\nint main(){\n\tint T=gin();\n\twhile(T--){\n\t\tn=gin(),m=gin();\n\t\ttot=0;//\u5728tot\u53d8\u4e3a0\u7684\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u4f53e\u6bcf\u6b21\u5b58\u7684\u65f6\u5019\u90fd\u4f1a\u8986\u76d6\u8001\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u4e0d\u518d\u9700\u8981\u521d\u59cb\u5316e\u4e86\u3002\n\t\tmemset(head,-1,sizeof head);//\u521d\u59cb\u5316head\u6570\u7ec4\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint u=gin(),v=gin(),w=gin();\n\t\t\tadd(u,v,w);\n\t\t\tif(w>=0)add(v,u,w);\n\t\t}\n\t\tspfa();\n\t\tif(t)printf(\"YES\\n\");\n\t\telse printf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1596975901,
        "uid": 135485,
        "name": "Push_Y",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "\u56e0\u4e3aLaTeX\u7684\u4f7f\u7528\u4e0d\u89c4\u8303\u88ab\u62d2\u4e86\u4e24\u6b21\uff0c\u8ba4\u771f\u6539\u4e86\u4e00\u904d\uff0c\u5e94\u8be5\u6ca1\u95ee\u9898\u4e86\u3002\n\nupdate\uff1a\u611f\u8c22\u5de8\u4f6c@Fee_cle6418  \u6307\u51fa\u9519\u8bef\uff0c\u73b0\u5df2\u6539\u6b63\u3002\n\n------------\n\n\u9898\u89e3\u533a\u7684\u5927\u4f6c\u90fd\u662f\u7528\u7684\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u849f\u84bb\u4e0d\u4f1a\u554a$qwq$\uff0c\u8fd8\u662f\u7528vector\u5427\u3002\n\n### \u611f\u8c22@Fee_cle6418 \u6307\u51fa\u8fd9\u91ccvector\u5e38\u6570\u4e0d\u4e00\u5b9a\u5927\u3002\n\n\u9898\u76ee\u8981\u6c42\u5224\u5b9a\u8d1f\u73af\uff0c\u7531\u4e8edijkstra\u7b97\u6cd5\u65e0\u6cd5\u5904\u7406\u8d1f\u6743\uff0c\u4e8e\u662f\u6211\u53ea\u597d\u65e0(kai)\u5948(xin)\u7684\u4f7f\u7528spfa\u7b97\u6cd5\uff0c\u5373\u961f\u5217\u4f18\u5316\u7684Bellman-Ford\u7b97\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(km)$\uff0c\u8fd9\u91cc$k$\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4f46\u662f\u5bb9\u6613\u88ab\u5361\u6210$O(nm)$\u3002\u4f46\u662f\u5728\u8fd9\u91cc\u53ea\u80fd\u7528spfa\uff0c\u51fa\u9898\u4eba\u662f\u4e0d\u53ef\u80fd\u8fd9\u4e48\u65e0\u826f\u518d\u53bb\u5361spfa\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528\u3002\n\n\u56e0\u4e3aspfa\u662f\u961f\u5217\u4f18\u5316\u7684Bellman-Ford\uff0c\u6240\u4ee5\u6211\u5148\u7b80\u5355\u8bf4\u4e00\u4e0bBellman-Ford\u7b97\u6cd5\u3002\n\nBellman-Ford\u662f\u5bf9\u6574\u5f20\u56fe\u8fdb\u884c$n-1$\u6b21\u677e\u5f1b\uff0c\u6bcf\u6b21\u679a\u4e3e\u6bcf\u6761\u8fb9\u8fdb\u884c\u677e\u5f1b\uff0c\u6700\u540e\u4e00\u5b9a\u80fd\u5f97\u51fa\u6700\u4f18\u89e3\u3002\n\n\u800cspfa\u5c31\u662f\u5728Bellman-Ford\u7684\u57fa\u7840\u4e0a\u907f\u514d\u65e0\u610f\u4e49\u7684\u677e\u5f1b\u64cd\u4f5c\uff0c\u53ea\u6709\u6210\u529f\u7684\u677e\u5f1b\u64cd\u4f5c\u624d\u4f1a\u5bf9\u90a3\u4e2a\u70b9\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u4f7f\u7528\u961f\u5217\u7ef4\u62a4\u7b49\u5f85\u677e\u5f1b\u7684\u70b9\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e00\u4e2a\u70b9\u8fdb\u884c\u677e\u5f1b\uff0c\u5bf9\u4e8e\u6240\u6709\u677e\u5f1b\u6210\u529f\u7684\u70b9\u52a0\u5165\u961f\u5217\uff0c\u6765\u8fbe\u5230\u52a0\u901f\u7684\u76ee\u7684\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\nspfa\u7b97\u6cd5\u6c42\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7684\u4ee3\u7801\uff08[P3371 \u3010\u6a21\u677f\u3011\u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u5f31\u5316\u7248\uff09](https://www.luogu.com.cn/problem/P3371)\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define INF 2147483647//\u6211\u5e76\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u6837\u7684\u6700\u5927\u503c\uff0c\u592a\u5bb9\u6613\u7206\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u9898\u76ee\u5c31\u662f\u8981\u6c42\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\uff0c\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u5e72\u8106\u628a\u6700\u5927\u503c\u5b9a\u4f4d\u8fd9\u4e2a\u6570\u4e86\nstruct edge\n{\n\tint v,w;//\u4fdd\u5b58\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u548c\u8fb9\u6743\n\tedge(int _v=0,int _w=0)//\u521d\u59cb\u5316\u51fd\u6570\uff0c\u65b9\u4fbf\u52a0\u8fb9\n\t{\n\t\tv=_v;\n\t\tw=_w;\n\t}\n};\nvector<edge>g[10001];//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u4ee5\u53ca\u6743\u503c\nint d[10001];//d[x]\u8868\u793a\u4eces\u5230x\u7684\u6700\u77ed\u8def\nbool inq[10001];//inq[x]\u4e3a1\u8868\u793ax\u5728\u961f\u5217\u4e2d\nqueue<int>q;//\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u8981\u5165\u961f\u591a\u6b21\uff0c\u624b\u5199\u961f\u5217\u7a7a\u95f4\u8017\u8d39\u5de8\u5927\uff0c\u53c8\u4e0d\u60f3\u5199\u5faa\u73af\u961f\u5217\uff0c\u5e72\u8106\u7528STL\u597d\u4e86\nint main()\n{\n\tint n,m,s;\n\tscanf(\"%d%d%d\",&n,&m,&s);\n\tint u,v,w;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tg[u].push_back(edge(v,w));//\u5355\u5411\u8fb9\u53ea\u9700\u8981\u52a0\u4e00\u6b21\n\t}\n\tq.push(s);//\u8d77\u59cb\u70b9\u52a0\u5165\u961f\u5217\n\tinq[s]=1;//s\u5728\u961f\u5217\u4e2d\uff0cinq[s]=1\n\tfor (int i=1;i<=n;i++)\n\t\td[i]=INF;//\u5148\u628ad\u6570\u7ec4\u8d4b\u521d\u503c\u4e3aINF\uff0c\u65b9\u4fbf\u6c42\u6700\u5c0f\u503c\n\td[s]=0;//s->s\u5f53\u7136\u662f0\n\twhile (!q.empty())//bfs\n\t{\n\t\tint now=q.front();\n\t\tq.pop();//\u53d6\u51fa\u961f\u9996\n\t\tinq[now]=0;//now\u73b0\u5728\u5df2\u7ecf\u4e0d\u5728\u961f\u5217\uff0cinq[now]=0\n\t\tfor (vector<edge>::iterator it=g[now].begin();it!=g[now].end();it++)//\u8fd9\u4e2a\u65f6\u5019\u7528\u5143\u7d20\u8fed\u4ee3\u5668\u8f83\u65b9\u4fbf\n\t\t\tif  (d[it->v]>d[now]+it->w)//\u5982\u679c\u53ef\u4ee5\u5bf9now\u80fd\u5230\u8fbe\u7684\u70b9\u677e\u5f1b\n\t\t\t{\n\t\t\t\td[it->v]=d[now]+it->w;//\u677e\u5f1b\n\t\t\t\tif  (!inq[it->v])//\u5982\u679c\u677e\u5f1b\u6210\u529f\u7684\u70b9\u4e0d\u5728\u961f\u5217\u4e2d\n\t\t\t\t{\n\t\t\t\t\tq.push(it->v);//\u52a0\u5165\u961f\u5217\n\t\t\t\t\tinq[it->v]=1;//\u8fd9\u4e2a\u70b9\u5df2\u5165\u961f\uff0cinq\u53d8\u4e3a1\n\t\t\t\t}\n\t\t\t}\n\t}\n\tfor (int i=1;i<=n;i++)\n\t\tprintf(\"%d \",d[i]);//\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\n\treturn 0;\n}\n```\n\nPS\uff1aspfa\u7b97\u6cd5\u4e2d\u4efb\u610f\u4e00\u4e2a\u961f\u5217\u6807\u8bb0\u641e\u9519\u90fd\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\u6216\u8dd1\u7684\u5f88\u6162\u3002\n\n\u6709\u4e86\u4e0a\u9762\u7684spfa\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5982\u4f55\u5229\u7528\u4ed6\u5224\u5b9a\u8d1f\u73af\u5462\uff1f\n\n\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u677e\u5f1b\u4e86$n$\u6b21\u53ca\u4ee5\u4e0a\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u8d1f\u73af\uff0c\u5f00\u4e00\u4e2a$times$\u6570\u7ec4\u8bb0\u5f55\u677e\u5f1b\u6b21\u6570\u5373\u53ef\u3002\u539f\u56e0\u5982\u4e0b\uff1a\n\n\u56e0\u4e3aspfa\u7684Bellman-Ford\u7684\u4f18\u5316\uff0c\u800cBellman-Ford\u7b97\u6cd5\u5b8c\u6210\u540e\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u957f\u5ea6\u4e3a$n-1$\u7684\u8def\u5f84\u5168\u90e8\u88ab\u904d\u5386\uff0c\u800c\u5982\u679c\u9700\u8981\u5bf9\u67d0\u4e2a\u70b9\u8fdb\u884c\u7b2c$n$\u6b21\u677e\u5f1b\uff0c\u8bf4\u660e\u5df2\u7ecf\u6210\u73af\u4e86\uff0c\u800c\u8fd9\u4e2a\u73af\u53ef\u4ee5\u4f7f\u6700\u77ed\u8def\u53d8\u5c0f\uff0c\u8bf4\u660e\u4ed6\u4e00\u5b9a\u662f\u8d1f\u73af\uff0c\u800c\u4e14\u8d77\u59cb\u70b9\u80fd\u591f\u5230\u8fbe\u3002\n\n\u5728spfa\u7684\u57fa\u7840\u4e0a\u8bb0\u5f55\u677e\u5f1b\u6b21\u6570\u5373\u53ef\uff0c\u4f46\u672c\u9898\u591a\u7ec4\u6570\u636e\uff0c\u9700\u8981\u7a0d\u4f5c\u6539\u52a8\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u4e0espfa\u4e00\u6837\u7684\u90e8\u5206\u4e0d\u518d\u89e3\u91ca\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\nconst int INF=0x3f3f3f3f;//\u6211\u4e60\u60ef\u5b9a\u4e49INF\u4e3a0x3f3f3f3f\uff0c\u7406\u7531\u662f\u53ef\u4ee5memset\nusing namespace std;\nstruct edge\n{\n\tint v,w;\n\tedge(int _v=0,int _w=0)\n\t{\n\t\tv=_v;\n\t\tw=_w;\n\t}\n};\nint n;\nvector<edge>g[2001];\nint d[2001];\nbool inq[2001];\nqueue<int>q;\nint times[2001];//\u8bb0\u5f55\u677e\u5f1b\u6b21\u6570\nvoid spfa(int s)//\u591a\u7ec4\u6570\u636e\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u7528\u4e86\u51fd\u6570\n{\n\tmemset(inq,0,sizeof(inq));\n\tmemset(d,INF,sizeof(d));\n\tmemset(times,0,sizeof(times));\n\twhile (!q.empty())\tq.pop();//\u591a\u7ec4\u6570\u636e\uff0c\u5904\u7406\u524d\u8981\u5168\u90e8\u6e05\u7a7a\n\tq.push(s);\n\tinq[s]=1;\n\td[s]=0;\n\ttimes[s]=1;\n\twhile (!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tinq[now]=0;\n\t\tfor (vector<edge>::iterator it=g[now].begin();it!=g[now].end();it++)\n\t\t\tif  (d[it->v]>d[now]+it->w)\n\t\t\t{\n\t\t\t\td[it->v]=d[now]+it->w;\n\t\t\t\ttimes[it->v]++;//\u677e\u5f1b\u6b21\u6570\u52a01\n\t\t\t\tif  (times[it->v]>n)//\u5982\u679c\u5df2\u7ecf\u6709\u70b9\u677e\u5f1b\u6b21\u6570\u5927\u4e8en\n\t\t\t\t{\n\t\t\t\t\tputs(\"YES\");//\u8bf4\u660e\u6709\u8d1f\u73af\uff0c\u8f93\u51faYES\n\t\t\t\t\treturn;//\u8fd4\u56de\uff0c\u4e0d\u9700\u8981\u7ee7\u7eed\u904d\u5386\n\t\t\t\t}\n\t\t\t\tif  (!inq[it->v])\n\t\t\t\t{\n\t\t\t\t\tq.push(it->v);\n\t\t\t\t\tinq[it->v]=1;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tputs(\"NO\");//\u6c38\u8fdc\u6ca1\u6709\u70b9\u677e\u5f1b\u6b21\u6570\u5927\u4e8en\uff0c\u8bf4\u660e\u65e0\u8d1f\u73af\n}\nint main()\n{\n\tint t,m;\n\tscanf(\"%d\",&t);\n\tfor (int i=1;i<=t;i++)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tint u,v,w;\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\t\tg[u].push_back(edge(v,w));\n\t\t\tif  (w>=0)  g[v].push_back(edge(u,w));//\u5927\u4e8e\u7b49\u4e8e0\u65f6\u53cc\u5411\u8fb9\n\t\t}\n\t\tspfa(1);//\u8c03\u7528\u51fd\u6570\uff0c\u8d77\u70b9\u4e3a1\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tg[j].clear();//\u6e05\u7a7a\n\t}\n\treturn 0;\n}\n```\n\n\u7528vector\u7684\u7801\u91cf\u8fd8\u662f\u6bd4\u94fe\u5f0f\u524d\u5411\u661f\u5c11\uff0c~~\u9002\u5408\u6211\u8fd9\u79cd\u61d2\u4eba~~\u3002",
        "postTime": 1587004046,
        "uid": 297433,
        "name": "Brian_WBY",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "## [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3385)\n## \u9898\u610f\n\u6709 $T$ \u5f20\u6709\u5411\u56fe\uff0c\u95ee\u6bcf\u5f20\u56fe\u4e2d\u6709\u6ca1\u6709\u8d1f\u73af\u3002\n## \u601d\u8def\n\u5224\u5b9a\u6bcf\u4e00\u5f20\u56fe\u4e2d\u6709\u6ca1\u6709\u8d1f\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528 SPFA \u7b97\u6cd5\u8fdb\u884c\u6c42\u89e3\u3002\n## SPFA \u7b97\u6cd5\n\u5728\u4efb\u610f\u56fe\u7684**\u5355\u6e90**\u6700\u77ed\u8def\u5f84\u95ee\u9898\u4e2d\uff0c\u8fb9\u6743**\u53ef\u4ee5\u4e3a\u8d1f**\u3002\n\n\u6b64\u65f6\u72b6\u6001\u4e0d\u50cf\u6b63\u6743\u56fe\u4e2d\u4e00\u6837\uff0c\u4e0d\u518d\u6709\u53ef\u7528\u7684\u62d3\u6251\u5e8f\uff0c\u53ea\u80fd\u8fdb\u884c**\u641c\u7d22**\u3002\n\n\u4f46\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528**\u6700\u4f18\u6027\u526a\u679d**\u3002\n\n### SPFA \u7b97\u6cd5\uff1a\u5bbd\u641c\u6c42\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\n\u5b83\u662f\u57fa\u4e8e Bellman-Ford \u7b97\u6cd5\u7684\u4e00\u79cd\u4f18\u5316\u3002\n\n\u4f18\u5316\u4e86\u4e24\u70b9\uff1a\n\n- \u6700\u4f18\u6027\u526a\u679d\uff1a\u6bcf\u4e2a\u70b9\u53ea\u8bb0\u5f55\u5f53\u524d\u6700\u77ed\u7684\u8def\u5f84\u957f\u5ea6\u3002\n- \u5165\u961f\u4f18\u5316\uff1a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u88ab\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u8be5\u70b9\u8fd8\u5728\u961f\u5217\u4e2d\uff0c\u5219\u4e0d\u91cd\u590d\u5165\u961f\u3002\n\n### SPFA \u7b97\u6cd5\u5b9e\u73b0\u601d\u8def\n$1.$ \u521d\u59cb\u5316\u6240\u6709\u70b9\uff0c\u8d77\u70b9\u5165\u961f\u3002\n\n$2.$ \u6309\u987a\u5e8f\u5904\u7406\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u70b9\u3002\n\n$2. 1.$ \u6807\u8bb0\u5f53\u524d\u70b9\u51fa\u961f\u3002\n\n$2. 2.$ \u679a\u4e3e\u90bb\u70b9\uff0c\u627e\u5230\u80fd\u591f\u66f4\u65b0\u8ddd\u79bb\u7684\u70b9\u3002\n\n$2.2.1.$ \u8bb0\u5f55\u66f4\u65b0\u7684\u8ddd\u79bb\u3002\n\n$2.2.2.$ \u5982\u679c\u90bb\u70b9\u4e0d\u5728\u961f\u4e2d\uff0c\u5219\u5165\u961f\u5e76\u6807\u8bb0\u3002\n### SPFA \u7b97\u6cd5\u793a\u4f8b\n\n\u6211\u4eec\u8003\u8651\u8fd9\u6837\u7684\u4e00\u5f20\u56fe\uff0c\u4ee5 $1$ \u4e3a\u8d77\u70b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xlf6ysc7.png)\n\nSPFA \u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1. \u521d\u59cb\u72b6\u6001 $[1, 0]$ \uff0c\u5165\u961f\u3002\n2. \u5904\u7406\u72b6\u6001 $[1, 0]$\u3002 \n3. \u5f97\u5230\u72b6\u6001 $[2, 24]$\uff0c\u66f4\u65b0\u70b9 $2$\uff0c\u5165\u961f\u3002\n4. \u5f97\u5230\u72b6\u6001 $[3, 8]$\uff0c\u66f4\u65b0\u70b9 $3$\uff0c\u5165\u961f\u3002\n5. \u5f97\u5230\u72b6\u6001 $[4, 15]$\uff0c\u66f4\u65b0\u70b9 $4$\uff0c\u5165\u961f\u3002\n6. \u5904\u7406\u72b6\u6001 $[2, 24]$\u3002\n7. \u5f97\u5230\u72b6\u6001 $[5, 30]$\uff0c\u66f4\u65b0\u70b9 $5$\uff0c\u5165\u961f\u3002\n8. \u5904\u7406\u72b6\u6001 $[3, 8]$\u3002\n9. \u5f97\u5230\u72b6\u6001 $[5, 15]$\uff0c\u66f4\u65b0\u70b9 $5$\uff0c\u5df2\u5728\u961f\u4e2d\uff0c\u4e0d\u5165\u961f\u3002\n10. \u5f97\u5230\u72b6\u6001 $[6, 11]$\uff0c\u66f4\u65b0\u70b9 $6$\uff0c\u5165\u961f\u3002\n11. \u5904\u7406\u72b6\u6001 $[4, 15]$\u3002\n12. \u5f97\u5230\u72b6\u6001 $[7, 19]$\uff0c\u66f4\u65b0\u70b9 $7$\uff0c\u5165\u961f\u3002\n13. \u5904\u7406\u72b6\u6001 $[5, 15]$\u3002\n14. \u5f97\u5230\u72b6\u6001 $[7, 24]$\uff0c\u6ca1\u6709\u66f4\u65b0\u70b9 $7$\uff0c\u820d\u5f03\u3002\n15. \u5904\u7406\u72b6\u6001 $[6, 11]$\u3002\n16. \u5f97\u5230\u72b6\u6001 $[4, 16]$\uff0c\u6ca1\u6709\u66f4\u65b0\u70b9 $4$\uff0c\u820d\u5f03\u3002\n17. \u5f97\u5230\u72b6\u6001 $[5, 13]$\uff0c\u66f4\u65b0\u70b9 $5$\uff0c\u5165\u961f\u3002\n18. \u5f97\u5230\u72b6\u6001 $[7, 14]$\uff0c\u66f4\u65b0\u70b9 $7$\uff0c\u5df2\u5728\u961f\u4e2d\uff0c\u4e0d\u5165\u961f\u3002\n19. \u5904\u7406\u72b6\u6001 $[7, 14]$\u3002\n20. \u5f97\u5230\u72b6\u6001 $[2, 17]$\uff0c\u66f4\u65b0\u70b9 $2$\uff0c\u5165\u961f\u3002\n21. \u5904\u7406\u72b6\u6001 $[5, 13]$\u3002\n22. \u5f97\u5230\u72b6\u6001 $[7, 22]$\uff0c\u6ca1\u6709\u66f4\u65b0\u70b9 $7$\uff0c\u820d\u5f03\u3002\n23. \u5904\u7406\u72b6\u6001 $[2, 17]$\u3002\n24. \u5f97\u5230\u72b6\u6001 $[5, 23]$\uff0c\u6ca1\u6709\u66f4\u65b0\u70b9 $5$\uff0c\u820d\u5f03\u3002\n25. \u6240\u6709\u72b6\u6001\u5904\u7406\u5b8c\u6bd5\uff0c\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v09hs8gl.png)\n\n### \u590d\u6742\u5ea6\u5206\u6790\n\u4ee4\u70b9\u6570\u4e3a $n$\uff0c\u8fb9\u6570\u4e3a $m$\u3002\n\n\u6bcf\u4e2a\u70b9\u6700\u591a\u5165\u961f $O(n)$ \u6b21\uff0c\u5bf9\u4e8e**\u968f\u673a\u56fe**\uff0c**\u671f\u671b**\u5165\u961f\u6b21\u6570 $O(1)$\u3002\n#### \u65f6\u95f4\u590d\u6742\u5ea6\n\u904d\u5386\u56fe\u4e00\u6b21 $O(n + m)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n + m)n)$\uff0c**\u671f\u671b**\u65f6\u95f4\u590d\u6742\u5ea6 $O(n + m)$\u3002\n#### \u7a7a\u95f4\u590d\u6742\u5ea6\n\u961f\u5217\u4e2d\u70b9\u6570 $O(n)$\u3002\n\n\u5b58\u50a8\u56fe $O(n + m)$\u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n + m)$\u3002\n### SPFA \u7b97\u6cd5\u5224\u5b9a\u8d1f\u73af\nSPFA \u7b97\u6cd5\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\u3002\n\n\u4ee4\u56fe\u4e2d\u70b9\u6570\u4e3a $n$\uff0c\u5982\u679c\u6ca1\u6709\u8d1f\u73af\uff0c\u4efb\u610f\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8fb9\u6570\u6700\u591a\u4e3a $n - 1$\u3002\n\n\u70b9\u662f**\u6309\u987a\u5e8f**\u5904\u7406\u7684\uff0c\u4e00\u4e2a\u70b9\u5728\u4e24\u6b21\u5165\u961f\u4e4b\u95f4\uff0c**\u81f3\u5c11**\u6709\u4e00\u4e2a\u65b0\u70b9\u6c42\u51fa\u4e86\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u6240\u4ee5\uff0c\u5982\u679c\u6709\u70b9\u5165\u961f\u6b21\u6570\u8fbe\u5230 $n$\uff0c\u5fc5\u7136\u5b58\u5728\u8d1f\u73af\u3002\n## code\n~~~cpp\n#include <iostream>\n#include <queue>\n#include <vector>\n\nusing namespace std;\nusing PII = pair<int, int>;\n\nconst int kMaxN = 2e3 + 1, kInf = ~(1 << 31);\n\nstruct Edge {     // \u70b9\n  vector<PII> e;  // \u8fb9\uff0c\u8bb0\u5f55\u6307\u5411\u8282\u70b9\u548c\u957f\u5ea6\n  int d = kInf;   // \u8ddd\u79bb\n  int vis;        // \u5165\u961f\u6b21\u6570\n  bool b;         // \u5728\u961f\u5217\u4e2d\u7684\u6807\u8bb0\n} edge[kMaxN];\nqueue<int> q;\nint t, n, m;\n\nbool Record(int x, int d) {  // \u5904\u7406x\u70b9\u8ddd\u79bbd\u7684\u65b0\u72b6\u6001\n  if (d < edge[x].d) {       // \u662f\u66f4\u4f18\u72b6\u6001\n    edge[x].d = d;           // \u8bb0\u5f55\n    if (!edge[x].b) {        // \u70b9\u4e0d\u5728\u961f\u4e2d\n      edge[x].b = 1;         // \u6807\u8bb0\u5165\u961f\n      edge[x].vis++;         // \u5165\u961f\u6b21\u6570\u589e\u52a0\n      q.push(x);             // \u5165\u961f\n    }\n  }\n  return edge[x].vis >= n;  // \u5224\u5b9a\u8d1f\u73af\n}\n\nbool SPFA() {                                // SPFA\u6c42\u6700\u77ed\u8def&\u5224\u5b9a\u8d1f\u73af\n  for (Record(1, 0); !q.empty(); q.pop()) {  // \u8bb0\u5f55\u8d77\u59cb\u72b6\u6001\uff0c\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u72b6\u6001\n    int x = q.front();\n    edge[x].b = 0;                                  // \u6807\u8bb0\u51fa\u961f\n    for (PII e : edge[x].e) {                       // \u904d\u5386\u90bb\u8fb9\n      if (Record(e.first, edge[x].d + e.second)) {  // \u5904\u7406\u65b0\u72b6\u6001&\u5224\u5b9a\u8d1f\u73af\n        return 1;                                   // \u662f\u8d1f\u73af\uff0c\u8fd4\u56de\n      }\n    }\n  }\n  return 0;  //\u6c42\u5b8c\u6240\u6709\u70b9\u6700\u77ed\u8def\u540e\u4ecd\u7136\u6ca1\u6709\u51fa\u73b0\u8d1f\u73af\n}\n\nvoid Make() {  // \u591a\u6d4b\u6e05\u7a7a\n  vector<PII> f;\n  fill(&edge[0], &edge[kMaxN], (Edge){f, kInf, 0, 0});\n  while (!q.empty()) {\n    q.pop();\n  }\n}\n\nint main() {\n  cin >> t;\n  while (t--) {\n    Make();\n    cin >> n >> m;\n    for (int i = 1, u, v, w; i <= m; i++) {  //\u5efa\u8fb9\n      cin >> u >> v >> w;\n      edge[u].e.push_back({v, w});\n      if (w >= 0) {\n        edge[v].e.push_back({u, w});\n      }\n    }\n    cout << (SPFA() ? \"YES\" : \"NO\") << endl;\n  }\n  return 0;\n}\n~~~\n### \u6ce8\u610f\uff1a\u90e8\u5206\u4ee3\u7801\u4e3a C++ 17 \u7684\u8bed\u6cd5\uff0c\u4f7f\u7528 C++ 11 \u6216 C++ 14 \u7b49\u8bc4\u6d4b\u53ef\u80fd\u4f1a\u7f16\u8bd1\u9519\u8bef",
        "postTime": 1629020252,
        "uid": 392856,
        "name": "\u4fe1\u5b88\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3P3385\u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u8d1f\u73af\u5b9a\u4e49\uff1a\n\n> \u4e00\u6761\u8fb9\u6743\u4e4b\u548c\u4e3a\u8d1f\u6570\u7684\u56de\u8def\u3002\n\n\u8d1f\u73af\u81ea\u7136\u7528 SPFA \u6765\u5224\uff08Dijstra \u751a\u81f3\u4e0d\u80fd\u5904\u7406\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\uff0c[\u4e3a\u4ec0\u4e48](https://blog.csdn.net/u012677715/article/details/79346113)\uff09\u3002\n\u800c\u672a\u7528\u961f\u5217\u4f18\u5316\u7684 [Bellman-ford](https://blog.csdn.net/anlian523/article/details/80953767) \u590d\u6742\u5ea6\u4e3a $O(n\\times e)$\uff0c\u4e0d\u662f\u6211\u4eec\u80fd\u63a5\u53d7\u7684\u3002\n\n**SPFA \u80fd\u5224\u65ad\u8d1f\u6743\u73af\u5f97\u76ca\u4e8e\u5176\u7684\u677e\u5f1b\u64cd\u4f5c\u3002**\n\u5728 SPFA \u4e2d\uff0c\u6211\u4eec\u8ddf\u65b0\u6700\u77ed\u8def\u7684\u6761\u4ef6\u4e3a $dist[u]>dist[v]+len[v][u]$\u3002\u5373\u539f\u70b9\u901a\u8fc7\u5f53\u524d\u5df2\u77e5\u8def\u5f84\u4ece\u4e00\u8282\u70b9\u5230\u8fbe\u65b0\u7684\u8282\u70b9\u7684\u8ddd\u79bb\u5c0f\u4e8e\u539f\u70b9\u76f4\u63a5\u4ece\u5df2\u77e5\u8def\u5f84\u5230\u8fbe\u65b0\u7684\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u8ddf\u65b0\u5b8c\u6210\u540e\uff0c\u7531\u4e8e\u65b0\u7684\u8282\u70b9\u53ef\u80fd\u66f4\u65b0\u51fa\u4e00\u6761\u66f4\u4f18\u8def\u5f84\uff0c\u5c31\u653e\u5165\u961f\u4e2d\uff08\u6ca1\u5165\u961f\u7684\u8bdd\uff09\u3002\u6b64\u79f0\u4e3a\u4e00\u6b21\u677e\u5f1b\u3002\n\n\u5728\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u70b9\u5165\u961f\u6700\u591a\u6b21\u4e3a $n-1$\uff0c\u539f\u56e0\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4 Bellman-ford\uff1a\u5728 Bellman-ford \u7684\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u8fed\u4ee3\u4e00\u6b21\u5c31\u6700\u5c11\u4f1a\u6c42\u51fa\u4e00\u4e2a\u70b9\u5230\u6e90\u70b9\u7684\u6700\u77ed\u8def\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u4f1a\u88ab\u8fed\u4ee3 $n-1$ \u6b21,\u6362\u6210\u4e86 SPFA\uff0c\u5c31\u662f\u6bcf\u4e2a\u70b9\u6700\u591a\u4f1a\u5165\u961f $n-1$ \u6b21\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd0\u7528\u8fd9\u70b9\u6765\u5224\u65ad\u8d1f\u73af\u3002\n\n\u5982\u679c\u5b58\u5728\u8d1f\u73af\uff0c\u610f\u5473\u7740\u8fd9\u4e2a\u73af\u5c06\u4e0d\u65ad\u8ddf\u65b0\uff0c\u8fed\u4ee3\u7684\u6b21\u6570\u4e5f\u5c06\u65e0\u7a77\u65e0\u5c3d\u3002\u90a3\u6211\u4eec\u7528\u4e00\u4e2a $intot$ \u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\uff08\u4e5f\u5c31\u662f\u8fed\u4ee3\u6b21\u6570\uff09\u3002\u5f53\u67d0\u4e2a\u70b9\u7684\u5165\u961f\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $n$ \u65f6\uff0c\u5373\u610f\u5473\u7740\u5b58\u5728\u8d1f\u73af\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u3002\n\n```\n#include <bits/stdc++.h>\n#define ll long long\n#define M 10200\n#define N 10200\nusing namespace std;\ninline int read()\n{\n    int re=0, f=1; char ch=getchar();\n    while(ch<'0' || ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n    while(ch>='0' && ch<='9') {re=(re<<1)+(re<<3)+(ch-'0'); ch=getchar();}\n    return re*f;\n}//\u5feb\u8bfb\nstruct node{\n\tint next;\n\tint to;\n\tint len;\n}a[M];\nint head[N],num=0;\nvoid edge(int x,int y,int z)\n{\n\ta[++num].len=z;\n\ta[num].to=y;\n\ta[num].next=head[x];\n\thead[x]=num;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nqueue<int >q;\nint bj[N];//\u8bb0\u5f55\u70b9\u662f\u5426\u5728\u961f\u5217\u4e2d\nint intot[N];//\u8bb0\u5f55\u5165\u961f\u6b21\u6570\nll dist[N];//\u8bb0\u5f55\u5230\u6e90\u70b91\u7684\u6700\u77ed\u8def\nint n,m;\nint ans[100];//\u6839\u636e\u6b64\u8f93\u51fa\u7b54\u6848\n\nvoid spfa(int t)//\u6807\u690eSPFA\n{\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();bj[u]=0;\n\t\tfor (int i=head[u];i;i=a[i].next)\n\t\t{\n\t\t\tint v=a[i].to;\n\t\t\tif (dist[u]+a[i].len<dist[v])\n\t\t\t{\n\t\t\t\tdist[v]=dist[u]+a[i].len;\n\t\t\t\tif (bj[v]==0)\n\t\t\t\t{\n\t\t\t\t    intot[v]++;//\u8bb0\u5f55\u5165\u961f\u6b21\u6570\n\t\t\t\t\tq.push(v);bj[v]=1;\n\t\t\t\t\tif (intot[v]>=n) \n\t\t\t\t\t{\n\t\t\t\t\t\tans[t]=1;//\u5165\u961f\u592a\u591a\u4e86\u5c31\u8bb0\u5f55\u5f53\u524d\u6570\u636e\u5b58\u5728\u8d1f\u73af\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tans[t]=0;return ;//\u5b8c\u6574\u505a\u5b8c\u6700\u77ed\u8def\u5373\u4e0d\u5b58\u5728\u8d1f\u73af\n}\nvoid ng(int t)\n{\n\tmemset(a, 0, sizeof(a));\n\tmemset(bj,0, sizeof(bj));\n\tmemset(head, 0, sizeof(head));\n\tmemset(intot, 0, sizeof(intot));\n\tmemset(dist,0x3f3f3f3f, sizeof(dist));\n\twhile(!q.empty())q.pop();num=0;//\u521d\u59cb\u5316\n\tn=read();m=read();\n\tfor (int i=1;i<=m;++i)\n\t{\n\t\tint x,y,z;\n\t\tx=read();y=read();z=read();\n\t\tedge(x,y,z);\n\t\tif (z>=0)edge(y,x,z);//\u522b\u5fd8\u4e86\u5f53\u6709\u4e00\u8fb9\u6743\u503c\u5927\u4e8e\u96f6\u65f6\u5b58\u4e24\u8fb9\n\t}\n\tq.push(1);bj[1]=1;intot[1]++;\n\tdist[1]=0;spfa(t);//\u5148\u628a1\u5165\u961f\n}\nint main()\n{\n\tint t;\n\tt=read();\n\tfor (int i=1;i<=t;++i) ng(i);\n\tfor (int i=1;i<=t;++i)\n\t{\n\t\tif (ans[i]==1)cout<<\"YES\"<<endl;\n\t\telse cout<<\"NO\"<<endl;\n\t}//\u5408\u8d77\u6765\u8f93\u51fa\n\treturn 0;\n}\n\n```\n",
        "postTime": 1597043674,
        "uid": 73365,
        "name": "\u5b89\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "\u672c\u6765\u4e00\u770b\u8d1f\u8fb9\uff0c\u73af\u6761\u4ef6\u53cd\u5c04\u7684\u60f3floyd\n\n\u5199\u4e86\u4e00\u534a\u770b\u6570\u636e\u8303\u56f4\u53d1\u73b0\u70b8\u4e86QAQ\n\ndijkstra\u4e0d\u80fd\u5904\u7406\u8d1f\u8fb9\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u53ea\u80fd\u7528spfa\n\n\u800c\u5f53SPFA\u7b97\u6cd5\u4e2d\u4e00\u4e2a\u70b9\u7684d\u503c\u88ab\u66f4\u65b0\u8fbe\u5230n\u6b21\uff0c\u8bf4\u660e\u56fe\u4e2d\u5b58\u5728\u8d1f\u73af\n\n\u56e0\u6b64\u53ea\u9700\u8981\u4ece1\u5f00\u59cb\u5e7f\u641c\uff0c\u6bcf\u4e00\u6b21\u8bb0\u5f55\u6539\u70b9\u7684\u5230\u8fbe\u6b21\u6570\u5c31\u884c\u4e86\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,m,u,v,w,nn,vis[2005],viss[2005],d[2005];\nstruct lmf{\n\tint v,w;\n\tlmf(int a,int b){\n\t\tv=a;\n\t\tw=b;\n\t}\n};\nvector<lmf> g[2005];\nbool fid=0;\nbool vi[2005];\nqueue<int> q;\nint main(){\n\tcin>>t;\n\twhile(t--){\n\t\tcin>>n>>m;\n\t\tmemset(d,0x7f,sizeof(d));\n\t\tmemset(viss,0,sizeof(viss));\n\t\tfid=0;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\t\tg[u].push_back(lmf(v,w));\n\t\t\tif(w>=0)g[v].push_back(lmf(u,w));\n\t\t}\n\t\td[1]=0;\n\t\tq.push(1);\n\t\twhile(!q.empty()){\n\t\t\tu=q.front();\n\t\t\tq.pop();\n\t\t\tvi[u]=0;\n\t\t\tif(viss[u]>=n){\n\t\t\t\tcout<<\"YES\"<<endl;\n\t\t\t\tfid=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i=0;i<g[u].size();i++)if(d[u]+g[u][i].w<d[g[u][i].v]){\n\t\t\t\tviss[g[u][i].v]++;\n\t\t\t\td[g[u][i].v]=d[u]+g[u][i].w;\n\t\t\t\tif(!vi[g[u][i].v]){\n\t\t\t\t\tvi[g[u][i].v]=1;\n\t\t\t\t\tq.push(g[u][i].v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)g[i].clear();\n\t\tif(!fid)cout<<\"NO\"<<endl;\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1590392968,
        "uid": 181521,
        "name": "\u73c8\u4e50\u552f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3385 \u3010\u3010\u6a21\u677f\u3011\u8d1f\u73af\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u4f20\u9001\u95e8\uff1a[link](https://www.luogu.com.cn/problem/P3385)\n\n\u7ed9\u4f60 $T$ \u4e2a\u56fe\uff0c\u6bcf\u4e2a\u56fe\u6709 $n$ \u4e2a\u70b9\u548c $m$ \u6761\u7531 $u$ \u5230 $v$ \u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u3002\n\n\u73b0\u7ed9\u4f60\u8fd9 $m$ \u6761\u8fb9\uff0c\u6c42\u56fe\u4e2d\u662f\u5426\u6709\u8d1f\u73af\u3002\n### \u505a\u6cd5\n#### \u7b97\u6cd5\u5206\u6790\n\u6839\u636e\u9898\u7684\u5927\u610f\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u662f\u4e00\u9053\u5355\u6e90\u6700\u77ed\u8def\u7684\u9898\u76ee\u3002\n\n\u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5\u6709 dij \u548c SPFA\uff0c\u90a3\u8fd9\u9053\u9898\u5e94\u8be5\u7528\u54ea\u9053\u7b97\u6cd5\u5462\uff1f\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff1a\n\n- $1 \\leq n \\leq 2 \\times 10^3$\uff0c$1 \\leq m \\leq 3 \\times 10^3$\u3002\n\n- $1 \\leq u, v \\leq n$\uff0c$-10^4 \\leq w \\leq 10^4$\u3002\n\n- $1 \\leq T \\leq 10$\u3002\n\n\u5f88\u660e\u663e\u4f1a\u6709\u8d1f\u73af\uff0c\u8fd9\u65f6 dij \u5c31\u884c\u4e0d\u901a\u4e86\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528 SPFA \u4e86\u3002\n#### \u7b97\u6cd5\u8bb2\u89e3\nSPFA \u4e3a\u80fd\u591f\u6709\u6548\u5224\u65ad**\u8d1f\u73af**\u7684\u4e00\u79cd\u5355\u6e90\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u4f46\u5176\u7b97\u6cd5\u590d\u6742\u5ea6\u6bd4\u4e0d\u4e0a dij\uff0c\u5728\u5b58\u5728\u83ca\u82b1\u56fe\u7684\u60c5\u51b5\u4e0b\uff0c\u5f88\u5bb9\u6613\u539f\u5730\u7206\u70b8\u3002\n\n\u4f46\u7531\u4e8e\u80fd\u591f\u5224\u65ad\u8d1f\u73af\u7684\u6027\u8d28\uff0c\u624d\u4f7f\u5f97\u5b83\u5728\u540c\u7c7b\u6700\u77ed\u8def\u7b97\u6cd5\u4e2d\u6ca1\u6709\u88ab\u6dd8\u6c70\uff08\u53ef\u5e94\u7528\u4e8e Johnson \u5168\u6e90\u6700\u77ed\u8def\u7b97\u6cd5\u4e2d\uff09\uff0c\u5176\u4e3b\u8981\u601d\u60f3\u4e3a**\u8d2a\u5fc3**\u3002\n\nSPFA \u7684\u72ec\u7279\u6027\u8d28\u5728\u4e8e\u4ed6\u7684\u4e00\u4e2a\u70b9\u80fd\u591f\u4e0d\u6b62\u4e00\u6b21\u8fdb\u961f\uff0c\u8fd9\u4e2a\u7279\u70b9\u6709\u5229\u4e5f\u6709\u5f0a\uff0c\n\n\u5229\u5728\u4e8e\u5b83\u53ef\u4ee5\u901a\u8fc7\u5165\u961f\u6b21\u6570\u6765\u5224\u65ad\u8d1f\u73af\uff1b\n\n\u5f0a\u5728\u4e8e\u5b83\u5bb9\u6613\u88ab\u5361\uff08~~\u5173\u4e8eSPFA\uff0c\u4ed6\u6b7b\u4e86~~\uff09\u3002\n\n\u4f46\u5728\u6b64\u9898\u4e2d\u5b83\u80fd\u5b8c\u7f8e\u80dc\u4efb dij\uff08\u4ed6\u4e0d\u80fd\u5224\u8d1f\u73af\uff09\u3002\n\n\u8d44\u6599\uff1a[link](https://www.luogu.com.cn/blog/natieyes/zui-duan-lu-suan-fa-zhi-spfa)\n#### \u7b97\u6cd5\u5b9e\u73b0\n\u7b54\u9898\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5148\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u518d\u7528 SPFA \u904d\u5386\u5373\u53ef\uff0c\u6240\u4ee5\u95ee\u9898\u5728\u4e8e SPFA \u7684\u6574\u4f53\u6846\u67b6\u3002\n\n\u6536\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u961f\u5217\uff0c\u5148\u628a $1$ \u53f7\u70b9\u5b58\u8fdb\u53bb\uff0c\u518d\u904d\u5386\u5230\u4e0e $1$ \u53f7\u70b9\u6240\u8fde\u63a5\u7740\u7684\u70b9\uff0c\u4f9d\u6b21\u677e\u5f1b\u3001\u5165\u961f\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5165\u961f\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $n$ \u5c31\u76f4\u63a5\u8f93\u51fa `YES` \u63a5\u7740 `return`\uff1b\u5982\u679c\u961f\u5217\u4e3a\u7a7a\u4e86\uff0c\u4f46\u4f9d\u65e7\u6ca1\u6709\u8f93\u51fa `YES` \u5c31\u8f93\u51fa `NO`\u3002\n### Code\n```cpp\n//\u6ce8\u91ca\u6781\u5c11\u7248\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\nint t,cnt;\nint dis[10001],v[10001];\nint head[10001],tim[10001];\n\nstruct Node{\n    int to,next,dis;\n}edge[100001];\n\nvoid add(int t1,int t2,int t3) {//\u5b58\u56fe\n    cnt++;\n    edge[cnt].to=t2;\n    edge[cnt].dis=t3;\n    edge[cnt].next=head[t1];\n    head[t1]=cnt;\n}\n\nvoid SPFA_dui(int n) {\n    queue<int> q;\n    memset(dis,0x3f,sizeof(dis));\n    memset(v,0,sizeof(v));\n    memset(tim,0,sizeof(tim));\n    //\u521d\u59cb\u5316\n    dis[1]=0;\n    v[1]=1;\n    q.push(1);//\u52a0\u5165 1\n    while (!q.empty()) {\n        int x=q.front();\n        q.pop();\n        v[x]=0;\n        for (int i=head[x];i;i=edge[i].next) {//\u94fe\u5f0f\u524d\u5411\u661f\u904d\u5386\n            int y=edge[i].to;\n            if (dis[y]>dis[x]+edge[i].dis) {//relax\n                dis[y]=dis[x]+edge[i].dis;\n                tim[y]=tim[x]+1;\n                if (tim[y]>=n) {//\u6709\u8d1f\u73af\n                    cout<<\"YES\"<<endl;\n                    return;\n                }\n                if (!v[y]) {//\u5165\u961f\n                    v[y]=1;\n                    q.push(y);\n                }\n            }\n        }\n    }\n    cout<<\"NO\"<<endl;\n    \n}\n\nint main() {\n    scanf(\"%d\",&t);\n    for (int i=1;i<=t;i++) {\n        memset(head,0,sizeof(head));//\u6709\u591a\u7ec4\u6570\u636e\uff0c\u8bb0\u5f97\u6e05\u7a7a\n        int n,m;\n        scanf(\"%d%d\",&n,&m);\n        for (int j=1;j<=m;j++) {\n            int t1,t2,t3;\n            cin>>t1>>t2>>t3;\n            add(t1,t2,t3);\n            if (t3>=0) {\n                add(t2,t1,t3);\n            }\n        }\n        SPFA_dui(n);\n        cnt=0;\n    }\n}\n```",
        "postTime": 1633176709,
        "uid": 420129,
        "name": "Nt_Tsumiki",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011 P3385 \u3010\u6a21\u677f\u3011\u8d1f\u73af"
    }
]