[
    {
        "content": "\u8003\u8651\u66f4\u7b80\u6d01\u7684 $\\text{cdq}$ \u505a\u6cd5\u3002\n\n\u7ea6\u5b9a\uff1a\u7b2c $i$ \u4e2a\u77e9\u5f62\u5de6\u4e0b\u89d2\u4e3a $(xl_i,yl_i)$\uff0c\u53f3\u4e0a\u89d2\u4e3a $(xr_i,yr_i)$\uff0c\u6240\u6709\u5750\u6807\u90fd\u5df2\u79bb\u6563\u5316\u3002\n\n\u5982\u679c \u7b2c $i$ \u4e2a\u77e9\u5f62\u53ef\u4ee5\u8986\u76d6\u7b2c $j$ \u4e2a\u77e9\u5f62\uff0c\u90a3\u4e48\u5fc5\u987b\u6ee1\u8db3\uff1a\n\n\n- $i>j$\n\n- $xl_i\\le xr_j,xr_i\\ge xl_j$\uff08\u6a2a\u5411\u6709\u4ea4\u70b9\uff09\n\n- $yl_i\\le yr_j,yr_i\\ge yl_j$\uff08\u7ad6\u5411\u6709\u4ea4\u70b9\uff09\n\n\u9996\u5148\u5c06\u77e9\u5f62\u6309\u7167\u51fa\u73b0\u7684\u987a\u5e8f\u964d\u5e8f\u6392\u5217\uff0c\u89e3\u51b3\u5b8c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002\n\n\u8003\u8651\u6ee1\u8db3 $xl_i\\le xr_j$\u3002\u5c06 $[l,mid]$ \u6309\u7167 $xl$ \u6392\u5e8f\uff0c$[mid+1,r]$ \u6309\u7167 $xr$ \u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6ee1\u8db3 $xl_i\\le xr_j$ \u6761\u4ef6\u7684\u77e9\u5f62\u5b58\u5165\u7ebf\u6bb5\u6811\u4e2d\uff08\u5177\u4f53\u5b58\u6cd5\u540e\u6587\u8bb2\uff09\uff0c\u8fd9\u6837\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u77e9\u5f62\u90fd\u968f\u65f6\u6ee1\u8db3 $xl_i\\le xr_j$\u3002\n\n\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5c06\u77e9\u5f62\u5b58\u50a8\u5230\u7ebf\u6bb5\u6811\u4e2d\u6765\u6ee1\u8db3\u5269\u4e0b\u4e09\u4e2a\u6761\u4ef6\u3002\n\n\u5c06\u7ebf\u6bb5\u6811\u770b\u505a\u7eb5\u5750\u6807\u7684\u503c\u57df\uff0c\u90a3\u4e48\u5b58\u50a8\u7b2c $i$ \u4e2a\u77e9\u5f62\u5c31\u4e00\u5b9a\u662f\u5bf9\u533a\u95f4 $[yl_i,yr_i]$ \u8fdb\u884c\u64cd\u4f5c\uff0c\u4e14\u64cd\u4f5c\u7684\u503c\u4e00\u5b9a\u548c $xr_i$ \u6709\u5173\u3002\n\n\u770b\u5230\u5269\u4e0b\u7684\u6761\u4ef6 $xr_i\\ge xl_j$\uff0c\u53d1\u73b0 $xr_i$ \u8d8a\u5927\u8d8a\u597d\uff0c\u4e8e\u662f\u5b58\u50a8\u77e9\u5f62\u5230\u7ebf\u6bb5\u6811\u4e2d\u7684\u64cd\u4f5c\u5c31\u5f88\u660e\u4e86\u4e86\uff0c\u5373 $[yl_i,yr_i]$ \u66f4\u65b0\u6700\u5927\u503c $xr_i$\u3002\n\n\u8bbe $f_j$ \u8868\u793a\u7b2c $j$ \u4e2a\u77e9\u5f62\u662f\u5426\u88ab\u8986\u76d6\uff0c\u7ebf\u6bb5\u6811\u533a\u95f4\u6700\u5927\u503c\u4e3a $g_{[l,r]}$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$f_j=f_j|[g_{[yl_j,yr_j]}\\ge xl_j]$$\n\n\u6240\u4ee5\u6267\u884c\u4e00\u904d $\\text{cdq}$ \u5c31\u5168\u90e8\u641e\u5b9a\u4e86\u3002\n\n**\u5173\u4e8e\u7ebf\u6bb5\u6811\u6e05\u7a7a**\n\n\u5728\u591a\u8bbe\u4e00\u4e2a\u533a\u95f4\u662f\u5426\u6e05\u7a7a\u7684\u61d2\u6807\u8bb0\uff0c\u6bcf\u6b21\u61d2\u6807\u8bb0\u4e0b\u4f20\u7684\u65f6\u5019\uff0c\u5148\u4e0b\u7a7f\u6e05\u7a7a\u7684\u61d2\u6807\u8bb0\uff0c\u518d\u4e0b\u4f20\u6b63\u5e38\u7684\u61d2\u6807\u8bb0\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=200010;\nconst int N=(maxn<<2);\ninline int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\treturn x;\n}\nstruct node{\n\tint id,xl,yl,xr,yr;\n}a[maxn];\nint data[N],lz[N],LZ[N];\n//data\u4e3a\u533a\u95f4\u6700\u503c,lz\u4e3a\u6b63\u5e38\u61d2\u6807\u8bb0,LZ\u4e3a\u6e05\u7a7a\u61d2\u6807\u8bb0\nint X[N],Y[N];\nint n,m;\nbool f[maxn];\nbool cmp1(node a,node b){\n\treturn a.xl<b.xl;\n}\nbool cmp2(node a,node b){\n\treturn a.xr<b.xr;\n}\nbool cmp3(node a,node b){\n\treturn a.id<b.id;\n}\nbool cmp4(node a,node b){\n\treturn a.id>b.id;\n}\nvoid pushdown(int i){\n\tif(~LZ[i]){\n\t//\u5148\u4e0b\u4f20\u6e05\u7a7a\u61d2\u6807\u8bb0(\u53ef\u4ee5\u601d\u8003\u4e0b\u4f20\u9012\u987a\u5e8f\u7684\u95ee\u9898)\n\t\tlz[i<<1]=lz[i<<1|1]=0;\n\t\tdata[i<<1]=data[i<<1|1]=0;\n\t\tLZ[i<<1]=LZ[i<<1|1]=0;\n\t\tLZ[i]=-1;\n\t} \n\tlz[i<<1]=max(lz[i<<1],lz[i]);\n\tlz[i<<1|1]=max(lz[i<<1|1],lz[i]);\n\tdata[i<<1]=max(data[i<<1],lz[i]);\n\tdata[i<<1|1]=max(data[i<<1|1],lz[i]);\n\tlz[i]=0;\n}\nvoid add(int i,int l,int r,int L,int R,int x){\n\tif(l>R||r<L) return ;\n\tif(l>=L&&r<=R){\n\t\tdata[i]=max(data[i],x);\n\t\tlz[i]=max(lz[i],x);\n\t\treturn ;\n\t}\n\tpushdown(i);\n\tint mid=l+r>>1;\n\tadd(i<<1,l,mid,L,R,x);\n\tadd(i<<1|1,mid+1,r,L,R,x);\n\tdata[i]=max(data[i<<1],data[i<<1|1]);\n}\nint Query(int i,int l,int r,int L,int R){\n\tif(l>R||r<L) return 0;\n\tif(l>=L&&r<=R) return data[i];\n\tpushdown(i);\n\tint mid=l+r>>1;\n\treturn max(Query(i<<1,l,mid,L,R),Query(i<<1|1,mid+1,r,L,R));\n}\nvoid cdq(int l,int r){\n\tif(r-l<1) return ;\n\tint mid=l+r>>1,ii=l,x;\n\tcdq(l,mid),cdq(mid+1,r);\n\tsort(a+l,a+1+mid,cmp1);\n\tsort(a+mid+1,a+r+1,cmp2);\n\t//\u6ce8\u610f[l,mid][mid+1,r]\u6392\u5e8f\u65b9\u6cd5\u4e0d\u540c\n\tfor(int j=mid+1;j<=r;j++){//cdq\u5e38\u89c4\u64cd\u4f5c\n\t\twhile(ii<=mid&&a[ii].xl<=a[j].xr) \n\t\t\tadd(1,1,m,a[ii].yl,a[ii].yr,a[ii].xr),ii++;\n\t\tf[a[j].id]|=(Query(1,1,m,a[j].yl,a[j].yr)>=a[j].xl);\n\t\t//\u66f4\u65b0fj\n\t}\n\tdata[1]=lz[1]=LZ[1]=0,pushdown(1);\n\t//\u5c06\u6574\u4e2a\u533a\u95f4\u6253\u4e0a\u6e05\u7a7a\u61d2\u6807\u8bb0\n\t//\u4e0d\u8981\u5fd8\u8bb0\u4e0b\u4f20\u4e00\u5c42 \n}\nmap<int,int>Hx,Hy;\nint main(){\n\tn=read(),memset(LZ,-1,sizeof(LZ));\n\tint x,y,u,v,cntx=0,cnty=0,Cntx=0,Cnty=0;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i].id=i,x=read()+1,y=read()+1,u=read(),v=read();\n\t\ta[i].xl=x,a[i].yl=y,a[i].xr=x+u-1,a[i].yr=y+v-1;\n\t\tX[++cntx]=a[i].xl,X[++cntx]=a[i].xr;\n\t\tY[++cnty]=a[i].yl,Y[++cnty]=a[i].yr;\n\t}\n\tsort(X+1,X+1+cntx),sort(Y+1,Y+1+cnty);\n\tHx[X[1]]=++Cntx,Hy[Y[1]]=++Cnty;\n\tfor(int i=2;i<=cntx;i++){\n\t\tif(X[i]!=X[i-1]) Hx[X[i]]=++Cntx;\n\t\tif(Y[i]!=Y[i-1]) Hy[Y[i]]=++Cnty;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t//\u79bb\u6563\u5316(\u5176\u5b9exl,xr\u662f\u4e0d\u7528\u79bb\u6563\u5316\u7684)\n\t\ta[i].xl=Hx[a[i].xl],a[i].xr=Hx[a[i].xr];\n\t\ta[i].yl=Hy[a[i].yl],a[i].yr=Hy[a[i].yr];\n\t} \n\tsort(a+1,a+1+n,cmp4),m=Cnty,cdq(1,n);\n\tfor(int i=1;i<=n;i++) \n\t\tprintf(\"%s\\n\",f[i]?\"NE\":\"DA\");\n\treturn 0;\n}\n```\n\n\u795d $\\text{AC}$\u3002",
        "postTime": 1640353937,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "[COCI2018-2019#2] Sun\u010danje \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684 $n$ \u4e2a\u77e9\u5f62\uff0c\u8be2\u95ee\u6bcf\u4e2a\u77e9\u5f62\u662f\u5426\u4e0e\u7f16\u53f7\u66f4\u5927\u7684\u77e9\u5f62\u6709\u4ea4\u3002$n\\leq 10^5$\u3002\n\n### \u89e3\u6cd5\n\n\u4e0a\u661f\u671f\u6821\u5185\u6a21\u62df\u8d5b\u9898\u3002\u7528 CDQ \u5206\u6cbb\u6765\u505a\u7684\u8bdd\u4e5f\u4e0d\u96be\uff0c\u4e0d\u8fc7\u6628\u5929\u7a81\u7136\u60f3\u5230\u4e00\u79cd\u66f4\u52a0\u65e0\u8111\u7684\u505a\u6cd5\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u6ca1\u6709 CDQ \u5206\u6cbb\u4f18\u79c0\uff0c\u4f46\u662f\u2026\u2026\u4ed6\u6bd4 CDQ \u5206\u6cbb\u8981\u65e0\u8111\u5440\u2026\u2026\n\n\u4e00\u4e2a\u6700\u65e0\u8111\u7684\u505a\u6cd5\uff1a\u4ece\u5927\u5230\u5c0f\u5904\u7406\u6bcf\u4e2a\u77e9\u5f62\uff0c\u505a\u4e00\u4e2a\u77e9\u5f62\u52a0\u77e9\u5f62\u67e5\u8be2\u72b6\u7269\u3002\n\n\u90a3\u8fd9\u663e\u7136\u4e0d\u5927\u884c\uff0c\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u505a\u77e9\u5f62\u52a0\u662f\u5927\u70ae\u6253\u868a\u5b50\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u67e5\u8be2\u77e9\u5f62\u662f\u5426\u6709\u4ea4\u3002\n\n\u5982\u679c\u5df2\u7ecf\u77e5\u9053\u4e24\u4e2a\u77e9\u5f62\u6a2a\u5750\u6807\u6709\u4ea4\uff0c\u5982\u4f55\u5224\u65ad\u8fd9\u4e24\u4e2a\u77e9\u5f62\u7eb5\u5750\u6807\u662f\u5426\u6709\u4ea4\uff1f\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff08\u5f53\u7136\u4e86\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e5f\u884c\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5904\u7406\u51fa\u6a2a\u5750\u6807\u7684\u76f8\u4ea4\u5173\u7cfb\u3002\u8fd9\u53ef\u4ee5\u7528\u4e00\u79cd\u5f88\u5957\u8def\u7684\u505a\u6cd5\u89e3\u51b3\u3002\n\n\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u4e0a\u5b9a\u4f4d\u4e00\u4e2a\u533a\u95f4\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4f1a\u8bbf\u95ee\u5230\u4e00\u4e9b\u4e0a\u5c42\u7ed3\u70b9\uff08\u4e0b\u79f0 1 \u7c7b\u70b9\uff09\u548c\u4e00\u4e9b\u88ab\u9700\u8981\u5b9a\u4f4d\u7684\u533a\u95f4\u5305\u542b\u7684\u7ed3\u70b9\uff08\u4e0b\u79f0 2 \u7c7b\u70b9\uff09\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u4e00\u4ef6\u4e8b\u60c5\uff1a\u4e24\u4e2a\u533a\u95f4\u6709\u4ea4\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u5b9a\u4f4d\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e2a\u7ed3\u70b9\u540c\u65f6\u88ab\u4f5c\u4e3a 2 \u7c7b\u70b9\u8bbf\u95ee\uff0c\u6216\u67d0\u4e2a\u7ed3\u70b9\u88ab\u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u533a\u95f4\u7684 2 \u7c7b\u70b9\u548c\u53e6\u4e00\u4e2a\u533a\u95f4\u7684 1 \u7c7b\u70b9\u8bbf\u95ee\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u95ee\u9898\u5c31\u7b80\u5355\u4e86\u8bb8\u591a\u3002\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5f62\u5982\u7ebf\u6bb5\u6811\u7684\u5206\u6cbb\u7ed3\u6784\uff0c\u6309\u7167\u7f16\u53f7\u4ece\u5927\u5230\u5c0f\u5728\u8fd9\u4e2a\u7ed3\u6784\u4e0a\u505a\u5b9a\u4f4d\u6a2a\u5750\u6807\u533a\u95f4\u7684\u8fc7\u7a0b\uff0c\u5e76\u5728\u8bbf\u95ee\u8fc7\u7684 1 \u7c7b\u30012 \u7c7b\u70b9\u4e0a\u6253\u6807\u8bb0\uff08\u4e0b\u79f0\u201c\u8986\u76d6\u4fe1\u606f\u201d\uff09\u3002\n\n\u6240\u6709\u77e9\u5f62\u90fd\u5b9a\u4f4d\u5b8c\u6210\u540e\uff0c\u6211\u4eec DFS \u8fd9\u4e2a\u7ed3\u6784\u3002\u6b64\u65f6\u6bcf\u4e2a\u7ed3\u70b9\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u5355\u72ec\u8003\u8651\u5176\u4e2d\u67d0\u4e2a\u7ed3\u70b9\u3002\n\n\u5f00\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u5206\u522b\u7ef4\u62a4\u5f53\u524d\u7ed3\u70b9\u8bb0\u5f55\u7684 1 \u7c7b\u8bbf\u95ee\u30012 \u7c7b\u8bbf\u95ee\u8986\u76d6\u7684\u7eb5\u5750\u6807\u533a\u95f4\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8986\u76d6\u4fe1\u606f\uff0c\u6211\u4eec\u67e5\u8be2\u8be5\u4fe1\u606f\u4e0e\u5148\u524d\u5904\u7406\u8fc7\u7684 2 \u7c7b\u8bbf\u95ee\u662f\u5426\u6709\u4ea4\u3002\u5982\u679c\u5f53\u524d\u8986\u76d6\u4fe1\u606f\u5c5e\u4e8e 2 \u7c7b\u8bbf\u95ee\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u8981\u67e5\u8be2\u4e00\u4e0b\u5176\u4e0e\u5148\u524d\u5904\u7406\u8fc7\u7684 1 \u7c7b\u8bbf\u95ee\u662f\u5426\u6709\u4ea4\u3002\u67e5\u8be2\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u5728\u5f53\u524d\u4fe1\u606f\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u4e0a\u505a\u4fee\u6539\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e24\u679a $\\log$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e00\u679a $\\log$\u3002\u611f\u89c9 CDQ \u5206\u6cbb\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u7ebf\u6027\u7684\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7684\u7a7a\u95f4\u74f6\u9888\u5728\u4e8e\u8986\u76d6\u4fe1\u606f\u7684\u63d2\u5165\u3002\u5361\u4e00\u5361\u7684\u8bdd\u7a7a\u95f4\u8bf4\u4e0d\u5b9a\u8fd8\u80fd\u4f18\u5316\uff0c\u4e0d\u8fc7\u610f\u4e49\u4e0d\u5927\u6240\u4ee5\u6211\u6ca1\u60f3\u3002\u65f6\u95f4\u4e0a\u5e38\u6570\u6bd4 CDQ \u5206\u6cbb\u8981\u5927\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5bf9 1 \u7c7b\u7ed3\u70b9\u4e5f\u8981\u8fdb\u884c\u64cd\u4f5c\u3002\n\n### \u4ee3\u7801\n\n\u6ce8\u610f\u4e0a\u6587\u4e2d\u7684\u201c2 \u7c7b\u70b9\u201d\u5728\u4ee3\u7801\u4e2d\u662f\u7b2c 0 \u5c42\u3002\u8682\u8702\u7565\u4e11\uff0c\u545c\u545c\n\n```c++\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N=200086;\nint n,xval,yval,tme,xl[N],xr[N],yl[N],yr[N],lt[N<<2];\nbool gg[N],tag[N<<2][2],sum[N<<2][2];\nstruct asdf{int v,p,k;asdf(){}asdf(int vv,int pp,int kk){v=vv;p=pp;k=kk;}};\nstruct infor{\n\tint f,l,r,id;infor(){}\n\tinfor(int fl,int a,int b,int no){f=fl;l=a;r=b;id=no;}\n};\nasdf tmpx[N],tmpy[N];\nvector<infor>t[N<<2];\nint read(){\n\tchar ch=getchar();int nn=0,ssss=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')ssss*=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){nn=nn*10+(ch-'0');ch=getchar();}\n\treturn nn*ssss;\n}\nbool upd(int k){if(lt[k]!=tme){lt[k]=tme;tag[k][0]=tag[k][1]=sum[k][0]=sum[k][1]=0;}return true;}\nbool pushdown(int k,int l,int r,int mid){\n\tupd(k<<1);upd(k<<1|1);\n\tif(tag[k][0]){\n\t\ttag[k<<1][0]|=tag[k][0];tag[k<<1|1][0]|=tag[k][0];\n\t\tsum[k<<1][0]|=tag[k][0];sum[k<<1|1][0]|=tag[k][0];\n\t}\n\tif(tag[k][1]){\n\t\ttag[k<<1][1]|=tag[k][1];tag[k<<1|1][1]|=tag[k][1];\n\t\tsum[k<<1][1]|=tag[k][1];sum[k<<1|1][1]|=tag[k][1];\n\t}\n\ttag[k][0]=tag[k][1]=false;return true;\n}\nbool change(int k,int l,int r,int x,int y,int flr){\n\tupd(k);if(l>=x&&r<=y)return tag[k][flr]=sum[k][flr]=true;\n\tint mid=(l+r)>>1;pushdown(k,l,r,mid);\n\tif(x<=mid)change(k<<1,l,mid,x,y,flr);\n\tif(mid<y)change(k<<1|1,mid+1,r,x,y,flr);\n\tsum[k][0]=sum[k<<1][0]|sum[k<<1|1][0];\n\tsum[k][1]=sum[k<<1][1]|sum[k<<1|1][1];\n\treturn true;\n}\nbool ask(int k,int l,int r,int x,int y,int flr){\n\tupd(k);if(!sum[k][flr])return false;\n\tif(l>=x&&r<=y)return sum[k][flr]>0;\n\tint mid=(l+r)>>1;bool ret=false;pushdown(k,l,r,mid);\n\tif(x<=mid)ret|=ask(k<<1,l,mid,x,y,flr);\n\tif(mid<y&&ret==false)ret|=ask(k<<1|1,mid+1,r,x,y,flr);\n\treturn ret;\n}\nbool push(int k,int l,int r,int x,int y,int L,int R,int z){\n\tif(l>=x&&r<=y){t[k].push_back(infor(0,L,R,z));return true;}\n\telse t[k].push_back(infor(1,L,R,z));\n\tint mid=(l+r)>>1;\n\tif(x<=mid)push(k<<1,l,mid,x,y,L,R,z);\n\tif(mid<y)push(k<<1|1,mid+1,r,x,y,L,R,z);\n\treturn true;\n}\nbool dfs(int k,int l,int r){\n\ttme++;\n\tfor(vector<infor>::iterator it=t[k].begin();it!=t[k].end();it++){\n\t\tgg[it->id]|=ask(1,1,yval,it->l,it->r,0);\n\t\tif(!it->f)gg[it->id]|=ask(1,1,yval,it->l,it->r,1);\n\t\tchange(1,1,yval,it->l,it->r,it->f);\n\t}\n\tif(l==r)return true;int mid=(l+r)>>1;\n\treturn dfs(k<<1,l,mid)&&dfs(k<<1|1,mid+1,r);\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tint xa=read();int ya=read();\n\t\tint xb=xa+read();int yb=ya+read();\n\t\ttmpx[i*2-1]=asdf(xa,i,1);tmpx[i*2]=asdf(xb,i,-1);\n\t\ttmpy[i*2-1]=asdf(ya,i,1);tmpy[i*2]=asdf(yb,i,-1);\n\t}\n\tsort(tmpx+1,tmpx+2*n+1,[&](asdf a,asdf b){return a.v==b.v?a.k<b.k:a.v<b.v;});\n\tsort(tmpy+1,tmpy+2*n+1,[&](asdf a,asdf b){return a.v==b.v?a.k<b.k:a.v<b.v;});\n\tfor(int i=1;i<=2*n;i++){\n\t\txval+=(tmpx[i].v!=tmpx[i-1].v||tmpx[i].k!=tmpx[i-1].k||i==1);\n\t\tif(tmpx[i].k==1)xl[tmpx[i].p]=xval;else xr[tmpx[i].p]=xval;\n\t\tyval+=(tmpy[i].v!=tmpy[i-1].v||tmpy[i].k!=tmpy[i-1].k||i==1);\n\t\tif(tmpy[i].k==1)yl[tmpy[i].p]=yval;else yr[tmpy[i].p]=yval;\n\t}\n\tfor(int i=n;i;i--)push(1,1,xval,xl[i],xr[i],yl[i],yr[i],i);\n\tdfs(1,1,xval);for(int i=1;i<=n;i++)puts(gg[i]?\"NE\":\"DA\");\n}\n```",
        "postTime": 1647215841,
        "uid": 26551,
        "name": "LFCode",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7312 Sun\u010danje\uff1a\u6bd4 CDQ \u5206\u6cbb\u66f4\u65e0\u8111\u7684\u505a\u6cd5"
    },
    {
        "content": "# \u524d\u8a00\n\n\u597d\u4e45\u6ca1\u5199\u5f97\u8fd9\u4e48\u723d\u4e86~\n\n\n\n# \u9898\u76ee\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/P7312)\n\n[LOJ](https://loj.ac/p/3128)\n\n# \u8bb2\u89e3\n\n\u5728\u6211\u770b\u6765\uff0c\u8fd9\u662f\u4e00\u9053\u7801\u519c\u9898\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u51fa**\u987a\u5e8f\u5728\u5b83\u4e4b\u540e(\u5373\u53ef\u80fd\u5c06\u5176\u8986\u76d6)**\u4e14**\u6ca1\u6709\u4e0e\u5b83\u76f8\u4ea4**\u7684\u77e9\u5f62\u4e2a\u6570\uff0c\u6211\u4eec\u5c06\u5176\u53d6\u540d\u4e3a**\u5408\u6cd5\u77e9\u5f62**\uff0c\u7136\u540e\u4e0e\u987a\u5e8f\u5728\u5b83\u4e4b\u540e\u7684\u77e9\u5f62\u4e2a\u6570\u6bd4\u8f83\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002\n\n\u8003\u8651\u5bb9\u65a5\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u77e9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u56db\u6761\u8fb9\u65e0\u9650\u5ef6\u957f\uff0c\u7136\u540e\u6574\u4e2a\u5e73\u9762\u5c31\u88ab\u5206\u4e3a\u4e86 $9$ \u4e2a\u683c\u5b50\u3002\u5bf9\u4e8e\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411**\u5404\u4e09\u4e2a\u683c\u5b50**\u7edf\u8ba1\u51fa\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u77e9\u5f62\uff0c\u8bb0\u5f55\u4e0b\u6765\u3002\n\n\u663e\u7136\u56db\u4e2a\u89d2\u7684\u5408\u6cd5\u77e9\u5f62\u88ab\u8ba1\u7b97\u4e86\u4e24\u6b21\uff0c\u51cf\u6389\u5373\u53ef\u3002\u8fd9\u5c31\u662f\u4e2a\u7b80\u5355\u7684\u504f\u5e8f\u95ee\u9898\u4e86\uff0c\u4f7f\u7528 $\\tt cdq$ \u5373\u53ef\u6c42\u89e3\u3002\n\n\u5c0f\u4f18\u5316\uff1a\u5728 $\\tt cdq$ \u8fc7\u7a0b\u4e2d\uff0c\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u4f18\u5316\u65f6\u95f4\uff0c\u5f53\u7136\u4e0d\u4f18\u5316\u4e5f\u884c\uff0c\u8fd9\u9053\u9898\u65f6\u9650\u5f88\u5bbd\u3002\n\n\u6ce8\u610f $\\tt cdq$ \u6392\u5e8f\u65f6\u7684\u987a\u5e8f\uff0c\u6c42\u89e3\u65f6\u7684\u8fb9\u754c\u95ee\u9898\u4ee5\u53ca\u6811\u72b6\u6570\u7ec4\u7684\u6e05\u7a7a(\u56e0\u4e3a\u6211\u90fd\u6302\u8fc7qwq)\u3002\n\n$\\tt cdq$ \u5957\u6811\u72b6\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$\u3002\n\n# \u4ee3\u7801\n\n\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u8fc7\u4e8e\u5197\u957f\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u56db\u4e2a\u89d2\u6253\u4e86\u56db\u4e2a $\\tt cdq$\u3002 /jk\n\n\u800c\u4e14\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5c06\u6574\u4e2a\u6570\u7ec4\u7ffb\u8f6c\u4e86\uff0c\u770b\u4ee3\u7801\u65f6\u4e0d\u8981\u8bef\u89e3\u4e86\u3002\n\n```cpp\n//12252024832524\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define TT template<typename T>\nusing namespace std; \n\ntypedef long long LL;\nconst int MAXN = 200005;\nint n,lenx,leny;\nint lshx[MAXN],lshy[MAXN];\n\nLL Read()\n{\n\tLL x = 0,f = 1;char c = getchar();\n\twhile(c > '9' || c < '0'){if(c == '-')f = -1;c = getchar();}\n\twhile(c >= '0' && c <= '9'){x = (x*10) + (c^48);c = getchar();}\n\treturn x * f;\n}\nTT void Put1(T x)\n{\n\tif(x > 9) Put1(x/10);\n\tputchar(x%10^48);\n}\nTT void Put(T x,char c = -1)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tPut1(x); if(c >= 0) putchar(c);\n}\nTT T Max(T x,T y){return x > y ? x : y;}\nTT T Min(T x,T y){return x < y ? x : y;}\nTT T Abs(T x){return x < 0 ? -x : x;}\n\nint b[MAXN];\nint lowbit(int x){return (x & -x);}\nvoid Add(int x,int M,int val){for(int i = x;i <= M;i += lowbit(i)) b[i] += val;}\nint Sum(int x){int ret = 0;for(int i = x;i >= 1;i -= lowbit(i)) ret += b[i]; return ret;}\nvoid clr(int x){for(int i = 1;i <= x;++ i) b[i] = 0;}\nint cnt[MAXN];\nstruct Rectangle \n{\n\tint x,y,x2,y2;//lower left,upper right,ID\n}c[MAXN];\nstruct node\n{\n\tint x,y,f,ID,ori;//f=1:calculate,f=0:update\n\tnode(){}\n\tnode(int x1,int y1,int f1,int ID1,int ori1){\n\t\tx = x1;\n\t\ty = y1;\n\t\tf = f1;\n\t\tID = ID1;\n\t\tori = ori1;\n\t}\n}p[MAXN],q[MAXN];\nbool cmpID(node A,node B){return A.ID < B.ID;}\nbool cmpx(node A,node B){return A.x < B.x;}\nbool cmpy(node A,node B){return A.y < B.y;}\n\nvoid cdq1(int l,int r)//upper left\n{\n\tif(l == r) return;\n\tint mid = (l+r) >> 1;\n\tcdq1(l,mid); cdq1(mid+1,r);\n\tint I = l,J = mid+1,K = l;\n\twhile(I <= mid && J <= r)\n\t\tif(p[I].x < p[J].x || (p[I].x == p[J].x && p[I].ori < p[J].ori)) q[K++] = p[I++];//Pay attention to the order when x is equal to another. \n\t\telse q[K++] = p[J++];\n\twhile(I <= mid) q[K++] = p[I++];\n\twhile(J <= r) q[K++] = p[J++];\n\tfor(int i = l;i <= r;++ i) \n\t{\n\t\tp[i] = q[i];\n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(leny-p[i].y+1,leny,1);\n\t\telse if(p[i].f && p[i].ori > mid)\n\t\t\tcnt[p[i].ID] -= Sum(leny-p[i].y+1);\n\t}\n\tfor(int i = l;i <= r;++ i) \n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(leny-p[i].y+1,leny,-1);\n}\nvoid cdq2(int l,int r)//lower left\n{\n\tif(l == r) return;\n\tint mid = (l+r) >> 1;\n\tcdq2(l,mid); cdq2(mid+1,r);\n\tint I = l,J = mid+1,K = l;\n\twhile(I <= mid && J <= r)\n\t\tif(p[I].x < p[J].x || (p[I].x == p[J].x && p[I].ori < p[J].ori)) q[K++] = p[I++];\n\t\telse q[K++] = p[J++];\n\twhile(I <= mid) q[K++] = p[I++];\n\twhile(J <= r) q[K++] = p[J++];\n\tfor(int i = l;i <= r;++ i) \n\t{\n\t\tp[i] = q[i];\n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(p[i].y,leny,1);\n\t\telse if(p[i].f && p[i].ori > mid)\n\t\t\tcnt[p[i].ID] -= Sum(p[i].y);\n\t}\n\tfor(int i = l;i <= r;++ i) \n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(p[i].y,leny,-1);\n}\nvoid cdq3(int l,int r)//upper right\n{\n\tif(l == r) return;\n\tint mid = (l+r) >> 1;\n\tcdq3(l,mid); cdq3(mid+1,r);\n\tint I = l,J = mid+1,K = l;\n\twhile(I <= mid && J <= r)\n\t\tif(p[I].x < p[J].x || (p[I].x == p[J].x && p[I].ori > p[J].ori)) q[K++] = p[I++];\n\t\telse q[K++] = p[J++];\n\twhile(I <= mid) q[K++] = p[I++];\n\twhile(J <= r) q[K++] = p[J++];\n\tfor(int i = r;i >= l;-- i) \n\t{\n\t\tp[i] = q[i];\n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(leny-p[i].y+1,leny,1);\n\t\telse if(p[i].f && p[i].ori > mid)\n\t\t\tcnt[p[i].ID] -= Sum(leny-p[i].y+1);\n\t}\n\tfor(int i = r;i >= l;-- i) \n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(leny-p[i].y+1,leny,-1);\n}\nvoid cdq4(int l,int r)//lower right\n{\n\tif(l == r) return;\n\tint mid = (l+r) >> 1;\n\tcdq4(l,mid); cdq4(mid+1,r);\n\tint I = l,J = mid+1,K = l;\n\twhile(I <= mid && J <= r)\n\t\tif(p[I].x < p[J].x || (p[I].x == p[J].x && p[I].ori > p[J].ori)) q[K++] = p[I++];\n\t\telse q[K++] = p[J++];\n\twhile(I <= mid) q[K++] = p[I++];\n\twhile(J <= r) q[K++] = p[J++];\n\tfor(int i = r;i >= l;-- i) \n\t{\n\t\tp[i] = q[i];\n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(p[i].y,leny,1);\n\t\telse if(p[i].f && p[i].ori > mid)\n\t\t\tcnt[p[i].ID] -= Sum(p[i].y);\n\t}\n\tfor(int i = r;i >= l;-- i) \n\t\tif(!p[i].f && p[i].ori <= mid)\n\t\t\tAdd(p[i].y,leny,-1);\n}\n\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn = Read();\n\tfor(int i = n;i >= 1;-- i) \n\t{\n\t\tc[i].x = Read(),c[i].y = Read(),c[i].x2 = Read(),c[i].y2 = Read();//reverse order\n\t\tc[i].x2 += c[i].x-1;\n\t\tc[i].y2 += c[i].y-1;\n\t\tlshx[i<<1] = c[i].x; lshx[(i<<1)-1] = c[i].x2;\n\t\tlshy[i<<1] = c[i].y; lshy[(i<<1)-1] = c[i].y2;\n\t}\n\t//Discretization \n\tsort(lshx+1,lshx+(n<<1)+1); sort(lshy+1,lshy+(n<<1)+1);\n\tlenx = unique(lshx+1,lshx+(n<<1)+1) - lshx - 1; leny = unique(lshy+1,lshy+(n<<1)+1) - lshy - 1;\n\tfor(int i = 1;i <= n;++ i) c[i].x = lower_bound(lshx+1,lshx+lenx+1,c[i].x) - lshx,c[i].x2 = lower_bound(lshx+1,lshx+lenx+1,c[i].x2) - lshx;\n\tfor(int i = 1;i <= n;++ i) c[i].y = lower_bound(lshy+1,lshy+leny+1,c[i].y) - lshy,c[i].y2 = lower_bound(lshy+1,lshy+leny+1,c[i].y2) - lshy;\n\t//4 directions\n\tfor(int i = 1;i <= n;++ i) cnt[i] += Sum(c[i].x-1),Add(c[i].x2,lenx,1); clr(lenx); //left\n\tfor(int i = 1;i <= n;++ i) cnt[i] += Sum(lenx-c[i].x2),Add(lenx-c[i].x+1,lenx,1); clr(leny); //right\n\tfor(int i = 1;i <= n;++ i) cnt[i] += Sum(c[i].y-1),Add(c[i].y2,leny,1); clr(leny); //down\n\tfor(int i = 1;i <= n;++ i) cnt[i] += Sum(leny-c[i].y2),Add(leny-c[i].y+1,leny,1); clr(leny); //up\n\t//4 corners \n\tfor(int i = 1;i <= n;++ i) p[i<<1] = node(c[i].x-1,c[i].y2+1,1,i,i<<1),p[(i<<1)-1] = node(c[i].x2,c[i].y,0,i,(i<<1)-1); cdq1(1,n<<1);\n\tfor(int i = 1;i <= n;++ i) p[i<<1] = node(c[i].x-1,c[i].y-1,1,i,i<<1),p[(i<<1)-1] = node(c[i].x2,c[i].y2,0,i,(i<<1)-1); cdq2(1,n<<1);\n\tfor(int i = 1;i <= n;++ i) p[i<<1] = node(c[i].x2+1,c[i].y2+1,1,i,i<<1),p[(i<<1)-1] = node(c[i].x,c[i].y,0,i,(i<<1)-1); cdq3(1,n<<1);\n\tfor(int i = 1;i <= n;++ i) p[i<<1] = node(c[i].x2+1,c[i].y-1,1,i,i<<1),p[(i<<1)-1] = node(c[i].x,c[i].y2,0,i,(i<<1)-1); cdq4(1,n<<1);\n\t//There are so many \"+1\" and \"-1\". Pay attention to the boundary.\n\t//print\n\tfor(int i = n;i >= 1;-- i)\n\t{\n\t\tif(cnt[i] != i-1) printf(\"NE\\n\");\n\t\telse printf(\"DA\\n\");\n\t}\n\treturn 0;\n}\n//sorry for my poor English\n```",
        "postTime": 1614591621,
        "uid": 137437,
        "name": "PPL_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7312 [COCI2018-2019#2] Sun\u010danje"
    },
    {
        "content": "\u6211\u4eec\u8bb0\u77e9\u9635\u5e8f\u5217\u4e3a $A$ ,\u5176\u4e2d $A[i]=(x_1,y_1,x_2,y_2)(x_1\\le x_2,y1\\le y_2)$ \uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06 $A[i]$ \u7684 $x_1$ \u5199\u4f5c $A[i,x_1]$ \uff0c\u5176\u4f59\u7c7b\u4f3c\n\n\u90a3\u4e48\u77e9\u9635 $i$ \u88ab\u77e9\u9635 $j$ \u8986\u76d6\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\n\n$$\n\\left\\{\n\\begin{aligned}\ni<j\\\\\n\\left\\{\n\\begin{aligned}\nA[i,x_1]&\\le A[j,x_2] \\\\\nA[j,x_1]&\\le A[i,x_2] \\\\\n\\end{aligned}\n\\right.\\\\\n\\left\\{\n\\begin{aligned}\nA[i,y_1]&\\le A[j,y_2] \\\\\nA[j,y_1]&\\le A[i,y_2] \\\\\n\\end{aligned}\n\\right.\n\\end{aligned}\n\\right.\n$$\n\n(\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u6709\u53ef\u80fd\u4e00\u4e2a\u77e9\u5f62\u7684\u53f3\u8fb9\u548c\u4e00\u4e2a\u77e9\u5f62\u7684\u5de6\u8fb9\u5728\u540c\u4e00\u76f4\u7ebf\u4e0a(\u4ea6\u6216\u8005\u4e00\u4e2a\u77e9\u5f62\u7684\u4e0a\u8fb9\u548c\u4e00\u4e2a\u77e9\u5f62\u7684\u4e0b\u8fb9\u5728\u540c\u4e00\u76f4\u7ebf\u4e0a)\uff0c\u4f46\u6b64\u65f6\u6ca1\u6709\u4ea4\u70b9\u5374\u4ecd\u7136\u4f1a\u88ab\u7d2f\u52a0\u8fdb\u5165\u7b54\u6848\uff0c\u6545\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u628a\u53f3\u4e0a\u89d2\u6574\u4f53\u7f29\u4e00\u683c\uff0c\u4e5f\u5373\u53f3\u4e0a\u89d2\u7684\u6a2a\u7eb5\u5750\u6807\u5168\u90e8-1(\u8fd9\u5c31\u662f\u90e8\u5206\u540c\u5fd7\u6700\u540e\u51e0\u4e2a\u70b9\u8fc7\u4e0d\u4e86\u7684\u539f\u56e0))\uff1b\n\n\u8003\u8651\u5982\u4f55\u6c42\u89e3\n\u8fd9\u4e2a\u73a9\u610f\u7c7b\u4f3c\u4e8e\u504f\u5e8f\u95ee\u9898\uff0c\u8003\u8651\u4f7f\u7528 CDQ \u5206\u6cbb\n\n\u82e5\u6309\u7167\u65f6\u95f4\u8f74\u5206\u6cbb\uff0c\u5219\u8bbe\u5206\u6cbb\u4e24\u533a\u95f4\u4e3a $[l,mid],[mid+1,r]$\n\n\u6b64\u65f6 $[l,mid]$ \u7684\u65f6\u95f4\u90fd\u65e9\u4e8e $[mid+1,r]$ \n\n\u6b64\u65f6\u6211\u4eec\u9700\u8981\u8003\u8651\u540e\u534a\u533a\u95f4\u5bf9\u524d\u534a\u533a\u95f4\u7684\u5f71\u54cd\uff0c\u5148\u7528\u5e38\u89c4\u53cc\u6307\u9488\u5957\u8def\u7ef4\u62a4\u9650\u5236\u6761\u4ef6 $A[j,x_1]\\le A[i,x_2]$\n\n\u5c06\u533a\u95f4 $[l,mid]$ \u6309\u7167 $x_2$ \u9012\u589e\u6392\u5e8f\uff0c\u533a\u95f4 $[mid+1,r]$ \u6309\u7167 $x_1$ \u9012\u589e\u6392\u5e8f\uff0c\u8bbe\u4e24\u4e2a\u6307\u9488\u5206\u522b\u4e3a $L,R$\n\n\u91c7\u7528\u53cc\u6307\u9488\u626b\u63cf\uff0c\u5219 $[mid+1,R]$ \u7684\u77e9\u5f62\u90fd\u6ee1\u8db3\u5bf9\u4e8e $L$ \u6765\u8bf4 $A[L,x_2]\\ge A[k,x_1]$ ,\u8003\u8651\u5224\u5b9a\u5728 $[mid+1,R]$ \u4e2d\u6709\u65e0\u77e9\u5f62\u53ef\u4ee5\u8986\u76d6 $L$ \n\n\u6309\u7167 $CDQ$ \u5206\u6cbb\u7684\u5957\u8def\u6211\u4eec\u9700\u8981\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5269\u4f59\u7684\u51e0\u4e2a\u6761\u4ef6\n\n$$\n\\left\\{\n\\begin{aligned}\nA[i,x_1]&\\le A[j,x_2] \\\\\nA[i,y_1]&\\le A[j,y_2] \\\\\nA[j,y_1]&\\le A[i,y_2] \\\\\n\\end{aligned}\n\\right.\n$$\n\n\u8fd9\u91cc\u7531\u4e8e\u9650\u5236\u6761\u4ef6\u5c31\u662f\u8981\u6c42\u77e9\u5f62\u6a2a\u5411\u6709\u4ea4\u70b9\uff0c\u7ad6\u5411\u6709\u4ea4\u70b9\uff0c\u800c\u5bf9\u4e8e\u7ad6\u5411\u6709\u4ea4\u70b9\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6709\u4ea4\u95ee\u9898\uff0c\u8003\u8651\u4f7f\u7528\u7ef4\u62a4\u7ebf\u6bb5\u7684\u6570\u636e\u7ed3\u6784\u2014\u2014\u7ebf\u6bb5\u6811\n\n\u90a3\uff0c\u6211\u4eec\u5bf9\u533a\u95f4 $[A[i,y_1],A[i,y_2]]$ \u8fdb\u884c\u4fee\u6539\uff0c\u53ea\u9700\u8981\u6211\u4eec\u80fd\u591f\u5224\u5b9a\u5728\u533a\u95f4 $[A[L,y_1],A[L,y_2]]$ \u4e2d\u6709\u65e0\u5927\u4e8e\u7b49\u4e8e $A[L,x_1]$ \u7684\u5143\u7d20\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u5047\u8bbe\u6211\u4eec\u5c06\u533a\u95f4 $[l',r']$ \u7684\u6700\u5927\u503c\u8bb0\u4e3a $g[l',r']$ \uff0c\u8bb0 $f[i]$ \u8868\u793a\u7b2c$i$\u4e2a\u77e9\u5f62\u662f\u5426\u88ab\u8986\u76d6\n\n\u90a3\u4e48\u5c31\u6709 $f[A[L,id]]|=A[L,x_1]\\le g[A[L,y_1],A[L,y_2]]$\n\n\u7edf\u8ba1\u5b8c\u4e86\u4e4b\u540e\u5c06\u7ebf\u6bb5\u6811\u5168\u90e8\u6e05\u7a7a\u4e3a-1\u5373\u53ef\n\n\n\u6700\u540e\uff0c\u6211\u4eec\u518d\u6765\u68b3\u7406\u4e00\u904d\u8fd9\u4e2a\u8fc7\u7a0b\n\n1. \u79bb\u6563\u5316\u5750\u6807\n2. \u5728CDQ\u5206\u6cbb\u4e2d\n3. \u5de6\u534a\u533a\u95f4\u6309\u7167$x_2$\u6392\uff0c\u53f3\u534a\u533a\u95f4\u6309$x_1$\u6392\n4. \u53cc\u6307\u9488\u626b\u63cf\uff0c\u4f7f\u5f97$A[L,x_2]\\ge A[R,x_1]$\n5. \u5728\u626b\u63cf\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5728\u7ebf\u6bb5\u6811\u7684\u533a\u95f4$[A[R,y_1],A[R,y_2]]$\u4e0a\u66f4\u65b0\u533a\u95f4\u6700\u5927\u503c\n6. \u5bf9\u4e8e$L$\u67e5\u8be2\u533a\u95f4$[A[L,x_1,x_2]]$\u662f\u5426\u5b58\u5728\u5927\u4e8e$A[L,x_1]$\u7684\u503c\uff0c\u5b58\u5728\u4e5f\u5c31\u8868\u793a$L$\u88ab\u8986\u76d6\n7. \u6e05\u7a7a\u7ebf\u6bb5\u6811\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n\\log^2n)$,~~\u7ebf\u6bb5\u6811\u5e38\u6570\u5927\u5f97\u4e00\u6279\uff0c\u602a\u4e0d\u5f97\u65f6\u95f4\u8981\u6c424s~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define scanf scanf_s\nusing namespace std;\n#define N 1000050\nstruct node {\n\tint id, x1, x2, y1, y2;\n}a[N];//\u77e9\u9635\nint b[N], c[N], cnt;//\u79bb\u6563\u5316\nint f[N], n, m;\nstruct seg_tree {\n\tint mx, tag, lazy, l, r;\n}t[N << 2];//\u7ebf\u6bb5\u6811\n#define lc x<<1\n#define rc x<<1|1\nvoid build(int l, int r, int x) {\n\tt[x] = { 0,0,-1,l,r };\n\tif (l == r)return;\n\tint mid = l + r >> 1;\n\tbuild(l, mid, lc);\n\tbuild(mid + 1, r, rc);\n}\ninline void pushup(int x) {\n\tt[x].mx = max(t[lc].mx, t[rc].mx);\n}\ninline void pushdown(seg_tree& a, seg_tree& b, seg_tree& c) {\n\tif (a.lazy != -1) {\n\t\tb.tag = c.tag = 0;\n\t\tb.mx = c.mx = 0;\n\t\tb.lazy = c.lazy = 0;\n\t\ta.lazy = -1;\n\t}\n\tb.tag = max(b.tag, a.tag);\n\tc.tag = max(c.tag, a.tag);\n\tb.mx = max(b.mx, a.tag);\n\tc.mx = max(c.mx, a.tag);\n\ta.tag = 0;\n\treturn;\n}\ninline void pushdown(int x) {\n\tpushdown(t[x], t[lc], t[rc]);\n}\nvoid update(int x, int l, int r, int k) {\n\tif (l <= t[x].l && t[x].r <= r) {\n\t\tt[x].mx = max(t[x].mx, k);\n\t\tt[x].tag = max(t[x].tag, k);\n\t\treturn;\n\t}\n\tpushdown(x);\n\tint mid = t[x].l + t[x].r >> 1;\n\tif (l <= mid)update(lc, l, r, k);\n\tif (mid < r)update(rc, l, r, k);\n\tpushup(x);\n}\nint find(int x, int l, int r) {\n\tif (l <= t[x].l && t[x].r <= r) {\n\t\t//\t\tprintf(\"%d %d %d %d %d\\n\", t[x].lazy, t[x].tag, t[x].l, t[x].r, t[x].mx);\n\t\treturn t[x].mx;\n\t}\n\tint ans = -1, mid = t[x].l + t[x].r >> 1;\n\tpushdown(x);\n\tif (l <= mid)ans = max(ans, find(lc, l, r));\n\tif (mid < r)ans = max(ans, find(rc, l, r));\n\tpushup(x);\n\treturn ans;\n}\n#undef lc\n#undef rc\nvoid init() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tint A, B, c, d;\n\t\tscanf(\"%d%d%d%d\", &A, &B, &c, &d);\n\t\tc += A - 1, d += B - 1;\n\t\ta[i] = { i,A,c,B,d };\n\t\tb[++cnt] = A, b[++cnt] = B, b[++cnt] = c, b[++cnt] = d;\n\t}\n\tsort(b + 1, b + cnt + 1);\n\tcnt = unique(b + 1, b + cnt + 1) - b - 1;\n\t//\tprintf(\"%d\\n\", cnt);\n\tfor (int i = 1; i <= n; i++) {\n\t\ta[i].x1 = lower_bound(b + 1, b + cnt + 1, a[i].x1) - b;\n\t\ta[i].y1 = lower_bound(b + 1, b + cnt + 1, a[i].y1) - b;\n\t\ta[i].x2 = lower_bound(b + 1, b + cnt + 1, a[i].x2) - b;\n\t\ta[i].y2 = lower_bound(b + 1, b + cnt + 1, a[i].y2) - b;\n\t\t//\t\tprintf(\"%d %d %d %d\\n\", a[i].x1, a[i].y1, a[i].x2, a[i].y2);\n\t}\n}\nbool cmp1(node a, node b) {\n\treturn a.x1 < b.x1;\n}\nbool cmp2(node a, node b) {\n\treturn a.x2 < b.x2;\n}\nvoid cdq(int l, int r) {\n\tif (l == r)return;\n\tint mid = l + r >> 1;\n\tcdq(l, mid);\n\tcdq(mid + 1, r);\n\tint L = l, R = mid + 1;\n\tsort(a + l, a + mid + 1, cmp2);\n\tsort(a + R, a + r + 1, cmp1);\n\t//\tfor (int i = l; i <= r; i++)printf(\"%d \", a[i].id);\n\t//\tputs(\"\");\n\tfor (; L <= mid; L++) {\n\t\twhile (a[R].x1 <= a[L].x2 && R <= r) {\n\t\t\tupdate(1, a[R].y1, a[R].y2, a[R].x2);\n\t\t\tR++;\n\t\t}\n\t\tf[a[L].id] |= find(1, a[L].y1, a[L].y2) >= a[L].x1;\n\t\t//\tif (find(1, a[L].y1, a[L].y2) >= a[L].x1) {\n\t\t//\t\tprintf(\"%d %d %d\\n\", a[L].id, find(1, a[L].y1, a[L].y2), L-l);\n\t\t//\t}\n\t}\n\tt[1].tag = t[1].mx = t[1].lazy = 0;\n\tpushdown(1);\n\t//\tputs(\"Cleaded\");\n}\nint main() {\n\tinit();\n\tbuild(1, cnt << 1, 1);\n\tcdq(1, n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (f[i])puts(\"NE\");\n\t\telse puts(\"DA\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1668327871,
        "uid": 507718,
        "name": "weakpyt",
        "ccfLevel": 5,
        "title": "P7312 \u9898\u89e3"
    }
]