[
    {
        "content": "\u8fd9\u9898\u4e0d\u9700\u8981\u8dd1 LCA \u4e4b\u7c7b\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a Floyd + \u526a\u679d\u5c31\u53ef\u4ee5 AC \u4e86\u3002\n\nFloyd \u7684\u590d\u6742\u5ea6\u5927\u5bb6\u90fd\u77e5\u9053\u662f $O(n^3)$\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u526a\u679d\u3002\u6211\u4eec\u90fd\u77e5\u9053 Floyd \u521d\u59cb\u9700\u8981\u628a $dist$ \u6570\u7ec4\u521d\u59cb\u5316\u4e3a $\\infty$\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u8fdb\u884c\u7b2c\u4e8c\u5c42\u5faa\u73af\u65f6\uff0c\u5982\u679c\u5f53\u524d $dist(i, k) = \\infty$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\n\n\u8fd9\u4e2a\u526a\u679d\u5728\u6b64\u9898\u7684\u4f18\u5316\u5341\u5206\u663e\u8457\uff0c\u53ef\u4ee5\u76f4\u63a5 AC\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff08\u5f88\u4e45\u4ee5\u524d\u6572\u5f97\uff0c\u98ce\u683c\u53ef\u80fd\u6bd4\u8f83\u5d29\u574f\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define min(a, b) ((a) < (b) ? (a) : (b))\nconst int MaxN = 1e3;\nconst int INF = 0x3f3f3f3f;\nint d[MaxN + 1][MaxN + 1];\nint main() {\n\tint N, Q;\n\tmemset(d, 0x3f, sizeof(d));\n\tscanf(\"%d %d\", &N, &Q);\n\tfor (int i = 1, A, B, L; i < N; ++i) {\n\t\tscanf(\"%d %d %d\", &A, &B, &L);\n\t\td[A][B] = d[B][A] = L;\n\t}\n\tfor (int k = 1; k <= N; ++k)\n\t\tfor (int i = 1; i <= N; ++i) {\n\t\t\tif (d[i][k] == INF) continue;\n\t\t\tfor (int j = 1; j <= N; ++j)\n\t\t\t\td[i][j] = min(d[i][j], d[i][k] + d[k][j]);\n\t\t}\n\tfor (int P1, P2; Q--; ) {\n\t\tscanf(\"%d %d\", &P1, &P2);\n\t\tprintf(\"%d\\n\", d[P1][P2]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1520047565,
        "uid": 5491,
        "name": "STLGirlfriend",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "    \u8fd9\u9898\u7adf\u7136\u662f......\u6811\u94fe\u5256\u5206\n    \u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\uff0cdis(u,v)=dis(u)+dis(v)-dis(lca(u,v))*2;(\u4e0d\u77e5\u9053\u7b97\u4e86\u3002\u3002\u3002)\n    \u7136\u540e\uff0c\u6211\u4eec\u77e5\u9053\uff0clca\u53ef\u4ee5\u7528tarjan\u6c42\uff0c\u4e5f\u53ef\u4ee5\u7528\u6811\u5256\u6c42\uff08\u4e0d\u77e5\u9053\u4e5f\u7b97\u4e86\u3002\u3002\u3002\uff09\n    \u90a3\u4e48\u6811\u5256\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u5c31\u662f\u5c06\u6811\u5f62\u7ed3\u6784\u201c\u8f6c\u5316\u201d\u6210\u94fe\u5f0f\u6c42\u89e3\u3002\n    \u5bf9\u4e8e\u70b9u\uff0c\u8bbeu\u7684\u5b50\u6811\u7ed3\u70b9\u4e2a\u4e3as[u],\u82e5\u5b58\u5728\u7ed3\u70b9v,\u4f7f\u5f97s[v]>=s[u]/2,\u90a3\u4e48edge(u,v)\u79f0\u4e3a\u91cd\u8fb9\uff0c\u5176\u4f59\u8fb9\u79f0\u4e3a\u8f7b\u8fb9\uff0cv\u662fu\u7684\u91cd\u5b69\u5b50\u3002\n    \u7531\u4e8es[u]>=s[v]*2+1,\u6240\u4ee5\u8f7b\u8fb9\u7684\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7logN\n    \u5c06\u91cd\u8fb9\u7ec4\u6210\u7684\u94fe\u79f0\u4e3a\u91cd\u94fe\uff0c\u7531\u4e8e\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u91cd\u8fb9\uff0c\u6240\u4ee5\u91cd\u94fe\u548c\u8f7b\u8fb9\u4ea4\u66ff\u51fa\u73b0\u3002\u6545\u91cd\u94fe\u7684\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7logN+1\n    \u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u8981\u6cbf\u7740\u91cd\u94fedfs\uff0c\u5c31\u53ef\u4ee5\u8bb0\u4e0b\u6bcf\u4e2a\u7ed3\u70b9\u6240\u5728\u7684\u91cd\u94fe\u3002\u82e5u,v\u5728\u540c\u4e00\u91cd\u94fe\u4e0a\uff0c\u5219lca(u,v)\u4e3au,v\u4e2d\u6df1\u5ea6\u5c0f\u7684\uff1b\u5426\u5219\uff0c\u8df3\u5230\u91cd\u94fe\u7684\u9876\u7aef\uff0c\u5e76\u4e14\u6cbf\u7740\u7236\u8282\u70b9\u4e00\u8def\u5411\u4e0a\u627e\uff0c\u76f4\u5230u,v\u5728\u540c\u4e00\u91cd\u94fe\u4e0a\uff0c\u6b64\u65f6lca(u,v)\u4e3au,v\u4e2d\u6df1\u5ea6\u5c0f\u7684\u3002\n    \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u50a8\u5907\u77e5\u8bc6\uff1a\u94fe\u5f0f\u524d\u5411\u661f\uff08\u90bb\u63a5\u8868\uff09\n    \u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4e86\u3002\n    \n    void add(int u,int v,int x){//\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u52a0\u8fb9\uff0c\u5728u,v\u4e4b\u95f4\u52a0\u4e0a\u4e00\u6761\u6743\u503c\u4e3ax\u7684\u8fb9\n\t\tnxt[++t]=h[u];\n\t\th[u]=t;\n\t\tadj[t]=v;\n\t\tw[t]=x;\n\t}\n    void DFS(int u){//\u7b2c\u4e00\u904ddfs\uff0c\u6c42\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2\uff0c\u6df1\u5ea6\uff0c\u4ee5\u53ca\u5176\u5b50\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\uff08\u5305\u62ec\u81ea\u8eab\uff09\n\t\tint i,j;\n\t\ts[u]=1;//\u5b50\u6811\u7ed3\u70b9\u6570\u91cf\u76ee\u524d\u53ea\u6709\u4e00\u4e2a\uff0c\u5373u\u672c\u8eab\n        d[u]=d[f[u]]+1;//u\u7684\u6df1\u5ea6\u4e3a\u5176\u7236\u4eb2\u6df1\u5ea6+1\n\t\tfor(i=h[u];i;i=nxt[i]){//\u904d\u5386u\u7684\u5b50\u6811\n\t\t\tj=adj[i];\n\t\t\tif(j!=f[u]){//\u5224\u65ad\u662f\u5426\u662f\u5176\u7236\u4eb2\uff0c\u4ee5\u514d\u51fa\u73b0\u6b7b\u5faa\u73af\n\t\t\t\tf[j]=u;//\u6807\u8bb0\uff0cu\u7684\u5b69\u5b50\u7684\u7236\u4eb2\u662fu\n                ans[j]=w[i]+ans[u];//\u7b97\u51fadis(j)\n\t\t\t\tDFS(j);\n\t\t\t\ts[u]+=s[j];//u\u5b50\u6811\u4e2d\u7ed3\u70b9\u7684\u4e2a\u6570\u52a0\u4e0a\u5176\u5b69\u5b50\u6240\u5728\u5b50\u6811\u7ed3\u70b9\u7684\u4e2a\u6570\n\t\t\t}\n\t    }\n    }\n    \n    void dfs(int u){//\u7b2c\u4e8c\u904ddfs,\u8bb0\u4e0b\u6bcf\u4e2a\u7ed3\u70b9\u6240\u5728\u7684\u91cd\u94fe\u7684\u7f16\u53f7\uff0c\u5373\u91cd\u94fe\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u7ed3\u70b9\u7684\u7f16\u53f7\n\t\tif(!top[u]) top[u]=u;//\u76ee\u524du\u662fu\u6240\u5728\u91cd\u94fe\u7684\u6df1\u5ea6\u6700\u5c0f\u7ed3\u70b9\n\t\tint i,j,k=0;\n\t\tfor(i=h[u];i;i=nxt[i]){\n\t\t\tj=adj[i];\n            if(j!=f[u]&&s[j]>s[k]) k=j;//k\u662fu\u7684\u91cd\u5b69\u5b50\n\t\t}\n\t\tif(k>0){\n\t\t\ttop[k]=top[u];//\u76ee\u524du\u662fk\u6240\u5728\u91cd\u94fe\u7684\u6df1\u5ea6\u6700\u5c0f\u7ed3\u70b9\n\t\t\tdfs(k);//\u6cbf\u7740\u91cd\u94fe\u627e\u4e0b\u53bb\n        }\n       \tfor(i=h[u];i;i=nxt[i]){\n\t\t\tj=adj[i];\n\t\t\tif(j!=f[u]&&j!=k) dfs(j);//\u627e\u8f7b\u8fb9\n\t\t}\n\t}\n    \n    int LCA(int u,int v){//\u6c42u\u548cv\u7684lca\n\t\twhile(top[u]!=top[v]){//\u82e5u,v\u4e0d\u5728\u540c\u4e00\u91cd\u94fe\u4e0a\n\t\t\tif(d[top[u]]<d[top[v]]) u=u+v,v=u-v,u=u-v;//\u82e5u\u6240\u5728\u91cd\u94fe\u7684\u6df1\u5ea6\u5c0f\uff0c\u5219\u4ea4\u6362u,v,\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6700\u540e\u627e\u5230\u7684\u662f\u6df1\u5ea6\u6700\u5c0f\u7684\u7ed3\u70b9\n\t\t\tu=f[top[u]];//u\u8df3\u5230\u5176\u91cd\u94fe\u4e0a\u6700\u5c0f\u6df1\u5ea6\u7ed3\u70b9\u7684\u7236\u4eb2\n        }\n\t\treturn d[u]<d[v]?u:v;//\u8fd4\u56de\u6df1\u5ea6\u6700\u5c0f\u7684\u7ed3\u70b9\uff0c\u5373lca\n\t}\n\n    int main(){\n\t\tint u,v,x,i;\n\t\tcin>>n>>m;//\u672c\u6765\u5199\u4e86\u5feb\u8bfb\uff0c\u61d2\u5f97\u590d\u5236\u4e86\n\t\tfor(i=1;i<n;i++){\n\t\t\tcin>>u>>v>>x;\n\t\t\tadd(u,v,x);add(v,u,x);//\u6811\u4e0a\u7684\u8fb9\u662f\u65e0\u5411\u8fb9\uff0c\u8bb0\u5f97\u52a0\u8fb9\u4e24\u6b21\n\t\t}\n\t\tDFS(1);\n\t\tdfs(1);\n\t\twhile(m--){\n\t\t\tcin>>u;cin>>v;\n\t\t\tprintf(\"%d\\n\",ans[u]+ans[v]-2*ans[LCA(u,v)]);//\u8ba1\u7b97\u8ddd\u79bb\n\t\t}\n\t\treturn 0;\n    }\n",
        "postTime": 1518069322,
        "uid": 31040,
        "name": "\u96ea\u989c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "**\u6700\u8fd1\u521a\u5b66\u4e86\u6811\u5f62\u7ed3\u6784\u548c\u5173\u4e8e\u6811\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u6070\u597d\u770b\u5230\u4e86\u8fd9\u4e2a\u9898\u6765\u7ec3\u7ec3\u624b\u3002**\n\n\u8fd9\u4e2a\u9898\u770b\u5230\u522b\u7684\u5927\u4f6c\u7528tarjan\u6216\u6811\u5256\u5199\u7684\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u8fd8\u6ca1\u5b66\uff08......\uff09\uff0c\u53ea\u597d\u9ed8\u9ed8\u7684\u638f\u51fa\u4e86\u81ea\u5df1\u7684\u500d\u589e\u6c42LCA\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff0c\u840c\u65b0\u53ef\u4ee5\u591a\u770b\u770b\u6ce8\u91ca\u3002\n```\n#include<bits/stdc++.h>\n#define N 1000100//\u6570\u7ec4\u53ef\u4ee5\u5f00\u621010001\uff0c\u6211\u5f00\u8fd9\u4e48\u5927\u662f\u4fdd\u9669\u3002\nusing namespace std;\nint pre[N],now[N],son[N],tot,val[N];\nint n,rt,q,f[N][20],dep[N],a[N],c[N],len[N];\nbool b[N];\ninline void dadson(int x,int y,int z)\n{\n    tot++;\n    pre[tot]=now[x];\n    now[x]=tot;\n    son[tot]=y;\n    len[tot]=z;\n}//\u4e00\u4e2a\u90bb\u63a5\u8868\u50a8\u5b58\u6811\ninline void dfs(int u,int d)\n{\n    dep[u]=d;\n    b[u]=1;\n    for(int i=now[u];i;i=pre[i])\n    {\n        int c=son[i];\n        if(!b[c])\n        {\n            f[c][0]=u;\n            val[c]=val[u]+len[i];\n            dfs(c,d+1);\n        }\n    }\n}//\u6c42\u6bcf\u6761\u8fb9\u7684\u6743\u503c\ninline void dp()\n{\n    for(int i=1;i<=19;i++)\n    for(int j=1;j<=n;j++)\n    f[j][i]=f[f[j][i-1]][i-1];\n}//\u8fd9\u662f\u4e24\u4e2a\u70b9\u5f80\u4e0a\u8df3\u627e\u516c\u5171\u7956\u5148\u7684\u9884\u5904\u7406\u3002\ninline int lca(int x,int y)\n{\n    if(dep[x]<dep[y])swap(x,y);//\u5982\u679cx\u7684\u6df1\u5ea6\u6bd4y\u7684\u6df1\u5ea6\u8981\u5c0f\uff0c\u5219\u7f6e\u6362x\uff0cy\u3002\n    for(int i=19;i>=0;i--)\n    {\n        if(dep[f[x][i]]>=dep[y])\n        x=f[x][i];\n    }\n    if(x==y)return x;//\u5982\u679cx==y\u65f6\uff0c\u8bf4\u660e\u627e\u5230\u4e86LCA\uff0c\u5219\u8fd4\u56dex\u3002\n    for(int i=19;i>=0;i--)\n    {\n        if(f[x][i]!=f[y][i])\n        x=f[x][i],y=f[y][i];\n    }\n    return f[x][0];//\u5982\u679cx!=y\uff0c\u5219\u4e24\u4e2a\u70b9\u540c\u65f6\u5f80\u4e0a\u8df3\uff0c\u76f4\u5230\u627e\u5230\u7956\u5148\u4e3a\u6b62\u3002\n}\ninline void init()\n{\n    cin>>n>>q;\n    rt=1;\n    for(int i=1;i<n;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        dadson(x,y,z);\n        dadson(y,x,z);\n    }\n}//\u8bfb\u5165\u548c\u50a8\u5b58\u6811\u3002\ninline void work()\n{\n    dfs(rt,1);\n    dp();\n\tint x,y;a[0]=1;\n    for(int i=1;i<=q;i++)\n    {\n        cin>>x>>y;\n        cout<<val[x]+val[y]-2*val[lca(x,y)]<<endl;//\u6c42\u6811\u4e0a\u7684\u8fb9\u6743\u503c\n    }\n \n}\nint main()\n{\n    init();\n    work();\n    //so easy \u7684\u4e3b\u7a0b\u5e8f\uff0c\u8bb0\u5f97\u52a0return 0;\n    return 0;\n}\n```\n\n```\n------------\n\u4e00\u4e2a\u63d0\u4ea4\u8bb0\u5f55\uff0c\u8dd1\u7684\u8fd8\u7b97\u662f\u6bd4\u8f83\u5feb\u7684\nhttps://www.luogu.org/record/show?rid=9819591",
        "postTime": 1535852594,
        "uid": 94531,
        "name": "Watermatter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "# [\u987e](https://www.luogu.org/blog/RPdreamer/#)[z](https://www.cnblogs.com/-guz/)\n\n~~\u4f60\u6ca1\u6709\u53d1\u73b0\u4e24\u4e2a\u5b57\u91cc\u7684blog\u90fd\u4e0d\u4e00\u6837\u561b~~ qwq\n\n\u9898\u76ee\u63cf\u8ff0-->[p2912 \u7267\u573a\u6563\u6b65](https://www.luogu.org/problemnew/show/P2912)\n\n### \u9898\u610f\u6982\u62ec\n\n\u7ed9\u5b9a\u4e00\u4e2a**\u6811**,\u7ed9\u4f60Q\u4e2a\u8be2\u95ee,\u6bcf\u6b21\u8be2\u95ee\u8f93\u5165\u4e00\u4e2a\u4e8c\u5143\u7ec4$(x,y)$,\u8981\u6c42\u6c42\u51fa$(x,y)$\u7684\u8ddd\u79bb.\n\n\u660e\u663e\u5e26\u6743lca.\n\n\u8fd9\u91cc\u5199\u4e00\u4e0b\u9012\u63a8\u5f0f\n$$f[u][i]=f[f[u][i-1]][i-1]$$\n\n$$gw[u][i]=gw[f[u][i-1]][i-1]+gw[u][i-1]$$\n\n#### \u5b9a\u4e49\uff1a\n\n> $f[u][i]$\u4ee3\u8868$u$\u5411\u4e0a\u8df3$2^i$\u6b65\u5230\u8fbe\u7684\u8282\u70b9.\n>\n> $gw[u][i]$\u4ee3\u8868$u$\u5411\u4e0a\u8df3$2^i$\u6b65\u5230\u8fbe\u7684\u8282\u70b9\u7684\u8fb9\u6743\u548c.\n\n\u4e3a\u4ec0\u4e48$f[u][i]=f[f[u][i-1]][i-1]$\uff1f\n\n\u6211\u4eec\u4ece$u$\u5230\u8fbe$f[u][i]$\u9700\u8981$2^i$\u6b65,\u800c\u5230\u8fbe$f[u][i-1]$\u9700\u8981$2^{i-1}$\u6b65,\u518d\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u8df3$2^{i-1}$\u6b65,\u7684\u8bdd\u5c31\u5230\u8fbe\u4e86$f[u][i]$\u3002\n\n$$2^{i-1}+2^{i-1}=2*2^{i-1}=2^{i}$$\n\n\u53c8\u56e0\u4e3a\u6211\u4eec\u5904\u7406$f[u][i-1]$\u4e00\u5b9a\u6bd4\u5904\u7406$f[u][i]$\u8981\u65e9,\u6240\u4ee5\u8fd9\u6837\u8f6c\u79fb\u5373\u53ef.\n\n#### \u521d\u59cb\u5316\n\n```c++\nf[u][0]=fa;\ngw[u][0]=edge[i].w;//\u5373\u8fde\u5411u\u7684\u8fb9\u6743.\n```\n\n\u7136\u540e\u8fd9\u6837\u8fd9\u4e2a\u9898\u5c31\u53d8\u6210\u4e86\u88f8\u7684\u5e26\u6743lca\u95ee\u9898 qwq.\n\n---------------------\u4ee3\u7801---------------------\n\n```c++\n#include<bits/stdc++.h>\n#define R register\n#define N 1008\nusing namespace std;\ninline void in(int &x)\n{\n\tint f=1;x=0;char s=getchar();\n\twhile(!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,head[N],tot,m;\nint depth[N],f[N][18],gw[N][18];\nstruct cod{int u,v,w;}edge[N<<1+8];\ninline void add(int x,int y,int z)\n{\n\tedge[++tot].u=head[x];\n\tedge[tot].v=y;\n\tedge[tot].w=z;\n\thead[x]=tot;\n}\nvoid dfs(int u,int fa,int dis)\n{\n\tdepth[u]=depth[fa]+1;\n\tf[u][0]=fa;gw[u][0]=dis;\n\tfor(R int i=1;(1<<i)<=depth[u];i++)\n\t\tf[u][i]=f[f[u][i-1]][i-1],\n\t\tgw[u][i]=gw[f[u][i-1]][i-1]+gw[u][i-1];\n\tfor(R int i=head[u];i;i=edge[i].u)\n\t{\n\t\tif(edge[i].v==fa)continue;\n\t\tdfs(edge[i].v,u,edge[i].w);\n\t}\n}\ninline int lca(int x,int y)\n{\n\tif(depth[x]>depth[y])swap(x,y);\n\tint ans=0;\n\tfor(R int i=17;i>=0;i--)\n\t\tif(depth[y]-(1<<i)>=depth[x])\n\t\t\tans+=gw[y][i],y=f[y][i];\n\tif(x==y)return ans;\n\tfor(R int i=17;i>=0;i--)\n\t{\n\t\tif(f[x][i]==f[y][i])continue;\n\t\tans+=gw[x][i]+gw[y][i];\n\t\ty=f[y][i],x=f[x][i];\n\t}\n\treturn (ans+gw[x][0]+gw[y][0]);\n}\nint main()\n{\n\tin(n),in(m);\n\tfor(R int i=1,x,y,z;i<n;i++)\n\t{\n\t\tin(x),in(y),in(z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tdfs(1,0,0);\n\tfor(R int x,y;m;m--)\n\t{\n\t\tin(x),in(y);\n\t\tprintf(\"%d\\n\",lca(x,y));\n\t}\n}\n```",
        "postTime": 1537961031,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u53d1\u4e2ablog\u8bb0\u5f55\u4e00\u4e0b\u7701\u7684\u5fd8\u8bb0\n\nlca\u662f\u4e00\u7c7b\u5927\u9898\uff0c\u867d\u7136\u6709\u5f88\u591a\u89e3\u6cd5\uff0c\u4f46\u849f\u84bb\u4e5f\u77e5\u4e4b\u4e0d\u591a\uff0c\u4eca\u5929\u53ea\u6311\u4e24\u7c7b\u89e3\u6cd5\uff0c\u500d\u589e\u548c\u6811\u5256\n\n\n\n------------\n\u500d\u589e\n\n\u8fd9\u662f\u4e00\u79cd\u5728\u7ebf\u89e3\u7b54lca\u95ee\u9898\u7684\u7b97\u6cd5\uff0c\u5177\u6709\u9ad8\u6548\u6027\n\n\u5148\u8bf4\u601d\u8def\uff1a\u8bbef[x][i]\u8868\u793a\u8282\u70b9x\u7684\u7b2c2^i\u8f88\u7956\u5148,\u7279\u522b\u7684\uff0c\u82e5\u8be5\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u8d23\u4ee4f[x][i]=0\uff0c\u521d\u59cb\u5316f[x][0]\u4e3a\u8282\u70b9x\u7684\u7236\u8282\u70b9\uff0c\u6709\u4ee5\u4e0b\u9012\u63a8\u5173\u7cfb\u5f0f\n```\nf[x][i]=f[f[x][i-1]][i-1]\n```\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528bfs\u9884\u5904\u7406\u51faf\u6570\u7ec4\u3002\n\n\u8ba1\u7b97lca(x,y)\u6709\u4ee5\u4e0b\u6b65\u9aa4\n\n1.\u8bbed[x]\u8868\u793ax\u7684\u6df1\u5ea6\uff0c\u4e14d[x]>=d[y]\uff08\u5426\u5219\u4ea4\u6362x\uff0cy\uff09\n\n2.\u7528\u4e8c\u8fdb\u5236\u601d\u60f3\uff0c\u5c06x\u5411\u4e0a\u8c03\u6574\u5230\u4e0ey\u540c\u4e00\u6df1\u5ea6\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4f9d\u6b21\u5c1d\u8bd5\u8ba9x\u5411\u4e0a\u8d70i=2^log n,\u2026\u20262^1,2^0,\u6b65\uff0c\u5e76\u68c0\u67e5\u5230\u8fbe\u7684\u8282\u70b9\u662f\u5426\u6bd4y\u6df1\uff0c\u82e5\u662f\uff0c\u5219\u4ee4x=f[x][i]\n\n3.\u82e5\u6b64\u65f6x=y\uff0c\u5219\u5df2\u627e\u5230\uff0c\u5e76\u8fd4\u56de\u503c\n\n4.\u5426\u5219\uff0c\u7528\u4e8c\u8fdb\u5236\u62c6\u5206\u601d\u60f3\uff0c\u5c06x\uff0cy\u540c\u65f6\u5411\u4e0a\u8c03\u6574\uff0c\u5e76\u4fdd\u8bc1\u6df1\u5ea6\u4e00\u81f4\u4e14\u4e8c\u8005\u4e0d\u76f8\u4f1a\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4f9d\u6b21\u5c1d\u8bd5\u8ba9x\uff0cy\u5411\u4e0a\u8d70i=2^log n,\u2026\u20262^1,2^0,\u6b65\uff0c\u82e5f[x][i]!=f[y][i],\u5219\u4ee4x=f[x][i],y=f[y][i]\n\n5.\u6b64\u65f6x\uff0cy\u5fc5\u5b9a\u53ea\u5dee\u4e00\u6b65\u5c31\u76f8\u4f1a\uff0c\u4ed6\u4eec\u7684lca\u5c31\u662ff[x][0]\n\n\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n log n),\u4e4b\u540e\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n)\n\n\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<bitset>\n#include<cstring>\n#include<cmath>\n#define fu(a,b,c) for(int a=b;a<=c;a++)\n#define fd(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\nconst int INF=0x3f3f3f3f,N=1050;\nint ver[N*2],Next[N*2],head[N],edge[N*2];\nint fa[N][20],d[N],dist[N];\nint n,m,tot,q,t,s;\ninline void add(int x,int y,int z)\n{\n    ver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n}\nvoid bfs(int x)\n{\n    queue<int> q;\n    q.push(x),d[x]=1;\n    dist[x]=0;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=head[x];i;i=Next[i])\n        {\n            int y=ver[i],z=edge[i];\n            if(d[y]) continue;\n            d[y]=d[x]+1;\n            dist[y]=dist[x]+z;\n            fa[y][0]=x;\n            fu(j,1,t)\n            fa[y][j]=fa[fa[y][j-1]][j-1];\n            q.push(y);\n        }\n    }\n}\nint lca(int x,int y)\n{\n    if(d[y]>d[x]) swap(x,y);\n    fd(i,t,0)\n    if(d[fa[x][i]]>=d[y]) x=fa[x][i];\n    if(x==y) return x;\n    fd(i,t,0)\n    if(fa[x][i]!=fa[y][i])\n    {\n        x=fa[x][i],y=fa[y][i];\n    }\n    return fa[x][0];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    t=(log(n)/log(2))+1;\n    fu(i,1,n-1)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z),add(y,x,z);\n    }\n    bfs(1);\n    while(q--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        printf(\"%d\\n\",dist[x]+dist[y]-2*dist[lca(x,y)]);\n    }\n    return 0;\n}\n```\n\n\n------------\n\u6811\u5256\n\n\u4e5f\u662f\u4e00\u79cd\u5728\u7ebf\u7684\u89e3\u7b54\uff0c\u8dd1\u5f97\u6bd4\u4e0a\u9762\u7684\u8fd8\u5feb~~\uff08\u6bd4\u9999\u6e2f\u8bb0\u8005\u8fd8\u5feb\uff09~~\n\n\u6b64blog\u8bb2\u7684\u5f88\u8be6\u7ec6\uff0c\u6211\u5c31\u501f\u7528\uff08\u7167\u6284\uff09\u4e86\n[](https://www.cnblogs.com/1227xq/p/6813288.html)https://www.cnblogs.com/1227xq/p/6813288.html\n\n![](https://i.loli.net/2018/06/10/5b1d1f24e5c75.png)\n![](https://i.loli.net/2018/06/10/5b1d1f24e5e0c.png)\n![](https://i.loli.net/2018/06/10/5b1d1fd74fac3.jpg)\n\u6a59\u8fb9\u4e3a\u8f7b\u8fb9\n\n\u7ea2\u8fb9\u4e3a\u91cd\u8fb9\n\n\u7eff\u6570\u4e3a\u6bcf\u4e2a\u70b9\u7684 top\n\n\u6a59\u6570\u4e3a\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\n\n1\u3000 \u5148\u9884\u5904\u7406 \u6bcf\u4e2a\u70b9\u7684 deep\u6df1\u5ea6  size\u5b50\u6811\u5927\u5c0f  dad\u7236\u8282\u70b9\u3000\u3000\n\n2\u3000 \u518d\u9884\u5904\u7406 \u6bcf\u4e2a\u70b9\u7684 top\u91cd\u94fe\u9876\u70b9\n\n3\u3000 \u5c31\u662f\u8df3\u4e86\n\n \u4e0a\u4ee3\u7801\n```\n//minamoto\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<bitset>\n#include<cstring>\n#include<cmath>\n#define fu(a,b,c) for(int a=b;a<=c;a++)\n#define fd(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\nconst int INF=0x3f3f3f3f,N=1050;\nint ver[N*2],Next[N*2],head[N],edge[N*2];\nint f[N],top[N],d[N],l[N],size[N];\nint n,tot,t;\ninline void add(int x,int y,int z)\n{\n    ver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n}\nvoid dfs(int x)\n{\n    size[x]=1,d[x]=d[f[x]]+1;\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i],z=edge[i];\n        if(y!=f[x])\n        l[y]=l[x]+z,f[y]=x,dfs(y),size[x]+=size[y];\n    }\n}\nvoid dfs_(int x)\n{\n    if(!top[x]) top[x]=x;\n    int t=0;\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(y!=f[x]&&size[y]>size[t])\n        t=y;\n    }\n    if(t) top[t]=top[x],dfs_(t);\n    for(int i=head[x];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(y!=f[x]&&y!=t)\n        dfs_(y);\n    }\n}\nint lca(int x,int y)\n{\n    while(top[x]!=top[y])\n    {\n        if(d[top[x]]<d[top[y]]) swap(x,y);\n        x=f[top[x]];\n    }\n    if(d[x]>d[y]) swap(x,y);\n    return x;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&t);\n    fu(i,1,n-1)\n    {\n    \tint x,y,z;\n    \tscanf(\"%d%d%d\",&x,&y,&z);\n    \tadd(x,y,z),add(y,x,z);\n    }\n    dfs(1);\n    dfs_(1);\n    while(t--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        printf(\"%d\\n\",l[x]+l[y]-2*l[lca(x,y)]);\n    }\n    return 0;\n}\n```",
        "postTime": 1528635518,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1Tarjan LCA\uff0c\u79bb\u7ebf\u505a\u6cd5\uff0c\u601d\u8def\u8fd8\u662f\u7ef4\u62a4\u524d\u7f00\u548c\u3002\u4e8e\u662f\u53ef\u4ee5\u4e00\u904ddfs\u89e3\u51b3\u6240\u6709\u95ee\u9898\uff0c\u6c42\u51falca\u540e\u76f4\u63a5\u8bb0\u5f55\u7b97\u51fa\u6765\u7684\u7b54\u6848\u5c31\u884c\u4e86,ans[lis] = len[u]+len[v]-2\\*len[bcj(v)]\u3002\n\n\u611f\u89c9Tarjan\u662f\u6bd4\u8f83\u597d\u5199\u800c\u4e14\u597d\u61c2\u7684\uff0cN+Q\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u975e\u5e38\u4f18\u3002\n\n\n\n\n```cpp\n#include <cstdio>\n#define mxn 1007\n#define gt(x) x = read()\nusing namespace std;\nint n,q,cnte,cntq,pre[mxn],qpre[mxn],len[mxn],f[mxn],ans[mxn];\nbool vis[mxn];\nstruct edge {int v,w,nxt; }e[mxn<<1];\nstruct qedge{int v,nxt,lis;}qe[mxn<<1];\ninline int read()\n{\n    int out = 0;\n    char c;\n    while((c = getchar()) > '9' || c < '0');\n    while(c >= '0' && c <= '9') \n        out = out * 10 + c - '0',c = getchar();\n    return out;\n}\ninline void adde(int u,int v,int w)\n{\n    e[++cnte].v = v,e[cnte].w = w;\n    e[cnte].nxt = pre[u],pre[u] = cnte;\n    return;\n}\ninline void addq(int u,int v,int lis)\n{\n    qe[++cntq].v = v,qe[cntq].lis = lis;\n    qe[cntq].nxt = qpre[u],qpre[u] = cntq;\n    return;\n}\nint bcj(int x) {return f[x] == x ? x : f[x] = bcj(f[x]);}\nvoid dfs(int p)\n{\n    vis[p] = 1,f[p] = p;\n    for(int i = pre[p];i;i = e[i].nxt)\n    {\n        int s = e[i].v;    \n        if(vis[s]) continue;\n        len[s] = len[p] + e[i].w;\n        dfs(s);\n        f[s] = p;\n    }\n    for(int i = qpre[p];i;i = qe[i].nxt)\n    {\n        int v = qe[i].v;\n        if(!vis[v]) continue;\n        ans[qe[i].lis] = len[v] + len[p] - 2 * len[bcj(v)];\n    }\n    return;\n}\nint main()\n{    int u,v,w;\n    gt(n),gt(q);\n    for(int i = 1;i < n;i++)\n    {\n        gt(u),gt(v),gt(w);\n        adde(u,v,w),adde(v,u,w);\n    }\n    for(int i = 1;i <= q;i++)\n    {\n        gt(u),gt(v);\n        addq(u,v,i),addq(v,u,i);\n    }\n    dfs(1);\n    for(int i = 1;i <= q;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1497338037,
        "uid": 27165,
        "name": "Dijkspfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u5f88\u7ecf\u5178\u7684\u4e00\u9053\u9898\uff0c\u503c\u5f97\u4e00\u5237\uff0c\u500d\u589e\u7ef4\u62a4\u533a\u95f4\u548c\uff0cbfs\u5efa\u6811\uff0c\u9884\u5904\u7406\u4e00\u904d\u5c31\u597d\u4e86\u3002\u6700\u540e\u76f4\u63a5lca\u5c31\u597d\u4e86\uff0c\u6700\u540elca\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\u522b\u5fd8\u4e86\u540c\u65f6\u518d\u5206\u522b\u52a0\u4e24\u4e2a\u7684\u7956\u5148\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N = 100000 + 5;\nint tot,head[N],n,q,f[N][30],p[N][30],deep[N];\nbool vis[N];\nstruct node\n{\n    int next , to , val;\n}edge[N];\nint add(int a,int b,int c)\n{\n    edge[tot].next=head[a];\n    edge[tot].to=b;\n    edge[tot].val=c;\n    head[a]=tot++;\n}\nint lca(int x,int y)\n{\n    int ans = 0;\n    if(deep[x]<deep[y])swap(x,y);\n    int i;\n    for(i=0;(1<<i)<=deep[x];i++);\n    for(int j=i-1;j>=0;j--)\n        if(deep[x]-(1<<j)>=deep[y])\n        {\n            ans+=f[x][j];\n            x=p[x][j];\n        }\n    if(x==y) return ans;\n    for(int j=i-1;j>=0;j--)\n    {\n        if(p[x][j]!=p[y][j])\n        {\n            ans+=f[x][j]+f[y][j];\n            x=p[x][j];\n            y=p[y][j];\n        }\n    }\n    return ans+f[x][0]+f[y][0];\n}\nvoid dfs(int x)\n{\n    vis[x]=true;\n    for(int i=head[x];~i;i=edge[i].next)\n        if(!vis[edge[i].to])\n        {\n            deep[edge[i].to]=deep[x]+1;\n            p[edge[i].to][0]=x;\n            f[edge[i].to][0]=edge[i].val;\n            dfs(edge[i].to);\n        }\n}\nvoid solve()\n{\n    memset(head,-1,sizeof(head));\n    cin>>n>>q;\n    for(int i = 1;i<n;i++)\n    {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c);add(b,a,c);\n    }\n    dfs(1);\n    for(int j=1;(1<<j)<=n;j++)\n    {\n        for(int i=1;i<=n;i++)\n        if(p[i][j-1])\n        {\n            p[i][j]=p[p[i][j-1]][j-1];\n            f[i][j]=f[i][j-1]+f[p[i][j-1]][j-1];\n        }\n    }\n    for(int i=0;i<q;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        printf(\"%d\\n\",lca(a,b));\n    }\n}\nint main()\n{\n    solve();\n    return 0;\n}\n```",
        "postTime": 1486120363,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8981\u6c42LCA\uff0c\u5f88\u591a\u4eba\u4f1a\u60f3\u6811\u5256\u6216\u8005\u500d\u589e\uff0c\u4f46\u4ed4\u7ec6\u4e00\u770b\u6570\u636e\u8303\u56f4\u2014\u2014$10^4$\uff0c$O(n^2)$\u90fd\u80fd\u8fc7\uff0c\u90a3\u76f4\u63a5\u5199\u66b4\u529b\u8df3LCA\u5c31\u884c\u8fa3\uff01\n\n\u795e\u9b54\uff1f\u4f60\u4e0d\u4f1a\u66b4\u529b\u8df3\uff1f\n\n\u4e0d\u65ad\u8ba9\u6df1\u5ea6\u5927\u7684\u5411\u4e0a\u8df3\u4e00\u5c42\uff0c\u76f4\u5230\u662f\u540c\u4e00\u4e2a\u70b9\u4e3a\u6b62.\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e4+10;\nint n,m,d[N],fa[N],x,y,z,res;\nstruct Edge{\n    int id,w;\n};\nint w[N];\nbasic_string<Edge>G[N];\nvoid dfs(int u){for(int i=0,v;i<G[u].size();i++)if(!d[v=G[u][i].id])d[v]=d[u]+1,fa[v]=u,w[v]=G[u][i].w,dfs(v);}\nint main(){\n    cin>>n>>m,d[1]=1;\n    for(int i=1;i<n;i++)cin>>x>>y>>z,G[x]+=(Edge){y,z},G[y]+=(Edge){x,z};\n    dfs(1);\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;res=0;\n        while(x!=y){\n            if(d[x]>d[y])res+=w[x],x=fa[x];\n            else res+=w[y],y=fa[y];\n        }\n        cout<<res<<endl;\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1620005106,
        "uid": 383079,
        "name": "Acc_Robin",
        "ccfLevel": 6,
        "title": "Pasture Walking G \u9898\u89e3"
    },
    {
        "content": "### \u8fd9\u4e2a\u9898\u662f\u4eca\u5929\u65b0\u5b66\u7684\u77e5\u8bc6:\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u6a21\u677f\u9898QAQ\n \u7531\u4e8e\u524d\u4e00\u5929\u665a\u4e0a\u8865\u4f5c\u4e1a\u8865\u52303\u70b9\uff0c\uff0c\u5bfc\u81f4\u542c\u8bfe\u65f6\u7761\u660f\u4e86\uff0c\uff0c\u4e00\u89c9\u9192\u6765\u8bb2\u89e3\u5df2\u7ecf\u5230\u4e86\u5c3e\u58f0\u2026\u2026\n \u4e0d\u8fc7\u4f5c\u4e3a\u849f\u84bb\uff0c\u5c31\u8981\u6709\u849f\u84bb\u7684\u6837\u5b50\uff0c\u7ecf\u8fc7\u9ed8\u9ed8\u5730\u8fdb\u884c\u4e00\u4e9b\u96be\u4ee5\u542f\u9f7f\u7684\u884c\u4e3a\uff0c\u6211\u7ec8\u7a76\u662f\u5feb\u901fA\u6389\u4e86\u8fd9\u9053\u9898\u3002\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/solution/P2912)\n## \u4e0d\u5f97\u4e0d\u8bf4USACO\u7684\u9898\u8fd8\u662f\u5f88\u503c\u5f97\u8ba4\u771f\u4e00\u505a\u7684\uff0c\u5efa\u8bae\u6ca1\u6709\u4ed4\u7ec6\u8bfb\u9898\u5e76\u6df1\u5165\u601d\u8003\u7684\u76c6\u53cb\u518d\u53bb\u601d\u8003\u601d\u8003\u54e6~~\n ok\uff0c\u6ce8\u610f\u9898\u4e2d\u8fd9\u6837\u4e00\u53e5\u8bdd\u201c\u5728\u4efb\u610f\u4e24\u4e2a\u7267\u573a\u95f4\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u7531\u82e5\u5e72\u9053\u8def\u7ec4\u6210\u7684\u8def\u5f84\u76f8\u8fde.\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u9053\u8def\u6784\u6210\u4e86\u4e00\u68f5\u6811.\u201d\u90a3\u4e48\uff0c\u5b58\u50a8\u5c31\u53ef\u4ee5\u5229\u7528\u56fe\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u6700\u7b80\u6d01\u660e\u4e86\u6613\u638c\u63e1\u7684\u5f53\u7136\u662f\u94fe\u5f0f\u524d\u5411\u661f\u5566\n```cpp\nstruct node{\n       int y,w;\n       };\nnode E[2*maxn];//\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u524d\u5411\u661f \nvoid add(int x,int y,int z)//\u57fa\u672c\u63d2\u5165 \n{\n     E[++id].y=y;\n     E[id].w=z;\n     next[id]=head[x];\n     head[x]=id;\n}\n```\n\u8fd9\u6bb5\u4ee3\u7801\u81ea\u7136\u662f\u4e00\u4e2a\u57fa\u672c\u64cd\u4f5c\u4e86\n### \u4e0b\u9762\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u7528\u4ec0\u4e48\u6765\u5b58\u50a8\u6216\u662f\u5bfb\u627e\u67d0\u4e2a\u70b9\u7684\u7b2c\u51e0\u4e2a\u7956\u5148\u5462\uff1f\uff1f\uff1f(\u7531\u4e8e\u672c\u4eba\u4e0d\u4f1a\u63d2\u5165\u56fe\u7247)\u5c31\u7528\u8bed\u8a00\u6765\u63cf\u8ff0\u5427\uff0c\u5bfb\u627eX\uff0cY\u7684\u516c\u5171\u6700\u8fd1\u7956\u5148\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u5fc5\u7136\u662f\u6df1\u5ea6\u8f83\u6d45\u7684\u70b9\u7684\u4e0a\u65b9\n\u4e3a\u4e86\u65b9\u4fbf\u8fdb\u884c\u5bfb\u627e\uff0c\u6211\u8bbe\u7f6e\u4e86anc[?][?\uff1f]\u6570\u7ec4\uff0c\u4ee3\u8868\u4ece\uff1f\u5f00\u59cb\u7684\u7b2c2^\uff1f\uff1f\u4e2a\u7956\u5148\n```cpp\nint lca(int x,int y)//\u8fd4\u56deX,Y\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4f4d\u7f6e \n{\n    if(dep[x]<dep[y])swap(x,y);\n    for(int i=10;i>=0;i--)\n      if(dep[anc[x][i]]>=dep[y])\n        x=anc[x][i];\n    if(x==y)return y;\n    for(int i=10;i>=0;i--)\n      if(anc[x][i]!=anc[y][i])\n        x=anc[x][i],y=anc[y][i];\n    return anc[x][0];\n}\n```\n\u8fd9\u6bb5\u4ee3\u7801\u4fbf\u7528\u4e8e\u5bfb\u627e\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4f4d\u7f6e\n## \u81f3\u4e8e\u66f4\u591a\u7684\uff0c\uff0c\u81ea\u6211\u611f\u89c9\u6ca1\u4ec0\u4e48\u66f4\u591a\u7684\uff0c\u4e00\u90e8\u5206\u89e3\u91ca\u7559\u5728\u4ee3\u7801\u7684\u6ce8\u91ca\u91cc\uff0c\u5927\u5bb6\u53bb\u5bfb\u627e\u5427!\n# \u8fd9\u5c31\u5949\u4e0aAC\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,m,id=0;\nconst int maxn=500000;\nint dep[maxn],anc[maxn][20];//dep[??]\u8bb0\u5f55\u8be5\u70b9\u7684\u6df1\u5ea6,anc[x][i]\u8bb0\u5f55X\u70b9\u7684\u7b2c2^i\u4e2a\u7956\u5148 \nint head[maxn],next[2*maxn];//\u94fe\u5f0f\u524d\u5411\u661f\u57fa\u672c\u4e1c\u4e1c \nint d[maxn];//\u8bb0\u5f55\u4ece\u6839\u8282\u70b9\u5230\u67d0\u70b9\u7684\u8ddd\u79bb. \nstruct node{\n       int y,w;\n       };\nnode E[2*maxn];//\u7528\u7ed3\u6784\u4f53\u5b9e\u73b0\u524d\u5411\u661f \nvoid add(int x,int y,int z)//\u57fa\u672c\u63d2\u5165 \n{\n     E[++id].y=y;\n     E[id].w=z;\n     next[id]=head[x];\n     head[x]=id;\n}\nvoid dfs(int x,int fa)//\u67e5\u8be2\u5230X\u70b9\u7684\u8ddd\u79bbd[x] \n{\n     dep[x]=dep[fa]+1;\n     for(int i=1;(1<<i)<=dep[x];i++)\n       anc[x][i]=anc[anc[x][i-1]][i-1];\n     for(int i=head[x];i;i=next[i])\n     {\n       int y=E[i].y;\n       int w=E[i].w;\n       if(y==fa)continue;\n       anc[y][0]=x;\n       d[y]=d[x]+w;\n       dfs(y,x);\n     }\n}  \nint lca(int x,int y)//\u8fd4\u56deX,Y\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u7684\u4f4d\u7f6e \n{\n    if(dep[x]<dep[y])swap(x,y);\n    for(int i=10;i>=0;i--)\n      if(dep[anc[x][i]]>=dep[y])\n        x=anc[x][i];\n    if(x==y)return y;\n    for(int i=10;i>=0;i--)\n      if(anc[x][i]!=anc[y][i])\n        x=anc[x][i],y=anc[y][i];\n    return anc[x][0];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m); \n    for(int i=1;i<n;i++)//\u6ca1\u5f97\u4ec0\u4e48\u597d\u8bf4\u7684 \n    {\n      int x,y,z;\n      scanf(\"%d%d%d\",&x,&y,&z);\n      add(x,y,z);\n      add(y,x,z);\n    }\n    dep[0]=0;//\u521d\u59cb\u5316,\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a0,\u5230\u81ea\u8eab\u8ddd\u79bb\u4e3a0,\u7b2c1\u4e2a\u7956\u5148\u662f0, \n    d[1]=0;\n    anc[1][0]=0;\n    dfs(1,0);\n    for(int i=1;i<=m;i++)\n    {\n      int x,y;\n      scanf(\"%d%d\",&x,&y);\n      printf(\"%d\\n\",d[x]+d[y]-2*d[lca(x,y)]);//\u56e0\u4e3ad[x],d[y]\u4e2d\u542b\u6709\u91cd\u590d\u7684\u4ece\u6839\u8282\u70b9\u5230\u516c\u5171\u6700\u8fd1\u7956\u5148\u7684\u8ddd\u79bb \n    }\n    return 0;\n}\n\n```\n[\u849f\u84bb\u7684\u5b9d\u85cf\u5323\u5b50](https://www.luogu.org/blog/sshilyzyx/)",
        "postTime": 1565253330,
        "uid": 147869,
        "name": "ss_hilyzyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u6ca1\u4eba\u5199\u66b4\u529b\u9898\u89e3\u554a\uff0c\u90a3\u6211\u6765\u4e00\u53d1\n\n\u672c\u9898\u6570\u636e\u8303\u56f4\u6781\u5c0f\uff0c1000\\*1000\n\n\u5b8c\u5168\u53ef\u4ee5\u66b4\u529b\u6765\u505a\uff0c\u7f16\u7a0b\u590d\u6742\u5ea6\u5f88\u5c0f\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <iostream>\nusing namespace std;\nvector<pair<int,int> >e[1005];\nint fa[1005],n,q,ans,deep[1005]={0,1},map[1005][1005],u,v,w;\nvoid dfs(int now)\n{\n    for(int i=0;i<e[now].size();i++)\n        if(e[now][i].first!=fa[now])//\u00c8\u00e7\u00b9\u00fb\u00c1\u00ac\u00b3\u00f6\u00c8\u00a5\u00b5\u00c4\u00b1\u00df\u00b2\u00bb\u00d6\u00b8\u00cf\u00f2\u00cb\u00fb\u00b5\u00c4\u00b8\u00b8\u00c7\u00d7 \n        {\n            fa[e[now][i].first]=now;//\u00b8\u00fc\u00d0\u00c2\u00b8\u00b8\u00d7\u00d3\u00b9\u00d8\u00cf\u00b5\u00a3\u00ac\u00c9\u00ee\u00b6\u00c8\u00b9\u00d8\u00cf\u00b5 \n            deep[e[now][i].first]=deep[now]+1;\n            dfs(e[now][i].first);//\u00bc\u00cc\u00d0\u00f8dfs \n        }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        e[u].push_back(make_pair(v,w));\n        e[v].push_back(make_pair(u,w));\n        map[u][v]=map[v][u]=w;\n    }\n    dfs(1);\n    for(int i=1;i<=q;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        ans=0;\n        while(u!=v)\n        {\n            if(deep[u]<deep[v]) swap(u,v);//\u00c3\u00bf\u00b4\u00ce\u00b6\u00bc\u00c8\u00c3\u00b1\u00c8\u00bd\u00cf\u00c9\u00ee\u00b5\u00c4\u00b5\u00e3\u00cf\u00c8\u00d7\u00df \n            ans+=map[fa[u]][u];//\u00c0\u00db\u00bc\u00d3\u00c8\u00a8\u00d6\u00b5 \n            u=fa[u];//\u00cd\u00f9\u00c9\u00cf\u00d7\u00df \n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1516809029,
        "uid": 70545,
        "name": "Awar3ness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u500d\u589e\u3002\u3002\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\u500d\u589e\u7684\u539f\u7406\n\n\u4efb\u610f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u51e0\u4e2a2\u7684n\u6b21\u5e42\u4e4b\u548c\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u539f\u7406\uff0c\u6211\u4eec\u53ea\u9700\u77e5\u9053\u4e00\u4e2a\u70b9\u4e0a\u65b9\u7684\u7b2c2\u7684n\u6b21\u65b9\u4e2a\u7956\u5148\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u5176\u6240\u6709\u7956\u5148\n\n\uff08e\u3002g\u3002\u6c42\u7b2c3\u4e2a\u7956\u5148\u53ef\u4ee5\u8868\u793a\u4e3a\u8be5\u70b9\u4e0a\u65b9\u7b2c\u4e8c\u4e2a\u7956\u5148\u7684\u7b2c1\u4e2a\u7956\u5148\uff09\n\n\u540c\u7406\uff0c\u77e5\u9053\u4e00\u4e2a\u70b9\u4e0a\u65b9\u7684\u7b2c2\u7684n\u6b21\u65b9\u4e2a\u7956\u5148\u5230\u8be5\u70b9\u7684\u8ddd\u79bb\uff0c\u5373\u53ef\u6c42\u51fa\u8be5\u70b9\u5230\u6240\u6709\u7956\u5148\u7684\u8ddd\u79bb\n\n\u90a3\u4e48\uff0c\u4ee4father\u3010i\u3011\u3010j\u3011\u8868\u793a\u70b9i\u4e0a\u65b9\u7b2c2\u7684j\u6b21\u65b9\u7684\u7956\u5148\u7f16\u53f7\uff0cd\u3010i\u3011\u3010j\u3011\u8868\u793a\u5230father\u3010i\u3011\u3010j\u3011\u7684\u8ddd\u79bb\n\n\u75312^n=2^(n-1)+2^(n-1\uff09\uff1b\n\n\u53ef\u5f97father\u3010i\u3011\u3010j\u3011=father\u3010father\u3010i\u3011\u3010j-1\u3011\u3011\u3010j-1\u3011\uff1bd\u3010i\u3011\u3010j\u3011=d\u3010i\u3011\u3010j-1\u3011+d\u3010father\u3010i\u3011\u3010j-1\u3011\u3011\u3010j-1\u3011\uff1b\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct data//\u90bb\u63a5\u8868\n{\n    int next;int v;int val;\n}edge[2010];int cnt;int alist[1010];\nvoid add(int u,int v,int val)\n{\n    edge[++cnt].v=v;\n    edge[cnt].val=val;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;return;\n}\nint d[1010][15];\nint father[1010][15];\nint depth[1010];//\u6df1\u5ea6\u6570\u7ec4\uff0c\u4f5c\u7528\u4e00\u4f1a\u8bf4\nint n;int q;\nvoid dfs(int x)//\u6df1\u641c\uff0c\u5b8c\u6210\u7956\u5148\u548c\u7956\u5148\u8ddd\u79bb\u548c\u6df1\u5ea6\u5173\u7cfb\n{\n    for(int i=1;i<15;i++)\n    {\n        if(father[x][i-1]!=0)//\u9012\u63a8f\u548cd\n        {\n            father[x][i]=father[father[x][i-1]][i-1];\n            d[x][i]=d[x][i-1]+d[father[x][i-1]][i-1];\n        }\n        else break;//0\u8868\u793a\u6ca1\u6709\u8fd9\u4e2a\u7956\u5148\uff0c\u5373\u8ddd\u79bb\u592a\u5927\u4e86\uff0c\u90a3\u4e48\u66f4\u5927\u76842^(n+1)\u4e5f\u662f0\n    }\n    int next=alist[x];\n    while(next)//\u904d\u5386\u51fa\u8fb9\n    {    \n        int v=edge[next].v;int val=edge[next].val;\n        if(v!=father[x][0])//\u663e\u7136\u4e0d\u80fd\u7238\u7238\u662f\u513f\u5b50\u7684\u513f\u5b50\uff0c\u8fd9\u5c31\u4e71\u5957\u4e86\n        {\n            father[v][0]=x;//\u521d\u59cb\u5316\u513f\u5b50\n            d[v][0]=val;depth[v]=depth[x]+1;\n                dfs(v);\n        }\n        next=edge[next].next;\n    }\n    return;\n}\nint lca(int u,int v)//\u6807\u51c6\u7684lca\u6a21\u677f\n{\n    int res=0;//\u4e00\u5b9a\u8981\u8d4b\u503c\n    if(depth[u]<depth[v])swap(u,v);//\u94a6\u5b9au\u66f4\u4f4e\n    int delta=depth[u]-depth[v];\n    for(int i=0;i<15;i++)\n    {\n        if(delta&(1<<i))//\u628adepth\u3010u\u3011\u548cdepth\u3010v\u3011\u7684\u5dee\u62c6\u62102\u7684n\u6b21\u5e42\u4e4b\u548c\n        {\n            res+=d[u][i];//\u66f4\u6539u\u7684\u540c\u65f6\u66f4\u6539d\n            u=father[u][i];//\u66f4\u6539u\n        }\n    }\n    if(u==v)return res;//\u5982\u679cv\u662f\u76f4\u7cfb\u7956\u5148\uff0c\u8fd4\u56de\n    for(int i=14;i>=0;i--)//\u5148\u9009\u5927\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6709\u70b9\u8d2a\u5fc3\u7684\u610f\u601d\n    {\n        if(father[u][i]!=father[v][i])//\u79fb\u52a8\n        {\n            res+=d[u][i]+d[v][i];\n            u=father[u][i];\n            v=father[v][i];\n        }\n    }\n    res+=d[u][0]+d[v][0];//\u6700\u540efather\u3010u\u3011\u30100\u3011\u624d\u662flca\uff0c\u56e0\u6b64\u52a0\u4e0au\uff0cv\u5230lca\u8ddd\u79bb\n    return res;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i=0;i<n-1;i++)\n    {\n        int u;int v;int val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        add(u,v,val);//\u53cc\u5411\u8fb9\n        add(v,u,val);\n    }\n    dfs(1);//dfs\n    for(int i=0;i<q;i++)\n    {\n        int u;int v;\n        scanf(\"%d%d\",&u,&v);\n        printf(\"%d\\n\",lca(u,v));//\u5904\u7406\u8be2\u95ee\n    }\n    return 0;\n}\n\n```",
        "postTime": 1507283284,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9898\u9762\u975e\u5e38\u660e\u4e86\uff0c\u5c31\u662f\u7ed9\u4f60\u4e00\u9897\u6811\uff0c\u8ba9\u4f60\u5904\u7406\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u6c42\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u800c\u672c\u849f\u84bb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u8111\u888b\u4e00\u62bd\uff0c\u5e76\u6ca1\u6709\u60f3\u5230\u7528LCA\u5feb\u901f\u6c42\u89e3\uff0c\u5199\u4e86\u4e00\u4e2a\u6781\u5176\u66b4\u529b\u7684Dijkstra\uff0c\u7136\u800c\u8fd8\u5f88\u610f\u5916\u5730\u76f4\u63a5\u8fc7\u6389\u4e86\uff0c\u6240\u4ee5\u51b3\u5b9a\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\n\u6ca1\u4ec0\u4e48\u5927\u4f53\u601d\u8def\uff0c\u5c31\u662f\u76f4\u63a5\u5f88\u7c97\u66b4\u7684\u95ee\u4e00\u4e2a\u5c31\u8dd1\u4e00\u904dDJ\u7136\u540e\u6c42\u8ddd\u79bb\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\ntypedef pair<int, int> PII;\nint head[1000000];\nint nxt[1000000];\nint ver[1000000];\nint link[1000000];\nint cnt;\nint dis[1000000];\nvoid add(int x,int y,int z)\n{\n    nxt[++cnt] = head[x];\n    head[x] = cnt;\n    ver[cnt] = y;\n    link[cnt] = z;\n}\nbool aim[1000000];\nvoid djslm(int sta)\n{\n    priority_queue<PII, vector<PII>, greater<PII> > q;//\u6ce8\u610f\u6b64\u9898\u9700\u8981\u5806\u4f18\u5316\uff0c\u5426\u5219\u80af\u6069\u6ca1\u6cd5\u8fc7\n    memset(dis, 0x7f, sizeof dis);\n    memset(aim, 0, sizeof aim);\n    dis[sta] = 0;\n    q.push({0, sta});\n    while(!q.empty())\n    {\n        PII temp = q.top();\n        q.pop();\n        int lea = temp.first;\n        int point = temp.second;\n        if(aim[point])\n            continue;\n        aim[point] = 1;\n        for (int i = head[point]; i;i=nxt[i])\n        {\n            int v0 = ver[i];\n            if(dis[v0]>lea+link[i])\n            {\n                dis[v0] = lea + link[i];\n                q.push({dis[v0], v0});\n            }\n        }\n    }\n}//DJ\u677f\u5b50\nint main()\n{\n    int n, q;\n    scanf(\"%d%d\", &n, &q);\n    for (int i = 1; i < n;i++)\n    {\n        int a, b, c;\n        scanf(\"%d%d%d\", &a, &b, &c);\n        add(a, b, c);\n        add(b, a, c);\n    }\n    for (int i = 1; i <= q;i++)\n    {\n        int sta;\n        int las;\n        scanf(\"%d%d\", &sta, &las);\n        djslm(sta);//\u6bcf\u4e00\u6b21\u8be2\u95ee\u90fd\u8dd1\u4e00\u904dDJ\n        printf(\"%d\\n\", dis[las]);\n    }\n}\n```\n",
        "postTime": 1603336315,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]Pasture Walking G\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\u6709N(2<=N<=1000)\u5934\u5976\u725b\uff0c\u7f16\u53f7\u4e3a1\u5230W\uff0c\u5b83\u4eec\u6b63\u5728\u540c\u6837\u7f16\u53f7\u4e3a1\u5230N\u7684\u7267\u573a\u4e0a\u884c\u8d70.\u4e3a\u4e86\u65b9 \u4fbf\uff0c\u6211\u4eec\u5047\u8bbe\u7f16\u53f7\u4e3ai\u7684\u725b\u6070\u597d\u5728\u7b2ci\u53f7\u7267\u573a\u4e0a.\n\n\u6709\u4e00\u4e9b\u7267\u573a\u95f4\u6bcf\u4e24\u4e2a\u7267\u573a\u7528\u4e00\u6761\u53cc\u5411\u9053\u8def\u76f8\u8fde\uff0c\u9053\u8def\u603b\u5171\u6709N - 1\u6761\uff0c\u5976\u725b\u53ef\u4ee5\u5728\u8fd9\u4e9b\u9053\u8def \u4e0a\u884c\u8d70.\u7b2ci\u6761\u9053\u8def\u628a\u7b2cAi\u4e2a\u7267\u573a\u548c\u7b2cBi\u4e2a\u7267\u573a\u8fde\u4e86\u8d77\u6765(1 <= A_i <= N; 1 <= B_i <= N)\uff0c\u800c\u5b83\u7684\u957f\u5ea6 \u662f 1 <= L_i <= 10,000.\u5728\u4efb\u610f\u4e24\u4e2a\u7267\u573a\u95f4\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u7531\u82e5\u5e72\u9053\u8def\u7ec4\u6210\u7684\u8def\u5f84\u76f8\u8fde.\u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u9053\u8def\u6784\u6210\u4e86\u4e00\u68f5\u6811.\n\n\u5976\u725b\u4eec\u5341\u5206\u5e0c\u671b\u7ecf\u5e38\u4e92\u76f8\u89c1\u9762.\u5b83\u4eec\u5341\u5206\u7740\u6025\uff0c\u6240\u4ee5\u5e0c\u671b\u4f60\u5e2e\u52a9\u5b83\u4eec\u8ba1\u5212\u5b83\u4eec\u7684\u884c\u7a0b\uff0c\u4f60\u53ea \u9700\u8981\u8ba1\u7b97\u51faQ(1 < Q < 1000)\u5bf9\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u2022\u6bcf\u5bf9\u70b9\u4ee5\u4e00\u4e2a\u8be2\u95eep1,p2 (1 <= p1 <= N; 1 <= p2 <= N). \u7684\u5f62\u5f0f\u7ed9\u51fa\n\n```\nInput\n4 2 \n2 1 2 \n4 3 2 \n1 4 3 \n1 2 \n3 2 \nOutput\n2\n7\n```\n\n## \u9898\u610f\u5206\u6790\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f \u6811\u5256 + LCA\n\n\u81f3\u4e8e[\u6811\u5256](http://www.cnblogs.com/chinhhh/p/7965433.html)\n\n\u9996\u5148 \u6211\u4eec\u628a\u8fb9\u6743\u4e0b\u653e\u5230TA\u4e0b\u9762\u7684\u70b9\u4e0a\n\n\u7136\u540eanswer=\u8def\u5f84\u4e0a\u70b9\u6743\u548c-num[LCA(u,v)]*2\n\n\u9274\u4e8e\u6ca1\u6709\u6bd2\u7624\u7684\u533a\u95f4\u4fee\u6539\n\n\u672c\u849f\u84bb\u5c31\u5199\u4e86\u6bd4\u8f83\u7b80\u5355\u7684\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u7ef4\u62a4\n\n# CODE:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<ctime>\n#include<queue>\n#define IL inline\n#define R register\n#define int long long\n#define N 10008\nusing namespace std;\ntemplate<typename T>IL void read(T &A)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-') f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    A=f ? x:-x;\n}\nint n,m,tot,cnt;\nint num[N],id[N],wt[N];\nstruct Tree{\n    int to,nex,w;\n}e[N];\nint fa[N][30];\nint head[N];\nint dep[N],siz[N],son[N],top[N];\nint tre[N];\nIL void add(int ai,int bi,int ci)\n{\n    e[++tot].to=bi;\n    e[tot].w=ci;\n    e[tot].nex=head[ai];\n    head[ai]=tot;\n}\nIL void dfsa(int now,int fat)\n{\n    fa[now][0]=fat;dep[now]=dep[fat]+1;\n    for(R int i=1;i<=25;++i)\n     fa[now][i]=fa[fa[now][i-1]][i-1];\n    for(R int i=head[now];i;i=e[i].nex)\n    {\n        int v=e[i].to;\n        if(v==fa[now][0]) continue;\n        dfsa(v,now);\n    } \n}\nIL void dfsb(int now,int fat)\n{\n    siz[now]=1;int maxson=-1;\n    for(R int i=head[now];i;i=e[i].nex)\n    {\n        int v=e[i].to;\n        if(v==fa[now][0]) continue;\n        num[v]=e[i].w;\n        dfsb(v,now);\n        siz[now]+=siz[v];\n        if(siz[v]>maxson) {son[now]=v;maxson=siz[v];}\n    }\n}\nIL void dfsc(int now,int topf)\n{\n    id[now]=++cnt;\n    wt[cnt]=num[now];\n    top[now]=topf;\n    if(!son[now]) return;\n    dfsc(son[now],topf);\n    for(R int i=head[now];i;i=e[i].nex)\n    {\n        int v=e[i].to;\n        if(v==fa[now][0]||v==son[now]) continue;\n        dfsc(v,v);\n    }\n}\nIL void chande(int x,int y)\n{\n    while(x<=n)\n    {\n        tre[x]+=y;\n        x+=(x&-x);\n    }\n}\nIL int get(int x)\n{\n    int ans=0;\n    while(x)\n    {\n        ans+=tre[x];\n        x-=(x&-x);\n    }\n    return ans;\n}\nIL int qury(int nowx,int nowy)\n{\n    int ans=0;\n    while(top[nowx]!=top[nowy])\n    {\n        if(dep[top[nowx]]<dep[top[nowy]]) swap(nowx,nowy);\n        ans+=(get(id[nowx])-get(id[top[nowx]]-1));\n        nowx=fa[top[nowx]][0];\n    }\n    if(dep[nowx]>dep[nowy]) swap(nowx,nowy);\n    ans=ans-get(id[nowx]-1)+get(id[nowy]);\n    return ans;\n}\nIL int LCA(int nowx,int nowy)\n{\n    if(dep[nowx]<dep[nowy]) swap(nowx,nowy);\n    for(R int i=25;i>=0;--i) \n    if(dep[fa[nowx][i]]>=dep[nowy]) nowx=fa[nowx][i];\n    if(nowy==nowx) return nowx;\n    for(R int i=25;i>=0;--i)\n    if(fa[nowx][i]!=fa[nowy][i]) \n    nowx=fa[nowx][i],nowy=fa[nowy][i];\n    return fa[nowx][0];\n}\nsigned main()\n{\n    read(n);read(m);\n    for(R int i=1;i<n;++i)\n    {\n        int x,y,z;\n        read(x);read(y);read(z);\n        add(x,y,z);add(y,x,z);\n    }\n    dfsa(1,0);dfsb(1,0);dfsc(1,1);\n//    for(R int i=1;i<=cnt;++i) printf(\"wt is %lld\\n\",wt[i]);\n    for(R int i=1;i<=n;++i) chande(i,wt[i]);\n    for(R int i=1;i<=m;++i)\n    {\n        int x,y;read(x);read(y);\n        int lck=LCA(x,y);\n//        cout<<\" sdifh \"<<lck<<endl;\n        printf(\"%lld\\n\",qury(x,y)-num[lck]);\n    }\n    return 0;\n}\n```\n\n# _NOIP 2018 RP++_",
        "postTime": 1538001183,
        "uid": 87931,
        "name": "tcswuzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e3a\u4ec0\u4e48\u662f\u666e\u53ca+/\u63d0\u9ad8\u554a...\n\u76f4\u63a5\u6784\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\u7528spfa\u6c42\u8ddd\u79bb\u5c31\u884c\u4e86\n\u4e0a\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define N 10000+100\nusing namespace std;\nint p[N], dist[N], b[N], nt[N], q[N], w[N], sum;\nbool flag[N];\nvoid add(int x, int y, int z)\n{\n\tb[++sum] = y;\n\tw[sum] = z;\n\tnt[sum] = p[x];\n\tp[x] = sum;\n}\nint spfa(int x, int y)\n{\n\tmemset(dist, 63, sizeof(dist));\n\tdist[x] = 0;\n\tq[1] = x;\n\tint head = 1, tail = 0;\n\twhile (tail <= head)\n\t{\n\t\tint k = q[++tail];\n\t\tint e = p[k];\n\t\tflag[k] = false;\n\t\twhile (e)\n\t\t{\n\t\t\tint kk = b[e];\n\t\t\tif (dist[kk] - w[e] > dist[k])\n\t\t\t{\n\t\t\t\tdist[kk] = dist[k] + w[e];\n\t\t\t\tif (!flag[kk])\n\t\t\t\t{\n\t\t\t\t\tflag[kk] = true;\n\t\t\t\t\tq[++head] = kk;\n\t\t\t\t}\n\t\t\t}\n\t\t\te = nt[e];\n\t\t}\n\t}\n\treturn dist[y];\n}\n\nint main(void)\n{\n\tint m, n;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i != n; ++i)\n\t{\n\t\tint x, y, z;\n\t\tscanf(\"%d%d%d\", &x, &y, &z);\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\twhile (m--)\n\t{\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tprintf(\"%d\\n\", spfa(x, y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1530267646,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "~~\u4e0d\u53ef\u601d\u8bae\uff0c\u8fd9\u9898\u6700\u77ed\u8def\u5f84\u4e5f\u80fd\u8fc7~~\n\n\u6211\u4eec\u5c06ai\u5230bi\u8fde\u4e00\u6761\u6743\u503c\u4e3aci\u7684\u8def\u5f84\uff0c\u7136\u540e\u626bS\u5230T\u7684\u6700\u77ed\u8def\u5f84\uff0c\u8981**\u7528SPFA**\u6216**\u7528floyd\u5148\u9884\u5904\u7406\uff0c\u7136\u540eO(1)\u56de\u7b54\u5373\u53ef\u3002**\n\nSPFA(M*K*E) \u6ce8\uff1aK\u4e0d\u5b9a\uff0c\u5e73\u5747\u503c\u4e3a2\n\nfloyd(N^3+M)\n\nSPFA\u4ee3\u7801\uff08floyd\u81ea\u5df1\u60f3\uff09\uff1a\n\n```\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int MAXN=2501;\ntypedef vector<int> Vec;//\u5b9a\u4e49vector\u5bb9\u5668\nVec Map[MAXN],Val[MAXN];\nint N,M,S,T;\n \nvoid init()\n{\n\tscanf(\"%d %d\\n\",&N,&M);\n\tint a,b,v;\n\tfor(int i=1;i<=N-1;i++)\n\t{\n\t\tscanf(\"%d %d %d\\n\",&a,&b,&v);\n\t\tMap[a].push_back(b);//\u8fde\u8fb9\n\t\tVal[a].push_back(v);//\u642d\u6743\u503c\n\t\tMap[b].push_back(a);//\u8fde\u8fb9\n\t\tVal[b].push_back(v);//\u642d\u6743\u503c\n\t}\n}\n \nint dist[MAXN];\nint flag[MAXN];\nconst int INF=1000000000;\nqueue<int>Q;//\u961f\u5217\uff0c\u5bf9SPFA\u8fdb\u884c\u4f18\u5316\nvoid SPFA()\n{\n\tfor(int i=1;i<=N;i++)\n\t\tdist[i]=INF,flag[i]=0;//\u521d\u59cb\u5316\n\tdist[S]=0,flag[S]=1;\n\tQ.push(S);\n\tint t,tmp;\n\twhile(!Q.empty())\n\t{\n\t\tt=Q.front();//\u53d6\u961f\u9996\n\t\tQ.pop();\n\t\tflag[t]=0;\n\t\tfor(unsigned int i=0;i<Map[t].size();i++)//\u904d\u5386\u4e0e\u4ed6\u76f8\u90bb\u7684\u8282\u70b9\n\t\t{\n\t\t\ttmp=dist[t]+Val[t][i];\n\t\t\tif(tmp<dist[Map[t][i]])//\u677e\u5f1b\n\t\t\t{\n\t\t\t\tdist[Map[t][i]]=tmp;\n\t\t\t\tif(!flag[Map[t][i]])\n\t\t\t\t{\n\t\t\t\t\tQ.push(Map[t][i]);\n\t\t\t\t\tflag[Map[t][i]]=1;//\u8bb0\u5f55\u5df2\u8bbf\u95ee\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dist[T]);//\u8f93\u51fa\n\treturn;\n}\n \nint main()\n{\n\tinit();\n\tint i;\n\tfor (i=1;i<=M;i++)\n\t{\n\t\tscanf(\"%d %d\",&S,&T);\n\t\tmemset(dist,0,sizeof(dist));//\u521d\u59cb\u5316\n\t\tmemset(flag,0,sizeof(flag));//\u521d\u59cb\u5316\n\t\tSPFA();//\u626b\u4eceS\u5230T\u6700\u77ed\u8def\u5f84\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1518060795,
        "uid": 43395,
        "name": "Dream_It_Possible",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e2d\u7528 len[i] \u8868\u793a i \u5230\u6839\u8ddd\u79bb\n\n\u8be2\u95ee x \u548c y \u7684\u8ddd\u79bb\n\n\u7b54\u6848\u53ef\u7528 len[x] + len[y] - 2\\*len[ lca(x,y) ]\u8868\u793a\n\n\n\u800c lca \u53ef\u4ee5\u7528\u6811\u5256\u6c42\u51fa\n\nlen[] \u5728\u6811\u5256\u6c42lca \u7684\u9884\u5904\u7406\u4e2d \u53ef\u4ee5\u987a\u5e26\u6c42\u51fa\u6765\n\n\n\u6811\u5256\u6c42 lca \u867d\u7136\u4e0d\u5e38\u7528\n\n\u4f46\u8fd9\u5e76\u4e0d\u4ee3\u8868 \u5b83\u7684\u6548\u7387\u4e0d\u9ad8\n\n\u6211\u7684 \u6811\u5256\u4ee3\u7801 \u76ee\u524d\u662f\u672c\u9898 \u7684 rank1\n\n\u65f6\u95f4\u77ed \u7a7a\u95f4\u5c0f\n\n  \n\u5177\u4f53\u5728\u6211\u7684\n\n###**[\u535a\u5ba2](http://www.cnblogs.com/1227xq/p/6813288.html)**\n\n\u91cc\u5199\u4e86 \u6811\u5256 lca\n\n\u4ee5\u53ca\u5bf9\u4e8e\u672c\u9898\u7684 \u5e94\u7528\n",
        "postTime": 1493988037,
        "uid": 18146,
        "name": "insprition",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    },
    {
        "content": "\u6c42LCA\uff0c\u500d\u589e\u7ef4\u62a4\u5411\u4e0a\u7684\u8ddd\u79bb\u3002\n\n\u9996\u5148\u7528\u500d\u589e\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u5411\u4e0a\u8d702^n\u6b65\u7684\u7956\u5148\u4ee5\u53ca\u8ddd\u79bb\uff0c\u7136\u540e\u4e8c\u5206\u6c42\u51faLCA\uff0c\u6839\u636eLCA\u518d\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230LCA\u7684\u8ddd\u79bb\u7136\u540e\u76f8\u52a0\u5f97\u51fa\u7b54\u6848\u5373\u53ef\u3002\u7136\u540e\u5c31\u6ca1\u4e86\u3002\u6570\u636e\u8fd8\u7b97\u5c0f\u7684\u3002\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u89e3\u91caLCA\u7684\u6c42\u6cd5\u3002\n\n-------------------------------------------------------------------------------------------------------------------------------------------------\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n//\nusing namespace std;\n//\nconst int MAXN=1005,log_n=11;\n//\nstruct edge{int to,w;};\nvector<edge>G[MAXN];\nint n,m,depth[MAXN],parent[log_n+1][MAXN],dis[log_n+1][MAXN];\n// \ninline void read(int &n){\n    n=0;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    return;\n}\ninline void add_edge(int u,int v,int w){\n    edge e;\n    e.to=v,e.w=w;\n    G[u].push_back(e);\n    return;\n}\nvoid in_data(){\n    int u,v,w;\n    read(n);read(m);\n    for(int i=1;i<n;i++){\n        read(u);read(v);read(w);\n        add_edge(u,v,w);\n        add_edge(v,u,w);\n    }\n    return;\n}\nvoid dfs(int u,int fa,int dep,int w){\n    parent[0][u]=fa;\n    dis[0][u]=w;\n    depth[u]=dep;\n    int v,ww;\n    for(int i=0;i<G[u].size();i++){\n        v=G[u][i].to;\n        if(v==fa) continue;\n        ww=G[u][i].w;\n        dfs(v,u,dep+1,ww);\n    }\n    return;\n}\nint lca(int u,int v){\n    if(depth[u]>depth[v]) swap(u,v);\n    int tmp=depth[v]-depth[u];\n    for(int i=0;i<=log_n;i++){\n        if((tmp>>i)&1)\n            v=parent[i][v];\n    }\n    if(u==v) return u;\n    for(int i=log_n;i>=0;i--){\n        if(parent[i][u]!=parent[i][v]){\n            v=parent[i][v];\n            u=parent[i][u];\n        }\n    }\n    return parent[0][u];\n}\nint get_dis(int u,int v,int ancestor){\n    int ans=0;\n    int tmp=depth[u]-depth[ancestor];\n    for(int i=0;i<=log_n;i++){\n        if((tmp>>i)&1){\n            ans+=dis[i][u];\n            u=parent[i][u];\n        }\n    }\n    tmp=depth[v]-depth[ancestor];\n    for(int i=0;i<=log_n;i++){\n        if((tmp>>i)&1){\n            ans+=dis[i][v];\n            v=parent[i][v];\n        }\n    }\n    return ans;\n}\nvoid solve_query(){\n    dfs(1,0,0,0);\n    for(int i=1;i<=log_n;i++){\n        for(int u=1;u<=n;u++){\n            parent[i][u]=parent[i-1][parent[i-1][u]];\n            dis[i][u]=dis[i-1][u]+dis[i-1][parent[i-1][u]];\n        }\n    }\n    int u,v;\n    while(m--){\n        read(u);read(v);\n        int ancestor=lca(u,v);\n        int ans=get_dis(u,v,ancestor);\n        printf(\"%d\\n\",ans);\n    }\n    return;\n}\nint main(){\n    in_data();\n    solve_query();\n    return 0;\n}\n```",
        "postTime": 1475753933,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2912 \u3010[USACO08OCT]\u7267\u573a\u6563\u6b65Pasture Walking\u3011"
    }
]