[
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/articles/problem-BZOJ-3813-Odd-Number-Country/)\n\n\n---\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Luogu 4140](https://www.luogu.org/problemnew/show/P4140)\n\n\u5728\u4e00\u7247\u7f8e\u4e3d\u7684\u5927\u9646\u4e0a\u6709 $100000$ \u4e2a\u56fd\u5bb6\uff0c\u6bcf\u4e2a\u56fd\u5bb6\u6709\u4e00\u4e2a\u94f6\u884c\u3002\u67d0\u5927\u516c\u53f8\u7684\u9886\u8896\u5728\u8fd9 $100000$ \u4e2a\u94f6\u884c\u5f00\u6237\u65f6\u90fd\u5b58\u4e86 $3$ \u5927\u6d0b\uff0c\u4ed6\u60dc\u8d22\u5982\u547d\uff0c\u56e0\u6b64\u4f1a\u4e0d\u65f6\u5730\u6d3e\u5c0f\u5f1f GFS \u6e05\u70b9\u4e00\u4e9b\u94f6\u884c\u7684\u5b58\u6b3e\u6216\u8005\u8ba9 GFS \u6539\u53d8\u67d0\u4e2a\u94f6\u884c\u7684\u5b58\u6b3e\u3002\u8fd9\u91cc\u53d1\u884c\u7684\u8f6f\u59b9\u9762\u989d\u662f\u6700\u5c0f\u7684 $60$ \u4e2a\u7d20\u6570\uff0c\u4efb\u4f55\u4eba\u7684\u8d22\u4ea7\u90fd\u53ea\u80fd\u7531\u8fd9 $60$ \u4e2a\u57fa\u672c\u9762\u989d\u8868\u793a\u3002\n\n\u9886\u8896\u4e60\u60ef\u5c06\u4e00\u6bb5\u7f16\u53f7\u8fde\u7eed\u7684\u94f6\u884c\u91cc\u7684\u5b58\u6b3e\u62ff\u5230\u4e00\u4e2a\u8d26\u623f\u53bb\u6e05\u70b9\u3002\u5982\u679c\u9886\u8896\u9009\u62e9\u6e05\u70b9\u7f16\u53f7\u5728 $[a,b]$ \u5185\u7684\u94f6\u884c\u8d22\u4ea7\uff0c\u4ed6\u4f1a\u5148\u5bf9 $[a,b]$ \u7684\u8d22\u4ea7\u6c42\u548c\uff08\u8ba1\u4e3a $\\text{product}$\uff09\uff0c\u7136\u540e\u5728\u7f16\u53f7\u5c5e\u4e8e $[1,\\text{product}]$ \u7684\u8d26\u623f\u4e2d\u9009\u62e9\u4e00\u4e2a\u53bb\u6e05\u70b9\u5b58\u6b3e\u3002\u4e00\u4e2a\u8d26\u623f $\\text{number}$ \u53ef\u80fd\u88ab\u9009\u4e2d\u5f53\u4e14\u4ec5\u5f53 $\\gcd(\\text{product},\\text{number})=1$\u3002\u5f53\u9886\u8896\u53c8\u8d5a\u5927\u94b1\u4e86\u7684\u65f6\u5019\uff0c\u4ed6\u4f1a\u5728\u67d0\u4e2a\u94f6\u884c\u6539\u53d8\u5b58\u6b3e\uff0c\u4f46\u662f\u9886\u8896\u4e0d\u4f1a\u5728\u67d0\u4e2a\u94f6\u884c\u7684\u5b58\u6b3e\u603b\u6570\u8d85\u8fc7 $10^6$\u3002\n\n\u73b0\u5728 GFS \u9884\u5148\u77e5\u9053\u4e86\u9886\u8896\u7684\u6e05\u70b9\u5b58\u6b3e\u4e0e\u53d8\u52a8\u5b58\u6b3e\u7684 $x$ \u6b21\u8ba1\u5212\uff0c\u60f3\u8bf7\u4f60\u544a\u8bc9\u4ed6\uff0c\u6bcf\u6b21\u6e05\u70b9\u5b58\u6b3e\u65f6\u9886\u8896\u6709\u591a\u5c11\u4e2a\u8d26\u623f\u53ef\u4ee5\u4f9b\u4ed6\u9009\u62e9\uff0c\u5f53\u7136\u8fd9\u4e2a\u503c\u53ef\u80fd\u975e\u5e38\u5927\uff0cGFS \u53ea\u60f3\u77e5\u9053\u5bf9 $19961993$ \u53d6\u6a21\u540e\u7684\u7b54\u6848\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le x\\le 10^5$\n\n------\n\n## Solution\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6bcf\u4e2a\u6570\u7684\u6807\u51c6\u5206\u89e3\u5f62\u5f0f\u4e2d\u53ea\u6709\u53ef\u80fd\u51fa\u73b0\u524d $60$ \u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528**\u7ebf\u6bb5\u6811**\u7ef4\u62a4\u533a\u95f4\u5185**\u6bcf\u4e2a\u8d28\u56e0\u5b50\u662f\u5426\u51fa\u73b0\u8fc7**\uff08\u7b14\u8005\u4f7f\u7528\u538b\u4f4d\uff0c\u7528 $\\text{long long}$ \u50a8\u5b58\uff0c\u64cd\u4f5c\u8d77\u6765\u8f83\u4e3a\u7b80\u5355\uff09\uff0c\u5e76\u7ef4\u62a4**\u533a\u95f4\u5185\u7684\u4e58\u79ef**\u3002\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u533a\u95f4\u7684\u4e58\u79ef\u7684 $\\varphi$ \u51fd\u6570\u503c\u5373\u53ef\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O(60\\cdot m\\log n)$\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define lson p<<1\n#define rson p<<1|1\n\nconst int prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\nconst int invpr[]={9980997,6653998,11977196,8555140,5444180,1535538,10568114,14708837,3471651,11701858,17386252,1618540,16066970,2321162,18263100,16948862,12518538,15380552,10725847,1686929,13399146,17182475,12025297,15924736,13582387,395287,6395590,15857658,16299242,6359573,3300802,18742940,6702567,10914471,16210746,11765678,5340151,18247466,7769638,8077107,11932588,6506948,1985748,6619521,5877135,4413707,9744480,10115270,14597757,16475182,18334191,5011379,18885205,7555336,621385,11309266,12170137,12006660,18304499,11153142};\nconst int N=1e5+5;\nconst int mod=19961993;\nint n=100000,m,a[N],mul[N<<2];\nlong long seg[N<<2];\n\nvoid pushup(int p) {\n\tseg[p]=seg[lson]|seg[rson];\n\tmul[p]=1LL*mul[lson]*mul[rson]%mod;\n}\nvoid modify(int x,int p,int l,int r,long long f,int v) {\n\tif(l==r) {\n\t\tseg[p]^=f,mul[p]=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) modify(x,lson,l,mid,f,v);\n\telse modify(x,rson,mid+1,r,f,v);\n\tpushup(p);\n}\nlong long queryFac(int x,int y,int p,int l,int r) {\n\tif(x<=l&&r<=y) return seg[p];\n\tint mid=(l+r)>>1;\n\tlong long ans=0;\n\tif(x<=mid) ans|=queryFac(x,y,lson,l,mid);\n\tif(mid<y) ans|=queryFac(x,y,rson,mid+1,r);\n\treturn ans;\n}\nint queryMul(int x,int y,int p,int l,int r) {\n\tif(x<=l&&r<=y) return mul[p];\n\tint mid=(l+r)>>1,ans=1;\n\tif(x<=mid) ans=1LL*ans*queryMul(x,y,lson,l,mid)%mod;\n\tif(mid<y) ans=1LL*ans*queryMul(x,y,rson,mid+1,r)%mod;\n\treturn ans;\n}\nint query(int l,int r) {\n\tint ans=queryMul(l,r,1,1,n);\n\tlong long f=queryFac(l,r,1,1,n);\n\tfor(int i=0;i<60;++i) {\n\t\tif(f&(1LL<<i)) ans=1LL*ans*invpr[i]%mod*(prime[i]-1)%mod;\n\t}\n\treturn ans;\n}\nvoid ins(int x,int val) {\n\tlong long f=0;\n\tfor(int i=0;i<60;++i) {\n\t\tif(val%prime[i]==0) f^=1LL<<i;#\n\t}\n\tmodify(x,1,1,n,f,val);\n}\nint main() {\n\tfor(int i=1;i<=n;++i) a[i]=3,modify(i,1,1,n,2,a[i]);\n\tfor(scanf(\"%d\",&m);m--;) {\n\t\tint o,x,y;\n\t\tscanf(\"%d%d%d\",&o,&x,&y);\n\t\tif(o==0) {\n\t\t\tprintf(\"%d\\n\",query(x,y));\n\t\t} else {\n\t\t\tins(x,a[x]),ins(x,a[x]=y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1549594329,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4+\u5229\u7528\u6b27\u62c9\u51fd\u6570\u6027\u8d28\u7684\u505a\u6cd5\u3002\n\n\u4e0e\u5176\u4ed6\u9898\u89e3\u4e0d\u540c\uff0c\u6211\u4eec\u77e5\u9053 $\u03c6$ \u662f\u4e00\u4e2a\u79ef\u6027\u51fd\u6570\uff0c\u4e14\u5728 $p^k(k>0)$ \u7684\u53d6\u503c\u4e3a $p^{k-1}\\times (p-1)$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u7528\u77e5\u9053\u6bcf\u4e2a\u6570\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u7531\u4e8e\u8d28\u6570\u4e2a\u6570\u5f88\u5c11\uff0c\u5e42\u6b21\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8d28\u6570\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(60n\\log n)$\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define re register\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t;\n}\nconst int M=19961993;\nint n,m,a[400002],c[61][400002],pw[61][400002],p[61]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\ninline void add(re int x,re int y,re int z){for(;y<=n;y+=y&(-y))c[x][y]+=z;}\ninline int ask(re int x,re int y){\n\tre int s=0;\n\tfor(;y;y-=y&(-y))s+=c[x][y];\n\treturn s;\n}\nchar s[12];\nsigned main(){\n\tn=read(),m=read();\n\tfor(re int y=1;y<=n;++y){\n\t\ta[y]=read();\n\t\tfor(re int i=1;i<=60;++i){\n\t\t\tre int sum=0,tmp=a[y];\n\t\t\twhile(tmp%p[i]==0)tmp/=p[i],++sum;\n\t\t\tif(sum)add(i,y,sum);\n\t\t}\n\t}\n\tfor(re int i=1;i<=60;++i)for(re int j=pw[i][0]=1;j<=n;++j)pw[i][j]=1ll*pw[i][j-1]*(j>1?p[i]:(p[i]-1))%M;\n\twhile(m--){\n\t\tscanf(\"%s\",s+1);\n\t\tre int y=read(),z=read();\n\t\tif(s[1]=='T'){\n\t\t\tre int ans=1;\n\t\t\tfor(re int i=1;i<=60;++i)ans=1ll*ans*pw[i][ask(i,z)-ask(i,y-1)]%M;\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t\telse{\n\t\t\tfor(re int i=1;i<=60;++i){\n\t\t\t\tre int sum=0,tmp=a[y];\n\t\t\t\twhile(tmp%p[i]==0)tmp/=p[i],++sum;\n\t\t\t\tif(sum)add(i,y,-sum);\n\t\t\t}\n\t\t\ta[y]=z;\n\t\t\tfor(re int i=1;i<=60;++i){\n\t\t\t\tre int sum=0,tmp=a[y];\n\t\t\t\twhile(tmp%p[i]==0)tmp/=p[i],++sum;\n\t\t\t\tif(sum)add(i,y,sum);\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n",
        "postTime": 1609331754,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u611f\u89c9\u81ea\u5df1\u5728\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u601d\u8def\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u7279\u6b64\u6765\u5199\u7bc7\u9898\u89e3\uff0c~~\u540c\u65f6\u9020\u798f\u793e\u4f1a~~\u3002\n\n### 1.\u9898\u610f\n\u8bfb\u5b8c\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a~~\u9898\u9762\u5168\u662f\u5e9f\u8bdd~~\uff0c\u56e0\u4e3a $ax+by=1$ \u6709\u89e3\u7b49\u4ef7\u4e8e $\\gcd(a,b)=1$\uff0c\u6240\u4ee5\u9898\u76ee\u8981\u6c42\u7684\u64cd\u4f5c\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a\n\n- \u6c42 $\\varphi(\\prod_{i=l}^r a_i)$\n- $a_x\\longleftarrow y$\n\n### 2.\u505a\u6cd5\n\n\u533a\u95f4\u64cd\u4f5c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u7d2f\u4e58\u597d\u529e\uff0c\u4f46\u662f\u6b27\u62c9\u51fd\u6570\u600e\u4e48\u6c42\u5462\uff1f\u533a\u95f4\u7d2f\u4e58\u6781\u9650\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230 $(10^6)^{10^5}$\uff0c\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u7c7b\u578b\u5b58\u7684\u4e0b\uff0c\u4e5f\u6839\u672c\u4e0d\u53ef\u80fd\u76f4\u63a5\u7b97\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b $O(\\sqrt n)$ \u6c42 $\\varphi(n)$ \u7684\u8868\u8fbe\u5f0f\uff1a\n\n$n\\times\\prod_{i=1}^k \\frac{P_i-1}{P_i}$\n\n\u53ef\u4ee5\u53d1\u73b0 $\\varphi(n)$ \u53ea\u4e0e $n$ \u542b\u6709\u54ea\u4e9b\u8d28\u56e0\u5b50\u6709\u5173\uff0c\u800c\u4e0e\u5b83\u4eec\u7684\u4e2a\u6570\u65e0\u5173\uff0c\u800c\u8fd9\u9898\u53c8\u4fdd\u8bc1\u6240\u6709\u7684 $a_i$ \u90fd\u81f3\u591a\u542b\u6709\u524d $60$ \u4e2a\u8d28\u6570\u4f5c\u4e3a\u8d28\u56e0\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u72b6\u538b\u7ef4\u62a4\u533a\u95f4\u7d2f\u4e58\u7684\u8d28\u56e0\u5b50\u3002\n\n\u90a3\u4e48\u89e3\u6cd5\u5c31\u5f88\u660e\u663e\u4e86\uff1a\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u4e58\u79ef\uff08$mul$\uff09\uff0c\u7136\u540e\u7528\u4e00\u4e2a $w$ \u6765\u5b58 $mul$ \u7684\u8d28\u56e0\u5b50\uff08\u82e5 $mul$ \u542b\u6709\u7b2c $i$ \u4e2a\u8d28\u6570\u8fd9\u4e2a\u8d28\u56e0\u5b50\uff0c\u90a3\u4e48 $w$ \u4e8c\u8fdb\u5236\u7684\u7b2c $i$ \u4f4d\u5c31\u662f $1$\uff09\u3002\n\n\u4e00\u70b9\u5c0f\u4f18\u5316\uff1a\u7531\u4e8e\u8d28\u6570\u7684\u8303\u56f4\u5f88\u5c0f\uff08\u53ea\u6709\u524d $60$ \u4e2a\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u628a\u5b83\u4eec\u4ee5\u53ca\u5b83\u4eec $\\bmod\\ 19961993$ \u610f\u4e49\u4e0b\u7684\u9006\u5143\u9884\u5904\u7406\u51fa\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u780d\u6389\u4e00\u53ea $\\log$\uff0c\u6700\u540e\u603b\u7684\u590d\u6742\u5ea6\u662f $O(m\\log n)$\u3002\n\n### 3.\u4e00\u4e9b\u5751\u70b9\n\u603b\u7ed3\u4e00\u4e0b\u6211\u505a\u8fd9\u9898\u65f6\u9047\u5230\u7684\u4e00\u4e9b\u5751\u70b9\uff1a\n\n- \u6ce8\u610f\u53d6\u6a21\n- \u72b6\u538b\u8981\u5f00 `long long`\n- \u5efa\u6811\u65f6\u662f `build(1,100000,1)` \u800c\u4e0d\u662f `build(1,x,1)`\n\n\u9644\u4e0a `ACcode`\uff1a\n```cpp\n//\u72b6\u538b+\u7ebf\u6bb5\u6811+\u6570\u5b66 \n#include<bits/stdc++.h>\n#define ll long long\n#define lc(k) k<<1\n#define rc(k) k<<1|1\n#define int long long\nusing namespace std;\nconst int MAX=1e5+10;\nconst int MOD=19961993;\ninline int read() {\n  int fh = 1, res = 0; char ch = getchar();\n  for(; !isdigit(ch); ch = getchar()) if(ch == '-') fh = -1;\n  for(; isdigit(ch); ch = getchar()) res = (res << 3) + (res << 1) + (ch ^ '0');\n  res = res * fh;\n  return res;\n}\ninline void write(ll x) {\n    if(x<0){putchar('-');x=-x;}\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nint pri[61]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\nint inv[61]={0,9980997,6653998,11977196,8555140,5444180,1535538,10568114,14708837,3471651,11701858,17386252,1618540,16066970,2321162,18263100,16948862,12518538,15380552,10725847,1686929,13399146,17182475,12025297,15924736,13582387,395287,6395590,15857658,16299242,6359573,3300802,18742940,6702567,10914471,16210746,11765678,5340151,18247466,7769638,8077107,11932588,6506948,1985748,6619521,5877135,4413707,9744480,10115270,14597757,16475182,18334191,5011379,18885205,7555336,621385,11309266,12170137,12006660,18304499,11153142};\nstruct node{int l,r,mul;ll w;}a[MAX<<2];\nll ans=0,ans2=1;\nint phi(int x)\n{\n\tint ret=ans2;\n\tfor(int i=1;i<=60;i++)\n\t\tif(x&(1ll<<i)) \n\t\t\tret=(((ret*inv[i])%MOD)*(pri[i]-1))%MOD;\n\treturn ret;\n}\nvoid push_up(int k)\n{\n\ta[k].mul=(a[lc(k)].mul*a[rc(k)].mul)%MOD;\n\ta[k].w=a[lc(k)].w|a[rc(k)].w;\n\treturn ;\n}\nvoid build(int l,int r,int k)\n{\n\ta[k].l=l;a[k].r=r;\n\tif(l==r)\n\t{\n\t\ta[k].w=1ll<<2;\n\t\ta[k].mul=3;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,lc(k));\n\tbuild(mid+1,r,rc(k));\n\tpush_up(k);\n\treturn ;\n}\nvoid ask(int l,int r,int k)\n{\n\tif(a[k].l>=l&&a[k].r<=r)\n\t{\n\t\tans2=(ans2*a[k].mul)%MOD;\n\t\tans|=a[k].w;return ;\n\t}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(l<=mid) ask(l,r,lc(k));\n\tif(mid+1<=r) ask(l,r,rc(k));\n\treturn ;\n}\nvoid change(int x,int z,int k)\n{\n\tif(a[k].l==a[k].r)\n\t{\n\t\ta[k].w=0;a[k].mul=z;\n\t\tfor(int i=1;i<=60;i++)\n\t\t\ta[k].w|=((a[k].mul%pri[i]==0)*1ll<<i);\n\t\treturn ;\n\t}\n\tint mid=(a[k].l+a[k].r)>>1;\n\tif(x<=mid) change(x,z,lc(k));\n\telse change(x,z,rc(k));\n\tpush_up(k);\n\treturn ;\n}\nsigned main()\n{\n\tint m=read(),n=MAX-10;\n\tbuild(1,n,1);\n\twhile(m--)\n\t{\n\t\tint opt=read(),x=read(),y=read();\n\t\tif(opt==0)\n\t\t{\n\t\t\tans=0;ans2=1;ask(x,y,1);\n\t\t\tprintf(\"%lld\\n\",phi(ans));\n\t\t}\n\t\telse change(x,y,1);\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1\u30fd(\uffe3\u25bd\uffe3)\uff89",
        "postTime": 1644485099,
        "uid": 230875,
        "name": "Surge_of_Force",
        "ccfLevel": 0,
        "title": "P4140 \u5947\u6570\u56fd\u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\u8f6c\u6362\uff1a\n\n\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n\u64cd\u4f5c\u4e00\uff1a \u5c06 $a_i$ \u53d8\u6210 $x$\u3002\n\n\u64cd\u4f5c\u4e8c\uff1a \u6c42\u51fa $\\varphi({\\prod_{i=l}^{r}a_i})$\u3002\n\n## Solution:\n\n\u6211\u4eec\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u4e0d\u53ef\u80fd\u6c42\u51fa\u8fd9\u4e2a\u8fde\u4e58\u540e\u518d\u6c42\u4ed6\u7684\u6b27\u62c9\u51fd\u6570\u503c\u3002\n\n\u4f46\u662f\u9898\u76ee\u6709\u4e00\u4e2a\u6027\u8d28\uff0c\u4fdd\u8bc1\u53ea\u6709\u524d $60$ \u4e2a\u7d20\u6570\u4e3a\u56e0\u5b50\u3002\n\n\u518d\u8054\u60f3\u5230\u6c42\u6b27\u62c9\u51fd\u6570\u7684\u516c\u5f0f: $\\varphi(x) = x \\times \\prod \\frac{P_i-1}{P_i}$\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u5f0f\u5b50\u53ea\u4e0e\u4ed6\u6709\u6ca1\u6709\u8fd9\u4e2a\u56e0\u5b50\u6709\u5173\uff0c\u800c\u4e0e\u4e2a\u6570\u65e0\u5173\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u72b6\u538b\uff0c\u4e8c\u8fdb\u5236\u4e0b\u7b2c $i$ \u4f4d $1$ \u8868\u793a\u6709\u8fd9\u4e2a\u56e0\u5b50\uff0c$0$ \u8868\u793a\u6ca1\u6709\u8fd9\u4e2a\u56e0\u5b50\u3002\n\n\u5728\u7ebf\u6bb5\u6811\u91cc\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u8fde\u4e58\uff0c\u4e00\u4e2a\u72b6\u538b\u540e\u8868\u793a\u662f\u5426\u6709\u8fd9\u4e2a\u56e0\u5b50\u7684\u6570 $W$\u3002\n\n\u66f4\u65b0\u8282\u70b9\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u4ed6\u7684\u8fde\u4e58\u7b49\u4e8e\u5de6\u53f3\u513f\u5b50\u7684\u8fde\u4e58\uff0c$W$ \u5c31\u7528\u5de6\u53f3\u513f\u5b50\u7684 $W$ \u6216\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n```cpp\n/**\n *\tauthor: TLE_Automation\n *\tcreater: 2022.7.23\n**/\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<bitset>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define gc getchar \nusing namespace std;\ntypedef long long ll;\n#define int long long\nconst int N = 1e6 + 10;\nconst int MAXN = 2e5 + 10;\nconst int mod = 19961993;\nconst int INF = 0x3f3f3f3f;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\ninline int gcd(int a, int b) {return !b ? a : gcd(b, a % b);}\ninline void print(int x) {if (x < 0) putchar('-'), x = -x; if(x > 9) print(x / 10); putchar(x % 10 + '0');}\ninline int ksm(int a, int b) {int base = a % mod, res = 1; while(b){if(b & 1) res = (res * base) % mod; base = (base * base) % mod, b >>= 1;}return res % mod;}\ninline int mul(int a, int b) {int base = a % mod, res = 0; while(b){if(b & 1) res = (res + base) % mod; base = (base + base) % mod, b >>= 1;}return res % mod;}\ninline char readchar() {static char buf[100000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;}\ninline int read() { int res = 0, f = 0; char ch = gc();for (; !isdigit(ch); ch = gc()) f |= (ch == '-'); for (; isdigit(ch); ch = gc()) res = (res << 1) + (res << 3) + (ch ^ '0'); return f ? -res : res;}\nconst int Pri[100] = {0, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,};\nconst int inv[100] = {0, 9980997, 6653998, 11977196, 8555140, 5444180, 1535538, 10568114, 14708837, 3471651, 11701858, 17386252, 1618540, 16066970, 2321162, 18263100, 16948862, 12518538, 15380552, 10725847, 1686929, 13399146, 17182475, 12025297, 15924736, 13582387, 395287, 6395590, 15857658, 16299242, 6359573, 3300802, 18742940, 6702567, 10914471, 16210746, 11765678, 5340151, 18247466, 7769638, 8077107, 11932588, 6506948, 1985748, 6619521, 5877135, 4413707, 9744480, 10115270, 14597757, 16475182, 18334191, 5011379, 18885205, 7555336, 621385, 11309266, 12170137, 12006660, 18304499, 11153142, 6348337, 9878802, };\n\nint W, res;\n\nll Getphi() {\n\tint ret = res;\n\tfor(int i = 1; i <= 60; i++) {\n\t\tif(W & (1ll << i)) \n\t\t\tret = ((((ret * (Pri[i] - 1) % mod) * inv[i]) % mod)) % mod;\n\t}\t\n\treturn ret;\n}\n\nnamespace Seg {\n\t#define lson rt << 1 \n\t#define rson rt << 1 | 1\n\tstruct Node {int l, r, mul, val; } tree[N << 2];\n\tvoid pushup(int rt) {\n\t\ttree[rt].mul = (tree[lson].mul * tree[rson].mul) % mod;\n\t\ttree[rt].val = (tree[lson].val | tree[rson].val);\n\t}\n\tvoid build(int rt, int l, int r) {\n\t\ttree[rt].l = l, tree[rt].r = r;\n\t\tif(l == r) return tree[rt].mul = 3, tree[rt].val = (1ll\t<< 2), void();\n\t\tint mid = (l + r) >> 1; build(lson, l, mid), build(rson, mid + 1, r);\n\t\tpushup(rt);\n\t}\n\tvoid change(int rt, int x, int k) {\n\t\tif(tree[rt].l > x || tree[rt].r < x) return;\n\t\tif(tree[rt].l == tree[rt].r) {\n\t\t\ttree[rt].mul = k, tree[rt].val = 0;\n\t\t\tfor(int i = 1; i <= 60; i++)\n\t\t\t\ttree[rt].val |= ((tree[rt].mul % Pri[i] == 0) * (1ll << i));\n\t\t\treturn;\n\t\t} change(lson, x, k), change(rson, x, k); pushup(rt);\n\t}\t\t\n\tvoid Query(int rt, int l, int r) {\n\t\tif(tree[rt].l > r || tree[rt].r < l) return;\n\t\tif(tree[rt].l >= l && tree[rt].r <= r) {\n\t\t\tres = (res * tree[rt].mul) % mod;\n\t\t\tW |= tree[rt].val; return;\n\t\t} Query(lson, l, r), Query(rson, l, r);\n\t}\n}\nusing namespace Seg;\n\nsigned main() \n{\n\tint n = read();\n\tbuild(1, 1, 1e5);\n\tfor(int i = 1; i <= n; i++) {\n\t\tint opt = read(), x = read(), y = read();\n\t\tif(!opt) {\n\t\t\tW = 0, res = 1;\n\t\t\tQuery(1, x, y);\n//\t\t\tcout << res << \"\\n\";\n\t\t\tprintf(\"%lld\\n\", Getphi());\n\t\t}\n\t\telse change(1, x, y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1658743186,
        "uid": 396974,
        "name": "Buried_Dream",
        "ccfLevel": 4,
        "title": "P4140 \u5947\u6570\u56fd \u9898\u89e3"
    },
    {
        "content": "## [\u535a\u5ba2\u5730\u5740](https://www.cnblogs.com/huangchenyan/p/11279111.html)\n\n# \u7ebf\u6bb5\u6811+\u6570\u8bba\n\u770b\u5b8c\u8fd9\u4e48\u4e00\u957f\u4e32\u9898\u76ee\uff0c\u73b0\u5c06\u6709\u7528\u7684\u4fe1\u606f\u63d0\u53d6\u51fa\u6765\n\n\u9996\u5148$number*x+product*y=1$\u8fd9\u4e2a\u6761\u4ef6\n\n\u5982\u679c\u8981\u4f7f$x$,$y$\u6709\u89e3\uff0c\u90a3\u4e48$number$\u548c$product$\u5fc5\u987b\u6ee1\u8db3$\\gcd (number,product)=1$\n\n\u90a3\u4e48\u5c06\u8be2\u95ee\u64cd\u4f5c\u8f6c\u5316\u4e3a\u6c42\u51fa$[1,product]$\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u4e0e$product$\u4e92\u8d28\n\n\u90a3\u4e48\u8fd9\u4e2a\u5c31\u662f\u6c42$\\varphi (product)$\n\n\u56e0\u4e3a\u6b27\u62c9\u51fd\u6570\u7684\u901a\u9879\u516c\u5f0f$\\varphi (x)=x\\prod_{i=1}^{k}(1-\\frac{1}{p_{i}})$\uff0cp\u4e3ax\u7684\u8d28\u56e0\u6570\n\n\u89c2\u5bdf\u9898\u76ee\uff0c\u9898\u76ee\u4fdd\u8bc1\u6240\u6709\u7684\u94b1\u90fd\u662f\u7531\u524d60\u4e2a\u7d20\u6570\u76f8\u4e58\u5f97\u5230\u7684\n\n\u90a3\u4e48\u53ea\u8981\u6c42\u51fa$product$\u5c31\u80fd\u901a\u8fc7\u9006\u5143\u6c42\u51fa\u7b54\u6848\uff0c19961993\u662f\u8d28\u6570\uff0c\u90a3\u4e48\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5373\u53ef\n\n\u56e0\u4e3a\u6c42$product$\u662f\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u94f6\u884c\u7684\u6240\u5b58\u94b1\u6570\n\n\u5728\u7ebf\u6bb5\u6811\u4e2d\u8981\u8bb0\u5f55\u533a\u95f4\u7684\u4e58\u79ef\u548c\u5f53\u524d\u533a\u95f4\u51fa\u73b0\u7684\u8d28\u6570\n\n\u56e0\u4e3a\u53ea\u670960\u4e2a\u8d28\u6570\uff0c\u53ef\u4ee5\u72b6\u538b\u5230\u4e00\u4e2along long\u4e2d\u4fdd\u5b58\n\n\u90a3\u4e48pushup\u65f6\u4e5f\u65b9\u4fbf\uff0c\u76f4\u63a5\u5c06\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7684\u72b6\u6001\u6216\u8fd0\u7b97\u5373\u53ef\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u8be2\u95ee\u6c42\u51fa$product$\u4e86\n\n\u6700\u540e\u8981\u6ce8\u610f\u5f00long long\u65f6\uff0c\u5e38\u6570\u4e5f\u8981\u8f6c\u6210long long\uff08\u67e5\u8fd9\u4e2a\u67e5\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff09\n```cpp\n#include <bits/stdc++.h>\n#define mod (long long)19961993\nusing namespace std;\nconst long long MAXN=100100;\nlong long n,p[61],w,in[61];\nstruct node\n{\n    long long l,r;\n    long long mask,mul;\n}sh[MAXN*4];\nbool check(long long x)//\u5224\u65ad\u8d28\u6570\n{\n    for (long long i=2;i*i<=x;i++)\n    {\n        if (x%i==0)\n          return false;\n    }\n    return true;\n}\nlong long split(long long x)//\u8d28\u56e0\u6570\u5206\u89e3\n{\n    long long m=0;\n    for (long long i=0;i<w;i++)\n    {\n        if (x%p[i]==0)\n          m|=(1ll<<i);//\u6ce8\u610f\n    }\n    return m;\n}\nlong long m_pow(long long a,long long b)\n{\n    long long ans=1;\n    while (b>0)\n    {\n        if (b&1)\n          ans=(ans*a)%mod;\n        a=(a*a)%mod;\n        b>>=1;\n    }\n    return ans%mod;\n}\nlong long inv(long long x)//\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u51fa\u9006\u5143\n{\n    return m_pow(x,mod-2)%mod;\n}\nvoid pushup(long long x)\n{\n    sh[x].mul=(sh[x+x].mul*sh[x+x+1].mul)%mod;\n    sh[x].mask=sh[x+x].mask|sh[x+x+1].mask;\n}\nvoid build(long long x,long long ll,long long rr)\n{\n    sh[x].l=ll;\n    sh[x].r=rr;\n    if (ll==rr)\n    {\n        sh[x].mul=(long long)3;//\u6ce8\u610f\n        sh[x].mask=split((long long)3);\n        return;\n    }\n    long long mid;\n    mid=(ll+rr)>>1;\n    build(x+x,ll,mid);\n    build(x+x+1,mid+1,rr);\n    pushup(x);\n}\nvoid change(long long x,long long wh,long long v)//\u7ebf\u6bb5\u6811\u5355\u70b9\u4fee\u6539\n{\n    if (sh[x].l==wh && sh[x].r==wh)\n    {\n        sh[x].mul=v;\n        sh[x].mask=split(v);\n        return;\n    }\n    long long mid;\n    mid=(sh[x].l+sh[x].r)>>1;\n    if (wh<=mid)\n      change(x+x,wh,v);\n    else\n      change(x+x+1,wh,v);\n    pushup(x);\n}\nlong long query1(long long x,long long ll,long long rr)//\u67e5\u627e\u4e58\u79ef\n{\n    if (sh[x].l>=ll && sh[x].r<=rr)\n      return sh[x].mul;\n    long long mid;\n    long long ans=1;\n    mid=(sh[x].l+sh[x].r)>>1;\n    if (ll<=mid)\n      ans=(ans*query1(x+x,ll,rr))%mod;\n    if (rr>mid)\n      ans=(ans*query1(x+x+1,ll,rr))%mod;\n    pushup(x);\n    return ans;\n}\nlong long query2(long long x,long long ll,long long rr)//\u67e5\u627e\u533a\u95f4\u8d28\u6570\u51fa\u73b0\u60c5\u51b5\n{\n    if (sh[x].l>=ll && sh[x].r<=rr)\n      return sh[x].mask;\n    long long mid;\n    long long ma=0;\n    mid=(sh[x].l+sh[x].r)>>1;\n    if (ll<=mid)\n      ma=ma|query2(x+x,ll,rr);\n    if (rr>mid)\n      ma=ma|query2(x+x+1,ll,rr);\n    pushup(x);\n    return ma;\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for (long long i=2;i<=281;i++)\n    {\n        if (check(i))\n        {\n            p[w]=i;//\u9884\u5904\u7406\u51fa\u524d60\u4e2a\u7d20\u6570\n            w++;\n        }\n    }\n    for (int i=0;i<w;i++)\n      in[i]=inv(p[i]);//\u53ca\u5176\u9006\u5143\n    build(1,1,100000);\n    while (n--)\n    {\n        long long a,b,c;\n        scanf(\"%lld%lld%lld\",&a,&b,&c);\n        if (a==0)\n        {\n            long long pro,m;\n            long long tot=1;\n            pro=query1(1,b,c);\n            m=query2(1,b,c);\n            for (long long i=0;i<w;i++)\n            {\n                if ((m>>i)&1)\n                  tot=(tot*(p[i]-1)%mod)*in[i]%mod;//\u6b27\u62c9\u51fd\u6570\u901a\u9879\u516c\u5f0f\n            }\n            printf(\"%lld\\n\",(pro*tot)%mod);\n        }\n        else\n        {\n            change(1,b,c);\n        }\n    }\n}\n```\n",
        "postTime": 1564883910,
        "uid": 67998,
        "name": "SevenDawns",
        "ccfLevel": 9,
        "title": "P4140"
    },
    {
        "content": "\u9898\u76ee\u7684\u610f\u601d\u5176\u5b9e\u5c31\u662f\uff1a\n\n** \u6c42\u533a\u95f4\u79ef\u7684\u6b27\u62c9\u51fd\u6570 **\n\n\u6b27\u62c9\u51fd\u6570\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u4e0b\u9762\u7ed9\u51fa\u516c\u5f0f\uff1a\n\n$\\phi(n)=n(1-\\frac{1}{p1})(1-\\frac{1}{p2})...(1-\\frac{1}{pi})$\n\n\u5176\u4e2dpi\u8868\u793an\u7684\u5404\u4e2a\u4e0d\u540c\u7684\u8d28\u56e0\u5b50\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u6700\u591a\u670960\u4e2a\u8d28\u6570\uff0c\n\n\u6240\u4ee5\u53ea\u8981\u628a60\u4e2a\u8d28\u6570\u538b\u5230\n\u4e00\u4e2a```long long```\u7684\u6570\u7ec4\u72b6\u6001\u91cc\u5373\u53ef\n\n\u7136\u540e\u7528\u5355\u70b9\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u79ef\uff0c\u8d28\u56e0\u5b50\u5373\u53ef\u3002\n\n\u6700\u540e\u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u8f93\u51fa\u5c31\u597d\u4e86\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n//\u6284\u4ee3\u7801\u8005\u4f1a\u540e\u6094\u7684\u3002\n//\u4f60\u6700\u597d\u81ea\u5df1\u63a8\u8d28\u6570\u548c\u9006\u5143\u8868\u54fc\u54fc\u54fc\u54fc\n#include<cstdio>\n#define mod 19960883\nusing namespace std;\nconst long long prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,199,199,211,223,227,229,233,239,241,251,257,263,269,270,274,280,289};\n//\u6253\u4e0b\u4e86\u524d60\u4e2a\u8d28\u6570\nconst long long ny[]={9980980,1323998,11977196,8555140,5444180,1535538,10568114,14708837,3471651,11701858,17386252,1618540,16066970,2321162,18263100,16948862,12518538,15380552,10725847,1686929,13399146,17182475,120212397,15924736,13582387,395287,6395590,15857658,16299242,6359573,3300802,187412312,6702567,10914471,16210746,11765678,5340151,18247466,7712338,8077107,11932588,6506948,1985748,6619521,5877135,4413707,9744480,10115270,14597757,16475182,18334191,5011379,18885205,7555336,621385,11309266,12170137,12006660,18304499,11153142};\n//\u6253\u4e0b\u4e86\u524d60\u4e2a\u8d28\u6570\u7684\u9006\u5143\nint n,flag,x,y;\nlong long rar[1000005],tree[1000005];\nvoid build(int l,int r,int root){\n    rar[root]=2;\n    if (l==r){\n        tree[root]=3;\n        return;\n    }\n    int mid=l+r>>1;\n    build(l,mid,root<<1);build(mid+1,r,root<<1|1);\n    tree[root]=tree[root<<1]*tree[root<<1|1]%mod;\n}\nvoid update(int l,int r,int root,int key,int v){\n    if (l==r){\n        long long now=0;\n        for (int i=0;i<60;i++) if (!(v%prime[i])) now|=(1ll<<i);\n        rar[root]=now;tree[root]=v;\n        return;\n    }\n    int mid=l+r>>1;\n    if (key<=mid) update(l,mid,root<<1,key,v);else update(mid+1,r,root<<1|1,key,v);\n    rar[root]=rar[root<<1]|rar[root<<1|1];\n    tree[root]=tree[root<<1]*tree[root<<1|1]%mod;\n}\nlong long query(int l,int r,int root,int L,int R,long long &x){\n    if (l>R||r<L||l>r) return 0;\n    if (L<=l&&r<=R){\n        x=x*tree[root]%mod;\n        return rar[root];\n    }\n    int mid=l+r>>1;\n    return query(l,mid,root<<1,L,R,x)|query(mid+1,r,root<<1|1,L,R,x);\n}\nlong long calc(long long x,long long y){\n    long long ans=x;\n    for (int i=0;i<60;i++) if (y&(1ll<<i)) ans=ans*ny[i]%mod*(prime[i]-1)%mod;\n    return ans;\n}\n//\u5229\u7528\u516c\u5f0f\u6c42\u89e3\nint main(){\n    scanf(\"%d\",&n);\n    build(1,100000,1);\n    //\u7ebf\u6bb5\u6811\u64cd\u4f5c\n    for (int i=1;i<=n;i++){\n        scanf(\"%d%d%d\",&flag,&x,&y);\n        if (flag) update(1,100000,1,x,y);else{\n            long long Calc=1;\n            long long sum=query(1,100000,1,x,y,Calc);\n            printf(\"%lld\\n\",calc(Calc,sum));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1534481980,
        "uid": 99722,
        "name": "\u4e8c\u54c8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6309\u7167\u9898\u610f\uff0c\u628a\u524d$60$\u4e2a\u7d20\u6570\u6253\u51fa\u6765$[2$ $-$ $281]$\u3002\n\n\u56e0\u4e3a\u53ea\u6709$60$\u4e2a\uff0c\u518d\u52a0\u4e0a\u672c\u5b9d\u5b9d\u6781\u5176\u61d2\u5f97\u5199\u7ebf\u6027\u7b5b\u4e8e\u662f\u6bcf\u4e00\u4e2a\u90fd$O(\\sqrt{n})$\u66b4\u529b\u7b5b\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n;\nint main()\n{\n//\tfreopen(\"1.txt\",\"w\",stdout);\n\tprintf(\"0\");//\u683c\u5f0f\u95ee\u9898\uff0c\u4ee5\u81ea\u5df1\u7231\u597d\u7a0d\u4f5c\u66f4\u6539\u3002\n\tfor(int i=2;i<=281;i++)\n\t{\n\t\tfor(int j=2;j*j<=i;j++)\n\t\t  if(i%j==0) goto rp;\n\t\tprintf(\",%d\",i),n++;\n\t\trp:; \n\t}\n\treturn 0;\n}\n```\n\n\u5982\u679c\u6211\u4eec\u7528$prime[i]$\u8868\u793a\u7b2ci\u4e2a\u7d20\u6570\u3002\n\u7b5b\u51fa\u6765\u662f\u8fd9\u6837\u7684\uff1a\n```cpp\nint prime[61]={\n\t0,2,3,5,7,11,13,17,19,\n\t23,29,31,37,41,43,47,\n\t53,59,61,67,71,73,79,\n\t83,89,97,101,103,107,\n\t109,113,127,131,137,\n\t139,149,151,157,163,\n\t167,173,179,181,191,\n\t193,197,199,211,223,\n\t227,229,233,239,241,\n\t251,257,263,269,271,\n\t277,281\n};\n\n```\n\n---\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u770b \u6e05\u70b9\u5b58\u6b3e \u64cd\u4f5c\uff0c\n\n\u95ee$[1,product]$\u91cc\uff0c\u6709\u591a\u5c11\u4e2a$num$\u6ee1\u8db3\uff1a\n\n$$num*x+product*y=1$$\n\n\u8fd9\uff0c\u4e0e\u6211\u4eec \u7d20\u6570\u7684\u6027\u8d28 \u597d\u50cf\u554a\u3002\n\n\u8fd9\u5c31\u662f $num*x\u22611$ $ $ $ $ $(mod$ $ $ $product)$\n\n\u4e5f\u5c31\u662f $gcd(num$ $,$ $product)$ $=$ $1$\n\n\u55ef\uff0c\u597d\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff1a\n\n\u6c42 $[1,product]$ \u91cc\uff0c\u6709\u591a\u5c11\u4e2a $num$ \u4e0e $product$ \u4e92\u8d28\u3002\n\n\u4e5f\u5c31\u662f $\\varphi(product)$ \u7b49\u4e8e\u591a\u5c11\u3002\n\n\u4e4b\u540e\uff0c\u6839\u636e\u6b27\u62c9\u51fd\u6570\u7684\u901a\u5f0f\u3002\n\n$$\\varphi(n)=n*\\prod_{p_i|n}(1-\\frac{1}{p_i})=n*\\prod_{p_i|n}\\frac{p_i-1}{p_i}$$\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u53c8\u8ba9 $mod$ $ $ $p$\n\n\u6240\u4ee5\uff0c\n\n\u518d\u7ebf\u6027\u63a8\u4e00\u4e0b\u9006\u5143,\n\n\u6c42\u89e3\u5373\u53ef\u3002\n\n---\n\n$ps:$ \u5982\u679c\u8138\u9ed1\u88ab\u5361\u5e38\u6570\u4e86\u7684\u8bdd\uff0c\u53ef\u4ee5\u628a $[1-281]$ \u7684\u9006\u5143\u6253\u8868\u3002\n\n\u5927\u6982\u4ee3\u7801\u662f\u8fd9\u6837\u7684\uff1a\n```cpp\n    pni[1]=1;\n\tfor(int i=2;i<=281;i++)\n\tpni[i]=(long long)(mod-mod/i)*pni[mod%i]%mod;\n```\n\n---\n\n\u4e0b\u9762\uff0c\u5c31\u662f\u533a\u95f4\u7ef4\u62a4\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\u4e86\uff0c~~\uff08\u5728\u51fa\u9898\u4eba\u773c\u91cc\uff09~~\u4ed6\u4eec\u7684\u52a0\u6cd5\u76f8\u5f53\u4e8e\u6211\u4eec\u7684\u4e58\u6cd5\u3002\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u533a\u95f4 $[a,b]$ \u7684 \u201c\u548c\u201d \u8bb0\u4e3a $product$\n\n\u66f4\u6539\u7684\u662f\u67d0\u4e2a\u70b9\uff08\u94f6\u884c\uff09$b_{i}$ \u7684\u5b58\u6b3e\n\n### \u663e\u7136\u7684\u7ebf\u6bb5\u6811\u4fdd\u5b58\u6bcf\u6bb5\u533a\u95f4\u51fa\u73b0\u7684\u8d28\u56e0\u5b50\u3002\n\n\u770b\u9898\u9762\uff0c\u7531\u4e8e\u6700\u591a\u51fa\u73b0$60$\u4e2a\u8d28\u6570\uff0c\u6211\u4eec\u7528\u4e00\u4e2a $long$ $ $ $long$ \u7684\u6bcf\u4e00\u4f4d\u8868\u793a\u4e00\u4e2a\u8d28\u6570\uff0c\u7136\u540e\u7528\u6216\u8fd0\u7b97$xor$\u5373\u53ef\u5b9e\u73b0 \u201c\u52a0\u548c\u201d \u76f8\u4e58\u64cd\u4f5c\u3002\n\n\u7136\u540e\u5c31\u2026\u2026\n\n\u597d\u597d\u7684\u5199\u4ee3\u7801\u5427\u3002\n\n\u4e0d\u8fc7\u2026\u2026\n\n\u6a21\u6570\u4e3a\u5565\u4e0d\u662f $19260817$ \u6216\u8005\u662f $998244353$ \u6216 $64123$ \u5462\u2026\u2026\n\n---\n\n$ps:$ \u4e00\u5b9a\u8981\u770b\u770b\u7ebf\u6bb5\u6811\u6bcf\u6b21\u7684\u533a\u95f4\u8fb9\u4e0a\u5224\u5b9a $!$ $!$ $!$\n\n\u672c\u5b9d\u5b9d\u8c03\u4e86\u4e24\u5929 $\u2026\u2026$\n\n\u59d4\u5c48\u5df4\u5df4\u3002\u3002\u3002\n\n---\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define mod 19961993\n\nconst int prime[61]={\n\t0,2,3,5,7,11,13,17,19,\n\t23,29,31,37,41,43,47,\n\t53,59,61,67,71,73,79,\n\t83,89,97,101,103,107,\n\t109,113,127,131,137,\n\t139,149,151,157,163,\n\t167,173,179,181,191,\n\t193,197,199,211,223,\n\t227,229,233,239,241,\n\t251,257,263,269,271,\n\t277,281\n};//\u8bb0\u5f55\u8d28\u6570\u3002 \n\nint pni[300];\n\n\t//\u7ebf\u6bb5\u6811\u3002\n\tstruct data{\n\t\tlong long sum;//\u533a\u95f4\uff08\u548c\uff09\u4e58\u79ef \n\t\tlong long p;//\u5305\u542b\u54ea\u4e9b\u7d20\u6570\u3002\u7b2ci\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5982\u679c\u662f1\uff0c\u5219\u6709prime[i]\u8fd9\u4e2a\u7d20\u6570,\u4ece1\u5f00\u59cb\u3002 \n\t}point[400010];\n\tdata ans;//\u8bb0\u5f55\u67e5\u8be2\u7b54\u6848\u3002\n\t\n\tvoid built(int l,int r,int o)\n\t{\n\t\tif(l==r) {point[o].sum=3;point[o].p=2;return ;}\n\t\tint mid=(l+r)/2;\n\t\tbuilt(l,mid,o*2);\n\t\tbuilt(mid+1,r,o*2+1);\n\t\t\n\t//\tprintf(\"%d %d %d %d\\n\",l,r,o,mid);\n\t\t\n\t\tpoint[o].sum=point[o*2].sum*point[o*2+1].sum%mod;\n\t\tpoint[o].p=2;\n\t// \tprintf(\"%d %d\\n\",point[o].sum,point[o].p);\n\t}\n\t\n\tvoid chang(int l,int r,int o,const int t,const int k)//\u7b2ct\u4e2a\u70b9\u6539\u4e3ak \n\t{\n//\t\tprintf(\"%d %d %d %d %d\\n\",&l,&r,&o,&t,&k);\n\t\tif(l==r){\n\t\t\tpoint[o].sum=k;\n\t\t\tlong long p=0;\n\t\t\tfor(int i=1;i<=60;i++){\n\t\t\t\tif((k%prime[i])==0) p|=1LL<<(i-1);\n\t\t\t\tpoint[o].p=p;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)/2;\n\t\tif(t<=mid) chang(l,mid,o*2,t,k);\n\t\telse chang(mid+1,r,o*2+1,t,k);\n\t\tpoint[o].sum=point[o*2].sum*point[o*2+1].sum%mod;\n\t\tpoint[o].p=point[o*2].p|point[o*2+1].p;\n\t}\n\t\n\tvoid quest(int l,int r,int o,int l1,int r1)//\u67e5\u8be2L\u5230R\u3002 \n\t{\n\t\tif(l1<=l&&r<=r1){\n\t\t\tans.sum=ans.sum*point[o].sum%mod;\n\t\t\tans.p|=point[o].p;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)/2;\n\t\tif(l1<=mid) quest(l,mid,o*2,l1,r1);\n\t\tif(mid<r1)  quest(mid+1,r,o*2+1,l1,r1);\n\t} \n//\tvoid debug()\n//\t{\n//\t\tfor(int i=1;i<=100;i++)\n//\t\tprintf(\"%d %d %d\\n\",i,point[i].p,point[i].sum);\n//\t}\n\nint main()\n{\n\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tbuilt(1,100000,1);\n\n\tpni[1]=1;\n\tfor(int i=2;i<=281;i++)\n\tpni[i]=(long long)(mod-mod/i)*pni[mod%i]%mod;\n\t//\u7ebf\u6027\u7b5b\u9006\u5143 \n\n\tint tt;\n\tscanf(\"%d\",&tt);\n\twhile(tt--)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\n\t\tif(x)\n\t\t{\n\t\tint t,k;\n\t\tscanf(\"%d%d\",&t,&k);\n\t\tchang(1,100000,1,t,k);\n\t\t}\n\t\n\t\telse\n\t\t{\n\t\t\tint l1,r1;\n\t\t\tans.sum=1;\n\t\t\tans.p=0;\n\t\t\tscanf(\"%d%d\",&l1,&r1);\n\t\t\tquest(1,100000,1,l1,r1);\n\t\t\n\t\t\tlong long f=ans.sum;\n\t\t\tfor(int i=1;i<=60;i++)//\u8ba1\u7b97\u03c6 \n\t\t\tif(ans.p&(1LL<<(i-1))) f=f*(prime[i]-1)%mod,f=f*pni[prime[i]]%mod;\n\t\t\tprintf(\"%d\\n\",(int)f);\n\t\t\n\t\t}\n//\t\tdebug();\n\t}\n\treturn 0;//\u7a0b\u5e8f\u62dc\u62dc\n}\n\n```\n",
        "postTime": 1525424344,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u9053\u8bed\u6587\u9605\u8bfb\u9898\uff0c\u63cf\u8ff0\u9700\u8981\u597d\u597d\u770b\u4e00\u4e0b\u624d\u80fd\u770b\u61c2\u3002\n\n\u6ce8\u610f\u5230\u67e5\u8be2\u7684\u662f\u6b27\u62c9\u51fd\u6570\uff0c\u6211\u4eec\u5982\u679c\u77e5\u9053\u4e58\u79ef\u7684\u7d20\u56e0\u6570\u5206\u89e3\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u516c\u5f0f\u8f7b\u677e\u641e\u51fa\u6765\u3002\uff08\u6c42\u7684\u65f6\u5019\u9700\u8981\u5361\u901f\u7c73\uff09\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u4e00\u6bb5\u6570\u7684\u79ef\u7684\u7d20\u56e0\u5b50\u5206\u89e3\u3002\u6ce8\u610f\u5230\u5b83\u4eec\u7684\u7d20\u56e0\u5b50\u53ea\u6709\u81f3\u591a60\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f0060\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5bf9\u6bcf\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u8fd9\u4e2a\u7d20\u6570\u5728\u6bcf\u4e2a\u6570\u4e2d\u7684\u6b21\u6570\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u533a\u95f4\u6c42\u548c\u5c31\u597d\u3002\n\n\u6ce8\u610f\u521d\u59cb\u5168\u4e3a3\u3002\n\n\u7d20\u6570\u7684\u8bdd\uff0c\u66b4\u6c42\u5c31\u884c\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\n#define mod 19961993\n#define maxn 100233\nLL p[62],tt=0;\nLL bit[62][maxn];\nLL num[maxn];\nLL lowbit(LL a) {return (-a)&a;}\nvoid add(LL x,LL a,LL b) {\n\tfor(;a<=100000;a+=lowbit(a))\n\tbit[x][a]+=b;\n}\nLL qu(LL x,LL a) {\n\tLL ans=0;\n\tfor(;a;a-=lowbit(a)) \n\tans+=bit[x][a];\n\treturn ans;\n}\nLL kasumi(LL a,LL b) {\n\tLL ans=1;\n\twhile(b) {\n\t\tif(b&1) ans=ans*a%mod;\n\t\ta=a*a%mod;\n\t\tb/=2;\n\t}\n\treturn ans;\n}\nLL gao(LL a,LL b) {\n    LL ret=0;\n    while(a%p[b]==0) {\n\t\ta/=p[b];\n\t\tret++;\n\t}\n\treturn ret;\n}\nint main(){\n\tLL m,n=100000,a,b,c,i,j,k,op,ans;\n\tfor(a=2;a<=281;a++) {\n\t\tj=0;\n\t\tfor(b=2;b<a;b++) \n\t\tif(a%b==0) j=1;\n\t\tif(j==0) p[++tt]=a;\n\t}\n\tfor(a=1;a<=n;a++) add(2,a,1);\n\tfor(a=1;a<=n;a++) num[a]=3;\n\tscanf(\"%lld\",&m);\n\tfor(a=1;a<=m;a++) {\n\t\tscanf(\"%lld%lld%lld\",&op,&i,&j);\n\t\tif(op==0) {\n\t\t\tans=1;\n\t\t\tfor(b=1;b<=60;b++) {\n\t\t\t\tc=qu(b,j)-qu(b,i-1);\n\t\t\t\tif(c>0) {\n\t\t\t\t\tans*=kasumi(p[b],c-1);\n\t\t\t\t\tans%=mod;\n\t\t\t\t\tans*=(p[b]-1);\n\t\t\t\t\tans%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t\telse {\n\t\t\tfor(b=1;b<=60;b++)\n\t\t\tif(c=gao(num[i],b)) add(b,i,-c);\n\t\t\tfor(b=1;b<=60;b++)\n\t\t\tif(c=gao(j,b)) add(b,i,c);\n\t\t\tnum[i]=j;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523536719,
        "uid": 24608,
        "name": "winxp_qwq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "# \u94fe\u63a5\uff1a\n\n[\u9898\u76ee](https://www.luogu.com.cn/problem/P4140)\n\n[\u535a\u5ba2\u56ed](https://www.cnblogs.com/GJY-JURUO/p/14316453.html)\n\n# \u9898\u76ee\u5927\u610f\uff1a\n\n\u6709 $10^5$ \u4e2a\u6570\uff0c\u4e00\u5f00\u59cb\u90fd\u662f $3$\uff0c\u73b0\u5728\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1. \u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u6c42\u5b83\u7684\u79ef\u7684\u6b27\u62c9\u51fd\u6570\u503c\u3002\n\n2. \u5c06\u7b2c $x$ \u4e2a\u6570\u6539\u4e3a $y$\u3002\n\n\u7ed3\u679c\u5bf9 $19961993$ \u53d6\u6a21\u3002\n\n# \u6b63\u6587\uff1a\n\n\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u600e\u4e48\u6c42\u51fa $\\varphi(product)$\u3002\n\n\u9898\u76ee\u4e2d\u7279\u610f\u63d0\u793a\u4e86\uff1a\n\n>\u8fd9\u91cc\u53d1\u884c\u7684\u8f6f\u59b9\u9762\u989d\u662f\u6700\u5c0f\u7684 $60$ \u4e2a\u7d20\u6570 $(p_1=2,p_2=3,\\cdots,p_{60}=281)$\uff0c\u4efb\u4f55\u4eba\u7684\u8d22\u4ea7\u90fd\u53ea\u80fd\u7531\u8fd9 $60$ \u4e2a\u57fa\u672c\u9762\u989d\u8868\u793a\u3002\n\n\u4e5f\u5c31\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u8d28\u56e0\u5b50\u7684\u90a3\u4e2a\u516c\u5f0f\u6c42\u89e3\uff1a\n\n$$\\varphi(n)=n\\prod_{i|n}\\left(1-\\frac{1}{p_i}\\right)$$\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u79ef\u6c42\u89e3\u51fa $product$\uff0c\u4f46\u662f\u5b83\u7684\u8d28\u56e0\u6570\u5462\uff1f\n\n\u4ecd\u7136\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u56e0\u4e3a\u81f3\u591a $60$ \u4e2a\uff0c\u6211\u4eec\u5c31\u80fd\u7528\u72b6\u538b\u4e86\u3002\n\n\u5982\u679c\u5148\u628a\u8d28\u6570\u548c\u9006\u5143\u9884\u5904\u7406\u597d\uff0c\u90a3\u4e48\u6c42\u89e3 $\\varphi$ \u503c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(60)$ \u4e86\u3002\n\n# \u4ee3\u7801\uff1a\n\n```cpp\nconst ll mod = 19961993;\nconst ll pri[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\nconst ll inv[] = {9980997,6653998,11977196,8555140,5444180,1535538,10568114,14708837,3471651,11701858,17386252,1618540,16066970,2321162,18263100,16948862,12518538,15380552,10725847,1686929,13399146,17182475,12025297,15924736,13582387,395287,6395590,15857658,16299242,6359573,3300802,18742940,6702567,10914471,16210746,11765678,5340151,18247466,7769638,8077107,11932588,6506948,1985748,6619521,5877135,4413707,9744480,10115270,14597757,16475182,18334191,5011379,18885205,7555336,621385,11309266,12170137,12006660,18304499,11153142};\n\nint m;\nint n = 100000;\n\nstruct SegmentTree\n{\n\tstruct Seg\n\t{\n\t\tint l, r;\n\t\tll val, pri;\n\t}t[N << 2];\n\t\n\tvoid build (int p, int l, int r)\n\t{\n\t\tt[p].l = l, t[p].r = r;\n\t\tif (l == r)\n\t\t{\n\t\t\tt[p].val = 3, t[p].pri = 2;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = t[p].l + t[p].r >> 1;\n\t\tbuild (p << 1, l, mid);\n\t\tbuild (p << 1 | 1, mid + 1, r);\n\t\tt[p].val = t[p << 1].val * t[p << 1 | 1].val % mod;\n\t\tt[p].pri = t[p << 1].pri | t[p << 1 | 1].pri;\n\t}\n\tvoid change (int p, int x, ll val, ll P)\n\t{\n\t\tif (t[p].l == t[p].r)\n\t\t{\n\t\t\tt[p].val = val, t[p].pri = P;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = t[p].l + t[p].r >> 1;\n\t\tif (t[p].l <= x && x <= mid) change (p << 1, x, val, P);\n\t\tif (mid + 1 <= x && x <= t[p].r) change (p << 1 | 1, x, val, P);\n\t\tt[p].val = t[p << 1].val * t[p << 1 | 1].val % mod;\n\t\tt[p].pri = t[p << 1].pri | t[p << 1 | 1].pri;\n\t}\n\t\n\tll query (int p, int l, int r, int opt)\n\t{\n\t\tif (l <= t[p].l && t[p].r <= r)\n\t\t\treturn opt? t[p].val: t[p].pri;\n\t\tint mid = t[p].l + t[p].r >> 1;\n\t\tll ans = opt;\n\t\tif (l <= mid) ans = opt? ans * query(p << 1, l, r, opt) % mod: ans | query(p << 1, l, r, opt);\n\t\tif (mid < r) ans = opt? ans * query(p << 1 | 1, l, r, opt) % mod: ans | query(p << 1 | 1, l, r, opt);\n\t\treturn ans;\n\t}\n}t;\n\nll con(ll x)\n{\n\tll tmp = 0;\n\tfor (ll i = 0; i < 60; i++)\n\t\tif(!(x % pri[i])) tmp |= (1ll << i);\n\treturn tmp;\n}\n\nint main()\n{\n\tscanf (\"%d\", &m);\n\tt.build(1, 1, n);\n\twhile (m--)\n\t{\n\t\tint opt;\n\t\tll x, y;\n\t\tscanf (\"%d%lld%lld\", &opt, &x, &y);\n\t\tif (opt == 1) t.change(1, (int)x, y, con(y));\n\t\telse \n\t\t{\n\t\t\tll tmp = t.query(1, (int)x, (int) y, 0);\n\t\t\tll ans = t.query(1, (int)x, (int) y, 1);\n\t\t\tfor (ll i = 0; i < 60; i++)\n\t\t\t\tif(tmp & (1ll << i)) \n\t\t\t\t\tans = (ans * inv[i]) % mod, ans = ans * (pri[i] - 1) % mod;\n\t\t\tprintf(\"%lld\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1611359496,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u867d\u7136 $ntf$ \u5b66\u957f\u5632\u8bbd\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u9053\u9898\u5f88\u9002\u5408\u6211(\u83dc\u9e21)\u4e86\u89e3\u7ebf\u6bb5\u6811\u7684\u6709\u8da3\u7528\u6cd5  \n\u9996\u5148\u7ffb\u8bd1\u9898\u9762\uff0c\u5c31\u662f\u6bcf\u6b21\u8fdb\u884c\u4e00\u4e2a\u64cd\u4f5c\u2014\u2014\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\u5185\u6240\u6709\u6570\u7684\u4e58\u79ef\u7684\u6b27\u62c9\u51fd\u6570\u6216\u8005\u4fee\u6539\u6570\u5217\u4e2d\u7684\u4e00\u4e2a\u6570  \n\u7531\u4e8e\u6bcf\u4e2a\u6570\u4e0a\u9650\u662f$10^6$\uff0c\u66b4\u529b\u6c42\u5b8c\u4e00\u4e2a\u533a\u95f4\u7684\u4e58\u79ef\u518d\u5957\u6b27\u62c9\u51fd\u6570\u662f\u4e0d\u53ef\u80fd\u7684\n\u9996\u5148\u4e86\u89e3\u5148\u6b27\u62c9\u51fd\u6570\u7684\u516c\u5f0f\n$$\u03c6(x)=x*\\prod_{i|x}^{}{(1-\\frac{1}{i})}$$\n($i$\u4e3a\u8d28\u6570\uff0c\u6c99\u96d5\u6d1b\u8c37$markdown$\u7206\u70b8)  \n\u770b\u5230\u8fd9\u4e2a\u516c\u5f0f\uff0c\u53d1\u73b0\u6211\u4eec\u5176\u5b9e\u6ca1\u6709\u5fc5\u8981\u6c42\u51fa\u533a\u95f4\u6570\u7684\u4e58\u79ef\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u4e58\u79ef\u91cc\u4f1a\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u8d28\u6570\u5c31\u53ef\u4ee5\u4e86  \n\u7136\u540e\u6bcf\u4e2a\u6570\u4e0d\u8d85\u8fc7$10^6$\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u7684\u8d28\u6570\u4e0d\u8d85\u8fc7$60$\u4e2a\uff0c\u53ef\u4ee5\u72b6\u6001\u538b\u7f29  \n\u7528\u4e00\u4e2a$f$\u6570\u7ec4\u8bb0\u5f55\u53d6\u6a21\u540e\u7684\u533a\u95f4\u4e58\u79ef\uff0c\u7528\u4e00\u4e2a$ff$\u8bb0\u5f55\u533a\u95f4\u5185\u51fa\u73b0\u7684\u8d28\u6570\u79cd\u7c7b\u7684\u72b6\u538b\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u7684\u8fd9\u4e24\u4e2a\u503c\u5c31\u80fd\u6c42\u51fa\u8fd9\u4e2a\u533a\u95f4\u4e58\u79ef\u7684\u6b27\u62c9\u51fd\u6570  \n\u4e0b\u9762\u8bf4\u4e0b\u5177\u4f53\u8fc7\u7a0b\uff0c\u4e0d\u60f3\u5267\u900f\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5f00\u59cb\u6572\u4ee3\u7801\u4e86\n* 1\u3001\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u5206\u89e3\u51fa\u8fd9\u4e2a\u6570\u7684\u6bcf\u4e2a\u8d28\u56e0\u6570\uff0c\u5e76\u72b6\u538b\n* 2\u3001\u5bf9\u4e8e\u67e5\u8be2\uff0c\u9996\u5148\u6c42\u51fa\u533a\u95f4\u79ef(\u516c\u5f0f\u91cc\u7684x)\n* 3\u3001\u67e5\u8be2\u8fd9\u4e2a\u533a\u95f4\u8d28\u56e0\u6570\u79cd\u7c7b\u7684\u72b6\u538b\u6570\u5b57\uff0c\u8fd8\u539f\u51fa\u6709\u54ea\u4e9b\u8d28\u56e0\u6570\n* 4\u3001\u7528\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u6c42\u51fa\u7684\u503c\u76f4\u63a5\u6c42\u6b27\u62c9\u51fd\u6570\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(60*n*log(len))$  \n\u4e0b\u9762AC\u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#define mid ((l+r)/2)\n#define ll long long\nusing namespace std;\nconst ll P[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\nconst ll inv[]={9980997,6653998,11977196,8555140,5444180,1535538,10568114,14708837,3471651,11701858,17386252,1618540,16066970,2321162,18263100,16948862,12518538,15380552,10725847,1686929,13399146,17182475,12025297,15924736,13582387,395287,6395590,15857658,16299242,6359573,3300802,18742940,6702567,10914471,16210746,11765678,5340151,18247466,7769638,8077107,11932588,6506948,1985748,6619521,5877135,4413707,9744480,10115270,14597757,16475182,18334191,5011379,18885205,7555336,621385,11309266,12170137,12006660,18304499,11153142};\nconst ll mod=19961993;\nll n,f[8000010],ff[8000010];\n\nvoid build(ll l,ll r,ll o){\n\tif(l==r){\n\t\tf[o]=2,ff[o]=3;\n\t\treturn ;\n\t}\n\tbuild(l,mid,o*2);\n\tbuild(mid+1,r,o*2+1);\n\tf[o]=f[o*2]|f[o*2+1];\n\tff[o]=ff[o*2]*ff[o*2+1]%mod;\n}\n\nvoid modify(ll l,ll r,ll o,ll x,ll d,ll d2){\n\tif(l==r){\n\t\tf[o]=d,ff[o]=d2;\n\t\treturn ;\n\t}\n\tif(x<=mid)modify(l,mid,o*2,x,d,d2);\n\telse modify(mid+1,r,o*2+1,x,d,d2);\n\tf[o]=f[o*2]|f[o*2+1];\n\tff[o]=ff[o*2]*ff[o*2+1]%mod;\n}\n\nll Query(ll l,ll r,ll o,ll i,ll j){\n\tif(i<=l&&r<=j){\n\t\treturn ff[o];\n\t}\n\tll ret=1;\n\tif(i<=mid)ret=ret*Query(l,mid,o*2,i,j)%mod;\n\tif(mid<j)ret=ret*Query(mid+1,r,o*2+1,i,j)%mod;\n\treturn ret;\n}\n\nll query(ll l,ll r,ll o,ll i,ll j){\n\tif(i<=l&&r<=j){\n\t\treturn f[o];\n\t}\n\tll ret=0;\n\tif(i<=mid)ret|=query(l,mid,o*2,i,j);\n\tif(mid<j)ret|=query(mid+1,r,o*2+1,i,j);\n\treturn ret;\n}\n\nll pre_work(ll x){\n\tll tmp=0;\n\tfor(ll i=0;i<60;i++){\n\t\tif(x%P[i]==0)tmp|=(1ll<<i);\n\t}\n\treturn tmp;\n}\n\nint main(){\n\tcin>>n;\n\tfor(ll i=1;i<=100000;i++)modify(1,100000,1,i,2,3);\n\twhile(n--){\n\t\tll opt,a1,a2;\n\t\tscanf(\"%lld%lld%lld\",&opt,&a1,&a2);\n\t\tif(opt==1)modify(1,100000,1,a1,pre_work(a2),a2);\n\t\telse {\n\t\t\tll tmp=query(1,100000,1,a1,a2);\n\t\t\tll ans=Query(1,100000,1,a1,a2);\n\t\t\tfor(ll i=0,a1;i<60;i++){\n\t\t\t\tif(tmp&(1ll<<i)){\n\t\t\t\t\tans=(ans*inv[i])%mod,ans=(ans*(P[i]-1))%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t}\n\t}\n}\n```",
        "postTime": 1606399267,
        "uid": 251882,
        "name": "\u849f\u84bb\u4e01",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u76ee\u6211 debug \u7528\u4e86 15 \u5929\u3002\uff08\u6beb\u4e0d\u5938\u5f20\uff09\n\n## \u601d\u8def\u8bb2\u89e3\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a$10^5$ \u3002\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\u590d\u6742\u5ea6\uff1f\n\n\u6ca1\u9519\uff0c$O(nlogn)$ \uff01\n\n\u597d\uff0c\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u8bfb\u8bfb\u9898\u5427\u3002$number \\times x\\ +\\ product \\times\\ y\\ =1$ \uff0c\u8bf4\u660e $\\gcd(number,product)=1$ .\n\n\u6240\u4ee5\uff0c\u95ee\u9898\u8f6c\u5316\u6210\uff1a\n\n- \u4e00\u5806\u6570\uff0c\u5168\u662f3 \u3002\n- \u64cd\u4f5c 1 \uff1a\u4fee\u6539\u4e00\u4e2a\u6570\u3002**\uff08\u5355\u70b9\u4fee\u6539\uff09**\n- \u64cd\u4f5c 2 \uff1a\u67e5\u51fa\u8fde\u7eed\u7684\u51e0\u4e2a\u6570\u7684\u4e58\u79ef $p$ \uff0c\u6c42\u51fa $[1,p]$ \u4e2d $\\gcd(x,p)=1$ \u7684 $x$ \u3002**\uff08\u533a\u95f4\u67e5\u8be2\uff09**\n\n\u8ba9\u6211\u4eec\u6765\u627e\u627e $log$ \u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u4e2d\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u7b97\u6cd5\uff1a\u7ebf\u6bb5\u6811\uff01\n\n\u7ebf\u6bb5\u6811\u662f\u4e00\u4e2a\u7ec6\u8282\u8d3c\u591a\u7684\u7b97\u6cd5\uff08\u5426\u5219 15 \u5929\u75db\u82e6\u7684 debug \u4e4b\u8def\u600e\u4e48\u51fa\u6765\u2026\u2026\uff09\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c 2 \uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6b27\u62c9\u51fd\u6570\u3002\n$$\n\u03c6(x)=(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})\u2026\u2026(1-\\frac{1}{p_k}), x=p_1^{a_1}\\times p_2^{a_2}\\times \u2026\u2026 \\times p_k^{a_k}\n$$\n\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6c42 $\u03c6(p)$ .\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u6bcf\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\u3002\u6700\u591a $60$ \u4e2a\u4e0d\u540c\u7684\uff0c\u53ef\u4ee5\u7528 $\\operatorname{long long}$ \u641e\u5b9a\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u9996\u5148\uff0c\u5148\u8bb2\u51e0\u4e2a\u82b1\u8d39\u4e86\u6211\u81f3\u5c11 1 \u5929\u624d\u8c03\u51fa\u6765\u7684 bug \uff1a\n\n1. \u4e00\u5f00\u59cb build \u65f6\u9700\u8981\u4ece $1$ \u5230 $100000$ \u800c\u4e0d\u662f $1$ \u5230 $n$ \u3002\n\n2.  \u79fb\u4f4d\u8981\u7528 `1ll<<x` \u4e0d\u80fd\u7528 `1<<x` \u3002\n\n\u63a5\u7740\uff0c\u9001\u4e0a\u8f83\u4e3a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define P 19961993\nconst int maxn=100005;\nconst int pri[70]={\u8868\u683c\u5185\u5bb9\u88ab\u548c\u8c10\u4e86\uff0c\u8bf7\u81ea\u5df1\u6253\u524d60\u4e2a\u7d20\u6570};\nconst int inv[70]={\u8868\u683c\u5185\u5bb9\u88ab\u548c\u8c10\u4e86\uff0c\u8bf7\u6253\u524d60\u4e2a\u7d20\u6570\u7684\u9006\u5143};\nint pro[maxn<<2],a[maxn];\nlong long val[maxn<<2];\nint n=100000;\nvoid push_up(int rt)\n{\n\tpro[rt]=1ll*pro[rt*2]*pro[rt*2+1]%P;\n\tval[rt]=val[rt*2]|val[rt*2+1];\n}\nvoid build(int l,int r,int rt,int x,int v,long long f)\n{\n//\tprintf(\"%d %d %d %d\\n\",l,r,rt,mid);\n\tif(l==r)\n\t{\n\t\tval[rt]^=f;\n\t\tpro[rt]=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid) build(l,mid,rt*2,x,v,f);\n\telse build(mid+1,r,rt*2+1,x,v,f);\n\tpush_up(rt);\n}\n\nlong long query_val(int l,int r,int rt,int ql,int qr)\n{\n//\tif(l>qr||r<ql||l>r) return 0;\n\tif(ql<=l&&r<=qr)\n\t{\n//\t\tx=x*pro[rt]%P;\n\t\treturn val[rt];\n\t}\n\tlong long ans=0;\n\tint mid=(l+r)/2;\n\tif(ql<=mid) ans|=query_val(l,mid,rt*2,ql,qr);\n\tif(qr>mid) ans|=query_val(mid+1,r,rt*2+1,ql,qr);\n\treturn ans;\n}\nint query_pro(int l,int r,int rt,int x,int y)\n{\n//\tprintf(\"%d %d %d %d\\n\",l,r,rt,pro[rt]);\n\tif(x<=l&&r<=y) return pro[rt];\n\tint ans=1;\n\tint mid=(l+r)/2;\n\tif(x<=mid) ans=1ll*ans*query_pro(l,mid,rt*2,x,y)%P;\n//\tprintf(\"a ans=%lld\\n\",ans);\n\tif(mid<y) ans=1ll*ans*query_pro(mid+1,r,rt*2+1,x,y)%P;\n//\tprintf(\"b ans=%lld\\n\",ans);\n\treturn ans;\n}\nint get_ans(int x,int y)\n{\n\tint ans=query_pro(1,n,1,x,y);\n\tlong long f=query_val(1,n,1,x,y);\n\tfor(int i=0;i<60;++i)\n\t{\n\t\tif(f&(1ll<<i)) ans=1ll*ans*inv[i]%P*(pri[i]-1)%P;\n\t}\n\treturn ans;\n}\nvoid change(int x,int v)\n{\n\tlong long f=0;\n\tfor(int i=0;i<60;i++)\n\t{\n\t\tif(v%pri[i]==0) f^=1ll<<i;\n\t}\n\tbuild(1,n,1,x,v,f);\n}\nint main()\n{\n\tfor(int i=1;i<=n;i++) a[i]=3,build(1,n,1,i,a[i],2);\n\tint m;\n\tcin>>m;\n\t\n\tint flag,x,y;\n\tfor(int i=1;i<=m;i++)\n\t{\n//\t\tfor(int j=1;j<=2*n;j++) printf(\"%lld \",pro[j]); printf(\"\\n\");\n\t\tscanf(\"%d%d%d\",&flag,&x,&y);\n\t\tif(flag==0)\n\t\t{\n\t\t\tprintf(\"%d\\n\",get_ans(x,y));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tchange(x,a[x]),change(x,a[x]=y);\n\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1603896921,
        "uid": 148507,
        "name": "_Imaginary_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "~~\u5176\u5b9e\u8fd9\u9053\u9898\u8bb2\u4e86\u4e00\u5806\u7684\u5e9f\u8bdd~~\n# P4140 \u5947\u6570\u56fd\n\u201c\u82e5\u5b58\u5728\u6574\u6570x,y\u4f7f\u5f97number\\*x+product\\*y=1\uff0c\u5219number\u4e0eproduct\u4e0d\n\n\u76f8\u51b2\u201d\u8fd9\u53e5\u8bdd\u544a\u8bc9\u4e86\u6211\u4eecnumber\u4e0eproduct\u4e0d\u76f8\u51b2\u7684\u5145\u8981\u6761\u4ef6\u662f\n\n(number,product)=1\u3002\u53c8\u8bf4\u201c\u4ed6\u4f1a\u5148\u5bf9[a,b]\u7684\u8d22\u4ea7\u6c42\u548c\uff08\u8bb0\u4e3a\n\nproduct\uff09\uff0c\u7136\u540e\u5728\u7f16\u53f7\u5c5e\u4e8e[1,product]\u7684\u8d26\u623f\u4e2d\u9009\u62e9\u4e00\u4e2a\u53bb\u6e05\u70b9\u5b58\n\n\u6b3e\u2026\u2026\u201d\u53ef\u4ee5\u544a\u8bc9\u6211\u4eecans=\u03c6(al\\*al+1\\*......\\*ar)\n\n\u7531\u4e8e\u8fd9\u4e00\u9898\u9700\u8981\u6c42\u533a\u95f4\u79ef\u7684\u6b27\u62c9\u51fd\u6570\uff0c\u4e8e\u662f\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u3002\u4f7f\u7528\u7ebf\n\n\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u79ef\u4e0e\u533a\u95f4\u7684\u79ef\u6709\u54ea\u4e9b\u8d28\u6570\u7ea6\u6570\u3002\u7531\u4e8e\u9762\u989d\u53ea\u80fd\u7531\u6700\n\n\u5c0f\u768460\u4e2a\u8d28\u6570\u4e58\u8d77\u6765\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u72b6\u538b\u7684\u65b9\u5f0f\u5b58\u50a8\u3002(\u6b27\u62c9\u51fd\u6570\u4f7f\n\n\u7528\u516c\u5f0f\u66b4\u529b\u6c42)\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(60\\*m\\*log n)\n\n\u4ee3\u7801\uff1a~~\uff08\u5199\u7684\u5f88\u4e11\u7684\uff09~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=19961993,n=100000;\nint t,prime[301],tot,check[301],ni[301],val2[1000010],a,b,c;\nlong long val1[1000010];\nvoid init(int x){\n\tfor(int i=2;i<=x;i++){\n\t\tif(!check[i]){\n\t\t\tprime[tot++]=i;\n\t\t}\n\t\tfor(int j=0;j<tot&&i*prime[j]<=x;j++){\n\t\t\tcheck[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0) break;\n\t\t}\n\t}\n\tni[1]=1;\n\tfor(int i=2;i<=x;i++){\n        ni[i]=1ll*ni[mod%i]*(mod-mod/i)%mod;\n    }\n}\nvoid push_up(int rt){\n\tval1[rt]=val1[rt*2+1]|val1[rt*2+2];\n\tval2[rt]=1ll*val2[rt*2+1]*val2[rt*2+2]%mod;\n}\nvoid build(int rt,int l,int r){\n\tif(l==r) val1[rt]=2,val2[rt]=3;\n\telse{\n\t\tint mid=(l+r)/2;\n\t\tbuild(rt*2+1,l,mid);\n\t\tbuild(rt*2+2,mid+1,r);\n\t\tpush_up(rt);\n\t}\n}\nlong long query1(int rt,int l,int r,int ql,int qr){\n\tif(ql>r||qr<l) return 0;\n\tif(ql<=l&&qr>=r) return val1[rt];\n\tint mid=(l+r)/2;\n\treturn query1(rt*2+1,l,mid,ql,qr)|query1(rt*2+2,mid+1,r,ql,qr);\n}\nint query2(int rt,int l,int r,int ql,int qr){\n\tif(ql>r||qr<l) return 1;\n\tif(ql<=l&&qr>=r) return val2[rt];\n\tint mid=(l+r)/2;\n\treturn 1ll*query2(rt*2+1,l,mid,ql,qr)*query2(rt*2+2,mid+1,r,ql,qr)%mod;\n}\nvoid update_one(int rt,int l,int r,int idx,long long add){\n\tif(l==r){\n\t\tif(idx==l) val2[rt]=add;\n\t\tval1[rt]=0;\n\t\tfor(int i=0;i<60;i++){\n\t\t\tif(val2[rt]%prime[i]==0){\n\t\t\t\tval1[rt]|=(1ll<<i);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(idx<=mid) update_one(rt*2+1,l,mid,idx,add);\n\telse update_one(rt*2+2,mid+1,r,idx,add);\n\tpush_up(rt);\n}\nint phi(long long x,int y){\n\tfor(int i=0;i<60;i++){\n\t\tif((x&(1ll<<i))){\n\t\t\ty=1ll*y*(prime[i]-1)%mod*ni[prime[i]]%mod;\n\t\t}\n\t}\n\treturn y;\n}\nint main(){\n\tinit(300);\n\tscanf(\"%d\",&t);\n\tbuild(0,0,n-1);\n\twhile(t--){\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tif(a) update_one(0,0,n-1,b-1,c);\n\t\telse printf(\"%d\\n\",phi(query1(0,0,n-1,b-1,c-1),query2(0,0,n-1,b-1,c-1)));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1603289761,
        "uid": 289230,
        "name": "ricky0916",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "## [\u63a8\u8350\u5728\u8fd9\u91cc\u89c2\u770b](https://www.cnblogs.com/linzhuohang/p/13476669.html)\n\n# \u9898\u89e3\n\u9996\u5148\u770b\u5230\u9898\u76ee\u8981\u6c42 $number\\times x+product\\times y=1$\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u5143\u4e00\u6b21\u4e0d\u5b9a\u65b9\u7a0b\n\n\u5728\u5b66\u4e60\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7684\u65f6\u5019\u6211\u4eec\u77e5\u9053\n\n\u5982\u679c $a,b$ \u662f\u6574\u6570\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u6574\u6570 $x,y$ \u4f7f\u5f97 $ax+by=gcd(a,b)$ \n \n\u90a3\u4e48 $ax+by=1$ \u6709\u89e3\u5f53\u4e14\u4ec5\u5f53 $a,b$ \u4e92\u8d28\uff0c\u5373\u8981\u6ee1\u8db3 $number$ \u4e0e $product$ \u4e92\u8d28\n \n\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u6c42\u5f97\u5c31\u662f $product$ \u4ee5\u5185\u6709\u591a\u5c11\u4e0e\u5b83\u4e92\u8d28\u7684\u6570\uff0c\u8fd9\u4e2a\u5c31\u662f\u6b27\u62c9\u51fd\u6570\n \n\u4f46\u662f $product$ \u592a\u5927\u4e86\uff0c\u65e0\u6cd5\u76f4\u63a5\u6c42\uff0c\u6ce8\u610f\u5230\u9898\u76ee\u8bf4 $product$ \u53ef\u4ee5\u8868\u793a\u6210 $p1^{k1}\\times p2^{k2}\\times \u2026p60^{k60}$\n \n\u6211\u4eec\u77e5\u9053\u6b27\u62c9\u51fd\u6570\u6709\u4e09\u6761\u6027\u8d28\n \n1. \u82e5 $a$ \u4e3a\u8d28\u6570\uff0c\u5219 $\u03c8(a)=a-1$\n\n1. \u82e5 $a,b$ \u4e92\u8d28\uff0c\u5219 $\u03c8(a\\times b)=\u03c8(a)\\times \u03c8(b)$\n\n1. \u82e5 $a$ \u4e3a\u8d28\u6570\uff0c$b$ \u4e3a $a$ \u7684\u500d\u6570\uff0c\u5219 $\u03c8(a\\times b)=\u03c8(b)\\times a$\n\n\u90a3\u4e48\n\n$\u03c8(p1^{k1}\\times p2^{k2}\\times \u2026p60^{K60})$\n\n$=\u03c8(p1^{k1})\\times \u03c8(p2^{k2})\u2026$\uff08\u6027\u8d282\uff09\n\n$=\u03c8(p1)\\times p1^{k1-1}\\times \u03c8(p2)\\times p2^{k2-1}\u2026$\uff08\u6027\u8d283\uff09\n\n$=(p1-1)\\times p1^{k1-1}\\times(p2-1)\\times p2^{k2-1}\u2026$\uff08\u6027\u8d281\uff09\n\n$={(p1^{k1}\\times p2^{k2}\\times \u2026)}/(p1\\times p2\\times \u2026)\\times (p1-1)\\times (p2-1)\u2026 $\n\n$=product/(p1\\times p2\\times \u2026)\\times (p1-1)\\times (p2-1)\u2026$\n\n\u4e0a\u5f0f\u4e2d\u7684 $p$ \u90fd\u662f\u88ab $product$ \u5305\u542b\u7684\n\n\u9664\u6cd5\u53ef\u4ee5\u7528\u9006\u5143\u5904\u7406\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u6bb5\u533a\u95f4\u7684 $product$ (\u53d6\u6a21\u540e)\uff0c\u6bcf\u4e2a\u8d28\u6570\u662f\u5426\u51fa\u73b0\uff08\u53ef\u4ee5\u7528\u4e00\u4e2a $long \\space long$ \u6216\u8005\u6570\u7ec4\u5b58\u50a8\uff09\n\n\u8be2\u95ee\u65f6\u6839\u636e\u8fd4\u56de\u7684\u6570\u7ec4\u8ba1\u7b97\u540e\u9762\u90a3\u4e00\u5768\u5c31\u884c\u4e86\n\n# \u4ee3\u7801\n\n\u6ce8\u610f\u7ebf\u6bb5\u6811\u53f3\u8fb9\u754c\u8981\u4ee3100000\u8fdb\u53bb\uff0c\u800c\u4e0d\u662f $n$ \uff08\u6211\u5728\u8fd9\u91cc\u8c03\u4e860.5h\uff09\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\n#define int long long\n#define N 500010\n#define lc id*2\n#define rc id*2+1\n#define mid (l+r)/2\n#define mod 19961993\nbool fact[N][61];\nint prim[61]={0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281};\nint inv[61];\nint sum[N];\nvoid build(int id,int l,int r)\n{\n\tfact[id][2]=1;\n\tif(l==r)\n\t{\n\t\tsum[id]=3;\n\t\treturn;\n\t}\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tsum[id]=sum[lc]*sum[rc]%mod;\n}\nvoid modify(int id,int l,int r,int pos,int val)\n{\n\tif(l==r)\n\t{\n\t\tmemset(fact[id],0,sizeof(fact[id]));\n\t\tsum[id]=val;\n\t\tfor(int i=1;i<=60;i++)\n\t\t\tif(val%prim[i]==0) fact[id][i]=1;\n\t\treturn;\n\t}\n\tif(pos<=mid) modify(lc,l,mid,pos,val);\n\telse modify(rc,mid+1,r,pos,val);\n\tfor(int i=1;i<=60;i++) fact[id][i]=fact[lc][i]|fact[rc][i];\n\tsum[id]=sum[lc]*sum[rc]%mod;\n}\nint query(int id,int l,int r,int tl,int tr,bool arr[])\n{\n\tif(l>=tl&&r<=tr)\n\t{\n\t\tfor(int i=1;i<=60;i++) arr[i]|=fact[id][i];\n\t\treturn sum[id];\n\t}\n\tint ret=1;\n\tif(tl<=mid) ret=query(lc,l,mid,tl,tr,arr);\n\tif(tr>mid) ret*=query(rc,mid+1,r,tl,tr,arr);\n\treturn ret%mod;\n}\nint qpow(int a,int b)\n{\n\tint ans=1;\n\twhile(b)\n\t{\n\t\tif(b&1) ans*=a,ans%=mod;\n\t\ta*=a;\n\t\ta%=mod;\n\t\tb>>=1;\n\t}\n\treturn ans;\n}\nsigned main()\n{\n\tint n;\n\tcin>>n;\n\tbuild(1,1,100000);\n\tfor(int i=1;i<=60;i++) inv[i]=qpow(prim[i],mod-2);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%lld%lld%lld\",&a,&b,&c);\n\t\tif(a==0)\n\t\t{\n\t\t\tbool arr[61]={0};\n\t\t\tint tot=1,tot2=1,tot3=query(1,1,100000,b,c,arr);\n\t\t\tfor(int j=1;j<=60;j++) if(arr[j]) tot*=inv[j],tot2*=(prim[j]-1),tot%=mod,tot2%=mod;\n\t\t\tprintf(\"%lld\\n\", tot3*tot2%mod*tot%mod);\n\t\t}\n\t\telse modify(1,1,100000,b,c);\n\t}\n}\n```\n",
        "postTime": 1597135221,
        "uid": 119991,
        "name": "DrLin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n---------\n\n\u7ef4\u62a4\u4e00\u6bb5\u957f\u5ea6\u4e3a$10^5$ \u7684\u5e8f\u5217(\u94f6\u884c),\u521d\u59cb\u5168\u4e3a3\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684\u533a\u95f4,\u6c42\u5b83\u4eec\u7684\u79ef(product)\n\n\u7136\u540e\u8f93\u51fa1~product\u4e0eproduct\u4e92\u8d28\u7684\u6570(\u5373\u6b27\u62c9\u51fd\u6570)\n\n(\u6b64\u5904\u8bfb\u9898\u65f6\u6ce8\u610f\u8d26\u623f\u548c\u94f6\u884c\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5355\u4f4d)\n\n### \u6570\u636e\u8303\u56f4\n---------\n\n\u89c4\u5b9a\u8d28\u56e0\u5b50\u5728281\u53ca\u4ee5\u4e0b,\u517160\u4e2a(\u9762\u503c\u53ea\u670960\u79cd)\n\n\u6bcf\u4e2a\u6570\u4e0d\u8d85\u8fc7 $10^6$\n\n### solution\n-----------\n\n1.  \u6b27\u62c9\u51fd\u6570\u7684\u6c42\u6cd5\n\n    $(10^6)^{10^5}$ \u4e0d\u53ef\u80fd\u5b58\u7684\u4e0b,\u5bf9\u4e8e\u79ef\u5c31\u53ea\u9700\u8bb0\u5f55\u8d28\u56e0\u5b50\n    \n    \u4e5f\u5c31\u9700\u8981\u63d0\u524d\u505a\u6b27\u62c9\u7b5b\u5206\u89e3\u8d28\u56e0\u6570\u548c\u79bb\u6563\u5316,\u590d\u6742\u5ea6 $O(10^6)$\n    \n    ```cpp\n    next[1]=0;\n    for(register int i=2;i<=1000000;i++){//\u6b27\u62c9\u7b5b\u5206\u89e3\u8d28\u56e0\u6570\n        if(bef[i]==0){\n            for(register long long j=1,before=0;j!=0;j=next[j])\n                if(j*i<=1000000){\n                    bef[j*i]=j;\n                    next[j*i]=next[j];\n                    next[j]=j*i;\n                    before=j;\n                }\n                else{\n                    next[before]=next[j];\n                    j=before;\n                }\n            }\n        }    \n    }\n    for(register int i=2,id=0;i<=1000000;i++)//\u79bb\u6563\u5316\n        if(bef[i]==1) next[i]=++id;\n    ```\n    \n       \u540c\u65f6\u4f17\u6240\u5468\u77e5,\u82e5 $n=p_1^{c_1}p_2^{c_2}...p_m^{c_m}$ ,\u5219\u6b27\u62c9\u51fd\u6570 \n    \n    ### $\\phi(n)=n(\\frac{p_1-1}{p_1})(\\frac{p_2-1}{p_2})...(\\frac{p_m-1}{p_m})$\n    ### $=p_1^{c_1-1}p_2^{c_2-1}...p_m^{c_m-1}(p_1-1)(p_2-1)...(p_m-1)$\n\t \u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u5feb\u901f\u5e42\u6c42,\u65f6\u95f4\u590d\u6742\u5ea6 $O(60logn)$\n     ```cpp\n    typedef unsigned int word;\n    typedef unsigned long long ull;\n    typedef unsigned char byte;\n    const ull mod=19961993;\n    const ull prime[]={//\u63d0\u524d\u7528\u6b27\u62c9\u7b5b\u6253\u597d\u7684\u8d28\u6570\u8868\n        1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,\n        53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,\n        131,137,139,149,151,157,163,167,173,179,181,191,193,197,199\uff0c\n        211,223,227,229,233,239,241,251,257,263,269,271,277,28\n    };\n    struct pair{//\u5c01\u88c5\u597d\u7684\u8d28\u56e0\u5b50\u8bb0\u5f55\n        word count[64];\n    \tinline pair(){memset(count,0,sizeof(count));}\n    \tinline pair(const pair& p){memcpy(count,p.count,sizeof(count));}\n    \tinline pair& operator =(word num){//\u5b58\u5165\u8d28\u56e0\u5b50\n    \t\tmemset(count,0,sizeof(count));\n    \t\tfor(;num!=1;num=bef[num])\n    \t\t\tcount[next[num/bef[num]]]++;\n    \t\treturn *this;\n    \t}\n    \tinline void update(const pair &l,const pair &r){//\u533a\u95f4\u5408\u5e76\n    \t\tfor(register byte i=1;i<=60;i++){\n    \t\t\tcount[i]=l.count[i]+r.count[i];\n    \t\t}\n    \t}\n    \tinline ull euler(){//\u5feb\u901f\u5e42\u6c42\u6b27\u62c9\u51fd\u6570\n    \t\tregister ull ans=1,p;\n    \t\tfor(register byte i=1;i<=60;i++){\n    \t\t\tif(count[i]){\n                    p=prime[i],count[i]--;\n    \t\t\t\tfor(;count[i]>0;count[i]>>=1){\n    \t\t\t\t\tif(count[i]&1) ans=ans*p%mod;\n    \t\t\t\t\tp=p*p%mod;\n    \t\t\t\t}\n    \t\t\t\tans=ans*(prime[i]-1)%mod;\n    \t\t\t}\n    \t\t}\n    \t\treturn ans;\n    \t}\n    };\n     ```\n     \u7531\u4e8e19961993\u4e3a\u8d28\u6570,\u4e5f\u53ef\u4ee5\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143,\u540c\u65f6\u7ef4\u62a4\u533a\u95f4\u79ef\n     \n     \u9006\u5143\u6253\u8868\u5c31\u53ef\u4ee5\u8fbe\u5230 $O(60)$\n     \n    ```cpp\n    typedef unsigned int word;\n    typedef unsigned long long ull;\n    typedef unsigned char byte;\n    const ull mod=19961993;\n    const word inver[]={//\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143\n        1,9980997,6653998,11977196,8555140,5444180,1535538,10568114,\n        14708837,3471651,11701858,17386252,1618540,16066970,2321162,\n        18263100,16948862,12518538,15380552,10725847,1686929,13399146,\n        17182475,12025297,15924736,13582387,395287,6395590,15857658,\n        16299242,6359573,3300802,18742940,6702567,10914471,16210746,\n        11765678,5340151,18247466,7769638,8077107,11932588,6506948,\n        1985748,6619521,5877135,4413707,9744480,10115270,14597757,\n        16475182,18334191,5011379,18885205,7555336,621385,11309266,\n        12170137,12006660,18304499,11153142\n    };\n    struct pair{//\u5c01\u88c5\u597d\u7684\u8d28\u56e0\u5b50\u8bb0\u5f55\n        byte count[64];\n        word multi;\n        inline pair(){memset(count,0,sizeof(count));multi=3;}\n        inline pair(const pair& p){\n            memcpy(count,p.count,sizeof(count));\n            multi=p.multi;\n        }\n    \tinline pair& operator =(word num){\n            multi=num;\n    \t\tmemset(count,0,sizeof(count));\n    \t\tfor(;num!=1;num=bef[num])\n    \t\t\tcount[next[num/bef[num]]]=1;\n    \t\treturn *this;\n    \t}\n    \tinline void update(const pair &l,const pair &r){//\u533a\u95f4\u5408\u5e76\n    \t\tfor(register byte i=1;i<=60;i++){\n    \t\t\tcount[i]=l.count[i]|r.count[i];\n    \t\t}\n            multi=l.multi*r.multi%mod;\n    \t}\n    \tinline ull euler(){//\u9006\u5143\u6c42\u6b27\u62c9\u51fd\u6570\n    \t\tregister ull ans=multi;\n    \t\tfor(register byte i=1;i<=60;i++){\n    \t\t\tif(count[i]){\n    \t\t\t\tans=ans*(prime[i]-1)%mod;\n                    ans=ans*inver[i]%mod;\n    \t\t\t}\n    \t\t}\n    \t\treturn ans;\n    \t}\n    };\n    ```\n    \n2.  \u9898\u76ee\u5b9e\u73b0\n\n    \u65e2\u7136\u662f\u533a\u95f4\u8be2\u95ee,\u533a\u95f4\u67e5\u8be2,\u5fc5\u7136\u662f\u7ebf\u6bb5\u6811\u4e86\n\n    \u7531\u4e8e\u8282\u70b9\u53ea\u9700\u8bb0\u5f55\u8d28\u56e0\u5b50,\u53ef\u4ee5\u8fdb\u884c\u533a\u95f4\u5408\u5e76,\u5269\u4e0b\u7684\u8f93\u5165\u8f93\u51fa\u4e5f\u5c31\u4e0d\u7528\u591a\u8bf4\n    \n    ```cpp \n    class segment_tree{//\u7ebf\u6bb5\u6811\n        private:\n            struct point{\n                point *l,*r;\n                word from,to;\n                pair p;\n                inline point(word f,word t){//\u521d\u59cb\u5316\n                    from=f,to=t;\n                    if(f==t) p.count[2]=1;\n                    else{\n                        l=new point(f,f+t>>1);\n                        r=new point(l->to+1,t);\n                        p.count[2].update(l->p,r->p);\n                    }\n                }\n                inline ~point(){\n                    if(from!=to){\n                        delete l;\n                        delete r;\t\n                    }\n                }\n                inline pair* sum(word f,word t){//\u533a\u95f4\u67e5\u8be2\n                    if(from==f&&to==t) return new pair(p);\n                    if(t<=l->to) return l->sum(f,t);\n                    if(r->from<=f) return r->sum(f,t);\n                    register pair* outl=l->sum(f,l->to);\n                    register pair* outr=r->sum(r->from,t);\n                    outl->update(*outl,*outr);\n                    delete outr;\n                    return outl;\n                }\n                inline void is(word id,word num){//\u5355\u70b9\u4fee\u6539\n                    if(from==to) p=num;\n                    else{\n                        if(id<=l->to) l->is(id,num);\n                        else r->is(id,num);\n                        p.update(l->p,r->p);\n                    }\n                }\n            }*root;\n        public:\n            inline segment_tree(){root=new point(1,100000);}\n            inline ~segment_tree(){delete root;}\n            inline void is(word id,word num){//\u5355\u70b9\u4fee\u6539\n                root->is(id,num);\n            }\n            inline word sum(word f,word t){//\u533a\u95f4\u67e5\u8be2\n                pair *p=root->sum(f,t);\n                word ans=p->euler();\n                delete p;\n                return ans;\n            }\n    };\n    ```\n\u5b8c\u6574\u4ee3\u7801(2.96s,63.41MB)\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef unsigned int word;\ntypedef unsigned char byte;\ntypedef unsigned long long ull;\nword bef[1000010];\nword next[1000010];\nconst ull mod=19961993;\nconst ull prime[]={\n    1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,\n    61,67,71,73,79,83,89,97,101,103,107,109,113,127,\n    131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,\n\t211,223,227,229,233,239,241,251,257,263,269,271,277,281\n};\nstruct READ{\n\tinline READ(){\n\t\tnext[1]=0;\n        for(register int i=2;i<=1000000;i++){//\u6b27\u62c9\u7b5b\u5206\u89e3\u8d28\u56e0\u6570\n            if(bef[i]==0){\n                register long long j=1,before=0;\n                for(;j!=0;j=next[j])\n                    if(j*i<=1000000){\n                        bef[j*i]=j;\n                        next[j*i]=next[j];\n                        next[j]=j*i;\n                        before=j;\n                    }\n                    else{\n                        next[before]=next[j];\n                        j=before;\n                    }\n            }\n        }\n        for(register int i=2,id=0;i<=1000000;i++)//\u79bb\u6563\u5316\n            if(bef[i]==1) next[i]=++id; \n    }\n\ttemplate<typename type>\n\tinline READ& operator >>(type &num){//\u5feb\u8bfb\n\t\tregister char c=getchar(),w=1;\n\t\twhile('0'>c||c>'9'){\n\t\t\tif(c==EOF) return *this;\n\t\t\tw=c=='-'? -1:1;\n\t\t\tc=getchar();\n\t\t}\n\t\tnum=0;\n\t\twhile('0'<=c&&c<='9'){\n\t\t\tnum=(num<<1)+(num<<3)+(c-'0');\n\t\t\tc=getchar();\n\t\t}\n\t\tnum*=w;\n\t\treturn *this;\n\t}\n}read; \nstruct pair{//\u5c01\u88c5\u597d\u7684\u8d28\u56e0\u5b50\u8bb0\u5f55\n    word count[64];\n    inline pair(){memset(count,0,sizeof(count));}\n    inline pair(const pair& p){memcpy(count,p.count,sizeof(count));}\n    inline pair& operator =(word num){//\u5b58\u5165\u8d28\u56e0\u5b50\n    \tmemset(count,0,sizeof(count));\n    \tfor(;num!=1;num=bef[num])\n    \t\tcount[next[num/bef[num]]]++;\n    \treturn *this;\n    }\n    inline void update(const pair &l,const pair &r){//\u533a\u95f4\u5408\u5e76\n    \tfor(register byte i=1;i<=60;i++){\n    \t\tcount[i]=l.count[i]+r.count[i];\n    \t}\n    }\n    inline ull euler(){//\u5feb\u901f\u5e42\u6c42\u6b27\u62c9\u51fd\u6570\n    \tregister ull ans=1,p;\n    \tfor(register byte i=1;i<=60;i++){\n    \t\tif(count[i]){\n                p=prime[i],count[i]--;\n    \t\t\tfor(;count[i]>0;count[i]>>=1){\n    \t\t\t\tif(count[i]&1) ans=ans*p%mod;\n    \t\t\t\tp=p*p%mod;\n    \t\t\t}\n    \t\t\tans=ans*(prime[i]-1)%mod;\n    \t\t}\n    \t}\n    \treturn ans;\n    }\n};\nclass segment_tree{ //\u7ebf\u6bb5\u6811\n\tprivate:\n\t\tstruct point {\n\t\t\tpoint *l,*r;\n\t\t\tword from,to;\n\t\t\tpair p;\n\t\t\tinline point(word f,word t){ //\u521d\u59cb\u5316\n\t\t\t\tfrom=f,to=t;\n\t\t\t\tif(f==t) p.count[2]=1;\n\t\t\t\telse {\n\t\t\t\t\tl=new point(f,f+t>>1);\n\t\t\t\t\tr=new point(l->to+1,t);\n\t\t\t\t\tp.update(l->p,r->p);\n\t\t\t\t}\n\t\t\t}\n\t\t\tinline ~point(){\n\t\t\t\tif(from!=to){\n\t\t\t\t\tdelete l;\n\t\t\t\t\tdelete r;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinline pair* sum(word f,word t){ //\u533a\u95f4\u67e5\u8be2\n\t\t\t\tif(from==f&&to==t) return new pair(p);\n\t\t\t\tif(t<=l->to) return l->sum(f,t);\n\t\t\t\tif(r->from<=f) return r->sum(f,t);\n\t\t\t\tregister pair* outl=l->sum(f,l->to);\n\t\t\t\tregister pair* outr=r->sum(r->from,t);\n\t\t\t\toutl->update(*outl,*outr);\n\t\t\t\tdelete outr;\n\t\t\t\treturn outl;\n\t\t\t}\n\t\t\tinline void is(word id,word num){ //\u5355\u70b9\u4fee\u6539\n\t\t\t\tif(from==to) p=num;\n\t\t\t\telse {\n\t\t\t\t\tif(id<=l->to) l->is(id,num);\n\t\t\t\t\telse r->is(id,num);\n\t\t\t\t\tp.update(l->p,r->p);\n\t\t\t\t}\n\t\t\t}\n\t\t}*root;\n\tpublic:\n\t\tinline segment_tree(){root=new point(1,100000);}\n\t\tinline ~segment_tree(){delete root;}\n\t\tinline void is(word id,word num){ //\u5355\u70b9\u4fee\u6539\n\t\t\troot->is(id,num);\n\t\t}\n\t\tinline word sum(word f,word t){ //\u533a\u95f4\u67e5\u8be2\n\t\t\tpair *p=root->sum(f,t);\n\t\t\tword ans=p->euler();\n\t\t\tdelete p;\n\t\t\treturn ans;\n\t\t}\n};\nint main(){\n\tregister word n,a,b,c;\n\tsegment_tree tree;\n\tfor(read>>n;n>0;n--){\n\t\tread>>a>>b>>c;\n\t\tif(a==0) printf(\"%llu\\n\",tree.sum(b,c));\n\t\telse tree.is(b,c);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571305788,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4140 \u3010\u5947\u6570\u56fd \u3011"
    }
]