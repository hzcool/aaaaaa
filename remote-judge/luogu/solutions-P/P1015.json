[
    {
        "content": "**upd\uff1a20200418**\r\n\r\n\u8fd9\u9898\u662f\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u548c\u666e\u901a\u6a21\u62df\u7684\u4e00\u9053\u597d\u9898\u3002\r\n\r\n\u90d1\u91cd\u58f0\u660e\uff1a\u672c\u9898\u6b63\u89e3\u4e3a\u9ad8\u7cbe\u5ea6+\u6a21\u62df\u3002\u5229\u7528\u6570\u636e\u8303\u56f4\u6a21\u7cca\u7684\u9898\u76ee\u6f0f\u6d1e\u800c\u4f7f\u7528long long\u6c34\u8fc7\u6b64\u9898\u5e94\u5f53\u662f\u4e00\u4e2a\u5e94\u5f53\u575a\u51b3\u5236\u6b62\u7684\u884c\u4e3a\u3002\u6211\u672c\u4eba\u521a\u5b66OI\u65f6\u505a\u9898\u7ecf\u5e38\u53ea\u8003\u8651\u5c40\u90e8\u6b63\u786e\u6027\u800c\u5ffd\u89c6\u6570\u636e\u8303\u56f4\uff0c\u7136\u540e\u7a00\u91cc\u7cca\u6d82\u53d1\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\u5982\u4eca\u8fd9\u7bc7\u9898\u89e3\u622a\u81f3\u6b64\u65f6\u56e0\u4e3a\u5229\u7528\u6570\u636e\u8303\u56f4\u6f0f\u6d1e\u800c\u6c34\u8fc7\u800c\u6210\u4e3a\u7b2c\u4e00\u9ad8\u8d5e\u9898\u89e3\uff0c\u4f46\u662f\u6211\u5ffd\u89c6\u4e86\u5176\u5f71\u54cd\u529b\uff0c**\u7ed9\u540e\u6765\u7684\u521d\u5b66\u8005\u5f00\u4e86\u4e00\u4e2a\u5f88\u574f\u7684\u5934**\uff0c\u6211\u505a\u81ea\u6211\u68c0\u8ba8\u3002\u611f\u8c22\u8bc4\u8bba\u533a\u72c2\u8f70\u6ee5\u70b8\u7684\u7763\u4fc3\uff0c\u4eca\u5929\u6211\u8fd9\u9053\u9898\u76ee\u548c\u8fd9\u7bc7\u9898\u89e3\u91cd\u5199\u3002\r\n\r\n\u8bf7\u6ce8\u610f\uff1a\u6211\u4eec\u5e94\u5f53\u8ba4\u4e3a\uff0c\u5728\u4efb\u4f55\u65f6\u5019\u5229\u7528\u9898\u76ee\u6570\u636e\u3001\u8bc4\u6d4b\u673a\u5668\u6216\u5176\u4ed6\u6f0f\u6d1e\u800c **\u4e3b\u89c2\u4eba\u4e3a** \u83b7\u53d6AC\u7684\u884c\u4e3a\u4e0e\u4f5c\u5f0a\u884c\u4e3a\u6027\u8d28\u4e0a\u65e0\u5f02\uff0c\u5e94\u5f53\u575a\u51b3\u5236\u6b62\u3002**\uff08\u8fd9\u91cc\u7684\u4e3b\u89c2\u4eba\u4e3a\u6307\u4f60\u5728A\u9898\u524d\u5df2\u7ecf\u77e5\u9053\u672c\u9898\u5b58\u5728\u67d0\u4e9b\u9898\u9762\u4e2d\u6ca1\u6709\u8bf4\u660e\u7684\u6f0f\u6d1e\u53ef\u4ee5\u52a0\u4ee5\u5229\u7528\u3002\u8fd9\u79cd\u6f0f\u6d1e\u4e0d\u5305\u62ec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u53d1\u73b0\u7684\u7279\u6027\u3002\uff09**\r\n\r\nupd20230114:\uff08 \u5bf9\u8fd9\u53e5\u8bdd\u5fc5\u9700\u8865\u5145\u7684\u662f\uff0c\u7531\u4e8e\u62112017\u5e74\u7684\u90a3\u7bc7\u9898\u89e3\u5df2\u7ecf\u4e0d\u518d\u5c55\u793a\uff0c\u6240\u4ee5\u8fd9\u53e5\u8bdd\u53ef\u80fd\u7ed9\u4e86\u4e00\u4e9b\u540c\u5b66\u8bef\u89e3\u3002\u8fd9\u91cc\u7684\u201c\u575a\u51b3\u5236\u6b62\u201d\u662f\u6307\u7531\u4e8e\u6211\u4e4b\u524d\u53d1\u4e86\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\u7684\u9898\u89e3\u5e76\u4e14\u8fd9\u7bc7\u9898\u89e3\u70b9\u8d5e\u6570\u91cf\u5f88\u591a\uff0c\u5bfc\u81f4\u8bb8\u591a\u4eba\u53ef\u80fd\u6548\u4eff\u90a3\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u4ece\u800c\u6c34\u8fc7\u6b64\u9898\u3002\u8fd9\u5728\u4e2a\u4eba\u7684\u8bad\u7ec3\u63d0\u5347\u5f53\u4e2d\u662f\u4e0d\u63d0\u5021\u7684\u505a\u6cd5\u3002\uff09\r\n\u4f46\u662f\uff0c\u7531\u4e8e\u672c\u4eba\u5df2\u7ecf\u5347\u5165\u5927\u5b66\u4e14\u8fd8\u662f\u53c2\u52a0\u8fc7\u4e0d\u5c11\u573aNOIP\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u8bf4\u7684\u662f\u5982\u679c\u4f60\u5728\u6bd4\u8d5b\u5f53\u4e2d\u901a\u8fc7\u5408\u6cd5\u7684\u9a97\u5206\u65b9\u5f0f\u5f97\u5230\u4e86\u5f88\u591a\u5206\u751a\u81f3\u8fc7\u4e86\u9898\uff0c\u90a3\u4e48\u53ea\u8981\u6210\u7ee9\u6709\u6548\uff0c\u5c31\u4e0d\u8981\u6709\u4efb\u4f55\u601d\u60f3\u8d1f\u62c5\u3002\r\n\r\n\u672c\u9898\u6309\u7167\u9898\u76ee\u610f\u601d\u6a21\u62df\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u9ad8\u7cbe\u5ea6\u6570\u5b57\uff0c\u8fd9\u6837\u65b9\u4fbf\u6211\u4eec\u5904\u7406\u3002\u5224\u65ad\u201c\u8be5\u6570\u7ec4\u662f\u5426\u56de\u6587\u201d\u3001\u201cc\u7ffb\u8f6c\u5b58\u5165d\u518d\u505ac+d\u201d\u53ef\u4ee5\u5199\u6210\u4e24\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u3002\u7136\u540e\u4e3b\u7a0b\u5e8f\u7ec4\u7ec7\u4e00\u4e0b\u4ed6\u4eec\u5373\u53ef\u3002\u6ce8\u610f\u597d\u9000\u51fa\u5faa\u73af\u7684\u6761\u4ef6\u3002\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\nconst int S=303;//\u4e00\u6b21\u52a0\u6cd5\u9876\u591a\u591a\u4e00\u4f4d\uff0c\u6240\u4ee5\u9876\u591a\u591a30\u4f4d\uff0c\u4e5f\u5c31\u662f130\u4f4d\u5de6\u53f3\u3002\u6211\u5f00\u5927\u4e00\u70b9\uff0c\u5f00\u5230300.\r\nint n,a[S],l;\r\nchar c[S],d[S];\r\ninline void add()\r\n{\r\n\tfor (int i=0;i<l;++i)\r\n\t\td[l-i-1]=c[i];\r\n\tl+=2;//\u53ef\u80fd\u6709\u8fdb\u4f4d\uff0c\u6240\u4ee5\u6211\u4eec\u5e72\u8106\u5728\u524d\u9762\u5148\u591a\u7a7a\u4e2a\u4e24\u4f4d\r\n\tfor (int i=0;i<l;++i)\r\n\t{\r\n\t\tc[i]+=d[i];\r\n\t\tif (c[i]>=n) c[i+1]++,c[i]-=n;\r\n\t}\r\n\twhile (!c[l-1]) --l;//\u5927\u4e0d\u4e86\u591a\u4f59\u7684\u524d\u5bfc0\u518d\u51cf\u56de\u6765\u561b~~\u7b80\u5316\u601d\u7ef4~~\r\n}\r\ninline bool pd()\r\n{\r\n\tfor (int i=0;i<l;++i)\r\n\t\tif (c[i]!=c[l-1-i]) return false;\r\n\treturn true;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%s\",&n,c);l=strlen(c);\r\n\tfor (int i=0;i<l;++i)\r\n\t{\r\n\t\tif (c[i]>='0' && c[i]<='9') c[i]-='0';\r\n\t\telse c[i]=c[i]-'A'+10;\r\n\t}\r\n\tint step=0;\r\n\twhile (!pd())\r\n\t{\r\n\t\t++step;\r\n\t\tif (step>30) break;\r\n\t\tadd();\r\n\t}\r\n\tif (step<=30) printf(\"STEP=%d\\n\",step);\r\n\telse puts(\"Impossible!\");\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\u628a\u4e0d\u540c\u7684\u4e00\u4e9b\u5e76\u4e0d\u5c0f\u7684\u529f\u80fd\u5199\u6210\u4e0d\u540c\u7684\u51fd\u6570\u518d\u5728\u4e3b\u7a0b\u5e8f\u5f53\u4e2d\u7ec4\u7ec7\u5b83\u4eec\uff0c\u662f\u5c5e\u4e8e\u4e00\u79cd\u6807\u51c6\u5316\u3001\u6a21\u5757\u5316\u7f16\u7a0b\u7684\u601d\u7ef4\u3002\u8fd9\u79cd\u601d\u7ef4\u5728\u4ee5\u540e\u7f16\u7a0b\uff0c\u5c24\u5176\u662f\u50cf\u9ad8\u7cbe\u5ea6\u8fd9\u6837\u4e3b\u7a0b\u5e8f\u8c03\u7528\u9891\u7e41\u7684\u7a0b\u5e8f\u5f53\u4e2d\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u601d\u7ef4\u548c\u4ee3\u7801\u91cf\u3002\u5176\u7279\u70b9\u5c31\u662f\u51fd\u6570\u95f4\u72ec\u7acb\u6027\u8f83\u4e3a\u660e\u663e\uff0c\u51fd\u6570\u63a5\u53e3\u8f83\u4e3a\u7b80\u5355\uff0c\u51fd\u6570\u8c03\u7528\u65b9\u4fbf\u3002\u4e00\u4e2a\u51fd\u6570\u5e94\u5f53\u5e72\u5b8c\u5b83\u6240\u6709\u7684\u4efb\u52a1\uff0c\u5982\u679c\u628a\u67d0\u4e9b\u4efb\u52a1\u62d6\u5ef6\u5230\u4e3b\u7a0b\u5e8f\u6216\u8005\u662f\u5176\u4ed6\u51fd\u6570\u5f53\u4e2d\uff0c\u5c06\u5927\u5927\u590d\u6742\u7f16\u7a0b\u601d\u7ef4\u590d\u6742\u5ea6\u548c\u4ee3\u7801\u91cf\u3002\u5927\u5bb6\u53ef\u4ee5\u6311\u6218\u4e00\u4e0b[P1005 \u77e9\u9635\u53d6\u6570\u6e38\u620f](https://www.luogu.com.cn/problem/P1005)\uff0c\u8fd9\u662f\u6211\u53d1\u73b0\u6a21\u5757\u5316\u6781\u5176\u4f18\u79c0\u7684\u8d77\u6e90\u3002\r\n\r\n___\r\n**20171029\u9898\u89e3\u6539\uff1a**\r\n\r\n\u5982\u679c\u9898\u76ee\u662fint64\u6574\u5f62\u8303\u56f4\u5185\u7684\u8bdd\uff0c\u90a3\u4e48\u5c06\u6beb\u65e0\u5fc5\u8981\u8f6c\u8fdb\u5236\uff01\r\n\r\n\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5c06n\u8fdb\u5236\u6570\u53cd\u8f6c\uff0c\u5728\u5341\u8fdb\u5236\u4e0b\u5373\u53ef\u7ffb\u8f6c\uff0c\u65e0\u9700\u8f6c\u6210\u5b57\u7b26\u6570\u7ec4\u3002\u5224\u65ad\u53cd\u8f6c\u540e\u7684\u6570\uff0810\u8fdb\u5236\uff09\u4e0e\u539f\u6765\u7684\u6570\uff08\u5148\u628a\u5b83\u8f6c\u621010\u8fdb\u5236\uff09\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002\r\n\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n\r\n\r\n```cpp\r\nbool pd(unsigned long long a)//\u5224\u65ada\u4e0e\u5176n\u8fdb\u5236\u4e0b\u53cd\u8f6c\u662f\u5426\u76f8\u7b49\u3002\r\n{\r\n    unsigned long long s=0;\r\n    for (unsigned long long i=a;i;i/=n)\r\n        s=s*k+i%n;//\u7528\u5341\u8fdb\u5236\uff0c\u4f46\u662f\u628a\u5b83\u6309\u7167n\u8fdb\u5236\u64cd\u4f5c\r\n    nex=s+a;\r\n    return s==a;\r\n}\r\n\r\n```",
        "postTime": 1509208228,
        "uid": 34907,
        "name": "Hygebra",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "## \u9ad8\u7cbe\u56de\u6587\u6570\n\nemm\u2026\u2026M\u5728\u4e00\u767e\u4f4d\u4ee5\u5185\uff0c\u8be5\u4e0a**\u9ad8\u7cbe\u5ea6**\u4e86\u3002\n\n\u867d\u7136\u662fN\u8fdb\u5236\u6570\uff0c\u4f46\u672c\u9898\u4e0d\u9700\u8981\u8f6c\n\n\n**\u56e0\u4e3a\uff1a**\n\n\u65e2\u7136\u662fN\u8fdb\u5236\u6570\n\n\u8bf7\u628a\u9ad8\u7cbe\u52a0\u4e2d\u7684\u2014\u2014%10\u6539\u4e3a%n\n\n\u8bf7\u628a\u9ad8\u7cbe\u52a0\u4e2d\u7684\u2014\u2014/10\u6539\u4e3a/n\n\n\u5176\u4ed6\u8fd0\u7b97\u65b9\u5f0f\u4e0d\u53d8\n\n\n\n------------\n\n\n\n\n\u8fd9\u9898\u9700\u8981\u4f1a**\u9ad8\u7cbe\u52a0**\uff0c**\u9ad8\u7cbe\u53cd\u8f6c**\uff0c**\u9ad8\u7cbe\u5224\u65ad\u56de\u6587\u6570**\u548c**\u6570\u7ec4\u5b58\u9ad8\u7cbe\u5ea6**\u3002\n\n\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4ee3\u7801\n\n\u8ba9\u6211\u4eec\u5f00\u59cb\u6109\u5feb\u7684\u6a21\u62df\u5427(\uff5e\uffe3\u25bd\uffe3)\uff5e\u2026\u2026\u2026\u2026\u2026\u2026\n\n\n\n------------\n\n\u5148\u5b9a\u4e49\u53d8\u91cf\uff1a\n\n```cpp\nint n, q[1000001], l, w[1000001], ans;\nstring s;\n```\nq\u662f\u9ad8\u7cbe\u6570\u7ec4\uff0cw\u662fq\u53cd\u8f6c\u540e\u7684\u6570\u7ec4\uff0cl\u662f\u9ad8\u7cbe\u5ea6\u6570\u7684\u957f\u5ea6\uff0cn\u662f\u8fdb\u5236\uff0cans\u662f\u6240\u9700\u7684\u6b65\u6570, s\u662f\u8f93\u5165\u9ad8\u7cbe\u5ea6\u7684\u5b57\u7b26\u4e32\u3002\n\n\n\n------------\n\n\n\u9ad8\u7cbe\u52a0code:\n\n```cpp\nvoid add(int a[], int b[])//\u9ad8\u7cbe\u52a0 \n{\n\tfor(int i = 1; i <= l; i++)\n\t{\n\t\ta[i] += b[i];\n\t\ta[i + 1] += a[i] / n;//\u8fdb\u4f4d \n\t\ta[i] %= n;\n\t}\n\tif(a[l + 1] > 0)//\u8003\u8651\u4ece\u6700\u9ad8\u4f4d\u8fdb\u4f4d\u5230\u6700\u9ad8\u4f4d\u7684\u4e0b\u4e00\u4f4d \n\t{\n\t\tl++;//\u957f\u5ea6++ \n\t}\n}\n```\n\n\n\n------------\n\n\u9ad8\u7cbe\u53cd\u8f6ccode:\n\n```cpp\nvoid turn(int a[])//\u53cd\u8f6c\u6570\u5b57 \n{\n\tint j = 0;\n\tfor(int i = l; i >= 1; i--)//\u53cd\u7740\u5b58 \n\t{ \n\t\tw[++j] = a[i];//\u5b58\u5230w\u6570\u7ec4\u91cc \n\t}\n}\n```\n\n\n\n------------\n\n\u9ad8\u7cbe\u5224\u65ad\u56de\u6587\u6570code:\n\n```cpp\nbool f(int a[])//\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570 \n{\n\tint ln = l;\n\tint i = 1;//\u4ece\u4e24\u8fb9\u5224\u65ad\n\tint j = l;\n\twhile(ln--)\n\t{\n\t\tif(ln < l / 2)//\u5224\u4e00\u822c\u5c31\u53ef\u4ee5\u5566QAQ \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i] != a[j])\n\t\t{\n\t\t\treturn false;//\u6709\u4e00\u4f4d\u4e0d\u76f8\u7b49\u5c31\u4e0d\u662f\u56de\u6587\u6570 \n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn true;\n}\n```\n\n\n------------\n\n\u6570\u7ec4\u5b58\u9ad8\u7cbe\u5ea6code:\n\n```cpp\nvoid init()//\u628as\u5b57\u7b26\u4e32\u9644\u5230q\u6570\u7ec4\u91cc \n{\n\tint j = 0;\n\tfor(int i = s.length() - 1; i >= 0 ; i--) \n\t{\n\t\tif(s[i] >= '0' && s[i] <= '9')//\u6570\u5b57 \n\t\t{\n\t\t\tq[++j] = s[i] - '0';\n\t\t}\n\t\telse//\u8fd8\u6709\u5341\u516d\u8fdb\u5236\u7684 \n\t\t{\n\t\t\tq[++j] = s[i] - 'A' + 10;\n\t\t} \n\t}\n}\n```\n\n\n------------\n\n\u4e3b\u51fd\u6570code\uff1a\n\n```cpp\nint main()\n{\n\tcin>>n>>s;\n\tinit();//\u521d\u59cb\u5316\u6570\u7ec4 \n\tl = s.length();\n\twhile(!f(q))//\u662f\u5426\u56de\u6587 \n\t{\n\t\tturn(q);\n\t\tadd(q, w);//\u52a0\u4e0a\u56de\u6587\u6570 \n\t\tans++;\n\t\tif(ans > 30)//\u6b65\u6570\u5927\u4e8e\u4e09\u5341\u5c31\u9000\u51fa \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ans > 30)\n\t{\n\t\tprintf(\"Impossible!\"); //\u53f9\u53f7\u6ce8\u610f \n\t}\n\telse\n\t{\n\t\tprintf(\"STEP=%d\", ans);\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\nAC\u5b8c\u6574\u7248code\uff1a\n\n\uff08\u5c31\u4e0d\u5199\u6ce8\u91ca\u4e86QAQ\uff09\n\n```cpp\n#include <bits/stdc++.h> \nusing namespace std;\nint n, q[1000001], l, w[1000001], ans;\nstring s;\nvoid init() \n{\n\tint j = 0;\n\tfor(int i = s.length() - 1; i >= 0 ; i--) \n\t{\n\t\tif(s[i] >= '0' && s[i] <= '9') \n\t\t{\n\t\t\tq[++j] = s[i] - '0';\n\t\t}\n\t\telse \n\t\t{\n\t\t\tq[++j] = s[i] - 'A' + 10;\n\t\t} \n\t}\n}\nvoid add(int a[], int b[]) \n{\n\tfor(int i = 1; i <= l; i++)\n\t{\n\t\ta[i] += b[i];\n\t\ta[i + 1] += a[i] / n; \n\t\ta[i] %= n;\n\t}\n\tif(a[l + 1] > 0) \n\t{\n\t\tl++; \n\t}\n}\nbool f(int a[]) \n{\n\tint ln = l;\n\tint i = 1;\n\tint j = l;\n\twhile(ln--)\n\t{\n\t\tif(ln < l / 2) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i] != a[j])\n\t\t{\n\t\t\treturn false; \n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn true;\n}\nvoid turn(int a[]) \n{\n\tint j = 0;\n\tfor(int i = l; i >= 1; i--) \n\t{\n\t\tw[++j] = a[i]; \n\t}\n}\nint main()\n{\n\tcin>>n>>s;\n\tinit(); \n\tl = s.length();\n\twhile(!f(q)) \n\t{\n\t\tturn(q);\n\t\tadd(q, w); \n\t\tans++;\n\t\tif(ans > 30) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ans > 30)\n\t{\n\t\tprintf(\"Impossible!\"); \n\t}\n\telse\n\t{\n\t\tprintf(\"STEP=%d\", ans);\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u7f8e\u7ed3\u675f\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\nPS\uff1a\u5e0c\u671b\u8fd9\u6b21\u80fd\u901a\u8fc7please\ufe3f(\uffe3\ufe36\uffe3)\ufe3f",
        "postTime": 1555903431,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u56de\u6587\u7684\u5224\u65ad\u53ef\u4ee5\u7528 C++ STL \u81ea\u5e26\u7684 `reverse` \u51fd\u6570\uff08\u7ffb\u8f6c\u5b57\u7b26\u4e32\u51fd\u6570\uff09~~\uff08STL \u5927\u6cd5\u597d\uff09~~  \n\n\u548c\u697c\u4e0a\u5404\u4f4d dalao \u4e00\u6837\uff0c\u4fee\u6539\u4e86\u9ad8\u7cbe\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u63a8\u5e7f\u5230 n \u8fdb\u5236\uff0c\u8bb0\u5f97\u8981\u7279\u5224\u5bf9\u4e8e\u5341\u516d\u8fdb\u5236\u6570\u7684\u5224\u65ad\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 105;\nchar sixt[20] = \"0123456789ABCDEF\";\nint n;\nstring m;\nbool hw(string a) { //\u5224\u65ad\u56de\u6587\n\tstring s = a; //\u628a a \u8d4b\u503c\u7ed9 s\n\treverse(s.begin(), s.end()); //\u53cd\u8f6c\u5b57\u7b26\u4e32 s\n\treturn s == a; //\u5224\u65ad a \u548c s \u662f\u5426\u76f8\u7b49\n}\nstring add(int k, string b) { //\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u8fc7\u7a0b\uff0c\u63a8\u5e7f\u5230 k \u8fdb\u5236\n\tstring a = b;\n\treverse(a.begin(), a.end());\n\tint numa[maxN], numb[maxN], numc[maxN];\n\tint len = a.length(), lenc = 1;\n\tstring ans;\n\tfor (int i=0; i<len; i++) {\n\t\tif (isdigit(a[i])) numa[len-i] = a[i] - '0'; //\u5bf9\u4e8e\u5341\u516d\u8fdb\u5236\u7684\u7279\u5224\uff0c\u5982\u679c\u662f\u6570\u5b57\u51cf\u53bb 0 \uff0c\u4e0b\u540c\n\t\telse numa[len-i] = a[i] - 'A' + 10; //\u5982\u679c\u4e0d\u662f\u6570\u5b57\u51cf\u53bb A \u518d\u52a0\u4e0a 10\n\t\tif (isdigit(b[i])) numb[len-i] = b[i] - '0';\n\t\telse numb[len-i] = b[i] - 'A' + 10;\n\t}\n\tint x = 0;\n\twhile (lenc <= len) {\n\t\tnumc[lenc] = numa[lenc] + numb[lenc] + x;\n\t\tx = numc[lenc] / k; //\u628a\u9664\u4ee5 10 \u4fee\u6539\u4e3a\u9664\u4ee5 k\n\t\tnumc[lenc] %= k; //\u8fd9\u91cc\u628a\u5bf9 10 \u53d6\u6a21\u4fee\u6539\u4e3a\u5bf9 k \u53d6\u6a21\n\t\tlenc++;\n\t}\n\tnumc[lenc] = x;\n\twhile (numc[lenc] == 0) lenc--;\n\tfor (int i=lenc; i>=1; i--) ans += sixt[numc[i]];\n\treturn ans;\n}\nint main() {\n\tcin >> n >> m;\n\tfor (int i=0; i<=30; i++){ //\u6a21\u62df\u8fc7\u7a0b\n\t\tif(hw(m)) { //\u5982\u679c\u662f\u56de\u6587\u6570\u5c31\u8f93\u51fa\u6b65\u9aa4\u6570\n\t\t\tprintf(\"STEP=%d\", i);\n\t\t\treturn 0;\n\t\t}\n\t\telse m = add(n, m);\n\t}\n\tprintf(\"Impossible!\"); //\u5982\u679c\u8d85\u8fc7 30 \u6b65\u5219\u8f93\u51fa Impossible!\n\treturn 0;\n}\n```",
        "postTime": 1526042010,
        "uid": 46833,
        "name": "hawa130",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u7a0d\u5fae\u7528\u70b9STL\u64cd\u4f5c\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u5199\u51fa\u8fd9\u4e2a\u201c\u7801\u519c\u9898\u201d\u3002\n\n\u601d\u8def\uff1a\u66b4\u529b\u6a21\u62df\u3002\n\n\u5206\u6790\u8be6\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#define maxn 2333\nusing namespace std;\nchar buf[maxn];\nint n;\nvector<int> a, b;\nint main() {\n    scanf(\"%d%s\", &n, buf);\n    for(int i = 0, len = strlen(buf); i < len; i++) { // \u7b80\u5355\u7684\u6309\u4f4d\u8bfb\u5165\n        if(buf[i] >= '0' && buf[i] <= '9') a.push_back(buf[i] - '0');\n        else a.push_back(islower(buf[i]) ? buf[i] - 'a' + 10 : buf[i] - 'A' + 10);\n    }\n    b = a; // \u5c06a copy\u5230b\u91cc\u3002\n    reverse(a.begin(), a.end()); // \u53cd\u8f6ca\u3002\n    if(a == b) return puts(\"STEP=0\"), 0; //\u53cd\u8f6c\u540e\u76f8\u7b49\u5373\u4e3a\u56de\u6587\n    for(int ans = 1; ans <= 30; ans++) {\n        for(int i = 0, siz = a.size(); i < siz; i++) {\n            a[i] += b[i]; // \u52a0\u6cd5\n            if(i != siz - 1) a[i + 1] += a[i] / n; // \u5904\u7406\u8fdb\u4f4d\n            else if(a[i] >= n) a.push_back(a[i] / n);\n            a[i] %= n;\n        }\n        b = a;\n        reverse(b.begin(), b.end());\n        if(a == b) return printf(\"STEP=%d\", ans), 0; // \u5224\u56de\u6587\n    }\n    return puts(\"Impossible!\"), 0;\n}\n```",
        "postTime": 1515118924,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\n### \u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5fc3\u4e2d\u5c0f\u9e21\u51bb\n#### \u89c2\u671b\u4e8c\u5341\u4e94\u4e2adalao\u4eec\u7684\u5404\u79cd\u89e3\u6cd5\uff0c\n\n------------\n\n\n### \u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u9996\u5148\u6765\u5206\u6790\u4e00\u4e0b\n\n**N\u8fdb\u5236\u8fd0\u7b97\uff1a**\n \n **1\u3001\u5f53\u524d\u4f4d\u89c4\u8303\u7531%10\u6539\u4e3a n**\n \n **2\u3001\u8fdb\u4f4d\u5904\u7406\u7531/10\u6539\u4e3a/n**\n \n **3\u3001\u5176\u4ed6\u8fd0\u7b97\u89c4\u5219\u4e0d\u53d8**\n\n### \u77e5\u9053\u8fd9\u4e9b\u4ee5\u540e\u5c31\u5f88\u7b80\u5355\u5566\uff0c\u8fd9\u5c31\u662f\u6700\u666e\u901a\u7684\u9ad8\u7cbe\u5ea6\u4e86\n\u4e0b\u6ee1\u662f\u4ee3\u7801\uff0c\u505a\u4e86\u4e00\u70b9\u5c0f\u624b\u811a\uff0c\u76f4\u63a5\u590d\u5236w\u4e00\u4e2a\u70b9\n\n\uff08\u6211\u627f\u8ba4\uff0c\u6b63\u5e38\u4eba\u90fd\u770b\u5f97\u51fa\u6765\uff09~~\uff08\u770b\u4e0d\u51fa\u6765\u7684\u5c31\u4e00\u5b9a\u662f\u5927\u4f6c\u5566\uff09~~\n### p.s.\u4ee3\u7801\u770b\u8d77\u6765\u6bd4\u8f83\u957f\uff0c\u5176\u5b9e\u662f\u6bcf\u4e00\u4e2a\u62ec\u53f7\u90fd\u6362\u884c\u4e86\uff0c\u771f\u5b9e\u957f\u5ea6\u4e00\u822c\n\n------------\n\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n,a[101],b[101],ans,i;\nvoid init(int a[])                         //\u5c06\u6570\u4e32s\u8f6c\u5316\u4e3a\u6574\u6570\u6570\u7ec4a\n{\n\tstring s;\n\tcin>>n>>s;                        //\u8bfb\u5165\u5b57\u7b26\u4e32s\n\tmemset(a,0,sizeof(a));            //\u6570\u7ec4a\u6e050\n\ta[0]=s.length();                  //\u7528a[0]\u8ba1\u7b97\u5b57\u7b26\u4e32s\u7684\u4f4d\u6570\n\tfor(i=1; i<=a[0]; i++)\n\t{\n\t\tif(s[a[0]-i]>='0'&&s[a[0]-i]<='9')\n\t\t{\n\t\t\ta[i]=s[a[0]-i]-'0';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ta[i]=s[a[0]-i]-'A'+10;\n\t\t}\n\t}\n\n}\nbool check(int a[])          //\u5224\u522b\u6574\u6570\u6570\u7ec4a\u662f\u5426\u4e3a\u56de\u6587\u6570\n{\n\tfor(i=1; i<=a[0]; i++)\n\t{\n\t\tif(a[i]!=a[a[0]-i+1])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nvoid  jia(int a[])          //\u6574\u6570\u6570\u7ec4a\u4e0e\u5176\u53cd\u5e8f\u6570b\u8fdb\u884cn\u8fdb\u5236\u52a0\u6cd5\u8fd0\u7b97\n{\n\tfor(int i=1; i<=a[0]; i++)\n\t{\n\t\tb[i]=a[a[0]-i+1];    //\u53cd\u5e8f\u6570b\n\t}\n\tfor(int i=1; i<=a[0]; i++)\n\t{\n\t\ta[i]+=b[i];          //\u9010\u4f4d\u76f8\u52a0\n\t}\n\tfor(int i=1; i<=a[0]; i++)                     //\u5904\u7406\u8fdb\u4f4d\n\t{\n\t\ta[i+1]+=a[i]/n;\n\t\ta[i]%=n;\n\t}\n\tif(a[a[0]+1]>0)\n\t{\n\t\ta[0]++;    //\u4fee\u6b63\u65b0\u7684a\u7684\u4f4d\u6570\uff08a+b\u6700\u591a\u53ea\u80fd\u7684\u4e00\u4e2a\u8fdb\u4f4d\uff09\n\t}\n}\nint main()\n{\n\tinit(a);\n\tif(check(a))\n\t{\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\tans=0;                            //\u6b65\u6570\u521d\u59cb\u5316\u4e3a0\n\twhile(ans++<=30)\n\t{\n\t\tjia(a);\n\t\tif(check(a))\n\t\t{\n\t\t\tcout<<\"STEP=\"<<ans<<endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"Impossible\"<<endl;             //\u8f93\u51fa\u65e0\u89e3\u4fe1\u606f\n\treturn 0;\n}\n\n```\n\n\u4e0a\u4e00\u6b21\u4ea4\u9898\u89e3\u56e0\u683c\u5f0f\u4e0d\u9f50\u6ca1\u6709\u8fc7\uff0c\u8fd9\u4e00\u6b21\u6211\u52aa\u529b\u4e86\u554a\n\n~~\uff08\u6211\u77e5\u9053\u5df2\u7ecf\u6709\u8fd9\u4e48\u591a\u9898\u89e3\u4e86\uff0c\u57fa\u672c\u8fc7\u4e0d\u4e86\uff09~~\n\n##### \u80fd\u770b\u5230\u8fd9\u91cc\uff0c\u611f\u6fc0\u6d41\u6d95 orz",
        "postTime": 1565266299,
        "uid": 128295,
        "name": "assassinRay",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u51fa\u73b0\u4e8616\u8fdb\u5236\uff0c\u4f46\u662f\u6211\u4eec**\u5e76\u4e0d\u9700\u8981**\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6b21\u8ba1\u7b97\u60f3\u8c61\u6210\u4e00\u6b21**\u9ad8\u7cbe\u5ea6\u52a0\u6cd5**\uff0c\u8fd9\u6837\u53ea\u8981\u5728\u5e73\u65f6\u5199\u7684**\u9ad8\u7cbe\u5ea6\u52a0\u6cd5**\u4e2d\u5427\"10\"\u6362\u6210\"n\"\uff0c\u5c31\u53ef\u4ee5\u4e0d\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\u800c\u8fdb\u884c\u8ba1\u7b97\u4e86\u3002\n\n\u540c\u65f6\u8c8c\u4f3c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528**O(n)**\u626b\u4e00\u904d\u9ad8\u7cbe\u5ea6\u6570\u7ec4\u5224\u65ad\u662f\u5426\u56de\u6587\uff0c\u4f46\u5982\u679c\u4e0d\u9ad8\u7cbe\u7684\u8bdd\uff0c\u8fd8\u8981\u52a0\u52a0\u51cf\u51cf\u819c\u819c\u4ec0\u4e48\u7684\u3002\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n\nchar s[201];\nint a[401],top;         //\u6570\u7ec4a\u4e3a\u9ad8\u7cbe\u5ea6\u6570\u7ec4\uff0ctop\u4e3a\u5b83\u7684\u957f\u5ea6\ninline bool judge()  //\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u56de\u6587\n{\n    int t=top/2;\n    for (int i=0;i<=t;++i)\n        if (a[i]!=a[top-i])\n            return true;\n    return false;\n}\nint main()\n{\n    int n,step=0;\n    scanf(\"%d%s\",&n,s);\n    top=strlen(s)-1;\n    for (int i=0;i<=top;++i)   //\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57\n        if (s[i]>='0'&&s[i]<='9')\n            a[top-i]=s[i]-'0';\n        else\n            a[top-i]=s[i]-55;   //\u6ce8\u610f16\u8fdb\u5236\n    while (judge())\n    {\n        if (step>30)  //\u5982\u679c\u8d85\u8fc7\u4e09\u5341\u6b65\u5c31\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n            return puts(\"Impossible!\")&0;\n        for (int i=0;i<=top;++i)  //\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u4e0d\u662f\u5f88\u4e60\u60ef\u8fb9\u7b97\u8fb9\u8fdb\u4f4d\uff0c\u4e60\u60ef\u7b97\u5b8c\u5728\u8fdb\u4f4d\n            if (top-i>=i)\n                a[i]+=a[top-i];\n            else\n                a[i]=a[top-i];  //\u56e0\u4e3a\u6700\u540e\u7b97\u51fa\u6765\u7684\u6570\u5982\u679c\u4e0d\u8fdb\u4f4d\u7684\u8bdd\u5c31\u4e00\u5b9a\u662f\u56de\u6587\u7684\uff0c\u6240\u4ee5\u6570\u7ec4\u7684\u540e\u4e00\u534a\u76f4\u63a5\u590d\u5236\u524d\u4e00\u534a\u5c31\u597d\u4e86\n        for (int i=0;i<=top;++i) //\u8fdb\u4f4d\n            if (a[i]>=n)\n                a[i+1]++,a[i]-=n;\n        if (a[top+1])  //\u6ce8\u610f\u5982\u679c\u9996\u4f4d\u8fdb\u4f4d\uff0c\u957f\u5ea6\u8981\u589e\u52a0\n            top++;\n        step++;\n    }\n    printf(\"STEP=%d\\n\",step);\n    return 0;\n}\n```",
        "postTime": 1507041069,
        "uid": 38029,
        "name": "zhyyng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "# \u849f\u84bb\u5728\u4f55\u5904\uff1f\u5c31\u5728\u6b64\u5904\u554a\uff01\n\u672c\u849f\u84bb\u56de\u6765\u4e86\u3002\n\n\u4eca\u5929\u7684\u91cd\u70b9\u662f\u8bb2\u8fd9\u9053\u9898\u76ee\uff0c\u8fd9\u9053\u9898\u9700\u8981\u7279\u522b\u7684\u7ec6\u5fc3\u3002\n\n\u800c\u6211\u5462\uff0c\u5728\u90a3\u8fb9\u8c03\u8bd5\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u6709\u6728\u6709\u770b\u5230\u6211\u5728\u5b66\u672f\u533a\u53d1\u7684\u5e16\u5b50\uff1f\uff1f\uff1f\n\n\n###  -----\u8fd9\u662f\u4e00\u6761\u5341\u5206\u534e\u4e3d\u7684\u5206\u5272\u7ebf\uff08\u4f60\u5e94\u8be5\u77e5\u9053\u5b83\u5728\u5206\u4ec0\u4e48\uff0c\u8bf7\u8ba4\u771f\u8d77\u6765\uff09-------\n\u4ee5\u4e0b\u662f\u89e3\u8fd9\u9053\u9898\u7684\u6b65\u9aa4\uff1a\n\n### 1\u3001\u8f93\u5165n\u548cm\uff0c\u6ce8\u610f\u5fc5\u987b\u662f\u7528cin>>n>>m;\u5426\u5219\u4f1a\u6b7b\u7684\u5f88\u60e8\uff01\n2\u3001\u6784\u9020\u6b7b\u5faa\u73afwhile(1)\u3002\n\n   \u9996\u5148\u5199\u4e00\u4e2a\u7ed3\u675f\u6761\u4ef6\uff1a\n   \n   if(pd()==1) {cout<<\"STEP=\"<<ans;break;}\u8868\u793a\u627e\u5230\uff0c\u5e76\u4e14\u8f93\u51fa\u3001\u9000\u51fa\u6b7b\u5faa\u73af\u3002\n   \n   \u518d\u5199\u4e00\u4e2a\u7ed3\u675f\u6761\u4ef6\uff1a\n   \n   if(ans>=30{cout<<\"Impossible!\";break;}\u8868\u793a\u9898\u76ee\u4e2d\u8bf4\u7684\uff0c\u5982\u679c\u6b65\u6570\u8d85\u8fc730\u6b65\uff0c\u5219\u8f93\u51faImpossible!\n\n3\u3001\u91cd\u5934\u620f\uff1a\n\u4e00\u4e2a\u8fd0\u7b97\uff0c\u5c06\u4e24\u4e2a\u6570\u52a0\u8d77\u6765\uff0c\u5e76\u8d4b\u503c\u3002\n\n4\u3001ans++\uff0c\u8868\u793a\u8d70\u7684\u6b65\u6570\u589e\u52a0\u4e00\u3002\n\n\u597d\u4e86\uff0c\u73b0\u5728\uff0c\u5927\u5bb6\u5bf9\u4e3b\u7a0b\u5e8f\u6709\u4e86\u4e86\u89e3\uff0c\u5f00\u59cb\u544a\u8bc9\u5927\u5bb6\u5b50\u7a0b\u5e8f\uff0c\u6211\u4eec\u5148\u4ece\u91cd\u5934\u620f\u8bb2\uff1a\n\n\u8fd0\u7b97\uff1a  \u6211\u4eec\u5148\u8981\u5c06m\u6570\u7ec4\u7ffb\u4e00\u4e0b\uff0c\u5b58\u5165x\u6570\u7ec4\u4e2d\uff0c\u518d\u548cm\u6570\u7ec4\u8fdb\u884c\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\uff0c\u671f\u95f4\uff0c\u8981\u6ce8\u610f\uff0c\u4ed6\u4eec\u5982\u679c\u662f\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5219ABCD\u2026\u2026\uff0c\u5c31\u8981\u5c06\u4ed6\u4eec\u8f6c\u6362\u6210\u6570\u5b57\uff0c\u5c06\u76f8\u52a0\u7684\u7ed3\u679c\u5b58\u5165s\u6570\u7ec4\u4e2d\uff0c\u56e0\u4e3a\u662f\u52a0\u6cd5\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u4e0b\u4e00\u4f4d\u662f\u5426\u6bd40\u5927\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\uff0c\u8981\u5c06m\u5148\u6e05\u7a7a\uff0c\u518d\u52a0\u4e0as\u4e2d\u7684\u6570\uff0c\u6ce8\u610f\uff0c\u8fd9\u91ccs\u662f\u6570\u5b57\uff0c\u6211\u4eec\u8981\u5c06\u4ed6\u4eec\u53d8\u4e3a\u5b57\u7b26\u518d\u52a0\u8fdb\u53bb\u3002\n\n\u5224\u65ad\uff1a  \u603b\u4f53\u601d\u8def\u4e3a\u4e3e\u53cd\u4f8b\uff0c\u5982\u679c\u4e24\u7aef\u4e0d\u4e00\u6837\uff0c\u5219\u5c06bo\u53d8\u4e3a0\uff0c\u6700\u540e\u53ea\u8981\u8fd4\u56debo\u5c31\u884c\u4e86\u3002\n\n# \u4f60\u4eec\u6700\u7231\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans;\nstring m,st,s;\nint zhuanhuan2(char x)\n{\n\tif(x>=0&&x<=9) return x+'0';\n\tif(x>=10&&x<=16) return x+'A'-10;\n}\nint zhuanhuan(char x)\n{\n\tif(x>='0'&&x<='9') return x-'0';\n\tif(x>='A'&&x<='Z') return x-'A'+10;\n}\nint pd()\n{\n\tint l=m.size(),bo=1;\n\tfor(int i=0;i<l;i++)\n\t  if(m[i]!=m[l-i-1]) bo=0;\n\treturn bo;\n}\nvoid yunsuan()\n{\n\tint l=m.size(),s[210];string x=m;\n\tmemset(s,0,sizeof(s));\n\tfor(int i=0;i<l;i++) x[i]=m[l-i-1];\n\tfor(int i=1;i<=l;i++)\n\t{\n\t\ts[i]+=(zhuanhuan(x[i-1])+zhuanhuan(m[i-1]));\n\t\ts[i+1]+=s[i]/n;\n\t\ts[i]%=n;\n\t}\n\tif(s[l+1]>0) l++;m=\"\";\n\tfor(int i=0;i<l;i++) m+=zhuanhuan2(s[l-i]);\n}\nint main()\n{\n\tcin>>n>>m;\n\twhile(1)\n\t{\n\t\tif(pd()) {cout<<\"STEP=\"<<ans;break;}\n\t\tif(ans>=30) {cout<<\"Impossible!\";break;}\n\t\tyunsuan();\n\t\tans++;\n\t}\n\treturn 0;\n}\n```\n\u9632\u6284\u88ad\u4e07\u5c81\n",
        "postTime": 1572772289,
        "uid": 232930,
        "name": "\u4fee\u7f57\u6d77\u795e\u738b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u5443\uff0c\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u9898\u89e3\u597d\u50cf\u90fd\u662f\u7528\u9ad8\u7cbe\u5ea6\uff0c\u8fd9\u91cc\u7ed9\u4e00\u79cd\u4e0d\u7528\u9ad8\u7cbe\u5ea6\u7684\u3002\n\n\u5148\u8bf4\u4e00\u4e0b\u601d\u8def\uff1a\u628a\u7ed9\u5b9a\u7684\u6570\u5f53\u6210\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u7136\u540e\u7528\u6570\u7ec4\u50a8\u5b58\u6bcf\u4e00\u4f4d\u7684\u503c\uff0c\u63a5\u7740\u5c31\u662f\u6a21\u62df\u3002\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    int p=1,ans=0,i,j,n,x,gg=0,jj,a[105],b[105];\n    char c[105];\n    scanf(\"%d\",&n);\n    scanf(\"%s\",c);\n    j=0;\n    while(c[j]!=0)\n    {\n        if((c[j]>='0')&&(c[j]<='9'))a[j+1]=c[j]-'0';\n        else a[j+1]=c[j]-'A'+10;/*\u5148\u8f6c\u5316\u4e00\u4e0b\uff0c\u65b9\u4fbf\u8fdb\u884c\u540e\u9762\u7684\u52a0\u6cd5\u8fd0\u7b97*/\n        j++;\n    }\n    while(ans<=30)/*\u9898\u76ee\u8981\u6c42*/\n    {\n        gg=0;\n        i=1;\n```\n/\\*\u6a21\u62df\u8be5\u6570\u6b63\u53cd\u76f8\u52a0\\*/\n```cpp\nwhile(i<=j)\n        {\n            x=a[j-i+1]+a[i]+gg;\n            gg=x/n;/*gg\u8868\u793a\u8fdb\u4f4d*/\n            b[j-i+1]=x%n;\n            i++;\n        }\n        if(gg!=0)b[0]=gg;\n        if(gg!=0)\n        {\n            for(i=1;i<=j+1;i++)a[i]=b[i-1];\n            j++;\n        }\n        else for(i=1;i<=j;i++)a[i]=b[i];\n        ans++;\n        i=1;\n        jj=j;\n        p=1;\n        while(i<=jj/*\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570*/\n        {\n            if(a[i]!=a[jj])p=0;\n            i++;\n            jj--;\n        }\n        if(p)\n        {\n            printf(\"STEP=%d\",ans);\n            return 0;\n        }\n    }\n    printf(\"Impossible!\");\n    return 0;\n}/*\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u53ef\u80fd\u8bf4\u7684\u4e0d\u6e05\u695a\u3002\u3002\u3002*/\n```",
        "postTime": 1511843956,
        "uid": 71267,
        "name": "hong123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684dalao\u90fd\u5199\u7684\u5f88\u597d\uff0c\u63a5\u4e0b\u6765\u770b\u770b\u6211\u7684qwq\n\n\u5176\u5b9e\u65b9\u6cd5\u5c31\u4e24\u6b65\uff1a\n\n### 1\u3001\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u5982\u679c\u662f\u5219\u8f93\u51fa\u7ed3\u679c\uff0c\u5426\u5219\u6267\u884c\u7b2c\u4e8c\u6b65\u3002\n\n### 2\u3001\u8fdb\u884c\u52a0\u6cd5\uff0c\u7136\u540e\u91cd\u590d\u7b2c\u4e00\u6b65\u3002\n\n\u597d\u4e86\uff0c\u53ef\u80fd\u8fd8\u4f1a\u6709\u70b9\u61f5\uff0c\u4ee3\u7801\u89e3\u91ca\u66f4\u5bb9\u6613\u7406\u89e3qwq\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;//\u5927\u5bb6\u90fd\u61c2\u5c31\u4e0d\u8bf4\u4e86\nint n;//\u9898\u76ee\u4e2d\u7684N\u8fdb\u5236\nstring m;//\u9898\u76ee\u4e2dM\u6709100\u4f4d\uff01\uff01\uff01\u5fc5\u987b\u7528\u5b57\u7b26\u4e32\uff08\u4e0d\u592a\u61c2\u697c\u4e0b\u7684dalao\u5982\u4f55\u505a\u7684\u7528unsigned long long\u8fc7\u7684\uff1f\uff1f\uff1f\u6c42\u6307\u5bfcqwq\uff09\nint ans;\nint p;\nbool hw(string st)//\u5224\u65ad\u662f\u5426\u56de\u6587\n{\n\tint ln=st.size(); \n\tfor(int i=0;i<ln/2;i++)\n\t\tif(st[i]!=st[ln-1-i])return 0;//\u82e5\u4e0d\u4e86\u89e3\u8fd9\u6761\u516c\u5f0f\uff0c\u5927\u5bb6\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u4e0b\n\treturn 1;\n}\nint zhuan(char x)//\u5c06\u5b57\u7b26\u8f6c\u6210\u6570\u5b57\n{\n\tif(x>='0'&&x<='9')return int(x-48);\n\telse//\u4ee5\u4e0b\u5224\u65ad\u662f\u56e0\u4e3a\u670916\u8fdb\u5236\n\t{\n\t\tif(x=='A')return 10;\n\t\tif(x=='B')return 11;\n\t\tif(x=='C')return 12;\n\t\tif(x=='D')return 13;\n\t\tif(x=='E')return 14;\n\t\tif(x=='F')return 15;\n\t}\n}\nchar zhuan_h(int x)//\u5c06\u6570\u5b57\u8f6c\u56de\u5b57\u7b26\n{\n\tif(x>=0&&x<=9)return char(x+48);\n\telse//\u548c\u4e0a\u9762\u4e00\u6837\n\t{\n\t\tif(x==10)return char('A');\n\t\tif(x==11)return char('B');\n\t\tif(x==12)return char('C');\n\t\tif(x==13)return char('D');\n\t\tif(x==14)return char('E');\n\t\tif(x==15)return char('F');\n\t}\n}\nstring bian(string a,string b)//\u505a\u52a0\u6cd5\n{\n\tfor(int i=0;i<b.size()/2;i++)//\u8fdb\u884c\u53cd\u8f6c\uff08\u697c\u4e0bdalao\u7528reverse(a.begin(), a.end());\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u4f69\u670d\uff09\n\t\tswap(b[i],b[b.size()-1-i]);\n\tstring c=\"\";//\u7528\u6765\u8bb0\u5f55\u7b49\u4f1a\u7684\u548c\n\tint jw=0,aw=0,bw=0,cw=0;\n\tfor(int i=a.size()-1;i>=0;i--)\n\t{\n\t\taw=zhuan(a[i]);//\u5c06a[i]\u8f6c\u6210\u6570\u5b57\n\t\tbw=zhuan(b[i]);//\u5c06b[i]\u8f6c\u6210\u6570\u5b57\n\t\tcw=(aw+bw+jw)%n;//\u770bc\u5b57\u7b26\u4e32\u8fd9\u4e00\u4f4d\u662f\u51e0\n\t\tif(aw+bw+jw>=n)jw=1;//\u5224\u65ad\u662f\u5426\u8fdb\u4f4d\n\t\telse jw=0;\n\t\tc=zhuan_h(cw)+c;//\u5c06\u8fd9\u4e00\u4f4d\u7684\u6570\u8f6c\u56de\u5b57\u7b26\u653e\u5728c\u5b57\u7b26\u4e32\uff0c\u6ce8\u610f\uff1a\u8981\u653e\u5728\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u662f\u5012\u7740\u7b97\u7684\n\t}\n\tif(jw==1)c='1'+c;//\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\u4e86\u6700\u540e\u4e00\u4f4d\u8fd8\u4f1a\u8fdb\u4f4d\n\treturn c;//\u8fd4\u56de\u5f97\u51fa\u7684\u7ed3\u679c\n} \nint main()\n{\n\tcin>>n;\n\tcin>>m;\n\tp=hw(m);//\u5224\u65ad\u662f\u5426\u56de\u6587\n\twhile(p==0)\n\t{\n\t\tif(ans>30)//\u5982\u679c\u65b9\u6848\u6570>30\u8f93\u51fa\u201cImpossible!\u201d\n\t\t{\n\t\t\tcout<<\"Impossible!\";\n\t\t\texit(0);\n\t\t}\n\t\tans++;//\u65b9\u6848\u6570\u7d2f\u52a0\n\t\tm=bian(m,m);//\u5c06M\u8fdb\u884c\u505a\u52a0\u6cd5\n\t\tp=hw(m);//\u522b\u5fd8\u4e86\u5224\u65ad\u56de\u6587\n\t}\n\tcout<<\"STEP=\"<<ans;//\u8f93\u51fa\u7ed3\u679c\n\treturn 0; //\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n",
        "postTime": 1572419951,
        "uid": 165328,
        "name": "Yo_haor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u6d4f\u89c8\u4e86\u4e00\u5708\u6ca1\u6709\u770b\u5230\u4f7f\u7528 Python \u7684\uff0c \u8fd9\u513f\u7528 python \u6709\u4e00\u4e2a\u5927\u5751\uff0c\u5c31\u662f\u8bfb\u5165\u7684\u6570\u636e\u6709\u4e00\u4e2a\u56de\u8f66\uff0c\u5982\u679c\u6ca1\u6709\u5904\u7406\u7684\u8bdd\u5c31\u4f1a\u5168\u90e8 RE\n\n\u8fd8\u6709\u4e00\u4e2a\u5751\u662f\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u662f N \u8fdb\u5236\u7684\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u5224\u65ad\u56de\u6587\u4e32\u7684\u65f6\u5019\u4e0d\u7528\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u8fdb\n\n\u5982\u4e0b\u7684\u4ee3\u7801\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528 int(ch,base=n) \u800c\u4e0d\u5904\u7406\u5f02\u5e38\u7684\u8bdd\u5c31\u4f1a\u5168\u90e8 RE \uff080\u5206\uff09\n\n```python\n\nn = int(input())\ninstr = input()\na = []\nfor ch in instr:\n    try:\n        a.append(int(ch,base=n))\n    except Exception:\n        # must handle exception !!!\n        pass\n\nstep = 0\nwhile step <= 30:\n    b = a[::-1]\n    if a == b:\n        break\n\n    # add b and b.revert()\n    a = []\n    up = 0\n    for index in range(len(b)):\n        s = b[index] + b[-1 - index] + up\n        a.append(s % n)\n        up = 1 if s >= n else 0 \n    if up == 1:\n        a.append(1)\n    step += 1\n\nif step <= 30:\n    print(\"STEP=\"+str(step))\nelse:\n    print(\"Impossible!\")\n```\n",
        "postTime": 1566987122,
        "uid": 243799,
        "name": "xd_ydchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "**\u770b\u4e86\u8fd9\u4e48\u591adalao\u7684\u9898\u89e3\uff0c\u4f5c\u4e3a\u849f\u84bb\u7684\u6211\u611f\u89c9\u5c31\u662f ~~\u770b\u4e0d\u61c2~~** **\u597d\u9ad8\u7aef**\n\u4e3a\u4e86\u9075\u5faa\u66b4\u529b\u51fa\u5947\u8ff9\u7684\u7b56\u7565\uff0c\u6211\u51b3\u5b9a\u653e\u5f03\u601d\u8003\uff0c\u6253\u4e2a\u5de7\u5999\u7684\u66b4\u529b\u3002\n\n\u9996\u5148\u7ed9\u51fa\u7b80\u5355\u7684\u56de\u6587\u6570\u5224\u65ad\u6a21\u677f\n\n```cpp\nbool ch()\n{\n\tfor(int i=1;i<=r/2;i++)\n\t  if(a[i]!=a[r-i+1])\n\t  return 0;\n\treturn 1;\n}\n```\n\u4e00\u5f00\u59cb\u5ffd\u7565\u4e8616\u8fdb\u5236\u7684\u5b57\u6bcd\uff0c\u6240\u4ee5WA\u4e86\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u6211\u51b3\u5b9a\u7528\u5b57\u7b26\u4e32\u8f93\u5165\n```\n   cin>>n>>d;\n\tfor(int i=0;i<strlen(d);i++)\n\t{\n\t\tif(d[i]=='A')//\u5bf9\u5341\u516d\u8fdb\u5236\u7279\u5224\n\t\ta[i+1]=10;\n\t\telse if(d[i]=='B')\n\t\ta[i+1]=11;\n\t\telse if(d[i]=='C')\n\t\ta[i+1]=12;\n\t\telse if(d[i]=='D')\n\t\ta[i+1]=13;\n\t\telse if(d[i]=='E')\n\t\ta[i+1]=14;\n\t\telse if(d[i]=='F')\n\t\ta[i+1]=15;\n\t\telse a[i+1]=d[i]-'0';//\u5199\u9ebb\u70e6\u4e86\uff0c\u6211\u53ea\u662f\u5355\u7eaf\u7684\u4e0d\u60f3\u7528\u8111\u5b50^=^\n\t}\n```\n\u4e3a\u4e86\u65b9\u4fbf\u8fdb\u5236\u8ba1\u7b97\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae**\u624b\u5199\u9ad8\u7cbe\u5ea6**\n\n\u8fd9\u91cc\u9700\u8981\u4e00\u4e2a\u5c0f\u7a8d\u95e8\uff0c\u4f60\u4f1a\u53d1\u73b0123\u548c321\u5728\u8fd9\u9053\u9898\u7684**\u8ba1\u7b97**\u4e0a\u662f\u6ca1\u6709\u533a\u522b\u7684\uff0c\u8fd9\u4f7f\u4ee3\u7801\u7b80\u5355\u4e86\u8bb8\u591a\n\n\u4e8e\u662f\u5f97\u51fa\u9ad8\u7cbe\u8fd0\u7b97\u4ee3\u7801\n\uff08a+b=c,r\u662f\u4f4d\u6570\uff09\n```\nfor(int i=1;i<=r;i++)\n{\n   b[i]=a[r-i+1];//b\u662fa\u53cd\u8fc7\u6765\n}\nfor(int i=1;i<=r;i++)\n {\n\tc[i]=c[i]+a[i]+b[i];//\u770b\u4e0a\u9762\u89e3\u91ca\n\tif(c[i]>n-1)\n\t{\n\t\tc[i]%=n;\n\t\tc[i+1]++;\n\t\tif(i==r)\n\t\tk=r+1;//\u8fdb\u4f4d\n   }\n}\nr=k;//\u8bb0\u5f55\u65b0\u4f4d\u6570\n```\n\u57fa\u672c\u7684\u51e0\u5927\u5757\u5199\u597d\uff0c\u5b8c\u6574\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,r,k;\nchar d[10008];\nint a[10008],b[10008],c[10008],step;\nbool ch()\n{\n\tfor(int i=1;i<=r/2;i++)\n\tif(a[i]!=a[r-i+1])\n\treturn 0;\n\treturn 1;\n}\nint main()\n{\n    cin>>n>>d;\n    \n\tfor(int i=0;i<strlen(d);i++)\n\t{\n\t\tif(d[i]=='A')\n\t\ta[i+1]=10;\n\t\telse if(d[i]=='B')\n\t\ta[i+1]=11;\n\t\telse if(d[i]=='C')\n\t\ta[i+1]=12;\n\t\telse if(d[i]=='D')\n\t\ta[i+1]=13;\n\t\telse if(d[i]=='E')\n\t\ta[i+1]=14;\n\t\telse if(d[i]=='F')\n\t\ta[i+1]=15;\n\t\telse a[i+1]=d[i]-'0';\n\t}\n\tr=strlen(d);\n    while(!ch()&&step<=30)\n    {\n\tfor(int i=1;i<=r;i++)\n\t { \n             b[i]=a[r-i+1];\n    \t }\n    \tfor(int i=1;i<=r;i++)\n    \t{\n\t    c[i]=c[i]+a[i]+b[i];\n\t    if(c[i]>n-1)\n\t    {\n\t\tc[i]%=n;\n\t\tc[i+1]++;\n\t\tif(i==r)\n\t\tk=r+1;\n\t    }\n\t}\n\tr=k;\n\tfor(int i=1;i<=r;i++)\n\t{\n\t    a[i]=c[i];\n\t\t  c[i]=0;//\u590d\u5236\u7ed9a\uff0c\u51c6\u5907\u4e0b\u4e2a\u5faa\u73af\n\t}\n\tstep++;\n    }\n    if(ch())\n    cout<<\"STEP=\"<<step;\n    else cout<<\"Impossible!\";//\u5343\u4e07\u4e0d\u8981\u6253\u9519\uff0c\u5f88\u4e8f\uff01\n}\n```\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u57fa\u672c\u53ef\u4ee5\u5f53\u6210\u6a21\u62df\u6c34\u9898\uff0c\u4f46\u662f\u51e0\u4e2a\u5751\u70b9\u5343\u4e07\u8981\u6ce8\u610f\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u6c42\u8fc7\uff08^0^\uff09\u5566\u5566\u5566\u5566\u5566\u5566\n\n",
        "postTime": 1573397502,
        "uid": 125402,
        "name": "\u745c\u745c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "1\u3001\u8fd9\u4e2a\u9898\u89e3\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u5b8c\u6210\u4efb\u610f\u8fdb\u5236\u3002\u5982\u679c\u662f\u4efb\u610f\u8fdb\u5236\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u5728\u8f93\u5165\u7684\u65f6\u5019\u5224\u65ad\u4e86\uff0c\u7edf\u4e00\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u8f6c\u5341\u8fdb\u5236\u7684\u65f6\u5019\u68c0\u6d4b\u4e00\u4e0b\u5927\u5c0f\u5199\u5b57\u6bcd\u5c31\u597d\u4e86\u3002\n\n2\u3001\u8fd9\u4e2a\u9898\u5176\u5b9e\u5c31\u662f\u5e38\u89c1\u7684\u56de\u6587\u6570\u9898\u7684\u5c0f\u578b\u6269\u5c55\u3002\u5982\u679c\u771f\u7684\u6df1\u5165\u7406\u89e3\u4e86\u4ec0\u4e48\u662f\u8fdb\u5236\uff0c\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\u3002\n\n3\u300130\u6b21\u7d2f\u52a0\u7684\u6570\u5b57\u4e0d\u4f1a\u8d85\u8fc710^16\uff0c2^63\u662f9.223E18\uff0c\u6240\u4ee564\u4f4d\u6574\u6570\u5c31\u591f\u7528\uff0c\u4e0d\u9700\u8981\u9ad8\u7cbe\u5ea6\u3002\u5982\u679c\u7528\u4e86\u9ad8\u7cbe\u5ea6\u4f1a\u66f4\u590d\u6742\u3002\n\n```c\n#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    int sn;\n    char nums[8] = { 0 };//\u9898\u76ee\u4e2d\u6570\u5b57\u4e0d\u8d85\u8fc7100\uff0c2\u8fdb\u5236\u7684100\u662f7\u4f4d\u6570\uff0c\u7559\u4e00\u4e2a\u7ed9\u5c3e\u96f6\u3002\n    long long num = 0;\n    long long sum = 0, tmp;\n    int i, j, len;\n\n    scanf(\"%d\", &sn);\n    if (sn == 16)\n    {\n        scanf(\"%x\", &num); //\u7531\u4e8e16\u6bd4\u8f83\u7279\u6b8a\uff0c\u5355\u72ec\u62ff\u51fa\u6765\u5904\u7406\n    }\n    else\n    { \n        scanf(\"%s\", nums); //10\u4ee5\u4e0b\u7684\u7528\u5b57\u7b26\u4e32\u5904\u7406\n\n        len = strlen(nums); //\u4ee5\u4e0b\u662f\u624b\u52a8\u4efb\u610f\u8fdb\u5236\u8f6c10\u8fdb\u5236\uff0c\u7531\u4e8e\u53ea\u670910\u4ee5\u4e0b\u6240\u4ee5\u5ffd\u7565\u5b57\u6bcd\uff0c\u5b9e\u9645\u53ea\u8981\u52a0\u4e2a\u5224\u65ad\u53ef\u4ee536\u8fdb\u5236\u4ee5\u4e0b\u8f6c10\u8fdb\u5236\u3002\n        for (i = 0; i < len; i++)\n        {\n            tmp = nums[i] - '0';\n            for (j = 0; j < len - i - 1; j++) //\u5176\u5b9e\u5c31\u662fpow\u51fd\u6570\n            {\n                tmp *= sn;\n            }\n            num += tmp; //\u6700\u7ec8\u7ed3\u679c\u5728num\u91cc\uff0c\u662f\u5b57\u7b26\u4e32\u6570\u8f6c\u4e3a\u5341\u8fdb\u5236\u7684\u7ed3\u679c\u3002\n        }\n    }\n\n    for (i = 0; i < 30; i++, sum = 0)\n    {\n        for (tmp = num; tmp; tmp /= sn)\n        {\n            sum = sum * sn + tmp % sn;\n        }//\u8fd9\u4e2a\u5faa\u73af\u5176\u5b9e\u53ef\u4ee5\u5b8c\u6210\u4efb\u610f\u8fdb\u5236\u7684\u9006\u5e8f\u3002\u4e4b\u524d\u9006\u5e8f\u7684\u662f\u5341\u8fdb\u5236\u6240\u4ee5\u90fd\u662f\u7528\u768410\u3002\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u7528\u5341\u8fdb\u5236\u7684\u8fd0\u7b97\u5b8c\u6210\u4e86\u4efb\u610f\u8fdb\u5236\u7684\u6570\u5b57\u9006\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u77ed\u9664\u6cd5\u7684\u7279\u6b8a\u5e94\u7528\uff0c\u77ed\u9664\u6cd5\u6570\u5b57\u9006\u7740\u5199\u5c31\u662f\u8f6c\u6362\u540e\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u987a\u7740\u5199\u5c31\u662f\u5012\u8fc7\u6765\u7684\u3002\n\n        if (sum == num)\n        {\n            break;\n        }\n        num += sum;\n    }//\u9898\u76ee\u662f\u591a\u8fdb\u5236\uff0c\u5b9e\u9645\u8fd8\u662f\u56de\u6587\u6570\u7684\u8001\u5faa\u73af\u3002\n\n    if (i == 30) //\u5982\u679c\u6ca1\u6709break\u51fa\u6765\uff0c\u5faa\u73af\u7ed3\u675f\u7684i\u5c06\u4f1a\u662f30\u3002\n    {\n        printf(\"Impossible!\");\n    }\n    else\n    {\n        printf(\"STEP=%d\", i);\n    }\n\n    return 0;\n}\n```",
        "postTime": 1528535296,
        "uid": 102722,
        "name": "Clairad",
        "ccfLevel": 0,
        "title": "\u901a\u8fc7\u5bf9\u8fdb\u5236\u7684\u7406\u89e3\u89e3\u9898"
    },
    {
        "content": "10\u8fdb\u5236\u8f6cN\u8fdb\u5236\u8fd8\u662f\u8981\u5355\u72ec\u9876\u4e00\u4e2a\u51fd\u6570\u624d\u884c\u554a\n\n```python\ndef tenToAn(n, x):\n    a = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n    b = ''\n    while n > 0:\n        y = n % x  # \u4f59\u6570\n        n //= x  # \u5546\n        b = b + a[y]\n    return b\n\n\ndef main():\n    N = int(input())\n    M = input()\n    ans = 0\n    while(M != M[::-1]) and ans <= 30:\n        M = tenToAn(int(M, N) + int(M[::-1], N), N)\n        ans += 1\n    if ans <= 30:\n        print('STEP=%s' % ans)\n    else:\n        print('Impossible!')\n\n\nif __name__ == '__main__':\n    main()\n```",
        "postTime": 1544143372,
        "uid": 33147,
        "name": "xiaosongliu",
        "ccfLevel": 0,
        "title": "Python3 \u89e3\u51b3 P1015\u56de\u6587\u6570"
    },
    {
        "content": "###\u8981\u6ce8\u610f\uff01\n\n1.\u56de\u6587\u6570\u662f\u8f93\u5165\u7684N\u8fdb\u5236\u5f62\u5f0f\u662f\u5426\u662f\u56de\u6587\u6570\uff0c\u5f00\u59cb\u4e00\u76f4\u5224\u65ad\u8f6c\u6362\u621010\u8fdb\u5236\u4ee5\u540e\u662f\u4e0d\u662f\u56de\u6587\u6570\uff08\u4e0d\u8fc7\u5e94\u8be5\u5927\u5bb6\u4e0d\u4f1a\u72af\u8fd9\u4e2a\u9519\uff09\n\n2.\u7528JAVA\u5199\u7684\uff01\u5927\u6570\u52a0\u6cd5\uff0c\u4efb\u610f\u8fdb\u5236\u8f6c\u6362\u90fd\u662f\u8c03\u7528\u7684jdk API\uff08\u7eaf\u7cb9\u4e3a\u4e86\u719f\u6089jdk\u7684API\u5237OJ\uff09,\u4e0d\u8fc7\u4ee3\u7801\u633a\u77ed\u7684\uff01\u6548\u7387\u4e0d\u662f\u6700\u597d\u7684\uff01\uff01\uff01\u4f46\u662f\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\n\n```cpp\nimport java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main{\n\n    public static void main(String[] args) {\n        try {\n            Scanner sc = new Scanner(System.in);\n            int N = Integer.parseInt(sc.nextLine());\n            String strNumber = sc.nextLine();\n            sc.close();\n\n            for (int count = 1; count <= 30; count++) {\n                BigInteger decimalNumber = new BigInteger(strNumber, N);\n                // \u53cd\u8f6c\u540e\u7684\u6570\n                String reverseStrNumber = new StringBuffer(strNumber).reverse().toString();\n                BigInteger reverseDecimalNumber = new BigInteger(reverseStrNumber, N);\n\n                // \u4e24\u4e2a\u6570\u7684\u548c\n                BigInteger newDecimalNumber = decimalNumber.add(reverseDecimalNumber);\n                String strNewNumber = newDecimalNumber.toString(N);\n\n                int length = strNewNumber.length();\n                String preHalf = strNewNumber.substring(0, length / 2);\n                String lastHalf = length % 2 == 0 ? strNewNumber.substring(length / 2, length)\n                        : strNewNumber.substring(length / 2 + 1, length);\n\n                if (preHalf.equals(new StringBuffer(lastHalf).reverse().toString())) {\n                    System.out.println(\"STEP=\" + count);\n                    return;\n                } else {\n                    strNumber = strNewNumber;\n                }\n            }\n\n            System.out.println(\"Impossible!\");\n        } catch (Exception e) {\n            System.out.println(\"STEP=1\");\n        }\n    }\n}\n```",
        "postTime": 1512792465,
        "uid": 77884,
        "name": "weisiqian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "```cpp\n//\u8fd9\u9898\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u9ad8\u7cbe\n//\u6839\u636e\u6570\u636e\u8303\u56f4\uff0cn\u53ef\u80fd\u4e3a2~10\u4e4b\u95f4\u7684\u6574\u6570\u6570\u6216\u800516\uff0c\u6240\u4ee5\u6211\u4eec\u5f00long long\uff0c\u5206\u60c5\u51b5\u8ba8\u8bba\u5373\u53ef\n//\u7b97\u6cd5\uff1a\u65e0\u8111\u6a21\u62df\n//\u82e5\u5f53\u524d\u7684m\u4e0d\u662f\u56de\u6587\u4e32\uff0c\u5219\u5bf9m\u8fdb\u884c\u64cd\u4f5c\uff0cans++\uff0c\u76f4\u5230m\u53d8\u6210\u56de\u6587\u4e32\u4e3a\u6b62\n#include <bits/stdc++.h>//\u4e07\u80fd\u5e93\uff0c\u5728NOIP\u7b49\u6bd4\u8d5b\u4e2d\u5343\u4e07\u4e0d\u8981\u7528\u8fd9\u4e2a\u5e93\nusing namespace std;\ntypedef long long ll;//\u58f0\u660ell\u4e3along long\u7684\u201c\u522b\u540d\u201d\nll n,m;\nbool ps(ll a)//\u5224\u65ada\u662f\u5426\u4e3a\u56de\u6587\u4e32\n{\n    ll i=1,j=1;\n    while (i<=a) i*=n;//\u627e\u5230a\u7684\u6700\u5927\u4f4d\n    i/=n;\n    for (;i>=j;i/=n,j*=n) if ((a/i)%n!=(a/j)%n) return false;\n    return true;\n}\nll rev(ll a)//rev\u51fd\u6570\u8fd4\u56dea\u7ffb\u8f6c\u540e\u7684\u7ed3\u679c\n{\n    ll res=0;\n    ll i=1,j=1;\n    while (i<=a) i*=n;\n    i/=n;\n    for (;j<=a;i/=n,j*=n)\n        res+=j*((a/i)%n);\n    return res;\n}\nint main()\n{\n    scanf(\"%lld\",&n);//\u8bfb\u5165long long\u65f6\u4e00\u5b9a\u8981\u7528%lld\n    if (n==10) scanf(\"%lld\",&m);//n=10\u65f6\u76f4\u63a5scanf\n    else if (n<10)//\u82e5\u8fdb\u5236\u6570n\u975e10\u5219\u8bfb\u5165\u5b57\u7b26\u4e32\uff0c\u9010\u4f4d\u5904\u7406\n    {\n        char rc[102];\n        scanf(\"%s\",&rc);\n        ll tmp=0,b=1;\n        for (int i=strlen(rc)-1;i>=0;i--)\n        {\n            tmp+=b*(rc[i]-'0');\n            b*=n;\n        }\n        m=tmp;\n    }\n    else if (n==16)//16\u8fdb\u5236\u65f6\u7279\u6b8a\u5904\u7406A~F\u7684\u60c5\u51b5\n    {\n        char rc[102];\n        scanf(\"%s\",&rc);\n        ll tmp=0,b=1;\n        for (int i=strlen(rc)-1;i>=0;i--)\n        {\n            if ('0'<=rc[i]&&rc[i]<='9') tmp+=b*(rc[i]-'0');\n            else tmp+=b*(rc[i]-'A'+10);//\u7279\u6b8a\u5904\u7406A~F\u7684\u60c5\u51b5\n            b*=n;\n        }\n        m=tmp;\n    }\n    ll ans=0;\n    while ((!ps(m)) && ans<=30)\n    {\n        ans++;\n        m+=rev(m);\n    }\n    if (ans<=30)\n        printf(\"STEP=%lld\\n\",ans);\n    else\n        printf(\"Impossible!\\n\");\n    return 0;\n}\n```",
        "postTime": 1508172525,
        "uid": 40004,
        "name": "\u9ece\u660e\u884c\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u5199\u4e00\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\u7684\u5427\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nbool IsDigit(char ch)\n{\n    return '0' <= ch && ch <= '9';\n}\n\n/*\n\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u6309\u6307\u5b9a\u57fa\u76f8\u52a0\u4e4b\u548c\n\u6211\u7684\u610f\u601d\u662f\uff1a\nSumOf(\"4\", \"5\", 7) -> \"15\"\nSumOf(\"1\", \"10\", 2) -> \"11\"\nSumOf(\"A6\", \"B\", 16) -> \"B1\"\n*/\nstring SumOf(string a, string b, unsigned int base)\n{\n    unsigned int n = max(a.length(), b.length());\n    \n    //\u65b9\u4fbf\u8ba1\u7b97\uff0c\u8865\u4e0a\u524d\u5bfc0\n    while (a.length() < n)\n    {\n        a = '0' + a;\n    }\n    while (b.length() < n)\n    {\n        b = '0' + b;\n    }\n    \n    /*\n    \u9884\u5904\u7406A~F\n    \u2018A\u2019 => (int)('9' + 1)\n    'B' => (int)('9' + 2)\n    'C' => (int)('9' + 3)\n    \u4ee5\u6b64\u7c7b\u63a8\n    */\n    if (base > 10)\n    {\n        for (int i = 0; i < n; ++i)\n        {\n            if (!IsDigit(a[i]))\n            {\n                a[i] -= 7;\n            }\n            if (!IsDigit(b[i]))\n            {\n                b[i] -= 7;\n            }\n        }\n    }\n    \n    string strOut;\n    bool isFurther = false; //\u9700\u8981\u8fdb\u4e00????\uff1f\n    for (int i = n - 1; i >= 0; --i)\n    {\n        char ch = a[i] + b[i] - '0'; //\u521d\u6b65\u6309\u4f4d\u53d6\u548c\n        if (isFurther) //\u6536\u5230\u8d3a\u7535\uff0c\u77e5\u9053\u8981\u8fdb\u4e00\u4e86\n        {\n            ++ch;\n        }\n        if (ch >= '0' + base) //\u544a\u8bc9\u4e0b\u4e00\u4f4d\uff0c\u8fdb\u4e00\n        {\n            ch -= base;\n            isFurther = true;\n        }\n        else //\u544a\u8bc9\u4e0b\u4e00\u4f4d\uff0c\u4e0d\u8981\u8fdb\u4e00\n        {\n            isFurther = false;\n        }\n        strOut = ch + strOut;\n    }\n    \n    //\u6700\u540e\u8981\u8fdb\u4e00\u7684\u8bdd\u8fd8\u5f97\u5728\u7ed3\u679c\u7684\u6700\u524d\u9762\u518d\u8865\u4e00\u4e2a1\n    if (isFurther)\n    {\n        strOut = '1' + strOut;\n    }\n    \n  \t/*\n    \u9006\u5904\u7406A~F\n    \u2018A\u2019 <= (int)('9' + 1)\n    'B' <= (int)('9' + 2)\n    'C' <= (int)('9' + 3)\n    \u4ee5\u6b64\u7c7b\u63a8\n    */\n    if (base > 10)\n    {\n        for (char & ch : strOut)\n        {\n            if (!IsDigit(ch))\n            {\n                ch += 7;\n            }\n        }\n    }\n    return strOut;\n}\n\n//\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8be5\u503c\u6307\u793a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u56de\u6587\u4e32\nbool IsHuiwen(string str)\n{\n    int length = str.length();\n    for (int i = 0; i < (length + 1) / 2; ++i)\n    {\n        if (str[i] != str[length - 1 - i])\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\n//\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u7531\u8f93\u5165\u5b57\u7b26\u4e32\u53cd\u8f6c\u5f97\u5230\nstring ReverseOf(string str)\n{\n    reverse(str.begin(), str.end());\n    return str;\n}\n\nint main(int argc, char * argv[])\n{\n    int base;\n    string str;\n    cin >> base >> str;\n    \n    //\u5982\u679c\u539f\u6570\u5c31\u662f\u56de\u6587\u6570\uff0c\u8fd8\u7528\u7b97\u5417\uff1f\n    if (IsHuiwen(str))\n    {\n        printf(\"STEP=%d\\n\", 0);\n        return 0;\n    }\n    \n    //\u8ba1\u7b97\uff01\n    for (int i = 1; i <= 30; ++i)\n    {\n        str = SumOf(str, ReverseOf(str), base);\n        if (IsHuiwen(str))\n        {\n            printf(\"STEP=%d\\n\", i);\n            return 0;\n        }\n    }\n    \n    //30\u6b21\u7684\u8ba1\u7b97\u7ed3\u679c\u4e2d\u90fd\u6ca1\u6709\u53d1\u73b0\u56de\u6587\u4e32\n    printf(\"Impossible!\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1565242860,
        "uid": 166938,
        "name": "HQcxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u5148\u7528\u6570\u7ec4\u628a\u6570\u5b58\u8d77\u6765\uff08\u6ce8\u610f16\u8fdb\u5236\uff09\n\n\u7136\u540e\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u6bcf\u6b21\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u4e3a\u56de\u6587\n\n\u6ce8\u610f\uff1a1.\u5224\u65ad\u4f4d\u6570\uff1b\n\n2.\u6700\u540e\u4e00\u4e2a\u8fdb\u4f4d\u53ef\u80fd\u4f1a\u628a\u4f4d\u6570+1\uff1b\n\n3.\u6570\u5b57\u53ef\u80fd\u67090\uff0c\u6545\u4e0d\u80fd\u8d4b\u521d\u503c\u4e3a0\uff08\u4e0d\u7136\u5f71\u54cd\u4f4d\u6570\u5224\u65ad\uff09\n\n\u4ee3\u7801\u53ca\u6bcf\u6b65\u6ce8\u89e3\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a,b,c,d,e,jw;\nint x[200],y[200],z[200];\nstring m;\nint main()\n{\n    cin>>n>>m;\n    memset(x,-1,sizeof(x));\n    memset(y,-1,sizeof(y));\n    memset(z,-1,sizeof(z));//\u521d\u503c\u8d4b\u4e3a-1\n    c=m.size();\n    for (a=0;a<=c-1;a++)\n    {\n        if (m[a]-48>=0&&m[a]-48<=9) x[a+1]=m[a]-48;\n        if (m[a]>=65) x[a+1]=m[a]-55;\n    }//\u5c06\u8bfb\u5165\u6570\u8f6c\u4e3a\u6570\u7ec4\u5b58\u50a8\uff08\u6ce8\u610f16\u8fdb\u5236\uff09\n    for (b=1;b<=c;b++)\n        if (x[b]==x[c+1-b]) d++;\n        if (d==c) \n        {\n            cout<<\"STEP=\"<<0;\n            return 0;\n        }//\u5148\u5224\u65ad\u4e00\u6b21\u56de\u6587\n    for (a=1;a<=30;a++)\n    {\n        for (b=150;1<=b;b=b-1)\n        {\n            if (x[b]!=-1)\n            {\n                c=b;\n                break;    \n            }\n        }//\u5224\u65ad\u4f4d\u6570\n        jw=0;//**\u8fdb\u4f4d\u503c\u5f520**\n        for (b=1;b<=c+1;b++)\n        {\n            if (b==c+1&&jw!=0) \n            {\n                y[c+1]=jw;\n                c++;\n                break;\n            }//\u6700\u540e\u4e00\u6b21\u52a0\u6cd5\u6709\u53ef\u80fd\u6709\u8fdb\u4f4d\uff0c\u5355\u72ec\u5224\u65ad\n            if (b<=c)\n            {\n                y[b]=x[b]+x[c+1-b]+jw;\n                jw=y[b]/n;\n                y[b]=y[b]%n;\n            }\n        }//\u52a0\u6cd5\n        for (b=1;b<=c;b++)\n        x[b]=y[b];\n        d=0;\n        for (b=1;b<=c;b++)\n        {\n            if (x[b]==x[c+1-b]) d++;\n        }//\u5224\u65ad\u56de\u6587\n        if (d==c) \n        {\n            cout<<\"STEP=\"<<a;\n            return 0;\n        }//\u662f\u56de\u6587\u5219\u8f93\u51fa\u6b65\u6570\u548c\u9000\u51fa\n\n    }\n    cout<<\"Impossible!\";\n    return 0;\n}\n```",
        "postTime": 1505711667,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u8981\u70b9\u5728\u4e8e\u5224\u56de\u6587\u548c\u8f6c\u6362\u3002\n\n\u7a9d\u4e00\u5f00\u59cb\u7684\u601d\u8def\u662f\uff0c\u9996\u5148\u8bfb\u5165\uff0c\u7136\u540e\u8f6c\u6362\u6210\u5341\u8fdb\u5236\uff0c\u518d\u5199\u4e00\u4e2a\u5faa\u73af\uff0c\u5224\u65ad\u8fd9\u4e2a\u6570\u8f6c\u8fc7\u6765\u518d\u52a0\u4e0a\u539f\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u4ee3\u7801\u5927\u6982\u662f\u8fd9\u6837\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#define ull unsigned long long  //\u7528ull\u53ef\u8fc7\nusing namespace std;\nint n,ans,tmp;\null m;\nstring k;\null turn(string num,int jz){  //\u8f6c\u6362\u6210\u5341\u8fdb\u5236\u7684\u51fd\u6570\n    ull cnt=0;\n    for(int i=0;i<num.size();i++){\n        char c=num[i];\n        if(c<='9'&&c>='0'){  //2~10\u8fdb\u5236\n            cnt=cnt*jz+c-'0';\n        }else{\n            cnt=cnt*jz+c-'A'+10;  //\u7279\u6b8a\u5bf9\u5f8516\u8fdb\u5236\n        }\n    }\n    return cnt;\n}\null reverse(ull cnt){  //\u7ffb\u8f6c\u51fd\u6570\n    ull ans=0;\n    while(cnt!=0){  //\u6700\u57fa\u7840\u7684\u53cd\u8f6c\u7b97\u6cd5\uff0c\u4e0d\u591a\u8bb2\n        ans*=10;\n        ans+=(cnt%10);\n        cnt/=10;\n    }\n    return ans;\n}\nint main(){\n    cin>>n>>k;  //\u8bfb\u5165\n    m=turn(k,n);  //\u8f6c\u6362\n    while(reverse(m)!=m&&tmp<30){  //\u5982\u679c\u8fbe\u4e0d\u5230\u8981\u6c42\u4e14\u6b65\u6570<30\n        m+=reverse(m);  //\u76f8\u52a0\n        tmp++;  //\u6b65\u6570++\n    }\n    if(reverse(m)!=m){  //\u5982\u679c\u4e0d\u662f\u56de\u6587\n        cout<<\"Impossible!\";  //impossible\n    }else{\n        cout<<\"STEP=\"<<tmp;  //\u5426\u5219\u6309\u9898\u76ee\u8f93\u51fa\n    }\n    return 0;\n}\n```\n\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u662f25pts\uff0c\u8fc7\u4e86#3\uff08\u537310\u8fdb\u5236\u6570\u636e\uff09\n\n\u540e\u6765\u8c03\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8fd0\u884c#1\u7684\u6570\u636e\uff0c\u7ed3\u679c\u662fSTEP=2\uff1a\n\n```\n19+91=110\n38+83=121\n```\n\n\u5f88\u660e\u663e\uff0c\u9519\u8bef\u662f\u5728\u7b97\u52a0\u6cd5\u65f6\u628a\u4e8c\u8fdb\u5236\u6570\u7528\u5341\u8fdb\u5236\u52a0\u6cd5\u7b97\u4e86\u3002\n\n\u7a0d\u5fae\u6539\u4e86\u4e00\u4e0b\u3002\n\n\u7531\u4e8eturn\u51fd\u6570\u7b49\u6ca1\u6709\u66f4\u6539\uff0c\u7a9d\u4e0d\u518d\u8bb2\u3002\u4e3b\u8981\u66f4\u6539\u5728\u4e8ereverse\u548cmain.\n\n```cpp\nbool reverse(ull cnt){\n    ans=0;  //\u53cd\u8f6c\u540e\u7684\u6570\n    for(ull i=cnt;i;i/=n){  //\u5f53\u4e0d\u7b49\u4e8e0\n        ans=ans*n+i%n;  //\u8f6c\u6362\n    }\n    return ans==cnt;  //\u6bd4\u8f83\n}\n```\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7a9d\u5728\u8fd9\u91cc\u76f4\u63a5\u6bd4\u8f83\u4e86\uff0c\u8fd4\u56de\u4e00\u4e2abool\u503c\u3002\n\n\u6ce8\u610ffor\u5faa\u73af\u7684\u66f4\u6539\uff0c\u65b9\u4fbf\u4e86\u8fd0\u7b97\uff0c\u4e5f\u4fee\u6b63\u4e86\u524d\u9762\u7684\u95ee\u9898\u3002\n\n```cpp\nint main(){\n    cin>>n>>k;\n    m=turn(k,n);  //\u7167\u5e38\n    while(!reverse(m)&&tmp<30){  //\u5982\u679c\u4e0d\u7b26\u5408\u4e14\u6b65\u6570\u8fd8\u6ca1\u5230\n        m+=ans;  //\u66f4\u6539\u5f53\u524d\u6570\n        tmp++;  //\u6b65\u6570++\n    }\n    if(tmp==30){  //\u5982\u679cimpossible\u7684\u8bddtmp\u4f1a\u663e\u793a30\uff0c\u800c\u6b65\u6570\u4e3a30\u4f1a\u663e\u793a29\n        cout<<\"Impossible!\";\n    }else{\n        cout<<\"STEP=\"<<tmp;\n    }\n    return 0;\n}\n```\n\n\u5b8c\u7f8eAC.\n\n\u5982\u6709\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1/\u8bc4\u8bba\u8054\u7cfb\u7a9d\u66f4\u6539\u54e6QwQ",
        "postTime": 1573118765,
        "uid": 185527,
        "name": "Raw_Aya9285",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "~~\u770b\u770b\u80fd\u4e0d\u80fd\u6c34\u4e00\u7bc7\u9898\u89e3~~\n\n\u8fd9\u662f\u672c\u840c\u65b0\u7b2c\u4e00\u6b21\u4ea4\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\uff0c\u8c22\u8c22\u3002\n\n\u9996\u5148\u770b\u8fd9\u9053\u9898\u7684\u96be\u5ea6----\u666e\u53ca-\uff0c\u5341\u5206\u53cb\u597d\uff0c\u6570\u636e\u8303\u56f4\u66f4\u52a0\u53cb\u597d\u3002\u8bb2\u89e3\u7684\u8bdd\uff0c\u6211\u89c9\u5f97\u76f4\u63a5\u770b\u4ee3\u7801\u5e94\u8be5\u53ef\u4ee5\u79d2\u61c2\uff08\u8fd9\u6837\u8bf4\u770b\u6765\u4e0d\u884c\u6ca1\u8fc7\uff09\n\n\u6211\u4e5f\u53ea\u80fd\u591a\u8bf4\u4e00\u4e9b\u6c34\u8bdd\u4e86\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u611f\u89c9\uff0c\u5e94\u8be5\u662f\u60f3\u7528\u6570\u7ec4\u6765\u5b58\u50a8\u6bcf\u4e00\u4f4d\u6570\u5b57\u7684\u5927\u5c0f\uff0c\u8fd9\u9053\u9898N\u7684\u6570\u636e\u8303\u56f42~10\u5e94\u8be5\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4e3b\u8981\u662f16\u8fdb\u5236\u768410~15\u7684\u8868\u8fbe\u5b83\u662f\u7528\u5927\u5199\u5b57\u6bcd\u6765\u8868\u793a\u7684\u3002\n\nA=10\uff1bB=11\uff1bC=12\uff1bD=13\uff1bE=14\uff1bF=15\uff1b\n\n\u8fd9\u6837\u5b50\u7684\u8bdd\u8bfb\u5165\u53ea\u80fd\u7528\u5b57\u7b26\u4e32\u4e86\u3002\n\u540e\u9762\u7684\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\u5c31\u662f\u7528a[i]-'0'\u5373\u53ef\uff0c\u5982\u904716\u8fdb\u5236\u52a0\u4e2a\u7279\u5224\uff0c\u5c31\u662fA=10\u2026\u2026\u8fd9\u4e2a\uff0c\u7528\u4e2aif\u8bed\u53e5\u5c31\u884c\u4e86\uff0c\u5982\u679c\u4e0d\u60f3\u6253\u8fd9\u4e48\u591a\uff0c\u90a3\u5c31\u7528ASCLL\u8868\u6765\u5224\u65ad\u3002\n\u540e\u9762\u5c31\u662f\u8fdb\u4f4d\u7684\u95ee\u9898\u4e86\uff0c\u81ea\u884c\u770b\u4ee3\u7801\u5427\uff01\uff01\uff01\n\n\u6211\u89c9\u5f97\u6211\u5df2\u7ecf\u6c34\u591f\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```c\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint a[1000],n,b[1000],c[1000];\nstring m; \nint main()\n{\n\tint k=30,ans=0,sum;//k=30\uff0c\u6700\u591a30\u6b21\u3002\n    cin>>n>>m; \n    int t=m.size();\n    for(int i=0;i<t;i++)\n    {\n    \tif(m[i]=='A')a[i+1]=b[t-i]=10;\n    \tif(m[i]=='B')a[i+1]=b[t-i]=11;\n    \tif(m[i]=='C')a[i+1]=b[t-i]=12;\n    \tif(m[i]=='D')a[i+1]=b[t-i]=13;\n    \tif(m[i]=='E')a[i+1]=b[t-i]=14;\n    \tif(m[i]=='F')a[i+1]=b[t-i]=15;\n    \tif(m[i]>='0'&&m[i]<='9')a[i+1]=b[t-i]=m[i]-'0';\n    }//\u8bfb\u5165\u5224\u65ad\n\twhile(k--){\n\t\tsum=1;\n\t\tfor(int i=1;i<=t;i++){\n\t\t\tc[i]=a[i]+b[i];\n\t\t}//\u5148\u52a0\uff0c\u4e0d\u8981\u6025\u7740\u8fdb\u4f4d\n\t\tfor(int i=1;i<=t;i++)if(c[i]>=n)c[i+1]+=1,c[i]-=n;//\u9022n\u8fdb\u4f4d\n\t\tif(c[t+1]>0)t++;\n\t\tfor(int i=1;i<=t;i++)\n\t\ta[i]=c[i],b[t-i+1]=c[i];\n\t\tfor(int i=1;i<=t;i++){//\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\n\t\t\tif(c[i]!=c[t-i+1]){\n\t\t\t\tsum=0;\n\t\t\t\tbreak;//\u5feb\u901f\u9000\u51fa\uff0c\u4e0d\u6d6a\u8d39\u591a\u4f59\u65f6\u95f4\n\t\t\t}\n\t\t}\n\t\tans++;\n\t\tif(sum==1){\n\t\t\tcout<<\"STEP=\"<<ans;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"Impossible!\";\n\treturn 0; \n} \n```",
        "postTime": 1569750907,
        "uid": 205156,
        "name": "Q1284673918",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "NO.12 \u770b\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u5f88\u5c11\u6709\u540c\u5b66\u7528\u5b57\u7b26\u4e32string\u505a\u7684\u54c7~\u90a3\u4e48\u6211\u5c31\u6765\u52c9\uff08yue\uff09\u4e3a\uff08yue\uff09\u5176\uff08yu\uff09\u96be\uff08shi\uff09\u53d1\u4e00\u6ce2\u9898\u89e3~\n\n\u672c\u9898\u6211\u53ea\u5728add\u51fd\u6570\u91cc\u7528\u5230\u4e00\u4e9b\u9ad8\u7cbe\u5ea6\u7684\u77e5\u8bc6\uff0c\u53ea\u662f\u5f00\u4e86\u4e00\u4e2aint\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e00\u4f4d\u7684\u7ed3\u679c\uff0c\u6700\u540e\u8fd8\u662f\u8981\u8f6c\u6362\u6210string\u8fd4\u56de\u6ef4~\u5176\u4f59\u5730\u65b9\u5e76\u6ca1\u6709\u7528\u5230\u9ad8\u7cbe\u5ea6\u3002\n\n\u6211\u7684\u601d\u8defhin\u7b80\u5355\uff0c\u5c31\u662f\u901a\u8fc7\u5224\u65ad\u2014\u2014\n\n(1\uff09\u6bcf\u6b21\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\u4e14\\\n(2)\u5f53\u524d\u6b65\u6570\u662f\u5426\u4e0d\u5927\u4e8e30 \n\n\u6765\u51b3\u5b9a\u662f\u5426\u8981\u7ee7\u7eed\u8fdb\u884c\u8fd0\u7b97\u3002\n\n\u5224\u65ad\u56de\u6587\u4e32\u7684\u51fd\u6570\u4e2d\u7528\u5230reverse\u5b57\u7b26\u4e32\u53cd\u8f6c\u51fd\u6570\uff0c\u6240\u4ee5\u5c31\u975e\u5e38\u65b9\u4fbf\u5566~\n\ngetnum(char ch)\u51fd\u6570\u8fd4\u56de\u8be5\u5b57\u7b26\u5bf9\u5e94\u7684\u6570\u5b57\uff1b\n\ngetch(short int n)\u8fd4\u56de\u8be5\u6570\u5b57\u5bf9\u5e94\u7684\u5b57\u7b26\n\n\n\u4ee3\u7801\u7b80\u5355\u4e14\u6613\u4e8e\u7406\u89e3\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u5927\u5bb6\u81ea\u5df1\u770b\u5c31\u597d~\n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nint n, ans = 0;\nstring str;\n\nbool isReverse(string str)\n{\n\tstring ss = str;\n\treverse(ss.begin(), ss.end());\n\tif (ss == str)\n\t\treturn true;\n\treturn false;\n}\n\nshort getnum(char ch)\n{\n\tif (ch >= '0'&&ch <= '9')\n\t\treturn ch - '0';\n\treturn ch - 'A' + 10;\n}\n\nchar getch(short int n)\n{\n\tif (n >= 0 && n <= 9)\n\t\treturn n + '0';\n\treturn n - 10 + 'A';\n}\n\nstring add(string tmp)\n{\n\tstring rtmp = tmp;\n\tint rst[200];\n\tmemset(rst, 0, sizeof(rst));\n\treverse(rtmp.begin(), rtmp.end());\n\tint cnt = 0, x1, x2;               //cnt\u8868\u793a\u7ed3\u679c\u7684\u4f4d\u6570\n\tfor (int i = 0; i < rtmp.length(); i++)\n\t{\n\t\tx1 = getnum(tmp[i]);\n\t\tx2 = getnum(rtmp[i]);\n\t\trst[cnt + 1] += (rst[cnt] + x1 + x2) / n;  //\u8fd9\u4e24\u884c\n\t\trst[cnt] = (rst[cnt] + x1 + x2) % n;     //\u4f4d\u7f6e\u4e0d\u80fd\u6362\uff01\uff01\uff01\n\t\tcnt++;\n\t}\n\tif (rst[cnt] != 0)  //\u662fcnt\u4e0d\u662fcnt+1\uff01\uff01\uff01\n\t\tcnt++;\n\tstring ans;\n\tfor (int i = cnt-1; i >= 0; i--)   //\u5904\u7406\u8fdb\u4f4d\n\t\tans += getch(rst[i]);\n\treturn ans;\n}\n\nint main()\n{\n\tcin >> n >> str;  //n\u8fdb\u5236\n\tint step = 0;\n\twhile (!isReverse(str) && step <= 30)\n\t{\n\t\tstep++;\n\t\tstr = add(str);\n\t}\n\tif (step <= 30)\n\t\tcout << \"STEP=\" << step;\n\telse\n\t\tcout << \"Impossible!\";\n\tcin >> n;\n\treturn 0;\n}\n```",
        "postTime": 1567166265,
        "uid": 237242,
        "name": "yubing_lml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u9053\u9898\u5f97\u7528\u5230\u8fdb\u5236\u8f6c\u5316\u548c\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u3002\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5751\u70b9\u5c31\u662f16\u8fdb\u5236\uff0c16\u8fdb\u5236\u5fc5\u987b\u9700\u8981A,B,C,D,E,F\u8fdb\u884c\u8868\u793a10\uff0c11\uff0c12\uff0c13\uff0c14\uff0c15.\u5176\u4f59\u7684\u6ca1\u6709\u4ec0\u4e48\u4e86\u8d34\u4ee3\u7801\n\n\n\u3001\u3001\u3001cpp\n\n\n\n\n\n```cpp\n# include <cstdio>\n# include <cstring>\n# include <algorithm>\n# include <cstdlib>\nusing namespace std;\nchar a[10000]={0};\nint c[10000]={0},al[10000]={0},n=0,top=0,sum=0,sign=0;\nint abc()\n{\n    sum++;\n    memset(c,0,sizeof(c)); //\u6570\u7ec4\u6e05\u96f6\n    for(int i=1;i<=top;i++)\n    {\n        c[i]+=al[i]+al[top-i+1];\n        if(c[i]>=n)   //\u8d85\u8fc7n\u8fdb\u5236\u65f6\u8fdb\u4f4d \n        {\n            c[i+1]++;\n            c[i]=c[i]%n;\n        }\n    }\n    if(c[top+1]!=0) //\u5224\u65ad\u662f\u5426\u4f4d\u6570\u589e\u52a0\n    {\n        top++;\n    }\n    for(int i=1,j=top;i<=j,j>=i;i++,j--) //\u5224\u65ad\u56de\u6587 \n    {\n        if(c[i]!=c[j])\n        {\n            break;\n        }\n        if(i==j||j-i==1) //\u5047\u5982\u8bf4\u56de\u6587\uff0c\u6807\u8bb0\u4e3a1\n        {\n            sign=1;\n        }\n    }\n    for(int i=1;i<=top;i++)\n    {\n        al[i]=c[i];\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%s\",a);\n    for(int i=strlen(a)-1;i>=0;i--)\n    {\n        if(a[i]=='0'||a[i]=='1'||a[i]=='3'||a[i]=='4'||a[i]=='5'||a[i]=='6'||a[i]=='7'||a[i]=='8'||a[i]=='9') al[strlen(a)-i]=a[i]-'0';   //\u5316\u6210\u6570\u5b57\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\n        if(a[i]=='A'||a[i]=='B'||a[i]=='C'||a[i]=='D'||a[i]=='E'||a[i]=='F') al[strlen(a)-i]=a[i]-'A'+10;  //\u5047\u5982\u662f\u5341\u516d\u8fdb\u5236\uff0c\u4e13\u95e8\u89e3\u51b3ABCDEF\u53d8\u6210\u6570\u5b57\n    }\n    top=strlen(a);\n    for(int j=1;j<=30;j++)\n    {\n        abc(); //\u8fc7\u7a0b\n        if(sign==1)//\u8f93\u51fa\u56de\u6587\u591a\u5c11\u6b65\uff0c\u7ed3\u675f\u7a0b\u5e8f\n        {\n            printf(\"STEP=%d\",sum);\n            return 0;\n        }\n     } \n    printf(\"Impossible!\"); //\u5f53\u8d85\u8fc730\u6b65\u65f6\uff0c\u8f93\u51fa\u3002\u6ce8\u610f\u53f9\u53f7\n    return 0;\n}\n\u3001\u3001\u3001\n```",
        "postTime": 1502676375,
        "uid": 45555,
        "name": "huangzhikun",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u6211\u7684\u7b97\u6cd5\u6bd4\u8f83\u9ebb\u70e6\u3002\u3002\u5176\u5b9e\u7528\u522b\u7684\u529e\u6cd5\u7684\u8bdd\u7b80\u5355\u5f97\u591a\uff08\u5427\uff1f\n\n**\u7528\u7684\u9ad8\u7cbe\u5ea6\u3002\u3002\u76f4\u63a5\u987a\u5e8f\u4e58\u9006\u5e8f\u7136\u540e\u52a0\u4e2a\u5224\u65ad**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint a[1000000]={0},c[1000000],p,tot=0,ta=1,t1=1;\nstring n;\nint power(int m[],int k)//\u8bf7\u65e0\u89c6\u8fd9\u4e2a\u51fd\u6570\u540d..\u505a\u522b\u7684\u9898\u5fd8\u4e86\u6539\n{\n    int l=0;\n    memset(c,0,sizeof(c));\n    for(int j=1;j<=ta;++j)\n    {\n        c[j]=m[ta-j+1]+m[j];\n    }\n   for(int t=1;t<=ta+1;t++)\n   if(c[t]>=k)\n   {\n     c[t+1]+=c[t]/k;\n     c[t]%=k;\n   }\n   ta=ta+1;\n       while(1)\n    {\n        if(c[ta]==0)ta--;\n        else break;\n    }\n    for(int t=ta;t>=1;--t)\n    {\n        if(c[t]==c[ta-t+1])l++;\n        m[t]=c[t];\n    }\n    if(l==ta)return 1;\n    else return 0;\n}\nvoid get(string z,int m[])\n{\n    int l1=z.length();\n    for(int i=1;i<=l1;++i)\n    {\n            switch(z[l1-i])//\u8981\u6ce8\u610f16\u8fdb\u5236\u65f6\u8bfb\u5165\u9ad8\u7cbe\u5ea6\u8981\u8fdb\u884c\u5224\u65ad\n            {\n                case 'A':{m[i]=10;break;}\n                case 'B':{m[i]=11;break;}\n                case 'C':{m[i]=12;break;}\n                case 'D':{m[i]=13;break;}\n                case 'E':{m[i]=14;break;}\n                case 'F':{m[i]=15;break;}\n                default:m[i]=z[l1-i]-'0';\n            }\n    }\n}\nint main()\n{\n    cin>>p>>n;\n    get(n,a);\n    ta=n.length();\n    do\n    {\n        tot++;\n        if(tot==30){cout<<\"Impossible!\"<<endl;return 0;}\n    }while(power(a,p)==0);\n    cout<<\"STEP=\"<<tot;\n    return 0;\n}\n```",
        "postTime": 1479545448,
        "uid": 25476,
        "name": "Zn_Hua",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u5bb3\uff0c\u88ab\u4e00\u9053\u666e\u53ca-\u6574\u90a3\u4e48\u4e45\u3002\n\n\u5176\u5b9e\u9898\u76ee\u4e0d\u96be\u3002\n\n\u7b97\u6cd5\uff1a\n\n ## **\u5927\u6a21\u62df**\n \n> \u5148\u628a\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u677f\u5b50\u6572\u4e0b\u6765\uff0c\u7136\u540e\u719f\u7ec3\u5730\u8fd0\u7528STL\u7684reverse\u51fd\u6570\u5373\u53ef\u3002\n\n\u4e3b\u8981\u96be\u70b9\uff1a\n\n$1.$ \u9ad8\u7cbe\u5ea6\u52a0\u6cd5\n\n$2.$ \u8fdb\u5236\u8f6c\u6362\n\n\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u7684\u677f\u5b50\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u6765\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u8fdb\u5236\u8f6c\u6362\u3002\n\n\n```\nfor(int i=0;i<s.length();i++)\n{\n\tif(s[i]<='Z'&&s[i]>='A')s[i]=s[i]-'A'+'0'+10;//\u8f6c\u621010\u8fdb\u5236\uff0c\u5b57\u6bcd\u5c31\u76f8\u5f53\u4e8e+10\n}\n    \n```\n\n\u6ca1\u9519\uff01\u6211\u4eec\u53ea\u9700\u8981\u628a\u5b57\u7b26\u4e32\u91cc\u6bcf\u4e00\u4e2a\u6570\u5b57\u8f6c\u6362\u6210 $10$ \u8fdb\u5236\n\n~~\uff08\u56e0\u4e3a\u6211\u4eec\u4e60\u60ef\u6d3b\u572810\u8fdb\u5236\u7684\u9634\u5f71\u4e0b\uff09~~\n\n\u4e5f\u8bb8\u6b64\u65f6\u4f60\u628a $s$ \u8f93\u51fa\u53d1\u73b0\u662f\u4ec0\u4e48\u5947\u5947\u602a\u602a\u7684\u7b26\u53f7\uff0c\u4f46\u8fd9\u5e76\u4e0d\u5f71\u54cd\u5224\u65ad\u3002\n\n\u6700\u540e\u5728\u591a\u5520\u53e8\u4e00\u5634\uff0c\n\n\tint('0')=48\n    \n\u55ef\uff0c\u65b0\u624b\u53ef\u4ee5\u7406\u89e3\u4e00\u4e0b $ASC$ \u7801\uff0c\u5f88\u91cd\u8981\u7684\u3002\n\n\u4ee3\u7801\u76f8\u4fe1\u5927\u5bb6\u90fd\u770b\u5f97\u61c2\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\n```\n#include \"bits/stdc++.h\"\nusing namespace std;\nint n;\n\nstring jia(string a,string b)//\u677f\u5b50\n{\n\tint i=0,j=0,k=0,x=0,s[1001]={0},ss[1001]={0},c[1001]={0};\n\twhile(a.length()<b.length())a=\"0\"+a;\n\twhile(b.length()<a.length())b=\"0\"+b;\n\tfor(i=a.length()-1;i>=0;i--)s[a.length()-i-1]=a[i]-48;\n\tfor(i=b.length()-1;i>=0;i--)ss[a.length()-i-1]=b[i]-48;\n\tfor(i=0;i<a.length();i++){\n\t\tc[i]+=s[i]+ss[i];\n\t\tc[i+1]=c[i]/n;\n\t\tc[i]=c[i]%n;//\u6ce8\u610f\u662fn\n\t}\n\tx=a.length();\n\tif(c[i]>0)i++;\n\tstring ans=\"\";\n\tfor(j=i-1;j>=0;j--)ans+=char(c[j]+48);\n\treturn ans;\n}\n\nint main(void)\n{\n\tstring s,t;\n\tcin>>n>>s;\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]<='Z'&&s[i]>='A')s[i]=s[i]-'A'+'0'+10;//\u8f6c\u621010\u8fdb\u5236\uff0c\u5b57\u6bcd\u5c31\u76f8\u5f53\u4e8e+10\n\t}\n\tt=s;\n\treverse(t.begin(),t.end());\n\tif(s==t)return puts(\"STEP=0\"),0;\n\tint step=0;\n\twhile(\"MOK_IS_MY_GF\"&&step<=30)//\u53ea\u53ef\u610f\u4f1a\u4e0d\u53ef\u8a00\u4f20\n\t{\n\t\tstep++;\n\t\ts=jia(s,t);\n\t\tt=s;\n\t\treverse(t.begin(),t.end());\n\t\tif(t==s)return printf(\"STEP=%d\\n\",step),0;\n\t}\n\tcout<<\"Impossible!\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1572449519,
        "uid": 114504,
        "name": "\u68a6\u91cc\u8c03\u97f3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "# 1.\u5206\u6790\n\n0. \u53d8\u91cf\u5b9a\u4e49\uff1a$cnt$\u8bb0\u5f55\u6b65\u6570\uff0c$sys$\u662f\u51e0\u8fdb\u5236\uff0c$num$\u4e3a\u8f93\u5165\u7684\u6570($PS$:\u5176\u5b9e\u7b54\u4e3b\u8fd8\u4e0d\u4f1a\u9ad8\u7cbe\u5ea6\uff0c\u53ea\u662f\u56e0\u4e3a\u5b57\u7b26\u4e32\u4e0d\u9700\u8981\u8003\u8651\u5982\u4f55\u53d6\u5f97\u6bcf\u4f4d\u7684\u6570\uff0c\u53ea\u9700\u5bf9\u5e94\u4f4d\u7684\u5b57\u7b26\u8fdb\u884c\u5373\u53ef\uff0c\u5c31\u9009\u62e9\u4e86\u5b57\u7b26\u4e32)\u3002\n\n1. $is\\_palindrome$\u51fd\u6570\uff1a\n\n- \u5224\u65ad\u5b57\u7b26\u4e32$a$\u662f\u5426\u4e3a\u56de\u6587\u6570\uff0c\u5373\u662f\u5c06$a[i]$\u4e0e$a[len-1-i](i\\in[0,len/2))$\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u4e0d\u76f8\u7b49\uff0c\u5219\u4e0d\u662f\u56de\u6587\u6570\uff1b\u82e5\u6bd4\u8f83\u5b8c\u540e\u6ca1\u6709\u63d0\u524d\u9000\u51fa\uff0c\u5219\u662f\u56de\u6587\u6570\uff1b\n\n2. $to\\_palindrome$\u51fd\u6570\uff1a\n\n- \u5f53$num$\u4e0d\u662f\u56de\u6587\u6570\u65f6\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u4ece\u540e\u5f80\u524d\u904d\u5386$num($\u56e0\u4e3a\u52a0\u6cd5\u90fd\u662f\u4ece\u4f4e\u4f4d\u52a0\u8d77$)$\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u6570\u4e0e\u7b2c\u4e00\u4e2a\u6570\u76f8\u52a0\uff0c\u76f8\u52a0\u7684\u4e24\u4e2a\u6570$num1,num2$\u9ed8\u8ba4\u4e3a\u6570\u5b57\uff0c\u5219\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57$(eg:num1 = num[i] - '0')$\uff1b\n\n- \u7279\u522b\u5730\uff0c\u82e5\u6709\u5b57\u7b26\u4e3a\u5b57\u6bcd$(16$\u8fdb\u5236$)$\uff0c\u5219\u5c06\u5b57\u6bcd\u8f6c\u5316\u4e3a\u6570\u5b57$(eg:num1 = num[i] - 'A' + 10)$\uff1b\n\n- \u8ba1\u7b97\u51fa\u672c\u6b21\u76f8\u52a0\u7684\u7ed3\u679c$(digit = num1 + num2 + up)($\u6ce8\u610f\u8981\u52a0\u4e0a\u4e00\u6b21\u7684\u8fdb\u4f4d$)$\uff0c\u7b97\u51fa\u672c\u6b21\u7684\u8fdb\u4f4d$(up = digit / sys)$\uff0c\u4ee5\u53ca\u8fdb\u4f4d\u540e\u672c\u4f4d\u7684\u6570$(digit \\%= sys)$\uff0c\u5c06\u672c\u4f4d\u7684\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\uff0c\u5b58\u50a8\u5230temp\u4e2d\uff0c\u6ce8\u610f\u8981\u653e\u5230$temp$\u4e4b\u524d$(eg:temp = (char)(digit + '0') + temp)$\uff0c\u7279\u522b\u5730\uff0c\u5927\u4e8e$9$\u7684$(16$\u8fdb\u5236$)$\u5355\u72ec\u8f6c\u6362\u4e3a\u5b57\u6bcd\uff1b\n\n- \u82e5\u4ecd\u6709\u8fdb\u4f4d\u672a\u7b97$(up!=0)$\uff0c\u5355\u72ec\u8ba1\u7b97\u3002\n\n\n# 2.\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\nint cnt = 0;    //\u6b65\u6570\nint sys;     \t//\u8fdb\u5236\nstring num;     //\u8f93\u5165\u7684\u6570\n\n//\u5224\u65ad\u5b57\u7b26\u4e32a\u662f\u5426\u4e3a\u56de\u6587\u6570\nbool is_palindrome(string a)\n{\n\tint len = a.length();\n\n\tfor(int i = 0; i < len / 2; i++)\n\t{\n\t\tif(a[i] != a[len - 1 - i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n//\u8fdb\u884c\u64cd\u4f5c\uff0c\u53d8\u4e3a\u56de\u6587\u6570\nvoid to_palindrome(void)\n{\n\twhile(!is_palindrome(num))\n\t{\n\t\tstring temp;    \t\t//\u65b0\u7684\u6570\n\t\tint len = num.length(); \t//\u539f\u6570\u7684\u957f\u5ea6\n\n\t\tint up = 0;             //\u8fdb\u4f4d\u7684\u6570\n\t\tfor(int i = len - 1; i >= 0; i--)\n\t\t{\n\t\t\tint digit;          //\u65b0\u7684\u4f4d\u4e0a\u7684\u6570\n\t\t\tint num1, num2;     //\u76f8\u52a0\u7684\u4e24\u4e2a\u6570\n\n            //\u9ed8\u8ba4\u4e3a\u6570\u5b57\n\t\t\tnum1 = num[i] - '0';\n\t\t\tnum2 = num[len - 1 - i] - '0';\n\t\t\t//\u662f\u5b57\u6bcd\n\t\t\tif(isalpha(num[i]))\n\t\t\t{\n\t\t\t\tnum1 = num[i] - 'A' + 10;\n\t\t\t}\n\t\t\tif(isalpha(num[len - 1 - i]))\n\t\t\t{\n\t\t\t\tnum2 = num[len - 1 - i] - 'A' + 10;\n\t\t\t}\n\t\t\t\n\t\t\tdigit = num1 + num2 + up;\n            //\u8fdb\u4f4d\u7684\u6570\n\t\t\tup = digit / sys;\n\t\t\t//\u65b0\u7684\u4f4d\u4e0a\u7684\u6570\n\t\t\tdigit %= sys;\n\t\t\t\n\t\t\tif(digit >= 10)\n\t\t\t{\n\t\t\t\ttemp = (char)(digit - 10 + 'A') + temp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp = (char)(digit + '0') + temp;\n\t\t\t}\n\t\t}\n\t\t//\u5355\u72ec\u7684\u8fdb\u4f4d\n\t\tif(up != 0)\n\t\t{\n\t\t\tif(up >= 10)\n\t\t\t{\n\t\t\t\ttemp = (char)(up - 10 + 'A') + temp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp = (char)(up + '0') + temp;\n\t\t\t}\n\t\t}\n\t\tnum = temp;\n\t\tcnt++;\n\t\tif(cnt > 30)\n        {\n        \treturn;\n        }\n\t}\n}\n\nint main(void)\n{\n\tcin >> sys >> num;\n\n\tto_palindrome();\n\n    if(cnt <= 30)\n    {\n    \tcout << \"STEP=\" << cnt;\n\t}\n\telse\n\t{\n\t\tcout << \"Impossible!\";\n\t}\n\n\treturn 0;\n}\n```\n",
        "postTime": 1566786091,
        "uid": 214264,
        "name": "SingularWind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u770b\u4f3c\u5f88\u6c34\u4f46\u8981\u6ce8\u610f\u4ed6\u5e76\u4e0d\u662f10\u8fdb\u5236\u52a0\u6cd5\uff0c\u6240\u4ee5\u4f46\u4f60n<>10\u65f6\uff0c\u4f60\u8981\u6709n\u8fdb\u5236\u52a0\u6cd5\n\u8fd9\u4e2a\u8fc7\u7a0b\u8ddf\u9ad8\u7cbe\u5f88\u50cf\n\u6ce8\u610fn>9\u7684\u60c5\u51b5\uff0c\u4e00\u5f00\u59cb\u5c31\u56e0\u4e3a\u8fd9\u4e2a75\n\u6709\u5f88\u591a\u5927\u4f6c\u7528c++\uff0c\u5199\u4e2aPascal\n```pascal\nvar i,j,n,x:longint;s1,s2,s3:string;\n    a,b,c:array[1..1000] of longint;\nfunction pd(s:string):boolean;//\u5224\u65ad\u56de\u6587\u6570\nvar i:longint;\nbegin\n  for i:=1 to length(s) div 2 do\n    if s[i]<>s[length(s)-i+1] then exit(false);\n  exit(true);\nend;\nbegin\n  readln(n);\n  readln(s1);\n  for i:=1 to 31 do\n    begin\n      if i=31 then begin write('Impossible!');halt;end;//\u5f53i=31\u65f6\u8bf4\u660e\u4e0d\u80fd\u518d30\u6b65\u5185\u8f6c\u5316\n      for j:=1 to length(s1) do s2:=s1[j]+s2;//\u5c06\u4ed6\u4ece\u53f3\u5f80\u5de6\u8bfb\n      for j:=1 to length(s1) do if s1[j]<='9' then a[j]:=ord(s1[j])-48 else a[j]:=ord(s1[j])-55;//\u5c06\u6bcf\u4e00\u4e2a\u6570\u5b57\u653e\u5165a\u6570\u7ec4\n      for j:=1 to length(s2) do if s2[j]<='9' then b[j]:=ord(s2[j])-48 else b[j]:=ord(s2[j])-55;//\u540c\u4e0a\n      for j:=length(s1) downto 1 do//\u8fc7\u7a0b\u5f88\u50cf\u9ad8\u7cbe\n        begin\n          c[j]:=a[j]+b[j]+x;//\u76f8\u52a0\uff0c\u522b\u5fd8\u52a0\u4e0a\u8fdb\u4f4d\n          x:=c[j] div n;//\u7b97\u51fa\u4f59\u6570\n          c[j]:=c[j] mod n;//\u6bcf\u4e00\u4f4d\u7684\u7ed3\u679c\n        end;\n      if x<>0 then s3:=chr(x+48);//\u522b\u5fd8\u52a0\u9996\u4f4d\n      for j:=1 to length(s1) do if c[j]<=9 then s3:=s3+chr(48+c[j]) else s3:=s3+chr(55+c[j]); //\u6ce8\u610f\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\u662f16\u8fdb\u5236\n      if pd(s3) then break;//\u662f\u56de\u6587\u6570\u9000\u51fa\n      s1:=s3;s2:='';x:=0;s3:='';//\u5c06\u7ed3\u679c\u653e\u5165s1\uff0c\u5176\u4f59\u6e05\u7a7a\n    end;\n  write('STEP=',i);//\u8f93\u51fa\nend.\n\n\n```\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u8bf7\u89c1\u8c05\n",
        "postTime": 1555759291,
        "uid": 161204,
        "name": "KOGshi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u9996\u5148\u5b57\u7b26\u4e32\u7ed9\u7684\u8303\u56f4\u662f1~100\u4f4d\uff0c\u5f53\u7136\u8981\u7167\u987e\u4e00\u4e0b\u4e8c\u8fdb\u5236\u561b\uff0c\u5176\u5b83\u7684\u9898\u89e3\u90fd\u8bf4unsigned long long \u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c\u4f46\u662f\u672c\u7740\u4e25\u8c28\u7684\u7cbe\u795e\uff0c\u6211\u4eec\u8fd8\u662f\u6a21\u62df\u4e00\u4e0b\u597d\u4e86\u3002  \n\u5176\u5b9e\u6a21\u62df\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6a21\u62df\u4e00\u4e2an\u8fdb\u5236\u7684\u52a0\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u628a\u4e00\u4e2a\u6570\u5b58\u5165\u6570\u7ec4\u4e4b\u540e\uff0c\u6211\u4eec\u5047\u8bbe\u4e00\u4e2anext\u4e3a\u8fdb\u4f4d\u7684\u6570\u5b57\uff0c\u521d\u59cb\u5316\u4e3a0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e00\u767e\u4f4d\u7684\u6570\u5b57\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u4e0b\u6807\u4e3a0\u7684\u4f4d\u7f6e\u5b58\u4e0a\u8fd9\u4e2a\u6570\u6709\u51e0\u4f4d\uff0c\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u64cd\u4f5c\u3002  \n\u800c\u4e14\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u4e2d\u95f4\u7684tmp\u6570\u7ec4\u7528\u6765\u5b58\u52a0\u6cd5\u540e\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5b83\u7684\u53cd\u8f6c\u52a0\u5728\u5b83\u81ea\u8eab\u4e0a\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u76f8\u52a0\uff0c\u5e76\u4e14\u52a0\u4e0anext\u8fdb\u4f4d\uff0c\u5982\u679c\u6b64\u65f6\u76f8\u52a0\u540e\u7684\u7ed3\u679c\nn[i]/\u8fdb\u5236 >0 \u8bf4\u660e\uff0cn[i]\u5927\u4e8e\u8fdb\u5236\u4e86\uff0c\u6b64\u65f6next\u5c31\u5e94\u8be5\u7b49\u4e8en[i]/\u8fdb\u5236\uff0c\u5982\u679c\u5c0f\u4e8e0\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u4e0d\u9700\u8981\u8fdb\u4f4d\uff0c\u628anext\u8bbe\u7f6e\u4e3a0\uff0c\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u5bf9\u4e8e\u4e00\u4e2a100\u4f4d\u7684\u6570\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4f4e\u5230\u9ad8\u4f4d\u5728\u6570\u7ec4\u4e2d\u5b58\u50a8\uff0c\u7136\u540efor\u5faa\u73af\u5c31\u53ef\u4ee5\u4ece1\u5230n\u4e86\uff0c\u6bd4\u8f83\u81ea\u7136\u4e00\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u56de\u6587\u6765\u8bf4\u4e5f\u4e0d\u4f1a\u6709\u5f71\u54cd\u3002  \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nint a[105],b[105],bins,k=0;\nchar s[105];\n\nvoid BinsAdd(int *n,int *m)\n{\n\tint next=0;\n\tfor (int i=1;i<=n[0];i++) {\n\t\tn[i]+=next+m[i];\n\t\tif (n[i]/bins) {\n\t\t\tnext=n[i]/bins;\n\t\t\tn[i]%=bins;\n\t\t}\n\t\telse \n\t\t\tnext=0;\n\t}\n\tif (next) {\n\t\tn[a[0]+1]=next;\n\t\tn[0]+=1;\n\t}\n}\n\nbool isPadro(int *n) \n{\n\tfor (int i=1;i<=n[0]/2;i++) {\n\t\tif (n[i]!=n[n[0]+1-i])\n\t\t\treturn 0;\n\t}\n\treturn 1;\n}\n\nint main()\n{\t\n\tscanf(\"%d\",&bins);\n\tscanf(\"%s\",s);\n\ta[0]=strlen(s);\n\tfor (int i=0;i<a[0];i++) {\n\t\tif (s[i]>='A'&&s[i]<='F')\n\t\t\ta[i+1]=s[a[0]-1-i]-'A'+10;\n\t\telse if (s[i]>='a'&&s[i]<='f')\n\t\t\ta[i+1]=s[a[0]-1-i]-'a'+10;\n\t\telse\n\t\t\ta[i+1]=s[a[0]-1-i]-'0';\n\t}\n\tif (isPadro(a)) {\n\t\tprintf(\"STEP=%d\\n\",0);\n\t\treturn 0;\n\t}\n\twhile (k<=30) {\n\t\tfor (int i=1;i<=a[0];i++) {\n\t\t\tb[a[0]+1-i]=a[i];\n\t\t}\n\t\tBinsAdd(a,b);\n\t\tk++;\n\t\tif (isPadro(a)) {\n\t\t\tprintf(\"STEP=%d\\n\",k);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"Impossible!\\n\");\n\treturn 0;\n}\n\n```",
        "postTime": 1553583615,
        "uid": 130590,
        "name": "xyqxyq",
        "ccfLevel": 0,
        "title": "P1015 \u56de\u6587\u6570"
    },
    {
        "content": "\u6d89\u53ca\u8fdb\u5236\u52a0\u6cd5\u7684\u4e00\u9053\u9898\n\u76f4\u63a5\u7528\u9012\u5f52\u66b4\u529b\u6a21\u62df\u5c31\u80fd\u8fc7\n\u5f88\u591a\u4eba\u521a\u62ff\u5230\u9898\u76ee\u5c31\u60f3\u8981\u8f6c\u8fdb\u5236  \n\u7136\u540e\u5c31\u6253\u4e86\u4e00\u957f\u4e32\u7684\u4ee3\u7801\n\n~~** _\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981_ **~~......  \n\n\u975e\u5341\u8fdb\u5236\u7684\u52a0\u6cd5\u5176\u5b9e\u5f88\u7b80\u5355\n\u53ea\u8981\u7528\u9ad8\u7cbe\u5ea6\u7684\u65b9\u6cd5\u505a\u53ef\u4ee5\n\u5341\u516d\u8fdb\u5236\u6bd4\u8f83\u7279\u6b8a  \n\u5305\u542b\u4e86 A B C D E F \u8fd9\u516d\u4e2a\u5b57\u6bcd  \n\u8fd9\u4e2a\u70b9\u5f88\u591a\u4eba\u7528\u4e86\u7279\u6b8a\u5904\u7406  \n\u5728\u52a0\u6cd5\u8fd0\u7b97\u65f6\u5224\u5b9a\u4e86\u5b57\u6bcd\u7684\u5904\u7406\u65b9\u5f0f\n\u8fd0\u7b97\u4e4b\u540e\u7684\u503c\u4e5f\u8f6c\u6210\u4e86\u5b57\u6bcd\u7684\u8868\u793a\u65b9\u5f0f \nP\u515a\u60f3\u5fc5\u90fd\u662f\u7528Ord\u6765\u5224\u65ad\u7684  \n\u5982\u679c\u662f\u6570\u5b57  \n\u5c31\u7528Ord\uff08x\uff09-48  \n\u5982\u679c\u662f\u5b57\u6bcd  \n\u5c31\u7528Ord\uff08x\uff09-64  \n\u7136\u540e\u53c8\u6253\u4e86\u4e00\u957f\u4e32\u7684\u4ee3\u7801\n\n~~** _\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981_ **~~......  \n\n\u6211\u4eec\u77e5\u9053 '0'...'9' \u7684ASCLL\u7801\u662f 48...57  \n\u6240\u4ee5  \n\u53ea\u8981\u7528\u7b2c 58 \u4e2a\u5b57\u7b26\u6765\u8868\u793a\u6570\u5b57 10 \u5c31\u53ef\u4ee5\u4e86\n\u7b2c 58 \u4e2a\u5b57\u7b26\u662f ':'  \n\u5f88\u591a\u4eba\u611f\u5230\u5f88\u8ff7\u832b  \n\u8ba4\u4e3a 10 \u4e0d\u7528 'A' \u8868\u793a\u7cfb\u7edf\u4f1a\u5224\u9519  \n\u7801\u519c\u4eec\u554a  \n\u8fd9\u9898\u53c8\u4e0d\u9700\u8981\u8f93\u51fa\u6700\u540e\u7684\u56de\u6587\u6570  \n\u5e72\u4ec0\u4e48\u975e\u8981\u7528\u5b57\u6bcd\u6765\u8868\u793a\u5462  \n\u8fd8\u662f\u770b\u7a0b\u5e8f\u5427\n\n\n----------\u8ff7\u4eba\u7684\u5206\u5272\u7ebf----------  \n \n\n```\nprogram palindrome(input,output);\n var\n  p:boolean;\n  s,m:string;\n  i,j,n,l,add:longint;\n```\n```\n function judge(s:string):boolean;\n  var\n   i,l:longint;\n  begin\n   l:=length(s);\n   for i:=1 to (l+1) div 2 do\n    if s[i]<>s[l-i+1] then exit(false);\n   exit(true)\n  end; \n```\n\u52a0\u4e86\u4e00\u4e2a\u51fd\u6570\u5224\u65ad\u56de\u6587  \n\u51fd\u6570\u503c\u662f\u5e03\u5c14\n```\n begin\n  readln(n);\n  read(m);\n  if judge(m) then begin\n                    write('STEP=0');\n                    exit\n                   end;\n```\n\u8bfb\u8fdb\u53bb\u540e\u5148\u5224\u65ad\u4e00\u904d\u56de\u6587  \n\u653e\u7740\u4e0d\u9700\u8981\u5904\u7406\u7684\u7279\u6b8a\u53d8\u91cf\n```\n  if n=16 then for i:=1 to length(m) do\n                if m[i]>'9' then m[i]:=chr(ord(m[i])-7);\n```\n\u5c06\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u5b57\u6bcd\u8f6c\u6362\u6210ASCLL\u7801\u4e3a\u7b2c 58...63 \u4e2a\u5b57\u7b26\n```\n  for i:=1 to 30 do\n   begin\n    l:=length(m);\n    p:=false;//\u63a7\u5236\u8fdb\u4f4d\u7684\u53d8\u91cf \u503c\u4e3a True \u5c31\u8fdb\u4f4d \u9ed8\u8ba4\u4e3a False\n    s:='';\n    for j:=1 to l do\n     begin\n      add:=(ord(m[j])+ord(m[l-j+1])-96);\n      if p then inc(add);\n      p:=false;\n      s:=chr(add mod n+48)+s;\n      if add>=n then p:=true\n     end;\n    if p then s:='1'+s;//\u8fd0\u7b97\u7ed3\u675f\u540e\u7684\u8fdb\u4f4d\u5224\u65ad \u56e0\u4e3a\u662f\u52a0\u6cd5 \u6240\u4ee5\u53ea\u53ef\u80fd\u8fdb\u4e00\u4f4d\n    if judge(s) then begin\n                      write('STEP=',i);\n                      exit\n                     end;\n    m:=s\n   end;\n  write('Impossible!')\n end.\n```",
        "postTime": 1540472414,
        "uid": 66364,
        "name": "\u843d\u9b41",
        "ccfLevel": 0,
        "title": "\u778e\u6253\u7684\u4e00\u4e2a\u6807\u9898"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u9ad8\u7cbe\u5ea6\u52a0\u4e0a\u8fdb\u5236\u8f6c\u6362\u3002\n\n\u5176\u5b9e\u5c3116\u8fdb\u5236\u9ebb\u70e6\u4e86\u70b9\uff0c\u5176\u4ed6\u53ea\u9700\u7528\u4e00\u4e9b\u666e\u901a\u7684\u601d\u60f3\u5c31\u884c\u4e86\u3002\n\nps:\u4ee3\u7801\u6bd4\u697c\u4e0b\u7684\u77ed\uff0c\u5176\u5b9e\u4e0d\u7528\u90a3\u4e48\u7684\u9ebb\u70e6\u3002\n\n\u6211\u7684\u4ee3\u7801\u9002\u5408\u4e0d\u4f1a\u51fd\u6570\u8fc7\u7a0b\u7684\u521d\u5b66\u8005\u3002\n\n\u4ee3\u7801\u88ab\u6211\u505a\u4e86\u624b\u811a\uff0c\u8d85\u4ee3\u7801\u515a\u5c0f\u5fc3\u4e86\uff01\uff01\n\n\n\n\n\n\n\n\n\n```cpp\nvar\n  i,j,n,m,x,y,k,t:longint;\n  a,b:array[1..200]of longint;\n  s,sx:string;\n  bool:boolean;\nbegin\n  readln(n);\n  readln(s);\n  for i:=1 to length(s) do\n    begin\n      if (s[i]<='F')and(s[i]>='A') then\n                                     case s[i] of\n                                     'A':a[i]:=10;\n                                     'B':a[i]:=11;\n                                     'C':a[i]:=12;\n                                     'D':a[i]:=13;\n                                     'E':a[i]:=14;\n                                     'F':a[i]:=15;\n                                     end\n                                   else\n                                     val(s[i],a[i],x)\uff1b\n    end;     //\u8fb9\u8f93\u5165\u8fb9\u8f6c\u6362\n  k:=0;x:=length(s);\n  while (k<=30)and(not(bool))\uff5b\u6700\u591a30\u6b21\uff5ddo\n    begin\n      k:=k+1;\n      for i:=1 to x do\n        b[x-i+1]:=a[i];\n      for i:=1 to x+3 do\n        begin\n          a[i]:=a[i]+b[i];\n          a[i+1]:=a[i] div n+a[i+1];\n          a[i]:=a[i] mod n;\n        end;//\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\n      for i:=200 downto 1 do\n        if a[i] <> 0 then\n                       begin\n                         x:=i;\n                         str(x,sx);\n                         break;\n                       end;//\u4ece\u6700\u540e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0 \u7684\u6570\n      i:=1;j:=x;bool:=true;\n      while i<j  do\n        begin\n          if a[i]<>a[j] then\n                          bool:=false;\n          i:=i+1;\n          j:=j-1;\n        end;//\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570\n    end;\n  if k<=30 then\n             write('STEP=',k)\n           else\n             write('Impossible!');//\u6ce8\u610f\u611f\u53f9\u53f7\u662f\u82f1\u6587\u7684\nend.\n```",
        "postTime": 1504948492,
        "uid": 52686,
        "name": "King__James",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u9996\u5148\u5c31\u5e94\u8be5\u662f\u4e00\u70b9\u90fd\u4e0d\u614c\u7684\uff0c\u6709\u4e9b\u4eba\u89c9\u5f97\u8fd9\u9053\u9898\u76ee\u6d89\u53ca\u5230\u4e86\u4e0d\u540c\u7684\u8fdb\u5236\uff0c\u6240\u4ee5\u8ba4\u4e3a\u8fd9\u9053\u9898\u76ee\u6709\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u5462\uff0c\u6211\u4eec\u4e0d\u59a8\u6362\u79cd\u601d\u8def\uff0c\u628a\u8fd9\u9053\u9898\u76ee\u7406\u89e3\u6210\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u53ea\u662f\u8fdb\u4f4d\u7684\u6761\u4ef6\u753110\u6539\u6210\u4e86k\u800c\u5df2\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06A,B,C,D,E,F\u7406\u89e3\u621010,11,12,13,14,15\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6709\u4e2a11\u8fdb\u5236\u7684\u6570\u5b571A\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u8ba4\u4e3a\u662f\u767e\u4f4d\u662f1\uff0c\u4e2a\u4f4d\u662f11\u7684\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u518d\u53bb\u8003\u8651\u8fdb\u5236\u4e86\u3002\u6211\u4eec\u9996\u5148\u5f00\u4e2a\u6570\u7ec4a\u8868\u793a\u7ed3\u679c\uff0c\u7136\u540e\u5bf9a\u8fdb\u884c\u6309\u7167\u9898\u76ee\u63cf\u8ff0\u7684\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0ccheck\u4e00\u8d9f\uff0c\u5982\u679c\u7b26\u5408\u8981\u6c42\u5c31\u8f93\u51fa\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\u5c31\u7ee7\u7eed\uff0c\u5982\u679c\u6b65\u6570\u8d85\u8fc7\u4e8630\u5c31\u8f93\u51faImpossible!\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\ninline void work(){\n    int js=0;\n    while (1){\n        int b[55],c[55];\n        memcpy(b,a,sizeof(b)),memset(c,0,sizeof(c));c[0]=a[0];\n        for (int i=1;i<=c[0];i++)c[i]=a[c[0]-i+1];\n//        for (int i=a[0];i>0;i--)printf(\"%d\",b[i]);printf(\"\\n\");\n//        for (int i=a[0];i>0;i--)printf(\"%d\",c[i]);printf(\"\\n\");\n        memset(a,0,sizeof(a));a[0]=c[0];\n        for (int i=1;i<=c[0];i++){\n            a[i]+=(b[i]+c[i]);\n            a[i+1]+=(a[i]/k);\n            a[i]%=k;\n        }\n        if (a[a[0]+1])a[0]++;\n        js++;\n//        for (int i=a[0];i>0;i--)printf(\"%d\",a[i]);printf(\"\\n\");\n        if (js>30){printf(\"Impossible!\\n\");exit(0);}\n        if (check()){printf(\"STEP=%d\\n\",js);exit(0);}\n    }\n}\n```",
        "postTime": 1504598308,
        "uid": 36909,
        "name": "_YPC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u5178\u578b\u7684\u9ad8\u7cbe\u5ea6+\u8fdb\u5236\u8f6c\u6362\n\n\u901a\u8fc7\u6570\u7ec4\u6a21\u62df\u9ad8\u7cbe\u5ea6\u6570\u4f4d\uff0c\u8fdb\u884cN\u8fdb\u5236\u52a0\u6cd5\u6765\u6c42\u5f97\u7ed3\u679c\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u56e0\u4e3a\u65e2\u8981\u5224\u65ad\u56de\u6587\u8fd8\u8981\u7528\u9ad8\u7cbe\u5ea6\u8fdb\u884c\u52a0\u6cd5\u3002\n\n\u4ee3\u7801\u601d\u8def\uff1a\n\n1\uff1a\u8bfb\u5165\uff0c\u91c7\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\uff0c\u7528\u6570\u7ec4\u5b58\u50a8\n\n2\uff1a\u5982\u679c\u8bfb\u5165\u7684\u662f0\u7684\u8bdd\u90a3\u4e48\u5c31\u8f93\u51fa0\uff08data\u53ef\u80fd\u6ca1\u8fd9\u4e2a\u70b9\uff0c\u56e0\u4e3a\u6211\u8f93\u51fa\u7684\u662f0\u4e0d\u662fSTEP=0\uff09\n\n3\uff1a\u6c42\u5f97A\u7684\u53cd\u5e8f\u6570B\uff0c\u5e76\u8fdb\u884cN\u8fdb\u5236\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\n\n4\uff1a\u5224\u65ad\u4f4d\u6570\u662f\u5426\u8d85\u8fc730\u6216\u8005\u662f\u5426\u4e3a\u56de\u6587\u6570\n\n5\uff1a\u8f93\u51fa\uff0c\u641e\u5b9a\u3002\n\n\u8d34\u4e2a\u4ee3\u7801\uff0c\u5efa\u8bae\u4e0d\u8981\u6284\uff0c\u5148\u53ef\u6839\u636e\u4ee3\u7801\u601d\u8def\u6765\u5c1d\u8bd5\u5199\u4ee3\u7801\uff0c\u7136\u540e\u5982\u679c\u6709\u56f0\u96be\u5728\u770b\u4e00\u4e0b\u4ee3\u7801\u53c2\u8003\u3002\n\n\n\n```cpp\ntype arr=array[0..101] of longint;\nvar\n  n,i,ans:longint;\n  a,b:arr;\nprocedure init(var a:arr);                       //\u5c06\u6570\u4e32s\u8f6c\u5316\u4e3a\u6574\u6570\u6570\u7ec4a\nvar\n  s:string;\n  i:longint;\nbegin\n  readln(n);\n  readln(s);                                  //\u8bfb\u5165\u5b57\u7b26\u4e32s\n  fillchar(a,sizeof(a),0);                        //\u6570\u7ec4a\u6e050\n  a[0]:=length(s);                             //\u7528a[0]\u50a8\u5b58\u5b57\u7b26\u4e32s\u7684\u4f4d\u6570\n  for i:=1 to a[0] do\n   if (s[i]>='0') and (s[i]<='9') then\n     a[a[0]-i+1]:=ord(s[i])-ord('0')\n   else a[a[0]-i+1]:=ord(s[i])-ord('A')+10;\nend;\nfunction check(a:arr):boolean;                   //\u5224\u522b\u6574\u6570\u6570\u7ec4a\u662f\u5426\u4e3a\u56de\u6587\u6570\nvar i:longint;\nbegin\n  for i:=1 to a[0] do\n    if a[i]<>a[a[0]-i+1] then exit(false);\n  exit(true);\nend;\nprocedure jia(var a:arr);                        //\u6574\u6570\u6570\u7ec4a\u4e0e\u5176\u53cd\u5e8f\u6570b\u8fdb\u884cn\u8fdb\u5236\u52a0\u6cd5\u8fd0\u7b97\nvar i,k:longint;\nbegin\n  for i:=1 to a[0] do b[i]:=a[a[0]-i+1];            //\u53cd\u5e8f\u6570b\n  for i:=1 to a[0] do a[i]:=a[i]+b[i];              //\u9010\u4f4d\u76f8\u52a0\n  for i:=1 to a[0] do\n  begin\n    a[i+1]:=a[i+1]+a[i] div n;                  //\u5904\u7406\u8fdb\u4f4d\n    a[i]:=a[i] mod n;\n  end;\n  if a[a[0]+1]>0 then inc(a[0]);                 //\u4fee\u6b63\u65b0\u7684a\u7684\u4f4d\u6570\uff08a+b\u6700\u591a\u53ea\u80fd\u591a\u4e00\u4e2a\u4f4d\u6570\uff09\nend;\nbegin\n  //assign(input,'huiwen.in'); reset(input);\n  //assign(output,'huiwen.out'); rewrite(output);\n  init(a);//\u8f93\u5165A\n  if check(a) then                            //\u5224\u65ada\u672c\u8eab\u5c31\u662f\u56de\u6587\u6570\u7684\u60c5\u51b5\n  begin\n    writeln(\u2018STEP=0\u2019);//\u76f4\u63a5\u8f93\u51faSTEP=0\n    halt;\n  end;\n  ans:=0;                                   //\u6b65\u6570\u521d\u59cb\u5316\u4e3a0\n  while (ans<30) do//\u6b65\u6570\u5fc5\u987b\u572830\u4ee5\u5185\n  begin\n    inc(ans);//\u6b65\u6570\u52a0\u4e00\n    jia(a);//\u52a0\u6cd5\n    if check(a) then//\u5982\u679cA\u662f\u56de\u6587\u90a3\u4e48\u5c31\u8f93\u51fa\u6b65\u6570\n    begin\n      writeln('STEP=',ans);//STEP\u662f\u5927\u5199\u7684\uff01\uff01\uff01\n      halt;\n    end;\n  end;\n  writeln('Impossible!');                        //\u8f93\u51fa\u65e0\u89e3\u4fe1\u606f\uff0c\u6ce8\u610f\u611f\u53f9\u53f7\u662f\u82f1\u6587\u7684\n  //close(output);\nend.\n\n```",
        "postTime": 1501767953,
        "uid": 37084,
        "name": "Yemaster",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u8fd0\u7528\u5b66\u4e60\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u65f6\u7684\u601d\u60f3 \u7528\u5b57\u7b26\u4e32\u6765\u5b58\u50a8\u6570\u636e \u7136\u540e\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u52a0\u6cd5\n\n\u5728\u6bd4\u8f83\u7684\u65f6\u5019\u6ce8\u610f\u5224\u65ad \u5224\u65ad\u4e0d\u6210\u7acbans++ \u4e00\u76f4\u523030\u6216\u8005\u5224\u65ad\u6210\u529f\u8f93\u51fa\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nconst int maxn = 1005;\nint a[maxn], N;\nvoid in(int a[]){\n    string str;\n    cin >> N >> str;\n    a[0] = str.length();\n    for(int i = 1; i <= a[0]; i++){\n        if(str[a[0] - i] >= '0' && str[a[0] - i] <= '9') a[i] = str[a[0] - i] - '0';\n        else a[i] = str[a[0] - i] - 'A' + 10;\n    }\n}\ninline bool check(int a[]){\n    //int a1[maxn];\n    for(int i = 1; i <= a[0]; i++)\n        if(a[i] != a[a[0] - i + 1]) return false;\n    return true;\n}\ninline void Plus(int a[]){\n    int b[maxn];\n    for(int i = 1; i <= a[0]; i++) b[i] = a[a[0] - i + 1];\n    for(int i = 1; i <= a[0]; i++) a[i] += b[i];\n    for(int i = 1; i <= a[0]; i++){\n        a[i + 1] += a[i] / N;\n        a[i] %= N;\n    }\n    while(a[a[0] + 1] > 0) a[0]++;\n    return;\n}\nint main(){\n    in(a);\n    if(check(a)){\n        cout << \"STEP=0\";\n        return 0;    \n    } \n    int ans = 0;\n    while(ans <= 30){\n        ans++;\n        Plus(a);\n        if(check(a)){\n            cout << \"STEP=\" << ans;\n            return 0;\n        } \n    }\n    cout << \"Impossible!\";\n    return 0;\n}\n```",
        "postTime": 1496232821,
        "uid": 17318,
        "name": "Cet6_427",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u5bf9\u4e8e16\u8fdb\u5236\u7684\u5904\u7406\u53ef\u4ee5\u4f7f\u7528-'A'+10\u800c\u4e0d\u5fc5\u4e00\u4e2a\u4e2a\u5224\u65ad\u3002\u8fd9\u4efd\u4ee3\u7801\u91cc\u9762\u4f7f\u7528\u7684\u662f\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u8fd9\u6837\u505a\uff0c\u5e94\u8be5\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u3002\u8fdb\u4f4d\u7684\u65f6\u5019\u6570\u7ec4resize\u4e00\u4e0b\uff0c\u6269\u5927\u4e00\u4f4d\uff08\u6211\u6269\u5927\u4e86\u4e24\u4f4d\uff09\u3002\u7136\u540e\u8f93\u51fa\u7684Impossible!\u7684\u53f9\u53f7\u662f\u534a\u89d2\u7684\u3002\n\n>\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\nstring KaitenKapatsu(int n, string ipt0);\nbool isKaiten(string ipt);\nvoid solve(int n, string ipt);\nint main()\n{\n    int n;\n    string ipt;\n    cin >> n >> ipt;\n    solve(n, ipt);\n    getchar(); getchar();\n    return 0;\n}\nstring KaitenKapatsu(int n, string ipt0) {\n    for (int i = 0; i < ipt0.size(); i++) {                //\u8bfb\u5165\u6570\u636e\u5e76\u8f6c\u4e3achar[]\n        if (ipt0[i] > 57)                                //\u5341\u516d\u8fdb\u5236\u7684\u5904\u7406\n            ipt0[i] -= 7;\n        ipt0[i] -= '0';\n    }\n    string ipt = ipt0;\n    for (int i = 0; i < ipt0.size(); i++)                //\u5012\u5e8f\n        ipt[i] = ipt0[ipt0.size() - i - 1];\n    string ipt2 = ipt;\n    for (int i = 0; i < ipt.size(); i++) {                //\u5012\u5e8f\u76f8\u52a0\n        ipt2[i] += ipt0[i];\n    }\n    ipt2.resize(ipt2.size() + 2);\n    for (int i = 0; i < ipt2.size() - 1; i++) {            //\u8fdb\u4f4d\n        ipt2[i + 1] += ipt2[i] / n;\n        ipt2[i] %= n;\n    }\n    for (int i = 0; i < ipt2.size(); i++) {                //\u8fd8\u539f\u4e3astirng\n        if (ipt2[i] >= 10)                                //\u5341\u516d\u8fdb\u5236\u7684\u8fd8\u539f\n            ipt2[i] += 7;\n        ipt2[i] += '0';\n    }\n    bool judge = 0;\n    for (int i = ipt2.size()-1; i >= 0; i--)             //\u53bb\u9664\u524d\u5bfc\u96f6\n        if (ipt2[i] == '0'&&judge == 0) { ipt2.erase(i, 1); }\n        else { judge = 1; }\n    ipt.resize(ipt2.size());                            //\u8fd4\u56de\u503cresize\u9884\u5907\u8f93\u51fa\n    for (int i = 0; i < ipt2.size(); i++)                //\u5012\u5e8f\n        ipt[i] = ipt2[ipt.size() - 1 - i];\n    return ipt;\n}\nvoid solve(int n,string ipt){                            //\u7edf\u8ba1\u6b65\u6570\n    int cnt = 0;\n    while (isKaiten(ipt) == 0 && cnt<31) {\n        ipt = KaitenKapatsu(n, ipt);\n        cnt++;\n    }\n    if (cnt > 30){cout << \"Impossible!\";}\n    else { cout << \"STEP=\" << cnt; }\n}\nbool isKaiten(string ipt) {                                //\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\n    for (int i = 0; i < ipt.size(); i++) \n        if (ipt[i] != ipt[ipt.size() - i - 1])return 0;\n    return 1;\n}\n```",
        "postTime": 1475484372,
        "uid": 24672,
        "name": "Rika",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u6b64\u9898\u6709\u51e0\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u522b\u7684\u4e0d\u96be\uff1a\n\n1\u3001\u4e0d\u8981\u88ab\u6570\u636e\u6240\u8ff7\u60d1\uff0c\u670916\u8fdb\u5236\uff0c\u800c\u4e14\u662f\u9ad8\u7cbe\u5ea6\uff08\u9898\u76ee\u4e2d\u8bf4\u8fc7\uff09\n\n2\u300116\u8fdb\u5236\u7684\u5904\u7406\uff08\u4e00\u5b9a\u4e0d\u80fd-'0'\uff0c\u5426\u5219\u4f1a\u6b7b\u7684\u5f88\u60e8\uff01\uff01\uff01\uff09\n\n3\u3001\u8fdb\u4f4d\u8981\u6ce8\u610f\uff08-10\u4e00\u6837\u4f1a\u6b7b\u7684\u5f88\u60e8\uff0c\u53ef\u80fd\u8fd8\u4f1a\u66f4\u60e8\uff01\uff01\uff01\uff01\uff01\uff01\uff09\n\n4\u3001\u56de\u6587\u6570\u7684\u5224\u65ad\uff08\u4e00\u5b9a\u8981\u4f1a\uff0c\u5426\u5219\u4e00\u5207\u767d\u642d\uff09\n\n5\u3001\u6ce8\u610f\u8d85\u8fc730\u6b65\u4e00\u5b9a\u8981\u8f93\u51faImpossible!\uff0c\u5426\u5219\u5f97\u4e0d\u6ee1\uff01\uff01\n\n6\u3001\u52a0\u540e\u8981\u6ce8\u610f\u53ef\u80fd\u4f1a\u6709\u6700\u9ad8\u4f4d\u8fdb\u4f4d\uff0c\u5426\u5219\uff0c0\u5206\uff08\u8fd9\u662f\u6700\u60e8\u7684\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff09\n\n7\u3001\u7528\u57df/\u7ed3\u6784\u4f53\u5b58\u50a8\uff0c\u65b9\u4fbf\u8fdb\u4f4d\u3001\u8f6c\u6362\u7b49\n\n```cpp\nstruct number\n{int len,a[100001];};\nint n;\nnumber a1,a2;//\u6570\u5b57\u4f4d\u6570\u4e3alen\uff0c\u75310.1....len-1\u6309\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u5b58\u50a8\nbool judge(number a)\n{\nfor(int i=0;i<a.len/2;i++)//\u5224\u65ad\u56de\u6587\u6570\nif(a.a[i]!=a.a[a.len-i-1])return 1;//\u4e0d\u662f\u56de\u6587\u6570\u8fd4\u56de1\nreturn 0;//\u662f\u5219\u8fd4\u56de0\n}\nnumber jia(number a,number b)\n{\nfor(int i=0;i<a.len;i++)\n{\na.a[i]+=b.a[i];//\u628ab\u4e2d\u7684\u6570\u4f9d\u6b21\u52a0\u5165a\u4e2d\uff0c\u7ed3\u679c\u5b58\u653e\u5728a\u91cc\nif(a.a[i]>=n)//\u91cd\u70b91\uff1a\u4e00\u5b9a\u662fn\uff0c\u4e0d\u662f10\n{a.a[i]-=n;a.a[i+1]++;}\n}\nif(a.a[a.len])a.len++;//\u91cd\u70b92\uff1a\u91cd\u4e2d\u4e4b\u91cd\uff0c\u4e00\u5b9a\u8981\u5224\u65ad\u6700\u9ad8\u4f4d\u662f\u5426\u6709\u8fdb\u4f4d\u3002\u522b\u7684\u4e0d\u5199\u5f97\u90e8\u5206\u5206\uff0c\u6b64\u5904\u4e0d\u5199\u5b8c\u86cb\uff01\nreturn a;//\u7ed3\u679c\u5b58\u653e\u5728a\u4e2d\n} \nint main()\n{\nstring st;\ncin>>n>>st;\na1.len=st.length();//\u521d\u59cb\u5316a1\u7684\u4f4d\u6570\u5c31\u662fst\u7684\u4e32\u957f\nint i,step=0;\nfor(i=0;i<a1.len;i++)\nif(st[i]>='0'&&st[i]<='9')\na1.a[a1.len-i-1]=st[i]-'0';\nelse a1.a[a1.len-i-1]=st[i]-'A'+10;//\u4e32\u5012\u7f6e\u5b58\u653e\uff0c\u4f46\u4e0d\u5012\u7f6e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5927\u788d\uff0c\u7b2c2\u6b21\u5c31\u597d\u4e86\nwhile(judge(a1)&&step<=30)//\u91cd\u70b93\uff1a\u6bcf\u6b21\u7684\u7ed3\u679ca1\u4e0d\u662f\u56de\u6587\u6570\u4e14\u6b65\u6570\u572830\u4ee5\u5185\n{\na2.len=a1.len;//\u5012\u7f6e\u6570\u7684\u6027\u8d28\uff1a\u4f4d\u6570\u76f8\u7b49\nfor(i=0;i<a1.len;i++)a2.a[i]=a1.a[a1.len-i-1];//\u5012\u7f6e\u5b58\u653e\u5728\u4e34\u65f6\u7684\u7ed3\u6784\u4f53a2\u4e2d\na1=jia(a1,a2);//\u76f8\u52a0\u7ed3\u679c\u5728a1\nstep++;//\u83ab\u5fd8\u6b65\u6570+1\uff08\u9488\u5bf9\u7c97\u5fc3\u7684\u4eba\uff09\n}\nif(step<=30)cout<<\"STEP=\"<<step;//\u91cd\u70b94\uff1a\u5224\u65ad\u6b65\u6570\u662f\u5426\u572830\u6b65\u4ee5\u5185\uff0c\u662f\u5c31\u8f93\u51fa\u6b65\u6570\nelse cout<<\"Impossible!\";//\u5426\u5219\u8f93\u51fa\u7b26\u53f7\n}\n```",
        "postTime": 1438871542,
        "uid": 3525,
        "name": "hfctf0210",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u6a21\u62df\u6c34\u9898\uff08\u5c45\u7136\u53ea\u67094\u4e2a\u70b9=\\_=|||\uff09\n\u9996\u5148\u8f93\u5165\uff1a\u6ce8\u610f\u4e0d\u8981\u88ab\u6837\u4f8b\u9a97\u4e86\uff0c\u4ed4\u7ec6\u8bfb\u9898\u5c31\u4f1a\u53d1\u73b0\u4f1a\u670916\u8fdb\u5236\u7684\u6570\u636e\uff0c\u5224\u65ad\u5904\u7406\u4e00\u4e0b\u5c31\u597d\uff1b\n\n\u5c1d\u8bd530\u6b21\u7b80\u5355\u7684N\u8fdb\u5236\u52a0\u6cd5\uff08\u5047\u8bbe\u6bcf\u6b21\u90fd\u8fdb\u4f4d\uff0c\u6570\u636e\u8f93\u5165\u65f6\u6709100\u4f4d\u4e5f\u6700\u591a\u53ea\u6709\u4e0d\u5230150\u4f4d\uff09\n\n\u6ce8\u610f\uff1a\u7531\u4e8ec\u6570\u7ec4\u6709\u7d2f\u52a0\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u90fd\u5fc5\u987b\u6e050\uff08\u4ee5C\u3001C++\u7684MemSet\u6216Pascal\u7684FillChar\uff09\n\n\u56e0\u4e3a\u4e0d\u9700\u8981\u8f93\u51fa\u6700\u7ec8\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u7528\u5b57\u7b26\u4e32\u6765\u50a8\u5b58\uff0c\u56e0\u4e3a\u4e00\u7cfb\u5217\u7684\u8f6c\u5316\u5341\u5206\u9ebb\u70e6\u3002\n\n\u4e00\u53e5\u8bdd\uff1a\u5904\u7406\u597d\u7ec6\u8282\uff0c\u8fd9\u9898\u5c31\u4e00\u70b9\u90fd\u4e0d\u96be\uff0c\u4e00\u6b21Accepted\u4e0d\u662f\u68a6\uff01\n\n\u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u8017\u65f615ms\uff0c\u5185\u5b583137kb\u7684Pascal\u7a0b\u5e8f\u3002\u66f4\u4f18\u76840ms\u4ee5\u53ca\u5185\u5b58\u7ea62mb\u7684\u89e3\u6cd5\u8bf7\u8bfb\u8005\u81ea\u884c\u601d\u8003\u3002\n\n```delphi\n\nvar\n n,i,j:longint;\n ch:char;\n a,b,c:array [0..1000] of integer;\n t:boolean;\nbegin\n readln(n);\n repeat\n  read(ch);\n  inc(a[0]);\n  if ch in ['0'..'9'] then a[a[0]]:=ord(ch)-48 else a[a[0]]:=ord(ch)-55\n until eoln;\n for i:=1 to 30 do\n begin\n  for j:=1 to a[0] do b[j]:=a[a[0]-j+1];\n  for j:=1 to a[0] do\n  begin\n   inc(c[j],a[j]+b[j]);\n   c[j+1]:=c[j] div n;\n   c[j]:=c[j] mod n\n  end;\n  if c[a[0]+1]>0 then c[0]:=a[0]+1 else c[0]:=a[0];\n  t:=true;\n  for j:=1 to c[0] div 2 do\n   if c[j]<>c[c[0]-j+1] then\n    begin\n     t:=false;\n     break\n    end;\n  if t then\n   begin\n    write('STEP=',i);\n    halt\n   end;\n  a:=c;\n  fillchar(b,sizeof(b),0);\n  fillchar(c,sizeof(c),0)\n end;\n write('Impossible!')\nend.\n\n```",
        "postTime": 1428116757,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1015 \u3010\u56de\u6587\u6570\u3011"
    }
]