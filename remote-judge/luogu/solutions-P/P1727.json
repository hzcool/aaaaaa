[
    {
        "content": "blog:[Masof TBB](http://hexo.tbb-nozomi.xyz/high-precision-calc-of-pi/)\n\n\u524d\u8bb0\uff1a\u672c\u9898\u662f\u76ee\u524d\u6d1b\u8c37\u6240\u6709\u542b\u6709\u201c\u9ad8\u7cbe\u5ea6\u201d\u7684 tag \u4e2d\u552f\u4e00\u4e00\u4e2a\u542b\u6709\u9ad8\u7cbe\u5ea6\u5706\u5468\u7387\u8ba1\u7b97\u7684\u9898\u76ee\u3002\u5982\u679c\u5bf9\u672c\u9898\u505a\u51fa\u6269\u5c55\uff0c\u4e5f\u53ef\u4ee5\u5c06\u672c\u9898\u5f53\u4f5c\u9ad8\u7cbe\u5ea6\u53cd\u4e09\u89d2\u51fd\u6570\u7684\u9898\u76ee\u6765\u505a\u3002\u56e0\u6b64\u6211\u5c31\u6765\u8fd9\u4e2a\u9898\u4e0b\u624b\u4e86\uff08\n\n\u5728\u672c\u6587\u4e2d\uff0c\u672c\u6587\u51fa\u793a\u672c\u9898\u89e3\u7b54\u7684\u56db\u79cd\u65b9\u6cd5\uff0c\u5e76\u7b80\u8981\u8bc1\u660e\u5176\u5b83\u9898\u89e3\u4e2d\u51fa\u73b0\u4f46\u5c1a\u672a\u8bc1\u660e\u7684\u4e00\u4e9b\u6052\u7b49\u5f0f\uff0c\u5e2e\u52a9\u5404\u4f4d\u8bfb\u8005\u7406\u89e3\u3002\u5728\u4e0d\u53e6\u5916\u52a0\u4ee5\u8bf4\u660e\u7684\u60c5\u51b5\u4e0b\uff0c\u672c\u9898\u9ed8\u8ba4 $N$ \u8868\u793a\u9898\u76ee\u6240\u9700\u7684\u6709\u6548\u6570\u4f4d\uff08\u5373\u7cbe\u5ea6\u4e3a $10^{-N}$\uff09\uff0c$n$ \u8868\u793a\u8fed\u4ee3\u3001\u7d2f\u52a0\u6240\u9700\u8981\u7684\u9879\u7684\u4e2a\u6570\u3002\n\n### 0. \u6253\u8868\n\n\u524d\u4eba\u4e4b\u8ff0\u5907\u77e3\u3002\u5982\u679c\u4f60\u60f3\u7528\u6253\u8868\u6765\u6c42\u89e3\u6b64\u9898\uff0c\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\u5c06\u5185\u5bb9\u683c\u5f0f\u5316\u4e3a\u7a0b\u5e8f\u6240\u80fd\u63a5\u53d7\u7684\u5f62\u5f0f\u3002$\\pi$ \u7684\u6570\u636e\u7684\u6765\u6e90\u53ef\u4ee5\u662f\u7f51\u4e0a\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u662f\u7ebf\u4e0b\u81ea\u5df1\u624b\u5199\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\uff08\u5982\u679c\u80fd\u8bfb\u8005\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u60f3\u5fc5\u662f\u4e0d\u9700\u8981\u672c\u7bc7\u9898\u89e3\u4e5f\u80fd\u901a\u8fc7\u6b64\u9898\u7684\u4e86\uff09\u3002\u4e00\u79cd\u6765\u6e90\u662f\u5728\u8f6f\u4ef6 Mathematica \u4e0a\u8f93\u5165 `N[Pi, 10001]` \u5373\u53ef\u5f97\u5230\u6ee1\u8db3\u9898\u76ee\u9700\u6c42\u7684\u5706\u5468\u7387\u5c0f\u6570\u70b9\u540e 10000 \u4f4d\u7684\u5168\u6587\u672c\u3002\n\n### 1. \u7ea7\u6570\u4e0e\u8fed\u4ee3\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u4e00\u4e2a\u4f60\u89c9\u5f97\u597d\u7528\u7684\u597d\u8ba1\u7b97\u7684 $\\pi$ \u7684\u6c42\u548c\u5f0f\u6216\u8005\u8fed\u4ee3\u5f0f\u3002\u53ef\u9009\u7684\u6709\u7b80\u5355\u7684\u5fae\u79ef\u5206\u77e5\u8bc6\uff08\u6cf0\u52d2\u5c55\u5f00\u548c\u5404\u79cd\u4e2d\u503c\u5b9a\u7406\uff09\u7528\u4e8e\u5f97\u5230\u8ba1\u7b97\u5f0f\u548c\u4f30\u8ba1\u5c3e\u9879\uff1b\u5404\u79cd\u9ad8\u4e2d\u7684\u4e09\u89d2\u51fd\u6570\u516c\u5f0f\uff1b[\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u9664\u6cd5](https://www.luogu.com.cn/problem/P5432)\uff0c\u6216\u8005\u662f\u4e00\u70b9\u7b80\u5355\u7684\u9ad8\u7cbe\u5ea6\u5b9a\u70b9\u6570\u5bf9\u4f4e\u7cbe\u5ea6\u6570\u7684\u4e58\u6cd5\u548c\u9664\u6cd5\u3002\n\n\u548c $\\mathrm{e}$ \u4e0d\u4e00\u6837\uff0c$\\pi$ \u7684\u8ba1\u7b97\u7531\u6765\u5df2\u4e45\uff0c\u5728\u6570\u5b66\u53f2\u4e0a\u53d1\u5c55\u7684\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u9636\u6bb5\u90fd\u4f1a\u751f\u6210\u51fa\u5404\u79cd\u5404\u6837\u6c42 $\\pi$ \u7684\u516c\u5f0f\u3002\u5982\u679c\u4e0d\u8ffd\u6c42\u6548\u7387\u548c\u7cbe\u5ea6\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528\u8499\u7279\u5361\u6d1b\u6cd5\u6765\u4f30\u7b97 $\\pi$\u3002\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a*\u4e0d\u9002\u5b9c*\u672c\u9898\u4f7f\u7528\u7684\u7ea7\u6570\u7684\u4f8b\u5b50\uff1a\u4e00\u4e2a\u6700\u6709\u540d\u7684 $\\pi$ \u7684\u7ea7\u6570\u8868\u8fbe\u5f0f\u662f\n$$(1)\n\\frac{\\pi}{4} = 1-\\frac{1}{3}+\\frac{1}{5}-\\frac{1}{7}+\\dots=\\sum_{k=0}^{\\infty}(-1)^k\\frac{1}{2k+1}\n$$\n\u79f0\u4e3a **Leibniz-Gregory \u7ea7\u6570**\u3002\u8fd9\u4e00\u5f0f\u5b50\u672c\u8d28\u4e0a\u6765\u6e90\u4e8e\u53cd\u6b63\u5207\u51fd\u6570 $\\arctan x$ \u5728 $x=0$ \u5904\u7684 **Maclaurin \u5c55\u5f00\u5f0f**\uff1a\n$$(2)\n\\arctan x = x-\\frac{x^3}{3}+\\frac{x^5}{5}-\\frac{x^7}{7}+\\dots=\\sum_{k=0}^{\\infty}(-1)^k\\frac{x^{2k+1}}{2k+1}\n$$\n\u7136\u540e\u5c06 $x=1$ \u7684\u503c\u4ee3\u5165\u3002\u867d\u7136\u8fd9\u4e2a\u5f0f\u5b50\u76f8\u5f53\u7ecf\u5178\uff0c\u4f46\u662f\u8fd9\u4e2a\u7ea7\u6570\u7684\u6536\u655b\u901f\u5ea6\u5f88\u6162\uff0c\u5982\u679c\u505a\u4e00\u4e2a\u4f30\u8ba1\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u5b83\u7684\u4f59\u9879\u5927\u6982\u5728 $\\mathcal{O}(\\frac{1}{n})$ \u8fd9\u4e2a\u91cf\u7ea7\uff08\u5176\u4e2d $n$ \u4e3a\u6c42\u548c\u6240\u4f7f\u7528\u7684\u9879\u6570\uff09\u3002\u5177\u4f53\u7684\u8bef\u5dee\u5206\u6790\u653e\u5230\u540e\u9762\u9ad8\u7cbe\u5ea6\u53cd\u6b63\u5207\u51fd\u6570\u7684\u5206\u6790\u90e8\u5206\uff0c\u4f46\u53ef\u4ee5\u786e\u5b9a\u5b83\u5e76\u4e0d\u9002\u5b9c\u6765\u5728\u9650\u5b9a\u65f6\u95f4\u4e2d\u505a\u51fa\u6b64\u9898\u3002\n\n\u4ece $\\arctan 1$ \u51fa\u53d1\uff0c\u5229\u7528\u6b63\u5207\u51fd\u6570\u76f8\u5173\u7684\u516c\u5f0f\uff0c\u5982 $\\tan (u+v) = \\frac{\\tan{u}+\\tan{v}}{1-\\tan{u}\\tan{v}}$\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u53cd\u6b63\u5207\u51fd\u6570\uff0c\u5199\u6210\u591a\u4e2a\u53cd\u6b63\u5207\u51fd\u6570\u7684\u548c\u4e0e\u5dee\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u4ee4 $u=\\arctan\\frac{1}{2}, v=\\arctan\\frac{1}{3}$\uff0c\u4ee3\u5165\u4e0a\u9762\u7684\u548c\u89d2\u516c\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $u+v=\\arctan 1$\u3002\u540c\u7406\uff0c\u53d6 $u=\\arctan\\frac{1}{5}$ \u548c $v=\\arctan\\frac{1}{239}$\uff0c\u5219\u53ef\u4ee5\u5f97\u5230 $4u-v=\\arctan 1$\u3002\u53cd\u590d\u4f7f\u7528\u516c\u5f0f\uff0c\u4f60\u751a\u81f3\u80fd\u5f97\u5230 $\\pi=32\\arctan\\frac{1}{10}-4\\arctan\\frac{1}{239}-16\\arctan\\frac{1}{515}$ \u8fd9\u6837\u770b\u8d77\u6765\u975e\u5e38\u58ee\u89c2\u7684\u516c\u5f0f\u3002\u8fd9\u7c7b **Machin \u516c\u5f0f**\u7684\u4e00\u4e2a\u5171\u540c\u601d\u60f3\uff0c\u5c31\u662f\u5229\u7528\u6b63\u5207\u51fd\u6570\u7684\u89d2\u52a0\u51cf\u53d8\u6362\uff0c\u5c06 $\\arctan 1$ \u53d8\u6210\u82e5\u5e72\u4e2a $\\arctan x$\uff08\u5176\u4e2d $x<1$\uff09\u7684\u548c\uff0c\u4f7f\u5f97\u53cd\u6b63\u5207\u7684\u9ea6\u514b\u52b3\u6797\u7ea7\u6570\u6536\u655b\u901f\u5ea6\u66f4\u5feb\u3002\u4e3a\u65b9\u4fbf\u8ba1\u7b97\uff0c\u901a\u5e38\u90fd\u4f1a\u628a\u5206\u89e3\u540e\u7684 $x$ \u5199\u6210\u4e3a\u5206\u5b50\u4e3a $1$ \u7684\u5355\u4f4d\u5206\u6570\u3002\n\n\u6211\u4eec\u53d6\u5176\u4e2d\u4e00\u4e2a\u516c\u5f0f\u4f5c\u4e3a\u4f8b\u5b50\u3002\u7531 $\\arctan\\frac{1}{2}+\\arctan\\frac{1}{3}=\\arctan 1$\uff0c\u6211\u4eec\u6709\uff1a\n$$(3)\n\\frac{\\pi}{4} = \\arctan\\frac{1}{2}+\\arctan\\frac{1}{3} = (\\frac{1}{2}-\\frac{1}{24}+\\frac{1}{160}-\\frac{1}{896}+\\dots) + (\\frac{1}{3}-\\frac{1}{81}+\\frac{1}{1215}-\\frac{1}{15309}+\\dots)\n$$\n\u54ea\u6015\u4ec5\u4ec5\u53ea\u662f\u4ece\u6570\u5217\u7684\u9879\u7684\u5927\u5c0f\u6765\u770b\uff0c\u6211\u4eec\u4e5f\u80fd\u9884\u611f\u5230\u8fd9\u4e2a\u7ea7\u6570\u7684\u6536\u655b\u901f\u5ea6\u5e94\u8be5\u8fdc\u5feb\u4e8e\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u4f8b\u5b50\u3002\u4e8b\u5b9e\u4e0a\uff0c\u53d6 $\\arctan\\frac{1}{k}$ \u5e26\u5165\u5230\u9ea6\u514b\u52b3\u6797\u5c55\u5f00\u5f0f\u91cc\u9762\uff0c\u5219\u5b83\u7684\u4f59\u9879\u5927\u6982\u5728 $\\mathcal{O}(\\frac{1}{k^N})$ \u8fd9\u4e00\u91cf\u7ea7\u3002\u8fd9\u6837\u7684\u516c\u5f0f\u5df2\u7ecf\u53ef\u4ee5\u7528\u6765\u505a\u672c\u9898\u4e86\u3002\n\n\u5728\u4e00\u4e9b\u4eba\u9898\u89e3\u4e2d\uff0c\u63d0\u5230\u4e86\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\n$$(4)\n\\frac{\\pi}{2} = 1+\\frac{1}{3}+\\frac{2}{15}+\\frac{6}{105}+\\dots = \\sum_{k=0}^{\\infty}\\frac{k!}{(2k+1)!!}\n$$\n\u5176\u4e2d $(2k+1)!! = 1\\times3\\times5\\times\\dots\\times(2k+1)$ \u8868\u793a\u53cc\u9636\u4e58\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u6536\u655b\u901f\u5ea6\u6bd4\u8f83\u5feb\u7684\u7ea7\u6570\u516c\u5f0f\u3002\u6839\u636e [Pi Formula](https://mathworld.wolfram.com/PiFormulas.html) \u9875\u9762\u4e0a\u7684\u4fe1\u606f\uff0c\u8fd9\u4e00\u516c\u5f0f\u6bcf\u8ba1\u7b97\u4e00\u9879\u5c31\u80fd\u63d0\u4f9b\u7ea6 2 bits \u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u5e73\u5747\u8ba1\u7b97 $3$ \u9879\u53ef\u4ee5\u4f7f\u4f60\u5341\u8fdb\u5236\u7684\u7cbe\u786e\u5ea6\u589e\u52a0\u4e00\u4f4d\u3002\u76f8\u5173\u7684\u8bc1\u660e\u4ee5\u53ca\u8bef\u5dee\u5206\u6790\u5c06\u653e\u5728\u7b2c2.5\u8282\u8bf4\u660e\u3002\n\n\u4e0a\u9762\u7684\u516c\u5f0f\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u70b9\uff1a\u4ed6\u4eec\u7684\u6570\u5217\u7684\u901a\u9879\u5f62\u5f0f\u4e0a\u90fd\u76f8\u5bf9\u7684\u7b80\u5355\uff0c\u800c\u4e14\u666e\u904d\u7684\u80fd\u4f7f\u7528\u524d\u4e00\u9879\u53bb\u63a8\u51fa\u540e\u4e00\u9879\u3002\u5229\u7528\u8fd9\u4e00\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u6574\u9879\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6765\u5f97\u5230\u66f4\u52a0\u7b80\u6d01\uff0c\u4e14\u7cbe\u786e\u5ea6\u66f4\u9ad8\u8ba1\u7b97\u8fc7\u7a0b\u3002\u4ee5\u4e0a\u9762\u7684 (Euler-T) \u7684\u5f0f\u5b50\u4e3a\u4f8b\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4f7f\u7528\u524d $N$ \u9879\u6c42\u548c\uff08$k=0$ \u7684\u9879\u89c6\u4e3a\u7b2c $0$ \u9879\uff09\uff0c\u5219\u53ef\u4ee5\u8c03\u6574\u8ba1\u7b97\u8fc7\u7a0b\u5982\u4e0b\uff1a\n$$(5)\n1+\\frac{1}{3}+\\frac{2!}{5!!}+\\dots+\\frac{(n-1)!}{(2n-1)!!}+\\frac{n!}{(2n+1)!!}\n=\n1+\\frac{1}{3}(1+\\frac{2}{5}(1+\\frac{3}{7}(\\dots(1+\\frac{n-1}{2n-1}(1+\\frac{n}{2n+1}\\times1)))))\n$$\n\u7531\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u4ece $S=1$ \u51fa\u53d1\uff0c\u5012\u7740\u679a\u4e3e $k$ \u4ece $N$ \u5230 $1$\uff0c\u6bcf\u4e00\u6b65\u90fd\u53d6 $1+\\frac{k}{2k+1}S \\to S$ \u7684\u8d4b\u503c\u64cd\u4f5c\u3002\u8fd9\u6837\u53ea\u9700\u8981\u6211\u4eec\u6709\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5bf9\u4f4e\u7cbe\u5ea6\u4e58\u9664\u7684\u64cd\u4f5c\u5c31\u884c\u3002\u4e0d\u7136\u4f60\u53ef\u80fd\u9700\u8981\u901a\u5206\uff0c\u7136\u540e\u518d\u505a\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u8bbe\u6240\u9700\u7684\u7cbe\u5ea6\u4e3a $N$ \u4f4d\uff0c\u4e0a\u8ff0\u65b9\u6cd5\u901a\u5e38\u7684\u7ed9\u51fa\u4e86\u4e00\u4e2a\u9700\u8981\u505a $\\mathcal{O}(N)$ \u6b21\u8fed\u4ee3\u64cd\u4f5c\uff08\u8fd9\u662f\u56e0\u4e3a\u516c\u5f0f\u4e2d\u6bcf\u591a\u8ba1\u7b97\u4e00\u9879\uff0c\u90fd\u53ea\u80fd\u63d0\u4f9b\u5e38\u6570\u7684\u6709\u6548\u6570\u4f4d\uff09\uff0c\u6bcf\u4e00\u6b21\u8fed\u4ee3\u64cd\u4f5c\u90fd\u9700\u8981 $\\mathcal{O}(N)$ \u7684\u8ba1\u7b97\u91cf\uff08\u7528\u4e8e\u52a0\u6cd5\u3001\u5bf9\u4f4e\u7cbe\u5ea6\u7684\u4e58\u9664\u6cd5\uff09\u3002\u7efc\u5408\u8d77\u6765\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(N^2)$\uff0c\u5728\u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u5185\u5e94\u8be5\u53ef\u4ee5\u5168\u90e8\u901a\u8fc7\u3002\n\n\u90e8\u5206\u4ee3\u7801\u6837\u4f8b\uff1a\uff08\u4f7f\u7528 $(4)$ \u5f0f\u5b50\uff0c\u4e14\u91c7\u53d6\u5148\u901a\u5206\u518d\u9ad8\u7cbe\u5ea6\u9664\u6cd5\u7684\u65b9\u6cd5\uff09\n\n```cpp\nLFloat _pi(void)    {\n    static LFloat inner_pi= 3;\n    static int pi_precsion= 0;\n    if(_LFloat_prec < pi_precsion)  { //\u7f13\u5b58pi\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u82e5\u7cbe\u5ea6\u6ee1\u8db3\u8981\u6c42\u5219\u76f4\u63a5\u8f93\u51fa\n        LFloat ret = inner_pi;\n        ret.sho();\treturn ret;\n    }\n    pi_precsion= _LFloat_prec;\n    if(_LFloat_prec > 1000) return inner_pi = 4 * arctan(1);\n    static LInt numerator= 1, denominator= 1; // \u7f13\u5b58\u4e0a\u6b21\u8ba1\u7b97\u65f6\u7684\u5206\u5b50\u548c\u5206\u6bcd\n    static LInt iter_factorial= 1;\n    static int done_iter_times= 0;\n    int new_iter_times= 6.09832411290916 + 13.28771237954945 *_LFloat_prec;\n    LInt delta_numerator=0, delta_denominator= 1, delta_iter_factorial= 1;\n    for(int k= new_iter_times; k > done_iter_times; --k)    {\t// \u8ba1\u7b97\u65b0\u589e\u52a0\u7684\u9879\u7684\u90e8\u5206\u7684\u5206\u5b50\u548c\u5206\u6bcd\n        delta_numerator+=   delta_denominator;\n        delta_numerator*=   k;\n        delta_denominator*= 2*k+1;\n        delta_iter_factorial*=  k;\n    }\n    numerator= numerator * delta_denominator + iter_factorial * delta_numerator;\n    denominator*= delta_denominator; // \u8ba1\u7b97\u901a\u5206\u540e\u7684\u65b0\u7684\u5206\u5b50\u548c\u5206\u6bcd\n    iter_factorial*= delta_iter_factorial;\n    return Div_LInt(numerator, denominator) * 2;\n}\n```\n\n### 2. \u9ad8\u7cbe\u5ea6\u53cd\u6b63\u5207\u51fd\u6570\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u57fa\u672c\u7684\u5fae\u79ef\u5206\u77e5\u8bc6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(N \\log N)$ \u7684[\u9ad8\u7cbe\u5ea6\u4e58\u6cd5(P1919)](https://www.luogu.com.cn/problem/P1919)\u3002\u53ef\u9009\u7684\u5176\u5b83\u77e5\u8bc6\u4e0e\u6750\u6599\uff1a2012 \u5e74 WC \u8bfe\u4ef6\u300a\u7406\u6027\u6109\u60a6\u2014\u2014\u9ad8\u7cbe\u5ea6\u6570\u503c\u8ba1\u7b97\u300b\uff1b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(N \\log N)$ \u7684\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570[\u9664\u6cd5(P5432)](https://www.luogu.com.cn/problem/P5432)\u548c\u5f00[\u5e73\u65b9\u6839(P2293)](https://www.luogu.com.cn/problem/P2293)\u3002\n\n\u8981\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u7684\u53cd\u6b63\u5207\u51fd\u6570\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5148\u5c06 $x$ \u89c4\u7ea6\u5230\u4e00\u4e2a\u9002\u5408\u8ba1\u7b97\u7684\u8303\u56f4\u5185\uff0c\u7136\u540e\u5728 $x=0$ \u5904\u505a Taylor \u5c55\u5f00\uff0c\u5229\u7528 Maclaurin \u516c\u5f0f\uff0c\u53d6\u524d\u9762\u7684\u82e5\u5e72\u9879\u505a\u6c42\u548c\uff0c\u5e76\u4f30\u8ba1\u8bef\u5dee\u9879\u4f7f\u5176\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u3002\u7531\u51fd\u6570\u7684\u5947\u5076\u6027\uff0c$x<0$ \u7684\u90e8\u5206\u662f\u53ef\u4ee5\u8f6c\u5316\u4e3a $x>0$ \u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u5bf9 $\\arctan x$ \u9ad8\u6b21\u6c42\u5bfc\uff0c\u7531\u5f52\u7eb3\u6cd5\u6216\u8005\u662f\u67e5\u8868\u6709\n$$(6)\n\\arctan^{(n)} x = (n-1)! \\cos^n(\\arctan x) \\sin n(\\arctan x+\\frac{\\pi}{2})\n$$\n\n\u7531\u6b64\u53ef\u4ee5\u5f97\u5230 $\\arctan^{(2k+1)}0 = (-1)^k(2k)!$ \u548c $\\arctan^{(2k)}0 = 0$\uff0c\u4ee3\u5165 Taylor \u5c55\u5f00\u5f0f\u5373\u6709 $(2)$ \u5f0f\u3002\n\n\u6211\u4eec\u5c06\u76f8\u90bb\u7684\u6b63\u8d1f\u7b26\u53f7\u76f8\u53cd\u7684\u4e24\u9879\u770b\u4f5c\u4e00\u7ec4\u9879\uff0c\u73b0\u5728\u6211\u4eec\u4ec5\u4ec5\u53ea\u53d6 $(2)$ \u5f0f\u4e2d\u5e42\u6307\u6570\u5c0f\u4e8e\u7b49\u4e8e $4n-1$ \u7684\u9879\uff0c\u4e5f\u5373\u9009\u53d6\u91cc\u9762\u7684\u524d $2n$ \u4e2a\u9879\u6c42\u548c\uff0c\u7528\u6765\u4f5c\u4e3a\u5bf9 $\\arctan x$ \u7684\u4f30\u8ba1\uff0c\u5219\u4f59\u9879\u53ef\u4ee5\u88ab\u5199\u4f5c\u4e3a $R_{4n-1}(x)$\u3002\u6839\u636e Taylor \u5c55\u5f00\u7684 Lagrange \u4f59\u9879\uff0c\u6709\n$$(7)\nR_{4n-1}(x) = \\frac{1}{(4n)!}\\arctan^{(4n)}(\\theta x)x^{4n} \\quad \\exists \\theta(x)\\in(0,1)\n$$\n\u5982\u679c\u6211\u4eec\u9009\u53d6 $x>0$\uff0c\u5219\u6709\u653e\u7f29\u4f30\u8ba1\uff1a\n$$(8)\nR_{4n-1}(x) \\leq \\frac{1}{(4n)!}\\left((4n-1)!\\times 1\\times 4n\\arctan(\\theta x)\\right)x^{4n}\\leq x^{4n}\\arctan x\n$$\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u80fd\u4f30\u8ba1\u7684\u76f8\u5bf9\u7cbe\u5ea6 $\\delta_{4n-1}=\\frac{R_{4n-1}(x)}{\\arctan x}$ \u7684\u4e0a\u754c\u5c06\u53d6\u51b3\u4e8e\u6211\u4eec\u9009\u53d6\u7684 $x$ \u548c $n$ \u7684\u5927\u5c0f\u3002\u5982\u679c\u6211\u4eec\u7684 $x$ \u7684\u754c\u4ec5\u4ec5\u80fd\u8fbe\u5230 $1$\uff0c\u5219\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u80fd\u62ff\u6765\u4f30\u8ba1\u6211\u4eec\u6240\u9700\u8981\u7684\u8ba1\u7b97\u7684\u9879\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53 $x=1$ \u65f6\uff0c\u5c3e\u9879\u6709\n$$(9)\nR_{4n-1}(1)=\\sum_{k=n+1}^{\\infty}\\frac{1}{4k-3}-\\frac{1}{4k-1}=\\sum_{k=n+1}^{\\infty}\\frac{2}{(4k-3)(4k-1)}\\leq\\sum_{k=n}^{\\infty}\\frac{1}{8k^2}=\\mathcal{O}(\\frac{1}{n})\n$$\n\u76f8\u6bd4\u4e8e\u8fd9\u9898\u6240\u9700\u8981\u7684\u7cbe\u5ea6\u800c\u8a00\uff0c$(1)$ \u7684\u6536\u655b\u901f\u5ea6\u592a\u6162\u4e86\u3002\u8fd9\u542f\u53d1\u6211\u4eec\uff08\u5982\u540c\u8bfe\u4ef6\u6240\u8bf4\u7684\u90a3\u6837\uff09\u5148\u5c06\u7528\u4e8e\u5c55\u5f00\u8ba1\u7b97 $x$ \u7684*\u6570\u91cf\u7ea7\u53d8\u5f97\u6bd4\u8f83\u5c0f*\uff0c\u518d\u8fdb\u884c\u8ba1\u7b97\u548c\u8f6c\u5316\u3002\n\n\u5229\u7528\u6b63\u5207\u51fd\u6570\u7684\u500d\u89d2\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $\\arctan x= 2\\arctan f(x)$\uff0c\u5176\u4e2d\n$$(10)\nf(x) \\triangleq \\frac{\\sqrt{1+x^2}-1}{x} = \\frac{x}{\\sqrt{1+x^2}+1}\n$$\n\u5176\u4e2d\u5f53 $x>1$ \u65f6 $f(x)<1$\u3002\u800c $x\\leq 1$ \u65f6 $f(x)\\leq \\frac{x}{2}$\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u8ddf `exp` \u51fd\u6570\u4e00\u6837\uff0c\u62e5\u6709\u4e00\u4e2a\u7b49\u6bd4\u4f8b\u7684\u653e\u7f29\u51fd\u6570\uff0c\u4e14\u6bcf\u653e\u7f29\u4e00\u6b21\u6240\u9700\u7684\u8ba1\u7b97\u91cf\u4e3a $\\mathcal{O}(N \\log N)$\uff08\u8ba1\u7b97\u91cf\u6e90\u81ea\u4e8e\u653e\u7f29\u51fd\u6570\u4e2d\u7684\u5f00\u5e73\u65b9\u6839\u548c\u9664\u6cd5\u8fd0\u7b97\uff09\u3002\n\n\u53e6\u4e00\u65b9\u9762\uff0c\u653e\u7f29\u4ee5\u540e\u5229\u7528\u76f8\u90bb\u9879\u4e4b\u95f4\u7684\u9012\u63a8\uff0c\u6bcf\u8ba1\u7b97\u4e00\u9879\u5c31\u4f1a\u8fdb\u884c\u4e00\u6b21\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u3002\u4e0d\u59a8\u8bbe\u6700\u540e\u6211\u4eec\u5c06 $x$ \u653e\u7f29\u5230 $[0,10^{-B})$ \u7684\u8303\u56f4\u5185\uff0c\u5219 Taylor \u5c55\u5f00\u8ba1\u7b97\u7684\u9879\u6570 $n$ \u5e94\u8be5\u6ee1\u8db3 $10^{-4nB}\\leq10^{-N}$ \u5373 $n\\geq\\frac{N}{4B}$\u3002\u5728\u653e\u7f29\u4e0a\uff0c\u5c06 $[0,1)$ \u653e\u7f29\u5230 $[0,10^{-B})$ \u4e0a\u9700\u8981\u7684\u653e\u7f29\u6b21\u6570 $k$ \u5e94\u8be5\u6ee1\u8db3 $2^{-k}\\leq 10^{-B}$ \u5373 $k\\geq \\log_2{10}B$\u3002\u5219\u672c\u51fd\u6570\u7684\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}((n+k)N\\log N)$\uff0c\u7531\u57fa\u672c\u4e0d\u7b49\u5f0f\uff0c\u5e94\u8be5\u9009\u53d6 $B=\\mathcal{O}(\\sqrt{N})$\uff0c\u53ef\u4ee5\u4f7f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u4e3a $\\mathcal{O}(N^{1.5}\\log N)$\u3002\u6ce8\u610f\u5230\u653e\u7f29\u7684\u51fd\u6570\u4e2d\uff0c\u65e0\u8bba\u662f\u5f00\u6839\u53f7\u8fd8\u662f\u9664\u6cd5\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u867d\u7136\u4e0e\u4e58\u6cd5\u76f8\u540c\uff0c\u4f46\u5e38\u6570\u5374*\u51e0\u500d\u4e8e*\u4e58\u6cd5\uff0c\u56e0\u6b64\u5e94\u8be5\u9002\u5f53\u51cf\u5c0f $B$ \u7684\u503c\u3002\n\n\u90e8\u5206\u4ee3\u7801\u6837\u4f8b\u5982\u4e0b\u3002\u7ecf\u6d4b\u8bd5\uff0c\u5728 `-O2` \u60c5\u51b5\u4e0b\u53ef\u4ee5\u81f3\u591a 2.96s \u7684\u65f6\u95f4\u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\nLFloat arctan(const LFloat& x)  {\n    if(x.isNaN()||x.zero())   return x;\n    if(x.isinf() && x.negative())   return arctan(-1)*2;\n    if(x.isinf() && x.positive())   return arctan(1)*2;\n    if(x<0) return -arctan(-x);\n    if(x>1) return arctan((sqrt(x*x+1)-1)/x)*2; // \u89c4\u7ea6x\u5230[0,1]\u4e2d\n\n    struct{\n        LFloat operator()(const LFloat& t) {return t / (sqrt(t*t+1)+1);}\n    } scale_func; // \u653e\u7f29\u51fd\u6570\n    int precision= _LFloat_prec * 4;\n    int bound= int(std::sqrt(0.2006866637759875 * precision / 16));    //bound= Sqrt(2 Lg 2*p/3)/16\n    LFloat B= pow10<LFloat>(-bound);\n    int n= precision/bound +1;  //expansion terms count\n    int k= 0;   //scale times\n\n    _LFloat_prec= (precision + Log_2(precision) + 3.322*bound)/4 + 1;\n    LFloat x_scaled= x;\n    x_scaled.sho();\n    while(x_scaled > B) {   //scaling\n        x_scaled= scale_func(x_scaled);\n        ++k;\n    }\n    LFloat y_scaled= 0, x2= x_scaled * x_scaled;\n    for(int i= 4*n-1; i>=1; i-=2)   y_scaled= -x2*y_scaled + LFloat(1.0)/i; // \u6c42\u8f83\u5c0f\u7684x\u7684\u8fd1\u4f3c\u503c\n    y_scaled*= x_scaled;\n    LFloat& y= y_scaled;\n    for(int i= 0; i<k; ++i) y= y*2;\n    _LFloat_prec= precision/4;\n    y.sho();\n    return y;\n}\n```\n\n### 2.5. \u6b27\u62c9\u53d8\u6362\u4e0e\u8d85\u51e0\u4f55\u51fd\u6570\n\n**\u9605\u8bfb\u524d\u63d0\u9192**\uff1a\u672c\u90e8\u5206\u7528\u4e8e\u52a0\u901f\u53cd\u6b63\u5207\u51fd\u6570\u7684\u8ba1\u7b97\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u5584\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u540c\u65f6\uff0c\u672c\u90e8\u5206\u4e5f\u4f1a\u4ecb\u7ecd\u5e7f\u53d7\u597d\u8bc4\u7684\u516c\u5f0f $(4)$ \u7684\u6765\u6e90\u3002\u8df3\u8fc7\u672c\u90e8\u5206\u4e0d\u4f1a\u5f71\u54cd\u672c\u9898\u7684\u89e3\u7b54\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7b2c2\u8282\u524d\u7f6e\u77e5\u8bc6\uff1b\u7ec4\u5408\u6570\u76f8\u5173\u77e5\u8bc6\u6216\u751f\u6210\u51fd\u6570\u3002\u53ef\u9009\u5176\u5b83\u8865\u5145\u77e5\u8bc6\uff1a\u8d85\u51e0\u4f55\u51fd\u6570\uff08\u300a\u5177\u4f53\u6570\u5b66\u300b\uff09\u3002\u76f8\u5173\u7684\u8d44\u6599\u53ef\u4ee5\u53c2\u8003 Wolfram Mathworld \u7684 [Euler Transform](https://mathworld.wolfram.com/EulerTransform.html)\u3002\n\n\u5728\u7ee7\u7eed\u524d\u8fdb\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e2a\u6052\u7b49\u5f0f\u3002\u5047\u8bbe $S=a_1-a_2+a_3-a_4+a_5-\\dots$ \u662f\u4e00\u4e2a\u6536\u655b\u7684[\u4ea4\u9519\u7ea7\u6570](https://baike.baidu.com/item/%E4%BA%A4%E9%94%99%E7%BA%A7%E6%95%B0/1220709)\uff0c\u5b9a\u4e49\n$$(11)\ns_{1,k}=a_k \\quad s_{i+1,k}=s_{i,k}-s_{i,k+1},i=1,2,3,\\dots\n$$\n\u5219 $(s_n)\\triangleq(s_{n,1})_{n=1}^{\\infty}$ \u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u6570\u5217\u3002\u5219\u6211\u4eec\u6709\n$$(12)\nS=a_1-a_2+a_3-a_4+a_5-\\dots = \\frac{s_1}{2}+\\frac{s_2}{4}+\\frac{s_3}{8}+\\dots+\\frac{s_n}{2^n}+\\dots\n$$\n\u540e\u9762\u7684\u7ea7\u6570\u5c06\u4e0e\u524d\u4e00\u4e2a\u7ea7\u6570\u6536\u655b\u5230\u540c\u4e00\u4e2a\u6570\uff0c\u4e14\u6536\u655b\u901f\u5ea6\u66f4\u5feb\u3002\u8fd9\u88ab\u79f0\u4f5c**\u6b27\u62c9\u6539\u8fdb\u6536\u655b\u6cd5**\uff0c\u4e5f\u88ab\u79f0\u4e3a**\u6b27\u62c9\u53d8\u6362**\u3002\u8fd9\u91cc\u7528\u751f\u6210\u51fd\u6570\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\u8fd9\u4e2a\u5f0f\u5b50\u7684\u6536\u655b\u6027\uff1a\u5728\u5b9a\u4e49 $(11)$ \u4e2d\uff0c\u5229\u7528\u7ec4\u5408\u6570\uff0c\u53ef\u77e5 $s_n$ \u4e2d\u542b\u6709\u7684 $a_k$ \u7684\u7cfb\u6570\u4e3a $(-1)^{k-1}\\binom{n-1}{k-1}$\u3002\u56e0\u6b64\u6539\u8fdb\u540e\u7684\u7ea7\u6570\u4e2d\uff0c\u6240\u542b\u6709\u7684 $a_k$ \u7684\u7cfb\u6570\u4e3a\n$$(13)\n\\sum (-1)^{k-1}\\frac{1}{2^n}\\binom{n-1}{k-1} = \\frac{(-1)^{k-1}}{2}\\sum[x^{k-1}](\\frac{1+x}{2})^{n-1}=\\frac{(-1)^{k-1}}{2}[x^{k-1}]\\frac{2}{1-x} = (-1)^{k-1}\n$$\n\u5176\u4e2d $[x^k]f(x)$ \u8868\u793a $f$ \u7684\u5c55\u5f00\u5f0f\u4e2d $x^k$ \u9879\u7684\u7cfb\u6570\u3002\u4e0a\u5f0f\u8868\u660e\u6539\u8fdb\u540e\u7684\u6536\u655b\u7ea7\u6570\u5728\u5f62\u5f0f\u4e0a\u4e0e\u539f\u5148\u7684\u7ea7\u6570\u5177\u6709\u76f8\u540c\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u4eec\uff08\u5982\u679c\u6536\u655b\uff09\u6536\u655b\u4e8e\u540c\u4e00\u4e2a\u503c\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u6052\u7b49\u5f0f\u80fd\u7528\u5728\u4ec0\u4e48\u5730\u65b9\u3002\u4ed4\u7ec6\u4e00\u770b\uff0c$(1)$ \u521a\u597d\u662f\u4e00\u4e2a\u4ea4\u9519\u7ea7\u6570\u3002\u53d6 $a_k=\\frac{1}{2k-1}$\uff0c\u7531\u5f52\u7eb3\u6cd5\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765 $s_n=\\frac{2^{n-1}(n-1)!}{(2n-1)!!}$\uff0c\u518d\u4ee3\u56de\u6052\u7b49\u5f0f\u7684\u53f3\u7aef\uff0c\u5b83\u6b63\u597d\u5c31\u662f\u5f0f\u5b50 $(4)$ \u4e24\u7aef\u540c\u65f6\u9664\u4ee5 $2$ \u7684\u7ed3\u679c\uff01\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4e25\u683c\u7684\u63a8\u5bfc\u51fa\u4e86 $(4)$\u3002\n\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6052\u7b49\u5f0f\u80fd\u6709\u4ec0\u4e48\u7528\u9014\u3002\u89c2\u5bdf $(2)$ \u53d1\u73b0\u5b83\u4e5f\u662f\u4e00\u4e2a\u4ea4\u9519\u7ea7\u6570\uff0c\u4f46\u662f\u76f4\u63a5\u8fd0\u7528\u5230\u6052\u7b49\u5f0f\u4e0a\u9762\u672a\u514d\u8fc7\u4e8e\u7e41\u7410\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5f15\u5165\u8d85\u51e0\u4f55\u51fd\u6570 ${}_2\\!F_1$\uff0c\u5b83\u88ab\u5b9a\u4e49\u4e3a\n$$\n{}_2\\!F_1(a,b;c;x)=1+\\sum_{k\\geq 1}\\frac{a^{(k)}b^{(k)}}{c^{(k)}k!}x^k$$\n\u5176\u4e2d\uff0c\u6253\u62ec\u53f7\u7684\u5e42\u6307\u6570\u90e8\u5206\u8868\u793a\u4e0a\u5347\u5e42(\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6d1b\u8c37\u7a81\u7136\u4e0d\u652f\u6301 `\\overline` \u6307\u4ee4\u4e86)\n\u3002\u7279\u522b\u7684\uff0c\u6709\n$$(14)\n{}_2\\!F_1(\\frac{1}{2},1;\\frac{3}{2};-x^2)x=\\sum_{k=0}^{\\infty}(-1)^k\\frac{x^{2k+1}}{2k+1}=\\arctan{x}\n$$\n\u4e0d\u52a0\u8bc1\u660e\u7684\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u8d85\u51e0\u4f55\u53d8\u6362\uff08\u4e00\u4e2a\u6052\u7b49\u5f0f\uff09:\n$$(15)\n{}_2\\!F_1(a,b;c;z)=\\frac{_2\\!F_1(c-a,b;c,\\frac{z}{z-1})}{(1-z)^b}\n$$\n\u8fd9\u4e2a\u53d8\u6362\u516c\u5f0f\u88ab\u79f0\u4e3a**\u53cd\u5c04\u5b9a\u5f8b**\uff0c\u4e5f\u88ab\u79f0\u4e3a**\u6b27\u62c9\u8d85\u51e0\u4f55\u53d8\u6362**\u3002\u5f53 $(15)$ \u4e2d\u53d6 $z=-1$ \u65f6\u5c31\u6784\u6210\u4e86\u6b27\u62c9\u6539\u8fdb\u6536\u655b\u6cd5\u7684\u4e00\u4e2a\u7279\u4f8b\u3002\u73b0\u5728\u5c06\u8fd9\u4e2a\u516c\u5f0f\u76f4\u63a5\u5957\u7528\u5728 $(14)$ \u7684\u5de6\u8fb9\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 $\\arctan x$ \u7684\u8868\u8fbe\u5f0f\uff1a\n$$(16)\n\\arctan x= {}_2\\!F_1(1,1;\\frac{3}{2};\\frac{x^2}{1+x^2})x=x\\sum_{k=0}^{\\infty}\\frac{k!2^k}{(2k+1)!!}(1-\\frac{1}{1+x^2})^k\n$$\n\u8fd9\u4e2a\u5f0f\u5b50\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u8ba1\u7b97\u91cf\u5e38\u6570\u76f8\u5bf9\u5c0f\u7684\u6b63\u9879\u7ea7\u6570\u4e86\uff0c\u53ef\u4ee5\u8dd1\u51fa\u4e00\u4e2a\u76f8\u5f53\u4e0d\u9519\u7684\u65f6\u95f4\u3002\u6309\u7167\u7b2c2\u8282\u5185\u7684\u65b9\u6cd5\u8c03\u6574\u653e\u7f29\u548c\u5c55\u5f00\u7cfb\u6570\uff0c\u53ef\u4ee5\u8fbe\u5230\u5e38\u6570\u6bd4\u8f83\u5c0f\u7684 $\\mathcal{O}(N^{1.5}\\log N)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\u3002\u5728\u5f00\u542f `-O2` \u9009\u9879\u7684\u65f6\u5019\u6210\u529f\u8dd1\u8fdb\u4e86 1s \u5185\uff0c\u4e0d\u5f00\u542f\u65f6\u6700\u5927\u7684\u70b9\u4e5f\u53ea\u6709 4.90s\u3002\n\n```cpp\nLFloat arctan2(const LFloat& x)  {\n    if(x.isNaN()||x.zero())   return x;\n    if(x.isinf() && x.negative())   return arctan(-1)*2;\n    if(x.isinf() && x.positive())   return arctan(1)*2;\n    if(x<0) return -arctan(-x);\n    if(x>1) return arctan((sqrt(x*x+1)-1)/x)*2;\n\n    struct{\n        LFloat operator()(const LFloat& t) {return t / (sqrt(t*t+1)+1);}\n    } scale_func;\n    int precision= _LFloat_prec * 4;\n    int n= std::ceil(std::sqrt(precision/2)*12) + 1;\n    int bound= std::ceil(1.0*precision/2/n) + 1;  //expansion terms count\n    LFloat B= pow10<LFloat>(-bound);\n    int k= 0;   //scale times\n\n    _LFloat_prec= (precision + Log_2(precision) + 3.322*bound)/4 + 1;\n    LFloat x_scaled= x;\n    x_scaled.sho();\n    while(x_scaled > B) {   //scaling\n        x_scaled= scale_func(x_scaled);\n        ++k;\n    }\n    LFloat z= 1 / (1 + x_scaled * x_scaled);\n    LFloat y_scaled= 1, t= 1-z;\n    for(int i= n; i>= 1; --i)\ty_scaled= y_scaled*t*2*i/(2*i+1) + 1;\n    y_scaled*= x_scaled * z;\n    LFloat& y= y_scaled;\n    for(int i= 0; i<k; ++i) y= y*2;\n    _LFloat_prec= precision/4;\n    y.sho();\n    return y;\n}\n```\n\n### 3. AGM \u65b9\u6cd5\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u300a\u7406\u6027\u6109\u60a6\u2014\u2014\u9ad8\u7cbe\u5ea6\u6570\u503c\u8ba1\u7b97\u300b\u3002\n\n\u53c2\u8003\u8bba\u6587\uff1aEugene Salamin \u4e8e 1976 \u5e74\u53d1\u8868\u4e8e *Mathematics of Computation* \u4e0a\u7684\u8bba\u6587 *Computation of pi Using Arithmetic-Geometric Mean*\u3002\n\n\u672c\u6765\u8fd9\u7bc7\u9898\u89e3\u5230\u8fd9\u91cc\u5c31\u8be5\u7ed3\u675f\u4e86\uff0c\u4f46\u6ca1\u60f3\u5230\u8bfe\u4ef6\u7684\u540e\u9762\u63d0\u51fa\u53e6\u4e00\u4e2a\u4f5c\u4e3a\u76ee\u524d\u8ba1\u7b97\u521d\u7b49\u51fd\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f4e\u7684\u65b9\u6cd5\uff1aAGM \u65b9\u6cd5\u3002\u56ff\u4e8e\u8fd9\u90e8\u5206\u76f8\u5173\u7684\u6570\u5b66\u77e5\u8bc6\u4e0d\u719f\u6089\uff0c\u672c\u9898\u89e3\u65e0\u6cd5\u63d0\u4f9b\u8be5\u65b9\u6cd5\u6b63\u786e\u6027\u7684\u8bc1\u660e\u3002\n\n\u4e0b\u9762\u7b80\u5355\u7684\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5047\u8bbe\u7ed9\u51fa\u4e24\u4e2a\u6b63\u6570 $a$ \u548c $b$\uff0c\u53d6\u4e24\u4e2a\u5e8f\u5217 $(a_n)$ \u548c $(b_n)$\uff0c\u5176\u4e2d $a_0=a, b_0=b$\uff0c\u6309\u4e0b\u5217\u65b9\u6cd5\u505a\u9012\u63a8\uff1a\n$$(17)\na_{n+1} = \\frac{a_n+b_n}{2}\\quad b_{n+1} = \\sqrt{a_nb_n}\n$$\n\u8fd9\u4e24\u4e2a\u5e8f\u5217\u7684\u53d6\u503c\u5206\u522b\u4e3a\u4e0a\u4e00\u9879\u7684\u4e24\u4e2a\u6570\u7684\u7b97\u6570\u5e73\u5747\u503c\u548c\u51e0\u4f55\u5e73\u5747\u503c\u5e8f\u5217\u3002\u5bb9\u6613\u8bc1\u660e\u8fd9\u4e24\u4e2a\u5e8f\u5217\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\uff0c\u4e14\u5bf9\u5e94\u9879\u7684\u5dee\u4f1a\u8d8b\u8fd1\u4e8e $0$\u3002\u56e0\u6b64\u8fd9\u4e24\u4e2a\u5e8f\u5217\u4f1a\u8d8b\u8fd1\u4e8e\u540c\u4e00\u4e2a\u503c\uff0c\u79f0\u4e3a\u4e24\u4e2a\u6570\u7684**\u7b97\u6570\u51e0\u4f55\u5e73\u5747\u503c**\uff0c\u8bb0\u4e3a $\\mathrm{agm}(a,b)$\uff0c\u8fd9\u4e2a\u503c\u7b49\u4e8e\u4e00\u4e2a\u692d\u5706\u79ef\u5206\u7684\u8868\u8fbe\u5f0f\u30021975 \u5e74\uff0cEugene Salamin \u5728\u4ed6\u7684\u8bba\u6587\u91cc\u63d0\u51fa\uff0c\u5982\u679c\u53d6\u5f97\u9002\u5f53\u7684 $a$ \u548c $b$\uff0c\u5219\u5b83\u4eec\u7684 $\\mathrm{agm}$ \u503c\u4f1a\u53d8\u6210\u4e00\u4e2a\u7279\u6b8a\u7684\u6570\uff0c\u5e76\u63d0\u51fa\u5f53 $a=1$ \u4e14 $b= \\frac{1}{\\sqrt{2}}$ \u65f6\uff0c\u6709\n$$(18)\nc_n= b_n - a_n,\\quad \\pi_n\\triangleq\\frac{4a_n^2}{1-\\sum_{k=0}^{n}2^k(b_k-a_k)^2}\\to\\pi \\ as\\ n\\to\\infty\n$$\n\u8fd9\u4e2a $\\pi$ \u7684\u903c\u8fd1\u6570\u5217\u7684\u8bef\u5dee\u6ee1\u8db3\n$$(19)\n-\\lg\\left| \\pi-\\pi_n \\right| > (\\frac{\\pi}{\\ln 10})2^{n+1} - n\\lg 2 -2 \\lg\\frac{4\\pi}{\\mathrm{agm}(1,\\frac{1}{\\sqrt{2}})}\n$$\n\u53ef\u4ee5\u53d1\u73b0 $\\pi_n$ \u7684\u7cbe\u786e\u5ea6\u662f\u6307\u6570\u7ea7\u522b\u589e\u957f\u7684\u3002\u53d6 $n=\\left\\lceil\\log_2N\\right\\rceil$\uff0c\u5f53 $N>1$ \u65f6\u6709 $-\\lg\\left|\\pi-\\pi_n\\right|>N$\uff0c\u6b64\u65f6\u8fed\u4ee3\u5373\u53ef\u8fbe\u5230\u7cbe\u5ea6\u8981\u6c42\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u8fed\u4ee3\u4e00\u9879\u9700\u8981\u505a\u4e00\u6b21\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u3001\u4e00\u6b21\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u548c\u4e00\u6b21\u9ad8\u7cbe\u5ea6\u5f00\u5e73\u65b9\u6839\uff0c\u4e5f\u5c31\u662f $\\mathcal{O}(N \\log N)$\u3002$n=\\mathcal{O}(\\log N)$\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(N \\log^2N)$\uff0c\u786e\u5b9e\u5f88\u5feb\u3002\n\n\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\u3002\u5728\u4e0d\u5f00\u542f `-O2` \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u6162\u7684\u70b9\u9700\u8981 1.2s\uff0c\u82e5\u5f00\u542f\u5219\u53ef\u4ee5\u52a0\u901f\u5230 300ms \u4ee5\u5185\u3002\n\n```cpp\nLFloat agm_pi(void)\t{\n\tint precision= tbb::LFloat::precision() * 4;\n\ttbb::LFloat::precision(std::ceil((precision+Log_2(precision))/4.0)); // \u8c03\u6574\u8fc7\u7a0b\u7cbe\u5ea6\n\tLFloat a= 1, b= 1/sqrt(LFloat(2));\n\tint n= Log_2(precision);\n\tLFloat S= pow(b-a, 2);\n\tfor(int i=1; i<=n; ++i)\t{\n\t\tLFloat an= (a+b)/2, bn= sqrt(a*b);\n\t\tS+= (1<<i)*pow(bn-an, 2);\n\t\ta= an, b= bn;\n\t}\n\tLFloat ans= (4*a*a)/(1-S);\n\ttbb::LFloat::precision(precision/4);\n\tans.sho();\n\treturn ans;\n}\n```\n\n",
        "postTime": 1619726647,
        "uid": 29077,
        "name": "TBB_Nozomi",
        "ccfLevel": 0,
        "title": "\u9ad8\u7cbe\u5ea6\u8ba1\u7b97pi [P1727]"
    },
    {
        "content": "\u56e0\u4e3a\u89c2\u5bdf\u4e86\u63d0\u4ea4\u754c\u9762\u53d1\u73b0\u4e00\u7fa4\u4eba\u6beb\u65e0\u8282\u64cd\u5730\u4ea4\u6253\u8868\uff0c\u800c\u672c\u5f31\u83dc\u591a\u6b21TLE\u800c\u5f15\u53d1\u7684\u5404\u79cd\u63d0\u4ea4\u9519\u8bef\u540e\u75db\u5b9a\u601d\u75db\u51b3\u5b9a\u798f\u5229\u5927\u4f17\uff0c\u4e3a\u540e\u6b7b\u8005\u5c55\u671b\u660e\u4e3d\u7684\u672a\u6765\u800c\u51b3\u5b9a\u5199\u7bc7\u9898\u89e3\u3002\u3002\u3002\u3002\r\n\r\n\u4f17\u6240\u7686\u77e5\uff0c\u6c42\u5706\u5468\u7387\u7684\u516c\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728\u767e\u5ea6\u767e\u79d1\u67e5\u5230\u3002\u3002\u3002\r\n\r\n\u7136\u800c\u60f3\u8981\u6c42\u51fa10000\u4f4d\u5c0f\u6570\u8fd9\u6837\u7684\u7b97\u6cd5\uff0c\u9996\u5148\u8981\u4fdd\u8bc1\u516c\u5f0f\u80fd\u5728\u8f83\u5c0f\u7684\u65f6\u95f4\u5185\u7b97\u51fa\u8f83\u591a\u7684\u7cbe\u5ea6\u4f4d\u6570\u3002\u6240\u4ee5\u9009\u53d6\u7684\u516c\u5f0f\u5373\u4e3a:\r\n\r\npi/2=1+(1/3)+(1/3)\\*(2/5)+(1/3)\\*(2/5)\\*(3/7)\u2026\u2026\r\n\r\n\u663e\u800c\u6613\u89c1\u7528\u9ad8\u7cbe\u5ea6\u8bb0\u5f55\u5206\u5b50\u4e58\u79ef\uff0c\u5728\u6bcf\u4e2a\u9636\u6bb5\u90fd\u8981\u9664\u4ee5\u5f53\u524d\u9636\u6bb5\u7684\u5206\u6bcd\u6765\u7d2f\u8ba1\u5206\u6bcd\u7684\u4e58\u79ef\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u7d2f\u8ba1\u548c\u4e00\u904d\u3002\r\n\r\n\u4e00\u5f00\u59cb\u6570\u7ec4\u53ea\u5b58\u4e00\u4f4d\u7136\u540eTLE\u4e86\uff0c\u6362\u6210\u5b58\u4e24\u4f4d\u5c31\u6ca1\u95ee\u9898\u5566\u3002\r\n\r\n```cpp\r\n\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint n, len, side, Tot, hj, i, t1, t2, a[5105], A[5105];\r\n\r\nint main() {\r\n    freopen(\"1727.in\", \"r\", stdin);\r\n    freopen(\"1727.out\", \"w\", stdout);\r\n    scanf(\"%d\", &n); len = (n + 20) / 2; a[1] = 2; \r\n    side = 1; Tot = 0; hj = 3; printf(\"3.\\n\");\r\n    while (side && ++Tot <= 200000000) {\r\n        for (t1 = t2 = 0, i = len - 1; i; i--)\r\n            t1 = a[i] * Tot + t2, a[i] = t1 % 100, t2 = t1 / 100;\r\n        for (t2 = 0, i = 0; i < len; i++)\r\n            t1 = a[i] + t2 * 100, a[i] = t1 / hj, t2 = t1 % hj; side = 0;\r\n        for (i = len - 1; i; i--) {\r\n            A[i - 1] += (A[i] + a[i]) / 100; \r\n            A[i] = (A[i] + a[i]) % 100;\r\n            side |= (a[i] / 10);\r\n            side |= (a[i] % 10); hj += 2;\r\n        }\r\n    } hj = 0;\r\n    for (i = 2; i <= n + 1; i++) {\r\n        hj += 2; if (hj > n) {\r\n            printf(\"%d\", A[i] / 10);\r\n            break;\r\n        }\r\n        if (A[i] < 10) printf(\"0\"); printf(\"%d\", A[i]);\r\n        if (i != n + 1) {\r\n            if ((i - 2 + 1) % 25 == 0) printf(\"\\n\");\r\n            else if ((i - 2 + 1) % 5 == 0) printf(\" \");\r\n        } if (hj == n) break;\r\n    }\r\n    return 0;\r\n}\r\n\r\n```",
        "postTime": 1385441954,
        "uid": 1855,
        "name": "kcm1996",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1727 \u3010\u8ba1\u7b97\u03c0\u3011"
    },
    {
        "content": "\u6b63\u5982\u697c\u4e0a\u5927\u4f6c\u6240\u8bf4\uff0c\u786e\u5b9e\u6709\u5f88\u591a\u4eba\u65e0\u8282\u64cd\u7684\u6253\u8868\uff0c\u4f46\u662f\u672c\u849f\u84bb**\u61d2\u5f97\u6253\u8868**\uff0c\u4e8e\u662f\u4fbf\u51b3\u5b9a\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u9053\u9898\u7684**\u6b63\u89e3**~~\uff08\u8fd9\u6015\u662f\u8fd9\u9053\u9898\u6700\u77ed\u7684\u4ee3\u7801\u4e86\uff09~~\n\n## \u7b97\u6cd5\n\n\u548c\u697c\u4e0a\u5927\u4f6c\u4e00\u6837\uff0c\u6211\u4e5f\u91c7\u7528\u4e86\u5982\u4e0b\u516c\u5f0f\uff1a\n\n$$\\frac{\\pi}{2}=1+\\frac{1!}{3!!}+\\frac{2!}{5!!}+\\frac{3!}{7!!}+...+\\frac{k!}{(2k+1)!!}+...$$\n\n\u5176\u4e2d\uff0c$n!=1\\times 2\\times 3\\times ...\\times n$\uff0c$n!!=1\\times 3\\times 5\\times ...\\times n(n\\text{\u4e3a\u5947\u6570})$\n\n\u7136\u540e\u6211\u4eec\u5bf9\u516c\u5f0f\u8fdb\u884c\u5c55\u5f00\u548c\u8c03\u6574\uff1a\n\n\u03c0/2\u00a0=\u00a01\u00a0+\u00a01!/3!!\u00a0+\u00a02!/5!!\u00a0+\u00a03!/7!!\u00a0+\u00a0...\u00a0+\u00a0k!/(2\u00d7k+1)!! \n=\u00a01\u00a0+\u00a01/3\u00a0+\u00a0(1\u00d72)/(3\u00d75)\u00a0+\u00a0(1\u00d72\u00d73)/(3\u00d75\u00d77)\u00a0+\u00a0...\u00a0+\u00a0(1\u00d72\u00d7...\u00d7k)/(3\u00d75\u00d7...\u00d7(2k+1))\n=\u00a01\u00a0+\u00a01/3\u00a0+\u00a0(1/3)\u00d7(2/5)\u00a0+\u00a0(1/3)\u00d7(2/5)\u00d7(3/7)\u00a0+\u00a0...\u00a0+\u00a0(1/3)\u00d7(2/5)\u00d7...\u00d7(k/(2k+1))\n=\u00a0(1/3)\u00d7(2/5)\u00d7...\u00d7(k/(2k+1))\u00a0+\u00a0...\u00a0+\u00a0(1/3)\u00d7(2/5)\u00d7(3/7)\u00a0+\u00a0(1/3)\u00d7(2/5)\u00a0+\u00a01/3\u00a0+\u00a01\n=\u00a0(k/(2k+1))\u00d7...\u00d7(2/5)\u00d7(1/3)\u00a0+\u00a0...\u00a0+\u00a0(3/7)\u00d7(2/5)\u00d7(1/3)\u00a0+\u00a0(2/5)\u00d7(1/3)\u00a0+\u00a01/3\u00a0+\u00a01\n=\u00a0(((((k/(2k+1)+1)\u00d7((k-1)/(2(k-1)+1)+1)\u00d7...)\u00d73/7+1)\u00d72/5+1)\u00d71/3+1)/1\n=\u00a0(((((1/(2k+1)\u00d7k+1)/(2(k-1)+1)\u00d7(k-1)+1)/...)/7\u00d73+1)/5\u00d72+1)/3\u00d71+1)/1\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u5faa\u73af\u505a\u9664\u6cd5\u3001\u4e58\u6cd5\u3001\u52a01\uff0c\u76f4\u5230\u9664\u6570\u4e3a1\u4e3a\u6b62\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6c42\u5230$\\pi$\u7684**10000\u4f4d**\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7528**\u5927\u6574\u6570\u9664\u6cd5**\u6765\u89e3\u51b3\n\n\u6240\u4ee5\u4ee3\u7801\u5982\u4e0b\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\nint a=10000,b,c=70000,d,e,f[70001],g,n=-1,len;\nchar str[100005]=\"141\";\n\nint main() {\n\tscanf(\"%d\",&len);\n    for(;b-c;) f[b++]=a/5;\n    for(;d=0,(g=c*2)&&n<=len;c-=14,~n&&sprintf(str+n, \"%.4d\",e+d/a),n+=4,e=d%a)\n        for(b=c;d+=f[b]*a,f[b]=d%--g,d/=g--,--b;d*=b);\n\tprintf(\"3.\");\n\tfor(register int i=0;i<len;i++) {\n\t\tif (!(i%10)) printf(\" \");\n\t\tif (!(i%50)) printf(\"\\n\");\n\t\tprintf(\"%c\", str[i]);\n\t}\n    return 0;\n}\n```\n\n\u7b97\u4e0a\u7a7a\u884c**\u4e0d\u523020\u884c**\uff0c\u8fd9\u771f\u7684\u662f\u8fd9\u9053\u9898\u6700\u2642\u77ed\u2642\u7684\u4ee3\u7801\u4e86orz\uff01\n",
        "postTime": 1559874406,
        "uid": 79076,
        "name": "0AND1STORY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1727 \u3010\u8ba1\u7b97\u03c0\u3011"
    },
    {
        "content": "# **java\u6765\u4e00\u53d1**\n\n\u521d\u5165\u5751java\uff0c\u6253\u7b97\u7528java\u6c34\u51e0\u9053\u7b80\u5355\u9898\uff0c\u6ca1\u60f3\u5230\u5514\u6c34\u51fa\u4e2a\u4e86\u70b8\u5f39\uff0c\u505a\u9898\u7684\u8fc7\u7a0b\u4e2d\u82b1\u5f0f\u51fa\u9519\uff0c\u4f46\u662f\u4e5f\u786e\u5b9e\u5b66\u5230\u4e86$\\cdots\\cdots$\n\n~~\u8fd9\u9898\u6211\u4f30\u6478\u7740\u6211\u7528c++\u90fd\u4e48\u5f97~~\n\n\u5229\u7528\u4e0b\u9762\u4e24\u4e2a\u516c\u5f0f\n\n**1.\u6885\u94a6\u516c\u5f0f**\n\n$\u03c0=16arctan(1/5)-4arctan(1/239)$\n\n**2.**$arctan(x)$**\u65e0\u7a77\u7ea7\u6570\u5c55\u5f00**\n\n$arctan(x)=x-x^3/3!+x^5/5!-x^7/7!+\\cdots$\n\n\u5bf9\u521d\u5b66java\u7684\u6211\u6765\u8bf4\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u6311\u6218\u7684\uff0c\u4e0d\u8fc7\u4e5f\u7ec3\u4e86$BigDecimal$\uff0c\u603b\u4e4b\u5feb\u4e50\u5c31\u5b8c\u4e8b\u5566\uff01\n\n```java\nimport java.math.BigDecimal;\nimport java.util.Scanner;\nimport java.math.RoundingMode;\npublic class LuoGuP1727_3 {\n    public static int n;\n    public static void main(String[] args){\n        Scanner cin=new Scanner(System.in);\n        n=cin.nextInt();\n        if(n==0){\n            System.out.println(\"3\");\n            return;\n        }\n        BigDecimal part1=arccot(5).multiply(new BigDecimal(\"16\"));\n        BigDecimal part2=arccot(239).multiply(new BigDecimal(\"4\").negate());\n        BigDecimal ans=part1.add(part2);\n        String s=ans.toString();\n        System.out.println(\"3.\");\n        int cnt=0;\n        for(int i=2;;i++){\n            System.out.print(s.charAt(i));\n            ++cnt;\n            if(cnt==n) break;\n            if(cnt%50==0) System.out.println(\"\");\n            else if(cnt%10==0) System.out.print(\" \");\n        }\n    }\n    public static BigDecimal arccot(int x){\n        BigDecimal now=BigDecimal.ONE.divide(BigDecimal.valueOf(x),n+10,RoundingMode.HALF_UP);\n        BigDecimal x2=BigDecimal.valueOf(x).multiply(BigDecimal.valueOf(x));\n        BigDecimal ans=BigDecimal.ZERO;\n        BigDecimal tmp;\n        boolean flag=true;\n        for(int i=1;;i+=2){\n            tmp=now.divide(new BigDecimal(i),n+10,RoundingMode.HALF_UP);\n            if(tmp.compareTo(BigDecimal.ZERO)==0) break;\n            if(flag==true)\n                ans=ans.add(tmp);\n            else\n                ans=ans.subtract(tmp);\n            flag=!flag;\n            now=now.divide(x2,n+10,RoundingMode.HALF_UP);\n        }\n        return ans;\n    }\n}\n\n```\n\u7f51\u4e0a\u6709\u4e2a\u5927\u4f6c\u5229\u7528\u7684\u662f**\u7c7b\u6885\u94a6\u516c\u5f0f**\uff0c\u6536\u655b\u66f4\u5feb\u4e00\u70b9\uff0c\u5982\u679c\u5361\u65f6\u9650\u53ef\u4ee5\u6539\u8fd9\u4e2a\n\n$\u03c0=176arctan(1/57)+28arctan(1/239)-48arctan(1/682)+96arctan(1/1294)$",
        "postTime": 1580181031,
        "uid": 36158,
        "name": "Go\u706cFire",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1727 \u3010\u8ba1\u7b97\u03c0\u3011"
    }
]