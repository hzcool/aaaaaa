[
    {
        "content": "\u770b\u5230\uff08\u76ee\u524d\uff09AC \u63d0\u4ea4\u90fd\u662f\u540e\u7f00\u6570\u7ec4\uff0c\u6211\u6765\u6574\u4e2a\u4e8c\u5206 + hash \u7684\u505a\u6cd5\u3002\n\n\u9898\u76ee\u60f3\u8ba9\u6211\u4eec\u505a\u5f52\u5e76\u6392\u5e8f\u4e2d\u7684\u5e76\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u4f46\u5e8f\u5217\u4e0d\u4e00\u5b9a\u662f\u6709\u5e8f\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u5e76\u3002\u6bd4\u5982\u8fd9\u7ec4\u6570\u636e\uff1a\n```cpp\n4\n1 6 6 1\n4\n1 6 6 5\n```\n\u76f4\u63a5\u5e76\u5c31\u4f1a\u51fa\u73b0 `1 1 6 6 5 6 6 1`\uff08\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u8bd5\u8bd5 $a,b$ \u53cd\u8fc7\u6765\uff09\uff0c\u4f46\u8fd8\u6709\u66f4\u5c0f\u7684 `1 1 6 6 1 6 6 5`\u3002\n\n\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff1f\u770b\u4ee3\u7801\uff1a\n```cpp\nwhile(i<=n&&j<=m){\n    if(a[i]<b[j]) t[cnt++]=a[i++];\n    else t[cnt++]=b[j++];\n}\n```\n\u6211\u4eec\u5e76\u6ca1\u6709\u5224\u65ad $a_i=b_j$ \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u5728\u6b63\u5e38\u5f52\u5e76\u6392\u5e8f\u4e2d\uff0c$a,b$ \u6709\u5e8f\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5408\u5e76\u7684\u7b54\u6848\u3002\u4f46\u5728\u8fd9\u9898\u4e0d\u540c\uff0c$a_i=b_j$ \u65f6\u4e0d\u80fd\u968f\u4fbf\u653e\u3002\n\n\u90a3 $a_i=b_j$ \u65f6\u5e94\u8be5\u653e\u54ea\u4e2a\u5462\uff1f\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u53ef\u4ee5\u6bd4\u8f83 $a_{i+1}$ \u4e0e $b_{j+1}$\uff0c\u4f18\u5148\u653e\u5c0f\u7684\u8fdb\u53bb\uff0c\u6bd4\u5982\uff1a\n```cpp\n2\n1 4\n2\n1 5\n```\n\u6211\u4eec\u4f1a\u4f18\u5148\u653e `1 4` \u800c\u4e0d\u662f `1 5`\uff0c\u6700\u7ec8\u8f93\u51fa\u4e3a `1 1 4 5`\u3002\n\n\u4f46\u6bd4\u8f83 $a_{i+1}$ \u548c $b_{j+1}$ \u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5b83\u4eec\u4e5f\u76f8\u540c\u600e\u4e48\u529e\uff1f\u7ee7\u7eed\u6bd4\u8f83\uff1f\u5982\u679c\u7ee7\u7eed\u6bd4\u8f83\u590d\u6742\u5ea6\u5c31\u4f1a\u53d8\u6210 $O((n+m)^2)$\uff08\u5168\u76f8\u540c\uff09\uff0c\u8fd9\u4e0d\u597d\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u76f8\u540c\u7684\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u56e0\u4e3a\u5982\u679c $a_{[i,i+k-1]}=b_{[j,j+k-1]}$\uff0c\u90a3\u4e48 $\\forall l<k$\uff0c$a_{[i,i+l-1]}=b_{[j,j+l-1]}$\uff1b\u5982\u679c $a_{[i,i+k-1]}\\ne b_{[j,j+k-1]}$\uff0c\u90a3\u4e48 $\\forall l>k$\uff0c$a_{[i,i+l-1]}\\ne b_{[j,j+l-1]}$\u3002\u5b58\u5728\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4e8c\u5206\u3002\n\n\u4e3a\u4e86\u5feb\u901f\u6bd4\u8f83\uff0c\u7528 hash \u9884\u5904\u7406\uff0c$O(1)$ \u6c42\u51fa\u5b57\u4e32 hash \u503c\u3002\u5177\u4f53\u505a\u6cd5\uff1a\u8bbe $sum_i$ \u4e3a $a_{[1,i]}$ \u7684 hash \u503c\uff0c\u663e\u7136 $sum_i=(Bsum_{i-1}+a_i)\\bmod P$\uff0c\u90a3\u4e48 $a_{[l,r]}=sum_r-B^{r-l+1}sum_{l-1}$\uff08\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff09\u3002\u8fd9\u9898\u4e0d\u600e\u4e48\u5361 hash\uff0c$B,P$ \u968f\u4fbf\u9009\u90fd\u884c\u3002\n\n\u7ed9\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\ntemplate<int N,int B=233,int P=(int)1e9+7> struct hasher{\n    LL h[N+10],b[N+10];\n    hasher(){for(int i=b[h[0]=0]=1ll;i<=N;i++) b[i]=1ll*b[i-1]*B%P;}\n    void build(int a[],int n=N){for(int i=1;i<=n;i++) h[i]=(1ll*h[i-1]*B+1ll*a[i])%P;}\n    int operator()(int l,int r){return l<=r?(h[r]-h[l-1]*b[r-l+1]%P+P)%P:0;}\n};\nint n[2],a[2][200010],nxt[2][200010],t[500010];\nhasher<200010,1145,(int)1e9+7> h[2];\nint binary(int L,int R,int i[2]){\n    int ans=L-1;\n    while(L<=R){\n        int mid=(L+R)>>1;\n        if(h[0](i[0],i[0]+mid-1)==h[1](i[1],i[1]+mid-1)) ans=mid,L=mid+1;\n        else R=mid-1;\n    }\n    return ans;\n}\nvoid merge(){\n    int cnt=1,i[2]={1,1};\n    //\u76f8\u7b49\uff0c\u540e\u9762\u5c0f\n    while(i[0]<=n[0]&&i[1]<=n[1]){\n        int len=binary(1,min(n[0]-i[0],n[1]-i[1])+1,i);\n        int k=a[0][i[0]+len]>a[1][i[1]+len];\n        t[cnt++]=a[k][i[k]++];\n    }\n    while(i[0]<=n[0]) t[cnt++]=a[0][i[0]++];\n    while(i[1]<=n[1]) t[cnt++]=a[1][i[1]++];\n}\nint main(){\n    memset(a,0x3f,sizeof a);\n    for(int k=0;k<=1;k++){\n        scanf(\"%d\",&n[k]);\n        for(int i=1;i<=n[k];i++) scanf(\"%d\",&a[k][i]);\n        h[k].build(a[k],n[k]);\n    }\n    merge();\n    for(int i=1;i<=n[0]+n[1];i++) printf(\"%d%c\",t[i],\" \\n\"[i==n[0]+n[1]]);\n    return 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n+m)\\log(n+m))$\u3002",
        "postTime": 1642910360,
        "uid": 509229,
        "name": "yukimianyan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8023 \u3010[ONTAK2015] Tasowanie\u3011"
    },
    {
        "content": "**Part 1 \u9898\u610f\u5206\u6790**\n\n\u9898\u610f\u5927\u6982\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u53ef\u4ee5\u9009\u53d6 $A$ \u6216 $B$ \u4e32\u76ee\u524d\u5269\u4e0b\u7684\u9996\u4e2a\u5b57\u6bcd\uff0c\u52a0\u5230\u65b0\u4e32 $C$ \u4e2d\uff0c\u4ece\u7b2c\u4e00\u4f4d\u5f00\u59cb\u52a0\uff0c\u8981\u6c42\u6700\u540e\u5f97\u5230\u7684\u4e32\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n**Part 2 \u89e3\u6cd5**\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u6bd4\u8f83 $A$ \u6216 $B$ \u4e32\u76ee\u524d\u5269\u4e0b\u7684\u9996\u4e2a\u5b57\u6bcd\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u5173\u7cfb\uff0c\u53d6\u8f83\u5c0f\u7684\u4e00\u4e2a\uff0c\u6709\u5f88\u5927\u673a\u7387\u83b7\u5f97\u6b63\u786e\u7b54\u6848\u3002\u4f46\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\uff0c$A_i=B_j$\u65f6\uff0c\u9700\u8981\u601d\u8003\uff0c\u6211\u4eec\u5230\u5e95\u8be5\u53d6 $A$ \u4e32\u9996\u5b57\u6bcd\uff0c\u8fd8\u662f $B$ \u4e32\u9996\u5b57\u6bcd\u3002\n\n\u5047\u8bbe\u5f53\u524d\u6211\u4eec\u770b\u5230\u4e86 $A_i$ \u548c $B_j$\uff0c\u63a5\u7740\u53c8\u6709\u8fde\u7eed $k$ \u4e2a\u76f8\u540c\u5b57\u7b26\uff08\u5305\u62ec\u5f53\u524d\u4f4d\u7f6e\uff09,\u4e0d\u59a8\u8bbe $A_{i+k} < B_{j+k}$ \u51fa\u73b0\uff0c\u5219\u4f1a\u6709\u4e24\u79cd\u7b56\u7565\uff1a\n\n\n1.\u5148\u53d6 $A_i$ \uff0c\u7136\u540e\u9010\u4f4d\u6bd4\u8f83\uff0c\u5728\u82e5\u5e72\u6b21\u6bd4\u8f83\u8fc7\u540e\uff0c\u5fc5\u7136\u4f1a\u5bf9 $A_{i+k}$ \u548c $B_x$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u4e14\u6ee1\u8db3 $x \\leq i+k$ \uff0c$A_{i+k}<B_x$ \u8fd9\u4e24\u4e2a\u6761\u4ef6\u3002\u7136\u540e\u9009\u5165 $A_{i+k}$ \u8fd9\u4e2a\u5b57\u7b26\u3002\n\n2.\u5148\u53d6 $B_i$ \uff0c\u540c\u7406\uff0c\u5fc5\u7136\u4f1a\u5bf9 $B_{i+k}$ \u548c $A_x$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u4f46\u4e0d\u540c\u7684\u662f\uff0c $x$ \u4e0d\u4e00\u5b9a\u6ee1\u8db3\u4e00\u7b56\u7565\u4e2d\u7684\u6761\u4ef6\u3002\u82e5 $x \\leq i+k$ \u4e14 $B_{i+k}<A_x$ \uff0c\u5219 $B_{i+k}$ \u4e00\u5b9a\u5728 $A_{i+k}$ \u4e4b\u524d\u88ab\u9009\u51fa\u3002\u6240\u4ee5\u5b57\u5178\u5e8f\u4e0d\u4e3a\u6700\u5c0f\u3002\u82e5 $x > i+k$ \uff0c\u5219\u65e0\u5f71\u54cd\u3002\n\n\u7efc\u4e0a\uff0c\u5229\u7528\u540e\u7f00\u6570\u7ec4\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u5bf9\u5e94\u7684 $rk_i$ \u6c42\u51fa\uff0c\u7528\u4e8e\u7ef4\u62a4\u9009\u62e9\u3002\u5373\u53ef\u6c42\u51fa\u7b54\u6848\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u662f\u4e24\u4e2a\u4e32\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u4e24\u4e32\u5408\u5e76\uff0c\u4e2d\u95f4\u9700\u8981\u7528\u5206\u9694\u7b26\u9694\u5f00\u3002\n\n**Part 3 Code**\n\n```\n#include<bits/stdc++.h>\n#define MAXN 200005\nusing namespace std;\nint n,m;\nint len;\nint a[MAXN*2];\nint v[MAXN*2];\nint sa[2][MAXN*2],rk[2][MAXN*2];\nint ft,sd=1;\ninline void mul(int *sa,int *rk,int *SA,int *RK,int k){\n\tfor(int i=1;i<=len;++i)v[rk[sa[i]]]=i;\n\tfor(int i=len;i>=1;--i)if(k<sa[i])SA[v[rk[sa[i]-k]]--]=sa[i]-k;\n\tfor(int i=len-k+1;i<=len;++i)SA[v[rk[i]]--]=i;\n\tfor(int i=1;i<=len;++i)RK[SA[i]]=RK[SA[i-1]]+(rk[SA[i]]!=rk[SA[i-1]]||rk[SA[i]+k]!=rk[SA[i-1]+k]);\n}\nsigned main(){\n\tstd::ios::sync_with_stdio(false);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)cin>>a[i];\n\tcin>>m;\n\ta[n+1]=1001;\n\tfor(int i=1;i<=m;++i)cin>>a[i+n+1];\n\tlen=n+m+1;\n\tfor(int i=1;i<=len;++i)++v[a[i]];\n\tfor(int i=1;i<=1001;++i)v[i]+=v[i-1];\n\tfor(int i=1;i<=len;++i)sa[ft][v[a[i]]--]=i;\n\tfor(int i=1;i<=len;++i)rk[ft][sa[ft][i]]=rk[ft][sa[ft][i-1]]+(a[sa[ft][i]]!=a[sa[ft][i-1]]);\n\tfor(int k=1;k<n;k*=2,swap(ft,sd)){\n\t\tmul(sa[ft],rk[ft],sa[sd],rk[sd],k);\n\t}\n\tint head1=1,head2=n+2;\n//\tfor(int i=1;i<=len;++i)cout<<rk[ft][i]<<\" \";\n//\tcout<<endl;\n\twhile(1){\n\t\tif(head1==n+1&&head2==n+m+2)break;\n\t\tif(head1==n+1){\n\t\t\tcout<<a[head2++]<<\" \";\n\t\t}else{\n\t\t\tif(head2==n+m+2)cout<<a[head1++]<<\" \";\n\t\t\telse{\n\t\t\t\tif(rk[ft][head1]<rk[ft][head2])cout<<a[head1++]<<\" \";\n\t\t\t\telse cout<<a[head2++]<<\" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1644461673,
        "uid": 302191,
        "name": "\u6afb\u5c18\u0f72\u0f7c\u0f72\u0f39",
        "ccfLevel": 7,
        "title": "P8023 [ONTAK2015] Tasowanie"
    },
    {
        "content": "# Part 1 \u5206\u6790\u6c42\u89e3\uff1a\n\n\n\u6765\u4e00\u7bc7 SA \u540e\u7f00\u6570\u7ec4\u7684\u9898\u89e3\uff1b\n\n\u76f8\u4fe1\u8bfb\u5b8c\u9898\u540e\u5927\u5bb6\u90fd\u77e5\u9053\u539f\u9898\u8981\u8ba9\u6211\u4eec\u505a\u5f52\u5e76\u6392\u5e8f\u4e2d\u7684\u5e76\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\uff1b\n\n\u6240\u4ee5\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u7528\u4e0a $Rk$ \u6570\u7ec4\uff0c\u8fd9\u6837\u5c06 $A$ \u4e32\u548c $B$ \u4e32\u770b\u4f5c\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u961f\u5217\u7684\u4e1c\u897f\uff0c\u5de6\u8fb9\u7aef\u70b9\u4e3a\u961f\u9996\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u6bd4\u8f83\u961f\u9996\u7684 $Rk$ \u503c\u5c31\u884c\u4e86\u3002\n\n# Part 2 CODE\uff1a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<math.h>\n#include<algorithm>\n#include<queue>\n#define INF 0x7fffffff/2\nusing namespace std;\nstring s;\nint T,n,p=0,q=1,k=1,kk,mx; \nint n1,n2,now1,now2;\nint a[1001505],rk[2][1001505],vst[1000005],sa[2][1001505];\nvoid MUL(int *rk,int *sa,int *RK,int *SA) {\n\tfor(int i=1;i<=n;i++) vst[rk[sa[i]]]=i;\n\tfor(int i=n;i>=1;i--) {\n\t\tif(sa[i]>k) SA[vst[rk[sa[i]-k]]--]=sa[i]-k;\n\t}\n\tfor(int i=n-k+1;i<=n;i++) SA[vst[rk[i]]--]=i;\n\tfor(int i=1;i<=n;i++) RK[SA[i]]=RK[SA[i-1]]+(rk[SA[i]]!=rk[SA[i-1]]||rk[SA[i]+k]!=rk[SA[i-1]+k]);\n}\nvoid PRE() {\n\tfor(int i=1;i<=n;i++) vst[a[i]]++;\n\tfor(int i=1;i<=10000;i++) vst[i]+=vst[i-1];\n\tfor(int i=1;i<=n;i++) sa[p][vst[a[i]]--]=i;\n\tfor(int i=1;i<=n;i++) rk[p][sa[p][i]]=rk[p][sa[p][i-1]]+(a[sa[p][i]]!=a[sa[p][i-1]]);\n\tfor(k=1;k<n;k<<=1,swap(p,q)) MUL(rk[p],sa[p],rk[q],sa[q]);\n} // \u4e0d\u9700\u8981\u6c42 height \u6570\u7ec4\uff0c\u4ee5\u4e0a\u677f\u5b50\u3002\nsigned main() {\n\tscanf(\"%d\",&n1);\n\tfor(int i=1;i<=n1;i++) scanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&n2);\n\tfor(int i=1;i<=n2;i++) scanf(\"%d\",&a[n1+i+1]); // \u5c06\u4e24\u4e32\u62fc\u63a5\u8d77\u6765\n\ta[n1+1]=3001; // \u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7279\u6b8a\u5b57\u7b26\u7684\u64cd\u4f5c\uff0c\u8d4b\u503c\u968f\u610f\u4f46\u4e00\u5b9a\u8981\u5927\u4e8e\u4e24\u4e32\u4e2d\u7684\u5143\u7d20\n\tn=n1+n2+1;\n\tPRE(); // SA \u540e\u7f00\u6570\u7ec4\u677f\u5b50\n\tnow1=1,now2=n1+2; // \u4e24\u4e32\u5de6\u7aef\u70b9\n\tfor(int i=1;i<=n;i++) {\n\t\tif(rk[p][now1]<rk[p][now2]) printf(\"%d \",a[now1]),now1++;\n\t\telse printf(\"%d \",a[now2]),now2++; // \u6bd4\u8f83 Rk \u6570\u7ec4\u7684\u503c\n\t\tif(now1==n1+1) {\n\t\t\tfor(int j=now2;j<=n;j++) printf(\"%d \",a[j]);\n\t\t\tbreak;\n\t\t}\n\t\tif(now2==n+1) {\n\t\t\tfor(int j=now1;j<=n1;j++) printf(\"%d \",a[j]);\n\t\t\tbreak;\n\t\t} // \u5f53\u4e00\u4e2a\u4e32\u7528\u5c3d\u65f6\u8f93\u51fa\u5269\u4e0b\u7684\u53e6\u4e00\u4e2a\u4e32\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1644410341,
        "uid": 539041,
        "name": "Augen_stern",
        "ccfLevel": 7,
        "title": "P8023 [ONTAK2015] Tasowanie \u9898\u89e3"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4\u3002\n\n\u6211\u4eec\u5bf9 $A+B$ \u6c42\u51fa $rk$ \u6570\u7ec4\uff0c\u7136\u540e\u8fdb\u884c\u4e8c\u8def\u5f52\u5e76\uff0c\u53d6 $rk$ \u66f4\u5c0f\u7684\u90a3\u4e2a\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u7b49\u4e0b\uff0c$A+B$ \u91cc\u9762 $A$ \u7684\u540e\u9762\u591a\u4e86\u4e00\u6574\u4e2a $B$ \u5f53\u540e\u7f00\uff0c\u4e3a\u5565\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u5462\uff1f\n\n\u5982\u679c\u5f53\u524d\u4f4d\u7f6e $A_i\\ne B_j$\uff0c\u663e\u7136\u5728 $rk$ \u6570\u7ec4\u91cc\u9762\u6ca1\u6709\u5f71\u54cd\u3002\u5982\u679c $A_i=B_j$ \u4e86\uff0c\u4f46\u5b58\u5728\u7b2c\u4e00\u4e2a $A_{i+k}\\ne B_{j+k}$ \u7684\u4f4d\u7f6e\uff0c\u662f\u540c\u7406\u7684\u3002\u90a3\u4e48\u4e0b\u9762\u8003\u8651\u5982\u679c $A_{i\\dots}=B_{j\\dots}$\uff0c\u76f4\u5230\u4e00\u4e2a\u4e32\u7ed3\u675f\u3002\u6b64\u65f6\u4e00\u4e2a\u4e32\u662f\u53e6\u4e00\u4e2a\u4e32\u7684\u524d\u7f00\uff0c\u8fd9\u4e9b\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5148\u53d6\u54ea\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u6ca1\u6709\u5173\u7cfb\u3002\u8fd9\u65f6\u5019\u6309\u7167 $rk$ \u6570\u7ec4\u6392\u5e8f\uff0c\u9ed8\u8ba4\u4f1a\u5148\u53d6 $B$ \u4e2d\u7684\u6570\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f SA \u7684\u590d\u6742\u5ea6\uff0c\u8fd9\u91cc\u6211\u5199\u7684\u662f\u500d\u589e\u7b97\u6cd5\uff0c\u5c31\u662f $\\mathcal{O}(n\\log{n})$\u3002\n\nUPD\uff1a\u88ab [HACK](https://www.luogu.com.cn/discuss/410307) \u4e86\uff0c\u4fee\u6539\u4e86\u4e00\u4e0b\uff0c\u5728 $A$ \u4e32\u672b\u5c3e\u52a0\u4e86\u4e2a $+\\infty$\uff0c\u901a\u8fc7\u4e86 HACK \u6570\u636e\u3002\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(int x=y;x<=z;x++)\n#define per(x,y,z) for(int x=y;x>=z;x--)\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\nconst int N = 4e5+5; \n\nint n1, n2, a[N], b[N], sa[N], rk[N], lst[N<<1], id[N], cnt[N];\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\n\nint main() {\n    scanf(\"%d\", &n1);\n    rep(i, 1, n1) scanf(\"%d\", &a[i]);\n    a[n1+1] = 2000;\n    scanf(\"%d\", &n2);\n    rep(i, 1, n2) scanf(\"%d\", &a[n1+i+1]);\n    int n = n1 + n2 + 1, m = 2000;\n    rep(i, 1, n) ++cnt[rk[i] = a[i]];\n    rep(i, 1, m) cnt[i] += cnt[i-1];\n    per(i, n, 1) sa[cnt[rk[i]]--] = i;\n    for(int w=1,p=0;;w<<=1,m=p) {\n        p = 0;\n        per(i, n, n-w+1) id[++p] = i;\n        rep(i, 1, n) if(sa[i] > w) id[++p] = sa[i] - w;\n        memset(cnt, 0, sizeof(cnt));\n        rep(i, 1, n) ++cnt[rk[id[i]]];\n        rep(i, 1, m) cnt[i] += cnt[i-1];\n        per(i, n, 1) sa[cnt[rk[id[i]]]--] = id[i];\n        memcpy(lst, rk, sizeof(rk));\n        p = 0;\n        rep(i, 1, n) {\n            if(lst[sa[i]] == lst[sa[i-1]] && lst[sa[i]+w] == lst[sa[i-1]+w]) rk[sa[i]] = p;\n            else rk[sa[i]] = ++p;\n        }\n        if(p == n) {\n            rep(i, 1, n) sa[rk[i]] = i;\n            break;\n        }\n    }\n    for(int l=1,r=n1+2,i=1;i<=n;i++) {\n        if(l > n1) b[i] = a[r++];\n        else if(r > n) b[i] = a[l++];\n        else b[i] = (rk[l] < rk[r]) ? a[l++] : a[r++];\n    }\n    rep(i, 1, n) printf(\"%d%c\", b[i], \" \\n\"[i==n]);\n    return 0;\n}\n```",
        "postTime": 1644375642,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P8023\u3010[ONTAK2015] Tasowanie\u3011"
    }
]