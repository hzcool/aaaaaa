[
    {
        "content": "\u4e00\u3001\u95ee\u9898\u5206\u6790\n\n======\n\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u4e00\u4e2a$N$\u4e2a\u6570\u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u9700\u8981\u586b\u5145\u4e00\u4e2a$[1,K]$\u8303\u56f4\u5185\u7684\u6570\u3002\u540c\u65f6\u5bf9\u4e8e\u4efb\u610f\u7684$1\\leq i\\leq K$\uff0c\u5e8f\u5217\u7684\u7b2c$i$\u4e2a\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u586b\u5145\uff0c\u586b\u5145\u7684\u6570\u4e3a$i$\u3002\u540c\u65f6$[N-K+1,N]$\u533a\u95f4\u5185\u586b\u5145\u7684\u6570\u5fc5\u987b\u5305\u542b$[1,K]$\u7684\u6240\u6709\u6570\u3002\u800c\u300c\u4e00\u8f86\u516c\u4ea4\u8f66\u7ecf\u8fc7\u7684\u76f8\u90bb\u4e24\u4e2a\u7ad9\u53f0\u95f4\u8ddd\u79bb\u4e0d\u5f97\u8d85\u8fc7$P$km\u300d\u8fd9\u4e2a\u6761\u4ef6\uff0c\u7b49\u4ef7\u4e8e\u5e8f\u5217\u4e2d\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6\u4e3a$P$\u7684**\u4e00\u6bb5**\uff0c\u90fd\u5fc5\u987b\u586b\u5145\u6709$[1,K]$\u7684\u6240\u6709\u6570\u3002\n\n\u4e8c\u3001DP\u6a21\u578b\n\n======\n\u5206\u6790\u540e\u53ef\u4ee5\u5f97\u51fa\uff0c\u7531\u4e8e\u524d$K$\u4e2a\u586b\u5145\u7684\u6570\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u5173\u5fc3\u5e8f\u5217\u4e2d\u7684\u6570\u76f8\u540c\u6216\u4e0d\u76f8\u540c\uff0c\u800c\u548c\u5177\u4f53\u6570\u503c\u65e0\u5173\u3002\u56e0\u6b64\u8bbe$f[i][S]$\u4e3a\u5e8f\u5217\u4e2d$[1,i-1]$\u5df2\u7ecf\u586b\u5145\u5b8c\uff0c$[i,i+P-1]$\u8fd9\u4e00\u6bb5\u586b\u5145\u7684\u72b6\u6001\u4e3a$S$\u7684\u65b9\u6848\u6570\u3002$S$\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$P$\u7684$01$\u4e32\uff0c\u4ece\u9ad8\u5f80\u4f4e\uff08\u4e4b\u540e\u7684\u300c\u7b2c\u51e0\u4f4d\u300d\u90fd\u662f\u4ece\u9ad8\u4f4d\u5f80\u4f4e\u4f4d\uff09\u7b2c$j$\u4f4d\u4e3a$1$\u8868\u793a\u4f4d\u7f6e$i+j-1$\u5df2\u7ecf\u88ab\u586b\u5145\uff0c\u5426\u5219\u4f4d\u7f6e$i+j-1$\u8fd8\u6ca1\u88ab\u586b\u5145\u3002\n\n\u4e09\u3001DP\u8f6c\u79fb\n\n======\n\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u80fd\u88ab\u586b\u5145\uff0c\u89c4\u5b9a\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c$S$\u7684\u7b2c$1$\u4f4d\u6052\u4e3a$1$\u3002\u540c\u65f6\u7531\u4e8e$[i,i+P-1]$\u533a\u95f4\u91cc\u5fc5\u987b\u6709\u586b\u5145\u6240\u6709$K$\u4e2a\u6570\uff0c\u6240\u4ee5\u518d\u89c4\u5b9a\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d$S$\u5fc5\u987b\u5305\u542b\u4e14\u4ec5\u5305\u542b$K$\u4e2a$1$\u3002\n\n\u800c\u5224\u65ad$S_2$\u80fd\u5426\u4ece$S_1$\u8f6c\u79fb\uff0c\u5c31\u662f\u628a$S_1$\u6700\u9ad8\u4f4d\u7684$1$\u53bb\u6389\u4e4b\u540e\u5728\u672b\u5c3e\u518d\u8865\u4e00\u4e2a$0$\uff08\u8bb0\u4e3a$S_3$\uff09\uff0c\u5982\u679c$S_3$\u4e2d\u7684$K-1$\u4e2a$1$\u80fd\u591f\u6070\u597d\u4e0e$S_2$\u4e2d$K$\u4e2a$1$\u5176\u4e2d$K-1$\u4e2a\u4e00\u4e00\u5bf9\u5e94\uff0c\uff0c\u90a3\u4e48$S_2$\u80fd\u4ece$S_1$\u8f6c\u79fb\u3002\n\n\u56db\u3001\u77e9\u9635\u4f18\u5316\n\n======\n\u8003\u8651\u5230$N\\leq 10^9$\u7684\u6570\u636e\u8303\u56f4\uff0c\u60f3\u5230\u77e9\u9635\u4e58\u6cd5\u3002\u8fd9\u65f6\u6839\u636e\u4e0a\u9762\u63a8\u51fa\u7684\u8f6c\u79fb\u6761\u4ef6\uff0c\u5f97\u5230\u6709\u7528\u7684\u72b6\u6001\u53ea\u6709$C_{P-1}^{K-1}$\u4e2a\u3002\u53ef\u4ee5\u5f97\u5230\u77e9\u9635\u89c4\u6a21\u7684\u6700\u5927\u503c\u4e3a$C_9^{\\lfloor\\frac{9}{2}\\rfloor}=126$\u3002\n\n\u590d\u6742\u5ea6$O((C_{P-1}^{K-1})^3\\log N)$\u3002\n\n\u4e94\u3001\u4ee3\u7801\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int N = 134, ZZQ = 30031;\nint n, K, P, tot, sta[N];\nstruct cyx {\n    int n, m, a[N][N];\n    cyx() {}\n    cyx(int _n, int _m) :\n        n(_n), m(_m) {memset(a, 0, sizeof(a));}\n    friend inline cyx operator * (cyx a, cyx b) {\n        int i, j, k; cyx res = cyx(a.n, b.m);\n        for (i = 1; i <= res.n; i++) for (j = 1; j <= res.m; j++)\n        for (k = 1; k <= a.m; k++)\n            (res.a[i][j] += a.a[i][k] * b.a[k][j]) %= ZZQ;\n        return res;\n    }\n    friend inline cyx operator ^ (cyx a, int b) {\n        int i; cyx res = cyx(a.n, a.m);\n        for (i = 1; i <= res.n; i++) res.a[i][i] = 1;\n        while (b) {\n            if (b & 1) res = res * a;\n            a = a * a;\n            b >>= 1;\n        }\n        return res;\n    }\n} Orz, Zzq;\nint main() {\n    int i, j, k; cin >> n >> K >> P;\n    for (i = (1 << P - 1); i < (1 << P); i++) {\n        int cnt = 0; for (j = 0; j < P; j++) if ((i >> j) & 1) cnt++;\n        if (cnt == K) sta[++tot] = i;\n    }\n    Orz = cyx(tot, tot); Zzq = cyx(tot, 1);\n    for (i = 1; i <= tot; i++) for (j = 1; j <= tot; j++) {\n        int S1 = sta[i], S2 = sta[j]; S1 = S1 - (1 << P - 1) << 1;\n        for (k = 0; k < P; k++) if (!((S1 >> k) & 1) && S1 + (1 << k) == S2)\n            Orz.a[j][i] = 1;\n    }\n    Zzq.a[tot][1] = 1; Orz = (Orz ^ n - K) * Zzq;\n    cout << Orz.a[tot][1] << endl;\n    return 0;\n}\n====\n```",
        "postTime": 1512882023,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3204\u3010[HNOI2010]BUS \u516c\u4ea4\u7ebf\u8def\u3011"
    },
    {
        "content": "### \u697c\u4e0a\u7684\u9898\u89e3\u5176\u5b9e\u5df2\u7ecf\u5f88\u68d2\u4e86\uff0c\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u9001\u7ed9\u7ed9\u521a\u521d\u5b66\u72b6\u538bDP\u548c\u77e9\u9635\u5feb\u901f\u5e42\u7684\u540c\u5b66\u3002\r\n\r\n#### 1.\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u72b6\u538b\u662f\u5bf9\u7684\uff1f\r\n\u8fd9\u91cc\u6709\u4eba\u53ef\u80fd\u4f1a\u8bf4\uff1a\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u561b\uff01\u66b4\u529b\u6253\u8868\u62cd\u4e00\u62cd\u6ca1\u95ee\u9898\u561b\uff01\r\n\r\n\u7136\u800c\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u5728\u8fd9\u91cc\u7ea0\u7ed3\u4e86\u597d\u4e45\uff1a\uff081\uff09\u4e3a\u4ec0\u4e48\u4e0d\u7528\u53ea\u8bb0\u5f550/1\u800c\u4e0d\u7528\u7ba1\u662f\u8c01\u5462\uff1f\uff082\uff09\u8fd9\u4e2a0/1\u600e\u4e48\u4fdd\u8bc1\u662f\u5408\u6cd5\u7684\uff08\u6bcf\u4e2a\u70b9\u88ab\u4e14\u4ec5\u88ab\u904d\u5386\u4e00\u6b21\uff09\u5462\uff1f\r\n\r\n\u5bf9\u4e8e\u95ee\u9898\uff081\uff09\uff1a\r\n\u5176\u5b9e\u4e5f\u5f88\u597d\u60f3\uff0c\r\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\r\n\r\n1 0 1 0 1->1 1 0 1 0(\u72b6\u538b\u4e0d\u77e5\u9053\u600e\u4e48\u538b\u7684\u53ef\u4ee5\u7ffb\u4e00\u7ffb\u4e0a\u9762\u7684\u9898\u89e3)\r\n\r\n\u53cd\u6620\u5230\u73b0\u5b9e\u53ef\u80fd\u662f1 0 2 0 3->1 2 0 3 0,\u4e5f\u53ef\u80fd\u662f2 0 1 0 3->2 1 0 3 0\r\n\uff0c\u4f46\u662f\u56e0\u4e3a\u5982\u679c\u6709\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u8bdd\uff0c1 0 1 0 1\u7684dp\u503c\u5176\u5b9e\u662f2\uff0c\u6240\u4ee5\u662f\u6ca1\u6709\u6f0f\u6389\u8f6c\u79fb\u7684\u3002\r\n\r\n\u5bf9\u4e8e\u95ee\u9898\uff082\uff09\uff1a\u9996\u5148\u56e0\u4e3ap\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u8f6c\u6362\u6210\u6bcf\u4e2a\u957f\u5ea6p\u7684\u533a\u95f41~k\u5404\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\r\n\r\n\u800c\u6bcf\u6b21\u8f6c\u79fb\u4e4b\u6240\u4ee5\u8981\u4fdd\u969c\u7b2c\u4e00\u4f4d\u662f1\uff0c\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u975e\u6cd5\u8f6c\u79fb\u3002\u8fd9\u4e2a\u8f6c\u79fb\u7684\u5b9e\u9645\u610f\u4e49\u5176\u5b9e\u662f\uff1a\u6bcf\u6b21\u79fb\u52a8\u6700\u9760\u540e\u7684\u90a3\u4e2a1\u53bb\u586b\u8865\u524d\u9762\u7684\u67d0\u4e2a0\u3002\u6240\u4ee5\u4e0d\u80fd\u51fa\u73b0\u6709\u4e00\u4e2a\u7a7a\u4f4d\u8fd8\u6ca1\u586b\uff0c\u6240\u6709\u7684\u8f66\u90fd\u8dd1\u5230\u8fd9\u4e2a\u7a7a\u4f4d\u524d\u9762\u53bb\u4e86\u3002\r\n\r\n#### 2.\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u77e9\u9635\u5feb\u901f\u5e42\u662f\u5bf9\u7684\uff0c\u6216\u8005\u8bf4\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u8ba9\u6211\u4eec\u60f3\u5230\u77e9\u9635\u5feb\u901f\u5e42\uff1f\r\n~~\u770b\u6570\u636e\u8303\u56f4\u561b\uff01~~\uff08\u556a\uff01\uff09\r\n\r\n\u5176\u5b9e\u662f\u56e0\u4e3a:\r\n\r\n1.\u6bcf\u4e2a\u72b6\u6001\u7684\u8f6c\u79fb\u662f\u56fa\u5b9a\u7684\u3002\r\n\r\n2.\u72b6\u6001\u7a7a\u95f4\u662f\u4e00\u6837\u7684\uff08\u72b6\u6001\u603b\u662f\u90a3\u4e48\u51e0\u79cd\uff09\u3002\r\n\r\n\u5176\u5b9e\u770b\u4ee3\u7801\u5f88\u96be\u7406\u89e3\u8fd9\u9053\u9898\uff0c\u8fd9\u4e2a\u540e\u9762\u4f1a\u8bf4\u3002\r\n\r\n\u6211\u4eec\u8bbef[i]\u8868\u793a\u7b2ci\u79cd\u72b6\u6001\u7684dp\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u8f6c\u79fb\u5176\u5b9e\u5c31\u662f\u7528\u8fd9\u4e2a\u4e00\u884c\u7684\u201cf\u77e9\u9635\u201d\u4e58\u4e0a\u4e00\u4e2a0/1\u7684\u201c\u8f6c\u79fb\u77e9\u9635\u201d,\u5982\u679c\u7b2ci\u79cd\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u7b2cj\u79cd\u72b6\u6001\uff0c\u5219 \u8f6c\u79fb\u77e9\u9635[i][j]=1\u3002\r\n\r\n\u628a\u4e24\u4e2a\u76f8\u4e58\uff0c\u83b7\u5f97\u65b0\u7684f\u6570\u7ec4\uff0c\u5217\u51fa\u6765\u77e9\u9635\u4e58\u6cd5\u7684\u5f0f\u5b50\u5c31\u662f\u8fd9\u6837\u5b50:\r\n\r\n#### (new)f[j]=sigma(i=1~n)(\u8f6c\u79fb\u77e9\u9635[i][j])*\uff08old\uff09f[i]\r\n\r\n\u8fd9\u4e2a\u5f0f\u5b50\u5f88\u5de7\u5999\uff0c\u76f8\u5f53\u4e8e\u5982\u679ci\u53ef\u4ee5\u8f6c\u79fb\u5230j\uff0c\u5c31\u628af[i]\u52a0\u5230f[j]\u4e0a\u9762\u3002\r\n\r\n\u7136\u540e\u77e9\u9635\u662f\u6ee1\u8db3\u7ed3\u5408\u5f8b\u7684\uff0c\u672c\u6765\u5e94\u8be5\u662f\u628a\u521d\u59cb\u77e9\u9635\u4e58\u4e0an-k\u6b21\u8f6c\u79fb\u77e9\u9635\uff0c\u5c31\u628a\u4ed6\u53d8\u6210\u8f6c\u79fb\u77e9\u9635\u5148\u81ea\u4e58\u7136\u540e\u5728\u4e58\u4e0a\u521d\u59cb\u77e9\u9635\uff0c\u8f6c\u79fb\u77e9\u9635\u81ea\u4e58\u641e\u4e2a\u5feb\u901f\u5e42\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u8fd9\u91cc\u6709\u4eba\u4f1a\u53d1\u73b0\uff0c\u4e3a\u4ec0\u4e48\u4ee3\u7801\u91cc\u9762\u6ca1\u6709\u90a3\u4e2a\u521d\u59cb\u77e9\u9635\uff0c\u76f4\u63a5\u6700\u540e\u8f93\u51fa[len][len]\uff1f\u56e0\u4e3a\u8fd9\u4e2a\u521d\u59cb\u77e9\u9635\u5f88\u7279\u522b\uff0c\u56e0\u4e3a\u521d\u59cb\u7684f\u6570\u7ec4\u662f000000001\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6700\u540e\u4e00\u4f4d\u624d\u4f1a\u6709\u8d21\u732e\u3002\u8fd9\u91cc\u5927\u5bb6\u753b\u4e00\u753b\u5c31\u77e5\u9053\u4e86\u3002\r\n\r\n\u6700\u540e\uff0c\u5f15\u7528\u67d0\u4f4d\u5de8\u4f6c\u6559\u6211\u7684\u4f18\u5316\r\n```cpp\r\nfor(k=1;k<=len;k++)//\u663e\u7136\uff0ck\u63d0\u5230\u5916\u9762\u4e0d\u5f71\u54cd\r\n\tfor(i=1;i<=len;i++)\r\n\t\tif(x.maps[i][k])//\u5982\u679c\u8fd9\u4e00\u683c\u662f0\u5219\u540e\u9762\u90fd\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\r\n\t\t\tfor(j=1;j<=len;j++){\r\n\t\t\t\t(now.maps[i][j]+=(x.maps[i][k]*y.maps[k][j])%MOD)%=MOD;\t\t\r\n\t\t\t\t}\r\n```\r\n\u5206\u5206\u949f\u51b2\u4e0a\u6700\u4f18\u89e3\u7b2c\u4e00\u9762\u597d\u4f10\u3002\r\n\r\n### CODE:\r\n```cpp\r\n#include<cstdio>\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int N=150; \r\nconst int MOD=30031;\r\nint n,k,p,len;\r\nstruct node{\r\n\tint maps[N][N];\r\n\tnode(){\r\n\t\tmemset(maps,0,sizeof(maps));\r\n\t}\r\n};\r\nnode Z;\r\nint all[N];\r\nnode operator * (node x,node y){\r\n\tregister int i,j,k;\r\n\tnode now;\r\n\tfor(k=1;k<=len;k++)\r\n\t\tfor(i=1;i<=len;i++)\r\n\t\t\tif(x.maps[i][k])\r\n\t\t\t\tfor(j=1;j<=len;j++){\r\n\t\t\t\t\t(now.maps[i][j]+=(x.maps[i][k]*y.maps[k][j])%MOD)%=MOD;\t\t\r\n\t\t\t\t}\r\n\treturn now;\r\n}\r\nnode quickpow(node a,int b){\r\n\tnode base=a,ans;\r\n\tfor(int i=1;i<=len;i++)\r\n\t\tans.maps[i][i]=1;\r\n\twhile(b){\r\n\t\tif(b&1)ans=ans*base;\r\n\t\tbase=base*base;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn ans;\r\n}\r\nvoid dfs(int u,int now,int cnt){\r\n\tif(cnt==k){\r\n\t\tall[++len]=now;\r\n\t\treturn;\r\n\t}\r\n\tif(u>p)return;\r\n\tdfs(u+1,now,cnt);\r\n\tnow|=(1<<(p-u));\r\n\tdfs(u+1,now,cnt+1);\r\n}\r\nbool check(int a,int b){\r\n\tregister int i,cnt=0;\r\n\ta<<=1;\r\n\tfor(i=0;i<p;i++)\r\n\t\tif((a&(1<<i))!=(b&(1<<i)))\r\n\t\t\tcnt++;\r\n\tif(cnt<=1)return 1;\r\n\telse return 0;\r\n}\r\nvoid pre(){\r\n\tregister int i,j;\r\n\tfor(i=1;i<=len;i++)\r\n\t\tfor(j=1;j<=len;j++){\r\n\t\t\tif(check(all[i],all[j]))Z.maps[i][j]=1;\r\n\t\t}\r\n}\r\nint main(){\r\n\tcin>>n>>k>>p;\r\n\tdfs(2,1<<(p-1),1);\r\n\tpre();\r\n\tcout<<quickpow(Z,n-k).maps[len][len];\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1551153443,
        "uid": 130060,
        "name": "TopCarry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3204 \u3010[HNOI2010]\u516c\u4ea4\u7ebf\u8def\u3011"
    },
    {
        "content": "##\u9898\u89e3\n\n\u77e9\u9635\u5feb\u901f\u5e42$+dp$\n\n~~\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u96be~~\n\n\u5148\u8003\u8651\u6734\u7d20\u72b6\u538b$dp$\n\n$f[i][S]$ \u8868\u793a\u6700\u6162\u7684\u8f66\u8d70\u5230\u4e86$i$\uff0c$[i, p+i-1]$\u7684\u8986\u76d6\u60c5\u51b5\n\u72b6\u6001\u7b2c\u4e00\u4f4d\u4e00\u5b9a\u662f$1$\n\n\u90a3\u4e48\u663e\u7136$f[i][S] = \\sum f[i-1][S']$\uff08$S'$\u80fd\u8f6c\u79fb\u5230$S$)\n\n\u4ec0\u4e48\u60c5\u51b5\u80fd\u8f6c\u79fb\u5462\uff1f\n\n\u5047\u5982:$S1->S2$\n\n$S1$\u53bb\u6389\u7b2c\u4e00\u4f4d\uff0c\u518d\u5728\u540e\u9762\u8865$0$,\u4ea7\u751f\u7684\u65b0\u6570\u548c$S2$\u81f3\u591a\u53ea\u6709\u4e00\u4e2a\u5dee\u5f02\n\n$n$\u5f88\u5927\uff0c\u6240\u4ee5\u77e9\u9635\u4f18\u5316\u4e00\u4e0b\n\n\u5148\u628a\u5408\u6cd5\u7684\u72b6\u6001\u90fd\u5f04\u51fa\u6765\n\n\u5982\u679c\u4e24\u4e2a\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\uff0c$Matrix[i][j] = 1$\n\n\u521d\u59cb\u77e9\u9635\u4e58\u4ee5\u4e00\u6b21$Matrix$\uff0c\u5c31\u8f6c\u79fb\u4e86\u4e00\u6b21\uff0c\u5feb\u901f\u5e42\u7b97\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5566\n\n##Code\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n\n#define LL long long\n#define RG register\n\nusing namespace std;\ntemplate<class T> inline void read(T &x) {\n    x = 0; RG char c = getchar(); bool f = 0;\n    while (c != '-' && (c < '0' || c > '9')) c = getchar(); if (c == '-') c = getchar(), f = 1;\n    while (c >= '0' && c <= '9') x = x*10+c-48, c = getchar();\n    x = f ? -x : x;\n    return ;\n}\ntemplate<class T> inline void write(T x) {\n    if (!x) {putchar(48);return ;}\n    if (x < 0) x = -x, putchar('-');\n    int len = -1, z[20]; while (x > 0) z[++len] = x%10, x /= 10;\n    for (RG int i = len; i >= 0; i--) putchar(z[i]+48);return ;\n}\nconst int Mod = 30031;\nint N;\nstruct node {\n\tint a[150][150];\n\tnode operator *(node A) const {\n\t\tnode tmp;\n\t\tmemset(tmp.a, 0, sizeof(tmp.a));\n\t\tfor (int i = 1; i <= N; i++)\n\t\t\tfor (int j = 1; j <= N; j++)\n\t\t\t\tfor (int k = 1; k <= N; k++)\n\t\t\t\t\t(tmp.a[i][j] += a[i][k]*A.a[k][j]) %= Mod;\n\t\treturn tmp;\n\t}\n}X, s;\nint S[150], len;\nint n, k, p;\n\nbool check(int s1, int s2) {\n\ts1 <<= 1;\n\tint tmp = 0;\n\tfor (int i = 0; i < p; i++) if (((s1>>i)&1) ^ ((s2>>i)&1)) tmp++;\n\treturn tmp < 2;\n}\n\nint main() {\n\tread(n), read(k), read(p);\n\tfor (int i = 1<<(p-1); i < (1<<p); i++) {\n\t\tint cnt = 0;\n\t\tfor (int j = 0; j < p; j++)\n\t\t\tif ((i >> j) & 1) cnt++;\n\t\tif (cnt == k) S[++len] = i;\n\t}\n\tfor (int i = 1; i <= len; i++)\n\t\tfor (int j = 1; j <= len; j++) {\n\t\t\tint S1 = S[i], S2 = S[j];\n\t\t\tif (check(S1, S2)) X.a[i][j] = 1;\n\t\t}\n\tint y = n-k;\n\tN = len;\n\tfor (int i = 1; i <= N; i++)\n\t\ts.a[i][i] = 1;\n\tfor (; y; y >>= 1, X = X*X) if (y&1) s = s*X;\n\tprintf(\"%d\\n\", s.a[N][N]);\n\treturn 0;\n}\n```",
        "postTime": 1548115486,
        "uid": 8952,
        "name": "M_se\u0430",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3204 \u3010[HNOI2010]\u516c\u4ea4\u7ebf\u8def\u3011"
    },
    {
        "content": "\u8bfb\u5b8c\u9898\u4e4b\u540e\uff0c\u53d1\u73b0\u6700\u540e\u7ec8\u70b9\u7ad9\u7684\u8f66\u8f86\u7684\u987a\u5e8f\u662f\u4efb\u610f\u7684\uff0c\u4e8e\u662f\u5728\u5730\u63a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u540c\u8f66\u8f86\u4e0d\u9700\u8981\u6709\u5e8f\u7684\u8868\u793a\uff0c\u53ea\u9700\u8bb0\u5f55\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002\n\n\u7528\u4e8c\u8fdb\u5236\u6570 $p$ \u5b58\u50a8\u5f53\u524d\u5728\u6700\u540e $P$ \u8f86\u8fdb\u7ad9\u7684\u8f66\uff0c\u662f\u5426\u662f\u6700\u540e\u4e00\u8f86\uff08\u5373\u4e4b\u540e\u662f\u5426\u6709\u540c\u4e00\u8f86\u8f66\u8fdb\u7ad9\uff09\uff0c\u5982\u679c $p$ \u7684\u7b2c $P$ \u4f4d\u4e3a $1$\uff0c\u5219\u65b0\u8fdb\u7ad9\u7684\u8f66\u5fc5\u987b\u662f $P km$ \u524d\u8fdb\u7ad9\u7684\u8f66\uff0c\u5426\u5219\u53ef\u4ee5\u679a\u4e3e\u65b0\u8fdb\u7ad9\u7684\u8f66\u4e4b\u524d\u5728\u54ea\u4e00\u4f4d\uff0c\u8f6c\u79fb\u5982\u4e0b\uff1a\n```cpp\nfor(p=1;p<p2;++p)\n\t\tif((pct[p]=pct[p-(p&-p)]+1)==K)\n\t\t\tmp[mt++]=p;\n\tfor(i=0;i<mt;++i){\n\t\tp=mp[i];\n\t\tif((p>>P-1)&1)add(i,((p<<1)^(1<<P))|1);\n\t\t\telse for(w=0;w<P;++w)\n\t\t\t\tif((p>>w)&1)add(i,(p^(1<<w))<<1|1);\n\t}\n```\n\u53d1\u73b0\u53ef\u4f9b\u8f6c\u79fb\u7684\u72b6\u6001\u53ea\u6709 ${P\\choose K}\\le{10\\choose 5}=252$\uff0c\u6240\u4ee5\u79bb\u6563\u5316\u540e\u53ef\u4ee5\u63a5\u53d7 $O(k^3)$ \u7684\u8f6c\u79fb\uff0c\u53d1\u73b0\u8f6c\u79fb\u6b21\u6570 $n$ \u5f88\u5927\uff0c\u4e8e\u662f\u4f7f\u7528\u77e9\u9635\u5feb\u901f\u5e42\uff0c\u53ef\u4ee5\u5728 $O(k^3\\log_2n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u672c\u9898\u3002\n```cpp\nfor(rs=at,n-=K+1;n;n>>=1,at=at*at)\n\t\tif(n&1)rs=rs*at;\n\tp=lower_bound(mp,mp+mt,(1<<K)-1)-mp;\n\tprintf(\"%d\\n\",rs.a[p][p]);\n```",
        "postTime": 1659056748,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u72b6\u6001\u538b\u7f29\u4e0e\u77e9\u9635\u5feb\u901f\u5e42"
    },
    {
        "content": "# [My_blog](https://www.cnblogs.com/dsjkafdsaf/)\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dsjkafdsaf/p/11637486.html)\n\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\n\u5c0fZ\u6240\u5728\u7684\u57ce\u5e02\u6709$N$\u4e2a\u516c\u4ea4\u8f66\u7ad9\uff0c\u6392\u5217\u5728\u4e00\u6761\u957f($N-1$)km\u7684\u76f4\u7ebf\u4e0a\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7f16\u53f7\u4e3a$1$\u5230$N$\uff0c\u76f8\u90bb\u516c\u4ea4\u8f66\u7ad9\u95f4\u7684\u8ddd\u79bb\u5747\u4e3a$1$km\u3002 \u4f5c\u4e3a\u516c\u4ea4\u8f66\u7ebf\u8def\u7684\u89c4\u5212\u8005\uff0c\u5c0fZ\u8c03\u67e5\u4e86\u5e02\u6c11\u7684\u9700\u6c42\uff0c\u51b3\u5b9a\u6309\u4e0b\u8ff0\u89c4\u5219\u8bbe\u8ba1\u7ebf\u8def\uff1a\n\n1.\u8bbe\u5171$K$\u8f86\u516c\u4ea4\u8f66\uff0c\u5219$1$\u5230$K$\u53f7\u7ad9\u4f5c\u4e3a\u59cb\u53d1\u7ad9\uff0c$N-K+1$\u5230N\u53f7\u53f0\u4f5c\u4e3a\u7ec8\u70b9\u7ad9\u3002\n\n2.\u6bcf\u4e2a\u8f66\u7ad9\u5fc5\u987b\u88ab\u4e00\u8f86\u4e14\u4ec5\u4e00\u8f86\u516c\u4ea4\u8f66\u7ecf\u8fc7\uff08\u59cb\u53d1\u7ad9\u548c\u7ec8\u70b9\u7ad9\u4e5f\u7b97\u88ab\u7ecf\u8fc7\uff09\u3002 \n\n3.\u516c\u4ea4\u8f66\u53ea\u80fd\u4ece\u7f16\u53f7\u8f83\u5c0f\u7684\u7ad9\u53f0\u9a76\u5f80\u7f16\u53f7\u8f83\u5927\u7684\u7ad9\u53f0\u3002 \n\n4.\u4e00\u8f86\u516c\u4ea4\u8f66\u7ecf\u8fc7\u7684\u76f8\u90bb\u4e24\u4e2a\u7ad9\u53f0\u95f4\u8ddd\u79bb\u4e0d\u5f97\u8d85\u8fc7$P$km\u3002\n\n\u5728\u6700\u7ec8\u8bbe\u8ba1\u7ebf\u8def\u4e4b\u524d\uff0c\u5c0fZ\u60f3\u77e5\u9053\u6709\u591a\u5c11\u79cd\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u4f60\u53ea\u9700\u6c42\u51fa\u7b54\u6848\u5bf9$30031$\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n## Input\n\n\u4ec5\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570$N, K ,P$\uff0c\u5206\u522b\u8868\u793a\u516c\u4ea4\u8f66\u7ad9\u6570\uff0c\u516c\u4ea4\u8f66\u6570\uff0c\u76f8\u90bb\u7ad9\u53f0\u7684\u8ddd\u79bb\u9650\u5236\u3002\n\n$N<=10^9\uff0c1<P<=10\uff0cK<N\uff0c1<K<=P$\n\n## Output\n\n\u4ec5\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\u6570\u5bf9$30031$\u53d6\u6a21\u7684\u7ed3\u679c\u3002\n\n## Sample Input\n\n```\n10 3 3\n5 2 3\n10 2 4\n```\n## Sample Output\n```\n1\n3\n81\n```\n\n\u770b\u5230$k,p$\u5982\u6b64\u4e4b\u5c0f\u81ea\u7136\u5c31\u662f\u72b6\u538b$dp$\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5341\u5206\u60f3\u5230$O((n-k)*p*2^p)$\u7684$dp$\uff0c\u5373$dp[i][j]$\u8868\u793a\u7b2c$i$\u5343\u7c73\uff0c\u7b2c$i-p+1$\u5230$i$\u5343\u7c73\u662f\u5426\u6709\u8f66\u7684\u72b6\u6001\u4e3a$j$\u7684\u65b9\u6848\u6570\u3002\n\n\u8f6c\u79fb\u662f\u5f88\u663e\u7136\u7684\u679a\u4e3e\u4e00\u4e2a$1$\u628a\u5b83\u653e\u5230\u540e\u9762\u53bb\uff0c\u7531\u4e8e\u76f4\u63a5\u8f6c\u79fb\u7684\u8bdd\u4f1a\u7b97\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u9650\u5236\u4e00\u4f4d\u3002\n\n\u6211\u4eec\u53ea\u8981\u9650\u5236\u6700\u4f4e\u4f4d\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a$1$\u5728\uff0c\u8fd9\u8981\u7684\u8bdd\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u72b6\u6001\u7684\u8f6c\u79fb\u4e0d\u4f1a\u91cd\u590d\u3002\n\n$dp$\u90e8\u5206\u89c1\u4e0b\uff1a\n\n```cpp\n\ndp[k][(1 << k) - 1] = 1;\nret(i, k, n) drep(K, (1 << P) - 1, 1) if (dp[i][K]) {\n\tif (!(K & 1))continue;\n\tret(p, 0, P) if (K & 1 << p) {\n\t\tint Now = (K ^ (1 << p)) % (1 << P - 1);\n\t\tNow <<= 1, Now |= 1;\n\t\tdp[i + 1][Now] += dp[i][K], Mod(dp[i + 1][Now]);\n\t}\n}\n```\n\n\u4f46\u662f\uff01\uff01\uff01\u8fd9\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n#### \u6211\u4eec\u53d1\u73b0\u6bcf\u6b21dp\u7684\u8f6c\u79fb\u90fd\u662f\u4e00\u6837\u7684\n\n\u6bcf\u6b21\u90fd\u662f\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u56fa\u5b9a\u7684\u72b6\u6001\uff0c\u548c$i$\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u77e9\u9635\u52a0\u901f\uff0c\u5229\u7528\u77e9\u9635\u52a0\u901f\u8fd9\u4e2a\u9012\u63a8\u3002\n\n**\u8fd8\u6ca1\u5b8c\uff01\uff01\uff01**\n\n\u5982\u679c\u628a\u6240\u6709\u72b6\u6001\u90fd\u7b97\u4e0a\u53bb\u7684\u8bdd\uff0c\u77e9\u9635\u7684\u5927\u5c0f\u4e3a$1024*1024$\uff0c\u6bcf\u6b21\u77e9\u9635\u4e58\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a$O(1024*1024*1024)$\u65e0\u6cd5\u627f\u53d7\u3002\n\n\u4f46\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\uff0c\u5373\u72b6\u6001$i$\u5fc5\u987b\u4fdd\u8bc1$i$\u7684\u6700\u4f4e\u4f4d\u4e3a$1$\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4f18\u5316\u5230\u4e86$O(512*512*512)$\u7684\u590d\u6742\u5ea6\u3002\n\n\u597d\u50cf\u8fd8\u662f\u6709\u4e00\u70b9\u96be\u8fc7\u6389\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u4e00\u5f00\u7684\u7684\u72b6\u6001$1$\u7684\u4e2a\u6570\u4e3a$k$\uff0c\u800c\u8f6c\u79fb\u65f6\u5e76\u4e0d\u4f1a\u6539\u53d8$i$\u7684$1$\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u4e8c\u8fdb\u5236\u4f4d\u4e2d$1$\u7684\u4e2a\u6570\u4e3a$k$\u7684\u72b6\u6001\u5229\u7528\u77e9\u9635\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u90a3\u4e48\u77e9\u9635\u7684\u5927\u5c0f\u4e3a\u591a\u5c11\u5462\uff0c\u4e3a$C(p-1,k)$\uff0c\u6700\u5927\u4e3a$C(9,4)=126$\uff0c\u8fd9\u6837\u7684\u8bdd\u4e00\u6b21\u77e9\u9635\u4e58\u6cd5\u7684\u590d\u6742\u5ea6\u4e3a$O(126*126*126)$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fc7\u6389\u8fd9\u9053\u9898\u4e86\u3002\n\n```cpp\n#include <bits/stdc++.h>\n \nusing namespace std;\n \n#define LL long long\n#define reg register\n#define clr(a,b) memset(a,b,sizeof a)\n#define Mod(x) (x>=mod)&&(x-=mod)\n#define abs(a) ((a)<0?-(a):(a))\n#define debug(x) cerr<<#x<<\"=\"<<x<<endl;\n#define debug2(x,y) cerr<<#x<<\"=\"<<x<<\" \"<<#y<<\"=\"<<y<<endl;\n#define debug3(x,y,z) cerr<<#x<<\"=\"<<x<<\" \"<<#y<<\"=\"<<y<<\" \"<<#z<<\"=\"<<z<<endl;\n#define rep(a,b,c) for(reg int a=(b),a##_end_=(c); a<=a##_end_; ++a)\n#define ret(a,b,c) for(reg int a=(b),a##_end_=(c); a<a##_end_; ++a)\n#define drep(a,b,c) for(reg int a=(b),a##_end_=(c); a>=a##_end_; --a)\n#define erep(i,G,x) for(int i=(G).Head[x]; i; i=(G).Nxt[i])\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\n \ninline int Read(void) {\n    int res = 0, f = 1;\n    char c;\n    while (c = getchar(), c < 48 || c > 57)if (c == '-')f = 0;\n    do res = (res << 3) + (res << 1) + (c ^ 48);\n    while (c = getchar(), c >= 48 && c <= 57);\n    return f ? res : -res;\n}\n \ntemplate<class T>inline bool Min(T &a, T const&b) {return a > b ? a = b, 1 : 0;}\ntemplate<class T>inline bool Max(T &a, T const&b) {return a < b ? a = b, 1 : 0;}\n \nconst int N = 3e2 + 5, M = 1e5 + 5, K = 10, mod = 30031;\n \nbool MOP1;\n \nint n, k, P, cnt, Sz[1 << K], B[130], C[1 << K];\n \nstruct Matrix {\n    int Num[N][N];\n    inline void clear(void) {clr(Num, 0);}\n    inline void Init(void) {rep(i, 1, cnt)Num[i][i] = 1;}\n    inline Matrix operator*(Matrix _)const {\n        Matrix Ans;\n        Ans.clear();\n        rep(i, 1, cnt)rep(j, 1, cnt)rep(k, 1, cnt)Ans.Num[i][j] = (Ans.Num[i][j] + 1ll * Num[i][k] * _.Num[k][j]) % mod;\n        return Ans;\n    }\n} us;\n \ninline Matrix qpow(Matrix A, int k) {\n    Matrix res;\n    res.clear(), res.Init();\n    while (k) {\n        if (k & 1)res = res * A;\n        A = A * A, k >>= 1;\n    }\n    return res;\n}\n \nbool MOP2;\n \nvoid _main(void) {\n    n = Read(), k = Read(), P = Read();\n    ret(i, 1, 1 << P) {\n        Sz[i] = Sz[i ^ (i & -i)] + 1;\n        if (!(i & 1))continue;\n        if (Sz[i] == k)B[++cnt] = i, C[i] = cnt;\n    }\n    Matrix res;\n    res.clear();\n    rep(i, 1, cnt) {\n        int K = B[i];\n        ret(p, 0, P) if (K & 1 << p) {\n            if (k - P > p)continue;\n            int Now = ((K ^ (1 << p)) & ((1 << P - 1) - 1)) << 1 | 1;\n            res.Num[i][C[Now]] = 1;\n        }\n    }\n    Matrix Ans = qpow(res, n - k);\n    printf(\"%lld\\n\", Ans.Num[C[(1 << k) - 1]][C[(1 << k) - 1]]);\n}\n \nsigned main() {\n    _main();\n    return 0;\n}\n```",
        "postTime": 1571317671,
        "uid": 137284,
        "name": "dsjkafdsaf",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3204 \u3010[HNOI2010]\u516c\u4ea4\u7ebf\u8def\u3011"
    },
    {
        "content": "### \u9898\u610f\n>\u6709$n$\u4e2a\u6570,\u6bcf\u4e2a\u6570$\\in[1,k]$\n\u5df2\u77e5$[1,k]$\u4e0e$[n-k+1,n]$\u4e3a$k$\u7684\u6392\u5217\n\u7136\u540e\u6bcf\u4e2a\u957f\u5ea6\u4e3a$P$\u7684\u533a\u95f4\u90fd\u8981\u5305\u542b$k$\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u6c42\u65b9\u6848\u6570\n\n### Solution\n\n\u9996\u5148$k$\u5c0f$p$\u5c0f\u72b6\u6001\u590d\u6742\u8003\u8651\u72b6\u538b$dp$\n\n\u8bb0$f_{i,S}$\u8868\u793a\u7edf\u8ba1\u5230\u524d$i$\u4f4d,$[i,i+P-1]$\u7684\u9009\u53d6\u72b6\u6001\u4e3a$S$\u7684\u65b9\u6848\u6570\n\n\u8003\u8651\u8f6c\u79fb$f_{i,S}=\\sum_{S'}f_{i-1,S'}$\u5176\u4e2d$S'$\u53ef\u4ee5\u8f6c\u79fb\u5230$S$\n\n\u5176\u5b9e\u5c31\u662f$S'<<1$\u4e0e$S$\u6700\u591a\u6709\u4e00\u4f4d\u4e0d\u540c\n\n\u663e\u7136\u7684\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u4e0e$i$\u65e0\u5173\uff0c\u56e0\u6b64\u7528\u77e9\u9635\u6765\u5b9e\u73b0\u8fd9\u4e2a\u8f6c\u79fb\uff0c\u5feb\u901f\u5e42\u4f18\u5316",
        "postTime": 1596254234,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3204 \u3010[HNOI2010]\u516c\u4ea4\u7ebf\u8def\u3011"
    }
]