[
    {
        "content": "#\u7b49\u4f1a\uff1f\uff1f\u6211A\u4e86\uff1f\uff1f\n\n\u8fd9\u9898\u6b63\u89e3\u4e0d\u662f\u7ec4\u5408\u6570\u5b66\u5417\n\n\u6211\u770b\u7740\u673a\u623f\u7684\u5927\u4f6c\u4e00\u4e2a\u4e2a\u90fd\u5728\u60f3\u6b63\u89e3\u771f\u662f\u745f\u745f\u53d1\u6296\n\n\u7136\u540e\u6211\u7528\u4e86\u4e2a\u9012\u63a8\u7ed3\u679c\u8fd8\u8dd1\u5f97\u8d3c\u5feb\n\n\u601d\u8def\u5927\u6982\u662f\u8fd9\u6837\u7684\n\n\u7528a[i][j]\u8868\u793a\u7ec4\u6210\u4e00\u4e2ai\u4f4d\u6570\uff0c\u7b2ci\u4f4d\u9009j\u7684\u6240\u6709\u60c5\u51b5\n\n\u5c31\u7b49\u4e8ea[i-1][j+1~maxx]\u7684\u548c\n\n\u7528ans\u8868\u793a\u6bcf\u4e2aa[i][j]\u7684\u548c\uff0c\u5c31\u662f\u6700\u540e\u7684\u7ed3\u679c\n\n\u7136\u540e\u53ef\u4ee5\u628a\u7b2c\u4e00\u7ef4\u538b\u6389\uff0c\u7528\u524d\u7f00\u548c\u8fdb\u884c\u4f18\u5316\uff0c\u518d\u52a0\u4e0a\u9ad8\u7cbe\u5ea6\n\n\u4ee3\u7801\u91cc\u9762\u6709\u6ce8\u91ca\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define rint register int\n#define ini inline int \nusing namespace std;\nint a[30001][201],c[201],ans[201],k,w;\nini jia(int *a,int *b)\n{\n    int lenc=0,x=0;\n    while (lenc<a[0] || lenc<b[0])\n    {\n        a[++lenc]=a[lenc]+b[lenc]+x;\n        x=a[lenc]/10;\n        a[lenc]%=10;    \n    }\n    if (x>0) a[++lenc]=x;\n    a[0]=lenc;\n}\nint main()\n{\n    scanf(\"%d%d\",&k,&w);\n    int kk=w%k;int hh=w/k;\n    int y=0;\n    for (rint i=1;i<=kk;i++)\n        y+=1<<(i-1);     //\u6700\u9ad8\u4f4d\u6700\u5927\u662f\u51e0\n    int minn=(1<<k)-1;//\u7b2c\u4e00\u4f4d\u6700\u5927\u662f\u591a\u5c11\n    if (hh==1 || (hh==2 && kk==0))\n    {\n        if (kk==0) y=minn;int tot=0;\n        for (rint i=1;i<=y;i++)\n            tot+=minn-i;\n        cout<<tot;\n        return 0;\n    }//\u7279\u5224\u4e24\u4f4d\u4ee5\u5185\u7684\u60c5\u51b5\n    for (rint i=1;i<=minn-1;i++)\n    {\n        a[i][1]=i;a[i][0]=1;\n        jia(ans,a[i]);\n    }//\u7b2c\u4e8c\u4f4d\u662fminn-1\u52301\u5404\u6709\u591a\u5c11\u79cd\u53ef\u80fd\n    for (rint i=3;i<=hh;i++)\n        for (rint j=1;j<=minn-i+1;j++)\n//\u7b2ci\u4f4d\u6700\u5927\u662fminn-i+1\n//\u7b2ci\u4f4d\u662f1\u5230minn-i+1\u5404\u6709\u591a\u5c11\u79cd\u53ef\u80fd\n        {\n            jia(a[j],a[j-1]);\n            jia(ans,a[j]);\n        }\n//\u4ee5\u4e0b\u662f\u5355\u72ec\u5904\u7406\u6700\u9ad8\u4f4d\uff0c\u56e0\u4e3a\u6700\u9ad8\u4f4d\u6709\u9650\u5236\n    for (rint j=1;j<=minn-hh;j++)\n        jia(a[j],a[j-1]);\n    for (rint j=minn-hh;j>=max(minn-hh-y+1,1);j--)\n        jia(ans,a[j]);\n//\u6211\u4eec\u7684\u524d\u7f00\u548c\u662f\u5012\u7740\u5b58\u7684\n    for (rint i=ans[0];i>=1;i--)\n        printf(\"%d\",ans[i]);\n}\n```",
        "postTime": 1510143925,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u53d1\u73b0\u81ea\u5df1\u63a8\u5f97\u7ec4\u5408\u6570\u597d\u50cf\u4e0d\u592a\u4e00\u6837\n\n\u5148\u628a\u8fd9\u4e2a\u590d\u6742\u7684\u67ff\u5b50\u5199\u4e00\u904d\n\n$$\\sum_{i=2}^{\\left \\lfloor\\frac{n}{k}\\right \\rfloor}C_{2^k-1}^{i}+\\sum_{i=1}^{2^{n\\text{ } \\text{mod} \\text{ }k}-1}C_{2^k-1-i}^{\\left \\lfloor\\frac{n}{k}\\right \\rfloor}$$\n\n\u611f\u89c9\u8fd9\u4e2a\u67ff\u5b50\u975e\u5e38\u86c7\u76ae\n\n\u4f46\u662f\u975e\u5e38\u597d\u6c42\u554a\n\n\u7531\u4e8e$2^k-1$\u975e\u5e38\u5c0f\uff0c\u6700\u5927\u4ec5\u4ec5\u662f$511$\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981\u9884\u5904\u7406\u9636\u4e58\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u7ec4\u5408\u6570\u9012\u63a8\u7684\u65b9\u5f0f\u6765\u505a\n\n\u4e8e\u662f\u4e0d\u9700\u8981\u6253\u9ad8\u7cbe\u9664\u6216\u8005\u9ad8\u7cbe\u4e58\u4e86\uff0c\u4e00\u4e2a\u9ad8\u7cbe\u52a0\u5c31\u591f\u4e86\n\n\u4e8e\u662f\u505a\u6cd5\u5c31\u975e\u5e38\u65e0\u8111\u4e86\uff0c\u91cd\u8981\u7684\u662f\u8fd9\u4e2a\u67ff\u5b50\u662f\u600e\u4e48\u63a8\u51fa\u6765\u7684\n\n\u9996\u5148\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u975e\u5e38\u5f31\u5316\u7684\u7248\u672c\uff0c\u5c31\u662f$k|n$\n\n\u5982\u679c$k|n$\u7684\u8bdd\uff0c**\u90a3\u4e48\u8fd9\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u4e8c\u8fdb\u5236\u6570\u5c31\u80fd\u88ab\u6070\u597d\u5206\u6210$n/k$\u4e2a\u5757\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u5757\u80fd\u9009\u62e9\u7684\u6570\u90fd\u662f$0$\u5230$2^k-1$\u8fd9$2^k$\u4e2a\u6570\n**\n\n\u6211\u4eec\u53d1\u73b0$0$\u8fd9\u4e2a\u975e\u5e38\u4e0d\u597d\u8003\u8651\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u5ffd\u7565\u6389$0$\n\n\u6240\u4ee5\u73b0\u5728\u6709$n/k$\u4e2a\u5757\uff0c\u6bcf\u4e2a\u5757\u5185\u80fd\u586b$2^k-1$\u79cd\u6570\n\n**\u90a3\u4e48\u5c31\u6709$C_{2^k-1}^{n/k}$\u79cd\u53ef\u80fd**\n\n\u4e4b\u540e\u6211\u4eec\u518d\u6765\u8003\u8651$0$\u7684\u60c5\u51b5\uff0c\u9996\u5148\u6700\u9ad8\u4f4d\uff08\u5982\u679c\u4e0d\u662f\u7b2c\u4e8c\u4f4d\u7684\u8bdd\uff09\u662f\u53ef\u4ee5\u586b$0$\u7684\uff0c\u800c\u5269\u4e0b\u7684$n/k-1$\u4e2a\u5757\u6211\u4eec\u4ecd\u65e7\u6309\u7167\u4e4b\u524d\u7684\u65b9\u5f0f\u6765\u586b\uff0c\u4e8e\u662f\u5c31\u6709$C_{2^k-1}^{n/k-1}$,\u4e4b\u540e\u5bf9\u4e8e\u6b21\u9ad8\u4f4d\u8fd8\u662f\u53ef\u4ee5\u586b$0$\uff08\u540c\u65f6\u6700\u9ad8\u4f4d\u4e5f\u586b$0$\uff09\uff0c\u90a3\u4e48\u8fd8\u6709$n/k-2$\u4e2a\u5757\uff0c\u4e8e\u662f\u5c31\u662f$C_{2^k-1}^{n/k-2}$\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u7684\u5757\uff0c\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u586b\u5c06\u8fd9\u4e2a\u5757\u4ee5\u53ca\u4e4b\u524d\u6240\u6709\u7684\u5757\u90fd\u586b$0$\uff0c\u90a3\u4e48\u5c31\u8fd8\u6709$2$\u4e2a\u5757\uff0c\u4e8e\u662f\u5c31\u662f$C_{2^k-1}^{2}$\n\n\u800c\u7b2c\u4e8c\u4e2a\u5757\u53ef\u662f\u4e0d\u80fd\u586b$0$\u4e86\uff0c\u4e8e\u662f\u5c31\u6ca1\u4e86\n\n\u6240\u4ee5\u5bf9\u4e8e$k|n$\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5c31\u662f\n\n$$\\sum_{i=2}^{n/k}C_{2^k-1}^{i}$$\n\n\u4e4b\u540e\u6211\u4eec\u518d\u6765\u8003\u8651\u4e00\u4e0b$k$\u4e0d\u6574\u9664$n$\u7684\u60c5\u51b5\n\n\u8fd9\u4e2a\u6837\u5b50\u7684\u8bdd\u4e00\u5171\u4f1a\u5206\u6210$\\left \\lfloor\\frac{n}{k}\\right \\rfloor+1$\u4e2a\u5757\uff0c$\\left \\lfloor\\frac{n}{k}\\right \\rfloor$\u4e2a\u5757\u5185\u53ef\u4ee5\u9009\u62e9\u7684\u6570\u90fd\u662f$0$\u5230$2^k-1$\u8fd9$2^k$\u4e2a\u6570\uff0c\u800c\u6700\u540e\u4e00\u4e2a\u4e0d\u5b8c\u6574\u7684\u5757\u53ea\u6709$n\\text{ } \\text{mod} \\text{ }k$\u4f4d\uff0c\u6240\u4ee5\u80fd\u9009\u62e9\u7684\u6570\u53ea\u6709$0$\u5230$2^{n\\text{ } \\text{mod} \\text{ }k}-1$\n\n\u5982\u679c\u8fd9\u4e2a\u6700\u9ad8\u4f4d\u9009\u62e9\u586b$0$\u90a3\u4e48\u9000\u5316\u6210\u4e86$k|n$\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6700\u9ad8\u4f4d\u586b0\u7684\u65b9\u6848\u6570\u4e3a\n\n$$\\sum_{i=2}^{\\left \\lfloor\\frac{n}{k}\\right \\rfloor}C_{2^k-1}^{i}$$\n\n\u4e4b\u540e\u6700\u9ad8\u4f4d\u8fd8\u6709$1$\u5230$2^{n\\text{ } \\text{mod} \\text{ }k}-1$\u8fd9\u4e9b\u6570\u53ef\u4ee5\u586b\uff0c\u5982\u679c\u6211\u4eec\u9009\u62e9\u586b$i$\u7684\u8bdd\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u5757\u5185\u5c31\u4e0d\u80fd\u586b\u6bd4$i$\u5c0f\u7684\u6570\uff0c\u4e8e\u662f\u5269\u4e0b\u7684\u6bcf\u4e2a\u5757\u5185\u80fd\u9009\u62e9\u7684\u5c31\u6709$2^k-1-i$\u4e2a\u6570\uff0c\u6240\u4ee5\u65b9\u6848\u6570\u5c31\u662f$C_{2^k-1-i}^{\\left \\lfloor\\frac{n}{k}\\right \\rfloor}$\n\n\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u8fd8\u5e94\u8be5\u52a0\u4e0a\n\n$$\\sum_{i=1}^{2^{n\\text{ } \\text{mod} \\text{ }k}-1}C_{2^k-1-i}^{\\left \\lfloor\\frac{n}{k}\\right \\rfloor}$$\n\n\u4ee3\u7801\n\n```cpp\n#include<cstring>\n#include<string>\n#include<cstdio>\n#include<iostream>\n#define re register\n#define maxn 512\nusing namespace std;\nstring c[maxn][maxn];\nint n,k;\nint p,t;\nint res;\nint aa[201],bb[201],cc[201];\ninline string sum(string a,string b)\n{\n    memset(aa,0,sizeof(aa));\n    memset(bb,0,sizeof(bb));\n    memset(cc,0,sizeof(cc));\n    int lena=a.size();\n    int lenb=b.size();\n    for(re int i=0;i<lena;i++)\n        aa[i+1]=a[lena-i-1]-48;\n    for(re int i=0;i<lenb;i++)\n        bb[i+1]=b[lenb-i-1]-48;\n    int p=1;\n    for(p=1;p<=max(lena,lenb)||cc[p];p++)\n    {\n        cc[p]+=aa[p]+bb[p];\n        cc[p+1]+=cc[p]/10;\n        cc[p]%=10;\n    }\n    string C=\"\\0\";\n    for(re int i=p-1;i;i--)\n        C+=char(cc[i]+48);\n    return C;\n}\nint main()\n{\n\tscanf(\"%d%d\",&k,&n);\n\tp=n/k;\n\tres=n%k;\n\tt=(1<<k);\n\tc[0][0]=\"1\";\n\tfor(re int i=1;i<=t-1;i++)\n\t\tc[i][0]=c[i][i]=\"1\";\n\tfor(re int i=1;i<t;i++)\n\tfor(re int j=1;j<i;j++)\n\t\tc[i][j]=sum(c[i-1][j-1],c[i-1][j]);\n\tstring ans=\"0\";\n\tfor(re int i=2;i<=p;i++)\n\t{\n\t\tif(i>t-1) break;\n\t\tans=sum(ans,c[t-1][i]);\n\t}\n\tint pp=(1<<res)-1;\n\tfor(re int i=1;i<=pp;i++)\n\t{\n\t\tif(p>t-1-i) break;\n\t\tans=sum(ans,c[t-1-i][p]);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1535201880,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u57fa\u4e8e\u6392\u5217\u7ec4\u5408\u7684\u65b0\u7b97\u6cd5\uff0c\u53f2\u4e0a\u6700\u5feb\uff08\u7528\u65f60ms\uff09\u3002\n\n\u5148\u8865\u5145\u4e00\u4e2a\u77e5\u8bc6\u70b9\uff1a\u5bf9\u4e00\u4e2an\u4f4d\u76842^k\u8fdb\u5236\u6570\uff0c\u5176\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236\u6570\u540e\u7684\u4f4d\u6570\u4e3ank\uff08\u4e5f\u6709\u53ef\u80fd\u8f83\u5c11\uff0c\u56e0\u4e3a\u6709\u524d\u5bfc0\u7684\u5b58\u5728\uff0c\u524d\u5bfc0\u7684\u4e2a\u6570\u53d6\u51b3\u4e8e\u539f\u6570\u7684\u7b2c\u4e00\u4f4d\uff09\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u8fd9\u4e2a\u8981\u6c42\u7684\u6570\u7684\u4f4d\u6570\u4e0d\u8d85\u8fc7w/k\u5411\u4e0a\u53d6\u6574\u3002\n\n\u800c\u53e6\u4e00\u65b9\u9762\uff0c\u53c8\u6709\u6700\u591a\u53ea\u67092^k-1\u4e2a\u6570\uff0c\u56e0\u6b64\u6700\u591a2^k-1\u4f4d\u3002\n\n\u4e24\u4e2a\u6570\u4e2d\u53d6\u8f83\u5c0f\u7684\u4e00\u4e2a\u5c31\u662f\u4f4d\u7f6e\u4e0a\u9650\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u4ece\u6240\u6709n\u4e2a\u6570\u4e2d\u9009m\u4e2a\u6570\u540e\uff0c\u53ea\u6709\u4e00\u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u5373m\u4f4d\u6570\u7684\u6570\u91cf\u662f$C^m_n=\\frac{n*(n-1)*...*(n-m+1)}{m*(m-1)*...*1}$\n\n\u603b\u6570\u91cf\u662f$\\sum_{i=2}^{min(w/k+(w\\%k==0?0:1),power[k]-1)}{C^i_n}$\n\n\u8fd9\u91cc$n=2^k-1$\n\n\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u53ef\u4ee5\u63a8\u51fa$C^m_n=C^{m-1}_n*\\frac{n-m+1}{m}$\n\n\u6839\u636e\u8fd9\u4e2a\u9012\u5f52\u5f0f\uff0c\u53ef\u4ee5\u5feb\u901f\u7b97\u51fa\u7ed3\u679c\n\n\u4f46\u7531\u4e8e\u524d\u5bfc0\u7684\u5b58\u5728\uff0c\u90e8\u5206\u573a\u5408\u4e0b\u4f1a\u7b97\u5927\uff0c\u5982\u6837\u4f8b\u4e2d234\u4e5f\u4f1a\u88ab\u5305\u542b\u8fdb\u53bb\uff0c\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u628a\u5b83\u51cf\u6389\u3002\n\n\u7531\u4e8e\u539f\u4f4d\u6570\u76f8\u540c\uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u4ec5\u53d6\u51b3\u4e8e\u524d\u5bfc0\u7684\u4e2a\u6570\uff0c\u8fd9\u53c8\u53d6\u51b3\u4e8e\u539f\u6570\u7684\u9996\u4f4d\u3002\n\n\u539f\u6570\u7684\u9996\u4f4d\u540c\u65f6\u53d7\u4f4d\u6570\u548c\u5bf9\u5e94\u524d\u5bfc0\u4e2a\u6570\u7684\u9650\u5236\uff0c\u4f4d\u6570\uff1a2^k-max-1\uff0c\u9996\u4f4d2^(w%k)-1\u3002\n\n\u4f4d\u6570\u4e2d\uff0cmax\u4e3a\u6700\u5927\u4f4d\u6570\uff0c\u9996\u4f4d\u7684\u8868\u8fbe\u5f0f\u7684\u8bc1\u660e\u6d89\u53ca\u8fdb\u5236\u8f6c\u6362\u7b49\u4e00\u7cfb\u5217\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e0d\u505a\u8bc1\u660e\uff0c\u6709\u5174\u8da3\u53ef\u81ea\u5df1\u8bc1\u3002\n\n\u53d7\u6570\u636e\u53d6\u6cd5\u5f71\u54cd\uff0c\u5f53\u4f4d\u6570\u4e3amax\uff0c\u9996\u4f4d\u4e3am\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u57282^k-1-m\u4e2a\u6570\u4e2d\u53d6max-1\u4e2a\uff0c\u663e\u7136\u53ef\u4ee5\u7528C\u6765\u8868\u793a\u3002\n\n\u4eff\u7167\u524d\u9762\uff0c\u6211\u4eec\u5f97\u5230\u6700\u540e\u7b54\u6848$ans=\\sum_{i=2}^{min(w/k+(w\\%k==0?0:1),power[k]-1)}{C^i_n}-\\sum_{i=2}^{min(power[w\\%k]-1,power[k]-most-1)}{C^{max-1}_i}$\n\n\u4e0e\u9012\u5f52\u5f0f$C^m_n=C^m_{n-1}*\\frac{n}{n-m},C^n_n=1$\n\n\u8ba1\u7b97\u65f6\u8981\u53cd\u8fc7\u6765\uff0c\u5373\u9996\u4f4dm\u5148\u53d62^k-max\uff0c\u518d\u9010\u6e10\u964d\u5230\u4e0a\u9650\u3002\n\n\u4ee3\u7801\u4e0d\u91cd\u8981\uff0c\u4f1a\u5199\u9ad8\u7cbe\u5ea6\u603b\u662f\u5199\u5f97\u51fa\u6765\u7684\uff0c\u4e0d\u4f1a\u7684\u4e5f\u770b\u4e0d\u61c2\uff0c\u4e0d\u8fc7\u53d1\u4e0a\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//\u6bd4\u8f83\u4e3b\u8981\u662f\u65b9\u4fbf\u6c42\u548c\ninline bool comp( string a , string b )\n{\n    if( a.size() < b.size() )\n        return 0;\n    if( a.size() > b.size() )\n        return 1;\n    for( int i = a.size() - 1 ; i >= 0 ; i-- )\n    {\n        if( a[i] < b[i] )\n            return 0;\n        if( a[i] > b[i] )\n            return 1;\n    }\n    return 1;\n}\n//\u6c42\u4e24\u4e2a\u6570\u7684\u548c\ninline string sum( string a , string b )\n{\n    if( comp( a , b ) == 0 )\n        swap( a , b );\n    string c = \"\";\n    char x[2] = \"\";\n    bool n = 0;\n    int bpt = b.size() - 1;\n    for( int i = a.size() - 1 ; i >= 0 ; i-- )\n    {    \n        if( b[bpt] < '0' || b[bpt] > '9' )\n            b[bpt] = '0';\n        x[0] = a[i] + b[bpt] - '0';\n        if( n == 1 )\n        {\n            x[0]++;\n            n = 0;\n        }\n        if( x[0] > '9' )\n        {\n            x[0] -= 10;\n            n = 1;\n        }\n        c.insert( 0 , x );\n        bpt--;\n        if( bpt < 0 )\n        {\n            bpt = 0;\n            b[0] = '0';\n        }\n    }\n    if( n == 1 )\n        c.insert( 0 , \"1\" );\n    while( c[0] == '0' )\n        c.erase( 0 , 1 );\n    if( c.size() == 0 )\n        c.insert( 0 , \"0\" );\n    return c;\n}\n//\u6c42\u4e24\u4e2a\u6570\u7684\u5dee\uff08\u4fdd\u8bc1\u7ed3\u679c\u4e3a\u6b63\u6570\uff09\nstring dif( string a , string b )\n{\n     string c = \"\";\n     char x[2] = \"\";\n     bool n = 0;\n     int bpt = b.size() - 1;\n     for( int i = a.size() - 1 ; i >= 0 ; i-- )\n     {    \n          if( b[bpt] < '0' || b[bpt] > '9' )\n                b[bpt] = '0';\n          x[0] = a[i] - b[bpt] + '0';\n          if( n == 1 )\n          {\n                x[0]--;\n                n = 0;\n          }\n          if( x[0] < '0' )\n          {\n                x[0] += 10;\n                n = 1;\n          }\n          c.insert( 0 , x );\n          bpt--;\n          if( bpt < 0 )\n          {\n                bpt = 0;\n                b[0] = '0';\n          }\n     }\n     while( c[0] == '0' )\n          c.erase( 0 , 1 );\n     if( c.size() == 0 )\n          c.insert( 0 , \"0\" );\n     return c;\n}\n//\u6c42\u9ad8\u7cbe\u5ea6\u6570\u4e0e\u6574\u578b\u6570\u7684\u79ef\nstring mul( string a , int b )\n{\n    string c = \"\";\n    char x[2] = \"\";\n    int n = 0 , y;\n    for( int i = a.size() - 1 ; i >= 0 ; i-- )\n    {\n        y = 0;\n        if( n > 0 )\n            y = n;\n        n = ( a[i] - '0' ) * b + y;\n        x[0] = n % 10 + '0';\n        n /= 10;\n        if( x[0] > '9' )\n        {\n            x[0] -= 10;\n            n++;\n        }\n        c.insert( 0 , x );\n    }\n    while( n > 0 )\n    {\n        x[0] = n % 10 + '0';\n        n /= 10;\n        c.insert( 0 , x );\n    }\n    while( c[0] == '0' )\n        c.erase( 0 , 1 );\n    if( c.size() == 0 )\n        c.insert( 0 , \"0\" );\n    return c;\n}\n//\u6c42\u9ad8\u7cbe\u5ea6\u6570\u4e0e\u6574\u578b\u6570\u7684\u5546\nstring div( string a , int b )\n{\n    string c = \"\";\n    char x[2] = \"\";\n    int n = 0 , y;\n    for( int i = 0 ; i < a.size() ; i++ )\n    {\n        n *= 10;\n        n += a[i] - '0';\n        x[0] = n / b + '0';\n        n %= b;\n        c.insert( c.size() , x );\n    }\n    while( n > 0 )\n    {\n        x[0] = n % 10 + '0';\n        n /= 10;\n        c.insert( 0 , x );\n    }\n    while( c[0] == '0' )\n        c.erase( 0 , 1 );\n    if( c.size() == 0 )\n        c.insert( 0 , \"0\" );\n    return c;\n}\n//\u628a\u6574\u578b\u6570\u8f6c\u5316\u6210\u9ad8\u7cbe\u5ea6\u6570\nstring change( int num )\n{\n    if( num == 0 )\n        return \"0\";\n    string a = \"\";\n    char c[2] = \"\";\n    while( num > 0 )\n    {\n        c[0] = num % 10 + '0';\n        num /= 10;\n        a.insert( 0 , c );\n    }\n    return a;\n}\n//\u8986\u76d6\uff08\u5373\u7528\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u8986\u76d6\u53e6\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\uff09\nvoid instead( string &s , string s0 )\n{\n    s.erase( 0 , s.size() );\n    s.insert( 0 , s0 );\n}\n\nstring c[50000];\nconst int power[10] = { 1 , 2 , 4 , 8 , 16 , 32 , 64 , 128 , 256 , 512 };//\u6253\u8868\u8ba1\u7b972^n\n\nint main()\n{\n    int k , w;\n    cin >> k >> w;\n    c[2] = change( ( power[k] - 1 ) * ( power[k] - 2 ) / 2 );\n    string ans = c[2];\n    int most = min( w / k + ( w % k == 0 ? 0 : 1 ) , power[k] - 1 );\n    //most\u5b58\u50a8max\uff08max\u4e0d\u80fd\u5b9a\u4e49\uff09\n    for( int i = 3 ; i <= most ; i++ )\n    {\n        if( ( power[k] - i ) % i == 0 )\n            c[i].insert( 0 , mul( c[i - 1] , ( power[k] - i ) / i ) );\n        else\n            c[i].insert( 0 , div( mul( c[i - 1] , power[k] - i ) , i ) );\n        ans = sum( ans , c[i] );\n    }\n    instead( c[most - 1] , \"1\" );\n    int most2 = min( power[w % k] - 1 , power[k] - most - 1 );\n    if( power[k] - most <= power[w % k] - 1 || most2 <= 0 )\n    {\n        cout << ans;\n        return 0;\n    }\n    //\u7279\u6b8a\u60c5\u51b5\uff0c\u59823 17\uff0c\u6700\u5927234567\uff0c\u4e0a\u96506\u4f4d3\u8d77\uff0c\u8fd9\u65f6\u4f1a\u8bef\u5224\n    ans = dif( ans , \"1\" );//\u9996\u4f4d\u4e3amax-1\u65f6\u8981\u51cf\u6389\n    for( int i = most ; i < power[k] - 1 - most2 ; i++ )\n    {\n        if( i % ( i - most + 1 ) == 0 )\n            instead( c[i] , mul( c[i - 1] , i / ( i - most + 1 ) ) );\n        else\n            instead( c[i] , div( mul( c[i - 1] , i ) , i - most + 1 ) );\n        ans = dif( ans , c[i] );\n    }\n    cout << ans;\n}\n```",
        "postTime": 1511187129,
        "uid": 61068,
        "name": "01190220csl",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u6ca1c++\u7684\u9898\u89e3\uff0c\u679c\u65ad\u6765\u4e00\u53d1\n\n\u5982\u679c\u80fd\u591f\u4ece\u9898\u76ee\u7e41\u7410\u7684\u53d9\u8ff0\u4e2d\u2015\u55c5\u51fa\u8fd9\u662f\u4e00\u9053\u4e0e\u7ec4\u5408\u6570\u6709\u5173\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u79bb\u89e3\u51b3\u95ee\u9898\u5c31\u5df2\u7ecf\u4e0d\u8fdc\u4e86\uff1b\n\n\u5047\u8bbe\u8fd8\u80fd\u591f\u8fdb\u4e00\u6b65\u731c\u60f3\u51fa\u6837\u4f8b\u662fC(7,2)+C(6,2)\uff0c\u90a3\u4e48\u5c31\u5df2\u7ecf\u6210\u529f\u4e00\u5927\u534a\u4e86\u3002\u00a0\n\n\u5206\u6790\u9898\u76ee\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff1a\u4f5c\u4e3a2k\u00a0\u8fdb\u5236\u6570\uff0c\u9664\u6700\u540e\u4e00\u4f4d\u5916\uff0cr\u7684\u6bcf\u4e00\u4f4d\u4e25\u683c\u5c0f\u4e8e\u5b83\u53f3\u8fb9\u76f8\u90bb\u7684\u90a3\u4e00\u4f4d\u3002\n\n\u901a\u8fc7\u5206\u6790\u7406\u89e3\uff0c\u9898\u76ee\u7684\u610f\u601d\u53ef\u8868\u8fbe\u4e3a\uff1a\u5c06\u957f\u5ea6\u4e3aw\u7684\u4e8c\u8fdb\u5236\u4e32k\u4f4d\u4e00\u8282\u5212\u5206\u4e3aw/k\u4efd(w/k\u8981\u53d6\u4e0a\u6574\uff0c\u59827/3=2.3\uff0c\u5e94\u4e3a3\u4efd)\uff0c\u5219\u5bf9\u5e94\u76842k\u00a0\u8fdb\u5236\u6570\u6700\u591a\u662fint[w/k]+1\u4f4d\u6570\uff0c\u8fd9\u4e2a\u4f4d\u6570\u7528len\u8868\u793a\uff0c\u52a0\u4e0a\u9898\u76ee\u89c4\u5b9a\uff1a\u6700\u5c11\u4e3a2\u4f4d\u6570\uff0c\u4ece\u5de6\u5230\u53f3\u6bcf\u4e00\u4e2a\u6570\u90fd\u5347\u5e8f\u7684\u6761\u4ef6\uff0c\u8fd9\u6837\u76842k\u00a0\u8fdb\u5236\u6570\u5171\u591a\u5c11\u4e2a\u5462\uff1f\n\n\u5b83\u7b49\u4e8e\u4e24\u7c7b\u7ec4\u5408\u6570\u4e4b\u548c\uff1a\u00a0\n\n\u7b2c\u4e00\u7c7b\uff1a\u4f4d\u6570\u4e3a2\u2014len-1\u76842k\u00a0\u8fdb\u5236\u6570\u79cd\u6570\uff1b\u00a0 \u5b83\u7b49\u4e8e\u4ece2k\u00a0-1\u4e2a\u6570\u4e2d\u5206\u522b\u4e0d\u91cd\u590d\u5730\u53d62\u4e2a\u30013\u4e2a\u3001\u2026\u2026.len-1\u4e2a\u6570\u7684\u4e0d\u540c\u7ec4\u5408\u6570\u4e4b\u548c\uff0c\u5373c(2k-1,2)+\u00a0c(2k-1,3)+\u2026\u2026+\u00a0c(2k\u00a0-1,len-1)\uff0c\u6216\u2211c(2k\u00a0-1,i)\uff0c(2<\u00a0=i<=len-1)\uff1b\u00a0\n\n\u7b2c\u4e8c\u7c7b\uff1a\u4f4d\u6570\u5df2\u7ecf\u8fbe\u5230len\u76842k\u00a0\u8fdb\u5236\u6570\u79cd\u6570\uff1b\u00a0 \u8fd9\u7c7b\u6570\u7684\u9996\u4f4d\u53ef\u80fd\u591f\u662f1\uff0c2\uff0c\u2026\u20262k-i-1\uff0c\u4ece\u7b2c2\u4f4d\u5f00\u59cb\u53d6\u6570\u65f6\u6bcf\u6b21\u90fd\u8981\u6263\u9664\u5c0f\u4e8e\u5de6\u8fb9\u76f8\u90bb\u6570\u7684\u8fd9\u4e9b\u6570\uff0c\u56e0\u6b64\u53ef\u4f9b\u9009\u62e9\u7684\u6570\u8d8a\u6765\u8d8a\u5c11\uff0c\u7d2f\u52a0\u8d77\u6765\u662f\u2211c(2k\u00a0\u2013(i+1),len)\uff0c(1<=i<=2k\u00a0)\u3002\n\n\n\u4e0a\u4ee3\u7801\n\n\uff08\u51cf\u5c11\u4ee3\u7801\u590d\u5236\uff0c\u5171\u521b\u7f8e\u597d\u6d1b\u8c37\uff09\n\n```cpp\n#include<iostream> \n#include<cstdio> \n#include<cstring> \nusing namespace std; \nconst int Maxn=205; \nint K,W,N,M,P;  \nint Sum[Maxn]={0},b[Maxn],c[Maxn]; \nvoid Print(int p[]) \n{  \n    int i;  \n    printf(\"%d\",p[p[0]]);  \n    for(i=p[0]-1;i>0;i--)  \n        {   \n            printf(\"%d\",p[i]/1000);   \n            printf(\"%d\",p[i]/100%10);   \n            printf(\"%d\",p[i]/10%10);   \n            printf(\"%d\",p[i]%10);  \n        }  \n        printf(\"\\n\"); \n}  \nvoid CalC(int n,int m) \n{  \n    int i,j,k,x;  \n    if(m>n) return;  \n    memset(c,0,sizeof(c));  \n    c[0]=c[1]=1;  \n    for(k=1;k<=m;k++)  \n    {   \n        x=n-k+1;   \n        for(i=1;i<=c[0];i++)c[i]=c[i]*x;   \n        for(i=1;i<=c[0];i++){c[i+1]+=c[i]/10000;c[i]%=10000;}   \n        if(c[c[0]+1]>0)c[0]++;   \n        x=k; j=0;   \n        for(i=c[0];i>0;i--)   \n        {    \n            j=j*10000+c[i];    \n            c[i]=j/x;    \n            j%=x;   \n        }   \n        while(c[c[0]]==0)c[0]--;  \n    }  \n    memcpy(b,Sum,sizeof(Sum));  \n    Sum[0]=max(b[0],c[0]);  \n    for(i=1;i<=Sum[0];i++)\n        Sum[i]=b[i]+c[i]; \n    for(i=1;i<=Sum[0];i++)\n    {\n        Sum[i+1]+=Sum[i]/10000;\n        Sum[i]%=10000;\n    }  \n    if(Sum[Sum[0]+1]>0)\n    Sum[0]++; \n}  \nmain() \n{  \n    int i;  \n    scanf(\"%d%d\",&K,&W);  \n    N=(1<<K)-1; \n    M=W/K; \n    P=W%K; \n    P=(1<<P)-1;  \n    for(i=2;i<=M;i++)\n        CalC(N,i);  \n    for(i=1;i<=P;i++)\n        CalC(N-i,M);  \n    Print(Sum);  \n    return 0; \n}\n```",
        "postTime": 1463489624,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u6570\u5b66\u7684\u9898\uff08\u697c\u4e0b\u4e5f\u6709\u7528\u6a21\u62df\u9012\u63a8\u8dd1\u7684\uff09\uff0c\u4ece\u9898\u76ee\u610f\u601d\u6765\u770b\uff0c\u5c31\u662f\u8981\u6c42\u6709\u591a\u5c11\u4e2a\u957f\u4e3a$w$\u7684\u4e8c\u8fdb\u5236\uff08$01$\uff09\u4e32\u6ee1\u8db3\u5728\u88ab\u8f6c\u4e3a$2^k$\u8fdb\u5236\u4e4b\u540e\uff0c\u6ee1\u8db3\u5de6\u8fb9\u7684\u6570\u4e25\u683c\u5c0f\u4e8e\u53f3\u8fb9\u3002\n\n\u5982\u4e0b\u8868\u662f\u4e00\u79cd$k=3,w=7$\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\n\n| \u4e8c\u8fdb\u5236 | 1 | 100 | 101 |\n| -----------: | -----------: | -----------: | -----------: |\n| **$2^3$\u8fdb\u5236** | **1** | **4** | **5** |\n| \u4e8c\u8fdb\u5236\u4f4d\u6570 |7|6~4|3~1|\n|\u516b\u8fdb\u5236\u4f4d\u6570|3|2|1|\n||\u6700\u9ad8\u4f4d||\u6700\u4f4e\u4f4d|\n\n\n\u9898\u76ee\u8868\u8fbe\u7684\u6761\u4ef6\u6709\n\n1. \u8f6c\u6362\u4e4b\u540e\u7684\u6570\u81f3\u5c11\u6709$2$\u4f4d\uff0c\u5219$r_{(10)}\u22652^k$\u3002\n1. \u4e8c\u8fdb\u5236\u4e32\u957f\u5ea6\u4e3a$w$\uff0c\u4f46\u4e0d\u4ee3\u8868\u7b2c$w$\u4f4d\u4e0a\u4e00\u5b9a\u662f$1$\uff0c\u56e0\u6b64\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e32\u53ef\u4ee5\u662f$2-w$\u7684\u4efb\u610f\u957f\u5ea6\uff0c\u6240\u4ee5\u6839\u636e\u957f\u5ea6\u6765\u679a\u4e3e\u3002\n1. \u5982\u679c$w\u2224(2^k)$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u7684\u6700\u9ad8\u4f4d\u4e0d\u80fd\u53d6\u904d$[1,2^k-1]$(\u4e0d\u80fd\u91cd\u590d\u7b97\u53d6$0$\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u53d6$0$\u76f8\u5f53\u4e8e\u6ca1\u6709\u6700\u9ad8\u4f4d\uff0c\u65e0\u610f\u4e49)\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5f53$k=3,w>8$\u65f6\u8fd9\u79cd\u60c5\u51b5\u4ece\u4f4e\u4f4d\u5411\u9ad8\u4f4d\u5904\u7406\u7684\u8fc7\u7a0b\u3002\n\n| |\u2026 | \u7b2c3\u4f4d | \u7b2c2\u4f4d | \u7b2c1\u4f4d |\n| ----------- | ----------- | ----------- | ----------- |\n| \u53ef\u4ee5\u53d6\u5230\u7684\u6570\u7684\u4e2a\u6570 |\u2026| $C^3_7$* | $C^2_7$ | $N/A$ |\n| \u8bf4\u660e |\u2026|\u53d63\u4e2a\u5206\u522b\u53601,2,3\u4f4d** | \u516b\u8fdb\u5236\u67097\u4e2a\u6570,\u53d6\u4e24\u4e2a\u5206\u522b\u53601,2\u4f4d*** | \u4e0d\u80fd\u53d61\u4f4d |\n| \u603b\u5171\u53d6\u5230\u7684\u6570\u7684\u4e2a\u6570 |\u2026| $C^3_7+C^2_7$ | $C^2_7$ |$N/A$  |\n\n\u6ce8\u91ca\uff1a\n\n*\u6bcf\u4e2a\u7ec4\u5408\u91cc\u4e00\u4e2a\u6570\u53ea\u53ef\u80fd\u51fa\u73b0\u4e00\u6b21\uff0c\u4fdd\u8bc1\u4e86\u4e25\u683c\u5355\u589e\u7684\u6761\u4ef6\n\n**\u6bcf\u4e2a\u7ec4\u5408\u53ea\u7b97\u4e86\u4e00\u6b21\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ec4\u5408\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u987a\u5e8f\u4f7f\u5176\u5355\u589e\n\n***\u56e0\u4e3a\u5355\u589e\uff0c\u53ea\u80fd\u53d6[1,7]\uff0c\u6ce8\u610f\u4e0d\u80fd\u53d60\uff0c\u4e5f\u4e0d\u80fd\u53d68\uff0c\u56e0\u4e3a8\u8981\u8fdb\u4f4d\n\n\u90a3\u4e48\u5982\u679c$w\\leq8$\u5462\n\n\u6211\u4eec\u56de\u5230\u4e00\u5f00\u59cb\u4e3e\u7684\u4f8b\u5b50\n$k=3,w=7$\n\n| \u5305\u542b\u4f4d\u6570| 1 | 3 | 3 |\n| -----------: | -----------: | -----------: | -----------: |\n| \u53d6\u503c\u8303\u56f4 | {$1$} | $[1,2^3-1]$ | $[1,2^3-1]$ |\n\n\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u6700\u9ad8\u4f4d\u53ea\u80fd\u53d61\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6570\u4f9d\u7167\u4e25\u683c\u5355\u589e\u53ea\u80fd\u53d6$[2,2^3-1]$\n\n\u6240\u4ee5\u80fd\u53d6\u5230\u7684\u6570\u6709$6$\u4e2a\uff0c{$2,3,4,5,6,7$}\n\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a$C^2_6$ \n\n\u5176\u4e2d$2=\\lceil \\frac {(w-1)}k\\rceil+1$\n\n$6=2^k-1-1$\n\n\u540c\u65f6\u56e0\u4e3a~~\u9ad8\u7cbe\u9664\u6cd5\u592a\u70e6\u4eba\u4e86~~\u65f6\u95f4\u6548\u7387\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u628a\u7528\u5230\u7684$C_i^j$\u5229\u7528\u6768\u8f89\u4e09\u89d2\u5b58\u4e00\u4e0b\uff0c\u5e76\u4e14$imax=2^k$\u8fd9\u6837\u9ad8\u7cbe\u5c31\u53ea\u7528\u5199\u52a0\u6cd5\u4e86\u3002\n\n\u4e0a\u9762\u63d0\u5230$imax=2^k$\uff0c\u4f46\u5b9e\u9645\u4e0a\u6570\u7ec4\u5c42\u6570\u5f00\u7684\u4e0d\u662f$2^9$\uff08$kmax=9$\uff09\uff0c\u800c\u662f$2^10$\uff0c\u56e0\u4e3a\u6768\u8f89\u4e09\u89d2\u4f1a\u591a\u90a3\u4e48\u4e00\u5c42\u3002\u4f46\u6839\u636e\u8fd9\u4e2a\u9898\u7684\u6d4b\u8bd5\u70b9\uff0c\u5f00$600$\u5373\u53efAC\n\n\u6b63\u5e38\u7684\u6768\u8f89\u4e09\u89d2\u8981\u6ce8\u610f\uff0c\u5f53\u4f7f\u7528$C_i^j$\u65f6\uff0c\u8981\u8c03\u7528$a[i+1][j+1]$\uff0c\u4e5f\u53ef\u4ee5\u63d0\u524d\u4ece$[0][0]$\u5904\u7406\u4e00\u4e0b\n\n## Code:\n```cpp\n#include<cstring>\n#include<cstdio>\nint max(int x,int y){return x>y?x:y;}\nstruct lll//\u9ad8\u7cbe\u8981\u538b\u4f4d\uff0c\u4e0d\u7136\u62d6\u4f4e\u65f6\u95f4\u6548\u7387\uff0c\u8fd9\u4e2a\u9898\u8ba1\u7b97\u91cf\u4e5f\u5f88\u5927\n{\n    int num[52];\n    lll(int x)\n    {\n        memset(num,0,sizeof(num));\n        if(x==0)\n            return;\n        int k=0;\n        while(x)\n        {\n            k++;\n            num[k]=x%10000;\n            x/=10000;\n        }\n        num[0]=k;\n    }\n    lll()\n    {\n        memset(num,0,sizeof(num));\n    }\n    friend lll operator +(lll a,lll b)\n    {\n        a.num[0]=max(a.num[0],b.num[0])+1;\n        for(int i=1;i<=a.num[0];i++)\n        {\n            a.num[i]+=b.num[i];\n            if(a.num[i]>=10000)\n            {\n                a.num[i+1]++;\n                a.num[i]-=10000;\n            }\n        }\n        while(a.num[0]>0&&a.num[a.num[0]]==0)\n            a.num[0]--;\n        return a;\n    }\n};\nlll a[620][620];\nvoid print(lll x)\n{\n    for(int i=x.num[0];i>0;i--)\n    {\n        if(i!=x.num[0])\n        {\n            if(x.num[i]<1000)\n                printf(\"0\");\n            if(x.num[i]<100)\n                printf(\"0\");\n            if(x.num[i]<10)\n                printf(\"0\");\n        }\n        printf(\"%d\",x.num[i]);\n    }\n    printf(\"\\n\");\n}\nint main()\n{\n    int k,w;\n    scanf(\"%d%d\",&k,&w);\n    int t=(w-1)/k+1;//t\u662f\u8f6c\u5316\u4e3a2^k\u8fdb\u5236\u6570\u540e\u7684\u4f4d\u6570\uff08\u5305\u62ec\u4e0d\u786e\u5b9a\u7684\u4e00\u4f4d\uff09\n    lll one(1);\n    for(int i=1;i<=(1<<k)+1;i++)//\u4e3a\u4e86\u6768\u8f89\u4e09\u89d2\u7684\u8c03\u7528\uff0c\u9700\u8981\u591a\u505a\u4e00\u5c42\n    {\n        a[i][1]=one;\n        a[i][i]=one;\n        for(int j=2;j<i;j++)\n            a[i][j]=a[i-1][j-1]+a[i-1][j];\n    }\n    /*for(int i=1;i<=(1<<k)+1;i++)\n    {\n        for(int j=1;j<=i;j++)\n        {\n            print(a[i][j]);\n            printf(\" \");\n        }\n        printf(\"\\n\");\n    }*///\u8fd9\u91cc\u662f\u6253\u5370\u6768\u8f89\u4e09\u89d2\uff0c\u68c0\u9a8c\u662f\u5426\u6b63\u786e\n    lll sum(0);\n    for(int i=2;i<t;i++)\n        sum=sum+a[(1<<k)-1 +1][i +1];//+1\u662f\u6768\u8f89\u4e09\u89d2\u6027\u8d28\u7684\u8981\u6c42\n        //\u662f(1<<k)-1\u4e2a\u91cc\u90092\u4e2a\u800c\u4e0d\u662f8\u4e2a\u91cc\u9009\uff0c\u8981\u683c\u5916\u6ce8\u610f\n    w=(w-1)%k+1;\n    for(int i=1;i<(1<<w);i++)\n        sum=sum+a[(1<<k)-i-1 +1][t-1 +1];//\n    print(sum);\n    return 0;\n}\n\n```",
        "postTime": 1524827656,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011\u7ec4\u5408+\u8fdb\u5236+\u9ad8\u7cbe\u538b\u4f4d"
    },
    {
        "content": "\u4eba\u751f\u82e6\u77ed\uff0c\u6211\u7528Python\u3002\n\n\u53d1\u4e00\u4e2aPython\u9898\u89e3\u3002\n\n```python\nIn = input().split()\nk = int(In[0])\nw = int(In[1])\nli = int((w - 1) / k) + 1 # \u8ba1\u7b97\u603b\u4f4d\u6570\nf = [[0 for i in range((1 << k) + 5)] for i in range(li + 5)]\n# \u521d\u59cb\u5316DP\u6570\u7ec4\nfor j in range(0, 1 << k):\n    f[0][j] = (1 << k) - j\nfor i in range(1, li): # DP\n    for _j in range(0, 1 << k):\n        j = (1 << k) - _j - 1\n        f[i][j] = f[i][j+1] + f[i-1][j+1]\nans = 0\nfor i in range(1, li):\n    ans += f[i][1]\nrest = w - k * (li - 1)\nans -= f[li - 1][1 << rest]\nprint (ans)\n```",
        "postTime": 1522985960,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u9012\u63a8+\u9ad8\u7cbe\u5ea6\n\nf[i][j]\u8868\u793a\u5171i\u4f4d\u4e14\u6700\u9ad8\u4f4d\u662fj\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136\u6709\u53ea\u8981\u4e0a\u4e00\u4f4d\u6bd4\u5b83\u5927\u5c31\u53ef\u4ee5\u8f6c\u79fb\uff0c\u6240\u4ee5\u6709f[i][j]=f[i-1][j+1]+...+f[i-1][2^k-i+1]\n\n\u4e5f\u5c31\u662f**f[i][j]=f[i][j+1]+f[i-1][j]**\n\n\u6700\u540e\u7279\u5224\u4e00\u4e0b\u6700\u540e\u4e00\u6bb5\u5269\u4e0b\u7684w<=k\u7684\u5c31\u53ef\u4ee5\u3002\n\n\u4e0a\u9ad8\u7cbe\uff0c\u4e60\u60ef\u6027\u538b\u4f4d\u4e86-\\_-||\n\u00b7\u00b7\u00b7cpp\n\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int M=100000000;\nint k,w,bs,ct;\nstruct BNUM\n{\n    int w[55];\n    int len;\n    BNUM(){memset(w,0,sizeof w);len=0;}\n    void set(int q)\n    {\n        w[0]=q;\n        len=1;\n    }\n    void print()\n    {\n        printf(\"%d\",w[len-1]);\n        for(int i=len-2;i>=0;i--)printf(\"%08d\",w[i]);\n    }\n}f[513][513],ans;\nBNUM operator +(const BNUM &a,const BNUM &b)\n{\n    BNUM ans;\n    int la=max(a.len,b.len);\n    for(int i=0;i<la;i++)ans.w[i]=a.w[i]+b.w[i];\n    ans.len=la;\n    for(int i=0;i<ans.len;i++)\n    {\n        ans.w[i+1]+=ans.w[i]/M;\n        ans.w[i]%=M;\n        if(ans.w[ans.len]>0)ans.len++;\n    }\n    return ans;\n} \nint main()\n{\n    scanf(\"%d%d\",&k,&w);\n    if(k==1)\n    { \n        printf(\"0\");    \n        return 0;    \n    }\n    bs=1<<k;\n    ct=1;\n    for(int i=0;i<bs;i++)f[1][i].set(1);\n    for(int i=bs-ct;i>=0;i--)f[ct][i]=f[ct][i]+f[ct][i+1];\n    ct++;w-=k;\n    for(int i=0;i<=bs-ct;i++)f[ct][i]=f[ct-1][i+1];\n    while(w>k&&bs>ct)\n    {\n        for(int i=bs-ct-1;i>=0;i--)f[ct][i]=f[ct][i]+f[ct][i+1];\n        ans=ans+f[ct][1];\n        ct++;w-=k;\n        for(int i=0;i<=bs-ct;i++)f[ct][i]=f[ct-1][i+1];\n    }\n    if(bs>ct)\n    {\n        int la=min(bs-ct,(1<<w)-1);\n        for(int i=la-1;i>=0;i--)f[ct][i]=f[ct][i]+f[ct][i+1];\n        ans=ans+f[ct][1];\n    }\n    ans.print();\n}\n```\n\u00b7\u00b7\u00b7\n\u7ec4\u5408\u6570\u771f\u96be\uff0c\u6211\u90fd\u4e0d\u4f1a\u3002\n",
        "postTime": 1503937388,
        "uid": 3506,
        "name": "MSF_Akatsuki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e00\u4e2a$n$\u4f4d\u7684$2^k$\u8fdb\u5236\u6570\uff0c\u8f6c\u6210\u4e8c\u8fdb\u5236\u4e4b\u540e\u7684\u4f4d\u6570\u4e3a$nk$\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684$r$\u7684\u4f4d\u6570\u4e0d\u80fd\u8d85\u8fc7$\\lceil \\frac{w}{k} \\rceil$\u3002\n\n\u56e0\u4e3a\u8f6c\u6210\u4e8c\u8fdb\u5236\u540e\u6709\u4f4d\u6570$w$\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6700\u9ad8\u4f4d\u53ef\u80fd\u5e76\u4e0d\u662f\u957f\u5ea6\u4e3a$k$\u7684\u5b8c\u6574\u7684\u4e00\u6bb5\uff0c\u9700\u8981\u7279\u6b8a\u8003\u8651\u3002\n\n\u9996\u5148\u8003\u8651\u6700\u9ad8\u4f4d\u586b$0$\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u6bcf\u4e00\u4f4d\u90fd\u6709$2^k-1$\u79cd\u6570\u53ef\u4ee5\u9009\u62e9\uff0c\u6709\u7531\u9898\u610f\u53ef\u77e5\uff0c\u9009\u51fa\u7684\u6570\u7684\u6392\u5217\u65b9\u5f0f\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\n\n$$\\sum \\limits_{i=2}^{\\lfloor \\frac{w}{k} \\rfloor} \\binom{2^k-1}{i}$$\n\n\u518d\u6765\u8003\u8651\u6700\u9ad8\u4f4d\u4e0d\u4e3a0\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u4f4d\u6570$w$\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6700\u9ad8\u4f4d\u7684\u4f4d\u6570\u6700\u591a\u4e3a$n \\mod k$\uff0c\u6545\u9664\u4e860\u4ee5\u5916\uff0c\u6700\u9ad8\u4f4d\u6700\u591a\u53ef\u4ee5\u586b\u7684\u6570\u6709$2^{w \\mod k}-1$\u79cd\uff0c\u53c8\u7531\u9898\u610f\u53ef\u77e5\uff0c\u540e\u9762\u7684\u6570\u90fd\u53ea\u80fd\u586b\u5927\u4e8e\u524d\u4e00\u4f4d\u7684\u6570\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u5927\u4e8e\u6700\u9ad8\u4f4d\u7684\u6570\u91cc\u9762\u9009\uff0c\u6545\u8fd9\u4e00\u90e8\u5206\u7684\u8d21\u732e\u4e3a\n\n$$\\sum \\limits_{i=1}^{2^{w \\mod k}-1} \\binom{2^k-i-1}{\\lfloor \\frac{w}{k} \\rfloor}$$\n\n\u4e24\u90e8\u5206\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848\uff0c\u6240\u4ee5\n\n$$ans = \\sum \\limits_{i=2}^{\\lfloor \\frac{w}{k} \\rfloor} \\binom{2^k-1}{i} + \\sum \\limits_{i=1}^{2^{w \\mod k}-1} \\binom{2^k-i-1}{\\lfloor \\frac{w}{k} \\rfloor}$$\n\n\u7ec4\u5408\u6570\u76f4\u63a5\u9012\u63a8\u4e00\u4e0b\uff0c\u518d\u52a0\u4e2a\u9ad8\u7cbe\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002",
        "postTime": 1573699489,
        "uid": 49777,
        "name": "kkkstra",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "# \u9898\u610f  \n\u6c42\u51fa\u6ee1\u8db3\u662f$2^k$\u8fdb\u5236\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6761\u4ef6\u5982\u4e0b\uff1a\n\n1.\u8be5\u6570\u4f4d\u6570>=2  \n\n2.\u8be5\u6570\u6bcf\u4e00\u4f4d\u7684\u6570\u90fd\u4e25\u683c\u6bd4\u53f3\u8fb9\u6570\u4f4d\u7684\u6570\u5c0f    \n\n3.\u5c06\u8be5\u6570\u8f6c\u5316\u4e3a2\u8fdb\u5236\u540e\uff0c\u603b\u4f4d\u6570\u4e0d\u80fd\u8d85\u8fc7w  \n\n# \u89e3\u9898\u601d\u8def \n\n\u7ecf\u8fc7\u624b\u52a8\u5b9e\u9a8c\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u6570\u7531$2^k$\u8fdb\u5236\u8f6c\u6362\u4e3a2\u8fdb\u5236\u65f6\uff0c\u4f4d\u6570\u7531\u539f\u6765\u7684w\u53d8\u6210\u4e86w/k\uff0c\u6240\u4ee5\u56e0\u4e3a\u8f6c\u6362\u540e\u4f4d\u6570\u6700\u591a\u4e3aw\uff0c\u8f6c\u6362\u524d\u4f4d\u6570\u6700\u591a\u4e3aw/k\u3002  \n\n\u5f53\u4e14\u4ec5\u5f53w%k==0\u7684\u65f6\u5019\uff0c\u539f\u6765w\u4f4d\u53ef\u4ee5\u5b8c\u5168\u8f6c\u6362\u4e3aw/k\u4f4d\u3002  \n\u4e0d\u6574\u9664\u7684\u65f6\u5019\u4f1a\u6709\u4e00\u4e9b\u5269\u4f59\u3002\uff08~~\u6b64\u5904\u610f\u4f1a~~\uff09 \n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e24\u79cd\u60c5\u51b5\u5206\u7c7b\u8ba8\u8bba  \n\n\u5f53k\u6574\u9664w\u7684\u65f6\u5019\uff0c\u663e\u7136\u7b54\u6848\u5c31\u662f\u6240\u6709\u53ef\u80fd\u7684\u6570\u91cc\u9009\u4f4d\u6570\u4e2a\uff08\u56e0\u4e3a\u8981\u6c42\u4e25\u683c\u9012\u589e\u6240\u4ee5\u662f\u7ec4\u5408\u6570\uff09$2^k$\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d\u6709$0-2^{k-1}$\u4e00\u5171$2^k$\u4e2a\u6570\uff0c\u4f46\u662f\u6211\u4eec\u8003\u8651\u4e25\u683c\u9012\u589e\uff0c\u90a3\u4e48\u5982\u679c\u653e0,0\u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u4f4d\u3002\u4f46\u662f0\u653e\u5728\u7b2c\u4e00\u4f4d\u4f1a\u5bfc\u81f4\u4e0e\u4e4b\u524d\u7684\u7b54\u6848\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c060\u5ffd\u7565\u5373\u53ef\u3002  \n\n\u4e8e\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u5c31\u662f$\\sum_{i=2}^{w/k}C_{2^k-1}^{i}$  \n\n\u5f53i>$2^k-1$\u7684\u65f6\u5019\u76f4\u63a5\u8fd4\u56de\u5373\u53ef  \n\n\u518d\u8003\u8651\u4e0d\u6574\u9664\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5728\u628a$2^k$\u8fdb\u5236\u7684\u6570\u8f6c\u5316\u4e3a$2$\u8fdb\u5236\u7684\u65f6\u5019\u5176\u5b9e\u662f\u628a\u6bcf\u4e00\u4f4d\u6570\u90fd\u62c6\u5f00\u62c6\u6210k\u4f4d\u6570\u5b57\uff0c\u9664\u4e86\u6700\u9ad8\u4f4d\u4ee5\u5916\u7684\u6570\u5176\u4ed6\u4f4d\u4e0a\u6709\u6ca1\u67090\u662f\u65e0\u6240\u8c13\u7684\uff0c\u6574\u9664\u7684\u65f6\u5019\u4e5f\u662f\u65e0\u6240\u8c13\u7684\u3002  \n\n\u4f46\u662f\u5f53\u4e0d\u6574\u9664\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u9664\u4e86\u6700\u9ad8\u4f4d\u4ee5\u5916\u7684\u90fd\u586b\u6ee1\uff0c\u4f1a\u53d1\u73b0\u6700\u540ek\u4f4d\u8fd8\u6709w%k\u4f4d\u53ef\u4ee5\u586b\u6570\u5b57\uff0c\u4f46\u662f\u8be5\u6570\u7684\u4e8c\u8fdb\u5236\u6570\u4e0d\u80fd\u8d85\u8fc7w%k\u4f4d  \n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e0d\u6574\u9664\u7684\u8fd9\u4e00\u4f4d\u5355\u72ec\u5904\u7406\n\n\u7ecf\u8fc7\u7b80\u5355\u601d\u8003\uff0c\u6700\u9ad8\u4f4d\u53ef\u80fd\u653e\u7684\u6570\u5b57\u5c31\u662f$1---2^{w \\mod k}-1$  \n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u6700\u9ad8\u4f4d\u7684\u6570\uff0c\u5269\u4e0b\u7684\u7528\u7ec4\u5408\u6570\u8ba1\u7b97\uff0c\u6ce8\u610f\u5269\u4e0b\u7684\u6570\u8981\u5927\u4e8e\u6700\u9ad8\u4f4d\u7684\u6570  \n\n\u8fd9\u65f6\u7b54\u6848\u5c31\u662f$\\sum_{i=1}^{2^{w \\mod k}-1}C_{2^k-1-i}^{w/k}$  \n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5f53\u4e0d\u6574\u9664\u7684\u65f6\u5019\uff0c\u7b54\u6848\u5c31\u662f\u4e24\u8005\u4e4b\u548c\uff0c\u5373  \n\n$\\sum_{i=2}^{w/k}C_{2^k-1}^{i}+\\sum_{i=1}^{2^{w \\mod k}-1}C_{2^k-1-i}^{w/k}$  \n\n\u5f53\u6574\u9664\u65f6\uff0c\u7b54\u6848\u5c31\u662f\u4e00\u5f00\u59cb\u6211\u4eec\u5904\u7406\u7684\uff0c\u5373  \n\n$\\sum_{i=2}^{w/k}C_{2^k-1}^{i}$  \n# CODE\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint answer[500];\nint a[500],b[500];\nint k,w,n,m,c;\nint gcd(int a,int b)\n{\n    return !b?a:gcd(b,a%b);\n}\nvoid work(int n,int m)\n{\n    if(n<m)return;\n    for(int i=m;i>=1;i--){a[i]=n-m+i;b[i]=i;}\n    for(int i=1;i<=m;i++)\n    {\n        if(b[i]==1)continue;\n        for(int j=m;j>=1;j--)\n        {\n            int GCD=gcd(a[j],b[i]);\n            a[j]/=GCD,b[i]/=GCD;\n            if(b[i]==1)break;\n        }\n    }\n    memset(b,0,sizeof(b));\n    b[0]=b[1]=1;\n    for(int i=1;i<=m;i++)\n    {\n        if(a[i]==1)continue;\n        int g=0;\n        for(int j=1;j<=b[0];j++)\n        {\n            b[j]=a[i]*b[j]+g;\n            g=b[j]/10;\n            b[j]%=10;\n            if(j==b[0] && g)b[0]++;\n        }\n    }\n    answer[0]=max(answer[0],b[0]);\n    for(int i=1;i<=answer[0];i++)\n    {\n        answer[i]=b[i]+answer[i];\n        answer[i+1]+=answer[i]/10;\n        answer[i]%=10;\n    }\n    if(answer[answer[0]+1])answer[0]++;\n}\nint main()\n{\n    scanf(\"%d%d\",&k,&w);\n    n=(1<<k)-1;m=w/k;c=w%k;\n    for(int i=m;i>=2;i--)work(n,i);\n    c=(1<<c)-1;\n    if(c>=1 && n>m)\n        for(int i=1;i<=c;i++)work(n-i,m);\n    for(int i=answer[0];i>=1;i--)printf(\"%d\",answer[i]);\n    return 0;\n}\n```\n\n\n\n------------\n\u8fd9\u7247\u9898\u89e3\u5199\u4e86\u6211\u534a\u4e2a\u5c0f\u65f6(((",
        "postTime": 1565960862,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u5927\u529b\u731c\u7ed3\u8bba\u7adf\u7136\u731c\u5bf9\u4e86\u3002\u3002  \n\n\u5bf9\u4e8e\u4e00\u5bf9$k,w$\uff0c\u6211\u4eec\u53ef\u4ee5\u628a$w$\u4f4d\u5212\u5206\u6210$k$\u4f4d\u4e00\u6bb5\u7684\u5f62\u5f0f\uff0c\u6bcf\u4e00\u6bb5\u5c31\u662f\u8f6c\u6362\u6210\u5341\u8fdb\u5236\u540e\u7684\u4e00\u4f4d\uff0c\u8fd9\u4e2a\u4ece\u9898\u9762\u7684\u89e3\u91ca\u4e2d\u5e94\u8be5\u53ef\u4ee5\u7406\u89e3\u3002  \n\u5148\u4e0d\u8003\u8651\u53ef\u80fd\u591a\u51fa\uff08\u5373\u5269\u4f59\u4e0d\u8db3\u4ee5\u5212\u6210$k$\u4f4d\uff09\u7684\u4e00\u6bb5\uff0c\u8fd9\u6837\u4f7f\u5f97\u6bcf\u4e00\u4f4d\u7684\u679a\u4e3e\u4e0a\u754c\u90fd\u662f$2 ^ k - 1$\uff0c\u7136\u540e\u6211\u4eec\u679a\u4e3e\u51e0\u4f4d\u6570\u3002  \n- $2$\u4f4d\u6570  \n\u5341\u4f4d\u4e3a$1$\uff0c\u663e\u7136\u4e2a\u4f4d\u53ea\u80fd\u4e3a$2\\sim 2 ^ k - 1$\uff0c\u5171$2 ^ k - 2$\u79cd\u3002  \n\u5341\u4f4d\u4e3a$2$\uff0c\u663e\u7136\u4e2a\u4f4d\u53ea\u80fd\u4e3a$3\\sim 2 ^ k - 2$\uff0c\u5171$2 ^ k - 3$\u79cd\u3002  \n$\\dots$  \n\u8fd9\u4e48\u9012\u63a8\u4e0b\u53bb\uff0c\u5728$2$\u4f4d\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u5171$\\sum \\limits _{i = 1} ^ {2 ^ k - 2}i$\u79cd\u3002  \n- $3$\u4f4d\u6570  \n\u767e\u4f4d\u4e3a$1$\uff0c\u663e\u7136\u5341\u4f4d\u53ea\u80fd\u4e3a$2\\sim 2 ^ k - 2$\uff0c\u8fd9\u65f6\u6211\u4eec\u8003\u8651\u53bb\u53d6\u4e4b\u524d\u8ba1\u7b97$2$\u4f4d\u6570\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5341\u4f4d\u4ece$2$\u5f00\u59cb\uff0c\u6240\u4ee5\u5171$\\sum \\limits _{i = 1} ^ {2 ^ k - 3}i$\u79cd\u3002  \n\u767e\u4f4d\u4e3a$2$\uff0c\u663e\u7136\u5341\u4f4d\u53ea\u80fd\u4e3a$3\\sim 2 ^ k - 2$\uff0c\u5171$\\sum \\limits _{i = 1} ^ {2 ^ k - 4}i$\u79cd\u3002  \n$\\dots$  \n\u9012\u63a8\u4e0b\u53bb\uff0c\u5728$3$\u4f4d\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u5171$\\sum \\limits _{i = 1} ^ {2 ^ k - 3} \\sum \\limits _{j = 1} ^ i j$\u79cd\u3002  \n- $4$\u4f4d\u6570  \n\u540c\u6837\u5982\u4e0a\u8003\u8651\uff0c\u5171$\\sum \\limits _{i = 1} ^ {2 ^ k - 4} \\sum \\limits _{j = 1} ^ i \\sum \\limits _{k = 1} ^ {j} k$\u79cd\u3002  \n$\\dots$  \n\n\u800c\u8fd9\u4e2a\u4e00\u5806$\\sum$\u7684\u5f0f\u5b50\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u6bcf\u6b21\u8fdb\u884c\u524d\u7f00\u548c\u64cd\u4f5c\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u4f9d\u7167\u4e0a\u9762\u7684\u6a21\u5f0f\u9012\u63a8\u4e0b\u53bb\u4e86\u3002  \n\u521d\u59cb\u5316$i = 1 \\to 2 ^ k - 1,S[i] = i$\u3002  \n\u679a\u4e3e\u4f4d\u6570\uff0c\u518d\u679a\u4e3e\u9996\u4f4d\uff08\u6ce8\u610f\u4e0a\u754c\uff0c\u8981\u4fdd\u8bc1\u540e\u9762\u6bcf\u4e00\u4f4d\u90fd\u80fd\u586b\u6570\uff09\uff0c\u7d2f\u8ba1\u8d21\u732e\uff0c\u7136\u540e\u5bf9$S$\u6570\u7ec4\u8fdb\u884c\u524d\u7f00\u548c\u64cd\u4f5c\u5373\u53ef\u3002  \n\u7136\u540e\u8003\u8651\u4e0d\u80fd\u5212\u5206\u6210$k$\u4f4d\u7684\u90a3\u4e00\u6bb5\uff0c\u5176\u5b9e\u53ea\u9700\u5355\u72ec\u62ce\u51fa\u6765\u8fdb\u884c\u5355\u72ec\u679a\u4e3e\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\uff08\u5176\u5b9e\u53ea\u662f\u6539\u4e2a\u4e0a\u754c\u800c\u5df2\uff09\u3002  \n\u56e0\u4e3a\u6570\u636e\u8f83\u5927\uff0c\u6240\u4ee5\u8981\u7528\u9ad8\u7cbe\u3002  \n\u6211\u7684\u9ad8\u7cbe\u662f\u76f4\u63a5$copy$\u6211\u7684[\u9ad8\u7cbe\u6a21\u677f](https://www.cnblogs.com/Iowa-Battleship/p/9869499.html)~~\uff08\u592a\u61d2\u4e86~~  \n\u90e8\u5206\u7ec6\u8282\u53ef\u770b\u4ee3\u7801\u3002  \n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nconst int N = 210;\nconst int M = 520;\nconst int base = 1e8;\nstruct bigint {//\u9ad8\u7cbe\u6a21\u677f\n\tint s[N], l;\n\tvoid CL(){ l = 0; memset(s, 0, sizeof(s)); }\n\tvoid pr()\n\t{\n\t\tprintf(\"%d\", s[l]);\n\t\tfor (int i = l - 1; i; i--)\n\t\t\tprintf(\"%08d\", s[i]);\n\t}\n\tll toint()\n\t{\n\t\tll x = 0;\n\t\tfor (int i = l; i; i--)\n\t\t\tx = x * base + s[i];\n\t\treturn x;\n\t}\n\tbigint operator = (int b)\n\t{\n\t\tCL();\n\t\tdo\n\t\t{\n\t\t\ts[++l] = b % base;\n\t\t\tb /= base;\n\t\t} while (b > 0);\n\t\treturn *this;\n\t}\n\tbigint operator + (const ll &b)\n\t{\n\t\tbigint c = *this;\n\t\tll x = b;\n\t\tfor (int i = 1; i <= l && x; i++)\n\t\t{\n\t\t\tx = x + c.s[i];\n\t\t\tc.s[i] = x % base;\n\t\t\tx /= base;\n\t\t}\n\t\tif (x)\n\t\t\tc.s[++c.l] = x;\n\t\treturn c;\n\t}\n\tbigint operator + (bigint &b)\n\t{\n\t\tif (b.l < 3)\n\t\t\treturn *this + b.toint();\n\t\tbigint c;\n\t\tll x = 0;\n\t\tint k = l < b.l ? b.l : l;\n\t\tc.CL();\n\t\tc.l = k;\n\t\tfor (int i = 1; i <= k; i++)\n\t\t{\n\t\t\tx = x + s[i] + b.s[i];\n\t\t\tc.s[i] = x % base;\n\t\t\tx /= base;\n\t\t}\n\t\tif (x)\n\t\t\tc.s[++c.l] = x;\n\t\treturn c;\n\t}\n};//\u4ee5\u4e0a\u90fd\u662f\u9ad8\u7cbe\u6a21\u677f\nbigint s, S[M];\ninline int re()\n{\n\tint x = 0;\n\tchar c = getchar();\n\tbool p = 0;\n\tfor (; c < '0' || c > '9'; c = getchar())\n\t\tp |= c == '-';\n\tfor (; c >= '0' && c <= '9'; c = getchar())\n\t\tx = x * 10 + c - '0';\n\treturn p ? -x : x;\n}\nint main()\n{\n\tint i, j, k, w, n, o;\n\tk = re();\n\tw = re();\n\to = 1 << k;\n\tn = w / k + (w % k ? 1 : 0);//\u5212\u5206\u6bb5\u6570\n\tw = w % k ? (1 << (w % k)) - 1 : o - n;//\u8ba1\u7b97\u591a\u51fa\u4e00\u6bb5\u7684\u4e0a\u754c\uff0c\u5982\u679c\u6ca1\u6709\u591a\u51fa\uff0c\u90a3\u4e0a\u754c\u5c31\u662f2 ^ k - n\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u540e\u9762\u6bcf\u4e00\u4f4d\u90fd\u80fd\u586b\u6570\u3002\n\tif (n > o - 1)//\u82e5\u5212\u5206\u51fa\u6765\u7684\u6bb5\u6570\u591a\u4e8e2 ^ k - 1\u6bb5\uff0c\u8fd9\u591a\u4f59\u7684\u5c31\u662f\u6ca1\u6709\u7528\u7684\n\t{\n\t\tn = o - 1;\n\t\tw = o - n;\n\t}\n\tfor (i = 1; i < o; i++)//\u521d\u59cb\u5316\n\t\tS[i] = i;\n\tfor (s = 0, i = 2; i <= n; i++)//\u679a\u4e3e\u4f4d\u6570\n\t{\n\t\tif (i < n)\n\t\t\tfor (j = 1; j <= o - i; j++)//\u679a\u4e3e\u9996\u4f4d\u586b\u4ec0\u4e48\u6570\uff0c\u4e0a\u754c\u4e3a2 ^ k - i\n\t\t\t\ts = s + S[o - i - j + 1];//\u540e\u4e00\u4f4d\u80fd\u586bj + 1 ~ (2 ^ k - 1) - (i - 1)\uff0c\u51712 ^ k - i - j + 1\u79cd\n\t\telse//\u7279\u5224\u6700\u540e\u4e00\u6bb5\uff0c\u6539\u4e0a\u754c\n\t\t\tfor (j = 1; j <= w; j++)\n\t\t\t\ts = s + S[o - i - j + 1];\n\t\tfor (j = 1; j <= o - i; j++)//\u8ba1\u7b97\u524d\u7f00\u548c\n\t\t\tS[j] = S[j] + S[j - 1];\n\t}\n\ts.pr();\n\treturn 0;\n}\n```",
        "postTime": 1540964691,
        "uid": 60181,
        "name": "Iowa_BattleShip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u597d\u50cf\u5927\u5bb6\u90fd\u662f\u7ec4\u5408\u6570\u5b66\u63a8\u5f0f\u5b50\u554a...\n\n\n\u6211\u7684\u65b9\u6cd5\u662f $dp$ / \u8bb0\u5fc6\u5316\u641c\u7d22    ~~(\u7231\u600e\u4e48\u53eb\u600e\u4e48\u53eb\u5427)~~\n\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u4e00\u4e2a $2^k$ \u8fdb\u5236\u6570\uff0c\u4ee4\u6700\u9ad8\u4f4d\u4e3a\u7b2c\u4e00\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8...\u4ee4$f[ i ][ j ]$ \u8868\u793a\u7b2c $i$ \u4f4d\u53d6\u4e86 $j$ \u4e4b\u540e \uff0c**\u5176\u540e\u7684\u90e8\u5206**\u7684\u65b9\u6848\u6570\u3002\n\n\u663e\u7136\u679a\u4e3e\u4e0b\u4e00\u4f4d\u7684\u53d6\u503c\u6c42\u548c\u5c31\u53ef\u4ee5\u5f97\u5230 $f[i][j]$\u7684\u503c\u4e86\n\n>  $(1)$ \u5982\u679c$j$\u4e0d\u4e3a$0$ , \u90a3\u4e48$f[i][j]={\\sum_{j+1\u2264r\u22642^k-1}}(f[i+1][r])$\n\n>\t$(2)$ \u5426\u5219 $f[i][j]={\\sum_{j\u2264r\u22642^k-1}}(f[i+1][r])$\n\n>  $(3)$\u4e0a\u9762\u7684\u8ba8\u8bba\u5e76\u4e0d\u5b8c\u6574\uff0c\u8fd8\u9700\u8981\u7b80\u5355\u7279\u5224\u6765\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8981\u6c42(\u8be6\u89c1\u4ee3\u7801)\n\n\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u6211\u4f7f\u7528\u4e86\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u5176\u5b9e\u7528\u5faa\u73af\u4e5f\u662f\u4e00\u6837\u7684\u3002\n\n\u73b0\u5728\u6765\u8ba8\u8bba\u8be5\u7b97\u6cd5\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\uff1a\n\n\n $n\u226430000$ \uff0c$2^k \u2264256$ \uff0c\u5efa\u7acb\u4e00\u4e2a$30000\u00d7256$ \u7684\u6570\u7ec4\u7a7a\u95f4\u7ef0\u7ef0\u6709\u4f59\uff0c\u4f46\u662f\u6570\u7ec4\u91cc\u9762\u7684\u6570\u90fd\u662f\u9ad8\u7cbe\u5ea6\u6570\uff0c\u8fd9\u6837\u7684\u8bdd\u7a7a\u95f4\u8fd8\u8db3\u591f\u5417\uff1f\u7ed3\u8bba\u662f\uff1a\u8db3\u591f(\u672c\u4eba\u9ad8\u7cbe\u538b\u4e86 $16$ \u4f4d$QwQ$)\u3002\n\n\u4e8b\u5b9e\u4e0a\u6570\u7ec4\u7684\u7b2c\u4e00\u7ef4\u4e0e\u7b2c\u4e8c\u7ef4\u5176\u5b9e\u65e0\u6cd5\u540c\u65f6\u53d6\u5230\u6700\u5927 , \u4e8b\u5b9e\u4e0a\u6700\u591a\u53ea\u6709$\\frac{n}{k}\u00d72^k$ \u4e2a\u72b6\u6001 \u3002\n\n\u6bcf\u4e00\u4e2a\u72b6\u6001\u6700\u591a\u8ba1\u7b97\u4e00\u6b21\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(2^k)$\n\n\u7406\u8bba\u4e0a\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(\\frac{n}{k}\u00d72^{2k})$  \u4f46\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u65f6\u95f4\u666e\u904d\u5c0f\u4e8e\u4e0a\u754c\uff0c\u540c\u65f6\u6709\u8bb8\u591a\u72b6\u6001\u6ca1\u6709\u88ab\u8bbf\u95ee\u5230\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002  \n\n(\u6211\u4e0d\u600e\u4e48\u64c5\u957f\u590d\u6742\u5ea6\u5206\u6790\uff0c\u5982\u679c\u6709\u95ee\u9898\u70e6\u8bf7\u6307\u6b63)\n\nCode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<ctime>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\n\n#define base (10000000000000000ll)\n//\u538b\u4f4d\u9ad8\u7cbe \u538b\u4e8616\u4f4d\nstruct hp\n{\n    long long a[20];\n    bool vis;\n    hp refer(int x)//\u5c06x\u8d4b\u503c\u7ed9\u9ad8\u7cbe\u5ea6\u6570\n    {\n        memset(a,0,sizeof(a));\n        a[0]=1,a[1]=x;\n        return *this;\n    }\n    hp operator+(hp q)//\u52a0\u6cd5; \u4e0d\u8981\u5fd8\u4e86\u5904\u7406vis\u6807\u8bb0\n    {\n        hp x;\n        x.refer(0);\n        x.vis=(vis||q.vis);\n        x.a[0]=max(a[0],q.a[0]);\n        for(register int i=1;i<=x.a[0];i++)\n        {\n            if(a[i]+q.a[i]+x.a[i]>=base)\n                x.a[i+1]++,x.a[i]=a[i]+q.a[i]+x.a[i]-base;\n            else\n                x.a[i]=a[i]+q.a[i]+x.a[i];\n        }\n        if(x.a[x.a[0]+1])\n            x.a[0]++;\n        return x;\n    }\n    void print()//\u8f93\u51fa\u7ed3\u679c\n    {\n        printf(\"%lld\",a[a[0]]);\n        for(register int i=a[0]-1;i;i--)\n            printf(\"%016lld\",a[i]);\n        cout<<endl;\n    }\n\n}f[30010][256],ans;\n\nint k,w,n,r;\n\nhp dp(int r,int v)//\u8bb0\u5fc6\u5316\u641c\u7d22\n{\n    if(f[r][v].vis)\n        return f[r][v];\n    f[r][v].vis=true;\n    if(v==0&&r>=n-1)//\u9898\u76ee\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8981\u6c42:\u81f3\u5c11\u4e24\u4f4d\n        return f[r][v].refer(0);\n    if(r==n)//\u8fb9\u754c\n        return f[r][v].refer(1);\n    hp tmp;\n    tmp.refer(0),tmp.vis=true;\n    int bound=(1<<k)-n+r;\n    //\u72b6\u6001\u8f6c\u79fb\n    if(v==0)\n        tmp=tmp+dp(r+1,0);\n    for(register int i=v+1;i<=bound;i++)\n        tmp=tmp+dp(r+1,i);\n    return f[r][v]=tmp;\n}\n\n\nint main()\n{\n    scanf(\"%d%d\",&k,&w);\n    r=w%k,n=w/k+(r!=0),r=(!r)?k:r;//r \u8868\u793a\u9996\u4f4d\u6240\u80fd\u53d6\u7684\u4f4d\u6570; n\u8868\u793a\u603b\u4f4d\u6570\n    for(register int i=1;i<=n;i++)//f \u7684\u521d\u59cb\u5316;  vis\u8868\u793a\u662f\u5426\u5df2\u7ecf\u88ab\u8bbf\u95ee\n        for(register int j=0;j<(1<<k);j++)\n            f[i][j].refer(0),f[i][j].vis=false;\n    ans.refer(0);\n    for(register int i=0;i<(1<<r);i++)\n        ans=ans+dp(1,i);\n    ans.print();\n    return 0;\n}\n```\n",
        "postTime": 1579601297,
        "uid": 68975,
        "name": "\u5b66\u65e0\u6b62\u5883",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u849f\u84bb\u535a\u5ba2\uff1a[QAQ](https://www.cnblogs.com/GoldenPotato/p/9601826.html)\n\n\n------------\n## Solution\n\u8fd9\u662f\u4e00\u9053\u795e\u5947\u7684\u9898\u76ee\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u79cd\u662fDP\uff0c\u4e00\u79cd\u662f\u7ec4\u5408\u6570\u3002\n\n**\u8fd9\u9898\u9700\u8981\u9ad8\u7cbe\u5ea6\uff0c\u4ee5\u4e0b\u7701\u7565\u6b64\u58f0\u660e\n**\n\n.\n\n\n\u5982\u679c\u4f60\u5bf9\u6570\u5b66\u4e0d\u611f\u5174\u8da3/\u559c\u6b22\u5199DP/~~(\u4e0d\u60f3\u8650\u5f85\u81ea\u5df1)~~\uff0c\u8fd9\u91cc\u662fDP\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c**\u8fd9\u4e2a\u6570\u6700\u591a\u6709w/k\u4f4d(\u5411\u4e0a\u53d6\u6574)**,\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n![QAQ](https://cdn.luogu.com.cn/upload/pic/32453.png)\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u8fd9\u4e2a\u7279\u6027\u505aDP\u5566\u3002\n\n\n**\u8bbef[i][j]\u8868\u793a\u679a\u4e3e\u5230\u7b2ci\u4f4d(\u63072^k\u8fdb\u5236\u4e0b\u7684)\uff0c\u6700\u540e\u4e00\u4f4d\u6570\u4e3aj\u3002\n**\n$$ f[i][j] = \u2211 f[i-1][k] ((j==0 and k==0) or k<j)$$ \n\n\u8fd9\u91cc\u7684k\u663e\u7136\u662f\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u4f18\u5316\u7684\n\n**\u521d\u59cb\u5316 f[1][i]=1 (i=0~2^(w%k)-1)\n**\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282:f[\u5012\u6570\u7b2c2/\u7b2c1\u4e2a][0]=0\n\n\u7b54\u6848\u4e3a$\u2211f[w/k][i]$ \n\n\uff08\u56e0\u4e3a\u6211\u6ca1\u5199\u8fc7DP\u505a\u6cd5\uff0c\u8fd9\u4e2a\u505a\u6cd5\u7eaf\u53e3\u80e1\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u901a\u77e5\u849f\u84bb\u535a\u4e3b\uff09\n\n\n------------\n\u90a3....\u7ec4\u5408\u6570\u5462\uff1f\n\n \n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9898\u7684\u7ec4\u5408\u6570\u505a\u6cd5\u7684\u786e\u5f88\u5999\uff0c\uff08\u5f53\u7136\u4e5f\u6709\u4e0d\u5c11\u7ec6\u8282\uff09\n\n\u5047\u8bbe\u6211\u4eec\u679a\u4e3e\u4e86\u7b2c\u4e00\u4f4d\u6570\uff0c\u90a3\u4e48\u540e\u9762\u4f4d\u6570\u7684\u65b9\u6848\u6570\u662f\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u6570\u6765\u8ba1\u7b97\u51fa\u6765\u7684\u3002\n\n**\u56e0\u4e3a\u540e\u9762\u7684\u6570\u8981\u6bd4\u7b2c\u4e00\u4f4d\u5927\uff0c\u90a3\u4e48\u540e\u9762\u7684\u6570\u76f8\u5f53\u4e8e\u4ece [\u7b2c\u4e00\u4f4d\u6570+1,2^k-1] \u8fd9\u4e2a\u6570\u7684\u533a\u95f4\u4e2d\u9009\u51fax\u4e2a\u6570\uff08x\u4e3a\u540e\u9762\u7684\u4f4d\u6570\u6570\u91cf\uff09\u6765 \uff08\u56e0\u4e3a\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u53ef\u4ee5\u901a\u8fc7\u6446\u6210\u5347\u5e8f\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff09\u3002**\n\n**\u4f46\u662f\u8003\u8651\u5230\u6709\u53ef\u80fd\u6709\u82e5\u5e72\u4e2a\u524d\u5bfc\u96f6\uff0c\u6211\u4eec\u8fd8\u8981\u679a\u4e3e\u7b2c\u4e00\u4e2a\u4f4d\u6570\u4ece\u54ea\u5f00\u59cb\u3002\n**\n\n**\u56e0\u4e3a\u679a\u4e3e\u4e86\u524d\u5bfc\u96f6\uff0c\u6211\u4eec\u679a\u4e3e\u7b2c\u4e00\u4f4d\u6570\u65f6\u5e94\u8be5\u4ece1\u5f00\u59cb\uff08\u4ece0\u5f00\u59cb\u4f1a\u6709\u91cd\u590d\uff09\n**\n\u8fd9\u6837\u5b50\uff0c\u7b54\u6848\u4e3a:\n\n![](https://cdn.luogu.com.cn/upload/pic/32454.png)\n\n(\u4e8b\u5b9e\u4e0a\u53e3\u80e1\u8d77\u6765\u7b80\u5355\uff0c\u5199\u8d77\u6765\u8fd8\u6709\u5f88\u591a\u7ec6\u8282\uff0c~~\u8fd9\u5f97\u4eb2\u81ea\u4f53\u4f1a\u7136\u540e\u5c31\u4f1a\u611f\u5230\u8fd9\u9898\u7684\u6bd2\u7624~~)\n\n \n.\n \n .\n\n\u5c31\u9171\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5207\u6389~~\u5634\u5df4AC~~\u51fa\u8fd9\u9053\u9898\u5566(\uff5e\uffe3\u25bd\uffe3)\uff5e \n\n\n------------\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nstruct Int128\n{\n    static const int N=500;\n    int a[N],len;\n    Int128()\n    {\n        memset(a,0,sizeof a);\n        len=0;\n    }\n    void Print()\n    {\n        for(int i=len;i>=1;i--)\n            printf(\"%d\",a[i]);\n    }\n    friend Int128 operator * (Int128 A,int B)\n    {\n        for(int i=1;i<=A.len;i++)\n            A.a[i]*=B;\n        bool IsFullZero=true;\n        for(int i=1;i<=A.len;i++)\n        {\n            if(A.a[i]>=10)\n            {\n                A.a[i+1]+=A.a[i]/10,A.a[i]%=10;\n                if(i==A.len and A.a[i+1]!=0)\n                    A.len++;\n            }\n            if(A.a[i]!=0) IsFullZero=false;\n        }\n        if(IsFullZero==true) A.len=1;\n        return A;\n    }\n    friend Int128 operator / (Int128 A,int B)\n    {\n        Int128 ans;\n        int temp=0;\n        for(int i=A.len;i>=1;i--)\n        {\n            temp=temp*10+A.a[i];\n            if(temp>=B)\n            {\n                ans.a[i]=temp/B,temp=temp%B;\n                ans.len=max(ans.len,i);\n            }\n        }\n        return ans;\n    }\n    friend Int128 operator + (Int128 A,Int128 B)\n    {\n        if(A.len<B.len) swap(A,B);\n        for(int i=1;i<=A.len;i++)\n        {\n            A.a[i]=A.a[i]+B.a[i];\n            if(A.a[i]>9)\n            {\n                A.a[i+1]++;A.a[i]-=10;\n                if(i==A.len)\n                    A.len++;\n            }\n        }\n        return A;\n    }\n};\nconst int N=1<<(9+1);\nInt128 C[N];\nint n,x,K,w,first,m;\nint main()\n{\n    scanf(\"%d%d\",&K,&w);\n    \n    first=1<<(w%K),x=w/K;\n    if(w%K==0) \n        first=1<<K,x--;\n    m=1<<K;\n    \n    \n    Int128 ans;\n    for(int j=0;j<=x-1;j++)\n    {\n        int tx=x-j;\n        memset(C[tx].a,0,sizeof C[tx].a);\n        C[tx].a[1]=1,C[tx].len=1;\n        for(int i=tx+1;i<=m;i++)\n        {\n            memset(C[i].a,0,sizeof C[i].a);\n            C[i]=(C[i-1]*i)/(i-tx);\n        }\n        if(j!=0) first=m;\n        for(int i=1;i<m and i<first;i++)\n        {\n            if(m-1-i<tx) break;\n            ans=ans+C[m-1-i];\n        }\n        //ans.Print();\n        //cerr<<endl;\n    }\n        \n    ans.Print();\n    return 0;\n}\n```",
        "postTime": 1536490935,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "# 2^k\u8fdb\u5236\u6570\u3010NOIP2006\u63d0\u9ad8\u7ec4\u3011\n\n\nDescription\n\n\u3000\u3000\u8bber\u662f\u4e2a2^k \u8fdb\u5236\u6570\uff0c\u5e76\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\u3000\u3000\u3000\uff081\uff09r\u81f3\u5c11\u662f\u4e2a2\u4f4d\u76842^k \u8fdb\u5236\u6570\u3002\n\u3000\u3000\u3000\uff082\uff09\u4f5c\u4e3a2^k \u8fdb\u5236\u6570\uff0c\u9664\u6700\u540e\u4e00\u4f4d\u5916\uff0cr\u7684\u6bcf\u4e00\u4f4d\u4e25\u683c\u5c0f\u4e8e\u5b83\u53f3\u8fb9\u76f8\u90bb\u7684\u90a3\u4e00\u4f4d\u3002\n\u3000\u3000\u3000\uff083\uff09\u5c06r\u8f6c\u6362\u4e3a2\u8fdb\u5236\u6570q\u540e\uff0c\u5219q\u7684\u603b\u4f4d\u6570\u4e0d\u8d85\u8fc7w\u3002\n\u3000\u3000\u5728\u8fd9\u91cc\uff0c\u6b63\u6574\u6570k\uff081\u2264k\u22649\uff09\u548cw\uff08k\u3000\u3000\u95ee\uff1a\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u4e0d\u540c\u7684r\u5171\u6709\u591a\u5c11\u4e2a\uff1f\n\u3000\u3000\u6211\u4eec\u518d\u4ece\u53e6\u4e00\u89d2\u5ea6\u4f5c\u4e9b\u89e3\u91ca\uff1a\u8bbeS\u662f\u957f\u5ea6\u4e3aw \u768401\u5b57\u7b26\u4e32\uff08\u5373\u5b57\u7b26\u4e32S\u7531w\u4e2a\u201c0\u201d\u6216\u201c1\u201d\u7ec4\u6210\uff09\uff0cS\u5bf9\u5e94\u4e8e\u4e0a\u8ff0\u6761\u4ef6\uff083\uff09\u4e2d\u7684q\u3002\u5c06S\u4ece\u53f3\u8d77\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e3ak \u7684\u6bb5\uff0c\u6bcf\u6bb5\u5bf9\u5e94\u4e00\u4f4d2^k\u8fdb\u5236\u7684\u6570\uff0c\u5982\u679cS\u81f3\u5c11\u53ef\u5206\u62102\u6bb5\uff0c\u5219S\u6240\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u53c8\u53ef\u4ee5\u8f6c\u6362\u4e3a\u4e0a\u8ff0\u76842^k \u8fdb\u5236\u6570r\u3002\n\u3000\u3000\u4f8b\uff1a\u8bbek=3\uff0cw=7\u3002\u5219r\u662f\u4e2a\u516b\u8fdb\u5236\u6570\uff0823=8\uff09\u3002\u7531\u4e8ew=7\uff0c\u957f\u5ea6\u4e3a7\u768401\u5b57\u7b26\u4e32\u63093\u4f4d\u4e00\u6bb5\u5206\uff0c\u53ef\u5206\u4e3a3\u6bb5\uff08\u53731\uff0c3\uff0c3\uff0c\u5de6\u8fb9\u7b2c\u4e00\u6bb5\u53ea\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff09\uff0c\u5219\u6ee1\u8db3\u6761\u4ef6\u7684\u516b\u8fdb\u5236\u6570\u6709\uff1a\n2\u4f4d\u6570\uff1a\u9ad8\u4f4d\u4e3a1\uff1a6\u4e2a\uff08\u537312\uff0c13\uff0c14\uff0c15\uff0c16\uff0c17\uff09\uff0c\u9ad8\u4f4d\u4e3a2\uff1a5\u4e2a\uff0c\u2026\uff0c\u9ad8\u4f4d\u4e3a6\uff1a1\u4e2a\uff08\u537367\uff09\u3002\u51716+5+\u2026+1=21\u4e2a\u3002\n3\u4f4d\u6570\uff1a\u9ad8\u4f4d\u53ea\u80fd\u662f1\uff0c\u7b2c2\u4f4d\u4e3a2\uff1a5\u4e2a\uff08\u5373123\uff0c124\uff0c125\uff0c126\uff0c127\uff09\uff0c\u7b2c2\u4f4d\u4e3a3\uff1a4\u4e2a\uff0c\u2026\uff0c\u7b2c2\u4f4d\u4e3a6\uff1a1\u4e2a\uff08\u5373167\uff09\u3002\u51715+4+\u2026+1=15\u4e2a\u3002\n\u3000\u3000\u6240\u4ee5\uff0c\u6ee1\u8db3\u8981\u6c42\u7684r\u5171\u670936\u4e2a\u3002\n\nInput\n\n\u3000\u3000\u8f93\u5165\u6587\u4ef6digital.in\u53ea\u67091\u884c\uff0c\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff1ak\u3000W\u3002\n\nOutput\n\n\u3000\u3000\u8f93\u51fa\u6587\u4ef6digital.out\u4e3a1\u884c\uff0c\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4e3a\u6240\u6c42\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5373\u6ee1\u8db3\u6761\u4ef6\u7684\u4e0d\u540c\u7684r\u7684\u4e2a\u6570\uff08\u7528\u5341\u8fdb\u5236\u6570\u8868\u793a\uff09\uff0c\u8981\u6c42\u6700\u9ad8\u4f4d\u4e0d\u5f97\u4e3a0\uff0c\u5404\u6570\u5b57\u4e4b\u95f4\u4e0d\u5f97\u63d2\u5165\u6570\u5b57\u4ee5\u5916\u7684\u5176\u4ed6\u5b57\u7b26\uff08\u4f8b\u5982\u7a7a\u683c\u3001\u6362\u884c\u7b26\u3001\u9017\u53f7\u7b49\uff09\u3002\n\u3000\u3000\uff08\u63d0\u793a\uff1a\u4f5c\u4e3a\u7ed3\u679c\u7684\u6b63\u6574\u6570\u53ef\u80fd\u5f88\u5927\uff0c\u4f46\u4e0d\u4f1a\u8d85\u8fc7200\u4f4d\uff09\n\nSample Input\n\n3 7\n\nSample Output\n\n36\n\n\n\n\u8fd9\u4e00\u9898\u6211\u4e00\u5f00\u59cb\u770b\u5230\u662f\u6beb\u65e0\u601d\u8def\u7684\uff0c\u4f46\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5176\u5b9e\u4e5f\u4e0d\u8fd9\u4e48\u96be\uff1b\n\n\u5982\u679c\u9898\u76ee\u8fd8\u4e0d\u592a\u61c2\uff0c\u53ef\u4ee5\u8ba4\u771f\u770b\u770b\u95ee\u9898\u63cf\u8ff0\u4e2d\u7684\u4f8b\u5b50\uff0c\u6ce8\u610f\u4e00\u4e2a\u6761\u4ef6\uff1ar\u4e0d\u80fd\u4e3a\u4e00\u4f4d\u6570\uff1b\n\n\u63a5\u4e0b\u6765\u4ecb\u7ecd\u601d\u8def\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u6211\u4eec\u4e0d\u59a8\u5206\u60c5\u51b5\u8003\u8651\uff1a\n\n\u5f53w mod k=0\u65f6\uff0c\u5219r\u7684\u4e8c\u8fdb\u5236\u6570\u5fc5\u5b9a\u53ef\u4ee5\u5212\u5206\u4e3aw/k\u6bb5\uff0c\u4e14\u6bcf\u6bb5\u6709k\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u56e0\u6b64r\u6240\u6709\u4f4d\u90fd\u53ef\u4ee5\u53d6\u52301--2^k-1\uff08\u4e0d\u80fd\u53d60\uff0c\u6709\u4e25\u683c\u9012\u589e\u7684\u9650\u5236\uff0c\u82e5\u53d60\uff0c\u6b64\u4f4d\u5fc5\u5b9a\u5c0f\u4e8e\u524d\u4e00\u4f4d\uff09\uff1b\n\n\u5982\u679c\u4e0d\u592a\u61c2\uff0c\u8fd8\u662f\u5efa\u8bae\u8ba4\u771f\u770b\u770b\u95ee\u9898\u63cf\u8ff0\u4e2d\u7684\u4f8b\u5b50\uff0c\u597d\u597d\u7406\u89e3\u9898\u76ee\uff1b\u5982\u679c\u5bf9\u8fd9\u4e2a\u5212\u5206\u6709\u6240\u4e0d\u7406\u89e3\uff0c\u8bf7\u770b\u4e0b\u9762*\u53f7\u5185\u5bb9\uff1a\n\n*\uff08\u8fd9\u91cc\u666e\u53ca\u4e0b\u4e8c\u8fdb\u5236\u7684\u77e5\u8bc6\uff0c\u61c2\u5f97\u53ef\u4ee5\u8df3\u8fc7\uff09\u4e3e\u4e2a\u4f8b\u5b50\uff0c8\u8fdb\u5236\u6570\uff0c\u5373\u4e3a2^3\u8fdb\u5236\u6570\uff0c\u56e0\u6b64\u5728\u4e8c\u8fdb\u5236\u6570\u4e2d\u6bcf\u4e09\u4f4d\u4f5c\u4e3a\u4e00\u6bb5\uff0c\u6bcf\u6bb5\u5bf9\u5e94\u4e00\u4e2a\u516b\u8fdb\u5236\u4f4d\uff1b\u5982\uff1a100|010|001\u5373\u4e3a421.\n\n\u65e2\u7136w/k\u6bb5\u4e2d\u6bcf\u6bb5\u53ef\u4ee5\u53d6\u52301--2^k-1\uff0c\u4e14\u5fc5\u987b\u4e25\u683c\u9012\u589e\uff08\u5373\u4e0d\u80fd\u91cd\u590d\uff09\uff0c\u90a3\u4e48\u660e\u663e\u5730\uff0cr\u7684\u4e2a\u6570\u5c31\u662f\u4ece2^k-1\u4e2a\u6570\u4e2d\u53d62--w/k\u4e2a\u6570\uff08\u4e0d\u80fd\u53d61\uff0c\u56e0\u4e3a\u4e0d\u80fd\u4e3a1\u4f4d\u6570\uff09\u7684\u65b9\u6848\u6570\uff0c\u5c31\u662f\u4e00\u4e2a\u7ec4\u5408\u7684\u95ee\u9898\uff0c\u7b54\u6848\u4e3aQ=C(2^k-1,i),2=<i<=w/k\uff1b\n\n\u5f53w mod k!=0\u65f6\uff0c\u5bf9\u4e8e\u540e\u9762w/k\u4f4d\u540c\u6837\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u516c\u5f0f\u89e3\u51b3\uff0c\u4f46\u5bf9\u4e8e\u6700\u9ad8\u4f4d\u53d6\u6570\u5c31\u8981\u8ba8\u8bba\u4e86\uff0c\u5047\u8bbe\u6700\u9ad8\u4f4d\u53d6i\uff0c\u5219\u540ew/k\u4f4d\u53ea\u80fd\u53d6\u5230i+1-2^k-1\uff0c\u5373\u7ec4\u5408\u6570\u53d8\u4e3a\u4ece2^k-i-1\u4e2a\u6570\u4e2d\u53d6w/k\u4e2a\u6570\uff0c\u56e0\u4e3a\u6700\u9ad8\u4f4d\u6709w mod k\u4f4d\uff0c\u65451<=i<=2^(w mod k)-1\u56e0\u6b64\u7b54\u6848\u4e3aAns=Q+C(2^k-i-1,w/k),1<=i<=2^(w mod k)-1.\n\n\u5f53\u7136\u4e0a\u8ff0\u60c5\u51b5\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u5373Ans=C(2^k-1,i)+C(2^k-j-1,w/k),2=<i<=w/k,1<=j<=2^(w mod k)-1\uff0c\u56e0\u4e3a\u7ec4\u5408\u6570\u5f88\u5927\uff0c\u9700\u8981\u7528\u9ad8\u7cbe\u5ea6\u3002\n\n# \u4ee3\u7801\u9644\u4e0a\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\tint k,w;\n\tstruct newdata\n\t{\n\t\tint a[201];\n\t};\n\tnewdata ans;\n\tnewdata c[513][513];\nnewdata cal(newdata a,newdata b)\n{\n\tnewdata cal_culate;\n\tfor (int i=0;i<=200;i++) cal_culate.a[i]=0;\n\tfor (int i=1;i<=max(a.a[0],b.a[0]);i++)\n\t{\n\t\tcal_culate.a[i]=cal_culate.a[i]+a.a[i]+b.a[i];\n\t\tif (cal_culate.a[i]>=10)\n\t\t{\n\t\t\tcal_culate.a[i+1]=cal_culate.a[i]/10;\n\t\t\tcal_culate.a[i]%=10;\n\t\t}\n\t}\n\tif (cal_culate.a[max(a.a[0],b.a[0])+1]!=0) cal_culate.a[0]=max(a.a[0],b.a[0])+1; else cal_culate.a[0]=max(a.a[0],b.a[0]);\n\treturn cal_culate;\n}\nint main()\n{\n\tscanf(\"%d%d\",&k,&w);\n\tint now=int(pow(double(2),w%k))-1;\n\tint tot=1;\n\tif (w%k==0) tot=0;\n\tfor (int i=1;i<=int(pow(double(2),k))-1;i++) \n\t{\n\t\tint u=i;\n\t\tc[1][i].a[0]=1;\n\t\tc[1][i].a[1]=u%10;\n\t\twhile (u>=10)\n\t\t{\n\t\t\tu/=10;\n\t\t\tc[1][i].a[0]++;\n\t\t\tc[1][i].a[c[1][i].a[0]]=u%10;\n\t\t}\n\t}\n\tfor (int i=2;i<=int(pow(double(2),k))-1;i++)\n\t\tfor (int j=2;j<=i;j++)\n\t\t\tc[j][i]=cal(c[j-1][i-1],c[j][i-1]);\n\tfor (int j=2;j<=w/k;j++)\n\t\tif (j<=int(pow(double(2),k))-1)\n\t\t\tans=cal(ans,c[j][int(pow(double(2),k))-1]);\n\tif (tot==1)\n\t\tfor (int i=1;i<=now;i++)\n\t\t\tif (w/k<=int(pow(double(2),k))-i-1)\n\t\t\t\tans=cal(ans,c[w/k][int(pow(double(2),k))-i-1]);\n\tfor (int i=ans.a[0];i>=1;i--)\n\t\tprintf(\"%d\",ans.a[i]);\n}\n```\n",
        "postTime": 1571125367,
        "uid": 99858,
        "name": "DLYJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\n\n\n##       P1066 2^k\u8fdb\u5236\u6570\n          \n          \n          \n>##           \u9ad8\u7cbe\u5ea6\u6a21\u677f+\u6570\u8bba\u5206\u6790\n\n\n\n### \u9898\u610f:\n```c++\n\u8bber\u662f\u4e2a2^k \u8fdb\u5236\u6570\uff0c\u5e76\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\uff081\uff09r\u81f3\u5c11\u662f\u4e2a2\u4f4d\u76842^k \u8fdb\u5236\u6570\u3002\n\uff082\uff09\u4f5c\u4e3a2^k \u8fdb\u5236\u6570\uff0c\u9664\u6700\u540e\u4e00\u4f4d\u5916\uff0cr\u7684\u6bcf\u4e00\u4f4d\u4e25\u683c\u5c0f\u4e8e\u5b83\u53f3\u8fb9\u76f8\u90bb\u7684\u90a3\u4e00\u4f4d\u3002\n\uff083\uff09\u5c06r\u8f6c\u6362\u4e3a2\u8fdb\u5236\u6570q\u540e\uff0c\u5219q\u7684\u603b\u4f4d\u6570\u4e0d\u8d85\u8fc7w\u3002\n\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u4e0d\u540c\u7684r\u5171\u6709\u591a\u5c11\u4e2a\uff1f\n```\n\n## \u601d\u8def\uff1a\n```c++\n\u5bf9\u4e8e\u5c0f\u4e8e\u6700\u5927\u957f\u5ea6\u7684, \u603b\u60c5\u51b5\u4e2d\u53d6\u9700\u8981\u7684\u4e2a\u6570(C);\n\u5bf9\u4e8e\u7b49\u4e8e\u6700\u5927\u7a0b\u5ea6\u7684, \u603b\u60c5\u51b5\u4e2d\u4e5f\u53d6\u9700\u8981\u7684\u4e2a\u6570(C);\n\u4e24\u8005\u76f8\u52a0\u5373\u4e3a\u7b54\u6848\n```\n\n\n\n### \u4ee3\u7801:\n####  \u9ad8\u7cbe\u5c01\u88c5\u6a21\u677f:\n```c++\nconst int P=10000;\nstruct BigInt {\n\tint num[40],len;\n\tBigInt() {memset(num,0,sizeof(num)),len=1;}\n\tvoid One() {num[0]=1,len=1;}\n\tBigInt operator +(const BigInt &A)const {\n\t\tBigInt res;\n\t\tres.len=max(len,A.len);\n\t\tfor(int i=0; i<res.len; i++) {\n\t\t\tres.num[i]+=num[i]+A.num[i];\n\t\t\tif(res.num[i]>=P)res.num[i]-=P,res.num[i+1]++;\n\t\t}\n\t\tif(res.num[res.len]>0)res.len++;\n\t\treturn res;\n\t}\n\tBigInt operator *=(const int &x) {\n\t\tfor(int i=0; i<len; i++)num[i]*=x;\n\t\tfor(int i=0; i<len; i++) {\n\t\t\tnum[i+1]+=num[i]/P;\n\t\t\tnum[i]%=P;\n\t\t}\n\t\twhile(num[len])len++;\n\t}\n\tBigInt operator /=(const int &x) {\n\t\tfor(int i=len-1; i>=1; i--) {\n\t\t\tnum[i-1]+=num[i]%x*P;\n\t\t\tnum[i]/=x;\n\t\t}\n\t\tnum[0]/=x;\n\t\twhile(num[len-1]==0)len--;\n\t}\n\tvoid print() {\n\t\tprintf(\"%d\",num[len-1]);\n\t\tfor(int i=len-2; i>=0; i--)printf(\"%04d\",num[i]);\n\t}\n} C[520][520],res;\n```\n\n#### \u6768\u8f89\u4e09\u89d2\u7684\u5904\u7406:\n```c++\n\tfor(int i=1; i<=tmp; i++)\n\t\tfor(int j=0; j<=i; j++) {\n\t\t\tif(j==0||j==i)C[i][j].One();\n\t\t\telse C[i][j]=C[i-1][j]+C[i-1][j-1];\n\t\t}\n```\n#### \u6570\u8bba:\n```c++\n\tint p=w/k,q=w%k;\n\tint tmp=pow(2,k),tmps=pow(2,q);\n\tfor(int i=2; i<=p&&i<tmp; i++)res=res+C[tmp-1][i];\n\tfor(int i=1;i<tmps&&i<tmp-p;i++)res=res+C[tmp-i-1][p];\n\tres.print();\n```",
        "postTime": 1537966141,
        "uid": 100000,
        "name": "Armand",
        "ccfLevel": 0,
        "title": "P1066"
    },
    {
        "content": "\u770b\u5b8c\u9898\u89e3\u4e4b\u540e\u6211\u662f\u4ec0\u4e48\u7684\u8499\u853d\uff1b\n\u697c\u4e0b\u7684dalao\u5199\u7684\u5565\uff1f\uff1f\n\u4e8e\u662f\u8bf4\u770b\u8fc7\u601d\u8def\u4e4b\u540e\u5c31\u81ea\u5df1\u5199\u4e86\u5199\uff1a\uff1a\uff1a\n\n\u672c\u9898\u89e3\u53c2\u8003\u4e86\u4ece\u8fd9\u7bc7\u5f80\u4e0b\u6570\u7b2c\u4e09\u7bc7\uff0c\u611f\u8c22\u8fd9\u4f4ddalao\u63d0\u4f9b\u7684\u8f6c\u79fb\u5f0f\u3002\n\n\nf[i][j]\u8868\u793a\u5171i\u4f4d\u4e14\u6700\u9ad8\u4f4d\u662fj\u7684\u65b9\u6848\u6570\uff0c\u663e\u7136\u6709\u53ea\u8981\u4e0a\u4e00\u4f4d\u6bd4\u5b83\u5927\u5c31\u53ef\u4ee5\u8f6c\u79fb\uff0c\u6240\u4ee5\u6709f[i][j]=f[i-1][j+1]+...+f[i-1][2^k-i+1]\n\n\u4e5f\u5c31\u662ff[i][j]=f[i][j+1]+f[i-1][j]\n\n\n\n\n\n\n```cpp\n#include\"bits/stdc++.h\"\nusing namespace std;\n\n\nstruct aa{\n\tint w[100];\n\tint len;\n\taa() {\n\t\tlen=0;memset(w,0,sizeof(w)); \n\t}\n\tvoid set()\n\t{\n\t\tthis->len=1;this->w[1]=1;\n\t\t\n\t}\n\t\n\taa operator +(const aa b)\n\t {\n\t \tint c=max(len,b.len);\n\t \taa ans; ans.len=c;\n\t\n\t\tfor (int i=1;i<=c;i++) ans.w[i]=w[i]+b.w[i];\n\t\tfor (int i=1;i<=c;i++) ans.w[i+1]+=ans.w[i]/100000000,ans.w[i]%=100000000;\n\t\tif (ans.w[ans.len+1]) ans.len++;\n\t\t\n\t\treturn ans;\n\t\t\n\t \t\n\t }\n\t \n\t void print()\n\t  { cout<<this->w[len];\n\t  \tfor (int i=this->len-1;i>0;i--) printf(\"%08d\",this->w[i]);\n\t  }\n\t \n\t\n}ans,f[520][520];\n\n\n\nint main()\n{\n\tint k,w;\n\tcin>>k>>w;\n\tint t=w/k;int tt=w%k;\n\tint jw;\n\tif (!tt) jw=t;//jw \uff1a\u51e0\u4f4d \n\telse jw=t+1;   int temp=1<<k;\n\t\n\tjw=min(jw,temp-1);//\u6bd4\u5982\u8bf4w=100\uff0ck=3\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e00\u53e5\u7684\u8bdd\u90a3jw=33\uff0c\u53ef\u662f\u53f3\u8fb9\u7684\u4e00\u4f4d\u8981\u6bd4\u5de6\u8fb9\u4e00\u4f4d\u5927\n\t//\u6bcf\u4e00\u4f4d\u7684\u6700\u5927\u503c\u662f2\u76843\u6b21\u65b9\u51cf\u4e00\uff0c\u6240\u4ee5\u8bf4\u6700\u591a\u4e5f\u5c31\u662f7\u4f4d\u3002\u5373jw=7\uff1b \n\t\n\tfor  (int i=1;i<=temp-1;i++) f[1][i].set();\n\t\n\n\n\tfor (int i=2;i<=jw;i++)\n\t{       int k;\n\t\n\t        if (tt==0)k=0x7fffffff;\n\t        else if (i==jw) k=(1<<tt)-1;\n\t        else k=0x7fffffff;  \n\t \n\t for (int j=temp-i;j>0;j--)\n\t  {\n\t  \t f[i][j]=f[i][j+1]+f[i-1][j+1] ;\n\t  \t \n\t\n\t\n\t     if (j<=k) ans=ans+f[i][j];                                \t \n\t  } \n\t \n\t }\n\tans.print();\n\treturn 0;\n\t\n } \n```",
        "postTime": 1533122638,
        "uid": 50852,
        "name": "zhangbubu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u8fd9\u4e5f\u8bb8\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684\u6570\u5b66\u9898\u5427\uff01\n\n\n\u9996\u5148\u901a\u8fc7\u6837\u4f8b\u80fd\u770b\u51fa\u6574\u9898\u5176\u5b9e\u5c31\u662f\u6c42\u7ec4\u5408\u6570!!!\n\n\n\u7b2c\u4e00\u7c7b\uff1a\u4f4d\u6570\u4e3a2\u2014len-1\u76842k \u8fdb\u5236\u6570\u79cd\u6570\uff1b  \u5b83\u7b49\u4e8e\u4ece2k -1\u4e2a\u6570\u4e2d\u5206\u522b\u4e0d\u91cd\u590d\u5730\u53d62\u4e2a\u30013\u4e2a\u3001\u2026\u2026.len-1\u4e2a\u6570\u7684\u4e0d\u540c\u7ec4\u5408\u6570\u4e4b\u548c,C(2k-1,i)\n\n****\u6ce8\u610f\u8fd9\u91cc\u7684i\u4e0d\u4ec5\u8981\u5c0f\u4e8ew/k\uff0c\u8fd8\u8981\u5c0f\u4e8emaxk****\n\n\n\u7b2c\u4e8c\u7c7b\uff1a\u4f4d\u6570\u5df2\u7ecf\u8fbe\u5230len\u76842k \u8fdb\u5236\u6570\u79cd\u6570\uff1b  \u8fd9\u7c7b\u6570\u7684\u9996\u4f4d\u53ef\u80fd\u591f\u662f1\uff0c2\uff0c\u2026\u20262k-i-1\uff0c\u4ece\u7b2c2\u4f4d\u5f00\u59cb\u53d6\u6570\u65f6\u6bcf\u6b21\u90fd\u8981\u6263\u9664\u5c0f\u4e8e\u5de6\u8fb9\u76f8\u90bb\u6570\u7684\u8fd9\u4e9b\u6570\uff0c\u56e0\u6b64\u53ef\u4f9b\u9009\u62e9\u7684\u6570\u8d8a\u6765\u8d8a\u5c11\uff0c\u7d2f\u52a0\u8d77\u6765\u662f\u2211c(2k \u2013(i+1),len)\uff0c(1<=i<=2k )\u3002\n\n****\u6ce8\u610f\u8fd9\u91cc\u7684i\u4e0d\u4ec5\u8981\u5c0f\u4e8emaxq\uff0c\u8fd8\u8981\u4fdd\u8bc1\u9700\u8981\u7684\u6570\u5b57\u6570\u4e0d\u80fd\u5927\u4e8e\u5269\u4e0b\u53ef\u9009\u7684\u6570\u5b57\u6570 ****\n\n\n\u63a5\u4e0b\u6765\u5c31\u8981\u770b\u5982\u4f55\u5bf9\u7ec4\u5408\u6570\u9884\u5904\u7406\u4e86,\u7528\u5230\u5173\u952e\u7684\u6570\u5b66\u516c\u5f0f\uff1a************C(m,n)=C(m-1,n)+C(m-1,n-1)  \uff08\u7b26\u5408\u6768\u8f89\u4e09\u89d2\u5f62\uff09************\n\n\nTips:1\u3001\u624b\u5199\u9ad8\u7cbe\u5ea6\uff0c\u53ef\u5c06a[0]\u8bb0\u4e3a\u8fd9\u4e2a\u6570\u7684\u4f4d\u6570\uff0c\u5e76\u5411\u51fd\u6570\u4e2d\u4f20\u5165\u6570\u7ec4\uff01\n\n2\u3001\u6b64\u65f6\u8981\u6ce8\u610f\u5012\u5e8f\u8f93\u51fa\n\n3\u3001\u5982\u679c\u9884\u5904\u7406\u6570\u7ec4\u4ece1\u5f00\u59cb\u8bb0\u5f55\uff0cC(m,n)\u5b9e\u9645\u4e0a\u4e3aa[m+1][n+1]!!!\n\n\n\u4ee3\u7801\uff1a\n\n\n\n\n    \n    \n    \n    \n    \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint k,w,maxk;\nint a[515][515][205],res[205];\nvoid mysum(int* x,int* y,int* z)  //\u4f20\u5165\u6570\u7ec4\u8fd9\u4e2a\u53c2\u6570 \n{\n    int jw=0,cur=0;\n    z[0]=max(x[0],y[0]);  //\u7528A[0]\u4ee3\u8868\u4f4d\u6570 \n    for(int i=1;i<=z[0];i++)\n    {\n        int t=x[i]+y[i]+jw;\n        cur=t%10;jw=t/10;\n        z[i]=cur;\n    }\n    if(jw) \n    {\n        z[0]++;\n        z[z[0]]=jw; \n    } \n}\nint main()\n{\n    cin >> k >> w;\n    int maxk=pow(2,k);\n    for(int i=1;i<=maxk;i++)\n        for(int j=1;j<=i;j++)\n        {    \n            if(j==1 || j==i) a[i][j][0]=1,a[i][j][1]=1;\n            else mysum(a[i-1][j],a[i-1][j-1],a[i][j]);\n        }\n    int p=w/k,q=w-p*k;\n    int maxq=pow(2,q);\n    //\u6ce8\u610f\u8fd9\u91cc\u7684i\u4e0d\u4ec5\u8981\u5c0f\u4e8ew/k\uff0c\u8fd8\u8981\u5c0f\u4e8emaxk\n    for(int i=2;i<=p&&i<maxk;i++) mysum(a[maxk][i+1],res,res);    \n    //\u6ce8\u610f\u8fd9\u91cc\u7684i\u4e0d\u4ec5\u8981\u5c0f\u4e8emaxq\uff0c\u8fd8\u8981\u4fdd\u8bc1\u9700\u8981\u7684\u6570\u5b57\u6570\u4e0d\u80fd\u5927\u4e8e\u5269\u4e0b\u53ef\u9009\u7684\u6570\u5b57\u6570 \n    for(int i=1;i<=maxq-1&&p+i<maxk;i++) mysum(a[maxk-i][p+1],res,res);\n    for(int i=res[0];i>=1;i--) cout << res[i];  //\u6ce8\u610f\u5012\u5e8f\u8f93\u51fa \n    return 0;\n}\n\n```",
        "postTime": 1504950407,
        "uid": 18490,
        "name": "NewErA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "r\u7684\u6bcf\u4e00\u4f4d\u5bf9\u5e94q\u7684k\u4f4d\uff0c\u8bbelen=w/k\uff0c\u5f53k|w\u65f6\uff0cr\u7684\u4f4d\u6570\u53ef\u4ee5\u4ece2\u5230len\uff0c\u4e14\u65e0\u5927\u5c0f\u9650\u5236\uff0c\u5f53w%k\u22600\u65f6\uff0cr\u7684\u4f4d\u6570\u53ef\u4ee5\u4ece2\u5230len+1\uff0c\u4f46\u9996\u4f4d<2^\uff08w%k\uff09\u3002\n\n\u8bbe\u4f4d\u6570\u4e3al\u3002\n\n1)    l\u2264len\u65f6\uff0c\u76f8\u5f53\u4e8e\u4ece2^k-1\u4e2a\u6570\u4e2d\u9009l\u4e2a\u6570\u7136\u540e\u5347\u5e8f\u6392\u5217\uff0c\u6709C(2^k-1,l)\u79cd\uff0c\u603b\u5171\u6709\u03a3C(2^k-1,i) (2\u2264i\u2264len)\u79cd\u3002\n\n2)    l=len+1\u65f6\uff0c\u9996\u4f4d<2^\uff08w%k\uff09\uff0c\u5176\u540e\u7684\u6570\u5fc5\u987b\u5927\u4e8e\u9996\u4f4d\uff0c\u76f8\u5f53\u4e8e\u4ece2^k-1-i\u4e2a\u6570\u4e2d\u9009len\u4e2a\u6570\u5347\u5e8f\u6392\u5217\uff0c\u603b\u5171\u6709\u03a3C(2^k-1-i,len) (1\u2264i<2^(w%k))\u79cd\u3002\n\nk|w\u65f6\u53ea\u6709\u7b2c\u4e00\u79cd\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u9ad8\u7cbe\u4e86\u2026\u2026\u7528\u6768\u8f89\u4e09\u89d2\uff1aC(m+1,n+1)=C(m,n)+C(m,n+1)\u3002\n\n\u6570\u7ec4\u7528char\u6765\u5b58\u4e0d\u7136\u4f1aMLE\uff01\uff01\uff01\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nchar c[520][520][110],ans[210];\nvoid p1(char x[],char y[],char z[]){\n    int i,c=0;\n    if (x[0]>y[0]) z[0]=x[0];\n    else z[0]=y[0];\n    for (i=1;i<=z[0];i++){\n        z[i]=x[i]+y[i]+c;\n        c=z[i]/10;\n        z[i]%=10;\n    }\n    if (c){\n        z[++z[0]]=c;\n    }\n}\nvoid p2(char x[]){\n    int i,c=0;\n    if (x[0]>ans[0]) ans[0]=x[0];\n    for (i=1;i<=ans[0];i++){\n        ans[i]=x[i]+ans[i]+c;\n        c=ans[i]/10;\n        ans[i]%=10;\n    }\n    if (c){\n        ans[++ans[0]]=c;\n    }\n}\nint main(){\n    int k,w,lm,a,i,j,len;\n    scanf(\"%d%d\",&k,&w);\n    lm=1<<k;\n    a=1<<(w%k);\n    len=w/k;\n    if (a>lm-len) a=lm-len;\n    c[1][1][0]=1;\n    c[1][1][1]=1;\n    for (i=1;i<=lm;i++){\n        c[i][0][0]=1;\n        c[i][0][1]=1;\n        c[i][i][0]=1;\n        c[i][i][1]=1;\n    }\n    for (i=1;i<=lm;i++){\n        for (j=0;j<i;j++){\n            p1(c[i][j],c[i][j+1],c[i+1][j+1]);\n        }\n    }\n    for (i=2;i<=len&&i<lm;i++){\n        p2(c[lm-1][i]);\n    }\n    for (i=1;i<a;i++){                //ans+= c[lm-i-1][len]\n        p2(c[lm-i-1][len]);\n    }\n    for (i=ans[0];i>=1;i--){\n        printf(\"%d\",ans[i]);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1489307418,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    },
    {
        "content": "\u6b63\u5982\u697c\u4e0b\u6240\u8bf4\uff0c\u8fd9\u9898\u662f\u4e00\u9053\u7ec4\u5408\u6570\u7684\u95ee\u9898\u3002\n\n\u697c\u4e0b\u5df2\u7ecf\u628a\u516c\u5f0f\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\nusing namespace std;\nint k,w,n,p,m,zy[301][301][101],ans[201];\nvoid pp(int a[],int b[],int c[])//\u9ad8\u7cbe\u52a0\n{\n    c[0]=max(a[0],b[0]);\n    for (int i=1;i<=c[0];i++)\n    {\n        c[i]+=a[i]+b[i];\n        c[i+1]+=c[i]/10;\n        c[i]%=10;\n    }\n    if (c[c[0]+1]) c[0]++; \n}\nvoid zp(int a[],int b[])//\u9ad8\u7cbe\u81ea\u52a0\n{\n    a[0]=max(a[0],b[0]);\n    for (int i=1;i<=a[0];i++)\n    {\n        a[i]+=b[i];\n        a[i+1]+=a[i]/10;\n        a[i]%=10;\n    }\n    if (a[a[0]+1]) a[0]++; \n}\nint main()\n{\n    cin>>k>>w;\n    n=1<<k;\n    m=w/k;\n    p=1<<(w%k);\n    for(int i=0;i<=n;i++)\n      for(int j=0;j<=i;j++)\n      {\n          if (!j) zy[i][j][0]=zy[i][j][1]=1;\n            else pp(zy[i-1][j],zy[i-1][j-1],zy[i][j]);//\u751f\u6210\u7ec4\u5408\u6570\u6570\u7ec4\n      }\n    for (int i=2;i<=m&&i<n;i++) zp(ans,zy[n-1][i]);//\u8ba1\u7b97\u4f4d\u6570\u4e3a2\u2014len-1\u76842k \u8fdb\u5236\u6570\u79cd\u6570\n    for (int i=1;i<p&&m+i<n;i++) zp(ans,zy[n-i-1][m]);//\u8ba1\u7b97\u4f4d\u6570\u5df2\u7ecf\u8fbe\u5230len\u76842k \u8fdb\u5236\u6570\u79cd\u6570\n    for (int i=ans[0];i>0;i--) cout<<ans[i];//\u5012\u5e8f\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1482630769,
        "uid": 14380,
        "name": "24680esz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1066 \u30102^k\u8fdb\u5236\u6570\u3011"
    }
]