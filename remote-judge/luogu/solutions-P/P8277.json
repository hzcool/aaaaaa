[
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5217 $p$ \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c$s$ \u7531\u5927\u4e8e\u5c0f\u4e8e\u53f7\u7ec4\u6210\uff0c\u6c42 $p$ \u4e2d\u6700\u957f\u7684\u5b50\u5e8f\u5217 $t_0,t_1,t_2\\cdots t_k$ \u4f7f\u5f97 $t_i,t_{i+1}$ \u7684\u5927\u5c0f\u5173\u7cfb\u548c $s_{i+1}$ \u76f8\u540c\u3002\n\n$n\\le 3\\times 10^5$\u3002\n\n## \u5206\u6790\n\n\u4e0b\u6587\u5047\u8bbe\u5982\u679c $x$ \u8868\u793a\u4e00\u4e2a\u5927\u4e8e\u5c0f\u4e8e\u53f7\uff0c\u90a3\u4e48 $\\hat{x}$ \u8868\u793a\u76f8\u53cd\u7684\u7b26\u53f7\u3002\n\n\u8bbe $f_i$ \u4e3a $p_1,p_2,\\cdots p_i$ \u4e2d\u4ee5 $p_i$ \u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u5728 $s_i$ \u4e2d\u80fd\u5339\u914d\u7684\u6700\u957f\u524d\u7f00\u957f\u5ea6\u3002\n\n\u4e0b\u8bc1\uff0c\u5b58\u5728\u4e00\u4e2a\u4e0b\u6807\u5b50\u5e8f\u5217 $x_0,x_1\\cdots x_{f_i},x_{f_i}=i$ \u4f7f\u5f97 $\\forall 0\\le k\\le f_i,k=f_{x_k}$\uff0c$p_{x_0},\\cdots p_{x_{f_i}}$ \u80fd\u591f\u5339\u914d $s_1,s_2\\cdots s_{f_i}$\u3002\n\n\u5047\u8bbe $t_0,t_1,\\cdots t_{f_i}$ \u4e3a $x_{f_k},x_{f_k-1},\\cdots x_0$ \u5b57\u5178\u5e8f\u6700\u5c0f\u65f6\u5bf9\u5e94\u7684 $p_{x_0},p_{x_1}\\cdots p_{x_{f_i}}$\uff0c\u56e0\u4e3a \u5b50\u5e8f\u5217\u4e2a\u6570\u6709\u9650\uff0c\u56e0\u6b64 $t$ \u5b58\u5728\u3002\n\n\u82e5\u5b58\u5728 $0\\le k \\lt f_i$ \u4f7f\u5f97 $f_{x_k}\\gt f_i$\uff0c\n\n\u5047\u8bbe $j=x_k,r=f_j,l=f_i$\uff0c$j$ \u8fbe\u6210\u6700\u5927\u5339\u914d\u65f6\u5b50\u5e8f\u5217\u4e3a $b_0,b_1\\cdots b_r$\u3002\n\n\u90a3\u4e48 $b_{k}\\; s_{k+1}\\;b_{k+1}\\;s_{k+2}\\cdots b_{r-1}\\;s_{r}\\;b_{r}$\uff0c\u4e14 $b_r=t_k \\;s_{k+1}\\; t_{k+1}\\;s_{k+2}\\;\\cdots s_{l}\\;t_{l} $\u3002\n\n\u4e0b\u8bc1 $b_{k},b_{k+1},\\cdots b_{r}=t_k,\\cdots t_l$ \u5b58\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a $l-k+1$ \u6216 $l-k$ \u7684\u5b50\u5e8f\u5217\u80fd\u591f\u5339\u914d $s_{k+1},s_{k+2}\\cdots s_{l+1}$ \u6216 $s_{k+1},s_{k+2}\\cdots s_l$\u3002\n\n\u82e5 $\\forall k\\le m\\lt l$\uff0c$b_{k} \\;s_{k+1}\\;t_{k+1}$ \u4e0d\u6210\u7acb\u3002\n\n\u90a3\u4e48\u5206\u4e24\u79cd\u60c5\u51b5\uff0c$s_{k+1}=s_{k+2}=\\cdots s_{l}$\u3002\n\n\u90a3\u4e48 $b_{l}\\; \\hat{s_l}\\;b_{l-1}\\; \\hat{s_{l}}\\;t_{l}$\uff0c\u5373 $b_{l} \\;\\hat{s_l}\\; t_l$\uff0c\u4e8e\u662f $s_{l+1},s_{l+2}\\cdots s_{r}$ \u4e2d\u5fc5\u5b58\u5728\u4e00\u4e2a\u524d\u7f00\u4f7f\u5f97 $s_{l+1},s_{l+2},\\cdots s_{d},l\\lt d\\le r$\uff0c\u4e14 $s_{k+1}=s_{k+2}=\\cdots =s_{l}=s_{l+1}\\cdots s_{d-1}=\\hat{s_d}$\uff0c\u7531\u4f20\u9012\u6027\u53ef\u77e5 $t_l\\;s_{l}\\;b_{l}\\;s_{l+1}\\; b_{l+1} \\cdots s_{d-1}\\;b_{d-1}$ \u53ef\u4ee5\u63a8\u51fa $b_{d-1} \\;\\hat{s_{d-1}}\\;t_{l}$ \uff0c\u53c8 $\\hat{s_{d-1}}=s_d$ \u90a3\u4e48 $b_{d-1}\\; s_d\\; t_{l}$\uff0c\u4e8e\u662f\u5b58\u5728\u4e00\u4e2a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u53ef\u4ee5\u5339\u914d $s$ \u7684\u524d\u7f00\u957f\u5ea6\u4e3a $d\\gt l=f_i$ \u77db\u76fe\uff01\n\n\u5426\u5219\u5b58\u5728\u76f8\u90bb\u4e24\u9879 $s_{d+1}=\\hat{s_{d}},k\\lt d\\lt l$\uff0c\u90a3\u4e48 $b_{d-1}\\;\\hat{s_d}\\; t_d$\uff0c$b_{d}\\;\\hat{s_d} \\;b_{d-1}$\uff0c$t_{d+1}\\;s_{d+1}\\;b_{d}$\uff0c$t_{d}\\;s_{d+1}\\;t_{d+1}$\uff0c\u4e8e\u662f $b_{d-1}\\;\\hat{s_{d}}\\;t_{d}\\;s_{d+1}\\;t_{d+1}\\;s_{d+1}\\;b_{d}\\;\\hat{s_{d}}\\;b_{d-1}$\u3002\n\n\u7531 $s_{d+1}=\\hat{s_d}$ \u53ef\u77e5\u4e2d\u95f4\u56db\u4e2a\u7b26\u53f7\u90fd\u76f8\u540c\uff0c\u90a3\u4e48 $b_{d-1}\\;s_{d-1}\\; b_{d-1}$ \u77db\u76fe\uff01\n\n\u6240\u4ee5 $\\exists k\\le m\\lt l$\uff0c\u4f7f\u5f97 $b_{k}\\;s_{k+1}\\;t_{k+1}$\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u628a $t_{m+1},t_{m+2}\\cdots t_{l}$ \u63a5\u5230 $b_{0},b_{1}\\cdots b_{m}$ \u540e\u9762\u4e5f\u662f\u4e00\u7ec4\u5408\u6cd5\u7684\u89e3\uff0c\u6b64\u65f6 $x^{\\prime}_{f_i},x^{\\prime}_{f_i-1},\\cdots x^{\\prime}_0$ \u7684\u5b57\u5178\u5e8f\u66f4\u5c0f\uff0c\u56e0\u4e3a $x_{m}$ \u53d8\u5c0f\u4e86\u800c $x_{m+1},\\cdots x_{f_i}$ \u5747\u6ca1\u53d8\u5316\u3002\n\n\u4e0e\u5047\u8bbe\u77db\u76fe\uff01\n\n\u82e5\u5b58\u5728 $0\\le k\\lt f_{i}$ \u4f7f\u5f97 $f_{x_k}\\neq k$ \uff0c\u90a3\u4e48\u8fd9\u65f6\u4ee4 $j=x_k,r=f_{j},l=r$\uff0c$j$ \u8fbe\u6210\u6700\u5927\u5339\u914d\u65f6\u5b50\u5e8f\u5217\u4e3a $b_0,b_1\\cdots b_r$\u3002\n\n\u4e0e\u4e0a\u9762\u540c\u7406\uff0c\u53ea\u6709 $s_{k+1}=s_{k+2}\\cdots =s_l$ \u65f6\u4f1a\u63a8\u51fa $b_{r}=b_{l}\\;\\hat{s_{l}}\\;t_{l}$\uff0c\u800c $b_r=t_k$ \uff0c\u7531 $s_{k+1}=s_{k+2}\\cdots =s_l$ \u5f97\u51fa $b_r\\; s_l\\;t_l$\uff0c\u77db\u76fe\uff01\n\n\u547d\u9898\u6210\u7acb\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 dp \u503c\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconstexpr int N=300010;\nint b1[N],b2[N];\nvoid upd(int *b,int x,int v){for(;x<N;x+=(x&(-x))) b[x]=max(b[x],v);}\nint qry(int *b,int x){int ans=0;for(;x;x-=(x&(-x))) ans=max(ans,b[x]);return ans;}\nchar s[N];int n,a[N];\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);scanf(\"%s\",s+1);int ans=0;\n\tfor(int i=1;i<=n;++i){\n\t\tint f=max(qry(b1,a[i]-1),qry(b2,n-a[i]));ans=max(ans,f);\n\t\tif(s[f+1]=='U') upd(b1,a[i],f+1);else upd(b2,n-a[i]+1,f+1);\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1649122827,
        "uid": 151623,
        "name": "xiaoyaowudi",
        "ccfLevel": 9,
        "title": "[USACO22OPEN] Up Down Subsequence P"
    },
    {
        "content": "\u9996\u5148\uff0c\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u66b4\u529b\u72b6\u6001 $dp_{i, j}$ \u8868\u793a\u5f53\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u4e3a $i$\uff0c\u957f\u5ea6\u4e3a $j$ \u662f\u5426\u53ef\u884c\u3002\u8f6c\u79fb\u5c31\u5341\u5206\u7b80\u5355\u4e86\uff0c\u5148\u67e5\u770b\u4e00\u4e0b\u5b57\u7b26\u4e32\u4e2d\u7b2c $j$ \u4e2a\u5143\u7d20\u662f U \u8fd8\u662f D\uff0c\u7136\u540e\u518d\u8fdb\u884c\u66b4\u529b\u679a\u4e3e\u8f6c\u79fb\u3002\u72b6\u6001\u4e3a $O(n^2)$ \u4e2a\uff0c\u8f6c\u79fb\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\u3002\u4e5f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5c06\u8f6c\u79fb\u4f18\u5316\u5230 $O(\\log n)$\u3002\u8fd9\u6837\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2 \\log n)$\u3002\n\n\u663e\u7136\u8fd9\u9898\u7684\u6b63\u89e3\u4e3a DP\uff08\u6bd5\u7adf\u8fd9\u662f\u4e2a\u6700\u4f18\u6027\u95ee\u9898\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u4f7f\u7528\u8d2a\u5fc3\uff09\uff0c\u4f46\u662f\u72b6\u6001\u5df2\u7ecf\u6709 $O(n^2)$ \u4e2a\u4e86\uff0c\u90a3\u6211\u4eec\u8be5\u600e\u4e48\u529e\u5462\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8be5\u95ee\u9898\u7684\u5f31\u5316\u7248\uff1a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u4f17\u6240\u5468\u77e5\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u53ea\u6709 $O(n \\log n)$\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ea\u80fd\u7528\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u65b9\u6cd5\u6c42\u89e3\u8fd9\u9053\u9898\u3002\u8fd9\u9898\u6ca1\u6709\u529e\u6cd5\u7528\u4e8c\u5206\u67e5\u627e\u4f18\u5316\uff0c\u6211\u4eec\u4fee\u6539\u4e00\u4e0b DP \u72b6\u6001\uff0c\u6539\u4e3a\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u3002\n\n\u5b9a\u4e49 $dp_i$ \u8868\u793a\u672b\u5c3e\u4e3a $i$ \u7684\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\u3002\u90a3\u6709\u6ca1\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u5c31\u662f\u8bf4\u4e00\u4e2a\u5b50\u5e8f\u5217\u4e0d\u662f\u6700\u957f\uff0c\u4f46\u662f\u66f4\u6709\u5229\u4e8e\u540e\u9762\u7684\u8f6c\u79fb\uff0c\u5373\u4e0d\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002\u5176\u5b9e\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6211\u4eec\u4e0d\u53ef\u80fd\u4e3a\u4e86\u540e\u9762\u7684\u8f6c\u79fb\u800c\u727a\u7272\u4e00\u7684\u4ee3\u4ef7\u3002\u6811\u72b6\u6570\u7ec4\u4f18\u5316\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 5;\nint a[N], n, dp[N];\nchar b[N];\nstruct Fen_wick {\n    int c[N];\n    inline void add(int x, int y) {\n        for (; x <= n; x += x & -x) c[x] = max(c[x], y);\n    }\n    inline int ask(int x, int v = 0) {\n        for (; x; x -= x & -x) v = max(v, c[x]);\n        return v;\n    }\n} t1, t2;\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n    scanf(\"%s\", b + 1);\n    int ans = 0;\n    for (int i = 1; i <= n; ++i) {\n        dp[i] = max(t1.ask(a[i] - 1), t2.ask(n - a[i])) + 1;\n        if (dp[i] != n)\n            if (b[dp[i]] == 'U')\n                t1.add(a[i], dp[i]);\n            else\n                t2.add(n - a[i] + 1, dp[i]);\n        ans = max(ans, dp[i]);\n    }\n    cout << ans - 1;\n}\n```",
        "postTime": 1667710979,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P8277 [USACO22OPEN] Up Down Subsequence P \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f:\n\n\u5373\u9009\u62e9\u539f\u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4f7f\u5f97\u5176\u6ee1\u8db3\u539f\u6765\u7684 $U$,$D$ \u5e8f\u5217\u3002\n\u8fd9\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a[\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898](https://zhuanlan.zhihu.com/p/112504092)\u3002\n\n\u6211\u770b\u5927\u5bb6\u7684\u9898\u89e3\u90fd\u662f\u7528\u6811\u72b6\u6570\u7ec4\u7684\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u3002\n\n~~(\u636e\u6211\u6240\u77e5\uff0c\u7ebf\u6bb5\u6811\u662fC++\u4e2d\u6700\u4e07\u80fd\u7684\u7b97\u6cd5)~~\n\n### \u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n\u539f\u6570\u7ec4\u7b2c $i$ \u4e2a\u6570\u5b57\u4e3a\u4e3a $a_i$ \u539f\u5b57\u7b26\u4e32\u4e3a $s_i$\u3002\n\n\u6700\u957f\u5339\u914d\u5e8f\u5217\u4e3a $f_i$\uff0c\n\u5f53\u524d\u5347\u5e8f\u5339\u914d\u5230 $u_i$\uff0c\n\u5f53\u524d\u964d\u5e8f\u5339\u914d\u5230 $d_i$\u3002\n\n\u8bbe $f_i$ \u4e3a\u5339\u914d\u5230 $i$ \u7684\u6700\u5927\u957f\u5ea6\u3002\n\n**(\u4e3a\u4e86\u907f\u514d\u6b67\u4e49\uff0c\u4ee5\u4e0a\u6570\u7ec4\u4e0b\u6807\u90fd\u4ece1\u5f00\u59cb)**\n\n1. \u5bf9\u4e8e\u524d\u9762\u6700\u5927\u65f6\u5339\u914d\u5230 $U$ \u7684\u6570\u5b57\uff0c\u53d6\u5728 $a_1$~$a_{i-1}$ \u4e2d\u8bbe $a_p<a_i$ \uff0c\u5219   $f_i=\\max(u_p+1)$\u3002\n\n2. \u5bf9\u4e8e\u524d\u9762\u6700\u5927\u65f6\u5339\u914d\u5230 $D$ \u7684\u6570\u5b57\uff0c\u53d6\u5728 $a_1$~$a_{i-1}$ \u4e2d\u8bbe $a_q>a_i$ \uff0c\u5219   $f_i=\\max(d_q+1)$\u3002\n\n\u7efc\u4e0a\uff0c$f_i=\\max(u_p,d_q)+1$\u3002\n\n\u5f53  $s_{f_i}='D'$ \u65f6\uff0c$d_i=f_i$,\n\u5f53  $s_{f_i}='U'$ \u65f6\uff0c$u_i=f_i$\u3002\n\n\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^{2})$\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0: $u$,$d$ \u6570\u7ec4\u90fd\u53ef\u4ee5\u7528\u4e24\u4e2a\u7ebf\u6bb5\u6811(\u6811\u72b6\u6570\u7ec4\u4e5f\u884c)\u6765\u7ef4\u62a4\u3002\n\u6bcf\u6b21\u628a $f_i$ \u63d2\u5165\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n\u6240\u4ee5\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 300010\nstruct tree\n{\n\t#define ls u<<1\n\t#define rs u<<1|1\n\t#define mid (l+r)/2\n\tint ans[N<<2];\n\ttree() { memset(ans,0,sizeof(ans)); }\n\tvoid pushup(int u) {ans[u] = max(ans[ls],ans[rs]);} \n\tvoid update(int u,int l,int r,int x,int y)\n\t{\n\t\tif(l == r)\n\t\t{\n\t\t\tans[u] = max(ans[u],y);\n\t\t\treturn;\n\t\t}\n\t\tif(x <= mid) update(ls,l,mid,x,y);\n\t\telse update(rs,mid+1,r,x,y);\n\t\tpushup(u);\n\t}\t\n\tint query(int u,int l,int r,int x,int y)\n\t{\n\t\tif(x > y) return 0;//\u6ce8\u610f\uff0c\u4e0d\u52a0\u8fd9\u4e00\u53e5\u4f1aRE\n\t\tif(x <= l&&r <= y) return ans[u];\n\t\tint ret = 0;\n\t\tif(x <= mid) ret = max(ret,query(ls,l,mid,x,y));\n\t\tif(y > mid) ret = max(ret,query(rs,mid+1,r,x,y));\n\t\treturn ret;\n\t}\n}t1,t2; \nint n,ans = 0,f[N],a[N];\nchar s[N];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;++i) scanf(\"%d\",&a[i]);\n\tcin >> (s+1);\n\tfor(int i = 1;i <= n;++i)\n\t{\n\t    f[i] = max(t1.query(1,1,n,1,a[i]-1),t2.query(1,1,n,a[i]+1,n)) + 1;\n\t\tif(s[f[i]] == 'U') t1.update(1,1,n,a[i],f[i]);\n\t\telse t2.update(1,1,n,a[i],f[i]);\n\t\tans = max(ans,f[i]);\n\t}\n\tprintf(\"%d\",ans - 1);//\u6ce8\u610f-1\n\treturn 0; \n}\n```\n",
        "postTime": 1662880069,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "P8277 \u9898\u89e3"
    },
    {
        "content": "\u4ee5\u4e0b\u6211\u4eec\u5c06 ```U``` \u7684\u6781\u957f\u8fde\u7eed\u6bb5\u79f0\u4e3a\u4e0a\u5347\u6bb5\uff0c ```D``` \u7684\u6781\u957f\u8fde\u7eed\u6bb5\u79f0\u4e3a\u4e0b\u964d\u6bb5\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u76f4\u89c2\u7684\u8d2a\u5fc3\uff1a\u5373\u7ef4\u62a4\u5f53\u524d\u7684\u5b50\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u627e\u5230\u6700\u8fd1\u7684\u6ee1\u8db3 $s$ \u9650\u5236\u7684\u4f4d\u7f6e\u3002\u4f46\u5f88\u9057\u61be\uff0c\u8fd9\u4e2a\u505a\u6cd5\u751a\u81f3\u5728 $s$ \u5168\u4e3a ```U``` \u65f6\u90fd\u662f\u9519\u7684\u3002\n\n\u4f46\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4eec\u542f\u793a\uff0c\u867d\u7136\u5728 LIS \u548c LDS \u95ee\u9898\u4e2d\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u5728\u4e0a\u5347\u6bb5\u548c\u4e0b\u964d\u6bb5\u4ea4\u6362\u65f6\u4f7f\u7528\u8fd9\u79cd\u8d2a\u5fc3\u7684\u65b9\u5f0f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5047\u8bbe $s_j$ \u4e3a ```D```\uff0c\u4e14\u63a5\u4e0b\u6765\u7684 $x$ \u4e2a\u4f4d\u7f6e\u90fd\u662f ```U```\u3002\u8003\u8651\u80fd\u548c $s_1 \\sim s_j$ \u5bf9\u5e94\u7684\u6240\u6709 $p$ \u7684\u5b50\u5e8f\u5217 $a$\uff0c\u8bbe\u5176\u7ed3\u5c3e\u4f4d\u7f6e $a_j$ \u7684\u6700\u5c0f\u503c\u4e3a $k$\uff0c\u6211\u4eec\u627e\u5230\u5728 $p_k \\sim p_n$ \u5185\u957f\u5ea6\u4e3a $x+1$ \u7684\uff0c\u7ed3\u5c3e\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u4e0a\u5347\u5b50\u5e8f\u5217 $b$\uff0c\u8bbe $b$ \u7684\u7ed3\u5c3e\u4f4d\u7f6e\u4e3a $k'$\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e $p$ \u7684\u80fd\u548c $s_1 \\sim s_{j + x}$ \u5bf9\u5e94\u7684\u5b50\u5e8f\u5217\uff0c\u5176\u7ed3\u5c3e\u4f4d\u7f6e\u4e00\u5b9a $\\geq k'$\u3002\u6211\u4eec\u65ad\u8a00\uff0c\u6839\u636e\u5e8f\u5217 $a$ \u548c $b$ \u4e00\u5b9a\u80fd\u591f\u6784\u9020\u51fa\u4e00\u4e2a\u5b50\u5e8f\u5217\u4f7f\u5f97\u5176\u548c $s_1 \\sim s_{j + x}$ \u5bf9\u5e94\uff0c\u4e14\u7ed3\u5c3e\u4f4d\u7f6e\u4e3a $k'$\u3002\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\u82e5 $a_j = b_0$\uff0c\u90a3\u5c31\u53ea\u9700\u8981\u628a\u5b83\u4eec\u62fc\u5728\u4e00\u8d77\u5c31\u884c\u4e86\u3002\u5426\u5219\uff0c\u6ce8\u610f\u5230\u6b64\u65f6\u4e00\u5b9a\u6709 $a_j > b_0$\uff0c\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u628a $a_j$ \u52a0\u5728\u5e8f\u5217 $b$ \u7684\u5f00\u5934\uff0c\u7136\u540e\u628a $b$ \u7684\u672b\u5c3e\u5143\u7d20\u5220\u6389\uff0c\u8fd9\u6837\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u7ed3\u5c3e\u4f4d\u7f6e\u66f4\u9760\u524d\u7684\u957f\u4e3a $x+1$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a $a_j$ \u5220\u6389\uff0c\u7136\u540e\u5c06 $b$ \u63a5\u5728\u540e\u9762\u5373\u53ef\u3002\n\n\u4ece ```U``` \u53d8\u4e3a ```D``` \u65f6\u540c\u7406\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u8d2a\u5fc3\u5728\u4e0d\u540c\u6bb5\u843d\u4ea4\u6362\u65f6\u90fd\u662f\u6210\u7acb\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u7b97\u6cd5\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6d41\u7a0b\u8fdb\u884c\uff1a\u5c06 $s$ \u5212\u5206\u6210\u82e5\u5e72\u4e0a\u5347\u6bb5\u548c\u4e0b\u964d\u6bb5\uff0c\u7ef4\u62a4\u5f53\u524d\u5b50\u5e8f\u5217\u7684\u7ed3\u5c3e\u4f4d\u7f6e $t$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u4e3a $x$ \u7684\u6bb5\uff0c\u6211\u4eec\u8bd5\u7740\u627e\u5230\u5728 $p_t \\sim p_n$ \u5185\u957f\u5ea6\u4e3a $x+1$ \u7684\uff0c\u7ed3\u5c3e\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u4e0a\u5347/\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u82e5\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u5e8f\u5217\uff0c\u8bbe\u5176\u7ed3\u5c3e\u4f4d\u7f6e\u4e3a $t'$\uff0c\u6211\u4eec\u5c06\u7b54\u6848\u52a0\u4e0a $x$\uff0c\u7136\u540e\u4ee4 $t \\gets t'$\uff0c\u5426\u5219\u5c06\u7b54\u6848\u52a0\u4e0a\u540e\u7f00\u7684 LIS \u6216 LDS \u7684\u957f\u5ea6\uff0c\u5e76\u7ed3\u675f\u8ba1\u7b97\u3002\n\n\u5bb9\u6613\u901a\u8fc7\u6811\u72b6\u6570\u7ec4\u4f18\u5316 DP \u6765\u7ef4\u62a4\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N = 3e5 + 5;\nint n, ans, a[N], q[N], c, f[N];\nstruct BIT {\n    int c[N];\n    void clr(int x) {\n        for (int i = x; i <= n; i += i & -i) c[i] = 0;\n    }\n    void mdf(int x, int v) {\n        for (int i = x; i <= n; i += i & -i) c[i] = max(c[i], v);\n    }\n    int qry(int x) {\n        int ret = 0;\n        for (int i = x; i >= 1; i -= i & -i) ret = max(ret, c[i]);\n        return ret;\n    }\n} t;\nint main() {\n    ios :: sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    string s;\n    cin >> s;\n    q[++c] = 1;\n    for (int i = 1; i < n - 1; i++) {\n        if (s[i] == s[i - 1]) {\n            q[c]++;\n        } else {\n            q[++c] = 1;\n        }\n    }\n    bool _ = s[0] == 'U';\n    int k = 1, j = 1;\n    for (int i = 1; i <= c; i++, _ ^= 1) {\n        if (j == n) \n            break;\n        k = j;\n        int x = q[i] + 1, val = 0;\n        if (_) {\n            f[j] = 1, t.mdf(a[j], 1);\n\n            while (j < n && f[j] < x) {\n                j++;\n                f[j] = t.qry(a[j]) + 1, t.mdf(a[j], f[j]);\n            }\n            while (k <= j) {\n                t.clr(a[k]), val = max(val, f[k]), k++;\n            } \n        } else {\n            f[j] = 1, t.mdf(n - a[j] + 1, 1);\n\n            while (j < n && f[j] < x) {\n                j++;\n                f[j] = t.qry(n - a[j] + 1) + 1, t.mdf(n - a[j] + 1, f[j]);\n            }\n            while (k <= j) {\n                t.clr(n - a[k] + 1), val = max(val, f[k]), k++;\n            } \n        }\n        if (j < n) {\n            ans += q[i];\n        } else {\n            ans += val - 1;\n        }\n    }\n    cout << ans << \"\\n\";\n    return 0;   \n}\n\n```\n",
        "postTime": 1674639042,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "P8277 [USACO22OPEN] Up Down Subsequence P"
    },
    {
        "content": "~~\u4e0d\u5f97\u4e0d\u8bf4\u6a21\u62df\u8d5b\u662f\u771f\u7684\u591a~~  \n\u9996\u5148\u4e00\u773c dp\uff0c\u8bbe $dp_i$ \u662f\u4ee5 $a_i$ \u4e3a\u7ed3\u5c3e\u65f6\u6700\u957f\u6ee1\u8db3\u8981\u6c42\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\uff0c\u628a\u65b9\u7a0b\u5217\u51fa\u6765\u3002\u8fd9\u91cc\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a  \n\u5f53 $s_{dp_j}=\\texttt{U}$ \u65f6\uff1a  \n$$dp_i=\\max^{i-1}_{j=1,a_j<a_i}dp_j+1$$\n\u5f53 $s_{dp_j}=\\texttt{D}$ \u65f6\uff1a  \n$$dp_i=\\max^{i-1}_{j=1,a_j>a_i}dp_j+1$$\n\u90a3\u4e48\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002  \n\u63a5\u7740\u8003\u8651\u4f18\u5316\u3002\u6211\u4eec\u9700\u8981\u5206\u522b\u5728 $\\texttt{U,D}$ \u4e24\u4e2a\u60c5\u51b5\u4e2d\u627e\u5230\u6700\u5927\u7684\u6ee1\u8db3\u6761\u4ef6\u7684 $dp_j$\uff0c\u800c $dp_j$ \u53c8\u9700\u8981\u6ee1\u8db3 $a_j<a_i$ \u6216 $a_j>a_i$\u3002\u90a3\u4e48\u5bb9\u6613\u60f3\u5230\u5f00\u4e24\u9897\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\u5c06 $a_i$ \u5f53\u4f5c\u4f4d\u7f6e\uff0c\u67e5\u8be2\u5c31\u627e\u524d\u540e\u7f00\u6700\u5927\u503c\uff0c\u66f4\u65b0\u5219\u6309\u7167\u5b57\u7b26\u6765\u66f4\u65b0\uff0c\u90a3\u4e48\u5c31\u505a\u5b8c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n# AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 3e5 + 10;\n\nint n, c1[MAXN], c2[MAXN];\n\ninline \nint lowbit(int k) {\n\treturn k & -k;\n}\n\ninline \nvoid add1(int k, int x) {\n\tfor (int i = k; i <= n; i += lowbit(i)) c1[i] = max(c1[i], x);\n}\n\ninline \nint query1(int k) {\n\tint res = 0;\n\tfor (int i = k; i; i -= lowbit(i)) res = max(res, c1[i]);\n\treturn res;\n}\n\ninline \nvoid add2(int k, int x) {\n\tfor (int i = k; i; i -= lowbit(i)) c2[i] = max(c2[i], x);\n}\n\ninline \nint query2(int k) {\n\tint res = 0;\n\tfor (int i = k; i <= n; i += lowbit(i)) res = max(res, c2[i]);\n\treturn res;\n}\n\nchar s[MAXN];\n\nint a[MAXN], dp[MAXN], ans;\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tscanf(\"%s\", s + 1);\n\tfor (int i = 1; i <= n; i++) {\n\t\tdp[i] = max(query1(a[i]), query2(a[i])) + 1;\n\t\ts[dp[i]] == 'U' ? add1(a[i], dp[i]) : add2(a[i], dp[i]);\n\t}\n\tfor (int i = 1; i <= n; i++) ans = max(ans, dp[i]);\n\tprintf(\"%d\", ans - 1);\n}\n```",
        "postTime": 1666774658,
        "uid": 406941,
        "name": "Register_int",
        "ccfLevel": 6,
        "title": "P8277 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8277)\n\n\u597d\u9898\uff0c\u4f46\u4f3c\u4e4e\u6ca1\u4eba\u53d1\u9898\u89e3\uff1f\n## \u601d\u8def\n\u5999\u5999\u9898\uff0c\u53d1\u73b0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u5f62\u6001\u662f\u7c7b\u4f3c\u8fd9\u6837\u7684\uff1a$\\verb!UUUDDDUUUDDDUUUDDD!$\uff0c\u90fd\u662f\u4e00\u6bb5 $\\verb!U!$ \u548c\u4e00\u6bb5 $\\verb!D!$ \u62fc\u8d77\u6765\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u6570\u5217\u662f**\u4e00\u6bb5\u4e0a\u5347\uff0c\u4e00\u6bb5\u4e0b\u964d**\u7684\u3002\n\n\u8fd9\u4e48\u4e00\u6765\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a**\u6734\u7d20**\u7684\u52a8\u89c4\uff0c\u4ece $1$ \u5f00\u59cb\u5411\u53f3\u626b\uff0c\u6bcf\u6b21 $O(n^2)$ \u6c42\u51fa\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u6700\u957f\u4e0a\u5347/\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u7ee7\u7eed\u626b\u3002\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$ \u7684\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8003\u8651\u4e00\u70b9\u70b9\u4f18\u5316\uff0c**\u628a\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e0b\u6765**\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4ece $1$ \u5f00\u59cb\u679a\u4e3e\uff0c\u7136\u540e\u8003\u8651\u628a $a_i$ \u63a5\u5230\u54ea\u91cc\u3002\u6211\u4eec\u628a\u524d\u9762\u5df2\u7ecf\u6c42\u51fa\u6765\u7684\u5e8f\u5217\u53d6\u4e2a $\\max$\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u5947\u5999\u7684\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff0c\u4f8b\u5982\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4\u524d\u9762\u5e8f\u5217\u7684\u6700\u5927\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6210\u529f\u964d\u4e3a $O(n \\log n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n## \u4ee3\u7801\n```cpp\n//A tree without skin will surely die. \n//A man without face is invincible.\n#include<bits/stdc++.h>\n#define int long long\n#define rint register int\nusing namespace std;\nint const N=3e5+10;\nint n,a[N];\nstruct Tree_Array{\n    int c[N<<2];\n    #define lowbit(x) (x&-x)\n    inline void update(int x,int v){while (x<=n) c[x]=max(c[x],v),x+=lowbit(x);}\n    inline int query(int x){int ans=0;while (x) ans=max(ans,c[x]),x-=lowbit(x);return ans;}\n} T1,T2;\n//up down\nsigned main(){\n    ios::sync_with_stdio(false);\n    cout.tie(0),cout.tie(0);\n    cin>>n;int ans=0;\n    for (int i=1;i<=n;++i) cin>>a[i];\n    string s;cin>>s;s=\" \"+s;\n    for (int i=1;i<=n;++i){\n        int l1=T1.query(a[i]-1);\n        int l2=T2.query(n-a[i]+1);\n        //\u4e3b\u8981\u662f\u6c42\u51fa a[i] \u80fd\u63a5\u7684\u5e8f\u5217\u7684\u6700\u5927\u503c\n        int l=max(l1,l2);\n        ans=max(ans,l);\n        if (s[l+1]=='U') T1.update(a[i],l+1);\n        else T2.update(n-a[i]+1,l+1);\n    }\n    cout<<ans<<'\\n';\n    return 0;\n}\n```\n",
        "postTime": 1662468086,
        "uid": 253608,
        "name": "Tx_Lcy",
        "ccfLevel": 7,
        "title": "P8277 [USACO22OPEN] Up Down Subsequence P"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ffb\u8bd1\u8bb2\u7684\u5df2\u7ecf\u5f88\u660e\u4e86\u4e86\u3002\n## \u89e3\u9898\u601d\u8def\n### \u7279\u6b8a\u6570\u636e\n\n\u9996\u5148\u770b\u5230\u7279\u6b8a\u6027\u8d28\uff1a\n\n> \u5b57\u7b26\u4e32\u4e2d\u7684 `U` \u5747\u5728 `D` \u4e4b\u524d\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u7279\u6b8a\u6027\u8d28\u7684\u5206\u5982\u4f55\u62ff\u4e0b\u3002\n\n\u663e\u7136\uff0c\u80fd\u591f\u6ee1\u8db3\u8be5\u9650\u5236\u7684\u6570\u5217\uff0c\u4e00\u5b9a\u662f\u5148\u4e0a\u5347\uff0c\u518d\u4e0b\u964d\u3002\u6240\u4ee5\u5f88\u7b80\u5355\uff0c\u5047\u8bbe\u6211\u4eec\u6709 $x$ \u4e2a `U`\uff0c\u518d\u52a0\u4e0a $y$ \u4e2a `D`\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5148\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $x$ \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u5982\u679c\u80fd\u591f\u6ee1\u8db3\u7684\u8bdd\uff0c\u518d\u63a5\u7740\u4e00\u4e2a\u957f\u5ea6\u4e3a $y$ \u7684\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n\n## \u4e00\u822c\u6570\u636e\n\u8fd9\u4e2a\u505a\u6cd5\u5bf9\u4e00\u822c\u7684\u6570\u636e\u6709\u4ec0\u4e48\u542f\u53d1\u5462\uff1f\n\n\u8003\u8651\u5bf9\u9898\u76ee\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u5206\u5272\uff0c\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u5272\u4e3a\u82e5\u5e72\u4e2a\u5168\u4e3a `U` \u7684\u5b57\u7b26\u4e32\u548c\u82e5\u5e72\u4e2a\u5168\u4e3a `D` \u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u4e00\u6bb5\u4e00\u6bb5\u6765\u5904\u7406\uff0c\u5148\u6c42\u4e00\u6bb5\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u518d\u6c42\u4e00\u6bb5\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u4e3a\u51e0\u6b65\uff1a\n\n1. \u627e\u5230\u8fd9\u4e00\u6bb5\u9700\u8981\u7684\u4e0a\u5347\u6216\u4e0b\u964d\u5b50\u5e8f\u5217\u6709\u591a\u957f\u3002\n\n2. \u7528\u52a8\u6001\u89c4\u5212\u6c42\u51fa\u6700\u957f\u4e0a\u5347/\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n\n3. \u627e\u5230\u6ee1\u8db3\u8fd9\u4e00\u6bb5\u957f\u5ea6\u8981\u6c42\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u52a8\u6001\u89c4\u5212\u7684\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\n\n4. \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u8981\u6c42\u7684\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e9b\u4f18\u5316\u7684\u95ee\u9898\u4e86\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u505a\u6cd5\u505a\uff0c\u679a\u4e3e\u6bcf\u4e2a\u6211\u4eec\u5206\u5272\u51fa\u6765\u7684\u5b57\u7b26\u4e32\uff0c\u8bb0\u5f55\u6bcf\u6b21\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\u4ece\u8be5\u4f4d\u7f6e\u8fdb\u884c $O(n^2)$ \u7684\u52a8\u6001\u89c4\u5212\uff0c\u8fd9\u6837\u662f $O(n^3)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ea\u80fd\u591f\u8fc7\u6700\u5c0f\u7684\u6570\u636e\u3002\n\n\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7ebf\u6bb5\u6811\u7b49\u6570\u636e\u7ed3\u6784\uff0c\u5c06\u52a8\u6001\u89c4\u5212\u7684\u8fc7\u7a0b\u4f18\u5316\u4e3a $O(n\\log n)$\uff0c\u8fd9\u6837\u662f $O(n^2\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e5f\u53ea\u80fd\u591f\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u6570\u636e\u68af\u5ea6\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8d2a\u5fc3\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u591a\u4e2a\u4e0a\u5347/\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u8fbe\u5230\u8981\u6c42\uff0c\u6211\u4eec\u4f1a\u9009\u53d6\u7ed3\u675f\u4f4d\u7f6e\u6700\u9760\u524d\u7684\uff0c\u8fd9\u6837\u663e\u7136\u662f\u4e0d\u4f1a\u66f4\u5dee\u7684\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u518d\u52a8\u6001\u89c4\u5212\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u65e6\u53d1\u73b0\u6709\u8fbe\u5230\u8981\u6c42\u7684\uff0c\u5c31\u53ef\u4ee5\u7acb\u523b\u9000\u51fa\uff0c\u7136\u540e\u518d\u53bb\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u5206\u5272\u51fa\u6765\u7684\u6bb5\u843d\u3002\u540c\u65f6\uff0c\u6bcf\u6b21\u8ba1\u7b97\u90fd\u662f\u4ece\u4e0a\u4e00\u6b21\u5f97\u5230\u7684\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u867d\u7136\u6211\u4eec\u5d4c\u5957\u4e86\u4e24\u91cd\u5faa\u73af\uff0c\u4f46\u6bcf\u4e2a\u5143\u7d20\u53ea\u4f1a\u88ab\u679a\u4e3e\u5230\u4e00\u6b21\uff0c\u518d\u52a0\u4e0a\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\uff0c\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u5b9e\u73b0\u8d77\u6765\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n## CODE\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 300010\n#define lson now << 1\n#define rson now << 1 | 1\nusing namespace std;\nstruct node{\n    int l, r;\n    int res, lazy_tag;\n};\nnode tree[MAXN << 2];\nint n, ans;\nint a[MAXN], dp[MAXN];\nchar s[MAXN];\nvoid push_up(int now){\n    tree[now].res = max(tree[lson].res, tree[rson].res);\n}\nvoid push_down(int now){\n    if(tree[now].lazy_tag != -1){\n        tree[lson].res = tree[now].lazy_tag;\n        tree[rson].res = tree[now].lazy_tag;\n        tree[lson].lazy_tag = tree[now].lazy_tag;\n        tree[rson].lazy_tag = tree[now].lazy_tag;\n        tree[now].lazy_tag = -1;\n    }\n}\nvoid build(int now, int l, int r){\n    tree[now].l = l; tree[now].r = r; tree[now].lazy_tag = -1;\n    if(tree[now].l == tree[now].r){\n        tree[now].res = 0;\n        return ;\n    }\n    int mid = (tree[now].l + tree[now].r) >> 1;\n    build(lson, l, mid); build(rson, mid + 1, r);\n    push_up(now);\n}\nvoid update(int now, int pos, int x){\n    if(tree[now].l == pos && tree[now].r == pos){\n        tree[now].res = x;\n        return ;\n    }\n    push_down(now);\n    int mid = (tree[now].l + tree[now].r) >> 1;\n    if(pos <= mid) update(lson, pos, x);\n    else update(rson, pos, x);\n    push_up(now);\n}\nvoid clear(int now, int l, int r){\n    if(tree[now].l >= l && tree[now].r <= r){\n        tree[now].lazy_tag = 0;\n        tree[now].res = 0;\n        return ;\n    }\n    push_down(now);\n    int mid = (tree[now].l + tree[now].r) >> 1;\n    if(r <= mid) clear(lson, l, r);\n    else if(l > mid) clear(rson, l, r);\n    else clear(lson, l, mid), clear(rson, mid + 1, r);\n    push_up(now);\n}\nint query(int now, int l, int r){\n    if(tree[now].l >= l && tree[now].r <= r){\n        return tree[now].res;\n    }\n    push_down(now);\n    int mid = (tree[now].l + tree[now].r) >> 1;\n    if(r <= mid) return query(lson, l, r);\n    else if(l > mid) return query(rson, l, r);\n    else return max(query(lson, l, mid), query(rson, mid + 1, r));\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 1; i <= n; i++) scanf(\"%d\",&a[i]);\n    scanf(\"%s\",s + 1);\n    build(1, 1, n); build(1, 1, n);\n    a[0] = s[1] == 'U' ? 0 : n + 1;\n    for(int i = 1, lst = 1; i < n && lst <= n; i++){\n        int j = i, op = s[i] == 'U' ? 0 : 1;\n        while(s[j] == s[i]) j++;\n        bool flag = false; int maxn = 0;\n        clear(1, 1, n); dp[lst] = 1; update(1, a[lst], 1);\n        for(int k = lst + 1; k <= n; k++){\n            if(op == 0) dp[k] = query(1, 1, a[k]) + 1;\n            if(op == 1) dp[k] = query(1, a[k], n) + 1;\n            maxn = max(maxn, dp[k] - 1);\n            if(dp[k] - 1 >= j - i){\n                flag = true;\n                lst = k;\n                break;\n            }\n            update(1, a[k], dp[k]);\n        }\n        if(flag == false || j == n){\n            ans = i + maxn - 1;\n            break;\n        }\n        i = j - 1;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1660889880,
        "uid": 547908,
        "name": "Hoshino_kaede",
        "ccfLevel": 7,
        "title": "P8277 [USACO22OPEN] Up Down Subsequence P \u9898\u89e3"
    },
    {
        "content": "# Perface\n\n\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c@Starbird \u5728\u5531\u300aUpTown Funk\u300b\u3002\u3002\u3002\n\n# Analysis\n\n\u4e00\u773c DP \uff08\u867d\u7136 @StarBird \u89c9\u5f97\u662f\u4e8c\u5206\uff09\u3002\n\n$f(i)$ \u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\uff0c\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5fc5\u987b\u88ab\u5305\u62ec\u5728\u5b50\u5e8f\u5217\u4e2d\uff0c\u6700\u957f\u7684\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u5bb9\u6613\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff0c\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\n\n$f(i) = \\max\\limits_{j=1}^{i-1}(f(j)+1)[s(f(j))=\\mathtt{'U'} \\land p_j<p_i \\bigvee s(f(j))=\\mathtt{'D'}\\land p_j > p_i]$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(N^2)$\u3002\n\n\u8003\u8651\u4f18\u5316\uff1a\n\n\u6211\u4eec\u4e0d\u59a8\u5bf9 $\\mathtt{'U'}, \\mathtt{'D'}$ \u5404\u5f00\u4e00\u9897\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u540e\u7f00\u6700\u5927\u503c\uff0c\u5206\u522b\u8bb0\u4e3a $C_1, C_2$\u3002\n\n\u8bb0 $\\mathtt{query}(C,x)$ \u4e3a\u67e5\u8be2\u6811\u72b6\u6570\u7ec4 $C$ \u7684\u957f\u4e3a $x$ \u7684\u524d\u7f00\u6700\u5927\u503c\u3002\n\n\u8bb0 $\\mathtt{modify}(C, x, v)$ \u4e3a\u5bf9\u6811\u72b6\u6570\u7ec4 $C$ \u7684\u957f\u4e3a $x$ \u7684\u524d\u7f00\u5bf9 $v$ \u53d6 $\\max$\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u88ab\u4f18\u5316\u4e3a\uff1a\n\n$f(i)=\\max(\\mathtt{query}(C_1, p_i)), \\mathtt{query}(C_2, n-p_i+1))+1$\u3002\n\n\u82e5 $s(f(i))=\\mathtt{'U'}$\uff0c$\\mathtt{modify}(C1,p_i,f_i)$\u3002\n\n\u82e5 $s(f(i))=\\mathtt{'D'}$\uff0c$\\mathtt{modify}(C_2,n-p_i+1,f_i)$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(N\\log N)$\u3002\n# CODE\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 301000;\n\nint n, p[N], dp[N], c1[N], c2[N];\nchar s[N];\n\nvoid modify(int *c, int x, int v) {\n\tfor (; x <= n; x += x & (-x))\n\t\tc[x] = max(c[x], v); \n}\n\nint query(int *c, int x) {\n\tint s = 0;\n\tfor (; x; x -= x & (-x))\n\t\ts = max(s, c[x]);\n\treturn s;\n}\n\nvoid modify(int i) {\n\tif (s[dp[i]] == 'U') modify(c1, p[i], dp[i]);\n\telse modify(c2, n - p[i] + 1, dp[i]);\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", p + i);\n\tscanf(\"%s\", s + 1);\n\tdp[1] = 1; modify(1);\n\tfor (int i = 2; i <= n; i++) {\n\t\tdp[i] = max(query(c1, p[i]), query(c2, n - p[i] + 1)) + 1;\n\t\tmodify(i);\n\t}\n\tprintf(\"%d\\n\", *max_element(dp + 1, dp + n + 1) - 1);\n}\n```",
        "postTime": 1666702825,
        "uid": 551375,
        "name": "junxis",
        "ccfLevel": 5,
        "title": "P8277 [USACO22OPEN] Up Down Subsequence P"
    }
]