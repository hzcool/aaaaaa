[
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[\u3010\u6a21\u677f\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f](https://www.luogu.org/problemnew/show/P5353)\n\n\u6211\u4eec\u5c1d\u8bd5\u628a\u666e\u901a SA \u6539\u6210\u6811\u4e0a SA\uff0c\u6240\u4ee5\u5148\u628a\u666e\u901a SA \u8d34\u4e0a\u6765\u3002\n\n```cpp\nnamespace SA {\n    int sa[N], rk[N], tp[N], tx[N];\n    \n    inline void tsort() {\n        for (int i = 1; i <= m; i++) tx[i] = 0;\n        for (int i = 1; i <= n; i++) ++tx[rk[i]];\n        for (int i = 1; i <= m; i++) tx[i] += tx[i-1];\n        for (int i = n; i; i--) sa[tx[rk[tp[i]]]--] = tp[i];\n    }\n\n    inline bool pd(int i, int w) {\n        return tp[sa[i-1]] == tp[sa[i]] && tp[sa[i-1]+w] == tp[sa[i]+w];\n    }\n\n    inline void main() {\n        for (int i = 1; i <= n; i++) rk[i] = s[i] - 'a' + 1, tp[i] = i;\n        tsort();\n        for (int w = 1, p = 0; p < n; w <<= 1, m = p) {\n            p = 0;\n            for (int i = 1; i <= w; i++) tp[++p] = n - w + i;\n            for (int i = 1; i <= n; i++) if (sa[i] > w) tp[++p] = sa[i] - w;\n            tsort(), swap(rk, tp), rk[sa[1]] = p = 1;\n            for (int i = 2; i <= n; i++) rk[sa[i]] = pd(i, w) ? p : ++p;\n        }\n    }\n}\n```\n\n\u60f3\u8981\u628a\u666e\u901a SA \u6539\u6210\u6811\u4e0a SA\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n1. $tsort$ \u51fd\u6570\u80af\u5b9a\u662f\u4e0d\u7528\u6539\u7684\uff1b\n2. $pd$ \u51fd\u6570\u53ef\u4ee5\u7528\u6811\u4e0a\u500d\u589e\u5b9e\u73b0\uff1b\n3. $main$ \u51fd\u6570\u4f3c\u4e4e\u4e5f\u5f88\u597d\u6539\uff1f\n\n\u4e8e\u662f\u5f00\u59cb\u6539\u6539\u6539\uff0c\u7a81\u7136\u53d1\u73b0\u6709\u4e2a\u95ee\u9898\uff1a**\u7531\u4e8e\u5e8f\u5217\u4e0a\u6bcf\u4e2a\u540e\u7f00\u957f\u5ea6\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u51fa\u73b0\u5b8c\u5168\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u662f\u5728\u6811\u4e0a\u662f\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u3002**\n\n\u7136\u540e\u5c31\u6ca1\u529e\u6cd5\u4e86\u4e48\uff1f\n\n\u529e\u6cd5\u80af\u5b9a\u662f\u6709\u7684~~\u8981\u4e0d\u7136\u8fd9\u9053\u9898\u662f\u548b\u51fa\u51fa\u6765\u7684~~\u3002\n\n\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e0b\uff0c\u5728\u500d\u589e\u7684\u6bcf\u4e00\u8f6e\uff0c**\u57fa\u6570\u6392\u5e8f**\u7a76\u7adf\u8981\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\uff1f\n\n\u5bf9\u4e8e\u666e\u901a SA\uff0c\u5728\u500d\u589e\u7684\u6bcf\u4e00\u8f6e\uff0c\u5047\u8bbe\u5df2\u7ecf\u5bf9\u6240\u6709\u957f\u5ea6\u4e3a $x$ \u7684\u4e32\u6392\u597d\u5e8f\u4e86\u3002\u201c\u7b2c\u4e00\u5173\u952e\u5b57\u201d\u548c\u201c\u7b2c\u4e8c\u5173\u952e\u5b57\u201d\u4ee3\u8868\u4e86\u4e24\u4e2a\u9996\u5c3e\u76f8\u63a5\u7684\u957f\u5ea6\u4e3a $x$ \u7684\u4e32\uff0c\u79f0\u4e3a\u201c\u4e3b\u4e32\u201d\u548c\u201c\u6b21\u4e32\u201d\u3002\u57fa\u6570\u6392\u5e8f\u901a\u8fc7 $O(n)$ \u7684\u65f6\u95f4\uff0c\u5c06\u6bcf\u4e00\u5bf9\u201c\u4e3b\u4e32\u201d\u548c\u201c\u6b21\u4e32\u201d**\u5408\u5e76**\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a $2x$ \u7684\u65b0\u4e32\u5e76\u4fdd\u6301\u5408\u5e76\u540e**\u6709\u5e8f**\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1 $O(\\log n)$ \u6b21\u540e\uff0c\u6240\u6709\u540e\u7f00\u5448\u6709\u5e8f\u72b6\u6001\u3002\n\n\u5bf9\u4e8e\u6811\u4e0a SA\uff0c\u4e5f\u662f\u540c\u6837\u7684\u3002\u53ea\u4e0d\u8fc7\uff0c\u9664\u4e86\u201c\u4e3b\u4e32\u201d\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u201c\u6b21\u4e32\u201d\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ee5\u5916\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5408\u5e76\u540e\u7684\u6709\u5e8f\u6027\uff0c\u6211\u4eec\u8fd8\u8981\u989d\u5916\u5c06\u4e0a\u4e00\u8f6e\u7684\u6709\u5e8f\u72b6\u6001\u4f5c\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\u3002\u540c\u65f6\u7b2c\u4e8c\u5173\u952e\u5b57\u4e5f\u4e0d\u80fd\u7b80\u5355\u5730\u7528\u539f\u5148\u7684 $rk$ \u6570\u7ec4\u6784\u9020\uff08\u56e0\u4e3a $rk$ \u6570\u7ec4\u4f1a\u51fa\u73b0\u76f8\u540c\u7684\u6392\u540d\uff09\uff0c\u800c\u8981\u989d\u5916\u4f7f\u7528\u6ca1\u6709\u91cd\u590d\u7684\u6570\u7ec4\uff08\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684 $rkk$ \u6570\u7ec4\uff09\u6784\u9020\u3002\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e24\u6b21\u57fa\u6570\u6392\u5e8f\u6765\u8fbe\u5230\u76ee\u7684\uff0c\u5177\u4f53\u5b9e\u73b0\u8bf7\u53c2\u8003\u4ee3\u7801~~\u56e0\u4e3a\u8fd9\u8bf4\u5f97\u5b9e\u5728\u662f\u592a\u62bd\u8c61\u4e86~~\uff1a\n\n```cpp\nnamespace SA {\n    int sa[N], rk[N], rkk[N], tp[N], rk2[N], tx[N];\n\n    inline void tsort(int *sa, int *rk, int *tp, int m) {\n        for (int i = 0; i <= m; i++) tx[i] = 0;\n        for (int i = 1; i <= n; i++) ++tx[rk[i]];\n        for (int i = 1; i <= m; i++) tx[i] += tx[i-1];\n        for (int i = n; i; i--) sa[tx[rk[tp[i]]]--] = tp[i];\n    }\n\n    inline bool pd(int i, int t) {\n        return tp[sa[i-1]] == tp[sa[i]] && tp[f[t][sa[i-1]]] == tp[f[t][sa[i]]];\n    }\n\n    inline void main() {\n        int p = 0;\n        for (int i = 1; i <= n; i++) a[i] = s[i] - 'a' + 1, tp[i] = i;\n        tsort(sa, a, tp, n);\n        rk[sa[1]] = rkk[sa[1]] = p = 1;\n        for (int i = 2; i <= n; i++) {\n            rk[sa[i]] = a[sa[i-1]] == a[sa[i]] ? p : ++p;\n            rkk[sa[i]] = i;\n        }\n        for (int w = 1, t = 0; w < n; w <<= 1, ++t) {\n            for (int i = 1; i <= n; i++) rk2[i] = rkk[f[t][i]];\n            tsort(tp, rk2, sa, n);\n            tsort(sa, rk, tp, p);\n            swap(rk, tp);\n            rk[sa[1]] = rkk[sa[1]] = p = 1;\n            for (int i = 2; i <= n; i++) {\n                rk[sa[i]] = pd(i, t) ? p : ++p;\n                rkk[sa[i]] = i;\n            }\n        }\n    }\n}\n```",
        "postTime": 1557138964,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P5353 \u3010\u6a21\u677f\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f"
    },
    {
        "content": "## \u540e\u7f00\u5e73\u8861\u6811\n\n\u5f88\u591a\u4eba\u8bf4\u5b83\u662f\u5728\u7ebf\u7684\u540e\u7f00\u6570\u7ec4\uff0c\u5176\u5b9e\u6211\u611f\u89c9\u5b83\u7684\u529f\u80fd\u4e0d\u6b62\u4e8e\u6b64\u3002\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n\u66ff\u7f6a\u7f8a\u6811\n\n### \u539f\u7406\n\n\u540e\u7f00\u5e73\u8861\u6811\u662f\u4e00\u4e2a\u4ee5\u5b57\u5178\u5e8f\u4e3a\u5173\u952e\u5b57\u7684\u6709\u5e8f\u5b57\u7b26\u4e32\u96c6$X$\uff0c\u5b83\u53ef\u4ee5\u8d44\u74f7\u4e24\u79cd\u590d\u6742\u5ea6\u4e3a$O(\\log n)$\u7684\u64cd\u4f5c\uff1a\n\n- \u5411\u5b57\u7b26\u4e32\u96c6\u4e2d\u52a0\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a$1$\u7684\u5b57\u7b26\u4e32$S$\n\n- \u5411\u5b57\u7b26\u4e32\u96c6\u4e2d\u52a0\u5165\u5b57\u7b26\u4e32$xS$\uff0c\u5176\u4e2d$S \\in X$\n\n\u6240\u4ee5\uff0c\u5982\u679c\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u9006\u5e8f\u6267\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5b83\u5c31\u662f\u4e25\u683c\u7684\u201c\u540e\u7f00\u5e73\u8861\u6811\u201d\uff0c\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u4e5f\u5c31\u662f\u540e\u7f00\u6570\u7ec4\u3002\u4f46\u5176\u5b9e\u4e0a\uff0c\u89c2\u5bdf\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5b83\u5b8c\u5168\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6709\u6839\u6811\u68ee\u6797\u3002\n\n### \u5b9e\u73b0\n\n\u4e24\u79cd\u63d2\u5165\u64cd\u4f5c\u5b8c\u5168\u53ef\u4ee5\u89c6\u4e3a\u4e00\u79cd\u3002\u6211\u4eec\u8003\u8651\u8981\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32$xS$\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4ece\u6839\u5f00\u59cb\u4e0e\u5f53\u524d\u8282\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u8fdb\u5165\u5de6/\u53f3\u513f\u5b50\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u7a7a\u4f4d\u4e3a\u6b62\u3002\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u6bd4\u8f83\u8981\u63d2\u5165\u7684\u5b57\u7b26\u4e32\u548c\u8282\u70b9\u4e0a\u7684\u5b57\u7b26\u4e32\u3002\n\n\u663e\u7136\u6211\u4eec\u4e0d\u80fd$O(n)$\u66b4\u529b\u6bd4\u8f83\u3002\u8003\u8651\u5230\u8981\u63d2\u5165\u7684\u5b57\u7b26\u4e32$xS$\uff0c\u9664\u53bb\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e4b\u540e\u7684$S$\u5df2\u7ecf\u5728\u6811\u4e2d\uff0c\u5e76\u4e14\u6811\u662f\u6709\u5e8f\u7684\u3002\u90a3\u4e48\u5f53\u7b2c\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5229\u7528\u8fd9\u68f5\u6811\u8fdb\u884c$O(\\log n)$\u6bd4\u8f83\u540e\u9762\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u63d2\u5165\u64cd\u4f5c\u65f6$O(\\log ^ 2 n)$\u7684\u3002\n\n\u8003\u8651\u5982\u4f55\u8fdb\u884c$O(1)$\u6bd4\u8f83\uff0c\u6765\u505a\u5230\u5355\u6b21\u64cd\u4f5c\u662f$O(\\log n)$\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a$key$\u503c\u4ee3\u8868\u5728\u6811\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u9009\u53d6\u4e00\u4e2a\u5f88\u5927\u7684\u503c\u57df\uff0c\u6bcf\u6b21\u8fdb\u5165\u4e0b\u4e00\u5c42\u65f6\u6839\u636e\u5de6\u53f3\u513f\u5b50\u5c06\u503c\u57df\u6298\u534a\uff0c\u6700\u7ec8\u8282\u70b9\u7684\u503c\u5c31\u662f\u5f53\u524d\u503c\u57df\u7684$mid$\u503c\u3002\u5f53\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u5df2\u7ecf\u5728\u6811\u4e2d\u7684\u5b57\u7b26\u4e32\u65f6\uff0c\u76f4\u63a5\u6bd4\u8f83$key$\u503c\u5373\u53ef\uff0c\u590d\u6742\u5ea6$O(1)$\u3002\n\n\u5bf9\u4e8e\u5982\u4f55\u7ef4\u62a4\u5e73\u8861\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528\u66ff\u7f6a\u7f8a\u6811\uff0c\u6ce8\u610f\u5728\u91cd\u6784\u65f6\u8981\u91cd\u65b0\u8d4bkey\u503c\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\nconst int MAXN = 1e6 + 5;\nconst double LIM = 1e16;\nconst float Alpha = 0.7;\n\nint n;\nchar S[MAXN];\nint fa[MAXN];\nint rk[MAXN], sa[MAXN];\n\nnamespace SufTree{\n\tdouble val[MAXN];\n\tint siz[MAXN];\n\tint ch[MAXN][2];\n\tint tr[MAXN], cnt;\n\tint rt;\n\t\n\tvoid Update(int x) {\n\t\tsiz[x] = 1 + siz[ch[x][0]] + siz[ch[x][1]];\n\t}\n\t\n\tint Bad(int x) {\n\t\treturn 1.0 * siz[ch[x][0]] > Alpha * siz[x] || 1.0 * siz[ch[x][1]] > Alpha * siz[x];\n\t}\n\t\n\tint Comp(int x, int y) {\n\t\treturn S[x] < S[y] || (S[x] == S[y] && val[fa[x]] < val[fa[y]]);\n\t}\n\t\n\tvoid Pia(int x) {\n\t\tif (!x) return;\n\t\tPia(ch[x][0]);\n\t\ttr[++cnt] = x;\n\t\tPia(ch[x][1]);\n\t\tch[x][0] = ch[x][1] = 0;\n\t}\n\t\n\tvoid Rebuild(int &x, int l, int r, double lv, double rv) {\n\t\tif (l > r) return;\n\t\tint mid = (l + r) >> 1;\n\t\tdouble midv = (lv + rv) / 2;\n\t\tx = tr[mid];\n\t\tval[x] = midv;\n\t\tRebuild(ch[x][0], l, mid - 1, lv, midv);\n\t\tRebuild(ch[x][1], mid + 1, r, midv, rv);\n\t\tUpdate(x);\n\t}\n\t\n\tvoid Maintain(int &x, double lv, double rv) {\n\t\tif (Bad(x)) {\n//\t\t\tcerr << \"*\" << x;\n\t\t\tcnt = 0;\n\t\t\tPia(x);\n\t\t\tRebuild(x, 1, cnt, lv, rv);\n\t\t}\n\t}\n\t\n\tvoid Insert(int &x, int idx, double lv, double rv) {\n\t\tif (!x) {\n\t\t\tx = idx;\n\t\t\tsiz[x] = 1;\n\t\t\tch[x][0] = ch[x][1] = 0;\n\t\t\tval[x] = (lv + rv) / 2;\n\t\t\treturn;\n\t\t}\n\t\tif (Comp(idx, x)) Insert(ch[x][0], idx, lv, val[x]);\n\t\telse Insert(ch[x][1], idx, val[x], rv);\n\t\tUpdate(x);\n\t\tMaintain(x, lv, rv);\n\t}\n\t\n\tvoid Calc(int x) {\n\t\tif (!x) return;\n\t\tCalc(ch[x][0]);\n\t\tsa[++cnt] = x;\n\t\tCalc(ch[x][1]);\n\t}\n\t\n\tvoid Build() {\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tInsert(rt, i, 1, LIM);\n\t\t}\n\t\tcnt = 0;\n\t\tCalc(rt);\n\t\tfor (int i = 1; i <= n; i++) rk[sa[i]] = i;\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 2; i <= n; i++) scanf(\"%d\", fa + i);\n\tscanf(\"%s\", S + 1);\n\tSufTree::Build();\n\tfor (int i = 1; i <= n; i++) printf(\"%d \", sa[i]);\n\treturn 0;\n}\n/*\n10 5\nS 0\nY 1\nR 2\nE 3\nN 4\nE 5\nA 6\nD 7\nY 7\nR 9\nRY\nE\nN\nS\nAY\n*/\n  \n```",
        "postTime": 1583657750,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5353 \u3010\u3010XR-1\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u500d\u589e\u540e\u7f00\u6392\u5e8f+\u54c8\u5e0c\u5373\u53ef\u3002\n\n\u9996\u5148\u786e\u4fdd\u4f60\u4f1a\u500d\u589e\u540e\u7f00\u6392\u5e8f\u3002\n\n\u7136\u540e\uff0c\u8fd9\u9898\u653e\u5728\u4e86\u6811\u4e0a\uff0c\u5b9e\u9645\u4e0a\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u53ea\u9700\u8981\u9884\u5904\u7406\u4e00\u4e0b\u6811\u4e0a\u500d\u589e\u6570\u7ec4\uff0c\u7136\u540e\u50cf\u539f\u6765\u4e00\u6837\uff0c\u6bcf\u6b21\u628a\u6392\u5e8f\u7528\u5173\u952e\u5b57\u957f\u5ea6\u6269\u5927\u4e00\u500d\uff0c\u57fa\u6570\u6392\u5e8f\u5373\u53ef\u3002\n\n\u91cd\u70b9\u5728\u4e8e\u5982\u4f55\u89e3\u51b3\u91cd\u590d\u7684\u95ee\u9898\u3002\n\n\u5728\u540e\u7f00\u6570\u7ec4\u4e0a\uff0c\u91cd\u590d\u7684\u4e32\u663e\u7136\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\u3002\u7531\u4e8e\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa\u4e86\u6bd4\u8f83\u65b9\u5f0f\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709\u533a\u95f4\u627e\u51fa\u6765\uff0c\u7136\u540e\u5206\u522b```sort```\u4e00\u904d\u5373\u53ef\u3002\u7531\u4e8e\u6392\u5e8f\u9700\u8981\u7528\u5230\u7236\u4eb2\u7684```rank```\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5bf9\u957f\u5ea6\u8f83\u5c0f\uff08\u6df1\u5ea6\u8f83\u6d45\uff09\u7684\u8282\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u66f4\u65b0\u4e00\u4e0b```rank```\u6570\u7ec4\u7684\u503c\u5373\u53ef\u3002\n\n\u5982\u4f55\u5feb\u901f\u5224\u65ad\u4e24\u4e2a\u4e32\u662f\u5426\u76f8\u7b49\uff1f\u4e0d\u96be\u60f3\u5230\u7528\u54c8\u5e0c\u3002\n\n\u81f3\u6b64\u95ee\u9898\u89e3\u51b3\u4e86\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a$O(n\\log n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<iostream>\n#include<vector>\n#include<utility>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int N=5e5+5,base1=20041001,base2=20040607,md1=167772161,md2=104857601;\nint n,F[19][N],head[N],cnt,dep[N],x[N],y[N],c[N],sa[N],hx1[N],hx2[N];\nchar s[N];\nvector<int>vec[N],vd[N];\nvector<pair<int,int>>pd[N];\nstruct edge{\n\tint to,nxt;\n}e[N];\nvoid dfs(int now){\n\thx1[now]=((LL)hx1[F[0][now]]*base1+s[now])%md1,hx2[now]=((LL)hx2[F[0][now]]*base2+s[now])%md2;\n\tfor(int i=head[now];i;i=e[i].nxt)dep[e[i].to]=dep[now]+1,F[0][e[i].to]=now,dfs(e[i].to);\n}\nvoid ssort(){\n\tint m=256;\n\tfor(int i=1;i<=m;++i)c[i]=0;\n\tfor(int i=1;i<=n;++i)++c[x[i]=s[i]];\n\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\tfor(int i=n;i;--i)sa[c[x[i]]--]=i;\n\tfor(int k=0;1<<k<=n;++k){\n\t\tfor(int i=1;i<=n;++i)vec[i].clear();\n\t\tfor(int i=1;i<=n;++i)if(F[k][i])vec[F[k][i]].push_back(i);\n\t\tint p=0;\n\t\tfor(int i=1;i<=1<<k;++i)\n\t\tfor(int j:vd[i])y[++p]=j;\n\t\tfor(int i=1;i<=n;++i)\n\t\tfor(int j:vec[sa[i]])y[++p]=j;\n\t\tfor(int i=1;i<=m;++i)c[i]=0;\n\t\tfor(int i=1;i<=n;++i)++c[x[i]];\n\t\tfor(int i=1;i<=m;++i)c[i]+=c[i-1];\n\t\tfor(int i=n;i;--i)sa[c[x[y[i]]]--]=y[i];\n\t\tstd::swap(x,y);\n\t\tx[sa[1]]=p=1;\n\t\tfor(int i=2;i<=n;++i)\n\t\tx[sa[i]]=(y[sa[i]]==y[sa[i-1]]&&y[F[k][sa[i]]]==y[F[k][sa[i-1]]]?p:++p);\n\t\tif(p==n)break;\n\t\tm=p;\n\t}\n}\ninline int cmp(int a,int b){return F[0][a]!=F[0][b]?x[F[0][a]]<x[F[0][b]]:a<b;}\nint main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n;\n\tfor(int i=2;i<=n;++i){\n\t\tint&f=F[0][i];\n\t\tcin>>f;\n\t\te[++cnt]=(edge){i,head[f]},head[f]=cnt;\n\t}\n\tcin>>(s+1);\n\tdfs(dep[1]=1);\n\tfor(int i=1;i<=n;++i)vd[dep[i]].push_back(i);\n\tfor(int i=1;i<19;++i)\n\tfor(int j=1;j<=n;++j)\n\tF[i][j]=F[i-1][F[i-1][j]];\n\tssort();\n\tint lst=1;\n\tfor(int i=2;i<=n+1;++i)\n\tif(hx1[sa[i]]!=hx1[sa[i-1]]||hx2[sa[i]]!=hx2[sa[i-1]])pd[dep[sa[i-1]]].emplace_back(lst,i-1),lst=i;\n\tfor(int i=1;i<=n;++i)\n\tfor(auto j:pd[i]){\n\t\tsort(sa+j.first,sa+j.second+1,cmp);\n\t\tfor(int k=j.first;k<=j.second;++k)\n\t\tx[sa[k]]=k;\n\t}\n\tfor(int i=1;i<=n;++i)cout<<sa[i]<<' ';\n\treturn 0;\n}\n```",
        "postTime": 1557389624,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5353 \u3010\u3010\u6a21\u677f\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "~~\u8fd9\u4e2a\u6b8b\u9177\u7684\u4e16\u754c...\u5b57\u6bcd\u7684\u5b57\u5178\u5e8f\u6bd4\u8f83\u662f\u4ece\u4e0b\u5f80\u4e0a\u6bd4\uff0c\u4e3a\u5565\u7f16\u53f7\u7684\u5b57\u5178\u5e8f\u6bd4\u8f83\u5c31\u662f\u4ece\u4e0a\u5f80\u4e0b\u6bd4...\u6545\u610f\u907f\u5f00\u666e\u901a\u4eba\u7684\u903b\u8f91\uff1f~~\n\n\u8fd9\u9053\u9898\uff0c\u80af\u5b9a\u548c\u540e\u7f00\u6392\u5e8f\u6709\u5173\u54af\u3002\u6211\u4eec\u7c7b\u6bd4\u540e\u7f00\u6392\u5e8f\u7684\u500d\u589e\u7b97\u6cd5\uff0c\u4e5f\u5c1d\u8bd5\u6765\u500d\u589e\u3002\n\n\u5176\u5b9e\u5927\u81f4\u601d\u8def\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u5bf9\u5e8f\u5217\u7684\u6392\u5e8f\uff0c\u6211\u4eec\u6bcf\u6b21\u5728\u6bcf\u4e2a\u4e32\u540e\u63a5\u4e0a\u65b0\u4e32\uff1b\u5bf9Trie\u6811\u7684\u6392\u5e8f\uff0c\u6211\u4eec\u6bcf\u6b21\u4ece\u6bcf\u4e2a\u70b9\u5230$2^k$\u7ea7\u7956\u5148\u7684\u8def\u5f84\uff0c\u6269\u5c55\u5230$2^{k+1}$\u7ea7\u7956\u5148\u3002\n\n\u5982\u679c\u7f16\u53f7\u7684\u5b57\u5178\u5e8f\u6bd4\u8f83\u662f\u4ece\u4e0b\u5f80\u4e0a\u6bd4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\u7136\u800c\u771f\u5b9e\u7684\u4e16\u754c\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0c\u4e3a\u4e86\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u201c\u4e09\u5173\u952e\u5b57\u6392\u5e8f\u201c\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662f$0-2^k$\u7ea7\u7956\u5148\u7684\u4e32\u7684**\u53ef\u91cd**\u6392\u540d\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f$2^k-2^{k+1}$\u7684\u4e32\u7684**\u4e0d\u53ef\u91cd**\u6392\u540d\uff0c\u7b2c\u4e09\u5173\u952e\u5b57\u662f\u662f$0-2^k$\u7ea7\u7956\u5148\u7684\u4e32\u7684**\u4e0d\u53ef\u91cd**\u6392\u540d\u3002\n\n*\u4e0a\u6587\u7684\u201c\u53ef\u91cd\u201d\u662f\u6307\u53ea\u8003\u8651\u4e32\uff0c\u4e0d\u8003\u8651\u7f16\u53f7*\n\n**\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u540d\u662f\u4e0d\u53ef\u91cd\u7684\uff1f**\n\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u4e32\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u6bd4\u8f83\u7b2c\u4e09\u5173\u952e\u5b57\u4e86\uff0c\u56e0\u4e3a\u8fd9\u65f6\u6211\u4eec\u5e94\u8be5\u8003\u8651\u7f16\u53f7\u7684\u4e0d\u540c\uff0c\u800c\u7f16\u53f7\u662f\u4ece\u4e0a\u5230\u4e0b\u6bd4\u8f83\u7684\uff0c\u6240\u4ee5\u9760\u4e0a\u7684\u7f16\u53f7\u5df2\u7ecf\u80fd\u5b8c\u5168\u533a\u5206\u5b83\u4eec\u4e86\u3002\n\n**\u4e3a\u4ec0\u4e48\u7b2c\u4e09\u5173\u952e\u5b57\u7684\u6392\u540d\u662f\u4e0d\u53ef\u91cd\u7684\uff1f** \u56e0\u4e3a\u5982\u679c\u524d\u4e24\u4e2a\u5173\u952e\u5b57\u76f8\u540c\uff0c\u7b2c\u4e09\u5173\u952e\u5b57\u4e0d\u540c\uff0c\u8bf4\u660e\u5b83\u4eec\u7684\u4e32\u76f8\u540c\uff0c\u4e0a\u8fb9\u7684\u7f16\u53f7\u4e5f\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u6bd4\u8f83\u9760\u4e0b\u90e8\u5206\u7684\u7f16\u53f7\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7b2c\u4e00\u6b21\u6392\u5e8f\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\uff0c\u7ed3\u5408\u4e09\u5173\u952e\u5b57\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6700\u7ec8\u5c31\u662f\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002\n\n\u600e\u6837\u4e09\u5173\u952e\u5b57\u6392\u5e8f\uff1f\u5148\u5408\u5e76\u540e\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u518d\u548c\u7b2c\u4e00\u4e2a\u5408\u5e76\u3002\n\n\n```cpp\n#define N 500005\nint n;\nvoid rsort(int m,int one[],int two[],int res[])\n{\n    static int buk[N];\n    for(ri i=1; i<=n; ++i) ++buk[one[i]];\n    for(ri i=1; i<=m; ++i) buk[i]+=buk[i-1];\n    for(ri i=n; i>=1; --i) res[buk[one[two[i]]]--]=two[i];\n    for(ri i=0; i<=m; ++i) buk[i]=0;\n}\nint fa[N];\nchar s[N];\nint sa[N],_rk[N],_tp[N];\nauto rk=_rk,tp=_tp;\nint rk2[N],st[N];\nvoid solve()\n{\n    for(ri i=1; i<=n; ++i) rk[i]=s[i],tp[i]=i;\n    rsort(128,rk,tp,sa);\n    for(ri i=1; i<=n; ++i) rk2[sa[i]]=i;\n    for(ri w=1,p=0; w<n&&p<n; w<<=1)\n    {\n        for(ri i=1; i<=n; ++i) st[i]=rk2[fa[i]];\n        rsort(n,st,sa,tp);\n        rsort(w==1?128:p,rk,tp,sa);\n        swap(rk,tp);\n        rk2[sa[1]]=rk[sa[1]]=p=1;\n        for(ri i=2; i<=n; ++i)\n        {\n            rk[sa[i]]=(tp[sa[i]]==tp[sa[i-1]]&&tp[fa[sa[i]]]==tp[fa[sa[i-1]]])?p:++p;\n            rk2[sa[i]]=i;\n        }\n        bool hv=0;\n        for(ri i=n; i>=1; --i) fa[i]=fa[fa[i]],hv|=fa[i];\n        if(!hv) break;\n    }\n}\nsigned main()\n{\n#ifdef M207\n    freopen(\"in.in\",\"r\",stdin);\n    // freopen(\"ot.out\",\"w\",stdout);\n#endif\n    in(n);\n    for(ri i=2; i<=n; ++i) in(fa[i]);\n    scanf(\"%s\",s+1);\n    solve();\n    prt(sa+1,n);\n    return 0;\n}\n```\n",
        "postTime": 1557197527,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "~~\u6c34\u535a\u5ba2\u592a\u5feb\u4e50\u4e86\u3002\u3002\u3002~~\n\n**\u667a\u5546\u4e0d\u591f\uff0c SAM \u6765\u51d1**\n\n\u540e\u7f00\u7cfb\u5217\u9898\u76ee\u5c45\u7136\u6ca1\u6709 SAM \u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d1\u7f62\uff0c ~~\u867d\u7136\u672c\u6765\u662f\u60f3\u8d3a\u4e00\u53d1\u7684~~\u3002\n\n~~\u672c\u849f\u84bb\u53ea\u4f1a\u65e0\u8111 SAM \uff0c\u54ea\u4f4d\u9e3d\u9e3d\u7ed9\u54b1\u6559\u80b2\u4e00\u4e0bSA\u554a?~~\n\n~~\u8fd9\u9898 SA \u8c8c\u4f3c\u771f\u7684\u6bd4 SAM \u597d\u5199\u7684\u591a\u3002\u3002\u3002~~\n\n# \u540e\u7f00\u81ea\u52a8\u673a\u505a\u6cd5\n\n\u65e2\u7136\u662f\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\uff0c\u90a3\u4e48\u4e0d\u59a8\u5148\u8003\u8651\u5728\u5e8f\u5217\u4e0a\u8be5\u600e\u4e48\u505a\u3002\u6700\u5bb9\u6613\u60f3\u5230\u7684\u662f\u5efa\u51fa\u53cd\u4e32\u7684 SAM \u3002\u90a3\u6211\u4eec\u8003\u8651\u5c06\u8fd9\u4e2a\u505a\u6cd5\u8f6c\u79fb\u5230\u6811\u4e0a\uff0c\u806a\u660e\u7684\u4f60\u60f3\u5fc5\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u5728\u6811\u4e0a\u6211\u4eec\u65e0\u6cd5\u5bf9\u53cd\u4e32\u505a SAM \uff0c~~\u4e8e\u662f\u8003\u8651\u653e\u5f03 SAM \uff0c\u5199 SA~~ \u3002\n\n\u91cd\u65b0\u8003\u8651\u5728\u5e8f\u5217\u4e0a\u7684\u505a\u6cd5\uff0c\u82e5\u53ea\u80fd\u5efa\u51fa\u6b63\u4e32\u7684 SAM \u8be5\u5982\u4f55\u6c42\u51fa\u5e8f\u5217\u7684\u540e\u7f00\u6570\u7ec4\u5462\uff1f\n\n\u4e0d\u8981\u5c40\u9650\u4e8e\u540e\u7f00\uff0c\u82e5\u6211\u4eec\u80fd\u6c42\u51fa SAM \u4e0a\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u53cd\u4e32\u7684\u5b57\u5178\u5e8f\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u90a3\u4e48\u95ee\u9898\u81ea\u7136\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86\u3002\u8003\u8651\u4ece Parent \u6811\u4e0a\u4e0b\u624b\uff0c\u6839\u636e Parent \u6811\u7684\u6027\u8d28\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u662f\u5f53\u524d\u8282\u70b9\u7684\u4e00\u4e2a\u540e\u7f00\uff0c\u7531\u6b64\u53ef\u5f97\uff0c\u5bf9\u4e8e Parent \u6811\u4e0a\u6bcf\u68f5\u5b50\u6811\uff0c\u5176\u53cd\u4e32\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u662f\u8fde\u7eed\u7684\uff0c\u4e14\u8fd9\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u662f\u5b50\u6811\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\u56e0\u6b64\uff0c\u82e5\u80fd\u80fd\u6c42\u51fa\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u513f\u5b50\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u4fbf\u80fd\u6c42\u51fa\u6240\u6709\u8282\u70b9\u7684\u76f8\u5bf9\u5927\u5c0f\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u7684\u76f8\u5bf9\u5927\u5c0f\u3002\n\n![SAM](https://cdn.luogu.com.cn/upload/image_hosting/nebt0xyf.png)\n\n\u56fe\u4e2d $u$ \u662f $v$ \u5728 Parent \u6811\u4e0a\u7684\u7236\u4eb2\uff0c\u5219 $u$ \u662f $v$ \u7684\u4e00\u4e2a\u540e\u7f00\uff0c\u90a3\u4e48\u51b3\u5b9a $v$ \u5728 $u$ \u513f\u5b50\u4e2d\u76f8\u5bf9\u5927\u5c0f\u7684\u663e\u7136\u662f $a$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u5efa\u51fa SAM \u540e\u7531 $u$ \u5411 $v$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a $a$ \u4f4d\u7f6e\u7684\u5b57\u7b26\uff0c\u904d\u5386 Parent \u6811\u65f6\u4f18\u5148\u904d\u5386\u8fb9\u6743\u5c0f\u7684\u8fb9\uff0c\u6700\u7ec8\u5f97\u5230\u7684 dfs \u5e8f\u5373\u4e3a\u6240\u6709\u8282\u70b9\u53cd\u4e32\u7684\u5b57\u5178\u5e8f\u76f8\u5bf9\u5927\u5c0f\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u662f\u5728\u6811\u4e0a\u7684\uff0c\u6240\u4ee5\u7528\u5e7f\u4e49 SAM \u5c31\u53ef\u4ee5\u4e86\uff0c\u67e5\u627e $a$ \u4f4d\u7f6e\u7684\u5b57\u7b26\u53ef\u4ee5\u7528\u6811\u4e0a $k$ \u7ea7\u7956\u5148\u5b9e\u73b0\u3002\n\n\u6b64\u65f6\u6211\u4eec\u60f3\u76f4\u63a5 sort \u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u800c\u9898\u76ee\u8fd8\u6709\u4e00\u4e2a\u8981\u6c42\uff0c\u5c31\u662f\u5b57\u5178\u5e8f\u76f8\u540c\u7684\u8282\u70b9\u8981\u4ee5\u7236\u4eb2\u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u4e0d\u96be\u53d1\u73b0\u6b64\u65f6\u7236\u4eb2\u7684\u5b57\u5178\u5e8f\u4e5f\u662f\u76f8\u540c\u7684\uff0c\u4e8e\u662f\u53ea\u80fd\u4e00\u76f4\u9012\u5f52\u4e0b\u53bb\u76f4\u5230 lca \u5904\uff0c\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u8282\u70b9\u6070\u5728 lca \u4e0b\u65b9\u7684\u7956\u5148\u7684\u7f16\u53f7\u5927\u5c0f\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n)$ \u4f46\u662f\u5b9e\u9645\u8dd1\u4e0b\u6765\u548c $O(n \\log n)$ \u5dee\u4e0d\u591a\u3002\n\n\u653e\u4e0b\u4ee3\u7801\u7f62\u3002\u3002\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#define fi first\n#define se second\nconst int N = 1e6 + 10;\n\nint read(void) {\n\tint f = 1, x = 0; char ch = getchar();\n\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getchar(); }\n\twhile(isdigit(ch)) { x = x * 10 + ch - 48; ch = getchar(); }\n\treturn f * x;\n}\n\nusing std::pair; using std::make_pair;\n\nint n, fa[N], top[N], dep[N], son[N], pos[N], siz[N], dfn[N], id[N], ind;\nstd::vector<int> l[N];\nchar ch[N];\n\nint K_an(int u, int k) {\n\twhile(k > dep[u] - dep[top[u]] + 1)\n\t\tk -= dep[u] - dep[top[u]] + 1, u = fa[top[u]];\n\treturn id[dfn[u] - k + 1];\n}\n\nstruct SAm {\n\tint to[N][26], link[N], len[N], pos[N], dfn[N], siz, ind;\n\tvoid init(void) { siz = 1; }\n\tint insert(char ul, int p, int id) {\n\t\tif(to[p][ul - 'a']) {\n\t\t\tint q = to[p][ul - 'a'];\n\t\t\tif(len[q] == len[p] + 1) return q;\n\t\t\telse {\n\t\t\t\tint cl = ++siz; len[cl] = len[p] + 1;\n\t\t\t\tmemcpy(to[cl], to[q], sizeof to[q]), link[cl] = link[q];\n\t\t\t\twhile(p && to[p][ul - 'a'] == q) to[p][ul - 'a'] = cl, p = link[p];\n\t\t\t\treturn pos[cl] = pos[q], link[q] = cl;\n\t\t\t}\n\t\t}\n\t\tint now = ++siz; len[now] = len[p] + 1, pos[now] = id;\n\t\twhile(p && !to[p][ul - 'a']) to[p][ul - 'a'] = now, p = link[p];\n\t\tif(!p) link[now] = 1;\n\t\telse {\n\t\t\tint q = to[p][ul - 'a'];\n\t\t\tif(len[q] == len[p] + 1) link[now] = q;\n\t\t\telse {\n\t\t\t\tint cl = ++siz; len[cl] = len[p] + 1;\n\t\t\t\tmemcpy(to[cl], to[q], sizeof to[q]), link[cl] = link[q];\n\t\t\t\twhile(p && to[p][ul - 'a'] == q) to[p][ul - 'a'] = cl, p = link[p];\n\t\t\t\tpos[cl] = pos[q], link[now] = link[q] = cl;\n\t\t\t}\n\t\t} return now;\n\t}\n\tstd::vector<pair<int, int> > l[N];\n\tvoid dfs(int u) {\n\t\tdfn[u] = ++ind;\n\t\tstd::sort(l[u].begin(), l[u].end());\n\t\tfor(pair<int, int> v : l[u]) dfs(v.se);\n\t}\n\tvoid solve(void) {\n\t\tfor(int i = 2; i <= siz; ++i)\n\t\t\tl[link[i]].push_back( { ch[K_an(pos[i], len[link[i]] + 1)], i } );\n\t\tdfs(1);\n\t}\n} S;\n\nvoid dfs1(int u) {\n\tdep[u] = dep[fa[u]] + 1, siz[u] = 1;\n\tpos[u] = S.insert(ch[u], pos[fa[u]], u);\n\tfor(int v : l[u]) {\n\t\tdfs1(v), siz[u] += siz[v];\n\t\tif(siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\nvoid dfs2(int u, int tp) {\n\ttop[u] = tp, id[dfn[u] = ++ind] = u;\n\tif(son[u]) dfs2(son[u], tp);\n\tfor(int v : l[u]) if(v ^ son[u]) dfs2(v, v);\n}\nbool chk(int u, int v) {\n\tint x = u, y = v;\n\twhile(top[u] ^ top[v]) {\n\t\tif(dep[top[u]] > dep[top[v]]) u = fa[x = top[u]];\n\t\telse v = fa[y = top[v]];\n\t} return u == v ? x < y : dep[u] < dep[v] ? x < son[u] : son[v] < y;\n}\n\npair<int, int> p[N];\nbool cmp(pair<int, int> x, pair<int, int> y)\n\t{ return x.fi ^ y.fi ? x.fi < y.fi : chk(x.se, y.se); }\n\nsigned main(void) {\n\tn = read(), pos[0] = 1, S.init();\n\tfor(int i = 2; i <= n; ++i)\n\t\tl[fa[i] = read()].push_back(i);\n\tscanf(\"%s\", ch + 1), dfs1(1), dfs2(1, 1); S.solve();\n\tfor(int i = 1; i <= n; ++i) p[i] = { S.dfn[pos[i]], i };\n\tstd::sort(p + 1, p + 1 + n, cmp);\n\tfor(int i = 1; i <= n; ++i) printf(\"%d \", p[i].se);\n\treturn puts(\"\"), 0;\n}\n```",
        "postTime": 1652348038,
        "uid": 109634,
        "name": "Cyber_Tree",
        "ccfLevel": 0,
        "title": "P5353 \u6811\u4e0a\u540e\u7f00\u6392\u5e8f SAM \u9898\u89e3"
    },
    {
        "content": "\u901a\u8fc7\u672c\u9898\uff0c\u6211\u5bf9\u540e\u7f00\u6570\u7ec4\u7684\u7406\u89e3\u53c8\u6df1\u4e86\u8bb8\u591a\u3002\n\n\u9996\u5148\u8fd9\u662f\u6211\u666e\u901aSA\u7684\u4ee3\u7801\uff1a\n\n```cpp\nnamespace Suffix_Array{\n\tconst int N=1010000;\n\tint x[N],y[N],sa[N],buc[N],n,m,s[N];\n\tvoid SA(){\n\t\tfor(int i=1;i<=n;i++)buc[x[i]=s[i]]++;\n\t\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\t\tfor(int i=n;i;i--)sa[buc[x[i]]--]=i;\n\t\tfor(int k=1;k<=n;k<<=1){\n\t\t\tint num=0;\n\t\t\tfor(int i=n-k+1;i<=n;i++)y[++num]=i;\n\t\t\tfor(int i=1;i<=n;i++)if(sa[i]>k)y[++num]=sa[i]-k;\n\t\t\tfor(int i=0;i<=m;i++)buc[i]=0;\n\t\t\tfor(int i=1;i<=n;i++)buc[x[y[i]]]++;\n\t\t\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\t\t\tfor(int i=n;i;i--)sa[buc[x[y[i]]]--]=y[i],y[i]=0;\n\t\t\tswap(x,y);\n\t\t\tx[sa[1]]=num=1;\n\t\t\tfor(int i=2;i<=n;i++)x[sa[i]]=(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])?num:++num;\n\t\t\tif(num>=n)break;\n\t\t\tm=num;\n\t\t}\n\t}\n}\n```\n\u8bf4\u4e00\u4e0b\u5404\u6570\u7ec4\u7684\u542b\u4e49\uff1a\n\n$x$\uff1a\u524d\u4e00\u6b21\u6392\u5e8f\u540e\u7684 $rk$ \u6570\u7ec4\uff0c\u5373\u4f4d\u7f6e $i$ \u7684\u6392\u540d\uff08\u5bf9\u4e8e\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u6b64\u503c\u4e5f\u76f8\u540c\uff09\n\n$sa$\uff1a\u524d\u4e00\u6b21\u6392\u5e8f\u540e\u7684 $sa$ \u6570\u7ec4\uff0c\u5373\u6392\u540d\u4e3a $i$ \u7684\u4f4d\u7f6e\u3002\n\n$y$\uff1a\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\uff08\u540e\u534a\u6bb5\u5b57\u7b26\u4e32\uff09\u7684\u503c\u6392\u5e8f\u540e\u7684\u7ed3\u679c\n\n$buc$\uff1a\u6876\u3002\n\n------------\n\n\u73b0\u5728\u6211\u4eec\u8981\u628a\u5b83\u8f6c\u5230\u6811\u4e0a\uff0c\u6709\u4ec0\u4e48\u53d8\u5316\u5462\uff1f\n\n\u9996\u5148\uff0c\u5b83\u5bf9\u4e8e\u76f8\u540c\u7684\u4e32\u7684\u6bd4\u8f83\u65b9\u5f0f\u6211\u4eec\u5148\u4e0d\u7ba1\uff0c\u5c31\u5047\u8bbe\u6240\u6709\u4e32\u5747\u4e0d\u540c\u3002\n\n\u7136\u540e\uff0c\u5728\u5e8f\u5217\u4e0a\u6211\u4eec\u500d\u589e\u53ef\u4ee5\u76f4\u63a5\u8df3\u4e0b\u6807\uff0c\u5728\u6811\u4e0a\u500d\u589e\u5c31\u5fc5\u987b\u4f9d\u7167\u6811\u4e0a\u500d\u589e\u7684 $anc$ \u6570\u7ec4\u4e86\u3002\n\n------------\n\n\u6211\u4eec\u5c06\u4e0a\u8ff0\u4ee3\u7801\u622a\u6210\u56db\u6bb5\uff0c\u5206\u522b\u662f\u9884\u5904\u7406\u521d\u59cb\u6392\u5e8f\u7ed3\u679c\u3001\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3001\u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4ee5\u53ca\u7531\u6392\u5e8f\u7ed3\u679c\uff08$sa$ \u6570\u7ec4\uff09\u63a8\u51fa $x$\u3002\n\n\u660e\u663e\u521d\u59cb\u6392\u5e8f\u540c\u5e8f\u5217\u6392\u5e8f\u5e76\u65e0\u533a\u522b\u3002\n\n\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\uff08\u540e\u534a\u6bb5\u4e32\uff09\u6392\u5e8f\u7684\u90e8\u5206\uff1a\n\n1. \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u4e0d\u5b58\u5728 $k$ \u7ea7\u7956\u5148\uff0c\u663e\u7136\u5b83\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u7ed3\u679c\u5e94\u8be5\u5728\u6700\u524d\u9762\u3002\n\n2. \u5982\u679c\u4e00\u4e2a\u8282\u70b9\u5b58\u5728 $k$ \u7ea7\u7956\u5148\uff0c\u56e0\u4e3a\u4e24\u4e2a\u8282\u70b9\u53ef\u80fd\u6709\u76f8\u540c\u7684 $k$ \u7ea7\u7956\u5148\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u4ecd\u9700\u8981\u6392\u5e8f\u4e00\u4e0b\uff0c\u6309\u7167\u7956\u5148\u7684 $x$ \u6392\u5e8f\u3002\n\n\u6240\u4ee5\u5c31\u80fd\u9b54\u6539\u6210\u8fd9\u6837\uff1a\n\n```cpp\nint num=0;\nfor(int i=1;i<=m;i++)buc[i]=0;\nfor(int i=1;i<=n;i++)if(!anc[i][k])y[++num]=i;else ++buc[x[anc[i][k]]];\nfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\nfor(int i=n;i;i--)if(anc[i][k])y[num+buc[x[anc[i][k]]]--]=i;\n```\n\n\u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u5e76\u65e0\u533a\u522b\u3002\n\n\u63a8 $x$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u552f\u4e00\u533a\u522b\u5373\u5728\u4e8e\u5224\u65ad\u662f\u5426\u76f8\u7b49\u7684 $mat$ \u51fd\u6570\u3002\u6b64\u90e8\u5206\u7a0d\u7a0d\u9b54\u6539\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n```cpp\nbool mat(int i,int j,int k){\n\tif(y[i]!=y[j])return false;\n\tif(!anc[i][k]&&!anc[j][k])return true;\n\tif(anc[i][k]&&anc[j][k])return y[anc[i][k]]==y[anc[j][k]];\n\treturn false;\n}\n```\n\n------------\n\n\u4e0b\u9762\u6211\u4eec\u56de\u5230\u539f\u9898\u2014\u2014\u53ef\u80fd\u6709\u76f8\u540c\u7684\u4e32\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u4e4b\u524d\u7279\u610f\u63d0\u5230\u4e86\uff0c**\u5bf9\u4e8e\u76f8\u540c\u7684\u4e32\uff0c\u5b83\u4eec $x$ \u7684\u503c\u76f8\u540c**\u3002\u7136\u540e\u9898\u9762\u4e2d\u7684\u6bd4\u8f83\u65b9\u5f0f\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6309\u7167\u4f18\u5148\u904d\u5386\u5c0f\u7f16\u53f7\u8282\u70b9\u7684dfs\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002\u4e8e\u662f\u6211\u4eec\u4ee5\u6700\u540e\u4e00\u904d\u6392\u5e8f\u540e\u7684 $x$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cdfs\u5e8f\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u8fdb\u884c\u6392\u5e8f\uff0c\u5373\u5f97\u5230\u4e86\u6700\u7ec8\u7ed3\u679c\u3002\n\n\u6b64\u90e8\u5206\u53ca\u4e3b\u51fd\u6570\u4ee3\u7801\uff1a\n\n```cpp\nint tot,dfn[500100];\nvector<int>v[500100];\nvoid dfs(int x){\n\tdfn[x]=++tot;\n\tsort(v[x].begin(),v[x].end());\n\tfor(auto y:v[x])dfs(y);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=2;i<=n;i++)scanf(\"%d\",&anc[i][0]),v[anc[i][0]].push_back(i);\n\tfor(int j=1;j<=19;j++)for(int i=1;i<=n;i++)anc[i][j]=anc[anc[i][j-1]][j-1];\n\tscanf(\"%s\",s+1);for(int i=1;i<=n;i++)s[i]=s[i]-'a'+1;\n\tSA();\n\tdfs(1);\n\tfor(int i=1;i<=n;i++)sa[i]=i;\n\tsort(sa+1,sa+n+1,[](int u,int v){return x[u]==x[v]?dfn[u]<dfn[v]:x[u]<x[v];});\n\tfor(int i=1;i<=n;i++)printf(\"%d \",sa[i]);puts(\"\");\n//\tfor(int i=1;i<=n;i++)printf(\"%d \",sa[i]);\n//\tfor(int i=1;i<=n;i++)printf(\"%d \",x[i]);\n\treturn 0;\n}\n```\n\nAC\u4ee3\u7801\u5c31\u628a\u524d\u9762\u51e0\u5757\u4ee3\u7801\u62fc\u4e00\u8d77\u5373\u53ef\u3002",
        "postTime": 1604475379,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5353 \u3010\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "# \u540e\u7f00\u6570\u7ec4\u7684\u505a\u6cd5\n\n\u6ce8\u610f\uff1a\n\n1. \u8fd9\u9898\u5b57\u7b26\u4e32\u662f\u4ece\u5f53\u524d\u8282\u70b9\u5411\u4e0a\uff0c\u7f16\u53f7\u5374\u662f\u4ece\u6839\u5411\u4e0b\uff01\n1. \u6bd4\u8f83\u76f8\u5f53\u4e8e\u6bd4\u8f83\uff08\u5f53\u524d\u8282\u70b9\u5230\u6839\u7684\u5b57\u7b26\u4e32\uff0c\u6839\u5230\u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\uff09\u7684\u4e8c\u5143\u7ec4\uff01\n\n\u8003\u8651\u500d\u589e\u65f6\u7684\u6bd4\u8f83\u987a\u5e8f\uff1a\n\n1. \u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u3002\n1. \u7956\u5148\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u3002\n1. \u7956\u5148\u5b57\u7b26\u4e32\u7f16\u53f7\u7684\u5927\u5c0f\u3002\n1. \u5f53\u524d\u5b57\u7b26\u4e32\u7f16\u53f7\u7684\u5927\u5c0f\u3002\n\n\u53ef\u4ee5\u5c062,3\u5408\u5e76\uff0c\u5c064\u524d\u9762\u589e\u52a0\u4e00\u4e2a1\uff08\u56e0\u4e3a\u5982\u679c\u6bd4\u8f83\u5230\u4e86\u7b2c4\u5173\u952e\u5b57\uff0c\u7b2c1\u5173\u952e\u5b57\u5fc5\u7136\u76f8\u7b49\uff0c\u53ef\u4ee5\u968f\u610f\u6dfb\u52a0\uff09\uff0c\u5982\u4e0b\uff1a\n\n1. \u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u3002\n1. \u7956\u5148\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\uff0c\u7f16\u53f7\uff09\u7684\u5927\u5c0f\n1. \u5f53\u524d\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u4e32\uff0c\u7f16\u53f7\uff09\u7684\u5927\u5c0f\n\n## \u5b9e\u73b0\n\n\u5728\u6392\u5e8f\u65f6\uff1a\u9700\u8981\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u6570\u7ec4`rk`\u662f\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7b2c\u4e8c\u4e2a\u6570\u7ec4`tp`\u662f\u7b2c\u4e8c\u5173\u952e\u5b57''\u7684\u9006''\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u6392\u540d\u7684''\u9006''`sa`\u3002\n\n### \u9884\u5904\u7406\n\n\u4ee5\u5b57\u7b26\u5927\u5c0f\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u5f53\u524d\u8282\u70b9\u7f16\u53f7\uff08\u5176\u9006\u4e3a\u672c\u8eab\uff09\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u6392\u5e8f\u5373\u53ef\u3002\n\n### \u500d\u589e\n\n\u8003\u8651\u524d\u4e00\u8f6e\u5df2\u7ecf\u5b8c\u6210\u5bf9\u5b57\u7b26\u4e32\u524d`1<<k`\u4e2a\u5b57\u7b26\u7684\u6392\u5e8f\uff0c\u8bbe\u987a\u5e8f\u4e3a`sa`\uff0c\u5b57\u7b26\u4e32\u5927\u5c0f\u4e3a`rk`\uff08\u53ef\u91cd\uff09\uff0c\uff08\u5b57\u7b26\u4e32\uff0c\u7f16\u53f7\uff09\u5927\u5c0f\u4e3a`rkk`\uff08\u4e0d\u91cd\uff09\u3002\n\n\u90a3\u4e48\uff0c\u53ef\u4ee5\u987a\u5e8f\u6309\u7167\u5982\u4e0b\u7684\u5173\u952e\u5b57\u6765\u6392\u5e8f\uff0c\u5f97\u5230`1<<(k+1)`\u7684\u7b54\u6848\uff1a\n\n1. \u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f`rk`\n1. \u7956\u5148\uff08\u5b57\u7b26\u4e32\uff0c\u7f16\u53f7\uff09\u7684\u5927\u5c0f\uff08\u7531`rkk`\u5f97\u5230\uff0c\u5b58\u50a8\u5728`rk2`\u4e2d\uff09\u3002\n1. \u5f53\u524d\u5b57\u7b26\u4e32\u7684\uff08\u5b57\u7b26\u4e32\uff0c\u7f16\u53f7\uff09\u7684\u5927\u5c0f`rkk`\uff08\u5176\u9006\u4e3a`sa`\uff09\u3002\n\n\u6392\u5e8f\u65f6\u53ef\u4ee5\u5148\u5408\u5e76\u540e\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u518d\u5c06\u5f97\u5230\u7684\u9006\u6392\u540d\u4e0e\u7b2c\u4e00\u5173\u952e\u5b57\u5408\u5e76\u3002\n\n### \u4ee3\u7801\n\n\uff08\u53c2\u8003[xht37\u5927\u4f6c\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/xht37/p5353-mu-ban-shu-shang-hou-zhui-pai-xu)\uff09\n\n\n```cpp\ninline void tsort(int *sa, int *rk, int *tp, int m) {\n\tfor (int i = 0; i <= m; ++i) tx[i] = 0;\n\tfor (int i = 1; i <= n; ++i) tx[rk[i]]++;\n\tfor (int i = 1; i <= m; ++i) tx[i] += tx[i-1];\n\tfor (int i = n; i; --i) sa[tx[rk[tp[i]]]--] = tp[i];\n}\n\n\n\tfor (int k = 0; (1<<k) < n; ++k) {\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\trk2[i] = rkk[fa[k][i]];\n\t\t}\n\t\ttsort(tp, rk2, sa, n);\n\t\ttsort(sa, rk, tp, n);\n\t\tswap(rk, tp);\n\t\tp = rk[sa[1]] = rkk[sa[1]] = 1;\n\t\tfor (int i = 2; i <= n; ++i) {\n\t\t\trk[sa[i]] = (#cmp(sa[i], sa[i-1], k)) ? ++p : p;\n\t\t\trkk[sa[i]] = i;\n\t\t}\n\t}\n```\n\n### \u6ce8\n\n\u4e3a\u4e86\u5361\u5e38\uff0c\u53ef\u4ee5\u5728\u500d\u589e\u7684\u65f6\u5019\u5c06`f[i][k]`\uff08`i`\u8868\u793a\u5f53\u524d\u8282\u70b9\uff0c`k`\u8868\u793a\u5c42\u6570\uff09\u7684\u4e0b\u6807\u987a\u5e8f\u4ea4\u6362\uff0c\u53d8\u6210`f[k][i]`\uff0c\u5b9e\u6d4b\u5feb\u4e86200+ms\u3002",
        "postTime": 1591104813,
        "uid": 73915,
        "name": "frank3215",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5353 \u3010\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u5efa\u8bae luogu \u535a\u5ba2\u6216\u8005 [\u8fd9\u91cc](https://www.yijan.co/shu-shang-hou-zhui-pai-xu/)\n\n\u8003\u8651\u7528\u540e\u7f00\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u540e\u7f00\u5e73\u8861\u6811\u662f\u4e00\u79cd\u7ef4\u62a4\u540e\u7f00\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u5e8f\u904d\u5386\u5c31\u662f\u540e\u7f00\u6570\u7ec4\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u5b83\u7ef4\u62a4\u7684\u540e\u7f00\u96c6\u5408 $T$ \u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32 $S\\in T$ \uff0c\u5b83\u53ef\u4ee5\u652f\u6301 $O(\\log n)$ \u63d2\u5165 $xS$ \u3002\n\n\u6211\u4eec\u8003\u8651\u63d2\u5165 $xS$ \u7684\u65f6\u5019\u8981\u505a\u4ec0\u4e48\uff0c\u9996\u5148\u4f1a\u6bd4\u8f83\u5f53\u524d\u8282\u70b9\u6240\u4ee3\u8868\u7684\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u548c $x$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u6210\u529f\u6bd4\u8f83\u4e86\u5f53\u524d\u8282\u70b9\u7684\u540e\u7f00\u548c\u8fd9\u4e2a\u4e32\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u5426\u5219\uff0c\u6211\u4eec\u9700\u8981\u6bd4\u8f83 $S$ \u4e0e\u8fd9\u4e2a\u540e\u7f00\u53bb\u6389\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08\u4ecd\u7136\u662f\u4e2a\u540e\u7f00\uff09\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u67d0\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u5982\u679c\u6211\u4eec\u5bf9\u540e\u7f00\u5e73\u8861\u6811\u4e0a\u6bcf\u4e2a\u70b9\u5206\u914d\u4e00\u4e2a\u6743\u503c\uff0c\u53ef\u4ee5 $O(1)$ \u8fdb\u884c\u6bd4\u8f83\u3002\u5206\u914d\u6743\u503c\u53ef\u4ee5\u7ed9\u6574\u4e2a\u6811\u5206\u914d\u4e00\u4e2a $[0,10^9]$ \u7684\u6743\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u6298\u534a\u5206\u914d\u6743\u503c\u3002\u4f7f\u7528\u66ff\u7f6a\u7f8a\u6811\u6765\u8fdb\u884c\u91cd\u6784\u5c31\u53ef\u4ee5\u8ba9\u6811\u9ad8\u4fdd\u6301\u4e0d\u9ad8\u3002\n\n\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u540c\u6837\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff0c\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u65b9\u4fbf\u5730\u627e\u5230\u53bb\u6389\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u540e\u7f00 $fa[u]$ \u3002\n\n```cpp\n#include \"iostream\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"cstdio\"\n#include \"cmath\"\n#include \"vector\"\n#include \"map\"\n#include \"set\"\n#include \"queue\"                   \nusing namespace std;\n#define MAXN 600006\n//#define int long long\n#define rep(i, a, b) for (int i = (a), i##end = (b); i <= i##end; ++i)\n#define per(i, a, b) for (int i = (a), i##end = (b); i >= i##end; --i)\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define vi vector<int>\n#define all(x) (x).begin() , (x).end()\n#define mem( a ) memset( a , 0 , sizeof a )\ntypedef long long ll;\nint n , m;\nint A[MAXN] , fa[MAXN];\nchar S[MAXN];\n\n#define alp 0.75\nint siz[MAXN] , ch[MAXN][2] , rt;\ndouble val[MAXN];\n\nvoid pu( int x ) {\n\tsiz[x] = siz[ch[x][0]] + 1 + siz[ch[x][1]];\n}\n\nint tr[MAXN] , cn;\nvoid pia( int x ) {\n\tif( !x ) return;\n\tpia( ch[x][0] );\n\ttr[++ cn] = x;\n\tpia( ch[x][1] );\n\tch[x][0] = ch[x][1] = 0;\n}\nvoid rebuild( int& x , int l , int r , double L , double R ) {\n\tif( l > r ) return;\n\tint m = l + r >> 1; double mid = ( L + R ) / 2;\n\tx = tr[m] , val[x] = mid;\n\trebuild( ch[x][0] , l , m - 1 , L , mid ) , rebuild( ch[x][1] , m + 1 , r , mid , R );\n\tpu( x );\n}\nbool fuck( int x ) {\n\treturn siz[x] * alp < siz[ch[x][0]] || siz[x] * alp < siz[ch[x][1]];\n}\nvoid maintain( int& x , double L , double R ) {\n\tif( fuck( x ) ) cn = 0 , pia( x ) , rebuild( x , 1 , cn , L , R );\n}\nbool cmp( int x , int y ) {\n\treturn S[x] == S[y] ? ( val[fa[x]] == val[fa[y]] ? x < y : val[fa[x]] < val[fa[y]] ) : S[x] < S[y];\n}\nvoid ins( int& x , int idx , double L , double R ) {\n\tif( !x ) {\n\t\tx = idx , siz[x] = 1 , val[x] = ( L + R ) / 2;\n\t\treturn;\n\t}\n\tif( cmp( idx , x ) ) ins( ch[x][0] , idx , L , val[x] );\n\telse ins( ch[x][1] , idx , val[x] , R );\n\tpu( x );\n\tmaintain( x , L , R );\n}\nint sa[MAXN] , cnt;\nvoid calc( int x ) {\n\tif( !x ) return;\n\tcalc( ch[x][0] );\n\tsa[++ cnt] = x;\n\tcalc( ch[x][1] );\n}\n\nvoid solve() {\n\tcin >> n;\n\trep( i , 2 , n ) scanf(\"%d\",fa + i);\n\tscanf(\"%s\",S + 1);\n\trep( i , 1 , n ) \n\t\tins( rt , i , 0 , 1e9 );\n\tcalc( rt );\n\trep( i , 1 , n ) printf(\"%d \",sa[i]);\n}\n\nsigned main() {\n//    int T;cin >> T;while( T-- ) solve();\n    solve();\n}\n\n\n```\n\n",
        "postTime": 1588903219,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5353 \u3010\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "## \u4e00\u3001\u601d\u8def\n\n[\u9898\u76ee](https://www.luogu.com.cn/problem/P5353)\u5927\u610f\uff1a\u5bf9\u7ed9\u5b9a\u6811\u4e0a\u6240\u6709\u70b9\u5230\u8ddf\u7684\u8def\u5f84\u6784\u6210\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u6709\u5b8c\u5168\u76f8\u540c\u7684\u4e32\uff0c\u5219\u4ece\u6839\u5411\u4e0b\u4f9d\u6b21\u4ece\u5c0f\u5230\u5927\u6bd4\u8f83\u7f16\u53f7\u3002\n\n\u4e0e P3809 \u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u53ef\u80fd\u5b58\u5728\u5b8c\u5168\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff08\u540e\u7f00\u7531\u4e8e\u957f\u5ea6\u4e0d\u540c\u4e0d\u53ef\u80fd\u5b8c\u5168\u76f8\u540c\uff09\uff0c\u56e0\u6b64\u6bd4\u8f83\u4e24\u4e2a\u4e32\u65f6\u53ef\u4ee5\u628a\u7f16\u53f7\u6784\u6210\u7684\u4e32\u4e5f\u770b\u6210\u201c\u5b57\u7b26\u4e32\u201d\uff0c\u8fd9\u4e2a\u7531\u4e8e\u7f16\u53f7\u7684\u552f\u4e00\u6027\u4e0d\u53ef\u80fd\u5b8c\u5168\u91cd\u590d\u3002\u6240\u4ee5\u6bd4\u8f83\u65f6\u9700\u8981\u6309\u7167\u4f18\u5148\u7ea7\u4f9d\u6b21\u8003\u8651\u56db\u4e2a\u56e0\u7d20\uff1a\n\n1. \u5f53\u524d\u4e24\u4e2a\u4e32\u7684\u5927\u5c0f\n2. \u5f53\u524d\u4e24\u4e2a\u4e32\u7684\u7236\u4eb2\u4e32\u7684\u5927\u5c0f\n3. \u5f53\u524d\u4e24\u4e2a\u4e32\u7684\u7236\u4eb2\u7f16\u53f7\u4e32\u7684\u5927\u5c0f\n4. \u5f53\u524d\u4e24\u4e2a\u4e32\u5bf9\u5e94\u7f16\u53f7\u4e32\u7684\u5927\u5c0f\n\n\u56db\u4e2a\u56e0\u7d20\u90fd\u662f\u5c0f\u7684\u6392\u5728\u524d\u9762\u3002\u4e5f\u5c31\u662f\u6309\u7167\u697c\u4e0a frank3215 \u5927\u4f6c\u7684\u9898\u89e3\u5c06 2,3 \u5408\u5e76\uff0c\u770b\u4f5c\u662f\u6574\u4e2a\u6bd4\u8f83\u5b8c\u4e4b\u540e\u7684\u4e0d\u53ef\u91cd\u6392\u540d\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u628a\u7f16\u53f7\u4e32\u590d\u5236\u63a5\u5728\u5b57\u7b26\u4e32\u7684\u540e\u9762\uff0c\u6bd4\u8f83\u8fd9\u4e2a\u4e32\uff0c\u663e\u7136\u5b83\u5c31\u662f\u4e00\u4e2a\u4e0d\u53ef\u91cd\u7684\u6392\u540d\u3002\u4f46\u662f 1,4 \u4e24\u4e2a\u7531\u4e8e\u4f18\u5148\u7ea7\u539f\u56e0\u663e\u7136\u4e0d\u53ef\u4ee5\u5408\u5e76\uff0c\u6240\u4ee5 1 \u4ecd\u7136\u662f\u53ef\u91cd\u6392\u540d\u3002\n\n## \u4e8c\u3001\u5b9e\u73b0\n\n\u8fd9\u91cc\u5728\u5b9e\u73b0\u4e2d\u91c7\u7528\u540e\u7f00\u6570\u7ec4 SA\u3002\u4e00\u822c\u8fdb\u884c\u540e\u7f00\u6570\u7ec4\u7684\u5904\u7406\u91c7\u7528\u57fa\u6570\u6392\u5e8f\uff0c\u4f46\u662f\u5728\u672c\u9898\u4e2d\u8fd9\u79cd\u5199\u6cd5\u7a0d\u5fae\u4e0d\u5bb9\u6613\u7406\u89e3\uff0c\u4e8e\u662f\u5c31\u6709\u4e00\u79cd\u91c7\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u7684\u6280\u5de7\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651 cmp \u51fd\u6570\u5373\u53ef\u3002\u867d\u7136\u591a\u4e00\u4e2a $\\log$ \u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u79cd\u505a\u6cd5\u5728\u4e0d\u6253\u5f00 O2 \u7684\u60c5\u51b5\u4e0b\u751a\u81f3\u53ef\u4ee5\u5361\u8fc7 $n = 10^6$ \u7684\u6570\u636e\uff08\u53ef\u80fd\u7531\u4e8e SA \u56fa\u6709\u7684\u5c0f\u5e38\u6570\uff09\u3002\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <fstream>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n// Blocking\nchar str[2000010];\n//rk2: \u4e34\u65f6\u6570\u7ec4, rk: \u4e0d\u8003\u8651\u7f16\u53f7\u7684\u53ef\u91cd\u6392\u540d, rkk: \u4e0d\u53ef\u91cd\u6392\u540d\nint n, k, v, sa[2000010], fa[2000010], rk[2000010], rk2[2000010], rkk[2000010];\n//\u9884\u5904\u7406\u5355\u7ed3\u70b9\u7684 rkk \u53ea\u8003\u8651\u5b57\u7b26\u548c\u7f16\u53f7\ninline bool cmt(int i, int j) {\n    if (str[i] != str[j]) return str[i] < str[j];\n    return i < j;\n}\n//\u5224\u65ad\u5927\u5c0f(\u53ef\u91cd)\ninline bool cmd(int i, int j) {\n    if (rk[i] != rk[j]) return rk[i] < rk[j];\n    return rk[fa[i]] < rk[fa[j]];\n}\n//\u5224\u65ad\u5927\u5c0f(\u4e0d\u53ef\u91cd)\ninline bool cmp(int i, int j) {\n    if (rk[i] != rk[j]) return rk[i] < rk[j];\n    if (rkk[fa[i]] != rkk[fa[j]]) return rkk[fa[i]] < rkk[fa[j]];\n    return rkk[i] < rkk[j];\n}\ninline void init() {\n    //k = 1 \u6b64\u65f6\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u4e32\u53ea\u5305\u542b\u81ea\u8eab\n    for (int i = 1; i <= n; ++i) sa[i] = i;\n    sort(sa + 1, sa + 1 + n, cmt);\n    rk[sa[1]] = rkk[sa[1]] = 1;\n    for (int i = 2; i <= n; ++i)\n        rk[sa[i]] = rk[sa[i - 1]] + (str[sa[i]] != str[sa[i - 1]]), rkk[sa[i]] = i;\n    //k: \u5f53\u524d\u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u7684\u4e32\u5411\u4e0a\u5ef6\u4f38\u7684\u957f\u5ea6\n    for (k = 2; k <= n; k *= 2) {\n        v = 0;\n        sort(sa + 1, sa + 1 + n, cmp);\n        rk2[sa[1]] = rkk[sa[1]] = 1;\n        for (int i = 2; i <= n; ++i)\n            rk2[sa[i]] = rk2[sa[i - 1]] + cmd(sa[i - 1], sa[i]), rkk[sa[i]] = i;\n        //\u6bcf\u4e2a\u7ed3\u70b9\u7684 fa \u5411\u4e0a\u500d\u589e\u4e00\u6b21\n        for (int i = n; i >= 1; --i) rk[i] = rk2[i], fa[i] = fa[fa[i]], v |= fa[i];\n        //\u526a\u679d\n        if (!v) break;\n    }\n}\nsigned main() {\n    scanf(\"%d\", &n);\n    for (int i = 2; i <= n; ++i) scanf(\"%d\", fa + i);\n    scanf(\"%s\", str + 1);\n    init();\n    for (int i = 1; i <= n; ++i) printf(\"%d \", sa[i]);\n    return 0;\n}\n```",
        "postTime": 1649072495,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "P5353 \u6811\u4e0a\u540e\u7f00\u6392\u5e8f \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u5148\u5949\u4e0a\u51fa\u9898\u4eba\u7684[\u9898\u89e3](https://www.cnblogs.com/xht37/p/10821282.html)\n\n\u4e0b\u9762\u662f\u6211\u7684\u4e00\u4e9b\u601d\u8003\uff08\u653e\u5728\u4ee3\u7801\u91cc\u4e86\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define Ford(i,a,b) for(int i=a;i>=b;i--)\nconst int N=5e5,Logn=21;\nvoid read(int &x)\n{\n\tint t=0,opt=1;\n\tchar c=getchar();\n\twhile (c<'0'||c>'9') (c=='-'?opt=-1:0),c=getchar();\n\twhile ('0'<=c&&c<='9')\n\t{\n\t\tt=t*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx=t*opt;return ;\n}\nint n,pa[N][Logn];char s[N];\nnamespace SA\n{\n\tint rank[N],rank_pa[N],temp[N],pos[N],tax[N],tp[N],sa[N],size;\n\tvoid Qsort(int *sa,int *rank,int *tp,int size)\n\t{\n\t\tFor(i,0,size) tax[i]=0;\n\t\tFor(i,1,n) tax[rank[tp[i]]]++;\n\t\tFor(i,1,size) tax[i]+=tax[i-1];\n\t\tFord(i,n,1) sa[tax[rank[tp[i]]]--]=tp[i];\n\t}\n\tvoid Sort()\n\t{\n\t\tFor(i,1,n) rank[i]=s[i]-'a'+1,tp[i]=i;//\u4e00\u5b9a\u8bb0\u4f4f0\u662f\u7528\u6765\u653e'\\0'\u7684,\u800c\u4e0d\u662f'a'\n\t\tQsort(sa,rank,tp,'z'-'a'+1);For(i,1,n) pos[sa[i]]=i;\n\t\tfor(int w=1,p=0;w<n;w<<=1,p++) //\u5728\u957f\u5ea6\u4e3aw\u65f6\u6240\u6709\u4eba\u7684\u806a\u660e\u7a0b\u5ea6\u90fd\u662f\u5bf9\u7684\n\t\t{\t\t\t\t\t\t     \t  //(pos\u5373\u6b64\u65f6\u4e25\u683c\u6392\u540d(\u542b\u7f16\u53f7,\u7edd\u5bf9\u4e0d\u540c),rank\u4e3a\u667a\u5546\u5b57\u7b26\u4e32\u6392\u540d(\u65e0\u89c6\u7f16\u53f7))\n\t\t\tFor(i,1,n) rank_pa[i]=pos[pa[i][p]];\n\t\t\tQsort(tp,rank_pa,sa,n); //\u4ee5\u81ea\u5df1\u7684\u5b57\u7b26\u4e32\u6392\u540d\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57,\u4ee5\u7236\u4eb2\u4e25\u683c\u6392\u540d\u4e3a\u7b2c\u4e8c\u952e\u5b57\uff0c\u81ea\u5df1\u4f4d\u7f6e\u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\n\t\t\tQsort(sa,rank,tp,rank[sa[n]]);//\u5982\u679c\u4e24\u4e2a\u4eba\u667a\u5546\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u5219\u6309\u7167\u5176\u7236\u4eb2\u7684\u4e25\u683c\u6392\u540d\uff0c\u82e5\u7236\u4eb2\u76f8\u540c\uff0c\u5219\u6309\u81ea\u5df1\u7684\u4e25\u683c\u6392\u540d\n\t\t\tFor(i,1,n) temp[i]=rank[i];rank[sa[1]]=1;\n\t\t\tFor(i,2,n) rank[sa[i]]=(temp[sa[i]]==temp[sa[i-1]]&&temp[pa[sa[i]][p]]==temp[pa[sa[i-1]][p]])?rank[sa[i-1]]:rank[sa[i-1]]+1;\n\t\t\tFor(i,1,n) pos[sa[i]]=i;//\u6700\u7ec8\u5f97\u52302*w\u7684\u4e25\u683c\u6392\u540d\n\t\t}\n\t}\n}\nint main()\n{\n\tread(n);\n\tFor(i,2,n) {read(pa[i][0]);For(j,1,Logn-1) pa[i][j]=pa[pa[i][j-1]][j-1];}\n\tscanf(\"%s\",s+1);\n\tSA::Sort();For(i,1,n) printf(\"%d \",SA::sa[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1557198298,
        "uid": 87510,
        "name": "\u54af\u54af\u54af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5353 \u3010\u3010\u6a21\u677f\u3011\u6811\u4e0a\u540e\u7f00\u6392\u5e8f\u3011"
    }
]