[
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\u7684\n\n~~\u6240\u4ee5\u4f60\u7b2c\u4e00\u6b21\u4e3a\u4ec0\u4e48TLE90\u5206~~\n\n\u5728\u6b64\u5fe0\u544a\u5927\u5bb6\uff0c\u4e00\u5b9a\u8981\u5728\u8fc7\u7a0b\u4e2d\u66f4\u65b0fa[x]\u7684\u503c\uff08\u6211\u76f8\u4fe1\u4f60\u4eec\u5199\u7684\u90fd\u662f\u5e76\u67e5\u96c6\uff09\n\n\u73b0\u5728288ms\uff0c\u611f\u89c9\u81ea\u5df1\u68d2\u68d2\u54d2~\n\n\u8fd9\u4e2a\u9898\u76ee\u4e3b\u8981\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5224\u5b9a\u7834\u54ea\u4e2a\u7f50\u5b50\u3002\u5176\u5b9e\u4e0d\u96be\u60f3\uff0c\u5982\u679c\u51fa\u73b0\u73af\u5f62\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u7834\u6389\u4e00\u4e2a\u7f50\u5b50\u3002\n\n\u90a3\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u4f1a\u51fa\u73b0\u73af\u5f62\u5462\uff1f\n\n\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u7f50\u5b50i\u7684\u94a5\u5319\u4e3aj\uff0c\u800c\u6211\u4eec\u5df2\u77e5\u53ea\u8981\u6253\u5f00i\u5c31\u80fd\u6253\u5f00j\uff08\u5373find\uff08j\uff09==i\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u7834\u5f00i\uff0c\u6216\u8005\u7834\u5f00j\uff0c\u6682\u65f6\u6211\u9009\u62e9\u7834\u5f00i\u3002\n\n\u653e\u4ee3\u7801\u55bd\uff0c\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u54e6~\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,a[1000007],ans;\nint fa[1000007];\nint find(int x){\n\tif(fa[x]==x) return x;\n\tint a=find(fa[x]);\n\treturn fa[x]=a;\n}//\u5728\u5bfb\u627efa[x]\u7684\u8fc7\u7a0b\u4e2d\u66f4\u65b0fa[x]\u7684\u503c\uff0c\u51cf\u77ed\u4e0b\u4e00\u6b21\u5bfb\u627e\u7684\u7ebf\u8def\uff0c\u9632\u6b62TLE\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) fa[i]=i;//\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\t\n\t\tif(find(a[i])==i){//\u5224\u5b9a\u662f\u5426\u6784\u73af\n\t\t\tfa[i]=i;ans++;//\u5982\u679c\u6784\u73af\uff0c\u5219\u7834\u6389i\u53f7\u5b58\u94b1\u7f50\n\t\t}\n\t\telse fa[i]=a[i];//\u53cd\u4e4b\uff0c\u628ai\u7684\u201c\u7236\u4eb2\u201d\u8d4b\u4e3aa[i]\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\u7834\u6389\u7684\u6b21\u6570\n    return 0; \n}\n```",
        "postTime": 1537022401,
        "uid": 50412,
        "name": "\u674e\u5c27",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\n\u55ef\uff0c\u76f4\u63a5\u8fdb\u5165\u6b63\u9898\n\n\u5148\u544a\u8bc9\u4f60\u4eec\u8fd9\u662f\u5e76\u67e5\u96c6\uff0c\u597d\u5427\uff0c\u6807\u7b7e\u4e0a\u9762\u6709\uff0c\u518d\u6765\u5206\u6790\u8fd9\u4e3a\u4ec0\u4e48\u662f\u5e76\u67e5\u96c6\u3002\n\n\u6839\u636e\u9898\u610f\uff1a\n\n```\n\u6bcf\u4e00\u4e2a\u5b58\u94b1\u7f50\u80fd\u591f\u7528\u76f8\u5e94\u7684\u94a5\u5319\u6253\u5f00\u6216\u8005\u88ab\u7838\u5f00\uff0cByteazar\u5df2\u7ecf\u5c06\u94a5\u5319\u653e\u5165\u5230\u4e00\u4e9b\u5b58\u94b1\u7f50\u4e2d\n```\n\n\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\uff1a\n\n\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u8054\u901a\u5757\u7684\u201c\u7956\u5148\u201d\uff08\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u6839\u5427\uff0c\u849f\u84bb\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u79f0\u547c\uff09\u90a3\u4e48\u5c31\u628a\u5b83\u7838\u7834\uff0c\u8fd9\u6837\u6574\u4e2a\u8054\u901a\u5757\u5c31\u90fd\u53ef\u4ee5\u53d6\u51fa\uff1b\n\n\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0c\u5c31\u4e0d\u7ba1\u5b83\uff1b\n\n\u4ece\u540e\u9762\u53e5\u8bdd\u5c31\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u63a8\u51fa\u4ed6\u4eec\u4e4b\u95f4\u6709\u4ece\u5c5e\u5173\u7cfb\uff08\u5982\u679c\u8981\u7838\u7684\u6570\u76ee\u6700\u5c0f\uff09\uff0c\u8fd9\u662f\u5e76\u67e5\u96c6\u7684\u601d\u60f3\uff0c\u662f\u5427\uff1b\n\n\u597d\uff0c\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5b83\u8981\u7528\u5e76\u67e5\u96c6\u505a\uff1b\n\n\u90a3\u4e48\uff0c\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\u5440\uff0c\u4e0a\u6a21\u677f\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u8f93\u51fa\u8054\u901a\u5757\u7684\u4e2a\u6570\uff1b\n\nOK\uff0c\u4e0a\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u4e5f\u6709\u6ce8\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define maxn 1000010\nint n, ans, x, fa[maxn];\n\n/*\n//\u4e09\u76ee\u8fd0\u7b97\u7b26\u7248\u672c \nint find(int x)\n{\n\treturn fa[x] == x ? x : fa[x] = find(fa[x)'\n}\n*/\n\n//\u666e\u901a\u7684\u5450 \nint find(int x)\n{\n\tif(fa[x] == x)\n\t\treturn x;\n\treturn fa[x] = find(fa[x]);\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++ i)\n\t\tfa[i] = i;//\u6700\u5f00\u59cb\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u81ea\u5df1\u7684\u7956\u5148\uff1b \n\tfor(int i = 1; i <= n; ++ i)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\tfa[find(i)] /*\u627e\u7956\u5148*/ = find(x)/*\u627e\u5b83\u7684\u513f\u5b50\u7684\u7956\u5148*/;\n\t\t//\u5c31\u662f\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u5450 \n\t}\n\tfor(int i = 1; i <= n; ++ i)\n\t\tif(fa[i] == i)//\u6c42\u8054\u901a\u5757\u7684\u4e2a\u6570 \n\t\t\t++ ans;\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1563370020,
        "uid": 155767,
        "name": "Tarsal",
        "ccfLevel": 0,
        "title": "P3420 [POI2005]SKA-Piggy Banks  \u9898\u89e3"
    },
    {
        "content": "Last solution.\n\n\uff08\u5c31\u7b97\u662f\u5427\n\n---\n\n\u8fd9\u9898\u6015\u4e0d\u662f\u4e2a\u5e76\u67e5\u96c6\u677f\u5b50\u3002\u3002\n\n\u4e0d\u4f1a\u5e76\u67e5\u96c6\u8bf7[\u51fa\u95e8\u5de6\u8f6c](https://www.luogu.com.cn/blog/CM0/bingchaji)\u3002\n\n~~\u5982\u679c\u4f60\u5df2\u7ecf\u6210\u529fAC \u5e76\u67e5\u96c6\u677f\u5b50\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u8fd9\u9898\u5c31\u53ef\u4ee5\u79d2\u5207\u4e86\u3002~~\n\n\u8fd8\u662f\u8bf4\u4e00\u4e0b\u601d\u8def\u5427\u3002\n\n\u6211\u4eec\u77e5\u9053\u5e76\u67e5\u96c6\u7ef4\u62a4\u7684\u662f\u96c6\u5408/\u8fde\u901a\u5757\u4fe1\u606f\u3002\n\n\u6839\u636e\u9898\u610f\u5c31\u53ef\u4ee5\u77e5\u9053\u6b64\u9898\u8981\u6c42\u6c42\u7684\u662f\u6709\u591a\u5c11\u4e2a\u8fde\u901a\u5757\uff08\u53ef\u4ee5\u8ba4\u4e3a\u82e5\u4e24\u4e2a\u96f6\u94b1\u7f50\u6709\u94a5\u5319\u5173\u7cfb\uff0c\u5219\u4e24\u8005\u5728\u540c\u4e00\u8fde\u901a\u5757\uff09\u3002\n\n\u90a3\u4e48\uff0c\u5c31\u53ea\u8981\u6c42\u51fa$n$ \u4e2a\u96f6\u94b1\u7f50\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7956\u5148\u3002\n\nCode\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,w[1000001],x,num;\nbool pd[1000001];//\u8bb0\u5f55\u4e0d\u540c\u7956\u5148\nint find(int q)\n{\n    if(w[q]==q)\n        return q;\n    return w[q]=find(w[q]);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n        w[i]=i;//\u521d\u59cb\u5316\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%d\",&x);\n        w[find(i)]=find(x);//\u5efa\u7acb\u94a5\u5319\u5173\u7cfb\n    }\n    for(int i=1;i<=n;++i)\n        pd[find(w[i])]=true;\n    for(int i=1;i<=n;++i)\n        if(pd[i])\n            ++num;//num\u5373\u4e0d\u540c\u7956\u5148\u7684\u4e2a\u6570\n    printf(\"%d\\n\",num);//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n```\n\nGoodbye.",
        "postTime": 1591872711,
        "uid": 186034,
        "name": "Callous_Murder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5bb9\u6613\u8ba9\u4eba\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\u7684\u60f3\u6cd5\uff08~~\u53ef\u80fd\u5c31\u6211\u60f3\u9519\u4e86~~\uff09\u3002\n\n\u8bfb\u5b8c\u9898\uff0c**X\u8981\u5728Y\u4e4b\u524d\u6253\u5f00**\uff0c\u5f88\u660e\u663e\u7684\u5c42\u6b21\u5173\u7cfb\uff08\u5148\u540e\u987a\u5e8f\uff09\uff0c\u7136\u540e\u679c\u65ad\u7684\u5199\u4e86\u4e00\u4e2a\u62d3\u6251\uff0c\u7136\u540e\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\uff08\u9519\u8bef\u793a\u8303\uff09\n\n------------\n## \u6b63\u89e3\uff1a\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u6709\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u6709\u4e00\u56e2\u4e92\u76f8\u5f71\u54cd\uff0c\u5176\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u6253\u5f00\u4e86\uff0c\u5176\u4ed6\u7684\u90fd\u4f1a\u6253\u5f00\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u4f1a\u5f88\u81ea\u7136\u7684\u5c31\u5f80\u5e76\u67e5\u96c6\u4e0a\u9762\u53bb\u60f3\u3002\n\n\u6211\u4eec\u53ea\u8981\u628a\u4e24\u4e2a\u76f8\u8fde\u7684\u70b9\uff0c\u8fde\u5728\u4e00\u8d77\uff0c\u7528\u5e76\u67e5\u96c6\u8ba1\u5f55\u6709\u51e0\u4e2a\u96c6\u5408\uff0c\u5c31\u77e5\u9053\u7b54\u6848\u4e86\u3002\uff08\u56e0\u4e3a\u6bcf\u4e2a\u96c6\u5408\u53ea\u9700\u6253\u7834\u4e00\u4e2a\u5373\u53ef\u5168\u90e8\u6253\u5f00\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7edf\u8ba1\u6709\u51e0\u4e2a\u96c6\u5408\u5c31\u597d\u4e86\uff09\n\nAC\u4ee3\u7801\uff1a\n```\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint n,x,fa[maxn],ans,a[maxn];\nbool vis[maxn];\ninline int read(){\n    int ret=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n    while (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\ninline int getfa(int x){\n\tif (fa[x]==x) return x;\n\treturn fa[x]=getfa(fa[x]);\n}\nint main(){\n    n=read();\n    for (int i=1;i<=n;i++) fa[i]=i;\n\tfor (int i=1;i<=n;i++){\n\t\ta[i]=x=read();\n\t\tint fx=getfa(x),fy=getfa(i);\n\t    if (fx!=fy) fa[fy]=fx;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tx=getfa(a[i]);\n\t\tif (!vis[x]) ans++;\n\t\tvis[x]=1;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1564403829,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u3010POI\u8865\u5168\u8ba1\u5212#4 POI2005 SKA\u3011\n\n\u697c\u4e0b\u597d\u591a\u4eba\u90fd\u8bf4\u8981\u7528\u5e76\u67e5\u96c6\uff0c\u5b9e\u9645\u4e0a\u662f\u60f3\u590d\u6742\u4e86\n\n\u770b\u5230\u201c\u6bcf\u4e2a\uff08\u50a8\u94b1\u7f50\uff09\u7684\u94a5\u5319\u5728\u53e6**\u4e00\u4e2a**\uff08\u50a8\u94b1\u7f50\uff09\u91cc\u9762\u201d\u5c31\u5e94\u8be5\u60f3\u5230\u8fd9\u662f\u591a\u68f5\u73af\u5957\u6811\uff08\u8bc1\u660e\u89c1IOI2008 Island\u7684\u9898\u89e3\uff09\n\n\u6240\u4ee5\u53ea\u9700\u8981DFS\u4e00\u904d\uff0c\u6570\u4e00\u4e0b\u6709\u591a\u5c11\u4e2a\u73af\u5c31\u597d\u4e86\uff08\u663e\u7136\u5176\u5b83\u70b9\u4e00\u5b9a\u80fd\u4ece\u73af\u4e0a\u5230\u8fbe\uff09\n\n**\u6570\u7ec4\u5f00100000\u4e0d\u591f**\n\n\u5176\u5b83\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=1000010;\nint vis[MAXN],pa[MAXN];\nint n,ans;\ninline void dfs(int x,int type)\n{\n    if(type==1)\n    {\n        if(vis[x]==1)\n        {\n            ++ans;\n            return;\n        }\n        else if(vis[x]==2)return;\n    }\n    else\n    {\n        if(vis[x]==2)return;\n    }\n    vis[x]=type;\n    dfs(pa[x],type);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%d\",&pa[i]);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        if(!vis[i])\n        {\n            dfs(i,1);\n            dfs(i,2);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1504937376,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\n\n### Problem\n\n\u6c42\u51fa\u80fd\u6253\u5f00\u6240\u6709\u5b58\u94b1\u7f50\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u7834\u574f\u7684\u5b58\u94b1\u7f50\u7684\u6700\u5c11\u6570\u91cf\n\n\n### Solution\n\n\u8fd9\u9053\u9898\u8ba9\u4f60\u6c42\u51fa\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\u800c\u5c06\u4e00\u4e2a\u5b58\u94b1\u7f50\u94a5\u5319\u653e\u5728\u53e6\u4e00\u4e2a\u5b58\u94b1\u7f50\u5341\u5206\u50cf\u5e76\u67e5\u96c6\u4e2d\u7684\u5408\u5e76\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u505a\u3002\n\n1\uff1a\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n\n```cpp\nvoid Init () {\n\tfor (int i = 1; i < _maxNum + 1; i++) {\n\t\t_father[i] = i;//\u6bcf\u4e2a\u4eba\u7684\u521d\u59cb\u7236\u4eb2\u90fd\u662f\u4ed6\u81ea\u5df1\n\t}\n}\n```\n2\uff1a\u67e5\u627e\n\n```cpp\nint Find (int x) {\n\twhile (_father[x] != x) {\n\t\tx = _father[x] = Find(_father[x]);//\u9012\u5f52\uff0c\u8def\u5f84\u538b\u7f29\n\t}\n\t\n\treturn x;\n}\n```\n3\uff1a\u5408\u5e76\n\n```cpp\nvoid Merge (int one, int two) {\n    _father[Find(one)] = Find(two);//\u5c06\u4e24\u4e2a\u8282\u70b9\u5408\u5e76\u5230\u4e00\u8d77\n}\n```\n\n4\uff1a\u67e5\u627e\u8fde\u901a\u5757\n\n```cpp\nfor (int i = 1; i < _maxNum + 1; i++) {\n\tif (_father[i] == i) {\n\t\t_ans++;//\u5982\u679c\u627e\u5230\u4e86\u7ed3\u679c\u52a0\u4e00\n\t}\n}\n```\n\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684AC\u4e86\n\n### ACCode\n\n```cpp\n\n\n#include <iostream>\n#include <cstdio>\n#include <fstream>\n#include <algorithm>\n\nusing namespace std;\n\nint _maxNum;\nint _father[1000009];\nint _ans = 0;\n\nint Find (int x) {\n\twhile (_father[x] != x) {\n\t\tx = _father[x] = Find(_father[x]);\n\t}\n\t\n\treturn x;\n}\n\nvoid Init () {\n\tfor (int i = 1; i < _maxNum + 1; i++) {\n\t\t_father[i] = i;\n\t}\n}\n\nvoid Merge (int one, int two) {\n    _father[Find(one)] = Find(two);\n}\n\nvoid ParseIn () {\n\tint curInt;\n\tscanf(\"%d\", &_maxNum);\n\tInit();\n\t\n\tfor (int i = 1; i < _maxNum + 1; i++) {\n\t\tscanf(\"%d\", &curInt);\n\t\tMerge(curInt, i);\n\t}\n}\n\nvoid Core () {\n\tfor (int i = 1; i < _maxNum + 1; i++) {\n\t\tif (_father[i] == i) {\n\t\t\t_ans++;\n\t\t}\n\t}\n}\n\nvoid CWriteOut () {\n\tprintf(\"%d\\n\", _ans);\n}\n\nint main () {\n\n\tParseIn();\n\tCore();\n\tCWriteOut();\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1597233959,
        "uid": 270006,
        "name": "BernadoSilva",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u53ef\u505a\n\n\u82e5\u7bb1\u5b50i\u4e2d\u88c5\u7740j\u94a5\u5319\uff0c\u5219\u4ecei\u5230j\u5f15\u4e00\u6761\u5355\u5411\u8fb9\n\n\u7edf\u8ba1\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u8054\u901a\u5757\u5373\u53ef\n\n\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5165\u5ea6\n\n\n\u6240\u4ee5\u4e00\u4e2a\u8054\u901a\u5757\u4e0d\u53ef\u80fd\u6709\u591a\u4e2a\u73af\uff08\u4e24\u4e2a\u73af\u65e0\u6cd5\u8fde\u5728\u4e00\u8d77\uff09\n\n\u5373\u6bcf\u4e2a\u8054\u901a\u5757\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u73af\uff08\u5305\u62ec\u81ea\u73af\uff09\n\n\u800c\u53ea\u6709\u73af\u624d\u9700\u8981\u6253\u7834\u7bb1\u5b50\n\n\u6240\u4ee5\u6253\u7834\u7bb1\u5b50\u7684\u6570\u91cf\u5c31\u662f\u8054\u901a\u5757\u7684\u6570\u91cf\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=1000000 + 7;\nint fa[MAXN];\nint getf(int x)\n{\n    if(x==fa[x]) return x;\n    return fa[x]=getf(fa[x]);\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) fa[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        int a=getf(x),b=getf(i);\n        if(a!=b) fa[a]=b;\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n        if(getf(i)==i) ans++;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1565333407,
        "uid": 88736,
        "name": "Sober_Clever",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u89c2\u5bdf\u9898\u76ee\uff0c\u4e0d\u96be\u53d1\u73b0\uff1a  \n**\u5982\u679cj\u53f7\u7f50\u5b50\u7684\u94a5\u5319\u5728i\u53f7\u7f50\u5b50\u91cc\uff0c\u800ck\u53f7\u7f50\u5b50\u7684\u94a5\u5319\u5728j\u53f7\u7f50\u5b50\u91cc\uff0c\u90a3\u4e48\u7838\u7834i\u53f7\u7f50\u5b50\uff0c\u5373\u53ef\u6253\u5f00j\u53f7\u7f50\u5b50\u548ck\u53f7\u7f50\u5b50\u3002**  \n\u770b\u5230\u8fd9\u4e2a\u6709\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\uff1f  \n\u5bf9  \n# \u5e76\u67e5\u96c6\u3002\n\u77e5\u9053\u4e86\u8981\u7528\u5e76\u67e5\u96c6\u505a\uff0c\u5c31\u7b80\u5355\u4e86\u3002  \n~~\u4e71\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002~~  \n**Code**\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint ans,pre[1000001];\nint find(int x){return pre[x]==x?x:pre[x]=find(pre[x]);}\n//\u5e76\u67e5\u96c6\u7684\u201c\u67e5\u201d+\u8def\u5f84\u538b\u7f29\nint main()\n{\n\tint n;\n\tcin>>n;\n\tfor (int i=1;i<=n;i++) pre[i]=i;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tif (x!=i)//\u8c8c\u4f3c\u8fd9\u53e5\u8bdd\u4e0d\u5199\u4e5f\u53ef\u4ee5\uff0c\u4f46\u8fd8\u662f\u5199\u7740\u5427\n\t\tpre[find(i)]=find(x);//\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n\t}\n\tfor (int i=1;i<=n;i++)\n\tif (pre[i]==i) ans++;//\u6709\u51e0\u4e2a\u72ec\u7acb\u7684\u96c6\u5408\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1538736087,
        "uid": 93286,
        "name": "Yuno",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "###P3420\u601d\u8def\n\n\u8be6\u89e3\u8bf7\u6233\u535a\u5ba2<http://blog.csdn.net/stockholm\\_sun/article/details/78444273>\n\n\u505a\u8fd9\u4e2a\u9898\u6709\u4e24\u4e2a\u601d\u8def\uff0c\u7b2c\u4e00\u4e2a\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u4f46\u662f\u6211\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u60f3\u5230\u8fd9\u79cd\u89e3\u6cd5\u3002\u8fd9\u91cc\u6211\u91cd\u70b9\u8bb2\u8bb2\u7b2c\u4e8c\u79cd\u6211\u4e00\u5f00\u59cb\u5c31\u60f3\u5230\u7684\u4e00\u4e2a\u89e3\u6cd5\u3002\n\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u901a\u8fc7\u9898\u610f\u4e2d\u4e00\u4e2a\u5b58\u94b1\u7f50\u4e2d\u7684\u94a5\u5319\u80fd\u591f\u6253\u5f00\u53e6\u4e00\u4e2a\uff08\u6216\u8005\u81ea\u5df1\u672c\u8eab\uff09\u5b58\u94b1\u7f50\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u51fa\u8fd9\u4e9b\u5b58\u94b1\u7f50\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u7528\u4e00\u5f20\u56fe\u6765\u8868\u793a\uff0c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u4e00\u5f20\u6709\u5411\u56fe\u3002\u90a3\u4e48\u56fe\u4e2d\u5165\u5ea6\u4e3a0\u7684\u6240\u6709\u8282\u70b9\u4e00\u5b9a\u9700\u8981\u88ab\u7838\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u5982\u679c\u8fd9\u5f20\u6709\u5411\u56fe\u4e2d\u6709\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u5c31\u5fc5\u987b\u6709\u4e00\u4e2a\u9700\u8981\u88ab\u6253\u5f00\uff0c\u7136\u540e\u73af\u5185\u7684\u6240\u6709\u7f50\u90fd\u80fd\u88ab\u6253\u5f00\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u7528Tarjan\u7b97\u6cd5\u6765\u7f29\u70b9\uff0c\u5c06\u5f3a\u8fde\u901a\u5206\u91cf\u505a\u51fa\u6765\uff0c\u7136\u540e\u4f1a\u5f62\u6210\u4e00\u5f20\u65b0\u56fe\uff0c\u5bf9\u4e8e\u8fd9\u5f20\u65b0\u56fe\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\u4e2a\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u5165\u5ea6\u4e0d\u662f0\u7684\u8282\u70b9\u5c31\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u7838\u5f00\u5b83\u7684\u524d\u9a71\uff0c\u53d6\u5230\u94a5\u5319\u5e76\u6253\u5f00\u6765\u5f97\u5230\u66f4\u4f18\u7684\u89e3\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u7ec6\u8282\uff0c\u5c31\u662f\u5bf9\u7f29\u70b9\u4e4b\u540e\u7684\u65b0\u56fe\u4e2d\u81ea\u73af\u7684\u5904\u7406\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u81ea\u73af\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u7edf\u8ba1\u8fd9\u4e00\u6761\u8fb9\uff08\u81ea\u73af\uff09\u3002\n\n\n###\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<deque>\n#include<cstring>\n#define MAXX 1000001\nusing namespace std;\nint i,j,m,n,k; \nint temp,hd[MAXX],col[MAXX],colorn,b[MAXX];\nint deep[MAXX],dfn[MAXX],low[MAXX],num;\nint sta[MAXX],rd[MAXX],top;\nstruct data\n{\n    int v;\n    int nxt;\n}a[MAXX];\n\nint r()\n{\n    int ans=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        ans*=10;\n        ans+=ch-'0';\n        ch=getchar();\n    }\n    return ans*f;\n}\n\nvoid add(int x,int y)\n{\n    a[++temp].nxt=hd[x];\n    a[temp].v=y;\n    hd[x]=temp;\n}\n\nvoid tarjan(int x)\n{\n    int son;\n    dfn[x]=low[x]=++num;\n    b[x]=1;\n    sta[++top]=x;\n    for(int p=hd[x];p;p=a[p].nxt)\n    {\n        son=a[p].v;\n        if(!dfn[son])\n        {\n            tarjan(son);\n            low[x]=min(low[x],low[son]);\n        }\n        else if(b[son])\n        {\n            low[x]=min(low[x],dfn[son]);\n        }\n    }\n    if(dfn[x]==low[x])\n    {\n        b[x]=0;\n        col[x]=++colorn;\n        while(sta[top]!=x)\n        {\n            col[sta[top]]=colorn;\n            b[sta[top--]]=0;\n        }\n        top--;\n    }\n}\n\nint main()\n{\n    n=r();\n    int xx;\n    for(i=1;i<=n;i++)\n    {\n        xx=r();\n        add(xx,i);\n    }\n    \n    for(i=1;i<=n;i++)\n    if(!col[i])\n    tarjan(i);\n    \n    for(i=1;i<=n;i++)\n    for(int p=hd[i];p;p=a[p].nxt)\n    {\n        if(col[a[p].v]!=col[i])\n        rd[col[a[p].v]]++;\n    }\n    int ans=0;\n    for(i=1;i<=colorn;i++)\n    if(!rd[i])\n    ans++;\n    cout<<ans;\n    return 0;\n}\n/*\n5\n2\n3\n3\n3\n3\n*/\n```",
        "postTime": 1509784315,
        "uid": 17407,
        "name": "sunyt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u4e2d\u7684\u8054\u901a\u5feb\uff08\u50cf\u5bb6\u5ead\u95ee\u9898\uff09\n\n```cpp\nvar n,i,x,r1,r2,ans:longint;\nfather:array[0..100000] of longint;\na:array[0..100000] of boolean;\nfunction find(x:longint):longint;//\u5bfb\u627e\u7236\u8282\u70b9\uff0c\u5408\u5e76\nbegin\nif father[x]<>x then father[x]:=find(father[x]);\nfind:=father[x];\nend;\nbegin\nreadln(n);\nfor i:=1 to n do\nfather[i]:=i;//\u6bcf\u4e00\u4e2a\u7684\u521d\u59cb\u7236\u4eb2\u5c31\u662f\u81ea\u5df1\nfor i:=1 to n do\nbegin\nreadln(x);\nr1:=find(i);\nr2:=find(x);\nif r1<>r2 then father[r2]:=r1;//\u4f18\u5316\uff0c\u5c06\u5355\u94fe\u5408\u5e76\nend;\nfor i:=1 to n do\na[find(i)]:=true;//\u67e5\u627e\u6bcf\u4e00\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff08\u6240\u4ee5\u603b\u5171\u7684\u5bb6\u5ead\u6570\u5c31\u662f\u7236\u8282\u70b9\u6570\uff09\nfor i:=1 to n do\nif a[i] then inc(ans);\u5c06\u7236\u8282\u70b9\u6570\u7d2f\u8ba1\nwrite(ans);\nend.\n```\n\u8fde\u901a\u5757\u4e0d\u96be\n\u6ca1\u4eba\u505a\u5e94\u8be5\u662f\u9898\u76ee\u770b\u4e0d\u61c2\n\n\nbyteazar\u6709\u5b58\u94b1\u7f50\u3002\u6bcf\u4e2a\u5b58\u94b1\u7f50\u90fd\u53ef\u4ee5\u7528\u76f8\u5e94\u7684\u94a5\u5319\u6253\u5f00\u3002byteazar\u5df2\u7ecf\u628a\u94a5\u5319\u653e\u5728\u4e86\u5b58\u94b1\u7f50\u4e2d\u3002byteazar\u6253\u7b97\u4e70\u4e00\u8f86\u6c7d\u8f66\uff0c\u4ed6\u9700\u8981\u83b7\u5f97\u6240\u6709\u7684\u5b58\u94b1\u7f50\u4e2d\u7684\u94b1\u3002\u7136\u800c\uff0c\u4ed6\u60f3\u6253\u5f00\u7684\u50a8\u84c4\u7f50\u5c3d\u53ef\u80fd\u5c11\u3002\u5e2e\u52a9byteazar\u786e\u5b9a\u9700\u8981\u6253\u788e\u591a\u5c11\u50a8\u84c4\u7f50\u3002\n\n\n\u6807\u51c6\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570n\uff0c\u8fd9\u662fbyteazar\u62e5\u6709\u7684\u5b58\u94b1\u7f50\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6709n\u884c\uff0c\u7b2ci\u884c\u6709\u4e00\u4e2a\u6574\u6570a[i],\u8868\u793aa[i]\u50a8\u84c4\u7f50\u7684\u94a5\u5319\u88ab\u653e\u7f6e\u5728\u7b2ci\u4e2a\u50a8\u84c4\u7f50\u4e2d\u3002\n\n\n\u6807\u51c6\u8f93\u51fa\u53ea\u6709\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570\u2014\u2014\u4e3a\u4e86\u83b7\u5f97\u6240\u6709\u7684\u5b58\u94b1\u7f50\uff0c\u8981\u6253\u788e\u7684\u6700\u5c0f\u7684\u5b58\u94b1\u7f50\u6570\u3002\n\n\n\u7b80\u5316\u4e00\u4e0b\u5c31\u662f\u6c42\u5bb6\u5ead\u6570\u3002\n",
        "postTime": 1496921339,
        "uid": 32355,
        "name": "AuroraIris",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "~~\u7eff\u7684\u6709\u4e9b\u8fc7\u5206\u4e86\u554a\u5582~~\n\n\u5e76\u67e5\u96c6 $20-$ \u884c\u4ee3\u7801 $\\text{AC}$\n\n### \u9898\u76ee\u5206\u6790\n-----------\n1. \u6570\u636e\u8303\u56f4 $1e6$\uff0c\u5e76\u67e5\u96c6\u53ef\u8fc7\n2. \u82e5 $A$ \u4e2d\u6709 $B$ \u7684\u94a5\u5319\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6253\u7834 $A$ \u5c31\u53ef\u4ee5\u7528\u94a5\u5319\u6253\u5f00 $B$\u3002\u5bf9\u4e8e\u591a\u4e2a\u50a8\u5b58\u7f50\u7684\u5173\u7cfb(\u5373\u591a\u4e2a $A$ \u548c $B$)\uff0c\u6784\u6210\u4e86\u4e00\u6761\u94fe\u3002\u6253\u7834\u94fe\u7684\u6700\u4f4e\u7aef\u5373\u53ef\u987a\u6b21\u5f00\u542f\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u7f50\u5b50\n\n### \u601d\u8def\n-----------\n1. \u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u6253\u5f00\u7684\u987a\u5e8f\uff0c\u53ea\u5173\u5fc3\u6253\u7834\u591a\u5c11\u4e2a\u3002\u7531\u4e8e\u4e00\u6761\u94fe\u6253\u7834\u4e00\u4e2a\u5373\u53ef\uff0c\u6240\u4ee5\u6211\u4eec\u5e72\u8106\u5c06\u94fe\u8f6c\u6362\u4e3a\u5e76\u67e5\u96c6\u4e2d\u7684\u68ee\u6797\uff0c\u94fe\u7684\u4f4e\u7aef\u4e3a\u96c6\u5408\u4ee3\u8868\u3002\u5408\u5e76\u65f6\u7ef4\u62a4\u4e2a\u6570(\u6267\u884c\u4e00\u6b21\u5408\u5e76\u64cd\u4f5c\u96c6\u5408\u6570\u91cf\u51cf\u5c11 $1$)\n\n### \u4ee3\u7801\n-----------\n``` cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 10;\nint fa[maxn], n, cnt;\n\nint gf(int x) { return fa[x] == x ? x : fa[x] = gf(fa[x]); }\nvoid init(int n) { for (int i = 1; i <= n; ++i) fa[i] = i; }\nvoid mer(int x, int y) { if (gf(x) != gf(y)) fa[gf(y)] = gf(x), cnt --; } // \u7b97\u662f\u6838\u5fc3\u4ee3\u7801\u4e86\u5427\n\nint main() {\n\tscanf(\"%d\", &n), init(n), cnt = n;\n\tfor (int i = 1, opt; i <= n; ++i) {\n\t\tscanf(\"%d\", &opt);\n\t\tmer(i, opt);\n\t}\n\tprintf(\"%d\", cnt);\n\treturn 0;\n}\n```",
        "postTime": 1552987202,
        "uid": 80937,
        "name": "\u5929\u624dbyt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u94a5\u5319\u5bf9\u5e94\u7684\u7f50\u5b50\u548c\u5b83\u6240\u5728\u7f50\u5b50union\u4e00\u4e0b\uff0c\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\u5373\u53ef\uff0c\u9644\u849f\u84bb\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,a[1000100],fa[1200000];\nint find(int k)\n{\n    if(fa[k]==k) return k;\n    else return fa[k]=find(fa[k]);\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        fa[i]=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(find(i)!=find(a[i]))\n        {\n            fa[find(i)]=fa[find(a[i])];\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        if(fa[i]==i) ans++;\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1508217256,
        "uid": 45185,
        "name": "was_n",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u8fd8\u597d\uff0c\u5c31\u662f\u8303\u56f4\u8981\u5f00\u5927\u70b9\uff0c\u5176\u5b9e\u5c31\u662f\u7528\u5e76\u67e5\u7ea7\u6765\u627e\uff0c\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff0c\u9644\u8d60\u9898\u89e3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,ans,fa[1000005];\nint find(int x)\n{\n    return fa[x]==x?x:fa[x]=find(fa[x]);\n    //\u5982\u679cfa[x]=x,\u5c31return x\uff0c\u53cd\u4e4b\u7ee7\u7eed\u627e\u3002 \n} \nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    fa[i]=i;//\u6bcf\u4e2a\u90fd\u6253\u4e0a\u81ea\u5df1\u7684\u503c\uff0c\u4fbf\u4e8e\u5224\u65ad\u662f\u5426\u627e\u8fc7\u3002 \n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        int p=find(i),q=find(x);//\u67e5\u627e \n        if(p!=q)\n        fa[q]=p;//\u627e\u8fc7\u7684\u6253\u4e0a\u5176\u4ed6\u7684\u503c \n    }\n    for(int i=1;i<=n;i++)\n    if(fa[i]==i)//\u5982\u679c\u8fd8\u662f\u539f\u6765\u7684\u6570\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u5b58\u94b1\u7f50\u8981\u7838\u5f00\uff0c\u91cc\u9762\u6709\u94a5\u5319\u3002 \n    ans+=1;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1503022116,
        "uid": 51240,
        "name": "27531zsz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u6709\u8da3\u7684\u5e76\u67e5\u96c6/\u8fde\u901a\u5757\u7684\u9898\u76ee\u3002\n\u57fa\u672c\u601d\u60f3\uff1a\u6309\u9898\u76ee\u8981\u6c42\uff0c\u521d\u59cb\u5316\u4f7f\u5f97\u5bf9\u4e8e\u6bcf\u4e2ai\uff0cf[i]=i\u3002\n\u5c06\u7b2ci\u4e2a\u5b58\u94b1\u7f50\u94a5\u5319\u6240\u5728\u7684\u5b58\u94b1\u7f50\u8bbe\u4e3a\u7b2cf[i]\u4e2a\u3002\n\u7136\u540e\u53d1\u73b0\u6ee1\u8db3f[i]=i\u7684i\u5c31\u662f\u65e0\u6cd5\u7528\u94a5\u5319\u6253\u5f00\u7684\u5b58\u94b1\u7f50\uff0c\u9700\u8981\u7838\u5f00\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\nint n,a,x=0,f[1000001];\nint gf(int i)//\u201c\u627e\u7238\u7238\u201d\n{\n\tif(f[i]!=i)f[i]=gf(f[i]);\n\treturn f[i];\n}\nvoid un(int i,int j)//\u6309\u9898\u76ee\u8981\u6c42\u8fde\u63a5\u51fd\u6570\n{\n\tint s=gf(i),t=gf(j);\n\tif(s!=t)f[t]=s;\n}\nint main()\n{\n\tscanf(\" %d\",&n);\n\tfor(int i=1;i<=n;i++)//\u521d\u59cb\u5316\n\t{\n\t\tf[i]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\" %d\",&a);\n\t\tun(i,a);//\u8c03\u7528\u51fd\u6570\u6309\u8981\u6c42\u8fde\u63a5\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(f[i]==i)x++;//\u5224\u65ad\uff0c\u7edf\u8ba1\n\t}\n\tprintf(\"%d\",x);\n\treturn 0;\n}\n```\n                         \n\u8c22\u8c22\uff01",
        "postTime": 1520586426,
        "uid": 59388,
        "name": "VinstaG173",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P3420"
    },
    {
        "content": "\u7a0d\u6709\u5e38\u8bc6\u7684\u4eba\u4e0d\u96be\u770b\u51fa\uff0c\u672c\u9898\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u7684\u88f8\u9898\u3002\u7838\u5f00\u4e00\u4e2a\u7f50\u5b50\u540e\uff0c\u4f1a\u6709\u4e00\u8fde\u4e32\u7684\u7f50\u5b50\u88ab\u6253\u5f00\uff0c\u53ef\u4ee5\u628a\u5b83\u4eec\u770b\u505a\u8054\u901a\u5757\uff0c\u7136\u540e\u7528\u5e76\u67e5\u96c6\u6c42\u51fa\u8054\u901a\u5feb\u4e2a\u6570\u3002\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,x,y,fa[1001000],ans;\nint find(int k)\n{\n    if(k==fa[k])\n    return k;\n    else\n    return fa[k]=find(fa[k]);\n}\nint main()\n{\n    int i;\n    cin>>n;\n    for(i=1;i<=n;i++)\n    fa[i]=i;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        x=find(x);\n        y=find(i);\n        fa[x]=y;\n    }\n    for(i=1;i<=n;i++)\n    if(fa[i]==i)\n    ans++;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1508217311,
        "uid": 44196,
        "name": "wangxuezhu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3420 \u3010[POI2005]SKA-Piggy Banks\u3011"
    }
]