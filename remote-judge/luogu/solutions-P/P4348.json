[
    {
        "content": "\u7ebf\u6bb5\u6811\u52a0\u626b\u63cf\u7ebf\u7ef4\u62a4\u7b54\u6848\u7684\u5dee\u5206\u3002\u52a0\u82b1\u5355\u70b9\u52a0 1\uff0c\u67e5\u8be2\u540e\u7f00\u548c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6p3nrz77.png)\n\n\u52a0\u5165\u53f3\u533a\u95f4\u65f6\u628a\u7eff\u8272\u70b9\u52a0\u4e0a\u84dd\u8272\u533a\u57df\u7684\u503c\uff08\u5b9e\u9645\u4e0a\u4e0d\u662f\u5230\u5e95\uff0c\u800c\u662f\u5230\u4e0b\u4e00\u4e2a\u6805\u680f\uff09\uff08\u56e0\u4e3a\u6211\u4eec\u65b0\u52a0\u5165\u4e24\u6761\u6805\u680f\u540e\u5c31\u8d70\u4e0d\u4e0b\u6765\u4e86\uff09\uff0c\u7136\u540e\u628a\u6a58\u8272\u533a\u57df\u6e05\u96f6\uff08\u4f1a\u88ab\u6805\u680f\u6321\u4f4f\uff09\u3002\n\n\u5220\u9664\u5de6\u533a\u95f4\u65f6\u628a\u68d5\u8272\u533a\u57df\u6e05\u96f6\uff08\u4f1a\u88ab\u6805\u680f\u6321\u4f4f\uff09\uff0c\u5e76\u5728\u7c89\u8272\u70b9\u51cf\u53bb\u7d2b\u8272\u533a\u57df\u7684\u503c\uff08\u53bb\u6389\u4e24\u6761\u6805\u680f\u540e\uff0c\u7c89\u8272\u70b9\u53ef\u80fd\u5148\u4e0b\u540e\u53f3\uff0c\u6216\u5148\u53f3\u540e\u4e0b\uff0c\u4f1a\u7b97\u91cd\uff0c\u6240\u4ee5\u51cf\u6389\u53bb\u91cd\uff09\u3002\n\n\u6ce8\u610f\u6392\u5e8f\u987a\u5e8f\uff1a\u5148\u53f3\u533a\u95f4\uff0c\u7136\u540e\u5de6\u533a\u95f4\uff0c\u7136\u540e\u52a0\u82b1\uff0c\u6700\u540e\u67e5\u8be2\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n//starusc\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1,c=getchar();\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn f==1?x:-x;\n}\nconst int N=2e5+4,M=1e6+4,mx=1e6+1;\nnamespace seg{\n\t#define lc (p<<1)\n\t#define rc (p<<1|1)\n\tint t[M<<2],lz[M<<2];\n\tinline void pushdown(int p,int l,int r){\n\t\tif(!lz[p])return;\n\t\tlz[lc]=lz[rc]=1;\n\t\tt[lc]=t[rc]=0;\n\t\tlz[p]=0;\n\t}\n\tinline void pushup(int p){\n\t\tt[p]=t[lc]+t[rc];\n\t}\n\tvoid modify(int p,int l,int r,int x,int v){\n\t\tif(l==r){\n\t\t\tt[p]+=v;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)modify(lc,l,mid,x,v);\n\t\telse modify(rc,mid+1,r,x,v);\n\t\tpushup(p); \n\t}\n\tvoid cover(int p,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr){\n\t\t\tlz[p]=1;\n\t\t\tt[p]=0;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(p,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tif(ql<=mid)cover(lc,l,mid,ql,qr);\n\t\tif(mid<qr)cover(rc,mid+1,r,ql,qr);\n\t\tpushup(p);\n\t}\n\tint query(int p,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&r<=qr)return t[p];\n\t\tpushdown(p,l,r);\n\t\tint mid=(l+r)>>1;\n\t\tif(qr<=mid)return query(lc,l,mid,ql,qr);\n\t\tif(mid<ql)return query(rc,mid+1,r,ql,qr);\n\t\treturn query(lc,l,mid,ql,qr)+query(rc,mid+1,r,ql,qr);\n\t}\n\t#undef lc\n\t#undef rc\n}\nstruct ques{\n\tint x,yl,yr,id,op;\n}q[N<<2];\ninline bool comp(const ques &a,const ques &b){//op!\u987a\u5e8f\u95ee\u9898 \n\tif(a.x!=b.x)return a.x>b.x;\n\treturn a.op<b.op;\n}\nint n,tot,ans[N],tmp[N];\nmultiset<int>s;\nint main(){\n\tfreopen(\"cow.in\",\"r\",stdin);\n\tfreopen(\"cow.out\",\"w\",stdout);\n\tn=read();\n\tfor(int i=1,a1,b1,a2,b2;i<=n;i++){\n\t\ta1=read();b1=read();a2=read();b2=read();\n\t\tq[++tot]=(ques){a2,b1,b2,i,1};\n\t\tq[++tot]=(ques){a1-1,b1,b2,-i,2};\n\t} \n\tn=read();\n\tfor(int i=1,x,y;i<=n;i++){\n\t\tx=read();y=read();\n\t\tq[++tot]=(ques){x,y,0,0,3};\n\t}\n\tn=read();\n\tfor(int i=1,x,y;i<=n;i++){\n\t\tx=read();y=read();\n\t\tq[++tot]=(ques){x,y,i,0,4};\n\t}\n\tsort(q+1,q+tot+1,comp);\n\ts.insert(mx);\n\tfor(int i=1,nxt;i<=tot;i++){\n\t\tif(q[i].id){\n\t\t\tif(q[i].id>0){\n\t\t\t\tnxt=(*s.upper_bound(q[i].yr));\n\t\t\t\ttmp[q[i].id]=seg::query(1,0,mx,q[i].yr+1,nxt);\n\t\t\t\tseg::modify(1,0,mx,q[i].yl-1,seg::query(1,0,mx,q[i].yl,nxt));\n\t\t\t\tseg::cover(1,0,mx,q[i].yl,q[i].yr);\n\t\t\t\ts.insert(q[i].yl-1);\n\t\t\t\ts.insert(q[i].yr);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tseg::modify(1,0,mx,q[i].yl-1,-tmp[-q[i].id]);\n\t\t\t\tseg::cover(1,0,mx,q[i].yl,q[i].yr);\n\t\t\t\ts.erase(s.find(q[i].yl-1));\n\t\t\t\ts.erase(s.find(q[i].yr));\n\t\t\t}\n\t\t}\n\t\telse if(!q[i].yr){\n\t\t\tseg::modify(1,0,mx,q[i].yl,1);\n\t\t}\n\t\telse{\n\t\t\tnxt=(*s.lower_bound(q[i].yl));\n\t\t\tans[q[i].yr]=seg::query(1,0,mx,q[i].yl,nxt);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)cout<<ans[i]<<\"\\n\";\n\treturn (0-0);\n}\n```",
        "postTime": 1605098186,
        "uid": 49174,
        "name": "starusc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4348 \u3010[CERC2015]Cow Con\ufb01nement\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://blog.csdn.net/ezoixx118/article/details/95370146)  \n# \u9898\u610f\n\n\u4e00\u4e2a$10^6$\u884c$10^6$\u5217\u7684\u7f51\u683c\u56fe\uff0c\u4e0a\u9762\u6709\u4e00\u4e9b\u725b\u3001\u82b1\u548c\u4e00\u4e9b\u77e9\u5f62\u56f4\u680f\uff0c\u56f4\u680f\u5728\u683c\u5b50\u7684\u8fb9\u754c\u4e0a\uff0c\u725b\u548c\u82b1\u5728\u683c\u5b50\u91cc\uff0c\u725b\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u8d70\uff0c\u4e0d\u80fd\u7a7f\u8fc7\u56f4\u680f\u548c\u5730\u56fe\u8fb9\u754c\uff0c\u6c42\u6bcf\u5934\u725b\u5b83\u80fd\u5230\u8fbe\u7684\u82b1\u7684\u6570\u91cf\u3002\uff08\u6805\u680f\u4e0d\u4f1a\u76f8\u4ea4\uff09\n# \u9898\u89e3\n###### \u66b4\u529b\n\u9996\u5148\uff0c\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u5f88\u663e\u7136\u7684dp\uff0c\u8bbe$dp_{i,j}$\u8868\u793a\u65b9\u683c$(i,j)$\u80fd\u5230\u8fbe\u7684\u82b1\u6570\u3002\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u524d\u4e09\u79cd\u60c5\u51b5\u5f88\u7b80\u5355\uff0c\u518d\u6b21\u4e0d\u8d58\u8ff0\uff0c\u7279\u522b\u5730\uff0c\u6709\u4e00\u79cd\u60c5\u51b5\u4e0d\u80fd\u5ffd\u7565\uff0c\u5982\u4e0b\u56fe\uff1a\uff08\u7ea2\u8272\u8303\u56f4\u4e3a\u680f\u6746\uff0c\u84dd\u8272\u4e3a\u5f53\u524d\u683c\uff09\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190710194651399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2V6b2l4eDExOA==,size_16,color_FFFFFF,t_70)  \n\u5982\u679c$dp_{i,j}=dp_{i+1,j}+dp_{i,j+1}$\uff0c\u4f1a\u53d1\u73b0\u9ed1\u8272\u90e8\u5206\u91cd\u590d\u8ba1\u7b97\uff0c\u9700\u8981\u51cf\u53bb\u56f4\u680f\u5de6\u4e0b\u89d2\u7684$dp$\u503c\u3002  \n  \n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u9700\u8981\u4f18\u5316\n\n###### \u4f18\u5316\n\u6211\u4eec\u53d1\u73b0\u9664\u4e86\u6709\u56f4\u680f\u906e\u6321\u7684\u60c5\u51b5\u5916\uff0c\u5f53\u524d\u72b6\u6001\u7684\u66f4\u65b0\u90fd\u7528\u5230$dp_{i+1,j}$\u548c$dp_{i,j+1}$\uff0c\u53ef\u4ee5\u8003\u8651**\u5dee\u5206**\uff1a\n\u6211\u4eec\u53ef\u4ee5\u6309$y$\u4ece\u5927\u5f80\u5c0f**\u626b\u63cf\u7ebf**\uff0c\u7ef4\u62a4\u6570\u7ec4$f_i$\uff0c\u8868\u793a\u7b2cy\u5217\u4e2d\uff08\u6ce8\u610f\u9898\u76ee\u4e2d\u7684y\u662f\u6a2a\u5750\u6807\uff09$dp_{i,y}-dp_{i+1,y}$\u7684\u503c\u3002\u53ef\u4ee5\u753b\u4e2a\u56fe\u5e2e\u52a9\u7406\u89e3\uff1a  \n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20190710201842812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2V6b2l4eDExOA==,size_16,color_FFFFFF,t_70)  \n\u5982\u4e0a\u56fe$f_1$\u7edf\u8ba1\u8303\u56f4\u662f\u84dd\u8272\u90e8\u5206\uff0c$f_2$\u4e5f\u662f\u5b83\u5bf9\u5e94\u7684\u6a2a\u6761\uff0c$f_3$\u7edf\u8ba1\u56f4\u680f\u5185\uff0c\u800c$f_4$\u5219\u7edf\u8ba1\u9ec4\u8272\u90e8\u5206\uff0c\u4e00\u4e2a\u201c7\u201d\u5f62\u3002  \n  \u8fd9\u6837\uff0c\u8981\u7edf\u8ba1\u67d0\u4e00\u5934\u725b$(x,y)$\u80fd\u5230\u8fbe\u7684\u82b1\uff0c\u53ea\u9700\u627e\u51fa\u7b2c\u4e00\u4e2a\u6321\u4f4f\u5b83\u7684\u56f4\u680f\u6a2a\u5750\u6807\uff08R\uff09\uff0c\u7b54\u6848\u5c31\u662f$\\sum_{x\\leq i\\leq R}f_i$  \n    \n   \u73b0\u5728\u95ee\u9898\u662f\u5f53\u626b\u63cf\u5b8c\u4e00\u6761\u7ebf\uff0c$y$\u503c\u51cf\u4e00\u65f6\uff0c\u5982\u4f55\u7ef4\u62a4$f_i$\uff1f\u540c\u6837\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\n   1.\u9047\u5230\u82b1\uff0c\u76f4\u63a5\u5728\u5bf9\u5e94\u4f4d\u7f6e\u628a$f_i$\u52a0\u4e00\u5373\u53ef\n   2.\u9047\u5230\u725b\uff0c\u66f4\u65b0\u7b54\u6848\n   3.\u9047\u5230\u680f\u6746\u7684\u5f00\u59cb\uff1a\u8bbe\u680f\u6746\u7eb5\u5750\u6807\u4e3a$y$\uff0c\u6a2a\u5750\u6807\u8303\u56f4\u4e3a$l$\u5230$r$\u3002\u9996\u5148\u9700\u8981\u628a$f_{l-1}$\u52a0\u4e0a\u65e7\u7684$\\sum_{l\\leq i\\leq r}f_i$\uff08\u5373\u4e0a\u56fe\u9ec4\u8272\u56fe\u5f62\u7684\u4e0b\u8fb9\u4e09\u683c\uff09\uff0c\u7136\u540e\u628a$f_l$\u81f3$f_r$\u8bbe\u4e3a0\uff08\u56e0\u4e3a\u51fa\u4e0d\u53bb\uff09\uff0c\u518d\u628a$l$\uff0c$r$\u6807\u8bb0\u4e3a\u56f4\u680f\uff08\u66f4\u65b0\u7b54\u6848\u8981\u7528\uff09\n   4.\u9047\u5230\u56f4\u680f\u7684\u7ed3\u675f\uff1a\u8bbe\u680f\u6746\u7eb5\u5750\u6807\u4e3a$y$\uff0c\u6a2a\u5750\u6807\u8303\u56f4\u4e3a$l$\u5230$r$\u3002\u9700\u8981\u628a$f_{l-1}$\u51cf\u53bb\u91cd\u590d\u90e8\u5206\uff08\u50cfdp\u7b2c4\u79cd\u60c5\u51b5\u4e00\u6837\uff0c\u5373\u4e0a\u56fe\u9ec4\u8272\u56fe\u5f62\u7684\u4e0b\u8fb9\u4e24\u683c\u4e0e$f_1,f_2$\u91cd\u590d\uff0c\u91cd\u590d\u90e8\u5206\u9700\u8981\u5728\u60c5\u51b53\u8bb0\u5f55\uff09\uff0c\u628a$f_l$\u81f3$f_r$\u8bbe\u4e3a0\uff08\u56e0\u4e3a\u8fdb\u4e0d\u53bb\u56f4\u680f\uff09\uff0c\u518d\u628a$l$\uff0c$r$\u5220\u9664\u56f4\u680f\u6807\u8bb0  \n    \n \u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u8981\u5bf9$f_i$\u8fdb\u884c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u590d\u5236\uff0c\u533a\u95f4\u6c42\u548c\uff0c\u5efa\u7acb\u6807\u8bb0\u548c\u67e5\u8be2\u540e\u4e00\u4e2a\u6807\u8bb0\u3002\u53ef\u4ee5\u7528**\u7ebf\u6bb5\u6811**\u7ef4\u62a4\u3002\n \uff08\u6c34\u5e73\u6709\u9650\uff0c\u8868\u8fbe\u53ef\u80fd\u4e0d\u6e05\uff0c\u8bf7\u7ed3\u5408\u4ee3\u7801\uff09\n # \u4ee3\u7801\n \u4e3a\u4e86\u8fc7\u5ba1\u6838\u6211\u628a\u5feb\u8bfb\u5feb\u5199\u5220\u4e86QaQ\n ```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf 1000005\n#define INF 2005\nusing namespace std;\n \nstruct ST{\n    int sum,set,fen;\n}t[inf*4];\n \nvoid ST_pushdown(int u){\n    if (t[u].set!=-1){\n        t[u*2+1].set=t[u*2].set=0;\n        t[u*2+1].sum=t[u*2].sum=0;\n        t[u].set=-1;\n    }\n    return;\n}\n \nvoid ST_pushup(int u){\n    t[u].sum=t[u*2].sum+t[u*2+1].sum;\n    t[u].fen=(t[u*2].fen|t[u*2+1].fen);\n    return;\n}\n \nvoid ST_build(int u,int l,int r,int N){\n    t[u].set=-1;\n    if (l==r){\n        if (l==N){\n            t[u].fen=1;\n        }\n        return;\n    }\n    int mid=(l+r)/2;\n    ST_build(u*2,l,mid,N);\n    ST_build(u*2+1,mid+1,r,N);\n    ST_pushup(u);\n    return;\n}\n \nvoid ST_add(int u,int l,int r,int k,int v){\n    if (l==r){\n        t[u].sum+=v;\n        return;\n    }\n    ST_pushdown(u);\n    int mid=(l+r)/2;\n    if (k<=mid){\n        ST_add(u*2,l,mid,k,v);\n    }\n    else{\n        ST_add(u*2+1,mid+1,r,k,v);\n    }\n    ST_pushup(u);\n    return;\n}\n \nvoid ST_set0(int u,int l,int r,int L,int R){\n    if (L<=l && r<=R){\n        t[u].set=0;\n        t[u].sum=0;\n        return;\n    }\n    ST_pushdown(u);\n    int mid=(l+r)/2;\n    if (L<=mid){\n        ST_set0(u*2,l,mid,L,R);\n    }\n    if (R>mid){\n        ST_set0(u*2+1,mid+1,r,L,R);\n    }\n    ST_pushup(u);\n    return;\n}\n \nvoid ST_setfen(int u,int l,int r,int k){\n    if (l==r){\n        t[u].fen^=1;\n        return;\n    }\n    int mid=(l+r)/2;\n    ST_pushdown(u);\n    if (k<=mid){\n        ST_setfen(u*2,l,mid,k);\n    }\n    else{\n        ST_setfen(u*2+1,mid+1,r,k);\n    }\n    ST_pushup(u);\n    return;\n}\n \nint ST_nxtfen(int u,int l,int r,int k){\n    if (k<=l){\n        if (!t[u].fen){\n            return 0;\n        }\n        while (l!=r){\n            int mid=(l+r)/2;\n            if (t[u*2].fen){\n                u=u*2,r=mid;\n            }\n            else{\n                u=u*2+1,l=mid+1;\n            }\n        }\n        return l;\n    }\n    ST_pushdown(u);\n    int mid=(l+r)/2;\n    if (k<=mid){\n        int ans=ST_nxtfen(u*2,l,mid,k);\n        return ans?ans:ST_nxtfen(u*2+1,mid+1,r,k);\n    }\n    return ST_nxtfen(u*2+1,mid+1,r,k);\n}\n \nint ST_query(int u,int l,int r,int L,int R){\n    if (L<=l && r<=R){\n        return t[u].sum;\n    }\n    ST_pushdown(u);\n    int mid=(l+r)/2,ans=0;\n    if (L<=mid){\n        ans+=ST_query(u*2,l,mid,L,R);\n    }\n    if (R>mid){\n        ans+=ST_query(u*2+1,mid+1,r,L,R);\n    }\n    return ans;\n}\n \nstruct line{\n    int l,r,y;\n    int id,p;\n    line(){}\n    line(int x1,int x2,int yy,int ii,int pp){\n        l=x1,r=x2,y=yy,id=ii,p=pp;\n    }\n}L[inf];\n \nbool operator<(line _1,line _2){\n    if (_1.y==_2.y){\n        return _1.l<_2.l;\n    }\n    return _1.y>_2.y;\n}\n \nstruct point{\n    int x,y;\n    int id;\n}C[inf],F[inf];\n \nbool operator<(point _1,point _2){\n    return _1.y>_2.y;\n}\n \nint lcnt,ccnt,fcnt,N;\nint ans[inf],s[inf];\n \nvoid addline(int id){\n    if (L[id].p==0){\n        int nxt=ST_nxtfen(1,1,N,L[id].r);\n        s[L[id].id]=ST_query(1,1,N,L[id].r+1,nxt);\n        int sum=ST_query(1,1,N,L[id].l,L[id].r);\n        ST_set0(1,1,N,L[id].l,L[id].r);\n        if (L[id].l!=1){\n            ST_add(1,1,N,L[id].l-1,sum+s[L[id].id]);\n            ST_setfen(1,1,N,L[id].l-1);\n        }\n        ST_setfen(1,1,N,L[id].r);\n    }\n    else{\n        ST_set0(1,1,N,L[id].l,L[id].r);\n        if (L[id].l!=1){\n            ST_add(1,1,N,L[id].l-1,-s[L[id].id]);\n            ST_setfen(1,1,N,L[id].l-1);\n        }\n        ST_setfen(1,1,N,L[id].r);\n    }\n    return;\n}\n \nint main(){\n    int cnt,x1,x2,y1,y2;\n    rd(cnt)\n    for (int i=1;i<=cnt;i++){\n        rd(x1) rd(y1) rd(x2) rd(y2)\n        L[i*2]=line(x1,x2,y2,i,0);\n        L[i*2-1]=line(x1,x2,y1-1,i,1);\n        N=max(N,x2);\n    }\n    lcnt=cnt*2;\n    rd(fcnt)\n    for (int i=1;i<=fcnt;i++){\n        rd(F[i].x) rd(F[i].y)\n        N=max(N,F[i].x);\n    }\n    rd(ccnt)\n    for (int i=1;i<=ccnt;i++){\n        rd(C[i].x) rd(C[i].y) \n        N=max(N,C[i].x);\n        C[i].id=i;\n    }\n    sort(L+1,L+lcnt+1);\n    sort(C+1,C+ccnt+1);\n    sort(F+1,F+fcnt+1);\n    N=inf-4;\n    ST_build(1,1,N,N);\n    int li=1,ci=1,fi=1;\n    for (int i=N;i>=1;i--){\n        for (;L[li].y==i;li++){\n            addline(li);\n        }\n        for (;F[fi].y==i;fi++){\n            ST_add(1,1,N,F[fi].x,1);\n        }\n        for (;C[ci].y==i;ci++){\n            int nxt=ST_nxtfen(1,1,N,C[ci].x);\n            ans[C[ci].id]=ST_query(1,1,N,C[ci].x,nxt);\n        }\n    }\n    for (int i=1;i<=ccnt;i++){\n        write(ans[i]);\n        putchar('\\n');\n    }\n    return 0;\n}\n ```\n\n",
        "postTime": 1562762835,
        "uid": 30541,
        "name": "ezoixx118",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4348 \u3010[CERC2015]Cow Con\ufb01nement\u3011"
    },
    {
        "content": "> solution of P4348\n\nwind_seeker : \u8fd9\u9ed1\u9898\u968f\u968f\u4fbf\u4fbf\u79d2\u5207\u3002\u4e00\u773c\u626b\u63cf\u7ebf , \u4ece\u53f3\u5f80\u5de6\u626b \u3002\n\n\n\u8003\u8651\u4e8c\u7ef4\u52a8\u6001\u89c4\u5212 , \n\n$$dp_{i,j}=dp_{i+1,j}+dp_{i,j+1}$$\n\n\u5982\u679c\u6211\u4eec\u6cbf\u7528 wind_seeker \u7684\u505a\u6cd5 \uff0c \u626b\u63cf\u7ebf\u4ece\u53f3\u5f80\u5de6\u626b , \u5bb9\u6613\u53d1\u73b0\u5728\u540c\u4e00\u5217\u4e2d\u4f1a\u88ab\u5206\u5272\u6210\u82e5\u5e72\u6761\u7ebf\u6bb5 , \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6709\u5e8f\u6570\u636e\u7ed3\u6784\u6bd4\u5982 set \u7ef4\u62a4\u5f53\u524d\u5904\u7406\u7684\u70b9\u7684\u4e0b\u8fb9\u754c \uff0c\u8003\u8651\u5230\u6709\u4e9b\u5217\u662f\u65e0\u6cd5\u8fdb\u884c\u7ee7\u627f\u7684 , \u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5217\u4e0a\u7684\u5dee\u5206 \uff0c \u7136\u540e\u8fdb\u884c\u4e00\u6bb5\u533a\u95f4\u6c42\u548c\u5c31\u53ef\u4ee5\u8fd8\u539f\u51fa $dp_{i,j}$ \u3002\n\n\u7136\u540e\u9047\u5230\u7bf1\u7b06\u7684\u65f6\u5019\u5c31\u9700\u8981\u533a\u95f4\u6e05\u7a7a\uff0c\u5177\u4f53\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/giryq7hq.png)\n\n\u73b0\u5728\u626b\u5230\u7684\u662f\u6574\u4f53\u504f\u7eff\u7684\u4e00\u884c \uff0c \u5de6\u8fb9\u662f\u7bf1\u7b06\u7684\u8303\u56f4 \uff0c \u7531\u4e8e\u7bf1\u7b06\u5185\u90e8\u548c\u7bf1\u7b06\u5916\u90e8\u662f\u5f7c\u6b64\u5206\u79bb\u7684 \uff0c \u6211\u4eec\u9700\u8981\u5728\u53f3\u4e0a\u89d2\u7684\u90a3\u4e2a\u70b9\u52a0\u4e0a\u6574\u6761\u7eff\u8272\u7684\u548c\u8fd8\u539f\u51fa\u539f\u672c\u7684\u6570\u7ec4\uff0c \u800c\u5728\u7bf1\u7b06\u8303\u56f4 $(y1,y2)$ \u5185\u6e05 0 \u8fdb\u884c\u8ba1\u7b97 \u3002\n\n\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f \uff0c \u7531\u4e8e\u6211\u4eec\u5728\u5dee\u5206\u7684\u65f6\u5019\u8fd8\u539f\u4e86\u6570\u7ec4 \uff0c \u6240\u4ee5\u9047\u5230\u53e6\u4e00\u8fb9\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u5c06\u8fd8\u539f\u7684\u8d21\u732e\u51cf\u53bb \uff0c \u56e0\u4e3a\u5230\u4e86\u7c89\u8272\u90a3\u4e00\u884c\u84dd\u8272\u540c\u5c5e\u4e00\u4e2a\u8303\u56f4\u4e4b\u5185 \uff0c \u4f46\u7531\u4e8e\u7eff\u8272\u90e8\u5206\u662f\u53ea\u6709\u53f3\u4fa7\u6df1\u7eff\u8272\u7684\u70b9\u624d\u80fd\u5230\u8fbe\u7684 , \u6240\u4ee5\u6211\u4eec\u8fd8\u539f\u7684\u65f6\u5019\u53ea\u9700\u51cf\u53bb\u6d45\u7eff\u8272\u7684\u540e\u7f00\u548c\u5927\u5c0f\u3002 \u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u5728\u904d\u5386\u5230\u7eff\u8272\u90a3\u4e00\u884c\u7684\u65f6\u5019\u8bb0\u5f55\u6d45\u7eff\u8272\u7684\u4ee3\u4ef7 , \u5230\u7bf1\u7b06\u7684\u53e6\u4e00\u4fa7\u51cf\u6389\u5373\u53ef\u3002",
        "postTime": 1678368895,
        "uid": 235855,
        "name": "shenxinge",
        "ccfLevel": 6,
        "title": "\u6211\u7231\u8001\u516d!!!!"
    }
]