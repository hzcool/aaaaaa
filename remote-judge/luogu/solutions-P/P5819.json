[
    {
        "content": "$$\\mathsf{Preface}$$\n\n> [\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5819)\n\n> \u9898\u610f\u7b80\u8ff0\uff1a\u9898\u9762\u592a\u957f\uff0c\u7ec6\u8282\u592a\u591a\uff0c\u6ca1\u6cd5\u7b80\u8ff0\u3002\u3002\u3002\n\n\u770b\u8d77\u6765\u73b0\u5728\u7684 $\\sf{AC}$ \u8bb0\u5f55\u91cc\u9762\u9664\u4e86\u6211\u548c\u51fa\u9898\u4eba\uff0c\u522b\u7684\u90fd\u662f\u6284\u9898\u89e3\u7684\u3002\u3002\uff08\u622a\u81f3 $2020.2.21\\ 23:08$\uff09\n\n\u953b\u70bc\u7801\u529b + $\\rm{debug}$ \u80fd\u529b\u7684\u9898\u76ee\u3002\u6211\u5bf9\u62cd\u4e86\u65e0\u6570\u6b21\u624d\u628a\u81ea\u5df1\u7684\u9519\u8bef\u4e00\u4e00\u627e\u51fa\u6765\u3002\n\n\u5410\u69fd\u4e00\u4e0b\uff1a**\u8fd9\uff01\u9898\uff01\u7684\uff01\u7ec6\uff01\u8282\uff01\u662f\uff01\u771f\uff01T\uff01M\uff01\u591a\uff01** \n\n\u4e3a\u4e86\u6211\u82b1\u5728\u8fd9\u9053\u9898\u76ee\u4e0a\u7684 $\\rm{3.5h}$\uff0c\u6211\u4e00\u5b9a\u5f97\u5199\u7bc7\u9898\u89e3\u3002\n\n---\n\n$$\\sf{Solution}$$\n\n$$\\sf{Step\\ One:Prework}$$\n\n\n\u6562\u505a\u8fd9\u9053\u9898\u76ee\u7684\u5e94\u8be5\u90fd\u80fd\u4e00\u773c\u770b\u51fa\u662f\u7ebf\u6bb5\u6811\u3002\u3002\u3002\n\n\u6211\u4eec\u5148\u628a\u6240\u6709\u4f4d\u7f6e\u79bb\u6563\u5316\uff0c\u7136\u540e\u5c06 $\\rm{key}$ \u6309\u4e0b\u843d\u65f6\u95f4\u6392\u5e8f\uff0c\u5c06 $\\rm{click}$ \u6309\u70b9\u51fb\u65f6\u95f4\u6392\u5e8f\uff0c\u65b9\u4fbf\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u8be5\u90e8\u5206\u7684\u6ce8\u610f\u70b9\uff1a\n\n- \u548c\u51fa\u9898\u4eba\u7ed9\u51fa\u7684\u9898\u89e3\u4e00\u6837\uff0c\u5c3d\u91cf\u7528\u6574\u6570\u5b58\u50a8\u7b54\u6848\uff0c\u5373\u5c06\u8bfb\u5165\u7684\u6570\u4e58\u4e0a $10^5$\u3002\n\n- \u5316\u6210\u6574\u6570\u7684\u65f6\u5019\u6709\u7cbe\u5ea6\u8bef\u5dee\uff0c\u53ef\u4ee5\u52a0\u4e0a\u50cf\u56db\u820d\u4e94\u5165\u4e00\u6837\u52a0\u4e0a $0.5$\u3002\n\n$\\rm{key}$ \u7684\u8bfb\u5165\u53ca\u79bb\u6563\u5316\uff1a\n\n```cpp\nconst int N=1.2e5+5,inf=2e9+7;\nstruct key{\n\tint t,a,b,sta,ju;//sta\u662f\u8fd9\u4e2akey\u7684\u72b6\u6001\uff0cju\u662f\u8fd9\u4e2akey\u88ab\u5224\u5b9a\u7684\u65f6\u95f4\n\tbool operator < (const key &v) const {return t<v.t;}//\u6309\u65f6\u95f4\u6392\u5e8f\n}c[N];\nstruct click{\n\tint t,pos;\n\tbool operator < (const click &v) const {return t<v.t;}\n}q[N];\nint n,m,cnt,pos[N<<2];\n......main\u51fd\u6570\u5185\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++){\n\t\tdouble x,y,z; read(x),read(y),read(z);\n\t\tc[i]={x*1e5+0.5,y*1e5+0.5,z*1e5+0.5,0};\n\t\tpos[++cnt]=c[i].a,pos[++cnt]=c[i].b;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tdouble x,y; read(x),read(y);\n\t\tq[i]={x*1e5+0.5,y*1e5+0.5};\n\t\tpos[++cnt]=q[i].pos; \n\t}\n\tsort(c+1,c+n+1),sort(q+1,q+m+1),c[0].t=inf;//c[0].t\u8d4b\u4e3ainf\uff0c\u66f4\u65b9\u4fbf\n\tsort(pos+1,pos+cnt+1);\n\tcnt=unique(pos+1,pos+cnt+1)-pos-1;\n```\n\n$$\\sf{Step\\ Two:Build\\ SegmentTree}$$\n\n\u5c06\u76f8\u5e94\u7684 $\\rm{key}$ \u6dfb\u52a0\u5230\u7ebf\u6bb5\u6811\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u533a\u95f4\u53ef\u80fd\u4f1a\u88ab\u591a\u4e2a $\\rm{key}$ \u8986\u76d6\uff0c\u6240\u4ee5\u6bcf\u4e2a\u533a\u95f4\u53ef\u4ee5\u5b58\u4e00\u4e2a\u94fe\u8868\uff0c\u94fe\u8868\u91cc\u9762\u5b58 $\\rm{key}$ \u7684\u7f16\u53f7\u3002\n\n- \u56e0\u4e3a\u4f4d\u7f6e\u79bb\u6563\u5316\u540e\u4f1a\u8fbe\u5230 $2n+m$\uff0c\u6240\u4ee5\u7a7a\u95f4\u8981\u5f00\u5927\u4e00\u4e9b\u3002\uff08\u53cd\u6b63\u4e0d\u4f1a $\\sf{MLE}$ \u5c31\u884c\uff09\n\n\u7ebf\u6bb5\u6811\u7684\u5efa\u9020\uff1a\n\n```cpp\nint get(int x){return lower_bound(pos+1,pos+cnt+1,x)-pos;}//\u8fd4\u56de\u79bb\u6563\u5316\u540e\u7684\u503c\nint node,hd[N<<4],tl[N<<4],nxt[N<<7],val[N<<7];\nvoid push(int x,int id){//\u94fe\u8868\u6dfb\u52a0\n\tif(!hd[x])hd[x]=tl[x]=++node;\n\telse nxt[tl[x]]=++node,tl[x]=node;\n\tval[node]=id;\n}\nvoid add(int l,int r,int ql,int qr,int x,int id){//\u6dfb\u52a0key\n\tif(ql<=l&&r<=qr){\n\t\tpush(x,id);\n\t\treturn;\n\t}\n\tint m=l+r>>1;\n\tif(ql<=m)add(l,m,ql,qr,x<<1,id);\n\tif(m<qr)add(m+1,r,ql,qr,x<<1|1,id);\n}\n......main\u51fd\u6570\u5185\n\tfor(int i=1;i<=n;i++){\n\t\tint p1=get(c[i].a),p2=get(c[i].b);\n\t\tadd(1,cnt,p1,p2,1,i);\n\t}\n```\n\n$$\\sf{Step\\ Three:Query}$$\n\n\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u51fb\uff0c\u5148\u6c42\u51fa\u5b83\u4ea7\u751f\u5224\u5b9a\u6548\u679c\u7684 $\\rm{key}$ \u662f\u5728\u4ec0\u4e48\u65f6\u5019\u4e0b\u843d\u7684\uff0c\u5982\u679c\u6b64\u6b21\u70b9\u51fb\u65f6\u95f4\u4e3a $T$\uff0c\u4f4d\u7f6e\u4e3a $P$\uff0c\u4e5f\u5c31\u662f\u6c42\u51fa $\\min_{a_i\\leq P\\leq b_i,\\ T-0.6s<t_i<T+1s}t_i$\uff0c\u8bb0\u4e3a $t$\u3002\uff08\u533a\u5206 $t$ \u548c $T$\uff09\n\n\u53e6\u5916\uff0c\u5728\u6c42 $t$ \u7684\u65f6\u5019\u8981\u5c06\u524d\u9762\u5df2\u7ecf \u201c\u8fc7\u671f\u201d \u6216\u8005 \u201c\u5df2\u88ab\u5224\u5b9a\u201d \u7684 $\\rm{key}$ \u5f39\u51fa\u3002\n\n\u7ed9\u51fa\u6b64\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#define d val[hd[x]]//\u5b8f\u5b9a\u4e49\u65b9\u4fbf\nvoid update(int x,int t){//\u5c06\u8fc7\u671f\u6216\u5df2\u88ab\u5224\u5b9a\u7684key\u5f39\u51fa\n\twhile(hd[x]){\n\t\tif(c[d].t+60000<=t){//\u8fc7\u671f\n\t\t\tif(!c[d].sta)c[d].ju=c[d].t+60000,c[d].sta=1;\n\t\t\thd[x]=nxt[hd[x]];\n\t\t}\n\t\telse if(c[d].sta)hd[x]=nxt[hd[x]];//\u5df2\u88ab\u5224\u5b9a\n\t\telse break;//\u5426\u5219break \n\t}\n}\nint tim(int x,int t){//\u6c42\u4e00\u4e0b\u4f1a\u5224\u5b9a\u7684key\u7684\u4e0b\u843d\u65f6\u95f4\n\tif(c[d].t-t>=100000)return inf;//\u5982\u679c\u8fd8\u6ca1\u5230\u5224\u5b9a\u8303\u56f4\u5c31\u8fd4\u56deinf\uff08\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u56e0\u4e3a\u524d\u9762c[0].t\u8d4b\u4e3ainf\u4e86\uff0c\u6240\u4ee5\u4e5f\u4f1a\u8fd4\u56deinf\uff09 \n\telse return c[d].t;\n}\nint query(int l,int r,int pos,int x,int t){\n\tupdate(x,t);\n\tif(l==r)return tim(x,t);//\u5982\u679c\u5230\u5e95\u4e86\u5c31\u8fd4\u56de\n\tint m=l+r>>1;\n\tif(pos<=m)return min(tim(x,t),query(l,m,pos,x<<1,t));\n\telse return min(tim(x,t),query(m+1,r,pos,x<<1|1,t));//\u56e0\u4e3a\u5224\u5b9a\u7684\u662f\u6700\u4f4e\u7684key\uff0c\u6240\u4ee5\u53d6min\n}\n```\n\u63a5\u4e0b\u6765\u5224\u5b9a\u6240\u6709\u4e0b\u843d\u65f6\u95f4\u4e3a $t$ \u7684 $\\rm{key}$\u3002\n\n\u6ce8\u610f\u70b9\uff1a\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u5224\u5b9a\u7684 $\\rm{key}$\uff08\u5373\u4ee3\u7801\u4e2d $t=\\rm{inf}$\uff09\uff0c\u8df3\u8fc7\u6b64\u90e8\u5206\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002\n\n```cpp\nvoid modify(int l,int r,int pos,int x,int t,int T){\n\twhile(c[d].t==t){//\u5982\u679c\u4e0b\u843d\u65f6\u95f4\u4e3a\u672c\u6b21key\u7684\u5224\u5b9a\u4e0b\u843d\u65f6\u95f4t\n\t\tif(!c[d].sta){//\u5982\u679c\u6ca1\u6709\u88ab\u5224\u5b9a\n\t\t\tc[d].ju=T;//\u8bb0\u5f55\u88ab\u5224\u5b9a\u7684\u65f6\u95f4T\uff08\u518d\u6b21\u8bf4\u660e\uff0c\u8bf7\u533a\u5206t\u548cT\uff09\n\t\t\tif(abs(c[d].t-T)<20000)c[d].sta=3;//\u6839\u636e\u9898\u76ee\u6240\u7ed9\u7684\u6761\u4ef6\u8fdb\u884c\u5224\u5b9a\uff0c\u4e0b\u540c \n\t\t\telse if(abs(c[d].t-T)<60000)c[d].sta=2;\n\t\t\telse c[d].sta=1;\n\t\t}\n\t\thd[x]=nxt[hd[x]];\n\t}\n\tif(l==r)return;\n\tint m=l+r>>1;\n\tif(pos<=m)modify(l,m,pos,x<<1,t,T);\n\telse modify(m+1,r,pos,x<<1|1,t,T);\n}\n......main\u51fd\u6570\u5185\n\tfor(int i=1;i<=m;i++){\n\t\tint p=get(q[i].pos),t=query(1,cnt,p,1,q[i].t);\n\t\tif(t!=inf)modify(1,cnt,p,1,t,q[i].t);//\u5982\u679c\u6709\u5224\u5b9a\u7684key\u5c31\u5224\u5b9a\n\t}\n```\n\n$$\\sf{Step\\ Four:Calculate\\ Answer}$$\n\n\u6709\u4e86\u6bcf\u4e2a $\\rm{key}$ \u7684\u5224\u5b9a\u65f6\u95f4\u548c\u5224\u5b9a\u72b6\u6001\uff0c\u7b54\u6848\u5c31\u5f88\u597d\u8ba1\u7b97\u4e86\uff0c\u5c06\u6bcf\u4e2a $\\rm{key}$ \u6309\u7167\u5224\u5b9a\u65f6\u95f4\u6392\u5e8f\uff0c\u5224\u5b9a\u65f6\u95f4\u76f8\u540c\u6309 $\\sf{miss,good,perfect}$ \u6392\u5e8f\u5373\u53ef\u3002\n\n\u6b64\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\nbool cmp(key a,key b){return a.ju<b.ju||a.ju==b.ju&&a.sta<b.sta;}\nint mis,goo,per,com,tmp;\n......main\u51fd\u6570\u5185\n\tfor(int i=1;i<=n;i++)if(!c[i].sta)c[i].sta=1,c[i].ju=c[i].t+60000;//\u5982\u679c\u672a\u88ab\u5224\u5b9a\uff0c\u90a3\u5c31\u662fmiss\uff0c\u5224\u5b9a\u65f6\u95f4\u4e3a\u4e0b\u843d\u65f6\u95f4+0.6s \n\tsort(c+1,c+n+1,cmp);//\u6839\u636e\u5224\u5b9a\u65f6\u95f4\u6392\u5e8f\n\tfor(int i=1;i<=n;i++){\n\t\tif(c[i].sta==1)com=max(com,tmp),mis++,tmp=0;\n\t\telse tmp++,c[i].sta==2?goo++:per++;//\u8ba1\u7b97\u7b54\u6848\n\t}\n\tcout<<per<<\" \"<<goo<<\" \"<<mis<<\" \"<<max(tmp,com)<<endl;\n```\n\n\u81f3\u6b64\uff0c\u672c\u9898\u88ab\u6211\u4eec\u5b8c\u7f8e\u89e3\u51b3\uff01\n\n---\n\n$$\\sf{Code}$$\n\n\u7ed9\u51fa\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar buf[1<<23],*p1=buf,*p2=buf;\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\ninline void read(int &x){\n\tbool sign=0; char s=getchar(); x=0;\n\twhile(!isdigit(s))sign|=s=='-',s=getchar();\n\twhile(isdigit(s))x=(x<<1)+(x<<3)+s-'0',s=getchar();\n\tx=sign?-x:x;\n}\ninline void read(double &x){\n\tbool sign=0; char s=getchar(); int a=0; x=0;\n\twhile(!isdigit(s))sign|=s=='-',s=getchar();\n\twhile(isdigit(s))a=(a<<1)+(a<<3)+s-'0',s=getchar();\n\tif(s=='.'){\n\t\tdouble tmp=1; s=getchar();\n\t\twhile(isdigit(s))tmp/=10,x+=tmp*(s-'0'),s=getchar();\n\t}\n\tx+=a,x=sign?-x:x;\n}\n#define d val[hd[x]]//\u5b8f\u5b9a\u4e49\u65b9\u4fbf\nconst int N=1.2e5+5,inf=2e9+7;\nstruct key{\n\tint t,a,b,sta,ju;//sta\u662f\u8fd9\u4e2akey\u7684\u72b6\u6001\uff0cju\u662f\u8fd9\u4e2akey\u88ab\u5224\u5b9a\u7684\u65f6\u95f4\n\tbool operator < (const key &v) const {return t<v.t;}//\u6309\u65f6\u95f4\u6392\u5e8f\n}c[N];\nstruct click{\n\tint t,pos;\n\tbool operator < (const click &v) const {return t<v.t;}\n}q[N];\nbool cmp(key a,key b){return a.ju<b.ju||a.ju==b.ju&&a.sta<b.sta;}\nint n,m,cnt,pos[N<<2];\nint get(int x){return lower_bound(pos+1,pos+cnt+1,x)-pos;}//\u8fd4\u56de\u79bb\u6563\u5316\u540e\u7684\u503c\nint node,hd[N<<4],tl[N<<4],nxt[N<<7],val[N<<7];\nvoid push(int x,int id){//\u94fe\u8868\u6dfb\u52a0\n\tif(!hd[x])hd[x]=tl[x]=++node;\n\telse nxt[tl[x]]=++node,tl[x]=node;\n\tval[node]=id;\n}\nvoid add(int l,int r,int ql,int qr,int x,int id){//\u6dfb\u52a0key \n\tif(ql<=l&&r<=qr){\n\t\tpush(x,id);\n\t\treturn;\n\t}\n\tint m=l+r>>1;\n\tif(ql<=m)add(l,m,ql,qr,x<<1,id);\n\tif(m<qr)add(m+1,r,ql,qr,x<<1|1,id);\n}\nvoid update(int x,int t){//\u5c06\u8fc7\u671f\u6216\u5df2\u88ab\u5224\u5b9a\u7684key\u5f39\u51fa\n\twhile(hd[x]){\n\t\tif(c[d].t+60000<=t){//\u8fc7\u671f\n\t\t\tif(!c[d].sta)c[d].ju=c[d].t+60000,c[d].sta=1;\n\t\t\thd[x]=nxt[hd[x]];\n\t\t}\n\t\telse if(c[d].sta)hd[x]=nxt[hd[x]];//\u5df2\u88ab\u5224\u5b9a\n\t\telse break;//\u5426\u5219break \n\t}\n}\nint tim(int x,int t){//\u6c42\u4e00\u4e0b\u4f1a\u5224\u5b9a\u7684key\u7684\u4e0b\u843d\u65f6\u95f4\n\tif(c[d].t-t>=100000)return inf;//\u5982\u679c\u8fd8\u6ca1\u5230\u5224\u5b9a\u8303\u56f4\u5c31\u8fd4\u56deinf\uff08\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u56e0\u4e3a\u524d\u9762c[0].t\u8d4b\u4e3ainf\u4e86\uff0c\u6240\u4ee5\u4e5f\u4f1a\u8fd4\u56deinf\uff09 \n\telse return c[d].t;\n}\nint query(int l,int r,int pos,int x,int t){\n\tupdate(x,t);\n\tif(l==r)return tim(x,t);//\u5982\u679c\u5230\u5e95\u4e86\u5c31\u8fd4\u56de\n\tint m=l+r>>1;\n\tif(pos<=m)return min(tim(x,t),query(l,m,pos,x<<1,t));\n\telse return min(tim(x,t),query(m+1,r,pos,x<<1|1,t));//\u56e0\u4e3a\u5224\u5b9a\u7684\u662f\u6700\u4f4e\u7684key\uff0c\u6240\u4ee5\u53d6min\n}\nvoid modify(int l,int r,int pos,int x,int t,int T){\n\twhile(c[d].t==t){//\u5982\u679c\u4e0b\u843d\u65f6\u95f4\u4e3a\u672c\u6b21key\u7684\u5224\u5b9a\u4e0b\u843d\u65f6\u95f4t\n\t\tif(!c[d].sta){//\u5982\u679c\u6ca1\u6709\u88ab\u5224\u5b9a\n\t\t\tc[d].ju=T;//\u8bb0\u5f55\u88ab\u5224\u5b9a\u7684\u65f6\u95f4T\uff08\u518d\u6b21\u8bf4\u660e\uff0c\u8bf7\u533a\u5206t\u548cT\uff09\n\t\t\tc[d].sta=abs(c[d].t-T)<20000?3:abs(c[d].t-T)<60000?2:1;//\u6839\u636e\u9898\u76ee\u6240\u7ed9\u7684\u6761\u4ef6\u8fdb\u884c\u5224\u5b9a\n\t\t}\n\t\thd[x]=nxt[hd[x]];\n\t}\n\tif(l==r)return;\n\tint m=l+r>>1;\n\tif(pos<=m)modify(l,m,pos,x<<1,t,T);\n\telse modify(m+1,r,pos,x<<1|1,t,T);\n}\nint mis,goo,per,com,tmp;\nint main(){\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++){\n\t\tdouble x,y,z; read(x),read(y),read(z);\n\t\tc[i]={x*1e5+0.5,y*1e5+0.5,z*1e5+0.5,0};\n\t\tpos[++cnt]=c[i].a,pos[++cnt]=c[i].b;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tdouble x,y; read(x),read(y);\n\t\tq[i]={x*1e5+0.5,y*1e5+0.5};\n\t\tpos[++cnt]=q[i].pos; \n\t}\n\tsort(c+1,c+n+1),sort(q+1,q+m+1),c[0].t=inf;//c[0].t\u8d4b\u4e3ainf\uff0c\u66f4\u65b9\u4fbf\n\tsort(pos+1,pos+cnt+1),cnt=unique(pos+1,pos+cnt+1)-pos-1;//\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++)add(1,cnt,get(c[i].a),get(c[i].b),1,i);\n\tfor(int i=1;i<=m;i++){\n\t\tint p=get(q[i].pos),t=query(1,cnt,p,1,q[i].t);\n\t\tif(t!=inf)modify(1,cnt,p,1,t,q[i].t);//\u5982\u679c\u6709\u5224\u5b9a\u7684key\u5c31\u5224\u5b9a\n\t}\n\tfor(int i=1;i<=n;i++)if(!c[i].sta)c[i].sta=1,c[i].ju=c[i].t+60000;//\u5982\u679c\u672a\u88ab\u5224\u5b9a\uff0c\u90a3\u5c31\u662fmiss\uff0c\u5224\u5b9a\u65f6\u95f4\u4e3a\u4e0b\u843d\u65f6\u95f4+0.6s \n\tsort(c+1,c+n+1,cmp);//\u6839\u636e\u5224\u5b9a\u65f6\u95f4\u6392\u5e8f\n\tfor(int i=1;i<=n;i++){\n\t\tif(c[i].sta==1)com=max(com,tmp),mis++,tmp=0;\n\t\telse tmp++,c[i].sta==2?goo++:per++;//\u8ba1\u7b97\u7b54\u6848\n\t}\n\tcout<<per<<\" \"<<goo<<\" \"<<mis<<\" \"<<max(tmp,com)<<endl;\n\treturn 0;\n}\n```\n\n\u5f00\u4e86 $\\sf{O2}$ \u8dd1\u5f97\u98de\u5feb\uff0c\u4e0d\u5f00 $\\sf{O2}$ \u53ef\u80fd\u4f1a\u56e0\u4e3a\u8bc4\u6d4b\u673a\u6ce2\u52a8 $\\sf{TLE}$\uff08\u53ea\u662f\u53ef\u80fd\uff0c\u56e0\u4e3a\u8fd8\u6ca1\u80cc\u5361\u8fc7\uff0c\u6700\u957f\u7684\u6d4b\u8bd5\u70b9\u5728 $\\sf{900ms}$ \u5de6\u53f3\uff09\n\n---\n\n$$\\sf{Ending}$$\n\n\u5982\u679c\u4f60\u53ea\u5bf9 $\\rm{key}$ \u7684\u4f4d\u7f6e\u79bb\u6563\u5316\uff0c\u5176\u5b9e\u4f1a\u5feb\u4e0d\u5c11\uff0c\u4f46\u7ec6\u8282\u66f4\u591a\uff0c\u6709\u4e00\u4e9b\u8fb9\u754c\u60c5\u51b5\u9700\u8981\u8003\u8651\u3002\u5982\u679c\u4f60\u60f3\u8ffd\u6c42\u66f4\u5feb\u7684\u89e3\u6cd5\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u8fd9\u4efd\u8bc4\u6d4b\u8bb0\u5f55\uff1a[$\\sf{link}$](https://www.luogu.com.cn/record/30906960)\uff08\u5feb\u4e86\u5927\u6982 $25\\%$ \u5de6\u53f3\uff09\n\n\u5176\u5b9e\u5f53\u65f6\u6253\u8fd9\u573a\u6bd4\u8d5b\u7684\u65f6\u5019\u5c31\u60f3\u5199\u6b63\u89e3\uff0c\u4f46\u662f\u7ec6\u8282\u592a\u591a\u5199\u81ea\u95ed\u4e86\u3002\u3002\u3002\n\n\u4eca\u5929\u65e0\u610f\u95f4\u7ffb\u5230\u8fd9\u9053\u9898\uff0c\u4ecd\u7136\u7528\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u5c06\u5176 $\\sf{AC}$\uff0c\u53ef\u89c1\u6211\u662f\u591a\u4e48\u7684\u83dc\u3002\n\n\u7801\u5b57\u4e0d\u6613\uff0c\u65e2\u7136\u4f60\u90fd\u770b\u5230\u8fd9\u513f\u4e86\uff0c\u5c31\u987a\u624b\u70b9\u4e2a\u8d5e\u5457 =w=\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u4e86\u672c\u9898\u89e3\u7684\u7b14\u8bef/\u5b66\u672f\u4e0a\u7684\u9519\u8bef\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u6307\u51fa\u6216\u8005\u76f4\u63a5\u79c1\u4fe1\u901a\u77e5\u6211\uff0c\u4e07\u5206\u611f\u8c22\uff01\n\n\u518d\u6b21\u611f\u8c22\u4f60\u8ba4\u771f\u5730\u7ffb\u5230\u4e86\u8fd9\u91cc\uff0c\u62dc\u62dc ~~",
        "postTime": 1582297102,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5819 \u3010\u3010L&K R-03\u3011\u97f3\u6e38\u5927\u8ba1\u7b97\u3011"
    },
    {
        "content": "\u6240\u4ee5\u554a\uff0c\u4e3a\u4ec0\u4e48\u521a\u8bfb\u5b8c\u9898\u5c31\u611f\u5230\u624b\u75bc\u4e86\u5462\uff1fQwQ\n\n### [\u9898\u76ee](https://www.luogu.com.cn/problem/P5819)\u7b80\u8ff0\n\n\u9898\u76ee\u6bd4\u8f83\u590d\u6742\u2014\u2014\u6ca1\u6709\u73a9\u8fc7\u97f3\u6e38\u7684\u5c0f\u4f19\u4f34\u4eec\u5efa\u8bae\u4ece\u4e0a\u9762\u7684\u94fe\u63a5\u524d\u5f80\u539f\u9898\n\n\u4e0b\u843d\u5f0f\u97f3\u6e38\u3002\u7ed9\u51fa\u5224\u5b9a\u7684\u65f6\u95f4\u89c4\u5219\uff0c\u6bcf\u4e2a Key \u7684\u4f4d\u7f6e\u8303\u56f4\u548c\u5230\u8fbe\u5224\u5b9a\u7ebf\u7684\u65f6\u95f4\uff0c\u6bcf\u6b21 Click \u7684\u4f4d\u7f6e\u548c\u65f6\u95f4\uff0c\u7edf\u8ba1 miss\uff0cgood\uff0cperfect \u548c maxcombo\u3002\n\n### \u601d\u8def\uff1a\n\n#### \u6570\u636e\u7ed3\u6784\u7684\u4f7f\u7528\n\nKey \u7684\u4f4d\u7f6e\u662f\u4e00\u4e2a\u8303\u56f4\uff0c\u5728\u5224\u5b9a\u7ebf\u4e0a\u6295\u5f71\u4e3a\u4e00\u6bb5\u533a\u95f4\uff0cClick \u7684\u4f4d\u7f6e\u662f\u4e00\u4e2a\u70b9\uff0c\u5728\u5224\u5b9a\u7ebf\u4e0a\u6295\u5f71\u4e3a\u4e00\u4e2a\u70b9\u2014\u2014\u5904\u7406\u6bcf\u4e00\u6b21\u7684 Click\uff0c\u5bf9 Key \u8fdb\u884c\u5224\u5b9a\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u4e00\u6761\u7ebf\u6bb5\u4e0a\u4ee5\u4e00\u4e2a\u5355\u70b9\u4e3a\u5165\u53e3\u5bf9\u533a\u95f4\u8fdb\u884c\u5224\u5b9a\u2014\u2014\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6570\u6765\u7ef4\u62a4 Click \u548c Key \u7684\u4fe1\u606f\u3002\n\n\u4e00\u822c\u6765\u8bb2\u7ebf\u6bb5\u6811\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u4e8c\u7ef4\u6570\u636e\u7ed3\u6784\uff0c\u4e24\u4e2a\u7ef4\u5ea6\u5206\u522b\u662f\u300c\u4f4d\u7f6e\u300d\u548c\u300c\u5c42\u7ea7\u300d\uff1a\u5728\u8bbf\u95ee\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u6211\u4eec\u4ece\u300c\u4f4d\u7f6e\u300d\u51fa\u53d1\uff0c\u5728\u300c\u5c42\u7ea7\u300d\u4e0a\u63a8\u8fdb\uff0c\u6700\u7ec8\u627e\u5230\u6211\u4eec\u8981\u8bbf\u95ee\u7684\u6570\u636e\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u3002![2D-SegmentTree](https://i.loli.net/2020/05/31/pxiobkyMrNTjKLO.jpg)\n\n\u4f46\u662f\u5728\u672c\u9898\u4e2d\uff0c\u5224\u5b9a\u7ebf\u4e0a\u7684\u540c\u4e00\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u4e2a Key\uff0c\u8fd9\u4e9b Key \u5728\u300c\u4f4d\u7f6e\u300d\u548c\u300c\u5c42\u7ea7\u300d\u7ef4\u5ea6\u8bb0\u5f55\u7684\u6570\u636e\u90fd\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u51fa\u73b0\u7684\u65f6\u95f4\u662f\u4e0d\u540c\u7684\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e8c\u7ef4\u7684\u7ebf\u6bb5\u6811\u5df2\u7ecf\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u7edf\u8ba1\u6570\u636e\u7684\u9700\u8981\uff0c\u6211\u4eec\u5e94\u8be5\u5728\u4e8c\u4f4d\u7ebf\u6bb5\u6811\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a\u300c\u65f6\u95f4\u300d\u7ef4\u5ea6\u3002![3D-SegmentTree](https://i.loli.net/2020/05/31/a3YVHPgt9eNjKqx.jpg)\n\n\u4ece\u4e0a\u9762\u7684\u7ebf\u6bb5\u6811\u5206\u6790\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff1a\u7ebf\u6bb5\u6811\u7684\u51e0\u4e2a\u7ef4\u5ea6\u5e76\u4e0d\u662f\u5e73\u884c\u5173\u7cfb\uff0c\u5176\u4ece\u4e3b\u5230\u6b21\u7684\u987a\u5e8f\u5206\u522b\u662f\uff1a\u300c\u4f4d\u7f6e\u300d\u300c\u5c42\u7ea7\u300d\u300c\u65f6\u95f4\u300d\n\n#### \u6570\u636e\u5904\u7406\n\n\u4f4d\u7f6e\u548c\u65f6\u95f4\u90fd\u662f\u6700\u591a\u4e94\u4f4d\u7684\u5c0f\u6570\uff0c\u4e3a\u4e86\u8ba1\u7b97\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6570\u636e\u4e58 $10^5$\uff0c\u7528\u6574\u6570\u8868\u793a\u4f4d\u7f6e\u548c\u65f6\u95f4\uff0c\u4e3a\u4e86\u9632\u6b62\u4ea7\u751f\u7cbe\u5ea6\u8bef\u5dee\u53ef\u4ee5\u7528\u300c\u56db\u820d\u4e94\u5165\u300d\u7684\u65b9\u5f0f\u52a0\u4e0a 0.5\u3002\u5c06\u6570\u636e\u79bb\u6563\u5316\u5e76\u4e14\u5c06 Key \u548c Click \u6309\u7167\u65f6\u95f4\u6392\u5e8f\u65b9\u4fbf\u7ebf\u6bb5\u6811\u65f6\u95f4\u7ef4\u5ea6\u7684\u6784\u9020\u4ee5\u53ca\u7b54\u6848\u7684\u7edf\u8ba1\u3002\n\n#### \u5c06 Key \u653e\u5165\u7ebf\u6bb5\u6811\n\n\u65b9\u6cd5\u4e0e\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u51e0\u4e4e\u76f8\u540c\u3002\n\n\u5728\u539f\u6765\u7684\u7ebf\u6bb5\u6811\u4e2d\u5f53\u67e5\u627e\u5230\u7ebf\u6bb5\u6811\u6700\u5e95\u5c42\u65f6\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u4e5f\u8d70\u5b8c\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6570\u636e\u76f4\u63a5\u5b58\u5165\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\uff0c\u800c\u73b0\u5728\u6211\u4eec\u8981\u5728\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u518d\u6269\u5c55\u51fa\u4e00\u7ef4\uff1a\u53ef\u4ee5\u4f7f\u7528\u94fe\u8868\u50a8\u5b58 Key \u7684\u7f16\u53f7\uff0c\u6302\u5728\u7ebf\u6bb5\u6811\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e2d\u3002\u7531\u4e8e\u521a\u624d\u5df2\u7ecf\u5c06 Key \u6309\u7167\u65f6\u95f4\u6392\u8fc7\u5e8f\uff0c\u6bcf\u4e00\u6761\u94fe\u4e0a\u7684\u7f16\u53f7\u6240\u6307\u5411\u7684 Key \u4e5f\u662f\u65f6\u95f4\u4ece\u524d\u5f80\u540e\u7684\u2014\u2014\u8fd9\u6837\u5c31\u6210\u529f\u6784\u5efa\u51fa\u4e86\u6211\u4eec\u6240\u5e0c\u671b\u7684\u4e09\u7ef4\u7ebf\u6bb5\u6811\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff1a\u539f\u672c\u7684\u4e8c\u7ef4\u7ebf\u6bb5\u6811\u5bf9\u6570\u7ec4\u5927\u5c0f\u8981\u6c42\u5c31\u5df2\u7ecf\u5f88\u9ad8\u4e86\uff0c\u518d\u6269\u5c55\u4e00\u7ef4\u4f1a\u6709\u66f4\u5927\u7684\u7a7a\u95f4\u5f00\u9500\u2014\u2014\u518d\u52a0\u4e0a\u6211\u4eec\u5bf9\u4f4d\u7f6e\u8fdb\u884c\u4e86\u79bb\u6563\u5316\u5904\u7406\uff0c\u6240\u4ee5\u8981\u628a\u6570\u7ec4\u5f00\u5927\u4e9b\u3002\n\n#### \u5bf9\u4e8e Click \u548c Key \u7684\u5224\u5b9a\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21 Click\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5b83\u5728\u90a3\u4e2a\u5177\u4f53\u7684\u65f6\u95f4\u3002\u4e8b\u5b9e\u4e0a\u6211\u4eec\u9700\u8981\u6c42\u51fa\u518d\u6709\u6548\u6253\u51fb\u65f6\u95f4\u8303\u56f4\u5185\u6700\u524d\u9762\u7684\u4e00\u4e2a Key\uff0c\u5373\u5bf9\u4e8e\u65f6\u95f4\u4e3a $clickTime$\uff0c\u4f4d\u7f6e\u4e3a $pos$ \u7684 Click\uff0c\u6211\u4eec\u8981\u6c42 $judgeTime_{min}$ \u6ee1\u8db3 $a_i \u2264 pos \u2264 b_i$ \u4e14 $clickTime-0.6s < judgeTime < clickTime + 1s$\u3002\u7136\u540e\u5bf9\u4e8e\u6211\u4eec\u6c42\u51fa\u7684\u6bcf\u4e00\u4e2a $judgeTime$ \u5224\u5bf9\u53ef\u4ee5\u5224\u5b9a\u7684 Key \u6309\u7167\u89c4\u5219\u8fdb\u884c\u5904\u7406\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5224\u5b9a\u8fc7\u7684 Key \u6211\u4eec\u8981\u4ece\u7ebf\u6bb5\u6811\u4e2d\u5220\u9664\u2014\u2014\u64cd\u4f5c\u5f88\u7b80\u5355\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6b65\u9aa4\u3002\n\n#### \u7b54\u6848\u7684\u7edf\u8ba1\n\n\u6700\u540e\u6309\u7167\u5224\u5b9a\u65f6\u95f4\u5bf9 Key \u8fdb\u884c\u6392\u5e8f\uff08\u4ee5\u4fbf\u8ba1\u7b97maxCombo\uff09\uff0c\u626b\u4e00\u904d Key \u987a\u4fbf\u5c31\u53ef\u4ee5\u7edf\u8ba1\u5224\u5b9a\u7ed3\u679c\u4e86\n\n### Code\n\n```CPP\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<climits>\n#define thisKey ky[nodeSerial[headNode[x]]]\nusing namespace std;\nconst int MaxN = 120000, Inf = INT_MAX;\nint n, m, elemCount;\nint missKey, goodTap, perfectClick, maxCombo, curCombo;\nstruct Key{int t, a, b, judgeTime, ifJudged;} ky[MaxN];\nstruct Click{int t, pos;} click[MaxN];\nint nodeCount, headNode[MaxN << 4], lastNode[MaxN << 4], nextNode[MaxN << 10], nodeSerial[MaxN << 10];\nbool cmpKey(Key x, Key y){return x.t < y.t;}\nbool cmpClick(Click x, Click y){return x.t < y.t;}\nbool cmpJudge(Key x, Key y){return x.judgeTime < y.judgeTime || (x.judgeTime == y.judgeTime && x.ifJudged < y.ifJudged);}\nint posData[MaxN << 3];\ninline int getPos(int x){return lower_bound(posData+1, posData+elemCount+1, x) - posData;}\ninline void AddNode(int x,  int ser){\n\t//the x-th position on the segment tree with ser-th key\n\t//it's worth noticed that for position x there may be more than one key with different serial\n\tnodeCount++;\n\tif(!headNode[x]) headNode[x] = lastNode[x] = nodeCount;\n\telse nextNode[lastNode[x]] = nodeCount, lastNode[x] = nodeCount;\n\tnodeSerial[nodeCount] = ser;\n}\ninline void Build(int l, int r, int reqL, int reqR, int x, int ser){\n\t//in the traditional segment tree we can simply give a[i]'s value to the tree but here we need to used the AddNote function\n\tif(l >= reqL && r <= reqR){AddNode(x, ser); return;}\n\tint mid = (l + r) / 2;\n\tif(reqL <= mid) Build(l, mid, reqL, reqR, x*2, ser);\n\tif(reqR > mid) Build(mid+1, r, reqL, reqR, x*2+1, ser);\n}\n//obviously the big number in the functions below comes from the 0.6 and 1 in game rule: after dispersing these numbers also get bigger\ninline void Refresh(int x, int t){\n\t//keys that have been clicked should be deleted\n\twhile(headNode[x]){\n\t\tif(thisKey.t + 60000 <= t){\n\t\t\tif(!thisKey.ifJudged){\n\t\t\t\tthisKey.judgeTime = thisKey.t + 60000;\n\t\t\t\tthisKey.ifJudged = 1;\n\t\t\t}\n\t\t\theadNode[x] = nextNode[headNode[x]];\n\t\t}\n\t\telse if(thisKey.ifJudged) headNode[x] = nextNode[headNode[x]];\n\t\telse break;\n\t}\n}\ninline int JudgeTimeCal(int x, int t){\n\tif(thisKey.t - t >= 100000) return Inf;\n\telse return thisKey.t;\n}\ninline int GetJudgeTime(int l, int r, int pos, int x, int t){\n\t//delete judged keys before EVERY SINGLE TIME of JUDGE!\n\tRefresh(x, t);\n\tif(l == r) return JudgeTimeCal(x, t);\n\tint mid = (l + r) / 2;\n\tif(pos <= mid) return min(JudgeTimeCal(x, t), GetJudgeTime(l, mid, pos, x*2, t));\n\telse return min(JudgeTimeCal(x, t), GetJudgeTime(mid+1, r, pos, x*2+1, t));\n}\ninline void Judge(int l, int r, int pos, int x, int t, int jt){\n\twhile(thisKey.t == t){\n\t\tif(!thisKey.ifJudged){\n\t\t\tthisKey.judgeTime = jt;\n\t\t\tif(abs(thisKey.t - jt) < 20000) thisKey.ifJudged = 3;\n\t\t\telse if(abs(thisKey.t - jt) < 60000) thisKey.ifJudged = 2;\n\t\t\telse thisKey.ifJudged = 1;\n\t\t}\n\t\theadNode[x] = nextNode[headNode[x]];\n\t}\n\tif(l == r) return;\n\tint mid = (l + r) / 2;\n\tif(pos <= mid) Judge(l, mid, pos, x*2, t, jt);\n\telse Judge(mid+1, r, pos, x*2+1, t, jt);\n}\nint main(){\n\t//intput and have keys dispersed\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tdouble t, a, b;\n\t\tscanf(\"%lf%lf%lf\",&t,&a,&b);\n\t\tky[i].t = t*1e5+0.5, ky[i].a = a*1e5+0.5, ky[i].b = b*1e5+0.5;\n\t\tposData[++elemCount] = ky[i].a, posData[++elemCount] = ky[i].b;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tdouble t, p;\n\t\tscanf(\"%lf%lf\",&t,&p);\n\t\tclick[i].t = t*1e5+0.5, click[i].pos = p*1e5+0.5;\n\t\tposData[++elemCount] = click[i].pos;\n\t}\n\tky[0].t = Inf;\n\tsort(ky+1, ky+1+n, cmpKey);\n\tsort(click+1, click+1+m, cmpClick);\n\tsort(posData+1, posData+1+elemCount);\n\telemCount = unique(posData+1, posData+elemCount+1) - posData - 1;\n\t//add keys to the segment tree\n\tfor(int i=1;i<=n;i++)\n\t\tBuild(1, elemCount, getPos(ky[i].a), getPos(ky[i].b), 1, i);\n\t//judge\n\tfor(int i=1;i<=m;i++){\n\t\tint clickPos = getPos(click[i].pos);\n\t\tint t = GetJudgeTime(1, elemCount, clickPos, 1, click[i].t);\n\t\tif(t != Inf) Judge(1, elemCount, clickPos, 1, t, click[i].t);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!ky[i].ifJudged){\n\t\t\tky[i].ifJudged = 1;\n\t\t\tky[i].judgeTime = ky[i].t + 60000;\n\t\t}\n\tsort(ky+1, ky+1+n, cmpJudge);\n\tfor(int i=1;i<=n;i++){\n\t\tif(ky[i].ifJudged == 1) missKey++, maxCombo = max(maxCombo, curCombo), curCombo = 0;\n\t\telse if(ky[i].ifJudged == 2) curCombo++, goodTap++;\n\t\telse if(ky[i].ifJudged == 3) curCombo++, perfectClick++;\n\t}\n\tmaxCombo = max(maxCombo, curCombo);\n\tprintf(\"%d %d %d %d\", perfectClick, goodTap, missKey, maxCombo);\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1590907195,
        "uid": 235832,
        "name": "potatoler",
        "ccfLevel": 4,
        "title": "P5819 \u97f3\u6e38\u5927\u8ba1\u7b97"
    },
    {
        "content": "\u672c\u9898\u53ea\u9700\u4f7f\u7528\u7b80\u5355\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5373\u53ef\uff08\u4f3c\u4e4e\u53eb\u7ebf\u6bb5\u6811\u5206\u6cbb\uff1f\uff09\uff0c\u5f53\u7136\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\u4e0b\u9762\u5206\u90e8\u5206\u5206\u8fdb\u884c\u89e3\u7b54\u3002\n\n$30\\%$\n\n\u66b4\u529b\u6a21\u62df\u5373\u53ef\u3002\n\n$50\\%$\n\n\u8003\u8651\u5230$key$\u7684\u6570\u91cf\u6bd4\u8f83\u5c11\uff0c\u6700\u591a\u4ea7\u751f$5000$\u6b21\u5224\u5b9a\uff0c\u6240\u4ee5\u5148\u7ef4\u62a4$key$\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0e\u65f6\u95f4\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u70b9\u51fb\uff0c\u5224\u65ad\u5176\u4f4d\u7f6e\u548c\u65f6\u95f4\u662f\u5426\u53ef\u80fd\u51fb\u4e2d$key$\uff0c\u4e0d\u53ef\u80fd\u5219\u76f4\u63a5$continue$\uff0c\u5982\u679c\u53ef\u80fd\u5219\u66b4\u529b\u679a\u4e3e\u88ab\u51fb\u4e2d\u7684$key$\u5e76\u5c06\u5176\u6807\u8bb0\uff0c$key$\u5168\u90e8\u88ab\u6807\u8bb0\u5219\u7ed3\u675f\u7a0b\u5e8f\u3002\u590d\u6742\u5ea6$O(m+n^2)$\uff0c\u53ef\u80fd\u7ef4\u62a4\u4fe1\u606f\u4f1a\u589e\u52a0\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u56e0\u4e3a\u6570\u636e\u6c34\u80af\u5b9a\u53ef\u4ee5\u8fc7\u3002\n\n$60\\%$\n\n\u7c7b\u4f3c\u4e0a\u9762\u7684\u65b9\u6cd5\u5224\u65ad\u70b9\u51fb\u662f\u5426\u53ef\u80fd\u51fb\u4e2d$key$\uff0c\u4f46\u662f\u53ef\u4ee5\u5148\u628a$key$\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u5219\u88ab\u51fb\u4e2d\u7684$key$\u80af\u5b9a\u662f\u961f\u5934\u3002\n\n$70\\%$\n\n\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u66b4\u529b\uff0c\u56e0\u4e3a\u6570\u636e\u5341\u5206\u79bb\u6563\u6240\u4ee5\u679a\u4e3e\u6b21\u6570\u5c11\uff0c\u53ef\u8fc7\u3002\n\n\u524d$70$\u5206\u7528$n\\le5000,m\\le114514$\u7684\u5199\u6cd5\u5373\u53ef\u8fc7\u3002\n\n$100\\%$\n\n\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u3002\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u7b97\u6cd5\u65f6\u95f4\u4e3b\u8981\u82b1\u5728\u5224\u65ad\u70b9\u51fb\u51fb\u4e2d\u7684$key$\u662f\u54ea\u4e00\u4e2a\u3002\u56e0\u4e3a$key$\u662f\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff0c\u5c06\u6bcf\u4e2a$key$\u7684\u4fe1\u606f\u5206\u6563\u5b58\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u6bcf\u6b21\u70b9\u51fb\u5219\u67e5\u8be2\u5305\u542b\u8fd9\u4e2a\u4f4d\u7f6e\u7684$key$\u4e2d\u6700\u4f4e\u7684\u90a3\u4e2a\uff08\u7528\u5355\u8c03\u961f\u5217\u5b9e\u73b0\uff09\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230\u7528$O(m\\log(2n+m))$\uff08$2n+m$\u4e3a\u79bb\u6563\u5316\u6700\u591a\u4f1a\u4ea7\u751f\u7684\u4f4d\u7f6e\u6570\uff09\u7684\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\u3002\n\n\u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\uff08\u53ef\u80fd\u5f88\u5bb9\u6613\u6ce8\u610f\u5230\uff09\uff1a\u6d6e\u70b9\u6570\u7cbe\u5ea6\u5f88\u5bb9\u6613\u70b8\uff0c\u8981\u7528\u5feb\u8bfb\u628a\u6d6e\u70b9\u6570\u8f6c\u4e3a\u6574\u6570\uff08\u4e58$100000$\uff09\u518d\u79bb\u6563\u5316\uff1b~~\u53ef\u80fd\u662f\u51fa\u9898\u4eba\u5e38\u6570\u6bd4\u8f83\u5927~~\uff0c\u7528\u6392\u5e8f\u79bb\u6563\u5316\u6bd4\u7528$map$\u5feb\u4e86\u5c06\u8fd1$1s$\u2026\u2026\u6240\u4ee5\u8fd8\u662f\u8981\u6ce8\u610f\u4e00\u4e0b\u5e38\u6570\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u6b64\u9898\u5176\u5b9e\u662f\u4e2a\u5f88\u57fa\u672c\u7684\u7ebf\u6bb5\u6811\u4f18\u5316\u9898\uff0c\u6ce8\u610f\u7ec6\u8282\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint n,m;\nint per=0,goo=0,mis=0,combo=0,maxcom=0;\nbool vis[300000]={0};\nstruct KEY\n{\n\tint t,a,b;\n}key[300000];\nstruct TAP\n{\n\tint t,x;\n}tap[300000];\nstruct LB\n{\n\tint bh,nexty;\n}lb[5000000];\nint tail[4000000]={0},head[4000000]={0},cnt=0;\nint yd=1;int zhi;\ninline int min(int&a,int&b){return a<b?a:b;}\nstruct LS\n{\n\tint num,bh;\n}ls[1000000];\nbool cmpkey(const KEY&a,const KEY&b){return a.t<b.t;}\nbool cmptap(const TAP&a,const TAP&b){return a.t<b.t;}\nbool cmpls1(const LS&a,const LS&b){return a.num<b.num;}\nbool cmpls2(const LS&a,const LS&b){return a.bh<b.bh;}\nvoid jia(int zuo,int you,int node,int bh)\n{\n\tif(zuo>key[bh].b||you<key[bh].a)return;\n\tif(key[bh].a<=zuo&&you<=key[bh].b)\n\t{\n\t\tcnt++;\n\t\tlb[cnt].bh=bh;lb[cnt].nexty=0;\n\t\tlb[tail[node]].nexty=cnt;tail[node]=cnt;\n\t\treturn;\n\t}\n\tint mid=(zuo+you)>>1;\n\tjia(zuo,mid,node<<1,bh);jia(mid+1,you,node<<1|1,bh);\n}\nint query(int zuo,int you,int node,int bh)\n{\n\tif(zuo>tap[bh].x||you<tap[bh].x)return 2e9;\n\twhile(head[node]&&vis[lb[head[node]].bh])head[node]=lb[head[node]].nexty;\n\tif(zuo==you)return key[lb[head[node]].bh].t;\n\tint mid=(zuo+you)>>1;\n\treturn min(key[lb[head[node]].bh].t,min(query(zuo,mid,node<<1,bh),query(mid+1,you,node<<1|1,bh)));\n}\nvoid del(int zuo,int you,int node,int bh)\n{\n\tif(zuo>tap[bh].x||you<tap[bh].x)return;\n\twhile(head[node]&&key[lb[head[node]].bh].t==zhi)\n\t{\n\t\tif(!vis[lb[head[node]].bh])\n\t\t{\n\t\t\tvis[lb[head[node]].bh]=true;\n\t\t\tif(60000<=zhi-tap[bh].t)mis++,combo=0;\n\t\t\tif(20000<=zhi-tap[bh].t&&zhi-tap[bh].t<60000)goo++,combo++;\n\t\t\tif(-20000<zhi-tap[bh].t&&zhi-tap[bh].t<20000)per++,combo++;\n\t\t\tif(zhi-tap[bh].t<=-20000)goo++,combo++;\n\t\t\tmaxcom=max(maxcom,combo);\n\t\t}\n\t\thead[node]=lb[head[node]].nexty;\n\t}\n\tif(zuo==you)return;\n\tint mid=(zuo+you)>>1;\n\tdel(zuo,mid,node<<1,bh);del(mid+1,you,node<<1|1,bh);\n}\nint ch;\ninline void dr(int&a)\n{\n\ta=ch=0;\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9'){a=a*10+ch-'0';ch=getchar();}\n\tif(ch!='.'){a*=100000;return;}\n\tch=getchar();a=a*10+ch-'0';//1\n\tch=getchar();if(ch<'0'||ch>'9'){a*=10000;return;}\n\ta=a*10+ch-'0';//2\n\tch=getchar();if(ch<'0'||ch>'9'){a*=1000;return;}\n\ta=a*10+ch-'0';//3\n\tch=getchar();if(ch<'0'||ch>'9'){a*=100;return;}\n\ta=a*10+ch-'0';//4\n\tch=getchar();if(ch<'0'||ch>'9'){a*=10;return;}\n\ta=a*10+ch-'0';//5\n}\nint main()\n{ \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdr(key[i].t);dr(key[i].a);dr(key[i].b);\n\t\tls[i].num=key[i].a;ls[i].bh=i;\n\t\tls[i+n].num=key[i].b;ls[i+n].bh=i+n;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tdr(tap[i].t);dr(tap[i].x);\n\t\tls[2*n+i].num=tap[i].x;ls[2*n+i].bh=2*n+i;\n\t}\n\tsort(ls+1,ls+2*n+m+1,cmpls1);\n\tint a=-1,js=0;\n\tfor(int i=1;i<=2*n+m;i++)\n\t{\n\t\tif(a!=ls[i].num)js++;\n\t\ta=ls[i].num;ls[i].num=js;\n\t}\n\tsort(ls+1,ls+2*n+m+1,cmpls2);\n\tfor(int i=1;i<=n;i++)key[i].a=ls[i].num,key[i].b=ls[i+n].num;\n\tfor(int i=1;i<=m;i++)tap[i].x=ls[2*n+i].num;\n\tsort(key+1,key+n+1,cmpkey);sort(tap+1,tap+m+1,cmptap);\n\tkey[0].t=2e9;\n\tfor(int i=1;i<=js*4;i++)\n\t{\n\t\tcnt++;lb[cnt].bh=lb[cnt].nexty=0;\n\t\thead[i]=tail[i]=cnt;\n\t}\n\tfor(int i=1;i<=n;i++)jia(1,js,1,i);\n\tvis[0]=true;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(yd<=n&&key[yd].t<=tap[i].t-60000)\n\t\t{\n\t\t\tif(!vis[yd])vis[yd]=true,mis++,combo=0;\n\t\t\tyd++;\n\t\t}\n\t\tzhi=query(1,js,1,i);\n\t\tif(zhi>=tap[i].t+100000)continue;\n\t\tdel(1,js,1,i);\n\t}\n\twhile(yd<=n){if(!vis[yd])vis[yd]=true,mis++,combo=0;yd++;}\n\tprintf(\"%d %d %d %d\\n\",per,goo,mis,maxcom);\n\treturn 0;\n}\n```\n",
        "postTime": 1576741621,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5819 \u3010\u3010L&K R-03\u3011\u97f3\u6e38\u5927\u8ba1\u7b97\u3011"
    }
]