[
    {
        "content": "### \u5206\u6790\uff1a\n\nDP\n\n\u6765\u8d21\u732e\u4e00\u53d1\u6700\u52a3\u89e3\u7684\u505a\u6cd5\n\n* \u66b4\u529b\n\n\u6211\u4eec\u53d1\u73b0\u7531\u4e8e**\u957f\u5ea6\u4e4b\u548c\u4e0d\u8d85\u8fc7$2^{13}$** \uff0c\u6240\u4ee5\u653e\u8fdb\u53bb\u7684\u5757\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e0d\u8d85\u8fc7 $2^{14}$ \u7684\u6570\u5b57\u72b6\u538b\u51fa\u6765\uff0c\u5176\u6b21\u6211\u4eec\u624b\u73a9\u6837\u4f8b\u4f1a\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u8fc7\u7a0b\u4e2d\u62fc\u51fa\u6765\u7684\u5e8f\u5217\u6ee1\u8db3\u5927\u5c0f\u5f62\u72b6\u7c7b\u4f3c\u5012\u653e\u7684 **V**\n\n\u8bc1\u660e\uff1a\u82e5\u5b58\u5728 $a>b<c$ \uff0c\u90a3\u4e48 $b$ \u6ca1\u6709\u529e\u6cd5\u548c\u4efb\u4f55\u4e00\u4e2a\u5757\u6d88\u6389\n\n\u6240\u4ee5\u6211\u4eec\u628a\u5e8f\u5217\u62c6\u6210\u5de6\u53f3\u4e24\u4e2a\u5355\u8c03\u7684\u5e8f\u5217\uff0c\u7136\u540e\u6bcf\u6b21\u5224\u65ad\u4e00\u4e0b\u80fd\u4e0d\u80fd\u5e76\u5230\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\uff0c\u53ea\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4efb\u4f55\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\uff1a\n\n1. \u5de6\u5e8f\u5217\u6216\u8005\u53f3\u5e8f\u5217\u4e3a\u7a7a\n2. \u5c0f\u4e8e\u5de6\u5e8f\u5217\u6216\u8005\u53f3\u5e8f\u5217\u7684\u6700\u5c0f\u503c\n\n\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a $O(tn2^{26}\\times13)$ \u7684\u505a\u6cd5\n\n* \u4f18\u5316\n\n\u6211\u4eec\u53d1\u73b0\u5de6\u53f3\u5e8f\u5217\u7684\u548c\u503c\u56fa\u5b9a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\u5de6\u5e8f\u5217\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u4e86\uff0c\u590d\u6742\u5ea6\u964d\u4f4e\u4e3a $O(tn2^{13}\\times 13)$ ,\u4f46\u662f\u7531\u4e8e\u76f4\u63a5\u679a\u4e3e\u662f\u8dd1\u6ee1\u7684\uff0c\u6240\u4ee5\u4f1a **TLE** \u7684\n\n* \u6b63\u89e3\n\n\u6211\u4eec\u53d1\u73b0\u72b6\u6001\u8f6c\u79fb\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u679a\u4e3e\u72b6\u6001\uff0c\u76f4\u63a5 DFS \u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e14\u9884\u5904\u7406\u4e00\u4e0b **highbit** \uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86\u5e38\u6570\u6781\u5c0f\u7684 $O(tn2^{13})$\n\n**tip:**\n\n1. \u53ef\u80fd\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\uff0c\u5de6\u53f3\u5e8f\u5217\u90fd\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u8f6c\u79fb\u7684\u65f6\u5019\u6bcf\u6b21\u8bb0\u5f97\u628a\u5de6\u53f3\u5e8f\u5217\u76f8\u8fde\u7684\u90e8\u5206\u80fd\u5408\u5e76\u5c31\u5408\u5e76\uff0c\u4e0d\u7136\u4f1a\u50cf\u6211\u4e00\u6837\u76f4\u63a5\u767d\u7ed9\u597d\u591a\u53d1\n\n    \u6bd4\u5982 2|2 \u7684\u60c5\u51b5\u6dfb\u52a0\u4e00\u4e2a 4\uff0c\u539f\u672c\u662f\u6dfb\u52a0\u4e0d\u8fdb\u53bb\u7684\uff0c\u4f46\u5148\u5408\u5e76\u4e4b\u540e\u53d8\u6210 4|0\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6dfb\u52a0\u8fdb\u53bb\u4e86\n\n2. \u8bb0\u5fc6\u5316\u4e00\u4e0b\uff0c\u4fdd\u8bc1\u590d\u6742\u5ea6\u6b63\u786e\n\n### \u4ee3\u7801\uff1a\n\n~~~cpp\n#include<bits/stdc++.h>\n#define inl inline\n#define reg register\n#define mk(x,y) make_pair(x,y)\n#define fir first\n#define sec second\n\nusing namespace std;\n\nnamespace zzc\n{\n    typedef long long ll;\n    inl ll read()\n    {\n        ll x=0,f=1;char ch=getchar();\n        while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n        while(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n        return x*f;\n    }\n\n    const ll maxn = 1005;\n    const ll maxm = (1<<14);\n    ll n,t;\n    bool vis[maxn][maxm],ans[maxn];\n    ll sum[maxn],a[maxn],hig[maxm];\n\n    inl ll merge(ll x,ll y,ll k)//\u8868\u793a\u5c06 k \u52a0\u5230 x \u5e8f\u5217\u4e0a \n    {\n        if(hig[x]>hig[y])//\u5148\u5c06x\u5e8f\u5217\u6700\u5927\u503c\u5e76\u5230y\u5e8f\u5217\u4e0a\uff0c \u53c2\u8003 tip:1 \n        {\n        \tll tmp=hig[x];\n        \tx-=tmp;\n        \ty+=tmp;\n        }\n        if(x&&(x&(-x))<k) return -1;x+=k;\n        if(hig[x]==hig[y])//\u5408\u5e76\u4e24\u4e2a\u5e8f\u5217\u76f8\u8fde\u7684\u90e8\u5206 \n        {\n        \tll tmp=hig[x];\n        \tx+=tmp;\n        \ty-=tmp;\n        }\n        return x;\n    }\n    \n\tbool dfs(ll pos,ll lef)\n\t{\n\t\tll rig,now;\n\t\trig=sum[pos]-lef;\n        if(pos==n)\n        {\n        \t//\u5c06\u5de6\u53f3\u5e8f\u5217\u5408\u5e76\u5316\u5230\u6700\u7b80 \n        \tlef=merge(lef,rig,0);\n        \trig=sum[pos]-lef;\n        \tif(lef==sum[n]&&(lef&(lef&(-lef)))==lef) return true;\n        \tif(rig==sum[n]&&(rig&(rig&(-rig)))==rig) return true;\n        \treturn false;\n        }\n        if(vis[pos][lef]) return false;\n        vis[pos][lef]=true;\n        \n        now=merge(lef,rig,a[pos+1]);\n        if(now!=-1&&dfs(pos+1,now)) \n        {\n            ans[pos+1]=true;\n            return true;\n        }\n        \n        now=merge(rig,lef,a[pos+1]);\n        if(now!=-1&&dfs(pos+1,sum[pos+1]-now))\n        {\n            ans[pos+1]=false;\n           \treturn true;\n        }\n        \n        return false;\n\t}\n\t\n\tvoid init()\n\t{\n\t\tfor(reg ll i=1;i<(1<<14);i++)// \u9884\u5904\u7406 highbit \n\t\t{\n\t\t\tif((i&(-i))==i) hig[i]=i;\n\t\t\telse hig[i]=hig[i-1];\n\t\t}\n\t}\n\t\n    void work()\n    {\n    \tinit();\n        t=read();\n        while(t--)\n        {\n    \t     memset(vis,false,sizeof(vis));\n             memset(ans,false,sizeof(ans));\n             n=read();\n             for(reg ll i=1;i<=n;i++) a[i]=read(),sum[i]=sum[i-1]+a[i];\n             if(!dfs(0,0)) printf(\"no\");\n             else for(reg ll i=1;i<=n;i++) printf(\"%c\",(ans[i]?'l':'r'));\n             puts(\"\");\n        }\n    }\n\n}\n\nint main()\n{\n    zzc::work();\n    return 0;\n}\n~~~\n\n",
        "postTime": 1612431731,
        "uid": 201158,
        "name": "Youth518",
        "ccfLevel": 7,
        "title": "P7093 [CERC2014]Can't stop playing \uff08\u52a8\u6001\u89c4\u5212\uff09"
    }
]