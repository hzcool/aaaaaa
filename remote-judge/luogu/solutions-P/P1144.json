[
    {
        "content": "\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9898\u7684\u96be\u5ea6\u5e94\u8be5\u4e3a\u666e\u53ca\u63d0\u9ad8\u51cf...\n\n\n\u770b\u89c1\u4e0b\u65b9\u5927\u4f6c\u624b\u5199SPFA\uff0c\u6211\u8868\u793a\u5176\u5b9eBFS\u4e00\u6b21\u5c31\u53ef\u4ee5\u5427...\n\n\n\u56e0\u4e3a\u6240\u6709\u7684\u8fb9\u6743\u90fd\u4e3a1\uff0c\u6240\u4ee5\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5c31\u76f8\u5f53\u4e8e\u662f\u5b83\u5728BFS\u641c\u7d22\u6811\u4e2d\u7684\u6df1\u5ea6\u3002\n\n\n\u4e00\u4e2a\u70b9\u6700\u77ed\u8def\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u5c42\u6570\u6bd4\u5b83\u5c11\u4e00\u7684\u7ed3\u70b9\uff08\u5426\u5219\u4e0d\u662f\u6700\u77ed\u8def\uff09\u3002\n\n\n\u6240\u4ee5\u7528\u6bcf\u4e2a\u76f8\u90bb\u4e14\u5c42\u6570\u6bd4\u5f53\u524d\u7ed3\u70b9\u5c42\u6570\u5c11\u4e00\u7684\u70b9\u66f4\u65b0\u5f53\u524d\u70b9\u7684\u8def\u5f84\u8df3\u6570\u5373\u53ef\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nconst int maxn=1000000+1,maxm=2000000+1,INF=0x7f7f7f7f,MOD=100003;\nvector<int>G[maxn];int dep[maxn];bool vis[maxn];int cnt[maxn];\n\nint main(){\n    int N,M;scanf(\"%d%d\",&N,&M);\n    for(int i=1;i<=M;i++){\n        int x,y;scanf(\"%d%d\",&x,&y);\n        G[x].push_back(y);\n        G[y].push_back(x);\n    }\n    queue<int>Q;dep[1]=0;vis[1]=1;Q.push(1);cnt[1]=1;\n    while(!Q.empty()){\n        int x=Q.front();Q.pop();\n        for(int i=0;i<G[x].size();i++){\n            int t=G[x][i];\n            if(!vis[t]){vis[t]=1;dep[t]=dep[x]+1;Q.push(t);}\n            if(dep[t]==dep[x]+1){cnt[t]=(cnt[t]+cnt[x])%MOD;}\n        }\n    }\n    for(int i=1;i<=N;i++){\n        printf(\"%d\\n\",cnt[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1508846240,
        "uid": 36456,
        "name": "GGN_2015",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u6700\u77ed\u8def\u91c7\u7528dijkstra\u5806\u4f18\u5316\u6216\u8005spfa\uff0c\u5c06\u8ba1\u6570\u64cd\u4f5c\u88c5\u8fdb\u53bb\uff1a\n\n![Luogu](https://cdn.luogu.com.cn/upload/pic/26623.png)\n\n**ans[1]\u521d\u59cb\u5316\u4e3a1**\n\n\u66f4\u65b0\u8fb9\u957f\u7684\u65f6\u5019\u5982\u679c\u5927\u4e8e\u53f7\u5c31\u8986\u76d6\uff0c\u76f8\u7b49\u7684\u8bdd\uff08\u5373\u6709\u76f8\u540c\u6700\u77ed\u8def\u5f84\uff09\u5c31\u76f8\u52a0\n\n\u5bf9\u4e8e\u65e0\u8fb9\u6743\u5373\u4f7f\u8fb9\u6743\u4e3a1,\n\n\u672c\u9898\u65e0\u9700\u601d\u8003\u91cd\u8fb9\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\n\n\n\n------------\n\n\n------------\n\nspfa\uff1a\uff08100ms\uff09\n\n![Luogu](https://cdn.luogu.com.cn/upload/pic/26625.png)\n\n\n------------\n\n\n\t#include<cstdio>\n\t#include<iostream>\n\t#include<cstring>\n\t#include<cmath>\n\t#include<algorithm>\n\t#include<queue>\n\tusing namespace std;\n\tinline int read()\n\t{\n    \tchar ch=getchar(); \n\t\tint x=0,f=1;\n\t\twhile((ch>'9'||ch<'0')&&ch!='-')\n    \t\tch=getchar();\n\t\tif(ch=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t\tch=getchar();\n\t\t}\n\t\twhile('0'<=ch&&ch<='9')\n\t\t{\n        \tx=x*10+ch-'0';\n        \tch=getchar();\n    \t}\n\t\treturn x*f;\n\t}\n\tint mod=100003;\n\tint n,m,x,y,tot=0;\n\tconst int N=1000005,M=4000005;\n\tint head[N],to[M],nxt[M],d[N],ans[N];\n\tbool p[N];\n\tqueue< int > q;\n\tvoid add(int x,int y)\n\t{\n\t\tto[++tot]=y;\n\t\tnxt[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n\tint main()\n\t{\n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tx=read();y=read();\n\t\t\tadd(x,y);\n\t\t\tadd(y,x);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\td[i]=1e9;p[i]=0;\n\t\t}\n\t\td[1]=0;\n\t\tp[1]=1;\n\t\tans[1]=1;\n\t\tq.push(1);\n\t\twhile(q.size())\n\t\t{\n\t\t\tx=q.front();q.pop();\n\t\t\tp[x]=0;\n\t\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t\t{\n\t\t\t\ty=to[i];\n\t\t\t\tif(d[y]>d[x]+1)\n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+1;\n\t\t\t\t\tans[y]=ans[x];\n\t\t\t\t\tif(!p[y])\n\t\t\t\t\t{\n\t\t\t\t\t\tq.push(y);\n\t\t\t\t\t\tp[y]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(d[y]==d[x]+1)\n\t\t\t\t{\n\t\t\t\t\tans[y]+=ans[x];\n\t\t\t\t\tans[y]%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d\\n\",ans[i]);\n\t\treturn 0;\t\n\t} \n    \n    \n\n------------\n\ndijkstra\u5806\u4f18\u5316\uff1a\uff08232ms\uff09\n\n![Luogu](https://cdn.luogu.com.cn/upload/pic/26622.png)\n\n\n------------\n\n\n\t#include<cstdio>\n\t#include<iostream>\n\t#include<cstring>\n\t#include<cmath>\n\t#include<algorithm>\n\t#include<queue>\n\tusing namespace std;\n\tinline int read()\n\t{\n    \tchar ch=getchar(); \n\t\tint x=0,f=1;\n\t\twhile((ch>'9'||ch<'0')&&ch!='-')\n    \t\tch=getchar();\n\t\tif(ch=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t\tch=getchar();\n\t\t}\n\t\twhile('0'<=ch&&ch<='9')\n\t\t{\n        \tx=x*10+ch-'0';\n        \tch=getchar();\n   \t\t}\n\t\treturn x*f;\n\t}\n\tint mod=100003;\n\tint n,m,x,y,tot=0;\n\tconst int N=1000005,M=4000005;\n\tint head[N],to[M],nxt[M],d[N],ans[N];\n\tbool p[N];\n\tpriority_queue< pair< int,int > > q;\n\tvoid add(int x,int y)\n\t{\n\t\tto[++tot]=y;\n\t\tnxt[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n\tint main()\n\t{\n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tx=read();y=read();\n\t\t\tadd(x,y);\n\t\t\tadd(y,x);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\td[i]=1e9;p[i]=0;\n\t\t}\n\t\td[1]=0;ans[1]=1;\n\t\tq.push(make_pair(0,1));\n\t\twhile(q.size())\n\t\t{\n\t\t\tx=q.top().second;\n\t\t\tq.pop();\n\t\t\tif(p[x])\tcontinue;\n\t\t\tp[x]=1;\n\t\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t\t{\n\t\t\t\ty=to[i];\n\t\t\t\tif(d[y]>d[x]+1)\n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+1;\n\t\t\t\t\tans[y]=ans[x];\n\t\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t\t}\n\t\t\t\telse if(d[y]==d[x]+1)\n\t\t\t\t{\n\t\t\t\t\tans[y]+=ans[x];\n\t\t\t\t\tans[y]%=mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d\\n\",ans[i]);\n\t\treturn 0;\n\t}\n    \n\n\n------------\n\n~~\u8c22\u8c22\u56f4\u89c2~~~~",
        "postTime": 1533372328,
        "uid": 56564,
        "name": "\u7b2c\u4e00\u7eff\u8005\u5965\u6258",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u6211\u53d1\u73b0\u5f88\u591a\u4eba\u5199\u4e86spfa\uff0c\u5e76\u4e14\u5728spfa\u7684\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u7b54\u6848\u3002\u3002\u3002\n\n\u4f46\u8c8c\u4f3c\u8fd9\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\uff08\u6211\u5199\u7684\u5c31\u6709\u95ee\u9898\uff09\u3002\n\n\u867d\u7136\u80fd\u5728luogu AC\uff0c\u4f46\u6362\u9053\u540c\u6837\u662f\u7edf\u8ba1\u6700\u77ed\u8def\u6761\u6570\u7684\u9898\u5c31\u4e0d\u884c\u4e86\u3002\n\n\n\u5177\u4f53\u539f\u56e0\u6211\u4e0d\u662f\u5f88\u6e05\u695a\u554a\u3002\u3002\u3002\n\n\u4e0d\u4fe1\u6ce5\u840c\u53bb\u8bd5\u8bd5\u8fd9\u9898\uff0cvjudge\u4e0a\u7684\uff1a\n\n\n<https://cn.vjudge.net/problem/UESTC-1147>\n\n\u4e5f\u80af\u80fd\u662f\u6211\u592a\u5f31\uff0c\u7cfb\u7edf\u81ea\u52a8\u8bc6\u522b\u5e76\u4e14return WA;\n\n\n\u81f3\u4e8e\u6211\u4fee\u6539\u8fc7\u7684\u89e3\u6cd5\uff1a\n\n\u5148\u8dd1\u4e00\u904dspfa\uff0c\u5f97\u5230\u6e90\u70b9\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\n\n\u518d\u8dd1\u4e00\u904d\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u904d\u5386\u6700\u77ed\u8def\u56fe\uff0c\u5f97\u5230\u7b54\u6848\u3002\n\n\n\u8fd9\u6837\u53ef\u4ee5ac\u4e0a\u9762\u90a3\u4e2avjudge\u4e0a\u7684\u9898\u76ee\u3002\u3002\u3002\n\n\uff08\u5bb3\u6015\uff09\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,head[1000005],to[4000005],nxt[4000005],gsize,dis[1000005],ans[1000005];\nbool book[1000005];\nqueue<int> que;\nvoid adde(int u,int v){to[gsize]=v,nxt[gsize]=head[u],head[u]=gsize++;}\nint dfs(int u)\n{\n    if(ans[u])return ans[u];\n    for(int i=head[u];i!=-1;i=nxt[i])\n        if(dis[u]-1==dis[to[i]])ans[u]=(ans[u]+dfs(to[i]))%100003;\n    return ans[u];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)head[i]=-1,dis[i]=INT_MAX;\n    for(int i=1,u,v;i<=m;i++)scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n    dis[1]=0,que.push(1),book[1]=1;\n    while(!que.empty())\n    {\n        int f=que.front();que.pop(),book[f]=0;\n        for(int i=head[f];i!=-1;i=nxt[i])\n            if(dis[f]+1<dis[to[i]])\n            {\n                dis[to[i]]=dis[f]+1;\n                if(!book[to[i]])que.push(to[i]),book[to[i]]=1;\n            }\n    }\n    ans[1]=1;for(int i=1;i<=n;i++)printf(\"%d\\n\",dfs(i));\n    return 0;\n}\n```",
        "postTime": 1494413297,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "###\u4f5c\u8005\uff1a\u5cb8\u82b7\u6c40\u5170\n#\u4e00\u3001\u9898\u76ee\n[\u6d1b\u8c37\u539f\u9898](https://www.luogu.org/problemnew/show/P1144)\n#\u4e8c\u3001\u601d\u8def\n\u5f88\u663e\u7136\u8fd9\u662f\u4e00\u9053\u5e7f\u641c\u9898\u3002\u4e3a\u4ec0\u4e48\u4e0d\u662f\u201cSPFA\u201d\u6216\u201c\u8fea\u6770\u65af\u7279\u62c9\u201d\u5462\uff1f\u56e0\u4e3a\u9898\u76ee\u4e2d\u660e\u786e\u6307\u51fa\uff0c\u201c\u7ed9\u51fa\u4e00\u4e2aN\u4e2a\u9876\u70b9M\u6761\u8fb9\u7684**\u65e0\u5411\u65e0\u6743\u56fe**\u201d\uff0c\u90a3\u4e48\uff0c\u6bcf\u6761\u8fb9\u6743\u5c31\u76f8\u5f53\u4e8e1\u3002\u5f88\u663e\u7136\u7b26\u5408\u5e7f\u641c\u7684\u7279\u70b9\u3002\n\u8fd9\u9053\u9898\u9ebb\u70e6\u5728\u4ec0\u4e48\u5730\u65b9\u5462\uff1f\n1. \u81ea\u73af\u3002\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u5220\u9664\u81ea\u73af\u5bf9\u8fd9\u9053\u9898\u6ca1\u6709\u5f71\u54cd\u3002\n2. \u91cd\u8fb9\u3002\u91cd\u8fb9\u5bf9\u8fd9\u9053\u9898\u662f\u6709\u5f71\u54cd\u7684\uff0c\u7167\u6837\u5b58\u50a8\u3002\n3. \u6c42\u6700\u77ed\u8def\u6709\u51e0\u6761\u3002\u5f53\u8bbf\u95ee\u5230\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0c\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u7b54\u6848+=\u4ed6\u7236\u8282\u70b9\u7684\u7b54\u6848\uff0c\u5e76\u5c06\u8fd9\u4e2a\u8282\u70b9\u63a8\u5230\u961f\u5c3e\uff08push\uff09\uff1b\u5982\u679c\u662f\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u4e14\u5f53\u524d\u7684\u8ddd\u79bb\u7b49\u4e8e\u4e4b\u524d\u8bb0\u5f55\u7684\u8ddd\u79bb\uff0c\u8bf4\u660e\u8fd9\u662f\u7b2c\u4e8c\u6761\u6700\u77ed\u8def\uff0c\u540c\u6837\uff0c\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u7b54\u6848+=\u4ed6\u7236\u8282\u70b9\u7684\u7b54\u6848\uff0c\u4f46\u4e0d\u9700\u8981\uff08push\uff09\u4e86\u3002\n\n\u8fd9\u9898\u505a\u5b8c\u4e86\u3002\n\n#\u4e09\u3001\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n\nusing namespace std;\ninline int read(void) {\n    int x = 0, f = 1; char ch = getchar();\n    while (ch<'0' || ch>'9') {\n        if (ch == '-')f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0'&&ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return f * x;\n}\n\ninline void write(int x) {\n    int y = 10, len = 1;\n    while (y <= x) {\n        y *= 10; len++;\n    }\n    while (len--) {\n        y /= 10; putchar(x / y + 48); x %= y;\n    }\n}\n\nconst int maxn = 1000005, mod = 100003;\nint n, m, ans[maxn], d[maxn];\nbool vis[maxn];\n\nvector<int>linker[maxn];\n\nstruct Node {\n    int node, dis;\n};\n\ninline Node make(int first, int second) {\n    Node ans; ans.node = first; ans.dis = second;\n    return ans;\n}\n\ninline void connect(int x, int y) {\n    linker[x].push_back(y);\n}\n\ninline void bfs(void) {\n#define cur linker[u][i]\n\n    queue<Node>q; q.push(make(1, 0));\n    memset(d, 0x3f, sizeof(d)); d[1] = 0;\n    vis[1] = true;\n    ans[1] = 1;\n    while (q.size()) {\n        int u = q.front().node, dis = q.front().dis; \n        q.pop();\n        for (register int i = 0; i<int(linker[u].size()); i++) {\n            if (!vis[cur]) {\n                q.push(make(cur, dis + 1)); vis[cur] = true; d[cur] = dis + 1; \n                ans[cur] += ans[u]; /*\u91cd\u70b9*/ans[cur] %= mod;\n            }\n            else {\n                if (dis + 1 == d[cur]) { ans[cur] += ans[u]; /*\u91cd\u70b9*/ans[cur] %= mod; }\n            }\n        }\n    }\n}\n\nint main()\n{\n    n = read(); m = read();\n    for (register int i = 1; i <= m; i++) {\n        int x = read(), y = read();\n        if (x == y)continue;//\u5220\u9664\u81ea\u73af\n        connect(x, y); connect(y, x);\n    }\n    bfs();\n    for (register int i = 1; i <= n; i++) {\n        write(ans[i] % mod); putchar('\\n');\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1520572276,
        "uid": 43513,
        "name": "\u5cb8\u82b7\u6c40\u5170",
        "ccfLevel": 8,
        "title": "\u6d1b\u8c37 P1144 \u6700\u77ed\u8def\u8ba1\u6570 \u9898\u89e3"
    },
    {
        "content": "#\u4e00\u9053spfa\u7684\u6c34\u9898\n\n\n-**\u7528spfa\u6c42\u6700\u77ed\u8def\u3002\u3002**\n\n-**\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u76f8\u540c\u7684\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u3002\u3002**\n\n-**\u5ffd\u7565\u91cd\u8fb9\u3002\u3002**\n\n\n```cpp\n#include\"stdafx.h\"\n#include <iostream>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nconst int maxn = 0x7fffffff; // 0x3f\u4e0d\u591f\u3002\u3002\u3002\n\nint n, m, x, y;\nint vis[1000010],dis[1000010], ans[1000010]; //ans\u5b58\u6700\u77ed\u8def\u4e2a\u6570\nvector<int> g[1000010];\nqueue<int> q;\n\ninline void spfa(int x)\n{\n    for(int i=1; i<=n; i++)dis[i] = maxn;\n\n    q.push(x);\n    vis[x] = 1;\n    ans[x] = 1; // \u672c\u8eab\u4e3a1\u4e2a\u6700\u77ed\u8def\n    dis[x] = 0;\n\n    while (!q.empty())\n        {\n            u = q.front();\n            q.pop();\n\n            for (int i = 0; i < g[u].size(); i++)\n                {\n                    v = g[u][i];\n\n                    if (dis[v] > dis[u] + 1) //\u5982\u679c\u6ee1\u8db3u\u5230v\u7684\u8ddd\u79bb\u6bd4\u539f\u672c\u5230v\u7684\u8ddd\u79bb\u5c0f\uff0c\u5219\u66f4\u65b0\n                        {\n                            dis[v] = dis[u] + 1;\n                            ans[v] = ans[u]; // v\u70b9\u548cu\u70b9\u5728\u4e00\u6761\u8def\u4e0a\uff0c\u6240\u4ee5v\u7684\u6700\u77ed\u8def\u4e2a\u6570\u7b49\u4e8eu\u7684\u6700\u77ed\u8def\u4e2a\u6570\n\n                            if (!vis[v])\n                                vis[v] = 1, q.push(v);\n                        }\n\n                    else if (dis[v] == dis[u] + 1)\n                        ans[v] = (ans[v] + ans[u]) % 100003; // \u8be5\u70b9\u6700\u77ed\u8def\u4e2a\u6570\u4e3au\u6700\u77ed\u8def\u4e2a\u6570+v\u6700\u77ed\u8def\u4e2a\u6570\n                }\n\n            vis[u] = 0;\n\n        }\n}\nint main()\n{\n    cin >> n >> m;\n\n    while (m--)\n        {\n            cin >> x >> y;\n            g[x].push_back(y),g[y].push_back(x);\n        }\n\n    spfa(1);\n\n    for (int i = 1; i <= n; i++)\n        cout << ans[i] << endl;\n\n    return 0;\n}\n```\n##\u8fd8\u662f\u7528VS2017\u5199\u7684\n",
        "postTime": 1509408809,
        "uid": 55638,
        "name": "Adun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u90fd\u8981\u7528spfa\u505a\u8fd9\u4e2a\u9898\uff1f\u5806\u4f18\u5316\u7684dijkstra\u4e3a\u4ec0\u4e48\u90fd\u4e0d\u7528\uff1f\uff1fspfa\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u4f1a\u88ab\u5361\u6b7b\u54d2\u3002\u3002\u3002dijkstra\u590d\u6742\u5ea6\u4f4e\uff0c\u800c\u4e14\u8fd8\u4e0d\u4f1a\u88ab\u5361\uff0c\u6240\u4ee5\u672c\u849f\u84bb\u5c31\u6765\u7ed9\u840c\u65b0\u4eec\u53d1\u4e00\u7bc7\u5806\u4f18\u5316dijkstra\u7684\u9898\u89e3\u3002\n(\u5982\u679c\u60f3\u8981\u6a21\u677f\u9898\uff0c\u8bf7[\u5806\u4f18\u5316dijkstra\u6a21\u677f\u9898\u76ee](https://www.luogu.org/problemnew/show/P4779))\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u6bd4\u4e0a\u9762\u90a3\u5230\u6a21\u677f\u9898\u591a\u7684\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u8ba1\u6570\uff0c\u600e\u4e48\u529e\u5462\uff1f\u5c31\u662f\u5728dijkstra\u51fd\u6570\u5185\u5b9a\u4e49\u4e00\u4e2anode\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7136\u540e\u6bcf\u6b21\u7528\u8fd9\u4e2a\u53d8\u91cf\u63d0\u53d6\u961f\u9996\u5143\u7d20\uff0c\u7edf\u8ba1\u8fd9\u4e2a\u70b9\u7684\u524d\u9a71\u5230\u8fd9\u4e2a\u70b9\u7684\u8def\u5f84\u662f\u5426\u7b49\u4e8e\u5b83\u7684\u6700\u77ed\u8def\u5f84\uff0c\u7136\u540e\u4e00\u8fb9\u7b97\u4e00\u8fb9\u6a21\u5373\u53ef\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\n#define maxn 1000000+1\n#define maxn1 4000000+1\n#define mod 100003\nusing namespace std;\ninline int qread()                      //\u4f9d\u7136\u662f\u5feb\u8bfb\u3002\u3002\u3002 \n{\n    char c=getchar();int num=0,f=1;\n    for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n    for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n    return num*f;\n}\nint n,m,dis[maxn],head[maxn],s,js[maxn],num;     //dis\u6570\u7ec4\u8868\u793a\u8d77\u70b9\u5230\u67d0\u70b9\u7684\u6700\u77ed\u8def\u5927\u5c0f\uff0cjs\u8868\u793a\u8d77\u70b9\u5230\u67d0\u70b9\u7684\u6700\u77ed\u8def\u6761\u6570\u3002 \nstruct Edge\n{\n    int v,w,nxt;\n}edge[maxn1];\ninline void ct(int u,int v,int w)           //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u3002 \n{\n    edge[++num].v=v;\n    edge[num].w=w;\n    edge[num].nxt=head[u];\n    head[u]=num;\n}\nstruct node\n{\n    int x,y;\n    bool operator < (const node &a) const            //\u5806\u4f18\u5316\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u4f7f\u5927\u6839\u5806\u53d8\u6210\u5c0f\u6839\u5806\u3002 \n    {\n        return y>a.y;\n    }\n};\nvoid dijkstra()\n{\n    memset(dis,0x3f,sizeof(dis));                //\u521d\u59cb\u5316\u3002 \n    dis[1]=0;\n    priority_queue<node>q;\n    js[1]=1;                            //\u8d77\u70b9\u5230\u81ea\u5df1\u7684\u6700\u77ed\u8def\u6761\u6570\u4e00\u5b9a\u662f1\u3002 \n    q.push((node){1,0});\n    node a;\n    while(!q.empty())                             //dijkstra\u7ecf\u5178\u5957\u8def\u64cd\u4f5c\u3002 \n    {\n        a=q.top();                              //\u7528\u8fd9\u4e2anode\u7c7b\u578b\u53d8\u91cf\u63d0\u53d6\u961f\u9996\u5143\u7d20\u3002 \n        int u=a.x,d=a.y;                       \n        q.pop();\n        if(d!=dis[u]) continue;                   //\u4e00\u4e2a\u5c0f\u4f18\u5316\u3002 \n        for(int i=head[u];i;i=edge[i].nxt)\n        {\n            int v=edge[i].v;\n            if(d+edge[i].w==dis[v])\n              js[v]=(js[u]+js[v])%mod;             //\u4e00\u8fb9\u8ba1\u7b97\u4e00\u8fb9\u6a21\u3002 \n            if((dis[v]>dis[u]+edge[i].w))\n            {\n                dis[v]=dis[u]+edge[i].w;\n\t\t\t\tjs[v]=js[u];                      //\u627e\u5230\u4e00\u6761\u66f4\u77ed\u7684\u8def\u5f84\u662f\uff0c\u7528\u5b83\u7684\u524d\u9a71\u7684js\u6362\u5b83\u3002 \n                q.push((node){v,dis[v]});\n            }\n        }\n    }\n}\nint main()\n{\n\tn=qread(),m=qread();\n\tfor(int i=1,u,v;i<=m;++i)\n\t{\n\t\tu=qread(),v=qread();\n\t\tct(u,v,1);                           //\u65e0\u5411\u8fb9\u5b58\u4e24\u904d\u3002 \n\t\tct(v,u,1);\n\t}\n\tdijkstra();\n\tfor(int i=1;i<=n;++i)\n\t\tcout<<js[i]<<'\\n';                   //\u4f9d\u6b21\u8f93\u51fa\u5c31\u597d\u4e86\u3002 \n\tcout<<'\\n';\n\treturn 0;\n}\n```\n\n\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u5730\u65b9\u53ef\u4ee5\u79c1\u4fe1\u6216\u535a\u5ba2\u8bc4\u8bba\u95ee\u6211qwq\uff01\u3002\u3002",
        "postTime": 1539782742,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u5b9e\u9645\u4e0a\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u641c\u7d22\u9898\uff0c\u4f46\u662f\u4ecd\u6709\u5f88\u591a\u4eba\uff08\u5305\u62ec\u6211\uff09\u88ab\u6570\u636e\u8303\u56f4\u7ed9\u5413\u5230\u4e86\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2aSPFA\u3002\n\n\u7136\u800c\u6211\u7ffb\u4e86\u4e00\u4e0b\u697c\u4e0b\u5404\u795e\u7287\u7684SPFA\u89e3\u6cd5\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u6b64\u9898\u7684\u7279\u6b8a\u6027\uff08\u6bcf\u6761\u8fb9\u8fb9\u6743\u90fd\u662f1\uff09\uff0c\u6240\u4ee5\u6b64\u9898\u5199SPFA\u5176\u5b9e\u53ef\u4ee5\u5f53\u6210\u4e00\u4e2a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u4e0d\u4f1a\u6709\u91cd\u590d\u8ba1\u6570\u3002\u7136\u800c\uff0c\u5047\u5982\u8fb9\u6709\u4e0d\u540c\u7684\u8fb9\u6743\uff0c\u5219\u5bf9\u4e8e\u5982\u4e0b\u56fe\uff1a ![](https://cdn.luogu.com.cn/upload/pic/7886.png) \u4ece1\u51fa\u53d1\uff0c\u9996\u5148\u5c062\u5165\u961f\uff0c\u518d\u5c063\u5165\u961f\u3002\u6b64\u65f6\uff0c2\u8282\u70b9\u7684\u6700\u77ed\u8def\u6761\u6570\u4e3a1\u3002\u6b64\u65f6\uff0c1\u51fa\u961f\uff0c2\u4f5c\u4e3a\u65b0\u7684\u66f4\u65b0\u70b9\uff0c\u5c064\u7684\u6700\u77ed\u8def\u6761\u6570\u66f4\u65b0\u4e3a1\u3002\u7136\u540e\uff0c2\u51fa\u961f\uff0c3\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff0c\u66f4\u65b02\u7684\u6700\u77ed\u8def\u6761\u6570\u4e3a2\u3002\u6b64\u65f6\uff0c2\u53c8\u4e00\u6b21\u5165\u961f\uff0c\u5c064\u7684\u6700\u77ed\u8def\u6761\u6570\u66f4\u65b0\u4e3a1+2=3\u3002\u7136\u800c\uff0c\u6613\u53d1\u73b0\u52304\u7684\u6700\u77ed\u8def\u6761\u6570\u53ea\u6709\u4e24\u6761\uff081->2->4&1->3->2->4\uff09\u3002\u539f\u56e0\u662f\u6709\u4e00\u6761\u52302\u7684\u6700\u77ed\u8def\u88ab\u91cd\u590d\u8ba1\u6570\u4e86\u3002\u56e0\u6b64\uff0c\u867d\u7136\u5728\u6b64\u9898\u4e2d\u6ca1\u6709\u5fc5\u8981\uff0c\u4f46\u662f\u4e3a\u4e86\u901a\u7528\u6027\uff0c\u53ef\u4ee5\u5c06SPFA\u7684\u8ba1\u6570\u65b9\u5f0f\u8fdb\u884c\u8c03\u6574\uff08\u5177\u4f53\u8bf7\u89c1\u4ee3\u7801\uff08\u6253\u5b57\u8be6\u89e3\uff1f\u4f1a\u7d2f\u6b7b\u7684\uff09\uff09\u3002\n\n\u4e0b\u4e3a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cstdlib>\nusing namespace std;\nstruct Edge//\u90bb\u63a5\u8868\u5b58\u8fb9\n{\n    int t;\n    int nexty;\n}edge[3000000];\nint head[2000000]={0};//\u90bb\u63a5\u8868\u7684\u4e1c\u4e1c\uff08\u5b58\u4ee5i\u4e3a\u53d1\u51fa\u70b9\u7684\u7f16\u53f7\u6700\u5927\u7684\u8fb9\u7684\u7f16\u53f7\uff09\u2026\u2026\u6709\u4eba\u4e0d\u61c2\u5417\nint cnt=0;\ninline void add(int a,int b)//\u90bb\u63a5\u8868\u6dfb\u52a0\u8fb9\n{\n    cnt++;\n    edge[cnt].t=b;\n    edge[cnt].nexty=head[a];\n    head[a]=cnt;\n}\nint js[2000000]={0};//\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\nint rdjs[2000000]={0};//\u7528\u6765\u907f\u514d\u91cd\u590d\u7684\u7edf\u8ba1\u8868\uff0c\u5b58\u5f53\u524d\u5728\u961f\u5217\u4e2d\uff0c\u5230\u8282\u70b9i\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\nint dis[2000000];//\u5b58\u6700\u77ed\u8def\u5f84\nbool in[2000000]={0};//\u662f\u5426\u5728\u961f\u5217\u4e2d\nqueue<int>spfa;//SPFA\u6240\u7528\u961f\u5217\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    int a,b;\n    for(int i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        add(a,b);\n        add(b,a);//\u5b58\u8fb9\n    }\n    for(int i=1;i<=n;i++)dis[i]=2e9;\n    dis[1]=0;//\u521d\u59cb\u5316dis\n    in[1]=true;\n    js[1]=1;//1\u52301\u6700\u77ed\u8def\u5f841\u6761\n    rdjs[1]=1;//\u6b64\u6b21\u961f\u5217\u4e2d\uff0c\u52301\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u4e3a1\n    spfa.push(1);//\u5c061\u52a0\u5165\u961f\u5217\n    int curr;\n    while(!spfa.empty())\n    {\n        curr=spfa.front();//\u66f4\u65b0\u53d1\u51fa\u70b9\n        for(int i=head[curr];i!=0;i=edge[i].nexty)//\u904d\u5386\u51fa\u53d1\u8fb9\n        {\n            if(dis[edge[i].t]>dis[curr]+1)//\u82e5\u6700\u77ed\u8def\u6709\u53d8\n            {\n                dis[edge[i].t]=dis[curr]+1;//\u66f4\u65b0\u6700\u77ed\u8def\n                rdjs[edge[i].t]=js[edge[i].t]=rdjs[curr]%100003;//\u4ee5\u524d\u7684\u8ba1\u6570\u5747\u820d\u5f03\uff0c\u66f4\u65b0\u5230\u51fa\u53d1\u70b9\u7684\u5230\u8fbe\u8def\u5f84\u6761\u6570\n                if(!in[edge[i].t])\n```\n{//\u52a0\u5165\u961f\u5217\n```cpp\n                    in[edge[i].t]=true;\n                    spfa.push(edge[i].t);\n                }\n            }\n            else\n            if(dis[edge[i].t]==dis[curr]+1)//\u82e5\u53c8\u6709\u4e00\u6761\u6700\u77ed\u8def\n            {\n                js[edge[i].t]=(js[edge[i].t]+rdjs[curr])%100003;//\u589e\u52a0\u6700\u77ed\u8def\u4e2a\u6570\n                rdjs[edge[i].t]=(rdjs[edge[i].t]+rdjs[curr])%100003;//\u5728rdjs\u4e0a\u66f4\u65b0\uff0c\u907f\u514d\u91cd\u590d\n                if(!in[edge[i].t])\n```\n{//\u5165\u961f\n```cpp\n                    in[edge[i].t]=true;\n                    spfa.push(edge[i].t);\n                }\n            }\n        }\n        in[curr]=false;\n        rdjs[curr]=0;//\u6b64\u6b21\u7684\u6700\u77ed\u8def\u7edf\u8ba1\u5df2\u7528\u5b8c\uff0c\u5c06\u6b64\u8282\u70b9\u7684\u6700\u77ed\u8def\u6761\u6570\u521d\u59cb\u5316\uff0c\u907f\u514d\u91cd\u590d\uff08\u5728\u6b64\u9898\u4e2d\u4f3c\u4e4e\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff09\n        spfa.pop();//\u51fa\u961f\n    }\n    for(int i=1;i<=n;i++)printf(\"%d\\n\",js[i]);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1505009289,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u505a\u4e86\u4e00\u4e0b\u5348\u7ec8\u4e8eA\u4e86\u8fd9\u9898\uff0c\u8c08\u8c08\u5fc3\u5f97\u3002\n\n\u8fd9\u9898\u4e3b\u8981\u601d\u8def\u662f\u8fd9\u6837\u7684\uff0c\u5728SPFA\u4e2d\u52a0\u5165\u8ba1\u6570\u64cd\u4f5c\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u53ef\u4ee5\u66f4\u65b0\u4f46\u8fd8\u672a\u88ab\u66f4\u65b0\u65e2\n```cpp\nif(dis[v]>dis[u]+1)\n```\n\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u76ee\u524d\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u7684\u53ef\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5c31\u662f\u901a\u8fc7\u5148\u5230\u8fbe\u4e0a\u4e2a\u70b9\u518d\u8d70\u5f53\u524d\u8fb9\u7684\u65b9\u5f0f\uff0c\u6613\u63a8\u5f97\u4ee3\u7801\n```cpp\n\nans[v]=ans[u];\n\n```\n\n\u5f53\u4e00\u4e2a\u70b9\u4e0d\u80fd\u88ab\u5f53\u524d\u70b9\u66f4\u65b0\u65f6\uff0c\u5224\u65ad\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u7b49\u4e8e\u5f53\u524d\u70b9\u8ddd\u79bb+1\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5982\u540c\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u53ef\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u6709\u4e00\u79cd\u662f\u901a\u8fc7\u5148\u5230\u8fbe\u4e0a\u4e2a\u70b9\u518d\u8d70\u5f53\u524d\u8fb9\u7684\u65b9\u5f0f\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u60c5\u51b5\u52a0\u4e0a\uff0c\u53ef\u5f97\u4ee3\u7801\n\n```\nans[v]+=ans[u]\n```\n\u5c06\u8fd9\u4e2a\u8ba1\u6570\u65b9\u6cd5\u653e\u5230SPFA\u7684\u6a21\u677f\u4e2d\u5c31\u53ef\u4ee5ac\u672c\u9898\n\n\n------------\n\n\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\n\n1.\u8fb9\u52a0\u8fb9\u819c \u9632\u6b62\u7206int \n\n2.ans[1]=1\u3002\u56e0\u4e3a\u5f88\u663e\u7136\uff0c\u4ece\u4e00\u5230\u4e00\u7684\u6700\u77ed\u8def\u6709\u4e14\u53ea\u6709\u4e00\u6761\u3001\n\n3.\u5b58\u53cc\u5411\u8fb9\n\n4.\u81ea\u73af\u548c\u91cd\u8fb9\u5e76\u4e0d\u4f1a\u5bf9\u672c\u9898\u9020\u6210\u5f71\u54cd\n\n\u8d34\u4e0aac\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod=100003;\nconst int Maxn=1000010;\nconst int MAxn=5000010;\nconst int MAXn=0x7fffffff;\nstruct st{\n\tint to,nxt;\n}edge[MAxn];\nint n,m,cnt=0,dis[Maxn];\nint head[Maxn],vis[Maxn],ans[Maxn];\ninline void add_edge(int u,int v){\n\tedge[++cnt].nxt=head[u];\n\tedge[cnt].to=v;\n\thead[u]=cnt;\n}\ninline void SPFA(int s){\n\tfor(int i=1;i<=n;++i) dis[i]=MAXn;\n\tdis[s]=0; vis[s]=1;\n\tqueue<int> Q;\n\tQ.push(s);\n\twhile(!Q.empty()){\n\t\tint u=Q.front(); \n\t\tQ.pop();vis[u]=0;\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].to;\n\t\t\tif(dis[v]>dis[u]+1){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tans[v]=ans[u];\n                ans[v]%=mod;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tQ.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dis[v]==dis[u]+1){\n\t\t\t\tans[v]+=ans[u];\n\t\t\t\tans[v]%=mod;\n\t\t\t}\n\t\t}\n\t}\n} \nint main(){\n\tans[1]=1;\n\tmemset(vis,0,sizeof(vis));\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=m;++i){\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tadd_edge(x,y);\n\t\tadd_edge(y,x);\n\t}\n\tSPFA(1);\n\tfor(int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n``` \n\n\u9644ac\u65f6\u95f4\n\n![404](http://wx2.sinaimg.cn/mw690/0060lm7Tly1fvm0k6cte9j30ez049gll.jpg)\n\n\u88c2\u5c4f\u63a8\u8350\u672c\u4eba\u535a\u5ba2\uff0c\u5e0c\u671b\u4e92\u76f8\u5b66\u4e60",
        "postTime": 1537868840,
        "uid": 106632,
        "name": "Rbrq",
        "ccfLevel": 0,
        "title": "P1144 \u6700\u77ed\u8def\u8ba1\u6570"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6700\u77ed\u8def\u8ba1\u6570\u95ee\u9898\n\n\u7528dij\u662f\u4e2a\u5f88\u597d\u7684\u529e\u6cd5\n\n\u56e0\u4e3adij\u7684\u8ba1\u6570\u65b9\u5f0f\u5f88\u7b80\u5355\u3002\u3002\u3002\n\n\n\u9644\u4e0aAC\u4ee3\u7801\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define M 6000000\n#define N 1000010\n#define mod 100003\nusing namespace std;\nint n,m;\n\nstruct edge\n{\n\tint next,to,v;\n}e[M];\n\nint ei = 0;\nint h[N];\n\nint add(int x,int y,int v)\n{\n\tei++;\n\te[ei].v = v;\n\te[ei].to = y;\n\te[ei].next = h[x];\n\th[x] = ei;\n}\n\nstruct Heapdata\n{\n\tint id,v;\n\tbool operator <(const Heapdata&x)const\n\t{\n\t\treturn v > x.v; \n\t}\n};\n\nHeapdata heap[M];\nint hpi = 0;\n\nint pushheap(int id,int v)\n{\n\thpi++;\n\theap[hpi].id = id;\n\theap[hpi].v = v;\n\tpush_heap(heap+1,heap+hpi+1);\n}\n\nint popheap()\n{\n\tpop_heap(heap+1,heap+hpi+1);\n\tint id = heap[hpi].id;\n\thpi--;\n\treturn id;\n}\n\nint dis[M];\nint u[M];\nint cnt[N];\n\nint dij(int f)\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(u,0,sizeof(u));\n\tmemset(cnt,0,sizeof(cnt));\n\tcnt[f] = 1;\n\tdis[f] = 0;\n\tpushheap(f,0);\n\twhile(hpi)\n\t{\n\t\tint id = popheap();\n\t\tif(u[id]==1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tu[id] = 1;\n\t\tfor(int i=h[id];i;i=e[i].next)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dis[to]>dis[id]+e[i].v)\n\t\t\t{\n\t\t\t\tdis[to] = dis[id]+e[i].v;\n\t\t\t\tpushheap(to,dis[to]);\n\t\t\t\tcnt[to] = cnt[id];\n\t\t\t\tcnt[to] = cnt[to]%mod;\n\t\t\t}else \n\t\t\t{\n\t\t\t\tif(dis[to]==dis[id]+e[i].v)\n\t\t\t\t{\n\t\t\t\t\tcnt[to] += cnt[id];\n\t\t\t\t\tcnt[to] = cnt[to]%mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;\n\t\tint y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y,1);\n\t\tadd(y,x,1);\n\t}\n\tdij(1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%lld\\n\",cnt[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1556699222,
        "uid": 90646,
        "name": "Xie_BR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "SPFA\u8dd1\u4e00\u8fb9   \u8bb0\u4f4f  \u8981\u53d6\u6a21\n\n        \n```cpp\n0. #include <iostream>\n#include <vector>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nint n,m,d[200001],dis[200001];\nvector <int> map[200001];\nint bo[200001];\nint count [200001];\nint main()\n{\n    memset(dis,1,sizeof(dis));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        map[x].push_back(y);\n        map[y].push_back(x);\n    }    \n    int h=1,t=1;\n    d[1]=1;\n    bo[1]=1;\n    dis[1]=0;\n    count[1]=1;\n    while(h<=t)\n    {\n        int now=d[h];\n        for(int i=0;i<map[now].size();i++)\n        {\n            int nn=map[now][i];\n            if(dis[now]+1<dis[nn])\n            {\n                dis[nn]=dis[now]+1;\n                count[nn]=count[now]%100003;\n                if(!bo[nn])\n                {\n                    bo[nn]=1;\n                    d[++t]=nn;\n                }\n            }\n            else\n                if(dis[now]+1==dis[nn])\n                    count[nn]=(count[nn]+count[now])%100003;\n        }                            \n        h++;\n        bo[now]=0;\n    }\n    for(int i=1;i<=n;i++)\n        if(count[i]!=count[0])\n            printf(\"%d\\n\",count[i]);\n        else printf(\"0\\n\");\n    return 0;\n}\n```",
        "postTime": 1469271049,
        "uid": 20111,
        "name": "soler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u7531\u4e8e\u8fb9\u6ca1\u6709\u8fb9\u6743\uff0c\u6240\u4ee5\u70b91\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u53ea\u9700\u8981\u7528BFS\u5c31\u53ef\u4ee5\u7b97\u51fa\u6765\u4e86\u3002BFS\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4ece\u70b9x\u51fa\u53d1\uff0c\u78b0\u5230\u672a\u5165\u961f\u7684\u70b9y\uff0c\u90a3\u4e48count(y) = count(x)\uff1b\u5982\u679cy\u5df2\u5165\u961f\uff0c\u5219\u9700\u8981distance(y) == distance(x)+1\u624d\u53ef\u4ee5count(y) += count(x)\u3002\n",
        "postTime": 1438088321,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u672c\u9898\u5427...\u53ea\u9700\u5728SPFA\u548cDijksra\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u4e2aans\u6570\u7ec4\u548c\u51e0\u884c\u4ee3\u7801\uff01\n\n\u6ce8\u610f\u662f\u65e0\u5411\u65e0\u6743\u56fe\u54e6\nSPFA\u89e3\u6cd5:\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\n#define inf 0x3f\nusing namespace std;\nint n,m,tot,x,y;\nint hea[2000001],ans[1000001],d[2000001],v[2000001];\nstruct Edge{\n\tint next,to,dis;\n}edge[2000001];//\u90bb\u63a5\u8868\u5b58\u56fe\nqueue<int> q;//\u961f\u5217\nvoid add(int x,int y,int z)\n{\n\tedge[++tot].next=hea[x];\n\tedge[tot].to=y;\n\tedge[tot].dis=z;\n\thea[x]=tot;\n}//\u63d2\u5165\u4e00\u6761(x,y)\uff0c\u6743\u503c\u4e3az\u7684\u8fb9\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,1);\n\t\tadd(y,x,1);\n\t} //\u5b58\u56fe\n\tmemset(d,inf,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[1]=0;v[1]=1;ans[1]=1;q.push(1);\n\twhile(!q.empty())//\u961f\u5217\u975e\u7a7a\n\t{\n\t\tint x=q.front();q.pop();v[x]=0;\n\t\tfor(int i=hea[x];i;i=edge[i].next)\n\t\t{\n\t\t\tint y=edge[i].to;\n\t\t\tif(d[y]>edge[i].dis+d[x])\n\t\t\t{\n\t\t\t\td[y]=edge[i].dis+d[x];\n\t\t\t\tans[y]=ans[x];\n\t\t\t\tif(!v[y])\n\t\t\t\t{\n\t\t\t\t\tq.push(y);\n\t\t\t\t\tv[y]=1;\n\t\t\t\t}\n\t\t\t}//\u677e\u5f1b\u64cd\u4f5c\n\t\t\telse if(d[y]==d[x]+1)\n\t\t\t{\n\t\t\t\tans[y]+=ans[x];\n\t\t\t\tans[y]%=100003;\n\t\t\t}//\u5982\u679c\u540c\u4e3a\u6700\u77ed\u8def\u5c31\u52a0\u52a0\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<ans[i]<<endl;\n\t}\n}\n```\nDijkstra\u89e3\u6cd5:\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\n#define inf 0x3f\nusing namespace std;\nint n,m,x,y,z,tot=0,s;\nint d[2000001],v[2000001],hea[2000001],ans[2000001];\npriority_queue< pair<int,int> > q;//\u7b2c\u4e00\u7ef4\u4e3a\u8ddd\u79bb\u76f8\u53cd\u6570\uff08\u53d8\u53d8\u53d8\uff01\u5c0f\u6839\u5806\uff09\uff0c\u7b2c\u4e8c\u7ef4\u4e3a\u8282\u70b9\u7f16\u53f7\nstruct Edge{\n\tint next,to,dis;\n}edge[2000001];//\u90bb\u63a5\u8868\u5b58\u56fe\nvoid add(int x,int y,int z)\n{\n\tedge[++tot].next=hea[x];\n\tedge[tot].to=y;\n\tedge[tot].dis=z;\n\thea[x]=tot;\n}//\u63d2\u5165\u4e00\u6761(x,y)\uff0c\u6743\u503c\u4e3az\u7684\u8fb9\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y,1);\n\t\tadd(y,x,1);\n\t}//\u5b58\u8fb9\n\tmemset(d,inf,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[1]=0;ans[1]=1;q.push(make_pair(0,1));\n\twhile(!q.empty())//\u961f\u5217\u975e\u7a7a\n\t{\n\t\tint x=q.top().second;q.pop();\n\t\tif(v[x]) continue;\n\t\tv[x]=1;\n\t\tfor(int i=hea[x];i;i=edge[i].next)\n\t\t{\n\t\t\tint y=edge[i].to;\n\t\t\tif(d[y]>d[x]+edge[i].dis)\n\t\t\t{\n\t\t\t\td[y]=d[x]+edge[i].dis;\n\t\t\t\tans[y]=ans[x];\n\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t}//\u677e\u5f1b\u64cd\u4f5c\n\t\t\telse if(d[y]==d[x]+edge[i].dis)\n\t\t\t{\n\t\t\t\tans[y]+=ans[x];\n\t\t\t\tans[y]%=100003;\n\t\t\t}//\u5982\u679c\u540c\u4e3a\u6700\u77ed\u8def\u5c31\u8ba1\u6570\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<ans[i]<<endl;\n\t}\n\treturn 0;\n}\n```\n\u6700\u540e\uff0c\u5e0c\u671b\u540c\u5b66\u4eec\u90fd\u80fdA\u6389\u8fd9\u9053\u9898\uff08\u5f53\u7136\u6211\u4e0d\u5e0c\u671b\u4f60\u4eec\u662f\u6284\u9898\u89e3A\u7684\uff09\uff0c\u5e76\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u80fd\u591f\u901a\u8fc7\u8fd9\u7bc7\u9898\u89e3\uff01",
        "postTime": 1569769838,
        "uid": 118300,
        "name": "\u626c\u76932006",
        "ccfLevel": 0,
        "title": "P1144 \u6700\u77ed\u8def\u8ba1\u6570 \u9898\u89e3"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u9519\u8bef\u8fd8\u8bf7\u5e2e\u6211\u6307\u51fa\uff0c\u8c22\u8c22\uff01\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAX=1000005;\nconst int MOD=100003;\n\nqueue <int> q;//\u5c06\u6bcf\u4e2a\u70b9\u904d\u5386\u4e00\u904d \nvector <int> f[MAX];//\u5b58\u56fe \n\nbool inq[MAX];//\u770b\u8fd9\u4e2a\u70b9\u6709\u65e0\u62d3\u5c55\uff0c0\u4e3a\u672a\u62d3\u5c55\uff0c\u70b9\u5728\u62d3\u5c55\u540e\u53d8\u4e3a0\uff0c\u88ab\u5176\u4ed6\u70b9\u62d3\u5c55\u5219\u4e3a1 \nint sum[MAX];//\u4ee3\u8868\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6570 \nint d[MAX];//\u5230\u70b91\u7684\u6700\u77ed\u8ddd\u79bb\nint n,m;\n\n/*  \n\u4f8b\u5982\uff1a u-->v \u6743\u503c\u4e3ac \n\t\u5f53d[u]=d[v]+c,\u5219sum[u]+=sum[v],\u5373v\u4e3au\u7684\u4e00\u6700\u77ed\u8def \n\t\u5f53d[u]>d[v]+c,\u5219sum[u]=sum[v],\u5373v\u5c31\u662fu\u7684\u6700\u77ed\u8def \n*/\n\ninline int read(){\n\tint f=1,x=0;char c=getchar();\n\twhile(c<'0'||c>'9'){ if(c=='-') f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){ x=10*x+c-'0'; c=getchar();}\n\treturn x*f;\n}\n\n\ninline void write(int x){\n    int y=10,len=1;\n    while(y<=x){ y*= 10; len++;}\n    while(len--){ y/=10;putchar(x/y+48); x%=y;}\n}\n\nint main(){\n\tn=read();\n\tm=read();\n\tint u,v;//\u4eceu\u5230v \n\tfor(int i=1;i<=m;i++){\n\t\tu=read();\n\t\tv=read();\n\t\tf[u].push_back(v);//\u7531u\u6307\u5411v \n\t\tf[v].push_back(u);//\u7531v\u6307\u5411u\n\t}\n\t\n\tmemset(d,0x3f,sizeof(d));\t\n\tinq[1]=1;\n\tsum[1]=1;\n\td[1]=0; \n\tq.push(1);//\u521d\u59cb\u5316\n\t \n\twhile(!q.empty()){\n\t\t\n\t\tu=q.front(),q.pop();\n\t\tinq[u]=0;\n\t\t\n\t\tfor(int i=0;i<f[u].size();i++){ \n\t\t\n\t\t\tv=f[u][i];//f[x][i](v)\u662f\u4e0b\u4e00\u4e2a\u70b9\n\t\t\t\n\t\t\tif(d[v]==d[u]+1){\n\t\t\t\tsum[v]+=sum[u];\n\t\t\t\tsum[v]%=MOD;\n\t\t\t}//\u6ce8\u610f\u4e86\uff01\uff01 \u5982\u679c\u6709\u53cc\u5411\u8fb9\u7684\u65f6\u5019\u4f1a\u91cd\u590d\u8dd1,\u6240\u4ee5\u6211\u4eec\u5c31\u5355\u72ec\u5224\u65ad \n\t\t\telse if(d[v]>d[u]+1){\n\t\t\t\tsum[v]=sum[u];\n\t\t\t\td[v]=d[u]+1;\n\t\t\t\t\n\t\t\t\tif(!inq[v]){\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t} \n\t\t\t\t\n\t\t\t}\n\n\n\t\t}\n\t}\n\t\n\tfor(register int i=1;i<=n;i++){\n        write(sum[i]%MOD); \n\t\tputchar('\\n');\n    }\n        \n\treturn 0;\n} \n```\n",
        "postTime": 1563525642,
        "uid": 172872,
        "name": "\u5723\u5802\u4e4b\u5730",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011](https://www.luogu.org/problem/P1144)\n\n### \u6b64\u9898\u7b97\u6cd5: Dijkstra+\u62d3\u6251dp\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u8f93\u5165\u8fb9\u5e76\u6c42\u51fa\u9876\u70b9$1$\u5230\u6bcf\u4e2a\u70b9$i$\u7684\u6700\u77ed\u8def\u957f\u5ea6$dis[i]$\u3002\n\n>2.$ $\u5c06\u8fb9\u62c6\u6210\u5355\u5411\u8fb9\u5e76\u5206\u6210\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002\n\n![](https://s2.ax1x.com/2019/09/21/nz5Sc8.jpg)\n\n    (\u4eceu\u5230v)\n     \n    \u7532\uff1adis[u]+1=dis[v]\n    (\u80fd\u534f\u52a9\u6700\u77ed\u8def\u7684\u8fb9\uff0c\u7559\u7740)\n    \u4e59\uff1adis[u]+1>dis[v]\n    (\u4e0d\u80fd\u534f\u52a9\u6700\u77ed\u8def\u7684\u8fb9\uff0c\u6254\u4e86)\n\n>3.$ $\u7528\u7559\u7740\u7684\u8fb9\u62d3\u6251\u6392\u5e8f\u3002\u5c06$0$\u5165\u5ea6\u5e76\u6709\u7528\u7684\u70b9$i$\u52a0\u8fdb\u961f\u5217\uff0c$dp[i]=1$\u3002\u518d\u4f7f$dp[$\u51fa\u8fb9$]=$\u6240\u6709$dp[$\u5165\u8fb9$]$\u4e4b\u548c\u5373\u53ef\u3002\n\n>4.$ $\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c$dp[i]$\u5c31\u662f\u7b54\u6848\u3002\n\n![](https://s2.ax1x.com/2019/09/21/nzOt29.jpg)\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ong long long\nconst int N=1000010;\nconst int M=4000010;\nconst int mod=100003;\nconst int inf=INT_MAX/3;  //\u4e0d\u7206int\nbool vis[N],em[M];\nstruct node{\n    int a,dis;\n};\nbool operator < (node x,node y){\n    return x.dis>y.dis;\n} priority_queue<node> q;\nstruct Edge{\n    int from,adj,nex;\n}e[M];\nint top,fro[N],rud[N],dp[N];\nvoid add(int x,int y){\n    e[++top]=(Edge){x,y,fro[x]};\n    fro[x]=top;\n} int n,m,ui,vi,dis[N];\nqueue<int> tp;\nvoid Dijkstra(){\n    for(int i=1;i<=n;i++)\n        dis[i]=inf;\n    dis[1]=0;\n    for(int i=1;i<=n;i++)\n        q.push((node){i,dis[i]});\n    while(!q.empty()){\n        node tmp=q.top(); q.pop();\n        int p=tmp.a;\n        if(vis[p])\n            continue;\n        vis[p]=1;\n        for(int i=fro[p];i;i=e[i].nex){\n            int to=e[i].adj;\n            if(dis[p]+1<dis[to]){\n                dis[to]=dis[p]+1;\n                q.push((node){to,dis[to]});\n            }\n        }\n    }\n} void inc(int &x,int y){\n\tx=(x+y)%mod; //\u8bb0\u5f97mod100003\n}int main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&ui,&vi);\n        add(ui,vi); add(vi,ui);\n    } Dijkstra();\n    for(int i=1;i<=top;i++){\n    \tif(dis[e[i].adj]\n\t\t-dis[e[i].from]==1){\n\t\t\tem[i]=1;\n\t\t\trud[e[i].adj]++;\n\t\t}\n\t} for(int i=1;i<=n;i++){\n\t\tif(rud[i]==0){\n\t\t\tif(dis[i]<inf)\n\t\t\t\tdp[i]=1; //\u2606\u5224\u6709\u7528\n\t\t\ttp.push(i);\n\t\t}\n\t} while(!tp.empty()){\n\t\tint now=tp.front(); tp.pop();\n\t\tfor(int i=fro[now];i;i=e[i].nex){\n\t\t\tif(!em[i]) continue;\n\t\t\tint p=e[i].adj;\n\t\t\tinc(dp[p],dp[now]); //dp(inc\u4e3a\u7a0b\u5e8f\u4e0a\u65b9\u589e\u52a0\u51fd\u6570)\n\t\t\trud[p]--;\n\t\t\tif(!rud[p])\n\t\t\t\ttp.push(p);\n\t\t}\n\t} for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",dp[i]);\n    return 0;\n}\n```\n\n\u6700\u540e\u522b\u5fd8\u8bb0\u81ea\u53e4\u56fe\u8bba\u51fa\u5751\u9898!\n\n\u8c22\u8c22\u5927\u5bb6! !\n",
        "postTime": 1569074848,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u533a\u7684\u5f88\u591a\u5927\u4f6c\u7528\u7684\u662f\u5206\u5c42\u5efa\u56fe\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\u5c31OK\u4e86\n\n\u7136\u800c\u849f\u84bb\u5374\u60f3\u4e0d\u5230\u8fd9\u79cd\u505a\u6cd5....\n\n\u9996\u5148\uff0c\u770b\u5230\u9898\u76ee\uff0c\u6211\u4eec\u8981\u5148\u60f3\u5230\u2014\u2014\u66b4\u529b\uff01\n\n\u66b4\u529b\u65e0\u7591\u662f\u5f88\u597d\u5199\u7684\u4e86\uff0c\u7528SPFA/Dijkstra/BFS \u9884\u5904\u7406\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff0c\u7136\u540e\u7206\u641c\u8bb0\u5f55\u6700\n\u77ed\u8def\u6761\u6570\u3002\n\n\u5199\u4e86\u5927\u6982\u5341\u5206\u949f\uff0c\u4ea4\u4e86\u4e0a\u53bb\uff08\u8fd8\u6323\u624e\u4e00\u4e0b\uff0c\u5f00\u4e2a\u6c27\u6c14\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/61235.png)\n\n\u4ee3\u7801\u5982\u4e0b:\n```cpp\n#include <bits/stdc++.h>\n#define inf 0x7fffffff\nusing namespace std;\nconst int maxn = 2000005;\nconst int mod = 100003;\nint ans[maxn];\nint n,m,head[maxn],cnt,dis[maxn],dp[maxn];\nbool inq[maxn],vis[maxn];\n\nstruct edge{\n    int to,nxt;\n}e[maxn];\n\nvoid add(int u,int v)\n{\n    e[++cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\nvoid SPFA()\n{\n    priority_queue <pair<int,int> > q;\n    for(int i=2 ;i<=n;++i) dis[i] = inf;\n    q.push(make_pair(0,1));\n    inq[1] = 1;\n    while(!q.empty())\n    {\n        int now = q.top().second;\n        q.pop();\n        inq[now] = 0;\n        for(int i = head[now];i;i = e[i].nxt)\n        {\n            int to = e[i].to;\n            if(dis[to] > dis[now] + 1)\n            {\n                dis[to] = dis[now] + 1;\n                q.push(make_pair(-dis[to],to));\n                inq[to] = 1;\n            }\n        }\n    }\n    //for(int i=1;i<=n;++i) printf(\"dis[%d] is %d\\n\",i,dis[i]);\n}\n\nvoid DFS(int now,int sum)\n{\n    ans[now] ++;\n    for(int i=head[now];i;i=e[i].nxt)\n    {\n        int to = e[i].to;\n        if(sum + 1 == dis[to])\n         DFS(to,sum + 1);\n    }\n}\n\nint main ()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        add(a,b),add(b,a);\t\n    }\n    SPFA();\n    DFS(1,0);\n    for(int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\n\u6211\u4eec\u601d\u8003\u4f18\u5316\u3002\n\n\u8fd9\u4efd\u4ee3\u7801\u7684\u74f6\u9888\u5728DFS\u90e8\u5206\uff0c\u5bfc\u81f4\u590d\u6742\u5ea6\u5230\u4e86$O(2^N + KE)$\n\n\u5176\u4e2d $KE$ \u4e3aSPFA \u590d\u6742\u5ea6\uff0c $2^N$ \u4e3aDFS\u590d\u6742\u5ea6\u3002\n\n\u5f88\u663e\u7136\u4e86\uff0c\u6211\u4eec\u8981\u5bf9DFS\u8fdb\u884c\u4f18\u5316\u3002\n\n\u57fa\u4e8e\u56fe\u8bba\u7684DFS\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 **\u8bb0\u5fc6\u5316\u641c\u7d22** \u6216\u8005 **DP** \u8fdb\u884c\u4f18\u5316\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u4f7f\u7528DP\u3002\n\n\u8003\u8651\u4e00\u79cdDP\u3002\n\n$DP[i]$\u8bbe\u8ba1\u4e3a \u8282\u70b9 $i$ \u7684\u6700\u77ed\u8def\u6761\u6570\u3002\n\n\u8bbe\u8ba1\u8f6c\u79fb\u65b9\u7a0b \u4e3a\uff1a\n\n\u82e5 $A$ \u4e0e $B$ \u4e4b\u95f4\u8fde\u4e86\u4e00\u6761\u8fb9\n\n\u4e14 $A$ \u7684\u6df1\u5ea6\u5c0f\u4e8e $B$ \u7684\u6df1\u5ea6\n\n\u5219 $DP[B] += DP[A]$\n\n#### 1.\u6700\u4f18\u5b50\u7ed3\u6784\n\n\u4ece\u56fe\u7684\u5c42\u6b21\u6765\u8bf4\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u904d\u5386\u51fa\u8fb9\u7684\u677e\u5f1b\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u6240\u6709\u6700\u77ed\u8def\u7684\u6761\u6570\u3002\n\n\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u5982\u679c\u9700\u8981\u4e00\u4e2a\u8282\u70b9\u5165\u961f\u591a\u6b21\uff0c\u540e\u9762\u7684\u8282\u70b9\u6df1\u5ea6\u4e00\u5b9a\u662f\u5927\u4e8e\u7b49\u4e8e\u524d\u9762\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u5219\u4e00\u5b9a\u4f1a\u66f4\u52a3\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u5165\u961f\u7684\u5fc5\u8981\u3002\n\n\u7531\u6b64\u8bc1\u5f97\u3002\n\n#### 2.\u65e0\u540e\u6548\u6027\n\n\u5982\u679c\u5f53\u524d\u4fbf\u5229\u7684\u8282\u70b9\u4e3a$A$ , \u6211\u4eec\u904d\u5386\u5230\u4e86\u4e00\u6761\u4ed6\u7684\u51fa\u8fb9\u6307\u5411 $B$\n\n\u5219\u5c31\u8ba9 B \u7684 \u6700\u77ed\u8def\u6761\u6570 += A \u7684\u6700\u77ed\u8def\u6761\u6570\uff0c \u4e14\u4e0eA\u7684\u6700\u77ed\u8def\u4ece\u4f55\u800c\u6765\u65e0\u5173\u3002\n\n\u6709\u4e86\u8fd9\u4e9b\uff0c\u4ee3\u7801\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\u3002\n\n\u6ce8\u610f\u51fd\u6570\n```cpp\nvoid DP()\n```\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b:\n```cpp\n#include <bits/stdc++.h>\n#define inf 0x7fffffff\nusing namespace std;\nconst int maxn = 2000005;\nconst int mod = 100003;\nint n,m,head[maxn],cnt,dis[maxn],dp[maxn];\nbool inq[maxn],vis[maxn];\n\nstruct edge{\n\tint to,nxt;\n}e[maxn];\n\nvoid add(int u,int v)\n{\n\te[++cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nvoid SPFA()\n{\n\tpriority_queue <pair<int,int> > q;\n\tfor(int i=2 ;i<=n;++i) dis[i] = inf;\n\tq.push(make_pair(0,1));\n\tinq[1] = 1;\n\twhile(!q.empty())\n\t{\n\t\tint now = q.top().second;\n\t\tq.pop();\n\t\tinq[now] = 0;\n\t\tfor(int i = head[now];i;i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dis[to] > dis[now] + 1)\n\t\t\t{\n\t\t\t\tdis[to] = dis[now] + 1;\n\t\t\t\tq.push(make_pair(-dis[to],to));\n\t\t\t\tinq[to] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t//for(int i=1;i<=n;++i) printf(\"dis[%d] is %d\\n\",i,dis[i]);\n}\n\nvoid DP()\n{\n\tmemset(vis,0,sizeof(vis));\n\tqueue <int> q;\n\tq.push(1);dp[1]=1;vis[1]=1;dis[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint now = q.front();q.pop();\n\t\tfor(int i=head[now];i;i=e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dis[to] == dis[now] + 1)\n\t\t\t{\n\t\t\t\tdp[to] += dp[now];\n\t\t\t\tdp[to] %= mod;\n\t\t\t\tif(!vis[to])\n\t\t\t\t\tq.push(to),vis[to] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main ()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b),add(b,a);\t\n\t}\n\tSPFA();\n\tDP();\n\tfor(int i=1;i<=n;++i) printf(\"%d\\n\",dp[i]);\n\treturn 0;\n}\n```",
        "postTime": 1561195039,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u6700\u77ed\u8def \uff0c dijkstra   \n\n### \u3010\u9898\u76ee\u5927\u610f\u3011 \n\u4ece1\u5230\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u6709\u591a\u5c11\u6761   \n\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u6700\u77ed\u8def\u6709\u591a\u5c11\u6761\uff1f     \n\u5b8c\u5168\u53ef\u4ee5\u5728dijkstra\u6216\u8005SPFA\u7684\u8fc7\u7a0b\u4e2d\u6c42\u51fa\u6765\u7684   \n\u56e0\u4e3a\u5728\u677e\u5f1b\u64cd\u4f5c\u7684\u65f6\u5019   \n\u7528y\u5230x\u7684\u8fb9\u53bb\u677e\u5f1b    \n\u5982\u679c\u8fd9\u6761\u8fb9\u66ff\u6362\u4e0a\u53bb\u4f1a\u4f7f1\u5230x\u7684\u8ddd\u79bb\u66f4\u8fd1    \n\u90a3\u8fd9\u4e2a\u65f6\u5019x\u7684\u7b54\u6848\u5c31\u4f1a\u53d8\u4e3a\u677e\u5230\u4ed6y\u7684\u6700\u77ed\u8def\u7684\u4e2a\u6570   \n\u5982\u679c\u8fd9\u6761\u8fb9\u66ff\u6362\u4e0a\u53bb\u548c\u539f\u6765\u4e00\u6837    \n\u90a3\u5c31\u662f\u76ee\u524d\u770b\u6765\u53ef\u4ee5\u5f53\u505a\u6700\u77ed\u8def    \n\u5728x\u539f\u6765\u6700\u77ed\u8def\u4e2a\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u5230\u70b9y\u6700\u77ed\u8def\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86      \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n\nusing namespace std;\n\nint read()\n{\n\tint sum = 0,fg = 1;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9')\n\t{\n\t\tif(c == '-')fg = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9')\n\t{\n\t\tsum = sum * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn sum * fg;\n}\nconst int Max = 2000006;\nconst int mo = 100003;\nstruct node\n{\n\tint y,ne;\n}a[Max << 1];\nint head[Max >> 1],sum = 0;\n\nvoid add(int x,int y)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\thead[x] = sum;\n}\n\nstruct point\n{\n\tint x;\n\tint w;\n\tbool operator < (const point xx) const\n\t{\n\t\treturn xx.w < w;\n\t}\n};\nint dis[Max >> 1];\npriority_queue<point>q;\nint ans[Max >> 1];\nbool use[Max >> 1];\nvoid dj()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[1] = 0;\n\tans[1] = 1;\n\tq.push((point){1,0});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x,w = qwq.w;\n\t\tif(use[x] == true)\n\t\t\tcontinue;\n\t\telse\n\t\t\tuse[x] = true;\n\t\tfor(register int i = head[x];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(dis[awa] > dis[x] + 1)\n\t\t\t{\n\t\t\t\tdis[awa] = dis[x] + 1;\n\t\t\t\tans[awa] = ans[x];\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t\tq.push((point){awa,dis[awa]});\n\t\t\t}\n\t\t\telse\n\t\t\tif(dis[awa] == dis[x] + 1)\n\t\t\t{\n\t\t\t\tans[awa] += ans[x];\n\t\t\t\tans[awa] %= mo;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint n = read(),m = read();\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tint x = read(),y = read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tdj();\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcout << ans[i] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1573114856,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u770b\u9898\u76ee\uff0c\u8003\u8651\u6700\u77ed\u8def\uff0c\u53d1\u73b0\u6743\u503c\u4e3a1\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5bfs\u4e86.\n\n\u56e0\u4e3abfs\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u7b2c\u4e00\u6b21\u5230\u8fbe\u6b64\u70b9\uff0c\u4e00\u5b9a\u662f\u5b83\u7684\u6700\u77ed\u8def.\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee51\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u7684BFS\u641c\u7d22\u6811\u4e2d\u70b9\u7684\u6df1\u5ea6(\u6743\u503c\u4e3a1)\uff0c\u5c31\u662f\u5b83\u7684\u6700\u77ed\u8def\u957f\u5ea6.\n\n**\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u76f8\u90bb\u6df1\u5ea6\u70b9\u4e00\u5b9a\u662f\u5728\u540c\u4e00\u6700\u77ed\u8def\u4e2d**\uff0c\u6211\u4eec\u5728\u6b64\u505a\u4e00\u4e2a\u6807\u8bb0\uff0c\u7531\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u66f4\u65b0\u7b54\u6848,\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u6761\u6570\u3002\n\n**Code:**\n\n**Python**:(\u961f\u5217\u662f\u624b\u5199\u961f\u5217\uff0cpython\u81ea\u5e26\u7684\u961f\u5217\u592a\u6162\u4e86)\n\n\n```python\n#import queue\n#que=queue.Queue(maxsize=0)\nmod=100003\ns=input().split()\nn=int(s[0])\nm=int(s[1])\n\nnext=[0 for i in range(1200000)]\nnum=[0 for i in range(1200000)]\nto=[0 for i in range(1200000)]\nvis=[0 for i in range(1200000)]\ndeep=[0 for i in range(1200000)]\nans=[0 for i in range(1200000)]\nque=[0 for i in range(1200000)]\ntot=0\n\nfor i in range(m):\n    s=input().split()\n    x=int(s[0])\n    y=int(s[1])\n    \n    tot+=1\n    next[tot]=num[x]\n    to[tot]=y\n    num[x]=tot\n\n    tot+=1\n    next[tot]=num[y]\n    to[tot]=x\n    num[y]=tot\n#\u5efa\u7acb\u65e0\u5411\u56fe\nvis[1]=1\nans[1]=1\nque[1]=1\nl=1\nr=1\nwhile (l<=r):#\u961f\u5217\n    x=que[l]\n    i=num[x]\n    while(i):\n        y=int(to[i])\n        if(vis[y]==0):\n            vis[y]=1\n            deep[y]=deep[x]+1\n            r+=1\n            que[r]=y\n            #que.put(y)\n\n        if(deep[y]==deep[x]+1):\n            ans[y]=(ans[y]+ans[x])%mod\n        i=next[i]\n    l+=1\n\nfor i in range(1,n+1):#\u8f93\u51fa\u7b54\u6848\n    print(ans[i])\n\n```\n\n**C++:**\n\n```cpp\n/**\n*    author:  a2954898606\n*    created: 2019/10/22 20:12:15\n**/\n#include<bits/stdc++.h>\n#define REP(A,B,I) for(int I=(A);I<=(B);I++)\n#define PER(A,B,I) for(int I=(A);I>=(B);I--)\n#define read(FILENAME) freopen((FILENAME + \".txt\"), \"r\", stdin);\n#define write(FILENAME) freopen((FILENAME + \".txt\"), \"w\", stdout);\n#define LL long long\n#define N 1000010\n#define M 100\nusing namespace std;\nconst long long mod=100003;\nlong long quickmul(long long a,long long b){\n    a%=mod;b%=mod;\n    long long c=(long long)a*b/mod;\n    long long ret=a*b-c*mod;\n    if(ret<0)ret+=mod;\n    else if(ret>=mod)ret-=mod;\n    return ret;\n}\nlong long quickpow(long long a,long long b){\n    long long ret=1;\n    while(b){\n        if(b&1)ret=ret*a%mod;\n        a=a*a%mod;\n        b>>=1;\n    }\n    return ret;\n}\nint n,m,u,v;\nqueue<int>que;\nvector<int> vt[N];\nbool vis[N];\nint ans[N],deep[N];\nvoid bfs(){\n    vis[1]=1,ans[1]=1;\n    que.push(1);\n    while(!que.empty()){\n        int x=que.front();\n        que.pop();\n        int len=vt[x].size()-1;\n        REP(0,len,i){\n            int y=vt[x][i];\n            if(!vis[y]){\n                vis[y]=1;\n                deep[y]=deep[x]+1;\n                que.push(y);\n            }\n            if(deep[y]==deep[x]+1){///\u662f\u76f8\u90bb\u6df1\u5ea6\u8282\u70b9\n                ans[y]=(ans[x]+ans[y])%mod;\n            }\n        }\n    }\n    return;\n}\nint main(){\n    //read(1)\n    //write(1)\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin>>n>>m;\n    REP(1,m,i){\n        cin>>u>>v;\n        vt[u].push_back(v);\n        vt[v].push_back(u);\n    }\n    bfs();\n    REP(1,n,i){\n        cout<<ans[i]<<endl;\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1571750376,
        "uid": 103304,
        "name": "a2954898606",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u6211\u7b2c\u4e00\u773c\u770b\u89c1\u6700\u77ed\u8def\u8ba1\u6570\u5176\u5b9e\u662f\u4e00\u5934\u96fe\u6c34\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u518d\u60f3\u4e00\u60f3\uff0c\u53ea\u8981\u8d77\u70b9\u5230\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u6709\u51e0\u79cd\u4e0d\u540c\u8d70\u6cd5\u4f46\u662f\u6240\u8fc7\u8def\u5f84\u6743\u503c\u548c\u76f8\u7b49\u5c31\u8bf4\u660e\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u79cd\u6570\u4e0d\u540c\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u6c42A\u5230B\u7684\u6700\u77ed\u8def\u7684\u65b9\u6848\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u6c42A\u5230B\u6709\u591a\u5c11\u6761\u8def\u5f84\u662f\u6700\u77ed\u4e14\u603b\u6743\u503c\u76f8\u7b49\u7684\n\n\u6211\u4eec\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u6839\u636e\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u65b9\u5f0f\uff0c\u4ed6\u662f\u6839\u636e\u524d\u9762\u70b9\u6700\u77ed\u8def\u7684\u60c5\u51b5\u6765\u51b3\u5b9a\u540e\u9762\u70b9\u7684\u60c5\u51b5\u7684\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u8981\u6c42\u5f53\u524d\u70b9\u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\n**\u7b2c\u4e00\u79cd**\u662f\u5230\u5f53\u524d\u70b9\u7684\u6700\u77ed\u8def\u9700\u8981\u66f4\u65b0\uff1a\n\n\u90a3\u4e48\u5c31\u8981\u6839\u636e\u677e\u5f1b\u64cd\u4f5c\u91cc\u7684\uff1a\n\n```cpp\nif (dis[a[k].to]>dis[v]+a[k].dis)\n\t\t\t\tdis[a[k].to]=dis[v]+a[k].dis;\n```\n\u5f53\u524d\u7684\u65b9\u6848\u6570\u4e5f\u5c31\u662f\u4e2d\u95f4\u70b9v\u7684\u65b9\u6848\u6570\n\n![](https://cdn.luogu.com.cn/upload/pic/72128.png)\n\n\u7b2c\u4e8c\u79cd\u5c31\u662f\u5f53\u524d\u7684\u5230B\u7684\u6700\u77ed\u8def\u4e0d\u9700\u8981\u66f4\u65b0\uff0c\u5373\u51fa\u73b0\n\n```cpp\ndis[a[k].to]=dis[v]+a[k].dis\n```\n\u7531\u4e8e\u51fa\u73b0\u4e86\u4e0e\u4e4b\u524d\u4e2d\u95f4\u70b9\u4e0d\u540c\u7684\u6700\u77ed\u8def\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u5219\u5230\u5f53\u524dB\u70b9\u7684\u65b9\u6848\u6570\u52a0\u4e0a\u8fd9\u4e2a\u4e2d\u95f4\u70b9\u7684\u65b9\u6848\u6570\n\n**\u6ce8\u610f\uff1a\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u6539\u53d8\u662f\u901a\u8fc7\u66ff\u6362\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u7d2f\u52a0\uff01**\n\n\u5176\u4ed6\u7684\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6839\u636eSPFA\u7684\u6a21\u677f\u5957\u4e00\u4e0b\u5373\u53ef\n\u611f\u6168\uff1a\u8fd9\u79cd\u6839\u636e\u524d\u9a71\u6765\u51b3\u5b9a\u5f53\u524d\u7684\u601d\u60f3\u771f\u7684\u5f88\u5b9e\u7528\u4e5f\u5f88\u91cd\u8981\u554a\uff01\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nstruct CZP\n{\n\tint next,to,dis;\n}a[5000001];\nint b[1000001],h[1000001],dis[1000001],k,n,m,sx,top,que[100001],tot[1000001];\nvoid cun(int from,int to,int dis)\n{\n\ta[++top].next=h[from];\n\ta[top].to=to;\n\ta[top].dis=dis;\n\th[from]=top;\n}  //\u90bb\u63a5\u8868\u5b58\u50a8\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\th[i]=-1;\n\ttot[1]=1;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tcun(x,y,1);\n\t\tcun(y,x,1);\n\t}  //\u65e0\u5411\u56fe\u5b58\u50a8\n\tfor (int i=1;i<=n;i++)\n\tdis[i]=2147483647;\n\tdis[1]=0;\n\tb[1]=1;\n\tint head=0,tail=1;\n\tque[tail]=1;\n\tdo\n\t{\n\t\thead=head%100000+1;  //\u5faa\u73af\u961f\u5217\u5b58\u50a8\n\t\tint v=que[head];\n\t\tk=h[v];\n\t\tb[v]=0;\n\t\twhile (k!=-1)\n\t\t{\n\t\t\tif (dis[a[k].to]>dis[v]+a[k].dis)\n\t\t\t{\n\t\t\t\tdis[a[k].to]=dis[v]+a[k].dis;\n\t\t\t\ttot[a[k].to]=tot[v];  //\u51fa\u73b0\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5373\u6700\u77ed\u8def\u51fa\u73b0\u66f4\u77ed\u7684\u9700\u8981\u65b0\u66f4\u65b0\u7684\u60c5\u51b5\n\t\t\t\tif (!b[a[k].to])\n\t\t\t\t{\n\t\t\t\t\tb[a[k].to]=1;\n\t\t\t\t\ttail=tail%100000+1;\n\t\t\t\t\tque[tail]=a[k].to;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tif (dis[a[k].to]==dis[v]+a[k].dis)  //\u51fa\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5373\u4e3a\u51fa\u73b0\u4e0e\u5230\u5f53\u524d\u70b9\u6700\u77ed\u8def\u76f8\u540c\u7684\u4f46\u4e2d\u95f4\u70b9\u9009\u53d6\u4e0d\u540c\u7684\u60c5\u51b5\n\t\t\t{\n\t\t\t\ttot[a[k].to]+=tot[v];\n\t\t\t\ttot[a[k].to]%=100003;  //\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u7684\u53d6\u6a21\n\t\t\t} \n\t\t\tk=a[k].next;\n\t\t}\n\t}while (head<tail);\n\tfor (int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",tot[i]);   //\u8f93\u51fa\u5373\u53ef\n\treturn 0;\n } \n```\n\nPs\uff1a\u53ef\u80fd\u601d\u8def\u6709\u96f7\u540c\uff0c\u4f46\u662f\u6211\u4e5f\u662f\u5f88\u7528\u5fc3\u5199\u4e86\u554a\uff0c\u7ba1\u7406\u5458\u8f9b\u82e6\u4e86\uff01\n",
        "postTime": 1565800598,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\n- \u672c\u6765\u5199\u4e86\u4e2a\u548c\u4e00\u4e9b\u9898\u89e3\u6bd4\u8f83\u76f8\u50cf\u7684\u4ec0\u4e48$SPFA$\u3001$Dijkstra$\u4e4b\u7c7b\u7684\uff0c\u540e\u9762\u51fa$bug$\u61d2\u5f97\u5f04\u4e86\uff0c\u5c31\u770b\u4e86\u773c\u9898\u89e3\uff0c\u7b2c\u4e00\u7bc7$dalao$\u7528$bfs$\u505a\uff0c\u505a\u6cd5\u5341\u5206\u6e05\u723d\uff0c\u4e0d\u5f97\u4e0dorz\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u5f88\u591a$dalao$\u5199\u7684\u9898\u89e3\u90fd\u6bd4\u8f83\u7b80\u7565\u5462\u3002\u3002\u3002\u3002\u770b\u6765\u6211\u592a\u83dc\u4e86\u5427QAQ\n\n- \u6240\u4ee5\u6211\u5c31\u5199\u4e86\u4e00\u7bc7$dalao$\u4ee3\u7801\u8f83\u8be6\u7ec6\u7684\u89e3\u91ca\u3002\u56e0\u4e3a\u8fb9\u7684\u6743\u503c\u90fd\u4e3a1\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u624d\u80fd\u7528$bfs$\uff0c$dalao$\u8bf4\u7684\uff1a\n\n  > \u4e00\u4e2a\u70b9\u6700\u77ed\u8def\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u5c42\u6570\u6bd4\u5b83\u5c11\u4e00\u7684\u7ed3\u70b9\uff08\u5426\u5219\u4e0d\u662f\u6700\u77ed\u8def\uff09\u3002\n  >\n  > \u6240\u4ee5\u7528\u6bcf\u4e2a\u76f8\u90bb\u4e14\u5c42\u6570\u6bd4\u5f53\u524d\u7ed3\u70b9\u5c42\u6570\u5c11\u4e00\u7684\u70b9\u66f4\u65b0\u5f53\u524d\u70b9\u7684\u8def\u5f84\u8df3\u6570\u5373\u53ef\u3002\n\n  \u6709\u4e00\u4e9b\u4eba\u770b\u4e0d\u61c2\uff0c\u8fd9\u4e2d\u95f4\u7684\u5c42\u6570\u5c31\u662f\u79bb\u6e90\u70b9\uff08\u9876\u70b91\uff09\u7684\u8ddd\u79bb\uff0c\u6216\u8005\u8bf4\u662f$bfs$\u641c\u7d22\u6811\u7684\u6df1\u5ea6\u3002\u6240\u4ee5\u8fd9\u4e2a\u6700\u77ed\u8def\u4e00\u5b9a\u662f\u6cbf\u7740\u4ece\u6df1\u5ea6\u6bd4\u5b83\u5c111\u7684\u7ed3\u70b9\u6765\u7684\uff0c\u4e0d\u7136\u5b83\u5c31\u4e0d\u7b97\u6700\u77ed\u8def\uff0c\u8fd9\u4e2a\u8df3\u6570\u5e94\u8be5\u5c31\u662f\u628a\u6700\u77ed\u8def\u6570\u91cf\u4ece\u65c1\u8fb9\u7684\u70b9\u8f6c\u79fb\u8fc7\u6765\u3002\n\n- Code\uff1a\u66f4\u591a\u89e3\u91ca\u8bf7\u770b\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#define INF 1<<30\n#define Mod 100003\nusing namespace std;\nvector<int> G[1000005];//\u6ce8\u610f\u8fd9\u662f2\u7ef4\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u6bcf\u4e00\u4e2a\u70b9\u6240\u8fde\u7684\u8fb9\uff0c\u800c\u9898\u76ee\u4e2d\u670910^6\u4e2a\u70b9\uff0c\u6240\u4ee5\u662f10^6+5\nqueue<int>Q;//bfs\u6240\u9700\u8981\u7684\u961f\u5217\nint dep[1000005],cnt[1000005];//dep\u662f\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u6e90\u70b9\u7684\u6df1\u5ea6\uff0ccnt\u50a8\u5b58\u7b54\u6848\uff0c\u5373\u5230\u70b9i\u7684\u6700\u77ed\u8def\u4e2a\u6570\nbool vis[1000005];//\u5224\u65ad\u70b9\u662f\u5426\u4f7f\u7528\nint main(){\n    int N,M;\n\tscanf(\"%d%d\",&N,&M);\n    for(int i=1;i<=M;i++){\n        int x,y;scanf(\"%d%d\",&x,&y);\n        G[x].push_back(y);//\u5b58\u8fb9\uff0c\u65e0\u5411\u56fe\u5b58\u6709\u5411\u8fb9\u4e24\u6b21\n        G[y].push_back(x);\n\t}\n\tdep[1]=0;\n\tvis[1]=1;\n\tQ.push(1);\n\tcnt[1]=1;\n    while(!Q.empty()){//bfs\u6838\u5fc3\u4ee3\u7801\n        int x=Q.front();\n\t\tQ.pop();\n        for(int i=0;i<G[x].size();i++){//\u904d\u5386\u70b9\u6240\u8fde\u7684\u6bcf\u4e00\u6761\u8fb9\n            int t=G[x][i];\n            if(!vis[t]){\n\t\t\t\tvis[t]=1;\n\t\t\t\tdep[t]=dep[x]+1;//\u6df1\u5ea6+1\n\t\t\t\tQ.push(t);\n\t\t\t}\n            if(dep[t]==dep[x]+1)//dalao\u8bf4\u7684\u6700\u540e\u4e00\u53e5\u8bdd\uff0c\u8fd9\u4e2a\u70b9\u76f4\u63a5\u4ece\u65c1\u8fb9\u6df1\u5ea6-1\u7684\u7ed3\u70b9\u6dfb\u52a0\u6700\u77ed\u8def\u6570\u91cf\n\t\t\t\tcnt[t]=(cnt[t]+cnt[x])%Mod;//\u4e0d\u8981\u5fd8\u8bb0\u8981%Mod\n        }\n    }\n    for(int i=1;i<=N;i++)\n        printf(\"%d\\n\",cnt[i]);\n    return 0;\n}\n```\n\n- %%%[GGN_2015](https://www.luogu.org/space/show?uid=36456)\n- \u672c\u4eba\u4e2a\u4eba[Blog](https://www.17shou.vip/)\uff0c\u6b22\u8fce$dalao$\u8fdb\u6765\u62cd\u7816\uff0c\u4ea4\u6362\u53cb\u94fe\u4ec0\u4e48\u7684^ _ ^\n",
        "postTime": 1550158169,
        "uid": 60356,
        "name": "Snowflake_Pink",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "~~\u672c\u849f\u84bb\u4e5f\u6765\u53d1\u4e00\u6b21\u9898\u89e3~~~~\u7b2c\u4e00\u7bc7\u8bf7\u89c1\u8c05~~\n\n# \u8fd9\u4e2a\u9898\u6709\u51e0\u4e2a\u8981\u70b9\n\n1.\u65e0\u5411\u65e0\u6743\u56fe\uff0c\u5efa\u56fe\u7684\u65f6\u5019\u522b\u5fd8\u8bb0\u5efa\u6765\u56de\u7684\u6709\u5411\u8fb9~~\u3010\u56e0\u6b64WA\u63891\u6b21~~\n\n2.\u65e0\u6743\u561b\uff0c\u90a3\u4e48\u8fb9\u957f\u5efa\u62101\u5c31\u597d\u4e862333333\n\n3.\u6700\u77ed\u8def\u91c7\u7528\u8fea\u6770\u65af\u7279\u62c9\uff08\u522b\u5fd8\u7528\u5806\u4f18\u5316\uff09\u6765\u505a\uff0c\u8ba1\u6570\u64cd\u4f5c\u6539\u88c5\u8fdb\u53bb\uff0cans[1]=1;\u8fea\u6770\u65af\u7279\u62c9\u66f4\u65b0\u8fb9\u957f\u7684\u65f6\u5019\u5982\u679c\u5927\u4e8e\u53f7\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\u5c31\u8986\u76d6\uff0c\u76f8\u7b49\u7684\u8bdd\u5c31\u52a0\u4e0a\n\n~~4.%\u697c\u4e0aSPFA\uff0cBFS\u5927\u4f6c~~\n\n# \u5177\u4f53\u89c1\u4ee3\u7801~~\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u8fea\u6770\u65af\u7279\u62c9\u91cc\u9762\u586b\u4e86\u51e0\u7b14\uff08\u9003~~\n\n~~\u4ee3\u7801\u5de8\u4e11\uff08\u6342\u8138\uff09~~\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define maxn 1000006\nusing namespace std;\nint n,m,s=1;\nint dis[maxn];\nint ans[maxn];\nstruct Edge{\n    int t,nxt,w;\n}edge[maxn*4];\nint book[maxn];\nint head[maxn],tot=0;\npriority_queue< pair<int,int> > hep;\nvoid add(int st,int to,int we){\n    edge[tot].t=to;\n    edge[tot].nxt=head[st];\n    edge[tot].w=we;\n    head[st]=tot;\n    tot++;\n}\nvoid init(){\n    scanf(\"%d %d\",&n,&m);\n    memset(book,0,sizeof(book));\n    memset(head,-1,sizeof(head));\n    memset(dis,0x3f,sizeof(dis));\n    memset(ans,0,sizeof(ans));\n    for(int i=1;i<=m;i++){\n        int a,b;\n        scanf(\"%d %d\",&a,&b);\n        add(a,b,1);\n        add(b,a,1);\n    }\n    dis[s]=0;\n    ans[s]=1;\n    return;\n}\nvoid dij(){\n    hep.push(make_pair(0-dis[s],s));\n    while(!hep.empty()){\n        int np=hep.top().second;hep.pop();\n        if(book[np]) continue;\n        book[np]=1;\n        for(int i=head[np];i!=-1;i=edge[i].nxt){\n            int w=edge[i].w;\n            int t=edge[i].t;\n            if(dis[t]>dis[np]+w){\n                dis[t]=dis[np]+w;\n                ans[t]=ans[np];\n                hep.push(make_pair(0-dis[t],t));\n            }\n            else if(dis[t]==dis[np]+w){\n            \tans[t]+=ans[np];\n            \tans[t]%=100003;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",ans[i]);\n    return;\n}\nint main(){\n    init();\n    dij();\n    return 0;\n} \n```",
        "postTime": 1532867882,
        "uid": 88710,
        "name": "wcy1056935201",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u4e0d\u96be\u60f3\u5230\u5148\u6c42\u51fa\u8d77\u70b9\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u7136\u540ebfs\uff0c\u4f46\u662f\u518d\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c\u663e\u7136\u662f\u4e0d\u53ef\u884c\u7684\u3002\u3002\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u6700\u77ed\u8def\u90a3\u65b9\u9762\u53bb\u8003\u8651 \n\nSPFA\u5c31\u662fbfs\uff0c\u800c\u4e14\u5728\u627e\u5230\u5230\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u65f6\u4f1a\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff0c\u5728\u6bcf\u6b21\u677e\u5f1b\u4e00\u4e2a\u70b9\u65f6\uff0c\u53ef\u80fd\u5c31\u627e\u5230\u4e86\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def \n\n\u7136\u540e\u4e0d\u96be\u60f3\u5230\uff0c\u8fd9\u65f6\u5230\u8fd9\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u7684\u6761\u6570\u7b49\u4e8e\u5230\u524d\u9a71\u8282\u70b9\u7684\u6700\u77ed\u8def\u7684\u6761\u6570 \n\n\u4f46\u662f\u5230\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u6700\u77ed\u8def\u4e0d\u4e00\u5b9a\u53ea\u7ecf\u8fc7\u4e00\u4e2a\u76f8\u540c\u7684\u524d\u9a71\uff0c\u90a3\u4e48\u6211\u4eec\u52a0\u4e00\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u677e\u5f1b\u7684\u65f6\u5019\uff0c\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb=\u5230\u5b83\u7684\u6700\u77ed\u8def\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6700\u77ed\u8def\u7684\u6761\u6570\u52a0\u4e0a\u5f53\u524d\u524d\u9a71\u8282\u70b9\u7684\u6700\u77ed\u8def\u7684\u6761\u6570\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u4e2a\u8bb0\u5fc6\u5316 \n\n\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u88ab\u677e\u5f1b\u4e86\uff0c\u90a3\u8bf4\u660e\u5b83\u4e4b\u524d\u7684\u8def\u5f84\u90fd\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u76f4\u63a5\u8d4b\u503c\u6210\u524d\u9a71\u7684\u6700\u77ed\u8def\u6761\u6570 \n\n\n\n------------\n\n\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#define For(i,l,r) for(int i=l;i<=r;++i)\nusing namespace std;\nint read()\n{\n    char c;\n    int a=0;\n    bool t=0;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-')\n    {\n        t=1;\n        c=getchar();\n    }\n    while(isdigit(c))\n    {\n        a*=10;\n        a+=(c-'0');\n        c=getchar();\n    }\n    return a*(t?-1:1);\n}\nstruct line{\n    int to,next;\n}edge[4000001];\nint n,m,ans[1000001],last[1000001],dis[1000001];\nbool vis[1000001];\nvoid add(int from,int to,int i)\n{\n    edge[i].next=last[from];\n    last[from]=i;\n    edge[i].to=to;\n}\nvoid spfa()\n{\n    int tx;\n    memset(dis,127,sizeof dis);\n    queue<int> q;\n    q.push(1);dis[1]=0;vis[1]=1;ans[1]=1;\n    while(!q.empty())\n    {\n        tx=last[q.front()];\n        while(tx)\n        {\n            if(dis[edge[tx].to]>dis[q.front()]+1)\n            {\n                dis[edge[tx].to]=dis[q.front()]+1;\n                ans[edge[tx].to]=ans[q.front()];\n                if(!vis[edge[tx].to])\n                {\n                    q.push(edge[tx].to);\n                    vis[edge[tx].to]=1;\n                }\n            }\n            else if(dis[edge[tx].to]==dis[q.front()]+1)\n            {\n                ans[edge[tx].to]+=ans[q.front()];\n                ans[edge[tx].to]%=100003;\n            }\n            tx=edge[tx].next;\n        }\n        vis[q.front()]=0;\n        q.pop();\n    }\n}\nint main()\n{\n    int tx,ty;\n    n=read();\n    m=read();\n    m+=m;\n    For(i,1,m)\n    {\n        tx=read();\n        ty=read();\n        add(tx,ty,i++);\n        add(ty,tx,i);\n    }\n    spfa();\n    For(i,1,n)\n     printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1525923658,
        "uid": 36194,
        "name": "EightSixSun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u4eba\u7528dijkstra \u6211\u6765\u6c34\u4e00\u53d1\n\n\u4ee3\u7801\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,st,ed;\nconst int maxn=1000010;\nconst int maxm=2000010;\nconst int fuck=100003;\nstruct edge{\n    int to,val,next;\n}G[maxm];\nint head[maxn],tot=0;\nint f[maxn];\nstruct node{\n    int i,di;\n};\nbool operator <(node a,node b){return a.di>b.di;}\npriority_queue<node>q;//\u5806\u4f18\u5316\u5565\u7684\n#define AOE add_oriented_edge\nvoid add_oriented_edge(int start,int end,int weight){//\u51e0\u4e2a\u6708\u524d\u6253\u7684\u90bb\u63a5\u8868 \n    G[tot].to=end;//\u52a0\u6761\u6709\u5411\u8fb9 \n    G[tot].val=weight;\n    G[tot].next=head[start];\n    head[start]=tot++;\n}\nvoid add_edge(int node1,int node2,int weight){\n    add_oriented_edge(node1,node2,weight);\n    add_oriented_edge(node2,node1,weight);//\u52a0\u6761\u65e0\u5411\u8fb9\uff0c\u5c31\u662f\u641e\u4fe9\u6709\u5411\u8fb9 \n}\nvoid init(){\n    int x,y,z;\n    memset(head,-1,sizeof(head));//\u8f93\u5165 \n    scanf(\"%d%d\",&n,&m);\n    st=1;\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y,1);//\u65e0\u6743\u56fe\uff1f\u628a\u8fb9\u6743\u5168\u90e8\u8bbe\u4e3a1\u5c31\u4e0d\u7528\u6539\u4e86\n    }\n}\nint dis[maxn];\nvoid doit(int o){//\u9694\u58c1P1339\u6765\u7684\u5806\u4f18\u5316dijkstra \n    memset(dis,0x7f,sizeof(dis));\n    memset(f,0,sizeof(f));\n    q.push((node){st,0});\n    node tmp;\n    dis[o]=0;\n    f[o]=1;\n    for(;!q.empty();){\n        tmp=q.top();\n        q.pop();\n        if(dis[tmp.i]!=tmp.di)continue;\n        for(int i=head[tmp.i];i!=-1;i=G[i].next){\n            int v=G[i].to;\n            if(tmp.di+G[i].val==dis[v]){//\u5982\u679c\u901a\u8fc7tmp\u70b9\u8bbf\u95eev\u70b9\u521a\u597d\u662f\u6700\u77ed\u8def\uff0c\u7d2f\u52a0\u8def\u5f84\u6761\u6570 \n                f[v]=(f[tmp.i]+f[v])%fuck;//\u8fb9\u52a0\u8fb9\u819c\n            }\n            if(tmp.di+G[i].val<dis[v]){//\u5982\u679c\u66f4\u65b0\u4e86tmp\u70b9\u5230v\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4e4b\u524d\u7684\u4e0d\u7b97\uff0c\u91cd\u65b0\u6765\u8fc7\u3002 \n                dis[v]=tmp.di+G[i].val;\n                f[v]=f[tmp.i];\n                q.push((node){v,dis[v]});\n```\n}//\u5176\u5b9e\u7edf\u8ba1\u90e8\u5206\u8ddfSPFA\u5dee\u4e0d\u591a.....\n\n```cpp\n        }\n    }\n}\nint main(){\n    init();\n    doit(st);\n    for(int i=1;i<n;i++){\n        printf(\"%d\\n\",f[i]);\n    }\n    printf(\"%d\",f[n]);\n    return 0;\n}\n```",
        "postTime": 1497848152,
        "uid": 38725,
        "name": "xiwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u849f\u84bb\u7b2c\u4e00\u4e2a\u9898\u89e3\n\u524d\u5411\u661f+BFS\n\u4ee3\u7801\u6ce8\u91ca\u8be6\u89e3\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;//num[]\u8bb0\u5f55\u7b54\u6848\uff0cd[]\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0cvt[]\u8bb0\u5f55\u8bbf\u95ee\uff0cs[]\u4e3a\u961f\u5217 \nint n,m,cnt,ans,h[200005],num[200005],root,d[200005]\uff1b \nint vt[200005],s[200005];//\u592a\u591a\u4e86\uff0c\u5206\u4e24\u884c2333 \nstruct node//\u524d\u5411\u661f\u7ed3\u6784\u4f53 \n{\n\tint to;\n\tint next;\n}q[400010];//\u56e0\u4e3a\u662f\u65e0\u5411\u7684\uff0c\u6240\u4ee5\u8981\u7ffb\u500d \nvoid qxx(int x,int y)//\u751f\u6210\u524d\u5411\u661f (\u522b\u5410\u69fd\u51fd\u6570\u540dQAQ)\n{\n\tq[++cnt].to=y;\n\tq[cnt].next=h[x];\n\th[x]=cnt;\n}\nvoid bfs()//\u56e0\u4e3a\u662f\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5\u5bbd\u641c \n{\n\tint head=1,tail=1;\n\ts[head]=root;vt[root]=1;num[1]=1;//\u521d\u59cb\u5316 \n\twhile(head<=tail)\n\t{\n\t\tfor(int i=h[s[head]];i;i=q[i].next)\n\t\t{\n\t\t\tint y=q[i].to;\n\t\t\tif(s[head]==y)//\u526a\u679d\uff0c\u8df3\u8fc7\u81ea\u73af \uff0c\u4ee5\u8282\u7ea6\u65f6\u95f4 \n\t\t\tcontinue;\n\t\t\tif(!vt[y])//\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0c\u5219\u76f4\u63a5\u8bb0\u5f55 \n\t\t\t{\n\t\t\t\ts[++tail]=y;\n\t\t\t\tnum[y]=num[y]+num[s[head]]%100003;//\u80fd%\u5c31% \n\t\t\t\tnum[y]%100003;//\u80fd%\u5c31% \n\t\t\t\td[y]=d[s[head]]+1;\n\t\t\t\tvt[y]=1;\n\t\t\t}\n\t\t\telse//\u7b2c\u82e5\u5e72\u6b21\u8bbf\u95ee\uff0c\u5148\u5224\u65ad\u8def\u5f84\u662f\u5426\u4e3a\u6700\u77ed \n\t\t\tif(vt[y]&&d[s[head]]+1==d[y])\n\t\t\t{\n\t\t\t\tnum[y]=num[y]+num[s[head]]%100003;//\u80fd%\u5c31% \n\t\t\t\tnum[y]%100003;//\u80fd%\u5c31% \n\t\t\t}\n\t\t}\n\t\thead++;\n\t}\n}\nint main()\n{\n\tcin>>n>>m;\n\tint i;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tqxx(x,y);qxx(y,x);//\u65e0\u5411\u524d\u5411\u661f \n\t}\n\troot=1;//\u56e0\u4e3a\u662f\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5\u6839\u4e3a1 \n\tbfs();//\u5f00\u59cb\u5bbd\u641c \n\tfor(i=1;i<=n;i++)\n\tprintf(\"%d\\n\",num[i]%100003);//\u4e00\u5b9a\u8981%100003,\u4e0d\u7136\u4f1awa\u4e24\u4e2a\u70b9 \n}\n```",
        "postTime": 1534918000,
        "uid": 113183,
        "name": "limi_sanhua",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "SPFA\u3001Dij\u7b49\u7b49\u65b9\u6cd5\u76f8\u4fe1\u697c\u4e0a\u4e0b\u5df2\u7ecf\u8bb2\u70c2\u6389\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u91cd\u590d\uff0c\u53ea\u662f\u60f3\u5c31\u672c\u9898\u8c08\u4e00\u8c08\u6700\u77ed\u8def\u8ba1\u6570\u4f7f\u7528\u771f\u6b63\u7684\u6b63\u786e\u59ff\u52bf\u548c\u5728\u672c\u9898\u91cc\u7684\u7279\u6b8a\u4e4b\u5904\u3002\u5148\u653e\u672c\u4eba\u51e0\u79cd\u4ee3\u7801\u7565\u8bb2\u4e00\u4e0b\u3002\n\nDijkstra(\u5982\u679c\u7801\u98ce\u80fd\u591f\u88ab\u63a5\u53d7\u7684\u8bdd)\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> pii;\nconst int MOD=100003;\nconst int INF=0x3f3f3f3f;\nconst int N=1000000+7;\nconst int M=2000000+7;\ninline int read(){\n    int x=0,f=0;char ch;\n    while(!isdigit(ch=getchar()))if(ch=='-') f=1;\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar();\n    return f?-x:x;\n}\npriority_queue <pii,vector<pii>,greater<pii> > q;\nint v[M<<1],Head[N],Next[M<<1],dis[N],ans[N];\nint n,m,x,y,tot;\n\ninline void Addedge(){\n    v[++tot]=y,Next[tot]=Head[x],Head[x]=tot;v[++tot]=x,Next[tot]=Head[y],Head[y]=tot;\n}\n\nvoid dijkstra(int u){\n    memset(dis,INF,sizeof(dis));ans[u]=1;\n    q.push(make_pair(dis[u]=0,u));\n    while(!q.empty()){\n        int d=q.top().first,x=q.top().second;q.pop();\n        if(d!=dis[x]) continue;//\u8fd9\u91cc\u662f\u4e2a\u4eba\u4e60\u60ef\u3002\u4e0d\u60f3\u5f00vis\u6570\u7ec4\u4e86\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u88ab\u8bbf\u95ee\u62d3\u5c55\u8fc7\n        for(register int j=Head[x];j;j=Next[j]){\n            int y=v[j];\n            if(dis[y]>dis[x]+1){\n            \tdis[y]=dis[x]+1;\n            \tans[y]=ans[x];\n            \tq.push(make_pair(dis[y],y));\n            } \n            else if(dis[y]==dis[x]+1) ans[y]=(ans[x]+ans[y])%MOD;\n        }\n    }\n}\n\nint main(){\n    n=read(),m=read();\n    for(register int i=1;i<=m;++i) x=read(),y=read(),Addedge();\n    dijkstra(1);\n    for(register int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\nspfa:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MOD=100003;\nconst int INF=0x3f3f3f3f;\nconst int N=1000000+7;\nconst int M=2000000+7;\ninline int read(){\n    int x=0,f=0;char ch;\n    while(!isdigit(ch=getchar()))if(ch=='-') f=1;\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar();\n    return f?-x:x;\n}\nqueue <int> q;\nint v[M<<1],Head[N],Next[M<<1],dis[N],ans[N];\nbool vis[N];\nint n,m,x,y,tot;\n\ninline void Addedge(){\n    v[++tot]=y,Next[tot]=Head[x],Head[x]=tot;v[++tot]=x,Next[tot]=Head[y],Head[y]=tot;\n}\n\nvoid SPFA(int u){\n    memset(dis,INF,sizeof(dis));\n    ans[u]=1;dis[u]=0;vis[u]=1;q.push(u);\n    while(!q.empty()){\n        int x=q.front();q.pop();vis[x]=0;\n        for(register int j=Head[x];j;j=Next[j]){\n            int y=v[j];\n            if(dis[y]>dis[x]+1){\n                dis[y]=dis[x]+1,ans[y]=ans[x];\n                if(!vis[y])vis[y]=1,q.push(y);\n            }\n            else if(dis[y]==dis[x]+1) ans[y]=(ans[x]+ans[y])%MOD;\n        }\n    }\n}\n\nint main(){\n    n=read(),m=read();\n    for(register int i=1;i<=m;++i) x=read(),y=read(),Addedge();\n    SPFA(1);\n    for(register int i=1;i<=n;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n\u7136\u800c\u4e0a\u9762\u7684spfa\u65b9\u6cd5\u5176\u5b9e**\u4ec5\u9002\u7528\u4e8e\u672c\u9898**\uff0c\u5982\u679c\u4f60\u628a\u8fd9\u4e2a\u4ee3\u7801\u642c\u5230[P1608](https://www.luogu.org/problemnew/show/P1608)\u5c31\u4f1aWA\u6389\u4e86\uff0c\u5bf9\u6bd4\u4e24\u9898\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u8fb9\u6743\u7684\u6709\u65e0\uff0cP1608\u4e2dspfa\u4e00\u4e2a\u8282\u70b9\u7d2f\u8ba1\u65b9\u6848\u540e\u5bf9\u5468\u56f4\u8282\u70b9\u5982\u679c\u4e5f\u4ea7\u751f\u5f71\u54cd\uff0c\u5b83\u51fa\u961f\u540e\u5982\u679c\u54ea\u5929\u518d\u88ab\u7d2f\u8ba1\u4e0a\u5c31\u4e0d\u4f1a\u66f4\u65b0\u5468\u56f4\u8282\u70b9\u4e86\u3002\u6bd4\u5982\uff1a\n```cpp\nn=5,m=5\n\u8fb9(x-->y\u5355\u5411,\u6743w):\n1 2 1\n2 3 1\n3 4 1\n1 4 3\n4 5 2\n```\n\u6240\u4ee5spfa\u7684\u7d2f\u8ba1(\u4ece1\u5230n)\u5e94\u8be5\u662f\u957f\u8fd9\u6837\u7684\uff1a\n```cpp\nvoid SPFA(int u){\n    memset(dis,INF,sizeof(dis));\n    ans[u]=1;dis[u]=0;vis[u]=1;q.push(u);\n    while(!q.empty()){\n        int x=q.front();q.pop();vis[x]=0;\n        if(x==n) continue;//\u4e0d\u80fd\u628a\u7b54\u6848\u6e05\u96f6\u6389\n        for(register int j=Head[x];j;j=Next[j]){\n            int y=v[j];\n            if(dis[y]>dis[x]+w[j]) dis[y]=dis[x]+w[j],ans[y]=ans[x];\n            else if(dis[y]==dis[x]+w[j]) ans[y]+=ans[x];\n            if(!vis[y]&&ans[y])vis[y]=1,q.push(y);//\u88ab\u66f4\u65b0\u65b9\u6848\u5c31\u8981\u518d\u5165\u961f\u3002\n        }\n        ans[x]=0;//\u9632\u6b62\u2191\u4e0a\u9762\u5165\u961f\u5e26\u6765\u91cd\u590d\u7d2f\u8ba1\uff0c\u8fd9\u91cc\u6e05\u96f6\u3002\n    }\n}\n```\n\u5982\u679c\u50cfdij\u4e00\u6837\u6bcf\u6b21\u53d6\u5806\u91cc\u8ddd\u79bb\u6700\u5c0f\u7684\u5f00\u59cb\u677e\u5f1b\uff0c\u4e0d\u4f1a\u6709\u50cfspfa\u4e00\u6837\u677e\u5f1b\u6389\u7684\u70b9\u4e0d\u5728\u961f\u91cc\uff0c\u800c\u662f\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u65b9\u6848\u90fd\u88ab\u7d2f\u8ba1\uff08\u56e0\u4e3a\u677e\u5f1b\u6389\u7684\u70b9\u5728\u5806\u91cc\u8fd8\u51fa\u4e0d\u6765\uff09\u3002\u672c\u9898\u4e2d\u7531\u4e8e\u6ca1\u6709\u8fb9\u6743\uff0cspfa\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aBFS\uff0c\u6216\u8005\u66f4\u5927\u80c6\u7684\u8bf4\uff0c\u672c\u9898\u4e2dspfa\u548cdijkstra**\u8fc7\u7a0b\u662f\u51e0\u4e4e\u4e00\u6837\u7684**\uff0c\u90fd\u662f\u628a\u677e\u5f1b\u70b9\u538b\u5165\u961f\u4e2d\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4e86\u961f\u9996\u70b9dis\u503c\u6700\u5c0f\uff0c\u6240\u4ee5\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u4e0d\u8fc7dijkstra\u8fd8\u8981\u82b1\u65f6\u95f4\u5904\u7406\u4f18\u5148\u961f\u5217\uff0c\u6240\u4ee5dij\u5728\u672c\u9898\u4e2d\u4e00\u822c\u6765\u8bf4\u6bd4spfa\u6162\u4e00\u4e9b\uff08\u4e0d\u670d\u7684\u4e0d\u8981\u603c\u6211\uff09\u3002\n\n~~\u7a81\u7136\u611f\u89c9\u81ea\u5df1\u626f\u4e86\u534a\u5929\uff0c\u4ec0\u4e48\u5b9e\u8d28\u6027\u7684\u4e1c\u897f\u6ca1\u600e\u4e48\u8bf4~~",
        "postTime": 1534579570,
        "uid": 28913,
        "name": "Utsuji_rissh\u016b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u6700\u77ed\u8def\u8ba1\u6570"
    },
    {
        "content": " \u6b64\u9898\u53ef\u4ee5\u5148\u7528SPFA\u5904\u7406\u56fe\u7684\u6700\u77ed\u8def\u3002\u4e4b\u540e\u518d\u641c\u7d22\u5e76\u8bb0\u5f55\u6700\u77ed\u8def\u7684\u4e2a\u6570\uff08\u8bb0\n\u5f97\u53d6\u6a21\uff09\uff01\u4e0d\u7528\u601d\u8003\u662f\u5426\u6709\u91cd\u8fb9\u3002\n\n------------\n    program project1;\n    var\n       l,v:array[0..2000005]of longint;\n       r,dis,ans:array[0..1000005]of longint;\n       n,m,i,x,t:longint;\n    procedure SPFA;\n    var up,down,q,p:longint;\n        tf:array[0..1000005]of boolean;\n        t:array[0..1000005]of longint;\n    begin\n      fillchar(tf,sizeof(tf),false);\n      fillchar(t,sizeof(t),0);\n      dis[1]:=0;\n      tf[1]:=true;\n      up:=0;\n      down:=1;\n      t[down]:=1;\n      repeat\n        inc(up);\n        q:=t[up];\n        p:=r[q];\n        while p<>0 do begin\n          if dis[v[p]]>dis[q]+1 then begin\n            dis[v[p]]:=dis[q]+1;\n            if tf[v[p]]=false then begin\n              inc(down);\n              t[down]:=v[p];\n              tf[v[p]]:=true;\n            end;\n          end;\n          p:=l[p];\n        end;\n        tf[q]:=false;\n      until up>=down;\n    end;\n    procedure sc;\n    var up,down,q,p:longint;\n        tf:array[0..1000005]of boolean;\n        t:array[0..1000005]of longint;\n    begin\n      fillchar(tf,sizeof(tf),false);\n      fillchar(t,sizeof(t),0);\n      up:=0;\n      down:=1;\n      t[down]:=1;\n      tf[1]:=true;\n      ans[1]:=1;\n      repeat\n        inc(up);\n        q:=t[up];\n        p:=r[q];\n        while p<>0 do begin\n          if dis[v[p]]=dis[q]+1 then begin\n            ans[v[p]]:=(ans[v[p]]+ans[q]) mod 100003;\n            if tf[v[p]]=false then begin\n              inc(down);\n              t[down]:=v[p];\n              tf[v[p]]:=true;\n            end;\n          end;\n          p:=l[p];\n        end;\n        tf[q]:=false;\n      until up>=down;\n    end;\n\n    begin\n      readln(n,m);\n      fillchar(l,sizeof(l),0);\n      fillchar(r,sizeof(r),0);\n      fillchar(v,sizeof(v),0);\n      fillchar(ans,sizeof(ans),0);\n      fillchar(dis,sizeof(dis),$7f);\n      for i:=1 to m do begin\n        t:=2*i;                         //\u6ce8\u610f\u662f\u65e0\u5411\u56fe\n        readln(x,v[t]); \n        l[t]:=r[x];\n        r[x]:=t;\n        v[t-1]:=x;\n        l[t-1]:=r[v[t]];\n        r[v[t]]:=t-1;\n      end;\n      SPFA;\n      sc;\n      for i:=1 to n do writeln(ans[i]);\n      readln;\n    end.\n",
        "postTime": 1528030571,
        "uid": 24425,
        "name": "fysbb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u4e3a\u4f55dalao\u4eec\u90fd\u5728\u7528spfa\uff1f\n\n\u6c42\u6700\u77ed\u8def\uff0c\u5f53\u8fb9\u6743\u4e0d\u540c\u65f6\uff0c\u53ef\u4ee5\u7528dijkstra\u6216spfa\n\n\u7136\u800c\uff0c\u8fb9\u6743\u76f8\u540c\u65f6\uff0c\u5c3d\u7ba1\u524d\u4e24\u8005\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u5206\u522b\u4e3aO(nlogn)\u548cO(kn)\uff0c\u8fd8\u6709\u4e00\u79cd\u7a33\u5b9a\u7684O(n)\u7b97\u6cd5\u2014\u2014bfs\uff01\n\n\u56e0\u4e3abfs\u7684\u7ed3\u70b9\u6269\u5c55\u987a\u5e8f\u65f6\u5206\u5c42\u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u961f\u5217\u4e2d\u5e8f\u5217\u5fc5\u7136\u662f\u8ddd\u79bb\u5355\u8c03\u4e0d\u4e0b\u964d\u7684\u3002\u6545\u7528\u524d\u9762\u7684\u70b9\u53bb\u7b97\u540e\u9762\u7684\u70b9\uff0c\u5f97\u5230\u7684\u5fc5\u7136\u662f\u6700\u77ed\u8def\n\n\u6838\u5fc3\u662f\u4e24\u4e2a\u6807\u8bb0\uff1avis\u548cinq\n\n\u539f\u5219\uff1a\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u6269\u5c55\u6bd4\u81ea\u5df1\u8ddd\u79bb\u8fdc1\u7684\u7ed3\u70b9\uff1b\u961f\u5217\u53ea\u80fd\u8fdb\u4e00\u6b21\uff0c\u4f46\u6269\u5c55\u65f6\u53ef\u4ee5\u591a\u6b21\u6539\u53d8cnt\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define N 1000003\n#define M 2000003\n#define INF 0x3f3f3f3f\n#define ha 100003\n#define qsize 3000002\nstruct nodet{\n    int head,cnt,dist;bool vis,inq;\n    nodet(){head=-1;cnt=0;dist=INF;vis=inq=0;    }\n}node[N];\nstruct edget{\n    int u,v,pre;\n    edget(){pre=-1;    }\n}edge[M+M];\nint cnt=0,n,m;\nvoid addedge(int u,int v){\n    cnt++;\n    edge[cnt].u=u;\n    edge[cnt].v=v;\n    edge[cnt].pre=node[u].head;\n    node[u].head=cnt;\n}\nstruct queuet{\n    int data[qsize];\n    int h,t;\n    queuet(){h=t=0;    }\n    bool is_empty(){return h==t;    }\n    bool is_full(){return (t+1)%qsize==h;    }\n    bool push(int x){\n        if (is_full()) return false;\n        data[t]=x;t=(t+1)%qsize;return true;\n    }\n    bool pop(){\n        if (is_empty()) return false;\n        h=(h+1)%qsize;return true;\n    }\n    int top(){return data[h];    }\n}q;\nvoid bfs(){\n    node[1].dist=0;node[1].cnt=1;\n    q.push(1);\n    int expd,now;\n    while (!q.is_empty()){\n        expd=q.top();q.pop();\n        node[expd].vis=1;\n        for (int i=node[expd].head;i!=-1;i=edge[i].pre){\n            now=edge[i].v;\n            if (!node[now].vis && node[now].dist!=node[expd].dist){\n                if (!node[now].inq) q.push(now),node[now].inq=1;\n                node[now].dist=node[expd].dist+1;\n                node[now].cnt=(node[expd].cnt+node[now].cnt)%ha;\n            }            \n        }        \n    }    \n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1,u,v;i<=m;i++){\n        scanf(\"%d%d\",&u,&v);\n        addedge(u,v);\n        addedge(v,u);\n    }\n    bfs();    \n    for (int i=1;i<=n;i++)\n    printf(\"%d\\n\",node[i].cnt);\n    return 0;\n}\n```",
        "postTime": 1510017973,
        "uid": 29176,
        "name": "2\u5230\u6b63\u65e0\u7a77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u601d\u8003\u4e00\u4e0b\u5bb9\u6613\u53d1\u73b0\uff0c\u5230\u67d0\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u7684\u65b9\u6848=\u4e0a\u4e00\u5c42\u6700\u77ed\u65b9\u6848\\*\u5230\u5f53\u524d\u70b9\u8def\u7684\u6761\u6570\n\n\u52a0\u5230spfa\u91cc\u5c31\u662f\uff1a\u5982\u679c\u6709\u66f4\u77ed\u8def\uff0c\u5c31\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u65b9\u6848\u4e3a\u66f4\u77ed\u8def\u7684\u65b9\u6848\u6570\uff0c\u5982\u679c\u6709\u76f8\u540c\u957f\u5ea6\u6700\u77ed\u8def\uff0c\u5c31\u5c06\u4ed6\u4eec\u7684\u65b9\u6848\u6570\u76f8\u52a0\n\n\u8fd9\u5c31\u662f\u57fa\u672c\u601d\u8def\n\n\u5bf9\u4e8e\u65e0\u6743\u56fe\u6765\u8bf4\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5982\u679c\u662f\u5e26\u6743\u56fe\u7684\u8bdd\u5c31\u52a0\u4e0a\u6743\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u7a0d\u5fae\u6539\u4e00\u4e0b\u4e0bspfa\u90e8\u5206\u548c\u8f93\u5165\u90e8\u5206\u5c31\u597d\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nqueue <int> que;\nint n,m,aa,bb,vis[1000010],val[1000010],ans[1000010];\nvector <int> edge[1000010];\nvoid spfa()\n{\n    que.push(1);\n    vis[1]=1;\n    val[1]=0;\n    ans[1]=1;//1\u5230\u672c\u8eab\u7684\u65b9\u6848\u53ea\u6709\u4e00\u79cd \n    while(!que.empty())\n    {\n        int nowp=que.front();\n        que.pop();\n        //\u56e0\u4e3a\u65e0\u8d1f\u8fb9\u6240\u4ee5\u4e0d\u9700\u8981\u5c06\u5f53\u524d\u70b9\u7684vis\u6539\u56de0 \n        for(int i=0;i<edge[nowp].size();i++)\n        {\n            int nowe=edge[nowp][i];\n            if(val[nowe]>val[nowp]+1)//\u5982\u679c\u53d1\u73b0\u66f4\u77ed\u8def\u5219\u66f4\u65b0\u65b9\u6848\u6570 \n            {\n                val[nowe]=val[nowp]+1;\n                ans[nowe]=ans[nowp];\n            } \n            else if(val[nowe]==val[nowp]+1)//\u5982\u679c\u53d1\u73b0\u53e6\u5916\u7684\u5230\u5f53\u524d\u70b9\u7684\u6700\u77ed\u8def\u5c31\u5c06\u65b0\u7684\u6700\u77ed\u8def\u7684\u65b9\u6848\u6570\u52a0\u5230\u5f53\u524d\u70b9\u7684\u6700\u77ed\u8def\u65b9\u6848\u6570\u4e2d \n            {\n                ans[nowe]+=ans[nowp];\n                ans[nowe]%=100003;//%\u4e00%\uff0c\u5355\u8f66\u53d8\u6469\u6258 \n            }\n            if(vis[nowe]==0)\n            {\n                que.push(nowe);\n                vis[nowe]=1;\n            }\n        } \n    }\n} \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        val[i]=0x7fffffff;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&aa,&bb);//\u53cc\u5411\u8fb9 \n        edge[aa].push_back(bb);\n        edge[bb].push_back(aa);\n    }\n    spfa();\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1508840105,
        "uid": 27166,
        "name": "hxn2228",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "#\u5728\u7ec3\u5355\u6e90\u6700\u77ed\u8def\uff0c\u7a81\u7136\u5199\u5230\u8fd9\u9053\u9898\uff0c\u518d\u52a0\u4e0a\u77a5\u89c1\u8ba8\u8bba\uff0c\u60f3\u90fd\u6ca1\u60f3\u76f4\u63a5\u6572SPFA\u3002\n\n##\u4f46\u662f\u4e4b\u540e\u4e00\u60f3\uff0c\u88f8\u7684\u6700\u77ed\u8def\u867d\u7136\u53ef\u4ee5\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\uff0c\u4f46\u4ed6\u53ea\u80fd\u8bb0\u5f55\u4e00\u6761\uff0c\u4e0e\u9898\u610f\u8981\u6c42\u4e0d\u7b26\u3002\u4e4b\u540e\u60f3\u53ef\u4ee5\u5148SPFA\u5904\u7406\u8d77\u70b9\u5230\u5404\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e4b\u540e\u518d\u7528BFS\u904d\u5386\u6574\u4e2a\u56fe\u3002\u4f46\u6700\u540e\u60f3\u5230\u65e2\u7136\u6bcf\u6761\u8fb9\u6743\u503c\u4e3a1\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528BFS\uff0c\u7b2c\u4e00\u6b21\u5230\u67d0\u4e2a\u70b9\u7684\u8def\u5f84\u5373\u662f\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u6837\u540c\u65f6\u4e5f\u5f97\u5230\u4e86\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n###\u5177\u4f53\u5b9e\u73b0\uff1a\u4ece\u8d77\u70b9\u51fa\u53d1\uff0cBFS\u904d\u5386\uff0c\u6bcf\u5230\u4e00\u4e2a\u70b9\uff0c\u82e5\u4e4b\u524d\u672a\u8bbf\u95ee\u8fc7\uff0c\u5c31\u6807\u8bb0\uff0c\u5f53\u524d\u5230\u5b83\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u5373\u4e3a\u8be5\u8def\u5f84\u4e0a\u4ed6\u7684\u7236\u8282\u70b9\u7684\u6761\u6570\uff1b\u5426\u5219\u6bd4\u8f83\u4ece\u5f53\u524d\u8def\u5f84\u8d70\u6240\u5f97\u5230\u7684\u4e0e\u8d77\u70b9\u7684\u8ddd\u79bb\u548c\u6700\u77ed\u8def\u5f84\u5927\u5c0f\uff0c\uff08\u6b64\u65f6\u6700\u77ed\u8def\u5f84\u5927\u5c0f\u5df2\u77e5\uff0c\u89c1\u4e0a\u6587\uff09\u82e5\u76f8\u7b49\uff0c\u5b83\u7684\u6700\u77ed\u8def\u5f84\u6761\u6570\u52a0\u4e0a\u8be5\u8def\u5f84\u4e0a\u5b83\u7236\u8282\u70b9\u8def\u5f84\u6570 \u3002\u8d77\u70b9\u5230\u67d0\u4e00\u70b9\u6700\u77ed\u8def\u8def\u5f84\u6761\u6570\u7b49\u4e8e\u8d77\u70b9\u5230\u5b83\u6240\u6709\u7236\u8282\u70b9\u8def\u5f84\u6761\u6570\u7684\u548c\u3002\u8bb2\u7684\u6709\u4e9b\u8d58\u4f59\uff0c\u4ee3\u7801\u601d\u8def\u6bd4\u8f83\u6e05\u6670\uff0c\u53ef\u4ee5\u53c2\u8003\uff0c\u5982\u679c\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u753b\u4e00\u4e0b\u6837\u4f8b\uff1a \u4ece\u8d77\u70b9\u5f00\u59cb\u8d70\uff0c\u6bcf\u5230\u4e00\u4e2a\u70b9\u5c31\u6807\u8bb0\uff0c\u5e76\u6807\u4e0a\u5b83\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u548c\u5b83\u7684\u8def\u5f84\u6570\uff0c\u76f4\u5230\u904d\u5386\u5168\u56fe\u3002\n\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define Mod 100003\n#define maxn 1000005\n#define maxm 2000005\n#define maxx 2000005\nusing namespace std;\nint n,m,head[maxn],k=0,flag[maxn],d[maxn];//head[i]\u5b58\u7684\u662f\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u51fa\u53d1\u7684\u7b2c\u4e00\u6761\u8fb9\uff0cflag[i]\u8bb0\u5f55\u8d77\u70b9\u5230i\u6700\u77ed\u8def\u5f84\u6761\u6570\uff0cd[i]\u5b58\u7684\u662f\u8d77\u70b9\u5230i\u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\ninline void read(int &x){//\u6700\u7b80\u7ec3\u7684\u5feb\u8bfb\uff0c\u56e0\u4e3a\u8bfb\u5165\u4e0d\u5b58\u5728\u8d1f\u6570\uff0c\u6240\u4ee5\u4e0d\u5fc5\u7279\u5224\n    char c;\n    while(!isdigit(c=getchar()));//isdigit\u5224\u65ad\u6240\u8bfb\u662f\u5426\u4e3a\u6570\u5b57\n    x=c-'0';\n    while(isdigit(c=getchar()))\n      x=x*10+c-'0';\n}\nstruct Edge{//\u524d\u5411\u661f\u5b58\u56fe\uff08\u82e5\u6ca1\u63a5\u89e6\u8fc7\uff0c\u81ea\u884c\u767e\u5ea6\uff09\n    int to,next;\n}e[maxm<<1];//\u65e0\u5411\u8fb9\uff0c\u6bcf\u6761\u8fb9\u6b63\u53cd\u5b58\u4e24\u904d\ninline void add_edge(int x,int y){//\u52a0\u8fb9\n    e[++k].to=y;\n    e[k].next=head[x];\n    head[x]=k;\n}\nqueue<int>q;//\u5b58\u7684\u662f\u8282\u70b9\nint main(){\n    read(n);read(m);\n    int x,y;\n    for(int i=1;i<=m;i++){//\u5efa\u56fe\n        read(x);read(y);\n        add_edge(x,y);\n        add_edge(y,x);\n    }\n    for(int i=1;i<=n;i++)//\u521d\u59cb\u5316\n      d[i]=maxx;\n    d[1]=0;\n    q.push(1);//\u5c06\u8d77\u70b9\u538b\u5165\u961f\u5217\n    flag[1]=1;//\u8d77\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8def\u4e3a1\uff0c\u89c1\u6837\u4f8b\n    while(!q.empty()){//\u7b80\u5355\u7684BFS\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=e[i].next){\n            int v=e[i].to;\n            if(d[v]<d[u]) continue;//\u9632\u6b62\u8fd9\u4e2a\u70b9\u4e0b\u4e00\u6b21\u904d\u5386\u5b83\u7684\u7236\u8282\u70b9\uff0c\u53d1\u751f\u6b7b\u5faa\u73af\n            if(!flag[v]){//\u5982\u679c\u672a\u6807\u8bb0\u8fc7\n                flag[v]=flag[u];//\u5904\u7406\u8def\u5f84\u6761\u6570\n                d[v]=d[u]+1;//\u5904\u7406\u6700\u77ed\u8def\n                q.push(v);//\u538b\u5165\u961f\u5217\n            }\n            else{\n                if(d[u]+1==d[v])//\u5224\u65ad\u662f\u5426\u4e3a\u6700\u77ed\u8def\u5f84\n                  flag[v]+=flag[u];\n                  flag[v]%=Mod;//\u8bb0\u5f97\u8981%\uff0c\u7b2c\u4e00\u6b21\u4ea4\u6ca1%\uff0cwa\u4e86\u4e00\u4e2a\uff0cT\u4e86\u4e00\u4e2a\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1aT\uff09\n            }\n//            for(int i=1;i<=n;i++)\n//                  cout<<flag[i]<<\" \";cout<<\"\\n\";//\u867d\u4e0d\u662f\u6700\u540e\u7684\u7ed3\u679c\uff0c\u4f46\u6b64\u8f93\u51fa\u5bf9\u7406\u89e3\u9898\u610f\u5341\u5206\u91cd\u8981\n        }\n    }\n    for(int i=1;i<=n;i++)\n      cout<<flag[i]<<\"\\n\";\n    return 0;\n}\n```",
        "postTime": 1506339442,
        "uid": 43195,
        "name": "jiezi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "#Pascal\u7684\u9898\u89e3\u8fd8\u662f\u5982\u6b64\u7684\u5c11\uff0c\u6211\u6765\u8865\u4e00\u53d1#\n\n\u65e2\u7136\u65e0\u6743\uff0cBFS\u5e94\u8be5\u6bd4\u8f83\u5408\u9002\u5427\u3002\n\nBFS\u6c42\u65e0\u6743\u56fe\u4e2d\u5355\u6e90\u6700\u77ed\u8def\u5e94\u8be5\u5927\u5bb6\u90fd\u4f1a\u5427\uff0c\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u4e00\u627e\u5230\u5c31\u662f\u6700\u77ed\u7684\uff08\u65e0\u6743\uff09\u3002\u90a3\u4e48\u8ba1\u6570\u5176\u5b9e\u5c31\u52a0\u4e00\u4e2a\u6570\u7ec4\u52a0\u51e0\u53e5\u8bdd\u5c31\u884c\u4e86\u3002\n\n\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u7b2c\u4e00\u6b21\u5230\u8fbe\u5f53\u524d\u70b9y\uff0c\u8bb0\u5f55\u6700\u77ed\u8def\uff0c\u5047\u8bbe\u662f\u4ecex\u70b9\u5230\u8fbey\u7684\uff0c\u5219ans[y]=ans[x]\uff0c\u7136\u540e\u5165\u961f\u3002\n\n2. \u4e0d\u662f\u7b2c\u4e00\u6b21\u3002\u5224\u65ad\u5f53\u524d\u662f\u5426\u4e3a\u6700\u77ed\u8def\uff0c\u5982\u679c\u662f\uff0c\u5219ans[y]+=ans[x]\uff0c\u4e0d\u9700\u8981\u5165\u961f\uff0c\u6ce8\u610f\u53d6\u6a21\u3002\n\n\u4f46\u662f\u70b9\u6bd4\u8f83\u591a\uff08\u597d\u5427\u5176\u5b9e\u662f\u5f88\u591a\uff09\uff0c\u600e\u4e48\u529e\u5462\uff1f\u7528\u90bb\u63a5\u8868\u5b58\u50a8\uff0c\u6570\u7ec4\u6a21\u62df\u94fe\u8868\uff08\u4e00\u7ef4\u6570\u7ec4\uff09\uff0c\u8bb0\u5f55\u4e00\u4e2a\u70b9x\u4e0e\u4ed6\u76f8\u90bb\u7684\u6240\u6709\u70b9\uff0c\u9700\u8981head[x]\uff08\u5934\uff09\uff0cnext[y]\uff08\u4e0b\u4e00\u6761\u8fb9\uff09\u5c31\u80fd\u5b58\u4e0b\u6574\u4e2a\u56fe\u3002\u6ce8\u610f\u65e0\u5411\u56fe\uff0c\u6570\u7ec4\u8303\u56f4\u5e94\u8be5\u662f2e\u3002\n\n```cpp\nvar\n  n,m,e,i,j,x,y:longint; //e\u8868\u793a\u603b\u8fb9\u6570\uff0c\u6700\u540e\u5e94\u8be5\u662f2*m\n  head,ans,dis:array[0..2000001]of longint; //\u5206\u522b\u8868\u793a\u94fe\u8868\u7684\u5934\uff0c\u7b54\u6848\u548c\u6700\u77ed\u8def\n  a,next,q:array[0..5000001]of longint; //\u5206\u522b\u8868\u793a\u90bb\u63a5\u8868\uff0c\u4e0b\u4e00\u6761\u8fb9\uff0c\u961f\u5217\n  b:array[0..2000001]of boolean; //\u8868\u793a\u6709\u6ca1\u6709\u8bbf\u95ee\u8fc7\nprocedure add(x,y:longint);\nbegin\n  inc(e); a[e]:=y; next[e]:=head[x]; head[x]:=e; //\u52a0\u5165(x,y)\u8fd9\u6761\u6709\u5411\u8fb9\nend;\nprocedure bfs();\nvar\n  h,t,i,x,y:longint;\nbegin\n  fillchar(b,sizeof(b),1);\n  fillchar(ans,sizeof(ans),0);\n  h:=0; t:=1; q[1]:=1; ans[1]:=1; dis[0]:=0; b[1]:=false; //\u8d77\u70b9\u5165\u961f\n  while h<t do \n    begin\n      inc(h); x:=q[h]; i:=head[x]; //\u4ece\u5934\u5f00\u59cb\n      while i>0 do \n        begin\n          y:=a[i];\n          if b[y] then //\u7b2c\u4e00\u79cd\u60c5\u51b5\n            begin\n              ans[y]:=ans[x];\n              dis[y]:=dis[x]+1;\n              inc(t); q[t]:=y;\n              b[y]:=false;\n            end\n          else //\u7b2c\u4e8c\u79cd\u60c5\u51b5\n            if dis[y]=dis[x]+1 then ans[y]:=(ans[y]+ans[x]) mod 100003;\n          i:=next[i]; //\u4e0b\u4e00\u6761\u8fb9\n        end;\n    end;\nend;\nbegin\n  readln(n,m); e:=0;\n  fillchar(head,sizeof(head),0);\n  for i:=1 to m do \n    begin\n      readln(x,y);\n      add(x,y);\n      add(y,x);//\u65e0\u5411\u56fe\n    end;\n  bfs();\n  for i:=1 to n do writeln(ans[i]);\nend.\n\n```",
        "postTime": 1504151950,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u5148\u8dd1\u4e00\u4e2a\u6700\u77ed\u8def\uff0c\u7136\u540e\u5728\u7528\u4e00\u4e2a\u7c7b\u4f3c\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u4e1c\u897f\u641c\u51fa\u6700\u77ed\u8def\u6761\u6570\n\n\u5f00\u4e00\u4e2adis\u6570\u7ec4\u5b58\u6700\u77ed\u8def\u957f\u5ea6\uff0c\u5f00\u4e00\u4e2aans\u6570\u7ec4\u5b58\u7b54\u6848\n\n\u641c\u5230\u4e00\u4e2a\u8282\u70b9v\uff0c\u5bfb\u627e\u5b83\u80fd\u5230\u8fbe\u7684\u6bcf\u4e2a\u8282\u70b9u\n\n\u5982\u679c$dis[u]+1==dis[v]$\uff0c\u8bf4\u660e\u7528\u6700\u77ed\u8def\u7684\u8d70\u6cd5\u8d70\u5230u\u540e\u76f4\u63a5\u8d70\u5230v\u90fd\u662f1\u5230v\u7684\u4e00\u6761\u5408\u6cd5\u6700\u77ed\u8def\n\n\u4e8e\u662f\u4e4ev\u7684\u7b54\u6848=v\u7684\u7b54\u6848+u\u7684\u7b54\u6848\n\n#\u5199\u8bb0\u5fc6\u5316\u7684\u65f6\u5019\u4e0d\u8981\u7b97\u8fc7\u4e86\u8fd8\u9012\u5f52\u8fdb\u53bb\u5728\u8fd4\u56de\uff0c\u90a3\u6837\u4f1aTLE\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nconst int MOD=1e5+3;\nstruct edge {\n    int to,nxt;\n} E[5000010];\nint n,m,lst[1000010]= {},cnt,dis[1000010],ans[1000010]= {0,1};\ninline void add(int u,int v) {\n    E[++cnt]=(edge) {\n        v,lst[u]\n    };\n    lst[u]=cnt;\n}\ninline void Spfa(int s) {\n    for(int i=1; i<=n; i++) dis[i]=1000000000;\n    dis[s]=0;\n    std::queue<int>q;\n    q.push(s);\n    while(!q.empty()) {\n        int u=q.front();\n        q.pop();\n        for(int k=lst[u]; k; k=E[k].nxt) {\n            int v=E[k].to;\n            if(dis[u]+1<dis[v]) {\n                dis[v]=dis[u]+1;\n                q.push(v);\n            }\n        }\n    }\n}\ninline int Calc(int v) {\n    for(int k=lst[v]; k; k=E[k].nxt) {\n        int u=E[k].to;\n        if(dis[u]+1==dis[v]) {\n            if(!ans[u]) ans[v]=(ans[v]+Calc(u))%MOD;\n            else ans[v]=(ans[v]+ans[u])%MOD;\n        }\n    }\n    return ans[v];\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=m; i++) {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);\n        add(v,u);\n    }\n    Spfa(1);\n    for(int i=1; i<=n; i++) {\n        if(!ans[i]) printf(\"%d\\n\",Calc(i));\n        else printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1503819790,
        "uid": 24397,
        "name": "__\u4e16\u754c\u7b2c\u4e00\u5f31__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "/\\*\n[\u4ece1\u5230v\u7684\u65b9\u6848\u6570] \u662f [\u4ece1\u53f7\u70b9\u5230\u8fbev\u5468\u56f4\u6240\u6709\u70b9\u7684\u65b9\u6848\u6570] \u4e4b\u548c\n\n\u6240\u4ee5\u6211\u4eec\u904d\u5386v\u5468\u56f4\u6240\u6709\u70b9\n\n    for(j = 1; j <= [v\u5468\u56f4\u70b9\u7684\u4e2a\u6570]; i++) \n\n        if(i\u88ab\u8bbf\u95ee\u8fc7)\n\n[\u4ece1\u5230v\u7684\u7684\u65b9\u6848\u6570] \u52a0\u4e0a [\u4ece1\u5230j\u7684\u7684\u65b9\u6848\u6570]\n\n        else\n\n\u5c06i\u53f7\u70b9\u52a0\u5230\u961f\u5217\u4e2d\n\n\\*/\n```cpp\n#include <stdio.h>\n#include <vector>\n#include <queue>\nusing namespace std;\nint re; char ge;\nint read()\n{    //\u8bfb\u5165\u4f18\u5316 \n    while((re = getchar()) < 48);\n    re -= 48;\n    while((ge = getchar()) >= 48)    re = (re << 3) + (re << 1) + ge - 48;\n    return re;\n}\nvector<int> a[2000001];\nvector<int>::iterator j; \nqueue<int>q;\nint n, m, i, x, y, len[1000001], ans[1000001] = {0, 1};\n//len[i]\u8868\u793a\u4ece\u8d77\u70b91\u5230\u70b9i\u7684\u6700\u77ed\u8def\u957f\u5ea6\uff0cans[i]\u8868\u793a\u5230\u5f53\u524d\u70b9\u6709\u591a\u5c11\u79cd\u8d70\u6cd5\nint main()\n{\n    n = read();\n    m = read();\n    for(i = 1; i <= m; i++)\n    {    //\u4e00\u6761\u65e0\u5411\u8fb9(x,y)\u53ef\u4ee5\u770b\u4f5c\u4e24\u6761\u6709\u5411\u8fb9(x,y)\u4e0e(y,x)\n        x = read();\n        y = read();\n        a[x].push_back(y);\n        if(x != 1) a[y].push_back(x); //\u6307\u54111\u7684\u8fb9\u662f\u6ca1\u6709\u610f\u4e49\u7684 \n    }\n    for(q.push(1); !q.empty(); q.pop())\n    {    //bfs\u904d\u5386\u6240\u6709\u70b9\n        i = q.front();\n        for(j = a[i].begin(); j != a[i].end(); j++)\n            if(len[*j]) {\n                 if(len[*j] == len[i] + 1)\n                    ans[*j] = (ans[*j] + ans[i]) % 100003;\n            }\n            else {\n                q.push(*j);\n                len[*j] = len[i] + 1;\n                ans[*j] = ans[i];\n            }\n    }\n    puts(\"1\");\n    for(i = 2; i <= n; i++)\n        printf(\"%d\\n\", ans[i]);\n    return 0;\n}\n```",
        "postTime": 1503460976,
        "uid": 8417,
        "name": "zfxfz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "dp.\n\u8fb9\u6743\u90fd\u662f1,\u76f4\u63a5bfs\u6c42\u6700\u77ed\u8def,\u6c42\u7684\u65f6\u5019\u53d1\u73b0:\u5bf9\u4e8e\u67d0\u4e2a\u70b9i,\u4e00\u6761\u5230\u8fbe\u4ed6\u7684\u6700\u77ed\u8def\u5f84,\u5fc5\u987b\u7ecf\u8fc7\u4e00\u4e2a\u548ci\u76f4\u63a5\u76f8\u8fde\u800c\u4e14\u6700\u77ed\u8def\u957f\u5ea6\u6bd4i\u5c0f1\u7684\u70b9x,\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u70b9x\u662f\u4ece\u51fa\u53d1\u70b9\u5230\u70b9i\u7684\u6700\u540e\u4e00\u7ad9.\u4e8e\u662f\u5c31\u65e0\u6bd4\u673a\u667a\u5730\u7528x\u6765\u66f4\u65b0i:\n\ndp[i]=\u2211dp[x].\n\n\u5176\u4e2ddp\u8868\u793a\u6700\u77ed\u8def\u6761\u6570,\u6ce8\u610f\u53d6\u6a21.\u8d34\u4ee3\u7801:\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define N 1001234\n#define M 2001234\n#define mod 100003\nusing namespace std;\nint n,m;\nint tot,to[M<<1],next[M<<1],head[N];\nint read()\n{\n    char c;\n    int re=0;\n    while(c>'9'||c<'0')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        re*=10;\n        re+=c-'0';\n        c=getchar();\n    }\n    return re;\n}\nvoid print(int k)\n{\n    char c[23];\n    int top=0;\n    if(k==0)\n    {\n        putchar('0');\n        putchar('\\n');\n        return;\n    }\n    while(k)\n    {\n        c[++top]=k%10+'0';\n        k/=10;\n    }\n    while(top)putchar(c[top]),top--;\n    putchar('\\n');\n    return;\n}\nvoid add(int x,int y)\n{\n    to[++tot]=y;\n    next[tot]=head[x];\n    head[x]=tot;\n}\nqueue<int> q;\nint f[N],dp[N];\nbool v[N];\nvoid bfs()\n{\n    memset(f,0xef,sizeof(f));\n    f[1]=0,v[1]=1,q.push(1),dp[1]=1;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=head[x];i;i=next[i])\n        {\n            if(!v[to[i]])\n            {\n                v[to[i]]=1;\n                f[to[i]]=f[x]+1;\n                q.push(to[i]);\n            }\n            else if(f[to[i]]==f[x]-1)dp[x]=(dp[x]+dp[to[i]])%mod;\n        }\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for(int x,y,i=1;i<=m;i++)\n    {\n        x=read(),y=read();\n        add(x,y);\n        add(y,x);\n    }\n    bfs();\n    for(int i=1;i<=n;i++)print(dp[i]);\n    return 0;\n} \n```",
        "postTime": 1492348601,
        "uid": 34668,
        "name": "EdwardFrog",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u7b97\u662f\u4e00\u9053\u6bd4\u8f83\u88f8\u7684\u6700\u77ed\u8def\uff0c\u4f7f\u7528SPFA\u5373\u53ef\n\n\u6ce8\u610f\u53d6\u6a21\n\n\u4f7f\u7528t\u6570\u7ec4\u4fdd\u5b58\u6bcf\u4e2a\u8282\u70b9\u6700\u77ed\u8def\u7684\u6570\u91cf\n\n\u6613\u77e5\u5f53\u67d0\u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\uff0c\u6b64\u65f6t[father]+1\u5373\u4e3a\u8be5\u8282\u70b9\u6700\u77ed\u8def\uff0c\u6b64\u540e\u82e5\u518d\u8bbf\u95ee\u5230\u8be5\u70b9\uff0c\u5fc5\u6709t[new\\_father]+1>=t[father]+1\n\n\u8fd9\u4e2a\u9898\u7528\u90bb\u63a5\u8868\u5b58\u50a8\uff0c\u4e3a\u4e86\u7701\u70b9\u7a7a\u95f4\uff0c\u6211\u7528\u7684\u6307\u9488\u5f0f\u94fe\u8868\uff0c\u6743\u5f53\u7ec3\u7ec3\u6307\u9488\u7684\u4f7f\u7528\uff0c\u60f3\u7528\u6307\u9488\u94fe\u8868\u7684\u53ef\u4ee5\u770b\u770b\n\n\u4ee3\u7801\u4e2ddebug\\_out\u5b50\u7a0b\u5e8f\u53ea\u662f\u8c03\u8bd5\u7528\u7684\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#define INF 0x3f3f3f3f\n#define M 100003\n#define N 1000010\nusing namespace std;\nstruct node{\n    node* next;\n    int data;\n    node(int x=INF){\n        data=x;\n        next=NULL;\n    }\n};\nnode p[N];\nint t[N];\nint n,m;\nvoid init(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        node *a=p[x].next;\n        p[x].next=new node(y);\n        p[x].next->next=a;\n        //========================\n        node *b=p[y].next;\n        p[y].next=new node(x);\n        p[y].next->next=b;\n    }\n}\nvoid suan(){\n    memset(t,0,sizeof(t));\n    p[1].data=0,t[1]=1;\n    queue<int> q;\n    q.push(1);\n    while(!q.empty()){\n        int x=q.front();\n        q.pop();\n        for(node* k=p[x].next;k!=NULL;k=k->next){\n            if(t[k->data]==0){\n                t[k->data]+=t[x];\n                p[k->data].data=p[x].data+1;\n                q.push(k->data);\n            }\n            else if(p[k->data].data==p[x].data+1){\n                t[k->data]+=t[x];\n                t[k->data]%=M;\n            }\n        }\n    }\n}\nvoid debug_out(){\n    for(int i=1;i<=n;i++){\n        printf(\"%d:\",i);\n        if(p[i].next!=NULL){\n            node* k=p[i].next;\n            while(true){\n                printf(\"%d \",k->data);\n                if(k->next==NULL)break;\n                k=k->next;\n            }\n        }\n        printf(\"\\n\");\n    }\n}\nint main(){\n    init();\n    suan();\n    //debug_out();\n    for(int i=1;i<=n;i++){\n        printf(\"%d\\n\",t[i]);\n    }\n    //system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1486347460,
        "uid": 12498,
        "name": "Invrise",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "\u60f3\u5fc5\u5927\u5bb6\u90fd\u4f1a\u6c42\u6700\u77ed\u8def\u5427\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u591a\u8bf4\u4e86\uff1b\n\n\u6211\u770b\u6709\u5f88\u591a\u4eba\u5728\u4e00\u987f\u5957\u6a21\u677f\uff0c\u4ec0\u4e48dijkstra,SPFA\u7b49\u7b49,\u8fd9\u662f\u53ef\u4ee5\u7684\uff1b\n\n\u4f46\u8eab\u4e3aOIer\uff0c\u601d\u8def\u8981\u5f00\u9614\u5bf9\u4e0d\u5bf9\uff1f\n\n\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528bfs\u6765\u6c42\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\u56e0\u4e3a\u5728\u6240\u6709\u8fb9\u8fb9\u6743\u4e3a1\u7684\u65f6\u5019\uff0c\u70b9\u7684\u6df1\u5ea6\u5c31\u662f\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff1b\n\n\u8fd9\u6837\u5728\u5199\u6cd5\u4e0a\u4fbf\u5c11\u4e86\u961f\u5217\u4f18\u5316SPFA\u4e2d\u9000\u6808\u65f6\u8fd8\u8981\u628a\u6807\u8bb0\u62b9\u9664\u8fd9\u4e00\u64cd\u4f5c\uff0c\u4f1a\u5927\u5927\u63d0\u9ad8\u7b97\u6cd5\u901f\u5ea6\uff1b\n\n\u5728bfs\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u8981\u4ece\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u7ee7\u627f\u6700\u77ed\u8def\uff0c\u8fd8\u8981\u7ee7\u627f\u65b9\u6848\u6570\uff1b\n\n\u6709\u4e2a\u7ec6\u8282\uff0c\u8d77\u70b9\u7684\u65b9\u6848\u6570\u8981\u8bb0\u4e3a1\uff1b\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define p 100003\nusing namespace std;\nstruct littlestar{\n\tint to;\n\tint nxt;\n}star[4000010];\nint head[4000010],cnt;\ninline void add(register int u,register int v)\n{\n\tstar[++cnt].to=v;\n\tstar[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint n,m;\nlong long g[1000010];\nint dis[1000010],vis[1000010];\nqueue<int> q;\nint st,ed;\ninline void bfs(register int s)\n{\n\tmemset(g,0,sizeof(g));\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(s);\n\tdis[s]=0;\n\tvis[s]=1;\n\tg[s]=1;\n\twhile(q.size()){\n\t\tregister int u=q.front();\n\t\tq.pop();\n\t\tfor(register int i=head[u];i;i=star[i].nxt){\n\t\t\tregister int v=star[i].to;\n\t\t\tif(dis[v]==dis[u]+1) g[v]=(g[u]+g[v])%p;\n\t\t\tif(vis[v]) continue;\n\t\t\tvis[v]=1;\n\t\t\tdis[v]=dis[u]+1;\n\t\t\tg[v]=g[u]%p;\n\t\t\tq.push(v);\n\t\t}\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(register int i=1;i<=m;i++){\n\t\tregister int u,v;\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tbfs(1);\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%lld\\n\",g[i]);\n\t}\n}\n```\n\n\n\u6709\u95f2\u65f6\u95f4\u7684\u8bfb\u8005\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u6269\u5c55\uff1a\n\n\u4e00\u5f20N*M\u7684\u65e0\u5411\u56fe\uff0c\u6709k\u4e2a\u7279\u6b8a\u7684\u70b9\uff1b\u4f60\u4ece1\u53f7\u70b9\u51fa\u53d1\uff0c\u5fc5\u987b\u505c\u7559\u4e14\u53ea\u505c\u7559\u5728\u4e00\u4e2a\u7279\u6b8a\u70b9\u4f11\u606f\u4e00\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u5230\u8fben\u53f7\u70b9\uff1b(\u53ef\u4ee5\u4e00\u6b21\u7ecf\u8fc7\u591a\u4e2a\u7279\u6b8a\u70b9\uff0c\u4f46\u5982\u679c\u5728\u4e0d\u540c\u7684\u7279\u6b8a\u70b9\u505c\u7559\u4f11\u606f\uff0c\u5c31\u7b97\u4e0d\u540c\u79cd\u65b9\u6848)\uff1b\u6c42\u7b26\u5408\u6761\u4ef6\u7684**\u6700\u77ed\u8def**\u7684**\u65b9\u6848\u6570**\uff1b\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u7a0d\u52a0\u601d\u8003\u5c31\u53ef\u4ee5\u5f97\u5230\u6b63\u89e3\uff1a\u5206\u522b\u4ece1\u53f7\u70b9\u548cn\u53f7\u70b9bfs()\u6c42\u51fa\u6bcf\u4e2a\u70b9\u52301\u53f7\u70b9\u548cn\u53f7\u70b9\u7684\u6700\u77ed\u8def\u53ca\u6700\u77ed\u8def\u4e0b\u7684\u65b9\u6848\u6570\uff1b\u6211\u4eec\u6839\u636e\u4e58\u6cd5\u539f\u7406\u628a\u6700\u77ed\u8def\u4e0b\u7684\u65b9\u6848\u6570\u4e58\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff1b\n\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n#define p 1000000007\nusing namespace std;\nstruct littlestar{\n\tint to;\n\tint nxt;\n}star[8000010];\nint head[8000010],cnt;\nvoid add(int u,int v)\n{\n\tstar[++cnt].to=v;\n\tstar[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint n,m;\nchar s[1010][1010];\nint query[1010][1010];\nlong long g[1000010];\nint water[1000010];\nint dis[1000010],vis[1000010];\nqueue<int> q;\nint st,ed;\nvoid bfs(int s)\n{\n\tmemset(g,0,sizeof(g));\n\tmemset(dis,0x3f,sizeof(dis));\n\tq.push(s);\n\tdis[s]=0;\n\tvis[s]=1;\n\tg[s]=1;\n\twhile(q.size()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=star[i].nxt){\n\t\t\tint v=star[i].to;\n\t\t\tif(dis[v]==dis[u]+1) g[v]=(g[u]+g[v])%p;\n\t\t\tif(vis[v]) continue;\n\t\t\tvis[v]=1;\n\t\t\tdis[v]=dis[u]+1;\n\t\t\tg[v]=g[u]%p;\n\t\t\tq.push(v);\n\t\t}\n\t}\n}\nint stdis[1000010];\nlong long stg[1000010];\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tint num=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tquery[i][j]=++num;\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s[i]+1);\n\t}\t\n\tfor(register int i=1;i<=n;i++){\n\t\tfor(register int j=1;j<=m;j++){\n\t\t\tif(s[i][j]=='@') st=query[i][j];\n\t\t\tif(s[i][j]=='#') ed=query[i][j];\n\t\t\tif(s[i][j]=='*') water[++water[0]]=query[i][j];\n\t\t\tif(s[i][j]=='X') continue;\n\t\t\tif(i-1>0&&s[i-1][j]!='X'){\n\t\t\t\tadd(query[i][j],query[i-1][j]);\n\t\t\t}\n\t\t\tif(j-1>0&&s[i][j-1]!='X'){\n\t\t\t\tadd(query[i][j],query[i][j-1]);\n\t\t\t}\n\t\t\tif(i+1<=n&&s[i+1][j]!='X'){\n\t\t\t\tadd(query[i][j],query[i+1][j]);\n\t\t\t}\n\t\t\tif(j+1<=m&&s[i][j+1]!='X'){\n\t\t\t\tadd(query[i][j],query[i][j+1]);\n\t\t\t}\n\t\t}\n\t}\n\tbfs(st);\n\tfor(int i=1;i<=num;i++) stdis[i]=dis[i],stg[i]=g[i];\n\tmemset(vis,0,sizeof(vis));\n\tbfs(ed);\n\tint ans=INT_MAX;\n\tfor(int i=1;i<=water[0];i++){\n\t\tans=min(ans,stdis[water[i]]+dis[water[i]]);\n\t}\n\tlong long fians=0;\n\tfor(int i=1;i<=water[0];i++){\n\t\tif(stdis[water[i]]+dis[water[i]]==ans){\n\t\t\tfians=(fians+stg[water[i]]*g[water[i]]%p)%p;\n\t\t}\n\t}\n\tif(ans==INT_MAX){\n\t\tcout<<\"-1 0\";\n\t\treturn 0;\n\t}\n\tcout<<ans<<\" \"<<fians;\n}\n/*\n3 3\n@..\n.*.\n*.#\n\n\n\n4 4\n@...\n....\n....\n...#\n\n*/\n```\n\n",
        "postTime": 1570189172,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1144 \u3010\u6700\u77ed\u8def\u8ba1\u6570\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P1144)\n\n>\u867d\u7136\u9898\u76ee\u53eb\u6700\u77ed\u8def\u8ba1\u6570\uff0c\u4f46\u662fTA\u53ef\u4ee5\u53ea\u7528\u5230\u6700\u77ed\u8def\u7684\u6982\u5ff5\u800c\u4e0d\u7528\u6700\u77ed\u8def\u7684\u7b97\u6cd5\u2026\u2026\n\n\u601d\u8003\u65b9\u5411\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u65e0\u6743\u56fe\uff0c\u6240\u4ee5\u4e00\u6761\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf\u5c31\u662f\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528BFS\u6765\u641e\u5b9a\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u5177\u4f53\u601d\u8def\n\u6211\u4eec\u6bcf\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u5c31\u548cta\u7684\u524d\u4e00\u4e2a\u7ed3\u70b9\u7684\u8ddd\u79bb\u6bd4\u8f83\uff0c\u8fd9\u91cc\u4f1a\u6709\u4e09\u79cd\u60c5\u51b5\uff1a(\u75311\u52302)  \n\n1. 2\u53f7\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7||time[1] + 1 < time[2]\uff1a\u6b64\u65f6\u6211\u4eec\u76f4\u63a5\u75281\u53f7\u70b9\u7684\u4fe1\u606f\u53bb\u66f4\u65b02\u5c31\u597d\u5566  \n2. time[1] + 1 = time[2] : \u8fd9\u4e2a\u6211\u4eec\u5c31\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u4e0bans\u5c31\u53ef\u4ee5\u5566  \n3. time[1] + 1 > time[2] :\u6b64\u65f6\u8fd9\u6761\u8def\u5f84\u6bd4\u4e4b\u524d\u7684\u67d0\u6761\u8def\u5f84\u8981\u957f\uff0c\u76f4\u63a5\u8df3\u8fc7\u5c31\u53ef\u4ee5\u5566  \n\n\u9644\u4e00\u4e0b\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n\nusing namespace std;\n\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nqueue<int> que;\n\nstruct edge{\n\tint next,to,v;\n}e[2000005];\n\nint n,m,cnt,x,now,y,tim[2000000],ans[2000000],d[2000000];\n\ninline int add(int x,int y)\n{\n\te[++cnt].to = y;\n\te[cnt].next = d[x];\n\td[x] = cnt;\n}\n\nint main()\n{\n\tn = read();\n\tm = read();\n\tfor(re int i = 1; i <= m; i++)\n\t{\n\t\tx = read(); y = read();\n\t\tadd(x,y); add(y,x);\n\t\t\n\t}\n\tque.push(1);\n\tans[1] = 1;\n\twhile(!que.empty())\n\t{\n\t\tnow = que.front();\n\t\tque.pop();\n\t\tfor(re int i = d[now]; i; i = e[i].next)\n\t\t{\n\t\t\tif(tim[now] + 1 < tim[e[i].to] || tim[e[i].to] == 0)\n\t\t\t{\n\t\t\t\ttim[e[i].to] = tim[now] + 1;\n\t\t\t\tans[e[i].to] = ans[now];\n\t\t\t\tque.push(e[i].to);\n\t\t\t}\n\t\t\telse\n\t\t\tif(tim[now] + 1 == tim[e[i].to]) ans[e[i].to] = (ans[e[i].to] + ans[now]) % 100003;\n\t\t}\n\t}\n\tans[1] = 1;\n\tfor(re int i = 1; i <= n; i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1561001869,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u6700\u77ed\u8def\u8ba1\u6570-\u9898\u89e3"
    }
]