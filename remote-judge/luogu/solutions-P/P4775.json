[
    {
        "content": "\u672c\u5927\u80d6\u9898\u7684\u9633\u95f4\u505a\u6cd5\uff0c\u4e0d\u7528\u5206\u7c7b\u8ba8\u8bba\u4e86\uff01\n\n**\u9898\u610f** \uff1a\u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u8fb9\u6709\u6b63\u8fb9\u6743\u3002\n\n\u7ed9\u51fa\u6811\u4e0a\u7684 $m$ \u6761\u8def\u5f84\uff0c\u6bcf\u6761\u8def\u5f84\u6709\u4e00\u4e2a\u82b1\u8d39\u3002\n\n\u9009\u51fa\u4e24\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u4e24\u6761\u8def\u5f84\u81f3\u5c11\u6709\u4e00\u6761\u516c\u5171\u8fb9\uff0c\u4e14\u4e24\u6761\u8def\u5f84\u7684**\u5e76**\u7684\u8fb9\u6743\u548c\u51cf\u53bb\u82b1\u8d39\u548c\u6700\u5927\u3002\u6216\u6307\u51fa\u4e0d\u5b58\u5728\u6ee1\u8db3\u8981\u6c42\u7684\u65b9\u6848\u3002\n\n\u591a\u7ec4\u6570\u636e\uff0c$n\\leq 5\\times 10^4,m\\leq 10^5,\\sum n\\leq 10^6,\\sum m\\leq 2\\times 10^6$\u3002\u65f6\u9650$\\texttt{8s}$\u3002\n\n------------\n\n\u5bf9\u4e8e\u7ed9\u51fa\u7684\u82b1\u8d39\u4e3a $w$ \u7684\u8def\u5f84 $(u,v)$ \uff0c\u6211\u4eec\u8bb0 $c_{(u,v)}=dis(u,v)-2w$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/y7p06ph9.png)\n\n\u53ef\u80fd\u7684\u4e24\u79cd\u5408\u6cd5\u65b9\u6848\u5982\u56fe\u3002\u5bf9\u4e8e\u4e24\u79cd\u60c5\u51b5\uff0c\u6536\u76ca**\u7684\u4e24\u500d**\u5747\u4e3a \uff1a \n\n$$c_{(u_1,v_1)}+c_{(u_2,v_2)}+dis(u_1,u_2)+dis(v_1,v_2)$$\n\n\u8003\u8651\u679a\u4e3e $t={\\rm lca}(u_1,u_2)$ \uff08\u5373\u76f8\u4ea4\u90e8\u5206\u6700\u6df1\u7684\u70b9\uff09\n\n\u7136\u540e\u6c42\u51fa\u6700\u5927\u7684\n\n$$c_{(u_1,v_1)}+c_{(u_2,v_2)}+dep_{u_1}+dep_{u_2}+dis(v_1,v_2)$$\n\n\u8fd8\u8981\u52a0\u4e0a\u6b64\u65f6\u786e\u5b9a\u7684 $-2dep_{{\\rm lca}(u_1,u_2)}$\u3002\n\n\u8fd9\u53ef\u4ee5\u770b\u505a\u5c06 $v_1$ \u7684\u6743\u503c\u5b9a\u4e3a $w_{v_1}=c_{(u_1,v_1)}+dep_{u_1}$ \uff0c\u800c $v_2$ \u7684\u6743\u503c\u5b9a\u4e3a $w_{v_2}=c_{(u_2,v_2)}+dep_{u_2}$\u3002\n\n\u9009\u62e9 $v_1,v_2$ \u4e24\u8005\u914d\u5bf9\u7684\u8d21\u732e\u4e3a $w_{v_1}+w_{v_2}+dis(v_1,v_2)$\u3002\n\n\u8fd9\u662f\u7ecf\u5178\u7684\u6811\u4e0a\uff08\u5e26\u6743\uff09\u6700\u8fdc\u70b9\u5bf9\u95ee\u9898\uff0c\u6709\u7ed3\u8bba \uff1a\n\n- \u8bb0 ${\\rm diam}(S)$ \u4e3a\u6811\u4e0a\u70b9\u96c6 $S$ \u7684\u6700\u8fdc\u70b9\u5bf9\u3002\n\n  \u5bf9\u4e8e $S=S_1\u222aS_2$ \uff0c\u6709 ${\\rm diam}(S)={\\rm diam}\\big({\\rm diam}(S_1)\u222a{\\rm diam}(S_2)\\big)$\n\n  \u53ef\u89c1 [P2056 [ZJOI2007]\u6349\u8ff7\u85cf](https://www.luogu.com.cn/problem/P2056)\u3002\n  \n\u5229\u7528\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53ea\u9700\u8ba1\u7b97 $O(1)$ \u6b21\u4e24\u70b9\u8ddd\u79bb\uff0c\u5c31\u80fd\u5408\u5e76\u70b9\u96c6\u6700\u8fdc\u70b9\u5bf9\uff0c\u6216\u8005\u8ba1\u7b97\u4e24\u4e2a\u70b9\u96c6\u4e4b\u95f4\u7684\u6700\u8fdc\u70b9\u5bf9\u3002\n\n\u4f7f\u7528 $O(1)\\ \\rm LCA$ \uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u5c31\u662f $O(1)$\u3002\n\n\u8bb0 $S_u$ \u4e3a\u5b50\u6811\u5185\u7684\u8def\u5f84\u63d0\u4f9b\u7684\u5339\u914d\u5019\u9009\u70b9\u96c6\u3002\n\n\u5bf9\u4e8e $t$ \uff0c\u8981\u8ba1\u7b97 $t$ \u7684\u5404\u4e2a\u5b50\u5206\u652f\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u8def\u5f84 $(u,v)$ \uff0c\u8bb0 $t={\\rm lca}(u,v)$\u3002\u5219 $u$ \u4f1a\u51fa\u73b0\u5728 $S_{[v\\rightarrow t)}$ \u4e2d\uff0c $v$ \u4f1a\u51fa\u73b0\u5728 $S_{[u\\rightarrow t)}$ \u4e2d\u3002\n\n\u5b83\u4eec\u4e0d\u80fd\u51fa\u73b0\u5728 $t$ \u7684\u7956\u5148\u7684 $S$ \u4e2d\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u9519\u8bef\u7684\u5339\u914d\u3002\n\n\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\uff0c\u6211\u4eec\u5728 $u$ \u70b9\u52a0\u5165\uff0c\u5728 $u$ \u5230 $t$ \u7684\u8def\u5f84\u4e0a\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u5220\u9664\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\uff0c\u5728\u5408\u5e76\u65f6\u5373\u53ef\u83b7\u5f97\u4e0d\u540c\u5b50\u5206\u652f\u4e4b\u95f4\u7684\u8d21\u732e\u3002\n\n\u590d\u6742\u5ea6 $O\\big((n+m)\\log n\\big)$\u3002\n\n\u4e0d\u5230 $\\rm 4Kb$ \u7684\u4ee3\u7801 \uff1a\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#define pb push_back\n#define ll long long\n#define MaxN 50050\n#define MaxM 100500\nusing namespace std;\nconst ll INF=1ll<<60;\nvector<int> g[MaxN],l[MaxN];\nint dep[MaxN],f[16][MaxN]\n   ,dfn[MaxN],out[MaxN],id[MaxN<<1],tim;\nll dist[MaxN];\nvoid pfs(int u)\n{\n  id[dfn[u]=++tim]=u;\n  for (int i=0,v;i<g[u].size();i++)\n    if (!dfn[v=g[u][i]]){\n      dep[v]=dep[f[0][v]=u]+1;\n      dist[v]=dist[u]+l[u][i];\n      pfs(v);id[++tim]=u;\n    }\n  out[u]=tim;\n}\n#define Pii pair<int,int>\n#define Pr pair<int,ll>\n#define fir first\n#define sec second\n#define mp make_pair\nint lg2[MaxN<<1];\nPii t[18][MaxN<<1];\nvoid Init()\n{\n  for (int i=2;i<=tim;i++)lg2[i]=lg2[i>>1]+1;\n  for (int i=1;i<=tim;i++)t[0][i]=mp(dep[id[i]],id[i]);\n  for (int j=1;(1<<j)<=tim;j++)\n    for (int i=1;i+(1<<j)-1<=tim;i++)\n      t[j][i]=min(t[j-1][i],t[j-1][i+(1<<(j-1))]);\n}\nint lca(int u,int v){\n  u=dfn[u];v=dfn[v];if (u>v)swap(u,v);\n  int k=lg2[v-u+1];\n  return min(t[k][u],t[k][v-(1<<k)+1]).second;\n}\nint up(int u,int t){\n  int k=15;\n  while(k--)while(dep[f[k][u]]>dep[t])u=f[k][u];\n  return u;\n}\nll dis(int u,int v)\n{return dist[u]+dist[v]-2*dist[lca(u,v)];}\ninline ll dis(Pr u,Pr v)\n{return dis(u.fir,v.fir)+u.sec+v.sec;}\nstruct Data{Pr u,v;}Z;\nll merge(Data &S,const Data &A,const Data &B)\n{\n  if (!A.u.fir&&!A.v.fir){S=B;return -INF;}\n  if (!B.u.fir&&!B.v.fir){S=A;return -INF;}\n  ll ret,mx=-INF,s;int op=-1;\n  #define chk(u,v,w) if (u.fir&&v.fir){s=dis(u,v);if (s>mx){mx=s;op=w;}}\n  chk(A.u,B.u,3);chk(A.u,B.v,4);\n  chk(A.v,B.u,5);chk(A.v,B.v,6);\n  ret=mx;\n  chk(A.u,A.v,1);chk(B.u,B.v,2);\n  if (op==1)S=A;if (op==2)S=B;\n  if (op==3)S=(Data){A.u,B.u};if (op==4)S=(Data){A.u,B.v};\n  if (op==5)S=(Data){A.v,B.u};if (op==6)S=(Data){A.v,B.v};\n  return ret;\n}\nstruct Node{int l,r;Data x;}a[MaxM*40];\nint rt[MaxN],tn,to;Pr wfc;\nvoid up(int u){\n  if (!a[u].l||!a[u].r){a[u].x=a[a[u].l|a[u].r].x;return ;}\n  merge(a[u].x,a[a[u].l].x,a[a[u].r].x);\n}\nvoid add(int l,int r,int &u)\n{\n  if (!u)u=++tn;\n  if (l==r){a[u].x.u=wfc;return ;}\n  int mid=(l+r)>>1;\n  if (to<=mid)add(l,mid,a[u].l);\n  else add(mid+1,r,a[u].r);\n  up(u);\n}\nvoid del(int l,int r,int &u)\n{\n  if (l==r){a[u].x.u=mp(0,0);return ;}\n  int mid=(l+r)>>1;\n  if (to<=mid)del(l,mid,a[u].l);\n  else del(mid+1,r,a[u].r);\n  up(u);\n}\nint merge(int u,int v)\n{\n  if (!u||!v)return u|v;\n  merge(a[u].x,a[u].x,a[v].x);\n  a[u].l=merge(a[u].l,a[v].l);\n  a[u].r=merge(a[u].r,a[v].r);\n  return u;\n}\nll ans;\nvector<int> b[MaxN];\nint n,m;\nvoid dfs(int u)\n{\n  for (int i=0,v;i<g[u].size();i++)\n    if (dep[v=g[u][i]]>dep[u]){\n      dfs(v);\n      ans=max(ans,merge(Z,a[rt[u]].x,a[rt[v]].x)-2*dist[u]);\n      rt[u]=merge(rt[u],rt[v]);\n    }\n  for (int i=0;i<b[u].size();i++)\n    {to=b[u][i];del(1,m,rt[u]);}\n}\nvoid solve()\n{\n  scanf(\"%d\",&n);\n  for (int i=1,u,v,w;i<n;i++){\n    scanf(\"%d%d%d\",&u,&v,&w);\n    g[u].pb(v);l[u].pb(w);\n    g[v].pb(u);l[v].pb(w);\n  }dep[1]=1;pfs(1);Init();\n  for (int j=1;j<15;j++)\n    for (int i=1;i<=n;i++)\n      f[j][i]=f[j-1][f[j-1][i]];\n  scanf(\"%d\",&m);\n  ans=-INF;\n  for (int i=1;i<=m;i++){\n    int u,v;ll w;\n    scanf(\"%d%d%lld\",&u,&v,&w);\n    if (u==v)continue;\n    w=dis(u,v)-2*w;\n    int t=lca(u,v),tu=up(u,t),tv=up(v,t);\n    to=i;\n    if (u!=t){\n      wfc=mp(v,w+dist[u]);\n      ans=max(ans,merge(Z,(Data){wfc,mp(0,0)},a[rt[u]].x)-2*dist[u]);\n      add(1,m,rt[u]);b[tu].pb(i);\n    }\n    if (v!=t){\n      wfc=mp(u,w+dist[v]);\n      ans=max(ans,merge(Z,(Data){wfc,mp(0,0)},a[rt[v]].x)-2*dist[v]);\n      add(1,m,rt[v]);b[tv].pb(i);\n    }\n  }\n  dfs(1);\n  if (ans<=-INF/10)puts(\"F\");\n  else printf(\"%lld\\n\",ans/2);\n  for (int i=1;i<=n;i++){\n    g[i].clear();l[i].clear();b[i].clear();\n    dfn[i]=rt[i]=0;\n  }memset(a,0,sizeof(Node)*(tn+5));tn=tim=0;\n}\nint main()\n{\n  int T;scanf(\"%d\",&T);\n  while(T--)solve();\n  return 0;\n}\n```\n\n\u6240\u4ee5\uff0c2018 \u5e74\u6700\u96be\u9898\u8fd8\u5e94\u8be5\u662f D2T3 (",
        "postTime": 1623821921,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 \u3010P4775 [NOI2018] \u60c5\u62a5\u4e2d\u5fc3\u3011"
    },
    {
        "content": " _ **~~\u8fd9\u9898\u5728NOI2018\u4e2d\u53ef\u4ee5\u7b97\u662f\u6700\u96be\u7684\u9898\u76ee\u4e86\u3002\u849f\u84bb\u5f53\u7136\u505a\u4e0d\u6765\uff0c\u4ec5\u4ec5\u662f\u8f6c\u53d1\u4e00\u4e0b\u5b98\u65b9\u9898\u89e3\u3002~~**_ \n## \u9898\u610f\u7b80\u8ff0\n - \u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u6bcf\u6761\u8fb9\u4e0a\u6709\u975e\u8d1f\u8fb9\u6743\n - \u518d\u7ed9\u51fa $m$ \u6761\u6811\u4e0a\u7684\u94fe\uff0c\u7528\u7aef\u70b9\u8868\u793a\uff0c\u6bcf\u6761\u94fe\u90fd\u6709\u4ef7\u503c\n - \u8981\u6c42\u9009\u51fa\u4e24\u6761\u94fe\uff0c\u6ee1\u8db3\u8fd9\u4e24\u6761\u94fe**\u81f3\u5c11\u6709\u4e00\u6761\u8fb9\u76f8\u4ea4**\n - \u6700\u5927\u5316\u9009\u51fa\u7684**\u94fe\u7684\u6743\u503c\u548c** + \u88ab**\u81f3\u5c11\u4e00\u6761\u94fe\u8986\u76d6**\u7684\u8fb9\u7684**\u8fb9\u6743\u548c**\n - \u4e00\u4e2a\u6d4b\u8bd5\u70b9\u53ef\u80fd\u6709\u5f88\u591a\u7ec4\u6570\u636e\uff0c$n\\leq 50,000$\u3001$m\\leq 100,000$\n - \u6d4b\u8bd5\u70b9\u5185\u7684 $n$ \u548c $m$ \u7684\u548c\u7684\u6570\u91cf\u7ea7\u8fbe\u5230 $10^{6}$\n - \u65f6\u95f4\u9650\u5236 $8$ \u79d2\uff0c\u7a7a\u95f4\u9650\u5236 $512$ MB\n \n## \u5927\u66b4\u529b\n - \u6d4b\u8bd5\u70b9 $1$\u3001$2$\u3001$3$ \u6570\u636e\u8303\u56f4\u975e\u5e38\u975e\u5e38\u975e\u5e38\u5c0f\n - \u53ef\u4ee5\u679a\u4e3e\u4e24\u6761\u94fe\uff0c\u5230\u6811\u4e0a\u53bb\u7edf\u8ba1\u8986\u76d6\u7684\u8fb9\n - $O(nm^{2}) = 15'$\n \n## \u806a\u660e\u7684\u66b4\u529b\n - \u6d4b\u8bd5\u70b9 $1$\u3001$2$\u3001$3$\u3001$4$ \u6570\u636e\u8303\u56f4\u6709\u70b9\u5c0f\n - \u8003\u8651\u5728\u679a\u4e3e\u94fe\u7684\u65f6\u5019\u52a0\u4f18\u5316\n - \u679a\u4e3e\u7b2c\u4e00\u6761\u94fe\uff0c\u628a\u6bcf\u6761\u8fb9\u7684\u6743\u503c $w(e)$ \u6539\u6210 $\u2193$\n - $w'(e) = [e$\u5728\u7b2c\u4e00\u6761\u94fe\u4e0a$]w(e)$\u5e76\u9884\u5904\u7406\u6c42\u51fa\u6811\u4e0a\u8ddd\u79bb\u7684\u6570\u636e\u7ed3\u6784\n - \u7136\u540e\u679a\u4e3e\u7b2c\u4e8c\u6761\u94fe\u6c42\u6811\u4e0a\u8ddd\u79bb\uff0c\u6ce8\u610f\u5224\u65ad\u662f\u5426\u76f8\u4ea4\n - $O(nm) = 20'$\n \n \n ## \u771f\u00b7\u66b4\u529b\n - \u4ed4\u7ec6\u89c2\u5bdf\u6570\u636e\u8303\u56f4\n - \u6211\u4eec\u76f8\u4fe1\u51fa\u9898\u4eba\u4e3a\u4e86\u5361\u4e71\u641e\uff0c\u4e0d\u4f1a\u5361\u66b4\u529b\n - \u4e8e\u662f\u53ea\u679a\u4e3e\u6709\u516c\u5171\u90e8\u5206\u7684\u94fe\n - \u6ce8\u610f\u4f7f\u7528\u6811\u94fe\u5256\u5206\u6c42 LCA \u6765\u51cf\u5c0f\u5e38\u6570\n - \u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u70b9 $1,2,3,4,7,8,9,10,11,12,17$\n - $55'$\n - \u52a0\u4e0a\u4e00\u6761\u94fe\u7684\u60c5\u51b5\u53ef\u4ee5 $65'$\n ![luogu](http://wx3.sinaimg.cn/mw690/0060lm7Tly1fukuinl96qj30e10n8dhi.jpg)\n\n\n ## \u57fa\u4e8e\u8fed\u4ee3\u7684\u4e71\u641e\u2642\n - \u524d\u4e00\u4e2a\u66b4\u529b\u4e2d\uff0c\u6211\u4eec\u4e8b\u5b9e\u4e0a\u662f\u6c42\u51fa\u4e86\"\u786e\u5b9a\u4e86\u4e00\u6761\u94fe\u540e\u7684\u6700\u5927\u7b54\u6848\"\n - \u4e0d\u96be\u76f4\u63a5\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u6539\u6210\u4e71\u641e\u2642\n - \u968f\u673a\u53d6\u82e5\u5e72\u6761\u94fe\u5206\u522b\u6c42\u7b54\u6848\u53d6 $max$\n - \u968f\u673a\u82e5\u5e72\u6b21\uff0c\u6bcf\u6b21\u53d6\u4e00\u6761\u94fe\uff0c\u627e\u53e6\u4e00\u6761\u94fe\u4f7f\u5f97\u4e24\u6761\u94fe\u7b54\u6848\u6700\u5927\uff0c\u7136\u540e\u4ece\u53e6\u4e00\u6761\u94fe\u51fa\u53d1\u6267\u884c\u64cd\u4f5c\uff0c\u8fed\u4ee3\u591a\u6b21\u5e76\u5728\u6bcf\u4e00\u6b65\u66f4\u65b0\u7b54\u6848\n - \u628a\u94fe\u6309\u7167 {\u94fe\u4ee3\u4ef7\uff0c\u94fe\u957f\u5ea6\uff0c\u94fe\u7ecf\u8fc7\u8fb9\u6570} \u7684 {$-1,0,1$} \u7684\u7cfb\u6570\u7ec4\u5408\u6392\u5e8f\uff0c\u5bf9\u524d\u9762\u4e00\u4e9b\u94fe\u6c42\u51fa\u8fd9\u4e9b\u94fe\u7684\u7b54\u6848\n - \u6784\u9020\u6570\u636e\u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u6bcf\u6761\u94fe\u7684\u7b54\u6848\u63a5\u8fd1\uff0c\u8fd9\u6837\u5c31\u80fd\u8ba9\u94fe\u4ea4\u90e8\u5206\u7684\u5f71\u54cd\u6269\u5927\u5230\u6781\u81f4\uff0c\u4ece\u800c\u5361\u6389\u6240\u6709\u8fd9\u6837\u7684\u8fed\u4ee3\u4e71\u641e\u2642\n - $\\leq 30'$\n \n## \u94fe\u7684\u6570\u636e\n- \u6d4b\u8bd5\u70b9 $4,5,6$ \u4e2d\uff0c\u6811\u662f\u4e00\u6761\u94fe\n- \u4ece\u800c\u6bcf\u6761\u94fe\u90fd\u662f\u4e00\u4e2a\u533a\u95f4\n- \u679a\u4e3e\u4e00\u6761\u94fe\u540e\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n- $O(m$ $log$ $n) = 15'$\n\n## \u8fb9\u6743\u4e3a $0$\n- \u6d4b\u8bd5\u70b9 $4,5,6$ \u4e2d\u8fb9\u6743\u4e3a $0$\n- \u53ea\u9700\u8981\u4e24\u6761\u94fe\u7684\u6743\u503c\u548c\u6700\u5c0f\uff0c\u94fe\u53ea\u8981\u76f8\u4ea4\u5373\u53ef\n- \u679a\u4e3e\u4e00\u6761\u8fb9\uff0c\u6c42\u6240\u6709\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u94fe\u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\uff0c\u7528\u4ed6\u4eec\u7684\u548c\u66f4\u65b0\u7b54\u6848\n- \u6c42\u7ecf\u8fc7\u4e00\u6761\u8fb9\u7684\u94fe\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206 + \u542f\u53d1\u5f0f\u5408\u5e76/\u53ef\u5e76\u5806\u5b8c\u6210\n- $O(m$ $log$ $n) = 15'$\n\n## \u57fa\u4e8e\u8fb9\u7684\u4e71\u641e\u2642\n- \u8fd9\u4e00\u4e2a\u66b4\u529b\u540c\u6837\u4e5f\u53ef\u4ee5\u6539\u6210\u4e71\u641e\u2642\n- \u5bf9\u6bcf\u6761\u8fb9\u6c42\u51fa\u7ecf\u8fc7\u5b83\u7684\u6309 {\u94fe\u4ee3\u4ef7\uff0c\u94fe\u957f\u5ea6\uff0c\u94fe\u7ecf\u8fc7\u8fb9\u6570} \u7684  {$-1,0,1$} \u7684\u7cfb\u6570\u7ec4\u5408\u6392\u5e8f\u7684\u524d\u82e5\u5e72\u5927\uff0c\u4e24\u4e24\u4e4b\u95f4\u6c42\u7b54\u6848\n- \u7136\u800c\uff0c\u524d\u9762\u7684\u6784\u9020\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u628a\u8fd9\u4e2a\u4e71\u641e\u2642\u5361\u7684\u75db\u4e0d\u6b32\u751f\n- $\\leq 35'$\n\n## LCA \u4e24\u4e24\u4e0d\u540c $(S_{1})$\n- \u5bf9\u4e8e LCA \u4e0d\u540c\u7684\u4e24\u6761\u94fe\uff0c\u4e24\u6761\u94fe\u7684\u4ea4\u5fc5\u7136\u662f\u76f4\u4e0a\u76f4\u4e0b\u7684\u4e00\u6bb5\n- \u56e0\u6b64\u53ef\u4ee5\u628a\u4e00\u6761\u94fe\u62c6\u6210\u4e24\u6761\u76f4\u4e0a\u76f4\u4e0b\u7684\u94fe\u8003\u8651\n- \u5728\u6811\u4e0a\u679a\u4e3e\u8f83\u4e0b\u7684\u4ea4\u70b9 ($\\color{red}\\colorbox{white}{\u7ea2\u70b9}$)\n- \u8981\u6c42\u4e24\u6761\u94fe\u7684\u4e0b\u7aef\u70b9\u5fc5\u987b\u5728$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u7684\u4e0d\u540c\u513f\u5b50\u5b50\u6811\u4e2d\n- \u957f\u5ea6\u548c + \u6743\u503c\u548c - $\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u6df1\u5ea6 + $max$($\\color{green}\\colorbox{white}{\u7eff\u70b9}$\u6df1\u5ea6, $\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u6df1\u5ea6 )\n- \u4e8e\u662f\u53ef\u4ee5\u60f3\u5230\u5bf9\u6bcf\u4e2a\u70b9\u8bb0 $f(i,j)$\n- \u4e0b\u7aef\u70b9\u5728 $i$ \u5b50\u6811\u5185\uff0c\u4e0a\u7aef\u70b9\u6df1\u5ea6\u4e3a $j$ \u7684\u6700\u5927\u7684\u94fe\u957f\u5ea6 + \u6743\u503c\n- \u7528\u542f\u53d1\u5f0f\u5408\u5e76\u6216\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u8fd9\u4e2a\u6570\u7ec4\uff0c$O(m$ $log$ $n) = 30'$\n![luogu](http://wx4.sinaimg.cn/mw690/0060lm7Tly1fukvjr8uamj306708yq34.jpg)\n\n\n## LCA \u5168\u90e8\u76f8\u540c $(S_{2})$\n- \u5bf9\u4e8e\u8fd9\u4e00\u90e8\u5206\u6570\u636e\uff0c\u4e24\u6761\u94fe\u7684\u4ea4\u53ef\u80fd\u4e0d\u662f\u76f4\u4e0a\u76f4\u4e0b\u7684\n- \u5173\u952e\u6027\u8d28 : \u94fe\u5e76\u7684\u4e24\u500d = \u4e24\u6761\u94fe\u957f + $\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u8ddd\u79bb + $\\color{green}\\colorbox{white}{\u7eff\u70b9}$\u8ddd\u79bb\n- \u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u679a\u4e3e$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\uff0c\u5373$\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u7684 LCA\n- \u8981\u6c42\u4e24\u4e2a$\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u5c5e\u4e8e$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u4e0d\u540c\u513f\u5b50\u7684\u5b50\u6811\n- \u8fd9\u65f6\u5019\u8981\u8003\u8651$\\color{green}\\colorbox{white}{\u7eff\u70b9}$\u7684\u8ddd\u79bb\n- \u5982\u679c\u4ecd\u7136\u7528\u6df1\u5ea6\u51cf\u53bb LCA \u6df1\u5ea6\u8003\u8651\uff0c\u65e0\u4ece\u4e0b\u624b\n- \u4e8b\u5b9e\u4e0a\u53ef\u4ee5**\u5f3a\u884c\u6811\u94fe\u5256\u5206**\u5957\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4f46\u8fd9\u6837\u592a\u96be\u5199\n- \u4f46\u6211\u4eec\u662f\u8981\u6700\u5927\u5316$\\color{green}\\colorbox{white}{\u7eff\u70b9}$\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece$\\color{green}\\colorbox{white}{\u7eff\u70b9}$\u7684**\u6700\u8fdc\u70b9\u5bf9**\u5165\u624b\n![luogu](http://wx1.sinaimg.cn/mw690/0060lm7Tly1fukvljd5ipj30bf06twev.jpg)\n- \u679a\u4e3e$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u662f $\u2193$\n- \u9009\u51fa\u4e24\u4e2a\u5c5e\u4e8e$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u4e0d\u540c\u513f\u5b50\u5b50\u6811\u7684$\\color{blue}\\colorbox{white}{\u84dd\u70b9 a,b}$\n- \u4f7f\u5f97\u5b83\u4eec\u5bf9\u5e94$\\color{green}\\colorbox{white}{\u7eff\u70b9}$ $p_{a},p_{b}$ \u7684\u8ddd\u79bb + \u4e24\u6761\u94fe\u94fe\u957f\u548c\u6743\u503c\u548c + \u4e24\u4e2a$\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u6df1\u5ea6 $-$ $2$ $\u00d7$ $\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u6df1\u5ea6\u6700\u5927\n\n- \u6ce8\u610f\u5230$\\color{red}\\colorbox{white}{\u7ea2\u70b9}$\u6df1\u5ea6\u662f\u5e38\u6570\u65e0\u9700\u8003\u8651\n- \u5bf9\u4e8e\u5176\u4ed6\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u9644\u52a0\u70b9 $p_{a}',p_{b}'$ \u5411 $p_{a},p_{b}$ \u8fde\u63a5\u8fb9\u6743\u4e3a\u81ea\u5df1\u6240\u5728\u94fe\u957f + \u6743\u503c\u7684\u8fb9\uff0c\u8f6c\u5316\u4e3a\u627e**\u6700\u8fdc\u70b9\u5bf9** $p_{a}',p_{b}'$\n- \u8981\u6c42\u652f\u6301\u96c6\u5408\u5408\u5e76\n- \u5728\u5408\u5e76\u7684\u65f6\u5019\uff0c\u6c42\u51fa\u8de8\u8d8a\u4e24\u4e2a\u96c6\u5408\u7684\u6700\u8fdc\u70b9\u5bf9\n![luogu](http://wx3.sinaimg.cn/mw690/0060lm7Tly1fukvsbgxmuj30cp07kq3c.jpg)\n- \u5bf9\u4e8e\u975e\u8d1f\u8fb9\u6743\u7684\u6811\uff0c\u4e24\u4e2a\u70b9\u96c6\u7684\u5e76\u7684\u6700\u8fdc\u70b9\u5bf9\u7684\u4e00\u7aef\uff0c\u4e00\u5b9a\u662f\u539f\u6765\u4e24\u4e2a\u70b9\u96c6\u4e2d\uff0c\u67d0\u4e2a\u70b9\u96c6\u7684\u6700\u8fdc\u70b9\u5bf9\u7684\u4e00\u7aef\uff0c\u4e00\u5b9a\u662f\u539f\u6765\u4e24\u4e2a\u70b9\u96c6\u4e2d\uff0c\u67d0\u4e2a\u70b9\u96c6\u6700\u8fdc\u70b9\u5bf9\u7684\u4e00\u7aef\n- \u53ea\u9700\u8981\u5bf9\u70b9\u96c6\u8bb0\u5f55\u6700\u8fdc\u70b9\u5bf9\u7aef\u70b9\uff0c\u5373\u53ef\u652f\u6301\u5408\u5e76\n- \u8fd9\u4e2a\u7b97\u6cd5\u53ea\u9700\u8981\u5728\u6811\u4e0a\u8fdb\u884c DFS\uff0c\u4ee5\u53ca\u6c42 $m$ \u6b21\u7684 LCA\n- $O(n+m) = 20'$\n\n## \u6ee1\u5206\u7b97\u6cd5\n- \u4e24\u6761\u76f8\u4ea4\u7684\u94fe\uff0c\u8981\u4e48 LCA \u76f8\u540c\uff0c\u8981\u4e48 LCA \u4e0d\u540c\n- \u5bf9\u4e8e **LCA \u4e0d\u540c**\u7684**\u6240\u6709\u60c5\u51b5**\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406\u4e86\n- \u5bf9\u4e8e **LCA \u76f8\u540c**\u7684\u60c5\u51b5\uff0c\u8003\u8651**\u540c\u65f6\u5904\u7406**\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u4e24\u6761\u94fe\u7684\u5171\u540c LCA \u7684\u60c5\u51b5\n- \u5bf9\u6bcf\u4e2a\u70b9 $p$ \u8bb0\u5f55 $f(p,j)$ \u8868\u793a\u5728\u70b9 $p$ \u5904\u7406 **LCA \u4e3a $j$ \u65f6**\u4fdd\u5b58\u7684$\\color{blue}\\colorbox{white}{\u84dd\u70b9}$\u7684\u96c6\u5408\uff08\u8bb0\u5f55\u7684\u662f\u6700\u8fdc\u70b9\u4fe1\u606f\uff09\n- \u5bf9 $f$ \u6570\u7ec4\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u590d\u6742\u5ea6 $O(n + m$ $log$ $n)$\n- \u4e5f\u53ef\u4ee5\u8fdb\u884c\u70b9\u5206\u6cbb\uff0c\u8003\u8651\u6240\u6709\u8fc7\u91cd\u5fc3\u7684\u94fe\uff0c\u8f6c\u5316\u4e3a\u5168\u8fc7\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u590d\u6742\u5ea6 $O(n$ $log$ $n+m$ $log$ $n)$\n- $O(n + m$ $log$ $n)=$ $\\color{green}\\colorbox{white}{100}$ $'$ ",
        "postTime": 1535101656,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4775 \u3010[NOI2018]\u60c5\u62a5\u4e2d\u5fc3\u3011"
    },
    {
        "content": "~~\u7eaa\u5ff5\u6211\u901d\u53bb\u7684\u4e00\u5929~~\n\n\u53ef\u4ee5\u501f\u52a9\u5b98\u65b9\u9898\u89e3\u7684\u56fe\u6765\u7406\u89e3>_<\n\n\u9898\u76ee\u95ee\u7684\u5b9e\u9645\u4e0a\u662f\u7ed9\u5b9a$m$\u6761\u94fe\uff0c\u94fe\u6709\u6743\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e24\u6761\u76f8\u4ea4\u7684\u94fe\uff0c\u6700\u5927\u5316\u94fe\u7684\u6743\u503c\u548c\u52a0\u4e0a\u5e76\u96c6\u7684\u8fb9\u6743\u548c\u3002\n\n\u8fd9\u7c7b\u9898\u76ee\u5f80\u5f80\u662f\u5206\u6210\u4e24\u7c7b\u6765\u5b9e\u73b0\u7684\uff0c\u5206\u522b\u662f$LCA$\u4e0d\u540c\u7684\u4e24\u6761\u94fe\u548c$LCA$\u76f8\u540c\u7684\u4e24\u6761\u94fe\u3002\n\n\u4e00\u3001\u5bf9\u4e8e$LCA$\u4e0d\u540c\u7684\u60c5\u51b5\n\n\u6211\u4eec\u8981\u6c42\u7684\u5b9e\u9645\u4e0a\u662f\u6700\u5927\u5316\u4e24\u6761\u94fe\u7684\u6743\u503c\u548c\u52a0\u4e0a\u7ecf\u8fc7\u7684\u8fb9\u6743\u548c\u51cf\u53bb\u4ea4\u96c6\u7684\u8fb9\u6743\u548c\u3002\n\n\u8003\u8651\u5230\u4ea4\u96c6\u4e00\u5b9a\u662f\u4e00\u6761\u76f4\u4e0a\u76f4\u4e0b\u7684\u94fe\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u539f\u6765\u7684\u94fe\u62c6\u6210\u4e24\u6761\u76f4\u4e0a\u76f4\u4e0b\u7684\u94fe\u663e\u7136\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u7531\u4e8e\u6240\u6709\u94fe\u90fd\u662f\u76f4\u4e0a\u76f4\u4e0b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4e24\u6761\u94fe\u5e95\u7aef\u7684$LCA$(\u8bbe\u4e3a$x$)\uff0c\u4e8e\u662f\u8d21\u732e\u5c31\u662f\u4e24\u6761\u94fe\u7684\u6743\u503c\u548c\u52a0\u4e0a\u4e24\u6761\u94fe\u7684\u957f\u5ea6\u548c$-dep[x]+max(\\text{\u4e24\u6761\u94fe\u9876\u7aef\u7684\u6df1\u5ea6})$\u3002\u4e8e\u662f\u8bb0\u5f55$f(i, j)$\u8868\u793a\u4ee5$i$\u4e3a\u6839\uff0c\u5411\u4e0a\u62d3\u5c55\u6df1\u5ea6\u5230$j$\u7684\u6700\u5927\u6743\u503c\u3002\n\n\u5bf9\u5176\u505a\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u62d3\u5c55\u6df1\u5ea6\u5728$j$\u7684\u94fe\u957f+\u94fe\u7684\u6743\u503c\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u627e\u4e00\u4e2a\u524d\u7f00$max$\u3002\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u66f4\u65b0\u7b54\u6848\u3002\u5177\u4f53\u7684\uff0c\u6bcf\u6b21\u66b4\u529b\u6bcf\u6b21\u8bb0\u5f55\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f$max(val_i)$\uff0c\u53e6\u4e00\u4e2a\u662f$max(val_i+dep_i)$\u3002\u6bcf\u6b21\u5408\u5e76\u7b54\u6848\u7684\u65f6\u5019\uff0c\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u663e\u7136\u66f4\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u5de6\u5b50\u6811\u7684\u7b2c\u4e00\u4e2a\u503c\u52a0\u4e0a\u53f3\u5b50\u6811\u7684\u7b2c\u4e8c\u4e2a\u503c\u5373\u53ef\u3002\n\n\u6ce8\u610f$LCA$\u76f8\u540c\u7684\u4e0d\u80fd\u5408\u5e76\uff0c\u4e5f\u5c31\u662f\u5230\u5e95\u4e4b\u540e\u6211\u4eec\u4e0d\u80fd\u9009\u62e9\u3002\n\n\u4e8c\u3001\u5bf9\u4e8e$LCA$\u76f8\u540c\u7684\u60c5\u51b5\n\n\u53d1\u73b0\u8fd9\u4e9b\u94fe\u5df2\u7ecf\u4e0d\u662f\u76f4\u4e0a\u76f4\u4e0b\u7684\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u67ff\u5b50\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a$LCA$\u5206\u5f00\u5904\u7406\u3002\n\n\u8bbe\u6bcf\u6761\u94fe\u7684\u957f\u5ea6\u4e3a$len_i$\uff0c\u90a3\u4e48\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u795e\u5947\u7684\u6784\u9020\u5199\u6210\uff1a$\\dfrac{1}{2}(len_x+len_y+dis(LCA\\text{\u4e00\u7aef\u5e95\u90e8\u4e24\u4e2a\u70b9})+dis(LCA\\text{\u53e6\u4e00\u7aef\u5e95\u90e8\u4e24\u4e2a\u70b9}))-c_x-c_y$\n\n\u679a\u4e3e\u5b8c$LCA$\u4e4b\u540e\uff0c\u5efa\u51fa\u6240\u6709\u8be2\u95ee\u70b9\u7684\u865a\u6811\uff0c\u679a\u4e3e\u865a\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a$LCA$\uff0c\u4e5f\u5c31\u662f\u679a\u4e3e\u4e00\u6bb5\u5e95\u90e8\u4e24\u70b9\u7684$LCA'$\u3002\n\n\u679a\u4e3e\u5b8c$LCA'$\u4e4b\u540e\uff0c\u53d1\u73b0$\\dfrac{1}{2}(len_x+dep_x)-c_x$\u5df2\u7ecf\u548c$y$\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u6709\u5173\u7cfb\u7684\u53ea\u5269\u4e0b\u53e6\u4e00\u8fb9\u4e24\u4e2a\u7aef\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u65b0\u6302\u4e00\u4e2a\u8282\u70b9\u6302\u5230\u53e6\u4e00\u8fb9\u7aef\u70b9\u4e0b\u9762\u53bb\uff0c\u7136\u540e\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u6811\u7684\u76f4\u5f84\u3002\u7531\u4e8e\u4e24\u4e2a\u8282\u70b9\u4e00\u5b9a\u8981\u6765\u81ea\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\uff0c\u76f8\u5f53\u4e8e\u6c42\u4e24\u4e2a\u72ec\u7acb\u7684\u70b9\u96c6\u6784\u6210\u7684\u76f4\u5f84\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u76f4\u5f84\u4e00\u5b9a\u4ea7\u751f\u4e8e\u539f\u6765\u4e24\u4e2a\u76f4\u5f84\u4e4b\u4e2d\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u4e0a\u8ff0\u7684\u7ed3\u8bba\u53ea\u6709\u5728\u6ca1\u6709\u8d1f\u6743\u8fb9\u7684\u65f6\u5019\u6210\u7acb\u3002\u4f46\u662f\u7531\n\u4e8e\u8d1f\u6743\u8fb9\u53ea\u6709\u53ef\u80fd\u5728\u53f6\u5b50\u8282\u70b9\u51fa\u73b0\uff0c\u6240\u4ee5\u7ed3\u8bba\u4ecd\u7136\u6210\u7acb\u3002\n\n### [\u4e11\u964b\u65e0\u6bd4\u7684\u4ee3\u7801](https://loj.ac/submission/941851)",
        "postTime": 1601214025,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4775 \u3010[NOI2018]\u60c5\u62a5\u4e2d\u5fc3\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u7684\u505a\u6cd5\uff0c\u800c\u4e14\u7a7a\u95f4\u590d\u6742\u5ea6\u662f $O(n+m)$ \u7684\uff0c\u501f\u9274\u4e86 @command_block \u5de8\u4f6c\u7684\u505a\u6cd5\u5e76\u52a0\u4ee5\u6539\u8fdb\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002\n\n\u8003\u8651\u4e24\u6761\u8def\u5f84\u5e76\u7684\u8d21\u732e\u5e94\u8be5\u662f\uff1a\n$$\\dfrac{dis(x_1,y_1)+dis(x_2,y_2)+dis(x_1,x_2)+dis(y_1,y_2)-2\\times v_1-2\\times v_2}{2}$$\n\n\u5176\u4e2d $dis(x,y)$ \u8868\u793a $x$ \u5230 $y$ \u7684\u8fb9\u6743\u548c\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u679a\u4e3e $t=lca(x_1,x_2)$\uff0c\u540c\u65f6\u628a\u5e38\u6570 $\\dfrac{1}{2}$ \u63d0\u5230\u6700\u540e\u5904\u7406\uff0c\u6b64\u65f6\u8d21\u732e\u53d8\u4e3a\uff1a\n\n$$(dis(x_1,y_1)-2\\times v_1+dep_{x_1})+(dis(x_2,y_2)-2\\times v_2+dep_{x_2})+dis(y_1,y_2)-2\\times dep_t$$\n\n\u8003\u8651\u5230\u5bf9\u4e8e\u56fa\u5b9a\u7684 $x_1$\uff0c$w_{x_1}=dis(x_1,y_1)-2\\times v_1+dep_{x_1}$ \u662f\u4e2a\u5b9a\u503c\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5728 $t$ \u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\u7684\u76f4\u5f84\u7aef\u70b9\u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8003\u8651\u5feb\u901f\u7684\u7ef4\u62a4\u8fd9\u4e2a\u76f4\u5f84\uff0c\u7531\u4e8e\u8fb9\u6743\u90fd\u662f\u6b63\u6743\uff0c\u6240\u4ee5\u76f4\u5f84\u662f\u6709\u53ef\u5408\u5e76\u6027\u7684\uff08\u5373\u4f7f\u70b9\u6743\u4e3a\u8d1f\uff09\uff0c\u6240\u4ee5\u5229\u7528\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u53ea\u9700\u8ba1\u7b97 $6$ \u6b21\u4e24\u70b9\u8ddd\u79bb\uff0c\u5c31\u80fd\u5408\u5e76\u70b9\u96c6\u6700\u8fdc\u70b9\u5bf9\uff0c\u4f7f\u7528 $O(n\\log n)-O(1)$ \u6c42 LCA\uff0c\u590d\u6742\u5ea6\u4e3a $O(1)$\u3002\n\n\u6211\u4eec\u73b0\u5728\u628a $x-y$ \u7684\u94fe\u62c6\u6210 $x-lca,y-lca$ \u7684\u4e24\u6761\u94fe\uff0c\u8fd9\u6837\u4ea4\u7684 $x_1,x_2$ \u7684 $lca$ \u53ea\u4f1a\u5728\u8fd9\u4e24\u6761\u94fe\u7684\u5176\u4e2d\u4e00\u6761\u4e0a,\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\uff0c\u5728 $x$ \u52a0\u5165\uff0c\u5728 $x$ \u5230 $lca$ \u7684\u8def\u5f84\u4e0a\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u70b9\u5220\u9664\u3002\n\n\u73b0\u5728\u8981\u7ef4\u62a4\u7684\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a $t$\uff0c$t$ \u7684\u4e0d\u540c\u5b50\u6811\u5408\u5e76\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u4f46\u662f\u6709\u66f4\u597d\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u76f4\u63a5\u5bf9\u6240\u6709\u6811\u4e0a\u5dee\u5206\u7684\u64cd\u4f5c\u5f00\u4e00\u4e2a\u4f4d\u7f6e\u6765\u7edf\u8ba1\uff0c\u8fd9\u6837\u603b\u7684\u4f4d\u7f6e\u6570\u662f $O(2m)$ \u7684\uff0c\u7136\u540e\u4fee\u6539\u5c31\u76f4\u63a5\u5355\u70b9\u4fee\u6539\u6e05\u4e3a $0$\uff0c\u67e5\u8be2\u4e24\u4e2a\u5b50\u6811\u7684\u76f4\u5f84\u5e76\u5c31\u53d8\u6210\u4e86\u67e5\u8be2\u4e24\u4e2a\u533a\u95f4\u7684\u76f4\u5f84\u5e76\uff0c\u8fd9\u4e2a\u76f4\u63a5\u7528\u5355\u4fee\u533a\u67e5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u5e76\u4e0d\u9700\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n+m\\log m)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n+m)$\uff0c\u5e94\u8be5\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u6700\u4f18\u79c0\u7684\u4ee3\u7801\uff0c\u53ea\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u56e0\u4e3a\u8981\u7ef4\u62a4\u76f4\u5f84\u5bfc\u81f4\u5e38\u6570\u8f83\u5927\uff0c\u4e0d\u8fc7\u4e5f\u80fd\u65e0\u538b\u529b\u7684\u901a\u8fc7\u6b64\u9898\uff0c\u540c\u65f6\u4ee3\u7801\u4e5f\u6e05\u6670\u6613\u61c2\uff0c\u53ea\u6709 4k\uff0c~~\u8fd9\u4e0d\u6bd4 8k \u7684\u5206\u7c7b\u8ba8\u8bba\u4f18\u79c0\uff1f~~\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define ll long long\n#define mp make_pair\n#define pr pair<int,ll>\n#define fi first\n#define se second\nusing namespace std;\nconst ll inf=1e18;const int Mxdt=1000000;\nint h[N],cnt,to[N<<1],nx[N<<1],vl[N<<1];\nint n,m,Log[N],fa[20][N],dep[N],X,Y;\nint in[N],out[N],P[N],fp[N],dfn[N],U[N];\nll ans,dis[N],Z;pr p[N];vector<int>g[N],del[N];\nstruct ET {\n\tint x,d;\n\tET(int X=0,int D=0) {x=X,d=D;}\n\tbool operator<(ET a) const {return d<a.d;}\n} f[20][N<<1];\nstruct Pair {pr x,y;} tmp,rt[N],t[N<<3];\ninline char gc() {\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf;\n\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n}\ninline char pc(char ch,bool bj) {\n\tstatic char buf[Mxdt],*p1=buf,*p2=buf+Mxdt;\n\treturn (bj||(*p1++=ch)&&p1==p2)&&fwrite(p1=buf,1,p1-buf,stdout),0;\n}\ninline ll read() {\n\tll res=0;char ch=gc();\n\twhile(ch<'0')ch=gc();\n\twhile(ch>='0')res=(res<<3)+(res<<1)+(ch^48),ch=gc();\n\treturn res;\n}\nvoid Addedge(int x,int y,int z) {\n\tnx[++cnt]=h[x],to[h[x]=cnt]=y,vl[cnt]=z;\n\tnx[++cnt]=h[y],to[h[y]=cnt]=x,vl[cnt]=z;\n}\nvoid Dfs(int x,int p) {\n\tP[++X]=fp[dfn[x]=++cnt]=x,dep[x]=dep[fa[0][x]=p]+1;\n\tfor(int i=h[x]; i; i=nx[i])if(to[i]!=p)dis[to[i]]=dis[x]+vl[i],Dfs(to[i],x),fp[++cnt]=x;\n}\nvoid Build() {\n\tLog[0]=-1;for(int i=1; i<=cnt; ++i)f[0][i]=ET(fp[i],dep[fp[i]]),Log[i]=Log[i>>1]+1;\n\tfor(int i=1; (1<<i)<=cnt; ++i)\n\t\tfor(int j=1; j+(1<<i)<=cnt+1; ++j)fa[i][j]=fa[i-1][fa[i-1][j]],f[i][j]=min(f[i-1][j],f[i-1][j+(1<<i-1)]);\n}\nint Lca(int x,int y) {x=dfn[x],y=dfn[y];if(x>y)swap(x,y);int len=Log[y-x+1];return min(f[len][x],f[len][y-(1<<len)+1]).x;}\nint Findk(int x,int k) {for(; k>0; k-=k&-k)x=fa[Log[k&-k]][x];return x;}\nll Dis(int x,int y) {return dis[x]+dis[y]-2*dis[Lca(x,y)];}\nll Dis(pr x,pr y) {return Dis(x.fi,y.fi)+x.se+y.se;}\nll Merge(Pair&a,Pair A,Pair B) {\n\tif(!A.x.fi&&!A.y.fi)return a=B,-inf;\n\tif(!B.x.fi&&!B.y.fi)return a=A,-inf;\n\tll ans,mx=-inf,tmp;\n\tif((tmp=Dis(A.x,B.x))>mx)mx=tmp,a=(Pair){A.x,B.x};\n\tif((tmp=Dis(A.x,B.y))>mx)mx=tmp,a=(Pair){A.x,B.y};\n\tif((tmp=Dis(A.y,B.x))>mx)mx=tmp,a=(Pair){A.y,B.x};\n\tif((tmp=Dis(A.y,B.y))>mx)mx=tmp,a=(Pair){A.y,B.y};ans=mx;\n\tif((tmp=Dis(A.x,A.y))>mx)mx=tmp,a=(Pair){A.x,A.y};\n\tif((tmp=Dis(B.x,B.y))>mx)mx=tmp,a=(Pair){B.x,B.y};return ans;\n}\nvoid Build(int P,int l,int r) {\n\tif(l==r)return t[P].x=t[P].y=p[U[l]],void();\n\tint mid=(l+r)>>1;Build(P<<1,l,mid),Build(P<<1|1,mid+1,r);\n\tMerge(t[P],t[P<<1],t[P<<1|1]);\n}\nvoid Change(int p,int l,int r,int x) {\n\tif(l==r)return t[p].x=t[p].y=mp(0,0),void();\n\tint mid=(l+r)>>1;(x<=mid)?Change(p<<1,l,mid,x):Change(p<<1|1,mid+1,r,x);\n\tMerge(t[p],t[p<<1],t[p<<1|1]);\n}\nPair Ask(int p,int l,int r,int ql,int qr) {\n\tif(ql>qr)return (Pair){mp(0,0ll),mp(0,0ll)};\n\tif(ql<=l&&r<=qr)return t[p];int mid=(l+r)>>1;\n\tif(qr<=mid)return Ask(p<<1,l,mid,ql,qr);\n\tif(ql>mid)return Ask(p<<1|1,mid+1,r,ql,qr);\n\treturn Merge(tmp,Ask(p<<1,l,mid,ql,qr),Ask(p<<1|1,mid+1,r,ql,qr)),tmp;\n}\nvoid Solve(int x,int fa) {\n\tfor(int i=h[x],y; i; i=nx[i])\n\t\tif((y=to[i])!=fa)Solve(y,x),ans=max(ans,Merge(tmp,Ask(1,1,cnt,in[x],out[x]),Ask(1,1,cnt,in[y],out[y]))-2*dis[x]),out[x]=out[y];\n\tfor(int i:del[x])Change(1,1,cnt,fp[i]);\n}\nvoid Solve(int T) {\n\tfor(int i=(n=read())-1; i; --i)X=read(),Y=read(),Z=read(),Addedge(X,Y,Z);\n\tans=-inf,Dfs(1,X=cnt=0),Build(),m=read(),cnt=0;\n\tfor(int i=1; i<=m; ++i) {\n\t\tif(X=read(),Y=read(),Z=read(),X==Y)continue;Z=Dis(X,Y)-2*Z;\n\t\tint lca=Lca(X,Y),tx=Findk(X,dep[X]-dep[lca]-1),ty=Findk(Y,dep[Y]-dep[lca]-1);\n\t\tif(X!=lca)p[++cnt]=mp(Y,Z+dis[X]),ans=max(ans,Merge(rt[X],rt[X],(Pair){p[cnt],p[cnt]})-2*dis[X]),g[X].push_back(cnt),del[tx].push_back(cnt);\n\t\tif(Y!=lca)p[++cnt]=mp(X,Z+dis[Y]),ans=max(ans,Merge(rt[Y],rt[Y],(Pair){p[cnt],p[cnt]})-2*dis[Y]),g[Y].push_back(cnt),del[ty].push_back(cnt);\n\t}\n\tcnt=0;for(int i=1; i<=n; ++i){in[P[i]]=cnt+1;for(int j:g[P[i]])U[fp[j]=++cnt]=j;out[P[i]]=cnt;}\n\tif(!cnt)puts(\"F\");else {Build(1,1,cnt),Solve(1,0);if(ans<=-inf/100)puts(\"F\");else cout<<ans/2<<\"\\n\";}\n\tfor(int i=1; i<=n; ++i)h[i]=0,rt[i].x=rt[i].y=mp(0,0),g[i].clear(),del[i].clear();cnt=0;\n}\nint main() {\n\tfor(int T=read(); T; --T)Solve(T);\n\treturn 0;\n}\n```",
        "postTime": 1623836752,
        "uid": 112569,
        "name": "Time_tears",
        "ccfLevel": 9,
        "title": "[NOI2018] \u60c5\u62a5\u4e2d\u5fc3"
    },
    {
        "content": "\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u9897\u5e26\u8fb9\u6743\u7684\u6811\uff0c\u548c\u6811\u4e0a\u82e5\u5e72\u8def\u5f84\u3002\u95ee\u9009\u62e9\u4e24\u6761\u6709\u4ea4\u96c6\uff08\u8fb9\uff09 \u7684\u8def\u5f84\uff0c\u8def\u5f84\u5e76\u96c6\u4e0a\u7684\u8fb9\u6743\u548c\u51cf\u53bb\u8def\u5f84\u6210\u672c\u7684\u6700\u5927\u503c\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u662f\u8fd9\u4e2a\u5e76\u96c6\u8fb9\u6743\u548c\u7684\u7b97\u6cd5\u3002\n\n![img](https://cdn.luogu.com.cn/upload/image_hosting/y7p06ph9.png)\n\n\uff08\u5077\u7684 command_block \u7684\uff09\n\n\u7136\u540e\u4e24\u4e2a\u8def\u5f84\u7684\u6743\u503c\uff08\u4e58\u4ee5 2\uff09\u5c31\u662f\uff1a\n$$\ndis(x_1,x_2)+dis(x_1,y_1)+dis(x_2,y_2)+dis(y_1,y_2)-2\\cdot v_1-2\\cdot v_2\n$$\n\u5219\u679a\u4e3e lca t\uff0c\u5c06\u8d21\u732e\u62c6\u5f00\uff1a\n$$\ndep_{x_1}+dep_{x_2}+dis(x_1,y_1)-2\\cdot v_1+dis(x_2,y_2)-2\\cdot v_2+dis(y_1,y_2)-2\\cdot dep_t\n$$\n\u53d1\u73b0 $x_1,x_2$ \u7684\u5f62\u5f0f\u5b8c\u5168\u4e00\u6837\u5e76\u4e14\u53ef\u4ee5\u8ba1\u7b97\uff0c\u6240\u4ee5\u5c06\u8fd9\u4e2a\u8bbe\u4e3a\u6743\u503c\u3002\n\n$w(x_1)=dep_{x_1}+dis(x_1,y_1)-2\\cdot v_1$ \n\n\u8fd9\u6837\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u9009\u62e9\u4e24\u4e2a lca \u662f t \u7684 $x_1,x_2$ \u4f7f\u5f97\u4ed6\u4eec\u7684\u6743\u503c\u548c\u52a0\u4e0a  $dis(y_1,y_2)$ \u6700\u5927\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u95ee\u9898\u53d8\u6210\u4e86\u76f4\u5f84\u95ee\u9898\uff0c\u5c06 $y_1,y_2$ \u770b\u505a\u5e26\u6743\u503c\u7684\u7aef\u70b9\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u76f4\u5f84\u7684\u7ecf\u5178\u6027\u8d28\u5c31\u662f\u70b9\u96c6\u548c\u7684\u76f4\u5f84\u4e00\u5b9a\u5728\u4e24\u4e2a\u96c6\u5408\u7684\u76f4\u5f84\u4e2d\u4ea7\u751f\u3002\n\n\u6240\u4ee5\u4f7f\u7528\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5b50\u6811\u70b9\u96c6\u548c\u7684\u76f4\u5f84\u5373\u53ef\u3002\n\n\u5176\u4f59\u5927\u4f6c\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u7136\u800c\u53ef\u4ee5\u7b80\u5355\u4f7f\u7528\u5de6\u504f\u6811\u6765\u5b9e\u73b0\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5728 $x_1$ \u5904\u585e\u8fdb\u5806\u91cc\uff0c\u7136\u540e\u5728\u8def\u5f84 lca \u5904\u5220\u9664\uff0c\u5c31\u662f\u6811\u4e0a\u5dee\u5206\uff0c\u5806\u4f7f\u7528\u6df1\u5ea6\u8fdb\u884c\u6bd4\u8f83\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\u5728 dfs \u7684\u65f6\u5019\u5f53\u524d\u8282\u70b9 $u$ \u548c\u5373\u5c06\u5408\u5e76\u4e0a\u6765\u7684 $v$ \u5b50\u6811\u53ea\u8981\u6ee1\u8db3\u8def\u5f84  lca \u662f $u$ \u7684\u7956\u5148\u5373\u53ef\uff0c\u8fd9\u6837\u4ea4\u96c6\u4e00\u5b9a\u81f3\u5c11\u6709\u8fd9\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u518d\u4f7f\u7528\u76f4\u5f84\u7b97\u6cd5\u8ba1\u7b97\u7b54\u6848\uff0c\u8fd9\u91cc\u53ea\u80fd\u7edf\u8ba1\u8de8\u96c6\u5408\u7684\u76f4\u5f84\uff0c\u5185\u90e8\u7684 lca \u5df2\u7ecf\u4e0d\u662f\u5f53\u524d\u70b9\u4e86\u3002\n\n\u7136\u540e\u76f4\u63a5\u5de6\u504f\u6811\u5408\u5e76\u5e76\u4e14\u7ef4\u62a4\u5f53\u524d\u5806\u4e2d\u70b9\u96c6\u7684\u76f4\u5f84\u5373\u53ef\uff0c\u8fd9\u4e2a\u5728 merge \u51fd\u6570\u4e2d\u5199\u4e2a\u5408\u5e76\u76f4\u5f84\u7684\u4e1c\u897f\u5c31\u884c\u4e86\uff0c\u60f3\u548b\u5199\u548b\u5199\u3002\n\n\u6ce8\u610f\u4f7f\u7528 $O(n\\log n)-O(1)$ \u7684 LCA \u7b97\u6cd5\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n## code\n\n\u5199\u5b8c\u624d\u53d1\u73b0\u5de6\u504f\u6811\u90e8\u5206\u7684\u6570\u7ec4\u5f00\u5c0f\u4e86\uff0c\u4f46\u662f\u80fd\u8fc7\uff0c\u6bd4\u8f83\u795e\u5947\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u9898\u8bfb\u5165\u4f1a\u6709 $50$ \u591a MB\uff0c\u5feb\u8bfb\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u8fd0\u884c\u65f6\u95f4\uff0c\u76ee\u524d\u662f luogu \u6700\u4f18\u89e3\u3002\n\n```\nconst int MAXN=5e4+10;\nstruct edge{int from,v,w;}e[MAXN*2];\nint cntp;\nint head[MAXN];\ninline void add(int u,int v,int w){e[++cntp]={head[u],v,w},head[u]=cntp;}\nint dfn[MAXN];\nconst int K=16;\nint F[K+1][MAXN];\nint d[MAXN];\ninline int Min(int x,int y){return d[x]<d[y]?x:y;}\nint tt;\nll val[MAXN];\nvoid dfs(int u,int fa)\n{\n    F[0][dfn[u]=++tt]=fa;d[u]=d[fa]+1;\n    for(int i=head[u];i;i=e[i].from)val[e[i].v]=val[u]+e[i].w,dfs(e[i].v,u);\n}\ninline int LCA(int x,int y)\n{\n    if(x==y)return x;\n    x=dfn[x],y=dfn[y];if(x>y)swap(x,y);\n    int k=31-__builtin_clz(y-x);\n    return  Min(F[k][x+1],F[k][y-(1<<k)+1]);\n}\ninline ll dis(int x,int y){return val[x]+val[y]-2ll*val[LCA(x,y)];}\nconst int MAXM=MAXN*2;\nint id;\nint dep[MAXM],son[MAXM][2];\nint w[MAXM];\narray<int,2>a[MAXM];\narray<ll,2>b[MAXM];\nint merge(int x,int y)\n{\n    if(!x||!y)return x|y;\n    if(w[x]<w[y])swap(x,y);\n    for(int i=0;i<2;i++)if(~a[y][i])\n    {\n        int z=-1;\n        if(a[x][1]<0)z=1;\n        else\n        {\n            ll v=dis(a[x][0],a[x][1])+b[x][0]+b[x][1];\n            array<ll,2>t;\n\t\t\tfor(int j=0;j<2;j++)t[j]=dis(a[x][j],a[y][i])+b[x][j]+b[y][i];\n\t\t\tif(t[0]>t[1])t[0]>v?z=1:1;\n\t\t\telse t[1]>v?z=0:0;\n        }\n        if(~z)a[x][z]=a[y][i],b[x][z]=b[y][i];\n    }\n    son[x][1]=merge(son[x][1],y);\n    if(dep[son[x][0]]<dep[son[x][1]])swap(son[x][0],son[x][1]);\n    dep[x]=dep[son[x][0]]+1;\n    return x;\n}\n\nstruct node\n{\n    int from,l,x;ll v;\n}ve[MAXM*2];\nint hd[MAXN];\nint tot;\nint rt[MAXN];\nll ans;\nint cnt=0;\nvoid dfs2(int u,int fa)\n{\n    rt[u]=0;\n    for(int i=hd[u];i;i=ve[i].from)\n    {\n    \tauto p=ve[i];\n        for(int i=0;i<2;i++)if(rt[u]&&~a[rt[u]][i])\n        {\n            cmax(ans,dis(p.x,a[rt[u]][i])+b[rt[u]][i]+p.v-2ll*val[u]);  \n        }\n        cnt++;\n        dep[cnt]=0;w[cnt]=p.l;\n        son[cnt][0]=son[cnt][1]=0;\n        a[cnt]={p.x,-1},b[cnt]={p.v,0};\n        rt[u]=merge(rt[u],cnt);\n    }\n    for(int i=head[u];i;i=e[i].from)\n    {\n    \tint v=e[i].v;\n        dfs2(v,u);\n        if(fa)\n        {\n            while(rt[v]&&w[rt[v]]>=u)rt[v]=merge(son[rt[v]][0],son[rt[v]][1]);\n            for(int i=0;i<2;i++)if(rt[u]&&~a[rt[u]][i])\n                for(int j=0;j<2;j++)if(rt[v]&&~a[rt[v]][j])\n                    cmax(ans,dis(a[rt[u]][i],a[rt[v]][j])+b[rt[u]][i]+b[rt[v]][j]-2ll*val[u]);\n            rt[u]=merge(rt[u],rt[v]);\n        }\n    }\n}\ninline void solve()\n{\n    int n=R();\n    for(int i=1;i<=n;i++)head[i]=0;\n    for(int i=1;i<=n;i++)hd[i]=0;\n    cntp=0;\n    for(int i=1,u,v,w;i<n;i++)u=R(),v=R(),w=R(),add(u,v,w);\n    tt=0;\n    dfs(1,0);\n    for(int i=1;i<=K;i++)\n        for(int j=1;j+(1<<i)-1<=n;j++)\n            F[i][j]=Min(F[i-1][j],F[i-1][j+(1<<(i-1))]);\n    int m=R();\n    int u,v;ll w;\n    tot=0;\n    while(m--)\n    {\n        u=R(),v=R(),w=R();\n        int l=LCA(u,v);\n        ll x=dis(u,v)-2ll*w;\n        if(u!=l)ve[++tot]={hd[u],l,v,x+val[u]},hd[u]=tot;\n        if(v!=l)ve[++tot]={hd[v],l,u,x+val[v]},hd[v]=tot;\n    }\n    ans=LONG_LONG_MIN;\n    cnt=0;\n    dfs2(1,0);\n    if(ans==LONG_LONG_MIN)\n    {\n        cout<<\"F\\n\";\n        return;\n    }\n    cout<<ans/2<<'\\n';\n}\nint main()\n{\n\t//ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);cout<<fixed<<setprecision(10);\n\tint T=R();while(T--)solve();\n\treturn 0;\n} \n```\n\n\n\n",
        "postTime": 1683080436,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "P4775 [NOI2018] \u60c5\u62a5\u4e2d\u5fc3"
    },
    {
        "content": "\u6240\u6709\u94fe\u5bf9\u7684\u72b6\u6001\u53ea\u6709\u4e24\u79cd.\n1. ${\\color{grey}{lca}}$ \u4e0d\u540c,\u5373\u6027\u8d28 $S1$\n2. ${\\color{grey}{lca}}$ \u76f8\u540c,\u6309 ${\\color{grey}{lca}}$ \u5206\u522b\u5efa\u865a\u6811\u5373\u4e3a\u6027\u8d28 $S2$\n\n## S1\n\n\u6240\u6709\u94fe\u7684 ${\\color{grey}{lca}}$ \u4e0d\u540c.\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ph3eep8t.png)\n\n\u679a\u4e3e$\\color{red}{{\\color{red}{R}}}$(\u4e24\u6761\u94fe\u6700\u4e0b\u65b9\u7684\u4ea4\u70b9),\u8981\u6700\u5927\u5316\u7684\u662f $len_1+len_2+\\max\\{dep_{{\\color{blue}{B_1}}},dep_{{\\color{blue}{B_2}}}\\}-dep_{\\color{red}{R}}$\n\n\u8bbe $mx=\\max\\{dep_{{\\color{blue}{B_1}}},dep_{{\\color{blue}{B_2}}}\\}$\n\n\u5bf9\u4e8e\u6bcf\u4e2a${\\color{red}{R}}$,\u7ef4\u62a4\n$$f({\\color{red}{R}},mx)=\\max_{mx=\\max\\{dep_{{\\color{blue}{B_1}}},dep_{{\\color{blue}{B_2}}}\\}}\\{len_1+len_2+mx\\}$$\n,\u6ee1\u8db3 ${\\color{green}{G_1}},{\\color{green}{G_2}}$ \u4e0d\u5728 ${\\color{red}{R}}$ \u7684\u540c\u4e00\u68f5\u5b50\u6811\u5185\n\n\u62ff\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\n\n\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8bb0\u4e24\u4e2a\u503c\n\n\n$$A_{s}=\\max_{dep_B\\in s}\\{len+dep\\}$$\n$$B_{s}=\\max_{dep_B\\in s}\\{len\\}$$\n\n### \u5982\u4f55\u66f4\u65b0\u7b54\u6848?\n\n$$ans\\leftarrow B_{T1,[l,mid]}+A_{T2,(mid,r]}$$\n\u8fd9\u662f$T2$\u7684\u94fe\u8f83\u6df1\n\n$$ans\\leftarrow B_{T2,[l,mid]}+A_{T1,(mid,r]}$$\n\u8fd9\u662f$T1$\u7684\u94fe\u8f83\u6df1\n\n\n\n## S2\n\n\u6240\u6709\u94fe\u7684${\\color{grey}{lca}}$\u76f8\u540c.\n\n![\u76d7\u7684\u56fe](https://00ffcc.cf/images/P4775/S2.png)\n\n$$ans=\\frac{dis_{{\\color{blue}{B_1}},{\\color{green}{C_1}}}+dis_{{\\color{blue}{B_2}},{\\color{green}{C_2}}}+dis_{{\\color{blue}{B_1}},{\\color{blue}{B_2}}}+dis_{{\\color{green}{C_1}},{\\color{green}{C_2}}}}{2}-v_{\\textnormal{{\\color{orange}{\u6a59}}\u94fe}}-v_{\\textnormal{{\\color{blue}{\u84dd}}\u94fe}}$$\n\n\u679a\u4e3e\u7ea2\u70b9$\\color{red}{A}$\n\n$$ans=\\frac{1}{2}\\times \\max\\{lenth_{\\textnormal{{\\color{orange}{\u6a59}}\u94fe}}+lenth_{\\textnormal{{\\color{blue}{\u84dd}}\u94fe}}+depth_{{\\color{blue}{B_1}}}+depth_{{\\color{blue}{B_2}}}-depth_{\\color{red}{A}}\\times 2+dis_{{\\color{green}{C_1}},{\\color{green}{C_2}}}-2\\times v_{\\textnormal{{\\color{orange}{\u6a59}}\u94fe}}-2\\times v_{\\textnormal{{\\color{blue}{\u84dd}}\u94fe}}\\}$$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7eff\u70b9 ${\\color{green}{C}}$,\u5efa\u4e00\u4e2a\u65b0\u70b9 ${\\color{green}{C}}'$,\u8fde\u8fb9 ${\\color{green}{C}},{\\color{green}{C}}'$,\u8fb9\u6743\u4e3a $lenth+depth-2\\times v$,\u8fd9\u6837 $ans=\\frac{1}{2}\\times \\max\\{dis({\\color{green}{C_1}}',{\\color{green}{C_2}}')-depth_{\\color{red}{A}}\\times 2\\}$.\n\n\u5176\u4e2d\u9700\u8981\u4fdd\u8bc1\u7684\u662f\u4e24\u4e2a\u84dd\u70b9\u5c5e\u4e8e\u7ea2\u70b9\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811.\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std; \n#define Ri register\ntemplate<typename T>inline T read(Ri T&t)\n{Ri T f=1;Ri char ch=getchar();t=0;\nwhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\nwhile(ch>='0'&&ch<='9')t=t*10+ch-'0',ch=getchar();t*=f;return t;}\ntemplate<typename T,typename...Args>\ninline void read(T&t,Args&...args)\n{read(t);read(args...);}\ntypedef long long ll;\nint n,m;\ntemplate<int T>\nstruct ST\n{\n\tint val[T],lg2[T];\n\tint st[20][T];\n\tinline int MIN(int x,int y){if(val[x]<val[y])return x;return y;}\n\tvoid build(int n,int * X)\n\t{\n\t\tlg2[1]=0;\n\t\tfor(int i=2;i<=n;i++)lg2[i]=lg2[i>>1]+1;\n\t\tfor(int i=1;i<=n;i++)val[i]=X[i];\n\t\tfor(int i=1;i<=n;i++)st[0][i]=i;\n\t\tfor(int i=1;i<=lg2[n];i++)\n\t\t\tfor(int j=1;j+(1<<i)-1<=n;j++)\n\t\t\t\tst[i][j]=MIN(st[i-1][j],st[i-1][j+(1<<i-1)]);\n\t}\n\tint ask(int l,int {\\color{red}{R}}){int len=lg2[{\\color{red}{R}}-l+1];return MIN(st[len][l],st[len][{\\color{red}{R}}-(1<<len)+1]);}\n};\nnamespace T1\n{\n\tint head[50004],ne[100005],to[100005];\n\tll val[100005];\n\tint total=1;\n\tinline void add(int a,int b,ll {\\color{green}{C}})\n\t{\n\t\ttotal++;\n\t\tto[total]=b;\n\t\tval[total]={\\color{green}{C}};\n\t\tne[total]=head[a];\n\t\thead[a]=total;\n\t}\n\tint deep[50004];\n\tll depth[500005];\n\tint dfn[100005],dfn_top;\n\tint in[50004];\n\tint id[100005],id_top;\n\tvoid dfs(int now,int fa)\n\t{\n\t\tdeep[now]=deep[fa]+1;\n\t\tid[now]=++id_top;\n\t\tdfn[++dfn_top]=now;\n\t\tin[now]=dfn_top;\n\t\tfor(int i=head[now];i;i=ne[i])\n\t\t\tif(to[i]!=fa)\n\t\t\t{\n\t\t\t\tdepth[to[i]]=depth[now]+val[i];\n\t\t\t\tdfs(to[i],now);\n\t\t\t\tdfn[++dfn_top]=now;\n\t\t\t}\n\t}\n\tint ideep[100005];\n\tST<200005>st;\n\tvoid build_st()\n\t{\n\t\tdfn_top=id_top=0;dfs(1,0);\n\t\tfor(int i=1;i<=dfn_top;i++)ideep[i]=deep[dfn[i]];\n\t\tst.build(dfn_top,ideep);\n\t}\n\tinline int {\\color{grey}{lca}}(int x,int y)\n\t{\n\t\tx=in[x];y=in[y];if(x>y)swap(x,y);\n\t\treturn dfn[st.ask(x,y)];\n\t}\n\tinline ll dis(int x,int y){return depth[x]+depth[y]-depth[{\\color{grey}{lca}}(x,y)]*2;}\n\tvoid build()\n\t{\n\t\tfor(int i=1;i<=n;i++)head[i]=0;\n\t\ttotal=1;\n\t\tfor(int i=1,x,y;i<n;i++)\t\n\t\t{\n\t\t\tll z;\n\t\t\tread(x,y,z);\n\t\t\tadd(x,y,z);\n\t\t\tadd(y,x,z);\n\t\t}\t\n\t\tbuild_st();\n\t}\n}\nvector<vector<ll> >links[50004];\nnamespace T2\n{\n\tint head[500005],ne[1000005],to[1000005];\n\tll val[1000005];\n\tST<1000005>st;\n\tint total=1;\n\tinline void add(int a,int b,ll {\\color{green}{C}})\n\t{\n\t\ttotal++;\n\t\tto[total]=b;\n\t\tval[total]={\\color{green}{C}};\n\t\tne[total]=head[a];\n\t\thead[a]=total;\n\t}\n\tinline void Add(int a,int b,ll {\\color{green}{C}}){add(a,b,{\\color{green}{C}});add(b,a,{\\color{green}{C}});}\n\tint deep[500005];\n\tll depth[500005];\n\tint dfn[1000005],dfn_top;\n\tint in[500005];\n\tint ideep[500005];\n\tvector<int>rev;\n\tvector<int>par[500005];\n\tpair<int,int>dia[500005];\n\tvoid dfs(int now,int fa)\n\t{\n\t\tdeep[now]=deep[fa]+1;\n\t\tdfn[++dfn_top]=now;\n\t\tin[now]=dfn_top;\n\t\tfor(int i=head[now];i;i=ne[i])\n\t\t\tif(to[i]!=fa)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tdepth[to[i]]=depth[now]+val[i];\n\t\t\t\tdfs(to[i],now);\n\t\t\t\tdfn[++dfn_top]=now;\n\t\t\t}\n\t}\n\tvoid build_st(int rt)\n\t{\n\t\tdfn_top=0;dfs(rt,0);\n\t\tfor(int i=1;i<=dfn_top;i++)ideep[i]=deep[dfn[i]];\n\t\tst.build(dfn_top,ideep);\n\t}\n\tinline int {\\color{grey}{lca}}(int x,int y)\n\t{\n\t\tx=in[x];y=in[y];if(x>y)swap(x,y);\n\t\treturn dfn[st.ask(x,y)];\n\t}\n\tinline ll dis(int x,int y)\n\t{\n\t\tif(x==0&&y==0)return -4e18;\n\t\tif(x==0||y==0)return -2e18;\n\t\treturn depth[x]+depth[y]-depth[{\\color{grey}{lca}}(x,y)]*2;\n\t}\n\tll ans=-2e18;\n\tvoid clear()\n\t{\n\t\ttotal=1;\n\t\tans=-2e18;\n\t\tfor(int i:rev)\n\t\t\thead[i]=0,\n\t\t\tpar[i].clear(),\n\t\t\tdia[i]=make_pair(0,0),\n\t\t\tdepth[i]=deep[i]=0;\n\t\trev.clear();\n\t}\n\tll dis(pair<int,int>A){return dis(A.first,A.second);}\n\tpair<int,int>merge(pair<int,int>A,pair<int,int>B)\n\t{\n\t\tll a,b,{\\color{green}{C}},d,e,f;\n\t\tll re=max({\n\t\t\t\ta=dis(A),\n\t\t\t\tb=dis(B),\n\t\t\t\t{\\color{green}{C}}=dis({A.first,B.first}),\n\t\t\t\td=dis({A.first,B.second}),\n\t\t\t\te=dis({A.second,B.first}),\n\t\t\t\tf=dis({A.second,B.second})});\n\t\tif(a==re)return A;\n\t\tif(b==re)return B;\n\t\tif({\\color{green}{C}}==re)return {A.first,B.first};\n\t\tif(d==re)return {A.first,B.second};\n\t\tif(e==re)return {A.second,B.first};\n\t\tif(f==re)return {A.second,B.second};\n\t}\n\tpair<int,int> solve(vector<int>&pos)\n\t{\n\t\tif(pos.size()==0)return {0,0};\n\t\tauto re=make_pair(0,0);\n\t\tfor(int i:pos)re=merge(re,make_pair(0,i));\n\t\treturn re;\n\t}\n\tinline ll calc(pair<int,int>A,pair<int,int>B)\n\t{\n\t\treturn max({\n\t\t\t\tdis(A.first,B.first),\n\t\t\t\tdis(A.first,B.second),\n\t\t\t\tdis(A.second,B.first),\n\t\t\t\tdis(A.second,B.second)});\n\t}\n\tvoid solve(int now,int fa)\n\t{\n\t\tdia[now]=solve(par[now]);\n\t\tll depth=T1::depth[now];\n\t\tans=max(ans,dis(dia[now])-depth*2);\n\t\tfor(int i=head[now];i;i=ne[i])\n\t\t\tif(to[i]!=fa)\n\t\t\t{\n\t\t\t\tsolve(to[i],now);\n\t\t\t\tans=max(ans,calc(dia[now],dia[to[i]])-depth*2);\n\t\t\t\tdia[now]=merge(dia[now],dia[to[i]]);\n\t\t\t}\n\t}\n\tll build(vector<vector<ll> >& links,int rt)\n\t{\n\t\tstatic int opt[500005];int opt_top=0;\n\t\tfor(auto&i:links)\n\t\t\topt[++opt_top]=i[0],\n\t\t\topt[++opt_top]=i[1];\n\t\tsort(opt+1,opt+opt_top+1);\n\t\topt_top=unique(opt+1,opt+opt_top+1)-opt-1;\n\t\tsort(opt+1,opt+opt_top+1,[&](int x,int y){return T1::id[x]<T1::id[y];});\n\t\trev.clear();\n\t\tstatic int st[500005];int st_top;\n\t\tst[st_top=1]=rt;rev.push_back(rt);\n\t\tfor(int i=(opt[1]==rt?2:1);i<=opt_top;i++)\n\t\t{\n\t\t\tint x=opt[i],y=T1::{\\color{grey}{lca}}(st[st_top],x);\n\t\t\twhile(st_top>1&&T1::id[y]<=T1::id[st[st_top-1]])\n\t\t\t\tAdd(st[st_top-1],st[st_top],T1::dis(st[st_top],st[st_top-1])),\n\t\t\t\trev.push_back(st[st_top--]);\n\t\t\tif(st[st_top]!=y)\n\t\t\t\tAdd(st[st_top],y,T1::dis(y,st[st_top])),\n\t\t\t\trev.push_back(st[st_top]),\n\t\t\t\tst[st_top]=y;\n\t\t\tst[++st_top]=x;\n\t\t}\n\t\twhile(st_top>1)\n\t\t\tAdd(st[st_top-1],st[st_top],T1::dis(st[st_top],st[st_top-1])),\n\t\t\trev.push_back(st[st_top--]);\n\t\tint cnt=n;\n\t\tfor(auto & i:links)\n\t\t{\n\t\t\tll lenth=T1::dis(i[0],i[1]);\n\t\t\tAdd(i[0],++cnt,lenth+T1::depth[i[1]]-i[2]*2);\n\t\t\tpar[i[1]].push_back(cnt);rev.push_back(cnt);\n\t\t\tAdd(i[1],++cnt,lenth+T1::depth[i[0]]-i[2]*2);\n\t\t\tpar[i[0]].push_back(cnt);rev.push_back(cnt);\n\t\t}\n\t\tbuild_st(rt);\n\t\tfor(int i=head[rt];i;i=ne[i])solve(to[i],rt);\n\t\tll re=ans;clear();return re/2;\n\t}\n}\nnamespace S1\n{\n\tvector<pair<int,ll> >jav[50005];\n\tll ans=-1e18;\n\tstruct SGT\n\t{\n\t\tint lcs,rcs;\n\t\tll AF,BF;\n\t\t#define mid ((l+{\\color{red}{R}})>>1)\n\t\t#define lc v[p].lcs\n\t\t#define rc v[p].rcs\n\t\t#define A v[p].AF\n\t\t#define B v[p].BF\n\t}v[2000005];\n\tint tot=0;\n\tinline void push_up(int p)\n\t{\n\t\tA=B=-1e18;\n\t\tif(lc)A=max(v[lc].AF,A),B=max(v[lc].BF,B);\n\t\tif(rc)A=max(v[rc].AF,A),B=max(v[rc].BF,B);\n\t}\n\tll Ans;\n\tvoid revise(int l,int {\\color{red}{R}},int&p,ll len,ll dep,int pos)\n\t{\n\t\tif(p==0)p=++tot,A=B=-2e18,lc=rc=0;\n\t\tif(l=={\\color{red}{R}})return A=max(A,len+dep),B=max(B,len),void();\n\t\tif(pos<=mid)\n\t\t{\n\t\t\tif(rc)Ans=max(Ans,len+v[rc].AF);\n\t\t\trevise(l,mid,lc,len,dep,pos);\n\t\t}\n\t\tif(mid+1<=pos)\n\t\t{\n\t\t\tif(lc)Ans=max(Ans,len+dep+v[lc].BF);\n\t\t\trevise(mid+1,{\\color{red}{R}},rc,len,dep,pos);\n\t\t}\n\t\tpush_up(p);\n\t}\n\tvoid merge(int l,int {\\color{red}{R}},int & p,int q)\n\t{\n\t\tif(q==0)return;if(p==0)return p=q,void();\n\t\tif(l=={\\color{red}{R}})return A=max(A,v[q].AF),B=max(B,v[q].BF),void();\n\t\tif(v[p].lcs&&v[q].rcs)Ans=max(Ans,v[v[p].lcs].BF+v[v[q].rcs].AF);\n\t\tif(v[p].rcs&&v[q].lcs)Ans=max(Ans,v[v[p].rcs].AF+v[v[q].lcs].BF);\n\t\tmerge(l,mid,lc,v[q].lcs);\n\t\tmerge(mid+1,{\\color{red}{R}},rc,v[q].rcs);\n\t\tpush_up(p);\n\t}\n\tvoid remove(int l,int {\\color{red}{R}},int p,int pos)\n\t{\n\t\tif(p==0)return;\n\t\tif(l=={\\color{red}{R}})return A=B=-2e18,lc=rc=0,void();\n\t\tif(pos<=mid)remove(l,mid,lc,pos);\n\t\tif(mid+1<=pos)remove(mid+1,{\\color{red}{R}},rc,pos);\n\t\tpush_up(p);\n\t}\n\t#undef mid\n\t#undef lc\n\t#undef rc\n\t#undef A\n\t#undef B\n\tint root[50005];\n\tvoid solve(int now,int fa)\n\t{\n\t\tAns=-2e18;\n\t\tfor(auto&i:jav[now])\n\t\t\trevise(1,n,root[now],i.second,T1::depth[i.first],T1::deep[i.first]);\n\t\tll tmp=Ans;\n\t\tfor(int i=T1::head[now];i;i=T1::ne[i])\n\t\t\tif(T1::to[i]!=fa)\n\t\t\t{\n\t\t\t\tsolve(T1::to[i],now);\n\t\t\t\tAns=-2e18;\n\t\t\t\tmerge(1,n,root[now],root[T1::to[i]]);\n\t\t\t\ttmp=max(Ans,tmp);\n\t\t\t}\n\t\tans=max(ans,tmp-T1::depth[now]);\n\t\tif(now!=1)remove(1,n,root[now],T1::deep[now]-1);\n\t}\n\tvoid clear()\n\t{\n\t\ttot=0;\n\t\tans=-1e18;\n\t\tfor(int i=1;i<=n;i++)root[i]=0;\n\t}\n\tll solve()\n\t{\n\t\tclear();\n\t\tsolve(1,0);\n\t\treturn ans;\n\t}\n}\nvoid solve()\n{\n\tread(n);\n\tT1::build();\n\tfor(int i=1;i<=n;i++)links[i].clear();\n\tread(m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tll x,y,z;\n\t\tread(x,y,z);\n\t\tif(x==y)continue;\n\t\tint lc=T1::{\\color{grey}{lca}}(x,y);\n\t\tlinks[lc].push_back({x,y,z});\n\t\tll lenth=T1::dis(x,y);\n\t\tif(x!=lc)S1::jav[x].push_back({lc,lenth-z});\n\t\tif(y!=lc)S1::jav[y].push_back({lc,lenth-z});\n\t}\n\tll ans=-1e18;\n\tans=max(ans,S1::solve());\n\tfor(int i=1;i<=n;i++)S1::jav[i].clear();\n\tfprintf(stderr,\"S1::ans=%lld\\n\",S1::ans);\n\tfor(int i=1;i<=n;i++)\n\t\tif(links[i].size()>1)\n\t\t\tans=max(ans,T2::build(links[i],i));\t\n\tif(ans<=-1e17)printf(\"F\\n\");\n\telse printf(\"%lld\\n\",ans);\n}\nint main()\n{\n\tint T;read(T);\n\twhile(T--)solve();\n\treturn 0;\n}\n```",
        "postTime": 1612837177,
        "uid": 114409,
        "name": "9AC8E2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4775 \u3010[NOI2018] \u60c5\u62a5\u4e2d\u5fc3\u3011"
    }
]